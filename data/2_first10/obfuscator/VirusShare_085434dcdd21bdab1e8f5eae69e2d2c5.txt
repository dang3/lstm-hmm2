add
add
incl
add
pusha
adc
add
adc
add
adc
add
pusha
adc
add
jb
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
lea
push
mov
push
call
lret
add
adc
add
adc
add
pusha
adc
add
cld
pop
pop
ret
mov
push
mov
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
lea
push
mov
push
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
nop
jmp
inc
cmpb
jne
inc
ret
mov
add
ret
push
mov
add
push
push
push
mov
add
mov
mov
cmpl
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmpl
jne
push
call
mov
mov
call
mov
mov
add
mov
test
jbe
mov
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
cmpl
jne
mov
mov
add
mov
add
mov
push
push
mov
push
call
mov
mov
add
add
mov
add
lea
push
push
push
push
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
int3
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
push
push
pop
pop
pop
pop
pop
pusha
call
ret
pop
pop
push
add
push
add
orb
add
add
add
add
add
and
add
lret
add
add
notb
add
add
add
add
add
data16
add
add
add
adc
inc
adc
add
add
add
add
adc
pusha
dec
add
inc
aam
add
dec
sbb
add
inc
adc
add
sbb
jo
add
xchg
or
inc
test
push
cmp
add
or
call
mov
aad
cmp
add
movb
add
pop
inc
and
and
and
adcb
mov
mov
sub
push
cmp
add
xchg
test
and
jbe
add
pop
fadds
stc
enter
xlat
outsl
fdivs
idiv
pop
jmp
daa
cmp
loopne
nop
dec
jecxz
outsb
loopne
jns
scas
jl
push
sub
or
or
push
mov
loopne
shrl
dec
push
js
cmpl
sub
hlt
leave
cmp
lods
cmp
add
xchg
cmc
and
ja
in
add
call
sbb
xor
std
je
and
or
paddb
adc
shlb
jbe
mov
bound
pop
or
fdivrl
out
ljmp
movsl
notb
sub
leave
stc
adc
or
inc
jle
cmp
addl
jmp
pushf
add
lret
test
outsl
adc
movsb
or
push
ret
inc
out
ds
loopne
out
add
jp
sub
nop
push
add
lcall
inc
mov
add
aad
fwait
add
sbb
sbb
in
add
or
outsl
push
jo
ss
add
in
and
adc
repnz
les
inc
dec
cmp
pop
outsb
jns
jo
or
int3
popf
jo
lock
push
lahf
cltd
cmp
add
add
adc
mov
mov
add
clc
or
dec
imul
cmc
scas
adc
and
je
setle
repz
rcl
gs
pop
inc
daa
jmp
shrb
xor
inc
add
push
cwtl
and
nop
adc
cmp
into
shlb
in
fbstp
pop
xchg
push
cmp
leave
add
xor
jo
hlt
adc
ret
xor
rcrb
pop
xchg
cmp
lret
adc
inc
mov
and
pop
xor
add
clc
pop
push
rol
mov
adc
add
out
stc
fs
adc
stos
pop
xor
push
add
je
into
lcall
lcall
xor
push
jmp
cmp
daa
xchg
or
cmp
cmp
into
mov
sbb
sahf
sbb
pushl
pop
add
into
adc
je
hlt
pop
add
test
mov
pop
cmp
les
add
inc
xchg
jbe
add
jge
cltd
loopne
pushl
push
jnp
repz
push
fstps
lret
insl
aad
ja
and
sarb
repnz
mov
cmc
mov
std
out
xchg
lahf
mov
and
add
aas
mov
and
sbb
pop
orb
outsl
add
insb
ret
addr16
mov
jge
inc
loop
add
add
cmp
mov
mov
out
push
and
shll
cmpb
iret
jbe
xchg
push
in
icebp
push
aas
imul
add
mov
dec
hlt
pop
add
jg
call
fcoml
push
les
ljmp
sti
cmp
mov
xorl
mov
fsubrs
push
sti
out
cmp
mov
sahf
scas
or
add
sbb
test
outsb
inc
pop
and
rcrb
add
pop
stos
inc
mov
out
pop
lock
popa
and
mov
cmp
adc
scas
add
enter
incb
adc
sbb
xchg
in
pop
sub
inc
lock
loop
mov
jo
jbe
xor
dec
add
addb
out
dec
addr16
cli
add
leave
repz
or
sahf
add
push
cmp
imul
mov
cld
sarb
lock
jne
lds
cli
sbb
or
jmp
scas
pop
cmc
cmp
test
scas
pusha
popa
hlt
pop
add
rol
push
mov
shl
push
clc
jle
add
xchg
inc
scas
insl
pop
pushf
jp
add
movsb
mov
mov
test
leave
sbb
or
fprem1
pop
mov
sti
xor
dec
add
insb
mov
mov
or
mov
cmpb
scas
or
adc
int3
pop
insb
push
jg
push
loopne
cmc
cmpsl
incb
repz
xor
push
add
out
inc
jp
cmp
mov
xlat
cwtl
xor
adc
into
repnz
push
roll
push
adc
cmp
aaa
addr16
add
int3
add
in
in
fildl
aam
fdivrs
ljmp
pusha
xor
push
cmpsb
mov
xchg
mov
mov
mov
sbb
mov
or
mov
add
xchg
fcompl
mov
clc
jae
repz
shr
add
pop
clc
dec
outsb
aaa
loopne
add
push
jmp
lods
ja
clc
add
mov
mov
inc
pop
inc
hlt
js
cwtl
push
pop
dec
mov
push
adc
lret
xor
xor
add
les
pop
xchg
das
add
sub
inc
add
imul
mov
call
adc
mov
adc
jbe
push
cld
data16
lods
adc
push
xchg
adc
cs
mov
push
sbb
hlt
add
sub
add
xchg
inc
mov
out
bound
add
xchg
cs
add
inc
sti
shrl
xchg
shr
sub
add
outsl
adcb
or
addl
mov
hlt
xor
rol
xchg
cmp
popa
xor
inc
and
je
inc
pop
shll
adc
dec
jle
and
movsb
inc
andb
sub
ja
cltd
xchg
xor
add
push
aas
jb
outsb
jno
pushf
iret
seto
test
adc
inc
mov
xchg
inc
add
jg
mov
test
and
aaa
lcall
inc
loop
cmp
or
jno,pn
add
adc
mov
cmpsb
dec
xor
mov
xchg
fbstp
arpl
xchg
push
pop
mov
add
mov
add
xor
dec
sbb
push
bound
loope
loop
add
lock
andl
and
nop
and
dec
add
mov
scas
xor
cmpsl
movsb
lds
pop
call
xorb
add
mov
add
lods
orl
loop
mov
popa
mov
add
sbb
mov
push
push
popa
xor
sub
subb
xor
mov
pop
aad
xor
dec
mov
add
cmp
cmp
stos
and
adc
lock
cmp
adc
mov
mov
dec
orb
pcmpgtw
pop
subl
fadds
test
push
imul
dec
popf
add
push
and
lods
mov
mov
xchg
inc
out
add
or
addr16
inc
pusha
add
mov
or
cld
movsl
pop
fistpll
cmc
add
xor
stos
sbb
cmp
jno
mov
push
push
add
add
pop
cmp
xor
dec
or
sahf
pusha
pop
add
aad
push
add
xchg
push
out
or
inc
push
push
push
fistps
mov
into
pop
out
add
inc
sub
add
aaa
loopne
les
add
je
sbbl
add
std
bound
inc
dec
xchg
sbb
add
pop
add
addb
jl
insl
ret
out
cmpsb
cld
sub
xor
add
xchg
pusha
add
mov
xchg
cmpsb
cli
fiaddl
movsb
pop
xchg
std
shlb
and
adc
add
sbb
cwtl
repnz
add
cmc
xor
aam
xchg
cmp
cmp
loope
add
and
push
sbb
in
xlat
add
jg
stos
dec
sarb
mov
inc
clc
sub
add
adc
sub
push
pop
mov
ficoms
ret
cli
test
rclb
adc
stos
push
add
push
inc
or
es
incb
xor
xchg
pop
aad
pmaxsw
out
push
or
ret
mov
mov
sar
lea
mov
cmpsb
pop
push
stc
xchg
rcrl
cmp
lahf
sub
bound
stos
xor
xchg
enter
cmp
sarl
in
lock
ljmp
jae
sub
lock
ljmp
mov
xchg
mov
lea
push
sbb
or
je
cwtl
jnp
add
mov
cld
pop
pop
add
and
jbe
push
adc
add
mov
inc
add
or
pop
add
es
mov
int3
mov
pop
dec
test
mov
or
lds
sar
pop
xchg
stos
in
test
fbld
jmp
pop
test
js
add
nop
pop
movsb
jae
add
loope
dec
add
adc
push
rorl
addr16
test
xorb
add
xchg
scas
cmc
rcrb
cmpb
xchg
dec
fadd
movsl
add
rol
adc
jnp
aad
or
lds
xchg
pop
aas
push
mov
stc
mov
loopne
ret
lcall
xor
add
and
leave
adc
pop
shlb
or
stc
pop
push
jae
shrb
mov
mov
dec
xchg
in
add
sub
and
push
sarb
pop
test
in
or
adc
lahf
push
add
inc
xchg
insb
and
cld
mov
sub
subb
pop
fs
aas
inc
cmpsb
mov
jo
mov
adc
jne
add
push
mov
adc
stc
js
add
mov
mov
add
xor
rolb
lods
stos
adc
fadds
lret
and
or
mov
out
out
xor
xor
add
cmpsb
adc
jae
cwtl
jo
adc
pop
add
xchg
sarb
sub
cmpsb
sub
loopne
sbb
cmp
sub
push
aas
sbb
and
sti
dec
jbe
clc
dec
mov
inc
push
hlt
rorb
pop
and
stos
icebp
add
push
xchg
jmp
jg
pop
dec
pusha
test
addr16
sbb
pop
mov
mov
or
adc
jg
scas
dec
xchg
inc
in
jnp
pusha
inc
cmc
mov
fistl
xchg
cmp
adcb
inc
sub
and
in
mov
xchg
pusha
in
ja
lods
stc
insl
add
add
movsl
jge
xor
add
lcall
push
fldenv
shrb
cmp
mov
nop
call
push
xorb
mov
mov
cmp
int3
lea
adc
rolb
add
xor
xchg
mov
dec
mov
nop
xchg
and
add
push
xor
mov
pop
jge
test
mov
add
je
mov
dec
pop
leave
add
insl
add
lcall
hlt
out
push
sub
push
and
mov
dec
jbe
in
test
pop
cwtl
popa
xor
add
jnp
loope
mov
add
mov
incl
pop
pop
mov
call
loope
adc
mov
movsl
push
dec
and
add
movsb
add
mov
inc
xor
inc
outsl
add
into
jle
cmpl
mov
add
cltd
adc
mov
dec
icebp
shl
sub
shlb
ja
jg
ds
ret
cmp
dec
testl
push
add
call
int3
and
add
jmp
stc
out
add
ds
mov
mov
pusha
cli
test
sahf
addr16
add
cwtl
and
add
xor
mov
add
ljmp
cmp
add
inc
insb
push
add
cmp
mov
sbb
jmp
or
jecxz
jns
jno
mov
mov
xlat
mov
in
daa
add
jae
sub
sub
out
cmc
mov
mov
fbstp
aas
in
lods
jo
add
adc
mov
mov
add
and
push
rcr
xchg
add
out
out
dec
cmp
sarb
fsubs
pop
xchg
and
inc
dec
in
mov
insb
xor
fs
mov
adcb
arpl
add
mov
movsl
filds
outsl
sub
shrl
xchg
mov
cmp
cwtl
add
push
ljmp
andl
leave
enter
addb
dec
sub
cmp
mov
mov
and
jb
pop
mov
add
aas
or
ds
adc
push
jg
rcrb
jecxz
in
add
scas
xor
imul
aaa
push
movsl
add
shl
lret
sub
add
or
add
hlt
fsubrs
add
cmp
inc
loop
in
xlat
cmpl
arpl
mov
aaa
push
out
add
mov
add
mov
xorl
or
fstps
cmpb
int
frstor
inc
cmp
mov
jmp
ja
sub
aaa
push
pusha
loop
cmp
popa
jg
add
out
lea
jns
loop
jle
cltd
cmp
mov
mov
in
lahf
cmp
push
out
jo
jmp
add
out
mov
mov
xchg
clc
fwait
icebp
fstpl
add
in
lods
jne
xchg
aad
mov
je
pushf
inc
xchg
pop
add
cmp
sarb
lods
push
rcrb
in
add
push
mov
jmp
push
jle
and
in
clc
xchg
mov
shl
je
xchg
add
push
mov
outsb
test
out
repz
lods
shr
pop
xor
popa
jge
pop
xchg
xchg
xchg
inc
adc
sahf
int
xor
sbb
insb
out
psubsw
sahf
push
fmuls
add
pop
fwait
les
repnz
lock
mov
cmp
cli
add
enter
jne
xchg
cmp
icebp
add
inc
ret
and
jl
push
inc
clc
inc
lods
xchg
add
add
jo
xchg
clc
cld
and
cmp
add
mov
dec
mov
ret
pushf
pop
mov
lods
jge
lret
js
jl
cli
push
scas
pop
jmp
outsl
or
add
inc
out
push
jno
jo
sti
jnp
cmp
aas
test
popf
loop
sarl
jo
xlat
ss
aam
add
jbe
mov
lret
add
mov
aas
add
in
push
jmp
and
into
repz
test
sahf
cmpsb
mov
add
sbb
movsb
pop
stos
les
cltd
popf
mov
and
lcall
les
push
test
xchg
insb
add
or
sbb
out
jb
loop
adc
jg
or
cmpsl
out
add
test
jp
add
es
fwait
lods
xchg
out
add
pop
cmpsl
xchg
loop
mov
cmp
push
jl
xorb
in
cmpl
lret
insb
out
repnz
pop
pop
insl
push
cmpsl
cmp
add
sub
in
out
mov
out
sbb
pushf
clc
repnz
mov
loop
add
mov
jns
push
imul
stos
push
loop
ljmp
pop
lret
inc
xchg
mov
inc
jns
push
dec
ss
add
mov
sbb
add
aas
nop
enter
adc
pop
imull
enter
mov
adc
xor
add
repz
adc
push
outsb
add
mov
popa
add
lock
cmp
pusha
xchg
mov
cmp
sub
mov
pop
stc
dec
out
dec
push
fsubl
add
sub
jb
lods
je
bound
inc
xchg
lahf
mov
cs
hlt
sub
subb
xchg
jl
jno
test
xor
add
test
and
arpl
add
and
mov
add
ss
xor
cld
rorb
dec
cmp
js
inc
shrb
jle
dec
dec
lock
pop
add
cmp
add
test
push
sub
mov
scas
push
das
mov
xchg
hlt
dec
inc
mov
push
and
pop
les
clc
push
xchg
jbe
and
jmp
push
cmpsb
lcall
mov
mov
push
xlat
nop
sbb
mov
mov
and
add
mov
push
cmp
jns
pop
add
add
or
rclb
rcr
add
mov
lds
jbe
into
push
inc
mov
or
add
call
xchg
fisttpl
inc
add
jbe
xor
fucomip
cld
and
negl
stos
pop
mov
jle
pop
add
jo
ret
cmp
imul
mov
adc
mov
pop
add
aad
out
push
loope
cmp
adc
sub
pushf
ret
lahf
loop
add
out
inc
outsb
add
out
inc
leave
inc
xor
icebp
sbbb
pusha
psadbw
add
push
inc
mov
xor
call
add
pop
add
fidivs
imul
inc
push
jg
jl
int
ret
jbe
out
fiadds
xor
imul
adcl
jno
and
inc
jo
movsb
outsl
sub
loopne
xor
xor
ret
mov
in
and
rcl
lahf
gs
cmp
call
xor
pop
mov
fidivrs
jo
movsb
popl
mov
aas
mov
call
mov
loope
add
mov
sbb
jbe
add
scas
rcrl
adc
jo
cmp
xchg
cmp
jge
ret
add
push
hlt
push
fcomip
cld
and
in
jne
pop
cs
sub
jp
jbe
push
pop
int3
mov
xchg
lea
test
fnstsw
sbb
fidivrs
adc
add
lcall
add
scas
rcr
pop
jmp
lock
dec
mov
syscall
fs
push
pop
inc
lea
add
xor
sarb
cli
fs
testl
call
jle
or
inc
leave
mov
jecxz
ja
and
stos
aam
enter
dec
cmc
ss
and
mov
pop
add
jo
andl
ds
mov
fiaddl
xchg
shufps
sar
aad
les
mov
fcomps
ret
cld
add
cmc
outsb
mov
push
fisttpl
test
je
test
xor
enter
dec
cs
cmp
add
xchg
das
inc
jae
lods
sbb
mov
jbe
jne
inc
sub
outsl
jl
mulb
sub
fisubl
jo
pop
cmpsl
das
js
add
pop
addl
loopne
aaa
mov
add
jbe
in
ja
mov
shl
bound
pop
lock
lds
aam
add
sub
add
mov
jne
add
push
mov
add
sbb
imul
jno
push
aas
addl
mov
inc
cld
sub
ret
int3
jge
mov
add
rol
mov
add
shll
lret
cli
rorl
in
arpl
movsl
imul
add
icebp
int
ret
testb
popa
pusha
pop
iret
inc
mov
cmp
ror
adc
push
mov
jle
sub
fistpll
setp
pop
and
pop
sbb
nop
cld
add
lea
out
adc
repnz
cmp
push
dec
clc
lret
sub
add
inc
aaa
nop
movsb
xor
enter
rorl
inc
and
push
jnp
lcall
xchg
es
add
stc
xchg
jp
out
add
daa
mov
and
mov
cli
mov
jl
add
xchg
imul
add
push
daa
sbb
aas
add
dec
jecxz
mov
sub
dec
push
in
add
aam
xchg
mov
lahf
add
test
add
cli
pop
adc
inc
cltd
add
stos
outsl
dec
insl
rcrl
add
ljmp
in
push
cs
or
mov
inc
addr16
jg
xor
jle
xor
and
or
cmp
sbbb
add
pop
frstpm(287
shlb
addr16
pop
mov
scas
or
mov
pop
cmp
test
aaa
xor
mov
pop
sahf
iret
add
dec
mov
int3
mov
fsubl
adc
imul
add
jno
sarb
xlat
xchg
in
xor
add
xor
dec
dec
cmpsb
add
push
add
adc
scas
mov
add
mov
fisttpl
xor
pop
mov
mov
mov
adc
add
in
aaa
dec
cmc
out
add
adc
push
pop
cmp
push
jns
pusha
add
adc
fcmovbe
str
daa
and
test
popf
pop
cli
xorb
aas
orb
jns
lea
pop
push
stos
std
cmp
and
stc
int3
inc
add
call
pop
aad
mov
inc
shrl
cmp
cltd
jge
add
xor
pop
ja
fdivl
add
addr16
cmp
push
mov
jle
dec
add
mov
pop
xchg
adc
jecxz
ud0
and
aas
loop
add
pop
xor
sub
add
mulb
mov
dec
mov
mov
push
pop
push
jo
jbe
sbb
pop
leave
sub
pop
lods
decl
fcmovnbe
popf
mov
add
aad
insl
jno
jge
add
cmp
stc
insb
lods
sbb
or
movsb
les
call
lcall
jo
add
xchg
popa
sub
cmp
stos
jbe
fcomps
pop
nop
xor
lods
dec
add
jge
shlb
mov
push
add
loope
out
mov
jmp
jle
dec
and
cmp
inc
xorb
data16
push
dec
sbb
push
mov
cmp
loop
add
shr
lods
adc
add
movsl
out
insl
fisttps
xor
push
add
lret
cwtl
jb
lahf
loop
dec
add
jp
lock
stc
iret
loopne
add
rclb
lahf
adc
mov
call
add
sbb
gs
mov
cmpsb
and
pop
adc
pop
andb
adc
mov
nop
mov
jle
bound
lret
pop
fistpll
ret
lahf
sub
dec
jnp
and
mov
dec
in
aam
fstpl
enter
mov
push
jmp
xchg
mov
adc
lock
add
push
js
aas
cld
incb
inc
mov
aam
jne
shl
int
jae
add
mov
aam
out
je
mov
jae
xchg
pop
cmc
lcall
hlt
jnp
cltd
add
das
mov
repnz
or
mov
in
dec
jno
jl
push
mov
add
sbb
jo
nop
mov
test
push
scas
mov
jge
push
or
int3
mov
ljmp
and
mov
jl
jmp
mov
lcall
rorl
or
dec
jl
add
outsb
and
sbb
icebp
setbe
popf
add
jl
sbb
sub
sbb
sbb
mov
pop
mov
popa
cmpsb
iret
xchg
enter
arpl
mov
mov
lret
incb
lcall
sbb
push
and
outsb
mov
dec
fs
mov
jl
in
push
pop
ss
lahf
cmp
in
adc
and
dec
add
adcl
cmc
aad
ret
aam
mov
mov
sub
add
cmp
jne
rolb
mov
out
adc
add
imul
cwtl
jbe
mov
stc
negb
pop
outsl
es
into
xchg
dec
les
add
aad
sbb
and
stc
mov
pop
test
outsb
pop
aad
xchg
jo
adc
stos
testb
mov
add
std
jae
pop
lods
jns
fs
xor
pop
mov
or
ljmp
fst
in
dec
gs
add
in
movsl
xchg
xor
push
ds
xor
pusha
mov
xor
loopne
xchg
mov
jae
and
or
push
add
sub
xchg
sbb
outsb
sub
add
sub
mov
outsb
add
sub
daa
mov
push
fstpt
mov
adc
movsl
arpl
mov
xor
pop
gs
lods
rcr
cli
cmp
jecxz
mov
mov
add
push
test
push
aaa
cld
mov
add
pop
js
popa
cmp
cmp
aam
adc
lods
adc
or
cli
std
sbb
pop
or
add
adc
mov
or
int
xchg
out
out
iret
push
in
insl
dec
jo
inc
add
lahf
cltd
mov
fnstenv
add
in
cmp
aaa
repz
movsb
mov
push
add
xchg
in
cli
mov
into
stc
ficompl
cmpb
adc
and
adc
les
lds
addl
or
out
jmp
lock
sub
repz
xchg
aas
cmp
inc
stc
cmp
add
out
aas
push
pop
jp
or
rcr
mov
or
shlb
sbbb
cmovs
fbld
test
xor
lret
lahf
add
in
sar
adc
pop
loop
inc
jo
dec
xchg
add
out
test
add
mov
aas
jge
add
unpckhps
and
cld
pop
jle
cmp
movsl
sbb
cmovp
aad
cwtl
and
mov
movsb
jmp
les
jmp
xchg
jns
inc
ret
mov
mov
fsts
add
and
icebp
push
movsl
movb
jne
or
inc
push
add
and
clc
cld
pushl
or
shlb
mov
add
mov
pop
arpl
mov
xchg
and
stc
sti
sbb
cmc
jne
add
xchg
sub
addr16
adc
xlat
aad
add
mov
cmp
jg
cli
xor
iret
stos
xchg
notb
lods
andl
jne
add
fldt
loope
jno
lock
add
jnp
jl
add
pop
ss
add
mov
fcomip
cmp
cmp
dec
in
push
sbb
jae
fstl
adc
outsb
cltd
std
mov
test
add
aam
testl
out
cmpsb
es
cs
xchg
stos
addr16
xor
inc
and
shrl
jnp
int3
pop
jmp
sahf
rcrb
xlat
lock
sbb
xchg
movsb
jns
or
jae
and
inc
or
mov
pusha
pusha
cmp
add
sahf
iret
push
jp
or
mov
sti
mov
out
test
jno
push
add
inc
mov
mov
lea
mov
xchg
cmp
add
shlb
mov
pop
out
and
xchg
jle
out
mov
cmp
loopne
cmp
imul
testl
dec
xchg
xchg
out
dec
jno
stos
ret
daa
adc
pop
sub
xchg
lea
movb
cwtl
jge
jnp
shll
cmp
repnz
jp
cmpsb
sbb
add
jo
pop
loop
add
icebp
lret
xchg
and
jae
xchg
cmp
sbb
mov
sub
cmpsb
add
jmp
jg
xor
sub
push
add
sbb
add
sbb
sub
pop
add
mov
xchg
add
aam
psubusb
js
pusha
ficomps
or
subb
pop
repnz
faddl
mov
daa
stc
mov
jae
push
push
lock
cli
fstps
les
add
dec
push
mov
mov
addw
ja
sbb
xchg
xchg
sub
imul
xchg
cmp
dec
push
xor
test
lahf
inc
xor
add
xchg
and
icebp
mov
or
loope
add
je
out
dec
lcall
inc
sti
rolb
mov
or
jae
add
cmc
bound
mov
add
std
mov
xor
jecxz
mov
mov
test
popf
xchg
ficoms
jae
cmpsl
mov
add
mov
fiaddl
int
js
cltd
pop
mov
add
pop
pop
dec
shrl
mov
pop
dec
add
rclb
mov
dec
jbe
xlat
mov
and
fldl
add
cltd
pop
dec
mov
sub
add
jnp
cmp
xchg
data16
fisttpll
add
or
pop
lods
or
insb
js
mov
les
xchg
fsubrl
and
insl
roll
push
mov
lahf
imul
xorb
pop
inc
xchg
outsl
fsubrp
cmpsl
ja
add
sbb
adc
loop
add
cli
ja
add
mov
inc
push
inc
pop
dec
or
add
adc
push
stc
fwait
push
push
in
jecxz
sbb
mov
or
add
jbe
fs
fwait
add
mov
add
mov
pop
xchg
orb
add
pop
je
inc
pop
add
ljmp
cmpsl
or
mov
ffreep
dec
roll
sbb
jle
cmc
mov
push
xchg
mov
add
jle
sbb
movsb
insl
mov
aad
iret
rorb
cmc
cmp
mov
stc
cmp
dec
mov
mov
fwait
lds
inc
ljmp
test
out
pushf
add
xchg
sbb
add
sub
mov
mov
fldenv
inc
aad
lods
mov
fwait
jns
out
icebp
popf
mov
fsubrl
enter
add
mov
repnz
mov
pop
mov
and
call
test
inc
data16
cmp
push
lods
pop
cmp
add
dec
add
xchg
repnz
add
mov
popa
je
inc
test
lea
mov
fisubs
push
add
mov
mov
push
mov
test
jmp
cmp
pop
aam
pushf
dec
test
pop
adc
cmpsl
mov
push
pop
lcall
mov
pop
incl
rorl
add
cli
out
push
pop
adc
xor
sub
mov
mov
mov
mov
sahf
push
movsb
les
dec
pop
pushf
arpl
push
pop
cmp
adc
popf
incb
jne
nop
loop
rorb
pop
add
daa
mov
lea
add
cmp
or
add
mov
int3
enter
dec
movl
sub
cmpb
mov
cmpsb
cmp
cmp
or
mov
sub
negl
mov
lahf
rorb
mov
and
add
loopne
fidivs
jmp
ds
xchg
insb
dec
sub
insl
xor
mov
jnp
sbb
int
cmpb
jbe
mulps
push
inc
dec
or
insl
in
xor
sub
insb
fdiv
add
ret
movsl
lahf
push
mov
sbb
mov
inc
cmp
xor
inc
mov
push
cmp
xor
push
or
dec
mov
aam
sbb
shl
pop
mov
add
jo
adc
in
call
or
ret
adcb
cwtl
lcall
jnp
pusha
and
arpl
out
lods
fcomps
sub
pop
pop
clc
call
push
cmp
and
mov
push
shrl
cmpsl
fs
xchg
ffreep
loopne
sbb
sbb
sti
pop
insb
fnsave
mov
fiadds
push
add
add
xchg
jo
add
fwait
in
popa
rolb
addl
sbb
dec
test
mov
jmp
sbb
mov
mov
rolb
dec
push
test
ljmp
pop
shrl
xchg
fsubr
cld
sub
sbb
add
jg
loopne
in
lods
dec
repnz
add
cmp
out
in
jecxz
xchg
ret
push
add
adc
cli
adc
jo
add
cmpsb
loop
pop
mov
add
xor
jge
push
push
roll
adc
or
aas
xchg
and
sahf
and
addr16
dec
shll
popf
add
fst
and
adc
cld
sbb
inc
mov
cltd
clc
jb
mov
jae
pop
xchg
fadds
xor
and
addb
loopne
js
lock
add
pop
lret
push
aad
pop
stos
mov
dec
push
cwtl
ds
insl
inc
fstpl
and
jbe
jne
add
mov
inc
fnsave
outsb
mov
loope
xor
and
add
dec
mov
fcoms
add
jo
rsqrtps
ljmp
insl
ds
out
push
cmp
jo
push
les
mov
jno
jns
mov
cld
ret
icebp
add
cmp
and
pop
in
add
inc
and
stos
adc
call
mov
jbe
lods
push
jb
sub
andb
mov
pop
repz
adc
cmp
orb
mov
lea
cwtl
movl
arpl
jecxz
mov
shll
mov
pusha
test
xor
cli
and
bound
call
mov
jbe
mov
dec
add
mov
ds
inc
call
test
lcall
pop
andl
add
pop
push
cmp
stc
add
es
mov
cmp
xorb
mov
stc
testb
jne
and
lods
popa
icebp
jb
pop
scas
int3
mov
test
push
gs
movsl
insl
cli
imul
outsl
add
jae
push
xchg
mov
int3
flds
xor
mov
test
shrb
jo
data16
sbb
inc
add
dec
add
inc
es
sub
daa
cmc
add
fidivs
aaa
sub
push
and
pusha
sub
and
cs
add
cld
nop
or
rclb
sahf
flds
pop
pop
xchg
jmp
clc
jo
jmp
fwait
cmp
std
jmp
pop
xchg
sbb
add
mov
or
inc
adc
mov
or
push
xor
push
shrb
subb
add
jle
push
inc
xlat
in
enter
sbb
stc
mov
xchg
inc
adc
dec
cmp
andb
and
jmp
pop
out
add
jo
leave
add
aas
xchg
lret
iret
les
popa
jnp
xchg
cs
cli
add
in
lods
repz
in
xlat
add
sbb
aam
sti
test
in
add
jmp
push
or
pop
je
push
fmul
stos
add
int3
lret
add
mov
fadds
pop
jecxz
aam
mov
cmp
push
add
call
aas
lea
dec
xorb
pop
jl
lods
add
mov
dec
out
or
call
adc
add
dec
in
add
rcrl
add
rcl
loope
bound
pop
stc
jo
add
and
xor
ds
addb
insb
push
cmovle
out
sub
std
movsb
inc
notb
fwait
xchg
nop
push
ss
aas
leave
and
add
pop
add
shlb
mov
popa
loop
inc
mov
pop
pop
add
filds
xchg
add
fwait
inc
in
add
outsl
add
inc
repnz
add
lcall
fwait
pop
div
dec
add
movsb
mov
mov
cmp
dec
add
fimull
sbb
jmp
xchg
movb
xor
add
jne
cwtl
adc
arpl
add
push
fcmovbe
jle
in
pop
fs
imul
push
loope
scas
push
fmuls
fldenv
and
xor
cmp
mov
lret
inc
sbb
jecxz
sub
shll
shll
push
leave
pop
icebp
aam
sbb
xor
pop
dec
mov
mov
push
jg
insw
and
flds
cvttps2pi
and
subb
adc
movsb
fadds
addr16
mov
xchg
ret
ljmp
scas
sub
inc
push
pop
sbb
xor
cmp
mov
test
fidivl
xchg
enter
mov
daa
addr16
leave
inc
aam
bound
jg
icebp
lock
cmp
lods
mov
popf
cmp
push
dec
daa
mov
je
cwtl
jg
insl
in
mov
sbb
or
jmp
cwtl
pop
fisubl
into
inc
test
sbb
jge
fldt
cmp
ret
sbb
lock
add
sub
push
mov
test
mov
xor
and
popw
inc
add
xor
scas
lock
int3
sub
mov
mov
add
mov
jne
pop
iret
push
incb
stos
call
cli
mov
pop
push
jb
add
inc
pop
movsb
mov
jmp
push
cmp
xchg
xchg
out
cmc
jl
add
pop
cli
push
add
mov
lods
xor
es
cmp
adc
lret
add
ret
lods
adc
cmpsl
or
xlat
loopne
and
ljmp
sbb
jmp
add
xchg
sbb
subl
lcall
cmc
cmp
movsl
add
xchg
adc
lods
out
pop
add
cmp
add
js
stos
iret
sub
jae
ljmp
sub
sub
cltd
xchg
jne
sbb
add
sub
leave
fsubr
add
jae
aad
adc
cmp
or
stos
xchg
popl
push
movsl
lcall
imul
negb
lahf
dec
shlb
pop
add
mov
mov
popf
in
mov
push
mov
cld
repz
xchg
arpl
pushf
cmp
pop
sub
jmp
stc
fisttps
fiadds
adc
mov
je
or
add
rolb
stc
add
xchg
add
mov
lret
or
mov
push
test
call
or
into
faddl
mov
mov
test
movsl
push
outsb
jp
ja
add
pop
outsw
inc
popf
jle
push
mov
stc
push
fucom
out
pop
test
jmp
cltd
dec
adc
add
jmp
xor
or
cmpsl
mov
xchg
sbb
nop
aaa
in
add
loop
xor
out
out
dec
mov
sub
mov
mov
pop
push
fwait
mov
xchg
sub
aad
jmp
mov
mov
xchg
jae
add
ret
push
cld
pop
adcb
mov
pop
data16
popa
subl
push
into
arpl
lcall
lods
es
xchg
out
xchg
add
std
fs
mov
sub
insb
lret
idivb
or
jns
imul
movsb
pop
xchg
out
imull
add
iret
mov
push
push
sbb
mov
push
cmp
rolb
xchg
lods
inc
fdivl
jg
or
mov
push
jbe
add
inc
adc
mov
mov
push
mov
jnp
les
aas
es
add
push
jl
mov
arpl
movsl
clc
push
add
add
aad
xchg
insb
les
add
lods
ljmp
mulb
or
push
cmc
sub
insb
cmp
cs
inc
imul
add
or
xchg
cmp
mov
mov
sbb
fistpll
hlt
popa
cmp
add
or
jle
pop
pop
mov
push
pushf
out
jb
pop
dec
pop
mov
jle
sub
push
and
push
arpl
aas
ror
cltd
jo
push
sbb
lock
cld
lcall
nop
jbe
xchg
push
clc
stos
rcrb
ret
pop
aaa
shll
in
mov
push
mov
xor
scas
add
in
mov
adc
lds
sub
xorb
out
aad
jmp
adc
cmp
cmc
int
jae
and
mov
cmp
or
cmp
push
add
aas
cltd
mov
jno
add
sbbb
std
sbb
lret
popf
or
je
cli
adc
add
bound
leave
into
cmp
and
cmp
push
add
sub
sub
stos
in
add
shl
cs
fistl
push
sub
lock
dec
out
xlat
pop
fs
incb
lcall
dec
add
pop
shlb
pop
repz
mov
cld
cs
rclb
push
fisubrl
jl
dec
add
sbb
or
sbb
aas
imull
subb
and
push
popf
add
xchg
stos
dec
add
xor
insl
xchg
mov
xchg
push
inc
mov
add
and
sub
push
stos
paddw
sbbb
cmp
hlt
mov
mov
int3
add
lret
add
xor
decl
fmuls
jnp
outsl
mov
sub
testb
repz
into
and
cmp
add
out
xchg
aaa
cmp
fbstp
xchg
sub
dec
out
xor
mov
sub
pop
ljmp
pop
mov
and
enter
pop
jne
mov
push
pop
mov
mov
dec
or
movsb
sti
cmp
xchg
out
cmp
add
testl
pop
add
std
rolb
mov
cmp
pop
pop
insl
xchg
push
add
in
pop
sbb
subb
nop
shl
xchg
adc
sarb
add
cwtl
jo
sti
js
add
cltd
aaa
scas
mov
ljmp
arpl
jg
sti
push
and
sub
imul
xchg
mov
in
jb
add
in
mov
pop
pop
popa
stos
sbb
gs
test
xor
dec
dec
jno
scas
pop
fcoml
sbb
mov
mov
add
movsb
push
lahf
xchg
xor
jo
add
sahf
mov
mov
push
mov
rol
add
movsl
jno
add
dec
outsb
cmc
push
ljmp
lea
fiaddl
fists
lds
sbb
or
ret
cmp
add
lret
shll
les
fisttpl
imul
jl
add
sahf
jle
std
shl
aaa
pop
and
rorb
dec
dec
add
mov
pop
test
add
jne
fcomps
sub
aam
add
lret
mov
cltd
fwait
add
pop
int3
ljmp
xchg
cmpsl
popa
gs
xor
add
mov
movsl
aas
push
imul
loop
lahf
lcall
js
hlt
dec
mov
sub
push
je
add
inc
add
push
cld
shlb
mov
cs
dec
repnz
xchg
inc
fistpll
insl
jl
add
fucom
out
aad
stos
add
pop
icebp
lods
aaa
mov
jno
std
add
ljmp
cmp
pop
dec
mov
push
xchg
push
out
ret
xchg
mov
or
mov
cmp
cli
sti
out
negl
add
or
sbb
pop
add
aas
scas
dec
pop
pop
adc
fwait
mov
xchg
add
out
ja
push
xor
xor
adc
negl
push
jmp
sbb
lods
xchg
xchg
cmp
cmp
dec
test
xchg
push
cmp
ds
lock
into
aaa
cmp
sbb
pop
in
scas
mov
xchg
pusha
lret
nop
add
pop
fildll
pop
and
add
sti
aad
mov
cmp
push
mov
movb
ret
push
vmwrite
xor
or
shl
add
push
fwait
or
popa
xlat
cld
add
rcl
dec
dec
xchg
dec
add
jp
aaa
add
cmp
jmp
xor
mov
xchg
xorb
int3
pop
push
xor
add
jb
fs
add
and
hlt
repnz
cld
sbb
or
mov
data16
push
int3
or
out
adc
icebp
push
add
clc
sub
ret
jecxz
mov
push
mov
shl
jmp
xchg
or
mov
add
in
xor
stos
lcall
add
pop
mov
cli
mov
bswap
repnz
adc
ds
stos
pop
add
stc
cmp
xchg
pop
add
pop
mov
add
cmp
mov
cmp
jnp
mov
mov
xor
testb
jae
bound
sub
or
imul
inc
cmpsb
neg
add
gs
jl
sarl
sub
push
inc
sbb
mov
mov
xor
outsb
sahf
test
and
add
lcall
jns
dec
inc
pop
int3
jp
mov
xorl
sahf
loop
add
mov
imul
repnz
mov
xchg
fcomps
fistpl
gs
in
jl
add
push
jp
add
test
out
adc
add
adc
mov
jns
mov
push
aad
test
pop
pop
sbb
fsubrp
pusha
imul
xchg
mov
pop
add
ss
testb
aam
out
popf
mov
add
inc
jb
test
filds
sarb
out
or
inc
pop
push
or
mov
cs
cmp
add
ror
pop
adc
xchg
pop
and
mov
sub
and
push
fsub
inc
fs
sbb
add
mov
daa
into
add
cmp
pop
mov
leave
in
ret
sbb
xchg
loop
jo
add
shll
jae
aaa
out
in
sahf
adc
shrb
mov
mov
xchg
pop
andb
add
xchg
outsb
pop
push
mov
shrb
jbe
out
fnsave
inc
xor
mov
scas
imul
ds
mov
pop
lea
icebp
scas
push
or
adc
in
incl
sub
add
and
push
xchg
fisttps
cmp
xchg
mov
aas
mov
cli
sub
pop
cmc
lret
out
dec
mov
pcmpgtb
loop
push
dec
ret
sbb
inc
xor
pop
xchg
fldl
addr16
push
les
out
add
jecxz
aaa
mov
and
enter
paddsb
push
jb
adc
jmp
sarb
movsb
adc
add
movsl
bnd
loope
add
dec
pushf
xchg
sub
fwait
inc
sbb
cli
add
mov
or
and
aaa
lret
subl
rclb
arpl
jecxz
icebp
in
add
stc
roll
add
add
push
iret
cmp
movsb
and
lcall
gs
mov
mov
add
mov
lods
add
jecxz
inc
ror
or
in
sbb
mov
popa
jns
add
mov
aaa
inc
add
add
sbb
mov
add
xor
rolb
jecxz
stc
xchg
xchg
int
add
sub
sbb
add
lahf
addr16
idivb
aaa
add
repnz
ljmp
sbb
add
outsb
jecxz
fsubrl
pop
mov
out
rcrl
inc
leave
fisubrs
push
mov
scas
pop
pop
hlt
mov
js
insb
cli
mov
push
inc
inc
pushf
in
dec
add
js
call
add
bnd
fsubl
mov
mov
xchg
jge
mov
sbbb
movsb
loop
ljmp
xor
cmp
out
lahf
mov
testl
iret
pop
push
pop
or
pushf
insb
clc
ds
ss
dec
mov
out
sub
dec
push
add
mov
cmp
test
int
inc
add
and
add
sub
lds
stos
aam
mov
loop
gs
add
imul
xor
cmp
xchg
out
frstor
add
add
popa
mov
mov
rol
lcall
call
fyl2x
ds
jp
xlat
pcmpeqd
cmp
cmp
in
cld
mov
cli
loopne
ret
je
incl
jno
rcr
test
sub
adc
movsb
in
push
mov
les
ret
into
mov
inc
fiaddl
fildl
outsb
aaa
pushf
shrl
sub
je
into
cld
lea
cwtl
std
outsl
imulb
pusha
push
movsl
xchg
sbb
outsb
fiadds
jbe
add
pop
cmc
sbb
dec
insl
inc
lret
mov
cmp
add
sahf
mov
jae
lret
fdivr
jnp
push
xchg
cmpsl
nop
jge
inc
xor
add
mov
es
inc
cld
mov
jge
aam
pop
adc
clc
outsb
add
insb
pop
enter
add
xchg
adc
aaa
sub
add
pop
cld
cld
add
nop
dec
cltd
scas
dec
loope
clc
pop
into
push
in
xor
pop
jnp
and
scas
loop
push
dec
jl
add
add
nop
pop
cmp
popa
cmp
orb
jnp
ljmp
clc
cs
mov
adc
inc
insb
mov
insl
cmp
xchg
add
xor
sub
xchg
pop
xlat
dec
pop
outsl
pop
mov
ret
sbb
push
jp
cmp
push
mov
push
sub
adc
imul
imul
movsb
mov
repz
stos
int
mov
les
test
push
test
or
add
mov
pop
hlt
lcall
pop
ljmp
inc
mov
aad
repz
or
xor
jae
push
mov
push
adc
cmp
jbe
ror
std
inc
push
add
fisttps
ljmp
jnp
mov
add
jle
xor
movl
neg
sarb
add
xor
sarl
test
cmp
imul
jb
xchg
pop
jo
add
insl
daa
add
std
xchg
pop
iret
movsb
add
jg
cmp
cmp
mov
mov
mov
imul
dec
nop
pop
inc
add
shlb
arpl
cmp
add
gs
or
push
mov
lret
xor
lahf
mov
mov
out
add
xor
repz
cmpsb
testl
pop
mov
inc
sahf
add
xorb
xor
pop
incl
xor
pop
cs
stos
imul
js
pop
add
inc
or
rcrl
idivb
push
pop
pop
adc
adc
loopne
rcrl
loope
or
mov
adc
enter
aas
mov
stos
shlb
cmpxchg
out
push
mov
inc
rol
cltd
xor
repz
insl
push
imul
jecxz
xlat
mov
and
cwtl
add
je
mov
rol
jge
and
iret
cmp
mov
fstps
mov
jmp
shll
idivb
add
sub
or
cmp
clc
jp
inc
int3
int
insb
push
pop
cmpsb
movsb
popl
mov
mov
pop
jecxz
inc
xchg
pop
rcll
jo
cmp
lret
cli
sub
pop
add
add
icebp
xor
incl
dec
js
in
mov
fildl
adc
jno
imul
add
outsb
cmp
leave
jne
xchg
cltd
dec
jge
js
add
or
testl
and
leave
fldl
mov
jns
push
pop
test
and
jbe
add
fcmovbe
dec
lret
pop
mov
pushw
push
jnp
dec
add
pmaxsw
daa
sub
add
sbb
xchg
filds
xchg
push
adc
mov
inc
mov
popf
std
and
add
insb
push
lret
aad
outsb
push
xor
sub
loopne
je
in
xor
mov
adc
test
je
cmc
lahf
repz
fs
les
dec
cmpsl
cld
mov
lcall
sub
movsb
add
in
jle
push
sbb
pop
mov
mov
js
bound
xor
jnp
ljmp
jl
jge
add
out
cld
add
stc
or
cmp
jl
mov
in
shll
inc
mov
sbb
cli
jo
sbb
fistps
nop
push
mov
movl
jmp
dec
daa
mov
jecxz
testl
stc
int
hlt
add
pop
dec
add
jmp
test
jnp
push
mov
dec
cmp
and
pop
mov
lret
into
sub
push
jmp
in
shl
jl
outsl
add
imul
seta
push
adc
insb
or
sub
jl
push
scas
filds
sub
test
fcompl
dec
std
mov
cmc
sbb
jns
xorb
and
add
scas
sub
mov
mov
call
xchg
data16
loopne
gs
add
mov
jbe
sub
lret
mov
dec
dec
test
loop
scas
push
mov
clc
pop
push
sarb
leave
in
xchg
fnsave
add
gs
je
popa
mov
in
jb
add
dec
pop
test
add
fiadds
xchg
xor
xor
dec
mov
pop
add
xor
push
mov
lock
jns
pop
repz
add
mov
scas
aas
cmp
sti
push
inc
and
addr16
stc
jno
dec
cmp
xor
aam
cwtl
repz
aas
pusha
and
lcall
shlb
dec
idivb
mov
clc
add
dec
cmc
xchg
and
sti
inc
aam
scas
push
movsb
xchg
push
lods
loope
add
rorl
mov
loop
in
dec
aam
pusha
mov
add
cmp
push
cld
arpl
int3
movd
cmp
push
xchg
add
sti
cmp
mov
and
mov
add
xchg
test
gs
cwtl
inc
add
pop
rcl
fmuls
clc
lods
add
mov
aaa
add
imul
lret
mov
ret
xor
cmpsl
add
js
dec
cltd
std
pop
gs
test
fcmovnbe
mov
jne
ss
cmp
pop
dec
xchg
idivb
je
shlb
cmpsb
jo,pt
or
loope
es
outsl
scas
lcall
test
mov
cmpsl
add
sbb
mov
lds
imul
mov
inc
jg
and
pop
sbb
mov
imul
lods
int3
dec
jmp
add
dec
outsl
pop
mov
adc
mov
mov
test
test
scas
fwait
sub
ret
icebp
add
pop
sbb
arpl
loope
add
fdivrp
lret
xchg
and
out
aas
pop
cmp
push
clc
push
movsl
pop
add
mov
pop
fadds
lcall
rclb
add
or
pop
add
push
inc
into
mov
adc
data16
stc
ror
out
call
mov
xchg
loopne
shrl
sbb
mov
ret
jne
into
sar
flds
sub
xor
pushf
test
cld
cli
fists
movsb
cmp
push
cmpsb
mov
jo
add
push
cmp
add
pop
es
in
nop
das
sbb
test
and
cld
ljmp
imul
pop
pop
sbb
jo
pop
arpl
or
jns
ret
add
cwtl
popa
add
stos
pop
ss
pop
adc
ret
add
or
mov
add
popa
jae
or
adc
lods
push
int
and
jmp
adc
loopne
popl
push
aam
leave
cmp
pop
fsubrl
mov
ficoms
mov
dec
out
sub
out
sbb
aad
lret
add
jae
rolb
mov
dec
xchg
sub
addr16
sbb
mov
add
insb
sarb
fdivrl
iret
daa
pop
push
stos
in
xor
mov
cmp
push
sbb
popa
jl
sbb
leave
add
mov
pop
jae
movsl
adc
ja
jns
push
cwtl
add
jecxz
xor
add
ret
clc
xchg
sub
pop
nop
add
sbb
popa
push
insl
sub
leave
jnp
add
sarb
sti
outsl
cmp
mov
sbb
add
out
xlat
cld
icebp
lcall
jns
repz
xchg
jl
add
jne
aam
add
ss
leave
inc
lods
add
add
movb
cld
cmpsb
les
sbb
add
pop
add
pop
jecxz
mov
add
xchg
fldenv
add
insl
shll
mov
loopne
inc
push
fdivs
sbb
pushf
addb
mov
cmp
xlat
adc
repnz
mov
xchg
push
xchg
sbb
movsl
rorb
dec
loop
pop
xchg
loopne
and
pusha
sti
jmp
dec
adc
mov
scas
outsb
mov
notb
sbb
loop
mov
xchg
jge
bnd
lret
rclb
xor
bndstx
aam
or
adc
push
imul
ret
pop
mov
orl
jl
add
xchg
mov
inc
add
push
in
adc
lret
in
xchg
sbb
dec
idivb
movsl
cmpb
sub
nop
imul
add
xor
out
dec
fldl
jmp
inc
push
adc
mov
dec
fsub
push
add
lds
sub
inc
adc
mov
add
imul
in
mov
negb
add
ds
das
lock
dec
aad
sti
aam
inc
add
dec
xchg
fadds
outsl
fcoml
and
and
jns
mov
int3
rolb
lret
test
xor
fsubr
add
daa
data16
in
sub
inc
dec
loopne
mov
imul
call
iret
add
push
jmp
setg
adc
or
adc
push
pusha
insl
mov
sub
sbb
mov
jb
mov
dec
test
jecxz
add
push
cwtl
inc
mov
cmpsl
add
sub
pop
shlb
icebp
add
iret
pop
xor
or
add
jo
sub
out
mov
and
xchg
int3
adc
mov
jae
rorl
ficompl
push
mov
and
sub
add
adc
movsl
mov
sub
aam
idivl
xor
enter
outsb
sub
sub
lea
jnp
movsl
or
sbb
rcrl
frstor
add
mov
add
mov
movsb
lock
adc
adc
adc
and
jg
add
pop
mov
push
lcall
mov
inc
out
andb
add
hlt
imul
fldl
xchg
leave
js
jo
jle
add
popf
inc
call
fwait
ja
push
imul
daa
cmp
add
aas
lods
mov
add
sbbl
in
inc
push
sub
and
jle
pop
sub
stc
add
mov
push
push
imul
data16
and
dec
mov
lea
push
loop
jb
add
cs
jnp
mov
push
cmpsb
repz
fwait
add
pop
inc
xchg
pop
xchg
adc
stos
pop
shlb
add
ljmp
stc
lock
adc
sub
inc
out
mov
mulb
or
inc
add
test
pop
add
imul
mov
aaa
in
insl
test
pop
aad
roll
adc
mov
call
add
and
std
rcrl
sub
subb
mov
lea
fisttpl
sub
fmuls
aaa
add
jge
sbb
movsb
movsl
rorb
add
cmp
inc
nop
cltd
add
or
scas
add
sub
cmp
add
movsb
test
pop
mov
mov
add
mov
inc
popl
test
sbb
in
in
pop
add
dec
mov
leave
add
mov
adc
add
or
lods
sbb
sub
cmp
stos
fstpt
dec
add
imul
movsl
xchg
imul
push
jmp
add
push
sbbb
pop
push
push
jbe
add
lcall
add
test
cld
cmp
addb
movsb
push
lcall
push
pushf
mov
cmp
adc
inc
push
popa
sub
call
and
add
push
pop
push
cmp
sbb
testb
ljmp
cmp
add
in
iret
pop
add
inc
pop
imul
leave
pop
push
push
gs
add
loope
jb
lock
push
imul
sub
xchg
mov
mov
jnp
push
xchg
inc
add
sarl
add
sar
and
fsub
and
clc
mov
scas
lds
mov
jae
int3
and
bound
sbb
cmp
sbb
push
add
push
jnp
mov
inc
cmp
les
inc
outsb
add
into
xchg
pop
cmp
pop
pop
iret
mulb
mov
add
frstor
subb
adc
rorl
xor
shll
xchg
sbb
shlb
xor
add
es
xchg
int
jge
hlt
and
add
movsl
cmp
push
test
imul
addb
cli
pop
addr16
loope
adc
mov
inc
mov
jmp
add
mov
pop
lret
pop
dec
fwait
sbb
inc
cmp
into
cmpb
pslld
and
ds
pop
jg
fwait
add
inc
ret
sub
stc
sbb
inc
cmpsb
add
sbb
jge
cmp
cltd
xchg
adc
fiaddl
pop
stos
cmpsb
xchg
and
xchg
add
adc
test
sbb
adc
and
sbb
cmp
xor
sub
loope
and
push
call
xor
fs
test
adc
mov
ja
xor
subl
test
fistpl
int
inc
inc
ds
lods
fcomps
add
pop
std
shrb
rcll
adc
sbb
xor
and
mov
and
movsl
add
fucomip
jecxz
shll
rorb
test
inc
jae
repz
cmp
test
sub
sbb
mov
js
push
ja
int
inc
pop
shrl
sbb
movsl
cmp
mov
int3
out
pop
push
out
push
mov
inc
lret
and
sub
mov
mov
popa
or
fwait
cltd
xchg
das
pop
jp
mov
jo
and
xchg
lods
aaa
movsl
dec
mov
pop
mov
fiaddl
sbb
incb
add
add
xor
lahf
hlt
mov
and
aas
inc
mov
pop
mov
jne
add
xor
into
arpl
xor
cmpsb
xor
jno
sbb
js
sub
lock
dec
inc
out
cmp
add
jge
add
repnz
test
rcr
popf
loope
aaa
push
lea
mov
or
pop
sti
fildl
add
dec
mov
dec
mov
mov
cmpsl
insl
sub
pop
jl
movb
fcmovb
rorl
and
lods
in
or
movl
jo
add
add
push
push
fwait
sub
pop
mov
mov
lret
push
and
pop
cltd
push
add
and
cmp
popl
pop
mov
lock
mov
pushf
push
hlt
pop
add
mov
jno
pusha
in
xchg
mov
or
fsubrp
sahf
cmp
jecxz
enter
and
mov
xchg
and
lret
out
cmp
inc
and
popa
iret
aam
xor
xchg
cmp
and
and
jb
add
mov
mov
data16
ss
add
enter
xlat
xor
in
or
jno
outsl
add
or
inc
ljmp
in
sbb
add
std
popa
call
sbb
int
xor
sbb
outsb
lret
jmp
pop
push
mov
rclb
adcl
lcall
jge
test
mov
fwait
and
incb
daa
mov
xchg
dec
sub
jmp
lods
adc
aaa
mov
mov
repz
adc
or
stos
mov
push
push
cmp
push
add
fdivs
or
pop
sbb
or
add
cmp
mov
cmp
ror
add
test
call
mov
lock
test
cld
mov
scas
lods
inc
xor
cltd
aaa
mov
mov
jo
cld
adc
jecxz
lcall
fwait
sbb
xor
enter
pop
pop
je
add
cmp
cmp
mov
test
jne
add
xchg
cmp
out
rolb
inc
popa
jmp
mov
add
pop
jb
mov
sbb
mov
into
jp
inc
in
sbb
jle
sarl
add
pop
mov
outsl
mov
sub
jecxz
repnz
lcall
and
mov
and
or
mov
test
push
add
adc
inc
subb
in
movsb
insb
cmp
testl
add
shll
mov
pop
add
add
jg
lahf
test
dec
pusha
das
mov
xor
mov
cmp
add
mov
mov
lahf
ds
xchg
jge
aam
jns
rcrl
jb
pop
jne
out
sbbb
cmp
cmpsb
adc
scas
scas
nop
test
add
mov
push
hlt
push
add
addr16
add
aad
daa
loop
cld
test
cwtl
adc
add
xchg
dec
xor
mov
test
mov
incb
pop
aas
test
jecxz
jbe
push
pop
cltd
jae
add
fidivrl
mov
in
or
mov
imull
outsb
xchg
je
sbb
dec
sbb
jbe
out
lods
mov
sbb
outsb
enter
loope
roll
dec
loop
add
rcrb
lds
aad
sti
cmp
mov
ss
int3
push
loopne
iret
xchg
lds
sub
int
jl
add
lea
xor
push
clc
shl
xor
pop
loopne
arpl
add
insl
mov
test
fwait
leave
sahf
aam
add
lea
flds
xchg
je
rorl
add
cli
mov
xchg
gs
dec
aaa
xchg
inc
mov
sbb
jne
bound
pop
pop
xor
pop
pop
aad
andb
mov
cmc
dec
je
bswap
jnp
pop
mov
push
arpl
dec
insb
mov
push
sub
pop
add
jo
jno
rcrb
xor
out
cmp
aam
xchg
lods
gs
add
enter
lahf
mov
in
shlb
xchg
lret
sbb
pop
fildl
mov
add
mov
stc
add
sbb
add
cmp
ret
sahf
add
nop
sbb
mov
out
add
pop
pop
popf
sub
or
push
jp
test
leave
mov
testb
push
jne
in
mov
add
cmp
bsr
cmpsb
pop
orb
adc
xchg
rcr
aam
movsb
orps
adc
inc
mov
add
pop
pop
adc
pop
mov
stos
mov
nop
sbb
add
ret
adc
mov
push
add
int3
lods
loop
sbb
add
sbb
add
stos
bound
add
jp
jno
and
cmc
mov
pop
sbb
mov
mov
adc
repnz
mov
popf
addr16
sub
in
inc
add
out
addb
wbinvd
js
mov
pop
fbld
sahf
push
mov
jmp
das
movl
out
xchg
jno
adc
out
add
push
xor
add
fstps
roll
icebp
xor
gs
or
sub
dec
fiaddl
pop
xchg
mov
cs
jge
add
mov
imul
or
pop
xor
jo
out
sbb
in
pusha
sbb
add
loopne
push
pop
add
push
add
pop
or
mov
fmuls
adc
mov
and
add
popf
cwtl
push
push
and
push
mov
add
cli
pop
inc
jp
xor
add
mov
cld
push
and
add
shrl
pusha
aaa
ds
flds
je
stc
lea
jns
push
inc
pop
clc
xchg
sub
sub
jg
mov
pop
das
jge
loope
daa
dec
out
jae
add
sbbb
push
xor
mov
lock
push
add
dec
movsb
add
clc
out
es
imul
mov
addr16
sub
mov
mov
arpl
jle
stos
add
adc
add
idivb
jecxz
orl
sub
fwait
jbe
add
push
xor
pushf
ret
xor
popf
mov
jle
outsb
out
incl
mov
xchg
scas
jne
push
inc
in
call
sbb
jno
jge
lea
sub
pop
rolb
sbb
ret
mov
or
mov
pop
xchg
sbb
in
add
das
jmp
lret
bound
fsubl
mov
addr16
push
jle
pusha
cli
popl
das
stos
or
gs
sbb
outsl
xlat
mov
cmp
lods
mov
add
inc
mov
add
daa
test
cld
mov
xor
mov
add
addb
or
mov
pop
sbb
jecxz
xor
add
into
inc
add
push
jne
pushf
cltd
clc
ret
psadbw
mov
jo
sub
add
jns
add
mov
roll
iret
and
dec
lcall
dec
mov
jecxz
push
ds
xchg
add
fcmovnb
pop
add
movsl
add
jl
mov
add
out
pop
add
mov
scas
loopne
add
je
mov
dec
pop
call
out
incl
btc
pop
jnp
add
test
mov
mov
stos
fisubrs
or
ror
sbb
jmp
test
or
insl
inc
mov
leave
out
cli
add
mov
fstpt
jne
addr16
in
call
add
test
pop
dec
sbb
lret
push
push
xchg
hlt
add
mov
push
fs
in
mov
add
lea
mov
das
add
stos
loopne
push
mov
iretw
sbb
dec
sahf
repnz
add
cmc
pushf
jae
ret
jg
mov
jb
add
pop
xchg
out
lret
stos
les
jp
sbb
insl
jnp
sub
add
mov
xchg
dec
add
sbb
rorl
add
outsl
jno
adc
add
out
lcall
fstpl
std
mov
dec
fdivl
xor
mov
mov
popl
xor
inc
rolb
xor
sub
popa
and
pop
add
in
test
inc
push
ja
fs
jns
lods
subb
or
call
sahf
adcl
mov
mov
or
or
dec
addb
andb
push
add
mov
cmp
cmp
add
loopne
call
xor
jmp
cmp
mov
add
mov
out
adc
aam
mov
inc
pusha
cmp
pusha
cld
add
xorl
int3
aaa
test
sbb
jecxz
int
lret
sahf
sub
pop
lret
xchg
sbbl
div
mov
movsb
sarb
movsl
push
dec
ljmp
add
ret
sbb
add
push
cmc
push
add
cmp
lods
xchg
vmread
clc
mov
add
push
es
mov
xchg
jge
mov
pop
sbb
mov
mov
add
fsts
pop
push
inc
stos
pop
addb
aad
adc
mov
mov
enter
pop
scas
cwtl
aaa
outsb
cltd
inc
fsubs
or
repnz
aaa
enter
mov
dec
psrlw
xor
and
cmp
mov
scas
aad
adc
add
aaa
cmc
pop
int3
inc
lret
mov
cli
jl
add
mov
ds
xlat
aad
fstps
xchg
mov
arpl
xchg
push
push
add
cmp
adc
xor
ficomps
sbb
add
in
sub
or
dec
in
add
cmp
mov
adc
adc
push
iret
add
ret
int3
scas
dec
fsubl
xchg
fnstenv
dec
cmp
es
add
push
les
popw
dec
rclb
int3
lds
rolb
add
fdiv
out
enter
add
push
mov
ss
aas
aas
test
subb
mov
lds
mov
sub
in
aad
mov
lret
jg
add
fisttps
pop
nop
sbb
bound
pop
sti
xor
xlat
xchg
mov
inc
adc
test
cwtl
adc
das
push
filds
lret
and
xchg
psubsb
jecxz
jae
ja
cpuid
test
mov
add
sbb
shlb
roll
outsb
lds
fs
cmp
sub
pop
sti
jmp
xor
imul
outsb
jnp
fnstsw
and
add
mov
xchg
loopne
stos
inc
js
adc
data16
pop
push
add
lea
add
loop
mov
add
cli
enter
int
test
xor
outsl
iret
das
lret
out
movsl
push
inc
enter
add
jo
mov
daa
aaa
mov
mov
adc
rorl
add
cmp
pop
mov
int
jle
sub
xlat
add
push
mov
sbb
dec
scas
lds
mov
add
sub
add
jnp
mov
xor
addb
pop
ja
inc
arpl
mov
add
mov
or
add
daa
adc
push
add
loop
in
add
adc
mov
pop
push
add
cltd
add
add
push
lock
jp
jnp
jo
cmp
inc
dec
repz
mov
mov
lea
inc
and
pusha
pop
imul
scas
pushf
adc
popa
mov
jae
add
test
pop
arpl
and
add
add
xchg
sub
add
fldt
inc
and
push
and
es
fimuls
cmp
nop
lret
enter
xchg
add
xor
fisubl
jecxz
movb
nop
cmp
jle
inc
add
mov
pop
ljmp
mov
out
into
or
push
add
lcall
or
sub
xor
lods
mov
jb
jle
add
xchg
xor
push
jmp
cwtl
or
loop
pop
pop
test
data16
add
sbb
fld1
sahf
mov
jo
mulps
cld
pop
rol
push
inc
mov
cs
and
xchg
rol
and
add
into
jae
add
movsl
pop
rol
psadbw
push
and
dec
jo
mov
mov
pop
add
sbb
rcll
pop
hlt
sbb
out
cmpsb
lahf
notl
add
call
les
scas
sub
xor
push
push
cmp
pop
push
dec
in
test
mov
pop
out
stos
icebp
sbb
jge
or
and
add
cmp
sub
or
sahf
sub
add
test
add
subl
repnz
mov
jmp
iret
test
jne
enter
add
push
aam
cmpsb
out
repnz
fcompl
push
jp
dec
outsl
add
movsl
mov
xchg
lcall
or
mov
adc
or
dec
cmp
mov
jl
ljmp
and
cmp
incl
jle
xor
sbb
sub
add
dec
or
add
lock
lahf
add
aaa
loop
jno
fwait
es
add
movsl
movsb
dec
add
clc
dec
cwtl
add
add
iret
icebp
or
add
in
sub
ds
data16
cld
fstpt
test
div
rcrb
ljmp
xlat
add
arpl
mov
sbb
ss
lcall
pop
cmp
pop
cmpsb
sub
add
pop
loope
add
aam
jb
push
lock
pop
dec
jecxz
in
cmp
je
adcl
jnp
pop
into
out
mov
lret
cmpsl
cmp
mul
jle
sbb
mov
movsb
xchg
xchg
jne
jp
sbb
imul
int
testb
mov
or
add
mov
add
xchg
pop
out
int3
ret
clc
ror
dec
push
insb
xor
nop
jae
add
and
femms
cwtl
sbb
add
fidivrs
mov
shll
sbb
mov
cmpb
sbb
pop
fldt
jecxz
int3
mov
cli
in
out
dec
popf
inc
jp
inc
xchg
fildl
movntps
xchg
adc
push
and
nop
sub
dec
test
cmp
cmp
mulb
mov
add
jp
movsb
sbb
cmp
shll
mov
adc
in
push
fs
lods
ret
loopne
xchg
xlat
nop
dec
pop
push
roll
push
push
ret
or
jg
mov
add
adc
dec
cmp
insl
std
add
jmp
mov
sbb
pop
add
sub
inc
popa
add
std
aad
add
mov
adc
mov
clc
sbb
fucomip
adc
cmpb
pop
outsb
imul
jno
pushf
mov
sahf
fiadds
mov
sbb
xor
push
pop
pop
pushf
movsb
lcall
stos
cmpsb
cli
add
les
xchg
and
insb
popf
inc
cmp
stos
in
add
ret
add
fwait
sahf
add
and
pop
loop
dec
dec
add
cmpsb
inc
mov
mov
pop
fstps
pusha
or
pop
orl
repz
add
cmp
pop
sti
in
addr16
jg
push
xor
add
enter
cmpsb
adc
test
push
or
sbb
cmc
movsl
mov
inc
cmpb
pop
cmp
leave
jecxz
test
icebp
fildl
jp
lret
sub
lret
pop
hlt
cmp
rolb
mov
shrl
xor
lea
push
lahf
mov
sbb
int
adc
pop
roll
mov
lcall
mov
rolb
bound
push
addps
insl
cmp
dec
push
in
and
dec
add
lods
inc
xchg
push
roll
negl
lock
sti
add
psrlw
dec
push
rcll
jmp
xchg
add
push
push
shrb
and
add
or
fsubs
xchg
decl
cmp
and
add
xor
sbb
lea
add
sar
test
add
and
xchg
fistpll
cmc
inc
sub
jno
add
scas
insb
jae
enter
lock
sub
add
dec
mov
sub
cwtl
add
ret
loope
add
sbb
pusha
xor
stc
add
pop
addr16
mov
xchg
inc
fwait
or
test
jmp
pop
lock
orl
inc
repz
add
xor
cli
out
sub
cs
outsl
xchg
xor
in
add
adc
enter
pop
dec
dec
add
in
mov
sbb
add
stc
adc
add
loop
clc
xchg
mov
sub
xchg
flds
cmp
jb
testb
add
mov
mov
adc
push
push
xchg
mov
xchg
push
repz
out
jmp
pop
mov
sti
test
and
mov
push
pusha
sub
fdiv
add
stos
stc
mov
inc
ret
or
add
stos
das
insb
fsts
loopne
in
add
nop
test
mov
xor
add
xchg
mov
loope
stc
push
test
cmp
ret
or
nop
cmp
xchg
aaa
add
sub
add
fistpll
mov
out
sbb
add
icebp
xor
out
ret
add
outsl
or
je
or
pcmpgtb
mov
mov
aad
inc
ljmp
push
jae
or
fnstcw
cwtl
xchg
cmp
out
sbb
lds
lods
pop
testl
lods
aas
and
inc
jg
call
lahf
mov
xor
add
or
test
in
jmp
dec
pop
mov
roll
inc
adc
movsb
insb
nop
shll
insl
add
inc
pop
cli
scas
mov
add
cmpsl
jno
jmp
lock
pop
mov
cli
scas
or
jb
int3
movsl
lahf
xchg
push
lret
daa
ret
xchg
jnp
call
adc
dec
std
sbb
repz
xchg
add
and
lods
scas
adc
int3
hlt
fidivs
lret
dec
dec
cmp
and
add
pop
xchg
xchg
dec
sti
add
out
mov
dec
add
or
aad
inc
add
cmc
inc
sti
mov
or
sub
cli
jns
sbb
and
jge
repnz
sub
or
sbb
push
or
xor
mov
add
pop
jp
mov
repz
jo
aad
cmp
aaa
jne
mov
or
pop
adc
lock
pop
mov
add
xchg
jb
xor
stos
jp
add
xor
cmc
add
ljmp
add
cmpl
lock
mov
xor
inc
imull
insl
push
insb
cli
push
add
jo
add
cmp
xchg
dec
test
js
stc
cli
repz
aas
in
es
add
dec
pop
loopne
add
sarl
inc
cmp
jl
lret
sbb
and
xor
add
ds
repnz
lret
insl
mov
pop
pop
mov
in
cltd
gs
jg
mov
jbe
stos
add
fwait
and
mov
mov
push
mov
add
or
inc
xor
inc
xlat
mov
shrl
push
fwait
jne
orb
pop
aaa
add
rcrb
mov
arpl
jecxz
out
sbb
test
push
and
pop
fdivs
incb
in
xchg
fdivl
inc
adc
ds
imul
jbe
and
leave
jmp
xchg
jb
xchg
je
call
mov
add
mov
into
add
out
or
jns
movhps
jl
addl
xchg
lret
jle
and
pop
ss
add
cmp
cmp
and
mov
rcrl
add
push
rorb
inc
push
xor
sahf
inc
pop
or
mov
call
inc
sbb
loopne
add
xchg
and
shr
pop
push
cmp
enter
push
jle
movsl
mov
sub
add
cltd
flds
pop
push
movsb
pop
mov
nop
pop
push
fnsave
adc
push
or
loop
pop
mov
add
js
mov
cmp
lret
adc
dec
add
mov
mov
in
in
xorl
add
bound
pop
jbe
add
mov
mov
sub
rolb
dec
pop
mov
jnp
cwtl
mov
out
sbb
and
cld
call
mov
mov
or
xchg
fldenv
adc
shrl
and
arpl
add
pop
lods
in
add
popa
addl
pop
js
mov
mov
mov
inc
jb
jns
add
imul
and
add
stos
fidivrs
mov
cmp
pmaxsw
adc
add
ret
fidivl
add
push
shr
sub
push
rolb
daa
dec
or
or
in
or
and
flds
cli
add
stos
jmp
lock
sub
mov
and
cmc
cmp
fisubs
xor
sti
xchg
dec
imul
movsl
mov
pop
icebp
lods
add
imul
cmp
lock
xor
lock
jno
add
jp
pop
loope
mov
idivb
cmpsl
daa
add
and
not
add
ja
add
mov
xchg
incb
add
cmp
and
mov
std
es
in
inc
add
jne
popa
mov
mov
out
dec
repnz
lods
mov
mov
add
cmc
gs
mov
add
fimull
jb
inc
out
mov
jp
add
fadd
loopne
addb
jb
inc
sbbb
jno
mov
lcall
call
add
dec
adc
xchg
mov
push
fbstp
sub
and
pop
int3
add
dec
pusha
pushf
add
xor
mov
jbe
or
mov
adc
sbb
sbb
pop
dec
xchg
js
or
and
dec
nop
mov
outsb
push
push
xchg
add
pop
pop
mov
inc
jecxz
add
cli
jg
jge
and
dec
xor
xchg
inc
mov
dec
add
out
das
imul
sub
and
add
popf
pop
test
clc
test
sbb
push
ja
das
add
mov
clc
pop
add
adc
sbb
imul
and
pop
shlb
in
and
dec
sub
clc
add
push
adcl
mov
sbbl
and
test
fldcw
jg
xchg
cmp
mov
mov
pusha
add
das
cmp
stos
add
xor
fistps
xchg
aaa
push
out
add
inc
cltd
fwait
stos
add
movsl
adc
jo
or
xor
clc
push
xchg
fmull
and
xchg
sbb
cmp
add
sub
sti
add
dec
xchg
sbb
test
jne
cmp
pusha
mov
add
jno
rcr
out
add
cmc
mov
addr16
jne
pminub
hlt
ss
add
or
and
addl
and
inc
lret
adc
popa
push
jno
mov
push
mov
fmull
adc
jl
stos
fadds
inc
out
or
repz
jne
cwtl
mov
push
cmpsb
pushf
scas
popf
clc
inc
add
add
adc
nop
sub
adc
int3
push
push
cltd
pop
mov
xchg
insl
add
mov
mov
add
adc
pop
dec
add
pop
daa
xor
pop
mov
mov
xlat
out
or
rcrl
mov
add
loope
cwtl
test
add
xchg
and
pop
or
aaa
mov
xor
add
scas
fnsave
xchg
mov
add
xlat
stos
push
iret
and
test
loop
lods
sbb
mov
inc
dec
add
jbe
add
mov
popa
pushf
jnp
and
jnp
scas
fildl
push
nop
xor
pusha
and
mov
mov
xchg
lret
add
iret
movsb
aad
mov
out
push
daa
clc
sbb
push
lods
mov
bswap
push
xor
xlat
loop
scas
andb
add
dec
sbb
aad
push
dec
cmp
ljmp
sub
test
pushf
jp
cmpb
add
and
enter
lock
cmpsl
jne
jp
add
in
rorl
mov
pop
out
sarb
mov
into
sti
inc
sbb
lcall
ja
cli
add
fisubs
mov
lock
mov
imul
xchg
xor
jmp
div
mov
push
das
adc
roll
add
mov
int
mov
loopne
add
and
xlat
dec
mov
xchg
sub
add
lcall
cltd
sbb
push
ret
xor
mov
add
movsl
fcmovnbe
mov
mov
or
pop
andb
push
movsb
nop
mov
inc
sbbl
aad
xchg
add
cmp
cs
dec
cmpsl
xor
cmp
inc
jl
mov
cld
push
add
jle
insb
fsubs
jg
cmpsb
out
jge
testb
push
mov
data16
test
into
mov
add
faddl
sub
or
incb
mov
setp
pop
out
dec
imul
adc
inc
inc
mov
add
rorb
xor
dec
mov
add
iret
scas
dec
push
js
add
pop
add
js
xchg
or
push
mov
nop
outsl
mov
xchg
enter
and
mov
and
jecxz
dec
inc
push
and
jnp
sub
or
push
sub
loope
cwtl
mov
mov
cmpl
mov
out
cmc
std
push
jo
faddl
mov
aaa
mov
xchg
cmp
enter
das
stos
add
jb
mov
and
pop
add
cmpl
add
int3
icebp
inc
xchg
jecxz
inc
add
clc
sbb
call
mov
js
jl
push
inc
inc
cmpb
loop
and
add
push
sbb
das
pop
rcl
push
mov
pop
fsub
pop
add
jne
insl
add
push
jge
mov
and
out
cmpsl
mov
lcall
push
lahf
cwtl
add
push
scas
lods
pop
clc
adc
cwtl
int3
add
faddl
in
mov
cmpsb
adc
push
sbb
mov
into
mov
mov
xorb
iret
out
xor
sub
lea
push
pushf
jecxz
or
jno
sahf
push
push
mov
cmpsl
sub
mov
or
add
call
popl
lods
loope
add
xchg
jns
repz
scas
mov
andb
add
pushf
jmp
sbb
pop
or
icebp
cmc
push
js
add
add
add
sbbl
pop
loope
add
cmp
mov
sub
enter
xor
add
and
sub
add
pop
sti
fwait
cltd
mov
test
add
mov
daa
xlat
add
mov
jge
std
scas
add
es
or
sbb
sub
lods
lock
ja
add
jp
js
dec
sar
xchg
cmp
mov
adc
mov
test
repnz
sub
add
pop
jnp
jmp
stos
mov
dec
add
js
xor
lods
lods
push
mov
nop
lea
sbb
outsb
addb
sub
ret
fndisi(8087
pop
test
sti
sbb
dec
mov
add
fisubrl
or
call
add
mov
sbb
sub
add
icebp
or
imul
and
popa
in
out
orb
xchg
add
and
test
jecxz
push
xchg
add
cwtl
jmp
adcb
pushw
lods
shlb
fisttpl
int3
movsl
push
push
inc
aaa
jecxz
ja
jmp
add
fiaddl
add
div
lahf
pop
roll
ds
adc
pusha
cwtl
push
add
adc
mov
add
cmp
icebp
shll
add
fwait
dec
sbb
test
inc
mov
sub
mov
add
push
mov
jnp
popa
xor
cmp
lock
jecxz
repz
mov
cmp
enter
nop
push
loope
arpl
imul
sti
inc
movsl
repz
or
lods
lcall
add
rorb
fstps
subb
add
pop
sarl
add
pop
cmp
or
clc
jg
cmc
push
jecxz
fcompl
subb
movsb
pop
add
inc
sbb
mull
add
scas
aam
bound
fdivs
add
xchg
or
jle
ds
inc
lret
push
pop
xor
adc
inc
jae
rcr
cmp
icebp
call
inc
fldt
shlb
push
rcrl
aam
test
scas
adc
insb
out
or
ja
xchg
dec
outsl
test
gs
xchg
add
jle
push
add
or
cmp
adc
jge
cmp
jns
loop
sub
psrld
xchg
xchg
add
jp
addr16
ljmp
cs
or
ret
add
or
push
jo
mov
push
int3
add
jge
leave
xor
cmp
add
clc
enter
mov
out
jno
int
xor
loopne
sbb
push
add
pop
inc
sub
jmp
jecxz
jno
add
xor
sarb
in
sub
adc
movsb
adc
lods
push
add
bnd
add
pop
xor
xchg
into
pushf
sarb
hlt
push
add
xchg
mov
sbb
or
cmp
pop
cmp
jl
cld
add
mov
out
cs
jbe
add
in
mov
pop
push
in
pop
pop
subb
arpl
loope
bound
shrl
and
test
sub
std
imul
xchg
jns
fcomps
pop
lcall
and
fwait
orl
or
or
out
mov
or
push
add
fcmovnu
clc
mov
sbb
sub
sbb
jmp
pop
xor
inc
in
add
hlt
and
test
cmpsb
testb
cmp
nop
pop
add
loopne
dec
add
ljmp
emms
cmp
pop
add
cmpsl
aaa
adc
loope
add
cwtl
add
insb
xor
inc
stc
out
add
fisubs
int3
dec
lret
cmp
shlb
incb
cmc
stos
add
roll
jnp
push
mov
add
and
mov
add
rolb
xchg
stc
push
dec
scas
lret
sub
push
loop
inc
loopne
xlat
sub
out
inc
popa
sub
jle
or
or
xchg
hlt
add
enter
scas
mov
and
andb
inc
inc
dec
jns
add
mov
sti
jge
add
jo
push
jg
xor
sub
jge
fsubl
ljmp
jle
outsb
addr16
pop
adc
stc
loop
fmull
xor
mov
sti
std
inc
icebp
pop
int3
or
fnstcw
sub
cltd
pop
jo
or
fnsave
fists
add
clc
mov
sbb
add
mov
adc
inc
or
sub
je
sub
dec
rclb
or
adc
mov
add
movsl
jae
add
sub
out
movb
jne
sbb
inc
in
bound
loopne
mov
mov
add
je
pop
mov
push
add
mov
mov
add
xor
pushf
push
comiss
roll
jnp
rcrl
out
addb
xorl
in
dec
xor
add
hlt
imul
add
mov
insl
enter
add
push
pop
add
mov
int
fiadds
das
cmp
cmpb
add
mov
daa
xor
add
testb
cmp
lcall
pop
add
fisubl
imul
sub
shrb
add
rorl
jbe
add
cmpsl
iret
test
sbb
pushf
xchg
lds
pop
xchg
xlat
jle
aam
mov
add
and
or
jle
add
mov
pop
xor
hlt
loope
lods
es
push
fsubl
rcr
montmul
cmpsb
ret
call
jb
inc
adc
add
sbb
orl
insl
push
sbb
add
mov
jecxz
fmuls
out
pop
add
scas
add
popl
mov
inc
daa
add
pop
shlb
mov
enter
cmp
xor
fs
fdivs
add
add
push
imul
scas
mov
cmc
in
jo
add
fidivrl
pop
xchg
pop
stos
adc
das
pop
xor
push
add
mov
imul
push
pop
mov
add
jb
inc
pop
cmp
daa
leave
add
xor
pop
mov
dec
jbe
add
jmp
loope,pt
ja
add
cmpsl
adc
out
jmp
inc
sahf
mov
cmp
add
mov
ret
lods
divb
rolb
push
imul
gs
shlb
daa
out
mov
bound
maxps
das
inc
call
inc
mov
outsl
mov
mov
cmp
add
scas
cmc
in
and
add
and
pop
mov
inc
jecxz
fcmovnb
add
xchg
pop
mov
add
jg
inc
push
mov
inc
fisttpl
aam
mov
in
aas
add
shr
cs
cmp
add
mov
iret
sti
mov
jb
push
stos
push
dec
jl
add
or
and
add
pop
imul
cmp
jno
mov
add
mov
sbb
sub
add
out
cmp
push
dec
push
push
ss
iret
inc
pcmpgtb
add
mov
push
push
fdivr
add
dec
inc
xor
je
cmp
dec
mov
jl
mov
sub
es
clc
push
mov
ss
lods
nop
mov
xchg
in
add
aad
or
pop
sub
add
lahf
insb
or
and
push
mov
and
jne
in
ja
push
rcrb
sarl
dec
call
push
inc
in
shlb
xor
add
pop
mov
push
add
out
pop
bound
dec
add
add
sbb
das
jge
test
jne
push
addb
jo
fwait
adc
add
insb
mov
add
aaa
and
and
sub
xchg
xor
pusha
push
mov
mov
scas
rclb
test
sarl
lcall
cmp
dec
add
cmp
or
sbb
jae
pusha
mov
fcmove
jecxz
or
jle
js
enter
add
aas
sbb
xor
out
sarl
icebp
lahf
add
ret
jo
jge
sbb
jne
pop
sbb
add
leave
data16
push
dec
repnz
loope
cli
adc
inc
in
lock
add
rorb
add
out
fldl
repz
cld
stos
sub
xchg
je
xchg
psubd
orb
or
outsl
pushf
add
inc
rcrl
mov
clc
inc
int
jbe
add
mov
pop
add
int3
jb
shl
mov
test
leave
pop
xor
out
je
sub
jp
dec
bnd
sub
hlt
fcmovnbe
add
dec
scas
jo
lret
sub
scas
mov
xor
cld
or
ret
mov
in
and
add
sbb
push
in
shl
outsl
mov
mov
adc
mov
dec
sbb
psadbw
dec
sub
fsubl
js
lock
add
in
add
xchg
xchg
add
nop
les
cs
mov
add
les
out
cmp
dec
andb
cs
fs
mov
xchg
jecxz
rclb
loopne
pop
mov
jbe
jo
je
sbb
ljmp
outsb
pushf
pop
inc
shlb
pop
cmp
mov
add
sbb
pushf
ja
pop
int3
fcoms
scas
mov
call
loop
jnp
add
fdivl
movb
out
sarb
sub
mov
repz
xchg
mov
jne
aam
sbb
inc
mov
cmp
enter
test
add
ss
xchg
mov
push
dec
hlt
and
imulb
bound
sub
fwait
clc
push
xor
push
aad
mov
add
fmul
xlat
pop
fucomip
mov
xor
xor
jnp
test
inc
xchg
ja
push
add
sub
mov
add
lret
adc
mov
popa
mov
add
outsl
in
jne
add
cmc
fistpll
les
dec
dec
mov
lret
adc
xor
xchg
in
shl
sub
inc
pop
rclb
rorb
add
cmp
je
add
cmc
call
cmp
test
nop
test
pop
add
repz
cmp
cltd
pushf
lcall
lret
jne
pusha
int
in
in
add
push
adc
pop
repz
and
pusha
sbb
cwtl
fistpl
in
test
jmp
add
cmp
or
ljmp
and
std
mov
test
xchg
pop
into
mov
js
pop
clc
pop
ds
data16
cmpsb
loope
add
mov
add
mov
test
loop
mov
mov
or
std
adc
xor
mov
cmp
daa
add
mov
xchg
hlt
lock
mov
inc
popa
cmp
nop
fmull
ss
mov
out
xor
mov
jnp
daa
pop
test
lahf
or
add
sbb
add
add
and
add
push
daa
icebp
in
lods
adc
adcl
jmp
out
inc
movsl
sub
loop
adc
xor
push
addl
jb
fadds
sbb
cmp
dec
adc
add
out
sbb
push
test
clc
push
orl
test
pop
add
pop
lea
and
movsb
xor
lahf
mov
push
nop
lahf
add
jb
pop
sti
call
bound
jbe
into
sub
mov
hlt
push
js
divps
jl
adc
push
add
sbb
add
inc
lret
or
incb
mov
jno
dec
add
and
add
adcb
xchg
out
push
push
outsl
fldlg2
pusha
add
sub
push
jno
and
ljmp
popf
push
add
mov
insl
imul
mov
aaa
mov
add
out
add
xor
lds
pop
clc
sbb
jle
dec
ss
cmp
insb
and
sbb
mov
rorb
dec
mov
int3
int
lret
sub
sub
add
addr16
xor
push
ljmp
xor
mov
je
imul
dec
sub
inc
and
push
test
jg
xchg
or
adc
data16
dec
jb
mov
xchg
and
mov
negl
ds
imul
mov
adc
cmp
pop
daa
pop
pop
sahf
fidivs
sub
add
jge
add
in
pop
pop
nop
pop
inc
fstpt
and
out
sbb
leave
adcl
fsubs
fsubrp
and
jl
push
add
cmc
add
xchg
insl
sbb
wbinvd
cmp
dec
xchg
push
lods
leave
js
jae
add
xchg
inc
loopne
ss
std
add
mov
or
and
jns
inc
pop
imul
adc
sbb
inc
pusha
jle
dec
inc
inc
insb
daa
rclb
hlt
sbb
pop
add
push
lcall
xchg
push
movsb
test
mov
mov
hlt
les
xorl
loope
ds
mov
sub
lcall
mov
mov
add
inc
xorb
aas
mov
add
popf
lahf
inc
es
mov
jl
mov
cmp
mov
sbb
adc
jl
dec
fdivr
cmc
gs
add
in
popa
xchg
and
fisttps
xchg
mov
popf
add
xchg
out
mov
jnp
adc
mov
jle
push
add
sub
out
sbb
ljmp
mov
jae
add
pop
sarb
xchg
jmp
sahf
sub
jmp
add
add
bound
pop
ficompl
lret
mov
jle
mov
mov
ss
push
xor
jge
xchg
mov
add
fisttpl
cwtl
jle
sbb
add
es
fcmovbe
xlat
stos
mov
das
mov
and
insl
and
mov
addb
adc
repnz
out
in
add
xor
mov
jb
add
mov
iret
add
cmp
outsb
add
roll
jnp
inc
out
dec
lock
jle
add
stos
mov
or
add
adc
lea
mulb
loop
stos
add
xchg
out
mov
pop
sub
inc
test
in
shrb
movsb
cmpsb
dec
out
dec
add
xor
xchg
add
icebp
loope
outsb
adc
lret
add
adc
jle
js
int3
mov
fwait
mov
loopne
add
jae
add
movsb
addr16
mov
or
add
ja
push
and
lock
push
jmp
mov
and
lahf
push
fmul
add
ja
adc
insb
addb
inc
adc
pop
fcmovbe
rorl
mov
mov
lcall
rorb
dec
and
jb
add
jbe
jecxz
or
add
test
leave
add
fiaddl
add
xchg
mov
jae
mov
and
out
test
inc
and
add
cmp
in
push
test
lods
cmp
mov
mov
and
add
sbb
add
jl
ret
or
lds
into
cltd
mov
add
dec
lahf
in
je
add
cmpsb
inc
out
ds
mov
jl
sbb
add
and
add
pop
aas
lds
ret
add
mov
sub
popf
sub
xchg
add
push
pusha
cld
push
xor
xchg
mov
dec
add
mov
jo
repz
clc
dec
cmp
and
cmpsb
mov
lock
add
mov
ja
add
jno
nop
std
shrl
testl
jp
aaa
dec
add
pushf
jb
sbb
out
ja
mov
cmp
add
cs
jp
aaa
mov
xor
mov
aam
dec
mov
inc
add
into
mov
je
xor
dec
add
xchg
pop
push
test
and
orb
add
mov
xchg
sub
sub
add
pushf
je
in
mov
lret
lret
pop
or
inc
gs
cmp
test
xchg
xchg
sarb
fstps
das
test
or
and
add
scas
movsb
xlat
pop
cli
pop
mov
pop
nop
push
rolb
pop
add
cmp
subb
or
push
lret
insb
cmp
imul
ficoms
add
mov
dec
or
clc
fildl
int3
cmp
repnz
aas
add
xchg
ss
jp
cltd
add
mov
fidivrl
repnz
out
movsl
add
jp
pop
xchg
and
cmc
ret
movsb
cmp
pushf
leave
or
int
add
mov
mov
jle
jmp
fisttpl
out
int
jg
data16
aaa
cmp
mov
lods
inc
shlb
sbb
mov
inc
std
ret
test
gs
dec
jecxz
iret
push
add
rcrl
icebp
sub
adc
mov
ret
inc
add
cwtl
sub
mov
pop
add
push
ret
mov
add
and
push
pop
pop
js
mov
mov
sbbb
cmpsb
lahf
rolb
jp
add
xchg
inc
add
dec
pusha
inc
mov
jb
aaa
cs
push
push
in
jo
and
and
xor
mov
inc
loopne
jne
cmc
in
test
xor
sbbl
rcll
cmp
test
lgs
addr16
inc
xor
pop
add
enter
lret
mov
fsubr
sbb
push
scas
add
xchg
adc
mov
or
mov
test
rep
pop
mov
gs
icebp
ss
rorl
sub
or
push
faddl
mov
pushf
add
das
outsl
cmp
inc
orl
add
icebp
stos
xor
pop
sbbl
mov
dec
add
mov
scas
in
movsl
pop
xchg
roll
adc
jmp
jns
lret
inc
into
ret
scas
or
xor
out
shlb
es
adc
add
sbb
sub
repnz
push
pusha
ret
add
xor
push
sarb
faddl
test
xchg
cmc
fadds
add
inc
or
jne
add
mov
divb
rcl
add
and
lret
xchg
adc
mov
push
enter
push
mov
sbb
pop
out
xchg
jo
push
cmp
add
pusha
xchg
movsl
push
pop
in
add
xor
mov
dec
mov
pop
mov
xstore-rng
cmpsl
add
add
and
shlb
or
jo
pop
push
jno
jmp
push
lahf
sbb
xchg
inc
rcrl
xor
in
cmp
jge
cmp
xchg
pop
mov
in
xor
fldenv
add
sbb
add
out
stos
ds
mov
adc
orb
cld
stos
sub
mov
out
inc
xchg
push
adc
jg
jl
lcall
add
lods
push
cmp
push
pushf
pop
push
addb
movsb
into
add
and
inc
add
pushf
push
mov
sub
ds
adcb
outsl
fistl
clc
xchg
mov
add
ret
cmp
std
rcrb
outsl
pop
add
cmc
push
inc
mov
testb
repnz
in
add
xchg
cmp
pop
mov
add
xchg
dec
ljmp
aaa
sbb
adc
mov
lret
js
icebp
inc
inc
add
cmpsb
push
es
mov
cmp
mov
add
mov
popa
gs
xor
mov
dec
js
call
sbb
add
das
ljmp
xor
jne
sub
cmp
ret
xchg
adc
rcrl
add
lock
jg
or
pop
pop
popa
add
mov
inc
unpckhps
out
fiaddl
xor
add
cmp
lahf
test
sbb
aas
mov
xchg
inc
xchg
aam
mov
sti
dec
pop
sarb
repnz
rorb
je
add
mov
inc
fdivl
pop
callw
into
loopne
add
daa
mov
jae
add
inc
or
or
push
cmpb
jne
mov
xchg
add
out
push
loop
arpl
pop
outsb
jne
or
cmpsb
add
sbb
or
sbb
addr16
fnsave
repnz
dec
call
and
lret
push
dec
mov
and
popa
jnp
push
sbb
add
enter
icebp
fs
repz
and
imul
jae
xchg
test
cmc
add
bound
add
mov
add
cmc
and
sub
addr16
add
movl
lods
push
and
out
jb
xchg
dec
push
inc
nop
or
mov
add
loope
jp
mov
cmp
cmpsb
icebp
popf
add
push
movsl
push
das
mov
popa
add
psllq
push
jg
or
jno
pop
data16
ja
push
pusha
mov
and
jge
cmp
ret
adc
sbb
imull
dec
adcl
repnz
cmpsb
cmp
mov
stos
out
insl
ds
xor
dec
sbbb
daa
leave
lock
jmp
lret
add
or
xor
sti
test
cvtdq2ps
cmp
es
clc
sbb
sbb
add
mov
xchg
add
pop
test
popa
jge
pop
mov
sbb
xchg
rcrl
shlb
and
sarb
dec
sub
lret
mov
push
mov
pop
call
arpl
mov
add
and
movb
out
xchg
subl
pop
dec
mov
add
in
lahf
or
cmp
pop
sbb
test
jge
shrb
incb
popa
out
lcall
mov
pop
rclb
iret
sbb
lods
sub
add
lret
and
sbb
push
mov
rclb
fwait
add
je
add
addr16
jle
adc
incl
enter
push
nop
or
imul
fsubs
js
add
xchg
jge
pop
test
pop
add
dec
repz
jle
jb
lcall
and
lds
jmp
std
jno
xchg
jnp
repnz
push
call
xchg
aad
dec
pop
cmp
lods
shll
jp
stos
and
cmp
int3
or
in
push
and
and
lahf
loop
pusha
push
add
sbb
imul
into
add
or
xor
mov
push
in
xchg
add
xchg
jns
jnp
shll
add
call
push
push
aad
sbb
xchg
shlb
or
mov
cmp
in
test
or
mov
mov
imul
in
roll
rcrl
testb
mov
mov
push
in
call
mov
faddp
sub
mov
sti
pop
rorl
ljmp
fwait
mov
inc
incl
sub
outsb
inc
cs
add
sub
push
jle
adc
fdiv
into
add
addr16
push
mov
mov
pop
add
lret
fdivrl
add
xlat
mov
jae
cli
cs
scas
xor
adc
add
scas
mov
mov
lods
bound
adcb
jmp
xchg
repnz
add
adc
mov
aad
cmpsb
add
int
xor
les
xor
clc
rorl
pop
jno
icebp
add
add
pop
aam
out
jbe
add
and
xchg
inc
push
inc
cltd
push
add
call
mov
add
mov
fldt
pop
orl
jno
add
repnz
popf
pusha
add
cmp
stc
pop
adc
cmp
add
push
cli
push
mov
jg
js
ss
add
pop
push
icebp
lret
add
jbe
or
jb
add
sub
inc
ljmp
or
ret
in
jecxz
in
in
nop
push
jb
dec
mov
mov
add
test
cwtl
add
sbb
fwait
jne
sub
xor
jbe
add
inc
dec
jo
xor
fistps
es
pop
push
jecxz
mov
and
or
lods
adc
or
add
hlt
outsb
nop
sarl
in
add
or
sbb
or
and
sub
std
xlat
mov
xchg
dec
outsl
add
fildl
fbld
in
daa
add
scas
mov
and
ja
test
hlt
repnz
pop
and
cli
outsb
test
or
push
add
mov
mov
loopne
adc
hlt
add
push
sbb
lahf
js
add
and
call
push
pop
mov
adc
and
out
jbe
fnsave
and
std
add
mov
int
out
movl
mov
xor
add
or
push
add
mov
cmpsl
sbb
mov
xor
iret
sbb
push
mov
bound
add
out
arpl
sbb
cmpsb
cmpsl
xchg
les
lea
or
popa
add
xchg
ret
mov
inc
out
mov
pop
data16
insl
jecxz,pt
mov
sub
mov
rclb
cmp
lods
mov
mov
fbld
rorb
pop
jle
sti
push
sahf
rolb
cltd
add
adc
xchg
push
mov
add
je
out
mov
call
or
into
das
sub
dec
jmp
sub
add
push
xor
add
fwait
jns
orl
int
stos
mov
pop
testl
add
imul
aas
pop
sti
xor
test
push
incb
sar
ds
adc
insl
inc
ss
pop
ljmp
mov
mov
add
jecxz
dec
xlat
pop
dec
lods
call
mov
xchg
add
mov
lods
add
sub
stos
adc
inc
lea
mov
push
popf
add
cld
sbb
stc
lods
scas
mov
ret
and
sub
inc
mov
out
xor
and
mov
leave
jns
mulb
add
pop
add
mov
push
add
inc
sub
negl
insl
shll
prefetchw
cmpsl
andb
ja
jle
add
xchg
xor
loope
lods
pusha
fdivp
jmp
mov
or
in
lods
popf
add
xchg
into
pop
cmp
jle
fchs
fstp
xor
add
addr16
fadd
iret
jle
add
mov
inc
xchg
cmp
fstps
insb
adc
dec
mov
xchg
sahf
jge
int3
rclb
addr16
cwtl
push
dec
adc
or
inc
inc
paddw
pop
pop
and
push
stc
pop
add
stos
xchg
pusha
dec
pop
and
adcb
mov
mov
mov
insb
mov
sub
jo
or
add
pop
mov
add
lcall
xor
arpl
add
fcompl
rolb
ret
adc
test
dec
incl
push
xchg
push
push
loope
shll
addr16
daa
and
add
push
add
push
scas
add
inc
pusha
cmp
xchg
mov
xor
dec
mov
add
in
dec
mov
add
and
sbb
add
sbb
lret
and
jmp
fidivs
daa
cmpsl
mov
xlat
add
mov
popf
addl
or
add
and
cmp
pop
sub
dec
into
add
ja
pop
jns
fwait
xchg
in
mov
ds
lods
and
jno
jg
cmp
jp
cltd
scas
xchg
pop
xchg
pop
rcll
test
mov
shlb
inc
cld
sbb
insl
fucomp
mov
jbe
add
in
push
cmp
push
mov
adc
loopne
add
dec
pop
jmp
cwtl
shl
xor
hlt
mov
enter
jmp
push
or
xchg
mov
cmc
fdivrs
imul
dec
mov
adc
add
cmpsl
jns
add
sbb
pop
repnz
enter
call
outsl
in
add
add
out
jp
test
mov
mov
lods
out
popa
inc
pop
add
stos
lcall
in
or
inc
xchg
jmp
lahf
cmp
add
push
mov
out
adc
add
push
add
pop
data16
jle
dec
mov
addb
xor
add
repz
lds
xlat
xchg
add
push
add
push
fidivs
sbbb
sub
add
aas
jl
add
ret
mov
loop
add
lcall
jl
bound
or
cmp
or
sub
pop
loopne
jecxz
cmp
mov
repnz
shl
rol
loopne
xor
and
cmp
mov
mov
andb
je
clc
cmp
sub
sub
push
or
lods
add
in
fnsave
lock
mov
aas
sbb
inc
adc
cli
add
dec
loope
add
jns
xor
sbb
arpl
adc
ltr
out
sub
pop
fmuls
dec
dec
incb
loop
xchg
sbbl
cmp
jnp
jno
add
sbb
push
sub
sbbl
bswap
into
push
jp
jg
mov
cmp
cwtl
mov
lcall
add
sti
inc
test
incb
scas
cmp
out
sbb
test
add
and
outsb
xor
sbb
xorl
mov
inc
add
push
shrb
imul
rcrb
or
cmp
inc
add
aaa
and
addb
dec
ret
dec
outsb
iret
in
cmp
cs
in
jns
add
call
out
dec
add
int3
add
daa
faddp
cmp
imul
subb
dec
gs
test
js
cmpsl
cli
aad
sbb
clc
inc
inc
sar
inc
add
ss
add
inc
mov
stc
add
int3
pop
popf
inc
js
fimull
pop
sbb
jp
xchg
jl
add
and
pop
lret
xlat
movsb
popa
add
mov
pop
mov
cmp
pop
pusha
shlb
repnz
imul
mov
xorb
fsub
lods
cmp
cmp
xchg
lods
add
pop
sahf
ljmp
push
add
clc
ret
add
add
ds
test
jne
jo
out
popl
ja
pushf
push
repz
mov
mov
mov
dec
gs
js
pop
cli
mov
fiadds
pinsrw
imul
xor
fdivr
add
cld
ret
cmpsb
mov
add
pop
cmc
imul
daa
adc
fistpl
and
and
cld
cmp
or
or
push
jne
movswl
leave
pop
xor
loope
lods
pop
daa
jle
add
pop
pop
jecxz
add
add
pusha
test
cmp
dec
push
add
out
out
push
cmp
ret
mov
xor
xchg
adc
jge
add
int3
sbb
add
adc
or
xlat
mov
add
push
fadds
xlat
loopne
imul
pop
fisttpll
and
push
pusha
sbb
inc
daa
lret
add
leave
repnz
jns
cmpsl
add
hlt
movsl
in
aaa
das
mov
aam
fistl
add
loope
add
or
ret
or
lods
movsb
cmc
andb
push
dec
cmp
fistps
adc
add
shlb
push
push
addb
ret
mov
dec
add
clc
cmpsl
cmc
hlt
dec
lea
cmp
inc
in
inc
ds
adc
mov
leave
rorb
add
push
jo
xchg
mov
pop
jbe
pop
add
inc
cmc
cmp
enter
cmp
subb
popf
xchg
ds
in
aas
push
jns
mov
sbbl
ret
in
push
cmp
jo
xchg
jo
pop
cmpsl
sbb
sub
movsl
sub
fst
dec
daa
jne
stos
mov
inc
aas
enter
sub
subl
jecxz
and
push
cwtl
pop
inc
dec
stos
inc
xor
sarl
push
cltd
xchg
decb
lods
out
daa
cmpb
jns
add
jbe
es
repz
pop
cmp
iret
add
in
or
jne
jae
cmpl
or
in
iret
adc
js
pop
rcrb
mov
incl
add
loope
adc
add
imul
add
arpl
mov
pop
pop
xchg
xchg
dec
and
stc
and
dec
in
bound
add
dec
leave
jno
fcoms
es
filds
push
insl
shlb
dec
pop
xchg
sbb
adc
mov
xor
sub
xchg
and
aam
cmpsb
std
dec
and
mov
rolb
add
push
sbb
test
daa
dec
sub
icebp
cwtl
add
aaa
mov
jmp
sub
mov
mov
loope
loop
fsub
push
cmp
push
add
inc
push
inc
sbb
call
ljmp
out
call
jp
iret
dec
jb
add
pusha
je
xchg
xchg
sbb
cli
in
jmp
add
xchg
insb
pop
inc
push
pusha
lods
mov
popa
mov
jg
clc
add
pop
cmp
add
dec
rcll
repnz
enter
cmc
pcmpeqw
add
pushf
out
adc
push
add
adc
cmp
add
test
push
das
aas
loope
dec
sahf
push
add
mov
fisttps
inc
js
jg
into
sub
add
lods
adc
fidivl
fmuls
pusha
sti
repnz
lea
mov
loopne
inc
push
add
cmc
clc
ja
add
iret
rorl
rolb
fxch
dec
test
add
imul
jp
pop
xor
andb
and
and
jae
xchg
test
jge
bound
and
add
pop
daa
xchg
jbe
out
add
or
test
cmpl
xor
addb
fnsave
mov
inc
cmpsl
js
rcl
xchg
pop
push
add
xor
sub
xchg
xorb
pusha
add
js
jnp
out
xor
jl
add
leave
sub
pop
pop
add
scas
sbb
out
xor
pushf
add
mov
loopne
aaa
adc
in
inc
sub
pop
add
mov
sbb
ja
push
fwait
stc
jae
int3
sub
imul
push
cld
popf
js
add
mov
add
enter
mov
out
mov
loopne
sbb
add
movsl
mov
popf
add
popa
iret
cmpsb
jno,pt
adcb
clc
jge
stos
test
fcomip
add
nop
push
aaa
cld
sarb
dec
subb
xor
sub
scas
add
jae
xchg
testb
jb
sti
mov
xchg
add
jne
add
pop
fadds
and
lea
xor
mov
inc
sbb
hlt
rclb
add
xchg
jne
add
pop
inc
push
je
mov
add
aad
adc
lcall
cmp
movsl
cmp
rolb
stc
push
mov
aaa
addr16
imul
xorb
incb
jnp
add
fbstp
mov
popf
cmp
dec
adc
stos
lock
add
jmp
dec
pop
imul
inc
daa
jbe
iret
je
add
mov
push
stc
rcrb
loopne
cmp
or
ss
lcall
mov
int
inc
js
dec
add
xchg
in
sub
and
lret
jecxz
insl
pop
jle
int3
fbstp
xchg
xor
inc
aad
sbbb
subb
in
lret
mov
pusha
cmp
push
cmpb
jae
mov
ret
jmp
xor
jns
sbb
mov
mov
test
inc
pop
andb
lock
fwait
mov
mov
fistl
cmp
xchg
fldenv
idiv
pop
push
dec
stc
movsl
add
jge
dec
xor
pop
hlt
int3
pop
add
mov
sub
cmpsl
dec
add
jno
add
call
adc
sbb
aas
add
push
sbb
add
cmpsb
jl
cmp
cmc
add
scas
lea
or
imul
xchg
xor
lea
lret
xchg
into
loopne
mov
add
push
in
xchg
cmp
lds
adc
add
je
xor
xchg
pop
jnp
add
imul
mov
or
iret
sub
xor
lea
repz
dec
cltd
sub
mov
push
in
jo
or
les
pusha
frstor
xor
jnp
movsl
ror
mov
xor
cmc
nop
int3
insl
mov
mov
push
adc
jmp
aad
in
jl
add
push
mov
jecxz
add
jp
jge
pop
js
add
in
xor
or
pop
outsb
add
xor
fsub
add
push
stos
fs
in
jmp
pop
icebp
cmpb
das
add
aam
dec
add
sbb
adc
fwait
sub
pop
inc
xor
fldl
clc
cmp
push
and
sbbb
fsubs
imul
xor
mov
pop
mov
dec
in
adc
mov
add
jl
xchg
test
sbb
and
mov
mov
mov
sub
outsb
add
cltd
push
std
and
fwait
adc
aad
movups
xor
lea
add
stos
jnp
stos
clc
js
or
mov
pop
mov
imul
cmp
fiadds
pushf
clc
sbb
aam
cltd
add
jnp
xchg
ljmp
addb
or
push
xchg
xchg
sub
aam
jecxz
pop
addb
sarb
add
jnp
ss
add
lds
or
lock
xor
fwait
add
cmp
movsb
xlat
test
repz
mov
add
sub
fadds
inc
adc
jno
lcall
hlt
test
fcompl
cmpsl
jo
in
lahf
add
fwait
mov
repz
jl
popa
loopne
xor
pop
pusha
scas
cwtl
subb
and
and
fidivl
fsubr
xchg
pop
jle
add
insl
std
xchg
and
mov
shll
fcoml
pop
jle
loopne
jbe
pop
outsl
push
data16
fwait
jno
add
scas
outsb
jno
xchg
mov
sub
dec
xor
push
xchg
and
mov
out
sub
addb
lcall
add
movsl
mov
sbb
mov
aam
or
mov
cmp
cmp
pop
add
push
int
imul
xchg
jl
mov
into
add
lcall
pop
fcomi
pushf
movsl
mov
inc
add
mov
scas
and
repnz
jne
add
inc
xchg
js
clc
dec
hlt
and
lcall
pop
xchg
mov
int3
lods
sub
and
mov
lret
stc
add
divb
in
adc
mov
loopne
add
jo
outsb
sbb
mov
jg
enter
clc
and
add
data16
lds
cmp
fdivrs
aad
test
push
add
sbbl
fdivr
cmpsb
add
push
idivb
xchg
ja
sbb
xchg
sub
int
cmpl
les
scas
or
push
add
lcall
add
fs
ds
sub
cmc
sbb
inc
jbe
fcoml
cwtl
add
movsb
mov
inc
pushf
ss
cmp
sbb
les
add
pop
jmp
fnsave
lock
inc
lcall
mull
insb
sub
clc
or
cltd
pop
out
call
sar
call
lret
cmp
add
pop
out
insl
fldl
nop
aad
aas
dec
inc
xorb
sarl
insl
cmp
out
mov
cmpsl
jno
sbb
cmp
add
mov
loop
inc
dec
ss
adcb
outsb
sbb
mov
add
insl
or
out
mov
repz
loop
inc
loop
add
ret
sub
xor
mov
add
xor
push
mov
lock
sbb
mov
faddl
or
push
pop
repz
push
shlb
and
xor
sbb
mull
lds
push
roll
lods
dec
dec
and
lods
inc
xorl
xchg
jg
or
lea
pusha
hlt
pop
call
arpl
or
ds
iret
sbb
lea
aaa
jbe
insb
bound
mov
lret
mov
dec
insl
or
das
mov
jne
adc
add
ret
in
add
dec
cwtl
aam
fs
add
add
jae
fisubrs
xchg
cmp
outsl
and
repnz
sub
xor
cmc
pop
sahf
pop
int3
add
and
cmp
stos
ret
popl
and
outsb
add
stos
xor
dec
add
popf
shr
mov
push
add
add
add
shlb
or
repnz
xchg
pop
add
rcrb
punpckhbw
aas
sbbb
shlb
add
test
movsl
push
cmpsl
and
out
into
aam
inc
sbb
fidivrs
imul
pop
cmp
add
xchg
jns
cltd
loopne
mov
add
imul
jb
push
out
adc
add
lock
mov
pop
insb
jmp
cmp
xchg
inc
cmp
repz
jl
orb
lods
push
dec
add
xchg
mov
lret
or
je
cmp
sub
cmp
sahf
outsl
fs
mov
ret
sub
sbb
sub
push
push
adc
push
push
and
sbb
adc
or
jae
jo
fildll
stc
pop
not
and
or
or
cmpsb
lock
jl
add
sbb
rolb
aad
mov
xchg
add
pop
jne
ljmp
add
nop
movsb
and
xchg
add
push
leave
xchg
les
xchg
subb
outsl
aad
mov
xor
sbb
insb
jbe
rolb
popf
cmp
mov
fcoml
sbb
jb
movsl
mov
jp
mov
and
sub
sub
or
rolb
xchg
inc
ret
mov
mov
sbb
mov
out
add
das
loopne
jp
add
stos
cmpsl
lcall
dec
test
jno
add
pushf
repnz
push
mov
pop
bound
push
pop
mov
je
out
cmp
pop
cmpsb
hlt
xchg
enter
sub
sti
jne
push
sbb
jecxz
sub
push
mov
push
mov
push
sub
add
setb
sbb
cmp
stos
mov
lods
lret
xchg
xor
dec
add
imul
sbb
movsl
inc
sbb
cmpsl
pushf
cld
addb
jecxz
shlb
mov
ret
jle
push
repz
mov
jbe
aad
sbb
mov
jl
add
mov
nop
fldt
lea
loopne
add
add
or
xchg
andb
lods
pop
lcall
rep
test
in
ja
mov
jbe
jg
push
stc
inc
pop
cs
cld
add
fimuls
lods
xor
mov
andb
mov
negl
lods
jns
icebp
add
xchg
cmp
sub
inc
bound
pop
mov
pop
mov
mov
add
lds
sti
cltd
aas
mov
or
add
and
xchg
insb
mov
dec
dec
jg
fcomps
push
jle
add
and
sti
pop
add
jno
cld
scas
jbe
dec
add
incl
fisttpl
mov
or
aaa
jb
inc
iret
das
add
mov
lock
jge
add
out
fs
push
pop
rorl
call
subb
mov
mov
pop
push
dec
leave
lea
push
negl
add
jp
das
mov
in
sub
in
filds
add
mov
pop
mov
add
sbb
pushf
lds
js
lods
in
or
imul
aam
into
cmpsb
add
jo
cmp
pop
add
fsub
cmp
fidivrs
lret
cli
int
xor
aam
outsb
mov
xor
cmp
cmp
cmp
mov
jnp
mov
enter
xchg
cmp
pop
pop
xor
dec
push
mov
in
comiss
add
adc
jge
xor
push
mov
test
test
popa
adc
clc
je
add
movsl
mov
cmp
mov
cmp
add
mov
pop
xchg
add
add
sahf
jg
out
add
test
dec
adc
add
push
int3
loope
js
add
ss
jl
mov
cli
add
sbb
sahf
push
aas
mov
or
testl
sarb
filds
clc
fistl
cmpsb
nop
cmp
aas
jae
les
add
jmp
mov
add
and
sub
mov
lods
mov
fstpt
push
dec
lock
xor
add
and
push
test
push
in
sti
lcall
xor
into
rolb
ficompl
scas
jecxz
inc
push
psllw
insl
jo
adc
jg
inc
ds
cmpsl
or
sbb
lods
fsub
sub
xchg
cmpsb
sbb
ret
aad
sbb
int3
fstl
adc
jnp,pn
xor
xchg
add
call
jb
xor
dec
out
add
je
sbb
arpl
pop
mov
cmc
pusha
xchg
add
xchg
cwtl
jbe
ret
out
pop
sub
testl
cmpb
stos
lock
stos
fs
push
add
add
iret
jo
jmp
in
rolb
shll
or
loopne
loopne
pop
sarb
jno
add
fwait
or
bound
xchg
add
jge
jmp
mov
sub
cmp
rolb
mov
xor
pop
loopne
push
pop
imul
inc
in
dec
repz
sarb
sbb
and
fdivrl
add
loop
call
lods
aam
xlat
sarb
adc
aas
outsl
xchg
add
add
scas
stos
add
add
inc
adc
adc
cmp
lret
mov
jl
sub
aas
cmp
add
mov
or
jo
xchg
aaa
jp
pop
or
add
test
cmp
mov
mov
adc
cli
add
cmp
inc
or
out
mov
push
jno
cltd
out
or
outsl
mov
or
popa
cmc
add
fwait
stos
sbb
sarl
lock
insb
cmp
stos
jb
lods
add
cmpsl
dec
xchg
pop
pushf
out
sahf
mov
pop
and
cmp
add
fisubs
jo
iret
add
adc
and
decl
cli
push
loope
sti
aad
xchg
int
sbbb
loop
add
pop
pop
xor
pop
xchg
add
fdivr
xchg
and
jb
add
gs
clc
roll
add
rcrl
add
mov
jg
mov
jbe
ret
stos
cld
xor
xchg
inc
add
or
aaa
sbb
add
daa
fimuls
pushf
xchg
push
jmp
ljmp
push
hlt
stos
add
dec
cwtl
loope
adc
daa
jmp
add
xor
jo
dec
sbb
mulb
aaa
push
sbbb
add
lret
xchg
pop
inc
cli
mov
jo
push
add
mov
loop
rolb
add
mov
mov
mov
inc
adc
clc
in
bound
xchg
or
cmp
push
idivb
ljmp
mov
cltd
add
pop
sbb
stc
add
xchg
clc
aam
repz
daa
data16
jne
dec
add
popa
shlb
test
mov
pusha
testb
cmp
add
mov
mov
int
jo
sbb
dec
jl
imul
idiv
cmp
add
test
mov
mov
add
outsb
loope
aas
mov
mov
cmp
sti
dec
mov
and
icebp
or
or
mov
orl
jne
jbe
movb
jmp
inc
aad
fs
push
mov
add
add
movsb
cmp
ljmp
cmp
incb
mov
push
mov
stos
pop
cli
cltd
or
lahf
adc
enter
mov
jmp
test
pop
rol
mov
mov
sub
dec
mov
jb
adc
pusha
shlb
add
out
adc
pop
fildll
add
ds
inc
cmpsl
pop
pmaxsw
adc
popa
in
sub
sbb
push
dec
adc
add
outsl
loope
in
sbb
testl
adc
add
fistpll
sbb
mov
add
daa
mov
jno
push
mov
push
stos
inc
aas
inc
mov
cmp
push
sbbl
xor
ret
cwtl
andb
iret
mov
inc
subl
pop
scas
bound
popa
adc
jmp
enter
cmp
xchg
pop
sar
inc
lock
add
mov
push
or
sub
cmc
in
mov
pop
imulb
mov
sbbb
mov
xchg
jo
test
or
adc
rol
lcall
insb
mov
add
fcoms
pop
mov
mov
pop
cmpb
stc
inc
mov
in
pop
add
call
add
out
push
add
jae
jbe
sahf
cmpsb
xor
add
mov
jmp
mov
dec
mov
test
xlat
jp
xchg
stc
and
popf
lea
jg
add
pop
sub
scas
iret
add
xor
pop
push
andb
sub
xor
test
inc
xor
repz
sub
ljmp
negl
dec
adc
and
inc
lods
add
pop
mov
movsb
cs
add
loopne
inc
iret
in
adc
add
lcall
add
pop
popa
add
adc
imul
jo
xor
lock
popl
stc
mov
mov
jno
ret
gs
inc
testb
xor
ds
test
cld
dec
mov
xchg
pop
cmp
xor
stc
pop
test
adc
add
and
data16
cwtl
and
dec
add
les
jecxz
ja
dec
mov
stos
add
xor
mov
and
jl
adc
dec
in
pop
cmpsl
mov
mov
push
pusha
sub
jae
pop
pop
jnp
jbe
shlb
xor
add
dec
mov
xlat
xchg
add
and
ficoml
jbe
fisttpl
jae
push
add
xchg
push
test
add
scas
cmp
mov
lea
movsb
fidivs
xchg
cmp
pop
add
stc
and
or
fdivrs
sbb
rcrl
jns
lods
cmpsb
fcompl
xor
ljmp
shlb
push
pop
icebp
cmp
push
aam
mov
mov
loop
lock
divl
fwait
push
add
jne
repnz
jg
push
movsl
dec
adc
push
hlt
shll
add
inc
mov
pop
push
xor
imul
cmpsb
loope
mov
ja
add
jmp
and
leave
push
aas
pop
pop
add
jno
dec
cmp
int3
sti
inc
pop
add
pop
inc
adc
jmp
out
add
xchg
push
sub
xor
imulb
push
ret
test
cli
add
xor
ret
lods
or
nop
and
daa
fsts
inc
out
add
out
adc
into
inc
outsl
fidivs
lock
lcall
adcb
pop
add
sbb
andb
xorl
test
ljmp
add
sbb
push
mov
push
loope
pop
mov
out
pusha
outsl
sub
ja
add
ja
dec
in
icebp
or
mov
sbb
xchg
jns
call
mov
or
test
test
push
je
add
dec
hlt
inc
push
push
lock
lcall
lock
pop
fidivrl
flds
ret
xchg
push
inc
data16
cmpsb
je
add
dec
dec
add
xchg
mov
out
jb
test
inc
in
pop
shrl
lcall
add
pop
mov
mov
roll
xchg
add
mov
stos
shlb
mov
adc
int
sahf
pusha
dec
test
das
push
jge
jb
repnz
inc
sbb
push
cwtl
xchg
pop
testl
test
rolb
jg
or
scas
jge
loop
insl
inc
or
iret
push
test
add
mov
jns
jno
add
adc
and
inc
icebp
sbb
mov
int
mov
movsb
mov
cmp
push
andb
push
add
inc
push
ficomps
dec
aaa
les
imul
and
add
insb
cmp
fsubs
inc
mov
loope
mov
cmp
pop
mov
mov
cmp
aam
add
jge
pop
divb
sub
insl
test
flds
roll
inc
sarb
mov
cmp
mov
flds
sar
popa
jl
sarl
add
out
mov
int3
cmp
pusha
push
mov
sarl
sub
or
lret
rcrb
and
loope
int
push
add
pop
scas
or
gs
test
xchg
stc
pushf
fildl
loopne
lods
sbb
insl
add
arpl
insb
imul
cmp
add
add
test
flds
js
rcrb
mov
add
sbb
cmp
and
test
ss
lea
push
cmp
pop
sbb
in
jp
and
enter
pop
sahf
mov
jb
mov
inc
push
pop
xchg
test
jp
cmp
insl
xor
enter
and
and
or
lock
or
and
add
mov
or
loope
sbb
mov
andl
push
cmp
sbb
pop
add
or
cmpsl
or
add
pcmpeqw
xchg
xchg
rcl
pop
dec
inc
loop
add
hlt
xchg
cmp
xchg
in
insb
add
out
insl
add
jle
jecxz
xor
cmp
sahf
add
ljmp
or
wrmsr
scas
addl
push
pusha
pusha
fdivrl
neg
add
cmp
rcl
in
xor
call
jo
test
mov
xorb
fldl
fiadds
shlb
jnp,pn
jo
psubsw
and
add
lods
sbb
add
add
jnp
inc
fidivrs
in
add
push
push
adc
sahf
cmp
inc
bound
mov
mov
xchg
shll
mov
push
or
and
mov
mov
mov
jg
imul
out
dec
or
sub
insl
mov
add
mov
inc
andb
lret
jns
push
lcall
adc
push
pop
lret
insb
add
jns
or
xor
add
loopne
add
jnp
jmp
add
mov
iret
dec
cwtl
jne
pop
lcall
sub
dec
adc
leave
aad
int3
icebp
cmp
cwtl
mov
sbbb
add
in
jmp
stos
insb
sub
lret
mov
add
aad
cmp
ds
jle
or
and
pop
pushf
push
insl
mov
inc
and
cld
pop
sbb
push
sti
lods
lock
xor
mov
ja
adc
out
push
add
mov
iret
add
jle
es
and
pop
scas
inc
inc
out
mov
lods
popa
push
jge
fsubl
lea
adc
fiaddl
cmp
lods
add
mov
pop
dec
cld
jecxz
add
insl
in
or
lods
cmpsl
mov
jne
push
add
movsb
mov
push
xor
sti
push
xchg
pusha
repz
ret
inc
jl
add
cmp
jnp
adc
repnz
repnz
xlat
pop
xor
mov
sbb
orl
into
pop
inc
repz
xor
les
popa
dec
enter
add
enter
push
add
and
les
mov
icebp
je
xchg
pop
adc
pop
push
ret
cmpl
lods
xor
stos
ja
mov
xor
add
mov
addb
jo
push
shll
dec
push
jmp
les
rcl
jne
lods
or
jae
push
add
ljmp
loope
sub
sub
sbb
flds
sub
cs
pop
addl
pushf
ja
push
stos
add
fwait
out
add
mov
sbb
stos
ja
or
cmp
test
push
mov
pop
out
pop
sbb
cwtl
lcall
ret
inc
add
repnz
xchg
dec
push
enter
lcall
mov
jg
pop
xor
mov
xchg
je
cmp
popf
add
pop
clc
push
out
mov
dec
mov
jno
add
shl
ds
xlat
lods
sar
push
or
sbb
xchg
aas
or
shlb
adc
add
repnz
xchg
pusha
divb
push
sbb
adc
and
cmp
xor
icebp
hlt
loop
lret
and
xchg
pop
mov
sub
xlat
xor
rcl
mov
mov
pop
loopne
in
jle
add
mov
push
jmp
jbe,pt
test
add
repz
test
divl
loope
add
call
pop
pop
js
sub
nop
les
lods
and
push
mov
data16
or
popl
sub
pop
mov
or
dec
adc
add
cld
int
jge
test
cmp
dec
fstpt
fsubr
dec
push
push
push
dec
adc
mov
add
xchg
push
sub
mov
inc
push
jmp
xorb
mov
inc
lock
loopne
pop
adc
xchg
push
pop
add
les
dec
sbb
comiss
cs
sbb
push
adc
in
ljmp
pushf
mov
push
cmpsl
fisubs
pop
add
sbb
push
add
inc
and
pop
inc
ret
out
mov
dec
jmp
sub
add
cmpsl
adc
hlt
lahf
add
xchg
pop
inc
insl
xchg
add
mov
push
sbb
int3
fs
out
pop
test
add
andl
adc
loope
and
arpl
je
cmp
lea
add
subb
pop
leave
pop
mov
mov
cs
pop
lret
pop
adc
fisubrl
rol
loope
lret
fxch
es
ja
cmp
fldl
xor
nop
les
test
into
aas
push
sbb
mov
inc
dec
jg
add
aas
sub
cmp
aad
outsl
xor
jge
stos
or
popf
add
shll
dec
and
add
rcrb
mov
add
arpl
or
xchg
fimuls
lcall
leave
mov
add
vxorps
cmp
or
jb
subb
ja
daa
cmp
movb
data16
nop
cmc
js
aas
out
add
and
test
rorb
jns
je
add
dec
jecxz
jp
push
insl
add
bnd
pop
lret
call
pop
jbe
iret
add
mov
add
daa
cmp
or
das
xor
movsb
sbb
dec
stos
push
xchg
repnz
or
fistl
xor
mov
rolb
pop
sub
mov
hlt
push
subps
cmp
ds
addb
push
add
cmpl
nop
repnz
in
add
or
imul
lret
nop
loope
mov
shll
mov
lcall
fdiv
mov
pop
mov
cmc
dec
loopne
rcrl
jmp
lods
inc
cld
into
push
jb
shrb
fiaddl
and
imul
pop
or
sahf
dec
add
fcmovne
or
loopne
orb
sub
sbb
sbb
das
jl
lock
or
jnp
fldl
mov
int3
mov
and
jae
mull
cmpl
jo
fldln2
xor
inc
mov
cmp
sbb
xor
ljmp
add
lock
and
pop
add
shrl
pop
xchg
cmp
outsb
xchg
fldcw
add
out
push
add
and
add
jne
add
push
testl
add
mov
test
sbb
das
ret
outsl
cmp
and
test
insb
lret
pop
and
inc
pop
rolb
cmp
pop
nop
testl
mov
cmp
in
add
aam
ja
sbb
arpl
inc
mov
jmp
xchg
inc
mov
or
adc
clc
icebp
ds
in
xor
mov
sti
xchg
jge
add
cmp
dec
stos
pop
mov
add
mov
lret
loop
add
shr
adc
cmp
leave
xchg
or
add
xor
pop
insb
pop
push
adc
mov
daa
aad
jae
add
inc
pop
push
mov
add
loop
bound
inc
and
cmp
adc
mov
into
mov
add
movsb
add
mov
inc
xchg
adc
cs
jge
xchg
jecxz
dec
int3
mov
push
sldt
push
xor
lcall
sbb
pop
daa
and
cmpsb
mov
call
jge
mov
jle
push
inc
or
cwtl
lods
ficomps
add
ljmp
int
cmpsl
inc
aad
jae
cltd
rcrb
add
popa
hlt
insl
add
xchg
aam
mov
stc
add
inc
jmp
testb
lock
add
mov
fcmove
scas
iret
add
sbb
cmpsb
xchg
clc
cmp
or
fs
and
outsl
sbb
ret
xchg
adc
cmpsb
mov
sbb
in
adc
lock
jnp
das
fnsave
std
rclb
add
fwait
push
jmp
jo
add
leave
and
pusha
pop
fcoms
inc
js
push
add
jp
in
add
sbb
aas
iret
jnp
fsubl
jp
xchg
pop
mov
jl
cs
shrb
movl
push
aad
dec
out
mov
nop
dec
movsb
xchg
add
inc
mov
lcall
pop
daa
jg,pn
add
das
incw
paddsw
dec
repnz
cmpsl
popa
enter
stos
pop
insb
packuswb
test
inc
rolb
add
loopne
idiv
enter
lock
mov
sarl
add
sub
mov
pop
std
mov
sti
pop
rolb
inc
lret
jae
rclb
push
lock
mov
mov
lds
add
lea
adc
lcall
adc
and
cltd
cmpsb
push
add
movsb
sub
pop
nop
scas
cmp
icebp
shll
stos
add
push
adc
jns
sub
es
push
shlb
push
cmp
add
jmp
xor
scas
dec
cmpl
mov
add
jbe
jle
lock
jg
sbb
test
jno
and
mov
mov
dec
or
std
aam
cmp
push
push
pop
jne
leave
les
cli
cwtl
mov
jecxz
fsubrs
mov
shrl
or
push
cli
popf
add
bound
jmp
mov
lock
mov
out
gs
outsl
add
outsb
pop
sub
mov
lret
mov
jg
ret
xlat
add
xchg
fcmovnbe
cwtl
jmp
add
push
in
mov
in
add
mov
mov
jno
and
sub
mov
and
xchg
mov
xchg
inc
inc
jns
push
mov
mov
pusha
icebp
fildl
cld
xchg
jbe
pop
lds
add
or
sbb
jle
add
cwtl
cmp
fucomp
aad
icebp
add
or
add
idivl
call
add
outsl
imul
add
insl
test
roll
and
sahf
shll
incl
mov
icebp
push
add
cltd
aas
add
orb
aad
roll
repz
in
sbb
push
pop
mov
and
stos
subl
cmp
add
xor
shlb
mov
sarl
addb
jbe
ds
aam
addb
sbb
insl
inc
add
shrb
mov
jg
ss
inc
sub
pop
std
add
imul
add
rolb
pop
test
jno
add
add
outsl
pop
mov
das
add
cmpsb
inc
les
pushf
mov
fsubl
out
mov
pop
add
gs
mov
add
cld
lret
jecxz
xchg
mov
push
push
pop
jno
loopne
call
cmpl
xchg
pusha
mov
cmp
lret
push
dec
dec
push
xor
push
ljmp
andl
movsl
testl
push
test
add
ljmp
sbb
sbb
add
and
fadd
push
pop
add
andb
jge
sti
push
xor
add
sbb
and
stos
add
test
cmpsb
mov
mov
add
in
lea
mov
outsb
add
sbb
jmp
adc
es
add
mov
ss
pushf
ja
in
out
in
inc
sub
rcrb
sbb
jl
pop
aad
mov
and
cwtl
add
nop
pop
rcll
add
insl
in
add
push
xor
xor
sahf
mov
shlb
test
fwait
cli
mov
pop
adc
sbb
add
iret
popf
sti
xchg
movsl
or
and
pop
pop
subb
repnz
loop
add
push
cmp
add
jecxz
adc
test
jmp
loopne
dec
lahf
sahf
test
fwait
inc
sub
jno
add
jns
push
add
mov
fiaddl
in
sar
dec
cmp
call
repz
cmp
add
lret
add
xlat
inc
scas
sub
add
popa
and
sahf
push
push
push
pop
mov
js
adc
sub
dec
xchg
push
xor
std
jg
add
loope
xlat
push
push
add
mov
insl
hlt
cs
aad
adc
dec
jle
add
cwtl
and
sub
int3
fldt
les
lret
xchg
lds
mov
stos
add
pusha
mov
rcrl
repnz
push
mov
jge
daa
cld
dec
and
pop
movsl
rorb
push
fdivrl
sar
out
inc
data16
iret
sbb
in
pop
cmp
xor
push
sbb
mov
enter
add
movsb
rorb
shll
dec
popa
adcb
push
push
add
cmp
mov
sbb
out
fdiv
mov
icebp
add
mov
fistl
xor
cmp
mov
inc
les
fsubs
je
sbb
and
js
xchg
repz
add
sbb
mov
and
inc
cmpb
xchg
sub
stos
add
iret
adc
dec
aas
xor
or
xor
pop
mov
aam
mov
dec
adc
test
loop
cltd
dec
inc
imul
rorb
jmp
pusha
cmp
mull
add
mov
mov
mov
xor
les
cltd
jo
cwtl
fbld
add
dec
cmpsb
lldt
out
sub
cmc
shlb
add
sub
jnp
out
pusha
adc
cmpsl
mov
or
or
inc
lahf
dec
xor
push
adc
cld
loope
test
movsb
gs
mov
outsb
inc
mov
addr16
inc
sahf
mov
aas
dec
sbb
les
add
pop
cmpsb
dec
add
pop
sbb
push
mov
add
mov
imul
je
fstpt
shrb
mov
sub
fmul
xchg
xchg
cmpsl
add
cld
test
push
jl
ds
ror
out
add
sbb
hlt
mov
mov
call
add
adc
aam
enter
pushl
fldt
push
and
push
xor
xlat
jp
add
jbe
or
mov
and
addl
jmp
cld
fisubs
sub
inc
leave
jge
call
movaps
mov
mov
jnp
mov
addr16
add
mov
movsb
bound
stc
ret
push
jmp
adc
add
jnp
mov
leave
or
test
aas
mov
sbbb
aad
fcomps
xchg
add
lahf
or
scas
mov
adc
sbb
xor
fstpl
loopne
sub
push
add
jmp
push
shrb
mov
add
in
pop
jmp
mov
sub
push
adc
sbb
mov
mov
es
mov
cmp
sub
mov
or
and
add
gs
inc
xchg
nop
dec
add
pop
ret
add
inc
or
add
pop
sbb
pop
push
ds
inc
xchg
rol
aaa
enter
dec
out
xor
stc
adc
and
rclb
or
movsl
add
bound
add
aad
mov
pop
cmpsl
pop
in
repz
mov
add
enter
mul
outsl
dec
insl
add
inc
mov
add
inc
jae
test
cltd
cwtl
jne
pop
add
adc
lret
out
add
movsl
lock
jno
add
pop
inc
dec
in
sti
out
in
outsb
add
or
jge
mov
lret
pinsrw
pop
xor
in
jo
addr16
mov
mov
stos
add
add
lods
cmp
sub
aaa
scas
lret
loop
add
loopne
jne
add
mov
cltd
fcomps
lcall
shll
xlat
lret
xchg
flds
pop
dec
push
push
lods
les
jmp
sub
bnd
dec
clc
es
rorb
dec
mov
and
add
imul
jo
add
xchg
add
adc
into
bnd
add
fsubl
inc
lods
fisttpll
or
mov
add
add
and
push
add
xor
adc
fwait
arpl
adc
in
movsb
pop
add
gs
sbb
add
inc
sub
add
or
inc
stc
or
lea
adc
xor
jnp
cmp
shr
dec
out
shll
pop
push
pop
mov
lahf
out
adc
add
pop
nop
add
jne
fdivrs
mov
add
hlt
xlat
leave
add
and
fs
cmp
punpckhwd
pusha
and
js
add
sbb
call
ret
xlat
add
imul
pop
test
dec
sbb
shlb
fsts
lret
lods
insb
iret
mov
data16
sbb
hlt
cmp
add
sub
and
push
or
sub
repz
mov
and
sub
jg
out
test
popf
or
jns
add
push
inc
out
pop
rcrl
push
loope
roll
test
cmc
pop
arpl
xchg
addr16
xchg
jae
inc
aad
lcall
add
sub
rclb
xchg
adc
and
jbe
or
fdivr
cmp
mov
add
daa
sar
pop
mov
nop
pop
int3
inc
pop
pop
out
popf
xor
nop
add
jne
fadd
xor
mov
adc
push
rol
fidivrl
xchg
or
clc
add
shlb
ficomps
jbe
lret
pusha
movsb
inc
add
push
jno
add
mov
cmpsl
nop
pop
addl
pop
std
mov
add
or
xorb
nop
enter
or
hlt
add
sub
test
pusha
sbb
test
xchg
lea
scas
outsl
int
nop
add
dec
stc
and
in
call
adc
rcl
or
add
jge
xor
out
add
nop
dec
add
insl
cwtl
ja
mov
sub
fdivr
or
jg
inc
fsubs
fs
addl
mov
cmp
call
add
or
mov
mov
inc
mov
std
gs
mov
movsl
adc
aam
xchg
fs
lret
sub
xchg
and
jnp
push
xor
pop
pop
or
adcl
xchg
xchg
es
and
jo
pop
out
mov
and
js
mov
add
inc
mov
fisubl
cmp
leave
add
fcoml
cwtl
add
ds
mov
mov
popa
adc
add
pop
mov
add
xchg
fisubrl
cmpsb
rorb
mov
cmp
mov
add
rcrl
jae
add
inc
pop
cli
in
std
add
idivw
out
jmp
xor
in
add
cwtl
sbb
push
push
clc
rolb
xor
dec
stc
mov
pop
mov
aad
pop
sbb
gs
cmp
add
sub
leave
int
dec
add
rorb
test
lret
adc
rolb
call
das
mov
add
fcomip
ds
fdivl
add
jl
enter
xor
jb
andb
mov
push
sub
cmp
sbb
jb
mov
adc
daa
dec
add
sbb
movsl
sbb
pop
ret
imul
popf
cmp
iret
lahf
mov
fwait
into
mov
jg
pop
inc
ret
add
jp
rclb
shll
repnz
cmp
and
push
cmpsl
push
mov
ljmp
or
in
jnp
mov
hlt
jle
hlt
scas
out
add
repnz
cmpsb
movsb
addb
lds
cmp
mov
sti
mov
scas
pop
loopne
scas
or
xchg
cmp
fdivrs
stos
pop
lahf
cmpl
dec
pop
sub
pop
add
je
inc
imul
das
jge
shl
pop
dec
xchg
clc
xor
fisubs
cmp
add
mov
loope
fwait
cmp
mov
add
icebp
addb
fwait
lahf
or
in
inc
add
mov
ret
adc
lock
sub
mov
sbb
mov
je
xchg
dec
xor
jp
mov
push
test
ja
adc
push
adc
sbb
adc
pusha
xor
pop
iret
jae
pop
shrb
xchg
cmp
icebp
add
cmpsb
sti
jmp
dec
cmp
in
sbb
cltd
inc
fwait
sbb
mov
jb
add
jno
pop
lret
jg
mov
xor
flds
out
in
mov
in
cld
or
pop
ja
add
int
jecxz
iret
pop
nop
movsl
es
or
rorb
pop
or
jmp
add
cmpb
add
pop
lea
ss
in
sub
repnz
jmp
xchg
mov
lods
mov
scas
jno
add
test
and
mov
jae
add
lret
mov
add
or
insl
dec
mov
xorl
pusha
rcrb
aad
sbb
hlt
and
out
add
pop
lods
ret
pop
outsb
jae
and
fiadds
xorb
add
sub
data16
xor
jnp
inc
jnp
stc
pop
sub
rolb
fdivp
xlat
call
adc
daa
push
ds
dec
sbb
jne
inc
ds
insb
addb
sarl
outsb
or
in
add
or
add
push
sub
aaa
jp
and
test
add
xor
int3
pop
mov
leave
add
jmp
pop
out
lock
addr16
pop
inc
pop
test
push
rclb
pop
or
add
and
lcall
iret
mov
dec
add
xchg
movsb
fidivrs
add
gs
add
iret
in
cmp
pushf
inc
mov
jno
bound
bnd
ljmp
test
jp
andb
push
xchg
or
pop
mov
pop
adc
push
pushf
pusha
sub
add
ss
add
sbb
jle
add
push
mov
add
adc
jbe
les
out
stos
call
aad
dec
add
cmc
jne
pop
inc
fiadds
cmpsb
ret
in
cli
shrb
add
lahf
mov
xchg
ret
mov
cmp
aam
xchg
push
inc
push
rcll
int
xchg
fadd
cmp
mov
mov
jb
jge
pusha
movsb
cmp
dec
icebp
imul
or
fwait
pop
stos
out
je
add
sub
push
addr16
pop
shll
push
insb
pop
iret
pusha
pop
mov
mov
lds
aas
inc
and
mov
loop
add
push
adc
in
cmpsb
add
lods
pushf
mov
inc
fsubl
nop
xchg
cltd
les
cmp
mov
dec
inc
shrb
add
lahf
mov
xchg
pop
sub
aas
in
and
outsl
xor
inc
je
std
pop
jge
xchg
insb
rol
pop
add
in
xchg
mov
repz
add
add
and
add
enter
push
ds
daa
orl
inc
mov
add
push
cwtl
mov
add
das
sbb
shrb
roll
ficomps
jae
and
xlat
add
stos
or
add
inc
xchg
filds
repz
shrb
dec
pop
push
pop
mov
xor
xor
inc
paddb
pop
adc
dec
push
xor
sbb
mov
cli
sub
add
shl
repz
pop
fiaddl
push
xor
nop
adc
add
mov
cmp
pop
jp
push
lods
add
xlat
test
lret
fwait
popf
int3
sub
bound
jb
aaa
iret
mov
inc
xlat
dec
pushf
enter
int
pop
sub
adc
rcll
push
inc
repnz
or
add
mov
clc
xlat
jecxz
mov
mov
add
dec
faddl
add
sub
cmpsb
mov
mov
lcall
cmp
mov
incb
jbe
pop
sahf
and
pusha
inc
sub
and
fcoms
mov
mov
insl
add
andl
lret
fbstp
adc
push
outsb
aaa
push
sbb
popf
add
add
push
aad
xor
pusha
mov
shrl
add
ror
sahf
xor
jb
add
ret
lret
dec
push
dec
sub
pop
outsb
pusha
incl
cs
mov
cmpsl
inc
mov
out
add
loop
pop
push
mov
int3
add
or
and
lea
outsb
dec
adc
dec
sbb
testl
or
jb
shl
jnp
push
cmp
mov
cmp
sbb
call
jp
divl
mov
add
fwait
add
xchg
lods
mov
shlb
sub
inc
or
or
xchg
pop
fs
or
push
ljmp
push
repnz
inc
add
xchg
aas
mov
add
inc
nop
into
and
sub
aam
push
push
or
in
sbb
push
adc
add
rcrb
dec
xorl
push
mov
push
xor
cltd
ja
outsl
jnp
add
push
popf
arpl
add
bound
rolb
adc
push
mov
lret
and
mov
jp
xchg
or
mov
mov
inc
xchg
sub
add
fiadds
cld
and
js
loopne
leave
sbb
and
mov
out
adc
pop
mov
cld
ds
aad
lock
cmpsb
xor
push
test
filds
inc
dec
fsubrs
dec
mov
push
and
fwait
pop
fs
add
mov
pop
fcompl
cmp
int
pop
arpl
or
js
hlt
lods
add
mov
shll
mov
lret
subb
push
in
repnz
faddl
jno
lcall
mov
ljmp
adc
imul
aad
jmp
arpl
xchg
xchg
push
icebp
orb
out
add
into
jo
insb
popf
je
add
pop
fisubs
stos
jge
jl
ds
daa
sbb
mov
ja
and
mov
push
mov
sbb
cmp
dec
pmulhuw
add
repnz
sbb
add
fnstsw
inc
add
popa
push
bound
leave
aam
inc
addb
add
jg
adc
add
jecxz
add
xchg
aam
movsl
add
xor
sub
lret
xchg
jle
jl
cmpsl
jo,pn
icebp
ret
mov
aam
movsb
shlb
pop
lock
add
scas
lods
stos
adc
push
pusha
xchg
or
add
lods
inc
data16
cwtl
fwait
xor
adc
sub
mov
add
push
test
pop
mov
dec
inc
mov
cmpsb
les
pop
push
add
into
cmp
in
nop
cwtl
add
jbe
aaa
rclb
jl
add
push
jg
add
fdivs
pop
aam
add
inc
stc
cmpsb
imul
lea
ret
mov
into
fisubl
jmp
push
inc
clc
cmpsb
mov
mulb
dec
dec
cmp
pusha
mov
loop
pop
pop
cmp
cwtl
add
push
in
inc
xor
pop
push
push
enter
add
popa
or
lods
jmp
add
nop
clc
scas
push
push
pop
inc
pop
inc
insl
in
aam
cld
add
push
neg
movsl
sahf
rorb
gs
leave
mov
imul
and
or
sti
outsb
test
jle
push
xchg
add
push
icebp
aaa
add
xchg
test
push
movsb
pop
jne
in
stc
adc
adc
lock
popa
into
mov
dec
fisttps
mov
ljmp
xor
pop
pop
lock
add
or
and
lods
pushf
mov
pop
push
cld
push
pop
pop
mov
mov
ja
popa
mov
daa
mov
cltd
add
xchg
fdivr
add
bsf
and
nop
inc
add
das
push
add
xor
mov
inc
xor
loop
add
jns
aam
ja
add
mov
das
lahf
inc
add
sti
lods
add
inc
test
jg
cwtl
xor
fsubrs
push
or
add
shll
lock
add
pusha
pop
icebp
mov
sbb
loop
add
gs
fcomp
leave
jns
mov
add
jmp
in
jle
add
sub
icebp
imul
movsb
xchg
mov
sub
dec
stc
add
sub
and
popl
cmp
jnp
cli
pop
pop
lret
dec
iret
das
and
adc
lahf
out
xlat
cmp
jns
add
outsb
sahf
movsl
cmp
xchg
and
pop
inc
push
loopne
cli
fs
add
aas
jle
xchg
ljmp
aaa
insl
xor
jg
add
ret
dec
adc
jp
xchg
sbb
push
dec
addr16
add
xorb
fstpt
add
and
add
pop
arpl
mov
subb
rolb
fstl
movsl
cmp
cmp
addb
loope
fstp
add
test
int
inc
cs
mov
hlt
pop
push
dec
pop
test
inc
add
xor
mov
insl
int
loop
add
dec
sbb
jl
xor
or
jae
add
loopne
xchg
adc
lds
or
cmp
fsts
mov
or
fildl
call
and
xlat
cmp
jl
cmp
mov
shlb
or
in
add
and
addr16
add
setle
imul
dec
daa
xlat
cmpsl
aam
dec
add
mov
mov
mov
adcb
pop
pop
jecxz
add
cmpsb
mov
arpl
add
xorb
cld
cmc
fisubs
outsl
sbb
imul
loopne
mov
jp
xchg
shll
out
inc
cmp
jge
sbb
shll
in
sbb
push
ret
hlt
je
pop
pop
repz
mov
jns
jo
push
das
sbb
repz
and
push
test
icebp
xor
in
pop
out
xor
push
int3
lahf
adc
add
mov
call
sbb
lea
adc
out
cmp
pop
add
mov
sbb
test
popf
sbb
inc
add
addb
xchg
movb
mov
mov
in
add
call
mov
mov
xchg
mov
pop
es
lret
testb
lds
and
jae
cmp
int
pop
pop
push
test
in
fldl
ret
rcrb
jge
sbb
sub
fstpl
mov
repz
loopne
in
jb
add
fidivrs
and
testl
jo
sub
xchg
iret
stos
bswap
and
data16
inc
dec
stc
rolb
aaa
sbb
ljmp
icebp
pop
enter
inc
out
leave
mov
adc
mov
jns
ss
filds
adc
and
pop
std
sub
add
lret
inc
imul
add
jl
fdiv
xchg
and
and
mov
cld
cwtl
popa
add
nop
sub
xchg
js
add
add
jmp
pop
aam
push
cmp
and
nop
add
and
into
add
clc
out
fst
fwait
std
shlb
call
popl
xchg
dec
xor
add
pop
mov
fwait
add
orb
push
negb
loopne
sub
cmp
add
shl
jo
and
aas
add
pop
jmp
add
into
push
mov
mov
mov
add
or
adc
cmp
shll
push
xchg
mov
movsl
pop
and
repnz
add
mov
flds
jecxz
fsubp
mov
sbb
mov
bound
sbb
fsub
jl
dec
roll
add
push
lods
dec
push
in
cmp
push
cli
inc
rcr
adc
shr
lahf
add
and
mov
call
sbb
pop
data16
add
adc
fsubrs
scas
adc
mov
sub
daa
pop
add
adc
rorb
add
leave
das
outsl
mov
add
push
pop
add
cmp
js
mov
lock
scas
dec
xchg
cwtl
inc
push
add
je
mov
jge
adc
xlat
add
test
sbb
cmp
mov
int3
mov
add
mov
inc
test
repz
daa
orb
sbb
rolb
and
outsb
jmp
movsb
inc
sub
mov
fisttpl
xor
inc
sub
lds
add
xor
cmpsl
ror
iret
add
movzwl
jmp
push
test
sub
pop
gs
or
test
xor
fnstcw
pop
pop
int3
es
mov
xchg
cmp
enter
push
push
mov
fwait
andb
and
lahf
cmp
lods
jp
inc
mov
mov
or
or
mov
dec
push
xor
je
push
dec
pop
js
enter
sub
push
mov
dec
pop
pop
or
test
xchg
loope
clc
daa
stos
icebp
and
xchg
data16
adc
push
fcomps
arpl
rcll
movsl
mov
mov
push
add
pop
sbb
pop
or
pop
add
scas
xor
in
pop
add
divl
cmp
ljmp
and
xchg
bnd
add
jge
xchg
jo
jbe
add
repz
mov
movsb
adc
jl
bt
or
add
mov
test
jbe
add
shlb
xchg
adc
jg
add
mov
mov
add
fwait
xlat
insl
fistps
repnz
test
sub
sahf
clc
jecxz
xchg
add
xchg
or
inc
scas
addl
ljmp
mov
push
inc
or
cwtl
add
sbbb
in
in
add
jo
cld
xchg
mov
idivl
out
add
mov
fadds
fistl
mov
adc
sbb
sub
and
ss
aam
add
decl
stos
imul
jbe
std
add
mov
loope
jno
push
jl
inc
add
lret
mov
dec
or
stc
mov
xchg
fld
fimuls
push
out
dec
add
jae
insb
cmp
dec
pop
lods
jns
addr16
push
clc
ffreep
sahf
add
or
jle
adc
hlt
add
adc
sbb
mov
push
or
cld
push
scas
out
in
lcall
mov
add
mov
aam
push
xchg
add
movsb
cli
inc
imul
es
adc
inc
or
lret
addr16
cmp
repz
add
gs
inc
lods
add
pop
enter
shl
add
data16
in
add
dec
sub
aam
sub
sbb
push
dec
insl
jae
sbb
addr16
inc
jns
xchg
idivl
ljmp
and
rep
sahf
push
mov
lea
int
daa
and
xchg
add
mov
mov
add
push
repnz
faddl
sub
clc
lods
and
pop
xchg
addr16
cmp
add
iret
pop
inc
outsb
jbe
inc
sbb
push
lahf
jecxz
cmp
pshufw
add
jg
iret
cmp
add
movsb
mov
xchg
lahf
sub
bound
add
testb
dec
in
cmp
dec
scas
std
dec
fisttpll
inc
push
lahf
popf
addb
sarl
pop
or
pop
clc
xor
aad
gs
push
pop
int3
mov
rcrl
inc
push
mov
add
sub
and
rcr
icebp
jg
lea
add
add
jae
and
out
pop
imul
push
int
pushf
add
jle
out
std
pop
add
clc
jmp
cltd
pop
adc
dec
cmp
shlb
mov
or
shll
sbb
ja
dec
dec
adc
in
sahf
lods
or
mov
xlat
and
add
loopne
xor
divl
es
add
dec
sti
nop
ljmp
cmp
loopne
xchg
mov
xor
adcb
test
mov
inc
mov
cmc
pop
sub
jecxz
mov
arpl
dec
add
stc
add
add
cmp
sub
add
cs
clc
fcomip
add
mov
and
inc
mov
mov
add
push
add
add
add
sub
aam
mov
dec
cwtl
daa
insb
add
mov
sub
cmpsl
sbb
aas
fwait
mov
mov
jl
and
outsb
out
pop
mov
or
inc
data16
or
add
jbe
mov
jl
and
pop
jb
and
lds
dec
adc
add
or
pop
in
push
and
xor
jmp
shr
cmpl
rcr
xor
test
sbb
hlt
sub
mull
sub
add
out
ret
roll
add
push
cmpsb
leave
repz
xchg
add
and
pop
loopne
mov
stos
push
sub
or
aas
inc
rolb
arpl
lock
and
movsb
sbb
lcall
add
dec
mov
and
mov
pop
add
roll
jbe
push
fwait
add
fnsave
sahf
dec
add
pop
fst
and
insl
stos
cmp
adc
call
ficompl
add
test
xor
push
repnz
out
or
lahf
pop
data16
inc
test
mov
jp
xchg
add
mov
in
ja
mov
punpckhbw
sti
mov
add
hlt
xchg
add
fcmovne
jnp
sub
adc
sahf
dec
xchg
push
shrl
push
aas
ljmp
mov
mov
sbb
pop
std
mov
mov
xchg
in
mov
add
repz
imul
jg
add
cmpb
loope
mov
add
and
push
outsl
jl
add
ret
cld
pop
sbb
mov
lods
push
sub
add
leave
pusha
les
mov
mov
movsb
fbstp
mov
je
jle
js
add
cmp
lods
sbb
loop
xor
maxps
push
mov
mov
mov
jle
cmp
mov
add
inc
jge
jb
add
daa
std
cli
add
add
add
push
test
sub
jg
clc
sbb
adc
addr16
jae
ret
push
loope
rol
push
sub
add
add
clc
andb
cli
jge
pop
stos
das
mov
add
inc
repnz
pop
psubb
add
cwtl
pop
mov
and
sub
xor
idivb
clts
pop
sub
call
add
ror
mov
xchg
add
sub
aam
dec
hlt
sbb
add
pop
stos
int3
cmpsl
lret
pop
ja
xor
loopne
les
xchg
add
mov
aad
or
js
roll
or
push
cmp
imul
and
add
push
test
add
xor
pop
pop
loopne
rclb
in
add
popf
push
push
mov
add
dec
jne
incb
add
pushf
out
add
mov
add
add
cltd
ljmp
xor
and
into
loopne
aaa
loopne
sbb
icebp
dec
mov
arpl
adc
lods
aad
out
cmpb
pop
aam
leave
add
dec
mov
push
or
int3
insl
roll
iret
lock
jnp
pop
and
cld
mov
add
rcl
add
push
loopne
ret
adc
cmp
dec
je
add
add
xchg
fstps
mov
mov
xchg
or
pop
in
add
fidivrl
jne
loop
ljmp
xchg
mov
or
add
repz
ficoml
add
icebp
push
mov
aam
mov
cmp
cmp
jne
xchg
sar
inc
add
das
inc
mov
add
add
dec
cmp
dec
bound
movsb
loop
lret
pusha
fsubrl
add
and
xchg
and
js
mov
inc
xor
loopne
mov
in
aad
add
dec
idivl
sub
cmpb
in
push
nop
je
out
add
or
jle
les
enter
stos
jae
inc
add
xchg
jbe
adc
pusha
mov
sbb
orl
xchg
dec
in
jae
cs
subb
rclb
add
mov
icebp
shll
mov
popf
mov
mov
aaa
xor
add
sarl
stos
push
cmp
mov
or
push
fisubrl
pop
mov
jo
add
cvttps2pi
loopne
mov
push
mov
sub
je
adc
mov
repnz
add
jecxz
jmp
mov
sarl
adc
outsl
push
out
jmp
test
mov
les
orb
incb
addr16
mov
xor
mov
fistpl
daa
int3
pop
stos
pop
sbb
adc
sbb
js
lea
pushf
xor
aad
add
ret
sti
pop
xchg
jp
xchg
and
ja
arpl
sbb
insb
add
js
or
ficoms
push
or
loopne
xchg
and
pop
roll
mov
push
dec
cmp
jge
or
or
add
add
insb
adc
push
dec
mov
psubsb
add
and
lods
inc
xor
xchg
add
incl
bound
ret
jno
mov
push
push
es
jae
repnz
loopne
das
mov
movsb
mov
adc
mov
sbb
cmpsl
jb
ret
rorb
jne
inc
movsl
out
add
lock
fnstenv
mov
sahf
mov
loop
pop
push
outsb
dec
jmp
jp
adc
cs
out
pop
repnz
push
mov
es
add
rcrl
nop
xchg
xchg
dec
and
mov
mov
push
testl
add
adcb
cmp
enter
iret
enter
add
out
mov
jne
les
mov
shrb
add
insl
add
push
xor
jmp
and
adc
or
add
insb
lea
jbe
aas
push
scas
or
and
sbb
pop
addb
scas
pusha
mov
adc
push
sbb
lret
std
lock
int3
mov
sub
jecxz
adc
insl
imulb
add
int3
sbb
pusha
mov
into
cli
or
ficoms
ljmp
ljmp
cltd
mov
lret
jnp
mov
adc
mov
xchg
mov
pop
es
scas
xor
add
cwtl
inc
shrb
cmp
xor
cmp
inc
mov
arpl
or
mov
fildl
cmpsb
xchg
rclb
add
inc
pop
or
sbb
test
or
add
loope
les
add
sbb
add
popf
in
jb
out
dec
add
cwtl
dec
fcomip
lock
mov
ja
add
loope
pusha
insl
push
pop
roll
sbb
and
push
cmp
add
and
push
imul
stos
outsl
ret
cld
sahf
and
repnz
dec
pusha
test
roll
add
adc
cmp
mov
fs
stc
add
js
jns
jle
jb
xor
sub
jae
add
rcr
out
arpl
dec
add
cmpsb
es
push
jmp
add
js
movsb
fs
pop
add
inc
mov
add
inc
xor
add
popf
in
gs
shll
pop
add
scas
xchg
add
or
xchg
dec
int3
daa
mov
push
xchg
fiadds
add
pop
test
add
aad
mov
lods
dec
push
out
mov
xchg
mov
sub
stc
test
out
fdivr
dec
add
mov
mov
aam
mov
dec
sbb
ja
shll
sbb
dec
fwait
add
aas
jae
cmp
push
add
push
cmp
jp
add
imull
les
pop
js
fildl
shll
pop
mov
mov
mov
and
lock
dec
mov
add
dec
mov
add
fsubrl
aad
add
add
push
js
push
inc
mov
xor
push
pop
scas
dec
inc
rcrb
into
imul
or
jno
mov
add
scas
push
lretw
cli
add
cld
add
std
or
jle
jno
aas
pop
repnz
mov
and
imul
sti
or
mov
lods
notb
and
fnstcw
fadd
jg,pn
add
cmpsb
jl
inc
and
adc
fs
aam
arpl
lock
ja
test
sub
inc
xor
cmp
test
xor
add
mov
inc
mov
pop
test
movb
int
data16
pop
rcl
mov
std
imul
mov
lds
push
cli
add
jb
out
out
jmp
mov
mov
or
add
ljmp
pop
mov
lldt
dec
shlb
jp
add
push
es
xor
pushf
sbb
call
and
mov
mov
rclb
add
inc
pop
xchg
bound
cmp
call
xchg
js
fcomps
cmp
pop
adc
in
add
mov
icebp
push
add
xchg
cmpxchg
dec
cmp
and
cmpsl
sbb
mov
add
lret
inc
aad
in
divb
jne
lock
enter
dec
jg
gs
sbb
add
repnz
pop
loope
mov
push
stc
sahf
add
jl
sub
cmp
xchg
adc
add
xor
add
mov
outsb
jo
fidivrl
pop
or
pop
loope
scas
add
inc
mov
aad
rorl
popf
fidivs
mov
repnz
stos
mov
jmp
sub
pop
push
add
insb
sbb
pop
shrl
mov
inc
pop
mov
imul
mov
fldenv
inc
clc
pop
ror
or
jb
mov
out
cmp
ss
add
lds
jg
fadds
ja
pop
scas
xchg
push
int3
push
lock
test
aas
adc
add
sbb
sbb
add
sub
mov
dec
cmpsl
mov
jnp
hlt
bound
jns
roll
xchg
je
lods
adc
roll
cmp
xchg
pop
sub
lds
adc
orb
ret
orb
jl
bound
es
add
popf
fnstcw
sub
out
iret
ljmp
scas
aam
cmpsl
sub
xchg
loopne
addr16
leave
add
or
cwtl
add
shrb
adc
mov
and
add
jo
add
and
incl
std
lret
add
cmp
xor
cmpsl
mov
sbb
inc
push
jl
subl
scas
lahf
push
sti
push
lods
pop
add
add
int
mov
lret
cmp
push
sbb
mov
loopne
add
add
stos
mov
add
inc
jae
fistps
ret
inc
add
jo
imull
pop
pop
adc
cmp
cltd
outsl
add
out
fdivs
push
cmp
add
adc
add
dec
int3
push
mov
es
cmp
dec
add
outsl
add
out
loop
push
xor
or
add
and
sbb
hlt
mov
insb
add
add
mov
shrl
pop
out
fmuls
pop
sbb
lret
add
call
mov
inc
insb
ds
adc
push
inc
jae
and
add
loope
icebp
xchg
outsb
xchg
std
sub
call
jno
stc
push
add
inc
int3
inc
test
jb
mov
add
jmp
mov
fidivs
push
or
movsb
add
inc
dec
lcall
add
in
out
xchg
andb
ret
popa
jg
iret
fdivrp
dec
pop
cmp
mov
mov
pop
sub
jno
ret
rcll
imul
aas
dec
sti
xor
xlat
sbb
icebp
dec
cmp
rep
aas
dec
mull
adcb
xchg
jno
add
into
push
sbb
add
push
xchg
imul
ret
mov
adc
pop
jg
fsubrl
bound
pop
ds
inc
mov
enter
sbb
aaa
xchg
and
stos
add
loope
add
adc
push
sahf
xor
and
lcall
pcmpeqw
mov
imul
das
adc
cmc
xor
mov
stos
stc
xor
push
jl
arpl
add
xchg
sbb
sbb
add
popf
test
call
jns
ss
jge
add
js
mov
push
add
cltd
aad
and
shll
faddl
sub
pop
sti
mov
pusha
add
sbb
fiaddl
cmc
aaa
add
cmp
addl
lock
or
test
imul
mov
sub
cmp
test
sahf
ljmp
loope
in
mov
pop
cmp
mov
in
popa
adc
adc
mov
stc
mov
repnz
inc
adcb
mov
loopne
scas
imul
mov
inc
movsb
jo
pop
out
jmp
pushf
adc
aas
xchg
add
inc
stos
add
push
mov
shlb
fmull
adc
push
fcompl
arpl
mov
out
jo
add
or
sub
jge
insb
xor
jecxz
add
sti
bound
push
fnclex
testb
aaa
js
pushl
cltd
test
rcrl
mov
jl
add
sub
mov
aaa
add
add
jae
mov
adc
in
popl
orb
stos
add
or
push
add
jge
dec
sbb
mov
sub
test
sub
insl
fiaddl
jg
jnp
push
adc
test
jge
mov
sbb
pop
pop
mov
cmp
test
and
daa
sbb
cmp
les
in
mov
push
pusha
pop
and
test
popa
push
xor
arpl
pop
loop
push
rorl
mov
or
mov
out
push
add
daa
dec
add
clc
pushf
jo
int
fildl
push
in
popf
aaa
loopne
sub
pop
inc
ret
jne
gs
orb
neg
dec
mov
mov
jg
push
push
mov
aam
subb
adc
into
cld
repz
add
insl
jno
or
pusha
mov
add
loope
add
jnp
jbe
sub
cmpl
cwtl
cli
imul
sub
mov
lcall
je
push
mov
sub
xchg
pop
cltd
fcmove
add
or
mov
pop
jno
xchg
shll
in
pop
adc
cmp
lds
mov
fsubrs
mov
add
imul
aas
dec
sbb
cld
cmp
sub
add
in
push
cmp
test
lods
sti
divl
add
loop
add
mov
adc
jle
repz
mov
or
adcb
xchg
add
cmp
js
adc
add
or
jbe
mov
add
cltd
pop
dec
mov
cmp
popf
xchg
adc
xor
mov
cli
in
add
mov
jmp
out
inc
pusha
stos
sub
cmp
aad
nop
popf
add
in
mov
shlb
add
push
repnz
add
stos
std
and
add
cli
loope
sbb
pop
add
negb
mov
pushf
dec
in
stos
je
add
lock
test
movsb
xchg
mov
push
sub
test
add
or
ljmp
pushf
mov
dec
jb
or
push
pop
andb
insl
ja
xchg
push
or
cmp
movsb
test
inc
inc
sub
adc
cld
mov
xchg
mov
scas
adc
mov
push
jmp
jle
movsb
ret
push
add
dec
ss
pop
nop
shll
inc
fcoml
arpl
mov
xchg
push
and
sahf
test
ret
add
aad
sub
dec
aaa
pop
pop
inc
cmp
lea
cmpb
push
add
lock
sub
pop
cltd
sbbb
sub
fildl
add
add
dec
mov
adcl
stos
pop
fimull
mov
mov
js
add
mov
mov
jmp
pop
dec
sub
insb
xchg
mov
fstpl
mov
add
adc
add
jbe
add
in
push
jmp
jle
sbb
enter
imull
out
dec
repz
jl
mov
nop
add
adc
cmp
mov
pop
insl
sti
cli
je
mov
add
jne
pop
sbb
or
inc
lret
jns
icebp
inc
outsb
and
pop
into
mov
adc
mov
sbb
cmc
push
mov
cmp
jo
test
inc
and
push
movsb
pop
add
adc
add
sbb
jge
sti
push
lahf
push
cmpsl
fwait
pusha
scas
ss
cmp
push
sub
sbb
ja
push
sub
mov
xchg
sbbb
lret
addl
jne
js
lods
repnz
cmp
ljmp
add
mov
movsl
pcmpgtb
ret
add
adc
push
add
sbb
std
pop
pop
movb
adc
into
ja
pusha
push
test
les
test
add
icebp
inc
gs
into
fcmovnu
add
cwtl
xor
cld
in
out
icebp
aam
xor
dec
sbb
es
add
pop
test
and
jae
or
push
sub
fisttpl
test
mov
cltd
ds
insl
push
add
add
stc
pop
cmp
arpl
xchg
jg
add
jne
out
or
movsl
xchg
and
aam
pop
scas
add
mov
cmp
insl
inc
add
jmp
add
cmc
push
add
es
pop
daa
nop
pop
inc
pop
fisttps
ja
pop
in
add
pop
dec
jg
jnp
out
pushf
loopne
mov
subl
mov
sub
or
ss
jge
aad
data16
xchg
testb
push
pop
imul
stc
lods
cmp
add
je
mov
add
arpl
outsb
mov
add
cmp
lcall
pop
lock
add
lods
data16
outsb
test
dec
test
aam
add
dec
stos
dec
mov
dec
jmp
mov
push
push
pop
das
insl
lret
and
add
cmp
add
add
push
imul
or
movsb
ja
xorb
add
stos
mov
addr16
mov
int
add
dec
adc
leave
lahf
jmp
scas
enter
daa
bswap
add
in
jno
int3
loopne
mov
fistps
cmp
xor
stos
add
jmp
cld
and
fwait
cmpsb
add
pop
loopne
mov
dec
and
inc
lahf
and
jle
in
cmp
add
pop
push
inc
adc
cmovo
mov
sbb
fcomip
std
xchg
sahf
add
fisubrs
sbb
in
imul
out
fcoms
cmp
push
psubsw
sbbb
jbe
jge
pushf
aaa
call
fisttpl
ret
jnp
sbb
add
mov
out
and
pop
inc
jmp
xorl
mov
and
sbb
test
push
xorb
test
pop
mov
stos
fldl
movsb
jo
adc
add
clc
mov
add
xor
push
add
cli
cwtl
xchg
mov
xchg
stos
mov
xor
add
shll
fimull
enter
xlat
bound
push
or
xchg
sbb
cmp
mov
sub
std
lods
dec
mov
sbb
sti
pop
into
sbb
bnd
mov
lods
pop
dec
mov
xlat
pushf
mov
lock
call
sbb
push
lock
sahf
xorl
call
inc
jp
cmp
mov
lahf
scas
mov
inc
test
xchg
leave
and
popa
in
lcall
push
add
cli
push
cld
xor
jge
jecxz
inc
or
adc
mov
add
jo
ss
sub
enter
or
jbe
incl
mov
outsb
cmc
das
cmpsl
out
add
mov
sbb
jbe
gs
fiadds
sub
fnstcw
mov
pop
add
inc
and
loop
add
adc
aaa
xchg
cmp
out
pop
es
pushf
add
inc
and
mov
xlat
stc
fs
pusha
adc
std
or
lret
lock
jbe
jne
pop
push
out
dec
rclb
repnz
sbb
inc
pop
out
add
fisttpl
sbb
sbb
and
int3
pop
fdivrs
bsr
sbb
hlt
cld
bound
add
subl
movsb
xor
hlt
dec
ja
add
scas
xor
pop
xchg
stos
lods
add
push
add
clc
cmpsb
iret
dec
jle
inc
push
adcl
rolb
stc
inc
iret
jle
xchg
insl
push
add
xchg
and
add
clc
push
adc
push
jmp
roll
add
bnd
out
ret
aam
scas
mov
and
sarb
sbb
push
xor
popf
test
call
mov
clc
add
rclb
lahf
dec
inc
hlt
mov
mov
pop
push
adc
test
xor
add
xor
or
xchg
adc
sub
scas
or
adc
mov
movsb
xchg
es
or
out
push
and
adc
bound
aad
push
ja
pop
add
data16
or
lret
pop
dec
rclb
nopl
xor
mov
sub
mov
pop
sarl
in
orb
das
out
xchg
xlat
pop
nop
pop
cwtl
sub
dec
cmp
roll
mov
mov
cmpl
add
cwtl
iret
jns
dec
xor
lds
pop
outsl
xor
add
add
mov
xorb
inc
jle
ret
pop
add
daa
rolb
out
lahf
pusha
iret
inc
adc
rcl
adcl
cmp
cli
add
inc
xchg
sbb
mov
push
hlt
clc
aas
scas
sub
repnz
test
ds
es
dec
lret
xor
add
fdivr
sub
add
js
mov
sti
and
aam
or
pop
pusha
inc
adc
xchg
inc
mov
inc
out
pop
add
xor
and
in
push
aaa
repnz
popa
call
jno
pop
cs
cli
adc
xchg
dec
add
xchg
push
mov
pop
push
je
cmp
or
jle
add
cmp
push
cmp
in
icebp
pop
shl
iret
shlb
cmp
mov
outsl
dec
mov
fildl
lcall
dec
add
push
pushf
sbbb
stos
mov
lods
add
push
call
ljmp
pop
and
rolb
repnz
sub
out
cli
idiv
data16
test
ljmp
xor
pop
subb
xchg
loopne
mov
sti
js
mov
scas
js
add
push
mov
icebp
jp
xchg
sub
roll
push
cli
cs
fisttpll
ds
jnp
movb
or
add
jge
jae
xchg
in
add
adc
add
inc
mov
add
fwait
daa
add
push
test
fistpll
stc
add
and
ss
iret
stos
pop
add
lret
adc
push
inc
repnz
imul
out
lahf
jmp
lock
or
xchg
add
cmp
add
mov
xchg
es
mov
lahf
sub
jns
fnsave
shll
bound
pop
das
and
and
xor
push
pop
ret
rolb
aad
fwait
inc
fbld
add
mov
loopne
orb
add
lret
add
cli
insb
leave
jge
add
sub
add
cmp
and
aas
push
mov
fstpl
rclb
add
aas
pop
cmp
out
mov
inc
cmc
jb
mov
dec
fidivrl
jae
ja
and
test
jp
inc
aaa
jl
xor
out
out
stos
test
push
lahf
or
sti
add
mov
icebp
jb
lock
add
rorb
inc
xchg
mov
xor
loop
push
xchg
mov
jne
mov
cmp
pop
in
aaa
push
and
mov
lock
enter
sbb
xchg
mov
in
rcr
lea
add
lds
mov
dec
scas
arpl
outsb
mov
jg
in
mov
out
hlt
xchg
clc
add
scas
mov
cmc
add
inc
mov
loop
lret
hlt
and
int3
dec
sub
in
cmp
mov
movsl
arpl
add
or
add
hlt
les
add
mov
in
outsb
push
fldl
jmp
sti
rcll
cmp
add
inc
lock
xchg
jne
or
mov
or
cli
jo
jp
mov
and
jns
sbb
orl
clc
mov
sub
mov
jmp
lds
add
or
lcall
jns
shrb
adc
stc
test
les
outsl
inc
out
flds
in
xadd
mov
popa
and
adc
imul
daa
clc
add
xchg
pop
inc
cmp
outsl
lret
xor
xor
mov
je
ja
mov
adc
jle
ror
jmp
add
add
into
pop
dec
and
mov
xorl
add
ss
sahf
loop
cmp
ret
ficoms
addr16
or
mov
jg
cmp
or
scas
cli
fldl
into
mov
fsubrs
pop
cmp
sbb
and
and
push
and
adc
jo
adc
lods
rolw
fidivrl
lcall
cmc
push
stos
nop
mov
mov
pushf
xor
repnz
add
insl
sub
add
into
jno
fcompl
adc
push
add
popf
add
cld
leave
adc
xorl
jle
test
sbb
mov
mov
lea
mov
xor
mov
icebp
ljmp
inc
dec
stos
cmp
inc
test
jo
pop
pop
repnz
call
or
lock
fwait
adc
aad
fldenv
dec
inc
jae
inc
xchg
mov
adc
rclb
cli
mov
push
incl
add
dec
lds
mov
enter
sarl
add
xor
pop
add
adc
add
aaa
cmpsb
and
sub
out
add
loop
js
inc
subl
cltd
mov
rolb
ljmp
mov
sub
aam
mov
push
add
enter
push
test
jmp
dec
inc
mov
leave
pushf
inc
setg
or
xchg
clc
sub
dec
mov
arpl
in
jno,pn
mov
sub
adc
movsb
aas
movaps
call
inc
sbb
ret
inc
outsb
add
dec
mov
outsl
lds
jns
add
fdivs
idivl
in
loopne
push
add
hlt
mov
xor
lods
xchg
push
xchg
test
and
repz
clc
xor
mov
jle
or
clc
cmp
cmp
stos
cld
cmpsl
call
inc
inc
adc
pushf
inc
aad
adc
add
fmul
fisubrs
es
pop
add
push
push
jecxz
scas
add
dec
mov
orb
pop
xor
pop
mov
add
and
push
xchg
das
gs
dec
lds
and
sub
mov
add
pop
push
cmp
ljmp
add
push
fdivs
sbb
push
ss
pusha
add
push
inc
sbb
orl
lret
jbe
add
mov
xor
jmp
rcl
aad
jge
std
nop
lahf
mov
pop
lods
in
sbb
outsl
mov
in
cmpsl
add
les
sub
stos
out
xor
or
adc
or
sbb
pop
ja
adc
mov
pop
pop
push
jle
sub
pop
sahf
add
aaa
rolb
call
cld
pop
cmp
in
sbb
add
push
pop
mov
xchg
sbbl
mov
and
fimuls
push
xchg
leave
add
jecxz
int
sbb
push
nop
add
call
roll
pop
aas
dec
fwait
pop
in
pop
inc
adc
mov
shlb
bound
imull
cmc
les
or
push
xor
ds
add
sti
sbb
movsl
test
xor
add
in
jg
into
outsb
in
out
mov
cmp
xchg
push
mulb
cli
imul
jae
into
push
xorb
mov
stos
cmpb
cmp
mov
sub
add
ret
cld
push
dec
mov
sub
cld
inc
add
and
mov
and
add
add
mov
and
cmpsb
add
xor
jbe
push
pop
cmp
pop
xor
xchg
dec
add
sub
testl
xchg
jo
push
add
les
pop
test
ficoml
add
cmp
popl
push
add
jb
xchg
insb
sti
in
jg
add
in
and
mov
out
notb
add
push
enter
mov
out
or
cmpb
imul
mov
call
outsb
fidivs
push
push
and
stos
leave
sub
daa
jge
imul
push
sbb
cltd
std
mov
das
loopne
loope
adc
sub
rolb
xor
cmp
aam
sbb
sbb
adcb
fidivs
jecxz
add
sbb
inc
or
add
shlb
adc
sar
mov
mov
jne
push
test
add
xchg
pop
xchg
stos
subb
enter
mov
andl
flds
push
outsb
icebp
sub
fbld
sbb
xchg
add
dec
orb
adc
add
jmp
decl
xchg
mov
add
sub
add
sarl
add
in
sbb
add
scas
jnp
pusha
mov
repz
lock
inc
repnz
jo
cmc
pusha
daa
mov
pop
dec
in
clc
rolb
int
cld
or
in
mov
sbb
sahf
cmpsb
std
ret
xor
fisttpll
aam
out
xchg
pop
popa
shll
imulb
add
inc
jns
mov
xor
jp
add
xchg
push
pop
push
sbb
dec
pusha
stos
mov
adc
repnz
js
in
fldl
and
dec
adc
pop
pop
push
in
mov
nop
int
mov
sub
inc
pop
push
add
or
sarb
jb
jbe
ficompl
or
pusha
inc
add
add
cmp
inc
pusha
cltd
cmpsb
cvtdq2ps
rcll
inc
sub
lgs
pop
enter
ss
adc
xor
cmpb
cwtl
mov
jge
sbb
and
lcall
scas
cmpl
bound
inc
repnz
xor
dec
fisubs
add
xchg
mov
flds
add
aam
mov
call
add
lcall
mov
pop
dec
add
adc
mov
stc
mov
push
rol
adc
jmp
add
adc
push
ret
or
mov
add
lahf
cwtl
jne
mov
add
mov
push
add
test
sbb
jge
mov
xor
and
add
jae
xor
cmp
dec
repnz
inc
movsb
scas
sbb
xchg
jmp
test
int3
dec
enter
jno
add
out
xchg
out
and
jae
pop
out
mov
mov
icebp
pusha
jns
popa
push
add
xchg
lcall
inc
repnz
mov
push
daa
bound
sbb
imul
add
jecxz
mov
mov
sarl
push
scas
sub
loop
push
pop
jge
add
sub
fs
faddl
jns
push
lret
jmp
sbb
xor
iret
jp
loopne
mov
into
xchg
mov
shlb
nop
fcompl
rorb
inc
mov
lods
adc
jb
mov
xor
out
loopne
ds
cwtl
or
repnz
add
mov
aas
arpl
cmp
loopne
je
test
push
and
scas
or
mov
int
test
std
add
mov
xchg
push
rol
cmp
and
or
ja
add
inc
jne
lret
iret
cli
inc
mov
js
push
jmp
je
clc
xchg
push
js
add
sbb
aam
pusha
stc
add
mov
out
dec
pusha
jp
outsl
mov
add
call
push
add
pop
pop
ss
shr
push
adc
pop
outsl
mov
loope
mov
es
iret
cltd
add
aas
nop
xor
inc
fwait
and
mov
pop
outsl
add
out
aas
addb
pop
stos
out
outsb
cli
lret
push
push
pop
cmp
mov
xchg
out
mov
decl
ss
add
inc
dec
mov
stc
pop
sbb
cmp
into
adc
jno
lock
push
dec
iret
cmp
add
jo
push
in
bound
sahf
add
call
das
mov
inc
push
dec
sbb
out
add
lcall
es
cmp
int
push
mov
in
rcrb
add
xor
dec
stos
nop
ljmp
in
pop
mov
add
leave
pop
lahf
lea
add
add
fimuls
sbb
cmc
pop
add
xchg
and
incb
pop
add
nop
inc
sti
sbb
push
pop
lret
fs
add
and
inc
rdpmc
sti
insb
ja
jae
popa
adc
push
adc
sub
js
add
nop
add
andl
xchg
add
cmc
mov
out
lcall
cltd
int3
adc
and
and
xorb
in
in
test
pusha
adc
popf
cld
mov
repz
mov
add
aaa
adc
test
pop
jne
je
out
in
nop
cmp
orl
mov
add
cli
roll
add
scas
jne
push
popa
pushf
ds
dec
xchg
dec
sbb
add
out
and
fcomp
push
fwait
cmp
lods
mov
test
dec
mov
mov
or
lods
push
push
ja
dec
push
push
add
aam
add
or
and
mov
ret
xchg
push
pusha
jae
push
loopne
add
enter
dec
push
test
int
sub
add
add
rorb
sbb
rol
adc
mov
flds
lock
loop
add
pop
jle
mov
int3
test
sbb
xchg
pop
add
daa
pop
xor
out
push
push
out
iret
mov
mov
mov
add
sub
add
or
dec
nop
add
push
pushf
fidivs
mov
xchg
add
jmp
and
xlat
in
lea
rolb
cwtl
mov
add
lods
fcompl
pop
add
and
subl
iret
sbbb
cltd
push
outsl
xchg
add
das
mov
addr16
lods
dec
add
enter
mov
add
xchg
faddl
loopne
sbbl
fwait
jl
je
pop
sbb
scas
cmpb
xor
jl,pt
add
push
popa
add
bound
add
insb
repnz
inc
jne
cmp
jb
aad
in
sub
inc
sti
std
pop
in
aas
jae
mov
pop
js
cmp
adc
pusha
ljmp
add
insl
add
out
jae
add
scas
std
inc
add
xor
inc
out
loopne
arpl
dec
jecxz
shl
loopne
xchg
mov
xor
jmp
pop
stos
repnz
ja
push
inc
xor
int3
mov
sub
pop
sub
rorl
adc
xlat
int3
push
add
loop
aas
add
and
mov
inc
test
jg
loop
xchg
es
mov
adc
movsb
or
stos
gs
and
mov
xchg
test
add
dec
xor
push
lahf
push
inc
scas
outsb
mov
insb
xchg
addb
js
push
xchg
sub
imul
adc
shll
nop
add
push
jns
cwtl
shr
cltd
mov
jnp
pop
and
add
xchg
mov
add
lods
cltd
incl
scas
and
leave
andb
arpl
jge
adc
cmpsl
jae
lahf
testl
xchg
add
dec
lcall
mov
clc
lahf
add
cs
stos
xor
mov
or
mov
ficompl
cwtl
add
outsl
pop
jo
jae,pt
add
jno
cmp
or
inc
push
adc
std
and
xchg
hlt
in
push
add
sbb
pop
hlt
sbb
pop
jae
daa
out
xchg
inc
insb
add
push
adc
push
lods
mov
xchg
pusha
add
mov
add
xchg
mov
add
cmp
xor
cmpsl
adc
add
aas
clc
repz
dec
add
xchg
jno
imul
test
inc
es
xchg
add
fdivrs
mov
aam
std
jb
push
mov
mov
in
and
pop
repz
movl
inc
xor
std
cmc
cmp
scas
imul
test
push
jnp
clc
pop
pop
lods
sub
xchg
add
xchg
push
jbe
inc
icebp
and
out
and
mov
cmp
add
jle
adc
fidivrs
stos
insb
mov
add
dec
mov
int
adc
test
icebp
into
jle
addr16
add
cli
lea
push
sub
or
adc
enter
scas
adc
ret
lcall
pop
sbb
and
out
jmp
daa
or
cld
dec
xchg
imul
add
adc
pop
push
test
mov
lds
mov
add
aad
mov
push
xchg
jo
dec
dec
jmp
inc
jg
cmp
or
xor
insb
sbb
dec
sbb
inc
xchg
xchg
and
mov
sub
imul
fwait
xor
fs
mov
mov
out
sbb
cli
pop
pop
dec
sbb
je
jno
and
add
push
add
or
add
push
stos
add
addr16
mov
add
lahf
xchg
in
pop
add
cli
fisttpl
lahf
clc
jno
dec
and
inc
shll
cmp
and
cmpsl
or
out
or
inc
cwtl
or
ds
jae
jle
add
or
jbe
add
and
sahf
mov
dec
lret
push
dec
hlt
add
cmp
idivl
sbb
cmp
mov
div
jg
add
push
adc
add
in
insb
jno
pusha
in
push
add
jns
xchg
add
mov
pop
mov
xorb
xorps
iret
mov
mov
and
add
cmp
pcmpgtd
out
popf
and
fidivs
bound
add
xor
add
ror
in
arpl
call
xchg
and
rcll
xorb
int3
mov
popf
mov
jno
inc
add
xchg
das
and
or
sub
mov
xchg
arpl
ja
cwtl
sub
or
adc
mull
xor
aam
lret
fisttpll
sbb
jnp
and
outsl
or
mov
or
mov
sarl
push
inc
sbb
inc
xor
add
add
jl
inc
xchg
add
lcall
arpl
push
mov
loope
add
dec
jbe
fs
cs
aaa
dec
repnz
je
out
mov
inc
cltd
fimull
cmpsl
push
add
into
inc
sbb
cs
in
add
gs
js
pcmpeqb
test
sahf
pop
jns
addr16
jle
mov
sbb
shll
imul
bound
add
lret
and
cmp
xchg
push
sub
push
mov
xchg
jl
loop
popf
ja
adc
cmp
push
stc
push
add
push
sbb
jl
in
add
addr16
sub
test
add
inc
mov
lret
jns
shl
sub
dec
nop
call
add
push
and
cmpb
ret
popa
mov
or
sbb
cmp
or
adcb
adc
add
sub
jecxz
dec
sbb
push
and
rorb
jl
push
orb
loopne
shlb
sub
call
decl
aaa
xchg
popa
ret
jp
sbb
loopne
mov
shll
xchg
pop
sbb
subb
test
cld
lods
ss
imul
aam
cmp
pop
loopne
add
test
jecxz
sub
pop
sbb
mov
pop
sbb
setg
inc
push
sub
ret
pop
pop
aaa
imul
or
mov
xchg
test
aam
fiaddl
pushw
adcb
pop
int3
add
and
addl
mov
sub
sub
cli
mov
movsb
inc
xchg
into
lcall
lret
add
pusha
pop
add
pusha
out
cmp
jnp
jle
sub
lea
add
subl
sub
imul
sbb
pop
sbb
ret
fdivr
popa
test
xor
bsr
pop
add
mov
and
into
add
push
in
add
dec
dec
pop
add
adc
pop
frstor
orl
add
lods
into
roll
mov
fidivs
imul
popf
mov
add
loopne
mov
mov
xor
or
ret
add
jno
insl
cmp
pop
dec
stos
xor
movl
lea
pop
loopne
lds
jo
sbbl
hlt
or
pop
dec
pop
push
test
inc
or
call
aam
pop
cs
lcall
sbb
ljmp
mov
mov
pusha
xchg
jns
aas
or
sub
adc
cmp
loopne
push
push
add
and
fwait
sbb
mov
loope
aad
sub
dec
dec
je
jmp
mov
pop
pop
cmc
data16
mov
addb
mov
lds
push
std
call
cmpsb
add
xchg
inc
and
xchg
addl
mov
test
push
cmp
mov
or
push
in
mov
lock
rcrb
push
add
add
ja
dec
loopne
jbe
sahf
and
add
bound
inc
pop
or
int3
lret
imul
xchg
mov
nop
lock
add
call
mov
add
daa
mov
mov
fwait
bound
fdiv
jne
add
or
dec
pop
shll
cli
jl
into
push
mov
test
xchg
xchg
dec
sbb
mov
lret
aas
and
xor
xchg
sbb
add
insl
sub
lock
add
jo
aad
push
mov
mov
jle
xor
xchg
dec
mov
fmull
aad
inc
decl
loop
movq
ja
and
pop
mov
jns
cmp
movsb
addb
xor
daa
bound
es
js
add
cs
mov
add
push
push
add
popa
mov
mov
jo
push
fcmovbe
mov
repz
popl
stc
pusha
test
imull
ss
xor
push
out
sar
adc
add
repz
and
pop
jne
add
push
stos
out
adc
rorb
push
rcrb
add
sub
add
test
out
sbb
jg
add
jecxz
cmp
int3
daa
push
add
add
icebp
mov
arpl
pop
mov
sbb
popf
lock
pop
jb
orb
adc
add
mov
aaa
test
add
lcall
inc
pop
pop
inc
or
mov
mov
mov
cmp
pop
and
ss
int
push
add
and
cs
fbld
gs
out
lahf
add
xor
out
js
cmp
cmc
subb
movsb
add
mov
fisubs
cltd
add
push
dec
in
and
lcall
dec
add
xor
mov
add
mov
push
hlt
shlb
mov
popf
add
mov
dec
add
repnz
jne
xor
pushl
mov
add
mov
aas
push
jno
pop
stc
cmp
and
push
sub
in
cmp
stos
decb
and
hlt
rcrb
int
outsl
fwait
mov
orb
lcall
loopne
pop
mov
rcrl
jo
add
push
stos
jne
push
aas
dec
xchg
insl
leave
add
cmpsb
inc
stc
inc
rcll
les
jl
jmp
ljmp
addr16
sahf
stos
fidivs
lds
cmp
pop
jg
push
fbld
jmp
jle
in
add
das
ja
out
imull
clc
add
lds
pop
lcall
aaa
dec
loopne
dec
add
and
push
stos
test
movb
jno
sahf
jmp
adcl
dec
xchg
repnz
hlt
lock
jmp
dec
int
push
fst
inc
leave
mov
fs
xlat
xchg
mov
push
rcll
cmp
add
inc
pop
add
out
icebp
dec
cmp
adcl
pop
add
ret
xchg
lret
dec
add
or
dec
out
and
jmp
jnp
jle
jge
pop
dec
loopne
xchg
pop
inc
das
orl
push
push
movsl
popf
in
int3
daa
push
add
das
mov
add
sbb
pop
xchg
lock
mov
or
or
push
arpl
pop
sbb
cmc
leave
and
pop
out
icebp
jge
pop
xchg
xor
orb
cs
add
dec
rcr
fldt
xchg
add
push
xor
add
lds
add
enter
xor
mov
ret
xchg
aam
leave
cs
fisubrs
xorl
inc
inc
xor
sbb
jp
cmp
mov
add
adc
add
xchg
cmp
jp
xchg
inc
or
add
aam
push
cmp
xchg
add
dec
mov
add
sbb
lahf
rcrb
insb
out
add
add
cli
jae
inc
add
pop
xor
movl
or
rcrl
cwtl
mov
or
sub
add
cmp
ficomps
add
jp
xchg
add
lds
and
push
fisttpl
loope
movsl
push
xchg
mov
js
cmp
mov
cmp
mov
ds
pop
adc
adc
rclb
add
adc
cmp
and
clc
xchg
hlt
loope
lea
cmp
insl
fwait
sahf
push
pop
jecxz
pop
data16
adc
cmp
lret
icebp
pop
xor
lock
xor
inc
cmp
fmull
les
mov
xchg
ret
push
sti
repz
ja
fucomip
push
insb
cwtl
adc
stc
cmc
dec
inc
xor
push
push
mov
cltd
xchg
out
stos
or
jg
cli
idiv
add
test
sbb
or
pop
inc
ficoml
inc
add
push
jg
push
fadds
pop
cmpb
aaa
mov
add
mov
pushf
mov
aad
add
in
movsl
in
lock
stc
xchg
jge
add
pop
sub
imul
xchg
add
aam
adcb
push
insb
push
call
out
test
push
jae
cld
enter
inc
test
orb
xor
stc
jae
std
inc
addr16
and
loope
lods
mov
cvtps2pd
jg
popf
inc
and
xchg
sbb
sarb
inc
in
repz
sub
pusha
cmp
icebp
add
mov
sub
add
xchg
push
pop
add
in
addr16
add
imul
shrb
add
je
mov
sti
pop
xchg
add
push
shlb
add
mov
push
cmpb
jb
add
or
inc
clc
push
addr16
mov
fcmovu
nop
jbe
loope
jo
add
fwait
lock
or
test
add
cld
mov
fcoms
jle
add
pop
sub
loope
cmpxchg
sub
add
sbb
aaa
mov
or
aad
shr
pavgw
repnz
das
xchg
xchg
adc
mov
idiv
ja
pop
loop
sub
inc
arpl
pop
mov
jo
or
push
add
ret
add
jg
lods
outsb
xchg
xor
add
lds
adcb
mov
sub
repnz
popa
or
jb
add
add
int3
and
sub
aad
add
lret
jmp
lods
cmp
inc
sub
push
pop
xchg
add
movsl
les
inc
jb
in
mov
fwait
movsb
add
push
fcomi
add
push
cmp
shl
or
fdivs
and
inc
and
mov
add
xor
in
jmp
sub
jge
out
push
cmp
and
cmc
sti
stos
add
negb
add
xor
nop
add
mov
mov
add
push
les
pop
sub
pop
mov
jno
outsb
rorb
fmull
jnp
mov
dec
cmp
ror
bound
dec
movsl
jg
std
add
imul
mov
das
inc
add
fwait
bound
fisttpl
xor
ret
adc
add
pusha
and
add
jns
mov
xor
xchg
and
fbstp
xor
push
gs
add
cmp
insb
aad
sbb
outsb
mov
fwait
pop
cli
and
jns
imul
hlt
addr16
dec
cmp
push
jmp
cltd
add
mov
lods
loope
jo
sub
loopne
cwtl
rdmsr
call
sti
jno
or
mov
xor
jae
mov
xor
sub
stos
aam
inc
xchg
inc
pop
insl
pop
mov
in
int
add
cmp
pop
mov
ds
add
orb
jp
aas
add
cmp
mov
push
cmpb
les
ljmp
or
add
xor
rclb
inc
aad
insb
jno
pop
add
es
xchg
sub
test
loop
inc
or
stos
pop
xor
popf
add
lock
mov
add
mov
out
pop
gs
push
in
sbb
repz
lods
fistpl
nop
pusha
inc
in
mov
add
xor
mov
daa
or
mov
mov
pusha
das
jg
xchg
cmp
popa
mov
cmc
add
repz
ret
outsl
lods
adcb
add
cli
or
mul
add
inc
fs
psrlq
inc
mov
dec
out
and
fimuls
push
ja
adc
or
inc
add
mov
es
cmp
daa
cmp
add
imul
add
pop
insl
out
js
or
movsb
addb
push
cmp
add
fistps
xchg
stos
rcll
add
movl
add
fcomps
adc
sbb
stc
cmp
test
scas
sub
sbb
add
xor
push
leave
adc
add
dec
ret
adc
xchg
xchg
mov
aas
jmp
xchg
add
mov
sbb
sti
dec
push
mov
push
cmp
in
pop
fildl
mov
hlt
add
push
xchg
adc
xchg
scas
add
inc
iret
arpl
icebp
push
ja
jmp
in
add
or
or
sbb
shlb
popf
hlt
sbb
pop
sbb
mov
jnp
add
mov
mov
fxch
cwtl
pop
add
shrl
add
and
in
imul
inc
out
fnstsw
inc
xor
fmuls
pop
jle
inc
pusha
sub
lahf
add
pop
and
ds
xlat
sbbb
dec
add
les
test
cmp
imul
cmpsb
add
lcall
out
dec
pop
repz
and
fwait
push
mov
cmp
mov
fcompl
add
pop
or
cmp
enter
mov
inc
loopne
cmp
jns
sub
in
add
sbb
cltd
and
pop
push
sbb
rcr
lods
jbe
iret
mov
das
mov
cmp
std
inc
push
scas
pushf
shl
inc
mov
lret
add
sub
xchg
fwait
pop
dec
and
int
aas
js
add
pop
push
push
add
dec
pop
xchg
call
pop
divl
out
or
pop
mov
inc
cmc
test
dec
add
mov
sar
push
add
mov
dec
faddl
lock
rep
or
lret
popf
push
adc
xchg
adc
mov
dec
lcall
jnp
es
std
and
mov
add
cmc
fidivl
or
inc
add
sbb
mov
arpl
sub
daa
add
adc
pop
je
mov
mov
xchg
add
mov
mov
xlat
push
lock
repz
or
std
add
imul
mov
in
fs
inc
mov
or
mov
loope
or
aas
aaa
sub
fdivs
in
imul
leave
or
xchg
mov
mov
out
ret
aas
mov
mov
push
mov
add
stc
mov
sbbl
push
mov
add
add
das
mov
jns
inc
adc
popa
xchg
push
dec
and
mov
adc
iret
scas
xor
push
sbb
xchg
or
adcb
mov
movl
insl
dec
cmp
push
das
repnz
mov
fimuls
out
popf
stos
cmc
loopne
push
imul
test
add
add
lcall
add
add
or
jns
mov
cmp
ret
add
icebp
mov
sub
repz
or
int3
je
aas
ds
and
xchg
ficoml
sub
leave
cmpb
outsl
add
sub
add
or
js
xchg
lahf
xchg
add
ja
add
fcmovnu
mov
add
icebp
cwtl
pushf
add
push
testb
inc
cmp
mov
ret
clc
int
sbbl
aam
pop
aas
xchg
fiadds
arpl
into
mov
add
insb
xchg
sub
scas
sbb
mov
dec
pop
loop
js
jmp
adc
sbb
aas
add
cmp
and
add
test
imul
xor
xchg
cmpsl
add
adc
add
jp
out
xchg
enter
mov
mov
mov
xor
out
fstpt
and
call
testb
lds
es
inc
je
pop
pop
rol
inc
test
or
add
sahf
sbbl
pop
inc
outsl
test
mov
je
push
js
gs
addr16
es
jnp
inc
scas
cmpsb
push
sub
shr
and
fsin
sarl
test
xor
push
cmp
cmpsb
roll
mov
push
outsb
add
aas
and
mov
add
add
lock
push
pop
add
cmovg
push
dec
adc
add
pop
orl
xor
daa
sub
fadd
add
xchg
lahf
mov
sub
push
inc
sub
lret
gs
ljmp
xor
add
jp
push
cs
ja
loopne
or
lods
inc
popa
add
pop
push
sub
jb
add
add
pushf
adc
add
xchg
add
repnz
stos
in
cmp
add
jg
mov
test
and
lods
fsubrl
lock
push
repnz
out
sbb
and
seto
push
dec
loope
mov
push
inc
pushf
lret
imull
add
dec
out
in
pop
jo
cmovp
xorb
mov
sub
sbb
jge
sti
aas
mov
mov
dec
cmpsb
add
jb
out
xor
add
mov
int3
mov
xchg
xor
add
js
sbb
fnop
cmc
adc
xor
enter
sti
adc
push
push
fcoms
add
scas
imulb
add
addb
xchg
sbb
push
add
lcall
aam
inc
dec
cmp
call
cmp
mov
xor
incb
add
sbb
out
push
push
aam
and
lds
xchg
mov
pop
mov
or
push
clc
daa
inc
jb
sbb
xchg
jns
jp
pop
sbb
inc
enter
sub
mov
push
add
cmp
iret
inc
shll
add
adc
mov
add
push
jae
rclb
add
adc
pushf
add
or
testb
fnstenv
or
cmp
or
cltd
fistpll
ljmp
mov
shlb
iret
call
stos
jp
inc
jecxz
fwait
shlb
dec
add
inc
dec
mov
add
je
add
xor
sub
lret
shlb
loop
add
xchg
push
mov
cld
xor
lea
jnp
pop
sbb
dec
lds
mov
les
add
packssdw
add
insl
fisttps
inc
loopne
add
inc
xchg
ficoml
jae
xor
pusha
push
push
aam
inc
xchg
jle
imul
and
xchg
call
lock
mov
rcll
mov
daa
jno,pt
aad
mov
out
sbb
mov
pushf
push
jae
add
pop
dec
lods
rolb
imul
data16
xchg
fcomps
stos
push
daa
insb
fcmovnu
adc
pop
mov
add
mov
sub
and
fsubp
test
xlat
stc
add
inc
mov
push
add
negb
sub
mov
fcmovbe
pop
push
mov
and
xchg
in
pop
test
std
cmp
inc
fists
jne
popa
mov
addr16
int
pavgb
fmull
movsl
mov
or
mov
mov
jmp
pop
stos
cmp
jle
in
cs
leave
add
xor
dec
adc
xchg
add
out
cmp
addb
add
push
les
pop
cmp
xorb
loopne
dec
add
xchg
cli
repnz
add
add
sti
jge
in
sbb
ljmp
leave
xchg
pop
dec
aas
cmp
or
mov
xor
cwtl
cmp
xorb
sbb
xchg
cld
lock
das
xor
add
dec
ret
push
stos
adc
dec
add
or
test
filds
or
icebp
add
xlat
out
in
xchg
mov
or
add
cmp
add
aaa
fdivrl
and
test
xor
mov
pop
testb
xchg
in
xchg
es
add
std
lods
jmp
mov
out
and
mov
movsl
add
mov
add
aas
ret
pop
loopne
inc
add
mov
mov
jge
adc
mov
mov
in
inc
aas
xor
jno
xor
cld
pop
or
dec
xchg
dec
dec
jbe
ja
ror
or
mov
aad
fnsave
cltd
mov
mov
stc
push
mov
shlb
jecxz
add
inc
cmc
xchg
sbb
add
lret
enter
add
aam
in
outsl
pop
gs
mov
add
push
cmp
add
fnstenv
leave
pop
pop
inc
push
testb
sub
test
or
pusha
mov
cmp
add
shrb
adc
cmp
sbb
add
fldenv
or
lock
mov
sbb
mov
mov
jge
cmp
sub
inc
cmc
push
cmp
push
or
pop
pusha
fldcw
pop
in
lcall
jmp
add
test
inc
push
sbb
push
push
sub
xchg
mov
push
add
loope
je
arpl
xchg
shll
add
pop
out
sub
test
sub
rcrb
repnz
xorb
call
adc
pushf
aad
jnp
sbb
xchg
push
shlb
jb
or
ret
das
and
inc
dec
jge
add
out
in
xchg
mov
and
movsb
fsub
add
pop
mov
and
push
rolb
mov
mov
divb
push
scas
xorl
push
pop
repnz
imul
dec
ds
add
push
enter
add
mov
jge
add
or
repz
int3
push
add
mov
iret
or
xchg
pop
sbb
and
nop
adc
mov
xlat
cmpsb
adcl
xchg
sbb
jl
mov
flds
xchg
sub
popa
push
inc
dec
add
xor
and
lcall
add
add
icebp
rorb
lret
inc
mov
imul
mov
sbb
roll
or
xchg
add
lret
lods
add
push
mov
add
out
mov
in
add
aas
in
pop
cld
hlt
pop
add
fwait
mov
inc
xor
sahf
push
sub
push
mov
stc
inc
lret
xchg
inc
add
addr16
movsb
aam
das
pop
arpl
xchg
test
lock
cpuid
lock
pop
push
xor
shl
es
pop
call
repnz
jbe
jmp
add
nop
mov
icebp
mov
sbb
ja
inc
jmp
push
in
cmpsb
mov
pop
cmp
add
lret
fwait
inc
xor
adc
bound
fdivs
lea
mov
dec
clc
ds
sbb
imul
mov
inc
es
push
jp
cmp
out
add
mov
cltd
bound
daa
clc
xchg
scas
mov
pusha
ljmp
mov
sbb
push
fildl
sti
lret
scas
loope
roll
std
adc
flds
cwtl
test
add
mov
mov
mov
dec
inc
pop
je
add
lods
scas
add
adc
or
or
cmp
icebp
push
xor
fdivr
nop
mov
and
les
ficoml
cmp
cli
pushf
pop
popa
enter
add
and
mov
cmp
xorb
mov
xchg
jo
shll
add
repz
arpl
int
mov
adc
push
hlt
test
jp
xor
and
inc
loop
cld
loopne
leave
inc
icebp
test
jae
loopne
ror
pop
in
add
mov
xchg
add
aas
scas
add
mov
imul
call
push
add
out
enter
ds
xchg
fwait
ror
inc
push
popf
mov
add
int
mov
mov
fwait
cmp
push
inc
cmpb
push
jmp
inc
add
or
add
sub
hlt
jmp
or
sub
mov
xchg
add
mov
inc
test
fiaddl
imul
das
sbb
add
xchg
jae
rcrb
add
inc
jl
pop
idiv
fadds
enter
addr16
in
mov
popf
inc
push
inc
shl
inc
or
dec
mov
jge
sub
xor
inc
xchg
jne
hlt
inc
addb
xor
jle
pop
or
mov
adc
add
xor
aaa
inc
dec
mov
icebp
jbe
in
imul
stos
mov
xchg
jge
sbb
mov
pop
and
pop
into
popa
dec
sub
rcll
out
imul
mov
push
call
cs
or
pop
mov
cmp
out
loope
fadd
mov
repnz
xor
pop
cmpsb
push
call
push
mov
inc
jo
pop
leave
sub
dec
adc
or
and
mov
mov
inc
lret
call
shlb
int3
cwtl
loope
mov
into
je
movl
mov
add
and
cmp
lea
cmp
mov
xchg
add
loop
jb
in
xchg
add
leave
sbb
cmp
mov
mov
dec
add
cmp
xor
jb
fisttpll
int
jne
add
lods
adc
fldenv
rcrl
popa
or
jmp
cltd
jno
add
imul
xchg
mov
mov
jecxz
lods
mov
clc
cld
add
scas
mov
inc
das
add
mov
enter
fsubrs
mov
inc
mov
fistps
hlt
incb
cmp
into
lods
stos
jns
add
or
data16
jbe
sbb
ljmp
pop
push
ss
cli
imul
stos
mov
adc
xlat
mov
fldl
out
pop
sti
call
jbe
lahf
cmp
add
sbb
hlt
in
adc
add
mov
mov
add
sbb
cwtl
add
mov
cs
inc
mov
sbb
add
pop
out
cmp
lock
mov
inc
sbb
push
cwtl
mov
inc
pop
or
aam
adcb
leave
nop
sar
add
aam
push
add
inc
std
jbe
mov
mov
cltd
push
push
cmp
bound
cmovs
mov
jle
incl
into
in
mov
scas
add
cmp
mov
test
sbb
int
add
or
loope
mov
testb
addr16
add
pusha
int
pop
cwtl
pushf
and
fwait
or
mov
adc
cmp
push
mov
sbb
iret
sahf
add
das
pop
mov
and
test
hlt
adc
movsl
pop
dec
jle
push
nop
add
and
out
add
lret
aaa
mov
mov
pop
shlb
jl
sbb
rcrl
xchg
bnd
loopne
jnp
rclb
adc
mov
negb
xchg
or
add
inc
add
add
pop
push
inc
test
mov
stos
add
pop
test
fwait
pop
daa
cmp
add
lret
mov
testb
sub
adc
aad
ret
out
or
pop
call
je
faddl
push
js
and
and
aam
cmp
jne
add
push
push
and
jno
or
in
bound
popa
cmpl
movsb
mov
adc
aas
ja
cmpsl
inc
jl
pop
push
add
sub
push
and
test
in
push
add
mov
dec
xor
test
add
stos
mov
jmp
sub
mov
xchg
cld
cmp
in
cwtl
rcr
mov
pushf
mov
inc
pusha
jae
dec
inc
mov
jg
cltd
gs
ret
pushf
add
mov
push
popf
cmc
xor
into
imul
xor
hlt
aas
insb
xor
stos
nop
cmc
xor
shlb
inc
sub
mov
or
push
insb
push
stos
add
jmp
add
lahf
add
lret
mov
add
add
jp
lea
jge
jae
mov
push
int3
and
sbb
dec
fwait
xchg
inc
mov
popf
dec
into
or
push
pop
daa
sbb
sbb
js
scas
add
repnz
stos
cmp
cld
es
aad
sbb
xchg
jb
sub
iret
testl
lds
stos
cmpl
rcr
cmp
inc
cmp
mov
xchg
lret
inc
neg
xchg
mov
outsb
push
adcl
mov
lods
jl
add
icebp
stos
push
dec
enter
and
je
add
ret
lods
in
pushf
xchg
hlt
mov
popf
scas
push
xorl
pop
clc
insl
jle
and
adc
in
inc
cmpsl
aam
add
testb
or
jle
push
popf
into
ds
and
push
call
sbb
xor
push
jp
scas
mov
add
push
stc
sub
cmpsl
ja
test
out
cmp
cld
dec
add
mov
in
mov
test
mov
and
ret
sub
idivb
jmp
mov
xlat
cmp
rclb
push
pop
addr16
sbb
and
add
bound
push
add
jg
or
add
xchg
cmp
lret
push
std
sub
push
mov
icebp
and
cmp
add
mov
jecxz
adcb
lret
adc
sub
mov
adc
loopne
in
insl
flds
mov
fsubrs
popf
pusha
mov
xchg
ret
mov
add
mov
jae
dec
dec
push
loop
xchg
test
loopne
les
stos
add
iret
push
js
ds
mov
cmp
adc
add
cmp
dec
add
xor
in
sarb
out
jae
rorb
jl
add
sbb
mov
mov
sbb
cmpsb
fldt
dec
or
dec
mov
jge
loopne
js
add
mov
cld
lcall
stos
or
cmp
dec
cmpsb
mov
add
arpl
jne
in
xor
sarl
pop
add
popf
das
add
xchg
add
sub
maskmovq
add
xor
sbb
adc
cmp
push
add
jns
pop
add
stc
push
add
les
aas
bound
imul
xchg
sbb
or
int3
pop
add
aaa
lea
add
ss
mov
or
dec
aam
jmp
mov
add
push
popa
sub
inc
push
sbb
adc
testb
push
popl
pop
jge
mov
loop
lock
pop
add
and
adc
adcl
or
push
cmpsb
mulps
into
sbb
mov
sub
rcl
and
clc
add
lea
dec
xchg
lret
mov
jo
negb
add
pop
lahf
or
mov
sti
loop
je
mov
add
cwtl
inc
pusha
sbb
mov
add
xor
scas
cmpb
mov
inc
pop
add
fimull
adc
sub
lock
push
out
add
loope
xor
insl
push
and
das
mov
outsb
scas
ficoms
push
adc
add
lock
jp
add
mov
xor
mov
push
add
js
jge
sahf
add
ljmp
adc
stos
sbb
mov
nop
stos
adc
icebp
pop
cmp
mov
dec
sbbb
hlt
out
add
sub
scas
jae
pop
xchg
add
fcompl
add
fwait
aaa
and
dec
xchg
xor
dec
scas
std
cmp
mov
mov
les
test
push
add
scas
add
and
push
adcl
push
xchg
xchg
push
fldcw
pop
or
cmp
int3
add
inc
cli
add
into
ljmp
in
or
repnz
mov
popa
dec
inc
add
enter
dec
sahf
add
andl
mov
jo
add
pop
punpckhdq
or
in
shll
and
stc
mov
leave
pop
sub
popl
inc
jecxz
repnz
scas
add
adc
inc
out
jle
add
test
dec
pop
cwtl
sbb
outsl
das
add
add
lods
inc
jnp
cmp
cmpsl
add
sarb
add
jne
std
cmp
repnz
sbbb
sar
jns
add
dec
inc
lock
lea
out
int3
stos
jnp
xor
pop
xchg
push
jne
add
mov
xchg
addb
fwait
out
loopne
sarl
dec
incb
add
add
push
add
ljmp
add
cmp
dec
and
pusha
or
add
popf
jmp
jecxz
cld
add
stc
dec
push
insb
and
lods
xchg
leave
rcrb
cmpsb
sbb
pop
push
or
pushf
push
aam
push
pop
data16
into
add
or
push
insb
or
jmp
ljmp
shr
add
ja
ds
fiaddl
xor
sbb
add
push
ficomps
pop
and
mov
test
sub
fsubrl
jecxz
add
mov
mov
bound
out
mov
jp
das
negb
es
dec
jmp
rcl
add
xor
mov
adcl
cmc
xchg
es
pop
mov
pushf
xchg
pop
sub
inc
fisubrl
add
pushf
filds
cmpsl
fdivl
or
inc
mov
mov
das
push
out
adc
inc
movsl
shr
adc
inc
add
int
adc
rcll
jne
pop
mov
add
lods
orb
mov
inc
shlb
lcall
sbb
pop
add
andb
mov
lcall
jg
push
lods
imul
dec
and
out
mov
mov
xchg
je
add
icebp
jo
fwait
add
sti
test
out
mov
push
xchg
loopne
jbe
xor
repz
outsl
sbb
push
sub
add
loope
mov
add
mov
mov
dec
xchg
sbb
mov
adc
xor
lods
add
fcmovnb
xchg
shll
cmp
sub
movsb
mov
jo
js
in
stc
jnp
push
fnstcw
add
xor
add
fcomps
and
add
or
jbe
ds
pop
bound
add
scas
push
stc
pop
pop
pushf
xchg
jo
push
adc
inc
filds
cmp
push
add
fcoms
pusha
jle
jo
aaa
dec
sub
add
dec
dec
mov
jbe
sarb
jecxz
add
or
inc
cmp
cmp
add
scas
dec
cmp
xor
in
mov
xchg
push
sbb
fcoms
cs
js
adc
add
out
pop
sbbb
add
fsubrs
enter
push
lods
jecxz
addb
shrb
roll
testl
dec
mov
fidivrs
ds
pop
into
nop
int3
cli
dec
pminub
aad
cmpb
cmp
add
mov
xor
pop
jbe
add
daa
jb
in
jge
adc
add
pop
mov
pusha
xlat
jnp
adc
shll
imul
cmpsb
jno
xor
add
test
adc
fildl
in
mov
lret
hlt
inc
add
sbb
popa
add
les
pop
inc
jns
or
loopne
sbb
subb
fs
icebp
mov
movb
mov
or
jnp
pop
test
add
movsb
cmp
divl
cmp
and
xor
push
cld
int
andb
notb
loopne,pn
outsb
dec
not
add
push
xor
xchg
pop
bound
mov
inc
cwtl
pop
scas
out
push
xor
iret
cmpsb
pop
xor
stc
cld
addr16
add
and
test
jnp
add
add
xlat
and
out
call
sahf
sub
pop
lahf
loope
rcrb
and
adc
xor
mov
push
gs
jnp
mov
pop
in
test
pop
cltd
xor
lea
stos
add
enter
add
pop
fdivl
push
mov
add
iret
mov
adc
cmpsb
xlat
add
sub
bound
iret
mov
leave
adc
sbb
inc
mov
cmpb
in
jg
xor
lock
mov
pop
or
dec
data16
les
or
repnz
movsbl
xor
addb
inc
add
js
push
aam
bound
dec
leave
xchg
xchg
push
inc
sbb
and
enter
and
mov
sbb
push
addr16
decb
shll
xor
add
inc
inc
loope
outsl
jns
add
push
or
mov
fisubrs
popa
lock
imul
les
jb
and
xchg
in
cwtl
popa
cs
fs
xor
xchg
and
push
enter
inc
cmpsl
jns
leave
addl
or
push
or
les
pop
sub
fimuls
scas
mov
flds
cmpsl
pop
in
dec
outsl
xchg
pusha
mov
push
pop
es
nop
aas
movsl
add
cmpsl
hlt
pop
add
stos
push
sbb
inc
pop
add
cmp
lds
mov
inc
out
cmp
shl
dec
add
test
xlat
or
roll
and
imul
or
push
scas
jg
insb
add
outsb
mov
xchg
into
add
adc
paddb
rep
inc
test
stos
mov
and
add
cmp
jg
popf
add
inc
sbbl
sub
gs
jo
dec
stc
insb
rclb
daa
add
mov
add
or
icebp
adc
pop
mov
lcall
or
inc
sbb
mov
and
cmp
mov
je
cs
add
mov
xchg
mov
add
pop
bswap
jmp
into
or
ror
or
loopne
push
out
push
inc
xor
dec
cwtl
add
mov
insb
add
aam
mov
mov
xchg
and
sub
add
icebp
arpl
jp
add
sbb
in
inc
add
fstpt
sbb
push
pop
push
push
repnz
call
mov
pusha
iret
bound
push
repz
jl
mov
push
pop
aad
xor
shr
add
adc
cld
xor
pop
inc
cwtl
fs
xor
mov
dec
pop
stos
push
push
cmp
pushf
dec
mov
push
scas
push
aaa
add
pop
andl
clc
and
add
outsb
push
dec
jbe
jg
add
out
movsb
add
fstpt
cs
push
mov
pop
xchg
and
arpl
adc
push
mov
jecxz
push
xchg
add
jno
popa
fcoml
mov
sbb
inc
test
mov
pop
push
jbe
bound
in
cltd
and
aaa
sub
iret
lock
clc
mov
pop
imulb
push
lret
add
mov
stos
sbb
scas
push
repnz
inc
dec
dec
xor
or
mov
jae
aam
shl
or
cmp
fwait
dec
add
xor
xchg
add
int
jnp
rorl
add
sbb
mov
add
pop
sahf
sar
adc
sbb
xchg
iret
sbb
push
in
add
cmp
arpl
mov
dec
cltd
pop
push
adc
xchg
add
cwtl
mov
ret
push
shlb
add
and
dec
add
pusha
ret
dec
pushl
or
les
add
inc
jge
test
divb
and
xlat
lcall
add
xchg
mov
add
inc
sbb
je
jl
cmpb
pop
es
jae
lret
xchg
add
mov
sahf
movsl
fwait
mov
or
lahf
out
inc
pop
ret
scas
add
inc
sbb
xchg
push
lock
out
inc
cwtl
ljmp
add
jmp
mov
lahf
jns
jl
movsl
inc
leave
sbb
mov
into
sbb
and
add
sbb
ja
imul
add
dec
add
data16
lcall
stos
push
mov
out
int3
add
mov
ss
jae
pop
imul
xor
lds
cmp
movsb
mov
scas
out
add
pusha
cmp
jo
add
mov
int
or
sbb
add
lret
bound
ficompl
movsl
imul
and
addl
pop
mov
mov
sbb
inc
lahf
fsubrs
in
pop
mov
outsl
dec
adc
mov
cltd
xorl
cmp
cmp
push
rclb
pop
add
push
outsb
pop
mov
ja
jns
sbb
cmp
lods
cmc
out
hlt
fwait
add
jp
xchg
jmp
lret
lcall
insb
mov
xlat
add
imul
rolb
mov
loopne
xorl
push
lock
test
fwait
ljmp
add
arpl
push
repnz
mov
orb
pop
mov
and
imul
js
add
fsubrl
jo
testb
int3
sub
scas
push
js
cli
loopne
mov
ret
pop
inc
ret
fldt
loope
add
or
sub
pop
in
ljmp
iret
lods
fsubp
aas
add
popa
jle
nop
ljmp
jge
cmp
verr
icebp
jbe
mov
shrb
fnstcw
push
mov
and
and
faddl
or
add
addr16
pushf
pusha
jmp
mov
fiadds
pop
inc
mov
insl
pop
loope
jns
jle
int
adc
pusha
adc
insb
push
pop
sbb
cwtl
mov
adc
push
jge
mov
sub
bound
push
loopne
inc
cmp
add
mov
testb
movsb
das
jg
jne
jecxz
add
or
add
add
xor
movsb
pop
sub
mov
popf
and
mov
inc
mov
cmp
rcrb
cmp
testl
inc
push
enter
loope
out
sub
das
int
test
out
popf
or
insb
movsl
dec
xchg
push
jmp
mov
push
andl
addr16
xchg
sbb
mov
and
push
push
mov
dec
add
or
cmp
loopne
test
pop
out
mov
in
inc
xchg
pop
add
dec
sbb
cltd
jle
daa
add
lock
push
ds
jno
inc
mov
popa
testl
sub
ficompl
inc
and
mov
popf
jl
fcmovnbe
dec
add
fsts
int
cmc
pushf
out
adc
movaps
mov
mov
cmp
into
xchg
dec
dec
add
out
test
xchg
and
xchg
xorb
add
out
or
iret
inc
rcl
dec
add
adc
sub
je
dec
xchg
cmp
aaa
pmaddwd
pop
ret
mov
mov
add
jp
fistps
inc
ror
xor
add
xchg
movsl
js
add
add
mov
lahf
inc
loop
add
iret
enter
add
mov
mov
outsb
pusha
pop
add
mov
dec
ret
jns
xchg
cmp
int3
jae
mov
aam
xchg
fstpl
sbb
fadd
pop
fistpl
aad
and
insl
xor
je
jmp
ja
loop
xorb
or
ret
shrb
cmc
stos
push
movsl
jae
repnz
dec
lret
sub
xor
mov
mov
daa
add
jge
sahf
in
jbe
adc
aad
jmp
or
aaa
push
js
pop
mov
push
loopne
pop
xor
add
mov
xsha1
cmpsb
leave
sbb
repz
cmp
mov
stc
inc
inc
pop
dec
jl
xchg
push
mov
fadds
jecxz
and
shrb
xchg
ret
xor
fsubp
xor
sbb
es
push
cli
add
pop
pop
jno
pop
add
jmp
pop
add
call
cmp
jmp
fiaddl
inc
or
es
enter
movsb
pop
push
add
data16
sbb
sbb
add
test
lahf
cld
add
ljmp
add
test
orb
mov
lret
mov
std
dec
xchg
nop
filds
pop
mov
ret
dec
subb
jo
cmp
cmpsl
sub
pop
xor
xchg
adc
gs
aam
testl
cmp
dec
imul
clc
rorl
mov
bound
jp
mov
pop
mov
and
mov
pop
dec
cltd
ja
xlat
jecxz
loopne
cmpb
inc
cmp
sbb
stos
sbb
adc
sub
mov
and
mov
and
xor
mov
or
or
xor
insb
stos
add
aaa
jbe
out
pop
fsubl
mov
mov
mov
arpl
and
xchg
add
inc
clc
pop
and
aas
cli
outsb
enter
roll
inc
loope
add
ljmp
jnp
sub
xchg
inc
push
dec
aas
adc
xchg
add
pushf
sbb
mov
pop
adc
fdiv
scas
repnz
add
push
xchg
xchg
and
jmp
sbb
sub
rolb
std
jno
int3
mov
adc
cmp
add
aaa
int3
icebp
mov
push
lods
repnz
mov
gs
jb
mov
testb
shlb
mov
xor
dec
mov
jp
pop
sbb
nop
jg
insb
dec
add
fwait
pusha
push
inc
mov
sub
out
insl
cmp
test
fidivl
sbb
dec
cmp
mov
leave
add
in
popa
stos
lret
lcall
rcl
pusha
mov
add
jge
test
sbb
or
lods
sbb
add
into
insl
int
mov
add
and
fadds
out
jns
sarb
mov
and
mov
ljmp
mov
std
add
inc
test
pop
jno
or
jnp
jecxz
and
ljmp
pop
insl
nop
add
cmp
or
shlb
sbb
cmpsl
inc
stos
xlat
xchg
push
mov
jp
mov
cmp
adc
add
pop
aad
add
cmp
shl
enter
sarl
pop
in
pavgb
stos
dec
inc
faddl
push
push
bnd
or
push
call
loop
sbb
lret
pusha
daa
cmp
ss
dec
jb
add
into
js
push
cmp
insl
jg
push
int
or
add
outsb
push
sub
xlat
push
mov
stos
mov
aad
test
ret
jbe
sbb
jno
dec
add
aam
xorl
nop
push
rcrb
add
mov
popf
inc
pop
fs
jb
or
xchg
sub
mov
arpl
add
mov
jg
std
sahf
fiaddl
icebp
mov
loope
pop
inc
pop
aas
ss
push
mov
dec
add
mov
loopne
jg
mov
mov
sbb
pop
cs
xchg
ret
and
int
int3
in
js
mov
mov
gs
dec
popa
add
push
lret
enter
cmc
push
lock
add
add
mov
ja
add
xchg
xor
out
addl
ljmp
sbb
or
add
leave
jl
lret
jmp
xchg
jo
jae
cvtps2pi
roll
pusha
sarl
sahf
call
subb
shrl
add
and
mov
jno
addb
out
push
sub
pop
fiadds
and
xchg
test
pop
outsl
inc
pop
sti
lahf
testb
pushw
aas
inc
xchg
sbb
lret
jmp
mov
out
mov
adc
aam
mov
mov
scas
frstor
es
stos
sbb
rorl
test
mov
xchg
sbb
adc
fdivrl
jmp
xor
ss
add
cs
jp
add
xlat
in
es
adc
mov
dec
cmp
adc
loope
add
or
rcll
rcr
cmp
xor
daa
cwtl
sub
and
jmp
sbb
push
in
insb
add
js
data16
nop
push
add
or
xchg
jmp
adc
scas
add
in
mov
add
pop
nop
rcl
jno
xor
cmp
outsl
mov
push
cmpsl
pmaxub
inc
pop
daa
pop
movzbl
fildl
mov
lea
pop
mov
mov
xchg
les
jge
add
imul
push
push
test
hlt
test
push
outsl
rcrl
movaps
movsl
outsb
dec
mov
lcall
mov
dec
jnp
lret
in
xchg
aam
les
mov
or
jbe
and
push
lahf
sub
movsb
fwait
aaa
jp
lds
in
xchg
or
ret
mov
hlt
sbb
add
xor
sahf
stos
jns
cmp
call
ljmp
and
mov
jns
jbe
add
inc
cld
insl
push
sub
jae
mov
in
mov
mov
add
dec
mov
fidivl
int
mov
lea
in
mov
loop
mov
add
roll
outsl
mov
mov
xchg
add
or
ljmp
sbb
nop
xchg
lock
lods
in
mov
jb
cmp
pop
in
call
movsl
fadd
insb
xchg
int3
fs
push
add
adc
and
and
or
xchg
rcr
std
mov
sbb
sub
and
hlt
jg
pop
leave
or
inc
js
loope
jns
mov
jbe
push
jle
xchg
or
rolb
sar
outsl
out
add
or
xchg
adc
loopne
js
add
and
adcb
lock
ds
es
sub
das
les
out
mov
cmp
adc
addr16
dec
add
ret
mov
or
mov
sti
enter
mov
mov
ret
test
popa
sbb
dec
stos
imul
and
mov
pop
or
and
lods
outsb
push
pushf
arpl
jne
add
roll
inc
ret
sbb
sub
dec
leave
mov
je
pushf
dec
mov
popf
add
push
lds
cmp
lahf
imul
dec
rol
inc
add
and
in
pusha
add
loopne
stc
sub
or
sbb
sub
cmp
jmp
cltd
and
cmpsb
ss
push
in
shlb
in
sbb
dec
fiaddl
xlat
add
scas
xor
int
jle
or
pop
dec
cld
movsl
cmp
xor
cmp
mov
das
icebp
addr16
ret
add
jb
mov
sub
push
repnz
jecxz
fistpll
xchg
add
add
dec
mov
rclb
or
cs
add
lret
push
clc
xchg
lahf
repnz
bound
cli
sub
add
dec
sbb
push
aaa
outsl
lock
add
lret
enter
add
insl
jnp
iret
mov
add
daa
or
lret
jmp
add
inc
dec
sbb
mov
aad
dec
add
mov
call
outsl
jmp
gs
int3
xlat
ret
call
push
jge
cs
add
push
mov
jle
call
mulb
push
inc
add
mov
call
filds
mov
add
inc
ljmp
shr
inc
je
shlb
ds
movaps
ret
sbb
sbbb
adc
sbb
mov
insl
aam
cmp
xor
xchg
add
sbb
jnp
sbb
ss
cld
hlt
ds
add
notl
add
jbe
push
cmp
jb
fstpl
int3
shrb
aad
icebp
add
or
add
cwtl
bound
sub
pop
incl
scas
xor
hlt
pushf
jmp
inc
nop
scas
mov
stc
add
mov
add
mov
rolb
int
sysret
stos
std
dec
loopne
imul
xchg
push
bound
cld
sbb
fisubrs
out
sahf
rcll
add
lea
mov
cmp
fcomp
or
adcb
mov
loopne
out
ss
fcoml
add
or
sub
leave
test
add
inc
subl
push
mov
push
gs
fcompl
xorb
add
jl
xchg
xchg
aas
rolb
int3
xchg
pop
dec
in
or
xchg
adc
fmul
ljmp
loopne
sbb
dec
or
and
fimuls
jno
xchg
loop
mov
aad
mov
incl
hlt
ret
in
push
lret
sbb
cmp
add
cli
xchg
mov
nop
fldl
wbinvd
inc
add
pop
adc
fistpl
cld
cwtl
sarb
lahf
add
fs
addr16
push
jmp
sub
int3
or
fwait
pop
dec
push
add
aaa
and
aad
pop
sub
mov
fmul
cmp
gs
add
iret
inc
mov
shlb
cmpsl
push
cmp
imul
loope
nop
sti
sub
aas
shr
ljmp
lods
loop
sub
sbb
jl
fistl
mov
inc
add
push
insl
push
add
negl
fldt
ds
add
xlat
mov
push
add
and
ror
mov
jmp
pop
movsb
inc
jns
pop
test
addr16
mov
push
add
testb
in
adc
mov
aam
pop
dec
ret
jae
xor
mov
shl
in
pop
pop
xchg
fstpl
mov
cmpb
sub
add
pop
pop
shrb
add
pop
fidivrs
dec
sub
popf
add
and
les
push
jb
add
nop
cmpsl
test
mov
sbb
ret
mov
mov
push
mov
lldt
outsl
sub
jp
and
fmuls
sub
mov
push
xor
xor
jo
xchg
addb
adcb
xor
xchg
sub
lds
scas
cmp
add
in
jmp
mov
adc
push
pop
leave
and
pop
mov
jne
jbe
aas
adc
xor
pop
add
adc
mov
inc
stc
push
dec
int
add
or
add
jae
mov
add
aad
push
add
fcomp
idivl
xor
xchg
adc
dec
lcall
sbb
lret
xchg
push
in
sbb
xchg
add
sbb
add
cmp
push
ljmp
dec
sahf
cmp
sbb
add
ja,pt
add
xchg
sub
or
add
push
or
add
addb
dec
pop
fs
scas
fadds
dec
icebp
add
cli
mov
mov
xchg
pavgb
pushf
inc
jle
jo
cltd
add
xchg
dec
lahf
push
pop
mov
add
mov
push
fcmovnb
negl
ss
sbb
inc
mov
in
add
cltd
mov
pop
add
and
cld
insb
pusha
sub
add
je
test
or
mov
cmp
imul
outsl
cltd
add
pop
jns
in
pop
add
sub
pop
shll
mov
ja
insl
imul
add
test
ss
insl
lods
dec
inc
les
add
scas
pop
popf
dec
mov
jg
nop
es
add
enter
cwtl
out
mov
lcall
cmp
js
pop
stc
xlat
add
leave
imull
adc
cmp
call
nop
add
sbb
xchg
inc
repz
test
and
xor
popf
out
movsl
jnp
pusha
out
jae
add
movb
push
sbb
mov
fildl
pusha
filds
test
std
cmp
add
jo
pop
add
iret
cmc
cmp
scas
add
leave
ret
jno
add
add
adc
rolb
mov
cmpsl
push
ret
add
xor
fistps
lock
and
sub
frstor
cs
push
addb
mov
mov
aas
js
cmp
xchg
push
faddl
add
cli
repz
int3
add
push
sbb
out
or
lds
nop
dec
pop
movsb
dec
daa
inc
lret
xor
mov
jmp
or
aaa
mov
insb
cmp
cmp
js
movsb
xor
push
inc
aam
and
dec
outsb
push
sub
loope
rorb
in
lods
scas
aam
xchg
push
adc
add
dec
jmp
call
or
push
xor
mov
int
popa
xchg
sbb
lods
and
inc
pop
push
or
mov
sub
enter
imul
aad
loop
add
push
cld
dec
add
insl
lds
fadds
fldcw
xrelease
into
shrb
loop
add
xchg
xchg
add
sbb
popf
fistpl
xor
push
mov
scas
mov
ljmp
imul
inc
push
jmp
jno
jp
aad
iret
je
xchg
jl
dec
sub
mov
repnz
add
dec
out
xor
js
mulb
int
cli
adc
adc
add
xor
pusha
push
shrb
lea
pop
out
movsb
fcompl
add
fadds
jl
adc
sub
jge
and
nopl
insb
mov
test
jne
add
dec
or
cs
add
inc
pop
lods
add
idiv
sbb
inc
adc
and
dec
jbe
and
sub
cltd
lret
jnp
add
pop
call
in
add
sbb
cld
loope
xchg
xchg
add
push
aad
cmp
sarb
pop
pop
aaa
add
or
ss
idivl
push
jbe
sahf
pop
lahf
testb
ja
rcll
jle
and
in
arpl
inc
xor
push
outsl
cmpsb
mov
add
or
mov
aam
rorb
cld
xchg
inc
lret
add
or
sarl
jecxz
ds
add
cli
arpl
or
jnp
push
add
jge
xor
cmp
lcall
add
stos
add
and
movsl
cmpl
jg
add
jp
pop
and
xor
inc
dec
iret
scas
jge
add
imul
mov
sub
mov
and
ss
xchg
jp
add
test
aas
or
adc
jg
imul
lret
loopne
push
test
insl
or
push
cmp
sbb
icebp
add
sub
imul
push
sahf
orb
add
jo
mov
ljmp
repz
ret
xchg
jno
pop
bound
cmpb
ds
jmp
ljmp
jo
or
push
mov
lods
push
dec
hlt
add
cmovb
inc
xor
pop
add
add
mov
mov
cmpsb
lcall
jg
pusha
fst
aas
pop
iret
xlat
repnz
add
outsb
outsl
sub
jmp
pusha
add
mov
mov
stos
shll
jnp
stos
push
xlat
add
hlt
cmpb
sbb
out
mov
jecxz
add
lcall
daa
xchg
mov
repnz
jno
popa
add
test
aam
jg
lods
dec
add
jae
out
mov
gs
adc
dec
sbb
add
or
add
lret
jae
nop
fs
aad
lret
loop
dec
sub
mov
js
mov
xchg
dec
mov
loop
jno
enter
add
add
push
jns
gs
xor
fisttpl
add
loopne
aam
xor
movsl
add
inc
orl
mov
push
orb
add
cmpsb
fildll
add
push
xchg
add
flds
jle
add
mov
push
fs
pop
ss
shrl
sbb
out
pusha
lods
pop
xlat
add
int3
or
jns
test
xchg
jnp
add
xlat
jmp
stc
add
and
fwait
arpl
popf
add
cmp
mov
in
sub
adc
ret
add
mov
int3
add
push
int
or
add
je
and
add
mov
jmp
add
bound
cltd
scas
xchg
add
movsl
mov
jle
add
dec
lods
pop
mov
stc
mov
xchg
jnp
scas
cmp
push
stos
pop
adc
cmc
jmp
and
and
mov
jb
icebp
push
data16
gs
xor
outsl
enter
out
jo
jnp
bound
add
loope
cli
mov
insl
jbe
stos
sub
mov
push
fs
ret
sub
rorb
add
lods
add
jo
repnz
add
rcrb
add
pop
or
pop
jg
push
test
cmc
outsl
loopne
aaa
fistl
in
push
pop
add
add
sti
push
add
pusha
cld
push
cmp
inc
pop
ds
test
arpl
mov
mov
add
xchg
adc
pop
sub
and
add
fildl
cmpb
xchg
pop
test
adc
cmp
push
inc
xchg
sarb
shr
push
repz
or
add
fbstp
add
lods
mov
mov
mov
stos
imul
gs
mov
psadbw
faddp
fiaddl
call
dec
and
pop
cli
add
loopne
mov
int3
js
lahf
push
push
imul
jno
arpl
fs
clc
push
cmp
nop
js
stos
add
mov
arpl
push
fcoms
jnp
add
dec
fwait
or
stc
fcomp
lcall
repz
andb
xchg
add
out
testl
icebp
rcrb
out
add
jecxz
fs
xor
lds
add
arpl
mov
mov
dec
int
shlb
mov
xor
adc
pushf
mov
cmp
inc
into
cmp
sub
shl
adcb
add
ret
lock
add
cwtl
inc
movsb
add
xchg
mov
data16
aam
push
mov
and
fisubs
jno
pop
xchg
enter
or
movsb
repz
ss
add
or
orb
pop
push
pop
incl
ret
and
or
add
jno
add
adc
clc
mov
and
sbb
lock
rorl
fiaddl
jae
push
adc
aas
mov
jp
add
xor
bound
fldcw
lock
adc
add
jle
roll
mov
out
dec
ret
add
add
adcb
add
jne
mov
mov
mov
push
ljmp
mov
pop
xor
xor
nop
int3
add
push
stos
sbb
adc
sbb
pop
pop
jle
movsl
jp
lock
adc
test
add
xor
in
push
js
lcall
sbb
adc
mov
ljmp
sbb
and
add
int
in
in
jle
add
or
repnz
add
jno
loopne
mov
push
and
dec
add
xchg
je
icebp
insl
pushw
jae
daa
xchg
shlb
rcrb
test
or
adc
subl
fisttpll
in
dec
lds
inc
fistpll
sbb
loopne
sub
sbb
dec
into
xchg
mov
pop
adc
je
scas
aaa
jl
pop
add
mov
mov
cltd
inc
adc
add
jle
or
sbb
call
jge
int3
gs
adc
jmp
sbb
lock
xchg
add
add
add
mov
mov
jb
adc
mov
enter
pop
or
add
iret
lods
and
aaa
mov
mov
mov
nop
lods
cmp
lock
push
sbb
add
lea
pop
mov
mov
adc
insl
adc
stos
icebp
add
frndint
inc
aad
aas
add
cmpsl
xchg
loop
ja
cmp
add
scas
movsl
leave
rorb
push
fcompl
out
daa
or
fs
adc
ret
sahf
add
lods
roll
dec
cmp
pop
filds
nop
xchg
into
fidivrl
jle
add
add
rcrl
inc
sti
or
add
and
dec
lods
flds
pop
mov
movsl
inc
fimull
dec
and
outsl
or
add
jnp
loop
mov
cltd
mov
movsl
arpl
fdivl
sbb
jno
loop
push
popa
or
dec
in
sbb
pop
inc
xchg
push
sarb
push
jae
lods
pop
mov
add
push
cli
jle
lret
int
add
xor
add
xchg
mov
or
add
out
mov
mov
or
xchg
xor
adc
lock
fs
cmp
out
sub
dec
mulb
test
lea
in
nop
push
push
out
add
pop
data16
fs
test
icebp
xchg
add
shlb
add
mov
pop
jae
add
aad
xor
sub
mov
daa
and
shlb
je
addr16
adc
mov
push
test
cmp
adc
add
xchg
mov
add
inc
xchg
cmp
xor
inc
xor
ret
jl
lods
mov
and
popa
testl
adc
push
xchg
cmp
xchg
xorb
repnz
imul
jno
xchg
mov
fidivrs
add
pushf
mov
int3
inc
ret
movsb
je
add
push
push
xchg
sbb
add
int3
pop
js
jne
rol
xchg
add
pusha
in
popf
pop
call
pop
add
push
cmp
and
inc
lahf
add
aam
inc
in
int3
xor
mov
scas
push
add
dec
push
jnp
xor
jae
pop
mov
and
shrb
movsb
rorl
add
push
sub
addr16
push
pop
fdivr
pop
sbb
jecxz
xor
cmpsb
ss
sub
in
sub
mov
mov
add
jns
dec
add
inc
cmpsl
jl
fs
sbb
adc
cli
mov
enter
jl
add
jns
bound
into
xor
cmp
xorl
ret
add
hlt
xorl
das
push
test
movsb
andb
xlat
push
add
push
sti
fmull
js
add
mov
in
clc
add
mov
push
fwait
daa
add
inc
cmp
cmp
call
arpl
fsubs
roll
xor
lret
pop
stc
add
cmp
cmp
lahf
testb
dec
dec
xchg
lods
or
push
add
sub
imul
mov
addl
lods
sbb
ljmp
xor
xor
pop
or
mov
xor
jb
add
adc
add
lods
mov
add
and
push
cmp
push
sbb
cmp
add
dec
inc
repz
xor
aaa
push
cmp
xor
push
add
mov
add
cmp
ret
cmp
std
inc
sbb
hlt
enter
or
mov
dec
lret
push
popf
addb
stos
stos
out
aam
xor
adcl
and
lahf
add
sub
repnz
xor
mov
xchg
pop
push
add
add
cmpsb
push
outsl
gs
divb
mov
les
aam
cmp
pop
jge
pop
xor
dec
and
mov
movl
clc
in
and
repnz
pop
out
das
daa
push
test
adc
rcll
add
push
leave
adc
lret
lods
sbb
mov
jo
add
jns
out
addr16
loopne
cmp
pop
test
mov
push
pop
mov
out
incb
xchg
cmp
mov
icebp
add
cwtl
outsb
sbb
sarb
lret
jl
pop
xchg
add
or
mov
push
sub
pop
cmpb
fwait
mov
cmp
add
adc
stos
mov
pop
pop
incl
adc
mov
ja
mov
adc
and
je
stc
out
cmp
orb
mov
mov
xor
push
mov
add
mov
jbe
add
fldcw
fdivrs
dec
add
lock
mov
add
in
je
loopnew
jns
or
mov
addr16
adcb
mov
into
jnp
movsl
pop
xchg
add
jns
out
add
sbb
mov
add
push
insb
nop
inc
lock
data16
fdivrp
jno
and
mov
enter
cmpsl
sbb
jp
pop
fbstp
jl
add
ficoml
sub
data16
mov
pop
iret
xor
inc
mov
nop
push
scas
push
fstpt
sbb
lahf
sub
inc
in
pop
add
testl
add
es
pop
or
outsl
inc
bound
inc
push
clc
add
add
sub
adc
out
test
dec
pop
ds
xchg
mov
and
xor
mov
fsubrs
xchg
jno
pop
loopne
insb
add
cmp
add
pusha
sbb
mov
push
add
xchg
cmp
sti
je
sub
add
and
add
pop
mov
enter
out
lds
jmp
mov
lods
jae
add
mov
in
pop
mov
and
clc
nop
sahf
push
jmp
ret
add
push
in
inc
das
add
cmp
andl
xor
ret
cmp
sub
jo
add
fiaddl
xchg
jle
test
add
iret
sub
call
pop
cmp
icebp
fmuls
push
out
add
sbb
and
cmp
mov
jle
in
scas
jnp
pop
fwait
hlt
pop
add
movsl
hlt
and
pmulhw
add
pop
mov
pop
pop
mov
adc
test
repz
orb
stos
mov
or
jl
mov
mov
xchg
ss
pop
push
or
shl
gs
add
negl
lods
add
jle
and
jbe
popf
push
adc
sbb
hlt
mov
cld
pusha
add
jae
into
mov
inc
out
and
and
test
stos
cmp
xor
add
push
mov
adc
stc
inc
push
cmpsb
lea
arpl
mov
int3
cmp
mov
push
mov
pop
aaa
aas
repnz
fdivl
and
mov
mov
sub
mov
enter
push
call
filds
pop
lahf
rcrl
adc
mov
sahf
lds
loop
inc
gs
cmp
and
out
sub
xor
push
divl
add
xorb
cmp
dec
mov
and
fisubrl
sub
and
push
aas
mov
pop
loope
mov
xor
sub
xchg
dec
and
push
adc
push
das
jb
cmpb
in
std
add
xchg
ret
xchg
adc
pop
xchg
jecxz
aas
add
and
lods
mov
xlat
shl
cwtl
shlb
xor
adc
clc
pop
adc
push
add
pop
push
dec
mov
add
pop
outsl
push
movsl
xchg
fiaddl
and
mov
sbb
inc
mov
iret
add
test
fisubl
xor
jle
fbld
mov
ja
inc
pop
add
add
int
imul
insl
addl
xchg
mov
jo
and
pop
dec
imull
inc
push
out
flds
aaa
je
nop
xchg
xchg
add
daa
dec
xchg
in
cld
add
and
pop
fiadds
stos
aas
inc
jp
sarb
test
int
ja
add
sub
mov
jne
add
sbb
jg
adc
jo
xchg
dec
ds
je
loopne
lcall
jl
pop
shlb
loop
adc
pop
mov
out
add
rcll
inc
mov
mov
add
sbb
sbb
pop
xlat
fdiv
iret
add
push
repnz
add
dec
test
xchg
cwtl
pop
add
pop
movsb
push
rolb
jae
cmc
cmpb
mov
scas
ret
inc
pop
js
mov
add
popf
je
aaa
dec
aam
aas
test
cmp
subb
adc
jmp
lock
add
imul
sbb
daa
in
xorl
pop
jne
lret
dec
jl
jno
lcall
add
mov
inc
xchg
or
test
mov
fistpl
mov
ja
lock
add
ss
add
mov
in
mov
in
movsb
clc
sbb
pop
xchg
shr
shll
push
adc
add
loop
jo
and
add
add
andl
sub
mov
xorb
pushf
cmp
jo
jns
into
fwait
pop
and
jle
add
out
es
add
adc
jno
sub
inc
pavgw
fcom
add
lea
pop
add
lret
sub
faddl
loope
int3
jmp
xor
mov
roll
ljmp
jp
jecxz
rorl
inc
lods
nop
andb
mov
roll
out
push
lahf
dec
adc
imul
fisubs
shl
or
adc
add
jno
jbe
sub
push
inc
add
or
daa
incl
or
adc
icebp
jb
mov
cld
jns
jle
cli
add
dec
mov
dec
xlat
aas
or
icebp
or
cmp
dec
xor
xchg
aam
adc
add
sbb
add
jne
loop
lds
adc
mov
add
cli
ret
add
push
nop
int
sub
lds
mov
add
add
push
or
add
nop
leave
hlt
xor
xor
fsub
daa
bound
xchg
jns
push
and
ljmp
mov
add
fwait
xor
add
sub
jo
cld
test
sbb
adc
add
outsl
roll
sub
movsl
pop
inc
fmull
pusha
or
leave
aam
rclb
add
loopne
ficoml
scas
mov
sbb
rcrb
or
xor
sbb
adc
dec
sub
xor
add
xchg
xor
mov
mov
sbb
and
or
inc
inc
pop
add
ret
sub
jo
mov
lea
xchg
or
out
jb
add
sub
dec
scas
jl
out
push
add
pop
sbb
ret
push
inc
xor
jp
fsts
daa
fwait
pcmpeqd
sbb
xchg
add
jnp
dec
pop
sbb
rcll
stos
repz
inc
and
mov
push
inc
into
xchg
loopne
jmp
cmp
add
lcall
push
and
cmp
or
sub
call
and
jecxz
outsb
test
add
fwait
shll
fnsave
pop
lods
mov
movsb
add
or
insl
dec
adc
addr16
ss
imul
fsubp
push
clc
stos
add
ret
sbb
in
add
or
or
cmp
lods
add
mov
mov
add
xchg
popa
mov
push
or
jl
sti
mov
pop
orl
mov
lea
push
rclb
cmp
push
sbbb
call
pop
xchg
cli
andb
mov
leave
out
cmp
mov
jbe
mov
sub
mov
dec
and
add
sahf
mov
sub
add
mov
test
or
shlb
ja
add
mov
aad
add
pop
lret
into
xor
pop
mov
cmpsl
pop
add
pop
out
xchg
mov
les
or
ds
cmp
adc
out
jp
out
js
in
rorl
add
cmpsl
mov
ds
add
dec
andb
add
jae
push
inc
orl
pop
imul
sbb
out
imul
loop
test
mov
int
mov
xchg
inc
and
rorb
loop
adc
mov
movsb
stos
and
test
inc
push
dec
add
je
mov
pop
sbb
clc
pusha
out
cli
str
lods
mov
je
and
xor
pop
jle
cmp
adc
fs
sbb
mov
inc
xorb
aad
jp
cmp
jne
stc
adc
jge
and
push
stos
add
ss
movsb
shlb
inc
sti
lds
cmp
shlb
add
or
lock
inc
pop
cli
and
bound
mov
xchg
mulb
xchg
add
stos
movsl
in
inc
add
pop
ret
call
pop
push
pop
cmp
shlb
add
fwait
inc
mov
add
add
jle
add
fcomi
cs
or
add
adc
sbb
rorb
decb
add
cli
repnz
xchg
out
mov
pop
loop
movl
outsl
xchg
mov
adc
dec
aas
mov
insb
xor
loop
xchg
mov
or
add
add
stc
ljmp
add
dec
andb
add
lahf
int
dec
and
jp
add
and
adc
shl
dec
lcall
cmp
sbb
popf
dec
pop
fdivrs
pop
lods
and
pop
dec
sub
pop
pop
cltd
pop
add
xor
jbe
and
pop
lock
mov
in
dec
adc
cmpb
push
repnz
cmp
sbb
add
inc
filds
enter
aas
adc
or
sbb
or
in
or
add
lea
in
enter
pusha
add
mov
push
int3
xchg
sub
addb
pop
xor
xchg
add
insw
fnstcw
icebp
push
pushf
dec
mov
sarl
mov
or
pop
add
xchg
add
or
pop
call
testb
add
add
and
push
mov
enter
dec
sub
and
sbb
lock
pusha
adc
add
sub
imul
in
flds
dec
and
loope
pop
nop
flds
ficoml
ja
aam
sarb
stc
clc
add
mov
mov
adc
dec
add
xor
xchg
pop
and
sub
xor
inc
and
push
add
cs
es
jno
aam
pop
popf
mov
adc
sub
push
adc
rolb
loopne
stos
add
mov
pop
jmp
mov
scas
add
imul
add
cmp
test
outsb
xchg
add
inc
adc
sahf
add
or
adc
aas
imul
outsl
fsubrl
flds
and
dec
add
pop
insb
sbb
int3
sahf
imul
sub
add
hlt
add
sub
xor
repnz
pushf
add
leave
mov
jno
arpl
mov
mov
dec
pop
ficompl
xchg
push
add
jb
add
aad
lds
inc
test
out
cs
add
cmp
jnp,pt
sbb
mov
lret
mov
sbb
rcll
ret
insb
push
loope
sahf
scas
mov
push
cmp
jae
push
xchg
mov
pop
lods
push
movsl
mov
jbe
add
and
sti
inc
outsl
xchg
push
out
xchg
add
mov
push
insb
fs
cmpsl
outsb
cmpsb
data16
mov
adc
jbe
pop
adc
add
mov
clc
loope
sbb
cmpb
add
int3
pop
addr16
mov
inc
add
mov
faddl
call
rcl
push
add
popl
loopne
popa
rcll
loop
lea
cli
pop
in
cmp
bound
das
pop
repz
lahf
gs
pop
adcb
sub
or
repnz
fldl
sub
mov
add
test
cmp
add
das
mov
add
les
sub
insl
pop
adc
add
sbb
sub
fcomps
add
jo
inc
dec
lea
xchg
mov
sti
in
dec
lods
add
jg
dec
add
xor
jmp
ds
shlb
fcomps
mov
dec
addr16
insl
add
jae
sub
arpl
push
sahf
jb
inc
mov
lods
roll
push
mov
push
dec
mov
sub
and
fwait
cmp
test
and
notb
add
test
jb
pop
or
and
test
sbb
stos
cmpsl
add
faddl
nop
jbe
sbb
incl
xchg
pop
or
and
add
add
enter
shlb
cld
add
int3
jle
or
in
mov
mov
es
cli
and
inc
push
cmp
cmp
js
pop
pop
mov
mov
adc
outsb
add
and
bound
loopne
add
push
inc
icebp
lret
push
xchg
xchg
dec
push
adc
orb
dec
adc
lds
rol
iret
fiadds
sub
and
xchg
add
pop
jmp
dec
out
pop
and
jno
add
and
pop
sbb
pop
mov
pop
hlt
mov
loopne
test
icebp
inc
add
cmp
cld
hlt
incb
cs
or
sbb
mov
enter
gs
cmpsl
mov
xor
aaa
daa
cmp
mov
mov
mov
dec
jl
mov
jns
add
or
cmpsb
pop
aad
adc
xor
in
mov
add
fdivrs
dec
cmp
xor
rcl
or
pop
add
enter
sti
push
add
or
push
or
clc
in
push
adc
dec
loopne
sarl
sbb
stos
sbb
push
add
fnstcw
lcall
add
ret
add
rolb
push
stc
jne
add
cmpsl
in
ja
in
mov
jo
cld
sbb
jmp
mov
mov
xchg
cmp
int3
push
cmp
les
lds
pop
pop
jbe
mov
pop
inc
cmp
add
cmp
loope
pop
rol
inc
jecxz
sbb
mov
adc
add
ja
pop
sbb
adc
push
inc
ret
add
xchg
adc
insb
xchg
jo
xor
pop
sbb
ja
add
sub
and
add
inc
lahf
mov
ss
insb
or
out
cli
add
mov
clc
ds
add
jmp
mov
js
cltd
mov
dec
sub
mov
es
push
leave
add
sbb
repz
cmp
fildl
test
cmpsb
push
mov
add
cmp
mov
xor
mov
lods
inc
or
cmp
cmpsb
cmpsl
inc
jae
loop
bound
test
dec
cmc
mov
jbe
xchg
xchg
push
xchg
cmp
xchg
test
in
push
xor
int
and
jp
frstor
test
in
or
add
mov
movsb
mov
clc
mov
sbbb
push
outsl
cmp
adc
nop
pop
pop
mov
push
adc
add
mov
sub
imul
cld
adc
add
movsl
and
repz
xchg
mov
add
shrb
mov
sti
sbb
cld
pop
add
fimuls
adc
add
popa
dec
in
mov
dec
jle
out
int3
in
outsl
jge
sub
add
add
call
cmp
jmp
mov
insl
push
jle
inc
add
xchg
test
cmp
push
scas
rolb
pop
pop
add
sub
mov
imul
iret
imul
cmc
push
dec
sbb
in
sarl
push
movsl
push
add
lock
je
add
jmp
add
fildll
pcmpeqb
adc
dec
mov
loopne
ret
ret
jno
movsl
add
push
subl
stos
jl
xor
jp
imul
add
data16
pop
lock
dec
add
add
add
out
adc
push
mov
call
jns
or
add
jmp
int
inc
adcb
jp
dec
jne
das
inc
adc
aaa
add
rolb
add
push
add
daa
or
loope
shrb
cmp
jg
push
sbb
xchg
das
and
shrb
lret
pop
cmp
add
rcl
lcall
xor
das
jmp
mov
je
add
in
and
popl
xchg
sub
std
jg
mov
lock
add
das
dec
ljmp
imul
loopne
fdivp
add
insb
sarb
pushf
add
jne
lret
nop
testl
gs
inc
and
pop
mov
jo
mov
dec
add
pop
adc
sbb
xchg
aad
scas
mov
ljmp
sti
sub
fisttpl
cwtl
push
lea
leave
rorb
fwait
ds
ja
cmp
or
add
arpl
push
stos
lret
movsl
mov
pop
mov
test
arpl
aas
adc
popf
jecxz
add
icebp
xchg
dec
push
cmp
xchg
dec
movsl
adc
jecxz
cmpl
popf
or
add
and
lahf
sub
cmc
mov
es
xor
rorl
jb
arpl
cmp
aas
nop
cli
test
push
add
cmp
jp
add
and
mov
shr
leave
cmp
sbb
and
mov
sbb
xor
gs
ljmp
cmc
test
mov
jbe
push
jl
lods
xor
test
jle
add
add
inc
in
adc
cltd
out
pusha
shlb
cmp
cmp
rolb
mov
mov
out
sub
pop
inc
add
test
fnstenv
add
movb
push
sbb
mov
mov
incl
out
xor
cwtl
jnp
repnz
inc
int3
adc
imul
mov
sti
cmpsb
add
add
jmp
sub
push
pop
int
stc
cmp
add
cmp
add
adc
dec
and
mov
imul
shr
lret
adc
cli
insb
add
and
add
push
adc
mov
movsb
sti
inc
xchg
inc
push
divb
sub
mov
lret
and
inc
and
mov
or
jae
rorb
push
xor
in
rcrl
add
mov
xchg
inc
add
stos
aas
pop
fistpl
add
add
scas
mov
test
in
or
and
lcall
mov
xchg
add
fcmovnb
adc
repz
mov
jno
inc
test
pop
loopne
and
add
xchg
int
add
inc
imul
xor
cmp
cmp
mov
push
cmp
push
or
inc
push
sahf
cs
xchg
sbb
add
insb
test
sbb
inc
std
clc
int3
or
cwtl
addb
jae
bound
add
nop
adc
cwtl
mov
leave
fidivrs
xor
or
xchg
shl
adc
fwait
add
gs
pop
pop
int3
bswap
push
jmp
cmpb
and
jecxz
sbb
cwtl
cmpsb
insl
pop
or
iret
mov
jo
sub
add
sbb
js
add
imul
fidivl
icebp
xchg
in
sbb
sbb
push
pop
lret
movb
sub
mov
out
cmpl
and
pop
or
push
mov
les
loope
into
add
pop
pop
mov
fucomip
lods
test
ja
movb
fs
pop
data16
pop
push
sbbl
mov
pop
inc
dec
cltd
test
sti
and
pop
jecxz
fimuls
jnp
add
adc
add
cmp
rolb
jl
roll
pop
xchg
sub
shr
adc
mov
sti
add
mov
test
out
mov
add
sarl
jno
add
push
jo
xor
lods
loop
add
pop
fdivrs
out
jnp
js
mov
sbb
push
jle
mov
add
scas
std
test
pushf
bswap
ficomps
stos
shrb
mov
xor
ja
add
les
int3
sbb
imul
add
int
mov
subb
lock
jecxz
mov
dec
push
push
dec
cmp
int3
add
scas
and
fistpl
imulb
xchg
mov
ret
add
or
in
push
outsl
bound
dec
lret
into
and
int
daa
leave
inc
aam
add
ret
inc
xchg
add
movsb
dec
pop
push
jp
mov
add
xchg
fsts
add
scas
push
ds
jb
add
dec
jbe
xchg
cmp
add
daa
xchg
test
add
or
inc
lcall
ljmp
jno
push
mov
sti
add
in
aam
lock
add
outsl
jns
or
pop
jb
add
add
mov
mov
or
add
dec
sub
aas
fsubp
jmp
jp
add
enter
movsl
lahf
add
push
fiaddl
or
pop
enter
inc
add
mov
add
push
sbbb
movsl
xchg
sbb
mov
jge
mov
addb
rcll
lds
dec
ret
add
addr16
shrb
decl
ds
faddl
xorb
les
sub
push
dec
mov
xchg
add
sub
sbb
inc
or
add
mov
call
fiadds
testl
aas
push
in
adc
cmp
add
dec
mov
loop
sub
xor
mov
add
insb
sahf
fsubrs
ljmp
pop
mov
int3
bound
jmp
adc
jbe
cmp
xchg
push
andl
and
xlat
or
push
jb
fs
add
jae
insl
jg
add
in
lahf
sub
rclb
pop
test
ficoml
sete
out
adc
mov
xchg
jp
cmp
movsb
adcb
dec
push
nop
call
ss
je
rorb
add
sbb
adc
jb
sbb
in
adc
enter
add
cli
imull
mov
cmpl
shlb
pop
inc
out
cmp
iret
add
mov
inc
sbb
add
push
dec
call
mov
xlat
pop
test
push
int3
mov
pusha
dec
add
add
pop
and
mov
fistpl
jno
cmc
mov
cmp
or
shlb
cmc
cli
sahf
daa
popa
ret
sub
dec
stc
les
das
or
and
push
xor
ja
pop
jae
jl
nop
inc
sbb
adc
xchg
xadd
fisubs
mov
out
cmpsb
les
jb
ficomps
push
sub
cmpsl
add
xadd
rorb
dec
test
add
cmc
dec
sti
cld
xor
add
shlb
rorb
imul
sbb
add
nop
xorb
mov
fldenv
leave
sbb
add
sbb
dec
jno
push
sbb
cmpsb
xchg
xchg
loope
cmp
leave
in
lret
add
dec
out
push
cmp
sub
loopne
insl
xor
ds
mov
mov
pop
clc
cltd
pusha
ljmp
add
xor
add
imul
hlt
pop
movsl
stos
aas
ds
cmp
sbbb
cmpsl
push
clc
jl,pn
add
into
xchg
cltd
xchg
xchg
stc
pop
add
and
jge
ret
enter
pop
cwtl
movsb
add
insb
inc
mov
les
ds
daa
pop
mov
pop
and
push
add
rcrl
or
add
add
loope
fisttpl
sbb
les
pusha
and
into
std
pop
sti
add
mov
fiadds
test
push
fdiv
mov
stos
sbb
lods
sarb
addb
jp
inc
jmp
xchg
loop
roll
xor
vpmacsww
lcall
nop
add
jge
js
filds
pusha
fiadds
nop
sahf
mov
or
sbb
loopne
add
enter
mov
scas
xchg
outsl
push
sbb
popf
xlat
add
les
aam
loop
pop
repnz
ret
jbe
push
lcall
mov
adc
pusha
outsl
movsb
xchg
cmc
or
inc
push
add
push
xchg
mov
aad
repnz
sub
lret
or
xorl
mov
rcrb
push
mov
adc
testl
sub
xlat
mov
adc
or
sti
jmp
xchg
scas
call
sbb
lock
stc
adc
xchg
jge
add
inc
in
push
repz
cs
rolb
mov
dec
popf
add
inc
or
add
xchg
xchg
adc
ret
iret
pop
aad
pop
out
push
xor
psrld
push
or
cmp
inc
and
mov
roll
mov
call
pop
add
iret
stc
cld
loope
call
les
flds
inc
hlt
mov
lods
add
out
dec
movsl
add
sahf
pop
cmc
shlb
mov
xchg
fimuls
clc
add
push
ss
jne
jb
and
inc
mov
add
sti
sbb
add
fucomip
pop
nop
and
fimuls
xorl
ret
fwait
sbb
add
sub
fiaddl
xchg
jle
insl
add
fnsave
add
mov
pushf
mov
push
sahf
data16
fwait
in
inc
adc
aam
popa
shlb
scas
mov
mov
pop
jecxz
sbb
movsb
add
sub
addr16
add
jo
icebp
mov
add
mul
outsl
inc
lret
add
popa
or
ror
in
add
xlat
xor
inc
and
and
add
pop
pop
lock
add
add
int
aad
inc
cmp
sbb
adc
push
jmp
dec
icebp
pusha
sub
in
push
add
xchg
nop
mov
ss
je
add
jl
out
lret
scas
pop
inc
fildl
push
enter
mov
test
test
mov
pop
ss
cmp
add
ret
add
pop
stos
movsb
je
sti
mov
fnsave
in
inc
xchg
setbe
scas
mul
add
imul
jb
add
into
xchg
ds
movl
inc
addr16
jg
add
xor
push
call
pop
cmovno
add
data16
add
gs
push
shlb
aad
adc
shrb
and
lgs
push
mov
cmpsb
push
xor
add
push
push
sti
xchg
sbb
call
lea
or
mov
repnz
ror
dec
inc
call
xchg
pop
in
push
sbb
les
cwtl
ja
sbb
mov
stos
jns
add
sub
andl
add
xor
mov
xchg
and
mov
adc
add
or
cmp
sbbb
jg
icebp
fstps
or
sub
jecxz
add
add
ficoms
add
xchg
or
mov
pop
faddl
pop
mov
sbb
pushf
jb
add
dec
mov
push
and
shll
add
mov
mov
push
cmp
test
sbb
fs
and
jg
movsb
test
ja
push
sub
dec
and
adc
mov
aad
mov
ds
mov
adc
ret
mov
std
and
dec
movsb
test
in
pop
into
aas
mov
cmp
addr16
jmp
std
pop
out
mov
mov
jbe
add
add
clc
add
enter
add
and
fidivrs
mov
daa
cmpsb
push
xchg
mov
mov
pop
lahf
add
test
sub
add
fs
sub
xchg
sub
add
jae
cmpsb
dec
loop
orb
rep
dec
add
das
nop
cmp
add
mov
inc
insb
add
mov
call
cmc
mov
sbb
pop
add
gs
std
lds
imul
roll
aam
loopne
adc
fsubrs
xchg
add
xor
or
negl
dec
jg
inc
loopne
jb
out
lock
push
xor
loope
add
push
jo
mov
or
test
cmp
add
and
or
mov
sbb
jb
jp
dec
or
arpl
mov
mov
faddl
mov
push
popf
cmp
pop
paddusb
add
repnz
jnp
pop
test
xchg
or
inc
out
sbb
push
mov
sbb
pop
ja
cmp
imul
add
inc
push
lret
xor
popa
outsb
lret
in
mov
lds
out
sar
xlat
cmp
pop
jne
inc
add
sbb
mov
rclb
ror
addl
in
sub
dec
or
outsl
pop
jl
ljmp
aaa
xor
sti
mov
xchg
enter
sbbb
add
or
dec
xchg
adc
sub
lds
imul
cmp
inc
ds
add
dec
enter
or
push
sbb
sbbb
jae
mov
loopne
add
cmpsb
pop
xor
inc
aad
add
jmp
pop
cmp
pop
add
sbb
add
mov
push
fsubrs
add
xor
sub
inc
jmp
pop
lcall
add
sti
or
notb
mov
lods
xchg
sbb
clc
mov
mov
fs
ret
xor
ja
inc
add
nop
ficoml
fwait
stos
stos
sub
int
push
dec
leave
add
or
ret
cmpsb
mov
daa
jg
mov
sub
xchg
lcall
in
or
data16
shr
sbb
inc
pop
xchg
add
outsl
ret
push
sub
mov
jle
jg
and
push
andb
in
mov
jmp
add
adc
inc
sbb
xchg
out
sub
subb
jbe
add
sub
icebp
mov
sbb
mov
mov
in
push
fadds
out
pop
testb
repnz
lcall
ds
mov
pop
push
test
jg
and
mov
incl
jno
push
inc
adc
subb
ja
repz
scas
aas
add
fs
fstpl
add
clc
into
roll
outsb
dec
add
pop
jp
add
cmp
testl
icebp
sti
mov
push
popf
xchg
data16
add
mov
dec
add
mov
and
fwait
movq
fstp
pusha
mov
adc
add
push
cli
imul
push
xorl
outsb
pop
mov
and
ret
pop
loopne
dec
rcrl
ds
int3
andb
pop
add
mov
inc
sti
aam
xor
or
xchg
movsl
les
adc
popf
and
jl
out
aam
idiv
dec
inc
add
call
add
idiv
es
adcl
add
mov
cmp
js
add
addl
push
mov
mov
test
add
rolb
scas
cld
xlat
in
add
xchg
pop
sbb
xchg
imul
sarb
cmp
lods
pop
mov
add
outsb
cld
lods
sbb
outsb
sub
mov
add
inc
popf
adc
dec
cmp
dec
ja
push
cwtl
out
add
sarl
mov
outsl
add
xchg
dec
mov
push
sbb
mov
push
add
es
lock
mov
fcmovu
aam
add
pop
test
add
pop
pushf
jo
in
push
lahf
cwtl
add
sbb
jns
dec
call
mov
add
das
adc
xchg
push
inc
hlt
add
out
add
out
push
shll
cwtl
xor
loope
sbb
fidivl
add
rolb
mov
cs
dec
dec
mov
inc
imul
inc
clc
fdivs
repnz
add
sbb
mov
add
cmp
pop
dec
cmp
je
add
cmc
xor
inc
inc
ret
inc
mov
or
pop
into
sbb
inc
daa
adc
jg
cld
mov
pop
out
fistl
lds
mov
rcrb
dec
sti
lods
mov
push
mov
mov
das
ss
sub
repz
dec
cmp
jle
push
fmul
cli
dec
imul
jmp
or
cmpsl
movsl
stc
dec
inc
add
jp
xchg
jge
out
das
fsubl
jae
call
or
repnz
lea
jecxz
jge
add
adc
push
lock
pop
dec
mov
xor
ret
je
dec
push
xchg
cmpsl
scas
add
ret
in
xchg
xlat
popa
outsl
add
lock
or
sbb
jmp
clc
sbb
mov
lcall
aaa
add
fistpl
aaa
add
mov
xchg
andb
push
pcmpeqw
jo
inc
movsb
xchg
inc
add
orl
xchg
scas
push
pop
cwtl
fildl
mov
mov
fdiv
cmp
push
out
mov
and
lret
pop
inc
shrl
mov
fimuls
je
cltd
test
push
mov
inc
jl
add
scas
and
mov
rorl
mov
mov
inc
add
js
push
or
mov
push
icebp
shrl
rolb
sub
imul
cmpsl
hlt
xabort
gs
add
cmc
pushf
xor
out
mov
sub
sub
rolb
sahf
ss
add
mov
add
and
jno
loopne
testl
mov
out
jge
sbb
movzbl
fsubl
pop
add
pop
inc
and
push
das
pop
sbb
stc
push
shr
insb
dec
add
push
cld
out
and
and
aas
stos
inc
sbb
stos
adc
jle
pop
mov
mov
push
int
sub
scas
or
repz
xchg
hlt
mov
ja
sub
cld
adcb
shrl
jno
or
negl
xor
push
gs
inc
cld
inc
arpl
add
xor
loope
pop
inc
xchg
cmc
es
jo
pop
loop
in
je
add
lahf
and
add
fidivrl
xchg
push
icebp
in
ret
clc
fcomps
add
push
sti
ja
dec
sub
push
pop
shll
add
jmp
add
dec
incl
and
lahf
cmp
mov
xchg
inc
lea
mov
mov
add
adc
addl
pop
push
int
add
faddl
rorl
jnp
lret
lock
push
add
outsb
pop
stos
arpl
jmp
fs
add
repz
faddl
in
add
or
cmp
add
pop
pop
ror
rol
add
ficoms
inc
jnp
add
stos
mov
into
arpl
inc
sub
jmp
lahf
xchg
enter
out
into
mov
arpl
out
add
inc
shll
mov
jae
pop
adc
mov
inc
jne
add
cmp
stos
adcb
loope
popf
pop
pushf
lahf
xchg
jnp
pusha
add
xchg
push
shrb
pop
mov
stos
lret
cmpsb
add
push
les
out
sbb
out
mov
rcrl
loopne
add
sub
fistl
or
daa
cmp
pop
sub
xorb
push
sub
dec
jnp
dec
jmp
imull
loope
mov
dec
or
push
mov
add
jno
xor
add
add
push
out
shl
add
jge
xchg
jg
push
pop
pop
jns
rolb
rcll
orb
jmp
sub
lock
xor
pop
add
mov
aas
adc
add
sub
inc
jb
add
jle
js
push
cwtl
mov
add
inc
lret
adc
add
sbb
mov
mov
arpl
cwtl
jne
popf
mov
lods
or
cmp
inc
addb
sub
cmpsl
lea
shll
daa
mov
fsts
out
add
inc
loop
clc
xor
cmp
xchg
add
lret
xlat
push
sub
add
cmpl
push
pop
insl
add
and
cmp
xor
imul
pop
inc
pop
add
sub
xor
lock
test
fsts
out
add
sbb
push
lods
lods
mov
dec
jae
add
pop
pop
mov
inc
and
add
shll
mov
push
lea
add
xor
and
inc
add
sub
ds
sbb
ret
push
mov
js
xchg
xor
jle
movsl
adc
aas
mov
jno
ja
and
test
fwait
in
push
pusha
and
jl
mov
adc
or
cmp
push
inc
add
push
add
jno
inc
adc
adc
adc
add
daa
add
repz
aad
sarb
jl
cld
push
lret
jg
mov
sub
scas
fmull
mov
pop
push
pop
mov
and
bound
cmpb
scas
jp
add
ljmp
lea
int
mov
aad
addb
jbe
sar
sti
jge
cli
test
or
jne
add
sbb
add
repz
mov
mov
mov
sahf
add
and
scas
in
add
data16
fnstsw
enter
cmp
stc
mov
sti
ljmp
aam
f2xm1
sub
icebp
push
add
xor
cld
fwait
xorb
adc
xor
out
inc
aas
sbb
jne
add
pushf
cli
cld
enter
insl
xlat
pop
mov
push
add
add
aam
pusha
add
and
mov
testb
sub
dec
cmp
jl
pop
push
out
mov
sbb
je
sahf
cmpsl
lods
pop
sub
or
push
mov
mov
ret
pusha
loope
ja
cli
filds
insl
cld
or
movsb
fmulp
mov
sbb
stos
pusha
daa
in
js
add
test
jb
mov
jne
add
in
inc
xor
mov
in
aam
fidivrl
inc
cli
cmp
mov
cmpsl
add
sub
xchg
sbb
add
push
inc
push
bound
cmp
push
cmp
add
pop
fwait
add
mov
pop
out
add
add
mov
adc
xor
cmp
mov
or
or
rcr
adc
in
mov
jmp
pandn
mov
and
popl
adc
adc
xlat
push
jbe
in
jae
movsl
sbb
cmp
shr
mov
sbb
stos
sub
clc
push
add
out
outsb
push
or
insl
mov
add
daa
aam
push
movl
jl
jne
mov
add
ret
and
add
push
or
inc
ficompl
addl
das
arpl
mov
sbb
pop
imul
push
add
addb
out
jae
mov
addb
xor
pop
incl
xor
inc
fmulp
orl
orl
push
jg
fnstenv
add
mov
adc
add
outsb
addl
nop
xlat
cmp
xorb
ficomps
jg
add
and
testb
lds
xchg
ret
mov
add
test
sub
cli
inc
xchg
jp
add
pop
dec
xchg
add
ret
rcrl
xchg
jb
in
rolb
cs
sbb
add
mov
shlb
out
jecxz
cmpsb
pop
xchg
push
mov
mov
mov
mov
pop
mov
add
inc
mov
sbb
pop
andb
test
xchg
pop
aas
xlat
mov
adc
ficoml
jbe
popf
jmp
cmp
pushf
and
inc
inc
int3
push
dec
add
aam
mov
int
push
aad
out
mov
imul
jae
cmp
mov
sbb
jno
pop
mov
xor
push
fidivs
loopne
pop
fldt
cwtl
popf
je
mov
add
jo
jcxz
add
icebp
jno
add
mov
add
sti
mov
pop
dec
dec
push
add
dec
ds
hlt
add
mov
pop
fdivl
dec
add
push
inc
pop
into
sbb
ds
jmp
cmc
add
outsb
mov
add
arpl
lods
dec
jmp
in
pop
inc
lret
mov
insl
pop
adc
lock
incb
pushf
add
push
subb
cmp
test
add
push
add
mov
loopne
pusha
mov
jae
jo
cmp
add
mov
push
fwait
pop
mov
ds
push
outsb
xchg
test
fstpt
pop
add
adc
push
jmp
add
out
jp
lret
adc
inc
lods
xchg
lock
lcall
mov
mov
push
pop
clc
pop
mov
jle
jo
mov
std
clc
and
cli
jecxz
xor
and
sbb
lods
push
out
cmp
xor
subl
adc
push
rol
loop
jp
pop
add
outsb
int
dec
dec
popa
ds
scas
lcall
or
shl
adc
ds
pop
cli
out
pusha
and
mov
add
call
iret
inc
lret
dec
push
lock
loop
add
rolb
jo
jecxz
jmp
mov
push
mov
inc
test
sub
jecxz
cmp
lock
leave
addr16
in
js
mov
and
push
daa
xor
bswap
mov
sahf
loopne
in
sti
repz
and
and
inc
jmp
mov
mov
mov
ja
push
sub
cmp
out
loop
add
out
test
loopne
add
pop
cld
or
pop
and
incb
inc
test
cmp
xor
add
dec
sub
push
movsl
rcll
add
adc
repnz
pop
cmc
push
add
add
push
lock
je
hlt
jmp
cmpsb
je
sbb
rcrb
jmp
mov
jecxz
ss
and
push
shl
aam
push
sbb
es
les
jge
test
push
jb
mov
sbb
sub
and
roll
mov
insl
nop
mov
dec
mov
sub
xor
adc
pop
mov
and
push
dec
in
pop
add
test
mov
xor
add
pop
dec
and
stos
stos
mov
xchg
es
cvtpi2ps
fcmovbe
add
test
aad
add
sbb
xchg
outsb
ds
scas
jg
pusha
xchg
cmpsl
fwait
mov
jle
add
pop
push
jge
sub
cmc
xchg
mov
mov
mov
add
push
dec
not
fmuls
sbb
push
sbb
jecxz
sub
jb
or
xchg
arpl
jo
cmpsl
sub
mov
cld
iret
and
cmpsl
int3
dec
push
lods
inc
cmp
pop
js
add
push
repnz
or
mov
mov
xor
jg
sar
dec
cmp
fs
or
leave
rcrl
shlb
jb
mov
add
xlat
mov
cltd
jle
add
lods
xor
cmpsl
xor
out
jl
pop
lea
lcall
out
in
repz
push
push
xor
push
mov
testb
or
xor
repnz
inc
mov
icebp
loopne
push
add
xor
test
iret
push
icebp
push
inc
sahf
imul
jo
mov
sbb
into
stos
sar
ss
jb
pop
or
cmpsl
and
pushf
or
xchg
mov
add
mov
movsb
addb
lds
pop
or
add
mov
pop
cmp
mov
jns
push
add
adc
jg
add
jge
jle
dec
pop
cmp
xchg
insl
mov
jo
int3
movl
lock
or
sbb
mov
hlt
pop
test
mov
dec
sbb
out
add
mov
fists
push
rcll
dec
mov
pop
dec
repnz
lcall
xor
mov
adc
push
xor
add
sbb
sub
lock
add
push
push
mov
add
or
add
addr16
loop
movsb
push
jns
add
mov
pop
fidivrl
inc
arpl
cld
daa
stc
dec
mov
cmpsb
push
pop
and
push
bound
inc
pop
add
pop
mov
mov
iret
sbb
pop
and
test
mov
jecxz
popa
mov
roll
imulb
mov
pop
lret
cmp
jg
mov
pop
insb
pusha
or
add
in
push
in
pop
aaa
and
mov
sbb
dec
add
js
jge
test
mov
jmp
out
mov
cmp
mov
add
sbb
fisttpl
gs
inc
or
adc
test
push
xchg
adcb
decl
lahf
cmp
sbbb
xchg
pusha
data16
ljmp
in
pop
loopne
pop
lea
test
sub
leave
movsl
stc
in
ret
add
mov
mov
scas
jae
rcrb
add
das
inc
outsl
test
sti
ljmp
setne
or
jns
in
int3
pop
mov
and
fxch
mov
scas
mov
in
insb
pop
addl
mov
test
jp
dec
and
push
jae
loop
add
add
jmp
adcl
or
jo
xor
sub
push
fmull
jnp
popa
mov
adc
movsb
leave
and
mov
scas
lret
push
push
mov
into
jg
loop
dec
and
mov
lock
nop
insl
push
enter
add
xchg
and
in
lret
sub
mov
scas
xlat
out
jmp
mov
std
pop
dec
add
xchg
addr16
add
jno
rcrb
and
add
dec
mov
and
add
leave
sub
add
pushf
loopne
sub
pop
add
pop
inc
loope
in
xor
add
sbb
insb
popa
into
cli
icebp
sub
xchg
mov
inc
xlat
pop
dec
mov
inc
and
fmulp
pop
jp
dec
xor
addr16
mov
push
lods
add
add
mov
add
fwait
leave
mov
jb
push
scas
and
inc
push
sahf
addl
cmp
insl
jmp
or
test
mov
shl
xor
sbb
add
and
lds
or
dec
add
mov
jnp
and
out
mov
stos
scas
shll
out
lret
jo
aas
aad
add
push
shlb
daa
sbb
mov
mov
pop
cltd
popa
push
ret
lods
and
xlat
mov
pushw
dec
xchg
dec
jae
add
and
cmp
lret
pop
dec
sbb
sahf
lcall
add
fbstp
add
ss
pop
stc
scas
mov
fwait
loopne
mov
xlat
mov
mov
mov
pop
inc
dec
sub
xchg
push
sub
mov
pushf
shl
pop
sbbl
leave
adc
add
jg
or
inc
add
imul
add
pop
cmp
pop
aam
jb
clc
popf
call
imul
cmpsb
call
add
dec
dec
hlt
inc
xor
jg
fsubrp
rcl
mov
hlt
in
dec
add
fistl
add
xlat
xchg
inc
lret
lcall
sbb
pop
sub
aas
push
cmp
or
mov
adc
out
repz
or
add
mov
cmove
sub
aam
test
sbb
push
nop
in
add
jle
in
mov
loopne
iret
pop
stos
jbe
and
repnz
pop
xchg
hlt
in
sbb
add
push
lret
mov
arpl
rorb
rorl
adc
sarb
push
cld
add
dec
xchg
and
mov
add
pop
lret
xor
inc
loopne
adc
mov
jle
insb
cmp
pop
clc
ret
mov
pop
loopne
mov
imul
ja
nop
adc
xchg
push
add
cmp
xchg
movb
inc
or
out
filds
sub
in
ret
or
sbb
je
pop
imull
dec
rcrl
cli
adc
arpl
test
stos
add
jl
add
repz
sub
in
adc
push
mov
mov
shll
andb
ljmp
gs
cmp
out
mov
cli
adc
out
add
add
jne
mov
loopne
sub
scas
fisubrs
icebp
add
jle
inc
cld
jb
shrb
and
jl
ja
add
loope
adc
jmp
repnz
jp
jnp
pop
imulb
out
add
pop
lock
mov
pop
hlt
scas
inc
out
inc
pop
sub
cli
or
sbb
cwtl
xchg
mov
mov
or
js
sti
cld
in
nop
hlt
sub
push
rcrb
add
imul
fisubs
push
je
adc
rorl
test
sbb
jae
add
sarb
add
imul
add
in
out
mov
inc
ds
jle
mov
mov
inc
mov
pop
roll
xchg
push
jno
arpl
adc
adc
insl
jns
jl
inc
jbe
add
pop
sub
jp
dec
pushf
int
leave
call
inc
movsb
jg
iret
add
and
add
bound
fbld
popf
rorb
pmuludq
lret
cld
add
add
lods
mov
loopne
int
lock
inc
adc
inc
pop
insl
sub
stc
and
add
in
push
call
fiaddl
sub
lea
aad
mov
repz
xor
roll
inc
enter
lret
adc
cmpsb
dec
lods
in
xorb
mov
xchg
add
or
data16
inc
fwait
sbb
loopne
add
dec
or
stos
add
repnz
ror
add
data16
insl
jl
outsl
loop
adc
or
shr
les
add
inc
xchg
popa
mov
pop
jbe
pop
or
lret
call
xchg
mov
std
jno
pop
sbb
roll
cmpsb
add
jno
sar
cmp
dec
das
fidivrs
addr16
pop
cmpsb
or
lock
es
add
shll
cmp
adc
or
fmuls
shld
fwait
jnp
mov
lock
add
sub
mov
imul
sub
rcl
je
in
push
sub
stc
fildll
nop
sub
clc
fdivs
lret
mov
popf
lahf
int
jo
jno
add
pop
insb
fcomi
out
add
cld
mov
jns
pushf
push
add
cmp
icebp
jmp
mov
mov
fidivl
xchg
sbb
ds
sub
add
mov
icebp
cmp
mov
mov
aad
mov
addl
fsubrs
xor
out
sti
scas
add
inc
dec
sbb
sbb
aam
add
loopne
outsl
cmpsb
lods
mov
jp
add
push
rcll
add
sub
das
sbb
adc
es
or
sarl
jecxz
bound
pop
ret
je
mov
sbb
add
stc
add
add
mov
xor
push
xchg
pop
mov
icebp
pop
xor
lcall
mov
sub
out
jp
xor
add
stos
ja
add
and
xorl
add
gs
inc
mov
xchg
les
add
add
test
sbb
jne
mov
push
cwtl
movb
pushf
sub
test
outsb
xchg
rorb
std
imulb
insl
enter
or
jecxz
and
in
add
pop
push
scas
mov
jmp
imul
cltd
lock
jecxz
int3
shrl
incl
enter
fimull
mov
cld
pop
push
in
popf
add
dec
jnp
inc
lahf
mov
addr16
and
mov
add
xchg
popa
xorb
in
add
xchg
mov
add
pop
mov
pop
xor
jmp
push
dec
add
mov
outsl
and
dec
add
lock
xor
mov
sub
jb
movsb
scas
add
aas
in
lods
and
pop
push
mov
add
add
lahf
xchg
mov
add
movsl
test
sarl
cmp
aas
mov
lcall
ficomps
jge
pushf
xor
cmp
jmp
popf
stc
add
pop
and
arpl
push
lods
lahf
shlb
mov
jb
lock
sub
mov
add
add
scas
add
clc
emms
rcl
loopne
jecxz
pusha
nop
add
xchg
mov
or
fnstenv
sbb
add
clc
add
push
loop
ret
pusha
bound
shrb
or
add
loop
in
call
push
daa
fsubr
faddl
add
mov
orb
jmp
test
scas
aas
xchg
lods
mov
cmc
js
xchg
sub
cmpsb
jns
fiaddl
lods
add
dec
pop
loop
add
jl
sbb
add
pop
je
mov
mov
jp
into
daa
add
mov
add
xchg
leave
adc
popa
mov
and
add
dec
rolb
or
fwait
cmp
add
out
push
sub
int3
add
arpl
bound
enter
inc
and
sub
mov
pop
nop
jno
jmp
and
sbb
sbb
mov
xchg
xchg
mov
sti
add
pop
sbb
mov
add
loopne
sub
sbb
movsb
clc
aaa
push
lock
std
in
adc
xchg
rorl
mov
mov
or
repnz
pushf
push
aas
mov
mov
jnp
mov
dec
loopne
pop
adc
mov
xlat
xor
cmp
push
add
movsl
cmp
add
xchg
sub
add
mov
and
je
jle
jo
mov
aas
add
adc
xchg
add
imul
fdivs
mov
out
movsb
popa
cld
test
lahf
and
mov
aaa
lret
jae
hlt
cli
add
clc
sbb
add
loope
imul
jne
decl
pop
cmp
cwtl
mov
in
jno
add
das
in
sub
ret
ss
adcb
pop
sub
xchg
sub
scas
into
add
push
pop
clc
dec
lcall
cmp
repz
mov
imul
push
insl
fistpll
push
lock
or
outsb
inc
jmp
outsl
xchg
stos
add
add
sti
and
add
pop
popa
push
sarb
jge
add
jp
movsl
fwait
test
sub
fcmovb
push
xor
fdivrl
bound
add
aad
leave
cmp
xor
fcompl
cli
sti
mov
or
arpl
add
add
bound
nop
lock
daa
rclb
dec
dec
mov
nop
push
mov
out
adc
out
and
sahf
add
mov
dec
jmp
gs
sub
adc
cltd
jbe
push
loopne
jecxz
nop
sbb
rolb
adc
jnp
xor
adc
mov
and
rolb
es
push
mov
imul
push
insl
pop
and
xchg
lds
add
mov
push
in
xchg
mov
lea
add
movsl
pop
push
ret
out
inc
lahf
pop
sub
ja
xlat
outsb
sub
mull
and
sbbl
add
push
and
push
and
sbb
into
imul
je
add
cwtl
sbb
jb
or
and
sahf
je
add
jnp
xlat
or
mov
shlb
iret
cmp
add
scas
cmp
out
jne
add
sbb
push
mov
imul
cs
dec
add
shr
inc
add
ret
dec
in
sub
xor
sbb
testl
icebp
adc
inc
stc
lcall
or
mov
or
aas
add
test
shlb
sbb
add
xchg
add
add
jle
add
repnz
pop
std
lcall
sar
adc
dec
cli
jno
call
xor
lods
jae
inc
jns
pop
test
mov
xchg
jbe
lahf
xor
pop
add
inc
or
or
push
add
sub
xchg
add
idivb
mov
cmc
push
add
and
mull
sub
or
or
arpl
out
fwait
xchg
jb
sbb
xchg
or
xlat
add
add
testb
xchg
push
mov
out
jle
jb
inc
jp
sub
mov
sbb
sbb
lods
jo
out
mov
inc
fnstcw
shlb
jns
add
push
hlt
dec
sub
rolb
seto
daa
push
xorb
add
pushf
mov
addr16
lret
pop
inc
je
add
add
xchg
push
cmp
cmc
mov
stos
xchg
test
add
push
mov
jecxz
xor
add
or
inc
sbb
dec
and
add
imul
mov
adc
les
add
sbb
or
dec
lock
pushf
xor
sub
push
add
sub
shll
ja
ret
mov
loopne
sbb
add
mov
push
dec
rclb
ret
subb
cmpsb
xchg
in
mov
js
sbb
jns
sahf
dec
clc
pop
push
jb
jo
add
cmpsl
pop
xor
stos
sbb
push
mov
pop
fsub
or
jo
pusha
add
add
lret
fwait
mov
push
data16
cmpsb
xor
xchg
xor
dec
gs
mov
xchg
popl
sbbl
add
out
sbb
cmpb
jecxz
cmpsb
cli
dec
fwait
add
movb
push
shlb
xchg
add
fistl
adc
aas
pop
dec
add
push
mov
add
jbe
jp
lods
add
imul
dec
gs
or
xlat
lcall
add
push
int
lds
push
cltd
sub
add
or
flds
jg
mov
push
add
jo
xor
add
and
lcall
jno
cmp
add
xchg
mov
loope
fcoml
lods
es
add
sbb
push
movsb
mov
adc
imul
jno
mov
xor
jg
jge
cmp
cmpsb
add
or
jo
stc
sbb
and
es
add
mov
jmp
pop
out
add
mov
call
push
dec
les
push
aam
add
pop
shr
sub
sub
aas
jle
sbbb
cmp
xor
pop
hlt
jb
mov
mov
add
lock
cmp
add
arpl
pusha
push
push
xor
cmp
ficompl
or
adc
loop
add
push
ficomps
add
sub
incb
popf
or
mov
pcmpeqd
sbb
jmp
sub
lret
lods
sti
sbb
call
ficomps
daa
mov
sub
dec
fcomp
add
sub
add
out
addr16
nop
push
mov
movsb
add
dec
add
xlat
mov
in
repnz
pusha
xor
shl
add
pop
mov
add
lret
dec
sarl
add
cmovb
mov
fsubrs
rolb
cmpsl
icebp
js
mov
inc
repnz
add
int
or
out
movsb
add
xchg
dec
dec
add
icebp
imul
or
fs
mov
jp
pop
out
stos
lods
pop
leave
test
inc
je
or
cltd
ret
rcll
in
jmp
cmpb
sub
hlt
das
mov
or
add
pop
jg
push
or
scas
into
dec
jno
sub
int
sbb
jbe
roll
dec
mov
add
aaa
push
icebp
add
ds
xchg
jbe
mov
fmul
sbb
sub
dec
sahf
push
jg
mov
ja
add
jne
ret
cmp
add
jo
fistps
cs
cmp
popf
lret
add
lods
filds
mov
inc
add
cwtl
dec
dec
jne
cmp
add
and
out
jmp
sub
scas
ret
mov
dec
loopne
roll
inc
and
enter
add
cltd
dec
les
rolb
sub
orl
jo
ret
or
icebp
add
adc
xabort
loope
ret
xor
mov
mov
sbb
xor
add
pusha
je
loope
add
pop
out
pop
les
jae
shlb
icebp
loopne
push
pop
mov
jbe
push
dec
in
jnp
loopne
imul
adc
mov
add
push
mov
js
add
mov
insl
dec
outsb
in
add
outsl
movsl
pop
fwait
mov
push
cmp
test
aad
fstl
xchg
je
jg
inc
add
dec
push
out
pop
add
repnz
es
mov
std
pop
inc
cmp
pop
and
jmp
aad
lret
push
push
cld
pop
add
mov
js
test
ret
jne
and
jno
cli
in
data16
cmp
add
aaa
in
faddl
popa
xchg
enter
inc
cmp
or
mov
stos
pop
dec
mov
inc
aaa
push
lods
cmp
bound
pop
daa
je
lahf
cmpsl
dec
pushf
jge
hlt
jns
shrl
jle
imul
repnz
icebp
pop
lods
mov
jmp
mov
std
je,pt
add
xchg
add
insb
bswap
mov
add
dec
scas
add
or
mov
add
mov
cmpsl
popa
daa
mov
rcll
ret
mov
mov
out
mov
ficoml
mov
movsb
inc
add
mulb
sarl
cmp
dec
test
sbb
test
mov
cmpsb
or
add
mov
jle
cmp
and
xor
sub
jnp
xchg
jle
push
in
rolb
scas
out
push
pop
add
sbb
icebp
in
push
add
add
faddl
push
bound
retw
add
mov
hlt
cmpsb
add
jnp
jbe
sub
push
test
imul
jno
stos
add
repnz
inc
inc
loopne
push
popf
iret
mov
in
inc
addb
lock
and
add
add
out
cmp
icebp
cmp
adcb
xchg
jl
pop
fidivl
jmp
xchg
aad
aaa
fiaddl
jp
sti
add
cmp
cmp
pop
jne
jo
mov
mov
xor
cmpsl
inc
decb
sti
inc
jle
mov
add
movsb
sub
add
pop
popf
lret
jmp
add
sub
add
dec
xchg
mov
les
out
dec
add
std
push
cmp
andl
cs
pop
rorb
pop
pop
js
andb
mov
inc
jns
cmp
add
mov
mov
in
cmp
pop
les
xlat
nop
pop
lahf
inc
insb
add
push
in
adc
int3
test
shrd
xor
dec
and
dec
add
jno
call
add
ret
add
mov
sub
sub
jnp
cmpsl
add
add
fucomp
mov
jmp
fdiv
jb
add
nop
push
pusha
or
add
add
inc
jg
pop
pop
mov
or
mov
call
dec
fisttpll
imul
or
add
imul
in
xchg
fcomps
fwait
je
popa
std
cmp
or
xorb
mov
daa
add
nop
push
movsb
ja
jecxz
pop
xchg
or
cwtl
rol
or
pop
imul
movsl
scas
cmp
add
hlt
filds
add
faddl
add
xchg
xchg
add
xor
add
inc
cltd
cld
xor
movsl
and
adc
mov
je
jecxz
lret
sbb
mov
adc
stc
or
pop
or
dec
sbb
inc
add
mov
int3
and
out
shlb
add
shlb
fnstenv
je
loopne
mov
mov
mov
rorl
ljmp
pop
jae
jne
test
aam
pop
stos
push
adc
pusha
hlt
push
in
nop
neg
jp
add
repz
dec
repnz
add
loopne
movsb
cmpsb
shrl
or
in
out
or
ds
push
cmpsl
mov
xor
jge
inc
inc
sub
or
rorb
mov
add
les
xor
push
movsl
push
add
mov
sub
loop
add
jbe
cmc
leave
aam
mov
add
call
int3
ret
lret
jge
out
push
inc
sbb
xor
xor
imul
push
test
add
dec
jo
repz
adc
mov
bound
in
or
mov
inc
adc
mov
jmp
sub
add
fdiv
jns
int3
inc
add
repz
xorl
pop
mov
in
mov
movsb
mov
in
sbb
add
cmp
movzwl
ja
shlb
pop
mov
loope
xchg
add
jle
hlt
popf
add
mov
mov
div
dec
xor
xchg
jo
mov
lret
sub
or
addr16
adc
dec
mov
lret
aam
dec
cmp
insl
popf
fcmovne
addb
add
and
call
cs
bndldx
mov
flds
mov
pushf
add
and
and
adc
dec
decl
aas
fldl
dec
or
fidivl
mov
ret
scas
add
inc
mov
out
jl
pop
xorl
push
loop
jle
add
cwtl
cmp
cld
add
ljmp
add
into
popf
add
testl
cmp
mov
nop
into
add
jo
movsb
ficomps
mov
imul
data16
inc
neg
cmpsb
out
add
dec
mov
rcrl
icebp
stos
enter
repz
jp
xlat
add
jg
sub
fs
xor
je
add
sbb
arpl
jmp
pop
pop
xchg
and
imulb
addr16
push
andb
and
sub
add
pop
xchg
xor
dec
add
jo
push
cmp
loope
gs
ja
add
inc
mov
add
bound
xchg
jecxz
cmpb
adc
inc
lock
add
and
inc
xor
xchg
sub
mov
repz
insb
mov
dec
aad
add
cs
or
add
jg
add
fcoms
pop
rolb
idiv
sahf
out
push
adc
or
mov
mov
hlt
pop
mov
pop
pusha
loope
and
jnp
push
add
clc
inc
mov
add
pop
xchg
mov
fs
add
lds
repz
adc
push
nop
popf
adc
shrl
stos
jp
inc
adc
inc
inc
xchg
inc
jl
add
andb
inc
and
inc
mov
fwait
cld
add
popf
in
add
sub
sub
xchg
and
add
mov
icebp
push
or
mov
popl
ja
dec
lea
push
add
inc
inc
pop
clc
push
aad
cmc
mov
imul
cli
adc
lcall
add
jne
mov
js
outsb
add
stos
aaa
dec
mov
les
mov
aas
jae
je
and
cmp
dec
cwtl
and
fsubrp
inc
lret
and
pop
cltd
orl
mov
mov
fidivs
add
aas
push
stos
add
pop
adc
push
sub
add
mov
push
cmp
aaa
subb
pop
add
lds
jnp
movl
test
scas
and
outsb
aas
out
loope
pop
or
je
jg
jbe
test
jl
mov
fwait
les
mul
mov
icebp
scas
fdivrl
sub
addb
jno
push
loopne
aaa
add
cmpsl
std
in
in
jmp
lret
out
repnz
cmp
sahf
and
jmp
jle
pop
arpl
add
add
mov
cmp
inc
sub
mov
movsl
in
cmp
add
popa
fdivrs
cmp
pop
or
xchg
xchg
iret
dec
test
add
xor
or
inc
nop
push
cmp
incb
mov
cmp
or
clc
into
nop
mov
xor
pop
orb
rcll
daa
iret
lds
std
cmp
ljmp
jbe
lock
cmp
adcb
or
mull
int
cmp
fidivs
adc
or
dec
dec
push
jo
fiadds
std
loope
movsb
jnp
mov
pusha
mov
pop
push
fldl
jb
data16
in
sbb
jp
test
add
mov
pop
inc
out
or
js
jne
sub
mov
adc
add
xor
outsl
jns
mov
cmovge
jb
popa
inc
dec
mov
div
cmp
shrl
add
mov
pop
mov
add
dec
pop
lahf
leave
sar
lds
cmp
pop
fdivrl
add
repnz
icebp
movsb
orl
rdmsr
hlt
jecxz
loopne
add
in
out
pop
mov
add
push
ds
ja
push
cmp
rcrl
sahf
mov
inc
enter
add
jmp
pop
in
aaa
and
and
mov
xchg
hlt
push
out
inc
mov
test
fcmovnu
sarb
stos
add
add
adcb
lods
jo
sub
fidivrs
scas
pop
ds
adcb
xor
xor
sub
adc
or
pop
pop
add
sbb
pusha
outsb
fld
imulb
add
adc
inc
pop
add
push
lahf
adc
sub
das
scas
add
cmc
xor
add
mov
jg
cwtl
xchg
cmp
and
mov
into
nop
stos
add
xor
add
shrl
adc
add
sbb
out
pop
nop
daa
add
pop
push
ja
dec
add
sub
lock
icebp
add
scas
insb
cmp
stos
movsb
fadds
dec
sub
add
loopne
pop
pop
jb
mov
popf
fmulp
add
sub
push
adc
roll
mov
rorl
cmp
mov
jo
sbb
leave
addb
add
mov
xor
pop
int3
es
std
mov
adc
add
fdivs
fs
and
js
lea
sub
add
pusha
mov
jns
push
in
jns
add
cmp
and
fdiv
pusha
lret
pushf
inc
pminub
cmp
sbbb
in
js
mov
jle
xchg
addb
negb
fidivs
fldl
xor
push
aaa
push
inc
dec
cmp
adc
add
clc
fst
cmpsb
push
call
notb
inc
cmp
ret
gs
pop
punpcklbw
jbe
add
or
add
cmp
repz
gs
push
jnp
add
leave
cmp
jp
add
pop
jbe
pcmpeqw
inc
add
in
insb
pop
stos
shll
mov
push
sub
mov
and
or
and
jecxz
std
xor
pop
daa
sbb
adc
ljmp
loope
or
xchg
das
mov
push
pop
bound
loopne
mov
fucomp
pop
add
sbb
mov
popf
out
mov
push
mov
flds
int3
scas
repnz
ret
cmpl
mov
add
test
inc
jmp
mov
fnop
sti
add
mov
sbbl
jb
add
insl
iret
mov
jecxz
cmp
jle
imul
inc
aad
movsb
jae
repz
pop
and
mov
add
push
mulb
add
mov
loope
iret
add
push
cmc
into
and
lahf
add
push
add
cmp
out
pop
jbe
int3
add
mov
test
add
fildll
ja
add
cmp
into
jns
add
repz
sbb
insb
mov
jecxz
out
jge
sbb
aam
dec
or
cmp
out
jbe
enter
push
sub
in
jecxz
add
mov
mov
call
adc
add
pop
adc
pop
daa
or
and
add
add
das
push
mov
pop
xchg
add
cld
int
push
push
sahf
or
jbe
rcrl
add
or
inc
notl
add
add
imul
out
add
push
mov
add
xor
pushf
pop
cmp
sbb
mov
add
mov
xchg
aaa
insl
repnz
pop
xor
mov
jl
add
scas
and
mov
xor
mov
sbb
jbe
adc
enter
idivb
icebp
jo
testl
lods
or
dec
ja
add
adc
arpl
mov
nop
mov
ja
add
aad
pushf
sbb
insb
jo
movsb
add
shlb
movb
mov
mov
jge
cmp
sub
add
push
push
sbb
test
stos
outsl
adcb
cmp
push
add
punpckhdq
add
xchg
test
xor
add
push
dec
stos
push
leave
add
and
je
push
lcall
rorb
mov
iret
mov
sub
test
popf
mov
or
clc
std
mov
rolb
icebp
mov
sbb
repz
andl
adc
inc
add
jbe
xor
fidivs
sbb
sbb
insl
in
rorb
test
arpl
sbb
inc
xor
mov
cmpsb
xor
sbb
int
xor
loopne
and
mov
nop
sbb
xchg
jg
ljmp
pop
js
pop
inc
xchg
add
pop
enter
add
mov
sub
insb
xor
cwtl
loop
int3
pop
mov
in
icebp
scas
mov
inc
in
add
test
dec
add
mov
add
jge
popf
mov
in
pop
adc
push
cmp
push
adc
insl
pop
js
test
push
data16
addl
repz
mov
int3
or
push
add
inc
jecxz
jns
add
fmull
lea
pop
pushf
ljmp
or
js
jb
mov
or
xor
dec
and
shlb
stos
xchg
aad
jle
add
shll
icebp
and
push
ret
pop
inc
jg
add
pop
sarl
addl
and
push
adc
mov
jge
faddl
repnz
add
sbb
sub
xchg
orb
push
sub
scas
inc
fwait
js
jae
loope
mov
or
stos
add
inc
ss
pop
and
subl
out
cmp
dec
adcl
aad
add
adc
leave
add
ret
pop
call
dec
sub
jne
mov
lret
out
adc
clc
push
pop
add
mov
imul
sub
add
and
jge
jmp
mov
xchg
in
cmpsb
popl
add
xor
mov
add
std
mov
add
out
mov
ss
add
stos
loop
push
faddl
incl
popf
xor
scas
aam
aas
insl
mov
ja
roll
repnz
xchg
and
fildl
sbb
mov
sbb
in
out
fadds
int
into
jbe
sub
int3
ror
sarl
mov
adc
add
ljmp
mov
sbb
insb
add
in
jb
scas
add
stos
ja
sub
movsl
pop
jl
lret
and
mov
cmp
add
pop
xchg
js
and
enter
add
jno
pop
sub
xor
imul
xor
add
repnz
inc
adc
add
mov
ret
je
pop
sub
push
jb
jnp
push
add
inc
loopne
push
lock
lock
mov
es
cwtl
stos
pop
push
jb
lods
mov
add
cwtl
cmpsb
jae
cwtl
push
add
pop
cmp
or
les
mov
mov
test
lods
pop
sbb
pop
jo
js
and
mov
jns
xor
inc
pop
jne
std
lods
mov
add
sbb
inc
jne
shll
sbb
lea
ja
mov
lahf
add
pop
es
push
ret
pop
loopne
dec
sbb
test
push
imul
mov
lds
add
adc
test
lahf
test
add
push
pop
add
ljmp
ljmp
aad
pop
mov
mov
pop
xor
repz
push
add
mov
pop
lods
jnp
in
aas
arpl
push
or
sub
push
inc
xchg
test
in
cmp
imul
lret
int3
jo
sub
repnz
clc
dec
and
add
out
push
roll
or
test
pusha
std
shrb
mov
jle
dec
add
push
sbb
loope
mov
add
xchg
adc
or
in
je
pop
mov
sbb
mov
or
sbb
xorl
xchg
add
fs
and
pop
push
jl
jl
sbb
cmp
cmp
push
xchg
aas
add
fistps
dec
mov
sbb
sub
jb
add
movsl
cli
xor
fstps
jle
fwait
mov
add
pop
rolb
add
or
movsl
cmp
or
pushf
and
cmpsl
fdivs
insb
rorl
subl
ss
cs
int3
jl
mov
fcoml
adc
add
mov
pop
and
jg
pushf
jmp
fsub
je
dec
xabort
rclb
pop
add
fisttpll
or
enter
test
push
add
bnd
imul
cmp
pop
inc
daa
sub
push
ret
push
dec
jne
lret
lock
js
andl
or
lock
jns
in
les
push
out
lods
mov
sub
addl
jbe
xchg
push
les
lds
lret
in
and
pop
jb
fucomp
push
mov
pop
loope
notb
ljmp
gs
mov
psrlq
nop
mov
jp
addr16
iret
jle
cmp
lret
sub
adc
scas
adc
pop
adc
and
adc
xor
lea
xchg
incl
rcrb
lock
mov
stos
lods
inc
data16
xchg
and
xor
jne
divb
xor
pop
xchg
mov
xor
add
imul
xor
insb
pop
cwtl
es
push
lock
sbb
mov
aam
mov
fsubr
pop
stos
add
inc
mov
cmp
add
lea
pop
push
push
and
clc
push
xor
push
dec
rcrb
testb
add
cmp
cld
jnp
sub
outsl
xor
push
mov
repnz
pop
lds
fildl
add
jg
sub
xor
std
lret
ss
xchg
mov
sbb
adc
inc
shll
xor
pop
in
xor
push
jge
add
insl
mov
or
mov
fwait
pop
pop
push
cs
jg
add
cmp
fiadds
push
adc
and
add
orl
mov
fiaddl
or
add
hlt
mov
sbb
cmp
out
popf
mov
lods
add
out
cli
daa
adc
sahf
push
mov
mov
rcrl
mov
scas
push
push
cmc
cli
in
mov
lds
add
add
cli
stc
mov
add
jnp
cltd
call
jb
jecxz
insb
out
pop
dec
mov
les
sahf
cmpsl
iret
and
fidivl
add
mov
add
ret
dec
ret
mov
push
in
movsl
push
add
push
adc
pop
add
js
aam
clc
lock
test
inc
xchg
cmp
addr16
add
lea
xchg
push
sti
add
flds
scas
mov
add
scas
add
lret
insb
mov
rol
add
push
dec
das
adc
imul
cmpsl
jnp
pop
add
and
inc
shlb
das
ja
gs
and
mov
mov
test
les
add
inc
and
mov
mov
int3
cmp
xorb
mov
fidivrs
call
pusha
push
outsb
lret
fsubs
and
mov
fstps
mov
hlt
cmp
add
push
sub
add
xchg
pop
fnsave
cmp
pusha
mov
add
pushf
jne
jle
dec
nop
and
push
xchg
add
pop
std
int3
sbb
pusha
iret
push
cs
cmp
mov
clc
in
test
jne
movsl
gs
sub
negl
pop
add
jo
sub
rorb
dec
add
hlt
mov
jo
add
out
mov
mov
pusha
lds
pop
mov
loopne
jge
enter
jle
add
ss
mov
push
cmp
shlb
repnz
and
pusha
pop
jbe
int3
cmp
gs
cmp
xor
lods
fsubrl
jne
pop
adc
bnd
jbe
aam
shrb
mov
pusha
repz
pop
xchg
or
or
call
notb
add
rolb
lret
or
add
add
jns
inc
jg
insb
aad
mov
clc
fwait
add
fsincos
js
push
sar
repz
outsb
add
jmp
lahf
movaps
cmp
adc
lcall
cmp
sbb
outsb
pop
jecxz
mov
add
dec
call
js
inc
loopne
mov
mov
gs
daa
scas
ds
and
fiaddl
add
dec
pop
movsl
xor
xchg
add
icebp
mov
add
pop
ss
cmp
ficomps
addl
pop
in
addr16
pushf
dec
add
and
mov
push
aad
cmp
cmpsl
test
mov
jb
add
or
inc
pop
mov
imul
push
sbbb
dec
fdivs
icebp
or
jle
cli
cltd
mov
pop
xchg
cmp
add
aam
mov
jg
jnp
push
mov
js
mov
pop
outsb
test
je
pop
add
aaa
push
push
xchg
dec
add
cmp
push
add
dec
mov
add
cmp
xchg
pop
lahf
in
ret
test
testl
add
jno
add
mov
pop
mov
leave
sub
es
and
cmp
dec
cmp
cmpsl
cmpl
dec
mov
out
cmpsb
loopne
adc
adc
mov
fadds
jmp
ret
imul
mov
fs
movsl
call
mov
in
cmpsl
jns
pop
mov
pop
xchg
daa
mov
xor
or
sub
push
pop
or
pop
pop
in
sarb
mov
lret
or
orb
cmp
test
inc
jge
fwait
int
test
test
gs
mov
push
daa
jmp
pop
adcb
jl
cwtl
jnp
mov
outsb
and
fcoml
xor
gs
adc
mov
mov
add
pusha
out
fisttps
gs
mov
bound
out
lahf
in
pop
jbe
adcl
cmp
call
jae
pop
test
aaa
push
mov
nop
pop
push
mov
add
xchg
dec
jge
negb
lock
add
adc
fs
add
mov
mov
repnz
das
popf
inc
mov
fsubs
inc
bound
push
lods
mov
lods
stc
push
xor
shlb
mov
stos
scas
sbb
test
lods
pop
fs
add
or
pop
jno
jo
bound
ja
cmp
insb
add
mov
mov
mov
jmp
push
test
and
xchg
das
cli
rorl
addl
push
pop
popf
js
or
xchg
or
fmull
divb
mov
cmp
out
popf
testb
insl
mov
adc
or
dec
add
iret
repz
insb
movl
xchg
jecxz
or
pushf
pop
adc
xchg
adc
test
mov
dec
cmp
add
cmpl
cltd
mov
gs
add
in
test
pop
fcoms
push
inc
sti
aam
popa
sub
add
mov
sub
vandps
push
lcall
and
int
icebp
aas
pop
aad
add
out
jnp
out
test
add
sarl
rolb
cmp
ret
inc
mov
repnz
mov
fs
in
data16
xchg
inc
enter
clc
sub
sti
sub
sbb
dec
js
jmp
fiadds
popa
push
mov
repz
push
mov
stos
in
add
xchg
mov
sbb
dec
das
inc
add
popa
cli
cmpb
add
stos
cmp
imul
add
jl
arpl
fisttps
add
or
loope
out
xor
shll
add
inc
int3
pop
out
iret
hlt
lcall
bound
push
pop
fisubrs
js
dec
or
add
sub
fstpt
cmpsl
arpl
push
repz
or
pusha
and
mov
sbb
rcrl
mov
sub
xadd
add
repnz
dec
es
in
xchg
xor
pop
insl
add
testl
add
add
loopne
xor
add
jle
pop
add
idivb
jae
imull
push
lret
jecxz
loopne
dec
jp
add
aas
or
cmovge
adc
fbstp
test
fs
call
pop
int3
add
mov
imulb
into
stc
push
add
cmpsl
aas
das
inc
ret
cmp
fwait
idivl
les
jl,pn
add
adc
sti
popa
jle
add
mov
xchg
inc
add
mov
xchg
addr16
repz
not
cli
add
pop
push
add
test
jecxz
mov
fiaddl
rclb
loop
in
mov
test
cld
and
jo
mov
roll
push
cmp
push
fldl
jge
in
mov
leave
inc
clc
add
mov
lock
and
sub
add
cmp
push
cmp
inc
cwtl
add
cmp
outsl
add
js
add
pop
cmpb
inc
jo
fmull
outsb
add
popf
add
imul
pmaddwd
enter
jg
add
sahf
fs
subb
rcrb
jg
ret
add
stos
data16
jl
and
inc
js
xor
mov
dec
pushl
xchg
cmp
ja
fwait
inc
add
jns
in
mov
mov
or
adc
add
test
add
sahf
stos
cmpb
mov
and
inc
pop
shrb
sahf
or
add
mov
xor
push
sub
mov
cmpsl
dec
andb
test
cmp
add
repnz
xor
cld
and
dec
push
inc
jl
test
add
test
das
jg
add
pop
mov
dec
test
cmp
cmp
data16
push
adc
lods
jno
add
repnz
test
or
xchg
add
and
sbb
mov
test
addl
dec
out
test
push
push
lret
cs
add
stos
andb
mov
enter
xor
in
cmp
jo
pop
sahf
mov
or
out
add
xchg
movsl
pop
out
and
or
sub
mov
xchg
sub
cmp
add
mov
mov
add
negb
pop
xor
and
popf
cltd
sub
push
sbb
mov
jmp
pushw
mov
out
popa
fidivrl
xchg
shl
push
pop
inc
les
mov
rcrb
and
pop
pusha
fistpl
inc
cmp
push
fidivrs
pop
mov
mov
outsl
jecxz
out
push
or
add
or
add
hlt
loope
xchg
pushf
popa
jae
mov
jle
ret
pusha
addb
inc
aad
push
xchg
mov
jne
add
and
jg
imul
add
lds
pop
cmp
add
leave
rcl
or
mov
das
lea
add
scas
dec
cmpb
cmc
add
inc
roll
inc
dec
mov
sbb
cmpb
test
jb
gs
add
mov
pinsrw
rolb
mov
xlat
inc
ss
ja
sbb
pop
loopne
cmc
movl
nop
push
sbb
xchg
xchg
outsb
out
mov
sbb
jecxz
je
mov
jo
lods
shr
test
inc
jnp
xorb
mov
jecxz
faddl
das
cmp
shr
popf
add
js
repnz
lret
add
jp
mov
or
add
inc
rcrl
add
or
scas
sub
cmp
add
pop
cli
clc
add
int
adc
mov
inc
xor
mov
and
add
xchg
insb
cli
ficompl
call
imul
cmpl
aam
add
clc
std
cs
fmul
add
shrl
imul
add
aad
shrl
add
pop
cwtl
cmpl
jb
xor
push
int3
mov
loopne
add
shrb
insl
add
leave
xchg
xchg
jge
sub
push
push
add
arpl
pushf
dec
in
cvttps2pi
fidivrs
mov
sub
sbb
in
or
addl
mov
mov
add
scas
sub
lods
sbb
fld
ss
pop
sbb
mov
adc
jns
mov
fs
inc
fidivrs
mov
aas
movl
out
pop
not
in
sub
jecxz
push
fcoml
popf
mov
add
test
push
ret
mov
enter
sbb
sub
xlat
pop
test
mov
inc
dec
sub
inc
push
lock
inc
test
mov
cmp
push
sbb
push
test
popa
aaa
add
or
fwait
pop
cmp
cld
add
sti
std
popf
jnp
in
loope
adc
rolb
fstpl
sub
inc
mov
sub
add
fsubl
cmp
fnstenv
ret
xor
cpuid
add
add
push
xor
repz
dec
dec
fsubrl
jns
rdtsc
hlt
mov
les
add
fsubs
das
jns
pop
mov
pusha
lret
repnz
add
test
xor
sbb
cmp
imul
jg
pushl
jge
cli
add
pop
repz
fadds
out
in
lods
arpl
xchg
pop
dec
not
cs
roll
fneni(8087
pop
pop
pusha
add
test
mov
jbe
int3
sub
add
mov
lcall
inc
add
fcom
pop
shlb
add
pop
add
xlat
lahf
mov
sub
or
jns
lock
mov
daa
dec
int3
movl
enter
add
rcrl
movsb
int
cmp
push
add
insl
shlb
push
and
rclb
addb
stos
gs
or
mov
cltd
hlt
push
testl
lock
adc
add
je,pn
mov
xor
xchg
shr
fcmove
pop
add
pop
push
stos
add
hlt
lods
dec
in
scas
add
mov
inc
jno
aas
ljmp
mov
int3
add
mov
shl
pop
mov
mov
je
pop
iret
fwait
popa
push
dec
aam
inc
pop
push
mov
mov
xchg
je
lds
sub
push
cmp
dec
inc
inc
lret
jge
add
mov
mov
mov
xor
shlb
add
or
adc
cmp
dec
clc
mov
mov
or
inc
push
add
testb
enter
pop
xor
xlat
mov
arpl
and
xchg
push
sarb
mov
je
inc
sub
cld
xchg
dec
in
ret
jo
pop
int
lods
inc
jns
add
into
lret
pusha
sbb
add
cmp
fs
dec
lahf
add
scas
sbb
add
fisubrs
add
push
jo
push
movsl
add
aam
popa
mov
fldl2e
sbb
mov
in
and
scas
sbb
cmp
mov
xor
and
add
xchg
aas
inc
iret
pop
data16
add
movsl
mov
adc
add
mov
push
add
xor
push
je
data16
xor
fnsave
movl
rcr
lock
cmp
inc
add
sub
and
sbb
cmpl
add
mov
and
or
fs
test
fdiv
pop
mov
test
pop
ja
adc
mov
mov
sbbl
pop
movsl
leave
mov
add
pop
push
jbe
jne
push
adc
xchg
test
scas
out
lds
push
push
pop
sbb
xchg
ds
add
clc
jg
cmc
int3
adc
push
mov
mov
xor
fisubs
and
xorl
mov
enter
pop
mov
cmc
push
cmpsb
in
add
add
in
hlt
rol
repz
add
mov
cmp
xchg
ficoml
enter
mov
fildl
dec
jne
lods
cmpl
ljmp
rcll
rcrl
inc
inc
and
call
mov
add
xchg
add
ljmp
add
inc
dec
xor
xchg
mov
jb
iret
mov
xor
subl
mov
test
inc
mov
add
dec
mov
das
sbb
mov
outsb
cltd
test
popf
mov
iret
sub
filds
adc
mov
add
jne
xchg
dec
mov
adc
std
icebp
in
add
imul
jbe
xchg
mov
aas
dec
and
xor
dec
repz
add
push
pop
adc
imul
aaa
out
je
in
lock
cwtl
int3
dec
add
pop
mov
loop
in
cmc
in
push
add
add
enter
rcrb
pusha
sarb
sbbb
fs
clc
add
cli
mov
push
loope
push
add
call
mov
fsts
pop
add
cmp
xchg
push
xor
sbb
cmp
or
or
lods
call
jo
add
inc
pop
adc
into
inc
add
and
pop
inc
add
jo
mov
xor
frstpm(287
mov
stc
add
sub
push
arpl
insl
cmp
add
pop
and
xchg
mov
shlb
cs
add
ds
mov
fwait
dec
pop
pop
shrb
sbb
lcall
jle
push
mov
add
popa
adc
cmp
push
rorb
push
lods
mov
mov
shlb
addl
and
xchg
mov
insl
adc
int
push
add
add
repz
sahf
data16
mov
je
or
inc
pop
add
filds
mov
sarb
push
push
add
insb
ffree
xchg
dec
mov
pop
jp
int3
add
dec
sub
adc
sbb
fwait
mov
aad
add
fistpll
pop
xchg
inc
notl
outsl
add
in
push
cmp
add
adc
rcrb
add
pop
push
testl
mov
add
out
insb
sub
shll
mov
mov
fwait
add
mov
adc
pop
jge
mov
mov
iret
add
cmpsb
inc
cwtl
mov
enter
sbb
mov
add
test
pop
add
dec
xchg
adc
test
adc
sub
inc
pop
jno
nop
pop
mov
add
sub
add
jl
add
mov
ret
pushf
sahf
fsubr
xchg
jle
add
loopne
scas
int3
aad
sub
lds
nop
out
or
das
mov
orb
arpl
add
fimull
dec
dec
fldl
std
inc
sub
idivb
loope
mov
bound
add
jmp
in
add
dec
fmuls
add
push
fcompl
adc
cmp
jg
into
or
adc
leave
stos
mov
xor
sbb
jecxz
enter
xor
fwait
or
pop
sub
je
add
inc
stos
add
jns
mov
xchg
add
lock
ret
enter
cmpsb
inc
cmp
repz
sub
in
stos
add
test
dec
cmpsb
leave
push
sub
and
loope
ud1
add
inc
mov
rolb
pusha
rorb
sarb
cmp
pop
add
pop
and
sbbb
neg
in
add
out
dec
add
jo
leave
repnz
cmovne
std
push
loopne
add
dec
inc
pop
cmp
and
mov
sbb
in
mov
mov
movsb
adc
cmp
int
cmpsl
js
add
cmp
jne
mov
sub
cmp
lcall
add
mov
sub
pop
and
sub
pop
ja
arpl
rcrb
cmp
int3
sbb
or
fmull
daa
neg
dec
sbb
add
fs
cmp
add
sbb
add
push
pushf
aam
cmp
cwtl
scas
xor
lcall
mov
ds
add
pushf
data16
jb
mov
ljmp
add
mov
xchg
ds
push
mov
mov
ljmp
jb
loope
add
xor
inc
int
sub
add
rol
pop
leave
jmp
call
adc
add
test
lds
add
fsub
push
cld
add
add
insb
xor
in
idiv
mov
or
sarb
add
mov
dec
and
sbb
push
xor
xor
cwtl
mov
sub
pop
hlt
mov
pop
inc
popa
fdivs
loope,pn
rsm
mov
sbb
dec
int3
addb
add
rolb
mov
or
insb
out
std
add
dec
inc
or
mov
jecxz
jb
mov
jo
in
nop
add
dec
fimuls
fbld
outsb
jae
jbe
popf
add
sbb
mov
add
mov
jecxz
dec
xchg
data16
lock
iret
add
inc
push
add
cmp
faddp
scas
adc
imul
loop
stos
pop
mov
dec
inc
leave
test
icebp
fsubrl
popa
in
push
rclb
add
jl
push
add
adc
xchg
push
les
movsb
incl
inc
pop
stos
daa
popa
in
mov
inc
out
rcrl
dec
mov
adc
add
lcall
push
pop
lods
mov
js
divl
adc
leave
mov
add
gs
add
lds
outsb
jno
dec
xchg
add
mov
add
sahf
addb
fists
add
ret
add
ja
repnz
popl
std
adc
xchg
push
and
sbb
inc
lcall
xor
outsl
push
add
sub
test
or
ja
xor
out
fimull
mov
call
add
decl
add
jne
xchg
pusha
pop
adc
call
fs
add
xchg
push
dec
cmc
sbb
loopne
mov
or
ret
xchg
bound
inc
push
lea
xchg
add
xlat
xchg
inc
push
aad
adcb
add
mov
fs
mov
and
jecxz
insb
mov
push
cli
jno
add
lods
aam
imul
push
movl
add
test
enter
pop
mov
mov
or
add
nop
cwtl
push
dec
mov
out
dec
xchg
jno
cmpsl
stc
add
cmp
pop
mov
pop
int3
fstpt
cmpsl
aam
ret
and
loop
imul
cs
mov
and
inc
add
sbb
fidivs
or
pop
nop
pop
sar
xorb
movsb
sbb
mov
leave
or
inc
int3
cltd
xchg
rclb
add
adc
add
fldt
out
sahf
faddl
loope
pop
fld
sarb
lahf
outsb
rcrb
xor
add
push
pop
dec
add
js
daa
xchg
xor
or
test
add
jno
testl
push
mov
lods
cmp
lahf
add
cwtl
aas
pop
push
xchg
inc
add
pushf
clc
cmc
nop
std
push
sbbl
shll
sub
mov
out
jne
add
push
mov
cmp
inc
test
push
mov
in
in
pop
mov
adc
jle
sbb
testb
add
loopne
dec
add
xor
add
xor
add
pusha
int
in
add
cld
cmp
loop
or
call
add
cmp
sub
sbb
xchg
movb
aas
add
sbb
cmp
xlat
nop
fidivrl
cwtl
dec
pop
adc
xor
xchg
call
xor
subb
sbb
add
and
fs
mov
xchg
mov
aam
das
insl
dec
inc
and
fistpll
icebp
call
add
daa
aas
lods
imul
jl
add
xchg
leave
imul
ja
xchg
mov
xor
mov
add
int
mov
cmp
xchg
jbe
add
sbb
push
mov
mov
test
daa
test
nop
mov
pop
add
and
sbb
xchg
test
lret
cwtl
call
aaa
popf
ret
and
add
and
mov
aas
jp
add
not
xchg
add
add
arpl
clc
sub
add
movsl
push
mov
dec
fildl
and
mov
cvtps2pd
outsl
arpl
xor
mov
lret
sub
in
test
jge
lea
add
daa
jne
sbb
sub
out
add
dec
aam
je
fwait
or
or
outsb
js
lea
sub
adc
and
pop
xchg
orl
xor
or
adc
cld
and
imul
repnz
push
insl
jl
xchg
je
add
in
sahf
into
addl
jmp
orb
push
pop
mov
cmp
jo
ja
jns
pop
addb
lods
insl
cmpsb
cs
cmp
dec
add
lcall
loope
into
repnz
xchg
cmpl
jb
or
adc
mov
negb
dec
xchg
pop
inc
add
xlat
mov
mov
or
and
jmp
jno
mov
popf
pusha
push
adc
dec
xchg
add
cmp
mov
inc
xor
mov
data16
rcl
rorb
fisttpl
pusha
call
cmp
lahf
xor
xchg
jle
imulb
push
push
push
add
adc
ja
xor
imul
mov
mov
add
jns
push
push
clc
push
pop
shr
pusha
cmc
ljmp
outsb
push
aaa
out
inc
sahf
push
repnz
jl
cmp
call
cld
shl
fs
add
pop
mov
std
nop
and
and
lock
pop
adc
stc
jg
data16
mov
loop
stos
fmuls
ljmp
std
add
subl
xor
pusha
rorb
and
or
add
dec
sbb
hlt
int3
loope
add
gs
add
shlb
add
lret
insl
xchg
clc
out
outsl
xor
push
mov
or
jecxz
xchg
lret
sbb
stos
add
test
mov
decl
push
add
sbb
leave
out
mov
je
dec
loopne
in
sbb
xchg
pop
inc
dec
add
add
pop
jnp
cmp
icebp
orb
mov
dec
cmpsl
bnd
in
and
loopne
dec
and
pop
cmp
mov
xor
mov
add
xor
mov
iret
orb
xchg
adc
pop
aas
push
xor
cmp
jnp
jo
pop
xchg
push
into
jne
nop
mov
aaa
mov
mov
or
cmp
nop
pushf
sub
js
mov
out
add
shlb
hlt
test
data16
outsb
push
fmuls
mov
inc
out
jo
lods
cmpsl
hlt
add
imul
jae
xchg
fwait
xchg
or
sub
std
add
push
inc
cmpsl
cmp
test
pop
rcrl
addl
mov
nop
add
sahf
ljmp
shll
shrb
add
jecxz
adc
fiadds
add
pop
push
add
push
inc
and
xchg
jle
add
xor
incl
in
mov
push
fldl
stc
add
cs
jnp
add
xor
icebp
push
lds
test
fistpll
mov
cmp
pop
sub
mov
aas
aaa
hlt
sbb
mov
rorb
mov
cmp
mov
loopne
push
push
fcmovbe
das
sbb
sub
push
out
addb
dec
ror
fiaddl
add
add
add
aad
leave
popa
xor
clc
add
sbb
shlb
mov
into
jle
add
or
ljmp
sub
aas
clc
cld
cwtl
xchg
add
call
cli
xor
push
adc
loop
sbb
jmp
rclb
add
or
pop
mov
test
xchg
stos
add
js
add
mov
and
push
test
jns
or
and
shrb
dec
pop
sahf
push
or
ror
push
add
fiadds
add
sahf
int3
jbe
icebp
bound
mov
jge
inc
sar
das
add
iret
xchg
ret
add
jge
add
mov
sbb
imul
sti
push
add
adc
in
movsl
add
shl
add
or
mov
sub
iret
je
add
push
shl
sub
cwtl
push
dec
push
push
cmc
adc
jp
stc
adc
aam
mov
mov
daa
mov
pop
popa
andl
outsb
inc
sub
mov
sub
or
add
arpl
fldcw
pop
clc
repnz
mov
mov
add
lock
call
add
les
pop
add
add
add
jle
cmp
in
fsubs
fmul
cld
push
lcall
sbb
jp
xchg
rep
mov
cmp
xor
out
cmp
and
adc
xorb
out
and
je
add
pushf
imul
je
push
sahf
out
aam
ror
movsb
ja
cmc
cs
or
mov
fs
add
mov
fimull
or
icebp
jmp
sub
inc
lods
out
out
lods
pop
jl
enter
adc
add
call
loope
in
inc
incb
cmpsl
cmp
sarl
sbb
addl
fsubrs
pop
inc
push
gs
js
add
in
sbb
or
mov
gs
push
add
jb
int3
sub
sbb
xor
test
ds
ret
adc
dec
add
cmp
sahf
fadds
ficompl
xor
movsl
mov
or
jmp
jp
inc
mov
dec
addb
inc
in
and
adc
sub
or
subb
jge
hlt
add
inc
iret
shll
mov
movsb
fcmove
add
adc
add
sub
out
js
add
xchg
dec
mov
add
fsubrp
and
or
aam
xor
int
mov
add
sub
in
add
add
sub
sar
add
cmp
xor
adc
repz
mov
xor
mov
add
sbb
ret
xchg
aad
add
movb
enter
add
mov
xor
nop
movsl
add
bound
shl
pop
adc
cmc
push
jb
add
movsl
cmp
scas
loope
in
sbb
out
fisttpll
out
adc
fcompl
inc
lcall
xor
popf
movsl
sub
and
inc
repnz
adc
int3
dec
and
cvtpi2ps
xor
cltd
xchg
pushf
or
jp
push
fmuls
or
add
dec
pop
std
int
or
push
jle
add
xchg
nop
int
ret
loopne
outsl
pop
add
insb
movsb
push
add
cmp
or
dec
pop
adcb
sub
sub
xchg
jecxz
dec
popa
push
idivb
fcmovu
jl
jmp
in
jg
sbb
inc
add
pop
aaa
inc
adc
add
xor
sbb
push
ret
mov
pop
cmp
ja
loopne
or
notb
shrl
aam
inc
orl
cmp
jl
add
shlb
jle
adc
or
pop
add
repnz
subb
add
in
pusha
loopne
iret
leave
add
lcall
or
stc
lret
pop
aam
ds
or
add
xor
pop
push
js
stos
add
add
or
cltd
cmp
mov
or
push
or
fildl
int3
fsubs
pop
add
or
pushf
stos
mov
repz
lds
mov
addb
push
mov
push
cwtl
sub
xchg
adc
dec
jmp
fcoml
push
data16
inc
sti
or
sbb
add
lret
stos
fsubs
imul
adc
sti
xchg
std
loope
mov
add
enter
cmp
jle
imul
push
dec
stc
lock
mov
fcomps
faddl
push
mov
std
jno
add
mov
lods
and
roll
dec
mov
cmp
pusha
std
dec
jne
inc
sub
mov
add
rclb
idivl
add
lret
and
sahf
cmc
mov
or
sbb
aad
add
dec
rclb
in
and
loopne
add
rorl
mov
add
cmc
cltd
std
lock
mov
clc
mov
mov
cmpl
dec
inc
inc
cmp
stos
cmp
clc
das
sub
jle
aam
xor
mov
push
arpl
mov
dec
or
into
rolb
cmp
sub
pushf
into
inc
repnz
sub
orb
mov
jmp
push
sub
xor
pusha
scas
test
sub
or
add
jbe
add
dec
rolb
ret
hlt
cmp
mov
jle
and
adc
fistl
fsubr
hlt
or
notl
icebp
pop
xchg
sbb
mov
das
jmp
bound
dec
lcall
xor
jp
addr16
or
cmovs
push
mov
mov
fcoms
outsl
xchg
sbb
push
xchg
cmp
add
fcos
and
roll
add
cmpb
das
flds
jmp
lock
inc
push
leave
int
jnp
push
sar
add
xchg
sub
mov
jg
and
xor
hlt
fstpt
dec
or
lahf
push
ja
cmp
lods
or
xor
jae
imul
add
cwtl
adc
mov
ltr
rorl
in
cmp
insb
jge
push
mov
pop
mov
jle
xorb
jne
xchg
roll
adc
nop
or
cmp
push
lods
sahf
push
add
add
xchg
add
ss
prefetchnta
test
mov
in
mov
adcb
lret
frstor
jle
das
add
outsl
test
mov
xor
gs
das
test
add
cli
cmp
mov
push
mov
and
jae
jge
xchg
add
mov
outsl
lds
xlat
pusha
cltd
cmc
test
add
add
push
xchg
xchg
das
mov
in
xor
out
add
xor
mov
fimuls
mov
xchg
sbbb
fmull
aas
les
outsb
inc
jecxz
and
pop
gs
ja
cli
addr16
mov
lret
fsubp
fsubrl
stos
lret
scas
sbb
or
sub
lahf
add
int
jnp
les
add
mov
add
sub
fiadds
jns
jge
add
rcl
add
mov
bound
cli
cld
or
movaps
and
mov
les
fistl
int3
sub
pop
into
in
pusha
gs
arpl
rolb
add
ss
jno
jo
std
add
loopne
sbb
ss
mov
mov
or
cmp
and
imul
or
cld
pop
add
mov
in
imul
sbb
xor
add
je
cmc
out
mov
sbb
mov
add
fldenv
enter
sub
les
pop
ds
icebp
inc
aas
cli
push
bound
add
adc
ds
dec
movsb
cmp
xchg
fdiv
bswap
cli
ljmp
sub
lea
sbb
jg
add
add
pop
das
out
push
inc
insl
loopne
addb
nop
bound
jb
add
pushf
roll
adc
add
out
or
or
cld
push
dec
add
imul
hlt
addb
mov
enter
pop
popf
and
push
test
add
inc
mov
gs
aas
inc
subb
mov
add
mov
xor
sub
int3
arpl
andb
cmp
mov
dec
cmp
ja
jp
add
insl
cli
add
xrelease
and
xchg
xchg
and
add
insb
mov
push
cmp
add
lock
add
lret
fmuls
and
push
lds
fnsave
mov
push
xor
mov
jge
popf
daa
in
add
mov
sub
xchg
add
mov
dec
add
mov
sti
rolb
cmp
add
outsl
inc
xor
mov
push
in
insl
pop
das
fiadds
push
xchg
push
fwait
cpuid
inc
pop
sub
rorb
adc
and
icebp
hlt
push
mov
call
add
mov
xor
in
mov
aad
adc
jne
popa
xchg
mov
faddp
stos
lcall
mov
sti
mov
adc
lods
aam
mov
sub
add
repnz
add
or
ss
daa
movsb
cmp
sti
out
rolb
test
add
or
jmp
cmp
inc
insb
xor
movl
insl
xchg
mov
push
lods
add
inc
rorb
fcoms
insl
add
adc
cld
adc
add
ss
in
mov
sub
xchg
je
cmp
xchg
in
and
mov
add
outsb
pop
xchg
scas
rcrb
and
ret
pop
fistpll
imul
scas
jg
mov
fwait
inc
mov
lret
xchg
test
out
fdivrl
push
mov
mov
rcrb
add
mov
mov
xchg
pop
add
pop
insb
pop
push
pop
add
enter
mov
lods
add
dec
mov
add
outsb
mov
aas
add
mov
imul
andl
push
add
outsb
mov
les
push
rcr
in
sub
add
aam
pusha
fsubrl
rorl
add
sub
outsl
lock
jg
jl
mov
rolb
or
rcrb
mov
add
in
sub
add
sub
mov
mov
add
sub
xchg
add
stc
mov
cwtl
add
vshufps
add
cld
rolb
fadds
add
sbb
aam
mov
jecxz
and
movsl
mov
xchg
mov
adc
nop
adc
lahf
add
jae
inc
jg
dec
arpl
sub
jne
push
push
dec
mov
mov
sub
sub
cmc
fs
add
dec
lcall
int3
jbe
iret
ficoms
jle
pop
adc
xor
mov
scas
mov
inc
push
mov
lds
pop
adc
les
inc
mov
sbb
jl
add
sub
xor
pop
hlt
add
lcall
roll
and
add
mov
and
pop
sbb
inc
cmpb
cmp
sub
jge
add
push
int3
cmpsl
pop
xor
pop
das
lret
shrl
cld
enter
push
les
lods
add
dec
jmp
pop
add
add
stos
dec
pop
rcrl
cmpb
or
aam
out
popf
sub
cmp
push
add
jge
fisttpl
cltd
mov
popa
scas
add
mov
sub
add
inc
and
add
pop
push
jle
and
js
jo
jo
push
inc
and
rolb
adc
insl
fimuls
mov
add
cwtl
xchg
test
xor
sbb
add
lret
add
push
mov
sbb
push
jl
cmp
int3
cmp
cld
pop
cmp
add
sbb
push
mov
imul
sbb
testl
mov
mov
cmpsb
lods
in
xchg
roll
sub
aam
pop
rolb
xchg
cmp
hlt
mov
jmp
dec
out
stc
dec
imul
jae
add
dec
lcall
add
mov
scas
loop
ds
adc
mov
cmpsb
sub
ljmp
sbb
xchg
jno
push
mull
rclb
adc
cmp
sti
mov
pop
add
xor
jge
pop
rcrl
iret
push
out
or
lock
mov
add
lds
add
add
or
fdivrs
pop
cli
out
sub
jnp
add
push
jl
lcall
roll
xor
pop
dec
jmp
and
xor
push
add
cmp
add
out
pop
xor
mov
add
out
dec
daa
cmp
inc
mov
inc
ret
ja
in
xchg
in
mov
push
add
jl
pop
lret
jecxz
xchg
add
arpl
push
add
jo
fistps
loopne
xor
xchg
imul
lods
push
or
add
les
add
movsb
pop
mov
pop
mov
subb
or
pop
inc
std
adc
sub
test
sbb
enter
cmp
cmp
jecxz
roll
rorl
inc
inc
int
add
push
mov
cmp
add
loopne
mov
add
xchg
sub
and
lcall
push
testb
gs
add
into
es
mov
sbb
adc
orb
cltd
xor
nop
push
pop
into
mov
sub
sti
mov
pop
popa
dec
xchg
les
nop
jg
sahf
adc
push
fildl
add
cld
das
shlb
popa
add
cmc
adc
add
cmpsb
dec
xor
arpl
jae
sub
cli
xchg
sbb
mov
push
jl
push
enter
jmp
jbe
push
gs
pop
jo
shlb
xchg
sub
aam
add
mov
add
fcoml
add
and
stc
adc
test
mov
repz
jbe
add
into
cmc
int
movsb
lods
add
sbb
inc
mov
gs
and
jmp
pop
enter
ret
daa
mov
add
and
pushf
lret
adc
add
add
enter
repnz
xchg
outsb
addl
pop
or
cmp
dec
inc
jnp
and
pop
sbb
roll
imul
jbe
data16
mov
mov
add
sbb
ret
sub
mov
add
dec
aaa
fistl
lahf
push
pop
mov
cwtl
cmpsb
lret
and
gs
push
ljmp
jecxz
cmc
mov
sti
add
xchg
lret
cmp
aam
push
inc
adc
out
insb
jp
adc
outsb
pop
add
ljmp
add
dec
jne
aas
xchg
add
mov
add
fcmovbe
mov
or
int3
add
or
add
jnp
in
lods
in
dec
dec
pop
add
addr16
jnp
mov
call
test
add
f2xm1
pop
mov
inc
outsl
or
movsl
dec
aaa
add
sbb
repz
push
inc
scas
lock
mov
in
sti
add
loop
scas
jecxz
dec
sbb
inc
pop
out
popa
pop
push
lock
addl
testl
push
add
test
icebp
sbb
imul
pop
pushf
mov
repnz
inc
fiaddl
xor
push
sub
pusha
lahf
inc
mov
pop
pop
es
dec
mov
mov
repz
push
mov
add
push
loop
add
fsubrl
and
lea
into
add
jae
ficoml
dec
adc
orl
mov
pop
and
add
mov
push
push
fistl
es
add
sub
je
add
dec
fstpt
dec
inc
jmp
mov
jl
das
data16
dec
add
jecxz
fs
add
xchg
sbb
xchg
imul
aad
jnp
inc
jb
add
popf
jmp
push
xor
add
inc
sbb
dec
mov
sbb
aas
inc
xlat
xchg
hlt
add
push
test
sbb
imul
ds
mov
jle
cltd
mov
or
jmp
iret
xorb
push
jle
cmp
mov
sbb
add
repz
push
stc
shlb
xlat
add
jb
push
imul
stc
divl
add
lea
xor
adc
in
push
mov
test
popa
inc
cli
imul
dec
das
push
jnp
xchg
add
popa
dec
fwait
sbb
roll
fdivrp
out
lods
and
mov
adc
pop
xor
test
lea
shl
push
fcoms
and
push
scas
add
adc
push
roll
test
mov
fadds
rcrl
xchg
sub
add
ljmp
xchg
cmp
cmpl
and
pop
repnz
inc
out
add
lea
or
inc
cli
xor
add
lret
les
jecxz
xor
imul
fwait
add
pushl
adc
call
add
mov
jmp
out
xchg
add
sbb
mov
add
pop
or
add
in
rorb
and
imul
add
enter
pop
test
std
xor
loopne
les
push
sub
add
pop
xchg
rclb
addl
add
lea
add
push
dec
pusha
push
jge
sbb
scas
je
out
cli
jbe
add
leave
xor
add
adc
add
es
cld
hlt
lea
dec
clc
cs
and
or
sub
test
lock
fucomip
int
jbe
lahf
cmpsl
add
jns
add
add
repnz
and
push
cmp
jg
out
add
lock
cmpl
add
or
ss
inc
jle
pop
xchg
and
or
sub
cvttps2pi
cli
push
int3
jae
add
mov
fprem
inc
mov
fdivl
les
xor
dec
ret
aas
push
add
fstpt
add
sti
movsb
or
cmp
mov
mov
add
fwait
je
xchg
mov
cmp
mov
in
lock
jge,pn
addr16
lods
push
jno
dec
shl
sub
cwtl
pop
add
outsb
sub
mov
adc
push
add
in
cld
pop
sbb
insb
add
pop
mov
orl
mov
add
add
rolb
xor
dec
gs
inc
jmp
jne
nop
sub
lahf
add
movsl
imul
adc
mov
rolb
xrelease
cmpsl
xchg
pop
jbe
cmpb
cwtl
pop
add
jg
push
mov
xor
dec
xchg
push
dec
mov
movl
fistpll
int3
sbb
jecxz
jbe
repnz
add
jle
xchg
add
mov
push
xor
mov
add
iret
jnp
xlat
push
pop
in
nop
lds
clc
or
lea
mov
dec
sub
or
inc
push
dec
addb
aad
dec
xchg
rclb
jecxz
enter
add
roll
mov
out
adc
pop
mov
jmp
mov
adc
pop
cmpsl
fldl
sbb
inc
sub
cld
add
sub
lret
aam
cld
inc
sahf
inc
loope
dec
inc
rolb
les
jne
add
std
scas
xor
mov
mov
pop
es
imul
jecxz
add
sub
mov
jae
hlt
sub
pop
add
nop
inc
loop
fbld
pop
xchg
and
or
add
add
xchg
mov
loope
jns
add
adc
adc
pop
pop
mov
mov
cmpsb
and
call
cmp
mov
mov
inc
adc
add
mov
inc
shrb
and
test
xchg
cwtl
je
add
add
aaa
xor
ds
in
cmpb
rorl
data16
add
inc
mov
add
lods
addb
cli
push
add
xor
iret
or
inc
popa
stos
icebp
scas
add
and
out
fidivl
popf
incb
cmp
cwtl
js
je
add
jge
rolb
dec
pop
inc
das
out
mov
pop
jl
ss
roll
ja
or
test
cmpsb
test
adc
jle
push
movsb
mov
mov
or
out
mov
mov
out
push
jp
imul
out
sbb
movsl
mov
push
xor
test
inc
add
pop
pop
test
sub
out
sbb
shrb
gs
pop
add
or
test
jae
data16
ret
inc
jne
btr
xor
jp
add
fisubrl
adc
add
stos
lds
inc
cwtl
loop
out
add
cld
in
lahf
outsl
cmpsl
add
movsl
incl
inc
in
jnp
add
or
push
jae
fmuls
cmp
add
or
adc
aad
mov
cmp
sti
jecxz
sbb
pop
movsb
add
mov
bound
out
pop
xchg
pusha
mov
add
add
pushf
inc
mov
and
and
mov
inc
cmp
js
fisttps
pop
cli
add
sbb
addl
mov
icebp
clc
xor
pand
jmp
movsb
push
add
jne
push
ret
fistpl
jl
loop
daa
pop
repz
jg
scas
push
out
inc
add
das
dec
dec
in
fidivrs
push
xchg
imul
rcll
sbb
lock
push
jge
bound
cltd
rclb
ds
add
or
out
push
sahf
cmp
out
int3
mov
xlat
mov
lock
arpl
stc
cmp
jnp
mov
xchg
push
lret
add
dec
inc
xchg
or
xchg
lea
inc
push
pop
xor
mov
std
xchg
add
daa
lcall
or
sbb
add
dec
pop
cmpsl
stc
addb
in
adc
add
xchg
movsb
xor
add
add
ss
inc
loope
nop
cmp
idivl
sub
aam
cmpsb
pop
enter
imul
add
test
pushf
out
push
lds
add
popf
jo
mov
sub
les
or
insl
mov
and
pop
jge
repnz
mov
lea
movsl
xlat
insb
inc
mov
add
add
cs
jo
push
add
popf
xor
adc
inc
and
or
dec
rolb
pop
mov
cwtl
wrmsr
mov
or
xchg
add
or
mov
push
sbbl
add
cltd
inc
decb
lds
out
das
inc
fadd
orb
test
add
outsl
clc
int
out
adc
insb
ss
loope
jmp
add
mov
ss
jle
sub
push
imul
movsb
cmc
push
sub
inc
sbb
add
mov
jge
std
push
int
or
sbb
mov
xchg
scas
push
push
ltr
cs
sbb
push
add
out
and
ret
pop
enter
add
js
pop
add
sub
mov
inc
test
xor
add
mov
ret
adc
add
sbb
jae
push
mov
int3
adc
sti
and
sbb
dec
inc
add
xlat
cmp
arpl
mov
xchg
insb
out
scas
bound
and
into
addr16
mov
cmp
dec
add
cli
and
out
setno
jle
add
add
jmp
mov
inc
adc
cmc
movsl
add
push
stos
xor
sbb
mov
daa
js
add
jne
ljmp
pop
sbb
inc
jae,pn
push
pusha
jecxz
imul
sbb
test
jae
popf
add
pop
pop
faddl
push
jo
lcall
mov
pushf
les
add
dec
push
pop
aas
fmuls
sahf
ffree
les
cmp
push
add
pop
mov
add
into
andb
fwait
pop
add
mov
fsubrs
in
fmull
ljmp
stos
pop
or
add
call
mov
mov
icebp
por
xchg
fwait
andb
mov
add
repnz
inc
mov
scas
add
pop
or
loopne
adc
lods
enter
xchg
rolb
fadds
mov
fcmovbe
xor
mov
les
push
int
add
pop
and
add
xor
add
sub
mov
fs
pmaxub
inc
push
dec
cmpsl
pop
pushf
ja
cmp
mov
lock
jmp
daa
xor
and
test
xorl
enter
add
mov
sub
fisttps
les
add
adc
jnp
mov
int3
je
leave
movsl
adc
adc
outsl
inc
inc
cwtl
clc
sub
adc
xor
ffreep
inc
lods
cmp
add
and
jo
pop
add
jae
sbb
rclb
rclb
fstpt
mov
add
imul
and
xlat
jo
arpl
mov
lcall
addl
fsubl
xchg
stos
inc
add
push
dec
insl
add
inc
add
out
xlat
out
add
stos
push
xor
xchg
add
adc
add
ret
scas
mov
insb
pop
sbb
outsb
fidivrl
push
lock
mov
push
jl
add
sub
arpl
addr16
push
mov
mov
add
iret
jle
adcb
outsl
add
sub
jl
frstor
enter
shll
sbb
jo
mov
cmp
lret
add
mov
cltd
add
add
add
add
jl
outsl
imul
mov
enter
inc
negb
cli
add
dec
add
shl
sbbb
lds
lret
mov
lcall
push
popf
mov
ret
or
add
div
and
gs
popl
stos
aas
clc
in
pop
vpsubb
xor
jno
mov
mov
outsb
scas
sbb
je
add
out
cld
loop
fldl
cli
sub
js
imul
in
je
or
sahf
jno
sub
add
lahf
inc
push
push
stos
jne
add
xchg
mov
jno
mov
pop
test
push
inc
add
jecxz
sub
xor
test
mov
dec
adc
mov
dec
push
add
xchg
xlat
pop
stos
or
add
pop
inc
dec
sub
mov
movsl
adc
dec
ret
leave
inc
inc
int3
int3
nop
scas
in
add
sar
ss
cmp
lods
add
jecxz
add
pop
and
gs
fs
add
sub
test
sbb
add
popl
in
pop
add
sub
or
incb
out
push
fisubl
faddl
add
jecxz
pushf
push
sbb
nop
and
and
cltd
mov
adc
mov
lds
mov
jmp
arpl
es
push
xchg
add
sti
in
push
push
cltd
add
andb
add
add
push
sarb
add
jle
daa
sub
mov
inc
mov
pop
outsl
sub
mov
jo
pop
sub
push
sbb
pushf
mov
jo
jg
stc
add
scas
stos
push
nop
mov
or
mov
xor
sbb
insl
mov
add
and
loop
sahf
scas
rep
mov
dec
outsb
add
push
pop
shrl
int3
add
push
inc
dec
mov
icebp
aas
add
loope
filds
mov
iret
add
repz
pop
in
lods
leave
adc
cld
add
cmpsl
add
mov
mov
out
add
test
ret
jl
add
negb
add
pop
in
std
add
dec
xor
mov
add
push
inc
movsb
xor
pop
stc
add
ss
mov
push
or
inc
out
mov
cmp
sub
imul
test
pop
cld
loopne
add
add
rolb
lods
xor
cld
test
push
xor
mov
mov
outsl
cli
addl
or
test
inc
rorl
or
das
jo
cmpb
stos
test
div
push
add
subb
add
out
push
cmp
aam
cmp
roll
sub
fwait
mov
out
loopne
out
inc
sbb
and
push
cld
add
bnd
fbstp
sbb
jmp
adc
imul
xorb
mov
fwait
scas
gs
sub
add
repz
int
mov
pop
xor
mov
add
bound
xor
xorb
jne
adcb
inc
mov
add
fiaddl
popf
cmp
int3
add
mov
aam
add
push
movsl
push
call
lahf
inc
adc
in
push
aad
pusha
xchg
test
insb
pop
mov
add
iret
jge
and
pop
add
add
int
and
in
xor
out
xchg
je
and
rclb
mov
arpl
cmpb
addb
pop
or
out
roll
lods
into
cmp
pop
mov
out
jge
adc
xlat
push
pop
out
shlb
push
sahf
jp
ret
xor
imul
cmovne
test
mov
add
xchg
pop
jae
lods
add
dec
adc
cmp
inc
add
mov
int
add
pusha
rcrb
and
pmaxub
xchg
cltd
cs
xchg
sbb
data16
lret
cmp
in
add
xchg
outsl
sbb
call
mov
mov
lret
out
pop
inc
hlt
pop
enter
call
and
add
pop
xchg
xor
mov
cli
cs
mov
add
cmpsb
ds
mov
sti
fistps
push
addr16
push
in
iret
mov
add
mov
jbe
cwtl
xor
orb
dec
cmp
ds
fadds
nop
add
xchg
sbbl
add
orl
adc
and
pop
mov
add
nop
mov
lds
cs
cmpsb
inc
cmc
test
xchg
add
lcall
mov
pop
add
jne
fdivl
add
jecxz
or
add
rolb
pushl
or
inc
add
cltd
sbb
add
mov
xchg
rolb
pop
mov
sahf
sbb
imul
add
sub
in
add
mov
sbb
shll
lcall
add
and
out
loope
inc
cmp
shlb
push
aam
sub
jae
mov
not
loopne
test
cmpsb
fs
outsb
pusha
icebp
xor
adc
out
int3
data16
xchg
mov
sarl
inc
add
or
pusha
sub
push
and
fsubrs
pop
sar
outsl
adc
push
filds
outsb
pop
cmp
lds
getsec
dec
inc
dec
add
lret
adc
xor
pop
mov
rcl
lds
dec
int3
mov
mov
fldenv
test
sarb
mov
test
xlat
lret
loopne
sub
cmp
dec
jbe
and
or
add
sub
pop
add
adc
mov
fiadds
lock
dec
or
test
sub
xlat
sub
rcl
frstpm(287
aam
push
iret
jle
inc
popa
stos
lods
stos
or
add
cmp
imul
add
sub
loop
push
add
mov
mov
ds
xor
insb
inc
ljmp
xchg
outsl
mov
int3
add
lret
out
out
jmp
add
ret
aaa
mov
xor
xchg
add
nop
add
cli
testl
lds
mov
xor
dec
fiadds
fmull
lret
cmp
push
gs
js
filds
lahf
mov
sub
adc
add
pop
sarb
sbb
sarl
mov
mov
filds
test
jb
js
insb
add
xchg
dec
xchg
xor
lods
popf
fisubrl
push
add
inc
push
repz
push
fwait
ljmp
mov
stc
push
cld
sarl
andb
lods
out
jge
add
movsl
fwait
and
lock
push
ljmpw
hlt
inc
repnz
out
pop
dec
dec
xor
or
aam
add
into
xor
pop
add
sub
popa
xlat
test
ds
int3
cmpb
pop
add
lret
inc
cmp
add
push
lods
dec
cli
std
jo
add
add
pop
in
mov
xor
pop
ucomiss
and
adc
sub
in
mov
add
cwtl
add
push
out
cmpsb
add
sbbl
call
outsl
pop
nop
fnstenv
jl
jne
std
in
cltd
add
add
adc
xchg
cmpsb
xchg
pop
aaa
aas
cmp
jmp
mov
lret
mov
sbb
repnz
mov
inc
sbb
mov
out
sar
lahf
cmp
sbb
mov
fs
test
bound
sbb
mov
adc
lsl
pop
add
mov
inc
pushf
sub
push
scas
outsl
jb
dec
add
loopne
mov
jle
mov
imul
lods
int
jae
jp
add
mov
mov
push
fisubl
add
push
fildll
add
push
cmp
leave
mov
or
sti
mov
addb
imul
jb
jae
jne
add
sub
cltd
ljmp
mov
in
stos
inc
inc
call
push
jp
rcr
bound
xchg
lahf
out
adc
hlt
adc
add
decb
and
fdivl
mov
add
repnz
xor
in
dec
orl
sub
cmp
je
cmc
add
imul
adc
add
jo
hlt
dec
xchg
adc
cmp
xchg
sarl
jmp
addr16
add
push
aaa
fwait
unpckhps
test
out
in
cmp
xor
add
sbb
aam
xor
out
xlat
in
out
clc
xchg
cltd
add
leave
faddl
or
sbb
add
jge
call
add
jle
xor
mov
gs
inc
adc
xchg
fwait
jmp
int
mov
fldt
push
add
jle
push
add
call
adc
cmpsl
lods
cmp
add
pop
push
fldlg2
dec
sbb
add
dec
pop
and
ja
and
add
jecxz
or
lret
loope
add
sub
add
daa
push
mov
stos
mov
pop
rcrl
xchg
test
mov
fidivrs
mov
or
idivl
mov
jae
xchg
pop
add
pushf
fwait
icebp
add
jno
jbe
pop
fsubrp
add
test
add
mov
clc
fimuls
push
xadd
sub
xorb
inc
out
cld
cmp
movsb
xchg
add
push
jb
sub
xchg
mov
test
or
mov
sub
push
cmp
jne
scas
rdtsc
shll
jge
inc
pop
test
sub
fcoms
adc
cmp
sbbb
out
xchg
jge
and
dec
sbb
jp
xchg
bound
mov
and
mov
ss
sbb
mov
lahf
adc
sti
inc
out
cwtl
ss
cli
lods
sbb
xor
push
cltd
push
pop
cli
mov
add
std
jne
add
fstpl
sub
xor
add
mov
daa
add
dec
xlat
fldenv
mov
imul
mov
lock
xchg
adc
jae
add
pop
jecxz
popl
push
in
mov
jnp
pusha
adc
add
mov
inc
pop
sbb
in
xorb
cmp
ja
in
pop
xor
cmp
pushf
popa
add
inc
sahf
jo
mov
and
imul
hlt
add
mov
inc
lds
adc
inc
mov
pop
daa
or
das
adc
jnp
ja
add
idivl
insb
add
jg
xor
pushf
cwtl
cmc
call
scas
int3
cmp
movsb
mov
push
sub
xchg
add
add
push
xor
movsb
rolb
das
faddp
mov
mov
loopne
add
dec
bound
lock
add
aaa
dec
jg
inc
test
add
sub
int
inc
jo
xchg
pop
inc
test
addb
xor
add
pop
decl
pop
xchg
movsb
call
jmp
inc
ljmp
lea
push
jns
fsubl
lahf
cli
popf
sbb
lods
push
fdivrl
cli
dec
insb
dec
sti
sbb
mov
lods
stos
repnz
paddb
aaa
add
in
loope
rcrb
inc
push
test
sub
add
sub
add
pop
in
add
add
xchg
ret
cld
aas
sahf
rorl
pusha
enter
and
leave
cmp
push
and
loop
test
mov
ljmp
lods
add
dec
movsl
add
xchg
mov
push
lods
add
sub
lds
adc
es
xchg
call
xchg
pop
add
jo
nop
incb
arpl
add
mov
and
sbb
data16
inc
cmp
add
xchg
mov
iret
sahf
dec
test
or
mov
adc
pop
pop
mov
jg
mov
inc
rcl
clc
add
add
and
add
cmp
out
movups
inc
cwtl
loop
xor
sbb
outsb
lock
insl
cltd
jo
add
testl
inc
add
out
inc
test
cli
jo
pop
repnz
jmp
dec
mov
pop
mov
mov
add
iret
push
add
scas
pushf
cwtl
dec
mov
add
fwait
push
sti
mov
ret
lret
fiaddl
aam
fadd
mov
pop
add
ficompl
add
aad
pushf
pop
pop
xchg
or
add
push
out
stc
sbb
in
add
add
add
mov
sub
int
inc
pop
bswap
sbb
outsl
nop
mov
pop
in
mov
test
arpl
pusha
mov
fiadds
test
cmc
adc
lahf
fistps
cmp
cmp
inc
adcb
mov
or
xchg
add
arpl
add
out
pop
mov
add
mov
jno
lea
push
add
jbe
pop
mov
adc
lods
fdivrl
cmp
ja
lods
imul
push
stos
push
sbb
mov
mov
push
or
push
add
and
movsl
and
pop
and
pop
mov
add
faddl
bound
shlb
loop
ret
xor
sub
and
iret
add
xor
mov
sbb
jl
or
xor
popf
call
inc
push
cwtl
push
dec
add
pop
in
push
roll
in
out
nop
into
je
inc
cwtl
sub
scas
in
pop
ja,pt
add
cwtl
jl
mov
inc
int
iret
add
dec
xor
fs
pusha
movsb
add
lock
rep
stos
scas
sbb
push
hlt
idivb
xchg
pop
mov
cmp
pop
mov
out
insl
add
icebp
cmp
mov
ror
fcoms
cmp
lret
lds
add
and
push
out
sub
add
fsubr
rorl
test
add
loop
sbb
mov
dec
sbb
inc
cmpxchg
adc
in
and
sbb
outsb
loopne
std
sbb
ret
cmp
into
mov
cmp
xchg
xchg
push
add
xchg
sbb
dec
add
imul
mov
out
add
xor
cmp
popl
gs
xor
add
xlat
jb
aaa
mov
popa
rorb
xor
mov
add
mov
add
lahf
mov
add
ficoms
mov
pop
and
add
pushf
daa
gs
xchg
jnp
mov
stos
jo
mov
mov
jns
das
push
mov
add
sbb
jg
pop
gs
cmpb
fisttpl
dec
les
incl
xor
aaa
add
mov
in
add
movsl
push
scas
cltd
dec
ficompl
xchg
addr16
jnp
pop
pop
data16
repz
mov
add
std
sub
sub
mov
fldt
int3
inc
hlt
sub
adc
add
ds
and
add
adc
xchg
add
les
out
xchg
jbe
and
add
push
fidivrs
cmp
add
pusha
out
cmpsb
xor
fmull
xchg
and
test
cmp
into
rorl
xchg
movsb
mov
xchg
les
add
and
push
jmp
lods
jae
cmp
adc
mov
adc
and
ds
add
lock
fwait
jnp
push
mov
sbb
aaa
add
xor
add
adc
jle
mov
xchg
inc
ja
inc
jo
out
jp
adc
jmp
enter
je
add
push
movsb
repnz
stc
jle
mov
std
push
add
aaa
jp
jmp
stos
int3
or
adc
loopne
aam
mov
add
fwait
mov
xlat
cmp
and
mov
fiaddl
push
scas
dec
pop
inc
orl
call
ret
in
add
ljmp
lret
sub
xchg
push
dec
lock
je
add
and
fwait
pop
adc
pop
push
xor
fisttpll
addb
push
add
pop
icebp
jbe
jns
jle
jno
dec
aas
inc
mov
popf
loop
xchg
ss
mov
testl
push
loopne
cmp
arpl
sbb
lret
mov
and
add
sub
cmp
mov
sub
jecxz
xlat
fistps
in
lds
nop
mov
pop
push
in
add
xchg
rclb
cmpsl
test
adc
add
xor
mov
jb
sarb
push
adc
mov
in
rorl
ja
cmp
addb
or
lock
add
fisttps
push
mov
xlat
inc
andb
mov
mov
add
into
shll
xor
sahf
iret
lret
insb
push
ret
jbe
add
lahf
mov
roll
add
insl
sub
push
jns
add
inc
pop
add
movsb
mov
push
aam
fbld
add
push
cmovno
push
imull
stos
sbb
mov
add
inc
mov
out
lcall
arpl
jo
add
jbe
mov
add
jl
aad
or
mov
add
icebp
dec
mov
xor
ss
negb
push
or
clc
add
sarl
lods
jo
sub
andb
and
aas
lock
aas
loope
hlt
jp
add
push
jl
stc
or
mov
shlb
call
inc
out
aaa
inc
insb
ljmp
cmpb
ficoms
or
add
xor
sub
dec
xor
add
mov
filds
cmp
inc
ret
jp
adc
mov
in
ss
xor
imul
xor
dec
mov
insl
add
leave
shll
fiadds
inc
sti
nop
popa
or
lods
mov
pop
inc
add
scas
aas
roll
sbb
arpl
insl
add
push
fwait
jo
inc
adc
je
add
adc
aaa
ljmp
movl
xchg
dec
sbbl
sbb
not
fbstp
dec
add
pop
dec
cmp
pop
add
incb
sbb
iret
outsl
addb
mov
dec
popl
imul
test
jne
add
movl
rolb
sub
repz
nop
sbb
adcb
ficompl
testl
rorb
pop
rorl
inc
xchg
mov
cs
add
ss
rcrb
fs
add
fwait
cwtl
js
jmp
aad
mov
add
dec
push
pusha
shl
repz
es
sub
scas
jne
and
je
les
and
popf
scas
adc
das
sbb
and
jns
add
jp
xchg
test
dec
jle
cmp
dec
jge
test
inc
xorl
call
mov
cmp
inc
jae
or
inc
push
mov
add
dec
jmp
dec
dec
add
dec
inc
mov
push
fs
jne
subb
in
lods
std
cmp
pop
or
xor
push
movl
js
pusha
sub
mov
sbb
int
out
mov
je
add
push
mov
lret
roll
lret
pop
xchg
rcll
scas
jae
add
sbb
fisttpll
or
pop
push
sub
rolb
cmp
cld
adc
mov
or
out
mov
cli
add
inc
and
push
and
push
add
in
insl
jle
add
pop
out
mov
outsb
popa
lds
mov
jbe
je
cltd
pop
mov
sub
pop
add
xchg
dec
or
jb
add
sub
push
cmp
rcll
add
xchg
imul
inc
imul
jo
addb
cltd
jnp
in
enter
sub
add
push
mov
lret
popf
and
add
mov
fs
jae
repnz
lcall
cvtps2pd
fnstsw
push
mov
inc
add
out
fadds
lock
je
out
jg
mov
test
mov
cwtl
inc
push
and
out
in
negb
inc
or
and
push
pop
push
lods
or
aas
add
dec
pop
scas
insb
stc
xchg
aam
push
add
pop
jecxz
cmp
adc
push
mov
nop
add
in
iret
sub
lea
test
add
and
repz
jg
out
pop
push
or
inc
lret
cmp
mov
cwtl
out
fstl
in
testb
and
push
pop
mov
addl
loop
sti
cmpsl
clc
pushf
cmc
ret
bound
dec
push
shrb
mov
jne
mov
es
lods
loope
sahf
leave
subb
push
jge
movsl
movsb
cs
xorb
xor
and
lahf
xor
cmpsb
icebp
testb
push
iret
imul
insl
xchg
ret
add
stos
cmpsl
je
push
mov
push
jecxz
cs
shl
sbb
icebp
dec
jmp
stos
int3
test
out
pop
fiaddl
orl
nop
xchg
dec
cmpb
cmp
push
flds
pusha
fdivl
cmp
vmovupd
dec
incb
fwait
pop
into
xor
add
and
popl
mov
sbb
sub
xchg
dec
aad
adc
mov
int
dec
or
mov
pusha
loope
mov
adc
mov
in
test
mov
jno
rolb
jle
ret
add
push
gs
xchg
lss
cmp
xchg
jo
inc
add
mov
add
ljmp
add
and
mov
xlat
add
jnp
inc
add
lahf
jb
add
adc
in
sub
fcmovb
dec
pop
or
adc
cmp
fisubs
arpl
adcl
mov
cltd
test
jecxz
in
pop
jo
add
or
dec
add
mov
iret
scas
lods
loopne
insl
mov
pop
add
bound
dec
cmpsb
js
mov
mov
mov
push
add
or
gs
add
cld
je
jo
jnp
in
aaa
cli
adc
out
pop
pop
xor
adc
xchg
and
into
pop
loop
mov
push
adc
lret
jnp
sbb
sub
dec
fildll
cwtl
add
add
adc
in
adc
push
xor
rcr
cmp
pop
add
sbb
shl
sarl
push
mov
xchg
cmpsl
cmp
adc
cli
popa
jg
sbb
lret
cwtl
mov
je
sub
ret
xchg
add
xchg
sbb
dec
outsl
orb
inc
scas
dec
xor
in
mov
andl
sbb
add
xchg
xorb
add
daa
and
push
iret
jns
xchg
push
mov
xchg
xchg
fdivl
add
stos
int3
data16
in
test
cli
rcrl
dec
add
cmpb
rolb
je
fs
in
add
aam
pusha
sub
add
cmc
adc
push
insl
xor
sbb
lcall
inc
add
sub
repz
xchg
stos
adc
xor
roll
dec
and
push
enter
fdivr
adc
jns
and
inc
je
hlt
push
addl
xor
pusha
add
mov
sub
mov
fwait
add
insb
xchg
xchg
add
orl
fwait
test
pop
mov
daa
xchg
into
cmp
pop
sbb
mov
mov
xor
dec
mov
cmp
iret
orb
mov
or
lea
and
pusha
aaa
stc
pop
insb
clc
xchg
xchg
je
in
cmp
pop
dec
xchg
jl
add
in
mov
fwait
gs
and
pop
test
sbb
mov
sti
aaa
loopne
loope
dec
add
stos
das
hlt
add
js
lods
cld
pop
sub
pop
test
les
dec
mov
mov
cmpsl
add
lea
xor
and
shll
or
add
out
add
add
insl
jl
or
mov
call
mov
ss
push
xor
ja
inc
lahf
mov
jb
add
addr16
js
mov
mov
inc
mov
dec
push
insb
outsb
jge
sub
sbb
or
add
insl
loopne
mov
add
sbb
mov
fisttps
roll
jecxz
loopne
subb
mov
loope
mov
push
inc
mov
jge
add
out
add
cmp
push
mov
cwtl
out
movsl
mov
sti
shl
sbb
fsts
pop
push
inc
popf
jmp
push
xor
add
lret
ret
pusha
jecxz
negl
dec
or
sahf
pop
or
in
mov
jb
fadd
inc
push
pop
xchg
filds
insl
sub
push
mov
and
add
loopne
mov
jbe
add
cmp
add
inc
xchg
aad
mov
enter
add
dec
pop
mov
add
sahf
out
data16
inc
pop
adc
gs
idivb
aad
add
inc
cmpsl
or
pop
inc
cmc
sahf
xchg
lret
mov
pusha
xchg
or
nop
cmp
mov
xchg
dec
mov
jg
cltd
mov
loopne
add
divl
lcall
sub
nop
add
into
jg
movl
or
add
push
repz
add
push
lock
mov
add
in
xchg
adc
jo
add
or
cmp
or
jge
add
mov
pop
aam
insl
and
sahf
int
add
jecxz
mov
adc
adc
cmp
scas
add
in
out
add
es
cli
push
or
testl
sub
jo
clc
bound
adc
fldl
pop
sbb
loop
js
ja
out
and
jle
pminsw
inc
add
pop
aad
push
addl
sub
fs
je
fcmovne
shl
enter
lods
mov
push
push
aaa
imul
popa
cmp
ret
lret
insb
cmp
mov
sarl
add
dec
inc
inc
cld
push
aad
add
and
push
adc
fs
mov
popf
add
insb
jp
out
popa
loope
push
cmp
add
adc
mov
sbb
jb
out
das
jl
adc
pop
jle
add
inc
enter
xchg
dec
add
out
in
add
or
pop
jnp
sti
cmp
aas
lahf
loopne
rorl
insb
addr16
loopne
inc
cmp
das
mov
dec
jmp
xor
push
sbb
aam
pop
stos
test
test
cltd
out
sti
xor
shl
jg
repnz
in
xchg
add
popf
test
jge
nop
movl
sub
or
pop
mov
add
add
loopne
stos
cmp
add
and
nop
mov
jmp
stos
mov
cmp
test
xor
add
mov
cmpsl
push
fimull
jnp
dec
sbb
lret
xor
sbb
mov
gs
dec
xchg
adc
lahf
imul
stc
xchg
test
into
add
push
sbb
add
cmp
out
lock
dec
add
jae
push
push
es
xchg
cs
arpl
ficompl
xorb
lods
in
add
jecxz
inc
mov
and
xor
add
fcompl
jbe
inc
add
hlt
jmp
add
or
sub
fwait
scas
xor
inc
mov
mov
outsb
sub
push
test
je
rcrl
add
inc
add
dec
call
cmp
pusha
inc
daa
sub
jb
lock
cmc
inc
sahf
sub
cmp
xchg
jg
std
pop
or
push
repnz
and
in
add
movsl
fimuls
fadd
std
inc
jo
stc
add
repnz
add
inc
cmp
mov
add
aaa
pop
fistpll
sarl
jnp
ss
add
pop
pop
mov
add
jge
push
fs
mov
adcl
lahf
fcmove
xchg
add
or
mov
dec
iret
mov
dec
call
adc
fmuls
adc
lock
jp
mov
add
push
mov
pop
jmp
mov
sub
scas
mov
jp
sub
add
inc
push
lods
loop
je
add
loope
adc
test
mulb
xchg
imul
lock
add
adc
add
xchg
leave
daa
ds
call
jbe
popf
mov
out
out
sbb
lock
push
mov
loopne
cmp
add
cwtl
hlt
fisttpll
pop
gs
out
cltd
addl
dec
dec
jbe
pusha
in
push
mov
jge
ljmp
addb
push
cli
inc
add
and
jge
add
outsl
mov
fcomps
xor
movsb
fs
add
cmp
push
or
lcall
mov
ficoms
das
lahf
fmull
push
xor
dec
inc
movsl
push
jns
mov
mov
cmpsl
jne
add
bound
sub
cmp
movl
sub
sar
mov
sub
add
test
pop
jmp
mov
mov
mov
pop
mov
xor
add
adc
test
in
out
sarb
xchg
xor
xor
lcall
aad
lret
aas
mov
jge
movsl
ljmp
jecxz
test
inc
xchg
pop
adc
mov
inc
or
mov
dec
stos
movsb
add
sbb
sub
and
ja
jnp
and
xchg
xchg
fwait
xchg
iret
and
mov
lods
sub
push
sbb
mov
dec
nop
push
add
add
xchg
fisttps
or
andnps
outsb
ljmp
cmp
fldt
pusha
cmp
addl
jmp
add
mov
fisubrs
add
dec
mov
mov
dec
insb
mov
push
pop
add
mov
mov
add
cmp
add
cmpsb
popa
push
cs
jp
add
sub
cltd
jae
and
test
test
aad
pop
jns
add
adc
mov
jle
in
stos
dec
daa
lcall
ja
cmp
mov
in
mov
inc
js
pop
xchg
andb
movsl
add
xorb
aaa
cmpsl
cmp
jns
and
pusha
xchg
outsl
in
mov
cli
sbb
pop
incb
data16
loopne
push
lods
jns
sarb
orl
mulb
js
add
pop
lret
xchg
imul
add
and
inc
cmp
jns
sbb
push
pushf
sahf
int
pop
lret
mov
aam
lock
pop
sub
or
in
pop
je
add
lret
sub
leave
jno
iret
add
pop
repnz
mov
sbb
hlt
ja
lds
sub
jp
jb
sub
stos
pop
clc
cmpsb
rcrl
jg
pop
ja
add
pop
push
or
fstpl
jl
adc
aaa
pop
mov
lahf
dec
push
jge
and
dec
mov
add
jno
rolb
sub
ss
add
out
jle
xor
fistpll
cli
cmp
or
test
mov
ljmp
stc
mov
stos
add
outsl
call
sbb
xchg
xchg
lcall
pop
popa
push
test
mov
sbb
in
addl
fidivrl
cli
es
std
out
jl
pop
pusha
add
out
test
cmp
rorb
add
in
insb
addl
mov
inc
sbb
pop
sahf
fldt
add
jmp
out
jae
js
outsl
jecxz
mov
psubusw
sbb
cmc
mov
lock
and
fstpl
mov
add
fists
out
xorl
or
aam
cmp
enter
sub
pop
cli
popa
mov
add
repnz
out
in
and
adc
fwait
outsb
cmpsb
cmp
cld
or
sub
fadds
lods
sbb
arpl
lahf
shlb
add
mov
mov
and
dec
and
add
shl
test
insl
mov
inc
xchg
or
add
sbb
push
out
in
push
add
inc
sub
push
add
push
xchg
jbe
rcl
lret
clc
jl
popa
lcall
jae
je
std
add
iret
dec
mov
jb
dec
fiaddl
pop
inc
jecxz
push
scas
ffree
add
jg
das
cmp
insb
add
data16
stos
in
cwtl
adc
xor
incb
xchg
sbb
sub
push
add
jae
add
add
add
dec
inc
dec
mov
loopne
cs
movlps
mov
push
mov
aam
sub
pop
ds
jp,pn
push
add
imul
stos
push
mov
int3
std
jl
pop
dec
pop
jmp
stos
jmp
pop
mov
shlb
jg
js
or
jp
out
test
hlt
das
fimuls
aad
cmc
cmpsb
lock
mov
iret
xchg
push
inc
jg
mov
add
call
mov
scas
stos
pop
outsb
pop
insl
push
lcall
add
dec
or
out
in
or
call
ja
inc
jae
xor
pop
mov
lea
xchg
dec
adc
imul
mov
and
and
insb
mov
pop
add
xor
out
mov
add
xchg
and
mov
ds
jae
imull
and
jecxz
and
jge
test
loop
xor
cmpsb
clc
aas
add
int3
pushf
inc
xchg
rcl
flds
or
shl
dec
mov
fiaddl
es
repnz
mov
pop
call
push
add
add
push
or
loopne
or
inc
pushf
test
nop
popa
pop
daa
je
sar
lock
and
mov
fadds
mov
int3
je
sub
test
xor
push
add
insl
add
mov
stc
out
cmpsl
lret
and
add
addr16
pop
hlt
std
add
sub
or
das
push
add
mov
mov
daa
and
lods
cltd
bound
jbe
cmp
aas
fsts
mov
pop
fs
lea
and
addr16
pusha
mov
jecxz
sub
push
lods
push
sub
adc
loop
jmp
add
dec
sub
push
pop
add
inc
fs
jl
ds
adc
add
mov
push
stos
fisttpl
or
repz
sub
mov
mov
in
sbb
mov
ljmp
dec
ficoml
or
mov
cmpb
std
shll
or
fs
mov
push
imul
rcrl
pop
in
add
add
mov
add
xchg
cmpps
inc
add
push
jge
add
and
cld
loope
add
fprem1
adc
fwait
cmp
mov
fcoml
dec
mov
add
mov
jle
cmp
sub
insb
rolb
or
out
inc
lock
fcoml
jl,pt
mov
aad
scas
xchg
xor
or
cmpsl
fwait
push
test
add
std
mov
xchg
clc
mov
in
call
mov
aas
mov
lcall
sahf
cmp
pop
xor
ds
ja
outsb
bswap
aam
bound
and
iret
loopne
mov
sub
push
shl
imul
inc
mov
jg
aas
add
sahf
adc
stc
push
mov
add
sub
lea
pop
add
ret
push
fsubp
rclb
mov
xchg
mov
test
adc
inc
or
jp
aam
add
mov
icebp
jecxz
loopne
and
pop
add
pop
jne
or
fwait
jnp
addl
iret
insl
test
test
shlb
outsl
mov
andb
add
push
call
jl
aam
test
loope
stc
lods
push
lahf
jl
add
ss
xchg
ds
mov
inc
dec
add
add
xor
es
cmpsb
jmp
or
sbb
lock
mov
out
and
in
cmp
push
insb
push
jmp
and
add
sub
ja
pop
add
push
fidivrl
add
xchg
cli
gs
fcompl
add
xlat
inc
mov
add
jnp
mov
inc
jmp
loop
or
jo
inc
and
daa
jle
loopne
push
pop
add
arpl
xchg
insl
mov
fwait
pop
inc
addl
lahf
xorb
mov
clc
push
jae
movb
pushf
test
add
mov
add
ret
dec
mov
maxps
fs
xchg
push
push
push
xlat
add
sbb
push
stos
push
out
mov
dec
mov
mov
mov
and
add
lret
mov
jg
cmp
push
push
sub
dec
shr
jae
in
stos
add
mov
rol
adc
pusha
add
test
cmp
xor
add
stos
mov
jmp
imul
adc
jp
pop
cmp
sbb
inc
test
loopne
addr16
cmp
lret
sub
je
add
jns
xchg
cmpsb
and
push
popa
pop
push
scas
push
setne
add
cmp
or
shl
and
imul
movsb
enter
in
cmpsb
mov
lods
dec
xchg
xchg
cld
xchg
add
int
insb
ret
inc
sub
add
insl
imul
stos
inc
and
std
sahf
pop
add
jbe
fildl
scas
jae
sub
add
xchg
sbb
pusha
and
sub
insl
sbb
fimuls
dec
push
mov
je
shrb
aaa
test
mov
shrd
fs
fnstsw
add
sub
xor
mov
add
mov
add
fwait
leave
scas
aad
xchg
flds
divl
push
das
cs
cmp
lret
test
mov
fisubl
std
pusha
in
push
dec
add
call
xor
add
jno
arpl
dec
fs
mov
mov
push
lock
mov
test
fdivrl
dec
cltd
clc
add
add
add
ret
fiaddl
jle
pop
pop
jge
add
int
arpl
xlat
jae
cmp
lea
out
mov
mov
push
and
aaa
pop
cmp
push
rcll
xor
stos
inc
into
test
ss
cmp
lcall
add
pop
mov
jmp
jns
repz
push
jo
aas
add
sbb
xlat
mov
xor
sub
or
test
repz
or
test
mov
xor
out
clc
pop
dec
js
add
adc
gs
in
mov
je
adc
add
dec
out
add
sbb
cs
mov
sub
test
arpl
cmp
adc
outsl
sbb
cld
add
adc
dec
jns
add
inc
dec
bound
daa
sub
xor
rorl
xlat
and
sbb
and
add
push
cmp
sbb
xchg
rolb
arpl
test
add
sbb
iret
hlt
mov
or
xorl
dec
bnd
dec
nop
add
pop
xorl
add
mov
ret
xchg
rorb
xor
lods
sahf
int
imul
add
test
inc
sub
in
add
pop
cmpsl
inc
sbbb
xchg
push
or
jge
mov
loopne
inc
cmp
repnz
xor
shrl
lds
and
lods
push
xchg
test
leave
inc
daa
inc
aam
out
sbb
sub
mov
outsl
jnp
add
sbb
add
arpl
mov
mov
adc
add
xor
mov
les
add
out
aas
and
cmpsl
out
dec
add
mov
add
loope
cwtl
adc
push
fwait
add
fidivs
mov
xchg
ss
sbb
cmp
mov
lcall
add
mov
les
adc
lcall
je
push
les
cmp
mov
jg
stc
cmpsl
jno
mov
pusha
fstps
hlt
pushl
adc
push
lods
xor
dec
cmp
lock
mov
stos
jp
js
inc
jmp
add
add
push
fs
add
ja
or
add
pop
cld
roll
push
push
xchg
push
mov
jle
or
jmp
test
outsl
cmpsl
insb
push
adc
and
fs
sbbl
add
outsl
dec
lock
aaa
shll
add
fstpt
incl
sbb
add
and
inc
in
aam
pop
add
mov
je
js
add
adc
outsl
dec
cli
popa
add
xor
test
mull
imul
jp
arpl
pop
xor
cmpsl
add
repz
add
lret
xor
mov
push
mov
rcll
push
jle
xchg
push
jo
jnp,pn
add
add
adc
pop
lock
fwait
sbb
mov
mov
fst
and
lds
pusha
and
sub
adcb
mov
jne
pop
push
mov
xchg
push
fsub
lock
sub
xor
mov
outsb
aam
add
loope
scas
adcb
add
dec
xchg
out
test
enter
fiadds
outsl
push
clc
fwait
add
cwtl
adc
add
test
jmp
imul
push
xchg
fcmovnbe
scas
pop
in
jnp
in
addl
int3
mov
cwtl
out
add
sbb
sub
xchg
in
dec
xor
pusha
insb
gs
add
and
mov
fidivl
mov
xlat
ss
push
fadds
inc
scas
mov
jmp
ds
sub
xchg
roll
and
std
sti
dec
ss
pop
clc
lret
aas
mov
andb
inc
popa
add
mov
jmp
cld
mov
sbb
push
cmp
cmc
push
cld
str
aam
clc
add
mov
dec
lret
mov
cmp
sub
sar
in
cmp
push
sbb
add
mov
sub
push
cld
pop
xchg
add
roll
add
mov
aas
fadds
mov
bound
lds
xchg
mov
and
lgs
add
jns
xlat
xchg
or
in
aam
mov
adc
cmp
movsb
add
cmp
imul
add
or
nop
fmul
jecxz
lea
jbe
adc
test
pop
subb
aas
cmc
or
fadds
adcb
jno
lds
or
add
mov
rcrb
add
jecxz
in
rclb
sahf
pop
pop
adc
in
mov
and
adc
sub
cmpl
test
les
adc
dec
testb
sub
add
nop
fsubrp
cmp
mov
mov
hlt
push
add
cs
jb
mov
add
adc
adc
push
add
pushf
js
xchg
scas
add
rorb
sbbl
and
xor
sbb
mov
mov
or
enter
cmp
xlat
add
add
pushw
adc
outsb
mov
aaa
in
add
into
divl
or
mov
pop
cmc
xlat
repnz
rcll
mov
sahf
add
xchg
jmp
stos
loopne
fstpt
fwait
push
jnp
mov
add
ss
xchg
mov
pop
nop
push
std
pop
pop
adc
in
xor
divl
sub
ficompl
or
add
ret
in
mov
xchg
xchg
arpl
cmc
pusha
out
add
fbstp
idivb
cmp
add
mov
push
insl
outsb
cwtl
mov
sbb
cmovbe
mov
cmp
sbb
aam
jecxz
cmp
jg
push
repz
inc
daa
sbb
dec
lea
sub
xor
test
add
sbbb
sahf
popf
inc
push
add
jo
mov
sbb
cmpb
mov
mov
fwait
add
stos
dec
add
pop
pushf
inc
cld
in
xchg
daa
cltd
push
or
fildll
loope
rclb
inc
add
enter
roll
cld
adc
jg
shrb
jmp
sub
sahf
sarb
dec
mov
cmp
loope
or
pop
mov
imul
mov
lods
mov
unpcklps
arpl
push
filds
dec
jno
cli
bswap
cmp
int
sub
jp
incl
push
cmpsb
insl
push
inc
and
pop
lods
ja
push
adc
add
test
adc
pop
rorl
and
lock
fisubl
orl
shrl
xchg
inc
icebp
aad
lret
add
in
adc
cmp
in
daa
dec
add
rol
mov
cmpb
jo
and
mov
add
push
fcomip
cmp
imul
arpl
mov
orl
xchg
and
out
cwtl
aas
inc
xchg
push
jp
ja
add
lods
dec
insb
jle
loop
mov
push
xchg
rolb
mov
add
pop
adc
push
sbb
dec
cwtl
shlb
add
in
cli
jp
xchg
add
cmpsb
push
add
lahf
ret
bound
clc
fimuls
push
in
adc
xchg
pusha
add
mov
stos
dec
out
add
ret
inc
cmp
xchg
push
pop
mov
addr16
cld
cmp
aam
push
call
add
loop
int3
xor
leave
pop
int3
adc
imul
mov
add
xor
call
gs
cmc
enter
add
clc
push
sbb
std
scas
rol
lock
add
pop
dec
or
add
jp
sti
outsl
dec
faddp
add
call
inc
add
mov
test
lret
xor
dec
sbb
sti
rorl
test
fwait
movb
mov
andl
push
push
testb
xor
mov
add
test
add
cli
cmp
addr16
sub
and
aam
xchg
xor
sbb
movsb
test
xchg
negb
pop
int3
jnp
gs
dec
jae
lods
loopne
enter
cmpsl
add
aad
pop
out
add
push
adc
add
xchg
lret
mov
jge
pop
fsub
jp
cltd
stos
push
jbe
xor
mov
mov
and
jge
add
daa
pusha
adc
jnp
pop
mov
inc
idivl
xor
cwtl
orb
arpl
imul
scas
dec
dec
add
aas
inc
add
mov
push
call
vpsadbw
push
cwtl
jle
pushf
pop
mov
cmp
dec
adcb
xchg
adc
jp
stos
cltd
jl
sub
rorl
push
mov
mov
adc
outsl
pop
icebp
adc
out
pop
xor
inc
sbb
je
movsb
or
cwtl
and
lods
add
popa
xor
xor
shll
loopne
fwait
sub
rclb
add
loop
rcrb
pop
aas
ja
repnz
push
fistpll
outsl
sub
pushf
add
mov
pop
or
sbbl
cli
xor
jmp
or
add
dec
add
cmpsl
lods
jge
push
repnz
or
add
dec
pop
in
jno
out
and
cmc
mov
cmpsl
orl
int3
mov
xchg
pop
pop
sbb
add
out
loope
xchg
fwait
push
and
loop
data16
and
stos
add
xor
lock
fiadds
mov
push
pop
dec
mov
mov
push
pusha
pop
testb
mov
pop
std
jecxz
add
loope
or
test
lcall
clc
and
cmp
enter
jb
add
xchg
cltd
fsub
xchg
mov
sbb
mov
dec
inc
pop
subb
sub
xchg
mov
xchg
add
mov
push
cmp
or
mov
ffreep
push
mov
cmp
dec
add
into
rorb
xchg
adc
or
or
test
roll
dec
cmp
push
jnp
subl
push
xor
push
verw
adc
add
xlat
sbb
addl
lcall
inc
pusha
xchg
ja
add
popf
push
mov
cli
pop
mov
jo
xchg
or
adcb
fcmove
jmp
add
mov
adcb
jmp
pop
pop
adc
popf
setnp
aaa
sti
pop
fsubs
and
mov
mov
push
add
cmp
cld
lret
add
cli
mov
sub
jne
push
test
rcrb
aam
sbb
loopne
addl
dec
mov
sub
test
add
xor
or
in
jne
notl
or
add
call
loop
add
lret
sub
add
notb
sbb
mov
icebp
add
sub
out
add
inc
cmp
inc
mov
fbstp
int3
lods
mov
jne
adc
dec
push
sbb
arpl
add
adc
dec
mov
and
push
rol
mov
add
ljmp
fstpl
dec
mov
or
loope
inc
mov
mov
out
ret
addl
inc
hlt
das
movaps
into
add
lcall
jnp
cmc
in
shll
pop
sub
mov
imul
push
arpl
fistpll
and
xchg
scas
inc
lahf
push
add
es
add
lcall
cmp
loope
add
stc
xchg
cmovo
dec
and
sbb
lods
dec
in
scas
add
add
in
sub
add
les
mov
loop
movntq
out
subb
lahf
add
push
mov
add
imul
push
mov
add
test
test
out
cmc
pop
faddl
pop
orb
fwait
pop
xchg
push
cld
inc
add
stos
mov
lret
dec
lahf
sbb
test
xor
rclb
int3
pop
add
push
clc
and
mov
fistps
out
aam
xor
adc
and
add
add
add
fcoml
adc
jg
add
ficompl
ljmp
push
add
test
gs
je
add
add
in
aas
jns
lds
cmp
shlb
mov
mov
lret
shrb
or
push
iret
mov
and
movsb
jno
cs
loopne
add
pop
push
loop
data16
inc
rclb
jae
and
es
mov
or
adc
jge
push
sahf
pop
stos
movsl
cmc
ret
push
xor
xlat
or
add
jns
add
mov
ljmp
add
inc
rolb
xchg
cmp
pop
lods
fsubrs
jp
pop
add
cmp
inc
imulb
rorl
cmpl
push
mov
pop
adc
adc
shlb
mov
xchg
add
cmpsb
scas
sbb
add
cmp
add
iret
add
dec
pop
pop
jno
hlt
fiaddl
push
sbb
mov
aam
jecxz
adc
cltd
mov
clc
sbb
int
jne
arpl
lahf
or
inc
adc
inc
xor
add
aam
fmuls
stos
sbbb
xchg
daa
inc
and
mov
in
add
mov
sub
push
pop
mov
jb
imul
add
lea
cs
add
into
jo
outsb
enter
push
jae
and
pop
pop
fwait
call
dec
pop
cmpsb
and
mov
bound
fsubrp
add
ja
lcall
mov
dec
push
jbe
outsl
add
movsb
xor
es
dec
pop
cmpsb
adc
cli
add
or
mov
femms
or
lods
movsl
cmp
xor
inc
es
pusha
hlt
mov
out
scas
shll
mov
outsb
repz
sbb
les
sbb
ljmp
adc
mov
mov
mov
call
mov
push
adcb
js
add
fcoml
or
cwtl
or
mov
jp
ja
es
mov
clc
or
pusha
mov
xor
cmp
out
add
xchg
je
lcall
jle
loope
bnd
add
adc
sahf
pushf
xor
shl
pop
insl
test
div
imul
call
sub
cmp
shlb
mov
sbbb
cmp
mov
adc
popa
flds
or
push
das
loopne
sti
mov
push
dec
jmp
pop
xor
cmc
pop
dec
out
rorb
inc
inc
icebp
and
ret
add
repnz
or
sbb
stos
loopne
scas
dec
cmp
ficoms
and
inc
cwtl
mov
inc
add
pushf
mov
push
mov
insl
jg
mov
add
mov
pop
ret
push
sub
fcoms
mov
test
std
inc
cmpsb
adc
dec
sbb
outsb
inc
add
pop
push
insl
imul
addr16
xor
sbb
pop
mov
arpl
inc
mov
inc
lock
cmp
lahf
ret
xor
cmpb
and
cwtl
imul
sbb
push
adc
add
pop
mov
and
pop
xchg
les
shr
cmp
xchg
xor
inc
push
pop
imul
or
mov
sub
add
mov
add
mov
add
sahf
mov
xchg
ret
xor
pop
shlb
inc
loopne
test
mov
cmp
test
dec
inc
cmp
jle
add
pop
xor
idiv
shrb
rclb
xor
add
inc
fdivrs
in
lret
add
movsb
pop
pop
out
insb
add
mov
js
xchg
pop
pop
lods
sbb
int3
ds
add
test
adc
movsb
dec
sbb
add
cmc
loopne
dec
loope
mov
movsl
push
add
sbb
add
push
pop
adc
cmpsl
jmp
push
into
addb
addr16
xchg
adc
cmp
pop
push
add
int
jge
mov
cli
add
pop
popf
push
or
fdivs
aam
pusha
out
jmp
dec
pop
pushl
loope
pop
cmp
pusha
push
and
testl
mov
sub
xchg
jbe
rcll
fnstenv
roll
and
mov
fcoml
mov
or
push
pop
and
mov
add
cmp
adc
stos
or
call
add
mov
dec
lock
add
bnd
add
inc
and
loope
or
mov
imul
and
jbe
and
loopne
sarb
out
ret
nop
cmpsl
sbb
fs
ss
and
mov
pop
lret
cli
decl
jnp
add
or
rorb
add
push
pop
jno
sub
ja
ljmp
leave
sbb
add
push
arpl
sub
rclb
pop
inc
lret
or
push
fst
ret
pop
xor
insb
repz
cmp
pop
js
jo
in
sbb
repz
incl
or
and
mov
cmpb
arpl
ljmp
daa
lock
jle
in
mov
das
cmpsb
lea
dec
rol
cmpsl
rorl
mov
cmp
sbb
add
sub
or
int3
xchg
cmc
dec
pop
xchg
es
or
dec
aad
fidivrl
add
cmp
push
iret
sbb
flds
popa
sti
xchg
jne
xchg
add
inc
push
add
inc
mov
mov
mov
add
testl
pop
push
loop
pop
mov
js
lret
pop
dec
mov
shlb
scas
sarb
mov
bt
push
adc
out
pop
xor
inc
add
pop
sub
sbb
iret
add
xlat
mov
pop
mov
call
sub
popa
adc
sbb
sbb
cmp
rorl
and
mov
es
adc
cmpsb
push
fwait
das
ret
jge
add
mov
rolb
mov
cmp
jecxz
inc
test
sbb
push
clc
adc
movsl
and
cmp
ds
imul
sbb
push
adc
cmp
in
aad
arpl
xor
pop
sbb
adc
sbb
or
dec
addb
pop
popf
and
and
xchg
pop
stc
shrl
repnz
adc
ret
mov
cmc
int3
mov
dec
loop
divb
xchg
sbb
les
sub
mov
push
scas
loop
movb
add
push
jmp
shrb
ss
mov
mov
and
mov
iret
push
popf
push
add
mov
mov
std
movsb
subb
out
jmp
add
test
pop
dec
xchg
and
pop
sub
sbb
dec
mov
mov
aad
push
jbe
inc
lock
lahf
out
ficompl
nop
pop
and
push
push
cmp
jbe
adc
push
push
sub
js
sub
add
mov
and
int
popf
add
mov
mov
adc
setg
dec
push
or
push
mov
das
push
loopne
cmp
inc
mov
bound
loope
cld
aaa
mov
aam
mov
add
hlt
popf
cmpsb
in
jae
jbe
fwait
rcll
insb
add
inc
leave
sti
es
clc
icebp
lods
pop
add
dec
mov
or
fiadds
and
rcl
adc
mov
outsl
mov
loope
aam
add
insb
jo
pop
jle
cs
xchg
jo
addb
jne
dec
cmpsl
mov
pushf
scas
lea
mov
lret
dec
mov
sub
jb
or
dec
or
push
fs
add
sub
cmp
in
rcl
and
add
loopne
lods
rolb
add
mov
ret
cmp
stos
or
rcll
adc
cmp
sub
fsubs
mov
shlb
sbb
lock
xor
fucomp
mov
stc
push
xor
and
in
test
add
cmpsl
enter
pop
out
add
xor
out
test
pop
jp
jae
pop
cwtl
out
iret
js
fnstcw
lea
mov
imul
in
mov
add
sti
aad
or
adcl
out
dec
sbb
arpl
jbe
inc
lock
shll
xor
xor
add
outsb
sub
dec
int3
cs
cmp
verw
mov
ja
mull
lds
outsb
push
add
cmp
add
addr16
imul
sub
ret
sahf
int
fwait
add
jo
mov
add
fst
push
sti
jge
pop
aaa
ret
ds
xor
aas
test
add
out
cmpsl
imul
orb
shlb
cli
std
xchg
or
dec
mov
cs
pop
pop
adc
add
jmp
cmp
stc
fadds
xchg
lods
filds
add
clc
and
sub
fildl
xchg
xchg
sbb
xor
cwtl
loopne
out
add
bound
arpl
jb
add
int
popf
add
in
push
add
nop
fsubl
out
cmp
jne
add
mov
in
sbb
add
or
mov
rcl
pop
and
fldenv
int
mov
ja
repnz
loope
mov
adcl
and
int3
jge
and
xchg
loopne
pop
cmp
ret
push
pop
jne
lds
push
or
cmp
rolb
sahf
pop
fmuls
dec
dec
fcmove
pop
adc
outsb
jl
jbe
notl
dec
pop
adc
lahf
push
mov
pop
lret
jne
add
scas
xchg
mov
lock
scas
ds
lock
cs
cmp
hlt
adcl
rcll
xchg
push
add
or
rolb
mov
sub
rcl
sub
add
sub
xor
lahf
push
add
or
add
mov
loopne
daa
adc
add
cmpsb
add
mov
lahf
ds
cmp
sub
add
xor
pop
test
lds
loop
lahf
pop
mov
xchg
cmp
mov
mov
push
mov
into
rclb
out
divl
push
icebp
out
addb
ja
loope
mov
inc
pop
enter
ljmp
jmp
les
adcb
into
sub
pusha
es
pop
in
dec
and
jg
mov
out
mov
in
outsb
fldt
popl
pop
push
rcrl
nop
or
and
add
inc
jo
out
pushl
add
pushf
inc
dec
nop
cmpb
mov
xlat
sub
mov
dec
cmp
dec
xchg
shrb
test
add
inc
jb
pop
add
fmuls
xor
xor
adc
cmp
sub
adc
add
xor
in
ret
xor
add
dec
test
pop
mov
push
dec
xchg
inc
add
dec
mov
std
call
lods
jl
or
pop
add
rolb
cmp
mov
pushf
mov
aas
insb
testl
movsb
add
xchg
cld
add
lea
add
shr
icebp
sti
rolb
add
inc
xor
add
mov
pop
add
icebp
bound
jl
add
jne
or
outsb
int3
lods
add
push
dec
and
sti
addl
mov
inc
das
jle
add
sbb
loope
pop
pop
or
stos
or
test
xchg
pop
add
dec
xor
sub
mov
pop
xlat
adc
imul
adc
int3
icebp
mov
add
mov
mov
in
rolb
pop
sbb
fcomps
test
add
lcall
add
jbe
jnp
mov
int
cltd
subb
mov
push
jmp
dec
aam
push
lahf
ja
jl
hlt
add
and
and
xchg
or
cwtl
cld
jle
sahf
xor
jg
idivb
push
nop
sub
lret
sub
sbb
push
ret
jae
outsb
add
in
push
push
add
jae
mov
push
ror
mov
xchg
push
xlat
push
arpl
or
inc
test
repz
filds
mov
je
xchg
cli
insl
test
cmp
data16
test
loope
ss
jp
fs
jbe,pn
mov
lods
ret
mov
movsb
sbb
mov
add
and
xchg
test
add
add
push
add
cmp
mov
mov
pop
in
clc
add
add
out
pop
in
and
xor
add
or
fistpll
pop
xchg
out
ret
adc
inc
roll
cwtl
xchg
mov
jne
into
xlat
inc
addr16
mov
and
push
sub
mov
xchg
js
or
lcall
mov
mov
out
cmp
jge
sub
or
scas
add
cmp
cmove
mov
psrad
aad
mov
mov
pop
clc
mov
cmpsb
sub
stc
xlat
mov
push
repz
cli
sub
divl
jl
add
adc
add
and
cmc
add
loop
lock
ljmp
ficoml
cmpsl
sub
in
cmp
dec
sbbl
add
adc
xchg
sbb
cmp
push
and
fwait
cmpb
in
adc
add
sbb
add
or
mov
sub
sbb
ret
jmp
repz
push
iret
jnp
add
js
sti
out
bound
adc
pusha
sbb
add
inc
mov
add
sbb
add
mov
aam
or
lods
jge
cmp
push
cltd
xchg
pushf
sub
movsb
ss
mov
iret
or
rorb
stos
adcl
cmpsb
fisubrs
inc
out
out
mov
fs
add
cmp
arpl
rcrb
lds
inc
push
and
add
push
mov
cs
aad
sbb
mov
imul
mov
test
call
add
sti
popf
add
addb
mov
in
stc
pop
pop
add
xor
nop
and
push
cwtl
add
repz
jg
push
leave
xchg
mov
add
imul
dec
add
cmpsb
jns
into
dec
pop
add
in
test
mov
popf
inc
push
add
aam
int3
pop
xchg
mov
gs
movsl
add
ja
std
out
mov
xchg
sbb
repz
out
inc
mov
sldt
xchg
aam
or
cmp
cmc
movlps
pop
mov
push
add
jbe
jne
inc
sub
add
cmp
dec
add
inc
push
fstpl
test
add
jae
hlt
cmp
test
push
testb
add
add
jl
jle
jg
mov
sub
call
push
sbb
testl
adc
mov
sbb
loopne
add
lods
je
add
pop
test
add
ja
xor
imul
popf
jnp
pop
std
shl
push
iret
sti
mov
sbb
inc
fimull
pusha
ficoms
add
sbb
xchg
cld
test
ficomps
cmp
cli
jb
push
rorl
in
das
sub
xor
out
cmpsl
scas
add
inc
fidivs
leave
ret
lret
lds
adc
pop
repnz
out
jmp
sti
scas
adcl
pop
testl
cmpsl
mov
push
add
xchg
push
mulb
aas
push
adc
mov
in
pusha
xchg
verw
dec
call
lahf
outsl
leave
inc
fadd
ja
aas
aad
push
sbb
test
mov
mov
add
je
adc
lods
hlt
aad
add
sub
add
into
scas
inc
xchg
dec
cmpsl
nop
xlat
pushf
gs
inc
xchg
fsubrs
add
xor
lods
xor
enter
inc
sub
add
add
xor
data16
mov
ret
push
js
jnp
loope
in
cmc
loopne
imul
add
lahf
sti
inc
add
add
mov
ja
fadd
cmp
add
xchg
test
adc
or
int3
fidivs
cmp
stos
outsl
out
add
repnz
loopne
aaa
dec
push
and
jno
xor
ja
mov
test
jo
sti
sub
add
cmp
xor
add
mov
lcall
jecxz
cmp
xor
cmp
jb
jo
popa
xor
adc
or
addl
out
int
test
pop
jne
dec
add
pushf
push
push
push
insl
mov
popa
push
das
add
je
sub
sbb
mov
add
rcrl
jp
test
add
jae
mov
cmp
mov
out
rcrl
dec
pmulhw
lret
fildl
cmp
add
fs
xchg
mov
push
sbb
jns
addb
xor
add
xor
pop
or
out
dec
aam
sbb
in
insb
shlb
mov
imul
out
add
out
test
xchg
xlat
xchg
cmp
in
andl
dec
or
fs
filds
sbb
out
pop
addb
push
sbb
lods
arpl
add
sahf
xor
xchg
xor
adc
mov
cmc
jbe
and
out
jns
imul
sub
pop
dec
inc
jl
push
mov
and
mov
jno
nop
add
push
sub
loop
dec
iret
mov
hlt
cltd
outsb
add
stos
pop
jle
mov
and
pop
ret
test
nop
sbb
fdiv
sub
cmp
int
cmp
jb
lock
int3
cwtl
stc
je
jae
shlb
and
cmpsl
add
sbb
inc
add
data16
add
imul
fadds
es
jle
jno
ljmp
fadd
lods
xchg
aaa
mov
leave
cltd
add
add
arpl
shlb
xchg
insb
fistl
aad
xor
sub
lock
mov
dec
inc
loopne
mov
push
cmp
sbb
inc
xchg
sbb
daa
dec
pop
int3
add
movsl
pop
xor
mov
adc
cltd
sarb
add
xchg
cmp
sub
xchg
sbb
jne
daa
sbb
addr16
adc
jp
add
lret
jg
mov
cli
dec
andl
leave
arpl
nop
pop
lds
addr16
or
fisttpll
daa
jae,pn
testl
xor
push
cmp
mov
and
sub
and
xchg
add
orb
mov
cmp
jle
push
push
test
sbb
shlb
dec
imul
add
jmp
xchg
push
sub
roll
add
gs
pop
es
add
mov
xchg
insb
cmp
and
sarb
ret
mov
dec
lock
cmp
adc
xlat
lods
sahf
ljmp
inc
xor
jle
add
lret
setnp
shl
cmpb
test
sbb
orb
lds
xchg
sbb
mov
in
xor
in
test
aas
fcomps
pop
push
pop
or
adc
add
add
jns
aad
mov
jne
sub
leave
and
insl
int3
pop
shrb
dec
fstps
outsl
nop
push
add
in
pop
mov
into
or
jp
cmpsl
lahf
add
push
xlat
inc
mov
add
movsb
not
dec
mov
sti
dec
cmp
movsl
call
stos
jno
sbb
sub
or
dec
add
push
popf
int3
dec
sbb
pop
push
add
mov
xlat
ds
aad
add
addb
andb
iret
or
faddl
add
sbb
into
mov
dec
mov
ss
add
out
xor
mov
sbb
mov
jo
adc
bound
push
mov
popf
xchg
addr16
mov
faddl
popa
sbb
dec
adc
add
or
imul
pop
add
pop
icebp
dec
mov
push
xchg
add
add
mov
add
stos
push
mov
je
mov
sub
cli
js
cmp
add
dec
fdiv
jge
cs
add
ljmp
adc
jnp
movsb
add
lock
in
or
and
dec
add
cmp
sbb
out
add
test
jg
push
rcr
or
sti
loop
insl
jecxz
int
inc
stos
jle
add
adc
add
clc
push
hlt
lods
lock
or
lea
sbbb
fdiv
add
ljmp
jns
out
fmuls
outsl
std
add
jno
xor
cli
in
adcb
sbb
push
fbld
inc
jne
call
add
mov
xor
in
cmp
mov
sbb
mov
add
pop
lret
mov
mov
pop
icebp
lock
jns
push
subl
cmpl
int
adc
fnstcw
scas
mov
loop
adc
sub
push
fnstenv
mov
adcb
insb
movsb
enter
decl
inc
jecxz
pusha
adc
js
in
xor
adc
cmp
mov
sub
jge
sub
ja
mov
pop
clc
loope
cmp
lret
cmpb
push
ja
add
push
sbb
movsl
nop
arpl
sub
jmp
repz
subb
bound
mov
lock
jno
aaa
jae
push
push
xchg
aam
ds
mov
inc
add
cld
jecxz
pop
sahf
mov
test
les
test
add
loopne
mov
scas
push
fistpl
nop
les
dec
add
imul
xchg
mov
repnz
je
cld
add
jae
into
xchg
mov
sarl
xchg
jns
mov
mov
jo
jecxz
pop
add
xchg
in
cmc
mov
shlb
jecxz
adc
lahf
mov
push
into
mov
and
pop
add
push
ljmp
and
add
js
add
adc
push
add
xchg
div
add
rclb
insb
mov
or
sub
je
in
fisttps
lock
cmp
xor
or
aad
mov
popa
add
mov
dec
clc
mov
mov
fadds
add
or
ret
sbb
das
sub
lods
pop
or
push
shlb
hlt
pop
add
divl
popf
push
stc
mov
push
incl
add
add
or
mov
xlat
scas
add
movsl
in
jp
jl
lock
jno
mov
loopne
or
dec
aaa
add
negl
in
mov
mov
jo
adc
add
cld
out
dec
jbe
fsubrs
add
mov
std
loopne
lcall
add
push
call
lahf
cmp
mov
mov
or
lret
shlb
cwtl
pop
add
loop
add
pop
xchg
in
aaa
add
add
cwtl
iret
cld
adc
mov
mov
mov
cmp
pop
cmpb
fisubs
or
cmpsl
lcall
add
xlat
in
insb
and
repnz
stc
enter
icebp
pop
xor
decb
push
cmp
adc
ss
repz
mov
daa
leave
pop
out
dec
xchg
xchg
pop
cmp
add
orl
mov
sbb
add
add
inc
jae
add
loop
xchg
scas
mov
mov
push
cmpsl
test
push
std
stos
add
mov
mov
gs
add
cmp
dec
aam
in
fcmovnb
loope
pop
fildll
pop
nop
nop
pop
cwtl
imull
aam
pop
nop
je
inc
mov
dec
mov
add
pushf
cmp
inc
out
sub
sahf
sbb
lods
xor
add
insb
cwtl
jle
xchg
aas
mov
push
cmp
lods
orb
out
jb
cmpsb
jge
jp
cmc
inc
ds
add
ss
push
loopew
xchg
add
pop
or
test
in
scas
jb
lods
stc
xor
dec
add
jmp
out
ret
inc
aas
dec
pushf
add
add
fwait
mov
xor
mov
or
push
mov
cwtl
xchg
movd
mov
insl
or
pop
imul
fsubl
pushf
push
pushl
cld
jg
jl
add
movsl
into
inc
pusha
lock
dec
psrad
rolb
insl
push
push
pushf
cmc
mov
add
and
xchg
imul
mov
mov
les
loopne
ss
cmp
sub
pusha
fldenv
xchg
shl
scas
add
xor
sbb
loop
outsl
popf
xchg
pop
add
lods
jle
adc
mov
dec
fsubr
out
inc
add
cmp
in
fwait
cwtl
push
rolb
lahf
ss
pop
popf
xchg
fidivrs
mov
and
jl
adc
jb
mov
cld
int3
sub
add
dec
mov
in
mov
ficoms
test
insb
add
fs
ret
sub
inc
add
insl
sarb
jns
mov
rorb
add
mov
mov
inc
inc
xchg
fdivr
ja
push
and
imul
ret
lds
jae
sbb
fiaddl
add
adc
jl
cmp
sarl
das
add
clc
xchg
sbb
dec
in
pop
add
mov
das
sbb
stc
sbb
ja
js
inc
cmp
movb
mov
rcrl
push
jg
shlb
push
add
and
mov
add
inc
cli
cmp
sbb
jo
addb
add
cmpl
cmp
xor
aad
sbb
sub
add
stos
or
imul
pop
jb
outsb
dec
jne
add
mov
inc
add
push
sub
arpl
cli
fstpt
fxam
testl
loopne
and
push
ljmp
negb
jecxz
cli
jle
lret
dec
sub
mov
aam
lcall
test
cmpsl
fsubl
lret
and
fadds
aam
mov
xchg
cmpsl
and
push
pusha
fwait
mov
fsubr
cltd
rcrl
cvtdq2ps
inc
sbb
aad
add
inc
add
add
and
shll
cmpsl
idivl
addr16
adc
loopne
lret
add
test
adc
jge
push
sbb
pop
aam
adc
dec
sbb
mov
ret
pop
dec
dec
cmpsb
in
add
sub
test
dec
pushf
add
int
mov
cmpsl
rsqrtps
mov
and
int3
icebp
movsl
jecxz
dec
pop
mov
ja
add
jae
call
add
add
mov
mov
xchg
jmp
add
inc
sbb
test
pop
fdivp
mov
jge
add
sub
pusha
xor
lret
mov
clc
sbb
jns
jmp
jne
sti
iret
notb
aas
lock
add
fs
cmp
xchg
fwait
sbb
movsl
mov
in
js
sub
jl
inc
fisttpll
cmc
test
nop
stos
add
add
std
push
add
mov
cmp
push
cmpsl
add
and
inc
mov
cwtl
lods
inc
adc
movswl
add
mov
push
aaa
clc
cmp
ds
sbbl
xchg
jb
cmp
add
pop
inc
push
ja
repz
pusha
pop
jecxz
mov
cmpb
jne
push
sahf
leave
std
jp
popa
push
addl
jl
jae
subb
dec
orb
lock
popf
or
sub
mov
outsl
mov
jmp
mov
mov
in
pop
sbb
aam
les
subb
jno
arpl
pop
fists
and
pop
mov
aas
loope
nop
mull
ja
xchg
sahf
orb
in
cmp
add
add
lcall
mov
jmp
rorl
sbb
pop
ret
pop
inc
sub
lcall
add
lea
testl
xchg
test
dec
imul
push
orb
add
in
add
lret
fisttpl
xor
push
jo
xchg
incb
test
mov
lcall
nop
xchg
dec
push
mov
cwtl
fnstsw
pop
adc
iret
or
popa
push
in
shl
andl
cld
sarb
das
inc
mov
add
call
cltd
push
adc
add
and
add
fidivl
adc
and
mov
lret
push
aas
dec
inc
mov
das
sbb
mov
sbb
in
icebp
jb
add
fidivrs
test
pop
mov
movntq
add
jl
push
inc
mov
and
mov
pusha
aam
add
or
movsb
adc
or
xor
in
add
out
add
ret
add
dec
dec
cli
call
sub
and
push
push
scas
arpl
xchg
data16
shrb
in
xor
dec
gs
scas
sub
add
insl
jecxz
mov
js
cmp
popa
lds
mov
add
adc
xor
aad
add
xchg
repnz
ret
pop
in
lea
add
dec
and
mov
add
ret
mov
mov
jmp
das
test
and
pop
stc
or
mov
fmull
and
call
xor
enter
loope
bound
sti
sbb
push
fiaddl
arpl
pop
add
data16
addr16
repnz
jp
dec
xchg
inc
cmpsb
xor
xchg
cld
push
lods
aam
inc
jno
dec
mov
ja
sbb
iret
add
imull
inc
ret
lds
sbb
push
jge
cld
inc
jg
mov
daa
jae
adc
imul
jb
add
add
addps
stos
cmp
pusha
adc
mov
xchg
xchg
dec
jg
and
mov
cmp
sub
cmp
mov
ljmp
mov
pushf
clc
or
sti
jl
frstor
hlt
fimuls
push
jecxz
xor
add
and
push
adc
in
xchg
iret
into
add
insb
lods
add
xchg
and
out
add
push
jb
cli
push
add
xor
dec
sub
xor
lahf
mov
inc
cmpsb
movsb
inc
and
test
clc
addr16
fimull
loopne
les
data16
int
jo
or
mov
imul
pop
sbb
add
pusha
inc
int
cs
or
nop
in
lfs
jne
mov
add
sbb
dec
xor
sub
pop
adc
add
mov
push
cmpb
orl
push
in
adcl
fmuls
mov
and
cmp
push
hlt
mov
pop
mov
adcl
repnz
in
cli
inc
mov
mov
mov
inc
mov
test
mov
push
addr16
dec
add
cmp
mov
or
xor
push
mov
xchg
addb
pop
dec
and
les
lret
add
and
add
mov
add
adc
loopne
outsl
xchg
add
mov
into
add
pop
out
out
cmp
xor
in
fsubrl
ja
add
inc
cs
cli
lods
add
sbb
movsl
rclb
add
shrl
fs
jbe
xor
roll
outsb
and
adc
out
sbb
fdiv
push
xchg
inc
testb
sti
faddl
add
sub
scas
lret
loopne
testb
jg
inc
pop
add
dec
shrl
mov
add
or
jo
mov
in
bnd
scas
xchg
lret
lea
add
xchg
cmpsl
pop
jmp
lar
loope
xchg
lahf
or
inc
mov
adc
or
add
xchg
insl
sub
popa
dec
popw
pop
push
shlb
add
lahf
out
outsl
add
cld
mov
sahf
jno
js
add
mov
stos
jbe
dec
add
int3
adc
pop
and
and
inc
hlt
and
aaa
outsb
das
push
dec
xchg
fadds
add
pop
pushf
mov
dec
ret
mov
dec
jp
outsb
test
add
cmp
nop
jne
out
cmp
or
lods
repnz
addr16
pusha
mov
push
outsb
into
or
xchg
stc
jbe
jle
fisubl
imul
inc
dec
xchg
in
mov
test
inc
fildl
clc
out
outsl
aad
sub
lock
iret
sbb
aaa
mov
lea
add
fsubs
add
movsl
push
push
xor
add
inc
jl
mov
out
sbb
sub
shlb
push
jge
aad
pop
cmpsb
out
mov
mov
xchg
mov
enter
faddl
push
and
call
cmp
cmp
test
hlt
add
rol
stc
mov
add
pop
cmp
ja
mov
and
ret
add
pop
xchg
filds
outsl
shll
call
nop
jmp
cli
add
aad
stos
push
push
push
jns
faddl
outsb
mov
xor
adc
dec
test
jo
xor
inc
add
cmpl
add
xchg
pushf
cmp
jbe
jl
push
push
mov
lahf
mov
mov
shr
popa
cmpsl
mov
sbb
xor
pop
jge
js
repnz
imul
add
and
shr
or
add
lcall
pop
xchg
add
add
scas
lods
in
xchg
jge
jp
cmp
idiv
cwtl
pop
popf
sub
add
jp
scas
pop
dec
stc
popa
sbb
cmp
add
mov
add
xchg
ror
dec
jmp
fidivrs
arpl
add
or
push
add
mov
mov
add
movsl
pushf
mov
dec
testl
stc
inc
enter
mov
xchg
pop
int3
sub
inc
mov
inc
inc
inc
sti
aad
into
repnz
lret
int
cmp
and
sub
xchg
dec
shlb
add
lock
sti
lods
mov
lea
mov
or
add
mov
cmp
push
adc
push
adc
test
xchg
add
out
mov
mov
push
leave
push
pop
addb
inc
add
popf
cmp
cmp
js
cmp
hlt
out
or
in
mov
dec
dec
loop
ja
mov
add
xchg
add
sbb
pop
mov
inc
jecxz
shrl
sbb
xchg
adc
pop
and
shll
push
add
filds
pop
cmp
pop
fsubrs
adc
andl
jmp
nop
shll
add
mov
call
and
lds
data16
xchg
call
jmp
mov
out
cmp
and
push
icebp
push
mov
lods
cmp
mov
lds
sarl
rolb
scas
bound
movsl
sbb
cwtl
out
add
mov
push
add
inc
stos
mov
xor
shrb
push
pop
loopne
add
add
dec
or
out
and
mov
sub
pop
push
xchg
popa
or
pop
lds
xor
pushf
xchg
cmpsl
test
andb
jmp
fwait
hlt
mov
in
call
xchg
push
add
lds
xor
xchg
cmp
stos
add
and
push
xchg
cli
add
cmpsb
add
xchg
push
add
pop
inc
rcl
jmp
add
ja
pop
add
cmp
add
push
dec
imul
je
or
vzeroall
aas
sbb
push
addr16
stos
inc
sahf
add
test
mov
and
jle
mov
lret
pop
fwait
add
jmp
fadds
aaa
jne
dec
sub
aad
ss
add
jns
shl
inc
clc
add
mov
test
jge
ja
adc
test
pop
cmp
pop
shrb
add
dec
cli
ja
push
es
cmp
in
sub
out
jmp
pop
cwtl
ja
lods
add
jge
push
dec
or
jnp
add
pop
or
inc
fildl
scas
mov
sub
addb
scas
xchg
ret
jae
cs
cmpsb
adc
push
cmp
add
push
lahf
add
add
xor
cmp
inc
test
inc
push
sbb
fldenv
cmp
ljmp
cmpsb
add
mov
add
xchg
push
add
or
testb
outsb
les
mov
sbb
inc
sbbb
sub
inc
sarl
add
fwait
jnp
adc
in
cli
push
pop
add
rclb
sbb
testb
ds
mov
xchg
or
xchg
cmp
negl
add
or
mov
jbe
or
add
or
adc
pop
add
ljmp
push
orl
push
add
sub
and
cmp
pop
or
and
pop
mov
js
add
xor
addb
adc
mov
out
loopne
imul
mov
add
sbb
fnsave
sbb
mov
sbb
mov
shrb
fidivs
out
ja
leave
adc
faddl
add
cmpsb
fwait
andb
mov
xchg
xchg
aad
jl
pop
add
xor
cs
mov
ljmp
cmp
icebp
mov
aad
add
inc
xor
xor
pop
or
testb
lret
shll
pop
jo,pn
addl
cmp
jg
lret
testb
sub
xchg
and
inc
pop
rorb
in
xlat
lods
adc
daa
add
js
iret
addr16
mov
mov
call
cmpb
movsl
lsl
pop
loopne
scas
mov
inc
cmp
push
sub
frstor
mov
inc
sahf
je
cs
xchg
xchg
outsb
pop
dec
or
dec
inc
jmp
sub
mov
jns
add
xlat
cwtl
cmp
jne
dec
inc
scas
add
pop
into
popf
icebp
cmp
dec
cmp
pop
leave
ds
jge
add
bound
add
sti
pop
adc
shll
jae
push
and
lret
loop
lahf
lock
or
xchg
mov
std
xchg
push
pop
add
xchg
in
lret
shlb
mov
iret
mov
xchg
fsubl
shlb
lea
clc
popf
jb
xor
mov
out
push
inc
mov
arpl
loopne
or
push
add
mov
adc
jb
clc
push
testb
mov
loope
jle
xchg
jnp
add
clc
mov
add
adc
loop
lcall
cmpb
and
mov
cmp
insl
xchg
fidivs
add
scas
enter
shll
mov
in
shrb
push
bound
cmpsl
inc
cmp
jp
add
push
xchg
lock
test
jmp
in
or
mov
mov
in
ret
bound
push
pop
pop
push
dec
inc
jle
dec
cmp
push
sbb
pop
inc
hlt
sbb
lret
pop
jle
add
lahf
ret
push
and
add
jns
pop
lahf
js
add
subb
leave
push
inc
loopne
jne
pop
inc
xchg
xchg
add
dec
insl
cmpsb
add
cmpsl
lock
xor
sub
movsl
call
lret
dec
add
pop
jo
jmp
mov
push
adcb
cwtl
mov
pop
and
in
aad
add
stos
ret
or
sbb
add
jbe
add
cmc
ljmp
cmp
add
jmp
jle
add
fisttpll
add
push
or
popf
cmp
or
or
gs
push
in
inc
loope
inc
and
pushf
add
je
sbb
enter
jg
jmp
inc
jae
add
mov
and
add
inc
mov
jo
iret
loope
mov
cmp
add
jg
mov
cmp
gs
addl
sahf
lea
xlat
aaa
test
adc
sub
xorl
and
lea
lahf
xor
push
pinsrw
jo
jmp
jnp
mov
push
ds
les
enter
sub
negl
dec
cmpb
loopne
bound
dec
ds
adc
and
stc
pusha
je
push
in
add
mov
add
cmc
clc
daa
les
mov
aas
loope
adc
pushf
mov
clc
testl
push
pop
xchg
ret
idivb
add
cs
pusha
inc
mov
aad
inc
lods
mov
or
stos
sbb
pop
xchg
add
jo
add
jmp
stos
add
inc
adc
es
imul
test
or
inc
add
sbb
jge
mov
add
out
lds
sbb
add
stos
test
into
ss
sub
leave
add
dec
pop
xor
mov
push
jl
xchg
inc
mov
les
add
lret
and
cmp
cmp
add
push
shrb
xor
andb
xchg
push
inc
loopne
jg
fisubrs
pop
daa
addr16
mov
sbb
mov
push
push
stc
cmp
xchg
in
add
mov
rol
insb
mov
in
sub
fiadds
imul
xor
xor
mov
push
add
pushf
addb
loop
sahf
bound
sbb
push
sbb
clc
fmull
add
stos
sahf
cmp
nop
outsb
sbb
sub
mov
scas
pusha
clc
jnp
sbb
add
ret
insl
stos
push
xchg
add
inc
shll
hlt
inc
psubw
rolb
xchg
jg
and
pusha
push
in
frstor
xor
mov
xchg
cld
in
pop
mov
addb
lret
into
fsubr
sub
mul
cmp
push
idivl
orb
add
call
pushf
cmp
iret
add
mov
cli
int
loopne
cmp
sti
xchg
scas
mov
call
push
mov
dec
mov
jbe
push
cmp
xchg
outsb
loope
lea
push
dec
andb
jp
xchg
inc
cmpsb
aas
inc
mov
in
rcll
or
pop
andb
gs
cmp
dec
jmp
pop
into
xor
sarb
rol
xor
fldl
ja
dec
fiaddl
xchg
mov
mov
movsb
lret
mov
xor
pop
jecxz
add
or
rclb
pop
pushf
rcr
sbbb
pop
jmp
daa
fcomps
xlat
xor
dec
jmp
out
jg
add
ret
add
add
cmc
movsb
push
and
jg
stos
lods
lods
mov
add
sbb
out
dec
fdivrl
arpl
add
xor
push
adc
xchg
add
movsl
bound
add
add
push
push
sbb
pop
sbb
into
jne
add
rcr
and
xchg
dec
push
push
cmc
jl
jbe
xchg
addb
or
pusha
fidivrl
out
add
or
lods
adc
les
stc
sbb
and
out
add
sbb
hlt
shl
add
add
add
pop
jne
std
test
sub
add
dec
movsl
push
add
inc
test
into
mov
fistl
ja
add
xor
cmp
sbb
loope
cmpsl
or
shrb
das
cli
jmp
mov
push
aam
aas
mov
add
inc
and
hlt
mov
jecxz
push
xchg
cmp
pop
pop
clc
shl
cld
mov
adcl
shll
int
mov
xchg
mov
mov
adcb
push
mov
pop
mov
xchg
pop
sbb
add
stc
dec
jp
cmpl
xor
mov
mov
comiss
dec
add
push
lret
jecxz
add
xchg
xor
xor
mov
test
mov
sbb
jne
pusha
lahf
imul
lea
movl
daa
into
jns
nop
je
mov
sbb
stc
pusha
xchg
mov
xchg
mov
mov
sbb
adc
sti
add
pushl
cmp
int
sahf
shlb
insl
xchg
pop
inc
adc
add
fstpl
hlt
mov
out
add
mov
lods
std
in
fmul
outsl
add
and
dec
aaa
test
add
scas
or
stos
inc
fistps
fnstenv
push
mov
mulb
inc
hlt
cld
imul
shlb
cmc
add
icebp
out
adc
rorl
pusha
scas
subb
mov
insb
sbb
push
xlat
xchg
inc
ss
mov
in
add
add
enter
je
mov
mov
int
gs
push
add
push
cld
std
movsl
mov
mov
xor
mov
push
xor
lcall
adc
jns
push
aam
add
seto
faddl
add
sarb
add
popf
scas
ret
bound
pop
cmp
jno
mov
or
pop
leave
ficompl
pop
sahf
pop
inc
mov
clc
add
mov
in
add
cmp
mov
outsl
dec
add
push
leave
js
cmpb
es
mov
add
aad
sbb
add
dec
outsl
sahf
pop
jns
inc
add
cmp
js
rolb
aad
xor
inc
add
sub
jns
add
xchg
mov
jmp
jge
cld
call
add
fwait
cmp
pop
xor
cmova
pop
shl
pop
in
movsb
into
pop
pop
clc
movd
jg
aas
xor
push
pop
dec
pop
cmc
jno
add
or
sbbl
adc
add
inc
into
inc
mov
mov
out
imul
push
idiv
dec
das
adc
jnp
mov
int
loopne
add
xchg
pop
xor
insb
sti
movsb
add
cld
leave
mov
enter
and
rolb
andl
xlat
adc
fdivr
loope
add
ja
int
and
cmp
mov
inc
test
add
ja
adc
push
mov
mov
mov
aad
aam
out
xor
dec
mov
rcl
sbb
mov
mov
int3
jae
pop
jle
popa
cmp
loope
inc
int
mov
add
and
sbb
shl
add
scas
push
sbb
add
inc
into
adcb
add
dec
push
xor
add
push
and
mov
add
push
loopne
mov
js
jg
add
add
ret
mov
or
jle
add
inc
cmpsb
je
xchg
pusha
cmp
adc
xchg
push
scas
sub
mov
push
xor
outsb
or
mov
stos
pop
ljmp
mov
jmp
jae
or
shl
mov
icebp
pushf
pop
imul
cmp
sub
pusha
xchg
xlat
pusha
add
rorb
pop
mov
roll
adc
mov
add
shll
fcmovnb
lods
push
jmp
pop
push
in
repnz
pop
mov
lcall
shlb
add
pop
cmp
and
ja
test
jnp
outsl
aaa
mov
and
int3
ljmp
ret
and
add
dec
enter
shlb
or
out
fildl
inc
adc
or
add
mov
push
mov
add
and
mov
jo
loop
fcomi
mull
lret
orb
jle
stc
add
cltd
pop
adc
pop
or
lea
pop
sbb
adc
mov
xor
cmp
push
pop
mov
and
ret
mov
mov
dec
add
pop
loopne
movsl
andb
add
mov
pop
xor
mov
lahf
mov
std
push
scas
push
mov
loop
insb
test
add
call
inc
lods
add
and
jb
popa
lret
sbb
xor
mov
mov
ds
ret
dec
data16
add
sub
in
or
jmp
punpckhdq
rol
jnp
aam
aad
test
cmc
sarb
das
into
push
xchg
push
bound
pop
xchg
mov
pop
in
adc
jno
add
call
addl
shll
adc
jnp
dec
in
jl
add
scas
fildll
in
test
mov
cwtl
push
mov
ja
loop
xor
jno
lea
fs
test
faddl
add
scas
mov
orl
push
or
mov
push
imul
mov
popf
or
jecxz
push
and
sahf
mov
or
repnz
movsl
xor
cmp
add
mov
jnp
pop
push
lods
adc
jecxz
das
add
mov
inc
lock
sub
cmp
jnp
push
pop
jb
sti
sar
ja
xchg
int3
add
sarl
add
pop
pushf
cltd
push
pop
lods
mov
cmpsb
jo
xchg
lcall
ret
push
mov
dec
push
nop
add
pop
aaa
push
fcomp
xchg
add
cli
frstor
inc
in
cmp
repnz
add
cmova
insb
sub
addl
mov
sbb
fiadds
dec
or
loop
add
shl
pop
push
jecxz
cwtl
mov
push
mov
repz
cmpsb
lods
add
xor
lea
add
pop
notl
add
int
dec
push
cmpsb
leave
cmp
mov
mov
lock
add
fidivrs
add
int
and
cmpxchg
call
or
mov
decb
orl
xor
add
adcl
lea
mov
lods
and
sbbb
repnz
add
hlt
xchg
mov
add
mov
aas
add
adc
add
test
insb
icebp
push
add
push
mov
add
cmp
cmp
pop
cmp
hlt
sub
mov
insl
push
jg
std
pop
or
out
xor
rcrb
or
sbb
add
cmp
or
cmp
inc
jno
mov
insb
or
out
sub
add
pop
sbb
add
pushf
and
push
arpl
jle
xchg
mov
push
notl
pop
push
jp
xchg
add
loopne
out
cmpsb
dec
mov
push
mov
add
js
in
mov
movsl
jae
ss
daa
mov
dec
movsb
mov
loopne
int
pop
sar
addl
push
popl
and
scas
pop
aas
mov
lods
out
inc
test
js
mov
mov
fidivl
pop
adcb
bound
xchg
cli
aas
add
xor
mov
inc
pop
pop
int3
xchg
mov
rorl
xlat
shrb
add
push
mov
lret
stos
xor
dec
test
ja
cmp
adc
dec
imul
psubusw
add
jg
bound
ja
add
sarb
mov
iret
add
pop
cli
pushf
push
jb
imull
sub
jbe
rolb
jno
add
mov
pop
insb
inc
dec
xchg
add
mov
addb
out
call
mov
xchg
repz
pop
rolb
lahf
mov
inc
scas
leave
push
add
out
out
test
aaa
in
movsl
ss
mov
sbb
aas
sahf
xor
pop
fistpll
jg
lcall
daa
scas
xorl
pop
pop
jb
push
pop
sub
sar
lods
add
inc
sub
xor
addr16
add
insb
imul
mov
push
sbb
fdiv
pop
xor
movsl
push
jne
and
sbb
or
shr
movsb
push
mov
ret
cmp
add
jle
imull
arpl
add
sub
lahf
cmp
mov
enter
pop
add
aam
mov
lret
push
jbe
push
push
mov
out
es
sbb
pop
loope
inc
ret
xchg
fistpl
pop
push
inc
mov
fsubrp
dec
out
adc
fisttpl
mov
sub
loope
sub
pop
or
jns
mov
fdivs
iret
sbb
pop
dec
xchg
ds
xor
sldt
es
xor
add
fs
jle
ljmp
xchg
dec
or
mov
loope
add
lods
inc
or
js
cmp
out
cmp
leave
push
ficompl
cmc
subl
insb
mov
dec
pop
out
repz
rclb
cmp
mov
fsubs
pop
inc
add
and
mov
sbb
adc
mov
mov
jge
lahf
mov
idivl
stos
and
add
test
xchg
pop
inc
nop
cmp
notb
nop
inc
mov
loop
out
rcr
js
and
pusha
jge
shll
imul
fwait
sbb
adc
shlb
clc
push
add
lret
pop
mov
jb
jl
add
jmp
push
adc
fisttpll
cmp
and
sub
int3
addr16
pop
repnz
shlb
leave
aaa
push
sub
xchg
xchg
add
lods
xor
fwait
push
cmp
cmp
pop
daa
roll
push
rcrb
seta
adc
push
add
into
push
hlt
pop
or
mov
inc
sti
mov
dec
mov
dec
je
add
lods
pop
add
dec
sub
dec
adc
dec
fcomps
lret
pop
cmp
xchg
pop
out
lea
push
mov
cwtl
dec
mov
nop
loopne
sbb
jne
addb
scas
lods
and
push
sub
jl
xor
ret
mov
mov
orl
push
andb
inc
outsl
bound
add
dec
aas
mov
add
adc
xchg
pusha
pop
jne
jbe
vmwrite
mov
addl
or
lret
mov
mov
sarb
xchg
sti
faddp
movsb
gs
pushf
test
push
bound
adc
add
lret
pop
xchg
loop
adc
std
jno
add
je
push
jp
xor
stos
xchg
sbb
xor
ljmp
pop
jnp
add
fwait
adc
call
mov
xchg
aaa
mov
stc
mov
aas
inc
adcl
and
mov
or
bound
xchg
gs
fwait
in
cltd
add
mov
sarb
push
js
out
add
decl
subb
pop
add
aad
outsb
out
lret
add
sti
pop
in
mov
mov
pop
add
sbb
mov
stos
pop
ret
cmp
stc
in
pop
sbb
das
push
es
test
loopne
fstp
cli
add
cwtl
push
sub
dec
fmuls
add
test
lock
add
push
ret
mov
fs
sahf
ret
sbb
in
pop
and
add
clc
cmpsb
add
je
jns
jbe
int3
mov
in
jae
jbe
add
dec
rcr
lock
movsb
out
data16
aas
pop
outsl
js
adc
and
les
and
xchg
loopne
add
pop
mov
filds
pop
call
dec
sbb
aas
adc
pusha
incl
mov
dec
mov
adc
insl
ret
cmp
inc
xor
add
or
mov
push
icebp
push
idiv
mov
mov
cmp
loop
pop
pop
das
inc
rcrb
mov
xchg
pop
enter
jo
or
dec
add
dec
sub
mov
mov
add
inc
mov
lret
cli
in
clc
jmp
xlat
mov
or
jle
xchg
xor
ret
in
xor
dec
ja
add
outsl
aaa
add
ds
and
add
jnp
jge
and
aam
xchg
jne
or
sub
add
and
dec
xor
orb
adc
into
scas
fwait
add
test
test
sub
gs
add
xchg
dec
jl
shlb
addr16
mov
ss
pusha
hlt
dec
data16
xor
xchg
add
jl
call
mov
mov
or
pusha
add
les
dec
add
push
imull
mov
mov
in
stc
faddl
cmc
cmp
push
pop
cmp
mov
int
pop
testb
adc
mov
adc
xchg
sbb
arpl
push
in
or
jne
add
rcr
seto
sarb
aaa
mov
lret
pop
test
movsb
jge
add
inc
inc
iret
add
xchg
les
out
jnp
xor
sub
add
clc
or
cmp
inc
clc
std
mov
add
sub
xor
mov
roll
arpl
loopne
sub
ja
imul
add
mov
and
xchg
cmpsl
arpl
inc
jp
cwtl
lret
mov
pop
dec
lds
sub
movsb
add
mov
mov
pop
call
les
xor
loope
out
or
arpl
dec
cmp
cld
jl
pmuludq
jle
fdivrs
xlat
pop
aam
fstpl
adc
xorb
lods
add
insl
pop
inc
mov
pop
mov
cmc
and
push
and
xchg
add
scas
xchg
adc
loopne
pop
or
xorb
add
or
adc
icebp
je
add
mov
xlat
lea
jns
clc
ljmp
pop
push
cmc
mov
adc
add
mov
pop
in
les
mov
mov
xchg
imul
popa
or
js
add
xlat
or
pop
mov
adcb
add
jg
xor
addl
jo
out
incb
adc
mov
add
fs
add
sbb
push
out
xor
daa
mov
cmp
dec
xor
fbld
xorb
add
in
fadd
add
add
adc
das
add
adc
pop
pop
test
jge
rclb
mov
add
sub
in
ss
add
sub
adc
push
cli
out
xchg
shll
mov
test
dec
addr16
push
add
jle
in
in
mov
push
pop
jmp
cli
add
test
mov
js
xchg
add
aam
shlb
icebp
inc
dec
stc
pop
mov
mov
popl
or
add
pop
sub
pop
pop
test
ret
jb
enter
mov
ss
dec
testb
out
pop
mov
inc
xchg
test
add
out
add
fdivrl
incb
test
sub
btc
cmovo
in
enter
cmp
cmp
cwtl
jmp
aaa
imul
movsl
scas
add
ja
imul
or
jne
xor
mov
add
inc
add
cmp
int3
icebp
cwtl
jmp
add
mov
das
enter
add
sahf
fisubrs
stc
xor
jmp
rol
rolb
push
icebp
insl
out
fnstcw
pop
sub
lods
xchg
rcrb
in
into
cld
outsl
aas
push
in
and
test
jecxz
ljmp
xchg
and
add
int3
inc
sub
shlb
sbb
add
mov
lods
add
enter
inc
outsb
add
mov
dec
add
pusha
jg
stos
gs
stos
test
das
test
repz
or
imul
loop
test
scas
push
add
lods
pushf
pop
sahf
rolb
fcompl
inc
testb
adc
xor
sub
bound
mov
pop
jbe
push
rcrl
les
in
xchg
cmp
pop
cli
add
out
sbb
add
add
push
add
jbe
push
pop
into
sahf
cmp
add
sub
adc
out
and
pop
mov
ss
mov
jge
dec
add
cmp
cmp
or
cmpb
into
cbtw
int3
add
jmp
add
pop
mov
nop
scas
outsb
mov
stos
addr16
cwtl
push
xchg
push
imul
roll
cltd
add
inc
mov
mov
sbb
leave
pop
inc
lcall
add
adc
and
mov
or
inc
aas
add
subb
and
dec
cmpsl
pop
xchg
mov
cmp
sbbb
pop
ret
mov
and
cmp
xor
add
ret
dec
rcr
test
sbb
shrb
mov
pusha
jecxz
xlat
dec
loopne
cli
in
add
cmpsl
loopne
xchg
repz
jle
push
sub
in
loopne
daa
je
pushf
add
loopw,pt
sub
rorl
pop
sbb
add
xchg
daa
add
inc
jo
lds
and
push
gs
adc
xchg
mov
pop
dec
cmpl
sub
sub
fs
add
dec
jb
dec
loop
pop
cwtl
sub
mov
addl
xchg
lock
add
xchg
add
and
push
add
sbb
negl
outsl
add
aam
mov
push
add
hlt
sbb
add
shrl
add
mov
dec
add
inc
adc
int3
imul
pminsw
mov
add
and
adc
cmpsl
adc
add
or
fnstcw
inc
shlb
shll
icebp
push
clc
lret
pusha
sbb
lock
mov
inc
dec
cmc
add
push
call
push
sbb
orl
icebp
fs
xlat
and
aaa
lret
repnz
mov
jmp
stc
add
imul
scas
daa
popa
loope
and
aad
add
or
mov
mov
lock
and
dec
jle
add
mov
mov
sub
pop
mov
imul
loope
or
nop
add
dec
pop
add
xchg
mov
cwtl
jecxz
add
repnz
xor
cmp
add
icebp
negl
sbb
xchg
inc
loopne
leave
add
daa
xchg
dec
adc
or
lock
push
repnz
fadds
dec
push
lret
notb
pushf
add
and
pop
pop
dec
mov
fst
or
push
adc
mov
ljmp
sub
int3
pop
xchg
or
mov
lods
cmp
or
popf
cld
nop
scas
flds
push
xchg
push
paddsb
leave
jle
mov
je
mov
lock
cmp
add
movsl
sub
inc
je
mov
pop
test
mov
jg
mov
mov
in
jecxz
jno
repnz
adc
arpl
leave
pop
cwtl
xchg
fistl
push
stc
mov
dec
aad
int
add
clc
subl
stos
cwtl
mov
decb
test
sahf
jle
pop
jne
incl
lods
ljmp
push
mov
add
inc
jecxz
jns
mov
xchg
lret
cwtl
adc
add
test
xchg
push
andl
es
pop
add
mov
int3
mov
xchg
cli
lds
aad
shrl
push
pushf
mov
mov
xchg
and
jg
pop
dec
and
pushf
adc
mov
out
iret
sarb
add
sub
inc
cmp
add
sbb
cmpsl
mov
arpl
and
rep
jne
mov
es
loope
adc
ss
out
inc
add
mov
loopne
and
pop
popa
sbb
lock
fsubrl
cmpsb
add
out
insb
daa
imul
es
inc
fstpl
sbb
add
jl
adc
and
sub
loop
xorb
ret
adc
dec
dec
cmp
mov
std
scas
mov
call
mov
pop
add
loope
sub
push
les
xchg
sub
sbb
xchg
and
inc
roll
pop
lods
sbb
nop
cmp
cmp
pop
adcb
ljmp
mov
mov
dec
jno
neg
mov
xchg
add
mov
cmp
and
nop
cmp
mov
rclb
add
aam
rolb
sbb
mov
paddsb
xchg
add
dec
add
dec
shl
mov
push
mov
jp
mov
add
insb
mov
xchg
cmp
lea
pop
add
dec
push
loope
add
es
cmpl
add
sub
cmp
loope
add
inc
fsub
push
jnp
add
push
into
popf
cmp
and
fs
sbbb
scas
mov
adc
incl
loopne
cli
mov
testb
pusha
roll
cmp
fdivrp
les
mov
nop
jae
cmp
sarb
adcb
xchg
loope
cltd
adc
dec
aad
pop
in
lock
push
xchg
add
call
pop
add
push
add
aaa
sub
test
shrl
lods
dec
arpl
mov
fmuls
sahf
loope
add
xchg
ret
fdivl
add
sbb
add
daa
repz
pop
cmp
daa
insb
pusha
jnp
in
add
ficoml
sub
sbb
add
dec
jge
mov
add
and
add
mov
xor
cmp
insb
jno
or
shr
jge
mov
aam
in
dec
push
loope
add
and
push
xchg
mov
xorb
add
addr16
jge
mov
sti
lret
test
push
lock
sbb
nop
cli
nop
mov
rcrl
mull
mov
add
cmp
aam
in
pop
cmp
add
push
push
loope
inc
jae
cmp
mov
add
sbb
stos
cmp
fidivs
cltd
pop
cs
pop
xchg
lcall
dec
mov
stc
sahf
pop
mov
push
push
shr
jle
add
add
jae
jns
pop
add
push
pop
imul
add
mov
mov
add
into
cmpl
test
aad
push
aas
test
dec
movsb
add
clc
iret
sbb
lahf
cmp
cmp
add
fst
mov
mov
les
jge
ror
movb
mulb
ret
add
movsl
popa
adc
and
xor
sub
fimull
sub
scas
mov
jo
insb
add
or
cli
dec
sub
add
arpl
je,pt
scas
or
jg
sbb
insb
arpl
and
add
test
adc
mov
shll
loope
add
sbb
cmp
andb
cmp
push
mov
cltd
out
repnz
sub
sbb
and
mov
add
popf
xchg
xor
lods
js
mov
cmp
sbb
pop
sbb
cmp
mov
jl
xchg
or
adc
push
dec
jns
add
jnp
arpl
pop
mov
pop
adc
sub
add
mov
out
add
divb
clts
pop
ss
cwtl
sub
mov
adc
movsb
test
lahf
fwait
aaa
push
sbb
pop
fmul
ljmp
testb
or
mov
cmpxchg
push
lret
jb
add
stos
sub
mov
xchg
mov
lds
fimuls
add
sbb
adc
fcmovnb
stos
fmuls
jb
fisubrs
add
lock
push
push
xor
popa
and
and
xchg
std
fldcw
xor
mov
xchg
addb
pop
pop
xor
in
jle
or
jbe
xor
movsb
sub
xchg
add
shl
stc
add
out
lret
inc
sbb
add
or
test
adc
out
add
xchg
les
sub
ret
add
int3
lods
in
fdivr
mov
out
add
sub
mov
push
scas
adc
pop
dec
inc
push
shl
stc
push
xchg
mov
fcmove
in
adc
je
add
or
sub
shll
subb
lods
aam
aaa
add
inc
mov
pop
xchg
pop
addr16
sbb
repz
mov
jno
cli
hlt
test
add
daa
sti
popf
add
sbb
sub
add
mov
mov
mov
pop
stos
inc
add
cld
add
xchg
add
mov
negl
adc
out
and
fdivl
xor
cmp
fwait
xor
push
cs
mov
push
add
adc
and
aaa
fadds
popa
sbb
jmp
std
pop
in
push
lret
fldenv
imul
push
test
imul
push
in
addr16
push
out
sub
popa
dec
xlat
cmp
add
repz
andl
andb
fildl
outsb
in
lds
push
icebp
in
sbb
add
jo
flds
and
add
push
xor
jge
nop
mov
sub
loopne
or
push
rclb
jge
add
mov
mov
add
lds
adc
xchg
add
pop
push
lret
sbb
popa
sti
cmp
ljmp
cmp
aas
mov
push
add
loop
sbb
and
jno
jo
outsl
add
movsb
xchg
push
fistps
add
sub
cli
jb
mov
add
aaa
mov
xor
inc
sbb
inc
jae
add
dec
mov
notb
roll
fildll
aaa
adc
filds
leave
fldt
in
xor
out
push
and
add
dec
ret
sbb
add
les
add
xchg
inc
xor
stc
add
clc
ret
mov
aaa
and
fcoms
add
pop
xor
mov
jbe
fistps
add
cmp
loope
scas
cmp
add
and
cld
mov
inc
cmpsb
sub
cmp
std
push
stos
mov
sbb
cmp
or
rcr
xchg
add
pushf
testb
dec
dec
into
inc
sbb
add
fdivrs
scas
add
inc
mov
and
iret
xchg
jo
data16
push
out
add
arpl
cmp
pop
callw
xchg
push
dec
xor
sub
add
lock
fwait
daa
add
mov
fcos
inc
inc
xchg
imul
dec
movsb
dec
aam
or
mov
xchg
test
outsl
repnz
mov
add
add
call
fildl
pop
pop
fisubrl
mov
insl
xchg
or
ljmp
xchg
mov
shr
add
test
add
in
fisttps
icebp
add
flds
dec
inc
cmpsl
fucom
inc
pop
jl
or
sbb
and
jp
shlb
jb
pop
mov
pop
scas
in
sbb
dec
cmp
inc
xchg
mov
jnp
shrb
inc
sub
xor
add
mov
leave
inc
and
sar
mov
inc
jnp
mov
scas
cmp
dec
out
sbb
scas
notl
push
std
adc
or
and
test
jno
xor
mov
sbb
rcl
rolb
cmpsl
sbb
rorl
adc
sahf
repnz
fcompl
push
cwtl
bound
cmp
xchg
add
cli
aaa
js
mov
ret
lret
psraw
mov
mov
jge
cmp
das
aam
lcall
leave
adc
adc
pop
cmp
shlb
sysret
test
leave
orb
fdivrl
add
movsl
ljmp
add
fwait
repz
pop
mov
scas
pushf
pop
mov
int3
repnz
jl
add
mov
add
jmp
scas
jnp
add
push
repz
sbb
or
mov
mov
out
js
cli
add
std
out
rcrb
stc
pop
addb
xor
add
je
popf
push
scas
stos
cmp
inc
imul
sbb
and
mov
or
addr16
pop
mov
ret
je
add
lods
out
sub
push
in
or
sub
add
inc
mov
add
gs
enter
jbe
roll
out
popf
sbb
dec
inc
add
or
mov
shl
outsb
cmp
xorl
or
cmpsb
mov
jb
roll
outsl
jl
add
mov
mov
xor
jp
test
mov
cmp
in
imul
fmull
ret
add
sbb
popa
jne
add
and
iret
test
loopne
stc
sub
les
mov
mov
leave
pop
pop
jne
xor
xchg
filds
xchg
adc
cmp
out
mov
mov
popa
push
pop
sbb
ret
mov
jg
ds
mov
hlt
pop
xor
sub
add
ret
mov
imul
notl
imul
or
push
test
xchg
add
cs
jnp
xor
lds
mov
xor
add
mov
dec
add
xchg
jmp
addr16
nop
test
push
add
cmp
ss
adc
inc
aas
and
pop
mov
fldenv
ss
fs
cmp
xor
arpl
adc
mov
cld
addl
rcrb
pop
paddsw
add
inc
lahf
jne
sti
rol
add
aas
mov
stos
jg
add
add
dec
adc
xchg
add
in
mov
nop
cmp
add
out
sbb
mov
push
pusha
or
add
push
lret
adc
adc
aas
add
negb
push
mov
fldln2
loope
imul
xor
xor
add
cwtl
xor
add
or
lret
scas
ss
enter
fwait
pop
xchg
sahf
mov
aaa
mov
sbb
pop
mov
in
or
adc
movsl
sub
ja
clc
inc
lahf
movb
adc
mov
add
mov
push
jl
add
push
xchg
test
add
lods
dec
sbb
call
add
dec
popl
adc
shlb
cmp
add
es
lret
fldl
dec
pop
add
push
add
loop
dec
pusha
xchg
add
sbb
insb
rcll
mov
mov
pop
in
sub
out
xchg
add
roll
out
ds
icebp
xchg
jo
add
mov
dec
outsb
std
dec
adc
add
call
fcmovb
nop
sbb
mov
outsl
jne
rcll
in
sub
and
or
jle
or
sarl
test
shlb
pop
loopne
add
daa
jmp
test
std
mov
add
dec
mov
out
jno
jns
pop
fsubl
cmp
pop
lret
in
pusha
cmpsl
es
mov
iret
lea
cld
mov
add
mov
xor
jge
test
nop
xor
push
cld
cmp
inc
lret
and
add
lock
add
enter
and
cmp
xor
faddl
jmp
in
flds
addb
gs
lahf
roll
mov
int
adc
mov
call
stos
jae
add
daa
sbb
pop
add
adc
add
insb
push
add
cwtl
pop
fdivrl
cmp
add
jb
jmp
xchg
dec
mov
or
mov
add
push
push
inc
add
cmpsl
cmpb
test
loopne
sub
add
mov
or
into
ljmp
add
lret
test
loop
mov
jmp
add
xchg
popf
hlt
add
arpl
push
js
pop
data16
add
jne
jg
stc
mov
pop
xchg
loopne
push
fnop
and
mov
xor
pop
add
jne
cmp
xchg
and
mov
adc
in
jge
add
int3
cwtl
adc
rcl
xor
shl
jae
mov
or
jne
pop
add
icebp
aas
dec
xchg
and
adc
jo
add
and
test
popf
ja
xor
add
rolb
cmp
inc
xorb
jnp
add
scas
fiaddl
daa
push
dec
lods
jmp
rcr
inc
xor
cmpsl
ljmp
push
pop
lock
mov
aam
and
mov
lods
cmp
sbb
test
mov
les
mov
mov
jnp
cld
add
sbb
mov
sahf
mov
fadd
ret
mov
sbb
mov
push
pop
push
xchg
pusha
lahf
add
mov
cmp
dec
add
mov
addb
lods
movq
sar
loopne
or
sbb
mov
cmp
insb
fimull
sbb
push
loop
arpl
testl
jp
pushf
mov
data16
aam
sub
lds
shll
stos
in
dec
cli
jmp
cmovb
iret
loopne
gs
cmp
push
lcall
sti
dec
and
out
xchg
add
js
cmp
jnp
xor
fisubrl
or
rolb
in
pop
xchg
call
adc
add
pop
insl
ret
dec
pop
aam
adc
xchg
lret
movsl
mov
push
add
mov
mov
inc
mov
loope
or
ret
popf
add
inc
jbe
das
add
mov
in
ret
xchg
mov
loopne
cwtl
or
rolb
lock
or
sbb
aam
ja
sbb
add
cmp
mov
dec
push
add
addb
call
add
mov
addl
mov
icebp
repz
and
add
push
les
or
loop
in
loope
sub
add
mov
push
icebp
je
insb
in
lahf
add
cltd
xor
fisubrs
inc
aas
adc
adc
add
scas
sahf
mov
call
rcll
jl
clc
roll
jmp
cmp
push
ja
ljmp
adc
fs
pop
and
outsb
mov
imul
and
out
xchg
or
mov
loop
inc
in
add
lock
push
dec
pop
dec
add
pop
outsb
xor
pop
popa
inc
or
sbb
div
stos
add
push
dec
mov
aas
mov
inc
les
adcl
jnp
fistpll
lods
xchg
cmp
push
mov
push
sub
adc
push
xchg
js
add
push
jle
add
jecxz
jmp
loop
fwait
out
mov
add
loope
arpl
cmc
pop
dec
add
out
mov
push
lret
add
or
add
pop
mov
jge
and
rorb
or
add
push
sbbb
pop
cmpsb
je
sub
mov
popf
adc
push
das
or
bt
rclb
cwtl
adc
push
lds
add
and
lahf
adc
cmp
add
xor
imul
dec
add
xor
inc
testb
bound
sub
xchg
in
mov
push
add
inc
push
dec
mov
add
test
ret
add
js
fwait
sti
or
ja
loop
int3
stos
stc
lret
xor
ds
jae
xor
mov
pop
fsubs
pop
push
sbb
inc
lahf
xor
pop
mov
mov
enter
pop
mov
loopne
jno
push
add
mov
cld
add
cs
scas
sbb
add
orl
sub
in
cltd
xchg
out
decl
icebp
mov
cmpxchg
mov
insl
mov
clc
sub
sbb
inc
jl
pop
fsts
fwait
inc
popa
pop
lcall
loope
jo
mov
test
mov
mov
call
imul
mov
je
mov
mov
add
lds
xor
push
es
jmp
enter
lret
movsb
movl
jo
add
stc
movsl
shrb
fxch
add
pop
sub
repnz
movsl
data16
dec
std
pop
pop
or
sbb
dec
jmp
fsts
fwait
pop
sbb
sbb
add
std
mov
mov
mov
add
push
sub
push
movzwl
sahf
int3
addr16
mov
inc
imulb
popf
pop
imul
pop
icebp
loop
jo
test
lods
and
push
mov
subb
mov
in
sahf
scas
arpl
aad
lret
popa
testb
add
lock
inc
lds
mov
sub
stc
add
push
lea
testl
fadds
add
in
jo
pop
adc
pop
aad
add
mov
test
jbe
cmp
or
lea
jecxz
add
mov
push
push
sub
inc
jp
orb
add
cmp
inc
add
or
jae
add
insl
fidivs
jge
test
push
add
cltd
inc
imul
xlat
inc
xorb
pop
out
cwtl
in
sub
xchg
adc
push
jl
mov
jp
inc
adc
lds
add
push
pop
jno
cltd
sub
add
sbb
out
lret
jo
add
das
and
loopne
stos
add
mov
in
aas
fwait
jge
cld
cli
dec
and
add
inc
pop
and
arpl
lods
mov
fisubrs
add
jecxz
pop
js
cmp
fdiv
pop
inc
es
aam
adc
mov
dec
cmp
shlb
push
or
and
cmp
xor
pop
add
mov
test
shrl
dec
inc
sbb
and
dec
add
or
push
inc
mov
add
push
jns
test
pop
ljmp
add
push
lcall
adc
sbb
mov
mov
iret
ds
icebp
or
mov
enter
inc
dec
adc
out
sub
decl
sub
add
add
push
dec
out
xor
sbb
aas
out
add
push
jo
pop
inc
lods
and
pop
push
mov
fcomps
pop
aaa
cli
enter
cmp
cmp
add
lds
sub
aad
int
insb
jecxz
mov
ret
js
lahf
add
mov
adc
sub
ljmp
leave
dec
sbb
mov
fimuls
xor
mov
cli
pop
mov
add
xlat
hlt
push
pop
add
je
mov
call
dec
gs
xchg
scas
mov
stc
pusha
push
sub
cmp
insb
aas
xlat
mov
test
cli
dec
cmp
xchg
xor
sub
pop
sub
leave
fstps
add
pusha
sbb
mov
cmp
add
outsb
sub
and
jno
into
sbb
jnp
push
mov
ror
out
dec
sbb
test
fimuls
jg
xchg
call
adc
jb
subb
in
in
add
jno
cwtl
cld
jmp
test
das
cmpsl
fisubl
lahf
sub
add
enter
cmpsl
add
and
outsb
fcmovnbe
das
ret
mov
test
pop
xlat
aas
rcll
push
jnp
pusha
add
xchg
int3
dec
jp
sub
ret
mov
add
mov
push
mov
andb
add
nop
push
push
pop
mov
iret
loopne
inc
std
or
jo
fs
in
call
add
adc
inc
jmp
test
sbb
cli
pop
mov
adc
in
loope
mov
mov
ret
inc
add
pop
inc
jl
jecxz
adc
hlt
roll
fwait
or
sub
mov
aaa
jmp
jecxz
test
add
xor
or
inc
cmp
mov
mull
dec
add
pop
xchg
cli
pop
xor
in
add
push
sahf
sub
filds
cmp
add
outsl
test
lret
add
testl
and
adc
and
mov
sub
add
mov
pop
jecxz
repz
pop
jl
mov
mov
int3
aas
jmp
xchg
xor
mov
imul
mov
andb
dec
add
or
cmp
popa
inc
push
push
push
outsb
sbb
pop
popf
push
add
andl
mov
add
std
ss
push
fs
cld
inc
add
sbb
bound
dec
push
aam
push
outsl
dec
popa
sarb
adc
out
and
insl
imul
mov
push
mov
rorl
outsb
pop
out
cmpl
sub
mov
sbb
pop
or
xchg
scas
mov
add
sub
jb
outsb
in
add
inc
mov
and
or
jb
cmp
jae
mov
add
aas
xchg
jne
addb
xchg
sub
movsb
movsl
pop
add
cmp
jnp
push
mulb
add
or
adc
pop
lcall
jnp
fs
adc
mov
lods
fisubs
pop
add
pop
cmp
loope
sub
sbb
rorl
inc
xor
data16
lods
sbb
jae
dec
inc
dec
mov
dec
adc
add
fdivs
jle
mov
pop
mov
lahf
lcall
ss
in
out
add
adc
dec
add
test
imul
mov
std
push
arpl
fsubrp
jnp
add
loop
xor
push
jg
push
cmp
fildl
xchg
andb
icebp
add
fs
jl
fnstsw
andb
scas
adc
leave
pop
push
cmp
ret
and
addr16
add
mov
add
nop
cmp
adc
add
loope
push
add
xchg
daa
adc
push
and
sub
add
sbb
pop
inc
idivb
addr16
or
jl
add
add
dec
lds
mull
je
ret
testb
mov
push
std
cmpsl
loopne
jl
add
and
pop
lret
adc
pop
popa
xchg
mov
sahf
add
xor
loope
or
mov
push
pop
mov
outsl
jae
inc
dec
xchg
pop
inc
pop
mov
fcmove
xor
fildl
aas
fbld
mov
repz
push
loop
aam
sub
push
hlt
mov
or
enter
sbb
out
jnp
push
mov
add
in
pop
push
or
aad
and
outsl
mov
jmp
fs
add
fisttpll
std
xlat
scas
pop
add
sbb
mov
cltd
mov
xor
into
pop
add
ficoms
push
fisttpl
xchg
out
and
sbb
or
js
movsb
test
scas
inc
lds
fmuls
dec
xlat
xchg
ret
ret
pop
mov
inc
fisubs
xor
aad
lds
lret
insb
add
mov
outsb
pusha
int3
jge
jne
add
imul
add
xor
add
mov
cmpl
ja
sub
lret
arpl
jp
lods
pop
inc
stos
in
lock
fldt
nop
xor
cld
or
test
jg
and
pop
fiaddl
push
into
testb
mov
xor
mov
sub
cmp
inc
push
push
xchg
enter
xor
add
push
lret
arpl
push
add
adc
mov
lock
test
and
sbb
push
mov
nop
iret
add
adc
xchg
mov
jo
add
cmpsl
aaa
out
stc
cmp
jno
sub
aas
mov
nop
js
push
cld
std
add
iret
sbb
add
nop
xchg
jp
mov
or
addr16
push
and
add
cwtl
mov
repnz
push
cmp
ss
fcompl
in
pusha
lret
je
add
bound
sub
push
lock
inc
jle
mov
add
pop
xlat
mov
mov
sub
popf
inc
pop
add
pop
jnp
inc
repnz
in
movsl
cmp
outsl
cmp
mov
je
jo
add
leave
cwtl
add
insl
shrb
aas
bound
call
dec
inc
dec
pop
aaa
add
jno
jmp
mov
adc
mov
pop
push
mov
add
cmp
aaa
dec
add
faddl
mov
aad
pusha
sbbl
sbb
add
fidivrl
cmp
jecxz
pop
add
mov
test
add
les
cs
add
sub
rcrb
jnp
sbbb
push
lea
add
lds
pop
popa
push
lods
add
jns
jae
sbb
push
mov
out
sub
shrb
or
lds
aas
loope
and
and
jl
ret
mov
mov
add
out
insl
add
ds
add
add
adc
popf
cmp
incl
insl
add
cmp
in
pop
add
popf
aam
cs
ss
add
imul
hlt
xlat
xor
push
add
jecxz
dec
xor
cmpsl
fistpll
pop
xlat
hlt
inc
add
je
test
xorb
loopne
and
add
sbb
add
or
add
jne
lds
and
xchg
add
add
jb
xchg
lock
add
ljmp
orl
ljmp
out
push
pop
lret
xchg
scas
sbb
add
nop
sahf
movsl
test
cmpsb
stos
push
mov
movsb
lahf
mov
gs
and
adcb
xlat
jno
xor
and
cmp
add
xchg
mov
outsl
push
adc
mov
bound
xor
aaa
mov
jbe
add
mov
add
int3
stos
repz
push
push
sbb
cmp
pop
rorl
add
cmp
outsb
jp
add
inc
xchg
rcr
nop
sbb
add
cmp
sbb
mov
xchg
cltd
add
adc
mov
sub
repnz
mov
je
test
lret
xor
scas
ja
lahf
clc
mov
inc
sbb
jb
or
jbe
inc
mov
add
sub
pop
call
mov
jne
ret
fstps
mov
ss
jae
dec
sub
dec
xor
mov
cmp
int
push
mov
iret
leave
jb
add
and
mov
in
add
mov
mov
loop
mov
push
in
inc
add
pop
mov
arpl
add
test
lock
es
je
fildll
pop
fcmovnu
fsubl
ja
push
cmovs
xchg
out
jns
outsb
lahf
push
bound
add
ss
xchg
ret
mov
call
pop
mov
pop
out
roll
jge
idivb
paddw
add
mov
cmp
fisubl
cmpsl
xchg
stos
shl
xor
insl
addr16
add
fldcw
shlb
pushf
lods
add
lret
dec
dec
pop
pop
stc
pop
mov
pop
pusha
and
add
fidivrl
pop
nop
mov
ss
adc
sub
lcall
addr16
pusha
out
pop
negb
add
cmpsl
testl
xchg
add
in
fwait
adc
mov
arpl
cltd
rolb
add
and
fptan
cmpsb
cmc
addb
andb
sbb
push
int
jno
mov
adc
or
mov
and
mov
nop
addr16
decl
mov
lds
mov
jle
add
xchg
pushf
mov
sti
shll
push
cmp
fcomps
and
inc
or
jle
es
adc
out
xchg
cli
fdivrl
les
dec
or
stos
cmp
loope
xorb
enter
inc
and
lretw
loopne
xlat
push
aaa
push
mov
pop
outsb
inc
or
xor
in
daa
add
xchg
push
add
mov
icebp
ret
inc
cmp
inc
pop
in
or
cmp
add
scas
shrb
mov
add
xor
or
outsl
push
or
add
shl
xchg
inc
mov
cltd
push
xchg
ds
in
push
pop
std
loope
xchg
loop
and
lock
cmpsb
dec
add
mov
sbb
xchg
imull
in
xor
xchg
aas
xchg
or
adc
cmp
testb
movsb
ja
adc
cmp
mov
pop
rorl
addb
jmp
lock
rclb
mov
bound
movsb
popf
inc
loope
das
orw
aad
add
cmp
movsl
insb
cli
fildll
xor
and
scas
js
test
stc
add
std
xor
add
mov
not
xchg
stos
adc
hlt
inc
push
add
sbb
inc
fbstp
add
dec
or
jl
jns
add
mov
push
jne
dec
jne
cmp
ljmp
lods
sub
aas
add
das
in
mov
shl
ljmp
repnz
pop
mov
mov
cmp
sub
loop
add
imul
add
lods
adc
cltd
jl
movsb
aaa
mov
add
sbb
fildl
mov
shufps
xor
pop
stos
mov
push
pop
ret
sbb
add
mov
fmull
js
loopne
add
mov
add
icebp
cmp
mov
jno
adc
cs
call
sbbb
popf
xchg
sbb
cmc
sbb
cld
jge
in
lds
add
inc
in
lret
int3
or
or
jg
xchg
and
jno
push
scas
test
push
roll
push
add
sbb
sbb
in
lea
loopne
scas
add
xor
lods
add
lea
cmc
sub
xor
cmp
aaa
scas
adc
xchg
add
push
mov
xchg
mov
add
push
in
jl
cld
mov
and
push
clc
mov
sbb
push
pop
inc
jle
inc
es
sub
subl
jnp
call
lahf
mov
call
add
dec
dec
cltd
sbb
pop
fistpll
jo
mov
cmc
and
mov
mov
xchg
mov
xor
jle
add
xchg
jge
imul
int
mov
cmp
incb
dec
xor
lret
push
add
add
mov
jnp
repz
and
out
out
push
jo
aam
fwait
add
and
enter
outsl
pop
fisttpl
jns
add
add
xchg
gs
mov
sti
ret
add
lock
add
je
push
mov
imul
out
inc
sbb
pop
hlt
add
cmc
int3
sbb
xlat
mov
add
rcr
sbb
ljmp
and
lret
mov
sbb
jno
push
lds
loope,pn
jns
dec
and
lahf
sbb
fimull
and
inc
mov
xchg
rolb
cmp
and
add
or
popa
sub
add
js
xchg
add
dec
fsubrs
test
mov
mov
cmc
dec
insb
push
popf
incl
lds
rcr
pop
add
mov
sbb
incb
lret
movsb
cli
cmp
mov
add
add
nop
sahf
push
xchg
insl
or
mov
mov
pushf
dec
xchg
add
cmp
add
xchg
rolb
les
cmp
stos
and
shrb
in
pop
add
mov
mov
dec
stos
icebp
lock
hlt
inc
add
and
push
mov
push
jg
add
lret
add
hlt
add
subl
mov
stos
mov
inc
mov
xor
fcomps
sbb
jbe
add
pop
pop
cwtl
out
lcall
dec
fdivl
pop
cmpsl
xor
and
mov
loopne
add
iret
neg
xchg
add
movsb
setle
pop
or
aad
pop
or
mov
mov
mov
and
ror
in
loop
pushf
test
fisttpll
ret
pusha
movsl
scas
sub
mov
mov
clc
pop
xor
out
lock
cmp
add
dec
sbb
adc
pop
jecxz
mov
dec
hlt
out
shlb
fisubl
clc
sbb
popf
add
cmpl
loope
add
inc
xchg
repnz
add
shlb
cmp
pop
fnsave
mov
pop
add
pop
push
movsb
stos
xchg
sub
add
jmp
insb
or
push
test
nop
push
jge
imul
shr
mov
jbe
add
cmc
shrl
aas
stos
add
les
add
push
sub
orb
sbb
mov
repz
pop
mov
ret
mov
cld
leave
adc
dec
ljmp
insb
loopne
packssdw
rcr
pop
std
test
fisubs
enter
push
add
loope
jle
add
add
jo
shrb
mov
cli
adc
pop
imul
aaa
fs
add
add
mov
adc
sbb
mov
push
lock
add
les
pop
mov
dec
mov
mov
push
rcrb
sahf
sbb
popf
outsb
add
mov
lcall
fsubrl
cli
cmp
dec
cmp
push
movsb
popf
loopne
and
jp
xor
addb
adc
test
add
ljmp
add
mov
jae
pop
xchg
loop
lods
enter
jns
dec
cmp
and
inc
mov
xchg
mov
push
pop
jne
popa
and
test
pop
out
adc
mov
rorb
sub
push
add
clc
in
mov
imulb
outsl
popl
movsb
addr16
mov
or
push
aam
and
enter
and
add
jnp
mov
aas
ja
cmp
add
repnz
in
mov
iret
pop
lock
pop
loopne
hlt
or
sub
test
add
adc
xor
jo
inc
lds
sub
jno
mov
mov
mov
jp
add
test
nop
xlat
gs
dec
jns
add
in
mov
mov
stc
aaa
call
or
bnd
mov
add
dec
test
xchg
mov
fucomp
sarl
and
add
push
inc
lahf
cmp
mov
rorb
sub
push
push
push
pushf
cmp
xchg
mov
js
mov
cli
cli
rolb
pop
insb
pop
test
in
and
mov
xchg
push
adc
xchg
jmp
cs
dec
std
lret
add
push
ret
push
test
adc
pop
fstps
adc
mov
loopne
xlat
mov
add
popf
sarb
ret
jbe
add
lods
outsb
xor
mov
jmp
ja
sbb
push
adc
out
pop
ret
shlb
cmpsl
push
xor
pop
sub
mov
add
or
push
testb
lock
add
ror
std
push
mov
jmp
in
daa
ret
xor
jge
stc
cwtl
mov
add
push
fcoms
and
add
stc
js
sbb
insb
mov
mov
negb
loop
notl
cmp
pop
in
add
es
cmp
lea
dec
lahf
int
lds
inc
pop
pop
std
add
ss
xor
pushf
inc
push
cmp
push
outsl
dec
xchg
mov
in
mov
mov
paddsb
add
sbb
mov
ret
mov
lds
push
inc
push
sub
add
lret
add
int
test
xor
add
cmpb
push
add
add
push
or
xor
adc
hlt
rolb
mov
sub
mov
mov
xchg
or
and
and
js
add
cmpsl
add
mov
dec
ja
jbe
push
inc
cmp
jmp
enter
add
outsb
fsub
stos
arpl
inc
mov
movsb
push
int
dec
or
xchg
lods
add
call
hlt
add
dec
push
aad
sub
sbb
jl
xchg
std
and
add
bound
mov
fildl
push
aad
inc
mov
out
dec
rol
cmp
neg
aam
xchg
les
add
fwait
ret
dec
nop
add
fisubrs
icebp
inc
add
or
adc
sub
sbb
mov
in
mov
popl
pusha
mov
call
filds
inc
cmpsl
sbb
add
les
dec
test
out
ficomps
popf
test
std
subl
jge
or
ficoml
roll
lock
mov
mov
xchg
js
sbb
subl
cmp
cmp
sbb
in
call
outsb
or
lods
add
bound
dec
inc
lcall
jp
imul
add
push
nop
push
test
jo
ret
jge
mov
inc
mov
cli
sub
add
xchg
jne
mov
inc
add
insb
xchg
test
sbb
add
xchg
add
ftst
or
addb
aam
cmpsb
rclb
sbb
push
adc
push
cwtl
movsb
cmp
add
movsl
mov
imul
add
repz
xorl
lock
cwtl
push
mov
mov
or
pop
push
and
push
adc
jge
punpckhwd
into
notl
add
scas
jle
in
mov
jbe
jnp
add
pop
daa
and
popa
inc
push
jo
add
nop
imul
insl
pop
push
inc
mov
jge
mov
popf
pop
shl
movsl
xor
xchg
adc
test
fsubl
movsl
rcl
sub
jne
cmc
lock
or
inc
add
inc
je
pusha
fdiv
add
sar
pop
repnz
mov
loope
adc
add
pop
dec
clc
mov
xlat
mov
and
lods
mov
nop
daa
jmp
add
sbb
gs
inc
jg
jecxz
repnz
add
and
sahf
and
outsl
loope
and
jle
shlb
inc
punpckhbw
movsb
push
sub
pop
jecxz
cmp
popf
mov
rclb
pop
fnsave
pop
ror
sbb
js
add
dec
push
mov
hlt
fwait
add
cmpsb
in
imul
add
xor
mov
mov
dec
ljmp
dec
add
xor
add
sub
push
add
movsl
in
and
mov
ds
mov
cmovge
xchg
add
add
inc
scas
add
mov
mov
mov
cltd
add
or
jp
push
pop
dec
jge
pop
or
push
jge
dec
dec
in
and
je
loop
lret
fdivr
pop
cmp
add
shll
sbb
and
faddl
sbb
jle
xchg
mov
xor
pop
ljmp
call
out
jecxz
out
mov
and
std
add
shr
or
cmpb
jno
mov
movsb
icebp
dec
push
mov
test
imul
fs
movsb
xor
dec
and
inc
mov
ffree
pop
pop
pop
add
pop
cmpl
and
call
js
add
adc
insl
add
lahf
xchg
test
xor
js
add
sbb
fisttps
lock
leave
inc
add
aaa
cmp
pop
scas
imul
ja
adc
cwtl
fcompl
dec
aas
xchg
fcompl
and
insb
test
or
lret
cmpps
mov
push
fwait
je
xor
add
mov
stos
mov
mov
add
fsubr
cmp
and
popa
adc
aad
pop
addl
lock
xchg
daa
or
outsb
lock
mov
inc
pop
sahf
add
pop
pop
adc
sbb
add
into
dec
adc
or
lock
faddl
mov
repz
jo
add
lea
dec
push
mov
pushf
jmp
sub
jnp
inc
movb
cli
mov
sbb
test
mov
mov
repz
mov
fs
dec
add
mov
xchg
gs
jp
or
int
adc
fnstsw
lcall
aad
inc
jl,pt
fists
xor
inc
femms
xlat
jmp
test
mov
rol
sbb
xchg
nop
dec
cmp
bndstx
in
mov
sahf
add
or
mov
jne
cli
add
inc
faddl
add
adc
pop
mov
xor
cmc
insb
cmpsb
add
mov
gs
sbb
and
bswap
mov
add
inc
push
je
pop
and
add
test
insl
jae
pop
rorb
push
fs
inc
add
add
cmpsb
insb
ud1
mov
adc
mov
sbb
jle
aaa
add
jnp
subb
add
mov
cwtl
mov
mov
lds
add
mov
inc
js
pop
jne
test
pop
icebp
add
xchg
fwait
aas
hlt
cli
sbb
vmwrite
dec
pop
shrb
dec
addl
icebp
sub
cld
and
repnz
xor
rcll
mov
lods
out
inc
add
push
cmp
fsubs
popa
in
jb
add
cmp
push
mov
sbb
mov
add
sub
xchg
add
inc
jb
inc
fistl
jae
add
jle
and
xchg
lcall
flds
sti
in
cmp
std
xor
or
add
rol
fs
iret
jno
rcrb
add
sbb
loop
imul
add
push
shl
in
lods
sub
dec
sbb
mov
jne
repnz
imul
roll
push
add
sahf
pop
dec
out
add
aas
jo
mov
add
mov
inc
adc
sbb
ret
mov
or
push
ljmp
mov
shlb
adc
ja
add
jbe
and
lock
adc
mov
lds
sbb
cmpsb
cld
loop
verw
and
pop
add
shll
xchg
cltd
mov
xchg
mov
and
in
dec
pushw
and
popf
jge
cmp
inc
pusha
xchg
adc
sub
leave
test
adc
cwtl
and
xor
mov
sbb
aam
cli
xchg
mov
mov
lcall
int
mov
shrl
add
repnz
icebp
and
divb
out
jg
add
prefetch
or
mov
pop
sbb
in
in
inc
mov
cld
popa
cmpsb
cmp
inc
inc
sub
in
iret
jmp
fsts
mov
js
fdivs
push
add
jne
push
or
add
popa
andb
push
add
loope
int
loopne
test
in
add
sub
pop
jle
mov
mov
mov
enter
das
add
xor
jns
cmpsb
jecxz
lds
mov
aad
std
out
adc
sub
test
and
add
outsb
inc
add
test
rsqrtps
fidivrl
mov
fwait
nop
movsb
repz
add
rorl
pmaxub
cli
sbb
mov
add
xor
add
jbe
adcb
and
add
outsb
sbb
inc
adc
repnz
jne
mov
add
mov
push
mov
pop
or
jb
inc
enter
push
xchg
add
inc
and
dec
loopne
xor
mov
imul
fs
sarl
adc
ret
cwtl
out
rorb
aaa
or
mov
loop
add
ja
arpl
iret
cmp
lea
dec
hlt
cmp
clc
add
aas
insb
pop
movsl
sub
add
xor
jae
mov
flds
rcrb
add
mov
adc
add
cmp
jno
xchg
scas
gs
push
xor
mov
sbb
sbb
mov
divb
adcl
ret
ss
mov
shlb
mov
lds
add
xchg
jge
or
xchg
mov
push
xorl
cwtl
sub
add
jl
icebp
sti
out
add
or
add
inc
dec
push
pop
dec
cmp
jno
mov
sti
xchg
xor
pop
push
orb
dec
lock
mov
into
or
add
sub
fistpll
add
loopne
mov
ds
add
in
push
int3
sti
negb
add
sbb
add
mov
sub
push
mov
fldenv
int3
out
add
call
cld
clc
mov
add
xor
lahf
out
add
imul
ds
repnz
addl
mov
pusha
mov
repz
outsb
or
cmpsl
cmc
sbb
lock
popa
mov
jnp
je
sti
add
sbb
sbb
dec
or
push
jl
add
sub
les
addl
adcb
aas
add
jno
pop
sbb
mov
fsubl
sub
rorl
push
dec
add
or
add
aam
movb
xor
jge
ret
test
add
aad
stc
add
inc
fdivl
int3
add
out
mov
pop
es
push
or
out
fsubs
jne
add
outsl
in
add
pushf
xorb
and
add
stos
inc
nop
lds
in
daa
xchg
xchg
mov
xor
pop
ljmp
mov
fiadds
aaa
bswap
enter
in
add
stc
iret
dec
mov
test
xorb
add
out
mov
xor
cmp
addl
call
test
add
mov
aam
add
out
in
inc
xor
jns
add
fldenv
add
test
testb
cwtl
ret
mov
out
cmpsl
add
push
add
and
add
jbe
cmpsb
imul
sbb
mov
mov
mov
test
inc
pop
fimull
add
push
cmc
add
je
xchg
ds
shrb
jns
add
loopne
movb
lock
cvtdq2ps
add
ds
jbe
shr
cwtl
and
subl
adc
add
jnp
ficoms
enter
imul
sub
rorl
nop
aas
pop
inc
jne
inc
movb
add
mov
sub
cmp
cmp
pop
and
mov
pusha
repz
jmp
test
insb
sbb
lcall
mov
mov
cmp
dec
stc
out
jno
push
xchg
ret
sti
loopne
push
out
push
add
jns
mov
in
push
dec
andb
std
add
jno
js
adcl
mov
add
mov
icebp
sbb
sbb
mov
data16
xor
pushf
pop
adc
jb
add
xchg
pusha
sbb
outsl
fstps
aam
xorl
xor
cmp
in
out
mov
sete
sub
pop
push
aas
rol
insl
lods
push
add
fldl
jbe
xor
dec
sbb
push
add
mov
das
hlt
mov
out
and
je
add
mov
fnstcw
mov
adcb
loope
lock
pusha
mov
push
xor
add
cltd
mov
jo
add
sbb
dec
lds
in
add
adc
jmp
jge
sahf
repnz
add
arpl
jl
cs
mov
adc
roll
pushf
in
cld
aas
sti
testl
inc
iret
jne
add
push
sub
shlb
repz
mov
dec
jns
add
cwtl
dec
out
add
loopne
pusha
inc
add
inc
or
sbb
das
pop
and
lret
outsl
add
push
out
cs
sarb
adc
mov
cmp
add
les
lea
add
dec
push
inc
data16
cwtl
mov
test
add
mov
js
test
lcall
xchg
mov
andl
mov
dec
cmp
loop
push
mov
pop
pop
add
into
jo
mov
data16
add
js
inc
push
push
dec
mov
jb
popa
pop
iret
fisubs
cwtl
outsl
repz
mov
fs
add
xchg
nop
clc
movsl
push
add
leave
repz
cld
icebp
rol
add
mov
xor
add
dec
out
rcll
xchg
add
ret
jbe
jno
mov
cmpsl
add
aam
mov
inc
cmp
js
lods
popf
stos
mov
xor
in
mov
push
roll
outsl
mov
cmc
add
mov
push
sbb
shrb
jmp
out
dec
pop
pop
xchg
fwait
add
cmp
cmpsl
test
stc
daa
decb
in
scas
add
mov
lret
add
mov
cmpsl
jecxz
pop
jle
ljmp
ja
sub
adc
xlat
cmc
out
pushf
aas
pop
add
out
fbstp
cmp
and
cwtl
mov
les
dec
add
rclb
flds
cmp
mov
pop
bound
add
test
push
dec
in
xchg
pop
incl
jge
pop
add
ljmp
or
lea
sarb
lret
sbbb
mov
add
cmp
or
inc
shrl
test
add
or
and
jp
scas
xor
sbb
outsb
pop
jmp
push
cmp
cmpb
sub
scas
ss
xchg
adc
jmp
dec
stos
add
dec
lds
jno
adc
add
mov
lods
insl
fsubl
mov
push
dec
jb
cmp
lcall
shlb
jmp
sbb
hlt
add
push
fcompl
or
cmpsl
mov
in
add
fdivrs
mov
shrl
add
add
pop
jnp
add
push
pop
stc
inc
ja
add
movsb
insl
icebp
cwtl
insb
xchg
ds
push
mov
sub
pop
xchg
movsl
fidivl
pop
add
outsb
jns
push
or
sub
and
xchg
popa
jg
pop
add
xchg
add
add
loop
push
pop
scas
mov
hlt
cwtl
add
outsb
imul
pop
in
xchg
ja
add
push
lret
mov
mov
and
shrb
xchg
mov
gs
add
add
push
sub
test
pop
add
sbb
in
rclb
add
lock
mov
pop
arpl
jmp
fnstenv
iret
dec
push
pusha
test
cmpsl
ret
cmc
fsubl
push
pop
icebp
jb
add
sbb
jle
jge
add
movsb
mov
ja
and
ffreep
dec
jecxz
dec
ja
pop
jns
adc
jmp
ds
pusha
sahf
jmp
add
repnz
cmp
mov
pop
hlt
mov
sub
dec
data16
cmp
lret
xchg
add
lcall
shlb
push
les
bound
inc
cli
fwait
adc
lcall
add
daa
push
inc
mov
inc
sub
xchg
adc
in
arpl
xchg
lcall
inc
outsb
js
sahf
fmull
or
popf
dec
add
cmpsb
cmpsl
sbb
xchg
pushf
push
ud1
mov
cltd
out
push
das
aas
jb
adc
cmp
add
pushf
lret
cmpsl
mov
stos
xchg
add
je
clc
movsb
mov
adc
push
or
shlb
and
xlat
jo
or
jg
outsl
add
sub
imul
xor
adc
or
mov
dec
mov
add
mov
mov
scas
xchg
rclb
inc
mov
lahf
ja
hlt
js
adc
mov
add
dec
jb
fidivl
push
ret
jno
fsubrs
sub
pop
pop
dec
or
pop
xchg
sarb
add
cmp
dec
sahf
add
fnstcw
lds
aas
shll
test
mov
or
orb
adc
daa
push
cmp
imul
push
and
sti
out
xor
cmp
lods
add
pop
jnp
popa
out
repz
and
add
add
ja
add
lods
jl
test
add
fnstsw
inc
inc
lret
push
mov
or
sbb
orb
adc
xchg
in
int
inc
pop
in
pop
push
jo
or
or
ja
or
popf
add
sub
mov
fistpll
jbe
xchg
rclb
xor
add
mov
mov
lret
bound
mov
cmp
sbb
cmp
pop
inc
dec
sub
shlb
add
bound
xor
xchg
dec
ljmp
scas
rorl
push
xor
adc
lret
orl
add
jecxz
daa
push
dec
or
jl
or
test
lcall
add
xor
or
pop
mov
flds
xor
cwtl
xor
hlt
mov
cmp
dec
dec
push
xor
jp
decl
cld
das
add
and
add
movsb
or
push
lods
push
xchg
rorb
xchg
aas
add
or
fcomi
mov
std
test
push
add
in
addr16
in
cwtl
mov
xchg
cmp
xchg
aad
and
int3
xorb
sbb
push
pop
cmp
iret
xor
push
cld
and
nopl
pop
int
jne
push
xchg
mov
pop
outsb
add
out
movsb
add
ja
stos
jge
jmp
movsl
enter
js
add
adc
jle
cmovl
cmp
mov
mov
push
inc
pop
idiv
mov
out
push
add
bound
sub
scas
fs
add
add
stos
push
xor
mov
add
ficoml
test
out
add
in
mov
xchg
cmp
jmp
inc
xor
add
cli
popf
in
mov
push
dec
sub
and
in
ja
std
fdiv
add
dec
data16
rcrb
cmp
gs
and
jle
sub
xchg
mov
cmpsb
scas
mov
pop
adc
jns
add
cmpl
dec
push
sbb
cmp
jle
xchg
fdivl
loop
xchg
popa
xchg
xchg
movl
sbb
scas
mov
sbb
ljmp
adc
add
and
sbb
ljmp
or
add
les
add
pop
mov
add
and
xchg
inc
xlat
inc
xor
push
cmp
into
xor
push
cmp
dec
adc
stos
mov
jae
adc
mov
mov
sti
fcompl
add
rcll
push
out
cld
adc
jno
add
fs
out
mov
into
mov
adc
cmovns
mov
mov
fwait
or
cmp
es
pop
ret
mov
lea
and
add
cmp
fmull
and
sbb
xor
mov
mov
xor
jle
and
push
nop
xor
sbbb
mov
cmp
rolb
mov
adc
cmc
stos
roll
mov
xchg
leave
aad
xchg
js
add
push
and
into
pop
out
mov
popa
popw
sub
hlt
out
out
fiaddl
outsl
push
adc
dec
pop
jmp
add
ds
cmp
nop
sahf
hlt
fildl
xchg
or
adcl
sub
inc
lcall
mov
or
movb
mov
dec
mov
push
or
je
mov
mov
out
call
bound
pusha
dec
adcb
and
jae
push
ror
jmp
lea
add
aad
data16
push
xchg
jmp
push
aam
dec
sbb
dec
pusha
jno
sub
mov
dec
xchg
sub
test
add
pop
insb
push
mov
add
adc
ljmp
push
add
lods
in
add
lock
test
mov
cmp
add
cli
mov
cmp
add
ss
ljmp
dec
add
jno
pushf
ds
adc
cmp
xchg
imulb
clc
mov
imul
pop
pop
and
aad
ds
mov
inc
cld
popa
sub
lret
add
dec
movb
inc
jge
add
popf
jl,pt
xchg
add
cmp
add
rol
ret
add
outsb
enter
add
sbb
scas
inc
dec
iret
mov
sbb
jmp
xor
testl
push
insb
adc
out
fcoms
cmp
lcall
sbb
aas
repz
mov
cmp
insl
pop
and
pop
inc
dec
cmp
jl
add
jns
nop
dec
cmp
repz
xlat
pop
xor
jg
pop
movsl
push
pop
dec
iret
pop
loopne
and
out
add
xlat
xchg
imul
xor
mov
std
mov
add
push
dec
hlt
jmp
in
sub
mov
test
and
imul
sbb
cmp
pop
xchg
repnz
jle
push
lcall
jno
cmp
out
ds
add
mov
mov
add
lock
lds
cmp
xor
and
xchg
lods
enter
add
sub
stos
pmuludq
and
in
mov
or
jmp
or
into
aad
or
in
mov
and
push
inc
sbb
call
jne
movsb
mov
pop
lods
stos
pushf
ret
push
cmp
mov
into
inc
in
js
cmpsl
aad
cmp
lock
mov
add
loope
out
cmp
rolb
mov
mov
jne
or
jbe
pop
xchg
repnz
mov
mov
es
push
inc
int3
mov
ja
xor
mov
shlb
mov
add
xor
add
into
sti
fwait
xor
js
fs
outsl
jo
add
and
lret
mov
test
push
movsb
add
or
add
sbb
pop
lret
mov
fsubs
sub
jo
outsb
push
xlat
jne
xor
jp
ret
lcall
xchg
mov
or
inc
dec
mov
jno
fmull
add
std
pop
mov
add
bnd
pop
flds
lds
and
es
xor
push
repnz
jecxz
add
cmp
or
mov
mov
es
push
test
add
pop
sbbb
and
add
inc
push
arpl
rcrl
add
negb
mov
leave
mov
or
mov
and
popa
add
arpl
lods
inc
fldenv
jle
sbb
adc
xchg
sti
cmp
and
sub
mov
add
jl
cmp
cmp
xor
nop
pop
jo
push
incb
sbb
sub
sub
add
test
inc
mul
add
fsubr
stos
pusha
and
bound
adc
dec
xchg
mov
int3
fmull
mov
out
sbb
lods
add
inc
je
add
jno
jecxz
out
mov
cld
iret
pop
pop
adc
cmpsb
pop
pushf
cs
push
add
test
push
rol
lods
jne
mov
nop
pop
cltd
bound
hlt
rcr
add
or
loope
xchg
sub
adcb
leave
imul
ds
idivb
lahf
outsl
stos
stos
add
sub
xor
cmp
cmp
sub
pop
mov
lock
mov
cmp
outsb
pop
jbe
test
mov
dec
and
mov
cli
and
dec
loopne
rcrl
gs
pop
adc
cltd
mov
xchg
xor
rorb
mov
xor
imul
cli
pop
add
sti
add
jmp
push
cmpsl
pusha
stos
sub
or
aaa
pop
cltd
pop
test
add
inc
out
dec
push
dec
les
mov
fiaddl
shlb
cmpsl
jnp
testl
jle
idivb
incb
lds
dec
ret
dec
push
or
pop
adc
rorb
sub
and
out
or
pop
out
pop
fsubs
add
in
inc
sbb
insl
sahf
add
jp
int
jns
dec
pop
cmp
push
jnp
jg
add
enter
cmc
ret
cmp
xchg
sub
dec
cmp
xor
push
sbb
add
ret
pushf
ja
add
das
int3
jo
add
rorb
fistpll
mov
dec
flds
push
loopne
xor
xchg
jmp
mov
mov
mov
push
lcall
add
mov
mov
inc
cld
clc
mov
xor
xor
jmp
add
addr16
mov
das
pop
repz
pop
cmpb
xchg
lods
in
inc
cmp
cwtl
mov
dec
icebp
clc
repz
popa
lcall
add
pop
sub
les
jp
inc
loopne
repnz
pop
jo
jno
sahf
int3
jle
inc
add
sbbl
lods
mov
mov
fs
xchg
push
jl
arpl
fdiv
enter
push
cli
jg
les
mov
test
push
add
clc
mov
jns
push
add
outsl
icebp
cli
pop
mov
or
movsl
stos
frstor
aam
add
inc
std
subb
iret
insl
pop
pop
add
sti
popf
mov
test
stc
mov
add
je
or
jecxz
push
adc
imul
mov
xchg
adcb
add
push
sub
lea
pop
cmp
push
imul
int
loopne
scas
dec
or
in
dec
add
and
cltd
dec
add
pop
adc
pop
adc
fnstsw
sbb
sbb
jg
adc
aaa
mov
in
and
cmp
sub
add
xchg
scas
jecxz
mov
into
xchg
fcomi
repnz
sbb
mov
and
ret
add
push
pandn
ljmp
mov
call
add
bound
cmpsl
add
ljmp
sub
inc
outsb
repz
jno
or
cmpsb
xchg
jp
test
push
add
cmp
mov
jno
inc
in
movsl
mov
jo
test
popf
add
pop
mov
xor
enter
xor
pop
adc
sarb
mov
jmp
pushf
mov
in
js
add
in
out
sar
adc
xchg
push
dec
push
mov
fs
int
jmp
sub
mov
and
add
gs
add
sub
test
sbb
fiaddl
inc
int
or
cmp
movsb
js
sbb
mov
mov
orb
dec
std
jge
add
mov
lods
mov
fistl
dec
inc
repz
sahf
xor
lods
subl
adc
mov
mov
repz
jle
pop
fistpl
add
jl
lret
push
and
add
aad
iret
sbb
mov
add
cmp
cltd
cmpsb
jp
add
dec
push
and
insb
and
cmc
rorl
mov
adc
mulps
dec
xchg
add
sub
call
ljmp
jmp
lret
orl
push
out
pop
ljmp
or
rol
add
push
cs
hlt
loopne
pop
jg
sub
push
push
xchg
cmp
xor
jecxz
inc
ret
pop
shl
add
popf
out
mov
push
les
out
scas
add
dec
sbb
call
cmp
ror
add
fwait
lret
dec
mov
jno
mov
nop
lods
dec
sub
push
pushf
add
mov
xchg
adc
add
xor
add
sub
in
sub
jge
push
fists
outsb
mov
roll
lret
xor
mov
pop
sub
push
adc
push
jge
mov
adc
sub
inc
pop
sbb
negb
jns
je
push
add
sbb
js
pop
push
add
aam
adc
scas
or
mov
inc
icebp
mov
xchg
cwtl
repnz
adc
scas
sbb
push
and
pop
shr
adc
imul
ud0
xor
das
ja
inc
notb
sbb
add
pop
ret
or
out
movsl
cmp
subl
in
iret
add
gs
insb
ja
add
adc
rolb
insl
mov
push
xor
enter
jb
add
xchg
jg
sbb
dec
ja
cmc
addb
and
xchg
inc
push
adc
or
or
cmp
push
add
mov
add
jae
shrl
das
add
lea
inc
rcrl
icebp
and
adc
and
xchg
jge
popa
adc
decb
or
mov
call
push
pop
pop
add
push
xor
lret
add
out
mov
pop
test
aam
data16
nop
pop
inc
push
add
xchg
pop
ljmp
out
push
pop
mov
add
cmp
fcomi
test
jo
jne
add
mov
je
leave
inc
inc
or
inc
stc
or
out
lock
add
sbb
mov
int
cmp
cmp
and
test
fstl
xor
add
lret
hlt
add
dec
inc
addr16
sbb
add
dec
xlat
mov
fisubl
cmpsl
cwtl
rolb
shl
add
or
test
ret
rcrl
inc
mov
add
cmp
or
in
pop
cmpsb
mov
push
or
push
push
jle
je
or
shrl
push
std
jno
pop
mov
outsb
pusha
lods
arpl
add
imul
add
ret
mov
add
push
movsb
inc
ds
xor
in
loopne
add
sbb
lea
sub
mov
mov
imul
add
inc
add
xor
pop
add
or
jbe
pop
nop
sub
je
loop
dec
dec
jo
enter
test
add
inc
loopne
jmp
xchg
or
or
gs
enter
and
repz
js
push
and
arpl
dec
shl
addl
call
les
aas
fimull
bts
fdivrs
roll
imul
push
jns
or
xor
movsb
and
mov
add
scas
dec
sbb
faddl
jns
sahf
loopne
xor
dec
sldt
pop
inc
pop
push
je
add
cwtl
rcrb
mov
out
mov
scas
xchg
add
sub
mov
arpl
mov
outsb
add
sbb
and
lds
ror
add
cli
push
sbb
pop
js
fiadds
clc
enter
sub
jns
movsl
xchg
add
mov
aaa
sub
add
mov
out
xchg
pop
and
out
icebp
add
inc
lods
push
add
clc
pop
add
scas
fisubrs
push
movb
fisttps
lahf
jge
stos
add
js
out
sbb
add
fmull
arpl
mov
jb
movsb
mov
fisubrl
loopne
icebp
out
and
rcl
mov
xchg
xor
xchg
xor
add
fisttpll
xchg
js
cmp
jno
test
mov
mov
outsl
inc
add
mov
int
sbb
sbb
or
mov
clc
xor
andnps
movsb
xor
jge
rclb
addr16
inc
xor
mov
cmp
mov
xchg
aaa
gs
ja
js
pop
fsubr
shr
lock
mov
jno
dec
jae
cld
mov
popf
out
add
scas
jp
add
inc
gs
mov
jg
popa
dec
pop
add
es
cld
add
add
add
aam
xchg
gs
sub
scas
inc
dec
add
js
jl
in
adc
cmp
popa
ss
cmp
mov
jle
jns
sbb
popf
lcall
lods
add
sbb
add
rcrb
outsl
inc
lret
ja
cmp
mov
add
in
fbld
data16
ds
dec
fdiv
hlt
xlat
push
ljmp
or
loopne
das
in
je
pusha
or
out
add
add
fbstp
add
out
stc
xcrypt-cfb
cmpsl
cmpsb
or
xchg
fldl
jae
cmp
addl
and
out
loop
inc
and
or
in
lahf
sbb
add
loopne
cmp
dec
jecxz
pop
jne
jb
sbb
mov
mov
add
in
cmc
test
and
cmp
loop
jmp
xlat
aam
adc
out
xchg
out
and
sub
and
lea
push
lods
out
lds
add
test
add
gs
or
jmp
add
clc
mov
add
popf
imulb
scas
cld
jl
lret
mov
inc
mov
jp
mov
dec
insb
stos
pop
in
daa
xor
add
scas
xor
sbb
xor
xchg
mov
jnp
test
and
xlat
sti
js
adc
rcl
cmp
and
testl
jp
add
xorb
cmp
push
ret
xorl
pop
pushf
test
add
push
mov
dec
bound
adc
pop
push
add
mov
pop
and
add
add
add
cli
inc
or
xorl
push
mov
sti
push
and
xor
dec
add
push
ss
inc
jo
in
or
aad
iret
push
add
ret
stc
push
stos
int3
roll
xor
cmpsl
jns
fimuls
pop
loop
dec
sahf
jnp
in
dec
in
xlat
dec
loopne
lea
push
sbb
add
and
rolb
movsl
add
mov
jl
add
dec
rcl
shrl
cmpl
xchg
add
cmc
cmp
mov
lahf
mov
jle
clc
mov
xchg
and
leave
fldcw
push
pop
test
stos
jno
pusha
push
xchg
faddl
push
in
shlb
cmp
sub
or
mov
add
adcb
cmp
test
inc
cmp
pop
lret
add
sub
loopne
xchg
hlt
out
xchg
insl
cmc
lahf
aaa
mov
mov
push
aad
nopl
mov
xor
dec
mov
add
dec
rcl
jmp
imul
sbb
ret
push
push
add
ficoml
add
inc
push
jnp
int
adc
push
push
xchg
add
inc
outsb
aaa
shl
lods
xchg
add
jg,pn
add
push
pop
xchg
add
add
das
add
in
or
roll
mov
mov
add
push
cmp
add
sub
add
mov
ficoms
lock
or
and
test
pop
inc
pop
add
and
xchg
add
or
nop
push
add
out
dec
push
cmpsb
jmp
mov
jo
push
scas
out
push
out
inc
xor
loopne
stc
cmp
out
pop
fdivrp
pop
test
jbe
push
ss
inc
dec
add
push
popa
mov
cli
pop
add
jp
push
jl
repnz
jns
or
add
out
or
cmovl
call
inc
into
fdivrl
mov
shrb
add
rorb
add
pop
aaa
in
or
add
cmp
add
pop
push
in
mov
rorb
pop
inc
mov
sahf
cmp
mov
xor
nop
xchg
test
sbb
or
add
pop
mov
xor
mov
shrb
aad
fstl
ficoms
push
je
outsl
add
pop
enter
jae
nop
loopne
pop
or
cmp
outsb
leave
add
outsl
jns
mov
adc
dec
and
xchg
cmpb
testl
adc
jae
pushf
fs
sbbb
push
add
out
cmp
xchg
adcb
mov
int
cmp
pop
lret
das
subl
xchg
or
add
dec
jo
cltd
aam
add
inc
popa
dec
fs
fcompl
push
clc
arpl
push
add
mov
adc
add
xor
or
jp
add
mov
mov
xor
push
adc
shlb
xchg
push
sbb
add
jle
test
neg
rorb
add
sbb
inc
add
adc
stos
add
ret
movsb
loopne
out
mov
ret
mov
mov
outsb
loopnew
lret
pop
scas
mov
or
popa
in
cli
adc
add
aad
xchg
arpl
pop
cmp
mov
sarl
ja
add
dec
popf
mov
out
cmp
in
add
stc
pop
lods
mov
test
fcoml
fs
or
insb
and
xor
add
xchg
cmp
push
mov
or
add
push
pop
mov
add
stos
notb
mov
add
adc
add
pop
cmp
mov
inc
mov
fdivrs
jne
gs
jp
pop
out
rcrb
pusha
xchg
nop
rolb
into
xchg
aas
fnstenv
les
dec
mov
test
add
je
ljmp
sub
iret
lods
out
xchg
add
push
ss
sub
push
push
lahf
and
jg
les
add
loop
pop
cwtl
inc
filds
jae
imul
adc
insl
pop
shll
cmp
push
cmp
clc
inc
push
inc
jmp
xchg
out
add
xor
sbb
pop
xchg
mov
sub
push
insl
cmp
lahf
jmp
jne
bound
adc
repnz
xchg
pop
mov
push
sub
loopne
shlb
bnd
push
mov
inc
aam
ja
movsb
push
add
movb
ret
pop
xchg
sahf
in
mov
cmp
sbb
push
rclb
pop
test
pop
push
cld
sub
pop
or
cltd
push
jne
pop
add
js
cmp
adc
jb
insb
cmp
dec
inc
incl
pop
and
std
ret
add
or
lds
insl
mov
sti
mull
shll
repnz
inc
inc
add
mov
mov
imul
jp
dec
cmp
addb
cld
lsl
jne
negl
pop
xchg
push
inc
adc
lahf
in
xchg
popa
in
xor
push
fidivs
mov
rclb
loope
bound
cwtl
aas
push
push
in
iret
add
loopne
cmpsl
aam
xor
cs
icebp
add
mov
jo
add
out
insb
bsr
sbb
out
inc
ja
push
xor
pop
and
popa
or
mov
decb
inc
insb
aas
sbb
loop
sbbl
push
cmc
or
mov
add
add
lods
int
push
jnp
pop
cmp
notb
test
inc
inc
jecxz
jbe
cmpsl
jle
add
jnp
dec
je
sarl
sbbb
cmpsb
in
pop
sbb
mov
add
jnp
cmp
mov
fs
or
and
xchg
add
sub
into
pop
outsl
in
fisttpll
xchg
cli
jbe
xchg
add
sub
fcomps
cmpsl
jg
rclb
add
lock
dec
lods
call
push
jl
dec
mov
sbb
push
out
nop
add
push
sub
jmp
popa
lock
cmpsb
jg
aam
sbb
xchg
sub
shrb
jae
adc
xor
mov
push
add
jne
mov
cs
add
hlt
inc
cmc
add
sub
fucomip
lahf
pop
popa
add
test
inc
rcl
cmp
or
js
lahf
add
fidivrs
stos
xor
dec
dec
inc
iret
add
fldenv
pop
es
lock
add
std
das
repz
cmpsb
adc
push
rcl
inc
push
mov
pop
add
ror
call
mov
cmp
jbe
pop
push
add
cmpsb
sbb
popa
add
xor
scas
rorl
push
jmp
jg
inc
cmp
into
push
mov
pop
test
aad
aaa
and
xchg
inc
add
es
add
lret
arpl
add
sbb
jo
jb
addb
stos
lret
test
in
xor
add
lret
ret
add
and
adc
lock
nop
lods
cli
sarl
mov
icebp
push
int
lret
inc
jecxz
pop
adc
adc
sbb
mov
inc
repz
insb
imul
mov
or
add
xor
sbb
xor
movsb
into
lds
ljmp
pop
or
sub
jnp
pop
cmp
cs
sbbb
mov
adcl
add
pop
shlb
packssdw
push
inc
mov
jl
mov
out
daa
ja
xlat
jo
ds
movl
adc
fmuls
xor
push
adc
cmpsl
jp
or
shlb
js
xchg
fnstsw
add
push
lret
push
lock
popf
ret
adc
ficoml
xchg
andb
pop
xor
cmpsl
jne
push
push
lcall
pop
fstpt
add
dec
fcomps
fwait
sti
xor
sahf
cmp
call
fcoms
out
cmp
mov
push
cmpsb
pop
or
arpl
adc
inc
es
ds
dec
xchg
pop
add
mov
mov
sbb
lcall
sahf
add
xchg
add
lock
xor
jne
cld
push
add
jmp
mov
popf
add
sbb
add
ds
push
push
insl
add
cmp
mov
mov
push
mov
push
add
fcmovne
xchg
add
push
push
lods
mov
add
cmp
inc
inc
push
inc
lods
xor
and
sbb
ja
and
mov
ficoml
add
adc
in
push
add
test
lods
repz
cmp
pushf
add
xor
test
mov
mov
add
scas
push
jp
and
push
ret
sahf
xchg
lock
cmp
pop
daa
int
mov
inc
xchg
das
xlat
push
aas
mov
add
or
xchg
jo
shll
add
adc
add
add
pop
push
inc
cmpxchg
add
sar
jb
add
cmpsb
sti
sub
mov
add
sahf
cltd
ds
mov
or
sbb
cs
test
inc
pop
cmp
inc
pop
insb
seto
stos
cld
loopne
jge
pop
popl
clflush
jmp
add
fildl
ds
ja
add
xor
aaa
inc
fwait
pop
add
jmp
ds
scas
repnz
add
fs
aas
shr
jb
mov
and
inc
testb
out
and
movsl
xor
add
call
ds
cmc
iretw
jae
add
rcrb
add
xor
sbb
repnz
or
fs
in
add
stc
ljmp
mov
aam
movsb
push
add
cltd
cmpsb
sub
pop
clc
pop
and
push
pop
cwtl
push
cmp
out
rol
pop
mov
jnp
aaa
mov
mov
test
test
jne
orl
mov
fildl
pop
orb
mov
rcrb
pop
rcll
mov
xchg
pop
pop
scas
js
sarb
aaa
aas
lods
faddl
cltd
xchg
sbb
add
xor
ja
add
add
sar
add
xchg
add
daa
sub
mov
push
insl
iret
xor
pop
xor
add
mov
aam
xchg
es
fwait
shlb
add
adc
jnp
xchg
mov
test
xor
adc
adc
add
test
and
pusha
jo
fistl
add
jl
insl
add
int
xchg
add
push
jns
scas
repnz
fidivrl
imul
push
pop
dec
pop
adc
add
pusha
in
mov
or
adc
cmp
jle
inc
cmp
addr16
ja
push
fists
add
inc
xchg
mov
loopne
add
ret
jg
push
aam
int
xchg
add
pop
into
push
outsl
xor
jns
cmpsl
mov
sbbl
cmp
rclb
xor
imul
add
aas
inc
ds
mov
xchg
add
lret
adc
sbb
xchg
cwtl
add
xchg
in
add
negb
fisubrs
push
jl
dec
xlat
or
lea
out
add
sub
out
add
mov
fadds
lds
loope
mov
repz
in
testb
xor
add
in
stc
fiadds
in
jno
imul
mov
add
and
add
scas
dec
lock
push
test
in
mov
aam
imul
inc
outsb
gs
add
dec
int3
std
add
repnz
loopne
jo
in
mull
xchg
jmp
and
sti
adc
add
mov
push
and
xlat
dec
jno
pop
cmp
push
xor
iret
or
jl
mov
pop
jo
add
pop
mov
lret
cmp
jnp
sti
mov
and
mov
cmc
pop
pop
adc
das
xchg
rclb
adc
repz
dec
push
cmp
aaa
mov
andb
pushf
mov
or
cmpl
stc
outsl
inc
jecxz
push
roll
call
loope
push
rclb
or
push
ret
bound
mov
ret
loop
les
add
xor
cmpsb
cmc
addr16
jb
push
leave
jl
or
rclb
push
pop
aam
sbb
ds
ffreep
jecxz
das
push
imul
jno
add
dec
popa
dec
enter
jb
add
pop
sub
add
test
add
cmpsb
push
add
rorb
bnd
cmpb
add
stos
adc
sub
in
add
ffree
add
std
testl
mov
cmp
rcl
pop
sub
push
fdivrs
loop
popa
arpl
jne
cmp
rep
or
add
mov
dec
xor
xor
push
movsl
jle
inc
hlt
xchg
cld
repnz
sti
sbb
xor
pushf
std
movsb
mov
cli
add
rcr
push
add
xor
mov
add
mov
sub
loopne
cmp
push
pop
ljmp
push
pop
jno
mov
aas
in
add
xor
sbbb
add
add
mov
pop
and
insl
mov
mov
sbb
add
sbb
or
rcll
add
in
arpl
add
add
pop
je
out
sub
add
push
aad
mov
or
aaa
mov
sbb
inc
adc
nop
fwait
lret
call
lret
dec
push
js
add
imul
in
push
jmp
sub
repnz
add
lock
movl
add
push
mov
pop
inc
roll
mov
pop
xchg
add
push
fwait
movsl
popf
leave
xchg
clc
push
std
mov
mov
das
mov
jecxz
push
mov
sbb
xchg
xor
or
fiaddl
mov
gs
jmp
imul
pop
cmpsb
daa
push
push
ror
xor
add
mov
orl
cmp
sbb
dec
xchg
add
push
nop
mov
mov
nop
cmp
lock
add
xlat
scas
jl
adc
pop
xchg
adc
sub
jae
stos
loopne
ss
xchg
add
dec
in
ljmp
fnstenv
push
loope
fwait
mov
add
add
fst
add
pop
psubd
or
inc
leave
add
stc
pop
popf
cmp
jno
cmp
push
jp
add
rcll
sbb
popf
push
ja
xlat
add
sbb
add
subl
nop
dec
mov
aaa
add
pop
lds
or
test
cmpb
mov
test
jb
pushf
cltd
je
insl
jle
imull
call
add
mov
sub
jp
icebp
rclb
add
or
lret
adc
sbb
sbb
mov
jnp
arpl
add
mov
fs
sti
sub
mov
dec
iret
push
repnz
mov
jmp
dec
lahf
es
xor
xor
call
and
mov
add
sbb
pop
push
sub
add
inc
arpl
push
sti
insl
mov
int
mov
add
sbb
add
lret
mov
add
popa
jge
sarb
lds
lods
sbb
jb
aaa
cld
xor
push
and
dec
nop
mov
roll
imul
arpl
clc
fsubs
loopne
add
adc
sbb
std
add
and
ret
inc
sbb
jne
pop
int3
add
fidivrl
and
inc
pop
addr16
add
insl
cs
test
lock
call
roll
sar
out
jo
fsubrl
cmc
mov
push
addb
mov
jg
mov
mov
mov
xor
inc
mov
out
add
inc
add
mov
ficoml
iret
dec
fsubrl
or
pop
mov
lret
jbe
clc
pop
or
inc
xchg
mov
xchg
pop
pop
add
adc
mov
pop
inc
fwait
pop
jle
cltd
dec
dec
jmp
add
call
outsb
pop
sbb
js
lods
push
jge
add
adcl
out
mov
pop
dec
inc
sbb
outsb
jecxz
add
mov
push
rorl
in
movsl
or
aaa
jno
faddl
mov
mulb
push
pop
pop
add
cmp
mov
add
lods
and
inc
push
roll
push
cld
std
outsl
xchg
cmpsl
adc
xchg
add
mov
gs
lret
and
fildl
xor
xchg
mov
fdivrs
ljmp
sbb
hlt
cmpsl
js
test
add
jg
pop
add
lock
sbb
lods
cmp
xor
cmpb
xchg
rolb
push
mov
or
add
pusha
sbb
aaa
cmpsb
mov
or
rolb
aas
sub
lcall
ret
aad
mov
sti
mov
fimuls
jle,pn
jo
push
jae
in
test
add
fs
add
fldt
pop
ljmp
jecxz
cmpl
cmp
std
add
xchg
sti
fcoml
hlt
adc
mov
mov
inc
add
out
test
jne
xchg
pop
adc
stos
adc
pop
in
mov
pusha
cmp
sbb
out
or
sbb
in
shlb
scas
fimull
add
adc
add
repz
mov
push
push
lret
or
loope
pop
pop
rclb
jns
and
fdivr
movsl
or
jge
or
add
add
int
push
loopne
add
sub
pop
daa
je
push
popl
push
push
or
pop
filds
xor
inc
push
xchg
pushf
adc
and
cmp
ror
in
jo
rorb
add
insl
mov
lock
repnz
mov
pop
pop
clc
mov
add
mov
add
cwtl
aas
inc
cmpsl
pop
in
out
cmp
hlt
add
jne
pop
mov
cmp
sbb
dec
pop
add
adc
xor
xor
push
popf
jle
pushf
pop
fwait
inc
lret
outsl
inc
or
cwtl
and
daa
addl
jmp
lcall
idivl
stc
jns
cmp
jg
jmp
push
cmp
cmc
mov
ljmp
scas
ds
mov
aaa
sub
push
sbb
test
mov
add
or
or
dec
scas
imul
and
push
insb
xor
cmc
shl
out
das
loopne
xchg
adc
ljmp
mov
iret
and
xchg
fcomps
add
push
mov
sahf
cmpsb
mov
cld
addl
inc
repz
cmp
xor
fildl
sbb
add
push
or
add
out
push
test
repz
or
cli
sbb
xor
mov
fdivrp
addb
mov
push
dec
add
sarl
sub
scas
jae
shl
fistpll
sub
sub
rolb
inc
jmp
mov
sub
sbb
pop
pop
popf
dec
ret
aas
jne
rorb
lock
bound
add
jbe
out
jno
in
loop
inc
and
aam
add
xchg
jecxz
jbe
lcall
xor
add
leave
nop
int
out
mov
add
ss
sub
enter
mov
pop
movsl
into
mov
cltd
jne
insb
mov
cmpb
lds
mov
loope
imull
test
mov
add
sub
icebp
clc
pop
cmp
jne
sbb
loope
sbb
in
dec
shlb
aam
outsb
mov
add
insl
or
add
add
je
lret
rolb
or
or
dec
push
fcom
xor
push
clc
xchg
fistpl
popa
sub
push
sub
jno
rclb
loope
pop
mov
push
fwait
addb
xlat
into
mov
xchg
mov
cli
nop
popl
hlt
js
push
dec
push
cmpsl
pop
pop
rolb
dec
negl
mov
popa
xchg
daa
je
dec
into
ret
pop
lahf
adc
lea
icebp
dec
movsb
sbb
mov
cld
ss
push
cmp
xlat
jae
scas
pushf
enter
xchg
mov
or
hlt
lea
fimull
xchg
xchg
out
add
mov
in
mov
xor
dec
cltd
inc
int3
pop
pop
dec
fcompl
add
jmp
mov
or
movsl
mov
jne
icebp
pop
inc
add
stc
mov
pusha
or
cmpb
imul
mov
arpl
fnstsw
ficoms
adc
mov
repz
stos
lret
sbb
add
dec
rcrl
aaa
scas
or
int3
or
add
fbld
sub
sbb
imul
popf
sub
test
push
add
xor
jmp
fiaddl
add
lods
add
inc
out
jno
add
mov
push
insl
pop
aad
in
sub
xor
rol
gs
add
push
filds
cltd
mov
inc
out
jae
cmp
adc
repnz
call
imul
xorl
jp
xchg
mov
in
push
inc
push
shrb
push
bswap
inc
push
add
dec
mov
xor
sbb
daa
mov
inc
rcl
add
fcomip
dec
sub
jnp
icebp
xchg
push
orl
jle
add
dec
popl
mov
rcrl
repz
pop
dec
sbb
and
xchg
jge
cld
inc
es
jnp
mov
add
and
sahf
mov
add
shl
sti
pop
in
rolb
flds
mov
adc
cmc
testb
dec
lahf
mov
loop
xor
jg
sub
fstpt
mov
loopne
lret
mov
pop
adc
adc
sub
clc
xor
mov
cmp
or
mov
ror
xrelease
stc
inc
add
mov
push
in
adc
dec
inc
add
adc
loopne
gs
add
or
es
xadd
mov
xchg
cwtl
mov
jbe
cmp
push
xchg
neg
daa
mov
add
imul
add
rolb
cs
test
push
jne
xchg
sbb
cmpb
in
clc
mov
sub
or
xor
ja
add
jo
mov
inc
pop
dec
enter
lcall
into
test
jae
add
lret
mov
mov
lcall
jne
loop
inc
inc
dec
xor
add
push
es
add
nop
sti
hlt
lcall
dec
add
and
mov
inc
mov
mov
jnp
sub
pop
mov
add
adc
add
jb
gs
mov
rcrl
mov
iret
add
mov
pop
fadd
fsubs
xchg
add
xchg
cwtl
or
add
mov
pop
push
sbb
adc
cmc
movsb
clc
hlt
sarb
jge
andb
dec
pushf
adcl
ds
rcrb
or
push
loope
enter
shlb
test
clc
push
dec
cmp
out
adc
std
pop
das
mov
add
mov
xchg
js
cmp
or
sbb
std
add
sbb
jne
add
out
cltd
cmpl
rcl
nop
xchg
ss
roll
cmc
call
into
fwait
add
out
scas
add
movsl
fcmove
cwtl
stc
add
mov
pop
ljmp
mov
add
jbe
sub
push
cmp
push
mov
clc
or
cmp
jmp
inc
daa
test
xchg
sbb
pop
fcoms
cli
jle
add
push
loop
inc
dec
ret
ja
pop
sub
int
adc
mov
and
cmp
or
sub
push
out
mov
mov
cltd
sbb
insl
lcall
mov
shll
cs
leave
mov
fs
xchg
scas
add
and
cmp
add
or
mov
sbb
mov
cmp
pushf
fidivrl
cmpsl
lret
add
jge
xor
popf
outsb
adc
ja
mov
sbb
jne
imul
xor
add
pop
stos
push
adc
mov
rorl
test
xor
adcb
js
jmp
shl
cltd
xchg
loopne
insl
push
add
push
shrb
ror
pop
add
fwait
jne
cmp
jbe
add
ret
adc
loopne
fdivs
and
aas
and
test
jns
scas
lods
cmpsb
add
repz
insb
sub
jnp
cmp
fdivr
and
movl
mov
xor
imul
dec
sub
scas
mov
adc
scas
pushf
mov
add
ss
pop
cmpb
int
add
add
jge
or
mov
xor
mov
dec
or
outsb
or
out
stc
add
sub
jo
outsb
add
repnz
call
dec
xchg
pop
add
push
add
rcrl
add
xchg
xchg
nop
and
adc
add
insl
dec
jmp
xchg
subb
roll
movsl
jno
add
out
aad
test
addl
mov
lret
scas
add
mov
mov
adc
loope
call
fisubs
fwait
pop
outsb
out
jbe
add
mov
xchg
jp
pop
jne
sub
test
mov
mov
insl
lahf
std
in
add
sbb
push
xor
scas
jmp
add
mov
ret
pop
mov
js
dec
xor
int
add
add
stos
add
push
cmp
addl
mov
sarb
sub
xor
aas
add
jne
mov
ja
in
mov
lods
movsl
push
xchg
lcall
push
jecxz
hlt
fadds
out
arpl
in
hlt
xor
push
aad
stos
mov
jg
push
cmpsb
movsb
jmp
add
rolb
pop
cwtl
mov
add
sbb
mov
add
mov
and
scas
insl
cmp
mov
lods
filds
dec
push
bound
mov
sub
int3
push
sbb
lods
pop
jmp
or
add
out
xor
mov
xchg
rorb
out
add
jne
add
mov
sub
dec
shlb
sahf
inc
jbe
jg
std
add
sti
sub
add
scas
enter
mov
lds
jmp
jecxz
mov
mov
adc
pop
add
dec
in
mov
testb
arpl
and
lret
add
std
into
jbe
movsl
pop
lahf
sub
int
jb
rol
sbb
xor
add
scas
std
stc
idivb
add
int
pushf
jbe
and
ja
mov
jp
outsb
sub
scas
sub
add
jo
je
pushf
fldl
push
jecxz
out
mov
push
inc
cld
mov
add
jns
ds
lock
cmpsb
cmp
push
pop
cmp
jbe
sbb
fildl
cld
data16
lods
xor
push
in
clc
sti
out
leave
add
or
stc
add
sub
je
ret
mov
add
ret
pop
pushf
insl
ds
lods
add
dec
ja
inc
pusha
cmp
mov
and
push
jae
jecxz
xor
cwtl
clc
stc
jo
mov
iret
jecxz
addr16
pop
jns
push
mov
sahf
add
jmp
mov
rol
xlat
add
cmp
jae
or
xor
popf
dec
cmp
jp
cltd
add
in
xor
xchg
add
push
rolb
sbb
adc
mov
les
jne
cld
xchg
pop
out
incl
ss
loope
mov
add
pop
inc
mov
lock
adc
mov
mov
or
loope
mov
sar
push
call
popf
inc
xor
add
pusha
in
mov
nop
mov
js
loopew,pt
push
mov
add
insb
jg
mov
mov
jge
add
arpl
or
mov
add
das
jp
sub
faddl
xor
jge
mov
lahf
cmp
out
xchg
add
sbb
or
les
add
lcall
add
lret
rcll
cmpsl
adc
xor
inc
jmp
push
mov
call
or
in
loope
push
aaa
mov
or
fsubp
add
iret
mov
add
outsl
mov
ss
xchg
sbb
add
cmp
push
add
insb
in
jle
add
mov
insl
xchg
inc
les
or
mov
les
dec
push
add
pop
xlat
and
shlb
cmpsb
xchg
std
pop
loop
pop
fwait
test
mov
cwtl
out
jnp
inc
pusha
into
call
test
xchg
jno
stc
dec
pusha
pop
arpl
xchg
out
popf
divl
add
aam
lcall
adc
sub
ret
addr16
std
add
and
fs
and
fistpl
mov
enter
mov
mov
sbb
sub
sbb
adc
xchg
shll
xchg
dec
inc
cmp
pusha
add
out
lea
sbb
xchg
sub
ss
xchg
ja
int3
mov
add
mov
mov
cmp
addr16
add
inc
test
xor
rclb
pop
dec
add
ficoml
mov
pop
and
and
daa
add
lods
mov
xchg
mov
out
inc
dec
mov
sub
int3
sub
dec
out
add
lea
jae
sbb
sbb
in
pop
packsswb
inc
les
xor
sbb
loopne
pop
jnp
add
out
push
and
sub
mov
shrd
fdivs
add
imul
sarl
dec
add
add
jbe
add
adc
sub
sbb
add
rcll
loope
xchg
adc
sub
xlat
or
cmp
movsl
jbe
ficoml
cmp
jl
cs
rorb
out
and
lcall
call
div
sbb
loope
xor
mov
mov
sbb
mov
bound
test
inc
les
jg
insb
lretw
ds
testl
dec
pop
ja
cs
ljmp
in
adc
mov
and
add
sbb
push
ljmp
dec
std
out
inc
fwait
jmp
xchg
and
inc
xchg
imul
xor
push
or
andb
loop
add
scas
cmp
mulb
jno
loope
push
mov
inc
or
cs
repz
jbe
sbb
xor
mov
xor
and
mov
add
xchg
pop
dec
or
or
ja
add
mov
or
xchg
std
add
jne
dec
jmp
add
jle
add
jno
shll
inc
fiaddl
xorb
repnz
jge
add
adc
mov
add
leave
dec
pop
add
cmp
inc
sahf
or
or
jge
sbb
scas
and
push
rclb
inc
add
cmp
test
push
stos
add
pushf
fcoms
loope
xor
pop
sbb
xor
add
jae
sub
movsb
pop
add
sub
push
movsl
leave
add
inc
mov
mov
pusha
or
sub
or
add
xor
jp
loop
sub
add
std
jl
add
add
and
sbb
jnp
repz
jle
add
jb
pop
sbb
add
add
xchg
mov
test
cmp
pop
mov
add
mov
into
mov
add
push
xchg
pop
sub
pop
pushf
orl
cld
testb
loop
inc
sub
decb
inc
cltd
push
mov
arpl
jb
jae
andb
inc
shll
mov
jle
test
aaa
call
enter
and
fwait
xchg
dec
add
ja
inc
add
push
jo
bound
enter
xrelease
sub
push
in
jecxz
add
lret
mov
shl
gs
pop
add
sahf
cmpsl
mov
push
sbb
xor
sbb
pop
lods
pop
or
and
push
pop
add
mov
sub
add
mov
adc
popl
sub
pop
or
int3
rorl
shll
mov
sbb
pop
je
jecxz
jle
call
lods
sbb
pusha
push
es
mov
sbb
ret
adc
push
in
push
add
cmp
pushf
stc
in
call
and
pop
mov
insb
lret
adc
aas
xor
loopne
sub
xchg
inc
loop
lods
dec
mov
and
mov
add
pop
inc
ret
inc
cmp
cmp
mov
call
testb
out
mov
sub
ja
jg
out
xor
lcall
and
mov
sbb
add
mov
stos
in
sub
leave
add
push
lret
mov
and
sbb
fcomip
sub
mov
fwait
and
jno
jns
add
add
je
xor
in
sar
mov
xchg
add
cmp
add
xchg
icebp
fsubs
data16
inc
push
sarb
or
pop
push
sbb
mov
inc
push
test
dec
add
pop
adc
pop
jnp
add
inc
mov
lahf
jne
jp
push
mov
clc
test
pop
add
loopne
cltd
and
add
xor
ror
mov
loopne
out
add
pop
pop
cmp
loope
push
mov
mov
dec
pop
scas
inc
sub
fsubs
js
add
nop
loop
sarl
add
sub
daa
addr16
sub
inc
push
into
imulb
idivl
adc
inc
xor
lea
xor
cmp
orb
scas
add
push
insl
aad
add
and
scas
nop
aaa
add
out
pop
loopne
jns
adc
dec
pop
pop
cltd
mov
rcrb
mov
lds
ss
dec
and
inc
sbb
bound
fstps
loopne
xchg
lea
nop
add
pop
xchg
cltd
add
outsb
jae
adc
pop
pushf
xchg
cmp
add
test
xchg
cmp
dec
addr16
mov
add
aas
hlt
jl
stos
insb
cltd
lret
aaa
adc
cmp
cmpsl
lock
sbb
jae
iret
xchg
add
cmp
cmp
add
int3
push
icebp
int
add
dec
xchg
inc
pop
sti
jge
add
mov
jns
loope
inc
push
fmuls
pop
add
icebp
push
xchg
mov
push
jb
pop
repz
mov
pop
push
cmp
inc
push
xchg
jg
push
cld
stos
popa
sub
sti
xor
pusha
nop
stc
adc
add
xor
mov
add
test
aad
xchg
cmpl
fisttpl
inc
cwtl
adc
pop
movsb
pop
add
xchg
sbb
out
and
mov
add
and
xor
iret
es
lock
in
imul
mov
adc
or
cs
add
mov
inc
push
mov
add
and
sub
es
je
repnz
add
movsl
cmp
movsb
add
loopne
mov
incb
or
cmp
and
js
shll
mov
iret
dec
jle
push
pop
lret
sbbb
fcoms
sbb
mov
cwtl
aad
stos
add
pop
insb
xchg
jge
cmp
add
data16
in
rolb
sbb
lods
rorb
fcoms
push
hlt
and
dec
ljmp
adc
mov
addb
pusha
push
mov
ret
nop
sbb
rcr
addps
add
inc
int
xor
ret
imul
add
div
dec
bnd
shll
ds
shll
out
loope
and
push
cld
pop
stc
add
xchg
pushf
dec
xchg
sbb
push
sub
push
shrb
add
sbb
lret
mov
lock
add
dec
mov
xchg
cltd
outsl
sti
add
pop
pop
add
push
fildl
in
in
sarl
das
sbbb
mov
add
stc
leave
jle
lret
xor
loopne
lods
imul
pop
add
mov
xchg
stos
data16
and
in
adc
shrb
pushf
fldt
xlat
add
test
mov
or
das
sbb
mov
in
cmp
inc
or
ja
add
sbb
xchg
sbb
cli
push
clc
cmpb
mov
mov
shrb
add
lahf
orb
pop
add
or
add
pusha
dec
lahf
test
rolb
sub
movsl
cmovbe
pop
sub
xlat
popf
push
mov
and
and
clc
mov
mov
mov
sahf
or
repz
jb
lcall
fcoml
pop
mov
add
jle
push
add
sbb
pop
dec
rorb
add
out
mov
je
add
pop
in
idivb
rolb
add
repz
adc
and
sbb
hlt
lret
cmpsl
xchg
fldenv
stos
cmpb
jne
mov
cmp
add
call
push
lods
jo
addl
and
stos
sub
fsubrs
push
add
pop
loop
sbb
cmpsl
push
jmp
and
mov
sbb
cltd
ret
add
jle
enter
add
fs
pop
loopne
add
cmc
int
jns
and
inc
add
shlb
shl
lock
add
je
lcall
push
adc
mov
add
stc
repnz
in
out
add
pushf
daa
scas
out
adc
inc
in
jo
push
add
adc
xchg
and
scas
xor
dec
jnp
add
pushf
lret
loop
cmpsb
dec
notb
ja
fwait
jbe
in
add
cmp
dec
popa
addb
or
sub
mov
dec
dec
js
and
mov
dec
cmp
cmpsl
and
push
lods
ret
test
or
mov
mov
sub
call
cmp
je
sbb
stos
addr16
dec
sti
sbb
loopne
movsb
jae
add
xor
jne
cmp
mov
mov
out
cwtl
xor
inc
add
mov
jg
loope
inc
add
pusha
pop
mov
cmpsl
out
jl
testl
and
add
je
fisubl
bound
pand
lahf
inc
jb
test
add
mov
sbb
adc
inc
mov
stos
sbb
out
decl
daa
ret
sbbl
add
stc
xchg
push
push
shl
add
insb
xor
jnp
add
or
add
inc
sbb
imul
xchg
data16
pop
dec
lods
dec
add
mov
cmp
dec
jnp,pn
mov
ja
add
adcl
cmp
call
aas
int3
mov
mov
cmp
xor
and
cwtl
mov
ljmp
sub
lds
pop
push
or
dec
mov
cmp
sub
add
in
shll
cmp
das
adc
sub
push
inc
or
test
in
cmp
push
movsl
xchg
orl
add
pusha
jnp
mov
push
pop
in
mov
lea
cmpsl
cmp
stc
push
call
ret
jnp
add
push
in
mov
cmp
shl
push
jle
cmp
incb
inc
aad
ret
test
and
dec
pop
loopne
and
pop
fwait
xor
jg
loope
stos
stos
cs
sub
cmp
mov
and
dec
inc
jl
jp
out
mov
into
popa
sarb
jns
push
push
jne
xchg
pop
mov
fs
clc
jle
jl
daa
pusha
add
imul
stos
mov
mov
add
ljmp
popa
jae
jp
enter
add
ret
test
mov
pop
add
xchg
jge
sbb
pop
lea
mov
mov
xchg
add
ss
add
mov
sub
sbbb
or
je
inc
loopne
icebp
stos
and
scas
cmpsb
push
addr16
xor
roll
imul
jg
mov
sbb
xchg
enter
repnz
push
lret
je
dec
add
and
push
adcb
add
push
jge
lock
add
jno
out
and
fidivrs
addb
loopne
sahf
add
cmpb
subb
sbb
jns
xor
into
cmp
adcl
scas
pop
sbb
sub
pop
test
add
rorb
sarb
scas
xor
xor
ret
mov
mov
cmp
push
ds
xchg
into
std
fimuls
add
pop
sub
inc
movsl
cmp
and
imul
xchg
fistpl
mov
push
pusha
push
or
pop
out
add
xchg
es
add
in
sbb
cmp
add
jne
pop
adc
jle
pop
xor
sbb
mov
dec
fldcw
mov
adc
jo
pop
in
shl
mov
mov
inc
mov
lahf
adc
jno
dec
mov
int
jbe
ljmp
push
add
xchg
add
add
jle
into
sti
out
pop
pop
out
xor
nop
outsl
ja
ret
adc
adc
dec
push
push
shll
addr16
js
add
call
mov
add
xchg
add
mov
stc
push
push
sub
xchg
add
mov
dec
mov
push
popf
jp
int3
enter
add
leave
inc
lods
sub
orb
sub
lock
dec
dec
psraw
xor
mov
sbb
es
xor
and
fstpl
fwait
add
xchg
push
scas
cwtl
jl
pop
inc
arpl
mov
imul
cmp
imul
cltd
sbb
scas
jne
pop
pop
add
jnp
maxps
inc
testl
shrb
push
out
jge
cmp
add
repnz
pop
xchg
fdiv
scas
push
scas
sbbb
pop
or
outsl
inc
cltd
addr16
or
int
insl
hlt
test
data16
lods
inc
in
mov
push
mov
mov
repnz
and
call
adc
inc
jns
addr16
cld
push
mov
lock
das
insl
add
fnstsw
or
sbb
stos
emms
jne
adc
push
sub
jge
pop
inc
cli
sub
idivl
popa
adc
pop
hlt
shlb
xchg
dec
daa
sti
stc
dec
jecxz
pop
lcall
mov
mov
sub
adc
dec
ljmp
add
sti
mov
push
ds
push
test
stc
loopne
jp
lea
in
add
cmp
add
jg
or
add
test
cmpsb
push
hlt
lods
add
aaa
ss
sbb
sub
add
cmp
mov
xchg
rcrl
das
sahf
test
xorb
out
test
jns
push
add
add
insb
inc
mov
cmp
jmp
add
xchg
jne
mov
test
inc
in
enter
incl
xchg
lods
ljmp
add
push
loope
call
dec
cmc
sbb
cmp
mov
jae
cld
outsb
inc
mov
lods
mov
jmp
out
mov
mov
lea
test
add
mov
add
cli
xchg
je
pop
jmp
add
mov
pop
xorb
add
sbb
stc
push
cmp
and
mov
pop
jge
add
popa
fisttpll
in
mov
pop
repnz
mov
mov
jbe
push
test
loop
or
add
lea
and
nop
insl
push
pop
inc
jns
lret
cltd
mov
js
add
pop
dec
mov
in
add
or
lret
stos
repz
repnz
mov
dec
adcl
cltd
call
int
or
pop
dec
fldl
lcall
push
cmp
cld
sub
in
hlt
add
dec
add
sbb
add
add
arpl
pop
repnz
adc
ja
xorb
mov
mov
xchg
in
ja
adc
movsl
dec
add
movsb
dec
xorl
push
add
ja
in
scas
mov
mov
lods
cltd
cld
xchg
push
jne
pop
pop
loopne
add
jecxz
sub
scas
dec
pop
add
adc
adc
test
xor
call
xchg
mov
xchg
decb
add
les
lcall
clc
xchg
sti
lock
push
pop
cmp
xchg
cmpb
mov
inc
or
xor
aam
loope
pop
rolb
das
addb
or
add
aaa
sbb
inc
stc
inc
in
jmp
icebp
into
sbb
mov
xchg
xchg
insl
add
lds
dec
fisubrs
hlt
xchg
lret
sub
ror
loopne
jae
adc
add
nop
add
cmp
mov
aad
jno
add
cwtl
jo
int3
jnp
lret
add
outsl
pushf
out
add
push
negb
xor
fwait
testb
lcall
popf
cmpsb
inc
loope
fisttps
sub
inc
mov
in
inc
clc
movsl
add
lock
mov
rorb
dec
cmp
sbb
insl
mov
sarb
pop
movsb
add
mov
sbb
andb
repz
adc
jo
cmpsl
shll
push
cmp
int3
ja
aas
aaa
inc
xlat
pop
adc
add
scas
loopne
and
cltd
add
popf
ja
cmp
ds
add
pop
scas
xor
pop
cmp
call
pusha
mov
mov
stos
out
or
addl
mov
int3
or
ja
nopl
add
fsubr
cmp
jecxz
adc
loop
xchg
cwtl
into
repnz
hlt
mov
lahf
sbb
add
add
in
shrl
push
jb
popa
sub
int3
mov
push
ljmp
cmp
testl
repz
dec
mov
scas
add
cmpsl
jae
sub
insb
fsubrl
add
inc
out
fwait
add
jo
loop
fstpt
je
aad
cmpsl
cmp
cmp
add
inc
push
dec
ja
add
ljmp
stc
cltd
es
sub
pop
xchg
loope
sbb
jne
push
aas
cmp
in
inc
cmp
pop
jo
push
fisttps
nop
inc
add
xchg
dec
fsts
cmp
xlat
das
sbb
sti
sub
inc
repnz
cmc
lret
xor
jbe
xchg
adc
xor
aas
or
add
stos
mov
push
imul
jge
adc
mov
test
hlt
je
add
out
cmp
mov
jle
push
insb
add
out
in
mov
and
dec
push
testb
mov
aaa
adc
push
aam
leave
add
mov
cld
fnstenv
lahf
imull
orb
imul
jno
fmull
dec
daa
repnz
pop
pop
mov
dec
push
hlt
adc
cld
pop
clc
js
and
aas
add
sbb
inc
pop
add
mov
add
dec
sti
inc
jno
cmc
add
xor
inc
ja
cmp
add
xchg
out
mov
out
push
add
jl
xchg
or
loopne
in
outsl
inc
test
inc
es
add
stc
jp
xlat
sub
sub
or
aas
cmpsb
fs
dec
cld
loop
rsqrtps
pop
jecxz
out
xor
xchg
scas
sbb
fs
andl
add
movsb
lods
nop
push
mov
ljmp
movsl
dec
xchg
mov
sbb
push
xchg
lds
in
jbe
cmpsb
ss
mov
sbb
test
push
pop
loopne
cli
jne
add
pop
int
add
mov
mov
sbbb
push
adc
mov
xor
cmp
push
sti
stos
dec
mov
cmp
fwait
sbb
xchg
ret
xchg
loop
clc
mov
repz
enter
mov
test
mov
outsl
pop
push
mov
aaa
aam
int3
cli
add
cmp
sbb
iret
outsl
add
inc
bound
add
loope
pop
cmp
xor
jns
or
sub
mov
dec
addl
hlt
aaa
cmp
test
out
xchg
cmpsb
jge
add
cs
fadds
out
mov
xor
or
add
nop
ret
add
mov
adc
adc
es
add
xchg
prefetch
dec
and
dec
pop
push
add
ret
add
stc
pop
mov
dec
and
mov
fwait
pop
xchg
loopne
xchg
fldl
or
fdivrp
or
cmp
inc
idivl
add
inc
inc
pop
add
cmc
test
inc
shrl
mov
add
mov
pop
push
sub
adc
pop
jno
jbe
push
ljmp
pop
inc
clc
loope
outsb
fisubrl
jmp
and
pop
and
rcrl
jb
add
xchg
sti
jg
push
incb
std
mov
inc
cwtl
add
rcrb
or
sub
fnstsw
add
pop
adc
lods
rcl
add
popl
bound
stc
add
mov
push
add
inc
cmp
cmp
lret
inc
add
xor
adc
sbb
out
pop
sub
dec
jmp
mov
pusha
cmc
add
or
xchg
push
add
iret
pop
std
dec
lret
mov
xor
jnp
sub
push
clc
fdivl
lea
or
jg
aaa
out
sti
aas
lods
stos
lock
add
sbb
cs
les
jo
pop
adc
add
scas
jecxz
sbb
cmpsb
stc
xchg
xor
add
addb
jae
adc
cmp
pop
or
pop
or
lret
mov
fnsave
add
cmp
jle
cmp
into
andb
add
dec
mov
iret
dec
or
into
mov
shlb
mov
sbb
fisubl
into
cmp
adc
das
xchg
and
sub
xchg
inc
aaa
mov
outsl
add
mov
mov
test
mov
adc
cmp
sbb
lds
rcr
fldl
loope
mov
aam
xor
stc
popfw
xchg
pop
aas
inc
mov
jo
and
xor
or
scas
loop
add
xchg
add
pop
aad
add
iret
cmp
dec
add
outsb
or
mov
add
rcrb
push
add
sti
mov
add
fwait
or
fisubs
cmp
add
add
lods
insl
xlat
xchg
add
sbb
xchg
rcrl
pop
add
inc
pop
inc
shl
push
add
xchg
shlb
add
or
inc
and
in
stc
cmc
inc
hlt
aad
push
add
lods
pusha
push
jo
ja
jp
add
ljmp
add
jg
arpl
sbb
test
cltd
mov
add
leave
mov
jle
add
xchg
daa
xor
mov
pop
mov
add
aad
das
mov
jle
xlat
arpl
cwtl
pop
rcrb
flds
in
movsl
sbb
push
jg
sbb
sbb
dec
out
daa
add
cmpsl
cmp
neg
inc
jbe
add
or
add
add
frstor
pop
pop
gs
popa
ss
adc
lds
adc
inc
stos
dec
or
add
popa
dec
lahf
cmp
cli
cmpsl
pop
shlb
js
and
inc
pusha
push
xor
inc
and
repz
stos
cli
jl
adcb
enter
sbb
std
dec
out
repnz
adc
add
pusha
dec
or
clc
or
enter
jae
add
stos
into
xchg
dec
mov
ret
stos
les
pop
rorl
jo
add
loope
aam
cmp
data16
mov
shrl
mov
mov
add
out
mov
jmp
push
pop
jbe
adc
lcall
es
pushf
mov
sbb
inc
inc
repz
daa
push
test
sub
add
or
fcoml
push
jg
test
jne
outsl
push
sub
add
xchg
mov
add
mov
and
fidivrs
lret
ss
push
cmp
dec
jnp
pusha
sub
add
mov
je
jecxz
jg
das
sbb
in
lock
bndstx
jne
sub
jo
filds
iret
or
mov
push
jp
add
stc
icebp
push
insl
test
add
jae
into
sti
jbe
add
scas
mov
imul
outsb
hlt
pusha
xchg
js
shrl
lahf
mov
sbb
stos
loopne
pop
dec
add
out
jg
aaa
sub
add
aad
jge
jb
adc
mov
xor
or
rorb
fsubl
pop
mov
std
icebp
add
adc
add
rolb
add
dec
sti
gs
pop
jp
ja
and
or
xchg
mov
ljmp
inc
rorl
rcr
push
lods
add
fistpl
test
mov
incb
and
or
loopne
ja
sahf
pop
jg
iret
clc
sbb
loop
aad
insb
sub
mov
add
adc
jecxz
push
dec
addr16
iret
adc
leave
sbb
mov
and
mov
pop
sub
inc
jle
and
push
add
stos
xchg
flds
ja
add
fisubrs
lret
push
xor
inc
jne
xchg
fistl
js
sbb
pushf
lret
loopne
add
add
and
adcb
add
rcr
push
in
notb
cli
les
loop
icebp
sbb
and
lods
shlb
jns
mov
sbb
add
int
lock
pop
lds
push
rolb
fldenv
int
shll
out
in
das
mov
aam
inc
in
add
sub
add
dec
and
jae
mov
repz
loopne
fadd
cmpb
ljmp
stos
lahf
out
pop
inc
test
jns
and
xor
les
movsb
cwtl
sbb
std
je
scas
lock
outsl
inc
fnstcw
xchg
lcall
es
fmull
adc
add
inc
xchg
jge
push
test
cwtl
inc
xchg
dec
in
jbe
pop
inc
cld
mov
dec
mov
jl
mov
cld
push
mov
fs
add
sub
pop
mov
and
jbe
and
fidivs
xchg
outsl
fs
mov
clc
mov
adc
and
nop
mov
mov
fsubl
add
lods
cmp
call
pusha
add
pop
push
jne
xchg
xchg
sub
dec
shlb
sbb
addr16
dec
fstpl
mov
cmp
inc
dec
mov
icebp
into
fnstcw
xchg
push
add
cmp
mov
sbb
mov
push
mov
add
dec
pop
add
cld
push
enter
popf
mov
fdivrl
cmp
into
int
add
fwait
stos
push
add
mov
in
inc
lret
clc
jmp
scas
pop
xor
push
push
xchg
push
mov
add
cmpsl
testb
mov
orb
mov
ljmp
lock
gs
je
in
push
movsl
add
pop
pop
in
data16
cmp
jo
mov
xchg
mov
ljmp
add
sahf
dec
mov
pop
add
or
dec
mov
leave
or
fbstp
jns
add
mov
jnp
repz
add
loop
jp
data16
dec
xor
add
ja
push
sub
je
fsubrl
xor
fs
sbbl
fsubs
dec
add
daa
sbb
add
push
mov
add
adc
xchg
js
pusha
xchg
pop
aas
add
rcl
sbb
test
cs
rcll
pop
test
add
adc
add
es
sti
cmp
in
add
add
mov
sub
aas
push
add
xor
push
cmp
or
jae
sarb
and
fyl2xp1
fdivrl
jmp
xchg
jg
push
jbe
pop
inc
push
scas
stos
cltd
js
add
cmp
insl
inc
idiv
sbb
push
inc
or
jae
pop
pop
fldpi
lea
fmull
js
pop
scas
cmp
test
or
div
mov
stos
push
jns
xlat
aam
bound
into
add
adc
jle
jecxz
leave
mov
fwait
lahf
dec
dec
jge
add
and
pop
inc
lret
add
pop
lods
or
pop
mov
add
sub
mov
out
adc
into
xchg
pop
or
mov
outsl
sbb
arpl
daa
insb
mov
loopne
mov
and
lahf
cwtl
or
fldl
push
call
popf
or
or
and
scas
push
add
pop
pop
aad
orb
mov
mov
ljmp
addl
sbb
xor
add
jle
xchg
cli
je
xor
popf
fldt
mov
dec
pop
arpl
add
mov
xor
imul
jne
mov
pop
cmc
outsl
add
add
push
add
movsl
rcrl
fsts
inc
add
jle
adcb
cmp
add
xchg
inc
and
add
shlb
xor
incl
xlat
fcmovbe
mov
inc
enter
add
xor
pop
movsb
sbb
jmp
sub
dec
mov
cmc
pop
adc
pop
sbb
in
lock
movl
je
stc
es
cltd
outsl
sbb
sbb
lods
fs
shrb
pop
add
mov
aas
add
pushf
add
scas
xchg
ficomps
shlb
add
pop
popf
les
push
clc
daa
in
rol
das
mov
mov
ds
cmpsb
add
mov
mov
jb
add
inc
mov
lds
add
int
iret
push
xor
icebp
add
mov
jg
jp
gs
fs
mov
leave
sub
out
add
cmp
add
or
add
divb
pop
out
mov
mov
shr
sub
mov
cmp
xchg
stos
ret
add
sti
jl
or
adc
sub
pop
out
add
ret
stc
sarb
insb
and
mov
lock
in
mov
test
or
rcrl
add
std
xor
mov
enter
daa
add
dec
sbb
pop
mov
xor
add
ret
mov
loope
dec
cld
decl
inc
add
ret
cwtl
xchg
mov
push
int
lock
stos
xor
add
xor
ss
in
push
xchg
in
movsl
add
pusha
cmp
inc
popa
pop
lldt
xor
cmp
and
adc
add
cld
pop
jnp
stos
in
shlb
dec
push
sub
xor
setl
leave
sub
mov
lock
ret
add
push
dec
cld
pop
and
push
pop
nop
movsl
out
stc
add
cmp
mov
movsb
pop
add
popa
xchg
cwtl
and
cmp
add
adc
mov
ret
outsl
sbb
cld
add
pop
sub
add
in
out
enter
pop
sub
lcall
mov
adc
aaa
aam
add
sarb
and
lret
stos
lahf
push
xchg
rcll
pop
inc
mov
mov
cmp
xchg
into
xchg
imul
out
in
fisubrl
push
addr16
pop
and
mov
mov
inc
mov
add
scas
int3
sub
adc
pop
imull
aaa
mov
add
xor
add
push
xchg
das
rorb
push
insl
mov
push
andb
pusha
sar
enter
push
pop
push
xchg
lcall
or
or
cmpsl
pushf
stc
gs
cmp
lds
push
pop
fadds
mov
adc
mov
mov
mov
adc
add
cwtl
sbb
jae
fisubrl
inc
les
in
pop
psubusb
mov
add
xchg
nopl
xchg
mov
nop
sahf
in
xor
out
sbb
mov
shll
xor
xor
sarl
cmp
dec
in
in
rcrb
cwtl
lds
popf
jno
add
xor
add
inc
in
lret
push
push
scas
and
push
nop
loop
pop
cmp
subl
and
popf
sar
mov
xchg
aas
mov
inc
in
dec
cmpsb
dec
and
and
in
jb
cmp
shrb
push
shll
adc
popf
add
cmp
jb
shlb
aam
loope
xchg
aas
add
cltd
pusha
addb
jp
or
inc
and
je
inc
es
std
sub
add
fisttps
mov
add
cmp
call
add
or
mov
jg
add
cmp
push
shr
pop
fiaddl
add
cs
ljmp
cwtl
push
mov
fwait
jo
jb
push
xor
sar
outsb
out
pushf
add
sbb
jg
mov
cwtl
pop
pusha
cmc
inc
or
mov
push
fimull
pop
test
ja
dec
test
add
js
ret
cmp
add
push
andl
jp
dec
and
fcomps
aas
aam
push
add
sub
ret
fildll
decl
iret
insl
jmp
add
mov
out
mov
fiaddl
fwait
mov
data16
bound
add
push
mov
test
roll
add
loopne
cmp
mov
adc
inc
shlb
xchg
imul
xor
shl
pop
add
ds
sub
sub
pop
jb
adc
rorb
int
pop
add
push
xchg
add
stc
je
rcrb
add
cmpsl
inc
and
and
lds
push
push
push
dec
loopne
mov
mov
cmp
xlat
test
and
cld
add
mov
stos
add
mov
xchg
inc
dec
je
lock
add
aaa
sbbb
push
rolb
mov
loop
mov
pop
pop
test
call
fdivs
js
in
lods
add
cmp
push
cwtl
lret
add
pop
fisttpll
das
lcall
scas
and
pop
xor
mov
or
jmp
jne
inc
push
sub
adc
jg
add
scas
xchg
ds
push
decb
cmp
add
xchg
cmp
pusha
mov
mov
cmp
pop
hlt
loope
sbb
mov
cli
mov
dec
dec
arpl
mov
fcomp
jmp
add
bound
xor
cvttps2pi
xchg
mov
cmc
shll
mov
repnz
nop
or
pmaxub
jns
shlb
pop
in
dec
adc
adc
cmp
xchg
mov
jno
add
dec
mov
add
aas
mov
je
add
push
cwtl
sarb
xor
add
hlt
push
nop
add
pop
dec
loop,pn
mov
add
cmp
add
or
out
push
jge
xor
xor
out
lods
xchg
shll
addl
popf
lahf
mov
push
fsubrp
jne
inc
push
and
mov
add
pop
add
push
adc
add
mov
and
int
jg
scas
dec
dec
and
cmovnp
push
add
pop
ja
xchg
mov
inc
std
addb
out
jne
xchg
lock
into
xchg
push
sbb
jl
xchg
push
inc
leave
add
mov
outsl
inc
pop
out
inc
rcll
sub
and
pushf
add
cwtl
addl
addb
outsb
xchg
insb
cld
lods
int3
add
es
add
enter
lret
mov
shl
repnz
add
adc
add
push
and
and
pop
lcall
add
in
jnp
add
inc
mov
divl
mov
jb
or
pop
faddl
sbbb
or
lds
add
inc
mov
mov
out
cwtl
jle
adc
rcr
clc
mov
pop
jecxz
cmp
push
fildl
fsubrs
jo
add
mov
add
out
faddl
iret
jno
les
roll
ja
and
dec
sub
arpl
mov
test
add
aaa
mov
add
sub
pusha
bound
pavgw
inc
adcb
rcl
rol
sbb
pop
std
scas
loopne
clc
lods
mov
add
push
loopne
lods
add
sbb
jmp
hlt
pop
pushf
aas
mov
cmpb
or
xor
add
xlat
gs
add
xchg
icebp
mov
lahf
pop
cmpl
push
shl
out
out
adc
sub
mov
inc
pop
inc
jecxz
inc
aad
or
sahf
or
add
in
aad
dec
mov
push
das
shlb
stos
pop
adc
and
orb
xchg
inc
inc
sbb
lods
in
dec
pop
add
push
xchg
dec
inc
decl
imul
notb
hlt
add
or
add
inc
mov
lcall
lds
sub
sbb
add
push
iret
dec
in
jge
add
pop
mov
mov
mov
repnz
aad
or
mov
ja
addr16
cmpsb
dec
push
add
or
test
pop
cmp
lock
add
mov
push
es
int3
mov
push
mov
sar
lahf
fcmovb
cld
inc
add
dec
fldt
add
notl
pop
dec
addr16
mov
inc
or
pop
or
jne
or
ret
mov
add
add
aaa
rcll
jge
add
xchg
mov
sub
add
adc
pop
call
xlat
movsl
mov
pop
adc
mov
add
and
jne
mov
pop
fcoml
or
add
in
mov
add
or
mov
shl
xchg
repnz
pop
xlat
cld
loope
add
aam
outsb
andb
lds
and
inc
mov
aad
sbb
adc
lcall
mov
mov
add
xchg
add
or
dec
pop
orl
out
or
add
xchg
or
add
fidivl
xchg
int
gs
mov
pop
add
ds
or
pushf
adc
push
stc
rcll
cli
pusha
pop
cmpb
dec
pop
push
mov
jecxz
pop
add
int3
jp
xor
add
xor
sahf
or
push
add
xchg
iret
mov
data16
js
test
pop
lcall
pusha
loopne
das
outsl
mov
cmp
cmc
jge
mov
mov
sbb
mov
cltd
out
cmpsl
push
stos
jo
jne
pop
xor
xor
sub
cmpsb
mov
jnp
imul
aam
ret
les
mov
in
inc
pop
repnz
mov
pop
adc
movsl
ja
popa
add
adc
jmp
lahf
pop
stc
repnz
sarb
cmpsl
inc
lret
add
scas
jae
out
push
or
push
mov
sbb
cmpsl
add
lret
fiaddl
cld
rcll
mov
shll
dec
cmpsl
and
ja
pop
fwait
loopne
add
lcall
mov
push
outsl
mov
cmpsb
xlat
sahf
add
mov
jecxz
into
jge
pop
ss
fucom
leave
iret
arpl
enter
repz
aam
pop
testb
imul
jmp
in
cwtl
test
cs
dec
je
sbb
pop
sub
call
addl
add
ja
adc
add
jb
mov
mov
xchg
in
dec
add
sub
add
lds
push
mov
in
xchg
sarb
adc
es
cli
fiaddl
jbe
addr16
and
cmp
xor
data16
jmp
push
jp
add
and
pop
add
dec
mov
add
es
push
out
mov
setns
stos
dec
loopne
push
add
out
sbb
add
fwait
dec
test
mov
jae
mov
mov
mov
add
lds
jns
aaa
add
adc
sub
dec
lret
mov
push
repnz
cmp
movb
and
jne
call
fxch
jbe
mov
cwtl
ds
stc
add
dec
hlt
jno
add
jb
mov
rcrb
jl
push
add
add
add
adc
inc
inc
aad
add
pop
xor
xor
add
xlat
inc
sbb
movsb
and
lds
jne
testl
cld
cmp
movsl
jecxz
cmpl
cmovbe
ja
mov
jbe
inc
pop
inc
push
test
adc
loopne
jnp
or
push
xor
sbb
or
repz
loope
push
push
out
mov
in
pop
mov
mov
shll
faddl
insb
cmpsb
mov
jg
imul
mov
pop
add
popa
jmp
rorb
iret
mov
out
popf
addl
mov
inc
pop
add
xchg
jns
add
scas
xorb
cmp
jae
mov
stc
ficoms
sbb
pop
aas
fdivrs
cli
and
add
jbe
or
in
fs
loopne
mov
pop
push
call
arpl
loopne
add
clc
jl
movq
cmp
jle
mov
andl
in
idivb
out
cmpsl
lock
loop
clc
dec
ja
lahf
sbb
sbb
add
mov
or
inc
sahf
mov
jo
addb
es
dec
in
in
or
push
push
cs
faddl
mov
mov
add
pop
dec
fimuls
pop
jno
sbb
sub
std
cmp
imul
pop
daa
fildll
call
push
sarb
jae
cmp
pop
jne
mov
mov
add
or
lea
add
fistps
andl
pop
cmpsl
sbb
sbb
in
cwtl
push
ds
scas
add
dec
testb
mov
dec
pop
push
dec
add
stos
mov
or
add
and
mov
rclb
cmc
ret
jl
push
mov
pop
std
shl
pop
mov
addb
xor
je
add
out
cmp
sbb
or
mov
pop
push
loope
arpl
fldenv
xchg
iret
inc
cmpsb
jnp
adc
add
stc
sub
sub
outsb
fwait
mov
dec
cmp
mov
shr
push
sub
fs
icebp
inc
jno
arpl
pop
mov
dec
sahf
inc
scas
cld
in
adc
add
fs
xchg
das
add
adc
pop
sbb
notb
fidivs
cmp
mov
out
movsb
stc
mov
adcb
push
cmp
push
add
andl
int
sbb
push
rorb
mov
out
add
ret
or
in
cmp
mov
xchg
testl
or
incl
adc
add
sbb
dec
add
mov
shll
push
push
fnstcw
mov
mov
das
jge
rcrb
cs
loope
inc
popf
add
in
or
mov
aam
das
add
pusha
in
sarb
fsubrp
inc
shl
stc
mov
or
popf
push
xchg
loop
lock
push
setnp
enter
loopne
stc
movsb
cmp
mov
mov
add
in
jmp
lods
sbb
shlb
outsl
inc
pushl
add
jg
pop
fbld
ljmp
mov
mov
outsl
cltd
aas
jo
daa
sub
cwtl
sbb
out
push
testl
jl
pop
dec
add
shll
iret
imul
jo
or
scas
add
negl
faddl
add
xor
dec
jbe
add
aam
adc
mov
and
ret
mov
clc
fnstsw
mov
fadd
xlat
sbb
dec
inc
in
shrl
add
add
mov
add
cltd
daa
inc
aaa
sbb
inc
xor
cmp
jecxz
ds
pop
out
bnd
lock
add
xchg
imul
sbb
cli
scas
and
sahf
xchg
cmp
out
add
mov
jl
cmp
add
pop
add
sbb
scas
movsb
add
lods
pop
fnstenv
pop
add
push
add
icebp
int
mov
inc
or
cmp
add
cmp
dec
pop
aas
ja
jo
cltd
jno
mov
sub
add
imul
mov
lcall
scas
jns
inc
adc
push
add
add
inc
int
push
jge
mov
fidivrl
add
aad
ds
xor
imul
add
test
jno
jmp
cli
je
push
add
sbb
cmp
bound
mov
fs
inc
push
cmp
push
add
mov
pop
xor
mov
lods
out
ss
jb
cli
xchg
inc
add
int
jge
mov
shl
add
jbe
pop
or
fldcw
aam
add
fbld
mov
imul
std
inc
mov
adc
inc
push
frstor
pop
andb
clc
imul
adc
stos
jmp
movb
repnz
ror
testb
lret
push
mov
mov
push
lods
adc
add
adc
push
inc
mov
pop
mov
sbb
inc
and
jo
add
ljmp
imul
data16
add
in
in
adc
shlb
lea
clc
lret
cmp
or
addr16
lret
add
cmp
adc
or
sbb
xor
add
scas
leave
add
xchg
ja
sbb
out
loop
mov
pop
push
mov
add
push
in
ss
push
clc
cmp
orb
mov
sub
xor
pop
mov
mov
cltd
push
and
push
sub
fistl
inc
fidivl
ds
xchg
nop
mov
out
add
add
push
or
jbe
add
and
lods
mov
shlb
add
adc
inc
mov
pop
mov
addr16
sbb
mov
test
add
sub
add
ret
stos
mov
mov
xor
enter
daa
sahf
xchg
lock
inc
add
xorl
cmp
jae
mov
sarb
leave
fldl
add
mov
cld
inc
xchg
mov
add
cli
dec
icebp
push
lock
xchg
mov
add
js
push
outsl
rclb
pop
lds
jb
sub
shlb
inc
pop
add
pop
inc
std
mov
loope
jns
scas
and
dec
and
mov
pop
mov
loopne
sbb
hlt
sub
push
cs
sub
mov
mov
in
lret
cltd
mov
mov
enter
data16
pusha
lret
and
rcrl
add
xor
xchg
loopne
fbld
vphadduwq
test
push
rcrl
jne
xchg
xor
cmpsb
and
dec
jp
mov
adc
rcrl
aam
mov
jp
fildl
cmp
dec
ficompl
rorl
aaa
add
adc
idivb
cmp
ret
or
jae
add
mov
jecxz
adc
jl
jp
add
sahf
and
adc
sbb
mov
add
and
imul
sub
mov
add
jmp
xchg
pop
das
not
mov
nop
arpl
loope
add
mov
movb
fcmovb
fcomps
cmpsl
shrl
jl
push
jae
loop
pop
add
xchg
cli
enter
push
mov
xor
add
mov
mov
and
ret
dec
dec
sub
sub
and
pusha
insb
repnz
lods
mov
dec
xor
lea
cmp
adc
adc
pop
int
jge
or
roll
cmp
sbb
mov
mov
mull
sbbb
and
lods
out
add
xadd
push
mov
outsl
cld
cwtl
outsb
adc
fsubp
pop
add
sbb
flds
push
mov
lock
fnsave
popf
clc
xor
jmp
mov
push
fsub
movsb
inc
loope
add
mov
sahf
popa
add
mov
stc
sub
xor
ret
cltd
mov
aam
add
repnz
cmp
sbb
inc
push
add
and
je
pop
pusha
adc
jecxz
mov
pop
sahf
dec
adc
jno
jmp
push
add
int3
iret
xor
mov
into
je
add
cmp
loope
inc
in
sar
cs
inc
mov
jp
inc
lods
sub
add
test
jecxz
pop
loope
mov
pushf
pop
xorb
pop
addl
cwtl
jno
aam
and
pop
hlt
mov
xor
push
cld
jg,pn
push
int
mov
pop
mov
lcall
in
xchg
push
sub
dec
pop
loopne
jmp
xor
sbb
orb
add
loope
test
add
fdivl
add
enter
add
out
jbe
inc
xor
sbb
ja
cli
xchg
xchg
and
jae
add
cmpl
mov
popa
mov
incb
cmc
imul
loop
lcall
jbe
mov
add
test
dec
icebp
loop
cmp
fiaddl
jbe
jmp
jnp
mov
mov
add
pop
movsl
hlt
sbb
aas
addb
inc
push
adc
adc
outsl
pop
in
xor
jae
add
sbb
add
iretw
or
adc
cmp
push
add
or
pop
fcomip
pusha
add
sbb
call
sub
adc
lret
and
fidivrl
xor
aas
and
ljmp
mov
dec
mov
mov
sub
mov
mov
push
or
cmp
cmpl
jo
inc
push
sbb
sbb
sarl
cmc
ret
mov
into
mov
call
push
fdivl
lods
xchg
int3
xor
xchg
add
jle
ja
inc
jmp
xchg
pusha
pop
mov
outsl
lahf
add
js
sbb
ss
add
aaa
enter
jp
add
jl
cmovns
rcrb
pop
mov
sub
xchg
movl
outsl
ja
add
stos
cmpsb
jae
add
mov
sahf
xchg
xchg
loope
xorl
repz
mov
loopne
loope
push
in
std
pop
or
xor
sti
jb
jae
pop
icebp
out
or
push
and
cld
inc
xchg
test
add
dec
xchg
inc
test
sub
mov
mov
das
add
aam
xchg
popa
pop
sbb
ja
jo
sbb
add
cltd
mov
add
int
cmp
shlb
hlt
push
rclb
jb
iret
ljmp
insl
jecxz
add
xchg
push
je
adc
pop
sbb
rcrl
xchg
clc
xor
sub
outsb
and
add
movsl
jp
mov
dec
aam
scas
jbe
testb
xorl
pop
mov
or
xchg
ds
add
inc
aad
cmp
sbb
push
mov
out
es
and
add
ds
push
cld
xor
add
sbb
add
hlt
push
sbb
movb
pop
cli
mov
inc
cwtl
sub
call
pop
xorb
mov
jno
fwait
dec
push
jo
clc
loopne
add
cmpsb
mov
sahf
lret
dec
cmpb
inc
out
movsl
sbb
jle
fisubrl
std
test
cmp
leave
pop
aas
ret
xor
shll
jge
push
add
jp
popa
outsb
lds
add
inc
mov
inc
stos
iret
jne
aas
mov
repz
imulb
pop
xchg
add
rclb
int
ja
pop
mov
dec
xor
lock
mov
pushl
jns
fiaddl
inc
add
std
sub
movhps
sbbb
push
jno
shrb
push
ja
sbb
fs
ret
pop
jp
stos
es
push
cmp
mov
add
xchg
mov
addr16
add
daa
loopne
repnz
cmp
pop
jg
scas
mov
sbb
pop
stos
adc
and
ljmp
cmp
lods
jae
jnp
and
xchg
data16
enter
fidivl
inc
ds
pop
rolb
add
inc
imul
sbb
cmp
add
lds
add
mov
cmp
push
and
or
sbb
mov
add
aas
pop
lods
lahf
cmpsb
aaa
mov
mov
add
lock
movsb
je
imulb
xor
xchg
cli
push
cmp
mov
push
test
sbb
cmp
add
mov
aam
cltd
in
xchg
ret
jge
int3
push
push
rol
test
ret
mov
sub
cmp
je
insl
inc
roll
sbb
xchg
and
xor
push
add
sar
out
daa
add
sarb
lret
scas
pop
inc
xor
or
les
aad
cs
mov
out
mov
stos
or
insb
in
lods
add
je
jg
add
loop
push
ds
arpl
inc
mov
mov
pop
mov
mov
add
std
or
add
dec
pop
pop
inc
jecxz
xchg
ret
stos
inc
bnd
add
rcll
out
int
cmp
xchg
in
push
sbb
push
fnstsw
cmovl
add
pushf
jns
sbb
mov
cwtl
fiaddl
popf
mov
fbstp
add
xchg
test
cld
pop
xlat
mov
pop
sti
push
pusha
add
test
jo
add
ljmp
loop
fadd
push
lods
pushf
filds
jecxz
div
flds
sbb
aad
dec
sahf
rolb
pusha
jge
jnp
jbe
dec
inc
sub
jecxz
adcb
mov
aam
mov
jbe
push
pusha
lret
add
and
add
jp
test
add
jne
xor
inc
sbb
in
add
lds
sbb
lahf
adc
fiadds
cwtl
in
push
mov
xor
sbb
or
fstpl
cmp
cmp
repz
cmp
jbe
add
and
cmp
sbb
xor
mov
out
jmp
ja
push
inc
inc
fidivrs
xchg
mov
add
out
sub
add
mov
incb
enter
add
cli
and
sti
push
push
scas
add
call
xor
add
pusha
call
sbb
rorb
ficoms
jo
jmp
sbb
and
mov
or
mov
pop
ja
jns
daa
shrb
lock
and
add
in
sub
add
and
add
leave
fstpt
push
mov
roll
cmpsl
call
out
add
bound
adc
or
or
testb
addb
jl
pop
jbe
or
addb
enter
mov
sub
inc
push
xor
jp
sbb
xchg
imul
subb
dec
mov
rcl
stos
leave
aas
and
addr16
inc
in
xchg
in
pop
jl
das
add
cmp
jecxz
cwtl
jbe
out
stos
add
cs
fwait
add
add
pop
mov
dec
pop
outsl
loope
adcl
xor
add
cmp
mov
in
add
sub
mov
cwtl
push
mov
jecxz
add
pand
push
hlt
loopne
jae
add
sbb
lret
pop
mov
sub
es
and
add
jg
mov
js
cmp
xchg
mov
jne
add
mov
add
cmpsb
sub
adc
pop
pusha
imul
cld
in
repz
sbb
mov
or
xor
rolb
cmp
mov
xchg
add
rcr
fld
and
loop
je
insb
lea
mov
add
or
cmc
mov
add
aas
decb
jns
je
jno
add
or
daa
adc
push
add
adc
lods
pop
enter
or
int3
mov
std
pop
sti
sarb
add
shlb
and
mov
cwtl
dec
add
and
add
add
lds
adcl
sbb
xchg
add
cltd
popf
fsts
mov
add
shll
enter
add
nop
jmp
adc
loopne
ret
shl
enter
repnz
or
lods
add
xor
fistpll
jp
ficoml
add
stc
jne
dec
fiaddl
movsl
nop
cmp
xchg
gs
shll
int
add
testl
lret
test
mov
arpl
clc
mov
imul
test
aam
mov
cmp
jle
and
inc
outsb
push
sahf
lret
sub
sbb
pop
popa
dec
sub
in
orb
sbb
cmc
add
cmp
or
adc
fwait
je
sub
sar
xchg
cs
cmp
aas
scas
add
lret
int
dec
add
jnp
cmpsl
xchg
imul
in
fnstsw
add
mov
sbb
add
add
and
lods
icebp
or
nop
push
add
insl
mov
dec
loope
xchg
dec
fldl
xchg
lcall
div
pop
decl
imul
add
aad
add
repnz
or
ljmp
pusha
jbe
jecxz
add
add
popl
sub
mov
xchg
add
notb
cmp
dec
std
and
pop
add
rcll
dec
adc
add
gs
adc
fmuls
sbb
les
iret
insb
add
pop
sbb
ret
jmp
nop
push
mov
push
xchg
fs
ss
outsl
loopne
mov
xchg
adcb
mov
add
int3
mov
adc
shrb
push
repz
cmovle
out
lods
lea
out
inc
add
repnz
pop
or
cs
and
sbb
test
cli
mov
in
add
adcl
mov
cltd
leave
inc
fadds
in
push
movsb
pop
ja
cmp
adcb
hlt
gs
pop
add
lods
sub
add
lahf
inc
scas
add
jno
hlt
mov
fnstcw
push
xchg
iret
fists
dec
sets
inc
loopne
testl
popf
and
mov
out
icebp
inc
mov
fsubl
push
mov
loopne
pop
add
js
mov
lock
xchg
in
add
lods
push
fisttpll
xchg
out
fisubs
push
addr16
mov
or
jmp
xor
dec
push
sbb
sbb
dec
rolb
mov
add
add
push
out
sub
xor
scas
add
sbb
loopne
and
ror
loop
add
pushf
mov
stos
or
ret
add
push
jl
add
add
fiadds
add
mov
xchg
cwtl
inc
add
pop
outsb
subl
clc
sub
xor
dec
fiaddl
xlat
push
mov
movsb
pop
inc
adc
clc
inc
cmp
lods
cmp
ljmp
jae
add
nop
fstl
int
stos
add
xchg
adc
xor
pop
lahf
aam
push
loope
into
rcrb
in
mov
add
lds
push
fstpt
mov
mov
ds
inc
pushf
es
aam
mov
cmp
add
mov
out
cmp
fildl
adc
push
xor
push
fadd
jnp
mov
push
out
xor
pop
and
cli
xchg
cmp
jmp
outsl
sub
adc
cwtl
nop
aas
je
cmc
add
jns
out
adc
hlt
add
or
push
mov
dec
add
dec
xlat
lret
and
out
movsl
roll
pusha
icebp
or
push
mov
inc
inc
add
lods
add
in
stc
loopne
leave
add
and
add
mov
and
testl
xor
xchg
mov
push
jns,pt
orb
test
cmc
push
add
dec
popf
add
sub
ljmp
pop
pop
stc
cmp
adcb
mov
sar
push
mov
shlb
ss
xor
into
repnz
add
stc
mov
ret
jmp
lea
xor
out
sbb
jnp
push
mov
je
ret
scas
pop
scas
push
test
jno
mov
pusha
into
loopne,pn
dec
jmp
add
adc
arpl
push
jecxz
sub
jne
add
std
cld
lret
add
hlt
dec
xchg
mov
and
add
aad
jb
sti
add
xchg
adc
inc
jge
sbb
xchg
and
or
add
pop
mov
lahf
pop
add
pop
inc
call
add
fildll
popf
sbb
xor
aam
mov
sahf
xchg
mov
mov
fiaddl
mov
shll
dec
imul
rcrl
adc
mov
lcall
outsb
add
fsts
xchg
xor
push
and
xchg
aas
push
xchg
pop
and
adc
jecxz
lods
dec
pop
adc
outsl
dec
jmp
pop
xchg
dec
and
push
repnz
imul
cli
add
sbb
cmp
sbb
mov
sub
rcll
aam
mov
orl
jne
add
xchg
or
pusha
outsl
dec
adc
add
mov
negl
add
les
loop
popf
imul
repnz
mov
xchg
cli
xor
mov
cltd
xor
jb
or
or
add
mov
cmp
incb
jae
mov
mov
in
jb
or
loope
push
out
outsb
inc
mov
jnp
cmp
or
push
out
inc
sbb
into
add
hlt
and
dec
and
out
jno
add
cld
inc
insl
adc
xlat
add
addl
add
aam
mov
jg
fstpt
call
es
out
cwtl
sbb
dec
mov
sub
sahf
loopne
push
outsb
ljmp
sbb
add
inc
in
jge
out
add
leave
and
out
in
lods
ja
testl
outsl
pop
add
loop
sub
dec
or
add
adc
push
sarb
aaa
lock
mov
sub
adc
mov
add
leave
mov
push
dec
filds
out
mov
sub
in
add
pop
add
xor
xchg
add
in
mov
shrb
add
dec
ss
nop
adc
pushf
int3
es
cmp
pop
push
mov
in
add
popa
pop
in
lods
add
cmc
inc
imul
cmp
aas
out
sub
imul
push
add
or
jne
add
jb
es
push
xlat
inc
pop
mov
inc
movsl
inc
add
sub
shlb
rolb
mov
loopne
add
addr16
cld
ja
hlt
xlat
fldcw
add
pop
clc
xor
pop
cmc
push
add
jo
xlat
test
arpl
xor
pop
sahf
xchg
pop
push
mov
mov
in
in
es
filds
aas
movsl
push
add
test
sub
lods
add
bnd
add
xchg
and
mov
sbbb
pop
adc
push
popf
mov
fistpl
add
mov
dec
and
lcall
mul
adc
xor
pop
mov
dec
dec
cli
rcr
aam
addb
pop
jbe
pop
lock
add
cs
test
add
sbb
add
pop
add
sub
and
inc
add
mov
add
movsl
xchg
sbb
insl
test
lcall
popf
or
lods
in
add
ficoml
sub
cli
stc
add
les
add
sub
iret
in
pop
push
add
movsl
or
add
push
dec
xlat
idivb
push
ljmp
je
ja
pop
ljmp
jecxz
daa
pusha
jmp
mov
sub
into
adc
adc
ds
ljmp
rorl
sub
add
sbb
fdivs
call
pop
stc
mov
add
sub
sbb
repz
adcb
or
adc
sbb
mov
inc
sub
into
js
add
stc
pusha
xor
add
add
push
add
sbb
fstpt
and
add
leave
data16
cmp
cmp
fcmovbe
test
mov
clc
mov
add
xchg
fcmovnbe
shl
dec
mov
loope
in
rcl
push
xchg
int
fcmovb
xchg
pop
enter
dec
ret
adc
or
inc
mov
les
cmp
push
dec
lret
mov
cli
fxch
cld
xchg
mov
mov
xchg
cs
xchg
imul
pop
sbb
mov
jle
add
fstl
pushw
and
xchg
xchg
imul
sahf
filds
inc
sbb
push
mov
jbe
movups
in
sbbb
mov
imul
outsl
fsub
rorb
push
insl
out
mov
and
int3
ljmp
cld
adc
xchg
add
push
xchg
sbb
push
inc
movsl
dec
push
pop
jb
add
lcall
stc
fmul
pop
add
xchg
ss
cli
sbb
mov
sub
test
inc
fwait
add
dec
pop
jb
mov
imul
add
cld
fcmove
shll
add
fdivrs
add
xor
cld
push
ud2
fisubs
sti
inc
sub
mov
jns
inc
fnstenv
push
xchg
ret
in
nop
movl
jnp
inc
push
ret
cmp
mov
imul
push
test
aad
test
cld
sbb
insl
cmp
iret
js
icebp
add
mov
cmp
add
ss
lea
add
push
arpl
jns
add
rolb
add
push
dec
sbb
ret
mov
sub
fwait
and
fstpt
jnp
into
push
push
in
fs
jb
add
add
pop
adc
sub
and
jbe
add
and
mov
imul
stos
add
and
sbb
std
push
jmp
add
cld
testb
jp,pn
ror
out
dec
add
xor
add
sbb
out
and
and
xlat
xchg
iret
cld
and
xorb
mov
pop
incb
xor
dec
mov
shrl
data16
xor
in
mov
adc
scas
jmp
aas
fldl
pusha
jnp
mov
movsb
int
aas
dec
cmpsl
mov
add
test
cli
into
push
mov
retw
sbb
insl
mov
cwtl
rolb
mov
fmull
loop
idiv
add
mov
push
xchg
addl
fstpl
inc
roll
cmpsl
scas
dec
call
pusha
data16
add
dec
push
loop
std
out
seto
or
add
roll
add
jl
test
loope
add
push
add
ja
push
sbb
xchg
add
inc
fiaddl
jle
pop
lds
push
or
dec
xchg
imul
enter
cmp
cmc
flds
lods
bound
call
inc
pop
stos
push
jns
incl
jle
fwait
add
imul
scas
cwtl
cmp
xor
add
mov
fists
xor
cmp
add
push
cmp
ret
pop
or
mov
mov
loope
addl
sbb
stos
addl
sub
ljmp
into
fsubr
or
add
mov
out
lock
add
sub
aam
outsl
cwtl
sbb
fists
das
jns
or
jne
iret
add
js
cld
icebp
lds
cmpsb
or
jmp
popf
add
jo
inc
pop
int3
and
les
loop
inc
ja
fsubp
shll
aas
and
int
testb
push
lcall
adc
adcb
lahf
adc
mov
add
test
mov
inc
cmpb
cltd
mov
std
addl
lds
addb
mov
mov
sarb
xor
inc
inc
mov
ljmp
shl
mov
icebp
cwtl
repz
cltd
jl
pushf
out
inc
add
testl
out
stos
js
mov
sbb
dec
pop
ret
test
add
sub
jno
test
loope
add
lret
add
inc
cld
imul
lds
cltd
iret
les
jmp
jns
pop
fsts
cmpsl
add
lods
fcomps
xor
add
lahf
pop
cmp
hlt
mov
inc
insl
jno
pop
mov
fildl
mov
in
mov
dec
enter
mov
xabort
jg
bnd
scas
out
mov
add
sti
mov
rcr
xchg
in
pop
mov
mov
movsb
push
jns
sbb
jae
push
out
pop
cmpsl
div
fucom
insb
hlt
lahf
pop
push
call
mov
pusha
lret
call
mov
push
adc
aaa
pop
mov
push
fs
pop
mov
scas
movsb
jns
cmp
int
push
imul
add
cmpsl
rsm
icebp
xor
cltd
adc
out
subb
jle
pushf
inc
aad
rcrl
add
jo
repnz
or
add
jae
int3
and
mov
mov
nop
add
ds
das
mov
jbe
dec
shll
cwtl
mov
stc
aam
sbb
pushf
add
rcrb
imul
out
add
cmp
ret
xchg
sahf
out
jle
sub
add
bound
fadds
mov
pop
sahf
iret
mov
cmp
mov
test
and
imul
push
pop
xchg
into
mov
and
call
add
enter
mov
add
and
jp
push
or
fildll
mov
call
dec
les
add
rolb
aad
push
and
and
add
jge
ret
stos
jle
add
jb
mov
aas
sub
test
jl
add
pop
or
cmp
push
mov
mov
lods
lock
in
imul
out
jno
stos
outsb
xchg
mov
add
sub
or
xchg
insl
ja
add
fsts
ja
ds
test
push
ret
jno
mov
push
lahf
icebp
stc
and
adc
call
mov
hlt
loopne
clc
or
cmp
mov
cld
add
jbe
loop
fists
mov
mov
shll
cmpsb
mov
pop
sbb
mov
inc
sbb
pushw
and
test
or
add
add
ljmp
and
iret
cwtl
add
repnz
adc
add
xchg
dec
std
push
in
je
movsb
sbb
jle
pop
mov
hlt
sub
call
lahf
clc
xchg
mov
jmp
out
ja
mov
fcoms
and
je
bound
pop
xchg
inc
insl
add
jmp
mov
bound
mov
popa
insb
or
add
pop
pop
sbb
cld
data16
rclb
add
adc
dec
test
insl
add
aas
shr
pop
dec
pop
outsl
pop
add
cltd
add
jo
pop
dec
mov
adc
mov
cmp
movb
dec
add
repz
add
mov
das
cmp
sbb
push
ja
cmp
cld
call
sbb
psllw
jmp
outsl
lahf
out
or
mov
add
mov
in
add
pop
xor
gs
lock
add
shll
add
add
push
jmp
add
dec
xlat
sub
shl
xchg
add
jl
clc
cmp
test
stos
daa
sbb
lock
clc
outsb
cmp
fdivs
add
and
movsb
pop
mov
scas
dec
lret
adcb
jmp
add
xchg
fistpll
pop
rcll
pop
movsl
hlt
or
ds
fildl
sub
sub
adc
adcl
add
add
mov
jge
psubusw
sub
xor
add
cltd
push
cmp
inc
pop
push
push
sub
mov
nop
movb
mov
mov
jle
fiadds
fbstp
mov
cmp
adc
ds
sbb
cmp
loopne
cwtl
lods
add
int3
shrb
divl
test
add
adc
sti
pop
fmull
add
mov
push
das
add
int
sahf
cmc
test
add
arpl
rclb
notb
xor
add
js
int3
jo
pop
cwtl
or
jb
jae
and
popa
arpl
sub
cmp
outsb
add
leave
fs
cmovl
jne
cmp
hlt
aas
cmp
xchg
scas
add
movsb
mov
in
push
ds
lods
dec
imul
clc
popf
outsb
addl
pop
outsl
lds
imul
rolb
sbb
fisttpll
shl
xchg
fcmovb
arpl
add
and
xor
imul
sbb
popa
or
xor
sbb
add
and
add
lcall
jne
add
push
mov
pop
iret
pushf
ljmp
inc
sbb
dec
jb
insl
lret
add
in
adc
fidivrs
in
inc
sub
mov
pop
es
jns
mov
jae
mov
imul
jo
int
inc
add
es
xor
adc
decl
mov
movsb
mov
adc
cld
or
adc
shrb
inc
ja
scas
add
repnz
xchg
add
frstor
add
cltd
flds
fdivrl
daa
xchg
fs
fdivrs
das
adc
pop
ficomps
daa
sar
cmp
nop
add
rolb
stc
cmpsl
xor
add
aad
mov
pushf
in
nop
sub
or
or
push
addr16
or
scas
imul
dec
or
add
lret
fldl
fdivrl
inc
or
stos
add
adc
aam
testl
test
mov
enter
lds
add
jno
push
adc
mov
cwtl
addr16
push
and
dec
pop
and
pop
sti
mov
out
in
cmpsl
mov
shlb
sub
fldl
mov
push
in
and
js
rol
jns
add
hlt
xchg
lock
add
les
cs
add
mov
dec
popf
bound
push
fwait
cmp
cmp
pop
test
sbb
flds
jb
xor
rorb
add
aad
xor
fisttps
sub
inc
pop
mov
add
shrb
and
push
and
test
popa
fimuls
nop
cmc
add
fstpt
arpl
je
rorl
add
scas
sub
out
mov
push
stc
mov
pop
add
aad
lcall
xchg
das
push
scas
mov
roll
callw
nop
add
pop
sub
std
sbb
adc
jbe
cmp
outsb
pop
mov
les
bound
mov
or
add
lss
dec
pusha
add
push
mov
leave
mov
xchg
pop
add
loop
and
ss
iret
add
je
outsl
add
call
loopne
add
dec
hlt
cmp
out
cltd
pushf
jmp
push
adc
add
jns
push
add
adc
jl
je
enter
push
lds
daa
sbb
dec
mov
test
push
sub
add
xor
aam
dec
cmp
les
dec
pop
add
lcall
add
jb
add
aas
into
nop
pop
sbb
fadds
add
mov
add
movsl
inc
jp
rolb
sub
sub
movsb
add
stos
call
mov
in
andl
add
lods
fwait
cmc
xchg
xor
xor
rorb
mov
les
shrl
into
and
ds
aam
jbe
cmpsb
jle
bound
mov
testl
addb
cmp
add
pop
in
rol
mov
cli
add
or
hlt
jno
cmp
or
arpl
les
xchg
mov
add
mov
inc
jmp
test
add
mov
out
pop
mov
cmp
pop
add
adc
sti
test
add
inc
jp
stos
pop
repnz
cmp
dec
insl
jo
pop
hlt
pusha
add
and
bound
push
xor
ljmp
cmc
inc
cli
shlb
cld
lcall
mov
inc
xchg
lock
cwtl
lds
or
pop
jg
mov
cmp
jecxz
std
adc
add
into
add
daa
sbb
pop
bound
inc
mov
int
lcall
fbld
inc
pop
mov
inc
lahf
add
sbb
mov
cmp
add
testl
daa
sbb
mov
out
movsb
push
or
testl
cltd
in
adc
out
lds
add
fwait
mov
cmpsl
xchg
cmc
add
and
testb
sarl
popa
aas
arpl
loope
out
icebp
add
inc
js
sbb
loop
sbb
mov
xchg
push
jg
movsb
adc
dec
add
jle
or
pushf
icebp
mov
mov
and
add
insb
dec
orb
or
pop
add
add
orl
in
add
and
xor
jo
pop
add
test
pop
push
and
dec
xor
add
flds
adc
jle
stos
andb
mov
fiaddl
mov
daa
and
sbb
lock
lods
push
ss
call
rcrb
mov
rcr
add
scas
sub
pop
add
xchg
pop
pop
push
mov
and
ficomps
fs
sbb
push
push
sbb
lret
jl
or
push
pop
ljmp
add
mov
cmp
cwtl
ss
andb
sub
aaa
and
dec
cmp
add
adc
add
fistps
pop
shrb
bound
add
lea
hlt
sbb
cmp
dec
fnstcw
xor
and
xchg
xlat
pop
add
fcmovnb
pushf
pop
lret
mov
fmulp
call
add
das
mov
inc
add
mov
popa
pop
or
paddb
sbb
add
and
decl
paddd
fmull
or
xor
dec
pushf
sub
xchg
pmuludq
shlb
cmp
adc
xor
sbb
dec
xor
negb
adc
sub
int
xchg
xchg
sub
cmp
in
or
movb
mov
shrl
lea
mov
dec
mov
xor
mov
in
mov
dec
fiadds
pusha
gs
xchg
or
push
outsb
push
mov
ds
add
jae
out
add
imul
jno
ret
mov
ret
fs
pushf
and
cmp
adc
add
or
push
adcb
gs
xor
inc
or
dec
inc
mov
add
jb
bound
in
shrb
sub
mov
jne
add
lcall
pop
push
insb
in
adc
lds
mov
lret
pop
xchg
pop
add
addb
cs
add
scas
xchg
sub
push
mov
add
stos
pop
call
dec
push
cld
jbe
sub
std
add
dec
add
fisubrs
mov
add
inc
push
in
mov
ljmp
add
sub
pop
cmpsb
out
mov
sub
sbb
add
fldl
les
push
rcr
mov
call
enter
inc
jne
push
add
jge
sahf
xchg
add
pop
push
dec
aad
push
add
pop
sbb
add
mov
xor
add
push
in
repnz
pop
hlt
sbb
and
adc
push
add
mov
or
rcr
add
dec
and
test
add
adc
fs
xchg
imul
ret
xchg
adc
xchg
in
sbb
loop
cmp
sarl
adc
mov
sbb
insl
in
pusha
xchg
xchg
ret
sbb
sti
clc
stc
mov
js
or
cs
cmpsb
add
or
pop
mov
mov
mov
rcrb
cmc
add
mov
mov
push
negb
xorb
add
mov
push
add
dec
cmp
cwtl
adc
adcl
shll
testb
loope
scas
sub
mov
dec
cwtd
jb
xor
shrl
add
mov
sbb
mov
xchg
dec
lret
cmp
test
add
sub
jmp
xchg
hlt
sahf
inc
int
testb
inc
pusha
jle
mov
pop
sub
shlb
lock
xor
rcr
push
js
loope
mul
rorl
jge
fistl
xchg
push
cmc
movsb
das
add
push
pushf
add
cmp
pop
jo
repz
mov
add
rcrl
add
sub
sbb
add
push
inc
add
sbb
std
sub
add
cmp
cld
ja
ljmp
cmp
lods
jno
adc
pop
cmpsb
mov
mov
inc
pop
add
aaa
out
lock
inc
push
pop
cmpsb
xor
pop
adc
and
repz
dec
add
sti
inc
rolb
enter
mov
jnp
sub
gs
pushf
push
mov
inc
out
push
add
mov
add
in
sbb
iret
icebp
xor
aam
das
add
movsl
in
loope
lcall
add
enter
push
outsb
push
adc
add
cli
and
dec
add
push
fcomps
add
xchg
out
pop
cltd
xchg
cmpl
lahf
lods
cmpsl
jge
pop
incl
addl
inc
mov
in
and
jns
add
das
sub
movsl
data16
gs
push
int
imul
push
or
int3
pusha
and
in
xchg
mov
xchg
sub
ret
add
adc
outsl
je
mov
pop
test
mov
cld
pusha
xor
in
add
push
add
pop
pop
sar
sub
add
and
imulb
dec
add
dec
test
add
pop
add
mov
mov
adc
sbb
mov
loope
push
jle
fiadds
add
jns
mov
stos
sarb
mov
setp
adc
inc
notb
int3
icebp
push
lods
enter
add
jl
orb
add
push
mov
add
test
jg
dec
pusha
les
xor
cwtl
add
push
jae
add
mov
sbb
shr
xlat
rorb
xor
pop
adc
pop
mov
out
loopne
cmp
mov
add
jle
int
fsubr
xor
jge
sbb
mov
andb
out
adc
add
and
shlb
and
jb
cmp
iret
mov
add
rol
xchg
push
sub
in
fidivs
push
mov
lods
outsl
add
or
movsb
xchg
sub
clc
inc
jg
add
aas
pop
int
lds
movsb
lret
add
jnp
add
jns
sub
xchg
pushf
push
and
sahf
sub
stc
pop
cmp
ret
dec
jnp
fisubrs
inc
adc
pushl
add
sbbb
add
insb
cmpsl
call
sub
je
push
fisttpll
jp
add
xor
cmpb
push
test
pop
push
sbb
add
fwait
or
add
push
dec
out
mov
add
fsts
jp
scas
add
push
outsb
pop
mov
adc
or
cltd
fidivl
add
jb
dec
incl
shl
cmp
mov
fwait
pop
lock
popf
pop
jge
pop
dec
pop
jp
sbb
fs
aam
das
cld
add
mov
push
clc
ja
or
outsl
and
test
test
rorb
dec
add
sbb
add
sub
lods
pushf
xchg
loop
ret
shlb
xor
jne
jg
push
lcall
sbb
xchg
sti
and
scas
test
ljmp
cmp
add
testb
inc
jbe
cmp
mov
push
imul
cmpsb
sbb
mov
hlt
mov
push
lods
iret
cmpsl
xor
inc
add
xor
cwtl
movsb
ljmp
add
sbb
sbb
cmp
loopne
cmc
sub
pop
push
mov
or
pop
sub
ja
subl
pop
add
push
mov
lods
add
push
sub
or
subl
gs
add
stos
push
outsb
add
fcmovnbe
dec
int3
jl
add
mov
scas
add
out
and
pop
das
jb
push
mov
add
ljmp
outsl
dec
aam
xchg
es
add
sahf
cmpl
add
inc
lea
insl
mov
xchg
add
and
dec
outsb
cs
addr16
sub
jae
mov
aad
sbb
call
fmuls
dec
fldl
jmp
pop
and
vzeroupper
push
pop
shlb
add
ret
sbb
xor
mov
flds
leave
outsb
test
sti
and
push
clc
nop
add
popa
xor
add
dec
and
popf
cmp
adc
add
repnz
icebp
fstpt
sbb
sub
divl
sarb
hlt
sub
inc
jmp
add
mov
xor
push
fcoms
ja
add
add
push
pop
xorps
inc
fadds
in
cltd
jo
add
cmp
rcrl
inc
xor
dec
push
sub
out
enter
push
pop
add
jecxz
add
jbe
dec
fsub
ret
jo
inc
ljmp
mov
rolb
add
inc
pop
and
pop
add
es
jecxz
jl
sbb
jbe
mov
xorps
cmp
or
jg
pop
loope
jne
add
imul
add
stc
fisttpll
ret
outsl
hlt
mov
jo
add
cld
mov
lea
filds
clc
mov
dec
add
mov
xchg
add
jle
add
or
add
aaa
cld
pusha
xchg
and
jb
lock
mov
lret
or
lahf
enter
push
pop
xchg
adc
in
and
add
pop
xor
mov
push
stos
lcall
lret
ja
ret
mov
bnd
inc
pop
js
push
push
jne
mov
add
mov
in
mov
jns
mov
cmpb
jmp
jg
mov
mov
or
leave
sahf
mov
roll
cmp
orb
xor
jnp
add
jge
psubd
rclb
dec
mov
xor
or
or
xchg
pop
aaa
sti
pop
addl
dec
add
adcl
push
inc
mov
cmp
stc
adc
js
mulps
add
add
add
mov
subb
xchg
add
into
in
les
add
sbb
push
mov
xchg
or
adc
mov
aas
popf
aaa
xchg
shrb
cld
cmp
out
xor
fnstsw
lods
loop
xchg
push
add
sub
jae
mov
scas
cmp
or
add
bt
sbb
pop
popa
mov
add
hlt
jp
push
jno
add
inc
js
jbe
xor
add
fcoml
push
mov
inc
popa
add
jl
inc
ljmp
add
add
test
add
jns
fstl
add
sbb
jnp
in
ror
push
je
jns
add
mov
sub
mov
inc
add
pop
cmp
pop
faddl
divb
sub
out
cld
add
popa
shrb
pop
sbb
push
inc
cmp
adcb
sbb
dec
jbe
sbb
add
lock
outsl
pop
mov
inc
xchg
rolb
pusha
sub
addb
dec
sbb
fisubrs
insb
push
xor
adc
xchg
int3
in
js
sbb
sub
inc
and
xlat
fidivrl
or
mov
lock
mov
ja
xlat
loopne
push
xchg
mov
add
lock
add
nop
pmaddwd
icebp
or
sbb
lret
out
jb
loopne
or
fs
pop
xchg
mov
push
pop
jno
add
inc
in
mov
jl
in
rolb
add
enter
stos
pop
jno
add
lcall
lea
call
stc
mov
outsb
mov
and
pop
sub
mov
xchg
jg
int3
movsb
sub
cltd
add
jno
xor
xlat
into
int
call
lret
pop
mov
aam
test
mov
cmpsb
add
jne
cmp
imul
inc
inc
lahf
and
in
push
sub
jne
outsb
dec
add
mov
push
add
mov
and
sub
lret
fcomps
inc
mov
adc
fimull
xor
dec
shlb
cwtl
rcll
cmp
int3
cmpb
sub
and
dec
popa
add
test
add
push
fcmovbe
mov
shll
sub
repnz
jl
incl
stos
lcall
adc
add
mov
jecxz
aad
cmp
inc
xchg
push
or
push
push
xor
xchg
mov
call
lods
mov
cmc
sbb
jo
es
in
dec
movsb
nop
addl
push
xor
ficoms
mov
test
jo
dec
mov
int
bound
es
add
cld
mov
inc
or
cltd
gs
sbbb
fistps
xor
or
cmp
lods
push
cmp
inc
mov
xchg
loopne
push
add
xlat
sarb
jle
add
es
push
lfs
jmp
loopne
popa
xchg
add
fidivrl
sub
filds
push
adc
and
push
add
add
sbb
cld
cmpsl
mov
mov
je,pn
test
lret
push
lods
fnstenv
cmp
or
imul
xlat
fdivrs
cmp
xchg
orb
mov
xchg
aaa
cmpl
test
xchg
add
ret
inc
out
add
mov
mov
pop
out
mov
ds
or
mov
xchg
repnz
and
adcl
pop
mov
push
mov
add
adc
cmp
mov
jne
sbb
jo
pop
cwtl
in
enter
out
es
addr16
mov
mov
add
xchg
sti
pushfw
pop
mov
movsl
inc
rcl
dec
mov
testb
dec
stos
cltd
pop
in
mov
js
add
xor
pop
add
fmull
ficomps
nop
cwtl
lahf
js
testl
fidivs
cmp
add
popf
fcom
call
cmpsb
jg
or
fisubl
fidivrs
add
lods
inc
je
cld
add
or
cltd
lock
dec
mov
lea
xchg
call
xor
push
mov
adc
add
mov
sub
lods
sbb
mov
inc
pop
sbb
xchg
jl
data16
sbb
ret
sub
mov
add
stos
and
sbb
xchg
xchg
add
sbb
jmp
add
mov
mov
add
and
decb
inc
mov
pop
loopne
push
add
aam
popl
outsb
adc
inc
adc
filds
popf
and
loopne
imul
lret
movsb
xor
jle
mov
mov
mov
test
xor
xchg
add
mov
push
xor
cmp
pop
mov
lret
add
xchg
fs
cmp
sub
stos
push
enter
xorl
bound
movsl
add
iret
into
stos
push
mov
insl
imul
ret
push
filds
fsubs
xchg
adc
scas
jecxz
mov
sbbl
adc
loop
dec
movb
pop
or
mov
jecxz
sbb
dec
pop
cmp
mov
jo
es
lds
sbb
mov
add
and
out
mov
add
les
xchg
int
xchg
push
loopne
pop
add
bound
inc
std
mov
push
shrb
mov
cs
jmp
in
pushf
mov
loopne
mov
dec
xchg
inc
incb
sub
jl
add
lret
xchg
insb
adc
mov
jecxz
adc
frstor
inc
jp
es
inc
test
pop
jge
testl
cmpsb
inc
rolb
pop
sbb
icebp
jnp
mov
test
pop
outsl
push
sbb
adc
cmp
jns
jg
std
xor
das
mov
add
xchg
push
aaa
cs
xchg
add
jns
push
jno
add
fwait
or
sahf
aad
and
aam
std
adc
repnz
movsl
outsb
js
dec
rorb
aad
es
sub
lret
mov
test
adcl
addb
mov
js
add
es
outsb
call
cmc
add
addr16
adc
popa
mov
add
in
int
and
and
hlt
xor
xor
out
jnp
dec
ljmp
lcall
fbstp
sbb
pusha
xchg
dec
movl
test
out
xor
mov
mov
sbbl
add
inc
clc
cmp
jge
fcmovnbe
dec
scas
addr16
in
add
enter
mov
xor
fbld
sub
mov
aam
sbb
xchg
jmp
inc
add
rol
pop
popf
in
into
add
jge
and
mov
and
cmp
cmp
fiaddl
out
jnp
inc
fwait
ds
add
jo
add
out
sub
lcall
push
mov
repnz
flds
jecxz
add
mov
and
stc
jne
sbb
and
dec
sbb
stos
rcrb
pop
aas
add
cmc
pop
loop
add
cmpsl
or
jle
fwait
addl
popf
mov
lret
add
adc
leave
add
orb
pop
xor
mov
pop
andb
sahf
mov
pop
mov
adc
sbb
lock
push
add
bound
out
sub
frstor
add
mov
add
mov
mov
sbb
jl
data16
mov
sbb
sbb
repz
in
fstpl
adc
push
mov
xorl
ret
and
fisttps
mov
stc
xorb
jg
add
rorb
popf
adc
jmp
enter
xor
add
cld
add
adc
aas
cmp
into
aam
jp
or
dec
sbb
fstps
push
cmp
test
mov
out
add
cmp
dec
cltd
pushl
rolb
scas
cmp
imul
sbb
or
mov
daa
xchg
mov
in
enter
mov
xchg
add
stos
cmp
cmp
sbb
xor
add
sti
adc
add
push
dec
sub
shlb
aam
mov
rorl
add
pop
mov
popa
sub
shl
lock
dec
add
pop
sbb
dec
xor
add
mov
leave
adc
adc
push
xchg
add
idivb
cltd
lock
call
mov
sbb
in
pop
daa
outsb
dec
push
xor
or
inc
add
call
insb
jl,pt
jno
add
repz
stos
sbb
add
dec
xchg
jns
dec
mov
std
repnz
jne
xchg
icebp
fildl
sbb
fistps
and
add
in
jge
ljmp
xchg
loopne
pop
and
mov
inc
cmp
out
add
into
divb
mov
xchg
test
or
mov
imul
popa
mov
aam
mov
outsl
fdiv
cmc
add
and
ss
or
add
xchg
jmp
imul
xchg
lock
push
dec
jnp
pop
fisttpll
and
stos
add
push
adc
xor
repnz
add
jo
dec
add
mov
ucomiss
shll
jae
sbb
pop
fiadds
adc
inc
pop
iret
add
je
hlt
loope
stos
clc
aaa
jl
pop
popa
mov
or
add
fmull
or
mov
movd
xor
adc
inc
mov
sub
int
jl
outsb
add
inc
mov
ljmp
rol
out
push
fadds
add
jns,pt
pop
inc
xchg
adc
xchg
shll
out
cs
ds
add
lea
pop
and
stos
inc
mov
aas
or
add
cs
loop
movsl
xchg
add
mov
push
aas
ret
jbe
add
xor
pop
or
cmp
sbbl
cwtl
iret
xchg
pxor
inc
mov
sbb
test
lock
fcomps
stc
testb
fidivrs
fmul
sbb
rclb
push
lea
cmp
add
mov
xor
icebp
jne
mov
adc
movsl
dec
push
mov
nop
add
dec
jge
add
cmp
sbb
pushf
pusha
imul
stc
add
jl
adc
lret
sbb
mov
pop
mov
jle
and
sbb
mov
rcl
cmpl
cltd
xchg
in
jo
push
pop
sbb
shlb
fiaddl
test
mov
movb
int3
in
js
mov
pop
out
or
xor
add
and
xchg
add
cmp
dec
ljmp
data16
or
test
aas
jle
add
xchg
cmpsl
push
test
xor
stc
or
daa
add
lret
mov
pop
shll
sbb
jns
sar
inc
add
mov
loope
gs
pusha
daa
and
test
add
and
pop
xchg
jae
add
push
pop
and
add
dec
sarb
inc
cmp
add
pop
adc
sti
ds
push
push
push
je
pusha
enter
and
imul
ret
push
fdivrl
adcl
mov
stc
sub
cltd
dec
push
mov
xchg
jne
fcmovnbe
subb
pop
xor
cmpsl
daa
or
jp
pop
inc
pcmpeqd
inc
jmp
loop
lods
or
loope
orb
mov
fs
fldcw
add
pusha
outsl
adc
stos
mov
in
stc
sub
loope
ljmp
psadbw
add
je
mov
add
jmp
jecxz
add
cli
push
popa
inc
xchg
add
jne
rcrb
push
mov
sbb
sbb
xor
pop
testb
jge
cmp
outsb
fsubl
movlhps
cmp
adc
hlt
sub
incb
mov
mov
mov
lcall
add
cmpsl
repz
add
adc
push
clc
loopne
out
dec
add
or
dec
shlb
sub
inc
movsl
jnp
ret
neg
add
stc
mov
push
pop
add
mov
sub
inc
dec
lods
hlt
add
adc
les
jmp
lock
mov
call
add
inc
inc
inc
pusha
testb
mov
sbb
adc
adc
jge
mov
xor
dec
leave
mov
les
mov
push
inc
jmp
sbb
dec
push
mov
loope
xchg
cld
mov
add
ret
adc
jl
add
lods
xchg
stc
jge
lds
push
cmp
scas
sbbb
hlt
notl
push
iret
shl
push
pop
pop
inc
popa
push
in
ss
or
gs
sbb
lock
mov
testb
or
sbb
sub
shr
cmp
inc
inc
add
adc
push
and
add
add
sahf
popf
fnstcw
outsl
jecxz
jl
aas
rclb
hlt
lds
xor
test
loopne
xchg
cli
lahf
flds
scas
mov
pop
test
sub
and
bound
dec
mov
xor
add
js
dec
xchg
mov
add
fisttps
lock
add
dec
and
mov
lods
cmp
adc
lods
repz
mov
call
sbb
xchg
lds
add
xchg
mov
call
inc
shrl
loope
cmp
add
add
imul
add
inc
sbb
shrl
nop
mul
mov
push
mov
clc
cltd
cmpsb
scas
test
sub
mov
add
adc
xchg
pop
fnstenv
dec
dec
jle
pushf
out
mov
jbe
push
cli
push
movsl
loopne
pusha
add
inc
enter
add
mov
push
loop
mov
mov
enter
repz
add
shlb
inc
ret
sbb
mov
push
jnp,pn
std
shlb
enter
repnz
call
cmp
jg
add
xor
cmpsb
cmpsl
cs
rclb
fldl
jp
call
outsl
inc
cmp
jecxz
cmp
cmp
jbe
mov
jmp
test
cmc
arpl
add
add
push
pop
les
sub
xor
cli
inc
adc
out
lock
sub
insb
ret
lock
pop
add
mov
jns
dec
aaa
jae
psllw
ret
add
or
sbb
and
jmp
fldenv
inc
mov
fwait
aaa
ds
xor
lcall
fwait
incb
sbb
push
add
mov
data16
bound
add
lods
add
cmp
and
verw
or
call
mov
dec
cmp
lcall
clc
push
mov
ret
pop
rcrb
jecxz
add
aam
str
mov
push
adc
iret
add
in
push
pusha
mov
rolb
pop
mov
cwtl
movsb
and
loope
fsubs
add
pop
mov
es
pop
add
mov
sbb
pop
jne
sbb
repnz
out
add
in
jb
mov
inc
add
fwait
inc
insb
aad
add
push
sub
add
test
or
push
mov
push
repnz
pop
cmp
lds
add
cmpsb
dec
push
lock
int3
add
add
lret
add
das
mov
out
cs
fsubl
cld
add
sub
aaa
mov
add
dec
jmp
ss
add
sti
rorl
or
fdivrl
stos
bound
add
ja
sahf
or
pop
pop
add
movsl
sbb
and
loope
or
and
cltd
aam
mov
cld
incl
out
pop
fimull
lcall
or
arpl
add
inc
int
jae
push
sub
enter
push
or
loope
xor
daa
shrb
dec
iret
fcompl
sahf
jecxz
dec
fimull
cmc
in
or
repnz
xor
addb
negl
cld
sbb
loop
inc
pop
daa
add
mov
fimuls
jecxz
lret
pop
divl
clc
testb
mov
roll
mov
mov
out
dec
xor
ficoms
icebp
add
cmp
push
push
shlb
rorl
jne
fistps
push
push
inc
repnz
sbb
jmp
jg
xor
xchg
and
add
and
fsubr
test
imul
add
xor
test
out
sarl
mov
xchg
cmp
cmpsb
movsb
adc
mov
add
jmp
sub
jnp
cltd
sbbb
xchg
or
jo
or
flds
sbb
stos
out
orl
ljmp
or
push
loope
mov
add
sub
xor
dec
lock
lea
enter
movsl
adc
ss
mov
xor
loope
add
xchg
fidivs
loopne
add
sbb
dec
ss
xlat
sbbl
sbbl
cmp
cltd
inc
mov
pop
cmp
push
fs
add
out
hlt
adc
cltd
cmp
ss
dec
pop
roll
daa
fsubs
sub
mov
aad
jo
std
add
dec
pusha
adc
test
dec
xlat
add
jbe
mov
lods
add
into
xor
mov
es
in
mov
in
in
icebp
and
ds
add
mov
mov
es
mov
fimuls
test
push
fldl
and
mov
push
inc
fsts
scas
pushf
push
lret
test
inc
aas
jl
add
xlat
iret
push
mov
fsubp
mov
hlt
aas
xchg
lahf
add
and
fisubs
push
mov
add
mov
xor
cwtl
mov
xorl
or
and
pop
or
adc
in
fidivrs
in
pop
sbbb
cmp
jmp
out
mov
mov
mov
movsl
icebp
xchg
cmc
addl
fistps
xchg
add
insl
inc
out
in
inc
inc
cwtl
and
in
sbb
enter
sbb
sub
and
lods
incb
aas
add
insl
add
push
push
xchg
in
add
rorb
movsb
add
es
add
mov
rclb
mov
repz
ret
cs
lcall
in
cmp
mov
jecxz
test
add
push
int
and
repnz
shlb
sbb
add
jmp
mov
pop
gs
xor
xor
jno
add
loope
aam
jns
aad
lea
mov
add
add
or
add
push
dec
xchg
mov
add
dec
dec
jo
sub
cmp
add
and
add
cmp
jge
rolb
movsl
and
mov
add
stc
int
jg
sub
mov
jo
push
jb
xchg
fiadds
dec
popf
cmpl
ret
in
fidivs
pop
rcll
int3
or
xchg
mov
out
push
fstpl
verr
mov
add
test
mov
add
daa
mov
add
iret
cmp
imul
add
cmpsl
jno
or
add
test
je
js
add
out
lahf
pushf
scas
dec
aad
in
cmp
push
push
xchg
cli
push
sub
repnz
or
insl
mov
mov
iret
test
addb
inc
sbb
push
push
data16
popf
in
push
cmp
mov
jo
pop
mov
mov
mov
test
dec
mov
dec
jl
add
dec
stc
pop
imul
fs
sbb
add
out
mov
add
shrb
sub
inc
add
in
cmp
mov
imul
add
and
je
pop
fcomi
add
cvtpi2ps
jl
dec
cmp
inc
pop
or
jp
mov
fwait
xor
cmp
data16
mov
repnz
add
jbe
rcl
icebp
mov
cmp
lret
add
mov
cmpsl
cmovae
daa
out
push
mov
call
insb
sub
out
popl
or
leave
add
jbe
adc
nop
adc
pop
ret
jecxz
cld
fcoml
cmp
xor
xchg
push
jb
inc
pushf
add
or
test
add
ss
insl
pop
nop
filds
stos
iret
add
repnz
movsb
les
scas
add
adc
ret
and
push
lret
inc
and
dec
movsl
add
add
jns
inc
je
add
cli
les
and
test
cltd
pop
jnp
add
mov
and
dec
pop
xchg
lods
xorb
sbb
scas
out
push
insb
roll
movl
xchg
inc
add
inc
xchg
int
loope
push
rorb
icebp
scas
add
lret
decb
sub
inc
add
inc
rcr
cltd
js
roll
xchg
arpl
loopne
cmpsb
xor
jnp
cli
push
jns
mov
push
cmp
subb
pop
shld
cmpsb
xorl
clc
fsubrs
add
lret
xor
ja
cmp
cmp
or
pop
sbb
sub
pop
insb
add
xchg
rolb
mov
jno
dec
jmp
clc
pop
sbb
pop
add
or
jge
roll
mov
sbb
add
fmull
inc
mov
add
cmpsb
shlb
dec
and
add
mov
lcall
or
dec
mov
mov
loopne
sub
shl
jae
ret
jge
lcall
addr16
jl
fwait
add
lret
test
mov
add
push
iret
outsl
pop
cltd
mov
imul
test
mov
xor
lock
les
mov
push
add
jbe
pop
int
push
fidivrl
ds
xchg
mov
aas
int3
add
sub
adc
add
jge
rorb
push
cmp
xor
flds
sarb
fsubl
das
add
roll
int
xchg
mov
jle
add
icebp
add
mov
aad
jae
popa
sbbb
scas
hlt
add
adc
lret
imul
adc
insl
test
jp
add
jge
faddl
sub
lahf
gs
add
les
add
lcall
add
lret
add
sub
jne
cmpsb
adc
in
repz
scas
aam
sbb
xor
in
and
add
sbb
stc
add
cwtl
jg
add
jne,pn
rolb
mov
incb
xchg
fistl
push
scas
test
pop
add
jle
cmp
jbe
adc
into
and
faddl
add
pop
jbe
add
scas
outsl
xchg
jge
add
fld
lahf
or
rol
inc
pop
mov
jne
icebp
pop
sub
js
and
jno
mov
push
aam
cmp
shll
dec
jb
fucomp
xchg
push
add
cmpb
out
pop
lds
xor
jge
fnstenv
add
pop
and
pop
jae
sbb
xchg
popa
ljmp
outsb
lock
add
mov
inc
mov
lods
cld
cwtl
hlt
pop
outsl
fisubrs
xor
push
out
sbb
mov
jnp
aam
push
add
aad
sub
insb
jbe
andl
inc
pop
dec
jle
outsb
add
std
mov
jb
sti
lret
push
sbb
movl
insl
lcall
pop
leave
imul
cmp
jbe
mov
add
popf
and
add
sbb
and
into
add
add
add
mov
xor
hlt
add
dec
mov
xor
arpl
fmuls
pop
repnz
add
movsb
push
adc
add
xor
popf
xchg
pop
mov
mov
or
xchg
mov
ffreep
popa
hlt
push
mov
nop
lock
jno
lock
push
dec
subb
add
push
dec
insl
cld
sbb
dec
ror
add
jb
jp
pop
popa
test
addl
dec
lcall
rolb
je
movsl
pop
in
mov
cld
mov
daa
pop
add
icebp
push
popf
in
je
inc
pop
sbb
into
rcl
scas
sbb
cwtl
add
push
sbb
repnz
mov
cmp
int3
les
add
pop
or
mov
mov
xrelease
adc
add
cmc
pop
jnp
popa
mov
dec
pusha
fldenv
xchg
push
lods
mov
addl
aam
in
add
xchg
xor
or
fisubs
mov
incb
pusha
insl
call
xchg
cmp
lret
sub
fs
iret
add
push
dec
fiaddl
ret
rorl
push
xor
sub
pop
mov
mov
enter
aad
adc
jl
shll
or
add
sub
sub
pop
sub
jmp
ss
inc
add
bound
xchg
call
clc
xor
adcl
add
pop
jns
mov
xor
out
fistpl
ret
adc
add
jmp
add
sbb
dec
gs
mov
mov
pop
clc
outsl
push
mov
mov
sbb
fnstcw
cmp
lock
push
inc
psraw
pushf
pop
xor
shlb
insl
cwtl
sbb
icebp
ret
pop
mov
hlt
ljmp
int
pop
add
cmp
mov
int3
dec
mov
ss
mov
add
xor
pop
addps
push
sbbw
xor
sbb
stos
push
data16
adc
cmpsl
jno
lret
sub
out
movsb
mov
insl
fstpt
jo
push
sub
pop
push
lret
out
stc
add
or
stos
movb
or
mov
rcl
jle
out
inc
outsl
jbe
imul
sbb
lock
das
or
lret
cmp
push
cwtl
or
add
insl
jmp
fadds
negb
jge
add
movsl
mov
cld
stc
cmc
add
scas
mov
mov
insl
cmp
and
push
into
subb
sbb
stc
mov
enter
add
push
ja
sub
testb
xchg
lods
lock
push
movsl
jp
clc
inc
add
inc
push
mov
inc
dec
jle
add
or
or
bound
or
pmaxub
jg
cltd
fnsave
add
xchg
push
sub
dec
add
add
push
mov
cmp
movsl
in
pushf
mov
popa
fsubs
jp
inc
mov
add
xor
nop
addl
add
and
cld
sti
data16
lret
loope
and
fldt
fwait
icebp
sti
popa
adc
sub
aaa
jle
jno
dec
adc
cltd
add
cmp
mov
add
mov
pop
push
and
cmp
shrb
inc
inc
loop
and
xchg
popa
inc
push
fmuls
mov
fs
shl
pop
push
shlb
or
or
mov
fidivrs
add
jnp
int3
jg
dec
add
ja
fwait
xchg
testb
sub
push
pop
push
jno
mov
outsl
mov
push
outsb
or
adc
push
add
jbe
call
mov
lret
lret
out
push
add
dec
shr
or
sbb
inc
daa
fdecstp
psubsw
movsb
mov
loopne
ja
sub
pop
out
scas
inc
jnp
mov
adc
jg
xchg
pop
mov
add
mov
imul
fwait
jmp
call
les
movsl
dec
out
pusha
scas
cs
aas
mov
lds
sbb
xlat
push
or
sbb
mov
pop
or
sub
stc
filds
sub
push
addl
adc
add
insl
mov
dec
add
jae
in
aas
cmp
pop
insb
push
sbb
inc
mov
and
inc
push
in
pop
test
int
loopne
aas
repz
addb
dec
pop
pusha
ret
arpl
and
popa
xor
es
pop
nop
mov
in
or
sti
mov
mov
sahf
subps
add
addr16
scas
add
dec
jge
jo
or
add
add
xor
testb
mov
mov
ja
push
stc
pop
shl
pop
jp
pop
sub
jnp
movsl
outsb
pop
jmp
in
add
cmp
xor
xor
cs
inc
fiaddl
sarl
and
cmp
imul
xor
enter
and
sbb
add
pop
push
rol
and
add
dec
addr16
sub
repnz
mov
jecxz
je
cmpb
pop
xor
add
andl
lods
pop
je
jbe
fstpt
jae
add
pop
mov
add
daa
adc
mov
fbstp
clc
xorl
lds
aam
sub
mov
sub
fstl
add
sbb
jns
iret
call
subb
xchg
sahf
mov
jp
xor
jl
sbb
pop
add
cmp
add
fidivrl
scas
dec
aam
xor
cwtl
push
loopne
xchg
sbb
xchg
or
in
cld
jge
ja
jne
inc
mov
adc
lods
push
aad
add
xor
jp
xchg
loopne
fmuls
rolb
mov
add
cld
call
cwtl
fs
or
xchg
add
inc
sub
cli
sub
sub
jno
add
test
es
cmc
add
leave
sbb
hlt
jge
xor
xor
add
push
sub
pop
rol
pop
push
out
lods
imul
andl
data16
push
mov
popl
ficompl
shlb
add
out
cwtl
add
or
add
jns
lods
pusha
mov
mov
sub
add
int3
inc
jb
mov
jbe
movsl
mov
add
xchg
jl
mov
inc
add
pop
adc
addl
mulb
inc
jbe
into
add
add
mov
shl
sar
add
pop
scas
jae
mov
jns
jo
cwtl
adc
cmp
xchg
mov
jle
xchg
aas
mov
dec
pop
aaa
and
inc
lahf
add
dec
push
les
lcall
mov
fld
xor
pop
add
enter
repnz
faddl
push
in
xor
andb
lea
sbb
mov
pop
aad
movsl
ja
out
sbb
push
mov
scas
int
or
enter
cmpsb
jno
out
rorb
loop
movsb
push
cmc
xlat
jo
add
mov
pop
sbb
andl
dec
xor
add
std
mov
aad
push
out
pop
sub
jle
push
and
sahf
mov
movsb
mov
or
jbe
add
mov
xor
xchg
getsec
add
into
fnstsw
pop
mov
ret
jge
psraw
jp
and
add
dec
roll
and
popa
jmp
pop
repz
mov
rolb
cli
jge
outsb
mov
cs
in
stos
and
icebp
clc
pusha
shlb
add
and
inc
jo
sbb
je
js
lahf
pop
xor
xchg
cwtl
cltd
sbb
mov
loope
loop
mov
adc
push
sub
and
into
outsb
mov
xchg
add
mov
mov
call
aaa
jp
clc
push
repz
push
inc
push
mov
pushf
add
idivb
call
sub
mov
testl
mov
xchg
into
xchg
loope
jns
push
aad
cld
outsb
sbb
add
cmp
fnsave
adc
lock
cmp
xor
pop
or
loope
nop
jmp
push
loopne
popa
inc
pusha
sti
and
jmp
adc
adc
push
add
incl
cwtl
push
and
out
adc
adc
add
or
pop
mov
jbe
mov
jns
xchg
add
adc
jg
add
out
shrb
mov
add
adc
push
xchg
addl
pushf
int3
hlt
mov
inc
inc
sub
fcom
mov
in
aas
adc
shll
mov
cmp
popf
xchg
xchg
psllq
mov
cmp
lods
ret
push
in
cmp
xor
cld
mov
cltd
dec
add
mov
push
adc
inc
mov
adc
jns
push
cmp
inc
add
aad
js
add
ret
clc
fidivl
xor
sbb
lcall
rorl
aaa
imul
mov
xor
hlt
sub
pop
jmp
pop
push
mov
add
outsl
sbb
cltd
jno
pop
sbb
cli
dec
jo
adc
jo
add
insb
rorb
xchg
xchg
dec
icebp
enter
add
cmp
add
xchg
popf
push
add
push
sub
jne
loopne
in
add
mov
adc
adc
adc
pushf
pop
mov
mov
cld
cltd
fiaddl
or
pushf
test
xorb
mov
inc
addr16
addb
out
mov
and
inc
roll
push
gs
fwait
mov
test
adc
outsb
adc
in
add
cmpb
inc
lds
xorl
add
pop
sbb
clc
cmpsl
adc
orb
jge
pop
push
mov
add
mov
sti
add
mov
str
imul
test
inc
jo
les
inc
lds
jno
out
js
call
push
aas
loop
sbbb
cltd
pop
popa
add
jge
fisubrs
xor
add
stos
sbb
ja
add
divl
xchg
mov
or
adc
out
cmc
add
addr16
aaa
inc
xor
inc
inc
add
stos
and
repnz
add
or
jge
shll
test
addr16
scas
mov
lock
push
shll
andb
testl
lds
push
mov
push
rcrb
pop
inc
test
mov
jno
scas
mov
decl
rolb
pop
jo
fidivrs
mov
xor
add
add
mov
add
and
jae
nop
jbe
xor
push
icebp
ret
stos
jl
pusha
push
in
adc
ljmp
ja
lods
cmc
sbb
js
fcomps
mov
xchg
shlb
insb
outsl
mov
xchg
add
adc
jg
add
sub
pop
stc
pushf
add
cmpxchg
imul
addr16
jb
cmp
adc
xchg
xor
fwait
ds
mov
add
pop
adc
fistl
stc
add
pop
bound
add
hlt
sub
pusha
test
in
dec
nop
xchg
mov
aam
popf
cmp
leave
jbe
add
and
adc
pop
or
das
xor
push
add
ret
push
push
or
test
jmp
push
xchg
lods
xchg
add
mov
sub
iret
push
sub
push
pop
mov
idivl
and
cltd
mov
incb
sbb
inc
inc
and
mov
and
mov
andl
outsb
and
mov
add
into
andl
jne
sub
repz
shr
or
add
dec
lods
cld
fisubs
add
push
push
push
mov
sbb
and
call
push
sti
pop
les
pop
inc
xchg
dec
adc
jl
add
mov
jge
lods
xchg
adc
cwtl
cmpsl
and
mov
iret
xchg
fmull
add
lods
push
in
imull
in
add
test
xchg
and
add
mov
cltd
mul
add
imul
mov
inc
jp
xchg
inc
loopne
and
lahf
add
mov
add
fstpt
int3
movsb
pop
iret
add
cli
sub
out
loopne
sbb
lock
and
loop
in
aad
push
inc
leave
pop
jbe
add
and
add
test
outsl
add
repnz
adc
pop
xor
icebp
sbb
addr16
jmp
addb
mov
jo
xor
sahf
pushf
add
lahf
test
add
pop
loop
xorl
ja
add
xchg
cmp
mov
pop
mov
xchg
inc
dec
and
ret
add
sbb
mov
aas
pop
mov
pop
sbb
jne
lea
add
xchg
testb
or
push
push
ror
in
testl
fcmovnbe
mov
aas
add
cltd
xor
push
in
cmp
or
pop
loopne
ret
and
dec
xor
sub
inc
jl
jb
popa
push
mov
jl
sbb
in
int3
pop
cmpsb
add
call
lock
lds
add
ret
mov
or
addl
inc
pop
shl
popa
xchg
cld
dec
scas
jge
pop
jg
scas
andb
or
sahf
and
rcll
out
add
enter
mov
sbb
push
mov
add
lret
add
mov
inc
or
add
add
insb
in
shrl
fcompl
adc
scas
push
add
lock
sbb
push
pminub
fildl
inc
fdivrp
cmpsl
bnd
lods
loop
add
adc
add
movsb
je
js
jne
push
lcall
in
aaa
or
mov
std
inc
fcompl
sbb
jle
add
add
in
mov
inc
dec
jns
dec
stc
pusha
add
xor
lret
loop
mov
mov
sub
mov
pop
fsub
or
cs
and
cmp
or
jmp
mull
dec
ret
movlps
dec
pop
out
mov
dec
xchg
push
test
dec
sar
xchg
fmull
push
aas
pusha
add
inc
pop
add
jo
jae
add
cmp
add
fsts
and
pop
add
subb
push
cwtl
stos
pop
mov
jmp
sarb
xchg
push
mov
stos
inc
and
cmp
add
sub
and
enter
in
sahf
and
pop
lcall
stc
scas
loopne
lret
sbb
mov
or
outsb
iret
test
fsubrp
aas
add
clc
aaa
xchg
sbb
add
popl
dec
pop
filds
jmp
daa
test
mov
cmpsb
mov
fiadds
sarl
pop
dec
enter
imul
adc
add
stos
test
mov
in
mov
les
add
cltd
jnp
cwtl
jle
fisttps
cmpsl
xchg
outsb
pop
add
seto
fwait
add
jl
and
add
addl
jp
aam
cmc
cmp
jnp
mov
or
lret
fcmove
cmp
push
pop
xchg
mov
sarl
and
push
stos
dec
add
movsl
ds
xchg
add
mov
lods
add
mov
jbe
outsl
xchg
adc
sarl
rolb
dec
in
pop
pushf
jp
enter
mov
mov
fwait
and
add
cmp
lea
sbb
ret
add
adc
lahf
pushf
mov
add
lods
aaa
test
mov
inc
add
sahf
cwtl
xchg
cwtl
xor
xor
cmpsl
jno
test
mov
mov
pop
mov
mov
imul
cmp
mov
popa
or
shll
sbb
jne
or
out
xchg
adcl
jo
mov
lods
mov
js
test
and
jp,pt
add
jb
cmp
mov
jae
outsb
or
mov
leave
std
fwait
lahf
jb
add
popa
xchg
fsts
dec
aas
je
subb
js
mov
jb
sbb
hlt
shlb
jl
add
or
push
add
mov
and
and
xor
fbld
mov
push
movsl
push
mov
movsb
scas
mov
aaa
push
add
jbe
inc
mov
inc
add
arpl
or
cmp
pusha
mov
ud2
jns
push
xchg
add
dec
sub
jae
dec
add
pop
dec
pop
test
mov
push
fcmovnb
xchg
stos
add
addr16
sbb
mov
nop
in
xchg
je
rcr
jb
adc
inc
pop
and
add
sbb
aam
cld
add
test
outsl
mov
rorl
sbb
in
loopne
stos
test
hlt
fcomip
mov
ds
push
xor
addl
mov
in
add
push
aaa
outsl
leave
adc
orb
sub
pop
or
subb
das
pop
cwtl
xor
lock
xchg
or
jbe
nop
add
pop
jnp
push
jp
or
jne
loope
mov
mov
add
cmp
std
or
mov
test
mov
xchg
jo
imul
cmp
pop
flds
addr16
imul
xchg
jbe
sarb
in
push
leave
clc
sti
insl
movsb
movups
pop
dec
std
ja
or
inc
add
rclb
inc
or
adc
repnz
mov
sub
and
jnp
xor
pushf
fwait
add
mov
pop
loopne
add
rol
inc
ds
mov
jae
ret
pop
filds
add
mov
add
mov
negb
cmp
push
add
xchg
adc
xchg
pop
push
loop
add
lcall
cmp
insl
mov
add
out
pusha
int3
ret
clc
add
push
pop
cmp
cmp
pushf
rol
fisubrs
mov
testb
push
and
fdivr
mov
cmp
popl
adc
rsm
negb
inc
icebp
jle
inc
xor
sbb
cmp
jnp
mov
inc
pop
imul
xorb
incb
ljmp
pop
repnz
jo
mov
fdivrp
jno
or
add
xchg
or
rcl
pusha
jne
add
fisubs
or
fsubrs
mov
jno
add
int
decl
mov
inc
out
rol
out
add
xchg
stos
lret
outsb
pop
jae
add
daa
sub
add
xor
add
mov
lahf
and
or
sbb
push
sub
jae
add
popl
add
add
add
mov
hlt
ret
aam
scas
out
fwait
push
cmc
lcall
inc
faddp
push
scas
add
xchg
add
call
je
ljmp
repz
filds
xchg
sub
aas
pop
add
rolb
repnz
or
test
iret
icebp
xchg
add
clc
push
fsubl
loopne
mov
add
jl
add
push
dec
add
xor
out
lods
in
call
data16
push
cmpsb
cmp
add
bound
adc
add
dec
sub
call
fistpll
loopne
cld
add
inc
jle
add
cmp
cmp
push
push
dec
push
add
pop
verr
out
mov
xchg
in
add
pop
aas
dec
jns
icebp
pusha
sti
and
mov
sub
out
add
sub
arpl
mov
mov
insl
daa
and
push
movl
daa
aam
xor
jno
push
push
test
inc
test
pusha
and
add
push
xor
ss
mov
test
add
sbb
testb
adc
je
cmp
inc
in
inc
inc
push
repz
add
cmp
psraw
jmp
pop
fnstenv
push
loop
aas
add
add
movsb
jmp
add
jle
les
fidivrs
dec
mov
xchg
xchg
or
xchg
push
test
pcmpgtb
or
in
push
sub
nop
lods
add
inc
lods
mov
rcrl
out
jge
or
add
pushf
mov
sbb
sbb
cli
lea
push
mov
add
dec
fnstsw
and
add
popa
xorb
nop
add
jp
sub
neg
adc
xor
xchg
add
leave
xorb
push
inc
mov
inc
mov
add
pusha
adc
inc
rcr
pop
pop
sub
add
aad
jmp
dec
filds
dec
gs
lret
or
add
outsl
xor
cld
and
out
ds
and
push
mov
pop
addl
loop
movl
add
test
inc
cmp
push
or
cld
cmp
pop
add
pop
clc
hlt
push
movsb
jo
mov
in
pop
cmpsb
add
pop
mov
xor
out
jmp
dec
add
and
dec
bound
xchg
sti
dec
imul
paddd
jb
loopne
jmp
add
enter
insl
add
fdivrl
repz
sub
jnp
adc
test
je
mull
aas
mov
inc
ja
pop
stos
pop
inc
push
xor
stos
fisubrs
lahf
std
add
cmpsb
lock
mov
add
fsubrs
jo
add
jbe
sub
ret
add
movsb
inc
add
push
inc
add
add
int
mov
scas
mov
add
adc
lock
dec
clc
repnz
ss
stc
std
dec
pop
jecxz
add
nop
sarb
mov
sub
mov
call
sbb
adc
mov
add
aaa
pop
dec
jbe
inc
dec
cmp
mov
mov
mov
lods
jae
out
lock
add
fld
sahf
js
hlt
jbe
jo
add
push
lahf
fldt
int3
push
movb
jns
daa
xor
loopne
jo
add
xchg
jmp
cmp
cli
add
mov
or
add
push
pop
add
mov
sub
mov
ljmp
imul
or
xor
pop
jmp
push
ds
inc
sbb
sti
xchg
add
ja
aaa
mov
jno
loope
arpl
sub
scas
addps
fiaddl
mov
ret
add
lret
das
addl
jp
js
cmp
push
rolb
jg
or
jmp
xor
push
add
inc
add
or
mov
lcall
cmp
cmpsb
push
jb
sbb
aaa
adc
fcomps
test
and
push
pop
sub
jno
stc
mov
push
pop
mov
mov
sub
lock
add
cmpsb
or
fcmovb
es
out
jo
push
add
jp
push
add
fsub
sbb
es
xchg
outsl
movsb
dec
mov
sbbb
sti
mov
out
fstpt
cmpsb
and
jo
push
cmp
rorb
sbb
adc
in
add
orb
adc
xor
and
mov
out
mov
loopne
add
cmp
in
and
pop
insl
xlat
push
shrl
negl
int
mov
adc
jge
add
jecxz
pushl
inc
pmullw
out
hlt
imul
lock
movswl
mov
lret
inc
jne
in
and
stc
bound
add
add
mov
mov
xor
cmp
cwtl
mov
adc
lahf
mov
in
int
jg
jp
stos
cwtl
jae
add
sbb
pop
mov
imul
sbb
jge
xchg
add
shlb
imul
loope
call
and
test
jnp
xor
scas
pop
mov
dec
rclb
sub
lret
lcall
xchg
lret
cmpsl
jl
int
or
push
sub
pop
bound
jl
cmp
mov
inc
loopne
je
add
loope
jge
mov
mov
push
js
pop
add
in
fdiv
rolb
and
fists
inc
out
add
loope
add
loop
jb
lea
jnp
adc
cmp
addr16
fwait
jb
dec
jp
fs
xor
add
fimuls
add
imul
and
into
fdiv
mov
pop
mov
jb
das
ja
pop
xchg
stos
jns
xrstor
sub
into
add
sbb
inc
data16
sbb
mov
jns
push
pop
jp
add
test
adc
mov
jp
lds
sub
mov
bound
loopne
add
roll
mov
pop
sbb
pop
mov
cmovp
pop
movsl
or
mov
cmpsl
cmpsb
add
in
out
pop
lss
stos
sbb
shlb
jge
mov
adc
xchg
mov
dec
popa
and
add
mov
hlt
mov
push
testb
adc
cld
add
jge
xor
push
mov
mov
push
adc
es
or
rolb
test
add
sub
repnz
xchg
mov
sbbb
xchg
and
dec
addl
push
add
aam
lcall
mov
push
pop
mov
xor
call
loope
sarb
stos
fwait
idivl
fistpl
adc
aas
lds
call
addr16
aad
cli
rcr
add
test
or
pop
pusha
shlb
mov
ror
cmpsb
dec
ja
dec
add
leave
jo
jne
inc
out
rolb
stos
pop
cmpsb
js
mov
ja
enter
inc
jp
add
out
xchg
push
arpl
cmp
xchg
shlb
sbb
inc
add
test
std
add
lods
je
scas
fwait
int3
in
push
or
add
in
mov
add
pop
or
clc
inc
imul
sbb
in
push
nop
xor
ret
adc
add
mov
enter
gs
cmc
adcl
and
in
iret
sahf
xchg
push
in
sbb
orb
pushf
cvtps2pi
mov
lock
or
and
inc
ja
jbe
fs
pop
subb
sbb
loopne
negl
leave
jg
loopne
lahf
popl
in
pop
cltd
push
inc
flds
jne
pop
leave
fwait
out
fsubrs
add
sbb
push
mov
andb
cmp
shrb
pop
cmp
outsb
enter
add
lea
add
push
jg
cltd
fsubs
and
dec
push
ret
add
sub
xchg
sbb
adc
decb
xor
jnp
jecxz
out
push
fisttpl
add
fiadds
add
and
jl
stc
push
rol
movsb
pop
fldl
mov
xchg
mov
add
movsl
in
jecxz
push
add
aad
mov
mov
mov
aas
fnsave
add
or
pop
xor
popa
mov
shlb
sbb
mov
mov
cli
add
out
rcrl
test
sub
loopne
add
mov
js
add
xchg
repnz
jle
or
push
sub
out
or
inc
dec
mov
iret
pmuludq
rolb
repz
scas
mov
add
sbb
loope
or
imul
sub
xor
shlb
push
add
dec
sbb
pop
mov
mov
mov
ja
test
or
add
jge
mov
xor
add
fcmovnb
xchg
push
movsb
cmp
jmp
ror
inc
aam
orl
add
ja
push
repz
jle
or
insl
xchg
and
jmp
std
xorb
jge
add
xchg
sahf
test
loop
add
sbb
fisubrs
std
jecxz
call
aaa
ds
outsb
fistl
cmp
or
or
mov
aad
stos
xchg
jb
and
vpcmov
sti
pop
xor
cmc
sub
lock
mov
add
dec
out
int3
xchg
andl
or
cmp
mov
inc
or
stc
enter
lret
sarb
pop
andb
out
or
mov
hlt
pop
mov
inc
and
aam
mov
rorb
dec
xor
push
lds
bswap
inc
cld
xchg
jo
cld
ds
sbb
movsb
popf
ret
fs
inc
push
jo
xchg
test
out
jno
jnp
add
add
jl
jmp
jle
pushf
cltd
bnd
sbb
sahf
insl
add
div
fildl
jae
xor
scas
dec
pop
add
add
subl
in
mov
hlt
push
mov
jl
sbb
lret
fwait
add
lds
push
outsb
and
mov
mov
addr16
aaa
repnz
jmp
mov
pop
call
push
dec
adc
push
cmc
loopne
ret
dec
fwait
rolb
imul
xor
xchg
or
xchg
lods
cld
mov
loope
add
mov
push
xchg
fsubs
sub
subb
or
scas
loop
bound
or
pusha
out
fadds
mov
and
sbb
sub
mov
mov
cmpsl
pop
popa
pop
dec
hlt
adc
add
dec
clc
or
fwait
add
mov
in
mov
mov
xchg
pop
cmp
test
jmp
int3
cs
add
je
jl
in
test
orb
aad
outsb
clc
mov
push
testl
leave
imul
mov
dec
jmp
or
in
jae
mov
cmp
add
gs
fldt
jg
add
imul
insl
fmull
jo
or
icebp
add
push
pop
mov
add
cli
stos
mov
xor
test
add
loopne
aad
sbb
mov
jmp
mov
mov
ja
or
icebp
mov
fcoms
les
pop
mov
dec
ss
push
push
shrl
cmp
into
lahf
std
sar
pushf
add
cmp
arpl
add
xor
clc
push
sbb
or
dec
scas
inc
add
sub
icebp
or
lds
lock
fisttpll
push
add
out
add
scas
add
and
add
in
cmp
jno
sahf
data16
dec
insb
das
popf
fiaddl
push
enter
pusha
xchg
fs
lahf
push
inc
push
pusha
popf
rol
jnp
add
xor
pop
mov
in
popa
cmpsl
mov
add
jbe
xorb
faddl
je
scas
daa
pop
fidivrs
es
add
testl
shrl
popf
icebp
insb
enter
in
add
sub
leave
shlb
test
js
jecxz
xchg
clc
int3
outsl
jp
add
sbb
cmp
xchg
pop
sahf
add
call
sub
andl
lahf
lods
or
or
dec
jns
pop
dec
shrl
shlb
lds
push
or
cmpsb
stos
inc
cmp
enter
fwait
into
pop
ds
adcb
mov
and
add
loop
add
mov
fisttpll
subb
insl
sar
cmc
dec
repz
and
xor
loop
decb
xor
mov
add
mov
rclb
xchg
xorb
add
dec
enter
hlt
lds
fnstcw
test
add
clc
imul
test
or
xchg
cmp
jae
pop
dec
lea
orl
test
add
loopne
xchg
rorl
sbb
iret
aad
jnp
str
jle
inc
out
push
add
jbe
adc
rclb
inc
fcompl
ja
pop
rorl
movsl
imul
into
add
mov
or
lahf
push
add
rol
movsb
jge
jbe
mov
pop
mov
jne
or
test
cmp
add
xchg
insl
mov
lods
sahf
out
out
add
int
cmp
sub
stos
dec
inc
add
mov
imulb
dec
and
nopl
iret
jge
pusha
jmp
cmp
or
xchg
out
hlt
push
mov
add
fstpl
inc
add
arpl
cmp
mov
push
rorb
repz
ljmp
cs
pop
add
pop
pop
movsl
nop
je
inc
lock
int3
mov
mov
dec
mov
in
ljmp
addb
push
mov
jno
add
mov
out
jbe
add
inc
xlat
push
popf
cmpsl
shrb
test
jne
jp
nop
and
or
inc
add
push
adc
xchg
and
ds
in
add
xchg
test
jmp
insl
sub
jmp
dec
cmpsl
lock
gs
fs
mov
ffree
push
pusha
inc
lock
pop
cltd
sub
add
test
paddq
jge
add
xchg
add
pusha
jg
push
mov
or
loopne
movsb
fists
orps
mov
andl
rorl
mov
nop
dec
pop
mov
add
mov
repnz
add
sbb
jmp
sbb
and
push
push
out
sbb
das
add
pop
or
jp
pavgw
pop
addr16
push
popf
out
in
and
xchg
sbb
mov
ret
pop
adc
out
leave
xchg
add
iret
pusha
pop
push
mov
fsubrs
leave
jl
xorb
cltd
sarb
in
add
mov
xchg
jle
add
loop
das
or
iret
jns
aas
lods
mov
nop
add
mov
outsl
loopne
imul
inc
std
add
mov
jl
pop
fs
iret
in
xchg
adc
pop
mull
mov
push
call
filds
fsts
push
dec
add
stos
cbtw
mov
movsb
add
lds
adc
loopne
lret
daa
dec
push
pop
jecxz
je
mov
sub
gs
cmp
test
addb
inc
mov
mov
jmp
pop
out
es
enter
cmp
jne
lock
mov
xor
mov
lock
fmulp
hlt
add
mov
sbb
ljmp
push
add
test
add
data16
sub
loopne
cltd
pop
cwtl
ret
mov
xchg
mov
jo
sub
mov
daa
add
xor
pop
jae
add
test
out
add
fimull
add
jge
cmpsl
sub
jne
xchg
xchg
aas
mov
mov
or
lret
inc
aaa
int
sarb
jp
es
or
xchg
repnz
ret
mov
jecxz
lcall
sbb
cltd
dec
rcll
lock
mov
and
add
imul
add
xor
jbe
aam
jo
inc
jl
add
ds
mov
ja
mov
sub
pusha
cs
out
movsb
pop
adc
cld
insl
rolb
repz
add
mov
xor
out
add
inc
push
notl
mov
sti
lods
add
xor
add
aas
imulb
rcrb
test
add
fistpl
dec
add
jmp
adc
or
mov
xor
pusha
fwait
lods
cmp
roll
xchg
cmp
push
scas
in
daa
jb
cmp
test
sub
mov
popa
sbb
lds
mov
cmc
fisttpl
rclb
addr16
push
aam
inc
add
das
nop
andl
dec
outsl
pop
or
sti
add
adc
les
out
add
fdivr
pop
add
cld
push
arpl
add
call
and
add
mov
aad
mov
add
push
les
add
dec
add
push
test
add
adc
dec
cwtl
xchg
ficompl
push
fisttpl
add
out
xlat
or
jecxz
stos
push
xor
pop
add
cmp
add
pushf
loop
pop
jmp
add
test
adc
outsl
add
xchg
cld
pusha
cmovl
jne
test
jmp
add
inc
mov
xchg
jge
mulb
xchg
adc
sbb
outsb
cmp
inc
mov
jl
jne
add
sub
or
and
rclb
pop
lahf
cmp
cmp
sbbb
push
jne
adc
repz
sbb
cltd
roll
bound
movb
pushf
cmp
jbe
cmc
call
cmp
lret
out
enter
add
add
lcall
data16
inc
in
stc
push
and
pop
frstor
add
sbb
leave
xor
jns
mov
or
lds
std
add
cmpsl
xchg
jne
int3
fwait
mov
push
iret
faddp
sub
test
pop
cmc
mov
or
add
cwtl
mov
pop
sti
pop
sahf
ds
jae
add
pop
jge
add
jmp
pop
ret
rolb
mov
pop
scas
jno
int
add
pop
or
out
setno
lret
arpl
call
int
add
lea
fnstenv
mov
or
in
fdivr
out
add
and
and
pusha
pop
dec
push
xchg
cwtl
mov
cmp
cld
or
and
std
inc
cmc
in
out
add
jbe
or
outsl
inc
popa
add
or
push
dec
inc
lock
lcall
clc
add
or
nop
jns
js
test
stos
adc
call
std
inc
aam
push
adc
in
aad
sahf
daa
int
inc
pop
pop
test
sub
icebp
pop
push
and
sbb
push
sub
mov
xchg
pusha
push
aam
movl
cmpsl
adc
jo
in
icebp
xchg
out
aas
imul
pop
mov
add
in
fnsave
leave
push
inc
xchg
or
pusha
sbb
shlb
dec
push
jmp
popl
int
cmpsl
xchg
jne
inc
cmp
fwait
jmp
and
mov
sbb
into
xchg
xchg
imul
outsb
add
ret
cltd
xor
dec
cmp
ljmp
inc
dec
cmp
jae
outsl
mov
scas
arpl
jecxz
ds
xorl
loopne
pop
xchg
jns
cmp
or
std
ss
sbb
into
xchg
ret
clc
add
inc
jbe
sbb
dec
cs
pop
inc
push
add
dec
jno
cmp
sbbl
xor
add
testb
jb
or
push
add
jmp
mov
in
add
fs
sub
shll
mov
jecxz
add
iret
sarl
nop
pop
xor
add
loope
xchg
mov
adc
aaa
xchg
cwtl
in
add
sub
add
sarb
add
push
nopl
jbe
dec
or
push
push
jae
jmp
pop
add
jl
popf
incb
pop
pop
xchg
dec
dec
aad
add
pop
pop
inc
push
je
jle
add
dec
sbb
cmp
add
add
sub
mov
movsb
add
pop
pop
push
dec
loop
cli
mov
mov
je
jns
pop
add
mov
xchg
fstpl
add
mov
push
mul
es
in
sbb
inc
fisubrl
je
and
add
adc
add
dec
add
and
sbb
fisubs
je
pop
ret
add
xchg
sbb
xor
sub
add
fadds
add
cmp
lods
pop
cmp
add
imul
les
subl
mov
xchg
mov
stos
sarb
mov
add
lahf
push
pop
scas
add
xchg
repz
adc
mov
mov
lods
shlb
sbb
repnz
sbb
movsb
repz
xor
arpl
jns
je
hlt
sbb
inc
pop
rol
or
idivl
add
xchg
mov
inc
shrd
popf
popf
rcl
fldenv
clc
fsub
ja
add
sbb
inc
push
push
pop
outsb
testb
mov
jo
adc
push
scas
test
jno
incl
xor
aam
pop
add
ljmp
dec
addl
dec
in
arpl
cmc
add
xlat
scas
sub
sbb
push
add
in
and
mov
add
int3
test
std
mov
outsl
loope
pop
dec
jo
and
sub
dec
cmpsb
mov
in
imul
out
outsl
js
add
push
seta
test
hlt
jge
add
pop
jl
ret
sub
jbe
xor
roll
aam
add
add
add
mov
add
lods
add
lods
rolb
jb
fistl
mov
add
and
pop
add
lret
cmpsb
inc
add
pop
mov
clc
cs
or
fwait
popa
push
data16
leave
shlb
add
aas
sub
jge
clc
inc
add
mov
test
add
icebp
or
push
ds
mov
fstps
pusha
add
xor
lds
mov
add
out
cmp
add
sarb
add
push
mov
fwait
push
xchg
inc
mov
xchg
add
ret
mov
push
js
cmp
flds
mov
mov
arpl
sti
movsl
jb
addl
adc
jle
in
cmp
inc
movl
xchg
xchg
adc
fldcw
in
or
add
jne
pavgw
and
push
or
jl
mov
adc
in
dec
sarb
cmovns
repz
scas
and
add
dec
movsl
idivb
popa
cld
inc
mov
xor
add
sbb
iret
cmp
popf
xchg
push
imul
mov
sub
push
ret
and
or
xor
faddp
cmp
repnz
cmpsb
mov
push
add
leave
fwait
pop
fnsave
inc
add
in
ss
sbb
mov
mov
fiadds
push
sbb
dec
cmp
les
pop
add
add
popf
inc
test
mov
jne
add
xor
sti
lret
loope
xchg
test
push
add
mov
movb
sub
dec
lahf
repz
pop
mov
lock
push
xchg
cli
or
cmpsl
mov
gs
add
mov
cmp
insb
xor
fcomip
mov
sub
dec
and
cmpsl
add
jae
add
movsl
idiv
add
and
mov
add
ret
sarb
xchg
call
mov
add
cmp
cmp
stos
pop
insl
andb
mov
lods
into
lock
mov
sbb
or
mov
enter
inc
cmpl
xor
cmp
fsubrs
add
insl
fs
in
roll
push
pop
push
cs
data16
adcl
iret
fsubrl
in
and
test
add
repz
mov
aam
or
shl
inc
and
sub
pop
ljmp
jp
mov
mov
add
insb
mov
xchg
lods
pop
pusha
lods
jae
lahf
ja
pushf
movsl
shrb
add
test
out
fmuls
into
idiv
add
mov
testb
inc
rclb
jp
sbb
out
roll
enter
cmc
xchg
scas
add
xor
xor
xchg
cld
bound
xchg
jl
mov
cmp
jmp
xchg
or
lahf
addb
insb
inc
pusha
fcomps
add
sahf
or
sub
xchg
movsl
jle
insl
sahf
call
jmp
pop
fldl
scas
mov
add
sbb
bound
dec
cmp
loope
adc
mov
xchg
add
fbstp
add
and
xor
jl
rol
fiaddl
add
fwait
test
aaa
sbb
ret
jmp
clc
xorl
out
add
movsb
cmpsl
add
call
push
insl
mov
aas
xchg
xchg
test
movsb
mov
and
sub
outsb
int3
fstpt
jmp
repz
add
test
pop
sbb
es
xor
adc
add
aaa
and
xchg
insl
js
mov
jno
pushl
or
pop
pop
lock
and
pusha
push
inc
mov
sub
enter
inc
lea
cmp
add
lcall
js
cmp
or
das
aad
mov
mov
push
xorb
sbb
xchg
add
loopne
add
dec
cmp
enter
add
lds
sbb
add
pushf
lea
jg
idivl
mov
xchg
xchg
pop
lahf
test
mov
cmp
add
icebp
add
push
add
scas
out
xlat
pop
cmc
and
mov
or
or
out
je
nop
mov
mov
pop
mov
sbb
cmpsl
mov
cmp
subb
add
mov
adc
push
add
jno
mov
loope
rcrl
mov
pop
xchg
mov
sub
loop
out
js
push
lret
sbb
jl
add
pop
outsl
lods
loopne
add
filds
mov
xlat
cmp
xor
sbb
add
in
xor
add
pop
cwtl
jno
shll
sarb
push
xchg
push
pop
add
loope
shrl
es
dec
loopne
cld
add
aaa
and
xlat
pop
adc
jle
cltd
cmpb
jmp
out
pop
shr
lea
and
test
cmp
add
dec
js
inc
fiaddl
mov
and
jbe
jg
out
add
fidivrs
pusha
sbbb
in
xor
pushf
add
jge
push
mov
lds
cmp
cmp
jl
add
sbb
std
xchg
inc
in
mov
mull
fwait
movsl
in
pusha
aaa
ja
lahf
mov
shl
push
jnp
push
mov
int3
das
mov
xchg
jg
js
jb
push
xchg
mov
mov
jle
mov
lods
cmp
xorb
inc
add
add
jns
mov
and
rcl
pusha
sub
add
mov
mov
add
jnp
aam
xchg
mov
add
stos
ret
add
or
push
shlb
xor
mov
and
aas
add
add
or
lret
jp
xor
cmpsb
fadds
or
mov
inc
add
leave
inc
outsl
in
add
icebp
out
cmp
into
add
mov
xchg
adc
cli
loope
rolb
es
por
pop
pusha
insl
sbb
lret
aas
xchg
dec
add
cmp
rorb
stos
add
mov
out
lahf
xchg
jmp
cltd
cmc
imul
cmp
add
or
push
cmp
xchg
add
loope
mov
mov
jb
xchg
cld
pop
test
pop
stos
shlb
fnsave
pop
in
cmc
pusha
push
push
mov
push
popl
shll
pop
adc
pop
or
push
or
aad
fsts
stc
std
insb
jns
stos
mov
rcrb
add
ljmp
verr
mov
in
out
and
insl
fnstcw
repnz
test
shlb
pop
adc
das
loop
popa
in
xor
add
mov
pop
mov
jl
repnz
cld
cmp
popa
rclb
inc
mov
stc
je
movsb
pop
cli
add
repnz
jecxz
pop
in
repnz
imul
insb
lock
jg
push
aam
or
or
repz
js
push
sbb
fwait
or
frstor
aam
jo
stos
adc
xchg
pop
jno
cmpsb
aaa
movsl
pusha
loop
imul
jmp
sub
dec
es
push
mov
sub
daa
nop
pop
pop
shlb
int
je
mov
das
gs
add
adc
or
mov
inc
mov
xor
ja
pop
lock
mov
rolb
mov
gs
or
les
in
arpl
popa
add
jl
lods
push
sub
mov
pop
and
mov
push
rorb
push
jae
mov
add
add
mov
push
lfs
aas
jns
add
movsb
and
ljmp
jmp
sbb
cmp
hlt
je
pop
andl
scas
cli
insl
cmp
jp
fs
add
dec
cmp
lods
int3
mov
cmp
cwtl
loopne
push
add
or
cmpsb
adc
sti
sub
cltd
add
lfs
push
add
add
sub
and
add
insb
call
arpl
and
loop
add
std
jg
insb
sub
divl
push
pcmpgtw
data16
loopne
loopne
stc
sbb
add
cmpsb
xor
mov
add
or
ss
popa
jns
add
cmp
lahf
lcall
shlb
jno
xchg
cmp
in
stos
gs
inc
add
pop
sub
jae
mov
mov
test
dec
or
adc
sarl
add
mov
xorl
in
or
mov
and
les
outsb
sub
pop
push
xchg
dec
mov
mov
mov
add
push
jmp
add
sahf
nopl
fstps
pop
mov
jb
inc
inc
pop
shlb
bound
cld
cli
xchg
add
jnp
push
or
subb
sub
mull
pop
lcall
cmp
add
sets
inc
test
add
adc
rclb
xor
repz
and
xchg
or
cmp
add
push
out
add
pop
shlb
lods
inc
jae
xchg
out
lahf
popf
mov
add
xchg
xor
data16
and
mov
adc
xchg
filds
mov
ret
out
jecxz
or
add
sti
mov
es
mov
inc
cmp
fdivrl
cs
sti
jbe
cmp
add
mov
mov
aad
jb
dec
inc
pop
lock
mov
xor
xor
roll
fs
xor
mov
push
add
jp
jl
loop
xor
fiaddl
and
fs
and
add
sub
add
mov
insb
dec
add
divl
inc
push
dec
mov
call
add
adcb
pusha
adc
add
sbb
mov
xchg
lret
cli
pop
stos
js
stc
add
fcoml
add
push
in
lret
add
fiadds
lahf
add
out
and
pop
daa
pop
ja
and
es
xchg
add
sub
xchg
stos
adcl
mov
shlb
and
pop
mov
cmc
mov
pop
jg
ljmp
add
cli
hlt
pop
add
xchg
insb
rolb
cmc
mov
call
mov
aaa
cmp
xchg
sub
ficoml
add
jecxz
jp
sahf
push
adcb
aas
mov
lcall
or
mov
xlat
push
cmp
xchg
jb
clc
rcll
add
rolb
sbb
stos
and
cmp
inc
outsl
mov
repnz
xchg
cmpb
popa
lods
mov
in
sbb
scas
sub
fwait
aad
test
in
movsb
lods
repnz
mov
aas
fmuls
pop
les
add
sarb
pop
incl
add
mov
iret
rorl
mov
sti
sbbb
mov
add
mov
fsubrs
or
pop
mov
pop
or
inc
pop
or
stos
mov
popa
mov
subl
fistpll
mov
inc
stos
adc
sub
dec
insl
fsubl
add
loopne
sbb
stc
add
xchg
ss
das
js
mov
fmuls
push
inc
add
inc
push
cmpsb
xchg
inc
push
int3
add
xchg
pop
pop
stc
adc
nop
add
mov
lret
adc
add
dec
push
mov
mov
sahf
jmp
sti
jg
pop
lret
sbb
push
and
ljmp
bound
add
xchg
xchg
in
pop
rolb
jo
shl
sbb
push
mov
dec
cmp
add
jno
int3
and
shll
arpl
mov
into
jmp
push
popf
pop
adc
les
or
inc
xor
ss
cltd
iret
dec
add
mov
es
inc
ja
aaa
gs
push
leave
adc
or
or
sbb
lea
jmp
addl
mov
push
lock
shrl
test
or
lret
bound
cmp
add
cs
dec
testb
loope
add
loop
outsb
aaa
call
add
arpl
push
push
fdivl
in
sbb
jl
es
sub
mov
fs
sbb
add
pop
fcompl
lea
or
cmc
mov
mov
in
add
or
cmp
dec
sbb
jns
mov
lds
mov
hlt
aam
push
jg
adc
pop
pop
daa
imul
add
xor
cmp
xchg
movsb
jnp
mov
dec
fiaddl
ja
movsl
push
outsl
inc
int
xchg
add
out
icebp
mov
out
add
push
sahf
or
test
add
in
movl
insl
xor
mov
jmp
add
cmp
adc
cmp
scas
nop
pop
lret
in
mov
fisubrs
xor
mov
jg
out
subl
shl
xor
adc
popa
mov
or
add
jae
leave
push
mov
loop
mov
cmp
sbb
push
push
ds
mov
lds
hlt
and
sub
jnp
add
add
pushf
test
pusha
or
popf
xor
pop
mov
pop
aam
jmp
cli
cltd
jno
mov
in
pop
test
pop
rolb
mov
or
dec
pop
pop
out
xor
fistl
hlt
jle
add
mov
jns
xchg
int3
mov
add
out
cmp
sub
push
faddl
cwtl
aad
ret
pop
cmp
addb
outsb
adc
mov
enter
stc
xlat
add
mov
or
mov
lahf
sub
add
adc
xchg
jecxz
int3
add
les
sbb
inc
add
pusha
shlb
fnstenv
xchg
add
inc
and
daa
cmp
inc
fisttps
nop
add
fcmovb
fmull
pushf
subb
je
std
inc
mov
cmp
add
dec
and
int3
inc
mov
outsl
rcl
movsl
push
push
adc
jecxz
add
ljmp
mov
nop
jb
pop
add
xchg
leave
cltd
mov
add
mov
in
in
pop
fwait
add
repz
stos
jb
add
push
pushl
fidivl
xchg
mov
cmp
je
or
lret
faddl
push
xor
into
jae
fs
xchg
cltd
aam
rolb
out
inc
mov
cli
jp
push
sbb
loope
and
out
cwtl
jae
xchg
push
dec
test
xchg
mov
xlat
outsl
cmp
cmpsl
add
xchg
mov
or
add
call
push
or
lods
in
lret
push
mov
push
cmp
inc
mov
icebp
add
xchg
and
pop
mov
and
push
cmpsb
sbb
gs
jg
out
pusha
mov
lock
push
insl
lcall
and
mov
inc
adc
push
stos
add
imul
lock
inc
hlt
sbb
sbb
mov
fists
add
lea
pop
sbb
in
aas
insb
jmp
mov
push
and
rcrb
fisttps
inc
loopne
ja
add
gs
mov
xor
test
icebp
add
fwait
movsb
mov
mov
dec
pop
push
add
mov
cltd
jp
inc
aad
add
or
hlt
xchg
shrb
jecxz
add
call
inc
out
add
jb
insl
push
addb
cmp
insb
pushf
adc
add
xor
dec
sahf
test
xchg
aam
lret
seto
mov
mov
xor
pusha
jl
jno
add
or
add
cmpsl
jnp
pop
mov
iret
xor
fistps
int
jmp
lods
arpl
add
jae
incl
pop
xor
ja
and
add
push
out
add
imulb
mov
add
inc
aam
jns
xchg
inc
add
bound
jle
mov
js
std
xor
cmp
add
movsb
jb
push
shl
les
jns
mov
in
out
ret
or
enter
js
rclb
mov
lock
mov
adcb
inc
add
and
add
dec
push
loop
cmpsw
mov
loopne
inc
push
lock
pop
add
inc
and
add
pop
mov
jmp
std
add
movsb
repnz
dec
push
pop
or
dec
and
sub
cld
iret
mov
add
xorb
jmp
imul
sbb
pusha
pop
push
jae
lds
js
push
cmovo
xor
push
push
pusha
sti
add
and
out
imul
dec
mov
pop
in
cmp
sub
push
inc
or
movsb
push
add
insl
insb
jbe
or
cmp
dec
add
aas
add
ljmp
and
sub
adc
bound
aam
adc
mov
and
jae
xchg
mov
add
adc
in
ljmp
fdivrl
outsb
or
std
pop
icebp
mov
jbe
orb
dec
add
shrl
push
lcall
dec
jg
push
jo
mov
mov
and
cmp
jbe
sbb
inc
xor
add
icebp
xchg
shlb
lea
pop
adcb
sub
lds
and
inc
add
and
xchg
adc
sbb
mov
xor
and
idivl
add
adc
popf
sbb
dec
xchg
in
jg
divb
jge
pop
jbe
sub
arpl
xchg
mov
or
test
mov
test
add
sub
xor
inc
out
inc
pop
inc
imul
iret
jno
gs
add
jnp
push
mov
outsl
inc
enter
push
lea
add
cmc
loope
pop
jle
cmp
adc
add
xchg
mov
loopne
sbb
xchg
negb
add
dec
mov
lret
add
and
fldt
sbb
mov
mov
xchg
dec
aam
and
mov
getsec
js
dec
add
movb
cmc
inc
cmpsb
push
cmp
mov
gs
lock
stos
fucomp
add
rorl
add
push
jl
leave
les
dec
jo
pusha
push
add
sbb
inc
xchg
mov
fiaddl
jecxz
add
es
mov
into
scas
sub
mov
and
aam
in
cmp
jg
add
mov
add
in
mov
push
imul
mov
mov
insl
jb
xchg
add
dec
cmp
jge
and
clc
cld
add
pop
flds
cmp
mov
add
lods
cmp
mov
cmp
mov
sub
xchg
add
stos
sub
add
inc
rorb
xchg
or
cmp
loope
jae
cmp
cli
sub
flds
subl
cld
xchg
mov
fmuls
mov
mov
iret
and
aaa
in
int3
lock
fadds
push
mov
cwtl
mov
imul
add
adc
or
mov
mov
insl
add
pop
push
in
xchg
adc
stos
add
pop
mov
and
int3
test
inc
cmp
rorb
mov
shl
sub
inc
rcrb
out
cmp
add
ret
dec
jl
in
hlt
pop
mov
subl
cltd
add
rcl
sub
psubusw
pushf
cmpsb
mov
mov
xchg
stc
adc
ljmp
sbb
push
xlat
cmpb
sub
mov
add
sub
jb
pop
xor
xor
clc
sub
mov
in
or
xor
dec
add
add
test
shl
add
incl
clc
test
sub
add
push
cmc
insb
sbb
fldl
in
cmpsb
mov
mov
jg
cmp
or
add
test
add
sahf
xchg
add
and
rclb
mov
mov
mov
fists
addr16
lods
imul
inc
sub
pop
mov
rolb
hlt
pop
jo
mov
push
add
cmp
mov
jp
cltd
loopne
add
add
dec
out
jmp
sbb
adc
test
roll
outsl
push
lods
jnp
inc
iret
loopne
fiadds
jg
mov
and
adc
sti
mov
das
or
dec
cmp
data16
push
fsubrl
ljmp
jle
into
mov
es
jns
jno
xchg
ja
add
and
inc
loope
repz
in
loope
and
addl
push
jp
test
sarb
incb
lds
jge
cwtl
hlt
pop
cmp
push
mov
mov
add
or
add
cmpsl
fwait
jmp
sub
or
mov
out
mov
cmc
fisttpl
mov
dec
mov
mov
cmp
jl
or
enter
pop
or
mov
sub
movsb
pop
jnp
mov
inc
push
jo
cmp
stos
fiadds
std
mov
push
add
loop
adc
popf
fiadds
push
xchg
adc
and
add
xor
jae
rcl
int
faddl
dec
adcb
insb
mov
add
ljmp
jmp
aad
add
add
mov
rcrb
inc
jbe
mov
pop
insb
add
test
push
fsubrs
inc
dec
add
cmc
mov
jb
mov
shrl
push
add
xrelease
and
pusha
leave
bound
mov
clc
dec
add
and
fs
cmp
add
divl
lods
or
mov
pop
loop
xor
inc
sti
xor
and
lret
sbb
and
test
stos
or
test
cmpb
popf
or
in
cmp
push
and
lret
addb
mov
fadds
pop
out
or
ret
add
cmp
sahf
push
push
bound
pushf
jno
or
loope
out
or
fsts
mov
mov
je
jae
in
add
mov
mov
aad
and
scas
mov
je
xor
jle
sub
cli
cmp
push
adcb
add
sarl
fidivrs
inc
mov
js
add
pop
ret
stos
xor
xor
mov
jo
insl
inc
push
pop
adc
inc
fldl
test
mov
adc
add
movsb
mov
cmp
mov
das
lcall
loope
add
push
adc
out
lea
nop
aas
push
pop
xchg
mov
pop
pop
sbb
cmpsb
pop
add
pusha
aam
cltd
xchg
adc
xor
jo
lret
hlt
cmp
adcb
shrl
aad
mov
cmc
jmp
lret
lock
sbb
adc
add
stc
test
pop
push
cmp
push
mov
lcall
imul
dec
or
mov
pop
add
nop
popf
add
cmp
sbb
je
add
mov
add
out
lret
pop
lea
sbb
jmp
lock
subl
pop
lods
into
jle
data16
pop
scas
fwait
add
hlt
pop
aad
jge
add
push
sti
mov
mov
repz
arpl
add
into
mov
jnp
imul
int3
pop
cmp
test
or
pop
add
jecxz
xchg
adc
dec
mov
xor
pop
mov
jo
inc
sbb
add
fcomps
add
push
gs
lahf
fistps
adcb
call
add
stos
mov
pop
pop
jno
jae
out
add
notl
repz
fadds
shl
in
sub
add
ss
push
dec
or
test
push
pop
cmc
pushf
add
fcomps
cmp
mov
push
mov
push
mov
cmp
or
ja
add
imul
add
push
cmp
inc
add
cli
addb
lret
mov
xor
add
arpl
jl
add
cmp
mov
mov
test
lods
out
frstor
sbb
push
dec
mov
or
clc
push
cmp
outsb
cmovs
and
std
rolb
jecxz
les
out
cmp
cltd
rcrb
loopne
dec
add
or
inc
addl
insl
repnz
inc
xchg
jg
in
jnp
add
inc
addr16
out
shl
imul
add
out
jge
ja
test
xor
mov
or
add
fildll
sub
in
addb
xchg
dec
add
nop
js
push
pop
add
mov
or
enter
add
popa
inc
loope
mov
cmp
and
testl
add
shl
pusha
or
dec
add
push
loope
pop
jg
scas
mov
sub
xchg
insb
cld
fstps
add
mov
fwait
mov
lock
ja
add
add
sbb
sbb
pop
rolb
outsl
pop
js
sub
test
aas
cmpsb
fcoml
outsb
jnp
loop
neg
add
movsl
call
and
sub
xchg
xchg
mov
enter
popa
int
jno
and
or
adc
roll
int3
and
stos
mov
add
lret
je
cmovb
dec
add
jg
in
cmp
or
addr16
cmc
add
roll
jo
jns
out
fistpl
jg
add
mov
fldl
mov
lret
xchg
adc
inc
lcall
dec
jae
cld
jo
dec
push
adc
aam
sub
js
test
xchg
and
daa
add
inc
or
mov
loop
jb
add
pop
enter
mov
sar
sbb
pop
outsl
pusha
daa
push
mov
jl
xor
sub
mov
jge
hlt
fdivrs
mov
out
cmpsl
add
adcb
decl
push
adc
int
in
lahf
add
and
jno
imul
push
jp
add
imul
and
shl
inc
lods
push
fs
xchg
add
add
add
mov
enter
ja
or
add
mov
pop
fadds
adc
sub
gs
dec
add
sbb
lcall
add
test
in
jnp,pt
aaa
in
cs
pusha
jge
femms
vshufps
stos
pop
lock
pop
in
add
and
out
push
jecxz
lret
stos
sbb
addb
xchg
push
inc
mov
add
push
jne
dec
push
lahf
and
dec
loopne
inc
mov
xchg
pop
xchg
jmp
cld
lds
cmpsl
add
adc
mov
add
sub
pop
sub
add
fistpl
addr16
jle
dec
sbb
cli
or
xorb
sub
add
mov
roll
xchg
addr16
pop
mov
jmp
ljmp
call
and
cmp
dec
int3
or
mov
ror
add
js
and
in
ss
jmp
dec
add
mov
mov
data16
push
sbb
inc
pop
lods
and
pop
jnp
outsb
mov
add
sbb
pusha
popl
imull
pushf
cmp
dec
data16
inc
loopne
adc
add
mov
mov
arpl
push
jl
pusha
out
mov
sbb
lret
add
pushf
inc
in
imulb
xchg
lods
cmp
sbb
sub
aad
out
into
cmc
add
xchg
pop
xchg
fldenv
xchg
pop
mov
add
push
xor
popa
mov
rcl
mov
pop
clc
pop
add
and
insb
out
add
rcl
jnp
rclb
xchg
adc
or
mov
loope
dec
dec
add
fdivrl
inc
movsl
lahf
lock
dec
mov
or
pop
adc
loopne
kmovb
je
add
or
xchg
inc
push
mov
add
add
push
mov
add
or
inc
jno,pn
add
aam
add
imulb
sbb
test
ret
add
rclb
subl
pop
pop
mov
push
loope
cwtl
add
adc
scas
stos
add
loopne
jne
std
mov
out
mov
xchg
add
fcompl
leave
inc
add
ffree
jmp
push
pop
or
stc
mov
bswap
add
push
ds
enter
pop
push
sub
fs
loopne
xchg
movsb
pop
sbbl
jns
je
dec
xor
test
fmulp
xchg
lahf
cld
lods
sbb
test
scas
xorb
sbb
mov
shll
jno
scas
lret
js
out
stos
add
or
cmp
or
in
and
rol
cmc
push
les
push
gs
je
stc
sbb
inc
add
jecxz
out
cmp
dec
add
lock
add
xchg
aas
sub
in
add
movsb
sub
fwait
pop
mov
aas
addr16
bound
add
sbb
and
mov
cltd
jbe
add
inc
mov
test
add
lahf
enter
fmul
jecxz
inc
aam
push
or
mov
movsl
sub
addb
pand
adc
adc
repnz
mov
aam
jae
and
in
orl
push
rcrl
inc
xor
or
or
cld
adc
lods
xor
jo
inc
adc
xchg
sbb
lods
sub
rcrl
cwtl
dec
jle
add
imul
jl
fsubrl
add
mov
jno
daa
pop
pushf
mov
dec
in
out
jle
inc
or
mov
or
jg
out
cli
add
jne
ds
mov
pushf
fidivs
xor
daa
push
in
xchg
repz
sub
aas
lea
mov
inc
mov
aaa
xor
add
mov
dec
or
mov
fdivs
cmpsl
cli
sbb
test
jae
shlb
add
and
jns
add
sub
rcll
ret
pop
mov
jnp
or
jmp
xchg
loopne
add
pop
pop
addl
mov
jge
add
divps
cwtl
hlt
add
in
jmp
ficoml
pop
add
or
les
inc
add
mov
add
add
add
xchg
push
gs
psrld
add
iret
push
and
iret
sarb
loop
jns
nop
sub
clc
dec
jp
pop
mov
cmp
add
ljmp
jo
add
pusha
aas
mov
bound
xchg
cltd
rolb
movsl
sbb
dec
jno
xor
clc
dec
add
lcall
pop
sub
iret
pop
loopne
add
mov
vsqrtps
orl
call
lret
lret
add
cmpsl
sbb
sbb
pop
ljmp
loopne
or
lret
hlt
icebp
mov
ret
in
clc
push
mov
in
jl
pop
sbb
xchg
shlb
outsl
xor
mov
cmp
cmp
add
sbb
pop
lds
add
inc
adc
jmp
push
add
mov
rolb
and
xor
mov
rclb
xchg
add
push
jne
repz
add
xchg
ror
push
ja
add
rolb
std
add
push
xchg
icebp
imul
xor
cltd
sub
sbb
scas
push
stc
cmp
push
add
mov
rorb
jmp
in
xor
cld
inc
insl
inc
or
roll
add
sbb
int
xlat
mov
xor
add
mov
lods
inc
je
jo
fildl
lds
sub
lcall
cmp
push
icebp
imulb
or
xor
add
or
cmp
inc
lcall
adc
leave
and
sarb
scas
push
sti
cwtl
cmp
jae
add
pop
sbbb
stos
mov
scas
fcompl
push
lahf
in
leave
hlt
add
dec
push
sar
ss
sbb
into
iret
dec
and
and
ja
cmpsl
rolb
lds
sub
xor
ror
in
cmpsb
push
jns
sub
dec
fstps
rol
add
loopne
sub
dec
or
add
mov
cmc
or
add
js
push
mov
add
cmp
fwait
loopne
dec
add
mov
jns
lcall
cli
and
add
pop
push
movsl
aas
pop
ljmp
pop
cmp
jg
jae
das
fnstsw
dec
sub
and
rclb
cltd
sbb
push
lcall
add
pop
mov
add
sbb
add
incl
cmc
mov
stos
and
sub
jns
jl
jne
add
adc
xor
push
ss
add
outsb
pop
jge
dec
inc
push
dec
and
stos
sbb
xor
xchg
ret
jo
lea
add
or
push
xor
dec
jle
jl
add
insl
lret
adc
pop
popf
sbbb
rol
mov
add
xor
cmp
es
repnz
inc
cltd
call
out
std
jnp
loop
dec
hlt
arpl
jmp
jecxz
sbbl
adc
jae
add
rolb
mov
out
rcr
cmp
fsubrs
repz
psubb
add
movsb
sbb
in
subb
add
imul
adc
cmp
sbbb
xor
arpl
mov
stc
mov
fnstcw
sbb
mov
popf
roll
jo
add
jae
xor
fwait
jo
sti
push
cmp
cmp
iret
add
stos
outsb
or
inc
lret
loopne
lea
testl
mov
outsl
mov
inc
jne
xchg
loopne
arpl
fdivs
fxch
enter
repnz
jecxz
je
pusha
sbb
nop
add
push
lret
call
lcall
sbb
pop
mov
jno
loopne
mov
idivb
sbb
sbb
lret
test
add
xor
fadds
je
mov
std
dec
push
out
aaa
dec
inc
outsl
setb
ljmp
sub
sub
fnstsw
clc
popf
mov
add
fistpll
clc
pusha
cmp
mov
sub
aaa
shlb
add
cs
mov
mov
add
or
nop
pop
nop
sub
add
xchg
fnstenv
pop
ret
pusha
out
xor
push
adc
fbld
pop
movsl
push
add
loopne
cs
mov
jnp
push
ret
add
sub
mov
jmp
push
push
addb
fidivs
mov
xor
stos
push
cwtl
movsl
dec
push
add
jne
push
std
fcoml
lahf
jbe
add
xchg
shrb
imul
call
dec
nop
lret
repz
and
add
jbe
xor
or
sub
jmpw
imul
out
pop
cltd
je
pop
mov
shrb
out
insb
aaa
psubsw
mov
cmp
into
movsl
outsb
lods
sti
insl
aam
push
add
jl
pop
mov
and
out
pop
cwtl
orb
stos
ret
push
push
push
push
jg
cld
out
loop
pop
dec
divl
lock
rcrb
outsb
mov
cmp
or
xrelease
or
sbb
shl
loopne
lea
lcall
cmp
dec
test
aas
cs
jno
cmp
cltd
pusha
repnz
jb
cmc
jo
add
xchg
push
les
ds
inc
jae
jp
sub
lea
lss
dec
add
push
mov
in
cmp
add
loope
js
xchg
and
xchg
outsl
inc
lret
je
add
fildl
sub
and
add
pop
pusha
mov
add
nop
dec
sub
add
jb
push
add
call
mov
lds
cmp
in
jo
inc
insb
pop
int3
call
out
or
iret
lahf
sahf
cwtl
sub
std
mov
and
dec
and
pop
dec
out
add
clc
fsts
scas
or
cmpsl
imul
add
das
lahf
movzwl
pop
xor
je
xchg
scas
int3
cmp
stc
push
mov
pop
rclb
mov
and
pop
adc
scas
andb
ljmp
cmp
lock
push
fs
add
call
js
es
mov
cmp
lret
push
and
fs
or
pop
or
push
xlat
fwait
negl
add
mov
sub
ret
add
pushf
cmp
sbbb
shr
cmp
or
or
outsl
js
aaa
aas
mov
add
cmp
es
add
mov
xor
mov
push
xchg
add
int3
pop
lret
mov
daa
mov
jnp
add
in
push
fs
and
nop
outsb
testl
add
xorb
jb
jbe
cmc
xchg
pop
add
dec
jecxz
fbld
sbb
cmpsb
mov
shrl
jo
daa
mov
adc
cld
sbb
add
lahf
pop
enter
sti
sbb
mov
add
dec
mull
shl
les
outsb
add
cmp
adc
pop
xchg
shlb
dec
pop
cld
clc
xchg
loopne
sub
nop
addr16
lahf
sbb
insb
cmp
in
xor
movsl
add
xchg
hlt
icebp
add
mov
jne
add
mov
leave
push
insb
pop
jae
andb
push
push
dec
out
ret
pop
add
rcll
dec
rcrb
jnp
add
push
int
out
pop
out
push
mov
sbb
cmp
add
aad
call
mov
scas
jle
ret
out
in
dec
iret
mov
loope
mov
adc
cmp
sub
aas
jge
jne
enter
or
add
mov
add
imul
arpl
clc
out
mov
mov
aaa
cwtl
shll
int3
pop
add
rorb
int
cwtl
addr16
cmp
js
mov
stos
loopne
xlat
dec
add
jo
test
roll
xchg
cmp
fwait
xchg
sbb
ret
mov
shlb
je
addr16
xchg
fwait
repnz
add
sahf
mov
mov
mov
ds
or
les
flds
pop
pop
xchg
push
in
cmp
out
fmuls
push
jbe
jp
imul
jo
push
imul
push
xchg
add
loope
lods
sbb
push
inc
sbb
pusha
in
mov
mov
clc
xor
out
push
pop
cli
lock
add
sbb
or
rcl
cwtl
call
rclb
nop
pop
int3
add
imul
and
push
sbb
sbb
paddq
scas
add
jle
mov
roll
pop
or
jae
hlt
movsb
jo
add
push
cmp
rorb
jbe
add
lock
bound
sub
inc
out
jmp
push
fwait
and
xlat
icebp
mov
pop
push
mov
call
rcrb
mov
pop
loop
adc
jl
frstor
add
mov
pop
test
lock
dec
mov
fstpt
inc
cmp
loopew
cld
testb
movsl
aam
iret
dec
repz
add
ja
aad
pop
jne
sbb
sub
lahf
xchg
adc
popf
and
inc
mov
loopne
movsb
fcomp
add
cli
jne
cmp
popa
shlb
nop
cltd
add
or
cmp
push
pop
mov
jmp
jo
add
sahf
lock
aad
inc
and
add
enter
lock
pusha
mov
fwait
add
xchg
cltd
clc
inc
call
addb
pop
or
ss
add
xchg
push
mov
sub
aas
jne
pushf
add
dec
js
push
mov
in
in
push
dec
jne
fcom
mov
test
inc
stos
cmp
enter
jg
add
icebp
iret
cmpsb
xchg
add
movsb
xchg
push
add
popf
test
stc
in
cmp
add
cmp
imul
in
add
popf
les
add
mov
ret
push
and
add
cwtl
test
les
or
jb
add
mov
cwtl
jmp
mov
sub
imul
cmp
jbe
xor
pop
loop
mov
pop
pop
adc
lods
sub
xchg
mov
add
out
xor
fisubrs
mov
loop
add
jl
call
add
lods
adc
cmc
loopne
and
movsb
in
lds
jb
dec
xor
data16
aam
dec
xchg
lds
dec
jl
clc
mov
add
push
fmull
sbb
jbe
mov
dec
add
dec
inc
jg
jb
ret
imul
add
dec
mov
cmp
xor
or
adc
lret
inc
jnp
push
ret
pop
test
push
sahf
andl
mov
rcrl
movsl
pop
inc
pop
int
jo
xchg
mov
movsb
test
sub
pop
add
mov
cwtl
cltd
or
cmp
roll
repz
or
adc
push
xchg
or
orl
pop
add
pop
adc
or
push
jae
add
ret
xchg
jne
add
cmp
cltd
mov
cwtl
add
sbb
mov
icebp
add
mov
add
add
and
ljmp
imul
test
push
cwtl
add
fnstsw
inc
cmpsb
jge
cmpsl
xlat
push
rol
add
jle
bound
movsl
pop
outsb
pushf
add
jae
int
xor
fistpl
add
cmc
xchg
jns
add
subl
add
xor
add
adc
into
fstl
xchg
lock
addb
gs
ljmp
xchg
test
cmpsl
fdivr
cld
repz
sbb
sub
or
pop
inc
fs
ret
lock
add
lret
inc
sti
cwtl
or
cmp
mov
add
fildll
push
dec
mov
pop
xchg
mov
rcrb
mov
add
int3
rcll
lds
sbb
xchg
jno
xor
fwait
pop
jno
add
ds
add
lods
enter
pop
out
add
pop
in
lock
jmp
add
inc
sub
insb
pop
push
push
mov
out
es
adc
test
fadd
add
out
jmp
sub
mov
test
jl
call
mov
add
mov
dec
lret
sti
cmp
sbb
xor
sub
push
loopne
loope
outsb
push
ds
cli
cmpb
xor
add
mov
lahf
xchg
or
aam
addl
cmp
stc
jg
add
push
out
mov
mov
int3
ss
clc
jbe
push
add
xchg
in
loopne
lret
add
jp
pop
shlb
cld
mov
pop
add
push
aas
fwait
or
mov
mov
aaa
pop
cmp
or
andb
dec
movsl
insl
rorb
dec
inc
adc
dec
sbb
add
movsl
pop
xchg
clc
mov
mov
cwtl
cmp
sbb
cmp
and
jno
add
leave
bound
add
push
mov
fdivrs
jns
add
hlt
add
sbb
add
jl
sub
lcall
repnz
pop
repnz
repz
mov
jbe
xchg
adc
sbb
movb
mov
je
cwtl
outsb
add
pop
or
das
ljmp
std
fdivr
sub
les
sti
add
xor
pop
inc
add
xchg
out
fcoml
mov
jmp
add
repz
stc
cld
cld
add
stos
and
js
jle
sarl
jmp
fnstcw
dec
cmpsl
cmc
add
adc
cmp
jle
jge
xor
mov
sub
ss
xchg
pushf
add
cmp
cmc
in
pop
mov
push
mov
add
stos
ja
push
push
pusha
stos
cmp
xor
call
mov
pop
dec
sbb
mov
or
mul
xorl
pop
cmpsl
sbb
cs
mov
hlt
lahf
adc
dec
mov
or
push
daa
inc
mov
xchg
scas
stos
push
shlb
loop
das
mov
add
hlt
clc
lock
add
sub
adc
loopne
xchg
add
pop
sbb
addb
dec
xor
sub
pop
push
add
jp
xor
out
dec
loop
pop
fst
lods
daa
dec
cmp
div
xchg
iret
mov
test
jmp
jl
sbb
jb
out
add
add
push
inc
test
aas
pop
xchg
es
arpl
add
add
ja
jle
das
mov
add
sub
into
or
popf
and
int3
pop
leave
add
sub
neg
data16
pop
xchg
add
test
add
ja
jno
int
add
pop
adc
pop
or
arpl
and
sbb
rorl
inc
mov
pushf
xchg
inc
cmc
and
mov
mov
inc
adc
add
inc
mov
stos
pop
mov
mov
jbe
add
bnd
add
into
pop
std
movsb
cmpsl
push
add
pop
bound
movaps
sbb
sub
ja
push
mov
add
mov
push
arpl
sub
add
lock
add
dec
pusha
cmp
adc
es
js
add
xchg
je
sub
stc
sar
push
or
or
jae
pusha
enter
addb
dec
out
mov
popf
stos
add
inc
lcall
rcrl
mov
lods
sbbb
popf
gs
add
mov
jae
fisubrs
insb
jmp
scas
nop
add
dec
icebp
in
mov
add
mov
bound
hlt
jnp
cltd
sbb
push
mov
rolb
fidivrl
or
add
into
inc
aad
pop
xchg
add
les
fs
out
push
cmp
cld
cli
cmpsl
pop
inc
loopne
mov
add
int
scas
test
ret
add
jb
pushf
pusha
mov
and
fwait
push
xchg
cmpb
dec
and
jae
fcmovbe
cwtl
xchg
mov
pslld
or
ja
jns
in
mov
aaa
add
dec
and
cmp
lods
andb
add
xor
jne
loopne
leave
out
xchg
sbb
pop
sub
imul
loopne
popf
repz
and
mov
dec
xor
adc
add
roll
jno
add
je
mov
clc
out
scas
add
cmp
out
fs
push
nop
cld
or
out
mul
jo
std
add
je
decl
dec
push
jo
lea
add
push
xchg
dec
add
pop
shll
mov
jp
xchg
jns
add
sbb
fs
jbe
rolb
clc
lods
add
or
mov
mov
fidivs
add
loopne
repnz
into
cmpsl
push
mov
bound
mov
add
js
xchg
iret
les
fldl
loope
sub
out
pop
mov
sbb
mov
jo
mov
roll
add
push
mov
mov
push
cmpsb
pop
lods
aas
and
or
xchg
cmp
add
mov
insb
in
sub
pop
movsb
inc
jge
and
nopl
xchg
or
jne
add
movsb
push
add
mov
mov
xchg
xlat
fstpt
out
push
test
add
dec
and
add
test
roll
in
adc
xor
add
jae
fwait
mov
popf
and
in
xor
movsb
jl
shrb
xchg
hlt
stos
pop
pop
sarb
or
mov
add
int3
dec
lods
ret
mov
loope
dec
sub
mov
cmp
arpl
lock
add
adc
cmp
fistpl
shll
pop
mov
lret
out
add
mov
popa
or
inc
add
push
dec
shll
pop
shll
arpl
lods
push
ss
xchg
sarb
add
shl
aad
mov
xor
add
xchg
sub
mov
stc
jno
jbe
outsl
jb
pop
popf
mov
data16
cmp
add
test
sbb
mov
sub
adc
pop
arpl
cmpsl
inc
push
mov
cs
aaa
or
cli
add
loope
lods
add
sub
inc
pop
dec
sbb
test
daa
add
pop
stc
fstpt
add
scas
adc
andb
mov
sbb
notl
mov
into
add
int
decl
sub
adc
cmp
or
mov
mov
jg
mov
je
mov
cwtl
add
jl
sti
cmp
popl
popf
out
inc
pop
mov
dec
mov
inc
add
sbb
and
fiaddl
loopne
sbb
cmp
inc
cmp
in
repz
inc
insl
push
popa
dec
inc
in
jmp
fisubrs
es
xchg
mov
popf
int
add
shrb
adc
add
cwtl
sbb
add
dec
repz
mov
and
push
shl
ret
mov
outsb
pop
cmp
out
orb
psllw
pushf
pushl
add
pop
aas
in
sbb
imul
arpl
push
add
sbb
popa
mov
push
roll
test
mov
dec
add
mov
scas
nop
mov
dec
adc
test
pop
std
ficoml
add
or
lret
push
aaa
dec
pop
or
inc
cmp
jno
mov
push
pop
add
nop
add
cmp
repnz
pushf
clc
push
dec
cltd
sbb
mov
sar
idivb
push
jl
adc
pop
jo
aas
aaa
addb
jo
jle
nop
clc
xor
out
mov
mov
cli
push
pusha
ret
test
adc
fisttpll
cmpsb
fadd
lea
cmpl
lods
sbb
push
add
les
lcall
jecxz
push
cli
addr16
push
sbb
out
std
jno
cmp
fildll
pop
push
imul
pop
xchg
adc
mov
xchg
pop
inc
aam
popa
cmpsb
jge
pop
loopne
int
xor
les
outsl
outsb
dec
cmp
add
pop
cmp
add
jecxz
xor
lods
dec
jo
stos
cmc
inc
movl
into
orb
add
pop
aam
add
cmc
push
fdiv
lahf
xor
add
jge
xchg
aas
xchg
aas
jnp
orb
xor
xchg
iret
pop
push
adc
cli
or
enter
xchg
push
fstp
and
aam
inc
addr16
adc
xor
mov
fiadds
push
fcmovne
jns
shl
nop
add
imull
sub
cwtl
mov
inc
and
add
rol
sahf
add
xor
or
add
adc
mov
cmp
add
imul
adc
daa
mov
cmp
add
add
cld
jl
jnp
jle
add
push
out
divb
call
sbb
adcb
add
or
jl
pushf
rolb
add
add
jmp
mov
cs
jnp
sub
shlb
lods
sbbl
sbb
shrb
push
int3
pop
leave
into
inc
add
test
add
xchg
pop
fcmovne
pusha
stc
cmpsb
add
ss
inc
cltd
adc
int3
adc
in
xor
jns
addr16
add
ficoml
sub
dec
ljmp
and
in
sub
call
jo
leave
mov
into
movl
xchg
cld
lods
rolb
jl
jno
test
addr16
adc
sahf
dec
stos
mov
add
jo
inc
mull
inc
shlb
test
pusha
xchg
mov
add
bound
adc
sbb
lock
inc
adc
dec
aam
aad
nop
add
enter
ret
add
fs
pop
push
dec
cld
insl
add
rorb
cmp
cltd
add
imulb
inc
mov
jnp
xor
int3
pop
add
je
fidivrl
sbb
jnp
mov
and
int3
subb
xchg
adc
arpl
stc
jl
or
add
ljmp
add
cmpsl
out
mov
add
pop
das
sbb
sub
or
adc
leave
cltd
add
sbb
cmp
mov
sahf
stos
shr
xor
je
and
es
jns
lea
and
cltd
dec
movl
xchg
dec
push
cmp
in
or
ficoml
scas
jge
daa
sub
fdivrs
inc
cmc
dec
dec
and
aaa
or
add
jnp
pop
push
fwait
xor
push
pop
dec
xor
sbb
push
inc
and
jecxz
push
add
dec
rcrl
aas
pop
xchg
sahf
add
idiv
or
add
push
xchg
cli
gs
hlt
std
shrb
xlat
mov
mov
and
add
sub
enter
pop
int3
mov
iret
xor
popf
and
add
pop
pop
push
in
push
fcomip
add
mov
dec
add
fisttpll
les
push
and
add
movsl
add
scas
popf
push
testl
cmp
cmp
push
nop
movsl
add
pop
pop
fcoml
sti
add
xor
mov
out
adc
repnz
add
cmpsl
add
loop
fildl
or
pushf
adc
cmp
mov
sti
iret
lahf
sub
add
fisttps
add
out
add
sub
inc
add
out
dec
jl
xor
sbb
test
lock
cmp
call
and
and
dec
and
jmp
mov
xchg
adc
mov
dec
or
pop
bound
iret
cmp
cmp
loopne
sub
push
popf
add
int
inc
pop
jecxz
jns
cmp
add
int
add
scas
xchg
sti
dec
jns
rorb
popf
mov
add
cmp
xor
addr16
push
push
push
das
int
aas
enter
pop
pop
insb
inc
push
jl
add
mov
push
testb
sub
cld
fcoml
xor
cmp
subb
in
dec
mov
sub
pop
movsb
insl
scas
fadd
rolb
cmp
pop
fwait
jbe
jle
sub
mov
push
fidivrs
int
pop
add
mov
pushl
xchg
incb
in
dec
gs
dec
ss
fiadds
popf
pop
mov
sub
ljmp
ud1
and
cwtl
data16
ret
add
call
push
stc
fstpt
ret
out
subl
loop
push
enter
sbb
sbb
and
and
imul
add
loop
xor
mov
xchg
push
call
das
mov
inc
mov
push
xchg
mov
lret
push
cvttps2pi
and
scas
nop
xor
inc
lods
jae
out
jo
testb
jb
jne
push
adc
push
or
jnp
test
xor
stos
pop
jp
xor
jo
sarb
pop
add
faddp
xchg
mov
ljmp
das
nop
clc
addl
fadd
sahf
roll
mov
popa
push
cmp
add
pop
stos
push
es
dec
or
loope
add
shll
and
jmp
push
jno
add
repz
scas
add
sarb
sahf
ljmp
xchg
dec
out
cwtl
lret
and
jbe
add
imul
jns
add
movsb
pop
mov
inc
test
fidivrs
push
xor
sbb
sahf
std
mov
outsb
pminsw
push
loope
cld
jbe
fsubrs
xor
mov
lods
sahf
add
mov
pop
add
pop
sbb
je
add
in
and
inc
daa
cmc
add
enter
inc
inc
leave
lock
sahf
jmp
je
mov
xlat
pop
fcomps
lcall
inc
fimull
add
ja
lods
xlat
ficoms
cmpsb
dec
pop
scas
inc
idivl
push
inc
jae,pt
cmp
subb
add
fidivrs
add
adc
mov
add
fisubrl
movsb
add
std
push
daa
add
test
repnz
xor
push
out
pop
cld
fs
ds
push
enter
stc
xchg
pop
pushf
lock
jg
lret
out
push
push
call
add
mov
sub
dec
add
mov
dec
mov
jne
inc
in
pop
stos
mov
in
add
loope
stc
xor
lret
mov
or
xchg
out
adc
icebp
cmp
aam
pushl
add
test
add
xor
mov
test
out
or
push
rcll
add
pop
inc
cmp
mov
fldenv
arpl
into
jg
sbb
jo
mov
pushf
inc
daa
cmp
inc
add
jns
pusha
imul
jp
xchg
rolb
mov
aas
push
add
data16
repnz
movsl
sbb
push
sbb
xchg
sub
leave
jl
lds
loope
fucomip
hlt
lods
aad
add
daa
dec
add
jb
add
stc
out
pop
daa
stos
sbb
sbb
mov
cmp
add
mov
stos
mov
pop
scas
repz
mov
ljmp
jae
jmp
sub
dec
arpl
mov
mov
add
mov
or
pop
adc
push
xor
jne
jg
xlat
popf
lahf
add
out
cmpl
aad
pop
mov
add
inc
add
cmp
add
lea
xchg
fdivrs
popf
sahf
scas
sub
int
addb
and
push
cwtl
pop
sbbl
icebp
add
inc
scas
pop
xor
leave
mov
inc
popl
pop
ficoms
jmp
lds
incb
pop
mov
cmp
leave
popa
clc
sub
outsb
ds
rolb
into
sbb
add
mov
cmp
fstpl
setne
xor
jno
add
push
sub
add
dec
cmp
lahf
jg
xor
push
ret
cmpl
or
mov
je
add
xchg
mov
test
xor
inc
lock
icebp
dec
fisttpl
aaa
out
lods
out
nop
jns
repnz
movzwl
adc
scas
add
xchg
inc
xchg
jne
fwait
push
jno
mov
add
add
sbb
insl
cmp
js
add
lods
lods
sub
jl
repz
pushl
aaa
add
repnz
outsb
add
dec
push
aam
int3
mov
adc
call
shlb
jge
add
ss
and
lcall
mov
cwtl
inc
add
ret
pop
int3
scas
fisubrl
test
ss
outsb
cmpl
add
and
cli
sbb
jl
mov
jb
xorl
add
clc
hlt
adc
icebp
out
and
fisttpl
fwait
add
movsl
lods
add
test
in
add
std
dec
ds
mov
add
outsb
les
aad
add
imul
pusha
into
movsl
mov
test
dec
push
cmpsb
rolb
xor
pop
daa
repz
mov
xor
pop
ja
add
loop
cli
cli
aas
add
pop
or
add
cld
xchg
stc
mov
cmpsb
jg
cld
pop
jge
sarb
xchg
and
scas
cld
push
pop
jl
pop
pop
stc
ret
adcb
add
sbb
jge
jno
push
or
int3
sbb
push
cwtl
iret
repnz
mov
or
les
lea
les
sub
adc
or
lea
mov
mov
mov
leave
xchg
add
mov
sbb
add
call
faddl
rorb
loop
sub
sbbb
xlat
dec
xchg
add
jg
stos
sbb
ja
mov
clc
ret
add
push
verw
mov
rclb
dec
jmp
push
mov
pusha
mov
push
add
push
out
jb
cmpsb
add
test
enter
cli
lret
jno
frstor
imul
pop
xchg
cmpsb
xchg
xor
pop
cltd
cmp
pand
pop
mov
or
pop
pop
jo
jecxz
mov
aam
mov
pop
mov
sub
xor
cli
add
lods
ljmp
icebp
bound
jecxz
arpl
xchg
xchg
adc
mov
movsl
cmp
add
test
xor
or
jb
add
jne
push
cld
loopne
loopne
add
adc
shlb
test
or
xor
stc
inc
push
mov
and
out
add
aaa
das
pop
adc
xchg
dec
inc
cmc
push
lock
call
dec
cbtw
or
push
push
mov
jge
dec
arpl
adc
nop
mov
rolb
jge
cmp
pop
add
and
mov
add
cmc
call
jmp
or
stos
test
add
popf
ljmp
data16
sbb
xchg
xor
jno
cmc
dec
test
jb
in
add
sub
jge
add
repz
fiadds
jns
inc
popf
cld
add
mov
fistpll
adc
stos
add
imul
adc
pop
popa
or
jb
das
loopne
test
sahf
call
add
enter
fwait
lock
ret
mov
fdivrl
xorb
in
mov
fstpl
push
add
mov
ficomps
sbb
iret
lahf
push
push
repnz
add
sahf
push
jmp
out
and
jno
enter
jmp
pop
loopne
add
xchg
loop
lock
add
xchg
lahf
repnz
rol
pop
sbb
xor
mov
add
jo
test
add
mov
or
repnz
or
idivb
fisttpl
push
jo
or
sbb
cmp
inc
loope
out
sbb
lock
push
emms
mov
pop
and
pop
xchg
jbe
xchg
mov
addb
cltd
loop
enter
aad
add
inc
mov
sbb
sub
fcmovb
xchg
sbbb
aam
lcall
movb
mov
fmull
hlt
arpl
push
or
xchg
push
jbe
inc
dec
pop
and
out
loopne
adc
or
mov
stc
testl
mov
addb
cmpsb
mov
and
insb
aaa
dec
add
sahf
jo
jnp
mov
int
fistl
push
je
jno
add
divl
add
cmpsl
in
xor
addr16
je
in
jno
and
mov
loopne
xchg
aas
mov
ss
or
lods
aad
add
adc
push
or
push
mov
mov
lret
adc
jl
xchg
jge
cmp
mov
jns
lods
push
xchg
test
push
leave
inc
push
pusha
xor
test
std
seta
add
or
jge
aam
scas
stos
and
addb
mov
add
ja
lret
leave
cmp
icebp
clc
paddsw
push
push
and
rcl
jnp
loop
aas
add
cmp
mov
ficompl
stos
mov
fcompl
cli
sub
sbb
or
loopne
push
lcall
int
in
imul
ja
out
mov
inc
add
shrl
movsb
xchg
pop
mov
jecxz
mov
lock
adc
sub
scas
cmp
push
push
out
push
push
jnp
cs
mov
jb
fstl
cmp
sti
jmp
test
cwtl
xchg
cmp
imul
xchg
nop
xchg
sub
add
mov
add
loopne
pushf
add
lods
adc
add
mov
dec
les
outsb
add
sarb
adc
cmpsl
xchg
jb
mov
cltd
or
cmpl
clc
cmc
add
rcr
loopne
cmp
pop
sub
xlat
enter
sbb
cmpsb
mov
push
add
fistpl
mov
add
das
lods
cmpsl
std
xchg
loopne
aad
add
xchg
and
add
sbb
add
push
outsb
in
imul
and
ror
or
lods
add
push
jbe
aad
lds
push
sub
lock
aaa
cmp
jnp
std
add
stos
fs
jo
movsb
add
mov
or
pop
xlat
push
es
inc
cmovne
dec
aaa
add
movsl
int3
enter
push
push
test
sbb
ljmp
xor
out
add
fisubl
cltd
fiadds
and
pop
mov
aas
add
data16
add
inc
lahf
mov
ss
ds
test
add
mov
mov
dec
fsubp
insl
add
sahf
push
mov
or
pop
movsl
xor
repz
and
in
xor
stc
ja
add
xor
stos
roll
outsl
clc
mov
pop
pop
std
mov
push
mov
pop
push
add
iret
mov
cmp
xorb
xor
jl
rcrl
cld
mov
pusha
roll
push
ds
or
sbb
and
dec
imul
dec
push
and
out
arpl
mov
sbb
xchg
adc
xchg
aas
stc
xchg
pop
mov
cltd
pop
jo
add
out
lods
mov
cmpl
adc
in
pop
pop
addr16
mov
add
shlb
ret
or
pop
xchg
subb
lds
enter
cmp
adc
push
jno
out
add
jl
aad
xchg
mov
daa
jae
insl
test
inc
add
pop
rolb
and
clc
xchg
jne
add
xor
fwait
dec
imul
hlt
data16
dec
lahf
xchg
sbbl
dec
cmpsb
add
fbstp
lds
and
sub
or
push
filds
std
hlt
mov
jp
xchg
loope
add
mov
inc
enter
lahf
mov
pop
add
xbegin
sbb
add
push
or
or
dec
lea
mov
mov
jecxz
pop
mov
test
jo
aaa
jl
aas
sbb
jl
sbb
loope
lahf
push
add
mov
inc
ficoms
sahf
orb
and
in
fs
filds
pop
pop
cmp
push
aam
add
rorl
add
adcb
flds
gs
iret
jl
out
out
sub
add
dec
xor
pop
das
pandn
pusha
out
sub
mov
lock
pop
mov
add
dec
in
outsl
sbb
cmp
fs
xchg
xor
dec
add
add
push
lret
rol
sbb
jecxz
pop
jo
inc
dec
add
push
mov
adc
mov
scas
and
cmp
enter
or
sti
sahf
push
and
add
jle
mov
xchg
pusha
imul
in
push
das
add
jo
shlb
cltd
gs
sahf
add
mov
lock
shlb
jbe
mov
pop
add
mov
add
fcoml
rorl
cmp
pop
outsl
out
mov
movb
jae
add
sub
enter
add
fldt
inc
les
outsb
or
out
add
inc
in
stos
push
lret
pop
add
pop
lahf
fisubs
xchg
add
cli
mov
add
mov
cmpsl
push
add
lea
jne
sbb
or
clc
sbb
fldl
data16
push
loope
add
cmp
fidivrs
jns
pop
add
pop
lcall
hlt
and
and
add
or
out
dec
adc
jns
push
adc
push
xchg
or
loope
jb
sbb
sahf
sub
sub
fadds
cli
insb
lds
pop
cld
add
stos
xchg
xchg
pop
ror
adc
push
orb
add
dec
das
int3
pop
fldenv
cmp
imul
xlat
cmp
lret
jne
cmc
inc
add
mov
sub
je
iret
cld
clc
out
xchg
cmp
ds
inc
into
pop
shrl
aas
mov
push
mov
js
cmc
jge
jnp
imul
jne
cmpsl
fnstcw
je
pop
mov
addl
pop
add
repz
jle
in
ss
mov
mov
nop
xor
cwtl
sub
cli
mov
cmc
jg
inc
subb
movsl
or
add
roll
push
mov
in
cmp
mov
add
jbe
fwait
or
adcl
cmc
inc
or
in
rclb
mov
pop
add
stos
push
daa
pop
cmc
push
sub
adc
aaa
loopne
or
das
inc
cmpsb
jno
xchg
arpl
adc
dec
sbb
xchg
popf
mov
cmpl
xor
jae
cs
cmp
mov
icebp
xchg
add
lods
pop
mov
push
xchg
sub
sub
mov
nop
or
or
add
dec
add
dec
mov
testl
mov
test
out
fdivrs
xchg
add
aaa
loopne
xchg
addr16
popa
xor
hlt
hlt
push
mov
add
push
shrb
add
push
jae
cmp
in
xlat
jns
lahf
sub
mov
outsb
outsl
add
int
push
in
movsb
loopne
add
mov
inc
jle
in
inc
fisubrs
js
mov
int3
cli
mov
pop
test
add
adc
pop
lock
repz
sbb
and
push
adc
je
add
inc
addl
into
push
mov
push
pop
add
or
inc
leave
addl
aaa
mov
mov
dec
push
imul
sub
add
push
push
pop
sbbl
fimuls
jp
sbb
or
lods
rcl
push
jg
lret
lock
rcrb
sub
sbb
aaa
imul
lea
jne
mov
testl
add
das
adc
mov
mov
jl
stos
loopne
dec
cmp
add
or
mov
push
jecxz
out
popl
cmpsb
in
dec
hlt
mov
lea
dec
add
out
lret
roll
es
hlt
movsb
ds
addr16
xor
cli
pop
add
pop
stos
xchg
and
mov
loopne
mov
xor
xor
not
aas
sahf
out
add
imul
sub
cmp
orl
and
mov
stc
sbb
mov
pop
insb
cmp
adc
loop
pushf
pusha
jnp
jb
cmp
or
jbe
add
and
adc
jo
or
cltd
cmp
rclb
js
add
int
add
mov
inc
xbegin
loope
or
int3
bound
or
cwtl
popa
jmp
add
mov
mov
push
pop
shlb
add
jne
insb
lahf
or
add
test
add
cmp
push
jl
and
jb
or
add
add
pop
cmpps
shr
xchg
xchg
add
das
sbb
push
add
rol
je
dec
fxch
xchg
outsb
in
call
adc
les
out
cltd
add
adc
pop
xor
push
test
jo
jnp
fildl
cmpsb
stos
in
cmp
dec
fadds
mov
nop
inc
hlt
fwait
add
addr16
leave
pop
inc
out
add
mov
js
cmp
aas
and
ss
ror
cmc
sbb
jns
mov
push
mov
push
xor
rolb
mov
ja
add
fldl
pop
sub
mov
int
jno
out
sub
pop
lds
jecxz
add
jbe
sbb
push
adc
adc
add
cli
jb
nop
les
in
fadd
add
inc
mov
add
bound
xchg
dec
pop
test
jb
pslld
dec
repz
add
adc
pop
jge
lret
shr
pop
add
mov
call
aad
mov
mov
imul
out
sti
cmpsl
in
cli
inc
add
test
push
test
imul
xchg
add
into
inc
push
add
and
dec
outsb
xchg
add
fimull
aam
pop
add
fwait
mov
popa
gs
cld
jb
or
lods
insl
stos
adc
xchg
and
sbb
jecxz
lock
jp
sub
clc
dec
lret
sbb
xor
inc
add
shlb
or
add
aam
lods
dec
lock
adc
mov
xorb
mov
movb
push
jmp
into
sbb
cmp
out
fmul
jno
mov
pop
je
jle
add
or
jmp
add
push
sbb
bound
stc
lock
test
pop
add
nop
jge
add
and
or
in
mov
sbb
sub
lahf
mov
and
sub
call
adc
inc
rcrb
mov
scas
xor
insb
shll
test
ljmp
add
adc
pusha
mov
outsb
das
aaa
shll
sub
cmp
sub
inc
push
ss
add
sbb
mov
fidivrl
clc
pusha
ja
adcb
dec
mov
inc
push
push
imul
add
mov
ds
adc
out
cmp
cmpsl
shlb
roll
insl
push
jle
add
xchg
int
cld
mov
in
loop
imul
xchg
xchg
push
mov
adc
pop
push
fwait
les
outsl
lock
cmpsl
out
call
aad
add
inc
std
sti
cwtl
mov
cmp
cmp
add
mov
test
push
outsl
out
and
xchg
add
mov
lcall
movd
andb
sbb
sbb
mov
test
xchg
push
faddl
mov
add
loope
add
lods
and
pop
in
adc
or
mov
push
xchg
pop
xchg
hlt
add
stos
lret
mov
add
mov
subb
add
or
cmp
xchg
mov
int
outsl
xorb
add
sbb
cld
cs
add
mov
loop
in
enter
mov
push
pop
popa
adc
mov
enter
jecxz
je
dec
add
test
mov
fwait
add
cwtl
and
inc
push
lods
jnp
lds
cs
or
mov
loop
sbb
outsl
mov
scas
jnp
popf
insl
das
adc
mov
push
cmp
leave
xchg
add
mov
pop
add
out
or
add
fwait
inc
sub
xor
test
xor
pop
and
ljmp
mov
je
pop
add
add
ret
mov
xor
sti
jl
movsb
add
out
dec
pop
pop
mov
aas
es
sbb
in
pop
cmp
lock
jl
mov
ja
adc
lock
stos
jmp
outsl
add
adc
dec
xchg
xchg
add
shll
and
pop
add
andl
cmp
out
inc
movsl
pop
cld
cwtl
jecxz
dec
cltd
ror
xchg
mov
mov
xchg
fisttpl
movl
mov
push
dec
xor
inc
inc
enter
pop
xor
add
int3
mov
cmpsl
jg
ret
push
lret
cmp
sbb
movsb
mov
add
sbb
sub
out
pop
add
mov
les
jmp
rorb
push
add
insb
inc
pop
lock
xor
repz
adc
sub
or
add
inc
and
mov
xor
dec
xchg
mov
mov
inc
mov
push
and
daa
sti
pop
adc
fisubrs
hlt
out
mov
add
pushf
and
pop
jp
rolb
fcmovbe
add
jne
mov
or
or
sbb
xchg
dec
les
enter
outsb
call
std
sub
push
xlat
lret
xchg
add
inc
dec
int3
adc
cmp
push
pop
mov
dec
adc
pop
lock
outsl
out
cmpsb
test
add
jae
ret
sbb
js
lret
fmul
add
lods
imull
insb
dec
inc
iret
test
xor
rorl
clc
outsl
cmp
adc
add
iret
add
push
cmp
jb
ret
xorl
ja
add
dec
loopne
or
fcoms
loop
fdivl
add
adc
jmp
push
add
mov
xlat
filds
or
imul
stos
pop
add
adc
in
jae
addb
and
xchg
mov
jbe
xorb
pop
add
scas
stc
lahf
mov
bound
rclb
pop
imul
xorl
add
mov
test
mov
xor
movsb
int3
mov
adc
pusha
es
ljmp
add
xchg
filds
mov
push
cwtl
lcall
add
das
sbb
faddl
insb
leave
call
roll
ret
jns
int
add
daa
mov
shlb
stc
sbb
fnstsw
xchg
and
sbb
pop
nop
je
fdivs
add
add
xor
loopne
and
add
je
fdiv
jbe
jmp
pop
dec
add
push
pushf
add
cs
out
inc
in
pop
xchg
add
mov
outsb
loopne
add
xchg
sbb
cld
pop
add
movsb
in
pop
fstpl
add
mov
push
inc
jno
clc
div
add
and
gs
ret
mov
addr16
in
iret
lret
add
adcl
xor
imul
cmp
stos
sub
push
push
or
pop
cli
cmpsb
adcb
into
add
fisttps
pop
push
sub
add
push
jg
cmp
pop
fldenv
sbb
mov
cmp
and
add
dec
pop
idivl
mov
cwtl
ret
push
jnp
rorl
scas
add
or
xchg
push
sub
add
lret
xor
push
xor
gs
out
jge
int
bts
dec
inc
push
jnp
push
icebp
add
jo
nop
out
dec
add
int
arpl
out
adc
or
add
shr
imulb
cli
xor
clc
pop
mov
js
das
sbb
sbb
or
add
pop
mov
cmp
psadbw
ja
stos
add
rol
insl
aas
sahf
popa
xor
inc
pusha
ret
add
inc
jecxz
sub
pop
loope
mov
fiadds
adc
ret
incb
sub
repz
and
out
rcrb
fwait
jmp
leave
and
rcrb
es
add
adc
je
pusha
aaa
das
lea
cmp
jmp
or
scas
fistpl
add
mov
push
add
repnz
sub
mov
or
loop
add
jbe
faddp
daa
mov
cld
adc
xchg
push
sahf
aam
inc
call
push
add
clc
popa
mov
out
adc
pop
push
pop
aam
loop
add
mov
mov
in
sub
aam
xlat
push
jnp
enter
pop
jo
dec
add
sbb
add
mov
jg
mov
add
dec
add
js
xchg
decb
pop
inc
inc
or
cli
pop
setae
add
add
sbb
jp
scas
jecxz
imul
lock
sbb
jmp
aaa
inc
inc
add
mov
lcall
jo
add
push
out
cmp
add
std
sub
add
lcall
add
sub
cmpsb
jno
add
or
cld
aam
adc
insb
jp
and
jge
inc
dec
imul
adcb
add
ret
mov
lsl
ja
ss
mov
xor
mov
decb
pop
xchg
js
stos
mov
out
xchg
jno
data16
inc
inc
popa
add
mov
test
jns
out
lret
test
stos
jp
xor
add
pop
lcall
add
cmp
je
xchg
shll
pop
jno
jmp
mov
aaa
rclb
test
inc
add
or
push
pop
xchg
pop
je
sarl
sbb
cmpb
xchg
inc
fisubrs
or
add
dec
pop
and
jmp
rcrb
mov
xchg
pop
mov
aam
push
lds
ds
add
fld1
fucom
lods
add
push
insb
inc
cwtl
stos
loope
jl
add
mov
leave
mov
inc
add
mov
sbb
mov
xor
mov
fstpt
int
adc
add
and
mov
push
xchg
aam
pop
add
test
arpl
cwtl
pop
movsb
cmpb
outsb
xor
add
dec
js
mov
jo
outsl
arpl
mov
add
add
push
cmp
ja
add
ds
push
mulb
add
sub
pop
addr16
or
adc
jnp
mov
hlt
mov
or
loopne
mov
pop
sbbb
cld
jmp
mov
mov
cltd
lods
sti
cwtl
push
xchg
lds
movsl
cmpb
loopne
aad
fdiv
in
mov
pop
lea
cmp
add
xchg
and
cld
jo
jnp
fwait
inc
add
inc
dec
cmp
mov
and
xor
jo
fisubrs
push
leave
add
int
outsb
cmp
add
fists
push
xor
jnp
sub
cmp
mov
add
add
jg
rcl
cmpsl
jne
stos
add
xor
xchg
ljmp
gs
or
and
xor
sbb
add
push
and
add
xchg
stos
lcall
sub
std
ret
add
dec
mov
cltd
mov
testl
pusha
xchg
adc
cmp
xchg
cmp
sub
idiv
add
sub
xor
add
add
add
aam
mov
loop
loopne
stos
aaa
mov
lods
push
adcl
or
jns
fcoms
leave
pop
insl
pusha
xchg
ljmp
add
aad
and
dec
sbb
nop
outsl
add
xchg
into
add
fldl
ljmp
cltd
fsubs
sbb
iret
xor
lea
jmp
xchg
cmp
ret
arpl
push
movsl
gs
xchg
inc
cmp
in
addl
popf
dec
stos
sbb
adc
addr16
add
xchg
add
arpl
pop
out
mov
pop
loopne
mov
lock
iret
sub
pop
add
or
into
ljmp
outsl
mov
sbb
cmp
cmp
xchg
arpl
jmp
add
pop
mov
mov
negb
imul
mov
lds
into
pop
pop
xchg
insb
jbe
call
lea
inc
std
mov
outsl
add
dec
mov
push
shl
xchg
add
dec
das
adc
add
lods
cli
push
pop
sarb
andl
stos
andb
mov
xor
add
call
pushf
fcompl
add
nop
add
mov
cld
in
pop
rorb
mulb
clc
mov
insb
xchg
jge
push
inc
mov
add
inc
xchg
push
out
cwtl
je
inc
sbbb
ret
jge
mov
fildl
mov
into
push
sbb
or
xor
rcll
dec
lahf
fmull
ljmp
pushf
loopne
adc
jns
cmp
sbb
into
add
cmp
lea
pushf
add
jno,pn
lcall
adc
or
inc
add
inc
xchg
popa
jl
mov
adc
lret
pusha
mov
sbb
xorb
sub
pop
lds
xorb
sub
es
loopne
push
and
push
mov
lahf
popf
jne
sbb
push
sbb
repnz
loop
add
stos
incb
mov
arpl
add
dec
sahf
fdivrp
cwtl
cmp
add
daa
and
pusha
int
add
leave
xchg
ret
ret
cmp
nop
jp
les
or
cmp
xchg
addl
push
pop
jmp
loopne
gs
and
mov
inc
inc
out
add
fmuls
out
mov
jo
imul
jbe
mov
push
rclb
cmpsb
sbb
jo
incl
and
mov
add
inc
xchg
movsl
add
add
out
dec
add
jnp
movsb
outsb
mov
lcall
add
addr16
aad
push
and
add
inc
insl
test
rclb
sub
mov
inc
push
ss
sub
jae
xorl
or
mov
cmc
or
cmovle
mov
add
or
scas
addr16
lods
adc
mov
ret
sub
loopne
xor
and
repnz
and
add
scas
mov
add
cmp
inc
and
push
jecxz
jb
add
inc
mov
sbb
mov
jns
xchg
sub
push
adc
adc
cwtl
inc
adc
xchg
add
inc
push
test
add
sub
lds
leave
sbb
test
add
movsb
out
cld
cmove
jmp
and
push
dec
sub
imulb
int
pop
dec
in
or
ficoml
mov
fisttpll
cmp
cmp
loop
push
jmp
in
dec
dec
lock
insl
xor
fwait
mov
push
test
cli
inc
lret
std
jp
sbb
mov
jo
test
rolb
daa
inc
into
fcoml
in
sub
mov
pop
add
arpl
leave
loop
mov
or
xchg
and
jge
add
pop
xchg
push
lods
sub
addb
lret
loope
jge
dec
filds
andl
out
jg
mov
push
aas
lea
jl
mov
ja
mov
and
cltd
cmpsb
sarb
pop
pop
mov
jmp
mov
jg
lahf
pop
dec
rcrb
xor
sub
cmp
lret
in
jmp
adc
push
inc
add
sub
and
in
cmp
and
xchg
out
add
push
orb
stos
add
jle
xor
mov
sub
outsb
fldl
imul
fiaddl
mov
aas
cmp
xchg
or
pop
add
repz
xchg
ret
pop
add
scas
inc
push
inc
push
sbb
addr16
aas
shl
inc
pop
add
adc
and
mov
jp
loopne
inc
stos
add
into
inc
cwtl
mov
sub
inc
or
mov
and
mov
mov
decb
popl
outsb
call
insb
pop
cmp
add
sarl
push
test
pop
lret
bound
or
out
aad
cs
stos
and
pop
inc
roll
in
scas
push
jl
xor
dec
inc
xchg
fsts
pop
add
mov
xchg
mov
mov
shl
add
xor
sub
sbb
in
dec
es
inc
rolb
jmp
les
mov
adcb
inc
add
mov
jecxz
lcall
or
or
cmp
popf
ret
pop
jno
xchg
add
movsb
cmc
movsl
mov
mov
lret
mov
add
pop
aaa
mov
jecxz
jnp
movsb
inc
dec
lea
je
xchg
icebp
cs
add
xchg
std
leave
add
xchg
lods
clc
test
add
pop
mov
shlb
enter
clc
dec
es
add
insl
dec
mov
scas
push
mov
ret
lcall
add
mov
add
int3
mov
cmp
fidivrs
jns
mov
mov
push
out
add
or
push
lock
adc
aas
loopne
mov
add
mov
les
add
dec
pop
das
xor
pop
jp
pop
loope
fadds
icebp
jle
test
out
push
add
push
cmp
add
jb
add
std
mov
add
add
leave
add
xchg
sbb
mov
add
jnp
mov
pusha
jg
lods
xor
inc
add
xor
cmovs
ficompl
sub
outsb
inc
add
mov
js
imul
stos
pusha
ret
imull
cmp
es
xchg
ret
call
sti
sbb
aaa
cmp
dec
in
arpl
pop
xor
pop
add
in
add
or
cmpl
mov
fldenv
shl
mov
xchg
mov
pop
cli
shr
ficoml
add
lahf
jae
ds
add
push
out
lea
push
inc
and
adc
cmpsl
testl
xchg
scas
pop
pop
sub
cltd
enter
pop
mov
dec
roll
jle
xchg
insl
mov
xchg
add
fyl2xp1
xorl
pop
cltd
sbb
add
cmp
and
outsl
sbb
and
add
movsb
xor
rorl
sub
add
lock
arpl
lret
and
ds
jle
mov
xchg
inc
mov
cmp
lea
sub
inc
jb
stc
and
lret
mov
xchg
cmp
test
out
je
je
add
scas
repnz
mov
ja
lds
cmpl
xchg
pop
icebp
out
ror
les
jns
gs
rcl
mov
pusha
dec
loopne
popf
xor
jecxz
push
stc
push
add
xor
jmp
movsb
xchg
sbb
mov
lock
clc
add
int3
in
push
xchg
cs
mov
roll
pop
iret
or
addr16
rorb
xor
shrl
push
mov
xorl
out
and
pop
adc
test
sub
and
mov
fisttps
fmull
loope
add
lret
loopne
pushf
shlb
sbbl
adc
pop
outsl
fs
lods
xchg
lock
test
jle
push
mov
fildl
mov
ljmp
xchg
es
push
and
sbb
shr
cwtl
arpl
jns
xlat
mov
dec
cmpsl
add
pushf
arpl
add
sub
add
fistps
sub
loop
add
aam
lds
mov
test
add
imul
mov
inc
push
xlat
popl
xchg
lods
adc
les
pop
add
notl
stos
pop
jl
js
xor
fcoms
add
lock
add
dec
mov
xchg
lret
sub
es
xchg
add
std
and
mov
repnz
insl
mov
add
sub
add
mov
pop
add
push
mov
test
addb
sub
repz
inc
js
and
pop
mov
fsub
add
sbb
lahf
add
or
jp
je
add
imul
cli
mov
popf
insb
add
sarb
cmp
fdivs
xchg
mov
sbb
jae
push
adc
mov
cli
rolb
shlb
jbe
add
test
add
add
add
repz
add
jb
xchg
sahf
negb
mov
sub
arpl
insl
xchg
in
daa
mov
jmp
add
call
sbb
mov
rclb
mov
pop
lods
insl
add
add
aad
xor
pop
or
lea
or
push
cli
cmp
loope
insl
add
xchg
pushf
fs
roll
aas
hlt
push
ljmp
pop
std
jo
sti
or
mov
sub
imul
mov
outsb
lea
cmp
dec
add
lcall
jae
jp
bound
push
push
rcll
and
jle
add
cltd
jnp
aad
dec
sbb
std
add
cmp
and
ret
nop
aaa
push
add
lods
add
push
dec
fnstsw
adc
add
sub
lds
push
pop
fwait
push
in
push
cwtl
xchg
nop
rolb
mov
mov
lock
sub
fwait
pop
mov
cmp
cmp
mov
sub
or
cld
xchg
dec
pop
push
hlt
jle
loop
fnstcw
add
lret
fwait
cmp
call
enter
xchg
jge
jecxz
cmpsb
jnp
mov
adc
and
xchg
add
xchg
or
pusha
out
cmpsl
pop
fidivrl
add
pop
jge
es
out
mov
inc
and
js
add
or
in
aaa
mov
mov
clc
sbb
jno
cs
xchg
sub
mov
lods
insb
xor
mov
dec
mov
cmp
mov
sbb
pop
loopne
pop
aaa
add
inc
out
aam
icebp
inc
and
add
test
and
push
je
lcall
insb
inc
sahf
add
xacquire
dec
add
ljmp
add
leave
mov
pop
sub
ret
iret
jo
into
in
add
cmp
daa
mov
add
insb
add
psubb
xor
sbb
orb
push
dec
sub
bound
aam
in
sbb
push
inc
sbb
sbbb
sub
jmp
jl
jne
loope
cmp
push
cmp
aaa
and
shlb
pop
adc
dec
std
mov
call
jmp
imul
pusha
mov
adc
add
ja
test
xchg
loop
push
mov
idivl
pop
pop
movb
xchg
and
xchg
xor
push
rcrb
and
xchg
out
push
test
sub
add
adcl
ret
daa
adc
movsb
xchg
sbb
pop
repnz
mov
fwait
lea
mov
imul
ja
jne
add
inc
jl
mov
pop
mov
cmp
test
popf
dec
add
loopne
lods
push
ljmp
les
pop
jo
mov
arpl
pop
sbb
das
loope
adc
repnz
cwtl
jne
push
cmpsb
iret
inc
int3
scas
add
sbb
or
or
test
xchg
mov
stos
je
and
addr16
pop
sarb
ret
pusha
repnz
cs
gs
daa
and
loope
and
add
xor
cmp
sbb
add
insl
add
mov
cwtl
cmp
mov
push
scas
testb
sbb
mov
xlat
add
fmuls
pop
lea
xchg
jge
mov
or
add
testb
lock
cld
rcll
cli
xor
fisttps
xor
into
cs
fstpl
lahf
lea
jb
add
inc
jns
rclb
das
aaa
add
cmp
rcrb
or
lcall
addr16
adc
or
adc
xchg
xor
adc
mov
mov
mov
add
push
les
and
jmp
lock
add
subl
lods
pop
mov
fidivrs
and
mov
jl
ret
and
adc
sbb
sub
lret
mov
divb
lahf
add
sti
loop
inc
add
add
jg
repnz
daa
xor
or
jl
mov
sub
mov
lret
add
adc
add
loopne
mov
add
and
push
sub
orb
in
out
pop
inc
call
lcall
dec
enter
jae
and
pop
sarb
mov
cmpsb
cmp
inc
gs
movsl
adc
fisttps
in
loope
sub
dec
and
push
or
push
xchg
adc
mov
xor
jo
int3
sbb
ja
or
add
push
push
fcompl
jne
sub
pop
mov
xor
sub
adc
icebp
mov
scas
xchg
add
or
add
and
and
mov
or
pop
in
add
jno
push
arpl
or
mov
mov
ret
xchg
repnz
xchg
mov
cmp
outsw
hlt
sarb
cli
sbb
daa
jnp
mov
into
loopne
pop
cmpsl
mov
sub
adc
add
ja
sub
ret
daa
pop
out
dec
pop
in
jg
mov
adc
mov
mov
mov
enter
mov
add
shr
adc
sbb
jp
imul
int
in
sahf
push
add
inc
ss
pushf
mov
cmpl
je
xor
ss
arpl
add
jne
imul
lods
insl
and
shll
jp
sbb
loope
sbb
loopne
addb
jg
adc
std
fwait
sti
pusha
test
add
xlat
mov
mov
xchg
fcoms
lea
pusha
lds
mov
insb
setnp
sahf
cmpsb
adc
sub
cmp
aas
fwait
stos
add
inc
les
sbbb
adc
int3
in
jne
cld
orl
cmp
aas
stos
and
repnz
lcall
pop
sbb
shrl
test
loope
pop
jl
das
mov
mov
pop
aam
or
subb
out
jle
add
clc
mov
mov
negb
cld
std
jl
xor
aam
sub
das
add
cmpsb
scas
push
push
sub
out
sbb
test
faddl
push
adc
leave
lcall
test
xchg
mov
add
or
and
rcrl
cs
fcoms
push
cmp
cmp
rcrb
mov
or
pop
add
ds
nop
xlat
in
iret
stc
ljmp
andl
xchg
add
shlb
add
fwait
sub
or
add
mov
ja
jg
pop
stos
mov
test
pop
add
mov
dec
cmp
add
cmp
pop
or
inc
mov
rorb
pop
hlt
mov
or
mov
xchg
cmp
sbb
ljmp
pusha
in
scas
sub
add
add
mov
sbb
cmp
idiv
stos
push
adc
insl
add
dec
xor
add
and
repz
cmpsl
or
jge
add
fcmovnbe
dec
rolb
cmc
imul
lods
loopne
jmp
add
xchg
std
add
ljmp
dec
popa
gs
out
int3
cmp
push
movsb
inc
adc
or
aam
push
inc
call
test
sti
fwait
jmp
or
mov
jbe
jge,pt
add
scas
xchg
pop
bnd
ja
xchg
inc
add
dec
cmc
je
data16
add
mov
les
mov
dec
and
add
test
sub
or
add
popf
stc
gs
nop
sub
sbb
mov
jne
inc
add
cmc
inc
fstpt
xor
dec
sub
fbld
add
adc
shlb
add
add
cli
mov
adc
mov
add
jmp
addr16
adc
jmp
inc
mov
cltd
dec
add
mov
push
sub
mov
cmp
push
dec
outsl
inc
add
dec
popf
adc
add
rclb
add
mov
or
lret
outsl
mov
cmp
fidivl
xchg
ja
and
add
ds
and
dec
mov
mov
add
pop
mov
or
lods
sbb
call
add
adc
or
enter
std
addb
cmovnp
dec
cwtl
in
add
adc
aas
mov
push
add
mov
push
xor
jbe
jns
stos
sbb
dec
push
inc
enter
dec
cmp
or
ficoms
xor
les
adc
aam
add
cmp
pop
stos
inc
scas
adc
mov
dec
cmp
pop
sub
or
mov
inc
ja
cmp
cmpsb
sbb
mov
xor
mov
add
adc
sub
push
loop
xchg
or
jb
inc
cmp
add
xor
push
andb
mov
adc
and
pop
sbb
lea
data16
add
inc
adc
and
jb
add
xchg
or
shlb
add
mov
aad
pop
pop
inc
cs
icebp
add
cmp
popa
inc
mov
orb
xor
in
or
cmc
lods
sbb
dec
aam
mov
shlb
ret
lods
xlat
popf
fnsave
add
aam
ss
mov
mov
mov
add
pop
aad
lds
out
mov
jo
fiadds
test
inc
nop
rolb
pop
cmp
pusha
sbb
add
add
loop
mov
push
pusha
mov
clc
dec
add
mov
clc
incb
sbb
pop
nop
add
fldt
xor
jb
inc
add
sbb
insl
gs
cli
sarb
jno
lret
add
or
xchg
bnd
add
fisttps
adc
lea
in
pop
and
or
cmp
lock
jae
add
sahf
jb
add
and
aas
push
jle
or
and
subb
xchg
add
rolb
sub
add
push
icebp
in
push
in
jbe
out
mov
fwait
xchg
and
xchg
sub
ret
mov
pop
arpl
add
sbb
or
xor
loopne
fimuls
add
pop
stos
sub
or
insb
in
mov
dec
mov
jae
push
cmp
mov
xor
pop
push
ret
add
sbb
xchg
jmp
mov
add
add
pop
outsb
xor
inc
dec
jl
pop
stc
mov
xchg
das
push
inc
mov
pop
mov
push
outsl
mov
decb
add
cli
enter
add
filds
arpl
insl
sahf
shll
fldt
test
dec
stos
push
sub
add
jmp
xor
decb
add
fcmovne
call
push
cmpb
sbb
lret
cld
shl
push
movsl
aam
ljmp
add
cmp
mov
pop
add
jmp
dec
ja
aad
xor
push
ja
add
fs
aas
xchg
mov
es
outsb
adcb
mov
inc
scas
fisubrl
jmp
xchg
pop
push
pusha
hlt
push
in
test
sbb
std
hlt
icebp
add
shrl
and
addr16
cld
mov
add
push
test
xchg
mov
bound
aaa
cs
xlat
out
clc
mov
jle
inc
jnp
std
adc
xchg
scas
mov
lcall
dec
lods
pop
pop
xor
cli
subl
outsl
lock
dec
popf
add
and
cld
push
dec
pop
cli
cmp
xorb
xchg
sbb
sbb
mov
cld
cmpsb
enter
or
push
shlb
pop
dec
fildll
push
ljmp
add
jne
jp
jmp
sbb
add
push
scas
and
outsl
fmull
in
jmp
xorb
add
mov
add
xor
inc
push
add
mov
add
lods
dec
lahf
andb
add
xor
mov
add
lcall
mov
add
ja
std
cmp
sub
add
bnd
fisttpl
pop
out
push
nop
call
out
pop
add
in
push
inc
cmp
popa
in
cmp
aad
scas
adc
xor
jle
add
mull
imul
mov
popa
xchg
sarl
jo
cwtl
imulb
cmpb
jo
add
sub
mov
push
addr16
lock
dec
jne
cmp
mov
orps
add
mov
or
mov
inc
mov
divb
jle
jb
fstpl
add
pop
notl
jbe
pusha
adcb
or
iret
gs
mov
call
mov
cli
insb
jnp
ret
pop
in
idivb
in
bswap
xchg
and
ja
data16
sbb
dec
sub
xor
add
push
es
ret
push
cmp
bswap
shld
mov
int3
shlb
pop
lds
fcomps
xchg
dec
stc
sbb
push
add
xchg
push
out
xchg
add
enter
add
or
or
sahf
aas
mov
add
push
aaa
insb
fisubrs
int3
cmp
jp
xor
xchg
ret
imul
cmpl
fiadds
fs
stos
je
add
aad
cwtl
add
pop
cltd
popa
adc
lock
aam
push
jg
mov
into
or
sbb
popa
sub
sbb
stos
mov
ja
xor
mov
inc
xchg
jl
mov
mov
ret
add
shr
outsb
jle
mov
add
pop
fwait
mov
jne
ja
or
les
aam
idivl
fdivrs
pop
popf
leave
xchg
iret
fiaddl
imul
mov
cmp
movsl
fmull
popf
inc
sbb
add
or
stos
icebp
cli
sub
push
or
add
sti
cltd
mov
ror
pop
rcll
icebp
xor
test
lods
add
dec
sub
xchg
add
xor
pop
push
and
sti
iret
lock
pusha
divl
mov
pusha
scas
jg
shl
inc
mov
sub
dec
add
mov
sbb
add
out
insb
mov
mov
js
ds
xchg
xchg
cmp
cmp
lods
pop
add
nop
outsb
hlt
pop
outsl
push
add
mov
shll
add
jmp
pop
addr16
xor
cld
lock
add
cli
pop
xor
inc
add
fsub
cltd
addb
jno
push
data16
ljmp
add
jbe
and
cld
xor
add
sub
adc
or
mov
mov
xlat
pop
and
out
add
mov
push
mov
xchg
sbb
or
sbb
dec
cwtl
stos
out
cli
add
push
push
add
gs
cmp
mov
sbb
push
mov
mov
add
aas
lds
add
mov
or
ss
out
add
pusha
add
dec
mov
jae
repz
lahf
test
out
incb
les
enter
das
pusha
adc
pop
cmpsl
pushf
lock
push
xor
adcb
mov
repnz
jecxz
or
cwtl
inc
jl
sti
scas
movsb
add
mov
add
mov
jns
add
jae
sbb
rolb
cmc
push
call
pop
sub
mov
sub
dec
or
xor
or
xchg
mov
js
jo
gs
bound
lahf
sbb
mov
and
xchg
add
mov
lods
sub
out
and
inc
or
test
add
loop
lret
test
pop
sti
movsb
mov
inc
data16
pop
xchg
in
sbb
dec
mov
lods
aaa
sub
add
push
lcall
in
add
jge
dec
fstl
fs
daa
and
add
outsl
int
lret
xlat
aam
add
test
scas
add
scas
sub
add
neg
stos
mov
or
in
rcrb
add
fmuls
mov
xchg
and
push
in
cmp
add
jmp
mov
ret
popf
jge
addr16
mov
imul
or
sbb
and
sub
jne
add
mov
add
adc
ror
xor
daa
push
dec
or
jbe
jns
add
repnz
lcall
and
inc
scas
pop
sbb
dec
xor
jnp
rcpps
psubsw
mov
loopne
dec
cmpb
mov
add
pop
insl
sahf
mov
gs
addl
sub
jp
add
mov
lods
pusha
pop
jno
mov
push
jo
xchg
add
adc
jne
addb
mov
add
cmp
mov
xchg
xchg
and
fisttpll
push
add
push
xchg
add
push
xchg
sbb
cmpb
mov
test
scas
leave
jne
clc
mov
out
sbb
pop
daa
int
adc
fists
jo
pop
xor
mov
lock
sub
add
push
mov
add
cmp
bound
mov
push
push
mov
stos
xor
mov
xchg
xchg
outsb
add
push
ret
mov
je
pop
call
add
adc
clc
add
test
xchg
outsl
cmc
jns
fchs
xchg
add
mov
in
xor
sub
bound
mov
ja,pt
andb
test
push
repnz
jmp
mov
sub
in
or
in
fnstsw
cmpsl
aad
arpl
into
fsubl
aas
and
add
addr16
pop
push
dec
les
push
cmp
jge
outsl
add
int
and
push
fcmove
cmpsb
cs
orb
pop
lea
fwait
add
lods
pushf
add
scas
pop
mov
fisttpl
jae
jecxz
sub
pop
cli
pop
push
mov
aaa
pushf
sbb
fnstcw
push
xchg
jns
mov
pop
aad
ss
out
add
cmp
pop
sbb
dec
faddl
inc
xor
test
xor
out
ds
testl
sti
add
test
add
stos
cwtl
cwtl
notb
jecxz
xor
add
push
idivb
rolb
movsb
cmc
sub
into
enter
push
pop
pusha
andb
pop
es
add
pushf
or
add
xchg
mov
and
into
inc
pop
pop
insl
lods
add
ffreep
cmc
add
jnp
fs
imul
jge
cmp
mov
adc
je
jnp
add
fmulp
add
pop
lock
in
fadds
push
enter
std
sbb
sub
mov
adc
cmpb
add
cli
mov
and
pusha
lea
push
sbb
faddp
jp
cmpsb
dec
push
adc
add
push
lahf
out
add
fdiv
ret
mov
push
pop
or
dec
es
xchg
shrb
int3
insl
jbe
inc
test
adc
dec
stos
add
in
pop
loop
add
dec
add
pop
pusha
aad
push
cmp
pusha
xchg
stc
mov
add
sub
cmpsl
cmp
clc
cmp
les
add
lock
pusha
leave
testl
scas
cmp
add
fidivrl
sub
add
push
sti
adc
lock
add
loopne
push
lds
add
repnz
fdivrs
push
add
jbe,pn
cmpb
lock
xlat
mov
adc
call
add
subl
sub
add
mov
push
add
std
inc
inc
and
add
inc
clc
pop
pop
push
insl
mov
cmp
mov
popa
xchg
adc
add
sub
lds
nop
jbe
sub
sub
add
jo
leave
add
in
mov
add
out
ret
adc
flds
sahf
insl
pop
notl
mov
stos
mov
or
je
mov
lea
jae
add
add
les
mov
fistpll
add
call
repnz
jg
cli
sub
shlb
dec
cld
fsub
dec
aam
test
cmpsb
dec
mov
push
add
loop
add
sbb
jecxz
pop
movsb
imul
pop
int3
xchg
pop
dec
sub
push
adc
aam
add
xor
icebp
sbb
add
xchg
insl
mov
pmaxsw
cltd
mov
cmp
pop
pop
push
add
jecxz
test
mov
and
push
aam
add
sbb
add
jge
js
roll
jmp
push
loopne
or
add
mov
popa
add
pop
ret
cmp
dec
sbb
push
je
mov
jae
and
insb
es
bound
xchg
scas
push
adc
lret
dec
mov
in
mov
adc
sbb
inc
push
loop
in
divb
es
je
add
mov
add
stos
pop
cmp
or
adc
fdivrs
xchg
cmp
push
mov
addl
jne
mov
add
add
and
jle
sar
imul
dec
inc
rcr
add
sub
int
jae
add
dec
sub
pop
sbb
adc
fnstenv
add
dec
repz
dec
pop
add
jo
sbb
mov
push
and
imul
push
gs
jne
add
cmpsl
push
out
push
jne
add
xchg
sbbl
cwtl
ret
sub
or
testb
out
repnz
or
jo
popa
out
cmp
mov
popf
push
inc
ret
and
in
aad
xlat
daa
shlb
mov
jmp
jle
les
mov
flds
shrb
mov
jnp
add
pop
add
call
in
add
rcrl
or
add
inc
or
add
xchg
mov
cmp
jecxz
xchg
dec
fiaddl
push
mov
neg
xchg
sar
popf
or
into
inc
cmc
fdiv
aas
stos
stc
mov
push
shll
pop
jg,pn
mov
adc
jge
ljmp
jmp
adc
orb
ret
add
adc
mov
pusha
roll
xor
add
jbe
sub
scas
inc
aam
clc
xor
je
mov
inc
cmp
fldl
or
popf
cmpb
cmp
hlt
pop
xchg
sub
loopne
fdivrl
ja
scas
fs
xchg
iret
rolb
add
pop
jbe
dec
lods
icebp
add
sbb
push
mov
or
cmp
xchg
lods
stc
mov
mov
cmp
pop
je
add
int3
xchg
mov
add
cltd
pop
lret
imul
or
fwait
in
loope
sbb
pusha
je
mov
mov
jecxz
lret
sarb
mov
imul
jl
add
lods
lcall
in
ret
sar
dec
add
pop
sbb
mov
mov
cmp
iret
test
adc
push
arpl
leave
lret
lds
test
mov
testl
pop
mov
ud1
shrl
adc
jmp
clc
add
jbe
add
dec
call
cmpl
mov
add
cmpsl
jns
add
adc
inc
add
dec
rcrb
mov
mov
add
stc
push
rcrl
add
cmp
adc
cli
mov
repz
push
pop
pop
xorb
int
mov
push
bound
push
xchg
test
outsl
mov
mov
mov
negl
xchg
xchg
fcmovnu
push
jg
xchg
call
adc
inc
wrssd
mov
pop
mov
dec
add
xor
add
add
cmpb
jae
mov
inc
aaa
add
ss
jbe
pop
cwtl
add
nop
int
inc
sbb
pop
aas
or
orb
daa
jno
jle
add
js
jmp
mov
into
xchg
jo
aaa
push
cld
jge
mov
inc
fstps
add
lds
cmp
mov
jle
stc
pop
mov
add
jl
invd
dec
je
add
push
and
dec
xchg
add
sbb
fdivrl
jns
add
sbbb
jmp
frstor
int
sbb
mov
bound
decl
inc
cmp
and
imul
sub
jno
dec
push
rolb
and
and
add
jmp
jecxz
insb
jnp
xor
outsb
sub
ljmp
add
scas
leave
lcall
les
mov
mov
inc
imul
sub
push
add
mov
ja
cmp
or
scas
mov
add
popf
jne
mov
adc
push
push
lds
add
pop
scas
shl
cmp
pop
add
rclb
jg
add
xacquire
lcall
mov
cmc
out
add
cmp
jecxz
insl
add
push
sub
test
xor
add
xor
outsl
lods
add
into
loope
jb
sbb
sub
aas
mov
jns
pop
cmpsl
daa
sbb
sbb
lock
mov
inc
add
xor
test
add
insb
push
mov
enter
and
out
bsf
lret
add
mov
insb
out
loope
leave
inc
add
sub
mov
mov
xlat
pop
pop
aam
jmp
or
cmpb
inc
mov
inc
rcll
outsb
imul
or
add
call
xchg
add
mov
or
stos
cs
push
sbb
push
fucomip
jg
mov
push
and
outsb
test
les
mov
dec
add
cmp
ja
jle
jmp
lock
js
add
mov
jo
sbb
outsl
add
cwtl
loop
int
jge
pop
push
addr16
lret
push
filds
mov
jecxz
repnz
into
mov
adc
movsl
out
dec
xchg
movsb
test
daa
add
or
push
roll
sub
push
add
das
cmp
aam
icebp
mov
cmpl
test
and
lods
jge
icebp
hlt
and
cmc
test
add
mov
loopne
dec
or
sub
pop
push
int
pshufw
fsubr
das
adc
xchg
add
ljmp
add
in
lea
fnstsw
add
jbe
or
call
add
mov
jb
or
add
dec
sbb
jne
movd
lods
sub
pop
xchg
adc
lods
add
cltd
sarl
shr
pusha
call
mov
sub
daa
push
push
addl
ljmp
in
add
jge
cmp
cltd
sub
mov
dec
jp
xor
lock
add
lods
js
add
lret
into
or
or
pushf
xor
mul
out
xchg
add
out
xor
ror
add
dec
push
stos
je
popl
outsl
add
repz
mov
in
mov
scas
and
sahf
std
dec
add
adc
mov
and
roll
jle
cmp
add
mov
pushf
sbbb
fsub
jecxz
pop
movsb
mov
or
cli
mov
je
sti
add
sbb
roll
outsb
sbb
pop
int3
push
mov
popl
xor
push
popa
mov
push
xchg
outsb
bound
lcall
clc
arpl
add
push
dec
xor
push
aam
mov
add
dec
lods
xor
add
fmuls
cmp
in
xlat
daa
inc
sbb
push
sub
push
addb
xor
scas
lahf
and
outsl
ret
pop
mov
add
lods
jmp
mov
add
xor
add
sub
and
push
rcrb
ja
sbb
add
mov
shlb
in
mov
pop
negb
add
mov
inc
sbb
pop
inc
jg
cs
jo
aaa
test
xor
test
mov
sbb
xor
inc
add
add
repz
cmpsl
lret
gs
xor
dec
std
test
add
dec
enter
daa
add
movsl
imul
insl
scas
out
add
pop
leave
cmpsb
inc
jbe
sub
and
lahf
ja
fisttpll
add
lods
mov
inc
add
pop
mov
add
fcompl
call
in
add
loopne
jo
add
icebp
roll
addr16
fwait
or
data16
ret
cmp
add
adc
mov
xchg
add
cltd
sub
std
jl
nop
fwait
das
test
daa
in
scas
add
arpl
xchg
pop
lcall
mov
cmp
aam
lea
xor
cmp
bound
pop
popa
cmp
add
jnp
dec
xchg
pop
mov
fisttps
add
lret
test
hlt
icebp
push
add
pop
add
test
mov
inc
stos
add
gs
dec
jmp
jp
jbe
cltd
fistl
and
mov
dec
shlb
adc
leave
divb
imul
daa
inc
loopne
push
ror
jo
dec
and
pop
movsl
aad
push
cmpsl
lods
cmp
mov
pop
loope
int3
pop
pop
dec
les
inc
pop
sub
mov
inc
popf
jno
sub
mov
mov
stos
xor
pop
add
mov
cwtl
add
sbb
push
adc
scas
fincstp
xor
pusha
add
and
inc
jbe
popf
add
aas
fistl
lcall
dec
into
shrb
incb
daa
sbb
push
ret
sub
mov
xchg
mov
xchg
call
pushl
adc
add
test
sbb
fs
ja
push
add
push
pushl
pop
sbb
push
add
add
xorl
and
mov
out
sub
pop
lcall
cmp
dec
sub
int
gs
xor
cld
or
or
outsb
and
sarb
jae
add
shll
add
mov
or
cmc
in
add
fwait
push
and
imul
xor
dec
fisubrl
je
scas
mov
sub
mov
wrmsr
or
arpl
mov
movl
inc
lock
pop
sbb
jl
and
inc
out
test
es
lock
mov
in
out
cwtl
add
pop
repnz
in
xor
pop
enter
sub
pop
xor
inc
ja
jle
enter
adc
movsb
pop
in
cmp
mov
mov
push
cmp
add
dec
mov
lock
ds
adc
sbb
xchg
push
movsl
sbb
imul
mov
mov
into
pusha
and
or
push
push
sti
out
mov
inc
add
add
orb
add
xchg
jecxz
fs
xorl
sub
sti
adc
mov
sub
push
sbb
xchg
mov
loope
add
stc
ret
shlb
iret
inc
pop
je
dec
flds
push
and
sti
pop
jae
jmp
inc
push
jecxz
push
in
imulb
insl
push
stc
sahf
imul
cli
pop
jae
scas
shlb
jg
pop
int3
nop
xchg
cmpsl
sbb
out
cmp
in
mov
aam
xor
ret
add
dec
stos
addb
mov
lahf
loop
mov
out
xchg
cwtl
add
fistpll
jg
push
pop
xchg
arpl
pusha
aad
subl
out
fadds
int3
add
push
insl
decb
pop
stos
cwtl
jmp
inc
cmp
xor
mov
jmp
cs
shrb
add
gs
repz
mov
call
jl
mov
test
mov
dec
aaa
out
mov
incl
adc
pop
cmpsb
into
loope
scas
pop
lcall
out
mov
nop
int
rorb
icebp
data16
sub
dec
add
dec
in
push
jmp
mov
inc
mov
cltd
shlb
ja
add
jbe
jge
sbb
loop
adc
add
scas
call
add
adc
stc
shl
daa
or
xor
add
dec
push
cld
sbb
in
and
dec
sbbl
rolb
mov
mov
add
jmp
sub
fidivs
push
add
popfw
xor
mov
bound
mov
sbb
add
push
push
lea
cmpl
imul
stos
dec
loopne
cltd
or
mov
inc
jg
jge
push
add
test
mov
or
inc
into
cmp
andl
aaa
fiadds
sbb
sbb
shr
loop
fsubs
mov
add
mov
cmpsl
add
mov
ljmp
add
mov
lahf
mov
push
xchg
mov
in
inc
xchg
stc
pop
iret
add
cmpb
rorl
sahf
jp
inc
add
sub
imul
shr
jmp
push
mov
xchg
out
and
cmp
enter
lods
lahf
add
cltd
js
xchg
loope
andb
iret
out
add
and
inc
icebp
mov
and
std
fnstsw
dec
stc
js
mov
int
call
jo
inc
cwtl
lret
xor
jns
lods
pop
rorb
mov
pop
cmc
cld
adc
add
xchg
mov
stos
xor
subb
das
add
fists
imul
adc
pusha
nop
mov
mov
push
jno
mov
cmpsl
daa
jae
xchg
add
add
or
cld
adc
add
and
in
push
add
jnp
push
push
adcb
ljmp
andb
hlt
imul
add
sub
ds
mov
outsl
loope
jg
sahf
jmp
mov
sbb
es
push
pop
add
or
popa
or
add
and
repz
push
outsl
je
push
loope
pusha
xchg
imul
cmp
lret
sahf
scas
out
repnz
push
nop
mov
mov
pop
fistps
ret
add
movsl
ja
sub
cmove
xor
push
or
mov
aam
imul
fldcw
add
sub
push
inc
add
mov
jge
push
cli
xchg
add
loope
outsl
push
push
dec
rolb
sti
cmp
mov
mov
jp
xchg
shlb
jns
sub
add
mov
movsb
add
ds
or
test
loop
roll
inc
push
jecxz
ljmp
js
mov
aam
push
add
ja
lret
add
in
fnstcw
loop
add
out
popf
incl
xchg
js
jg
jns
cwtl
cwtl
stc
les
mov
mov
add
sub
xor
movsb
loope
das
roll
inc
leave
dec
add
mov
sbb
jb
call
sub
jge
mov
inc
jmp
das
stos
add
cmp
repz
inc
jnp
data16
nop
jp
add
scas
jne
fsubp
aam
cld
add
ss
mov
add
or
add
shrb
mov
lcall
fwait
cmp
sub
mov
aas
mov
add
popl
ds
cs
fildl
clc
in
out
jo
add
fwait
mov
cmpsb
push
loopne
pop
test
adc
ljmp
push
lods
pushf
imul
sub
add
fnstenv
cmpsl
pop
insb
in
adc
lods
mov
mov
sub
test
xchg
dec
add
nop
scas
fadds
in
insb
mov
add
test
sbb
sbb
adc
ja
sbb
hlt
ret
inc
and
lahf
aam
sahf
movntps
ljmp
dec
push
or
or
dec
xchg
aam
sub
rcrb
cmp
imul
jno
mov
inc
pushf
push
lock
xchg
sub
add
iret
add
or
mov
ja
add
xor
out
and
pop
stc
loope
fcoms
jb
jle
cwtl
xchg
dec
sbb
jo
aaa
mov
inc
pop
nop
add
pop
push
push
add
mov
jo
insb
cwtl
mov
rorl
into
push
loopne
mov
jmp
xchg
dec
mov
add
fisubrs
or
xchg
and
xlat
repz
loopne
add
ljmp
add
sbbl
and
jbe
inc
mov
mov
add
lea
les
out
add
daa
outsb
sbb
test
add
jmp
lretw
test
add
pop
xor
sub
add
mov
add
pushf
jo
add
sbb
stc
ficoms
push
outsl
inc
lods
addb
add
lahf
bound
jae
xchg
mov
enter
fsub
ret
shrb
xchg
jnp
les
loope
arpl
cmp
push
in
jns
push
sbb
xor
int3
jmp
call
mov
cld
sbb
mov
sub
cmp
mov
sbb
imul
and
add
xor
jns
pop
loope
scas
addr16
xor
add
ficoms
push
sbb
mov
add
add
testb
jae
dec
jns
push
sub
in
jnp
lock
lahf
mov
int
push
loopne
scas
mov
jns
inc
cmpsb
roll
fsubrl
or
add
popf
mov
cmp
rcr
outsl
cmp
push
sub
or
loopne
comiss
clc
lea
faddl
loopne
shlb
pop
mov
push
mov
cmp
incb
cmp
cli
fs
adc
mov
dec
loopne
test
je
add
push
jg
add
mov
mov
xchg
test
sti
fldenv
jge
adc
dec
xor
and
add
imul
ret
xchg
cmpl
dec
mov
jecxz
notl
test
xchg
inc
pop
jle
cmpl
xor
scas
dec
idivl
cmp
add
loop
pop
mov
push
mov
fiadds
mov
and
je
pop
pop
pop
push
std
out
fwait
adc
dec
cmovb
sbb
mov
adc
add
xchg
dec
mov
push
lcall
mov
cwtl
stc
add
push
push
bound
testl
jg
sbb
add
leave
mov
and
fisttpl
imul
mov
test
adc
xchg
jp
mov
push
xor
pop
add
xchg
mov
jge
or
ja
gs
cmp
cmpsb
test
daa
add
rol
mov
push
push
popf
mov
pop
test
out
sbb
lea
jl
cwtl
inc
inc
std
push
outsl
iret
call
cli
mov
add
loop
lods
inc
pop
inc
out
call
icebp
lret
or
push
add
mov
push
push
mov
negb
push
pop
xchg
adcl
lods
mov
jmp
add
lock
outsb
test
or
cmp
jl
add
inc
es
adcl
pusha
mov
sarb
mov
out
xchg
sti
clc
repz
xchg
or
or
dec
pop
roll
pop
sub
addr16
adc
iret
xor
add
push
out
ss
add
icebp
cmp
xor
loopne
adcl
es
jmp
dec
xchg
fldcw
je
inc
sbb
fbld
adc
ret
push
inc
jns,pt
fsubl
push
adc
push
xlat
jge
add
mov
push
nop
jecxz
mov
addr16
push
cltd
add
adc
mov
inc
or
icebp
pop
idiv
add
cmp
sbb
dec
sar
pop
jl
es
shll
and
out
dec
in
js
add
or
fiadds
mov
add
into
cmp
lret
fcoms
inc
les
pop
dec
mov
mov
rolb
and
cmc
test
mov
add
xor
movl
test
cmp
scas
insl
int3
add
leave
jns
in
hlt
mov
popf
loopne
and
sbb
add
shr
lahf
ljmp
fstpl
mov
pop
mov
mov
and
repnz
jo
jp
inc
ja
pop
jl
jg
add
adc
push
hlt
cld
dec
add
mov
add
push
lret
bound
add
das
dec
shll
mov
add
movsl
dec
inc
add
loop
or
roll
pop
aam
xchg
sbb
add
xor
lcall
xor
add
push
sbb
stos
aaa
mov
adc
in
jns
ja
adc
inc
inc
stos
sbb
sbb
mov
je
add
push
xchg
jo
js
in
fildl
test
cmp
xchg
cmp
add
adc
pop
add
xor
add
aas
xor
inc
xchg
xor
hlt
inc
pop
cmp
addb
ja
adc
sbbb
nop
or
add
out
aad
cmp
out
cmp
iret
cmp
dec
push
pusha
add
hlt
fwait
jg
add
cmpsb
pop
adc
cmp
adc
into
jl
add
and
daa
ss
loopne
jno
adc
fmull
repnz
popa
pop
pop
cmp
in
add
enter
cmpsl
add
inc
jmp
sub
or
adc
loopne
fildll
sbb
mov
sub
inc
stos
mov
cmpsb
add
and
jl
popf
not
out
add
ss
dec
and
loopne
add
push
sbb
repz
lods
add
std
stc
fsubl
or
xor
add
in
fadd
and
add
sbb
jge
cmp
add
arpl
enter
pushf
mov
push
jp
cs
mov
lods
dec
cltd
aam
add
push
incb
jno
sbb
jbe
mov
sbb
mov
xchg
pop
xor
inc
fimull
in
and
and
popa
sbb
push
scas
nop
mov
hlt
dec
out
in
addb
jmp
out
sar
pop
adc
lds
jge
popa
stc
lock
pop
add
or
lret
icebp
loope
cmp
cmp
add
jb
arpl
xor
mov
pop
fiaddl
inc
pop
inc
jp
push
jge
ret
adcb
aas
test
in
xor
insb
xor
add
scas
dec
fwait
sub
fcomps
mov
cmpsl
add
cmp
pusha
into
adc
call
test
std
mov
xchg
add
sub
and
lret
adc
rolb
cmpsl
add
hlt
cmpb
test
sbb
out
jo
in
dec
cmp
add
add
cs
leave
add
and
or
lret
in
in
sbb
sub
cmp
xchg
loope
push
adc
inc
jle
cmp
sbb
mov
mov
inc
pushw
mov
les
lods
xor
loop
push
add
pop
lods
xchg
stos
push
in
stos
mov
clc
and
pop
popa
add
roll
xor
lea
add
arpl
ja
mov
adc
xchg
xor
push
push
add
or
aam
xchg
add
mov
in
repnz
jne
mov
mov
sbb
mov
cmp
pop
mov
mov
fisubs
std
adc
aas
add
arpl
mov
lds
cmp
scas
nop
es
mov
test
mov
mov
push
mov
add
mov
vmread
sub
jl
sub
mov
cmp
pop
add
xchg
sub
cmpsb
add
xchg
xchg
shl
test
movb
nop
push
dec
pushf
or
icebp
adc
ljmp
xor
push
flds
lcall
loopne
mov
adc
test
add
adc
pop
fs
ljmp
dec
lret
mov
dec
pop
leave
inc
xor
into
addr16
aas
sbb
push
fstl
sbb
add
iret
loop
sub
inc
add
or
jno
add
sbb
add
cmp
pop
pop
add
or
aad
dec
fcmovnb
mov
cld
cmpsl
add
xor
jnp
ja
add
in
pop
and
add
inc
inc
push
jg
iret
mov
pop
xor
aaa
pushf
movsb
mov
addb
sub
add
mov
hlt
adc
popa
shrb
movsb
xor
fdivl
xor
test
icebp
dec
add
repnz
lea
leave
out
movb
call
fs
loope
sbb
add
mov
jo
xor
pop
sub
or
xchg
nop
sbb
lahf
or
fwait
out
add
xor
cli
test
pop
cmc
insb
sub
push
jl
je
and
mov
not
add
call
add
leave
add
fwait
imul
pop
stos
out
lret
cmpsb
mov
and
pop
push
nop
push
push
inc
jp
or
xor
mov
test
mov
and
jecxz
xchg
in
mov
add
inc
ljmp
addr16
mov
sbb
sub
inc
mov
repnz
pop
inc
xchg
add
dec
sbb
jecxz
add
push
jne
add
out
ret
and
rolb
loopne
ret
clc
popl
je
inc
pushf
jp
push
sahf
jb
pop
test
iret
loopne
std
adc
sbb
movsb
subb
in
cmp
jmp
or
mov
xchg
out
xchg
push
push
mov
sahf
jg
in
into
mov
add
dec
sti
xor
jge
add
add
jne
in
jp
popa
cs
scas
jo
fwait
iret
add
sbb
outsb
clc
push
hlt
loop
cwtl
aas
lret
mov
addb
js
dec
lret
lea
mov
pop
pop
bound
stc
jo
cmp
sbb
jg
mov
mov
add
jmp
adc
add
pop
pop
mov
in
and
mov
add
inc
add
mov
pop
pop
mov
cmp
xorb
sahf
sbb
imul
mov
mov
movb
xchg
loopne
lcall
push
push
jmp
mov
lea
mov
lcall
rol
and
add
aaa
rolb
sbb
popf
sub
mov
mov
mov
inc
cli
xchg
sub
xlat
adc
fs
les
insl
and
pop
push
bound
dec
stc
dec
pop
fistps
xor
insl
add
mov
aam
test
and
adc
ror
mov
add
movsb
stc
or
popa
dec
stc
lret
clc
mov
out
mov
lods
jmp
adc
cmp
test
in
xchg
enter
insl
xchg
cmc
xchg
mov
xchg
jbe
cld
push
ja
dec
jge
push
push
les
fs
mov
add
jl
ret
outsl
add
xchg
mov
dec
jmp
pop
mov
pushf
mov
xor
lds
add
inc
mov
fimuls
pop
fmuls
fsts
adc
imul
add
jae
nop
mov
cmp
inc
lods
ja
mov
subl
pop
or
test
popl
ret
lock
mov
add
push
fidivl
push
sub
push
rolb
add
add
insl
jge
add
insb
nop
mov
fistpll
mov
in
movb
push
pushl
sub
and
and
dec
loopne
jo
cmc
adc
add
add
sbb
xchg
fists
lock
mov
ss
inc
mov
push
shrl
outsl
aaa
sbb
add
rclb
or
rclb
pop
jo
loopne
sbb
dec
and
add
inc
lods
or
lahf
mov
sbb
subl
stc
mov
or
mov
pushf
js
inc
inc
lahf
push
cld
add
mov
xor
xchg
adc
jne
cmpsl
call
mov
add
popw
adc
lea
clc
adc
hlt
xchg
cli
add
std
add
imul
ret
mov
xchg
and
cmp
xchg
ret
adc
fnstsw
add
sbb
ficomps
pop
adc
add
sub
cltd
mov
add
pop
pop
sarl
or
mov
mov
xchg
jnp
ja
cmpb
leave
sub
inc
stos
movsl
add
lods
aam
je
lock
adc
and
cmp
pop
test
stos
cmp
mov
pop
mov
iret
jno
insb
leave
out
jb
dec
cmp
sbb
add
mov
les
jecxz
popf
xchg
cmp
repz
cwtl
ljmp
shlb
lret
mov
push
add
in
pop
xor
call
loop
sbbl
add
mov
inc
cs
int
add
aas
push
push
add
in
stos
jns
lea
mov
mov
pop
and
or
xchg
jae
into
aam
lea
pop
dec
dec
stos
imul
pop
push
adc
aaa
mov
jns
add
or
and
push
testb
orb
insl
sbb
out
jmp
add
add
outsl
xchg
pop
mov
mov
nop
stos
add
fsubrs
jbe
push
mov
xchg
rcrw
jp
add
pop
pinsrw
and
cmp
ljmp
int
dec
inc
sub
into
inc
testl
xchg
mov
jbe
in
push
nop
jg
xchg
imul
xchg
xor
test
ja
add
test
push
add
mov
pop
add
popa
mov
adc
ss
sbb
mov
pop
icebp
sbb
pop
cmp
les
dec
negb
add
mov
mov
adc
inc
or
cmp
jnp
add
dec
lock
cmp
sbb
add
and
stos
jp
add
fiaddl
jb
jnp
int
adc
je
add
leave
scas
mov
jb
into
idivl
inc
jno
int
xchg
insb
jp
cwtl
hlt
aad
add
sub
gs
in
pop
sub
cmpsb
icebp
push
out
push
jb
xchg
sarl
les
cmp
push
pop
lock
incl
mov
addl
and
mov
rorb
xor
push
add
adc
mov
clc
leave
mov
sbb
mov
mov
insb
int3
add
xor
add
or
inc
scas
pop
inc
push
mov
mov
jmp
add
inc
test
pop
mov
and
sbb
add
lods
das
ficompl
add
pop
pop
cmp
mov
lock
ffreep
add
test
inc
add
addr16
and
inc
jo
imul
out
clc
popl
add
mov
cld
mov
jnp
jae
dec
pop
or
xchg
sbb
jo
xor
jne
adc
out
add
sbbb
jl
insl
add
lods
clc
cmp
stc
mov
dec
jge
mov
aaa
sarl
push
data16
pop
add
frstor
cli
add
mov
outsb
add
or
or
jmp
add
ret
and
aas
in
mov
int3
sub
popa
lcall
add
test
daa
add
mov
add
cmp
and
and
mov
js
add
jnp
cmp
push
outsl
cs
arpl
xchg
into
xlat
push
add
ret
or
xchg
sbb
mov
inc
loop
adc
add
fs
in
inc
sbbl
add
in
maxps
add
xchg
add
shrb
shrb
fildl
cmp
testb
add
lahf
jge
fcoml
stc
out
paddsw
pop
cmp
mov
aad
cmc
lea
std
sub
cwtl
xchg
jns
mov
mov
or
add
insl
dec
xlat
sbb
xchg
inc
mov
dec
xchg
push
in
addb
adc
je
or
enter
sbb
fidivl
cs
pusha
data16
mov
pop
mov
lret
inc
fcoms
inc
shlb
and
inc
cmpsb
add
add
sahf
je
cmp
rcrb
jmp
add
and
push
pop
add
hlt
dec
ja
mov
cmp
test
push
lods
ror
push
jl
dec
lock
rcrb
jmp
andb
jns
add
cmp
or
sub
and
fmull
push
insb
add
mov
xchg
les
mov
pop
shll
or
and
into
lret
add
pop
or
add
mov
mov
mov
js
rcrb
add
xlat
add
xchg
pop
mov
inc
fstps
add
mov
test
loop
mov
or
pop
in
repnz
lock
lret
mov
add
bound
test
xchg
adc
add
xchg
dec
mov
subb
nop
aas
iret
insl
and
or
fistpll
lcall
or
popa
lret
sub
rcpps
lcall
lret
mov
stc
or
aas
jecxz
add
cmp
cmp
and
cmp
push
lret
insl
xor
pop
add
push
dec
mov
add
cmp
loope
mov
mov
cmp
orb
inc
mov
mov
mov
int3
xor
aam
push
xchg
jp
sahf
pop
dec
decl
add
in
jb
mov
add
clc
rcr
js
adc
jo
push
jmp
lods
pop
incb
ds
sub
fcomip
dec
jo
push
push
out
add
add
scas
lods
aaa
pop
jle
adc
lock
jb
sahf
adc
out
jbe
jecxz
lds
push
icebp
test
mov
push
lcall
lock
rcrb
mov
push
mov
xorl
push
mov
xorb
iret
dec
or
pop
cmp
add
loope
cs
sub
xorb
movsb
mov
popa
and
repz
push
aaa
les
add
cld
jecxz
dec
imul
enter
cmp
cmpl
adc
notb
aad
adc
sbb
mov
cli
pop
sbb
shlb
inc
add
adcl
add
mov
add
xor
ja
pusha
into
or
mov
sbb
daa
arpl
push
lock
push
nop
jae
mov
jl
cwtl
add
push
pop
sbbl
cmpsl
pop
jmp
sti
leave
fdivrs
aam
aas
test
pop
add
mov
or
jg
negl
cmpsb
into
xorl
xchg
jle
in
add
sub
mov
sbb
add
inc
sbb
mov
adc
adc
aam
cld
xor
pop
repnz
mov
int3
or
and
pop
popa
ds
xlat
mov
into
stos
pop
cmp
roll
and
test
dec
mov
adc
add
lock
push
dec
addr16
aas
nop
xchg
dec
lret
cmp
sbb
je
cmp
push
xchg
mov
add
call
cmc
mov
jb
cmp
and
mov
add
adcl
xchg
test
pop
inc
add
dec
rcr
in
add
call
push
xor
sbb
pop
sbb
outsb
outsl
je
mov
rolb
add
out
add
js
int
sub
pop
add
mov
mov
insb
idivb
jb
inc
mov
or
faddl
jge
cmp
cmp
add
xchg
adc
adc
pop
pop
mov
bound
ret
maxps
mov
mov
popl
negb
lcall
push
push
adc
leave
dec
lea
sbb
lock
in
mov
mov
add
out
fstps
push
push
xchg
cmp
ret
add
test
add
sbb
cmp
sar
sysret
adc
mov
jle
cmp
pop
xchg
cmp
cmp
hlt
mov
add
fdivrl
xor
out
fidivl
xor
inc
dec
imul
add
jg
scas
cltd
sbb
add
jns
shlb
pop
cld
filds
movsl
inc
popf
mov
ljmp
xor
cmp
arpl
data16
cli
addb
and
icebp
jo
adc
mov
mov
add
clc
dec
xor
call
scas
fildl
xorb
jge
iret
lcall
push
mov
xchg
fisttpll
fldl
inc
iret
push
js
dec
rolb
add
adc
cmp
cwtl
addl
mov
cwtl
int
lcall
fists
mov
cmpsl
stc
add
cwtl
adcl
insb
jp
test
or
mov
loope
add
insl
pop
inc
and
xor
mov
mov
sub
ret
cs
out
ja
sub
push
inc
sub
inc
cmp
enter
sub
fcompl
imul
xchg
mov
add
loopne
add
mov
pop
stos
test
or
aam
imul
xchg
and
push
dec
and
push
jo
pushf
add
aaa
in
mov
and
rclb
add
add
imul
and
jnp
clc
int3
fidivrl
mov
mov
dec
lock
cmpsl
add
push
inc
imul
pushf
mov
mov
ret
xchg
aas
repnz
pop
cmpsl
ja
pop
adc
jl
add
cwtl
or
stos
push
sbb
sbbb
imul
repz
cmp
sub
rcrl
icebp
inc
bound
loopne
stos
jle
add
add
fsubr
inc
paddusb
jne
add
stos
cmp
dec
icebp
ja
add
pop
fisttpl
mov
gs
sub
jb
ljmp
push
dec
pushf
stos
adc
daa
pop
imul
xchg
mov
add
sahf
roll
lret
adc
xor
sub
gs
jle
pop
xchg
pop
shrl
in
jg
jno
add
leave
fistpll
dec
inc
nop
dec
mov
js
mov
push
or
xchg
jp
jne
rcrb
adc
jne
add
orl
add
std
lods
popf
ret
jmp
pop
mov
icebp
jecxz
idivb
add
rclb
fsub
xor
flds
data16
sub
sub
jb
inc
dec
add
xlat
out
loop
cwtl
dec
fs
add
not
les
insb
mov
mov
adc
jl
mov
test
ss
add
jbe
cwtl
hlt
cmp
or
shrb
add
pop
xchg
enter
dec
add
outsb
add
sbb
add
xlat
enter
in
add
sbb
cmp
repnz
add
popf
fdivp
pop
xor
add
fsub
out
in
fmuls
xlat
mov
clc
add
inc
add
push
fcoml
adc
repnz
es
out
bound
jo
mov
and
lea
add
cmp
rcrb
cmc
push
sbb
ja
movsb
add
pavgw
ds
jg
mov
add
jnp
sub
aas
loopne
mov
xchg
clc
add
pop
add
push
sbb
int
icebp
imul
adc
cmp
xchg
adc
inc
stc
pop
sbb
or
mov
cs
push
mov
pop
sahf
call
push
cmc
aam
out
add
dec
movswl
dec
js
dec
push
push
leave
add
jmp
movsb
sar
dec
int
jmp
andb
jbe
insl
add
and
jno
add
adc
add
arpl
fucom
cmpsl
pop
or
mov
nop
cwtl
mov
adc
inc
loopne
jle
add
str
inc
mov
add
sub
outsb
xchg
into
iret
testl
incb
jbe
add
in
xchg
pop
cmp
call
ret
int3
mov
movsl
or
in
fnstcw
add
repz
rclb
je
hlt
sarl
and
dec
or
xlat
popf
jl
add
mov
xor
pusha
cmp
sarl
call
cmc
adc
pop
or
add
repnz
int
out
mov
sub
leave
xchg
stos
mov
xchg
cwtl
add
jb
fwait
push
mov
mov
inc
inc
mov
pusha
pop
outsl
lahf
add
test
adc
mov
xchg
pusha
cmp
aad
cmpsb
xor
cmpsl
scas
add
and
add
fistpl
les
pop
add
mov
add
insl
aam
outsb
mov
lods
and
cmp
std
mov
pop
out
mov
adc
lahf
decl
out
sub
adc
je
out
cmp
lods
push
in
sub
add
push
mov
mov
add
or
addr16
pop
xor
inc
sbb
ds
add
fildll
pop
sub
enter
and
jle
inc
pop
push
out
lcall
sub
shll
jo
add
lods
sahf
fsub
nop
and
add
sbb
dec
notb
mov
ret
in
popa
mov
pusha
setp
add
sbbb
xor
imul
cmp
jl
mov
mov
insl
add
call
push
paddq
mov
xor
insl
test
loope
lea
mov
es
or
add
scas
pop
outsb
test
adc
jbe
and
add
dec
add
call
imul
mov
insl
addb
clc
add
xchg
or
push
mov
arpl
pop
inc
idiv
into
adc
repz
in
and
stos
add
scas
add
jne
ret
daa
mov
mov
ja
adc
ds
mov
cltd
xlat
movsb
gs
out
add
or
mov
jne
jecxz
and
inc
xchg
mov
out
inc
int3
mov
cmp
pop
daa
and
add
add
mov
lahf
mov
jge
pop
ficoml
inc
add
movsl
subb
and
xor
xor
nop
add
sbb
dec
lock
or
mov
lahf
cmp
cmp
cmp
sbb
aaa
lds
movsb
test
mov
push
pusha
out
jo
jno
mov
jb
rorl
jbe
add
scas
pop
push
mov
ja
jl
xchg
stos
outsb
add
ret
rolb
pop
and
and
hlt
adc
movl
dec
jae
imul
out
push
lea
and
xchg
orb
push
inc
xor
sbb
xchg
lock
mov
adcb
jo
and
push
lcall
dec
mov
and
enter
fdivrs
jnp
add
xchg
and
push
xor
push
push
adc
xor
in
add
pop
push
jg
test
jl
mov
decl
add
adc
push
sub
mov
ror
pop
sahf
xchg
add
mov
dec
add
mov
ljmp
and
jge
lock
jp
cld
leave
test
movsl
lea
adc
inc
cmc
clc
add
jno
xorps
and
outsl
xchg
test
clc
xor
sahf
popl
enter
mov
add
cltd
push
data16
mov
pop
sub
pop
mov
rorb
add
push
leave
jbe
mov
cld
shlb
scas
sti
fiadds
push
insb
mov
mov
inc
cld
insl
adc
je
enter
or
add
push
mov
push
andb
cld
ljmp
add
test
in
es
fsub
add
jl
jecxz
fistps
imul
in
outsl
add
pop
loop
jnp
cmp
cmp
cwtl
push
sbb
shll
jmp
mov
fsubrl
iret
ret
inc
add
ja
fists
aad
mov
jp
in
adc
or
and
add
cmp
fldl
xchg
hlt
inc
loop
add
jae
or
cmp
or
inc
add
roll
stc
add
testb
std
jo
lods
push
out
add
mov
mov
push
mov
incl
movsb
or
lds
adc
sbb
adc
mov
xor
and
insb
lret
pusha
jo
add
cmpsl
repnz
and
jb
mov
mov
loopne
loopne
pop
inc
add
push
sub
out
xor
mov
mov
pop
rcr
or
icebp
shll
aas
or
add
pop
or
xor
out
or
push
lods
xchg
in
add
pop
add
fbld
popa
dec
jb
cmp
in
and
lret
jp
stos
imul
bound
loope
mov
or
adc
adc
or
lods
mov
cmc
jb
cmpsb
mov
push
jns
call
mov
push
test
sbb
je
jge
xchg
dec
push
sub
push
mov
cmp
jecxz
add
sahf
pop
iret
push
add
imul
movlps
scas
rclb
jnp
ret
sbbl
adc
repz
test
outsb
cltd
in
inc
xchg
scas
push
and
pop
jle
sbb
push
addr16
orb
call
into
fstpl
fisttps
mov
adc
xchg
sti
push
jge
add
pushf
pop
movl
xlat
xor
dec
add
js
jnp
adc
mov
mov
fiaddl
inc
jecxz
movsb
mov
cmpsl
add
rorl
insb
mov
test
cmp
mov
xor
icebp
test
jl
sbb
add
imul
sbb
cld
pop
outsb
cmpsl
cli
inc
cmp
sub
daa
movsl
push
cltd
sbb
sarl
fstpl
inc
pusha
pushf
aad
inc
cmp
or
lods
xor
xlat
mov
mov
and
jle
scas
add
stos
test
add
cmp
inc
aam
shlb
lahf
mov
test
movl
in
les
fldenv
pop
and
or
outsb
dec
cmp
in
dec
add
push
adc
jmp
mov
enter
add
out
sbb
fwait
adc
add
outsl
fstl
lds
mov
loop
les
dec
filds
jb
mov
and
ljmp
mov
inc
fbstp
test
divb
in
push
jl
add
jge
add
imul
jecxz
in
js
add
sbb
loopne
mov
xchg
pop
push
adc
add
lea
loop
je
xchg
enter
iret
mov
and
testb
inc
mov
inc
cwtl
fmull
add
dec
shrb
aas
add
push
imul
jnp
lock
roll
xchg
fisubrs
fsqrt
in
or
xchg
cwtl
and
adc
nop
ljmp
inc
adcb
iret
push
imul
shlb
cmp
test
out
and
mov
cmp
loope
shrb
adc
mov
pop
test
add
mov
push
mov
lds
inc
stos
push
and
incl
addr16
out
mov
adc
mov
mov
mov
and
cwtl
xchg
test
loop
adc
and
out
dec
dec
mov
mov
in
iret
sbb
punpckhdq
xor
roll
popa
fnstsw
enter
in
pop
mov
mov
das
dec
xchg
add
adc
popa
lods
cmc
cwtl
repnz
add
int3
mov
inc
and
mov
into
pop
sahf
add
jbe
xor
xor
push
jno
fldl
addl
pop
in
lret
pushf
add
sahf
sub
mov
lods
add
imul
in
inc
add
dec
push
cs
push
jle
test
inc
or
clc
sub
dec
dec
add
mov
xor
repnz
and
addr16
add
inc
jo
and
loope
xor
pop
add
fldenv
rorl
add
out
mov
adc
into
mov
xor
lea
loope
add
test
add
jo
iret
jg
outsb
rcrb
mov
addl
lods
mov
sbb
pop
dec
adc
idivl
loope
in
movsl
xchg
pop
adc
cmp
movsb
fdivrl
pop
push
dec
nop
std
outsb
inc
jle
add
cmc
inc
fildll
stc
shl
adc
push
ljmp
cmp
adc
loop
cmpsl
add
sub
scas
add
mov
push
pop
fcomps
xor
add
int3
iret
jp
scas
mov
in
adc
ja
inc
add
sbb
gs
ljmp
or
enter
adcb
sbb
scas
cmovge
mov
jnp
pop
xor
adc
sarl
jo
xor
add
sub
push
sbb
jl
add
adc
fldl
clc
dec
loop
insl
or
add
divb
jo
lock
add
mov
mov
or
fidivl
push
lds
add
int
ret
adc
inc
mov
mov
push
jo
mov
mov
jle
xorb
stc
sbb
dec
inc
rcrb
jp
stc
add
test
xlat
shl
in
lock
pop
sarl
nop
lds
add
push
push
out
pop
pusha
inc
xlat
data16
sub
pop
scas
aas
add
cmpsl
or
xchg
mov
data16
cmp
cmp
or
ffree
add
in
cld
aad
jp
inc
int3
cmp
adcb
jmp
xchg
inc
add
dec
and
add
xchg
pop
movsb
mov
lds
gs
fsubp
fcoml
jg
ss
push
add
add
sbb
sbb
jne
rcrl
add
loop
pop
push
rorb
stc
add
cli
push
js
ror
icebp
repz
cmc
repnz
test
je
ljmp
xchg
mov
sub
scas
loope
mov
push
jp
push
outsb
jmp
mov
and
pop
repz
inc
push
mov
pop
andb
int3
mov
outsl
dec
add
faddl
test
paddsw
sbb
xchg
add
push
inc
mov
test
cli
fs
fsubl
add
adc
add
xchg
pop
push
push
dec
faddl
fcmovnbe
mov
push
push
xlat
inc
scas
cmc
sarb
add
adc
mov
push
add
cmp
push
jns
cmp
mov
mov
hlt
add
inc
cmp
sub
js
rolb
and
add
data16
lea
xchg
or
fsts
dec
adc
daa
and
mov
mov
addl
xchg
xchg
cmc
dec
add
mov
mov
dec
inc
push
cmpsb
jnp
and
icebp
lock
testl
cmp
in
add
sbb
stos
loop
mov
add
loope
sub
cmc
cmpb
popa
addb
jp
das
or
add
loopne
shr
mov
daa
popa
int3
lea
rolb
sbb
add
adc
lcall
fdivr
sub
test
pop
add
add
mov
enter
out
sahf
mov
cmp
push
add
pop
int3
inc
int3
add
std
pop
sub
pop
ja
in
or
pop
repz
inc
sub
jne
add
sub
mov
pop
add
and
mov
insl
fldenv
or
push
adc
add
aad
fcoms
mov
ret
orb
add
sub
insb
mov
cmp
add
xor
mov
lret
cmpsl
jmp
adc
sarb
fs
aaa
xorb
add
lahf
push
and
and
rorl
and
rcrb
push
leave
js
xchg
cmpsl
cmp
cs
mov
arpl
xchg
push
pop
xchg
pop
mulb
xor
pop
xchg
aas
pop
repnz
fwait
and
int
mov
lods
xchg
adc
add
xchg
add
test
mov
mov
imul
push
divb
xchg
sub
sar
cmc
add
pusha
lods
or
add
insl
add
jns
fistl
xchg
repz
rcl
movsb
xchg
xor
mov
lods
outsl
xor
clc
int3
fwait
add
pop
lods
mov
out
dec
lods
xor
mov
pop
lret
cwtl
dec
movsb
add
cld
cmp
imul
test
outsb
cmpl
xchg
add
xorb
fldl
cmpsl
sbbl
push
inc
add
test
or
fadd
sbb
xor
scas
sbb
push
add
sub
ss
pop
add
shrb
sbb
push
ret
cltd
mov
lock
add
push
arpl
loopne
adc
pop
sbbb
add
add
mov
jg
fimull
inc
popa
jne
cltd
push
add
mov
iret
add
cwtl
jns
jecxz
sub
cld
inc
pop
mov
lret
sti
or
dec
mov
inc
in
mov
add
xchg
sbb
mov
loopne
sbb
mov
iret
push
add
mov
stc
mov
xor
push
or
add
mov
inc
adc
mov
pop
sub
push
les
xor
xchg
adc
bnd
adc
or
add
pop
test
push
filds
jp
addr16
loope
cmp
or
dec
mov
adc
sbb
pop
lods
fbstp
repz
add
fdivl
and
xchg
add
cli
inc
bound
int
lock
cmp
sub
sub
icebp
add
add
mov
clc
xchg
ljmp
int3
shll
pminsw
jl
cmp
mov
nop
add
sub
mov
push
rolb
push
leave
add
pmulhuw
fadds
fidivl
jecxz
or
xchg
shr
pop
cmp
pop
jne
cltd
loope
repnz
add
mov
popa
out
flds
add
out
lcall
or
stc
dec
add
test
mov
mov
jmp
mov
cltd
into
sub
add
adcl
dec
shl
pop
add
or
pop
int3
xor
push
in
mov
pop
jmp
pop
pop
add
icebp
das
cwtl
sub
adc
loopne
add
dec
ja
or
add
shrl
or
push
cmpsl
pop
outsl
add
mov
jl
inc
dec
or
fld1
fsubr
repz
in
dec
sti
add
xchg
add
pushf
iret
in
and
pop
xorl
jmp
lods
mov
movb
imul
jno
add
rolb
dec
shl
mov
aam
ljmp
jmp
dec
push
push
xor
imul
lret
addb
add
adc
add
add
imul
inc
leave
scas
popf
sbb
inc
mov
pop
push
out
sub
pop
pop
sub
jne
xchg
sub
xor
mov
cltd
sahf
call
push
add
mov
push
add
xor
rcrb
imul
xchg
jae
pop
push
enter
mov
inc
add
dec
add
lods
add
jp
add
dec
xchg
xchg
add
add
in
dec
xchg
sub
and
mov
mov
mov
inc
dec
mov
sbb
mov
clts
and
repz
test
stos
popa
add
add
int3
jno
add
jp
mov
call
scas
jecxz
sub
aam
add
pop
cltd
sbb
std
out
cmp
add
dec
xchg
add
pop
out
sbb
imul
add
adc
rolb
lds
fsubr
xchg
mov
or
mov
lret
push
add
sbb
or
aam
jnp
jmp
cltd
hlt
inc
mov
jbe
leave
cwtl
mov
ljmp
or
push
and
jno
add
fdivrs
add
mov
sbb
jnp
cmp
sbbb
scas
sub
addr16
push
je
out
add
rol
add
inc
leave
sbb
jge
xchg
inc
ret
scas
movsb
pushl
out
cld
enter
pop
push
sub
icebp
mov
cmp
dec
dec
jo
push
push
fistpl
rcrb
add
pop
inc
sub
pop
mov
jg
mov
les
adcb
mov
icebp
jae
dec
jnp
out
xchg
dec
sarb
lods
lcall
addb
les
mov
test
aad
test
fsubrl
mov
test
xor
add
ds
lret
mov
popf
sub
sbb
push
add
push
int
cwtl
jecxz
cld
add
jmp
xor
rorb
outsb
jle
adc
mov
icebp
in
loopne
out
sbb
jecxz
in
repz
add
sbb
arpl
mov
or
push
test
cmc
mov
ljmp
xor
cmp
mov
add
sbb
xor
jp
jbe
add
mov
pop
lds
adc
rclb
das
or
mov
mov
mov
nop
sbb
inc
xor
hlt
iret
add
push
or
add
pushf
fldl
pop
daa
xor
push
add
lret
pop
mov
ficomps
xor
xchg
push
stc
aas
mov
outsl
xor
out
repz
leave
inc
inc
les
rolb
insl
push
sbb
fcmovnu
mov
push
call
dec
cmp
and
lcall
inc
cmp
mov
outsl
stc
xchg
jo
cltd
push
mov
adc
pusha
pop
add
xchg
je
fistpll
mov
sub
push
pusha
sbbl
dec
push
fnsave
es
pop
inc
andb
pop
pop
add
mov
dec
cli
pop
jne
xchg
push
or
shl
push
fwait
cld
xchg
jecxz
aam
iret
add
daa
out
add
cld
stc
add
lcall
add
bound
jnp
int
and
aam
mov
cltd
dec
mov
sbb
orb
fmuls
or
lock
or
push
jne
jb
add
xlat
inc
loope
adcl
and
pop
push
push
add
sarb
lcall
lret
adc
add
or
jno
outsb
add
or
iret
pop
ja
cs
jo
lcall
stos
outsl
push
sub
mov
push
and
push
add
pop
hlt
jecxz
popa
jle
lret
out
ret
je
scas
lahf
loope
cli
push
mov
xlat
les
out
in
xchg
ljmp
das
enter
jo
push
fdivrl
jno
pop
jno
sbb
and
jns
add
sbbb
popf
mov
mov
loope
scas
jmp
push
orb
add
aaa
ds
add
decl
dec
pop
push
lret
mov
xor
xor
cmp
dec
aaa
dec
sbbb
int
das
fldt
sti
jae
in
mov
fimuls
cmp
adc
pop
cmp
sub
lods
ret
pop
add
xor
xchg
test
fwait
jle
into
fiaddl
imul
lock
outsb
add
push
and
cwtl
outsb
mov
shrb
xchg
shlb
jl
pop
or
mov
cmpl
ret
add
pop
add
push
ret
adc
insl
mov
jnp,pt
add
int
imul
push
push
and
popa
add
sub
cmc
dec
in
inc
adc
pop
mov
lods
repnz
dec
inc
and
xor
addr16
adc
rcrb
add
call
add
and
xchg
mov
shlb
lcall
fsts
mov
jge
repz
jno
int3
add
sub
stos
sbb
sahf
movsb
rcrl
nop
out
pop
mov
loopne
repz
or
sahf
loopne
jb
jmp
imul
adc
fsub
aas
cmpb
add
repz
out
shlb
push
and
lcall
lea
xchg
mov
pop
iret
lahf
cmc
push
mov
mov
aam
in
and
add
test
fwait
mov
xchg
mov
cmc
loope
pusha
addb
adc
jno
shl
xor
stos
loopne
add
lock
fnstcw
insb
add
test
in
sbb
add
xlat
adc
cmpsl
sub
inc
add
and
add
pop
add
cmp
lret
sbb
cli
add
sub
push
imul
mov
cld
test
loopne
test
add
lahf
pop
mov
std
jmp
push
push
aam
dec
add
das
dec
repz
pop
lods
mov
xchg
add
inc
inc
ss
cmp
pop
pop
addb
jo
scas
in
ret
inc
jg
stos
out
insb
and
cmpl
adc
sbb
sbb
xchg
mov
mov
mov
mov
mov
pop
add
rclb
lock
stos
sbb
push
add
gs
sbb
aas
shrd
add
ficomps
dec
or
insb
hlt
clc
cmp
pop
subb
xchg
pop
inc
lcall
dec
xorl
xor
xchg
add
push
push
ret
add
inc
stc
pop
iret
and
cmc
out
mov
mov
push
dec
jl
jns
jnp
jns
xor
xor
ficompl
add
jb
cmc
xor
pop
or
push
scas
pop
pusha
pop
popa
cwtl
test
out
pop
mov
scas
loopne
inc
mov
mov
sbb
jns
add
mov
ss
add
dec
andb
stos
push
pop
cmpsb
xchg
jb
fsts
pop
lret
lds
arpl
xchg
dec
pushf
xlat
add
ds
push
add
insb
fs
mov
add
xor
cmp
pop
sarl
fsubrs
fwait
push
add
les
test
xor
lret
rcpps
cltd
ret
ds
push
push
sbb
daa
or
je
aad
pusha
sub
jp
mov
sahf
add
dec
stos
leave
pop
ss
into
inc
adc
inc
iret
ret
mov
rcr
aam
shl
test
cltd
stos
push
xor
ss
repz
sub
inc
shlb
pop
fmul
push
xchg
and
pop
jns
add
mov
add
arpl
mov
jmp
scas
leave
xor
roll
ret
enter
add
int3
rcll
out
fsubr
xchg
mov
push
or
repz
jmp
into
xchg
push
mov
cmpsl
cmp
es
dec
mov
mov
xorb
push
shrb
adc
nop
dec
pop
ljmp
lods
push
push
cmp
jg
inc
add
notb
dec
add
jo
xchg
ss
jo
and
lcall
outsl
add
adc
xchg
popl
aad
lret
push
imul
add
and
pop
push
xor
call
mov
adc
out
xor
inc
shrb
pop
mov
call
stc
aam
push
add
je
roll
cmp
ss
xor
jb
out
dec
xor
add
xchg
and
mov
incl
xchg
inc
push
mov
add
xlat
lret
adc
sbb
pop
jno
and
pop
cltd
mov
scas
push
jbe
add
mov
mov
fs
cmp
inc
xchg
mov
sub
std
mov
ret
scas
mov
add
das
inc
in
outsl
mov
xchg
push
sub
mov
hlt
and
add
lcall
ja
adcb
mov
dec
adc
xchg
aas
sbb
lahf
add
stos
jge
push
fsubrl
jns
mov
cmp
mov
mov
movaps
add
and
sbb
shrb
push
cmpb
pop
add
sti
xchg
push
or
push
test
in
stc
xchg
insb
enter
repz
rclb
icebp
pop
add
and
inc
sub
jl
add
test
sbb
ja
xchg
lret
out
mov
add
icebp
das
or
adc
rorb
inc
or
cmc
lret
fsubrs
add
cli
out
xor
fidivs
in
fiaddl
pop
stos
adc
xchg
jmp
add
cli
add
mov
add
repnz
rorl
xor
lea
sahf
arpl
rorb
mov
jne
add
or
inc
repz
sub
jno
mov
add
movsl
fdivs
pause
testl
sub
xchg
push
stos
jns
clc
pop
fisttps
jb
pop
sub
sub
movl
xchg
dec
aam
xchg
push
in
mov
add
mov
pop
divb
in
xchg
or
add
loop
ret
add
cmp
inc
add
data16
lock
sbb
push
pop
adc
xor
cmp
ss
and
cmc
cmp
sbb
mov
sbb
inc
jle
mov
pushf
dec
outsb
add
aad
lds
outsl
pop
jge
loopne
imul
jnp
pusha
mov
roll
adc
inc
cltd
rorb
leave
cmp
imul
sub
mov
js
add
dec
push
jns
repz
pop
pop
pop
inc
mov
xlat
push
loopnew
subb
mov
inc
pop
lods
shrb
push
and
in
adc
add
test
movsl
add
fwait
xor
lock
and
xchg
add
xchg
mov
jge
jmp
fldt
aam
add
jo
je
dec
adc
pop
or
sahf
adc
addb
mov
inc
add
daa
mov
jl
add
cmp
or
mov
jmp
aad
aaa
cmp
test
inc
imul
mov
and
std
add
adc
pop
rcr
sahf
xor
add
in
sbb
popa
aas
mov
xchg
and
adc
and
add
int
loope
rolb
add
out
mov
mov
push
jle
lret
movb
and
mov
add
je
sbb
in
pop
loopne
wrmsr
out
cmp
mov
out
cmp
jle
jecxz
mov
push
cmpsl
rol
sarb
js
pop
xchg
mov
add
push
pop
mov
and
add
in
xor
hlt
jmp
std
cld
xchg
fcmovnb
xor
pop
nop
add
out
fsubl
mov
sub
mov
or
imul
data16
mov
cmp
loop
add
xor
lods
cmp
xchg
jne
aaa
cwtl
add
dec
xor
ds
jns
cmpsb
pop
dec
inc
es
dec
lret
add
push
inc
push
mov
sahf
jmp
aas
xchg
daa
out
je
cmp
std
xorb
dec
loopne
xor
hlt
int3
mov
and
and
insl
aas
dec
inc
rcr
mov
mov
arpl
mov
pop
push
jge
add
or
mov
jno
cli
push
mov
and
jmp
repnz
pop
out
sbb
add
add
mov
jecxz
mov
inc
dec
les
mov
inc
call
or
jno
cmp
mov
repz
mov
fucomp
incl
push
push
into
push
xlat
mov
adc
mov
cmp
fisttpl
lahf
mov
cltd
out
lret
aad
popf
sub
fstl
cmpsb
adc
push
add
lea
sti
rorl
add
mov
dec
xor
fisttps
lahf
inc
mov
or
xchg
pop
push
jg
cmpsb
andb
loop
or
dec
subb
add
cld
test
add
fxch
data16
movsb
push
or
adc
dec
enter
jmp
push
ficoml
stos
lods
or
and
xor
add
aad
jo
push
rclb
cmp
xchg
or
adc
jp
clc
mov
jmp
fstps
mov
dec
cmp
adc
inc
xchg
cli
add
out
or
icebp
lcall
xchg
test
pop
jl
jnp
loop
sub
push
pop
leave
mov
lcall
push
ljmp
adc
xchg
lods
xor
dec
pop
test
sub
or
add
or
rcll
aam
mul
rclb
test
add
icebp
movsl
push
jne
cwtl
dec
pop
popa
and
push
loope
add
pop
lods
fdivp
out
cmp
pop
pop
dec
iret
stos
xor
xorl
sub
movsb
or
test
mov
scas
adc
push
pop
mov
repnz
xchg
xchg
push
mov
je
add
xchg
and
ret
lods
sahf
add
xchg
movsb
nop
xchg
add
push
test
lea
jnp
hlt
jno
adc
xlat
sub
stos
enter
sahf
hlt
out
add
add
shll
push
sub
dec
mov
dec
push
or
add
pop
mov
scas
loopne
xor
inc
sub
out
test
and
xchg
push
cmp
les
push
push
xor
jge
add
scas
jg
imull
sbb
fwait
cmp
fadds
add
or
mov
add
and
mov
es
dec
add
pop
popa
add
add
mov
cli
mov
jle
sbb
add
jmp
push
hlt
add
movb
shr
stos
sbb
shl
imul
mov
outsl
dec
cwtl
xchg
lds
xchg
jnp
add
aaa
mov
sbb
ja
inc
add
cmp
nop
je
sarb
les
add
cmc
fists
add
pop
xchg
in
cmpsl
arpl
test
xlat
jo
jl
push
push
fnstenv
jmp
and
out
pop
mov
add
xor
add
mov
decl
xchg
fwait
movsl
in
add
add
xchg
xor
mov
pop
popa
add
dec
mov
add
dec
dec
xchg
xor
repz
call
lea
jne
rolb
popf
out
ficompl
add
push
dec
orb
mov
mov
or
mov
add
inc
hlt
jo
jmp
test
xchg
test
xchg
shrb
add
inc
push
or
jle
add
jmp
rorl
sub
inc
push
movsb
ljmp
loop
xor
adc
pop
test
xchg
aad
jb
sub
aas
mov
add
xor
stc
fmull
sub
roll
imul
and
mov
and
imul
xor
jle
das
aad
adc
repz
mov
jmp
jp
paddusw
fisubrl
dec
fs
jecxz
lea
xchg
repnz
mov
add
cltd
push
inc
add
ficomps
push
call
xchg
add
and
sbb
pushf
mov
xorb
and
scas
add
shrl
add
test
pop
pop
call
cmp
mov
in
rcrb
add
cmp
jmp
add
orb
mov
ret
mov
shl
mov
xchg
jae
push
jns
sbb
iret
jb
inc
call
add
add
mov
incb
lcall
cld
and
lret
mov
lock
inc
pop
jo
lods
roll
dec
or
inc
adc
jns
cmp
scas
andb
in
adc
mov
pop
inc
ss
ljmp
pop
inc
loop
adc
mov
clc
mov
aas
push
sbb
das
ret
cmp
inc
add
or
ss
pop
jmp
add
lods
inc
cmp
cmpsl
push
cmp
cld
xor
sub
dec
ja
hlt
add
movsb
out
xchg
xor
nop
fdivs
jae
rcrb
repz
scas
fwait
add
xor
pop
jle
orb
mov
add
sti
mov
add
stc
sbb
xlat
jmp
lds
xchg
add
stos
and
adc
les
je
push
fchs
repz
pshufw
add
push
cmp
lock
push
pop
jno
mov
add
jns
adc
xchg
add
inc
push
in
data16
push
fistpl
aas
shlb
cwtl
jne
in
mov
aas
int3
mov
addr16
ljmp
arpl
push
or
roll
test
xor
mov
je
add
outsb
mov
insb
cmp
or
loop
dec
adc
or
jb
inc
or
jmp
sub
jbe
iret
movsl
mul
add
lahf
imul
repz
popf
dec
fs
aas
jle
cmp
jo
or
sbb
adc
sub
mov
cli
pop
cmp
push
pushf
mov
jns
and
cmp
imul
lods
push
xchg
adc
inc
mov
or
xor
or
mov
push
add
add
sub
mov
ds
xchg
mov
cmp
sub
out
lock
adc
jbe
insb
add
and
adc
mov
scas
mov
jg
pop
add
sbb
add
bound
add
int
jb
out
outsb
add
mov
hlt
pop
jns
add
sbb
sar
es
pop
xchg
mov
fidivrl
jns
int3
rorb
push
mov
ficompl
jge
cld
sub
and
into
jmp
xchg
mov
jp
or
lock
add
cli
or
fsubs
add
adc
rorb
jg
pop
in
cwtl
fisttpll
or
jbe
repz
xor
ss
je
xchg
stos
pop
aas
xor
loop
mov
and
jle
in
add
repz
pusha
cmp
dec
add
in
jecxz
je
lret
xchg
adc
movsb
int3
mov
les
lods
xor
or
fs
mov
out
and
and
iret
dec
lret
les
add
sbb
jo
cmp
repz
xor
mov
lds
sub
movl
add
ret
cmc
mov
test
add
ja
add
dec
and
pop
xchg
add
cmp
loope
aam
enter
and
stos
mov
jbe
mov
mov
push
data16
aad
ret
pop
push
push
jno
test
insl
push
hlt
lock
mov
push
add
pushl
es
dec
add
movb
inc
xchg
shlb
loopne
jb
xor
jge
paddusb
scas
mov
pusha
add
in
icebp
mov
dec
adc
sahf
jno
jl
out
push
xor
ss
push
mov
sti
in
loopne
leave
je
outsl
mov
jmp
jnp
inc
in
pop
xchg
leave
add
and
popf
dec
adc
cmp
int3
in
scas
dec
iret
in
cmp
mov
cmp
mov
aad
push
pop
je
jl
xchg
cs
xor
xor
xchg
aas
xchg
addl
or
add
shll
popf
jmp
jae
add
cmovbe
dec
adc
mov
popf
pop
sbb
pop
inc
loopne
test
add
movsb
inc
add
fimull
jnp
jle
add
loope
pusha
pop
pop
adcl
xor
and
ds
lret
int
aaa
data16
mov
add
cmp
dec
fcompl
lods
dec
idiv
enter
xor
or
jg
sub
ret
pop
or
rcr
pushf
add
ds
jae
in
add
out
into
lods
stos
push
je
test
js
add
andb
mov
cmp
xchg
subl
leave
into
incl
andb
mov
mov
clc
cmpsb
cld
lds
sub
mov
add
loop
test
xor
cmp
sbb
mov
mov
add
fmull
lret
sub
add
cs
xchg
add
test
add
inc
jo
xchg
pop
jg
add
cmpsb
dec
fs
mov
jae
in
pop
call
add
mov
cmp
jg
xor
sbb
fcoml
lret
push
paddq
sub
or
add
inc
into
add
dec
out
nop
and
mov
and
outsb
lock
jo
sub
dec
imulb
fbld
lods
xchg
mov
testl
push
cmp
cmp
sti
inc
fsubrp
xor
add
scas
push
sbb
add
jge
insb
in
cli
add
mov
out
fwait
mov
mov
cmp
movsb
add
stc
leave
pop
aaa
and
pop
scas
sbb
or
sub
outsb
nop
pop
outsl
pop
les
cmovbe
add
pusha
in
test
into
dec
dec
outsb
loop
fdiv
push
sbb
test
add
jnp
mov
add
adc
and
hlt
add
popa
mov
xorl
faddl
dec
adc
mov
jge
add
cmc
inc
lret
cmp
outsl
jae
pop
clc
jnp
bound
push
adc
arpl
add
add
outsb
out
xor
jg
addb
mov
insl
popa
daa
jmp
inc
adc
int3
push
mov
hlt
sub
hlt
lea
rcll
je
lret
leave
xor
sbb
stos
loope
into
and
lret
nop
pop
test
leave
xor
sub
sbb
push
xor
push
lret
add
jg
ljmp
outsl
cmpb
xor
les
add
loopne
sbb
icebp
out
push
scas
cld
adc
jge
mov
call
add
xlat
push
stos
in
cmpsl
pusha
insb
push
and
mov
pop
mov
outsb
pop
add
mov
mov
dec
jbe
cwtl
xchg
and
loopne
pop
add
sarb
jo
sub
add
jne
fwait
adc
mov
faddl
addb
into
in
mov
jmp
insb
cld
pusha
jmp
or
loop
mov
mov
sahf
test
loopne
mov
add
movsb
and
call
inc
add
popa
aam
imul
cwtl
add
insl
daa
cmpsl
ja
pop
loopne
pop
lcall
je
xor
popa
divb
xchg
test
sub
xor
das
ret
jge
mov
ljmp
pop
sar
push
addb
xchg
mov
mov
pop
loopne
dec
jb
ds
or
jle
negb
gs
or
add
movaps
lds
add
test
pop
push
and
pushf
jle
and
mov
pop
jmp
adc
add
lods
aas
cmpsl
ret
cmp
jne
add
sbb
add
adc
movb
into
test
xor
pop
test
add
call
jnp
add
cmc
dec
pop
enter
cmp
out
push
jo
jp
or
push
shl
lcall
pushf
leave
sbb
add
mov
mov
lret
rol
pop
add
mov
push
xlat
add
mov
push
mov
enter
push
iret
ret
insb
movsl
rol
pop
mov
pushf
addr16
xor
adc
repnz
xlat
lret
aas
sbb
inc
cli
xor
add
stos
out
push
push
add
pusha
movsl
lods
and
das
aaa
lea
test
push
xchg
fs
pop
in
add
mov
sub
inc
add
xchg
insl
pop
pop
add
in
neg
jge
jbe
jle
jb
add
bound
inc
cmp
sbb
xchg
enter
pop
jae
in
mov
lods
pusha
jns
bound
add
inc
lock
inc
out
xchg
mov
dec
pop
jns
inc
daa
adc
sbb
push
jecxz
fildl
and
lds
add
es
adc
pop
lahf
nop
pusha
stos
push
cld
add
mov
xchg
inc
call
int
jno
add
loope
xchg
sub
pushf
ja
mov
outsl
fstp
mov
out
adc
add
lods
stos
inc
clc
and
add
mov
or
andb
fiadds
fstpt
cmp
add
dec
lock
mov
lods
push
je
repnz
mov
mov
add
xchg
mov
jp
aam
add
sub
mov
mov
pop
or
inc
insb
clc
push
int
fdivrs
filds
sub
mov
hlt
pusha
test
cli
jnp
sbb
into
mov
cli
jg
out
loope
mov
mov
daa
mov
cmp
or
add
cwtl
jmp
lcall
mov
imul
jle
mov
add
enter
sahf
jnp
add
fidivl
xchg
pop
xor
xor
out
ret
lcall
loopne
mov
mov
and
mov
cmpxchg
mov
mov
mov
inc
xchg
xlat
repz
rcrl
rolb
jecxz
xor
je
lea
mov
push
cltd
fiaddl
or
xlat
ja
mov
mov
scas
adc
mov
add
pop
push
dec
or
add
push
cmp
sbb
popf
add
addr16
sub
jae
dec
mov
stc
lahf
int
xchg
mov
ss
xchg
aam
inc
mov
xchg
add
loope
js
in
xor
ret
inc
lahf
xor
push
and
mov
movsb
mov
jb
sub
fwait
cli
sbb
int
inc
xchg
arpl
enter
add
imul
mov
lahf
add
fnstenv
movsb
mov
popa
mov
mov
lcall
sbb
int
dec
mov
out
and
add
xor
push
add
push
sbb
in
add
lret
push
cmp
sbb
inc
into
adc
add
push
out
in
addl
jg
repnz
xor
pushf
pop
lcall
add
cmpsb
leave
sbb
add
loop
test
movsb
fldl
or
cwtl
fisubrs
xor
push
out
push
and
pop
add
aaa
pop
shll
inc
shlb
shrl
sbb
iret
outsb
push
sub
inc
cmpl
pop
rorb
adc
jecxz
cmpb
fdivrl
sbb
jne
lahf
mov
repz
mov
ret
mov
mov
add
out
cld
xchg
push
and
add
sbb
mov
pop
pop
pop
pop
addl
cmp
xor
add
sub
jno
add
add
pusha
shll
jbe
add
int3
pop
out
cltd
push
pop
inc
mov
mov
scas
or
add
cmp
or
and
adc
mov
add
mov
out
lret
fs
mov
lods
ja
js
sub
hlt
push
add
and
outsl
xchg
stos
mov
xor
subl
mov
mov
lcall
and
jns
or
shll
pop
jecxz,pt
cwtl
pop
decb
inc
into
out
js
je
add
sbb
cmpsl
ljmp
cmpsb
das
aam
add
cs
test
iret
sbb
add
cld
cli
adc
outsb
fiadds
clc
sti
aam
inc
push
sub
cmp
cmpsb
jecxz
jo
xchg
jns
pop
push
popa
pop
push
sub
cmpsb
bound
lahf
dec
cmp
lret
incb
push
in
popa
sti
push
lods
dec
jle
add
adc
dec
add
push
sahf
or
shl
adc
loopne
jle
add
ja
mov
add
pop
dec
loop
stos
inc
mov
popa
mov
add
pop
mov
or
test
xor
in
insb
push
cmp
sbb
in
inc
nop
filds
push
testb
pop
out
mov
add
dec
cmp
cmp
ret
out
mov
pop
add
inc
fimuls
xchg
jae
mov
add
xchg
loope
inc
jecxz
mov
fidivrs
hlt
ret
dec
lret
add
loope
jp
add
cmp
add
aad
pop
adc
add
add
popf
add
pop
or
test
stos
add
shll
in
and
mov
fdivp
or
push
cld
push
gs
mov
dec
add
scas
inc
movsl
push
mov
jp
add
push
pop
mov
inc
bound
or
decb
hlt
fst
add
dec
add
js
fs
cmp
push
add
cmc
out
add
dec
fnstenv
mov
pushf
xor
mov
pop
movsl
cmp
mov
lahf
pop
fildl
dec
repnz
add
or
add
dec
push
gs
jns
adc
data16
nop
inc
sbb
push
in
add
push
in
pop
xchg
mov
loop
jmp
lods
mov
sub
jge
call
es
jbe
jmp
inc
xchg
dec
jno
pop
add
dec
fistpll
inc
jge
jmp
adc
xorb
es
add
xchg
push
mov
add
hlt
jmp
imul
xchg
add
adc
mov
dec
sbbl
clc
xor
sbb
fldt
xchg
lock
inc
cmp
arpl
rep
jne
sbb
or
stc
cltd
lret
cmpsb
push
push
outsl
jnp
add
pop
outsb
jbe
mov
mov
lret
lock
sarb
sub
add
inc
mov
mov
and
mov
dec
jecxz
or
pop
movb
push
adc
loopne
loop
or
add
and
mov
sbb
imul
add
xlat
pop
int
test
xchg
jle
add
pushf
mov
mov
push
insb
xor
and
xor
das
scas
nop
mov
mov
ds
lahf
add
xor
add
mov
cmp
pop
fwait
in
mov
ffreep
pop
out
jbe
add
lcall
call
pop
pusha
jo
loopne
add
testb
popa
jle
inc
xchg
dec
cmp
add
jecxz
outsl
jge
mov
js
dec
test
cmp
adc
addb
or
pop
pop
and
leave
mov
and
or
lcall
xchg
enter
xchg
add
push
iret
and
loopne
jp
in
cmc
adc
inc
or
xor
xor
icebp
push
in
flds
mov
cmp
add
mov
add
lcall
roll
in
into
sahf
ja
test
loop
je
jbe
ds
push
aad
dec
mov
jne
push
loope
jns
and
icebp
or
call
or
mov
mov
arpl
or
add
out
nop
mov
push
push
add
lea
icebp
mov
in
push
and
and
sub
mov
outsl
add
push
loop
xchg
test
popf
imul
shll
sahf
test
decl
jno
in
sbbl
mov
in
aaa
je
paddd
aam
add
add
lock
fstpt
sub
iret
or
outsl
mov
pop
pop
push
js
push
adc
add
inc
bound
pop
popa
dec
add
or
loopne
pop
dec
xor
mov
inc
pop
popa
repz
push
xlat
roll
inc
mov
cltd
jecxz
push
out
add
jg
les
sbbb
jmp
gs
pop
movl
mov
sub
cmp
cli
add
mov
push
xchg
xor
add
pop
stos
mov
addr16
dec
push
or
lcall
xor
or
xchg
lret
mov
mov
divl
ljmp
out
xchg
fmuls
add
xor
lahf
addb
push
pop
test
fisttpll
push
and
rolb
cltd
adc
mov
mov
push
insl
xorl
dec
sub
out
inc
inc
add
addl
sbb
imulb
xchg
out
imul
jg
jle
add
out
ret
cmp
push
loopne
push
jnp
pop
dec
movsb
xor
sbb
pop
dec
enter
fwait
pop
or
cs
cmp
jo
es
fadds
call
ret
rolb
pop
inc
fisttps
mov
xlat
mov
mov
ds
lock
push
sbb
or
inc
inc
dec
pop
inc
or
sahf
iret
add
push
jp
ljmp
scas
enter
pop
lret
xchg
out
lds
cmpb
adc
lahf
out
push
sti
add
pop
loopne
mov
jg
and
adc
inc
pop
std
cmpsl
out
out
ds
aad
inc
out
je
cmp
sti
cmpsb
scas
and
mov
sbb
stos
aaa
int3
or
pushf
add
xchg
sbb
sub
adc
add
dec
xchg
push
cmp
iret
andb
aad
insl
xchg
dec
loope
add
mov
push
inc
mov
sub
loopne
add
scas
add
add
push
or
or
out
jnp
insl
in
ja
mov
je
dec
xchg
jg
pop
outsl
sbb
ret
or
push
rcl
in
add
sub
lea
xchg
push
add
push
outsb
loopne
pop
add
adc
jb
shl
ror
jle
adc
sub
push
push
out
or
lods
js
mov
push
ret
adc
add
nop
push
mov
jecxz
pop
push
pop
jbe
add
nop
jne
xchg
push
jns
ret
pop
paddq
cmc
mov
xchg
dec
test
aas
jb
add
aas
dec
call
sbb
idivl
sub
pop
mov
push
aaa
add
scas
mov
and
add
or
xlat
adc
add
cmc
shrb
sub
add
rcl
int
nop
pop
movntq
shrl
loope
sub
outsl
xchg
mov
imul
gs
bt
pop
inc
cmpsb
mov
shlb
fcoms
or
shll
xor
or
hlt
mov
das
xchg
pop
cmc
in
add
fwait
add
jo
das
pop
pop
add
cmpsl
leave
push
sub
jns
jae
add
mov
dec
add
andl
push
jbe
add
out
fwait
cmp
bound
add
ret
add
mov
lock
pop
repnz
fiaddl
mov
movsb
add
icebp
dec
lds
and
int3
enter
mov
jae
repnz
ficoms
xlat
bound
pop
loopne
lret
sbb
add
pop
rcl
add
fisubrs
fildl
jnp
into
add
mov
repnz
out
jle
xor
inc
push
daa
mov
mov
gs
cmp
sbb
dec
and
xchg
mov
test
in
cmp
adcb
xor
xchg
mov
mov
pop
sub
add
in
stos
push
jno
jecxz
mov
and
xchg
sbb
dec
xchg
sahf
add
mov
popa
int3
pop
fs
xchg
jp
lods
adc
loope,pt
fisubs
adc
mov
fistpll
cs
inc
and
das
add
jbe
adc
jns
xor
dec
mov
add
outsl
dec
lahf
in
pop
push
inc
push
pop
addr16
aad
sub
cmc
bound
add
outsb
iret
fwait
add
data16
inc
cmpsb
sahf
es
xchg
sbb
jns
enter
add
or
add
leave
add
push
cmp
xchg
pushf
xor
mov
add
cld
popfw
stos
lcall
pusha
pop
and
into
push
pop
xchg
imul
mov
int
jecxz
imul
jae
lcall
addr16
add
popa
les
mov
cmp
xchg
stos
andl
jae
stos
test
push
add
add
lods
mov
push
imul
pop
mov
test
dec
sub
pop
add
adc
fwait
dec
cli
add
cmc
test
jno
jg
add
or
lret
lea
pop
jge
aad
push
add
add
xor
xor
fisubrl
or
dec
movsb
imul
test
xchg
gs
movsl
arpl
loopne
xchg
rolb
rdpmc
cwtd
lds
inc
add
adc
adc
jb
sbb
sbb
cld
and
jae
add
movsb
jmp
data16
inc
push
stc
test
in
sbb
add
adc
js
enter
addl
sub
in
ret
gs
das
rolb
sahf
cmp
enter
jecxz
fmull
arpl
pop
adc
jmp
xorl
mov
dec
gs
add
cmp
mov
sarb
or
std
mov
fldcw
inc
loop
push
repnz
outsl
xor
into
push
icebp
or
adc
rol
xor
fs
mov
pusha
jb
pop
pop
push
nop
fadd
mov
cltd
push
arpl
insb
aaa
xor
popf
add
mov
pop
test
and
lock
pop
add
cwtl
pop
cmp
cld
sbb
mov
push
mov
inc
test
mov
mov
lods
mov
cmp
add
jl
shll
subl
lahf
scas
inc
add
out
cmpsb
add
adc
add
data16
and
mov
outsl
dec
insl
pusha
fwait
mov
mov
add
stos
loope
dec
les
sbb
shlb
lahf
scas
es
out
add
mov
xor
push
in
faddl
xchg
in
dec
mov
sbb
icebp
enter
and
popf
mov
pop
scas
jge
sbb
jg
test
dec
add
fs
mov
mov
add
cmpsl
addr16
sbb
fs
outsl
jae
mov
outsb
xor
dec
add
fcmovne
adc
lret
pop
les
call
sbb
mov
inc
mov
inc
movsl
aad
inc
cmp
add
gs
xchg
into
jp
pop
sub
dec
or
in
cmpsl
add
pushf
cmp
repnz
add
mov
jae
add
add
lret
adc
add
pop
sub
rol
jns
psubusw
inc
std
clc
out
stos
add
cmp
sub
shrl
jo
clc
mov
sbb
aad
pop
add
xchg
pop
fwait
add
stos
jl
dec
mov
hlt
lret
outsl
xchg
es
mov
insl
dec
xor
or
lret
pop
fbld
xorb
xor
xor
les
sub
adc
sub
js
add
pop
sbb
lret
imul
and
shlb
out
or
add
pop
mov
dec
es
mov
test
lcall
nopl
xor
shrb
outsl
ds
add
fsts
push
add
and
lahf
adc
sarl
pusha
add
jbe
sub
add
cld
or
rcrl
or
sbb
ret
loope
adc
inc
dec
pop
inc
mov
lret
test
stos
and
xchg
sbb
add
rcrl
jmp
cmp
fdivrs
adc
mov
loopne
sub
sub
pop
sub
push
aam
mov
pop
arpl
pop
pusha
push
mov
add
xor
in
add
lret
mov
pop
imul
js
jl
scas
mov
and
mov
call
jns
out
jnp
add
mov
movsb
push
fs
fmull
inc
cmp
add
dec
roll
add
dec
sbb
cltd
add
or
inc
fwait
movsl
add
sub
cmp
shrl
xor
arpl
out
add
cmpsl
aam
jb
mov
stos
mov
enter
fmul
jge
popf
je
mov
inc
shlb
add
imul
add
adc
sub
xor
pop
sti
xchg
add
fbld
sub
inc
pop
mov
lcall
test
insb
add
repz
pop
js,pt
cmp
cmp
bound
add
aas
and
push
leave
insb
add
fs
enter
mov
stc
flds
lret
pushl
sarb
jo
add
push
ljmp
lods
jmp
mov
dec
mov
mov
clc
jne
movl
dec
jns
and
pusha
and
addb
sbb
loop
popl
xchg
lret
sbb
daa
dec
orb
frstor
mov
stc
dec
dec
cmp
adc
ret
ja
fcoms
pop
outsb
negl
push
pop
pop
xor
ja
xchg
mov
inc
and
loopne
stos
push
repz
xor
daa
sarb
lock
cs
push
fnstsw
popf
xchg
add
outsb
dec
add
mov
lahf
add
mov
loopne
sbb
cs
test
cmp
jnp
pusha
fcmovb
pop
mov
add
shrl
mov
repnz
mov
negl
add
pop
xchg
jp
sub
and
lcall
inc
ja
pop
je
hlt
xchg
ljmp
mov
jns
xchg
mov
inc
cmpsb
scas
rcrl
je
dec
mov
shr
scas
lea
cmp
dec
clc
clc
mov
cmpsb
cmpsl
dec
jmp
or
jmp
xchg
xchg
lock
add
push
repz
in
jbe
lock
loop
shlb
mov
add
out
fistps
mov
add
aam
repz
or
addl
rclb
hlt
ds
std
mov
dec
pop
add
mov
or
or
ret
mov
inc
inc
add
movsl
sub
cli
test
add
repnz
out
inc
mov
jecxz
mov
add
xor
xorl
mov
add
pushf
imul
dec
orb
es
xchg
dec
pushl
inc
lcall
push
lock
movsl
ljmp
pop
mov
push
stos
push
popa
popf
add
add
xchg
add
ljmp
mov
scas
jbe
pop
mov
adcb
dec
enter
adc
enter
mov
cmpsl
repz
pushw
and
jecxz
pop
cmp
cmp
pushf
cmpl
sbb
mov
add
insl
pop
add
in
dec
add
pop
dec
mov
insb
cmp
add
push
or
cld
and
and
loope
fmull
mov
pop
add
mov
cmpsl
ja
movsb
sbb
lea
mov
outsl
xchg
lret
packuswb
add
inc
insl
cltd
sti
mov
jl
scas
and
popa
out
add
jb
lret
test
add
add
xchg
addr16
in
scas
mov
add
aaa
pop
cmc
mov
lds
pop
bound
add
enter
mov
ss
mov
lret
push
dec
mov
das
inc
pop
dec
xor
ret
add
mov
mov
add
mov
ja
jp
add
stos
sahf
rorb
jns
add
inc
arpl
int
push
mov
cmp
jns
add
pushf
pop
pop
sub
xor
sar
xor
push
dec
xchg
ret
aas
or
mov
orb
ljmp
pop
xor
cmp
sub
add
loop
mov
or
or
or
pop
cmc
adc
xchg
lret
mov
pop
loop
push
lds
iret
add
sti
inc
cmp
mov
xchg
ljmp
push
ss
adc
adc
lock
pop
add
adc
rolb
ss
stos
stos
movsl
add
outsl
pusha
test
rolb
pop
fmull
pop
and
xchg
or
xlat
mov
inc
and
das
push
add
adc
or
aas
adc
add
xlat
out
bound
sub
pop
cmp
cmp
jnp
into
add
jo
imul
push
jg
and
mov
add
enter
xchg
les
and
mov
aam
mov
jo
add
add
cli
jmp
in
xchg
add
mov
es
pop
mov
mov
inc
cmp
sub
sbb
scas
adc
je
push
loop
add
das
movsl
push
test
test
daa
lahf
lods
shrl
xchg
subb
fmulp
mov
jmp
xchg
mov
sbb
dec
jmp
inc
enter
jo
add
outsb
sub
addr16
add
mov
in
fsubs
and
add
mov
cmc
jno
sub
lcall
add
wbinvd
push
call
add
add
adc
jae
lahf
add
cmp
jns
add
call
xchg
xor
mov
or
mov
pop
add
or
mov
add
ds
mov
add
icebp
lock
movsb
mov
pop
inc
sub
movsl
xor
push
pop
add
dec
dec
rolb
out
test
xchg
int
stos
xchg
add
fsts
mov
mov
inc
dec
jne
in
movb
push
out
hlt
and
add
xchg
push
mov
leave
sbb
dec
xchg
movsb
pop
fisttpll
inc
je
mov
movl
sarl
cltd
add
xchg
iret
pop
das
push
insb
adc
std
js
add
mov
rclb
cmpsb
mov
mov
pop
sbb
pop
les
xor
mov
add
inc
inc
mov
clc
mov
sub
xchg
jp
add
out
push
mov
stos
lret
xchg
mov
cmp
mov
jmp
cmc
into
inc
dec
lea
add
pusha
shrb
sub
pop
loop
add
or
pusha
popa
movsl
inc
sub
sub
cmp
popf
pop
pop
pop
fbstp
inc
fidivs
adc
jbe
inc
sbb
stos
mov
repz
mov
mov
jecxz
xchg
flds
addr16
fisttps
mov
jo
loopne
pop
and
gs
mov
pop
push
or
and
rorl
add
mov
jnp
add
jno
fcoml
jecxz
dec
fs
jne
jbe
ja
add
out
fwait
roll
adc
add
fadds
roll
mov
and
rorb
cmp
sti
test
cmpsl
sub
add
mov
inc
rclb
pop
inc
sbb
adc
mov
out
mov
add
loop
rcrl
fadds
inc
fs
jnp
push
outsb
rcll
loopne
pop
fnstsw
jg
jns
xor
pop
movsb
sub
movsb
lods
imul
xchg
xchg
adc
and
enter
cwtl
add
pop
inc
inc
push
fs
mov
mov
fsubp
cmp
add
inc
cmc
popa
mov
sub
jo
scas
jnp
dec
mov
jp
pop
pop
clc
dec
outsb
sidtl
lret
lods
arpl
mov
add
cmp
and
mov
out
mov
add
sbb
inc
jae
jne
inc
addb
or
sub
nop
rorl
lds
out
dec
push
cmp
add
sbb
and
jp
add
mov
icebp
and
mov
push
dec
daa
add
ljmp
aaa
add
stos
mov
sbb
shrb
in
daa
rcrl
mov
ljmp
xor
jbe
inc
jnp
adc
enter
lcall
ret
push
jb
mov
out
roll
add
lock
daa
dec
outsl
loopne
inc
test
inc
cmpxchg
loope
shlb
jecxz
outsb
push
mov
sbb
inc
mov
pop
inc
xchg
mov
js
mov
jl
dec
lock
or
add
in
adcb
sbb
push
mov
or
fiaddl
xor
jb
std
nop
lock
xor
push
mov
add
adc
mov
ret
mulb
aas
add
add
jge
pop
jmp
mov
add
cmp
jmp
int
dec
xchg
add
repnz
add
add
xchg
shrb
xchg
add
inc
cmp
fiadds
fmull
dec
mov
sti
shlb
adc
rorb
push
cmp
jp
jo
cmpxchg
cmp
xchg
aaa
lret
insl
das
cmp
sahf
mov
add
ds
and
sbb
jae
pop
nop
imul
or
adc
jmp
add
mov
add
sbbb
adc
sub
push
xor
xor
lods
das
in
add
jg
add
xor
pop
add
xchg
out
push
add
lods
cmc
stc
add
sarl
ljmp
pop
inc
jle
or
into
fwait
or
imul
and
mov
fildl
loopne
mov
scas
add
inc
xor
add
ss
arpl
add
int
sub
adc
add
mov
dec
add
mov
stos
mov
jge
pop
rclb
test
in
pop
xor
add
or
mov
cltd
flds
fistpl
xor
popl
adc
ja
add
stos
flds
add
xchg
pop
popa
add
fistpl
mov
push
mov
add
mov
jno
sub
out
xchg
cltd
mov
loopne
push
add
and
mov
out
add
loope
in
lock
add
mull
dec
or
imul
sti
shll
cmpsl
add
dec
jmp
fdivrl
xor
mov
test
sbb
fsubp
cmp
inc
jg
adc
outsb
add
add
lds
loop
clts
cmpsl
cwtl
adc
loopne
push
fists
add
nop
mov
dec
or
add
and
mov
out
lret
xor
loopne
dec
filds
aaa
mov
js
inc
mov
sub
sub
and
pop
push
add
mov
mov
mov
sbb
add
fdiv
imul
cld
sub
dec
pusha
movsb
sub
or
std
mov
sbb
xor
pop
mov
push
pop
rcl
addb
mov
cmpsl
test
out
adc
add
lret
jl
bound
add
mov
sbb
test
mov
add
es
cmp
xchg
push
pop
jmp
clc
roll
addr16
std
cltd
push
and
test
nop
adcl
and
mov
mov
rcl
cmc
and
fldcw
lds
pop
dec
sbb
mov
movsl
repnz
popa
subb
test
scas
xchg
fisubl
flds
sbb
add
push
scas
cmpsl
xor
push
jmp
adc
inc
mov
lahf
fnstsw
xor
jno
repz
xchg
inc
nop
jae
mov
add
adc
add
add
pop
pop
sub
adc
or
add
nop
insl
call
mov
or
cmp
xchg
hlt
pop
push
push
push
daa
pop
mov
xor
loop
test
sub
cs
inc
pop
test
mov
iret
inc
pop
add
inc
test
push
cmp
and
sub
mov
inc
int3
dec
mov
inc
or
scas
insb
xor
mov
add
flds
daa
mov
add
repz
stos
add
and
dec
sbb
adc
inc
push
in
xchg
add
insb
xchg
outsl
or
add
mov
mov
push
jmp
fwait
cmp
and
and
sbbb
sahf
bound
out
hlt
jle
add
mov
push
insb
cmc
jae
and
sbb
mov
popa
xor
cwtl
mov
js
or
inc
fs
test
sbb
xor
mov
jp
mov
les
mov
es
pop
inc
clc
add
sub
sti
andb
or
js
divl
or
arpl
subb
aaa
dec
pop
add
outsl
mov
add
lret
push
lock
xor
cmp
fiadds
sbb
jnp
je
pusha
xor
imul
jne
xchg
pop
cmpsl
popa
xchg
orps
mov
sar
call
mov
cwtl
jp
mov
cmp
mov
mov
inc
shrb
jne
loope
pop
add
cmp
data16
loopne
add
in
or
push
mov
dec
cld
inc
sbbl
sbb
lock
arpl
mov
pop
mov
add
cmc
cld
mov
sti
push
push
and
je
aaa
xchg
inc
pop
add
pusha
mov
loop
xor
add
das
cmp
shrb
loope
sub
push
idivl
inc
iret
lahf
dec
ja
add
fistl
sbb
add
pop
int3
mov
sub
xor
jmp
sbb
aaa
add
sbb
hlt
push
add
inc
cmp
jo
fmull
adc
mov
sti
pop
rcrl
mov
xchg
int
adc
add
getsec
mov
push
cltd
scas
sub
iret
sti
add
fbstp
enter
and
dec
jbe
add
jmp
mov
aad
or
pop
xrelease
xchg
enter
test
mov
dec
push
ds
push
push
xchg
icebp
xor
jp
sbb
add
in
in
or
das
sub
add
dec
dec
and
add
lds
popa
sbb
mov
cmp
in
add
movsb
scas
je
sub
mov
ja
cli
push
add
xor
js
add
jle
ljmp
add
push
xchg
outsb
mov
popa
ja
pop
sbb
pop
push
dec
repz
loopne
aas
xchg
xchg
push
mov
mov
imul
je
sbbl
in
mov
xchg
lock
jo
jmp
cmp
pop
int3
xchg
leave
addr16
mov
jo
push
sbb
dec
test
scas
push
sub
xchg
popf
dec
pop
push
jno
les
test
iret
ds
push
lret
mov
lcall
jmp
jnp
mov
cmovl
lock
xchg
js
or
add
xor
pop
jmp
test
inc
mov
xchg
mov
sub
fistpll
inc
push
xor
xchg
loop
insl
jmp
push
or
test
add
sub
mov
popf
and
add
and
or
pop
xchg
mov
jae
push
xchg
divb
mov
lds
push
push
jo
leave
mov
xchg
jno
mov
out
jnp
push
push
adc
or
leave
add
cmpxchg
jnp
jg
out
cmp
inc
hlt
pop
mov
loopne,pn
cld
daa
mov
push
xchg
jne
jno
pop
cmp
adcb
push
add
sub
adc
lea
or
leave
lret
psrad
cmc
mov
mov
add
mov
fadds
mov
ss
jo
add
cmp
rcl
mov
add
xorb
inc
jbe
adc
inc
cmpl
jo
push
cmp
mov
shl
sub
xor
imul
dec
mov
pusha
rol
pop
fwait
mov
add
sbb
cmp
add
cmp
add
jmp
aad
sbb
lock
cmp
test
shll
mov
jp
loopne
ja
ret
inc
xchg
push
mov
jecxz
mov
nop
lock
adc
add
xchg
rclb
lahf
subl
fidivs
pushf
or
filds
mov
push
sbb
pop
jne
mov
xchg
pop
iret
cmc
aas
scas
popa
addb
jmp
jo
add
inc
es
rolb
adc
xchg
stos
pusha
mov
arpl
fists
add
sbb
mov
movsb
add
popa
out
call
sbb
jnp
iret
lods
cld
popf
add
cltd
sbb
imul
loope
popf
add
sub
jge
add
adc
je
add
cmpsl
jno
pop
lcall
mov
outsl
adc
and
mov
jg
adc
push
js
mov
ret
mov
imul
push
sub
mov
pop
rcr
int
lcall
push
pmullw
add
sub
push
in
push
sti
jno
or
mov
inc
inc
pop
outsb
cmp
cmp
adc
mov
inc
hlt
mov
sbb
out
and
ret
out
int
cmpsl
push
ds
push
imul
inc
mov
loopne
out
mov
adc
lret
dec
push
add
mov
add
cmc
cmp
mov
pop
or
sbb
stc
test
xor
je
lcall
mov
mov
add
sbbb
xor
sbb
cmp
lcall
lret
and
stos
push
dec
ljmp
or
cmp
sub
mov
xor
fistl
fisubrl
jg
mov
scas
push
adc
lea
sub
and
outsb
pushf
jne
add
test
mov
into
sub
mull
cltd
add
sub
jo
sarl
mov
add
dec
sub
xchg
outsl
je
subl
arpl
push
ficoml
rcl
dec
stc
enter
jno
mov
and
add
in
mov
aaa
negl
lds
sbbb
lock
les
xor
daa
pop
dec
adc
aas
pop
push
xor
out
sbb
add
stos
das
or
in
push
inc
xor
scas
pop
movsb
insb
jns
pusha
fadd
push
mov
sub
cli
add
mov
popa
mov
sahf
sub
mov
pop
mov
mov
push
out
test
adc
imul
leave
dec
in
out
je
add
ficomps
add
or
jg
stos
pop
push
mov
sub
mov
pop
xchg
fldl
jo
ss
add
push
loop
fisubrl
orb
sbb
sahf
rorl
bound
mov
mov
push
movsl
mov
inc
sub
sbb
lock
add
divb
push
and
test
out
mov
call
rcrb
jmp
fsubrs
push
push
jge
ret
or
out
into
pop
add
sbb
pushf
sbb
imul
add
push
cmpsl
stc
pop
out
adcb
aad
cmpsb
and
aas
add
je
or
mov
xchg
aam
dec
mov
inc
gs
jecxz
out
loope
pop
cmpsb
roll
add
js
iret
int3
add
add
dec
jo
add
scas
inc
in
push
cld
fstpt
mov
js
les
int
add
repz
xor
xor
cmp
mov
xchg
mov
call
add
and
je
add
push
jb
sbb
cli
pop
xchg
mov
or
inc
add
mov
mov
jbe
pop
ja
rorb
push
test
push
add
xorl
shlb
adc
xor
int
scas
mov
sub
mov
mov
push
mov
add
aaa
push
mov
inc
mov
mov
inc
jno
add
or
jmp
subb
stc
add
jo
loope
aad
add
push
lods
sbb
std
lods
add
enter
addb
sar
repz
push
mov
inc
add
iret
cld
stos
ret
bound
mov
aas
mov
add
loope
ret
psadbw
inc
cmpsb
in
add
popf
test
je
clc
add
cmp
arpl
xchg
pop
pop
shl
add
and
dec
add
xchg
loope
leave
mov
pushf
std
dec
inc
sub
add
xchg
clc
jnp,pt
add
dec
mov
lods
add
addb
mov
fisubrs
cld
xlat
call
ss
lods
xor
mov
inc
imul
add
mov
rolb
int
cs
out
test
lds
cwtl
test
jp
cmp
fnsave
icebp
das
add
xor
jns
call
adc
pop
add
mov
addb
add
outsl
pop
popa
and
add
jne
inc
dec
pop
lods
addb
mov
mov
add
shl
fildll
pusha
loope
add
sbb
lds
push
mov
loop
add
daa
lahf
clc
sub
out
push
add
rolb
pop
push
add
sub
xchg
jecxz
add
xchg
push
mov
pop
jge
iret
sbb
push
mov
sub
jp
pop
xchg
or
outsb
fidivs
xchg
cwtl
insl
jne
push
adc
aaa
inc
lock
jae
dec
jne
pop
je
daa
inc
jno
add
sbb
ja
add
add
jecxz
xlat
cwtl
xor
inc
cmp
add
out
divb
cmp
xor
loopne
cmpsl
jp
add
sbb
test
pop
clc
pop
push
jge
mov
dec
push
mov
repz
mov
out
es
lcall
or
imul
or
push
pop
add
inc
hlt
cmpsl
xor
add
test
call
mov
test
mov
jnp
push
add
rorb
add
sbb
pushf
add
in
ljmp
inc
cli
fcmovnu
push
ror
dec
add
cld
cltd
adc
cmp
loop
mov
inc
into
mov
xchg
sbb
fstl
xchg
sub
mov
or
ret
je
out
arpl
add
rcll
fisttpl
sub
jns
and
sub
sbb
cs
push
push
add
pusha
or
push
mov
sub
xchg
rcr
shl
xor
jbe
cmp
push
add
inc
inc
xchg
jg
add
in
rcll
bound
add
int
xor
pop
jb
dec
das
sbb
mov
or
jns
pop
cmpsl
adc
xchg
lea
lret
mov
shl
int3
or
dec
push
fisttps
pusha
ss
jb
adc
mov
jo
fldt
inc
add
fadd
popf
call
xor
sub
in
xor
inc
add
jns
mov
aad
cmp
cmp
fdiv
pop
ja
jge
idiv
add
jmp
pop
test
ret
sub
pop
sbb
lcall
aaa
add
fld
cmp
out
aad
or
rcl
lahf
or
mov
imulb
lods
xchg
pusha
mov
ds
cmp
sub
adc
aam
add
xchg
add
adc
pop
xor
cmpsl
lods
xor
sub
in
push
and
and
stc
xchg
or
lods
enter
movaps
es
subb
pop
or
int3
mov
mov
loope
cs
cmp
mov
sub
outsl
pop
daa
add
out
or
dec
ljmp
pop
mov
in
test
out
cli
addr16
add
mov
adc
mov
out
add
dec
pop
andl
repz
rolb
push
fnstsw
mov
cmp
aaa
hlt
adc
inc
addr16
add
cmp
push
mov
ss
jno
adc
call
cmc
ljmp
add
adc
lret
movsl
add
cmp
sub
xchg
in
ja
mov
test
data16
mov
fcmove
sub
into
rolb
das
out
ret
dec
rolb
mov
push
mov
inc
fsubl
add
mov
mov
cmp
arpl
xchg
add
scas
test
add
add
hlt
mov
loope
inc
insl
mov
dec
cmc
xchg
pop
aad
adc
or
dec
shr
adc
inc
ret
sahf
jmp
popa
adc
mov
mov
pop
adc
mov
pop
pushf
add
or
call
lea
call
jo
fsincos
in
or
add
sub
add
cmp
xchg
sub
xor
pand
sbb
mov
push
mov
add
std
xor
fcmovnu
cld
fcoms
popa
push
fmull
or
lahf
jp
or
inc
add
mov
and
add
jge
test
xchg
pop
ja
push
push
sbb
sub
xorb
jno
mov
push
adc
cmp
mov
pop
pop
test
ficompl
jne
adc
lock
test
stos
add
or
aam
icebp
inc
pop
pop
and
inc
mov
leave
out
in
pop
pop
in
cli
fdivl
push
adc
cld
push
push
lock
stos
outsb
inc
lret
popf
lds
dec
or
jb
adc
mov
and
lcall
lret
sbb
insl
lea
arpl
jl
scas
inc
xchg
adc
loopne
cmpsb
xchg
push
add
call
add
xchg
add
mov
jmp
adc
add
mov
xor
pop
pop
imul
push
out
frstpm(287
xor
or
outsb
inc
and
add
sub
push
pop
test
cli
xlat
and
outsl
ja
das
jae
add
sbb
xor
rcll
loopne
jne
add
scas
xchg
icebp
hlt
insb
test
add
pop
aas
mov
jl
mov
and
add
and
lcall
xor
out
sbbl
adc
rcrb
adc
das
sbb
add
pop
out
roll
data16
jle
inc
leave
lcall
add
pop
and
andl
fwait
cmp
add
ss
mov
mov
push
adc
mov
lods
cmp
add
sbb
xchg
stos
stc
stos
jae
int3
add
inc
inc
movsl
add
negl
out
repz
js
add
inc
pop
mov
xchg
loop
push
loope
jns
sbb
nop
pop
cmp
loopne
xchg
and
add
xchg
jns
push
cmp
mov
call
push
add
cmp
jl
mov
mov
mov
inc
ja
add
dec
stc
mov
mov
lods
add
mov
xchg
cmp
xor
cmpsb
xchg
aam
lret
dec
push
outsb
out
add
cmc
bound
pop
sbbb
jbe
jg
xor
aad
xor
outsl
insl
into
les
mov
mov
jo
test
dec
cmp
sbb
xor
and
orb
stos
sub
inc
leave
rolb
sub
jbe
add
faddl
pop
add
mov
jmp
mov
add
int
dec
push
aaa
nop
adc
cmp
ljmp
imul
aad
into
out
add
adcl
jp
or
mov
fsubrl
mov
sarl
adc
mov
out
iret
std
add
xchg
cli
jl
add
push
mov
pushf
in
sti
addr16
stos
clc
jae
dec
stos
addb
notl
jo
jmp
cmp
cmp
gs
repnz
sahf
push
roll
fs
in
and
addl
xor
and
add
out
push
pop
lock
lds
add
pop
cmpb
pop
icebp
dec
pop
xchg
sahf
iret
add
pop
jb
movsb
in
jnp
hlt
push
xchg
mov
pushf
xchg
cmp
lcall
dec
js
loop
out
xor
mov
xor
testb
push
add
jmp
xor
mov
aas
das
mov
push
dec
push
cmp
in
negb
add
mov
rcrb
pusha
repnz
mov
lea
mov
imul
cli
mov
xchg
inc
sub
xor
add
pop
and
call
roll
aas
leave
add
jbe
lcall
bound
pop
int3
arpl
leave
out
addr16
pop
into
mov
mov
dec
test
add
add
adc
ret
stos
lret
paddq
cmp
pop
add
std
add
push
sbb
pusha
imul
xor
add
lock
scas
lret
js
add
jno
add
pusha
hlt
cmp
insb
add
jne
movb
cmp
leave
pop
ljmp
nopl
leave
daa
and
push
pop
fnstenv
in
add
aad
int
fimuls
sbb
pushf
fwait
add
movsl
jmp
shl
les
dec
data16
pop
repnz
rcl
mov
jb
and
inc
daa
pop
mov
add
adc
out
insb
add
cmp
inc
cmp
inc
popa
mov
sub
into
jp
cli
or
fdivrp
add
xor
add
iret
add
jmp
mov
test
push
std
add
pushf
idivb
xor
xchg
pop
int
mov
add
mov
inc
add
push
mov
dec
cmp
mov
mov
in
sbbb
aaa
loopne
jno
add
push
repnz
jns
add
jge
inc
adc
xor
pop
add
jmp
sar
aas
and
sbb
dec
pop
sarb
cmp
jge
mov
mov
pop
cmp
pop
outsl
loopne
add
outsb
adc
std
aaa
jge
fs
add
das
jne
sti
imul
or
mov
jg
xorb
bound
xor
pusha
jmp
ss
repnz
test
subl
inc
lock
gs
inc
pop
lods
insb
mov
add
mov
jle
add
mov
in
sbb
call
add
push
pop
push
stos
adc
dec
das
js
pusha
or
lret
jmp
mov
cwtl
les
push
adc
adcb
das
add
sarl
push
jl
std
mov
and
mov
roll
cmp
cmp
sbbb
sbb
mov
cmpsb
int
and
and
jb
pusha
lds
jmp
jmp
out
stos
add
adc
movsb
add
and
cwtl
mov
mov
fucomp
lea
bound
popf
mov
arpl
stos
jg
cmp
xor
mov
mov
mov
lock
cmp
add
bound
xchg
pusha
jp
mov
pop
ret
sbb
push
mov
pop
add
mov
fcoml
test
dec
jg
xor
or
sub
or
ret
jecxz
outsl
pop
call
data16
push
jl
mov
adc
or
hlt
shr
cmp
add
scas
in
je
ds
rcrl
dec
test
out
inc
mov
andb
test
xchg
push
mov
fs
cwtl
outsl
xchg
loope
sbb
std
adc
inc
dec
fbld
dec
inc
call
bound
sub
sub
icebp
jb
cwtl
sbb
push
inc
xor
push
ljmp
sub
insb
add
sbb
pop
mov
sbb
pusha
sub
cmp
cli
subb
call
cmp
mov
in
sbb
movsl
pop
inc
mov
cmc
ret
out
xchg
rorb
push
fcmovu
iret
lods
adc
sbb
lret
int
adc
sub
js
xor
cmp
mov
sub
mov
dec
jp
sbbb
test
sahf
add
fcomip
adc
jbe
cwtl
xor
adc
je
adc
push
hlt
and
cmc
ret
outsl
fisubrs
add
in
adc
dec
mov
push
cmpsl
loopne
add
xor
fnstenv
sti
test
cld
mov
test
push
rolb
cmpsb
outsl
gs
fildll
cwtl
add
jle
std
mov
jb
add
dec
loop
add
push
subb
repnz
cmp
sarb
rcrl
gs
push
popa
inc
fcomps
mov
mov
jb
mov
mov
adc
mov
mov
inc
jle
addr16
mov
mov
test
xchg
add
fisubrl
stos
aaa
mov
dec
fldcw
pusha
jecxz
out
repnz
mov
and
lds
std
xchg
dec
sbb
lret
pop
add
loope
insb
or
orb
mov
inc
push
xor
dec
hlt
add
pop
add
sbb
xor
cmpl
xor
in
and
pusha
and
lahf
adc
test
jl
movsb
sub
jo
ss
push
add
inc
jno
cmp
xchg
jmp
repnz
mov
jp
push
add
and
int
jo
add
or
lret
mov
shll
add
out
je
mov
mov
dec
cld
outsl
add
or
popf
adc
jns
add
decb
dec
loopne
dec
subl
add
mov
lcall
mov
mov
out
push
add
repnz
add
sbb
jmp
je
add
push
mov
xchg
add
dec
lock
loop
add
adc
rorb
fldl
pop
mov
leave
loop
lret
mov
adc
mov
add
loopne
imul
loop
mov
sbb
or
cmp
jo
pop
call
or
pop
inc
xor
and
xchg
movsb
jae
lret
out
pop
push
cmc
loopne
rolb
test
add
sbb
sub
add
mov
cltd
mov
adc
inc
add
mov
push
mov
notl
nop
adc
ss
add
sbb
and
addb
std
stc
pushl
jecxz
jne
add
shlb
cwtl
in
lret
fstpl
arpl
fdivp
adc
jno
aad
jge
divb
popa
sub
mov
push
add
and
add
aas
in
xor
push
sbb
ss
pop
xchg
jge
sbb
stos
rcll
sbb
mov
nop
or
adc
inc
inc
rolb
pop
shlb
or
push
cli
xor
add
sarl
add
aam
int
mov
fimuls
popf
rcrb
icebp
rol
clc
cmp
add
mov
adc
mov
sbb
sbb
add
or
mov
idivl
mov
mov
test
xchg
iret
jbe
xor
dec
add
push
push
imul
repz
push
cmp
stc
dec
insb
ljmp
add
adc
inc
in
inc
add
shrb
jb
add
add
mov
inc
fldl
lock
dec
lods
sub
mov
inc
sbb
jmp
add
cmpsb
jno
push
mov
adc
push
scas
sbb
int
sbb
addr16
int3
cmp
pause
in
es
push
mov
push
inc
repz
jmp
add
mov
adc
test
lea
add
insl
loopne
inc
outsb
add
add
out
mov
jl
add
mull
add
sub
das
add
dec
sub
int3
pop
or
mov
pcmpeqb
iret
dec
pop
xor
dec
into
out
mov
xchg
aas
arpl
ret
cmpsl
add
fimull
call
fmuls
add
inc
loop
jg
mov
push
mov
out
add
test
add
xlat
shlb
cmp
std
sub
inc
xchg
mov
lods
mov
lods
es
xorb
sbb
push
and
push
fadds
add
push
add
rcrb
loope
hlt
je
out
std
cs
adc
movsl
imul
loopne
addb
add
shll
inc
mov
sub
mov
test
out
in
pushf
in
pop
fldl
fildl
rolb
loopne
pop
mov
movsb
add
and
jno
mov
int3
add
mov
nop
inc
mov
scas
stos
fsubrp
push
dec
add
jmp
rolb
lock
pop
jae
out
push
mov
mov
or
leave
cmp
sldt
fsubrs
mov
mov
xchg
jge
add
pushl
mov
std
out
js
add
and
add
mov
push
push
xchg
sbb
cwtl
sar
popf
cmp
lds
pop
add
daa
enter
pop
popf
jae
test
push
movd
add
add
cmpsb
jg
xchg
jnp
inc
add
movsl
add
mov
add
nop
xor
dec
in
mov
add
in
stc
lea
jl
or
out
sbbl
jne
add
add
orb
inc
inc
pop
decl
cltd
popl
xchg
aaa
mov
xchg
pop
inc
inc
mov
mov
mov
ret
les
adc
inc
nop
lea
inc
add
push
or
mov
xor
push
rolb
ret
push
iret
les
xorl
and
jge
mov
xor
mov
sbb
push
add
or
pop
stc
pusha
inc
jnp
adc
lods
repz
mov
sbb
sub
insb
jecxz
into
sti
add
adc
insl
add
dec
fidivrs
and
inc
out
pop
mov
fcmovu
add
mov
stc
mov
lock
movsb
pop
xor
ret
jne
stos
ret
cmpsl
mov
add
stos
scas
push
call
pop
add
add
pop
lock
bound
jle
jae
pop
scas
pop
push
mov
enter
aam
sub
leave
adc
das
cmp
mov
dec
mov
xor
outsb
sahf
jecxz
ja
mov
scas
outsl
inc
xchg
sbb
jmp
inc
movb
mov
push
stos
add
pusha
fstps
or
add
dec
pop
insl
std
dec
mov
push
sti
push
adc
bt
xchg
pop
cld
add
sbb
cmpsb
lock
inc
add
push
stc
cli
sbb
adc
aaa
add
fists
pop
je
mov
fildl
lods
cltd
xchg
mov
cmp
add
mov
pushf
and
push
dec
or
jle
mov
cmc
rcr
add
mov
call
das
push
jae
inc
dec
leave
in
ss
cld
flds
add
lret
pop
ljmp
inc
lods
cmp
dec
shll
push
cmp
add
jmp
xchg
stos
xchg
in
jno
xchg
ret
add
dec
mov
push
push
jne
lds
add
dec
sub
cmp
out
and
inc
pusha
mov
add
cmp
pop
mov
inc
and
outsb
out
shrl
xor
xchg
cli
pop
add
pop
sbb
mov
inc
mov
iret
sub
pushl
xchg
xchg
jns
add
xchg
mov
pop
sbb
shrb
ss
add
inc
pop
inc
mov
enter
ret
add
sbb
inc
loopne
jb
inc
add
sbb
jbe
inc
add
pop
mov
rcrb
cmp
pop
sbb
pop
xor
in
adc
adc
rcrb
mov
xchg
add
out
fistpll
fidivrs
popa
sbb
adc
sbb
stos
outsb
notb
addl
jne
notl
add
fs
and
add
out
adc
arpl
test
xor
pusha
fld
add
sbb
and
fnsave
inc
test
loopne
cmp
inc
add
scas
cmc
inc
push
cld
fldl
in
sub
sbb
cltd
xlat
adc
in
iret
test
pop
and
add
es
mov
and
dec
rorb
cli
add
pop
push
jecxz
es
mov
dec
insl
jl
jbe
das
in
add
out
mov
shrl
inc
out
sub
sbb
sti
iret
test
mov
and
clc
test
push
sahf
adc
dec
je
int
shr
faddl
inc
adc
add
sub
add
lret
pop
int3
iret
in
inc
test
rcll
mov
out
add
rclb
pop
jge
add
int3
mov
roll
sahf
cmpsl
lea
jl
add
inc
lock
or
fidivrs
out
cmp
inc
pop
leave
xorb
and
out
leave
cmp
test
cmp
xor
jp
dec
push
lods
pop
jne
add
jmp
mov
shrl
sub
mov
fisubrs
mov
cmpsb
call
and
lods
or
add
pop
fidivs
lcall
leave
mov
rcrb
sub
pop
mov
popl
stos
popf
mov
lea
mov
adc
das
outsl
mov
mov
insb
add
jns
cmp
mov
jae
adc
mov
push
out
outsb
pop
loope
sbbb
cmpsl
sub
add
pushf
test
jbe
out
inc
jecxz
mov
in
jle
aaa
scas
lock
inc
stos
or
subb
dec
test
aaa
cmp
add
cmc
loopne
mov
ds
aas
inc
add
push
jnp
insl
fistps
pop
ss
sti
push
das
and
add
outsl
cmpsb
cwtl
roll
mov
enter
push
inc
push
jae
push
loopne
cld
mov
or
subl
rclb
jns
jbe
dec
jp
fisubrl
and
cmc
clc
enter
add
push
rorb
or
jl
xchg
dec
ja
jge
xchg
jns
mov
imul
and
xor
cmp
mov
mov
lods
out
loopne
mov
add
das
addr16
and
rcr
mov
stc
mov
add
inc
add
es
in
add
cmp
jecxz
sti
push
call
leave
inc
add
cld
add
or
jmp
in
out
push
nop
add
out
sub
push
cmp
adc
sbb
or
mov
lock
mov
mov
in
mov
or
daa
mov
pusha
ja
sub
hlt
and
cmp
movsl
add
mov
cmp
insb
nop
sbb
hlt
out
push
adcl
lock
and
rcr
xor
stos
dec
scas
movsl
push
adc
dec
pop
mov
pusha
add
insl
iret
lret
inc
inc
add
outsl
sahf
popf
mov
sbb
mov
insb
or
mov
test
cmc
in
fisubl
pusha
mov
lret
add
inc
sar
jge
je
add
cmp
xchg
incb
push
lods
mul
mov
dec
jl
pusha
insl
inc
test
add
cltd
rolb
add
jnp
pop
sbb
incb
mov
pop
pop
push
test
mov
push
dec
adc
sbb
mov
sbb
loope
add
lahf
lret
cmpsb
pop
andps
mov
push
add
xchg
out
mov
sahf
test
pop
aaa
mov
mov
fbstp
cmp
sbb
inc
imul
jecxz
fwait
in
xchg
add
out
cmp
pop
pop
enter
std
cmp
je
add
or
jo
sub
jbe
push
xor
xchg
add
adc
in
imul
pop
add
jae
in
adc
jnp
pop
into
sbb
ret
adc
or
mov
pushf
xchg
cwtl
fimull
jne
daa
mul
lret
add
out
mov
inc
jae
icebp
ljmp
in
xlat
mov
xchg
cmp
cmp
sbbb
imul
fucom
jnp
jl
add
mov
loop
dec
mov
jmp
push
jo
and
jl
lcall
lock
pop
pop
pop
push
xchg
aam
fbstp
out
jg
xor
fcoms
mov
scas
popa
mov
movsl
sarb
xchg
cmp
add
xlat
aad
add
mov
paddb
iret
sub
into
mov
loopne
popa
enter
pop
mov
add
or
xchg
cmp
pop
mov
cs
ja
and
mov
and
adc
mov
fld
add
popf
xchg
aas
ja
mov
hlt
cmpsb
sub
add
mov
stc
fs
hlt
ja
add
ljmp
jne
cmp
add
pop
mov
loopne
pusha
addr16
pop
nop
xor
mov
cmp
push
orl
or
aad
add
mov
inc
shlb
mov
ja
push
int
arpl
xor
add
stos
cmc
test
add
dec
aas
test
add
fnsave
jmp
dec
mov
call
mov
sbb
inc
in
mov
or
ljmp
add
and
mov
dec
dec
jo
xchg
ret
das
adc
in
js
add
jne
std
inc
fmull
enter
fwait
add
int
test
ss
cld
or
lds
mov
ret
sub
orb
add
insb
test
add
sub
sti
add
es
fsubs
mov
js
pop
add
sbb
or
es
or
outsl
nop
pop
push
mov
xchg
enter
cmp
leave
cmp
cwtl
mov
cli
or
sub
and
add
sbb
jo
cltd
enter
sahf
adc
mov
dec
subb
loope
fdiv
add
mov
mov
repz
pusha
push
cli
add
and
rcrb
ficoml
std
mov
shlb
cmp
add
mov
jbe
mov
mov
mov
sbb
mov
and
add
addb
inc
add
mov
dec
add
aad
pop
dec
fsubrs
ficoml
add
mov
test
call
jb
clc
inc
adc
call
mov
sbb
mov
add
push
pushw
gs
inc
stc
cmp
xchg
loopne
lds
push
lock
add
sarb
add
xchg
test
test
loopne
decl
push
ljmp
pop
mov
jno
add
and
mov
test
inc
jle
out
fdiv
pop
js
ss
adc
mov
cwtl
mov
cld
add
push
cwtl
inc
xchg
ficompl
in
xchg
ljmp
ljmp
fldenv
add
xchg
add
incb
inc
sbb
mov
adc
pop
lods
push
test
cmp
lock
lret
clc
lcall
ds
sbbb
add
test
fwait
out
and
je
or
adc
rorl
test
ja
mov
pop
inc
mov
into
push
jmp
sbb
add
dec
mov
filds
jmp
lret
aaa
stc
add
and
or
fistl
push
add
loopne
and
adc
loope
clc
cmp
fildl
in
outsl
out
leave
sbb
nop
pop
add
ljmp
ret
cwtl
cmp
in
xor
int3
add
push
fisubrl
std
cwtl
add
adc
dec
mov
mov
add
xchg
add
mov
lret
add
pop
fstpt
add
ja
out
or
jl
xchg
mov
rol
test
daa
add
negl
es
cmp
xchg
lock
imul
pop
pop
add
loopne
inc
and
push
xorb
add
shlb
and
rolb
in
adc
or
xchg
push
inc
and
leave
test
mov
adc
or
ret
jle
cmp
sub
movb
lea
push
jbe
in
inc
scas
and
pop
imul
sub
out
fnstenv
cmp
lods
jle
dec
shlb
sahf
push
add
push
inc
sub
cmp
add
pop
fucomp
jnp
add
mov
je
mov
sub
adc
adc
scas
xorl
add
pop
add
inc
cwtl
data16
dec
mov
pushf
movsl
add
push
fists
fiadds
cmpl
out
sbb
scas
sbb
sti
mov
mov
cmp
getsec
cmp
aad
cltd
jne
insl
sub
mov
add
sbb
or
add
mov
nop
cld
mov
dec
lods
pop
mov
mov
inc
movswl
loopne
repz
add
sub
xor
cmc
movsb
xchg
sbb
pop
out
and
jp
add
insl
push
fildl
into
pop
lahf
cmp
xor
movsb
repz
dec
int3
icebp
lea
dec
stc
cmp
jae
pop
xchg
pop
pusha
lahf
clc
enter
addb
aad
add
ror
jge
ds
and
inc
sbb
sub
hlt
add
out
fldl
jp
leave
or
cmpsb
adcb
jle
lods
add
mov
xchg
xchg
mov
push
push
mov
adc
out
add
cmp
ja
cli
xor
imull
pop
jg
inc
aam
fprem
push
daa
pop
cwtl
jecxz
fmuls
adc
sub
cmp
test
cli
ficompl
mov
inc
and
sbb
and
cmp
pop
lock
aas
add
repz
dec
movsl
fwait
inc
add
lods
sbb
cmp
repz
jno
ret
lret
jbe
cmc
outsl
lahf
add
jecxz
adc
inc
cli
ret
adc
push
cwtl
and
sbb
add
incl
stc
sub
push
icebp
pusha
sbb
mov
out
inc
add
fimuls
jg
ja
sbb
and
add
pop
jge
sarl
inc
mov
mov
cwtl
mov
dec
xlat
mov
in
pop
add
jg
add
push
or
movsl
or
lahf
pop
stc
adc
push
test
repnz
rorb
mov
ret
ficomps
push
sbb
mov
movsl
jecxz,pt
push
add
pop
jno
daa
or
test
jae
adc
sbb
xorb
jb
iret
xchg
cmp
aad
out
dec
ljmp
add
dec
jp
loopne
addr16
cs
pop
hlt
ret
add
and
xchg
adc
mov
add
movsl
scas
pusha
xor
aad
adc
imul
inc
add
lahf
mov
movsl
add
fsubr
dec
mov
cmp
add
sarl
add
xor
imul
xchg
fiaddl
mov
int3
enter
out
addb
pop
aam
dec
lock
xor
ret
add
loopne
aaa
jle
sub
mov
movsb
int3
or
data16
imul
xchg
pop
shlb
bound
lods
or
repnz
add
and
xor
mov
lock
jns
pop
add
sbb
sahf
xchg
fldl
cmpb
aad
cs
mov
dec
daa
jge
push
mov
mov
inc
add
xchg
push
xchg
adc
and
xor
pop
sub
push
lock
sbb
nop
popa
mov
fwait
adc
gs
mov
mov
push
cmpsb
mov
pop
adc
xlat
dec
insl
jnp
add
std
cs
out
scas
dec
test
push
pop
xorl
loop
mov
setp
adc
enter
hlt
jmp
lea
dec
jmp
pop
and
in
mov
rol
mov
adc
xor
jbe
jae
sbb
das
dec
roll
icebp
cmp
fiadds
adc
add
in
mov
lcall
mov
je
jp
add
js,pt
push
repz
push
fsubrl
add
sub
xchg
mov
shr
push
or
mov
adc
xchg
pusha
gs
adc
pop
add
test
pop
stos
movsl
cmp
mov
and
pop
xchg
dec
mov
pop
shl
xlat
cltd
adc
aaa
psubsw
add
mov
pop
stc
inc
testb
push
in
add
sbb
push
ffreep
push
addr16
movsl
jo
imul
jl
test
xchg
mov
cmp
push
pop
popf
imul
subb
not
js
cmp
jne
add
inc
jp
push
jns
xchg
or
sbb
cld
add
push
add
xor
and
punpckhbw
adc
mov
inc
mov
pop
sbb
push
add
xor
add
xlat
mov
loopne
mov
cmp
jg
pop
xchg
mov
mov
jb
mov
lret
mov
addr16
push
pop
push
mov
pop
adc
cmp
aam
xor
push
add
neg
mov
iret
cmpsl
sbb
inc
js
adc
rclb
shll
je
add
xor
sbb
cli
js
pop
inc
pusha
mov
add
mov
jns
stos
sbb
or
add
mov
or
jns
dec
sbbb
or
and
push
xlat
cli
pusha
xchg
xchg
fldcw
add
scas
sbb
add
add
aam
imul
add
lcall
cmp
fistps
pop
pop
jle
lock
and
mov
push
xchg
mov
test
push
roll
add
hlt
dec
in
stos
ja
aam
sbb
xor
int
lret
cmp
sysret
lea
out
js
xor
bound
cmp
iret
push
icebp
mov
xchg
fdiv
insl
jmp
or
add
add
mov
insb
jge
enter
lret
nopl
outsb
test
lcall
add
mov
add
add
mov
insb
cld
sub
rolb
aam
or
sub
push
push
add
hlt
push
lods
add
jg
pop
inc
lds
stc
cmpsb
clc
ret
add
popf
or
pop
sbb
inc
inc
imul
clc
int3
fs
mov
mov
push
adc
sahf
push
jmp
mov
mov
stos
xor
dec
sub
shrb
add
into
jmp
and
pop
lret
push
add
jb
rorb
idiv
add
fisubrl
int
pop
xor
xchg
jmp
in
das
sub
daa
inc
add
aam
mov
add
rclb
outsl
loop
jnp
add
mov
les
pop
pop
test
mov
jp
ljmp
mov
jae
add
popl
dec
add
data16
push
sbbb
mov
stc
add
jno
inc
stos
ret
add
mov
dec
int
pop
testb
std
loop
cwtl
out
movl
cli
push
arpl
mov
std
add
sbbl
fwait
mov
xchg
push
or
fiadds
je
iret
sub
mov
dec
jecxz
dec
aam
dec
add
inc
aaa
add
jb
verr
mov
lcall
arpl
xchg
mov
add
in
enter
fnsave
sbb
sbb
shlb
pusha
pusha
adc
xchg
add
sahf
ficompl
subl
add
jnp
mov
pushf
dec
inc
add
mov
ficompl
sbb
shlb
adc
add
mov
jge
cmpsl
pop
mov
imul
int3
xchg
xor
or
fsincos
adc
mov
stos
test
jmp
xor
in
and
ja
stos
js
add
push
jbe
sti
hlt
xor
add
jmp
push
dec
js
add
hlt
add
push
insb
std
or
or
push
sub
out
mov
scas
ret
fsubs
mov
flds
pop
in
pop
sub
clc
enter
adcb
aas
cmp
rcr
ret
aad
add
push
push
mov
cli
je
xchg
jg
mov
bound
mov
call
ficomps
sub
repnz
hlt
xchg
cmp
test
jle
mov
out
push
xchg
out
and
push
dec
das
xor
xchg
inc
leave
add
jno
mov
add
lods
and
outsb
mov
add
cs
loopne
std
pop
enter
hlt
cmpsl
clc
adcb
sub
lcall
xor
fiaddl
pop
fwait
mov
jmp
hlt
jg
add
ret
outsl
and
movsb
roll
stc
mov
repnz
xchg
sub
push
inc
push
cltd
xchg
inc
jecxz
or
movsb
ljmp
aaa
push
decb
call
add
xor
adc
ret
mov
pop
mov
inc
adc
pop
mov
adc
arpl
add
mov
loope
mov
dec
jle
stc
cmpsl
fisubrl
cmp
add
inc
add
ret
mov
ljmp
jp
cmp
insl
aas
add
mov
jb
les
jne
inc
imul
mov
ficoml
movsl
or
xchg
stos
jle
sub
inc
mov
mov
repnz
jge
nop
arpl
mov
in
dec
mov
or
dec
jno
jmp
sahf
or
repz
xchg
add
and
add
fcom
mov
and
imul
enter
add
mov
add
aam
pop
adc
and
push
jl
lcall
sub
jg
ror
inc
sbb
adc
outsl
pusha
sub
inc
jbe
add
lds
ss
push
add
jp
clc
add
imul
add
dec
add
dec
sbb
xchg
mov
push
cmpb
add
mov
push
dec
adc
jb
scas
mov
int3
inc
push
leave
add
or
incb
add
cmp
std
add
xor
push
dec
cmpsl
cmp
push
cmc
int
stos
add
sbb
cld
xchg
dec
add
cltd
lcall
add
je
add
iret
xor
mov
add
scas
ret
inc
add
mov
ljmp
movsl
and
fildl
inc
test
ja
sbb
mov
mov
mov
test
stc
fld
add
mov
in
xchg
sets
add
dec
inc
enter
add
cmpsl
rep
out
icebp
jmp
sahf
mov
jge
fstl
nop
stc
mov
ja
add
movsb
aas
shll
int
cwtl
add
popa
sti
ret
out
int3
dec
jnp
add
jg
into
scas
cmpsl
loope
fbstp
add
and
imul
hlt
loop
add
pop
adc
push
inc
mov
insb
pusha
daa
mov
xlat
jns
add
pcmpgtd
mov
out
add
mov
mov
sbb
lahf
inc
push
loopne
mov
loopne
fbld
add
into
cltd
pop
jge
xchg
subb
pop
mov
arpl
xchg
cmp
lods
fwait
mov
jns
rorl
inc
leave
mov
add
sbb
add
sub
inc
or
sbb
roll
vmovaps
inc
cs
jp
cmp
pop
subb
mov
mov
outsl
loope
ljmp
jbe
xchg
mov
jle
xchg
dec
cmp
jne
sbbb
and
in
add
xchg
dec
push
test
into
bound
add
adc
sbb
and
inc
jg
outsl
or
cmp
add
lock
data16
add
cmc
pop
insb
add
pop
and
xor
push
add
dec
mov
dec
push
mov
or
push
int
mov
adc
mov
in
cmp
xchg
test
mov
js
aas
aaa
out
and
push
add
clc
sar
or
call
mov
sar
add
in
fs
xor
add
mov
pop
mov
out
in
push
leave
clc
push
lock
addl
in
daa
addr16
xlat
bound
jne
push
sbb
pop
mov
pop
cwtl
rcll
push
ret
push
dec
lods
and
sbbb
push
orb
or
hlt
sbb
pop
filds
mov
mov
int3
stos
or
pop
mov
sub
xor
add
imul
mov
add
cwtl
inc
and
mov
dec
scas
mov
hlt
lock
sti
aaa
js
add
add
mov
mov
aas
shlb
cld
dec
pop
movsb
add
clc
lea
add
push
dec
mov
outsb
mov
add
add
inc
mov
xor
out
inc
pop
pop
push
add
pop
adc
add
or
call
dec
mov
mov
mov
jmp
out
jns
jge
adc
push
into
xchg
inc
add
mov
fldenv
mov
dec
sbb
push
cli
dec
add
fdivrp
addr16
inc
repz
adcb
xchg
push
cwtl
inc
inc
cld
mov
test
mov
sbb
or
xchg
movsl
push
push
jno
cs
and
cmpsl
rcl
dec
in
fadds
jecxz
mov
stos
cmp
pop
sti
push
inc
add
xor
decl
clc
sbb
mov
dec
dec
mov
pop
idiv
test
nop
jb
popf
js
xchg
cmp
bound
roll
aad
cmc
enter
pop
insb
mov
mov
loopne
test
flds
or
pop
movsw
add
les
rolb
pop
xchg
jmp
xor
fisttpll
sbb
mov
bound
mov
push
stos
add
outsb
xchg
insb
or
test
mov
add
dec
xor
adc
pusha
aaa
loopne
xchg
test
xor
push
mov
mov
js
call
xchg
mov
push
ljmp
cmp
addr16
add
cmp
and
add
add
ret
icebp
pop
andnps
clc
push
rolb
jns
add
inc
addr16
mov
push
xchg
imul
sub
lock
fisubrs
rolb
jg
push
xor
enter
lock
daa
stc
int3
cmp
jbe
add
add
and
filds
ljmp
sub
sub
mov
cmp
outsl
add
and
mov
add
inc
icebp
lds
jmp
jl
mov
lret
or
cli
aaa
ds
shlb
xor
inc
fucomip
pushf
pop
add
cmpsl
aad
or
decl
into
dec
xlat
das
cmp
adc
stos
jmp
mov
sti
inc
mov
sbb
sbb
add
jnp
cltd
add
mov
lea
push
iret
sub
es
hlt
add
lds
and
dec
lahf
lods
pop
jae
mov
mov
pop
pop
aam
mov
stos
aas
mov
outsb
repnz
loopne
xor
adc
adc
scas
cmp
pop
mov
sbb
sbb
insl
ja
add
mov
push
add
fldt
add
mov
add
leave
cmp
sti
push
ffreep
sub
vcvtsi2sdl
adc
aas
cmpsl
bound
les
fldl
insb
sub
add
pusha
xchg
dec
fwait
or
orb
jo
pop
lret
push
mov
add
jns
jbe
imul
roll
pop
enter
icebp
loopne
lea
add
xor
lahf
pop
aaa
add
mov
clc
xchg
push
add
lock
aad
mov
xor
add
push
fs
xchg
leave
or
xchg
mov
mov
mov
xor
xchg
adc
mov
xor
add
pusha
jns
pop
dec
adc
xorl
inc
mov
mov
out
aad
cmp
xor
cmp
in
add
mov
cs
dec
inc
lock
or
fcom
mov
sbb
mov
jae
pop
or
pop
mov
in
push
loop
or
mov
ret
aad
add
scas
mov
push
inc
cmp
push
pop
shr
add
dec
aad
mov
out
idivb
out
add
pop
push
in
into
push
movsl
add
in
mov
imul
scas
or
and
or
sbb
cmp
mov
inc
add
fdivs
push
aaa
xor
cmc
cmp
add
notl
movsl
in
pop
repz
jge
add
aam
sbb
and
repnz
mov
add
jae
cli
cld
add
inc
test
sub
pop
dec
adc
imul
ds
sti
ja
xchg
add
ret
adc
push
add
jnp
xchg
insl
mov
add
pop
dec
aas
cmc
xlat
add
pop
jmp
test
lods
mov
fidivs
adc
dec
popa
rcrb
add
or
iret
call
and
adcb
xchg
push
jp
add
mov
cwtl
cld
inc
incl
cs
mov
in
ficomps
lock
jns
std
and
adc
xor
mov
aaa
sbb
jns
cmpsl
xor
sbb
rcrb
dec
cmpsb
sbb
mov
xor
arpl
movsl
in
xchg
scas
sbb
sbb
xchg
dec
pop
cmp
mov
mov
jge
inc
xchg
repz
mov
cmp
pop
pushf
fdivl
adc
or
and
lock
add
rorl
jge
ds
orb
jae
out
sti
stos
imul
pop
jp
mov
inc
loope
lock
js
push
bound
arpl
or
mov
cmpsb
sbb
test
mov
je
cmp
add
add
roll
pop
jno
adc
loopne
loope
sbb
je
push
dec
add
mov
pop
mov
loope
pop
push
jle
lock
push
ret
mov
cmp
mov
pop
fsubrl
and
xor
xor
dec
addr16
pop
mov
hlt
dec
jg
cmp
xor
fs
out
repz
fcmovb
or
push
lock
std
mov
outsb
stos
pushf
sahf
inc
jge
insl
add
in
sti
ret
int3
enter
cs
jno
add
pushf
mov
cmp
ficoms
jecxz
mov
in
cmpb
dec
cmp
mov
xor
int
orl
xlat
pop
scas
icebp
sbb
push
mov
scas
inc
jmp
xchg
loopne
pminub
pop
mov
shll
push
sarb
into
add
enter
sbb
dec
imul
clc
rolb
insl
in
xchg
jl
fwait
pop
call
ss
lock
adc
or
add
push
pop
js
sub
nop
pop
add
add
insl
add
lods
add
js
cmp
and
jns
incb
mov
popf
cmp
mov
std
sbb
xor
lea
pop
or
xlat
pop
sbb
clc
mov
mov
adc
stc
pop
add
inc
adc
fiaddl
sbb
cmp
negl
mov
mov
out
push
xchg
ss
inc
fcmovnu
mov
decl
loope
pop
mov
enter
sbb
cmpsb
pop
pop
cmpl
mov
inc
stos
push
clc
insb
and
jnp
pop
add
sahf
bound
adc
les
add
push
call
ja
mov
or
xchg
js
add
push
ljmp
add
pusha
push
inc
repnz
das
je
mov
notl
out
or
or
sub
and
popf
seto
mov
dec
in
add
mov
das
test
les
push
dec
push
xlat
sub
lret
cmp
pop
add
push
addr16
dec
push
mov
mov
int3
out
jge
cmp
movsl
into
mov
jg
add
jo
adc
lret
in
pop
jae
add
stos
dec
mov
nop
mov
jp
loope
clc
push
hlt
add
icebp
xor
mov
mov
push
cld
dec
sub
adc
cs
inc
aad
pop
add
xor
add
movsb
in
call
mov
jecxz
push
imul
inc
addr16
sbb
ja
inc
fwait
jmp
scas
mov
mov
and
pop
adc
mov
aad
add
and
je
lret
je
cwtl
inc
add
cmc
jo
cmp
pop
pop
add
add
xchg
js
jmp
stc
mov
mov
fiadds
fldenv
dec
and
push
pop
xor
ret
dec
pusha
loop
sub
enter
jl
dec
scas
add
mov
and
mov
xchg
lods
push
add
sbb
add
jae
mov
dec
int3
dec
push
add
ret
outsl
in
notb
add
mov
xchg
push
jg
add
mov
mov
dec
jbe
push
mov
jmp
test
cmp
popa
pusha
xchg
in
xchg
add
sub
pusha
call
rcrb
inc
shl
int3
ret
jae
push
push
mov
adc
add
sub
das
mov
lds
xor
scas
or
imul
xchg
inc
xchg
out
iret
mov
pop
or
add
dec
mov
or
add
bound
pop
mov
cli
cmpsb
js
jns
mov
push
ja
dec
inc
enter
jp,pt
pop
sahf
adc
std
push
xor
fwait
roll
add
shrb
pop
je
xchg
loopne
cmpsl
lret
adc
adc
mov
pop
sub
add
mov
leave
sub
outsl
add
in
jbe
clc
test
add
fimuls
test
and
mov
add
push
and
sbb
int
fistps
xor
mov
add
xchg
sub
pop
nop
mov
dec
or
ret
add
mov
les
out
ja
add
mov
pop
jle
push
sbbl
adc
xchg
pop
shrb
mov
add
mov
es
sub
inc
jb
xchg
xor
pop
bound
ljmp
xchg
push
mov
jle
and
pop
pop
stos
jno
push
test
xchg
insb
and
mov
icebp
rolb
sbb
dec
out
mov
addr16
shlb
xchg
adc
ror
add
xor
mov
pop
cmp
or
popf
push
adc
jge
pop
xor
call
add
sahf
mov
popf
xchg
cmpsb
add
and
mov
or
andl
rclb
add
ds
aam
dec
add
sub
aad
insl
ret
add
test
in
test
xchg
sbb
add
and
add
push
inc
cmp
mov
mov
mov
add
cwtl
and
cmp
test
add
arpl
mov
jo
pop
add
jbe
add
rolb
and
iret
hlt
sarl
mov
cs
test
pusha
je
jg
popf
xchg
mov
test
adc
pop
call
adc
loop
call
xor
push
add
data16
scas
js
jg
mov
add
scas
fsubl
push
cwtl
inc
mov
xchg
orl
loopne
lcall
dec
and
xlat
add
xor
rorl
in
mov
mov
jb
pop
push
arpl
push
stos
stos
cld
ret
jo
repnz
adc
inc
in
add
mov
sbbb
sbb
mov
or
shrb
mov
sub
loop
mov
jp
add
lret
or
pop
sbb
aad
js
add
insl
inc
sub
sbb
loopne
test
cmp
mov
lret
addr16
mov
push
jne
sbb
mov
add
xor
arpl
cmc
je
add
xor
ret
scas
cmpl
scas
stos
push
adc
push
lea
rcrb
push
int
loope
lret
out
mov
repnz
and
in
popa
add
cmp
pop
push
jb
add
and
loopne
das
lahf
add
sub
dec
jae
andb
cs
push
fs
xor
dec
mov
xlat
aaa
call
cs
sbb
iret
add
sbb
and
add
ljmp
add
mov
mov
pusha
cmp
loope
cmpsl
icebp
mov
dec
popa
gs
faddp
pusha
xor
leave
dec
cwtl
add
adc
in
stos
rolb
aaa
mov
cmp
xchg
sub
out
xchg
add
repz
add
fdivs
lret
add
sub
femms
xor
dec
cmp
test
icebp
inc
push
cmp
outsl
das
repnz
fs
dec
push
dec
notb
xor
push
roll
pop
sub
add
mov
pusha
in
mov
negb
inc
and
or
xchg
iret
pusha
fadd
or
sbb
jg
clc
pop
xor
add
ss
mov
pop
inc
ret
push
xchg
and
add
mov
mov
cmp
mov
icebp
outsb
movsb
add
int
ret
pop
adc
add
outsb
mov
jns
mov
lds
pop
dec
notl
jno
dec
add
lret
call
mov
jbe
fadds
cwtl
xchg
mov
sbb
add
inc
pop
stc
outsb
stos
aas
add
aad
and
shlb
insl
jbe
in
shll
inc
xchg
mov
push
test
idivl
jl
sbb
mov
add
mov
jmp
movsb
mov
add
dec
mov
add
xor
hlt
aaa
sub
jmp
pop
pop
aad
mov
test
enter
add
mov
mov
or
pop
mov
xchg
ret
stos
add
sub
adc
or
outsl
sti
add
add
add
mov
xor
scas
outsl
push
xor
mov
shrl
loope
insl
cmp
mov
jmp
inc
push
and
in
incb
xor
and
adc
test
insb
in
mov
fwait
leave
fcmovnu
lea
addb
sbb
mov
xorl
movsl
or
mov
or
rcrb
and
xchg
sub
push
je
ljmp
mov
mov
roll
mov
add
dec
ret
sub
das
and
jle
adc
into
es
mov
xchg
jmp
cmpb
sub
add
adc
sub
stc
sbb
mov
les
imul
mov
push
call
inc
int
dec
inc
ds
add
outsl
enter
cwtl
shlb
rolb
shrl
push
and
nop
js
test
loope
add
xor
and
movsb
out
pushf
jl
add
lcall
in
xor
mov
add
push
inc
hlt
and
pop
adc
sub
inc
fwait
mov
inc
add
add
in
mov
cli
movsb
push
sbb
push
and
pop
stos
inc
jge
inc
ljmp
idivl
sqrtps
iret
and
jbe
add
inc
mov
emms
fldt
mov
call
and
dec
nop
dec
mov
dec
andb
out
and
adc
jns
jae
ljmp
cmpsl
inc
or
add
add
mov
push
in
mov
out
jmp
dec
mov
or
sbb
inc
or
push
cmpsl
mov
ljmp
mov
ds
mov
dec
cli
or
add
or
fdivrs
cmp
add
rcrb
jmp
fildl
inc
xor
dec
mov
push
insl
add
xor
add
fs
cltd
xchg
add
fiaddl
ja
aam
flds
rcll
adc
mov
aaa
ret
xor
jmp
pop
jb
int3
arpl
mov
sbb
cmpsb
ljmp
xor
cs
rorl
xor
cmpb
xchg
ja
or
push
xor
and
jl
add
pop
mov
cld
lods
std
add
clc
pop
aam
adc
and
add
dec
lods
das
lea
or
pop
adc
jl
jb
test
or
cmp
dec
mov
adcb
pop
mov
add
sub
sub
xchg
fdivp
mov
pop
push
add
les
js
in
fcmovnbe
fstl
push
mov
xchg
adcb
inc
and
push
cltd
add
jno
adc
popa
add
adc
xchg
add
cmp
stc
push
jbe
cmp
pop
add
movsb
adc
cmp
outsl
andb
divb
mov
add
xor
and
jb
fimull
and
out
add
adc
incl
xchg
jg
dec
fadds
inc
add
aad
sti
push
fucomp
add
fwait
mov
jbe
scas
push
ret
leave
add
push
or
sbb
mov
pop
xor
rcll
repnz
push
icebp
das
sbbb
xchg
daa
sahf
add
enter
mov
lods
ja
cmp
push
push
mov
jp
neg
jno
add
sti
std
push
rorb
rcr
jo
mov
fidivrs
xchg
xor
clc
iret
sbb
add
mov
lsl
xor
je
scas
pop
sti
inc
sub
filds
pop
int3
stc
mov
push
push
sbb
jbe
fs
adc
xor
or
add
inc
sbb
cld
test
mov
add
dec
daa
add
push
jmp
mov
fsubp
jle
sbb
lock
cltd
mov
lods
mov
lahf
cmp
add
pop
in
pop
xor
jle
adc
pop
sbb
insl
xchg
xor
in
shl
stc
inc
jl
cmp
and
arpl
mov
orb
fs
pop
roll
decb
xor
xorb
ss
inc
cmp
repnz
std
add
mov
jle
push
ds
pop
pop
psubw
mov
shr
jecxz
and
sbbl
pop
pushf
pop
push
nop
cli
dec
xchg
outsl
add
out
jnp
je
lock
in
push
dec
std
sar
add
ds
out
push
cmp
testb
test
loope
testl
mov
movb
add
mov
push
arpl
mov
add
call
add
pop
loopne
stc
or
loope
cmp
mov
inc
sub
mov
mov
push
lret
shlb
daa
arpl
add
addr16
add
mov
sahf
testb
add
out
sbb
push
daa
negl
jle
cmp
jno
sahf
pop
hlt
in
xchg
subl
xor
pushl
mov
sbb
jge
cmp
pop
sbb
aaa
rol
loopne
sbb
cmpsl
mov
icebp
filds
dec
xchg
cli
jle
mov
lahf
addr16
jmp
sti
out
fsubs
pop
int3
clc
mov
divb
push
popa
ret
loop
pop
dec
shrb
jmp
add
jl
shl
ds
mov
sbb
cmpsl
in
push
mov
push
mov
icebp
sub
jmp
enterw
add
mov
outsb
idivl
sarb
ja
add
xchg
mov
add
aas
lret
call
jmp
mov
setns
ljmp
orl
or
lock
fildll
or
clc
and
mov
push
aas
cmp
std
jmp
lahf
andb
push
fsubrp
jge
neg
sub
add
add
cmc
jb
add
icebp
and
add
loope
inc
jmp
sarb
cli
mov
adc
mov
sarl
decb
jmp
mov
mov
xchg
js
pusha
xchg
ficomps
mov
pop
add
orb
aas
xchg
orl
rolb
jbe
jg
leave
in
mov
scas
add
sti
mov
lahf
lret
stc
cld
mov
xchg
in
add
stos
push
mov
std
add
arpl
inc
xorb
cmp
mov
repnz
ja
sub
fsubrs
and
mov
stc
dec
add
jp
dec
loope
mov
sti
sbbb
rorb
sub
fisttps
inc
and
cld
testb
out
ja
in
repz
mull
imul
loop
push
cli
cmovo
rclb
ljmp
jle
fdivr
add
pop
or
fcoml
lret
rcrb
aas
xchg
add
mov
sahf
mov
jmp
int
push
pop
push
inc
je
cmp
rolb
call
test
ja
vmread
inc
incb
ret
adc
jg
dec
bound
xchg
fcomp
xchg
adc
add
mov
or
mov
pop
inc
add
xchg
push
xchg
in
add
nop
sbb
pop
push
jo
fnstcw
cmc
loop
mov
outsl
icebp
add
lea
rcr
mov
rolb
push
push
push
xchg
dec
shll
inc
add
xor
dec
popf
push
sub
sub
roll
pop
sbb
or
rolb
mov
fisubrl
jb
add
jns
sti
leave
out
dec
add
out
notl
xchg
cmp
movsb
dec
add
fisubs
ret
mov
push
lret
xor
sub
mov
xchg
pop
ja
mov
leave
add
pop
xchg
or
out
push
add
cs
push
mov
add
cmpsl
pushf
dec
pop
cmpsb
jmp
mov
push
push
lea
push
xlat
add
xor
jecxz
mov
add
jns
cmp
xchg
add
loope
xrelease
hlt
adc
cmpsl
test
add
mov
faddl
fisubrl
xchg
mov
and
sbb
jmp
mov
ljmp
das
pop
xchg
int
loope
mov
mov
pop
leave
sub
and
loop
daa
cs
fcoml
mov
popa
js
scas
push
mov
jg
mov
mov
fisttpll
jmp
ror
enter
xchg
insb
sbb
test
mov
cmpsb
lods
add
inc
gs
mov
push
into
imul
data16
xor
mov
inc
push
fldln2
testl
mov
movl
jno
aas
or
xchg
jae
testb
in
add
or
xor
jmp
add
imul
addl
arpl
xchg
fadds
lea
mov
add
sbbb
subl
push
mov
sub
sbb
mov
outsl
mov
push
add
xchg
dec
jle
and
ss
dec
cmp
rolb
scas
fcmovnu
ja
sqrtps
jne
movsb
add
jbe
flds
pop
aad
cmp
push
cmp
mov
and
loopne
popl
rclb
inc
cmp
add
mov
jecxz
lods
rorl
ret
jmp
cmp
test
cltd
je
xlat
mov
cmc
xchg
cpuid
daa
movsb
and
and
add
xor
pop
add
push
arpl
mov
add
xor
lods
enter
mov
sub
jg
sbb
lods
test
mov
popa
jo
adc
or
or
in
js
add
cmp
dec
pop
call
fmull
cmp
fmuls
aaa
cmovno
cmpsb
lahf
push
pop
push
iret
cld
xor
xchg
xor
mov
push
stos
fs
push
mov
loopne
or
sbb
lahf
xor
add
das
pcmpgtd
ret
pop
cmp
and
mov
sub
jb
mov
xor
js
add
jecxz
inc
dec
inc
cmp
inc
dec
lea
mov
add
loop
and
push
xor
and
dec
in
sub
movsl
push
sbb
push
scas
jns
add
call
jno
sub
inc
aam
dec
stos
cwtl
cmp
enter
je
xchg
rcll
int
inc
insl
xchg
test
push
add
cmp
push
sub
shrb
jne
inc
dec
fstl
shrb
or
mov
dec
xor
aaa
add
push
cltd
push
pop
mov
rclb
cmpsl
xchg
inc
or
insb
out
das
mov
add
cmp
mov
scas
mov
clc
dec
add
getsec
gs
loop
imul
mov
rorl
xchg
jns
adc
pop
insl
xor
push
test
cmpb
fimuls
mov
es
out
sbb
jge
inc
cwtl
rcll
mov
mov
outsb
test
sbb
inc
cmp
push
sbb
add
cmp
rol
lcall
imul
add
and
adc
mov
aaa
stos
pop
pop
ds
outsb
mov
enter
test
adc
or
shll
and
add
fldl
push
dec
dec
mov
arpl
adc
xor
inc
inc
inc
adcl
test
mov
out
xor
mov
andl
sub
ljmp
add
imul
jo
fiaddl
adc
xor
cmp
iret
mov
cmpsb
cmp
push
andl
imul
in
sbb
loopne
dec
or
add
movb
ret
mov
fs
dec
pop
add
cmpsb
pop
xor
adc
imul
pop
fldl2t
fidivl
test
push
xor
cmp
cmpsl
ds
push
sbb
push
sub
add
ficompl
popa
roll
jp
add
mov
mov
cmp
popf
sub
add
and
cmp
xor
mov
bound
daa
dec
mov
in
add
jbe
int
cmpsl
jo
add
aad
sbb
inc
pusha
jl
add
mov
push
or
jne
aaa
sbb
pop
scas
mov
test
dec
jge
mov
daa
imul
add
sbb
pop
xchg
mov
rorl
inc
mov
ret
xchg
xor
shll
mov
dec
add
nop
loope
cltd
in
imul
adc
loope
je
shlb
imul
add
stc
xchg
fcmovu
sub
lret
shll
add
add
popa
in
imul
cmp
jg
pop
xchg
nop
flds
rclb
jnp
test
fs
imul
push
pusha
ljmp
stos
loope
cmp
add
mov
into
pusha
mov
mov
xchg
push
push
or
fisubrl
sti
and
add
mov
lock
push
bound
lods
stos
push
repnz
pushf
jno
pop
mov
lcall
sbb
push
add
outsb
insl
pop
sbb
lret
cmpsb
popf
mov
cmp
and
push
xchg
dec
push
sbb
inc
xor
movsb
rol
mov
cmp
jmp
andl
bound
shrb
adc
mov
push
imul
add
inc
insb
pop
mov
push
xor
sub
xchg
dec
jge
leave
fimuls
mov
add
pushf
andb
inc
add
inc
loopne
cmpl
push
lock
pop
xchg
pop
aad
gs
lods
or
rcl
arpl
mov
fcoml
and
inc
lock
lock
lds
rcl
cmp
inc
mov
orb
negl
add
mov
push
or
fadd
sub
xchg
xchg
inc
fdivs
test
je
das
in
push
fdivs
cmp
push
add
xor
outsl
push
mov
push
shlb
dec
cmp
jmp
cmp
arpl
sub
inc
sbb
pushf
xchg
mov
fadds
ja
outsl
mov
insl
pop
or
aam
or
test
out
add
es
dec
sub
pop
ss
sbb
sbb
add
lea
dec
outsb
ret
xchg
ss
imul
pop
je
loope
push
and
jne
add
dec
insb
mov
mov
add
mov
fldcw
aaa
pop
mov
dec
das
jg
add
xchg
int3
adc
add
xchg
out
stc
mov
rolb
cmp
enter
add
xlat
sbb
into
pop
sbb
pop
andl
xchg
lahf
cmp
out
pop
std
push
sbb
xchg
mov
addb
cmpsb
add
test
cmp
arpl
adc
aas
add
enter
sbb
mov
add
add
add
pop
pop
push
loopne
mov
adcb
rcrb
clc
add
push
adc
or
jo
inc
and
mov
sub
inc
shlb
xchg
push
inc
pop
in
dec
or
out
roll
add
outsl
add
jae
jo
repnz
js
je
ficomps
add
gs
push
insl
jl
jne
aas
jb
idivl
hlt
idiv
pop
push
stc
sti
out
out
mov
ret
sbb
imul
dec
jg
mov
sub
and
or
shll
fs
pop
inc
jb
out
push
je
popa
out
cmp
addr16
andb
das
cmp
mov
or
addb
outsb
insl
push
xor
jle
js
jbe
andl
xor
outsb
outsl
xor
mov
lods
test
sub
ja
cmp
movsl
sub
bound
popa
fs
insb
js
push
je
insl
cwtl
push
ret
das
enter
lods
ds
arpl
jns
mov
jo
cmc
int3
sbb
xchg
lods
push
aam
ds
out
and
cli
data16
sbb
inc
sub
mov
and
push
add
xchg
adc
dec
push
add
push
push
pop
cwtl
add
push
dec
push
add
test
cs
adc
add
loop
addl
jne
sub
mov
js
fimuls
rorb
or
and
cmp
aas
jge
add
test
je
mull
adcl
push
loopne
and
pop
shr
rep
ror
loope
out
movsb
or
sub
and
cmp
push
sub
jae
dec
adc
jo
in
adc
stos
or
push
mov
adcl
or
js
test
xor
test
cmp
roll
test
mov
mov
xorl
mov
mov
add
mov
jmp
movl
lea
jae
das
jecxz
add
cmp
push
mov
mov
je
push
sub
or
jecxz
inc
inc
pusha
push
push
push
enter
enter
jg
ds
dec
mov
jnp
cmp
dec
hlt
mov
add
dec
adc
push
or
mov
enter
inc
cmpl
jmp
bound
cltd
or
stos
es
sub
enter
pusha
cmp
jmp
pop
lcall
add
dec
or
inc
and
imul
cmpl
test
adc
repnz
sbb
lea
add
sub
adc
or
popa
hlt
mov
mov
ss
push
adcb
lods
adc
lea
cltd
leave
cmp
adc
addl
and
into
xor
adc
inc
roll
in
mov
lgs
les
adc
test
and
cmc
and
inc
call
and
adc
push
sub
pop
adc
jmp
push
jno
and
xor
mov
inc
adc
mov
mov
add
nop
xor
js
dec
mov
gs
fs
cmp
addr16
sahf
addb
cld
jne
push
adc
xchg
or
test
cmpsb
das
or
push
nop
fs
dec
aam
or
or
stc
push
pop
cmpsl
out
adc
or
mov
movsb
movl
pop
xchg
add
cmp
cmp
in
push
in
mov
repz
pop
in
mov
inc
add
in
xor
test
in
shll
je
adc
mov
sarb
mov
push
and
arpl
fiadds
jno
movsl
sub
and
punpckhbw
xchg
push
cs
inc
push
adc
and
addr16
addb
dec
repz
in
and
pushf
sub
dec
add
lcall
mov
jnp
rclb
jmp
mov
test
cmp
leave
shll
and
push
test
rorb
inc
mov
enter
add
call
ret
sub
xchg
and
pop
inc
mov
arpl
add
and
sar
and
xchg
movsb
mov
or
in
aad
adc
aaa
imul
adc
or
mov
mov
fimull
or
and
push
or
dec
adc
das
mov
call
sbb
cmp
test
cld
sub
jp
test
dec
popf
fs
jmp
lea
add
and
jg
sbb
push
mov
pop
pop
pop
daa
add
loopne
dec
leave
push
mov
push
push
add
mov
sarl
jno
mulb
or
push
or
or
jmp
mov
aas
clc
push
enter
int3
xchg
inc
rcrb
pop
ret
scas
push
ss
lea
das
push
push
xor
jp
cmp
sub
mov
cld
xchg
lea
push
jge
sub
xchg
ds
xor
xchg
inc
dec
inc
loop
cmp
sbb
repz
lret
addb
cmp
pushl
sbb
adc
push
and
xchg
fmull
dec
in
jne
push
call
cmp
add
sbb
sbb
adc
int
push
mov
and
xor
or
enter
mov
cmp
movl
test
into
les
or
adc
shrl
xor
jae
out
cltd
mov
sarl
sub
pop
jne
pop
dec
pop
mov
lock
into
shlw
lea
cmp
pusha
sub
loopne
or
pop
mov
pop
jne
and
aam
sub
loopne
mov
cmp
lds
pop
mov
jle
mov
adc
add
and
push
mov
outsl
inc
or
or
mov
mov
push
call
inc
push
into
dec
aas
or
jge
sbb
iret
stos
push
out
call
loopne
pop
add
and
pop
in
dec
or
lret
mov
roll
mov
sarb
loop
pop
jmp
sbb
das
xor
ret
mov
mov
insb
cmp
out
mov
sti
pop
jne
testb
jns
sbb
inc
nop
xchg
adc
inc
and
fldl
pop
add
ret
fwait
cltd
add
mov
xor
pop
out
lret
shll
movsb
dec
out
icebp
xor
lea
lods
jle
sarb
inc
cli
mov
mov
sub
mov
lret
jno
repnz
jle
jl
adc
or
fiadds
push
cmp
xchg
pop
mov
dec
repnz
xchg
pusha
push
jnp
push
jge
frstor
decl
cmp
lret
jbe
sub
addl
incl
inc
cmp
mov
push
mov
inc
pop
mov
and
pop
pop
loop
add
mov
movsb
jo
orl
push
jbe
cwtl
jle
je
or
pop
jmp
pop
adc
and
lret
pop
and
fimuls
sub
loop
lods
shrl
sarl
sub
mov
inc
cmpb
adcb
orl
ja
in
divl
push
xor
fadd
xor
nop
call
mov
fs
ficompl
out
adc
inc
mov
rcll
lret
adc
add
sbb
inc
mov
mov
les
xor
ljmp
push
inc
mov
lea
cmp
ret
pop
call
xor
ret
mov
push
rclb
and
mov
pop
test
mov
clc
shr
nop
add
ret
lea
je
leave
div
xchg
cmp
jne
xor
adc
or
adc
mov
clc
pusha
inc
adc
daa
shll
aas
dec
lock
mov
or
fs
adc
mov
cmp
pop
pop
pop
push
lret
or
push
out
pop
call
dec
divb
push
cmpsb
sbb
enter
in
cmc
inc
mov
add
jb
and
add
gs
xor
ret
push
mov
nop
or
sbb
adc
out
adc
or
cmpb
lret
mov
aam
clc
mov
sbb
or
mov
add
popa
push
jbe
jne
xor
jmp
sub
jne
push
add
or
call
sub
jmp
into
mov
adc
adc
daa
subl
push
mov
adc
dec
jne
jmp
jns
cmpl
sbb
dec
inc
mov
mov
incb
pop
push
and
and
adc
mov
js
push
mov
sbb
sub
call
dec
push
xchg
sbb
mov
sbb
push
inc
jb
test
cmpsl
inc
popa
jae
inc
dec
ficomps
jp
and
cli
mov
lret
adc
pop
add
call
lea
or
dec
pop
push
rol
addr16
mov
lock
push
cmpl
popa
sbb
xchg
push
pop
mov
sbb
push
push
hlt
hlt
test
adc
xor
fs
xor
cld
arpl
or
call
add
pop
mov
insb
mov
push
adc
cwtl
jne
xchg
push
loop
cmp
jmp
dec
push
add
insb
xchg
insl
push
pusha
add
cmp
je
cmp
jbe
std
and
sub
pop
pop
xor
jle
xchg
sub
dec
pop
test
adc
nop
xchg
pushf
inc
or
cmpsl
cmp
idiv
or
adc
clc
pop
roll
out
add
mov
or
cmp
adc
xor
jns
call
sarb
pop
pop
xor
in
push
add
sub
sbb
rorl
inc
inc
inc
js
lahf
arpl
jne
popf
xchg
ret
repz
pusha
add
cmpsl
add
mov
addb
cwtl
mov
push
sub
add
push
mov
adc
and
add
dec
xor
push
adc
les
arpl
and
add
loopne
pop
clc
les
add
pop
daa
sub
or
xor
dec
jo
scas
and
int3
adc
xchg
call
add
add
or
sbb
mov
add
xor
add
adc
and
pop
sbb
jmp
ljmp
mov
adc
and
dec
lock
out
adc
add
lock
adc
and
dec
repnz
push
hlt
and
dec
cmc
xchg
mov
testb
loopne
clc
cs
and
and
push
inc
cli
sub
cld
dec
pop
xchg
std
and
decb
sub
nop
add
call
adc
dec
mov
loopne
and
jg
sbb
cli
adc
mov
cld
and
dec
std
xchg
js
incb
mov
xor
shlb
adc
push
lock
sbb
js
repnz
nop
inc
cld
push
xchg
pusha
aas
and
orb
nop
jle
mov
sar
xchg
loopne
and
sti
orb
or
add
adc
popl
or
or
nop
or
or
or
or
enter
or
or
nop
or
or
enter
or
or
nop
or
or
or
or
enter
or
or
nop
or
or
or
or
xor
pop
nop
or
or
or
and
icebp
jo
xor
jg
add
sbb
std
adc
cmp
sub
or
pusha
xchg
loope
add
adc
add
cld
les
sarb
push
and
popa
mov
and
inc
adc
push
test
vmread
inc
adc
adc
call
adc
add
or
cmp
sub
mov
cvttps2pi
insb
add
adc
cmp
push
cmp
and
test
or
js
inc
adc
inc
and
jecxz
inc
sub
fadds
dec
sbb
xor
xor
and
js
add
cmp
sub
push
rol
mov
xor
inc
pop
cmp
lret
icebp
hlt
xchg
and
jo
sbb
add
gs
mov
les
or
xor
insb
adcl
and
sbb
xchg
jno
js
les
and
and
dec
jl
xchg
jo
test
adc
pop
adc
jo
inc
add
pop
cmp
adc
or
xor
and
outsl
sbb
push
xchg
and
sbb
push
xor
dec
and
dec
sub
adc
sbb
dec
inc
add
push
sub
and
push
mov
or
xor
lds
imul
xor
adc
fcmovne
negb
inc
clc
inc
int
or
mov
jo
add
xchg
inc
scas
and
imul
or
pop
inc
mov
sbb
clc
sub
fimuls
gs
into
repnz
out
cmp
mov
mov
lods
mov
mov
add
pushf
ljmp
mov
xor
adc
sub
dec
xor
pop
lea
loop
movsb
add
dec
cmp
sub
jne
arpl
ror
jb
arpl
lock
add
cmp
sbb
cmp
or
data16
mov
incl
push
fsub
out
xor
sub
xor
jge
int3
and
pop
or
or
add
stos
xor
arpl
and
test
lock
repz
sti
sbb
sbb
dec
dec
test
incl
popa
ficoms
pop
and
mov
mov
pop
jae
jns
sbb
test
adc
nop
adc
imul
andl
xor
add
scas
das
ret
lcall
fiadds
adc
push
push
or
xor
lcall
or
dec
imul
and
cmp
mov
fidivrs
push
inc
aad
sbb
push
sub
dec
pusha
push
das
bound
sub
fisubs
inc
nopl
xchg
pop
inc
repz
sub
jae
jle
out
ja
jg
xor
and
mov
sbb
shrb
dec
pusha
sbb
test
sub
and
and
inc
bswap
cmp
dec
lcall
mov
in
iret
xchg
xor
inc
in
push
inc
sarb
shlb
test
dec
data16
mov
sbb
add
xor
fnstenv
add
enter
sbb
and
sbb
push
push
xor
sub
pusha
movsb
les
sahf
lea
cmpb
dec
and
addr16
stos
and
adc
orb
out
lcall
arpl
shll
xor
sub
sbb
les
mov
mov
lahf
jg
xor
cli
arpl
cmpb
movsb
push
nop
sahf
cwtl
or
pop
rorl
xor
adc
mov
lds
push
scas
adc
jmp
and
or
subl
scas
pushl
adc
fwait
adcb
jnp
pop
nop
sbb
sbb
cmp
xlat
inc
add
mov
push
xor
adc
repz
imul
add
out
or
es
sub
sub
pop
fdivs
pushf
in
xor
jae
add
adc
xchg
arpl
sahf
mov
scas
testl
cmp
ret
in
add
sub
fbstp
inc
mov
sub
int3
sbb
xor
jnp
inc
and
call
mov
sub
lea
and
int3
popa
dec
ss
pop
and
out
mov
cmpsb
out
mov
stc
xor
xor
pop
mov
in
fisubs
sub
mov
dec
xor
and
ss
mov
jge
push
jecxz
jg
dec
stos
xor
fistps
xchg
ljmp
push
shll
fisubs
pop
dec
cmpsb
out
scas
enter
sub
sub
rcrb
mulb
out
roll
xor
mov
adc
nop
fdivrl
inc
xchg
dec
fldt
stos
mov
push
stos
movsb
mov
test
mov
xor
inc
leave
subb
stc
mov
imul
stos
out
mov
push
ljmp
sti
xor
pop
push
or
mov
pushf
imul
mov
and
ds
aaa
xchg
pushf
scas
xchg
cmp
scas
rep
out
test
setne
jae
or
hlt
stos
icebp
test
lret
in
dec
pusha
add
ret
movb
out
test
shlb
imul
sub
sub
sub
imul
xchg
out
add
xor
inc
inc
pop
movb
adc
xchg
aaa
into
ror
push
or
push
add
mov
xor
imul
xchg
jnp
cmc
inc
scas
cmp
mov
es
and
xor
pop
scas
xor
test
push
xchg
iret
sbb
dec
push
imul
sbb
bound
push
shrl
stc
cmp
cld
add
scas
repnz
sahf
pop
lret
dec
inc
mov
and
into
jno
push
insl
lods
xor
stos
mov
dec
sub
mov
or
insb
adc
lea
xchg
xchg
xorb
incl
mov
out
and
xor
out
mov
imul
sbb
aaa
dec
add
and
imul
mov
repnz
xchg
stc
in
dec
lds
lea
fwait
mov
imul
test
inc
pop
adc
pop
fcompl
pushf
inc
inc
out
adc
dec
jnp
push
cmp
cmpl
add
pop
xchg
ss
jge
pop
mov
sbb
and
xchg
mov
lods
mov
sbb
xlat
or
test
mov
pop
jae
insb
rol
xor
sbb
mov
jnp
in
add
push
pop
arpl
shll
jecxz
or
daa
adc
xchg
jnp
aam
and
sbb
cmpsb
mov
ds
pop
sub
neg
movsl
inc
xchg
inc
jl
cmp
popa
pop
movsb
push
pop
es
xor
push
adc
pop
push
jne
aam
jecxz
push
test
jbe
lods
dec
fsubr
popa
lret
stos
push
inc
adc
repz
jno
adc
add
mov
jnp
ds
ljmp
fiadds
scas
aam
cmp
es
lods
in
pop
mov
and
outsl
imul
fisttpl
test
push
inc
fcoms
and
arpl
filds
shlb
xchg
les
orb
out
les
add
arpl
xor
mov
gs
test
lahf
jp
or
sbb
mov
dec
jo
and
les
test
mov
aaa
aad
scas
or
sub
enter
shlb
data16
xchg
cmp
ret
cld
jae
out
test
and
mov
shlb
dec
popa
adc
inc
mov
pusha
stos
movsl
sub
lods
xor
idivb
and
lret
pop
jno
leave
arpl
sub
imul
lcall
jg
jne
mov
cmp
ret
imul
mov
add
dec
rcrb
into
test
and
add
push
xor
add
fadds
mov
sub
inc
sub
cmp
push
adcb
bound
dec
pop
shlb
jne
sbb
cmp
popf
adc
or
jnp
and
pop
jae
flds
push
mov
test
add
adc
arpl
xor
inc
xchg
jns
out
xchg
xlat
int
dec
cmovs
movsb
cwtl
pop
daa
xchg
push
sbb
pop
pushf
inc
add
and
and
mov
pusha
insl
pop
pusha
push
dec
dec
inc
adc
or
and
dec
shrb
xor
xor
cmp
inc
add
sub
push
inc
mov
scas
inc
or
pop
jge
pushf
and
xchg
jae
aas
jae
dec
push
push
xor
gs
into
inc
into
inc
in
push
mov
mov
xlat
lods
movsw
cmp
pushf
ret
popa
mov
inc
lahf
test
jle
into
rolb
pop
xchg
jmp
pop
pop
jne
mov
jnp
mov
lea
into
data16
mov
xchg
lcall
stc
cmpsb
xchg
test
mov
hlt
adc
or
dec
inc
push
dec
out
pop
xor
cs
push
push
pop
outsl
arpl
inc
adc
push
or
pop
inc
inc
je
sbb
inc
shlb
inc
js
imul
popa
fs
in
enter
sub
jne
insb
jg
outsl
outsb
lcall
je
inc
inc
or
jae
sahf
arpl
cmp
popa
insl
ja
movsb
sahf
add
push
adc
jo
imul
dec
mov
popa
addr16
js
sbb
addb
add
add
add
add
mov
add
add
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
push
sbb
mov
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
push
sbb
sbb
add
add
and
and
add
add
test
add
add
add
sub
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
jno
add
insl
add
imul
add
movb
popa
movb
pop
mov
add
push
mov
sbb
add
push
lods
add
dec
lods
add
dec
movsl
add
inc
movsl
add
or
add
inc
pushf
add
cmp
add
cmp
or
add
sub
add
adc
add
adc
add
sbb
add
sub
add
jnp
add
jae
add
add
and
add
and
add
and
add
and
add
jne
add
jno
add
jno
add
insl
add
popa
movb
pop
movb
add
add
add
add
push
mov
sbb
add
dec
lods
add
add
add
sbb
add
or
add
inc
pushf
add
or
add
cmp
add
cmp
xor
arpl
cmp
add
sub
add
sub
add
sub
add
jnp
add
add
and
add
and
add
and
add
jge
add
sbb
and
arpl
and
arpl
and
arpl
or
or
adc
add
sbb
add
sbb
add
or
add
jnp
cmp
add
cmp
and
add
and
add
add
mov
push
sbb
adc
add
and
add
and
add
add
add
sbb
pop
xchg
incl
add
add
sub
add
sbb
pop
xchg
incl
and
arpl
pop
xchg
incl
pop
xchg
incl
sub
add
incl
and
arpl
sub
add
sbb
add
incl
cmp
add
incl
pop
mov
add
test
dec
and
add
sub
imul
add
pop
add
adc
push
xor
add
add
push
xor
add
add
add
sub
add
jae
add
add
pop
lcall
pop
lcall
sub
add
incl
and
arpl
pop
lcall
and
arpl
pop
lcall
sub
add
fiadds
inc
mov
add
sbb
add
incl
dec
imul
add
and
cmp
add
incl
pop
jns
add
jnp
dec
sbb
push
sub
add
add
push
xor
add
add
add
sub
add
sub
add
add
pop
mov
add
pop
mov
fiadds
pop
mov
incl
and
arpl
pop
mov
arpl
and
arpl
pop
mov
arpl
pop
mov
incl
inc
xchg
incl
xor
add
incl
cmp
jae
inc
and
dec
sub
add
lods
add
incl
imul
add
sbb
dec
and
add
add
push
xor
add
add
add
xor
add
add
and
add
incl
and
add
incl
and
add
incl
and
add
incl
and
add
sbb
add
incl
and
add
incl
and
add
xchg
incl
sub
add
incl
dec
lcall
dec
sub
add
movsl
add
incl
pop
mov
add
sbb
dec
and
add
add
push
xor
add
add
add
xor
add
xor
sbb
push
add
sbb
sbb
push
add
sbb
and
pop
add
sbb
add
sbb
add
sbb
add
sbb
and
pop
add
sbb
sub
add
and
push
popa
movsl
add
add
incl
xor
add
adc
add
adc
push
xor
add
add
add
cmp
push
sahf
incl
dec
lcall
push
xor
add
add
cmp
add
and
add
add
dec
xor
add
add
add
add
add
add
add
add
add
add
or
add
imul
out
incl
pushf
jecxz
add
incl
arpl
out
add
xor
cmp
sbb
push
xor
add
add
add
cmp
add
cmp
push
sahf
incl
add
add
sub
add
add
add
add
add
xor
and
add
cmp
add
or
add
sbb
add
add
cmp
add
add
add
add
add
dec
lods
add
incl
xor
add
add
add
add
add
cmp
add
mov
add
sbb
add
adc
add
jae
cmp
dec
add
sbb
add
add
add
inc
pushf
add
cmp
add
incl
pop
cmpsb
incl
add
add
adc
xor
sbb
test
xor
add
incl
and
add
or
add
sbb
add
add
cmp
add
add
add
or
add
sub
add
movb
popa
movsl
add
add
add
cmp
jnp
incl
dec
stos
testl
sbb
add
sub
and
and
sbb
xor
or
add
add
adc
add
inc
pushf
add
incl
sub
add
add
add
cmp
pop
scas
incl
xor
add
add
add
and
add
add
add
add
cmp
add
sbb
add
dec
pushf
add
xor
add
dec
mov
adc
add
add
add
mov
arpl
dec
add
sub
add
incl
cmp
inc
add
adc
sub
add
dec
pushf
add
sbb
add
add
add
dec
movsl
add
dec
movsl
add
push
jnp
or
add
pop
mov
inc
mov
incl
xor
add
add
add
cmp
adc
push
add
and
add
and
add
cmp
add
add
incl
push
mov
add
incl
cmp
jae
sub
add
incl
sbb
add
and
add
scas
incl
sub
add
insl
mov
add
incl
pushf
iret
incl
push
jne
add
or
add
sub
add
dec
lods
add
add
add
insl
mov
add
incl
inc
jge
add
add
add
cmp
inc
stos
incl
add
add
cmp
add
or
add
adc
add
mov
add
jge
add
insl
xchg
add
mov
add
incl
dec
cmpsb
out
add
scas
incl
sbb
add
and
add
mov
add
popa
mov
dec
sar
add
mov
out
add
incl
dec
jne
add
adc
add
xor
add
add
add
cmpsb
fiadds
jae
incl
arpl
incl
sbb
add
or
add
testl
add
add
add
add
add
add
adc
add
or
add
add
add
adc
add
adc
add
sub
xchg
out
add
incl
adc
jae
sbb
add
incl
dec
lret
incl
xor
arpl
sbb
add
dec
lods
add
out
add
mov
pop
mov
add
ret
incl
adc
add
sbb
add
incl
pushf
shr
add
and
add
add
add
sub
xor
add
jns
add
movb
mov
add
xchg
add
jns
add
cmp
test
incl
xor
add
push
xchg
add
incl
arpl
testl
add
adc
add
or
adc
add
dec
lods
add
mov
fiadds
mov
add
sti
incl
jnp
incl
and
add
xor
dec
ret
incl
xor
add
incl
or
adc
sbb
add
pop
lods
add
sbb
and
add
and
sub
add
testl
and
testl
xor
incl
cmp
incl
inc
ret
incl
inc
lret
incl
xor
cmp
or
add
jne
add
scas
out
arpl
incl
xchg
jecxz
add
xchg
add
or
add
dec
pushf
add
add
add
inc
xchg
add
xchg
add
jge
add
xor
xor
add
testl
sub
jnp
sub
pushf
add
or
add
insl
jae
pop
ret
incl
sbb
jae
add
or
add
or
xchg
iret
fiadds
pop
lret
incl
or
add
add
add
dec
imul
incl
add
add
add
or
dec
out
add
push
jnp
dec
xchg
mov
arpl
pop
add
sbb
add
jne
add
mov
add
and
add
imul
add
sahf
add
and
add
inc
mov
add
add
push
stos
into
add
out
add
insl
lods
add
movb
add
jne
add
jns
add
cmpsb
add
mov
add
adc
add
adc
add
add
add
sub
add
push
movsl
add
add
add
xchg
add
and
add
dec
jnp
dec
cmpsb
incl
inc
pop
lods
add
xor
add
xchg
out
add
sub
add
inc
imul
lret
testl
add
add
and
add
inc
imul
add
add
push
jnp
dec
iret
out
add
lcall
sbb
add
mov
xchg
add
sub
adc
add
out
inc
mov
dec
add
sbb
add
add
add
push
xchg
add
jne
add
test
sub
add
sbb
add
xor
pop
mov
into
add
jae
mov
incl
dec
insl
jnp
inc
stos
incl
cmp
add
fiadds
arpl
mov
cmp
pop
add
mov
incl
inc
stos
out
push
jge
add
mov
push
incl
inc
mov
add
gs
and
add
lret
incl
xor
incl
or
add
sbb
add
add
add
jge
add
jns
add
out
add
test
sbb
add
sub
add
out
jae
fiadds
xor
add
incl
cmp
add
sbb
add
arpl
test
add
incl
xor
incl
sub
add
jge
add
into
add
movb
stos
lods
add
movsl
add
mov
xor
movb
mov
add
movsl
add
xor
add
add
add
sub
xor
incl
jmp
add
adc
add
sub
add
add
incl
inc
dec
lods
add
inc
arpl
pop
sar
add
inc
pop
add
add
push
test
and
add
testl
dec
add
popa
lods
add
jnp
cmp
add
sbb
add
add
add
or
add
or
add
test
jae
fiadds
sbb
add
add
add
mov
add
xchg
add
out
incl
fsubrp
incl
sbb
add
cmp
arpl
mov
test
incl
test
incl
arpl
incl
inc
sahf
out
arpl
incl
push
sar
add
incl
arpl
out
add
incl
movsl
sti
incl
test
incl
dec
incl
xor
mov
and
arpl
or
or
dec
xor
add
add
sbb
add
add
add
sbb
add
add
add
testl
out
idiv
add
repz
xor
arpl
dec
pop
mov
add
add
cmp
add
arpl
xor
add
sbb
add
imul
or
adc
sub
add
insl
mov
add
incl
pop
out
add
incl
inc
mov
lods
add
add
add
add
push
xor
add
add
push
xor
add
add
add
incl
inc
xchg
incl
div
incl
arpl
add
into
add
testl
jae
incl
imul
add
out
add
out
add
out
cmp
add
add
testl
sub
add
sub
or
add
or
add
sbb
add
and
add
sbb
add
sbb
add
or
add
add
push
xor
add
add
push
xor
add
add
add
add
dec
xchg
incl
dec
xchg
incl
idiv
incl
xor
jnp
jae
out
mov
incl
jae
incl
push
mov
into
add
out
pop
mov
add
incl
pop
sar
add
incl
pop
sar
add
out
add
out
add
xchg
add
xchg
add
sbb
add
sbb
add
add
cmp
add
and
add
and
add
add
push
xor
add
add
push
xor
add
add
add
add
push
sahf
incl
dec
lcall
mov
add
lods
add
idiv
add
out
cmp
add
testl
arpl
out
add
mov
add
popa
mov
xor
add
dec
jnp
and
add
push
test
adc
sub
adc
add
cmp
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
add
incl
push
sahf
incl
incl
incl
or
add
mov
add
testl
arpl
testl
pop
sahf
out
add
cmp
cmp
adc
xor
add
sbb
add
adc
add
adc
add
adc
add
adc
add
and
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
add
incl
pop
cmpsb
incl
incl
incl
add
add
adc
dec
add
fiadds
arpl
incl
and
add
dec
xchg
add
incl
test
incl
push
mov
push
add
add
add
incl
arpl
incl
incl
incl
incl
mov
scas
incl
incl
idiv
incl
pop
jge
add
out
add
testl
imul
jmp
add
out
add
jecxz
add
jecxz
add
add
sar
add
iret
incl
pushf
lret
incl
xchg
incl
mov
incl
test
incl
jnp
incl
jae
incl
imul
add
incl
incl
incl
incl
incl
incl
incl
incl
pop
jne
add
dec
xchg
add
cmp
add
lods
add
repz
fsubrp
incl
fsubrp
incl
jmp
add
out
add
jecxz
add
add
add
sar
add
iret
incl
xchg
lret
incl
xchg
incl
mov
incl
test
incl
jnp
incl
