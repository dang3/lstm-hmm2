mov
ljmp
cmpsl
repnz
call
mov
pusha
movb
pusha
mov
pushf
paddq
out
ficompl
jmp
mov
pushl
sbb
adc
fbstp
nop
add
push
mov
push
lea
cmp
jae
mov
jmp
mov
mov
push
push
inc
call
test
jne
cmp
je
cmp
pop
pop
imul
std
pop
xor
pop
ret
mov
and
add
sbb
nop
add
in
fistl
jo
sbb
leave
decl
shl
scas
not
dec
je
mov
std
xor
xor
push
push
inc
inc
aas
cmp
jb
pop
pop
fdivr
arpl
in
push
add
push
push
nop
inc
hlt
mov
hlt
push
adc
sbb
insl
sti
outsb
mov
cmp
xchg
sbb
add
mov
mov
mov
movb
mov
stos
stos
mov
movb
push
clc
movl
je
mov
jge
rclb
mov
fistpll
mov
fimull
adc
pusha
push
call
mov
fisubrs
decl
or
enter
inc
shlb
jmp
jl
ret
pop
bswap
hlt
jmp
push
lea
jg
push
jb
addr16
pushl
sub
rorl
add
movsl
mov
mov
imull
imul
clc
and
rep
sar
mov
xor
add
jne
pop
lahf
push
movsl
rcr
push
and
jmp
lea
xchg
push
loope
shl
push
pop
insb
rclb
mov
rcr
fisttpll
call
pop
lock
aaa
nop
incl
cmp
adc
pop
sub
cmp
push
sbb
cmp
pop
sti
sbb
inc
cmp
push
push
push
xor
xchg
dec
mov
movntps
rclb
mov
js
jp
scas
inc
sti
adc
rcll
cmp
push
dec
jne
mov
mov
jecxz
ds
mov
pop
lahf
push
cli
add
iret
arpl
push
jne
cmp
jo
push
mov
or
insb
pop
ret
pop
push
adc
ret
cltd
sub
inc
in
xor
div
jl
mov
sub
push
pop
jge
pop
dec
mov
and
push
imul
pop
pop
mov
jmp
mov
cmpsb
je
sbb
sbb
xor
jge
roll
mov
inc
cmp
mov
fdivrp
scas
xorb
add
or
or
mov
or
je
shl
test
sub
shrl
lods
add
push
jle
mov
adc
andl
jp
mov
adc
mov
jbe
lock
add
mov
repnz
pop
sub
arpl
stos
loop
jge
or
stos
std
js
fs
cld
push
mov
mov
les
ja
incb
or
sbb
mov
add
mov
push
fwait
movb
test
fs
movsb
push
rcl
or
fstps
outsb
testb
and
jle
pusha
push
lea
dec
fbld
outsb
pop
imul
adc
sbb
divb
xor
decl
push
jne
test
je
mov
sbb
jne
add
add
mov
jne
xor
jmp
leave
sbb
je
mov
xchg
jmp
clc
jmp
cmc
ret
fcompl
xlat
push
cmp
adc
sbb
inc
das
mov
sbb
sub
jl
adc
mov
pusha
xor
insl
xor
add
std
mov
icebp
sbb
dec
adc
cmp
enter
fildll
pop
pushf
mov
adc
mov
ja
mov
adc
push
decb
pop
pop
lea
pop
int
push
pop
push
mov
and
push
push
lea
mov
push
jbe
faddl
les
cwtl
fistps
cmc
push
push
and
stc
mov
lods
cmp
mov
pop
push
dec
cmp
adc
sub
aas
inc
jg
call
jae
je
inc
push
or
and
sub
mov
push
insl
stc
jle
jmp
mov
loope
jmp
mov
add
test
add
cmpsb
push
add
or
mov
dec
lret
test
or
ret
outsl
lcall
idivb
jg
loope
jge
push
push
movsl
fmull
pushl
cmp
pop
lret
mov
je
cmp
jge
fsubrl
das
jle
mov
pop
mov
inc
add
jne
fisttpl
cmp
xchg
dec
and
push
shrl
xchg
aaa
ss
imull
stc
sub
adc
inc
dec
shll
mov
pushf
cmpsl
call
mov
movsb
stos
xor
jp
mov
mov
outsb
dec
pop
jmp
enter
or
add
add
cmp
lea
sbb
inc
out
adcl
lea
cltd
lock
mov
push
loopne
jg
push
rorb
les
jbe
jp
mov
dec
pusha
ret
mov
sbb
loopne
lcall
call
jne
xchg
jg
cmp
stc
cli
mov
lret
js
insb
insb
cmpb
inc
ret
xor
jae
cld
sub
jo
push
sub
sbb
cmp
fdiv
mov
rol
fs
enter
push
mov
outsb
and
and
mov
mov
inc
add
pop
sti
das
mov
cmpl
inc
push
pop
add
enter
adc
add
cmp
add
jns
lock
out
inc
gs
and
add
and
add
subl
insb
and
push
push
sbb
int3
mov
push
ret
jmp
mov
xor
dec
xor
sbb
pop
icebp
lcall
sub
inc
clc
sub
ljmp
push
cmp
mov
ja
aad
pop
shlb
pushf
jle
push
call
outsb
pushf
cmp
pushf
mov
mov
mov
cmp
jne
test
je
mov
jbe
or
mov
pop
dec
ror
fsub
cli
add
test
mov
sub
push
xlat
mov
test
add
fidivrl
iret
sbb
inc
push
mov
in
sbb
sbb
jne
jo
inc
pop
incl
sub
pop
xchg
adc
dec
mov
es
adc
push
sbb
adc
mov
or
lds
incb
shr
sbb
add
add
push
scas
jmp
cmovs
cld
movb
sub
push
push
dec
or
cld
push
push
rclb
xchg
jle
mov
in
andl
mov
mov
mov
in
mov
add
xor
cmp
ja
adc
call
mov
dec
repz
pop
pop
or
je
movb
pop
pusha
lea
mov
inc
subl
jmp
mov
add
pop
add
mov
ss
jl
fcmovnb
cmpsb
sbbl
loope
pop
inc
lahf
push
xchg
or
add
xchg
push
mov
test
movl
xor
push
xor
pop
ret
cmp
stc
mov
repnz
jae
cmp
inc
add
add
outsl
pushf
lea
adc
jge
pushf
bsf
and
push
rol
ror
cmpsb
jg
inc
jnp
xlat
pusha
mov
ds
push
mov
add
fidivl
and
sub
pop
mov
sbb
scas
pushf
push
icebp
lret
popf
and
mov
adc
jmp
push
mov
data16
hlt
std
aas
repz
in
mov
mov
les
mov
pushf
std
push
pusha
cld
mov
mov
iret
push
pushf
pop
lea
pushf
jmp
sub
mov
rorb
icebp
js
and
add
mov
sub
cmp
insb
and
add
maskmovq
notl
mov
test
rcrb
adc
push
fildl
inc
mov
ret
add
stc
add
xchg
dec
loopne
mov
push
push
ds
mov
mov
nop
ljmp
mov
sub
incb
pmaxub
in
shlb
clc
stc
xchg
repz
test
js
jb
rcrb
sarl
push
push
or
push
jo
ss
cmp
jl
add
cmp
in
stc
sbb
notb
add
xlat
loopne
stc
add
pushf
push
pushf
inc
test
icebp
aad
mov
cld
adc
push
mov
out
jns
jg
bswap
push
dec
pop
shr
data16
movsl
mov
pop
sarl
pushf
cmp
adc
push
or
cmp
push
push
popf
mov
std
sub
push
push
inc
push
push
mov
mov
or
mov
pusha
pushf
xor
push
push
jnp
add
xchg
lods
into
mov
pop
mov
ret
scas
add
add
and
sbb
push
std
or
xor
mov
pop
push
sub
mov
test
scas
inc
adc
fisttpl
sub
jmp
rcr
mov
stc
adc
dec
in
pop
psubb
pushf
clc
test
fdivr
sub
jl
push
mov
or
clc
mov
es
adc
mov
shl
jle
inc
insl
js
shlb
lcall
push
or
fsubrl
int
dec
xchg
add
mov
jecxz
jl
inc
push
std
fs
cmc
and
push
or
pushf
andl
mov
push
ret
mov
fs
loope
sbb
fs
in
pushf
sub
sub
lahf
imul
or
or
cmp
pushf
cmp
dec
inc
dec
lret
cwtl
mov
insl
mov
or
push
add
jg
sbb
and
and
cwtl
shlb
adc
push
jg
or
addr16
and
fisttps
loope
out
mov
pop
shr
jo
leave
lock
xchg
or
or
in
les
adc
add
mov
or
push
or
cld
stos
loop
ss
xor
push
push
pushf
lock
adc
adc
or
cmp
cmc
aas
into
cs
push
push
xor
cmp
jle
ret
sbb
in
adc
mov
cmp
dec
cmp
jg
jge
movb
jmp
or
jne
inc
inc
cmp
jl
test
pop
jle
mov
sub
mov
dec
mov
push
pop
add
pop
pop
ret
or
test
mov
jnp
imul
or
push
pop
movsl
inc
inc
insl
rolb
call
xor
cmp
jne
jb
ret
jmp
pop
pop
shlb
mov
push
test
clc
adc
mov
or
push
xor
push
cmp
push
bndstx
sbb
sbb
in
pusha
clc
into
and
call
inc
aad
push
inc
ret
add
xor
loope
push
daa
push
dec
add
aad
and
xor
and
push
cltd
movsb
popl
or
fmuls
subl
mov
push
xor
std
dec
push
roll
jmp
out
sbb
roll
sub
fnsave
cld
pop
push
sbb
call
push
push
push
mov
jle
notl
xor
dec
cmp
add
les
add
pop
dec
mov
aaa
lret
lods
adc
or
mov
jo
aaa
pushf
cmp
xchg
sbb
pop
ljmp
push
add
ret
push
fistpll
sub
push
sub
dec
mov
push
fimull
xchg
imul
in
icebp
sbb
add
mov
adc
adc
sahf
pop
sarl
lock
fmulp
js
jb
pop
sbb
sbb
adc
mov
mov
pop
or
mov
divb
add
lret
pop
in
dec
sub
mov
loop
lret
ret
idivl
mov
add
add
jmp
xor
pusha
call
popl
jns
push
push
sbb
js
sti
nop
push
xchg
xchg
mov
shr
jle
pop
movsl
xor
repz
push
jl
sbb
cmp
je
push
orl
or
jmp
and
insb
shl
scas
popf
cmp
push
push
data16
fs
aaa
ret
push
push
inc
and
adc
test
mov
push
and
sub
ss
lahf
push
scas
mov
push
cltd
fs
sub
add
pushf
xor
mov
sub
cmovne
lea
andb
inc
dec
in
mov
mov
inc
mov
mov
inc
fstps
jl
das
mov
pop
fadd
pop
fstl
aas
sub
xor
cmp
pop
call
or
rcrb
push
push
xor
and
into
inc
loopne
sbb
push
cmc
mov
js
jg
add
inc
pop
jbe
loopne
push
pushf
inc
lahf
push
push
stos
sbb
test
clc
dec
add
mov
orl
jg
adc
and
mov
mov
or
decl
push
adc
inc
movb
roll
mov
rcrl
je
cmp
je
adc
xor
lea
or
call
mov
sub
mov
mov
movb
add
pop
sub
mov
es
xor
sub
sub
sbb
jecxz
cmp
mov
pop
pop
leave
pop
mov
adc
xchg
mov
inc
fsubrl
cld
push
lds
movsl
ss
or
outsl
out
ds
mov
mov
lret
dec
add
fstps
fistpl
push
int
mov
rcrb
aam
lods
dec
and
out
xor
enter
sbb
popf
jb
pop
add
addb
push
lcall
push
ljmp
adc
xor
cmp
pop
lock
add
pop
push
push
inc
xlat
xor
cmp
sbb
movsb
xchg
xor
mov
xor
int3
testb
add
das
lds
stos
mov
or
mov
push
lret
clc
add
pop
mov
std
lcall
adc
fldl
addr16
jl
insl
flds
push
dec
mov
movsl
jp
push
imul
sub
xor
inc
movswl
inc
scas
mov
shlb
jmp
fiaddl
cmp
repz
mov
ja
jbe
mov
add
mov
sbb
jae
dec
xor
push
or
jo
and
sbb
sbb
mov
addl
popf
sbb
or
add
rcl
mov
pop
xor
cmp
or
inc
xchg
adc
lret
xor
adc
push
sbb
mov
ret
cmp
jg
outsb
push
and
push
and
add
mov
popa
add
rolb
add
push
pop
fs
push
adc
jl
test
xor
mov
mov
popf
mov
inc
popf
jmp
jb
in
pop
jg
fdivs
xor
jmp
pop
adc
out
sbb
out
sbb
pop
push
call
inc
ror
jne
sub
mov
push
fadd
loop
sbb
jns
roll
inc
sbb
push
push
push
enter
adc
or
push
nop
or
cltd
inc
or
add
mov
mov
cmp
add
ljmp
xor
add
add
push
cmpsl
lock
push
cmp
notl
and
int3
adc
push
or
popa
jne
pop
inc
test
push
mov
in
imulb
shlb
roll
push
mov
sti
jb
push
and
je
xor
cmp
sub
xor
push
mov
inc
scas
inc
in
arpl
fnstenv
push
shl
orl
out
loop
lret
add
or
inc
push
mov
std
je
das
or
pusha
lock
mov
sub
adc
js
js
adc
adc
lds
push
push
push
icebp
mov
jbe
mov
push
xor
ss
jnp
inc
stos
push
bound
shlb
jl
test
push
in
add
idivb
int
sbb
cwtl
or
push
sub
rcrb
xor
nop
cli
or
sub
daa
movsb
pop
js
jb
or
stc
mov
or
push
ret
inc
jmp
into
jge
adc
out
push
or
or
xlat
nop
js
sbb
add
pop
pop
push
fildll
pusha
fs
mov
jnp
mov
cmp
jo
sti
rolb
call
jne
or
mov
ss
cmp
jne
or
push
and
call
fcoms
call
fsubs
add
addl
mov
inc
insl
xor
xor
mov
dec
dec
jne
jmp
push
sarb
adc
lods
mov
push
mov
cmp
mov
mov
push
mov
jl
jno
pop
movsb
xor
push
mov
or
aaa
push
mov
jno
jb
or
clc
and
hlt
out
es
and
and
push
push
in
and
and
cmp
popa
and
jae
loopne
lret
js
adc
lsl
push
cmp
push
fisubs
add
mov
test
jae
push
mov
push
scas
icebp
xor
lret
push
jmp
push
add
outsb
sub
repnz
jge
adc
xacquire
pop
pop
xorl
or
inc
push
xchg
or
dec
xchg
add
sub
nop
subb
rol
stos
addl
xchg
repnz
or
adc
adc
movsb
test
leave
push
in
rcl
insl
jne,pn
adc
pushf
or
push
adc
pop
outsl
pop
stos
jbe
sub
mov
inc
ret
hlt
sbb
fcoms
sub
mov
sbb
pushf
fildll
sub
cltd
out
add
fmull
cmp
push
lea
dec
cmp
jo
fisubrs
cmp
pop
adc
cmc
psllw
push
cmp
mov
rorb
push
dec
push
push
in
test
mov
mov
xlat
loopne
imul
leave
daa
and
mov
repz
mov
pusha
lahf
inc
jp
and
jl
or
loopne
aas
cmc
adc
mov
dec
bound
int3
je
add
fiaddl
inc
sub
imul
or
mov
mov
mov
test
jle
testb
mov
sbb
pop
mov
mov
cmpb
jne
cs
lock
cld
sub
push
mov
mov
fsubr
or
shrl
call
test
push
jmp
pop
push
push
jl
pop
cmp
push
test
adc
mov
inc
mov
lret
loope
dec
leave
nop
sbb
pop
fmull
sbb
or
add
inc
negb
sbb
ficoms
sbb
mov
xor
pop
fcmovbe
cmp
aaa
xchg
jo
push
cmp
jle
mull
out
inc
cmp
lods
adc
loopne
imul
and
sbb
leave
pop
ret
inc
sbb
lahf
sub
sub
mov
push
mov
xchg
dec
push
out
add
out
or
and
adc
add
add
outsl
int3
adc
aaa
push
sarb
pop
push
or
dec
pop
inc
add
mov
std
push
xor
in
roll
adc
cs
mov
imul
mov
nop
push
in
mov
pushf
test
jge
push
or
jo
fstpt
or
cmp
jl
inc
add
rolb
mov
mov
inc
ds
push
mov
dec
adc
ret
sbb
test
in
mov
imul
xchg
pop
in
test
jg
in
cmp
jl
lahf
add
sbb
sete
push
mov
xlat
push
xor
rolb
movb
push
or
dec
add
cmpsl
and
add
inc
shll
gs
xor
insl
jbe
out
sbb
push
je
inc
or
clc
daa
adc
cmp
mov
fbld
lahf
ret
int3
mov
mov
arpl
and
daa
pop
push
xchg
adc
jno
add
lods
pop
lret
fs
cmp
pop
pop
lock
cmp
sbb
adc
jb
pop
in
fcompl
jmp
iret
gs
mov
les
nop
mov
pop
mov
in
xchg
pop
mov
add
sub
pusha
add
into
adc
push
add
jle
test
les
lahf
mov
pop
or
inc
jne
ds
jge
addr16
dec
mov
rcr
sub
and
sub
push
pop
adc
sahf
aad
clc
add
jle
cmpsb
xlat
sti
cmp
mov
les
in
pop
adcb
mov
test
les
push
lods
pop
pop
jnp
adc
xor
daa
add
push
mov
xorb
sti
mov
pop
hlt
cmp
and
js
sbb
fisttps
push
icebp
mov
push
les
insb
lods
mov
add
lock
fists
push
sbb
jl
mov
and
push
lock
push
dec
jg
xchg
push
lret
add
inc
mov
mov
or
stos
addb
mov
out
cmp
push
push
fistl
lods
or
add
xchg
sbb
enter
inc
xchg
cmpsb
adc
into
lahf
cmp
orl
je
idiv
loopnew
sub
cmp
push
push
mov
je
xchg
cmc
shll
lcall
dec
shrl
fndisi(8087
sar
inc
jne
icebp
sbb
sti
adc
xchg
add
xor
sub
jl
addl
daa
xor
jl
pop
inc
dec
ljmp
ret
ds
xchg
pushf
nop
nop
mov
xor
ret
mov
xchg
outsb
imul
jbe
mov
add
and
movsl
add
sbb
movsb
lods
jno
fisttps
push
dec
movb
rcl
adc
xor
adc
mov
push
mov
pop
xor
adc
pushf
fisttpll
ljmp
clc
and
mov
imul
adc
imul
sbb
jne
test
lret
push
add
inc
jge
cmp
jl
cltd
idiv
clc
cmp
fimull
fildl
fstpl
ds
addr16
and
xor
jnp
or
pop
cmp
jge
mov
movsb
push
sub
addl
sub
je
push
fists
sub
or
or
push
sbb
mov
dec
gs
inc
jae
xor
js
mov
or
mov
jmp
les
shlb
dec
clc
test
mov
dec
jle
cmp
je
inc
cmp
jl
jmp
mov
ss
pop
pop
adc
xor
rsqrtps
jle
or
add
js
dec
pop
or
jb
out
sbb
pop
or
mov
hlt
and
js
sbb
xor
pop
xor
sbb
in
lock
add
mov
loop
into
enter
and
cmpps
mov
jb
sbb
mov
cmpl
dec
popa
adc
icebp
dec
xor
sbb
cmpsl
inc
out
imul
cmp
xor
jmp
ret
push
push
or
and
add
xor
mov
dec
sahf
cmp
sub
and
mov
inc
enter
or
dec
mov
add
pusha
inc
dec
mov
add
inc
or
push
cmp
scas
jmp
jb
andl
test
das
jae
sub
sub
mov
cmpsb
push
inc
mov
lods
ret
sbb
push
jmp
repnz
and
push
dec
scas
xor
or
xor
scas
ret
inc
jns
neg
sbb
pop
or
mov
out
cmp
or
sgdtl
mov
add
loope
arpl
stc
add
pop
pop
mov
xlat
cmp
and
mov
add
icebp
fidivrs
ljmp
cmp
sub
sub
jno
cmp
jb
mov
sbb
pop
gs
pop
call
cmp
ljmp
andl
pop
pushf
push
add
pop
xchg
aam
push
and
or
cmp
jmp
test
fisttpl
and
dec
or
xor
data16
or
cltd
push
pushf
std
into
push
popa
dec
pop
and
mov
cwtl
imul
ficoml
testb
xchg
add
dec
cmpl
adc
das
fmuls
and
in
stc
or
or
add
cs
xchg
add
clc
hlt
lock
call
pop
aam
fsub
jb
pop
fsub
in
loopne
mov
fcompl
fisubl
or
in
mov
pushf
inc
sub
xor
int3
add
mov
incl
fsubrs
in
mov
aam
pusha
sahf
push
inc
sub
aas
cmp
add
scas
rorl
or
mov
rorb
loopne
loop
mov
outsl
and
inc
adc
xchg
sbb
daa
call
dec
and
fmull
fmul
and
insl
scas
add
aas
add
mov
add
add
jbe
dec
repz
push
pop
dec
ds
lcall
hlt
jns
out
mov
xchg
test
shll
mov
jp
bound
iret
repz
xor
add
pop
out
sahf
cmpsl
loop
mov
jns
mov
repz
out
cmp
sbb
out
push
or
les
sahf
add
xchg
imul
lods
add
sbb
pop
push
lods
push
stos
sahf
sbb
dec
movl
add
imul
js
insb
push
dec
repz
out
pop
cs
repz
adc
push
lock
repz
rcr
ror
mov
iret
scas
movsb
pushf
xchg
mov
jbe
pop
stos
cmp
jns
loope
popl
xor
inc
in
pop
out
int
dec
adc
loopne
inc
adc
add
iret
repz
or
or
cmp
repz
or
mov
add
cmp
mov
add
pop
in
enter
pop
or
add
jle
add
inc
dec
add
in
enter
ss
js
subb
adc
scas
nop
xchg
lret
mov
xlat
dec
loopne
inc
inc
sub
add
fidivrl
mov
xor
nop
dec
push
push
dec
js
mov
fdivs
add
shlb
pop
lahf
jns
push
cmp
daa
nop
xchg
push
jne
xchg
sub
pop
fists
or
push
push
cld
dec
push
pop
outsl
insb
xor
cs
insb
add
dec
push
inc
push
dec
test
imul
aad
cmp
dec
inc
dec
push
adc
orb
pop
push
insl
lsl
adc
incl
sti
xor
xor
dec
add
add
or
add
or
mov
push
call
aaa
adc
xor
fs
ds
out
pop
add
or
popa
cmp
xor
or
arpl
mov
push
gs
arpl
insl
gs
cmp
jb
idiv
fbld
je
imul
add
add
adc
cmp
xor
sti
fnstsw
cmp
xchg
es
xchg
jae
sbb
insb
and
xchg
fistl
dec
jne
mov
divl
adc
outsb
gs
jne
testb
insl
outsl
outsb
gs
inc
rdpmc
or
arpl
pcmpeqd
sbb
ja
mov
fs
stos
nop
imul
sti
jo
push
fs
add
jb
mov
pushl
data16
push
dec
inc
pop
add
inc
dec
or
popa
data16
outsl
fs
cs
add
lock
ss
sbb
add
push
jns
mov
and
addr16
into
xor
sbb
and
dec
or
pop
inc
imul
imul
jb
mov
pop
ljmp
cmp
outsb
or
xor
sbb
lcall
cs
add
out
addr16
inc
push
inc
inc
in
out
loope
bound
arpl
sub
loop
add
or
outsl
sub
adc
dec
sbb
sti
mov
jg
xor
xor
and
ja
push
pusha
dec
outsl
and
cmp
add
imul
jbe
pop
sub
jp
dec
shl
sub
xor
xor
sub
inc
mov
add
dec
inc
and
sub
push
mov
outsl
ja
and
and
push
or
sbb
jbe
imul
cs
inc
xor
dec
push
call
js
xchg
aaa
xor
sub
fbld
jo
fiadds
pop
cwtl
jge
js
ja
sub
popf
jne
je
fs
jne
pop
and
je
cmc
bound
and
xchg
or
add
inc
arpl
cmp
jne
cmp
mov
push
gs
cltd
cltd
data16
push
inc
xchg
loopne
push
addr16
sub
sub
dec
push
push
xchg
xchg
or
and
push
push
das
xor
daa
outsb
jne
test
xchg
gs
jne
js
pop
cmp
pop
outsl
push
push
imul
pop
pop
ja
inc
add
loopne
xor
add
dec
pop
cs
xchg
jl
cmp
jae
imul
insb
sbb
add
cs
incb
mov
sub
jo
stc
mov
addr16
outsb
add
pop
or
push
ficompl
inc
dec
cs
test
mov
std
cmpsb
addl
add
aam
adc
aam
incb
jns
lock
je
and
push
add
inc
dec
inc
lock
or
icebp
add
pop
add
es
das
xor
mov
lahf
push
je
inc
gs
inc
xor
inc
mov
roll
jb
je
jns
xchg
push
xchg
push
arpl
lock
popa
out
jae
ja
mov
stc
pop
test
fnsave
xor
cmp
xor
cmp
daa
jbe
out
aam
scas
push
outsb
cmp
ja
bound
jo
jb
mov
jae
add
inc
outsl
mov
dec
pushf
aaa
mov
je
jne
cmp
shlb
ja
js
or
push
bound
outsl
lcall
ss
xor
jb
jae
inc
pop
dec
inc
aas
dec
mov
xor
xor
ss
cmp
inc
inc
lcall
inc
inc
and
and
and
inc
cmp
das
and
push
xchg
xor
aas
cmp
and
add
mov
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
orl
pushf
inc
clc
nop
out
fbld
rol
adc
repnz
sar
stc
mov
rcrb
cmp
ret
push
jmp
out
clc
pushf
add
movl
pusha
mov
sar
xchg
or
das
pushl
pushf
push
sti
xchg
sub
mov
xchg
shlb
pop
lret
push
rolb
or
mov
and
xchg
xor
inc
mov
cmpsb
idivl
xchg
lods
cmp
push
jg
push
push
lods
std
out
push
mov
push
mov
sbb
jl
mov
mov
sub
pop
in
ja
add
lcall
adc
in
mov
mov
dec
repnz
or
testb
lock
int
cmp
inc
dec
mov
mov
in
add
hlt
scas
fsts
adc
jb
xchg
pop
lcall
rorl
jo
inc
push
push
push
mov
aas
push
neg
daa
shl
push
enter
and
out
jg
cmp
add
in
or
mov
test
rol
cmc
xchg
lea
fisttpll
and
push
fwait
push
push
mov
push
andb
popl
xchg
scas
push
repnz
push
pop
mov
stc
fwait
cmp
pushf
push
aas
cmp
add
xor
push
pop
or
dec
pushf
push
jg
add
inc
add
ret
out
adc
in
into
rdtsc
and
loop
mov
roll
testb
std
push
out
iret
cld
call
dec
les
jns
jne
adc
mov
shr
aad
cmc
notb
cli
add
mov
leave
mov
fstpt
adc
adc
pop
push
sbb
pusha
push
cs
add
cmpsb
stc
ret
jp
inc
cmp
movsl
rcrb
pop
fwait
mov
adc
xorb
pusha
inc
ret
aaa
cmp
jno
int
jg
out
lret
xor
jbe
rorl
pusha
sarl
fwait
insb
cmc
pusha
into
or
jmp
add
mov
sub
cli
mov
ljmp
fcompl
add
sbbl
or
not
adcb
push
xchg
pop
std
in
push
push
repnz
pop
aad
test
mov
not
cmc
push
enter
clts
mov
sub
stc
sar
shl
mov
push
pop
push
fnstenv
xor
cli
iret
aam
arpl
jg
mov
cmp
add
clc
shl
push
fs
xchg
decl
iret
jo
xor
out
syscall
or
and
sub
jmp
fs
pop
movsb
clc
pop
push
incl
cltd
xchg
pop
adc
cli
sbb
mov
push
fdivs
mov
cmpb
sbb
dec
push
out
movb
sbb
lock
in
ds
pop
jbe
pop
cmc
stc
cmpsl
shll
sbb
mov
jp
idivl
xchg
jnp
ret
jmp
movzbl
jmp
mov
std
mov
aaa
push
std
outsb
push
cmp
xchg
sub
mov
sub
fndisi(8087
jg
rorb
decb
rcll
xorl
es
mov
pushf
pushf
and
js
call
cmp
idivb
sbb
mov
clc
xor
xor
cmp
pop
mov
repnz
mov
les
aam
lcall
inc
inc
imull
mov
fsub
fdivrl
add
clc
mov
cltd
gs
out
cmp
rorb
jecxz
push
push
ficompl
pop
lods
and
hlt
ljmp
or
mov
inc
jns
or
adc
mov
sub
std
or
sbb
invd
stos
sub
and
incl
lea
not
mov
shrd
sub
push
push
nop
push
out
mov
mov
stos
flds
repz
add
rcl
ror
stc
mov
movsl
stc
and
iret
sub
bsr
inc
inc
sbb
stc
or
testb
mov
inc
mov
jmp
push
fisubl
pop
cmc
sub
inc
push
adc
cli
fcomps
add
loope
mov
add
add
in
fadds
xchg
cmp
and
or
rcrb
repz
sbb
lock
subl
jle
mov
or
inc
xor
sub
stos
push
mov
cld
mov
pop
data16
mov
std
and
dec
pop
je
movsb
push
inc
and
out
decb
push
mov
sbb
push
ret
sbb
sub
sarb
testl
mov
xor
or
and
sbb
or
mov
mov
test
clc
sub
cld
pushf
mov
bt
test
push
cs
cli
in
add
mov
jp
xorl
loope
jnp
sahf
and
lock
sub
test
out
xor
ljmp
cld
lock
mov
xor
lcall
jbe
sti
sub
push
add
cmp
pop
mov
xor
sub
popf
push
loopne
lret
add
aas
mov
shr
mov
clc
add
sbb
mov
mov
pop
lock
leave
push
ret
repnz
add
pusha
sbb
pusha
fsubp
dec
pushf
sahf
or
repz
rol
jb
sub
add
clc
stc
shr
and
inc
push
mov
push
jl
mov
mov
dec
and
ffree
add
or
xchg
psllw
loope
leave
mov
cmp
ja
mov
pushf
cmp
orl
lds
mov
or
add
sbb
pop
js
fsubs
cld
popa
dec
loope
out
push
decl
push
icebp
js
int3
add
xchg
and
push
cmp
lcall
or
adc
js
mov
sub
fisttps
push
sub
sub
sbb
lret
imul
jl
inc
fstl
dec
jecxz
sub
or
lret
adc
addr16
sub
lret
xor
or
call
cld
or
jmp
mov
test
cwtl
das
shr
nop
xor
fiaddl
pop
or
mov
popa
test
fsubrs
mov
sahf
addr16
push
push
jns
push
data16
mov
inc
movsl
shll
popf
ja
mov
mov
popa
test
pop
lea
push
gs
ds
cltd
mov
mov
mov
fstps
xchg
xchg
cs
pop
negl
sub
addr16
jbe
mov
aaa
pusha
lahf
das
inc
imul
data16
cltd
or
add
mov
ja
loopne
ss
push
mov
outsl
cmpl
iret
xchg
roll
sahf
aas
ja
mov
push
xchg
mov
pop
cmpsl
pop
mov
sbb
pop
mov
inc
push
aas
push
mov
add
xlat
popf
daa
pop
out
sbb
into
cmpsl
sbb
fwait
pop
dec
pop
mov
mov
fidivrs
pop
lahf
loope
sub
jecxz
pop
push
mov
cmpsb
pop
mov
and
mov
mov
pusha
sti
push
pop
out
cmpsb
testl
pop
push
dec
xchg
push
pop
sahf
xchg
cmp
fbstp
cmp
in
xchg
out
inc
jge
scas
pusha
scas
push
and
loopne
push
inc
rclb
idivb
lea
es
out
sbb
sub
nopl
pop
or
lahf
scas
pop
outsb
out
ffree
loope
xchg
push
dec
ds
sub
mov
xchg
mov
mov
push
ja
divl
push
gs
nop
loope
js
cmpsl
outsl
push
pop
js,pt
fdivrl
jle
sbbb
aaa
pop
sahf
cs
inc
lahf
adc
pop
lahf
testl
maskmovq
testl
mov
mov
pop
cmp
pop
pop
mov
pop
out
or
pop
xchg
or
or
mov
push
mov
imul
inc
pop
loopne
sub
inc
xchg
shrb
sbb
cmpsl
xchg
std
pop
clc
jg
mov
sar
adc
loop
push
inc
push
cmpl
sub
clc
out
adc
pushf
push
pushf
jle
xor
scas
inc
loopne
call
push
gs
cli
xor
enter
add
sbb
pop
test
adc
add
cmp
push
stc
xchg
inc
cld
testb
or
ret
mov
outsb
cli
or
loop
mov
xor
pusha
inc
shl
pushf
js
inc
in
test
adc
or
pusha
les
incl
out
not
pop
incb
fdivp
mov
cmp
cmc
xor
roll
out
enter
add
adc
fs
add
and
cmp
inc
add
lods
xor
aad
fadd
xchg
sbb
adc
incl
mov
iret
mov
mov
pusha
ror
rcr
mov
sub
fs
fisttpl
pop
sub
cmp
pusha
sub
jae
jl
and
clc
and
inc
cld
or
and
xchg
pusha
clc
cmc
lock
jno
bndldx
clc
jo
push
push
lret
into
xchg
inc
test
out
push
scas
pop
inc
sbb
leave
sub
leave
add
sub
or
mov
pop
je
loope
mov
enter
xchg
jo
lock
shl
push
movb
loope
js
sub
xor
xor
push
push
mov
mov
inc
ret
sbb
xchg
pop
push
push
out
sub
dec
clc
cld
and
push
push
push
or
cmpsl
or
add
push
or
push
cmp
inc
mov
push
jbe
inc
inc
je
mov
cld
push
icebp
andl
or
in
into
movsb
mov
or
push
and
mov
sub
adc
add
cmc
pushf
cmp
test
xlat
test
xor
sbbl
icebp
imul
push
jecxz
filds
pusha
adc
mov
fildll
mov
outsb
out
mov
adc
icebp
pop
jo
jb
pop
xchg
loopne
fiadds
je
fbld
rcrl
fldcw
decb
stos
int
hlt
repnz
movd
xchg
adc
mov
mov
cmc
shl
xchg
out
push
cmp
xlat
mov
gs
enter
pop
cmp
shll
jecxz
int
mov
stc
mov
shl
daa
sbb
outsl
mov
lock
or
xor
sub
ja
push
loope
mov
scas
out
lock
faddp
filds
into
cmp
cmc
repnz
push
cld
js
pop
nop
aad
insb
pusha
adc
lock
pop
dec
fmuls
mov
shr
mov
in
sub
sbb
add
xchg
lods
nop/reserved
sub
push
out
jp
inc
adc
sub
icebp
sub
or
in
lock
loopne
or
loopne
sub
mov
lea
in
inc
add
push
call
push
clc
ss
outsl
mov
aaa
inc
jle
xchg
fisubrs
mov
daa
mov
popa
pinsrw
pushf
jecxz
sbb
pop
push
cwtl
sbb
or
aaa
lods
dec
pushf
push
popf
lods
jle
xchg
loopne
pusha
pop
xor
aaa
loop
mov
add
pop
fs
hlt
and
adc
mov
add
stos
adc
mov
loop
dec
xor
stc
jno
mov
inc
cmp
and
adc
das
and
mov
jbe
shll
pop
loop
dec
dec
inc
movsb
nop
xor
outsl
cmp
fdiv
cs
pop
fimull
dec
ss
add
imull
pushf
fmull
popa
cmp
call
mov
inc
loop
or
mov
inc
cmp
leave
incb
sbb
adcb
adc
jle
push
rcl
dec
jno
add
fmull
pop
sbb
lea
jb
dec
pop
sub
sub
push
xor
cmova
xchg
inc
pop
mov
dec
pop
dec
and
jo
sbb
pushf
and
xchg
pop
sub
imul
or
add
clc
inc
add
inc
cmp
pop
cmpsl
enter
mov
lods
jle
xchg
es
and
jle
iret
maxps
les
pop
aas
pushf
adc
andl
rcl
aam
add
test
fsubs
stc
push
lock
cld
sahf
xor
mov
faddl
seta
clc
not
inc
cmp
arpl
pushf
stos
pop
fnstcw
addr16
pop
adc
lret
test
test
push
syscall
or
fsubrp
push
dec
xchg
popa
gs
push
pusha
adc
fistps
outsl
pop
mov
sahf
inc
fisttpl
ds
jle
sbb
push
cmp
outsl
ret
pop
mov
icebp
ljmp
jo
mov
call
jmp
jmp
lock
push
inc
test
mov
scas
and
dec
xlat
aaa
jne
pop
loopne
ljmp
inc
clc
fs
es
ljmp
test
or
add
and
mov
clc
leave
outsb
popf
adc
mov
mov
adc
cmpsb
cmpsb
add
icebp
add
inc
pushf
push
int3
adc
mov
in
test
test
in
addr16
xor
adc
stc
in
bswap
xchg
jle
shr
jecxz
add
loope
or
out
jno
mov
icebp
mov
bound
mov
push
xchg
stos
ds
cmp
dec
pop
adc
out
shll
mov
imul
pop
rol
push
and
or
jo
sbb
daa
cmc
lea
shr
call
pushf
lret
mov
push
push
imull
leave
ficoms
test
arpl
dec
movsb
subb
dec
sar
std
jg
cmp
clc
pop
out
out
pusha
push
xchg
push
pop
jge
dec
ss
pushf
repnz
decb
sti
cmp
cmpsb
cmp
clc
and
rcrl
mov
adc
add
push
dec
xlat
call
mov
outsb
xor
mov
inc
sbb
mov
adc
fld
jmp
xor
es
xlat
shlb
lcall
xorb
push
push
pop
sub
add
cmp
mov
aad
xchg
stos
adc
xchg
test
shrd
cli
xchg
push
xchg
sbb
scas
pop
scas
fcoml
test
cmc
incb
scas
test
add
push
xor
or
jae
and
sub
inc
cmpsl
aas
loopne
push
lcall
test
ljmp
sbb
dec
lcall
neg
sub
and
shl
xor
cmc
adc
test
incb
sbb
jle
mov
not
rdtsc
mov
xor
lea
jmp
addr16
mov
adc
icebp
push
dec
pop
jl
ds
xor
push
pop
cmp
jp
and
xor
push
addr16
and
adc
mov
dec
out
lock
jbe
mov
orl
scas
enter
pop
mov
push
cmpsl
or
dec
das
pop
ljmp
mov
sar
rcl
jp
mov
adc
or
push
inc
pop
lea
dec
leave
mov
push
enter
shrl
or
mov
cld
mov
jp
push
stos
rol
xchg
jecxz
sbb
or
jp
dec
inc
mov
pop
lcall
add
ret
loop
xchg
push
test
insb
sbb
outsl
jmp
je
inc
loopnew
add
sub
xchg
or
add
xchg
jg
pop
das
xor
sbbl
ljmp
fiadds
call
arpl
ret
fdivp
mulb
fiaddl
xor
icebp
push
mov
roll
out
cmpsb
or
xchg
popa
hlt
inc
fidivl
xchg
sub
int3
ficoml
pusha
mov
push
cmpsb
cwtl
lea
push
sub
mov
push
jno
out
rol
rcr
mov
or
repnz
shl
mov
repnz
or
mov
das
xor
call
mov
pusha
mov
lods
ret
or
mov
pop
ror
xchg
lahf
out
cltd
enter
add
mov
cmp
add
xor
adc
repnz
jb
lcall
jl
mov
jle
inc
mov
test
adc
nop
or
pop
push
frstpm(287
sub
or
and
insl
stos
js
shll
jno
jmp
jg
dec
rorl
in
lret
sbb
sbb
enter
aaa
ds
add
adc
call
cmc
pop
push
into
pushf
add
in
testb
add
rolb
cli
mov
mov
adc
cmpsb
outsl
out
jno
lea
pop
leave
inc
push
fidivrs
pop
mov
movsb
pusha
push
mov
lods
js,pn
addb
mov
lods
test
mov
leave
mov
sbb
pop
imul
jecxz
shr
xor
lods
mov
stc
or
ds
add
rcll
sub
or
movsb
mov
loop
xchg
mov
xchg
clc
ja
inc
sti
sahf
inc
and
xchg
loopne,pt
dec
mov
push
ret
add
incl
movsb
or
rclb
arpl
jns
jno
clc
jns
mov
lcall
shll
test
cli
rcl
mov
aad
sbb
mov
lock
clc
jle
stc
push
mov
add
sysret
popf
or
jo
mov
mov
rorb
adc
mov
fcomps
add
lock
push
mov
lods
test
cmp
add
sbb
test
add
ds
jnp
mov
cmpb
enter
aad
or
dec
stc
pop
shll
mov
xor
jg
out
rep
test
rol
dec
cmp
mov
xchg
sbb
pop
fldenv
mov
sub
ljmp
test
or
cmp
cmp
pushf
lock
hlt
das
and
jmp
fmuls
loope
dec
inc
adc
mov
insb
fs
addr16
js
inc
popa
mov
add
pop
push
loope
pop
icebp
das
sbbb
cmp
sbb
je,pn
pop
out
stc
mov
mov
test
lahf
inc
sbb
xchg
and
test
mov
sahf
and
adc
mov
clc
adc
outsb
dec
stc
testl
ror
icebp
sahf
in
or
adc
inc
xor
rclb
dec
clc
dec
sub
add
dec
xchg
add
mov
pop
sbb
hlt
incl
call
lea
daa
sub
rcl
std
call
lea
neg
stc
jb
and
scas
inc
outsl
add
add
sub
mov
cli
lea
push
xchg
aaa
jne
or
mov
imul
sbb
jne
xchg
mov
out
xor
out
shld
lock
inc
mov
out
add
test
out
inc
out
or
jmp
add
mov
aad
sbb
push
cli
or
lcall
xchg
rorb
cmp
pusha
stc
out
fiaddl
inc
sbb
ds
cld
ret
mov
pop
stc
xor
clc
xchg
xor
rcl
test
nop
xchg
loopne
ljmp
call
notl
neg
cld
repnz
add
and
and
btc
mov
and
rcl
mov
sbb
decl
je
push
roll
cmp
loop
xchg
adc
inc
jecxz
lock
mov
mov
test
stc
push
jp
loopne
data16
int3
or
xor
sbb
arpl
mov
call
or
mov
sub
in
fmul
sbb
mov
sahf
lret
outsb
xchg
push
xor
sub
inc
xor
sub
loope
or
sub
out
shl
mov
jp
das
aad
sbb
test
lret
bound
jbe
stc
icebp
mov
add
jg
ljmp
lds
pushf
or
mov
clc
sbb
xor
jecxz
adc
out
and
call
push
ljmp
mov
ret
ja
lods
leave
ret
in
es
xor
call
js
xor
xchg
ljmp
xchg
sbb
repnz
aam
push
lret
add
in
sub
call
test
xchg
fidivrs
inc
xchg
xor
xchg
push
mov
fprem
fbstp
sbb
mov
inc
push
lcall
movzbl
mov
sbbl
test
rcrl
mov
js
push
popa
test
bound
xchg
dec
ret
mov
inc
hlt
jp
sbb
jg
mov
cmc
lods
ret
xor
insl
pop
imul
out
aaa
mov
jbe
popf
cli
cmp
movsb
xchg
add
adc
insb
les
popa
repnz
mov
nop
ljmp
lods
dec
es
ds
jne
jnp
xor
and
in
lods
jne
xchg
out
mov
and
popa
fwait
hlt
ja
mov
push
cmpps
repnz
pop
outsl
sbb
sbb
cmp
add
mov
pop
shl
sbbl
ljmp
push
jecxz
dec
inc
inc
jb
rcl
mov
xchg
fcmovnb
mov
ljmp
je
scas
data16
cmp
leave
out
push
inc
lahf
out
movsb
adc
xchg
lds
das
pop
adc
jg
sub
inc
mov
xchg
shrl
push
push
popl
add
or
cmp
push
cs
sub
mov
lret
add
xchg
or
clc
jmp
test
xor
aam
std
jmp
leave
pop
cmpsl
mov
fldt
imul
fmul
cli
aad
dec
pushl
imul
xchg
cmp
cmp
push
jns
mov
mulb
sub
lcall
push
sub
rcrl
xchg
push
jp
stc
cmp
pop
sub
cmpsb
add
movsb
ja
push
in
pop
xor
dec
inc
sbb
push
outsl
cli
inc
add
pushf
or
ljmp
mov
jg
lcall
daa
subl
cld
leave
sti
mov
lea
les
clc
lcall
jecxz
insl
les
js
movsb
jbe
lods
jo
and
jmp
and
and
repnz
inc
das
mov
jne
fsubs
shrb
into
jl
push
dec
mov
sub
out
adc
scas
in
dec
stc
outsl
mov
ljmp
push
sub
stos
mov
xchg
pop
jge
lods
in
xchg
sub
fistpll
sahf
std
fcomps
data16
xor
push
pop
mov
jl
incl
into
test
pusha
stos
jno,pt
cmp
jge
jae
aam
mov
cmp
aas
fiadds
mov
ljmp
call
mov
test
adc
divl
lahf
mov
lret
inc
enter
inc
test
ficoms
jg
fcomps
jmp
inc
fiaddl
lcall
push
xor
rclb
and
push
lcall
mov
stos
sarl
ja
lcall
inc
sbb
das
clc
call
xchg
data16
add
std
mov
call
xor
jl
lret
jp
mov
jmp
lret
jmp
leave
push
icebp
cwtl
dec
insl
and
dec
aaa
inc
mov
scas
int
mov
ljmp
or
outsb
clc
push
sti
pop
nop
icebp
dec
testl
out
ret
dec
sarl
call
leave
insl
fs
mov
jmp
lahf
mov
out
pop
dec
clc
fldt
cmc
in
add
sub
gs
sti
xchg
aad
stos
sub
call
dec
sahf
mov
movsb
jo
and
aam
jne
fidivrs
dec
loopne
cltd
push
je
jno
roll
jecxz
lret
dec
es
pushl
jo
pop
pop
sarb
stc
inc
in
outsb
divl
add
rep
and
jg
ljmp
push
rorb
pop
out
push
fimuls
cmp
push
xor
xor
xchg
mov
and
mov
pop
inc
add
xchg
sub
cli
sbb
movsb
mov
add
or
xchg
jge
push
mov
push
cld
outsl
jp
jno
outsl
mov
mov
pop
push
jae
pop
test
sbb
push
clc
ss
inc
or
xor
sbb
ljmp
sar
imul
jg
ss
mov
icebp
mov
pop
shll
mov
lahf
cmp
jge
sub
ror
inc
call
pop
xlat
and
xchg
test
ljmp
add
call
lock
push
mov
mov
adc
or
imul
jge
fistpll
push
inc
dec
notl
scas
add
inc
in
mov
std
push
xchg
test
ficoml
mov
clc
ret
cmp
ljmp
pop
sub
inc
out
cmc
pop
mov
test
push
cltd
icebp
into
mov
sub
repnz
dec
movsl
xchg
les
aaa
lret
subb
mov
push
ffreep
jge
add
sbb
aaa
cwtl
dec
outsl
fmull
pop
imul
dec
pop
scas
insl
call
push
fcmovbe
pop
mov
leave
xchg
pop
nop
dec
and
mov
mov
push
cltd
or
cmpsb
sub
incl
dec
gs
pop
sub
ja
dec
imul
inc
pop
lea
mov
fistps
in
lret
repz
aas
cmc
pop
dec
sarb
add
jmp
in
fnstsw
cmp
xor
push
fwait
xchg
fs
inc
push
xchg
and
fmuls
js
add
pop
out
repnz
std
test
fisubrs
cmc
pop
lock
dec
out
leave
stc
sub
or
mov
imul
ret
stc
xor
pushl
xchg
cmp
pop
xor
cmc
ret
rcll
lret
or
outsb
enter
fiaddl
push
dec
sahf
repnz
mov
push
rcrb
pop
adc
test
ficoml
je
jmp
push
cmpl
xchg
call
adc
pop
xor
mov
sbb
scas
fs
out
decl
decb
mov
rclb
out
fldcw
test
push
lds
incl
mov
or
cmp
mov
adc
outsb
popf
adc
shlb
mov
push
xchg
add
inc
insl
or
outsb
and
mov
fistpll
and
call
and
mov
in
adc
mov
jle
ds
jg
jno
hlt
js
jp
test
aas
cli
lods
aas
lock
arpl
add
pminsw
jmp
mov
pop
sbb
cli
loope
pop
orb
fwait
or
popf
add
testb
out
cli
stc
pop
dec
into
mov
lods
dec
imull
filds
adc
push
xchg
sbb
into
popa
dec
out
scas
adc
mov
fldcw
clc
aas
ds
mov
in
gs
dec
rsm
fdivrp
jbe
jmp
arpl
cmpsl
lea
mov
jmp
pusha
xchg
ret
lahf
jmp
and
mov
in
push
das
mov
push
leave
insb
rorb
outsb
gs
pop
loop
lret
or
inc
jg
shl
insb
xorb
fimuls
test
mov
push
stos
jo
call
mov
jg
mov
cmp
insl
sbb
xchg
mov
adc
fldl
inc
xlat
ret
dec
pop
std
push
mov
adc
sbb
shl
stc
lahf
out
dec
dec
and
inc
in
push
dec
jns
jmp
imul
pop
in
repz
adc
fisttpl
jg
sbb
call
push
cld
rcl
pop
aam
xor
loop
in
sbb
addr16
lcall
jmp
pop
ror
nop
arpl
js
enter
xchg
xchg
sti
lds
paddsw
cld
fwait
decl
push
jge
outsl
mov
cmc
xor
add
jns
mov
out
loope
sahf
stc
sti
aas
cmpsl
sub
lret
sarl
or
dec
mov
mov
imul
scas
cli
push
repnz
mov
adc
mov
inc
ljmp
cmp
std
lods
jecxz
dec
cli
pushf
testl
cli
mov
xchg
pop
jg
fucomp
stc
jl
ss
jl
insb
mov
cmpsb
pop
mov
mov
test
add
jmp
mov
xor
cmp
inc
loope
imul
pop
cmpsb
aaa
push
pop
pop
aad
sub
or
jg
les
dec
aam
inc
push
push
and
dec
fmull
pop
mov
or
push
test
or
js
inc
addr16
mov
imul
sub
and
xor
sub
pop
jno
mov
jg
jb
rol
scas
cli
das
pop
push
stc
mov
movsb
aam
lods
mov
jl
incl
pop
xor
jmp
stc
jbe
hlt
xor
dec
add
mov
sbb
rcrb
pop
pop
into
cs
imul
dec
fcomip
sti
ss
push
in
xor
push
rol
xchg
cs
loopne
sbb
or
sub
or
and
add
adc
jle
push
loopne
jg
push
xchg
fbstp
fsubr
mov
cmp
mov
or
cmp
nop
cld
mov
mov
pop
and
add
fsubrp
movsb
data16
xor
cwtl
pop
fcomip
es
sub
mov
push
xchg
adc
cmpsl
inc
inc
jg
incl
test
inc
sbb
test
cs
std
jge
inc
int3
rcrl
std
sub
and
jg
push
shr
and
xchg
outsl
mov
xchg
xchg
lds
jbe
sbb
jmp
lcall
mov
rorb
dec
adc
call
mov
jg
dec
xor
dec
jg
mov
js
xchg
xor
mov
push
mov
pop
adc
aad
std
incl
insl
insb
xchg
lcall
enter
repnz
out
adc
imul
inc
out
stc
xchg
das
mov
loopne
mov
sub
and
in
scas
clc
mov
pop
cmp
push
cwtl
lock
mov
iret
mov
repz
sub
or
std
cmp
dec
fisttps
repnz
call
mov
and
mov
xchg
lea
lcall
jnp
or
mov
nop
sbb
es
mov
int
shlb
dec
das
clc
jmp
je
pop
xor
cltd
fs
sbb
das
jle
popf
xor
push
jge
dec
cltd
sarb
cmp
imul
cmp
addl
and
inc
pop
icebp
movsb
xchg
jmp
lods
inc
repnz
fldenv
add
cs
ds
sub
inc
gs
push
incl
pop
stos
push
pushf
add
mov
jmp
sub
xlat
lcall
sub
pop
or
lcall
lahf
inc
sti
lock
and
dec
ljmp
sub
mov
jecxz
cmp
pop
jb
xchg
push
out
fnstsw
mov
rcrb
inc
mov
lahf
sbb
adc
and
adc
fidivl
icebp
incl
lock
out
xchg
aaa
pusha
jne
ljmp
cs
insb
pop
mov
sbb
dec
or
xchg
pop
push
push
xchg
dec
xchg
jge
outsb
push
lods
pushl
cmp
outsl
test
fcomip
mov
pop
hlt
popf
or
push
scas
in
mov
add
shl
out
test
sub
mov
mov
lods
je
pop
lods
mov
int
jae
push
fcmove
int
ljmp
clc
ret
idivb
insl
test
cltd
fsubl
shl
sub
inc
rcrb
and
jmp
adc
cmp
sti
sbb
sbb
inc
jae
nop
data16
mov
jns
ljmp
cli
or
adc
pushf
mov
jne
popf
in
cmp
jmp
add
je
sub
push
test
xchg
push
push
mov
cs
and
lcall
push
mov
xchg
scas
pusha
mov
xor
ds
pusha
cmp
adc
pushl
xor
out
or
sub
stos
push
shll
jne
pop
pushl
test
mov
inc
push
je
or
nop
ja
out
cli
std
inc
or
sub
dec
sbb
dec
mov
xor
loope
inc
or
test
fcomip
incl
call
sti
ds
adc
push
lcall
int
ljmp
stc
dec
dec
aas
test
inc
inc
cwtl
lds
jmp
cwtl
sbb
in
jb
bound
fwait
push
in
sbbl
in
mov
incl
sbb
cli
pushf
int
adc
xchg
gs
ss
subl
add
scas
fidivl
sub
xor
dec
pop
lock
cmp
movb
lret
push
test
push
mov
idiv
lcall
stos
mov
mov
pop
adc
rcl
int3
das
lahf
divl
stos
push
push
lret
xchg
sub
call
out
mov
mov
sbb
pop
fisttpll
lcall
inc
push
push
out
fsubrl
lock
add
dec
movsb
add
aaa
mov
idiv
mov
lds
loop
mov
bound
jp
fdivrl
and
lods
mov
ja
cmp
jl
lea
add
sbb
loope
out
mov
fistpl
jge
std
cmp
inc
ds
inc
rcrl
shl
jns
imul
mov
inc
rcrl
scas
aaa
and
push
icebp
mov
decb
ret
pushl
cmp
dec
jl,pt
cmp
pop
jge
mov
or
hlt
pop
jecxz
fistps
insl
fbstp
push
xlat
push
xlat
jge
push
jne
inc
add
jmp
sar
xor
movmskps
inc
jp
cmc
add
clc
jg
pop
mov
cs
pop
jp
test
pop
frstor
outsl
jmp
lods
jl
cli
and
fwait
out
test
in
rorb
lret
test
jg
movb
mov
sbb
std
mov
xchg
addr16
sbb
lods
adc
jae
mov
scas
lea
pop
ror
incl
jge
imul
inc
and
aam
pop
enter
fldt
test
sub
roll
dec
fnstenv
cmp
cmpsb
scas
je
mov
mov
lds
call
lock
faddl
add
sub
jns
shll
decl
ljmp
sbb
cmp
dec
xchg
or
int
lret
inc
pop
lock
dec
sarb
arpl
test
sub
mov
pop
push
daa
xchg
outsb
xchg
mov
imul
sarb
mov
sub
pop
cmpsl
pop
cld
inc
out
cmpsl
sarb
mov
dec
dec
jg
loope
fnstcw
jmp
adc
test
sbb
sub
bound
xorl
aam
xor
out
hlt
add
or
shlb
xor
sbb
dec
in
jae
xchg
lcall
mov
insl
sbb
push
mov
clc
pop
roll
pop
mov
sahf
fstps
push
cmp
ja
sti
or
call
cmp
jmp
clc
roll
cs
add
test
ss
lock
xchg
std
mov
decl
aad
std
in
mov
sbb
jg
jnp
xchg
jbe
xchg
jo
outsl
dec
cmp
incl
and
aam
pop
les
popf
out
test
inc
dec
popf
adc
dec
lahf
in
add
hlt
inc
xchg
xchg
push
cmpsb
push
test
test
jmp
aas
pop
fisttps
ja
mov
imul
or
cmpb
mov
lcall
or
adc
and
mov
decl
xor
cmp
pop
orl
pop
lods
add
cmp
mov
push
inc
lods
xlat
jmp
cli
jg
sub
mov
dec
fdiv
sbb
ljmp
ret
ds
or
jb
pusha
pop
mov
fcmovu
xor
loope
rcr
incl
jns
xor
cwtl
push
sbb
mov
inc
add
inc
sbb
std
xor
ljmp
das
ds
or
std
mov
rcrb
mov
cmp
sti
add
loopne
cld
stos
cs
adc
xchg
mov
mov
mov
xchg
mov
mov
stc
cs
fcomip
cs
fbld
adc
jbe
lahf
push
dec
out
pop
outsl
bnd
pop
mov
enter
into
sub
add
ret
call
cmc
mov
push
xor
cmp
scas
sub
adc
pop
and
addr16
dec
outsb
jmp
mov
xlat
aaa
adc
xchg
adc
les
mov
lods
cmpsb
fucomip
pop
mov
dec
lods
lods
jmp
ror
shll
bswap
inc
mov
jbe
jg
sbb
push
ret
ja
jae
iret
jge
arpl
call
nop
addr16
in
jge
or
xchg
pop
dec
inc
and
jg
aam
push
jmp
sub
test
orl
cld
dec
adc
cmpsl
mov
dec
inc
and
xchg
dec
push
inc
adc
roll
ja
jmp
xor
lds
sbbl
mov
incl
pushf
mov
bound
sti
ret
loope
pop
inc
cmp
xlat
mov
mov
jmp
fstps
stc
shrb
pushf
sub
lock
cmovb
mov
dec
push
nop
jecxz
add
inc
jnp
lods
push
lods
jp
or
push
sbb
mov
cmc
into
xchg
xor
lahf
aas
push
fisttpl
arpl
scas
pop
inc
inc
jl
dec
jb
sub
lock
pushl
xlat
xchg
sbb
push
int3
and
jmp
mov
jg
loopne
xchg
cmp
inc
lcall
lahf
push
dec
shlb
or
lcall
and
mov
and
mov
shlb
jb
pop
mov
push
cmp
rcrb
cli
in
adc
pop
in
pop
sti
dec
hlt
inc
pop
aas
daa
jle
sbb
ret
out
ret
sub
adc
loope
das
jp
decl
movsl
inc
xchg
aad
imul
or
rolb
mov
call
into
inc
adc
mov
popa
fwait
and
sub
mov
ds
fwait
dec
les
outsb
pop
mov
popf
into
insl
sub
jge
jg
fcompp
sbb
mov
pop
pop
or
push
sbb
ljmp
cmc
xchg
pusha
push
adc
mov
dec
xor
and
ljmp
push
incb
cld
stos
mov
repnz
push
std
xchg
loop
lods
and
aas
add
aaa
xor
push
mov
repnz
pushf
dec
mov
push
mov
inc
ja
jne
jnp
fwait
push
je
hlt
or
filds
cmp
adc
sbb
aad
ret
cmp
ljmp
lcall
fisubs
mov
testl
fucomi
pop
pop
lock
in
and
iret
push
sub
rcrb
cli
push
jle
ret
std
int
cs
pop
push
popf
lock
adc
call
popf
cmp
call
sub
inc
int3
fsubs
mov
aam
in
mov
add
xchg
inc
mov
shlb
inc
xchg
sbb
sti
cmpsb
std
xchg
push
adc
mov
xor
pop
cmpsl
fcmovbe
add
lock
jmp
out
adc
and
mov
push
mov
insb
ret
lcall
pushl
sti
lods
lock
mov
subb
mov
sub
ror
jg
cmp
stos
push
jnp
test
fdivr
pushf
imulb
cli
mov
ljmp
inc
cmp
sub
dec
leave
pop
aaa
cmp
ret
lods
mov
movsb
bound
adc
mov
sub
pop
fnstsw
or
adc
in
fadds
fwait
incb
fucom
pop
mulb
dec
mov
in
inc
outsl
push
int
xchg
xor
call
cs
lock
mov
inc
inc
in
mov
call
sarl
lds
scas
out
lds
mov
cmpsl
sbb
inc
mov
mov
nop
das
out
sarl
faddp
sbbl
incl
xchg
inc
arpl
dec
lahf
insw
test
pop
enter
cmpsb
xor
insl
mov
and
loope
cli
lret
cli
and
jecxz
cwtl
data16
out
push
arpl
mov
jne
scas
ret
movsl
adc
ss
sbbb
popl
fistps
sti
inc
inc
push
mov
inc
loopne
es
adc
jo
les
std
stos
mov
xor
ss
je
jecxz
xchg
mov
jge
stc
mov
inc
in
push
arpl
mov
add
mov
push
fistl
imul
cmpsl
push
int
out
test
paddd
cltd
lds
bound
jmp
add
in
andb
insb
dec
mov
ret
jl
pushf
pop
pop
es
add
pusha
cltd
mov
inc
adc
pushf
or
andl
call
xchg
xchg
test
int
adc
out
flds
sub
cmp
jl
inc
mov
insb
rorb
mov
fisttpll
lcall
cmc
cvtps2pi
push
pop
loop
adc
mov
push
push
push
ds
sub
in
rep
call
in
outsb
jb
push
and
jae
mov
cmp
iret
fbld
dec
and
lods
inc
scas
addb
out
test
lcall
xchg
outsl
fwait
mov
ret
ja
idivb
lret
int3
dec
jge
insl
xchg
add
incl
ja
imull
jge
fxam
xor
inc
pusha
and
dec
pop
lock
push
ret
shrb
adc
fs
push
adc
roll
jg
incb
mov
mov
aam
or
into
sub
mov
outsl
pushf
sbb
inc
add
lret
inc
and
lahf
jecxz
aad
push
sbb
mov
mov
incl
loopne
push
aas
xchg
mov
jns
mov
in
outsl
mov
aam
dec
pop
mov
push
lcall
in
and
mov
or
sar
call
xor
adc
xlat
mov
add
pop
aaa
add
repz
jg
sbb
sub
scas
lahf
incl
aad
or
popf
or
jmp
jge
loope
movsb
ret
jno
jge
lcall
incl
mov
out
push
push
push
adc
std
lea
mov
ret
jnp
jp
lret
in
stc
iret
or
push
pop
cmp
pushf
in
jge
pushl
in
dec
dec
dec
pop
and
aam
pop
into
out
and
test
push
jmp
pop
ret
rolb
adc
inc
mov
adc
or
icebp
adcb
in
sbb
rdpmc
mov
inc
imul
adc
cmp
fdivs
sub
mov
mov
lods
jmp
in
mov
and
idivb
lock
div
pop
incl
cmp
les
cltd
scas
xchg
pop
xchg
and
jmp
mov
jg
push
aam
mov
jg
xchg
sbb
jecxz
loopne
sbbb
aaa
fisubl
dec
jmp
cmp
push
mov
jns
fwait
out
sub
mov
push
mov
jmp
pusha
inc
call
rorb
pop
sahf
shrl
xor
jmp
in
adc
pop
jl
and
lock
mov
shlb
mov
sbb
out
icebp
das
mov
sub
jne
fimuls
sub
testb
or
lods
mov
mov
pop
sti
mov
mov
mov
adc
lret
inc
xor
mov
ljmp
pop
push
aam
fs
add
xchg
sbb
iret
mov
cs
clc
cwtl
pop
cli
pop
ljmp
iret
scas
cmp
add
jmp
pusha
xor
and
sbb
sahf
sub
mov
fdivrl
adc
mov
cmp
inc
dec
stos
xor
push
xor
jmp
aaa
test
xor
and
cltd
cmp
mov
pushf
std
outsb
lds
movsb
stos
lret
decl
aad
lcall
cwtl
xor
jb
sbb
nop
xor
sar
clc
stc
jae
mov
mov
mov
orb
push
int3
pop
push
je
jg
nopl
dec
pop
sbb
sbb
addr16
sahf
cs
jmp
sub
pop
mov
xor
fwait
push
jb
scas
or
xor
pop
sub
xchg
es
jmp
or
sarl
stos
test
lret
push
sub
popa
cmp
xor
xchg
jmp
out
xchg
scas
push
shlb
dec
and
lcall
sbb
jo
decl
dec
ds
outsb
xchg
and
out
inc
movl
mov
adc
clc
pushl
cwtl
dec
bnd
iret
jb
hlt
lahf
pop
maxps
mov
cmp
insl
cmp
or
xchg
mov
fstl
pop
idiv
aas
cld
adc
add
mov
push
je
dec
add
or
sti
out
mov
mov
sbb
xchg
icebp
fmull
sbb
xor
inc
fcoms
in
je
jp
dec
outsb
enter
inc
and
jg
push
mov
pop
std
push
mov
inc
mov
mov
shr
sub
popf
sub
cs
mov
add
fs
pop
inc
mov
xchg
xor
clc
loope
mov
sti
out
int3
or
dec
inc
lods
js
daa
popf
jns
mov
push
pop
mov
call
int3
rcr
jmp
lods
add
dec
sarl
imul
clc
scas
test
sti
enter
clc
fistl
mov
int
clc
daa
jno
std
xor
jecxz
or
loopne
pushl
bound
and
sbb
gs
push
pop
sub
cld
jmp
xchg
cli
dec
int
test
shll
push
leave
out
xchg
and
cmp
mov
aaa
dec
iret
adc
xchg
sub
or
std
dec
sbb
movsb
fldt
call
inc
fwait
test
push
js
jbe
xchg
icebp
xchg
sarl
lock
negb
lret
pop
aam
mov
fwait
rol
mov
daa
cli
add
mov
push
insl
mov
repnz
out
das
dec
sub
push
out
fdivrs
dec
dec
imull
fimuls
rolb
repz
shrw
xlat
inc
inc
pop
push
aaa
jg
dec
fistps
cmc
std
iret
repz
sub
or
pop
cmp
incl
rorl
xchg
mov
sub
push
xchg
xchg
sub
in
xchg
dec
in
add
popf
cltd
mov
mov
jmp
test
imul
dec
dec
out
loop
sub
ss
sub
cmp
out
jmp
ss
repnz
jg
ss
push
insb
fsubl
push
fsubrl
orb
lcall
adc
mov
sar
xchg
dec
pop
mov
enter
xlat
data16
cmc
gs
mov
jmp
push
clc
pop
inc
cmp
pop
cmpl
pop
in
xlat
xchg
jmp
cmp
xchg
fwait
sub
pop
and
dec
ljmp
xor
and
ficoml
push
add
xchg
out
cs
ret
out
push
shrl
jbe
fcoms
fs
or
mov
sub
pushl
mov
cs
pusha
ret
xchg
cmp
leave
mov
ss
or
fnstsw
std
lcall
fcompl
scas
adc
scas
imul
fsubrs
mov
out
jne
imul
cmp
je
int
push
dec
cmpsb
sub
clc
jg
cmc
imul
insl
dec
xchg
int
push
or
sub
lcall
fs
mov
xchg
jno
jmp
add
xor
fdivrs
movsb
add
cs
lods
adc
jmp
sub
xchg
or
push
imul
dec
das
in
imul
pushl
mov
es
adc
lock
and
cmp
aaa
lcall
jmp
fldcw
sahf
outsl
mov
push
in
cmp
ja
pushl
outsb
outsl
mov
test
sahf
insb
xchg
adc
aas
clc
or
ffreep
sub
ficompl
fwait
addl
fmuls
lods
imulb
rcll
jne
jmp
stc
push
adc
xchg
imul
jl
out
xchg
lret
and
xor
andl
pop
inc
cmp
sbb
jge
or
mov
dec
inc
shll
aam
push
int3
adc
test
ret
cld
cmp
stos
add
fs
push
movsb
aad
jg
lahf
dec
loopne
pop
sub
inc
adc
dec
mov
xor
jo
lcall
movsl
clc
sbb
stc
lock
ret
push
xchg
xchg
cmp
movsl
xchg
ja
sbb
xchg
lcall
add
adc
mov
xchg
xchg
rolb
mov
cmpb
out
cmpsb
mov
les
or
xor
add
ljmp
mov
lods
imul
jmp
into
and
xchg
and
sarl
in
xor
je
ljmp
and
out
in
cmp
sub
cwtl
daa
pop
mov
adc
fdivrs
faddl
xlat
roll
cs
leave
in
mov
fiaddl
das
cmp
repnz
ret
add
add
push
cwtl
mov
jg
fcmovb
popa
push
xchg
nop
adc
mov
xchg
in
dec
dec
jle
js
ror
inc
push
scas
xor
cmp
pop
pop
frstor
mov
ds
mov
mov
xchg
push
ficoms
jg
mov
sar
jmp
and
dec
cs
call
mov
stos
mov
dec
ds
sbb
iret
dec
mov
mov
lods
jle
pushl
rcl
leave
dec
out
cmp
pop
cmc
sub
mov
xchg
and
enter
aaa
cld
mov
test
sbb
and
addr16
lds
popa
cltd
mov
faddl
incl
xchg
mov
dec
ret
pushw
incl
lock
xchg
mov
sbb
jg
push
icebp
dec
lcall
sbb
nop
xchg
sti
mov
xor
mov
pop
jbe
stos
ret
jae
jb
mov
sarb
xchg
into
int3
sbb
incl
mov
mov
jg
mov
xlat
testl
xlat
lds
xchg
das
sti
push
icebp
aad
sti
repz
loopne
and
fadds
dec
adc
rcl
jmp
outsl
jns
dec
dec
decl
imul
add
or
repz
data16
fistps
dec
pop
repnz
scas
jmp
mov
mov
insl
sarl
test
dec
fimull
add
pop
adc
pushf
adc
lock
cmp
cld
jg
repz
push
sub
adc
jge
das
mov
adc
inc
sub
sub
and
pop
mov
mov
out
cmp
jmp
std
lcall
dec
sub
add
in
ret
xor
popa
pop
stos
xlat
je
lret
jg
aas
rolb
or
add
test
sub
ret
jno
jmp
cld
call
lahf
push
aad
add
jno
pop
add
push
cli
mov
or
mov
cwtl
jg
mov
jecxz
xor
decl
mov
xor
in
jnp
aad
sbb
mov
decl
sub
std
push
cs
mov
arpl
jl
jle
sarl
push
pop
cmc
decl
pop
mov
jl
adc
mov
filds
adcb
imul
lret
xor
in
adc
push
add
dec
and
jmp
aad
in
jmp
stc
outsb
lcall
cmp
shll
repz
repz
ljmp
inc
inc
pop
adc
cmp
pop
mov
rclb
cmpsb
hlt
mov
add
ja
mov
push
jbe
sub
cwtl
fdivrp
iret
ljmp
out
cltd
pushf
insb
and
cmp
movsb
out
xchg
cld
out
sbb
clc
jb
mov
push
loopne
inc
daa
mov
in
jo
dec
rcr
push
ret
jns
jns
or
popa
aas
scas
or
aad
xor
int
into
out
push
sub
jne
push
andb
xlat
mov
mov
aaa
sbb
ljmp
shll
pushl
psllq
cwtl
aaa
jb
enter
cmp
in
add
lcall
mov
in
jnp
mov
movsb
inc
fcos
mov
jg
outsl
ljmp
in
test
iret
cli
fldcw
dec
jp
je
push
add
aad
lret
pop
jno
and
inc
or
jle
pop
shl
mov
clc
pop
cmc
push
ret
call
mov
enter
pushl
lcall
mov
mov
insb
scas
pop
push
mov
das
stc
and
xrelease
push
xchg
lahf
cli
and
gs
dec
mov
shl
nop
push
shll
mov
xchg
and
inc
ss
push
jae
mov
lcall
and
xor
pop
fnstsw
pop
fdivrl
ljmp
pop
push
outsl
movsl
xchg
xlat
mov
jmp
cmp
or
out
fsts
jp
lods
mov
lret
inc
sbbb
pop
pop
jmp
filds
popf
sbb
scas
or
fsubrs
mov
lret
ljmp
mov
pop
fdivrs
cli
sbb
cld
clc
and
jg
fildll
pop
sar
shlb
pop
hlt
sub
mov
adc
mov
jg
pushl
sub
test
push
enter
fistpl
neg
enter
rolb
jmp
cmp
or
pushf
in
insl
imul
sarl
inc
dec
pop
push
dec
sub
jno
test
sub
fnstcw
ret
lock
out
push
xchg
cmp
push
cld
xchg
cwtl
dec
xor
dec
and
jbe
sub
clc
jmp
test
mov
loop
jmp
adc
xchg
fucomi
pushl
push
dec
into
insl
test
dec
mov
jbe
inc
test
mov
mov
adc
sub
add
andl
fstpl
adc
test
sbb
dec
mov
ja
push
or
mov
cmp
jo
loop
sarb
mov
inc
leave
sti
popa
lret
and
sub
mov
mov
cltd
pmuludq
xor
mov
push
adc
sub
jp
and
mov
inc
fildll
fidivrl
outsl
jmp
sbb
fsub
inc
pop
mov
lahf
call
mov
xchg
decl
jp
test
inc
xchg
pop
adc
fnstcw
or
std
int
inc
pop
mov
repz
rclb
mov
sub
out
jg
pushl
jp
xor
xor
push
and
and
mov
loope
jg
cmp
pushf
into
xchg
inc
cld
xchg
clc
mov
push
out
xchg
mov
stc
cmp
fidivrl
or
mov
sarb
lahf
dec
sbb
push
outsb
enter
cmp
xchg
repnz
lock
sar
mov
fimuls
cltd
je
lret
inc
sahf
jno
out
adc
inc
sbb
dec
and
dec
jle
jns
or
pushl
push
and
outsb
clc
mov
jo
loopne
int3
sub
dec
faddl
dec
pop
loop
scas
out
sar
sub
aam
insl
int
movsb
mov
shlb
sbb
pop
push
add
or
push
ret
cltd
cmp
cmp
mov
ljmp
ucomiss
idivb
in
push
mov
mov
incl
add
int
jne
mov
or
adc
mov
call
gs
jmp
or
arpl
jns
sub
fs
sti
jne
gs
popa
or
push
or
or
inc
nop
aam
jg
je
inc
jbe
outsb
je
inc
sub
int3
fnstenv
push
jns
sbb
xchg
addr16
sarb
jb
arpl
fs
idivb
popa
jg
outsl
outsl
insb
push
push
outsb
popa
jo
push
outsl
mov
dec
inc
and
jb
push
dec
jo
daa
fcmovne
mov
jb
jb
pop
sbb
gs
cmovge
mov
imul
push
outsb
insl
and
ja
dec
xor
push
imul
mov
dec
cli
ss
jb
jne
insb
ret
dec
dec
push
insb
outsl
bound
insb
or
sbb
and
imul
insl
negb
inc
loop
dec
sbb
outsl
out
outsb
or
insl
jno
popa
fs
imul
jne
jo
mov
jne
push
je
xorb
add
push
add
outsl
outsb
dec
sarl
insl
pushf
outsb
insb
outsb
xorl
or
sbb
jae
xchg
aam
jg
imul
mov
inc
jns
sub
inc
push
push
pop
push
scas
cmp
ret
add
addb
inc
inc
fsubrs
ucomiss
arpl
rcrl
pop
je
xchg
xchg
movsb
mov
mov
push
popa
mov
imulb
mov
or
xchg
dec
inc
jle
or
std
pop
sub
inc
imul
adc
subb
mov
xlat
subb
pop
push
out
rcr
inc
jb
into
cmp
imul
faddl
push
lcall
insl
mov
dec
jnp
fcmovbe
inc
lods
mov
incl
add
imul
lods
add
pop
add
push
pop
or
mov
sahf
sbb
dec
movl
sbb
add
or
jmp
add
push
jo
movsl
pop
mov
data16
push
fsubrl
sbb
mov
cmp
mov
call
insb
lods
push
insb
sbb
jo
sahf
lds
pop
cmpsl
sub
xchg
sar
mov
jns
push
sbb
mov
aas
xor
inc
pop
push
add
pop
movsl
xchg
jecxz
mov
mov
fwait
pop
add
pushf
insl
outsl
js
popa
mov
jp
loop
outsl
imul
imul
mov
addr16
data16
push
arpl
push
loopne
jne
sub
data16
sub
int3
mov
adc
fsubs
mov
add
mov
jae
lret
pop
lahf
lcall
addr16
jnp
mov
xor
imul
mov
xlat
orl
imull
les
lods
call
add
cmpsb
imul
imul
icebp
cmp
or
adc
pop
push
inc
dec
aaa
or
sbb
or
push
pop
filds
push
or
pop
or
daa
push
push
add
or
dec
adc
or
sbb
adc
fucomi
add
pop
add
and
adc
sbb
adc
pop
pop
xor
sbb
int
std
add
es
xor
xor
sbb
or
sbb
mov
dec
push
add
push
or
xor
sbb
clts
and
inc
sbb
mov
movups
sbb
xor
lock
and
adc
and
cmovp
in
jmp
sbb
pop
cmp
or
fmull
push
push
sbb
jle
sbb
or
add
in
sbb
dec
cmp
push
and
dec
or
sbb
push
xor
mov
neg
push
pop
pop
adc
adc
push
sbb
push
adc
adc
cmpb
adc
sub
pop
push
add
adc
sbb
sub
das
xchg
std
fldt
or
or
adc
push
adc
or
or
push
std
mov
pop
pop
adc
add
or
cmp
sub
jl,pn
das
clc
or
or
add
jbe
and
xor
or
mov
and
add
and
lret
testb
or
sbb
jnp
push
jo
add
repnz
or
pusha
push
or
cmp
cmp
jg
pop
pusha
sbb
xor
add
jle
fsubrl
adc
mov
adc
add
or
mov
adc
mov
push
or
aam
sbb
xor
and
sbb
cwtl
push
sub
lock
aaa
sub
add
xor
or
call
pop
sbb
and
aas
inc
pop
lock
or
negb
dec
sbb
or
add
or
fistpll
std
cmpl
adc
inc
or
push
inc
add
dec
fbld
incl
pop
add
add
dec
add
add
and
add
xor
pop
mov
dec
dec
add
push
adc
add
nop/reserved
insl
imul
or
add
push
adc
ss
add
add
push
enter
je
push
stc
aaa
orl
pop
and
inc
add
lcall
out
test
test
inc
add
in
out
dec
push
outsb
cmovle
dec
addl
jae
arpl
out
imull
push
push
pop
xor
adc
notl
repnz
pop
int3
pusha
dec
and
xchg
ljmp
popa
xorl
mov
out
push
mov
aaa
and
cmp
push
packuswb
add
sub
incl
add
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
