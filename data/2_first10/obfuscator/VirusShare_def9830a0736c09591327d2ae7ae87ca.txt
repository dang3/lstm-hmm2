inc
repz
cmp
test
xchg
dec
cmc
outsb
out
mov
cli
mov
pop
test
in
inc
cmp
daa
push
cmp
orb
cmp
mov
push
mov
push
push
cmc
lcall
lods
hlt
out
das
mov
jg
bound
int3
sub
jne
adc
inc
add
cmp
fisubrl
aas
inc
das
sbb
pop
lds
push
dec
outsl
ja
out
push
or
or
pop
xchg
test
aas
adc
test
mov
push
and
mov
cmc
enter
dec
or
xchg
sarb
mov
dec
shl
mov
xchg
add
in
jmp
stos
mov
jp
push
ja
or
push
lea
adc
std
je
adc
mov
push
out
sub
cmp
icebp
mov
xlat
xchg
dec
mov
or
in
jecxz
dec
dec
in
lcall
mov
push
pop
push
xor
inc
jae
sbb
repz
xchg
pop
xchg
push
pop
repz
and
or
sbb
out
inc
and
inc
and
out
push
movsl
jae
mov
addl
gs
mov
lret
sahf
push
or
dec
cmp
loopne
pop
adc
lods
push
add
push
sub
ljmp
aad
mov
xor
and
adc
and
arpl
xchg
in
cli
scas
cmpsb
ljmp
int
outsb
push
xor
mov
xlat
cli
xor
cmp
lods
push
mov
and
sub
cwtl
jl
sub
xchg
repnz
mov
mov
insb
cld
sahf
stos
setl
arpl
sbb
push
fdivr
push
ret
mov
xchg
and
cmp
push
call
add
insl
incb
mov
aaa
pop
add
and
imull
inc
and
jo
jne,pt
mov
pushf
and
mov
mov
xchg
data16
imul
ja
aad
push
pop
push
jecxz
pop
add
adc
jp
stc
enter
dec
lcall
mov
insl
jle
pop
jae
pusha
pop
repz
lahf
jne
adc
sub
inc
jle
jge
gs
pop
out
add
into
and
and
mov
push
xchg
cmpsl
jecxz
sbb
ds
lcall
orl
mov
push
mov
mov
cmpsl
mov
pop
ja
push
push
pushf
or
fsub
fsubl
outsb
pop
push
adc
mov
mov
add
sub
lods
cmpsl
add
cmp
popa
adc
push
loope
mov
loope
enter
rcrl
mov
arpl
test
aad
jbe
ljmp
and
stos
in
shlb
rcl
repz
mov
jae
stos
popa
push
pushf
cmpsl
xlat
mov
mov
dec
push
loopne
or
dec
xlat
add
ja
es
mov
xchg
movsl
sbb
rcl
jp
push
cmp
cmc
rorl
push
or
mov
adc
xchg
cli
pop
outsb
add
lcall
add
xor
mov
loope
gs
adc
adc
mov
test
pop
inc
call
jecxz
xor
jae
addr16
ja
jp
jp
out
and
or
jp
shrl
ds
push
or
cmp
mov
ja
popl
mov
mov
lcall
jne
pop
orb
cmpsl
repz
ss
roll
loopne
stos
add
mov
sub
jbe
pop
cmpsl
nop
fxch
mov
out
jnp
lods
fidivl
sti
cmp
inc
cmp
in
movsb
scas
xor
sti
xor
bound
into
lret
mov
inc
inc
adc
cmpsl
add
rcrb
or
fldcw
fs
ret
in
pop
jge
jge
cmpsb
out
insb
iret
rclb
enter
dec
data16
xchg
push
sub
cmpsb
inc
lret
loope
sub
cmp
and
bound
cld
das
push
cmp
lret
shlb
jge
xchg
jmp
or
testb
cmp
mov
sub
xor
roll
leave
ja
fimuls
mov
repz
push
xorb
ret
sub
mov
jecxz
push
mov
clc
pop
stos
xor
mov
sub
cmp
hlt
fdiv
out
cmp
or
cmp
rcrl
pop
mov
mov
pop
and
xor
stc
push
xchg
call
dec
pop
fnstsw
jbe
out
adc
jb
and
xchg
pop
cmp
mov
inc
daa
test
pusha
dec
mov
movsb
xor
js
cmp
jecxz
es
stc
inc
lret
f2xm1
out
clc
ror
lds
xchg
les
mov
push
jnp
jp
mov
loope
sbb
jns
xchg
jne
adc
xor
je
jge
or
in
inc
mov
inc
jnp
and
pop
std
adc
mov
mov
stos
xchg
iret
sub
and
xchg
enter
sub
ret
test
xor
jecxz
pop
sbb
xor
das
xor
movsb
add
add
jb
mov
inc
out
jmp
cmp
adc
test
mov
sub
mov
pushf
jo
pop
rclb
sub
js
jle
push
pop
in
cmp
xor
mov
test
testl
imul
mov
push
mov
test
or
and
sti
jg
push
cmp
pop
ret
or
sbb
std
xchg
pusha
and
sub
xor
aam
testl
lahf
jns
jp
out
xchg
sbb
push
shrb
sahf
lds
out
shll
push
mov
aam
add
in
sub
ljmp
jl
sbb
cmp
test
in
out
pop
add
inc
ret
and
push
and
push
jp
mov
rcrb
call
or
sub
xlat
mov
inc
push
sti
test
loopne
cmpsb
ds
pushf
inc
insl
je
clc
ss
mov
outsl
inc
sub
mov
mov
fwait
sarb
lea
lahf
pop
sbb
aam
or
out
cmp
icebp
int3
aas
push
xchg
loop
push
jne
daa
pop
test
mov
imul
in
pcmpeqw
xor
mov
cmp
ficompl
jbe
imul
daa
push
jno
cmp
movsb
int
mov
mov
mov
dec
mov
add
or
ljmp
add
mov
mov
and
int
mov
mov
nop
dec
ret
add
sbb
stos
cmp
lcall
fisubrl
int
add
ficoml
push
jae
mov
test
daa
jo
xor
sub
dec
stc
lods
scas
in
stc
popa
sbb
inc
mov
les
icebp
ss
push
clc
aaa
sbb
cmp
dec
arpl
iret
push
sub
push
inc
dec
insb
push
xorl
sub
dec
iret
xchg
push
cs
jno
outsb
sbb
mov
xchg
pop
out
dec
xchg
cs
fcompl
inc
add
push
std
test
dec
data16
cmp
jb
adc
iret
pop
cwtl
out
push
mov
movsl
jbe
fnstcw
xchg
nop
fcompl
enter
and
stos
out
xchg
jle
and
cmp
dec
cltd
xor
dec
rcll
and
out
xlat
call
mov
popa
cli
fidivrl
in
jnp
xchg
cmpsb
mov
idiv
mov
ds
loop
jmp
mov
das
jo
jns
or
xchg
mov
aas
xchg
mov
neg
test
pop
aas
scas
add
xchg
inc
lods
or
mov
mov
movsb
add
xchg
or
fsubrp
mov
fucomp
rorl
incb
insl
or
mov
leave
lcall
rcrl
out
xchg
inc
loopne
or
shrl
sub
outsl
sbb
push
inc
push
sbbl
scas
fucomip
test
cs
mov
scas
dec
xchg
in
xchg
mov
inc
push
test
xchg
add
mov
pushl
lcall
fsubs
out
aas
fldenv
scas
xchg
mov
es
aam
xor
and
out
addr16
jo
mov
movb
aad
and
int
call
mov
xchg
mov
jo
inc
in
mov
mov
cld
jg
dec
and
fs
push
jle
rolb
lods
inc
addr16
les
aas
pop
pop
mov
add
jnp
cmpsl
sbb
pusha
adc
fcomps
cmc
jecxz
dec
popf
repnz
test
cltd
jp
loope
mov
stos
push
mov
in
mov
dec
xchg
fmull
jnp
bound
pushf
or
xlat
sti
or
mov
scas
lret
test
push
mov
aad
jae
je
repnz
adc
lret
rolb
sti
mov
xchg
insb
mov
das
cltd
pop
xchg
jp
or
popf
cmp
jp
inc
pop
stos
popfw
mov
aas
out
shr
arpl
inc
sbb
orl
imul
outsl
or
dec
and
jg
fucomi
bswap
cmpsl
pop
adc
mov
icebp
in
lock
mov
sub
aas
push
mov
shll
push
test
xor
movsb
jnp
push
push
xchg
pop
stc
mov
lds
pop
mov
push
inc
movsl
jge
or
insb
mov
add
in
jo
into
mov
xchg
xchg
sbb
mov
mov
xlat
cld
cmp
sahf
and
jae
jecxz
shll
enter
mov
mov
xchg
stc
movl
mov
dec
jle
clc
mov
xor
stos
sub
fwait
push
jmp
cmp
inc
imul
das
int3
xchg
data16
inc
sbbl
jl
and
es
scas
mov
stc
loopne
out
repnz
push
xchg
mov
add
mov
repnz
lcall
cmpl
xchg
lret
or
mov
jecxz
negb
jo
mov
mov
filds
stc
adc
sysenter
pop
ss
or
jne
fwait
push
icebp
jns
sub
addb
mov
push
mov
lcall
xlat
sub
cmp
std
sub
xor
sub
cmp
andl
pop
dec
arpl
nop
sbb
jno
jo
mov
mov
push
mov
xchg
xchg
sti
leave
in
adc
sub
cmp
dec
loop
test
xor
iret
lock
popf
mov
ja
add
aam
out
and
and
pop
insb
xchg
popa
and
pop
xchg
aam
cmpsl
sub
or
or
ljmp
test
mov
xchg
fucom
repz
and
into
loope
icebp
in
call
popf
jb
scas
mov
mov
mov
out
jle
mov
ret
mov
mov
mov
mov
mov
mov
inc
or
or
xor
add
or
mov
inc
adc
shl
outsl
aas
pop
mov
ficompl
jl
xchg
popf
enter
fbld
sahf
out
loop
insl
rcrl
add
loopne
in
cmp
lock
jb
xchg
and
inc
xchg
dec
xor
dec
or
js
mov
dec
jno
xchg
in
lret
mov
sub
cmp
hlt
sbb
pop
cmpsb
sahf
rorl
pop
outsb
mov
movsb
fisubrs
pop
jne
xor
stos
clc
xchg
scas
icebp
pop
push
mov
stc
push
xchg
pop
imul
inc
fsubl
pop
and
sbb
test
sub
cmp
mov
movsb
push
xchg
xor
int
inc
add
sbb
adc
call
push
xchg
jge
push
imul
jp
gs
jge
daa
sub
fildl
shl
mov
mov
mov
inc
ds
xchg
push
ds
lds
daa
mov
jae
daa
lahf
and
xchg
lret
push
dec
je
and
sub
popa
push
idivb
testl
fnstcw
aam
fstpt
inc
sub
cs
ss
push
add
mov
jb
add
sbb
jmp
gs
lcall
adcb
es
sbb
adc
xchg
mov
popf
aad
push
loop
sbb
icebp
pop
xor
faddl
cmp
add
or
jns
push
dec
jo
push
pop
mov
out
jge
adc
add
dec
pop
xchg
bound
push
pop
inc
sti
cmp
decl
test
push
adc
add
es
cmp
jmp
mov
and
call
xor
or
cmpl
jno
popa
mov
adc
adc
mov
adc
push
xor
lea
xor
in
stc
es
cli
out
add
int3
dec
jge
jecxz
cli
mov
mov
add
fimuls
jae
test
mov
fcomps
lea
xor
cmp
adc
jbe
cmp
dec
sbb
scas
and
ss
fs
add
std
ss
movsl
adc
sbb
ficoml
jmp
movsl
lcall
xchg
lds
sarb
mov
jmp
out
xor
cmp
mov
nop
mov
or
sub
adc
and
scas
cwtl
fists
dec
cpuid
add
sub
aas
jmp
icebp
push
cwtl
add
xchg
adc
xchg
imul
imul
sub
xor
lods
sbb
xor
inc
ret
dec
test
and
or
mov
adc
mov
movsl
cld
add
dec
sbb
push
inc
cmp
xchg
xchg
arpl
sub
pop
je
sub
jbe
int3
mov
pushf
mov
pop
or
fcmovnu
push
sub
dec
jmp
rcrb
iret
in
idivb
mov
pushw
and
adcl
pop
pusha
lret
ljmp
rolb
adc
add
inc
fwait
and
adc
into
fld
adc
jae
je
xlat
and
mov
sbb
sbb
out
mov
push
pushf
add
mov
out
push
and
cmp
scas
loopne
repnz
sti
dec
loope
jns
jns
shlb
scas
jg,pt
or
pop
adc
lods
mov
mov
in
int
sarl
pusha
test
sarb
and
mov
cltd
lcall
dec
xchg
and
and
repz
jae
sub
jns
stc
jae
fnstcw
mov
xchg
shl
or
xchg
sbb
loop
lods
in
sbb
icebp
jl
addb
adc
add
ds
and
std
into
gs
pop
test
mov
xor
test
ljmp
pop
mov
sti
dec
imul
inc
mov
pop
inc
mov
out
jmp
decl
adc
roll
leave
jne
pop
pop
in
adc
insb
jmp
test
mov
pop
dec
pop
cmpsb
push
cli
add
loop
pop
mov
ss
pushl
jle
ljmp
xor
dec
scas
pop
clc
dec
popf
out
jno
pop
outsb
scas
xchg
add
sub
ss
sub
lods
cmp
mov
push
int
push
adc
cli
jb
bnd
dec
movsb
cmp
and
int3
sarb
das
loopne
or
pusha
rolb
jnp
popa
dec
pop
pmulhw
pusha
out
lahf
jb
cmp
int3
mov
addb
addr16
test
jbe
jb
test
inc
into
test
push
dec
xor
mov
sahf
dec
push
cld
sbb
fidivl
cmc
mov
in
rolb
sub
mov
das
repnz
mov
pop
pushf
add
jbe
cmp
mov
inc
pop
mov
add
jecxz
push
mov
pop
jnp
std
jl
pusha
push
lea
pop
jmp
sti
addr16
ds
cmp
xlat
mov
outsl
pop
jne
fcoms
push
je
or
lea
insb
dec
sahf
inc
fsubrp
test
push
or
push
test
aas
arpl
repnz
aad
lahf
and
into
mov
icebp
lahf
scas
and
aaa
jecxz
ljmp
xchg
out
mov
pusha
shlb
adc
sub
aas
lods
stos
jge
mov
mov
mov
repz
dec
jle
bound
pop
movsl
fucom
xor
or
cld
in
outsl
les
push
pusha
jle
jns
mov
add
lea
jp
xchg
xchg
xor
cmp
pop
std
mov
or
xor
pop
dec
fmuls
jnp
pop
dec
pop
shll
nop
sub
mov
xor
cmc
cs
adc
je
sbb
imul
test
out
cmp
add
xchg
adc
xor
in
push
add
jnp
mov
mov
ud1
jge
shlb
je
stc
loope
pop
in
loopne
xor
sbb
sbb
xchg
cld
jp
xchg
jbe
mov
popf
ret
inc
rorb
ds
push
sbbl
inc
test
sahf
jg
int3
dec
pop
sub
js
xor
inc
push
push
or
push
out
int
lods
mov
lcall
add
and
jmp
arpl
pop
call
sub
pop
repz
std
arpl
sub
and
icebp
idivl
dec
add
pop
pop
xor
pop
clc
push
xchg
dec
adc
pop
adc
pop
loop
insb
and
fwait
cwtl
sbb
jno
sbbb
add
cs
in
push
repz
mov
aad
das
sbb
leave
pushf
out
mov
inc
adc
in
mov
mov
into
and
repz
shrl
xchg
ds
fistpl
mov
add
cmc
jl
xchg
js
jns
inc
cmpl
rcr
rcll
dec
addl
dec
arpl
fadd
loope
xchg
das
add
push
push
push
lods
sub
inc
insb
mov
jecxz
jl
xor
add
lret
push
pop
mov
stc
adc
and
push
and
add
aaa
push
xchg
push
aas
xor
mov
jecxz
or
jle
stos
fcompl
xor
in
pop
jnp
loop
add
hlt
stos
addr16
lret
jp
outsb
mov
jg
shlb
cwtl
sub
lcall
jne
add
scas
js
xchg
jo
scas
xchg
xor
mov
in
in
push
insl
jno
sbb
inc
push
push
dec
test
pop
push
sarl
and
mov
and
shll
jmp
mov
stc
fidivrl
pop
shrb
push
ja
and
scas
mov
mov
or
in
mov
stc
dec
addl
aas
or
xorl
jbe
clc
mov
addb
cwtl
jge
adc
push
iret
ret
shrb
cmp
enter
cwtl
xor
push
outsb
clc
jnp
stos
data16
xor
imul
or
dec
jle,pn
dec
pop
fs
dec
mov
lahf
cld
in
xchg
mov
das
dec
mov
icebp
lret
ret
fildll
mov
sti
repz
xchg
xchg
and
jb
push
push
scas
dec
xchg
xchg
out
cmpsl
add
imul
and
cmpsl
adc
jo
pop
mov
sbbb
jne
adc
clc
loop
leave
nop
lea
jnp
adc
adc
imul
add
push
fisubl
rcr
inc
test
push
xor
or
xchg
mov
push
mov
mov
sbb
jmp
lahf
fidivrl
mov
mov
mov
hlt
push
add
movsl
or
push
dec
pop
mov
shl
enter
data16
xchg
mov
and
mov
enter
test
js
test
dec
fiadds
cmp
pop
imul
and
sub
stos
sbb
in
xchg
addr16
cwtl
rcl
loopne
and
stos
shll
push
add
scas
idivb
jb
pusha
mov
sbb
cmc
popf
inc
and
push
std
shrl
inc
out
sarl
pop
aaa
and
imull
jecxz
sbb
pop
ja
es
jno
inc
cmp
pop
mov
dec
mov
rcll
push
or
sbb
xor
jne
stos
inc
ret
xchg
and
jb
pop
cltd
ss
and
hlt
stos
ljmp
rolb
sbb
hlt
sbb
pushf
xor
aad
push
dec
mov
xchg
adc
lret
out
push
sbb
aam
fwait
cltd
sti
cs
fdivrl
cli
mov
int3
or
aas
inc
call
into
shrb
jecxz
aaa
subl
inc
pop
aaa
loop
ja
std
popa
int3
aad
dec
loope
mov
mov
notb
xchg
sti
xlat
aad
popf
test
or
ja
jae
mov
adc
in
inc
lret
in
pop
cmpsb
xchg
inc
out
popl
jge
adc
mov
and
into
sarl
and
pop
mov
jo
push
sub
repz
shll
push
mov
pop
ror
lret
push
cmpl
adc
or
jno
pop
xchg
mov
and
popf
pop
sub
mov
push
aaa
mov
sub
into
mov
xorb
sbb
popf
aas
pop
inc
mov
daa
and
sbb
cmpsl
imul
ret
xchg
in
repz
sub
dec
or
dec
loopne
fidivrs
mov
mov
stos
add
mov
push
dec
lahf
outsb
repz
pop
add
add
je
test
add
lret
jmp
insl
mov
sti
or
ret
cmpsl
imul
es
pop
mov
ret
sub
arpl
xchg
insb
push
push
sbb
pop
ss
mov
stc
mov
push
loop
xchg
stos
scas
push
fmuls
pop
jmp
loop
data16
arpl
xchg
lods
out
lahf
mov
mov
cld
clc
cmp
imul
add
sbb
xor
sbb
rolb
repz
cmp
test
jle
filds
in
sbb
adc
mov
fs
cwtl
jae
fisttpll
sbb
std
scas
pop
jle
pushf
jns
xchg
insb
push
lahf
dec
mov
fsts
into
fdivrl
push
jnp
xchg
lahf
dec
jmp
rcrb
inc
insl
push
sub
repnz
movups
pop
pushf
lret
and
inc
aas
pop
test
xor
xchg
mov
and
mov
scas
jb
cmovp
xor
test
add
popa
pop
sahf
pop
inc
in
xchg
adc
fisttpl
cli
mov
enter
pop
push
int3
xlat
insb
test
sub
cmpsb
or
notb
sbb
movsb
sub
out
test
repz
pop
push
sarl
or
push
cmp
cmp
outsl
add
mov
and
jge
xchg
adc
adc
push
pop
or
cmpsl
adcl
or
test
pop
sub
mov
cmp
js
hlt
push
daa
xchg
insb
lret
jge
adc
jbe
aad
movsb
lock
adc
ja
mov
xor
int3
aaa
xchg
jno
and
push
push
aaa
cmp
xor
ljmp
aam
sti
aas
subl
int
icebp
jmp
push
push
xchg
popf
and
jno
pop
cmp
inc
scas
or
push
jecxz
mov
cli
mov
push
and
or
lea
ja
fcomps
xchg
pop
pop
into
fldenv
push
pop
js
push
cmpsb
outsl
push
clc
popa
cmc
push
mov
and
repnz
push
xchg
mov
jne
jge
adc
mov
push
xor
inc
and
in
ja
xor
pop
pop
adc
dec
inc
test
mov
loop
scas
and
frstor
rorb
adc
testl
ds
pop
xchg
fists
adc
xchg
lahf
das
jne
sbb
mov
mov
xchg
fildl
pop
inc
mov
test
stc
cwtl
or
mov
call
aam
stos
and
out
cmp
inc
mov
adcl
ja
sub
mov
popa
in
test
adc
mov
pushw
int
mov
jle
and
xor
notl
xchg
push
bound
ja
cmpsl
pop
sbb
out
mov
stc
jb
push
push
mov
iret
push
cmpsl
movsb
pop
sub
push
xor
lret
cmp
inc
mov
clc
lea
cwtl
mov
fsubl
cmp
pop
subb
gs
dec
add
mov
into
lret
adcl
mov
push
cli
mov
sbb
jle
xchg
mov
and
fcmovb
jecxz
mov
sbb
mov
sbb
mov
jbe
push
addr16
dec
xchg
repz
in
ret
call
in
leave
mov
pop
xlat
cmpsl
sub
jmp
inc
xlat
cld
stos
sub
jmp
xor
mov
icebp
mov
aam
test
adc
push
call
push
cs
inc
and
inc
mov
jmp
adc
int
sub
into
push
xor
pusha
cli
into
test
and
mov
jno
int3
mull
mov
mov
adc
data16
mov
push
into
fucomip
sti
pop
cmp
jno
push
out
decb
js
inc
xor
jae
sbb
test
jns
sbb
aaa
shrl
cli
mov
rcr
inc
cmp
push
jae
jne
out
mov
orl
orl
aaa
js
push
mov
ss
xor
repz
xchg
fs
cmc
orb
adc
xlat
cmp
jecxz
or
in
popf
es
push
mov
or
dec
int3
loop
popa
inc
seta
adc
cli
loopne
dec
fimuls
inc
ss
popf
stos
jmp
aad
dec
out
inc
push
out
imul
sbb
push
dec
inc
mov
push
mov
pop
scas
or
aad
out
pusha
push
push
push
jbe
jnp
mov
mov
pop
imul
sti
xchg
call
imul
mov
mov
and
or
pop
pop
dec
dec
xchg
pop
das
jae
dec
pop
mov
shlb
sahf
pop
mov
aam
insl
aaa
ljmp
lcall
mov
push
mov
push
gs
push
jg
dec
sbb
cmpsb
int3
call
sahf
aas
or
adc
xchg
lret
inc
push
shr
cmpsb
pushf
pop
mov
int
int
add
fwait
jecxz
rcll
push
adc
xchg
aaa
ja
imul
js
mov
subl
clc
and
pop
lods
out
popf
pop
int
jge
mov
shrl
rcll
xchg
jo
shlb
loope
mov
out
enter
rcrb
or
dec
push
fcoml
dec
sti
dec
test
sbb
pop
push
lahf
pop
loop
bound
pop
lods
jp
push
arpl
loop
inc
fbld
mov
add
div
pusha
mov
mov
sub
xlat
aam
push
pushf
in
cmc
jae
cmc
and
add
push
xorb
add
test
mov
xor
out
insb
xor
cwtl
mov
xchg
mov
push
imul
dec
shlb
out
aas
pop
mov
stos
hlt
aas
sti
jg
cld
mov
cmp
fwait
sub
cltd
mov
stos
add
rorb
dec
repz
xor
xchg
loopne
test
sub
fwait
mov
mov
mov
cmp
fs
ds
push
inc
sbb
orl
mov
xor
jp
pushf
add
fldt
dec
fimuls
subl
in
mov
lods
fxch
lock
xchg
mov
testl
push
int
lods
add
ss
adc
pop
ret
and
out
add
push
add
push
incl
cmp
inc
xchg
inc
je
inc
hlt
mov
mov
jnp
cs
scas
popf
push
and
fmull
dec
ljmp
dec
repnz
or
fucom
jb
pushf
inc
cmpsb
pop
sbb
xchg
insl
insl
push
inc
cmp
sub
cli
sahf
dec
ret
popl
in
out
inc
jbe
andl
aaa
dec
mov
xchg
jns
stos
jb
mov
pop
out
pop
test
jle
and
mov
mov
mov
stos
stc
movsl
xor
xchg
aas
into
loopne
mov
js
aaa
adc
push
call
in
and
jecxz
movsb
gs
cmp
aam
clc
testl
and
mov
fxch
pop
ljmp
inc
or
sbb
ds
xor
fsubl
inc
cltd
pop
dec
hlt
leave
sbb
push
add
push
rcll
mov
in
pop
ret
jmp
jl
sbb
jb
cld
mov
inc
or
mov
lret
hlt
or
sbb
sub
mov
xor
and
in
repz
and
movsb
xor
xlat
jnp
push
and
lods
movsb
sbb
mov
sahf
jns
inc
inc
fldl
xor
mov
insl
fwait
xor
loop
stc
shrb
mov
fucom
mov
out
dec
mov
cmp
stos
rorb
mov
pop
mov
mov
mov
addr16
xchg
mov
mov
out
incl
add
xor
xchg
dec
outsl
xor
push
jg
or
jbe
pop
roll
lret
cwtl
sbb
cmp
add
push
and
sarl
mov
popf
je
cmp
xchg
dec
in
xchg
fcoml
jmp
notl
xor
repz
test
sub
repz
out
dec
fcoms
fdivrp
mov
popa
add
jge
lea
es
out
mov
addr16
hlt
repnz
jle
and
or
adcb
mov
cmp
popl
cmpsl
in
lock
test
test
adc
mov
lods
adc
fucomp
mov
jo
int3
sub
loopne
mov
lds
mov
add
xor
cld
mov
scas
in
add
push
pop
lret
je
or
mov
sbb
cmp
sbb
dec
jp
call
inc
in
cld
adc
dec
sub
xor
cmp
adcl
popf
push
fwait
sub
fldt
imul
psubq
inc
xchg
sti
push
fs
fsts
push
repz
insl
xor
ja
std
fld
add
loope
bound
decb
movsl
fdivl
push
sbb
mov
lret
push
filds
sub
pop
sub
dec
sub
lods
out
rclb
jnp
mov
std
add
movsb
mov
ret
mov
aas
jp
aam
push
xchg
lcall
in
scas
mov
add
popw
into
bound
fisubrs
and
push
arpl
xchg
push
inc
enter
push
mov
mov
dec
addr16
push
or
adc
pop
sti
adc
insb
xchg
cmpsl
push
push
jbe
pop
out
les
stc
xor
mov
lods
sub
xor
dec
xorb
call
jo
inc
mov
cmpsl
hlt
into
pop
xchg
sub
dec
das
xchg
ss
daa
mov
mov
push
fcmove
adc
es
dec
jb
jmp
movsl
stos
pop
xor
and
enter
or
dec
ss
pusha
push
mov
ljmp
jo
xchg
imul
mov
insl
mov
gs
int
aam
ja
sub
mov
add
sbb
fcmovb
inc
je
adc
add
adc
xchg
dec
subl
loop
popf
lahf
push
test
in
in
jne
sbb
lret
shll
mov
mov
jo
cli
xchg
and
and
and
xorb
sbb
scas
dec
fldz
jmp
in
mov
aas
xchg
mov
and
std
cmp
mov
js
xchg
mov
bound
repnz
mov
lods
stos
rcl
and
mov
add
cmpsl
lea
cmc
xorb
fidivl
pop
lds
xchg
xchg
or
daa
add
xor
mov
outsl
rorl
fsubrl
xchg
cmp
mov
xchg
test
sbb
hlt
inc
add
iret
call
push
cs
ret
push
movsl
pop
and
jnp
mov
sub
jmp
mov
ret
push
or
add
inc
push
and
ja
mov
stc
inc
lds
jns
xchg
jmp
movsl
inc
call
iret
ds
das
es
xor
mov
jg
pop
test
jg
fstpl
adc
jge
xor
leave
jb
std
inc
cwtl
dec
sarb
sbb
mov
gs
insl
fisttps
stos
leave
adc
add
test
mov
dec
cmpsb
jb
das
xor
ljmp
xor
lea
push
call
out
cmpsl
xor
dec
cs
and
and
sub
outsl
mov
mov
add
sbb
push
nop
aad
popf
pushf
ficomps
es
add
sti
out
scas
clc
inc
dec
into
mov
lahf
sub
sub
repz
pop
xlat
sbb
xchg
getsec
hlt
xor
movsb
sti
mov
dec
mov
mov
and
mov
add
inc
push
pusha
xchg
jge
leave
pop
jns
adc
fs
incb
add
xchg
mov
cmp
lret
jge
popf
inc
clc
fdivrp
ss
lock
int3
ret
adc
adc
mov
cmp
nop
stc
gs
xchg
mov
gs
xchg
xchg
inc
xrstors
movsb
popa
and
dec
dec
lock
mov
daa
sub
shrl
stc
out
cmp
test
stos
out
mov
lret
cwtl
imul
jne
dec
inc
add
xchg
out
pop
out
int3
dec
jecxz
sub
xchg
pop
xchg
push
roll
xchg
lcall
pop
out
arpl
xchg
dec
test
dec
imul
cmp
mov
in
and
pop
add
nop
dec
adc
push
xchg
adcb
mov
in
dec
mov
int3
and
pop
fidivs
jg
aas
push
push
inc
loopne
movsb
movsb
or
add
or
outsl
dec
sub
repnz
push
dec
mov
mov
cli
ss
fnsave
sbbl
inc
call
jbe
ret
pop
add
js
ss
jge
adc
cmp
rcrl
andb
mov
dec
jge
mov
into
rol
fsubs
push
iret
pop
andb
cmp
fucomip
dec
dec
loopne
fs
and
clc
sbb
push
daa
inc
xchg
sti
mov
sarl
lret
subb
inc
movsb
xor
sbb
clc
xchg
mov
test
out
js
gs
and
cmp
aad
fistl
inc
cmpsb
test
inc
aas
xlat
xchg
sbb
outsl
add
push
das
sub
aas
clc
ds
clc
daa
sbb
scas
filds
add
shll
cs
fcoml
sbbb
pop
mov
mov
or
lds
imul
mov
les
aad
jnp
adc
punpckldq
cmc
dec
jp
jae
pop
xchg
cmp
mov
and
xor
movb
fnstsw
xchg
jmp
sub
popa
test
orl
push
xchg
jo
xor
mov
pop
fidivs
fwait
cmc
sbb
xchg
nop
imul
mov
mov
mov
pop
or
jl
out
popf
sub
dec
std
in
pushf
mov
outsb
std
bound
stc
cmp
int3
xor
lcall
mov
push
movsl
mov
ljmp
push
fs
xchg
mov
aam
popf
adc
jne
in
mov
sbb
xor
mov
pop
imul
adc
mov
bound
mov
pop
les
jg
shl
pop
aas
ja
cmp
sub
mov
jns
push
ret
push
or
mov
data16
lret
sahf
lods
mulb
mov
idivl
and
bound
add
or
std
pop
mov
jae
pop
imul
and
subb
lahf
pop
outsl
decl
lock
pop
call
cmc
inc
not
inc
mov
and
or
loope
xchg
mov
sbb
das
sbb
push
mov
out
push
xor
leave
scas
mov
lods
push
popl
add
dec
or
pop
cmp
out
mov
push
movsl
gs
pop
pop
bound
test
dec
cmpsb
mov
aad
aad
shll
and
pop
dec
xchg
xchg
inc
int
push
sarl
pop
mov
mov
lahf
rcr
cld
dec
pop
imul
jmp
and
aam
dec
inc
lea
xchg
repz
or
ljmp
repnz
imul
popf
das
arpl
xchg
xor
lods
aaa
mov
insl
mov
mov
adc
sub
jae
mov
pushf
iret
jg
inc
scas
pop
loopne
sbb
cmp
lahf
xchg
popa
pop
ficoms
stos
lods
test
stos
cmp
rorl
or
fs
cmpsb
mov
pop
cwtl
loop
test
mov
lods
mov
pop
ds
int
shl
cmp
dec
sti
add
dec
pop
pushf
sub
xor
test
inc
cld
sub
sarl
pop
xchg
sub
and
dec
mov
push
sub
inc
inc
cwtl
shll
jg
stos
das
vaddsubpd
paddd
clc
pushf
loope
rclb
dec
out
jo
inc
adc
sbb
xchg
push
test
sbb
fisubl
lret
add
lods
bound
bound
xchg
lcall
push
lods
push
pop
adc
xchg
mov
mov
cmp
jmp
sbb
mov
or
mov
lret
outsl
pop
aad
cmp
aad
inc
pop
testl
add
xchg
push
test
das
and
fists
adc
movsl
in
dec
pushf
mov
jp
adc
ljmp
shll
push
inc
add
fwait
add
xor
popa
ds
and
stos
test
jnp
outsb
mov
xchg
mov
fidivs
fs
mov
inc
mov
and
stos
sub
push
rolb
pop
mov
mov
pop
ret
idivb
ret
sbb
lret
push
loopne
aad
adc
push
jbe
in
gs
popl
mov
pusha
das
sbb
mov
addr16
adc
pop
xchg
xchg
or
xor
pop
test
cmp
pop
or
imul
mov
imul
ficoms
add
mov
push
add
or
das
or
sahf
push
push
hlt
cmp
xor
or
xorl
mov
bound
mov
arpl
lods
push
rcrl
cmpl
outsb
fdivrs
gs
mov
inc
add
xor
dec
sub
test
stos
pop
test
loopne
shll
mov
add
jns
lret
mov
sub
aaa
fcomp
mov
stos
jecxz
fdiv
sbb
jne
popf
dec
mov
sbb
sub
push
push
mov
cltd
pop
cmpb
dec
cmpsb
fs
push
clc
fists
adc
movsb
mov
clc
nop
gs
mov
test
stc
cmp
push
repz
mov
pop
outsb
mov
repnz
mov
shl
xchg
rcrb
mov
bound
mov
aas
jae
lahf
cld
sub
adc
rcrb
pop
push
xor
fmull
push
or
aaa
xor
sub
mov
inc
mov
mov
aad
pop
mov
push
ja
loop
mull
repnz
mov
jno
adc
pop
aas
lods
fwait
aad
pop
and
test
dec
and
xchg
xchg
pop
mov
popf
testl
cmp
push
pop
lret
shlb
or
lds
push
movsl
cmp
xor
dec
adc
and
push
pop
pop
sub
repnz
inc
pop
jp
loopne
loopne
push
icebp
pop
adc
push
sub
pop
fdivrp
inc
push
cmc
push
jmp
mov
rclb
xchg
mov
mov
icebp
fisttpl
mov
mov
cmp
mov
jae
pop
mov
outsl
pop
shlb
stc
sub
sub
or
sbb
cmp
mov
adc
inc
bound
ss
mov
push
imul
xchg
adc
iret
mov
adc
xlat
pushf
mov
scas
jge
fs
adc
movsb
mov
xchg
stos
cwtl
add
shlb
iret
adc
mov
jg
fcmove
cmp
in
push
dec
iret
fsubrl
outsl
das
lds
cltd
push
pop
add
dec
loopne
lcall
ljmp
scas
push
icebp
jae
bound
out
enter
out
cmc
and
data16
clc
lea
leave
mov
sub
add
sub
mov
cmp
es
icebp
mov
mov
mov
int3
pop
loop
sub
xchg
lea
outsl
cmpsb
inc
add
out
pushf
insl
xchg
out
test
dec
imul
stos
cmp
jecxz
lcall
icebp
push
mov
and
test
sarb
inc
repz
sbb
pop
adc
adc
test
mov
mov
sub
stos
and
in
mov
aad
sub
mov
dec
mov
xchg
pop
lock
lahf
inc
xor
xor
sbb
lods
std
sub
pop
dec
jecxz
pusha
test
bound
push
icebp
leave
cmc
jg
cmp
std
call
imul
mov
lods
cmp
mov
rcrb
bound
fisttpl
pop
call
jb
les
fmull
inc
cmp
push
lock
in
mov
mov
jp
lcall
jbe
out
or
cmp
push
mov
flds
sarb
lcall
xlat
or
psubsw
insw
mov
mov
nop
addb
dec
sbbb
outsb
push
or
and
xchg
add
lcall
ds
hlt
repz
in
mov
iret
inc
jo
ja
mov
icebp
jecxz
mov
int
call
mov
mov
in
scas
sar
int
fmuls
mov
fistps
sub
imul
sahf
cld
test
mov
lds
ja
push
loope
outsl
mov
les
dec
push
cs
mov
sub
jb
push
pop
mov
xor
dec
cltd
out
mov
out
inc
xchg
inc
add
xchg
sub
inc
ja
mov
cmp
iret
or
mov
cltd
ljmp
mov
dec
mov
xor
push
das
arpl
fimull
in
cmp
in
and
and
mov
imul
sarl
xchg
movsb
rorb
push
cld
pop
add
subl
xor
out
lret
sbb
add
movsl
insb
sahf
fsubrl
icebp
push
gs
imulb
mov
pop
push
jecxz
adc
add
out
cmp
add
adc
imul
imul
or
cmp
jo
popa
xchg
lock
das
cmp
dec
inc
sarl
add
out
jmp
mov
rcrl
and
das
ret
lds
test
out
sbb
sbb
mov
popa
sbb
adc
pop
outsl
daa
out
push
ret
les
dec
cld
repnz
cmpb
aaa
aam
fldenv
xor
inc
sbb
fidivrs
imul
out
loop
lea
sub
adc
or
push
popf
cmp
bndstx
jae
gs
xchg
test
lcall
mov
or
sti
iret
repz
xchg
insl
cwtl
xor
fisubrs
sub
loope
dec
mov
pop
push
mov
xchg
or
imul
call
jo
aad
dec
dec
jns
lcall
dec
and
xor
sub
adc
imul
mov
test
mov
push
repz
mov
xchg
negl
pop
sub
lcall
loope
jb
adcb
dec
repz
test
arpl
push
insl
mov
xlat
xor
leave
adc
pushf
jl
pushf
push
add
mov
push
flds
lcall
sbbl
into
xchg
mov
inc
into
out
or
aam
inc
stos
xor
pop
and
xor
dec
inc
cmp
xchg
xchg
xchg
aas
out
cltd
cmpsb
lcall
jne
dec
inc
ret
cmc
loope
or
pop
jge
sbb
sub
call
mov
scas
and
xchg
iret
cmp
jle
fisttpl
mov
aad
fs
push
or
or
stc
test
lods
popa
cld
mov
xor
scas
push
sub
or
shl
mov
pop
mov
insl
push
sar
in
imul
stos
inc
mov
fimuls
cmpsb
pop
push
outsb
mov
cwtl
sub
and
cmpsl
inc
les
inc
mov
mov
dec
insl
rcr
push
sti
ja
cmpsb
pop
or
fisubrs
xor
loope
xor
outsl
mov
cwtl
xor
test
loopne
rolb
and
push
push
add
popf
mov
or
push
xor
sbb
je
push
ja
mov
fs
sbbl
cmp
push
out
inc
stc
xor
push
adc
jecxz
hlt
scas
aas
jmp
rep
addr16
lods
inc
adc
repz
jl
roll
mov
mov
push
adc
sarl
hlt
push
jle
sub
sti
push
insl
xchg
adc
push
mov
das
insb
dec
pushf
in
dec
out
mov
push
push
jge
and
in
and
xchg
pop
adc
test
enter
iret
pop
dec
shlb
lret
mov
sbb
bound
cmp
cmp
data16
sub
mov
loope
aad
adc
jmp
bound
dec
shrl
out
push
into
sbb
mov
movl
push
adc
mov
adc
dec
inc
lret
addl
xor
push
push
cli
in
hlt
xor
inc
sti
pop
imul
pop
add
es
cli
push
dec
or
fsubrl
gs
push
sbb
push
add
and
rcll
pop
lcall
popf
in
out
and
push
andb
inc
inc
cmp
out
mov
xlat
sbb
subl
popa
test
pop
ret
inc
js
sbb
cmpl
adc
adc
ds
adc
ljmp
gs
imul
jle
xor
scas
jle
clc
and
dec
addl
pop
enter
pop
loopne
or
and
fnstenv
push
sub
lcall
pop
scas
cmpsl
dec
add
xor
cmp
or
shll
setb
pushf
in
push
and
popa
je
popf
cmp
iret
xchg
sub
add
mov
fidivs
or
es
arpl
push
mov
lods
lcall
in
cmp
clc
sub
divl
ret
cmp
stos
push
daa
int
sbb
or
sarb
sarb
cmp
or
sub
adc
bnd
outsl
xchg
sbb
arpl
fucomip
inc
inc
cwtl
adc
int3
jns
xor
push
fistpll
push
mov
dec
adc
sub
pop
jnp,pn
pop
ja
test
mov
mov
mov
imul
sub
inc
in
sbb
js
sarl
mov
lds
or
cmc
loop
pushf
aaa
fnstsw
xor
sub
jno
sti
jl
add
test
mov
out
decb
setg
rorb
inc
cwtl
or
dec
cmp
push
lret
popa
jnp
loopne
cli
dec
xchg
pushf
mov
notb
jns
dec
dec
inc
pushf
inc
mov
jb
jmp
xchg
aas
sar
lret
and
repz
sbb
scas
push
mov
sub
aaa
cmp
xchg
int3
mov
out
jbe
pushf
mov
jae
das
sahf
lret
xchg
jg
mov
mov
dec
lods
faddl
clc
mov
lods
jbe
and
jmp
fwait
inc
flds
and
sbb
cmp
or
fwait
insb
icebp
aad
loopne
outsl
add
jo
pop
or
jecxz
and
lods
xchg
jbe
loope
fnstcw
leave
add
sbb
mov
pop
call
jg
fs
or
or
les
ja
std
aas
jge
scas
loope
jmp
jbe
push
add
sub
pop
lcall
mov
jle
ret
jne
jl
mov
mov
lods
xchg
es
call
repnz
les
xchg
shrb
adc
andl
adc
jae
mov
into
repz
in
aas
cmc
jl
stos
neg
movsb
mov
inc
sbb
add
rcrl
ret
sub
cmp
fiadds
insb
dec
mov
or
ret
sbb
test
cmp
and
adc
outsb
divb
das
jl
es
xchg
loopne
sub
ret
xlat
push
add
or
or
lret
loop
out
out
push
iret
cmpb
fwait
push
pop
in
push
cmp
enter
and
scas
out
sbb
clc
js
inc
inc
test
addr16
nop
mov
cmp
mov
sbb
sub
cli
push
test
pop
imul
repnz
add
pushf
pop
stos
xchg
leave
loope
mov
lret
inc
xor
arpl
test
mov
fcmovnu
xchg
and
sbb
sub
jns
call
fucomp
stos
icebp
imul
mov
mov
push
in
pop
in
push
loopne
mov
fadds
xchg
push
stc
xlat
ljmp
cld
scas
dec
pushl
jbe
mov
push
or
push
pop
push
and
or
mov
loopne
pop
addb
jb
pusha
in
cmc
xor
mov
jle
xor
or
add
xor
in
xorb
std
repnz
aam
fdivl
pop
insl
add
iret
repz
aaa
shrl
jae
xor
int3
jmp
mov
enter
stc
sahf
cs
jns
daa
lods
jns
push
popl
je
lret
fwait
xchg
mov
inc
ret
mov
movb
fcoms
dec
fidivrl
mov
cld
push
dec
das
repnz
je
pop
jbe
fdivrs
cwtl
js
lea
xchg
cmpsb
xchg
out
je
adc
inc
inc
sub
push
lret
std
iret
inc
sbb
add
negl
cld
sbb
enter
aad
pop
ja
pop
or
insl
enterw
gs
fcmovne
mov
push
gs
add
gs
stc
mov
rorl
pop
fisubs
xor
fs
pop
inc
pop
ret
cmp
ret
mov
pop
ljmp
pop
sbb
push
outsl
dec
call
and
jecxz
xchg
jl
add
mov
xor
cmp
dec
mov
lret
jecxz
jp
pop
idivb
push
jge
sbb
test
iret
enter
inc
addr16
sbb
dec
sahf
aad
mov
mov
add
or
lods
pop
aam
adc
xchg
inc
cmp
mov
or
mov
mov
mov
and
dec
rorl
jnp
movsb
sub
sbb
fbstp
shrl
test
fucom
and
shr
fildl
xor
es
xor
sub
push
repnz
int
loope
cmp
test
xor
icebp
jge
je
cmp
adc
inc
lahf
test
mov
mov
stc
lret
pushf
inc
dec
cs
out
fidivrs
sub
shll
jmp
je
movsb
push
xchg
jns
jae
dec
call
dec
or
neg
cmpsl
je
shrb
adc
xchg
fsubr
jge
pop
pushf
mov
jmp
negl
pop
push
cmc
in
sbb
ja
popf
cmp
sbb
mov
cmp
mov
push
cmp
pushf
es
int3
fidivrs
inc
rcrb
push
bound
mov
fnstenv
cmp
cmpl
or
es
dec
xor
xchg
lds
fistpl
mov
cltd
loope
outsb
inc
sub
adc
push
test
mov
mov
in
mov
out
mov
or
sbb
fbstp
dec
push
es
jg
sbb
sub
icebp
or
fs
sbb
out
inc
xchg
rcrl
pop
push
aam
jb
mov
iret
cld
jbe
cmp
xchg
lock
lret
mov
icebp
cwtl
movsb
into
aam
and
jns
sub
ror
adc
dec
and
data16
xor
mov
jae
jecxz
push
mov
sti
imul
cmp
adc
mov
push
cmc
nop
jmp
or
notl
mov
scas
mov
fisubs
jl
and
jo
push
lds
jns
add
fistps
cld
cmpsb
push
xor
nop
cmp
lea
adc
mov
clc
jbe
sbb
fimuls
movsb
aaa
mov
cmp
data16
jns
inc
jge
pop
clc
sub
pop
push
into
add
mov
jg
cmpsl
std
dec
popa
dec
xchg
adcb
push
out
inc
ss
jg
lea
xchg
insb
fs
test
pop
inc
dec
jnp
cmp
out
lret
sbb
lahf
or
lock
push
insb
stos
dec
mov
lock
sub
add
sub
sub
pop
inc
xor
add
sti
rolb
nop
or
jns
popa
push
repnz
xchg
test
or
dec
sbb
mov
imul
ja
push
sahf
lahf
cmp
sahf
cmp
pop
sub
stos
addr16
lea
lds
mov
sbb
xchg
dec
pop
test
mov
jo
xchg
push
mov
int
mov
push
pop
popf
hlt
lods
dec
lret
push
movsb
or
out
test
dec
xchg
cmp
stos
adc
cmpsl
jp
mov
dec
into
aam
mov
insb
mov
icebp
push
arpl
dec
out
xlat
movl
pop
gs
cmpsl
lea
xchg
and
cmp
cmp
lock
imul
mov
in
mov
cmp
xchg
jp
add
aaa
mov
gs
lea
lock
dec
fsubl
mov
loop
mov
push
sbb
outsl
lods
je
and
bnd
inc
ds
gs
les
pop
pusha
inc
mov
test
pop
js
stos
sbb
mov
jle
adc
adc
int
test
data16
lods
test
lahf
cmp
repnz
sar
push
fwait
mov
push
pop
cld
cld
inc
aas
inc
mov
loopne
inc
test
cs
mov
fstl
ds
popf
test
shr
call
roll
outsl
sub
cmp
or
ja
aaa
or
or
std
xor
scas
shlb
movsb
fstl
mov
lock
dec
add
mov
int
push
lret
pop
iret
add
cwtl
insb
xor
jae
lcall
dec
adc
idiv
int3
mov
jle
pop
xor
lret
and
call
or
cwtl
fstp
data16
inc
pop
out
and
push
out
std
mov
xchg
fwait
daa
outsb
sbb
ljmp
ds
xchg
xchg
les
nop
mov
jns
movsl
mov
aaa
out
xchg
icebp
jae
xchg
cld
and
rcrb
cs
push
loopne
loope
dec
pop
mov
xchg
jnp
arpl
mov
jnp
shrl
ret
out
imul
xchg
xor
daa
add
fs
mov
shl
lahf
movb
mov
sub
mov
fmull
xchg
add
cltd
cltd
icebp
sbb
ljmp
mov
mov
movl
std
int3
mov
daa
cmp
pop
loop
mov
and
outsl
jnp
push
repz
ret
jne
jg
mov
das
push
xchg
repnz
lea
iret
mov
enter
sbb
xchg
jno
pushf
or
lock
push
and
nop
in
fldl
ret
ss
into
push
lea
jmp
fildll
ds
push
jae
mov
pop
and
push
mov
ja
sub
pushf
shlb
jbe
sub
scas
idivl
sti
mov
popa
xchg
push
lcall
pop
xchg
push
push
int3
ret
inc
out
push
xor
add
lods
gs
cmp
bound
sbb
xchg
pop
aam
out
sub
xchg
addr16
mov
scas
mulb
dec
jo
jmp
movsl
ret
stc
xor
sub
jns
add
sub
fs
xlat
loope
mov
and
jns
fstl
lahf
stos
jp
adc
inc
scas
popa
lret
inc
cmpsb
push
ret
mov
scas
arpl
dec
notl
arpl
dec
arpl
cmp
mov
sbb
pop
sub
jle
int3
xor
inc
cwtl
xlat
pop
xlat
mov
testb
leave
and
mov
repz
xchg
lret
in
and
ss
cmp
int
or
les
out
pop
xor
and
mov
repnz
mull
es
adc
js
xchg
sub
leave
int
les
nop
inc
dec
adc
jb
add
cmp
push
ds
out
xor
mul
in
push
push
and
cmp
and
jne
hlt
mov
mov
enter
out
adc
aam
fnstenv
mov
inc
cs
stos
pop
and
cmc
sarl
or
loop
lret
xchg
cmpsl
stos
nop
jns
outsl
arpl
and
in
pop
xchg
out
dec
xchg
outsb
mov
sub
into
aaa
stc
inc
jne
jns
add
imul
pop
shrl
push
iret
andb
xor
mov
jecxz
cmp
fsubrs
inc
lret
jecxz
enter
inc
and
outsl
inc
mov
outsb
push
stos
push
dec
lcall
inc
xchg
shrl
sub
or
inc
xor
add
xchg
xor
mov
cld
cmp
in
push
add
and
inc
pop
or
fdiv
adc
mov
push
aas
xchg
cmpsl
cmp
cmp
jg
and
push
mull
sbb
scas
fmuls
aad
pop
adc
std
out
arpl
xchg
sub
jns
pop
mov
scas
icebp
jo
pop
and
jnp
jmp
and
xchg
test
ficoms
pop
aam
ret
in
movsl
data16
jg
popf
fmull
xor
pop
mov
dec
call
sub
stc
push
mov
insb
pop
adc
insl
dec
sti
push
pop
jnp
and
xor
rclb
mov
mov
cmpsb
jmp
popf
adc
cmp
dec
out
ds
inc
adc
aad
repz
js
or
mov
psraw
or
out
retw
add
xorl
divl
pop
mull
cli
inc
lcall
sbb
repz
in
mov
aas
pop
cli
lods
out
adc
js
pop
xor
adc
mov
pop
sar
movb
popa
dec
mov
fcomps
gs
fnstsw
out
or
repz
or
cmpsb
push
cmp
iret
inc
mov
jbe
lcall
push
popa
repz
mov
push
rcl
dec
jg
and
xlat
sub
shrl
jo
mov
adc
aaa
mov
sbb
sbb
and
push
add
cmp
std
adc
push
sbb
iret
and
xor
arpl
enter
and
mov
xchg
pusha
push
outsl
sub
fidivrs
stc
iret
rol
jnp
push
lea
sub
mov
push
mov
int
xor
aam
xor
dec
cmp
or
sbb
leave
mov
cltd
mov
mov
sub
test
push
ss
pop
les
xor
shrb
cld
inc
in
ljmp
cmpsb
mov
out
jl
iret
push
cwtl
sub
xchg
mov
push
adc
cmp
sbb
dec
notb
loop
mov
fnstenv
lcall
roll
repz
jns
add
ja
inc
bnd
cmp
pushf
jl
sahf
shrl
stos
push
fidivs
sbb
sahf
jecxz
ja
pop
fnsetpm(287
shll
push
and
lods
push
int3
int3
mov
sbb
add
mov
pop
mov
xor
lret
push
inc
outsb
iret
xchg
movsl
std
in
outsb
jp
lock
add
xchg
stos
jb
mov
cwtl
jb
sti
or
aaa
mov
orl
jbe
ss
lret
push
sbb
adc
iret
cmpsl
mov
in
mov
lcall
test
lods
or
in
inc
adc
call
or
xlat
or
js
call
jmp
jbe
pop
mov
notb
lea
rcrl
sti
xchg
mulb
sub
dec
jo
fdivr
and
arpl
add
imul
xchg
xor
test
insb
sti
jmp
int3
pop
pusha
adc
pop
mov
push
dec
mov
addb
dec
bound
lret
aaa
fidivrl
stos
mov
xchg
movsl
rep
push
sub
sub
adc
and
popf
clc
subb
inc
js
sahf
das
mov
ja
jno
aam
lret
xchg
and
cmp
ret
push
inc
mov
jae
fdivs
inc
ret
loope
pop
cmp
int3
jno
addr16
das
nop
xchg
pop
dec
pop
dec
ljmp
jle
popf
jbe
cmpl
cmp
repz
xchg
out
lods
mov
jns
sbb
and
mov
adc
icebp
hlt
pop
or
mov
xor
mov
and
jl
dec
pop
jl
mov
xchg
mov
bound
adc
inc
stc
shlb
cmpsl
pextrw
pop
jns
imul
mov
icebp
jmp
xor
jo
inc
jnp
inc
aas
add
xchg
rep
pop
sti
lea
lret
aas
in
ja
aad
gs
pop
out
sbb
xchg
pop
bnd
adc
jp
pop
xor
movsb
in
pop
inc
ret
clc
out
xchg
nop
imul
jnp
outsl
push
jl
pop
jge
fs
testl
mov
inc
pushf
mov
cmp
inc
fnstsw
mov
mov
ss
cld
enter
filds
test
add
pusha
imul
imul
pop
pop
dec
push
jg
sbb
popw
fisttps
sub
fiadds
adc
jmp
pop
out
xchg
or
jge
fstl
jle
xor
gs
push
xor
xor
fisubrs
xchg
jl
xlat
ret
lret
mov
lret
aad
push
sub
scas
popa
push
sub
mov
inc
lods
pop
into
push
and
inc
adc
mov
cltd
hlt
repz
in
cmp
in
lods
int
inc
leave
add
movsb
add
pushw
dec
sub
xchg
insl
mov
negb
xchg
arpl
add
sbb
adc
sbb
lret
fdivrs
lods
hlt
mov
and
inc
insl
das
addl
lret
in
mov
push
ret
sub
pop
mov
mov
arpl
test
mov
loopne
lret
ds
dec
mov
adc
adc
insl
adc
xor
movsl
dec
push
js
bound
in
jb
push
shll
jno
push
dec
daa
gs
lods
dec
xlat
inc
sahf
int3
and
pusha
cmovge
sub
dec
dec
mov
pop
gs
leave
into
adc
xchg
out
mov
jmp
ds
cld
pop
flds
add
popf
sbb
std
sbb
and
dec
push
call
dec
out
jbe
adcb
push
fisubrs
dec
shlb
inc
adc
dec
idivb
icebp
call
nop
or
fldenv
enter
insl
adc
add
inc
push
call
test
dec
push
mov
cmc
jbe
leave
mov
pop
dec
clc
movsl
in
add
sub
push
pop
mov
lods
outsb
add
sub
pushf
and
cwtl
and
pop
mov
xchg
adc
lock
mov
xlat
push
inc
stos
scas
jmp
push
or
mov
xchg
daa
out
or
jecxz
aas
push
sahf
pop
or
pop
ljmp
pop
add
dec
fdivp
pop
fsubrs
cmp
mov
aam
in
push
adc
sbb
sub
mov
arpl
add
push
aad
test
es
xor
push
cmp
test
xchg
push
or
cmp
rcrb
ds
or
aaa
repz
bnd
outsl
out
cld
cmpsb
or
mov
inc
je
idivb
mov
push
cs
dec
aaa
mov
shlb
jl
xor
mov
and
shll
pop
inc
in
stos
out
pushf
ficoms
shrl
popa
jmp
out
push
movsb
lret
push
cli
mov
push
mov
or
lea
sbb
jmp
jbe
in
enter
loopne
insl
mov
xlat
cmpsl
inc
dec
inc
adcl
pop
aam
jns
je
push
push
jl
fsubp
mov
mov
mov
mov
sbb
cmp
popf
xchg
scas
dec
sub
call
ret
movsl
fnstenv
sti
out
cmpsl
sbb
jb
jp
push
sbb
xor
gs
pop
addr16
pusha
outsl
in
mov
pop
inc
xchg
mov
sub
stos
rcll
jb
je
or
in
push
sub
rclb
andb
hlt
and
jmp
and
cmp
lret
jbe
pop
pop
mov
or
fsubs
lock
add
xchg
scas
test
push
jmp
fwait
xchg
mov
push
gs
mov
sub
stos
and
sbb
ljmp
adc
insb
es
shll
icebp
out
push
sub
mov
push
sub
fsubl
push
inc
jge
add
pop
lods
lcall
push
lret
dec
mov
inc
lds
jae
out
bound
or
cli
pop
jl
lds
mov
cmpsb
xor
int3
fldl
sahf
repnz
xchg
mov
inc
inc
mov
mov
jnp
mov
jbe
mov
ret
call
jno
push
stos
cltd
or
adc
lret
mov
jge
or
scas
lret
shr
rcll
ljmp
inc
push
fs
add
stc
into
mov
iret
pusha
testl
push
inc
fisubs
cmp
adc
and
xchg
inc
es
jle
lret
inc
loope
iret
imul
push
xchg
or
iret
jecxz
stc
mov
rcrl
je
jno
icebp
jge
cmp
adc
jb
mov
ja
xor
mov
jmp
pusha
cld
cmpsb
jo
add
add
call
scas
dec
hlt
xchg
mov
lea
idivl
gs
xchg
insb
test
pushf
dec
andl
in
adc
adc
fiadds
inc
icebp
call
add
jns
and
mov
mov
cmc
jecxz
push
adc
and
movsl
and
add
and
inc
add
cmp
push
push
out
lods
int
int
data16
into
or
dec
clc
shll
loopne
mov
cmp
add
faddl
jmp
movb
test
pop
xor
aam
loopne
ljmp
inc
jae
push
mov
jnp
in
aas
push
push
push
in
mov
or
push
lods
push
xor
fldcw
cmpsb
mov
mov
in
or
testl
xor
xchg
loopne
jae
insb
cmc
push
sbb
push
cmp
xor
inc
or
xor
sub
add
hlt
std
enter
int
in
xchg
mov
fisubs
jae
hlt
push
and
inc
dec
filds
push
push
cmp
mov
jmp
mov
pop
mov
les
add
jno
scas
stos
lret
cwtl
dec
loope
test
and
stos
dec
pop
add
mov
jle
repz
adc
sbb
test
sub
inc
stos
push
jb
cld
cmp
subb
sbb
lods
into
inc
shlb
pop
xchg
mov
mov
dec
and
adc
in
shlb
and
cmp
rcll
pop
filds
and
adc
push
imul
popf
mov
das
pop
xchg
notb
adc
mov
leave
push
ds
cmp
inc
sbbb
call
addr16
ja
push
js
dec
fiaddl
adc
nop
mov
dec
popf
mov
lods
stc
mov
mov
out
mov
or
mov
push
xlat
mov
out
pop
cld
stos
mov
movsb
adc
xchg
jmp
mov
mov
les
cmp
ljmp
pop
sbb
push
div
inc
adc
imul
adc
ss
ret
shrl
aad
test
push
fnsave
adc
popa
push
nop
and
adc
aaa
inc
fstpt
ljmp
mov
mov
inc
adc
push
jne
int
loopne
mov
idivb
jbe
mov
mov
xor
ret
out
add
jno
fcmovnbe
dec
cld
pop
pop
push
hlt
in
popa
ja
aad
sahf
inc
pop
sub
inc
call
mov
pop
movsb
les
sarb
enter
xchg
mov
pop
fisubrl
jb
pop
aas
xchg
or
ret
cmp
out
dec
repnz
mov
aas
dec
and
out
inc
mov
jecxz
dec
sub
pop
mov
aad
aad
ret
fisttpl
rclb
mov
cmp
add
adc
fists
shll
pop
jmp
push
dec
test
loopne
ret
push
ja
loope
aad
mov
cwtl
jno
mov
aad
pushf
add
dec
rcrb
jmp
dec
jns
mov
sbb
jg
leave
pusha
les
fwait
loopne
jp
call
rcrl
js
mov
iret
dec
and
push
cmpsb
xor
and
dec
and
inc
in
add
out
pop
lcall
stc
loopne
cwtl
iret
popf
jns
sbb
sub
lahf
cwtl
shrb
pop
int
mov
shll
shl
nop
call
push
rolb
sahf
pop
fxch
inc
xor
add
stc
push
and
ret
mov
sbb
lcall
mov
and
adc
mov
xor
mov
mov
fnstsw
ficoml
inc
xlat
cs
icebp
subb
jns
std
repz
or
sti
jne
sti
mov
insl
fildl
outsb
add
or
fadd
aam
push
repz
jecxz
pop
cmp
icebp
sub
stos
inc
daa
pop
sbb
mov
xchg
adc
jl
push
and
adc
jg
mov
push
roll
fbstp
mov
sub
xorb
dec
add
call
frstor
sbb
xor
lcall
mov
jg
lds
daa
xchg
nop
aad
rorb
data16
ror
mov
ss
sub
xchg
jl
adc
sub
jge
push
mov
mov
sti
dec
or
aam
inc
scas
mov
adc
cmp
sbbb
xchg
outsl
fidivs
pop
or
je
cmp
cltd
stc
ret
sbb
sbbl
pop
sbb
ds
cmp
lret
push
out
insl
or
pop
mov
push
data16
push
add
pop
push
shrl
and
mov
inc
ja
icebp
sub
cmp
idivb
lds
xor
jbe
sbb
imul
push
lock
addr16
jecxz
in
sbb
jl
lea
mov
push
ror
cmc
jle,pn
pop
or
sbb
or
cltd
add
sub
scas
sarl
inc
into
mov
bound
pop
mov
lcall
test
and
ss
add
jmp
and
jle
enter
ficompl
xchg
lcall
xor
loope
call
pop
cmp
fld
xchg
xlat
mov
and
adc
cmp
outsb
xor
out
scas
ljmp
in
add
cmp
js
push
add
icebp
adc
bound
cmc
iret
testb
jae
cltd
xor
pop
add
dec
loopne
divb
pop
mov
pop
loop
dec
daa
decl
mov
pop
inc
jg
lds
xchg
mov
mov
sahf
addb
fmulp
push
outsb
mov
lret
sub
es
mov
gs
mov
mov
loope
and
icebp
push
imull
jmp
pop
cmp
ja
ret
pop
outsb
dec
enter
not
sbb
jae
pop
mov
pop
mov
mov
jg
inc
fs
push
add
pop
mov
jp
pop
add
stos
std
lahf
fidivl
fwait
sbb
mov
pop
pop
jle
imul
mov
and
addr16
jmp
or
cmp
fiadds
fwait
jmp
sahf
rcl
pop
in
push
jmp
xchg
mov
out
popa
clc
scas
pop
pop
sub
iret
and
cwtl
and
outsl
ss
push
sub
lret
sub
jno
ss
push
mov
outsl
inc
mov
aaa
sbb
push
or
cmpb
hlt
inc
cli
pop
mov
popf
push
stos
cmp
jo
inc
movsl
pop
xor
rorl
pop
rcl
dec
lret
sub
xchg
and
loop
insl
arpl
idivb
mov
jle
inc
xorb
xchg
call
or
pop
pop
fisubl
jmp
lret
jg
faddl
out
and
test
std
imul
neg
leave
add
bound
pop
add
sbb
jno
sub
inc
outsb
add
adc
pop
xor
cmp
mov
clc
rcrb
jns
sbb
inc
ss
xlat
mov
jnp
je
out
cs
mov
fnsave
sbb
pop
std
je
xchg
lds
xchg
xchg
ret
mov
jecxz
xor
add
fadd
int3
aas
nop
mov
pop
mov
mov
xor
or
add
hlt
fwait
adc
inc
repnz
int3
daa
shlb
pushf
dec
cmpsl
les
lock
aad
in
mov
ret
out
jne
dec
ja
push
jbe
jns
stc
daa
stos
adc
sbb
sbb
dec
mov
fstps
and
cmp
loope
pop
imul
ljmp
xchg
int
lock
xor
out
out
insb
or
cmp
sbbl
jecxz
imul
shll
mov
lods
mov
add
push
idivl
mov
sub
adc
xchg
stc
mov
mov
sti
cmc
pushf
fsubs
movsl
dec
ds
and
inc
xchg
push
mov
xchg
xor
or
rcrb
jns
test
js
dec
in
jno
rorb
dec
pop
jmp
imul
lea
shlb
pop
cmc
jae
xor
loope
pop
out
in
ja
ficoms
or
out
sbb
mov
ret
rcrl
or
rcr
dec
addb
pop
int
movsb
dec
mov
xchg
bound
sub
and
test
lret
sbbl
or
add
or
sub
sbb
hlt
and
enter
mov
cmp
fwait
test
test
and
nop
xor
dec
cwtl
jae
icebp
rcll
fisubrs
or
xchg
pop
jmp
or
and
push
scas
aaa
inc
mov
imul
aam
xor
adc
xchg
imul
jle
clc
pop
imulb
inc
loope
and
push
cmp
loope
or
iret
sub
mov
jns
and
adc
sbb
insb
mov
fbstp
and
adc
pop
dec
mov
leave
test
rorl
bound
sbb
loop
cmp
cs
jne
scas
jg
sub
dec
inc
popf
pushw
mov
test
jbe
adc
push
push
cmp
add
inc
outsb
bound
lods
je
neg
ja
ja
xor
bound
lahf
popa
into
mov
pop
and
or
leave
jbe
stos
test
mov
xchg
add
stos
decb
js
sub
jl
scas
mov
scas
add
test
mov
scas
xchg
jge
das
xrelease
fbstp
add
or
sub
out
in
inc
enter
dec
xor
mov
pop
xor
adc
in
insb
nop
insb
test
lds
fisubs
jmp
mov
fldcw
lds
sahf
cmp
or
dec
sub
gs
bound
xor
sbbb
add
test
loop
add
repz
or
push
sbb
sti
sub
insb
mov
jmp
inc
std
sbb
sbb
movups
test
ret
mov
rclb
sbb
push
jns
les
aaa
adc
pop
addb
lea
and
call
inc
rcll
subb
imul
and
sbb
lock
rcr
and
pushf
jmp
daa
and
mov
insb
sti
mov
out
call
cmpsl
dec
fs
inc
test
fsubrp
les
xor
xchg
fs
mov
in
out
pop
inc
xor
jl
repz
push
push
push
and
mov
dec
arpl
aam
jb
loop
and
mov
popf
movsl
xor
jle
jge
fdiv
add
or
in
inc
decl
inc
loop
sub
lods
movsl
cli
push
pop
or
mov
pop
push
xor
out
xchg
insl
repz
popa
and
add
call
mov
test
push
adc
ss
push
mov
pop
pop
jae
les
pop
xchg
bound
lret
xchg
jl,pt
push
mov
push
lea
loopne
or
repz
or
aam
xrstors
sbb
les
in
xchg
scas
mov
out
es
lahf
rol
jg
inc
dec
mov
loop
push
popa
xor
xor
push
cli
jmp
jbe
fidivs
in
mov
sbb
fstpl
daa
jne
and
test
ret
jg
jmp
dec
add
jg
push
in
cmpsb
out
pop
or
xor
dec
out
xchg
cmpsb
dec
ret
mov
fdivrs
mov
xchg
mov
pusha
jmp
push
mov
ja
cltd
mov
test
xor
cltd
adc
prefetch
ljmp
in
inc
push
movsb
outsb
mov
jns
jle
xor
and
or
dec
popa
cld
pop
sti
int
dec
dec
add
lods
xor
push
mull
dec
inc
push
and
cmp
iret
loop
repnz
xor
jne
or
ljmp
pop
dec
test
icebp
push
sub
cmp
lea
sti
cltd
inc
cmp
sub
mov
sbb
cmp
loope
fsubl
cmp
test
jge
faddl
and
adc
dec
hlt
adc
jae
dec
mov
or
adc
and
insb
inc
ret
aad
fcoms
out
or
mov
or
test
inc
pushf
or
pushf
mov
jge
dec
jecxz
adc
and
divl
insb
int3
cmc
jae
stos
and
lods
loope
les
xor
mov
movsl
dec
es
inc
mov
mov
mov
or
push
out
pop
adc
scas
sbb
mov
pushf
cmc
mov
pop
xlat
cmpsb
dec
ds
adcb
fdivrl
sbb
insb
pop
sbb
adc
sub
jge
dec
cltd
add
xlat
push
cmpps
nop
mov
xchg
sarl
es
scas
loopne
test
or
idiv
mov
jne
subb
pop
shlb
flds
dec
xlat
mov
adc
ss
add
add
mov
mov
mov
xor
dec
sub
mov
fnstcw
fidivs
sarb
cmpsb
clc
pop
pop
outsl
mov
enter
test
xor
pop
lods
xchg
arpl
jns
or
xchg
push
stc
test
dec
mov
xchg
xchg
mov
icebp
bsf
jp
xchg
in
fistps
pop
shlb
jmp
sbb
inc
cmpl
mov
mov
xor
or
lcall
popa
data16
or
xorl
call
inc
pushw
push
lods
cmp
inc
not
xor
hlt
out
test
lret
enter
xor
mov
adc
in
aam
jecxz
ficoml
notl
lods
jo
iret
loope
into
push
addr16
add
push
mov
fdivs
adc
sub
dec
loope
cltd
pusha
neg
shrb
popf
pusha
ljmp
pop
or
shr
repz
sub
jae
mov
cmpb
mov
or
inc
sbb
in
mov
mov
ror
mov
dec
push
sub
fwait
cs
mov
repz
dec
push
jne
repnz
add
adc
lock
insl
mov
popf
call
jl
mov
test
sbb
sbb
cltd
out
mov
pop
mov
xor
xchg
mov
out
jecxz
dec
ret
aam
mov
ja
lcall
int
in
push
outsb
ret
popa
xchg
leave
aaa
repz
xchg
ret
pop
jae
fdivs
daa
scas
adc
mov
adc
cmp
insb
iret
jle
add
inc
add
pop
xorl
insb
ja
mov
xor
adc
dec
xor
add
cli
xor
push
push
or
cmpsb
lds
push
addr16
jp
ja
movsb
mulb
inc
jmp
in
fcompp
inc
mov
ret
into
and
sub
jns
add
cmpsb
pushf
clc
jmp
mov
imul
xor
cmp
into
outsb
mov
mov
data16
ss
mov
push
push
sub
mov
aad
and
ss
jp
in
mov
mov
or
test
jmp
fsubs
lods
aaa
adc
adc
push
mov
inc
jbe
lods
jae
cs
jns
mov
ljmp
fidivrs
shl
mov
addr16
jns
lock
pop
pushf
jg
dec
mov
jle
enter
jmp
psrad
aam
mov
mov
das
ret
mov
and
test
aaa
in
aaa
iret
jnp
gs
pop
mov
jne
mov
in
push
out
or
repz
xor
test
jno
cmp
jne
mov
add
jno
pop
js
xchg
aaa
xor
test
jmp
aas
jb
es
lods
fcmovnu
cltd
add
ss
int
in
push
xor
sbb
and
scas
out
cli
lods
pop
mov
in
movsb
loope
enter
nop
aam
out
dec
out
mov
mov
mov
cmpl
sarl
and
fildll
ret
or
fmuls
push
sub
fldl
mov
jecxz
scas
mov
nop
mov
mov
out
dec
or
leave
or
xchg
jns
adc
mov
sti
xor
add
pop
retw
xor
push
out
pop
jle
or
in
out
dec
loope
mov
cmp
lea
dec
push
dec
xorb
lock
pusha
popa
xchg
gs
mov
xor
mov
sbb
adcb
int3
xor
and
in
push
insb
aad
or
xor
je
mov
sarl
push
imul
leave
enter
out
das
xor
xchg
in
jl
call
bound
das
cmp
sti
jbe
sbb
jns
sub
add
sbb
cltd
adc
pop
js
xchg
call
sbb
push
popa
cmpsb
stc
jno
cmp
xor
mov
aam
lea
lds
cmpb
pop
mov
xor
xchg
out
pop
pop
inc
xchg
test
pop
imul
addb
sbb
jno
mov
jmp
cmc
push
adc
frstor
in
nop
cmpsl
ljmp
pop
mov
lcall
cli
push
ret
subl
in
faddl
cli
inc
add
mov
push
push
cs
fstps
or
mul
cli
rclb
jbe
cmp
movswl
sub
inc
jne
sbb
push
dec
out
adc
cmp
pop
lret
xchg
jae
or
mov
movsb
or
adcl
sbb
add
mov
shld
arpl
add
pop
pop
xchg
aas
mov
repnz
push
mov
insb
aaa
call
add
dec
popa
mov
xor
out
ret
ss
and
sub
mov
bound
xchg
rolb
sarl
push
cmp
sub
cmp
cltd
stos
xchg
cmpsb
mov
pop
inc
cmc
hlt
cmpsl
cmp
jno
jae
imul
fidivs
test
sbb
cwtl
out
std
in
mov
arpl
insb
adc
popa
jns
in
repnz
sbb
xchg
pop
push
shll
and
das
jp
fldenv
jecxz
add
push
jo
inc
adc
dec
inc
mov
jmp
popa
xchg
jae
cmp
outsl
jle
jle
fidivs
fst
nop
addl
in
bound
sub
push
cmpsl
jo
inc
test
xor
sbb
push
mov
fwait
daa
xchg
ljmp
aam
shl
xchg
std
cld
cli
push
sub
push
push
scas
shr
dec
sbb
cmp
sbb
mov
fst
mov
and
imull
scas
shll
push
adc
pusha
mov
cmp
mov
push
repz
mov
or
mov
ret
imul
pop
shll
cmpsl
inc
cmp
test
sub
adc
cld
sbb
fwait
pop
xor
call
pop
xchg
test
xchg
icebp
mov
subb
jmp
xor
jmp
and
pop
adc
fs
add
fmuls
sbb
loopne
pop
popf
dec
dec
push
xor
js
xchg
push
scas
ds
scas
inc
fsub
or
das
call
lock
inc
xchg
push
add
addb
adc
lcall
jb
mov
shll
decl
pop
push
inc
mov
jmp
idiv
stos
pop
xlat
stos
cli
mov
std
mov
lret
xor
addr16
xchg
sub
mov
xor
rolb
sub
cmp
push
sub
shrb
xchg
pop
bound
insl
addr16
adc
jo
sub
out
xchg
xchg
or
outsb
xchg
lahf
subl
xchg
adc
xor
cli
cwtl
xor
xchg
xchg
pause
addl
loop
adc
je
aaa
inc
fwait
rorb
dec
inc
scas
mov
xor
pop
and
push
stos
ja
push
or
xor
outsl
outsl
xchg
lret
cs
fcomp
push
sbb
jno
push
adc
std
stc
inc
scas
daa
sub
shrl
ss
in
scas
mov
add
push
insl
scas
pop
shl
xchg
mov
mov
add
lods
call
ja
cmp
fists
inc
dec
dec
cmpsb
pushf
scas
or
ds
jmp
jb
out
insb
sub
xchg
and
pop
inc
lcall
add
scas
push
or
pushf
out
mov
push
scas
arpl
mov
xor
bound
jb
adc
daa
adc
pop
mov
xor
mov
movsl
gs
jnp
push
ja
sbb
pop
dec
push
jl
mov
es
push
inc
je
mov
lods
dec
jl
xchg
push
or
ficoms
or
xor
aas
cwtl
test
xor
jns
jecxz
daa
gs
mov
fisubrl
inc
pop
push
fsqrt
in
int3
fisubrs
dec
es
or
insb
bound
std
scas
sbb
outsl
or
sbb
scas
jle
mov
pop
adc
jno
loopne
fistl
mov
out
cld
xlat
test
dec
and
icebp
dec
cmp
push
out
xchg
xlat
cmpsb
notb
test
cmpsb
cmp
frstor
loopne
shrl
fisttpl
push
fimull
xchg
push
scas
andb
aad
jns
notb
insl
fcmovnu
push
cmpsl
mov
fstl
call
das
loope
pop
shrl
cmp
adc
lret
imul
lret
not
adc
aas
lcall
cmpsl
cli
cmpsl
mov
aaa
popa
sbb
in
push
inc
and
movsl
inc
mov
mov
testl
inc
xor
and
dec
stos
mov
rcrb
jecxz
push
push
adc
mov
aam
push
mov
stos
push
push
ret
sbb
xchg
popf
sbb
fcmovnb
stos
iret
dec
push
push
mov
imul
xchg
pushl
out
clc
sbb
in
sbb
jmp
adc
arpl
jbe
or
stos
enter
fsubrl
xorb
add
scas
loope
mov
mov
cmc
xchg
xchg
push
pop
jl
daa
push
mov
stos
cmc
test
mov
push
pop
or
ja
jbe
push
jl
xchg
lods
repz
jb
icebp
mov
stc
jecxz
notl
loop
mov
or
scas
xchg
test
cmp
pop
jle
jb
add
dec
jbe
movl
jge
cmpsb
mov
je
mov
jecxz
negb
lcall
in
dec
or
mov
out
andl
loopne
dec
adc
mov
lods
push
sbb
mov
push
and
mov
icebp
push
pop
or
inc
iret
dec
adc
decb
pop
push
add
sbb
lcall
out
arpl
inc
or
mov
nop
jl
scas
int3
xor
cld
call
pop
push
mov
movsb
sbb
jge
mov
movsb
inc
xchg
icebp
mov
fcoms
ja
sbb
adc
repz
pop
xor
jl
pop
fidivrs
or
push
js
and
fisubrl
lods
ss
fidivrs
aaa
adc
mov
dec
mov
popf
inc
sub
xor
mov
cmp
jns
cmp
xchg
icebp
fucomp
or
and
clc
fistl
mov
inc
mov
jle
insb
or
push
or
fsubs
mov
add
les
mov
and
dec
mov
ja
pop
cmp
dec
pop
je
movsl
inc
or
frstor
xchg
cmp
arpl
dec
fcomps
sbb
mov
xor
mov
enter
aam
sub
rolb
jae
fsubrl
add
or
out
xor
rolb
sub
or
push
xchg
sbb
fwait
jmp
pusha
shl
cs
imul
arpl
add
cmp
dec
inc
roll
aas
dec
xchg
stc
dec
ljmp
std
push
mov
scas
inc
mov
mov
or
mov
jmp
loop
mov
dec
push
inc
in
mov
int
add
loop
xchg
scas
fs
aas
xchg
fisubl
and
ljmp
or
xchg
inc
sub
jns
sarb
xchg
lahf
inc
push
and
insb
jae
xor
adcl
loopne
mov
pop
aaa
je
lods
popf
outsl
ds
sub
out
mov
outsl
pop
pop
mov
fisubs
sbb
or
pushf
mov
mov
mov
loopne
in
mov
mov
add
imul
data16
cmc
jmp
aam
inc
arpl
dec
mov
bound
in
icebp
adc
add
mov
mov
cmp
insb
dec
adc
je
jecxz
movsl
fwait
lods
into
test
loopne
push
ret
mov
das
movsl
mov
test
adc
out
adc
cmp
and
stos
pop
inc
adc
in
lds
xchg
sub
das
sbb
sbb
push
imul
sub
dec
es
fsubr
mov
sbbl
in
jbe
ljmp
dec
lea
repz
insl
out
dec
shr
cli
jmp
ja
mov
adc
jbe
adc
and
dec
xchg
mov
jne
pop
roll
jge
xchg
std
inc
lods
pop
insb
mov
cwtl
jb
in
fs
arpl
leave
mov
aaa
gs
lret
sbb
sbb
movsl
and
jecxz
jne
loopne
add
popf
sub
mov
push
outsb
or
and
sbb
inc
nop
jg
sub
xchg
arpl
ja
clc
sti
cmp
lods
rcr
xchg
lret
fnstenv
mov
sub
out
inc
push
paddsw
mov
sbbb
aad
enter
jg
es
lahf
sbb
mul
mov
cmp
inc
cmp
mov
mov
int3
mov
sub
ds
jns
jmp
push
sti
arpl
scas
addr16
sbb
mov
std
dec
cmpsl
mov
push
mov
pusha
loope
ja
shr
or
inc
movsl
or
std
xor
enter
mov
insl
aad
ficompl
fdivs
xor
outsb
jp
add
pop
movsl
mov
ret
mov
pop
mov
sub
inc
mov
loopne
and
sub
add
shll
cwtl
shll
cs
out
sub
add
cmp
loopne
rcrb
lock
jecxz
pop
loopne
scas
mov
jbe
outsl
flds
xor
in
scas
fidivrs
add
jmp
mov
fwait
ds
jl
jle
test
mov
outsb
lahf
cmp
add
jbe
int3
pop
jge
inc
xchg
push
xchg
sub
loopne
fstps
cmpb
testl
ret
fwait
jae
shrb
jbe
ss
out
cs
pop
mov
shrl
xlat
cmp
out
push
pop
xchg
add
dec
insb
mov
outsl
int
inc
cld
out
aas
fidivl
mov
mov
dec
mov
sbb
jae
cmp
dec
pop
mov
jle
sbb
xor
and
push
sbb
xchg
fcoml
arpl
mov
inc
add
popf
mov
and
jg
mov
or
insl
or
jns
xchg
out
xchg
lods
int
pushf
jecxz
jno
mov
jmp
fists
das
cmp
leave
sub
mov
xchg
and
adc
ret
mov
and
stos
add
inc
ret
negb
mov
adc
out
push
addr16
mov
cld
scas
sub
cs
or
mov
and
popf
int
jne
sbb
mov
xchg
cmp
nop
inc
loope
add
mov
into
jle
cmp
mov
leave
mov
cli
es
cs
stc
or
sub
dec
sbb
mov
push
add
jbe
imul
mov
push
aad
push
push
xor
push
addb
and
inc
outsl
cmpsb
add
ss
xlat
stos
sbb
lods
nop
mov
cmpsb
scas
cs
xchg
or
inc
and
add
mov
mov
out
dec
dec
mov
or
pop
sbb
xor
dec
jecxz
cmc
push
mov
xchg
add
mov
push
faddp
scas
xchg
inc
fwait
mov
or
insl
cmpsb
mov
leave
xor
push
jle
mov
cmp
test
hlt
les
lret
outsl
xor
daa
pop
push
in
mov
mov
inc
sti
in
xchg
dec
mov
xchg
cmp
ret
push
and
or
jle
jle
idivl
es
xchg
jle
roll
jns
push
adc
xor
into
adcl
and
divps
or
cmp
dec
sbb
pop
sub
lods
imul
test
fadd
imulb
mov
cmp
fildll
jno
iret
jno
xorb
sbb
bound
or
pop
aaa
inc
sbb
and
dec
js
mov
out
daa
sub
stos
mov
rolb
cld
inc
in
cltd
subb
mov
lds
sbb
in
out
pop
xor
or
push
cmp
cmp
imul
rol
adc
cmp
nop
mov
pop
movb
daa
or
jno
pushf
das
jmp
pop
loopne
fsts
add
xor
sbbl
pop
xlat
push
pusha
push
mov
jl
mov
mov
mov
mov
lahf
shlb
lea
mov
xlat
cmp
inc
xchg
push
jp
hlt
repnz
push
mov
pop
lret
sbb
xchg
push
push
cli
mov
es
pop
lret
out
aaa
fidivrs
dec
pushf
pop
aam
mov
movb
cmpsl
pop
shlb
andl
push
mov
mov
aas
iret
rclb
mov
inc
sbb
push
lret
daa
out
js
dec
jl
jnp
cmc
aaa
stc
jmp
inc
adc
lods
pop
sbb
cmp
jbe
inc
mov
mov
or
aam
adc
pop
aas
cmp
aaa
mov
cli
test
mov
cs
pop
fistpl
mov
add
test
jge
clc
xchg
iret
push
dec
loope
mov
sub
cmp
jg
addr16
cmp
and
cmp
sbb
and
mov
push
cmpsb
sbb
pop
jle
inc
pop
lahf
fs
sahf
das
adcl
pop
in
push
or
test
inc
add
pop
mov
icebp
not
daa
or
inc
jno
mov
lea
cltd
mov
arpl
adcb
fcomps
scas
lds
cmc
sahf
jmp
cmc
push
adc
fistpll
std
adc
dec
xchg
scas
fsqrt
and
movsl
outsb
or
frstor
int3
in
and
jge
out
add
push
call
mov
xor
in
pop
ja
das
cld
cmp
insw
sti
pushf
outsl
mov
sbb
in
xlat
or
insb
sub
adc
jae
xchg
ss
repnz
sub
jae
mov
mov
cmpsl
outsl
test
daa
je
jle
lret
mov
xor
xor
inc
add
sarb
mov
push
out
pop
aas
inc
lret
xchg
xchg
ljmp
and
out
sub
aad
loopne
adc
mov
xor
sbb
stos
nop
testb
test
cmc
or
aas
fs
pushf
xor
inc
jecxz
mov
jle
insb
rorl
add
mul
dec
sbb
mov
inc
out
push
mov
dec
repnz
jmp
and
sbb
mov
mov
mov
or
js
icebp
stc
iret
adc
into
mov
pop
cld
sub
jb
mov
test
mov
popa
sub
add
popa
or
dec
and
push
mov
cmp
lds
mov
xchg
scas
loope
dec
leave
jle
ret
fsubl
scas
in
xchg
pop
sti
dec
cmp
push
inc
aaa
mov
dec
lods
pop
and
mov
inc
fdivr
dec
add
push
inc
and
movsl
jmp
or
dec
inc
add
js
push
or
xorl
gs
test
ss
jecxz
ret
xchg
sbb
adc
sub
adc
mov
jne
xor
inc
stos
ss
push
and
idiv
shll
movsl
adc
inc
push
or
dec
test
sbb
and
jnp
sbb
popa
lock
sarb
pusha
and
dec
data16
out
test
rcrl
dec
push
iret
sub
pop
in
jp
mov
xchg
int3
inc
add
fldln2
dec
mov
stos
pop
xor
sarl
enter
fisubrs
xchg
dec
subl
cmc
bound
dec
add
inc
add
mov
popf
pop
xchg
fisubrl
cmp
addr16
pop
sbb
sbb
leave
sbb
scas
stos
xor
adc
test
push
lock
out
pop
jno
push
sub
mov
mov
mov
nop
adc
insb
mov
mov
stos
jae
xchg
iret
ljmp
fsubs
test
jmp
out
test
mov
dec
addb
xor
dec
and
cmpsl
insl
add
aaa
jb
lret
cltd
mov
and
cmpsb
std
ljmp
nop
cmpsl
push
test
dec
dec
inc
sub
faddl
or
mov
jae
xor
or
ret
jo
xchg
pushf
daa
cwtl
test
aad
or
and
sbb
scas
cmc
js
adc
jb
arpl
dec
xchg
stc
in
pop
inc
pop
push
ds
mov
arpl
imul
mov
jecxz
add
into
add
sbb
fcmovbe
mov
jl
dec
aad
lret
sti
jb
inc
jp
outsb
test
out
iret
movsb
xor
push
outsb
scas
fnstenv
es
xor
cli
dec
fnstcw
add
movb
xlat
into
popf
sar
cld
jbe
fsubp
xchg
xchg
sbb
jmp
inc
mov
pop
sbb
mov
repnz
adc
cmp
loopne
sti
outsb
out
sub
imulb
aad
aad
in
js
or
mov
mov
stos
lret
pop
or
shlb
sbb
mov
sbb
call
pop
dec
roll
lock
jmp
cld
andb
aas
rcrb
add
cld
lds
add
repz
daa
testb
int3
inc
xchg
add
test
pop
ja
cmp
lods
icebp
addr16
push
mov
test
mov
pop
jge
add
in
adc
xchg
mov
in
lret
and
mov
mov
lods
pop
dec
dec
or
les
jb
pop
sub
movsb
fildll
sbb
test
pop
dec
cltd
mov
ret
bound
jb
ljmp
repnz
and
dec
fwait
pop
cs
or
scas
xor
aam
cmp
je
inc
mov
ret
rep
cld
or
gs
lret
pop
fistl
rcll
cs
repz
fsts
sub
pop
fs
stos
outsl
testb
bound
aaa
ret
adc
lret
xchg
mov
mov
repnz
ja
movsl
inc
mov
dec
mov
cmp
ljmp
xchg
mov
pop
sub
sub
ss
fcom
xor
loope
mov
bound
cmp
jb
movsb
jge
pop
push
dec
jns
adc
mov
mov
daa
push
sub
rolb
sbb
das
and
sbb
rol
div
mov
loop
gs
mov
out
adc
xor
mov
outsl
push
sbb
clc
negl
aam
nop
adc
stos
jmp
cli
stos
aam
fnstenv
rcl
inc
ss
cmpl
xor
lock
mov
fcoml
outsl
lahf
sub
adcb
push
mov
popl
mov
jmp
and
inc
popf
fidivrs
fsts
push
xor
les
pop
inc
pop
adc
push
fcoms
pop
lahf
pop
fs
cmp
aaa
mov
xchg
mov
fdivp
inc
addr16
sub
or
mov
jmp
lret
push
and
jne
ret
int
pop
sub
dec
mov
push
and
xor
movsl
jo
insl
adc
ja,pn
testl
push
push
decb
xchg
cwtl
cs
loopne
pusha
sbb
shrb
fsubs
push
ror
lcall
nop
mov
fadd
mov
dec
dec
icebp
pop
xor
test
adc
mov
test
fdivp
pusha
mov
add
int3
dec
lock
nop
push
pop
outsb
in
aad
sbb
or
shll
loopne
mov
outsl
adc
unpckhps
cmp
sbb
sbb
pop
das
sub
push
test
into
enter
sub
and
into
rcrl
mov
lret
push
sbbl
aad
xor
cmp
push
rorl
fwait
lret
push
xor
fstl
and
pop
and
ljmp
dec
ljmp
sub
pop
inc
sub
xchg
mov
cltd
pop
cld
push
int
push
sub
xor
lret
mov
scas
xor
jp
pop
jbe
shrl
sub
push
dec
popa
std
ret
dec
stc
pop
xor
ja
ror
test
je
jmp
xlat
call
mov
popa
pop
adc
mov
sbb
push
mov
or
push
pusha
dec
mov
call
xor
mov
dec
push
repnz
sub
pop
pop
les
rcr
jg
mov
dec
pop
or
repnz
cwtl
scas
pop
in
add
push
ss
xlat
push
ret
int3
ss
pop
jecxz
cltd
lock
repz
mov
ljmp
push
setbe
fcompl
or
aas
test
add
mov
xchg
imul
loopne
mov
out
lods
push
pop
js
and
movb
sbb
sahf
std
push
lea
jbe
mov
mov
pusha
xchg
add
shrb
push
ret
sub
dec
dec
adc
lds
enter
fnstsw
pop
xchg
sahf
mov
ss
push
fstl
jbe
cli
leave
mov
dec
addr16
flds
mov
add
stos
jg
dec
and
jmp
aad
fsubr
add
mov
dec
sub
dec
sub
stc
dec
test
movb
inc
js
cli
fistl
ffreep
lods
ss
lock
outsl
or
and
sbb
test
loop
iret
outsl
xor
cmp
jle
out
shlb
pop
mov
lds
insl
std
inc
fstpt
mov
jo
mov
xchg
jb
dec
cmp
cmp
stc
mov
mov
xchg
fimull
sti
cmpsb
gs
mov
test
mov
clc
adc
mov
and
lahf
ljmp
jp
inc
cmpsl
lock
adc
repnz
ret
fidivrs
push
cmpsl
sti
negl
out
xor
dec
enter
sahf
jo
ja
adc
sbb
out
sbbb
pusha
sub
xor
xchg
adc
js
lock
es
aas
xor
cmpsl
into
mov
lock
fisubrl
sub
pop
adc
call
insl
jg
loop
inc
inc
sti
inc
or
xchg
cmp
aas
adc
fs
ret
adc
add
sub
sub
mov
xor
mov
lea
cmp
and
add
push
pop
outsl
ror
add
push
jle
pop
jbe
jmp
frstor
ds
dec
mov
jne
repnz
int
or
testl
cmp
mov
data16
pop
into
inc
push
orb
fs
mov
cs
sub
sub
in
pop
inc
mov
inc
je
add
mov
cmp
xor
fwait
and
inc
mov
jne
pushf
addb
mov
je
and
inc
ss
sbb
mov
loopne
xchg
xor
fnsave
pop
imul
cmp
mov
jb
rcll
pop
dec
fsubl
nop
push
imul
test
jno
mov
divb
pop
in
rcr
xchg
mov
inc
movsl
jb,pt
add
clc
pop
rcrl
dec
push
push
or
orl
roll
test
xor
dec
xchg
lahf
sub
shlb
cmpl
inc
xorl
pop
sti
imul
jmp
scas
cmpsl
lock
sbb
icebp
xor
js
lock
jae
inc
fiaddl
aas
pop
push
inc
cmp
std
pop
pop
and
std
loop
xchg
push
lea
jo
adc
mov
les
push
mov
push
xor
sbb
jno
jbe
and
sti
sbb
fcmovnbe
or
loopne
add
repz
mov
jmp
pop
in
enter
push
inc
inc
xchg
lock
out
je
inc
js
xchg
sub
push
sahf
sub
inc
jmp
cs
mov
fcomps
and
pop
and
nop
adc
in
and
push
sub
pop
or
pop
sub
pushf
push
or
dec
xor
incl
loopne
mov
outsb
jnp
cmpsb
adc
or
loopne
sbb
hlt
push
scas
inc
adc
or
aaa
mov
lahf
call
pop
int3
sub
data16
adcl
xor
push
xlat
xchg
rolb
int
jne
les
mov
lods
inc
and
inc
jb
cmp
lret
repz
jo
add
dec
sahf
xchg
jo
mov
ljmp
pop
out
fs
add
lock
cs
sbb
mov
out
enter
out
into
scas
push
xlat
js
xor
mov
inc
pop
aam
and
stc
mov
test
pop
into
dec
test
xor
ljmp
call
mov
adc
loop
dec
and
popa
sub
push
jae
popa
mov
xchg
push
fisttps
sub
inc
dec
mov
nop
and
ja
pushf
rcrl
hlt
mov
xor
dec
lock
sub
jle
pop
nop
cld
ljmp
mov
sbb
iret
and
rorb
add
pop
inc
inc
je
jge
sti
mov
int3
int
push
inc
fmuls
or
pop
xchg
push
rorb
mov
and
xchg
fcoml
xor
push
adc
push
push
push
test
cs
xchg
sub
mov
jo
and
insb
dec
lds
std
ret
or
cbtw
xchg
inc
bound
push
dec
into
scas
and
scas
push
outsl
jae
andl
mov
rcrb
cwtl
sbb
push
add
fs
jmp
mov
outsl
dec
cmp
mov
mov
cmp
aam
call
scas
pmulhw
mov
xor
mov
je
out
sbb
out
jo
test
cmp
out
cmp
adc
cmpsb
inc
pop
mull
and
cld
inc
add
movsl
and
add
jecxz
jo
pop
idivl
int3
ret
add
scas
jl
es
lret
xor
pmaxub
mov
mov
or
stos
jb
sbb
cmpl
dec
imul
sub
pop
imull
int3
out
inc
dec
enter
nop
ljmp
lea
add
stc
cmpl
mov
push
jbe
xchg
or
mov
in
out
mov
repnz
jb
xchg
sahf
and
stc
fadds
inc
mov
popa
andb
push
hlt
xchg
mov
xor
cld
jbe
in
hlt
pop
pop
xchg
repnz
mov
push
adcl
cwtl
xchg
gs
lods
out
loopne
nop
adc
or
inc
xor
and
in
out
mov
nop
shl
xchg
fmul
movsb
cmpsb
add
aas
sub
aas
sub
out
mov
icebp
nop
push
jle
lea
mov
notl
add
in
sbb
inc
mov
inc
jo
ss
push
pop
inc
cmpsb
aas
popa
ljmp
jp
lods
adc
adc
sub
sub
xchg
je
out
fldenv
rcl
nop
insl
push
pop
std
or
lods
pop
fwait
mov
cmpsb
add
xor
sub
sub
loopne
sub
sti
or
push
aas
movsb
xchg
ss
lods
fbld
adc
aas
iret
mov
daa
push
popa
add
push
pop
jmp
cmp
mov
hlt
add
xchg
aad
jb
iret
pop
cmp
pop
into
jp
std
add
pushf
mov
cmp
movsl
sub
add
scas
xor
test
daa
inc
nop
push
inc
leave
stos
popf
mov
jmp
lret
inc
lock
test
cli
subb
out
inc
jl
add
mov
inc
lss
nop
je
push
pop
or
xor
popf
iret
cmc
dec
daa
xor
out
sub
jo
das
lods
inc
sbb
mov
cmpsl
ja
cmp
sub
mov
repz
in
inc
and
scas
popf
xorl
mov
jne
xchg
pop
lcall
cmp
ret
pop
int
orl
punpcklbw
repnz
mov
test
pop
or
pop
add
int3
add
andb
lock
insb
or
pop
daa
mov
in
in
or
in
fisttpll
repnz
sar
cmp
imul
mov
sti
cmp
cmp
nop
lock
fbstp
fucomi
addl
jle
mov
xchg
test
add
in
and
push
sbb
cmpsb
push
xorl
mov
xchg
out
push
inc
js
loop
xchg
test
mov
pop
sub
std
cmp
shr
mov
lock
mov
pop
rcll
rcr
sub
loopne
sub
bound
fs
sub
pop
fs
out
jo
ffree
mov
mov
xor
jmp
mov
xlat
les
fsubr
jo
xchg
test
add
lock
mov
mov
xchg
lds
mov
mov
push
addr16
les
push
dec
mov
mov
inc
hlt
jns
shl
cwtl
fisttps
pop
rol
lret
lcall
repz
mov
into
jb
in
inc
adc
sub
iret
out
push
fmuls
cmp
xor
push
andl
jne
das
jo
xchg
mov
or
mov
push
push
icebp
mov
je
xchg
rcll
lcall
and
pop
mov
in
les
mov
leave
pusha
sub
cmp
sahf
ret
jb
test
test
mov
jae
pushf
cmpsl
push
dec
out
pop
mov
sub
in
inc
out
lret
sbb
push
lea
stc
gs
cmp
and
into
mov
popf
pop
gs
dec
xchg
mov
inc
insl
iret
push
xor
xchg
popa
and
leave
mov
int3
ss
aad
or
out
inc
mov
cmp
insl
dec
cmp
or
sbb
stos
pushf
ficoms
cmpsb
loop
out
sub
push
leave
push
mov
pop
out
cmpsl
orl
jnp
addb
mov
xchg
push
dec
lahf
lods
pop
push
fucomp
int
xchg
mov
call
lret
push
in
xchg
jnp
insb
insl
inc
ss
in
mov
add
or
adc
sub
ret
loopne
adc
inc
push
cli
cmp
sbb
aad
dec
imul
scas
notb
aam
and
mov
sahf
pop
fs
imul
fdivl
pop
fiaddl
mov
inc
lret
sbb
cs
movsl
lods
out
test
in
jne
xchg
xor
sub
push
pop
push
sti
fbstp
xchg
inc
lret
sub
jne
jbe
pusha
pop
repnz
inc
enter
mov
inc
in
or
cmp
xchg
inc
fcomp
add
stos
and
into
pop
js
inc
outsl
icebp
mov
cmp
adcb
xchg
ds
and
imul
mov
lods
mov
pop
scas
inc
in
or
jo
jle
xchg
outsl
popa
or
jg
jle
mov
and
cmp
aaa
notb
add
push
mov
lods
subb
jb
inc
in
sub
jae
xchg
sub
mov
xchg
xor
jl
xor
aas
pop
addr16
negl
pusha
ja
enter
cmp
sbb
ret
dec
pop
lcall
insb
clc
hlt
mulb
clc
int3
addb
xchg
inc
or
or
xchg
xor
and
dec
adc
pop
push
sub
jo
mov
xor
or
jns
test
xor
ja
mov
in
and
cmp
test
pop
xchg
or
mov
dec
std
push
popl
inc
push
inc
jno
ja
xlat
out
push
aam
pop
je
or
ret
sbb
clc
inc
inc
or
mov
pop
je
mov
movb
outsb
daa
xor
add
sahf
mov
mov
mov
pop
cmpsb
fiadds
jp
mov
lcall
nop
je
cmp
pushf
roll
jmp
jne
fistps
outsb
lock
repnz
std
dec
insl
jecxz
and
shrb
lret
cld
push
bound
inc
cli
mov
mov
int3
cmp
mov
adc
mull
sbb
in
add
push
sub
fisttpll
sub
lret
je
test
data16
xchg
pop
ljmp
lret
jb
push
sub
adc
rolb
adc
test
and
test
add
jne
loopne
add
loopne
add
fbstp
dec
scas
add
push
int
insb
adc
xchg
mov
push
push
mov
cmp
mov
or
or
enter
adcl
mov
sahf
mov
arpl
mov
outsl
sub
jle
ret
leave
outsl
push
pop
lea
jb
sbb
pushf
jg
jge
lock
lods
sub
inc
inc
pop
fistps
cmovp
push
mov
lret
popf
fidivrs
imul
rcl
repz
stos
stos
and
int
push
and
or
pop
fwait
clc
daa
cli
jno
aas
daa
push
clc
jno
in
mov
rcrl
xorl
xchg
rclb
iret
fwait
inc
repz
mov
xchg
in
mov
data16
or
scas
loope
dec
sti
mov
jne
ret
xchg
addr16
inc
push
xor
and
out
dec
push
pushf
shl
xchg
sbb
xchg
sbb
fwait
scas
jb
aaa
icebp
add
jbe
dec
sbb
dec
or
lea
inc
imull
jl
mov
and
xchg
sbb
repz
insl
leave
inc
repz
in
add
and
pop
jns
jo
sbb
jg
cmp
jmp
ret
dec
xchg
dec
dec
xor
fmuls
mov
lea
mov
xchg
fmuls
out
fdivs
fcmovne
loopew
divl
xor
rol
popf
mov
push
cltd
and
movsl
jecxz
push
ret
sbb
insb
lcall
inc
test
xor
jg
xchg
int3
sarb
icebp
out
das
aad
sahf
in
pop
loope
jmp
popa
add
imul
popa
jecxz
rcrb
jp
or
xor
imul
lods
ljmp
jnp
nop
and
adc
arpl
sbb
pop
je
cld
leave
jne
inc
mov
sbb
push
mov
mov
test
in
mov
push
fildll
mov
gs
and
aaa
sarl
add
pop
cmpl
movsb
jle
sbb
xchg
pop
pop
out
repz
iret
cmpb
mov
add
cmp
mov
leave
addr16
sahf
mov
fs
cmp
into
dec
daa
dec
dec
mov
pusha
pop
roll
repnz
and
mov
xchg
adc
leave
and
cltd
jne
roll
in
xchg
push
xchg
xchg
adc
adc
popf
jb
or
dec
sub
push
cmpsb
aad
and
into
cltd
sub
mov
out
jns
inc
leave
pop
adc
inc
or
fwait
insl
push
mov
dec
mov
ret
dec
pop
fisttpl
sbb
outsl
lock
jp
out
fimull
sahf
mov
and
in
push
add
push
and
mov
xchg
cs
xor
cmp
cmpsb
adcb
dec
sub
and
dec
cmp
mov
jae
mov
mov
mov
mov
cld
fildl
popf
push
mov
and
clc
cmp
inc
aaa
jmp
test
push
mov
pop
push
adc
jae
pushf
inc
adcl
cmc
push
ja
adc
dec
jne
fldt
hlt
sub
xchg
push
xchg
in
mov
mov
pop
mov
xchg
in
jae
cmp
out
ljmp
jo
dec
jbe
roll
iret
bound
icebp
xchg
and
je
adc
scas
mov
pop
mov
scas
popa
shrb
pop
push
iret
mov
adc
out
push
cmp
pop
cmpsl
std
add
addr16
cld
fwait
iret
jg
and
xchg
jp
mov
pop
insl
dec
xor
addr16
aam
push
xor
mov
aam
arpl
jge
ljmp
es
test
jns
scas
xor
pop
pop
or
loope
cwtl
stos
add
and
dec
loopne
sub
insl
test
stos
stos
test
mov
test
lahf
xor
cmp
sub
pop
nop
loopne
or
pop
mov
dec
in
sub
dec
js
icebp
inc
cmp
sbb
inc
push
sti
insl
test
mov
add
push
xchg
mov
mov
cmp
andb
insb
and
pop
inc
xchg
or
add
cmpsb
imul
mov
fistpl
mov
fbld
lds
add
fs
xorl
subl
repz
stc
test
cli
fsts
loopne
xor
cmpsb
push
mov
sub
lock
xchg
stos
or
lock
mov
push
adc
dec
stos
sbb
sub
loop
sbb
mov
sub
lret
adc
mov
dec
xchg
jns
aas
pop
inc
lahf
aas
lods
jecxz
xchg
lds
mov
xlat
fwait
cmpsl
sbb
push
clc
jp
std
push
shl
ret
push
repnz
pop
loope
dec
dec
xchg
out
fisubrs
pop
scas
out
xchg
cmp
outsb
ret
jb
jo
cmc
lds
cld
mov
pop
popf
jo
add
push
mov
insl
jmp
or
inc
jo
es
movsl
xchg
add
adc
push
repnz
and
faddl
mov
loope
adc
inc
xor
inc
iret
jns
aam
add
into
cmc
sbb
addb
popf
jne
dec
clc
inc
sbb
data16
outsl
cwtl
add
pop
cmp
fidivs
ljmp
xchg
jne
sbbl
cmovle
repz
inc
mov
stos
stos
ret
insl
fs
mov
push
inc
mov
cld
pop
out
bnd
jns
cltd
cld
xor
or
cli
fs
pop
mov
jbe
xchg
cmp
dec
push
outsl
jns
jne
add
sarl
sbb
xor
das
fsts
pop
cmpsb
daa
jbe
adc
icebp
sub
inc
or
cmp
xchg
stos
sub
push
out
out
sahf
mov
jbe
mov
lea
insl
pop
ja
xchg
sub
ficoml
mov
sbb
add
jp
pop
leave
mov
imul
mov
jo
add
lret
add
hlt
filds
addr16
pop
sahf
or
in
pop
add
xchg
mov
js
cmp
and
ja
mov
mov
inc
add
cmp
orl
jne
sti
std
out
cltd
jg
cmp
mov
into
stc
xchg
dec
sub
icebp
dec
jle
and
cmp
repz
add
pop
push
ret
sub
mov
cwtl
or
or
mov
popf
dec
rep
mul
push
movsl
std
mov
add
jnp
std
lods
jne
pop
int
mov
rolb
push
pop
xchg
dec
ret
or
fsubrl
and
sbb
mov
adc
pop
cs
mov
adc
sbb
pop
js
xchg
xchg
test
in
loope
dec
ficompl
add
stos
retw
mov
sbb
insl
jmp
daa
sbb
and
pop
mov
fists
clc
push
dec
cmp
fldenv
stc
js
sub
imul
stc
sub
cmp
jae
mov
cltd
sbb
fistpll
and
ds
bswap
in
iret
cmpsb
inc
adc
stos
pop
sub
fcoml
pop
mov
pop
pusha
aaa
out
sub
setae
lds
jle
shl
fdivrl
pop
pop
jecxz
call
mov
das
fcompl
fmul
mov
pop
adc
xor
jne
jge
mov
fs
sbb
andb
lea
adc
or
cmp
xor
adc
inc
mov
mov
push
pop
pop
popf
pop
adc
and
cld
pop
fcoml
push
xchg
daa
dec
in
jge
mov
movsb
push
push
not
or
mov
ret
cli
cli
insl
jp
testl
pop
push
pop
insl
repz
fcomps
in
push
cmp
cs
out
stos
popf
shll
pusha
decl
cmpsl
lods
xchg
xchg
shlb
ss
rorb
out
pushf
cmp
push
mov
push
inc
aam
dec
hlt
dec
sbb
cli
imul
test
and
xor
xor
gs
mov
addr16
lods
mov
fdivrl
mov
lods
cli
adc
or
pop
arpl
js
imul
inc
dec
pop
mov
push
or
ss
push
mov
mov
add
movb
push
ffreep
pop
stc
dec
scas
pop
inc
lea
out
inc
sub
ss
inc
lahf
mov
cmp
mov
jo
idivb
insb
jg
add
adc
and
add
fsub
cmc
insb
lds
cmp
out
push
das
outsl
mov
mov
and
rorb
cmp
dec
cmpsl
push
pusha
push
inc
outsb
ror
xchg
xor
sub
rclb
dec
mov
inc
mov
and
cmpl
add
popf
push
mov
dec
jmp
mov
mov
test
xchg
sub
pop
mov
or
aaa
lret
insb
jno
hlt
mov
cmp
aas
or
aas
mov
inc
lcall
mov
inc
cmc
enter
jb
or
or
test
mov
loope
jno
imulb
adc
mov
pop
fst
popf
andb
jbe
std
ljmp
mov
sti
stc
mov
xchg
aad
int
ffreep
dec
jae
shr
arpl
push
imull
ja
cmp
test
jmp
lret
pop
xchg
mov
lods
or
xchg
mov
add
sbb
sbb
andb
and
pop
fnstsw
lahf
fsts
push
cmp
sub
shlb
iret
xchg
mov
addr16
mov
mov
ss
ret
fisubl
add
push
cmpsb
adc
clc
lcall
fisubl
xchg
jo
or
insb
in
arpl
pushf
push
sbb
jmp
cmpsl
movsb
xchg
or
insl
pop
inc
gs
popf
xchg
imul
mov
fcoml
and
push
int
and
insl
daa
int3
inc
cmc
lcall
push
addr16
mov
adc
adcb
lcall
push
ret
rol
aam
stos
ds
cmp
push
daa
pop
push
inc
xor
fsubr
add
push
or
fdivl
adc
mov
jnp
out
dec
das
out
shrb
std
out
adc
notb
aaa
push
xchg
and
mov
sub
stc
insl
cwtl
ret
das
mov
xchg
fidivl
mov
jnp
repnz
ds
cmp
mov
adc
dec
cmp
sbb
ja
loope
pushf
xadd
sti
sti
cld
mov
jmp
jp
cmp
sbb
inc
xchg
fcoms
cmpsb
jns
add
add
push
sti
mov
inc
cmc
loop
mov
daa
sahf
outsl
and
jge
xchg
cld
add
xchg
cmp
inc
iret
inc
adc
push
movsb
out
adc
pop
mov
and
clc
into
add
mov
sub
gs
es
mov
or
or
and
jnp
fwait
and
sbb
lock
fcoms
inc
pusha
mov
clc
jg
test
adc
out
pop
xor
mov
test
ret
pop
sbb
data16
and
mov
pop
out
inc
out
clc
dec
pop
and
test
mov
ljmp
out
out
cli
cwtl
imul
lret
lods
jecxz
sbb
or
adc
fcompl
stos
and
int
xchg
push
adc
cmc
mov
and
stos
cmovb
insb
outsl
aad
rcrl
ss
aam
lahf
adc
xchg
adc
imul
adc
adc
pop
and
dec
xor
xchg
orb
push
ljmp
jo
sti
dec
mov
out
outsb
call
sub
sub
dec
les
mov
adc
push
mov
imul
jmp
dec
test
cmp
fnsave
lods
je
loopne
pop
cmpsl
sbb
test
outsl
add
scas
in
lcall
or
jle
ss
stos
push
cmpsb
push
mov
adc
nop
call
fsubrl
mov
scas
push
push
mov
pop
ss
sbb
push
pushl
sahf
push
lahf
repnz
pop
popf
pop
push
push
adc
mov
pop
lea
das
mov
incl
add
jg
xchg
fsubrs
mov
aas
inc
ret
and
cmpsb
jle
pop
pushf
push
mov
std
or
into
cmp
pop
xor
dec
into
mov
jmp
movsb
in
adc
lock
and
xor
andl
ret
shll
xchg
cltd
and
pop
sub
loope
dec
scas
ret
pushf
push
jbe
mov
out
lahf
mov
int3
dec
pop
ds
add
sti
pop
push
cld
lods
pop
lahf
call
arpl
and
scas
fnsave
lds
or
push
mov
sub
xchg
pop
or
push
pusha
fcomps
aam
daa
mov
sbb
fiadds
push
xchg
push
das
ss
pop
sub
into
xchg
mov
jge
lds
mov
add
sbbl
and
add
lods
testl
aaa
pop
stos
mov
mov
dec
sarl
jns
cli
dec
pop
test
adc
test
pop
out
cmp
push
jo
hlt
lea
push
adc
lock
inc
mov
out
mov
mov
cmc
mov
stos
sub
shl
push
rolb
stos
js
mov
lods
mov
adc
adc
shr
adc
repz
int3
insb
fsin
cwtl
cmc
inc
xchg
andb
push
loop
dec
pop
sub
push
clc
inc
in
sub
inc
or
cmpsb
pop
aad
cs
and
pusha
sbb
test
sub
add
in
xor
inc
lea
dec
mov
pop
lods
scas
cmpsl
lea
jl
loopne
cmpsl
pop
inc
inc
push
jg
dec
insl
in
xchg
aas
add
shl
inc
mov
mov
xchg
cmp
cmp
adc
fdecstp
aam
inc
sub
repnz
es
pop
jmp
fidivl
lock
lcall
fwait
lock
sbb
leave
scas
jmp
xchg
inc
pushf
xchg
push
scas
jne
inc
sbb
sub
add
popa
int3
dec
or
in
xchg
dec
jbe
push
lcall
fs
fadd
jl
shl
inc
pop
sbb
or
lret
jmp
pusha
std
xchg
inc
lahf
or
movsl
sub
rcll
arpl
movsb
js
lods
dec
jnp
adc
das
mov
pop
xor
push
lds
mov
cli
scas
lods
push
push
leave
mov
mov
imul
mov
add
add
mov
mov
dec
ja
or
push
lcall
test
loope
pop
repz
push
push
jle
cli
popf
insl
sti
xor
lret
sbb
and
push
andb
jecxz
and
addl
cld
or
push
rcl
mov
jg
mov
stos
test
sbb
nop
pushf
sti
ljmp
pop
jno
addl
lods
arpl
stc
dec
fsubr
fdivrp
arpl
sbb
cmp
lds
mov
shll
and
out
sti
orps
sub
inc
push
pushf
mov
int3
mov
pop
les
mov
scas
pop
je
cld
push
cmp
mov
pop
fsubrl
roll
mov
icebp
mov
mov
xor
outsb
cmp
push
and
icebp
pop
mov
inc
add
imul
jmp
and
loope
or
scas
repnz
adc
mov
lret
movsl
mov
rclb
sbb
mov
in
pop
lods
out
test
xor
push
mov
scas
mov
cltd
movsl
jmp
js
out
shl
jb
paddusw
add
pushf
inc
dec
mov
and
cmp
in
dec
jl
cmp
cli
test
push
mov
rorb
push
aaa
in
rcrb
decb
xlat
sbb
mov
pop
pop
mov
fimull
or
dec
rol
push
pusha
fdivr
inc
pop
into
pushf
aas
inc
inc
test
outsl
das
cld
jg
xchg
adc
ret
xor
pop
sub
insb
out
loope
in
jo
pusha
into
lahf
cmp
or
adc
popf
dec
xor
imul
jecxz
es
movsb
inc
sbb
jbe
jbe
xor
mov
pop
cmp
mov
mov
cli
and
jae
dec
pop
push
pusha
call
dec
mov
xor
mov
into
lret
sarl
add
fcomps
ret
cmp
or
push
stos
jmp
mov
jnp
lds
bound
sub
mov
xchg
xchg
negl
add
jp
clc
stos
enter
subps
ss
lock
adc
clc
popa
push
test
dec
xor
mov
repnz
lret
stos
mov
or
jns
sub
arpl
jbe
push
and
icebp
lea
jae
movsl
mov
push
mov
cld
inc
ljmp
jl
fwait
mov
mov
int3
out
lret
jno
mov
scas
pop
test
icebp
inc
cli
fwait
cmp
pushf
push
mov
add
add
lret
cmp
mov
sub
notl
lret
out
pop
movsb
mov
mov
test
stos
jb
mov
ret
xchg
sbb
cmp
cmc
pop
out
push
int3
push
lock
pop
sbb
cwtl
xchg
and
iret
dec
dec
das
orb
inc
sbb
xchg
repz
fdivr
xor
fnstsw
xchg
dec
cmp
pushf
faddl
push
xor
inc
mov
test
xor
pop
scas
out
dec
mov
sub
mov
pop
mov
rorb
negl
cmp
dec
call
and
inc
add
or
data16
xchg
adc
stc
mov
mov
and
aam
icebp
dec
mov
call
inc
xor
imul
cwtl
inc
shrb
imul
xor
xlat
push
add
icebp
loop
outsl
push
pop
inc
mov
ds
das
arpl
je
pop
ja
sbb
popa
mov
iret
and
gs
call
loopne
add
mov
test
jae
dec
or
mov
mov
ss
mov
repnz
aaa
loopne
shrl
inc
xchg
fwait
mov
outsb
lock
xor
cmp
add
cmp
xor
jl
cs
adc
and
mov
pop
ljmp
insb
cmp
dec
js
dec
ss
dec
jmp
and
inc
cltd
lods
adc
and
in
aaa
adc
test
cmpb
xchg
mov
sbb
ss
call
sbb
push
notl
pusha
sbb
mov
xchg
pop
divl
fcoml
loop
dec
lock
mov
aaa
and
lcall
clc
cmpsl
push
pushf
pop
dec
or
imul
fidivs
inc
jle
xor
roll
mov
jo
push
shll
cld
cli
pop
stos
mov
mov
mov
jo
sbb
in
dec
push
lret
push
add
fbstp
pop
pushf
and
mulb
inc
add
shrl
movsb
out
jl
mov
push
cmc
fs
cli
faddl
stos
jg
or
es
ja
and
enter
push
inc
pop
push
je
lods
fisubrl
push
ljmp
int
scas
std
pop
inc
movsb
test
sbb
xchg
cmpsb
loopne
arpl
add
aad
rorl
loop
mov
jne
add
lods
cli
jmp
outsl
xchg
and
cmp
xchg
push
cmp
pop
jbe
xchg
mov
mov
gs
leave
or
or
mov
fucomip
jle
and
inc
pop
fcom
shll
sub
dec
outsl
pop
mov
and
out
movaps
es
iret
stc
popa
insl
jecxz
out
jb
xchg
xchg
xor
mov
ret
cmp
push
leave
jecxz
cmp
stc
test
fldcw
or
aaa
or
in
pop
cmp
sbb
fdivr
push
pop
pop
jae
sbb
repz
mov
lock
fstpt
or
aaa
inc
leave
xor
div
les
std
sbb
add
mov
pop
lds
jae
lds
xor
pop
addr16
call
pop
repnz
xor
adc
lock
stos
js
add
or
xchg
lock
rcr
rorb
sbb
mov
mov
mov
mov
xor
ds
ret
mov
and
shlb
mov
mov
movl
cmp
xorb
jcxz
rcl
pop
sbb
dec
arpl
dec
jnp
inc
push
addr16
sub
rcr
and
or
fs
add
aas
cli
xchg
daa
cmpsl
out
xchg
lods
push
je
std
les
sbb
dec
and
into
cmp
adc
xor
bound
out
cmp
inc
mov
cli
xor
in
fimuls
lods
mov
pop
xor
test
cwtl
in
fimull
loop
lcall
cmp
push
mov
stc
xchg
cmpsb
outsb
mov
pop
mov
test
mov
inc
dec
xchg
out
adc
jns
call
adc
mov
les
aaa
ficompl
loope
testl
fwait
es
orb
ficomps
fistps
push
or
dec
push
dec
inc
sub
pop
mov
cmc
lcall
sub
andl
lock
bound
push
in
scas
mov
pop
xchg
int
and
cmp
sbb
xor
push
sbb
push
nop
leave
loope
out
cmp
mov
dec
scas
inc
jmp
loopne
xchg
sub
push
cwtl
cs
cmpl
adc
shlb
inc
ret
and
adc
hlt
int
loop
sub
shr
lock
push
adc
repnz
aam
cli
push
sbb
mov
and
stos
and
push
jae
insl
fs
xchg
sbb
sbbl
adcl
cli
lea
out
sub
ljmp
jae
sub
or
addr16
ds
and
xchg
jns
movsl
jo
xchg
push
dec
mov
cmp
icebp
jbe
fxch
mov
jle
adc
psraw
lcall
fs
or
sub
mov
gs
cwtl
mov
loop
movsl
das
jmp
push
outsl
testl
inc
insl
subb
bound
fstps
sbb
dec
in
shll
mov
inc
cmp
jnp
pusha
stos
mov
jge
mov
test
jbe
and
or
scas
cmp
mov
filds
xor
clc
addr16
dec
lods
cwtl
ret
or
ss
jecxz
or
cli
inc
jmp
cmpsb
jp
das
xor
insb
inc
add
push
out
fisubrs
in
dec
mov
std
mov
adc
sbb
in
push
scas
jnp
xchg
sbb
insb
mov
int3
cmpsl
dec
and
mov
add
mov
cltd
mov
pop
leave
shrb
in
pop
shl
cmp
aaa
cmp
sbb
push
mov
and
jl
outsb
andl
xchg
mov
fidivl
in
jl
pop
fst
push
mov
mov
ja
xor
jmp
and
dec
pop
dec
addb
loopne
mov
andl
stos
bound
cwtl
js
mov
pop
loop
into
inc
mov
outsl
andl
sub
fmul
mov
cwtd
mov
add
outsb
addl
mov
sbb
mov
adc
subl
pop
scas
cmp
lcall
xchg
into
stos
hlt
test
adc
and
jb
adc
dec
sbb
inc
mov
cmc
int
cwtl
jg
pop
lods
mov
push
les
mov
pusha
jae
in
jle
movsb
out
pop
loope
int
pop
sti
add
jg
cld
sub
xor
fs
mov
inc
push
jge
dec
repz
jns
in
inc
aam
inc
xchg
mov
push
fninit
xchg
leave
nop
mov
xchg
jg
stos
popa
jnp
xlat
stos
daa
inc
pusha
in
xor
push
mov
int
aad
aaa
add
loope
push
stos
dec
mov
js
aaa
mov
repnz
outsl
icebp
pop
adc
fistps
mov
ficompl
or
pop
inc
stc
sbb
jg
pop
call
jno
ljmp
insb
ja
push
and
test
jae
mov
ja
dec
xchg
sbb
mov
lahf
ret
sbb
mov
fdivrl
push
nop
out
es
fdivrp
inc
out
mov
push
mov
out
push
call
xchg
jmp
push
pop
out
in
xor
mov
sub
lock
aam
int
pop
in
push
test
inc
fcmove
repnz
lock
roll
out
xor
mull
mov
shlb
je
pop
aam
jp
pop
mov
push
jle
ret
sub
jbe
mov
jg
and
je
mov
sub
xchg
cmc
lret
inc
cmp
adc
and
push
lret
insl
cwtl
add
aad
popa
out
add
jmp
fmuls
repz
imul
into
mov
lea
and
lock
adc
icebp
mov
fimuls
push
dec
pop
add
out
inc
adc
clc
leave
lret
popf
insb
in
push
dec
ja
fists
jne
outsl
and
incb
repnz
add
push
push
clc
test
add
jns
fcomps
negb
fidivrl
mov
xor
nop
fwait
or
and
xchg
fstps
int3
stos
sbb
lock
mov
out
push
stos
mov
pop
xchg
repz
iret
mov
aas
adc
fdivrl
sub
fs
and
clc
addr16
cli
jbe
mov
dec
cmp
pushf
xchg
mov
mov
or
xchg
cmp
jmp
loope
lcall
sbb
add
lods
outsb
test
popf
push
mov
fsubrl
test
dec
jg
mov
or
jnp
iret
aad
lods
fldenv
in
inc
mov
jbe
jg
fadd
pop
jns
dec
mov
mov
mov
jle
data16
bswap
xor
dec
inc
js
mov
loop
mov
test
std
mov
mov
cmp
imul
and
mov
mov
js
jge
mov
adc
nop
sub
popf
lret
sbb
xchg
stc
xchg
mov
sub
add
mov
mov
fnstcw
xchg
lret
mov
cmp
cmp
or
pop
cmp
jb
pop
scas
xor
and
in
lods
and
and
cwtl
decb
jns
mov
cmovae
in
jo
or
call
jl
ss
xor
fs
hlt
push
push
ret
push
call
push
fistpl
sti
sbb
imul
dec
jne
lahf
mov
ja
inc
xchg
xchg
lds
mov
scas
mov
mov
lds
fimull
push
stos
cmp
mov
push
data16
in
xchg
iret
cs
mov
fidivrl
movsl
sahf
lahf
sub
int
out
test
mov
mov
in
lcall
lsl
int
jle
fisubrl
loop
lahf
movsb
aad
lds
adc
pop
push
out
movsb
push
pop
into
ljmp
into
sbb
nop
push
adc
test
dec
sub
xchg
bound
sbb
loopne
loope
test
or
add
dec
stos
movsl
sbb
and
mov
pop
jmp
cmp
jnp
out
jg
and
leave
pusha
cmp
push
lret
mov
lahf
pop
sbb
pop
adc
mov
scas
mov
in
or
cmpsb
xor
push
mov
into
pop
adc
xor
dec
xchg
insl
shlb
stos
daa
mov
sbb
and
int3
mov
mov
pop
das
in
jae
lcall
sbb
dec
sub
cmp
insb
fisubrl
sub
dec
popf
xor
scas
insl
arpl
lods
pop
inc
into
fwait
je
mov
repnz
lret
loopne
fnstsw
in
pop
sub
loope
xchg
cmp
lods
scas
push
xor
sub
sub
mov
mov
push
call
js
pop
push
add
mov
add
push
or
movsb
or
cmp
testb
xchg
fimuls
aad
out
mov
std
sub
repnz
xchg
fcomps
fsub
cwtl
mov
xchg
in
cmpsb
hlt
mov
or
fsubs
jnp
loope
add
test
xor
int3
outsb
lock
sub
lea
mov
loopne
mov
jmp
jmp
lock
and
lcall
add
and
mov
push
mov
aad
aas
ds
jle
push
sbbl
out
iret
int
pop
in
sub
clc
jmp
int3
sahf
and
outsl
mov
xor
pop
ret
fwait
jne
and
leave
outsb
mov
inc
int
adc
nop
jbe
dec
or
cwtl
addr16
cli
lcall
out
mov
cmc
mov
and
aad
scas
mov
aas
cmpsl
pop
out
dec
jb
cwtl
sub
div
inc
add
repnz
xchg
and
es
jl
jo
not
add
add
jno
cmpsl
sarb
mov
and
dec
cltd
icebp
sahf
pop
data16
shr
push
push
push
subl
sub
jae
sti
je
das
mov
push
sub
xor
jecxz
mov
pop
pushl
jno
pop
cmp
push
sbb
jecxz
shrl
lret
or
add
pop
movsb
or
lods
divb
jnp
dec
scas
adc
popa
dec
add
ret
cmpsl
pop
ljmp
leave
cmp
daa
mov
cs
int3
sub
jge
push
inc
xorl
add
ret
jge
insl
out
mov
into
test
mov
mov
xrelease
add
cmp
jno
push
daa
and
lret
xchg
fwait
xchg
mov
pop
adc
adc
dec
mov
pushf
jo
leave
call
mov
adc
jge
mov
stc
loopne
add
push
mov
js
sbb
shll
into
aam
xchg
out
pop
seta
cmpsl
movsb
repz
inc
mov
int3
ret
lods
xor
mov
cmpb
out
pop
fsubrs
icebp
inc
shrl
cwtl
sbb
inc
cs
dec
sub
xchg
shr
stos
xchg
dec
insb
repz
and
cmp
xor
ljmp
lahf
cmovle
lock
cmp
lret
push
addr16
xor
in
dec
mov
adc
ja
push
daa
xchg
push
stos
lods
iret
bnd
pushf
cwtl
sub
leave
xchg
mov
mulb
mov
jmp
add
pop
gs
jae
jb
mov
adc
jb
cld
nop
testb
push
je
les
pop
push
sub
cmp
add
in
cltd
mov
dec
adc
jbe
mov
sbb
dec
lret
shrl
cmp
ja
vshufps
push
je
sub
daa
pop
add
in
imul
shl
imul
push
fstpt
in
ret
popf
lds
xchg
scas
stc
mulb
and
and
insl
fistl
or
add
hlt
movsl
std
fidivrl
sti
fidivl
mov
shlb
cmpsl
ds
imul
cmp
xchg
pop
jl
gs
mov
jbe
pop
mov
mull
jo
fwait
xor
cld
testb
jge
xlat
pop
fsub
adc
sub
dec
je
daa
sub
xchg
mov
mov
xchg
jne
jp
loopne
jae
nop
push
adc
insl
mov
jb
les
pop
ret
inc
das
add
repnz
sbb
jmp
xchg
dec
bt
cs
mov
repnz
add
aas
int
sub
popa
fmull
jp
fmuls
shr
inc
adc
int3
js
aam
mov
push
jge
sbb
clc
push
lret
mov
sarl
mov
xchg
push
lret
mov
outsl
jnp
add
push
scas
xlat
mov
lret
aad
push
jg
jmp
pushf
aad
push
jp
insb
rcrb
mov
mov
enter
fs
or
into
js
mov
inc
or
jg
pop
jne
jo
call
outsb
and
es
imul
mov
arpl
mov
enter
es
adc
jns
jno
out
imul
outsb
xchg
or
add
and
xchg
inc
dec
push
jnp
mov
jns
sub
pop
lods
aad
adc
lock
ljmp
aas
repz
loopne
lock
push
cmpsl
fbstp
push
call
outsl
aad
xlat
std
adc
xchg
aas
push
ret
and
loop
xor
out
lahf
xor
cmp
popf
mov
mov
cmp
mov
pusha
jb
mov
mov
push
sahf
dec
data16
jge
lret
mov
bound
xchg
adc
mov
out
push
repnz
jle
pop
inc
fldt
stos
test
jge
loope
and
mov
add
add
repz
mov
ja
nop
bound
jnp
jbe
jb
push
lcall
and
aaa
xchg
cltd
dec
push
cmpsl
ret
inc
push
cmp
lock
mov
pop
cmp
pop
dec
sub
stos
out
repnz
clc
imul
scas
cmp
stos
push
push
jne
cmp
insb
pop
mov
sub
pop
add
mov
pop
dec
jle
adc
js
ror
aam
lcall
rcl
pop
add
js
sbb
mov
or
pop
adc
into
data16
cmp
sti
addr16
add
sbb
mov
sahf
bnd
vcvttps2dq
sbb
inc
lods
addr16
dec
lahf
cmpsb
xor
jmp
mov
sbb
aaa
inc
pop
mov
das
jae
push
aaa
or
imul
cmp
js
insl
and
or
or
jae
pop
jp
stos
shll
stos
cmp
xchg
mov
inc
pop
inc
pusha
jb
jbe
cltd
out
incl
sub
mov
and
xchg
or
int
sti
nop
xchg
xchg
push
daa
sub
fadds
and
test
pusha
fcompl
mov
mov
dec
xchg
jl
fldenv
jno
lcall
lcall
xchg
and
xlat
jle
dec
mov
or
cwtl
out
sbb
cmp
mov
mov
mov
rcrl
pop
dec
or
popf
test
pop
sbb
test
cmpsb
fisttps
xchg
std
sti
fdivp
hlt
repz
xorb
imul
sbb
aam
jle
and
mov
sub
stos
and
or
mov
loop
cld
add
or
test
movsb
loope
xchg
hlt
rcrb
aam
pop
sahf
dec
dec
push
push
shll
mov
fdivs
sbb
pop
sbb
jecxz
mov
cmp
bnd
js
push
lods
push
dec
adc
fisubrl
push
xor
xlat
fs
rcll
std
test
sbb
pop
sbb
adc
aaa
cltd
mov
in
cmpsb
movsl
outsl
xchg
dec
imul
or
mov
push
add
insl
rcrb
fwait
mov
xchg
mov
popa
popa
and
push
mov
shlb
or
daa
cmpsb
stc
or
test
daa
sbbl
pop
jle
mov
aas
imulb
inc
lea
popf
cmp
or
subb
das
aaa
pusha
stos
push
test
nop
out
in
push
pop
mov
int
cli
xchg
aas
xor
int
jne
and
cmp
rcrl
sbb
aad
ja
xor
sarl
das
clc
mov
mov
jne
repnz
dec
lods
bound
mov
out
inc
sarb
xor
cmc
test
jnp
es
stos
adc
inc
movl
ret
mov
add
lcall
or
mov
popa
dec
hlt
adc
scas
clc
sub
and
cltd
and
sbb
addb
jmp
sub
jnp
mov
jnp
adc
shrl
xor
rcl
mov
add
pusha
repz
sbb
das
lcall
push
jge
in
movsb
mov
int
in
lahf
jg
in
gs
adc
lods
ss
push
jecxz
insl
cld
ret
push
imulb
fwait
and
sbb
jl
notb
test
mov
inc
in
aaa
push
sub
clc
divl
clc
sub
mov
das
pop
dec
and
fs
cmpsb
xor
inc
add
fs
lock
xchg
pop
inc
jno
pop
sarb
movl
and
test
test
ljmp
and
loopne
out
lahf
push
ljmp
push
sub
cmp
jbe
aad
cmp
and
clc
add
movsb
ss
data16
pop
arpl
lods
mov
xchg
xor
loopne
xchg
into
add
adcl
ljmp
je
rcl
repnz
sahf
daa
mov
fwait
mov
js
loop
ss
adc
dec
loope
xchg
popa
js
icebp
push
sbb
fstl
fstps
jle
fildll
or
sbb
adc
int3
lods
or
push
ss
lcall
pop
jge
pop
mov
clc
rdpmc
rcll
jmp
cwtl
ss
stos
arpl
out
push
mov
les
cmc
cmpl
mov
insb
push
int
fcoms
fidivs
frstor
popf
stc
push
pop
push
and
test
fisubs
xchg
in
das
sub
pushf
sahf
pop
mov
lds
and
jle
push
sahf
sti
iret
xorl
and
jbe
addr16
mov
inc
push
lahf
mov
lods
sub
or
stos
lret
cmc
push
fcom
xchg
sub
les
push
add
addb
into
lcall
xchg
or
std
sub
dec
xchg
mov
divl
add
iret
les
jae
or
jbe
cmp
mov
out
data16
mov
dec
inc
and
and
push
push
pop
xor
pusha
fcomi
xor
fdiv
mov
pop
and
int
imul
mov
loope
aas
gs
mov
lods
fisubrl
jecxz
lret
imulb
psubsw
or
adc
dec
sbb
lods
push
in
adc
push
xlat
rcrl
aas
adc
aas
jns
test
dec
adc
pop
repnz
mov
mov
or
shrb
lock
rol
adc
cwtl
jne
lahf
push
stc
in
das
cmp
das
xchg
cmp
aaa
or
inc
les
pop
je
add
add
xor
insl
fcompl
xorl
imul
mov
jge
mov
and
mov
xchg
cmp
shll
push
mov
cmp
sbb
pop
lret
scas
cli
add
xor
popf
mov
sahf
cmp
lret
fmull
jne
popa
sbbb
inc
outsl
sub
cli
jnp
test
std
sbb
out
jb
dec
cmp
push
jp
sbbb
push
insl
icebp
mov
mov
dec
mov
lahf
or
test
shr
pop
stos
push
cmpsb
pop
xlat
push
ja
lea
xchg
pop
pop
arpl
daa
push
push
jb
repnz
lock
sbb
push
mov
sbb
fcomps
in
subb
mov
test
lret
dec
into
loop
mov
xchg
popa
jae
sti
xor
pop
imul
mov
cmp
mov
divl
or
sarl
pop
inc
int3
mov
ficoms
in
and
sahf
fsubl
in
xchg
dec
adc
pop
ret
and
dec
cmp
adc
jp
movsb
jno
js
movsl
or
ret
jmp
imul
ja
hlt
pushf
adc
neg
pop
sbb
mov
insb
sbb
mov
jecxz
shl
xchg
lret
outsb
out
xor
pop
cmp
lods
int
jle
jo
inc
inc
lock
push
push
decb
dec
mov
cwtl
lcall
add
inc
cwtl
arpl
pop
mov
mov
pushf
lret
lods
mov
sbb
repz
ja
xchg
test
inc
lcall
sub
iret
andl
scas
insl
int
fbstp
add
cs
out
sub
add
jmp
or
ret
popf
clc
dec
sbb
test
xchg
test
jge
fwait
out
test
arpl
ja
repz
dec
xor
leave
lods
js
push
mov
xchg
sub
repz
enter
fldenv
fwait
sar
and
pop
sbbl
xchg
mov
inc
xchg
hlt
add
orb
fs
xor
push
cmp
or
ja
popa
xor
std
xchg
mov
je
in
nop
int3
hlt
repz
jecxz
outsl
inc
imul
invd
dec
enter
mov
cmp
jbe
fldl
mov
inc
pop
fdivl
add
fwait
adc
sub
sbb
cwtl
inc
jo
and
lcall
jne
adcb
pusha
sti
xlat
lret
or
fdivl
push
addb
test
enter
lods
fimuls
inc
aas
and
icebp
sbb
push
add
leave
out
cmp
xlat
xor
mov
div
dec
or
jp
or
scas
int
jnp
xchg
sub
mov
and
jno
imul
shlb
lods
shll
imul
loop
push
and
fucomip
cmpl
repnz
inc
push
fs
in
movsb
mov
sbb
mov
and
push
sar
and
xor
mov
emms
adc
scas
cmp
pop
xor
push
adc
outsl
xorb
shl
push
rcrl
inc
lahf
xchg
ficomps
add
cmp
inc
std
repz
lcall
or
ds
out
pop
shrl
fisubrs
pop
cwtl
fyl2xp1
xor
dec
push
lods
mov
or
adc
pop
mov
arpl
dec
push
ljmp
cmp
aas
in
push
or
int3
stc
or
jb
sbb
push
das
mov
mov
lods
xchg
lods
fst
imul
fwait
jp
xchg
icebp
mov
mov
and
fadds
jmp
jg
idivl
rorb
jecxz
add
cmp
and
roll
sub
in
out
xor
xchg
jno
dec
mov
imul
test
test
sbb
cmpsl
ljmp
add
rcll
dec
jno
lock
leave
push
cmp
in
xchg
inc
test
ljmp
jp
sarl
movb
jmp
notb
and
iret
push
and
lcall
mov
xchg
mov
cmp
add
ret
pop
lret
jg
jg
mov
sbb
pop
pushf
add
cmp
inc
lret
out
xchg
cwtl
loope
leave
xchg
push
xchg
mov
push
cmp
fadd
and
sbb
mov
sub
repz
push
fwait
mov
cmp
cmc
or
inc
xor
xchg
pop
add
xchg
sti
sbb
xlat
xchg
cwtl
sarl
sbb
ret
jae
adc
rclb
jne
jl
cmp
adc
loope
jle
ss
jg
jb
sub
jns
shll
pop
jbe
adc
or
pop
jle
test
fwait
dec
xchg
test
jno
mov
scas
arpl
ret
pop
sub
outsl
dec
rol
cs
out
out
loope
mov
xchg
cli
xchg
movsb
outsb
and
jno
mov
mov
push
addr16
mov
push
enter
shl
insl
out
insl
out
pop
push
add
mov
or
mov
cli
pop
in
mov
pop
push
pop
mov
pop
mov
mov
add
leave
mov
lds
mov
sub
loop
pop
in
pop
rcrl
xchg
mov
fdivrp
and
in
data16
add
push
dec
xchg
or
daa
push
push
insl
xor
push
mov
orl
xchg
leave
or
fnstenv
xchg
mov
scas
iret
rcrl
adc
sbb
cwtl
push
mov
outsb
inc
test
xchg
dec
cltd
inc
dec
lods
jl
daa
imul
stos
aas
cmp
adc
loope
mov
cmpsb
or
inc
loope
push
xchg
lea
arpl
jmp
xchg
xlat
mov
jbe
vphsubwd
nop
mov
js
rorb
xchg
mov
or
sub
lds
js
mov
mov
or
adc
dec
scas
sub
dec
push
mov
jmp
dec
sub
cmp
push
mov
sub
mov
lods
roll
iret
out
add
jecxz
add
fsubrs
add
xchg
movsl
xor
imul
adcl
add
icebp
dec
dec
add
popf
ficompl
shr
stos
aad
fisttpll
xchg
and
ljmp
insb
jg
test
mov
cli
decl
dec
jle
hlt
int
out
jae
xor
test
int3
mov
pop
loop
mov
in
push
aas
inc
movsb
and
insb
adc
in
or
pusha
cmpsb
adc
out
stc
out
xchg
js
lods
orl
imul
xchg
pop
std
loope
cli
arpl
scas
je
pop
xchg
fwait
pop
mov
dec
pop
icebp
or
push
hlt
push
imul
pop
push
nop
push
mov
pushf
lret
sub
out
hlt
stc
mov
adc
pmullw
iret
add
std
pop
adc
roll
and
test
and
roll
or
sbb
sub
rclb
jne
jmp
mov
loope
lret
mov
inc
clc
mov
mov
loope
out
adc
imul
xorl
mov
mov
or
mov
xchg
sti
push
shrl
clc
dec
dec
push
xchg
jg
and
jp
push
daa
fldenv
sub
inc
jb
cld
ja
std
xor
pop
icebp
nop
xor
dec
dec
mov
call
pop
into
fwait
lea
and
cli
ret
outsl
daa
pushf
and
mov
mov
mov
xor
mov
pusha
lret
or
add
outsl
je
add
inc
test
push
mov
or
push
aaa
dec
xor
lock
push
clc
xchg
jle
shll
mov
mov
inc
push
cmp
cmpsl
mov
mov
repnz
xorb
add
xlat
loopne
sub
mov
pop
adc
mov
inc
push
mov
inc
mov
in
nop
rorl
das
mov
loop
ja
popa
mov
adc
cmpsb
sbb
mov
scas
xchg
sub
mov
lock
popf
cmp
dec
lock
js
test
jne
xor
fisttpl
mov
pop
push
les
arpl
sbb
mov
loop
test
adc
ret
jmp
xor
fs
or
iret
loopne
inc
mov
mov
loop
movb
pop
xchg
movsb
xchg
test
int3
jb
test
mov
pop
cmc
push
addb
outsb
test
sti
sti
fbld
jmp
push
fadds
fs
xchg
push
es
iret
xchg
mov
je
jns
in
add
cld
mov
aad
aas
mov
mov
daa
fcoml
gs
inc
mov
fcompl
addb
mov
dec
and
pop
shlb
lds
scas
or
lock
jae
xor
repz
sub
call
mov
adc
gs
push
cmpl
inc
or
cs
and
pop
adc
ljmp
add
sub
mov
cmp
pop
add
mov
pop
mov
push
mov
outsl
jbe
mov
cmp
push
movl
filds
xor
outsb
into
jae
rcrb
les
or
add
flds
repz
sub
test
les
fnstcw
sbb
mov
mov
or
insl
pop
push
pop
cmp
mov
and
je
cmc
mov
pop
inc
loopne
lods
test
cmpsb
xor
mov
prefetch
test
push
or
clc
pop
hlt
outsl
lret
repz
sbb
dec
mov
shrl
jns
xchg
fs
cmp
mov
sub
sbb
cmp
xchg
push
mov
push
and
xchg
xchg
cmp
enter
les
lea
les
mov
pop
outsb
in
fsubrl
insl
push
jne
or
jae
xchg
es
mov
adc
lods
jmp
stos
or
addl
sbb
mov
inc
push
leave
pop
mov
xor
add
xchg
and
scas
mov
loop
out
cld
aas
xor
fcom
test
mov
outsl
sbb
arpl
jmp
cmc
lret
cmp
sub
push
jg
add
pop
jns
add
loopne
inc
lret
inc
ss
xchg
stos
in
sub
sbb
push
mov
mov
in
jl
loop
and
jle
and
mov
xchg
mov
repz
push
mov
int3
adc
sar
add
cmc
push
fstp
xor
je
loopne
cmp
int
cltd
add
inc
cmp
imul
or
enter
rclb
adc
addb
enter
inc
out
cli
mov
jl
lds
shr
push
xor
lret
shlb
jns
cmovae
addr16
push
inc
mov
mov
fwait
jp
lods
xor
mov
jle
stos
inc
pop
jle
loop
pop
in
aam
pop
mov
clc
or
pop
and
fsubs
ja
loop
adc
push
adc
push
add
sub
inc
cmp
sbb
ss
loop
aaa
xchg
mov
insl
data16
pop
push
rclb
mov
fsub
movsb
add
mov
dec
sbb
xor
inc
decl
jb
pop
dec
push
inc
sub
lods
inc
push
loope
in
xor
test
sbb
or
setp
mov
inc
scas
and
cmp
mov
ljmp
jl
ds
mov
aam
sbb
in
aad
jnp
out
pusha
push
pop
sub
push
sti
fsts
xlat
inc
push
adc
outsb
movsl
sbbl
addr16
sahf
pop
inc
out
lahf
jecxz
push
and
mov
mov
push
dec
cld
lods
inc
shl
jle
mov
push
add
out
xor
inc
ret
mov
sub
pop
mov
rolb
sub
pop
cld
xor
xchg
sbb
jmp
lods
insb
cld
imul
fmul
inc
add
cmp
movsl
test
push
test
inc
pushw
lret
inc
outsl
and
stc
pop
fwait
fwait
push
lea
cmp
lods
sti
push
pop
sub
sahf
insl
sahf
push
xor
pop
xchg
or
sbb
in
and
jg
adc
cmc
adc
cmpsl
or
fisubl
inc
pop
mov
cld
pmulhw
insb
pop
lret
dec
andb
lahf
pop
lods
ljmp
test
dec
inc
push
loope
xchg
sti
shr
or
push
ret
lock
out
inc
jmp
xlat
and
xchg
les
adc
enter
jge
cmc
and
or
mov
cmp
dec
bnd
es
insl
out
pop
sbb
aaa
sbb
add
in
xor
stc
loop
cmp
faddl
imul
mov
ja
sbb
ret
scas
xchg
cld
insl
fists
mov
and
fcmovbe
inc
movsb
inc
mov
jle
and
adcb
arpl
stos
inc
pop
clc
nop
out
js
arpl
sbb
xor
xchg
mov
fbstp
stos
int
addr16
pop
ror
dec
or
mov
outsb
addr16
push
push
sub
stos
cmp
mov
pop
xor
pop
je
xor
repz
add
lret
add
leave
cltd
ret
add
sub
into
inc
add
movsb
or
xchg
outsl
mov
xchg
jl
jne
sbb
cmc
jno
pop
jle
dec
jg
push
shll
inc
pop
adc
andb
push
int3
pop
and
push
xchg
loope
sbb
ss
mov
dec
xchg
and
adcb
in
cmpsl
jnp
loopne
cld
repnz
mov
addr16
cmpb
scas
out
jmp
gs
popl
jmp
mov
repnz
ja
jne
xchg
stos
mov
lds
arpl
repnz
and
sub
jnp
negb
neg
pop
xor
jnp
movsb
push
cwtl
jnp
push
or
jb
imul
xchg
cld
pop
mov
dec
xor
insl
pushaw
nop
push
dec
mov
jne
test
lcall
cmp
cld
inc
pop
push
jo
sub
movsl
sbb
dec
jle
inc
in
or
cs
aad
jmp
add
fpatan
cmc
shrl
into
cmp
enter
js
sbb
arpl
and
jo
in
pop
mov
or
enter
sbb
lods
push
xchg
scas
test
das
add
dec
push
shrl
add
push
sbb
pop
adc
xchg
das
rolb
clc
jge
inc
and
ljmp
cltd
ror
fildl
jbe
push
ret
mov
cltd
and
jecxz
test
jo
adc
cli
rclb
out
in
insl
xchg
pop
xor
in
cmp
mov
jnp
pop
imul
stc
cmp
pop
jno
pop
dec
addr16
mov
notb
loop
scas
pop
pop
and
inc
mov
movl
movsb
test
mulb
fst
orl
fdivrs
cmpsb
fnstsw
js
push
pop
mov
mov
xchg
cmp
dec
push
aad
xorl
push
mov
jp
or
xchg
pop
sti
cmp
daa
inc
mov
jl
call
adc
lock
jl
pop
inc
cmpsb
fucomp
xor
pop
push
and
out
out
enter
lods
roll
stc
and
mov
rorl
dec
inc
fiaddl
loopne
sbb
test
test
dec
out
adc
inc
or
paddq
les
dec
mov
sub
xorl
aas
mov
mov
add
mov
and
lock
dec
inc
adc
dec
sbb
adc
lret
sbb
mov
bound
mov
inc
pusha
arpl
add
pop
dec
int
jae
addr16
add
fwait
hlt
cmp
test
mov
inc
push
sub
mov
push
cmpsb
pop
lock
inc
push
xor
jb
mov
sti
aas
cltd
add
sbb
jecxz
xor
shlb
bound
xor
mov
dec
inc
fwait
jbe
ret
inc
data16
inc
fcoms
inc
jl
jae
inc
dec
pushf
jp
lret
lock
inc
xchg
rcr
pusha
sbb
sbb
jne
fucom
adc
or
xchg
rolb
stc
fwait
lret
push
jb
inc
add
pop
lea
jb
jo
cmp
out
enter
gs
subb
push
stc
jb
sbb
lret
add
sub
aam
pusha
add
sub
adc
cmp
sub
push
pusha
cwtl
push
psubw
movsb
xchg
int3
dec
sbb
dec
notb
mov
sbb
xor
adc
mov
mov
repnz
scas
sub
mov
lret
ret
mov
pop
xor
jmp
mov
xor
jmp
pop
xor
stc
push
dec
cmp
sbb
sub
out
int3
pop
fldenv
ret
mov
cmp
xchg
jl
lock
mov
cmpl
ljmp
mov
xorb
lret
jl
jmp
push
adc
push
ljmp
fisttps
mov
and
lret
aas
lret
ds
jne
lods
out
mov
test
sahf
out
mov
and
cmp
adc
nop
fdivr
in
pop
rcrl
jbe
outsb
or
xchg
mov
fnstsw
mov
mov
adc
sbb
pushf
jns
and
jnp
arpl
addr16
outsb
mov
cmc
pop
xlat
inc
scas
and
add
in
jbe
inc
mov
adcb
jecxz
sub
sub
movb
test
ror
stos
aaa
in
aam
jmp
push
pop
js
and
add
ss
jmp
stos
stos
xchg
dec
sub
fs
aad
mov
clc
enter
cmp
cmpsb
stos
mov
mov
jecxz
ljmp
xor
bound
in
mov
and
int3
cmp
lods
cmp
xchg
jge
into
je
pop
dec
loopne
or
cmp
inc
enter
pop
adc
std
add
or
aam
inc
outsl
lds
mov
xor
jmp
lods
stc
dec
adc
loop
pop
dec
arpl
movsb
or
xor
xchg
out
jnp
imul
jns
fs
push
fmull
sub
cmpsl
mov
pusha
into
mov
cli
cmp
sub
mov
int
das
inc
xchg
xor
sub
cmp
xchg
push
sahf
ljmp
pushf
loope
adc
cmp
dec
je
gs
push
js
aaa
mov
sub
cltd
ss
cmp
arpl
mov
arpl
xor
inc
mov
imul
stos
mov
push
popa
into
rorl
jg
es
jae
mov
add
add
das
shlb
enter
lods
pusha
stos
lret
push
fdivl
notb
call
idivl
lods
xchg
add
pop
sub
cmp
sbb
sub
pause
xchg
xchg
div
cmpsb
push
mov
jnp
in
sub
sbb
rcll
cmpb
add
jge
loope
cmpsb
pop
aaa
test
mov
or
jecxz
or
push
das
jp
lret
in
inc
dec
mov
fdiv
lods
pop
in
xor
aaa
sub
push
loopne
pop
enter
std
imul
push
xor
dec
ja
ds
mov
daa
movsl
into
dec
jge
fisttps
push
popa
jae
dec
outsl
test
arpl
in
xchg
out
sub
mov
lret
pop
sbb
in
cmpsb
das
pop
adc
dec
mov
or
cmp
je
jp
js
outsb
mov
repz
jne
xrelease
mov
mov
mov
ljmp
adc
call
es
mov
adc
jno
jp
push
enter
mov
frstor
push
xchg
xchg
out
push
cwtl
sti
push
mov
mov
jne
push
enter
mov
es
ret
mov
cmpb
into
xchg
repz
pop
int
test
or
ss
adc
sbb
faddl
push
lds
mov
gs
cld
mov
mov
nop
cmp
cmp
mov
jl
aad
push
or
cs
mov
sbb
sub
push
rorl
pop
movsl
mov
mov
leave
mov
or
xchg
mov
cltd
jns
fwait
rolb
mov
mov
aam
sahf
push
into
incb
lcall
enter
mov
xor
jecxz
test
jno
xor
or
jb
sub
and
hlt
jg
xor
popl
jecxz
out
dec
mov
sub
fs
std
in
xor
loope
or
and
jno
add
out
ror
or
into
jmp
lds
nop
clc
push
xor
jle
push
fcoms
dec
es
adc
push
and
adc
mov
sarl
test
jno
loope
stos
sbb
sub
adc
inc
xorl
dec
pop
fucom
lret
inc
ja
lds
insb
and
lcall
rcrl
and
lock
and
mov
mov
iret
xchg
test
cli
insl
fwait
xchg
rcrl
mov
lds
adc
sub
add
adc
and
ja
inc
mov
cmp
shr
cltd
pushf
das
pop
ss
jbe
add
pusha
mov
imul
jne
addr16
rorl
ret
cmp
and
loopne
xor
test
xlat
mov
je
mov
inc
jg
scas
lret
sbb
arpl
sbb
xor
push
jae
mov
sbbb
in
xchg
icebp
cltd
mov
sub
add
lahf
inc
mov
jecxz
es
pushf
pop
inc
dec
insl
ljmp
xor
xchg
std
sub
fstl
mov
pop
out
lock
inc
add
push
pop
jl
nop
mov
das
insl
pop
stos
lahf
pop
add
or
aaa
inc
lcall
cwtl
push
pop
push
movsb
mov
ljmp
mov
push
mov
aam
ret
jp
popf
pusha
dec
push
jo
push
lcall
pop
mov
lods
pop
shrl
leave
jl
mov
mov
sbb
push
and
pop
or
out
sbb
cld
and
fsubrl
aas
cs
stc
test
enter
cmp
ret
adc
and
sti
idiv
data16
mov
outsb
sub
out
nop
jge
adc
out
in
jle
cld
mov
jl
cmpsb
cmpsb
mov
lahf
mov
int3
xor
mov
outsb
ret
xchg
add
adc
mov
iret
pop
inc
dec
pusha
shrb
in
pop
mov
sahf
aad
stos
push
push
dec
jmp
or
mov
arpl
pop
jle
das
sbb
xlat
clc
mov
or
xlat
mov
inc
lcall
cmp
pop
lock
arpl
cmp
gs
popf
scas
dec
push
push
push
mov
adc
or
xchg
loop
je
pop
pop
mov
push
mov
mov
inc
adc
pop
outsb
push
sub
push
data16
inc
mov
fcomp
push
fisttpll
testb
jmp
imul
ss
adc
loope
sbb
mov
pop
pusha
jg
xchg
mov
aam
inc
dec
addl
and
cwtl
fisubl
sub
lods
inc
sti
inc
std
mov
and
call
out
mov
fwait
ljmp
push
mov
shlb
cmpsl
sub
add
or
aas
lea
mov
xor
dec
xchg
pop
std
pop
imulb
movsl
push
sbb
mov
test
mov
insb
lret
addr16
pop
mov
sbb
jb
cmp
add
and
jae
lcall
stos
ja
cmp
loopne
sbb
sahf
in
cmp
fldenv
es
lock
mov
les
push
out
icebp
dec
stc
je
xor
aas
dec
cmpsb
mov
imul
fcompl
lods
ret
pusha
movsl
adc
jmp
pop
pop
add
push
js
jp
xor
mov
jg
test
jo
sahf
ljmp
sub
cmp
cwtl
mov
xchg
mov
inc
js
jl
adc
mov
cwtl
sbb
dec
leave
rcrb
dec
iret
scas
ljmp
and
enter
into
jl
fsubl
std
and
inc
mov
mov
cmp
pop
loop
in
repnz
or
fsubl
test
and
aad
insb
iret
xchg
mov
aam
pop
mov
push
rcrl
inc
sub
in
outsl
test
pop
pop
scas
std
mov
roll
je
push
dec
int3
cltd
leave
jne
sbb
sbb
or
cld
cmp
add
dec
adc
xchg
inc
dec
inc
mov
mov
cs
mov
incl
jbe
scas
cmp
jl
adc
xchg
add
mov
dec
in
pop
jecxz
in
nop
mov
or
fisubrl
int3
sub
jecxz
or
add
xchg
fisttpl
xor
stc
pop
scas
sbb
sub
js
popa
insl
cmp
fadds
sub
pusha
pusha
xor
jo
popl
cmp
lock
leave
push
in
sbb
xchg
or
xchg
icebp
and
in
inc
movsl
es
call
adc
push
xor
imul
addl
or
xchg
push
mov
bound
cmpsb
out
sbb
push
jmp
gs
ret
and
enter
or
cwtl
loope
pop
xchg
adc
or
gs
cwtl
mov
lret
popa
loope
pop
dec
inc
rorl
inc
imul
ret
fiaddl
adc
sbb
jg
sti
push
mov
add
aam
mov
jmp
mov
and
jecxz
and
mov
inc
mov
fcmovnu
in
and
mov
mov
xor
pop
sarb
or
fistl
in
dec
inc
mov
and
ret
sbb
lock
mov
xor
subl
shlb
jp
or
icebp
mov
inc
outsb
jmp
in
cmp
add
js
stc
data16
test
push
mov
lods
or
shrb
dec
fmuls
xor
inc
jmp
fwait
pop
es
fst
aaa
dec
aas
in
xchg
mov
xchg
jae
arpl
punpcklbw
xor
xchg
mov
cld
leave
aas
stos
dec
xchg
pop
iret
dec
lds
ljmp
mov
sbb
xchg
in
ljmp
push
add
dec
xor
sbb
das
pop
jmp
fnstcw
cmp
mov
test
xchg
push
and
hlt
stos
mov
mov
jbe
aaa
lret
adc
adc
push
sbb
pop
loopne
fistpl
mov
sbb
sub
movsl
xlat
add
adc
sbb
xchg
sbb
sbb
rolb
sbb
xchg
sub
and
sbb
ja
mov
push
cmpsl
xor
mov
dec
ret
cmc
testl
push
xlat
xchg
push
mov
daa
xchg
add
cmp
push
pop
pop
push
nop
mov
mov
ds
mov
andb
cmp
or
fdivrs
xchg
inc
aas
mov
sbb
pop
push
push
xchg
repnz
mov
or
inc
cmc
and
sub
sub
xor
pop
xchg
mov
mov
push
popf
jg
sub
mov
aaa
xchg
in
or
mov
jae
cs
call
xor
pop
mov
cmp
int3
call
in
into
into
push
mov
sbb
add
mov
js
imull
jmp
dec
adc
shll
add
mov
jge
mov
cmp
fucom
sbbb
adc
sahf
sbb
jo
aaa
or
mov
jmp
or
int
sbbl
xor
and
jns
mov
xor
cmpl
stos
imul
jae
pop
in
mov
stos
pop
test
adc
mov
movsb
push
inc
pxor
cwtl
or
idiv
lea
push
add
cwtl
jl
jnp
fidivs
cmpsb
in
jno
inc
shrl
loop
and
jb
add
sbb
sti
inc
or
cmpl
in
push
push
xchg
lret
mov
stos
pop
add
jb
cmp
jl
inc
mov
rolb
mov
mov
shll
push
outsl
test
sub
in
add
test
mov
mulb
inc
jb
cmp
cwtl
inc
push
inc
test
imul
mov
add
repnz
clc
gs
dec
jb
jnp
jg
jge
mov
mov
jg
outsl
stc
jge
mov
das
insl
dec
fldcw
outsl
daa
lret
aaa
imul
insl
scas
push
mov
ret
xor
out
xorl
aam
ret
cmp
movsl
and
ficoms
pop
lods
sbb
mov
fistl
enter
add
fcompl
fucompp
cwtl
in
stos
jg
add
int
fiaddl
inc
out
movsl
add
jl
int3
mov
das
rorl
mov
out
cmpsl
insl
sbb
xor
push
mov
inc
fwait
adc
pop
xchg
test
dec
lock
jno
fdiv
das
cmp
cmp
pop
int3
clc
and
mov
xchg
inc
loope
stos
ret
and
pop
push
notl
lock
sub
cmp
adc
test
mov
lea
cmp
sub
mov
enter
mov
cmpsb
rol
fisubl
les
test
mov
adcb
jecxz
adc
lret
dec
imul
cltd
fists
ljmp
shlb
mov
mov
and
aaa
fcoms
pop
adc
push
jo
in
xor
int3
inc
imul
pop
testl
sub
imul
mov
add
mov
add
or
cmp
or
pop
jb
imul
pop
loop
sub
sub
test
loopne
add
cmp
lret
xor
mov
dec
in
inc
jl
or
lret
cltd
mov
push
in
and
das
sbb
add
ret
arpl
or
add
add
insb
ljmp
dec
mov
push
sti
add
mov
mov
and
repnz
popf
cmp
je
popa
cmc
add
mov
sahf
adc
adc
addr16
mov
movsb
push
cltd
cmp
jmp
sub
sub
pop
imul
out
pop
adc
loopne
neg
add
aam
jp
dec
mov
push
in
rorb
aas
mov
mov
pop
pop
and
mov
adc
leave
imul
add
push
sub
and
test
std
cmp
adc
mov
test
cli
cmp
cld
out
and
push
lahf
cmp
mov
cmp
or
cmp
push
pop
or
clc
xchg
out
mov
repz
inc
rorb
stos
xchg
dec
inc
clc
pop
movsl
sti
mov
inc
int3
sbb
cmp
pop
sub
rcrl
popa
mov
fldt
fs
nop
push
out
cld
add
and
and
insl
rcll
mov
sbb
ret
test
mov
cltd
ja
xor
repz
repz
mov
movsb
lret
adc
pop
outsl
cmpsl
mov
in
cli
cmp
pop
mov
out
push
sub
cli
sbb
mov
push
cmc
pop
cs
push
lcall
fadds
cmpsl
adc
aad
and
dec
fdivl
int
in
mov
mov
es
xorl
mov
jno
pop
adc
negl
lock
imul
or
test
in
hlt
adc
cld
pusha
addr16
dec
mov
pop
and
xchg
dec
fwait
mov
cltd
lahf
mov
int3
ljmp
mov
pop
out
test
xchg
adc
call
add
outsb
iret
loope
adc
inc
ss
dec
cmpl
movsb
xchg
adc
fisubrs
lds
sbb
push
es
ljmp
imull
xor
and
jae
push
mov
std
add
cld
loope
cmpsb
jbe
lea
push
inc
sub
inc
xchg
push
xchg
pop
aaa
mov
pop
pop
jno
ret
or
xor
push
jne
arpl
mov
jne
cmc
jo
decl
xchg
cmpsl
jns
xchg
std
push
add
pop
sub
fs
push
adc
jne
mov
and
push
mov
sbb
dec
test
sbb
xchg
adc
in
into
movl
cmp
mov
leave
pop
adc
sbb
xlat
lret
mov
fistps
in
cs
push
lods
ds
mov
shrb
rorb
mov
cmp
jl
lods
scas
shlb
negl
por
aaa
incb
jne
stos
mov
insb
dec
push
jg
inc
pop
aad
stos
xchg
in
mov
insb
mov
pop
loopne
inc
cmc
out
dec
push
fs
push
stos
inc
xchg
jae
mov
xor
or
pop
out
or
pop
nop
sti
or
pop
mov
or
jg
std
xchg
sub
xorb
jb
lds
cmp
ret
pop
sbb
pop
scas
jns
lods
andb
clc
repnz
cmp
repnz
sub
rcr
jnp
mov
jo
scas
sbb
stos
dec
cmp
push
in
bound
in
adc
mov
lock
push
repz
or
or
inc
jo
daa
rorb
inc
mov
adc
stos
int3
xchg
ret
notb
adc
fidivs
jbe
jmp
xchg
jo
loopne
flds
test
xor
or
push
push
pop
add
mov
dec
dec
aaa
mov
and
or
pop
or
ret
dec
ss
mov
sub
mov
push
push
jmp
mov
add
aaa
lea
adc
xlat
pop
cld
cmp
add
cmpsl
pop
fcoms
xlat
jmp
xchg
out
cmp
adc
sbb
add
stc
mov
addr16
cs
push
aas
mov
in
adc
sub
das
cmp
movsb
test
xchg
ret
clc
jns
ja
pop
or
fdivrl
gs
jne
cmp
das
shlb
sbb
fs
mov
popa
xor
enter
in
push
mov
mov
sti
outsb
fsubr
cmp
xorl
lret
pop
push
dec
cli
mov
dec
cmp
pop
fucomp
cltd
inc
test
mov
lret
les
push
test
pop
jmp
push
sti
cmp
mov
int
jmp
pop
jbe
pop
shlb
mov
push
push
sahf
mov
leave
je
dec
jno
pop
aas
and
lahf
pop
cli
mov
cwtl
nop
mov
sub
movsl
mov
out
std
outsb
fmull
sbb
push
addl
add
dec
scas
in
sub
sub
jo
testl
push
pop
ret
add
scas
add
test
mov
and
xchg
jmp
or
cmp
jns
lahf
es
repz
loope
or
dec
ss
push
ret
ljmp
loope
mov
cs
push
sbb
add
cmpsl
hlt
bound
mov
daa
test
in
in
leave
cld
sub
in
mov
pop
xchg
sahf
aad
cli
push
adc
xchg
adc
adc
jbe
push
sar
xchg
jmp
jge
jl
stos
sub
xchg
mov
out
jo
ret
out
sub
sahf
mov
mov
in
xor
xchg
je
mov
mov
fs
xor
insb
mov
je
xor
mov
insl
int
sbb
push
xchg
cmp
mov
and
jp
push
orb
mov
insl
mov
jg
xor
adc
mov
add
mov
test
push
imul
dec
insl
je
jnp
push
mov
or
add
sub
arpl
sbb
bound
out
cmp
push
cmp
cmp
dec
jecxz
aad
cmc
dec
sub
mov
jmp
mov
insl
or
inc
mov
addr16
inc
xor
sbb
cltd
aam
ja
adc
xchg
xchg
shlb
cld
popa
vorps
popf
notl
cmc
sbb
arpl
lahf
dec
les
xchg
fisubs
mov
repz
dec
pop
or
cmp
xchg
in
addr16
mov
pop
dec
pop
jecxz
jne
lret
loopne
out
sbb
adc
in
cmpl
iret
outsb
fadds
outsl
inc
sar
subb
pop
mov
jp
cli
mov
push
insl
mov
mov
aaa
lret
mov
cwtl
pop
xlat
push
and
or
jecxz
aad
xor
mov
test
aaa
in
aad
jecxz
std
test
scas
sub
fs
pop
adc
sub
testb
pushf
stc
cmpsl
inc
cwtl
lock
sbb
add
scas
test
jno
imul
sub
add
dec
jne
dec
int3
shll
mov
inc
int
add
and
mov
and
push
cli
push
dec
aad
rcll
inc
int
dec
scas
jne
sub
ja
add
dec
or
mov
xchg
xlat
dec
xchg
test
adc
pushf
dec
dec
in
pop
dec
arpl
dec
fstpl
popf
sbb
mov
jb
orb
daa
in
pop
xchg
cmp
mov
mov
pop
xchg
xchg
xor
pushf
aam
fistpll
addb
in
arpl
aam
call
jg
scas
dec
aad
call
pop
jle
pop
xchg
lret
dec
push
ds
push
lcall
xor
lods
and
rorl
scas
jo
sub
insl
stos
cmp
mov
push
ds
push
fnstcw
mov
push
fwait
dec
setae
inc
xchg
loop
ljmp
push
jle
or
pop
popf
jl
nop
push
fs
cltd
rorl
adc
ret
movsb
movl
fwait
iret
lock
adc
add
fnstcw
cld
ljmp
adc
xchg
mov
int
mov
and
adc
decl
jns
xlat
or
or
dec
call
lods
mov
enter
inc
cld
js
or
adc
div
testl
mov
sub
faddl
daa
std
aas
mov
aaa
movsl
shl
or
jmp
ret
insl
sub
jno
or
pop
push
xchg
pop
pop
dec
pop
fstps
inc
test
arpl
aaa
hlt
jae
jo
and
and
add
and
js
mov
add
push
pushl
add
pop
imul
jge
adc
test
in
cmpsb
movsl
inc
inc
cmpsb
inc
in
push
std
incb
cli
mov
neg
adc
cmp
and
mov
jne
daa
stos
xor
outsb
mov
push
mov
pop
jns
or
ljmp
stos
aam
dec
fwait
cmp
jb
enter
fwait
sbb
popf
xor
lds
ja
jmp
das
lahf
f2xm1
ss
xor
add
repnz
cmp
jo
outsb
iret
sti
pop
lcall
outsb
in
push
dec
sub
and
xor
cmpsl
pushw
jbe
les
iret
loope
daa
lock
scas
ljmp
sub
call
push
xchg
shrb
mov
leave
push
mov
mov
mov
cmc
lea
mov
repz
sbb
in
add
dec
rcrl
sub
jl
pop
divl
mov
jns
sbb
mov
ret
test
fbstp
out
loope
or
push
xor
cld
shrl
jmp
into
ds
dec
fldt
pop
outsl
cld
movsl
lds
cld
popf
jo
mov
inc
hlt
pushf
js
mov
or
orb
fs
stos
enter
mov
pop
gs
insb
lods
pop
loopne
cs
in
inc
rcrb
lds
imul
xchg
sbb
push
je
cmova
sub
sub
jecxz
ret
ret
inc
inc
sahf
ret
sub
lret
ljmp
inc
stos
jmp
mov
jmp
out
dec
jg
icebp
xchg
add
add
add
outsb
xchg
adc
pop
adcb
sub
xchg
lea
dec
push
push
in
inc
int
inc
xor
popf
fsub
out
jl
pop
in
pause
xchg
lods
mov
out
or
das
or
cltd
mov
jbe
adc
call
test
cltd
test
jge
push
leave
loopne
lea
inc
inc
sbb
rcrb
and
xor
cltd
pop
mov
nop
movsb
gs
sub
packuswb
mov
pop
fdivs
push
mov
lret
ja
rolb
cmpsl
js
mov
sub
sahf
xor
push
mov
pop
fwait
lds
xor
call
repz
jg
push
sahf
in
inc
addr16
mov
ljmp
leave
das
jmp
dec
es
or
pop
pop
fmuls
rcr
mov
inc
adc
lret
dec
dec
in
test
jecxz
jae
test
or
inc
lods
add
movsb
sub
fildll
xchg
add
mov
stos
dec
aam
inc
sub
adc
cmp
mov
xor
sub
mov
pop
pop
jae
call
cmp
mov
orb
cmp
lcall
cmpsl
fwait
jb
repnz
mov
cld
xchg
insl
insb
add
inc
lds
scas
pop
cmp
inc
mov
pop
icebp
movsl
notb
call
ss
xchg
mov
out
insl
test
test
shl
outsl
mull
pop
or
repnz
mov
sub
inc
mov
and
or
pop
push
data16
push
jp
adc
cmp
push
fwait
jae
pop
test
popa
in
rclb
adc
push
pop
inc
test
stos
fidivrs
in
rcr
sub
cmp
mov
add
and
inc
xlat
repz
repz
insb
iret
mov
inc
hlt
pushf
xor
cwtl
ds
jmp
push
push
int
fdivr
pop
icebp
lahf
sbbl
ljmp
sub
in
fiadds
xchg
cmp
jle
push
test
stos
sbb
mov
aaa
movsl
mov
loop
out
repz
pop
into
and
mov
or
or
mov
add
es
adc
and
cmpl
fstps
sub
out
xchg
je
lret
add
shl
fstl
push
iret
pop
test
dec
in
inc
call
fcomi
sub
int
test
mov
ss
inc
cli
pop
cwtl
clc
mov
mov
mov
imul
push
xor
inc
jle
xor
sarl
mov
inc
rcl
mov
movsb
inc
dec
push
enter
jmp
call
xor
cs
cltd
xor
or
push
jns
inc
cmpsb
cmpl
mov
sub
mov
hlt
jbe
movsb
mov
ret
std
repz
cs
xchg
scas
lock
leave
mov
mov
jmp
ret
inc
jge
out
mov
ss
or
enter
mov
jae
cwtl
xor
mov
mov
insl
les
cmp
adc
add
mov
mov
dec
inc
mov
lods
jp
pop
popa
insb
aam
xor
in
test
jns
or
movsb
daa
aam
out
daa
sub
pop
das
push
mov
js
jmp
frstor
movsl
les
jns
jp
daa
jb
sbb
mov
pop
xor
pop
push
stc
inc
adc
in
cmp
inc
mov
xchg
inc
ds
dec
jp
xchg
stos
pop
mov
jp
cltd
std
aad
dec
push
xor
fwait
xchg
mov
lods
aas
cwtl
sti
jmp
shlb
push
lds
cmp
pop
and
sub
cmp
mov
ja
xor
jecxz
sbb
add
aad
ss
inc
lods
and
mov
inc
cltd
add
inc
test
lds
cmpsl
xor
xor
gs
inc
bound
fwait
test
mov
or
fdivrl
movsl
sti
sbb
mov
push
sub
and
scas
data16
repnz
mov
cmp
adc
mov
xor
sbb
inc
iret
mov
fiadds
xchg
and
or
mov
xchg
cs
xor
scas
jmp
cmp
test
inc
jp
orl
in
or
sbb
sbb
sub
test
dec
add
xor
push
test
das
dec
or
sbb
es
jmp
and
sbb
inc
sub
pusha
jnp
cs
repnz
sbb
jecxz
jge
cmp
lods
shlb
stc
inc
gs
pushf
pusha
jmp
mov
out
insl
ret
stc
pmaddwd
lret
mov
sub
cltd
popf
movsb
ss
xor
pop
fisttpl
mov
int
xchg
sub
repz
xchg
int
fists
xchg
addl
ss
int3
xchg
cli
shll
mov
daa
les
addr16
sub
sti
jg
xor
enter
mov
add
dec
in
sbb
loopne
jo
pop
and
fwait
xor
inc
xchg
push
sar
decb
jle
js
or
mov
or
scas
loopne
xor
xchg
cmpsl
dec
movsl
pop
repnz
cmp
mov
inc
popf
mov
loop
xorl
pop
fisubl
push
in
popa
in
mov
imul
movb
fsubrl
divl
shl
out
mov
lods
mov
out
mov
loop
inc
lock
mov
mov
mov
and
jmp
outsl
repnz
xchg
in
pop
sarb
pop
lahf
push
and
pop
pop
aam
push
enter
repz
sub
mov
cmp
aam
pop
inc
jbe
pop
in
sbb
repnz
fs
fdivs
pop
cmp
in
pop
pop
insl
mov
xchg
xchg
push
ret
cmp
mov
addr16
or
ljmp
dec
push
out
cs
paddq
ret
sbb
sarb
mov
cmpsb
jl
add
xor
aad
sarb
jmp
or
leave
ljmp
mov
xchg
cmp
imul
adc
pop
push
sahf
inc
mov
cmpsl
aam
hlt
jl
xchg
mov
popa
push
cmp
sub
mov
out
inc
and
xor
dec
nop
clc
loop
sbb
fisubrl
and
outsl
cmpb
sbb
adc
cmp
cld
fwait
and
and
xchg
lods
mov
jnp
push
push
lods
es
jns
mov
push
or
in
pop
sbb
call
cmpsb
add
jmp
xor
dec
lret
out
repnz
dec
sbb
adcl
lahf
mov
sbb
mov
outsl
and
cmp
nop
inc
call
cmpsb
add
imul
pop
movsl
pop
divl
dec
test
adc
leave
push
inc
shl
or
pop
ret
outsl
hlt
into
hlt
in
sbb
gs
mov
shlb
movsb
adc
cmpsb
sbb
int3
add
lret
inc
jb
inc
jnp
cmc
test
cmc
je
xchg
and
leave
push
push
mov
je
xchg
xor
into
pushf
and
cld
cmp
js
aad
cmpsb
or
outsb
xchg
aam
mov
es
pop
push
clc
pop
shr
ret
push
inc
jp
loope
adc
mov
clc
int3
loope
mov
adc
orb
je
imul
loopne
jmp
xor
lahf
mov
movsb
lret
xor
in
push
sub
out
inc
pusha
xor
push
or
stos
mov
insl
pop
sub
add
in
dec
sub
out
insb
adc
lea
mov
inc
out
addr16
sub
cmc
mov
mov
inc
out
and
add
add
out
or
mov
out
inc
cmp
bound
lea
jae
out
mov
mov
push
push
rcll
mov
xor
jae
cltd
xchg
lods
rcrb
mov
repnz
add
mov
les
test
test
or
test
idivl
pop
ror
insl
jle
cmp
mov
fsubs
inc
adc
jle
imul
dec
scas
outsl
pop
pop
mov
add
test
xchg
repnz
je
ss
mov
xchg
dec
aaa
ret
loope
imul
or
and
les
pop
out
mov
lock
sar
aaa
xchg
insl
gs
and
ret
inc
movl
leave
jecxz
push
inc
lret
mov
divl
adc
lret
call
imul
lock
xchg
mov
xchg
or
pop
mov
or
movsb
cmp
lret
aas
out
out
das
insl
push
subb
sub
sbb
or
iret
inc
push
xchg
ja
incb
dec
pop
mov
inc
xor
ds
adc
fsub
loopne
mov
pop
sahf
jmp
pop
mov
mov
out
inc
push
dec
sub
xchg
hlt
dec
adc
adcb
pushf
sbb
lret
les
gs
ljmp
mov
enter
hlt
jae
and
aaa
and
mov
lret
imul
iret
out
add
shlb
std
pushf
movsb
jmp
std
xchg
ret
mov
ds
cltd
cmp
xchg
stos
adc
mov
sub
movl
xor
dec
adc
addb
ret
out
cwtl
gs
insl
adc
jp
lock
and
pop
call
testb
ja
loopne
cmp
stc
mov
xchg
mov
push
das
pop
inc
fldcw
nop
cmp
mov
stc
aam
test
lret
add
xchg
cmp
frstor
jns
in
jne
and
in
and
xchg
add
test
stos
or
bswap
ficomps
xchg
scas
push
or
movsb
iret
dec
popf
fisttpl
pop
stc
or
aaa
stos
pushf
repz
pop
jns
lods
cmpsl
sahf
and
sbb
xor
xchg
add
stos
push
mov
popa
pop
sahf
mov
out
mov
dec
mov
jecxz
shll
push
lds
insb
cmc
and
pushf
push
cmc
out
cmpsl
or
and
stos
or
insb
jp
daa
cli
push
and
int
fsub
pop
mov
in
and
or
mov
jge
dec
xor
aaa
aam
mov
subl
enter
inc
call
cli
pop
xor
ficoms
and
into
leave
es
scas
lcall
rcll
mov
scas
psrlq
jns
cmc
hlt
lds
pop
inc
push
push
aaa
push
and
adc
adc
mov
clc
into
fimuls
xchg
jge
imul
or
mov
es
sub
lods
pushf
mov
and
rcll
adc
cmp
fcmovb
add
mov
dec
jmp
pushf
aas
mov
ljmp
pop
push
adc
int
and
mov
sub
mov
loop
lret
lock
dec
movsl
pop
xchg
jg
push
outsl
xchg
jmp
bound
shrl
popf
lods
pop
scas
push
cmp
dec
xor
cld
inc
inc
push
or
mov
lahf
mov
jns
mov
lcall
add
into
pop
popa
dec
pop
loopne
push
xor
mov
add
or
mov
nop
jb
sbb
mov
push
pop
cwtl
push
mov
sar
mov
mov
aad
enter
and
sub
and
push
rcl
push
jno
cmc
mov
call
pop
faddl
ret
push
push
cmp
dec
push
push
sub
or
sbb
lret
insl
inc
daa
rcl
push
loopne
add
lock
adc
mov
and
inc
lods
mov
test
test
jle
adc
gs
ds
ret
ficompl
into
loopne
loope
lret
out
in
fdivs
jp
jbe
jae
push
loope
imul
ret
pop
push
add
mov
push
in
addl
rolb
xor
mov
das
rolb
jl
ret
les
push
js
in
sahf
lret
mov
in
cmp
adc
and
int
dec
pop
or
cmpsb
inc
mov
xor
or
ss
lods
cmp
jecxz
std
aad
xchg
hlt
neg
shll
push
insl
test
loop
dec
js
insb
cs
and
dec
jge
jns
in
adc
or
pop
push
adcb
ss
clc
sub
xchg
aad
stos
lret
test
xor
rol
xchg
and
add
sub
mov
enter
and
push
or
mov
loop,pn
pop
push
inc
das
icebp
arpl
mov
or
sub
and
subl
xor
add
fdivl
roll
mov
test
pop
mov
mov
pop
xlat
fsubs
jo
push
and
rorb
mov
iret
ss
pop
int3
fisttpll
decl
add
inc
xor
loope
inc
adc
jnp
jbe
and
in
mov
cli
inc
cltd
outsl
jne
xor
mov
or
fcmovb
dec
and
mov
sub
xchg
dec
andb
sbb
lods
mov
xchg
jl
mov
sbb
pop
rorl
dec
inc
aam
lret
ret
sub
insb
mov
icebp
pusha
in
mov
add
adc
ficomps
int3
xchg
mov
jbe
or
and
push
cmp
in
cmpsl
mov
ja
cli
dec
ret
ds
cmp
fwait
cld
sahf
fwait
push
cmp
aaa
pop
shl
jecxz
xor
pop
mov
or
xor
out
arpl
or
popa
mov
sti
lret
mov
testb
or
lcall
dec
ja
xor
mov
rorl
sub
mov
pop
pop
mov
shr
out
mov
aas
incl
lret
popa
fildl
push
stos
mov
dec
xorl
xchg
xlat
cmp
add
xchg
cli
mov
pop
cmp
push
cmpsl
push
push
enter
shll
fnstsw
add
mul
cmp
addb
les
out
adc
pop
icebp
lret
add
adc
orb
mov
je
adc
repnz
push
add
movsl
inc
ja
rol
pop
sbb
xor
mov
leave
sbb
adc
adc
mov
mov
sub
popa
cli
in
and
je
pop
mov
lock
addr16
cwtl
pop
ljmp
mov
add
cld
lods
add
scas
repnz
or
and
cmp
cmp
jecxz
es
fnstcw
ja
outsl
mov
aas
das
test
sbb
cwtl
ljmp
enter
pop
jnp
repnz
cs
cmp
push
decb
bound
subb
and
mov
rcrb
jecxz
mov
shrl
data16
add
shlb
adc
mov
cwtl
xor
sahf
xchg
fdivs
sbb
dec
ja
mov
push
lretw
daa
aas
psllq
xor
shl
push
fistpl
jbe
bound
pop
adc
rolb
jle,pn
xchg
lcall
cmp
call
push
aam
cmc
test
inc
aam
mov
into
das
and
jl
or
mov
xlat
movl
adc
and
inc
mov
ljmp
inc
xlat
cmp
jg
aas
jae
mov
jne
mov
out
lcall
cld
mov
mov
out
loopne
loop
cwtl
int3
inc
push
push
jecxz
out
xor
cmc
adc
mov
sbb
cltd
xor
ffree
xchg
clc
pop
and
aas
sbb
xchg
ja
sti
adc
sbb
xchg
ds
and
inc
data16
rcrl
rorl
pop
pop
idivl
out
aad
adc
dec
aam
mov
repz
ficomps
in
sbb
cmp
cld
popa
outsb
sbb
sahf
in
cli
pop
add
lods
xlat
sbb
enter
clc
gs
pop
or
in
dec
sti
mov
fistpl
scas
dec
out
in
xor
mov
dec
cmp
in
out
mov
xor
in
scas
xor
outsl
test
mov
repz
cmp
ret
daa
fdivrp
jle
les
xchg
test
inc
adc
pusha
xchg
je
in
popf
insb
jns
sti
loopne
pop
mov
pop
std
stos
mov
cli
dec
add
xor
cmp
insb
stc
xchg
sbb
pop
xchg
shll
mov
enter
xchg
fnstcw
sub
pop
imul
out
mov
push
sbb
and
fwait
mov
mov
scas
bound
mov
aas
and
bswap
pusha
in
mov
add
mov
mov
xchg
clc
ret
jbe
les
and
mov
fnsave
push
clc
movsb
dec
outsl
jo
jae
aam
in
ret
aad
push
dec
stc
mov
out
xor
xchg
shlb
pop
add
and
js
mov
js
xor
mov
dec
mov
iret
adc
fnstenv
aam
imul
add
insb
fisubrs
or
xor
sbb
cltd
pop
enter
dec
insl
push
inc
sub
pushf
sbb
fistpl
mov
in
add
out
xor
lea
test
mov
xchg
stos
cmp
lds
shr
xchg
gs
imul
dec
xabort
sahf
mov
or
clc
jl
addl
cmp
xor
sub
insb
mov
fwait
lret
iret
sub
push
xor
mov
mov
sbb
cmp
popa
cmpsl
adc
cld
stos
jl
pop
icebp
js
dec
cltd
sub
lds
jbe
dec
sbb
sub
and
sbb
xor
pop
dec
jle
fwait
addr16
mov
xchg
call
push
daa
movsl
sbb
sti
lods
jge
loop
outsl
mov
sahf
push
mov
cmp
add
repnz
addr16
lock
cmp
adc
xchg
push
sahf
lods
nop
or
lret
fs
les
mov
sub
test
stos
or
cld
mov
adc
sti
les
mov
jnp
or
fsubp
adc
mov
add
rorb
sbb
mov
addr16
stos
push
dec
push
dec
mov
pusha
loop
adc
push
nop
xchg
pop
xlat
push
pushf
inc
in
in
adc
jp
cwtl
mov
lods
dec
hlt
addr16
popf
data16
lds
push
inc
pop
ret
cmp
xor
mov
xorl
cmp
cltd
clc
push
pop
retw
inc
sub
mov
xor
xor
orl
jl
daa
push
lock
jns
cmp
lds
cmp
sub
pusha
xor
mov
push
mov
sbb
push
scas
adc
sub
mov
aad
mov
in
stos
test
out
inc
stc
lea
inc
ja
or
jge
dec
jmp
add
mov
lock
sbbl
xchg
repz
mov
mov
push
mov
mov
stos
jb
cwtl
packssdw
mov
inc
jl
je
mov
std
push
add
adc
iret
inc
sbb
dec
jns
lods
sarb
add
inc
test
add
push
fucom
nop
test
lds
pop
inc
ret
push
loop
leave
push
fucomip
lock
movsb
jecxz
cmp
aaa
xlat
cmpl
fisttps
mov
dec
loopne
iret
aas
movsb
sbb
and
rol
cmp
mov
rol
xchg
jae
in
xchg
insl
jb
cmp
inc
or
or
dec
jae
out
or
sbb
and
rolb
mov
pop
cmpsb
mov
in
pop
int3
sub
lock
and
enter
pop
test
pop
dec
je
dec
mov
shl
push
add
and
mov
push
cmp
add
popa
ljmp
mov
stos
sbbl
push
mov
dec
jbe
inc
cmp
push
sbb
mov
in
hlt
std
mov
cmp
int3
pop
ret
lcall
out
push
lret
inc
mov
movsb
lds
in
mov
push
hlt
aaa
in
cmp
inc
push
je
inc
pop
imul
adc
xchg
movsl
popf
and
xchg
cld
xor
mov
ror
pop
sub
icebp
push
popa
ja
inc
lret
iret
pushl
testl
imul
sbb
inc
pop
or
mov
arpl
icebp
or
dec
faddl
scas
mov
popf
lahf
pop
and
push
shll
adc
mov
nop
mov
push
adc
jbe
stos
add
adc
arpl
repnz
fs
scas
js
gs
pop
push
jb
mov
scas
scas
lock
pop
clc
addl
xor
repz
adc
lods
insl
lods
mov
popa
sahf
pop
cmp
cmp
xor
cmp
and
insb
daa
sub
cmpsb
das
test
popa
in
push
inc
in
jle
mov
shrb
jecxz
aaa
push
xchg
shr
xchg
mov
fwait
mov
fdivp
mov
in
dec
enter
xchg
push
pop
sub
inc
pop
int3
rorb
clc
cs
stos
sti
pop
cmpsl
mov
xor
rcrl
jne
pop
xor
out
mov
stc
adc
jbe
xchg
frstor
pop
adc
cmpsb
or
jl
sbb
mov
jl
pop
jle
xchg
cmc
lds
imul
mov
mov
outsb
pusha
aam
sub
shll
push
outsb
mov
cld
xor
lea
repnz
cmpb
xor
adc
mov
stos
in
imul
jb
sti
les
das
or
iret
nop
rcr
push
add
scas
xchg
sbb
imul
pop
mov
inc
nop
pop
fnstcw
jbe
push
ds
sub
xor
dec
xor
in
enter
lcall
jne
cmc
cmp
mov
leave
xchg
sub
mov
sub
movsb
push
pop
stos
pop
dec
and
mov
xchg
jb
addb
in
das
or
dec
lods
mov
lret
xor
testb
rcll
dec
mov
repnz
dec
out
iret
inc
jne
imul
pop
out
setl
and
daa
sbb
adc
cmp
mov
out
lock
mov
scas
inc
cmp
mov
pop
dec
push
bound
pop
fmul
xchg
lea
mov
jns
rolb
lods
xchg
mov
inc
testb
mov
ficompl
in
add
hlt
pop
popl
adc
addr16
or
xchg
xchg
push
hlt
pop
pop
push
cmpb
sbb
push
iret
pop
gs
mov
push
repnz
jmp
out
in
mov
or
mov
repz
cmp
lcall
inc
out
out
add
push
in
dec
out
lods
out
mov
in
add
xor
enter
or
mov
adc
test
insl
js
pop
inc
test
test
xchg
mov
daa
scas
push
push
sbb
add
out
cmp
inc
cmp
repz
or
out
lcall
std
je
mov
sbb
xchg
cltd
xlat
insb
pusha
jge
xchg
xchg
roll
inc
jle
xchg
loope
push
and
push
jno
and
jmp
adcl
cmovno
adc
sub
push
mov
jo
test
sub
mov
dec
gs
lcall
xchg
ss
add
jbe
jle
pusha
cmc
jl
hlt
mov
xchg
cmp
dec
jbe
mov
rol
inc
jge
and
mov
xchg
xchg
jg
xchg
add
push
imul
movsw
add
sub
fsubl
lock
pusha
mov
lds
movsb
ficompl
push
cmp
dec
sbb
test
fldl
in
rcll
inc
xchg
mov
push
ja
sub
in
xchg
ds
fildl
pop
divl
cmp
push
divl
icebp
ja
movsl
andl
add
cltd
fbld
cmpsb
pop
movsl
fidivs
cli
adc
popa
clc
inc
stos
mov
mov
sti
pop
movsb
xor
lahf
xchg
or
sbb
cld
mov
lcall
inc
and
mov
imul
lds
gs
adc
inc
aad
fwait
inc
fbld
jae
pop
imul
out
mov
fnsave
xor
or
stc
or
cli
cwtl
movsb
outsl
mov
push
or
jecxz,pn
sbb
dec
addr16
sub
std
stos
xor
mov
mov
mov
rol
inc
outsl
jp
lcall
mov
enter
mov
dec
mov
pop
call
sahf
popf
mov
pop
fists
cli
xchg
mov
stc
std
ds
cmp
ss
mov
out
xor
rorl
dec
test
je
and
shll
in
imul
sbb
adc
xlat
sti
or
jno
shr
inc
add
in
lcall
pop
pop
pop
das
mov
je
pop
sub
adc
and
inc
sahf
lret
test
jnp
popa
fwait
adc
sbb
or
aad
push
test
inc
addr16
push
mov
sub
shll
fsubr
inc
mov
pop
lret
enter
jae
lret
adc
inc
fidivrl
movsl
inc
ss
jle
rcrb
lods
loopne
dec
xor
mov
testl
xchg
dec
in
insb
aas
xor
xchg
ret
sbb
or
or
mov
mov
mov
xor
and
adc
push
xchg
jne
fisubl
push
es
rcrl
jne
outsl
ret
test
aam
ss
ret
mov
repz
sbb
jg
and
insb
cmp
mov
xchg
inc
lock
ds
inc
xchg
je
push
jo
sbb
into
and
enter
or
stos
mov
inc
lret
js
dec
push
sahf
call
add
jns
out
in
fbstp
jnp
jne
sar
jns
daa
ret
xlat
out
and
popa
sbb
fistl
add
push
adc
dec
fcmovnu
dec
daa
push
pusha
out
ret
or
sbb
adc
mov
xor
lods
lahf
dec
xchg
cld
inc
xor
mov
movsb
ss
sub
and
sub
or
cmpb
push
pop
jp
scas
xchg
lods
lods
jl
fisttpl
dec
loop
push
sub
xor
outsb
mov
xor
sbb
fiadds
xor
sub
cli
mov
ficoms
iret
push
or
popf
push
scas
shr
int
pop
adc
int
dec
cli
dec
test
dec
lds
adcb
outsl
movsl
xor
jp
repnz
in
sub
lock
push
movsb
lahf
subb
hlt
push
stos
fistps
or
mov
pop
fwait
xchg
aas
xchg
fmulp
mov
and
ljmp
or
pop
inc
gs
imul
outsl
clc
xchg
insl
aaa
gs
mov
popa
pop
rclb
cmpsb
movb
sbb
fwait
sti
inc
outsb
pop
inc
xor
outsb
jecxz
sub
dec
xor
sub
and
mov
xchg
movsb
test
in
pusha
fisttps
mov
inc
in
mov
sarb
xchg
scas
pusha
ds
mov
push
aaa
xchg
push
sbb
loopne
sub
rorb
dec
jns
ret
and
mov
into
aas
mov
sbb
je
mov
dec
push
cmpl
push
mov
scas
jecxz
inc
fidivrl
inc
out
mov
negb
mov
or
sbbl
mov
int
add
cmp
xlat
adcb
xchg
sahf
sub
outsl
rcl
test
mov
fldt
sbb
or
ret
cmp
ljmp
sbb
fidivs
hlt
dec
outsb
arpl
jbe
int
dec
cmp
mov
adc
in
inc
pop
pusha
cmc
mov
lea
shlb
cs
inc
inc
cmp
dec
mov
shll
cld
jae
pusha
ror
lret
xor
sub
dec
cmp
pushf
imul
mov
add
adc
icebp
mov
dec
call
push
push
ja
jbe
outsl
sub
leave
sbb
mov
inc
push
dec
loop
and
mov
enter
cmpsb
mov
and
pop
dec
faddl
stos
push
mov
scas
ret
xor
hlt
out
mov
adcl
xchg
xchg
add
in
out
lods
cmp
loop
xchg
xor
and
shrl
dec
fisubrs
cmp
adc
xchg
pop
mov
mov
add
ja
fsubrs
fstps
inc
mov
cltd
aaa
pop
bound
mov
inc
pop
xchg
sbb
pop
ficoml
dec
inc
loope
repz
cmpsl
popa
das
pop
push
stos
sahf
adc
movb
enter
xor
ja
mov
scas
mov
addb
push
cltd
sub
rclb
jo
xor
sub
jmp
cmp
sbb
imul
push
lahf
shll
push
ljmp
pushf
hlt
or
cltd
pop
mov
arpl
dec
mov
test
cmpsb
mov
test
lods
push
fs
jns
jle
inc
cmpsl
adc
jbe
cltd
xchg
jle
adc
int
sbb
jns
in
jmp
lock
sub
lcall
cmp
cli
mov
push
pusha
mov
je
lock
ss
mov
arpl
lods
sub
bound
imul
mov
lea
das
push
int3
mov
cmpsb
rclb
test
mov
test
das
xor
stos
jb
adc
and
stos
mov
and
mov
dec
jno
jbe
jle
sbb
or
pop
cmc
pop
lahf
xor
jl
leave
divl
in
dec
or
aaa
scas
push
sahf
push
or
jmp
jb
adc
cmp
test
rol
js
xor
clc
mov
and
jo
push
fldenv
xchg
lret
cmp
jmp
scas
dec
out
xlat
dec
mov
enter
aas
iret
into
jbe
push
arpl
orb
andb
sti
mov
negb
pop
rcl
loope
xchg
loopne
lret
imul
and
jle
in
fdivrs
jmp
sahf
jae
or
mov
xchg
push
test
fistl
mov
clc
xchg
das
shl
fucomi
cld
inc
cmp
dec
pusha
jl
icebp
loopne
dec
pushf
xchg
cli
mov
in
push
sbb
movsb
aas
mov
mov
jg
cmpsb
xor
imul
fsubs
aad
pop
pushl
cmp
lcall
adc
dec
ljmp
test
in
add
inc
dec
fstpl
into
cli
rclb
fidivrs
and
imul
loope
xchg
lcall
stos
int3
outsl
mov
pop
lods
add
jge
xor
xchg
mov
loop
les
fistps
sub
mov
add
test
lcall
out
xchg
mov
shlb
fcoms
movsb
dec
pop
mov
or
aad
fucom
push
xchg
sub
mov
cmp
xchg
cmp
cltd
and
adc
movb
adc
in
test
mov
adc
mov
mov
sub
cmpsl
rorl
imul
inc
jno
jne
stc
jbe
out
xor
popa
add
pop
shl
mov
sub
mov
xor
into
test
dec
sbb
and
pop
mov
insl
mov
cwtl
pop
stc
mov
arpl
cwtl
inc
cmpb
xor
les
out
add
mov
aam
xchg
adc
clc
in
xchg
shlb
mov
cwtl
push
push
iret
xchg
insl
mov
lea
xor
cmpsb
push
add
movsb
pop
mov
dec
ss
sub
rol
mov
jno
sbb
lods
sti
xchg
inc
arpl
clc
pusha
rorl
inc
lret
sub
adc
or
xor
lods
add
out
pop
add
int3
mov
jne
and
pop
push
repz
imul
jle
leave
inc
sub
iret
stos
aad
cmp
outsl
jbe
scas
pop
and
xchg
pop
popf
mov
sub
addr16
mov
outsb
jo
push
mov
push
fs
arpl
cmc
ret
and
sbb
lahf
hlt
call
mov
or
popa
push
into
mov
or
sbb
or
in
rorb
cltd
sbb
lds
mov
cmpsl
sub
cmc
xchg
ljmp
cmp
mov
push
mov
in
mov
mov
lcall
mov
xlat
dec
or
aam
mov
aad
sub
das
jae
test
mov
pop
or
shll
cs
cltd
js
jns
imul
mov
sub
aaa
data16
xor
pop
pop
test
xor
push
mov
out
shrb
mov
jmp
push
adc
out
aad
xor
push
xchg
mov
jbe
fsubrs
sbb
mov
cmp
leave
fwait
lret
fdiv
repnz
ss
sub
stos
and
test
sub
out
jbe
lods
iret
lret
xchg
add
jle
xchg
aam
pop
inc
dec
xchg
fadd
fisubrl
inc
sub
pop
subl
movsl
mov
sbb
xchg
xchg
inc
lds
aad
dec
or
ror
aaa
push
test
pusha
push
into
mov
and
mov
sbb
pop
lahf
dec
std
xor
sub
and
movsl
jnp
mov
aaa
ss
push
xchg
mov
adc
icebp
pusha
pop
cwtl
jo
mov
sbbb
scas
imulb
add
vpunpckhbw
insb
mov
jecxz
repz
push
in
mov
cmpb
sbb
cmpsl
jae
adc
xlat
in
jecxz
lock
cmc
popf
lock
and
sbb
xor
ja
mov
dec
lods
mov
addr16
and
cmc
jp
jnp
leave
lods
cwtl
add
hlt
inc
std
std
imul
out
sub
or
hlt
push
repnz
push
add
fs
stos
out
cli
popf
pop
pop
cmpsb
fst
push
cmp
push
dec
sti
mov
mov
mov
cmpsb
mov
xchg
sbb
dec
inc
xchg
adc
mov
mov
stos
movsl
xlat
and
jb
dec
and
mov
and
jno
sub
nop
lock
xor
insl
leave
ds
dec
inc
push
pop
andl
or
dec
sbb
movsl
adcl
cld
fs
mov
nop
fcoms
sbb
filds
test
add
cs
scas
mov
sbb
xor
into
mov
cmp
cmp
mov
push
xor
mov
aaa
lods
stc
shl
push
fstp
lds
in
inc
mov
mov
daa
mul
fdivrp
hlt
cmp
daa
xor
repz
outsb
jb
imul
fucomi
movb
icebp
sub
fstl
enter
in
push
int
mov
sbb
adc
mov
cs
push
cmpl
cmpsl
xchg
pop
adc
mov
mov
enter
jecxz
jbe
rcr
sahf
xor
sahf
fsts
mov
iret
xchg
fwait
sbb
fsubrl
fcoms
inc
jl
add
pusha
or
pop
adc
ljmp
pop
stos
shlb
js
cmp
sbb
arpl
jnp
dec
js
movsl
sub
inc
lods
jns,pn
add
sbb
test
test
sbb
fnstcw
push
jae
cmpl
jne
cltd
push
repz
lea
inc
inc
xchg
aaa
inc
mov
je
dec
pop
std
mov
mov
cmp
lea
jo
je
jno
mov
call
js
adc
cmp
lds
gs
cmpsl
daa
or
xchg
les
movsl
pusha
rcrb
and
rorl
jb
in
dec
pushf
xor
psraw
idivl
inc
fs
cmp
enter
out
ds
sub
inc
dec
pop
insl
shl
push
fstpl
insb
mov
dec
lcall
add
inc
jge
cmp
and
adc
lahf
sbb
stos
es
jmp
pop
xorl
fcmovne
jg
push
leave
xor
in
cmpsb
dec
enter
andb
mov
mov
mov
inc
fcomp
push
inc
add
pop
scas
arpl
jno
imul
lock
iret
push
inc
repz
out
adc
xor
mov
dec
cmp
imul
cmp
dec
sbb
rcll
fcoms
jbe
mov
add
mov
add
bound
push
pop
mov
adc
and
scas
push
es
lahf
ds
mov
pop
push
adc
orl
ret
out
fiadds
mov
imul
and
jmp
or
adc
in
pop
ds
in
mov
cmp
mov
dec
subl
jb
aad
jne
sbb
ret
shr
inc
or
xchg
cs
in
ja
shl
jb
or
sarl
scas
call
sbb
push
roll
or
addb
sub
mov
dec
adc
push
cmp
mov
push
loope
jecxz
dec
fdivr
jne
enter
lods
or
fdivl
xlat
fildl
insl
and
sbb
sbb
mov
lea
and
add
fs
lods
mov
loope
add
in
ja
xor
out
leave
mov
sbb
fnstsw
and
cwtl
push
cmp
pusha
mov
loope
dec
int
push
aaa
dec
int3
ljmp
daa
test
pop
dec
fnstsw
ja
lret
sbb
or
xor
addr16
imul
push
ljmp
dec
cs
adc
pop
mov
jnp
or
cmpsl
jo
movsl
cmp
push
mov
push
std
shl
cmp
stos
cmpsb
fildl
xchg
jns
dec
adcl
pop
mov
xchg
fmuls
dec
shrb
xchg
or
cmp
ret
in
jne
xchg
mov
loopne
cmp
aas
push
imul
mov
mov
jge
dec
jge
xor
dec
xchg
or
sbb
rorb
xor
push
jb
xor
add
mov
jnp
ja
lds
jne
cmp
adc
lods
mov
sbb
inc
cmp
sti
test
xchg
or
inc
sti
movsb
jne
add
ret
or
aad
push
mov
loop
lret
ja
dec
clc
in
mov
sub
outsb
xor
adc
std
imul
xchg
or
mov
outsb
mov
das
pushf
clc
pop
inc
lcall
pusha
push
dec
call
enter
pop
fistl
and
sbb
fimuls
lds
into
push
mov
std
inc
mov
mov
inc
in
lcall
pop
lret
out
lahf
xor
fbld
sub
ucomiss
cmpsl
cli
data16
mov
data16
push
mov
xlat
sub
ljmp
imul
jp
pop
or
rcrl
loop
int
pushf
jnp
xor
lods
pop
mov
ret
add
fnstcw
movsl
mov
jne
repz
dec
data16
ret
adc
sbb
inc
clc
mull
push
xchg
mov
loope
jmp
sub
pop
xchg
shr
cmp
jecxz
jle
lea
sbb
fidivrs
popf
add
cli
cmp
dec
push
shlb
lret
pop
xor
jo
mov
push
js
adc
call
jp
into
sub
pop
mov
dec
out
xor
daa
xor
fistps
pop
filds
sub
stc
out
rclb
fimull
int
pusha
lods
push
addr16
aam
push
fimull
adc
andb
lods
mov
fbld
fwait
aam
nop
ret
jle
and
std
xor
enter
inc
jg
in
iret
test
inc
adc
pop
xor
push
gs
call
or
aam
jne
inc
les
gs
inc
sbb
ficomps
mov
pusha
call
inc
cmp
sbb
mov
xchg
sarl
mov
pusha
jle
xchg
sarl
xchg
lods
cmp
movsl
adc
mov
inc
addr16
xchg
jge
daa
mov
mov
mov
push
cld
imul
or
cmc
mov
imulb
test
sub
hlt
sbb
test
dec
mov
pop
stos
cmpsl
andb
push
mov
shlb
xchg
xchg
xor
add
sbb
pop
push
mov
inc
test
cwtl
pop
push
push
rorb
pop
xchg
cmpsb
aaa
movsl
sbb
sub
roll
loopne
inc
push
fninit
jp
cmp
lahf
adc
paddusw
pop
in
loope
sahf
je
cmp
mov
and
mov
and
mov
jl
jp
jbe
arpl
cs
dec
fcoml
cmpb
ss
or
into
xchg
sahf
xor
aam
jae
dec
fidivrs
push
inc
std
incl
pop
movsl
xor
arpl
sbb
movsl
movsb
ret
push
push
cmp
jg
mov
or
cld
hlt
jo
fisubrl
repnz
jns
out
add
mov
aaa
add
and
jno
mov
pushf
adc
in
mov
test
push
lcall
dec
sarb
mov
push
jg
notl
repz
mov
les
dec
int3
mov
mov
lea
xor
roll
mov
and
adc
inc
rcll
xchg
cmpl
sbb
ljmp
xchg
jle
pusha
repz
or
xor
lock
cmp
add
jp
mov
mov
mov
fistpll
cmc
rorb
ja
test
clc
into
push
xchg
jno
icebp
xor
inc
adc
xor
inc
movsl
push
ljmp
add
inc
and
push
movsb
ja
hlt
daa
pusha
std
outsb
add
inc
mov
std
push
xchg
lahf
add
inc
xchg
mov
cli
inc
ljmp
inc
push
mov
sbb
mov
dec
fdivr
stos
xor
mov
jg
iret
cwtl
rorl
xor
dec
std
shl
xor
cltd
mov
inc
xchg
out
or
lods
mov
jg
and
mov
pop
jmp
orb
test
and
sti
ja
bound
js
sbb
jo
aad
mov
push
inc
into
stos
hlt
jns
in
jne
cld
cmp
cmpsb
jno
xchg
dec
iret
dec
cmp
and
fcompl
stos
repz
xorb
int3
ljmp
pop
in
imul
arpl
es
pop
dec
inc
xchg
mov
mov
xor
stos
in
movl
das
adc
roll
lods
mov
or
mov
xchg
push
xchg
enter
inc
jae
xor
inc
leave
test
pop
out
xchg
xor
add
mov
cmp
cmp
fs
lods
mov
imul
xchg
push
xchg
lcall
cmc
xchg
out
dec
mov
js
dec
lock
aas
cmp
sbb
stos
iret
sbb
ret
and
jne
mov
lcall
mov
repnz
popa
jns
out
push
push
nop
xchg
addr16
in
mov
add
dec
pop
loop
aaa
cli
popf
xchg
addl
mov
pop
into
mov
mov
cmp
jo
bound
mov
sub
adc
repz
ja
out
mov
js
push
pop
mov
or
or
arpl
xor
lods
fdivrs
adc
xor
adc
xchg
cli
cmpsl
stos
or
cwtl
scas
repnz
stc
incb
inc
js
mov
jg
or
pop
and
ds
pusha
mov
pop
mov
add
and
adc
adc
insb
xor
push
or
mov
mov
pop
cltd
inc
enter
mov
sbb
jecxz
hlt
inc
cmc
add
sbb
jle
in
sub
scas
push
fsubrs
mov
mov
xor
adc
stos
inc
jb
ljmp
cmp
dec
inc
fdivr
ret
pop
cld
int
outsl
shrl
jno
cmpsl
stc
roll
aaa
sbb
mov
arpl
mov
adc
and
sahf
xchg
into
jmp
mov
clc
insb
aaa
out
jmp
sbb
and
arpl
pop
mov
push
scas
mov
push
inc
iret
cltd
push
fldcw
popa
test
mov
rclb
sbb
stos
fmull
outsl
or
add
dec
mov
inc
hlt
pop
add
movsl
and
jno
movsb
sbb
fsub
stc
mov
push
dec
lcall
and
add
inc
pop
xor
lods
inc
pop
jl
je
aaa
cmp
xchg
jae
mov
fwait
cs
ret
jg
movsl
xchg
push
xchg
dec
ja
mov
fbstp
je
mov
sbb
mov
stos
sbb
add
push
mov
add
repz
cmp
cmp
lcall
inc
adc
das
xchg
fs
mov
call
or
pop
pop
mov
xor
mov
bound
ret
mov
aad
fidivrs
pmaddwd
aaa
out
adc
inc
xchg
mov
orb
adc
rcrl
push
lcall
ja
xchg
cmp
xchg
in
pop
jbe
pop
inc
sbbl
xor
inc
fildll
jbe
call
addr16
js
adc
cmp
sub
out
mov
xor
xorb
movsb
mov
test
mov
test
xor
or
xor
cmp
lcall
rclb
out
xchg
xchg
je
or
and
js
imul
pop
adcb
stos
shrb
cmp
fcmovne
push
mov
sub
pop
adc
fwait
sbb
mov
call
jnp
mov
mov
sub
pop
rcrb
out
and
in
pop
ficomps
cmp
jne
jns
xchg
jne
add
cwtl
das
lahf
mov
inc
jno
xor
popa
fs
mov
mov
jmp
jecxz
test
imul
inc
popf
or
or
jecxz,pn
rcll
dec
mov
jl
mov
xchg
sbb
cltd
lahf
mov
test
sti
and
test
dec
lahf
mov
pop
pop
out
cltd
mov
pushf
out
repz
dec
xchg
push
add
inc
lods
pushf
xor
out
popa
leave
inc
repz
mov
xlat
dec
ljmp
push
mov
dec
pop
stos
jp
pushf
nop
in
dec
add
cmpsb
adc
push
jle
add
and
mov
xor
push
pop
adc
cmp
repz
adc
gs
jmp
pop
cli
std
mov
neg
sub
mov
data16
sub
push
pop
outsb
mov
jmp
push
arpl
xchg
add
lods
scas
adc
outsl
adc
sbb
pop
add
loop
xor
adc
push
int
or
das
nop
scas
insb
xor
cmp
xchg
aaa
xchg
inc
xor
lea
xor
inc
outsb
std
cmc
xchg
clc
cmpsl
push
cmp
sub
je
repz
cmp
adc
mov
movsl
jbe
fsubrp
push
lds
jnp
mov
dec
inc
push
dec
in
sub
inc
or
nop
psubsw
mov
insb
cmp
dec
pop
mov
out
xor
iret
mov
add
jae
cli
in
jbe
xchg
popa
movsl
inc
sbbb
lret
out
mov
fstp
mov
push
xchg
lret
xor
xchg
dec
sbb
sub
jle
inc
mov
jge
scas
mov
pop
jbe
pop
sbb
xchg
pop
sbb
ds
sub
es
shlb
xlat
cmp
xor
push
shlb
arpl
adc
sbb
sti
mov
lcall
rorl
das
test
xor
push
xchg
adc
jbe
adc
xor
dec
ljmp
pop
or
out
jle
sbb
daa
or
jae
mov
cmp
push
add
dec
sbb
dec
jl
cmp
jl
or
cmp
or
cld
dec
addr16
mov
not
sbb
add
xchg
pop
loopne
or
fstl
jo
xchg
pop
fstpl
lea
and
test
jle
inc
aaa
sub
inc
daa
int3
push
inc
pop
lods
inc
push
cmpsl
pop
aaa
adc
sub
pop
rcrb
jno
lock
push
inc
mov
jbe
lea
nop
adc
pop
pop
cmpsb
lcall
gs
push
sbbl
mov
movsb
aaa
mov
stc
jg
sbb
cmp
add
push
lock
cli
inc
insl
cmp
jecxz
xor
xor
aaa
dec
xchg
aaa
jmp
ds
or
pop
loop
and
mov
addb
es
ljmp
js
iret
jb
cmp
subl
jb
aaa
cltd
xchg
sub
aaa
jnp
mov
sbb
mov
and
mov
popa
cmpl
repz
inc
jo
mov
cwtl
and
push
mov
jp
orl
jle
lret
repnz
jp
loope
xor
mov
es
xchg
push
jne
mov
inc
xchg
es
inc
xchg
lds
cwtl
sbb
fisubrl
pusha
push
add
jno
sahf
notl
pop
cwtl
jo
push
lock
push
jge
pusha
shl
push
inc
xor
push
in
sahf
jmp
or
jmp
cmpsb
sarl
das
fisttps
push
das
dec
and
sbb
repz
and
std
push
popf
pop
jne
jl
adc
sti
push
adc
pop
je
iret
xchg
aas
lret
dec
popf
adc
inc
inc
daa
pop
cmp
xor
mov
nop
jb
mov
nop
dec
cmp
enter
std
xor
or
pop
ficompl
xchg
xor
imull
jne
insb
pop
filds
scas
repnz
mov
mov
sub
cli
daa
mov
ljmp
mov
ljmp
sarl
test
push
push
push
pushf
mov
cmpsb
and
in
cld
xchg
jmp
push
xchg
enter
mov
in
adc
mov
sbb
jnp
sbbl
adc
lds
push
pop
out
jno
pop
insb
adc
push
pop
imul
les
mov
ds
movsl
call
loop
aam
mov
inc
push
push
dec
nop
adc
sbbl
hlt
fildl
rorl
in
faddl
xlat
inc
enter
cmpb
push
or
add
or
sbb
jo
pop
inc
gs
clc
loop
inc
das
loope
push
dec
cld
mov
cmp
scas
pop
sub
popa
repnz
sbb
outsb
psubsb
xchg
mov
sahf
andl
push
int
or
and
jg
pushf
in
and
push
pop
iret
sti
jns
jge
out
mov
cmc
sahf
sarb
movsl
gs
daa
lcall
int
jge
fiaddl
icebp
ljmp
call
cmp
pop
rcll
dec
mov
dec
pop
enter
add
push
mov
pop
add
dec
jae
pushf
ror
push
jb
cmp
adc
jmp
push
mov
jae
mov
repz
lcall
xchg
xchg
cmp
and
out
arpl
sub
popf
or
insb
add
notb
out
iret
ret
pop
loopne
lret
int
jp
shl
sbb
xchg
imul
sbb
adc
sarb
dec
mov
jl
orl
xchg
sahf
fdivrs
cmp
popa
add
outsb
inc
std
lods
mov
cmp
xchg
lods
cmp
xchg
arpl
adc
rcrb
in
mov
div
aaa
iret
xor
and
sub
push
out
cmp
ret
cwtl
jmp
add
or
jecxz
jno
pop
push
fwait
lea
sub
pusha
data16
jecxz
dec
cwtl
sub
push
data16
mov
push
bnd
mov
jno
adc
mov
ja
fwait
rcrb
inc
jge
cltd
xor
pop
fcmovnbe
test
popf
cwtl
xchg
pop
dec
scas
push
ss
std
jno
cltd
les
movsl
jbe
test
pop
es
sbb
pushf
movb
mov
mov
popa
bswap
and
or
stos
or
pop
stos
ss
mov
dec
loop
test
mov
inc
jb
fadds
xchg
pop
push
outsb
stos
popf
fidivs
pusha
cmc
fsts
lds
inc
clc
mov
pop
in
jp
sub
xor
sub
adc
mov
push
cld
pop
dec
shrb
es
xchg
xor
mov
bsf
fldcw
icebp
adc
and
int3
rcr
call
out
pop
dec
jl
or
inc
scas
rolb
frstor
cwtl
mov
mov
sti
out
sub
hlt
data16
pop
jp
out
loopne
sbb
push
xchg
push
dec
test
cmpl
mov
pop
mov
hlt
add
or
pop
jnp
dec
aam
adc
out
dec
or
out
cwtl
addr16
rorl
mov
cld
pop
and
sbb
pop
call
sbb
fwait
adc
int3
push
push
push
mov
adc
mov
in
mov
mov
in
jb
ds
fmul
cmp
enter
and
loope
sbb
mov
xorl
mov
imul
jb
rclb
out
fiaddl
pop
ud0
mov
pop
jb
dec
js
jmp
lods
inc
pop
mov
lock
test
clc
sbb
inc
mov
sub
leave
sbb
sub
inc
push
jbe
int
lds
push
je
mov
xor
outsl
adc
ss
scas
jbe
jbe
out
std
push
xchg
sbb
lods
leave
shll
lods
cmp
cmc
adc
or
mov
push
xlat
loop
icebp
inc
dec
aas
pop
lods
rclb
lar
push
out
push
pop
add
jnp
xor
mov
cmp
mov
mov
pushf
mov
stos
dec
jns
rorl
loope
sarl
jno
jle
add
xchg
sbb
xchg
inc
dec
jno
bound
shrb
jno
fidivrs
es
in
mov
xchg
mov
out
test
js
fidivrl
in
mov
sahf
lods
mov
stc
ja
dec
outsb
testb
outsb
ss
orb
mov
cld
clc
sub
sub
fcomps
loop
ja
mov
or
leave
idiv
mov
dec
lods
jno
pop
dec
movsl
loopne
lds
xchg
mov
push
pop
mov
cmc
add
or
xor
loop
aam
cwtl
cs
sahf
popa
rolb
jae
inc
daa
scas
test
bound
jle
push
aaa
lcall
in
or
pop
push
int3
sbb
insl
scas
add
lret
and
jbe
jg
cmpsb
aad
push
add
and
icebp
fcoml
outsl
sub
xor
sbb
jecxz
pop
sub
add
aam
dec
pop
jl,pn
mulps
adc
mov
mov
mov
pop
mov
fst
repz
sbb
clc
dec
lds
inc
js
imul
nop
in
call
icebp
cli
fstps
or
mov
push
nop
in
bound
sub
dec
test
add
jbe
repz
cmp
in
cmp
jne
or
mov
cmp
sahf
inc
add
lret
pop
clc
xchg
fimuls
jle
lods
js
mov
rcl
jb
sub
in
leave
out
aas
nop
cmp
addb
pop
adc
jae
or
inc
cmp
scas
push
and
fstpt
int3
in
inc
subb
clc
add
cmp
ljmp
lods
aaa
fiaddl
divb
loope
adc
std
cmpl
mov
fldcw
push
in
clc
imul
rcll
mov
push
ret
xchg
or
xor
push
movsl
mov
ret
daa
stc
jns
pop
add
xchg
lods
and
js
loope
mov
out
and
aad
pop
loop
in
cs
in
pop
mov
in
and
sub
pushf
sub
arpl
cmpsb
xor
sahf
mov
cmp
push
ja
dec
nop
fists
insl
push
movsb
loope
push
lcall
sbb
xlat
daa
outsb
lcall
cmp
rclb
add
loopne
push
repz
rolb
sbb
cmovno
jge
rcll
jno
mov
fsubl
cs
mov
xlat
imul
lods
aas
mov
sahf
in
and
int3
pop
jnp
cmc
adc
faddl
pop
fld
testb
rorb
sti
aas
cmp
lock
dec
imul
xorl
or
adc
js
dec
and
clc
mov
pop
or
xor
es
aad
cmp
lods
dec
sbb
imull
jge
or
xchg
bound
add
or
idivb
mov
adcl
dec
dec
jl
pop
imul
out
xchg
imul
jae
mov
and
xchg
stc
out
cmc
scas
fs
dec
jp
icebp
mov
iret
leave
mov
das
sbb
mov
lods
adc
inc
movsl
lcall
dec
fs
rolb
test
sub
mov
jbe
add
adc
and
mov
addr16
das
jo
rol
cmp
mov
sbb
mov
jl
jp
idiv
add
pop
cmp
leave
adc
adc
outsl
test
jns
pop
mov
fwait
fidivrl
sbb
xchg
fsubl
inc
sub
push
inc
divb
dec
cmpsl
addl
mov
mov
test
mov
shlb
stos
outsl
sub
push
lock
mov
sub
loopne
into
jbe
int
xor
push
in
outsb
and
aad
pushf
add
inc
mov
xor
inc
xchg
call
test
stos
lds
dec
int
ja
lods
push
ss
pop
das
cld
nop
fs
cwtl
enter
sub
addr16
or
lcall
lcall
cmp
shll
fcoml
jmp
cmp
iret
jp
pop
mov
imul
mov
sub
mov
into
jmp
fsubrs
pop
mov
pushf
add
popf
int
jmp
xor
cs
cld
mov
enter
jno
sbb
das
and
test
pop
das
fldenv
push
ljmp
imull
out
pusha
fwait
adc
and
dec
cmp
cmp
cmpsb
push
lcall
cmc
imul
pop
insb
gs
cmpsb
inc
pslld
incb
leave
push
mov
pop
dec
mov
ja
inc
icebp
and
add
xorl
xchg
fcmove
jo
mov
or
push
rorb
enter
lock
clc
roll
inc
xlat
sbb
out
ret
sbbl
jp
sub
mov
outsl
inc
sbb
imul
outsl
arpl
pop
ficompl
out
andb
out
pop
mov
xlat
pop
push
daa
ret
mov
and
jae
ja
je
and
pop
aaa
xchg
mov
inc
lds
sub
fs
fidivrl
std
mov
popa
push
aad
xchg
xor
mov
data16
sbb
mov
mov
adc
arpl
cmpsl
popa
pushf
mov
xor
gs
pop
arpl
and
ljmp
fdivrs
leave
push
xchg
mov
mov
dec
and
xor
xlat
fildll
mov
xchg
and
idivl
push
sub
dec
cmp
mov
out
xchg
mov
shll
and
orl
push
or
push
shlb
inc
in
in
sbb
dec
movsl
scas
xor
jnp
ret
mov
std
lds
or
out
shrl
xorb
xchg
cli
inc
add
sub
jge
jecxz
pop
js
pmullw
aam
push
lds
movsl
push
aad
add
cs
mov
xchg
push
inc
adc
js
daa
push
mov
test
cld
mov
sbb
daa
inc
fnstsw
adc
xor
clc
scas
pop
arpl
pusha
adc
les
into
cli
sbbb
lods
js
sbbb
push
sbb
jno
test
mov
es
mov
xchg
int3
cmp
xor
out
sahf
es
sub
mov
lods
add
sbb
pop
mov
mov
clc
and
test
scas
shr
popl
and
mov
xchg
loop
adc
sbb
popf
cmp
cld
insb
mov
dec
js
lret
cmp
inc
or
sub
push
in
cmpsl
fstpl
or
test
add
adc
andb
sub
xor
imul
pop
cmc
push
mov
subb
cmp
and
cmp
sahf
pusha
xchg
clc
add
jge
lret
push
js
cmpsl
addr16
mov
push
sbb
lcall
call
fsubl
mov
jl
repnz
pop
push
ficompl
and
lahf
repz
div
stos
push
cwtl
xor
fbstp
xor
inc
push
das
jb
mov
mov
in
pop
xor
pop
or
sbb
addr16
jnp
notb
inc
mov
test
add
sbb
inc
js
scas
and
sub
jno
nop
cmp
aaa
xchg
mov
jle
pop
or
out
mov
mov
dec
aam
push
clc
mov
jne
dec
mov
ss
xor
dec
add
dec
outsb
xchg
xchg
mov
imull
mov
pusha
xor
add
dec
cmp
and
shrl
sbb
and
lds
fs
sbb
jbe
mov
mov
out
and
cs
mov
mov
leave
in
mov
gs
div
clc
test
dec
xchg
mov
sahf
push
xor
popf
mov
mov
jnp
insl
iret
push
jb
test
push
mov
aaa
pop
mov
fmull
inc
jmp
cmpl
cwtl
xchg
in
sub
sbb
out
clc
push
push
repnz
pop
stos
push
sub
inc
push
dec
xor
fdivl
or
cmpsl
pop
dec
mov
rcr
sahf
xchg
in
cmc
pop
pop
or
popf
cs
jne
aas
adc
adc
inc
or
add
add
xchg
sub
push
push
mov
push
loope
mov
sub
cmpsb
or
ja
ljmp
jns
fs
dec
arpl
fbstp
adcb
rol
in
push
adc
gs
push
push
and
fisttpll
insl
pop
push
mov
outsb
pop
cmpsb
xchg
repz
mov
and
fs
ret
cmc
loopne
pop
shlb
add
xchg
stos
push
and
or
sarl
fwait
sub
inc
mov
lods
fsubrs
lret
adc
in
xor
mov
fistpl
rcll
and
pop
lock
and
jmp
mov
push
jnp
mov
cli
popf
sarb
lds
xchg
pop
aaa
pop
adc
dec
mov
out
aas
outsb
mov
rcl
fwait
pop
cwtl
sub
lahf
insl
inc
ret
fldenv
xor
cmpsb
and
aaa
cld
dec
pushf
sub
and
std
call
int3
dec
push
or
cmp
iret
xchg
pop
into
aad
add
lds
and
in
mov
inc
outsb
add
mov
andl
push
fcompl
dec
adc
iret
cmp
clc
adc
sbb
push
or
fucomi
and
sbb
push
jbe
dec
fisubs
shll
add
mov
sub
sbb
cmp
jl
push
pop
jmp
jno,pt
dec
mov
xchg
and
sbb
in
popa
out
dec
inc
sbb
pop
jb
xor
inc
mov
mov
imul
and
bswap
arpl
loopne
mov
xlat
add
sti
dec
xchg
fstpl
add
push
dec
inc
clc
mov
xchg
mov
pop
pop
fldcw
out
mov
cmp
cwtl
jmp
daa
mov
aas
mov
repz
enter
jge
mov
mov
pop
hlt
push
pop
add
push
mov
push
imul
cmp
jmp
mov
pop
pop
int
sub
fwait
cmp
inc
mov
push
lds
sbb
call
imulb
pop
pop
add
in
cwtl
mov
scas
stc
mov
shrb
ret
push
pop
das
mov
adcb
in
subb
or
lcall
pop
cmp
repz
push
inc
mov
sbb
mov
frstpm(287
mov
jae
stc
adc
dec
stc
mov
jecxz
fsubr
jp
dec
jne
push
lahf
sub
or
push
dec
lret
xor
cmp
cmp
xchg
xor
mov
mov
ljmp
aam
mov
adc
or
rcrl
jbe
dec
test
mov
xorb
insl
lods
and
adc
push
add
mov
incb
inc
inc
je
iret
mov
cmp
push
lret
clc
scas
cmp
cld
pushf
dec
lahf
mov
roll
push
xchg
sub
mov
inc
mov
pop
xor
jg
jae
cwtl
pop
out
mov
sahf
jl
out
aaa
jns
jns
xchg
pusha
add
jo
xchg
cmp
sti
sbb
ret
insl
cmp
and
mov
repz
pop
cmp
cltd
sub
or
mov
in
jo
and
cwtl
loope
lahf
cmpsb
in
push
sub
loopne
xchg
sub
insb
or
mov
cmpsb
push
mov
sbb
clc
push
pushf
stos
mov
out
in
fs
xchg
xchg
push
xlat
outsb
pop
xor
xor
sub
push
lret
or
or
xchg
inc
fsubrs
fidivrl
scas
jmp
imul
lea
dec
es
pop
and
jnp
out
mov
mov
xchg
dec
lret
fcoms
cs
or
xor
pop
lret
xor
add
cltd
or
mov
test
sub
or
clc
pop
jmp
in
push
add
xchg
ja,pn
enter
sbb
and
sub
lret
in
cmp
adc
push
mov
or
fxch
test
scas
add
out
xchg
pop
cmpl
out
and
test
scas
aam
sbb
add
push
xchg
fadd
aas
pop
sbb
cli
lock
jne
mov
mov
sbb
mov
orl
mulb
pop
pushf
jbe
outsl
shr
insl
mov
loopnew
cmp
lahf
mov
mov
idivb
cmp
pop
stc
mov
cmc
mov
pop
mov
sub
xchg
xor
imul
xor
cmpsb
leave
pop
cwtl
enter
stos
inc
es
xchg
dec
lahf
cs
cmpsl
cmpsb
ds
std
sbb
jmp
fistpl
add
nop
jg
or
scas
cmp
dec
xor
outsl
add
mov
mov
adc
rcll
push
int
mov
dec
cmc
jg
pop
sbb
mov
ds
push
hlt
and
outsb
aam
adc
into
cld
aam
or
insb
cmp
in
cmp
jo
jge
into
and
in
pop
fwait
in
loope
sahf
mov
mov
mov
xchg
adc
mov
jae
and
xchg
aaa
sbb
sbb
mov
mov
outsb
push
cmp
push
test
fcomps
adc
mov
ss
addr16
jnp
lahf
divb
mov
test
sbb
mov
scas
cli
mov
and
cmc
test
jnp
sbb
sbb
js
add
adc
roll
jg
sahf
xchg
in
addr16
out
imul
jge
mov
call
add
cmp
popf
pop
or
loopne
mov
les
popf
dec
lret
mov
fmull
inc
xor
and
sbb
into
in
mov
adc
ljmp
xchg
outsb
cltd
or
popa
popa
aaa
lock
or
clc
sbb
les
adc
inc
cmp
lds
mov
inc
jp
mov
mov
push
std
ss
xor
outsl
ret
or
fs
or
scas
test
cli
sbb
inc
testl
sbb
pavgb
add
imull
pop
pushf
pushf
out
rclb
pop
testl
mov
xor
fcomps
add
lea
xlat
mov
out
xor
mov
jo
das
mov
cmpsb
adc
leave
fldt
pop
nop
sarb
je
or
lahf
stos
or
in
movsb
pop
in
fstl
or
push
ljmp
fdivr
xchg
and
ljmp
sbb
inc
mov
subl
fildl
scas
jge
and
jae
lods
movsl
outsb
enter
adc
xchg
outsb
adc
outsl
aad
mov
mov
les
or
jbe
add
jge
mov
sbb
jmp
jmp
repnz
lods
jns
divb
and
sub
xchg
jle
xrelease
and
outsb
push
cmpsl
push
popf
fiadds
push
add
mov
mov
insb
lcall
mov
das
cmp
mov
pop
inc
or
sbb
push
mov
lcall
inc
movsl
xor
and
or
or
sbb
je
xorl
fdivrs
adc
adc
cltd
mov
and
jae
push
aaa
xchg
jo
jge
mov
lret
les
mov
push
push
aaa
fisubs
or
adc
adc
stos
push
fsubs
insl
mov
jb
int
jno
addr16
xchg
mov
xchg
lahf
lret
cmp
les
outsl
jmp
scas
xchg
jne
mov
mov
cmp
mov
jmp
aam
and
sub
mov
inc
inc
mov
ja
int3
mov
fmul
in
loop
dec
sti
xor
or
roll
adcb
dec
js
adc
adc
jmp
mov
cmp
cmp
xor
pop
push
stc
lea
nop
ds
push
outsl
sub
out
cmp
fidivrl
loopne
cmp
dec
mov
dec
cmp
mov
call
popf
sbb
sbb
stos
jecxz
inc
adc
fdiv
mov
and
rclb
adc
std
icebp
push
adc
xchg
ds
popa
lahf
pop
lret
inc
sbb
mov
mov
jp
push
pop
leave
out
fwait
testb
imul
icebp
xor
inc
push
dec
es
divl
cmc
lods
pshufw
and
and
push
sbb
pop
pop
ds
loope
faddp
ret
popf
adc
and
lret
dec
movsb
ror
mov
inc
ficoms
repnz
or
mov
xor
and
insb
inc
adc
loopne
inc
push
fsubs
inc
adc
aas
mov
mov
jge
popl
into
push
push
ret
fisttps
dec
pusha
lods
test
jle
shll
and
cmpsb
mov
aam
xchg
pop
inc
lds
lret
cmp
insb
cmp
dec
fidivrl
ja
cmp
lock
push
arpl
pop
mov
jmp
push
js
in
fnsave
pop
cmp
inc
ljmp
cmp
or
es
shll
mov
lds
push
repnz
jnp
cmp
add
jae
test
inc
pop
pop
push
cwtl
inc
mov
adc
shl
cmp
dec
inc
lock
ret
call
pop
aam
testl
mov
dec
imul
inc
cmp
in
cmpsl
push
addl
fs
xlat
xchg
mov
lret
aam
nop
jle
xor
add
xchg
cmp
repz
inc
arpl
lock
dec
cmpsb
shrl
xchg
ja
outsb
imul
lcall
sti
inc
add
cmp
jmp
aas
lea
stc
add
mov
and
fisubrl
cs
pop
cwtl
lcall
hlt
mov
dec
dec
or
or
add
mov
mov
std
mov
mov
adc
sarb
subb
mov
mov
cwtl
jb
jge
cmp
mov
and
bound
scas
sub
in
xor
and
mov
subl
bound
sahf
mov
out
mov
popf
xchg
xchg
pop
jmp
neg
dec
xor
push
mov
loope
negl
xor
fs
dec
or
and
cmp
lcall
outsb
mov
test
pop
xor
dec
popa
stos
cmpsl
sub
sbb
movsb
mov
sub
mov
in
js
mov
adc
dec
xchg
jg
fsub
ficoml
jmp
jl
jmp
sub
add
pop
das
sahf
xchg
imul
dec
int
call
lret
cmpsb
pop
jge
stc
into
sarb
outsl
sahf
cs
xor
sahf
insb
pusha
mov
sbb
cmc
testl
out
daa
nop
xchg
js
and
xchg
adc
pop
loop
aad
xchg
pop
cmp
stc
std
rclb
sti
icebp
dec
ljmp
lods
arpl
int3
pop
push
pop
rcll
pop
out
sbb
dec
insb
in
xchg
add
push
pop
popa
add
test
lahf
cmp
and
inc
dec
push
add
or
sub
push
jecxz
fildll
jb
pop
in
mov
sub
pushf
cmp
mov
pusha
fst
sub
int
inc
pop
push
or
pop
mov
aaa
movsb
test
push
es
dec
pusha
cli
popf
xchg
cmp
ret
xchg
cmp
enter
mov
sbb
mov
jecxz
mov
and
inc
adc
sbb
xchg
dec
and
test
mov
push
dec
testb
outsl
jmp
adc
into
push
int
loop
mov
xor
cmpsl
dec
fisubrs
push
or
test
inc
mov
xor
divb
mov
mov
or
pop
repz
pop
mov
mov
xchg
nop
jl
bound
sub
xlat
outsb
sub
loopne
ja
push
lea
add
push
lret
inc
xor
mov
pop
aaa
inc
and
push
and
cmp
pop
xchg
enter
pop
xlat
add
scas
mov
into
in
xchg
sbb
or
mov
shr
and
popf
rolb
leave
push
pop
adc
add
xchg
dec
jg
push
adc
dec
cmp
jo
pop
int
out
loopne
pop
add
into
xchg
into
mov
sub
stos
jmp
addr16
adc
jg
pop
add
and
in
lret
in
jl
push
xor
add
lret
cmp
add
jecxz
jno
jae
ret
pushf
out
arpl
sbb
add
sub
loopne
pusha
inc
pop
lock
adc
pop
shll
sbb
orl
sub
xchg
stos
jbe
lret
jg
nop
lds
jmp
cmp
xchg
testb
loope
in
jp
cmp
mov
cmp
and
add
adc
imul
notl
shl
fld1
jmp
lret
test
cmp
inc
inc
outsl
xchg
ds
add
and
jbe
xor
mov
cmc
mov
es
imul
mov
fstp
mov
hlt
jo
adc
or
and
mov
mov
sbb
negl
bound
adc
jb
pop
dec
cmp
adc
cmc
shr
mov
push
test
loopne
mov
pop
jp
dec
cmp
out
sbb
jge
jg
out
push
sub
sub
outsb
mov
jno
inc
sbb
and
adc
fs
sbb
xor
inc
jne
sub
dec
sub
push
add
lea
mov
mov
rcr
sub
xor
cmp
cmpsl
aad
mov
sahf
jnp
xor
mov
mov
or
icebp
aam
movb
int
sbb
fs
je
stos
test
daa
test
adc
inc
jl
jl
mov
ss
mov
incl
insb
jne
dec
ret
xchg
fs
mov
fcoml
ss
scas
rol
mov
cmp
and
xor
and
dec
mov
inc
clc
and
cmp
xor
stc
push
cmp
mov
icebp
lods
jbe
mul
mov
aam
ret
or
rcll
gs
pop
mov
adc
push
jg
sub
mov
and
jns
push
mov
cmp
stos
push
call
sahf
es
outsl
icebp
mov
adc
adc
call
xor
stos
shl
or
loope
mov
jne
clc
adc
cmp
cmpsl
mov
xchg
jge
mov
in
movsl
jp
sahf
adc
jnp
rolb
xor
loopne
mov
sti
scas
push
lea
and
negl
icebp
mov
aad
cmp
pop
shl
insb
dec
inc
cmp
aam
jns
dec
or
inc
repz
ret
clc
jbe
xor
cwtl
clc
insb
std
icebp
mov
pop
adcl
inc
insb
or
add
mov
or
loope
mov
mov
pop
jecxz
daa
insb
rorb
enter
ss
lret
mov
cmc
scas
mov
mov
dec
dec
ret
push
mov
add
clc
xor
arpl
dec
in
adc
insb
and
mov
lods
inc
mov
lret
aad
call
jge
in
data16
aam
mov
pop
cmp
imul
pop
and
sub
fldl
hlt
stc
mov
push
xor
cs
repnz
push
aam
test
or
out
cmc
in
dec
es
or
inc
ds
adc
imul
or
in
lret
jne
xchg
ret
jno
sbb
add
test
adc
xchg
lods
xchg
dec
jp
cmp
and
decb
dec
jle
inc
lahf
cmp
push
xchg
jecxz
xchg
fists
pop
lcall
and
mov
dec
in
jb
dec
dec
mov
jmp
push
push
xor
movsb
cmp
imul
bound
cmp
pushf
pop
jno
sub
clc
push
adc
call
leave
jno
jmp
or
hlt
cmp
std
adc
jbe
and
test
pop
mov
mov
pop
cmp
insb
aas
decl
lret
adc
xchg
xchg
and
sub
in
add
mov
imul
ja
lcall
pop
ret
xor
cmpsl
addr16
enter
adc
cmpsb
xchg
pop
jle
jns
and
pusha
shll
and
mov
lcall
divb
daa
cmc
xchg
ss
mov
dec
out
jecxz
in
and
enter
mov
pushf
aam
sbb
lret
jmp
dec
loope
dec
in
js
xor
jne
xchg
pop
pop
xchg
pop
xchg
sub
inc
ss
jg
out
pop
cmp
adc
out
xchg
cmp
push
pop
shr
and
decb
mov
pusha
sub
cmp
jae
or
mov
bound
fwait
xchg
ret
jo
jnp
dec
and
inc
je
xor
sbb
aam
rolb
pop
xor
jno
gs
inc
mov
push
call
push
xor
arpl
push
cwtl
xlat
addr16
gs
jb
dec
mov
inc
jo
pushf
cmp
clc
ja
pop
iret
mov
or
xchg
aam
dec
push
mov
pop
pop
mov
pop
les
adc
dec
jbe
int3
adc
add
sub
add
sub
mov
or
inc
jle
xlat
js
and
cld
repnz
pushf
xor
jns
or
repnz
and
js
sbbb
stc
cmp
add
lcall
mov
pusha
sbb
scas
sub
es
insl
mov
push
mov
stos
mov
pop
pop
rcll
call
lods
lock
xchg
std
xor
xor
mov
lret
push
lock
aaa
dec
sahf
insl
adc
and
bnd
pop
mov
lahf
mov
clc
int
insb
cmp
push
or
pop
mov
adc
test
sub
or
in
mov
jl
mov
das
clc
xor
ss
mov
cmp
adc
clc
dec
lds
test
jb
jle
subb
dec
jmp
add
mov
xor
or
mov
and
mov
ljmp
fists
mov
add
mov
bound
mov
or
scas
jne
lret
push
sub
pusha
cmc
sub
jmp
mov
inc
rorb
adc
or
out
dec
and
les
pop
pushf
stos
push
mov
pop
negl
sub
jno
jg
fwait
sbb
cmp
aaa
or
inc
sbb
mov
jp
movsl
test
mov
xchg
fstps
data16
mov
cwtl
cmp
pop
test
hlt
cmpsb
std
cmp
adc
mov
lds
out
push
ljmp
mov
subl
mov
sub
int
test
stos
test
mov
inc
pop
sub
jl
std
lods
jmp
js
mov
adc
aaa
test
add
jnp
sub
mov
frstor
fdivrl
jae
mov
ret
pop
fidivrl
in
aas
add
cwtl
sub
ss
lea
mov
push
stos
adc
rcl
sub
stc
rcl
shlb
clc
dec
or
ja
add
push
xor
inc
adc
push
sbb
imul
pop
cmp
mov
in
pop
pop
call
ljmp
adc
xchg
lea
jmp
arpl
pop
stc
xchg
jns
inc
enter
fcmovnbe
dec
cmp
dec
xor
add
mov
dec
jbe
data16
push
loopne
subb
pop
insl
sti
js
dec
push
js
call
fidivrl
lock
les
xchg
mov
sahf
inc
lds
ja
sbb
gs
dec
jecxz
lods
xlat
xor
leave
dec
push
popa
hlt
fwait
test
ret
popl
outsl
adc
out
and
and
mov
add
jmp
or
arpl
repnz
cmp
enter
xor
mov
pop
xchg
push
mov
push
mov
xchg
push
arpl
mov
push
rol
insb
mov
xchg
jge
adc
pop
or
ja
or
adc
sub
fidivrs
fidivl
push
lods
pop
inc
pop
lahf
aad
jno
lret
enter
push
pop
mov
cmpsb
fwait
pop
or
ret
pop
loope
sub
pop
push
or
aam
cmp
adc
lret
movsb
loopne
sub
jae
jge
mov
pop
sbb
bound
test
data16
js
imul
cmpsl
xchg
sbb
push
decl
loop
addl
out
pop
scas
test
push
cmp
sti
mov
sub
out
ds
cltd
inc
adc
repz
mov
out
sub
jmp
push
adcb
mov
mov
int3
bound
scas
cmp
ljmp
inc
cltd
lcall
push
popa
repnz
push
cs
dec
push
jmp
aam
test
lret
push
xorb
into
out
jp
add
xchg
xchg
and
sbb
lret
stos
cmp
sbb
push
in
mov
inc
xchg
mov
int
push
xor
mov
test
iret
cmpb
push
out
in
dec
jae
jb
pop
fwait
enter
pop
stos
or
xchg
fstl
fbld
xchg
xor
push
mov
mov
icebp
jl
stos
push
pop
test
lods
xor
xlat
jmp
mov
je
add
xor
stc
movsl
mov
dec
xchg
aas
sbb
sub
sbb
pop
lret
xchg
push
pop
daa
mov
mov
lret
sbb
dec
mov
mov
inc
pop
and
sub
pop
mov
dec
stos
adc
ljmp
movsb
out
ret
nop
inc
lods
ja
push
rcll
sbb
xchg
lods
pop
xchg
movsl
enter
ficompl
rclb
dec
mov
sahf
insl
rorl
sbb
in
out
shrl
xor
xchg
and
pop
test
cmpsl
mov
xchg
and
insl
cmp
sub
jns
jnp
adc
mov
cli
cmp
sbb
imul
shll
or
pusha
push
xchg
push
imul
cmp
fwait
xlat
dec
sub
scas
mov
and
in
dec
cmp
daa
xor
imul
psubw
or
cmp
loopne
in
je
arpl
out
mov
ss
aad
push
jbe
mov
aas
xchg
or
test
cwtl
dec
inc
jmp
repz
ljmp
mov
push
jae
clc
cltd
or
aas
or
leave
mov
insl
stos
mov
daa
push
rcl
addl
testb
push
or
lock
imul
mov
pop
sub
mov
cmpl
push
sahf
es
mov
andl
mov
fsubrl
iret
test
jmp
rcll
lcall
cs
test
mov
and
dec
popf
mov
sbb
cmp
pop
adc
sbb
loop
dec
dec
sbb
lea
in
mov
call
jb
cmpsb
push
scas
xor
into
inc
shlb
nop
shrb
cmp
setno
xchg
out
xchg
and
adc
lret
pop
sub
ds
pop
icebp
add
mov
push
mov
into
sahf
mov
lahf
test
out
dec
aam
push
xchg
push
add
adc
push
add
mov
pushf
push
adc
jmp
nop
cmpsl
aad
loop
scas
pop
sti
jg
mov
or
insb
mov
adc
lds
dec
cmc
xor
pop
std
fucomp
xor
addr16
inc
pop
pop
or
cmp
push
test
daa
enter
and
add
iret
adc
inc
rorl
inc
jle
xchg
shl
adcb
cmp
mov
mov
mov
cmp
ss
push
fisttpll
stos
xchg
mov
loope
xor
sub
hlt
sub
sub
jbe
jae
repnz
cwtl
insb
xor
adc
outsb
sub
cltd
or
orb
jmp
and
mov
daa
out
ds
inc
add
adc
dec
xor
adc
sub
cwtl
ret
and
in
mov
mov
and
icebp
xor
lods
icebp
outsb
mov
push
mov
add
mov
sub
filds
cmp
popf
xlat
jp
cmp
lds
ljmp
sbb
sub
pop
xchg
xchg
mov
or
jo
das
pusha
dec
mov
lds
mov
ds
xchg
sbb
ret
cmp
inc
xor
and
test
adc
cltd
pop
pusha
fs
sbb
cwtl
jg
test
enter
push
jno
dec
add
movsb
and
or
arpl
add
sub
popf
imul
sbb
cld
inc
adc
shll
jecxz
sub
aas
cwtl
into
loope
sbb
shrl
fisubl
pusha
in
mov
sbb
add
popf
mov
xor
sub
mov
pop
jnp
je
sahf
arpl
and
lods
push
ret
mov
rcl
xor
pop
out
cmpsb
fsubrl
xchg
push
bound
sbb
push
pop
sbb
into
sbb
int3
cmp
pop
outsl
sbb
hlt
jl
rol
in
es
loope
fidivrs
fwait
inc
mov
shrl
adcl
jle
sarb
mov
outsl
cld
xchg
xor
xorb
ret
mov
or
adc
mov
es
adc
roll
xor
inc
sbb
mov
rorb
aad
sahf
dec
cli
mov
jl
dec
ljmp
adc
in
int
push
pop
push
pop
xchg
mov
xlat
jnp
lret
inc
sub
mov
mov
jne
jmp
lds
popa
jg
insl
adc
andl
icebp
inc
out
jmp
dec
adc
pop
cwtl
lds
in
and
pop
pop
pop
xchg
mov
add
inc
lock
ss
sbb
and
insb
jmp
je
cmp
mov
daa
bnd
je
xor
cmp
and
fwait
jmp
jae
in
fcmovbe
add
xor
sbb
lret
ret
mov
popf
cmp
xchg
rcll
dec
xor
cli
in
mov
pusha
add
lea
imul
scas
prefetchw
rep
sub
cmpsb
mov
cmp
imul
mov
dec
mov
test
test
pop
and
jmp
and
adc
std
cltd
push
inc
or
sub
divb
insb
shll
xor
xchg
and
mov
push
cvtdq2ps
xchg
and
mov
ja
jne
xor
xor
mov
push
test
or
sbb
sub
fs
test
jno
mov
lret
imul
xchg
xchg
inc
je
push
scas
or
mov
adc
xchg
xchg
mov
pusha
sbb
inc
pop
loopne
push
add
cli
lock
movb
lret
daa
scas
es
adc
sbb
fimuls
int
mov
pop
fdivrs
enter
jae
sub
cltd
push
fidivs
push
and
mov
pop
push
pushf
and
push
dec
sahf
push
in
lds
adc
and
pop
test
mov
jae
jmp
push
mov
sub
inc
mov
jb
push
mov
call
ljmp
push
ljmp
push
push
add
jmp
and
push
mov
fistl
lcall
int3
loop
inc
jg
hlt
das
enter
jae
mov
pop
stos
insb
mov
in
dec
xchg
or
outsb
jb
sahf
mov
jle
imul
mov
and
add
cmc
rcr
test
fiadds
test
mov
in
aas
mov
inc
inc
mov
pop
pusha
in
xor
pop
cmpsb
lret
outsb
movsb
sub
xchg
lret
xchg
jns
xchg
shll
inc
stos
cmp
je
inc
hlt
inc
mov
test
orl
jno
insb
mov
pop
xchg
popa
xor
hlt
ljmp
cmp
jmp
add
out
repnz
out
loop
in
stos
mov
js
faddl
add
mov
jecxz
outsb
fiaddl
jp
fdivp
add
lret
lock
or
xor
test
dec
repnz
dec
and
push
sbb
aam
enter
std
subb
jl
inc
adc
dec
ret
adc
ljmp
xchg
mov
int
pusha
xlat
call
out
repnz
pop
mov
xchg
xchg
in
ffree
pusha
lret
dec
mov
int3
mov
sub
jbe
mov
xlat
rorb
sub
push
fucompp
arpl
mov
mov
les
push
jno
pusha
sbb
jnp
xor
xchg
jp
dec
loop
fidivl
jg
in
incl
adc
dec
ja
push
mov
aaa
lods
sub
cmc
clc
add
xor
lcall
inc
or
mov
pusha
icebp
xchg
ret
out
push
fwait
movsl
inc
movsl
aaa
or
dec
jb
push
daa
mov
addr16
std
add
inc
enter
enter
mov
sub
and
enter
test
jns
pop
outsl
sbb
aaa
mov
call
sub
ret
fstpl
mov
imul
cwtl
mov
mov
jb
movb
daa
inc
and
adc
jl
into
lret
mov
sub
in
dec
mov
push
ret
mov
jle
out
in
mov
mov
dec
xchg
push
xor
jg
mov
testl
jg
sub
pop
imul
and
iret
aas
or
rcrl
cmp
sbb
xchg
push
push
shll
sub
lea
push
ljmp
arpl
or
ljmp
inc
lahf
mov
aad
out
mov
mov
outsb
push
and
jb
std
xchg
cmp
jo
mov
ljmp
mov
das
daa
je
xchg
push
imul
mov
xor
sbb
pop
js
pop
in
sub
out
ds
sub
outsl
sub
jo
mov
or
scas
call
add
sbb
js
shlb
sub
dec
or
outsl
sarl
int3
sub
add
push
mov
stos
jo
cmpsb
cli
fs
sub
cmp
inc
push
push
fisttpll
sub
stc
iret
xor
cmpsb
fs
jo
add
mov
xor
sub
aas
imul
xlat
and
sbb
or
bound
mov
hlt
jb,pt
inc
push
xorb
jle
and
jmp
ds
or
cmp
mov
mov
push
arpl
mov
cmp
mov
mov
mov
push
shrd
jg
std
in
and
fdivp
ret
sarb
sbb
and
cwtl
rcr
cltd
dec
sahf
or
ljmp
mov
sub
js
les
or
clc
ret
fistps
lods
mov
sub
jle
add
fisubrs
add
imul
cltd
cmp
pop
testb
in
imul
sub
lahf
cld
jne
mov
xchg
scas
call
mov
jnp
jae
mov
push
movsb
mov
sahf
mov
cmp
dec
jo
dec
inc
rorb
fistpl
mov
shlb
arpl
dec
push
or
or
sub
stc
push
fs
rorl
sub
pop
jge
jo
movsl
in
fwait
push
fdivrs
sub
lahf
or
and
stos
int
xchg
pop
xchg
add
cmp
jecxz
pop
pushf
test
mov
pushf
fstp
insb
movsl
ds
imul
add
int3
lahf
sub
out
mov
lahf
mov
mov
aaa
scas
or
int
inc
push
sbb
xor
out
cmp
jae
leave
or
jge
mov
cmp
inc
dec
jle
inc
cwtl
mov
sahf
or
jbe
xlat
mov
fdivrl
jno
and
adc
sbb
ds
add
daa
insl
mov
xchg
aad
mov
imul
mov
mov
sub
fs
xor
sub
sbb
mov
movsl
xlat
sub
loopne
cmp
jl
jmp
adc
inc
enter
mov
jo
test
push
in
cmpsl
cmp
xchg
mov
scas
hlt
addr16
jmp
add
loope
fldt
aas
test
cmp
and
add
push
mov
mov
repz
mov
rorl
stc
sbb
outsb
xor
pop
sbb
arpl
cmp
xor
andps
and
adc
sti
pop
inc
jno
xchg
or
lret
or
fnstenv
and
pusha
push
fiaddl
clc
mov
fldl
push
xor
mov
nop
outsl
repnz
xchg
push
mov
push
dec
xor
stos
add
lea
mov
call
pop
xchg
jge
jno
dec
ret
lret
sub
ja
adc
std
jl
enter
push
push
add
sub
cmp
test
mov
xchg
mov
gs
or
movsb
mov
sahf
pop
push
add
xor
aaa
sahf
out
inc
sub
push
jnp
mov
pop
lods
push
fisubs
test
add
sub
push
xchg
jbe
or
push
sbb
sbb
jae
inc
push
or
loope
jge
ror
and
ja
xchg
pop
and
idivb
jmp
repnz
and
pop
cmp
popf
and
cmp
sub
lods
aaa
mov
adc
mov
inc
mov
jle
aas
fstl
ds
push
mov
push
and
mov
movl
push
sbb
das
pushf
pop
nop
nop
jl
adc
cmpsl
mov
clc
sub
lods
mov
jnp
mov
cmp
js
arpl
notl
addb
pop
push
ret
or
cltd
inc
in
sub
mov
les
inc
xor
ret
js
std
and
out
adc
popa
lods
test
aaa
test
xor
cs
enter
sub
and
cmpb
lret
cmp
dec
das
and
fisttps
adc
push
outsl
dec
pop
lods
imul
mov
jge
jmp
sub
or
and
fdiv
pop
roll
sbb
mov
xor
add
ficompl
aas
mov
mov
xchg
nop
and
mov
dec
js
aam
push
add
arpl
xorb
ret
popf
out
jo
gs
mov
or
push
out
push
data16
in
pop
incl
ret
mov
dec
xchg
iret
sub
fiaddl
jecxz
lods
out
mov
fldenv
in
xor
mov
repnz
lea
ficompl
pushf
shlb
das
in
shl
shr
and
sub
push
js
mov
cmpb
xchg
cmp
fwait
fwait
pop
dec
into
cli
mov
lock
ror
lea
leave
inc
lock
adc
ja
cmp
enter
pusha
out
and
sbbl
bnd
lods
std
dec
dec
neg
jle
ja
push
iret
aad
ljmp
adcb
sub
leave
mov
and
mov
xor
fwait
pop
or
out
cld
stos
mov
out
ja
add
add
lods
and
jmp
jne
cld
into
cmova
jns
es
inc
push
push
mov
xchg
roll
mov
pop
insl
xor
les
push
add
int3
xchg
add
lds
cli
cmp
pop
fdivs
or
push
pop
in
addr16
cmp
mov
fwait
xchg
aad
dec
mov
icebp
data16
and
push
pusha
ja
iret
sub
out
sub
sbb
cs
fstl
lock
outsb
push
jecxz
pop
pop
or
scas
loopne
mov
cmp
push
inc
push
jp
repz
enter
or
ss
or
mull
and
les
pop
adc
mov
or
inc
int
popa
daa
jp
jne
jge
jecxz
add
dec
gs
ljmp
ljmp
ret
shlb
mov
mov
aas
rcll
mov
sub
pop
insb
addr16
popa
pop
pop
cmp
dec
sub
rolb
sbb
or
insl
shll
inc
sub
ljmpw
jecxz
bound
fdivs
or
jg
push
addb
mov
aam
inc
out
mov
testb
cmpsl
mov
push
pop
adc
xlat
mov
cmpsb
inc
jecxz
mov
adc
scas
shl
sbb
mov
mov
inc
and
mov
outsl
jecxz
scas
stos
fisttpll
pop
xor
jbe
pushf
repnz
pop
es
mov
adc
mov
lret
add
jmp
cwtl
jmp
xchg
cmp
and
js
xchg
in
pop
cmp
adc
mov
mov
lock
lods
fnstenv
mov
push
mov
cld
xchg
add
fsubrl
enter
jb
jo
cmp
adc
loope
inc
lods
daa
add
xchg
xor
mov
hlt
xchg
lret
pop
mov
xorl
dec
pushl
pop
lock
sub
jp
outsb
fnstcw
mov
iret
int
jl
arpl
cmpxchg
jp
jae
cltd
jl
xchg
test
or
dec
pop
inc
insb
aaa
push
leave
mov
in
adc
stc
sbb
push
add
sub
ret
adc
jb
movsb
mov
dec
inc
imul
sub
sahf
pop
jle
xchg
popa
decl
sub
mov
pop
imull
inc
jnp
ficoml
lea
lret
imul
adc
or
inc
sbb
lret
adc
cmp
fcomi
mov
sbb
inc
mov
out
sbb
xchg
bound
shr
cmp
loopne
or
pop
scas
add
in
test
ret
mov
inc
xor
or
ljmp
push
scas
xchg
dec
jb
add
aad
xor
dec
jl
cmp
test
sub
lea
mov
out
sbb
lret
mov
mov
mov
call
mov
pop
push
mov
adc
adc
aam
sbb
or
xchg
adc
loopne
fldl
rclb
mov
insl
shlb
pop
pop
adc
iret
pop
mov
insb
sti
cmpsb
idivb
enter
inc
push
sbb
cmp
clc
adc
mov
scas
mov
sub
xchg
mov
lods
test
xchg
test
adc
cmpsb
cmp
sub
je
test
incl
inc
inc
clc
cli
sbb
ret
sbb
dec
inc
cmc
pop
xor
ret
jp
xchg
or
pop
into
and
sti
loop
sti
add
mov
push
adc
inc
mov
xchg
adc
adc
mov
cmpsb
lret
into
mov
jecxz
ret
or
or
stc
nop
insb
ljmp
push
ret
movsl
mov
loop
jmp
mov
or
int
push
fsubl
and
out
pop
sub
testl
aam
loopne
or
push
fsts
or
rcr
mov
jb
push
fs
es
test
std
lret
ret
les
add
sbb
push
scas
adc
push
fbld
and
mov
pop
outsb
ret
sbb
jle
outsl
sbb
into
jmp
jne
xchg
mov
fistps
lock
adc
xor
call
adc
cmovge
int3
js
inc
adcb
negb
push
into
xchg
jecxz
push
arpl
stos
mov
aam
loope
or
fwait
push
mov
add
rcll
and
cwtl
dec
or
nop
push
movsb
jl
test
fdiv
mov
scas
pop
rcr
ret
clc
jae
fists
mov
in
mov
inc
pop
js
mov
fs
sbb
mov
mov
fwait
xchg
gs
aad
mov
andb
loop
cmp
pop
sub
xor
lret
sbb
push
add
test
push
pop
mov
call
and
adc
xchg
in
loope
ss
std
push
mov
or
and
sbb
pop
mov
jnp
dec
xor
mov
enter
cld
and
inc
pop
es
mov
xor
mov
hlt
lcall
push
js
and
les
dec
mov
sbb
ret
pop
mov
addr16
and
sbb
loop
stc
jno
jge
pop
test
rorb
jge
out
sbb
push
stc
fisubrs
mov
add
fwait
rol
sub
popf
rclb
out
dec
push
xor
pop
push
sahf
mov
push
gs
clc
and
sti
movsl
jno
lcall
push
adc
jge
or
and
jg
lds
ret
int
mov
cmp
dec
sahf
stos
roll
fimull
xorb
lcall
cmp
mov
jecxz
dec
mov
out
mov
mov
pop
rcrl
aam
xchg
into
icebp
fistps
aam
das
push
aad
test
jg
push
jnp
loop
cmp
in
jae
cmc
or
out
in
cmp
pop
jp
or
les
std
insb
in
xlat
in
jp
add
inc
xorl
pusha
incl
jno
inc
add
pop
pop
insl
xchg
and
data16
sub
jmp
xor
pop
pusha
cmpsl
loopne
loope
add
out
push
pop
xor
rcr
jb
push
mov
daa
paddsw
in
into
dec
xchg
inc
jnp
lahf
movsl
and
fsts
mov
les
dec
nop
mov
outsl
bound
inc
jg
adc
outsl
jg
xlat
jmp
fnstsw
push
jle
iret
inc
ljmp
into
cmpl
dec
aas
scas
shlb
or
jmp
push
nop
mov
out
ret
push
fnstcw
or
pushf
xchg
addl
or
mov
push
pop
ds
xchg
mov
jne
jo
lds
adc
mov
loop
movsb
inc
in
aam
dec
mov
sbb
add
push
mov
pop
fdivr
movsb
js
jnp
xor
dec
loopne
and
add
xchg
pop
les
or
ds
fcoms
cwtl
push
mov
and
push
jg
push
js
xorb
sbb
push
jno
aam
pop
cltd
outsb
adc
jle
in
je
aad
ds
and
cmc
rclb
fsubrs
jae
push
pop
push
adcl
std
data16
push
xchg
push
das
fwait
in
clc
mov
fisubrs
int
push
xchg
cmp
cltd
addr16
jns
mov
cwtl
xchg
outsb
rcrb
sub
out
xor
sarl
adc
push
lret
sub
pmaddwd
push
jbe
movsb
les
pop
ja
lahf
and
sbbb
emms
lods
xlat
in
lods
pusha
mov
jnp
mov
sbb
out
adcl
and
or
hlt
sti
pop
and
leave
push
dec
jb
jmp
mov
repnz
pop
mov
jle
mov
mov
inc
dec
xchg
clc
cmp
or
ds
add
lods
mov
aad
les
hlt
mov
dec
mov
repnz
mov
pop
xorb
xor
cmp
mov
pop
cwtl
es
popa
xor
sbb
fstp
fdivrl
mov
icebp
adc
leave
adc
inc
sbb
mov
in
aad
cli
sub
push
lret
ret
testl
pop
cli
mov
add
jno
mov
ret
stc
inc
leave
mov
push
cmp
mov
adc
fs
push
inc
pop
out
call
jns
mov
pop
pop
sahf
sub
mov
out
lock
jge
sbb
sub
pop
or
sbb
fsubr
push
xor
andb
cld
push
rcrl
inc
mov
sbb
stc
push
push
dec
sbb
fs
cs
or
out
sub
ret
pop
or
push
cmp
shlb
ds
daa
xor
mov
clc
jp
fcomi
rcll
push
gs
push
repnz
jne
mov
test
repnz
fnsave
sti
cmpsb
mov
test
inc
pop
xchg
inc
cltd
movsl
test
outsb
inc
inc
outsb
sbb
movsl
out
data16
in
fists
mov
add
xor
std
dec
out
dec
jns
dec
push
daa
adc
xlat
xchg
movsl
jbe
lcall
xchg
push
pop
loop
or
push
pop
aas
mov
mov
mov
and
adc
aam
insb
movsl
lret
gs
std
imul
std
lea
xor
xchg
inc
mov
jg
in
ss
lcall
inc
sbb
imul
xor
inc
or
and
cmpsl
push
lds
pop
divl
in
mov
pop
aad
adc
jae
sbb
cli
dec
mov
cs
roll
pop
mov
mov
into
inc
aaa
subl
or
fnsave
test
fcmovnb
cs
dec
pop
jl
xchg
push
inc
push
loope
mov
fucomi
xor
stos
dec
ret
sbb
mov
call
into
jo
or
inc
adc
dec
fnstcw
hlt
in
dec
mov
leave
xchg
clc
xchg
inc
jg
cmpsl
or
or
mov
xchg
loopne
lret
test
subl
shll
arpl
inc
in
sub
mov
and
cmc
sub
aas
cmp
pop
xchg
pop
in
push
mov
push
into
les
mov
cmp
fidivs
popf
std
dec
xlat
xlat
xchg
jnp
add
pop
shll
jecxz
adc
jecxz
mov
mov
aam
pop
in
dec
mov
push
dec
jecxz
shl
pop
dec
cli
inc
push
insb
lahf
pop
lahf
decl
jp
loope
mov
mov
mov
test
iret
inc
jbe
aas
add
push
jnp
sub
das
popa
adc
jb
jns
xchg
sub
dec
shlb
jp
aaa
std
mov
jge
stos
aad
andl
scas
push
mov
imul
xorb
mov
and
mov
cmp
dec
push
sbb
test
mov
jp
repz
movsw
sbb
icebp
mov
fsubrl
xor
pop
inc
mov
cld
lahf
mov
cs
adc
adc
or
adc
fs
lods
in
pop
mov
xchg
movsl
enter
addr16
repnz
scas
ret
or
sahf
mov
sub
pop
insb
nop
or
lcall
mov
aam
push
push
mov
test
imul
mov
push
aas
lods
cli
cmp
test
mov
test
rcrb
subl
aad
pop
dec
mov
adc
sub
daa
and
nop
xor
jmp
xchg
or
mov
xor
mov
mov
inc
inc
jb
mov
sub
inc
pop
jle
test
inc
shrd
loopne
frstor
pop
push
sbbb
sbb
mov
mov
jns
les
jmp
jo
and
add
repz
mov
mov
je
cmc
aam
cmc
push
mov
cltd
cmp
or
sahf
aam
test
call
test
mov
push
jecxz
mov
add
cs
int3
sub
jae
out
mov
popf
mov
inc
and
xchg
bound
in
repz
dec
dec
inc
popa
into
andl
cld
pop
adc
ret
mov
mov
adc
fwait
jo
xorb
mov
pop
fwait
negl
out
adcl
icebp
mov
mov
lea
jnp
andl
xchg
mov
add
pop
sub
sbb
in
lret
test
mov
in
outsl
xchg
sub
xchg
sbb
gs
mov
test
dec
push
xchg
and
jmp
sub
cmp
jecxz
add
out
xchg
fmuls
int
aaa
mov
cmpl
adc
lock
adc
jmp
jno
rcrl
shl
mov
add
xchg
jl
adc
sub
lea
leave
cmpsl
xchg
xor
xchg
mov
mov
gs
or
pop
movsb
repnz
jno
pushf
push
dec
rorl
mov
daa
insl
sbb
into
scas
fdivl
mov
lcall
jbe
fisubrs
lods
add
add
sbb
negl
addr16
clc
add
pop
mov
dec
push
or
mov
je
and
popf
xchg
mov
es
test
pop
mov
adc
sahf
les
cmp
xor
test
andl
std
ret
lods
push
jecxz
out
xchg
inc
and
sub
clc
cmp
xlat
cmp
xor
sbb
mov
inc
cltd
das
sub
cltd
jo
dec
xor
subb
adc
xor
add
push
test
lret
addb
push
mov
sbbl
ss
push
jecxz
mov
insb
cmp
cli
gs
std
lods
ja
les
loope
sub
push
shl
cmp
mov
cmp
pop
sbb
loope
mov
add
jmp
xchg
sub
and
sahf
sub
aaa
cmpsl
mov
inc
ljmp
aad
daa
ffreep
dec
outsl
pop
aas
dec
sbb
cwtl
push
add
movsb
jmp
mov
call
inc
or
xchg
aas
jge
adc
or
xlat
jl
loope
mov
rcrb
clc
rclb
popa
int3
adc
dec
loopne
or
stos
dec
and
aaa
lret
cmc
mov
les
and
loopne
vpmovmskb
lret
and
popf
add
pop
dec
sub
fisubrl
cmp
push
movsb
mov
ret
sbb
imul
in
pop
fcom
cmc
pushf
pushf
data16
les
test
lea
or
popf
and
gs
cmp
inc
repnz
push
jle
push
or
mov
out
adc
mov
jecxz
pop
imul
mov
fcomip
mov
push
imul
lret
icebp
mov
std
xor
daa
xor
cwtl
pop
sbb
xor
push
pusha
notl
ror
cmp
test
addr16
mov
dec
aam
lds
mov
shrb
scas
test
sti
bswap
cwtl
dec
sub
mov
movsl
outsl
pop
mov
and
xchg
scas
pop
aaa
inc
out
dec
pop
pusha
xchg
lock
sbb
cmpl
into
pop
subb
int
push
sahf
inc
dec
lahf
pop
lahf
add
hlt
lods
ficoms
out
in
push
inc
jno
lea
cmc
pop
jno
adc
xchg
outsb
imulb
test
push
inc
fidivrl
fdivs
push
sub
push
or
cmp
xchg
loop
clc
cmp
cmp
decl
push
pop
or
sub
loopne
outsb
mov
xor
pop
xor
push
out
sub
sub
push
mov
inc
mov
mov
es
imul
push
mov
pop
aam
mov
mov
push
sub
ljmp
lods
aaa
jnp
and
push
cmp
xchg
mov
dec
inc
movsb
mov
aam
pop
mov
and
cmp
mov
bound
xor
mov
lds
mov
test
jnp
mov
sbb
sti
mov
and
ret
xor
sarl
jmp
pop
mov
outsl
and
outsl
jge
scas
outsl
shlb
subb
jl
and
gs
int3
cwtl
cmc
stos
push
pop
cwtl
xor
mov
add
arpl
idivl
adc
into
or
inc
lret
add
movsl
mov
or
cmp
ljmp
imul
add
push
insl
mov
adc
leave
pop
cltd
aaa
icebp
test
xchg
pusha
js
sbb
pop
inc
dec
insb
sbb
mov
dec
and
lahf
fs
pop
arpl
stc
pop
jmp
xchg
pop
dec
lahf
stc
push
cmc
pop
adcb
aas
sti
jmp
adc
cmpsl
cli
enter
pop
cmp
or
sti
inc
call
repnz
sub
test
mov
mov
xchg
test
push
fcmovnb
daa
jl
mov
pusha
enter
fsts
aam
cli
pop
mov
lret
lods
cmpsl
jae
jmp
scas
insb
stos
mov
in
popf
and
or
loope
jecxz
insb
dec
aad
jge
in
out
push
ja
imul
jb
adc
xchg
pop
and
aad
jle
test
lods
or
jg
daa
aad
jo
test
paddw
addr16
roll
fsubrl
sub
mov
add
fdivrl
sub
sub
adcl
ficomps
dec
insb
icebp
fistpl
mov
popf
add
ret
test
add
dec
rorb
pop
das
push
scas
mov
aas
pop
and
mov
cmc
out
push
ljmp
sub
sub
lret
inc
mov
in
inc
sbb
mov
pop
stos
stc
int3
push
arpl
aaa
leave
mov
mov
mov
fcompl
fildl
loop
push
out
mov
out
pop
push
in
dec
mov
pop
je
popa
test
psubusw
fsubrl
xchg
mov
xor
jne
js
dec
std
inc
data16
jmp
mov
lea
punpckldq
int3
in
jns
inc
push
adc
or
loope
lods
mov
js
mov
xchg
jbe
imul
inc
jle
adc
xchg
sbb
jnp
mov
sahf
jne
ja
out
iret
ret
sbb
data16
inc
iret
je
ret
pop
push
push
mov
push
je
jp
jns
ja
xchg
rorl
dec
pop
ror
mov
cmpsl
sub
loopne
das
int3
mov
push
arpl
push
push
js
jnp
loope
pop
jecxz
mulb
jge
ret
xor
notb
outsl
jno
adc
dec
rcll
mov
adc
mov
cmp
loopne
sbb
std
xor
and
jo
xchg
xchg
dec
push
xor
cmp
sbb
adc
out
dec
dec
test
adc
js
push
or
stos
sub
fcomi
loopne
lea
mov
jae
push
repnz
clc
xchg
icebp
push
subl
aas
pop
js
sbb
repnz
or
push
cmp
or
inc
mov
loopne
add
mov
pop
push
test
sub
adc
mov
dec
mov
imul
or
dec
aaa
les
sti
into
repz
xchg
aas
and
imull
and
sub
in
push
xchg
jns
bound
fsubrl
add
stc
push
adc
imul
inc
fstps
dec
xchg
and
xchg
xchg
popa
dec
jo
cmc
mov
js
mov
nop
lahf
mov
in
sbb
xchg
movsl
inc
dec
xchg
dec
adc
mov
jo
inc
jns
loopne
cmpb
in
fmuls
ljmp
mull
jno
addr16
jbe
fdivrl
inc
ret
xor
cmc
inc
nop
sahf
and
adc
lock
dec
testl
test
cwtl
fucom
mov
ja
mov
loop
aam
jmp
inc
fstl
push
push
jno
pop
xorb
mov
mov
dec
dec
cmpsb
pop
xchg
pop
push
cli
jae
popl
xor
lret
imul
test
and
sarl
lcall
ja
clc
lea
and
int3
icebp
int3
inc
sub
popa
push
cltd
fisttpl
in
push
xor
lret
pop
fwait
xor
or
inc
mov
cmp
mov
lahf
jmp
push
xchg
sarb
bextr
jnp
mov
mov
cwtl
jbe
adc
test
fcmovb
leave
mov
jp
ret
sarl
cmp
sbb
cwtl
dec
sub
jmp
lahf
adc
insb
add
adc
push
enter
mov
gs
sbb
pop
cmp
notb
outsb
orl
cmpsl
and
scas
fscale
or
adcl
adc
xchg
pop
insb
pop
and
jge
ret
adc
sbb
mov
popa
xchg
push
out
je
aad
xchg
jo
push
inc
push
lahf
das
je
cli
add
int3
jno
xchg
xchg
pop
mov
lret
jecxz
test
lods
in
or
mov
icebp
xchg
push
adc
jp
xchg
mov
ror
orl
dec
or
jb
xchg
mov
cmp
pop
inc
mov
xor
cmp
jecxz
mov
adc
add
inc
jecxz
xacquire
xchg
enter
ds
push
mov
outsl
pushf
and
mov
fistl
xlat
and
popf
sbb
mov
aad
add
push
xchg
aaa
arpl
jmp
shll
xor
repnz
pop
out
sbb
dec
dec
inc
pop
sbb
repz
inc
jle
mov
or
jle
dec
pop
cmp
sti
inc
cmpsb
xor
or
cmp
daa
and
xchg
mov
pop
mov
jle
jle
and
mov
pop
push
and
mov
mov
inc
arpl
bound
sub
sub
fdivrs
cmp
cmpsb
daa
adc
xchg
dec
mov
bound
cld
dec
loop
mov
fwait
das
imul
dec
gs
mov
push
add
jecxz
cmp
rclb
es
mov
xor
inc
fistl
int3
jo
imul
xchg
xchg
lock
mov
inc
ret
push
mov
and
xorb
add
pop
and
adc
cmp
push
out
adc
icebp
adc
rorb
mov
into
in
adc
and
aam
shll
pop
std
into
out
cmpsb
sbb
mov
sbb
jp
jp
jae
jecxz
test
lods
out
fstpl
rclb
dec
mov
add
and
add
leave
and
lret
mov
xchg
mov
pop
std
jae
push
sahf
orb
xor
aam
enter
cmp
aam
sub
sbb
stos
aam
mov
add
je
loopne
movsb
inc
inc
stos
shll
smsw
pop
aaa
and
adc
and
sbb
push
cmpsb
pop
popf
mov
or
shlb
fdivp
les
inc
mov
loop
mov
dec
in
lock
cli
cmpb
mov
sbb
pusha
hlt
push
mov
mov
cwtl
jg
mov
or
push
mov
insl
out
inc
test
insw
jbe
jge
cmp
xor
out
dec
enter
sub
sbb
arpl
call
loop
and
test
xor
mov
call
add
push
sahf
dec
mov
pop
dec
movsl
push
enter
mov
test
jb
int
mov
iret
test
mov
and
xor
es
jl
jmp
das
aas
cld
jo
cli
and
push
outsl
mov
pmullw
add
or
ja
sbb
or
mov
pushf
mov
xchg
cmp
popf
or
jl
push
xchg
ja
add
sarb
stos
lds
mov
popa
push
std
mov
out
cld
dec
jmp
fildll
mov
or
pop
xchg
and
dec
jmp
push
and
hlt
add
outsl
pop
pop
das
fisubrl
ljmp
or
test
je
lock
fidivl
cltd
mov
xchg
in
mov
aaa
or
push
push
popf
in
dec
mov
and
popf
cmpsb
das
ds
lret
popa
mov
mov
stc
icebp
add
mov
fs
hlt
dec
jo
es
cs
loop
mov
pop
scas
jp
add
in
aas
pop
adc
gs
xchg
xor
cli
pop
outsb
insl
cmp
sbb
cli
sbb
inc
scas
sbb
mov
mov
divb
inc
push
sbb
fdivs
dec
xchg
mov
xchg
cltd
fs
mov
push
hlt
sub
ds
ret
adc
filds
out
inc
aas
call
repz
dec
stos
dec
mov
aas
aam
ljmp
xor
sub
dec
loope
icebp
push
dec
mov
loop
jmp
shll
shlb
fistps
jb
inc
in
and
cmp
loop
jle
das
inc
das
sub
xor
ret
adc
cmp
sbb
das
mov
cld
cmpsl
pop
or
inc
stc
pop
mov
push
or
je
stos
push
add
in
lea
pop
movsl
int
sub
add
test
leave
pop
call
in
lcall
pop
or
test
test
mov
int3
sbb
mov
jg
cltd
sahf
push
gs
add
movsl
bound
dec
mov
pop
jmp
out
xor
jle
mov
and
push
sbbl
add
add
movsb
push
clc
aaa
push
out
sbb
xor
js
jmp
into
inc
fldt
push
xchg
add
clc
mov
push
push
inc
cmp
sub
lcall
sbb
cwtl
das
sub
add
and
scas
iret
or
xchg
mov
or
out
pop
in
xchg
mov
push
pusha
daa
mov
mov
decl
rcll
scas
pop
cld
mov
push
leave
pushf
call
pop
or
fisttpl
shl
sbb
stos
jb
pop
xor
cmp
jecxz
or
in
rcll
outsl
stos
inc
or
push
mov
pop
mov
sub
fnstcw
sbb
sti
pop
adc
movsl
xchg
jecxz
push
push
and
hlt
push
fwait
add
inc
and
scas
leave
push
outsb
jb
xor
xlat
loope
addb
pop
push
xlat
insl
or
mov
xchg
inc
jae
les
jle
rol
adc
push
mov
filds
scas
mov
push
mov
mov
mov
mov
fwait
xchg
dec
xlat
addr16
and
mov
jo
cmp
hlt
loopne
sahf
imul
mov
jmp
pushf
mov
push
loopne
push
adc
or
into
ret
test
or
adc
jmp
sub
xchg
xor
insl
jg
es
and
jmp
leave
popf
jno
xchg
pop
rcr
cmc
adc
jno
sub
fnstcw
icebp
scas
imul
enter
or
dec
sub
rorl
out
fiadds
andl
stos
sub
inc
lret
enter
pop
test
mov
cmp
lods
pop
xchg
pop
movsb
mov
add
int
fnstcw
mov
add
fsts
std
mov
dec
lods
loop
sub
movb
xor
xchg
loopne
xor
cmpsl
lret
push
push
divb
ds
sub
jne
xchg
inc
clc
repz
fisttps
cld
jns
push
rclb
adc
mov
fnstsw
sbb
sbb
inc
sahf
xorb
in
mov
ret
push
sbb
sahf
mov
dec
inc
in
sti
jno
pop
daa
imul
mov
jns
push
or
push
test
jp
icebp
and
mov
fstps
ja
xchg
je
push
mov
add
cmpsb
jl
sbb
add
jb
jmp
js
push
xor
dec
jns
pop
sbb
dec
out
inc
mov
cmp
cmp
xor
ret
sub
and
xor
pop
imul
cmpsb
push
imul
xchg
sar
push
cld
loopne
stc
mov
scas
xor
sbb
lods
shr
add
jge
sti
clc
pop
aam
in
jp
lret
cmc
xchg
dec
test
ret
aaa
popa
push
inc
xor
xor
gs
pop
sarb
jae
lahf
add
cmpsl
mov
pop
mov
adc
fdivr
push
xchg
fldenv
inc
dec
jl
sbb
xchg
pop
and
scas
push
outsb
inc
push
jecxz
sbb
lret
pop
lcall
dec
push
dec
mov
mov
std
movsl
xlat
fmulp
sub
push
xor
bnd
xor
sub
data16
loopne
stos
imul
push
push
lcall
mov
imul
cmp
inc
sub
mov
jb
and
mov
dec
sub
and
int
push
cmp
rorb
mov
xchg
adc
jmp
pop
loopne
push
mov
lret
inc
push
sbb
aad
mov
popa
pushf
in
dec
bound
ss
xor
pusha
sub
sti
jbe
and
test
inc
and
loop
mov
sub
push
mov
cmp
mov
push
xorb
lea
add
pop
jno
arpl
enter
in
inc
nop
adc
lahf
outsl
or
dec
scas
sbb
fdivs
stos
mov
movsl
out
inc
adc
xor
std
pop
loopne
fstps
pop
adc
xor
xchg
fs
jbe
xor
enter
jns
dec
jle
lret
xor
dec
clc
push
test
jbe
inc
jne
inc
in
mov
lcall
and
mov
cli
push
cmpsl
mov
test
inc
add
add
filds
test
icebp
leave
xchg
sbbb
fbstp
xor
or
nop
cld
in
aad
loop
fiadds
jmp
bound
lret
inc
xor
jp
xchg
add
mov
sbb
mov
and
and
adc
out
xchg
mov
xor
sbb
fcmovb
sbb
cmpsb
imul
hlt
movsl
xor
sbb
pop
mov
inc
mov
imul
mov
cmp
sahf
pop
inc
int3
xchg
jo
mov
adc
xchg
and
xchg
gs
lods
pop
ds
adc
xchg
lds
sub
sub
xlat
sbb
mov
or
xor
sub
mov
xchg
cmp
jns
xor
xchg
fldt
cmovbe
cmp
out
lret
pop
pop
int
fcoms
pop
adc
movsl
rorb
mov
nop
mov
fcmovbe
sahf
das
adc
icebp
stos
insl
jne
in
fwait
pop
addr16
add
adc
aaa
sbb
xchg
inc
inc
in
and
in
xchg
cmc
ljmp
and
push
cmp
or
in
mov
out
and
xchg
mov
out
cmp
and
or
xor
out
dec
push
cmp
out
and
rorb
int
sub
sahf
or
inc
mov
fisubl
inc
or
rcll
aaa
pop
mulb
jge
jns
xchg
adc
mov
cmp
jmp
mov
pop
clc
rclb
mov
imul
mov
cmp
push
je
add
lret
pop
bound
xchg
js
shrb
cmp
and
jb
dec
std
pop
rcll
repnz
fisubrl
shlb
insl
clc
and
ret
jo
push
shll
rcll
addr16
adc
sbb
in
mov
cmp
lock
rep
sbbb
sub
push
xchg
addl
out
cmp
jle
mov
mov
lock
stos
shrl
jmp
test
xor
mov
out
mov
adc
sarb
jl
push
push
in
cmp
push
sbb
pop
cmpl
jo
jo
mov
jne
xor
popa
loop
mov
cltd
int3
pop
insb
push
dec
add
xor
shr
fmulp
ficoml
imul
sub
sbb
sub
leave
mov
jo
push
aam
rol
lods
dec
push
mov
jo
test
sbb
testl
aas
push
icebp
cwtl
in
shll
insb
mov
jns
fs
push
pusha
xchg
sbb
push
or
mov
call
sub
xchg
decb
sahf
rclb
pop
testl
ficoms
and
mov
mov
mov
and
dec
fsubs
mov
insl
jmp
lds
cmp
add
outsl
popf
rolb
jl
nop
cld
adc
sti
fistpl
jl
sbb
sahf
jle
sahf
cs
shlb
data16
dec
lods
mov
aad
add
mov
ret
sbb
aas
pop
pop
ffreep
xorb
add
dec
mov
or
mov
add
test
out
dec
stos
popf
fs
xchg
mov
jo
mov
fmull
pop
or
add
repnz
pop
mov
int3
cmp
xor
idivl
insb
fdivr
adcb
hlt
jle
popf
clc
pusha
jmp
adc
jmp
call
xchg
fs
cwtl
into
into
jecxz
shl
mov
mov
push
sub
aas
push
adc
mov
mov
cltd
add
shll
mov
movsb
pusha
icebp
adc
jns
test
inc
fistpll
je
jl
mov
je
push
cmp
adc
fldl
pop
lcall
movsb
pop
push
sub
adcl
stos
inc
push
lret
push
mull
insl
lods
sti
push
xchg
cmpsl
sbb
xchg
sub
xchg
out
mov
jbe
imull
adc
cmp
test
subb
sub
lcall
push
jmp
xchg
icebp
call
xchg
loop
in
mov
lahf
jb
cmc
testb
repz
lcall
divb
mov
adc
idivb
ja
movsb
test
lock
cld
jmp
xchg
movsb
out
insl
xchg
cli
pop
out
cld
mov
ljmp
push
lret
adc
sub
lahf
lcall
mov
nop
iret
jno
xor
push
or
cld
mov
xor
int
mov
aas
sbb
inc
jecxz
jg
stc
insl
imul
xor
in
mov
data16
insl
ljmp
out
fdivrs
mov
jle
sbb
stos
xchg
inc
mov
push
jecxz
jne
mov
inc
or
dec
lea
dec
jmp
daa
or
push
inc
inc
mov
or
push
xchg
out
push
repz
xchg
out
orl
call
push
mov
dec
jno
mov
dec
or
xchg
push
scas
pop
mov
fisubs
xor
jb
pop
test
insl
test
jo
or
movsl
cmc
pop
test
jae
outsl
cmp
loopne
int
cmpsb
jae
sti
xchg
andb
xchg
in
int3
inc
mov
jl
jge
in
imul
pusha
adc
inc
xor
cmc
sarl
jnp
dec
or
push
cs
mov
sub
out
ret
sbb
rcrb
inc
fistpl
aad
cmpxchg
cmc
inc
loop
lea
mov
fildl
test
lods
fnstsw
rorl
jnp
lcall
shr
test
stos
or
push
das
and
dec
inc
imul
mov
les
xchg
icebp
jbe
clc
inc
cmovs
fucom
mov
jmp
mov
in
adc
adc
mov
pop
lret
xchg
flds
pop
add
add
cmp
scas
lret
pop
jo
clc
lret
notl
mov
pop
ja
push
rolb
push
sub
scas
aaa
outsb
jbe
decl
sub
aas
or
jmp
jecxz
push
sbb
jl
lret
and
mov
xchg
mov
adc
fnsave
loop
mov
adc
xor
into
cmp
xor
js
loope
jp
mov
imul
pop
sarb
out
jp
push
inc
jle
cmp
inc
push
test
lock
jecxz
and
cmp
pop
insb
pop
cmp
add
dec
inc
int3
cmp
jae
stc
cli
outsl
ss
pop
lds
xchg
adc
sbb
xor
mov
or
cmp
dec
cmp
pop
stos
std
mov
pop
mov
pop
loop
js
loope
inc
xor
and
cld
in
xchg
testl
pushf
cmpl
mov
mov
repz
aad
add
jmp
gs
in
xor
cltd
jle
inc
lods
xchg
fiaddl
cld
sub
jmp
ja
sbb
and
mov
cltd
std
shl
or
mov
je
mov
subl
mov
arpl
sub
ss
cmpsl
imul
dec
xchg
mov
lahf
es
out
sti
repnz
lcall
cmp
jnp
ja
jno
sbb
loop
nop
add
int3
mov
loop
in
jmp
ds
or
jle
cli
fadds
adc
fiaddl
stc
cmp
xchg
adc
xor
xchg
je
fisttpl
je
or
cmpsb
sub
fnstsw
sti
pop
add
push
sub
inc
ficomps
mov
mov
in
les
popa
push
adc
jle
push
push
insl
xchg
adc
dec
arpl
sti
cmp
xchg
loope
jmp
mov
push
sbb
and
cmp
lahf
inc
mov
bnd
inc
add
mov
fst
add
mov
sbb
mov
inc
cmp
out
xchg
fsubrl
add
mov
mov
xor
add
push
fbstp
cwtl
jbe
test
dec
cs
aad
push
scas
inc
test
jne
fwait
lods
fisubl
jmp
test
pop
mov
xor
imul
lods
iret
xor
adc
mov
mov
imull
jnp
pop
sahf
or
lock
inc
loop
lret
pop
mov
ljmp
scas
mov
fbstp
notb
mov
add
sbb
sti
inc
xchg
sub
cmp
stos
add
sbb
sti
xchg
aam
rclb
daa
jg
movlps
fldenv
movsl
shlb
mov
mov
test
clc
xor
dec
out
dec
lds
test
adc
je
imul
sub
scas
mov
lret
out
lock
sub
pop
lcall
cli
push
js
and
dec
push
adcl
mov
xor
gs
mov
shll
enter
clc
js
inc
fdivp
mov
cli
in
push
addb
cmp
int3
dec
mov
mov
xchg
inc
jecxz
jmp
dec
mov
call
mov
loope
sbb
test
add
inc
scas
and
jbe
sub
cmp
jmp
mov
ljmp
fdivr
cli
pop
test
inc
sub
arpl
call
mov
fistpl
ja
shlb
repnz
lock
mov
adc
jne
imul
cmp
jbe
mov
adc
mov
adc
orb
mov
addl
nop
or
adc
test
sahf
cmp
adc
mov
jns
jle
dec
xor
inc
and
mov
in
xchg
pop
xor
mov
std
push
icebp
ja
rcrb
call
js
iret
push
cli
and
add
sub
jbe
dec
mov
sub
xchg
loop
sub
pop
bound
js
push
adc
lret
and
adc
cmp
ljmp
inc
dec
sub
push
jne
dec
sub
and
or
jne
xor
lock
imul
sub
and
lds
aam
rcll
mov
sub
cmp
push
dec
pop
or
xor
rcll
cmpsl
enter
in
ja
nop
push
jmp
and
xchg
cmp
in
daa
je
mov
jg
mov
pop
sub
and
cmc
insb
lcall
in
dec
aaa
lret
ds
jmp
shr
fistl
mov
insl
sbb
xorl
mov
jmp
inc
jns
jne
jo
es
je
sub
inc
mov
pop
inc
jb
cmp
dec
mov
xchg
pop
inc
pushf
imul
push
sbb
es
adc
in
int
bound
or
test
jmp
mov
ja
fnsave
push
mov
cmp
shll
ss
cmp
pop
jmp
lds
jmp
pop
pop
adc
loope
out
jbe
cs
lea
push
mov
loope
adc
or
int
dec
inc
and
test
pop
aas
xchg
lahf
mov
jo
cmpsb
xor
enter
aad
mov
cmp
sti
insb
push
mov
push
sbb
ja
jae
outsl
ret
xor
cwtl
stc
sub
js
lcall
test
mov
mov
cltd
stos
pop
shl
lea
fiadds
xor
movsb
lea
dec
scas
gs
lds
lds
ss
mov
cwtl
sbb
aas
pusha
xchg
cmp
fisubl
jae
scas
pop
out
pop
int3
js
xor
ret
ss
xor
in
mov
js
xlat
dec
mov
mov
mov
push
push
pop
push
mov
and
mov
pop
testb
out
or
ja
das
or
mov
xchg
sbb
in
addr16
shll
xchg
adc
mov
push
mov
lock
icebp
test
test
int
mov
sti
dec
xor
les
mov
int
sbb
rcl
add
dec
lret
loopne
fisubs
jns
jnp
mov
stos
lods
fistl
addr16
sub
mov
in
insl
enter
ret
fmull
cltd
les
imul
std
or
push
jbe
add
loope
cmp
mov
jle
ja
push
icebp
push
jg
add
movsb
xchg
insb
jl
cmp
leave
jge
mov
sub
mov
or
lds
cmp
cmp
popf
in
out
mov
xchg
inc
xor
lods
sub
jo
inc
or
push
cld
test
mov
dec
pop
mov
inc
sub
mov
sbb
dec
pop
cmp
push
mov
fs
push
stos
cmp
nop
out
fs
mov
addl
loopne
sbb
sahf
shll
inc
pusha
sbb
dec
jge
jae
sub
cmpsl
dec
insb
imul
test
ret
sbb
cltd
mov
jns
mov
fwait
dec
jle
jecxz
ret
lret
adc
and
and
mov
or
shrl
ret
jno
pop
xchg
push
xor
js
mov
stos
or
sub
into
jge
mov
hlt
das
pushf
dec
dec
adc
adc
in
cmp
ja
push
sbb
fwait
lock
xor
sbb
pop
sbb
hlt
ret
ljmp
ja
or
mov
xchg
push
mov
inc
lock
inc
jecxz
psrlq
cwtl
mov
xor
dec
jb
mov
push
cmp
js
add
pop
sub
pop
xchg
ficoml
test
and
cmp
push
es
push
jmp
sbb
fadds
adc
daa
ret
push
cmp
jg
lock
push
cwtl
mov
jb
fs
nop
and
jne
jle
dec
pop
cmp
or
imul
out
pop
cli
outsb
or
fisubl
jmp
imul
or
out
cmpsl
inc
idivb
xchg
stos
movsb
cmc
pop
push
andb
insl
ds
push
xchg
inc
popa
hlt
test
cmp
push
cmp
in
lock
cltd
mov
iret
xor
repz
mov
aam
cmc
jg
scas
pop
cmpsb
inc
scas
sub
fidivs
fnstsw
inc
pop
sbb
jno
xchg
sbb
in
cmp
mov
std
shlb
mov
mov
dec
pusha
sub
cltd
fistpl
xorb
frstor
cwtl
mov
popa
mov
mov
mov
mov
test
add
inc
lcall
ja
std
stc
mov
pop
rcl
leave
aas
fs
fistpl
jp
test
pop
jge
mov
shll
mov
dec
and
sarl
stc
fnstenv
dec
push
xlat
pushf
xchg
mov
in
cs
fwait
test
test
or
sahf
dec
jp
shlb
movsb
xchg
shll
rorl
sbb
sub
xchg
ret
notl
rcrb
testb
ja
inc
mov
xchg
daa
arpl
cmp
pop
add
leave
jl
scas
fists
outsl
sub
and
cmp
pop
jg
adc
and
xor
ret
dec
mov
inc
es
xchg
cli
mulb
and
jp
out
icebp
add
inc
pop
pop
lods
jge
negb
ficoms
adc
mov
dec
pop
adc
repz
dec
inc
imul
push
call
jo
subb
mov
pusha
addr16
fstpt
sbb
pop
sahf
xchg
es
add
dec
sub
loop
mov
imul
pop
pop
loope
clc
addb
lret
imul
push
cltd
mull
in
out
loopne
mov
ret
out
inc
pop
sub
js
sub
jns
pop
ss
test
iret
jg
idiv
adcb
push
add
jns
mov
xor
or
dec
push
push
mov
sub
fcomps
and
outsb
or
jle
popf
pop
and
mov
adc
lock
or
xchg
adc
add
ja
cwtl
scas
ljmp
imul
fistl
ja
pop
xchg
sub
sahf
xor
xchg
pop
sub
pop
sbb
adc
ja
inc
clc
xor
and
xlat
dec
enter
sbb
add
sub
or
cltd
mov
je
or
insl
xor
mov
jle
addr16
imul
pop
mov
and
jnp
mov
xor
inc
je
fstl
dec
fisubrs
jbe
dec
repz
xchg
jbe
out
jae
pop
lock
push
sub
adc
and
addr16
adc
pusha
int
cmp
scas
and
ret
xor
sbb
shlb
shrl
dec
dec
and
cs
fnsave
pushf
jmp
jnp
pop
out
flds
mov
stc
jb
div
imul
jb
sbb
scas
sahf
or
or
sub
fs
cmp
jmp
pop
lods
call
addl
rorb
test
sti
pop
mov
inc
shlb
stos
push
fisubl
jb
nop
dec
outsl
mov
pop
hlt
xchg
mov
out
popf
or
cmp
and
clc
enter
jp
outsb
mov
xor
cmp
sub
dec
and
jno
mov
lock
cmpsl
orb
mov
testl
cmp
aaa
cmp
cmc
shr
push
xchg
gs
mov
sbb
jae
mov
adc
push
push
aaa
loopne
insb
int
xor
aas
push
add
lea
cmpb
ret
in
mov
lea
test
sbb
mov
push
push
cmpsb
adc
cmpsl
ljmp
jge
xchg
cmp
inc
adc
cmc
pusha
lahf
fld
mov
popf
push
sub
lea
ljmp
push
ljmp
xor
rorb
jbe
jge
mov
popf
mov
pop
sub
outsb
sarb
dec
rorb
jno
sbb
rcr
sbb
jmp
rorb
imul
mov
xor
int3
adc
lret
cmp
or
popf
out
divb
xchg
out
xor
mov
add
jg
shll
jp
add
pop
sbb
pop
mov
imul
int
loope
lahf
dec
push
sbb
sbb
fld
push
push
adc
call
xor
adc
ret
or
mov
jecxz
lods
add
inc
gs
mov
jae
roll
cwtl
jo
jmp
or
dec
jmp
inc
icebp
dec
dec
sbb
pop
loope
push
out
test
mov
xor
repnz
mov
fwait
int3
lahf
cmp
lea
addr16
jg
aaa
dec
aad
jle
pop
push
pop
clc
push
stos
mov
xor
cvtps2pi
lcall
cld
sbb
cmc
add
addb
inc
inc
xor
int3
arpl
out
popf
fwait
test
js
jp
fstpt
mov
addr16
fwait
lods
stos
imul
outsb
xchg
jecxz
xchg
nop
rcl
pop
sbb
idivl
lock
sbb
push
push
mov
lret
test
sarl
adc
nop
testb
test
movsl
add
pop
ret
mov
mov
pop
ss
xor
pop
cmp
test
jno
sub
leave
enter
mov
dec
ret
cmpl
sub
popf
adcb
pop
sub
ljmp
pop
sbb
sub
dec
shll
sbb
cmp
pop
in
pusha
insl
jb
adcl
cs
leave
jle
test
arpl
cmp
shlb
dec
sbb
push
xchg
js
test
xor
mov
dec
push
inc
push
inc
mov
sbb
dec
ror
jne
icebp
fwait
add
adc
mov
pop
jo
repnz
pop
jbe
imulb
call
adc
adcb
pop
negb
push
inc
mov
aad
jno
push
lcall
jle
push
sbb
push
stos
adc
enter
pop
and
jno
pushf
xchg
inc
hlt
pop
in
sarl
testb
stc
sub
jp
test
orl
lds
data16
in
data16
scas
out
add
ss
add
push
push
xchg
js
shll
jg
scas
mov
jl
ss
ffreep
dec
data16
ss
and
mov
sbb
inc
adc
ss
inc
pop
sub
sahf
gs
andl
outsb
dec
mov
cmp
and
lods
inc
mov
inc
das
stc
adc
mov
jge
jns
pushf
mov
repz
dec
movsb
and
or
fwait
xchg
fidivrs
mov
nop
int
push
outsb
inc
rcrb
outsb
add
pop
dec
push
iret
stos
adc
lret
mov
xor
pop
mov
and
jno
sbb
jg
jle
xchg
inc
xchg
mov
pop
popf
cmp
stos
and
xchg
cmp
and
adc
dec
mov
jae
xchg
lcall
adc
movsb
sahf
xor
iret
dec
lock
int
lds
sub
call
arpl
popf
packssdw
pop
out
into
out
cld
imul
leave
cmpsl
call
in
mov
xchg
fisubs
sbb
es
out
dec
dec
scas
mov
into
mov
add
xor
dec
enter
jecxz
jnp
jo
loopew
ja
fiadds
xor
push
push
rcrl
cmpsb
xchg
outsb
mov
inc
enter
loope
adc
mov
push
sub
test
out
sahf
dec
data16
mov
movsb
in
js
xchg
or
sbb
pop
aad
out
mov
js
out
int3
pop
lods
lret
cltd
lods
sub
loopne
movsb
out
into
inc
mov
mov
stos
lret
out
xorb
outsb
scas
fldl
shrd
xorl
xchg
dec
jbe
sub
xor
push
push
mov
sbb
stc
pop
or
ret
xor
mov
stc
imul
insl
adc
jmp
mov
lret
sub
xor
push
mov
test
enter
in
cli
cmp
in
jg
add
xchg
pop
aad
es
jno
mov
sbb
sub
lods
daa
repz
pop
lds
mov
out
out
scas
movsl
and
leave
sub
add
or
sbb
adc
int3
lea
jbe
xor
std
push
mov
sub
repnz
mov
mov
sbb
stc
jg
and
ret
sbb
mov
mov
push
jl
movsb
js
mov
xor
imul
push
scas
outsl
cmc
mov
sbb
jae
mov
xchg
mov
push
lock
jno
loopne
mov
andb
sahf
adc
call
clc
fwait
clc
imul
mov
xor
mov
cli
outsb
test
push
out
outsb
xor
pushf
mov
cli
bound
lcall
daa
dec
cmp
adcl
cmpl
sbb
pop
mov
pop
adc
decb
ret
test
xor
in
mov
js
cs
xlat
push
inc
scas
ret
leave
push
stos
popa
push
xlat
or
pop
hlt
fs
daa
inc
dec
cmpsb
pop
ljmp
js
mov
sbb
ret
pop
push
mov
outsb
mov
cli
sub
in
jns
out
sub
mov
bound
lcall
mov
lock
mov
adcb
dec
das
pop
mov
dec
fidivl
mov
xor
lea
jl
movsb
mov
cltd
adc
inc
push
insb
inc
dec
pop
sub
in
sbb
leave
dec
js
mov
sahf
pop
sahf
movl
or
push
jb
push
cmp
sbbb
xchg
xor
call
out
xor
out
jge
xrelease
jno
and
outsb
mov
punpckhwd
cs
sti
push
jnp
jge
inc
or
sub
in
sbb
xor
add
ss
xchg
push
fimull
cltd
int
cmc
mov
adc
stos
inc
add
mov
dec
movzwl
and
xchg
std
mov
pop
pop
mov
push
dec
dec
clc
enter
and
push
mov
mov
jbe
test
mov
lcall
les
mov
adc
sbbl
jle
cltd
mov
add
outsl
xchg
jo
stos
xchg
inc
xor
mov
xchg
lret
in
sub
jmp
xor
push
pop
jle
xchg
nop
mov
mov
adc
sub
mov
mov
pop
sub
add
imul
sbb
sub
lahf
jle
mov
mov
pop
xchg
notb
adc
xor
pop
jbe
mov
sbb
fidivs
cltd
push
cmp
mov
fildl
mov
adc
into
mov
ss
jbe
popl
xlat
out
pop
push
jns
xlat
lahf
pop
lds
out
std
fbstp
inc
pop
push
xchg
aad
and
pop
cmpsb
sarb
test
xor
sti
movsb
in
sub
inc
xlat
dec
test
daa
lods
and
push
xor
sbb
mov
pop
mov
adc
adc
lods
sbb
leave
xchg
xor
xchg
mov
shrl
xchg
into
imul
rorl
in
push
test
and
jmp
repnz
fadd
stos
in
popa
filds
in
lret
inc
enter
dec
out
les
imul
push
jbe
sub
pushf
jmp
inc
dec
cmc
mov
lcall
xor
xchg
rcrb
shl
int
jo
push
das
sbb
scas
xor
fucom
and
inc
stos
or
inc
and
mov
lods
push
add
pop
je
scas
jecxz
out
jb
inc
fnstenv
push
pop
jmp
push
out
lea
out
cmp
ret
cmp
enter
notl
or
push
cltd
sub
pop
lret
test
sub
mov
pop
das
pop
popf
mov
rclb
jmp
out
and
je
jg
out
dec
out
mov
sub
sbb
addr16
pop
jo
leave
adcl
xchg
dec
cmp
scas
cld
adc
repz
idivl
lea
pop
das
les
roll
dec
sti
shrl
sbb
shll
repnz
xor
mov
into
add
mov
mov
es
push
pop
repnz
and
outsl
shrl
stos
cmpsb
cmp
in
and
dec
loopne
sbb
insb
lahf
imul
add
repz
in
cltd
out
enter
jb
and
inc
push
ljmp
fcoms
cmp
jecxz
stos
pop
aas
cltd
pop
push
mov
repz
inc
jle
inc
pop
icebp
dec
push
shrl
xchg
xchg
xchg
sub
loop
adc
mov
adc
mov
inc
out
xor
rcrb
addb
mov
dec
mov
lods
stos
ret
push
call
adc
test
leave
cmp
push
jo
or
sbb
cmpsl
mov
das
sarb
inc
pop
cmc
scas
add
xchg
ficoms
push
fs
and
std
jg
and
xchg
adc
cmp
ds
or
xchg
jne
je
ja
cmpsb
fstpl
mov
notb
mov
mov
aad
fs
jne
and
hlt
mov
mov
aam
jbe,pt
in
cld
cmp
pop
scas
dec
sub
dec
insl
mov
jbe
dec
ljmp
mov
scas
out
imul
fcomi
cwtl
aad
xchg
xchg
inc
movsl
xchg
lahf
adc
in
jo
fadds
mov
cmpsb
outsb
pop
mov
lods
dec
ljmp
mov
into
pop
fists
push
int
mov
lsl
fildll
out
cmp
xor
inc
pop
push
dec
add
sub
ficoml
call
cmc
xor
dec
pop
jne
xchg
rcrl
fcmovu
clc
sti
and
les
and
adc
rolb
dec
xchg
pop
dec
and
mov
pop
js
mov
sub
xchg
loopne
pop
cltd
sub
dec
int3
aaa
and
xchg
cmpsl
pop
mov
dec
cwtl
mov
inc
dec
xchg
mov
fimull
ja
jle
divb
std
or
push
dec
loope
push
js
dec
ja
sub
insl
sbb
lret
jae
push
ja
dec
xchg
or
jle
xor
jb
adcb
int3
or
or
movsl
jnp
sub
movsl
jns
inc
ss
in
enter
mov
adc
and
jne
xor
cmp
and
lcall
imul
shlb
sub
push
push
shrb
push
push
cld
aaa
pusha
imul
into
jle
adc
in
dec
popa
mov
std
arpl
ret
jecxz
jp
inc
jp
cmp
stos
and
cmp
push
js
jns
pop
loopne
xchg
loope
pop
clc
mov
xchg
pop
loopne
icebp
mov
add
sub
adc
in
inc
push
push
int3
xchg
inc
xchg
int3
scas
adc
in
cmpsb
out
xchg
enter
ja
cmp
loop
cli
ficompl
xchg
inc
sahf
inc
dec
dec
js
stos
lahf
daa
loope
leave
xor
rorb
out
shrb
arpl
fstpl
mov
gs
and
push
xchg
push
sub
repz
fs
and
mov
insl
pop
int
and
or
lds
pop
ja
push
push
xchg
adc
insb
sbb
leave
ja
sub
movsb
mov
gs
xor
add
mov
sub
mov
test
lea
push
into
in
iret
and
xchg
add
sub
mov
nop
and
daa
pushf
or
enter
cmp
mov
shrb
ss
mov
cmp
or
cmpsl
push
cmp
jae
dec
xchg
dec
or
xor
xchg
int3
in
stos
outsb
mov
cmp
cmp
or
jns
test
or
jp
filds
cmp
mov
insb
mulb
imul
out
mov
cmp
in
cmp
lea
shll
movsl
rorb
popa
in
sbb
xchg
in
mov
ja
or
sbb
jbe
pmaxub
ret
sbb
lahf
push
cld
add
pop
jecxz
sbb
dec
jno
pusha
sti
or
fwait
sbb
ss
es
mov
loop
out
xor
ret
jb
pop
inc
andl
pop
jge
aaa
andb
jmp
and
lock
mov
xchg
pand
adc
sbb
pop
sub
or
ljmp
out
dec
repnz
cli
mov
arpl
jnp
adc
add
sub
aad
adc
aaa
popa
aaa
adc
mov
pop
push
nop
inc
popf
int3
lods
sbb
mov
jo
cmpsl
call
je
enter
cli
or
adc
je
fisubs
arpl
push
je
push
sbb
clc
or
ficoml
mov
push
cmp
js
xchg
enter
adc
xchg
pop
pop
dec
sub
lret
jp
jno
pop
dec
add
pop
and
dec
lods
jg
pop
pop
mov
mov
aas
imul
lds
mov
push
scas
insb
leave
push
xchg
rcll
jae
cmp
inc
pop
je
mov
into
cmpsb
daa
jbe
inc
pop
push
daa
outsl
cli
pop
cmp
adc
stc
adc
fs
dec
mov
adc
push
jle
iret
pop
push
test
fwait
fwait
mov
fnsave
dec
xor
mov
and
or
into
sar
push
das
jmp
jle
adc
jbe
mov
jb
ljmp
inc
es
fsub
pop
cld
mov
cltd
icebp
mov
mov
and
shl
mov
dec
xchg
ja
xchg
test
sti
sarb
mov
lret
mov
cwtl
push
nop
mov
mov
andl
jae
les
mov
pop
in
andl
sub
out
jl
pop
pop
xchg
popf
clc
mov
push
sub
mov
push
mov
in
inc
rol
nop
mov
xchg
mov
cwtl
dec
cld
mov
push
pop
ds
push
lahf
and
inc
or
sub
dec
push
mov
out
insb
lret
in
jecxz
jp
cmp
sub
adc
jbe
imul
inc
sub
nop
dec
pop
cmp
push
pushf
pusha
imul
jbe
mov
mov
fsubrl
pusha
and
mov
add
xor
xchg
loopne
mov
movsl
jo
or
out
sar
inc
push
iret
dec
or
test
xchg
outsb
cld
or
stos
and
jno
jmp
pop
mov
or
jne
sahf
xchg
ficoms
or
dec
rcl
xchg
mov
in
jle
mov
loopne
fs
and
jg
ds
mov
das
fwait
pop
push
mov
aad
add
ss
call
fwait
mov
aam
inc
mov
mov
rorb
mov
ret
mov
inc
adc
mov
gs
pushf
ret
lea
mov
sbb
dec
out
add
cmp
push
xchg
pop
das
jo
mov
hlt
mov
push
into
xchg
sbb
push
ss
pop
jo
leave
inc
mov
movsl
pop
je
movsl
lock
aaa
por
xchg
or
pushf
gs
das
mov
mov
pop
adc
loop
jp
cmp
into
push
mov
sub
lock
mov
hlt
ret
int
mov
pop
je
push
sub
push
ljmp
or
dec
imul
xor
fistl
pop
adc
lret
mov
daa
nop
mov
sub
mov
orps
inc
push
mov
movsl
jo
pushf
stos
pop
push
popf
arpl
inc
push
xchg
mov
stos
imul
addb
lret
inc
stos
jb
shrb
in
pop
xchg
sahf
hlt
nop
push
pop
xchg
outsb
insl
in
xchg
mov
xlat
movsl
xchg
movsb
pop
pushf
sub
cmp
jp
mov
add
cltd
cwtl
or
fucomi
pop
mov
ljmp
cmp
adc
xchg
cmpl
jg
inc
repnz
and
fdivrl
pop
mov
cmp
or
inc
push
and
mov
shlb
cmp
mov
or
pop
lahf
popf
push
inc
gs
pop
mov
lock
jbe
mov
aam
push
test
leave
jne
cltd
insl
mov
lods
adc
adc
mov
lods
adc
cmp
adc
xchg
gs
hlt
dec
pushf
xchg
ror
aas
sbb
pop
std
cs
mov
jne
ss
out
cmc
or
ss
roll
jnp
cmp
mov
lret
sbb
xchg
cmp
in
testl
add
test
out
js
imul
popf
dec
inc
test
or
clc
movsb
dec
clc
mov
fists
dec
dec
push
sbb
lret
cmpsb
int
and
sub
mov
pop
and
test
out
pop
push
aad
sub
and
push
lods
cmp
sbb
fsub
push
mov
pop
ret
cwtl
or
sub
enter
cmpsb
fnstsw
mov
aad
add
out
pop
push
lods
in
lods
fmull
loop
xchg
pushf
and
mov
jns
lret
jmp
scas
jb
das
xor
icebp
adc
cmp
insw
mov
pop
adc
stc
ja
xchg
into
xchg
aad
pushf
icebp
mov
enter
pop
and
stos
xor
rol
xchg
out
mov
sahf
mov
add
dec
mov
xor
xchg
int
pusha
cmp
push
out
mov
jl
mov
mov
fistps
mov
xchg
sbb
xchg
inc
or
mov
out
inc
icebp
test
xchg
push
inc
lcall
inc
mov
repnz
int3
inc
nop
popf
add
fstpl
sar
into
mov
dec
mov
subb
push
es
cwtl
mov
outsl
sub
cmp
fcmovb
add
cmp
jl
int3
insl
out
popf
jle
rorl
enter
test
loop
add
sub
dec
dec
xor
pop
leave
adc
sbb
mov
rcrb
mov
cs
pop
jne
inc
push
pop
sub
rcr
jecxz
loope
addr16
shrl
outsb
sub
fdivrl
mov
xor
popl
push
add
dec
shrb
sarb
jae
lahf
inc
or
in
call
push
call
jns
outsb
jge
bound
ss
lahf
pop
mov
ret
movsb
icebp
xchg
sbb
and
xchg
mov
cltd
jg
pop
icebp
popa
pop
mov
and
lcall
and
cmp
pop
loopne
xchg
ret
data16
js
insb
clc
xchg
sti
jns
jbe
out
mov
or
xchg
inc
aad
sub
jg
out
push
jp
clc
and
sbb
cmp
daa
mov
mov
imul
fwait
jl
sbb
out
mov
lea
arpl
push
andl
lock
dec
add
adc
outsl
mov
call
push
mov
jmp
imul
push
hlt
pop
out
dec
jl
sahf
adc
cmp
js
fwait
lret
shlb
outsl
orl
mov
push
mov
movsb
pop
aas
pop
popa
push
sub
or
pop
mov
xchg
dec
insb
sahf
mov
mov
ret
icebp
xor
ja
adc
scas
loopne
aaa
mov
popa
icebp
cwtl
into
es
mov
lods
pop
out
leave
cmp
mov
pop
mov
arpl
movsl
xchg
mov
imul
xorl
pop
popf
ret
insl
pop
sbb
ret
mov
adcb
lods
lret
add
jmp
dec
add
hlt
int
ret
inc
lea
shrl
cwtl
addr16
push
js
outsl
xor
clc
fwait
jp
xor
push
and
outsb
ret
mov
nop
movb
adc
fsubl
out
mov
push
and
sbb
sarl
push
rcll
fistl
push
sahf
dec
je
jb
cmpsb
mov
aad
xor
push
xchg
add
insl
inc
aad
inc
mov
fs
icebp
sarl
movsb
xor
les
bnd
mov
jbe
dec
cmpsl
xchg
xchg
adc
js
lea
enter
xchg
aas
fists
pop
testl
and
add
test
adcb
out
adc
sub
xchg
rcll
in
mov
add
mov
fisttps
push
popa
push
arpl
mov
mov
xor
and
inc
stos
rcrl
cmpsb
hlt
cmp
mov
cmp
fcom
fwait
mov
out
popf
pop
jge
cmpl
jp
shrd
int
sub
push
jne
or
dec
dec
pusha
outsl
pop
xchg
hlt
test
test
xor
xchg
nop
addr16
mov
pushf
mov
jmp
xchg
mov
insl
test
jbe
ja
and
push
and
aas
insl
sbb
jmp
xchg
fs
hlt
into
mov
xchg
or
psubsb
mov
add
cmpsl
subl
dec
cmp
mov
mov
mov
cld
push
mov
or
iret
jns
push
mov
std
push
int3
xchg
push
xchg
mov
sbb
jbe
dec
test
sub
mov
hlt
fadd
mov
push
test
test
loope
pushf
or
lret
cmp
clc
pop
sub
cltd
push
xchg
shll
add
out
add
cwtl
or
punpckldq
fcmovnbe
cwtl
pop
push
hlt
mov
and
cmp
adc
js
mov
and
add
pop
jl
lea
mov
push
cmp
sbb
inc
xor
addl
pop
jge
push
adcl
and
das
jo
dec
leave
xor
aas
sbb
or
and
push
xchg
mov
and
mov
sub
in
inc
mov
mov
cld
out
ret
push
cli
mov
ljmp
adc
test
xchg
adc
call
inc
lret
arpl
dec
push
mov
adc
mov
sbb
add
ljmp
scas
fldt
sbb
jmp
sub
adc
mov
sti
dec
adc
push
push
jge
pop
or
data16
rolb
xchg
shrl
mov
sbb
out
xor
clc
pop
aad
xor
pop
inc
rcl
andl
sbb
or
inc
in
and
fisubs
mov
mov
mov
lcall
roll
inc
mov
add
ret
bound
push
jno
mov
in
dec
icebp
adc
into
and
sub
adc
cltd
and
ja
negb
enter
adc
adc
clts
scas
mov
xor
movd
lods
xchg
and
jge
mov
je
shrb
int3
adc
ret
push
idivb
ficoml
push
or
lea
push
movsb
jg
mov
add
out
nop
fisttpll
clc
daa
xor
sub
pop
mov
mov
lahf
in
push
mov
dec
test
cmp
add
push
cmp
data16
add
xor
or
push
push
mov
fdivrl
test
hlt
aas
pop
sbbl
push
pop
cltd
mov
das
xor
dec
lcall
cmp
push
cld
enter
jb
loope
push
xchg
jbe
xchg
and
rol
sbb
ret
repnz
sahf
out
aaa
neg
sbb
and
sbb
iret
rclb
rcrl
push
mov
and
aas
mov
addr16
out
and
ds
or
jge
testl
inc
ja
hlt
mov
mov
pop
xchg
and
dec
mov
adc
and
xchg
pop
lea
push
imul
in
fistps
sub
lret
mov
int3
and
cs
repnz
adc
lahf
rcr
adc
loop
in
inc
xor
and
pop
fs
icebp
and
in
jo
push
pop
aad
dec
ret
pushf
inc
ljmp
pop
mov
and
mov
sub
dec
sub
out
jne
std
lock
fists
lcall
pop
pop
inc
dec
cmp
repz
xor
mov
sahf
mov
inc
or
pop
pop
mov
pushf
ja
fstpl
xor
mov
push
ret
mov
iret
cmpsb
sub
arpl
mov
inc
push
fiaddl
aaa
mov
cmp
or
mov
mov
or
lahf
xadd
adc
xchg
lods
ret
fwait
push
sub
fwait
xchg
xor
into
test
lds
or
cld
stos
cmpsl
sbb
or
and
cltd
dec
notb
std
fistpll
rcr
xlat
push
jb
cld
insl
pop
push
adcl
call
inc
fisubl
and
cmpl
insb
pop
js
scas
or
loopne,pn
in
fcmovnb
jg
push
rclb
aas
mov
mov
or
fucomip
shl
or
movsb
rclb
adc
jo
ficoms
mov
mov
or
xchg
mov
sbb
imulb
or
inc
jecxz
dec
mov
dec
mov
mov
rol
mov
and
jmp
jecxz
add
mov
aaa
and
jbe
xor
leave
sub
dec
push
popf
push
andl
test
fs
lret
sbb
xchg
push
sbb
push
shrl
xchg
shrb
xor
cltd
jne
xor
addl
push
mov
push
mov
arpl
movsb
popf
push
mov
stos
cmp
inc
mov
push
outsl
shll
aaa
mov
jbe
mulb
rorb
jb
das
adc
and
mov
mov
cltd
call
mov
dec
fwait
shlb
fisttps
cmp
and
sti
and
inc
pop
rorl
mov
popa
inc
sub
mov
insl
mov
fisubrl
push
outsb
adcb
jecxz
mov
repz
adc
lods
mov
fdivr
popa
int3
sbb
pop
jns
cmp
or
sbb
mov
cmpsb
push
scas
mov
add
inc
jb
out
mov
xchg
push
mov
xlat
das
or
pop
repz
fidivrs
ret
and
jb
insl
or
out
and
inc
test
inc
icebp
lods
mov
jae
jb
sbb
lods
mov
mov
mov
sbb
inc
xchg
shrl
mov
mov
inc
dec
lret
cmpl
push
dec
int
imull
mov
fwait
cmp
rorb
das
movsl
sbb
sbb
ljmp
cwtl
stc
pushf
dec
or
call
mov
loope
cmp
shrb
xor
cmp
lea
push
and
cmpsl
or
movsb
popa
lods
cmpsb
sub
lds
xor
int3
mov
mov
pop
iret
pop
and
cs
pop
mov
sbbb
call
fdivrl
movd
in
jg
sub
pop
aas
in
pop
clc
push
xor
addb
and
int
popa
adc
sub
jg
jne
push
and
daa
xchg
outsb
and
enter
fadd
ret
add
outsl
mov
sub
sbb
test
push
push
inc
sbb
dec
cmp
sbb
notl
pop
pop
jecxz
neg
sbb
sahf
lret
out
lods
adc
sbb
dec
outsb
imul
arpl
and
call
ss
out
xchg
je
mov
xlat
inc
mov
mov
push
nop
dec
aad
adc
fmul
enter
push
popl
dec
pop
sahf
movsl
or
push
cmp
insl
push
fs
sbb
fs
ljmp
in
lret
ljmp
add
or
sti
lcall
enter
andl
xchg
shll
add
out
es
push
popf
cmp
lods
mov
movsb
dec
or
sub
sbb
adc
pop
sbb
sbb
push
fistps
adc
call
sbb
cmp
test
ret
dec
in
adc
pop
xor
or
inc
sbb
test
sbb
sub
mov
lods
ja
inc
ss
mov
jecxz
stos
add
pop
pop
scas
cmp
rcll
push
ficompl
push
adc
mov
pop
mov
aam
jno
xor
xchg
aas
push
sbb
lock
or
jnp
addb
dec
add
je
popf
push
outsb
fmuls
inc
cmp
sub
fstpt
pop
mov
loopne
enter
dec
std
out
mov
and
sti
jge
aad
sub
xchg
cld
test
ljmp
pop
insb
stc
lock
stos
fsubs
mov
pop
sub
xor
push
out
in
scas
ss
jg
mov
fsubrl
imul
paddb
xchg
gs
mov
inc
shrl
ret
sub
out
shll
imul
lds
cmpsl
and
or
aaa
add
pushf
addr16
int3
les
mov
js
mov
mov
mov
push
and
xor
xorl
dec
cmp
icebp
jmp
push
jno
mov
xchg
add
or
push
mov
xor
push
popa
or
cmp
add
stos
sbb
cmp
cmp
adc
cmp
mov
pop
add
outsb
mov
mov
int
into
cmp
sti
rcrl
jbe
data16
fisubs
dec
mov
push
fimull
ja
add
fdivs
andb
fbld
cmp
cld
jle
adc
push
mov
push
iret
inc
test
stc
clc
jle
xor
arpl
jl
cmp
add
xor
mov
aaa
mov
xor
jbe
out
leave
into
jmp
mov
sbb
imul
pop
sub
jg
jne
loopne
push
xchg
push
inc
xlat
sub
sahf
mov
pop
nop
repnz
add
adc
popa
mov
pusha
fmuls
mov
fidivrl
adc
mov
pop
jae
dec
std
mov
or
xlat
mov
ret
sbb
jp
xor
movsb
or
stos
and
mov
xchg
cmpsb
fs
sbb
test
sbb
out
mov
out
or
test
movntps
or
movsb
out
out
adc
ret
insl
cmpsb
lret
mov
int3
adc
ret
push
out
push
jne
sbb
mov
push
or
push
outsl
xchg
cmp
add
test
arpl
int
jmp
shr
fiadds
dec
mov
xchg
imul
je
test
cwtl
dec
sbb
xchg
cmp
pusha
or
mov
adcb
test
mov
jae
movsb
dec
out
dec
lcall
inc
arpl
push
jl
f2xm1
ss
bound
xchg
mov
sbbl
pop
fcoms
jno
jbe
or
pop
mov
fwait
jecxz
inc
or
pop
popf
pop
cs
jg
and
outsl
dec
or
jae
xchg
jecxz
sub
or
mov
or
arpl
xchg
add
ja
or
fidivs
cwtl
xchg
xor
dec
andl
lahf
sbb
xorl
cs
xor
xor
hlt
add
rclb
call
and
inc
nop
dec
scas
inc
cs
es
ss
adc
cs
xor
outsl
cmp
push
dec
add
mov
subb
push
outsl
jecxz
mov
in
in
cmc
stos
lds
and
aaa
lret
fcomi
loope
or
out
mov
xor
and
xchg
jle
push
jmp
aam
adc
mov
xchg
ljmp
movsb
call
lea
push
xorl
mov
or
popa
cmp
sbb
xchg
rol
pop
subb
push
das
pop
mov
dec
xchg
stos
mov
adc
call
push
idivb
loop
loop
scas
jle
or
outsb
cmpsl
and
or
xchg
mov
in
and
icebp
cli
sbb
je
mov
dec
loope
push
pop
repz
or
hlt
adc
fwait
mov
adc
jb
mov
notb
mov
rcr
fdivrl
mov
cltd
push
clc
leave
pop
int
lock
stos
mov
repz
push
out
mov
push
pop
jecxz
pop
cld
out
and
or
xchg
xchg
lods
add
loopne
rclb
inc
mov
hlt
dec
mov
mov
fldl
pop
mov
lret
mov
mov
xchg
xchg
pushf
div
lcall
icebp
in
jnp
js
in
jecxz
popl
call
adc
push
xchg
pop
jbe
xchg
ret
popl
in
cmp
lea
mov
pop
notb
inc
andb
cmp
lea
shr
lods
inc
push
aaa
repnz
xchg
mov
jge
outsb
jge
adc
gs
arpl
decb
daa
xchg
inc
push
cmp
push
std
mov
mov
mov
mov
pop
in
dec
jno
in
xchg
jbe
and
sub
test
push
cwtl
test
rcrb
fdivs
das
fcom
stos
pop
repz
sti
cmp
call
mov
pop
mov
xchg
das
test
sbb
sbb
pop
loopne
dec
mov
sti
insl
cli
cmp
jb
xor
repnz
adc
or
jbe
sbb
add
js
or
xchg
bound
and
js
mov
lock
sahf
imulb
bnd
idivl
cmp
je
dec
push
sub
sub
mov
lds
lret
dec
addl
movsb
aaa
testb
test
inc
pushf
nop
push
add
mov
out
pusha
cmp
or
test
insl
cs
add
fwait
mov
imul
shlb
push
mov
stc
imul
dec
lods
and
or
mov
cmpsb
cmp
xchg
pop
cwtl
or
aam
cltd
aam
stos
jmp
idivl
and
push
insb
pop
popf
fldl
aad
imull
stos
jns
adc
jno
jg
into
xor
mov
push
lahf
popf
pusha
cmpsl
and
add
pop
inc
into
pop
in
aas
ds
dec
dec
fbstp
xchg
sti
xchg
xchg
push
jg
dec
out
stos
fldenv
mov
mov
lret
aaa
aad
or
adc
sbbb
ret
add
inc
imulb
shlb
int
subb
or
outsb
or
sbb
mov
push
fsubrs
ja
loop
mov
mov
pop
sbb
shlb
adc
ud1
fistps
nop
lea
scas
subb
jae
iret
push
push
popa
and
xor
push
lcall
and
jns
push
mov
ljmp
or
mov
push
pop
rcrl
jmp
movsl
in
loope
lret
and
pop
jl
add
xchg
dec
mov
cmp
pop
add
test
mov
cltd
dec
aas
dec
repz
sub
shrb
call
pusha
nop
and
push
mov
xchg
cmp
popf
mov
ja
xchg
jle
iret
cmp
loop
dec
sub
enter
fs
je
mov
adc
aaa
fs
mov
jmp
jne
adc
lcall
add
cltd
cmpsb
insl
jg
cwtl
and
or
pop
aas
and
push
scas
fsubp
sbb
test
cwtl
add
into
xor
cmp
mov
aam
mov
mov
subb
and
std
push
mov
jbe
fnstsw
aad
out
sbb
rcrl
xor
scas
pop
mov
fucomi
lahf
jmp
lcall
es
loope
mov
inc
mov
sub
inc
pop
add
lcall
dec
dec
es
popa
push
fbld
out
xor
cltd
jne
leave
fbld
dec
pop
mov
test
popa
adc
dec
sbb
xor
fmulp
pop
sub
ds
dec
xchg
jl
sub
fcmovb
mov
mov
int3
jecxz
add
popa
xchg
jnp
mov
and
pop
pusha
ja
ss
cli
cmp
mov
and
xor
sbbb
xchg
fcmovnbe
xlat
jg
loop
xchg
lock
adc
call
inc
stc
push
daa
enter
jle
cwtl
cmc
scas
into
cmp
cli
movsb
stos
ret
jp
lcall
mov
lods
movsb
test
lock
mov
pop
cmp
mov
xor
pop
sbb
stc
mov
arpl
push
test
jle
add
dec
lret
xlat
scas
pop
popa
xor
inc
lret
mov
fiaddl
enter
mov
lea
cld
ss
shrb
paddb
pop
cmp
mov
mov
xchg
xchg
mov
das
inc
cmpb
sub
mov
addr16
loope
mul
rcll
jb
loop
stos
jg
jmp
jmp
js
xor
add
mov
cmp
and
inc
xor
insl
or
jge
icebp
or
or
js
repz
xor
push
push
dec
outsb
ja
sub
arpl
fs
pop
jb
es
or
xor
lret
inc
int
inc
mov
rorb
push
mov
js
mov
cmpl
sub
pop
jnp
mov
mov
xchg
mov
aaa
sbb
dec
sbb
sbb
pusha
or
cli
sbb
jnp
mov
test
aaa
aad
roll
call
mov
push
mov
or
jle
mov
add
out
test
inc
popf
jge
sub
stc
push
imul
shll
mov
and
pop
inc
jl
mov
sahf
adc
push
inc
cmp
sbb
cld
leave
jo
push
scas
mov
test
jmp
inc
push
add
add
ficompl
stos
aam
push
mov
call
xor
push
mov
out
push
dec
jp
xor
adc
lahf
xor
pop
or
enter
mov
loopne
xchg
pushf
jo
inc
out
hlt
out
cmc
sbbb
in
cltd
mov
jmp
pop
inc
push
cmc
xor
or
cmp
pop
test
int
cmp
xlat
cld
and
mov
add
dec
xchg
xorb
pop
popa
dec
xchg
mov
les
cli
xor
adc
lea
dec
je
insb
jns
inc
adc
xchg
mov
dec
ss
lret
insl
aaa
in
inc
js
mov
or
xchg
pop
loop
adc
lods
cmpsb
dec
stos
ret
mov
in
jg
mov
adc
jle
scas
xchg
dec
sub
repz
sbb
inc
es
push
out
je
mov
leave
push
xor
imul
push
push
xor
jge
mov
ss
cmpsl
aas
das
mov
loop
lea
dec
call
js
adc
sbb
ds
or
rclb
out
or
mov
cmp
mov
push
js
ja
aaa
sub
loop
cmpsl
or
jno
jg
dec
dec
dec
and
test
pushf
out
pop
push
adc
sub
mov
jmp
sbb
icebp
int
mov
mov
adc
add
test
enter
pop
pusha
xor
dec
adc
mov
scas
add
icebp
cld
push
test
push
jg
xor
sub
push
test
mov
flds
or
pusha
jb
lcall
mov
xor
shll
jno
arpl
jo
into
daa
mov
xchg
mov
mov
daa
sbb
adc
cs
pop
push
fisubs
negb
xlat
or
and
mov
mov
dec
repnz
sbb
mov
jnp
loope
subl
dec
rcll
cld
pushf
test
fwait
add
dec
add
testb
movsl
pusha
mov
imul
outsl
or
fcmovnu
dec
sbb
dec
dec
roll
fisubl
cld
sbb
or
jp
sub
stc
pop
jecxz
dec
std
sahf
mov
addr16
add
sahf
cli
popf
out
or
mov
jge
mov
xchg
iret
jmp
lcall
inc
movsb
cmpsl
stos
sub
outsb
bswap
outsl
and
mov
jno
push
xor
jbe
leave
add
xchg
cmp
call
fcom
mull
leave
sbb
cmp
jo
or
nop
lahf
push
or
pop
cli
nop
mov
mov
xor
daa
movsl
in
lods
xlat
bound
dec
into
and
add
mov
adc
fcomip
dec
imul
inc
in
cli
cli
ds
mul
or
shl
and
jbe
push
inc
jne
pop
dec
adc
mov
jno
inc
aaa
std
jb
test
das
inc
adc
sbb
mov
mov
fstpt
inc
mov
pop
loopne
jecxz
std
push
mov
dec
sbbb
int3
mov
mov
mov
pop
xchg
mov
dec
cmpsb
mov
mov
lods
movsb
in
out
in
push
je
jb
adc
xchg
mov
mov
psubsw
xor
jmp
ret
sub
ret
mov
mov
push
xlat
jle
dec
dec
cmpsb
adc
push
rclb
adcb
imul
imul
es
xor
insb
mov
mov
jns
or
cmp
dec
mov
cltd
jb
out
scas
add
mov
fwait
sbb
mov
into
add
cli
in
fsubl
mov
scas
addb
and
std
mov
jbe
push
dec
int
inc
arpl
pushf
stos
and
pop
add
or
fcom
sub
dec
insb
xchg
nop
push
mov
data16
sbb
sbb
mov
movb
mov
push
lcall
pushf
dec
clc
pop
imul
sub
add
stos
pop
retw
adc
sub
ss
or
ret
push
sub
ss
jae
xor
pop
sub
xchg
popf
fldenv
xchg
scas
xchg
push
popf
jg
insl
pop
into
cmp
mov
lods
cmc
outsl
aaa
bnd
xchg
adc
mov
in
jmp
jae
addr16
push
and
mov
fwait
jnp
imul
push
and
dec
add
inc
and
data16
stos
pop
cli
xor
mov
jecxz
stc
mov
or
and
fbld
dec
testb
jmp
out
mov
lock
cs
or
mov
lods
jle
sub
cltd
mov
les
mov
call
xor
aad
mov
push
popa
jnp
push
mov
push
sbb
xchg
repnz
mov
punpckhbw
es
adc
call
stc
push
or
jbe
xor
cmp
and
cwtl
js
pop
sbb
pusha
adc
sti
sub
insl
sub
leave
mov
pop
and
jl
push
jle
popl
test
dec
stos
ds
mov
repz
push
and
adc
in
sub
outsl
sbb
mov
add
pusha
xchg
xchg
leave
mov
lret
and
adc
fisttpll
push
clc
pop
fcomps
cwtl
xchg
add
repz
jecxz
mov
stos
jnp
mov
rorb
xor
mov
xor
stc
inc
mov
mov
pop
jge
icebp
in
mov
loop
sbb
fwait
idivb
pop
jbe
xor
add
outsl
mov
movsb
or
sub
mov
inc
xchg
mov
sti
cmp
pop
ljmp
jnp
sbb
xchg
cmc
jp
or
rcrb
aaa
dec
cld
clc
push
adc
inc
jo
cli
or
jmp
and
dec
jns
pushf
pop
pop
pusha
ja
mov
jmp
aas
stc
jno
xchg
inc
sahf
out
or
mov
jbe
nop
aad
jnp
lcall
or
ret
out
jmp
xor
hlt
jmp
test
ljmp
mov
out
pop
cmp
jg
fs
popa
mov
inc
das
push
inc
add
mov
movsb
lock
out
cltd
dec
sahf
xor
jo
notb
cmpsb
push
dec
xlat
mov
pop
mov
xchg
cli
inc
mov
and
movsl
nop
sub
pop
xor
add
aas
das
test
inc
stos
aas
mov
aaa
inc
test
dec
mov
stc
mov
add
xchg
dec
mov
fbstp
jg
mov
enter
xchg
mov
dec
out
scas
adc
cmc
nop
icebp
mov
add
pop
xor
inc
in
mov
je
inc
inc
int
loop
lods
mov
popa
mov
cltd
mov
push
aam
gs
and
insl
je
push
add
adc
loopne
jns
sbb
mov
push
adc
mov
dec
inc
paddsw
outsb
cmc
jp
subb
mov
les
ficoml
push
add
cmp
test
mov
pop
adc
dec
stos
gs
xor
push
push
lock
push
ja
pushf
pushf
scas
inc
cmp
cltd
mov
cmp
inc
push
mov
movsl
adc
mov
rorl
sub
push
dec
call
fisttps
jmp
lret
jo
negb
mov
and
les
xchg
cli
and
inc
jo
pop
pop
xlat
test
lods
jl
and
nop
pop
xor
xchg
or
icebp
lret
je
cli
sbb
cmp
jns
xor
ret
mov
rcl
xchg
in
pop
repz
xchg
cmp
sub
out
fsubl
or
ja
jge
fisttpll
aad
imul
mov
inc
push
lret
in
jne
or
jl
movsb
mov
xlat
mov
mov
cltd
or
xchg
pusha
shll
fiadds
sahf
mov
adc
mov
in
sub
jae
ss
mov
xor
push
lds
and
insl
jb
sti
sbb
pop
ljmp
insb
data16
xor
cld
adc
sti
sarb
adc
or
int3
cli
inc
nop
mov
push
dec
stc
adc
int3
mov
pop
jle
cmc
movsl
push
inc
mov
dec
mov
sbb
lret
cmp
stos
mov
jmp
cmc
or
outsl
jne
test
sbb
mov
dec
push
scas
stc
fcoml
pusha
mov
jl
in
mov
mov
js
jecxz
jmp
mov
dec
mov
add
insb
stc
cmc
ljmp
stos
out
lcall
mov
lret
mov
loopne
jp
fidivs
imul
fldenv
mov
sbb
aad
in
xor
cmc
sub
or
into
aas
loopne
jp
mov
int3
mov
or
mov
and
dec
sahf
adc
cli
and
leave
test
or
ds
mov
jns
mov
add
lods
jb
in
scas
xchg
dec
mov
lea
xchg
loopne
push
rcrl
fcoms
arpl
and
cli
leave
mov
sub
dec
mov
jb
push
pop
jbe
adc
push
pop
cmpsb
sbb
mov
xor
and
push
bound
add
loopne
or
shll
mov
test
jnp
and
nop
rcl
faddp
arpl
cwtl
int3
fldenv
pop
fcompl
outsb
dec
js,pt
cmp
incb
pop
mov
mov
mov
jnp
adc
dec
cmp
cmpsb
cmpsl
sub
arpl
jl
and
call
mov
jbe
rcr
lahf
lret
out
push
insb
popa
add
andl
pop
fs
mov
mov
stos
add
icebp
dec
dec
ds
push
movsl
or
repz
adc
mov
push
pop
mov
or
and
inc
mov
inc
leave
pop
adc
cmp
fmuls
inc
push
gs
into
pop
sbb
into
or
xor
pop
jne
mov
fldz
and
int
fimull
ss
stos
mov
pop
popf
mov
xor
shlb
sub
jmp
movsb
jb
pop
cs
sub
rcr
and
lret
outsl
sbb
adc
sbb
xchg
sti
nop
push
inc
roll
inc
mov
testl
xorl
mov
in
scas
adc
jnp
lret
rcrb
les
add
imul
sahf
daa
pop
xchg
inc
adc
cmp
in
pushf
and
push
bound
fidivrs
lods
jge
out
imulb
test
imul
maskmovq
divl
inc
sbb
push
fisttpll
pop
and
scas
movsl
out
jae
rorl
mov
xor
imul
jg
movsl
jecxz
add
push
and
xor
jge
pusha
jl
fdivs
sub
popf
push
pusha
aam
insl
pop
add
inc
xor
mov
sbb
mov
mov
call
dec
inc
xchg
jb
push
sbb
pop
pushf
test
mov
rcl
mov
cmp
lret
inc
mov
subb
push
push
cli
push
jae
shr
dec
add
shrb
lea
mov
add
sbb
xchg
adc
dec
push
cmpsb
ljmp
lret
push
push
jle
and
cmpsl
add
jnp
imul
nop
or
js
mov
lea
or
push
pop
jnp
push
push
adc
lret
cmpb
lret
insl
pop
in
cmp
sbb
aaa
mov
lods
pushf
outsb
push
and
jg
ss
mov
push
jnp
jp
mov
xchg
push
pop
inc
aas
lea
jecxz
and
out
jle
mov
cli
xchg
cmpsl
loop
cwtl
sub
stc
arpl
sub
icebp
gs
js
jg
mov
ja
arpl
or
pop
add
mov
in
mov
mov
mov
test
les
inc
mov
push
xor
xchg
lods
mov
push
lods
adc
lcall
test
inc
inc
outsb
push
lcall
adc
in
sub
pop
stos
cmp
lods
jne
sbbl
pop
je
dec
and
cmp
sub
xor
mov
inc
push
inc
inc
les
mov
sarb
inc
lcall
jg
cmp
and
mov
dec
sub
je
icebp
mov
mov
or
push
push
pusha
nop
cli
repz
push
inc
pop
in
mov
lret
jle
test
pop
jmp
sub
add
xchg
inc
lods
in
imul
mov
add
fs
dec
aad
das
add
aaa
jge
cwtl
rclb
push
cmp
dec
xor
inc
rolb
dec
adc
cmp
loop
push
rorb
ss
repnz
lahf
rcr
dec
jge
mov
xchg
ds
sub
repnz
lret
aas
in
pop
and
jnp
push
mov
hlt
outsl
div
mov
pop
insl
out
movsb
nop
aas
xchg
xor
bnd
push
paddsw
xlat
push
scas
mov
mov
adc
lods
enter
lahf
cmpsb
mov
sbb
mov
add
dec
push
dec
aad
inc
mov
add
push
mov
aad
xchg
jge
mov
popf
sbb
xchg
dec
cmp
jmp
aam
das
push
and
mov
jp
xchg
pop
mov
mov
jns
repz
jmp
mov
pop
js
movsb
ljmp
jnp
fdivr
xor
insl
sti
adc
add
in
cmp
lds
inc
mov
mov
call
xlat
dec
pop
pop
rolb
subb
vorps
xor
mov
leave
dec
adcb
cs
sbb
jbe
jg
jmp
sbb
jg
cld
scas
test
leave
cmpb
scas
xchg
adc
mov
pop
loop
mov
add
adc
mov
push
rcll
repnz
push
mov
int
mov
jecxz
jp
mov
and
mov
jb
add
mov
rcrl
add
cld
into
fs
xor
xchg
mov
jl
sarb
and
imul
mov
adc
pop
mov
add
inc
notl
aad
out
cmp
jp
out
xor
pop
add
movsl
lret
or
dec
push
mov
out
fcomip
cmc
mov
mov
and
mov
lds
sbb
fwait
js
sub
enter
dec
inc
add
pushl
dec
xorl
adc
lods
pop
fimull
push
in
or
pop
add
inc
sbb
xchg
pushf
pusha
ss
nop
dec
xlat
out
mov
je
aam
or
mov
out
or
lods
scas
pushf
fimuls
cmc
adc
hlt
sub
sbb
outsl
sbb
xor
pop
std
fadds
shr
add
daa
sub
pop
or
rcrl
mov
sbb
jmp
ret
jmp
pop
lcall
dec
sub
sub
sbb
int3
mov
sbb
fiadds
lret
jo
pop
or
pushf
pop
fisttpll
loope
out
in
inc
dec
lret
jg
dec
xor
cmp
push
adc
addr16
rcrl
stos
mov
ljmp
jno
dec
push
mov
int
lods
in
jns
mov
ret
mov
mov
sub
dec
adc
sti
mov
stos
fstl
dec
je
mov
inc
out
call
outsl
inc
mov
in
push
ss
and
cmp
movsb
xor
or
dec
add
ds
das
push
sbb
cmp
out
int
pop
int3
movsb
add
popf
pushf
and
push
arpl
adc
adc
dec
add
jmp
aas
pop
js
cmc
jns
jp
mov
inc
insb
movsl
cmpsb
jecxz
cs
loope
cmp
imul
aad
es
mov
cmp
or
mov
sbb
decl
jne
inc
lea
jns
jge
mov
mov
pop
xor
mov
mov
or
dec
std
mov
sbbl
jb
jns
inc
pushf
das
push
xor
js
adc
cld
aam
repz
and
fcoml
dec
jecxz
daa
pop
outsl
cli
mov
or
mov
xchg
cmp
jmp
xchg
sbb
xchg
cmp
insb
div
jbe
jns
hlt
or
or
cltd
jl
lds
xor
jb
sahf
in
add
int
testl
dec
adc
mov
and
add
fsts
dec
pop
add
insl
push
movl
adc
xor
mov
cmpsb
xchg
js
outsb
les
lahf
lcall
add
cwtl
sbb
iret
push
cli
xor
cli
out
and
in
jno
ja
adc
fldt
jl
test
fsubr
hlt
dec
pop
xlat
mov
icebp
sub
lds
cs
mov
jecxz
test
stos
movsl
fcomps
pop
cmpsb
xchg
push
stos
jns
mov
shll
mov
lods
xchg
movl
jl
or
pop
jnp
rclb
stos
cmc
inc
xor
and
lock
repnz
mov
jp
push
xor
or
fidivrl
lret
jae
mov
sahf
icebp
ret
sbb
out
fcoml
sub
movsb
loopne,pt
xorl
dec
sti
lret
fneni(8087
not
sub
rcll
movsb
jae
xchg
jne
pop
faddl
in
dec
push
loopne
out
out
lcall
or
call
aam
iret
leave
xor
pop
jmp
lahf
mov
data16
rorl
cwtl
fbld
out
insl
ja
adc
fiadds
lcall
repnz
mov
leave
cmp
sub
jmp
or
sub
mov
jecxz
in
mov
les
cwtl
sub
xlat
mov
inc
call
inc
outsb
or
sub
loope
jno
pusha
sbbb
loopne
and
cmp
inc
or
pop
jle
mov
imul
jns
or
fdiv
mov
push
lea
aas
popf
out
mov
or
shll
xor
jg
add
lods
jns
aaa
pop
pushf
add
pop
pop
push
dec
pop
fs
test
dec
data16
in
insb
test
inc
push
aas
cmc
xor
gs
cmc
int
lret
mov
inc
lret
inc
pop
cmp
std
jg
mov
pop
dec
scas
sbb
fisttpl
sub
dec
adc
movsl
int
mov
ss
jecxz
sbb
or
and
inc
das
fisubs
daa
out
mov
lods
lret
pop
inc
mov
fsts
inc
fsubrs
repnz
xchg
in
or
push
inc
mov
xchg
and
sub
sahf
mov
jmp
std
shl
mov
sub
repz
lea
push
test
jle
call
or
loope
or
les
mov
or
adc
mov
mov
push
xor
lret
and
fmuls
ret
push
add
ret
pop
push
js
adc
std
add
nop
xchg
mov
pushf
js
jle
sbb
xchg
out
lds
fwait
sbb
cmpsl
push
sbb
jg
jp
xchg
outsb
dec
mov
sti
dec
sub
pop
pop
add
jl
add
lret
xchg
jmp
push
sbb
or
ss
std
push
jp
xchg
les
aas
pop
js
and
inc
arpl
mov
data16
sub
out
xor
xchg
sbb
popa
outsb
lock
ja
mov
jns
leave
inc
sub
mov
mov
fistps
push
gs
aad
pop
mov
loopw
mov
lds
data16
cmpsb
or
sti
mov
fst
pushf
pusha
addb
xchg
mov
lret
sbb
mov
sti
xor
mov
xor
mov
push
pop
imul
js
jbe
outsb
and
jl
addl
jo
scas
adc
outsl
cmp
jl
decb
je
and
daa
ficompl
and
aad
stc
or
inc
push
and
daa
pop
xor
sbb
mov
mov
test
dec
inc
jns
stc
xor
repz
iret
repz
xchg
lret
rorl
jecxz
test
inc
adc
mov
aad
bnd
jl
jnp
jmp
jecxz
mov
mov
lods
bound
aad
jge
mov
mov
stos
jp,pn
arpl
ja
and
jo
nop
loope
in
lahf
sub
clc
or
and
cli
repnz
xchg
pop
adc
mov
and
iret
jecxz,pt
mov
int3
insl
gs
icebp
push
or
push
ret
push
int3
fwait
sti
pop
out
xor
push
mov
inc
pop
gs
jnp
rol
pop
xor
cmpsb
pop
xor
mov
sbb
lret
mov
add
pop
xchg
and
or
jno
repnz
xor
fldt
jmp
add
outsl
and
push
dec
adc
mov
rolb
and
dec
mov
outsl
popa
cmp
mov
pusha
sub
fildll
cld
mov
scas
stc
pop
mov
stc
mov
inc
sub
test
mov
push
in
mov
xchg
mov
pop
sbb
sbb
xor
out
mov
pusha
inc
dec
inc
fsubl
adcl
jno
shlb
mov
cmc
inc
arpl
jg
jnp
mov
scas
stos
cld
mov
xor
mov
iret
add
fld
call
inc
pop
dec
stos
push
xor
loopne
shrb
repnz
mov
test
sub
mov
adc
mov
ror
iret
in
pop
icebp
pop
paddb
xor
xchg
lock
imul
cwtl
scas
pop
push
add
repnz
jl
dec
jae
push
outsl
dec
dec
shlb
call
xor
sub
mov
jecxz
hlt
pop
loope
add
fisttpll
mov
pop
mov
outsl
dec
sbb
daa
into
xchg
pop
and
push
stos
inc
lret
dec
xor
outsl
rol
push
xchg
fstpt
icebp
pop
inc
aad
insb
sub
push
cmp
pusha
cmp
lahf
or
adc
adc
xchg
cmp
xchg
push
pop
subl
pop
aaa
mov
stos
lods
fimull
in
lods
dec
fists
fimull
push
call
adc
mov
pop
mov
lea
cmc
mov
dec
mov
dec
xchg
popl
pop
pop
movsl
fwait
add
insl
fsubp
pop
popf
xchg
mov
sarl
mov
lahf
mov
ret
dec
jmp
push
mov
cmp
nop
or
jne
mov
cmp
mov
xchg
push
cmp
xchg
loope
lret
cltd
aad
std
add
sbb
xor
fcmovb
stc
test
xchg
test
mov
cmc
adc
cmp
and
cmp
push
pop
add
sbb
aad
lahf
push
div
mov
pop
mov
adc
insl
sti
icebp
mov
sub
ds
xchg
cwtl
push
sbb
pusha
in
jecxz
cmpsb
add
ja
into
test
test
dec
jae
ds
add
and
push
push
and
shll
out
hlt
in
pop
pop
movsb
loope
dec
pop
xchg
sbb
andl
mov
mov
pushf
arpl
xchg
lods
and
outsb
test
scas
or
dec
inc
jnp
xor
add
sbb
pop
es
mov
or
test
decl
cmp
cmpsb
lea
sub
push
pop
movsl
clc
icebp
mov
mov
dec
jecxz
dec
aad
dec
lahf
add
nop
stos
pop
cmp
popa
sub
adc
ret
jg
ds
orl
sub
mov
arpl
fnsave
popf
xchg
add
mov
movsl
sahf
lcall
push
dec
mov
xchg
fucompp
sbb
cmp
movsl
inc
hlt
sbb
mov
mov
scas
insb
adc
add
nop
cmpsl
sbb
jge
into
cmc
test
imul
dec
cmp
dec
xor
cli
gs
xor
dec
sub
cmp
mov
inc
in
fdivrs
pusha
sub
outsl
push
movnti
aam
sbb
push
frstor
mov
inc
cs
outsl
dec
xchg
insb
xchg
nop
adc
xchg
sbb
mov
rcr
imul
pop
jae
jge
mov
xchg
mov
xchg
int3
lahf
pop
push
ds
jge
adc
mov
fwait
adc
push
xchg
inc
xchg
xchg
lods
int
in
sbb
es
or
dec
bound
push
enter
js
pop
jg
xor
dec
aad
call
push
mov
aam
pop
into
pop
je
stos
dec
nop
bound
add
mov
fdivs
jb
nop
scas
xlat
mov
add
sbb
or
hlt
fisubrl
cmc
addr16
sub
cmp
mov
aam
das
jbe
mov
add
repz
scas
hlt
xchg
adc
cmp
enter
mov
adc
xchg
ficoml
call
mov
out
push
loop
sub
dec
out
es
nop
inc
icebp
or
stos
rorb
inc
addr16
push
and
movsl
cmc
test
mov
add
push
fcmovbe
dec
popa
and
xchg
rorl
mov
shr
pop
jmp
and
jae
inc
lcall
sbb
mov
cmpsb
xchg
popf
gs
mov
jmp
add
or
cmp
movsb
sub
inc
pusha
leave
decl
loopne
sub
add
out
pusha
xorb
xor
leave
fcomps
rclb
js
pushf
adc
dec
icebp
dec
popf
mov
push
ret
sub
add
fcmovu
xchg
add
xchg
je
lret
cmp
sub
mov
pop
jnp
jno
pushf
mov
cbtw
xor
cmp
dec
pop
and
stos
lcall
push
lcall
out
or
decb
jno
xor
dec
mov
rcrl
and
dec
imul
inc
lea
pop
int3
dec
xchg
add
jmp
incl
stos
dec
clc
negl
outsb
inc
adc
aaa
xorl
lods
lock
push
or
pop
mov
loopne
cmp
jnp
and
push
cld
push
lds
mov
popf
pop
mov
dec
sti
lret
adcb
and
repz
jge
stos
cltd
cs
ret
movsb
mov
jmp
lahf
xchg
in
lcall
pop
fs
pop
xorb
insl
addb
and
mov
jo
adc
fstps
out
mov
aam
xor
insl
sbb
fwait
cmpsb
enter
pop
xchg
xchg
xchg
cmp
lock
push
jbe
inc
clc
push
pushf
ds
sbb
mov
add
adc
or
lret
cs
jns
cmc
adc
pop
iret
jp
sbb
pop
stos
adcb
adc
aaa
mov
and
jmp
add
adc
mov
add
push
cld
addr16
sti
popf
fwait
dec
dec
dec
jg
loope
arpl
hlt
addb
sbb
sub
push
outsl
sbb
xor
insl
mov
leave
mov
mov
das
adc
mov
xor
imul
lds
lods
mov
push
mov
scas
adc
arpl
sub
jle
scas
push
psubusb
jp
sbb
pop
test
xchg
inc
jnp
sub
ret
pop
gs
mov
in
or
mov
rcrb
into
jp
clc
inc
out
outsb
mov
mov
pop
and
repz
and
xlat
inc
inc
inc
and
leave
pop
jo
insb
push
and
pop
pop
iret
mov
lods
inc
lret
xchg
xchg
in
arpl
pop
enter
adc
add
mov
cmp
sub
and
push
push
into
cmp
loope
cmp
aas
orl
mov
fidivrl
arpl
xchg
movsb
mov
sub
or
int3
cmp
in
jnp
add
sub
imul
dec
cmp
and
xlat
jbe
lock
hlt
mov
or
xchg
imul
pop
sub
ljmp
popa
jne
and
lock
pushf
inc
jg
inc
jnp
push
jb
jno
dec
movsb
sub
push
sahf
pushf
and
mov
pushf
adc
xchg
insb
dec
push
jmp
and
mov
lods
jns
mov
jne
je
int3
xchg
sbb
mov
aas
inc
popf
mov
xchg
mov
ds
dec
xor
jg
je
stos
rcrb
mov
test
fnstsw
lret
push
xor
push
je
cmc
loopne
pop
push
aaa
pop
inc
pop
outsb
or
int
in
test
fistl
sbb
dec
mov
repnz
fwait
cmp
idiv
push
push
jne
pop
and
mov
test
inc
rcll
mov
test
and
incb
sbb
sahf
test
adc
push
pusha
mov
cmpl
sub
lret
ret
sbb
lret
jae
inc
jecxz
sbbb
and
nop
std
push
shrl
xchg
out
pop
push
pop
ret
ljmp
cmc
xchg
push
jnp
idivl
hlt
or
sbb
std
add
enter
rdmsr
pop
arpl
nop
jg
push
mov
mov
scas
loope
mov
out
mov
insl
pop
mov
ljmp
out
xor
shrb
adc
out
rorl
xlat
sub
stos
cmp
mov
or
lods
dec
and
movsb
xchg
fsubrl
outsb
or
sbb
scas
into
shl
imul
inc
bound
pop
iret
cmp
cmpsl
sbb
fsubrl
in
insb
sbb
jbe
aad
push
push
pop
push
jecxz
mov
rolb
daa
mov
stos
add
xor
popf
xchg
sub
sti
and
jmp
into
into
sbb
out
cmp
push
mov
jb
lret
mov
mov
mov
push
cwtl
sbb
orl
test
mov
lea
mov
xor
inc
stos
aaa
mov
inc
pop
mov
int
cmc
mov
cmpsb
cmp
and
iret
sar
iret
or
push
rcrl
push
ljmp
pop
adcb
gs
rcl
ret
fwait
jb
adc
neg
repnz
imull
js
cltd
mov
popf
frstor
int
daa
pop
cltd
icebp
pop
orps
xchg
add
scas
imul
lods
orb
stc
sbb
jg
inc
dec
sar
xchg
cmp
push
lock
packuswb
jno
int
dec
lock
push
inc
fldcw
sbb
aaa
jl
add
sahf
sbb
je
xchg
mov
sub
push
lcall
test
jns
stc
mov
mov
jbe,pt
xchg
mov
jmp
push
jg
xlat
jg
push
pop
scas
mov
inc
adc
inc
out
insb
xchg
daa
or
sub
inc
push
adc
push
or
cwtl
sahf
dec
jae,pt
icebp
loope
fisttpl
mov
sub
sub
ja
lods
mov
fidivs
mov
imul
in
or
stos
adc
adc
mov
das
ss
mov
rorl
ret
dec
mov
cmpsl
out
cwtl
dec
inc
shll
test
mov
out
dec
into
lahf
jmp
fs
jge
adc
add
and
xor
je
inc
xchg
lods
and
sti
cmp
and
gs
xchg
dec
orb
mov
test
xchg
inc
pop
arpl
test
push
or
pop
xchg
stos
push
or
or
xchg
inc
fdiv
push
xor
fs
adc
pop
xlat
iret
ret
insb
stc
test
mov
movsb
aad
mov
pop
push
mov
dec
or
insb
dec
imul
loopne
cmpsb
pop
mov
loope
xchg
xchg
mov
jae
fneni(8087
rcll
outsb
dec
adc
fdivs
mov
mov
int3
inc
add
cli
test
sarl
inc
mov
mov
iret
cmp
and
jecxz
or
popf
out
aaa
adc
mov
or
roll
cli
or
pop
jb
int
add
add
sbb
outsb
daa
loopne,pn
push
outsb
and
arpl
jae
outsl
lods
test
cmp
in
test
int3
dec
popa
xlat
add
fucomip
or
cmp
mov
dec
dec
add
dec
rcrb
cmc
popf
sbb
or
in
aam
jle
leave
and
or
jbe
int
push
pop
sbb
cmpsl
push
imul
jne
add
add
push
push
sarb
sub
pop
mov
inc
mov
loopne
mov
push
sub
bound
test
in
or
sub
jo
mov
jl
cmovg
insb
sub
dec
shl
pop
test
stos
fnstsw
call
fs
adc
cmp
ret
jae
pusha
rcl
cmp
xchg
xchg
mov
mov
push
cltd
pop
test
dec
push
xchg
pushf
stc
pop
mov
into
xchg
jo
ljmp
push
xchg
mov
pop
xchg
je
lods
out
mov
dec
mov
and
fadd
push
out
xchg
sbb
addr16
push
int3
xor
adc
nop
or
stos
lret
jl
cmp
subl
sti
loope
sarb
pop
cmc
sbbl
sub
dec
xchg
and
mov
bound
cmp
dec
mov
int
mov
mov
xchg
outsb
aaa
jne
jle
add
jbe
stos
jecxz
vcvtpd2dq
sbb
xchg
pusha
fisubrs
ljmp
inc
int3
mov
xchg
pop
lret
jg
xchg
icebp
cmc
aad
lahf
outsl
mov
jl
ret
je
sbb
mov
pop
mov
xchg
cld
add
idivl
hlt
pop
add
lds
test
mov
cmp
mov
xor
push
jno
fidivs
adc
stc
adc
add
dec
leave
push
xor
jns
push
and
lods
int
clc
mov
jg
outsw
sbb
xor
xor
into
xor
subl
daa
and
movsb
mov
jle,pn
xlat
sbb
imul
lds
fcomip
mov
shll
ficoms
mov
imul
adc
pop
cmp
push
xchg
dec
cmp
sbb
and
fsts
mov
movsl
xor
mov
pop
inc
call
sbb
outsl
mov
pop
popf
hlt
mov
cmc
inc
in
addr16
dec
xchg
sbb
mov
testb
and
pop
fiaddl
sbb
shrb
int
mov
inc
scas
push
ss
popl
inc
mov
sti
cwtl
insl
push
cli
cmp
mov
in
in
pusha
insb
jg
loope
ljmp
add
fimuls
iret
repz
test
cmp
jmp
fwait
sub
adc
subb
jle
jb
in
jle
xchg
push
push
jge
jecxz
sti
inc
and
xchg
add
into
in
fisubrl
mov
andl
mov
dec
inc
in
xchg
inc
jbe
and
in
scas
test
inc
push
cwtl
in
xor
jns
cwtl
fildl
fcmovne
mov
mov
pop
andl
pop
cmc
xor
cmp
pop
jb
cli
mov
sub
lea
inc
adc
loop
fsubl
and
sbb
push
mov
pop
pop
es
push
or
cmp
lret
lahf
mov
mov
pop
mov
mov
scas
xchg
call
loope
in
mov
out
iret
cli
push
jge
fsts
adc
rorl
xchg
lret
mov
es
leave
and
call
shlb
bound
pop
add
sub
pop
dec
mov
and
inc
mov
inc
or
mov
mov
nop
arpl
dec
sbb
pop
cwtl
ds
lret
sub
and
leave
inc
jnp
mov
push
jae
dec
mov
aaa
and
and
pop
mov
and
jbe
or
int3
adc
mov
pop
add
mov
mov
inc
sub
enter
mov
jmp
jae
ljmp
cmc
mov
fiaddl
sbb
fsubr
idivl
les
iret
fwait
push
mov
add
fmuls
or
pop
ret
mov
pop
das
mov
xchg
loopne
int
shrb
int3
gs
dec
in
ss
inc
lret
cli
sbb
xchg
xor
shlb
and
or
fcoms
xchg
leave
out
jp
inc
insl
fisttpl
cmp
sbb
jg
nop
mov
and
xchg
add
in
jbe
outsl
shrb
dec
pop
divl
dec
fisubl
adc
orb
sbb
scas
rolb
jecxz
in
shrb
push
arpl
sub
or
fsubrp
out
mov
lea
ret
je
xor
and
in
jno
mov
fstpl
fst
aas
cmpb
shll
sbbl
stc
push
push
jg
sahf
test
mov
insl
xchg
mov
jb
lock
popa
in
and
fildll
inc
adc
int
jns
or
test
dec
shr
jb
stos
rcrb
push
sbb
mov
dec
sar
mov
inc
xchg
lods
jp
pop
gs
dec
sbb
repz
fwait
lods
jl
cmp
out
jb
mov
push
sbb
es
pop
idivl
pop
inc
sti
push
sti
dec
sbb
nop
outsb
imul
inc
lods
enter
stc
mov
xor
aas
mov
jo
mov
mov
int
nop
outsb
nop
scas
aad
in
cmp
fcmovbe
mov
xchg
cmp
out
das
test
lds
mov
adc
xor
sbb
dec
inc
cmpsl
bound
mov
gs
lds
or
adc
call
cli
fs
imul
jo
iret
enter
adc
xor
outsb
negb
scas
add
jae
xchg
test
xor
out
je
jb
sahf
pusha
leave
pop
cmpsb
aam
inc
inc
mov
fcmovu
mov
push
cmp
sti
sub
inc
pop
jo
nop
lea
jnp
xchg
iret
out
inc
in
sub
fbld
stc
ss
push
push
arpl
loope
mov
dec
xor
imul
cmp
or
std
fdivs
adc
shll
rolb
dec
push
mov
cmp
lahf
add
jmp
dec
jno
sub
inc
in
mov
sahf
sub
xchg
in
scas
int
cmp
sbb
ja
popf
xlat
cs
out
pop
gs
into
sub
imul
cvtps2pi
in
push
xchg
adc
push
xchg
incl
jecxz
mov
sbbb
enter
cli
xchg
cld
dec
push
push
test
cld
cmp
add
in
lcall
xchg
adc
mov
mov
inc
xor
and
mov
in
or
mov
mul
xchg
or
mov
sub
std
or
les
jb
xor
ss
pop
ror
push
and
push
cmp
mov
ss
pop
sti
add
cmpsl
cmp
pop
inc
xchg
jl
fisttpl
push
sub
ljmp
cli
cwtl
jo
pop
out
test
adc
rorb
aas
xor
scas
cmp
lea
dec
rorl
xor
into
jbe
push
ret
div
push
xor
fwait
rolb
test
rolb
insb
adcl
nop
icebp
test
mov
mov
call
or
sub
sbb
js
sbb
fwait
js
sub
xor
pop
fstl
xchg
stos
push
jmpw
mov
inc
xchg
mov
push
jmp
fcoml
adc
pushf
add
aam
xor
in
push
iret
pop
loop
sahf
sbb
or
and
push
loop
ffreep
mov
test
fcomps
inc
jnp
xor
ret
test
xchg
add
jne
fisubs
push
int3
mov
sbb
pop
xchg
mov
jmp
arpl
pushl
sbb
imul
inc
xchg
loopne
add
push
clc
mov
mov
sbb
pop
xchg
hlt
sbbl
push
cmp
push
mov
dec
das
ficomps
test
jns
pop
test
and
sbb
xor
mov
lret
cli
jo
xor
std
inc
jp
add
pop
dec
xchg
xor
xchg
popf
mov
enter
popf
ret
movsl
int
stc
js
inc
mov
mov
adc
test
out
jne
in
aaa
imul
jg
lahf
mov
mov
loop
and
add
lods
mov
sbb
mov
out
cmp
dec
xchg
sub
xchg
add
dec
xor
fcmovb
xor
out
mov
pop
adc
or
jb
mov
int
lock
xor
ljmp
daa
popa
lret
add
jo
push
add
add
mov
xor
jle
sbbb
callw
mov
call
addr16
cmp
lahf
xor
out
lods
fs
loopne
stos
mov
out
jno
inc
pop
inc
loope
mov
fs
cmp
std
in
in
dec
dec
imul
int3
fdivr
sub
mov
mov
add
loope
in
imul
popf
push
clc
push
add
sti
pop
leave
xchg
cmp
jns
cli
fidivrs
adc
loope
js
repz
and
test
jp
pop
fstpl
fidivrl
fsubr
out
stos
cmp
or
add
adc
mov
or
loopne
dec
ljmp
mov
sbb
jne
dec
rcl
in
dec
sbb
scas
rorb
pop
mov
addb
inc
jnp
popa
sub
and
decb
scas
dec
fildll
push
mov
or
cwtl
int3
jae
jns
jne
sub
xchg
push
mov
aad
mov
lahf
loop
bound
mov
xchg
mov
out
in
je
dec
shlb
xorl
cmp
lods
xor
mov
cltd
pop
mov
jae
push
movsb
ficomps
add
xchg
inc
movsb
jns
cmp
lock
mov
fisttpl
xor
jg
sbb
adc
jmp
mov
cmp
es
cmpsb
cmp
mov
stc
push
enter
mov
mov
notb
rol
cmpsb
add
jb
or
pop
adcb
xchg
in
jl
mov
cmp
lods
mov
cmpb
push
pusha
sbb
es
shlb
mov
clc
aad
push
pop
sub
ud0
pop
and
gs
mov
mov
mov
mov
outsl
cli
xchg
pop
enter
stc
adc
addr16
mov
scas
mov
hlt
adc
ret
arpl
inc
xor
jno
cmp
icebp
gs
sbb
daa
or
add
mov
aaa
pop
pop
add
mov
nop
jbe
push
sbb
mov
or
mov
int
stos
lcall
push
pop
mov
xchg
mov
out
mov
movsb
fadd
push
adc
adc
in
in
sbb
xchg
jl
fildl
xlat
pop
aad
cmp
xchg
add
cmp
in
sub
fstl
mov
cmp
in
ds
or
fsubs
fucomip
aam
cmpsl
dec
iret
adc
push
enter
movsb
sar
mov
andb
jbe
or
xchg
fldenv
movsw
test
je
fcom
inc
stc
loope
lret
orl
dec
fiadds
fsubs
fdivs
mov
test
adc
in
cmpsl
in
or
push
jmp
jae
insb
jbe
clc
cmp
repz
add
repz
add
xor
aam
or
and
loop
sbb
pop
aam
nop
stos
jae
mov
cmp
test
dec
pop
sub
add
adc
and
pop
add
scas
or
cli
push
xor
adc
mov
dec
ja
xchg
or
mov
adcl
mov
les
enter
int
push
inc
loop
inc
xor
fisubs
push
mov
fwait
push
xor
mov
pop
divl
xchg
sbb
sub
push
inc
push
jmp
hlt
pop
jmp
pop
aad
dec
je
fwait
arpl
lock
push
in
push
xchg
and
stos
mov
xor
rcll
sbb
or
fcompl
jbe
fsts
dec
es
pop
mov
mov
and
test
or
sub
into
rcrb
daa
test
add
adc
int3
mov
mov
mov
decb
push
sahf
dec
xor
movb
fisubrl
hlt
xchg
adc
adc
xchg
or
aas
enter
xchg
movsl
in
jae
cs
int
das
adc
sbb
jne
inc
cmp
js
stc
add
test
fwait
inc
repz
mov
xchg
xor
aaa
hlt
adc
imul
cs
add
subl
inc
push
add
hlt
jbe
ficompl
dec
aad
aam
sub
xor
jl
lods
out
popf
lret
lcall
stc
inc
xor
clc
sub
push
aam
jo
cmp
adc
mov
jmp
push
xlat
or
cmc
loop
in
sbb
adc
cmpsl
in
add
divb
movsl
inc
push
out
nop
out
nop
shrb
and
mov
fstps
push
adc
pop
out
and
and
fldenv
je,pn
dec
inc
jl
push
jge
adc
dec
insb
addl
pop
pop
rcll
lea
or
pop
out
dec
sub
fadd
mov
mov
or
xchg
cs
inc
ljmp
test
mov
mov
cltd
add
dec
mov
inc
std
inc
jle
push
pop
mov
or
ret
outsb
xorl
sub
stos
gs
sbb
out
mov
and
cmp
inc
add
adc
addr16
repz
cmp
dec
sub
fs
lea
mov
and
push
mov
and
pop
sub
cmova
into
or
daa
mov
add
stc
pop
stos
shll
popa
in
pop
jno
inc
sbb
dec
lock
cmp
dec
cmovs
popf
dec
xchg
adc
enter
xchg
add
cmp
loopne
xchg
test
push
xor
call
flds
leave
and
push
icebp
scas
mov
stc
test
int3
inc
pop
aam
scas
mov
mov
out
mov
ret
lcall
mov
arpl
ror
fdivrs
push
ss
stc
mov
dec
aam
pop
pusha
nop
lods
shll
dec
xor
pushf
in
mov
dec
imul
or
or
add
mov
movsl
xlat
lods
imul
insl
loope
mov
mov
shlb
push
cli
mov
mov
add
jmp
test
add
sbb
call
ror
fcoms
xchg
inc
out
test
pop
sbb
and
lods
popa
mov
xor
pop
dec
std
adc
gs
dec
mov
inc
rorl
fldcw
add
mov
xor
fcmovu
ja
fwait
movsl
test
xchg
or
cmp
pop
jle
pop
xlat
jb
sti
cli
jecxz
dec
sbb
movsb
pop
popf
cli
sbb
push
dec
jne
push
push
lds
icebp
lcall
and
mov
jnp
roll
test
imul
mov
inc
lret
ret
and
sarb
lret
test
or
movsb
in
test
pusha
into
mov
sti
xchg
adc
and
dec
add
imul
mov
in
xchg
adcb
sarb
xchg
inc
clc
xchg
adc
mov
and
out
push
aaa
mov
cltd
mov
mov
xor
jo
xor
mov
pusha
insl
in
xor
mov
das
and
and
lock
movsl
xor
jecxz
jnp
scas
sti
scas
sub
rcl
movsb
push
iret
jecxz
icebp
ds
cli
add
mov
fstpt
jmp
cwtl
cltd
rorl
pop
inc
inc
mov
sub
xchg
out
pop
jbe
int3
int3
mov
fldt
xor
and
or
ror
iret
cmp
adc
mov
test
xchg
imul
sbb
mov
addl
insl
push
or
inc
lcall
xor
aad
and
lret
dec
xchg
cmp
lret
pop
loop
and
mov
dec
lcall
pusha
xor
loope
sub
adc
and
inc
inc
mov
cs
js
mov
or
push
out
inc
inc
mov
cmpsl
pop
fldcw
inc
jp
cmp
imul
dec
jb
mov
inc
xchg
ds
pop
test
add
fwait
sbb
repnz
repz
xor
xor
dec
into
xor
outsb
jne
cwtl
mov
cwtl
dec
fisttpll
sbb
stos
nop
idivb
mov
repz
jo
and
mov
xor
in
jne
je
sarl
jno
cmc
cltd
and
dec
pop
das
or
outsl
addr16
inc
jle
push
bnd
test
push
jae
mov
or
js
lcall
aad
xchg
push
jle
pop
mov
cmpsl
jnp
inc
in
loop
insl
jecxz
call
or
pop
pop
int3
sbb
xor
jmp
dec
mov
stos
mov
xchg
jp
xlat
fistl
dec
mov
lods
mov
nop
jge
push
arpl
mov
lret
lret
shr
inc
sub
sahf
mov
cmp
mov
jge
leave
das
mov
and
dec
cli
xchg
lock
in
ja
rcrb
sbb
pop
mov
inc
leave
xor
jns
popl
gs
sti
dec
sbb
and
stc
pop
rorl
aad
lahf
fwait
pop
hlt
sbb
outsl
push
shr
cmp
mov
mov
into
inc
addr16
shll
xchg
mov
mov
bound
pop
call
test
pop
jmp
test
pop
jo
pop
adc
xchg
and
imul
addr16
test
xchg
push
ja
ret
inc
adc
pop
sbb
mov
push
push
push
fsubr
dec
and
nop
xor
fnsave
or
imul
cs
hlt
cld
xlat
fs
dec
sar
add
callw
push
xchg
jnp
xchg
insl
pushf
mov
sub
pop
mov
jo
inc
jnp
adc
iret
xor
call
adc
jo
jg
sti
push
leave
jbe
scas
inc
dec
xchg
dec
cld
pushf
fstl
shrl
adc
lcall
sti
jno
inc
cmpsl
xor
mov
xchg
xchg
ficompl
ja
mov
push
jmp
cmp
arpl
cmp
es
cmp
lahf
rolb
test
sbb
adc
ret
fstps
inc
and
js
ja
jnp
and
and
outsl
cmp
icebp
mov
jbe
add
pop
xchg
cmpb
adc
sbb
and
adc
shl
mov
dec
dec
sub
lret
lcall
dec
insb
push
nop
out
call
imul
mov
sbb
sub
dec
pop
fmul
lahf
fwait
push
jb
imull
adc
aaa
dec
cld
loopne
push
jo
jne
in
pop
pushf
loope
fbstp
or
test
les
mov
pop
push
pushf
sub
mov
xor
sbb
dec
jo
sub
movsb
lret
lret
inc
xchg
add
fidivrl
cmp
sbb
and
mov
push
outsb
sti
and
fwait
outsb
sbb
sub
jl
maskmovq
idivl
shlb
jg
popf
push
sub
dec
mulb
out
mov
shll
xor
cmp
inc
or
call
or
lds
notb
xor
aam
xchg
ljmp
sbb
popa
pop
insb
push
ss
dec
xor
sub
pop
jecxz
ss
mov
fcomps
pop
int
sbb
xchg
mov
mov
mov
or
sarb
mov
into
xchg
into
sub
jp
jmp
inc
xor
scas
in
iret
mov
push
orl
out
inc
lcall
push
cld
dec
je
fadds
mov
pop
xchg
push
mov
clc
jg
lds
push
test
push
mov
lds
cmp
or
mov
leave
sub
pop
int3
cmp
insb
jne
jg
ret
fimull
xlat
mov
xorb
sub
inc
cld
mov
xchg
inc
test
dec
inc
outsb
cld
in
fdivl
sub
cwtl
inc
fldl
ret
fwait
je
fdivrl
xchg
punpckldq
push
test
sub
inc
lds
adc
mov
add
dec
sub
mov
and
sbb
sub
fiaddl
fidivrl
cmp
loopne
sub
push
push
xor
das
mov
xchg
cld
jbe
mov
dec
sti
out
scas
mov
mov
push
bound
lret
xchg
mulb
pop
or
bound
inc
cli
jns
lret
mov
aam
and
mov
sti
jne
sbb
mov
out
fisubs
mov
add
jo
sarb
std
mov
loope
mov
sbb
mov
push
popf
xchg
int3
jp
rclb
push
int
pop
jle
loope
add
dec
mov
mov
dec
mov
sbb
test
lds
outsl
lock
xor
fwait
cmpl
mov
or
jg
inc
add
xchg
lods
xor
sub
jno
cli
jecxz
jg
xchg
cmp
int
sbb
mov
xchg
lods
shl
orb
aas
cmp
and
fnstenv
add
icebp
and
ja
lock
and
lcall
in
adc
imul
sub
or
dec
mov
pop
push
add
or
aad
mov
adc
into
les
repnz
sub
sub
aas
dec
push
mov
sbb
pop
gs
adc
jns
mov
cmc
inc
pushf
sbb
push
ss
ror
sbb
dec
rclb
test
mov
js
jb
xor
push
push
mull
sub
gs
lods
imull
andl
mull
jno
jg
jae
adcl
cld
fsubs
mov
fwait
cmovge
and
ss
xorb
das
cmpsb
cmp
iret
cmpsb
test
and
or
cwtl
xor
aaa
mov
xor
xchg
stos
outsl
adc
sbb
pop
lret
mov
push
iret
call
cltd
outsb
mov
stc
sbbb
int
xchg
in
dec
shlb
inc
push
push
sub
xor
dec
cmc
jge
inc
js
xchg
aas
jl
dec
inc
pop
pop
xchg
or
lret
loopne
xchg
cmp
orl
into
inc
adc
add
cmp
mov
movsb
xchg
jmp
rcr
or
mov
movsb
jp
sbb
jl
inc
jmp
out
lds
sti
fdivrp
lea
mov
pop
lahf
jnp
cli
sbb
ds
fstps
dec
cmp
mov
mov
jae
inc
dec
shl
add
cmp
add
and
xor
das
push
imul
test
js
rol
cli
lods
insl
popa
mov
xchg
mov
jno
into
cmp
clc
add
sub
xchg
xor
xor
push
inc
xor
inc
es
jl
loope
xchg
sbb
inc
cmp
or
dec
outsl
and
jno
iret
adc
loopne
test
je
mov
mov
out
mov
dec
sub
loop
loopne
xchg
nop
mov
dec
add
js
shr
rcrb
xor
mov
mov
or
pushf
ss
or
in
stos
push
mov
and
ljmp
movsl
adc
sbb
xor
js
push
mov
cmp
sbb
and
sub
fwait
aam
lods
jle
cmp
inc
mull
push
inc
imul
aaa
js
mov
repz
les
rorb
aam
pop
jnp
test
pop
xchg
outsb
fistl
ss
pop
jae
mov
sbb
ss
sub
xor
jno
xor
cwtl
sarl
test
std
sbb
mov
popf
ljmp
and
addr16
mov
fdivrl
aad
add
mov
nop
dec
movsb
push
mov
mov
lea
ja
rcrl
not
movsb
stc
popa
cmp
sar
cmp
lahf
jmp
popa
hlt
lret
or
push
lahf
pop
pop
icebp
mov
mov
mov
clc
lea
leave
aam
sbb
pop
xor
fsts
and
push
shll
out
sarl
jo
cwtl
or
popf
mov
cmp
fyl2x
insb
and
stc
dec
movsl
cld
dec
adc
and
sub
xor
xchg
xchg
popa
fdivr
jmp
mov
mov
dec
popf
in
xchg
lods
sub
popa
mov
pop
lds
push
dec
std
int3
pop
daa
mov
das
xlat
lods
xchg
stos
pop
ficoms
jns
ror
adc
js
pop
mov
sbb
jne
iret
arpl
outsl
sub
pop
loop
jb
push
pop
and
pop
fcomps
aas
mov
fwait
mov
mov
scas
xchg
fdivrs
push
mov
roll
jns
jmp
ret
ret
pop
adc
jae
pop
je
js
lds
add
rclb
enter
push
xor
imul
cmc
fsts
lahf
mov
fimuls
xor
jnp
out
cltd
clc
mov
enter
xor
cmpsl
imul
scas
push
adc
popa
mov
mov
add
mov
movsl
subl
std
push
pop
decl
lahf
insl
cmp
push
ljmp
mov
dec
pop
in
stc
mov
push
fldl
pop
xchg
xchg
nop
data16
sbb
mov
lds
sti
ret
xor
addr16
push
mov
inc
addl
out
xchg
jno
mov
call
pop
mov
jl
xor
popa
imul
mov
pop
push
sbb
adc
enter
aas
cmp
pop
cs
outsl
jmp
or
pushf
in
inc
gs
outsl
mov
xchg
mov
inc
xchg
leave
adc
repz
pushf
push
or
xchg
and
sub
scas
cmp
sbb
push
sarb
mov
pop
inc
adc
sub
test
cs
pop
cmp
lcall
and
mov
je
rcrl
jb
jne
adc
out
or
and
pusha
add
add
adc
mov
fisubl
push
mov
cltd
cmc
xchg
das
add
jge
and
pop
jbe
and
inc
xchg
inc
neg
push
rcrb
scas
mov
xor
fildll
fs
sbb
addr16
pop
movsl
cmp
sbb
push
mov
cmp
jo
aad
mov
xchg
xchg
adc
hlt
arpl
xchg
scas
mov
xor
faddp
lret
loope
mov
mov
sbb
mov
and
mov
imul
test
leave
aam
pop
jno
imul
cmp
mov
fisttpl
imul
std
xchg
sbb
pop
sub
nop
cmpsl
dec
andl
lods
xchg
dec
loope
xchg
arpl
mov
insl
fildl
and
popf
jbe
cmp
jl
rorl
mov
and
sti
mov
add
call
xchg
cli
cmp
adc
xorb
and
xor
adc
xchg
sahf
push
call
stos
lcall
fbstp
sbb
jmp
fiadds
cmpsb
fwait
or
ljmp
inc
stos
dec
out
out
shll
pushf
test
mov
outsb
fdivs
imul
and
mov
sub
jmp
cld
sub
xchg
popf
pop
imul
jae
mov
and
lds
and
test
decb
mov
xchg
push
mov
lahf
xlat
mov
xorb
jns
je
pop
int
push
sahf
in
rorb
sti
lods
mov
std
sub
scas
jle
scas
jecxz
jecxz
jb
shlb
pop
mov
shll
scas
popa
imul
push
idivb
jne
pop
imul
or
cwtl
cmpsb
cmpsl
lahf
push
jbe
cmp
pushf
xor
inc
pop
ret
or
ret
scas
imul
jecxz
jge
or
xor
pop
test
inc
sub
pop
xchg
pop
jmp
outsb
mov
outsb
fistpll
les
movsb
mov
pusha
ljmp
clc
mov
cwtl
adc
pop
mov
popf
iret
enter
jecxz
and
mov
ss
cmp
pop
sub
das
and
in
or
add
pushf
jl
movsb
push
movl
cmc
push
mov
push
xor
cld
mov
cmp
xchg
dec
xor
rorb
xlat
mov
push
jge
fistpl
aas
jmp
dec
jbe
lret
mov
push
sti
push
push
push
or
xor
das
dec
pop
aam
adc
filds
xor
mov
pop
gs
daa
dec
add
add
xor
inc
insl
push
lret
loope
lcall
gs
inc
push
sbb
leave
mov
icebp
aaa
scas
shl
jb
pop
jo
xor
stc
fstpl
sahf
cmp
lret
xchg
shrl
shl
fs
mov
sbb
cmc
mull
push
test
aas
fs
out
sbb
sub
mov
adc
cmp
push
lret
aam
testl
aas
adc
and
add
push
mov
adc
push
das
int3
adc
push
dec
xchg
mov
add
mov
push
cwtl
jmp
loopne
fcoml
xor
jmp
gs
push
movsb
repz
mov
xchg
or
mov
lahf
cmpl
dec
sbb
nop
pop
pusha
sub
mov
aaa
scas
je
push
sbb
js
xchg
cmpb
arpl
popa
mov
add
out
hlt
popa
fnstsw
js
or
sarb
notb
int3
jp
addr16
rcrb
or
lock
popa
repz
adc
push
es
and
inc
loope
sub
aaa
push
push
xor
paddw
sarb
in
jecxz
lcall
int
inc
mov
rolb
adc
or
popl
xchg
or
jbe
sbb
insl
xor
sbb
dec
repnz
in
fs
xor
lds
or
out
icebp
lods
enter
fwait
xchg
rorl
xor
mov
sbb
or
jb
cmp
mov
cvtpi2ps
xor
icebp
pop
dec
push
pop
mov
xor
push
sbb
pop
and
fisttps
mov
mov
test
cltd
fs
sahf
mov
inc
pop
push
in
sub
popf
pusha
movsl
mov
push
movsl
scas
or
popf
out
xchg
loope
cmp
daa
nop
imul
push
or
pop
fsts
js
adc
push
pop
imul
and
jae
sub
out
cmpsl
or
jbe
in
test
xchg
cltd
rorl
iret
lahf
xchg
mov
js
pop
jge
pop
pop
jae
or
sbb
das
pop
cmp
adc
sub
cmpsb
sti
popa
fsubrs
dec
mov
out
aad
js
push
sbb
jg
cwtl
push
sbb
lret
xor
aas
xchg
mov
clc
lods
or
lods
lods
xchg
add
lea
imull
mov
lret
stos
xor
nop
clc
sbb
mov
dec
outsb
lahf
mov
push
insb
outsb
pop
pop
mov
popf
xor
push
lock
outsl
lea
cmp
and
push
jnp
jl
pop
jbe
pop
cmp
call
mov
in
dec
scas
cmpsl
cmp
pop
mov
cmpsl
mov
xchg
shlb
or
loope
mov
mov
cmp
out
cmp
in
mov
or
pop
dec
jns
fbstp
mov
mulps
ret
lcall
xchg
inc
aas
push
jmp
ret
add
daa
popf
sbb
ss
mov
gs
jno
xchg
jmp
dec
subb
pop
repz
adc
mov
mov
es
mov
dec
cmpb
pop
cmp
dec
std
scas
xor
fwait
jl
inc
test
push
das
and
mov
mov
add
jbe
repnz
cmpsl
hlt
sbb
pop
lods
mov
jg
les
imul
jg
sub
roll
call
lods
mov
xor
pop
jo
mov
leave
incl
adc
leave
mov
jmp
sti
arpl
ret
loop
repnz
pop
mov
sbb
or
das
mov
fs
inc
enter
into
mov
repz
xor
mov
rcrl
mov
pand
loop
xor
out
cs
insl
pop
call
xchg
pop
nop
pop
and
add
in
sub
xor
mov
sub
repnz
xlat
sahf
iret
xor
outsl
pop
inc
sti
fsubs
mov
dec
out
cmp
xchg
inc
pop
fsts
push
cmpb
bnd
lock
incl
lock
jecxz
adc
iret
cmp
mov
ljmp
jmp
sbb
cmp
push
xor
mov
popf
pop
shrb
out
adc
xchg
or
leave
mov
enter
dec
dec
sbb
call
cmp
dec
inc
and
scas
outsb
int3
cltd
ret
dec
cmpsl
xchg
stos
pushf
jmp
xlat
add
adc
jo
ja
test
aaa
pop
lret
fisubl
je
xchg
push
jmp
in
jg
test
aam
daa
mov
cmpsl
fsub
cmpsl
xchg
push
jl
jne
fnstsw
dec
call
pop
gs
rolb
dec
mov
xlat
xor
fstpl
jl
insb
mov
and
fisttps
das
add
mov
rol
popf
outsb
xor
mov
subl
fs
test
sub
xchg
lock
mov
hlt
test
mov
pop
lods
jb
sbb
inc
and
es
mov
lea
ljmp
lret
jno
das
xor
ret
mov
lret
cltd
lret
pop
les
or
cli
mov
loope
sub
cmp
add
sub
xor
xchg
cmp
pop
cs
sbb
jae
loope
test
fucomp
dec
nop
xchg
in
aaa
or
in
movsb
cld
cs
cwtl
lret
frstor
rclb
push
or
or
das
sub
les
mov
call
nop
adc
and
cmp
and
lret
lcall
ljmp
or
shrb
or
cmpsl
pop
jns
sbb
jge
cwtl
clc
in
pop
ja
dec
fs
cmp
popa
mov
in
mov
mov
jae
jbe
pushf
xchg
out
out
ss
out
mov
mov
pushf
push
add
jg
movsb
xchg
fisttps
fdivr
ror
xor
sub
arpl
mov
repnz
sti
fldl2e
xchg
and
cwtl
sub
out
inc
mov
leave
stos
jae
or
imul
pop
test
in
je
aas
loopne
mov
inc
mov
ljmp
or
imul
scas
shlb
gs
push
xorl
lahf
and
pushf
outsl
dec
outsb
cmp
ret
mov
sti
or
dec
hlt
mov
jl
aas
xor
sub
outsb
lea
repz
call
lods
adc
mov
lds
or
jno
add
loop
cmc
inc
in
sub
add
xor
outsb
add
push
sar
mov
mov
jg
pop
test
jge
imul
lcall
push
adc
sub
je
pop
sbb
cmpsb
xchg
test
stc
xchg
jp
repnz
cmpsb
popf
or
sub
int3
imul
mov
lret
or
dec
cmp
inc
sub
insb
test
sub
inc
stos
push
add
mov
adc
mov
dec
ds
add
loopne
test
or
ja
sub
cmp
mov
xchg
xchg
xchg
adc
jmp
icebp
mov
fcomps
push
sbb
test
push
fwait
out
xchg
jb
mov
mov
jecxz
push
test
incb
ss
rcll
sbb
mov
adc
sub
push
push
orl
outsl
aaa
ja
push
xchg
mov
lret
stos
mov
repnz
push
xchg
nop
and
or
mov
lock
shll
push
jae
push
enter
popa
sub
aas
test
adc
mov
inc
fcoms
pop
pop
mov
in
jmp
cmp
push
fwait
jge
lcall
sbb
jmp
cmp
mov
ds
jmp
xchg
inc
push
add
sub
mov
and
xlat
jb
out
adcb
dec
shll
cs
jb
test
insb
in
addb
sbb
push
xchg
dec
pushl
test
popf
ja
pop
mov
popf
mov
push
rcrl
mov
xchg
into
loop
movsl
ret
cmp
cmp
push
xchg
xor
dec
pop
sti
cmp
adcb
cld
or
adc
pushf
jle
jg
push
hlt
sbb
pushf
enter
aaa
movsl
xor
hlt
in
push
sahf
fwait
jp
dec
push
push
add
inc
cmp
xchg
arpl
push
inc
or
mov
jnp
mov
xchg
xchg
ljmp
sbb
adcl
add
sbb
fiadds
lea
and
sbb
cli
test
cmp
lods
stos
fnstcw
or
movl
push
pop
sti
cmp
ja
aad
lret
inc
std
mov
int
pusha
and
sti
lds
xchg
nop
jo
mov
clc
bound
xor
inc
daa
add
and
into
dec
mov
divl
ds
add
cmp
cld
int
outsl
add
sbb
sbb
aas
jbe,pn
aas
sarl
stos
dec
lret
mov
mov
jbe
dec
xchg
lds
mov
inc
adc
xchg
cmp
mull
and
jmp
lock
dec
xchg
nop
es
add
xor
imul
je
or
inc
and
or
push
test
mov
repnz
mov
or
sarb
push
xor
cmp
add
inc
or
out
jne
xchg
cli
push
mov
pcmpeqd
fidivs
loopne
aad
call
mov
out
mov
dec
lods
mov
faddl
incl
lock
outsb
scas
shrl
and
jb
mov
insb
or
insb
scas
inc
sub
testl
xor
push
sub
in
test
mov
in
lods
and
loope
xchg
mov
mov
cmpsb
loopne
pop
pop
iret
test
push
popa
push
inc
or
pop
dec
out
lret
sub
mov
enter
stos
loopne
xchg
and
in
out
push
int3
dec
push
rcrl
ret
lea
add
loopne
icebp
or
sbb
enter
and
mov
push
xchg
cmp
xchg
lock
pop
xchg
outsb
cld
aad
mov
movsl
loop
insb
out
and
movsb
or
in
pop
sub
jmp
push
lcall
jge
in
dec
push
add
xorb
mov
faddl
stc
xor
daa
sbb
xchg
add
shll
fsub
pop
pushf
ficomps
call
xlat
sbb
mov
cwtl
pop
inc
mov
sarb
imull
xor
insl
lds
jo
xor
es
cltd
xor
push
inc
or
test
adc
call
mov
testl
xchg
jecxz
mov
dec
mov
outsl
mov
lea
data16
xrelease
xchg
push
imulb
js
inc
mov
shrl
sub
mov
push
push
push
adc
scas
shlb
cli
dec
sub
ret
jb
jbe
push
movsb
rclb
shll
loop,pt
sbb
pop
lcall
adc
sbb
loope
inc
mov
sbb
inc
xchg
into
push
lret
fistpll
outsb
jp
adc
xchg
popa
jmp
lret
clc
pop
movsl
jo
pop
fstpl
andl
ret
arpl
fincstp
add
mov
add
xchg
imul
add
xor
cld
cmp
mov
arpl
xchg
dec
imul
stos
push
call
mov
arpl
sbb
out
cwtl
test
xor
daa
lock
daa
addb
fcoml
inc
xchg
dec
or
sarl
xchg
dec
pcmpgtw
paddd
mov
mov
add
and
pop
aam
bound
dec
adc
je
xor
push
push
push
jno
out
pop
rcll
dec
cmpsl
cmpsb
or
inc
push
ret
mov
cmp
shlb
sub
fimull
cld
push
fcoms
sub
sahf
mov
filds
mov
jae
iret
xor
xor
sahf
aaa
out
xor
call
dec
dec
test
scas
push
les
adc
aas
xor
and
pusha
in
and
dec
imul
xlat
notb
insl
mov
mov
mov
mov
call
ds
add
lret
test
in
ja
scas
jle
jbe
data16
xchg
jmp
fdivs
fisubrs
pop
sub
jg
inc
jae
pop
xchg
cld
jno
pop
test
adc
lods
loopne
test
sarl
inc
in
aad
imul
sbb
lea
dec
cmp
mov
pop
add
ret
pop
pop
mov
sub
adc
sbb
dec
aam
rcr
pop
mov
pop
or
jns
xchg
in
mov
mov
into
and
sbbb
dec
pop
in
xor
and
or
xchg
cmp
addr16
mov
pop
push
jb
addr16
out
into
ljmp
mov
aas
pop
push
test
loopne
outsb
test
ja
pop
adc
xor
shl
fcoml
add
sub
test
inc
xor
loop
adc
cmpsb
sub
push
lds
pop
sub
pop
out
and
or
cmpsl
insb
sub
mov
mov
pop
dec
pop
nop
shlb
mov
sub
jb
jge
ret
mov
mov
mov
lahf
adc
lods
nop
ljmp
adc
das
bound
out
xchg
push
sti
lcall
js
sbb
pop
push
movsb
xchg
in
jmp
or
test
push
xlat
push
mov
jo
adc
mov
xchg
xchg
lcall
outsb
add
inc
jmp
ljmp
xchg
jo
notb
xor
mov
lret
push
fs
mov
jl
dec
jno
shrb
out
sbb
jmp
fdivl
push
pop
push
dec
rorb
cmc
cwtl
iret
lret
mov
sbb
es
push
ds
fisubs
loopne
mov
jbe
jp
shll
loop
int3
sbbb
mov
jo
adc
adc
out
mov
iret
in
sbb
es
add
xor
fninit
fnstenvs
subb
sbb
scas
rcll
cmp
jp
and
std
repnz
call
js
cmp
xchg
in
aam
cmc
loop
xor
jp
mov
sahf
mov
lret
cmp
sbb
outsb
inc
inc
pushl
cmp
popa
adc
cmc
pop
inc
sub
inc
adc
mov
sub
call
xchg
ja
cmpl
mov
mov
stos
xor
pop
adc
out
mov
jbe
inc
pop
fs
jmp
dec
movsl
push
js
cld
stos
outsl
xor
adc
aas
ja
mov
pusha
test
sbb
cmpsl
pop
enter
jmp
shll
add
nop
int
fmul
mov
and
add
fstpl
scas
xchg
adc
aad
loop
std
push
sub
xor
outsl
ret
pop
cmp
int
jmp
lds
or
les
fidivl
xor
scas
aad
mov
pop
insb
cmp
xor
fcompl
les
mov
ds
out
es
pop
in
and
pusha
cld
mov
test
ud0
mov
jmp
mov
inc
cld
shr
sahf
pop
adc
addr16
adc
adc
inc
das
xor
mov
mov
stos
stc
mov
push
adc
cmp
cmp
rclb
pop
shlb
into
jp
sub
mov
pop
or
jae
pop
mov
adc
outsl
mov
rclb
pop
jne
jbe
in
js
insl
and
add
cwtl
mov
cs
popa
xor
sti
adc
ds
js
pushf
dec
outsb
icebp
push
xchg
in
mov
pop
gs
add
popa
pop
cmp
lret
mov
fmuls
fcoml
aad
jbe
jns
mov
mov
cmp
iret
inc
daa
sti
mov
fsubr
out
sahf
dec
and
jg
and
cmp
add
aam
sbb
rclb
lods
sub
cs
cmp
ret
adc
pushf
jg
push
ret
sub
stc
lret
xor
rorb
pop
lahf
leave
pusha
mov
inc
mov
sbb
mov
inc
adc
xor
mov
inc
addl
and
incb
fnop
fwait
aam
arpl
push
ror
push
dec
rorb
fwait
mov
lea
pop
xchg
mov
add
sbb
insb
xchg
cmpsb
pop
roll
jecxz
push
pop
jns
pop
xchg
lea
movsb
or
xchg
dec
sahf
cmpsl
scas
xor
sub
push
inc
cmpl
jae
scas
scas
mov
and
or
cmp
insl
in
xor
add
mov
xchg
add
out
in
out
mov
outsl
sub
orb
fcmovbe
mov
push
sub
rolb
add
sbb
negl
leave
sub
push
mov
pop
icebp
nop
and
shll
add
loopne
and
ret
rolb
ret
popa
lcall
mov
scas
sti
jno
sub
pop
insb
cmp
nop
lods
fistpl
mov
lods
lock
add
in
pop
jecxz
aam
cmp
hlt
rcl
sub
test
push
xor
jns
repnz
pop
xchg
dec
push
push
jge
mov
push
test
add
sbb
and
jb
clc
mov
mov
icebp
test
mov
adc
loopne
pop
fstps
sbb
idivb
jo
xchg
outsl
inc
scas
call
dec
jne
movsl
mov
or
movlps
mov
push
mov
int3
in
sbb
cmp
cltd
jb
push
clc
sbbl
xchg
jecxz
cmp
insl
lret
and
int3
jmp
cs
pop
adc
out
iret
in
call
popa
sahf
shlb
or
int3
es
and
cli
cmp
arpl
fimull
orb
or
test
inc
test
dec
jmp
imul
ljmp
lods
int3
sub
idivl
jp
xchg
inc
lret
mov
push
lods
cmp
movsl
movsb
xchg
pushf
mov
cmp
pop
inc
xchg
aad
pop
mov
mov
mov
and
push
add
cld
jg
fdivrl
mov
stos
lret
xor
push
sbb
sub
data16
pop
repnz
popf
mov
inc
leave
test
sub
sar
leave
mov
or
lods
dec
xorl
test
inc
cmp
lods
xor
clc
mov
sbb
loopne
movsb
mov
dec
insl
mov
test
jge
loope
cld
xchg
mov
aad
jl
jnp
cmp
rcll
les
sahf
cmp
lds
jnp
dec
ljmp
das
imul
adc
xor
pop
fiaddl
cmp
lahf
mov
adc
pusha
loop
xor
outsl
lods
inc
push
xchg
into
xchg
mov
sub
push
xchg
adc
nopl
mov
dec
fcoml
pop
addr16
mov
das
mov
imul
and
xchg
mov
ret
popf
cmp
add
jns
add
cmp
jmp
clc
inc
scas
jmp
test
stos
jo
int
jno
pop
inc
aas
ret
movsb
pop
idivb
mov
clc
cmc
cmp
xlat
test
and
push
fsubrs
iret
aam
sub
aas
enter
mov
lds
inc
in
sbb
or
mov
lds
movsl
mov
inc
cmp
lds
cmp
adc
jl
lahf
add
mov
cli
in
mov
js
fimull
mov
popa
movsl
cmp
jnp
sbb
cmc
shrl
fdecstp
lcall
xchg
dec
push
icebp
cltd
xor
aaa
mov
inc
cmpb
std
nop
aad
vpopcntq
cmp
out
xchg
sub
cwtl
movsl
roll
and
fs
sbb
jle
loope
cmp
xlat
adc
pop
stos
pop
ja
push
clc
iret
pusha
xor
ret
xchg
popa
mov
mov
mov
fldl
daa
adc
mov
push
hlt
scas
cmp
lds
mov
jne
adc
cmp
fildll
sub
inc
repnz
cmp
push
add
sbb
mov
into
sub
je
fs
sbb
bound
add
mov
xor
jge
dec
out
test
ds
lock
jo
clc
xchg
rcrl
jl
cmp
int3
in
and
ja
call
mov
shlb
adc
sub
pop
push
stc
out
push
adc
ret
add
xor
jnp
xchg
jp
mov
xchg
mov
inc
jge
sbbl
push
mov
insb
sbb
push
xchg
push
cmp
repz
jae
and
cs
xchg
pusha
push
jns
in
mov
fisttpll
push
movsb
stos
call
iret
xor
jbe
movb
lds
clc
mov
push
andl
shlb
xchg
and
mov
xchg
inc
loopne
adc
ja
dec
test
arpl
shll
inc
mov
inc
jns
fldl
rcrl
repnz
sbb
mov
aam
ficomps
adc
inc
push
mov
pop
in
or
mov
lcall
cmp
mov
divl
int
fcomi
jo
xor
lea
xchg
loop
mov
fiadds
inc
pop
ret
ds
mov
push
lcall
dec
cltd
dec
or
cmpsb
icebp
cmp
popf
push
add
pushf
pop
imul
or
lods
push
adc
inc
test
into
cmpb
mov
out
xor
push
and
cmp
mov
imul
mov
iret
cmc
arpl
cmp
pop
mov
call
inc
dec
dec
inc
lock
lret
inc
dec
pop
aam
push
test
jge
outsl
lahf
jbe
outsb
jae
arpl
mov
mov
sub
lahf
js
imull
jp
pop
jbe
out
push
xlat
or
jns
ja
ljmp
int3
sbb
jge
movsb
push
push
add
sub
cmpsl
jp
mov
xlat
jmp
enter
inc
insb
mov
sarl
push
ljmp
add
insb
xor
dec
sbb
xor
pop
cmp
pop
in
fisubs
sbb
arpl
arpl
loop
imul
adc
mov
stc
cmp
dec
sub
push
ds
ficoms
push
fmull
mov
mov
sbb
sbb
das
mov
push
jae
aas
push
xchg
mov
dec
loope
rcll
popa
mov
arpl
sahf
leave
sbb
xchg
fldenv
mov
sarl
adc
testl
inc
add
bound
pop
jle
sti
pop
pop
jp
lret
mov
dec
push
dec
stos
jno
add
fwait
pop
push
push
jno
jb
xor
pusha
pop
mov
cmpl
shll
adc
clc
into
std
in
add
inc
popa
pop
inc
xor
sbb
mov
stos
lods
cmp
shufps
loope
in
movl
xor
data16
mov
imul
aad
jl
test
das
mov
in
shll
xchg
jns
jp
inc
inc
fimull
call
adc
and
lret
sub
pop
adc
arpl
adc
in
in
stos
jl
out
imul
sar
mov
out
pop
mov
xchg
addb
push
sub
cmpsl
mov
push
mov
or
in
into
les
pushf
cmp
or
fadds
int3
je
xor
js
lods
dec
fistps
mov
dec
dec
out
xor
jno
jp
cmp
arpl
mov
pushf
sarl
push
outsb
inc
insb
shlb
movsl
scas
inc
cltd
addr16
xchg
sub
dec
je
aas
push
inc
xchg
loop
jo
adc
int
pop
gs
cwtl
adc
cmpsb
fmull
jns
sarb
sub
icebp
xchg
push
fs
jbe
sub
mov
xor
or
les
clts
push
test
das
sub
aad
mov
fdivr
icebp
fdiv
push
or
jb
jge
cmp
or
push
inc
mov
movsb
inc
mov
or
sub
add
aas
inc
sub
mov
faddl
sub
adcl
popf
xor
jp
pop
sub
sub
cltd
dec
popa
push
push
xlat
cmpsb
mov
icebp
lahf
mov
sub
pop
cmpps
jne
xchg
jge
xchg
pop
push
cwtl
push
push
adc
imul
jecxz
out
pop
movsl
sub
jg
loopne
push
sub
xor
and
call
mov
enter
add
frstor
iret
push
pop
xchg
arpl
loopne
or
ror
pop
out
inc
cmp
arpl
add
fnsave
cli
sbb
xchg
jnp
outsb
jl
popf
mov
ljmp
xor
ss
jbe
or
xchg
je
push
dec
jle
jle
mov
mov
stos
lds
sbb
xchg
adc
icebp
push
xchg
mov
sbb
push
mov
test
pushf
push
push
sbb
daa
aas
in
addr16
jmp
jle
jne
jb
and
int3
fwait
adc
out
aad
push
pop
pop
movaps
inc
or
rolb
fld
mov
icebp
dec
and
adc
test
mov
fdivl
lods
xchg
into
stc
cmp
xor
out
mov
pop
cmp
loop
stos
mov
addr16
xor
cwtl
repz
testb
imul
cld
les
sti
jge
clc
movl
cmpsb
jno
sub
mov
or
inc
mov
ret
jge
sbb
test
dec
rcl
sti
ret
cwtl
cli
lds
dec
adc
mov
leave
shrb
js
fstpt
jle
jne
std
add
cmc
xor
xlat
xor
xchg
mov
scas
xor
jno
faddl
mov
out
xchg
inc
fcmovne
das
jno
xchg
fistpl
out
arpl
mov
dec
lods
movsb
add
ffree
fimuls
imul
sbb
ficoml
sub
leave
push
cmp
es
dec
mov
bound
rorl
push
cmp
mov
mov
ja
pop
xchg
jne
sub
add
push
clc
iret
pop
inc
xor
inc
adc
fimuls
sub
xchg
in
fistpll
sti
xor
add
xchg
or
cltd
scas
dec
mov
test
leave
repnz
or
sbb
mov
andl
cltd
loopne
xlat
push
ret
push
pop
arpl
ss
mov
std
outsb
scas
or
js
enter
outsb
xchg
into
jle
jl
add
jmp
shlb
mov
mov
add
test
xor
mov
nop
je
sbb
cli
aaa
in
pop
jb
add
push
adc
pop
loope
mov
or
xor
fisttps
jbe
push
sbb
dec
mov
sub
cmc
in
fcmovne
mov
cmp
adc
push
push
stos
std
nop
repnz
fs
xchg
ret
aam
push
outsb
aad
lcall
clc
mov
jge
adc
sbb
insb
gs
pop
cwtl
and
cwtl
mov
das
inc
push
jns
and
dec
dec
dec
mov
repnz
mov
or
sbbl
negl
fcompl
lret
lret
xchg
out
js
test
xchg
loop
cmc
jge
mov
pusha
pop
xchg
insb
add
rcrb
sti
ss
sbb
jge
mov
add
pop
scas
in
or
rolb
inc
pop
testl
test
pop
test
mov
sbb
inc
sub
addb
movsl
loope
add
inc
xor
dec
mov
pop
fwait
sbb
fdivrl
outsl
int
aam
pop
mov
sub
movsb
js
popa
pusha
sbb
orb
ljmp
mov
iret
xchg
sbb
pop
push
leave
aas
pop
enter
imul
pop
cmp
imul
cs
std
add
mov
adc
ljmp
mov
cs
rolb
adc
pop
sbb
dec
cmc
ds
xchg
lods
inc
jo
adcl
pop
sti
test
mov
sahf
mov
push
movsl
xor
cmp
xchg
mov
lret
sbb
sub
insl
into
or
sahf
lock
mov
addr16
inc
bound
mov
inc
cmp
pop
cwtl
pop
mov
pop
outsl
fwait
sbb
mov
jae
lea
mov
pop
fldt
push
push
dec
es
xchg
jns
inc
jmp
and
adc
ljmp
xchg
test
lret
dec
in
movsb
test
sbb
sub
inc
cs
scas
jmp
sbb
test
imul
mov
rcll
mov
add
outsl
in
into
and
rcll
pop
repz
lock
xor
push
dec
pop
cmp
mov
jb
cli
dec
jb
push
popa
movsb
ljmp
mov
leave
jmp
mov
sub
out
mov
fnstsw
or
aas
sarb
hlt
pop
int
mov
popa
bound
or
lock
mov
addr16
cmp
stc
in
popf
and
xor
jmp
cli
xchg
js
sub
inc
sbb
xor
cmp
or
addr16
xchg
mov
lret
mov
sbb
aad
dec
add
lock
adc
mov
clc
adc
jne
mov
sub
mov
jne
or
sbb
out
scas
push
push
cltd
xchg
rorl
pop
jne
pop
adc
test
hlt
xchg
imul
enter
jge
imul
movsl
lcall
push
sahf
mov
push
iret
push
sub
ja
push
and
mov
aas
pop
sub
xchg
cmp
sbb
inc
data16
or
mov
cmp
sbb
jmp
fldl
add
sub
lahf
dec
sbb
lds
outsb
ljmp
jle
jg
stos
ret
outsl
jl
ss
sub
or
out
mov
push
jp
xchg
fidivs
xchg
push
add
lock
adc
pop
mov
and
sbb
sub
push
popa
idiv
inc
ljmp
push
in
addr16
cmpsb
mov
jne
mov
ret
imul
mov
push
pop
mov
cld
repz
jnp
in
xchg
out
lds
data16
jmp
add
jp
adc
pop
in
enter
cmpsl
dec
sti
sbb
push
push
jp
push
pop
lods
std
imul
sti
lret
insb
test
lds
xchg
cmp
neg
jp
adc
pop
loope
jo
aad
ficompl
push
xchg
mov
and
test
inc
loope
aam
cmpsb
jmp
test
dec
dec
daa
lahf
adc
push
in
push
or
scas
aaa
push
adcl
dec
dec
insb
pop
js
sahf
test
sbb
sbb
dec
in
add
sub
xlat
add
pop
add
mov
pop
repnz
pop
lret
xor
push
es
sub
pop
sar
jle
or
lahf
js
fcomps
cld
shrl
pop
mov
cmp
add
mull
stos
js
cld
ds
or
arpl
mov
push
mov
rcr
test
in
xchg
cld
sub
enter
jbe
movsb
sbbl
and
int
cmpsb
aad
rolb
sub
sub
stos
dec
push
push
jno
mov
push
jbe
sbb
sbb
cld
mov
pop
mov
push
clc
shl
mov
daa
sbb
arpl
fisubrl
lcall
pop
xor
adc
call
dec
lret
adc
lahf
jnp
sbb
mov
cmp
outsl
jno
test
pusha
or
in
jbe
inc
cmp
adc
inc
data16
imul
fbld
movsb
cmp
xor
dec
jmp
sub
ficoml
mov
hlt
stos
jle
adc
std
inc
fsubs
dec
or
or
lcall
test
push
xchg
stos
xchg
dec
mov
pushf
pop
pop
test
sub
loope
out
xchg
out
pop
push
cmc
pop
outsb
outsb
fsts
mov
push
inc
mov
hlt
jg
stc
insl
lret
sysenter
add
inc
insl
xor
lock
xchg
js
inc
jae
sub
jae
add
shrb
add
fcomp
ret
repnz
dec
add
or
cli
out
dec
pop
jecxz
inc
test
mov
jg
xchg
ret
stos
stos
icebp
mov
lods
and
sar
cmp
aam
cwtl
lahf
pop
lret
xchg
xchg
dec
jne
mov
iret
rcll
iret
or
push
repnz
xchg
inc
sbb
xchg
add
hlt
bound
or
ficoml
and
aam
cli
data16
je
adc
push
cltd
js
fists
enter
je
adc
loopne
iret
cld
je
push
or
xchg
xor
fs
add
lock
jl
addr16
push
sahf
into
lcall
rcrl
into
ds
adc
lahf
mov
dec
in
mov
rol
xor
jg
pop
xor
js
out
dec
jg
fsubs
push
jmp
push
dec
repnz
ss
outsl
mov
xor
in
push
add
adc
test
pop
mov
pop
outsl
int
addr16
nop
mov
cs
xor
fdivrl
mov
test
push
push
fidivrl
fsqrt
lret
dec
mov
arpl
cmpsl
cmp
and
jmp
fisttpl
inc
pop
popf
aas
mov
mov
jge
xor
jnp
sbb
pop
mov
neg
add
subb
sbb
leave
stos
out
mov
out
fstps
mov
flds
push
repnz
mov
in
mov
fs
jb
out
add
mov
out
push
ljmp
xchg
or
lods
sbb
jg
mov
xor
and
mov
icebp
in
or
mov
cmpsl
xor
xor
mov
push
pop
xor
sbb
jae,pn
or
mov
mov
mov
aam
adc
jp
repnz
mov
in
je
jb
in
cmc
out
xor
cmp
jecxz
movsl
int
dec
movsb
jne
dec
mov
jnp
fwait
jl
add
dec
cwtl
bound
int
leave
xchg
arpl
out
pusha
cmp
dec
adc
xor
lods
pop
mov
pop
add
or
mov
mov
mov
scas
cli
test
jmp
lods
mov
fs
xor
jnp
push
dec
or
lret
add
pop
in
dec
jbe
mov
jne
jp
sub
push
fmull
xor
sbb
push
popa
out
mov
inc
and
int
cld
adc
xor
add
popa
xchg
pop
inc
stc
push
repnz
out
inc
movl
lret
mov
xchg
imul
enter
icebp
dec
pop
fsubp
shlb
pop
daa
add
mov
cli
pop
jb
and
xlat
scas
jne
sahf
jecxz
fdivl
cmpsb
hlt
add
leave
es
pop
inc
ret
fwait
addr16
ja
or
je
push
dec
jg
dec
push
dec
xchg
push
outsl
cmc
add
imul
lock
cwtl
int
xchg
stos
xchg
jno
gs
sbb
sub
arpl
xchg
sbb
aaa
jbe
push
push
add
xchg
jnp
push
scas
jg
mov
mov
fisttpll
lds
jp
imul
add
cmpsl
push
jge
lcall
xchg
popa
jno
popf
cmp
adc
xchg
push
test
add
cmp
test
imulb
push
push
pop
dec
jecxz
jne
sarb
pop
insl
push
ljmp
out
in
je
addl
call
xor
bound
loope
dec
fwait
dec
inc
ror
stc
dec
xchg
adc
dec
stc
pop
push
in
add
push
fucom
filds
xor
adc
fidivl
adc
jecxz
push
xchg
xchg
aaa
mov
dec
dec
xchg
jo
nop
and
pop
sbb
inc
push
jbe
fwait
movsb
test
cmp
popa
push
or
xchg
jg
xor
mov
movl
ja
jp
mov
inc
dec
dec
jb
movsb
nop
sbb
into
sbb
pop
dec
mov
fisubl
and
and
mov
inc
adc
data16
fdivrs
stc
ret
loopne
mov
or
push
push
mov
repz
jmp
repz
or
daa
cli
cltd
pop
pop
repz
nop
jp
aam
dec
add
push
test
push
pop
sarb
lods
push
sub
adc
xchg
mov
cld
mov
repz
cli
stc
pop
jmp
pop
mov
lds
fs
stc
xchg
fisubrs
sbb
jno
add
adc
test
daa
hlt
sti
and
repz
mov
cmp
scas
xlat
in
outsl
outsb
lock
int
and
add
mov
out
out
cmp
sbb
shrb
inc
push
mov
adc
mov
icebp
outsl
mov
cmp
jl
ud0
adcl
movsl
push
insb
lea
push
cmp
jbe
stc
fldl
sub
stc
leave
xor
aam
jo
scas
sub
pop
out
repz
andl
cmc
arpl
outsl
mov
movsl
and
lcall
leave
fists
leave
xor
out
in
int3
gs
jne
lds
adc
add
add
rclb
scas
mov
jae
and
scas
sbb
clc
sub
sub
js
jecxz
mov
inc
mov
pop
adc
test
das
sub
ret
mov
insl
dec
pop
icebp
mov
xchg
add
addr16
pop
rolb
xor
aad
xorl
mov
jnp
or
das
es
das
mov
enter
cs
scas
xor
jb
pop
sbb
cs
push
roll
cld
jle
mov
mov
sarl
cmp
adc
movsb
out
test
loopne
aam
lcall
jmp
hlt
sub
neg
std
int3
movsl
xor
lahf
dec
xor
int3
pop
pop
pop
cmp
jmp
arpl
jno
fidivrs
jno
loopne
inc
bound
loop
gs
xchg
icebp
push
in
das
push
jg,pt
imul
pushf
mov
inc
call
mov
pop
pop
es
ret
jns
outsb
push
outsb
fs
push
sub
adc
dec
daa
push
dec
icebp
cmpsl
fistpl
mov
fisttpl
rcll
pop
mov
ja
mov
mov
dec
or
push
adc
gs
jmp
lock
test
addr16
xor
popa
or
lock
insl
sbb
out
push
pop
xor
adc
jge
push
push
mov
int3
fildll
jb,pn
pop
into
mov
loop
fwait
ja
cwtl
dec
jg
mov
ljmp
mov
daa
dec
xchg
pop
out
xchg
or
movsb
fistps
push
sub
adc
clc
stos
xchg
pusha
and
dec
arpl
inc
test
fndisi(8087
fisubrl
jo
inc
pop
sub
hlt
mov
dec
add
mov
push
inc
cli
sbb
or
jo
andl
mov
dec
out
lods
mov
popa
lret
repnz
inc
and
cltd
jecxz
sub
jb
nop
inc
mov
pop
lret
mov
gs
pop
pusha
adc
dec
test
mov
orb
movl
fidivs
add
xorl
test
xchg
repz
daa
flds
jb
shl
popa
je
push
outsb
shrb
fldz
fucomip
pop
jecxz
adc
jmp
cwtl
lahf
lret
push
jle
mov
loope
inc
fimull
cld
push
mov
jno
cwtl
jp
cmp
mov
ret
xor
jge
arpl
xor
mov
pop
xor
sti
cmpsl
sub
sarb
les
leave
sbb
jmp
scas
shr
mov
jg
or
movsb
dec
dec
ret
shl
mov
xor
stos
or
or
pop
inc
fldt
mov
bound
loopne
push
out
sar
cmp
insb
jp
int3
push
in
out
gs
je
test
imul
ljmp
lods
dec
add
jecxz
inc
inc
stos
inc
enter
mov
cmp
mov
adc
inc
leave
sub
lret
fstpt
fidivs
rcr
mov
ljmp
lods
adc
xchg
xor
mov
or
cmp
sub
test
or
fxch
adc
arpl
mov
mov
cmpsl
and
pop
xchg
cmpb
test
dec
out
xor
imul
cs
shlb
rclb
out
sti
adc
fists
cs
inc
jno
mov
out
xor
jno
xor
jne
lods
test
dec
jmp
out
stos
subb
lock
lret
push
scas
inc
pop
addr16
mov
push
aad
sbb
push
clc
xchg
jns
mov
add
in
lret
movhps
int
xlat
lcall
ss
cmc
rolb
aas
ret
shll
fistl
int
aam
sub
add
je
mov
sbb
jge
cmp
xor
mov
add
cs
test
lods
pop
jae
cld
call
fcomp
cs
das
cmpsb
jbe,pt
cmp
cmp
stc
stos
frstor
shrl
mov
and
lds
jge
adc
cld
or
lcall
cld
dec
xor
pop
mov
int
push
push
fldenv
mov
xchg
and
mov
movsl
and
ds
mov
repnz
aaa
and
sbb
cmc
pop
sti
inc
lret
jge
xor
push
repz
mov
sbb
int
jo
test
dec
xlat
mov
mov
sub
mov
sbb
dec
mov
movsl
adc
popa
dec
hlt
jp
pop
push
mov
fisubl
xor
fmul
inc
adc
pop
xlat
jnp
xlat
cmp
cwtl
push
aaa
lock
pop
pop
shrl
sbb
mov
loop
xor
xchg
and
lods
aam
repz
push
mov
cmpsl
insb
in
jns
lock
shrb
mov
dec
inc
jo
dec
jl
test
inc
push
lret
out
add
pop
in
pushf
sbbl
push
ja
sbb
sbb
xor
stc
aaa
mov
push
cli
mov
call
je
and
aad
scas
xchg
and
xchg
in
push
stos
lock
aaa
icebp
dec
stos
cmp
sbb
dec
push
jp
cmp
negl
or
iret
pop
in
lret
cli
cmp
and
loope
jne
scas
test
xchg
xor
inc
and
int3
cli
imul
sbb
sub
jae
lret
icebp
add
scas
int
jne
pop
dec
mov
das
dec
push
sbb
outsb
jae
push
sahf
stc
mov
inc
jecxz
gs
xor
aas
mov
xchg
jmp
aad
push
into
pop
lods
lods
enter
lret
mov
movsl
mov
jl,pt
lods
ds
inc
cmp
push
xchg
xor
adc
jbe
dec
inc
add
xchg
mov
mov
sub
sub
sub
mov
inc
subb
or
scas
cmc
cli
fiadds
mov
mov
inc
jg
lret
or
fwait
lds
xor
lock
test
clc
cltd
ljmp
fsubl
push
mov
js
cld
jp
xor
ficompl
aaa
dec
push
in
scas
xchg
scas
cmpsl
cli
scas
push
jle
jne
mov
mov
mov
jmp
icebp
rcl
leave
dec
cmp
jnp
into
fs
jecxz
in
and
pop
or
loop
cwtl
dec
inc
loop
popa
data16
sbb
out
stos
movsb
mov
xchg
xchg
in
mov
aas
inc
xchg
lods
mov
fstl
pop
and
nop
les
xchg
in
in
or
jno
ret
sub
xlat
jmp
in
in
sbb
dec
pop
xor
add
pop
lahf
push
or
pushf
cmp
sub
inc
loop
xchg
ret
xchg
mov
and
lea
lret
loopne
in
ret
adc
icebp
push
inc
cmp
cmc
mov
pop
pop
loope
dec
ja
xchg
leave
xor
push
in
scas
shrb
insb
mov
mov
mov
imul
dec
mov
push
cwtl
pop
adc
ret
xor
mov
xchg
int
and
adc
sarb
mov
sti
push
or
popa
push
cmp
out
adc
inc
sbb
aam
movsl
scas
or
fldt
xchg
lods
cmp
add
pop
lock
jecxz
jle
sbb
add
das
lods
popa
sub
int
xchg
test
mov
cmc
mov
popa
stc
lods
pop
into
mov
mov
adc
adc
dec
dec
cmpsl
repz
mov
xor
push
ror
enter
pop
push
mov
loope
fdivrl
dec
daa
in
sub
pop
lret
xor
iret
iret
stos
rcrb
or
out
mov
mov
xchg
test
enter
insb
popf
inc
adc
inc
add
mov
or
add
gs
cmp
adc
mov
stc
add
fcmovnu
into
xchg
shl
in
insl
adc
dec
pop
pop
cld
sbb
or
loop
aaa
sub
iret
xchg
mov
jl
stos
xchg
dec
add
cltd
pop
clc
lea
mov
jno
mov
xchg
add
and
vpsraw
pushf
aad
pop
popf
dec
cltd
mov
test
aad
popf
test
movsl
leave
jmp
scas
jb
xor
aas
call
pop
enter
ret
sahf
stos
and
or
lcall
sbb
xchg
adc
int
xor
cltd
mov
ucomiss
mov
inc
in
sbb
in
cltd
sbb
lods
in
add
jg
jecxz
outsl
mov
push
pushf
mov
js
xchg
inc
pop
pop
jecxz
and
mov
add
push
lcall
add
xchg
mov
xchg
in
nop
sub
push
pop
pushf
pushf
dec
xchg
push
repz
mov
out
mov
pop
mov
pop
int3
repz
dec
pop
stos
outsl
movsl
push
cmpsb
pop
out
imul
ja
test
stos
jo
js
outsb
sti
out
fcomi
xor
inc
or
test
pop
inc
push
inc
cmc
dec
lea
popf
insb
loop
mov
xchg
sahf
cmp
ss
repz
ret
aam
mov
push
xor
mov
inc
or
ror
push
incb
xor
cmpsl
loopne
test
mov
fstps
mov
jae
loopne
sub
nop
test
out
lar
out
lods
fcoml
daa
rclb
insl
xchg
movsb
sbb
push
xor
push
inc
jb
inc
jl
or
popa
mov
movb
outsb
clc
sub
jmp
das
xor
popa
loop
or
mov
fstpt
loop
pop
clc
sub
mov
adcl
daa
lahf
loopne
divl
decb
ja
fmuls
cld
add
sbb
gs
add
or
push
push
adc
pushf
cltd
cmp
and
leave
xor
jo
adc
mov
jmp
pop
dec
dec
mov
shl
into
ret
adc
adc
pusha
or
push
push
pushf
dec
iret
fs
mov
adc
jle
add
add
cs
xlat
iret
or
dec
into
sub
xlat
outsb
adc
loop
fistpll
adc
jmp
das
push
mov
push
mov
mov
and
out
sub
pusha
clc
aaa
lods
sbb
cmpl
cmp
mov
add
in
jmp
std
mov
adc
out
mov
xchg
adc
cmp
inc
out
rolb
fistps
jge
andl
dec
push
push
pop
stc
sbb
bound
jnp
cmp
sub
mov
push
add
mov
xchg
inc
stc
movsb
cmpsl
xchg
sbb
mov
cwtl
xchg
inc
and
sub
and
mov
adc
xchg
sbb
stos
loope
jne
mov
mov
mov
cmp
xchg
dec
loope
ss
jle
jne
cmp
pusha
mov
jo
mov
int3
xchg
outsb
pop
dec
hlt
xchg
test
mov
loope
pop
mov
push
add
test
dec
mov
repnz
xchg
jno
push
inc
adc
popf
xchg
mov
and
mov
call
jns
out
and
popa
sbb
fmull
jmp
push
cmp
scas
arpl
lcall
fsubl
stos
aam
jno
insl
sarb
sbb
aas
jnp
or
std
cmp
mov
mov
pop
je
pop
xor
xchg
shrl
sbb
arpl
sti
sbb
in
jbe
pop
pop
mov
mov
xor
jno
push
or
ret
inc
push
mov
mov
sarl
sbb
sub
mov
dec
repnz
rcrl
pop
into
fsubrl
push
lds
adc
mov
aad
dec
ss
mov
rorl
dec
sti
ja
dec
xchg
js
inc
int
imul
insb
sub
jmp
pusha
or
pop
fstl
cmpsb
mov
cmc
jne
lock
and
cmpb
je
sbb
push
cmpsb
ds
enter
pop
inc
push
mov
dec
adc
push
outsb
aam
sahf
or
pop
std
mov
rcrl
jno
iret
outsl
test
mov
cmpsl
out
jle
rorb
stos
test
push
dec
pusha
fldl2t
mov
xchg
lcall
jmp
loopne
sarb
mov
ljmp
aaa
nop
pop
xchg
ljmp
pop
cmp
pop
adc
lea
mov
or
sbb
cli
dec
rclb
scas
dec
xchg
sti
int
cmp
ds
add
mov
adc
int
loop
jle
loop
cli
outsl
jb
and
fildll
jnp
mov
sub
in
in
loope
call
fsts
dec
cmpsb
mov
bound
cmpsl
push
jle
adc
loopne
mov
and
imul
sbbb
insl
test
adc
lret
in
and
add
fldenv
push
sub
mov
aad
sbb
xlat
lods
push
mov
adc
sub
or
dec
dec
test
inc
imul
inc
mov
sbbl
or
push
jle
pop
pop
xchg
or
dec
inc
xor
vphaddubd
pop
lds
out
xor
and
push
or
fdivr
pop
ret
sbbl
enter
adc
add
inc
scas
aas
push
push
sub
mov
mov
cwtl
cmp
rclb
andl
jb
xchg
rclb
and
sbb
and
xchg
fldenv
scas
dec
aas
imul
or
add
insl
adc
inc
sbb
inc
xchg
cmpsl
cmp
movsl
ret
push
in
jp
pop
std
scas
mov
inc
or
cmp
stc
stos
lds
add
lcall
pushf
sbb
ds
cmp
mov
xchg
dec
push
enter
lods
imul
out
fsubp
outsb
ja
lret
lcall
stc
fbld
mov
andl
push
pop
sbb
inc
sbb
push
fs
inc
jno
dec
and
mov
stos
mov
add
inc
pop
insb
imul
xchg
fmulp
ja
aas
lcall
mov
popa
gs
data16
xor
cmp
pop
pusha
pop
adc
push
push
test
dec
into
add
popa
or
fwait
imul
les
push
push
add
jns
shrl
sbb
dec
jp
mov
out
fdivs
cmp
inc
dec
push
je
sbb
mov
mov
xor
push
in
sub
jle
sbb
sar
sbb
sahf
mov
out
add
or
inc
cli
iret
repnz
sub
movsl
out
mov
push
jae
outsl
sar
cmp
sub
cmp
xor
out
mov
inc
push
lods
into
cli
cld
jno
pop
lret
lcall
push
dec
sub
data16
out
aad
mov
xchg
dec
lock
int
cmp
rolb
push
mov
popf
push
cld
js
cmp
es
lds
push
mov
enter
mov
and
cltd
bound
xchg
es
xorb
lcall
in
cmc
jns
push
mov
dec
out
call
repz
mov
mov
clc
fadds
test
pop
push
jb
addb
aaa
lcall
add
adc
ret
repnz
ja
enter
adc
dec
cmpsb
rorl
or
js
sarl
ss
fmull
icebp
arpl
cs
adc
or
sub
push
pop
adc
ljmp
js
and
test
mov
xor
pop
fnstcw
cmpsl
sbb
mov
push
sub
inc
push
lods
mov
mov
cmp
lcall
jae
dec
into
mov
push
inc
pop
dec
xor
cmp
subb
fs
ds
insb
jmp
ds
mov
dec
xor
fcompl
mov
popa
inc
fdivp
outsl
sub
insb
push
mov
jp
sbb
cmp
sub
fisubl
shrl
in
push
xor
xor
rcl
and
mov
fildl
xchg
and
mov
cmp
adc
pushf
and
movsb
mov
or
jle
dec
mov
fs
pusha
mov
aad
cmpsl
data16
adc
loopne
mov
or
andb
pop
cmpsb
jecxz
inc
xchg
or
xor
dec
push
es
cmp
xor
lods
fsubrl
repnz
mov
mov
lret
in
frstor
stos
pop
aaa
xchg
xor
or
push
push
mov
mov
lods
cmp
xchg
bound
ret
xchg
xlat
adc
xchg
push
lock
add
inc
mov
xchg
cmp
mov
push
shr
std
or
leave
adc
dec
fsubrs
cmc
ret
adc
cmp
stos
jl
lcall
dec
or
mov
addb
std
push
cs
sub
pop
cmp
fs
push
and
xor
adc
repnz
inc
inc
aam
in
xor
insl
notl
lods
jg
fwait
mov
mov
sbb
pop
cmp
dec
mov
aaa
inc
jae
sahf
je
sub
pop
nop
sub
call
cwtl
enter
adc
insl
es
sub
mov
jo
xchg
jp
mov
rcll
loop
popa
xlat
cld
mov
test
push
dec
mov
dec
sub
lret
ret
cmp
imul
fwait
or
sbb
mov
add
clc
loopne
mov
cmp
push
or
fwait
push
pop
adc
sub
xchg
xchg
sbb
lods
sub
adc
mov
xor
or
push
and
nop
push
jno
cmp
mov
mov
xchg
mov
dec
aam
rclb
add
icebp
cmpsl
sub
loop
sub
mov
jle
pop
repz
inc
outsl
inc
and
mov
lds
jnp
std
frstor
mov
ljmp
add
inc
ror
xor
xchg
sahf
ds
push
cmp
imull
sar
repz
mov
push
les
sub
pop
mov
lods
inc
daa
cs
push
fidivl
scas
lods
jge
add
aad
outsb
dec
cmp
sbb
adc
shrb
push
lea
jg
je
push
push
push
sub
xchg
mov
lods
or
dec
adc
or
sbb
pop
shrb
sahf
push
sub
lods
sbb
scas
pop
js
stc
fistl
dec
xchg
punpcklbw
faddl
into
xor
push
push
and
jp
shlb
xchg
shll
shll
sub
cs
jno
jp
push
clc
clc
fdivl
and
xchg
sub
sbb
mov
std
push
lret
cwtl
stos
push
xchg
mov
mov
mov
loopne
into
push
jo
mov
sub
repz
ja
cwtl
push
push
sbbl
inc
sarb
add
sub
inc
lods
mov
pop
out
add
jne
push
jmp
jnp
andl
xor
idiv
lahf
mov
sub
popa
inc
cmp
push
imul
adc
in
insb
or
cmpsb
enter
int
repnz
inc
nop
mov
push
inc
loopne
mov
popa
mov
cmp
insb
cmp
cmp
mov
push
mov
xor
imul
cli
cli
insl
je
pop
mov
fsubrl
xchg
adc
test
aaa
inc
fdivl
stc
sbb
lods
rcl
pushf
into
lods
fcmovb
push
xor
adc
orb
xchg
and
xchg
gs
mov
mov
cld
jle
test
mov
loopne
inc
push
mov
insb
sub
or
cmp
mov
and
adc
sbb
iret
pop
lcall
fnstcw
shl
popa
lods
sbb
movsl
pop
dec
jb
and
mov
fsubrl
in
movsl
loop
ljmp
test
sbb
movsl
jmp
adc
out
bound
push
sub
ficompl
pop
movsl
xor
push
in
sti
xor
mov
addr16
and
pop
arpl
mov
inc
cmp
enter
es
cmp
cmpsl
dec
cmp
sbb
es
das
jge
mov
fimull
push
and
push
loopne
iret
jnp,pt
pop
test
mov
dec
mov
sbb
sbb
or
adc
xchg
stos
inc
xor
ss
fidivrs
sbb
dec
loope
lcall
lret
inc
mov
lods
dec
mov
push
pop
push
adc
and
adc
imul
call
mov
fldcw
adc
adc
scas
popa
sbb
loop
repz
arpl
cmp
hlt
dec
or
xor
jo
mov
mov
into
repz
rcrl
outsl
fcmovnb
sub
cmp
jno
bound
and
mov
jne
jecxz
loopne
cmpsb
jnp
add
inc
cmpsb
fdivrs
xor
push
es
fwait
and
out
mov
ja
in
mov
adc
jle
and
mov
in
cmpsb
or
xchg
add
aam
ds
push
repz
mov
mov
mov
and
xchg
iret
sahf
lahf
in
add
add
push
pop
mov
xor
push
cltd
jl
lds
cmp
sub
fstpt
adc
xor
mov
pop
enter
pushf
add
fdiv
cmp
or
lcall
les
adc
mov
imul
movsb
cmpb
sbb
sbb
icebp
jo
sbb
mull
jge
or
add
stos
lods
cmpsl
mov
mov
pop
insl
cmpsb
je
sbb
imul
cmp
pushf
push
fcmovnbe
aam
pop
fs
cmp
mov
xchg
daa
leave
push
inc
jmp
pop
xchg
lock
push
vpsraw
jp
mov
popa
data16
insl
xor
movl
push
ljmp
shrl
inc
stos
je
pop
aam
adc
push
adc
and
jp
aam
or
movsl
dec
lea
lods
in
jge
mov
ds
xor
outsb
jae
clc
nop
int3
cmp
das
std
pop
lods
in
call
in
inc
js
adc
add
or
in
daa
and
aaa
cmp
test
rolb
mov
mov
lods
test
adc
shl
jg
mov
jp
xchg
clc
xchg
push
mov
xor
es
cmp
adc
mov
pushf
pop
andb
mov
or
enter
adc
mov
add
push
aas
gs
mov
mov
sub
pop
in
out
inc
fadds
and
inc
xrelease
ljmp
std
push
lock
mulb
jns
push
lret
xchg
pop
mov
lret
sub
jno
cli
mov
cmp
jmp
stos
cmc
pop
adc
cwtl
inc
sbb
cmp
pop
addr16
stos
cmp
push
dec
mov
xlat
pop
lods
xor
jbe
jle
add
cmp
leave
xor
jg
or
add
test
cmp
out
cmp
push
test
cmp
xor
sub
fsubs
inc
arpl
pop
cmp
mov
jnp
hlt
call
or
pop
mov
add
sub
nop
fdivl
mov
gs
push
xchg
int3
shlb
nop
call
scas
cmpsl
or
outsb
cmc
int3
dec
shl
shl
pop
cmp
daa
daa
dec
out
or
in
mov
jae
shrl
sub
fcmovne
lock
and
push
popa
adc
mov
loop
jbe
fsubrp
mov
xor
inc
pop
in
mov
aaa
xchg
das
in
jg
xchg
dec
cmpsl
movsl
stos
lods
xchg
daa
cltd
fstl
lret
test
mov
repz
push
lcall
mov
xor
imull
scas
mov
rcl
add
and
aad
test
aas
insl
sbb
rcrb
mov
and
cs
mov
outsl
aad
jns
lcall
lret
and
vmovq
cwtl
rcrl
adc
xor
lock
sbb
aas
push
insb
je
jp
scas
or
inc
in
adc
ss
cmpb
repz
dec
cld
sub
fmull
inc
xlat
fcomps
hlt
push
dec
fnsave
mov
int3
shll
data16
roll
shlb
dec
mov
outsl
pop
dec
add
sub
mov
out
out
aad
pop
dec
inc
sbb
mov
clc
xlat
xchg
insl
int3
nop
jbe
mov
sbb
shlb
dec
lcall
fprem1
in
mov
push
or
push
cmp
xlat
dec
xchg
dec
mov
inc
pusha
mov
mov
ret
orb
jae
dec
rorb
lahf
or
shl
popa
xchg
mov
xchg
jge
xchg
loope
test
clc
xor
xchg
pop
mov
fs
jns
incb
sub
js
enter
pop
rcrl
mov
mov
pop
push
jns
mov
sbb
lcall
cmc
jg
mov
bound
lods
data16
sbb
in
xchg
and
int3
ja
inc
imul
in
lea
dec
mov
or
fdivrl
adc
pop
jo
cmp
xchg
push
mov
or
out
jne
mov
nop
fcmovu
pop
pop
inc
dec
enter
in
mov
inc
or
or
or
add
mov
jle
imul
outsl
test
icebp
lahf
mov
out
push
mov
or
sub
sub
xor
std
xchg
scas
rcl
or
cmp
out
mov
pushf
or
fwait
out
in
rcrl
xchg
int3
cld
fcompl
pop
and
stos
cmpsl
cmp
bound
ja
and
sbb
lock
mov
jns
daa
add
loopne
dec
not
insl
cmp
or
and
mov
popl
mov
adc
pop
mov
popa
outsl
mov
push
imul
push
add
lods
pop
add
hlt
nop
xor
das
lock
aad
fidivrl
test
hlt
in
imul
inc
push
xorl
ret
cli
sub
fisubl
mov
mov
inc
add
or
movsl
cmpsl
xorb
xlat
pop
stos
dec
out
subl
gs
fmuls
sub
add
test
push
test
jns
cmp
ret
cmpsb
mov
add
adc
xchg
fcoml
cld
shrl
icebp
adc
cmp
scas
sbb
test
push
cmpsl
dec
jl
push
mov
pop
xchg
mov
xchg
and
movsl
pop
and
sbb
rcrb
out
and
jmp
sub
es
cmpsl
insl
or
lsl
push
lods
jnp
inc
test
push
or
inc
or
sbb
xchg
cli
dec
pop
mov
stc
fidivs
negl
popf
xchg
push
dec
pop
mov
out
dec
jmp
cmp
dec
pop
mov
aaa
ss
roll
iret
adc
push
rolb
pop
jg
cmp
inc
mov
dec
mov
adc
fdivr
loopne
mov
jnp
lods
lods
bound
jne
addr16
roll
mov
cmp
incl
jecxz
adc
add
xor
test
imul
repnz
mov
jmp
jbe
add
push
stc
pop
iret
out
xor
fwait
xchg
push
mov
push
adc
shll
mov
outsb
adc
jecxz
inc
cli
pusha
push
sbb
sbb
mov
test
jle
pop
out
pop
ret
ds
seta
inc
xchg
fucom
mulps
pop
pop
xor
mov
ret
cli
nop
push
lret
pop
insb
mov
sbb
mov
cmp
xchg
sbbb
in
jbe
and
call
out
ficompl
and
dec
pushf
enter
inc
pop
jl
xor
or
aas
fdiv
in
incl
push
dec
pusha
xchg
pusha
repz
add
repnz
outsb
cmc
pushf
or
stc
cmp
in
rorb
cld
push
lea
out
pop
sub
lds
int
pusha
cmc
les
rorl
pop
pop
pop
sarl
add
std
dec
xor
fbstp
mov
loop
adc
ret
jmp
shll
jecxz
add
mov
mov
pop
testl
cmc
sbb
pop
roll
out
push
fwait
add
movsb
fiaddl
push
inc
mov
cmp
jne
stos
inc
mov
mov
xchg
mov
cmp
mov
mov
hlt
lds
fs
push
lcall
inc
pop
sub
mov
mov
fnsave
sub
fxch
repnz
out
xchg
add
and
cmpxchg8b
lret
jo
test
gs
mov
push
int3
add
mov
pop
vandps
inc
icebp
dec
aad
lcall
xchg
push
mov
inc
clc
loopne
xor
push
adc
inc
cmc
push
hlt
pop
int3
push
and
stos
cmp
lods
dec
stos
jmp
out
scas
insb
cltd
test
movsb
mov
cli
mov
pushl
jl
xor
jp
imul
popa
pop
mov
xchg
gs
mov
mov
fcompl
inc
sbb
mov
pop
jmp
xchg
mov
and
ffree
or
xchg
decl
add
enter
mov
arpl
mov
mov
loope
mov
xor
mov
cmp
lahf
aaa
inc
sbb
cmp
mov
xchg
adc
push
aas
lret
iret
pop
jns
pop
jnp
adc
cmpsl
or
inc
leave
lods
pop
xchg
popf
sbb
pop
pop
xor
leave
data16
mov
sbb
cmp
xor
mov
popf
and
dec
je
cmp
pop
jg
add
and
mov
cmp
add
xorl
mov
sbb
ret
addr16
pop
sub
push
mov
sahf
shll
jge
xchg
sahf
mov
sbb
std
dec
in
push
ret
mov
rorl
and
out
mov
sbb
scas
sub
or
jg
or
outsl
test
jle
pop
leave
dec
mov
jnp
loop
pop
daa
push
jnp
je
call
dec
movsb
sub
shrl
in
or
jbe
js
cwtl
mov
nop
jl
lret
pop
les
sbb
jae
out
repz
ret
int
jl
js
insl
jmp
pop
adc
lret
stos
hlt
adc
or
push
xchg
jmp
sub
rcrl
push
push
ja
add
andl
imul
das
push
cmp
inc
pop
jl
cmp
paddw
pushf
cwtl
adc
mov
out
dec
mov
xchg
stos
adc
mov
add
mov
dec
hlt
gs
lock
jge
stc
shl
xor
adc
das
mov
pop
mov
je
shr
lfs
sahf
rorl
xor
sbb
testl
jl
jecxz
push
cmc
out
jmp
lahf
ja
leave
or
loop
daa
jbe
adc
mov
xor
pop
or
or
inc
adc
cmp
loop
cs
and
xchg
fidivs
mov
into
lods
cltd
aam
mov
imul
pop
dec
mov
ljmp
les
jp
aas
jge
fadds
and
pop
in
jnp
and
jo
mov
or
stc
test
jno
adc
xchg
xchg
mov
movsb
pop
repnz
stos
mov
pop
lahf
mov
ds
cmpsb
and
movb
cmp
cmp
mov
mov
lcall
jno
mov
pop
shl
xchg
aas
and
popa
push
cmp
das
imul
rcl
repnz
pop
push
add
rcrb
and
testl
push
mov
repz
mov
stos
push
stos
pop
dec
sbb
and
arpl
ror
jo
ror
call
fsubrs
add
int
and
pop
cmp
dec
jbe
fucom
fstpt
stos
loope
out
shrl
mov
imul
fsubl
add
pop
daa
jle
push
leave
aaa
add
push
fistpl
je
xchg
xorb
sub
cmc
sbb
fimull
jge
popf
sub
jns
in
movups
out
popa
dec
pop
mov
les
mov
and
repz
jns
inc
subl
ret
int3
cs
pop
cltd
in
xor
add
imul
divl
std
shll
aam
pop
in
outsl
jnp
dec
and
aam
test
mov
int
dec
ret
xor
addr16
inc
jbe
in
icebp
xor
lds
mov
and
mov
roll
add
ror
add
aad
mov
add
jg
test
dec
xchg
rorl
dec
pop
sub
pop
in
inc
cmc
xlat
inc
aas
mov
fwait
test
lret
xchg
lods
js
lea
inc
addb
xor
cmp
rcrb
jmp
inc
mov
xchg
adc
dec
andb
es
xlat
sbb
cmpsl
aas
jb
xchg
clc
jmp
cmc
imull
js
call
testb
mov
leave
sbb
into
outsb
cmp
hlt
data16
xchg
mov
std
or
imul
gs
sbb
sbb
pop
jno
in
sub
pop
inc
or
adcl
leave
push
arpl
out
fcmovbe
iret
cmp
adc
inc
lock
sti
xor
add
push
loope
out
cmp
fs
int
or
int3
pop
xor
leave
outsb
jl
add
sbbl
gs
mov
mov
popfw
cmp
rcl
mulps
scas
or
or
fidivrs
stc
rcll
cs
mov
and
push
imul
imul
add
in
jl
jbe
mov
outsl
cltd
out
or
jecxz
lods
arpl
or
pop
inc
mov
in
mov
adc
mov
movsl
sub
jge
rolb
pop
loop
jnp
fcoms
xchg
xor
add
test
ss
cmp
adc
ret
fadds
xchg
out
stos
or
lods
inc
mov
push
mov
insl
mov
mov
decl
mov
xchg
andb
cld
dec
add
cwtl
lds
sahf
lcall
call
dec
sub
test
cmp
test
dec
popa
dec
pop
test
xchg
fdivs
jns
test
fdivrs
out
pushf
out
movsb
xor
push
inc
popa
mov
imul
push
out
or
jno
stos
aas
and
lea
adc
out
aas
insl
das
clc
or
cmp
imul
ret
pusha
inc
mov
aam
jg
sbb
inc
testb
xlat
mov
pop
and
loope
lock
icebp
mov
loop
push
setno
pushf
cld
fwait
lods
mov
into
or
fildll
jne
leave
scas
push
clc
lcall
mov
call
xchg
sbb
and
sbb
pop
or
pusha
mov
and
mov
adc
dec
addl
sbbb
popf
and
inc
dec
and
clc
mov
push
mov
lret
xchg
cmp
pop
push
mov
adc
adc
aaa
out
mov
push
pop
sti
or
lahf
or
fs
dec
pop
insb
pop
sbb
jl
adc
adc
movups
adc
jno
mov
inc
lret
xchg
adc
sbb
dec
and
inc
cwtl
xchg
jbe
outsl
adc
push
cmp
faddl
and
repz
jg
pop
add
sbb
xchg
jp
xchg
ret
dec
adc
subb
scas
xor
xchg
mov
mov
lea
stos
xchg
mov
adc
xor
aas
aad
or
in
add
adc
add
push
pop
push
jno
out
sarl
xor
cmp
and
or
in
jbe
and
ds
loopne
mov
cwtl
popf
imul
lock
push
xlat
loopne
push
adc
loop
jmp
dec
add
pop
out
aas
mov
push
sahf
daa
lods
push
inc
cmpl
mov
sub
mov
xlat
test
inc
mov
fdivr
mov
add
int
into
push
roll
and
aam
dec
inc
ss
mov
jne
in
mov
sahf
xor
dec
imul
inc
lods
push
jg
test
hlt
pop
xchg
mov
pop
mov
sub
out
fistl
out
push
xlat
lahf
push
shrl
xchg
xchg
mov
cli
iret
sub
cmc
xor
idiv
clc
push
cwtl
stc
and
mov
push
dec
adcb
mov
inc
sahf
mul
push
test
mov
add
pop
icebp
in
aas
cwtl
inc
out
fmul
or
outsl
push
inc
dec
mov
in
mov
or
sbb
lret
fisubrs
fprem
out
icebp
sbb
punpckldq
mov
cmc
and
push
sti
jp
ret
test
adc
stc
xchg
movd
sbb
pop
rorb
cmc
outsl
es
xchg
mov
lock
pop
addr16
inc
je
insb
stos
loopne
test
lds
call
hlt
pushf
sub
call
add
ljmp
and
nop
repz
xlat
lods
aas
jns
cld
push
xchg
fisubrs
pop
test
inc
leave
pop
inc
mov
mov
cmp
or
mov
pushw
mov
or
fnsave
cmpsb
cmpsb
icebp
mov
mov
mov
sub
movsb
das
out
div
dec
push
je
push
mov
add
add
or
imul
jl
shl
into
loopne
idivb
fwait
pop
movsl
jmp
push
add
xchg
mov
cmp
dec
fnstsw
dec
ss
push
pop
mov
lods
jp
popa
cmc
jb
cmp
test
mov
cli
scas
in
aam
loopne
ffreep
pop
sbb
imulb
sub
mov
out
enter
sbb
stos
iret
pop
lret
lock
sub
inc
test
mov
dec
pop
les
sbb
pop
je
adc
wrmsr
jl
xchg
stos
xchg
push
lods
cmc
mov
call
popf
orb
dec
adc
lahf
add
mov
sbbb
repnz
insb
test
inc
push
pop
xchg
xor
jecxz
and
ret
clc
aas
repnz
sub
pop
pop
imul
dec
inc
enter
lods
icebp
jb
or
enter
mov
add
add
push
test
dec
or
mov
popf
loop
cli
xor
sub
jge
mov
push
repnz
pop
mov
fiadds
mov
shll
mov
jo
cmpsb
xor
imul
dec
inc
movsl
add
popf
std
enter
mov
xlat
xor
jmp
les
int3
mov
arpl
xor
cmp
cmp
stc
popa
int3
pop
xor
mul
sub
dec
int
pop
test
insl
dec
cwtl
jmp
xor
mov
mov
push
inc
jl
test
push
in
scas
inc
mov
js
shll
jl
bnd
mov
shl
jnp
cmp
jae
sub
ss
jnp
jp
call
sub
cld
testl
xor
popl
je
shl
fdivrs
nop
dec
sbb
mov
jle
cmp
das
xor
xchg
mov
ret
sbb
orb
outsb
mov
lret
icebp
sbb
repz
push
push
push
aad
fidivs
insb
push
cltd
sub
mov
mov
loopne
jl
push
mov
pop
cli
bts
fld
mov
inc
test
in
jg
adc
push
icebp
or
xchg
aas
cmp
aas
test
mov
test
jne
mov
or
pop
ficomps
loopne
fmul
xor
adc
cld
shrl
movsl
jae
inc
int3
in
imul
pop
dec
ja
jle
popa
jnp
cmp
cs
loopne
call
mov
mov
sti
jno
and
jns
inc
jns
pop
pop
roll
push
add
fiadds
daa
mull
psrad
adc
rorl
sub
loope
pop
mov
xchg
lcall
cmp
cmpsl
push
ds
popf
push
into
std
out
xor
push
testb
mov
mov
inc
mov
jmp
adc
icebp
int
xorl
mov
sbb
push
mov
sbb
stos
popf
mov
pop
test
mov
dec
mov
add
ljmp
mov
std
push
push
xchg
and
out
ret
push
mov
add
lods
call
inc
inc
xor
rorl
cli
fldcw
add
fsubrl
imul
imull
and
repnz
jl
push
fbstp
imul
dec
and
jmp
lock
pop
jne
xchg
pop
std
pop
aad
jo
icebp
loope
lods
das
into
shrb
sbb
inc
and
sbb
scas
ret
dec
pop
insl
adc
push
imul
add
fisttps
lds
or
pop
out
filds
mov
and
std
inc
mov
icebp
xor
outsb
rcr
int3
lods
insl
loopne
jns
xor
pop
pusha
fs
cld
popf
call
mov
mov
or
and
xchg
adc
adc
movsb
or
xchg
xlat
mov
fistps
inc
xor
or
mov
jno
and
loopne
mov
or
dec
xor
xor
add
mov
xor
or
push
sti
xor
cmp
daa
orb
rcrb
in
icebp
dec
dec
sarl
mov
shll
iret
add
sbb
in
push
dec
popa
sbb
sbb
adcb
and
js
dec
push
and
gs
mov
test
int3
das
ja
cmp
xor
sub
sub
cwtl
rcl
test
loopne
in
pushl
mov
mov
out
xchg
inc
push
cmp
in
sub
movsl
stos
and
addl
sbb
ss
adc
insl
xchg
mov
imul
lcall
dec
ret
ret
sub
in
adcb
pushf
pop
test
sub
divl
pop
aad
mov
aad
into
add
dec
dec
into
insb
lds
aas
mov
pop
movsl
xchg
jge
jmp
xchg
mov
cmp
sub
jle
cs
or
rorl
aas
mov
mov
mov
and
ja
sbb
mov
cmp
out
mov
es
ja
xchg
cmp
jmp
bound
mov
jno
adc
cmp
push
leave
pop
mov
ss
lret
scas
cwtl
or
popa
pop
movsl
jge
cs
jae
out
or
and
pop
jmp
inc
inc
cs
in
mov
cld
movsl
outsb
jo
push
icebp
sbb
inc
mov
insb
inc
mov
mov
xor
sbb
lahf
mov
fisttps
and
dec
sbb
mov
sbb
insl
mov
cmc
adc
aad
imul
lahf
mov
mov
shl
xor
ret
stos
or
mov
mov
sbb
dec
lcall
pop
scas
clc
push
cmp
ss
cmpsb
and
mov
daa
lret
jle
cmpsb
clc
lods
fs
stos
sub
mov
xor
aas
rorb
or
and
and
icebp
rol
push
fstps
imul
je
das
fs
pop
dec
std
sub
test
insb
xor
or
sahf
push
pop
mov
adc
inc
int3
sbb
jno
cli
push
movsb
pop
sub
ljmp
and
pop
fistpl
loope
addl
push
mov
mov
scas
das
xor
mov
sbb
fadds
sbb
rcll
pop
push
jnp
xchg
mov
cmpsl
lcall
mov
inc
rol
dec
fsts
inc
std
jb
scas
aas
dec
mov
test
and
xlat
cltd
sub
loope
les
or
imul
cltd
scas
dec
movsl
lods
push
out
pop
cld
cmpsl
das
xchg
insb
ds
sbb
mov
ret
aam
outsl
test
and
cmp
stos
hlt
outsl
mov
dec
or
out
push
scas
mov
std
cwtl
in
das
dec
jb
ja
jmp
imul
aad
cmp
or
inc
pop
je
push
aaa
hlt
pop
dec
jnp
data16
xor
jle
popf
jle
out
das
arpl
or
inc
pop
pop
ds
jns
push
mov
shl
ljmp
add
scas
ss
adc
and
push
inc
mov
orb
add
lahf
call
sbb
stc
sbb
mov
lods
fisubl
or
daa
jbe
testl
jne
mov
inc
lret
jae
add
mov
mov
and
fnstcw
aam
imulb
pusha
adc
pop
testl
or
fdivl
pop
add
rcl
sub
adc
mov
push
adc
inc
xor
inc
dec
divl
add
xchg
dec
call
mov
and
lock
dec
je
pop
mov
add
subl
mov
sub
inc
cmp
add
xor
xchg
jbe
pop
xchg
clc
lock
mov
nop
cmpl
lahf
ret
adc
xchg
sti
and
aad
push
lret
test
or
fidivl
nop
inc
mov
inc
pop
hlt
push
mov
mov
xlat
js
popf
cli
push
loopne
in
dec
jo
loope
jl
adc
cmp
insb
leave
call
mov
adc
cmp
pop
in
shr
adc
stos
fwait
inc
add
into
jmp
and
push
dec
fmuls
movsb
pushf
push
cmpsb
in
aad
cmp
dec
xchg
sub
cltd
in
fiaddl
scas
stc
sub
push
sub
add
stos
nop
mov
adcb
add
in
addb
push
mov
pop
push
mov
or
fdiv
lods
clc
mov
fildll
mov
mov
push
push
addr16
adc
inc
movsb
and
xchg
sahf
bound
pop
test
test
imul
ljmp
jg
sarl
push
or
popf
fsubrl
mov
mov
xor
xchg
jbe
sub
mov
stos
dec
mov
jbe
xor
pop
jbe
out
dec
rorb
or
clc
bswap
mov
mov
cld
ret
sbb
jb
lds
in
imul
hlt
rolb
lds
sar
mov
lahf
pop
cmp
xor
pushl
pop
je
scas
roll
jne
cmp
arpl
cmp
jp
out
xor
pop
inc
push
in
xor
and
pop
in
out
push
dec
sbb
sub
xchg
int3
mov
scas
pusha
cld
lods
adc
orb
fldt
push
mov
test
test
push
pop
or
and
shlb
scas
lock
sub
sarl
popa
mov
xor
cmp
dec
adc
je
fimuls
cs
aam
ret
sbb
orl
cmp
cmp
dec
in
sahf
gs
jge
xor
or
dec
push
std
and
sub
xchg
inc
rolb
xchg
add
mov
xchg
cmpb
pop
pushf
mov
mov
and
mov
rcrl
add
mov
cmpsl
fdivl
sub
test
jge
into
dec
in
into
cmp
dec
lcall
pop
jnp
shrb
push
or
mov
push
stos
lret
cwtl
jge
mov
cli
aam
dec
cli
jmp
xor
or
dec
pop
sub
fs
leave
sub
popf
sbb
push
in
or
pushl
or
popf
fildl
add
sbb
pushf
xor
ds
inc
and
call
push
inc
add
call
fidivrl
sbb
scas
pop
cld
in
gs
ss
ret
mov
ret
sahf
dec
or
test
jae
cltd
or
out
push
cmpsb
loopne
pushf
or
scas
call
and
imul
and
scas
out
push
xor
jnp
movsl
out
pop
nop
mov
jge
jmp
inc
xchg
repnz
jno
gs
les
divl
insb
adc
mov
aad
mov
cmp
aad
xchg
cmp
xchg
outsl
popa
push
sbb
shrl
rcrl
adc
outsb
or
and
xor
lahf
aaa
lret
gs
sahf
enter
push
xor
inc
arpl
pop
enter
jg
ss
bound
ret
xor
push
and
ret
jl
jp
sbb
inc
cmpsl
test
mov
inc
xchg
inc
jl
or
imul
mov
push
mov
mov
inc
int
push
xchg
and
mov
int3
add
cmp
add
shlb
push
cmp
push
ret
sub
les
sahf
rcrb
cmpsb
inc
mov
inc
fdiv
mov
enter
jp
jecxz
mov
xcrypt-cfb
cmpsl
mov
lods
daa
jl
adc
ret
xor
adc
test
sub
test
es
mov
subl
gs
loop
mov
mov
cmpsl
in
jg
dec
aad
pop
push
out
adc
jl
stos
fidivl
jnp
mov
imul
mov
xor
les
cmp
enter
mov
push
stos
stos
inc
or
aas
cli
not
leave
lods
add
or
jb
es
xlat
pusha
sbb
dec
pushf
test
inc
push
aam
mov
pop
cmp
sbb
xor
xchg
pop
pusha
mov
clc
or
add
js
add
lods
jge
xor
imul
jns
shlb
mov
es
adc
or
lea
push
or
mov
mov
out
fs
fwait
fwait
cli
jge
bound
push
cld
scas
cmp
mov
scas
xchg
pop
mov
push
fcoms
xchg
mov
aad
mov
mov
mov
int3
mov
jg
or
lcall
push
jl
scas
xchg
dec
mov
imul
aaa
sub
add
inc
push
mov
jno
push
mov
shll
xor
inc
mov
out
bound
test
add
sbb
scas
outsl
adc
mov
xor
mov
movsb
cmp
aam
cmp
adc
fistpll
outsb
push
xchg
fbstp
push
add
adc
jmp
mov
push
rcrb
sub
mov
leave
dec
and
inc
sbb
xor
in
xchg
and
jo
xor
fldt
ret
icebp
test
cmpsl
or
pop
push
cwtl
jmp
jle
mov
pop
pop
sbb
cld
mov
pop
lock
movsb
loope
adc
imul
outsb
leave
sub
jns
cli
or
push
jb
jne
jbe
mov
mov
add
sub
adc
sub
xchg
cmpsb
xor
inc
mov
fadd
jnp
shrb
imul
mov
pop
push
inc
test
adc
xchg
sub
add
xlat
cmpsl
bswap
test
pop
pop
imul
mov
dec
inc
jg
mov
ficoms
mov
jg
aad
cmc
movl
bound
push
push
repnz
test
fcompl
and
mov
insl
shll
add
sub
xchg
mov
jns
aam
xor
cmp
int
push
inc
fwait
xchg
or
ss
pop
iret
loope
pop
inc
sub
fadds
pop
sub
aad
pop
lahf
jge
dec
iret
jge
mov
push
push
push
mov
adc
movsb
inc
mov
inc
inc
dec
inc
sbb
and
test
xor
cmp
aaa
add
push
scas
negl
es
je
jo
xor
repnz
ret
ficomps
add
hlt
in
shr
mov
or
mov
insb
out
push
jmp
adc
je
pop
mov
cmpsb
mov
shll
in
insl
pop
out
ficoml
adcl
pop
int3
mov
adcb
pop
repz
and
dec
repz
sbb
aam
fwait
and
in
pop
jg
xchg
mov
mov
jp
pushf
sbbl
mov
movsb
jbe
aad
jbe
mov
pop
jns
adc
addl
daa
push
mov
out
lea
fbld
rclb
jl
pop
jmp
jmp
aam
lods
push
stos
dec
inc
mov
out
jnp
popf
inc
mov
jnp
xchg
adcb
mov
mov
pushf
pop
sub
adc
dec
out
shl
enter
push
lods
push
sbb
leave
insb
push
nop
pop
push
or
adc
ja
popa
dec
std
jl
xchg
adc
or
scas
movsl
ljmp
sti
push
rolb
xor
stos
sbb
test
data16
arpl
rcrb
jno
dec
es
pusha
inc
test
pop
lock
test
mov
roll
insl
adc
pop
rolb
popf
add
dec
sbb
or
icebp
push
in
rcll
setns
popf
sub
pop
aam
in
add
fisubl
push
and
push
std
lret
dec
jns
dec
daa
jo
fwait
add
jnp
jns
test
mov
push
fstps
js
sbb
adc
loop
clc
lods
xchg
dec
int3
push
mov
push
mov
out
addr16
dec
cmp
sub
cmp
or
mov
cmp
rolb
sub
mov
daa
ret
cmp
or
add
repnz
nop
pop
cmp
sbb
xchg
fnsave
mov
fwait
jae
cmp
adc
xchg
imul
std
xor
fiaddl
rcrl
and
xchg
pop
cwtl
ds
mov
popa
sbb
imul
data16
iret
jecxz
fwait
jp
or
lds
nop
or
cmp
cmpsl
jp
mov
add
jnp
mov
xor
dec
cltd
xor
stos
and
les
add
les
xor
clc
push
fs
cmp
lret
int3
fwait
lea
mulb
pusha
jo
lahf
sti
icebp
loope
cmp
cld
push
adc
inc
mov
sbb
cwtl
les
cmpsb
pop
jnp
rclb
aas
test
movsl
movsl
test
pop
pop
idivb
inc
jns
jg
jne
in
mov
mov
xchg
xor
arpl
adc
repz
leave
aad
dec
mov
or
out
outsb
cmpsl
sub
and
inc
shr
test
mov
popa
inc
loopne
push
pop
stc
sbb
test
cld
pusha
rorb
mov
sbb
pusha
inc
cs
inc
aam
aaa
mov
push
mov
push
imul
es
add
sbb
xor
fwait
scas
incb
sbb
mov
fdivp
push
pop
outsl
imul
inc
lret
fisttpl
sub
sub
pop
das
iret
sub
jmp
call
and
inc
icebp
push
jge
mov
mov
add
daa
and
jb
mov
pop
mov
insb
fwait
pop
and
mov
sbb
lret
test
repnz
and
dec
xor
jp
xchg
in
je
leave
repnz
lock
adc
pop
scas
xchg
mov
mov
addl
add
sub
and
sub
insl
divb
xor
cli
or
aad
jecxz
lcall
xor
fwait
rcrl
stos
subb
sbb
add
iret
jnp
dec
test
mov
shll
push
inc
scas
sbb
subl
inc
lods
dec
push
jle
insb
xchg
lret
xor
ja
lds
jno
gs
mov
push
cmc
ja
test
aam
rorw
shl
jae
cmpsb
movsl
sbb
sub
sub
mov
sarl
lret
jl
stc
int3
sub
in
daa
pop
int3
xor
mov
in
sub
jmp
dec
fadds
dec
jmp
mov
lds
pop
pop
pop
mov
sbb
add
xorl
scas
jle
push
push
push
test
jnp
push
xchg
add
mov
sbb
imull
and
cs
push
mov
inc
aas
popf
pop
push
mov
scas
out
xchg
stc
sbb
fsts
repnz
add
adc
and
mov
mov
movsb
into
dec
repz
cld
lock
cli
pop
fisubrl
inc
shlb
icebp
jno
xchg
adc
or
push
gs
xor
cmp
js
push
loope
adc
ret
dec
push
mov
scas
in
mov
scas
or
in
das
dec
add
mov
out
stc
mov
loopne
pop
in
lods
and
push
mov
cmp
adc
pop
shll
xchg
push
mov
mov
xchg
insb
pushf
test
pop
mov
dec
fisubrs
push
xchg
out
call
mov
out
ret
jbe
fwait
ja
cmovae
mov
pop
jns
insl
cmc
adc
pop
xchg
dec
jp
test
adc
shlb
and
int3
rcll
cltd
jns
jno
pop
sbb
mov
mov
cli
push
jl
or
mov
mov
dec
xor
scas
insl
jns
insl
pop
clc
in
xor
jp
pop
aam
inc
mov
daa
div
dec
rol
sub
adc
mov
pop
fstps
add
add
rorl
inc
and
imul
fmuls
push
in
mov
aaa
daa
std
sub
push
sahf
aad
sub
cli
dec
cmc
scas
or
imul
icebp
lds
hlt
sub
icebp
lret
cld
imul
int
aam
nop
dec
lods
fildll
dec
push
lods
inc
mov
testb
lock
xchg
ret
cmp
fdiv
rcrb
dec
mov
shrl
cmp
sub
sbb
imul
pop
inc
std
inc
mov
adc
sti
mov
xchg
and
lods
pusha
ljmp
call
xchg
mov
imul
cltd
xor
les
enter
add
dec
rorb
adc
mov
push
jb
rcrb
or
push
mov
push
or
cmp
sub
das
mov
cltd
inc
mov
inc
inc
mov
fldl
data16
push
jbe
xor
popa
inc
mov
and
or
scas
aam
cmp
imul
hlt
mulb
aad
sub
xor
sub
xchg
xor
and
movl
stos
mov
scas
lods
mov
loopne
stc
adc
jl
xor
or
jbe
test
fsub
jo
mov
lods
adc
iret
mov
pop
mov
mov
jnp
adc
ljmp
in
loop
dec
pop
or
and
das
jmp
xchg
and
jl
jo
adc
pop
or
push
clc
dec
roll
jge
fsubrp
je
out
test
mov
cmp
mov
adc
in
icebp
and
mov
es
int3
outsb
xor
adc
inc
xchg
mov
jae
popa
adc
sub
add
out
pop
mov
roll
cmp
inc
jae
xchg
cmpsl
mov
scas
sub
and
and
jbe
lods
adc
dec
jl
int3
enter
test
mov
push
fbstp
or
jno
fistl
push
repnz
sbb
addb
mov
lods
aas
mov
sarb
ffreep
or
addr16
xchg
aad
adc
outsl
je
sub
fadds
jle
cli
xor
dec
popl
pushf
cli
pop
mov
icebp
outsb
dec
es
xor
ja
pop
inc
stc
pop
fs
ret
sbb
lods
push
ffreep
scas
pop
xor
popa
push
mov
test
sub
xchg
mov
sub
ss
xor
rcrl
ja
adc
movzbl
xor
inc
fs
mov
mov
arpl
xchg
sti
push
mov
mov
adc
pop
sbb
mov
ljmp
fcomps
jmp
loop
mov
dec
pushf
je
jne,pn
xchg
sub
xchg
mov
bnd
dec
xor
pushf
dec
movsb
pop
ljmp
popf
pop
ret
inc
sub
outsb
inc
pop
mov
xor
mov
data16
sbb
add
mov
fs
cmp
dec
mov
pop
mov
jle
sbb
fstpt
test
das
mov
and
lock
push
mov
mov
jp
dec
mov
adc
sbb
sbb
mov
popa
data16
je
inc
mov
sub
out
loop
adc
xor
adc
xchg
callw
jne
add
roll
sub
adc
jg
dec
fcomps
push
js
mov
dec
into
mov
xchg
in
push
inc
pop
xlat
adc
mov
sub
out
mov
cmp
pop
lret
mov
rorl
pop
fwait
repz
popl
fisttpll
ret
out
loope
mov
xchg
scas
adc
jge
adc
gs
adc
dec
hlt
mov
jg
jg
xor
js
leave
int
mov
loopne
rcrb
push
jne
mov
rcrb
xchg
jno
test
and
testl
adcb
xchg
ret
sbb
jge
inc
pushf
xchg
jb
cmp
in
lds
push
stos
inc
mov
pop
push
fidivrl
sti
cltd
aaa
cli
in
mov
xor
and
add
push
mov
xchg
inc
and
aas
inc
das
popf
jl
mov
ret
ja
int3
sarb
cmp
push
test
mov
dec
xchg
test
and
cwtl
pop
ret
fs
popf
fwait
in
mov
loope
inc
push
std
stos
add
inc
rcll
mov
sub
sahf
testl
insb
push
push
sbb
aad
jmp
repz
and
subb
lret
xchg
push
movsl
int3
inc
sar
xor
dec
mov
jp
jge
cmp
loop
xchg
mov
test
add
in
mov
mov
pop
adc
in
mov
cs
repnz
inc
fimull
mov
xchg
push
bnd
xor
mov
rcl
in
adc
cmpb
mov
cmp
mov
icebp
sbb
or
xor
pusha
movb
inc
loope
lret
enter
inc
dec
xchg
jne
add
das
mov
mov
cmp
mov
jl
sbbb
out
mulb
insb
pop
mov
adc
mov
aad
mov
arpl
addr16
sub
cmovl
js
pushf
fimull
ss
adc
ds
hlt
push
scas
mov
ficompl
sub
cmc
outsb
not
scas
rolb
test
pop
mov
mov
pop
push
mov
cmpsb
mov
icebp
pop
mov
xchg
sub
jge
jmp
in
xlat
test
and
movsb
icebp
mulb
mov
push
push
imul
popf
dec
int3
dec
xchg
test
dec
test
cld
mov
icebp
xor
xor
test
insl
push
add
xlat
pop
pop
and
cmp
aad
and
mov
clc
and
xor
stos
pop
ja
pusha
mov
out
inc
subb
mov
ljmp
xchg
aad
adc
lahf
ret
xor
int3
sbb
fiadds
pop
and
les
jecxz
add
cmp
insl
inc
mov
stos
mov
dec
popa
dec
out
ss
out
out
out
pop
jle
fwait
in
fiadds
cwtl
sub
cmp
daa
dec
or
aaa
ss
mov
rcr
psubb
mov
sbb
outsb
mov
testb
out
xor
cmp
flds
lds
pop
sbb
cmp
lahf
inc
push
ja
std
sahf
cmp
and
cmp
cs
or
cmc
xchg
es
setg
cli
lock
add
roll
jge
mov
fisubrl
lods
adc
mov
or
mov
jl
xchg
jp
jge
push
mov
dec
xchg
xchg
pop
add
cmp
push
mov
shl
lcall
sbb
push
cmp
in
inc
jae
jae
popa
rcll
stos
fldl
test
add
sti
sub
jg
lods
iret
dec
gs
push
addl
cmp
dec
das
sub
lods
adc
movsl
jne
mov
dec
out
jle
push
xchg
inc
mov
jne
push
popa
push
mov
mov
pop
mov
dec
mov
andb
out
in
call
dec
push
ds
cmpsb
movsl
add
mov
push
test
cmp
ror
push
inc
cmp
cld
push
ret
inc
int
adc
sbb
push
xor
mov
sub
addr16
mov
and
xchg
mov
xor
jbe
dec
xor
leave
cmpsb
out
paddsw
mov
aaa
scas
popf
jl
mov
icebp
outsl
inc
js
shrb
das
sbb
ret
outsb
mov
adc
scas
js
ret
xchg
fcoms
inc
jmp
out
call
sub
addr16
movsl
and
aaa
or
xchg
sbb
loope
dec
xchg
in
mov
pop
cli
mov
and
popf
mov
dec
outsb
repz
pop
iret
aam
dec
inc
sub
clc
pushf
or
or
cltd
aaa
cld
inc
clc
inc
das
in
pop
mov
dec
jmp
xchg
sbb
daa
lea
jnp
sbb
sub
shll
xor
neg
and
insb
inc
pop
lret
cli
inc
and
pop
mov
aas
xor
or
sbb
adc
cmp
popf
int
movsb
and
mov
test
inc
cmp
aas
adc
addr16
push
inc
mov
movsb
cmp
sbb
mov
mov
scas
or
jo
mov
mov
adc
aam
adc
test
jg
sbb
notl
rclb
fistpl
repz
cmp
mov
jnp
pop
cmp
lcall
and
pop
push
out
pop
das
pop
ja
in
in
cwtl
orl
dec
add
jecxz
cmpsb
int
pop
add
popf
jge
fsub
inc
stos
inc
inc
cmp
and
scas
inc
pop
mov
mov
mov
ret
jae
daa
movsl
or
mov
mov
mov
pop
pop
push
lock
test
out
test
mov
imul
or
mov
jbe
cmpsb
jle
mov
shll
cltd
iret
jle
std
insl
xchg
pop
push
cmp
mov
inc
addb
mov
xchg
mov
cmp
sub
adc
loopne
pop
lock
insl
cmp
push
aaa
addr16
sbb
negl
jno
mov
push
jg
sub
add
lods
pop
and
in
dec
pop
fmull
stc
xor
js
idivl
pushf
iret
sbb
loopne
sbb
fdiv
inc
stc
call
jg
add
repz
mov
movsb
ficoms
pop
bound
lea
inc
xor
call
or
js
push
pop
fstps
push
dec
fiaddl
out
ret
popf
pop
pop
dec
xchg
add
jae
xchg
sbb
cmp
cmpsb
dec
pop
ss
fsubl
mov
xchg
loop
sahf
mov
sub
xchg
cli
jae
int3
mov
inc
outsb
pusha
xchg
or
pop
pop
insl
cmpsl
insb
insl
jns
add
sub
aad
pop
jbe
sub
add
fs
jae
adc
ja
cmp
leave
stos
dec
sbb
ljmp
stc
int3
inc
mov
cmp
push
loop
lea
test
adc
or
mov
add
jmp
adc
cmp
or
data16
push
and
dec
inc
test
ljmp
fiadds
iret
push
int
jnp
sub
mov
push
fcmovnu
movsl
and
mov
inc
movsl
loope
je
orb
loop
ljmp
les
inc
jg
ja
mov
nop
aad
je
cmp
popa
pusha
rcl
pop
fistl
int
inc
and
or
clc
dec
jecxz
out
movsl
sbb
xchg
jnp
sbb
lock
mov
out
jge
pop
pop
xor
ljmp
pop
test
pop
lock
scas
movsl
push
frstor
mov
mov
and
xchg
mov
dec
insl
adc
mov
jg
stos
mov
push
dec
jp
push
daa
push
add
inc
mov
daa
pushf
pop
push
xlat
push
pop
xor
pop
jo
fistpl
gs
adc
cltd
push
inc
mov
test
icebp
sbb
dec
add
push
push
loope
rcr
sarl
repnz
and
sti
icebp
or
das
push
mov
insb
stos
lahf
or
fdivs
movsl
inc
add
out
mov
mov
adc
adc
mov
xchg
iret
mov
test
fbld
inc
xchg
outsl
mov
push
sti
xchg
fisubrl
cmp
xlat
mov
mov
fs
lret
rolb
ljmp
xor
gs
adcl
shl
jno
lds
imul
ss
hlt
sbb
jno
add
jmp
pop
and
out
stc
es
and
xor
cwtl
inc
xor
loopne
pop
sub
xor
not
jecxz
inc
mov
das
adc
out
shr
xchg
mov
and
out
mov
into
cwtl
rorb
xor
jb
pop
scas
in
pop
daa
mov
js
shl
addr16
mov
ret
fst
sub
mov
out
jp
int
cmp
mov
inc
push
adc
add
ret
xor
pop
push
aam
sub
cmpl
jne
jb
adc
dec
add
mov
sti
jge
aam
xchg
xchg
nop
pusha
or
pusha
fucomi
dec
sbb
insb
ret
cmpsl
mov
pop
pop
jns
jecxz
in
data16
lret
rep
xchg
lcall
rorl
call
pop
clc
xchg
insl
cmp
cli
mov
addr16
inc
mov
cltd
mov
mov
dec
and
pop
pop
loopne
je
xchg
cwtl
mov
fcomps
and
ret
or
ret
leave
jne
jne
xchg
dec
mov
cmp
xchg
fisubs
dec
xchg
in
xor
jge
hlt
mov
jns
ja
es
xchg
sbb
push
cmp
addr16
mov
test
xchg
inc
insb
jnp
and
dec
and
mov
add
fistpl
cli
aam
push
mov
insb
sub
sub
repz
push
cmp
sahf
imul
shrl
jmp
jb
pop
mov
das
mov
popf
ja
mov
pop
sti
mov
xor
lcall
jb
mov
mov
aad
or
inc
pusha
test
or
push
shrl
in
sbb
xor
cmpsl
pop
addr16
hlt
mov
ret
lcall
mov
xor
data16
or
int
fldcw
pusha
loop
push
cld
mov
and
xor
jnp
daa
fwait
jne
test
cld
pop
hlt
or
pop
mov
fwait
and
popl
cmc
jge
ds
rorl
lods
dec
sub
sub
xchg
push
push
in
inc
xlat
dec
mov
mov
lahf
lea
fstpl
data16
sbb
gs
pop
mov
insb
xchg
repnz
add
mov
movsb
jmp
sbb
hlt
cmp
aas
insb
adc
in
xlat
pop
gs
addr16
imul
loopne
jg
insl
jle
mov
xchg
pop
inc
push
nop
fwait
out
mov
loopne
xlat
gs
cltd
test
jne
test
out
jnp
xlat
push
inc
mov
inc
cltd
imul
popa
enter
inc
pop
mov
cmovno
xchg
inc
mov
les
movsb
add
inc
pop
push
roll
cmp
in
leave
dec
adc
jae
stos
cmpsb
and
mov
sub
and
xor
mov
mov
push
and
ror
push
and
lods
cmp
add
lds
inc
insl
jg
jmp
test
dec
push
arpl
out
mov
push
inc
mov
mov
xchg
loop
cltd
mov
adc
jmp
movsl
test
add
jae
pop
push
mov
inc
enter
mov
push
mov
mov
in
push
mov
cwtl
lcall
dec
mov
out
pop
popf
mov
rorb
or
cli
sahf
inc
add
mov
mov
int
insb
mov
test
clc
mov
out
rorl
incb
sub
ds
into
push
es
pop
pop
sbb
cmp
adc
pop
cmp
cli
dec
and
push
sub
or
jne
mov
int
in
xor
mov
lds
ds
in
repz
xchg
adc
shrl
mov
xchg
mov
cmc
sbb
leave
and
push
mov
inc
out
aad
xor
dec
out
outsb
dec
leave
mov
dec
outsl
test
stos
pop
mov
call
push
sub
mov
push
sub
loop
repnz
scas
ret
push
ja
shr
sbb
mov
xchg
jmp
daa
ja
aam
or
or
pop
rcl
or
jo
je
ss
fnstenv
clc
mov
xor
outsb
add
sbb
test
xlat
push
xor
cs
mov
or
or
decb
lret
clc
les
jmp
push
inc
pop
cld
into
pop
push
cld
inc
ja
test
mov
xchg
incb
jecxz
mov
inc
xor
hlt
scas
xchg
sub
cli
rolb
enter
pop
pop
lcall
mov
mov
popf
loope
cmp
dec
es
neg
or
notb
pop
loop
lahf
sub
test
mov
sub
push
dec
cmp
rcll
fwait
mov
out
mov
fwait
xor
inc
int
pop
fs
cmpsb
shlb
ljmp
subb
xchg
sbb
pop
lcall
mov
popf
mov
xchg
pop
inc
mov
xchg
xor
popa
mov
pop
pop
aad
insl
adc
enter
dec
pushf
push
dec
insb
xchg
insb
pop
movsb
xor
xor
and
popa
stc
mov
or
dec
xor
add
xchg
ret
int3
mov
cmp
pop
jge
lds
or
pop
mov
outsb
inc
inc
xchg
jle
repnz
outsb
sub
sarl
incl
pop
push
outsb
into
scas
add
add
aad
loopne
lods
mov
sub
xor
arpl
mov
jge
test
pop
mov
jo
or
push
sub
or
add
outsb
test
add
negb
pop
in
mov
mov
out
aad
iret
xchg
int3
cmpsl
xor
sbb
xchg
cmp
add
cmp
fdivl
lods
sbb
aad
sbb
inc
add
mov
cld
push
inc
loopne
push
rorb
out
mov
or
push
sub
daa
cs
ret
fmuls
sti
dec
test
cld
jne
cmp
sub
xchg
mov
sahf
pop
dec
dec
and
daa
cmpsb
add
xor
inc
rorb
cmpsb
and
xor
ljmp
mov
xlat
or
sub
cltd
test
outsl
adc
out
call
and
leave
and
loope
bound
inc
push
clc
sti
pop
lea
sub
sbb
jb
sub
dec
mov
outsb
addr16
sbb
fldt
sbb
cmp
cmpsb
ljmp
repz
inc
xchg
scas
out
adc
data16
push
jge
cltd
push
int
adcl
sub
shrb
xor
push
jae
sub
lret
hlt
push
push
bound
les
and
push
dec
cmp
imul
sub
out
sub
sbb
les
mov
push
xchg
jg
into
call
pop
jne
sub
subl
stos
rolb
adc
in
rorl
jo
xchg
test
mov
xchg
sbb
repz
icebp
mov
fimuls
mov
xor
jne
dec
inc
or
push
das
fnstsw
adc
mov
mov
ljmp
pop
dec
fidivl
aam
jp
fisttpll
dec
sbb
push
fiadds
out
xchg
mov
mov
jo
fisubs
inc
cmpsb
dec
lock
inc
adcb
mov
push
fidivrs
mov
inc
push
loopne
mov
push
sbb
hlt
out
pushf
outsb
sti
inc
push
mov
dec
in
scas
pop
insb
adc
mov
pop
ficomps
xchg
ljmp
popa
test
lret
xlat
aas
push
imul
xchg
and
out
je
sbb
fdivr
jae
stc
jo
fisubrs
mov
lock
cs
incl
aam
jo
pop
je
dec
xor
xor
cli
lea
addr16
es
lret
negb
cltd
pop
or
aaa
dec
imul
lods
mov
jecxz,pt
xor
mov
adc
cli
push
sub
out
fidivl
arpl
popf
js
cltd
loopne
add
into
add
push
xor
push
and
and
push
cmp
jns
std
sub
mov
in
mov
test
and
adc
xchg
push
add
and
aas
fld
rcr
xchg
scas
sbb
imul
fsubp
inc
insb
cmc
mov
lcall
xchg
mov
out
sub
dec
mov
mov
sahf
cmc
cmp
fimuls
insb
data16
cs
mov
push
sub
mov
dec
imul
ljmp
inc
adc
jb
lea
data16
pop
fcomps
sbbl
out
or
or
test
out
filds
enter
rcrl
xor
mov
xchg
inc
fwait
inc
test
aam
xchg
cmp
lock
aas
dec
hlt
or
imulb
sti
les
push
push
sti
cmp
sar
aam
addr16
hlt
aad
std
insb
push
push
ret
lahf
push
xchg
add
sub
repz
mov
js
mov
pop
push
cwtl
mov
dec
jge
gs
push
xchg
pop
pop
push
xor
cmp
add
jmp
into
sbb
inc
xchg
das
outsb
push
sbb
cld
xchg
mov
je
cmp
nop
mov
lret
mov
xor
or
xchg
aaa
mov
pop
cmp
xlat
adc
or
testl
fs
dec
jns
popa
clc
mov
mov
and
inc
stos
stc
add
jb
stos
lock
outsl
xchg
xlat
aad
adc
or
hlt
add
out
fwait
cmp
enter
mov
push
mov
xchg
lds
les
inc
push
bound
repz
mov
mov
cs
es
xchg
mov
int3
into
stc
push
aas
shrd
sti
xchg
aaa
hlt
and
push
das
xor
xchg
add
mov
pop
mov
leave
jne
pusha
push
ret
aaa
lret
fsubrl
arpl
pop
dec
cmp
and
pushf
mov
call
lea
out
in
lods
insl
and
sbb
lahf
adc
xchg
jne
cltd
fbld
in
jae
xlat
xor
cmp
icebp
lcall
popf
mov
inc
fildl
mov
shr
add
pop
in
rcl
add
push
add
sub
pushf
lea
sub
xor
lcall
fwait
adc
mov
mov
adc
scas
lock
daa
sahf
stos
push
mov
pop
iret
int
cltd
jbe
test
pop
insl
mov
rcrl
jl
and
fcom
cltd
mov
cmpb
inc
iret
push
cltd
movsl
std
lock
cmp
mov
fildl
cmpsb
stos
test
icebp
adc
push
adc
dec
aas
addb
sbb
mov
mov
test
iret
fnstcw
mov
cmp
push
data16
mov
cmpsb
clc
ficoms
popf
pusha
gs
add
out
dec
lahf
outsb
js
fcmovnbe
cmp
xchg
pop
cmc
cmp
or
add
into
and
cmp
mov
sbb
mov
repz
jns
dec
adc
sub
imul
jl
pushf
or
sub
cmp
xchg
mov
inc
sbb
out
lret
dec
xchg
or
arpl
lcall
and
inc
cmpsl
push
cmpsb
inc
andl
push
xor
push
xor
add
imul
shl
out
adc
lods
stos
push
lds
pop
mov
mov
es
push
fcomi
pop
lods
inc
mov
adc
int3
loope
and
mov
cmp
xchg
xchg
jns
ds
repnz
pusha
sub
popf
cmpb
rorl
test
xchg
stos
lods
bound
inc
cmp
adc
bound
fdivs
sbb
mov
sub
jo
cs
dec
mov
ds
pop
out
into
sbb
ja
inc
dec
push
outsl
push
fimull
icebp
xor
xor
cmpl
lret
cltd
mov
pop
sbb
add
push
clc
jns
sbb
add
stos
jne
xchg
sub
je
fimuls
adc
std
mov
cmp
into
adc
mov
mov
jle
mov
mov
sub
and
jge
ss
xchg
xchg
cld
mov
jecxz
cmp
push
xlat
imul
int
jmp
xor
adc
lods
mov
lcall
mov
ljmp
cmp
imul
out
test
imul
cmp
test
cmp
dec
in
lret
xchg
hlt
rcrl
loop
lret
xchg
in
lds
addl
and
mov
shll
jne
daa
int
andl
or
std
push
mov
rcrl
subl
mov
lret
or
scas
adcb
movsl
xchg
inc
lret
xchg
jno
push
rcll
adc
bound
sub
sub
add
or
dec
adc
pop
jno
mov
push
test
aaa
inc
rcrl
sbb
sarb
add
mov
shll
or
scas
xchg
cld
test
xchg
mov
sub
cmpsb
test
add
dec
out
ja
adc
push
out
sub
pop
or
jnp
pushf
jg
fisttps
jne
sbb
push
decb
pop
stc
pop
cmp
std
xor
outsb
lds
mov
jb
cmp
cli
fdivs
sub
cmp
sbb
in
repz
mov
add
imul
loopne
lret
dec
ret
add
inc
pop
push
mov
movzwl
test
jecxz
fwait
cmovns
cmpsl
sbb
dec
movl
jne
and
out
pop
imul
mov
mov
adc
add
sbb
mov
cmpsb
out
xchg
mov
pop
stc
mov
movsb
inc
rdtsc
das
es
test
std
or
popf
outsb
fstps
xor
ja
les
and
mov
test
add
dec
mov
mov
lcall
test
adc
punpckldq
push
lret
sub
cmp
fdivs
xchg
and
dec
shr
rolb
or
pop
imul
xchg
stos
aaa
gs
dec
push
push
jecxz
xchg
ds
or
ljmp
loopne
dec
enter
sub
mov
aaa
cltd
cmp
loop
dec
push
jmp
sbb
je
sub
jmp
xchg
iret
jg
sbb
clc
mov
bound
add
mov
test
rolb
jle
sbb
or
cli
out
test
lds
scas
arpl
xchg
push
cli
cli
sub
out
lds
or
lret
test
int
lods
and
aam
push
sarb
cmp
cmc
es
add
sub
js
inc
xor
mov
in
mov
gs
push
mov
mov
mov
dec
lds
dec
xlat
shl
add
fdivrl
arpl
inc
loope
dec
cmp
call
ss
mov
lock
adc
xchg
xor
mov
adc
fnstenv
sub
or
jle
popf
pop
push
arpl
movsl
rcrb
fwait
call
test
mov
jp
pop
jno
cmp
ficoms
push
mov
ja
lods
adc
lcall
sub
sub
mov
sbb
mov
pop
std
test
in
rclb
idivb
push
stos
fwait
mov
shll
scas
sahf
ret
data16
push
pop
ret
sbb
cmp
mov
jge
outsb
dec
inc
pop
cmpsb
mov
push
outsl
and
add
ja
icebp
scas
mov
in
outsb
pop
dec
pop
or
pop
test
and
hlt
adc
sub
cmc
js
outsl
jmp
es
push
xor
fwait
mov
push
or
cli
insb
push
sbb
push
sbb
mov
dec
sbb
inc
mov
xchg
mov
inc
outsb
popa
mov
cld
fidivrs
dec
fistl
in
cli
iret
dec
push
cmp
mov
xor
xchg
and
roll
iret
xchg
jmp
repnz
das
push
inc
vpsubq
push
mov
dec
cmc
inc
insl
inc
cmpb
add
or
mov
or
or
stc
pusha
dec
out
mov
lock
add
jbe
stc
je
sbb
push
pop
mov
loop
mov
mov
outsl
dec
or
stc
adc
repnz
scas
jnp
lcall
iret
stc
push
add
test
scas
test
call
jl
jno
rorb
testb
push
dec
js
fsubrs
not
jns
outsb
adc
and
add
movsb
cmp
data16
push
popf
or
movl
or
repz
leave
jbe
jnp
push
aaa
and
jbe
dec
mov
xchg
dec
or
sbb
xor
push
popa
mov
inc
mov
int3
dec
mov
pushf
mov
pop
adc
lret
xchg
add
sub
adc
pop
testl
repz
inc
jecxz
xchg
xchg
fdivp
adc
mov
push
jmp
into
sbb
imulb
mov
jmp
push
add
cwtl
loopne
stc
and
cmpsb
rorl
dec
dec
or
arpl
out
scas
lds
data16
xlat
popf
icebp
mov
cld
adc
sbb
aad
and
leave
repz
inc
out
ficoms
add
inc
adc
push
fldenv
push
test
or
movsb
orb
clc
fnstcw
sbb
hlt
mov
mov
xchg
mov
mov
mov
dec
cmp
fimuls
jbe
das
aad
repz
testl
cmp
clc
dec
leave
xor
jmp
icebp
pop
xchg
fwait
pop
dec
adc
mov
xor
cwtl
sbb
in
ss
pop
subl
popf
sbb
movsl
dec
addr16
into
dec
ret
sbbb
pop
test
mov
mov
mov
inc
sub
dec
ds
cmp
ret
stc
jno
xor
mov
cmp
enter
or
sub
ljmp
movsb
icebp
iret
ret
or
and
mov
jno
insl
std
push
imul
push
xchg
inc
dec
repz
test
sbb
icebp
repz
or
lea
popf
sub
je
adc
jmp
adc
and
in
daa
jns
stos
and
add
enter
mov
or
popf
scas
mov
sub
mov
mov
mov
cmpsb
mov
in
xor
out
mov
push
lods
sub
xlat
loopne
dec
inc
cmp
pop
jne
push
jo,pt
rclb
dec
addr16
xchg
mov
lods
sbb
cwtl
sbb
sbb
mov
adc
aaa
fistps
insl
les
xchg
icebp
pop
inc
jo
test
das
sti
insb
imul
or
dec
pop
xchg
in
inc
in
addl
test
jbe
pop
mov
test
in
mov
pop
mov
mov
clc
or
cmp
xchg
xchg
push
cmpb
cmp
add
xchg
mov
dec
mov
leave
and
mov
dec
test
outsl
inc
inc
push
pop
jno
stos
idivl
xchg
pop
aas
sub
mov
sub
and
das
cwtl
mov
adc
pop
ljmp
jb
jecxz
mov
jp
fwait
xor
fadd
in
shll
inc
dec
pop
mov
aas
pop
iret
push
out
inc
jo
pop
xchg
mov
sub
leave
imul
pushf
loop
mov
out
call
mov
pop
xlat
jecxz
imul
inc
inc
mov
daa
inc
adc
xor
xor
mov
mov
out
loopne
inc
arpl
scas
movdqu
or
cltd
hlt
xor
std
je
aam
loopne
jecxz
sti
sbb
and
shrb
fstl
mov
nop
mov
xor
mov
fcomps
mov
push
loop
fcmovnb
fsts
loop
lcall
inc
or
jmp
jecxz
popf
ja
mov
mov
mov
push
scas
or
or
popa
insl
dec
push
xor
mov
lahf
mov
daa
inc
ja
ljmp
dec
roll
not
mov
sub
dec
sbb
pop
sbb
sbb
cmp
xor
aam
popa
sbb
lock
or
pop
test
sbb
loopne
int3
aaa
les
subb
mov
lret
frstor
jne
jns
sbb
faddp
mov
add
jmp
mov
mov
xchg
mov
sbb
mov
xchg
cs
test
int3
notb
addr16
lds
loope
push
adc
or
icebp
movsl
push
dec
iret
loop
sbb
or
out
xchg
lds
popa
int3
push
out
lahf
cmpsb
xchg
rcr
adc
shll
cmp
fists
into
sub
sti
enter
and
adc
or
loopne
scas
dec
rolb
xchg
push
icebp
xchg
jne
and
jmp
jbe
or
or
jecxz
ja
push
stos
cmp
rolb
mov
mul
std
data16
icebp
pop
fsubrs
mov
in
cmp
es
jl
fsubrs
mulb
pop
cld
movsl
insb
insb
icebp
and
jge
loopne
imul
sub
add
loop
adc
xchg
jp
inc
cmp
iret
pop
sbb
or
pop
addr16
movsl
xchg
lcall
enter
imul
imul
xchg
xor
add
and
fcomps
movsb
cld
loopne
mov
in
cmp
cmp
sbb
ja
jne
loop
enter
pop
jns
jg
out
jp
xchg
fstpl
push
andb
add
jno
xor
push
hlt
sbb
xor
repz
inc
inc
pop
jae
cmp
mov
jmp
jns
xchg
sbb
movsl
or
xchg
std
ds
leave
sahf
cs
jmp
out
orb
std
xor
divb
enter
fidivl
mov
out
add
pop
mov
sub
stos
sarl
loopne
push
imul
ret
jae
ror
xlat
xlat
dec
mulb
pop
dec
aam
mov
mov
dec
sub
xlat
sub
daa
fwait
sub
das
std
and
cltd
popa
hlt
sbb
jge
mov
rolb
jg
dec
arpl
in
mov
mov
lods
cmp
adc
or
data16
cwtl
jmp
or
mov
and
mov
shrl
sbb
rdmsr
mov
xchg
push
lods
jae
mov
enter
mov
fwait
subb
ror
inc
cmpsb
xchg
movsb
call
xchg
test
repnz
test
jg
or
rcll
inc
mov
icebp
xlat
inc
fs
outsb
stc
adc
dec
fiadds
mov
arpl
adc
lock
lock
pop
divl
stos
mov
inc
std
xchg
push
insl
sub
jo
dec
and
out
cmp
add
cmpsl
rclb
imul
adc
insl
adc
cli
xor
lea
loopne,pt
ja
mov
jge
divl
jg
mov
in
call
loopne
mov
lds
ret
std
mov
jmp
popl
call
sbb
ss
mov
loop
sub
pop
das
popw
or
adc
in
arpl
cmp
pop
stos
cmp
add
ret
les
mov
bound
push
test
shrb
sbb
jmp
xor
cmpb
sub
mov
jo
mov
call
jo
loopne
mov
push
sub
jo
inc
ss
je
and
xor
dec
out
push
pop
sub
inc
xchg
adcl
lcall
xchg
mov
or
dec
mov
cmp
mov
mov
insb
faddp
subb
dec
dec
flds
jne
and
lds
xchg
jns
lods
shrb
jo
xor
add
jnp
push
xlat
je
mov
push
stc
or
inc
cltd
and
gs
in
inc
xchg
in
pusha
cmpsb
push
push
fimuls
out
divl
jb
out
imul
imul
inc
lock
cli
shl
or
push
gs
not
jne
cltd
jbe
push
sub
cmp
mov
imul
xchg
jne
mov
arpl
dec
ret
bound
push
cltd
fbld
mov
pop
popa
mov
xor
adc
iret
add
test
in
pop
daa
stos
mov
xchg
jnp
and
mov
jl
inc
mov
insb
cmp
fsubs
ja
or
mov
cmp
insb
jle
mov
adc
loop
lods
lods
push
imul
negb
lods
cmpsb
xchg
xchg
inc
add
insl
sbb
sahf
jmp
pop
js
outsb
inc
mull
loop
es
paddq
jmp
adc
cmc
cmp
sbb
ja
lcall
roll
popf
inc
sbb
or
repnz
xchg
js
sub
mov
scas
stos
mov
aaa
aas
insl
cmp
inc
xlat
sub
rorl
mov
pop
xchg
arpl
push
sbb
gs
xchg
sub
cli
ja
arpl
scas
dec
xchg
xor
mov
push
cmpsl
add
insl
fdiv
jb
cmc
push
scas
push
dec
clc
jge
cmp
jg
cwtl
push
in
and
mov
jns
xor
mov
clc
aaa
xchg
test
popf
popf
mov
adc
dec
mov
cmp
imul
push
sti
xor
cmp
xchg
inc
jecxz
jge
xchg
and
aas
test
in
cmp
mov
xchg
stos
add
cmpsb
xchg
lods
sbb
and
stos
test
popa
or
iret
pop
or
pop
mov
push
shrb
pop
or
xchg
push
add
dec
arpl
sub
pop
xchg
sub
mov
imul
popa
lret
test
imul
xchg
movsl
aaa
test
mov
inc
int3
in
xor
dec
int
sub
mov
inc
pop
fstpl
lods
orl
outsl
nop
xchg
adc
pop
push
ds
and
pop
and
add
es
push
cltd
lds
shl
ret
sbb
cmp
mov
pushf
sub
outsl
lret
mov
rolb
pop
push
popf
inc
aaa
xchg
in
mov
add
cli
push
pusha
test
paddd
test
sarl
bnd
mov
rorl
cltd
mov
loopne
aas
fists
dec
sti
push
dec
dec
lea
push
xchg
mov
mov
sahf
test
insb
pop
pusha
lea
xor
mov
and
add
xor
shr
inc
jmp
and
into
scas
cmp
jecxz
push
jle
pop
adc
xor
int
fcmove
pop
mov
mov
jo
adc
insl
jecxz
cmpsl
inc
inc
sbb
iret
or
mov
jnp
popf
add
shl
cmp
dec
cld
xchg
out
jns
jbe
movsb
jmp
cmp
data16
sbb
mov
scas
leave
fs
cmp
ficoms
sete
push
pop
jbe
mov
or
popa
mov
xor
lds
add
std
sub
cmp
call
in
or
lret
adc
xchg
push
imul
inc
or
add
sbbl
lods
std
push
adc
jl
idiv
stos
insl
dec
sar
out
push
addr16
xlat
jmp
lock
test
xchg
cmpsl
repnz
mov
stos
cmp
ljmp
ds
dec
sub
test
adc
movsl
xor
push
mov
xchg
and
rorb
mov
xchg
jp
adc
pop
andl
mov
es
sbb
clc
adc
and
push
mov
xchg
inc
stos
movsl
in
je
add
sahf
loop
das
inc
loope
cltd
sub
adc
es
int
sbb
add
out
stos
adc
bound
jmp
movsb
pop
add
dec
xchg
and
push
mov
test
sub
lcall
stos
sub
insw
mov
lret
adc
das
inc
fs
add
pusha
inc
mov
sbb
outsl
lahf
je
sub
pop
add
lea
dec
dec
lods
and
inc
insb
jae
insl
aad
or
in
orb
jp
push
scas
xchg
sub
loope
lcall
or
dec
or
jns
cmp
inc
outsl
pop
insl
add
les
pop
repz
fbstp
inc
sub
icebp
clc
xchg
fdivrl
jo
and
cmp
pop
mov
pusha
inc
loop
mov
lea
mov
and
fdivr
test
cmc
lea
repz
bound
xchg
andb
pop
rcrl
outsb
pop
test
sti
adc
mov
out
in
jns
iret
movsb
cmpsb
faddl
jmp
loopne
mov
loope
cmp
pop
mov
out
repz
jmp
in
and
mov
mov
sbb
enter
push
imul
cs
sub
lret
inc
push
insb
pop
bound
sbb
out
lods
movl
fldl
sbb
cmpsb
dec
mov
ret
mov
imul
rcrb
mov
test
jle
pop
rorb
pop
das
and
call
and
cs
jle
jnp
mov
jnp
leave
popa
ret
sub
lahf
cmp
mov
idivl
or
push
stc
dec
in
pop
data16
sub
in
int
pop
xchg
sub
test
and
loopne
cmpsl
pop
dec
int
xor
dec
adc
mov
cmpsb
mov
adc
mov
mov
mov
lcall
or
call
push
mov
in
scas
jnp
xchg
add
repz
mov
icebp
jns
call
into
xor
bound
fstps
push
test
sbb
sbb
mov
loop
ret
jle
test
flds
jecxz
pop
xchg
xchg
dec
mov
pop
imul
and
scas
mov
pusha
jne
lds
cmpsl
iret
mov
xor
pop
orb
adc
cmp
test
jg
or
jg
lods
jo
lret
lret
sbb
stc
jp
mov
pop
mov
sbb
mov
inc
popa
loope
sti
or
dec
ja
test
pusha
jle,pt
fistps
sub
inc
and
lret
xor
jge
dec
jnp
mov
mov
into
fisttpll
mov
mov
loope
adc
lcall
xchg
fdivl
and
sub
push
cmp
xchg
bswap
adc
or
mov
sub
dec
fcoml
jg
cmp
cmp
mov
lods
inc
mov
loop
mov
or
mov
inc
pop
call
mov
mov
add
and
lret
cmpsl
xchg
pusha
in
inc
push
repz
stc
cmp
icebp
mov
les
sahf
adc
test
lret
lds
fs
sarl
xchg
mov
sbb
mov
rorb
testb
scas
das
or
lds
in
pushf
adc
or
mov
dec
xor
imul
jb
xor
xchg
dec
push
mov
shll
fimull
or
fistl
xchg
out
dec
jne
sbb
sbb
cld
daa
sub
push
enter
inc
in
mov
cld
data16
mov
fsubrl
dec
js
inc
repnz
jno
push
fisubrl
lea
pushf
loopne
inc
test
jns
ret
dec
mov
push
add
outsl
inc
lahf
sbb
aas
dec
ljmp
cmp
or
add
in
insl
into
test
push
inc
mov
arpl
aad
sti
test
pop
sahf
loope
orb
jne
sub
push
sarb
mov
hlt
push
pushf
in
inc
fiaddl
xchg
mov
pop
aam
idivb
mov
and
push
loope
ds
rcll
mov
sbb
int
in
and
adc
jle
sbb
ret
or
negl
jae
inc
inc
pop
std
sbb
push
jno
mov
pop
jmp
ss
outsb
mov
sbb
in
stos
ja
xor
add
ds
add
hlt
repnz
adc
mov
outsb
leave
and
xchg
or
cltd
mov
xor
mov
cmpl
fistpl
fwait
push
mov
push
test
cmpsl
inc
xor
mov
lea
cmp
mov
lret
and
xchg
test
inc
leave
push
adc
or
ffree
xor
pop
push
arpl
sub
dec
add
mov
movsl
adc
xchg
test
mov
jmp
faddp
arpl
sbb
aas
adc
and
dec
push
xor
sub
cmp
leave
cmc
dec
test
addb
aam
push
xchg
push
icebp
and
cmp
ljmp
aas
inc
insb
aaa
push
sarl
mov
xor
inc
jbe
push
les
addl
hlt
or
insl
loope
pop
idivb
idivb
xchg
mov
sbb
in
hlt
mov
dec
addr16
or
adc
inc
dec
sub
ja
xor
mov
pop
sub
decl
insl
aas
jp
sub
js
mov
and
pop
int
es
and
jp
stos
lret
sub
sbb
cmpsl
pop
ja
pop
xchg
mov
pop
icebp
rcrb
and
insl
add
cmc
aad
pop
pop
pop
inc
fwait
and
imul
popa
rcrl
lret
test
sub
movsl
loop
dec
inc
mov
out
inc
stos
xchg
cmp
pop
adc
mov
inc
je
jo
out
xchg
jl
out
xlat
cmpsl
fwait
rcl
or
mov
lea
dec
sub
and
push
das
iret
dec
mov
push
xchg
push
ss
stos
call
mov
cmp
sub
loope
cmp
adc
gs
dec
mov
dec
outsb
mov
aam
sub
popa
jb
movsl
and
mov
adc
jecxz
bound
imul
cmp
aaa
jl
inc
push
cld
gs
adc
push
iret
loopne
mov
test
inc
add
inc
pop
jo
stos
andb
jge
sub
sbb
inc
jge
pop
push
mov
fs
lcall
mov
stos
and
lods
stos
bswap
popa
dec
mov
jg
pushf
add
repz
and
std
xchg
out
addr16
cmp
testb
xchg
lea
pushl
lea
outsl
cmc
xchg
cmp
decb
mov
add
lods
cld
sbb
inc
xor
mov
jno
pop
jp
bound
inc
int
in
and
inc
jns
lahf
sbb
cmpsl
mov
test
test
jae
cmpsb
aad
inc
lret
fs
mov
jp
pop
je
push
imul
mov
jmp
mov
inc
sbb
outsl
inc
push
test
enter
or
fs
popa
mov
jmp
pop
sub
popf
icebp
add
or
fsubrl
push
in
xchg
xchg
dec
pop
or
loop
out
mov
cltd
and
mov
nop
push
imul
push
loopne
cs
dec
xlat
ret
mov
cmp
xchg
es
adc
cmp
movsl
push
idiv
das
pop
out
pusha
xchg
mov
jge
or
lods
nop
cwtl
dec
mov
and
xor
sbb
rorl
js
out
ljmp
xchg
jle
push
mov
xor
xor
jg
sbbb
clc
dec
gs
scas
call
and
jge
popf
mov
rorl
js
scas
mov
push
jb
loop
cmpsl
lret
push
mov
sub
inc
int
insb
fucom
sbb
into
dec
nop
mov
xchg
outsb
dec
les
pop
lcall
fnstsw
out
xor
test
nop
lea
pop
loope
pop
test
jle
jle
outsl
loopne
xlat
icebp
sbb
lds
or
inc
push
xchg
lds
dec
jl
adc
cmc
jl
lret
ficompl
out
add
mov
ljmp
inc
jne
inc
stos
jbe
fwait
sbb
push
fwait
ss
iret
sub
imul
dec
cmp
pop
inc
pop
push
cmc
xor
stos
fcoms
fidivl
movsl
addb
dec
jle
sub
add
popf
inc
rol
jg
push
xchg
mov
add
xor
arpl
insl
adc
mov
adc
rcll
imul
lds
hlt
mov
mov
mov
add
into
ficoml
push
add
push
mov
mov
xchg
or
pop
enter
enter
in
add
loopne
mov
jno
sub
imul
sub
fnstenv
pop
aad
movl
rorb
jp
mov
ret
xchg
mov
push
in
cs
pop
adc
jnp
and
add
jae
cmc
xchg
mov
lock
pop
dec
xorb
sub
test
cmpsl
cmp
jb,pn
adc
push
inc
mov
shll
test
or
out
stos
cmp
push
mov
sub
push
lahf
dec
shrl
ja
in
cmp
adc
roll
test
push
or
mov
push
pop
test
inc
ljmp
xor
jns
jns
in
jmp
rclb
addr16
xchg
cltd
pushf
loop
mov
jecxz
sub
in
push
fistl
in
pop
and
pushf
xor
pop
dec
les
out
add
jecxz
add
xor
ja
xor
adc
fimuls
int3
sbb
xor
mov
loope
and
fwait
add
fstps
jns
ret
dec
mov
js
adc
mov
addr16
ja
sub
cmp
clc
inc
cmp
jns
loope
je
jae
cltd
mov
or
mov
xor
sub
mov
subl
adc
aad
adc
fisttps
pop
jno
jle
mov
mov
stos
out
push
jbe
push
call
cmpsb
push
ja
jns
repz
xor
bound
inc
fnsave
out
sub
lea
xorl
sbb
mov
pop
mov
test
mov
xor
cmp
mov
jo
rcrb
mov
ss
mov
mov
mov
mov
pop
jnp
lods
popa
push
fdivs
mov
cltd
das
cmp
mov
mov
jns
jmp
out
sub
xchg
push
adc
sub
outsb
popf
mov
pop
popa
inc
cld
push
pop
insl
js
lret
cmp
add
add
aaa
jg
enter
and
and
je
stos
jge
jno
cmp
test
xchg
sbb
push
mov
in
push
out
pop
imul
aas
loop
test
cmp
push
stc
fidivl
lret
xchg
imul
mov
repnz
jg
sbb
daa
cmp
lock
fcompl
call
mov
mov
xor
je
xchg
cmp
stos
dec
sub
jmp
inc
pusha
sbb
pop
push
stc
cmpsb
adc
push
dec
push
in
adc
cwtl
fisttpl
int
xchg
mov
nop
test
rcrl
mov
shll
imul
or
lock
and
mov
sahf
orl
adc
lcall
loopne
iret
xor
xor
loope
lahf
xchg
jg
iret
cwtl
pop
lret
xchg
cmpsl
cmp
ja
pop
pop
cwtl
push
fidivrl
dec
inc
popf
loope
enter
cmp
mov
sbb
pop
lods
iret
in
cltd
xchg
jno
cs
fnstenv
inc
pop
mov
cld
jle
popf
push
mov
fstpl
sbb
stc
or
or
fisubrs
repnz
ds
jge
and
mov
rol
mov
jae
ss
push
jo
cmp
xchg
aaa
mov
push
lods
and
shr
adc
ficoms
lret
push
push
cmp
and
jle
mov
sub
loope
mov
dec
jbe
pop
mov
and
jbe
inc
fdivs
jl
push
mov
mov
inc
test
xchg
int3
int
mov
loop
or
push
ss
pushfw
or
sbb
stc
or
mov
inc
leave
pop
fldl
inc
push
je
out
mov
xchg
fidivl
out
lods
jo
push
movsb
fdivp
push
jb
mov
mov
fwait
lods
es
cmp
inc
xchg
pop
xchg
push
rol
pop
cmp
push
aad
mov
lods
enter
sbb
mov
sbb
mov
pop
and
pop
arpl
push
and
dec
cmp
pop
dec
and
mov
jns
scas
mov
cmc
push
xchg
sbb
scas
push
cmp
lret
cwtl
roll
dec
and
cmp
add
in
pop
jo
push
jb
mov
jns
subb
xchg
jl
lret
dec
mov
test
movsb
in
push
cli
out
jecxz
mov
ja
xor
test
pop
insl
dec
dec
cld
mov
push
stos
or
idiv
adc
xchg
jbe
daa
out
jg
mov
push
xlat
out
jnp
mov
inc
es
mov
or
cmc
addr16
aam
sbb
repz
arpl
mov
and
push
or
idiv
mov
xlat
incb
fadds
dec
fistpl
icebp
sahf
mov
in
cli
gs
mov
loop
add
mov
arpl
push
and
mov
scas
push
std
jl
adc
repz
rorl
xchg
dec
lds
xchg
pushl
add
shll
lds
pop
cld
push
lret
push
daa
cmp
xchg
lock
js
imul
push
test
jb
xorb
pop
mov
xchg
pushf
adc
push
xchg
movsl
rorl
ss
inc
jae
push
clc
fisubrl
call
cmp
in
scas
inc
jne
iret
inc
cmc
jp
sbb
jno
or
fdivr
shll
and
jmp
cmp
sub
jl
mov
and
sub
lods
xchg
cmc
lods
out
daa
fwait
mov
aam
dec
or
adc
imul
lock
hlt
in
or
inc
sti
emms
aad
xor
or
and
sub
jp
out
mov
dec
insl
cld
dec
out
jge
mov
js
mov
hlt
mov
int
cmp
push
sub
inc
cmpsl
stc
vmulps
in
xchg
clc
push
jle
dec
repz
push
imul
mov
dec
add
inc
repz
fdivp
inc
sahf
arpl
or
scas
ja
test
push
lahf
enter
xchg
idivl
cmp
je
push
add
cmp
sbb
push
movsl
mov
xchg
add
and
cwtl
cs
int
cltd
loop
sbb
pop
adc
and
push
inc
rol
sahf
pop
inc
nop
ret
mov
xor
aam
add
jo
sbb
inc
cmp
dec
sub
mov
movsl
lea
push
outsl
xchg
mov
cmp
bound
mov
fidivl
pmaddwd
xor
stos
lds
pop
ret
daa
mov
pusha
xor
popf
pop
pop
push
loop
fistpl
in
lret
push
cs
lret
call
mov
test
movsl
stos
and
arpl
sub
lcall
mov
pop
pop
adc
aam
fwait
and
pop
adc
in
das
ja
loopne
jle
out
mov
fsub
sbb
jns
cmpsb
ret
test
or
fdivrl
jo
jg
call
push
popa
loope
pushf
int3
push
push
mov
sbb
std
push
enter
fisttpl
mov
arpl
xorl
fbstp
or
lods
fisttps
stos
les
cmpsl
and
lods
test
fcomps
int
sub
arpl
lods
cmpsb
jl
stos
and
or
jae
xorl
leave
and
aad
fldt
test
pop
lds
inc
pop
mov
and
push
orb
sub
out
pop
lds
or
sbb
fst
and
mov
dec
addl
shll
mov
and
mov
sbb
roll
sbb
inc
pop
mov
adc
and
fnstsw
enter
xchg
std
pop
cmp
and
pop
jo
movsb
add
jb
dec
push
mov
jl
cmpsl
jge
xchg
lcall
jae
cmp
mov
and
test
addl
xlat
xchg
sbb
or
rcrb
ret
adc
jl
outsl
mov
dec
mov
xchg
cmp
rcrb
sub
test
or
mov
push
jo
cmp
setnp
cmpsb
jne
adc
lret
lahf
sbb
mov
inc
mov
fdivr
push
xchg
add
push
fs
mov
ss
mov
insl
mov
in
scas
dec
jge
fcomps
pop
mov
lahf
inc
pop
xor
adc
scas
pop
sub
loop
and
mov
inc
shll
mov
or
stos
adc
ljmp
mov
ds
fisttpll
in
scas
and
orb
add
iret
mov
xor
lret
jl
es
mov
jns
rcr
push
xchg
dec
jns
inc
pop
and
jecxz
xchg
push
sub
or
in
mov
or
fisttps
mov
jae
aad
push
out
insb
je
andl
fst
xchg
sbb
inc
shrl
sbb
and
leave
inc
push
xor
jae
xchg
jge
mov
xchg
sbbl
inc
jne
push
repz
test
push
fiadds
mov
js
rcrb
cli
movsb
xchg
in
loope
not
fcomip
lock
push
sti
test
jne
iret
sbb
and
cmp
pop
xlat
add
stos
loope
push
sbb
sbb
push
lret
mov
dec
popa
flds
cld
clc
add
push
fdivl
and
into
je
fcom
add
arpl
mov
inc
shl
imul
ljmp
shlb
shrl
xchg
outsl
pop
aam
enter
sbb
mov
scas
mov
call
stc
fcmovnu
outsl
mov
and
xchg
mov
sarl
sub
in
xchg
xor
and
aas
inc
inc
cwtl
inc
pop
push
std
insl
mov
repz
iret
push
fisttps
adc
sub
clc
lret
loopne
addr16
mov
int3
data16
sub
dec
aas
jns
xchg
leave
loopne
add
xchg
pop
fistpll
repz
mov
mov
inc
sbb
lret
les
mov
or
daa
stos
hlt
mov
in
leave
push
sbb
mov
in
mov
flds
lcall
cmc
mov
cli
movb
out
jl
jns
push
add
int
aam
xor
cmp
xor
lds
cmp
push
jle
je
jns
repz
fadd
push
push
std
insl
cmp
jge
jb
sub
shlb
jb
push
cmp
xchg
stc
cmp
xchg
or
test
xor
outsb
fistpll
cmpb
push
sti
lcall
into
sub
pop
mov
cmpsb
xor
ss
stc
pop
jmp
add
sbb
jl
ljmp
in
or
dec
jl
pop
lds
mov
lahf
dec
ret
adc
or
inc
xchg
lods
leave
jl
mov
lret
cmp
pushf
cmp
shrl
pop
jp
popa
mov
xchg
arpl
cmp
or
push
and
add
jl
xchg
xchg
inc
mov
mov
sbb
mov
xor
add
mov
hlt
shll
pop
stos
sbb
sub
jnp
in
aaa
xchg
scas
push
pop
mov
ret
push
sub
sbb
repz
xor
or
in
sub
push
jne
jmp
jg
imul
push
cmpb
xchg
mov
push
inc
mov
push
clc
mov
insl
add
not
scas
enter
inc
jns
pushw
rol
add
mov
adcb
movsb
mov
scas
dec
cld
pushf
imul
jae
sbb
cli
cwtl
inc
adc
jnp
enter
cmp
lahf
inc
lock
sub
movsl
jecxz
andb
ljmp
or
pop
ror
pop
xchg
cmpsb
leave
mov
jbe
fwait
mov
xchg
or
pusha
mov
imul
stos
sti
out
dec
scas
out
adc
mov
mov
xor
mov
xchg
aas
ret
xor
mov
sub
cwtl
xor
jns
cs
test
ja
sbbb
scas
leave
jbe
mov
xor
pop
xor
cmpb
test
cmc
sbb
or
push
repz
outsb
inc
scas
push
xchg
sbb
inc
jb
outsl
mov
sbb
mov
xchg
mov
loopne
mov
sub
mov
data16
arpl
push
mov
mov
sub
daa
push
scas
into
lret
mov
loop
iret
sub
xor
popf
insl
es
jae
mov
mov
jg
sarl
sub
sub
mov
or
mov
and
push
dec
fildll
das
dec
pop
jb
aad
ss
cmc
sbb
and
imul
sub
cmc
daa
aam
jle
xchg
pop
xchg
ljmp
mov
mov
repz
jae
fstpl
cmp
std
imul
sbb
rorl
sub
sti
int3
and
repnz
mov
dec
jb
push
and
inc
mov
outsl
xchg
add
mov
andl
xchg
mov
mov
mov
adc
mov
ljmp
test
out
insb
shl
pop
aas
aad
mov
dec
in
data16
jbe
dec
jbe
icebp
test
pop
xor
je
sub
jb
ljmp
or
fndisi(8087
test
cmp
sbb
lock
pop
push
sti
sub
mov
push
sub
inc
lahf
cmc
sarb
cld
into
out
mov
inc
jbe
es
ret
jae
xchg
imul
and
movsb
loopne
add
mov
inc
sub
jb
ja
pop
cmpsl
push
adc
mov
mov
shrb
mov
leave
dec
cmpsb
add
fstps
push
popf
pop
nop
fsubr
pop
inc
dec
je
mov
cmp
jl
repnz
fstp
fs
mov
cmp
mov
divl
mov
nop
dec
imul
test
repz
bound
shl
lret
into
or
hlt
lods
sub
pop
aaa
mov
movsl
jle
dec
test
cmp
mov
lods
xchg
jge
jle
jbe
or
push
sbb
inc
mov
or
adc
les
scas
imul
pop
pop
sbb
sti
js
test
movsl
test
pop
pop
adcb
add
hlt
xchg
and
xor
and
fidivrs
in
arpl
ja
jbe
jp
cmp
jb
or
lahf
mov
xchg
jmp
out
jg
enter
or
sbb
and
sbb
in
call
ret
sub
es
sub
iret
xchg
jmp
movb
add
sar
dec
cmp
movsb
jns
dec
mov
fbld
dec
std
fcompl
dec
sub
cmpsl
hlt
cmp
ss
mov
iret
xor
cmp
sbb
mov
orb
xchg
negb
mov
cltd
test
fldt
push
push
add
roll
outsb
xchg
data16
lret
sahf
adc
cmc
mov
add
xchg
push
jecxz
jae
fstl
jle
push
pop
ret
mov
out
push
in
jle
mov
movlhps
fnstsw
sti
ficoml
push
mov
das
push
or
inc
filds
sarb
dec
sbbl
add
mov
outsl
clc
ljmp
sbb
mov
mov
xor
aam
aad
push
push
aaa
and
mov
jne
icebp
iret
mov
sub
mov
rcl
xor
pop
call
and
mov
inc
cmc
mov
gs
mov
push
xor
nop
dec
nop
daa
inc
mov
hlt
daa
pop
mov
pushf
mov
aas
insb
push
movsl
inc
popf
jp
pop
mov
xchg
imul
mov
test
cmp
xor
sti
fisubrl
cmp
dec
sub
or
pop
lahf
aad
jp
add
inc
fwait
insb
movsb
fists
roll
in
idiv
push
lock
push
dec
icebp
add
lds
pop
int
adc
or
cmp
lods
mov
sub
adc
cli
fisttpll
inc
iret
stos
sahf
mov
push
cld
call
roll
std
mov
out
mov
dec
add
xchg
push
add
push
js
shlb
aam
sub
sub
sbb
lahf
jne
cmp
xchg
mov
sbb
sahf
push
stc
neg
mov
dec
aaa
hlt
mov
int
aaa
fcoml
pop
imul
mov
sarb
add
xor
cwtl
jmp
dec
test
decl
mov
jnp,pt
dec
mov
out
or
xor
sahf
popf
xchg
cmp
rcll
cld
leave
cmp
xchg
fstpl
xor
bound
cmp
xor
push
fsubl
rcll
in
push
push
imul
jle
je
adc
push
lea
adc
ss
jns
dec
inc
stos
and
or
xlat
xchg
cld
ror
or
sbb
repnz
and
sbb
jae
punpcklwd
mov
add
adc
hlt
ret
cmpsl
mov
push
fstpt
decb
jle
add
aas
and
push
jns
das
loopne
gs
scas
test
fisttps
or
xor
lock
mov
lcall
adc
and
cmpsb
nop
sbbl
lcall
int
inc
out
jg
mov
lcall
pop
in
jge
mov
mov
mov
test
nop
scas
cli
add
fsubrl
ret
fucom
jb
xor
jg
xlat
mov
arpl
mov
jo
cld
inc
imul
pushf
notl
lods
out
pop
and
es
ja
in
call
test
dec
insl
aas
add
fwait
pop
cltd
xor
test
cmp
or
pop
rolb
dec
aad
fwait
outsl
inc
and
dec
stos
sti
inc
mov
cs
mov
push
adc
int
pop
mov
or
inc
and
or
sbb
popf
ljmp
sti
inc
out
mov
dec
sub
and
int
sub
jne
jno
popf
aam
jecxz
das
pmuludq
fbstp
sarb
add
int
and
sarl
cmc
mov
inc
xor
sub
xor
mov
and
and
adc
or
xchg
shlb
dec
sub
xlat
pop
mov
js
push
popa
addl
jg
fwait
xor
je
xchg
stos
cmp
lahf
and
pop
mulb
ljmp
outsb
sub
xor
cltd
pop
jl
repnz
mov
cmp
lea
or
int
mov
sbb
ret
cmpsb
cmp
aad
xchg
cmpsb
jg
mov
xchg
inc
lcall
jg
dec
aad
fmull
lods
jge
ljmp
mov
dec
sub
cmp
push
addr16
cmp
mov
and
fldt
mov
ja
incb
push
bound
cld
scas
sbb
cmp
push
jno
pushf
sbb
ret
jo
lods
leave
xchg
push
inc
xor
aam
clc
into
push
cmp
dec
fsubs
popf
or
addl
and
sahf
jbe
push
cmp
pop
add
idivl
and
pop
jg
mov
push
int3
imul
pop
aad
rcrl
jne
repnz
aad
movsl
cld
shrl
cmp
fildl
ret
add
addr16
inc
xchg
sub
test
mov
orl
in
loop
and
xor
mov
xor
js
push
les
sub
fs
and
cmpsl
cld
negb
adc
clc
xchg
and
xor
out
adc
rorw
loopne
loope
loopne
dec
mov
mov
cld
push
mov
sub
in
out
jb
fs
mov
imul
jne
and
add
lret
andb
movsb
dec
into
loope
mov
call
mov
mov
or
jbe
test
mov
xor
and
sub
jmp
roll
push
test
scas
xor
jmp
inc
cmpsl
xor
and
push
pop
pop
mov
jecxz
pop
mov
mov
in
aam
xchg
xchg
jno
insl
push
jecxz
jecxz
sub
aas
insb
mov
mov
je
imul
inc
fs
sbb
addr16
js
jge
aam
scas
jnp
mov
pusha
in
lahf
sti
jae
jnp
stc
loope
pop
push
aaa
jl
int3
mov
adc
sub
xor
push
or
mov
lret
loopne
jne
arpl
sbbl
les
sbb
inc
lret
dec
xorl
fsubp
pop
xor
lods
pop
dec
lds
pop
fidivrs
shlb
jp
dec
in
inc
dec
or
and
cli
mov
pop
gs
cltd
lcall
ret
cwtl
jno
cmp
jns
fwait
adc
stc
pop
mov
test
sarb
sbbl
cmpsb
pop
cmp
rcrl
cmpsl
pop
jbe
push
xor
js
loopne
insl
fbld
xor
int
cmp
movsl
mov
enter
sbb
bound
mov
pushf
xorl
sbb
adc
lahf
adc
mov
mov
add
dec
ljmp
pop
ffreep
lcall
dec
push
cld
dec
repz
pop
cld
repz
leave
pop
jno
jmp
jno
pushf
pop
cmp
into
cmp
push
mov
jne
test
and
popf
mov
pop
xor
cs
pop
les
sub
sub
xor
or
sbb
stos
enter
sub
pop
mov
hlt
loope
xchg
jo
hlt
mov
sarb
rorb
imul
cmp
mov
xor
gs
es
mov
add
ret
push
xor
stos
fs
dec
mov
lea
fs
mov
inc
mov
pop
adc
rcrb
sbb
out
frstor
cmp
xlat
jae
xchg
inc
push
inc
inc
xor
inc
fmulp
xchg
loop
and
pop
iret
lahf
loop
dec
pop
clc
movsl
lods
leave
ljmp
xchg
cmpsl
inc
cmp
add
or
add
mov
dec
fs
lcall
mov
and
test
push
sub
cltd
out
mov
outsl
scas
js
or
mov
xchg
mov
int
push
inc
in
cmpsl
repnz
imulb
lret
push
pop
push
incb
push
cmp
sub
push
push
or
nop
es
or
shll
test
adc
lret
std
jo
cli
push
mov
lock
dec
repz
and
push
rorl
dec
and
test
rorl
rorb
je
sahf
pop
jne
imulb
pop
mov
dec
cmpsb
adc
fnsave
cli
fwait
shlb
cltd
sbb
lcall
lods
fcomps
dec
add
add
xor
jecxz
mov
push
lds
mov
push
push
insb
cmp
shlb
mov
add
add
loope
cli
jge
sub
nop
loopne
sub
pop
xchg
inc
pop
adc
sub
stos
dec
icebp
idivb
and
movsl
push
push
aad
cmp
mov
arpl
rorl
cli
dec
movsb
stc
out
clc
xor
movsb
push
cmp
inc
aas
cmpsl
lods
fadd
imul
dec
inc
cld
outsb
xor
and
mov
dec
add
xchg
adc
inc
repz
xor
ret
cmp
pop
addr16
pop
push
pop
or
push
fadds
movsb
cwtl
cmp
dec
insl
fdivrl
and
arpl
pushf
idivl
xchg
add
inc
loop
std
fstpl
cmp
jae
jno
pop
je
jbe
adc
cwtl
pop
repz
mov
in
stc
lock
aaa
sub
aas
pushl
mov
subl
push
gs
xchg
test
mov
pop
cmp
movsb
mov
xor
sar
clc
adc
push
test
push
xchg
xor
out
mov
into
rcrb
push
ret
bound
add
sbb
or
lock
xor
lahf
sbb
inc
ret
or
mov
adc
push
jne
cltd
jg
stos
sbb
outsb
lahf
mov
xor
in
pop
xchg
pop
clc
xchg
repz
sar
in
fcoml
mov
arpl
cmp
iret
sahf
jbe
lret
sti
fildl
jle
xchg
and
sub
mov
or
pop
popa
in
out
pop
pop
xchg
and
fnstcw
sub
inc
cltd
lods
je
mov
xor
xor
jecxz
dec
adc
stos
inc
jp
or
adc
adc
fs
je
in
add
adc
sbb
lods
pop
xor
int3
cmpsb
jg
mov
and
mov
xchg
pop
sbb
mov
cmp
dec
popa
add
cs
jmp
push
sti
sbb
in
jg
push
sahf
dec
in
mov
pop
pop
int
xchg
xor
jne
sarl
loop
mov
xchg
scas
or
xchg
sbb
inc
iret
or
jecxz
xchg
xlat
js
sub
jle
ja
lret
xorb
lds
push
flds
mov
iret
pop
mov
int3
inc
jl
repz
mov
push
fcmovne
orb
cmpsl
inc
mov
mov
dec
mov
aaa
xor
jbe
push
setne
jne
mov
or
sub
mov
push
jb
inc
sub
sbb
inc
aad
xchg
jne
popa
push
xor
xchg
insb
adc
mov
jb
mov
xchg
mov
push
xor
enter
sbb
cmp
sbb
test
mov
inc
cmc
cli
in
pop
roll
test
divl
insb
sub
or
or
pusha
sbb
hlt
test
jbe
insl
outsl
cwtl
test
jmp
loope
mov
dec
dec
xchg
fnstcw
nop
loope
xchg
insl
sub
jnp
repz
xchg
sub
popa
mov
lods
out
cli
inc
mov
xchg
jo
lods
mov
aad
sub
mov
add
sbb
out
mov
enter
and
cld
aam
or
movb
inc
and
fstps
inc
inc
sbb
js
pusha
add
sti
lahf
imul
push
xor
push
ds
mov
inc
sub
imulb
adc
mov
push
sbb
test
stc
adc
xchg
mov
push
cmp
scas
mov
inc
mov
jp
inc
xor
push
sub
sub
pop
shlb
inc
mov
sti
sti
fldl2e
and
cwtl
push
mov
inc
ror
push
in
mov
xchg
fwait
pop
repz
fdivrp
lret
lods
stos
xlat
sti
in
mov
pop
out
and
push
add
mov
out
int
mov
rolb
push
fisttps
rol
xchg
xor
mov
movsb
rclb
cmpsl
negb
push
inc
jmp
cmpsb
jp
jmp
mov
jne
push
pop
mov
push
sbb
fwait
nop
gs
dec
jnp
cmp
and
mov
mov
inc
xchg
sbb
inc
ret
jne
lods
popf
lret
sbb
inc
ljmp
add
jns
psrlw
mov
jnp
std
dec
test
mov
adcb
cmp
rcll
jl
test
ss
imul
in
popf
mov
xchg
pop
andb
movsl
fs
clc
lret
add
loopne
ds
inc
inc
xchg
jecxz
cmp
and
adc
jl
xchg
xor
cmpsb
xor
out
or
shlb
jmp
pop
cwtl
sbb
jle
test
push
mov
ds
loop
pushf
xor
daa
fisttpll
sti
jmp
or
xor
xlat
cmp
mov
xchg
jae
jecxz
popf
and
dec
cmp
add
and
mov
imull
popf
decb
push
cmovbe
aaa
bound
jmp
sbb
pusha
ret
or
call
push
test
xchg
test
xchg
adc
push
or
jb
out
cmp
in
adc
arpl
js
xchg
sbb
imul
mov
xchg
iret
push
cmpsl
xchg
mov
mov
mov
dec
leave
add
or
cmp
xor
jnp
lahf
mov
aaa
xchg
ret
push
sarb
inc
out
int
out
dec
test
fstpt
pop
popa
xorl
std
stc
insl
loopne
inc
xor
sub
dec
add
push
ja
xor
test
cmp
xor
mov
fst
clc
dec
aaa
adc
ret
mov
int3
xor
xchg
les
outsl
outsb
lods
inc
ss
aas
adc
fdivrl
fstps
mov
test
mov
ja
scas
mov
ds
push
push
adc
jb
dec
or
or
nop
jnp
or
lahf
dec
sub
fsubs
cmp
pusha
pop
insl
mov
cmp
aas
sub
push
sub
fstpl
imull
rorb
mov
mov
and
add
dec
mov
mov
xchg
push
sub
into
stc
sbb
push
fcmovne
jno
mov
mov
jmp
mov
in
xor
xchg
aaa
ss
test
enter
fwait
xchg
cld
jnp
gs
and
roll
call
push
cltd
stc
imul
inc
pop
hlt
mov
cwtl
bound
movsl
dec
jg
inc
pop
scas
pop
jecxz
stc
sahf
jl
les
stc
ss
lds
sbbl
jae
scas
and
mov
stos
rorl
jno
add
test
jecxz
mov
adcb
enter
sti
out
dec
fsubl
sbb
test
adc
clc
fmull
fbstp
in
call
lods
push
lods
int
push
dec
mov
fs
xor
insl
sub
divb
popf
cmp
repz
dec
adc
add
aas
xor
pusha
xchg
lea
or
jmp
dec
xchg
cld
cli
or
shrb
rcl
clc
orl
xor
mov
jp
jmp
aas
mov
ljmp
jecxz
jns
ret
mov
setb
faddl
pop
jecxz
test
jge
inc
mov
sub
sub
cld
ljmp
test
cwtl
shll
fldenv
mov
test
lds
adc
fdiv
xlat
je
xchg
test
jecxz
mov
dec
jo
jno
push
and
fldenv
xchg
xor
pop
inc
stc
js
shll
jp
addr16
sbbb
mov
icebp
test
sub
inc
push
sub
jge
xor
shl
add
mov
lret
ljmp
inc
cwtl
call
movsb
test
sti
fcomip
or
popa
mov
stos
xor
adcb
aaa
out
outsb
lahf
out
pop
inc
idiv
scas
or
aad
repz
adc
mov
movsl
out
inc
mov
test
aaa
das
sub
popa
sbbl
popa
out
jb
push
ljmp
lea
cmp
ja
mov
dec
roll
add
lret
add
mov
jno
jno
xchg
lods
jl
xlat
and
es
xor
lock
insl
out
jno
pop
arpl
cwtl
sbb
pop
dec
jmp
pop
mov
stos
xchg
fsts
scas
inc
inc
inc
mov
leave
mov
lods
mov
push
jb
sbb
add
lds
mov
mov
dec
adc
push
out
sbb
ret
mov
das
push
lret
dec
loop
or
xor
out
mov
jmp
jnp
adc
out
movsl
hlt
out
test
je
jmp
sub
inc
lock
test
add
inc
test
shll
add
pop
loop
ljmp
arpl
add
mov
hlt
xorl
mov
insl
clc
add
xchg
inc
scas
aaa
sub
pop
jge
mov
icebp
in
push
mov
adc
out
test
jno
leave
xchg
sarb
inc
js
fcoms
xor
add
rolb
sarb
pop
jg
addr16
popf
fisttpl
jae
test
daa
mov
mov
js
insl
mov
out
sarb
bound
and
sub
or
mov
cmpl
mov
in
popa
mov
add
inc
in
pushf
pop
pop
fists
out
in
inc
pop
cmp
mov
mov
add
hlt
xchg
xor
fistps
push
sub
test
mov
or
pop
sub
pusha
add
jg
lret
loopne
pop
jl
jl
inc
sbb
fnstsw
repnz
and
jecxz
mov
xorb
js
mov
mov
or
pop
mov
and
fidivrl
adc
lret
rorb
mov
lds
repz
mov
sub
dec
push
mov
inc
push
dec
ja
and
cmp
add
lods
sub
push
aas
popa
and
pop
sbb
test
xor
xchg
aaa
adcb
inc
cmp
xchg
jns
mov
sahf
aam
fwait
or
mov
cld
addb
mov
imulb
jns
les
in
and
mov
adc
push
into
cltd
in
sbb
aad
cmp
xchg
test
pop
or
adc
cmpsb
pushf
leave
inc
je
ud1
xor
push
gs
jp
outsl
scas
out
pushf
inc
xchg
xor
out
fcmovu
test
aam
ss
sti
popa
lea
pop
mov
sbb
xchg
ja
jmp
enter
and
lds
dec
dec
inc
mov
repz
and
sub
push
jg
lods
inc
test
mov
mov
sbb
cld
inc
outsl
or
cmpsb
addr16
dec
push
mov
and
testb
push
ja
je
aam
mov
out
cmpb
xchg
dec
pop
push
xchg
xchg
cmp
icebp
in
fs
mov
fs
jno
imul
leave
cmpsl
sub
imul
roll
jne
sbb
mov
inc
movsb
push
into
pop
pop
pop
imul
sub
xchg
inc
fldl
sbbb
jge
shl
test
ljmp
addr16
mov
push
out
les
rorb
sbb
nop
mov
int3
xchg
mov
push
arpl
sbb
bound
idivb
adc
mov
xor
fisubrs
cmp
shl
cld
sub
mov
add
jns
stos
xchg
mov
fstpt
subb
add
push
mov
in
dec
cmp
enter
mov
jl
ret
mov
jo
loopne
fists
xor
pop
inc
lahf
es
out
lock
pop
jae
rcrb
push
nop
and
push
jp
mov
xor
fidivs
mov
sbb
add
jae
lret
lahf
sub
out
sub
outsl
dec
mov
mov
mov
scas
out
insb
call
cmp
shl
sbb
xor
add
jge
mov
out
outsb
mov
sbb
or
shlb
mov
lods
or
dec
or
push
das
movsl
mov
mov
push
js
or
mov
mov
fwait
mov
xor
add
sahf
and
adc
jb
ds
pop
sub
adc
leave
movsb
cmp
adc
out
mov
mov
ror
adc
ja
jge
and
and
sub
out
int
cmp
dec
in
lret
jle
push
sahf
std
mov
pop
inc
sub
jo
adc
sbb
data16
sub
cmpsl
jmp
push
adc
test
push
mov
xchg
loope
mov
push
mov
push
adc
aaa
xor
inc
rolb
cmpsl
shll
adc
jle
insl
add
push
test
pusha
aam
les
mov
pushf
jl
cmp
mov
dec
xor
xor
cmp
scas
mov
pop
lods
sti
jle
mov
lea
push
clc
lcall
xchg
xor
sbb
jbe
test
xchg
sub
cli
push
mov
mov
dec
adc
in
mov
loopne
pop
outsb
or
pop
sbb
lock
adc
loope
mov
jp
imul
out
hlt
jecxz
push
aam
cmp
mov
test
ja
popf
mov
xor
in
aad
out
or
ret
fiaddl
adc
std
fwait
pop
cli
mov
jo
cmc
outsl
add
sub
push
or
daa
imul
movsb
repz
xlat
out
aaa
or
lods
ficoms
jge,pn
out
mov
cmpsb
filds
jbe
cwtl
mov
call
sub
mov
rcrl
adc
mov
push
cmp
add
pop
ljmp
sbb
jge
rcrb
test
xchg
and
rcrl
aaa
jbe,pn
popf
mov
sbb
inc
sbb
sub
adc
and
lret
cmp
lret
xchg
ss
mov
jmp
divb
mov
push
aam
xchg
sar
ss
cmp
pop
jl
fmuls
call
mov
xor
inc
mov
mov
sub
mov
mov
ret
dec
sbb
sub
sti
in
shll
pop
adc
xchg
bound
movsb
insl
cli
bound
pop
psrlw
sub
fisubl
pop
pushf
dec
mull
scas
mov
bound
cmp
repnz
jg
jns
fsubl
das
int
je
mov
lea
push
mov
mov
loope
cmp
in
jns
test
mov
mov
and
sub
in
hlt
test
negl
aas
mov
inc
pop
mov
mov
cmp
cmp
fs
lcall
or
or
cmpsb
dec
lods
mov
ljmp
adc
inc
ror
pop
jnp
popf
cld
and
push
in
push
frstor
sub
imul
fildll
xor
pop
fdivrs
inc
pusha
std
or
jnp
les
divps
pop
loope
cmpsb
scas
dec
imul
out
push
ja
mov
fisubrl
xor
outsb
stc
fisttps
sbb
aaa
pop
cmp
pop
xor
aas
fnstsw
xchg
xchg
dec
dec
in
dec
adc
mov
adc
jns
lods
jne
sarb
inc
push
inc
pop
pop
flds
rep
clc
cmp
cmpl
cmpl
xlat
push
mov
dec
mov
fsubrp
add
push
repnz
push
movsb
subb
faddp
mov
lcall
movsb
in
repnz
mov
push
or
xchg
fldpi
pop
pop
sub
xor
xchg
ljmp
mov
adc
daa
xorb
pop
andl
add
mov
mov
clc
enter
xchg
leave
aas
lret
inc
dec
and
and
dec
daa
sbb
out
jnp
scas
mov
add
shrl
jno
sub
xchg
jg
out
or
adc
push
mov
sub
cwtl
pushf
shr
jle
iret
sbb
sub
pop
aaa
call
xor
test
inc
cmp
jmp
jl
lcall
mov
and
ss
fnsave
outsl
sbb
sti
jno
mov
push
imul
push
inc
out
mov
loope
leave
cs
daa
mov
dec
cmp
fdivrs
xor
lock
hlt
outsl
adc
and
add
test
or
lods
aam
roll
jge
cmpsl
push
cmc
and
daa
aaa
lret
pop
cltd
dec
lret
jno
rcrl
xor
lret
sbb
out
fcoml
into
leavew
fldl
xor
movsl
jno
mov
jp
and
ret
sbb
insb
dec
mov
es
call
pusha
movb
sub
lds
movsb
clc
pop
rcl
out
inc
or
mov
mov
js
adc
in
sub
lret
sub
and
lds
push
std
inc
cld
push
outsl
xor
xchg
lea
xchg
cli
stc
popa
fwait
popa
das
rorl
mov
jg
pop
jnp
in
stos
sbb
loop
jne
jno
pop
adc
jl
xchg
les
mov
xor
and
mov
inc
incl
pop
arpl
push
inc
mov
push
repz
cli
push
stc
pop
in
inc
add
bound
or
push
ficoml
mov
push
out
push
je
pop
cmc
divl
jl
dec
add
subb
fwait
jg
mov
pop
out
adc
aaa
cltd
jmp
mov
pop
movsl
cmp
popf
xchg
daa
ja
lret
in
dec
xchg
insb
jns
das
mov
mov
subl
ret
cmp
add
xchg
pop
out
xlat
and
push
cmpsl
hlt
sbb
xchg
sahf
leave
xor
inc
movsl
imul
test
and
push
or
sub
or
cmp
rcrb
inc
sti
loopne
and
add
push
inc
mov
notb
ss
sti
or
sbbb
cmp
pop
insb
incb
push
xor
and
int
jb
faddl
xor
pop
mov
int3
clc
pop
dec
xchg
push
pop
jle
push
imul
jge
add
xchg
shll
or
mov
cld
pop
mov
mov
ficompl
inc
cmpsl
adcl
arpl
xchg
pop
xor
pusha
mov
and
clc
sbb
fmull
lods
mov
lods
pop
cli
push
xchg
push
lcall
js
xor
mov
test
popl
loop
scas
mov
cltd
inc
mov
aad
jne
lock
andb
adc
cmp
push
inc
cmc
fidivs
clc
jnp
lret
mov
in
stc
jl
cli
mov
push
jecxz
dec
cltd
test
sbb
cwtl
and
xchg
ljmp
mov
and
enter
adc
mov
arpl
mov
and
pop
jg
dec
in
adc
cmp
test
mov
incb
xchg
lock
sub
or
jmp
adc
add
push
add
fadds
mov
ljmp
inc
jo
out
xchg
fcom
scas
faddl
push
mov
adcb
inc
movsl
bound
stc
imul
pushf
mov
in
mov
mov
test
xor
push
stos
shrb
pop
scas
add
mov
jnp
leave
sub
add
in
dec
pop
pop
inc
sub
loopne
jne
and
addr16
imul
jmp
xor
ss
xchg
sub
pop
cmp
rcrb
push
imulb
jae
mov
push
rclb
xchg
xor
dec
inc
xchg
cmp
orb
mov
test
push
sub
lods
scas
or
xchg
mov
addl
mov
notb
out
insb
stos
lea
add
cmp
movsb
in
jmp
cmp
push
out
in
sub
xor
adc
fwait
outsl
jmp
xchg
xchg
arpl
jo
or
or
leave
xchg
add
test
ljmp
pushf
iret
jg
pop
pop
stos
xchg
cmp
addr16
std
lods
adc
xor
insb
std
mov
xchg
pop
and
jecxz
xchg
xor
sti
pop
sbb
push
les
fcmovb
push
call
adc
push
scas
leave
aam
mov
xor
ljmp
int
dec
sbb
push
push
xchg
into
jmp
sbb
ret
inc
cmp
mov
push
scas
loope
push
xchg
add
bound
mov
into
pop
pop
mov
push
jecxz
or
cmp
xor
out
es
dec
inc
mov
dec
in
sbb
cltd
inc
sahf
pop
fsubrl
push
mov
out
adc
sub
xchg
adc
pop
imul
popf
sub
repz
scas
sub
cmp
int3
into
xchg
les
mov
clc
or
add
lods
inc
or
inc
test
das
adc
inc
sbb
add
out
inc
shrb
jge
adcb
fwait
jecxz
int
adc
jge
sub
push
jno
cwtl
add
lds
inc
fs
ficoms
mov
icebp
int3
mov
push
xor
sub
mov
in
decb
push
repnz
mov
mov
cltd
inc
pop
sbb
adcl
pushl
dec
pop
movd
int3
pushf
sub
test
xchg
bound
push
mov
std
cmpsb
push
mov
ret
mov
sub
hlt
cld
cmp
nop
ljmp
pop
roll
pop
cmpsl
fdivl
xchg
arpl
and
sub
dec
hlt
or
iret
mov
mov
lret
sbb
pop
mov
dec
jg
push
pop
nop
xor
jb
xchg
push
xchg
inc
dec
push
aaa
data16
stc
scas
or
push
aad
xchg
mov
hlt
lahf
jmp
jb,pn
inc
imul
mov
cmp
ror
stc
jbe
and
loop
lret
test
imulb
in
inc
or
inc
mov
sub
data16
lock
shl
xchg
push
sahf
into
or
call
fists
das
ret
iret
imul
xchg
push
lock
pop
fisubrl
inc
fprem
shrl
mov
jp
mov
adc
inc
cmp
clc
cmp
xlat
repz
rolb
std
arpl
push
mov
mov
in
fbstp
sbb
inc
scas
add
xchg
loop
ss
sbb
adc
in
and
loop
cmp
pop
test
mov
sbb
mov
fwait
xor
sti
movb
sub
outsl
mov
les
or
or
insb
in
ret
out
jnp
mov
mov
popf
pop
adc
xchg
int
movsl
loopne
ja
scas
adc
pusha
push
sub
pop
fimuls
mov
incl
xlat
cmp
int
pop
popa
hlt
popa
int3
mov
or
popa
cmp
xchg
pop
push
cmp
cmp
dec
jge
xor
icebp
inc
mov
adc
push
dec
xor
mov
rorb
lcall
push
dec
cmpsb
loopne
ret
mov
sbb
in
shll
sub
jbe
fsts
sbb
jb
loope
push
pop
imull
movsl
scas
xchg
jno
into
out
in
pop
arpl
insl
fwait
jno
mov
int3
sbb
mov
or
cmp
cmp
cmpsl
xchg
repnz
ljmp
ficompl
pop
in
inc
pop
jl
icebp
dec
imul
jb
loop
xorl
sbb
cld
jge
pop
inc
mov
addr16
andb
inc
or
cmp
and
xchg
subl
jle
inc
and
je
loope
cwtl
loopne
push
cs
mov
mov
fdivrp
loopne
fadd
pusha
jmp
push
popf
loope
shrb
movsb
test
pop
xor
sahf
fwait
fstp
and
outsl
dec
add
vcvtpd2psx
fs
sbb
pop
mov
lock
cmp
push
jecxz
sbb
and
int3
pop
add
sub
inc
cli
mov
jnp
bound
fidivs
pop
xchg
in
insl
mov
add
mov
cmp
push
xchg
mov
push
ffree
sbb
imul
or
jns
cmpsb
leave
lret
mov
in
pusha
es
xor
call
rcll
ror
adcl
xor
adc
mov
hlt
das
out
gs
sti
dec
push
lret
out
sti
jl
fcomps
mov
pop
nop
iret
jae
jle
mov
out
lods
jb
test
in
decl
rcll
mov
mov
imul
pop
cltd
and
cmc
sub
sbb
cmp
xchg
mov
pop
inc
pop
test
sbb
sbb
cmpsb
and
xor
mov
shll
sbb
lret
pop
mov
jle
cmp
xchg
loop
jecxz
scas
sub
mov
js
jle
or
mov
sub
ret
rclb
cwtl
mov
sbb
jmp
andl
dec
mov
cmc
inc
inc
dec
test
mov
in
addl
cltd
testb
andb
fwait
imul
jg
mov
xchg
sub
rol
es
dec
sbbl
inc
mov
ror
pop
fistps
sub
push
popf
or
call
pop
inc
stos
aad
div
fisttpll
sub
imul
in
aas
repz
insb
or
mov
jns
lret
adc
and
js
out
stos
xchg
ja
cmpsl
subb
or
call
aam
xchg
scas
stos
push
dec
daa
push
sbb
in
pushf
out
int3
ss
jg
dec
cmp
das
loope
mov
jnp
mov
dec
inc
shl
arpl
jmp
adc
popl
and
push
popf
adc
int
mov
mov
in
int3
outsl
js
push
add
cwtl
jg
mov
sahf
cmpsl
gs
stc
movsb
and
xor
leave
push
inc
xchg
xchg
movsb
mov
ret
int3
sub
cltd
js
pop
int3
mov
sub
roll
sbb
sbb
and
xor
inc
push
inc
jle
inc
adc
sub
std
addl
out
mov
mov
gs
into
add
cmp
pop
in
xlat
mov
mov
mov
in
jne
ds
outsl
add
shrb
rorl
adc
rcll
sub
and
scas
adc
cmp
scas
dec
pop
xorb
leave
xor
sub
int
push
ja
xchg
repnz
xlat
and
and
ljmp
add
cmp
adcb
xchg
add
test
xchg
mov
sarb
sub
lods
pushf
xor
into
cltd
dec
fdivl
adc
iret
push
and
mov
fstps
outsl
sub
add
rcrl
outsb
xor
lret
js
inc
mov
push
repz
gs
test
iret
push
mov
out
dec
insl
sub
ljmp
or
imul
push
ljmp
mov
push
cld
jecxz
and
xchg
notl
mov
lsl
enter
in
out
mov
in
xor
insb
popl
jmp
ja
jmp
enter
pop
scas
inc
push
insl
add
mov
iret
enter
shll
shrb
add
dec
xchg
jbe
dec
enter
cmp
push
push
cmp
lcall
jle
ljmp
sub
xchg
push
sahf
jns
test
mov
add
xchg
mov
adc
push
cwtl
cli
call
cmp
cmc
cwtl
add
fldl
push
es
pop
jmp
hlt
pop
jae
fsts
mov
xor
inc
popf
loope
in
dec
jp
aaa
sbb
jbe
push
sub
movsb
push
icebp
out
mov
and
aam
ds
aas
adc
dec
cli
inc
pop
inc
lret
push
out
mov
ds
jbe
jae
sbb
test
lds
mov
outsb
push
sub
xchg
mov
mov
pop
mov
cmp
xchg
cwtl
or
mov
js
xchg
mov
mov
nop
ja
sbb
xchg
clc
adcb
ret
push
out
outsl
ret
lods
in
mov
rorw
into
cwtl
psubusb
pop
stc
cmp
out
jo
shlb
nop
pop
arpl
stc
movsl
pop
negb
mov
arpl
push
and
dec
pop
scas
adc
rorb
test
xchg
pop
mov
call
dec
dec
lcall
dec
fnstsw
loop
jo
push
jae
lret
popa
xor
cmpsl
aaa
pop
push
or
ja
xchg
cmpsb
rcrb
mov
cli
adc
sub
das
into
jmp
das
xor
jne
stos
pop
lcall
inc
xor
dec
shrl
mov
in
fldt
rcrl
inc
shll
loop
ret
and
cmp
push
fistpl
inc
shlb
and
fisubl
iret
cmp
fdivrl
repz
aad
inc
scas
clc
xor
ret
fstpt
mov
cmp
adc
stos
xchg
pop
test
jnp
or
pop
xor
jno
scas
cmc
sahf
jbe
dec
add
gs
jge
mov
fs
jmp
and
jl
xor
scas
mov
dec
stc
mov
mov
or
lock
cmp
cmpsl
outsb
test
push
inc
cli
mov
ret
aad
fisubs
decl
sarl
mov
xor
xorl
test
insl
fistps
lds
cli
add
jl
into
cmc
loop,pt
cwtl
shrb
outsl
push
jbe
sbb
movsb
std
jg
xchg
add
ljmp
insl
lea
mov
or
mov
add
cmpl
push
mov
test
sub
icebp
inc
inc
sub
mov
jo
das
shl
je
pop
leave
out
jo
fadds
or
pop
gs
nop
sub
jecxz
cmp
arpl
inc
pop
adc
xor
sarb
sbbb
pmaddwd
out
push
aam
mov
pop
and
iret
inc
and
mov
bound
cmpsl
es
inc
outsb
and
jne
add
push
mov
and
aam
lods
mov
cmp
push
movsl
add
orb
cltd
inc
movsb
sbb
fnsave
adc
push
push
rolb
fcompl
es
mov
cld
arpl
mov
fsubl
gs
addb
cli
jp
fwait
mov
repnz
cmp
iret
in
jp
cltd
inc
mov
ljmp
mov
inc
push
xor
sub
sbb
scas
jae
repnz
ljmp
ja
fcomps
mov
mov
add
or
imul
adc
cld
mov
in
mov
in
jbe
inc
push
shll
mov
or
cmp
rorb
cli
sbb
ret
xor
add
mov
notl
inc
mov
adc
xchg
mov
inc
loop
or
push
xacquire
xchg
mov
mov
cmp
pop
mov
jb
cmp
clc
je
mov
andb
jmp
inc
fsubr
xchg
js
fiaddl
jo
cmp
cmp
xor
push
sub
mov
and
add
push
cmp
stc
push
jg
fsubrp
push
dec
adc
cmpsb
iret
cmp
mov
faddl
sub
mov
push
rcrb
cmp
stc
sarl
push
lahf
push
cmp
mov
arpl
stos
and
fmuls
sub
lret
ljmp
mov
test
loopne
adc
add
aaa
jle
ror
inc
lcall
inc
fiaddl
movsl
lret
into
sub
popf
stos
outsl
lods
imul
in
dec
jno
test
xor
scas
inc
test
or
xor
repnz
xchg
sub
sbb
push
mov
mov
mov
mov
scas
repnz
mov
std
jb
div
daa
xchg
push
or
inc
xor
or
mov
inc
mov
dec
pop
sbb
fs
push
aam
cmp
push
into
insb
lret
loope
dec
mov
mov
push
mov
aam
mov
push
imul
dec
pop
out
shl
push
pop
and
mov
adc
cwtl
pop
xor
and
inc
andb
add
push
mov
inc
inc
bound
xchg
clc
aad
cmp
jg
ss
mov
gs
mov
inc
inc
jp
jae
mov
scas
shlb
in
aaa
xor
movsl
test
rclb
ss
adc
mov
sbb
out
pop
jo
dec
mov
xchg
adc
push
mov
mov
les
ret
or
sub
or
or
imul
mov
fisubrs
popa
inc
mov
int
xchg
fmulp
sbb
cmp
sarb
inc
xchg
leave
in
adc
and
inc
ljmp
popf
mov
mov
ljmp
hlt
and
test
or
dec
push
pop
out
rcrl
ret
gs
ret
jae
popa
out
jecxz
add
movsb
sti
dec
mov
out
mov
leave
lret
fld
jmp
leave
jmp
mov
push
dec
jns
bound
or
push
add
adc
add
sbb
mov
vp4dpwssd
and
lods
jns
jbe
jbe
xchg
clc
bound
and
xchg
int
cmpsb
inc
or
pop
aam
xor
mov
mov
loopne
sbbb
in
cmp
or
cmp
loop
mov
shl
std
xchg
lret
inc
hlt
mov
push
fdiv
sbb
jle
mov
sti
rcrl
fisubrl
mov
mov
jp
into
test
loope
in
out
pop
insb
imul
push
loope
sbb
cmc
in
xor
cli
outsb
xchg
sar
std
aam
out
popf
nop
int
cmp
js
bound
je
jge
push
pusha
push
pop
push
dec
and
mov
iret
mov
push
pop
data16
mov
ds
ljmp
ljmp
in
rcl
cli
clc
fsubrs
imul
arpl
pusha
cs
sub
das
mull
cmc
mov
insb
icebp
mov
push
sub
xchg
int
xchg
lcall
pop
in
adc
aaa
test
or
jecxz
and
xchg
insl
pusha
imul
xlat
cmpsb
push
fildl
or
cmp
sub
and
inc
popa
test
stos
lods
pop
je
bound
jmp
daa
roll
jb
xor
sbb
inc
mov
xchg
aaa
mov
xchg
push
sub
sub
push
mov
pop
shll
les
dec
inc
fsts
mov
into
dec
sub
mov
fldl
push
test
es
sbb
sarl
xor
cmp
imul
in
mov
insl
pop
sbb
inc
and
lcall
add
push
fcoml
mov
pop
dec
pop
shrl
or
popf
push
xchg
divl
insb
push
pop
data16
sbb
inc
test
jecxz
dec
cmp
data16
stc
jecxz
mov
push
dec
xchg
push
cli
out
mov
or
pop
ficoms
aas
xor
sbb
jge
int
jl
dec
fiadds
mov
dec
addr16
rcrl
imul
fs
add
data16
sub
decb
imul
cmc
into
push
fcoms
daa
setge
fdivs
jne
mov
lret
jl
mov
cmp
cmp
push
shrl
cmp
inc
fistpl
mov
data16
or
xchg
xlat
inc
pop
hlt
mov
gs
sub
or
sbbb
jbe
loop
pop
js
mov
xor
mov
sbb
xchg
arpl
inc
loope
mov
sub
add
lret
movsl
ret
xor
pshufw
add
and
and
leave
clc
xor
fstpl
push
sub
pop
cwtl
pop
js
mov
call
cmp
fmuls
andb
add
mov
imul
movsb
dec
cli
push
stos
sub
mov
push
jle
lea
mov
jbe
cwtl
aad
inc
mov
daa
xor
jle
sbbl
mov
sbb
lock
sbb
pop
pop
xlat
jo
mov
and
cmp
pop
test
loope
dec
mov
addl
iret
jbe
scas
out
jecxz
lahf
xor
push
jae
dec
adc
fwait
into
mov
mov
mov
icebp
inc
jno
mov
push
dec
add
or
dec
jno
xchg
mov
push
pop
and
hlt
rep
jno
inc
pop
mov
push
dec
aas
daa
scas
popa
fsubs
sbb
mov
or
push
adc
leave
cmpsl
cli
int3
mov
jbe
addr16
and
adcl
cmp
pop
dec
mov
xor
enter
ss
adc
sub
add
shrl
jns
enter
or
popa
ficompl
inc
iret
lods
sub
stos
mov
mov
shrl
push
xchg
dec
in
or
rorb
mov
mov
lahf
ret
xor
mov
xchg
add
stos
jg
lea
pop
inc
pop
sti
mov
lahf
xor
or
lea
andl
cmp
cmp
fsubrs
dec
out
sub
mov
xor
pop
pop
das
test
mov
jnp
icebp
bound
xchg
ret
jle
or
push
clc
inc
sbb
mov
imul
fsubl
jle
aaa
inc
mov
or
das
add
sub
sbb
clc
sub
adc
or
or
shll
aam
shlb
jl
mov
mov
jbe
std
mov
xchg
out
pop
jne
mov
mov
rolb
arpl
add
subb
in
adc
das
testl
es
mov
add
jns
inc
rcrl
mov
jl
dec
and
ret
jmp
sub
out
or
mov
repnz
ljmp
sub
sbb
push
pop
fisttps
call
mov
test
sbb
push
add
shlb
inc
jno
jns
mov
ljmp
pusha
inc
push
xor
push
divl
mov
daa
sbb
daa
bound
nop
lds
xchg
xor
jle
aas
data16
fwait
cmp
adc
sub
addr16
ficompl
and
mov
xchg
hlt
xor
add
push
lods
imull
in
jg
sub
dec
fdivs
dec
out
xchg
mov
ret
mov
pop
mov
and
sahf
lcall
mov
hlt
dec
inc
in
pop
dec
xchg
in
xor
jb
nop
mov
jp
addl
out
aas
pop
es
stc
fisubs
sub
sub
inc
movsl
mov
cmpsb
jg
leave
lcall
xchg
scas
std
jecxz
push
pop
push
fsubrl
adc
imul
xchg
sub
iret
adc
lock
xor
fsubr
mov
popf
cwtl
testl
leave
outsl
sbb
hlt
pop
ret
xlat
cmp
push
popa
xor
push
sbb
popa
rolb
cltd
es
and
fsub
push
push
push
fisubs
push
push
js
imul
mov
pop
lods
ret
scas
mov
lds
idiv
ficomps
das
enter
push
scas
push
sarl
lcall
out
xchg
add
cli
cmp
out
jl
bound
in
pop
js
je
outsl
ja
lea
mov
test
fwait
and
scas
mov
cs
cld
or
pop
loope
dec
sbbb
test
xor
loopne
cmp
adc
mov
adc
in
enter
inc
mov
xchg
lock
and
stc
test
lock
push
mov
insl
mov
mov
cwtl
ret
dec
inc
sbb
mov
xor
xchg
in
or
xchg
mov
fs
in
lods
xorb
and
rcr
fistpll
fbld
movsb
and
inc
in
xchg
pop
test
dec
ficompl
pop
inc
mov
mov
pop
sbb
or
jecxz
out
out
or
fcmovnbe
jecxz
dec
js
js
push
pop
insl
popa
mov
mov
test
adc
rorl
insl
sub
jp
sub
sbb
call
outsl
mov
xchg
cmp
aad
cli
ss
dec
clc
test
loopne
gs
adc
xchg
jmp
xchg
push
mov
sbb
jno
in
jle
mov
test
jp
lret
mov
outsb
aas
and
imul
aas
dec
ficoml
test
sahf
test
push
mov
xor
push
inc
into
les
push
in
add
flds
xchg
add
pop
mov
scas
or
ljmp
mov
cmpsb
mov
or
aam
pop
imul
ficoms
cs
test
psubusw
imul
xor
imul
sub
outsl
cmp
lods
in
sub
cmp
xor
lret
xor
add
push
cmpsl
gs
call
imul
pop
xor
fldcw
and
xchg
cli
adcb
cmp
push
subb
dec
stos
test
and
jmp
pusha
adc
cmpsl
jge
or
cltd
add
mov
and
add
cmp
cmp
inc
ds
inc
and
inc
or
test
imulb
pusha
idivl
and
push
movsb
mov
enter
xchg
aad
push
xor
push
sbb
stos
xchg
fs
into
adc
push
jne
mov
lock
cmpb
loop
aam
adc
lahf
mov
dec
iret
sti
aaa
push
cld
jae
popf
mov
cwtl
mov
scas
jg
pop
loop
fstpl
pop
and
clc
xor
or
stos
or
cmp
fistpl
hlt
in
cmpsb
scas
mov
pop
lcall
mov
jecxz
iret
xchg
jb
ss
je
inc
and
sbbl
stos
sbbl
adc
pop
jbe
jno
adc
mov
jmp
or
in
cs
test
push
and
sbb
repz
pop
sub
cmp
insl
cltd
lods
inc
pop
jmp
jge
push
les
cmc
lds
in
cmp
hlt
dec
sahf
adc
and
fadds
nop
push
arpl
aad
leave
dec
sti
cli
mov
inc
lea
pop
mull
adc
mov
xchg
cld
and
mov
in
imul
into
lds
ret
les
out
lods
xchg
test
insb
add
sbb
fwait
lock
cmp
int
mov
push
test
movl
mov
cwtl
lds
mov
push
rorl
xchg
repnz
imul
idivl
push
or
dec
jl
pop
sbb
dec
dec
aad
pop
pop
mov
fldlg2
sub
pop
inc
sarb
mov
jle
or
lret
add
dec
sbb
sub
push
das
pop
pop
mov
je
mov
jge,pt
jecxz
lcall
repnz
imul
out
mov
xchg
and
in
inc
adc
inc
sti
out
inc
pop
jo
inc
cld
cmp
ret
sbb
pop
inc
test
and
pusha
in
bound
push
dec
push
je
xlat
daa
push
es
scas
mov
ljmp
call
sub
div
push
xchg
cmp
or
cs
mov
sti
stc
cmp
add
std
nop
fstl
loop
loopne
sbb
jle
arpl
mov
or
or
shll
add
or
or
mov
sbb
push
decb
outsb
xchg
iret
rcrl
and
inc
add
sub
or
dec
shr
stos
xchg
loopne
shrb
bound
mov
into
test
xchg
hlt
xchg
adc
add
push
movsb
mov
xlat
aam
add
imul
jl
adc
xchg
stos
or
cmp
inc
ss
push
xchg
mov
jns
clc
push
adc
sarb
fimull
das
sbb
mov
cltd
insl
outsl
ficompl
sbb
movsl
cmp
cmovo
ret
test
xor
shll
mov
subl
icebp
popf
insb
mov
xchg
push
stos
sub
sub
sbb
ds
push
pushf
push
jb
test
cld
arpl
lcall
jae
adc
dec
stos
pushf
push
sahf
jne
cmpl
pop
clc
inc
mov
data16
pop
shll
call
and
das
outsb
xor
rorb
dec
jae
orl
mov
dec
sub
fisubrs
dec
pop
cmpl
mov
adc
inc
mov
fnsave
push
inc
mov
jbe
pop
aas
pop
cmp
iret
int3
scas
lock
inc
ds
out
out
or
sti
xchg
ret
pop
aaa
ss
sbb
loopne
lret
push
ror
add
lds
and
mov
mov
adc
xchg
ljmp
pop
xchg
aad
jmp
add
popa
roll
add
das
cld
mov
mov
ljmp
enter
and
out
stos
pop
mov
inc
pop
movb
xchg
or
lret
jl
inc
xchg
sub
jo
push
cmpsb
mov
data16
or
sbb
jmp
lods
pop
imul
mov
add
or
pop
call
outsl
mov
pop
and
fwait
shl
add
popa
stc
jne
add
inc
pusha
sahf
dec
scas
inc
pop
mov
inc
icebp
mov
pop
and
clc
adc
jne
xor
ss
mov
add
mov
std
sbb
xchg
sub
push
pop
sbb
mov
mov
pushf
rorl
jnp
sbb
jl
inc
mov
dec
xorb
jecxz
sub
stc
ficoms
cli
push
ds
cmpsl
js
dec
or
lret
sub
outsl
dec
mov
push
mov
rolb
ds
or
jne
jg
fdiv
jecxz
fmuls
lods
or
jne
jb
mov
mov
in
jnp
or
cmp
jne
xchg
das
or
inc
bound
lock
in
sbb
mov
mov
out
add
inc
lahf
ljmp
imul
mov
aaa
push
iret
and
adc
ljmp
cld
comiss
xchg
iret
mov
and
scas
add
call
mov
icebp
mov
inc
mov
dec
in
cmp
push
jg
movsl
loope
mov
and
loopne
inc
nop
adcl
cmpsb
sbb
lcall
ficoml
xor
repnz
daa
or
cmp
sub
jnp
dec
and
ret
loope
aaa
inc
outsb
into
imul
mov
push
cli
mov
sahf
and
in
inc
lock
jae
fildl
scas
sub
fs
fwait
dec
rcll
mov
cli
xor
and
xchg
test
loop
lret
jle
xlat
orl
mov
mov
fsubrl
jns
jle
cmp
or
leave
sbb
cld
lods
into
push
cmpsb
shlb
inc
mov
out
or
daa
daa
imul
sub
lods
cmp
and
cmp
fdivs
inc
fmull
in
xchg
mov
mov
int3
push
sbb
mov
or
jns
and
test
xor
ret
jne
fld
dec
testl
fwait
mov
cld
and
push
insl
pop
fildll
stos
push
mov
mov
mov
xor
sub
ds
sbb
jns
insl
add
fst
or
sub
push
addb
mov
lods
xchg
aad
adc
dec
popa
mull
stc
sub
aam
mov
sbb
xor
iret
imul
incl
sete
or
loopne
rorb
xchg
in
pushf
adc
mov
js
and
or
jo
insb
adc
in
cmpsb
cmp
mov
popa
mov
das
insb
pop
mov
fisubl
bound
cmc
sub
jns
shrb
loope
fs
in
push
fs
push
fstps
jecxz
lret
test
push
cmp
xlat
idivb
jbe
dec
jo
vcmpps
cmpsl
xchg
xchg
mov
repnz
adc
push
mov
inc
aam
lods
test
rcll
lcall
int
jo
ja
adc
pop
repnz
xor
clc
addr16
aad
xchg
inc
or
sub
aad
cmp
mov
aaa
int
std
test
lcall
cmp
adc
xor
mov
sti
icebp
sti
adc
mov
movsb
lcall
xchg
stos
movsl
sbb
out
inc
mov
sbb
adc
xchg
ret
adc
inc
cmp
leave
popa
xlat
inc
jge
pop
gs
lret
ss
dec
fimuls
inc
xchg
test
sbb
arpl
fstps
mov
loopne
test
in
sub
mov
add
lahf
dec
adc
lods
add
out
lcall
pop
mov
aas
jae
push
mov
mov
mov
ret
js
pop
inc
push
cmp
or
cmp
das
cld
fdivrl
adc
fadds
xchg
mov
xchg
cmpsb
mov
adcb
xor
mov
arpl
arpl
das
bound
out
xchg
and
xor
clc
sbb
and
dec
pop
jmp
idivb
stos
add
dec
out
nop
cmc
rcl
jl
mov
mov
cmp
pop
and
mov
dec
fisttpl
ror
aas
xorl
mov
cmp
xlat
pop
mov
mov
dec
scas
movsb
aam
sub
xor
jp
inc
mov
pop
pop
popf
mov
fwait
js
jg
ds
and
aad
lds
jle
shlb
push
dec
outsb
ja
xor
add
sbb
pop
js
mov
enter
out
cmc
int
mov
pusha
andb
push
jle
adc
add
mov
or
mov
push
rcrl
xchg
sub
pop
aaa
xor
push
pop
push
add
xor
fs
or
sbb
mov
mov
stos
mov
adc
add
cs
mov
add
stos
adc
test
and
sbb
jle
xlat
mov
ja
aas
das
daa
test
test
jnp
jo
pop
popa
iret
or
and
call
add
insb
mov
dec
loop
scas
aad
aad
mov
jo
mov
cmp
mov
test
cmc
push
fistps
inc
add
jno
out
pop
dec
or
jp
jb
xchg
shlb
fwait
push
adc
inc
std
imul
mov
xchg
loope
out
pop
fdivrs
push
call
and
cltd
push
cmp
fcmovne
push
add
rorb
push
cmp
aad
out
pop
and
pop
cwtl
push
cmp
adc
mov
lea
pop
test
mov
cmp
fldl
sub
dec
mov
push
mov
fistpll
add
dec
cmp
fwait
cmpsb
es
lea
les
inc
mov
xor
mov
aam
repnz
inc
ret
sub
imul
fldcw
and
inc
add
test
and
cmpsl
aad
nop
movsb
sub
xor
lods
dec
mov
adcb
imul
mov
fists
insb
mov
add
inc
out
pop
movsl
out
stc
pop
adc
sahf
aaa
push
addl
xchg
mov
insb
xlat
into
xor
popf
repnz
mov
sahf
cmp
sub
stos
ja
pop
and
mov
cli
les
insb
mov
pop
xchg
dec
adc
mov
imul
pop
xchg
jp
aas
mov
cmp
imul
mov
inc
pop
sub
and
loopne
shr
stos
pop
fimuls
push
mov
ds
and
mov
push
sahf
mov
sub
and
dec
aad
imul
pop
std
push
mov
mov
lret
xchg
mov
pop
cli
pop
outsl
daa
pop
aad
adc
clc
in
bound
fiaddl
jecxz
ds
cwtl
cmc
in
mov
leave
cli
mov
ret
scas
rcrb
sti
andb
jecxz
mov
lock
ja
test
aaa
push
add
movsb
stc
lret
cs
adc
testl
xchg
or
or
lret
push
pop
out
add
call
data16
jae
mov
out
arpl
icebp
pop
fs
daa
sub
popa
dec
mov
adc
lock
insb
xchg
loope
bound
adc
jb
ret
jne
add
lcall
sti
stc
add
push
sub
les
fs
mov
test
stc
ss
push
and
mov
in
into
in
aad
gs
add
ret
sbbl
or
inc
push
push
jg
cmp
sbb
cmp
mov
xlat
scas
aaa
mov
ljmp
inc
scas
das
inc
loope
jmp
and
fisubrs
or
incl
out
enter
xor
mov
pop
popa
cmp
loope
inc
lock
sbb
push
fbstp
sbb
mov
or
adc
popa
fstpl
mov
xor
cld
dec
adc
push
loopne
rorl
fistpl
fldl
int
das
fidivrl
jl
in
or
jg
cmp
insb
push
mov
jecxz
jecxz
ret
jl
inc
in
push
std
jp
jg
cmp
push
data16
lods
jg
pop
adc
xlat
xor
in
inc
lods
fisubl
lock
jae
lcall
lock
rorl
test
pop
sbb
mov
push
aad
or
call
add
sub
fisubrl
es
and
negb
xchg
push
shrl
sub
sbb
cmp
inc
xor
push
inc
fldcw
dec
adc
in
int3
inc
fndisi(8087
and
fs
fcmove
movsb
lods
jg
and
dec
jb
push
jge
push
clc
jg
shll
filds
cmp
mov
and
imul
call
xchg
scas
aam
fcmovu
add
xchg
adcb
push
push
dec
pushf
imul
movups
xchg
and
jge
gs
sbbl
std
enter
das
pop
pop
jp
inc
lods
add
sbb
jle
mov
sarb
lods
push
movsl
jbe
outsl
mov
inc
add
inc
icebp
faddl
pop
repnz
jecxz
lcall
mov
mov
xchg
adc
aad
stos
jge,pn
mov
cmpsl
push
leave
push
cli
jecxz
ss
xor
xor
cli
inc
cmp
mov
out
sahf
cwtl
call
out
fisubrs
mov
stos
data16
fcmovnb
mov
scas
mov
mov
bndldx
js
cmp
or
mov
insl
xor
push
push
xchg
xchg
jl
insb
aad
mov
repnz
test
add
sbb
nopl
xchg
nop
aam
ret
pop
shl
jnp
inc
dec
ss
shlb
xchg
jecxz
shll
add
testl
jno
push
mov
imul
cmp
jae
mov
cmc
and
push
ficoms
rcr
cli
sub
insl
in
xchg
enter
fs
mov
push
jge
fstps
push
push
jbe
sbb
pop
dec
pop
xchg
cltd
adc
dec
imul
orb
mov
sbb
cwtl
lcall
in
mov
add
sub
sub
out
push
dec
sub
stc
subb
push
movsb
jnp
sti
adc
stc
dec
movsl
cli
test
scas
clc
popa
jne
sbb
sti
ret
xchg
mov
js
fadds
push
pop
dec
loop
pop
sub
dec
mov
in
fdivr
or
cli
push
les
cmpsb
mov
aam
flds
fnstsw
nop
push
pminub
mov
cmp
aaa
stos
pop
xor
mov
and
add
hlt
adc
das
pop
add
xor
xor
roll
lcall
movsl
mov
push
rclb
add
or
mov
leave
mov
outsl
rorb
lret
adc
cmp
and
mov
mov
std
flds
dec
lret
pop
in
int
or
test
scas
adc
pop
inc
cmp
nop
repz
push
add
fnstsw
mov
rcll
xchg
mov
pop
or
dec
xchg
push
pop
or
cmpsb
jp
out
stos
or
sub
or
sbb
pop
xchg
loope
faddl
lock
dec
mov
shrb
outsl
cli
daa
xor
mov
and
imul
jecxz
enter
add
mov
in
mov
mov
mov
pop
jne
pop
mov
or
push
sub
cmpsl
adc
ljmp
or
mov
lock
in
dec
pop
jp
mov
cs
aad
ljmp
pop
mov
in
or
jo
inc
fdiv
mov
mov
adcl
cmp
pop
push
mov
mov
sbb
sub
push
sbb
sub
daa
lds
cmp
xor
sbb
mov
pop
and
sub
mov
dec
add
xor
mov
sub
push
lret
or
cmp
movsl
sahf
shlb
mov
sbb
scas
fisubl
mov
mov
stos
push
incb
ret
popa
and
mov
shl
fistpll
mov
push
push
mov
adcl
xchg
mov
insb
scas
scas
or
sub
mov
shlb
out
rorb
jbe
je
or
xchg
iret
lahf
aas
popa
push
inc
sub
push
psllw
addr16
cmp
in
test
iret
pusha
in
push
cmp
adc
xchg
enter
aam
add
and
mov
add
xchg
jo
pusha
shll
or
or
add
cmp
filds
jo
insl
jg
jbe
scas
dec
imul
aaa
push
jecxz
and
and
scas
jae
sbb
les
jae
jb
insb
hlt
mov
out
add
cld
jb
push
xor
jl
or
jl
push
jb
repnz
cmpl
or
pop
ss
mov
xor
ret
mov
outsl
mov
jb
pop
notb
adcl
add
jmp
sbb
test
mov
cwtl
rclb
xchg
push
mov
or
mov
push
push
jb
or
nop
aam
jo
outsb
jne
imul
popa
js
push
and
rcrb
shrl
scas
nop
or
imul
jb
aaa
sbb
push
mov
and
and
push
iret
repnz
mov
cwtl
mov
cmpsl
xchg
inc
inc
lahf
mov
pop
repnz
or
fidivrs
sbb
dec
inc
mov
inc
lcall
fildll
push
fs
jle
inc
jae
leave
ret
adc
inc
test
jp
jb
mov
enter
cmp
mov
outsl
or
roll
mul
sti
cmp
jecxz
clc
mov
pop
push
sahf
or
jo
mov
pop
popf
adc
insb
add
data16
cmp
fstpl
shrb
repz
sbb
inc
pop
int3
dec
jbe
sub
lret
lcall
cmp
xchg
mov
mov
shr
icebp
cmp
jns
adc
insb
xlat
push
jne
inc
jp
in
pop
mov
cmp
mov
mov
jnp
arpl
mov
shrl
das
jle
pop
fs
inc
enter
test
dec
mov
dec
jb
or
push
stos
cvtpi2ps
push
imul
add
out
mov
inc
loope
mov
les
xor
jns
push
jnp
mov
mov
pop
dec
mov
sub
int
lock
nop
mov
xlat
pop
lahf
sbbl
push
out
xchg
push
lods
push
jno
popf
cmp
sub
outsl
or
fdivrl
add
in
mov
dec
mov
mov
inc
loope
sbb
dec
mov
addr16
out
es
sub
pushl
lock
jne
jno
pop
mov
dec
pushf
push
mov
and
outsl
and
in
sarl
sbb
add
jmp
das
add
push
scas
aam
jae
daa
pop
fwait
push
jge
lods
inc
cmp
movsl
out
inc
js
pop
arpl
lcall
sti
int
stos
mov
jb
mov
stos
rclb
and
ljmp
je
mov
or
adc
negl
push
or
xor
out
pop
loop
and
aam
lods
cmpsb
stos
addr16
lret
test
std
xor
in
mov
js
aam
enter
jg
out
bound
movsl
orb
sbb
push
aaa
imul
push
jmp
xchg
add
add
mov
popf
mov
movsl
sbb
hlt
sub
mov
outsb
xchg
sarl
fnsave
push
fimull
mov
xor
insl
xor
jnp
ret
xchg
shll
in
mov
lds
xchg
adc
ja
in
je
fidivrl
mov
pop
jb
cmpsl
lock
mov
pop
jge
jb
cmpb
data16
clc
jmp
stc
push
in
cli
dec
cli
lret
xchg
lea
sub
sbb
sti
and
imul
out
idivb
loopne
arpl
cld
pushf
mov
out
mov
setne
inc
mov
ds
ljmp
pusha
sub
jge
aas
ja
pop
jbe
xor
xor
xchg
jns
daa
int3
out
das
ffreep
dec
push
or
ja
test
pop
mov
mov
pusha
push
inc
andl
fidivs
sub
xor
mov
repnz
fsubrp
add
ds
jne
test
pop
fidivl
fsubl
push
cmpsl
outsb
rcrl
roll
out
or
out
lds
add
lahf
mov
jae
bound
adc
mov
xchg
lea
inc
adc
sub
icebp
ja
fnsave
or
pop
push
dec
add
pop
icebp
xchg
xchg
test
push
or
inc
nop
je
or
push
pushf
push
add
and
cmp
cmp
xor
dec
sbb
adc
arpl
pop
mov
mov
outsb
and
lret
pop
pop
fwait
xchg
and
mov
in
mov
loope
in
dec
mov
imul
pop
xchg
mov
add
sar
inc
cmp
movsl
mov
sbb
jne
and
mov
idivb
ret
cmpl
sti
stos
mov
lock
int3
or
cltd
rcrl
pop
mov
xchg
and
pop
sbb
testl
iret
push
jmp
into
lods
and
push
inc
jb
push
mov
cltd
push
daa
jl
test
filds
xor
jb
jecxz
adc
fdivs
testl
mov
ljmp
cmp
jg
loopne
pop
pop
fxch
dec
pop
push
add
adc
sbb
ds
sub
fcomps
mov
fdiv
sbb
rcll
dec
hlt
cltd
addb
test
xor
movsl
lock
fcomi
or
call
test
mov
jmp
loop
mov
popf
stc
jo
inc
sbb
and
into
push
into
popa
inc
pushf
negb
idivb
cmp
or
stc
sti
add
inc
or
and
jg
les
fsubl
sarb
sub
cmp
pop
dec
jl
mov
in
pop
jne
iret
repz
or
adc
xchg
inc
push
inc
into
sub
cmp
inc
add
rolb
cmc
ret
adc
in
dec
mov
pusha
in
mov
idivb
or
scas
test
sbb
and
add
and
leave
dec
outsl
push
ja
mov
sub
psubusb
sti
cmp
mov
lds
pop
and
mul
sub
or
scas
movb
out
daa
xorb
add
mov
sbb
adcl
es
cmp
adc
movsb
aam
cli
inc
fildll
mov
es
adc
sti
pop
push
jl
or
fnstcw
xor
aad
fisttps
mov
adc
pop
xor
adc
or
adc
mov
ror
pop
pop
pop
cld
int
sbb
mov
sub
or
insl
aam
xchg
lea
inc
push
mov
or
pushf
or
mov
adc
jge
lock
enter
lea
mov
testb
shll
les
sti
rcr
dec
sahf
jp
push
adc
push
sub
and
push
jg
repz
pop
cli
hlt
aam
pop
dec
arpl
pop
gs
ret
pop
shl
inc
push
mov
adc
rcr
es
stos
data16
outsl
sbb
mov
mov
add
shlb
insb
sti
fcmovb
dec
hlt
or
pop
test
call
imul
push
mov
in
dec
dec
or
inc
mov
or
jmp
scas
mov
jae
push
loop
fmuls
addr16
mov
inc
adcb
sbb
popf
mov
sub
or
push
cmp
push
lea
mov
lods
mov
xor
clc
jmp
ljmp
sarb
mov
mov
repz
adc
inc
and
xor
je
out
mov
fucomi
adc
aad
ja
dec
call
xchg
xchg
xchg
jne
mov
inc
repz
xchg
add
sbb
out
daa
xor
fildll
mov
adc
xchg
mov
jmp
inc
mov
mov
push
scas
out
sti
sub
into
xchg
imul
cmp
testl
insb
xor
pop
imul
mov
mov
mulb
ret
mov
and
pop
out
mov
or
mul
in
decb
inc
lods
xor
aaa
mov
and
addl
outsb
inc
mov
jbe
jg
stc
xor
out
stc
mov
out
mov
stc
cltd
xchg
repz
ficompl
mov
lret
lods
mov
data16
and
pushl
mov
lea
dec
adc
in
pop
sti
push
mov
pop
pop
into
xor
aad
pusha
adc
nop
clc
ja
repz
cs
mov
shl
push
das
js
add
jmp
mov
ss
pusha
incl
mov
cmc
negl
gs
adc
in
jne
lret
out
mov
push
mov
ror
ficompl
pop
outsb
iret
xchg
lds
and
or
mov
lds
xor
xchg
mov
je
frstor
adc
les
iret
into
mov
arpl
adc
pop
pushf
xchg
outsb
adc
mov
cmc
xor
and
pop
out
pop
fdivrl
pop
mov
and
and
lret
add
jecxz
push
pop
mov
jle
adc
mov
mov
inc
and
xor
aaa
xor
lret
dec
or
jns
mov
push
xor
xchg
gs
lret
sbb
fs
or
mov
jne
pop
div
out
xlat
mov
testb
jo
jecxz
fwait
daa
push
cmp
nop
mov
je
sub
popl
fildl
test
mov
movsb
or
xor
push
fs
jp
push
mov
mov
xchg
cli
push
add
std
repnz
cmpsb
push
inc
mov
pop
cli
push
push
shlb
jp
ds
xchg
rcl
dec
adcb
mov
iret
testb
and
mov
mov
push
into
pop
pop
dec
js
xchg
rorl
sub
dec
aam
and
mov
cmpsb
fldt
xchg
pop
adc
ret
aaa
dec
mov
add
mov
cmp
mov
sub
jle
push
sub
push
shlb
jnp
push
and
inc
push
sub
out
rorb
sub
jl
sbb
sar
mov
sbb
enter
xor
faddp
lcall
scas
cmp
xadd
dec
loop
xor
sbb
pop
stos
repnz
out
cmp
jb
test
int3
outsb
jg
shl
stc
dec
mov
push
xchg
lret
jb
xor
std
jns
repnz
scas
sub
jmp
in
ret
dec
imull
adc
xchg
add
divb
fisttps
sahf
pop
cwtl
or
insb
push
roll
sbb
cmpsb
sub
movsb
repz
test
lock
or
and
cmp
mov
sarb
scas
addr16
adc
leave
pusha
dec
dec
dec
inc
xor
in
js
loope
xor
xchg
xchg
pop
jne
mov
xor
or
test
add
pop
inc
or
ds
adc
adc
daa
xchg
pop
xchg
push
sbb
lock
jbe
rol
outsl
mov
imulb
adc
popa
sahf
inc
arpl
push
into
sub
mov
aam
mov
cmp
cli
inc
mov
mov
andb
and
gs
cltd
daa
mov
repz
add
xorb
dec
xchg
pop
test
test
cli
subb
xchg
dec
rorb
stos
cmp
cmp
fucomi
jbe
shrl
rcrb
add
pop
jecxz
or
mov
and
add
push
push
xor
pop
push
dec
xchg
sub
mov
daa
mov
xchg
bound
repz
xchg
aam
jbe
insl
cltd
data16
das
jecxz
ret
pop
xor
scas
jo
mov
push
fbstp
inc
xor
out
xchg
cs
cmpsl
jno
mov
dec
test
mov
cmp
cmc
push
dec
and
std
sub
xor
je
pop
lcall
dec
imul
js
imul
mov
movsl
inc
mov
cmpsb
cmp
inc
ret
jmp
clc
adc
or
jg
stos
ret
out
mov
test
or
out
sub
stos
rcrb
ja
icebp
imul
or
out
inc
loop
aas
mov
cmpsl
rolb
mov
pop
cld
and
sub
test
call
mov
mov
je
ficompl
xchg
mov
adc
cwtl
fisubrs
imul
or
pusha
inc
dec
sbb
xchg
into
loopne
mov
mov
xor
and
xor
in
aam
popa
and
or
xchg
lds
mov
mov
pop
mov
dec
jo
movsb
sbb
data16
roll
jne
insl
fsubr
mov
mov
pxor
fldenv
cmp
mov
test
push
leave
stos
push
inc
cs
xchg
ds
movl
pop
fwait
out
xor
inc
popa
rcrb
push
or
sub
pop
movsl
cmpsl
and
cmpl
int
insb
test
mov
gs
jae
jnp
push
mov
push
testl
push
aaa
cltd
cmp
mov
lcall
dec
adc
flds
push
cmp
js
or
inc
jge
cmpsl
dec
call
and
adc
popa
inc
sti
fwait
push
jp
and
cmpsl
lods
push
fidivl
repz
cs
addr16
in
cmp
out
pop
xor
xor
add
insb
cs
push
aaa
mov
dec
mov
movb
in
xchg
shl
mov
xchg
jo
mov
dec
dec
das
in
rclb
andl
jnp,pt
mov
stos
pop
inc
xor
ffree
mov
aaa
mov
mov
jo
xor
cwtl
pop
jl
inc
lock
fucomip
ror
xchg
in
sbb
jl
xlat
psrlq
jl
orl
mov
stos
cmp
and
sub
cli
push
popf
in
shld
pop
das
loope
test
mov
inc
inc
cmp
jmp
pop
sub
mov
xor
call
pop
mov
lock
mov
aam
sbb
out
xor
js
out
popa
mov
ljmp
dec
xchg
jnp
jmp
push
mov
fucomip
mov
cmp
ja
mov
cmp
in
insl
pop
sbb
push
sub
cmp
daa
adc
and
dec
shll
jno
jnp
jne
ljmp
repnz
arpl
xchg
stc
sbb
iret
sbb
rolb
mov
in
and
cmp
mov
push
fs
xchg
out
cmp
std
mov
push
aaa
popf
adc
test
push
jne
jmp
stc
mov
into
and
dec
mov
pop
roll
out
aad
fwait
lods
scas
sbb
out
aaa
xor
inc
dec
in
xor
ja
fildl
xchg
aas
dec
fistps
clc
add
sub
push
xlat
pop
ja
rcll
mov
testb
sarl
movl
movsb
push
cmp
xchg
sbbl
lods
push
dec
add
test
and
and
and
clc
sbb
push
sub
jo
outsl
popa
ret
mov
stc
fadds
add
inc
imul
xchg
js
dec
mov
sub
andb
mov
pop
lea
jb
cmc
dec
test
ficompl
cwtl
xlat
jbe
insb
stc
imul
gs
loopne
ljmp
dec
cmp
pop
jae
push
xchg
dec
incb
pop
mov
outsl
push
jbe
mov
rdtsc
cmp
sti
mov
pusha
mov
outsl
xchg
push
xchg
add
sub
addr16
mov
jbe
shl
into
push
les
dec
mov
mov
test
in
aas
xchg
fsubs
idivl
cmp
pop
ffreep
mov
mov
xchg
mov
insl
xchg
add
repnz
mov
mov
or
cli
xor
xchg
push
sbb
nop
sub
lock
sbb
aaa
popa
pop
lods
cwtl
stc
cmp
adc
add
cmp
stc
mov
add
neg
aaa
dec
push
int3
daa
and
add
mov
lret
cli
push
in
ret
jmp
jo
lcall
lret
xchg
push
mov
test
add
clc
jo
popa
aad
inc
mov
aaa
mov
lahf
popf
ljmp
pusha
insl
xchg
out
jmp
icebp
out
xchg
mov
push
shll
pop
inc
lahf
test
sahf
dec
push
ds
adc
cmp
xor
je
subl
popa
push
mov
es
ss
xlat
lods
and
push
xacquire
xchg
xchg
push
or
push
aam
test
shrl
jecxz
cmp
lret
jl
sbb
cmp
mov
mov
mov
inc
mov
mov
mov
mov
or
and
dec
add
mov
xchg
sbbl
decb
in
adcb
sbb
dec
ljmp
pop
int3
sahf
repnz
push
sbb
push
ljmp
mov
sbb
push
or
daa
dec
xor
pmaxsw
cli
mov
mov
lods
into
out
aas
mov
mov
rcrb
out
das
addb
dec
shll
mov
andl
or
clc
sti
stos
mov
xor
loopne
std
mov
out
or
leave
movsb
lret
or
pop
fsubp
mov
inc
outsl
pop
pop
fldenvs
popa
scas
popf
inc
xchg
cmpsl
pop
jnp
cmp
andl
or
sub
push
pop
test
movsb
pop
adc
rcll
lods
push
fdivrs
bnd
mov
jle
mov
mov
dec
fsubs
shr
xor
or
pop
add
push
fcoms
mov
cmc
test
xchg
adc
inc
in
and
lret
add
pushf
xchg
xor
int3
into
loop
pop
and
mov
das
shl
or
dec
dec
jmp
sub
jp
push
cli
or
add
loop
mov
test
cmp
popa
mov
hlt
mov
pop
test
add
loopne
fisubl
cmp
outsb
jb
out
mov
lret
push
ds
mov
add
jle
pop
sbb
repnz
std
mov
in
icebp
ret
mov
leave
or
inc
scas
ss
out
mov
or
fmull
xchg
or
outsl
in
repnz
aad
sbb
dec
js
test
fisttpll
daa
jle
aad
xchg
pop
lcall
les
sbb
pop
push
call
icebp
xor
jne
add
mov
mov
aam
cmp
and
push
dec
mov
pusha
ret
call
inc
inc
adc
mov
int
mov
sbb
mov
stc
push
cli
into
inc
jbe
pop
jno
rolb
hlt
cwtl
lret
cld
and
lea
mul
jg
lcall
inc
js
adc
inc
or
cmp
cmp
cmp
jbe
sub
dec
mov
sbb
mov
jecxz
movsb
enter
or
cltd
cmp
daa
pop
pop
in
inc
int
add
push
stos
pop
mov
inc
mov
push
icebp
jecxz
in
loop
dec
int
push
push
pop
or
dec
mov
jg
icebp
ret
shll
xchg
or
mov
jl
lea
jnp
adc
xor
sbb
les
adc
loopne
scas
lahf
frstor
push
adc
push
mov
or
repz
push
cmp
dec
aaa
push
les
out
inc
rclb
ss
jno
jp
inc
xchg
sbb
clc
xor
lret
outsl
mov
push
mov
int
xor
sbb
mov
ljmp
pop
push
repnz
xor
test
sbb
jp
sahf
sbb
add
pusha
sub
in
shl
mov
nop
cmp
mov
call
ds
cwtl
orb
pop
dec
jmp
mov
dec
mov
aaa
test
push
add
inc
cmp
daa
and
lock
pop
lods
sbb
rcll
aas
cmp
jge
cwtl
add
test
cld
loope
xchg
lds
fmull
sbb
or
jl
xchg
jns
addr16
push
sahf
cmp
xor
ftst
in
jae
ss
mov
ds
mov
mov
cmp
js
or
or
repnz
call
test
mov
sahf
cmpsb
test
mov
add
push
lret
xor
negl
jo
sbb
roll
mov
scas
dec
subb
dec
stos
aaa
outsb
repnz
adc
cmp
xor
xor
insl
push
decl
add
mov
mov
mov
loopne
pop
sbb
xchg
test
push
sub
add
jnp
jge
xor
lods
pop
jmp
mov
mov
cmp
inc
mov
adc
jbe
fildll
cmp
test
imul
lea
neg
jb
lds
iret
or
jbe
jge
mov
cmpsb
mov
mov
loop
or
jo
jnp
jp
movsb
call
jne
nop
loopne
sahf
and
xchg
or
loope
arpl
pop
clc
orl
add
cmc
xchg
test
or
lcall
fstpt
scas
out
push
mov
cltd
in
lahf
mov
jge
or
xor
cli
add
lahf
xchg
int3
ret
addl
push
mov
cmc
pop
and
adc
gs
sahf
push
int
in
dec
dec
cmpsb
xor
insb
or
ds
scas
jg
call
mov
imul
out
test
and
outsb
push
popa
sub
test
loope
jl
es
lcall
xchg
sahf
mov
data16
xor
loope
add
jle
jg,pn
testl
in
mov
je
test
inc
clc
hlt
mov
lds
sbb
inc
mov
cmpsl
push
cld
push
lahf
ffreep
fisubs
and
adcl
clc
test
cmp
xchg
lcall
ljmp
in
movsb
hlt
xchg
popa
insb
ret
dec
jb
loope
mov
cltd
inc
cwtl
lret
bound
inc
outsb
xchg
jle
push
imul
inc
add
jmp
ds
call
mov
fdivl
out
movsl
das
xor
pop
cli
and
daa
inc
test
sbb
and
xchg
xchg
jae
stc
jns
cmc
sub
fiadds
sub
cmc
icebp
movsb
sti
fwait
cli
outsl
push
popa
in
sbb
sub
fisttpl
loope
mov
addl
adcl
push
sti
aaa
mov
inc
jmp
ret
pop
xchg
lret
inc
or
jmp
lcall
std
loope
in
pop
mov
cwtl
pop
enter
cmp
sub
lods
add
and
adc
lcall
inc
leave
fidivrs
add
insb
outsb
lds
or
add
mov
push
mov
sti
das
enter
mov
jp
stc
add
jg
add
push
daa
in
cmp
lock
ljmp
adc
push
loop
cmp
xchg
cmp
xor
mov
les
push
adc
dec
incb
test
pop
movsl
mov
cld
xchg
sahf
jge
lahf
scas
mov
das
and
mov
push
push
sub
fidivrs
pusha
jg
add
in
jns
out
bound
sbb
jl
das
daa
sbb
imull
jecxz
sbb
gs
stc
adc
cmc
mov
cmc
into
pushf
sbb
shlb
ret
mov
mov
mov
mov
mov
fwait
ja
jge
shrb
fcmovne
dec
pop
call
rcll
movsl
lock
enter
mov
xchg
ds
cmc
jl
push
or
test
into
icebp
xor
in
mov
or
bound
cmpsl
lret
sub
jp
mov
add
test
popf
push
lods
add
cmpsl
mov
imul
or
adc
fisubl
sub
rcrb
pop
pusha
test
ret
xor
vzeroall
dec
pusha
pushf
sbb
fnstenv
daa
int3
jle
sub
sbb
ss
adc
nop
push
mov
addr16
hlt
test
outsb
shll
inc
js
and
mov
push
adc
xchg
out
ljmp
push
sbbb
adc
outsl
cmp
addl
bound
fsubl
inc
fmull
filds
shr
lds
mov
movsb
fidivrl
add
jnp
add
xor
mov
outsl
add
inc
mov
dec
mov
pop
dec
pop
push
xorl
adc
jne
fsub
in
mov
ds
xchg
mov
popa
and
push
pop
xchg
in
pop
nop
mov
mov
sub
stos
pop
jae
sbb
sub
cmpl
cmpsb
dec
pop
pop
xchg
addl
xchg
cmp
shll
std
daa
lret
loop
sbb
addl
fs
jmp
test
inc
shl
inc
in
in
mov
stos
je
dec
icebp
pop
lahf
push
data16
xorl
push
cmc
mov
out
pushf
and
fdivl
sub
std
jb
push
rcr
in
xor
adc
lret
mov
push
lods
sub
fiaddl
xchg
push
gs
jge
jnp
jo
sbb
loopne
cmp
rcrl
ss
sbb
dec
pop
subl
mov
repz
testb
mov
mov
test
shl
add
push
inc
push
adc
mov
repnz
jg
cltd
inc
mov
movsl
cld
jo
dec
xorb
je
clc
enter
fstpl
xchg
push
shll
mov
dec
aaa
fs
adc
js
and
rcll
inc
int
jnp
or
nop
les
loopne
cs
inc
mov
in
xor
mov
push
out
imul
push
pop
xor
rorb
clc
jle
pusha
fmull
sahf
mov
or
jmp
in
inc
dec
push
add
fcoml
sbbb
sub
enter
xchg
xor
mov
push
hlt
mov
outsl
test
xchg
fnstenv
jns
xor
movsb
xor
aaa
rorl
xor
fadd
ljmp
dec
jbe
adc
xor
fistps
xorl
insl
adc
add
dec
pushf
pop
in
or
and
stos
adc
rcll
mov
mov
or
add
inc
mov
fdivl
inc
lahf
fadds
imul
mov
aaa
push
fidivrs
mov
cmp
loope
sub
cmp
jl
xor
and
repz
adc
xchg
push
push
jno
jl
dec
pushf
jbe
pop
les
pop
movsb
and
lret
stos
inc
mov
jo
pop
mov
inc
cmp
adc
loopne
in
pop
or
fadds
cmp
adc
stos
sbb
add
mov
push
jae
jo
out
adc
fdivl
decl
mov
jmp
pop
inc
xor
dec
andb
out
ljmp
pushf
xchg
dec
mov
aam
adc
cmp
out
mov
add
xor
inc
filds
pushw
popf
cmpsb
push
lret
call
inc
inc
jmp
cs
mov
sub
sti
pop
in
xchg
imul
dec
pop
push
shl
dec
insl
jge
imul
fcmovu
or
mov
icebp
hlt
xor
mov
fnstenv
pop
mov
jnp
gs
push
test
mov
das
fwait
or
pop
cmp
push
inc
fldenv
das
and
sbb
adc
mov
clc
lds
xchg
mov
test
rolb
scas
shr
adc
jb
sbb
xchg
fisubrs
pop
jb
push
aam
sub
in
push
add
adc
jl
arpl
sahf
divl
aad
loopne
iret
sti
xor
out
rclb
jp
sbb
sbb
mov
push
xor
dec
sahf
loope
dec
jmp
add
lcall
dec
inc
dec
out
fcoms
mov
subb
rclb
push
or
add
dec
fwait
or
or
lea
dec
pop
xchg
lds
mov
pop
cwtl
pop
insb
fdivs
hlt
ss
call
frstor
xor
testl
xchg
stc
fimull
out
push
in
and
dec
loopne
in
hlt
inc
xor
mov
xchg
push
cmp
push
xchg
adc
cmp
icebp
in
loopne
popf
mov
subl
jne
pop
add
fisubl
or
xchg
add
inc
xchg
popa
mov
aad
pop
out
jae
and
mov
push
cmp
iret
ret
push
or
and
adc
cmp
sub
xor
insl
rorl
fs
idiv
test
std
push
mov
scas
pop
mov
mov
xor
adc
push
dec
pop
stc
out
bound
aaa
test
sub
call
push
or
stos
jmp
das
scas
mov
enter
les
adc
jmp
cld
cmp
neg
scas
mov
and
add
scas
jbe
add
in
cmpsl
pop
lds
jae
mov
gs
adc
nop
or
fwait
sahf
xlat
aaa
push
pop
inc
xchg
mov
cmc
adc
bound
mov
mov
adc
mov
dec
lahf
cwtl
sub
hlt
js
les
xchg
pop
mov
dec
mov
test
mov
int3
sbbl
ljmp
imul
mov
pusha
jbe
fwait
mov
jmp
push
sbb
mulb
fcomps
cmp
or
jnp
jbe
pop
jne
mov
mov
rorb
xlat
dec
shr
sub
int3
pop
push
xlat
push
xchg
pop
arpl
inc
xor
cmp
shl
sbb
jp
insb
mov
mov
add
inc
jo
xchg
and
adcl
xchg
fsubs
stos
sbb
mov
pop
inc
jp
mov
rep
fmul
daa
xchg
push
icebp
lret
nop
xchg
stc
or
and
aaa
ljmp
cmpb
loope
mov
inc
pop
or
dec
inc
sub
inc
or
int
imul
repz
jl
pop
testl
daa
xor
fsubrp
in
shrl
mov
xor
js
int
add
ds
push
push
mov
sbb
xchg
dec
repnz
stc
sarb
ljmp
aam
dec
xchg
inc
cmp
bound
inc
outsb
jno
out
add
jno
lea
or
lcall
int
mov
fs
mov
scas
scas
jo
in
mov
inc
sbb
cld
cmp
inc
into
add
adc
sti
data16
push
in
popf
jae
xchg
popf
fs
and
or
cmpsl
mov
adc
fisubl
add
rclb
dec
sub
arpl
pushf
popa
test
andb
sub
mov
push
pop
xor
adc
les
sub
xchg
loop
leave
mov
sub
cmc
jo
out
dec
out
pop
cmovno
mov
dec
aas
test
mov
daa
push
repnz
out
adc
shl
push
jae
cmp
stos
push
stc
push
or
adc
icebp
dec
xorb
fwait
cmp
lahf
fdivp
pop
push
ret
xor
outsb
popf
xchg
pop
push
dec
adc
insl
xor
mov
xchg
jmp
cmpsl
out
pop
test
popa
aad
cmp
adc
jg
dec
mov
xorl
push
add
cmpsl
cmpsl
and
cmc
fwait
and
bound
stc
bound
data16
ud1
mov
and
mov
mov
loopne
mov
dec
outsl
outsb
mov
adc
stc
out
ds
jl
mov
mov
or
mov
cmpsb
mov
xor
stc
testl
push
hlt
jnp
jg
arpl
in
es
loope
push
dec
loopne
fcoml
jnp
mov
add
leave
lcall
jp
test
mov
xlat
cmpsb
scas
mov
jg
fbld
cld
out
mov
sti
pop
push
andb
pop
cld
xchg
subb
mov
xor
in
jg
push
rcrb
mov
sub
push
ss
popf
dec
into
cmp
mov
push
mov
xchg
add
icebp
and
xor
addl
jecxz
or
jns
xchg
scas
leave
orl
daa
xor
out
rcr
repz
lret
dec
shrb
jo
stc
sub
sub
cmp
addl
push
pusha
sar
aam
testl
test
mov
clc
dec
cmp
pushf
push
xor
arpl
xchg
mov
dec
push
testl
decl
sbb
inc
je
mov
mov
int3
subl
fsubs
out
sub
subl
les
stos
scas
lcall
and
add
orl
lods
lret
push
push
push
dec
js
pushf
das
or
gs
stc
imul
arpl
dec
push
sub
or
lea
push
pop
orb
clc
aad
mov
pop
sbb
cmp
js
push
andb
cld
fdivs
popf
outsb
cld
aas
fistps
popa
pusha
sbb
and
ss
pop
lock
push
mov
inc
mov
jns
cmp
movsl
test
or
test
pop
xchg
test
pop
iret
inc
loopne
shrl
mov
mov
out
xchg
ja
call
ret
mov
sub
mov
lret
mov
push
das
pop
fs
sub
rol
dec
movsb
stos
aam
cmp
add
pop
test
mov
mov
cli
jge
mov
roll
nop
xchg
pop
jbe
mov
cmp
in
xchg
dec
lods
bound
jl
ds
push
xchg
adc
xchg
push
push
std
pop
cltd
xchg
stos
dec
lahf
xchg
movzbl
or
pop
lods
sbb
inc
cmc
repnz
cmp
sub
out
adc
and
nop
mov
and
aad
aas
cmp
pop
jne
divl
sbb
repz
fsub
out
filds
or
adc
and
mov
xor
sub
mov
xchg
or
lret
jo
add
dec
lods
les
cwtl
rsm
imul
adc
mov
loop
xor
inc
fwait
jne
push
pusha
or
std
stos
and
call
jecxz
lret
dec
jbe
clc
xlat
sar
fs
push
mov
repz
fbstp
cmc
pusha
in
int3
rolb
mov
test
cmpsl
es
push
xchg
pop
xor
jl
or
negb
xchg
int
cmc
pop
push
cwtl
push
cmp
out
out
mov
pop
add
jbe
imul
cmp
addb
movsb
pop
cmc
test
mov
pop
es
ret
ss
int
mov
mov
stos
dec
movl
xor
arpl
outsb
js
adc
push
cmp
mov
lret
mov
repnz
inc
int
adc
xorb
and
jl
xchg
or
inc
and
dec
cs
popa
cld
push
mov
cmp
inc
frstor
lock
aas
and
pop
jge
lds
rorl
ret
imul
filds
loop
lds
xor
jg
mov
lods
add
jb
lods
jmp
movsl
adc
iret
clc
xchg
sub
scas
test
pop
dec
push
cltd
adc
mov
adc
sahf
popf
push
test
pusha
outsb
and
add
test
sti
in
pop
mov
fwait
dec
xor
out
sub
push
loope
fsubrs
mov
xchg
jmp
lahf
jns
jbe
jge
sbb
pop
jb
add
mov
lods
and
js
repz
sub
dec
data16
mov
popf
pop
inc
xor
scas
mov
sbbl
orb
pop
adc
mov
gs
movsl
out
in
int3
repz
pop
push
daa
je
sbb
xchg
inc
sbbb
sub
mov
and
mov
insb
jne
jno
add
add
orl
ds
in
mov
fcmovnu
fdivrs
pushl
das
cs
xor
inc
mov
clc
daa
adc
enter
cmp
pop
lret
dec
push
inc
mov
sbb
mov
movsl
je
mov
fsts
mov
pop
push
add
inc
mov
lds
and
in
push
aas
sbb
push
cli
dec
xchg
fisttpll
cs
xchg
lahf
push
dec
rcll
xor
movsb
pop
xorb
cmpsb
mov
lods
inc
xchg
push
mov
sbb
call
je
iret
das
dec
cmp
fbld
imul
xorb
mov
and
sbb
les
mov
leave
jb
sub
mov
lds
ficomps
push
lds
lock
dec
lret
mov
dec
or
dec
rcrl
lock
movsb
sub
add
xchg
scas
push
jmp
push
test
mov
or
pop
std
faddl
das
cld
push
movsl
icebp
add
icebp
cmp
jo
mov
enter
sbb
sbb
mov
insl
or
inc
xchg
xchg
sub
mov
cmpsb
popf
test
inc
xchg
inc
sub
xchg
sbb
mov
pop
jl
add
lret
cmp
lods
adc
loopne
out
dec
mov
outsl
scas
add
push
mov
pop
inc
inc
mov
xchg
fildl
jle
xchg
pop
and
addr16
popa
lods
pop
mov
sub
inc
mov
mov
xchg
inc
add
sub
jmp
push
xor
mov
lds
jge
xchg
mov
testb
cmp
daa
data16
xor
or
mov
push
in
and
pop
or
push
jmp
sub
insl
mov
add
loopne
cmp
and
rolb
mov
inc
xchg
repz
insb
and
dec
sbb
mov
fsubl
mov
icebp
or
cmc
lret
mov
insl
das
xchg
filds
jmp
jno
sbb
cmpsb
hlt
sub
fs
xchg
and
ja
subl
mov
andps
or
push
adc
dec
dec
xchg
cmp
lahf
pop
or
cmp
inc
sti
lret
stc
lret
imul
sbb
jecxz
das
lret
sbb
xor
mov
mov
pop
push
out
mov
sub
stos
jae
jecxz
ljmp
inc
pop
icebp
mov
jle
inc
dec
stc
sbb
shrl
push
stc
push
cmpsl
iret
sub
mov
rcl
or
mov
outsl
lods
sbb
xchg
jle
mov
pop
not
adc
push
popf
stos
lret
pop
aaa
mov
in
sarl
loopne
push
and
std
insl
jae
push
and
and
fidivrl
jb
sub
xchg
push
xor
je
adc
out
add
adc
cmpsl
and
loope
xchg
xor
inc
out
jo
shr
adc
mov
xor
scas
aas
jp
sbb
outsl
jl
stc
ljmp
pop
ljmp
push
ljmp
jecxz
sub
cmp
stos
and
inc
sarl
jne
pusha
dec
push
inc
xor
sti
ret
mov
inc
bound
loop
xor
xor
lock
adc
bound
loop
aad
push
in
mov
rcll
aad
in
pushf
mov
mov
test
cmp
std
push
dec
push
jg
jmp
mov
daa
scas
iret
dec
mov
mov
mov
aam
pop
jge
movsb
mov
push
adc
xchg
test
test
mov
loop
seta
xchg
faddl
hlt
fdivr
adc
fnstenv
xor
cltd
push
cltd
push
add
imul
rol
jge
repnz
loop
xor
popa
shll
cmp
aaa
lea
shrb
shl
in
shl
sbb
in
sub
cmpsb
mov
mov
repz
mov
lds
push
in
mov
add
fmull
out
adc
imul
push
lock
fisttpl
add
lcall
lcall
lock
cmpsl
or
test
sbb
stc
cmpb
pop
pop
pop
cltd
call
inc
and
sbb
clc
aas
mov
pop
aas
iret
lds
jle
aas
inc
shrb
dec
add
cmp
inc
mov
sarb
push
cld
inc
cmp
cbtw
xlat
jg
or
iret
cmp
inc
rorl
sar
dec
inc
sub
icebp
push
push
sbb
push
cmpsb
sub
adc
mov
pop
repnz
daa
mov
in
mov
sti
lock
xchg
mov
aas
xchg
fwait
test
int3
aad
cmp
cmpsb
or
rcr
loopne
mov
les
xor
jg
adc
outsb
sahf
xchg
pop
scas
icebp
mull
mov
inc
dec
movsl
inc
xor
mov
push
shlb
out
dec
sbb
imul
cmc
sbb
xchg
adc
mov
fldl
sub
push
inc
ficoms
repnz
xor
addr16
pop
repnz
xor
or
push
xor
shl
dec
mov
adc
add
lea
add
stos
jecxz
mov
ljmp
ja
push
sub
jl
cmpsb
push
xchg
int
lret
xchg
jp
fcmovu
mov
mov
mov
xor
ror
adc
std
and
movsl
sbb
ja
sub
clc
xchg
ficompl
and
push
loop
loop
popa
data16
cmpl
or
pop
push
mov
mov
cmp
cmpsl
out
pop
loopne
or
sub
mov
mov
mov
or
call
hlt
cwtl
adc
push
xor
out
or
je
int3
andb
inc
xchg
in
xchg
push
dec
outsl
mov
inc
ret
int3
out
rclb
adc
mov
add
cmp
xchg
mov
pop
mov
stc
bound
push
div
pop
mov
mov
mov
or
and
bound
mov
xor
xor
insl
data16
dec
add
mov
call
sub
lods
or
mov
insb
addl
push
jg
xor
mov
add
test
mov
int3
add
cmpsb
inc
pop
iret
cs
dec
jg
sub
mov
scas
call
dec
imull
pop
cmpsb
fdivr
inc
cwtl
bound
sub
cmp
xchg
dec
ficoml
and
push
jno
lahf
push
cmpsl
sbb
push
aam
xchg
pop
outsl
ret
daa
jbe
adc
jb
sbb
jge
pusha
ljmp
pop
pop
add
loopne
pop
stos
push
pop
pop
cmp
ja
fisttpll
pushf
xchg
sti
test
popf
sbb
scas
push
cmc
stos
test
push
xchg
lods
inc
push
mov
mov
jg
cmpb
dec
or
xadd
sbb
popf
stos
mov
xchg
xchg
ret
cli
push
shll
jnp
std
in
push
out
shr
or
lock
fstpt
cmp
punpckhdq
test
inc
or
and
stos
cmpb
lahf
dec
mov
loop
mov
pop
cli
jp
xchg
sub
int
mov
mov
sbb
lret
cwtl
mov
outsb
mov
adc
xor
ja
movsl
nop
adc
addr16
adc
pushf
movsl
pop
xchg
stos
out
jns
in
and
arpl
inc
jge
cmp
test
fsub
mov
jo
push
jno
adc
clc
add
aad
sti
mov
mov
in
movsb
jo
lds
imul
into
lods
repz
push
mov
es
and
push
push
stos
mov
mov
pop
jne
inc
jmp
push
add
ret
repnz
mov
push
stc
shlb
push
fdiv
jmp
imul
test
cmp
int3
mov
xchg
shr
inc
jb
add
sub
test
clc
addr16
and
ret
in
jbe
mov
movsl
stos
mov
mov
dec
push
stos
adc
mov
inc
loopne
icebp
dec
mov
sbb
xor
inc
cmp
and
sbb
and
loopne
or
and
xor
jne
or
add
clc
xchg
xchg
insl
cmp
cmp
enter
xor
popa
mov
int
xchg
push
es
test
mov
inc
test
ds
adc
insb
mov
icebp
sbb
sbb
mov
ds
sub
jg
add
sbb
aam
ljmp
mov
and
cmp
sub
lahf
mov
lods
or
pusha
push
fiadds
add
cmpsb
mov
mov
das
jno
lods
push
or
mov
mov
xchg
jp
push
test
andb
das
pop
lret
icebp
pop
nop
stc
mov
mov
cmp
loop
movsl
xchg
out
scas
push
movsb
sti
fstps
jecxz
sbb
xchg
cmpsl
pop
mov
daa
test
sub
fmull
pop
insb
dec
xor
mov
jbe
push
jge
jp
aas
pop
push
xchg
lock
mov
and
into
out
ror
xchg
cmc
fcmovnu
out
or
inc
mov
shll
and
ljmp
dec
jl
lret
mov
je
mov
aam
jge
leave
mov
rcrb
andb
push
jne
jno
cmpsb
adc
add
shlb
lcall
mov
psubd
cwtl
inc
jle
ljmp
pop
call
sbb
jp
jae
stos
xchg
push
or
xchg
fsqrt
test
mov
mov
das
rcr
push
dec
xchg
xchg
jl
inc
gs
sbb
jmp
cmp
negb
insb
xchg
jg
xor
shll
pop
push
pop
mov
stc
adc
andb
mov
fdivrl
testb
rcpps
shrl
dec
push
loopne
xchg
xchg
rcl
mov
cmp
jp
jo
mov
pop
ficomps
xchg
sbb
xor
cld
mov
inc
and
mov
fisubrl
adc
xchg
adc
mov
xor
test
mov
fisubl
dec
xchg
in
inc
push
and
or
xor
adc
les
dec
cmp
or
sub
aaa
mov
push
add
xor
stos
testl
rolb
pop
push
out
mov
sbb
xor
sbb
lock
push
pop
lahf
stos
ret
data16
mov
pop
fisttpll
leave
in
test
shl
mov
inc
pop
mov
add
popa
pop
xchg
push
cltd
jle
repz
subb
lahf
int3
bound
mov
mov
shrl
iret
add
cmp
mov
xor
push
xor
or
mov
sub
mov
xlat
lds
cli
and
subb
sahf
in
dec
clc
sbb
in
cmp
cmp
cli
sub
pop
push
jle
mov
xchg
negb
imul
into
mov
rcll
lock
clc
daa
pop
and
mov
lds
andb
push
xchg
adc
inc
pop
and
movsl
adc
and
inc
movsl
idivb
xchg
push
js
xor
add
xchg
sahf
add
shlb
pop
rorl
and
je
add
adc
lds
push
sbb
jb
jb
sysexit
dec
mov
sub
jge
sbb
mov
cmp
pop
arpl
xchg
jo
xor
add
pcmpgtb
inc
sti
xor
lock
adc
je
movsb
cmpsb
xchg
pushf
out
bound
fndisi(8087
fcomip
push
fmull
push
adc
sbb
mov
or
mov
cmpl
pop
popa
push
fimuls
adc
sbb
mov
dec
into
mov
pushf
sbb
aas
sub
push
daa
in
insb
cwtl
roll
sbb
mov
rcrb
and
int
push
mov
js
js
mov
insb
dec
loop
ror
push
fwait
mov
scas
mov
fldl
mov
mov
mov
mov
mov
push
iret
mov
das
xchg
push
mov
and
lods
in
sbb
test
sbb
and
mov
inc
cmpl
test
dec
mov
dec
fwait
loope
push
movsl
sub
fidivrl
frstor
popf
test
aam
in
or
shl
outsb
or
xchg
push
dec
mov
test
int
dec
sub
mov
sbb
rcrb
in
rdpmc
adc
xchg
mov
mov
in
adc
fdivrl
adc
shl
push
push
push
or
fs
iret
pop
dec
mov
adc
jns
fisttpl
lahf
add
lea
sub
add
adc
insl
andb
mov
scas
clc
std
cmp
aad
gs
enter
mov
movups
rorl
mov
jbe
scas
add
movsl
push
push
mov
mov
mov
and
mov
mov
je
lahf
add
jp
jae
push
lcall
adc
add
mov
mov
sbb
inc
xor
fisubrl
mov
mov
pop
cmp
mov
mov
lds
mov
mov
shll
or
cmp
arpl
push
cmp
adc
popa
dec
mov
rep
pop
mov
and
mov
pop
scas
xor
testl
cmpl
xlat
decb
push
sbb
in
pop
insb
jb
inc
out
call
orb
pop
pop
xor
testb
clc
ret
movsl
mov
jns
or
cmpsl
jo
aas
aam
pop
jb
mov
lret
jecxz
cld
mov
jne
mov
not
cmp
mov
xor
loop
inc
mov
sbb
in
jmp
jp
outsl
mov
pushf
leave
sub
test
inc
out
cmp
and
aad
lds
filds
repnz
in
inc
inc
lret
sbb
test
pop
xchg
xorl
aad
shll
mov
mov
push
mov
or
fcompl
mov
mov
jne
in
add
out
dec
jnp
cmpsl
ljmp
fcomp
jno
test
push
xchg
inc
fisubs
andb
sahf
add
cmc
daa
inc
xchg
pop
xor
jl
lcall
rolb
mov
idivl
arpl
xchg
xchg
movl
adc
rclb
mov
dec
xor
es
pop
cmc
dec
push
call
cmp
ja
or
cli
jbe
inc
divl
hlt
ja
mov
stc
call
pop
pop
movsb
push
adc
mov
jo
add
push
sub
pop
outsb
int
dec
addb
rorl
mov
adc
incb
push
cwtl
jg
arpl
adc
dec
dec
imul
loopne
mov
in
fisttpl
repnz
cmpsl
push
xchg
daa
xor
cmp
adc
add
test
mov
movsb
addr16
imul
repnz
and
xchg
dec
repz
mov
mov
addr16
dec
dec
imul
daa
and
inc
cmp
cmpsb
sbb
ja
orl
dec
add
pop
dec
cltd
mov
mov
inc
sub
xchg
mov
push
das
insb
push
xor
adc
jno
orb
push
cs
mov
sbb
jne
push
jae
xor
or
mov
int
adc
add
jl
mov
mov
in
shrb
dec
shll
popl
imul
dec
adc
mov
xor
sti
scas
fstl
xor
sbb
ror
leave
lret
outsl
pop
sti
mov
add
jmp
cmp
jb
fisttpl
std
pmaddwd
jle
addb
iret
je
test
aad
cmpsb
xor
or
dec
ljmp
push
and
push
repnz
sbb
stos
sbb
mov
addr16
les
mov
loope
xchg
es
push
sti
sarb
fsubs
rcrb
xchg
and
mov
loope
clc
pusha
fdivrs
adc
mov
in
dec
repz
or
sbb
cs
xchg
xor
dec
and
testl
imul
adc
cmp
or
inc
mov
xor
xchg
lods
inc
sub
mov
sahf
movsb
jbe
inc
add
nop
xchg
lcall
jns
jo
pop
lret
int3
push
cli
int3
sti
xchg
mov
test
das
sbb
shrb
lret
mov
out
jp
xchg
imul
pop
sbb
mov
cmp
stc
int3
fdivrl
lock
or
mov
ret
pop
add
and
fdivrl
cmp
orb
pop
nop
adc
or
loopne
pop
dec
push
scas
pop
dec
jns
enter
xchg
scas
int
int
lods
into
push
xorl
push
lods
and
lret
inc
fildl
jno
sbb
mov
hlt
rcrl
xchg
arpl
orl
loopne
mov
jl
pop
mov
pop
push
or
aad
pop
cmp
pop
shrb
jae
outsb
daa
mov
push
lods
mov
outsb
hlt
lcall
in
gs
mov
add
cmp
das
mov
cltd
adc
subl
out
or
mov
cmp
mov
stc
push
xor
arpl
subb
inc
add
xchg
shlb
jmp
and
mov
and
into
dec
outsb
mov
sbb
sbb
jbe
scas
stos
out
ret
hlt
or
mov
popa
and
jnp
inc
or
and
jg
insb
cs
mov
je
push
or
faddl
mov
pop
aad
sub
dec
xchg
popa
jmp
jo
aam
push
and
jl
xor
pop
scas
and
out
lret
pushf
stos
icebp
mov
mov
jbe
inc
nop
xlat
inc
xlat
fdivp
notl
dec
jle
lcall
inc
popf
add
loopne
nop
daa
lods
in
mov
push
jle
jl
lret
pop
ljmp
jo
clc
scas
ljmp
inc
pop
aas
lahf
outsl
jb
xor
xchg
daa
clc
popf
pop
stc
in
cmp
test
call
repz
sbb
nopl
pusha
cmp
inc
fnstenv
es
fcomip
call
adc
mov
push
jp
jnp
add
cltd
stc
movsb
mov
ret
jbe
outsl
shlb
fsubl
mov
xchg
rclb
out
pop
mov
dec
les
pop
nop
mov
add
stc
les
cmpl
mov
mov
pop
lds
clc
dec
in
mov
mov
and
cltd
popa
fcmovnb
push
sahf
rcrl
pop
add
mov
adc
mov
fcoms
xlat
repnz
push
xchg
cmpsb
mov
cmc
adc
idivb
pop
outsl
xchg
cmp
mov
lret
pusha
dec
imul
inc
adc
stos
lcall
cmp
jmp
lea
mov
cld
lcall
mov
loopne
and
ret
push
or
je
xchg
into
sbb
xchg
xchg
or
bound
mov
jg
dec
js
inc
shll
mov
lods
mov
aam
xchg
or
xchg
lods
sti
sub
loopne
lds
xchg
aad
or
int3
push
dec
arpl
in
or
adc
add
loopne
adc
adc
push
mov
mov
lret
mov
out
sub
jbe
xchg
push
dec
or
lea
cmp
dec
mov
aaa
cmc
lods
xor
push
mov
sbb
mov
fidivs
push
pop
add
rol
mov
mov
adc
push
movsl
add
dec
mov
aam
jl
call
mov
jae
sub
jno
pop
push
leave
imul
mov
dec
pop
std
push
js
and
xchg
inc
jge
and
fcoms
addl
arpl
outsl
add
adc
cmp
sbb
jb
xor
lods
in
dec
xchg
cld
loope
or
aam
mov
xor
daa
or
dec
adc
mov
call
fisttpl
mov
into
pop
outsb
scas
mov
fsubrl
das
mov
pop
xchg
sub
cmp
mov
pop
js
popa
ficoml
lea
sbbb
push
mov
in
lds
adc
cmp
xchg
in
sub
setp
in
xchg
loope
cltd
mov
cmp
outsl
pusha
adc
push
jge
pop
gs
je
inc
data16
imul
or
cmp
cmpsb
jbe
cmp
xchg
arpl
icebp
lock
mov
push
push
add
int
xchg
fmul
push
pop
sbb
jg
mov
inc
mov
insb
mov
cmp
aam
or
push
jge
test
push
lahf
es
push
sub
mov
push
add
sub
mov
popf
mov
sub
xchg
test
xor
fnstenv
lods
ds
les
icebp
negl
push
push
jne
imul
dec
sub
loopne
push
xor
push
imul
sbb
push
dec
or
mov
mov
dec
pop
or
push
or
stos
lods
in
push
insl
dec
fbld
xor
xor
shll
inc
cltd
ficompl
pmullw
pop
inc
cmp
test
dec
jns
push
sub
imul
js
inc
pop
mov
call
jle
ret
xor
mov
dec
pop
ret
mov
imul
cltd
add
or
sbb
jnp
cmp
je
pop
mov
js
mov
addl
xchg
push
pop
fmulp
pushf
cwtl
lds
mov
leave
fst
jnp
mov
arpl
frndint
pop
lods
add
cmpsl
aad
repnz
dec
cmp
mov
or
sbb
nop
fdivr
rcll
xor
xchg
insl
push
popf
gs
rorl
xor
cmp
nop
ror
adc
jge
xor
pop
nop
lret
fsubp
in
sub
sbbl
mov
or
push
push
mov
andl
push
xor
ds
call
mov
mov
sub
or
js
sbb
subl
pusha
push
aas
lods
aas
mov
mov
sbb
push
or
cld
lahf
daa
ret
dec
xchg
scas
mov
push
xchg
pop
lds
pop
aas
mov
inc
nop
fsubrp
mov
ficoms
lret
push
mov
pop
mov
repz
das
pop
sub
push
cs
xchg
loopne
cmc
push
pop
mov
dec
fnsave
mov
testl
mov
sub
inc
sbb
pop
dec
add
mov
pop
pop
sub
push
dec
jne
push
pop
addl
gs
lret
mov
dec
fbstp
inc
fxch
adcl
xor
sbb
push
repnz
scas
fs
inc
sbb
push
and
sub
addr16
out
xor
les
dec
mov
and
pop
lret
mov
jp
or
movsl
sub
out
sti
sub
test
add
lock
outsb
addl
mov
cmpsb
adc
xor
pusha
push
inc
mov
cmpsb
mov
mov
iret
adc
jmp
jne,pn
imul
add
xchg
repnz
or
inc
sbbb
cmc
lock
stos
xor
pop
adcb
out
stos
int3
int
or
popf
aaa
push
cld
xchg
push
addb
add
test
repz
push
cmp
dec
lds
cmpsl
sub
jb
fwait
lds
out
fsubrl
repz
cli
sub
jnp
lods
pop
fsubrs
sbb
mov
imul
loop
lods
lahf
dec
in
xchg
or
ret
iret
add
dec
mov
xchg
or
sbb
loope
scas
cmc
push
aaa
adc
pop
push
adc
out
aaa
adc
call
mov
mov
dec
or
pop
leave
rcr
rorb
add
jle
andb
pop
inc
sahf
vcvtsi2ssl
js
push
aam
out
orl
or
xchg
add
or
shl
arpl
sbb
sub
in
add
cs
add
mov
and
fimuls
sub
hlt
sbb
pop
cmpsb
push
gs
roll
pop
sbb
inc
arpl
cwtl
adc
ficoml
dec
orps
inc
and
jmp
shlb
cmp
cmp
mov
repz
xlat
movsb
sub
xchg
subl
xchg
dec
and
xchg
pop
xor
fimuls
adc
cwtl
fmul
repnz
jmp
aam
mov
dec
roll
mov
ds
mov
insb
xchg
popf
mov
dec
push
lahf
sti
repnz
jg
xchg
mov
lcall
mov
rcrl
mov
inc
or
movsl
mov
pop
add
roll
clc
dec
js
mov
lock
test
loop
and
cwtl
repnz
dec
cltd
lret
sbb
addr16
dec
aam
pop
lds
xor
and
pop
shlb
jg
jne
popa
loopne
mov
mov
cmp
popa
xor
adc
cli
inc
jbe
ucomiss
cmp
or
pop
push
mov
lock
dec
mov
rcll
ds
mov
aas
sar
sbb
sbb
sub
popf
sub
push
js
inc
mov
push
cvtdq2ps
pop
leave
fidivrs
cmp
mov
lea
rcll
outsl
cmp
jl
pop
movsb
dec
cltd
loope
jmp
fsubrs
push
cs
mov
add
xor
clc
cltd
mov
mov
jp
inc
sahf
mov
inc
mov
sub
mov
and
fmull
inc
pop
in
cmp
popf
loop
push
dec
push
out
dec
xor
ret
imul
push
pop
shrl
cmpsb
cmp
repz
cwtl
xchg
pop
fldl
iret
daa
mov
outsb
out
adc
add
js
sbb
aaa
adc
jo
add
popa
add
xchg
xchg
mov
sbb
mov
fcoms
sbbb
push
in
pop
sub
pop
adc
outsb
test
cmp
fsubrs
rcr
repz
lea
movq
fwait
push
int
leave
cmp
addr16
repnz
shll
shrl
ficomps
sub
dec
jmp
lods
push
dec
sub
cmp
aad
dec
jbe
dec
pop
xor
dec
push
pushl
and
jns
lods
jne
xor
sub
rol
mov
cmpb
popl
inc
push
stos
jne
mov
xchg
in
dec
mov
add
mov
nop
push
shl
fists
rcll
shl
test
xor
cmpsl
pop
jl
mov
mov
fcomip
adc
add
flds
xchg
sub
push
sti
xchg
lret
lea
and
enter
arpl
pop
inc
push
jne
cmp
loopne
lock
ret
aaa
dec
repnz
je
xchg
push
push
jns
adc
lods
pop
lret
xchg
xchg
loope
ja
fucomp
xchg
jp
mov
or
xchg
push
dec
push
jb
icebp
sbb
out
jb
lea
lods
adc
lea
inc
cmp
popf
adc
pop
add
jmp
cmp
cmp
insl
pusha
sarb
mov
sti
cmc
idivl
xchg
andnps
popf
insb
aas
or
xorl
inc
adc
test
mov
cmp
leave
mov
adc
cmp
and
xor
jle
xorb
sbb
pop
and
pop
mov
cmpsl
insl
pop
pop
fnstsw
sti
jle
sub
call
pop
cmp
dec
xchg
dec
cmp
int3
mov
stc
or
jo
push
pop
mov
push
add
sub
mov
loop
jno
stos
shrl
frstor
out
out
sub
mov
inc
mov
sbb
pop
push
or
jecxz
shll
jmp
mov
jmp
in
jne
sbb
dec
mov
imul
mov
js
sub
lds
mov
icebp
out
int
cli
sub
dec
dec
xchg
roll
pusha
rcll
adc
mov
xorl
ss
mov
bound
adc
sub
xor
sub
lds
call
dec
mov
cmp
inc
mov
mov
mov
data16
insb
addr16
pop
sbb
pop
pop
int
mov
insl
cwtl
ror
or
add
mov
shlb
jnp
in
xor
daa
xor
in
mov
movsl
insb
xor
sub
jge
sub
mov
addr16
mov
adc
xor
int3
xchg
mov
ret
lea
jnp
mov
mov
and
dec
xor
mov
cmp
cmp
cmp
sahf
cli
mov
dec
lahf
jne
rcll
mov
dec
dec
cwtl
cmp
mov
xchg
mov
outsb
pop
add
lcall
js
mov
push
push
mov
rcll
jbe
mov
testb
and
mov
push
fisubl
mov
push
popf
test
sti
imul
mov
inc
pop
ss
icebp
leave
dec
jl
pop
jmp
push
add
int
mov
or
stc
in
push
sbb
or
push
xor
cmc
xor
cmp
subl
fnstcw
lds
das
rcll
out
jbe
popf
out
les
lock
ret
std
rcll
inc
lret
and
xchg
cli
int3
xchg
xor
fsub
xchg
test
cmpsl
mov
pop
icebp
pop
addr16
mov
pop
js
xor
dec
mov
lret
xchg
push
dec
inc
test
dec
outsb
push
and
mov
notl
mov
dec
mov
in
test
add
enter
jno
jns
mov
mov
and
cmp
lahf
sbb
rorl
push
inc
jb
pop
lahf
mov
sbb
and
jmp
inc
add
dec
daa
sbb
orl
mov
ss
cwtl
xchg
jbe
cmp
in
inc
pop
ja
xchg
cmp
xchg
or
std
lods
jmp
in
aad
and
push
pop
ds
lods
mov
clc
mov
addr16
imul
dec
or
jmp
push
mov
out
mov
loopne
mov
pop
test
pop
fildll
mov
adc
sub
mov
arpl
cmc
mov
mov
popa
sbb
fidivl
push
or
dec
jmp
mov
shll
sub
mov
scas
int
push
cmp
cld
cmp
pop
sahf
push
nop
mov
cmc
pop
mov
cmpb
imul
push
inc
mov
stos
pop
outsb
mov
pushf
ss
mov
xor
xor
sbb
mov
sub
jb
xorb
imul
xor
mov
out
mov
lea
lret
adc
mov
negl
cmp
push
push
sbb
mov
push
lahf
nop
outsb
xor
mov
xorb
pusha
push
adc
xchg
iret
insb
es
loopne
inc
lock
scas
xor
pop
cwtl
lcall
pushf
xchg
fdivrl
fucomip
icebp
daa
inc
pop
push
lods
cmp
add
fs
test
xor
rol
and
push
inc
fdivp
mov
jp
add
cmp
rorb
pop
les
mov
jp
daa
add
and
fcmovb
sub
cmc
nop
push
loop
ret
mov
mov
cmp
adc
cmpsl
or
pop
lret
pop
fcomps
mov
scas
inc
mov
div
push
mov
cld
das
enter
das
aad
fidivl
mov
clc
pop
pushf
xor
xor
outsl
ds
dec
fcmovnb
dec
pop
add
adc
push
jbe
xor
xchg
call
fstpl
sub
push
mov
notb
fsts
pushf
xchg
cmp
lret
cmpsb
scas
or
ljmp
bound
cmp
mov
xchg
das
cmp
decb
mov
dec
popa
jb
push
pop
ret
repnz
add
push
mov
fs
inc
jp,pt
jmp
test
lahf
aam
in
leave
xchg
push
push
inc
push
mov
xorl
push
gs
cltd
jmp
adc
and
jnp
outsb
es
pushw
fwait
nop
xlat
test
popa
loop
fiaddl
int3
stc
push
cmp
sub
repz
loop
add
pop
inc
cmp
inc
scas
or
mov
test
lds
pop
dec
cwtl
pop
fwait
into
rcl
shrb
jnp
repnz
aas
xchg
jae
dec
insb
mov
jno
pop
hlt
sbbl
lock
cwtl
loopne
mov
and
pop
loope
jge
push
pop
clc
mov
roll
jne
mov
mov
outsl
jo
hlt
cmp
mov
popl
dec
fstl
ud1
pop
dec
jmp
imul
xchg
divb
sub
sub
test
or
les
std
xchg
ret
dec
inc
mov
cmp
mov
jb
ljmp
and
in
sub
push
scas
jno
lahf
mov
push
mov
ret
out
lret
addr16
cmp
ret
stos
nop
push
pop
jg
andl
or
sub
lods
lahf
gs
push
daa
push
or
push
add
pop
addr16
inc
je
jl
sbb
pop
sub
cmp
mov
dec
popa
xlat
sbb
jb
cltd
and
adc
pop
mov
xchg
push
mov
dec
xchg
iret
sarb
sub
fs
pop
mov
rcr
dec
and
pushf
sub
fnstcw
daa
scas
xor
push
jmp
mov
mov
inc
cmp
stc
addr16
jmp
xchg
insb
adc
cmp
or
push
push
pop
adc
pop
into
inc
mov
inc
stc
mov
lods
pmulhw
mov
movsb
jno
roll
out
loop
adc
fisttpll
pop
xor
push
loop
movsl
xchg
mov
scas
sub
mov
xor
push
fidivrs
sahf
into
fbld
dec
xor
dec
add
sbb
cmp
push
dec
jmp
mov
jmp
mov
in
push
leave
push
int3
sbb
jl
in
in
xchg
jne
stos
xchg
add
lods
std
rcl
loope
and
mov
mov
mov
es
dec
pop
inc
ds
aad
and
shll
insb
test
adc
test
in
jne
jno
fadds
and
out
mov
add
adc
orb
insb
scas
int3
pop
sbb
fdivrl
adc
adc
mov
mov
andb
iret
jae
pop
mov
inc
push
jae
iret
add
mov
jmp
shl
in
mov
mov
test
movsb
cltd
aam
cmp
pop
and
movsl
xor
outsl
mov
bound
xchg
inc
push
rcrl
ret
or
adc
push
cs
jle
push
jbe
int3
or
mov
stc
xchg
sarl
adc
xlat
aam
dec
test
inc
arpl
stos
jo
mov
inc
mov
call
addb
and
out
leave
mov
adc
repz
fnstenv
and
xor
adc
xor
mov
in
fnstsw
cmpsl
xor
inc
jo
pop
sub
push
divl
mov
iret
hlt
jl
add
jno
pop
add
out
rorb
and
out
mov
push
mov
rcl
mov
popf
or
hlt
test
push
scas
and
test
pusha
add
or
repnz
push
call
test
jo
cmp
mov
dec
push
push
in
in
push
int
imul
stos
push
mov
inc
shrl
dec
daa
sbb
push
into
add
push
icebp
pop
aad
sbb
pop
sub
jmp
sbb
fnstcw
mov
ret
inc
into
push
dec
xor
mov
pop
mov
jmp
jecxz
aam
adc
mov
cmpsl
out
ret
and
adcl
xor
adc
cs
rol
jbe
lds
test
lds
mov
js
xorl
mov
ret
jl
cmp
adc
cwtl
bt
lahf
shr
sub
in
cld
pop
das
incl
xlat
dec
fldenv
test
testb
or
cli
scas
mov
jp
mov
pushf
push
int3
dec
lods
popf
subb
sub
out
adc
mov
inc
ret
daa
ja
dec
ss
dec
sbb
dec
pop
sbb
sarb
inc
stc
daa
sbb
bound
cwtl
cld
push
fsubrl
push
adc
sahf
pusha
and
or
lea
mov
loopne
mov
add
or
pop
jmp
jnp
leave
cld
dec
push
adc
jne
xlat
jo
loope
sbb
mov
sbb
repnz
dec
pop
push
out
cs
std
pop
dec
add
pop
jnp
into
add
push
cmc
push
leave
clc
sarb
stos
inc
dec
jle
stc
fdivs
lahf
mov
out
mov
lret
ljmp
jno
pop
add
xchg
push
push
pop
pop
xor
mov
nop
mov
aam
in
mov
push
dec
and
out
cltd
jl
or
cli
sbb
mov
aaa
mov
dec
ficompl
mov
jbe
adc
daa
pop
mov
or
mov
jp
and
out
iret
adc
push
repnz
xor
cmpsl
adc
insb
mov
add
push
cmpb
lcall
jmp
inc
sahf
mov
sub
lds
inc
outsb
cmp
add
ud1
ss
stos
xor
mov
out
dec
popf
xor
xchg
xor
push
mov
out
int3
pop
sti
mov
ljmp
jmp
jns
xlat
dec
mov
sti
pop
mull
mov
loope
or
pop
movsb
test
out
xor
out
es
outsb
xchg
out
hlt
lea
jecxz
mov
fldt
mov
cli
adc
fwait
sub
add
xor
mov
lods
in
popf
xchg
shlb
sub
out
mov
mov
cmc
popa
sbb
fstps
xor
sub
call
add
push
fadds
or
mov
sub
in
mov
lcall
dec
xlat
push
lds
movsb
dec
rcll
mov
or
insb
dec
je
dec
inc
xor
xchg
mov
add
repz
mov
test
inc
lea
rcr
lds
adc
push
mov
push
mov
jae
or
cs
xchg
rcll
and
mov
sbb
es
addr16
jp
lahf
fpatan
rclb
adc
mov
cld
addr16
cmpsb
adc
sahf
push
push
enter
inc
repnz
or
push
ss
push
push
mov
aad
mov
cmp
repz
jno
mov
pushf
mov
inc
cli
into
addr16
and
dec
adc
lret
pop
and
movsl
outsb
xchg
shlb
mov
clc
pop
mov
in
test
gs
lods
popf
cmpsl
mov
fisubs
pop
arpl
daa
addr16
xlat
cmpsl
jo
sub
inc
mov
fcoms
lods
adc
clc
mov
cmp
pop
adc
std
jmp
dec
pusha
data16
lret
popf
out
xor
adc
xchg
stos
mov
aad
icebp
repnz
fcmovne
push
jl
inc
shll
mov
mov
into
and
sub
sbb
mov
jl
push
sti
ret
and
dec
inc
out
pop
lahf
sub
push
call
push
or
sub
rclb
jle
ds
lret
push
imul
adc
inc
inc
cli
test
and
pop
and
inc
xchg
dec
cmpb
jae
mull
mov
popa
fwait
xor
push
icebp
fsts
mov
enter
adc
xor
fdivr
flds
cld
out
cmp
push
mulb
fwait
sub
cmpsl
leave
stc
mov
icebp
mov
in
sub
mov
inc
sbb
movl
xor
jecxz
stos
in
push
push
out
ds
jae
xlat
aas
fs
mov
xchg
cmpsl
aam
test
jb
xchg
mov
cmp
mov
mov
in
sbbb
xor
popf
mov
jbe
add
dec
test
xor
loop
aam
sbb
fs
pop
nop
std
xchg
mov
mov
pop
xorb
xchg
xchg
loop
mov
add
inc
mov
in
ret
dec
inc
pushf
lcall
mov
mov
adc
je
out
sbb
insb
push
mov
loop
lods
movsl
pop
mov
inc
lret
into
xor
push
lock
mov
fwait
inc
and
mov
iret
arpl
arpl
test
xchg
inc
xchg
out
push
jns
mov
mov
imul
insb
pop
sub
mov
ror
rcrb
lea
inc
xchg
jp
mov
test
push
sbb
insl
sub
and
ljmp
add
shr
out
adc
mov
pop
lea
and
or
lea
rcrb
push
lret
push
sub
xor
call
out
fadds
pop
out
cmp
push
push
push
mov
push
cmp
out
fadd
mov
xchg
mov
inc
dec
jnp
das
sbb
fucomip
push
mov
add
cmp
mov
out
mov
push
push
push
jmp
mov
mov
pop
push
fisubrl
xchg
mov
mov
cmc
xlat
inc
cld
add
adc
icebp
xor
pop
jmp
xchg
popf
dec
ror
sbb
inc
out
into
ret
into
pop
fs
and
int3
bound
sub
inc
sub
lods
inc
mov
cmp
sbb
jl
pop
mov
es
insl
lods
dec
jb
adcb
and
shl
and
enter
push
inc
xor
mov
fs
and
sbb
inc
jle
mov
mov
gs
push
dec
pop
movd
add
and
mov
sarl
adc
mov
jg
sub
mov
movsl
push
pop
xchg
lret
xchg
out
lds
push
mov
std
mov
fs
dec
fsubp
fnsetpm(287
repz
push
das
and
and
rorl
pop
jnp
push
mov
cmpsl
xchg
xor
cmp
outsb
ljmp
aas
lea
cwtl
jo
sbb
inc
loop
jecxz
or
add
mov
mov
bound
sbb
orl
xchg
inc
push
push
and
dec
sub
push
push
and
test
ljmp
sbb
inc
or
aad
ss
pop
cltd
and
or
mov
mov
mov
fistl
icebp
mov
cmpsl
sbb
lock
orb
add
sub
adc
jno
int
push
and
and
push
cwtl
jl
pop
clc
movsl
push
out
mov
out
ret
xchg
pop
je
push
inc
mov
out
or
sbb
push
cmp
bound
nop
jle
pop
dec
lea
movsl
sbb
pop
xchg
xor
mov
adc
pop
rclb
or
mov
fiadds
decb
xchg
mov
js
out
mov
outsl
and
mov
or
insb
fiadds
lods
cwtl
pop
pop
xor
cmp
fwait
jmp
repnz
stc
cs
xchg
in
dec
sbb
cwtl
in
ret
cmc
xor
shl
loopne
lock
in
pop
in
dec
xor
enter
xchg
pop
inc
mov
xor
inc
and
jmp
mov
ficompl
sti
movsb
xchg
aas
push
jle
lds
sub
into
loope
sbb
mov
stos
icebp
and
pop
enter
gs
lahf
jle
dec
aas
das
lock
popa
mov
pop
or
test
icebp
or
mov
outsb
or
mov
in
out
clc
sbb
in
pop
das
or
and
jns
adc
mov
in
mov
pop
push
repnz
push
jnp
pop
sbb
cmp
xchg
pop
adc
cmp
lds
inc
fcoml
mov
cs
icebp
pop
add
mov
jl
out
popf
jns
daa
jmp
dec
jbe
ds
dec
mov
in
xchg
push
je
inc
loop
ret
je
dec
fdiv
mov
jnp
data16
or
shl
xor
jb
mov
sbb
xchg
mov
or
or
or
out
adc
out
mov
adc
minps
jb
sarb
push
pop
inc
imul
inc
jne
sbb
adc
mov
dec
cltd
mov
or
mov
data16
movsb
ljmp
inc
xor
pop
js
and
test
fadd
xlat
push
sarl
scas
sub
fwait
xchg
jb
int3
popa
add
dec
arpl
mov
push
testl
sti
cmc
cmp
mov
jns
lret
jle
mov
inc
shrb
or
movsb
jbe
std
mov
iret
xchg
sub
ss
push
call
imul
fldt
adc
outsb
lods
fsubrl
int3
ret
add
jle
addr16
repz
xchg
inc
mov
lahf
adc
in
push
out
sub
and
inc
jg
jnp
xchg
and
mov
inc
lods
cmp
cli
adc
inc
or
inc
mov
push
sub
xchg
sbb
add
repz
ss
adc
jl
and
fdivl
out
xor
hlt
inc
pop
add
fsub
mov
pop
icebp
stos
test
or
adc
xchg
ss
dec
aad
addr16
push
or
notl
std
jg
bound
mov
cmp
stos
mov
int3
std
sti
xchg
fbstp
out
pop
xor
push
pop
loopne
inc
fidivs
mov
push
pop
notb
jl
loopne
jg
inc
adc
lcall
push
pop
dec
movsb
pop
pop
in
sbbl
shl
into
sbb
lcall
sbb
lret
les
fwait
lock
and
and
and
mov
and
aad
or
out
jnp
push
fwait
ret
jp
popl
movsb
fmulp
pusha
xor
iret
add
pop
jg
cmpsb
cmp
cmp
mov
pusha
cmp
adc
je
push
push
mov
jecxz
cmp
loope
sar
push
fwait
pop
mov
and
imul
mov
clc
jns
enter
int
pop
pop
jp
test
and
pop
xor
add
push
pop
data16
mov
xorb
loopne
in
cltd
lret
xor
enter
push
fmuls
fistps
in
xchg
and
push
shlb
add
sahf
sub
push
add
ja
ret
int
outsl
dec
mov
fmuls
int3
in
mov
retw
pop
mov
pop
lret
mov
cmp
test
xor
mov
jae
jp
add
inc
bound
loopne
les
hlt
ljmp
jp
repz
repz
sbb
add
push
cmp
ss
xor
negb
leave
xorb
xchg
fsubrl
jbe
clc
pop
test
sbb
jne
into
lds
sub
mov
mov
sti
push
xchg
stc
pusha
mov
leave
mov
add
movsb
sub
and
mov
mov
cld
cmp
bound
mov
shlb
jmp
stos
push
cwtl
test
ljmp
push
andl
sbb
jns
pop
push
xchg
lds
lods
loop
lods
loope
mov
outsl
xchg
imul
cs
rorb
mov
jo
stos
pop
pusha
jo
and
sub
fs
sub
fistpll
cmpb
adc
push
mov
lcall
sub
insl
jle
scas
loopne
arpl
push
add
in
aad
pop
xchg
sub
in
xorb
lea
jg
daa
inc
insb
dec
push
xchg
or
out
sbb
adc
xchg
xchg
inc
mov
cmp
jnp
jge
push
pop
in
sub
scas
xchg
icebp
dec
pushf
ret
sahf
mov
jns
lock
mov
insl
mov
incl
jae
dec
test
pop
lahf
jl
add
cltd
xchg
aas
and
jmp
inc
mov
push
adc
jl
pop
jns
cmpsb
xor
xor
into
dec
daa
adc
mov
inc
andb
add
pushl
into
mov
fimull
jmp
sahf
jecxz
push
lret
movsb
inc
jle
jae
out
pushf
add
cmc
mov
cmpsb
mov
pop
jmp
xchg
push
pop
out
push
sbb
add
mov
cld
mov
lods
xchg
or
clc
mov
stc
fwait
inc
ljmp
dec
lret
ja
test
sub
xor
add
push
xor
test
push
inc
fadds
mov
ret
sub
dec
lods
scas
movsb
ja
repnz
nop
pop
mov
insb
jp
mov
inc
cs
mov
fstpt
adc
and
addr16
loopne
shr
fisttps
test
nop
shlb
pop
ficoms
stc
cltd
icebp
jo
dec
xlat
neg
outsb
push
cmp
out
in
out
cmpsl
mov
mov
mov
shl
sub
inc
xor
ret
xchg
fidivrs
roll
cmp
aad
leave
daa
inc
mov
fwait
loop
out
lock
inc
pushl
sti
pop
inc
jle
repz
xchg
inc
pop
cmpl
fldcw
mov
adc
mov
lods
in
ljmp
xor
nop
test
push
mov
mov
std
sarb
ja
scas
or
xor
aam
shrl
mov
lret
xor
mov
xchg
ss
sub
shl
xchg
push
cs
fildl
sbb
sbb
or
cmp
into
sbb
lods
push
inc
ret
bound
dec
aad
sbb
mov
test
or
jecxz
clc
jecxz
pop
cmp
xchg
test
cmp
sbb
aas
ret
lret
fmul
mov
cmp
fidivrl
push
xchg
js
in
xchg
dec
adc
addr16
pop
sbb
push
scas
pop
aas
pop
pusha
scas
testl
dec
je
sbb
stc
out
mov
lods
mov
sahf
and
inc
scas
popa
jp
int
mov
outsl
jle
testb
stos
cmp
add
jl
and
loop
mov
fdivrl
rcr
xor
jg
add
popl
rol
fidivrs
or
clc
add
jge
divl
out
lret
andb
sti
dec
jecxz
and
xor
xor
inc
sub
dec
dec
addr16
sbb
jg
jecxz
dec
jae
out
and
push
fdivs
adc
into
leave
adc
in
shrb
lret
sub
out
cmpsl
dec
add
mov
cmp
icebp
and
pop
sub
lret
sub
notl
in
xor
int3
cli
push
addr16
fimuls
rorl
movsb
mov
pusha
or
cmpl
dec
sti
lret
mov
xchg
sbb
mov
call
xor
jne
fs
popa
xor
and
mov
test
add
repz
dec
push
mov
push
or
stos
leave
test
sub
sbb
mov
nop
sbb
stc
sbb
push
inc
xchg
mov
mov
xchg
jo
fiadds
push
mov
aas
icebp
sbb
jle
sbb
or
outsb
int
sub
fdivp
test
cld
lock
test
xor
dec
xlat
lahf
lret
fildll
jg
dec
shlb
fs
popf
mov
cli
cmp
mov
lcall
addr16
inc
das
inc
subb
cmp
inc
ss
lds
mov
rorl
iret
xor
or
addb
mov
pop
movsl
sti
push
pop
jne
xchg
movq
sub
fisubrl
cmpsb
xchg
xchg
pop
and
sub
cmp
roll
setnp
cmp
xchg
stc
inc
mov
push
popa
rcrb
and
push
adc
ret
lret
enter
pop
push
dec
adc
inc
jp
in
into
add
inc
jg
or
mov
adc
xchg
frstor
lods
cmp
xor
mov
icebp
dec
loopne
mov
jecxz
and
cmp
cltd
push
mov
push
xor
lds
adc
cmpsw
lahf
idivb
pushf
nop
inc
or
js
imul
xor
pop
loop
add
dec
push
jno
ret
test
mov
adc
andl
mov
pop
int
insb
pop
push
movsb
lods
mov
mov
leave
inc
in
xor
mov
jg
xchg
push
loope
into
imul
or
insb
push
inc
sbb
mov
mov
notb
mov
fcmovb
fistl
jp
les
xchg
adc
iret
rclb
cltd
push
jmp
sbb
jg
loopne,pt
dec
pop
or
xchg
jne
daa
cmc
imul
fiadds
push
or
sub
addr16
cmpsl
hlt
or
repnz
jp
lret
sub
add
jbe
push
hlt
mov
sbb
lods
mov
adc
push
in
or
clc
and
popa
xchg
sub
pop
aas
iret
ret
or
pop
xchg
testl
cmp
fildll
rclb
and
jecxz
lock
daa
insb
dec
popa
repnz
sti
js
add
xchg
scas
test
mov
shrb
repnz
inc
push
cld
je
into
je
lods
jmp
lret
xor
dec
mov
js
xor
outsl
xlat
sub
les
xchg
pop
push
fldcw
mov
jg
popl
out
mov
push
inc
addr16
xchg
shr
stos
std
jo
aaa
add
dec
outsl
add
test
pop
inc
cli
rcr
loopne
push
push
outsl
dec
rcll
ret
or
push
pop
fstpl
pop
xor
fwait
push
jno
ljmp
sub
loop
jb
jp
and
fcoml
sahf
shlb
add
dec
xchg
and
xlat
into
sub
sbb
aad
sbb
lahf
dec
lcall
scas
loopne
test
pop
add
shll
xchg
push
arpl
jecxz
jle
or
push
dec
and
sbb
scas
fwait
lahf
inc
fmull
pop
dec
mov
mov
das
inc
inc
mov
iret
into
mov
in
out
mov
repz
mov
mov
fbld
pop
jp
xchg
insb
aas
cmc
rclb
sub
cwtl
pop
in
inc
push
inc
inc
test
cmp
fistpl
pop
lods
fbld
lret
and
inc
jo
and
cltd
lcall
mov
cld
je
inc
icebp
inc
add
popf
inc
or
test
cs
push
and
lret
les
testl
mov
les
pop
std
push
outsb
ds
and
lds
cmp
sub
inc
sbb
cmp
stos
cs
gs
lret
adc
mov
jbe
les
int
lods
pop
lea
push
jne
cmpsl
cmp
call
iret
ds
push
imulb
imull
xor
pushf
push
mov
or
js
pop
inc
dec
xlat
cmp
dec
sbb
outsl
jno
fwait
scas
addl
xor
lea
push
clc
xchg
add
cwtl
icebp
mov
clc
jmp
inc
je
add
mov
dec
mov
cwtl
rclb
jge
jae
lods
mov
movl
fwait
mov
fmuls
jecxz
lret
fisttps
push
lcall
out
sub
add
insl
aad
imul
fiadds
inc
insb
inc
test
cld
std
pushf
orb
cmc
cld
movsb
xchg
mov
inc
loope
mov
cmpsb
mov
out
std
push
sub
push
stos
lcall
pop
clc
add
mov
push
xchg
mov
lahf
add
adc
stos
sub
xlat
rcrb
add
lea
cmp
subl
std
or
in
dec
fcmovu
and
pop
mov
sub
xchg
jl
cld
in
or
push
dec
push
or
jl
pop
fsubrs
add
jl
inc
cli
cmp
push
nop
arpl
and
cmpsl
mov
pop
xchg
out
cmpb
cli
outsb
push
ja
mov
push
pop
ret
fldenv
call
cmp
fxsave
jb,pt
jmp
xor
pop
jns
mov
shlb
movsb
les
sbb
adc
std
pop
pop
je
pop
lret
jno
cld
add
jg
fdiv
mov
gs
jo
dec
push
and
fstl
and
fimull
lds
sbb
jnp
out
pusha
in
into
fimull
push
sub
add
lds
mov
stos
mov
std
out
js
adc
call
inc
pop
mov
es
imul
inc
sar
cmp
xor
lcall
xchg
lret
dec
in
and
push
aas
push
sbb
movntps
inc
push
sti
inc
andb
push
push
mov
adc
cmp
mov
mov
ljmp
push
bound
js
cmpsb
cmp
jp
xlat
dec
sti
aad
int
arpl
cmpsl
pusha
or
push
cmp
fwait
lods
imul
xchg
movsl
mov
sub
sbb
sub
out
jmp
inc
jl
ret
outsl
addb
lahf
mov
mov
add
lret
iret
jl
js
or
stos
cmpsl
fcompl
add
push
or
out
shll
jecxz
inc
in
es
dec
sbb
test
and
mov
jne
cmp
sbb
dec
filds
jns
testl
lret
jbe
std
adc
inc
dec
aam
dec
lods
fmull
cwtl
mov
adc
pop
lock
mov
pop
das
mov
mov
fwait
sbb
xchg
clc
jb
lds
sbb
mov
pop
stos
pop
out
jae
lds
jp
imulb
inc
xchg
add
or
and
aam
daa
jne
sub
mov
cmp
dec
fnsave
and
jno
jle
mov
push
mov
ds
mov
test
shr
jnp
push
adc
orl
enter
dec
in
dec
jg
testb
cltd
xchg
dec
movsl
cmp
enter
pop
ljmp
les
std
repnz
leave
lret
into
pop
push
pushf
int
icebp
cmp
push
pop
push
and
test
out
xchg
xchg
out
loope
cli
lret
and
xor
dec
push
fwait
sub
or
and
and
pop
mov
dec
push
lahf
add
roll
ret
popf
or
aam
pop
inc
insb
clc
inc
loope
ficoml
pop
jns
lds
jl
or
jo
mov
sub
test
cmp
aas
popf
clc
pop
push
mov
pushl
stos
test
out
sbb
gs
push
jb
inc
jo
adc
mov
push
sti
xchg
inc
mov
sub
sbb
xor
adc
push
fmul
mov
dec
push
adc
cmpsb
pushf
js
fldl
pop
movsl
jge
xchg
mov
mov
pop
sbb
aaa
es
push
arpl
adc
not
xchg
test
js
dec
cmp
lock
popf
xlat
mov
ret
dec
dec
cli
add
fs
daa
and
iret
mov
test
dec
mov
push
out
out
pusha
lock
mov
push
sahf
imul
repz
dec
xor
sti
int3
push
mov
dec
mov
lea
jecxz
mov
sahf
aas
sbb
jne
mov
sbb
pushf
or
sub
cmp
pop
cmc
cmpsb
sbb
jmp
loopne
orb
dec
aas
ss
popa
add
in
sahf
mov
mov
adc
or
sbbb
rcrl
lahf
xchg
ret
icebp
jg
cmpsl
arpl
xor
adc
jne
cmp
in
inc
push
test
mov
ret
jae
outsl
cmp
popf
inc
push
xor
cld
and
js
inc
sub
push
pushf
lock
stos
aaa
inc
xlat
and
push
adc
or
fisubl
cmpsl
hlt
scas
inc
inc
cld
inc
xor
fdivs
jnp
mov
push
or
mov
pop
mov
add
push
push
mov
mov
fdivrp
aas
gs
push
sub
xchg
or
filds
sbb
mov
inc
mov
inc
xor
cmpw
enter
pop
adc
jmp
jp
out
cld
sar
rcr
xchg
repz
lods
sbb
pop
sti
lahf
rcll
dec
cmpsb
pop
mov
xor
pop
sbb
mov
mov
pushf
push
mov
aad
pop
mov
xchg
xlat
lods
int3
or
cs
out
jp
movsl
loopne
and
xor
ja
xor
pop
mov
push
jb
cs
adc
rcr
sbb
push
insl
pop
sarl
jp
pop
xchg
jns
xor
popa
loop
sbb
imul
fistpll
push
fmuls
std
jecxz
adc
fcomps
sub
jno
iret
sub
lock
imul
shll
and
mov
dec
lret
jmp
jmp
ss
xchg
mov
inc
add
lret
jne
stc
mov
ljmp
outsl
jnp
in
cmpsl
sbb
pop
in
std
xchg
jbe
xchg
push
ljmp
xorl
adc
sub
insb
adc
and
pop
out
dec
xor
xlat
mov
mov
icebp
test
lret
xchg
in
sti
sti
insl
insb
push
jmp
cmp
mov
or
xlat
out
imulb
dec
push
inc
ret
dec
push
hlt
or
out
js
gs
pop
xchg
popf
inc
ficoml
pusha
sub
mov
gs
fldenv
or
sbb
es
cmpsl
adc
push
subl
jmp
jle
icebp
ficoml
ret
mov
xchg
ret
jb
out
mov
sbb
inc
clc
aam
fldcw
add
mov
sbb
insl
inc
xor
mov
lret
adc
cmp
dec
gs
adc
mov
fiadds
pop
loop
sti
sub
xor
stos
cmpl
mov
scas
lock
or
inc
lret
fwait
repnz
popf
push
aad
daa
sub
stos
imul
cmp
decb
pushf
sbb
mov
and
sub
dec
cld
add
mov
adc
adc
fbld
outsb
lock
jl
cmp
ss
je
xorb
jmp
jno
dec
add
inc
outsb
push
pop
out
mov
adc
rcll
xchg
lcall
mov
out
jo
js
loope
sbb
test
lret
out
dec
push
jno
adc
outsb
pop
add
xchg
fmulp
xor
sbb
jb
pop
scas
notb
stos
push
pop
add
fs
dec
and
mov
dec
or
mov
adc
jne
fnstenv
popf
push
pop
dec
adc
out
mov
push
push
jmp
jns
xchg
cmpsl
add
xchg
aaa
inc
bound
push
xor
int3
xor
pop
cmp
subb
and
pop
add
mov
out
push
sti
mov
mov
pmulhw
cmp
das
push
testb
sub
call
cs
test
mov
sbb
xchg
add
movb
and
pop
xchg
stos
test
loopnew
push
fnstsw
jo
adc
insb
or
xor
roll
add
pop
rorl
and
xor
cmpsw
out
repz
mov
out
xor
or
xor
int
jbe
or
jle
sbb
push
test
push
shl
or
stos
pop
cmpsl
inc
mov
lret
and
cmpsl
lcall
clc
inc
clc
cltd
imul
pop
mov
insb
mov
mov
adc
stos
rcrb
mov
pop
inc
or
insb
lcall
pop
inc
repz
fcomps
cltd
test
lahf
orb
popa
sub
les
sub
jl
sbb
adc
mov
icebp
xorb
cmp
mov
dec
or
test
and
test
jg
jmp
out
pop
jle
inc
imul
ljmp
ret
std
mov
mov
pop
push
test
pop
cmp
mov
dec
sbb
mov
jmp
push
adc
inc
xchg
roll
sbb
das
xchg
gs
roll
scas
shlb
or
mov
sbb
filds
fiaddl
mov
and
addr16
inc
into
inc
popf
lret
shl
scas
stos
mov
adc
test
test
nop
mov
outsb
jno
mov
or
add
movsl
push
sub
imull
mov
xchg
and
fs
sub
xchg
ret
es
pop
dec
call
mov
jl
cli
push
xor
inc
pop
in
mov
jg
icebp
lods
pop
pop
pop
lods
adc
arpl
addb
popf
enter
out
fdiv
and
mov
popf
dec
lock
and
add
sub
push
sub
gs
ja
adc
inc
pop
pop
and
or
mov
xchg
inc
jl
and
push
jne
sbb
xor
lret
xchg
lods
jnp
sbb
adc
leave
pop
rcr
daa
data16
mov
test
lds
in
mov
out
push
mov
inc
fldt
add
mov
addb
push
push
jle
lock
aaa
addr16
test
in
dec
push
rorl
inc
xlat
sbb
dec
inc
dec
sbb
inc
push
jecxz
xlat
xor
ja
arpl
mov
push
add
mov
test
daa
in
js
mov
stos
out
and
aad
insl
dec
dec
rcl
pop
push
out
push
sbb
pcmpgtd
mov
dec
or
lret
lods
test
push
sti
sbb
mov
sbb
sbb
gs
and
scas
sti
clc
cmpsb
cmpsb
les
mov
cmp
pop
add
cmpl
ja
loop
aas
add
mov
push
scas
test
push
xchg
sub
xchg
push
pushf
fsubs
inc
sub
cltd
sbb
in
lods
sub
cwtl
sub
adc
mov
das
imul
jle
cmpl
fidivs
mov
insb
lcall
push
push
imul
rorl
enter
addr16
or
int
mov
sbb
or
or
ds
xor
insb
xchg
lret
fs
ljmp
ja
adc
mov
xlat
adc
lods
std
sub
popf
ret
imul
out
into
jle
or
lock
int
out
mov
jno
rol
mov
aam
fwait
xor
push
sahf
pop
mov
leave
daa
roll
adc
sbb
sub
loopne
push
and
popa
xchg
std
and
inc
cltd
ljmp
cmpsl
scas
push
sbb
add
loope
xchg
scas
and
cmc
insl
jns
sub
dec
aam
push
adc
sub
dec
shlb
mov
into
cmp
cltd
in
test
push
mov
push
movsb
dec
sar
lret
daa
mov
psrlq
cld
hlt
pop
dec
or
jnp
xor
jnp
sbb
dec
mov
cmpsl
shrl
push
hlt
cld
ds
les
out
sbb
push
sbb
inc
fnstsw
fsubrl
pop
adc
xor
jo
lods
fimuls
jno
add
add
pop
cmc
cmp
pop
or
mov
daa
cmpsl
xchg
xor
aad
lds
mulb
ds
ja
mov
sub
or
movsl
sub
jmp
jge
mov
pop
xchg
pop
jecxz
inc
inc
dec
shll
cmp
in
dec
mov
test
jge
jmp
dec
scas
push
add
insb
xor
stos
inc
arpl
das
xor
mov
inc
pop
std
int3
lock
icebp
mov
imul
jecxz
mov
xchg
sbb
fs
pop
lcall
test
inc
in
xchg
xlat
push
jbe
iret
xchg
dec
out
jg
out
or
clc
xchg
xchg
fistps
nop
adc
inc
inc
cmp
lahf
pop
sahf
js
into
add
xlat
mov
mov
pop
loopne,pn
inc
lods
pop
repz
adc
test
add
imul
aaa
es
pcmpeqw
pop
imul
mov
push
repz
fisttpl
cwtl
mov
sbb
pop
enter
call
pop
cli
rorl
cmp
mov
mov
jecxz
mov
pop
and
data16
stos
popf
and
mov
cmp
sbb
ljmp
jno
mov
in
stc
int3
enter
cmpsl
xchg
add
mov
imulb
mov
sbb
nop
popa
rorb
jno
icebp
pop
inc
adc
mov
xor
push
dec
test
hlt
out
pop
mov
add
movsb
data16
ret
mov
xor
mov
ja
lea
sbb
sub
das
out
or
inc
inc
or
outsb
into
mov
mov
xchg
pop
sbb
push
adc
jg
cmp
xor
rcll
jmp
adc
mov
jl
bound
cmpsb
repnz
dec
scas
push
mov
outsl
fwait
lds
imul
ret
js
push
call
lahf
scas
inc
add
mov
out
or
adc
or
adc
jne
ficompl
mov
int
xchg
mov
stos
out
in
cmp
test
xor
es
xchg
cmc
and
adc
lret
inc
ljmp
aaa
xor
inc
das
div
fxch
sub
jo
arpl
dec
insl
mov
inc
jl
adc
ret
movsb
jno
out
iret
cmpb
xchg
scas
iret
repz
out
or
mov
stos
cwtl
cmp
test
jno
rolb
push
int
mov
push
jecxz
adc
push
sub
lods
mov
jne
push
lods
jo
outsl
scas
imul
xchg
pusha
dec
mov
push
gs
sbb
mov
cmc
push
scas
cli
cwtl
cmp
add
pop
push
or
pop
mov
or
std
xorl
fsubrl
sub
and
or
push
arpl
add
repz
mov
fcompl
mulb
jne
scas
fwait
aam
pushf
fwait
stos
shrb
shll
xchg
bound
dec
sbb
mov
scas
mov
xchg
pop
adc
ret
clc
xor
cmp
mov
push
push
jecxz
xchg
mov
loopne
push
cs
adc
dec
mov
popf
les
sahf
sub
imul
outsl
out
xor
ds
out
gs
jns
dec
into
push
push
adc
ror
push
notl
jge
ficompl
xchg
adc
and
loopne
stos
add
jbe
gs
repnz
xor
lods
pop
cmc
or
dec
test
jbe
cld
pop
mov
jge
mov
mov
ror
mull
sbb
push
push
cs
pusha
cmp
out
dec
mov
lea
fdivs
adc
scas
lret
push
shl
cwtl
push
in
jmp
cwtl
mov
jbe
pusha
fisttpll
movsb
xchg
xor
sbbl
xchg
int
int3
xchg
pop
loopne
jg
dec
adc
cmp
jo
jo
sahf
xchg
out
adc
push
sub
imulb
pcmpeqd
inc
addr16
jl
or
les
jge
in
sbb
cmpl
cmp
add
mov
insb
movsl
ror
lock
cmp
pop
mov
mov
cmp
inc
xor
pop
mull
jo
sahf
lret
dec
jbe
pop
fdivrs
in
mov
xlat
scas
aaa
fdivrp
lcall
cmpsb
hlt
cli
mov
out
push
adc
push
iret
add
out
push
lahf
mov
dec
pop
add
mov
push
fs
int3
dec
stc
jns
das
cmpsl
mov
faddl
or
add
stos
mov
jbe
mov
scas
loope
pop
popa
push
jae
push
loope
add
sbb
inc
les
icebp
pop
mov
jl
ret
cmp
add
cmc
inc
or
ds
add
push
dec
mov
adcl
xchg
adc
mov
aas
mov
xchg
push
sub
xor
stos
xor
and
enter
push
mov
cltd
mov
sahf
jle
shufps
into
jmp
int
sub
sbb
adc
dec
daa
pop
pop
lock
lret
fdivrl
sbb
les
lock
iret
inc
pop
push
or
dec
sbb
frstor
xlat
xor
cmp
test
out
cmc
test
pop
cmp
cld
mov
movsl
and
mov
push
add
fdivrs
jb
inc
insb
repnz
ljmp
sbb
aaa
push
xchg
jp
icebp
negb
inc
mov
mov
xchg
negl
mov
ljmp
fldenv
add
out
ret
enter
push
dec
push
pop
hlt
stos
mov
push
clc
ja
dec
sub
jge
scas
pop
lock
mov
ja
mov
fdivs
inc
mov
xor
mov
out
sub
xchg
out
mov
sbb
mov
pushw
cld
gs
int
cmpxchg
mov
xor
aas
mov
scas
xor
push
sub
xchg
xlat
cmp
sub
into
or
int3
dec
std
lods
out
out
and
in
ds
jno
mov
mov
xor
sub
pop
mov
cmc
repz
xchg
mov
dec
fidivl
call
pop
lods
in
mov
inc
int
and
mov
shll
lret
xor
mov
nop
inc
push
push
or
test
pop
enter
pop
leave
stc
mov
stos
ljmp
in
in
inc
data16
or
or
adc
cs
lea
push
pop
mov
out
xchg
inc
pop
outsb
ret
scas
jg
cmp
mov
mov
les
add
pop
pop
imul
xorl
adc
add
pop
popf
pop
push
nop
call
push
lret
or
push
sub
cmpsl
adc
xchg
jge
mov
cld
fwait
aas
arpl
jns
lret
aas
enter
icebp
mov
xor
lods
add
nop
mov
xchg
loopne
push
push
adcl
idiv
flds
push
aas
inc
roll
jp
mov
mov
fwait
push
test
inc
es
loop
cmpb
es
sbb
lea
hlt
repnz
aaa
jbe
ret
repnz
in
cmpsb
jb
sahf
bound
mov
filds
pop
insl
push
sbb
jmp
xchg
mov
jecxz
pop
and
sbb
jp
pop
xchg
icebp
sahf
push
xchg
jp
sarb
jno
and
faddl
outsb
xchg
push
push
clc
push
cmp
dec
xor
js
ds
call
jmp
and
push
out
adc
inc
jl
stos
and
flds
daa
jmp
mov
adc
xor
push
sub
inc
ja
pop
aaa
mov
and
aad
outsb
mov
cmp
insl
xlat
mov
dec
mov
scas
jae
in
cs
mov
push
lock
inc
mov
and
test
jo
fmul
mov
loopne
cli
add
lcall
iret
dec
divl
push
mov
mov
push
aaa
sub
hlt
in
scas
xor
nop
inc
in
pop
rorb
adc
cmp
leave
in
shll
cmp
dec
jne
inc
loop,pt
dec
sub
dec
sbb
jle
mov
adc
aad
jae
push
push
add
das
cmp
sbb
pop
xlat
push
xchg
pop
jne
xor
iret
je
inc
or
and
and
ret
jbe
jo
popf
sbb
aaa
mov
pop
icebp
int
fisubrl
lcall
dec
insb
inc
cs
sub
cmpsl
xor
push
adc
arpl
adc
xor
sbb
sarb
fldt
push
scas
in
mov
jno
lret
adc
rcr
int3
mov
iret
scas
xor
xor
les
imul
dec
enter
mov
jne
jbe
and
lods
rolb
push
xor
jns
add
pop
test
loop
lea
jne
mov
int3
iret
hlt
cmp
push
push
ljmp
fwait
cli
pushf
jle
dec
push
aam
pusha
fdivs
sahf
aaa
lahf
add
push
push
lods
sub
stc
loopne
mov
aas
rclb
pop
testb
mov
jae
and
movsb
push
ss
outsb
xorb
popf
lret
enter
cltd
push
jle
push
adc
call
icebp
or
xchg
mov
repnz
jecxz
pop
cmp
lds
inc
outsl
push
push
stos
ficompl
dec
mov
mov
fldcw
mov
ljmp
mov
inc
ja
in
and
mov
js
xchg
sarl
ljmp
adc
pop
ret
loope
lods
cmpb
sub
in
mov
jne
mov
xchg
mov
xlat
iret
xor
pop
dec
ret
repnz
frstor
mov
out
sbbb
lea
pop
cs
sub
xchg
inc
xor
dec
lret
inc
or
adc
xchg
push
adc
jne
sbb
fldt
jecxz
sbbl
bound
mov
mov
clc
and
jnp
and
sub
out
es
repz
mov
mov
cld
pusha
bound
in
sahf
inc
jbe
dec
fs
pop
rcrl
repnz
in
addb
cmp
clc
or
cltd
mov
imul
sub
cltd
push
jg
test
mov
jbe
imul
sarl
scas
js
gs
insl
sbb
xor
sti
xchg
dec
jp
add
xchg
mov
xchg
xor
jns
loope
push
xor
cmpsl
outsl
or
inc
ret
icebp
push
icebp
data16
dec
imul
mov
ljmp
cmpsl
sub
and
punpckhbw
jne
xchg
ja
jb
aaa
push
ret
movsl
mull
cmp
sub
jle
movsl
pusha
xchg
or
pop
out
pop
arpl
adc
loopne
sar
inc
pop
sti
push
dec
xor
dec
sub
js
mov
xchg
lds
and
push
mov
sbb
shr
icebp
fcoms
push
roll
dec
sbb
pop
mov
mov
dec
mov
jns
inc
fldl
mov
mov
and
mov
xor
loopne
js
ljmp
arpl
mov
lods
clc
mov
sbb
enter
ret
int
shl
mov
mov
das
repz
pushf
mov
and
ss
in
xchg
push
data16
syscall
lock
in
jae
push
cmp
mov
movsb
jo
cmp
lds
or
jbe
hlt
pop
popf
xchg
mov
fcom
js
inc
mov
add
in
and
cld
cwtl
ds
jecxz
movsb
lock
xchg
dec
stc
add
sti
mov
mov
xor
mov
out
jne
mov
and
cmpsb
subl
mov
mov
stos
mov
cmpsb
jno
loop
aam
fidivl
faddl
fistpll
push
pop
outsb
popl
sub
sti
or
sbb
ss
sub
mov
jo
jmp
test
mov
lods
add
xchg
add
mov
test
in
adc
data16
ja
inc
adc
movsl
inc
jns
or
jg
mov
aas
jl
mov
pop
mov
xor
push
cs
scas
add
mov
mov
dec
mov
dec
jg
adc
jg
lcall
daa
sbbl
movsl
mov
js
shrl
jmp
push
sbb
repz
repnz
imul
outsl
hlt
xor
shll
or
mov
shlb
jle
int3
stos
cmp
mov
jne
lahf
aam
sahf
insl
lcall
ret
mov
sub
test
in
mov
in
aam
fisubrs
repnz
roll
xchg
inc
mov
rorl
dec
popf
mov
jne
lds
imul
xchg
and
cltd
loope
lock
cmp
xor
and
mov
cmpl
ror
lods
lds
pop
mov
dec
dec
js
push
sub
mov
push
adcb
push
adc
repz
insb
push
orb
test
in
xor
cmpsb
adc
fwait
lods
dec
addr16
dec
mov
aas
mov
movsl
sub
popa
mov
cltd
pusha
jecxz
pop
popf
xor
fdivrs
add
jge
jmp
negb
roll
xchg
leave
fwait
mov
sti
xchg
jmp
iret
pop
or
out
push
repnz
daa
jnp
repnz
in
shlb
cmp
inc
adc
gs
pop
repz
lds
dec
jecxz
xchg
jmp
fsubs
popf
mov
and
pop
insb
or
jno
xchg
xor
aas
jnp
stc
add
daa
jno
repnz
aas
or
rcrb
ret
ficompl
stos
xchg
mov
pop
test
xchg
andb
jae
mov
inc
in
rcll
add
aaa
lock
sbb
fidivl
xchg
test
push
test
ja
dec
mov
jg
inc
sbb
movsl
bound
std
or
xchg
sarl
fists
mulb
dec
jb
sub
dec
and
xchg
and
inc
push
je
imul
nopl
shl
add
sub
mov
dec
or
dec
dec
stc
xor
xchg
stc
jo
mov
fiadds
fcmovbe
push
rclb
sub
lods
mov
sbb
hlt
mov
ret
and
call
popa
xchg
push
cmp
movsl
mov
jnp
scas
mov
stc
push
pop
push
testb
dec
out
lret
mov
lods
and
pushf
push
cltd
jmp
mov
push
int3
and
and
sub
sbb
mov
cmpsl
mov
ja
loope
sbb
cli
sahf
pop
dec
adc
rolb
sub
push
push
lahf
mov
lcall
jle
dec
cmp
cmp
xchg
imul
ret
shlb
adc
out
outsl
xchg
sbb
mov
push
daa
imul
push
jbe
pusha
push
das
ss
and
lret
lahf
rcrl
or
in
push
push
rcll
adc
and
out
push
sahf
arpl
insl
pusha
jmp
mov
dec
adc
imul
sub
sbb
inc
inc
orl
lea
leave
data16
cmp
mov
jp
cs
push
jb
cwtl
pop
ja
adc
push
jg
adc
push
jb
into
and
mov
les
xor
mov
roll
pop
ret
cs
push
imul
mov
fdivrs
pop
icebp
push
out
gs
jnp
stc
dec
mov
cld
mov
int3
int
test
mov
int
fldl
test
jmp
push
inc
movsl
pop
sub
test
or
gs
dec
xchg
in
jbe
adc
jns
in
popa
loope
mov
dec
cli
in
mov
cmp
add
popa
push
adc
call
psubb
aam
add
xor
rolb
add
iret
stos
cmp
test
or
stos
inc
and
dec
jae
jnp
js
jbe
xchg
mov
out
movsl
shlb
push
cmc
push
pop
adc
int3
mov
pop
leave
in
lods
jl
iret
cmp
sub
or
mov
inc
subl
int3
cmp
pop
cmpsb
and
xor
pop
cmc
pop
mov
push
xor
mov
mov
mov
push
test
idivb
jl
mov
push
filds
fsubr
lock
testb
mov
mov
std
repnz
jge
jl
mov
inc
pop
xchg
cmp
sub
cwtl
pusha
pop
jb
lods
fdivrs
mov
stos
test
mov
leave
and
mov
sbb
cmp
fisubrl
adcb
inc
rorl
movsl
dec
push
xor
sub
sub
mov
pop
fdivrs
adc
mov
stos
and
test
push
pop
lock
insl
out
mov
fdivs
pop
xor
pop
xor
add
or
js
jbe
sub
mov
mov
rcrl
fldl
sti
dec
mov
push
cli
add
popa
lret
ffree
mov
call
aam
inc
mov
lea
dec
les
pop
add
jno
mov
sbb
sub
sbb
ss
aam
out
jl
sahf
enter
ret
xor
orl
cmc
mov
rcrb
xchg
repnz
mov
mov
gs
adc
rclb
jbe
movsb
and
ds
and
bound
add
std
and
xchg
lods
pop
lods
inc
push
or
cmp
add
dec
insl
mov
mov
dec
sbb
mov
pusha
mov
out
adc
pop
or
or
adc
shlb
push
pop
xchg
mov
jbe
xor
mov
xlat
push
push
mov
adc
repz
xchg
rcl
cmpsl
dec
xor
iret
into
dec
fsub
movsb
mov
mov
lret
add
pusha
je
insl
dec
fcoml
sub
mov
stc
push
add
dec
add
in
xchg
push
inc
push
push
stos
jecxz
mov
ret
ret
xchg
lods
mov
nop
xchg
mov
push
popa
dec
xor
stc
mov
int3
movsl
push
repz
movsl
pop
das
in
call
je
pop
pop
lods
mov
push
imul
mov
mov
outsl
ret
rcrl
dec
int3
add
xorb
testl
mov
cmp
jbe
clc
lock
sub
dec
push
sub
in
scas
loop
inc
adc
aas
add
dec
imul
outsl
arpl
into
add
jns
add
sbb
jno
stos
lahf
hlt
arpl
or
and
fidivrl
lock
mov
mov
ljmp
pop
or
clc
sub
popf
out
jmp
lret
jp
xor
sub
mov
jge
jl
popa
and
stos
das
push
push
rolb
test
pop
sti
pop
mov
nopl
fildll
scas
dec
sbb
fcmovb
stos
mov
sbb
inc
mov
or
loope
or
sbb
mov
fildl
mov
cmp
mov
push
arpl
sub
and
xchg
push
ds
clc
sbb
rorb
dec
adc
dec
xchg
cmp
sub
dec
scas
push
mov
fs
and
mov
mov
movsb
xor
and
and
sbb
jnp
add
nop
aaa
mov
pop
pop
loopne
in
push
fwait
xchg
js
mov
in
mov
add
push
cmc
jge
lahf
push
ret
fimuls
push
sub
mov
dec
int3
mov
ret
mov
jb
sbb
xchg
or
xchg
mov
das
xor
es
mov
mov
les
mov
icebp
fwait
mov
inc
outsb
jnp
xchg
pop
leave
shr
add
sti
sti
or
sahf
jo
dec
cmc
dec
call
sub
bound
add
in
stc
scas
lods
dec
dec
int3
jle
jb
scas
pop
inc
cs
dec
adc
lock
dec
mov
mov
test
popa
cmp
scas
mov
push
in
pusha
or
push
lcall
aaa
lods
xor
nop
sub
dec
sbb
cmp
fists
popa
inc
enter
cli
outsl
adc
pop
or
xor
je
mov
mov
lock
cwtl
sti
xchg
xchg
lods
inc
pop
add
aas
les
jbe
lock
or
add
jle
mov
adc
pop
fdivr
and
outsl
sbb
scas
jle
jb
test
jbe
sbb
mov
add
stos
mov
sub
adc
xchg
loope
xchg
pop
popf
repz
nop
leave
in
xlat
aas
sub
shll
scas
push
sbb
dec
adc
mov
inc
imul
fsubrp
orl
int3
inc
fisttpll
and
mov
movsl
hlt
loope
adc
mov
fmul
adcb
int3
repz
mov
cli
pop
push
and
add
and
and
or
daa
push
es
pop
sbb
addr16
or
out
xor
test
xchg
jg
loope
dec
adc
insl
sub
or
fs
push
xchg
aas
cmc
or
bound
xor
fs
and
jb
loope
aad
xchg
xchg
cmp
mov
mov
movsb
into
fs
insb
clc
popf
or
loop
jne
push
repz
scas
adc
mov
push
outsb
xor
inc
test
sbb
sbb
ds
iret
in
arpl
lret
imul
and
inc
fnstenv
fldt
aas
adc
popl
xchg
jo
aad
insl
pusha
fists
fbld
mov
xor
insl
test
lds
push
inc
loopne
ja
orb
in
stc
xchg
jno
clc
sub
push
fcoms
sahf
cmp
add
in
cmp
push
cmp
stos
andl
dec
or
out
loope
fmull
mov
dec
jne
movsb
idivb
aam
dec
ret
xor
jl
aam
push
fmull
dec
mov
adc
repz
inc
or
outsb
pop
ss
inc
mov
pop
mov
xor
cmp
das
mov
pop
adc
xchg
divl
adc
int
pop
cmp
lods
cmp
add
fwait
jmp
or
and
nop
sar
test
mov
pop
idivb
jb
fidivs
add
imul
in
addr16
std
push
fcompl
push
push
add
out
mov
jnp
lahf
rcr
cmpsl
arpl
repnz
jle
pop
mov
jg
add
ljmp
test
leave
bound
pop
addb
pop
ss
fwait
arpl
dec
movzbl
xlat
notl
fldl
aaa
scas
xchg
les
mov
mov
fcmovnbe
xor
xchg
test
sbb
and
sub
push
or
in
ss
loope
lods
lret
lods
out
sbb
pop
addb
pusha
es
shrb
xchg
gs
or
and
sub
hlt
sub
xchg
cmpsb
xchg
test
js
mov
mov
mov
push
gs
jg
xchg
out
enter
lret
mov
ljmp
xor
cli
mov
mov
pusha
and
mov
push
pop
mov
rcrb
stos
aad
in
cmp
mov
xchg
iret
lret
jns
adc
inc
pushf
pop
mov
call
mov
ds
mov
pop
lret
inc
xlat
jge
xor
int
imul
jmp
lret
inc
out
xchg
cmc
pop
cmpsl
add
enter
push
dec
mov
xchg
sar
cmp
sub
mov
ss
sub
data16
mov
cltd
loop
insl
push
and
in
add
or
pop
jl
jae
fisubrs
fwait
int3
xchg
movsl
int
lcall
fdivrp
imulb
popa
int
test
pop
shll
hlt
cmc
in
mov
loopne
lcall
cmp
jno
mov
mov
aad
lcall
push
sbb
jmp
sbb
into
and
xor
stos
rol
ret
dec
push
or
xor
xchg
dec
sub
jecxz
pop
dec
aas
mov
test
rdpmc
pop
test
jns
cmp
negl
pop
fsub
popa
mov
mov
jge
push
mov
dec
or
cmp
lods
and
adc
aad
out
test
fisttpll
adc
int
jecxz
adc
mov
add
pop
mov
xchg
mov
cmp
xchg
sub
ds
fwait
cli
push
xchg
vorps
aad
mov
ja
xor
cmp
and
and
cmp
add
dec
sub
add
push
sti
je
shr
cmpl
lea
repz
and
sub
loop
mov
or
imul
outsl
mov
add
cmp
flds
movsl
int3
das
pop
jle
dec
push
dec
mov
xchg
push
jl
jp
pop
adc
lock
mov
test
std
mov
daa
cltd
in
test
je
xor
and
push
jp
jmp
push
add
cmpsb
lock
mov
jb
push
pop
jmp
cmpsl
inc
sub
movsl
mov
hlt
out
pop
mov
cli
lds
shl
mov
enter
push
sarb
sub
xor
push
aad
aad
das
lahf
jbe
pushf
mov
cmpsb
in
mov
xchg
into
lret
pop
das
mov
fadds
mov
push
ficompl
iret
ss
inc
adc
ljmp
divl
scas
adc
clc
dec
push
out
sbb
in
cmp
jp
push
pop
test
dec
xchg
dec
dec
clc
pop
mov
enter
shll
xchg
add
jmp
jns
cmpsl
lret
pusha
xchg
shr
or
ret
push
jmp
mov
add
push
lods
add
add
rcr
lret
insb
addr16
arpl
jns
sub
jg
int
jge
pop
or
lods
fldenv
lods
roll
or
popf
loopne
fidivrl
lds
cmp
inc
and
push
mov
cmpsl
call
jno
out
jl
sbb
mov
sti
mov
sub
test
pop
mov
xchg
lea
adc
add
sub
dec
add
pop
fisubrs
cmpsb
test
xchg
xchg
jmp
cmc
jle
or
push
dec
in
pushl
scas
js
or
inc
enter
leave
aas
pop
das
addr16
dec
ret
xor
jp
dec
push
xchg
loop
jge
adc
aaa
pusha
xchg
xor
inc
lock
sbbb
in
inc
ss
add
js
mov
xchg
aam
cmp
inc
inc
insl
mov
xchg
nop
jp
nop
xlat
scas
fstp
sarl
ss
std
adc
lcall
adc
xchg
insl
lcall
and
mov
cmp
out
jb
cltd
flds
dec
pop
or
out
fbld
jecxz
jl
cwtl
ficomps
loope
in
js
pop
loope
sub
pop
sub
push
add
aas
ljmp
or
repz
pop
mov
push
pop
xor
add
inc
xchg
aad
hlt
nop
dec
sub
inc
add
push
inc
dec
scas
push
ja
mov
fwait
aaa
or
cmc
addr16
lock
cmp
jo
mov
jb
jmp
lock
jae
lea
lods
or
daa
sti
unpckhps
mov
push
js
push
dec
in
mov
addr16
pusha
stos
shlb
pop
leave
xchg
fsubr
dec
mov
dec
sub
mov
mov
pop
add
and
jae
pop
fdivl
or
ret
fidivl
xchg
movsb
or
add
dec
pop
fstpt
cmp
sarb
out
bound
adc
and
push
dec
xor
and
in
sub
rorb
addr16
mov
cmp
sub
test
jle
sbb
mov
jmp
enter
mov
adc
sub
inc
xlat
cmp
xor
fcoms
ljmp
add
fmuls
cwtl
les
icebp
mov
leave
ror
lretw
aaa
mov
iret
xchg
inc
movsl
inc
pop
popf
sub
push
or
cmp
push
ja
outsb
xor
inc
mov
bound
clc
push
cltd
loopne
loop
mov
xchg
pop
out
jp
xor
cmp
test
jb
cmp
inc
mov
aad
lods
ja
push
lods
sbb
sbb
pop
jb
movsb
push
push
repnz
mov
cli
pop
cmp
sub
pop
cmp
mov
xchg
lret
popa
jnp
loope
mul
sti
pop
dec
push
popf
ror
stc
push
call
adc
push
stos
into
dec
pop
or
mov
repz
sub
adc
pop
test
inc
jne
xor
aaa
cmp
lods
jnp
gs
fxch
imul
cmpsb
and
mov
dec
mov
aam
cwtl
mov
inc
mov
sbb
or
adcl
xchg
adc
cmp
fs
pop
add
aad
cltd
mov
cltd
lods
mov
pushf
sub
ss
insb
jecxz
mov
cmpsb
or
in
lret
or
test
mov
xchg
daa
push
adc
jle
popf
jnp
jbe
jge
aas
pusha
jl
jnp
adc
cvtdq2ps
push
mov
out
adc
clc
dec
lcall
in
rorl
scas
les
mov
mov
and
dec
mov
adc
lcall
mov
push
push
in
and
cmp
sub
mov
sbb
out
mov
cmpsb
inc
adc
lcall
ja
push
xor
sar
sahf
stos
int
mov
sbbb
and
add
enter
cs
icebp
cmp
add
lcall
test
out
mov
pop
push
mov
mov
sbb
mov
push
jne
adc
xor
loope
dec
test
dec
mov
loope
addr16
add
into
push
scas
sbb
push
mov
mov
cmp
cmc
addr16
bound
mov
dec
jmp
lods
outsb
arpl
lret
imul
movsb
xchg
pushw
mov
clc
fnstcw
insb
sub
sbb
mov
sti
rcrb
out
or
and
sbb
push
pop
in
clc
fistps
push
jmp
push
fsubrs
loopne
xorl
cmp
ret
sub
rcll
mov
mov
dec
sbb
cld
sbb
mov
lods
push
jbe
int
int
xor
nop
sub
shll
xchg
mov
test
sahf
pop
mov
cmp
pusha
fdivs
movsl
dec
stos
sbb
add
enter
inc
mov
mov
dec
or
fsub
ficomps
ror
rol
stc
push
or
not
testb
xchg
pop
outsb
pop
andl
in
xchg
xchg
subl
jg
cwtl
or
mov
mov
imul
int3
fwait
andb
imul
cmp
jle
cmc
adc
bnd
loop
jmp
cmpsb
inc
push
mov
pop
inc
movsl
and
xchg
mov
cmp
add
sub
push
inc
xor
ljmp
jmp
lret
into
mov
in
add
sub
outsb
sbb
vpsubusw
add
and
pop
add
inc
sarb
leave
jmp
in
mov
jne
sub
fwait
pop
fcos
loopne
push
jae
lret
outsb
pop
aas
cs
clc
dec
jp
int3
xor
mov
insl
popf
call
bound
jecxz
ret
lea
xorb
push
cmp
mov
test
jb
mov
insl
loope
lahf
outsl
bound
push
dec
cli
push
sub
popa
sub
bound
adc
sbb
pop
push
jno
aaa
lock
mov
in
add
xchg
cld
dec
pop
jle
inc
pop
jl
sbb
cwtl
out
out
lea
int3
mov
aas
rcrb
pop
cmp
addr16
stos
fwait
jne
inc
dec
dec
call
rolb
ja
pop
inc
lcall
xchg
pushf
fwait
lahf
dec
movsl
pop
in
xchg
popa
xchg
fcoms
mov
jns
sub
mov
pop
sub
pusha
js
jne
jg
orl
adcb
arpl
sub
sahf
leave
in
mov
ds
pop
push
stos
into
and
lret
fwait
pop
push
push
fsubs
mov
out
jnp
pop
add
xor
xbegin
sbb
pop
pop
push
xchg
jb
adc
dec
scas
mov
test
mov
cmpsl
ficoms
into
xlat
fmuls
arpl
xchg
pop
call
fisttpll
inc
cwtl
movsb
fsts
js
stc
inc
push
xchg
mov
jbe,pt
jle
scas
xlat
fdiv
lahf
loopne
movsb
cwtl
add
pop
and
adc
cmp
clc
dec
mov
jo
dec
pop
das
push
scas
lods
inc
mov
aas
leave
jge
insb
pop
push
cmp
jl
mov
mov
mov
xchg
mov
xor
scas
jmp
xorb
mov
or
sbb
or
push
sarb
clc
mov
pop
in
mov
mov
adc
pop
jnp
ret
cmp
or
out
imul
test
xlat
mov
adc
cmp
insb
sub
xchg
inc
or
sub
pusha
cmp
into
inc
in
mov
xlat
inc
ds
in
push
xor
and
push
popa
cs
adc
adc
mov
mov
push
push
ret
jb
sub
cmp
popf
push
je
aam
dec
cmp
adc
jbe
mov
cmpsl
shrl
jmp
insb
aaa
daa
fs
cmp
mov
stc
out
loopne
movl
mov
arpl
into
push
xchg
cmp
adc
pop
mov
bound
nop
and
jg
cltd
shl
inc
fdivrl
cmp
xchg
lcall
adc
es
push
imul
lcall
push
cmc
sbb
ljmp
sbb
sbb
jno
mov
adc
mov
stc
add
inc
popa
lds
add
mul
jmp
cmp
jg
addl
sahf
push
scas
push
int
and
stos
fnstenv
cmp
xor
xchg
sub
les
jb
adc
xlat
add
inc
cmp
out
pop
test
std
xchg
push
cmp
shll
mov
sub
push
dec
or
cmpsb
mov
jae
mov
cmp
loopne
in
hlt
jo
sub
push
movsl
sbb
or
or
stos
xchg
and
bound
sub
and
rolb
mov
mov
jge
xchg
sub
adc
jb
sarl
fisubrs
and
jmp
sarl
fbstp
popa
sti
jecxz
loope
repnz
xchg
inc
daa
mov
data16
jmp
adc
or
fildll
aad
pop
fs
adc
dec
sub
push
mull
and
sbb
cmpsl
notb
lret
outsl
sarb
fs
addr16
push
aad
arpl
addr16
sbb
testb
imulb
bound
in
dec
xchg
outsb
xchg
pop
pop
fisubs
out
adc
fimull
xchg
and
scas
and
loop
js
mov
cmp
aas
push
pusha
or
jecxz
repnz
mov
xchg
inc
pop
cmp
sbb
popa
fidivs
rcrb
xabort
fsubrp
mov
xchg
std
push
aad
sub
cmpsb
scas
jle
pop
xorb
push
lcall
pop
rcll
js
mov
mov
lods
mov
mov
iret
and
mov
daa
insl
add
mov
sbb
shlb
test
lods
js
shll
imul
xchg
incl
xor
loop
mov
call
mov
pop
add
mov
push
or
mov
dec
aad
in
cmp
sahf
xchg
mov
mov
cmp
inc
stos
mov
movups
or
mov
cld
mov
fisubl
cmp
arpl
xor
adc
dec
sub
inc
xchg
stc
lahf
pop
aam
sub
jae
cmp
add
mov
mov
daa
jl
ss
les
mov
push
enter
xor
add
stos
in
mov
jg
push
scas
push
adcl
in
scas
out
pop
test
pop
add
jnp
lret
inc
inc
es
fidivrs
fdivrs
daa
pusha
dec
xor
addr16
shrl
lea
loopne
sub
adc
jne
fimuls
sub
popf
adc
sub
loopne
mov
test
decb
or
divb
or
xchg
in
dec
push
nop
xchg
mov
stc
push
and
pop
sbb
jecxz
sub
mov
jbe
inc
arpl
in
dec
cld
roll
loopne
push
into
ret
hlt
and
es
mov
ret
mov
sub
mov
xchg
shll
xor
inc
add
push
xorb
adc
mov
jmp
mov
sbb
test
mov
test
and
insb
and
sub
push
lret
mov
aaa
fstl
mov
cmp
xor
addr16
mov
call
arpl
inc
aad
dec
cmc
icebp
dec
mov
and
push
icebp
xchg
lea
and
andl
pop
xchg
xor
dec
xchg
add
push
shlb
cmp
push
fwait
and
sahf
sbb
cmp
out
pop
aam
or
mov
jb
mov
movsl
in
mov
sbb
aaa
call
push
movsb
mov
outsl
xchg
inc
pop
stos
test
sub
stos
fstl
xorb
aaa
lea
jbe
dec
loopne
sub
add
cmp
jnp
xor
mov
cmp
sub
xor
roll
loopne
push
cli
mov
ss
dec
cmp
popf
not
cmp
fstpl
sub
fstpl
push
lods
xchg
or
sbb
sahf
mov
mov
jp
and
bound
sbb
aaa
sub
in
cmp
adc
mov
mov
mov
and
and
xchg
fwait
je
pusha
pop
sti
aas
ror
mov
imul
enter
test
sbb
int3
adc
add
ja
pop
insl
jb
cltd
loope
int3
sbb
mov
ret
repnz
leave
xchg
mov
ret
mov
jb
add
out
out
movsb
aad
jb
rorb
add
sbb
orb
sbb
imul
sbb
imul
aam
test
pop
and
dec
fdivrl
and
adc
pop
push
pop
gs
mov
push
pop
out
or
inc
dec
bound
imul
inc
xor
loop
stos
and
leave
jnp
mov
ds
xchg
out
pop
test
add
cld
aad
add
dec
add
popf
pop
sbb
add
sarb
mov
and
sbb
cmp
les
dec
daa
xchg
xchg
xchg
jo
int3
push
fsubrs
shll
repz
inc
xor
or
aad
and
pop
jb
adc
das
push
js
sbb
test
mov
sti
les
xchg
add
jno
stos
pop
mov
pop
sub
cli
outsl
jne
out
push
popa
fidivl
enter
sbb
cmp
cmpsb
js
add
sub
call
mov
jnp
jb
pop
arpl
push
and
mov
push
inc
cmp
dec
mov
imul
std
arpl
fwait
cmpb
inc
hlt
testb
pop
lcall
icebp
jne
xor
pushf
lret
mov
mov
shr
xor
psrad
add
in
or
outsl
aas
or
cltd
scas
and
pop
loope
scas
aam
push
mov
cs
mov
cmpsb
mov
loop
rcr
mov
pop
adc
sub
int3
push
add
jle
in
inc
scas
jp
add
stc
jmp
cmp
cmp
aaa
mov
mov
imul
mov
jl
scas
stos
inc
and
test
dec
dec
pmuludq
loopne
in
ret
jp
push
popf
les
lds
pop
aas
or
dec
mov
adc
stos
dec
orl
mov
lods
scas
pop
outsb
mov
push
pushf
cs
lds
ret
xchg
mov
call
pushw
ljmp
scas
call
mov
sbb
pop
stc
stos
notb
test
loope
inc
inc
andb
sbb
cmc
addb
ud2
inc
mov
xchg
sbb
loop
pop
leave
add
jl
dec
dec
or
pop
push
sub
out
add
test
xchg
inc
mov
xchg
das
mov
mov
add
push
mov
add
addb
lds
jmp
lret
sub
jg
into
pop
es
loop
lahf
xchg
aam
mov
outsl
dec
test
call
jl
loop
sub
pusha
into
inc
xchg
sub
or
fbld
cltd
je,pt
std
jne
lahf
jo
sub
mov
add
popf
shr
lcall
stos
pop
popf
jl
in
lods
cwtl
cmp
jecxz
sub
bound
loope
in
lock
dec
jmp
int
add
mov
pusha
push
subl
loopne
inc
daa
mov
adc
cltd
enter
pop
cmp
cmp
mov
pushf
icebp
shlb
test
lcall
jnp
test
mov
jmp
mov
out
add
jo
xchg
pusha
xor
aaa
sub
fstpt
dec
stos
xlat
xchg
sahf
inc
mov
add
inc
sbb
ss
aad
in
nop
lea
test
lock
jle
pop
lret
pop
adc
loopne
push
das
adc
mov
mov
out
push
imul
adc
push
mov
adc
fucom
push
mov
pop
fs
dec
iret
pop
cltd
inc
mov
fiadds
xchg
sub
inc
incl
outsl
push
fdivl
call
les
or
pop
shlb
fiaddl
ret
mov
jp
push
movhps
dec
lret
jo
sub
xorl
insb
imul
arpl
adc
in
mov
sub
jge
xchg
in
fidivl
add
sbb
insb
mov
pop
aas
mov
sbb
xor
imul
dec
jecxz
lret
add
xchg
rcll
mov
iret
cmp
xorb
sub
stos
ret
cmpsl
aam
cwtl
mov
jae
mov
mov
push
add
fimuls
lds
test
push
adc
ljmp
testl
in
pop
jg
mov
jecxz
das
lock
jp
test
add
das
or
xchg
cs
jno
xchg
adc
insb
dec
mov
cmp
cmp
jle
mov
mov
flds
or
adc
cmp
or
icebp
mov
mov
inc
cmp
mov
sbb
cmp
inc
fnsave
jle
jl
imul
cmp
idivl
dec
cmc
lret
mov
or
dec
cmc
lds
lcall
scas
dec
fs
push
cmpsl
les
in
out
jb
xor
mov
xchg
push
dec
in
insl
or
ss
rorl
mov
sbb
adc
out
addr16
cmp
cld
out
clc
movsl
mov
pop
fdivrl
test
jge
sbb
int3
aam
or
pop
fsts
pop
add
inc
xor
and
movsb
inc
adc
inc
pop
mov
and
push
mov
and
and
test
push
mov
lea
in
pushf
gs
jb
clc
pop
sbb
imul
dec
test
or
or
push
mov
lcall
and
pusha
mov
jecxz
popa
stc
and
les
add
inc
xor
aas
add
ss
mov
movl
mov
and
xchg
push
inc
les
mov
popa
or
in
xor
aaa
jne
daa
cmc
jae
mov
inc
xlat
sbb
xlat
out
cmp
adc
aas
out
mov
adc
sbb
cmp
orl
xchg
push
ljmp
and
stos
ret
fists
fstp
nop
mov
inc
aam
popa
fisubs
adc
mov
ljmp
packsswb
shl
or
iret
xchg
sti
popf
jle
sub
out
loopne
test
dec
and
add
mov
sti
jae
sbb
scas
xor
out
mov
fidivs
or
clc
inc
dec
dec
and
pop
or
inc
test
test
arpl
mov
ret
sarb
aad
insl
cmp
xchg
call
mov
sahf
daa
pop
sti
std
in
popf
inc
clc
addr16
scas
dec
jns
insb
out
mov
enter
push
mov
xor
push
fucomi
and
rclb
pusha
jns
ss
mov
or
xchg
push
hlt
mov
jecxz
or
xor
popa
aaa
and
and
add
aas
stos
dec
mov
mov
int
arpl
mov
dec
pop
jne
xor
push
push
xorl
sub
inc
orb
mov
jo
jmp
fsubrp
movsl
mov
or
fsubr
test
stc
and
test
cli
sub
push
mov
adc
hlt
aaa
mov
repnz
inc
add
aad
mov
movsl
jne
shr
stc
mov
xchg
sbb
sbbl
popf
stos
pop
dec
or
dec
inc
cmpsl
xchg
mov
aaa
negl
jmp
push
scas
stos
movl
dec
dec
cmpsl
mov
xor
fisubl
pop
jecxz
mov
ret
in
inc
repz
push
pop
pop
sub
gs
fistps
or
sbb
cmp
push
popa
shlb
mov
sub
clc
jecxz
pushf
cbtw
jnp
cs
mov
mov
or
dec
pusha
jmp
rolb
test
pop
addr16
push
js
inc
sbb
sub
aam
lahf
lahf
and
jecxz
xchg
push
xchg
xchg
fmuls
lods
jl
out
xchg
xor
stos
push
mov
and
sbb
jmp
xor
cmp
push
pop
sub
loopne
call
and
adc
jae
popa
jbe
push
cmp
dec
ja
aas
sub
lods
negb
cld
pop
pop
nop
fcomps
inc
jae
adc
shll
lds
xor
cld
enter
push
in
sbb
stos
sub
adc
aam
les
cmp
cmpsl
or
mov
jmp
mov
xor
xchg
nop
cmpsb
mov
leave
es
sbb
jne
mov
and
push
cmp
mov
xor
mov
mov
or
in
push
and
xlat
adc
and
lea
inc
das
sub
pop
or
divb
in
enter
shrd
fildll
daa
xlat
aad
mov
xor
add
or
jno
jl
pop
or
jg
loopne
enter
in
lahf
repnz
jle
dec
push
leave
cmpsl
test
out
xlat
ror
pusha
out
inc
jl
and
imul
jb
in
js
negb
shr
sub
lods
adc
stos
dec
cwtl
pop
cli
pop
xor
mov
cmp
jmp
xchg
ljmp
sbb
xlat
into
xor
les
rol
cmp
xor
sub
jge
fdivl
add
dec
addb
pop
shrl
push
cmpsl
adc
lods
mov
push
xchg
adc
pop
outsb
cmpsb
cmp
mov
adc
shlb
cwtl
mov
sub
add
rorl
cmp
cmp
dec
cmp
shlb
pop
ds
mov
sub
or
push
inc
int
out
jo
xchg
inc
pusha
fs
stc
dec
and
loopne
nop
xor
je
nop
hlt
push
cmp
or
dec
popa
push
mov
mov
cltd
imul
testb
andl
hlt
xchg
ret
movsl
mov
dec
adc
daa
and
ja
mulps
jbe
xchg
fwait
push
xchg
add
ljmp
and
sub
aam
cltd
cmp
mov
mov
data16
out
sub
loope
cmp
lcall
lahf
dec
push
sbb
mov
aas
in
adc
popf
xchg
xor
rclb
jp
xchg
jmp
adc
sarb
mov
hlt
cmp
mov
and
lds
ret
sarb
and
mov
dec
xor
int3
push
xor
imull
test
cmp
loop
or
jo
ljmp
dec
imul
outsl
jno
adc
fs
xchg
in
mov
aam
mov
sub
ds
ret
xor
dec
rolb
mov
pop
inc
add
adc
mov
xchg
adc
push
ja
mov
xor
inc
cltd
push
pop
jge
nop
insb
jmp
aam
lret
jns
jg
dec
in
icebp
cmp
insl
or
leave
pop
add
push
push
xchg
leave
sbb
add
pop
mov
int
push
ret
xchg
movsl
addl
sarl
rol
xchg
or
dec
push
int
insb
lods
jns
cmp
xchg
xchg
push
inc
out
cli
popa
mov
sahf
jl
push
xor
jle
leave
daa
mov
cli
jge
adc
xor
jo
bound
lcall
ret
fbstp
mov
sti
adc
psubsw
ret
das
jmp
fidivs
call
enter
xchg
sbb
popa
ja
jbe
sbb
jae
hlt
push
mov
loop
stos
xor
mov
call
or
scas
decb
pop
movsl
outsl
scas
sti
or
dec
mov
popf
loop
imul
add
push
xor
cmp
mov
dec
hlt
addb
arpl
jne
mov
pop
push
mov
popf
repz
shrl
adc
loopne
lcall
or
ljmp
and
sbb
fldt
test
mov
cmp
mov
mov
js
cmp
add
arpl
push
cld
jb
andb
mov
sti
lret
mov
sahf
and
roll
mov
sub
lret
pushf
lret
in
and
popf
sub
xlat
mov
xchg
add
cltd
addr16
pop
fbld
stos
mov
push
je
sbb
push
stos
ljmp
repnz
mov
in
loopne
sub
mov
xor
add
jnp
sbb
mov
pop
mov
inc
cmp
fcmovnb
add
ljmp
jle
mov
test
cmp
stc
xor
add
push
xchg
in
pop
mov
addr16
aas
imul
mov
lods
push
ss
mov
lea
pop
and
fninit
cltd
mov
jge
lods
pop
outsb
sbb
cmc
push
and
mov
jle
adc
movsl
stos
arpl
icebp
xor
pop
cmp
pop
or
fildll
dec
inc
and
mov
icebp
push
pop
sub
mov
push
inc
mov
pop
xor
fidivrl
icebp
inc
sbb
mov
sbb
xchg
xchg
loop
mov
clc
jo
mov
mov
pop
pop
push
xchg
es
cli
mov
jnp
dec
imul
hlt
mov
popa
or
sub
ret
mov
or
les
jns
bound
stc
stc
inc
or
xor
roll
lcall
in
and
pop
mov
mov
or
xchg
out
xor
or
pop
add
popf
jbe
or
push
out
sbb
mov
es
inc
sub
cltd
sub
and
adc
mov
sahf
sbb
out
mov
iret
add
insl
inc
push
hlt
push
push
ror
push
pop
adc
push
mov
lods
daa
and
cmp
cmpsl
mov
pop
and
aas
shlb
xchg
push
clc
lock
popf
and
cmp
push
shrl
dec
sbbl
rcrb
repnz
add
jge
imul
sbb
call
lods
add
in
jge
mov
into
hlt
addr16
or
inc
xchg
out
adc
adc
mov
sub
int
mov
adc
mov
or
inc
cs
mov
fs
push
push
pop
inc
ret
call
xchg
and
adc
jmp
mov
adc
das
shl
outsl
xor
loopne
fcoml
push
ss
into
mov
les
add
pop
insb
adc
xchg
sub
mov
mov
sub
cmpsl
sbb
mov
daa
inc
ljmp
fstpt
fcmovu
call
cwtl
pop
imul
sub
sbb
mov
popa
adc
mov
cmp
dec
das
addb
sbb
decb
jo
fistps
popa
pushf
movsl
mov
lret
mov
jl
jo
mov
ljmp
push
mov
shll
jne
mov
aas
movsb
jecxz
mov
cmpsb
insb
das
mov
imul
aam
and
jo
mov
shlb
ret
repnz
sti
pushf
outsb
push
fucom
outsl
cmp
sbb
mov
sbb
push
and
arpl
xchg
adc
gs
ret
inc
repz
ds
dec
les
add
pop
or
and
sub
mov
loope
mov
sbb
cld
mov
dec
bound
mov
mov
cmp
loopne
cli
int3
faddp
lock
in
jp
aad
add
sbb
jnp
fldt
clc
inc
insb
cmpsb
arpl
or
stos
jp
icebp
or
and
cmpb
stos
sbb
ja
and
adc
push
add
sbbl
dec
jns
bound
inc
mov
lret
inc
les
out
lods
sti
jle
mov
je
popa
push
xor
adc
jg
outsl
cld
js
push
pusha
mov
mov
shl
in
cwtl
push
cmpsl
lahf
mov
fs
cmp
clc
sbbl
rorl
adc
jp
jg
mov
xor
and
xor
fists
fcmovne
xlat
pop
xchg
iret
lea
mov
push
sti
fdivrs
cmp
mov
xchg
cltd
jne
mov
mov
mov
pop
or
cmpl
lahf
outsl
imul
test
xchg
scas
out
xchg
into
sbb
test
mov
frstor
xchg
sub
adc
rorl
sbbb
sbb
jl
imul
xlat
mov
in
mov
jp
mov
lds
sub
sbb
mov
cmp
jnp
sub
inc
std
sbb
insb
sub
add
stos
push
dec
xchg
push
jbe
rcrl
in
push
into
pop
xchg
pushf
in
cltd
xor
pushf
add
dec
out
dec
cltd
das
jae
xor
loopne
ret
fidivl
mov
mov
xor
pop
mov
mov
xchg
sub
jb
jl
pusha
dec
jl
jp
push
ret
les
xchg
and
xor
hlt
pop
ret
cli
xchg
mov
mov
shll
cmpsb
stos
mov
jno
dec
jle
arpl
xchg
mov
ja
cmp
ss
cmpsl
cmp
clc
mov
imul
or
xchg
cltd
xor
lds
pushf
insl
and
jnp
int
dec
pop
jo
rcl
pop
cs
aad
lcall
pop
mov
dec
inc
sub
add
dec
push
stos
inc
scas
fistpl
ja
xchg
mov
test
mov
stos
jle
jns
test
or
mov
iret
adc
or
sub
adc
add
sbb
add
push
js
xchg
movsl
and
rcr
dec
mov
movsb
nop
les
shlb
inc
mov
ja
sarb
mov
jle
lret
pop
add
push
out
sbb
les
repz
adc
fcomip
xor
in
push
pop
out
pop
cmc
pushf
dec
fnsave
dec
mov
adc
inc
push
cmc
loopne
mov
sbb
push
adc
and
jmp
data16
pushf
pop
pop
push
lret
les
inc
mov
cmpl
mov
cmp
inc
aad
mov
orl
cmp
addb
out
jp
movsb
pop
xchg
stos
out
insb
lret
hlt
or
pop
fisttpl
ret
call
xchg
and
add
lds
mov
xchg
dec
mov
hlt
adc
inc
jno
push
cmp
jne
pop
mov
xor
insl
test
cwtl
les
dec
push
rol
pusha
sarl
rep
lock
xchg
leave
mov
cmc
and
call
daa
fnstenv
outsl
lods
jne
lcall
das
xchg
xlat
call
sbb
dec
xchg
test
jmp
lock
adc
shrl
pop
repnz
mov
jge
fisttpll
mov
lds
push
test
rcr
xchg
xor
mov
js
pushf
sub
outsl
shlb
nop
mov
in
cld
arpl
xchg
test
jmp
inc
lahf
test
sub
mov
test
push
sub
pusha
dec
ret
inc
push
inc
mov
lods
ret
hlt
out
mov
inc
pop
das
aaa
loop
cli
das
jb
push
pop
test
insl
test
jle
jge
sahf
sbb
fadds
lret
out
cmp
mov
fldl
jmp
mov
dec
cli
pop
das
cli
lods
aam
xor
or
icebp
jb,pn
or
orl
icebp
inc
lcall
inc
sub
inc
pop
cmp
lahf
jne
test
mov
dec
add
stos
pop
mov
dec
iret
jns
push
xchg
leave
sub
adc
xchg
leave
mov
inc
out
xor
jp
cli
pusha
ret
enter
stos
lret
lods
imul
cmp
jo
movsl
sbbb
mov
fsubrs
insb
out
adc
aad
mov
test
push
loope
sub
aas
pusha
stos
lret
sbb
add
rclb
std
and
jns
aas
mov
push
dec
lahf
pop
cmp
push
xchg
cld
pushf
jbe
mov
dec
adc
xor
pop
cld
cmp
js
mov
fstps
jb
sbb
push
mov
imul
rolb
mov
pushf
repnz
push
jae
jge
loop
jp
sbb
icebp
fwait
mov
jae
ja
push
lods
ss
fimull
and
dec
add
cmpsb
add
enter
out
ds
nop
outsl
dec
cld
xchg
lahf
mov
fs
cli
fistl
cmpl
adc
xchg
nop
cli
inc
or
cmp
xor
icebp
sbb
test
daa
xchg
push
dec
mov
push
test
push
sahf
push
fistpll
lret
adc
or
fscale
out
pop
push
ret
mov
movsl
pop
shrb
int3
fists
xlat
jno
add
jl
out
pop
xchg
mov
sub
xchg
pop
jle
pop
rol
and
fucomip
clc
scas
lds
and
push
dec
mov
ficompl
cwtl
sub
scas
pop
lcall
pusha
pop
xor
lds
xorl
ret
outsb
jmp
scas
push
filds
hlt
bound
aam
scas
test
push
js
mov
mov
dec
xchg
movsb
xor
or
pop
testl
mov
jns
cmp
test
xchg
pop
mov
push
cld
vpaddusw
subl
mov
ror
mov
stos
inc
ret
mov
stos
lret
movsl
bound
inc
push
jecxz
movsl
or
dec
sarl
mov
xor
mov
lea
mov
or
insl
mov
or
dec
pop
adc
lods
pop
fsub
sbb
out
mov
or
insl
dec
pop
cli
test
mov
mov
sti
test
cmpsl
mov
loopne
push
xor
dec
adc
xlat
inc
lret
push
in
ds
or
aam
or
data16
sahf
fcoml
rcrb
pop
fildl
pop
sub
or
inc
nop
xchg
in
xor
icebp
sbb
mov
mov
icebp
leave
int
cmp
mov
push
jae
fs
loope
sbb
loope
out
ret
movsl
sbb
inc
push
mov
push
and
mov
jp
pop
mov
data16
xlat
pusha
aam
push
fimuls
mov
dec
ret
out
fbstp
in
into
stos
mull
pop
test
dec
push
and
shlb
xchg
mov
jle
arpl
pop
imul
sub
xor
sti
addl
in
movsl
fsub
dec
shll
ja
cmp
in
fcomps
or
dec
mov
xor
dec
adc
ja
in
inc
mov
je
pop
hlt
cmp
mov
popa
lds
lock
incb
popf
mov
cmpsb
test
test
sbb
data16
mov
xchg
lret
insb
xchg
out
arpl
aaa
stos
push
cmc
addr16
sub
push
ss
push
mov
jno
adc
push
mov
lods
nop
pop
ss
dec
sub
punpckhwd
mov
ror
int3
sub
adc
pop
cmp
and
xor
adc
arpl
jne
scas
iret
cmpsl
sub
mov
stc
repnz
and
push
loopne
sbb
jo
in
lock
inc
mov
mov
mov
les
sbb
in
scas
inc
and
je
mov
adc
pop
ret
iret
inc
mov
sahf
lahf
adc
xchg
push
out
push
and
mov
inc
mov
mov
and
and
mov
mov
and
cmp
test
loopne
nop
ffree
fdivrl
xor
in
or
jmp
out
mov
add
ja
sahf
push
repz
pop
aas
add
lds
mov
enter
loop
cmc
push
lods
test
mov
mov
out
xchg
pop
xchg
outsb
fadds
nop
mov
mov
js
cmp
arpl
lret
or
and
push
and
cmp
pop
iret
aad
out
jle
jecxz
das
add
in
or
pop
xor
test
mov
scas
arpl
outsb
rorl
aam
mov
mov
jo
and
pop
fidivrs
icebp
int
cs
mov
mov
popa
push
mov
sarb
sub
and
mov
pop
dec
add
pushf
rcll
into
fstl
nop
movsl
aas
xor
adc
cmp
dec
dec
push
outsb
enter
andb
mov
inc
sub
addr16
jmp
inc
xchg
fs
lock
outsl
cmp
ret
das
and
lcall
mov
gs
cmpb
fisubrs
out
in
adc
xor
mov
out
pop
mov
pushf
xor
cli
scas
pop
out
stos
inc
je
jg
jnp
add
push
lock
push
test
sub
pop
mov
pop
jmp
into
icebp
inc
mov
loop
addr16
jne
ret
stos
or
pop
dec
pop
test
xor
pusha
es
ja
testb
inc
loop
sub
add
add
movsl
in
cli
test
int
xchg
add
mov
xchg
inc
add
mov
inc
lcall
xchg
pop
push
inc
add
repz
jns
rcr
mov
aas
int3
setae
xchg
xlat
dec
cmp
scas
lods
in
push
daa
imul
pop
cmp
pop
push
imul
mov
xchg
cli
mov
cmp
addb
insl
pop
js
adc
sub
fldt
int3
repnz
es
and
insb
js
in
popa
or
mov
jmp
inc
mov
push
xchg
outsl
mov
xor
fsubl
inc
imul
mov
xor
jl
repnz
enter
loop
lds
xor
or
or
scas
add
and
movl
pushf
test
mov
js
decl
push
inc
inc
lds
es
xchg
ja
fbstp
xchg
out
test
es
xchg
push
fnstcw
imul
dec
subl
sub
outsb
push
jecxz
aad
loopne
mov
pop
int
enter
xor
cwtl
mull
test
pop
mov
xlat
xchg
or
pop
dec
jge
ja
add
iret
stos
mov
stc
repz
mov
cmp
aaa
push
dec
lea
cmp
out
push
loopne
js
cltd
push
add
lock
jle
das
mov
push
adc
or
jle
mov
cmp
cmpsl
out
lods
mov
shlb
mov
fsubrs
xor
pop
mov
jae
incb
push
mov
dec
sub
inc
fs
adc
fmuls
mov
sahf
lahf
stos
ljmp
fnstenv
test
je
jl
and
filds
je
mov
pop
cmp
push
or
jecxz
mov
ret
in
test
jne
mov
data16
or
push
and
in
lret
push
or
hlt
jb
sbb
loope
xchg
pop
inc
jbe
or
ficompl
std
jmp
jp
inc
addr16
pop
adc
out
ljmp
cltd
outsl
into
cmpsb
xchg
mov
jl
imul
push
jnp
sub
inc
stc
loope
adc
rcrb
mov
and
int3
mov
ret
jg
mov
add
gs
sub
jle
int3
xchg
adc
stc
or
cmp
add
shlb
sahf
scas
inc
xchg
outsl
xor
xor
mov
jl
and
in
sbb
jb
sub
dec
enter
js
cmpsb
das
xor
mov
scas
loope
cmp
out
enter
loopne
shrl
addr16
arpl
cmpl
sahf
push
mov
sahf
push
lret
or
dec
mov
arpl
jne
in
loope
out
bound
popa
xor
jg
iret
or
push
insl
add
es
mov
sub
ret
dec
out
xor
in
and
xchg
js
push
fdivp
dec
or
inc
sub
cli
jmp
mov
and
cmp
jecxz
aaa
out
lahf
aaa
das
cmc
push
int
cmp
cmp
lods
cwtl
js
mov
jp
pop
jns
xchg
les
fiadds
add
xor
ret
out
es
cli
outsb
fs
xor
cmp
xor
or
movsb
push
jle
int
jb
dec
cltd
arpl
decl
data16
lcall
imul
xchg
jmp
xchg
inc
mov
pop
xor
scas
rclb
inc
adc
xor
dec
xchg
lods
and
jl
stos
xchg
js
xchg
sbb
sbb
std
dec
test
fisttpl
jo
add
push
int3
jl
cld
iret
in
ret
mov
mov
jmp
mov
mov
popa
push
xor
adcl
out
sub
aad
xlat
mov
insl
dec
xlat
mov
sbb
sahf
jns
lock
push
cmpsb
ret
xor
shl
stos
sub
and
adcb
push
mov
dec
adc
jmp
pop
and
xor
add
and
cmp
mov
mov
cmp
out
ja
adc
sbb
pop
jmp
notl
inc
adc
pop
call
cmc
int3
mov
lock
jle
jp
ja
hlt
push
stos
and
push
inc
push
mov
xor
test
je
cmpsb
subl
mov
ljmp
cmp
or
bound
add
stos
or
mov
mov
xor
sarb
pop
mov
cmpsb
jo
lods
pop
std
loop
stc
sti
push
nop
fdivrp
bound
dec
dec
adc
mov
shll
mov
fisttps
cmp
xlat
neg
in
lock
xchg
aad
xchg
pop
mov
mov
popf
sbb
pop
hlt
xchg
mov
int3
movsl
scas
adc
mov
sub
push
loop
and
xor
jl
std
cmpsb
fisubl
notl
xchg
in
and
fistpll
fnstsw
pop
les
je
xchg
jl
lcall
adc
sti
data16
outsb
push
jne
and
stos
cmp
sub
sbb
push
aas
ja
fimull
dec
pop
es
enter
aaa
jo
ffree
or
mov
int
out
lret
jp
and
insl
push
mov
js
push
jne
dec
in
jg
in
mov
jecxz
mov
addr16
dec
sub
repnz
adc
mov
call
mov
cmpsb
dec
adc
test
and
cmp
mov
pusha
mov
cmc
push
and
or
sbb
jecxz
test
xchg
cmpsb
divb
mov
dec
xchg
ja
xchg
mov
adc
and
sub
and
jnp
jae
in
jp
ret
mov
xor
push
xchg
lahf
cmp
push
lcall
lods
mov
ret
jne
aam
repz
push
outsl
push
movsl
repz
jge
adc
lahf
xchg
jnp
mov
mov
add
sub
aam
mov
movsl
jl
ds
fcmove
push
adc
jns
nop
inc
sub
mov
inc
sbb
les
mov
push
cmp
xchg
ret
loop
push
jge
adc
frstor
or
push
cli
je
sub
push
repnz
fs
mov
or
jmp
stos
xchg
ror
ret
jmp
dec
mov
data16
mov
jmp
mov
xor
mov
push
fistpl
pop
cltd
sahf
push
pop
pop
pushf
jb
out
inc
push
les
sbb
mov
leave
xchg
sahf
movsb
leave
mov
adc
movsb
mov
and
rcrl
sbb
test
or
imul
stos
call
inc
mul
push
xor
lock
dec
jge
push
lahf
stos
stos
int
ja
cmp
sub
cmp
xchg
das
fiadds
outsb
js
rcrl
inc
fisubrs
out
imul
rol
or
xchg
repz
pop
dec
inc
imull
jb
mov
loopne
scas
xchg
adc
les
in
xor
lret
repz
js
insb
test
xchg
inc
sub
jl
cmpsl
pop
pop
adc
je
sahf
rcrl
sbb
aad
in
jb
xor
mov
ret
mov
mov
clc
add
cmp
and
mov
inc
lock
xchg
push
sub
arpl
es
in
dec
adc
xor
xchg
push
pop
add
cmp
inc
imul
insl
jg
dec
sub
add
lret
mov
sub
fmuls
jb
push
mov
loop
lods
sbb
xchg
imul
mov
lret
jg
mov
sub
jbe
push
push
jb
pusha
push
lock
outsl
sbb
arpl
xor
movsl
mov
sbb
or
or
cmpsb
and
sbb
mov
pop
and
shrb
and
fdivl
addr16
or
pusha
pusha
or
aad
mov
out
adc
decl
dec
xor
aam
mov
rclb
adc
pusha
add
in
out
push
lods
shrl
mov
push
dec
sub
fstpl
dec
sub
pop
adc
mov
shll
push
lcall
push
mov
sti
repnz
xor
daa
fwait
lret
cmpsl
sbb
das
shrl
xor
loopne
arpl
cmp
lock
fstpl
mov
push
lock
loopne
orb
out
cmp
inc
mov
mov
popf
adcb
push
fistps
and
pop
xor
xor
shrl
ss
dec
cmp
repz
adc
xor
repz
add
lea
pmaxub
cmp
push
pop
jg
sub
jne
adc
stos
jae
push
inc
jne
in
lret
dec
pop
adc
xchg
dec
mov
js
sti
aad
int3
xchg
sub
movb
mov
inc
bound
xchg
out
shrl
cld
orb
out
test
xchg
xchg
mov
xchg
jae
xchg
cmp
shll
mov
push
pop
adc
inc
cmp
pop
inc
inc
cmp
unpckhps
cmp
mov
into
sti
cmpsb
cwtl
int
out
mov
adc
lock
and
frstor
push
pop
lods
jg
sub
mov
sar
rorb
in
imul
rcrl
mov
push
mov
xor
repnz
dec
in
insl
cltd
push
mov
cmp
jae
mul
test
ss
xchg
das
mov
xor
les
push
mov
aas
xchg
inc
inc
dec
data16
test
dec
cmp
shll
push
mov
ret
push
mov
mov
pop
cmp
fidivrs
ljmp
jl
in
lahf
out
sahf
adc
push
fisttps
or
xchg
push
mov
insb
into
sbb
popa
xchg
add
cltd
stc
mov
and
mov
incl
or
jne
mov
sub
mov
call
out
xchg
out
jne
lretw
mov
dec
in
arpl
dec
and
stc
rolb
cmc
js
scas
xchg
fcom
push
pop
outsb
test
jb
out
mov
and
mov
jg
push
movsb
pop
push
outsl
decb
sbb
adc
lea
add
call
lret
daa
lods
adc
push
cmpsb
or
add
mov
jno
lods
dec
jno
sbb
push
aad
pusha
mov
mov
push
adc
pop
dec
jle
cs
cltd
pop
mov
mov
mov
dec
mov
fisttps
pop
xor
ja
push
pop
inc
cs
scas
cmpsb
xor
inc
push
inc
call
add
les
and
xchg
cmpsl
xchg
sar
xchg
dec
mov
ret
clc
jge
fisubs
mov
push
movsb
xchg
fsubl
imul
stos
xchg
rcll
std
sbb
xchg
lea
sub
daa
shll
aaa
cmp
jl
push
mov
es
mov
jecxz
scas
pop
mov
in
xchg
test
cmpsl
shl
dec
dec
es
enter
ret
jno
add
sarl
mov
mov
mov
xchg
adc
lods
popa
sbb
out
cli
cmc
jae
stc
mov
adc
xchg
clc
adc
add
cmpsb
cwtl
jnp
or
sbb
daa
jl
pop
xchg
pop
mov
insb
sub
sahf
dec
sti
and
subl
mov
xchg
scas
push
sub
mov
int3
jp
imul
aad
fsubrp
je
ljmp
sbb
sbb
push
pop
push
std
mov
mov
fisubrl
fidivrs
cmp
cmp
xor
popf
jnp
and
pop
or
dec
lcall
sub
int3
out
inc
ss
cmc
xchg
jl
les
ds
push
movsb
mov
sbb
mov
jle
jmp
outsl
jge
mov
in
and
aam
mov
push
mov
push
mov
pushf
pop
push
sbb
inc
add
dec
cld
xchg
out
jo
mov
cmp
loopne
push
xor
jle
jl
inc
pop
add
pop
push
dec
and
xor
xchg
xchg
and
push
cmp
and
repz
fimuls
fs
je
xchg
test
lcall
jbe
cmp
cmpb
mov
imul
push
stos
pusha
mov
icebp
sbb
push
std
cmc
xchg
sbb
jmp
sbb
xor
popa
mov
outsl
dec
movsb
aaa
sbb
testb
popa
jp
mov
sub
jge
and
fdivr
arpl
fnsave
mov
sahf
xchg
xchg
outsb
xchg
inc
jg
lcall
std
rcr
cld
test
lret
pop
xor
fstpl
js
and
xor
adc
mov
mov
fidivs
stos
jge
push
sub
xchg
ja
flds
cmp
xchg
inc
clc
fwait
clc
call
jle
push
pop
fdiv
pop
out
pop
enter
dec
fdivr
xchg
notb
in
call
dec
mov
repnz
sbb
sbb
lock
pop
subb
cmp
mov
sarl
aaa
in
jo
hlt
xor
rcrb
pop
jo
and
loop
imul
xchg
ficoml
inc
je
xchg
push
fsubl
repnz
sub
sub
in
clc
call
mov
test
xor
cmpsb
fldcw
lods
xor
jge
pop
or
int3
lea
sti
sub
sbb
or
xlat
push
xorl
stc
or
and
or
pop
mov
adc
dec
rorl
pop
hlt
xlat
or
rcr
scas
push
popa
lods
es
pop
pop
and
dec
cmp
add
sbb
xor
jl
imul
push
cmp
sub
or
add
xchg
sbb
pop
inc
ja
xlat
test
je
fdivrl
fidivrl
jg
push
fidivl
mov
cli
mov
mov
sub
fnstsw
ret
shrb
push
lea
cmp
repz
loop
dec
inc
lods
mov
popa
mov
insb
mov
mov
movsl
cmpb
cmp
icebp
std
sub
addr16
xchg
mov
outsl
pop
cmc
pop
cmpl
ret
shl
add
push
add
int
sbb
mov
cmp
lret
inc
cwtl
dec
xlat
cli
cld
jg
lods
xchg
roll
sarb
mov
int3
shlb
les
mov
and
gs
mov
pop
jae
stos
push
cmp
fcomi
subl
pop
adc
pusha
dec
push
pop
and
mov
pop
mov
inc
cld
xor
push
jbe
inc
fwait
in
outsb
std
sub
adc
xchg
fiadds
aad
jg
dec
xchg
data16
add
mov
inc
fsubrl
dec
xor
hlt
pusha
leave
sub
inc
jl
or
xor
xchg
ljmp
dec
xor
repz
cltd
loope
clc
pushf
xchg
movsl
cmp
dec
jae
lcall
push
stos
lock
mov
lret
js
dec
fisubrl
cmpsl
outsl
shrl
shrb
and
mov
sti
aas
lret
xor
add
adc
mov
fimull
sahf
lret
lret
loop
testl
and
mov
ss
mov
leave
or
orb
push
and
ljmp
test
push
jmp
insl
pop
push
push
sub
xor
stos
es
fisubrs
sub
pop
push
cmp
mov
dec
arpl
adc
sub
adc
rolb
scas
adc
subb
and
js
and
lods
das
hlt
mov
arpl
jne
and
das
rorl
push
sahf
adc
inc
dec
pop
shrb
mov
icebp
mov
in
mov
js
xchg
add
mov
mov
push
in
add
pop
pusha
push
leave
cmp
push
cmpsb
or
inc
dec
lcall
call
data16
scas
sub
or
in
lret
stos
pop
inc
incl
pop
rcl
iret
sbb
push
pop
dec
sub
mov
cmc
xchg
into
jle
mov
lea
cmp
pusha
dec
js
out
and
mov
and
dec
das
mov
mov
xchg
jmp
cli
cmp
mov
or
cwtl
std
outsl
in
and
cmpsb
scas
ret
jecxz
xor
push
jb
stc
rcll
jno
jo
subb
lds
push
cmpsb
jmp
hlt
add
das
lcall
scas
mov
adc
movsl
mov
inc
repz
mov
cs
sbb
call
les
cmp
xchg
imul
jle
sbb
mov
push
adc
popf
or
das
or
fisubrl
insb
dec
addr16
mov
add
cs
rcll
adc
clc
mov
push
add
mov
jno
dec
insl
repnz
jb
jae
inc
pop
pop
and
repnz
jo
xor
jecxz
std
dec
jno
cmp
sub
cmp
repnz
aam
and
aad
in
mulb
mov
sti
hlt
mov
push
lret
loope
in
sub
xor
fprem1
outsb
fadds
lods
out
popa
test
scas
movsb
cmpsl
leave
push
leave
mov
gs
push
mov
aaa
pop
das
ss
fwait
or
clc
loope
pusha
xchg
aas
sub
std
div
xchg
add
sub
je
cld
out
mov
mov
pop
in
or
test
sub
stos
movsb
pop
inc
add
pop
mov
mov
and
arpl
aad
mov
push
push
mov
addr16
ljmp
jl
mov
leave
adc
mov
loop
pop
jbe
mov
rorb
inc
dec
mov
in
out
lock
mov
xchg
movsb
test
dec
lds
dec
cmp
loop
xor
push
cltd
xchg
outsl
jmp
push
les
mov
lods
aas
add
out
mov
out
or
sbb
mov
rcrb
dec
popf
aaa
xor
push
mov
or
sti
jp
mov
mov
mov
cmpsb
push
pushf
aas
insb
mov
mov
mov
adc
into
push
mov
sbb
mov
push
bound
and
xor
popf
testl
or
cmc
and
mov
movsl
movsb
sbb
sbb
pop
cmp
lock
sub
int
or
fmuls
sub
cmp
sbb
mov
add
lods
push
push
aas
push
lds
rol
sub
test
imul
inc
rclb
and
pop
xorl
fisubl
lds
mov
inc
cmp
cmp
sbb
sub
repnz
fbstp
pop
aad
jecxz
imul
out
lea
xchg
pop
add
fiadds
aad
add
ret
mov
mov
rclb
hlt
lods
rcl
mov
jbe
enter
aaa
mov
in
lea
adc
mov
inc
insb
dec
jmp
mov
lcall
cmp
sub
xor
les
sub
push
push
loop
push
push
push
pop
push
outsl
adc
or
arpl
enter
pop
cmp
sbb
cmp
jno
pop
push
int3
loopne
loop
jnp
fcompl
dec
mov
and
test
sbb
aas
inc
pushf
adc
shl
imul
fisubrl
movsb
xchg
sbb
sbb
cmp
xor
xlat
in
push
add
pop
xor
sahf
xor
aad
fnstcw
lds
cld
mov
cs
cmp
rclw
rcl
push
and
cmp
push
add
test
stos
idiv
iret
and
mov
xchg
pop
das
add
shll
daa
jge
sbb
xchg
pop
fstps
lds
push
mov
adc
sbbb
mov
jns
mov
push
xchg
jle
pop
iret
insl
cmp
mov
xchg
sbb
lock
aas
sbbl
xchg
fildl
inc
aad
lcall
dec
xor
dec
rcll
sti
mov
sbb
hlt
mov
inc
push
aad
test
packssdw
lock
adc
les
leave
cmpsl
adc
mov
cmp
fnstenv
ret
cmp
iret
aad
and
push
xchg
notb
pop
pushf
mov
repnz
inc
rclb
adc
test
xor
mov
push
cli
inc
iret
hlt
mov
outsl
pop
add
jnp
pop
inc
outsl
pop
loopne
xchg
pop
aam
stos
insb
xchg
or
sbb
xor
push
outsb
jae
adc
cltd
xchg
xor
mov
icebp
scas
aaa
push
xchg
xor
mov
ljmp
in
and
pop
insb
arpl
gs
dec
dec
xchg
aam
mov
les
sub
aaa
out
jg
mov
xchg
xchg
xchg
xchg
aaa
mov
sub
or
mov
xor
cmp
jle
ja
ret
popa
in
iret
jp
or
mov
dec
lock
and
mov
andb
mov
addr16
mov
xchg
sbb
loope
pop
cmpsl
lahf
je
cmp
jns,pt
incl
mov
roll
scas
jp
adcl
aad
push
ljmp
pop
xchg
dec
jae
push
shl
push
test
lea
dec
ljmp
in
cmp
das
lods
roll
dec
js
mov
movsb
xchg
icebp
or
arpl
inc
movl
shrb
mov
popf
js
push
push
pop
or
call
pop
pusha
sub
cs
cli
pop
and
pop
ss
outsb
mov
rcrl
jmp
rorl
lea
pusha
mov
fsubs
lock
xor
fxch
jo
jp
sub
mov
jo
jne
test
test
out
add
addl
xor
test
fstpl
outsl
mov
test
int3
sub
pop
andl
popf
hlt
in
in
dec
lahf
lcall
xchg
mov
aad
jmp
fcomp
fsubrl
cli
leave
add
add
inc
cld
int3
dec
xchg
mov
roll
xchg
mov
cmpsl
and
push
roll
fwait
icebp
sahf
dec
sub
in
xchg
fs
decl
dec
cbtw
jns
jecxz
out
cmpsl
jo
jle
pop
xchg
scas
xchg
pop
cmp
xor
stos
adc
and
and
pop
xor
jecxz
aad
ljmp
outsb
push
ljmp
out
stos
jle
xchg
push
in
sbb
xor
fisubs
sub
sbb
mov
popa
lahf
fbstp
mov
aam
stc
loopne
in
iret
loop
cmp
repz
push
repz
std
out
sbb
cltd
adc
aas
push
mov
mov
adc
sbb
outsl
cld
decl
inc
pop
jne
cs
pop
lea
daa
stc
dec
daa
imul
push
lret
loope
cmc
jmp
pop
jp
mull
pop
pop
xorb
ret
shr
out
and
test
xor
adcb
aam
outsb
lock
rcrb
cmc
push
stos
xor
es
add
mov
ljmp
sbb
lods
push
bound
adc
cwtl
jle
xor
and
cmp
add
lods
popf
pop
pusha
repz
incb
aam
push
add
insl
inc
js
rclb
cmp
ja
pop
push
xchg
arpl
fdivrl
xor
das
mov
stos
insl
adc
push
pop
cmp
mov
stos
jbe
rcl
cltd
enter
mov
mov
aam
fisttpl
add
lcall
sahf
lret
mov
mov
fiaddl
into
jne
movaps
adc
push
lret
sahf
adc
rcrl
or
mov
icebp
pop
in
cs
aas
popa
pop
and
mov
inc
sbb
out
test
sub
dec
out
insb
std
or
xchg
dec
and
out
movsb
pop
cli
xchg
cmp
arpl
and
addr16
leave
sub
mov
sbb
test
mul
sbb
enter
fidivs
daa
fwait
xchg
aam
mov
rcl
cwtl
repnz
repz
push
sub
mov
jge
cmp
div
in
into
xor
sbb
sub
xchg
xor
shl
inc
xlat
cltd
aas
jns
aaa
rorl
leave
lcall
jp
nop
jbe
xor
add
jge
ljmp
out
add
dec
popa
mov
mov
adc
inc
jl
xchg
mov
mov
popf
mov
shr
inc
lret
lahf
pop
xchg
xor
sub
pushf
sbb
sub
lock
xchg
add
lods
inc
dec
inc
pop
pushf
fcomi
lods
push
sub
pop
mov
fisttps
dec
mov
fldcw
jae
or
fsubs
movsl
fs
lea
popa
push
pop
mov
inc
jge
jecxz
cld
dec
stos
mov
jbe
lahf
negb
pushf
pop
push
mov
bound
stc
xchg
sbb
sub
xlat
outsl
mov
call
adc
icebp
jmp
xor
jecxz
int
mov
pop
andl
and
cmp
andl
mov
ss
mov
fadds
push
scas
ret
push
xor
mov
sub
fsubrl
push
jmp
imul
iret
lcall
push
loopne
scas
jmp
ret
lea
orl
mov
clc
lahf
pushf
ss
xchg
adc
push
ljmp
mov
mov
push
pop
lcall
xchg
pop
ret
push
cld
int
sub
push
mov
mov
jo
dec
aad
arpl
mov
fisttps
mov
inc
mov
cwtl
mov
test
es
jae
sub
xchg
mov
ror
pop
add
jl
inc
mov
add
sub
inc
mov
in
icebp
dec
mov
fistl
leave
int3
pusha
enter
jl
add
jmp
and
ret
aaa
fnstcw
sbb
dec
lcall
insl
inc
xchg
xor
add
push
pop
add
xor
and
pop
addr16
sbb
or
push
popa
gs
and
add
cmp
cmp
cwtl
xlat
js
mov
insl
dec
push
or
mov
sub
cli
repnz
jp
iret
sub
js
jnp
mov
cmovge
rcr
lret
sti
sub
jmp
push
repz
xor
in
sub
lret
icebp
jge
popf
xor
out
mul
stc
cs
adc
mov
xor
or
adc
je
ret
jo
push
insl
inc
and
shl
ss
movsl
dec
xchg
stos
and
push
lcall
mov
sub
ficompl
icebp
fistpll
jle
addb
pop
dec
andl
and
xchg
cmc
ret
ret
push
push
inc
add
cmp
inc
mov
aaa
iret
lcall
dec
push
mov
xchg
retw
pusha
lcall
insl
enter
mov
sub
stos
jnp
fwait
in
lods
out
xor
fs
sub
adc
fildll
js
addr16
xor
lea
cmp
and
cwtl
mov
mov
imul
and
bound
pop
sahf
inc
daa
mov
push
ds
cmc
out
loopne
sub
inc
dec
xchg
adc
pop
into
cmp
mov
std
lods
push
fiadds
push
shl
add
nop
test
jl
imul
test
xor
leave
mov
repz
xor
sahf
loop
loopne
imul
das
loopne
and
out
inc
jmp
std
shrb
cmp
rolb
push
mov
hlt
pop
or
aam
pop
push
loopne
mov
mov
lods
inc
add
outsw
frstor
xor
lods
and
dec
mov
cmp
jo
inc
cmp
fimuls
and
or
ljmp
imul
inc
xchg
repz
add
rorl
fisubs
scas
fldl
jge
popa
mov
insb
mov
loop
dec
xchg
fucom
aam
push
mov
shll
loop
repz
inc
jb
sbb
dec
push
fcmovnbe
dec
gs
sbb
inc
scas
inc
and
dec
cmpsb
mov
cmpsl
stc
sbb
sbb
fwait
push
xorl
std
dec
jge
pop
jnp
jne
sbb
lcall
xchg
test
lds
out
sub
fcoms
addr16
dec
ret
push
and
movsl
shl
adc
aaa
dec
sbb
mov
daa
xor
sbb
lahf
and
sbb
inc
or
add
cmp
dec
jge
test
sti
data16
inc
bnd
xchg
push
push
int3
aad
xchg
iret
fs
xchg
lcall
xchg
incb
imul
lods
aad
or
and
jns
inc
xlat
xor
mov
and
sbb
inc
aas
jle
arpl
rclb
je
adc
sbb
mov
cltd
pop
mov
and
psllq
xchg
push
or
mov
pop
ds
cld
pop
pop
insl
testb
mov
mov
pop
outsb
push
cmp
cmp
fwait
or
clc
push
pop
mov
sub
mov
shrl
mov
jb
imul
bound
orb
shlb
call
cmp
sub
xchg
pop
into
int3
cmp
loope
cmpsl
and
cmpsl
movb
mov
inc
loopne
test
xor
pop
xor
xchg
aam
inc
ss
mov
cmpsl
adc
dec
stos
cld
inc
push
push
rcl
ret
nop
js
xor
cmp
push
jp
fwait
jle
enter
dec
xchg
pop
inc
mov
mov
lods
push
jmp
outsb
jnp
jae
push
inc
cmp
push
std
push
pushf
push
out
xor
les
incb
ja
pop
cmpl
lcall
xchg
push
andb
push
jl
and
cmpsl
and
ja
enter
sub
mov
rorb
inc
and
mov
and
cmp
shll
push
pop
xor
int
out
or
nop
fbstp
mov
cmp
sub
mov
jae
adc
loope
push
fmuls
enter
outsb
enter
mov
jns
imul
jge
mov
shlb
out
pop
xor
add
xchg
test
pop
popf
hlt
cmpsb
add
dec
mov
call
pushf
mov
push
out
push
xor
outsl
fs
or
adc
and
dec
jns
fstps
cmp
ja
loope
scas
aam
aas
fs
pop
sti
lock
mov
ficompl
ljmp
adc
xchg
lds
pop
inc
mov
lret
jmp
xor
or
cmpb
jne
mov
sub
add
idivb
or
pop
add
lea
cmpsb
mov
test
shlb
insl
add
pop
pop
aas
icebp
cmp
and
in
sub
int
mov
jmp
dec
ja
out
fistps
daa
cmp
imul
cmp
les
xchg
hlt
arpl
mov
mov
pop
cwtl
leave
mov
in
sbb
hlt
es
sbb
sub
flds
outsl
pop
js
daa
and
ret
add
cmp
fnstsw
jns
imul
jecxz,pn
je
inc
imul
jb
and
mov
orb
mov
loope
dec
gs
int3
push
jo
jns
ljmp
sbb
jb
mov
xchg
xchg
push
inc
out
es
insb
pop
clc
dec
rcr
and
addr16
jns
je
xchg
push
adc
out
les
push
push
incb
jnp
adc
in
inc
pop
cwtl
cwtl
dec
mov
int3
jne
push
xor
pushf
push
xor
hlt
jge
shll
adc
sarl
jle
xor
into
dec
sbb
cld
sbb
cs
xor
and
mov
dec
or
repz
dec
cli
ja
ret
arpl
xor
movsl
lock
shll
pop
cmp
pop
or
cld
push
imul
lcall
jno
movsb
mov
hlt
movsl
push
ret
sub
add
add
and
sahf
es
and
xchg
test
mov
add
and
inc
ret
fwait
lock
out
push
adc
cmp
arpl
and
stos
in
mov
lods
mov
pop
rcrl
push
test
imul
hlt
stos
adc
movsb
push
mov
sub
jle
xchg
push
icebp
out
mov
cli
insb
das
scas
fistpl
aas
push
jle
inc
lcall
stc
test
xor
push
mov
inc
sub
imul
push
sub
notb
inc
or
push
popa
xchg
scas
sub
jnp
fadds
out
addb
aad
add
nop
jg
stos
sarl
aad
sbb
mov
pusha
lcall
and
cwtl
xor
mov
ljmp
je
fistpll
fists
sbb
pop
negl
aad
int
into
popa
bound
loopne
stos
mov
xchg
gs
inc
inc
push
pop
movq
push
adc
inc
xor
leave
rcrl
mov
gs
rol
test
aaa
cmc
dec
mov
pop
gs
or
sub
add
popa
rcll
icebp
lods
push
jo
popf
in
push
stos
dec
stos
cmp
xchg
jnp
xchg
test
cmp
cli
push
and
popa
fdivs
sub
and
scas
cmp
mov
testb
pop
or
daa
mov
xchg
bound
lahf
add
lea
rol
pop
insb
mov
sbb
xchg
xchg
mov
shr
shr
cmp
or
notl
out
incb
jle
out
test
sub
je
push
fwait
jo
adc
add
inc
icebp
out
jmp
jns
cmp
add
sti
in
out
xchg
pop
negl
lea
inc
xor
mov
lods
jbe
arpl
mov
outsb
adc
pushf
jle
mov
pop
add
mov
leave
xchg
push
in
or
jg
inc
icebp
xchg
fisubl
cmp
lock
pusha
out
mov
cmpsb
mov
lcall
inc
out
sub
push
jmp
pop
xlat
dec
mov
add
pop
adc
das
daa
push
inc
enter
call
push
or
sub
pushl
sub
inc
mov
fistpll
in
movsb
mov
adc
cmc
xchg
mov
cmp
xlat
adc
es
loop
arpl
pop
sbb
std
jbe
pop
adc
adc
jb
mov
and
mov
jno,pt
and
inc
call
fsubrs
or
shrb
sbb
inc
in
mov
movsb
mov
in
mov
insb
inc
mov
pop
mov
fnstenv
push
xor
inc
repnz
mov
push
stos
and
mov
inc
dec
repz
ds
push
imul
stc
and
rcrl
dec
inc
fs
lock
mov
xchg
daa
jmp
hlt
sub
push
xchg
repz
adc
add
cli
xchg
push
movsb
out
data16
mov
sub
addl
outsl
mov
xor
dec
mov
jge
lock
xlat
repnz
jge
rol
jp
and
and
mov
jns
pop
sbb
es
into
jp
cmp
cmpsb
insb
jmp
int3
lret
jno
inc
push
mov
cld
stos
test
cmpsl
xor
sub
xchg
push
into
mov
scas
test
sub
ja
cld
es
or
and
adc
rcll
pushf
in
and
or
mov
cmp
sub
adc
cmp
adc
es
scas
daa
and
push
repnz
cmp
and
ret
cwtl
clc
push
lock
cmpsb
shlb
adc
and
aam
sti
stos
insb
popf
mov
and
lods
mov
mov
add
add
push
add
cmp
sub
cmpb
push
adc
add
pop
xor
mov
mov
addr16
xchg
mov
sahf
pop
int3
add
lods
scas
pop
scas
lds
mov
inc
ret
enter
add
xchg
xlat
shl
dec
lock
sar
jge
push
cltd
push
adc
mov
sbb
cli
lret
hlt
in
inc
out
dec
xor
nop
icebp
movsb
je
or
sar
jae
and
nop
inc
cmp
out
and
dec
mov
mov
aas
ja
repnz
and
call
fisubrs
xor
adc
push
xchg
mov
std
push
xchg
aam
daa
andl
xchg
scas
pop
imul
cmp
mov
jne
ret
or
fwait
rep
cmc
jg
movsl
ja
adc
movsb
rorb
or
mov
pop
add
fdivrs
test
icebp
dec
adc
xchg
lock
cmp
mov
jg
cmp
cs
jo
xor
and
notb
out
insl
mov
mov
jb
and
scas
or
mov
xchg
popa
mov
mov
cmp
pop
mov
nop
pop
out
icebp
xor
lock
cltd
int3
sub
insl
insl
clc
cmp
dec
push
pop
push
iret
mov
jg
es
int
jg
ret
sar
sbb
test
mov
jno
cmpsl
rcrb
dec
sbb
and
mov
cmp
fidivrl
jne
xchg
or
mov
xchg
cmp
xchg
mov
popa
jne
sub
and
or
cmpsb
cmp
imul
fdivrs
xchg
lea
iret
xor
sti
cli
mov
mov
mov
xor
sbb
sbb
pop
jbe
aas
xchg
ret
loopne
xchg
or
shll
cld
fstps
cli
rcll
adc
std
iret
ljmp
lcall
in
or
dec
jp
add
addb
mov
shlb
fsubrl
xchg
rcr
mov
lds
lock
and
in
dec
push
jno
aad
mov
inc
inc
fdivr
adc
fildl
add
aam
movsl
das
lahf
mov
push
adc
aas
in
loopne
gs
pop
data16
mov
nop
mov
loopne
movsb
dec
ret
add
fdivs
adc
inc
inc
mov
mov
movsl
negb
mov
ds
cmpsl
icebp
inc
add
popa
sti
cmpsb
push
int
mov
fdivrs
adc
loopne
pop
push
sahf
pop
add
mov
mov
mov
fsts
int3
movsb
cs
stos
fcmovb
out
lea
sbb
iret
lds
in
jle
int3
add
in
pop
dec
stc
dec
gs
fdivs
jae
inc
xchg
jbe
inc
imul
and
xor
imul
dec
pop
rcrl
stc
shrb
ds
pop
ds
inc
or
in
rorl
xchg
insb
sub
mov
lds
faddp
test
dec
adc
xchg
outsl
das
xchg
fnstenv
and
test
mov
movsl
xor
cwtl
ficoms
adc
xchg
sbb
add
cs
es
pop
xchg
mov
icebp
loopne
cld
cmc
adc
mov
jmp
push
jae
jb
cmp
fcomps
or
leave
fs
jae
mov
mov
das
sub
lods
or
push
mov
add
push
push
mov
sbb
repnz
js
frstor
sub
sub
or
sub
inc
add
insl
enter
aaa
fcomps
fbstp
insb
insl
lcall
jg
push
cmovbe
rol
fsts
jmp
xor
cltd
nop
lods
push
aaa
mov
fs
cmp
inc
cmpsl
inc
cmp
xchg
stc
mov
jmp
mov
in
add
and
es
insl
sbbb
hlt
sahf
pushf
cmp
je
or
add
sbb
or
sti
aam
jmp
cmp
js
add
mov
and
cltd
jl
shll
jne
fwait
jl
dec
sub
cmpsb
jo
mov
outsb
mov
fildll
mov
add
ja
std
insb
xchg
jne
lods
inc
lods
ja
push
lock
mov
adc
jecxz
ficompl
fldt
xchg
push
montmul
cmpsb
subb
push
adc
cmp
adc
cli
cmpb
pop
fistl
mov
roll
dec
repnz
popa
shl
lcall
mul
imul
add
ss
jp
mov
subl
xlat
lods
cmc
mov
inc
pop
mov
adc
cs
lcall
out
or
scas
inc
cmp
int3
jns
int3
inc
aaa
bound
shl
push
ret
lock
shl
pop
or
jle
frstor
jno
inc
imul
mov
dec
xchg
mov
or
ror
les
popa
movsb
lds
push
je
add
pop
lds
xor
test
lcall
aaa
rcl
sbb
inc
mov
xchg
and
mov
sub
gs
cmp
sub
enter
jo
jle
in
adc
mov
mov
leave
push
popa
stos
in
int
testl
scas
rol
ficompl
jb
out
push
pop
sbb
sbb
mov
pop
add
mov
inc
shlb
push
ret
mov
out
ss
out
or
fiadds
insb
shrl
sbb
repz
sarl
or
cwtl
mov
cmp
out
adc
inc
pop
enter
mov
notb
pop
mov
les
pop
enter
mov
mov
aas
and
mov
fldenv
push
sbb
mov
test
mov
or
mov
repnz
sub
push
sbb
out
inc
or
popa
jae
cmp
jmp
rclb
or
mov
adc
rcll
xor
pop
pop
popf
adc
fsubl
aas
xchg
jge
pop
fimuls
fdivp
push
and
lds
xchg
push
sbb
mov
xchg
jg
inc
jne
cmp
mov
or
or
pushf
mov
xor
jno
ret
addr16
fimull
in
lcall
sbb
mov
jge
stc
jnp
ret
fs
pushf
jg
addl
jge
or
divb
outsl
jl
test
es
test
xchg
fcompl
std
xor
xor
sub
pop
adc
xchg
aam
xor
or
ret
sbb
stos
push
ret
in
jo
loop
mov
adc
pop
orl
pop
inc
hlt
adc
rclb
xchg
xor
enter
pop
xchg
insl
pop
jle
mov
and
jl
jnp
rcl
cli
mov
pop
push
cmc
sbb
mov
push
insb
adcl
andb
sti
stos
negl
xor
into
cmpsl
xor
dec
dec
pop
testl
xor
mov
sti
cld
or
sbb
clc
lahf
outsb
or
xchg
pop
cwtl
filds
adc
cs
cmp
mov
ss
mov
stc
xchg
out
push
xchg
lds
fwait
xchg
mov
hlt
ffreep
mov
push
aaa
repnz
aas
stos
push
rolb
fdivr
movsb
and
cmp
dec
clc
ja
push
popf
or
in
mov
movsb
sar
add
cld
xor
aam
pop
cmpb
paddq
sti
pop
movsl
mov
clc
cmp
cld
fadds
into
xor
xchg
xor
cmp
aad
jge
into
scas
and
test
pop
pmulhuw
inc
xorb
lock
push
ret
aas
jmp
mov
dec
push
repnz
aas
and
sbb
dec
lds
popa
pop
cwtl
scas
lods
cmc
jl
or
jnp
mull
inc
sbb
inc
repz
cmp
push
xchg
pop
add
jmp
jmp
adc
add
je
xor
xchg
std
subl
sbbl
insl
repnz
aaa
int
popa
leave
int3
inc
adc
inc
push
or
jp
cmp
daa
sbb
xchg
cld
or
ret
inc
loop
xchg
ja
test
rorb
and
dec
repnz
cmp
movsl
push
in
out
pop
hlt
mov
hlt
inc
push
out
pop
test
jo
int
xor
test
gs
jnp
jnp
sub
add
dec
xchg
push
stc
lds
xchg
add
dec
int
and
cmpsl
mov
loope
addb
pop
ds
js
cs
or
add
fsubrp
push
jle
leave
jl
cwtl
jmp
mov
push
xor
push
push
loope
xor
fs
lcall
dec
in
dec
jne
jno
outsl
jb
xchg
lods
and
enter
dec
mov
fsts
cmp
inc
test
mov
movsb
or
cld
lock
loope
test
loopne
rcrb
imull
xchg
in
push
in
out
push
hlt
cmp
enter
bound
les
jecxz
lahf
and
ds
and
jno
inc
es
scas
test
jnp
mov
jo
cmc
cmc
or
sub
in
inc
repz
jbe
rcr
and
test
ds
mov
and
fsub
dec
repnz
lock
js
das
pop
lahf
push
es
cmp
adc
pop
mov
sbb
mov
inc
sbb
mov
cmpsl
xchg
mov
add
pop
mov
imul
cmp
inc
int3
pop
pop
fmul
testl
push
pop
mov
push
gs
scas
cmp
in
pusha
mov
mov
mov
inc
in
mov
insl
dec
imul
js
jecxz
fwait
dec
mov
dec
lock
enter
push
pop
jae
int
aam
imul
mov
int3
push
dec
push
out
dec
sub
and
pop
mov
push
jecxz
scas
pushf
sahf
xchg
jnp
xor
into
push
cmp
mov
mov
mov
push
xchg
gs
add
and
inc
lret
jge
adc
cmc
mov
push
repnz
mov
sti
push
cld
dec
movl
mov
pushf
lahf
mov
dec
fwait
gs
shlb
cmp
push
iret
mov
cltd
lods
xchg
inc
xchg
iret
cmpb
inc
jns
ss
popf
testb
ret
or
into
fsubs
out
pop
lock
xor
gs
lods
push
test
inc
getsec
incl
arpl
insb
mov
mov
sub
inc
clc
xor
sarl
and
jno
fisttps
hlt
push
imul
aam
mov
insb
xchg
add
pop
jne
dec
jle
insb
divl
lock
push
mov
imul
lcall
outsb
iret
and
pop
cmp
pop
stos
nop
adc
ljmp
inc
jp
dec
pop
loop
cmc
fsubr
rorl
xchg
cmp
mov
psubb
ret
cmpsb
pop
dec
push
mov
ficoml
dec
pop
sub
mov
inc
dec
lds
xchg
or
fdivp
or
pop
inc
sbb
cmp
dec
sbb
and
push
sbb
lods
xor
loop
add
int
xchg
or
stos
jecxz
pop
out
xchg
scas
sbb
jno
das
aaa
mov
mov
out
lahf
mov
sub
mov
mov
or
jg
fidivrl
divl
add
mov
gs
aas
arpl
mov
clc
mov
in
xchg
push
xlat
pop
push
addl
into
dec
inc
xor
test
test
mov
repnz
dec
popa
fs
sbb
pop
fs
or
xchg
insl
loopne
aad
add
and
enter
and
cmpsl
out
js
icebp
cltd
xchg
cmc
jns
mov
xor
sub
stc
and
stos
push
imul
mov
xchg
xor
and
jns
scas
mov
loopne
cmp
jg
fptan
dec
jp
mov
daa
out
ds
cmpsb
jne
mov
push
pop
in
int3
jmp
sahf
stos
xchg
push
mov
pop
jg
inc
lcall
ja
push
movsb
nop
inc
movsb
addb
cli
fwait
jl
mov
aaa
outsl
fisubrl
mov
cmp
ljmp
jmp
test
adc
out
ja
scas
ja
jae
sbb
mov
movsb
pop
push
sub
shrb
sti
clc
movsb
jbe
data16
inc
jns
xor
fdivp
sub
mov
mov
and
inc
mov
or
pop
sbb
je
sub
mov
jmp
mov
jmp
push
loopne
ja
push
rolb
shrl
dec
jo
scas
clc
mov
push
adc
dec
add
xor
push
lea
sahf
repz
mov
dec
and
clc
ret
sub
out
cltd
fs
je
pop
lret
cmp
sbb
pop
jg
jns
mov
jg
add
jns
push
sub
mov
fwait
in
mov
icebp
adc
pop
mov
dec
outsb
cmp
sub
les
and
cld
mov
std
xchg
add
mov
cmp
and
imul
xchg
imul
pop
lret
mov
ret
data16
dec
test
in
lret
xor
or
daa
sub
pop
movsb
idivb
ds
lret
jnp
into
cmpw
imul
sahf
mov
dec
mov
scas
aas
test
cli
lock
pusha
cli
in
loope
jns
daa
ret
ret
or
popl
in
negl
jnp
bswap
lahf
cmp
bound
icebp
and
loop
sub
outsl
int
sbb
notl
dec
mov
out
jp
xchg
cmp
cltd
popa
xor
xor
adc
xchg
xorb
aam
cmpsl
dec
pop
jmp
out
xchg
pop
into
sub
loope
rorb
lods
cmp
outsb
sub
add
cmp
mov
jl
xchg
push
orl
in
das
ljmp
mov
cs
inc
lret
mov
mov
jmp
fs
mov
pop
scas
mov
jnp
pushf
xor
pop
hlt
sahf
stc
aam
dec
xchg
pop
add
xchg
pop
mov
popa
in
sub
push
cli
outsl
movsb
mov
rolb
lret
mov
fidivrs
test
mov
subl
clc
call
mov
lret
adc
jae
cmp
sub
js
pop
pusha
sbb
inc
or
xor
xchg
push
leave
daa
popa
and
dec
dec
popf
movsl
cltd
stc
aam
and
fidivs
lea
addr16
cli
dec
jle
bnd
add
arpl
push
xchg
dec
jmp
xchg
dec
sbb
ljmp
insl
jle
popf
push
loop
mov
test
mov
ss
jge
cmpsb
cli
clc
aas
lret
push
xorl
xor
pop
jl
jnp
mov
push
mov
lret
mov
ret
dec
sahf
js
inc
insl
sbb
loop
jbe
xor
aam
stc
adc
cmpsb
dec
mov
out
aad
or
clc
dec
push
dec
and
or
dec
add
imul
andb
sub
jp
pop
out
inc
test
cmp
pusha
notl
sub
mov
or
pop
inc
cmp
sarb
inc
aas
pop
fcmovu
out
mov
and
add
hlt
lods
fwait
add
or
subb
popa
pushf
and
sahf
jns
idivb
mov
adc
mov
jne
aam
mov
lods
jae
pop
mov
and
mov
rorl
jnp
dec
dec
xor
sbb
adc
mov
cltd
xchg
push
inc
lods
dec
mov
nop
dec
jns
cmp
test
int3
cltd
lahf
lea
pop
jo
dec
mov
dec
loopne
sbb
lods
cmp
mov
xchg
sub
ljmp
xchg
aas
outsl
or
dec
mov
dec
cmpsl
mov
pushf
lahf
dec
sbb
adc
mov
pusha
roll
fisubs
call
jbe
cmpl
rolb
and
ror
nop
jg
xchg
and
into
xchg
sub
ljmp
push
xchg
test
mov
adc
and
cmp
cmpsl
cltd
dec
into
jo
js
jno
cmp
fstpl
jge
test
xor
xor
adc
xchg
jg
sub
lahf
jmp
add
pop
jmp
in
jp
dec
jecxz
rcr
std
sbb
int3
xor
pop
sbb
arpl
pop
out
icebp
data16
shrl
mov
fdivs
jmp
out
mov
rorb
das
cmpsb
sub
jg
mov
cmp
jo
rol
aaa
pop
pop
xchg
insl
negl
cld
inc
add
jp
das
add
sahf
mov
adc
xor
inc
dec
adcb
ja
lret
sbb
xchg
test
aaa
adc
jmp
jne
xor
rorb
mov
pop
adc
in
loope
and
pop
push
setb
mov
mov
fildl
out
jns
push
bound
fidivrl
loop
bound
mov
xor
sahf
mov
xchg
or
inc
adc
shl
add
int3
mov
jecxz
cmp
jecxz
inc
jae
testl
loopne
adc
nop
pop
cmpsl
xchg
in
rcl
iret
leave
nop
in
repnz
mov
mov
mov
lods
sub
sbb
fisttps
imul
adc
adc
hlt
xchg
inc
sahf
into
pop
call
pop
lods
gs
rclb
and
stc
dec
or
mov
cmp
outsb
jl
jmp
cmp
xchg
inc
push
cmpsl
jg
xchg
inc
out
mov
pop
xchg
bound
lds
sub
or
ds
outsl
jge
inc
push
push
in
jge
mov
jp
idiv
push
test
push
and
adc
mov
and
pushf
sub
cld
mov
pop
lods
pop
nop
sbb
lahf
and
and
push
xor
and
rcrl
pop
cli
adc
and
and
clc
mov
xor
cli
int3
popf
jg
dec
fcoms
popf
data16
in
inc
pop
insl
jmp
dec
pop
pop
or
fdivr
out
cli
adc
xchg
sbb
push
pop
stc
add
xchg
hlt
aaa
aaa
inc
cmpsl
pop
mov
cmp
pop
xchg
jno
lds
xchg
cmp
adc
adc
dec
test
adc
enter
stos
push
xor
mov
movsl
aad
sub
jmp
mov
enter
push
jbe
push
stos
mov
sub
cmc
out
pop
rcl
inc
test
gs
add
pop
outsl
imul
clc
cs
jge
stc
int3
cld
push
add
xor
lret
xorl
pop
cwtl
dec
into
dec
inc
mov
aad
add
test
stos
pushf
sub
lods
mov
sub
cld
sti
mov
fistl
push
sti
ds
enter
mov
push
lock
dec
and
popa
mov
test
dec
inc
mov
cwtl
xor
jp
or
js
dec
push
cmpsl
pusha
out
push
add
mov
fstpt
cmpsl
mov
xchg
icebp
push
pop
mov
push
lods
dec
fldcw
inc
and
jp
add
rolb
add
add
mov
fimuls
in
nop
xchg
add
cmp
xlat
int3
jecxz
das
sub
pop
mov
sbb
fisubrl
or
xor
mov
daa
push
fwait
fwait
sbb
sbb
test
push
sbb
sbb
clc
inc
loop
cmc
pop
int
out
sahf
xchg
loopne
sbb
stc
rorl
xchg
iret
mov
sbb
cld
inc
ret
xor
mov
add
jb
movsb
mov
cwtl
jae
outsl
in
mov
mov
sbb
cmp
aad
leave
es
lds
jo
lret
jge
movl
aad
incw
jmp
test
aaa
scas
in
addr16
insb
stos
out
push
loope
insl
call
outsl
int
xchg
ljmp
pusha
pop
lret
xor
xlat
adc
or
enter
inc
scas
sbb
shl
nop
aas
xchg
pop
jb
in
sbbb
jl
xlat
pop
xor
pop
les
push
in
or
sub
repnz
bound
lahf
in
lods
out
push
andl
loop
sti
inc
add
xor
add
fs
rol
shlb
das
jno
iret
pop
repnz
inc
inc
enter
cwtl
gs
ja
xor
gs
mov
pop
jl
test
in
int
or
dec
mov
into
jle
lret
mov
stos
fsub
pop
sub
add
stos
mov
pop
cmp
aad
fisubrl
imul
stos
test
xchg
test
sub
std
mov
scas
mov
dec
int
adc
sub
adc
les
mov
stos
mov
les
inc
pop
in
push
arpl
sub
pop
sbb
mov
jb
mov
cmpsl
mov
mov
inc
loop
sbb
icebp
inc
dec
cli
pop
push
js
aam
ja
lcall
std
push
cs
push
fucomip
or
mov
pop
xor
test
mov
mov
ret
shlb
aad
xchg
call
clc
scas
out
decl
scas
pop
jmp
push
lods
xchg
scas
mov
mov
in
sbb
xchg
xchg
imul
mov
cmpsb
aas
sbb
inc
shrb
mov
sub
dec
stc
mov
cmp
xor
es
lock
mov
pop
repnz
daa
xchg
add
sub
xor
sbb
pop
les
jo
pop
push
mov
mov
sub
jge
jno
and
cli
mov
pop
and
and
mov
loop
pushf
fcom
sbb
js
stos
in
enterw
and
ret
and
negb
bound
and
test
aaa
mov
xchg
das
cmp
and
pop
popf
or
pusha
imul
xchg
push
mov
xchg
movsb
cmp
xlat
inc
aad
xchg
cli
or
hlt
push
dec
jne
fldt
out
es
jg
jle
sub
cmp
push
aam
dec
jp
sarb
les
pop
clc
cwtl
xor
stos
es
addr16
fwait
in
cwtl
sar
arpl
or
mov
repz
rcrl
mov
cmp
nop
xchg
lcall
loope
pop
dec
fcoms
sbb
xor
sbb
fucomip
std
aaa
mov
mov
nop
xchg
cmp
sub
adc
pusha
sbb
outsl
aaa
inc
xchg
mov
ret
dec
xor
dec
stc
xchg
add
shl
stos
mov
ljmp
cmp
dec
clc
push
mov
inc
pop
pop
in
mov
push
dec
cmpl
es
shlb
inc
mov
xchg
mov
in
cltd
scas
pop
outsb
xchg
push
addr16
inc
jnp
push
xlat
push
jmp
adc
test
loopne
insl
icebp
lret
and
out
push
rcrb
sbb
or
or
push
cmpsb
dec
inc
cli
fiadds
mov
or
inc
fnstenv
xchg
push
clc
cmp
adc
sbbb
pop
dec
movsl
fmuls
sbb
or
repnz
cmp
cmp
in
imul
insb
mov
test
dec
jne
popa
int
int3
jle
lds
imul
es
xor
add
fdivr
sarl
scas
fcompl
repnz
ret
js
repz
mov
push
gs
call
scas
sahf
adc
roll
sbb
int3
mov
popa
add
nop
inc
mov
jnp
lds
sub
shll
or
mov
cmp
pop
mov
hlt
sub
xchg
stos
or
arpl
inc
xchg
dec
push
movsl
pop
or
les
pop
lcall
popf
jb
mov
or
sbb
xchg
pop
jno
dec
jecxz
jle
inc
cmp
sbb
pop
leave
xor
cli
popf
icebp
cmp
aam
mov
notb
xchg
cmp
subl
rolb
mov
sub
cmp
out
cmp
adc
push
lock
push
pop
mov
movsl
mov
mov
das
mov
fmuls
loop
dec
and
mov
mov
xor
mov
mov
test
ljmp
popa
sbb
xchg
rcl
push
mov
adc
xchg
pop
jmp
mov
iret
xchg
dec
dec
xchg
outsb
and
xor
inc
xor
aaa
xchg
shlb
aaa
jle
xor
add
jmp
sbb
or
jmp
ficoml
js
rol
aad
xchg
arpl
inc
or
sbb
fsubl
adcl
lds
cmp
shlb
pop
repz
mov
aad
into
mov
pop
mov
cmp
je
push
repz
push
add
dec
push
lahf
fistl
and
push
sbb
es
push
out
fnstsw
clc
popf
lret
fsubs
jle
mov
roll
orl
push
mov
sub
aas
mov
xchg
pop
xchg
sbb
mov
aam
les
adc
outsb
mov
outsb
gs
mov
imul
add
add
lret
push
dec
lret
push
pop
xor
jg
pop
push
movsb
add
pusha
adcb
in
push
or
loopne
pop
mov
jnp
adc
sub
in
call
gs
sbb
pop
shl
loop
pop
into
and
sub
dec
mov
xor
mov
add
mov
jle
mov
mov
scas
popf
je
push
mov
jl
mov
dec
test
or
dec
mov
xchg
adc
pop
xlat
hlt
aas
sbb
adcl
dec
mov
mov
cmp
repnz
in
stos
mov
in
inc
pushf
test
and
adc
stos
outsb
movsb
lahf
inc
sbb
pusha
sub
call
cwtl
dec
arpl
ficoml
stos
xor
nop
fsts
cmpl
mov
in
pop
adc
and
mov
rcrb
cmc
repz
inc
ret
and
add
push
lea
push
add
movsb
mov
movsb
cs
xor
jne
adc
adc
adc
sbb
and
mov
ja
enter
movsb
icebp
mov
mov
push
mov
repz
sub
inc
cmp
cld
cwtl
movsl
xchg
cmp
pop
inc
addr16
mov
dec
jae
inc
jle
mov
mov
sbb
es
xchg
push
mov
sub
das
dec
mov
mov
data16
aaa
aas
jne
sbb
popf
jg
and
mov
jnp
sub
pop
push
rorb
mov
and
fbld
outsb
icebp
cmp
loope
insb
jne
out
and
pop
test
inc
js
cwtl
jo
jmp
xchg
jno
inc
pushf
push
jecxz
call
fwait
shll
or
mov
lret
mov
rcrb
pop
xor
mov
sbb
in
pop
dec
xorl
repnz
addr16
mov
cmp
xchg
add
sbb
xchg
and
xor
int
lret
sub
push
les
inc
movsl
or
lea
or
cmp
sub
cld
fwait
sub
xchg
push
sbb
push
int
jl
stos
sahf
cmp
sbb
push
in
in
mov
sbb
mov
jg
shlb
mov
inc
mov
inc
or
mov
out
xchg
sahf
mul
jae
xor
mov
jne
push
or
shll
mov
sbb
out
pop
fwait
push
inc
mul
loopne
adc
or
mov
sbb
cmp
pop
xchg
jns
in
pop
inc
addr16
ljmp
rclb
pop
js
sub
jecxz
pop
cltd
xchg
inc
mov
inc
sub
and
clc
dec
sbb
mov
dec
lea
xchg
in
xchg
inc
pop
and
sbb
sbb
cmp
mov
mov
outsl
adc
dec
movsl
test
shld
insl
ljmp
out
leave
out
int
mov
cltd
imul
xchg
inc
lock
jecxz
nop
dec
add
cmp
rclb
iret
sbb
lcall
lret
xchg
pop
jb
ss
imull
daa
or
push
scas
mul
pop
in
stos
push
inc
sub
xor
cmp
mov
cli
jne
or
jae
fldt
xchg
lcall
xchg
sbb
cld
cmp
les
out
sub
xchg
pushf
inc
icebp
inc
clc
repnz
bound
xlat
mov
out
pushf
inc
pop
mov
insl
and
sbb
cwtl
int3
mov
xor
xchg
repnz
adc
jle
daa
jp
lcall
push
in
pop
or
shll
fdivr
in
ja
jle
outsb
mov
add
cmp
jne
xchg
les
and
xor
lret
jecxz
clc
xchg
sbb
pop
xchg
cmp
mov
sbb
les
rcrb
push
roll
enter
pop
mov
jne
test
inc
ljmp
jmp
jge
enter
loop
outsb
mov
jnp
ret
jl
sbb
push
cs
fwait
decl
add
jne
add
sub
les
xchg
jle
out
push
pop
neg
loop
dec
sub
pop
ret
cmp
inc
push
arpl
call
lretw
scas
cmp
add
popa
pop
xor
jge
jns
mov
xor
stc
cmp
insl
xor
xchg
call
sbb
adc
subb
insb
aam
cmpsl
add
test
dec
ljmp
push
outsl
sahf
ffreep
in
mov
sub
hlt
ret
movsl
sbb
into
mov
xchg
xlat
jbe
mov
pop
adc
orb
xor
and
sti
inc
jmp
out
push
addr16
test
and
or
xchg
inc
das
pop
mov
sahf
xor
repnz
or
test
pop
dec
fimull
jae
popf
pop
daa
scas
pop
imul
mov
adc
push
mov
gs
loop
push
push
inc
inc
sbb
jo
cld
mov
scas
mov
pop
add
mov
jns
movsb
jecxz
cmc
dec
loopne
addr16
add
test
xor
pop
scas
push
sub
cmpsb
out
mov
inc
rorb
jb
shrb
mov
movsb
adc
inc
pushl
adc
in
mov
stos
jle
or
out
add
gs
and
stos
int3
dec
jecxz
leave
je
push
mov
mov
in
add
scas
test
lock
pop
test
loop
sub
sbb
add
rolb
cmp
mov
and
fcoml
mov
add
hlt
loop
cmp
inc
ret
dec
pop
or
movsb
sbb
push
in
hlt
inc
push
sbb
pop
les
je
ljmp
aad
sbb
mov
pop
sub
xchg
orb
xlat
lods
pop
daa
pop
roll
sub
ret
shlb
push
cli
cmp
test
mov
dec
shl
push
jecxz
jecxz
add
mov
mov
aas
filds
xor
sub
mov
dec
enter
sbb
inc
std
outsl
cli
jle
jnp
dec
in
insb
std
scas
aad
in
xor
in
sbb
mov
test
fcomps
sti
add
loop
jg
in
lds
shll
jbe
ror
gs
add
pop
dec
mov
aam
mov
mov
divb
sbb
mov
mov
mov
movsl
cmpsl
in
pop
sub
clc
cmp
lahf
scas
add
and
push
xor
adc
jnp
fisubrs
ror
insb
cmp
add
clc
sub
push
movsl
ficoms
cmc
push
repz
dec
testb
mov
adc
mov
push
cmp
sbb
or
lret
adc
xor
lcall
ja
test
cmpsb
sub
push
jo
pop
gs
mov
jmp
and
lock
or
adc
and
lods
jns
scas
adc
jp
mov
add
pop
xor
inc
inc
fisubl
sub
leave
cwtl
pop
fmull
cld
sahf
ljmp
clc
jae
add
jecxz
sub
fldcw
lock
nop
test
add
mov
fdivrl
adc
pop
sbb
cld
es
sub
sbb
fldt
imul
cmp
add
popa
mov
push
mov
push
sbb
push
xor
andb
or
popa
sbb
fimuls
lods
jne
xor
stos
add
outsl
cmpsb
cltd
cwtl
add
push
scas
xchg
gs
andl
pop
dec
sub
aam
sub
push
add
in
and
ds
movsl
xchg
xor
hlt
xlat
mov
adc
shll
xor
cmpsb
cmp
xor
push
cmp
pop
ficoms
test
cmpsl
add
dec
cmc
out
rcrl
jle
push
add
aad
hlt
iret
mov
pop
pop
mov
iret
add
loope
add
movsb
inc
dec
jle
sti
pop
mov
pop
callw
sub
inc
add
push
sub
aas
pushf
shlb
lahf
ret
push
ljmp
jle
push
addr16
outsb
cli
sbb
cmp
cs
push
ret
mov
add
outsb
pop
lcall
push
mov
sbb
fisubrs
jo
stc
lds
xor
xor
lret
pop
add
jb
mov
mov
push
lods
hlt
dec
push
aas
xchg
mov
inc
outsl
mov
js,pn
cmp
testl
mov
mov
in
jne
and
bound
and
xchg
xor
mov
xchg
fistpl
dec
rclb
cmc
out
mov
adc
mov
loopne
repnz
aam
daa
mov
test
cmp
call
loope
pop
lret
cld
push
mov
fs
rcrl
test
lods
jg
dec
inc
xor
xorl
push
cmp
dec
xor
jmp
add
dec
aaa
sbb
inc
cmp
fisttpll
xchg
shrl
xor
mov
push
inc
fdivrl
mov
out
or
xor
test
xchg
xchg
fisttps
cmp
nop
cmc
mov
sarb
xor
push
cmp
pop
jp
out
ljmp
jl
add
cmp
xchg
jne
mov
cmp
jecxz
lahf
or
jp
cmp
aaa
push
lahf
outsl
popl
iret
out
popf
shll
shlb
addr16
sbb
aam
jno
insb
xor
ljmp
dec
mov
push
lret
pop
xor
loop
jl
mov
js
punpckldq
mov
movsb
ret
lds
lods
jle
pushf
or
and
sub
pop
insb
xor
push
fldl
jb
mov
test
add
nop
repz
xor
mov
mov
enter
dec
call
outsl
stos
and
das
and
aad
std
sub
aas
cli
inc
test
sub
cmp
adc
lcall
mov
or
das
ficoms
adc
enter
dec
popa
popa
mov
mov
add
cwtl
mov
mov
add
jg
and
cmp
stc
movsb
inc
dec
mov
loope
cmp
fldenv
xor
mov
xlat
sub
cmpsl
xchg
in
or
push
sbb
sbb
cli
mull
and
jecxz
cli
rolb
repz
test
mov
sbb
add
fistl
test
mov
f2xm1
bound
cmc
addr16
sub
xchg
sbb
sub
push
fxam
scas
jl
mov
mov
cmp
cmc
or
aaa
inc
frstor
imul
std
cmp
stc
in
or
sub
mov
ret
xor
add
inc
pop
mov
fbstp
push
xchg
and
outsb
into
std
cltd
jnp
jge
add
xchg
ds
pop
scas
dec
jmp
mov
ja
xchg
psrlw
push
aam
rorl
rorl
xchg
cmp
sub
daa
iret
pop
mov
jge
repnz
or
add
push
int
insl
adc
lea
stos
jl
push
cwtl
xlat
pop
xor
daa
pop
das
push
inc
scas
andl
ret
dec
subb
rorb
sbb
aas
shlb
fwait
jle
repnz
and
cwtl
cmpsl
xchg
sbb
xchg
out
ret
scas
inc
aad
aas
inc
lret
adc
aam
xor
dec
xchg
push
gs
xor
jb
ret
mov
ja
ss
mov
push
jl
popf
and
push
enter
jl
mov
faddp
xor
jmp
jmp
jmp
ja
push
mov
aas
sti
push
xchg
js
cwtl
nop
add
iret
or
sbb
cmc
and
test
cmp
movsb
fstp
jecxz
mov
push
fdivrl
loop
adc
inc
das
xchg
test
insb
push
shrb
lcall
mov
repnz
inc
xchg
aaa
outsb
inc
push
aam
idiv
push
lahf
lret
push
sbb
mov
sbb
lods
clc
sbb
sub
add
in
in
stc
inc
pop
decb
mov
lock
popa
js
aam
jb
mov
pop
loopne
mov
pushf
jge
adc
fidivl
push
lcall
aaa
iret
les
popf
pushf
inc
jbe,pt
sahf
push
pusha
dec
jnp
inc
and
in
mov
popf
mov
decl
adc
mov
xchg
add
lea
sbb
lahf
mov
jns
dec
int3
mov
sbb
data16
jmp
jge
inc
mov
lock
daa
or
and
jbe
or
out
fisttpll
mov
dec
in
sub
stc
xchg
cmp
jp
jle
lcall
mov
aad
sbb
push
in
fnstsw
push
cmp
jae
outsl
addr16
cmp
sti
test
cmpsl
mov
cmp
out
imul
lahf
inc
insb
lret
mov
into
sbb
lods
sub
call
loop
pop
jae
add
jno
in
mov
dec
aad
cmc
fstp
leave
lret
popf
orb
dec
daa
loopne
sub
push
idivl
and
lcall
test
imul
test
adc
or
arpl
jl
icebp
insl
insb
mov
fs
jecxz
arpl
mov
out
je
add
push
mov
adc
aaa
ss
pushf
mov
mov
sti
icebp
aas
mov
leave
xchg
cmp
out
imul
push
sahf
pop
mov
sahf
push
fmul
jge
cli
stc
jle
test
stos
aam
ret
outsl
lock
fcompl
push
inc
push
mov
or
int
iret
cmp
jno
ret
and
jle
je
in
in
jg
push
arpl
sub
bound
mov
idiv
enter
out
jg
pop
cmpsb
pop
push
rorl
clc
xchg
popa
ret
in
xor
fmul
out
or
jne
cmpb
push
adc
dec
pop
mov
ds
xlat
dec
es
lahf
push
lods
insb
mov
jge
mov
mov
outsb
scas
sahf
stc
test
imul
lahf
std
sbb
mov
push
inc
mov
adc
push
xchg
testb
xor
xchg
loope
int3
or
mov
push
adc
jge
lahf
xchg
sbb
sbb
inc
in
repnz
dec
ss
das
ds
ja
xchg
push
jecxz
jns
popf
adc
cmp
ljmp
mov
sub
sbb
mov
pusha
mov
lcall
lods
sti
push
inc
sub
add
scas
in
stos
subl
jns
add
enter
xchg
adc
hlt
sbb
inc
push
shll
pop
ret
push
sub
jbe
push
ret
dec
cli
test
dec
movsb
cs
int
out
cmp
mov
in
mov
mov
and
dec
lock
and
mov
test
scas
adc
cltd
push
pusha
sbb
test
mov
cmc
repz
add
ret
jle
sti
pop
mov
fstpl
ret
insb
sahf
jne
aas
push
std
enter
pop
les
mov
add
xor
scas
mov
push
ja
push
pusha
daa
fsubr
iret
xchg
mov
inc
dec
shrb
jmp
or
ret
pop
mov
xchg
jae
js
aam
sub
mov
ret
push
adc
mov
jo
mov
push
shlb
lds
out
into
mov
pop
xchg
shll
loope
adc
fstl
mov
leave
sub
cwtl
imul
jl
sbb
shrb
pop
jp
adc
sbb
push
or
lods
mov
sub
sub
cmpsl
ss
jne
movb
dec
cmpsw
enter
xchg
mov
lret
or
dec
cmp
cmp
out
push
pushf
mov
mov
fstl
cltd
filds
mov
mov
dec
xor
push
cmp
je
iret
xor
test
jnp
insb
xor
notl
mov
icebp
shrb
adc
push
sahf
std
sub
mov
movsb
add
jo
pop
test
pop
sbb
jo
rorb
lods
mov
sub
loop
rcll
jp,pn
test
jnp
pop
js
adc
lahf
dec
sahf
je
in
jle
sbb
pop
aaa
sub
data16
daa
sub
insl
dec
out
cltd
xchg
dec
pop
repnz
repz
mov
into
cmc
xor
xchg
inc
jne
ret
cmp
hlt
loopne
lret
in
xor
stos
bound
test
pop
test
in
fstps
in
hlt
or
cwtl
int
sub
xchg
pushf
adc
lods
ss
mov
sub
aaa
dec
mov
mov
inc
sub
faddl
ret
sahf
pop
mov
fldl
or
insb
orb
and
add
cmp
cmp
and
int
mov
xor
pop
pop
js
shll
xchg
sahf
push
jns
push
inc
sbb
insb
cmp
sbb
repnz
rclb
and
inc
adc
mov
sbb
sbb
femms
arpl
fmuls
jo
aam
lret
sub
repz
push
pusha
pop
bound
push
pop
adc
stos
aas
cmc
mov
jnp
pop
pop
lcall
cs
jmp
add
call
add
push
jne
je
aam
sbb
aas
stos
faddl
or
lret
loopne
mov
or
mov
mov
add
xor
mov
into
imul
sub
cld
mov
mov
mov
sbb
mov
test
out
xor
add
sarl
push
mov
sbb
fs
xorl
add
mov
out
popl
cmp
push
dec
dec
nop
mov
pop
out
mov
call
or
sbb
in
testb
sub
cmpsl
cltd
subl
push
mov
into
xchg
sbb
mov
cwtl
and
roll
loope
cs
xor
pop
fnstcw
xor
adc
lahf
jmp
push
dec
ds
gs
push
loopne
sub
lods
es
inc
test
xchg
push
mov
mov
int3
and
or
push
xchg
add
jb
cli
xchg
dec
adcl
aam
sub
or
daa
push
aam
pop
lds
pusha
data16
das
cltd
arpl
mov
into
jnp
push
inc
fwait
lea
mov
push
rcl
call
adc
xor
sbb
in
imul
adcb
sbb
fwait
xchg
mov
inc
mov
jbe
sbbl
int3
dec
stos
sub
mov
jl
clc
in
dec
popl
loopne
mov
mov
adc
je
adc
pushf
loope
jp
bound
mov
dec
int
testb
pop
xchg
test
mov
ja
aad
jbe
addr16
adc
xchg
int3
mov
hlt
mov
out
daa
pop
cmpsl
aaa
lret
jnp
cwtl
in
cmp
sub
adc
cmp
scas
dec
adc
pop
movsb
cwtl
sub
and
push
mov
fidivrl
sub
cmp
je
or
cs
orb
pop
faddl
xor
aaa
repnz
push
inc
repz
push
mov
testl
jo
out
leave
imul
sub
movsb
shll
aaa
test
push
xchg
dec
inc
stos
dec
sbb
pop
cmc
sub
mov
lahf
mov
je
and
sbb
daa
pusha
call
xor
aam
lret
ret
insl
mov
push
je
jmp
repz
pop
je
sbb
push
pop
push
out
sub
stc
adc
jbe
test
jae
sbb
test
out
jns
mov
dec
mov
fucomp
pop
or
mov
add
dec
mov
inc
enter
inc
cmpsl
dec
mov
inc
add
push
cmp
pop
in
mov
rorb
popf
push
xor
int3
mov
jne
sbb
out
inc
insl
sbb
fldl
xchg
cmp
mov
xchg
jl
popf
cmp
add
inc
cmpsb
int
add
push
out
mov
lea
into
mov
sub
sbb
or
cmp
mov
xchg
adc
into
insl
push
mov
je
push
icebp
rclb
xchg
jne
xor
stos
xchg
insb
pusha
sbb
jne
adc
sti
inc
pop
and
fwait
stos
and
sbb
or
mov
enter
xor
addr16
push
sti
cltd
push
call
lret
adc
mov
cltd
mov
cwtl
mov
sbb
inc
push
inc
sbb
jae
ja
movsl
lea
js
xor
jg
sub
add
mov
push
lea
mov
lds
mov
sbb
mov
lock
mov
xor
dec
add
cmpsb
push
or
popf
push
jae
loopne
pop
jbe
setle
dec
push
or
push
jmp
fdivl
and
sbb
xorl
pop
lahf
mov
inc
jns
mov
nop
or
imul
mov
xor
sbb
mov
es
cwtl
sbb
push
cmpsl
stos
pop
xor
lret
arpl
and
test
jb
enter
jmp
ret
mov
lods
mov
addr16
imul
shll
adc
inc
adc
and
cld
xor
test
sbb
mov
jge
std
ss
inc
movsl
mov
fimuls
jnp
sub
push
aas
push
pop
int
or
and
data16
int
hlt
call
dec
sub
inc
test
out
jle
jmp
jne
or
clc
rol
loop
mov
int3
push
shll
hlt
xor
and
data16
and
push
pop
or
mov
daa
fmul
imull
loope
iret
fistl
ds
inc
aad
adc
sahf
or
sub
js
push
pop
or
mov
int
js
insb
aaa
ss
ret
lret
xor
inc
push
xchg
cld
aad
cwtl
xchg
adc
sbb
lods
pop
lea
jne
mov
lret
dec
mov
lods
fisttpll
xchg
pmulhuw
mov
push
lods
xor
aas
jne
sti
lods
cltd
push
ja
push
aas
cli
mov
xor
sbb
cmpsb
inc
loopne
xchg
lcall
jnp
mov
dec
mov
loop
jbe
dec
ficoml
out
add
in
mov
cli
mov
aad
add
pshufw
cmpsl
lock
loope
jle
pop
aam
jne
mov
outsb
or
adc
xchg
mov
sbb
mov
addr16
imull
inc
mov
cmpsb
adc
mov
das
add
jl
cmp
mov
dec
adc
stos
dec
dec
in
enter
xor
mov
adc
insb
test
fdivl
das
and
xor
xchg
cmp
sub
mov
add
pushf
fcomps
mov
inc
in
es
cmpsb
xchg
mov
out
sub
add
cmpsl
and
jl
mov
jl
repnz
sub
xor
sahf
mov
jo
lods
std
cmp
jae
push
push
cmp
adc
push
jae
and
cmp
mov
aas
repnz
je
or
test
push
out
xchg
push
sarb
or
inc
repnz
pushf
or
inc
sarl
mov
rcll
vpshufhw
lds
clc
leave
clc
dec
les
push
fsubrp
push
bnd
dec
lods
addb
xchg
add
xor
stos
dec
gs
int3
js
push
pusha
inc
push
lods
insb
sbb
frstor
push
repnz
push
jns
int
dec
ficoms
out
add
mov
push
sbb
sbb
mov
pop
xchg
push
push
int
daa
out
mov
lea
repnz
cmpsb
dec
jnp
xor
mov
jl
inc
or
fisubl
addb
cmp
mov
push
inc
push
pop
push
sbb
mov
dec
dec
adc
lret
scas
insl
sahf
adc
mov
arpl
ret
enter
adcl
mov
mov
mov
lcall
ja
jb
jl
sub
inc
mov
movl
out
stos
mov
orl
outsb
cli
fimull
push
insb
loope
lahf
and
jb
test
pop
sbb
int
arpl
xor
lahf
push
sbb
xchg
or
sti
daa
mov
push
ja
enter
loope
push
in
mov
adc
in
dec
pop
jo
mov
adc
xchg
sub
out
lds
cmp
mov
outsb
push
cmp
test
hlt
ror
leave
xor
mov
lahf
stc
stos
cmp
inc
cmp
inc
loopne
leave
sarb
and
les
fcoms
mov
ss
xor
fisubs
sahf
xchg
repnz
dec
mov
xor
pop
loope
push
xchg
idivl
leave
jb
lds
jecxz
sub
mov
xchg
push
jae
jmp
push
test
and
push
push
push
mov
xchg
lock
mov
out
push
jle
ret
mov
mov
paddw
add
dec
or
je
xchg
outsl
adc
movsb
xchg
adc
push
cmp
add
test
cs
lds
xchg
jl
and
ret
jle
les
mov
push
push
out
cmp
dec
mov
test
aas
or
icebp
pop
pop
dec
pop
or
data16
push
xorl
mov
xchg
data16
cmpsl
fcoms
scas
mov
test
js
imul
sub
dec
cltd
xchg
pop
js
repnz
fwait
ja
mov
xchg
in
inc
sbb
jmp
and
fwait
outsb
and
outsl
sub
ss
insl
mov
jae
addr16
xchg
and
cwtl
je
out
popa
lods
mov
sub
and
xor
sub
fadds
ja
sbb
xlat
sub
xchg
mov
fstpl
dec
fs
mov
ljmp
pop
jp
clc
add
inc
pop
orl
xor
sub
stc
lret
insl
cmp
iret
push
in
xor
fmuls
fcmovne
xor
jmp
in
fdivrs
adc
push
cwtl
imul
xchg
jae
dec
movsb
hlt
pusha
imul
out
mov
dec
mov
pop
jecxz
pusha
sub
jb
hlt
aas
bound
xchg
out
std
test
sahf
push
mov
rclb
icebp
addr16
add
imul
mov
jge
cmc
test
xchg
ffree
les
cmp
out
out
in
sbb
mov
pop
inc
repnz
pop
inc
pop
mov
sbb
and
push
popa
and
cmp
lret
dec
adcl
insb
daa
arpl
stc
lds
scas
add
push
mov
mov
push
xchg
enter
add
cltd
movsb
iret
ja
addr16
xor
or
daa
ljmp
mov
fsubr
aaa
mov
fnsave
psubw
test
loope
mov
adc
mov
push
and
ret
imulb
jb
xchg
test
imul
jp
insb
test
lcall
pop
and
xlat
xor
mul
cltd
inc
cld
insb
insb
pop
mov
and
jne
pusha
xchg
xchg
js
and
lods
add
sahf
lea
icebp
pop
xchg
stos
int3
push
mov
lahf
fdivl
mov
aad
xor
mov
pop
loopne
shrb
jbe
clc
aad
cmp
mov
sub
xchg
sub
xchg
mul
sbb
xchg
hlt
mov
xchg
adc
andb
out
sub
sahf
arpl
fsts
aas
int3
and
sub
sbb
imul
fisttpll
sub
adc
insl
ss
mov
test
sub
or
jge
inc
es
push
mov
roll
xchg
pop
shll
ja
pop
gs
add
push
outsb
sarb
push
mov
stos
and
xchg
sub
ror
push
jmp
pop
xchg
xor
sbb
jnp
mov
jecxz
lds
cmpsb
test
mov
sbb
pop
xchg
lds
dec
fnstcw
push
int3
sbbb
and
xchg
cld
cmc
jl
push
sbbl
hlt
push
clc
leave
iret
push
jg
xchg
addb
xchg
and
fildll
into
lds
mov
push
bound
pop
inc
imul
dec
sar
adc
fwait
into
nop
inc
orl
fsubp
mov
fisttpll
insb
data16
addr16
loopne
cwtl
inc
into
out
xchg
ret
cmpsl
mov
or
mov
test
xor
lret
adc
cmp
xor
inc
leave
les
lods
ljmp
pop
sbb
es
jp
sahf
jle
iret
fisubrs
lods
dec
cmc
jno
pushf
inc
aad
mov
sub
jno
ljmp
sub
adc
and
mov
iret
push
int3
dec
sbb
lods
pop
jmp
cwtl
pop
stos
push
pop
push
decl
sub
stc
lret
fimull
sti
arpl
xor
or
xchg
jo
into
push
sarw
out
pop
cltd
mov
xchg
pop
ret
and
shr
or
mov
lods
rcll
push
push
mov
pop
jl
stos
xor
out
cmp
into
divl
out
or
adc
xor
movl
add
mov
mulb
ss
jecxz
insl
or
aaa
notl
jmp
push
outsl
sub
sbb
sbb
cmp
fwait
aad
jno
sarb
insb
dec
sbb
scas
fwait
push
add
bound
push
push
jbe
test
ret
mov
dec
xor
xor
js
mov
sbb
pop
test
or
pop
sar
lds
mov
cmp
mov
inc
pop
mov
pop
mov
idivl
loopne
sub
stos
mov
cltd
add
fmulp
cli
mov
or
xor
mov
xor
push
out
sarl
int
lea
and
inc
lret
ret
dec
lock
jle
and
jge
imul
push
mov
subl
fcmovnbe
mov
xchg
xchg
xor
insb
in
repz
jle
push
in
sbb
aam
mov
rcll
insb
lret
cmp
mov
xor
adc
or
pop
fwait
pop
jl
cmp
out
cmc
cmpsl
mov
mov
xchg
nop
jecxz
or
js
mov
mov
mov
sub
aam
jp
cmc
mov
xchg
xchg
lock
mov
mov
xorl
fmul
notb
je
cmp
pop
mov
stos
cmp
fadds
pushfw
cmp
or
xchg
repnz
push
mov
outsb
adc
in
fidivrs
lods
insl
test
push
cmpb
cmp
addb
adc
mov
vunpcklps
mov
mov
daa
add
jb
or
ds
mov
addr16
pop
clc
dec
jp
loop
inc
mov
add
mov
add
adcb
mov
rcll
es
mov
lds
ljmp
bound
inc
xchg
fs
fidivrs
cmpsb
xchg
movsl
push
xchg
xor
mov
or
sti
outsl
sti
rorb
sbbb
stc
cs
cs
test
hlt
test
jo
iret
es
jbe
cmp
test
out
lahf
ds
xor
and
cmc
mov
sub
sbbb
sbb
mov
xor
gs
dec
add
rorb
cli
jae
push
shrl
xchg
sbb
push
inc
pop
cmp
mov
lret
xchg
lahf
jae
sbb
xchg
dec
sub
dec
shrl
mov
sub
sbb
test
push
cmpsl
xor
sbb
jns
sti
call
jge
fs
or
lods
lahf
hlt
pop
roll
push
jg
inc
lret
sbb
icebp
in
jp
fstps
add
jo
test
push
adc
or
ljmp
mov
mov
add
push
xor
cwtl
inc
jns
dec
les
mov
jg
aaa
fs
mov
lret
mov
out
mov
jae
loope
mov
mov
sub
xor
mov
call
jecxz
ja
out
in
jge
dec
xor
shrb
ret
cmpsb
inc
insl
sbb
jp
stos
and
mov
popa
jp
nop
dec
mov
adc
sti
sub
xchg
push
loop
cs
lds
or
ljmp
pop
adc
xchg
loopne
add
fadds
fimull
mov
daa
jecxz
mov
add
mov
xchg
push
dec
mov
fwait
popf
ret
mov
fisubrl
mov
enter
xor
scas
arpl
out
sbb
xchg
sbb
jns
sarb
mov
nopl
out
mov
arpl
scas
push
test
inc
clc
xor
stos
and
push
add
je
jns
or
cmp
stos
loop
jne
cmp
loope
lret
dec
push
or
or
add
xor
add
repz
hlt
inc
mov
addr16
je
call
dec
sbb
sbbb
in
fucom
adc
insb
lds
cmp
ror
icebp
bound
adc
clc
adc
xor
add
test
ficompl
add
cmp
or
jns
mov
imul
flds
outsb
pushf
mov
mov
xor
mov
jbe
in
fidivrl
insb
orb
es
inc
inc
aas
inc
stos
push
stos
mov
ja
stc
test
pop
es
pop
mov
subb
arpl
inc
ja
mov
dec
sti
cmp
dec
insb
das
cmp
int3
xchg
sbb
xchg
cmp
sbb
push
mov
mov
jmp
mov
imul
mov
cmp
cld
add
shrl
lea
sbbl
and
lcall
repnz
add
jnp
sbb
sbb
dec
out
je
mov
into
xchg
fimuls
push
inc
test
adc
pop
aam
xchg
andl
sbb
mov
repz
jmp
adc
lret
daa
and
ljmp
fsubr
or
push
pop
ja
push
xchg
popf
add
fstps
cmpsb
xor
rdtsc
and
lret
jo
xchg
popf
lods
push
cmpsl
adc
sbb
outsb
push
push
imul
and
mov
inc
hlt
rcl
loopne
enter
lret
inc
roll
cmp
cwtl
icebp
jge
dec
sbb
push
test
clc
insb
adcb
adc
cmp
popa
je
adc
cmpsb
add
jecxz
js
jnp
loopne
pop
xchg
sarb
cs
xor
mov
fsubrl
pop
cmp
jle
pop
or
pop
push
xchg
mov
sub
cwtl
outsb
mov
daa
jmp
add
or
int3
push
xchg
bnd
or
orl
push
jbe
xlat
mov
push
mov
cld
call
cwtl
shl
or
mov
push
jb
mov
pop
or
es
lcall
fnsave
xorb
test
loope
inc
add
movsb
xchg
and
and
mov
aad
ret
ljmp
imul
addr16
jbe
aaa
inc
ltr
sub
cmp
sbb
fidivl
sub
xor
sub
add
sbb
push
add
filds
add
das
mov
arpl
ret
mov
add
dec
cmc
cmpsl
mov
mov
out
aaa
arpl
clc
mov
mov
sub
cmpsb
push
lock
imul
pop
and
mov
in
inc
lahf
mov
lahf
rorl
cmp
mov
popf
jp
call
or
mov
lret
xor
cmp
aaa
inc
addl
loopne
mov
push
jecxz
movsl
xchg
dec
cmp
pop
pop
hlt
push
into
dec
fs
jns
fucomp
movsl
dec
mov
sbb
loopne
rcll
and
adc
pusha
xor
mov
dec
and
cmp
mov
jl
fcoml
aaa
and
in
sub
inc
arpl
movsb
mov
xchg
dec
and
testb
jnp
adc
cmpsl
xor
mov
mov
cmp
dec
popa
lods
insl
xor
push
cmp
inc
popf
jnp
sbb
mov
int3
xchg
psraw
insb
jo
lea
jno
mov
das
cmpsb
aaa
pop
adc
or
pushf
int
pusha
mov
or
xchg
repnz
daa
jecxz
push
push
pop
lret
movsb
repnz
fistl
inc
xchg
adc
fldenv
insb
gs
push
icebp
divl
rorb
sbb
jg
imul
adc
jbe
dec
jo
fisttps
push
mov
push
ficomps
test
xor
movsb
je
mov
bound
out
inc
and
pushl
pop
jmp
rcll
and
mov
and
sbb
clc
jl
xchg
xchg
cmp
test
push
addr16
bound
cmp
jbe
ficoml
test
insb
jge
sbb
mov
lock
push
sub
cmpsb
fs
inc
cli
jl
mov
fldl
mov
jle
stos
or
pop
mov
stos
or
or
std
outsb
faddl
cmp
stc
repz
add
shll
mov
fwait
jne
push
push
fimull
mov
pop
xor
addl
pop
out
mov
shrl
dec
or
mov
jno
mov
jg
sbb
scas
dec
sub
cmc
xor
cmp
loopne
pop
push
or
andl
imul
lds
lods
jne
mov
mov
or
inc
mov
fstpt
iret
out
or
lock
int
mov
dec
sub
roll
jp
rol
xchg
or
add
repz
and
xchg
sbb
lcall
nop
push
fdivs
mov
push
xchg
in
push
jge
fistps
repz
int3
mov
jns
stos
push
jo
je
out
xor
jo
dec
inc
add
aad
xor
sub
push
stc
jne
and
or
pop
adc
xchg
paddsb
lahf
neg
xchg
pusha
cwtl
mov
mov
mov
lock
pop
jl
fadd
mov
push
aad
cmp
cmp
je
mov
ret
cli
add
in
jns
adc
lods
shl
and
imul
dec
aas
outsb
cmp
xor
ret
clc
mov
mov
stos
add
sbb
addl
or
dec
popf
push
pop
insb
xchg
pop
lret
test
addr16
aad
cmp
add
and
popa
adc
dec
cmp
mov
or
cmpsb
clc
or
scas
test
inc
xchg
sbb
daa
jge
sub
adc
mov
push
mov
sub
faddl
cli
mov
in
dec
pushf
loope
sbb
cmpsl
push
in
pop
jb
rcl
sbb
call
xchg
xor
test
std
mov
adc
out
ljmp
push
push
push
test
dec
je
sbb
icebp
addr16
xor
xchg
or
repnz
pop
adc
pop
out
repz
xchg
fisubs
xchg
dec
loop
sub
fisttpll
cmp
cvtdq2ps
adc
aaa
inc
dec
cmp
fimuls
in
pushw
xchg
leave
notb
jmp
inc
lret
add
or
pusha
outsb
push
iret
into
mov
adc
mov
mov
and
bound
test
fsts
subl
mov
dec
jmp
out
inc
mov
test
rcll
xchg
test
jb
lds
sub
sbb
pop
add
imulb
jge
ret
mov
insl
je
outsl
jo
jb
mov
scas
cmp
lret
cmp
cwtl
ret
outsb
faddl
jl
in
mov
inc
xchg
lahf
pusha
sbb
in
daa
aas
ljmp
pop
inc
sub
xor
sbb
jne
push
roll
inc
aad
test
and
popa
sti
out
add
sbb
jl
ds
cld
dec
je
push
leave
loope
sub
mul
ds
cmp
xchg
push
inc
js
xchg
xor
push
lock
pop
mov
add
movb
inc
and
hlt
or
js
pushf
stos
and
lods
loope
push
pop
ss
clc
inc
xorb
mov
jmp
xor
ja
or
hlt
push
xchg
inc
insb
mov
dec
les
inc
jbe
stos
sbb
jno
js
mov
adcl
mov
in
jp
mov
enter
shlb
aaa
mov
dec
mov
pop
add
inc
bound
xchg
xchg
cli
pause
aaa
call
sbb
stos
fwait
pop
out
movsb
cmp
cmp
jno
dec
in
mov
in
movsb
xchg
cmpsl
repz
cwtl
call
stos
stos
adcb
xchg
jne
xlat
pop
and
les
ja
push
repz
push
pop
xchg
negb
jo
mov
out
lds
adc
data16
inc
xchg
mov
int3
or
scas
xor
arpl
sbb
adc
and
push
outsb
in
nop
mov
or
push
jp
into
scas
sbb
mov
js
fildll
movsb
mov
cltd
lahf
adc
cmp
xchg
cs
cmp
stos
sahf
pop
imul
push
or
jle
pushf
mov
xlat
sub
push
lock
aas
mov
add
mov
ljmp
je
mov
loop
sub
mov
cwtl
push
inc
sbb
sub
push
inc
aam
mov
jg
loope
leave
scas
add
clc
fimull
into
out
aad
je
xchg
mov
xor
add
push
mov
add
push
imul
pop
clc
jnp
adc
imul
push
movsl
lods
xchg
hlt
sbb
scas
and
fcompl
int3
fdivrs
insl
push
pop
insl
adc
bound
stos
add
lock
cli
pushf
xchg
or
mov
in
xchg
mov
xor
sub
clc
sub
jle
test
ret
outsl
inc
pop
mov
ljmp
push
sub
pusha
cmp
fldt
push
dec
fwait
stos
jle
pop
mov
sti
sbb
xchg
cs
lds
mov
pop
pop
fcomip
xor
fcmovnu
push
scas
and
insb
pop
cmpsb
push
test
out
mov
inc
push
int
loop
adc
rcrb
imul
xchg
test
testb
cld
idivl
adc
add
ror
lret
and
xor
mov
mov
fcomp
add
sub
mov
inc
adc
cmpsl
adc
mov
into
shl
lret
push
stos
cmpb
xchg
movsb
push
idivl
mov
cmp
scas
jle
hlt
add
mov
mov
movsl
push
and
inc
mov
lret
std
adc
pop
xor
sub
daa
jle
popf
in
and
xlat
sahf
aas
sahf
xor
rorl
mov
out
mov
ljmp
jne
sbb
push
loope
xchg
jp
test
andl
sbb
outsl
ja
or
fnsave
pop
lahf
repnz
test
in
xor
inc
xchg
mov
fyl2xp1
cmp
rorb
das
leave
sbb
push
sbb
andb
daa
out
fcmovu
xor
or
lea
inc
aam
inc
fstps
out
cmp
xor
inc
pushfw
addr16
rep
pop
cld
add
lods
lods
push
add
int3
jp
lahf
pop
popa
loope
pushf
jae
mov
outsb
push
pop
lahf
lret
je
clc
ss
inc
or
movsl
sbb
mov
movsl
repz
push
mov
add
mov
xchg
lcall
mov
and
fs
out
adc
test
test
nop
test
push
in
lea
ja
test
pop
push
sub
mov
daa
mov
mov
and
pop
in
adcl
xor
adc
and
stos
jmp
testl
add
cmpsb
rcl
add
jne
mov
les
je
adc
xor
pop
scas
lret
loopne
inc
adc
ffree
inc
jb
mov
xor
push
andb
outsl
popa
sti
adc
lcall
scas
clc
rclb
cs
cmp
aad
xchg
ja
call
mov
sub
and
lcall
stc
mov
mov
cmovl
cmp
xor
xor
insl
inc
pop
adc
divb
rcl
mov
les
fstps
or
inc
pop
sbb
mov
mov
sbb
jmp
cmp
ss
test
in
sub
aam
or
shl
push
hlt
into
bound
jmp
xchg
mov
inc
fisttpl
mov
mov
xor
mov
pop
mov
imul
add
dec
loop
lret
mov
mov
ja
fcomip
pop
scas
ret
ljmp
scas
mov
test
loope
and
push
outsl
imul
ret
out
or
inc
xchg
into
push
addr16
sbb
push
adc
mov
in
cmp
push
mov
pop
or
push
inc
aaa
sub
or
repz
scas
rcl
xchg
stc
jno
mov
add
rcrb
dec
pop
or
and
lea
pop
jmp
lahf
mov
fsubrp
out
inc
pushf
fsubs
cmp
adc
testb
sub
cmp
jp
leave
andl
sub
mov
push
or
mov
cmp
mulb
dec
ljmp
lcall
pop
pop
or
stc
fcmovnb
fisubrs
jmp
dec
cmp
jbe
push
ret
lret
jp
ja
arpl
das
mov
mov
dec
sub
dec
fs
adc
pop
test
not
jne
sbb
fsubrp
rclb
or
mov
xchg
nop
xchg
mov
ss
fcompl
imul
out
xor
mov
inc
jne
jmp
jb
adc
and
add
mov
mov
fldt
pop
pushf
test
int3
sub
xor
pop
lds
cltd
pop
sbb
pop
loop
jns
inc
test
push
sbb
jne
cmpsl
sub
push
dec
ficoms
sub
push
and
xchg
sbbb
gs
add
and
pop
xchg
aam
int3
sahf
rclb
les
jae
adcl
movsb
lods
lahf
xchg
push
pop
je
pop
outsl
jp
cld
popa
mov
stos
mov
add
out
push
js,pt
aam
fimuls
mov
mov
xchg
movsb
repz
mov
flds
xchg
std
cmp
jg
xor
and
shrl
push
arpl
dec
push
in
lods
ret
das
loop
aas
aam
xchg
cmpsb
out
test
adc
ficoms
movsb
div
shlb
pushf
inc
sub
dec
sbb
add
mov
add
dec
ljmp
and
xchg
addb
inc
push
popa
call
jge
movsl
leave
sub
mov
mov
or
jno
mov
push
lock
scas
lret
mov
mov
lock
add
sub
insb
movsl
stc
push
add
std
xchg
pop
and
mov
lods
imul
push
or
add
and
jl
inc
ja
sub
push
loop
mov
in
dec
das
xchg
xchg
and
mov
nop
sub
unpcklps
int3
pop
inc
loope
sub
push
add
test
add
add
xor
jo
das
pop
or
dec
ljmp
stos
clc
notb
dec
xchg
or
mov
pop
leave
sub
xor
loop
lret
aad
ret
pop
lcall
adc
mov
test
mov
mov
sahf
and
lret
jg
dec
das
jmp
jbe
rorl
bound
repnz
stos
psubsw
dec
and
daa
add
jl
dec
mov
leave
jp
xor
iret
jne
icebp
icebp
fnstcw
mov
lret
mov
ds
mov
jbe
roll
jns
pushf
mov
mov
addr16
int3
subb
mov
xchg
cmp
dec
lods
pop
lods
fadd
ljmp
pop
push
popf
rcrb
scas
pop
pop
push
sbb
fmuls
cmp
ret
jle
pop
xchg
xchg
adc
pop
cli
cmp
repnz
das
jge
in
and
ss
adc
call
pop
xchg
xchg
xchg
lret
mov
push
sub
inc
out
push
stos
icebp
icebp
ret
jg
pusha
mov
xor
and
pminub
cmp
pop
or
sbbb
cwtl
push
imul
adc
dec
push
xor
inc
xor
arpl
movsb
push
bound
test
xchg
xor
and
outsb
addps
lcall
ja
push
pop
cltd
mov
add
mov
cmp
push
xor
ret
ret
xor
lods
cli
mov
jo
aad
ljmp
jne
sbb
dec
mov
sahf
push
out
push
or
lods
int3
loope
push
sbb
xchg
push
lret
fbstp
insb
push
cld
jae
mov
cmpsl
test
enter
and
call
push
arpl
ss
data16
or
sarb
je
pop
xchg
stos
aad
imul
outsb
jg
mov
into
xchg
sbbb
cltd
xor
push
enter
cmpsl
fcmovne
call
mov
clc
inc
mov
dec
fisubl
cmp
fmuls
popa
iret
mov
xchg
sbb
adc
testl
negl
inc
pop
int3
xchg
je
inc
addb
push
or
mov
jge
int3
push
push
fwait
adc
dec
mov
pop
push
or
repnz
mov
mov
sub
sub
mov
or
jge
xchg
insb
lcall
cltd
pop
xchg
mov
mov
xchg
mulb
pop
popf
fistl
inc
sbb
movsb
mov
clc
xchg
push
add
stos
inc
inc
or
filds
mov
pop
call
aam
cmpsb
stos
rorl
and
rcrb
push
fstl
data16
dec
push
inc
inc
bound
cmp
pop
xchg
in
sbb
push
idivb
xlat
mov
enter
add
repnz
xchg
sbb
sti
sbb
mov
dec
mov
jmp
push
jns
out
xor
adc
dec
mov
test
aam
sub
push
loope
hlt
jecxz
daa
js
cld
push
xchg
outsl
sbb
add
or
das
shr
repz
sub
push
mov
aad
and
xor
add
idivb
aaa
not
repnz
jmp
fucomp
push
mov
mov
push
pusha
int
inc
out
stos
arpl
mov
add
and
enter
and
xchg
sti
popf
jg
jb
notl
ret
adc
xchg
lret
ret
fwait
das
gs
rolb
inc
bound
dec
or
in
or
sbb
cwtl
xor
push
outsb
dec
test
xchg
pop
fidivrs
dec
popa
xlat
repz
mov
and
nop
call
sbb
out
scas
xchg
sbb
fwait
shlb
jne
and
mov
push
push
sub
pop
sahf
xchg
pop
in
repnz
pop
out
or
add
and
lea
push
test
mov
sub
out
pop
jae
sti
int3
inc
adc
test
pop
test
aas
xor
ja
cmp
push
add
mov
sbb
clc
fiaddl
loop
arpl
scas
xchg
sti
lret
push
fistl
out
lock
hlt
bound
mov
cmc
dec
outsb
xchg
test
mov
orl
je
nop
mov
data16
test
ja
outsl
sub
mov
shl
xor
and
or
clc
lret
in
call
sub
das
sub
pop
push
sub
out
or
push
or
insb
jne
push
insl
hlt
call
add
mov
nop
lds
rolb
mov
mov
test
fildl
or
fistl
lcall
mov
inc
xor
test
pop
repz
or
mov
sbb
out
jnp
mov
adc
test
push
sbb
pop
mov
push
dec
bound
fldenv
fimull
mov
aas
test
sub
xchg
mov
std
lcall
xchg
pop
and
push
in
fwait
cmp
int
dec
imul
imul
inc
ret
mov
insb
ret
ss
mov
pusha
push
cld
inc
add
sar
int3
jno
xchg
mov
mov
or
fldln2
in
sub
movb
jns
jbe
rolb
pop
xchg
inc
mov
or
insb
pop
jg
fidivl
xlat
mov
ss
in
das
repnz
jo
or
icebp
add
or
rcl
pop
push
jp
and
lret
and
sub
xchg
nop
adc
sub
or
and
cmp
cmpsl
add
xor
add
jnp
lds
sbbl
jge
xchg
mov
xor
mov
jl
lret
rorb
fstpt
hlt
shll
mov
cwtl
fs
fs
sub
cmp
lret
cld
fdivs
rcl
sbb
pusha
cmc
dec
or
mov
movsb
add
call
cmpsl
pop
stc
and
sahf
hlt
lret
push
jmp
popa
int
push
popa
enter
mov
outsb
dec
ss
enter
lods
movsb
popa
pop
jnp
sbb
out
mov
lock
icebp
push
cltd
imul
fwait
ljmp
mov
mov
xorl
loope
int3
mov
fwait
sar
pop
push
fmull
call
sbb
lret
push
adc
mov
sub
mov
loope
dec
sub
adc
mov
dec
dec
and
xor
mov
sub
pop
fbld
aas
sub
sub
mov
adcl
fwait
ljmp
shrb
inc
movsl
lods
inc
test
lds
pop
rcl
xchg
mov
mulb
cmp
fstpt
out
adc
lahf
daa
jp
sub
inc
jl
int
shll
xchg
mov
adc
stc
cs
add
fiadds
xchg
sub
daa
sbb
xchg
cmp
mov
add
sbb
and
add
clc
popf
nop
adc
mov
mov
pop
or
inc
dec
mov
popa
ljmp
mov
jae
push
jns
sbb
in
inc
or
pushf
push
leave
stos
jg
int
add
insl
mov
mov
sbb
rcr
push
dec
mov
leave
pop
cmp
mov
lea
imull
ja
mov
inc
jge
dec
lods
sti
pop
iret
add
inc
hlt
xchg
aam
adc
aad
cmp
pop
gs
dec
push
fucom
shl
dec
jno
test
xor
stc
mov
test
dec
dec
mov
mov
xchg
ficompl
in
ja
out
mov
mov
push
inc
xor
sahf
and
pop
sbb
mov
pop
aaa
mov
xchg
fdivrl
arpl
xor
jo
fildll
fistpll
pop
loop
gs
push
inc
xchg
jg
dec
fnsave
or
std
push
dec
in
mov
pop
mov
xchg
js
xchg
enter
jecxz
jmp
and
adc
push
and
and
cmp
in
subb
cmp
jb
xchg
out
pop
mov
adc
sbb
xor
cmpsl
lea
or
adc
mov
add
cltd
dec
aas
out
les
notl
cmp
or
cmpsl
jg
ja
xor
idivb
inc
rolb
subl
mov
imul
xor
cltd
fsubrl
pop
sub
jo
lcall
ret
fstl
xor
push
xchg
ffreep
shrb
lods
mov
insl
mov
mov
dec
cltd
mov
jecxz
daa
call
add
fwait
push
add
jae
hlt
cmpsb
cli
jmp
test
sbb
push
jae
gs
stos
cmp
fcoml
pop
mov
xor
movsb
mov
std
cmpsl
std
rclb
movsl
popf
in
cmp
mov
cli
test
xor
xor
std
imul
mov
add
jg
cmp
dec
das
scas
sub
outsl
or
negl
mov
and
lret
sub
push
ret
mov
xor
dec
jbe
sbb
inc
in
push
inc
cmp
fcomi
jno
jg
cmpsb
addr16
out
adc
or
lahf
negl
sbb
out
xchg
mov
sahf
dec
pop
pushf
or
sti
mov
adc
repnz
mov
ss
gs
xchg
loope
rcr
sbbl
sub
xchg
and
mov
push
push
popf
imul
push
dec
testb
cmpsl
fbld
cli
cmpsb
in
adc
leave
sub
ljmp
jge
xchg
mov
fldenv
dec
jl
inc
mov
push
into
hlt
jns
in
dec
movsb
cmp
popa
cmp
push
mov
xor
adc
sbb
xor
test
jno
lds
push
ret
cmc
dec
ss
lahf
push
pop
xchg
popa
pop
and
mov
jmp
cwtl
faddl
xor
pop
lods
xchg
sub
fdivrs
ret
js
movl
or
imul
int3
incb
mov
repz
lods
mov
cmc
xor
pop
adcl
out
pop
mov
imul
aaa
fucomi
icebp
cmp
cmp
imull
pop
pop
cmp
dec
lods
rcrb
enter
faddl
arpl
ud1
mov
lahf
in
mov
xorb
cmpsb
or
mov
stc
xchg
and
inc
jae
jp
sbb
pop
aam
inc
mov
jl
xor
xor
fst
sbb
jne
call
loop
sbb
call
loop
lods
xor
cmpsb
add
test
dec
adc
cltd
push
inc
daa
iret
push
fmull
shll
cmpsl
mov
mov
in
and
jno
jb
pushf
push
les
adc
sarl
ss
aad
mov
mov
in
xchg
pushf
cs
push
cmpl
test
mov
addb
dec
xchg
sbb
mov
or
dec
js
loop
imul
dec
ljmp
movzbl
popf
nop
es
xor
stos
mov
push
and
push
cmp
mov
add
push
adc
scas
xor
stc
pop
mov
mov
mov
test
in
mov
lret
cmp
jle
pop
arpl
mov
push
xchg
scas
xchg
out
xor
loop
scas
ficoms
aaa
pop
ss
fimuls
push
mov
mov
mov
mov
adc
push
jg
mov
sbb
fwait
cltd
shll
in
cmp
sub
push
mov
dec
add
fs
xlat
fcmovb
imul
sbb
xchg
sbb
orl
loopne
push
pop
pop
cvtpi2ps
xchg
das
lret
sar
fldl
mov
cwtl
outsb
out
arpl
mov
gs
push
ja
test
mov
mov
mov
cltd
pop
push
adcl
cmp
push
push
mov
xchg
ljmp
mov
shll
pop
cmp
lret
jg
add
jnp
xchg
ret
lahf
inc
cmp
xchg
pop
push
mov
mov
add
arpl
adc
or
jge
jge
imulb
mov
sub
xchg
cli
int
jp
xchg
fstpt
test
mov
push
pop
push
jecxz
clc
xchg
movsl
add
add
adc
or
jecxz
mov
ja
cld
jo
arpl
xchg
ret
and
es
cmpsb
sbb
mov
or
or
test
cmp
mov
mov
sti
loop
insl
mov
imul
mov
mov
push
inc
stc
stos
loop
dec
push
das
add
xchg
mov
xor
lods
jne
adcb
das
leave
leave
rcll
shlb
pop
dec
jmp
nop
imul
pop
jbe
decb
adc
lcall
lret
subb
cmpsb
fs
cmpb
filds
nop
movsb
cli
lods
sbb
loope
or
in
lea
xor
sbb
test
pop
pop
xchg
adc
or
repnz
xlat
xchg
sbb
stos
jnp
mov
imul
jo
test
loope
lock
scas
aad
sti
inc
not
pop
cli
mov
mov
cwtl
out
dec
jns
call
in
mov
ja
inc
jns
shrb
jb
bnd
lret
popf
int3
hlt
inc
mov
mov
xchg
mov
inc
mov
add
jg
xchg
shl
nop
nop
stos
mov
xchg
cmp
sub
jl
insb
jg
adc
pop
nop
aam
sbb
mov
adc
int
aam
sbb
sbb
mov
shl
and
jbe
push
testl
or
dec
xor
mov
cltd
pop
add
jmp
jne
sbb
adc
jp
cmp
addr16
iret
pop
or
pop
insb
mov
cwtl
jns
jo
sahf
sahf
push
mov
adc
jno
push
inc
mov
cmp
inc
adc
mov
repnz
cmp
mov
lods
cmc
dec
pop
popf
das
sub
cmp
cmpsb
insb
mov
rcl
jo
sbb
or
out
ja
sbb
movsb
mov
sub
and
out
inc
das
cwtl
mov
add
adc
inc
cmpsl
hlt
mov
jg
loopne
push
ss
inc
daa
addr16
inc
jle
xor
mov
and
jle
fucomi
rcrl
adc
mulb
mov
or
subl
ret
fstpt
or
adc
jb
inc
push
repnz
data16
in
and
fldenv
mov
xor
inc
jmp
cmpsl
xchg
cs
test
jns
mov
in
js
repnz
mov
mov
in
loopne
in
pop
and
lods
cltd
inc
dec
jmp
xor
lret
repz
imul
xor
in
sbb
pop
pop
or
dec
inc
rcr
adcl
adc
cmp
xchg
and
cltd
xor
fsub
mov
ljmp
jle
lret
mov
add
gs
out
inc
out
rolb
fnstcw
outsb
das
jl
loope
dec
or
lea
and
fistl
pop
xor
dec
sub
pop
xor
adc
xor
fcoml
add
mov
jno
xchg
pop
adc
push
dec
pop
cmp
sbb
sbb
repz
push
loope
aaa
mov
sbb
mov
mov
add
rcl
dec
push
nop
add
xchg
add
hlt
dec
lock
dec
pop
shrb
imul
fnstenv
test
pop
neg
lret
sub
rcrl
mov
call
and
xchg
xchg
sub
xor
xchg
push
cmp
pop
test
clc
inc
mov
pop
sbb
xor
cmp
std
int3
adc
push
push
insb
das
adc
movsb
fmull
mov
subl
lret
mov
lods
cld
jno
xchg
sub
sub
insl
or
test
mov
in
dec
and
xor
repz
pop
loopne
ret
adc
in
mov
xchg
test
outsb
sub
ret
sbb
cs
push
mov
push
repnz
pop
jmp
arpl
cltd
repnz
pop
mov
test
or
ljmp
mov
fwait
stos
sub
sbbl
and
bound
sbb
and
ljmp
add
adc
cmpsb
scas
pop
fisubl
or
sbb
cmp
push
popl
aam
ss
mov
int3
aas
pop
jne
adc
aad
rol
ss
add
xorb
cmc
stos
and
lret
cmp
lahf
and
icebp
push
out
pop
in
ds
pop
movsb
cmp
cmc
fidivs
jo
fstpt
add
movsb
push
mov
icebp
popa
jb
mov
cld
fisttps
push
mov
cmc
fnstenv
fwait
jnp
out
iret
jmp
daa
push
cltd
loop
into
or
daa
dec
cmp
sub
push
mov
sbbb
ds
pop
pop
pop
test
lret
mov
icebp
clc
in
lahf
sub
call
push
push
out
mov
movsl
push
jnp
push
aam
test
push
daa
test
enter
jns
pop
push
mov
xchg
inc
mov
pop
mov
rcr
jmp
outsb
xchg
aad
fmuls
sub
add
aaa
fsubl
xor
pushf
mov
or
mov
adc
shrb
das
sbb
mov
dec
sahf
add
mov
xchg
adc
cmpsb
js
pop
mov
rorb
leave
sbb
push
inc
incb
cli
push
jecxz
mov
lock
mov
fdivr
sbb
ljmp
mov
mov
sbb
push
add
cld
ljmp
call
push
testl
out
stc
mov
mov
lcall
pop
fwait
inc
es
pushf
dec
outsb
pop
cld
lock
ljmp
push
jge
movsb
movsl
sbb
repz
adc
jge
repz
aad
inc
mov
cmp
xor
popa
cmp
sahf
jnp
push
addr16
test
cmp
push
out
cmp
loope
jns
out
das
jns
clc
push
shlb
aas
leave
leave
std
xor
test
sbb
into
out
or
mov
pop
aad
jae
pushf
adc
mov
aaa
ljmp
dec
mov
in
sub
cmp
pop
pop
mov
jo
fnsave
fistps
cmp
stc
lret
les
sub
and
stos
fildll
es
cwtl
add
xchg
pop
mov
icebp
dec
bound
inc
xor
push
cmp
testb
pop
lret
popf
out
sti
mov
std
imull
stc
lock
fldl
aad
or
mov
ja
in
ret
std
jg
mov
cwtl
fbstp
ja
xchg
sbb
out
stos
sti
mov
add
cmc
mov
andl
imul
inc
mov
and
daa
or
in
adc
add
cwtl
ret
push
inc
push
or
pop
add
bound
jno
dec
xchg
scas
decl
inc
sub
jl
adc
jmp
add
xor
fstpl
fsubrl
adcl
or
add
adc
inc
shrl
cmp
out
cltd
test
mov
push
push
ds
test
xor
cmpl
inc
movsl
dec
jle
scas
repz
bound
jmp
ret
fstl
lret
cmp
sbb
cwtl
nopl
loope
outsl
lds
mov
ljmp
imulb
dec
mov
paddusw
sub
orl
jmp
aam
cwtl
jmp
xor
or
nop
fsts
jg
mov
jnp
xor
sub
jmp
test
in
and
jb
mov
inc
or
and
arpl
inc
pop
jo
cmp
xor
dec
dec
pushf
insl
pop
lods
inc
adc
fs
test
inc
popf
adc
adc
push
jne
js
sbb
jl
jne
out
mov
sub
mov
ljmp
test
mov
fdivs
icebp
mov
out
mov
mov
hlt
movb
add
out
pop
pushf
adc
pop
fwait
pop
js
sbb
jb
in
xor
dec
fisttps
int3
dec
icebp
mov
cld
sub
imul
je
cmovle
mov
cmpsb
ljmp
nop
dec
fwait
xor
mov
mov
mul
push
popf
lods
jg
sarb
cltd
repz
or
or
inc
arpl
mov
mov
pop
ficomps
adcl
in
fcompl
or
into
push
mov
getsec
pop
lretw
push
pop
push
cmpsb
sbb
loopne
mov
adc
jno
cltd
movsl
sub
sub
and
dec
scas
sub
cmp
or
mov
and
movsb
cmp
sbb
push
xchg
fldcw
lds
cmp
add
xchg
jae
fcompl
sub
add
mov
lds
idivb
aam
ds
cmp
xor
cmpsl
sbb
push
dec
and
inc
xor
popf
lret
cmp
aad
mov
fs
cltd
jne
dec
gs
ds
jle
sub
and
push
inc
aad
outsb
enter
mov
push
adc
stos
sub
sub
leave
addl
in
inc
outsb
add
jb
fwait
mov
mov
mov
rclb
jb
popa
imulb
fdivs
out
lock
mov
mov
lock
sbb
inc
sti
test
call
adc
xor
adc
mov
leave
pop
sbb
xor
dec
xor
xor
mov
and
jne
inc
enter
pop
inc
ror
jbe
push
cs
inc
loop
push
mov
jbe
push
add
or
lret
sbb
inc
jmp
jle
cli
push
jge
hlt
stos
mov
sahf
add
in
test
loope
imul
pop
icebp
movsb
cmp
popa
push
push
in
or
andb
imul
fidivl
cmpsb
js
add
push
pop
jl
mov
stos
ss
outsl
mov
mov
sbb
xchg
jbe
add
and
mov
in
jns
ss
iret
jecxz
jo
imul
ja
adc
lret
jns
push
push
xchg
ds
sbb
loop
add
or
cli
cmc
fwait
dec
push
push
xor
data16
inc
jno
pop
imul
or
test
adc
xchg
out
xchg
nop
je
add
inc
cmp
mov
cmp
dec
scas
push
add
push
mov
push
fmul
inc
sub
pop
xor
mov
cmpsl
xchg
cmp
adc
into
inc
inc
xor
jl
xor
mov
fidivrl
loop
pop
mov
sti
and
push
sti
add
push
test
stos
addr16
push
or
xor
in
push
push
push
in
test
jb
ficompl
push
push
push
or
xchg
mov
or
icebp
subb
test
dec
jl
dec
pop
jno
xchg
xor
popf
add
xchg
dec
mov
imul
xchg
stos
ds
lret
js
cmpsl
mov
push
loop
dec
mov
cmp
aas
mov
and
cmc
adc
std
int
dec
call
lea
pop
mov
sub
sbb
fisubl
push
inc
test
lods
arpl
mov
mov
or
bound
add
test
add
or
xor
out
stos
or
sub
cmp
cmc
fdivl
jb
fisttpll
dec
inc
es
sbb
or
shll
out
mov
and
stc
jl
mov
adc
sbb
std
dec
and
xor
cmp
xchg
sub
rorl
xchg
ja
cmp
inc
std
and
jo
cltd
jnp
xor
ja
negl
push
aam
add
xchg
insb
sub
ja
mov
mov
pop
push
pop
cmpsl
call
dec
rcl
mov
int
pop
adc
mov
fimuls
jnp
icebp
and
xchg
movsb
mov
mov
or
mov
sahf
adc
shl
popf
push
sbb
imul
sub
ja
std
lret
lret
adc
loop
jo
mov
stos
sbb
mov
and
mov
and
inc
lea
setnp
jmp
add
jb
lahf
xor
call
mov
xor
sub
pop
lret
jno
dec
or
ja,pn
cmpsb
lods
repnz
aas
fnstenv
movsl
inc
lcall
scas
sbb
push
aad
push
repnz
test
int3
loop
sbb
sub
push
pop
inc
mov
in
and
ljmp
xchg
or
mov
out
fsub
leave
fnstcw
mov
inc
addr16
mov
flds
mov
jl
cmp
push
xor
sbbb
div
cmp
pusha
sbb
or
flds
sub
push
scas
lds
hlt
fisttpl
pop
mov
xor
inc
xchg
repnz
movsl
leave
lods
outsl
jnp
adcl
xchg
outsl
and
scas
mov
lcall
std
sbb
ss
out
push
or
jle
mov
std
and
cmp
pusha
mov
mov
pusha
pop
pusha
xchg
adc
or
jmp
cld
in
xchg
or
fmull
jle
sub
fdivrs
test
add
mov
lahf
xchg
xor
js
xor
jae
xchg
aas
and
and
pop
sub
ficomps
pushf
pop
jbe
sarb
fmuls
push
mov
pop
hlt
and
sarb
scas
dec
dec
pop
mulb
pushf
or
mov
adc
out
jmp
insb
sbb
xchg
enter
cmc
shll
adc
cmc
daa
fimuls
or
cld
fimull
je
data16
negl
inc
cli
cld
pop
out
mov
push
jp
inc
stc
sub
popa
or
in
inc
jb
ja
xchg
test
jb
push
jecxz
cmp
jl
push
push
inc
jno
push
mov
ficoml
shr
xchg
ljmp
xchg
mov
adc
pop
sub
jno
mov
loope
fcmovnb
xchg
mov
popf
mov
jge
sub
ds
cli
pop
fs
pusha
scas
jmp
cmp
test
pusha
daa
cmp
adc
sbb
cmp
pop
jne
into
adc
scas
xchg
jle
clc
jbe
dec
fcomps
or
test
rcr
sbb
ss
jno
dec
dec
sbb
xorb
mov
push
out
icebp
inc
mov
faddl
and
addl
sbb
pop
pop
shl
lret
cmp
fsubrl
imul
inc
dec
jle
and
adc
daa
xchg
add
push
icebp
daa
pop
stos
xor
fisubl
jecxz
arpl
and
mov
in
inc
mov
in
sti
jmp
push
xchg
leave
sbb
ret
in
jb
sub
fcmovb
xchg
cmp
sbb
push
mov
and
add
mov
or
and
dec
in
gs
cmp
sub
cwtl
popa
pop
sub
sbb
sahf
cmp
andl
jmp
adc
mov
sub
inc
ret
or
jno
dec
or
decb
mov
push
lods
and
push
inc
shrl
dec
ficompl
lahf
xlat
cmp
movsl
push
inc
lea
out
cmpsl
pop
sbb
jo
inc
gs
add
inc
das
aas
in
push
jb
ja
xor
in
xor
jmp
iret
sub
nop
mov
mov
sub
mov
js
ds
pop
xchg
adc
pop
pinsrw
mov
outsl
xchg
add
pop
enter
add
test
mov
rorb
ja
fcmovnbe
insl
fadds
dec
inc
nop
daa
aam
out
adc
xor
outsl
inc
insl
jae
cs
dec
sub
lea
push
cltd
stos
and
dec
adc
mov
into
fstpt
test
sbb
sub
sbb
dec
fcmovbe
movsb
mov
out
fimull
cmp
mov
jo
push
xor
iret
hlt
mov
jl
fs
jns
and
int
das
push
push
pushf
cld
ret
mov
and
pop
xor
imul
mov
lods
mulb
xchg
xor
mov
cmp
xor
push
mov
sub
adcl
cmp
sub
inc
xchg
iret
cmc
and
xorb
popa
loop
stos
out
inc
out
inc
mov
insb
mov
ficoms
loope
mov
insl
pop
jmp
jbe
add
mov
test
jp
and
in
push
and
jg
lods
xor
pop
or
and
mov
push
push
fcmovu
js
lea
sti
pop
bound
fildll
jb
mov
fiadds
adc
lods
sbb
es
dec
cmp
cmp
jge
jle
shlb
filds
daa
mov
xchg
pop
or
jns
enter
mov
cltd
fwait
icebp
dec
adc
sti
in
push
int
jle
xor
or
pop
cmp
mov
movsl
and
shl
fnstsw
repnz
sub
das
mov
pop
jne
fsubs
in
xorb
pop
sub
in
mov
inc
sti
imul
and
iret
add
cmp
fidivrl
xor
mov
divl
lret
popa
mov
ret
xchg
cmp
mov
jmp
push
mov
scas
sub
add
lods
jbe
dec
imul
push
push
cmp
repz
jg
xor
sub
sahf
mov
fisubl
pop
cld
outsb
mov
cld
mov
inc
lret
dec
xchg
xchg
xchg
or
add
fldt
out
dec
inc
clc
adc
rcl
ficomps
xchg
test
cmpl
cmp
and
mov
pop
gs
cli
pop
clc
pop
daa
ljmp
xorl
gs
jmp
pop
pop
xor
mov
in
out
movntq
fadd
or
lea
mov
stos
pop
pop
mov
or
add
fnstcw
sbb
sub
push
cld
pop
mov
and
xor
or
mov
jne
in
idiv
iret
insl
out
outsb
data16
xlat
xor
push
js
cli
lods
xchg
in
jmp
jae
jo
jl
xchg
sahf
in
jnp
pop
sub
out
sbb
mov
lcall
popl
or
loopne
test
test
repz
mov
sub
lret
rcll
insb
mov
xor
xchg
push
je
pop
cmp
sub
in
iret
mov
inc
or
inc
mov
movsl
leave
push
adc
mov
sbb
mov
dec
movb
xor
movsb
push
pop
stc
sub
cmc
pop
mov
ss
sbb
lods
movsb
enter
sub
jae
dec
dec
mov
cmp
and
and
sub
pop
ja
sub
ret
fcmovnb
pop
adc
xor
jnp
sbb
imul
sub
mov
and
sub
fidivrl
jb
jo
or
insb
and
xor
test
jo
pop
ds
pusha
out
in
jecxz
cltd
loopne
jbe
fnstsw
fistpl
mov
sub
out
jecxz
jle
mov
orl
and
insl
pop
cwtl
or
fistpl
pusha
repz
dec
outsl
jbe
mov
or
push
in
and
mov
cmpl
in
adc
repnz
mov
fdivl
push
inc
into
push
mov
hlt
outsl
ds
into
xchg
loope
jno
mov
mov
ret
add
sbb
jle
mov
sahf
jle
pop
lcall
data16
jmp
sub
xchg
adc
fld
fisttpl
push
mov
popf
mov
popa
sarb
loopne
cltd
jge
jle
or
and
movsb
push
mov
adc
stc
xor
sub
jnp
push
sub
lods
mov
je
inc
push
mov
inc
xor
in
sub
cmp
jbe
jg
push
mov
lcall
cwtl
xchg
pop
imul
add
scas
into
xor
pop
inc
and
and
shrl
jg
or
jg
mov
insl
pop
enter
outsb
push
and
fadds
out
mov
mov
jge
outsb
fsubp
je
cmp
and
jp
xor
in
adc
insl
push
out
ljmp
add
pop
out
cltd
inc
flds
lods
bound
adc
push
inc
fldenv
jmp
popa
in
testl
cmp
adc
cwtl
insb
jb
push
gs
and
pop
popa
xchg
hlt
dec
xchg
rolb
ja
mov
out
filds
inc
sbb
pop
fiaddl
outsl
dec
outsb
stc
push
pop
je
push
mov
pushf
and
and
inc
xorl
adc
lahf
test
test
je
mov
jno
pop
fwait
mov
call
cmpsb
or
sub
clc
and
std
out
out
repz
arpl
fistpl
mov
mov
enter
inc
cmp
cmc
mov
call
xlat
push
aam
out
add
or
mov
enter
xor
cli
add
mov
push
adc
shrb
nop
inc
lea
addb
cmp
mov
cmp
bound
adc
movb
cwtl
cmc
sbb
shl
cmp
pop
mov
push
int
mov
cmp
sub
insl
mov
jae
int3
int3
rcll
sbb
jle
lret
aaa
jp
push
jmp
outsl
sbb
out
loope
movsl
push
movsb
push
movsl
mov
mov
lock
test
ljmp
dec
pop
mov
pushf
inc
addr16
jae
test
sarl
inc
mov
xor
stos
leave
sbb
fsubrl
aaa
push
xor
lds
mov
clc
dec
int
inc
mov
ljmp
lahf
add
push
out
rolb
mov
mov
and
jg
arpl
lock
loop
stc
mov
pop
cmc
lret
inc
sub
addr16
and
jns
daa
lods
lea
outsb
aam
js
or
push
jbe
pop
pop
jne
sbb
cld
stos
test
les
out
xor
mov
into
or
mov
xor
sahf
loopne
out
xor
movsb
leave
mov
lea
jge
scas
jmp
jp
sub
push
or
add
das
inc
add
cld
and
xchg
ljmp
movsb
data16
popl
sub
jecxz
fisubs
popf
rorl
jmp
xchg
inc
mov
xor
or
arpl
and
ds
mov
insb
xchg
and
es
adc
jo
mov
jl
je
sbb
push
push
cwtl
adc
fucomp
std
sub
mov
test
and
movsl
lret
xchg
out
and
movb
add
dec
xchg
andl
or
mov
push
add
scas
xchg
add
jno
outsl
fwait
roll
mov
sub
push
mov
ror
jae
push
scas
xchg
add
mov
mov
loope
jno
and
ja
pop
inc
stos
mov
or
mov
lea
sbb
cmp
fldt
les
mov
out
push
outsl
in
imul
jo
xchg
popf
xchg
sub
xchg
and
movsb
push
xchg
cmovae
or
out
les
pop
scas
je
mov
in
in
scas
dec
daa
or
mov
sub
push
jmp
xchg
dec
cmp
aam
in
sbbl
xchg
xor
push
and
aad
push
fxch
mov
outsl
mov
scas
inc
aad
inc
push
bound
adc
jns
hlt
mov
adc
gs
and
jp
jp
sub
loop
xchg
jne
lret
fbld
ret
mov
inc
les
jb
push
xchg
rcl
std
push
jno
adc
shll
jecxz
adc
mov
mov
xchg
xor
in
cmpsl
das
inc
fwait
sahf
cmpsl
sarl
pop
sbb
testb
xor
pop
jbe
adc
in
out
enter
pushf
cmp
fs
sub
fstpt
leave
sub
jb
cmpsb
ss
sub
cmp
lods
and
cmp
loop
gs
ret
test
push
notl
movsl
pushf
or
xchg
jle
jne
mov
inc
jae
pop
xchg
push
div
or
jo
inc
sub
testb
jne
and
shll
jb
inc
xor
mov
mov
mov
nop
addr16
es
enter
jl
mov
jg
push
push
int3
jne
stos
mov
lcall
inc
or
mov
sbb
cli
adc
and
ds
loope
mov
imul
mov
addl
cmp
adc
lods
adc
or
scas
pop
xchg
enter
or
inc
push
in
cmpb
mov
bound
xchg
test
mov
add
sbb
xchg
mov
mov
push
adc
jae
adc
or
push
enter
ret
cs
lods
sbb
cmpsb
fistpll
inc
in
dec
pop
push
jecxz
or
rcrb
sahf
cmp
jnp
filds
or
cwtl
loope
js
cmpsb
pop
arpl
das
xor
idivb
pop
lahf
sahf
xchg
aaa
inc
test
mov
sbb
dec
dec
dec
addr16
push
incb
mov
adc
rorl
or
icebp
je
pop
sbb
jo
add
jle
call
jl
pop
mov
or
hlt
adc
xor
cld
push
in
sub
lcall
xor
popa
int3
adc
add
and
out
mov
jne
cli
xor
jmp
jle
popf
ret
dec
mov
int
pop
in
or
fxch
popf
inc
cmpsb
or
jo
fisubrs
ljmp
repnz
mov
in
fwait
mov
fs
cltd
mov
xchg
mov
scas
out
pop
add
ret
fnstsw
insb
js
pop
xor
data16
test
int3
mov
aaa
xor
outsl
filds
pop
push
loop
outsb
push
jne
sbb
add
mov
jo
and
loope
fstpl
and
lock
jnp
out
push
mov
sub
mov
shlb
ret
push
mov
fisubl
push
xor
jg
pop
xor
cltd
xchg
mov
testl
rcrb
fwait
sti
sbb
cmp
dec
mov
ss
sti
cmp
cmpsb
add
fldt
and
xchg
pop
ficomps
sbb
xchg
pop
repnz
cmp
xchg
lret
xor
xor
mov
cmp
arpl
cmp
popa
add
repnz
dec
cmp
mov
lret
and
mov
inc
cs
sti
mov
pushf
xchg
ficoml
jle
enter
in
cmp
out
cmp
imul
ret
les
cmp
addr16
stos
shll
xchg
and
enter
cmp
push
mov
xchg
in
xor
push
cmp
insl
fmul
enter
or
add
shll
out
popa
push
jmp
sub
jo
add
push
mov
arpl
bsf
xchg
mov
es
xchg
arpl
insl
dec
cmc
stos
jl
xchg
mov
inc
arpl
fucomp
sbb
pop
push
stc
push
loope
mov
jge
int3
sbb
flds
fcomps
iret
sbb
gs
xor
nop
enter
xor
and
negl
les
xor
js
lods
aaa
enter
sub
int
pop
shrb
adc
scas
arpl
imul
jg
or
sahf
pusha
dec
lret
js
addl
and
jne
and
outsl
add
fbstp
stos
test
mov
pop
scas
int3
fnstcw
filds
loopne
leave
inc
and
mov
xchg
aam
push
inc
ljmp
and
xor
cmp
adcl
stos
repnz
addr16
ss
sbb
mov
pop
leave
adc
mov
lods
mov
xchg
add
iret
xor
xor
and
outsb
jae
lock
sbb
dec
pushf
je
sub
add
xchg
repnz
jbe
arpl
lahf
inc
mov
rcl
in
dec
mov
jge
xchg
push
and
mov
push
xchg
dec
cmp
stc
inc
sub
ss
pop
andl
daa
pop
fimuls
mov
mov
mov
cmp
xlat
inc
xchg
cmp
daa
adc
rcll
push
mov
scas
dec
ja
sub
adc
push
cmp
addl
das
fsubp
icebp
dec
stc
adc
adc
push
dec
add
movsl
rorl
cs
cmp
add
imul
add
outsb
sbb
and
sub
dec
jge
and
jge
idivl
mov
in
sub
pop
dec
push
xchg
mov
inc
push
xor
mov
ret
outsb
sti
rcr
cmp
xchg
test
repnz
scas
loope
jmp
adc
and
ret
sbb
inc
push
adc
lods
xor
adc
mov
js
ret
addr16
pop
ficoml
adc
fstl
mov
push
fcompl
aaa
out
mov
mov
popf
push
popa
mov
mov
push
call
pop
and
inc
push
insb
ja
data16
push
jmp
mov
push
pop
ret
adc
out
inc
sbb
mov
or
rorb
jbe
imul
sbb
or
xchg
cs
pop
sarb
je
in
filds
mov
popf
mov
out
jne
out
xlat
mov
jbe
sbb
mov
add
adc
adc
xchg
aas
ds
xchg
mov
popa
mov
mov
inc
dec
lods
dec
ret
push
sub
insl
cwtl
mov
push
mov
fistpll
in
cmp
inc
mov
inc
loope
sarl
push
imul
mov
and
adc
jge
repz
insl
mov
dec
lcall
xor
mov
fs
mov
xchg
adc
inc
leave
xchg
lret
cmpsb
iret
mov
pop
mov
sbb
push
mov
or
jge
fiadds
add
jg
testb
nop
sarb
mov
popf
cmp
dec
fwait
sbb
mov
fnsave
cli
ficompl
push
xlat
mov
or
adc
jns
roll
push
sbb
arpl
fdivl
icebp
sub
test
adc
sub
inc
insb
jo
pop
decb
xchg
cld
xor
and
lcall
push
jne
and
std
push
mov
adc
push
scas
popa
push
cmp
pop
xchg
cmp
jnp
jmp
jb
xlat
pop
pop
xor
xchg
mov
cmpb
ja
jb
mov
sub
mov
test
repnz
and
inc
rolb
imul
cmp
push
add
cs
in
pop
shlb
push
adc
mov
cmp
push
pop
pop
jne
dec
divl
lret
xor
push
xchg
dec
dec
sub
xchg
add
add
cmp
pop
lcall
leave
jp
and
mov
cld
ljmp
xor
mov
sub
fwait
loop
mov
aam
test
repnz
xchg
inc
mov
lcall
shr
mov
fistps
adcl
adc
ds
shll
mov
lret
mov
xor
jmp
adc
jp
xor
ret
or
push
pusha
hlt
in
out
out
lcall
inc
mov
mov
xor
mov
mov
cmp
cld
jo
sbb
shll
xchg
cmp
stos
sbb
mov
je
icebp
out
xchg
loop
lea
hlt
hlt
jecxz
push
cltd
out
pop
testb
fcmovbe
hlt
sahf
mov
mov
jno
mov
xorl
jmp
mov
mov
add
js
addr16
sbb
mull
test
mov
leave
enter
inc
in
mov
sub
mov
sub
pop
adc
dec
mov
pop
ljmp
les
jp
jp
popf
ss
insl
std
lock
int
mov
mov
xchg
xchg
dec
push
lcall
fstps
mov
js
sbb
movsl
subl
sub
push
aas
inc
icebp
outsl
dec
js
out
inc
je
add
daa
dec
add
mov
sub
mov
dec
mov
push
jecxz
cwtl
movb
imul
leave
out
adc
xor
mov
loop
pushf
pop
cmp
sbb
das
xchg
cmp
pop
aaa
lahf
fadd
jmp
inc
sub
ret
scas
ja
pop
push
xchg
movsl
cmc
pop
sbb
and
sbb
lahf
stc
test
lock
or
xchg
mov
dec
rolb
mov
inc
sub
loope
xchg
push
jae
in
das
in
mov
push
int3
push
les
pop
cmpsb
dec
mov
mov
lea
mov
mov
rorl
cltd
adc
xor
mov
dec
xchg
mov
mov
fs
out
cmp
xchg
sti
flds
adc
fnstcw
mov
mov
cltd
sbb
and
xchg
jo
xchg
mov
lods
sbb
push
fiadds
xchg
fisttpl
xor
mov
adc
leave
sub
jl
push
out
lods
add
ret
jmp
sub
daa
dec
in
sahf
mov
pop
jecxz
cmp
ljmp
jns
or
ljmp
cmp
ret
and
jecxz
jecxz
sbb
mov
dec
xchg
repz
fwait
sub
inc
jne
andl
negb
sbb
cmp
loop
xor
jno
popf
icebp
aam
mov
mov
in
dec
xlat
mov
outsb
cmpsb
add
fisubl
fnsave
lods
int3
sbb
xchg
sar
ret
std
xor
and
adc
dec
mov
pop
push
cmpsl
adc
cmc
and
mov
imul
aad
inc
dec
push
push
mov
lods
adcl
in
es
in
shll
inc
lret
imul
jno
mull
fsubl
dec
mov
jnp
cltd
mov
push
and
stos
adc
push
jb
push
mov
scas
iret
mov
pop
sti
imul
mov
xchg
adc
xor
loope
sub
shll
rcrl
xor
or
fidivs
dec
push
jae
pop
in
jge
sahf
in
cmp
ljmp
jl
adc
incl
pushf
pop
mov
xchg
insb
movsl
sbb
adc
adc
mov
fistl
mov
jl
into
lcall
pop
pop
jb
movsb
push
movsb
jecxz
mov
jl
fdivrl
sub
inc
stos
enter
sub
and
ljmp
lock
cmp
lods
add
outsl
mov
repz
es
jns
add
stos
cmpsl
jle
xchg
pop
ljmp
stc
out
add
adc
andb
mov
mov
pop
data16
or
add
mov
xchg
cltd
rorb
mov
lea
push
lds
push
clc
dec
arpl
insl
shrb
mov
xor
test
xchg
jp
push
xor
push
and
dec
int
jae
mov
fdiv
dec
popf
add
fisttps
mov
int
jle
in
cmp
mov
mov
lods
insb
mov
mov
test
loopne
std
mov
push
js
adcl
arpl
aad
mov
fisubrl
jne
xorb
xor
popa
inc
shrl
xchg
xchg
sub
mov
mov
repz
dec
ds
push
add
lret
xchg
daa
in
mov
adc
lret
fildl
mov
mov
out
pusha
xchg
ja
ljmp
push
mov
mov
jecxz
out
or
movsb
lods
cmpsl
fdivl
push
inc
push
les
movsl
test
ds
addr16
mov
sub
movsb
sahf
cmpl
dec
jnp
mov
jecxz
cmpsb
xchg
dec
xchg
cmpsl
out
imul
call
sbb
stc
fcmovne
ret
leave
in
nop
outsl
pop
ret
cmp
sub
gs
scas
xchg
mov
std
hlt
fldcw
pop
inc
scas
adc
into
mov
xchg
pushf
sbb
mov
add
xor
sub
xchg
push
or
xchg
ret
rclb
adc
push
pop
mov
sarl
inc
test
out
aas
insl
or
mov
jo
leave
cwtl
dec
and
inc
pop
hlt
mov
aas
mov
fsubr
cltd
ret
nop
mov
loope
decb
cltd
repnz
iret
out
mov
fninit
ja
ljmp
lea
xor
bound
inc
aam
xchg
push
lods
cs
inc
or
push
fs
repnz
movb
push
ficompl
or
subb
cltd
rcrl
jo
pop
mov
mov
sti
xchg
sbb
fidivs
in
mov
shl
xor
mov
arpl
pop
repnz
mov
cs
sbb
mov
rorl
mov
stos
or
loope
jns
inc
stos
cld
and
test
pop
mov
sub
or
out
out
push
pop
fisttpl
lret
ret
push
pop
fstps
incl
pop
dec
and
push
xchg
mov
into
out
jle
add
lahf
out
pop
movsb
arpl
loope
insb
movsb
cwtl
add
mov
xchg
push
es
in
mov
or
dec
mov
ss
imul
add
xchg
push
lea
pop
mov
mov
mov
mov
das
les
out
jmp
mov
jne
movsb
daa
jo
aas
fxch
add
xor
jno
xchg
mov
mov
pop
arpl
and
jp
inc
movlps
in
sti
xchg
mov
lret
and
lea
fwait
test
dec
push
push
sarl
push
mov
push
and
mov
sahf
ret
push
xor
xor
xchg
cmp
push
movsl
mov
and
mov
out
aam
push
xor
mov
sbb
stos
insb
push
push
xlat
mov
fmulp
mov
mov
jge
in
inc
mov
cmp
insb
cmp
popa
outsl
jge
lret
enter
fcompl
jae
or
outsb
lret
orl
xchg
cmp
rcrb
dec
stc
lret
insl
out
push
dec
fs
push
xchg
mov
mov
cbtw
cs
mov
inc
leave
insl
mov
push
push
mov
push
mov
mov
ret
sub
dec
ss
leave
inc
ret
sub
fcompl
fdivl
cmp
pop
imul
mov
cmp
fsubs
mov
lahf
mov
mov
and
pop
dec
cs
or
adc
dec
sub
xlat
adc
std
stos
mov
ss
push
inc
jge
pop
loop
jno
js
dec
mov
lds
inc
xor
dec
push
jnp
sub
mov
jg
sbbl
ljmp
mov
gs
push
sub
iret
jmp
add
rclb
data16
xor
xchg
xlat
mov
jmp
les
test
inc
xor
das
mov
or
mov
mov
sti
outsb
inc
dec
adc
adc
push
pop
cmp
add
outsl
mov
inc
bound
lods
dec
cld
push
mov
cmp
into
loop
lds
gs
pushw
pop
push
mov
dec
sti
or
jmp
and
or
mov
xlat
and
int3
sub
or
popf
push
mov
mov
cmc
mov
fiaddl
mov
push
ror
cltd
iret
fmull
out
imul
xor
jg
sub
call
pop
test
lret
popa
push
push
stc
xor
out
js
xlat
rcll
and
out
outsb
es
cld
mov
xor
push
icebp
mov
xor
pop
cld
icebp
popa
dec
enter
and
jno
sub
cmp
xor
adc
jmp
sahf
or
pop
pop
push
fadds
enter
jecxz
xchg
push
dec
loop
mov
jo
int3
and
push
mov
enter
xchg
lret
cmpsl
pop
out
ret
push
mov
mov
ljmp
adc
rorl
sub
arpl
sarl
push
pop
mov
push
and
fidivs
mov
inc
arpl
hlt
mov
dec
sub
pop
pop
out
bound
dec
js
int3
out
loopne
jg
pushf
inc
es
and
ret
sbb
pushf
dec
notb
leave
pop
test
mov
push
movsl
xorb
jp
push
and
and
add
sbb
add
jmp
pop
sub
test
divl
pop
popf
fld
xlat
leave
push
push
and
loope
push
and
popa
jno
xchg
push
sbb
mov
ds
aas
rep
cmpb
out
adc
stos
inc
sbb
in
xchg
xor
mov
sti
dec
in
adc
cwtl
sub
xchg
xor
mov
repnz
xchg
sti
ljmp
pop
inc
jnp
adc
and
sub
test
push
cmp
cld
fsubrs
mov
addl
clc
cmp
test
add
shll
loope
cmp
adc
dec
enter
gs
sub
arpl
add
lock
cmpsb
sbbb
test
xor
adc
fstpl
in
cmp
sub
push
push
in
push
push
iret
mov
sbb
jne
and
lea
fwait
sub
movsb
jno
push
add
jnp
sbb
pop
faddp
sbb
fcompl
ljmp
xlat
addr16
mov
push
das
gs
imul
repz
lds
dec
xor
add
and
out
pop
int
mov
mov
in
iret
fiaddl
mov
mov
dec
sub
xchg
pop
xchg
push
mov
pop
ret
loop
jl
cltd
lock
pop
fidivl
mov
mov
mov
lcall
add
mov
cmp
outsb
fildl
push
jae
lock
add
in
and
add
cmc
pop
rcrl
push
push
and
lea
xor
or
dec
sub
adc
fs
cmc
cmpsb
lret
call
pop
sub
shll
lret
mov
insl
ret
pop
ficomps
ljmp
lock
or
inc
push
dec
cmpsb
dec
push
jno
pop
inc
imul
jnp
stos
test
arpl
iret
push
inc
inc
aaa
mov
arpl
jp
fsubrl
and
mov
sbb
add
or
cmp
cld
or
sbb
push
mov
push
xor
pop
int3
lcall
xchg
pushf
xchg
push
cmpsb
mov
lods
pushf
sub
testl
or
cli
mov
insb
cmpsl
xchg
data16
jle
movsl
add
in
jne
sti
movsb
xchg
rclb
das
into
movsb
outsl
sub
and
lods
xor
hlt
int
rcll
xor
ja
cs
loope
jae
mov
mov
push
pop
cmp
pop
popa
repz
jmp
lahf
sbbb
mov
adc
pop
sub
fstpl
lods
inc
movsl
dec
xchg
mov
dec
ret
pop
push
add
sbb
and
ret
imul
mov
sub
fwait
adc
sbb
fsubr
pop
imul
cld
ret
inc
xor
push
aas
nop
sub
or
stc
or
in
das
and
gs
xlat
lods
jne
push
mov
loopne
jle
push
rclb
aad
pop
inc
rcll
pop
scas
inc
or
into
and
gs
rorl
icebp
mov
mov
mov
repnz
movsl
add
lods
push
xchg
xor
fldl
test
cmp
std
lock
pop
push
movb
lahf
cmp
sbb
shll
dec
pop
inc
adc
loopne
inc
jns
push
adc
mov
imul
pop
stos
shlb
jmp
xchg
mov
subl
ficoms
sbb
stos
test
scas
sarb
cmpsl
push
adc
cmp
mov
add
add
add
test
insb
add
lods
into
fs
jge
adc
push
mov
sub
xchg
fs
orb
pop
arpl
pusha
je
mov
aad
mov
adc
test
mov
sub
jne
add
cwtl
mov
les
clc
aad
sarb
cltd
and
jp
fcomi
or
imull
pop
sbb
rol
jo
mov
mov
pop
popf
xor
jp
inc
fs
add
mov
add
rcll
xor
mov
loope
lcall
adc
mov
cmp
jae
ja
push
cltd
inc
adc
rcrb
iret
outsl
movsb
xchg
cmp
pop
xlat
lcall
push
mov
xchg
xchg
xlat
push
push
xor
jae
dec
xor
adc
mov
xor
push
sub
cmp
je
cmpsb
repnz
push
xor
jl
je
sbb
and
xchg
mov
dec
imul
inc
test
xlat
loopne
sbb
or
jmp
mov
and
xor
dec
push
scas
test
jo
cwtl
inc
push
lcall
xchg
movsb
loope
jae
iret
js
shlb
outsb
cmp
mov
push
xor
imulb
push
mov
and
insb
repz
cmpsl
jecxz
je
ljmp
std
imul
adc
add
dec
mov
and
sbb
cmp
out
jmp
xchg
and
push
sub
sub
popa
mov
or
mov
mov
mov
sbb
fdivrl
das
push
xlat
mov
mov
jp
and
lds
add
fs
pop
cmc
insb
inc
mov
or
orb
adc
cmp
into
lods
data16
xchg
outsb
jne
dec
ret
or
int
pop
rclb
pop
imul
add
jae
adc
fildl
add
inc
data16
jno
fdivs
fs
sub
push
pop
ffree
imul
pop
gs
decl
mov
loopne
frndint
std
popf
cmpb
js
scas
sub
aas
rorb
leave
mov
push
sbb
sbb
and
pop
loop
cmp
dec
mov
loope
repnz
pop
adc
xchg
mov
pop
or
jl
push
xor
xchg
lcall
insl
int
fdivp
or
mov
fwait
cmp
stc
movsb
cld
or
jecxz
mov
std
cmp
inc
push
pop
inc
aad
cld
push
addr16
cmp
cmp
test
mov
mov
add
add
jo
imul
movl
pop
jp
sahf
push
sbb
sbb
lds
mov
roll
or
lods
xchg
jg
ljmp
call
addr16
mov
and
xorb
clc
and
out
testb
nop
sub
mov
sub
cmp
adc
popa
mov
mov
loopne
lret
scas
jb
lahf
jl
pop
leave
stos
sbb
out
mov
bound
inc
sub
addb
xchg
mov
sub
jp
adc
lods
jg
stc
fiadds
mov
movsb
mov
cmp
js
std
insb
pop
or
sbb
out
pop
sbb
popf
subb
mov
lahf
dec
inc
add
add
test
inc
aam
aad
mov
dec
add
jb
in
scas
jo
sub
dec
gs
mov
lret
sahf
imul
mov
pusha
cmp
cmp
xor
and
pop
lret
xchg
lret
mov
sub
scas
push
push
mov
sbb
mov
test
out
sbb
ja
cmp
jg
and
xchg
xchg
repnz
cmp
fistps
cmpsb
sub
add
mov
insl
pop
nop
xor
into
in
loope
repz
addr16
adc
pusha
xchg
popf
dec
cmp
add
add
adc
pushf
sbb
push
test
cmp
std
cmp
jle
jg
pop
jecxz
mov
loopne
sub
mov
push
andl
stos
aam
cs
gs
or
fldlg2
fnstsw
add
insl
mov
subb
adc
pusha
out
into
lea
fstps
dec
daa
add
sub
push
adc
lcall
pop
pop
test
sub
sbb
mov
mov
stos
pop
add
jns
loop
sahf
aas
push
jmp
push
xor
pop
popf
pop
popf
push
jbe
jle
lcall
hlt
mov
iretw
jp
hlt
sbb
dec
aam
js
xchg
mov
mov
je
into
adc
mov
dec
mov
jg
jae
or
push
out
rclb
inc
pop
test
pusha
sahf
scas
add
mov
mov
xor
fs
scas
sahf
dec
jne
inc
jnp
add
sub
jae,pn
xor
mov
pop
lock
dec
aad
or
or
into
fildll
dec
lcall
mov
push
cmpsl
adc
xlat
push
xchg
aam
fdivs
and
xor
jae
dec
scas
mov
dec
aaa
mov
push
push
lcall
jns
push
fistpl
fs
push
fisubs
jno
fs
sub
out
inc
pop
dec
sub
mov
xchg
aad
dec
sub
fwait
add
pop
in
in
mov
roll
mulb
les
les
outsb
repnz
dec
mov
sub
mov
jb
movsb
arpl
mov
in
ret
ss
dec
sub
sbb
cmp
aas
pop
mov
xchg
hlt
fldt
insl
stc
test
call
jg
pop
xchg
in
mov
sub
in
addr16
xchg
call
cmp
hlt
xorl
push
pop
push
lock
fsubl
jmp
mov
int
xor
sub
outsl
sub
in
cmp
pusha
pop
push
mov
faddl
je
pop
and
sub
cmp
ret
push
lcall
mov
jp
xchg
in
and
and
int
xlat
cltd
jne
xchg
cmp
mov
int3
shl
call
nop
scas
out
lods
in
data16
sub
iret
stc
in
adc
dec
dec
add
and
pushf
mov
daa
out
sti
push
push
mov
cmpsl
push
push
adc
mov
mov
fidivs
xor
loopne
in
aas
mov
cmpb
cmp
fstl
add
mov
mul
sbbl
jl
es
jne
pusha
cmpsb
dec
push
push
xor
in
xor
test
sbb
lret
call
lret
mov
xchg
cmp
pop
xor
bound
sub
mov
cmpsl
xchg
adc
cmp
adcb
stos
sub
into
movsl
test
out
testb
or
pop
lcall
push
mov
cwtl
jnp
ja
push
inc
mov
call
add
mov
push
arpl
ficompl
insb
jle
xchg
sub
hlt
ret
ret
xchg
arpl
insl
mov
mov
adc
fisttpll
inc
stos
outsl
xor
mov
ret
mov
inc
test
mov
fs
rcr
movsb
and
in
movsl
fsubl
dec
and
fistps
sti
jmp
ds
insb
add
jmp
icebp
out
icebp
push
in
mov
and
xor
mov
imul
jns
stos
stos
adc
and
ret
pop
mov
les
sbb
lcall
icebp
mov
push
jl
mov
fs
outsb
sub
cwtl
es
bound
push
sbb
cmpsl
repnz
out
inc
cld
adc
out
cmp
push
pop
icebp
pushl
push
lret
divl
js
mov
jg
test
stos
dec
test
lods
or
jl
pusha
daa
inc
xchg
adc
push
aad
ljmp
add
and
push
loope
cmp
in
or
clc
xchg
outsl
push
es
cmpsl
adc
hlt
mov
jmp
divb
lods
adc
mov
lods
pop
xchg
add
popa
dec
fidivrs
add
andl
push
lods
push
xor
out
xor
cli
sbb
fwait
or
jo
pop
push
test
cmc
push
adc
jmp
inc
dec
sbb
pop
icebp
inc
idiv
fdivrl
lods
dec
lock
sahf
inc
cwtl
dec
inc
fcmovne
pop
sbb
xchg
aam
jo
or
sbbb
sahf
dec
xchg
mov
adc
add
call
outsl
xchg
mov
cmp
shlb
mov
out
mov
jo
into
imul
test
inc
mov
jg
ds
sti
fnstenv
add
aas
imul
xlat
out
out
shll
push
jae
cmp
xchg
push
insl
les
push
subl
xor
call
ret
or
mov
lret
je
lods
dec
lods
lea
dec
sbb
out
mov
mulb
nop
xor
inc
test
and
inc
jno
jb
sub
jl
movb
out
jecxz
xor
pop
popf
push
lret
mov
inc
push
adc
rol
test
gs
repnz
sub
cmpsl
cs
mov
sarl
cld
sbb
testb
xchg
pop
jmp
hlt
adc
push
mov
mov
rol
dec
imul
cmpsl
or
mov
mov
pop
and
pop
mov
sub
lods
idivl
popa
rcrb
ficoml
outsl
mov
clc
movsl
dec
aas
or
dec
dec
sub
notl
xor
scas
cltd
push
pop
pop
jne
cmp
je
mov
je
movsb
xchg
jae
cmc
out
xor
ret
les
aam
mov
popa
pop
sub
mov
dec
cli
das
fists
arpl
ret
mov
sbb
jo
ret
kmovb
push
pop
xor
icebp
xlat
sub
inc
push
icebp
mov
xchg
jcxz
fmulp
mov
mov
and
rcll
inc
cs
ds
rorl
xchg
sub
cs
xor
sbb
gs
fs
add
push
push
pushf
cmp
inc
cmp
or
ljmp
cmp
mov
lret
xchg
test
arpl
mov
loopne
cmp
shll
inc
bound
scas
cmpsb
mov
nop
cld
cmp
iret
lret
push
mov
xchg
dec
enter
sti
vmptrld
pop
ret
lahf
out
push
and
dec
sbb
std
pop
adc
or
add
call
dec
adc
test
das
or
push
mov
xchg
into
sub
aas
outsl
ds
mov
xchg
or
daa
mov
adc
push
mov
mov
or
push
lock
enter
mov
mov
outsl
jge
test
jns
dec
fsubs
lods
scas
push
add
or
pop
mov
pop
xchg
xchg
aaa
mov
lds
jecxz
test
enter
pop
out
out
les
sbb
jns
and
xchg
ljmp
aam
nop
add
jecxz,pt
cwtl
lret
pop
fwait
mov
cmp
mov
add
mov
lret
out
rclb
je
or
test
fcoml
mov
or
lret
test
sti
shll
int
insb
cmp
push
dec
fildll
in
push
sbb
xchg
adc
jg
xchg
and
out
sub
xchg
icebp
cmp
pop
adc
mov
das
loopne
jne
xchg
mov
jle
stos
fmull
jo
sub
jp
lods
mov
scas
xchg
cmc
loope
sub
xchg
insb
push
inc
shlb
mov
push
cmc
mov
inc
int3
in
shl
pop
xchg
rol
push
dec
jl
sub
clc
je
test
lock
hlt
test
in
sti
add
push
fmuls
popf
add
pop
rorl
shl
gs
mov
mov
lods
mov
cmp
call
xchg
adc
xchg
fisubrs
add
jp
push
cmpsl
adc
inc
cmp
cmp
mov
mov
xor
or
loop
lret
cmc
out
icebp
mov
fs
sbb
sub
push
xchg
popa
xchg
leave
int
daa
inc
pop
jp
sti
mov
lods
push
xchg
jno
scas
lret
cmp
mov
pop
mov
into
ficomps
loope
bnd
js
pop
insl
jo
jno
cmp
xor
lods
insl
mov
ret
pop
bound
lret
mov
xor
ss
mov
inc
add
jb
scas
dec
pop
xor
sub
outsl
mov
stc
lods
push
roll
dec
cmp
sub
mov
pop
jnp
iret
ror
push
xchg
xlat
jne
jbe
imul
adc
stos
test
sbb
and
iret
dec
adc
test
popw
imul
cmp
mov
xlat
out
xchg
push
cwtl
fildll
inc
push
mov
std
cmp
or
add
jae
jb
in
xchg
jnp
rorb
jmp
aad
scas
mov
jbe
mov
pop
bound
rorl
xchg
lock
pop
mov
stc
dec
mov
orb
jo
test
cmp
loop
inc
cmp
mov
in
dec
xor
out
mov
xlat
push
movsb
das
dec
jl
int3
outsl
addl
jns
ficompl
jecxz
in
fs
mov
and
sarb
clc
jb
mov
dec
cmp
mov
add
jae
das
mov
outsl
addl
mov
push
push
rorl
into
dec
mov
cld
fs
sbb
aam
ljmp
sbb
jg
ja
js
add
sub
sub
mov
roll
nop
scas
and
stc
in
dec
push
jbe
ficompl
mov
xchg
faddl
xor
add
mov
and
mov
movsb
jno
scas
cmpsb
xchg
daa
sbb
xchg
ret
fstl
jmp
fsubl
jmp
xchg
in
jl
mov
lock
and
jae
mov
push
out
fldenv
sbb
into
inc
mov
fcmovnb
sub
add
add
movsb
loope,pt
or
inc
xor
hlt
xchg
js
sub
or
popf
outsb
sbb
fcoml
and
mov
sub
push
xor
aad
shl
sub
lret
repnz
aad
adc
shr
lock
in
lods
inc
mov
push
test
dec
xchg
loope
mov
loope
mov
cmpsl
jecxz
xchg
lods
call
lcall
xchg
sbbb
inc
mov
daa
inc
mov
lds
out
into
mov
mov
mov
pop
orl
pop
dec
push
mulb
cwtl
sub
pop
in
fldcw
pop
das
in
int3
cmc
pop
push
pop
movsb
mov
shll
ret
jle
xor
xchg
addr16
test
daa
int
xchg
dec
out
dec
push
fisttpl
mov
fisubrl
and
ret
mov
stos
in
mov
aad
jno
clc
data16
outsb
shll
xlat
daa
jecxz
lods
and
cltd
in
mov
clc
stc
cli
add
xchg
push
cmp
lds
pop
dec
test
popf
test
bound
adc
lock
push
pop
dec
dec
ret
je
test
js
jge
ss
cld
repz
inc
adc
inc
in
insl
pop
hlt
rcrb
test
pop
sbb
orb
sbb
icebp
sbb
add
and
cmp
inc
mov
stos
aas
push
mov
out
sti
fucom
into
push
adc
mov
shl
repnz
mov
pop
jle
xor
test
jae
inc
cmp
scas
test
test
fdivrp
push
ljmp
lret
iret
inc
sub
inc
or
mov
dec
inc
in
pusha
rcrb
jle
dec
add
ret
out
dec
xchg
pop
mov
cmp
pop
dec
jne
es
add
cmpsl
not
jae
testb
pop
les
loope
jecxz
out
int
or
or
cmp
out
push
inc
xor
cmp
xor
pmovmskb
mov
add
ds
cmp
pop
cltd
aaa
fst
out
push
jnp
cmpsb
and
sub
test
xchg
adc
ljmp
xchg
sti
int3
das
cmp
jns
mov
xlat
aam
mov
out
mov
pop
je
jae
inc
cmp
in
mov
sbb
sbb
ds
push
fisttpll
daa
shr
dec
lods
fs
cmc
jbe
ret
jb
or
fisubl
loopne
xchg
sub
inc
pop
mov
les
cmpsb
dec
pop
or
pusha
mov
hlt
push
repz
jbe
es
jae
dec
pop
mov
mov
call
outsb
mov
sub
adc
adc
cmp
ljmp
push
pushf
fwait
out
stos
movsl
xor
xor
addl
jle
mov
or
mov
inc
rcrb
jns
sti
adc
push
mov
jne
repz
stos
out
jb
int
cmp
fmull
jo
cmp
mov
and
mov
iret
or
aad
cmp
push
fbld
aaa
out
xor
xor
or
shl
mov
inc
in
repnz
xchg
fisubrs
lods
lret
xor
stc
jl
lret
repz
jns
ret
add
lea
mov
popf
cmp
dec
cmovl
sub
ljmp
mov
jne
sub
into
fsubp
stos
idivb
cmp
jnp
adc
lds
dec
cmpsb
mov
mov
testb
xor
xchg
adc
push
in
mov
push
das
cli
data16
push
sbbb
int3
insb
and
sub
aaa
cmp
xchg
push
add
xchg
cmp
inc
loope
xor
loope
jne
xchg
push
mov
ja
mov
push
test
and
das
or
aaa
jnp
sub
arpl
in
xlat
mov
sbb
stc
xchg
dec
mov
and
es
insb
mov
je
xchg
push
add
adc
scas
hlt
cltd
vphadduwq
and
jecxz
sbb
mov
nop
mov
nop
adc
mov
pop
adc
pop
in
push
bound
push
or
addl
or
add
lahf
fisttps
add
jo
sub
cltd
jo
out
push
cmp
or
loop
clc
jae
gs
xor
or
push
push
sub
jle
int3
movsl
sub
sub
fldl
negl
lds
add
adc
dec
fcom
in
xchg
push
test
cmp
dec
and
js
jbe
outsb
sarb
and
cwtl
rcl
mov
sti
ficoml
in
jo
decb
adc
jmp
pop
stos
daa
jp
sbb
stos
stos
cmp
fcmovnb
icebp
sahf
cmpsl
cli
fimull
cmp
out
popa
push
xchg
stos
aad
ror
add
jg
or
push
xchg
notl
aad
mov
jg
pop
xchg
and
cwtl
dec
jnp
sbbb
ss
xchg
inc
out
sbb
cmp
outsb
insb
push
lds
xchg
jbe
jmp
jnp
lods
out
lea
pop
fsubs
rcr
add
aam
scas
pop
enter
xchg
push
out
das
sub
test
stos
nop
fs
sub
pop
or
in
jge
scas
xchg
dec
les
scas
sbb
lock
dec
fwait
cli
lods
lret
jge
loope
bswap
clc
cmpsb
sub
jne
sbb
fcompl
jge
stc
aam
mov
and
movsb
and
push
mov
pop
cmpl
test
call
fwait
xchg
stos
rorl
dec
mov
outsl
lret
arpl
mov
enter
pop
repnz
popf
cmp
push
xchg
add
pop
add
add
adc
pop
aas
ja
fs
repnz
mov
outsb
rolb
filds
jecxz
mov
dec
or
js
add
mov
cltd
sbb
fcoml
sbb
cmp
xor
and
push
pop
jle
mov
insb
shll
faddl
fwait
push
xchg
call
lea
ja
mov
int3
fcoms
test
addr16
pop
lret
xchg
pop
inc
test
ljmp
mov
loop
and
jo
into
fistpll
sub
add
mov
xchg
std
mov
add
stos
je
mov
das
fidivrs
cmp
adcl
jnp
cld
inc
push
and
adc
pop
mov
test
mov
ja
jle
mov
jae
sti
dec
cli
sbb
pop
lcall
sub
mov
cmp
and
cmpsl
loop
andl
jo
mov
jecxz
or
adc
dec
repnz
jno
orl
sbb
xor
add
xchg
xor
jo
push
dec
push
mov
in
jne
ret
dec
cmp
daa
je
fisttpl
cmc
call
xchg
dec
cs
pop
adc
rolb
push
sub
lea
xor
movsb
rcrb
push
out
insb
fst
xchg
dec
mov
cltd
mov
jne
in
scas
shll
in
dec
inc
fsts
push
mov
in
xchg
lcall
xor
aas
jecxz
jo
ja
mov
fmull
or
jno
add
das
repz
xchg
add
add
xchg
mov
shlb
add
mov
pop
lret
into
push
in
sahf
ud2
pop
mov
ljmp
or
cmpsb
push
add
dec
cmp
mov
inc
shlb
mov
inc
xchg
mov
mov
and
loop
movsb
test
dec
ret
clc
sbb
and
repnz
pop
mov
cmp
repz
je
stc
lahf
pop
mov
cli
jp
mov
push
jno
filds
hlt
iret
adc
lret
mov
insb
add
in
movsb
add
frstor
mov
xor
mov
xchg
cwtl
push
and
insb
fldln2
into
or
mov
inc
xchg
cmp
rorb
ljmp
fstl
pop
mov
es
sub
inc
icebp
repz
loopne
int3
mov
jb
or
xor
int
jbe
popa
mov
aas
dec
mov
data16
ficomps
sub
orb
mov
dec
xor
push
insb
in
std
dec
push
xchg
rol
icebp
inc
xchg
jns
jle
orl
pop
mov
push
scas
arpl
mov
leave
bound
ds
push
adc
add
push
push
jmp
xchg
cmpsl
push
lahf
cltd
jecxz
push
jns
popa
repnz
sub
jne
orb
repz
adc
fistps
into
add
in
lret
pushf
adc
divl
adc
insl
imul
adc
fiaddl
inc
or
sub
adc
popa
enter
mov
mov
cltd
adc
inc
call
outsl
inc
push
pusha
cmp
ljmp
and
stos
loope
dec
pop
cli
loop
xlat
in
dec
adc
mov
insb
stos
into
push
mov
xchg
cmc
imul
pusha
leave
fimuls
rcrl
mov
mov
lods
outsb
dec
mov
stos
and
pop
sub
mov
and
xor
fdivrl
push
jno
leave
sarb
jle
test
pop
fsub
xor
ljmp
push
lret
in
inc
pop
push
les
jg
jb
add
fidivs
aam
cmp
mov
or
cmp
leave
iret
sti
add
cwtl
loope
js
enter
cmpsl
scas
out
addb
push
add
inc
pop
sbb
dec
add
enter
jno
sub
mov
xchg
cld
cmpsb
movsb
outsb
das
jmp
jle
mov
add
fndisi(8087
cmp
js
cld
ret
stos
scas
xor
push
mov
pusha
xor
js
sti
lock
dec
leave
xchg
test
jno
xchg
jb
or
das
adc
sbb
notl
inc
jno
push
xchg
lahf
push
jge
pop
jns
lods
dec
in
fcmovbe
sub
xchg
notl
popf
push
pop
stos
mov
mov
out
aaa
jmp
cmpsl
call
int3
mov
stos
imull
movsb
cmp
iret
pop
or
imul
shrb
xor
pop
lret
imul
popf
loopne
decl
inc
fwait
mov
movsb
cmpsl
incb
mov
cs
mov
cmpl
dec
test
add
push
pop
mov
cmp
leave
fmul
sahf
dec
sbb
testb
pop
notl
sub
inc
loope
push
in
loopne
inc
scas
pop
cs
cwtl
pop
and
xor
sub
dec
data16
xor
xchg
in
dec
push
jno
inc
repnz
mov
mov
pop
mov
and
test
divb
push
lods
add
lea
push
lahf
mov
xchg
jecxz
outsl
loop
mov
lcall
dec
fbld
and
xchg
test
sarb
jbe
sub
lock
inc
outsb
xchg
lcall
fstl
xchg
xchg
icebp
inc
movsb
out
dec
inc
test
add
in
jbe
jo
inc
negb
pop
inc
repnz
cmp
loopne
inc
push
mov
push
scas
lock
adc
aam
inc
mov
into
lret
cltd
cli
and
lcall
fildl
cmc
mov
push
sbb
inc
adc
ret
mov
jg
jle
stos
push
hlt
cmpb
and
add
sbb
aam
cmovo
outsb
xor
mov
push
das
cmp
and
fsubs
fs
add
cmp
inc
outsb
ficoms
xor
fnsave
cmp
sbbl
mov
xor
std
ljmp
mov
jp
es
mov
xchg
mov
insb
outsl
ret
jo
loope
in
xchg
nop
lcall
ja
repz
loop
lahf
pop
arpl
push
incl
inc
adc
cmp
arpl
and
sbb
jae
jo
xor
cmp
int3
ljmp
int3
das
shll
mov
in
pop
pop
out
adc
out
insl
sbb
int3
sbb
or
mov
inc
mov
scas
aaa
mov
popf
mov
cmp
cmc
dec
out
mov
inc
mov
es
mov
cwtl
jne
rcr
adc
push
cmp
cmpsb
push
xor
int
insb
aad
ret
jb
pop
mov
cmp
cmc
xor
mov
jecxz
icebp
adc
pop
mov
out
pop
xor
xchg
loope
movsl
jg
push
push
or
jecxz
jge
add
decb
cmpsl
and
pop
shlb
ljmp
jl
int3
mov
call
repnz
rcll
mov
mov
inc
dec
sahf
and
mov
dec
adcl
add
xchg
mov
int
cmpsl
dec
dec
popf
pop
cltd
in
and
xor
mov
jl
push
mov
notl
fdivl
mov
loope
jns
push
dec
push
push
push
and
loopne
jle
fidivl
jno
push
inc
mov
data16
ret
jge
jae
mov
imul
loope
call
cmp
xor
or
pushf
sbb
and
out
arpl
jo
xchg
inc
sub
mov
dec
xchg
lods
in
mov
and
mov
insb
mov
lods
mov
mov
mov
cmc
adc
add
test
inc
pop
dec
sbb
andl
pop
ss
lret
cmp
or
ljmp
dec
roll
push
std
xchg
repz
and
mov
mov
test
mov
out
testl
fucomi
outsl
push
nop
mov
push
not
jle
shrb
sbb
rol
incb
mov
pop
adc
mov
mov
push
pop
fidivs
mov
outsl
inc
dec
shll
push
stc
hlt
popf
movsb
mov
xlat
mov
sbb
jmp
xor
lea
xor
mov
mov
mov
aam
in
and
and
jno
jg
mov
pop
cmp
xchg
push
mov
int
push
or
jecxz
nop
scas
sbb
add
jno
ret
xchg
push
daa
in
mov
pop
mov
or
imul
sub
xchg
cltd
lret
add
test
dec
imul
sbb
in
pop
dec
dec
je
lock
mov
xchg
xchg
outsb
in
xchg
cltd
adc
dec
fidivrs
je
in
ja
push
lahf
lea
mov
daa
inc
aad
lock
jnp
cmp
sbb
test
scas
inc
call
jb
stos
jne
push
rolb
aas
cltd
push
mov
mov
lods
ret
mov
inc
cld
mov
pop
bound
or
add
jo
ret
sbb
out
decl
xor
and
and
notb
std
mov
cmpsb
aas
mov
xor
xor
add
mov
inc
mov
jl
mov
push
fistpl
fs
test
loope
and
push
mov
push
addl
sub
test
sbb
fsubrs
fldl
dec
loope
xor
lcall
sub
jmp
push
out
and
movsb
ret
pop
sub
xchg
aaa
inc
sbb
cmp
xor
je
push
push
arpl
sub
scas
push
xchg
inc
data16
lret
adc
push
mov
in
pop
xorb
shll
cld
clc
cld
xchg
aam
stos
push
push
sti
icebp
and
sub
enter
movsl
fiadds
or
push
sub
pop
add
popf
mov
movsb
add
leave
imul
cmp
shlb
cmpsl
gs
pop
inc
pop
in
adc
lret
pop
jecxz
jne
cmp
sbb
inc
lods
into
jge
adc
outsl
sahf
orl
jg
inc
in
add
movsl
rclb
adc
scas
stos
ret
fstps
lods
in
jno
inc
sti
subl
adc
cmp
xor
adc
lock
cld
sahf
push
sub
cld
cs
cmpsb
xor
imul
xchg
sub
hlt
jecxz
call
test
and
or
dec
adc
cwtl
daa
adc
jne
sbb
cmpsb
nop
stc
mov
mov
mov
add
mov
pop
jb
push
dec
nop
bound
jmp
testl
mov
in
cmp
pop
and
push
jnp
mov
adc
pushf
pusha
adc
push
stos
js
stos
pop
mov
and
test
xor
test
sarb
je
mov
mov
sbb
in
sub
loopne
push
rclb
aam
adc
dec
or
inc
inc
sub
imul
sahf
mov
pop
stos
add
inc
dec
int
jg
test
inc
sub
dec
test
adcl
subl
ljmp
jb
mov
jl
std
xor
sahf
cmpsl
fists
sub
or
mov
jno
fdivrl
cmp
push
push
lret
lock
xchg
outsl
jmp
outsb
mov
mov
sub
sbb
jmp
out
cmp
xchg
cltd
fadds
popa
push
jp
xchg
dec
push
xorb
mov
loop
dec
stc
repnz
sub
mov
loope
cmp
repz
shrl
mov
and
push
test
lret
cmp
sub
pushf
and
xor
or
xor
sbb
movsb
and
pop
clc
cmc
mov
adc
sbbb
mov
xchg
sub
jns
add
sub
or
in
ds
sbb
mov
ds
scas
aam
mov
mov
rcr
repz
xchg
and
outsl
aaa
bnd
mov
jecxz
popf
inc
int3
test
or
push
fwait
cmp
das
outsb
ss
insl
fldenv
fs
xor
arpl
mov
arpl
pop
inc
dec
push
cltd
test
cld
mov
imul
or
ljmp
sbb
loopne
outsl
add
jmp
test
jns
aas
inc
add
push
lret
push
cli
cmpsl
adc
lcall
jecxz
adc
outsl
ljmp
jg
sbb
xchg
mov
pop
mov
xchg
sahf
stc
lock
add
and
bound
cmp
mov
xor
inc
and
ret
sbb
aam
icebp
mov
in
dec
and
aad
cmp
cmp
push
scas
in
and
hlt
sahf
xchg
mov
out
inc
adc
xor
jns
cmpsb
adc
dec
pop
out
lods
cld
scas
mov
loopne
sub
dec
cmp
or
cs
sbb
fmull
fbstp
mov
and
sub
imul
fidivrs
ja
inc
pop
sbb
stc
add
imul
into
push
sub
and
mov
jae
inc
adc
jp
push
add
push
and
and
push
adc
ficoml
js
cmpsw
ljmp
dec
sbb
lds
sub
add
sub
jnp
mov
xchg
fs
pop
insb
jl
aam
or
andl
cmp
sbb
int3
pop
pop
jne
sbb
and
popa
adc
push
adc
cmpsb
add
adc
jno
les
push
bndstx
mov
lcall
push
test
shrl
stos
lret
sbbl
ja
dec
aad
cs
lea
cmpsb
loopne
mov
movsl
mov
je
xor
xor
addb
sub
test
and
xor
cltd
inc
sub
sub
pop
add
adc
sub
push
inc
xchg
cmpl
cmp
adc
adc
lret
js
rcrb
pop
in
gs
mov
push
pusha
or
inc
loop
pop
fnsave
sub
out
inc
enter
jbe
jle
pushf
inc
xchg
rolb
pop
das
fsubl
sahf
aas
sbb
add
andb
mov
fincstp
jne
inc
cmpsl
popf
mov
scas
ret
aam
jbe
jbe
xadd
sbb
ja
insl
xor
pop
inc
adc
cli
add
test
je
sbb
push
out
add
fstps
pop
int3
fists
in
and
mov
or
leave
sarb
mov
jnp
xchg
fldt
jo
fstl
cs
xlat
inc
div
cltd
inc
test
inc
xchg
ljmp
xlat
lods
out
hlt
shll
movsb
jns
push
pop
mov
sar
and
fnsave
jp
int3
fstpt
icebp
push
movsb
rclb
mov
jno
bound
pop
mov
pop
pop
stos
mov
jne
loope
leave
push
fcoml
pop
mov
icebp
mov
dec
sub
stos
mov
mov
fisubs
or
and
cmc
mov
fucomi
ljmp
fsubrl
lock
xchg
lea
jno
les
jge
outsb
call
xor
lcall
pop
mov
mov
and
js
aaa
out
push
mov
and
in
iret
mov
jno
in
out
xorl
adc
int3
cmp
pusha
cmpsl
push
adc
lcall
scas
jle
xchg
cmpsb
sub
fdivs
test
out
mov
and
inc
pop
test
xlat
movsl
pop
adc
mov
out
sub
insl
inc
and
inc
jne
loope
dec
sarb
xor
faddl
dec
shll
mov
or
popl
dec
data16
and
add
sahf
dec
mov
fiaddl
shlb
jge
sub
cmp
inc
dec
xchg
enter
lcall
sarl
xor
ds
std
iret
arpl
push
jmp
dec
push
lods
xor
mov
mov
dec
andb
and
pop
nop
jmp
sub
inc
test
fcompl
adcl
fbld
and
mov
and
testl
aad
or
xlat
pop
xor
fxam
jge
dec
add
inc
lcall
add
push
mov
push
push
jo
scas
pop
fdivl
jno
or
aas
add
jo
repnz
sub
and
fcoms
outsl
mov
cmp
in
jno
scas
lahf
faddl
loop
mov
fcmovb
xchg
fs
outsb
call
push
push
aaa
mov
or
jns
or
enter
cmp
xchg
outsl
call
ret
clc
xor
shrb
sub
push
out
shl
xchg
push
int
cwtl
cmp
xchg
push
rol
lea
add
cs
xchg
jmp
xlat
add
int
add
inc
rolb
rol
jo
jle
nop
repz
sbb
fsubl
fwait
arpl
mov
out
arpl
cwtl
nop
lds
add
or
adc
arpl
mov
inc
mov
mov
cmp
pop
sub
xorb
mov
std
inc
mov
fisubs
fsubs
sarb
lret
pop
dec
arpl
fcoms
fucomip
mov
jl
mov
outsb
sub
scas
iret
shlb
add
xchg
test
or
mov
lock
dec
leave
jns
clc
sahf
xor
sub
cmp
outsb
stos
clc
add
mov
sbb
xorl
es
fadds
sti
push
and
shll
mov
lcall
jecxz
xchg
es
adc
bound
sbb
ss
gs
jecxz
jb
andb
in
jmp
sahf
loope
and
dec
movsl
push
in
ret
hlt
pop
cs
into
lret
sbb
mov
ficomps
push
insl
mov
cltd
out
pop
insb
lods
ficoml
mov
mov
incb
ss
cmp
lock
stos
jb
inc
imul
or
push
xchg
inc
and
into
add
sub
lods
lods
in
add
add
and
push
or
stos
xor
xchg
adc
sahf
call
or
ss
pop
sarl
ret
lods
hlt
pop
dec
lcall
rcrl
xlat
popa
shl
rcr
in
je
mov
adc
int3
adc
clc
dec
adc
ss
fsubr
or
cmp
xchg
mov
mov
inc
xchg
sahf
jb
sub
inc
outsb
push
pop
jae
xchg
pop
and
cmc
sbbb
xor
outsl
or
loope
or
cwtl
test
cli
sbb
jg
jg
mov
andb
fidivs
pop
jb
cli
jae
lds
jmp
xchg
jbe
sub
iret
out
adc
inc
inc
cwtl
inc
xchg
pop
clc
mov
inc
popf
inc
cmp
push
or
in
mov
insb
sbb
mov
cs
sbb
jmp
roll
pop
shlb
jmp
aam
movsb
sbb
pop
dec
iret
fcoml
dec
ret
mov
lods
adc
add
aas
jl
push
dec
clc
pop
pop
pushf
scas
xchg
xorb
jecxz
fs
popf
popf
cwtl
nop
add
out
orl
ljmp
cmpsb
loop
inc
adc
sub
xor
jecxz
xor
inc
call
js
fisubl
push
dec
enter
daa
add
mov
cli
xor
mov
test
in
in
mov
sbb
fsub
dec
jno
sbb
inc
mov
leave
dec
imul
imul
sub
sub
add
ficompl
xchg
xchg
cmp
rol
xchg
lods
sub
mov
clc
pop
lods
mul
lock
jmp
nop
pop
jp
test
xchg
dec
into
mov
add
xor
push
icebp
ret
in
pusha
imul
in
fidivl
pop
cld
je
into
pop
xor
mov
adc
dec
push
adc
xlat
fidivs
fidivrs
cmp
inc
dec
aas
dec
in
in
lods
out
lret
jl
mov
nop
cltd
or
jmp
lcall
xor
mov
fnop
sub
int3
in
inc
outsb
lds
inc
cmpsl
dec
aas
jno
popl
mov
les
out
fsts
xor
mov
mov
sub
cmpsb
in
aam
add
cmp
nop
inc
push
mov
sub
mov
popf
sub
jecxz
ret
aam
pop
es
sahf
or
or
jp
imul
lea
ret
and
das
mov
add
mov
mov
out
push
addr16
out
mov
pop
add
stos
jns
mov
cs
mov
add
popf
ja
pop
repz
and
lea
mov
mov
adc
fwait
mov
xor
mov
mov
xlat
cmp
popa
mov
fadd
xchg
cltd
xchg
ficomps
test
lods
cli
and
not
dec
push
mov
notb
cmp
sub
ds
les
dec
dec
xchg
inc
mov
or
movb
lret
xchg
xchg
rcll
jp
pop
mul
pop
add
rol
dec
inc
in
aad
stc
push
test
or
clc
mov
rcr
push
in
xchg
stos
stos
inc
test
mov
xor
stos
jb
jne
jae,pn
jo
leave
push
fldt
jns
adc
adc
icebp
in
jp
sub
out
xchg
insl
jl
add
ret
out
mov
stos
mov
pop
cmpsb
lods
stc
xor
test
inc
or
cmp
xchg
inc
pop
push
gs
cmp
cltd
cli
and
sbb
mov
or
les
xchg
leave
shlb
add
rcll
push
add
in
mov
add
inc
cmpsl
jno
mov
mov
ljmp
xchg
push
das
mov
cmp
and
cmp
lds
lret
idiv
clc
sub
inc
jno
in
in
mov
push
push
push
mov
insl
push
cmpsb
ret
mov
jmp
loop
and
xor
mov
jo
sub
add
scas
fsubrs
lock
push
dec
sahf
xchg
dec
sbb
clc
imul
mov
dec
movsl
sub
or
adc
cmp
jae
pop
stos
div
xor
jbe
andb
add
adc
push
xor
jo
xor
jbe
ret
flds
lret
mov
testl
aaa
fimull
fildl
adc
fnstsw
lret
jmp
mov
in
xlat
jns
or
int3
mov
cmp
sbb
lahf
xchg
xor
cmp
xchg
push
mov
jge
cmpsb
out
pminub
cmpsb
shlb
arpl
int3
ficompl
or
mov
data16
xchg
sbb
enter
xlat
xor
enter
inc
loop
push
xchg
rorl
xchg
out
ret
neg
mov
xor
in
fidivrl
sbb
xlat
mov
cmc
and
aas
push
mov
mov
push
sub
cmp
icebp
enter
cltd
fldcw
cmp
rcl
or
xchg
push
cmp
push
push
ja
pop
scas
mov
or
add
pop
pop
fisttpl
jns
out
inc
stos
cmpsl
rorb
frstor
fs
xchg
outsb
adc
push
je
mov
popf
gs
cmpsb
dec
and
dec
sub
js
push
xchg
push
lods
bound
mov
pop
and
mulb
push
inc
leave
es
int
fistpl
lock
lods
in
and
iret
test
push
mov
shrl
leave
adc
or
out
push
stos
or
mov
lods
cwtl
loop
adc
bound
sbb
jecxz
cmp
movsl
dec
add
int3
or
int
cmpsl
cld
jne
sahf
xor
out
mov
das
ja
mov
xchg
subb
pop
int3
xor
mov
or
xlat
test
or
mov
out
iret
imul
cs
cmc
cmp
sbb
sub
int3
or
ljmp
sbb
pop
xor
cmp
cmp
pushf
jl
clc
push
out
clc
jnp
js
or
mov
into
lret
arpl
mov
aaa
mov
pusha
fdivl
mov
movsl
ds
clc
je
div
cmp
inc
adc
rcrl
jmp
mov
mov
cmp
push
sub
jae
mov
jg
cmp
adc
out
sti
cmp
pop
ja
fldcw
sub
lret
push
xor
dec
mov
imul
mov
bound
mov
in
lret
or
mulb
xor
xchg
jle
jmp
or
sub
cwtl
jp
xor
xchg
stos
mov
jle
fwait
add
mov
imul
and
popa
push
imul
push
mov
jge
fisubrl
in
push
pop
stos
vpor
sbb
or
scas
and
out
rclb
aaa
insl
out
testb
pop
insl
or
ss
cmp
and
in
hlt
fcoml
inc
mov
adc
cmc
das
out
shr
adc
lcall
js
outsb
movsb
int
jae
aad
aad
dec
mov
dec
test
cmp
add
roll
and
das
jno
jbe
adcl
ljmp
lea
fnstsw
sbb
imul
adc
ja
lea
inc
bnd
fsubrs
aad
xchg
daa
xlat
mov
fsubl
inc
outsb
mov
lahf
adc
cwtl
es
test
xchg
popa
mov
sahf
and
add
rcrb
mov
and
push
sub
cmp
cmpsb
or
bound
mov
and
or
fisubrs
je,pt
dec
es
push
dec
insb
out
outsl
ds
into
adc
int3
jns
sub
enter
loopne
xchg
mov
pop
cmpsb
ror
jl
xorb
xor
lcall
movsb
aas
xor
dec
xchg
or
out
jmp
push
icebp
push
bnd
cwtl
in
add
dec
jecxz
ret
daa
mov
movsb
cwtl
mov
pop
stc
jg
mov
xchg
sbb
add
sub
ss
inc
repz
push
or
cmp
ret
test
xor
stc
mov
cmpsb
xor
das
into
repz
cmpl
adc
std
fdivrl
popa
in
jp
fsub
xchg
es
ret
ja
cmp
push
out
test
cmp
cmp
xchg
sbb
dec
adcb
or
cmpl
mov
cmpsl
mov
dec
add
cmp
insb
cmc
mov
dec
cmpsl
ror
scas
mov
fstl
imul
xor
mov
fcomi
dec
or
dec
xlat
xor
aaa
xchg
into
out
es
aaa
bound
out
push
xchg
imulb
or
xlat
lock
mov
pop
rcll
cmpsb
es
fs
adc
lock
xorb
push
scas
inc
mov
das
lods
adc
mov
jmp
jp
sti
mov
xor
mov
lcall
sbb
movsb
notb
sub
sti
mov
cmp
xchg
and
les
add
xchg
push
popf
and
stc
pop
sbb
xchg
pusha
pushf
test
iret
lods
lret
cmp
fwait
pushf
push
inc
cmpsl
leave
add
xchg
sub
add
pusha
pop
cmp
imull
aad
or
fistl
es
ljmp
xchg
into
xorb
daa
adc
in
jno
mov
out
sbb
icebp
or
and
push
lahf
xchg
sbb
pushl
mov
stos
mov
xor
mov
fnstsw
ret
or
or
fcmove
dec
into
jl
xor
jmp
ja
push
jae
xor
push
popa
adc
cmp
inc
xchg
iret
daa
xchg
ret
jnp
orl
xchg
pusha
cmp
add
cli
mov
inc
adc
ja
adc
pop
xchg
std
jge
je
dec
fstpl
lret
sub
push
jmp
ds
arpl
repz
adc
nop
push
jne
mov
aam
sbb
mov
lock
and
out
and
enter
inc
pop
pop
mov
decl
shrl
dec
inc
out
adc
cmc
bnd
mov
inc
scas
push
add
jp
int
xchg
jne
xchg
pop
shl
sbb
lods
sub
adc
xor
jge
cmp
stos
sub
fisubs
in
data16
jo
fstps
push
push
fsubs
ret
jge
adc
pop
cmovle
mov
sbb
sub
ret
mov
adc
addr16
sbb
mov
cmp
xlat
pop
mov
in
cmp
shl
dec
rcl
lahf
mov
leave
out
adc
lret
js
sbb
popa
enter
lcall
mov
pop
cmp
jno
xchg
cmp
lcall
mov
ds
dec
imul
aad
aaa
jne
jp
push
daa
sub
stos
inc
xor
jae
ljmp
pop
ljmp
pop
imul
cwtl
sbb
int
aaa
js
mov
das
adc
jnp
or
push
call
dec
xchg
and
pop
jg
int3
outsb
rclb
repz
in
std
push
aas
xor
mov
mov
dec
testl
movsb
jecxz
xchg
add
xchg
dec
arpl
mov
xchg
mov
adc
iret
xor
test
mov
cmp
jne
shlb
jb
pop
or
ret
inc
mov
lcall
push
cwtl
mov
mov
sbb
xor
popf
aaa
jmp
and
pusha
scas
aas
inc
push
out
out
xor
dec
cmpsb
push
fbld
repnz
mov
mov
enter
add
mov
lahf
sub
push
push
or
xor
cmp
movsb
jns
daa
cltd
adc
roll
bound
xor
mov
jg
xor
mov
pop
jmp
mov
fcoml
lods
cmp
mov
ja
cwtl
mov
dec
pop
mov
push
cli
ljmp
mov
pop
fadds
add
dec
jg
add
jb
and
xorb
movsl
xor
pop
mov
outsl
test
movsl
xchg
out
aad
xor
jg
add
cmp
mov
or
pushf
test
jo
popf
jno
add
fldt
add
rcl
mov
mov
mov
mov
mov
pop
jb
mov
mov
js
inc
mov
cmp
xlat
in
test
sahf
jp
sbb
mov
lahf
push
push
mov
jge
movsl
out
mov
adc
lea
jp
popa
xlat
adc
idivl
fldl
arpl
lods
outsb
int
insl
les
or
shlb
stos
jle
stos
mov
fsub
add
sbb
jns
ficompl
into
inc
sahf
int3
push
imul
push
xor
in
mov
or
lret
call
pop
mov
aas
or
gs
es
loope
inc
pushf
adc
call
xlat
add
daa
xor
jb
push
fsincos
jl
mov
loopne
cmc
cmc
sbb
or
rorb
out
fs
lds
mov
rorl
pop
sub
dec
fisubrs
xlat
scas
jge
fimull
imul
xor
xchg
cltd
in
stos
pop
mov
add
in
pop
sub
bnd
and
out
pop
inc
les
dec
inc
push
sub
aad
pop
push
movsb
adc
mov
xor
repz
sbb
loop
fildll
jmp
push
orb
aad
in
ja
and
popf
pushf
aam
jbe
ret
or
xor
enter
cld
push
jae
mov
mov
pop
cmp
test
sbb
inc
daa
or
mov
lds
pop
cli
adc
pusha
mov
sbb
push
dec
mov
fdivl
divl
adc
add
inc
mov
outsl
sbbb
sti
pop
xchg
jmp
nop
add
aam
aas
in
ret
cmp
cwtl
mov
cmp
jno
das
push
sahf
xor
aas
push
and
mov
pop
mull
fisubs
nop
js
out
mov
add
xchg
sahf
imul
mov
xor
leave
in
cmpsb
mov
icebp
aas
add
in
dec
mov
leave
in
dec
ljmp
lock
int3
inc
dec
sbbb
mov
jecxz
xchg
cmpsb
add
std
inc
stos
add
add
sub
pop
or
ja
mov
outsb
xor
and
mov
nop
inc
insb
lcall
push
movsb
mov
pop
add
fs
dec
dec
xchg
lds
icebp
or
notb
jge
les
fsubrl
adc
jge
fwait
sbb
lock
lea
xor
adc
jns
imul
lgs
dec
xchg
sahf
std
xor
adc
test
in
out
jp
movsb
test
in
jo
ja
and
sub
lods
push
mov
xchg
shl
cmp
pusha
and
or
outsb
in
adc
nop
bound
sahf
shl
dec
xchg
jl
or
xchg
mov
into
jbe
mov
fidivrl
es
and
jne
ds
xchg
mov
dec
fwait
or
stos
cmp
cmc
dec
push
push
rorb
xchg
lcall
push
jge
int3
mov
aaa
and
inc
pop
lret
mov
cmpsb
mov
popf
inc
jmp
sarl
int
insl
idivl
jp
xchg
jae
mov
mov
pop
pushf
mov
inc
enter
lahf
repz
enter
pushf
push
dec
inc
leavew
test
js
in
stc
into
or
into
adc
mov
dec
imul
cwtl
add
dec
and
dec
mov
fstpt
adc
fidivl
cmc
in
lcall
fisubs
jbe
paddq
pop
int
jb
xorb
pushf
dec
arpl
pop
cld
or
cmpsb
mov
ss
lea
dec
sarl
pop
jp
xchg
inc
sbb
jne
out
out
mov
mov
mov
inc
xor
pop
mov
cmpsb
movsb
rcl
sbb
pop
xlat
jg
aad
aas
dec
clc
cli
xchg
or
cli
mov
mov
xchg
xor
clc
sub
sub
sahf
inc
aas
imulb
mov
movsl
sbb
cli
in
mov
inc
push
loopne
sub
and
mov
ljmp
and
push
leave
sub
xchg
push
mov
adc
movsl
mov
lahf
xor
es
ret
and
clc
ljmp
sub
sub
adc
and
stc
enter
mov
test
xchg
imul
ss
push
and
fdivr
jle
mov
aad
xchg
dec
imul
sbb
or
adc
rcr
lock
mov
roll
dec
add
adc
sbb
pop
xor
mov
mov
mov
das
arpl
in
in
push
cmp
mov
inc
mov
outsl
scas
jno
out
idivl
xchg
push
cld
imul
aad
in
shll
scas
push
sbb
mov
pop
or
lret
mov
xor
jg
test
rcrb
pop
aaa
loope
mov
repnz
xchg
in
sbb
std
movsl
mov
test
and
dec
mov
js
sbb
imulb
push
aaa
dec
mov
imul
sub
test
push
mov
jg
xlat
repz
and
lret
call
loopne
cwtl
sbb
push
inc
pop
dec
pop
mov
inc
aaa
pop
push
xlat
adc
out
xchg
test
fmull
mov
mov
push
js
inc
lods
mov
in
aaa
and
dec
xchg
enter
cmp
and
xchg
cmp
and
cld
std
or
sbb
sub
bound
and
sbb
dec
add
repnz
mov
ds
lcall
fcmovnu
mov
push
in
xchg
icebp
popf
in
mov
pop
inc
ds
xor
hlt
jmp
inc
push
cmp
cmp
sub
js
test
xor
mov
dec
rol
imul
lods
lea
pop
fimuls
pop
leave
pop
jae
pop
cli
scas
sbb
movsl
int3
xor
stc
ss
lahf
rorl
dec
pushf
xchg
fs
sub
inc
xchg
adc
dec
fwait
sbb
jne
scas
xchg
into
outsl
xor
les
lea
jne
repnz
es
jne
out
or
loop
testl
adc
push
xor
arpl
and
mov
out
loope
popa
pop
jo
ja
lock
rolb
out
ja
repnz
aaa
or
ret
aaa
inc
push
into
xchg
test
push
sbbb
clc
push
idivb
add
add
cltd
jo
mov
aas
pop
mov
testl
mov
icebp
jo
ret
jae
inc
test
or
xchg
sub
jg
pop
outsl
ljmp
fidivrs
or
pop
and
add
in
inc
pop
dec
ja
xor
xchg
pop
loopne
orb
jne
subb
les
push
imul
xchg
dec
icebp
and
addr16
les
sub
ret
sub
scas
push
mov
test
dec
dec
mov
loopne
cmp
dec
aam
fldl
inc
pop
test
sti
dec
nop
pop
insb
add
andb
mov
mov
adc
int
pop
fnsave
lea
mov
push
xchg
sub
and
add
jl
mov
cltd
xchg
inc
jg
jmp
or
aas
jl
lahf
mov
lcall
sub
jbe
cld
xchg
jge
mov
xlat
sahf
repnz
cmpsb
inc
es
and
fimuls
sarb
movsl
bswap
leave
fadd
and
nop
sbb
mov
mov
leave
xchg
pushf
loopne
cmp
imul
jo
jg
cld
sti
mov
cmp
jno
aaa
lret
jge
mov
dec
aam
clc
cs
mov
test
cwtl
push
scas
loope
jae
mov
bound
cmp
aas
inc
jne
dec
push
dec
sbb
aad
fs
ret
pop
add
std
inc
lock
int
xchg
fcomps
sbb
out
decb
movsb
jbe
fisubl
sub
cmp
xor
in
sti
hlt
pushf
fcmovbe
mov
loopne
mov
sti
out
cltd
inc
aaa
add
dec
adc
and
les
data16
in
and
mov
lret
or
pop
and
xchg
pusha
in
pop
sbb
int
in
sbb
pop
mov
test
xchg
push
mov
data16
sub
xchg
sbb
fmuls
mov
pop
pushl
cmp
jns
mov
movsl
in
jno
add
xor
jnp
cmp
ffree
pop
notl
push
cmp
dec
mov
aas
enter
fistps
mov
sub
loopne
and
mov
leave
cli
jb
jbe
dec
jne
nop
stc
out
and
dec
sbb
add
xor
sub
ret
mov
leave
lcall
fimull
pop
ljmp
xor
jno
aas
popa
imul
das
pop
adcb
ljmp
sub
cwtl
push
add
cmp
cmp
ds
or
inc
sbb
or
jns
jne
or
out
xorb
pop
mov
shl
enter
mov
adc
movsb
icebp
aam
sbb
pop
mov
inc
andps
inc
mov
int
xor
movsb
add
xchg
shrl
clc
dec
jnp
notl
mov
dec
push
les
ret
mov
push
sbb
xor
cmc
incb
pop
sbb
test
jno
out
jo
aad
or
ja
rcrb
stos
mov
pushf
mov
popf
xor
into
or
inc
arpl
sub
inc
push
repz
fbld
dec
fistl
test
dec
stc
aad
cmp
aas
adc
out
rorb
cmp
xchg
mov
push
scas
aam
push
jae
movsb
mov
lods
sub
dec
sahf
test
xor
push
pushl
adc
out
call
jne
movsl
call
fldenv
adc
adc
data16
dec
push
jne
mov
xchg
inc
mov
cmp
jge
repnz
aad
arpl
sbb
inc
es
cwtl
je
mov
sbb
add
pop
mov
lods
fsubrl
nop
mov
and
push
and
cwtl
orb
stos
sub
arpl
pusha
in
mov
add
push
lcall
adc
out
push
cli
xchg
adc
push
cli
push
cmp
rcll
inc
aas
orb
imul
jo
jl
bswap
popf
mov
cmp
dec
mov
bound
push
push
icebp
sub
inc
pop
mov
or
out
outsb
repz
int
adc
into
loope
cmp
js
lock
in
jne
fsub
dec
mov
inc
jecxz
rolb
arpl
cmp
stc
mov
inc
mov
nop
mov
or
movsb
and
pusha
out
mov
mov
jle
lock
out
out
or
dec
adc
out
xor
movsl
fnsave
xorl
xchg
pop
pop
fsubrs
fisubs
cmpb
fdivr
hlt
movsl
adc
push
call
out
inc
pusha
and
test
lods
inc
pop
inc
jns
lcall
push
jl
xor
push
push
xor
es
arpl
pop
mov
in
xchg
pop
pop
imull
insb
aaa
mov
das
out
fdivs
mov
and
into
mov
and
bound
inc
test
ret
daa
xchg
rorb
jmp
clc
stos
test
xlat
pop
dec
imul
scas
jbe
sub
int
push
pop
xor
inc
push
in
pop
enter
or
iret
shll
stc
cwtl
cmp
xchg
or
cmpsl
lods
ror
pop
mov
pop
sbb
or
adc
pop
ficoms
ja
mov
icebp
stos
lret
and
jg
jge
or
lea
aas
mov
push
cwtl
mov
adc
inc
rcrl
jae
push
mov
xchg
or
jae
mov
dec
loop
mov
lods
pushf
fmuls
fsts
rcrb
push
clc
popa
sbb
loope
push
mov
ja
jno
fsubr
sub
js
leave
sarl
pushf
cmp
inc
inc
dec
add
cli
stos
mov
mov
add
es
dec
int
inc
jl
stos
pop
insb
inc
sbb
mov
mov
iret
mov
enter
mov
inc
test
xlat
jne
pop
dec
test
mov
mov
push
jg
push
cwtl
push
cmp
push
mov
test
test
sbb
je
clc
clc
dec
rcl
aad
mov
shrb
imul
insb
stos
inc
movsl
cmc
xor
enter
js
and
in
cmc
cmp
repz
sub
fs
lahf
int3
or
bound
ret
repnz
ja
fsubrp
data16
cli
pop
sub
sahf
gs
ljmp
jp
ror
mov
icebp
in
sbb
dec
dec
xor
or
nop
testb
stos
pop
out
add
rorl
push
addr16
je
and
jp
sahf
sbb
push
dec
and
xor
stos
rorb
movsl
sbb
loopne
cmp
andl
call
mov
in
and
je
sahf
repz
mov
add
pop
or
mov
adc
dec
push
cmp
mov
mov
clc
or
sbb
mov
fdivrl
leave
cli
jne
aam
repnz
lret
fstps
pop
mov
into
xor
dec
lds
lea
dec
jmp
sbb
jecxz
push
test
mov
imulb
roll
rolb
scas
xchg
and
roll
mov
push
dec
and
xchg
lcall
cmp
push
jo
add
test
ficoms
inc
xchg
adc
add
ficomps
andl
aad
fldt
jb
cmc
and
into
cmp
mov
iret
inc
sub
cmpsb
nop
mov
or
xor
inc
push
jge
testb
sbb
daa
cs
dec
adc
jmp
into
inc
mov
movsb
in
mov
sub
pop
push
xor
pop
mov
xorb
mov
rclb
push
pop
nop
jae
stc
dec
js
or
into
nop
rep
sahf
out
mov
mov
daa
xchg
ret
pushf
push
ret
popf
mov
dec
imul
jecxz
ret
mov
push
jecxz
mov
xchg
fadds
stos
out
mov
cs
mov
in
out
mov
push
adc
ret
push
cmp
jmp
inc
jp
gs
in
imul
cmp
leave
dec
aam
aaa
pop
or
and
sbb
add
xor
dec
fsubs
std
mov
imul
add
sbb
iret
xchg
std
jne
dec
out
fsubs
imul
repz
cmpsb
push
jno
out
inc
mov
nop
icebp
cld
mov
shlb
xor
dec
fcmovb
stos
xorb
push
xor
cmp
mov
shl
jbe
fsubrl
and
sahf
mov
jne
jle
movsl
stos
sti
rcrl
push
inc
popa
fisubrs
sbb
or
repz
add
sub
sbb
lret
int
out
fwait
jmp
subb
sub
lock
fidivs
lcall
leave
sti
mov
in
jne
pop
xor
adc
or
in
cmp
ljmp
inc
gs
pop
pusha
int3
inc
push
adc
mov
imul
sub
decl
inc
into
bound
dec
pop
fiadds
mov
mov
mov
pop
clc
add
push
cmp
lock
cmp
movsb
push
scas
pop
mov
xor
sarl
fstpt
fstps
push
mov
sbb
jle
mov
sub
pop
sub
mov
jns
inc
cmpsl
pop
call
push
ficompl
outsl
dec
subb
adc
dec
push
fmul
cmp
in
ljmp
xlat
test
jle
and
dec
fsub
pop
inc
inc
cwtl
push
or
fwait
jno
mov
out
je
movsb
idivb
inc
adc
xor
jno
dec
sti
pop
sub
mov
jl
inc
insl
dec
pushf
sbbl
jb
jp
or
pop
inc
sub
jb
je
mov
insb
sub
repnz
jl
add
insl
lret
fcomp
jb
repz
je
shlb
inc
pop
cmp
fbstp
xor
fwait
xor
mov
xor
inc
add
pop
xchg
and
mov
inc
cltd
dec
sbb
pushf
jbe
divb
mov
mov
mov
int
xchg
cmp
int
fdivp
insl
in
fs
and
jb
sub
push
or
test
pusha
xor
pop
jl
xor
cmp
ret
push
subl
repnz
test
gs
xchg
jne
into
jecxz
inc
mov
pop
ja
out
popf
xor
add
outsl
or
xchg
call
mov
jbe
or
outsl
jge
dec
roll
insl
test
sbbb
sub
ja
push
mov
xchg
sti
push
pop
hlt
sub
out
cmp
or
jns
sub
out
loopne
cli
xlat
into
pop
or
sub
lods
push
jp
add
cmp
pop
add
icebp
or
inc
pop
mov
xchg
in
sti
mov
mov
push
jne
dec
mov
lahf
xor
sbb
mov
sarb
mov
sbb
mov
cld
inc
or
popa
dec
pop
cwtl
je
xor
shlb
inc
iret
clc
mov
in
pop
push
int
incb
dec
bound
push
xlat
sarb
pusha
and
xchg
xor
cmp
sub
outsb
mov
insl
movsb
cld
jmp
scas
movsl
xor
mov
outsb
int3
jmp
mov
dec
lods
cmovo
imul
jnp
push
xor
or
push
dec
fbstp
les
data16
adc
jge
lock
and
loope
and
or
push
xchg
xor
stc
lcall
mov
sub
xchg
andb
push
pop
push
notb
fs
mov
out
insl
push
sub
add
mov
push
test
push
fpatan
stos
jnp
add
xor
mov
xchg
inc
inc
xchg
jg
cmpsb
in
xchg
pushw
add
dec
mov
pop
movsl
sbb
mov
pop
hlt
test
xlat
cmp
aam
in
push
jns
cmp
lock
dec
in
out
and
adc
jnp
fs
xchg
xchg
jp
inc
popa
movsl
lea
jbe
mov
out
jp
and
xor
add
cwtl
jmp
scas
lahf
sub
dec
pop
xchg
cmp
jecxz
loop
jg
mov
lcall
sbb
or
aad
jecxz
call
and
sub
dec
movsl
movsl
mov
push
dec
xlat
dec
lods
cmovs
ficompl
xor
mov
add
push
jp
or
int
fcoms
jg
cmp
cltd
pop
dec
nop
jne
xchg
insb
and
jo
cli
mov
aas
in
rorl
push
in
and
xor
lods
aas
pushf
dec
lock
sahf
pusha
jbe
jmp
mov
lahf
mov
dec
sahf
push
mov
jne
cs
dec
cld
pop
pop
inc
into
adc
cmpsb
pop
ja
gs
jl
mov
cmpsb
test
lret
outsl
dec
mov
std
lahf
ficoml
pop
popa
mov
mov
data16
stos
push
and
mov
or
dec
cmp
sbb
pop
das
mov
mov
popf
mov
or
mov
dec
ret
mov
sti
push
int3
ficoml
add
js
jns
aad
mov
js
mulb
outsb
pop
xchg
ds
pop
xchg
lret
push
mov
add
pop
testb
inc
ja
lock
popf
xor
or
add
imul
and
fwait
mov
cmp
or
test
push
in
int3
arpl
sbb
add
out
or
push
es
repnz
dec
hlt
push
sub
xrelease
cltd
sbb
jecxz
xlat
cmp
sbb
xor
push
out
cwtl
push
xor
loopne
scas
test
loope
jo
jmp
in
push
mov
xlat
dec
jnp
pop
dec
out
mov
jns
push
jle
shrb
cmp
xchg
repz
rolb
popf
cmc
jnp
outsl
and
movsl
cmp
addl
inc
lock
stos
dec
sbb
aad
lea
xor
addr16
dec
repz
bound
cmp
and
enter
in
nop
mov
mov
fcom
push
dec
or
mov
xchg
jle
jmp
incl
adc
push
lods
loop
cmc
cmpsl
inc
bound
push
inc
inc
and
in
fcoms
aas
in
insl
pop
cltd
repnz
int3
xor
inc
movsb
cmpsb
xor
jno
mov
push
xchg
pop
xchg
inc
push
es
push
fsubl
rcrb
mov
push
xchg
push
call
lock
sbb
testl
add
xor
mov
sbbl
outsb
rcl
fstpt
cmpsb
cli
adc
mov
jge
je
cmpsb
mov
daa
sbb
xor
ret
aad
mov
lahf
mov
sub
aaa
inc
pop
xchg
popw
int
inc
mov
xchg
xor
add
outsl
sub
and
fs
mov
aad
mov
inc
mov
mov
dec
dec
fistps
pop
mov
lods
mov
and
int
outsb
push
pop
mov
cltd
es
fs
sub
or
and
lds
int3
idivl
insl
xchg
jmp
push
mov
fstp
ret
and
int3
xchg
cmp
fdivrl
cmpb
loop
lahf
dec
std
or
ret
inc
adc
xchg
fsts
inc
in
xchg
cmp
cmpsb
mov
adc
out
mov
lcall
cmp
cmp
scas
movsl
xchg
mov
jp
jle
mov
sbb
cmp
mov
imulb
sbb
popf
mov
nop
mov
cmc
and
sub
and
adc
fwait
sub
pop
mov
cltd
mov
sbb
fwait
enter
sbb
push
outsb
xchg
mov
pop
int3
repz
mov
cmp
xchg
mov
push
xlat
incb
sahf
pushf
out
rorb
aad
arpl
sbb
js
or
adc
dec
jge
mov
xchg
in
in
mov
dec
push
mov
xchg
aaa
dec
fsubl
cmp
in
sub
fdivrl
lock
lds
sub
lcall
rorb
dec
mov
pushf
and
out
nop
jo
test
pop
popa
out
push
aaa
sub
add
leave
fwait
jns
test
cmp
jbe
jle
cmpsb
lret
subl
jno
insl
push
test
int3
push
xchg
jle
stc
mov
lods
rcrl
bound
and
mov
jle
lods
cld
push
lcall
and
pop
push
sub
daa
iret
inc
sub
aad
aaa
sbb
stos
enter
loop
add
aad
js
or
cmpsl
cmpsb
js
leave
enter
jbe
and
roll
cwtl
addr16
adc
mov
jo
dec
mov
adcl
sti
mov
jne
dec
lret
icebp
pop
xor
popf
and
inc
mov
jmp
dec
sub
cmpl
inc
push
in
test
cltd
jg
aam
or
fcoms
adc
test
jl
movsl
inc
lds
aad
lcall
aas
jge
xlat
sahf
aam
mov
or
mov
iret
daa
shlb
inc
cld
gs
adc
push
test
sbb
xlat
testl
mov
dec
pop
fwait
xchg
or
sbb
xor
nop
xchg
fistpl
or
iret
jo
mov
js
sbb
xor
inc
ret
add
insl
and
mov
jno
int3
aas
add
into
pusha
sarl
or
ja
insl
mov
ss
fistps
cmp
js
xor
push
push
bound
push
jle
inc
lret
stc
push
mov
dec
clc
mov
mov
jg
mov
pop
xor
iret
pop
sahf
fists
fwait
gs
push
cmc
pop
sub
jae
lds
in
lea
sbb
push
andb
pop
dec
fdivrs
xchg
dec
xchg
iret
cmp
hlt
scas
hlt
data16
lock
stc
adcb
mov
daa
dec
and
imul
xor
adc
lods
xchg
loopne
mul
sbb
pcmpeqb
mov
mov
es
pop
clc
inc
les
loop
lds
or
jge
or
or
xchg
dec
dec
and
and
orb
inc
jns
add
movsl
and
enter
push
ja
mov
push
fucom
std
inc
shll
sbb
sub
and
mov
into
popf
push
cmp
cmp
loop
neg
mov
xchg
pop
dec
rep
popa
cmp
mov
std
mov
jmp
les
dec
aaa
out
dec
jp
jl
jle
call
and
ret
add
repnz
mov
mov
cmp
mov
inc
loop
jecxz
jmp
repz
divl
lahf
mov
xchg
dec
jne
dec
push
mull
fnsave
mov
or
je
and
or
jl
pop
insl
stc
nop
iretw
pop
or
mov
xchg
and
cmpsb
daa
xlat
sbb
push
cmp
jae
enter
mov
push
imul
and
add
stos
ret
cmp
jns
jo
pop
xchg
pop
les
dec
popa
sub
dec
xor
je
add
push
aam
test
and
cs
push
xchg
mov
fcompl
cmp
jle
fwait
leave
and
hlt
repnz
es
or
sub
mov
pop
lods
sub
push
lret
movsl
cs
mull
fs
push
out
fs
lcall
or
push
data16
xor
mov
adc
push
imul
loopne
dec
pushf
jecxz
sti
pop
cmp
pop
insb
dec
fildll
orb
add
sub
and
clc
roll
pop
iret
mov
xchg
test
ja
aad
add
or
cmp
xor
fists
mov
inc
sbb
sub
jns
fistl
jne
popf
hlt
xor
lret
fsubrs
inc
cmpsb
aam
movsl
mov
xor
call
mov
xchg
mov
pop
xchg
adc
and
insl
pushf
add
pusha
mov
lahf
in
sub
jecxz
ljmp
dec
inc
push
sub
cmp
jbe
and
sarb
dec
mov
repnz
lret
inc
adc
insb
add
jmp
flds
seta
aam
jb
pop
mov
add
push
dec
dec
movb
andl
add
adc
mov
sub
dec
lods
addb
inc
xlat
clc
mov
push
push
inc
repz
mov
push
loopne
dec
loope
and
loope
xor
lret
out
repz
mov
rcrl
mov
in
std
stos
lods
push
std
xor
mov
ja
daa
sub
push
lcall
jge
cmp
adc
push
push
shlb
dec
dec
outsb
sbb
dec
sub
incl
mov
loope
dec
hlt
xor
into
aaa
repnz
lds
movsb
jecxz
sbb
and
sub
out
js
aad
lods
jne
insl
pop
mov
lods
in
xchg
pop
dec
lahf
pusha
jbe
dec
je
pop
cmp
xchg
xorb
and
dec
push
pop
pop
cltd
cmp
push
cmpsb
in
mov
sbb
pop
test
inc
mov
jl
scas
pop
inc
push
lcall
xor
mov
lret
aas
adc
add
call
leave
rcl
mov
pop
mov
add
nop
adc
cmpl
int3
lds
push
xchg
push
sub
cld
add
push
xchg
cs
push
push
sub
roll
jae
mov
add
rcll
add
mov
mov
in
aaa
cmp
lods
call
mov
and
shrb
inc
das
or
sti
pop
push
or
in
adcl
movsb
and
aad
mov
jnp
push
inc
fsub
ljmp
mov
mov
scas
jg
test
sbb
imul
jp
adc
add
fisubrs
pop
stos
int3
adc
add
cmp
xlat
cmp
jae
sbb
lds
mov
sub
dec
cwtl
or
dec
hlt
addr16
dec
icebp
ja
dec
dec
sub
rclb
sub
cmp
xchg
es
mov
inc
in
sub
xchg
xor
ljmp
dec
pusha
jle
add
or
inc
add
jb
cwtl
outsb
rclb
xchg
or
push
xor
stc
in
nop
adc
cli
adc
insb
outsl
aas
lods
aas
mov
shlb
ror
loopne
adc
mov
jno
lret
stos
ret
addr16
outsl
data16
jecxz
movsb
sub
idivl
popa
aam
cmc
cmpsl
call
jge
sub
mov
sbb
mov
sbb
pop
subb
pop
lds
mov
rclb
lds
and
xchg
mov
adc
into
sub
jae
add
loop
leave
lret
outsb
push
scas
bnd
and
inc
repnz
cmp
aad
push
mov
fs
xchg
push
pop
add
jno
jl
cmpsb
imul
cmp
aad
or
test
inc
jb
clc
mov
popf
bound
int
xor
lds
scas
out
cmp
xchg
rclb
xor
dec
scas
outsb
or
cmp
movsl
xchg
in
dec
outsl
mov
mov
ret
dec
pop
dec
ljmp
cli
inc
mov
push
popf
sahf
mov
fs
dec
pop
in
sub
push
pushf
add
xchg
push
jp
add
and
hlt
std
clc
rcrl
push
push
and
insb
adc
shr
sub
dec
aas
pushf
xchg
fxch
pop
repz
or
out
jo
pop
int
loop
or
icebp
addr16
inc
lcall
ds
push
sub
push
sbb
leave
int3
adcl
cli
leave
mov
lcall
int
lret
loopne
subl
loop
in
clc
adc
sub
push
data16
mov
daa
xchg
cmp
mov
mov
int
in
cs
cwtl
dec
nop
push
sahf
inc
cmp
test
clc
lahf
adc
jnp
jo
jo
sub
and
adc
and
cli
imul
es
jg
outsl
je
pop
out
std
mov
mov
cltd
mov
lods
aas
mov
test
mov
sub
pop
and
lcall
ljmp
dec
adc
leave
jmp
mov
popl
inc
dec
pop
add
cmpb
and
inc
fdivr
out
movsl
in
insb
xchg
call
jge
std
and
mov
std
jmp
fnstcw
out
cltd
negl
lret
add
add
pop
leave
mov
sti
into
nop
push
out
dec
add
insb
and
stc
adc
inc
jbe
dec
daa
jbe
das
out
lods
out
icebp
lea
mov
mov
sub
sub
sbb
mov
iret
push
in
pop
test
sbb
push
stc
loop
iret
adc
push
adc
in
pushw
movsl
jae
push
pop
sub
stos
xlat
xchg
sbb
jle
cld
popf
xchg
arpl
andl
xchg
fcoms
shll
imul
mov
int
in
sub
sub
por
cld
sbb
negl
push
sbb
jmp
adc
adc
ret
jg
jne
cmpsl
push
test
sarb
jecxz
or
in
test
push
sahf
clc
mov
sub
jne
ret
xchg
push
adc
sub
idivb
ret
and
sub
scas
lods
scas
sub
or
inc
and
xor
adc
or
stos
or
daa
xchg
mov
daa
clc
add
add
xor
imul
jge
jge
and
hlt
jl
bound
insl
xor
xchg
lret
push
xchg
addr16
cli
ljmp
scas
add
push
lcall
and
stos
xchg
pop
mov
sbb
insb
pop
dec
dec
cmp
xor
icebp
xor
mov
sbb
mov
mov
adc
ficomps
bound
mov
sub
jnp
xchg
jne
addr16
mov
in
cmp
in
push
repz
loope
rorl
xchg
inc
mov
jg
aas
lds
inc
mov
imul
add
repnz
adc
fstpt
test
dec
test
nop
test
xchg
lods
clc
pop
mov
pushf
fmull
sbb
call
out
shl
ret
jnp
pushf
adc
aas
jmp
jmp
inc
inc
and
dec
ds
dec
mov
mov
bound
mov
scas
sub
mov
popa
adc
xchg
out
cmp
dec
adc
pop
push
jbe
and
ljmp
jmp
lods
fimuls
jge
dec
lea
jl
dec
cmc
dec
mov
or
dec
arpl
sbb
mov
mov
jno
pop
mov
adc
push
sub
xchg
adc
stc
stc
xchg
insl
je
mov
dec
mov
aaa
mov
push
pusha
insl
mov
adc
daa
imull
push
and
xchg
xchg
cmpl
xchg
pop
mov
loop,pt
xor
idiv
movsl
data16
ret
xor
dec
and
mov
dec
outsl
out
jle
test
push
inc
cltd
cmp
jecxz
sbb
stos
aam
mov
pop
or
cld
xchg
pop
and
lods
dec
cmpsl
adc
cmp
or
cmc
mov
mov
out
mov
fs
mov
hlt
les
js
jae
cltd
xchg
pop
sbb
jae
pop
mov
mov
mov
scas
cmpsl
cmp
xchg
lea
pop
sub
jnp
dec
in
push
pmulhw
xchg
sbb
pop
and
dec
pusha
pop
loop
mov
pop
int3
cmc
jno
jo
insl
sbb
sahf
xor
xorl
xchg
pop
stc
or
xchg
jnp
shlb
add
sub
popf
aad
mov
test
sahf
aaa
data16
mov
cmp
pushf
das
daa
dec
jb
test
sub
ret
pop
jae
sti
movsl
inc
rcll
sbb
int
xor
push
xor
sar
pushw
push
and
mov
push
mov
hlt
mov
pop
out
push
xchg
int
xchg
ret
cmp
cmpb
xchg
mov
inc
into
cwtl
rorl
fdiv
xchg
rclb
cmp
dec
test
xchg
jae
mov
push
pop
adc
mov
das
fidivrl
ret
int3
sub
test
dec
jno
cmp
sbb
lds
sub
jo
shlb
test
addr16
mov
inc
xor
sub
test
sub
addr16
xchg
or
sahf
movsb
and
fmuls
cltd
ja
inc
daa
lods
pop
mov
mov
jge
push
scas
fidivs
push
sbb
test
xchg
andb
and
pop
flds
mov
out
jo,pn
sbb
cld
add
xor
push
jg
popf
sub
dec
jg
lea
mov
dec
sbb
sub
pop
jl
out
jo
ret
jp
mov
jne
mov
clc
popa
pop
sub
cwtl
loope
int3
stos
push
mov
testb
sbb
and
sub
cmp
rol
pop
pop
dec
jmp
sbb
fsubl
cmp
and
xchg
dec
stc
xor
sbb
sub
or
cmp
lods
add
adc
adc
sbb
xchg
cmp
mov
shll
in
xchg
imul
xor
out
test
sub
mov
fcom
idivl
mov
jb
andb
or
push
fnstenv
cmp
xchg
add
push
int
dec
out
out
and
outsl
dec
daa
or
cld
addr16
iret
pop
rcrl
jo
or
sub
mov
ss
xchg
cmp
sarl
bound
movb
outsl
movsl
nop
xchg
repz
mov
movsl
jle
addb
mov
ret
jae
cmp
sbb
dec
cmpsl
out
imul
or
arpl
dec
ds
add
sar
iret
js
imul
push
cmp
push
es
mov
les
and
mov
xchg
lds
daa
sbb
ret
jns
sbb
movsb
jae
jl
adc
xor
mov
mov
pop
mov
pop
mov
movnti
push
lods
and
andb
sbb
je
pop
cmpsb
iret
and
insb
rorl
cmc
inc
xor
xor
push
in
inc
pop
arpl
sub
cli
adc
lcall
mov
fnstenv
mov
xchg
andb
or
sbb
cmp
ds
rolb
cmp
out
xchg
push
icebp
jmp
add
push
or
scas
arpl
push
pop
aad
mov
and
loop
xchg
or
xchg
push
or
adc
lret
jne
dec
adc
mov
cwtl
sbb
jns
repz
mov
ljmp
pop
test
jle
enter
movsl
sti
popa
add
lock
and
cmpsb
addr16
mov
and
aam
shrl
cmp
mov
shl
inc
add
je
test
sbb
lock
sub
fmuls
push
dec
js
cld
scas
cmp
inc
push
filds
stos
test
jae
and
in
jmp
xlat
pop
mov
ror
iret
push
sub
scas
sti
test
dec
out
lret
shlb
shrl
out
push
push
ja
jecxz
mov
aam
push
inc
jno
mov
cmp
loopne
repz
das
loope
addr16
leave
into
cmp
shll
xchg
pop
cmpsb
jg
xchg
ror
mov
add
arpl
out
pop
jbe
dec
push
add
popf
cmpsb
rclb
gs
adc
push
scas
xor
xchg
enter
cltd
jno
mov
xchg
mov
mov
pop
in
or
in
cmp
loope
mov
lret
jg
mov
icebp
or
test
dec
or
mov
xor
and
inc
adc
mov
xchg
mov
das
mov
test
out
cmpsl
pushf
add
or
insl
into
mov
dec
arpl
insb
fisubl
and
jg
shll
cmp
cmpsb
fldcw
mov
call
divl
push
cli
fldenv
add
sbb
cld
into
roll
icebp
jns
cmpsb
mov
jbe
mov
or
mov
stc
cmp
jmp
testl
mov
xor
ja
jl
add
scas
push
std
sub
add
sub
push
mov
add
inc
lcall
push
push
movsb
push
push
mov
adc
dec
xor
arpl
mov
test
loope
sarl
sbb
dec
leave
fs
sub
or
mov
pop
dec
jge
xchg
add
pop
jp
dec
mov
into
push
nop
pushf
and
leave
stos
jns
test
iret
mov
jp
lds
push
fisttpll
pop
mov
push
ret
fwait
int3
ret
out
imul
cmp
je
and
leave
sbb
sbb
jecxz
sbb
add
ljmp
xchg
pop
sbb
jl
sub
int
or
negl
push
push
xchg
push
ret
adc
sbb
push
mov
repz
js
and
xor
mov
push
dec
cmpsb
push
fwait
pop
or
stos
pop
xchg
mov
rcr
xlat
lock
popa
mov
add
sub
sbbl
outsb
scas
xchg
test
loope
pushf
cltd
std
push
pop
cmp
add
add
jl
sbb
jl
xor
fnstsw
pop
mov
or
les
loop
cmpsb
jp
xor
fadds
add
sub
aas
stc
mov
outsb
fsts
fmull
push
cmp
push
int3
dec
mov
xchg
jg
shr
pop
lea
aas
dec
xchg
mov
mov
pop
cwtl
sbb
scas
xor
cmpsb
cmp
insl
movsb
add
mov
lods
inc
ror
mov
mov
xor
pusha
es
jne
pop
sub
pop
jge
fimuls
adc
popf
gs
dec
sub
mov
std
jg
imull
jb
cmp
ftst
ja
pusha
hlt
xchg
adc
arpl
leave
repz
fnstcw
mov
jno
cwtl
andl
adc
dec
sbbl
data16
mov
out
add
mov
inc
in
aaa
push
lret
cmpsb
icebp
les
xorl
jg
test
dec
adc
sub
in
jmp
ret
ret
addb
adc
mov
mov
jno
push
test
fistps
xor
pop
scas
rcrb
pop
mov
int3
pop
add
loopne
leave
insl
xchg
jle
dec
jge
daa
into
inc
pop
rorl
bswap
aaa
add
subl
and
in
adc
cmpsb
sub
xchg
pushf
cmpsb
cli
push
adc
pop
cs
inc
push
xor
push
daa
xor
or
clc
dec
pop
ret
mov
mov
jmp
jle
pop
and
das
jo
call
stc
mov
push
dec
fwait
std
loop
in
inc
mov
xchg
in
bound
mov
lret
mov
jbe
sbb
xor
inc
push
jg
push
fistps
js
std
ud1
jns
and
ljmp
pop
mov
dec
adc
sub
push
mov
fnstcw
jmp
cmp
sbb
pop
roll
jo
push
arpl
addr16
ficoml
mov
cmp
sbb
adc
outsb
jl
out
xchg
int
aad
into
ds
lea
mov
jge
outsb
imul
lds
push
sbb
nop
push
add
out
push
and
pushf
pop
adc
xchg
inc
ljmp
jo
xchg
aad
push
pusha
lock
xchg
fcoms
fs
insl
les
out
xchg
std
test
cltd
push
out
ljmp
xor
xchg
daa
stc
dec
xchg
and
sub
mov
fadds
add
idivb
jp
push
insl
inc
xchg
pop
pushf
daa
testb
jno
scas
fwait
enter
cwtl
lock
out
mov
adc
inc
pop
lcall
loope
jnp
inc
push
push
jg
lret
pop
test
idiv
addr16
sub
mov
sub
jb
js
fldenv
roll
hlt
orl
lods
xchg
inc
and
cmp
in
and
pop
push
inc
jle
in
pushw
aam
ret
into
jge
fmuls
icebp
mov
adc
notb
jg
int
ret
out
stc
fistl
scas
mov
scas
adc
mov
data16
jl
hlt
and
das
clc
mov
pop
add
add
jno
imul
in
mov
sbb
jg
xchg
jno
push
jg
sahf
cld
es
mov
cwtl
aas
mov
lea
mov
mov
enter
xchg
jg
mov
adc
cltd
lods
mov
push
dec
addr16
jp
mov
xlat
pop
insl
xchg
outsb
adc
into
adc
hlt
dec
in
lcall
pop
out
cltd
loopne
cmp
inc
push
sbb
pop
imul
jb
clc
sbb
insl
movsl
in
enter
aaa
jno
pop
jg
dec
lods
cmp
aad
xor
iret
mov
jp
out
sbb
jg,pt
and
jp
lret
aad
lds
dec
jns
mov
xor
dec
addr16
cltd
arpl
inc
imul
lcall
ja
push
or
mov
or
icebp
pusha
xchg
lea
dec
ret
xchg
pop
inc
jle
pop
fsubl
jns
push
data16
and
loope
jbe
or
mov
fistps
outsl
adcb
adc
adc
fwait
dec
pop
pop
push
jmp
int
imul
mov
jno
repz
shr
jp
inc
js
rol
cmp
sar
fdivrs
sub
push
dec
xchg
ret
cli
rclb
sub
xor
stc
lods
inc
xor
xlat
adc
rorl
in
adc
mov
jp
gs
in
cmc
aad
sbb
ss
jecxz
sbb
sub
inc
pop
fiadds
xor
cmp
lret
sub
mov
xchg
mov
test
and
fstpl
mov
or
mov
mov
mov
push
inc
sub
inc
xor
mov
fdivr
xchg
and
into
out
arpl
adc
in
jle
jg
ret
in
sub
adc
inc
xor
aaa
outsl
push
or
imul
loop
push
push
arpl
add
pop
fadd
cld
or
jle
in
out
lret
adc
dec
movsb
movsb
cld
add
in
mov
mov
cmp
movsl
shrb
pop
mov
cmc
lcall
lods
pushf
sbb
pop
repnz
mov
dec
out
sub
js
inc
sbb
sbb
mov
sarl
stos
in
scas
sub
arpl
add
aas
mov
cltd
imul
push
inc
sbb
or
aad
leave
movsb
cmpsl
xchg
leave
stc
xchg
mov
imul
inc
jmp
fsubrs
movsl
lock
jl
popf
addl
popa
push
mov
fxch
sub
xor
in
mov
addr16
xor
ljmp
push
addr16
pop
mov
aad
xchg
adc
loopne
sbb
push
imul
lea
add
xchg
cmp
popf
mov
repz
imul
cwtl
pusha
inc
xor
add
jl
sub
aad
add
pop
pop
xor
adc
mov
scas
mov
push
pop
pop
and
sub
lret
in
fbstp
dec
mov
jp
xchg
mov
dec
hlt
lods
xorl
aam
ficoms
aaa
cs
jb
dec
mov
sbb
adc
leave
mov
push
jo
adc
push
pop
inc
add
xchg
and
rorb
mov
push
dec
jge
mov
sbb
fstpl
push
mov
arpl
push
inc
fs
mov
and
imull
fwait
decb
adc
aad
or
mov
mov
pop
pop
sti
ret
adc
popa
scas
adc
jbe
push
mov
push
mov
std
add
in
rcl
mov
inc
subl
call
out
aas
adc
dec
lcall
call
or
in
ljmp
or
fcompl
jbe
cmp
lret
lcall
inc
or
aas
mov
inc
push
xchg
pop
push
pusha
outsl
fsts
jmp
pop
insb
jno
test
sbb
adc
pop
and
lock
fwait
cmp
pop
sub
dec
idivb
mov
ss
pop
pop
mov
inc
das
es
insl
push
jno
add
push
push
lds
dec
outsb
dec
lea
fidivl
lock
test
jnp
loop
subb
fucomp
inc
sarb
pop
and
ss
push
in
out
cmp
sub
lret
fnsave
jae
daa
gs
xchg
repnz
fwait
repnz
in
pushf
xlat
adc
mov
or
sub
mov
dec
jp
or
sub
sbb
push
mov
xchg
inc
shrl
mov
in
into
pushf
xor
fisttpl
dec
popa
insb
lcall
pushf
xchg
movsb
data16
adc
mov
ds
js
xor
repz
push
and
xor
rcl
xchg
call
cmp
ret
lcall
push
gs
jae
iret
mov
jno
or
inc
jnp
call
pop
push
mov
sahf
cmp
rolb
fcmove
lahf
sub
jmp
or
push
fsincos
add
push
fwait
jmp
ret
push
cli
iret
pop
cmp
and
data16
fcompl
movsb
insl
or
ja
xchg
mov
movsb
inc
mov
out
push
out
inc
pop
inc
sub
mov
mov
cmp
lods
mov
inc
mov
pop
lea
push
lods
test
mov
call
cmp
aaa
xchg
stos
sbb
aad
test
or
imul
int3
std
ja
mov
aad
cltd
cmpsl
lods
enter
shlb
aad
jb
cmp
mov
xchg
rcll
js
push
stos
addb
push
data16
xor
and
loopne
ret
icebp
pop
jecxz
in
scas
js
sbb
push
add
lods
sub
stos
push
mov
gs
sarl
les
and
xchg
mov
and
mov
cmpsl
add
push
rcll
push
xor
aam
outsb
sub
push
jmp
push
mov
or
imulb
mov
dec
jecxz
testb
pushf
shlb
sbb
mov
add
aam
push
jns
pop
test
push
mov
mov
stos
repnz
lods
out
mov
test
shrl
adc
inc
imul
add
xor
jae
cwtl
cld
scas
adc
mov
repz
imul
sub
jmp
dec
fsubl
jns
cmova
add
xor
xchg
cmpsb
mov
adcl
xchg
lret
loope
cwtl
mov
mov
xlat
xor
lret
push
jo
mov
dec
adc
mov
inc
les
adc
popf
fnstcw
out
xchg
push
add
mov
movsb
sub
push
mov
bound
fildll
cmp
nop
and
je
cmc
sub
mov
roll
test
mov
push
test
push
insb
mov
data16
cli
push
fisttpl
inc
inc
dec
push
mov
add
repnz
sub
xchg
stc
mov
mov
fidivrl
pusha
mov
out
loop
cmc
test
jne
add
pop
xchg
dec
shlb
pop
xor
adc
out
add
add
popa
pop
jmp
and
leave
and
mov
insb
scas
jl
jb
mov
xchg
and
push
xchg
lahf
arpl
popf
push
sbbb
scas
push
sbb
mov
stos
mov
mov
lcall
sbb
jno
inc
mov
dec
cmp
jmp
xchg
fisttpll
test
dec
or
xor
mov
push
ljmp
push
push
xchg
jns
xchg
xlat
adc
mov
fsubs
push
outsb
jle
ja
mov
inc
and
lock
fdivl
cmp
out
or
mov
cmp
jmp
push
push
cmpsl
repz
jecxz
mov
push
insl
arpl
pop
out
cmp
adc
dec
ds
and
xchg
cwtl
push
movsl
clc
je
jp
leave
xor
aas
cwtl
int3
aas
gs
or
cmpsl
sbb
jns
sbb
outsb
test
push
clc
repz
int3
adc
out
mov
stos
aas
jle
mov
test
clc
les
ds
xchg
adc
sub
std
mov
add
repz
jns
es
gs
fistps
mov
and
pusha
aam
leave
aad
cli
in
stc
ret
pop
mov
call
mov
cmp
repnz
inc
clc
jecxz
inc
bound
imul
sbb
jl
pop
testb
mov
inc
das
adc
arpl
arpl
cmp
in
cmp
cli
jmp
ljmp
mov
test
decb
mov
add
jecxz
movd
mov
pop
inc
notb
adc
and
adc
mov
lea
test
push
push
jp
andb
xchg
mov
mov
mov
and
dec
aad
mov
loope
cmp
sbbb
movhps
jp
lcall
sbb
add
xchg
shlb
adc
mov
xor
mov
out
insb
test
ds
xchg
dec
xor
push
movl
xchg
notl
outsl
xor
test
lret
pusha
jno
call
clc
mov
mov
jle
xchg
sub
outsb
push
inc
fldenv
pushf
loope
xchg
andl
inc
movsb
out
jno
aas
scas
pop
movsl
sbb
rorl
jbe
sbb
jle
add
and
mov
cmpsl
nop
jge
lahf
xor
mov
xor
rorb
cwtl
enter
dec
push
rolb
loope
test
addr16
test
inc
addr16
mov
jns
movsb
cmp
stc
pusha
lret
push
ret
out
jo
dec
cli
cmp
aaa
je
xchg
adc
mov
daa
xchg
xchg
pop
loop
inc
out
dec
sub
xlat
dec
dec
jnp
xchg
adc
out
cmp
mov
cmp
cltd
and
test
jmp
add
rcll
inc
add
int
cli
lahf
test
aas
mov
inc
pop
sub
or
iret
mov
push
inc
adc
call
mov
jg
ss
icebp
movsb
cmp
ja
fwait
data16
iret
ret
or
push
jl
mov
mov
push
cld
jg
dec
xchg
jl
push
loop
and
jbe
push
sub
sub
aas
fsub
jecxz
or
xchg
daa
ja
lock
mov
aam
out
leave
jno
dec
aaa
call
imul
pushf
mov
or
add
jnp
rclb
shll
rolb
xor
xorb
xor
mov
adc
in
jle
push
ret
fs
mov
mov
xor
shrl
adc
mov
aad
loope
cmpsb
sti
mov
add
jmp
lds
adc
sub
mov
popl
ret
inc
aaa
repz
lcall
sbb
repz
sbb
mov
inc
cli
adc
clc
dec
mov
fiadds
jnp
sbb
adc
add
ret
stos
inc
popa
mov
enter
mov
jge
insb
xchg
push
lods
xchg
cmpsl
xor
rclb
cmp
loop
mov
xor
iret
mov
std
iret
movsl
xchg
jl
lock
arpl
iret
pop
into
pop
jl
stos
popf
int3
aad
and
jno
sti
dec
mov
in
xor
into
inc
fcom
or
pop
in
push
pop
std
or
jnp
cmp
aad
sub
xchg
dec
sbb
and
scas
push
ror
sbb
jb
and
pop
cmp
loope
jo
mov
inc
sub
iret
mov
xchg
in
lods
or
std
arpl
sbb
jb
imul
inc
push
xchg
loope
mov
dec
sbb
adc
push
fidivl
inc
and
jnp
cmp
stos
sbb
mov
inc
int
fsub
pushf
xor
adc
in
push
cld
imul
int3
into
and
aaa
sub
lock
popa
ss
fwait
mov
rcll
fadds
in
cs
bnd
push
out
sub
and
push
cmp
dec
repnz
pop
inc
sbb
stos
scas
or
jb
pop
aas
pop
lcall
divb
adc
inc
orl
mov
mov
jp
lret
loop
fisubs
repz
rcrb
popl
fwait
sbb
or
mov
scas
mov
xor
ja
divb
in
sub
loop
dec
mov
adc
scas
int
movb
sub
add
add
dec
push
xor
insb
xor
adc
std
popa
fsubs
jle
fbstp
lret
lret
mov
ja
mov
lods
arpl
ret
push
mov
stos
ja
cmpsl
dec
jl
adc
jae
stos
jo
dec
xor
mov
loopne
icebp
imul
push
pop
inc
mov
sti
mov
rcll
mov
popf
xchg
es
movsb
insb
sbb
ja
jl
xchg
push
jp
lahf
loopne
orb
cltd
dec
stos
xor
ror
sub
or
mov
mov
fcoms
xchg
mov
leave
addr16
leave
jg
mov
insl
stos
or
and
int3
cmc
xor
cmp
inc
test
or
mov
dec
mov
or
out
add
mov
rep
sub
sub
sbb
fsubr
fcmovb
add
mov
stos
sub
imul
ret
dec
pop
jne
cwtl
push
adc
test
inc
mov
clc
jecxz
or
push
jg
pushf
stc
outsb
adc
test
sbb
in
xchg
pop
lret
movsb
in
inc
mov
shll
xchg
dec
mov
add
shll
jo
outsl
cmpsb
out
lods
pop
sub
fidivrl
xchg
sub
nop
mov
or
sti
aas
and
ret
push
xor
jl
arpl
mov
or
inc
pop
lahf
push
aad
xlat
jge
adc
sub
xchg
mov
adc
stc
cmp
xchg
or
jp
mov
jl
cld
add
pusha
xadd
test
int3
cmp
mov
push
pop
lret
notb
mov
adc
sbbl
fs
and
adc
add
lea
mov
jp
cld
sbb
in
stos
pop
dec
insl
dec
pop
into
cmp
sbb
mov
rcrb
and
repnz
xchg
ja
cltd
mov
test
pop
xchg
fstps
sbb
enter
cmc
jle
inc
les
test
je
jo
sbb
mov
dec
mov
mov
es
in
pop
fwait
mov
fmull
popf
scas
repz
popf
bound
xchg
mov
in
or
test
jle
lret
repz
xor
push
std
cmpsb
lret
xor
lea
pusha
testb
rep
daa
test
filds
dec
ljmp
lahf
dec
imul
inc
fdivs
repnz
inc
xchg
dec
sub
orl
mov
pop
test
pop
cs
or
mov
mov
push
scas
xor
outsl
cli
pop
stos
aas
popa
js
mov
imul
in
in
and
ljmp
pop
fdiv
movsl
or
inc
inc
or
shr
call
mov
mov
dec
neg
mov
push
mov
aad
sbb
sbb
mov
or
call
ja
repnz
cmp
lds
add
in
xchg
inc
int
dec
and
inc
clc
adc
les
je
dec
push
add
dec
cmpb
cmp
dec
stc
sti
mov
mov
cltd
notl
inc
jmp
nop
jmp
addr16
jmp
arpl
enter
adc
int
movsb
sbb
mov
cmp
jg
sbb
sti
out
inc
mov
xchg
enter
cltd
inc
push
push
jg
lahf
mov
out
push
out
lods
mov
enter
sub
fimull
push
jbe
pop
cmp
or
push
pop
stc
or
stos
bnd
fisttpll
fisttpl
lret
cmc
sarb
adc
pop
shlb
jp
add
mov
movsl
lcall
gs
lods
sub
lret
hlt
sbb
aas
cmova
out
aam
pushf
xor
repnz
mov
insb
addr16
icebp
jb
mov
cltd
cmp
ret
fidivl
sbb
and
push
imul
jo
out
lods
sub
mov
int3
jle
mov
mov
mov
adc
ret
and
push
rclb
mov
cli
pop
fcom
enter
cmp
jge
pop
mov
push
cmpsl
xchg
jno
divl
fs
shr
mov
jnp
loope
loope
jns
gs
cmp
dec
mov
aas
jg
ret
sahf
std
jae
movsb
lret
iret
mov
push
shll
gs
push
pop
leave
pop
call
sub
adcl
lods
lret
mov
xchg
mov
xor
repnz
call
pop
mov
nop
shrl
popf
add
xor
ficompl
xchg
push
add
cli
call
inc
add
sbbl
inc
mov
aad
pause
subl
daa
mov
xchg
lret
sbb
incl
mov
lock
sbb
lret
and
mov
push
jae
iret
sbb
and
lock
pop
lds
dec
sub
pop
enter
repnz
push
loop
in
mov
jb
or
repnz
movsl
push
jp
dec
adcb
push
jle
sub
es
int
mov
movsl
or
jb
and
mov
mov
xor
ja
fwait
arpl
mov
mov
ja
mov
dec
sbb
inc
push
lods
cltd
scas
ficompl
xchg
fwait
xchg
cmp
add
sbb
xchg
or
nop
adc
xchg
inc
add
cmp
ret
add
lock
inc
stos
loopne
xchg
fbld
lock
fldt
pop
sub
xor
xchg
dec
shl
cmp
push
out
xchg
dec
xor
mov
xor
aam
jle
shlb
push
test
cld
in
sbb
cmpsb
stos
ds
nop
std
jmp
hlt
idivl
lea
xor
lcall
cli
xchg
imul
icebp
xchg
and
int3
fs
pop
jmp
popl
insl
popf
mov
gs
xchg
orl
dec
mov
xor
mov
sub
jae
aam
or
lea
loop
xor
sahf
fisubrs
xor
inc
inc
add
xor
mov
popf
repnz
rorb
jne
cmp
mov
popf
push
les
ret
idivb
pop
lods
in
adc
test
mov
mov
aam
and
push
push
add
fiadds
pop
ret
rclb
out
or
cmp
add
adc
mov
dec
cmpsl
fisubl
fcmovne
mov
lret
lret
or
lods
shll
xchg
inc
cltd
jo
mov
pusha
aaa
stc
mov
pop
ss
adc
clc
arpl
ret
fs
push
movl
fcoms
or
mov
sahf
inc
sbb
add
mov
sbb
dec
inc
jecxz
jle
je
cmp
and
mov
xchg
cmp
cmp
sbb
push
dec
lea
dec
push
dec
pop
pop
add
push
cmp
in
outsb
and
filds
xor
mov
push
push
test
pop
mov
jle
out
outsl
inc
push
jge
mov
pop
bound
movsl
push
push
push
mov
test
jle
pushf
cmp
push
mov
adc
ret
push
lret
mov
sbb
scas
add
pop
push
mov
xchg
bound
mov
aam
inc
aas
test
int3
mov
data16
ja
mov
mulb
sub
xor
shr
push
das
rcr
cmp
clc
pop
mov
mov
mov
fists
fildll
xor
imul
loop
inc
imulb
sar
insl
daa
and
adc
rcrb
xchg
ret
cltd
stc
pop
xchg
adc
sbb
int3
lea
loope
scas
adc
push
test
cmpb
int
repz
mov
cmp
imul
or
inc
xchg
jl
shl
sub
pusha
add
hlt
insb
mov
mov
xor
push
pop
pop
and
mov
push
cmp
cltd
add
dec
jae
push
dec
dec
add
jg
push
inc
es
fnstcw
mov
jecxz
mov
imul
adc
lods
sbb
dec
inc
addl
push
lea
and
pusha
and
mov
xor
jge
inc
jl
fisttps
add
pusha
gs
pop
sbb
mov
xlat
jns
mov
pop
xchg
push
iret
scas
je
mov
or
fsubs
sub
movsl
fs
cmp
mov
push
loop
in
faddp
and
ret
out
cmpsl
and
lret
dec
inc
rorl
sub
push
mov
and
std
inc
mov
mov
sbb
ret
out
dec
dec
out
lods
mov
mov
icebp
inc
pop
out
pop
jno
inc
push
adcl
mov
hlt
add
xor
push
cli
cmpsb
pop
jmp
pop
imul
loopne
mov
dec
test
xchg
and
cli
aam
cmp
and
leave
loopne
xor
int
jnp
adc
out
fistpll
mov
or
pop
sub
dec
gs
mov
xchg
pop
dec
sbb
xchg
insb
push
cmp
scas
lret
shrb
dec
test
in
jb
xchg
dec
xor
push
pushaw
sbb
loopne
sbb
sub
jne
dec
sbb
cmp
xchg
int3
cmc
dec
in
mov
cmpb
jl
and
les
sbb
jae
cmp
pop
pusha
push
cmp
or
dec
mov
imul
ficomps
xor
mov
in
dec
je
notb
lods
xor
adc
subb
pop
inc
and
dec
add
outsl
adc
adc
sbb
mov
xchg
mov
push
cmp
mov
pusha
lcall
jbe
adc
or
shl
pop
mov
ret
sbb
andb
jo
sub
cmp
xchg
xorl
mov
push
aad
push
jmp
in
mov
aam
into
sti
ficomps
dec
or
pop
inc
mov
fwait
stc
stos
sar
lods
outsb
in
xchg
out
sbb
fwait
xor
cmc
inc
jne
adc
shl
sbb
sbb
hlt
inc
movsl
add
or
outsb
jl
fdivs
xchg
push
stos
mov
sbb
pushf
xor
inc
mov
push
inc
dec
addr16
sbb
out
xlat
imul
cld
push
mov
or
pop
inc
pop
cmc
test
pop
daa
add
push
fsubl
dec
xor
andl
incb
xor
pusha
sbb
fwait
aam
cmpsl
mov
test
inc
aaa
dec
and
adcb
and
jg
push
pop
js
sarb
sub
xchg
mov
fcomps
inc
jge
outsl
xor
cmp
mov
push
jne
in
xor
inc
int
dec
inc
imul
fwait
ja
adc
movsb
adc
sti
mov
jmp
dec
scas
and
sar
dec
sti
xlat
popa
sub
mov
lret
popa
mov
int3
mov
lahf
add
cmp
decl
mov
sbb
adc
xchg
pop
dec
pop
or
or
and
add
and
mov
inc
mov
xchg
data16
sub
adc
add
lret
es
push
mov
fadds
cli
out
push
xor
adc
icebp
and
loope
shl
mov
mov
fidivl
xor
push
and
clc
addr16
xor
insb
or
mov
divb
lods
imul
push
jbe
es
mov
jne
adc
add
pop
pushf
adc
call
mov
sbb
add
fninit
cmpsl
insl
adc
adc
das
sub
ljmp
mov
mov
xchg
push
scas
je
dec
or
es
repz
lret
push
jo
jo
sarb
cmp
xchg
hlt
jecxz
sub
sbb
sbb
push
xor
out
jg
addr16
and
push
xor
test
and
cmc
mov
dec
and
sub
rcrb
sbb
lea
or
pusha
scas
andb
or
les
movsl
cwtl
stos
inc
sub
cmp
sub
or
push
mov
xchg
inc
pop
or
dec
sbb
adc
mov
or
ss
or
sbbl
sbb
dec
mov
out
sbb
or
and
outsb
popf
add
loop
mov
mov
sub
xchg
mov
xor
sbb
dec
or
add
cli
cmpsl
data16
out
add
pop
lret
insb
lds
sub
loope
sbb
fstl
addr16
mov
and
mov
ficomps
inc
and
xor
xlat
mov
data16
xlat
add
lds
outsl
mov
xor
add
aam
lea
push
bound
xchg
pop
int3
jg
jle
mov
outsl
pop
sub
ss
pop
push
mov
daa
dec
ret
loop
cmp
sbb
xor
and
add
jmp
ljmp
addr16
mov
arpl
pop
inc
and
mov
stos
xchg
xor
add
nop
cmp
outsb
fwait
ljmp
mov
clc
xor
adc
xor
pop
lret
mov
push
fcoms
cmc
xor
into
mov
push
test
pop
iret
call
or
sti
cmp
or
mov
dec
pop
adc
xorl
fadd
jg
frstor
int
cmp
pop
xor
inc
jb
or
cmp
mov
jno
mov
fwait
mov
scas
mov
lahf
stos
or
das
popa
leave
pop
in
xor
hlt
daa
jns
test
push
mov
scas
nop
fcoml
repnz
push
fcoms
mov
fdivl
inc
lods
pop
pop
aad
leave
jbe
push
xor
mov
jae
adc
xor
loop
add
cmpsl
lds
xor
mov
int3
xchg
pusha
fcomi
roll
dec
pop
push
or
popa
mov
jae
mov
pushf
fcomps
stos
fsubs
sub
icebp
fiadds
dec
lcall
jno
sbb
es
stos
cmp
loopne
add
dec
js
jmp
jnp
dec
sbb
out
mov
rolb
jl
test
test
cmpsl
mov
dec
nop
fldcw
xor
adc
out
enter
fwait
mov
xor
int3
sbb
inc
pop
sbb
das
adc
push
int
stc
shrl
movsl
xchg
cld
and
or
fists
out
mov
in
cwtl
dec
cmp
fwait
adc
sarl
cli
clc
mov
and
loopne
pop
mov
mov
inc
lods
scas
inc
mov
fistl
rorb
movsl
push
out
icebp
insl
sbb
inc
fs
leave
adc
dec
ljmp
push
mov
mov
pop
jg
sbb
scas
stos
icebp
cmp
not
dec
add
mov
nop
add
popa
test
push
cmp
loop
bound
fstl
out
mov
cli
sti
cmp
mov
jp
or
ret
out
icebp
jge
add
lcall
mov
mov
pusha
les
sahf
aaa
mov
xchg
insl
push
mov
inc
pop
lret
ret
cmp
jnp
fcmovnbe
leave
cli
cmp
dec
fbld
imul
sbb
mov
cmp
sbb
push
mov
rcll
push
mov
sub
seta
push
frstor
fs
lds
jne
stc
xchg
aas
adc
push
cmp
dec
ret
stc
mov
je
arpl
and
and
or
adc
sahf
ljmp
cmc
test
aas
push
cltd
sbb
jg
popl
mov
aaa
sub
dec
adc
les
mov
imul
xor
movsb
pop
push
dec
pop
dec
lock
ficoml
jo
lock
addr16
xor
fiadds
sahf
push
push
test
mov
jae
ljmp
movsb
ja
add
jnp
sar
mov
sub
xchg
ss
pushf
nop
pop
jo
xor
inc
pop
ret
shll
fldcw
inc
mov
pop
leave
jb
adc
adc
clc
iret
repnz
mov
dec
loop
das
xor
add
sahf
mov
sub
xchg
mov
push
add
rcrl
and
push
mov
je
daa
mov
inc
inc
rcll
or
addr16
sti
clc
xchg
mov
les
pop
fidivrl
aaa
inc
mov
jg
sbb
xor
sbb
xlat
add
loope
adc
mov
dec
es
adc
insb
jae
push
xchg
insb
mov
add
jp
cld
stos
inc
lods
push
mov
pop
mov
push
in
jl
jo
pushf
rolb
aam
lahf
inc
roll
sarl
test
pop
int3
or
mov
lods
lock
xchg
sbb
mov
pop
ja
pop
les
pop
sti
jecxz
xchg
lods
jb
flds
popf
pop
cmp
mov
or
push
inc
mov
movsb
mov
cltd
adc
bound
pop
mov
das
sti
push
jb
clc
orb
ficompl
or
bound
sti
cmp
ret
mov
hlt
lcall
cli
daa
pop
push
pop
ret
mov
mov
arpl
mov
pop
and
test
outsl
rol
lods
das
xchg
mov
xchg
jnp
pop
daa
add
decl
push
sub
js
lock
test
cld
std
xorb
sti
mov
xchg
jg
test
dec
fbld
push
jo
lahf
fsubs
stos
insl
in
rorl
std
jbe
out
mov
data16
out
and
cltd
stos
mov
adc
ljmp
mov
ds
cmpsl
inc
insb
out
sti
inc
push
jge
pop
sub
cmpsb
or
mov
clc
add
test
das
rclb
dec
pop
mov
mov
cmp
ljmp
dec
push
add
cmp
enter
std
aas
jnp
inc
xor
test
pop
movsb
aaa
sub
mov
and
jg
cmp
mov
int
jae
rcrb
pcmpgtb
cmpsb
iret
or
mov
jne
ficoml
mov
inc
test
jmp
ds
pusha
jbe
push
mov
andb
and
inc
add
jno
clc
push
repnz
fildll
adc
pushl
mov
lret
jl
sarb
push
mov
imul
scas
and
cmp
mov
and
outsb
add
xchg
cli
cwtl
push
mov
notl
frstor
repz
adc
add
inc
loope
std
mov
mull
in
mov
jecxz
mov
loop
arpl
les
loopne
ja
push
mov
iret
push
cli
fisubrs
pop
mov
inc
xor
xlat
aas
sub
repz
cmc
stos
pop
adc
add
sub
loopne
cmpsl
xchg
mov
push
in
pop
nop
div
xor
clc
sub
jle
fsubr
sbb
pop
mov
xor
fwait
push
pusha
jne
sub
jle
ljmp
lcall
jbe
sbb
push
movsb
mov
je
insb
mov
pop
push
mov
xor
pusha
shll
mov
loop,pn
pop
mov
push
or
fstps
insb
stos
jge
sub
or
clc
lret
incb
mov
add
dec
jp
sub
or
sbb
pop
lods
sbb
ret
jp
stos
inc
cmpsl
rorb
and
loopne
sub
and
aad
dec
inc
jo
fcmovb
jge
lods
mov
cwtl
xchg
add
push
aam
cmp
je
add
idivb
mov
and
orb
cltd
dec
mov
test
lods
out
ficomps
aas
jg
mov
cltd
jae
jmp
add
mov
mov
dec
lret
dec
cmp
sub
push
pop
xorb
mov
lret
xlat
mov
lods
jmp
xchg
jge
loope
add
push
mull
arpl
mov
jae
mov
rol
lahf
aaa
cmpsl
add
mov
jb
cltd
in
scas
pop
call
cmp
pop
mov
lds
xchg
inc
cld
xor
bound
xchg
divb
sub
out
mov
ljmp
mov
sub
cld
sub
cmp
loop
push
lret
in
rorl
dec
in
pop
into
dec
imul
sub
cmp
std
xchg
inc
imul
ret
stc
scas
inc
sub
fwait
cmc
mov
pop
sahf
cmp
mov
lds
pop
pop
sbb
jns
inc
sbb
jle
add
xor
int
ja
xor
rol
test
jae
scas
insl
jge
mov
push
dec
ss
sbb
pop
loopne
repnz
ret
pop
sub
call
addb
out
popf
mov
inc
dec
push
mov
arpl
add
adc
jmp
data16
pop
test
and
push
xor
shl
repz
dec
adc
mov
cmpsb
or
outsl
xor
inc
stos
sbb
test
or
out
clc
leave
movsl
sbb
adc
ljmp
jl
repnz
dec
call
test
push
repnz
fs
scas
loope
ja
cltd
aas
into
sub
inc
loopne
int
or
jo
cmp
std
jns
push
inc
test
pop
xchg
lahf
dec
push
add
out
nop
insb
and
pop
sub
data16
xlat
or
ljmp
xchg
jp
pop
mov
aam
rcr
scas
out
popa
test
mov
fs
adc
imul
jg
addr16
sbb
out
adc
rcrb
add
inc
ja
call
jo
add
or
xchg
in
aaa
sbb
mov
cs
ljmp
jbe
mov
or
or
jle
add
pop
and
sbb
mov
ljmp
push
mov
sbb
les
mov
clc
ret
scas
mull
ljmp
jnp
mov
sbbl
push
in
fidivs
adc
jmp
shlb
call
or
data16
loope
add
and
fmull
dec
xchg
sahf
push
xchg
push
xor
inc
xchg
fdivl
or
cwtl
mov
jg,pn
push
sbb
add
rclb
mov
out
xadd
cmp
stos
jo
and
fistpll
pop
loopne
in
js,pt
mov
lock
and
cmp
xchg
subl
inc
shlb
xor
dec
jns
jo
mov
fists
inc
xchg
jle
pop
or
je
lea
cmp
jnp
movsb
inc
fwait
adc
movsb
cmpsl
cli
fdivrp
mov
aam
cmpl
cmp
fs
inc
sbb
fcmove
movsb
add
or
stos
fbstp
fstps
gs
xchg
mov
jnp
adc
and
hlt
add
pop
out
lcall
outsl
nop
addr16
fwait
or
out
and
loop
pop
cmp
pop
cmp
ss
jne
lahf
rolb
lahf
and
aas
loop
je
push
in
pushf
cmp
repnz
mov
cmc
sbb
sbb
jl
lea
push
loop
and
frstor
fwait
dec
xchg
lods
ja
cwtl
push
rcr
cmp
enter
cmp
cwtl
push
xchg
add
std
fdiv
sbbl
jecxz
aas
stc
test
jae,pn
iret
add
arpl
test
push
push
jle
jl
jg
cs
mov
rorb
sbb
iret
lds
shll
into
dec
xor
sub
stos
stos
jo
in
mov
test
mov
sub
hlt
push
dec
pop
dec
mov
call
gs
push
lods
mov
insb
nop
cmp
jge
popf
xor
xchg
xlat
xchg
test
and
test
inc
mov
push
movsb
push
push
push
rcll
pushf
out
dec
leave
mov
or
popf
out
inc
call
fsubl
inc
adc
adc
out
mov
push
mov
les
je
sbb
aaa
les
js
xchg
jb
adc
dec
icebp
hlt
sbb
in
pop
fnstcw
sub
push
pop
or
sub
loop
jns
dec
andl
movsl
out
popf
int
sub
js
fs
sub
or
cwtl
xchg
mov
iret
sahf
sbb
inc
push
roll
pop
xor
jge
arpl
loope
nop
mov
xchg
jb,pn
in
mov
subb
mov
push
call
xorl
out
xchg
jecxz
fildll
test
push
movsb
out
push
jnp
sbb
shlb
rcrb
pop
jne
jae
cld
push
repz
xchg
cmpsl
cwtl
ljmp
outsb
stos
cld
push
loopne
pop
pop
sahf
mov
outsb
lret
call
mov
or
test
push
fs
and
sar
loop
addr16
sub
mov
dec
mov
xor
xor
sub
inc
fistps
fwait
ljmp
mov
out
mov
dec
mov
dec
std
cmc
out
shl
ret
adc
sbb
sub
sbb
mov
mov
nop
xchg
test
or
stos
sub
lret
mov
mov
sti
hlt
add
inc
jnp
call
dec
fs
lock
mov
mov
inc
lret
xchg
pop
cmpl
iret
pop
out
and
fwait
mov
pop
in
push
rcrb
pop
pusha
push
les
add
arpl
mov
cmp
mov
jle
loopne
popa
insl
mov
mov
pop
and
xchg
stos
imul
mov
mov
cmp
sbb
fstl
jae
pop
daa
out
test
lret
pop
xchg
stc
lea
cld
pop
int
lods
inc
ds
jmp
ret
cmp
xchg
pop
cltd
push
cld
pop
add
add
dec
mov
dec
cmp
pusha
mov
jecxz
pop
sub
sub
adc
dec
int3
sti
fwait
or
mov
rcrl
mov
cmpsb
dec
fmul
clc
inc
push
lods
sub
aam
and
push
pop
lods
test
out
sub
mov
sbb
mov
inc
push
mov
push
inc
xchg
scas
fdivrs
stos
incb
dec
rorl
mov
mov
pop
jg
mov
or
jle
inc
ss
in
sahf
adc
xchg
sbb
pusha
mov
xchg
mov
xorb
in
jno
push
popa
push
icebp
outsl
cli
ljmp
aam
cmp
int3
stos
mov
cmp
jmp
test
xor
xor
xor
fsubs
stc
pop
dec
insl
test
mov
cltd
mov
cmp
jg
cmp
sub
daa
pop
or
xor
stos
subl
cmpb
add
orb
push
sti
sub
dec
stc
cltd
mov
cld
hlt
xchg
sbb
mov
xchg
aaa
js
dec
xchg
imull
fcomps
pop
cmpsb
insb
bound
jge
out
das
ja
add
test
mov
cmp
test
lds
ja
pop
or
lahf
pop
lret
sbb
in
in
bound
jle
mov
adc
cmpsl
dec
pop
push
movsl
xchg
cmp
clc
push
dec
or
jle
dec
cmpl
int3
dec
fmull
push
sbb
rcrl
xchg
pop
add
pop
jae
mov
adc
mov
ficoml
lahf
cltd
or
leave
mov
clc
sbbb
mov
or
repz
dec
pop
mov
es
movsb
cmp
lds
mov
adc
pop
loope
ljmp
lret
enter
popa
sub
loopne
sub
adc
or
popf
and
out
mov
std
cwtl
sub
rorb
scas
sub
lret
leave
push
pop
out
lahf
xchg
xor
xchg
xor
int3
in
dec
mov
into
sub
add
sbb
push
cmp
fistps
cmp
mov
call
mov
mov
dec
or
jbe
cmpsb
cmp
push
mov
into
dec
cwtl
out
notl
mov
es
jle
lret
mov
sahf
push
sbb
or
loopne
jne
mov
ljmp
addl
xor
popa
mov
icebp
icebp
incl
rorb
xchg
arpl
shll
add
cli
adc
inc
mov
dec
popa
push
inc
testl
imul
or
fwait
rol
orb
or
lret
inc
data16
lret
lahf
pop
cmc
sub
or
push
fstpt
jge
push
out
cld
es
cmpsb
cmpsb
lea
lret
clc
xchg
popa
aad
add
jg
rolb
dec
dec
xor
lods
loop
call
cmp
push
not
mov
scas
es
inc
jp
test
cmpsb
xor
rorl
cmp
insb
sbb
ficompl
mov
aam
push
cwtl
sbb
push
test
and
jns
mov
and
xor
out
pop
lods
negl
sbb
add
decl
or
cli
in
adc
cmp
inc
ffree
mov
pop
sbb
loop
push
cmp
sub
outsb
xchg
aad
xchg
dec
inc
shlb
xlat
inc
insb
mov
jmp
inc
repnz
jnp
ret
test
sbb
orb
xchg
into
out
mov
mov
loop
lock
lea
imul
push
mov
loope
mov
sbb
sub
mov
cmp
adc
mov
jne
adc
lret
jmp
sahf
push
mov
adc
shl
pop
sbb
jno
xchg
xor
andl
dec
inc
into
jl
cli
mov
ficomps
hlt
popa
jbe
sarb
imul
cmpsl
clc
and
cmpsl
enter
and
aam
push
mov
pop
adc
cmp
in
adc
fldenv
gs
and
cmp
and
lahf
push
gs
scas
fnstsw
sub
dec
cmp
adc
movsl
lcall
cmp
mov
sbb
gs
dec
xor
idivl
outsb
test
mov
push
sbb
xchg
in
in
leave
push
es
jo
cmp
push
leave
in
leave
daa
iret
dec
lds
adc
enter
sub
sahf
fwait
mov
jae
shll
xor
xchg
shll
test
out
mov
jne
add
cmp
and
movsl
aaa
fisubl
xlat
test
daa
mov
iret
fcomip
stos
mov
rorb
mov
dec
mov
push
xor
repz
js
add
pop
add
nop
or
xchg
add
adc
rclb
mov
packssdw
stos
repnz
in
pop
push
mov
add
add
pop
jmp
dec
jmp
cmp
adc
loopne
xor
in
adcl
into
aaa
mov
fs
sub
cmpsl
bound
popf
insb
mov
ret
fstpl
pop
or
cmp
ljmp
push
jo
das
add
mov
es
or
lcall
dec
jae
arpl
arpl
pop
mov
lahf
insb
xchg
int3
sbb
xor
push
sub
and
and
bound
adc
insl
retw
loope
push
sub
add
jg
push
push
pusha
pop
pop
push
push
jmp
les
scas
shll
cmp
daa
ds
arpl
or
ret
xor
cmpsl
cs
xor
icebp
pop
mov
fsubs
mov
fcoms
pop
call
mov
mov
movsl
cli
clc
popf
popa
sbb
andl
lock
sub
test
stos
jae
jae
fwait
mov
lds
xor
cltd
outsl
xchg
sbb
lahf
and
pop
push
idiv
add
push
imulb
lret
inc
aad
sbb
push
inc
ret
fs
xchg
frstor
nop
xor
mov
pop
inc
pop
sbb
mov
int3
repz
inc
and
lods
andb
pushf
out
jns
out
data16
adc
or
lds
mov
adc
xorb
out
xchg
shll
cmc
gs
pop
mov
cmp
adc
sbb
testb
movsl
jae
aam
adc
pop
push
pop
ljmp
sub
js
jge
fidivs
jo
jne
xor
mov
das
inc
fiaddl
jno
push
bound
imul
inc
arpl
dec
mov
inc
inc
testl
xchg
popf
jg
daa
outsb
push
adc
push
or
push
sbb
jl
in
fnstcw
in
out
in
pushl
std
pushf
mov
pop
mov
jl
fisttps
cltd
je
xchg
adc
daa
mov
call
aad
mov
popf
jne
dec
aaa
sbb
setge
andb
push
mov
or
mov
jge
arpl
inc
mov
repnz
sub
cmp
insb
movsb
lcall
cmpsb
dec
rcrl
sahf
jmp
pop
and
push
push
push
jno
inc
jg
add
popa
mov
sub
push
mov
outsl
sbb
mov
sub
dec
mov
add
mov
push
out
inc
mov
cld
insb
lcall
pushf
push
das
leave
push
jmp
and
out
repnz
xor
xchg
out
xor
sub
push
fstpt
je
add
and
cmpsb
cmp
push
dec
pop
cmp
incl
and
xchg
cld
mov
nop
mov
loopne
cmp
nop
mov
mov
fwait
adc
jp
or
mov
ds
call
push
jp
clc
test
popa
mov
jbe
in
stos
out
cld
xor
dec
cmp
add
ret
jle
pop
dec
sbb
imul
xchg
into
adc
add
pop
mov
in
add
les
jl
xchg
dec
mov
xor
in
and
es
mov
lcall
mov
lret
sub
inc
insl
stos
push
outsb
jge
add
fisttpl
cmpsb
xor
push
xchg
push
movsl
cmpsl
cmc
xlat
in
jmp
cli
imull
movsl
inc
and
out
adc
dec
sbb
mov
fst
mov
in
shlb
jno
roll
jg
and
push
mov
xor
xchg
enter
push
out
pusha
repnz
and
and
in
xchg
cld
imul
add
push
pop
iret
xor
or
mov
in
inc
mov
shrl
mov
je
push
cmp
mov
xor
push
test
icebp
and
xchg
and
std
pop
lcall
inc
out
xor
push
xor
mov
lods
jle
shll
das
test
imul
jnp
mov
dec
dec
scas
jb
xor
pop
fldcw
sbb
sbb
shll
fnsave
dec
fsubs
cmp
or
mov
test
add
jecxz
sarl
pushf
ret
nop
mov
xchg
cmp
push
mov
jmp
leave
push
mov
sbb
cmp
and
negb
push
push
inc
arpl
js
out
ljmp
das
jae
jle
mov
fnstcw
mov
test
test
add
fimull
popf
fmulp
jmp
jb
data16
jge
mov
fsubs
iret
imul
hlt
mov
outsl
xor
std
push
sub
shrl
push
out
sbb
push
stos
mov
jecxz
dec
push
adc
mov
inc
lret
mov
xchg
xor
aas
call
jg
data16
jns
mov
shrb
and
push
aam
test
sbb
icebp
ja
adc
jb
je
inc
std
dec
mov
inc
jge
fdivl
inc
in
lock
mov
sub
cltd
mov
push
push
imul
mov
lds
mov
mov
inc
call
popa
les
ret
orl
call
in
mov
mov
loope
sbb
dec
push
adc
push
sub
stos
aam
jns
push
mov
ljmp
xor
xchg
dec
loope
or
pushl
sahf
and
andb
jmp
cltd
mov
and
and
sub
aam
cmp
push
push
dec
test
push
pusha
mov
es
xchg
leave
push
mov
repz
jp
xchg
mov
flds
notb
gs
inc
test
xor
cwtl
mov
dec
push
mov
push
jno
push
mov
lret
cmpsb
or
mov
pop
inc
out
dec
in
mov
add
sub
sbb
pop
cmpsl
dec
inc
popf
xlat
dec
sbb
mov
pop
cmp
pushf
mov
scas
mov
ret
or
enter
inc
into
push
pop
pop
scas
xor
aam
add
js
movsb
cmp
sbb
inc
or
pop
xor
cmpsb
test
sub
cmp
sub
jo
lcall
dec
sub
sub
push
icebp
jb
lock
and
fidivs
stc
aaa
shll
out
fs
orl
pop
jb
aam
je
cmp
aam
adc
jle
lcall
and
push
mov
cmp
adc
movsb
cmpsb
or
mov
mov
xchg
mov
mov
mov
push
xor
aad
ret
adc
dec
sbb
call
mov
icebp
scas
pop
lcall
push
lds
sbb
popa
jecxz
shrl
fcomps
xor
iret
dec
fidivrl
push
sahf
cmp
pop
mov
mov
mov
xlat
int3
andl
insl
iret
cmp
add
in
dec
xchg
cmpb
mov
mov
popf
mov
adc
and
pusha
cwtl
jecxz
sub
mov
mov
lahf
fs
inc
mov
xchg
mov
in
lock
cltd
inc
fstps
out
sub
push
sbb
mov
test
scas
add
mov
fdiv
sbb
pop
xor
or
pop
pop
sarb
mov
rcr
add
loopne
xchg
jecxz
or
jne
test
jne
out
outsb
pushf
cmpb
iret
pop
loop
mov
in
dec
push
or
daa
ficompl
jnp
xchg
pusha
jecxz
loopne
lock
test
mov
mov
in
sub
dec
sub
mov
in
xlat
jns
loop
cltd
in
mov
das
aaa
sbb
xchg
or
jg
pop
popa
loope
cmp
popf
push
imul
push
sti
pop
lahf
jno
pop
ss
xchg
stos
mov
ja
push
mov
pause
dec
pop
sbb
fnstsw
fistpll
shrb
in
pop
inc
shlb
dec
cld
cltd
int
out
aam
addr16
roll
adc
lahf
mov
mov
stos
push
inc
and
test
ret
pop
inc
mov
daa
cld
in
add
jle
pop
call
in
arpl
stos
enter
pushf
jnp
pusha
pop
mov
pop
add
mov
leave
dec
test
sbb
pop
out
or
cmc
pop
sub
inc
dec
cmp
into
in
mov
add
lods
mov
and
mov
mov
aas
mov
fldenv
and
ss
fidivl
inc
mov
push
xlat
aas
fcoml
out
cmp
call
test
faddl
aas
sub
push
iret
push
pop
ret
adc
cmp
and
jnp
jmp
xchg
jnp
pop
dec
mov
adc
orb
dec
mov
or
xor
nop
inc
lods
aas
shr
into
xchg
sbb
leave
dec
and
jnp
jg
jmp
lods
inc
int
bound
push
inc
push
inc
cmpsb
fisttpll
xchg
xchg
dec
fld
fbld
and
lock
cs
push
loop
lahf
cmp
cltd
movsl
enter
aas
mov
popa
xchg
enter
ss
jmp
or
aam
mov
add
jmp
sbb
call
add
mov
push
xchg
aam
stc
cli
xchg
lds
cs
mov
fs
outsl
and
dec
mov
cmpl
cmc
mov
movsl
sbb
in
cmp
fstl
add
pop
stc
hlt
mov
mov
mov
sbb
add
adc
call
xchg
roll
lds
cmp
test
ja
ret
fcoms
mov
mov
lea
movsl
or
repz
in
and
in
int
popf
hlt
sbb
jns
push
aad
xchg
es
add
test
ljmp
inc
jle
xchg
lea
push
in
mov
mov
ss
sbb
inc
cmpsl
imul
push
inc
insb
xlat
add
jge
adc
jae
sub
out
pop
dec
lret
sub
movsb
lcall
addr16
dec
mov
addr16
imul
rcrb
test
ret
inc
popa
movsl
repnz
push
lea
lret
js
sub
mov
and
jg
loopne
sub
inc
dec
pop
imul
dec
mov
pop
pop
mov
das
fistpll
movsl
xchg
shlb
into
adc
out
stos
mov
mov
mov
add
scas
cmp
lret
inc
testl
push
push
sub
sub
cmp
in
and
inc
sbb
mov
test
add
inc
jnp
inc
jmp
cmp
jo
push
stc
mov
adcl
leave
cmc
xchg
push
daa
ds
xchg
test
int3
movsb
inc
out
cmpsl
in
dec
stc
mov
inc
cmp
pop
pop
int3
push
xstore-rng
cmpsl
add
xchg
shl
jno
jp
xchg
jne
ljmp
mov
push
lods
jmp
or
mov
pop
arpl
aas
mov
lret
popa
loope
inc
and
imul
test
lds
adc
xor
add
xchg
fsts
cmpsb
scas
cmpl
mov
pop
sub
jnp
data16
adc
scas
mov
or
inc
ficompl
xlat
push
push
insb
test
loopne
scas
ret
in
jg
les
in
xchg
xor
imul
je
xchg
dec
outsl
cmp
int3
or
addr16
les
insb
inc
adc
mov
mov
dec
stos
add
cli
mov
and
mov
int3
ljmp
adc
or
stos
insl
mov
pop
inc
hlt
inc
add
lods
sbb
ds
repnz
and
sub
aam
mov
cmp
neg
ja
test
subb
ja
or
mov
ret
adc
xchg
hlt
cmp
jns
or
push
test
and
add
jg
xlat
hlt
jecxz
dec
sbb
mov
sbb
ds
rclb
loop
dec
mov
nop
data16
mov
mov
ljmp
sbb
or
cmp
outsl
xchg
cs
and
or
sti
mov
xor
gs
mov
jae
sub
cmc
push
popa
stos
mov
lods
cmp
or
sbb
sbb
fstp
or
pop
shlb
scas
imull
pop
mov
xor
jecxz
dec
pop
outsb
lea
xor
out
xor
mov
sbb
sbb
in
lock
loopne
ret
incl
loop
fdivl
jge
imul
inc
imulb
pop
xchg
or
add
push
inc
add
jae
stc
lods
sbb
add
jnp
scas
adcb
in
sbb
cwtl
sub
icebp
jb
sbb
mov
push
dec
jo
and
xor
cmp
mov
mov
push
inc
fisubl
mov
jecxz
scas
pop
cmp
add
fsub
mov
dec
mov
cmp
jmp
pop
loopne
inc
jo
adc
pop
out
mov
xchg
push
por
roll
jne
sub
jle
mov
adc
clc
in
jp
sti
pop
mov
das
or
outsl
mov
jmp
dec
jno
es
push
sub
xchg
sbb
push
sbb
and
add
xor
nop
test
or
insl
repz
or
adc
mov
lret
into
std
pop
fisttpll
add
sbb
ds
fnstenv
mov
fisubrs
test
inc
call
std
mov
add
not
test
loop
inc
insb
inc
movsl
mov
popa
inc
jo
int
imul
in
hlt
stos
sub
mov
add
inc
jne
jp
in
mov
cwtl
test
and
pop
push
push
sarb
stc
inc
test
pop
fbld
inc
into
ret
xorl
es
push
adc
inc
mov
mov
dec
in
test
push
push
sbb
sub
jge
movsb
add
fwait
out
cmpsb
lret
hlt
mov
jmp
push
idivb
pop
fdivrs
ret
mov
inc
outsl
sbb
sbb
rcll
jne
push
jb
xor
pop
ja
dec
xlat
and
sub
adc
das
push
out
mov
and
adc
cld
lret
and
lock
mov
ljmp
add
push
or
test
sbb
cmp
xor
js
mov
rcrb
pusha
ret
xor
push
in
xchg
scas
movsl
lea
push
push
xlat
add
cli
lds
outsl
inc
loop
xor
sbb
xor
adc
stc
icebp
aam
repz
insl
ret
xor
add
fadd
xor
out
jo
pop
cli
push
inc
out
fnsave
test
cmp
into
stc
popa
or
in
sbb
mov
push
mov
in
inc
ja
or
push
filds
std
out
mov
outsb
cs
sub
dec
inc
shlb
xchg
cmp
popf
pop
in
sbb
repnz
cwtl
ds
inc
shrb
dec
out
cmp
push
gs
cli
dec
adc
cmp
mov
daa
fistpll
out
in
hlt
pop
loop
js
int
or
jo
pop
xchg
lret
push
or
ljmp
xchg
imul
insb
dec
cmc
aam
imul
xor
inc
dec
xchg
add
nop
mov
and
mov
and
fidivrl
sahf
cmp
call
inc
push
cmp
std
ret
div
mov
andb
imul
sti
or
lods
mov
in
cli
and
lds
cmp
aas
pop
mov
mov
sbb
insl
push
mov
stc
jmp
xchg
lret
adc
sbb
ret
or
jge
outsb
adc
adc
cmp
fdivr
mov
inc
loop
inc
cmp
pop
push
popa
nop
cli
and
out
ja
inc
pusha
jmp
inc
sub
or
jnp
mov
popa
jge
mov
jecxz
loopne
pop
push
ss
aad
xchg
fcomi
inc
shl
mov
cwtl
push
xchg
mov
test
sub
jecxz
adc
and
in
mov
ds
mov
js
es
jmp
in
ss
jp
push
test
sbb
xor
inc
jge
mov
push
cmc
add
jp
jecxz
roll
and
mov
leave
sbb
sbb
mov
push
das
xchg
rcrb
test
inc
sbb
push
sar
into
stc
enter
pushf
andl
je
call
push
adc
or
mov
cmp
xchg
lock
and
jns
xor
xor
inc
fbstp
cmp
dec
xor
push
test
cltd
arpl
andl
or
pop
dec
mov
dec
push
test
jl
adc
ret
gs
sti
stos
jge
les
pop
add
push
mov
or
in
xchg
stc
adc
xor
out
mov
adc
std
fsubs
add
push
jecxz
mov
pusha
icebp
inc
xchg
pop
cltd
in
inc
movsl
fiadds
ret
dec
inc
data16
mov
xchg
jo
push
sub
ljmp
stos
in
ds
and
leave
xchg
xchg
push
jl
push
mov
jmp
loope
jae
pop
sub
or
or
fidivl
xlat
mov
lock
shrb
notb
ja
cmp
and
dec
and
jmp
xor
fstpl
push
test
cmp
sbb
and
and
flds
xchg
push
pop
popf
xor
add
xchg
test
push
faddl
jp
int3
pusha
shrl
jecxz
cmpsl
mov
gs
enter
or
in
push
pop
cwtl
mov
cli
jns
sbb
dec
pop
push
push
xchg
pop
scas
fstpl
test
pop
inc
add
adc
push
je,pt
and
jno
int3
mov
mov
xor
out
and
jg
cmpsb
xchg
or
aam
sarb
and
jno
add
mov
mov
jno
out
and
imul
mov
clc
ret
lods
jl
jns
xor
enter
xor
sbb
push
into
call
cmp
movsl
inc
add
xlat
roll
push
addb
mov
imulb
jnp
sbb
outsb
in
and
pop
adc
adc
cs
imul
push
clc
adc
mov
lcall
mov
pop
cs
and
inc
xchg
inc
and
xor
add
andb
out
js
dec
sub
cmpsb
and
mov
mov
test
inc
jmp
mov
test
pop
sarb
push
mov
dec
lahf
jno
push
xchg
cs
gs
es
xor
or
sub
lret
xchg
xor
and
mov
lea
popa
cmp
or
cmp
dec
jb
or
pop
fwait
mov
inc
push
pop
stos
mov
push
adc
jmp
sub
sbbl
mov
incb
mov
stos
inc
push
subb
dec
icebp
fiadds
cld
ja
pop
sbb
mov
lds
scas
fs
mov
dec
and
jnp
or
repnz
icebp
inc
jmp
jns
dec
xor
mov
nop
pop
insl
adcb
and
insl
scas
scas
popf
pop
mov
or
dec
dec
mov
daa
imulb
cmp
fs
out
cli
arpl
test
aam
les
cmpsl
sti
or
or
mov
xor
es
loop
add
pop
mov
cld
mov
or
out
xchg
xor
in
scas
into
lret
pop
adc
loope
pop
leave
jle
or
pop
push
pushf
inc
jp
cmpl
and
inc
pop
mov
push
inc
cmp
ret
adc
xchg
and
subl
inc
pop
jp
mov
or
push
push
push
mov
or
sbb
mov
mov
dec
jg
fwait
shll
xlat
sbb
pop
jle
jns
pop
mov
mov
pushf
push
out
aam
into
sarb
sbb
fs
sub
enter
into
push
xchg
jecxz
out
push
addb
jge
or
inc
mov
lea
cmpsl
cltd
inc
in
std
pop
adc
sub
loop
inc
aam
push
clc
cmp
int3
pop
push
push
leave
or
adc
gs
cmc
push
add
out
imul
and
dec
imul
lods
fs
insb
mov
sub
mov
cmpsb
mov
cmpsb
xchg
movsl
shll
outsb
int3
cmp
push
cmc
ljmp
mov
arpl
aad
rcrb
pusha
cmc
imul
vpmacsswd
mov
inc
popa
and
xorl
and
hlt
xchg
push
jne
jp
push
test
mov
and
mov
pop
adc
addr16
adc
test
in
sbb
adc
push
inc
nop
add
mov
dec
mov
and
lds
jb
jmp
inc
inc
jnp
mov
lds
sbb
dec
out
les
jmp
lahf
dec
inc
das
xchg
repnz
mov
jb
mov
push
and
cld
cmp
subl
mov
mov
into
mov
ljmp
mov
inc
jnp
add
ja
pop
jnp
mov
movsb
or
sbbl
test
adc
sbb
jns
push
lcall
sbb
pop
sub
jnp
lea
clc
jno
push
sbb
push
add
les
je
mov
cmp
jo
push
add
mov
cld
mov
or
aaa
add
out
push
std
stc
lock
or
mov
inc
faddp
push
push
gs
lret
inc
xchg
ds
mov
sub
repnz
outsl
inc
sub
mov
push
xchg
xchg
add
sbb
dec
testb
aas
repnz
xchg
xor
jne
sbb
fldenv
stos
fisttps
insb
inc
push
push
jl
movb
ret
lahf
xlat
xchg
push
inc
mov
push
lcall
add
aas
nop
lods
mov
mov
dec
mov
stc
mov
mov
adc
outsl
push
add
dec
hlt
popa
jo
jne
xor
xchg
and
mov
test
push
insb
into
stos
imul
adc
adc
pop
sub
jo
in
out
fcmovb
pop
lahf
and
pop
sub
or
pop
jne
daa
push
mov
inc
out
lock
add
adc
xor
jg
lods
cmpsb
gs
in
mov
jp
pop
fstps
mov
sar
test
sbb
xchg
test
sbb
pop
cmc
add
daa
sub
cmp
jge
mov
pushf
mov
cmpsb
fs
fisttpl
push
in
aas
movsl
jmp
inc
fs
dec
test
icebp
in
sub
repz
mov
cmpsl
mov
xor
jae
cs
int3
insb
cmc
jge
jne
pop
lock
hlt
adc
xchg
xor
mov
sub
int
arpl
mov
fwait
hlt
rcl
mov
jbe
push
mov
aad
and
xchg
repnz
jle
sub
in
outsb
jmp
add
cs
xchg
mov
mov
ret
pop
sarb
fstps
cltd
into
nop
rorb
fldenv
add
jne
out
jns
loop
sub
test
mov
mov
icebp
add
sbb
popa
push
nop
icebp
adc
int3
push
movsl
pop
cltd
add
scas
lahf
fwait
adc
std
cmpsb
popf
push
loopne
dec
adc
test
push
out
cmpl
sbb
mov
cmp
arpl
call
out
test
clc
and
jle
pop
inc
push
sbb
mov
add
xorb
test
out
xchg
mov
pop
test
repz
mov
xorb
call
bound
aas
or
shr
add
stos
pop
pop
inc
cmp
es
imul
xor
ret
mov
mov
dec
xor
mov
pop
enter
pop
in
jo
divl
jl
mov
push
lahf
test
cmpsb
add
imul
scas
xchg
addl
lcall
mov
adc
lret
test
cld
jns
jnp
and
js
aad
pop
movsl
lods
clc
push
fimull
cmpsl
incb
jp
push
nop
imul
je
adc
lods
ss
retw
and
orb
adc
push
mov
in
outsl
mov
fwait
scas
inc
lret
fnstsw
in
pop
or
mov
push
insb
mov
shrl
out
in
subps
xchg
jno
iret
lret
arpl
push
or
xor
or
scas
test
cmp
je
enter
mov
rcrb
sbb
in
fwait
out
xchg
xlat
repnz
fs
test
xor
push
and
sub
movsb
fisubs
mov
jp
add
int3
test
inc
jp
mov
sbb
incb
fcmovnbe
cltd
pop
fiaddl
jo
pushl
arpl
mov
aas
xchg
cltd
sub
outsb
jg
mov
cmpsl
je
adc
mov
or
or
sub
sub
mov
pop
ds
or
imul
xor
dec
sbb
mov
inc
mov
or
hlt
sti
ds
cmpsb
mov
mov
push
push
aaa
jle
xor
sbb
sbb
stos
or
xchg
pop
pop
out
ret
sar
outsl
arpl
inc
ja
mov
inc
pop
or
test
sarb
pusha
inc
xchg
jns
repz
lds
arpl
fsubs
add
pop
ret
dec
cmp
out
jns
arpl
pop
adc
jo
dec
lea
cmp
mov
xchg
push
inc
sub
fimull
repz
rcrl
int3
or
ss
inc
inc
cmp
imul
inc
pop
sub
mov
or
mov
fs
aad
inc
inc
aaa
sub
xor
mov
mov
or
sub
cmpsl
cmp
gs
xchg
cmp
sbb
add
addr16
out
rcll
pop
inc
pop
cmc
sbb
cld
das
mov
pop
jno
jp
icebp
popa
arpl
sub
or
addr16
pop
aam
out
lds
push
ja
xor
mov
in
rorb
scas
gs
sahf
pop
xchg
dec
dec
xchg
or
sti
pop
sahf
jmp
jnp
test
inc
aad
stos
pop
popf
cmp
repz
cmpsb
ret
pop
mov
sbb
out
push
ds
das
xchg
in
xchg
outsb
jg
adc
outsl
shlb
popa
imul
pop
xchg
mov
stos
xchg
sarl
jne
adc
xchg
xchg
stos
movsb
cmc
fdivrs
pop
nop
fisttps
and
adc
adc
add
adc
std
or
and
push
jnp
loope
mov
pop
dec
cmp
cmp
or
mov
lock
jge
notl
or
test
sti
sbb
push
push
lret
cli
jmp
pop
jle
xor
xor
aad
fwait
das
xchg
pop
loope
lods
stc
outsb
lods
pop
shlb
pop
xchg
je
popf
jb
mov
movsl
cmp
jecxz
outsl
jb
pushf
out
pop
mov
outsb
inc
sbb
clc
int
scas
pop
xlat
subl
mov
dec
je
jg
hlt
xlat
sub
cmpsb
cwtl
and
pop
dec
out
xchg
fsubr
mov
or
sub
pushf
xlat
xor
cwtl
push
imul
fildll
iret
flds
push
insl
popa
enter
dec
jl
cmp
push
push
mov
cmpsb
imul
in
fidivrs
mov
mov
push
sbb
xor
adc
aad
lcall
pop
mov
add
inc
popf
out
inc
out
jg
sbb
sti
rclb
lock
mov
stos
je
push
movsb
dec
and
insb
add
roll
adc
ss
xchg
mov
std
mov
shrl
mov
pop
std
inc
in
mov
sti
xlat
sarb
adc
or
std
dec
mov
add
fnsave
rorl
mov
jb
mov
cwtl
mov
aas
data16
lods
test
inc
loope
cltd
popf
clc
nop
les
decb
loopne
pop
outsb
pop
dec
adc
dec
cmpsb
or
pop
rclb
jmp
rep
push
cmpsb
adc
mov
inc
pop
into
pop
dec
cmpsl
repz
loopne
icebp
pop
adc
test
ljmp
lods
sub
sbb
or
and
push
cmpsb
sbb
outsl
je
pop
fcmovnu
popf
aaa
push
arpl
xchg
stos
cmp
icebp
sbbl
xor
ja
insb
inc
inc
int
adc
cmpsl
mov
pushl
mov
sbb
insb
mov
fsubrs
arpl
testl
lods
and
pop
push
xlat
sbb
cmp
xor
fsubrl
sub
push
and
test
pop
out
mov
ja
xor
cmp
icebp
or
ds
rcl
push
jbe
repnz
inc
xor
scas
add
mov
dec
inc
add
popa
mov
mov
add
push
cld
stos
jo
jnp
data16
rorb
test
sbb
repnz
lahf
fwait
test
pop
mov
pop
adc
loopne
fs
adc
std
pop
sub
cmc
mov
or
pushf
sub
xor
mov
and
ficoms
fwait
push
dec
pop
daa
jg
fsubp
jmp
or
sbb
outsl
lock
jmp
call
xor
mov
sbb
inc
pop
pop
sti
shrb
xor
push
adc
mov
cmp
mov
fwait
push
cmp
ror
cmpsb
jecxz
gs
xor
inc
popf
sub
cvtdq2ps
icebp
int3
pop
loope
mov
add
mov
lock
sub
dec
push
cli
mov
mov
in
imul
ja
imul
daa
in
xchg
pushf
jne
sub
sub
in
lds
into
mov
push
sbb
in
jl
push
notb
push
loopne
shll
mov
icebp
movsl
movsl
pop
sbb
int
imul
in
out
pusha
pop
pop
sbb
jns
adc
gs
add
xchg
inc
movsl
icebp
stc
cmp
inc
mov
insb
fildl
sub
es
dec
cli
jl
push
cmp
lret
pop
sbb
sbb
out
push
imul
xor
add
adc
mov
mov
inc
and
sub
int
stos
inc
frstor
rcl
cld
mov
lods
inc
push
ret
sbb
mov
push
jbe
mov
add
add
mov
sti
stos
into
sbb
cmp
cli
adc
iret
lods
xchg
mov
or
dec
lahf
fst
add
repz
adc
dec
push
cld
lret
jmp
in
cli
adc
xchg
push
bound
adcb
cwtl
inc
ja
xchg
adc
repz
mov
data16
sub
arpl
cmpsl
and
in
sbb
or
enter
sbb
dec
scas
fcompl
push
jnp
jo
outsb
add
adc
aad
popf
lds
push
push
lods
lret
sbb
or
nop
xchg
add
pusha
divl
fldl
mov
cwtl
mov
daa
jp
sbb
lock
data16
dec
gs
mov
lcall
scas
movsb
stos
mov
sbb
jp
or
xchg
fldt
dec
in
and
pop
xchg
jno
lds
sbb
imul
xchg
or
fcmovnb
jns
movsl
pop
frstor
push
mov
out
cmp
push
push
bound
fcmove
mov
push
aas
std
mov
inc
dec
insb
sub
jmp
les
nop
aam
inc
or
nop
mov
iret
stc
cwtl
sbb
shlb
sbb
jge
shrb
outsb
mov
xor
jg
jb
dec
adc
mov
fs
mov
sub
cmpsl
mov
in
scas
arpl
inc
xlat
jmp
pop
adc
lahf
subb
pop
inc
and
fs
ret
pop
sbb
in
inc
push
enter
jmp
sarb
pop
jecxz
pop
in
loopne
stos
loopne
movsl
out
mov
out
push
mov
push
mov
leave
fsubl
jnp
fldl
mov
emms
hlt
ds
sbb
mov
lret
icebp
xchg
mov
mov
add
lea
pop
leave
fiadds
das
aaa
or
jp
fwait
cmpsb
jge
push
insl
push
jo
jge
iret
mov
fcomi
sbb
sbb
mov
xchg
jo
movsb
mov
decl
push
push
mov
adc
sbb
lahf
adc
mov
jge
mov
xor
mov
cmp
cmp
cmp
test
out
jl
int3
adc
pop
lds
loope
cld
out
pop
lock
lret
jne
cmpsb
aaa
sub
inc
and
push
jne
push
cmp
mov
aas
push
xor
sahf
and
xlat
repz
pop
gs
sahf
or
pop
cli
sbb
push
and
pop
push
mov
pop
cli
das
pop
sub
push
aad
jmp
mov
xchg
mov
pop
jae
or
pop
ljmp
loopne
hlt
int
inc
mov
in
lret
xchg
jl
lret
mov
xor
into
out
xchg
std
or
int3
pop
aas
sbb
and
fs
je
mov
jmp
pop
pop
fdivrs
push
popf
inc
and
gs
fistl
shll
and
in
stos
rolb
repz
mov
call
dec
sti
out
je
pop
pusha
sahf
xor
mov
dec
dec
fwait
pop
add
xchg
fdivr
mov
into
ljmp
cltd
xchg
in
test
sub
push
rclb
mov
push
mov
pop
out
sub
add
sub
movsb
bound
and
add
sar
mov
xchg
sbb
and
lcall
ja
jg
xchg
xchg
xor
mov
fadd
add
fsts
push
leave
or
sub
xchg
sbb
push
push
jl
mov
dec
out
pop
xchg
es
add
std
orl
int3
repnz
sar
scas
jae
dec
xor
jge
sub
lcall
dec
shlb
mov
or
xchg
sti
clc
arpl
pushf
hlt
in
xlat
sti
inc
cwtl
lahf
mov
jno
push
mov
in
das
mov
mov
out
jp
sti
xor
das
cmpsb
push
fs
stos
jle
mov
mov
test
cmp
mov
dec
jp
frstor
icebp
ljmp
mov
clc
jmp
pusha
and
and
mov
jge
loope
imul
xchg
and
xchg
adc
int3
sub
insl
rcl
jo
in
sub
push
and
aas
mov
push
addl
imul
pop
push
push
cmp
call
in
lret
mov
mov
popf
mov
ss
xchg
xchg
test
ljmp
add
mov
mov
lock
push
adc
lcall
pop
add
loope
aam
insl
movsb
mov
jo
adc
mov
in
fnstcw
int
xorb
mov
push
cmp
or
pusha
aas
sbb
insb
pop
push
jp
std
outsl
stc
sub
imul
xor
nop
lods
cs
imulb
or
sbb
and
sarb
pop
mov
sahf
lahf
and
stc
cmp
ljmp
cmp
mov
sbb
int3
ss
fidivl
stc
in
cmp
int
testl
cmp
mov
or
inc
pop
sbb
jle
pushl
in
push
mov
icebp
mov
jg
int
in
xchg
lret
adc
pop
mov
loop
cmp
sbb
push
jg
jns
xor
push
dec
test
xor
xchg
add
push
xchg
iret
mov
add
adc
dec
gs
lahf
pop
lcall
mov
pop
test
cmp
fists
fcoml
test
or
out
push
popa
push
test
mov
cltd
xlat
mov
push
sub
add
leave
fistpll
movsb
lods
data16
and
push
cmc
mov
fidivrs
sarl
pop
loopne
jle
mov
addr16
sub
pop
sbb
ret
sbb
fisttpll
mov
push
addr16
les
call
loope
sub
fs
or
inc
xor
mov
and
xchg
aad
cmp
dec
push
cmc
out
inc
mov
jl
mov
ljmp
stc
sub
test
sbb
hlt
out
or
insl
pusha
ficompl
mov
add
cmp
mov
jns
daa
cmpsb
adc
adc
test
jge
pop
inc
data16
or
sbb
jnp
fidivrs
jp,pn
fistpll
xchg
dec
or
mov
xchg
pop
and
cmp
adc
add
cltd
stos
popf
cmp
pop
cmc
mov
push
xor
or
xchg
xchg
push
inc
mov
cld
mov
sub
adc
xchg
pop
out
mov
sti
and
mov
cld
movsb
and
jg
aad
fdivl
mov
dec
mov
xchg
sub
cwtl
push
dec
and
xor
cld
push
stc
jo
ds
and
push
or
pop
fistps
scas
pushf
outsl
xor
pusha
lods
stc
popa
mov
xorb
cli
ljmp
std
push
leave
jg
mov
orb
xchg
mov
outsb
inc
lods
inc
imul
cmpsl
fsts
inc
mov
cmp
mov
fsubl
aam
sbb
jnp
mov
mov
sbb
fsubr
cmp
aas
jmp
sbb
jb
insl
jp
repz
sahf
xchg
scas
out
and
xor
faddl
idivl
lret
lcall
rorb
arpl
xlat
pop
rclb
aaa
cmp
jbe
cmp
dec
int
insl
mov
cmp
outsl
in
sub
mov
pop
fwait
ret
jp
jg
push
mov
bound
lods
mov
pushf
pop
mov
xor
push
pop
movsl
adc
xchg
fistl
out
mov
sub
cmp
outsl
cltd
xor
inc
pop
xor
or
mov
shlb
dec
dec
xchg
pop
je
dec
push
test
cs
das
jg
inc
cmpsl
mov
icebp
sti
out
jns
mov
and
gs
mov
out
xor
fiadds
or
xchg
stc
in
int3
inc
adc
int3
xchg
in
div
lds
lahf
jbe
inc
xchg
adc
mov
and
lret
rcrb
int3
xchg
xchg
ljmp
nop
xchg
sti
push
fsubrs
inc
fwait
mov
mov
andl
xchg
adc
dec
mov
rcr
dec
mov
mov
push
inc
sbb
sbb
fnstsw
das
dec
les
inc
jne
test
dec
cli
clc
into
mov
mov
cs
push
sti
int
pop
lahf
mov
lock
das
jp
out
adc
adcb
adc
fcompl
mov
rclb
cli
pop
scas
cli
xor
test
frstor
dec
sub
add
fidivs
outsl
cmp
ss
ret
hlt
ret
ljmp
icebp
cmp
gs
outsl
add
pop
mov
or
inc
push
push
ljmp
cmp
jnp
lret
test
xchg
push
aad
cmp
lds
xor
lds
aam
aad
mov
insl
push
mov
jl
inc
or
pop
js
das
xchg
lea
mov
pusha
mov
and
adc
adc
movsb
fisttpl
pop
push
push
and
mov
pop
dec
fnstcw
dec
shr
push
pusha
std
add
imul
push
call
push
stc
and
pop
pop
ss
call
lret
fcmove
lods
mov
push
jmp
ja
xchg
ret
xor
test
sub
test
in
cmp
shl
sahf
jg
imul
rcll
pop
fisubl
fildll
lea
cmp
push
idivl
dec
lret
shll
xor
stos
inc
pop
xor
cmc
je
sub
cltd
inc
xchg
loop
into
cmp
jg
bound
dec
or
enter
int
xor
jo
mov
arpl
inc
outsl
nop
mov
pop
sub
and
jecxz
popa
bound
sbb
push
fwait
sbb
ret
mov
fadds
popf
jg
and
sti
cmpsb
outsl
dec
hlt
lea
mov
mov
das
arpl
cmpsl
das
out
outsb
aaa
pop
inc
adc
jae
xor
inc
cld
or
ljmp
in
mov
aam
mov
xchg
ljmp
ss
ds
sub
lret
fstpt
sbb
pop
and
inc
cmp
lods
scas
movsl
test
dec
addb
loopne
xor
and
les
test
cmpsb
fimull
out
or
lock
out
cwtl
stos
and
adcl
pop
mov
and
xor
dec
lret
xchg
add
test
fistpl
bound
daa
jle
daa
jns
and
mov
add
or
sub
fadd
in
cld
ja
mov
mov
mov
ret
lods
test
in
mov
sub
int
xchg
sbb
cmpsl
jl
xbegin
in
dec
mov
in
xor
mov
or
sbb
pushf
stc
pop
arpl
sbb
cmp
mov
sub
arpl
mov
ja
and
push
cmp
mov
xchg
mov
or
pop
lret
xor
pushf
add
or
add
js
xchg
pop
movsl
sbbl
or
mov
out
add
sbb
or
mov
lahf
shlb
adc
or
lods
rcrb
int
icebp
sbb
add
sti
pop
fstpl
lret
cmp
cmc
call
inc
mov
out
es
push
fcomps
and
ficomps
xor
xlat
insl
movsb
or
roll
int
inc
in
je
movsb
fcoml
sub
imul
inc
cs
adcl
sarl
mov
lods
jl
lret
lods
leave
fwait
je
mov
fcompl
insl
pop
stc
and
add
imul
mov
in
dec
aad
mov
rcll
ret
outsb
loop
cmp
shll
dec
sbbl
jns
jl
mov
fdiv
in
xor
movsb
inc
mov
xor
dec
mov
mov
gs
mov
mov
xchg
add
or
and
lea
jge
or
mov
sti
jno
addl
jl
int3
xchg
lods
jo
pushf
leave
lods
lahf
push
jae
sbb
out
cmpsb
sbb
mov
out
lcall
lock
sub
popf
mov
inc
shl
andl
xchg
fidivrs
push
mov
shl
addr16
mov
push
test
int3
dec
pop
fs
mov
test
cmp
fwait
dec
dec
cmc
add
js
dec
or
test
cwtl
in
shl
xor
sub
movsb
ret
adc
rolb
push
jmp
stc
sbb
jo
ja
addr16
jmp
pop
push
shl
sbb
out
xchg
pop
dec
mov
aaa
sbb
imul
ljmp
std
ret
mov
fnstcw
xor
pop
mov
cmpsl
data16
push
loope
push
inc
cmp
or
and
jecxz
dec
imull
push
jecxz
test
pop
xlat
mov
push
lods
sbb
sub
xchg
int3
scas
out
xchg
rcll
sbb
push
jns
lods
pop
and
jl
cld
mov
inc
repz
or
dec
sub
repnz
repz
stos
jbe
sub
aaa
mov
hlt
push
lock
pop
xor
test
gs
adc
mov
mov
add
xor
mov
dec
mov
xchg
sub
ds
into
jge
or
cmpsb
lods
sub
jl
inc
mov
ljmp
xchg
loopne
jl
mov
vmread
sbb
mov
sbbl
aad
pop
aaa
ss
bound
fadd
jle
pop
mov
icebp
lods
sub
and
lret
mov
subl
sbb
out
sti
je
mov
mov
jnp,pn
sbb
jmp
jmp
test
jg
sbb
sub
jg
data16
adc
jg
rorl
js
sarb
xor
hlt
sbb
and
std
mov
dec
imul
jg
stos
int3
pop
mov
ljmp
xlat
jmp
test
aam
int
dec
in
or
mov
jno
push
enter
fistl
xchg
sub
lahf
incb
jp
mov
mov
fldenv
fs
lret
xchg
ja
lcall
stc
ficomps
pop
xor
jno
dec
sub
and
jno
pop
xchg
enter
sahf
jne
jbe
or
cmpsl
mov
pop
xor
jmp
or
iret
fimull
or
mov
fs
fisubrs
or
cmp
dec
mov
aad
sub
push
push
jno
jno
inc
out
aam
push
cs
push
sub
mov
arpl
jge
pop
scas
les
ja
arpl
xor
mov
aaa
add
jecxz
into
rcl
movsb
sub
cmp
jo
shrl
cmp
aas
repnz
dec
testl
iret
cmp
mov
cmc
cmp
mov
dec
sbb
inc
cmpsb
in
xor
repnz
frstor
mov
inc
xchg
inc
xchg
push
push
jns
lods
and
add
jmp
mov
and
pop
pop
sbb
test
not
push
or
dec
pop
aam
aam
pop
inc
jmp
insl
ss
cmp
jmp
stc
or
add
and
pop
gs
jne
mov
jno
gs
jge
cmp
cmp
push
jp
push
leave
cwtl
add
mov
lods
adc
mov
mov
jg
push
adc
fcoml
repz
cmp
popf
insl
sub
arpl
xchg
push
jae
xlat
cli
jnp
mov
aam
jne
push
shl
push
cmpl
daa
xlat
mov
sar
push
lods
cwtl
inc
movsl
cmp
cli
cmc
movsb
adc
lea
xchg
jbe
adc
insl
or
addl
aam
scas
push
loop
or
jae
push
fstl
shrl
dec
push
sahf
fwait
mov
jb
and
in
xlat
jle
loop
repnz
xor
mov
mov
and
movb
cmp
shr
gs
cmpsb
push
rol
jp
mov
cmp
mov
cmp
xchg
and
in
add
jge
lea
pop
movsl
stos
xchg
loope
movsb
and
mov
or
cmp
fisttps
stos
sub
lods
mov
and
cltd
clc
ret
mov
ret
aad
or
sub
and
jns
jb
sarb
bound
rcrb
int3
push
push
shll
push
jb
add
mov
shlb
lret
mov
cs
lds
xchg
lea
mov
test
and
insl
hlt
xchg
daa
sahf
jae
and
xlat
je
leave
dec
xadd
mov
xchg
adc
xchg
ret
repz
mov
mov
xor
lcall
gs
jb
in
add
pop
pop
shrb
mov
mov
and
ret
mov
test
and
shlb
scas
xchg
cmp
mov
cli
adc
push
mov
mov
jnp
inc
jb
les
sahf
pop
popf
ljmp
xor
sbb
add
and
inc
and
mov
scas
xchg
cmc
xchg
push
pavgb
imul
dec
sbbl
lds
push
data16
fcmovnbe
lahf
and
pop
cmc
add
dec
shrb
iret
mov
fs
push
call
fs
test
pop
jno
cmp
int
jo
inc
pusha
push
ja
das
nop
loopne
dec
mov
sub
fcmovnb
mov
push
ljmp
lret
sbb
mov
inc
pop
inc
pop
cwtl
adc
scas
sahf
or
mov
pop
push
lcall
xchg
dec
pop
mov
jecxz
mov
xor
andb
adc
mov
mov
xchg
mov
test
push
es
lock
jnp
jns
cmp
push
mov
fcoml
xchg
mov
shr
dec
cmp
push
test
lea
and
jl
jno
lcall
jbe
jmp
mov
fimull
sbb
mov
repz
add
cmp
mov
push
xor
jb
adcl
xlat
aad
add
repz
lods
mov
or
jg
pop
dec
arpl
out
push
sbb
dec
xchg
xor
pusha
inc
int3
mull
mov
repnz
mov
sub
mov
or
rol
mov
int3
dec
mov
mov
cmp
aas
pop
mov
mov
mov
mov
add
and
addr16
in
hlt
enter
add
add
pop
sub
xchg
push
mov
sbb
mov
iret
or
jl
test
shrb
push
sub
addb
in
rcll
les
popa
in
inc
lods
push
ficoml
mov
xor
add
push
lods
cltd
xchg
mov
outsl
push
fucomp
pop
nop
gs
push
cld
cmp
dec
mov
call
idivb
sbb
nop
and
cmp
pop
dec
imul
out
or
cwtl
ds
mov
scas
fnstsw
aas
or
inc
cli
mov
bound
test
dec
movsb
sti
dec
cltd
cli
pop
clc
scas
cwtl
loop
xor
pop
xchg
dec
push
push
lcall
test
xchg
mov
enter
cmp
je
cltd
out
out
lret
shlb
pop
out
out
loope
pusha
and
push
ds
push
push
jb
mov
lds
test
sbb
or
mov
push
gs
sbb
mov
mov
mov
stc
jbe
mov
lcall
stc
mov
incb
inc
scas
mov
sti
cmp
inc
in
cld
push
jmp
fbld
into
and
iret
and
jo
xchg
inc
xchg
in
leave
and
xlat
pop
xchg
mov
test
pop
daa
lods
inc
es
inc
sub
sbbl
into
shll
popa
xorb
popa
push
push
mov
cmovae
push
mov
repz
aam
hlt
test
cwtl
add
sbb
adc
mov
mov
call
mov
and
sub
push
xor
in
cs
les
mov
sahf
test
ljmp
outsb
loope
mov
xchg
adc
shlb
outsb
sti
dec
push
push
pop
fwait
push
mov
gs
mov
xchg
lea
adc
mov
dec
popa
fidivrs
mov
arpl
add
sub
add
push
xchg
aad
inc
lea
mov
mov
shll
mov
push
and
nop
in
mov
mov
mov
add
push
imul
les
dec
sbb
shlb
fsubrs
outsb
in
jg
rcll
fucom
xor
fdivs
or
rcrb
mov
jmp
repz
ljmp
dec
std
mov
loopne
mov
mov
js
add
push
cmp
adc
dec
out
jno
adc
xor
cltd
dec
dec
and
or
movsl
fdiv
xor
xchg
lods
loopne
mov
pop
add
jne
dec
push
in
in
mov
hlt
test
loop
add
sub
mov
rorl
pop
lea
je
cmp
mov
push
jne
add
push
sub
add
out
jecxz
hlt
pop
ret
repnz
out
xchg
stos
es
and
out
cmp
xchg
mov
mov
inc
or
jno
jle
jl
dec
outsb
sbb
out
inc
fadds
push
push
outsl
aam
xchg
pop
es
inc
jle
jo
xchg
add
dec
daa
jecxz
mov
cmc
imul
icebp
jbe
cmpsb
sub
push
insl
lret
and
mov
jb
mov
pop
jo
lods
mov
scas
sbb
mov
stos
cmp
mov
jmp
cli
je
xchg
dec
jg
dec
jnp
add
outsb
dec
xchg
out
sbb
daa
cmp
push
xchg
cwtl
add
pop
sub
iret
push
or
xchg
cmp
jne
sbb
out
or
cmpsl
mov
inc
pop
xchg
xchg
adc
mov
jmp
arpl
xor
js
scas
add
call
enter
push
adc
fsub
cmp
push
js
je
add
push
adc
adc
into
subb
push
dec
orl
scas
mov
pushf
aad
fwait
pop
dec
xlat
fwait
test
movsb
out
and
loopne
aaa
enter
sbb
jmp
cmp
adc
dec
sbbl
loop
es
stos
xchg
icebp
and
les
cmp
dec
stos
jnp
or
sub
sbb
cwtl
dec
mov
adc
xchg
lcall
and
ljmp
ret
lds
test
and
mov
pop
xchg
and
aad
mov
roll
jns
pop
mov
aam
imul
subb
test
aad
rcll
push
jl
inc
pop
fnstcw
int3
sub
xchg
lahf
lret
xor
insb
mov
test
lds
xor
jbe
pop
sub
pop
pop
negb
addr16
mov
lret
outsb
sub
push
arpl
repnz
jbe
pusha
arpl
fbstp
mov
inc
cmp
sub
popf
pop
call
or
enter
sbb
jge
push
stc
push
out
lret
mov
mov
dec
jp
xor
imull
xchg
dec
popf
jb
imul
test
mov
sti
fadd
in
lea
ret
and
decl
adcl
lahf
out
lret
push
push
or
cmpsl
sub
and
sbb
lods
sub
xchg
nop
movsb
jae
cmp
das
bound
shll
mov
dec
mov
sbb
lods
rorb
sub
mov
dec
sub
mov
leave
sahf
mov
pop
nop
out
adc
shlb
inc
sub
sbbb
and
aaa
faddp
out
shlb
pushf
ret
pop
stos
cli
out
mov
in
dec
add
imul
cmp
cmp
jbe
sbb
jle
lret
jo
add
shrb
hlt
or
or
mov
out
stc
sti
dec
ficoml
dec
aas
cmp
mov
fstps
pop
ds
pop
mov
dec
xor
mov
out
sahf
roll
sub
fnstsw
les
sub
movsl
inc
fsts
test
cmpsb
bound
cwtl
lret
or
xor
fwait
jns
aaa
cmp
add
sbb
dec
pop
adc
sbbb
imul
data16
inc
or
ret
sbb
dec
les
add
shr
inc
sti
movsb
ss
or
nop
lds
test
mov
mov
mov
push
mov
mov
dec
sub
push
xchg
sub
cwtl
xor
iret
and
stos
jl
or
mov
pop
jg
and
aaa
jne
cmp
shll
lahf
mov
push
sub
jnp
ror
and
shl
inc
lods
sbb
push
and
mov
xor
jnp
xchg
int3
pop
mov
enter
sbb
ja
mov
sub
fimull
pop
lahf
cs
ret
out
movsl
xlat
or
jp
dec
pop
dec
int3
mov
xor
jp
in
mov
add
rcl
into
mov
js
nop
xchg
adc
sub
fstl
aas
ror
adc
or
add
sbb
in
push
insl
in
pop
dec
sbb
adc
pop
pop
jae
push
les
or
les
call
jle
daa
sbb
xchg
or
loop
cld
lock
and
out
mov
push
pusha
call
push
mov
shr
int
outsb
push
ja
cld
and
xchg
mov
mov
fiaddl
stos
outsb
cmp
scas
stc
jle
popa
xchg
subb
movsl
sbb
push
cmc
pushf
dec
mov
rolb
lcall
cmc
std
mov
adc
jp
cld
adc
push
cmpsb
xorb
out
dec
int
pop
sub
mov
out
inc
stos
cmp
xor
popa
mov
xchg
movsb
push
adc
mov
bound
jecxz
sahf
mov
or
loopne
mov
std
push
and
test
and
push
lds
jl
pop
ja
filds
enter
imul
push
adc
add
or
lea
lret
push
cwtl
xlat
mov
in
push
jmp
or
popl
ljmp
lret
push
out
ret
out
jbe
adc
mov
mov
dec
inc
add
divl
and
inc
cmp
nop
js
ja
test
pusha
clc
or
jo
inc
lods
movsb
sub
xchg
pop
add
hlt
ss
pop
ds
xchg
inc
dec
mov
aad
ret
les
or
sub
sub
inc
mov
popa
jle
pop
or
out
inc
scas
jne
adc
mov
in
mov
ds
lods
enter
dec
sub
out
addr16
add
sbb
xchg
inc
adc
call
ljmp
sar
xor
lret
xor
mov
inc
jle
into
test
dec
enter
decl
xor
xor
out
push
cmc
arpl
iret
jp
jnp
dec
in
cwtl
sbb
es
mov
pop
in
push
push
mov
mov
mov
inc
cmp
dec
ret
movsl
sub
xchg
xchg
push
push
aaa
jae
pop
scas
dec
xchg
xchg
iret
inc
jne
sbb
jl
xor
pop
jnp
clc
mov
pushf
test
xchg
shl
push
cmp
sub
out
and
aaa
cwtl
add
stos
loop
xchg
xchg
mov
cmp
or
fidivrl
dec
hlt
jno
pushf
js
adc
dec
pop
int
jmp
jecxz
pop
rcrl
and
insw
test
popa
adc
inc
nop
int
inc
in
cli
cmc
ljmp
xor
and
jnp
int
out
lods
cmp
or
fcomip
adc
xchg
mov
cli
push
pushf
les
les
inc
gs
sub
clc
pop
mov
jl
lret
aam
xchg
aas
mov
dec
dec
stos
add
cmp
adc
xor
sarb
pop
jmp
loopne
insl
fwait
push
popf
or
rol
ja
das
test
xor
and
jl
fimull
inc
and
out
mov
mov
sub
push
std
lret
iret
cs
mov
cld
jp
dec
xor
mov
sub
enter
xor
pop
out
daa
stos
data16
pop
jb
pusha
out
stc
in
inc
addr16
scas
test
xchg
clc
ja
subb
push
inc
mov
leave
add
add
shl
push
mov
sub
pop
jp
sub
test
testb
iret
mov
jecxz
ljmp
push
xchg
jecxz
repz
inc
pop
addr16
lret
sub
mov
and
add
adc
sub
push
insl
test
xchg
add
pop
inc
cs
ror
dec
or
cmc
test
dec
xchg
pop
mov
mov
and
jnp
filds
add
mov
jae
fldenv
mov
nop
xor
push
xor
push
sbb
lahf
cmp
loope
push
mov
fsubs
pop
push
outsb
es
mov
sbb
jp
cmp
mull
loope
or
les
arpl
je
or
jo
std
dec
sub
out
adc
cmc
xchg
out
clc
jbe
ljmp
sub
mov
or
inc
dec
in
jl
add
cmp
lock
jp
sub
push
adc
iret
mov
mov
sbb
cmp
inc
jns
inc
xor
scas
push
mov
xchg
or
cs
pop
int3
inc
add
pop
adc
mov
cmp
add
push
je
into
or
push
faddl
cmpsl
movsb
cs
stc
jne
cwtl
mov
xchg
pop
fxch
nop
jge
cmpsl
mov
loope
lahf
divb
xchg
cmpsl
sub
imul
adc
int3
sbb
pop
jecxz
pop
aaa
ljmp
mov
pop
push
xchg
push
push
xchg
idiv
push
je
shrb
sahf
iret
cli
dec
jae
xchg
mov
sub
dec
test
cmp
jo
mov
xorl
ds
inc
pop
popa
add
add
push
mov
loop
mov
mov
shll
pop
sarl
roll
test
xor
movsl
addl
and
loope
push
cwtl
int3
mov
cmp
jnp
ljmp
and
sbb
hlt
fdivr
cltd
imul
fdiv
popa
lock
addr16
out
add
adc
mov
adc
jecxz
xchg
call
xor
sbb
jge
pop
iret
repnz
mov
addr16
mov
mull
pop
adc
mov
fistps
push
mov
fistps
and
js
mov
inc
faddl
les
enter
dec
inc
add
adc
in
sahf
jne
ds
cmpb
xor
js
gs
ja
stos
mov
cmp
es
add
jo
je
fidivs
ret
int
int3
sub
xchg
in
inc
data16
and
or
leave
cli
out
mov
and
dec
leave
pop
cmp
adc
push
loopne
lock
out
add
andl
push
push
adc
aas
test
cmp
or
scas
jnp
xchg
nop
xlat
fdivr
test
lods
xchg
pusha
test
test
sbb
out
dec
xor
add
das
nop
js
js
add
cmp
push
jno
jge
add
and
inc
xchg
movsl
dec
cltd
pop
outsb
insl
aas
insb
repz
adc
pop
aas
fsubs
xchg
sbb
jnp
adc
fstl
dec
jle
pop
and
pop
mov
sbb
mov
icebp
pmulhw
adc
jbe
mov
cmp
test
ret
stc
mov
sbb
sub
lock
sub
sarl
cltd
lret
ljmp
push
rdpmc
adc
or
mov
pop
jge
cmp
dec
int
or
adc
sbb
jnp
stc
js
cwtl
in
ficoms
mov
or
fldl
dec
iret
adc
shlb
loope
add
test
dec
arpl
mov
ss
cmp
sub
xchg
popa
fwait
or
pop
iret
decb
flds
addb
bound
test
inc
sub
xor
jae
in
movsl
jno
xchg
push
pop
mov
je
mov
cmp
in
mov
mov
mov
mov
push
ja
je
ljmp
and
sbbl
pop
addr16
fucomi
mov
aas
push
dec
add
pop
rolb
mov
cmp
xor
pop
sbb
push
je
xor
jecxz
and
mov
jnp
cmp
push
jmp
test
test
jnp
aas
jecxz
cmp
ds
es
imul
shlb
mov
push
dec
out
ret
ror
iret
cmpsl
loope
cld
decl
in
inc
cmp
in
xor
xor
sbb
into
outsl
push
push
sub
xor
insb
pop
sarl
in
int
jne
ror
lret
add
in
scas
aaa
das
je
xchg
cmp
cli
les
xchg
mov
loop
sbb
inc
mov
add
int
cmc
xchg
push
ficoms
inc
mov
adc
fs
mov
mov
stos
popf
ds
add
iret
inc
mov
inc
xchg
inc
stos
jne
pop
xchg
mov
lea
xchg
lock
jl
pop
scas
jmp
adc
pop
push
bound
sub
jecxz
out
mov
ljmp
jmp
mov
test
sti
sti
std
jg
jecxz
int
adc
inc
jecxz
jecxz
pushf
xor
xchg
xchg
inc
sbb
mov
aad
aad
xor
repnz
cmp
sub
add
mov
pop
roll
jl
hlt
mov
cli
decb
mov
arpl
out
in
loop
imul
pop
pop
stos
pop
and
inc
push
cwtl
shll
hlt
push
xor
jno
mov
mov
fsubl
mov
into
xchg
push
sub
nop
std
sub
pop
out
ret
stc
xor
mov
lret
andb
jle
push
iret
ret
push
add
jl
test
jmp
ss
mov
dec
js
sbb
xor
movsb
dec
adc
jae
add
mov
lods
lret
mov
punpckhdq
mov
gs
mov
movsl
pop
xor
scas
out
cmpsl
ret
pusha
xor
mov
sbb
mov
mov
mov
mov
fsubrs
pop
ds
mov
xor
ljmp
lods
xor
sahf
xchg
test
ljmp
cmp
popf
imul
xchg
rol
imul
popa
xlat
xchg
out
jb
pop
ds
add
stos
les
and
nop
or
addb
add
jb
cmp
lods
mov
pop
cwtl
dec
xchg
or
bound
inc
fldl
jbe
mov
mov
sub
popa
add
sbb
add
sbbb
mov
enter
popf
out
dec
fsts
or
fimuls
cmpsl
inc
sbb
add
jo
pop
pop
fisttps
mov
jg
gs
jge
jle
cmp
jle
mov
inc
jmp
jg
rcrb
pop
or
nop
rorl
push
sbb
xlat
xchg
jg
aaa
sti
add
aad
jl
xor
lret
clc
pop
mul
loopne
inc
jae
daa
hlt
xor
js
pop
in
mov
push
ret
int3
pop
cmpsb
out
fwait
int3
mov
mov
inc
shlb
jo
popf
scas
add
mov
jge
dec
mov
sahf
lods
pop
mov
mov
pusha
cli
int3
pop
fidivs
shll
mov
cmpl
pop
pop
add
adc
xchg
jle
out
and
mov
adcl
in
loope
stos
test
ljmp
pop
out
sub
pop
movsl
jp
push
insl
xchg
rcl
mov
in
repnz
dec
inc
repz
inc
inc
mov
jno
lret
inc
repz
mov
ja
cmpsb
fs
xchg
incb
ret
jno
cmpsl
mov
mulb
dec
pop
ds
in
inc
insl
insl
sbb
adc
lret
out
xchg
sub
jmp
cli
jl
add
out
imul
mov
jg
mov
xlat
arpl
aas
lret
dec
aad
mov
xor
dec
inc
adc
lea
xchg
adc
pop
scas
inc
sub
cmp
add
loope
scas
cmp
sub
dec
hlt
stc
outsl
lret
sbb
mov
xchg
adc
dec
mov
xor
in
push
push
sub
push
push
mov
in
sub
insb
andb
and
adcl
sbb
int
jo
mov
xor
call
fsubrs
repnz
adcb
in
popa
repnz
or
cmp
or
test
dec
outsl
and
pop
push
iret
shlb
sub
aas
add
adc
pop
arpl
mov
push
mov
sar
lret
lods
or
cmp
pushf
xor
ss
fadd
dec
cmpb
sub
sub
ja
sub
aas
xchg
adc
push
cmp
lea
add
pusha
or
test
push
jbe
cld
xlat
mov
mov
into
hlt
jns
aam
insl
jge
stc
jno
loopne
mov
fucom
nop
mov
inc
sub
sti
or
fwait
inc
mov
mov
cli
xchg
mov
push
stos
divb
sbb
sub
adc
data16
fidivs
and
sti
dec
push
cmp
mov
movsl
xor
insl
jno
cmp
xchg
cmp
rcrl
add
xor
push
jae
jno
stc
out
adc
add
aam
es
enter
fldt
mov
mov
mov
jne
adc
add
je
popa
jecxz
popf
add
test
cmp
inc
pop
lock
ror
dec
pop
jae
sub
cmp
mov
xchg
xor
test
mov
mov
mov
adc
data16
add
fs
dec
or
push
mov
enter
mov
aaa
mov
and
shll
and
mov
mov
stos
jb
push
ffreep
jno
addr16
scas
in
mov
xchg
adc
fdivrl
lcall
sbb
in
faddl
pop
mov
inc
pop
xchg
addr16
out
out
int
int
popa
pop
in
jmp
cmp
stc
cmp
popa
les
cmp
dec
xchg
dec
pop
fidivs
mov
mov
push
cli
fisubrl
sub
mov
or
imul
test
imul
mov
fwait
jmp
ret
ret
dec
movsb
jecxz
fwait
xchg
add
and
add
repnz
cmp
loop
sbb
xchg
mov
rcrl
push
and
lea
arpl
mov
adc
outsb
filds
roll
fmuls
mov
ret
push
pop
es
imul
add
cmpl
adc
shr
call
cmp
sub
ret
adc
cli
fs
fwait
orb
popw
cmp
push
iret
xchg
cli
pusha
and
loope
pop
shr
iret
xchg
fstps
xchg
das
add
sbb
jo
inc
inc
cmc
sub
mov
inc
dec
mov
dec
cmp
push
jo
fisubs
cmp
dec
xchg
cwtl
jb
mov
adc
mov
cs
and
test
inc
pop
outsb
insb
movsl
hlt
push
icebp
xchg
shl
xchg
vmptrld
bnd
daa
mov
fucomip
test
jl
mov
cmp
cmp
and
push
scas
xchg
xchg
jns
in
sub
xchg
int3
ljmp
xchg
add
sahf
test
js
inc
xchg
dec
sti
xlat
pop
fisubrl
and
loopne
sbb
jecxz
sub
jo
popa
cmp
mov
mov
out
dec
cmp
fchs
add
mov
out
adc
fwait
ret
push
loop
dec
insl
xchg
imul
pop
mov
pop
push
jo
sbb
aam
orl
sub
jns
cmp
out
sub
cmp
mov
in
and
push
out
or
dec
cmpb
xor
insl
jno
daa
sbb
in
xor
push
jg
int
fiaddl
pusha
icebp
stos
repnz
jne
js
sbb
loop
in
jecxz
push
and
jmp
xlat
pop
mov
mov
lods
mov
mov
ret
push
pop
popa
or
loopne
sbb
add
iret
mov
rolb
dec
cli
std
rcrb
adc
cmp
push
pop
imul
in
jb
fcomps
add
mov
cmp
outsb
lea
dec
stos
inc
lret
xor
pushf
sbb
cwtl
lods
sahf
sbb
sub
jle
add
test
mov
mov
and
clc
xchg
mov
je
cwtl
in
cmp
push
and
sbb
or
add
lods
xor
call
mov
mov
jne
mov
repz
fdivs
insl
stos
pop
lods
repnz
adc
fisubrs
add
aaa
sub
loope
addr16
sub
lods
stc
insl
insl
jo
pop
movsb
mov
push
rorl
sahf
outsl
scas
cmpb
js
jnp
dec
test
add
jne
push
push
ds
stos
test
out
leave
enter
dec
int
sub
cmp
and
cmpsl
push
and
loopne
jns
jecxz
cmpsb
mov
jle
mov
imul
dec
enter
sbb
into
fiaddl
push
push
sub
inc
jg
je
fcoms
arpl
loopne
mov
pop
inc
bound
or
les
cltd
and
lret
cmpsb
mov
cs
test
lds
cli
mov
xor
int
pop
fistpll
aam
rcr
test
fs
subl
or
mov
jl
or
pop
jns
inc
jl
adc
pop
outsl
cld
pushw
mov
test
movl
cmpsl
incl
outsb
movsl
insb
lret
xchg
xchg
and
sbb
mov
fdivrl
sbb
ljmp
sub
test
cmp
hlt
int
xchg
xchg
leave
sti
mov
sub
ret
inc
inc
in
mov
push
inc
rcl
dec
or
in
sti
orb
mov
test
xor
mov
test
pop
stos
mov
push
lods
pop
inc
add
pop
sub
mov
clc
outsl
xlat
sbb
dec
decb
push
enter
out
mov
outsl
dec
repz
out
in
cli
icebp
add
jo
notb
push
dec
push
dec
popf
cmpsl
lods
adc
xchg
adc
xlat
jle
pop
and
mov
jmp
cmp
hlt
pop
nop
mov
das
xchg
mov
mov
xorl
adc
mov
adc
lret
enter
adc
or
fsubl
cmp
adc
inc
sbb
hlt
mov
or
xchg
cli
lcall
push
lods
gs
stos
inc
out
jge
ja
popf
int3
fimull
insl
pcmpgtw
inc
sti
cmpsb
scas
sbb
jnp
xchg
mov
push
adc
push
adc
push
aaa
inc
push
dec
cmp
and
mov
push
and
out
movsl
jne
and
jnp
sbb
mov
mov
test
shrb
int
outsb
fs
movsb
push
sbb
hlt
clc
arpl
mov
cmpsl
in
jmp
fmul
stos
jmp
pushf
sbb
in
cmp
push
and
push
add
les
xchg
movsl
adc
adc
adc
push
es
or
and
xchg
jmp
mov
push
push
outsb
mov
cmpsb
cltd
sahf
sbb
push
xchg
pop
lret
bound
cwtl
or
mov
iret
push
mov
test
sbb
mov
and
shl
movsb
incl
mov
pop
lea
rcll
testb
std
add
sub
ret
sbb
test
sub
dec
push
inc
xchg
xor
mov
pop
loop
fldl
jle
push
mov
push
adc
sahf
jg
lods
nop
ret
fsts
dec
dec
push
push
xchg
mov
sbb
iret
mov
xor
push
pusha
sbbl
cli
inc
cmpsb
fistpll
xchg
addb
shll
jo
dec
inc
decb
sub
lods
jecxz
mov
or
sub
jle
sub
xor
insb
lret
mov
negb
mov
out
adc
cmp
push
adcb
loop
lods
inc
outsb
rol
mov
call
jo
pop
inc
fisubs
jns
sub
mov
test
jp
mov
stos
outsl
std
push
jne
push
fisttps
mov
cmpsl
loope
jle,pn
adc
jae
and
in
push
andb
xchg
xor
mov
jnp
loop
pop
insb
cmp
or
int
ljmp
mov
adc
lock
jp
test
rorb
cld
sbb
inc
sub
lcall
lea
sti
mov
ja
jg
cmp
and
test
mov
pop
push
jp
inc
dec
ficompl
cmpxchg
xor
sub
in
inc
outsb
fstpt
repnz
pusha
rcrl
sbb
dec
jbe
insl
subb
or
adc
push
mov
fmull
cli
movsb
in
mov
xchg
mov
das
jo
jp
lret
jg
jecxz
push
sub
inc
lcall
dec
imul
jbe
sub
ja
fdivrl
icebp
dec
rorl
mov
pushl
out
jmp
mov
or
rolb
inc
mov
cld
push
in
std
aad
and
insl
and
movsb
sbb
adcl
xlat
mov
outsb
scas
xchg
int
lock
mov
sub
daa
rolb
push
xchg
mov
xor
mov
loope
mov
cli
and
out
jns
ret
call
cld
lahf
and
mov
mov
ja
call
cwtl
push
jmp
cli
out
cwtl
sub
dec
lods
ret
cmpl
test
nop
lods
addr16
or
repnz
jmp
daa
addr16
mov
jecxz
rorl
mov
add
lds
ljmp
pop
sbb
sbb
cmp
je
xor
inc
iret
xor
cmpsl
mov
fidivs
xor
sbb
mov
sub
ret
insb
int3
cmp
insb
in
bound
sbb
sub
addb
and
aaa
cmpsl
jg
lcall
jp
mov
mov
test
cwtl
dec
call
sub
add
lahf
mov
cmp
in
icebp
mov
adc
loopne
dec
call
mov
jns
sbb
pop
out
mov
adc
sbb
sbb
rcrl
mov
filds
lods
or
jb
cmc
cmp
out
xchg
sub
push
mov
rclb
or
int
outsl
repnz
dec
inc
jae
fidivrs
aas
sbbl
icebp
sub
lret
es
mov
in
jp
and
adcb
cli
ret
gs
and
arpl
dec
test
mov
jge
sarb
mov
jae
and
add
aad
xchg
sub
mov
xor
fs
repnz
or
sub
lds
mov
add
adc
mov
adc
in
loope
sbb
xchg
mov
aaa
insb
enter
sbb
bound
mov
divb
push
aaa
cmpw
pop
lods
fsubrp
movsl
rcrb
pop
test
sub
pop
cmpsl
jae
sbb
jp
fisubl
ss
push
xchg
aas
pop
mov
sbb
fs
push
mov
scas
movsb
xchg
mov
lods
pop
cmpsb
loop
xor
xchg
stos
and
mov
in
in
arpl
or
mov
ja
jge
in
inc
jbe
cltd
in
lahf
pop
push
jne
mov
lret
push
fisubs
xchg
xchg
jb,pn
inc
push
xchg
sbb
call
test
es
iret
mov
ficoml
add
jp
or
int
testb
mov
jbe
hlt
sub
sbbl
in
jl
push
sbb
std
sbb
icebp
push
mov
aas
fildl
jecxz
jb
call
cmp
sub
lds
stc
push
mul
mov
mov
sbb
inc
fdivrs
sbb
push
lret
repz
stos
xor
mov
sbb
and
sbb
cmp
xchg
mov
fs
pop
scas
xlat
xchg
dec
or
add
iret
inc
xor
ja
mov
mov
iret
lock
int
xchg
and
sarb
push
and
fsubrl
xchg
stc
data16
sub
adc
xchg
cmp
sub
imul
mov
mov
sar
sahf
nop
cmpl
add
ds
dec
bound
cmp
js
test
cli
or
push
mov
xor
insb
shl
adc
js
mov
sbb
scas
sub
ret
cld
dec
xor
frstor
popaw
scas
pop
jl
sbb
fstp
popa
and
and
inc
mov
pop
xchg
push
neg
daa
stos
dec
in
add
andl
mov
idivl
inc
aad
push
fdivs
push
mov
mov
shr
rolb
test
je
push
faddp
mov
enter
and
pop
mov
shrb
mov
xchg
push
cmpsl
cmp
cltd
sub
cmc
pop
xchg
pop
jle
inc
dec
mov
mov
and
adc
fwait
pop
cmp
xor
xlat
and
lcall
xchg
add
pop
cmc
in
jb
sbb
dec
sti
idiv
and
xor
scas
xor
pop
sbb
and
inc
lea
loope
sub
cli
or
fs
pop
cmp
sub
mov
fldenv
lahf
xor
sbb
inc
and
aas
repz
lss
adc
ja
add
scas
sbb
pop
xorl
popf
nop
out
mov
mov
mov
sbb
mov
outsl
data16
loope
stos
lret
push
imul
lahf
jne
jno
xor
inc
rol
cli
inc
mov
sbb
xchg
mov
rol
cld
in
test
jl
test
mov
mov
push
cli
int
inc
fldenv
mov
or
cmp
out
xor
xchg
sbb
js
xor
icebp
nop
imul
lahf
jnp
sub
out
mov
jmp
lods
adc
arpl
push
jl
cmp
insl
add
lods
push
push
push
fistps
inc
outsb
insb
dec
cmpsl
sbb
jle
and
push
xchg
xlat
dec
jl
mov
xorl
fadds
loop
sti
aas
shll
je
dec
cmp
ret
sbb
or
roll
repz
into
icebp
xor
jecxz
aas
adc
mov
leave
aam
outsl
ljmp
adc
push
and
in
test
or
fwait
pop
shr
jo
in
cmp
mov
icebp
mov
or
loop
out
mov
cmc
xlat
lods
dec
ret
jnp
mov
mov
orl
in
or
mov
mov
ret
sbb
lods
and
aad
add
inc
nop
dec
stos
repnz
cmpsl
and
jmp
repz
mov
test
aaa
aam
das
movsl
dec
addb
ffreep
cmpsb
inc
test
pop
faddl
notb
test
push
ja
in
call
sbb
rcr
jae
movsl
pop
movsb
jg
push
aaa
jl
enter
ret
add
push
lahf
push
mov
add
outsb
push
pushf
sbbb
scas
and
das
xchg
test
rorb
cmp
pushl
inc
in
dec
cmp
lods
mov
test
ss
xchg
out
inc
fdivrp
add
mov
inc
ret
pop
mov
add
push
loop
jae
jl
push
xor
popf
add
in
sti
stos
push
sbb
adc
mov
lock
and
in
jns
rorl
or
stos
mov
mov
pop
jmp
cld
sub
push
es
sub
inc
and
jae
outsb
adc
out
jg
lods
push
daa
lods
movsb
mov
aam
imul
hlt
inc
xor
adc
jno
xor
lcall
into
pusha
cmpsl
jne
push
into
push
cmp
xchg
push
aam
jo
cltd
ds
mov
and
stos
ret
sbb
and
mov
mov
adc
scas
mov
sahf
and
mulb
or
je
xchg
jbe
mov
roll
sub
sahf
cmpsb
push
mov
adc
push
xor
push
and
pop
shll
clc
xchg
adc
imul
test
add
loopne
inc
sub
sbb
in
sbb
lcall
and
js
dec
sbb
in
add
push
dec
mov
cld
or
and
xchg
fisttps
cwtl
aaa
xor
fmul
sub
cmp
lea
rcll
mov
arpl
in
stos
stos
adc
push
faddl
jle
clc
addr16
inc
dec
pop
sbb
or
or
cmp
lcall
jo
mov
xor
cmp
mov
xchg
movsb
or
add
pusha
push
out
xlat
jo
jle
or
push
xor
imul
mov
cltd
sub
es
sbb
cmc
xchg
mov
xor
xor
jmp
mov
jge
push
rcrl
cld
into
ret
mov
ljmp
out
stos
add
jne
sub
jnp
fildl
aad
cld
cmp
jmp
ret
mov
rcr
mov
inc
and
insl
sub
nop
inc
or
push
sti
jmp
mov
fs
sbb
lea
xor
push
test
aas
stos
dec
mov
sbb
sub
and
fcomps
lods
push
sbb
out
sbb
in
xor
add
mov
lcall
xor
insb
je
xchg
insb
outsl
push
inc
cmp
sti
std
jge
cmpl
fcmovnb
movsl
pusha
dec
out
jnp
fistps
cltd
mov
loop
pop
adc
std
int
mov
ret
insb
push
or
test
inc
sub
and
xchg
push
std
pop
sub
push
adc
xchg
xchg
adc
out
pop
pop
adc
sub
mov
fistpl
fldlg2
jge
and
mov
mov
mov
outsb
lret
lcall
aaa
fnstenv
insb
and
jge
shr
mov
and
rorl
lods
xchg
sbb
xor
mov
jle
add
out
cltd
jecxz
test
pop
fcmove
jmp
dec
sub
mov
jmp
aam
xchg
and
adc
stc
fwait
rcrl
mov
insb
add
and
or
incl
add
add
fistps
adc
pop
loop
aas
inc
mulb
xor
cmc
mov
dec
cld
cltd
int
adc
sbb
xor
mov
pushf
cmpsl
add
jbe
or
and
and
pop
mov
mov
pop
mov
iret
lods
jns
sti
mov
test
fdivl
sbb
mov
ljmp
inc
mov
xchg
jbe
pop
cmp
xorl
and
movsb
mov
add
scas
in
adc
sub
pop
xchg
dec
gs
lds
mov
fisttps
mov
outsb
scas
xchg
cmp
imul
dec
aas
nop
pop
out
stc
jb
add
add
les
mov
cmp
mov
cmpsb
xchg
jne
cmp
ljmp
jnp
scas
dec
cmp
dec
cwtl
lock
clc
dec
jbe
pusha
pop
xlat
add
test
insl
es
xor
shll
in
jbe
pushf
mov
addr16
mov
jbe
cmpsb
adc
pop
push
jb
imul
leave
popa
or
stos
and
xchg
movsl
loopne
sbb
xchg
inc
add
inc
add
ror
fdivs
push
pop
adc
shll
popf
jb
xor
mov
roll
push
inc
test
stos
loopne
mov
xchg
sub
mov
add
mov
ljmp
jmp
imul
sub
shrl
scas
cmp
clc
xchg
lods
sti
orb
into
mov
stos
ret
pop
test
xchg
mov
loope
mov
push
int3
cmp
sbb
dec
in
jae
pop
xchg
fnstenv
fwait
scas
xor
mov
xchg
xchg
xchg
fcmovb
sub
dec
gs
dec
inc
repz
cmp
addr16
hlt
das
xchg
je
lds
int
push
push
sbb
or
aam
mov
and
fimull
in
add
dec
shll
lea
int3
dec
icebp
xor
sub
std
jno
adc
outsb
xor
ret
push
xor
icebp
jg
insb
pushf
jle
mov
adc
and
xor
fisttpll
dec
jns
push
xor
repz
adc
pushf
jl
push
jl
ja
sub
push
sub
je
xor
mov
mov
pop
xorb
inc
enter
int3
sub
cmpl
fdivl
sub
pusha
repz
or
ljmp
lcall
addl
jae
dec
mov
or
mov
pop
dec
dec
inc
push
daa
xchg
ljmp
in
imul
adc
dec
dec
push
into
mov
filds
sbb
lcall
pop
repnz
push
push
stos
test
int
in
inc
lret
je
sahf
cmp
adc
sti
mov
in
cmp
dec
insl
jg
pushfw
arpl
sub
xchg
popa
daa
cmp
cmp
jecxz
int3
fildll
sbb
mov
ss
ficoml
push
ja
sar
in
push
aad
inc
das
jns
into
sub
pop
mov
or
or
mov
mov
or
pop
fstl
lods
out
cmpsb
leave
std
outsl
ds
movsb
in
sti
add
cmp
cmpl
push
or
pop
or
pop
lods
jb
add
mov
cmp
mov
dec
in
jns
loopne
aaa
repz
cmp
inc
add
call
xor
xchg
pushl
lcall
jecxz
inc
mov
sbb
add
stc
cmpsb
push
or
cli
mov
call
int
add
and
test
sub
lcall
jp
xchg
jl
aam
inc
xchg
push
push
push
fwait
les
fbstp
push
ja
fcmovnu
add
fstpl
fmuls
outsl
cmpsl
shll
sbb
xor
inc
imul
jp
es
pop
leave
jo
roll
nop
and
mov
ss
shlb
addr16
imul
mov
mov
push
xchg
ja
gs
loop
int
mov
je
dec
dec
or
mov
daa
and
ss
fldl
lret
mov
int
insb
shll
fstpl
xchg
push
in
jo
gs
arpl
pop
in
sbb
push
sbb
mov
insb
xchg
push
in
outsl
hlt
mov
mov
mov
mov
push
mov
ds
idivb
sbb
loopne
ret
pop
outsb
nop
adc
pop
sbb
inc
adc
pop
cmp
mov
cmpb
inc
lea
std
mov
shrb
push
out
push
lret
mov
adc
aaa
fldcw
mov
mov
xlat
or
stos
aad
or
adc
mov
jmp
or
test
xchg
adc
scas
shrb
iret
mov
or
ljmp
jmp
pop
sbb
fadds
and
cmpsl
sbb
mov
mov
cmpsl
or
adc
insb
in
adc
popf
inc
jge
mov
lret
ljmp
mov
fnstsw
add
cltd
mov
aad
sub
ds
mov
pusha
jno
mov
cmovno
cwtl
push
pop
dec
jge
push
push
and
call
icebp
pop
je
push
popf
mov
push
cs
pop
jecxz
rorl
push
mov
mov
loopne
out
testb
mov
lret
scas
iret
pop
ljmp
lret
xchg
psubsb
es
loop
movsb
popl
pop
jp
xor
imul
daa
jnp
js
inc
dec
call
add
adc
dec
xor
lret
aam
jl
sahf
jge
mov
sahf
adc
scas
adc
mov
sahf
mov
mov
xchg
cli
pop
xchg
push
push
mov
dec
jecxz
push
stos
inc
xchg
sub
xor
sub
bound
arpl
jnp
sub
jg
xchg
inc
mov
mov
addb
pop
lea
or
push
stos
jle
adc
pop
add
push
outsl
mov
mov
int
repnz
aad
jg
sti
mov
and
pop
das
push
add
into
adc
js
mov
adc
lods
lea
cmp
shlb
cs
pop
xchg
mov
jg
sub
pop
dec
ja
sti
dec
inc
popa
ljmp
repz
jne
xchg
lods
jb
dec
push
orb
fiaddl
hlt
mov
inc
pop
push
jnp
lcall
lock
pushf
fstpt
enter
in
xlat
out
fadds
mov
outsl
mov
mov
jbe
ds
cmpsb
stos
adc
mov
fwait
cltd
pusha
and
xchg
outsl
or
std
mov
adc
mov
cmpb
add
adc
mov
xchg
cmpsb
test
sbb
js
jl
dec
jp
xor
push
mov
loope
popf
fsts
mov
mov
mov
in
jae
adc
pop
mov
mov
pusha
or
cmp
pop
fwait
adc
xlat
xchg
dec
daa
lea
movsb
or
enter
rclb
sbb
jae
or
sub
dec
inc
sahf
out
stc
mov
pushf
jle
push
jle
and
mov
shll
fwait
leave
push
stos
xchg
repz
jp
mov
cmp
jns
bnd
jmp
jo
pop
cmpl
sub
jae
jae
daa
lret
arpl
ret
lock
and
mov
testl
mov
mov
mov
test
ds
inc
adc
icebp
scas
cmc
mov
inc
sbb
js
mov
stc
cli
jb
filds
in
push
cmpsb
cmp
movsb
movlhps
jne
icebp
push
mov
pop
data16
into
inc
repnz
out
enter
nop
dec
dec
js
push
in
pop
sbb
loope
sub
or
imull
cwtl
insb
lods
lahf
sub
sbb
lret
ret
mov
cld
sub
popa
and
cmp
xorb
inc
pop
dec
nop
push
loop
inc
rcl
cmc
je
add
sub
nop
xlat
mov
add
inc
ret
cmc
dec
dec
jae
jae
loop
data16
xchg
jb
outsl
xchg
out
insb
int3
cmpsl
add
nop
fs
mov
fsts
lcall
js
jne
adc
pop
cli
or
outsl
cmp
mov
fisttpll
fwait
and
push
xor
adc
xchg
sub
ss
fwait
outsl
shr
pop
lcall
or
pop
in
inc
je
jecxz
add
push
or
les
jmp
fstpl
mov
or
scas
xor
hlt
test
das
hlt
cmpsl
cmp
invd
inc
ret
or
lahf
icebp
jecxz
test
sarb
stc
imul
arpl
cltd
dec
cltd
xchg
dec
cmpsb
movsl
or
imulb
mov
sub
mov
test
xor
mov
mov
adc
fdivrl
lods
mov
bound
test
mov
repz
imul
int3
mov
inc
cli
aaa
inc
mov
add
fdivr
fdiv
mov
cmp
std
or
into
fs
cmp
sbb
or
mov
inc
mov
test
sub
add
in
in
aad
out
mov
aaa
mov
pop
gs
mov
xchg
aam
mov
lahf
pop
roll
mov
add
fisttpll
cmp
push
int
sub
xor
repnz
rolb
pop
arpl
mov
aaa
and
xchg
out
dec
sbb
out
nop
xor
pop
enter
aas
pop
or
test
jecxz
cwtl
pop
dec
and
cmp
jbe
ret
add
cs
xchg
int
pop
mov
addl
les
jmp
mov
fistpll
mov
testb
or
dec
ljmp
aas
and
test
push
stos
xor
xchg
jbe
adc
popa
sub
leave
jge
pusha
ss
pusha
sbb
ret
cwtl
and
mov
cmp
push
mov
enter
rcll
ss
xchg
popa
xchg
setbe
fcompl
pop
cmpsb
test
lods
stc
mov
push
adc
dec
test
mov
cmpsl
xor
shrl
xchg
push
sbb
std
or
jo
loopne
mov
sbb
movsb
jg
cmpsb
cltd
push
sbb
or
js
fcoms
and
mov
gs
mov
sbb
dec
inc
xchg
mov
mov
movsl
lds
jb
test
mov
adc
shlb
popf
in
lret
incl
cld
and
push
addl
fstpt
push
sub
pop
inc
inc
mov
cmp
sub
sbb
sub
insb
mov
xchg
mov
sbb
sarb
adc
inc
jno
and
xchg
and
aaa
mov
testl
iret
xlat
cmp
lahf
mov
and
cmp
xchg
adc
pshufw
push
mov
insl
hlt
dec
and
xchg
cmpsb
rclb
outsb
mov
sarb
cmp
add
sti
xchg
jo
mov
inc
adc
frstor
outsb
cmp
imul
adc
enter
add
push
js
dec
scas
inc
in
or
cmp
mov
add
push
les
jp
sbb
cmp
jl
mov
std
repz
pop
pop
xor
dec
imul
test
lret
insl
adc
and
sub
adc
subb
jnp
pop
fcmovnb
inc
xchg
movsl
xor
cmp
mov
mov
adc
out
jg
into
popa
sbb
adc
jns
shl
jns
push
pop
mov
in
xor
dec
inc
sub
hlt
push
popa
sbb
jo
call
sbb
mov
jne
adcl
aam
std
xor
iret
stos
dec
sub
out
dec
jle
lds
fisubrs
xchg
mov
mov
enter
cs
fsub
xchg
loopne
pop
lods
pop
ljmp
inc
mov
sbb
fidivs
int
xchg
xchg
mov
popf
xchg
gs
dec
mov
and
movl
xchg
xor
inc
insb
mov
scas
xchg
sub
out
pop
daa
insb
andl
repz
test
repz
adc
lods
dec
fcomip
xlat
imul
mov
fisttpl
or
lods
fxch
or
call
aad
jbe
jae
fisttpl
lcall
mov
pushf
mov
and
jno
mov
fxam
dec
and
and
test
or
xorl
pusha
adc
and
mov
rorl
xor
fnsave
cmp
mov
dec
push
xor
sub
notb
mov
mov
mov
std
sub
cwtl
pusha
inc
imulb
mov
xchg
adcl
adc
cmpsl
mov
add
call
rolb
xor
jecxz
or
insb
add
in
inc
iret
jne
add
mov
xchg
push
jo
imul
mov
in
pop
jnp
cmpsb
mov
loopne
adc
mov
jg
mov
or
les
lret
sub
rcl
jne
mov
mov
and
pop
flds
in
fs
jl
jge
lea
loop
gs
dec
jo
push
frstor
pop
int3
xchg
lods
call
sub
mov
cmc
push
pop
lds
sub
fs
jle
js
xchg
cmp
fmulp
sbb
sub
inc
cli
jbe
pop
gs
fsubp
mov
and
push
sbb
xchg
outsb
mov
stos
repnz
sbb
and
jne
adc
cmp
cmp
and
les
jle
xchg
mov
jg
add
sbb
fcoml
fsub
fs
adc
xchg
movsb
movsb
es
scas
pop
adc
mov
cmpsb
lods
xor
xor
jecxz
mov
inc
stos
in
adc
xor
push
mov
mov
sub
cmp
and
enter
fbstp
mov
lahf
loopne
cs
sahf
imul
jmp
ss
shrb
adc
leave
jmp
ficompl
aad
adc
test
or
outsb
testb
adc
inc
pop
mov
fcoms
bound
pop
xor
mov
addb
call
fsubrl
pop
fistpl
push
cmp
add
mov
je
sbb
pop
fcmovnu
pop
je
jne
js
sbb
jge
xchg
and
int3
push
push
jae
into
xor
cltd
das
pop
push
and
mov
adc
mov
jg
int
push
fs
pusha
and
jo
into
mov
and
xor
shrl
lds
loope
dec
int
jo,pt
in
or
sub
pop
loop
cmc
add
mov
mov
gs
mov
imul
sub
xlat
push
lods
jg
jns
mov
ret
cli
inc
rcl
clc
xchg
or
imul
jne
push
rcll
pop
pop
adc
call
push
mov
sub
or
dec
out
jns,pt
out
inc
add
inc
cmpsl
fisttpl
push
pop
aam
sahf
lods
cmp
push
cmpl
imull
mov
push
pushf
xchg
mov
data16
dec
data16
dec
lret
ret
lods
fstl
cltd
adc
loopne
dec
add
mov
push
sub
xchg
je
dec
fisttpl
and
repz
icebp
pop
pop
ja
repnz
addr16
sub
fxch
pop
mov
mov
cwtl
push
sub
mov
mov
cmpsb
push
scas
mov
xor
out
dec
test
push
adc
les
xor
xchg
into
mov
fdiv
cmpsb
push
or
or
clc
sbb
push
dec
push
push
inc
or
addb
jbe
shrb
test
out
mov
xchg
inc
push
xor
sti
mov
pop
mov
outsl
rcrb
pushf
in
out
push
push
sbb
adc
scas
mov
jl
push
pop
and
int
dec
or
fs
in
dec
push
lret
mov
or
inc
jbe
or
int3
loope
daa
adc
pop
test
mov
ljmp
add
jae
cmp
push
pop
leave
xchg
rcr
scas
out
cltd
lea
sub
xchg
int
scas
jp
add
and
test
cwtl
stos
cmpsb
inc
and
add
divl
inc
in
pop
in
ds
and
jmp
stc
jnp
dec
jge
add
dec
ss
in
cmp
jbe
push
push
dec
inc
pop
pop
inc
jle
mov
cltd
cmc
xacquire
push
xchg
or
lea
fdivrs
inc
cmp
ljmp
int
pop
jg
orb
push
lret
in
jo
sbb
int3
movsb
popf
jle
inc
or
vmread
cmp
pusha
or
aad
into
pop
mov
pop
xchg
icebp
push
hlt
shrl
dec
in
sbb
mov
jno
in
ss
push
pop
rcrb
xchg
stos
cmp
scas
fadd
xchg
mov
sub
sbb
push
test
xchg
push
pop
bnd
cmpsb
nop
in
jp
add
push
cmc
mov
ljmp
test
fsubs
inc
imul
xor
bound
stc
and
jg
insb
out
cltd
sbb
sbb
xchg
icebp
push
insb
aad
fiadds
jb
cmp
cwtl
lds
dec
sbb
pop
out
fnsave
leave
pop
cmc
gs
mov
ss
call
jns
aam
sti
add
mov
fbld
cld
inc
addl
cmp
jnp
leave
xchg
sbb
cmc
sub
hlt
cltd
popf
data16
fnstsw
add
mov
mov
pop
cbtw
xor
call
mov
js
arpl
xchg
imul
or
sub
popf
xchg
pop
lahf
fidivl
fldenv
push
ss
adc
add
lret
and
scas
inc
inc
cmp
or
sbb
pushf
fsubl
xchg
push
sub
cltd
xor
or
sarl
mov
pop
adc
xchg
ds
dec
push
dec
aam
enter
js
outsb
int3
xchg
jne
push
arpl
inc
push
sarb
enter
dec
mov
dec
and
mov
int3
push
outsb
fdivrs
mov
dec
inc
pop
pop
mov
js
adc
lds
pop
sar
cmpsl
stos
mov
popf
dec
jmp
push
dec
adc
inc
cmp
add
fistpl
sbb
iret
mov
imul
xorl
fisubl
mov
fdivl
add
fwait
es
adc
cld
in
adc
rclb
lahf
jge
fcoms
fcoms
rclb
cs
loopne
int
mov
int3
mov
out
nop
mov
xor
popf
pop
mov
into
jnp
mov
sbb
js
mov
cmp
jne
or
mov
push
mov
aad
sahf
mov
mov
cmp
sub
sbb
pop
add
pop
dec
outsb
and
xor
xchg
pop
xor
jmp
add
xchg
xlat
in
pushf
decb
aam
add
xlat
add
add
sub
and
mov
or
outsl
and
mov
fidivs
add
lods
insb
data16
mov
scas
ret
out
cmp
popa
sub
cmp
push
dec
xchg
pop
shrb
and
adc
mov
lret
adc
das
outsb
pop
mov
fwait
loope
loopne
push
gs
xchg
lahf
fs
lret
push
adc
outsl
add
push
inc
call
je
mov
mov
lock
mov
mov
add
jp
push
sub
push
adc
je
mov
icebp
or
nop
jno
push
xor
xchg
insl
clc
sbbl
adc
orl
pop
mov
out
dec
jl
test
add
add
xchg
bound
aaa
out
push
or
repz
in
test
ret
ret
and
cmc
mov
dec
inc
adc
jmp
adc
push
bound
int
pop
rcrb
test
nop
mov
int
xor
push
inc
add
push
notl
xchg
jecxz
subl
data16
jmp
push
push
sub
pop
or
loopne
and
jae
push
pop
inc
popa
repz
fadds
popa
fcomps
ret
aad
std
xchg
mov
jae
jae
repnz
call
outsl
push
es
loope
fmuls
scas
popa
and
cmp
int
add
dec
notl
jnp
mov
mov
neg
stos
fs
vlddqu
iret
shlb
adc
adc
pusha
or
or
mov
out
test
sahf
push
xchg
fsubp
jb
sbb
rorb
fidivrs
adc
dec
mov
jp
inc
cmp
mov
sbbb
pop
pusha
divl
push
lahf
mov
xchg
adc
ljmp
repz
ror
xchg
inc
cmp
lahf
rorb
in
es
cld
stos
jno
pop
push
xchg
inc
sub
dec
jp
stos
fidivs
sub
sbb
mov
xor
jns
fldl
addl
fidivs
cmc
adc
movsl
outsb
or
jnp
data16
xchg
das
lret
shll
xchg
arpl
mov
ret
repz
or
imul
stos
push
xchg
push
jl
sub
xchg
cld
add
xchg
push
pop
add
lret
mov
and
sub
dec
fadd
fs
jmp
xchg
rorb
add
insb
pop
xchg
in
inc
fwait
fwait
lret
xor
mov
xchg
repz
push
ljmp
xchg
aaa
pop
insb
sbb
es
dec
enter
push
jae
call
repnz
dec
push
std
clc
push
sbb
jo
dec
add
push
lahf
ja
and
ja
mov
cmc
pop
and
mov
jg
mov
xor
fnsave
lcall
add
lcall
pop
arpl
mov
push
std
cmp
add
stos
int3
popa
pop
aam
ja
and
pop
or
enter
and
outsb
popf
lret
sub
xchg
loop
mov
sar
add
dec
pop
stos
imul
test
mov
test
adc
and
pop
xlat
pop
lods
loop
mov
imul
push
ffreep
or
pop
jnp
loopne
inc
inc
or
or
and
test
dec
push
add
fisubrl
jp
sub
insb
mull
push
fmuls
dec
mov
push
adc
sbb
es
jne
insb
cmp
lods
sti
and
fs
addl
mov
jbe
orl
in
pcmpgtb
mov
mov
xor
mov
mov
jle
push
enter
pop
cli
push
call
leave
loope
cli
call
xchg
fwait
xchg
xchg
adc
pop
mov
sub
dec
sbb
ret
int3
inc
call
fsubl
aam
pop
sti
les
mul
adc
out
daa
in
test
jnp
push
aaa
mov
mov
cs
stc
xlat
int
stos
or
bound
cli
loopne
inc
add
sbb
daa
cmp
cmp
inc
sub
das
out
insb
pop
in
movsl
dec
cmp
das
mov
cmp
and
movsl
sbb
add
cmpsb
les
xchg
jmp
xchg
es
fiaddl
mov
gs
adc
pop
lods
jo
add
jo
ds
and
rclb
test
rorl
orb
cltd
mov
loopne
pop
sub
psubusw
aas
mov
loope
lods
mov
add
xchg
adc
stos
mov
push
loop
loope
or
dec
inc
movsl
pop
mov
lock
mov
cwtl
xor
sub
in
sub
dec
repz
or
sbb
std
jg
sbb
mov
repz
mov
mov
inc
sbb
cwtl
fbstp
bound
or
leave
fsubs
push
outsl
movsb
lods
fisubs
sbb
test
pop
aad
jp
addr16
jno
ja
mov
dec
mov
xor
inc
pop
xor
pop
test
mov
arpl
cltd
jecxz
repz
sbb
adc
jmp
sahf
and
xorb
mov
xchg
sub
je
daa
mov
je
ljmp
pushf
daa
xor
pop
push
cmp
inc
outsl
loop
mov
adc
inc
ss
out
adc
out
lds
insb
loop
xchg
sbb
adc
fildl
cmc
pop
cltd
mov
jmp
pop
xchg
pop
ret
jl
mov
mov
out
xor
sbb
dec
outsb
or
ret
mov
arpl
out
or
cmp
or
leave
or
sub
xlat
or
inc
scas
inc
scas
insb
xchg
int3
out
xchg
movsl
sbb
mov
js
fimuls
test
cmpsl
dec
shll
rolb
scas
xor
add
pop
push
push
xchg
sahf
cmp
out
movsb
adc
mov
mov
jns
out
xchg
in
pusha
test
pop
pusha
push
dec
sbb
push
adc
xchg
aas
movb
xor
pop
add
mov
fdivrp
cli
pop
loope
mov
addr16
add
mov
push
xchg
out
clc
roll
in
xor
mov
xchg
or
jmp
cmpsb
mov
sbb
es
fsubr
outsb
cmp
pop
jns
cmp
test
inc
testb
adc
lcall
push
out
xchg
mov
test
mov
pop
loop
inc
icebp
xchg
mov
xchg
mov
lds
ljmp
mov
xor
cmp
push
fistpl
sbb
mov
mov
push
xchg
clc
loope
loop
jo
jbe
sub
pop
push
pop
sarb
push
sbb
mov
mov
stos
lahf
xchg
sbb
adc
in
pop
insb
int
jle
fs
or
test
mov
repz
pushf
add
lods
mov
leave
cltd
lds
sbb
ss
bnd
cmpsl
stc
jge
pop
lahf
or
pop
ret
inc
add
mov
sbb
mov
sahf
mov
jp
push
aam
into
push
out
insb
push
divb
das
add
aad
je,pn
stos
sbb
fcomps
sahf
enter
push
lea
add
xchg
insb
adc
add
pop
cmp
scas
lock
fnstsw
add
movsl
movsb
mov
jbe
push
dec
mov
out
push
xchg
in
fisubrl
mov
push
fsubrl
push
std
dec
jge
in
fs
adc
push
test
xlat
int3
push
mov
mov
das
xchg
pop
dec
mov
das
stc
inc
sub
pusha
cs
je
push
and
mov
les
jmp
mov
sub
popa
lods
mov
jnp
inc
and
sbb
rorb
push
adc
stos
cmp
js
add
stc
out
sub
in
pop
and
ret
ret
sbbb
push
xchg
mov
sahf
sbbb
and
bound
cmp
repnz
cmc
push
stos
push
out
sahf
jl
or
rclb
fstl
dec
push
ljmp
add
dec
scas
pop
jae
xor
into
push
inc
stc
sbb
jmp
pop
test
pop
push
adc
mov
xchg
mov
or
sub
gs
testb
bound
adc
flds
enter
jno
push
mov
sbb
sar
jbe
inc
sahf
xchg
and
and
mov
or
push
add
and
mov
jo
ds
lds
mov
popa
test
ss
jno
pop
insb
and
lcall
pop
jnp
pop
or
sahf
out
mov
push
and
push
int
mov
lcall
jle
xchg
xchg
cmp
inc
pop
test
cli
insb
andb
adc
jnp
mov
jnp
mov
cld
ja
clc
out
mov
xchg
push
out
xchg
sub
push
sub
ljmp
mov
stos
loopne
arpl
cwtl
jle
push
dec
in
sbb
or
push
cli
inc
in
jae
xlat
std
imul
aad
dec
mov
push
add
xor
sub
movsb
cld
jmp
or
jb
gs
push
adc
or
out
jmp
adc
inc
popf
fldt
call
mov
mov
jb
add
movsb
fwait
inc
push
cmpsl
ja
mov
mov
ss
in
int
cmp
mov
xchg
imull
mov
aaa
sahf
dec
jmp
out
gs
cmpsb
gs
push
or
test
loope
jns
mov
clc
js
sub
jbe
or
dec
aam
mov
je
xchg
add
mov
popa
mov
mov
fmulp
cwtl
lea
cld
and
and
inc
cmp
repz
mov
lods
mov
sahf
int3
dec
imul
pop
xchg
sub
pop
loopne
mov
dec
mov
fcompl
shlb
std
xor
mov
mov
shl
shrl
lahf
shll
pop
add
xchg
out
fs
or
stos
loope
xor
insb
ljmp
mov
loope
pop
push
sbb
mov
movsb
pop
push
fwait
lcall
ljmp
cmpb
fldenv
pop
sub
xor
decl
jb
outsl
ja
pop
cmp
icebp
or
mov
test
xchg
mov
inc
jg
ss
pop
stos
xchg
push
aas
cld
ret
mov
cmc
vprotq
mov
cmp
sbb
clc
out
aaa
pushf
les
push
jnp
mov
lods
add
and
xor
mov
sub
pop
outsb
fnsave
cmp
push
cwtl
aad
movsb
or
mov
jnp
iret
dec
push
mov
inc
xchg
adc
jle
dec
jecxz
jb
jg
cs
push
ret
dec
mov
sbb
push
pause
mov
mov
sbb
movsl
mov
cltd
fdivl
ds
int3
or
mov
lea
sbb
stos
or
fsubl
sub
xchg
fcmovb
mov
dec
xor
push
mov
jae
xchg
mov
and
and
shr
loope
jle
pop
pusha
pop
cli
in
jmp
adc
jmp
or
outsl
sub
jp
shll
outsb
shlb
test
daa
outsl
add
fidivrs
mov
pop
jno
xor
scas
or
mov
rcl
aaa
adc
sbb
outsl
iret
xchg
popf
adc
rorb
ret
lock
inc
push
push
loope
lret
aas
addr16
mov
mov
je
inc
outsl
rcrl
fwait
push
add
bswap
js
pop
add
dec
push
outsb
ret
inc
mov
push
outsl
mov
inc
pop
cmpsb
in
test
enter
pop
jbe
push
dec
inc
sub
pop
mov
mov
xchg
lock
insl
lods
or
or
and
cmp
call
push
push
jge
pop
imul
insl
adc
sbb
push
adc
sti
sub
imul
sbb
sub
mov
leave
jg
push
push
ret
frstor
mov
mov
rcrb
xchg
bnd
stos
mov
pop
shl
mov
xchg
sbb
stos
pop
xchg
push
cmp
imul
and
insb
xchg
or
mov
jmp
sub
xor
pop
test
mov
xor
add
inc
lea
mov
pop
cmc
sbb
add
and
lahf
inc
fsubp
adc
cmp
lds
movsl
in
test
subb
jmp
hlt
int
mull
mov
dec
stos
mov
out
je
mov
mov
sbb
cmpsb
dec
imul
sti
out
adc
and
jp
push
dec
sub
test
mov
mov
jb
push
aad
mov
out
cmp
daa
outsb
cld
push
or
add
cmp
sbb
sub
ds
or
cltd
and
jo
sub
lret
ds
iret
enter
lea
push
inc
xchg
popf
sub
ds
sti
mov
or
jnp
cmp
hlt
lret
jg
hlt
dec
inc
iret
inc
cmp
loopne
xchg
sub
hlt
pop
movsb
adc
pop
lretw
or
cltd
movsb
mov
fldcw
lock
inc
por
loope
cmc
daa
int
cmp
jg
adc
cltd
imul
xchg
mov
mov
pop
cmpsl
js
out
ljmp
int
arpl
mov
or
push
sbb
and
fisttps
adc
inc
mov
xor
xchg
int
xor
stc
jb
xor
inc
sub
dec
clc
out
in
adc
inc
jg
jmp
filds
aam
test
pushl
cs
clc
adc
xchg
aas
movups
xor
sub
mov
pusha
and
push
aam
testl
xchg
xor
sbb
or
enter
mov
sub
jnp
mov
shrl
push
xchg
scas
xor
or
aas
negl
lret
and
int
sbb
cmpsl
loope
cld
imul
insb
sbb
pop
mov
mov
popa
push
xchg
int3
dec
add
push
inc
idiv
test
out
inc
leave
cmp
stos
push
pop
lods
and
lods
and
addr16
or
pop
daa
push
inc
scas
xchg
push
repnz
xchg
push
pusha
mov
adc
add
mov
add
leave
adc
out
pop
xor
int
push
fcomi
scas
push
in
sub
daa
fs
lds
jle
scas
mov
mov
shll
cmp
mov
std
adc
jmp
stc
and
dec
inc
sub
mov
test
mov
jb
out
and
rcrb
xor
cs
pop
xchg
shlb
jo
es
sub
jmp
push
fists
mov
int
fimuls
pop
in
jbe
in
mov
sbb
dec
xor
pop
popf
sbb
jle
stc
cmc
and
loope
test
out
dec
fistl
imul
jnp
inc
or
loope
lret
sbb
pop
subb
jecxz
imul
lcall
jbe
add
repnz
call
or
mov
xchg
loopne
mov
and
xlat
cmp
xor
mov
cmp
sbb
sub
add
push
cli
dec
shll
push
dec
das
dec
lock
mov
popf
mov
sar
icebp
pop
push
push
pop
fisttpl
lret
mov
ret
insb
flds
cmpsb
mov
cmp
inc
jg
inc
push
or
jno
pop
fs
cmp
addr16
lret
les
push
pop
pop
pushf
sub
pop
loopne
in
mov
xchg
out
jbe
sbb
xchg
mov
jp
mov
mov
pop
movsb
sub
and
sub
sub
jb
cmpsb
push
gs
jg
lret
jg
inc
sbb
and
mov
xor
jg
inc
mov
ljmp
mov
push
dec
mov
jl
mov
jge
sbb
fsubp
fidivrs
xchg
and
imul
xchg
or
sub
mov
fidivrs
int
fidivrl
idivl
cmpl
pop
mov
out
xor
cmp
xchg
inc
push
and
and
sub
push
das
add
gs
dec
push
xor
xchg
cli
popa
sub
or
ss
movsl
lods
loopne
push
push
xchg
sbb
push
add
cmp
xchg
ret
out
xlat
cld
sbb
mov
fs
rcrl
fcomps
and
hlt
sbb
mov
and
xchg
inc
cs
faddl
and
dec
out
shll
mov
ficoms
mov
addr16
inc
push
ffree
add
dec
dec
cli
insb
cwtl
stc
shl
sahf
or
lods
add
or
pusha
iret
sahf
out
out
xchg
jae
sti
loope
mov
adc
sti
jecxz
add
and
outsl
cmp
mov
mov
outsl
stos
dec
add
in
movsb
pop
outsl
sbb
push
insl
in
mov
call
movsb
aam
push
subl
mov
or
in
insb
movsl
sub
icebp
test
adc
sub
ds
sbb
sbb
add
in
jecxz
aas
sbb
adc
sub
fmull
ss
popf
and
repz
mov
or
push
mul
popa
es
inc
mov
push
movsl
push
callw
sub
mov
mov
lahf
mov
sti
sbb
pusha
pusha
ret
ljmp
inc
push
pushl
shrl
bnd
decb
sub
test
pop
paddusb
ret
pop
cmpsl
or
fidivl
imul
je
daa
or
movsl
sbb
ds
xlat
adc
scas
sub
ljmp
idiv
sbb
mov
loopne
mov
jns
mov
cmp
and
adc
or
jge
in
in
xor
pop
andb
pop
aaa
ljmp
insb
in
sbbb
fadds
mov
std
mov
jmp
add
sub
in
xchg
stc
jle
adc
jl
pusha
xor
pop
adc
jnp
dec
sub
fwait
add
and
lock
inc
test
loopne
ret
xor
xor
mov
arpl
std
es
imul
mov
jl
outsb
pop
push
push
test
jo
push
outsl
cld
js
pusha
sti
push
push
pop
inc
cmp
scas
mov
jb
arpl
not
repnz
xchg
pop
loope
ds
add
xchg
cld
test
bound
int
push
add
stc
pop
pop
imul
dec
sbb
mov
sub
xlat
dec
inc
je
mov
and
jo
sub
sbb
and
cltd
pop
xchg
loop
ds
lahf
xchg
test
jl
push
jbe
xor
cld
adc
inc
cmpsb
dec
stos
cmpsl
inc
and
out
aam
jl
cmp
sbb
je
andb
aaa
imul
data16
adc
adc
out
icebp
enter
addb
sti
jno
mov
mov
sub
nop
call
frstpm(287
fdiv
mov
or
inc
and
xchg
popl
xchg
xchg
or
pop
pop
jg
dec
aam
xchg
repz
mov
scas
inc
xchg
pop
stc
imul
add
lods
jbe
test
dec
dec
int
xchg
js
jg
and
pop
hlt
and
stc
std
loopne
cmpsb
adc
adc
clc
lea
and
sbb
lods
mov
stos
cmp
sub
inc
jg
mov
daa
pop
fwait
sub
inc
sbb
clc
loope
movsb
sub
mov
sbb
jae
xor
andb
repnz
vrsqrtps
pop
jmp
repz
xlat
mov
push
call
out
xchg
out
pop
fists
in
jno
shr
popf
xor
shll
mov
mov
adc
jmp
and
or
jle
lods
mov
int3
mov
out
push
push
cli
sar
and
mov
xlat
in
shrl
call
or
fidivl
fcoml
push
mov
cltd
pop
add
sbb
xlat
xor
outsl
imul
cmpsb
inc
cmpsl
push
and
sbb
mov
or
fisubl
cmpsb
pop
das
and
push
inc
mov
ds
push
push
jmp
adc
shll
imulb
mov
inc
sbb
dec
sahf
in
out
pop
mov
or
std
adc
out
je
push
jb
mov
inc
repnz
sub
stos
dec
cmp
icebp
mov
js
add
push
inc
or
lock
in
arpl
les
sub
pop
mov
nop
nop
stc
mov
or
out
rcrl
dec
adc
int
in
inc
mov
mov
sbb
orb
cmp
sahf
mov
xchg
pop
adc
xchg
iret
pop
fdivr
push
cli
stc
xchg
push
sub
mov
mov
std
call
sub
fisttpl
or
jbe
loopne
pop
jns
iret
ss
aas
xchg
jg
icebp
out
nop
cmpsb
sbb
mov
aad
imul
pushf
cmpsl
shl
adc
js
popa
or
hlt
sbb
cwtl
ret
cmpsl
push
rol
leave
sbb
jle
sub
mov
add
cmp
and
aas
pop
jb
cmpl
rcrb
or
mov
mov
in
sarb
ret
aaa
insl
xchg
sbb
ror
sub
and
mov
test
out
fstpl
pop
jb
rolb
arpl
icebp
pop
cmp
notl
lea
out
pop
ss
ficoml
mov
movsb
pop
jns
jge
sbb
mov
sbb
pop
cmp
in
stos
sub
fwait
push
push
pop
inc
pop
nop
adc
sbb
lret
je
add
cmc
push
push
in
ss
mov
or
mov
in
jg
call
jno
adc
ds
pop
data16
cli
jle
stc
pop
addr16
mov
sbb
inc
aaa
inc
sub
add
dec
pop
iret
adc
sbb
xchg
and
adc
push
mov
and
movsb
push
xchg
jmp
mov
mov
fs
xchg
xchg
sub
lret
popa
jns
pop
mov
arpl
fucomip
loop
out
sub
add
scas
shrb
mov
push
or
or
adc
in
push
nop
xchg
jp
loopne
insb
cmpsl
jge
hlt
rorl
ljmp
sub
sub
pop
cld
scas
movl
and
sbb
inc
sbb
aaa
push
jp
or
dec
sbb
cld
je
ret
pop
je
push
cmpsb
sbbb
mov
ds
fildll
lods
aas
sbb
orl
xor
jg
mov
cli
cmp
out
xchg
cmc
sbb
mov
pop
xlat
pop
lock
jo
ficoms
or
fbld
mov
int
push
mov
jg
dec
movl
xchg
je
rolb
pop
sbb
cmp
out
sub
iret
jnp
xchg
pop
xor
addr16
or
shll
or
sbb
stos
xor
or
add
mov
push
inc
arpl
and
lcall
icebp
sub
aam
jmp
cs
jge
inc
loopne
cld
bound
xchg
mov
pop
leave
or
gs
movsl
mov
sub
pop
pop
subb
cwtl
iret
out
push
ss
push
xchg
xor
push
cmpsb
pop
cmp
arpl
test
lret
and
mov
pop
out
test
pop
dec
in
adc
sahf
icebp
addl
ss
xchg
dec
sbb
lcall
xchg
xchg
scas
dec
lret
bound
pusha
pop
pop
insl
push
sbb
cs
daa
xchg
xor
mov
mov
lock
xor
call
or
cmpsl
dec
mov
push
rep
lods
xor
rorl
pop
scas
push
cs
and
fdivrl
insb
push
in
cmp
or
cs
pop
adc
daa
cmp
mov
nop
ljmp
inc
xor
push
add
fadd
fdivrp
lahf
mov
jmp
mov
sub
xor
add
insb
pop
xchg
aas
imul
jge
outsl
adc
mov
adcl
sarb
xchg
add
lret
mov
sub
int
pop
int3
je
int
jne
push
aas
or
out
xchg
ja
stc
dec
jb
dec
out
sarb
pop
lock
jb
pop
icebp
rclb
xor
sbb
xchg
dec
rcrb
adc
iret
lock
sub
in
and
adc
aam
movsl
imul
ljmp
xlat
pop
mov
pop
sub
test
sahf
test
and
outsl
lea
jae
out
add
addr16
mov
in
jp
out
nop
cmp
mov
test
mov
add
sub
xchg
lahf
push
add
cmp
and
movsb
sarb
xor
daa
sbb
or
jecxz
add
adc
inc
inc
dec
stos
ficompl
or
cmp
inc
out
addb
and
test
leave
sub
imulb
push
jnp
or
sub
sub
push
dec
pop
mov
aaa
and
dec
and
lods
xchg
mov
add
jne
and
push
ljmp
in
pop
pop
les
xor
loopne
fimuls
push
jge
jno
push
cwtl
xchg
pop
jmp
cwtl
inc
sbb
mov
mov
push
in
inc
mov
scas
or
repnz
inc
jnp
mov
push
inc
push
push
scas
subb
fadd
test
subb
lret
mov
dec
rolb
inc
cmp
pop
gs
mov
iret
push
neg
stos
sti
sbb
adc
in
int
and
and
decl
lods
xor
mov
push
mov
mov
popf
imul
mov
inc
pop
mov
loop
or
dec
out
div
cwtl
fisubrs
push
stos
push
push
iret
imul
pushf
ljmp
dec
inc
jne
push
xor
cmp
or
inc
subb
test
fstps
cmpb
hlt
fistl
xlat
dec
mov
stos
subl
add
mov
pushf
mov
fadds
push
ss
mov
lcall
insb
sbb
inc
dec
mov
sub
iret
mov
adc
es
and
imul
mov
or
and
sti
roll
adc
test
pop
movsb
rcrb
ret
popf
add
add
pop
adc
fcmovnu
mov
pop
adc
push
in
jl
sub
orl
add
fwait
xchg
test
xor
pushf
mov
jmp
cmc
xchg
sahf
cmp
clc
inc
fwait
jecxz
mov
movsb
xor
lret
xchg
scas
je
out
pop
les
add
lock
inc
mov
xor
mov
lahf
aam
adcb
cmp
lock
jmp
mov
pop
mov
jg
adcb
int
xchg
xchg
push
mov
stos
addr16
je
jmp
cs
ret
jae
xor
fcomps
cmp
inc
jle
sub
scas
adc
pop
pop
mov
dec
pop
lret
jb
cmp
add
add
sub
adc
and
push
pop
mov
xor
cmp
addr16
lea
sub
lock
mov
stos
mov
xchg
lcall
test
das
mov
jge
aaa
je
push
js
sub
push
in
xlat
push
inc
and
test
nop
scas
iret
fstp
add
scas
push
je
sub
mov
xchg
pop
and
test
jle
mov
lds
das
sbb
mov
fistpl
push
sbb
lds
xchg
mov
je
mov
pop
adc
test
jb
gs
or
ds
and
lods
jp
shll
bound
pop
dec
jge
sub
cmp
shll
inc
leave
xchg
in
xchg
es
cmp
and
xchg
roll
addr16
xor
mov
aas
and
loope
shlb
jbe
jl
add
fnstsw
insl
imul
ja
ret
push
xchg
cmpl
push
fsubrs
fisubrl
lods
shlb
aam
xchg
inc
ds
push
inc
xor
lret
cwtl
adc
std
test
repnz
xchg
in
xchg
or
or
mov
jae
mov
adc
or
mov
popf
insl
xchg
jmp
inc
xchg
mov
sbb
and
fs
mov
mov
mov
cmp
dec
jg
ret
jns
scas
cld
and
mov
adc
jbe
sub
mov
jg
xchg
in
stc
arpl
add
inc
jns
sub
xchg
int3
jmp
arpl
sub
sti
dec
jae
aas
jb
mov
fcoms
dec
mov
imul
lock
outsl
mov
fcoms
ljmp
aaa
pop
pop
cld
mov
sub
movsb
mov
jae
cltd
xchg
ljmp
jl
std
addr16
outsb
scas
lock
aad
cmp
mov
lds
iret
ljmp
mov
das
add
testl
orl
jge
adc
aam
mov
imul
adc
mov
push
push
push
lret
push
std
jecxz
jmp
jne
mov
or
cmpsl
inc
mov
push
lods
jnp
xchg
rcll
cwtl
dec
iret
jle
and
pop
repnz
in
aam
cmp
repnz
lahf
cli
mov
lahf
out
imul
cmp
test
outsl
sarb
mov
pop
pop
les
inc
cmp
fisttpll
jbe
fsubl
push
aad
push
mov
pop
jno
idivb
in
shrb
cmp
loop
jno
cmp
lahf
xor
repz
inc
pushf
and
mov
mov
rorl
stc
lahf
out
xor
addb
push
movsb
xchg
out
scas
movsl
cltd
xor
in
xchg
jb
es
shll
gs
sbb
pop
popf
repnz
cmc
in
in
sub
add
add
dec
stos
aam
inc
test
orb
dec
inc
lock
fcoml
ret
xchg
add
mov
dec
or
in
adc
sbb
pop
mov
shll
test
loop
in
xchg
in
insl
data16
fldenv
xchg
nop
jne
mov
add
push
and
cmp
test
jecxz
jge
cmc
inc
sub
sbb
jae
or
daa
testl
mov
ja
scas
pop
mov
loopne
and
icebp
int3
sub
out
iret
rorb
int3
or
add
div
fwait
leave
pop
jne
cmpsl
popa
cld
lock
mov
dec
mov
div
sub
sbb
or
dec
imul
jp
inc
add
push
pusha
fnstcw
jl
mov
mov
aas
mov
jno
jae
hlt
jp
and
mov
clc
call
jge
pushf
add
fs
sbb
mov
sbb
xor
fstpt
cmp
inc
aas
mov
dec
xchg
mov
imul
enter
xlat
mov
outsb
iret
xchg
cmc
testb
adc
xchg
jmp
insb
add
testb
cmpsl
dec
mov
xor
inc
jno
hlt
jae
popa
adc
clc
loope
adc
or
rcrb
ljmp
les
xor
inc
mov
inc
out
fadd
std
pushf
addl
ljmp
xlat
dec
push
inc
jle
popa
xchg
aaa
sbb
adc
sbb
loope
xor
mov
push
out
mov
xor
andb
mov
cmpsb
in
or
jp
out
loop
mul
fcomip
cltd
cs
xchg
pop
scas
push
mov
push
shll
push
sub
pop
jge
push
std
pop
add
and
sub
int
dec
mov
test
mov
frstor
push
mov
adc
xor
jnp
idiv
int
fs
ljmp
xor
xchg
xchg
imul
jmp
xor
cltd
es
cld
cmp
pop
xchg
jns
aaa
mov
out
inc
int
ret
xor
jb
mov
insl
cmpsl
pop
fstpt
scas
mov
jnp
or
ret
xchg
mov
inc
jl
scas
push
mov
pop
dec
cmp
subl
xor
mov
ljmp
loop
mov
or
cmp
imulb
pushf
pop
jge
sbb
repnz
ja
minps
movsb
in
call
pop
std
pop
cmp
inc
jl
xchg
cs
aas
int3
outsb
push
inc
xchg
push
fisttpl
mov
repz
cld
ds
rcrb
in
cmpsl
emms
mov
out
lods
mull
addr16
xchg
or
into
mov
add
insl
sbb
xchg
adc
divb
lods
pusha
insb
push
jmp
mov
inc
es
hlt
das
push
jns
lock
push
xchg
sub
mov
push
lret
xor
loope
mov
dec
sub
or
pop
lods
daa
mov
outsb
sbb
cs
out
mov
cld
add
hlt
and
adc
sub
add
int3
mov
xchg
xor
inc
lcall
jae
mov
xchg
cmpsl
sub
or
push
xchg
xor
and
push
push
add
pop
xor
push
ds
mov
pop
ss
push
mov
movsl
xchg
test
or
es
lahf
ficompl
cld
outsb
imul
sbb
inc
test
js
push
or
pslld
adc
or
loope
and
xchg
in
fidivrs
repnz
addr16
jb
ret
sbb
daa
enter
add
push
mov
dec
xchg
ret
cmpsb
mov
repz
or
mov
push
icebp
and
fisubs
pop
push
imul
adc
sarb
push
jle
inc
inc
add
lret
scas
sub
add
push
insb
lret
jns
rcrb
int
dec
into
fildll
inc
in
pop
push
xchg
xchg
add
cmp
xchg
arpl
mov
jecxz
imull
in
sbb
pop
insb
push
stos
mov
fimuls
sub
sub
leave
ret
in
cld
std
add
clc
inc
pusha
adc
adc
aad
mov
or
std
test
int3
cmc
addb
bound
bound
push
out
dec
lds
pop
xor
inc
xchg
daa
aaa
mov
xor
sbb
movsb
data16
test
notb
lahf
inc
jb
je
cltd
xor
imul
dec
push
cwtl
inc
or
sub
and
cmpb
lret
mov
cmc
jmp
lea
call
jecxz
imul
imul
inc
xchg
xor
stos
js
dec
mov
jbe
sub
mov
xlat
and
filds
sub
ja
push
pop
or
push
dec
daa
sub
cld
xor
daa
pop
cmp
loopne
mov
pop
rcll
or
jnp
cli
test
pop
repz
mov
repz
xor
test
sub
cmc
and
xchg
clc
ja
sub
mov
cmp
imull
cmp
call
mov
ss
push
mov
mov
stos
pop
push
divb
push
push
mov
push
mov
inc
xchg
xchg
jecxz
dec
sub
in
push
ljmp
sbb
mov
or
xor
xchg
mov
movsb
movsl
xlat
sub
fidivl
xor
mov
xlat
fsts
pusha
sub
mov
inc
loopne
fists
shll
sbb
stos
dec
add
rorb
fs
inc
mov
ja
sub
lods
adc
call
clc
and
dec
jne
imul
mov
mov
push
mov
addl
and
pop
and
loope
popa
outsl
adc
ds
xlat
dec
ljmp
outsb
bound
xor
or
sti
lock
mov
mov
jo
xchg
mov
scas
sub
leave
std
add
stos
mov
xchg
and
inc
lods
xor
xchg
push
sub
or
pop
pop
xchg
add
cmp
mov
dec
jb
jmp
adc
shlb
cmp
mov
js
inc
jne
mov
ljmp
pop
cli
mov
mov
mov
cmp
xor
std
xchg
test
inc
or
inc
push
scas
sbb
mov
push
je
cmc
xor
adc
mov
and
mov
pop
nop
lahf
push
roll
pop
cmp
out
sbb
xchg
mov
adc
adc
inc
mov
popf
mov
push
xor
iret
or
jl
stos
cmc
enter
jg
mov
xchg
js
out
loop
xchg
out
loop
sbb
mov
popf
sub
fidivl
sub
sub
test
in
cld
pop
subb
int
push
cmp
movsl
pop
inc
leave
movb
sub
and
movsl
sahf
repz
call
pusha
mov
sub
cs
cmpsl
imul
mov
mov
cmp
ret
mov
pop
push
enter
mov
divl
pushf
push
std
cmp
pop
outsl
and
mov
xchg
dec
push
shll
xor
inc
int
mov
dec
aad
out
cmp
shlb
jge
jp
fdivrs
stos
out
add
cmp
fcomp
xor
or
cmpsl
add
and
mov
xor
sbb
or
lea
les
xchg
sub
sub
inc
fisttpll
rol
push
xchg
jge
xor
adc
xor
mov
mov
mov
pushf
fistl
jg
movsb
mov
push
adcl
dec
adc
mov
pusha
insb
dec
pop
or
cmp
xor
cmpsb
lret
dec
sar
mov
sub
dec
sub
data16
sahf
mov
call
and
ret
fisubrs
ficoms
fidivrs
out
jnp
xchg
dec
mov
lea
mulb
lret
pop
test
xchg
enter
stc
mov
pop
jb
cs
pushw
jae
cmpsb
xchg
in
out
xlat
dec
inc
mov
lcall
fs
xchg
push
cmp
xchg
sahf
mov
stos
push
test
sub
push
jbe
inc
jmp
shll
ret
aam
mov
dec
push
pop
movsb
test
sti
push
scas
xor
add
fadd
jge
lret
inc
je
jmp
or
leave
andl
loop
cmp
outsb
imul
stc
jecxz
sbb
mov
mov
lret
cmp
outsb
ja
ficomps
mov
or
and
into
push
push
sar
outsl
push
cmc
sbbl
outsb
lods
fwait
mov
inc
jae
mov
addl
push
jo
in
xchg
lret
adc
out
out
push
jg
out
fstpt
sub
test
sub
lock
inc
jae
adc
add
dec
aad
and
movsl
adc
mov
frstor
inc
test
push
mov
stos
ljmp
fisttpll
and
inc
mov
dec
pop
inc
mov
sub
add
outsb
aas
fstl
sub
clc
mov
out
fnstenv
mov
loopne
dec
popa
scas
or
fdivs
or
scas
test
clc
or
imull
movsl
das
inc
dec
ror
movsl
or
gs
sbb
rcrl
push
in
fs
repnz
shl
sub
inc
int3
in
lahf
mov
pop
cmp
ds
xchg
out
lret
push
xchg
mov
cmp
aad
add
fcmovbe
lds
jne
xor
mov
aad
push
cmp
mov
arpl
insb
sub
xor
movb
jecxz
lcall
jns
mov
cmp
adc
jns
or
nop
mov
adc
dec
mov
sbb
std
stc
mov
push
scas
xchg
aas
enter
or
dec
std
jmp
jg
rorb
lahf
adc
and
scas
int
and
insb
mov
popa
sub
dec
lds
and
jl
jae
sbb
pop
movsl
inc
jle
or
xchg
mov
mov
and
jnp
into
gs
int3
jae
lds
inc
in
lods
or
mov
jmp
or
mulb
mov
in
fmull
cmp
or
and
lods
mov
leave
orl
fiaddl
and
arpl
adc
adc
jg
je
lds
cmpl
fstl
aaa
insb
repnz
push
enter
jge
add
movsl
dec
in
mov
in
pop
pop
jg
adcb
dec
shrl
in
push
sub
pusha
lock
cmc
cmp
sub
mov
dec
xchg
inc
shrb
pop
dec
addr16
movsl
loope
mov
dec
xor
sub
add
js
stos
shl
adc
mov
xor
mov
xor
int3
xchg
dec
push
or
scas
sahf
lret
push
bound
loope
mov
add
rcl
adc
je
pop
test
jg
mov
push
bound
dec
cmp
xchg
cli
add
popl
shlb
xor
dec
xorl
jge
ret
cltd
test
jb
inc
pop
imul
test
movsb
js
outsl
cld
and
fildll
cmp
pop
rep
push
rcrb
icebp
fstpt
or
rcl
xlat
jae
xchg
sub
push
out
ds
scas
or
int3
and
sti
cs
push
popa
xorb
cwtl
lcall
dec
jbe
clc
loopne
data16
or
bound
or
mov
scas
xor
mov
outsb
cmpsl
aaa
xor
adc
xor
xrelease
sub
pop
lods
sub
clc
pop
cld
xchg
mov
std
push
inc
sbb
int3
mov
cmp
xor
ja
xchg
and
push
divl
fstl
filds
xchg
arpl
inc
ret
ret
loope
mov
mov
out
jne
cmp
lahf
leave
inc
and
mov
xchg
test
cwtl
pop
inc
sbb
imul
addl
fchs
sub
sbb
xchg
in
sbb
mov
cmpsb
or
fcompl
std
aaa
push
push
jmp
imull
popf
dec
dec
jecxz
inc
ja
test
add
xchg
mov
xor
gs
repz
push
sbb
mov
in
enter
scas
cwtl
loopne
mov
popf
outsb
sti
and
mov
dec
adc
jnp
ret
inc
repz
and
mov
loope
sahf
pop
mov
rep
rorb
jle
xlat
cmpsb
fsts
jl
aaa
xchg
jmp
cmp
cwtl
or
xor
gs
or
mov
adcb
dec
cmp
ja
mov
add
sbb
cmp
jecxz
rcr
mov
jmp
cmp
insl
shl
inc
lret
aaa
inc
cltd
push
jmp
push
inc
sarl
pusha
mov
icebp
lret
in
insb
les
adc
xor
nop
test
lods
push
xchg
jle
sub
mov
enter
inc
cwtl
aad
inc
sti
pop
into
jbe
nop
xor
enter
mov
arpl
insl
cmp
stc
mov
inc
daa
inc
jne
cwtl
hlt
aaa
mov
mov
jae
pop
fldenv
jge
ljmp
jmp
lock
and
pusha
adc
mov
inc
jl
loopne
jg
fs
xlat
into
sbb
imul
fs
aas
subb
xorl
int3
fsubrl
addr16
into
mov
pop
sub
or
push
insb
imul
jb
sub
mov
cmpsl
jge
inc
arpl
dec
adcb
clc
andl
dec
gs
loop
in
lret
in
sbb
jle
inc
mov
out
gs
or
sti
push
or
fists
lret
test
cmpsl
outsb
ret
lock
bound
sbb
pop
mov
in
loopne
lods
or
das
sub
push
shll
xlat
cmp
icebp
enter
dec
mov
cmp
jmp
sbb
mov
pop
xor
cmp
pushf
mov
mov
jnp
aaa
adc
iret
sub
push
mov
in
add
xor
daa
mov
xor
mov
ljmp
and
sub
mov
mov
add
or
push
popf
inc
in
out
repnz
ljmp
jbe
out
int3
aaa
cmp
test
out
cltd
mov
test
xchg
rorb
aam
push
aas
pop
jns
enter
mov
out
and
sarb
mov
ret
jle
cmp
test
dec
pushf
lock
icebp
push
push
inc
inc
es
jmp
jns
in
test
xchg
icebp
outsl
fsubs
int
xchg
iret
mov
ja
sahf
and
push
addr16
loope
sarl
and
ret
dec
push
mov
and
push
sbb
jno
pop
inc
out
mov
loop
cmp
mov
mov
and
arpl
stos
shr
or
ljmp
sub
in
adc
gs
into
push
sbb
outsb
movsb
call
adc
loopne
sbb
jae
mov
call
mov
mov
cs
out
lods
add
add
jecxz
sbb
lcall
adc
scas
cld
movsl
rcll
lds
sahf
popf
push
paddsw
loope
ficompl
lea
cmp
cmp
fbstp
lods
ret
ret
leave
shrb
mov
jg
shl
imul
fs
mov
ds
aam
or
inc
push
inc
cmp
jae
push
jo
inc
stos
mov
pop
adc
cmp
cwtl
add
sub
sub
lret
leave
enter
js
aad
loop
xchg
dec
lcall
fwait
or
xor
or
test
mov
sub
xchg
or
sbb
das
dec
xchg
sub
std
inc
mov
ss
cs
repz
mov
mov
ret
test
adc
pop
push
cld
or
std
mov
jl
movsl
jae
push
xor
mov
leave
jl
jnp
in
loope
call
dec
inc
stos
dec
pushl
jno
mov
jle
adc
or
inc
jb
sub
add
int3
ljmp
and
imul
cld
jbe
mov
mov
sbb
inc
xchg
pusha
aad
xor
and
xchg
mov
lea
jne
pop
mov
cltd
fcomps
xchg
sahf
mov
sub
adc
imul
sub
lcall
daa
fisubrl
push
loope
push
dec
iret
in
mov
or
loop
rolb
push
sbb
fldl
dec
adc
jecxz
jb,pt
in
subb
cld
pop
js
int
fldenv
inc
shll
scas
je
cmp
insb
stos
and
sub
nop
test
daa
xchg
imul
rorb
fnstenv
adc
sub
xor
lock
sub
hlt
push
mov
or
jnp
dec
pop
cmp
psrlq
test
cmpsb
aad
inc
in
ds
xchg
sbb
sbb
pop
outsl
add
lcall
test
mov
std
xor
inc
imul
sub
mov
xor
out
lds
jb
or
mov
nop
int3
orb
andb
cs
movsb
push
sub
andb
cli
lods
lret
jp
scas
dec
popf
fsubl
lea
mov
pop
xchg
das
lret
xchg
in
add
push
hlt
xor
mov
or
mov
mov
lret
loopne
add
stc
fdivs
mov
iret
ficompl
daa
jmp
sbb
je
sub
out
repnz
sahf
fstps
push
push
insl
or
in
iret
xchg
jns
add
je
lods
cli
popf
out
cmp
jg
add
mov
lock
and
sbb
xor
outsl
add
pushf
mov
leave
in
pusha
cmp
sub
icebp
in
inc
subl
inc
sahf
mov
lea
lds
out
js
inc
mov
decb
ss
mov
mov
add
je
bound
inc
add
sbb
out
jns
inc
push
shlb
xchg
xchg
stos
cmpsl
add
loope
and
ds
shlb
jle
xchg
mov
dec
sub
add
cmp
jns
add
mov
or
lods
adc
xchg
mov
cmp
les
pop
jp
sub
xchg
insb
mov
nop
aam
xor
cmp
mov
and
std
out
push
sbb
hlt
pop
xchg
ficoms
lock
and
pop
pop
or
das
pop
cmp
xchg
jg
aad
fst
dec
repz
leave
inc
jmp
xor
out
push
fs
daa
aad
inc
xor
icebp
lcall
fwait
mul
cs
add
sub
sti
lods
push
pop
test
pop
mov
in
movsb
dec
orb
idivl
xchg
leave
pop
data16
ljmp
inc
arpl
sub
inc
lds
mov
mov
sbb
sbb
popf
leave
fcmovbe
xchg
sub
dec
pop
sub
lea
popf
xorb
icebp
sub
mov
call
xchg
faddp
bt
aas
xor
leave
mov
loope
mov
movsl
stos
ja
test
call
jae
ljmp
xor
das
loop
lret
xor
inc
jns
mov
test
add
xchg
cs
jle
imul
pop
sbb
imulb
inc
icebp
dec
jo
adc
push
mov
loop
stos
divb
sub
dec
ljmp
repnz
out
push
outsb
adc
aas
cmp
clc
movsb
mov
add
sub
pop
in
lcall
fdivp
and
adc
ds
mov
inc
push
std
xchg
mov
dec
mov
xor
pop
mov
subl
xchg
xor
cmp
sbbl
movsb
or
jb
scas
in
dec
cmp
sub
jno
cmpsb
insl
iret
or
les
std
shlb
mov
repnz
adc
dec
dec
jb
mov
repnz
jbe,pn
or
stos
imul
ret
leave
cmp
xor
mov
cmp
dec
dec
aas
mov
adc
adc
mov
test
jl
xchg
mov
push
fs
aad
lret
dec
mov
xchg
orl
dec
sbb
push
out
ret
cmp
pop
out
jge
xchg
test
push
mov
xor
scas
cmp
sub
idiv
inc
rcl
arpl
sahf
push
pop
adc
push
mov
std
testl
iret
ss
pop
shlb
cmpsl
inc
add
out
lret
adc
jle
pop
mov
enter
cmp
xlat
mov
outsl
loop
and
imul
add
xor
loope
sub
stos
jmp
popa
xchg
repz
mov
xchg
fstl
enter
aam
out
out
addr16
ret
and
in
out
sbb
cmp
repz
in
in
dec
fdivl
shll
lcall
not
push
out
dec
out
test
adc
mov
mov
push
mov
es
xchg
xor
sar
rolb
jecxz
or
pop
int3
loopne
std
and
bound
scas
out
fldl
or
ljmp
lods
lods
mov
movsb
sti
push
mov
push
insb
inc
les
mov
jmp
jecxz
rorl
sahf
cwtl
mov
test
xor
test
push
mov
jns
stos
int
fwait
orl
add
push
jb
dec
outsb
addr16
aam
xchg
inc
sub
mov
inc
movsl
jo
inc
inc
ljmp
mov
cwtl
addr16
loop
inc
sbb
cwtl
xor
rolb
fistps
and
js
rcll
sbb
pop
or
dec
mov
adc
and
test
adc
push
lea
pop
in
icebp
jo
jle
shr
xchg
inc
dec
mov
movsb
or
mov
jo
out
mov
push
inc
sub
imul
mov
or
stos
fidivs
pusha
leave
cmp
fisubl
dec
les
bound
lods
pusha
lret
xor
mov
pop
fcmove
aas
call
das
jnp
cli
or
jae
ret
jns
stos
out
stc
dec
fs
test
sbb
push
faddl
lcall
lcall
add
hlt
and
ret
mulb
std
in
mov
in
popa
test
cmpsb
fs
fstl
and
push
cmc
shrl
push
xchg
xlat
mov
cmp
cltd
pop
cli
and
jecxz
test
sbb
out
push
pop
out
stos
shl
sub
push
repnz
stc
mov
ja
shll
jecxz
inc
arpl
mov
xlat
xor
sub
je
mov
movsl
push
ss
push
es
iret
push
add
inc
mov
push
lods
xchg
shl
xor
mov
aad
pop
jnp
dec
jge
fs
sarl
mov
jbe
ret
mov
js
lahf
adcb
or
pop
pop
cmp
hlt
mov
pop
pop
insl
cmp
xor
stos
mov
mov
movsl
in
negb
fisttpl
lock
shll
imul
push
sbb
aaa
pushf
fistps
push
sub
insb
sbb
pop
cwtl
mov
sbb
pcmpeqw
or
out
xchg
xlat
jbe
adc
je
dec
dec
and
popf
mov
aam
pop
push
pushf
dec
ret
sub
test
bound
mov
fsubrl
rclb
add
and
in
sbb
add
push
ljmp
insb
dec
mov
ss
sub
sti
je
shlb
push
fisubs
add
mov
call
imulb
mov
inc
adc
xchg
mov
inc
inc
stos
xchg
out
mov
rorb
push
push
push
sbb
subl
sti
movsb
movsl
dec
arpl
cli
popf
mov
xchg
pop
add
je
nop
aaa
fwait
add
fists
rorb
int3
outsl
and
and
ljmp
rolb
push
pop
fisubrl
mov
dec
cwtl
fmul
cs
stos
push
xor
mov
sbb
call
rcrb
pop
or
mov
outsl
fstpl
inc
gs
lret
dec
pop
test
out
and
inc
scas
aam
and
adc
xchg
push
mov
jl
out
int
popf
outsl
cmpsl
mov
fdiv
in
aaa
fbstp
mov
clc
out
loop
xchg
out
rcrl
pop
jl
test
add
or
pop
negb
addr16
push
ficoml
pop
ljmp
sti
cmovle
pushw
cwtl
cmp
fbstp
jno
xor
arpl
push
js
adc
adc
jbe
xchg
mov
mov
jg
fmull
lret
or
push
sbb
pop
cltd
lret
arpl
mov
xor
adc
int
shlb
push
loope
cs
sbb
sbbb
pop
pop
fnstsw
jmp
mov
js
and
out
insl
imulb
test
jle
cmp
jae
aaa
push
mov
shll
cmpl
testb
and
lods
sahf
aas
into
sub
out
mov
mov
ret
insb
pop
scas
rorb
rclb
add
lods
pop
add
fisttpl
mov
test
push
xchg
loope
jl
gs
and
outsl
push
mov
icebp
xlat
loope
enter
mov
cmc
mov
test
sbbb
add
int
data16
fnstcw
fs
mov
pop
cmp
dec
jg
sbb
sarl
push
loopne
adc
dec
add
xlat
adc
dec
aam
xor
cwtl
and
lahf
jbe
addl
mov
push
ds
stos
in
hlt
lods
sbbb
ja
push
enter
xchg
es
out
adc
test
sub
lds
cwtl
mov
or
movsl
xor
sbb
imul
pop
inc
push
out
fisttpl
lods
repnz
push
fidivrs
daa
sbb
in
adc
adc
mov
add
inc
xlat
popf
mov
cmp
ret
repz
clc
test
sbb
push
dec
mov
stos
imul
add
inc
aas
mov
fildll
and
cmc
cmc
dec
inc
nop
mov
fildl
mov
jbe
sub
push
sbb
or
imul
outsb
in
or
cmpsb
call
sbb
lcall
sub
and
dec
adc
sti
ja
roll
popf
mov
out
xchg
imul
sahf
add
adc
pop
loopne
popa
or
pop
or
mov
dec
pop
cmp
dec
xlat
pusha
mov
jns
pop
xor
insb
inc
push
repz
rcrl
jl
push
cwtl
mov
push
xchg
xor
movsl
add
push
ja
rorl
mov
rorb
loope
out
push
rclb
xor
sub
cmc
sub
xchg
jne
and
shlb
push
add
rclb
int3
shl
jne
sbb
js
fs
xor
cwtl
insb
sub
xor
sub
jne
sub
std
dec
ds
push
xchg
sbb
test
or
push
ret
lret
les
loopne
adc
xor
notl
loope
dec
mov
mov
icebp
mov
pop
and
loop
and
mov
shll
push
aas
xorl
ret
sahf
out
lret
cmp
and
hlt
int
lcall
loopew
stc
in
loopne
ja
dec
inc
fldenv
sbb
punpckhdq
orb
or
loop
xchg
loop
jecxz,pt
sarl
sbb
mov
gs
es
lock
jo
test
and
jb
pop
xchg
dec
xor
int
push
pop
cmp
inc
and
xorl
dec
xchg
jns
aaa
push
or
jbe
xor
sbb
xchg
imul
cs
xor
jo
lods
inc
lock
lret
adc
inc
or
mov
xchg
imull
cmp
hlt
stos
xlat
push
ds
iret
mov
pop
sub
shrl
xorl
push
xchg
xchg
sub
fldcw
mov
jmp
leave
adc
fdivrp
cmp
arpl
pop
call
push
daa
xlat
cmpb
imul
sub
or
jno
sbb
outsb
daa
mov
leave
ret
xorb
push
cmc
xchg
nop
and
std
into
repz
xor
rcrb
fwait
mov
mov
or
xor
jno
sub
jle
cmp
shlb
push
or
sahf
sbb
fwait
int3
cmp
int
fdivrs
jo
jo
sbb
cmp
pop
arpl
fwait
lret
push
mov
stos
in
xchg
dec
stc
imul
into
fnsave
fs
test
adc
icebp
std
mov
pop
dec
xchg
xor
in
les
jp
lods
jae
stos
mov
mov
jge
leave
ret
int3
jecxz
fiadds
and
shlb
js
adc
outsl
dec
xchg
cmp
mov
push
lahf
jbe
bound
popl
in
adc
stos
cs
lahf
adc
loop
xlat
xor
push
faddl
add
mov
out
call
in
mov
inc
jecxz
sbb
sub
test
pop
and
ljmp
xorb
pop
cmp
cmp
or
call
cwtl
gs
popf
push
xchg
push
call
orb
out
pop
imul
jecxz
push
xchg
inc
cmp
enter
rol
faddl
or
adc
xor
shl
push
mov
lods
filds
lret
xor
mov
cmp
mov
mov
movsl
ret
pop
dec
lods
add
mov
adc
sub
push
lods
push
xchg
jne
mov
into
mov
jge
inc
orb
loop
or
sbb
mov
push
dec
fwait
repnz
pushf
aad
sub
adc
dec
sub
push
lods
shlb
mov
jle
dec
push
rcl
popl
push
push
xchg
leave
dec
xlat
inc
push
xor
cmpsb
lahf
jl
dec
popf
adc
fmull
cmp
mov
push
icebp
sbb
sti
jae
icebp
fdivp
in
mov
mov
das
clc
outsl
jle
repnz
or
js
or
test
mov
jg
fnstcw
pop
in
xor
aaa
fs
mov
mov
cmpsl
mov
xchg
xor
jmp
sub
push
lret
xchg
cmp
or
cltd
test
push
cmp
test
imull
btc
xchg
xor
add
push
jp
test
jb
push
and
push
xchg
push
leave
fucomp
movsb
pusha
mov
sub
or
addr16
out
jnp
xchg
mov
pop
out
repnz
cmp
fcompl
fld
cmc
in
mov
cli
dec
push
icebp
add
inc
mov
ljmp
push
jl
jl
repz
cmp
lods
push
adcb
cmp
sbb
sbb
jl
movntps
dec
mov
jnp
jge
or
aam
xor
in
push
xchg
and
push
or
dec
or
mov
adc
fnstenv
mov
adc
lods
div
mov
into
rclb
push
jae
in
cmp
std
xchg
into
jecxz
fiaddl
sub
jb
ljmp
insb
push
mov
push
mov
in
popa
rcr
jecxz
inc
leave
push
out
loopne
jmp
fdivs
push
and
push
mov
inc
xchg
fs
xor
add
insb
or
pusha
ljmp
mov
rcll
shll
js
cmpb
sbb
mov
lds
mov
std
jecxz
out
lds
outsl
cmc
aas
mov
fmuls
scas
xor
push
xor
push
fs
out
scas
dec
sbbl
imul
pop
lock
out
out
ficomps
and
cmpsl
and
jb
and
xor
push
jp
bound
add
inc
xor
shrb
insb
sbb
in
jnp
jmp
and
inc
jg
out
add
fdivr
cmpsb
mov
mov
je
cmc
lret
out
mov
xchg
mov
iret
popa
je
add
in
or
jge
dec
or
jle
leave
notl
pop
sub
mov
test
mul
stos
adc
out
fnstcw
ret
fdivr
push
sub
dec
out
push
std
and
shl
mov
out
loope
add
push
bound
ret
leave
or
lock
xor
xorl
popf
rol
mov
call
adc
cmp
jbe
xor
jl
add
adc
sub
fucomip
mov
mov
mov
aaa
push
popf
jmp
lret
sub
repz
add
outsb
pop
add
mov
and
inc
sbb
das
aam
push
mov
movsb
lods
add
mov
insl
mov
cmpsb
loop
push
dec
cli
or
cmpsl
push
fmuls
jae
fidivl
mov
sbb
sarl
fs
or
pop
mulb
pop
fists
std
xlat
lcall
sub
inc
xor
push
lahf
dec
nop
stc
out
adc
sbb
inc
adc
ljmp
shl
and
push
pushf
sub
inc
sahf
cmp
clc
mov
add
pop
fistps
dec
xor
mov
cltd
jge
mov
cwtl
rorl
mov
cmpsb
xchg
sub
inc
iret
jo
js
xchg
lret
pop
dec
popa
int3
inc
and
sub
es
fiadds
push
sti
sub
xor
aas
cmp
mov
mov
shll
mov
xchg
add
xchg
sti
and
les
xchg
insl
adc
stc
push
shll
pop
mov
out
subb
lods
mov
outsl
pop
mov
scas
scas
xchg
sub
dec
lret
aaa
cmp
jns
inc
jb
insb
push
cmp
ss
idivb
add
sub
jl
xor
add
int
mov
faddl
rorb
xchg
cmp
mov
orb
sub
roll
fldcw
mov
sub
push
jo
cmp
ds
xchg
popf
insb
popl
push
es
lds
cmp
test
jp
test
cmp
xor
outsb
jmp
sub
lock
out
mov
lods
mov
xor
lcall
mov
mov
dec
mov
outsl
out
clc
xchg
adc
adc
adc
inc
cs
xlat
decl
outsb
cwtl
cltd
lods
cmp
cld
fadd
gs
xchg
pop
mov
sbb
jne
inc
mov
mov
pop
in
dec
xchg
mov
add
mov
push
sbb
sub
xchg
adc
push
mov
sbb
sbb
mov
or
lcall
jge
jg
mov
int3
leave
test
icebp
fcmovne
adc
lock
cmp
mov
ret
add
xchg
pop
jmp
cld
mov
ffreep
mov
incb
cwtl
loope
stc
jo
push
sti
loop
loopne
iret
outsl
sbb
callw
idiv
out
mov
pop
and
lods
dec
xchg
adc
cltd
cltd
enter
jb
movsl
mov
daa
data16
data16
and
mov
hlt
loope
mov
mov
in
cwtl
push
pop
lret
test
cmp
sub
mov
cmc
jae
jp
sbb
shrl
xchg
scas
cmpb
push
or
in
jo
cltd
in
es
push
stc
cmp
lret
jl
sbb
ljmp
xchg
xor
or
mov
in
pop
js,pt
dec
cmp
aas
ret
rolb
push
push
pop
icebp
lods
insl
mov
jmp
mov
test
div
mov
daa
jge
xor
aad
pop
and
and
or
xor
loop
xor
rcll
adc
dec
mov
fdivp
sub
jecxz
cld
lahf
in
test
pop
push
in
jbe
and
rolb
repnz
addr16
adc
cld
sub
jns
inc
jl
and
scas
scas
cmp
ret
pop
stos
adcl
sar
xor
jne
idiv
test
int3
push
push
in
repnz
pop
repnz
jo
or
add
lock
mov
push
adc
lret
mov
loop
or
or
sub
cmp
fnsetpm(287
sarb
pop
pop
test
cmc
mov
test
int3
or
or
push
jne
cmp
and
fstl
push
shl
add
sub
mulb
ja
popf
aaa
sub
imulb
pop
push
push
daa
subb
std
cmp
xlat
loope
pop
mov
mov
push
and
add
xor
inc
rol
lock
mov
jno
pop
iret
gs
jbe
iret
rorb
xor
aas
sbb
inc
dec
jmp
lret
pop
lock
arpl
insb
push
pushf
cmp
xchg
cmp
int3
cmp
fdivr
pop
sahf
pop
mov
jl
gs
or
push
mov
cld
lahf
lret
mov
ror
dec
xor
push
fildll
ss
pop
cmp
iret
sub
and
add
or
xchg
inc
mov
mov
cwtl
and
test
mov
gs
or
jle
jecxz
into
inc
mov
sub
sub
stos
mov
movsl
push
push
xchg
xchg
pop
dec
insl
popl
xchg
sub
cs
dec
movsl
in
or
sti
cwtl
xchg
icebp
sub
or
incb
sti
repnz
inc
cld
test
jns
cmpsl
add
xor
inc
fsubrl
dec
sbb
addr16
mov
adc
and
mov
js
out
xchg
add
mov
iret
and
stc
les
push
aaa
test
inc
inc
outsb
fcomps
adc
adc
ret
cmc
dec
ror
xchg
je
shlb
mov
add
scas
ds
iret
cmpsb
mov
jge
cmp
push
out
and
fs
fisubrs
test
pop
jp
adcb
ss
inc
rorb
xor
data16
call
or
xchg
data16
out
fdivrs
rcrl
repnz
shrb
in
mov
pop
cmp
inc
xchg
xchg
leave
pop
jge
mov
adc
iret
test
adc
call
mov
jmp
gs
add
or
push
dec
fucomp
pop
fwait
mov
mov
xor
dec
clc
addb
frstor
iret
mov
ret
mov
inc
xchg
or
add
shrl
dec
inc
call
xchg
enter
push
jnp
iret
cmp
test
mov
pop
xor
mov
inc
shrl
fistpll
test
aas
cmp
adc
xchg
dec
and
mov
pop
sub
mov
lret
jno
rclb
mov
or
popf
adc
dec
int
push
mulb
xor
xor
xor
sar
push
scas
dec
xchg
outsl
stos
icebp
mov
push
dec
jp
mov
cs
xchg
movsb
push
sbb
push
cmp
or
fistpll
xor
pushf
pop
jbe
scas
cmpl
pop
xor
mov
pop
mov
add
xlat
jb
sbb
std
jp
call
mov
add
fiaddl
mov
mov
xchg
cld
lock
stos
jmp
and
repnz
xchg
fistps
movsl
data16
js
dec
test
xor
mov
sbb
mov
sub
pop
mov
ss
scas
mov
fsubrp
mov
movsb
cli
push
mov
sbb
cmpsb
and
sbb
pop
in
mov
inc
int
mov
test
hlt
mov
dec
stos
push
divb
hlt
jae
dec
pusha
test
jne
mov
stos
sarb
mov
xor
cmp
push
int
adc
popf
bound
mov
dec
into
incb
fcmovnb
mov
inc
mov
stos
imul
das
lds
xchg
pop
push
movsb
cmp
lods
or
add
and
cmc
pop
inc
xchg
mov
mov
pusha
push
and
mov
sub
inc
sbb
jnp
xchg
dec
shrb
sub
fnstcw
cli
rcrb
movsb
mov
outsl
scas
lods
adc
cwtl
fnstcw
inc
in
inc
flds
inc
andb
pop
cmp
lahf
js
and
xchg
pop
cmp
ss
sahf
sahf
outsl
enter
add
jmp
nop
out
mov
mov
or
mov
mov
jl
mov
nop
add
mov
mov
add
mov
push
lahf
mov
data16
ds
arpl
fucom
lock
rcrb
hlt
movsl
out
adc
cwtl
dec
shrl
icebp
pop
fistl
mov
movzwl
ret
xlat
lods
and
test
pusha
adc
cmpb
xchg
lahf
test
pushl
push
ret
push
inc
in
out
mov
addr16
int
lcall
arpl
pop
inc
nop
dec
adc
fwait
pop
inc
sbb
movsb
pop
cltd
dec
xchg
pop
cmpsl
jecxz
sbb
xor
sub
aad
vsqrtss
inc
lahf
rolb
stos
dec
dec
cmp
push
and
out
jmp
shll
push
outsl
fwait
jmp
cmp
xor
pop
xor
pusha
sbb
ja
insl
adc
in
sub
jp
loope
test
shl
jne
mov
dec
or
fisubrl
push
leave
popa
loope
xorl
adc
popf
jecxz
mov
and
push
imul
je
pop
jb
out
fcoml
sbb
xchg
lds
fwait
push
int
cmp
add
aaa
lds
add
push
push
clc
ljmp
mov
imul
push
fs
xchg
pushf
push
jno
das
les
imul
push
in
mov
repnz
ret
fldcw
dec
fldenv
push
mov
push
test
es
test
in
mov
mov
loopne
xlat
adc
jns
stos
loope
pop
aas
fldenv
adc
cs
adc
sarl
test
sbb
movsb
jnp
push
jge
call
sbb
push
data16
cmp
inc
sahf
and
nop
lcall
inc
popa
lock
ds
aaa
dec
add
and
inc
xor
pop
cmp
stos
sub
mov
gs
cmp
push
mov
dec
xchg
inc
cmp
js
pop
add
cmp
repz
xchg
jge
loope
inc
adc
sbb
sti
jmp
movsl
push
fidivrs
hlt
dec
or
pop
pop
and
lock
movsb
nop
mov
mov
and
out
bswap
ret
int3
xor
js
test
lahf
ljmp
aas
test
scas
pop
mov
adc
mov
and
sub
clc
cwtl
and
sub
sub
aas
scas
inc
xlat
popa
clc
and
repz
push
loope
pop
ss
adc
or
in
and
out
push
push
gs
fsts
dec
dec
imul
inc
jl
fstl
stos
sub
sub
mov
les
mov
icebp
jp
jmp
loope
pop
jb
dec
sbb
in
lods
push
test
lods
adc
pop
adc
or
pop
test
mov
push
xchg
or
mov
mov
sub
push
push
inc
ljmp
mov
xor
or
sub
pop
stc
arpl
mov
inc
push
dec
push
push
out
je
pop
movsb
or
jns
mov
add
cld
push
cmp
out
ja
inc
out
dec
mov
idiv
test
call
out
addb
dec
loop
sbb
cwtl
aaa
or
loope
pop
and
cmp
icebp
out
repnz
call
pop
movsb
xchg
sbb
pushf
push
xchg
scas
ror
ror
lods
insl
or
iret
test
loopne
lahf
sbb
push
sub
mov
inc
or
or
mov
pop
loope
xchg
ret
aas
inc
adc
xor
insb
outsl
mov
sahf
lods
add
jb
test
pushf
lret
push
or
and
sub
push
jb
sbb
xchg
popa
add
out
stc
hlt
jns
and
cltd
lds
mov
int
lods
xchg
sti
jns
out
jecxz
push
push
push
aas
mov
push
sarl
int
adc
xor
dec
cmc
add
pop
inc
mov
mov
jecxz
inc
jnp
into
cmpsl
mov
push
mov
xor
jae
jge
sarb
mov
and
je
bound
arpl
jp
and
sahf
adc
sub
mov
aad
fadds
adcl
mov
dec
daa
cwtl
add
xchg
dec
lret
push
dec
pop
imul
jbe
mov
addr16
sti
adc
leave
push
cwtl
xchg
pop
aas
test
cwtl
dec
mov
xchg
inc
out
jb
popf
daa
mov
aam
push
push
lods
dec
std
mov
pop
je
dec
dec
pop
ljmp
shll
mov
int
mov
inc
ljmp
jnp
sub
mov
call
mov
xor
icebp
sub
push
xchg
inc
and
dec
jo
mov
addb
sbb
sbb
dec
xchg
xor
mov
shlb
imul
or
es
ret
jae
out
rcr
loop
adc
adc
rcrl
adc
lods
movsl
mov
fsubrl
add
fwait
pop
ljmp
movsb
and
in
fidivrs
adc
icebp
pop
pushf
push
xor
xor
test
jae
pusha
cmp
push
sbbl
pop
sar
lods
and
xchg
int3
int3
cmp
scas
sbb
outsl
cltd
inc
inc
push
mov
jge
push
xor
loop
jmp
inc
jne
xor
pop
test
and
sbb
lea
stc
dec
rcrb
pop
iret
xlat
xchg
and
or
dec
les
push
lcall
outsb
pop
mov
das
jae
sbb
and
rorb
mov
scas
insb
imul
and
cli
add
mov
mov
lret
mov
scas
test
je
jo
jno
lock
and
popa
jl
pop
sub
iret
cmp
sub
jmp
push
mov
rorb
inc
mov
cmp
test
jno
mov
stos
subb
push
add
fbld
sbb
jle
jge
dec
adc
lcall
adc
inc
adcb
and
fdivrl
xchg
jg
mov
add
cmpl
jnp
xor
push
and
inc
daa
popf
cs
movsl
cmpsl
shlb
ss
xlat
mov
bound
sub
imul
pop
sbb
insb
test
in
sub
enter
mov
lret
mov
pop
aaa
push
scas
movsb
scas
cld
cmpsb
sbb
sub
hlt
or
sbb
out
test
dec
mov
jbe
mov
xchg
imul
sbb
mov
xor
repnz
or
fmull
sti
dec
lcall
gs
xchg
jns
enter
pop
and
mov
test
lahf
xchg
cmpsl
rorl
cmp
into
cmp
or
stc
fucomip
jne
xchg
ss
sbb
je
add
sub
or
dec
add
jnp
cwtl
push
adc
and
imul
mov
sbb
cld
fcmovb
aaa
fsubrs
data16
pop
scas
adc
imul
xlat
clc
jl
xor
loop
mov
jns
int3
sub
xchg
bound
mov
out
dec
xor
sbb
loopne
dec
js
cmp
pop
sahf
divb
bound
sub
bound
nop
add
adc
mov
xchg
out
sub
mov
pop
aam
dec
imul
imul
js
xor
sbb
shl
fstpl
push
cmpsl
push
pop
push
sbb
adc
insb
shll
xor
in
in
loope
outsl
mov
lar
nop
jge
adcb
mov
dec
bound
adc
inc
pop
xlat
inc
test
sbb
pushl
cmp
out
ror
sub
jmp
inc
mov
add
sar
pop
hlt
xor
and
or
gs
imul
cmp
scas
push
push
adc
scas
cmpsl
popf
imul
xor
adc
stos
aaa
lods
inc
mov
push
and
xor
call
xlat
inc
rcr
dec
inc
cmc
rcll
mov
push
sbb
mov
push
cmpsb
cmp
sbb
adc
cmp
imul
fistpl
sub
cmp
cmc
or
popa
mov
lret
dec
arpl
dec
out
jnp
push
cltd
fdivl
sub
aad
shlb
sbb
jp
in
sbb
repnz
lock
cmp
fmuls
push
and
orl
pop
mov
inc
jb
ja
jnp
pusha
dec
repnz
popf
lods
push
sbb
push
fwait
adc
add
or
daa
dec
xlat
stos
sub
daa
push
ds
sar
fldenv
pusha
adc
out
pop
addr16
les
insb
mov
outsl
push
inc
or
test
or
sbb
mov
scas
fldl
mov
or
push
adc
xlat
movsb
ds
nop
sub
stos
fwait
mov
fnstsw
imul
jg
jle
in
xchg
insl
dec
decl
pop
sub
sub
jmp
dec
adc
fisttpl
mov
loopne
in
ljmp
mov
xor
mov
dec
dec
inc
imul
mov
outsb
js
sahf
pop
xor
sarl
sahf
jge
cwtl
mov
out
add
or
pop
mov
and
test
test
mov
das
mov
sub
jg
xor
sti
cwtl
add
fs
pop
cmp
mov
or
dec
je
repz
iret
jl
pop
xchg
stos
or
mov
lret
mov
sub
pop
xchg
pop
arpl
test
imul
push
enter
inc
aam
ret
jle
push
push
adc
clc
rcl
sbb
sbb
push
sbb
xchg
mov
out
sbb
lods
sub
add
in
jmp
jnp
sbb
fdivs
cmp
cmp
lret
std
mov
xor
jnp
lods
aaa
out
xor
mov
xchg
jg
push
int
fmull
push
ret
jl
inc
jb
lahf
add
lret
lahf
pop
ss
scas
call
iret
gs
clc
lods
enter
rorl
cmpsl
and
mov
or
sbb
mov
push
push
out
or
xor
mov
icebp
daa
inc
push
rorb
int
popa
ficompl
pop
bnd
call
pop
sbb
das
mov
mov
mov
mov
xor
inc
push
xor
add
in
ret
jp
outsb
leave
movb
push
jbe
mov
cld
lock
cli
add
jno
cs
push
pop
dec
dec
adc
mov
lret
add
cmp
push
lea
daa
jge
cmp
mov
daa
sbb
cmp
repz
es
ljmp
notl
inc
js
xor
negb
cmp
cmpl
stos
aam
jns
stos
fidivl
inc
sub
in
aaa
data16
pop
call
loopne
adc
js
dec
in
shl
mov
jmp
or
or
jp
insl
mov
sbb
sbb
arpl
push
lea
notl
cmc
jge
imul
nop
xchg
leave
hlt
enter
mov
mov
rolb
cmp
push
mov
and
hlt
xchg
adc
fnsetpm(287
imul
xchg
cli
cmpsl
fimull
cli
bound
adc
jge
inc
jbe
scas
cwtl
mov
jl
xor
adc
movsl
fdivl
orb
negb
arpl
lods
ljmp
inc
jg
jg
push
pushf
mov
cmpsl
cli
popa
fldenv
jne
mov
cmp
daa
pushf
cmp
mov
pop
jp
js
sbbb
out
and
lods
clc
push
sub
mov
mov
sahf
inc
ljmp
jbe
cmp
mov
xchg
cmp
jmp
cmpb
jmp
pop
xchg
xchg
inc
inc
aam
dec
imul
sbb
repz
mov
dec
out
cmp
in
xor
into
in
mov
push
sbb
lds
ret
fsubrl
imul
adc
mov
jbe
and
popf
cmpsb
movb
dec
iret
xchg
sub
sub
rcrb
js
mov
rcl
pop
fucomi
sahf
jae
mov
pop
add
icebp
cmp
xchg
cmp
prefetcht1
clc
aam
xchg
push
dec
add
dec
dec
push
jbe
push
ds
movl
fisubrs
daa
js
insb
inc
dec
addr16
test
ss
loopne
add
or
out
xchg
popf
jl
pop
adc
cmp
jp
mov
std
insb
or
jle
dec
dec
out
fsubl
and
add
jne
fcompl
pop
sub
push
mov
and
pop
jmp
dec
jg
pop
mov
and
loop
xchg
inc
gs
idivb
jl
shll
mov
in
and
in
ficoms
mov
mov
adc
fistl
inc
jbe
test
je
ret
xchg
dec
cwtl
aas
cmp
in
adc
call
mov
rcrl
cmp
push
insl
mov
dec
cmpsb
mov
sbb
or
rorl
repz
jmp
stc
sub
pop
fisttpll
fimuls
mov
or
adc
push
mov
out
adc
pop
mov
jl
mov
aam
std
sti
jae
sti
in
outsl
clc
pop
xor
push
inc
out
mov
cs
movsb
es
scas
mov
xchg
lret
arpl
test
in
repz
sub
lods
xor
mov
ja
jns
mov
dec
ficomps
sahf
sti
into
inc
and
bsr
test
push
cmp
inc
jge
sbb
mov
fdivrs
bound
subb
cmp
data16
pop
fistpll
jg
xor
mov
ret
jp
dec
push
sahf
cmpl
sbb
mov
stos
ds
fdivs
or
dec
jmp
sarl
add
aaa
push
testl
cli
cmp
pop
bound
jecxz
pop
mov
imul
adc
jb
inc
in
sbb
xchg
pop
xchg
outsl
gs
dec
cld
nop
xchg
mov
je
int
outsb
sbb
pop
cmp
mov
movsl
or
and
arpl
push
mov
or
mov
dec
dec
jmp
xor
sbbb
inc
mov
insl
fidivrl
xchg
sub
jns
mov
das
lret
stos
adcl
pushf
mov
in
out
push
jno
mov
push
test
pusha
es
je
fists
sahf
cltd
dec
sahf
push
sahf
leave
cs
jno
sub
test
or
imul
jecxz
push
inc
and
fwait
push
sbb
xchg
stos
xchg
pop
dec
in
pop
aad
mov
xor
pop
test
cmc
add
fcmovne
xchg
jg
mov
fwait
add
popf
mov
jnp
cld
call
stc
dec
divl
adc
or
mov
dec
sub
pop
popf
mov
repnz
test
mov
cli
fcom
gs
add
ror
push
mov
dec
fistps
xchg
mov
jns
cmpsl
mov
loope,pn
add
pop
por
add
iret
cmpsb
xor
call
adc
push
insb
add
rcrl
ret
lea
sub
adc
xlat
sub
jge
fstps
mov
mov
mov
pop
cltd
jae
cmp
xchg
pushf
jb
pop
int3
cmp
pop
xchg
mov
mov
adc
push
and
outsl
out
jmp
scas
sub
push
pop
hlt
sbb
push
rorb
dec
ljmp
pushf
insb
xchg
mov
js
mov
aaa
mov
sbb
xor
fistps
jnp
cltd
and
xor
leave
dec
loope
jge
pop
out
add
cld
sub
insb
enter
mov
jl
jl
movsl
lods
nop
dec
leave
sbb
pop
mov
fs
fcomps
hlt
stos
mov
imul
push
and
lods
jae
stc
pop
loop
pop
jg
pop
push
ja
push
arpl
push
push
mov
sub
popa
mov
rol
mov
xchg
std
outsb
jmp
out
js
lahf
rcrb
xchg
pop
ja
xchg
push
xchg
xorl
ud2
adc
into
lock
and
ret
mov
pop
xchg
mov
scas
pusha
out
dec
fiaddl
or
daa
add
ret
out
nop
mov
clc
nop
inc
push
cltd
adc
xchg
or
pop
jp
push
cli
test
cli
subb
nop
ss
mov
or
xor
lahf
sbb
dec
aas
xchg
jbe
inc
sbb
mov
in
mov
loopne
mov
xor
out
sub
imul
movsl
xchg
std
xchg
xchg
inc
enter
insb
xchg
out
sbb
insb
xchg
push
testb
adc
imul
jmp
shrb
jb
mov
mov
dec
mov
adc
pop
cmpsl
adc
inc
mov
ficompl
and
adc
pop
jnp
jns
xor
lret
jp
fidivrl
fnsave
popf
les
clc
fisubrs
and
out
gs
cmpsb
sahf
inc
subb
lods
shlb
fistps
jo
or
lcall
decl
icebp
and
mov
pop
bnd
adc
mov
repz
mov
push
pushf
pop
pop
xchg
mov
mov
scas
sbb
in
lock
jge
add
call
adc
push
mov
fcmovnbe
xchg
shrl
testl
idivb
and
mov
stc
outsl
xchg
ret
mov
shlb
jge
js
mov
data16
lock
add
stos
adc
jne
mov
xchg
subb
pop
imul
mov
jnp
outsl
or
mov
and
jnp
mul
jecxz
xor
mov
cmc
pop
pop
shl
adc
in
orb
mov
jno
inc
and
cmc
mov
mov
adc
cmp
add
addr16
and
vmovdqa
and
push
add
jecxz
stc
pushf
aaa
adc
outsb
movsb
pusha
insb
std
aam
sbb
aas
stos
jle
cmpsl
push
xchg
or
inc
loope
std
imul
inc
mov
xchg
sbb
lods
outsb
pop
sti
insb
fsubp
aaa
jbe
mov
and
out
adc
jl
pop
push
mov
mov
js
pop
xor
aad
xchg
insl
adc
or
xor
mov
roll
addb
pop
int3
xor
int3
cs
and
fmull
sub
dec
rcll
pop
inc
sarl
adc
xor
sub
pop
and
rolb
icebp
xor
daa
in
andb
nop
jp
pop
xchg
adc
mov
lahf
stos
mov
test
jae
loope
fstps
pop
add
dec
push
scas
cmp
aam
adc
pop
sub
add
mov
mov
pop
adc
sbb
out
cmp
push
xor
mov
mov
pop
xchg
mov
push
sub
pop
inc
js
jmp
mov
adc
push
pop
mov
das
add
loopne
lret
fldcw
fwait
sbb
and
sbb
cli
movsl
cs
clc
loopne
fsubr
cmpb
sub
cmc
dec
pop
sub
inc
fstpt
int3
add
xchg
mov
inc
clc
enter
fidivrl
addr16
push
lock
xlat
add
mov
xor
inc
xor
dec
jmp
jmp
js
ljmp
mov
or
add
dec
jae
mov
shr
or
push
adc
add
or
repz
je
clc
cmc
sbb
data16
loopne
jb
and
loop
pop
in
clc
scas
mov
popf
mov
bound
dec
cmpl
dec
call
mov
or
out
cmp
xchg
inc
test
ss
cwtl
push
push
xchg
and
adcb
aaa
fimull
aas
adc
ret
mov
pop
push
and
mov
mov
in
nop
cmpb
or
jns
mov
sbb
or
nop
leave
or
cmc
call
add
inc
cmp
test
das
jmp
pop
clc
adcl
mov
pop
mov
xor
and
jle
or
or
stos
mov
out
pusha
push
sbb
sub
js
insl
test
push
test
je
pop
fsubr
xchg
or
cltd
aas
xchg
sahf
fwait
sbb
lods
mov
mov
scas
jns
decb
arpl
dec
xor
cmpsb
and
mov
cmp
and
hlt
faddl
fwait
xchg
icebp
fstps
jl
out
adc
pop
sbb
lods
ljmp
sbb
lahf
dec
ljmp
xor
dec
aaa
and
test
pushf
fimuls
clc
call
xor
imul
in
loope
cmpsl
subb
sbb
inc
bound
jne
sti
hlt
xor
mov
sub
jo
jg
mov
mov
cli
or
sahf
mov
iret
mov
mov
dec
in
push
pop
test
xchg
inc
jbe
bound
mov
sbb
fstps
aam
push
mov
je
add
pop
lea
mov
add
jbe
pop
movsl
loope
jb
mov
aad
and
pop
fnsave
push
adc
fwait
in
or
aam
xchg
pop
popa
mov
sub
ret
pop
sub
push
mov
inc
add
dec
mov
mov
mov
popa
loopne
xchg
into
xchg
stos
pop
shlb
orl
rclb
push
je
inc
jns
scas
push
adc
es
cwtl
push
ja
ljmp
insb
adc
sti
push
or
inc
xlat
lods
sbb
xchg
or
add
adcb
push
and
pushf
cmp
enter
push
mov
and
aaa
adc
popa
push
repz
cs
jecxz
mov
sub
aas
in
xor
aaa
insb
repnz
daa
mov
jne
fisubl
cli
stos
dec
jmp
rcr
pop
jns
sub
pop
adc
cmp
dec
xlat
sbb
inc
cmp
lock
mov
pushf
in
and
dec
pop
mov
sbb
cmp
int3
stc
mov
rolb
pop
cld
mov
jne
xorl
pusha
in
scas
xchg
add
jbe
mov
mov
lahf
sbb
pop
xor
mov
xchg
rolb
xor
push
adc
call
mov
lock
dec
rolb
faddl
jb
lret
cmp
lock
sbb
fmuls
cli
std
scas
mov
loopne
or
enter
in
lcall
cmpsl
imul
xchg
inc
add
sbb
cmpsb
in
out
lcall
xchg
paddq
fldt
or
pop
cli
pop
mov
int3
adc
inc
and
pop
cmpsb
cmp
inc
dec
push
jmp
jmp
xor
jnp
test
jns
in
jbe
fadds
or
shll
dec
outsl
inc
decl
fs
cmpsb
pop
and
test
inc
or
adc
mov
inc
inc
xor
jbe
inc
test
lcall
sbb
push
cmp
test
or
inc
jnp
mov
popf
scas
out
cmpsl
push
xchg
test
push
and
stc
xor
aam
out
sarl
clc
mov
mov
push
pop
out
int3
int3
push
mov
and
daa
cld
add
data16
dec
pop
fwait
outsl
fdivs
or
jae
es
test
sbb
pop
add
xor
pop
out
ljmp
shl
xor
xchg
push
jle
dec
cli
add
jb
in
stc
cld
lods
mov
xor
mov
push
jbe
cmpsl
add
sbb
and
sti
test
jnp
push
sub
mov
cmp
pushf
neg
aam
adc
dec
lods
or
push
sbb
insl
fadd
mov
sbb
mov
push
mov
fidivl
jb
aam
inc
movsb
push
test
pusha
dec
not
shl
cmpsb
ret
xchg
popf
fdivrl
mov
outsl
cmp
jl
pop
sub
pop
push
ret
test
enter
ljmp
xchg
enter
rcl
rcrl
cmp
or
sbb
mov
ljmp
sub
jmp
sub
cmp
xorl
xchg
mov
and
mov
sub
pop
iret
jnp
mov
ljmp
push
int
mov
fstpl
pop
das
js
pop
loope
jl
iret
jo
lret
std
sahf
stos
pshufw
test
inc
cmp
cmp
lea
hlt
push
mov
push
xor
sbb
xchg
push
dec
inc
popa
pop
add
inc
ds
mov
xor
aad
jne
mov
es
js
addr16
out
or
hlt
fwait
jmp
push
test
cmpsb
outsb
and
outsl
xchg
mov
cli
dec
into
or
nop
pop
in
push
scas
test
pusha
sub
mov
mov
sbb
aas
mov
or
sub
ss
pop
bound
lret
loope
and
int
addr16
pop
sbb
mov
cltd
test
xchg
pusha
xor
mov
call
mov
jo
sbb
outsl
clc
es
and
mov
mov
xor
aad
dec
ds
dec
dec
dec
adc
mov
mov
xchg
icebp
and
jg
cltd
and
movsl
dec
cmc
addr16
jl
cmp
or
push
sub
jmp
dec
into
clc
lods
js
xor
rcr
pop
ljmp
cmpsl
pop
add
and
pop
repz
xlat
push
mov
adc
inc
cmp
mov
das
call
ja
pop
xor
pop
mov
push
pop
or
rorl
outsb
mov
xchg
add
stc
xor
fwait
std
lods
in
leave
push
or
sahf
call
jp
mov
xchg
adc
lea
xor
ss
or
cmp
fsubs
mov
mov
shrl
inc
and
xor
fildl
daa
iret
aam
dec
icebp
mov
aad
inc
dec
movsl
sbb
xorl
inc
mov
lret
jb
adc
sub
arpl
push
xor
movsl
sub
add
pop
mov
int3
js
pop
push
push
movsb
adc
push
lahf
push
loope
inc
dec
add
and
dec
mov
push
mov
mov
or
add
flds
sbb
sbb
rcrl
lret
es
sti
hlt
lahf
std
aaa
and
je
and
notb
subl
orl
mov
xchg
xor
pushf
push
push
jno
fnstcw
aam
jbe
dec
ret
push
xchg
lods
cmpsb
add
inc
and
inc
sbb
or
adc
xor
js
and
fcomp
outsl
jnp
addr16
call
cmp
mov
call
aad
cmp
movsb
gs
stc
mov
mov
int
icebp
cmp
les
jp
mov
jnp
in
mov
mov
fnsave
xchg
cltd
push
pushf
rorb
mov
push
fcoml
inc
sub
dec
pop
addr16
adc
test
mov
and
das
js
gs
nop
mov
sahf
push
test
and
sti
jle
inc
cmp
jl
aad
int
fidivl
inc
add
or
out
mov
test
shl
inc
sahf
out
jl
jno
movl
jecxz
sarl
push
jl
push
imul
ljmp
xchg
nop
mov
sub
mov
cwtl
mov
xor
mov
rcll
add
popf
imul
jns
lahf
jnp
add
push
sahf
mov
in
push
sbb
lock
xchg
out
sub
nop
jns
xor
ja
popa
mov
jge
cltd
push
add
pop
js
mov
sahf
add
aas
test
test
popa
or
and
stos
jns
mov
adc
outsb
roll
js
stos
rorl
scas
aad
outsl
mov
dec
mov
insb
inc
adc
roll
shll
dec
or
xchg
xor
test
mov
xor
sub
imul
cld
sahf
ficompl
inc
ja
repz
cmp
int
and
mov
add
mov
dec
dec
mov
lods
repz
or
xor
and
ret
xor
test
push
std
add
and
test
cwtl
repnz
inc
mul
rcrb
mov
lcall
adc
push
mov
mov
ds
push
cmpsl
sarb
push
mov
mov
pop
pop
or
xor
jmp
xchg
inc
outsl
lahf
dec
pop
xor
mov
stos
lcall
rorb
cmp
xchg
adcl
jno
loope
xchg
sbb
xchg
push
push
testl
mov
pop
xchg
popa
rolb
inc
add
jmp
xor
aam
ret
push
je
cmp
pop
sbb
mov
xor
repnz
sub
pop
add
sub
iret
mov
pop
xchg
sub
sti
and
or
mov
mov
pusha
fs
adc
mov
ret
pushf
cmp
cld
add
jo
and
push
in
pop
rorb
bound
xchg
js
add
cmp
cmp
bound
stos
adc
xor
lock
xlat
xor
sbb
loop
ljmp
test
push
and
mov
cmpsl
fimull
jl
and
fs
insl
jg
inc
gs
or
dec
mov
mov
xor
pusha
add
aad
inc
or
xchg
pop
out
push
loopne
push
sbb
xor
sbb
pop
fs
mov
mov
je
in
mov
ret
fsubrs
test
test
std
call
cld
cmp
test
into
mov
mov
pop
xor
push
jmp
call
mov
and
add
and
jge
lea
mov
push
pushf
sbb
js,pt
jae
adc
aaa
out
pop
adc
cmp
cmp
xor
inc
js
outsl
pop
mov
movsl
and
sti
cs
mov
xor
movsl
cltd
stos
test
and
daa
sub
dec
clc
dec
imul
mov
pop
adc
pusha
in
jmp
shl
inc
daa
sti
bound
jmp
in
cmp
and
add
push
fwait
jne
or
loopne
mov
call
adc
mov
cmp
mov
mov
or
jmp
add
sbb
push
testb
ret
add
nop
cmp
and
stc
leave
out
xor
sqrtps
aam
iret
inc
or
daa
push
jle
shrb
lcall
mov
ljmp
leave
inc
lock
mov
cmp
dec
cmpsl
mov
stc
sbb
sbb
pop
mov
repz
cmp
out
fs
adc
pop
lahf
rcr
xchg
and
test
dec
mov
xchg
stc
cmp
pushl
in
sbb
mov
in
mov
pop
and
imul
pop
jae
addb
lods
pop
dec
sub
outsb
push
jg
stos
neg
out
std
push
repz
xor
push
mov
clc
jmp
lcall
sahf
mull
movsl
popa
push
out
dec
dec
test
hlt
mov
sbb
push
popf
jmp
inc
out
dec
ljmp
gs
aad
add
ss
xor
fisubrl
add
cmpsl
js
xor
fsubs
incb
int
out
orb
jbe
pop
dec
in
adc
jg
adc
fs
cmp
lock
shl
mov
push
iret
dec
sub
xchg
daa
xor
iret
mulb
dec
jae
dec
aas
mov
pop
lret
push
mov
fsubrl
add
rol
fs
lds
and
cli
addr16
inc
xchg
xchg
add
jmp
into
cmpb
insb
arpl
ljmp
and
inc
mov
xor
xor
scas
pop
cltd
jmp
sub
mov
and
mov
lret
stc
and
jmp
ret
mov
mov
fbstp
cmc
cmp
dec
std
das
dec
cmp
fdivs
leave
loopne
sbb
xor
and
mov
add
outsb
mov
lahf
xor
fisubrs
pop
sub
aad
arpl
bnd
push
mov
es
inc
insl
sbb
fdivrs
jns
mov
cmp
enter
nop
and
sub
dec
fdivrl
jne
sub
jns
push
xchg
and
cs
int3
frstor
jne
into
rorl
in
sti
fcoms
or
and
adc
xchg
add
sub
rcll
fadd
cmp
add
xor
pop
test
dec
xor
mov
and
pop
adc
cmp
or
pop
sub
test
jne
popf
push
mov
pop
ret
bound
dec
cmp
lret
and
scas
lret
cmc
fmull
movsb
sbb
adc
lcall
xchg
mov
jp
dec
mov
jnp
xchg
mov
clc
fimuls
jne
sub
pop
in
sub
and
lods
mov
pop
add
cmp
in
sti
das
mov
mov
je
jb
adc
out
pop
mov
loope
ret
int
addr16
xchg
loop
loope
leave
jl
cmp
movsb
in
pusha
lret
mov
cmp
inc
shrl
xchg
add
ja
into
stos
mov
mov
jle
xchg
ret
xchg
xor
fistpll
adc
imul
add
mov
out
mov
cmp
sahf
pop
hlt
mov
std
cmp
mov
and
cmpsl
imul
pop
mov
and
sub
xor
inc
mov
imul
stos
movsl
jno
mov
mov
in
xor
loopne
pop
mov
or
dec
sub
push
xchg
add
cmc
mov
add
stc
pop
dec
aad
pop
xchg
sbb
jno
inc
pop
sbbb
push
and
ret
mov
fs
or
push
rol
pop
xor
nop
push
pop
test
xchg
mov
int3
nop
lds
fisttpll
testb
dec
sub
push
jg
add
sbb
xor
cmp
ret
mov
inc
jno
mov
adc
lods
cmp
lret
sub
pop
sbb
fcomp
sarb
lock
imul
repz
add
loope
rcrb
std
sub
mov
cs
xor
insl
scas
ss
inc
push
xlat
shll
imul
push
ds
adc
jle
fldt
push
enter
xor
cmpsb
push
outsb
jecxz
and
jne
loope
lret
hlt
ljmp
vmread
arpl
enter
xchg
jb,pt
hlt
mov
dec
cmc
ret
mov
rorb
adc
push
loope
inc
mov
aad
add
push
daa
and
mov
imull
and
sub
aam
and
or
xchg
push
imul
fsubrl
mov
jge
dec
cltd
cltd
pop
inc
ret
push
rcl
jl
daa
or
cmpsl
outsl
xchg
or
arpl
xchg
jp
cmp
dec
inc
imul
stos
adc
jp
mov
inc
mov
sbb
jg
sub
pop
pop
sti
dec
shlb
push
and
dec
out
dec
mov
push
test
popa
into
cmp
loope
nop
xchg
fs
mov
mov
jle
mov
push
ret
aaa
cmp
mov
clc
addr16
ja
push
xor
mov
cwtl
lock
fisttpll
rcr
arpl
lds
mov
push
or
cmpsl
mov
mov
mov
and
out
xchg
outsb
arpl
jl
xlat
in
ud1
vpsubw
jae
iret
adc
cli
push
fcom
in
ret
push
jle
out
rcll
enter
fimuls
jmp
inc
mov
or
movsl
fwait
imul
icebp
jne
stc
out
notb
push
ss
mov
int3
mov
les
pop
push
xchg
dec
ds
movsb
fbstp
add
xchg
jp
sub
mov
cltd
fwait
cmp
pop
stos
or
dec
and
pop
pushf
sub
aas
pop
mov
jbe
add
push
push
sahf
cmp
add
xor
mov
mov
pop
cmpsb
std
mov
jmp
mov
jecxz
shrl
push
test
mov
movl
lock
lea
xchg
fisubl
aaa
shlb
push
pushf
push
sbb
aaa
mov
mov
sub
test
mov
jge
leave
stc
fucomp
and
cmp
stos
xor
inc
dec
pop
inc
out
bound
les
sbb
dec
movsl
outsl
enter
or
ret
mov
xlat
test
cmp
pusha
cmp
into
int
and
lret
rorb
test
addr16
das
rorb
aas
js
scas
mov
popf
cmc
rcrl
daa
cwtl
les
mov
loope
cmovs
jecxz
jg
sub
or
push
lahf
pop
pop
loop
je
jae
jmp
loope
pop
and
lock
arpl
xor
pop
lds
mov
addr16
inc
add
xchg
ljmp
adc
dec
test
inc
pusha
mov
mov
in
addr16
mov
or
aad
mov
pop
adc
pop
lret
cld
stos
inc
repnz
mov
push
or
xchg
stos
xor
test
movsl
bound
les
fisubl
dec
push
dec
test
scas
sbb
cmp
add
lods
mov
sbb
and
fs
pop
fstpl
inc
push
mov
push
loope
sbb
sbb
scas
outsb
lret
daa
imul
sahf
ds
add
fdivl
addr16
ljmp
mov
dec
rclb
pop
xor
cmp
movsl
push
in
xor
icebp
and
fisttps
into
mov
inc
jge
xor
xchg
sti
out
shrl
add
xchg
mov
into
lahf
push
mov
mov
pop
xchg
xchg
icebp
mov
lret
in
ret
xchg
mov
jg
cwtl
test
sub
xchg
jbe
into
xor
loope
inc
push
inc
out
out
enter
scas
pop
xor
movsl
cltd
scas
pop
mov
cmpsl
out
mov
es
jnp
sub
dec
minps
pop
xorb
je
repnz
adc
enter
movsb
aad
and
mov
inc
les
cmc
cwtl
adc
lret
test
mov
scas
filds
jmp
fs
mov
andb
cmp
sbb
jmp
loopne
mov
in
shrb
nop
es
or
cs
lret
mov
popf
jns
daa
mov
inc
and
mov
or
jecxz
aad
test
mov
insb
pop
mov
cli
movb
sbb
push
mov
negb
in
cwtl
pop
sub
sbb
ror
in
enter
daa
daa
xor
mov
daa
mov
imul
mov
ret
add
jne
gs
dec
aaa
adc
hlt
ss
push
mov
xchg
sbb
cld
xor
adc
fsubrs
mov
sbb
in
mov
mov
arpl
test
stos
xor
dec
cwtl
vrcpps
mov
inc
push
mov
add
cmc
in
loope
cs
lret
ds
rcrl
gs
fdivs
push
mov
fistps
js
ds
xchg
imul
sub
xchg
repz
jl
dec
mov
pushf
push
lea
sarl
mov
and
jne
cmc
mov
xchg
rcll
addr16
xchg
testl
sub
push
loop
dec
enter
xchg
xor
inc
sub
rclb
sbb
or
ret
push
cmp
repz
push
int3
jae
dec
mov
inc
dec
cmp
and
ret
add
daa
or
dec
enter
stos
add
inc
mov
ja
les
outsl
fcmovu
pushf
call
ret
mov
sbb
inc
enter
mov
jl
sub
enter
js
sbb
daa
push
and
mov
mov
mov
cld
mov
xor
adc
add
cmc
and
jae
fcomps
dec
outsb
movsl
sub
cli
sarl
mov
push
aas
xor
fcoms
pop
adc
ljmp
repz
shrl
mov
jle
test
pop
icebp
sub
cmc
mov
lcall
ja
daa
add
push
pop
andl
push
into
cwtl
test
fadds
in
into
cwtl
das
push
js
jne
and
xor
fists
pop
es
pop
call
jl
lret
xchg
jae
xlat
inc
sbb
xor
inc
clc
xchg
jae
rcll
add
popa
push
aam
jmp
mov
pushf
aad
in
mov
cmpsl
cmp
push
aam
testl
test
lds
and
mov
mov
fwait
popa
sub
xchg
push
inc
stos
cltd
shl
sti
js
sahf
mov
scas
or
jl
lods
push
ret
shrl
gs
sub
sbb
push
pop
inc
and
push
cmp
sub
pop
rcrl
dec
adc
cld
push
xlat
jp
insb
pop
xchg
inc
imull
xchg
jae
xchg
sub
mov
jp
jl
pushf
adc
inc
jno
daa
xlat
cltd
sbb
xchg
cli
push
pop
repz
sub
cmp
push
pop
cli
outsl
pop
insb
xor
aad
push
lret
mov
cmp
push
call
lret
mov
mov
jo
clc
test
addr16
call
add
mov
lods
inc
addr16
adc
in
mov
enter
dec
vmovaps
rorb
mov
fwait
adc
int
rolb
inc
dec
xchg
mov
cmc
sti
push
push
xor
inc
imul
mov
scas
sbb
mov
push
in
rorl
in
xchg
fmuls
sbb
push
pop
sub
popf
mov
insl
popf
xor
rorb
cmpsb
sub
xor
jmp
mov
insl
scas
jns
and
fwait
cmp
jle
mov
mov
out
push
mov
mov
sub
xchg
sbb
aad
mov
mov
pop
cmp
jl
jno
push
xchg
sti
ds
xchg
xchg
xchg
outsl
xor
call
jg
cmp
and
stc
adc
mov
dec
mov
popf
imul
xchg
outsb
movsl
jge
add
lds
iret
add
mov
xchg
xchg
out
dec
pop
sbb
adc
rcr
lods
js
and
mov
cmp
mov
cmp
lods
sbb
adc
or
out
mov
enter
out
mov
dec
mov
pusha
out
add
orl
rcll
lahf
xor
add
outsl
adc
out
pusha
bound
call
test
out
clc
sbb
push
fisttpl
fsubp
scas
add
inc
mov
clc
push
adc
call
shl
cld
lds
ja
mov
repz
arpl
in
cs
test
js
mov
neg
roll
add
ficompl
sub
jno
ja
shl
lret
out
add
dec
inc
sub
bound
jno
icebp
lods
lods
jmp
ficompl
pop
jne
dec
inc
pop
jne,pn
gs
out
and
in
or
dec
adc
mov
rol
push
outsb
sbb
fcompl
call
andl
cmpsl
pop
out
cs
js
insb
jl
loope
xchg
xor
mov
xor
cwtl
subl
test
cltd
addr16
call
pop
bound
mov
xor
lcall
add
dec
or
sub
insb
into
cld
cli
out
push
cwtl
push
jecxz
icebp
mov
or
arpl
dec
pop
addl
mov
dec
fidivl
test
insb
mov
outsb
or
pop
icebp
outsl
fsubs
aam
push
mov
fmull
add
jmp
cmp
sub
test
call
mov
sub
in
adc
add
shl
add
inc
mov
call
fmulp
xchg
repz
fistl
add
add
adc
mov
shl
call
repnz
lds
fs
shl
inc
shl
jmp
cmp
lods
sbb
fwait
shl
add
ror
shr
shl
cmp
jne
movsb
in
inc
mov
test
cmp
jne
sar
mov
shr
call
inc
test
and
shl
mov
cmp
jne
in
dec
fsubr
mov
and
rcl
test
ror
sub
call
ds
mov
cmp
lea
not
mov
sbb
shl
shl
jmp
push
lds
fstl
and
shr
or
sbb
cmp
jne
inc
cmpsb
ss
push
lea
and
sar
cmp
jne
and
fs
sub
sar
jmp
movsb
push
cmpl
loope
test
jmp
or
fimuls
adc
call
idivl
fs
shl
and
jmp
add
fcmovnb
mov
dec
shr
mov
adc
jmp
xchg
jne
add
xlat
rcr
or
jmp
test
and
rcl
add
cmp
jne
push
jbe
cmpsl
push
neg
neg
sub
and
jmp
xchg
lods
mov
xor
sar
or
xor
shl
rol
call
jge
movsb
mov
iret
rol
add
adc
cmp
jne
repnz
into
ret
rol
test
rcl
and
ror
sub
cmp
jne
adc
cmpsb
shl
sbb
shl
cmp
mov
call
int3
inc
insl
jnp
fs
dec
or
call
bound
add
shl
aad
add
add
pop
shr
cld
in
or
xor
jmp
cli
out
mov
rcr
dec
shl
xor
sar
cmp
jne
xor
lea
xor
dec
adc
cmpw
je
jmp
syscall
add
rol
xlat
adc
aad
decb
cmp
jmp
mov
jne
lea
mov
jmp
or
lea
add
rcr
sub
rcl
call
repz
rolb
adc
repnz
ror
call
ficoml
cli
add
sbb
jmp
shll
adc
mov
shl
sub
call
xor
cmp
shl
xor
rol
ror
jmp
push
and
jg
movsl
shl
shl
rol
and
call
jmp
mov
ror
or
shl
shr
test
jmp
pop
lods
mov
ret
add
sbb
jecxz
shr
shr
jmp
push
movsl
lea
adc
xor
adc
sar
call
lea
pop
lea
shl
xor
call
cmp
fs
test
shr
rcl
ror
shl
jmp
iret
mov
sti
sar
inc
neg
dec
cmp
jne
loop
cs
lret
sbb
fisubl
and
jmp
and
jecxz
in
jle
and
jmp
mov
test
pushl
rcl
call
and
rcl
rol
ror
adc
shl
neg
call
push
popf
imulb
and
not
adc
shr
rcl
add
jmp
mov
testl
add
int3
mov
call
jge
add
add
rcr
xor
and
jmp
sbb
sbb
add
rol
sar
or
ret
adc
call
test
sub
sbb
dec
shl
cmp
jne
or
sub
enter
push
add
add
lea
loope
lcall
pop
in
lea
shr
jmp
or
cld
lea
dec
and
add
cmp
jne
xchg
rcr
adc
dec
and
rol
call
lea
and
and
inc
call
and
test
sub
rcl
shl
sbb
call
mov
push
sub
not
call
sbb
sbb
jmp
shl
xor
rcr
adc
shr
not
cmp
jne
and
repz
fs
shr
mov
ror
test
cmp
jne
inc
jno
and
fstpt
sbb
ror
jmp
jp
adc
jmp
out
call
or
sub
mov
mov
in
cmp
rol
ror
shr
jmp
movsl
push
jle
rcr
adc
shl
jmp
mov
dec
adc
or
xor
ror
rcr
add
jmp
std
jne
jb
pop
mov
call
shr
stc
lcall
mov
push
adc
neg
shr
shl
cmp
jne
imul
rorb
inc
std
lcall
mov
shl
roll
mov
out
adc
add
fmulp
cs
jne
jb
sub
or
cwtl
xchg
dec
sbb
adc
shl
jmp
nop
pop
mov
lea
rcr
adc
rol
xor
shl
call
push
hlt
lret
imul
add
lret
cli
inc
inc
imulb
pop
xorb
loope
clc
or
adc
sbb
add
cmp
jne
push
gs
enter
in
add
xor
xchg
std
sub
stos
dec
jmp
push
repnz
push
pop
xchg
inc
pop
inc
call
or
adc
and
sub
push
pop
aas
loope
fstpl
imul
sbb
sub
push
inc
aas
mov
ficoml
xchg
sub
inc
out
sub
inc
or
sub
ljmp
test
jo
push
push
ljmp
push
inc
jp
mov
ljmp
push
inc
inc
push
push
decl
sub
js
cmp
sub
jecxz
div
movsb
and
sub
push
inc
add
push
inc
sub
push
inc
aas
inc
pop
dec
ficomps
dec
adc
mov
and
aas
mov
call
sub
jo
cmp
pop
inc
popa
pop
inc
shlb
sub
sub
push
inc
inc
cmpsl
adc
pushl
sub
sbb
pusha
mov
sahf
xchg
sub
and
and
sub
push
or
sub
push
aam
hlt
sbb
sbb
inc
push
sub
lcall
dec
sbb
sbb
hlt
enter
cld
pop
mov
aas
xor
incl
mov
xchg
sbb
sbb
sub
jmp
lcall
cmp
inc
stos
xchg
outsl
sbb
sbb
push
enter
push
inc
nop
inc
inc
adcl
stos
mov
push
inc
inc
pop
pop
jmp
in
cmp
sub
push
inc
xchg
std
sub
inc
and
mov
sbb
sub
std
inc
stc
js
jmp
inc
push
pusha
sub
sub
jecxz
sub
push
inc
fildll
push
inc
inc
mov
div
and
ljmp
sbb
mov
aas
jmp
aas
or
je
mov
xlat
jp
aas
push
mov
ljmp
push
inc
push
adc
arpl
decl
std
mov
and
out
div
sub
pop
inc
mov
aas
shlb
incl
push
fimuls
jno
sub
and
ljmp
push
inc
inc
dec
push
stos
sbb
int
cltd
and
sub
ljmp
push
inc
inc
pop
pusha
lcall
cmpsb
sub
push
inc
cmp
stc
ljmp
push
inc
and
ret
decl
xchg
adc
cmp
sbb
push
inc
adc
sub
xchg
js
cli
div
divl
test
pop
enter
inc
cmp
xchg
cmc
jp
movsb
sub
ljmp
push
inc
idivl
xchg
nop
add
ljmp
push
inc
nop
inc
sub
cmpsb
cmp
ljmp
push
inc
inc
push
or
ljmp
dec
sub
sbb
cmp
push
inc
adc
sub
and
mov
push
inc
and
sub
xor
mov
sub
push
cmp
sub
fsubrs
call
sarb
sbb
sbb
rcr
sub
xchg
lcall
jmp
out
or
sub
push
inc
mov
lahf
sub
jge
ljmp
dec
enter
sbb
sub
dec
and
fcomip
testl
sub
xchg
sbb
push
inc
adc
or
push
inc
adc
or
push
inc
inc
loope
inc
push
sub
js
ljmp
push
inc
and
sub
mov
lcall
popa
andb
push
stc
cmp
push
inc
adc
aas
jnp
pushl
fildll
push
inc
jp
push
inc
dec
imull
push
inc
inc
push
out
div
clc
cmp
mov
lcall
sbb
dec
ljmp
push
inc
adc
cmp
push
inc
aas
pushaw
lcall
xor
push
inc
inc
pop
push
ljmp
push
inc
jo
sub
nop
ljmp
cld
and
ljmp
push
inc
push
dec
jns
mov
ljmp
sbb
sbb
push
inc
sub
bound
sub
add
inc
and
aaa
fwait
add
sub
push
inc
mov
mov
and
push
inc
mov
jmp
sbb
sbb
aad
aas
mov
div
pop
loope
out
rcrb
push
inc
push
es
repnz
ljmp
mov
dec
pop
sub
inc
data16
call
add
jp
insl
pop
ljmp
push
inc
ret
add
jmp
push
sub
stc
mov
push
inc
imul
std
jo
addr16
ljmp
push
inc
push
bound
sub
sub
int3
xlat
div
movsb
and
shrb
push
inc
jo
aas
pop
and
incl
fnsave
sub
sub
add
dec
jmp
push
inc
sbb
ljmp
setl
inc
inc
lcall
lcall
or
jo
adc
repnz
sub
push
inc
sub
sub
decl
and
inc
and
push
inc
fs
aas
faddl
push
dec
dec
sbb
sbb
pop
aas
fnsave
incl
pop
sub
sbb
mov
mov
jmp
sbb
mull
cmp
jns
aas
add
and
pushl
and
sub
aas
mov
ljmp
sub
jbe
ljmp
push
inc
push
mov
notl
mov
sub
test
out
sub
push
sub
test
movsb
insl
lds
push
loop
sub
rcr
sub
aam
incl
nop
incl
cltd
xchg
jae
sbb
sbb
push
inc
adc
cmp
push
inc
inc
aas
les
lcall
insb
jge
in
repnz
sbb
inc
xchg
fcomip
imul
sbb
mov
sub
ja
call
aas
push
rclb
push
std
xor
push
inc
inc
bswap
div
movsb
in
out
mov
sbb
sub
push
cmp
sub
mov
out
imull
push
inc
adc
sub
pusha
js
call
stc
jnp
aam
mov
sbb
push
inc
push
mov
push
inc
push
jg
inc
push
cmp
sub
and
sub
ljmp
out
push
inc
push
loop
sub
stos
fcomip
test
inc
adc
fldcw
push
inc
push
jp
inc
pop
out
divl
push
or
lods
adc
sub
and
pushf
push
decl
jge
divl
sbb
sbb
nop
ljmp
push
inc
push
std
xor
push
inc
mov
inc
rcll
nop
sub
inc
fildll
push
inc
fs
div
imull
push
inc
inc
and
inc
pop
add
lcall
xchg
sbb
sbb
push
inc
xchg
inc
sub
push
inc
aas
mov
dec
pop
xorl
sbb
sub
inc
cmp
ljmp
loop
sub
adc
incl
add
push
shlb
push
inc
inc
dec
jo
ljmp
push
inc
cmp
push
inc
and
jg
idivl
adc
sbb
sbb
incl
jo
decl
dec
cmp
mov
inc
pop
push
fildl
sbb
sbb
push
inc
sub
inc
sti
xor
decl
adc
push
cmp
push
inc
jo
shl
div
inc
repz
ljmp
push
sub
sbb
xchg
div
xchg
cmpsb
mov
inc
shlb
decl
push
xchg
inc
sbb
sbb
push
inc
inc
sub
ljmp
push
inc
aas
or
incl
and
push
inc
push
bound
sub
mov
push
and
jmp
sarb
div
jp
push
inc
sub
mov
inc
or
div
shrb
sbb
sbb
sarb
add
div
imul
fldcw
push
inc
and
push
inc
aas
cmp
js
sbb
sbb
push
inc
stos
aas
inc
out
div
xchg
adc
pop
ljmp
pop
sub
mov
cmp
push
inc
xchg
push
inc
jo
cmp
pushl
sub
xor
call
fmulp
sub
push
inc
push
bound
sub
movsb
fwait
div
idivl
imul
call
div
sub
and
inc
inc
xor
dec
test
xor
ljmp
push
inc
inc
mov
jns
int
push
inc
push
mov
inc
inc
xchg
push
arpl
sbb
push
inc
inc
popa
cmp
lcall
sbb
sbb
sub
and
aas
push
adc
lcall
dec
ljmp
push
inc
inc
int3
iret
div
ja
mov
pop
outsb
sub
inc
sub
xchg
js
push
inc
sub
scas
push
lea
inc
sub
push
pop
inc
sub
negl
push
inc
adc
sub
sub
mov
cmp
cmp
ret
ret
out
sub
aam
ljmp
push
inc
push
shrb
push
inc
push
bound
inc
bound
push
dec
notl
push
fists
div
push
xchg
rolb
pop
sbb
sbb
push
inc
inc
and
testl
inc
inc
lret
testl
pop
mov
aas
mov
imull
rcrb
inc
aas
mov
mov
push
sbb
aas
xchg
out
not
cmpsb
lods
sub
and
sub
inc
out
div
fwait
dec
mov
inc
mov
div
imull
push
inc
jp
stos
dec
jnp
jge
push
inc
sub
push
mov
sub
mov
push
inc
inc
out
pushl
sbb
sub
push
sbb
aas
subb
fmull
inc
jo
pop
push
inc
aas
ret
dec
lcall
sbb
je
pop
sub
nop
iret
div
sub
push
iret
div
pop
nop
fs
lods
push
sub
xchg
jo
dec
div
sub
xor
mull
and
and
ljmp
push
inc
push
std
jo
mov
push
inc
inc
fcompl
incl
pop
iret
aas
loop
ljmp
push
inc
aas
les
ljmp
sbb
push
inc
mov
inc
inc
lcall
ja,pt
push
inc
sub
and
sub
push
inc
aas
mov
movsb
sbb
sbb
sbb
push
inc
aas
xchg
cmp
dec
in
add
add
sbb
mov
push
inc
inc
mov
adc
jg
sbb
sbb
push
aas
pop
sub
or
div
cmp
mov
sub
push
inc
sub
mov
div
pop
sub
sbb
sbb
push
inc
inc
and
sub
test
adc
mov
mov
sahf
std
lds
imull
push
inc
inc
xchg
dec
decl
dec
adc
push
mov
aas
xchg
cmp
jmp
movl
jo
xchg
sbb
ljmp
push
inc
push
xor
inc
mov
xor
sahf
sub
sub
sub
push
inc
inc
iret
lahf
div
enter
cmp
adc
push
inc
jp
fisubrs
dec
push
cmp
sub
insb
aas
sub
pop
dec
inc
or
js
jb
push
inc
inc
and
div
inc
sub
div
xchg
adc
push
fs
sbb
sub
inc
sub
div
mov
adc
repz
xor
lahf
div
sub
push
inc
push
pop
orb
sbb
push
inc
sub
push
inc
aas
ss
ljmp
es
sbb
sbb
push
inc
inc
inc
jno
ljmp
jo
ljmp
push
inc
mull
fidivrs
mov
incl
push
add
push
test
jo
mov
call
inc
shr
div
mov
dec
sbb
sbb
push
inc
adc
aas
sub
xchg
sbb
xchg
cmp
mov
divl
fnclex
mov
sub
adc
ljmp
push
inc
sub
and
aas
push
sbb
cld
addl
sbb
adc
pop
sub
xchg
or
ljmp
jbe
mov
ja
sbb
sbb
sub
push
or
lcall
mov
sbb
add
push
inc
sub
and
div
mov
stos
ret
push
fists
inc
push
and
inc
and
inc
inc
insb
push
into
sub
rolb
lcall
popa
push
ljmp
push
inc
sub
loop
sub
mov
mov
push
inc
mov
inc
xchg
call
mov
push
sub
push
inc
push
loop
inc
mov
push
cmpsb
adc
sbb
sbb
sub
ret
fldenv
sbb
movsb
sub
mov
mov
fiaddl
pop
div
pushl
xor
ljmp
push
inc
mull
inc
fsubl
incl
push
inc
inc
and
sub
stc
mull
pushl
sbb
sbb
inc
insb
adc
incl
pushf
fs
cmp
push
inc
xchg
std
sub
push
inc
inc
pop
out
div
ja
or
popa
sub
xchg
sub
cmp
scas
div
sub
test
sub
jle
push
adc
call
sbb
sbb
mov
div
sub
and
inc
cmpsb
xlat
div
iret
xchg
mov
int3
sbb
sbb
sub
push
inc
aas
xchg
div
js
pop
sub
push
cmp
ljmp
push
inc
cmpb
lcall
or
push
bound
push
inc
push
mov
push
jecxz
inc
jo
dec
mov
sbb
sub
jbe
div
daa
inc
xor
adc
pop
sub
mov
push
inc
inc
sub
pushl
pop
out
sbb
sbb
push
inc
mull
fdivl
xchg
mov
sbb
sbb
fbstp
sbb
ljmp
push
inc
repnz
sub
xlat
sub
sub
push
or
push
inc
sti
sar
lods
add
call
push
dec
fnstcw
sbb
push
inc
repnz
jb
div
dec
daa
out
sbb
sbb
push
inc
aas
mov
div
mov
aas
sub
aad
div
mov
sbb
jp
mov
div
inc
add
lcall
ljmp
ljmp
push
pop
adc
mov
and
aas
xor
div
dec
dec
pusha
sub
push
inc
xchg
inc
sub
rcrb
ljmp
push
inc
inc
stos
div
inc
mov
sbb
sbb
mov
pushl
or
icebp
leave
xchg
mull
ljmp
push
inc
mull
div
out
les
sub
push
cmp
sub
xchg
lahf
div
sbb
ret
sub
imull
push
inc
push
sub
inc
clc
sbb
dec
push
xor
push
inc
cmp
lds
decl
inc
jo
pop
lahf
div
sub
rcrb
aas
shlb
decl
repnz
push
inc
jo
insb
mov
notl
aas
popf
sbb
lcall
pop
sbb
sub
xlat
div
xor
push
inc
inc
xchg
out
div
sub
jp
jmp
inc
inc
add
ljmp
push
inc
sub
scas
scas
div
sub
iret
or
jmp
sbb
sub
daa
adc
pushl
xchg
ljmp
and
push
sbb
inc
decb
ss
dec
ljmp
push
inc
aas
sub
div
inc
mov
jo
xchg
cmpsl
div
sub
or
pushl
pop
jo
adc
inc
sub
or
ljmp
push
inc
sub
sbb
call
sub
adc
iret
div
sub
fbld
sub
dec
or
ljmp
cltd
sbb
sbb
sbb
sub
push
inc
inc
adc
fnstcw
inc
dec
stc
sub
inc
div
jno
fists
ss
sbb
sbb
inc
ljmp
push
inc
dec
aas
ret
dec
incl
mov
sub
dec
push
cmp
inc
sub
lahf
sub
js,pn
enter
cmc
fldl
xor
ljmp
xor
ljmp
shrl
cmp
sbb
sbb
push
inc
mov
lahf
sub
stos
cmpsl
div
inc
fldl
push
inc
ret
inc
adc
sbb
inc
pushl
push
inc
push
and
aas
push
mov
inc
sbb
sbb
push
inc
push
sub
or
ljmp
push
inc
push
and
sub
stc
fldcw
push
inc
push
cmp
mov
lcall
sub
out
incl
xlat
div
repnz
jmp
sbb
sbb
push
inc
inc
cld
and
ljmp
push
inc
push
adc
push
inc
inc
aas
div
aaa
loopne
sbb
push
inc
sub
add
push
inc
sub
imul
add
push
inc
adc
fldcw
push
inc
inc
testl
fisubrs
push
inc
push
bound
push
inc
push
jecxz
sub
sbb
lcall
sbb
sbb
sub
imul
hlt
in
sbb
sbb
push
inc
push
jnp
sub
sub
or
incl
push
pop
sub
sub
mov
div
dec
data16
and
push
inc
inc
ds
div
mov
pop
pop
ja
push
inc
inc
mov
push
inc
adc
cmp
push
inc
fs
or
and
cmp
test
push
inc
push
jle
push
inc
inc
adc
decl
pop
sbb
sbb
push
inc
mov
fistps
incl
addr16
imulb
xchg
jo
sbb
sbb
mov
xchg
idivl
scas
div
divl
sbb
sbb
mov
aas
mov
testl
push
inc
inc
mov
div
out
cwtl
outsl
mov
sbb
sbb
push
inc
sub
movsb
div
aas
dec
out
negl
dec
sub
adc
out
div
sub
and
cmpsl
div
sub
inc
outsl
fcomip
test
sbb
push
push
sub
and
xchg
imull
push
inc
aas
cmpsb
xchg
div
inc
mov
div
test
push
mov
div
sub
and
sub
sub
div
inc
xor
sub
push
dec
aas
xor
testl
push
inc
inc
fistpl
fsubrs
push
inc
sub
aas
lea
add
push
div
sub
inc
inc
dec
xchg
testl
sbb
adc
xor
div
je
fstl
cmpsl
xchg
or
push
inc
add
inc
add
pushl
loopne
push
inc
shll
jo
ja
div
sub
mov
push
inc
inc
out
div
xchg
xchg
and
cmp
xchg
inc
out
dec
inc
mov
inc
adc
sub
sub
inc
dec
mov
hlt
stos
dec
or
sbb
sbb
rcr
inc
jp
div
jle
sub
push
sub
sub
and
push
inc
add
mov
add
sub
stc
ljmp
push
inc
inc
dec
xlat
div
pop
aad
push
and
mov
inc
aas
push
aas
cwtl
sub
dec
test
mov
sub
sub
push
inc
mov
addr16
xchg
stos
jecxz
mov
sbb
sbb
stc
fldcw
push
inc
inc
shlb
notl
scas
jno
push
push
sbb
push
inc
adc
cmp
div
mov
sbb
sbb
push
mov
inc
movsl
xchg
div
pop
xor
aas
sub
ljmp
push
inc
jo
call
mov
imul
pop
push
sbb
sbb
stc
mov
testl
and
aas
lods
xchg
mull
pop
jnp
add
and
pushl
cmp
sbb
pushl
cmp
aas
push
cmpsl
div
nop
push
std
and
sub
push
inc
mov
mull
push
stos
sub
sbb
test
sbb
sbb
jo
add
push
inc
sub
jae
div
rclb
sbb
sbb
push
inc
jge
sub
or
div
or
push
inc
xchg
sbb
ss
stos
xchg
div
mov
inc
xchg
or
push
inc
sub
clc
sub
incl
div
inc
out
add
push
inc
xchg
std
sub
push
mov
mull
jp
push
inc
cmp
jns
aas
mov
imull
push
inc
inc
fstps
add
dec
and
dec
div
sub
fsubrp
xor
xchg
div
inc
lahf
sbb
dec
cmp
loopne
out
lds
dec
and
dec
div
sub
jmp
mov
imull
or
inc
cld
mov
inc
inc
jb
div
nop
ss
je
popa
sbb
sbb
dec
div
xchg
cltd
mov
sbb
sbb
push
inc
sub
push
loopne
ljmp
push
inc
push
rcrb
stos
adc
decl
xchg
pop
sbb
sbb
push
inc
aas
or
sub
sbb
sbb
push
inc
sub
lret
fcomip
imull
cmp
push
inc
add
pop
pop
div
ret
cmc
fs
out
push
bound
mov
div
aas
into
jg
testl
sbb
sbb
push
inc
push
inc
jo
fs
imull
push
inc
aas
call
sbb
fcmovu
xor
xchg
push
adc
inc
jo
aad
div
ret
fcomip
testl
inc
inc
bound
sub
push
inc
mull
div
inc
lea
ds
ret
push
sbb
sbb
push
inc
adc
pushl
cmp
ljmp
push
inc
sub
icebp
add
ljmp
popa
mov
sbb
sbb
push
inc
xchg
std
sub
adc
testl
loopne
mov
mov
sub
add
divl
push
inc
aas
out
xchg
div
xchg
or
clc
jge
fs
fsubrs
push
inc
aas
pop
dec
div
negl
iret
inc
push
cmp
inc
out
div
sub
adc
rcrl
jo
stos
iret
div
inc
aad
pushl
aas
inc
xchg
imull
push
inc
idivl
push
inc
inc
xlat
mov
divl
shll
sbb
inc
inc
or
testl
sub
sub
sar
out
pop
div
cmp
sbb
push
inc
sub
ljmp
and
mull
xchg
aas
inc
pop
div
inc
adc
call
sbb
sbb
push
inc
aas
popa
ja
imull
push
inc
loope
jecxz
incl
mov
xchg
in
and
sub
sub
jnp
div
cmp
push
adc
push
sarl
mov
div
pop
arpl
sbb
mov
call
test
push
inc
jp
mov
div
sub
push
div
sub
sub
ljmp
test
loop
sub
inc
inc
in
mov
notl
out
rorb
push
inc
sub
inc
xchg
div
mov
sbb
sbb
push
inc
and
sub
mov
div
jb
xchg
xchg
sbb
sbb
cmp
incl
xlat
div
out
adc
sbb
push
inc
sub
inc
sbb
jb
mul
inc
push
mov
push
inc
sub
test
sub
test
push
inc
fs
sub
sub
sbb
idivl
enter
sbb
mov
push
inc
inc
mov
xor
mov
push
inc
push
rolb
dec
div
jbe
adcl
sbb
sbb
repnz
pop
out
div
out
aam
sub
push
inc
aas
in
div
or
pop
xchg
stos
mov
push
inc
aas
mov
pop
aam
push
inc
sub
mov
div
mov
out
int
xchg
stos
mov
push
inc
push
jecxz
aas
fstp
div
add
jb
sbb
sbb
push
inc
cli
push
jle
adc
sbb
sbb
sub
xchg
sub
pop
xchg
div
sub
xchg
push
sbb
sbb
push
inc
push
xchg
pop
sub
pop
xlat
div
das
push
mov
sbb
ja
imull
push
inc
push
xchg
inc
bnd
not
mov
inc
je
sbb
sbb
sub
fildll
push
inc
inc
lret
out
div
clc
and
add
fdivr
std
sub
add
out
imul
mull
sub
jle
push
inc
push
and
aas
and
test
out
imul
inc
push
cmp
push
inc
aas
int
div
rcll
mov
sub
sub
sar
and
pop
div
sub
sbb
sahf
imul
sbb
sbb
sub
push
out
negl
insl
sub
aas
mov
push
inc
inc
jecxz
div
jae
mov
sub
adc
jg
imull
push
inc
inc
cltd
div
lock
sub
xor
sub
and
imull
jbe
div
sub
and
sub
sar
inc
out
div
pop
push
xor
aaa
sbb
sbb
imull
push
inc
inc
into
iret
div
xchg
enter
push
inc
idivl
push
inc
sub
test
notl
mov
or
aas
ljmp
loopne
sbb
sbb
push
inc
adc
pushl
icebp
add
ljmp
push
inc
adc
cwtl
inc
mov
div
push
sbb
fldenv
fwait
div
testl
daa
gs
sbb
push
inc
aas
push
div
cs
mov
ljmp
push
inc
aas
dec
cmpsl
div
cmp
push
inc
jne
div
sub
add
div
aam
imul
inc
sub
mov
aas
jp
div
inc
pop
push
div
mov
sbb
sbb
push
inc
and
pushf
pop
div
repz
push
fsubs
push
inc
aas
mov
notl
cmp
push
mov
lods
inc
out
div
sub
push
inc
sub
movsb
outsl
div
and
push
aas
test
inc
jo
push
sub
push
inc
add
mov
loop
div
shr
sub
sub
cmc
inc
div
cmp
dec
xor
sbb
sub
push
inc
aas
imul
jle
push
mov
jnp
xchg
aas
or
div
sub
push
inc
aas
call
push
sti
jo
add
inc
mov
sub
scas
div
xor
outsl
mov
sbb
adc
cmp
push
inc
inc
mov
push
inc
inc
movsl
lahf
div
ret
fisttpll
sub
dec
and
outsl
div
sbbl
shl
rcl
sbb
sar
rol
call
loop
jecxz
ret
or
dec
rcr
and
call
rclb
sar
ror
cmp
and
cmp
jne
adc
add
enter
pop
add
mov
mov
fs
not
adc
not
rcr
call
addr16
or
inc
cmp
jne
pop
call
and
adc
sbb
add
rcl
rcr
call
mov
fldenv
jo
fs
cmp
and
shr
test
jmp
xcrypt-cbc
cmpsl
adc
xchg
or
cmp
jne
and
pop
lea
add
shl
shr
add
shl
jmp
mov
xor
and
and
rol
jmp
adc
test
inc
adc
add
call
jae
aam
lea
add
adc
test
or
call
in
push
add
lret
test
aam
add
xor
sar
dec
shr
call
aas
lcall
sbb
call
mov
pop
inc
or
inc
sbb
test
test
jmp
in
push
sbb
out
cmp
jne
xor
or
add
cmp
jne
or
aam
aam
or
cmp
jne
mov
movsl
dec
sar
adc
and
sar
call
sbb
shlb
cmp
sub
adc
cmp
jne
ret
ret
stos
arpl
adc
sbb
adc
inc
cmp
jne
push
push
das
stc
xchg
rol
sar
call
pop
and
shlb
shr
cmp
jne
loope
adc
lea
shr
test
shl
not
shl
cmp
jne
movsb
xor
pop
sbb
ret
shr
ror
jmp
pop
ja
or
jmp
fnstcw
icebp
adc
int3
neg
jmp
or
mov
std
rcl
shl
and
shl
lea
cmp
xor
add
cmp
jne
xor
outsl
roll
inc
and
not
mov
jmp
mov
pop
ror
rcl
cmp
jne
leave
mov
add
rcr
jmp
pop
jns
inc
adc
clc
mov
shl
mov
cmp
jne
inc
push
xchg
inc
inc
shl
not
mov
dec
rol
ror
cmp
jne
gs
testb
xor
rcl
call
cmc
cld
popf
fidivs
lea
adc
cmp
shl
cmp
call
cltd
sub
push
nop
ja
pop
shl
sub
shl
jmp
jo
xlat
rcl
sbb
call
fwait
int
aas
imul
ror
test
call
inc
add
mov
not
shl
call
add
add
xorl
fs
xor
jmp
iret
gs
decl
shl
sar
rcr
cmp
jne
mov
push
rcr
rol
sub
sbb
jmp
dec
push
jge
insb
add
ret
leave
shr
call
cmpsb
lea
rol
test
jmp
and
fmuls
rcrb
push
mov
cmp
jne
hlt
lret
test
test
clc
and
sbb
add
shl
and
jmp
and
shl
xor
rcr
rcr
shl
cmp
jne
push
pop
sub
ret
fs
sub
mov
ror
shl
test
cmp
jne
and
mov
enter
test
sbb
mov
call
sub
or
ret
not
and
xor
shr
jmp
lods
fisubs
daa
shl
not
jmp
test
inc
lea
sbb
call
cmp
lods
mov
int3
rol
xor
shr
shl
and
ror
cmp
jne
sub
push
fs
shl
rcl
add
xor
call
jbe
loopne
jb
loopne
rol
pop
jmp
clc
icebp
mov
add
add
sub
add
test
cmp
jne
cmp
dec
sbb
adc
sar
cmp
jne
push
rclb
fsubr
dec
sti
ljmp
out
pop
rcr
sbb
sub
not
jmp
mov
loopne
mov
fiaddl
test
shl
jmp
mov
jae
add
shr
add
adc
sub
ror
sub
cmp
jne
mov
lods
test
imul
sub
jb
lcall
pushf
orb
shrb
std
cmp
testb
xchg
out
rcl
dec
call
push
sub
mov
shr
mov
sbb
mov
or
shl
jmp
and
and
lret
fsubs
xor
inc
add
sub
cmp
jne
ret
lds
inc
adc
rol
and
rol
or
jmp
into
or
or
jo
inc
sar
jmp
in
xor
mov
rcr
adc
cmp
jne
add
call
clc
rol
shl
dec
jmp
sub
lcall
sar
rol
cmp
sub
adc
jmp
cmp
dec
dec
sub
call
fsubs
out
sbb
lea
xor
sar
sar
test
call
scas
jne
out
int
xor
sbb
or
cmp
jne
add
es
xor
sar
shl
xor
mov
jmp
mov
jmp
or
adc
jmp
or
pop
mov
xor
rcr
test
test
sbb
cmp
jne
adc
and
rol
sar
sbb
shr
test
call
test
fs
shl
rcl
sbb
sar
xor
cmp
jne
movb
clc
push
shr
add
jmp
xorb
and
cmp
jne
aas
add
rcr
dec
mov
or
ret
rcr
jmp
mov
pushf
shr
ror
xor
shl
cmp
jmp
mov
in
rorb
call
push
mov
lea
sar
dec
neg
ror
rol
jmp
nop
decl
loope
pop
lea
ror
cmp
jne
pop
jbe
pushf
jns
fs
and
cmp
jne
shlb
xor
testl
or
or
cmp
jne
lds
loope
rcr
xor
ror
test
ror
jmp
inc
mov
lea
neg
jmp
mov
fmul
repnz
sub
ror
cmp
jne
cli
cmpsb
bound
add
aam
repnz
jg
xchg
rol
call
ljmp
