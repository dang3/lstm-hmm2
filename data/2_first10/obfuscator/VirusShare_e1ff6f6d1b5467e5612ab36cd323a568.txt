push
mov
sub
push
push
push
call
mov
mov
mov
movzwl
lea
push
add
push
push
push
lea
call
push
call
xor
movl
cmp
jae
jmp
lea
mov
mov
lea
push
lea
mov
dec
not
push
and
push
add
push
call
push
call
mov
movzwl
inc
add
mov
cmp
jb
push
lea
push
call
lea
push
call
mov
mov
mov
mov
add
add
mov
mov
mov
test
je
lea
movb
inc
dec
jne
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
mov
movzwl
xor
lea
movl
cmp
jae
mov
test
je
mov
mov
mov
add
add
lea
mov
mov
inc
inc
dec
jne
mov
mov
mov
lea
movb
inc
dec
jne
mov
mov
mov
mov
mov
movzwl
inc
add
mov
cmp
jb
mov
push
push
add
push
push
call
mov
lea
add
cmpl
jbe
mov
add
push
push
mov
call
test
jne
jmp
mov
mov
test
je
add
push
call
mov
mov
lea
push
push
call
cmp
jae
lea
push
call
cmpl
je
mov
test
je
mov
add
add
jmp
mov
add
mov
mov
test
je
sub
mov
test
jns
and
mov
jmp
lea
push
lea
push
call
mov
push
lea
push
call
cmp
jne
push
lea
push
call
push
lea
push
call
jmp
mov
push
call
mov
push
push
call
mov
mov
test
je
mov
add
test
jne
mov
add
push
push
mov
call
test
je
mov
movzwl
xor
xor
lea
cmp
jae
lea
lea
mov
mov
mov
mov
mov
shr
lea
push
mov
mov
mov
movl
movl
movl
movl
mov
mov
push
push
add
push
call
mov
movzwl
inc
add
cmp
jb
mov
mov
pop
pop
add
pop
mov
pop
ret
add
add
in
sub
push
push
mov
push
push
lea
push
call
mov
mov
lea
push
push
push
call
cmp
jne
push
lea
push
call
lea
push
push
call
jmp
push
lea
push
call
lea
push
lea
push
movl
call
mov
mov
mov
mov
mov
sub
mov
test
jne
mov
test
jne
pop
pop
xor
pop
mov
pop
ret
lea
mov
mov
test
je
lea
lea
mov
sub
shr
test
jle
lea
mov
movzwl
mov
sar
and
dec
je
dec
je
dec
jne
add
jmp
movzwl
jmp
mov
shr
add
add
decl
jne
mov
add
mov
test
jne
pop
pop
mov
pop
mov
pop
ret
add
add
in
sub
mov
push
push
push
lea
push
push
call
mov
mov
add
push
push
add
push
push
mov
call
mov
mov
mov
add
mov
mov
test
je
sub
lea
mov
mov
inc
dec
jne
mov
xor
mov
test
je
lea
xor
imul
add
add
cmp
jb
dec
jne
push
mov
mov
push
add
push
push
call
mov
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
mov
push
push
call
mov
mov
mov
add
add
mov
test
je
mov
movzwl
add
lea
movzwl
lea
mov
add
lea
lea
push
push
push
add
push
call
push
call
mov
mov
mov
mov
add
add
mov
test
je
mov
mov
inc
inc
dec
jne
mov
mov
lea
push
mov
push
push
push
call
push
call
mov
mov
push
push
push
call
push
push
push
call
mov
mov
nop
push
call
pop
pop
xor
pop
mov
pop
ret
add
add
add
add
in
sub
push
mov
push
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
call
cmp
jae
call
push
push
push
push
call
mov
call
xor
mov
div
add
push
push
lea
push
push
call
push
push
push
push
call
mov
mov
lea
push
push
call
test
je
push
call
add
jmp
mov
push
call
push
push
push
push
lea
push
call
mov
mov
lea
mov
lea
push
push
push
call
mov
mov
lea
and
push
push
push
mov
call
dec
jne
mov
push
push
call
mov
push
call
mov
push
call
push
call
mov
pop
test
jne
pop
mov
pop
mov
pop
ret
lea
push
push
movl
movl
movl
movb
call
mov
test
je
push
push
call
push
call
push
call
push
call
mov
test
jne
call
cmp
jne
push
call
call
push
call
pop
xor
pop
mov
pop
ret
add
add
add
add
in
sub
mov
push
push
push
push
call
mov
mov
push
lea
push
add
push
push
movl
call
mov
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
mov
mov
add
push
push
push
push
call
mov
sub
add
add
mov
mov
push
mov
push
mov
call
ret
pop
xor
pop
mov
pop
ret
add
push
mov
sub
push
push
mov
mov
mov
mov
lea
rep
movsw
movsb
mov
mov
lea
rep
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
push
movsw
lea
mov
push
lea
push
movsb
call
pop
pop
mov
pop
ret
add
add
add
add
push
call
mov
call
mov
shl
add
add
mov
lea
mov
shl
add
lea
mov
xor
add
mov
mov
shl
shr
xor
mov
shr
xor
and
shl
xor
xor
mov
shr
mov
lea
xor
mov
add
and
add
shr
xor
xor
mov
mov
mov
shl
shr
xor
mov
shl
shr
and
xor
xor
mov
shl
mov
shr
xor
mov
and
shr
xor
shl
xor
pop
pop
mov
mov
xor
pop
ret
add
add
int3
jmp
cmpb
pop
sub
adc
std
jbe
push
dec
sub
dec
pop
rcll
jle
push
mov
or
xlat
popf
hlt
ljmp
out
cmc
mov
and
pusha
bound
jnp
inc
in
and
or
jno
test
cmc
or
xchg
dec
mov
sti
nop
out
pop
jae
lds
insb
add
dec
std
sbb
jb
jmp
call
xchg
mov
dec
and
push
jmp
adc
addl
pop
in
mov
or
lcall
lds
je
mov
adc
fcmovne
inc
sbb
mov
pusha
hlt
mov
aas
call
or
nop
inc
mov
adc
setbe
jnp
adc
sti
fldenv
imull
call
xchg
dec
cmpsb
mov
lds
ljmp
lods
ret
popa
pushf
jb
inc
adc
mov
pop
test
pop
and
rcrb
in
aam
and
sbb
ss
nop
jle
mov
pushf
sbb
mov
adc
inc
push
push
fwait
enter
sbb
mov
add
imul
sbb
sub
dec
movsl
in
bsf
push
sbb
mov
and
in
push
nop
enter
cmpsl
in
ljmp
orb
test
negb
adc
xchg
and
addb
shll
lcall
insl
repnz
push
imul
cltd
movsl
sub
jno
mov
jno
cli
cmp
js
loop
jmp
roll
pop
in
sbb
das
or
xor
mov
fldt
sub
pop
xchg
lret
push
incb
fcmove
in
cld
dec
ret
xchg
je
bound
das
jle
push
jns
mov
cltd
cmp
icebp
cmp
jno
cmp
lock
jbe
and
cmp
mov
xor
mov
dec
mov
cmpsb
sbb
std
outsl
scas
int
sub
orb
adc
cwtl
movlhps
xchg
pop
and
jg
xchg
fmuls
mov
ffree
mov
insb
mov
sahf
jl
loop
push
push
ret
sbb
mov
es
inc
dec
add
sti
lahf
push
mov
and
mov
jae
movsl
and
sub
das
iret
jne
push
test
and
loop
mov
adcb
cmp
push
insb
sbb
data16
pop
imul
mov
push
inc
cld
test
xchg
dec
mov
rcr
ret
fdivrp
push
inc
mov
lds
mov
and
lds
pushf
cmp
xor
push
mov
addr16
mov
add
jb
int3
test
fdivr
jp
sbb
or
inc
jne
mov
add
push
mov
dec
add
fcomps
call
popa
and
inc
nop
jns
jg
jg
jmp
push
cmp
dec
cli
mov
mov
mov
bound
sarb
mov
inc
adc
stos
add
xchg
mov
xor
mov
or
cwtl
notb
sub
arpl
dec
pop
movsb
out
inc
aam
aad
and
push
sbb
adc
fisubs
std
ss
aam
add
pop
push
lret
enter
pop
jne
ffreep
add
das
movl
pop
pop
neg
cmp
repnz
adc
in
dec
mov
and
sbb
pusha
arpl
fxch
cwtl
popf
jl
gs
int3
inc
out
pop
fmuls
hlt
mov
push
inc
add
dec
cmpsb
mov
mov
mov
cli
call
cld
mov
bsr
popf
imul
test
fldt
mov
sbb
mov
mov
shrl
pop
cmp
das
inc
pop
adc
das
xchg
xorb
fimull
adc
push
add
push
or
mov
xor
int
lret
jb
sbb
jne
in
es
repnz
lret
aam
push
popa
push
sbb
aam
iret
add
nop
loop
push
xchg
lods
jo
push
mov
js
rcrl
jae
lds
outsl
or
rclb
xor
fdivl
or
mov
xor
fwait
inc
adc
mov
jg
xchg
xor
aad
xchg
ljmp
xchg
lods
cmc
movsl
sub
cmp
or
and
xchg
fidivl
scas
add
cmpsb
lcall
loopne
into
and
fcomi
mov
and
mov
es
fstpt
cmp
jmp
repz
fidivl
lods
mov
push
dec
inc
push
push
cmpsb
dec
xor
mov
xchg
jecxz
xchg
and
and
dec
js
and
xor
pop
insb
lds
popa
shll
cmpb
out
and
inc
jns
push
cmp
stos
outsb
pop
xchg
inc
ret
push
push
lcall
imul
jle
stc
lods
in
sbb
or
or
and
aaa
sbb
mov
jbe
movsb
push
arpl
sub
aaa
jl
bound
jp
mov
aas
mov
xor
outsl
or
stos
mov
loopne
pop
fimull
mov
xor
in
stos
mov
adc
inc
int
mov
xor
add
add
add
add
add
add
add
movsl
inc
add
aam
add
add
nop
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
jb
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
or
xchg
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
xchg
bound
jb
outsb
push
imul
jg
fs
add
add
add
mov
mov
add
lcall
cmpsl
loop
add
lcall
int3
lcall
lcall
cli
lcall
std
lcall
cld
lcall
add
add
mov
add
add
add
rolb
add
add
add
lds
add
add
pop
dec
add
add
jne
add
loopne
add
sbb
or
add
add
push
adc
add
mov
add
mov
add
rorb
rclb
add
inc
add
add
add
add
adc
add
add
add
ja
add
add
add
cmc
rclb
add
adc
add
add
aad
adc
add
add
mov
adc
add
add
mov
add
adc
add
rolb
add
add
add
sub
add
add
rclb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
addb
loopne
push
pop
xor
add
add
add
add
or
xor
add
add
add
add
add
adc
add
loopne
jb
jb
add
add
adc
add
rclb
xchg
add
add
incb
add
add
add
add
add
add
shlb
add
rolb
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
or
mov
cli
dec
add
add
push
add
pop
pop
sti
call
in
sbb
lea
push
push
xchg
or
add
adc
outsl
idiv
decl
cmp
sbb
push
add
and
fidivrl
mov
pop
sbb
pop
push
in
push
or
clc
mov
frstor
fildl
push
pop
xchg
outsl
das
mov
mov
pop
ret
pop
add
push
dec
or
push
mov
sti
sub
cmp
push
test
cmp
adc
adc
stos
mov
test
je
add
xor
pop
or
imulb
add
and
test
je
sahf
push
or
push
push
push
xlat
rol
fwait
sub
cld
pop
dec
mov
out
add
jb
sbb
sbb
xorl
je
push
push
sbb
mov
push
cmp
fildl
jne
fidivl
mov
jb
test
mov
mov
add
lods
or
or
lahf
push
dec
or
repz
add
adc
hlt
cmp
outsl
ss
sub
pop
and
inc
xor
push
clc
pop
pushf
sub
push
clc
push
outsl
sarb
insb
push
data16
inc
push
push
dec
js
xchg
cld
adc
cs
adc
insb
lret
push
sbb
mov
aas
clc
push
and
xor
aaa
int
pop
inc
pop
cmp
ret
dec
sub
xlat
and
lock
jmp
mov
call
push
push
roll
pop
js
sahf
push
push
push
mov
repnz
daa
sub
mov
fisubs
hlt
push
stc
stos
push
imul
inc
cmp
dec
pop
cld
push
xor
mov
data16
push
jne
cmpl
incl
nop
and
icebp
xor
add
sbb
enter
divl
fst
loopne
cmpsb
je
xorl
fnstenv
nop
add
mov
call
call
inc
push
add
push
inc
and
movsb
hlt
push
mov
nop
fmuls
aaa
push
push
daa
mov
mov
or
or
sbb
out
imul
int3
mov
cmp
test
sub
ds
jl
outsl
push
jne
pop
xor
cmp
add
cmpsl
mov
add
adc
push
xor
and
push
mov
das
ret
inc
roll
lea
mov
mov
stos
mov
and
inc
lret
scas
mov
les
pop
sarl
pop
call
icebp
cmc
stc
push
mov
std
mov
dec
sahf
xchg
add
xor
or
in
pop
xchg
jne
loopne
mov
adc
in
push
movsl
pop
adc
scas
clc
cmpl
loope
add
jmp
outsl
js
sbb
xchg
lea
insl
ret
pusha
inc
xchg
adc
add
adc
ss
dec
and
and
xor
xchg
mov
movb
aad
cmp
aas
mov
inc
inc
inc
fiadds
imul
mov
out
inc
inc
or
inc
xor
jl
jge
jle
fwait
enter
push
mov
cmpsl
fldcw
arpl
testl
mov
mov
add
push
jb
test
rclb
sbb
push
movsb
jns
cmpsl
push
insb
push
adc
int
insb
pop
or
arpl
fwait
mov
xchg
imul
out
popa
cs
rcrl
gs
mov
cmpsl
mov
fimuls
loopne
loop
inc
cs
idivb
push
out
mov
arpl
sti
push
movsl
dec
scas
mov
out
cmp
mov
xchg
hlt
xchg
xchg
out
ret
les
shrb
pusha
xchg
imul
or
insl
dec
outsb
scas
bound
int3
and
jno
jb
jns
out
in
jae
adc
add
add
testb
lea
add
xor
xchg
or
or
js
mov
add
push
push
jbe
jmp
xor
es
test
lea
dec
cmp
jge
out
xchg
or
xor
je
inc
pop
shrb
mov
test
push
pmulhw
cmp
jp
xor
mov
ds
push
dec
mov
and
push
pop
rcll
pusha
push
rorb
lahf
xchg
repz
pusha
dec
int3
jns
es
cmpsl
sbb
cmp
mov
lret
pop
xchg
xchg
movsbl
xchg
jne
movsb
jl
dec
sbb
test
je
les
dec
cmp
and
inc
test
cli
push
sti
jge
je
jmp
jne
roll
adc
repz
mov
xlat
test
add
ds
mov
add
fimuls
pop
int3
test
icebp
pop
loope
in
sahf
dec
and
xor
jb
or
outsb
fs
lea
test
test
adc
inc
xchg
dec
add
lret
les
pop
jo
mov
cmpsl
iret
sbb
jne
mov
inc
and
adc
push
loop
shl
mov
push
inc
add
sbb
rolb
add
xchg
inc
add
mov
loop
adc
test
or
mov
arpl
lea
push
push
add
sbb
xchg
inc
stos
adc
lahf
xchg
sub
and
test
mov
and
push
notl
adc
sbb
dec
rcrl
or
or
cmp
mov
jmp
inc
aas
push
or
imul
adc
cmp
xchg
push
push
push
movsb
shlb
dec
adc
mov
xchg
sub
or
xlat
add
enter
int3
test
roll
in
outsb
aam
or
scas
fstpt
cmp
jae
hlt
add
sub
pop
push
aam
add
int
cs
out
mov
sarl
gs
mov
ljmp
cmp
add
xor
dec
pop
ret
add
out
hlt
fldt
jl
imul
and
cmpl
xchg
mulb
push
xorl
das
cmp
sbb
add
push
adc
jecxz
mov
or
adc
xor
divl
lahf
pop
xor
xchg
sbb
pushf
mov
in
stos
add
test
scas
sarb
mov
loop
jbe
cmp
pop
adc
lock
inc
into
stc
pushf
add
call
jae,pt
mov
pop
sbb
dec
sarw
push
dec
add
sarb
scas
inc
lea
adc
loopne
pop
rcrl
add
scas
js
or
push
sbb
test
inc
xchg
lea
or
in
sbb
add
adc
lods
adc
xor
clc
sahf
jns
push
adc
in
and
push
jo
sbb
adc
xor
cmp
in
inc
dec
lods
mov
nop
xorl
mov
lods
add
sbb
inc
sbb
add
push
test
push
mov
pop
hlt
push
hlt
mov
cmp
lret
sub
icebp
xchg
sub
or
xorl
push
nop
and
mov
fsubrl
xlat
mov
jmp
fwait
in
push
adcl
push
mov
push
addr16
xchg
xchg
sti
mov
dec
fiadds
cmp
xchg
and
lods
sbb
mov
dec
outsl
popa
imulb
orb
cmp
add
lahf
push
push
test
je
jl
xor
fistps
push
push
lahf
jl
sbb
into
incl
mov
pop
mov
shlb
jp
in
or
jp
inc
jecxz
add
inc
je
movsb
ja
jmp
loop
mov
int3
push
fnsave
xor
es
and
add
adc
test
lret
push
hlt
sbb
scas
or
cmp
clc
imul
mov
add
xchg
in
scas
mov
pop
sbb
mov
sub
jb
pop
pop
out
inc
fwait
sub
dec
adc
cs
cs
lcall
pop
pop
mov
mov
adc
psraw
cmpsb
jge
imull
icebp
clc
add
jne
and
fsubr
xchg
or
adc
incb
inc
or
jb
add
je
mov
call
shr
mov
and
add
aas
pop
mov
pop
ja
pop
dec
push
pop
push
add
mov
pop
addr16
ljmp
and
ljmp
rcrb
rolb
pushf
push
mov
fwait
cmpsb
imul
clc
cld
fisubrs
cmpsb
sbb
push
adc
int3
mov
mov
out
outsb
cmpl
sub
aaa
sbb
enter
lea
int3
xor
and
lock
scas
jo
or
shr
or
pop
ret
test
push
movsb
clc
jl
mov
inc
lods
repnz
mov
es
jb
pushf
js
adcb
fiaddl
sbb
inc
ret
or
mov
xlat
or
pop
jbe
subl
in
adc
arpl
xor
adc
pop
xchg
movsb
lock
pop
rcrb
aam
sbbl
mov
mov
fmull
lahf
jbe
jo,pt
add
scas
cwtl
lea
mov
jge
data16
push
cmp
test
mov
std
int
pop
inc
jb
cwtl
sub
rolb
xchg
inc
daa
lea
pop
je
jmp
jmp
sub
dec
add
repz
ret
push
test
xlat
add
lahf
xchg
mov
icebp
rcr
in
push
sub
nop
inc
enter
mov
imul
sbb
leave
xor
xchg
mov
cmp
test
pop
sub
cmc
push
push
push
js
xchg
mov
push
inc
pop
pop
loopne
fidivrl
mov
clc
call
das
push
add
test
dec
jmp
rcrb
push
xchg
jl
xor
sbb
or
fcom
mov
dec
cmp
idivb
mov
mov
inc
cmp
ret
popa
fsubs
test
movl
jo
lock
inc
add
or
notl
mov
xchg
rorl
pop
aam
push
mov
push
lahf
cmp
sub
std
push
adc
jne
or
push
push
or
sub
adcb
push
loopne
push
push
or
xchg
mov
inc
push
fidivrs
sub
stc
mov
neg
sub
fcmovnb
add
cli
roll
push
jns
lret
or
fmulp
jl
test
cmp
lret
insb
mov
mov
xchg
jne
jp
das
je
jle
and
js
int
andb
gs
push
bound
jmp
jmp
jb
jbe
insb
gs
imul
gs
inc
xor
fs
insb
pop
ljmp
dec
sti
bound
jb
push
arpl
outsb
je
and
ret
mov
data16
inc
mov
arpl
jae
push
jnp
pop
dec
pop
pop
mov
dec
push
push
xor
sbb
or
push
inc
call
cs
out
imul
inc
sarl
cmp
xchg
jae
outsl
cmp
push
jne
scas
aaa
repz
dec
jae
outsl
ja
xor
gs
fisttps
add
dec
popa
out
push
jns
je
insl
pushf
outsb
outsw
add
sti
pop
pop
lock
dec
inc
inc
data16
inc
push
inc
pop
dec
dec
inc
mov
insb
add
xchg
les
shl
mov
out
sahf
jo
inc
sub
icebp
sub
in
jmp
sarb
push
pop
mov
pop
mov
int
mov
imul
jb
insl
and
sbb
outsl
je
mov
outsl
or
and
outsb
and
add
dec
push
and
mov
cs
stos
div
ret
mov
or
mov
or
pop
sub
lods
mov
pop
xchg
push
pop
xchg
adc
push
imul
sti
pop
rorb
add
loopne
add
or
or
xchg
pushf
jne
adc
nop
xor
mov
add
sbb
jmp
cmp
cmp
dec
ret
cmpsl
popf
lahf
xor
dec
push
inc
push
fwait
pusha
mov
ret
add
add
cmp
nop
fiadds
and
jmp
fsubrs
jb
popa
je
testb
or
aam
inc
cs
test
cmp
xor
sahf
stos
out
js,pn
jb
add
push
dec
xor
mov
mov
outsl
push
in
aas
jo
ss
sub
test
inc
pop
rcrl
dec
adc
outsl
loope
out
push
push
ljmp
adc
adc
ficompl
mov
les
push
ret
mov
add
push
cld
jle
aaa
sbb
push
out
mov
mov
or
dec
mov
sbb
ss
mov
add
data16
cmp
je
ret
mov
sub
push
dec
pop
mov
insl
je
inc
cmpl
cwtl
add
jne
jmp
cmp
negb
xchg
ss
clc
lea
clc
add
das
sub
incl
je
or
pop
inc
adc
jns
and
inc
push
lea
pop
nop
nop
mov
sub
xor
and
mov
enter
or
idivb
sbb
xchg
push
cwtl
sbb
add
mov
jo
das
inc
arpl
pop
adc
or
loopne
add
add
sarl
or
push
into
loopne
add
fisttps
jecxz
push
pusha
adcw
iret
xor
cmp
les
inc
xor
rclb
testb
jecxz
fstl
and
fmuls
sti
js
mov
xor
dec
or
incl
xlat
notl
sbb
push
mov
push
xor
push
xlat
sub
mov
nop
mov
stos
push
and
push
nop
or
loopne
call
clc
cwtl
sub
ret
xor
xor
lock
incl
cmpsl
mov
sbb
ret
push
fisubl
sub
ss
mov
jns
mov
mov
imul
dec
mov
call
mov
jo
sub
scas
pop
lds
idivb
in
lahf
jnp
pop
pop
mov
jg
outsl
xor
cld
mov
push
add
repz
push
jb
mov
pop
cmp
lret
pop
adc
adc
dec
xchg
pop
push
mov
div
outsl
and
pusha
ljmp
and
push
call
push
xor
faddl
psraw
mov
sarl
inc
push
lock
mov
stos
movsb
xor
push
call
repnz
xor
test
fildl
scas
lea
cltd
arpl
or
pop
imul
and
insl
cmpsl
pop
and
xchg
push
or
fisttpll
leave
mov
add
cli
and
cli
mov
das
mov
rcll
adc
test
mov
sub
das
popfw
testl
lods
int3
inc
test
cmpsl
aad
in
cwtl
fwait
ds
pop
out
mov
push
sbb
fwait
dec
ss
adc
push
fldlg2
movsb
adc
lock
adc
jecxz
lods
mov
lea
insl
pop
lock
add
push
mov
push
or
push
std
pop
pop
mov
cmp
jb
mov
cmp
ret
add
push
fnstcw
mov
sub
mov
fs
ficoml
push
test
mov
adc
repnz
movb
ficomps
or
add
inc
pusha
cmp
xor
nop
aam
mov
push
push
sbb
mov
pushl
mov
adc
add
add
mov
push
add
or
andb
sbb
push
mov
lret
jb
mov
mov
dec
or
or
shll
lods
push
sbb
sti
lods
loop
push
cld
xor
push
sbb
movl
sub
iret
rcll
and
sbb
push
push
push
add
sbb
sti
cvtps2pd
ret
or
cmpsb
adc
cmp
or
and
inc
mov
int3
fwait
aas
int3
insb
mov
xor
or
mov
fldenv
push
or
call
push
fdivrl
es
cmp
jle
ss
adc
test
or
int3
sub
mov
sbb
sub
scas
jns
pop
sti
xor
je
pop
add
cmp
xchg
inc
xor
xor
push
sub
and
pop
adc
add
jae
sub
xor
inc
and
or
add
sub
push
sub
lea
dec
or
imul
dec
or
adc
push
inc
pop
mov
add
fwait
call
addb
dec
test
xor
add
mov
cmp
sub
fisttps
cli
adc
sbb
adc
xchg
outsb
and
inc
inc
inc
adc
loopne
sub
jae
and
cmp
std
ljmp
lcall
movsl
mov
jmp
adc
push
jmp
add
lods
push
jae
jmp
or
or
push
sbb
push
add
hlt
stos
scas
inc
push
dec
fdivr
rclb
xchg
repnz
jb
bound
in
pop
dec
sahf
add
cmpsb
sub
jbe
bound
mov
fidivs
xor
sub
clc
sub
mov
sub
push
adc
fidivrl
mov
cs
rorb
mov
xor
push
dec
inc
push
inc
sbb
sub
dec
or
ss
mov
aas
and
je
jnp
jl
lods
cmp
int
push
jge
dec
xor
mov
push
in
cmpl
or
test
inc
jb
es
push
xchg
xchg
pop
out
inc
xchg
je
jbe
or
out
jmp
nop
push
or
repnz
es
adc
adc
xchg
xchg
sub
jle
jl
pop
inc
add
inc
add
test
add
adc
arpl
enter
sub
fbld
push
inc
add
popa
xchg
fimuls
dec
mov
rol
push
test
xor
out
bound
and
add
xor
add
xchg
dec
sub
out
imul
imul
xchg
hlt
or
dec
pop
or
dec
pusha
inc
outsb
aas
push
out
ret
or
inc
addb
in
dec
shr
jl
add
pop
xchg
cld
sub
add
push
inc
add
mov
adc
fwait
movsb
adc
movsl
dec
rolb
lret
sbb
insb
out
push
inc
add
mov
out
dec
out
and
outsl
out
inc
add
adcb
xchg
cmp
imul
push
mov
add
push
outsl
and
test
sahf
wrmsr
adc
adc
inc
push
outsl
xchg
out
cmc
sub
inc
cmp
out
jle
jns
push
test
out
js
and
cwtl
and
add
lock
decl
xchg
mov
or
adc
sub
add
lret
ja
and
lods
inc
adc
adcb
adc
dec
out
and
mov
add
es
inc
cmpl
movsb
add
push
out
push
mov
movsb
test
pusha
xchg
out
add
andb
inc
or
clc
cmp
or
movb
add
les
daa
mov
mov
lahf
dec
dec
or
add
setp
sub
jmp
dec
mov
add
inc
aaa
jo
inc
xor
adc
mov
sub
sbb
push
push
sbb
fisttpll
mov
ljmp
cld
push
sbb
sbb
aam
push
mov
popf
out
je
push
add
lahf
push
in
push
push
ss
push
clc
sti
enter
push
shlb
rcrl
cmc
shrl
aad
cmpsl
inc
shrb
cmp
sbb
jp
pop
jl
movsb
cmp
mov
adc
or
mov
dec
lret
rcrb
sbb
adcl
xorl
xchg
mov
clc
jge
dec
movsb
push
jge
sbb
ret
dec
and
bound
rolb
out
les
sbb
push
call
add
xchg
nop
in
add
out
push
nop
sbb
into
cmp
in
xchg
out
cmp
dec
call
sbb
xchg
cmpl
shrb
xor
cmp
cmp
imul
sbb
ss
jne
ret
xchg
movsb
sub
aam
gs
cwtl
rcrl
add
out
shlb
je
push
mov
or
je
pop
insb
rol
add
add
or
daa
add
into
adc
sub
sub
jne
sub
dec
add
data16
ret
jns
mov
es
push
and
movsl
mov
in
lea
push
adc
lea
mov
jmp
inc
push
dec
inc
aaa
clc
push
mov
add
push
pusha
sahf
xor
jl
pop
push
lds
xor
xchg
push
push
call
inc
jo
inc
push
inc
hlt
cmp
cmp
xchg
in
xor
roll
insb
jno
mov
je
xor
dec
push
xchg
cmp
fs
sbb
jno
push
pop
test
pop
lcall
sbb
sbbl
sub
fwait
aam
scas
aam
dec
cmp
clc
add
js
sbb
mov
cld
cmp
cmp
push
imul
cwtl
shlb
repnz
add
jle
sbb
aam
inc
add
push
daa
shll
sub
pop
in
js
mov
rorb
pop
jle
sbb
lsl
call
test
mov
or
sbb
stc
sub
fnsave
or
lea
test
inc
and
adc
lock
sar
into
stos
xchg
jl,pt
daa
call
cmp
cwtl
call
insb
loopne
cmp
xor
xor
xlat
rcr
roll
sbb
mov
dec
test
sub
xlat
out
cs
jb
rcrl
push
add
pop
test
push
dec
pusha
sub
push
adc
inc
add
push
mov
iret
jae
out
sbbl
andl
out
stos
xchg
mov
sbb
je
loop
pop
pop
mov
add
mov
stos
mov
nop
or
sbb
and
lret
lock
or
shll
cmp
xchg
dec
enter
andb
sbb
ret
xlat
or
xchg
jbe
push
aas
pop
push
les
shlb
leave
mov
adc
pushl
ds
ror
pop
cmp
ror
inc
bound
js
lcall
into
in
or
dec
sahf
cmpsl
sbb
pop
push
out
sahf
js
xchg
cmpsb
push
ja
repz
push
shlb
inc
jbe
push
sub
cmp
repz
fs
repz
nop
mov
sahf
cmpsl
stc
cmp
test
sbb
leave
incb
push
mov
add
out
dec
lcall
decl
popa
jo
sub
imul
sub
sti
shll
push
popa
fs
xor
add
lahf
or
out
jbe
je
add
mov
jb
adc
outsb
aas
or
je
jne
jns
pushf
dec
arpl
addr16
cli
jns
xchg
das
inc
outsb
jne
xor
out
pop
sti
js
xlat
jns
push
popa
insb
jne
out
ja
sub
and
pop
movsl
pop
ja
rolb
or
popf
inc
call
and
or
push
outsl
outsl
je
or
xor
pop
jae
arpl
cs
in
bound
stc
or
jb
push
cmp
pop
and
sbb
jne
inc
popa
loopne
shl
inc
mov
out
les
int3
dec
mov
cmp
xor
es
mov
test
sahf
and
add
sub
jne
push
stos
mov
mov
fisubrs
out
pop
adc
or
cmpsl
je
xchg
inc
add
arpl
imul
dec
push
or
and
aad
dec
movsl
mov
cmpb
popa
sbb
mov
fs
fs
data16
das
adc
pop
pop
inc
jle
cmpsl
mov
mov
sbb
pop
jo
push
outsb
stos
jae
push
rcl
imul
fwait
out
fucomp
xchg
inc
add
jb
imul
add
mov
int
insl
xorl
popa
loop
pushf
add
push
adc
les
cmpsb
divb
popa
imul
dec
bound
scas
mov
imul
add
push
inc
sub
js
or
xor
inc
push
cwtl
inc
add
xlat
xchg
push
lret
out
outsl
je
add
inc
add
dec
ss
pop
sbb
push
ljmp
lret
pop
or
jo
fisttps
insb
and
or
in
lret
add
orb
inc
out
jne
jp
sub
jmp
jo
mov
iret
repnz
cmpb
jmp
ss
xorb
aad
cmp
data16
mov
fwait
popa
pop
out
dec
call
aaa
push
adc
add
mov
jo
imull
out
fdivrs
push
ss
push
xchg
shll
ds
mov
mov
subl
push
dec
sub
jmp
jo
mov
xor
adc
int3
and
fdivl
cmp
jo,pn
or
leave
and
dec
inc
push
dec
inc
push
xor
ja
mov
xor
xor
mov
and
bound
xchg
push
call
inc
imul
add
and
jo
cmp
sub
mov
add
fmull
arpl
arpl
jns
arpl
and
ja
dec
outsb
sub
imul
inc
rolb
push
mov
cmp
in
pxor
mov
push
inc
inc
push
inc
push
dec
jge
jmp
cmpsl
push
mov
popa
mov
stos
push
push
inc
cs
dec
mov
xor
bound
insl
dec
dec
je
dec
cltd
push
jno
and
pop
inc
add
ds
mov
dec
pop
pusha
dec
mov
outsl
aas
push
pusha
mov
jmp
test
xor
rolb
xor
cmp
sub
nop
push
js
dec
xor
negl
movsb
jns
das
add
sbb
addb
mov
adc
pusha
dec
test
in
lods
cli
jg
mov
jns
js
cltd
outsb
jae
and
fwait
push
mov
xor
insl
xchg
outsl
cmp
insl
jbe,pn
and
mov
push
add
and
cwtl
or
and
pop
jp
sub
mov
jle
outsl
jb
sbbl
xchg
out
outsl
and
jno
lahf
gs
jae
testb
jl
je
pusha
out
dec
cli
insb
and
mov
or
popf
jb
jne
inc
arpl
int
pop
sbb
into
adc
jns
mov
imul
ss
sbb
fistps
mov
ds
inc
add
dec
inc
pop
pop
adc
pop
xlat
push
roll
pushl
test
push
xor
inc
xor
fdivs
fidivs
or
xor
xor
mov
or
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
fdivs
jmp
inc
xor
aaa
xor
inc
push
xor
push
xor
out
xor
dec
mov
scas
xor
xor
bound
xor
xor
xor
xor
xor
sar
pushl
pop
xor
xor
xor
inc
jnp
xorb
xchg
es
xor
xor
xor
popa
xor
xor
dec
pushl
add
xor
sbb
xor
cmp
inc
xor
addb
pushl
divb
xor
inc
ss
ss
cltd
ss
ss
ss
test
aaa
pop
aaa
sub
aaa
jne
jge
mov
mov
xlat
aaa
loope
lock
dec
cmp
cmp
cmp
sub
cmp
pop
cmp
cmp
or
jbe
mov
sub
jne
jl
mov
ljmp
mov
cmp
cmp
cmp
dec
dec
cmp
cmp
cmp
leave
addr16
cmp
cmp
scas
stos
cmp
jmp
sub
jno
cmpl
shr
add
ljmp
jp,pt
mov
ds
or
cmovp
dec
aas
pusha
aas
jne
mov
mov
mov
jg
mov
sbb
inc
xor
dec
pushl
pusha
xor
mov
cmp
cmp
sub
cmp
cmp
cmp
dec
lock
cmp
cs
cmp
fs
xchg
cmp
fisttpl
adc
xor
xchg
je
sub
mov
sub
cmp
dec
int
aas
imul
in
iret
xor
call
adc
and
mov
mov
xor
xor
push
xor
pushl
outsl
xor
xchg
mov
mov
xor
inc
or
xor
xor
movl
jmp
cmpsb
xor
xor
testl
xor
call
pushl
aas
loope
xor
out
cmpsb
xchg
xor
shrl
popa
out
xor
or
or
adc
adc
mov
out
js
addr16
mov
adc
adc
inc
push
mov
cmp
push
add
pop
mov
int
cld
cmpsb
sahf
pop
and
sahf
stos
pop
cmpsl
sahf
int3
push
xor
lahf
sahf
pop
cmp
rorb
dec
daa
nop
cld
dec
lcall
dec
outsb
shl
sub
ds
ret
lds
das
mov
shlb
mov
insl
sarl
pop
outsl
and
xor
into
jbe
jle
add
cs
orl
js
or
pop
fists
xchg
jg
filds
and
add
or
daa
xchg
iret
jp
add
ljmp
repz
lahf
das
xlat
out
lock
js
les
das
js
rolb
clc
mov
pop
insl
push
pop
nop
adc
jns
out
test
aam
repz
repz
adc
repz
scas
outsb
orb
cmp
in
add
adc
sahf
out
and
inc
pop
cmp
js
out
inc
add
dec
mov
add
inc
lods
xchg
test
jae
dec
pop
out
inc
das
fistps
mov
push
jns
inc
je
push
cwtl
jo
jbe
push
js
push
ja
outsb
cmpsl
stos
stos
push
push
pop
jb
fdivr
bound
push
outsb
arpl
bound
adc
mov
addr16
imul
cs
push
dec
inc
dec
sbb
xchg
push
sub
and
jbe
push
fildl
dec
push
lock
or
adc
mov
dec
dec
outsl
bound
testb
out
and
cltd
push
and
push
jl
jg
adc
arpl
lds
lds
jo
jae
dec
push
dec
fstl
mov
jp
dec
outsl
bound
push
andl
fucomi
ret
pusha
test
xor
pop
inc
pusha
xchg
or
xchg
inc
sbb
lods
fwait
mov
divb
es
inc
inc
lds
push
mov
pop
stc
sbb
lock
std
testl
mov
dec
fst
aas
pop
les
rcr
punpckldq
pop
mov
cmp
jg
inc
push
and
push
and
ja
push
cmc
inc
dec
pop
add
dec
fwait
outsb
imul
push
bound
jno
and
and
add
filds
push
dec
push
insb
xor
insl
imul
push
jno
adc
push
loop
shrl
push
jbe
int3
push
fs
inc
inc
push
pop
jb
fdivl
inc
ja
imul
mov
inc
dec
cmpl
ljmp
addr16
pop
aaa
outsb
sbb
outsl
test
call
inc
jns
jo
push
ja
outsb
pop
fucomi
cmp
insl
jne
push
fs
mov
insw
push
push
shrl
jns
jo
jbe
insl
insl
add
add
test
push
test
scas
lea
mov
neg
cmp
addl
mov
pushf
js
pop
or
dec
push
push
dec
or
cmpl
out
sub
fimuls
test
or
out
sbb
cld
sub
fwait
ja
lea
push
sbb
mov
lahf
adc
push
xor
xor
cmpsl
jnp
fsubrl
or
inc
sbb
loop
lea
push
adc
pop
or
sar
cmp
cmp
cmp
mov
jae
mov
or
adc
jg
rcrl
push
push
pop
sbb
add
js
call
add
pop
addr16
std
push
mov
push
jo
mov
clc
cltd
int
push
jne
push
push
and
inc
popa
out
call
xchg
push
cmpb
mov
pop
mov
addb
sbb
mov
inc
adcb
fs
inc
orb
xchg
mov
adc
sbb
mov
xor
pop
mov
test
ret
and
lea
cmp
clc
cmp
mov
push
jle
clc
adc
cmp
lds
mov
rol
or
fildll
jle
jle
je
add
dec
jne
add
or
mov
fldt
clc
shr
add
lret
push
jne
lea
jg
mov
jne
into
push
aad
pop
mul
or
jl
movsb
mov
or
movsl
movsb
les
je
adc
push
mov
jno
out
fmul
cmp
cld
adc
and
bound
sub
cmp
test
into
sahf
fldl2t
jno
scas
dec
push
xor
add
xor
test
shrl
push
mov
mov
push
sti
mov
mov
xchg
or
test
sarl
mov
fcmovb
enter
and
pop
cld
repz
adc
mov
in
inc
mov
xor
in
call
push
call
push
mulb
rcll
sub
push
loope
add
push
jl
push
hlt
inc
jne
push
push
scas
or
loopne
xchg
ror
adc
je
jmp
sub
push
jl
lock
insb
xchg
clc
cmp
or
mov
jp
sbb
push
xor
addr16
inc
dec
jbe
jb
push
mov
jo
fs
repz
sbb
dec
jmp
pushl
mov
inc
dec
jne
mov
mov
xchg
icebp
inc
sbb
leave
pop
sbb
out
jmp
adc
cmpsl
jns
out
cmp
jb
dec
jne
das
jmp
jb
adc
pop
icebp
jecxz
dec
add
iret
je
cltd
ret
inc
sar
sub
mov
mov
inc
dec
sarl
push
call
popf
push
and
test
mov
add
inc
cld
add
cmp
jg
mov
add
add
adc
push
lea
mov
add
add
roll
lock
out
xor
and
fs
test
mov
lret
cmp
sbb
fistpll
or
adc
jbe
mov
hlt
add
stos
xor
sub
push
call
or
fstpt
stos
push
xor
mov
lcall
mov
sub
push
xchg
push
dec
adc
and
push
push
lea
ja
jecxz
pushl
rcr
mov
push
loope
mov
mov
mov
sarb
mov
lcall
and
rcl
push
out
or
ret
sub
adc
shll
cmp
pop
mov
push
or
sub
xrelease
sysenter
pop
sub
pop
adc
xchg
les
xlat
sbb
cli
sbb
movsb
loopne
call
xor
cmp
inc
pop
inc
inc
mov
ror
mov
mov
push
pop
inc
cld
push
add
mov
ror
or
js
jo
imul
test
rorl
hlt
js
iret
roll
shrb
push
xor
push
cmp
roll
ja
loope
lea
inc
incl
mov
pop
add
push
push
fstpt
adc
shrb
jbe
or
adc
push
not
sbb
pop
andl
mov
hlt
add
push
push
aas
ret
jmp
adc
mov
push
pop
xor
cli
addr16
fidivrs
jns
mov
cwtl
add
inc
cmp
and
jmp
sahf
push
xlat
add
dec
and
ret
loopne
dec
push
add
aad
jg
inc
inc
adc
je
push
loopne
fcomi
ret
pop
insb
jp
sbb
lahf
jmp
loopne
mov
dec
sbb
mov
mov
dec
mov
sbb
in
insb
push
sahf
fcoml
loopne
je
xchg
xlat
in
jmp
mov
jbe
pusha
mov
fadds
xchg
and
cmp
jb
mov
sub
dec
ret
pop
popa
nop
in
push
jbe
fs
cmp
insl
dec
imul
lret
xlat
cwtl
push
or
cmpsb
sbb
movb
repz
loopne
shl
mov
or
add
cs
xchg
ret
rcr
push
out
rcl
sti
mov
mov
xor
xor
outsb
shl
and
mov
fildll
pop
cmp
xor
loop
fnstsw
adc
or
out
sbb
xor
data16
jge
enter
pop
or
stos
adc
adc
lock
push
xor
mov
and
mov
cmpsb
mov
rorb
add
or
or
fcmovb
out
push
xor
fsubrl
nop
mov
dec
sbb
pop
subb
mov
or
ret
xchg
pushf
sbb
je
pop
sarl
add
cwtl
sub
sbb
jb
sbb
sbb
xchg
xchg
xchg
scas
xchg
mov
xchg
rcll
jno
mov
ljmp
push
cmovns
nop
insl
pop
jno
nop
stc
out
icebp
movq
nop
addl
jno
nop
sub
xchg
lahf
jg
jno
nop
out
jno
out
dec
mov
mov
repnz
jmp
push
imul
xor
xchg
and
adc
lock
jae
stos
xchg
pmullw
mov
mov
mov
pushl
mov
xchg
imul
scas
push
mov
cltd
sbb
push
decl
push
jb
jge
mov
cmp
dec
call
pop
push
push
mov
adc
sbb
dec
loopne
xor
push
ljmp
mov
lahf
testb
inc
dec
outsb
cmp
adc
xor
outsb
add
add
pushl
incl
or
aaa
adc
lds
xor
stos
fdivrp
mov
or
push
or
aaa
adc
shrl
add
add
sar
mov
mov
pop
fs
int3
pop
cli
decl
ds
testb
je
push
movsb
mov
jbe
add
decl
or
pop
ret
int3
cmp
mov
call
std
paddw
mov
ret
cmp
mov
xchg
repnz
ljmp
xchg
sahf
mov
or
pop
imul
mov
pop
fdivr
aam
dec
adc
add
add
mov
jbe
add
sarl
mov
lahf
inc
jo
add
jg
arpl
sub
dec
mov
push
movsbl
ret
insb
insb
or
or
or
jg
out
stos
fwait
popf
popa
add
movsb
ja
incl
loopne
jae
fadd
ret
pop
dec
or
add
jg
inc
jae
clc
mov
sub
push
inc
inc
cmp
inc
push
jmp
mov
incl
push
sbb
add
movsl
add
add
push
push
enter
clc
or
jbe
sub
ljmp
cmpl
push
pop
jb
mov
mov
lods
std
stos
adc
das
add
inc
sbb
push
sahf
xor
and
xchg
add
cld
call
aas
jo
ja
lea
rcll
in
icebp
jns
mov
lret
pop
push
push
hlt
lods
addb
or
push
std
sbb
add
test
push
sub
sarl
rcr
into
mov
jp
add
bound
push
fisubl
sarb
cmp
cmc
push
ljmp
xchg
jl
movsl
pushl
add
imul
lahf
out
adc
mov
add
pop
xchg
call
and
pop
pushl
clc
testb
push
sbb
ljmp
and
add
mov
mov
mov
idivb
push
sahf
or
or
les
jmp
mov
or
pusha
lods
jmp
jmp
cmp
jbe
dec
decb
cmp
jbe
sbb
faddl
mov
cmp
or
xor
decl
or
je
cmp
fs
mov
fdivrs
xchg
xchg
addr16
incl
fiaddl
rcrl
lods
add
or
aad
imulb
cmc
in
pop
pop
mov
xchg
sarl
push
aad
push
mov
push
jg
push
push
sti
mov
ss
pop
pop
sti
gs
pop
mov
insb
inc
adc
mov
push
push
push
mov
les
pop
mov
lods
pushl
mov
adcl
jl
insl
cltd
out
inc
push
pop
imul
jnp
fbstp
pop
mov
decl
mov
push
xor
push
sbb
cmp
fwait
sbb
push
stos
ljmp
jmp
ljmp
jae
jmp
ss
jns
call
scas
bound
mov
fdivrs
mov
jae
mov
loope
push
xor
lret
fcmovnb
pop
neg
pop
mov
orb
dec
icebp
clc
cli
outsl
rcll
jae
jb
adc
into
sti
or
cli
cli
jmp
clc
gs
cld
scas
sbb
push
dec
jbe
pop
outsl
push
pop
enter
lods
mov
aas
jl
movsb
pop
cmpsl
test
sbb
sbb
mov
mov
ss
in
mov
call
push
mulb
add
jb
add
mov
and
dec
mov
ret
incl
aaa
lcall
xorb
das
test
cmp
adcb
dec
pop
sbbl
adc
pop
out
cs
daa
xchg
and
jbe
dec
lock
loope
incl
mov
push
mov
push
pop
iret
aad
cmp
pop
jle
lods
push
stos
cld
ljmp
and
lret
ss
arpl
outsl
ficoml
adc
icebp
jne
xchg
adc
sbb
sahf
mov
sbb
add
pop
insb
ret
jmp
sbb
lds
inc
sub
jl
mov
cmpsl
sub
call
fadd
sub
add
dec
movsb
lcall
test
or
xchg
push
sub
mov
inc
sbb
incl
jle
dec
es
pop
adc
fmuls
xor
enter
add
lcall
lea
cmp
dec
iret
jae
imul
int3
nop
mov
decl
jg
mov
in
or
sub
jne
xchg
orb
pop
cmp
ffree
or
sbb
fcomip
pop
mov
fisttpl
pop
add
mov
and
xor
or
cmp
out
int
sbb
adc
fadds
cmc
mov
aas
lods
out
cmp
jb
sbb
lret
cmp
jbe
daa
stos
rorl
lds
lahf
pop
sub
ret
sbb
mov
push
sub
aad
or
mov
push
inc
dec
add
pusha
cltd
in
jo
pop
mov
pop
hlt
jl
rcll
hlt
push
push
or
cmp
jne
and
jecxz
push
pop
inc
pop
push
add
cmc
dec
or
jns
sti
dec
aad
sbb
inc
scas
adc
int3
pop
sbb
sti
sub
lcall
arpl
adc
mov
je
ss
dec
xor
test
out
clc
decl
pop
jmp
pop
push
add
lods
loop
mov
je
fcoms
xchg
jmp
cmp
fcoms
cmp
mov
rclb
adc
sbb
stos
push
sbb
or
sbb
or
cs
push
sti
or
pushl
pop
lds
shlb
jae
jg
and
and
leave
enter
mov
sbbl
stos
in
loopne
int
decl
movsl
fldt
rorb
shl
add
ljmp
push
sub
add
mov
js
xor
loop
gs
inc
push
push
cmp
mov
stos
ret
in
jbe
mov
lea
cmp
inc
in
fwait
movl
and
addr16
mov
fisttpl
call
pushf
pop
pop
js
mov
push
inc
push
sbb
cmp
add
mov
addr16
jg
sub
mov
inc
out
test
adc
movsl
mov
sbb
inc
cld
out
cmpl
jg
clc
and
bnd
loop
sbb
pop
sbb
push
jo
and
jmp
push
dec
pusha
ljmp
jg
aad
js
mov
stc
sub
adc
das
test
xchg
and
xlat
std
sbb
sar
pop
sbbb
pop
shlb
pop
popa
imul
or
divl
arpl
jecxz
jle
jae
ljmp
ljmp
cli
jmp
pop
mov
adc
into
test
inc
insl
push
cli
decl
push
int3
pop
or
mov
jb
pop
ret
fildll
and
std
and
dec
and
fcomp
and
mov
lock
lcall
adc
fld
add
or
es
and
push
add
add
call
je
popf
or
xchg
rcll
xor
or
push
add
lods
dec
add
lcall
jg
std
inc
mov
sbb
lea
cmp
repz
mov
dec
lcall
xchg
fdivr
outsl
imul
mov
mov
adc
insb
fcomip
in
jl
test
jb
adc
js
sub
xchg
jns
sti
cli
mov
in
add
jge
lods
jle
jb
fimull
shrl
mov
stc
addb
cwtl
inc
mov
je
imul
adc
scas
xchg
imul
mov
ss
call
xor
inc
push
dec
dec
pop
insl
leave
testl
stc
xchg
out
and
mov
movsb
shll
lock
mov
je
lret
std
add
js
adc
xchg
cmp
push
fs
adc
push
inc
jnp
and
iret
sub
xor
add
lods
pop
repnz
aas
inc
push
imul
inc
sub
cmp
and
inc
sub
cmp
jo
or
leave
dec
mov
dec
mov
cmp
hlt
je
cmp
mov
mov
es
adc
mov
pop
xchg
fdiv
mov
cmp
push
loopne
sub
in
cld
cli
mov
shlb
mov
fcoml
ljmp
pop
loop
mov
iret
loop
lahf
sahf
inc
fmuls
sbb
cmp
jl
cmp
pop
jl
jle
daa
inc
pop
ret
rolb
or
movsb
inc
push
push
fmuls
decl
clc
add
push
int3
jne
jp
fildl
or
popa
xchg
pop
and
xchg
adc
decl
sub
pop
jbe
aaa
cmpsb
loop
inc
addr16
jmp
mov
pop
outsb
add
idivl
out
adc
sub
std
mov
sti
mov
inc
adc
sbb
aam
add
imulb
fsin
and
decl
mov
cmp
outsl
inc
leave
mov
inc
mov
cmp
mov
jmp
pop
sub
push
mov
and
mov
dec
mov
int
push
xchg
pop
ljmp
pop
pop
cmp
in
clc
or
pop
lcall
lcall
mov
xor
and
insb
mov
push
mov
mov
ljmp
mov
add
pop
fcoml
outsb
pop
push
lock
je
dec
inc
mov
decl
lea
outsl
mov
cmpsl
cmp
cmp
mov
xchg
cmc
decl
or
fists
cmp
jge
add
xlat
or
loop
cld
cmpl
ljmp
or
cli
nop
and
ljmp
xchg
movzwl
fbld
jmp
mul
mov
or
cmpl
jne
insl
dec
dec
add
pushl
std
lret
mov
jne
jae
mov
je
dec
jnp
pop
add
jmp
jb
cmp
repnz
fildl
pop
lods
fistpl
dec
stos
push
mov
push
int3
popa
decl
fsubr
jbe
mov
insb
rcll
push
add
mov
lahf
or
movsl
jmp
icebp
jle
lcall
mov
push
lea
mov
push
xor
insl
cmp
lock
jns
xor
icebp
imul
sbb
std
fistpll
add
add
jle
shr
ljmp
outsb
ret
in
adc
push
cwtl
subb
jae
cli
orb
cmc
ljmp
lcall
xchg
cli
shr
mov
and
sub
in
scas
clc
add
lret
cld
pop
iret
push
int3
insl
mov
jmp
pop
rclb
in
adc
std
push
decl
mov
out
or
test
nop
mov
sub
mov
aas
or
enter
inc
add
notb
mov
add
ljmp
sbb
shl
loop
fdivl
sbb
lea
nop
inc
inc
or
mov
push
in
pop
es
jnp
lret
and
in
sbb
out
pop
xor
nop
mov
inc
imul
or
ret
jg
sub
std
mov
push
mov
add
scas
decl
call
mov
dec
sub
push
cmp
cmpsb
or
cmp
or
jmp
psubusb
mov
jg
lock
outsl
cli
scas
clc
jae
in
add
jmp
mov
sub
jbe
fbstp
mov
jmp
sbbb
outsb
lcall
dec
mov
lock
xchg
pop
pop
add
cmp
out
sar
gs
pushl
dec
pop
clc
mov
add
ret
mov
lea
sbb
rcll
decl
jp
cs
shll
imul
mov
cltd
insl
push
aam
ljmp
sahf
pop
push
push
in
lret
sub
mov
pop
jb
push
mov
es
sbbl
repnz
jl
lahf
inc
enter
shl
call
incl
jg
ljmp
sub
dec
repnz
mov
notb
je
adc
repz
jo
mov
or
pop
hlt
mov
lret
push
add
outsb
and
mov
lcall
mov
adc
mov
pop
sarl
rol
mov
faddp
jg
enter
mov
imul
inc
add
cld
mov
cld
ljmp
mov
add
push
and
ljmp
cmp
xchg
dec
xor
movsl
dec
push
fdivr
bound
pop
test
push
testb
xor
push
mov
ljmp
push
and
test
sub
mov
sbb
ret
or
idivl
ljmp
add
test
test
hlt
push
je
ljmp
andb
bound
sbb
insb
dec
mov
movsb
push
test
dec
lods
sbbb
ljmp
in
xchg
add
in
roll
repz
mov
lret
imul
lock
push
mov
or
cwtl
push
dec
pop
or
js
pop
cmp
mov
pushf
xchg
and
les
sub
testl
test
push
xor
adc
ljmp
sub
sbb
call
jg
inc
add
sbb
test
mov
cmp
xchg
mov
and
loopne
push
loopne
jge
sub
jl
invd
pop
clc
mov
sbb
mov
adc
push
mov
adc
fistpl
mov
push
daa
iret
and
jl
cs
incl
mov
jecxz
xchg
xlat
jae
push
sbb
lods
xchg
jnp
and
sbb
into
jmp
dec
cmp
pop
movsb
mov
std
and
ja
sub
dec
mov
xor
adc
mov
adc
or
push
jl
or
aad
or
pushl
and
leave
repz
cltd
add
lock
push
add
shlb
fcomip
scas
ret
and
fsubr
or
push
jb
dec
in
and
mov
shr
add
jns
add
xchg
loopnew
test
adc
pushf
mov
insl
jmp
nop
call
nop
adc
cmc
mov
mov
adc
push
js
mov
add
sbb
inc
sub
dec
jo
mov
imul
or
dec
in
sbb
sbb
cwtl
in
or
in
in
incl
cmp
stc
aam
xchg
sbb
mov
mov
lds
push
and
push
in
decl
decl
jb,pn
lret
inc
nop
dec
mov
cmp
push
xor
jb
decl
push
lock
and
mov
push
xlat
dec
or
and
fisttpl
scas
aam
xor
xor
pop
mov
popf
sbb
sub
call
xchg
insl
das
subl
and
push
fisubs
rolb
or
stos
roll
xlat
das
xchg
pop
xlat
or
lods
js
fs
sahf
cmp
and
adc
pop
mov
decl
mov
push
mov
mov
xchg
setno
add
aas
filds
out
mov
mov
push
nop
mov
xor
bound
inc
pop
daa
push
test
fisttps
sub
jb
scas
lods
insb
mov
sahf
cmp
mov
nop
mov
jg
xchg
cmpsb
xorb
movsb
xor
pop
pop
aaa
or
mov
lcall
push
xor
jmp
fs
mov
iret
jne,pt
std
and
fldcw
mov
mov
ficoml
sub
adc
xor
push
sub
ljmp
dec
push
lcall
dec
sub
push
je
neg
sbb
incl
xchg
aam
inc
sub
std
fldenv
bound
xchg
push
xchg
filds
add
pop
jmp
jmp
xchg
fists
nop
pop
fistps
fldcw
cmp
lret
movsl
je
outsb
inc
test
push
add
jecxz
scas
cmp
push
ss
jg
ljmp
push
pop
insb
rcll
leave
pop
mov
and
xchg
mov
ljmp
mov
pushf
sbb
and
or
ja
jp
sbb
mov
incl
push
xchg
and
inc
cmpsb
lret
enter
fmuls
inc
ret
fmul
add
clc
dec
orb
xchg
add
inc
add
dec
mov
call
ret
je
xchg
mov
mov
rorb
xchg
jmp
pop
push
push
es
hlt
je
lea
clc
arpl
mov
jns
jl
push
int3
in
or
std
insl
pushl
inc
repnz
sub
xchg
popf
inc
sbbl
jnp
cmp
mov
incl
clc
rcl
xchg
dec
cwtl
daa
popa
popa
jne
in
push
mov
and
xlat
stos
add
ljmp
mov
insb
aad
ljmp
add
shll
fdivr
xor
addr16
sbb
outsb
mov
cmp
out
mov
bound
bnd
dec
popa
fs
mov
fnsave
cmp
push
xor
dec
pop
cmc
sbb
jns
insb
clc
cmp
subl
lea
cmp
mov
ds
rorl
decl
mov
dec
jp
xchg
daa
cld
cli
push
dec
lods
sbb
repnz
adc
es
mov
in
mov
cmp
sbb
xor
inc
cmp
mov
sti
inc
sub
add
xor
xchg
inc
add
sub
xchg
jecxz
sbb
jl
lock
leave
leave
jo
leave
fucomip
decl
push
and
xor
sub
cltd
cld
sarl
dec
adc
stc
dec
outsb
inc
dec
xchg
jmp
test
lock
mov
sub
dec
adc
mov
arpl
jno
xchg
dec
lcall
jmp
and
imul
scas
ja
movsl
aas
cmp
pushl
pop
cmp
cmp
sub
sti
sti
xor
gs
or
popa
push
mov
rep
mov
rorb
cli
dec
imul
mov
jb
hlt
pushf
sbb
mov
sti
incl
fdivr
xor
pusha
cld
jmp
test
dec
dec
pop
dec
and
inc
sbb
xchg
lret
aaa
or
cltd
test
and
xchg
ja
mov
divb
lret
fstps
rcll
icebp
icebp
add
das
cli
mov
popa
mov
push
lock
or
fcmovnu
dec
push
dec
ljmp
jns
jl
nop
clc
or
fnsave
mov
xlat
push
inc
cmp
outsb
mov
push
clc
lcall
scas
push
jp
jb
nop
scas
pushl
inc
push
in
pop
add
hlt
fcmovnu
outsl
call
stc
push
js
fcom
dec
dec
or
aam
mov
pop
sahf
aaa
loope
mov
lret
mov
push
push
in
push
cmc
bound
dec
mov
cmp
add
inc
dec
mov
ret
cmp
push
push
inc
ljmp
int
dec
in
aam
shlb
xchg
xor
push
ljmp
in
faddl
jb
je
push
inc
or
or
rcll
ljmp
shlb
and
jb
push
xor
sarb
test
xor
push
repnz
pop
into
adc
call
fdivr
cmp
lods
pop
dec
and
hlt
cld
sarl
push
repnz
pusha
sti
ljmp
out
cld
dec
and
push
hlt
inc
mov
ffree
or
daa
nop
nop
xchg
test
xlat
sahf
int
ljmp
hlt
jl
sbb
adc
repnz
mov
subl
jb
mov
pop
cmp
jne
sub
mov
ljmp
bnd
xchg
or
and
add
sub
jne
icebp
push
jbe
sbb
jg
int
add
repz
add
ucomiss
cmp
add
add
add
ljmp
aam
clc
pop
pop
or
bound
dec
sahf
pushf
inc
or
in
and
cld
jb
ljmp
test
push
push
add
mov
mov
loopne
pop
test
sahf
int3
xchg
ljmp
lock
mov
lcall
pop
imul
bound
ja
shl
sahf
mov
cmp
aam
xor
push
and
jmp
xor
fcomps
fimuls
jmp
out
and
loop
call
jmp
mov
adc
push
ds
push
iret
adc
shll
lcall
pop
shll
movb
dec
aaa
outsb
movlhps
ret
sbb
jg
lret
je
out
cli
sub
fmuls
cld
or
sbb
push
inc
shl
push
lcall
call
mov
lods
cmp
lret
loope
fmull
mov
mov
push
movsl
ljmp
jmp
add
mov
dec
sub
sbbl
pop
sub
adcl
call
xchg
xor
pop
cmc
add
push
add
cmp
push
je
inc
xor
dec
push
adc
aaa
add
pop
add
inc
or
out
es
repnz
call
fdivl
mov
cmc
leave
out
inc
ds
nop
pop
push
pop
data16
lcall
mov
loopne
push
mov
es
dec
sub
pop
int
inc
mov
mov
shr
movsb
add
dec
inc
adc
cmp
out
sbb
clc
call
sarb
popf
mov
inc
mov
push
mov
push
mov
dec
push
insb
into
insb
ljmp
or
aaa
fsubp
mov
fldcw
push
mov
ds
mov
ljmp
stc
push
inc
fadds
movsb
cmp
cld
lret
xorl
adcl
jg
pop
test
cmp
add
add
out
jge
sar
sub
pop
mull
ljmp
push
mov
mov
dec
mov
sbb
fwait
adc
and
cld
iret
pop
pop
xlat
cld
scas
clc
incl
or
lea
fbld
and
jge
mov
sti
or
arpl
mov
push
sti
fcomip
sub
mov
lock
push
or
push
ret
pop
dec
jnp
sbbl
aaa
decl
jmp
sbb
cmp
test
mov
fistps
inc
sbb
jg
add
add
incl
push
mov
hlt
jo
test
jne
jmp
sub
cmp
popf
sub
popa
mov
xchg
add
sbb
add
mov
cmp
push
enter
xchg
mov
shl
or
out
cmp
loope
inc
cmovae
movsb
test
mov
mov
in
enter
mov
adc
jecxz
in
int3
sbb
push
add
das
je
ja
push
jo
pop
out
inc
jno
gs
daa
ds
jmp
dec
sti
incl
dec
mov
push
pop
jne
pushl
cld
shrb
pop
xor
mov
add
mov
dec
or
scas
shlb
stos
or
mov
sub
fidivrs
negb
sahf
or
loopne
popa
inc
ds
in
call
and
push
and
int
pand
cmpb
push
pop
or
iret
sub
ljmp
rcrl
dec
loopne
insl
fiaddl
dec
movsb
int3
mov
push
xor
cmp
sub
popf
pop
call
pop
lock
jbe
lcall
bndldx
add
push
sbb
addb
and
subl
data16
call
insb
lods
dec
mov
or
or
hlt
mov
mov
pop
pop
jae
sbb
mov
mov
aas
sbb
cmpb
mov
sub
xor
sbb
or
cmp
popf
mov
ficoml
mov
je
xor
or
sbb
xor
inc
jbe
push
loop
pushf
cltd
push
sahf
cli
dec
js
or
lcall
sub
jne
call
sub
or
rep
shll
aad
imul
cltd
xor
dec
testb
xchg
out
mov
adc
lock
setne
aad
or
cli
int
xchg
pop
dec
jo
lret
xor
call
xor
push
int3
rorb
xchg
inc
fisttpl
pop
jmp
sbb
mov
decl
decl
in
inc
add
nop
cmp
out
mov
and
or
cltd
jo
fidivl
pop
mov
or
cmpb
sub
or
adc
push
sub
jns
fbstp
inc
mov
jmp
mov
lahf
inc
test
mov
mov
jg
sbb
sub
adc
lods
ljmp
icebp
mov
sub
cmp
adc
xor
or
cltd
testl
cli
ficompl
ljmp
cli
xlat
into
xor
cmp
mov
jge
shl
xor
mov
mov
xchg
test
lea
adc
nop
jmp
mov
std
call
add
test
adc
sbb
xor
out
fbld
add
or
jge
add
adc
push
pop
adc
mov
add
cmp
add
fdivr
ljmp
mov
lock
clc
or
cmp
adc
test
sbb
jg
decl
lock
mov
out
std
sahf
inc
ds
js
cmp
fisubrl
jmp
mov
mov
jbe
and
xor
and
xor
insl
push
mov
ret
mov
dec
enter
sub
push
lods
lcall
bound
lcall
sub
push
in
imul
or
or
cmp
pop
es
xlat
pop
icebp
lcall
push
sbbb
xchg
cli
popf
fimuls
pushl
add
out
push
lock
or
xor
mov
or
pop
push
pop
arpl
push
ljmp
jae
dec
push
loop
push
inc
push
std
mov
test
ljmp
dec
add
add
arpl
adc
pop
or
lcall
mov
push
daa
pop
xor
rorb
scas
add
movl
mov
push
or
sbb
lods
shlb
or
or
inc
add
cmp
mov
int
xchg
sub
lds
add
mov
pop
mov
cmp
dec
xor
cmp
inc
sbb
rcl
flds
int3
cmp
adc
outsb
mov
pushl
cld
jmp
and
cmp
je
pushf
or
inc
bound
loop
lods
adc
repz
int3
enter
decl
mov
add
cltd
in
and
shlb
cmp
dec
adc
stos
das
cmp
push
sub
sub
or
aaa
test
ljmp
mov
mov
xor
push
push
lea
add
ret
cmp
and
decb
push
fidivrl
cmp
jae
shlb
add
pop
pop
jnp
call
cs
sahf
mov
jbe
lock
mov
lods
xchg
or
ljmp
lock
mov
dec
xlat
mov
pop
jecxz
dec
rorb
orl
insl
pop
aad
lahf
lea
mov
and
test
popa
jecxz
push
aam
mov
sub
lods
call
std
jmp
filds
or
dec
mov
cltd
andl
enter
in
out
pop
lcall
stc
pop
sbb
or
testl
cmc
add
ret
pushl
shrl
movsl
stos
clc
inc
inc
pusha
sub
ljmp
or
jmp
cmpsl
dec
xor
movsb
enter
and
add
cmpsb
bound
add
lcall
pop
fnstenv
push
push
push
cmp
xchg
test
mov
andl
insb
mov
and
and
lods
nop
aad
xorb
incl
push
decl
jb
rorb
push
cmp
push
xchg
adc
cwtl
pop
add
ljmp
mov
jg
lods
jo
addl
clc
add
mov
jg
mov
ret
fdivrs
out
add
loopne
aam
mov
test
insb
add
les
leave
cli
and
push
sub
gs
imul
pop
pop
shrd
mov
fs
outsl
clc
decl
jecxz
test
jl
inc
xchg
sub
aam
mov
outsb
decl
mov
imul
adcl
jle
add
dec
not
or
sbb
cmp
test
sub
orl
je
jmp
jbe
lock
inc
dec
lret
mov
pushf
mov
icebp
ret
jmp
pop
add
jns
mov
inc
int
jg
cld
bound
dec
xchg
ja
cli
stos
repz
push
sub
xor
mov
push
nop
push
dec
in
ljmp
push
xchg
cwtl
fiaddl
and
push
cmp
xchg
mov
inc
pop
mov
ljmp
push
mov
pop
jmp
push
pop
hlt
and
lock
sbb
pop
fs
xchg
subb
push
fstps
jmp
loopne
xchg
push
add
out
outsl
aaa
outsl
or
and
push
out
bound
push
xchg
add
js
lcall
fwait
lods
or
sub
in
jg
push
mov
sbb
icebp
pop
insl
test
adc
push
fcoms
mov
jns
incl
out
jp
orl
add
lock
jmp
pushl
lahf
mov
sbb
xor
push
and
insb
lcall
cmp
push
nop
jl
and
xchg
nop
xchg
push
ljmp
jl
sbbl
pop
into
push
jae
dec
and
push
pushf
jo
xlat
cmp
incl
pop
icebp
jmp
mov
popf
fldcw
pop
je
xchg
iret
popa
gs
mov
sub
mov
call
in
fcoml
cmp
pop
mov
cmp
push
push
sahf
mov
add
mov
dec
cmp
adc
pop
std
mov
dec
pop
test
fistps
pop
xor
stc
push
push
aaa
je
pop
sarb
pushl
pop
dec
or
ror
lods
mov
add
pop
mov
std
xor
decl
faddl
add
ljmp
jmp
adc
and
pop
sar
inc
mov
shrl
pop
mov
sbb
cmp
inc
jns
mov
pop
lret
sar
push
daa
lods
jmp
and
inc
test
movb
mov
xlat
jg
dec
incl
cmp
out
orb
subb
mov
adcl
xor
int
test
push
mov
loopne
mov
pop
jmp
call
push
divb
jg
add
or
std
enter
jmp
pushl
loopne
xor
cmp
mov
bound
stos
sti
stos
sub
mov
rclb
in
scas
mov
or
pop
lods
in
dec
fnstsw
rclb
call
dec
mov
sbb
cwtl
stc
push
jbe
cmp
jg
inc
call
inc
lods
in
and
mov
loop
in
pop
lods
ret
rorb
in
jg
jge
sub
mull
inc
mov
xchg
or
and
decl
push
inc
add
ds
mov
sahf
sbb
push
inc
adc
dec
dec
add
mov
mov
add
jg
ljmp
fildll
jecxz
mov
or
js
or
mov
jne
mov
dec
and
push
addb
xchg
decl
adc
mov
add
xchg
pop
pop
push
popf
mov
cwtl
pop
call
orb
or
fxtract
shrl
andl
add
jae
shll
aad
in
mov
push
xchg
lods
lods
adc
in
push
pop
adc
or
cmp
push
xor
xor
cmpsl
fistpll
ss
push
rolb
ljmp
xor
jg
and
out
movsl
pop
enter
push
jecxz
mov
mov
pushl
mov
sbbb
sbb
jno
in
je
sub
testb
sub
decl
movsl
pushl
lods
insb
add
clc
xchg
jb
mov
and
mov
mov
mov
divb
and
adc
cmpb
negl
loope
jnp
mov
inc
or
ret
pop
pop
js
in
decl
and
jg
fidivs
add
je
lods
inc
adc
pop
insl
cmp
mov
jne
incl
dec
sub
or
push
sbb
cmp
std
ja
jmp
push
ret
xchg
insl
jg
and
adcb
dec
or
cmp
lret
xlat
or
pop
and
imul
decl
dec
fldt
jns
clc
inc
push
sub
add
rorb
pop
fimull
push
xor
dec
pop
dec
pop
repz
ss
sbb
sbb
or
in
ljmp
sub
add
loopne
jg
add
mov
cmp
syscall
cli
test
fimuls
jp
mov
push
fstpt
mov
les
inc
sbb
mov
stos
lcall
cmp
sub
inc
imul
sahf
adc
imul
ret
decl
push
je
jmp
push
movb
push
jle
push
cmp
sub
je
in
fs
ret
cmpsl
pop
push
rcll
mov
rcll
xlat
nop
lcall
sbb
insb
or
ja
or
xor
cmpsb
mov
out
mov
fistpll
cmpsb
dec
fstpl
push
clc
push
ret
push
aad
push
or
dec
loope
call
decl
enter
xchg
in
push
or
mov
testl
pop
fdivr
ljmp
mov
fldenv
jl
push
inc
sbb
jl
mov
je
lea
lock
ljmp
mov
imul
and
cwtl
xor
or
lds
popf
scas
mov
sbb
je
ss
xor
sar
decl
adc
int3
pop
mov
sub
mov
test
push
std
les
sarb
shll
push
hlt
mov
pop
hlt
sbb
mov
adc
cmp
or
jno
je
jne
ljmp
add
rolb
lea
shl
inc
push
in
pop
pop
jle
pop
subl
or
ds
and
idiv
inc
xchg
call
lcall
push
mov
inc
jns
lahf
enter
adc
add
inc
lret
movsl
or
dec
push
adc
aas
cmp
repnz
and
mov
push
repnz
push
popa
mov
xchg
aas
sbb
dec
stos
add
pop
dec
pop
push
adc
add
in
push
imul
popa
arpl
mov
dec
ja
mov
shlb
push
jmp
es
out
popa
add
bound
lcall
cli
pop
add
adc
or
pop
jne
mov
loope
inc
sub
cmp
decl
mov
adc
and
jo
mov
scas
sub
pop
sbb
incl
dec
adcb
inc
xchg
jae
push
add
lock
push
sbb
push
in
shlb
push
bound
sbb
push
pushf
sbb
sub
xor
in
scas
sbb
cld
imul
jo
sbb
loope
outsb
jne
mov
lcall
mov
or
cltd
mov
push
icebp
sbb
mov
lods
pushl
lret
xlat
xchg
shrb
cmc
cs
rol
clc
enter
jo
adc
push
fcomip
jmp
dec
call
and
repz
push
lahf
scas
push
cmp
or
dec
add
stc
andl
push
int3
or
xor
push
shrl
jg
mov
test
pop
cwtl
push
push
in
mov
and
sub
sbb
adc
dec
dec
pushf
lret
loop
mov
xor
les
push
cmpsb
enter
fwait
out
lock
and
push
lahf
xchg
jo
cld
mov
inc
mov
test
or
mov
or
call
xchg
push
push
push
decl
or
enter
sti
imull
adc
fdiv
loopne
push
cld
fcomp
and
sbb
rorb
int3
inc
stos
push
jg
xchg
jp
repnz
aam
adc
sbb
cltd
ffree
adc
popf
or
fsts
sar
and
outsb
push
inc
pop
push
inc
popl
cmp
pop
in
xor
add
inc
addl
or
sbb
mov
loop
adc
xor
ljmp
stos
push
pop
add
add
imul
mov
cmp
ss
and
mov
rorl
mov
ret
je
jg
pop
xorb
popa
lock
popf
pusha
pushw
xchg
lds
mov
xchg
cmpsl
incl
pop
mull
xchg
pop
jne
cmpsl
and
xor
std
movsb
test
int
jge
sbb
in
incl
xchg
mov
xchg
rcll
je
pop
pop
mov
xchg
pop
ja
pop
mov
in
dec
and
decl
lock
icebp
sub
mov
mov
jp
lods
and
jb
add
insl
pop
cmc
adc
jnp
lret
adc
adc
jg
lret
push
mov
in
aad
xchg
push
cs
push
fildl
adc
push
push
and
shlb
decl
cltd
xchg
clc
das
cmp
add
adc
in
jle
mov
or
mov
sahf
fidivrl
jecxz
fs
cs
fldcw
call
inc
add
jne
shrb
adc
sbb
mov
lea
cli
decl
adc
mov
push
sbbb
cs
inc
xchg
addb
stos
lret
loopne
lcall
xor
mov
cmpsb
and
xor
jbe
push
jns
faddl
pop
out
adc
sahf
and
mov
push
in
fmull
dec
jmp
adc
ljmp
pusha
pop
fs
inc
cmp
fidivrs
ja
hlt
xor
add
inc
incl
pop
mov
add
fstpl
push
jo
cmp
cmp
test
dec
decl
push
sbb
daa
adc
ja
or
loope
adc
test
call
mov
sub
xor
dec
mov
push
shll
insb
push
mov
fildl
cmp
xchg
out
add
ss
sub
jg
jg
inc
outsb
sahf
imul
popf
mov
or
fisubrl
lock
jl
aam
pop
mov
insb
push
adc
xchg
and
pop
mov
dec
xor
jbe
call
iret
add
pop
mov
push
sbb
fimuls
pushf
dec
or
jae
pop
add
out
cmpsb
popf
mov
pop
cmp
fmul
ss
fidivrs
xor
in
inc
mov
push
cmp
cmp
gs
in
sbb
cmpsl
xchg
xor
mov
jb
xor
sbb
fcomip
and
jns
out
push
hlt
cmp
ret
inc
shll
inc
mov
fcmovnu
mov
flds
or
adc
dec
cltd
inc
mov
adcb
test
cwtl
mov
jo
push
mov
mov
sub
or
adc
xor
scas
dec
decl
push
clc
pop
cld
jbe,pt
adc
sub
dec
push
adc
decl
add
out
das
sub
in
aam
inc
aas
aam
aas
mov
jmp
fdivrl
mov
ror
or
orb
push
xor
inc
stos
nop
movb
ljmp
push
pop
pop
mov
or
xor
push
ret
incb
push
inc
pop
dec
xchg
add
nop
mov
decl
mov
lods
das
and
cmc
cmpsb
je
decb
insl
inc
adc
call
decl
movsl
mov
rcrb
cmp
rolb
popf
lea
roll
ret
ja
lods
stos
pusha
mov
cwtl
enter
out
clc
fwait
jmp
and
jo
sub
or
je
dec
cmp
pop
or
ljmp
imul
push
or
sbb
insl
jl
inc
aaa
or
fiaddl
pop
push
xchg
out
insb
decl
push
out
sub
or
call
call
cmp
movsb
mov
stos
sub
mov
pop
jmp
cmpsl
mov
repnz
and
ret
icebp
or
jb
testb
or
call
pop
cmp
sbb
lea
mov
pop
pop
test
call
and
cs
and
addr16
xchg
and
in
or
fdivr
call
cmp
sbb
add
test
dec
inc
push
cwtl
xchg
inc
xorl
push
mov
xchg
lods
mov
dec
jne
inc
mov
in
cmpl
jno
imul
incl
jge
lcall
jnp
sbb
in
pusha
enter
lea
lcall
in
sbb
jb
sbb
popa
mov
or
repnz
jecxz
mov
fcoml
mov
cmp
dec
mov
xchg
test
cmp
popf
xor
push
cmp
stc
test
and
imul
cmp
pop
cmc
hlt
adcl
mov
cmp
addr16
pusha
add
std
incl
stos
sbbl
sbb
mov
fisubrs
scas
scas
add
inc
test
cs
test
rcrb
stos
jg
incb
pop
lcall
jp
mov
aaa
add
js
decl
cs
jns
fldcw
and
pusha
lods
lar
int3
adc
pop
and
sub
dec
leave
mov
xchg
adc
loope
in
loopne
push
fsts
aad
nop
jb
sbb
push
in
adc
xchg
test
and
mov
push
pop
mov
mov
ljmp
push
cwtl
fsubp
fisttpll
inc
lods
jae
lea
repnz
inc
in
out
rorb
jle
or
jns
or
cmpsl
cwtl
adc
out
or
hlt
add
popa
sub
decl
push
repz
dec
jge
inc
mov
and
mov
in
pop
mov
pop
lcall
fs
cld
push
push
in
mov
in
pop
sbb
das
rcrb
mov
and
cmpl
std
cmp
and
addr16
jns
repnz
jmp
fwait
and
pop
lock
cs
std
mov
cs
sbb
scas
xor
sub
in
outsl
aaa
dec
std
jns
jl
adc
das
add
adcb
incl
scas
repnz
movsb
pop
dec
outsb
xor
xchg
adcl
inc
push
nop
sub
jo
adc
adc
lret
jp
adc
mov
fcomip
div
mov
cld
pcmpgtd
loop
sti
imul
loope
repnz
cli
insl
call
cmc
push
jbe
jl
fwait
add
dec
sub
sub
mov
pop
es
cmp
pop
add
js
shrb
xchg
lods
daa
inc
jmp
lods
cwtl
pusha
push
mov
jp
fldln2
stos
jne
jmp
mov
call
sub
scas
sar
jmp
cmp
jno
inc
dec
or
nop
cmpl
pop
ret
sbb
push
add
aam
xor
lea
int3
inc
mov
cmp
add
in
lcall
imul
lock
inc
add
push
dec
call
fs
data16
pushf
add
mov
fadds
dec
cs
jg
int3
cli
mov
into
in
mov
mov
rorb
ret
dec
mov
aam
and
cmp
or
dec
or
in
decl
and
or
inc
outsb
jns
pushf
or
je
xorb
scas
loop
repnz
and
push
and
push
adc
mov
rclb
das
cli
fbld
out
call
fmul
cmc
mov
adc
decl
xor
ljmp
movsl
hlt
out
mov
mov
add
cld
std
aam
or
sbb
cmp
fbstp
lcall
lcall
push
loopne
pop
push
in
jle
mov
into
test
or
nop
or
mov
stos
mov
outsb
cmp
mov
xor
mov
xor
out
sub
mov
pop
les
es
push
insl
pop
add
jmp
clc
sbb
dec
mov
and
push
cmc
sub
dec
or
inc
push
pop
int3
xchg
sub
cmp
movsl
or
pop
xor
jle,pt
push
push
cmc
mul
fidivl
jb
fucomi
fmuls
mov
xchg
cmp
cmpsl
aam
decl
shlb
xchg
push
sti
cmpsb
dec
cmpsb
cmc
push
pop
movsb
sti
mov
push
mov
jbe
pop
out
add
lret
fmul
cmp
pop
out
out
jns
incl
or
shlb
inc
pop
notb
cmc
push
and
pop
add
lcall
sub
out
xchg
jbe
mov
jns
shlb
push
ja
or
lock
add
cli
push
cs
outsl
clc
decl
inc
stos
adc
mov
inc
lcall
jo
add
decl
jmp
mov
jmp
and
ljmp
decl
xor
nop
mov
pop
dec
cld
adc
inc
sub
mov
xchg
mov
add
scas
bound
cmp
in
xchg
loop
mov
push
add
pop
gs
dec
pop
loop
xchg
mov
inc
jmp
jns
cmp
cmp
je
lock
fwait
push
jecxz
cs
cmc
decl
iret
push
call
mov
orl
insb
aaa
pusha
testl
in
lcall
cmp
cmpl
mov
ljmp
sub
xchg
push
and
arpl
adc
xor
add
dec
test
shrl
je
inc
lcall
shlb
pop
push
push
adc
ficoml
scas
fsubrs
ret
jg
test
loopne
addl
shlb
adc
inc
pusha
in
cmp
jmp
push
pop
inc
stos
or
or
sub
sbbl
fwait
adc
lds
xchg
lret
insb
jp
sbb
mov
mov
pop
adc
ja
in
fnstsw
or
stc
mov
mov
sahf
aas
pop
cmpsb
jne
mov
ljmp
xor
ss
push
mov
cmpsb
outsb
in
xchg
lret
add
add
cld
movsl
xor
lock
ljmp
add
cs
fdivl
fs
jns
les
jmp
sub
jl
nop
push
test
push
mov
aam
mov
mov
cmpsb
sbb
inc
mov
inc
push
inc
cmp
ss
sarb
dec
repnz
filds
mov
loopne
repz
add
mov
in
adc
fldt
mov
adc
add
adc
mov
incl
mov
fimull
mov
sub
in
mov
jecxz
in
push
fists
fldl
push
test
inc
into
pop
lea
sahf
push
sbb
test
ljmp
adc
add
add
jle
adc
lea
cwtl
add
in
dec
inc
adc
movsl
fisttpll
js
mov
enter
das
mov
data16
or
incl
lock
mov
fists
push
imul
out
push
pop
push
or
sub
aam
sub
nop
jecxz
push
nop
sti
xor
mov
jle
dec
decl
lock
sbb
jecxz
stc
imul
pop
push
push
shlb
loope
add
pusha
jl
inc
cmpsb
sbb
ljmp
cmp
adc
jmp
sbb
mov
push
push
cmpsl
cmp
out
std
fdivl
add
xchg
adc
pop
into
insl
xchg
hlt
fstpt
imul
mov
push
pushl
ds
inc
sbb
loopne
cmp
dec
rclb
mov
sbb
push
and
sub
call
ds
cmp
out
push
aaa
inc
jp
les
cmp
insl
mov
mov
dec
pop
mov
in
or
addr16
ljmp
adc
or
mov
decl
adc
sbb
xchg
nop
sub
add
mov
jns
xchg
mov
decl
fsubrl
dec
push
out
sub
rcll
jae
scas
mov
std
ljmp
or
xchg
xlat
icebp
dec
cs
hlt
sub
xor
outsb
test
clc
or
in
mov
pop
adc
leave
in
push
mov
lcall
fxam
dec
add
or
mov
subl
ljmp
jmp
pop
dec
dec
mov
xorps
cmp
fs
fs
mov
test
adc
xchg
add
addr16
adc
int
xchg
add
inc
hlt
hlt
jae
dec
mov
outsb
jo
ljmp
dec
push
mov
add
push
repnz
dec
or
adc
inc
js
pop
fimull
jle
out
leave
insb
xor
es
pop
sbb
ss
js
mov
jp
sbb
insb
fisttps
adc
mov
or
leave
mov
scas
incl
loop
sub
push
leave
xchg
mov
push
mov
pop
mov
pushl
lock
and
push
enter
xor
inc
add
and
cmpsl
loopne
je
lods
fbld
add
jl
mov
out
mov
decl
rep
fld
jns
sarb
sbb
mov
or
xorl
pop
loopne
test
xchg
xor
push
sbb
push
ds
pushf
jno
lcall
subl
mov
ficomps
mov
xorl
dec
call
jle
ret
mov
or
mov
insb
cli
imul
mov
adc
ror
cld
push
std
add
fs
add
xchg
fs
loopne
cwtl
adc
push
aam
mov
cmp
or
in
lret
sbb
mov
push
push
add
mov
dec
xor
cmp
lds
mov
jne
test
mov
out
cli
call
jne
aad
mov
aad
xchg
movsl
adc
and
dec
mov
sti
jns
ror
cmc
mov
add
testl
test
lcall
push
cmp
or
add
pusha
mov
jge
arpl
dec
dec
jne
aad
xchg
pushl
jp
not
je
jmp
call
cmp
shlb
cmp
stc
push
add
fs
or
mov
add
or
ret
pop
cwtl
pop
stc
xor
cmp
incl
xchg
std
cmp
je
sub
out
xchg
sub
push
push
xlat
pusha
incl
adc
je
add
in
jne
mov
jecxz
add
arpl
roll
cmp
push
and
adc
daa
jl
dec
pusha
mov
push
cltd
or
jle
lds
cmovno
popf
sbb
imul
lahf
cmp
es
jno
cmp
test
mov
cmp
mov
or
loope
push
sub
fsubs
xchg
push
pop
jnp
cmpsb
decl
imul
loope
rcrl
cmp
lcall
sbb
and
ret
or
cmp
push
xchg
mov
mov
in
sar
cli
or
xchg
icebp
add
idiv
lret
add
push
sbb
push
inc
mov
cmp
jne
cli
pmulhuw
mov
sub
or
loopne
push
or
sub
scas
jno
push
and
shll
decl
clc
push
andl
in
divb
pop
cmp
test
out
ja
jns
idivl
cli
lea
cmp
je
sbb
push
shrl
xlat
popa
clc
xor
fimull
ret
sbb
in
mov
sub
adc
icebp
inc
lock
ja
xchg
nop
mov
mov
jne
lods
mov
jns
xor
cli
dec
inc
mov
cwtl
and
repnz
add
or
push
xorb
push
sub
orl
xlat
ljmp
cmp
fcompl
dec
ljmp
mov
pop
xor
inc
jg
hlt
lea
adc
pop
lret
push
push
jle
test
jmp
mov
ljmp
sbb
add
mov
jo
mov
ficoms
lea
ds
out
pushl
adc
js
test
adc
pop
in
adc
es
push
mov
push
ljmp
adc
fsubr
into
push
sti
mov
add
push
jo
andl
fcmovnb
out
lret
bnd
das
sarb
mov
add
cmc
cmc
mov
movsl
loopne
lods
pushl
mov
jne
aaa
or
push
scas
and
mov
out
clc
insl
or
in
inc
jle
inc
imul
jmp
enter
bound
push
lcall
lret
jb
mov
inc
inc
and
psubw
or
decl
mov
or
dec
pop
mov
cmpb
add
popa
cli
jne
sbb
lods
add
sti
ljmp
insb
mov
shrb
out
imul
stc
fcomps
push
addr16
insl
insl
inc
sub
jg
jno
adc
adc
int
xor
jb
mov
mov
cmp
shll
cmp
rolb
jg
ljmp
int3
push
std
out
mov
insb
iret
cmpsb
subb
clc
fucom
jl
and
push
and
xchg
decl
mov
cmp
dec
addr16
dec
cmc
sbb
gs
insl
aad
jnp
pop
jo
xor
cmp
decl
or
scas
mov
fdivs
push
or
outsl
adc
rclb
test
shlb
push
cld
jg
ljmp
aam
nop
push
test
xor
cmp
in
stc
xor
test
lea
fiadds
je
test
test
subl
clc
dec
xchg
es
pop
into
adc
inc
sbb
xchg
mov
sbb
mov
xor
xchg
mov
sbb
cmp
rclb
mov
adc
js
xchg
mov
and
cmp
das
clc
dec
fldenv
pusha
adc
sub
mov
test
mov
fsubs
lock
or
adc
test
repnz
imul
push
nop
mov
adc
and
testl
ljmp
push
and
mov
movsb
je
mull
pop
in
test
push
jle
clc
cltd
push
decl
arpl
clc
cmp
sbb
out
pop
aam
push
repnz
push
nop
push
sbb
pop
add
push
push
mov
mov
and
or
inc
push
lock
test
or
jnp
aad
pushl
cmp
daa
adc
adc
cmp
xchg
inc
push
or
lahf
or
pop
mov
ret
add
pop
push
cli
bound
jo
fs
nop
in
mov
mov
adc
dec
mov
sub
push
das
cmc
les
imul
sub
decl
push
push
mov
fs
cmp
mov
inc
push
dec
stc
adc
pop
ljmp
out
pop
mov
fsub
mov
cmp
std
idivb
call
loopne
mov
mov
and
cltd
cmp
pop
mov
ljmp
decl
adc
and
addr16
mov
push
daa
dec
xchg
or
shrb
push
xlat
fmulp
in
rorl
push
orl
ficompl
pop
push
lahf
xor
aam
jne
aaa
jmp
fs
int
mov
mov
sub
roll
cltd
cs
add
dec
ljmp
call
cmpsl
push
inc
xchg
pop
mov
fwait
pusha
leave
xchg
ds
pushf
jb
ljmp
jmp
stc
inc
mov
or
inc
inc
inc
mov
shll
mov
cld
jg
call
xchg
and
jo
test
mulb
pop
in
xor
sub
or
jl
cwtl
loop
outsl
fists
jmp
pop
pop
jne
daa
mov
xor
ret
fs
and
jl
pushl
jl
sbb
data16
fwait
lret
clc
mov
adc
push
mov
xor
enter
decl
and
xchg
cld
mov
lret
pop
push
mov
add
cld
fcomip
jmp
imul
xchg
rclb
in
or
sub
push
xchg
mov
pop
push
pop
push
mov
inc
push
inc
mov
push
xchg
test
int
xchg
pop
pop
jg
or
jecxz
into
out
jmp
jnp
pop
movl
in
xor
sub
inc
dec
lahf
sar
ljmp
inc
adc
pop
dec
int
insl
jne
add
push
inc
xor
aam
or
lahf
lcall
lea
nop
adc
les
mov
call
std
lods
jle
xchg
lods
fsubr
into
cwtl
loopne
xchg
in
data16
push
xchg
popf
in
sbb
faddl
pop
push
decl
xchg
xchg
mov
lods
cld
js
ret
sbb
lea
repz
cmc
pop
cmc
fdiv
ljmp
movsb
dec
js
je
and
cmc
add
mov
enter
add
add
push
dec
push
imul
hlt
push
jbe
adc
mov
test
ret
sbb
fists
in
jb
ss
hlt
or
sbb
mov
dec
loop
push
in
adc
or
fcomi
xchg
cmp
adc
ja
cmc
lret
xchg
add
pushl
jnp
inc
xor
xor
sub
stos
cwtl
data16
decb
pop
shl
in
idiv
fisttps
inc
lahf
push
inc
xor
js
cld
xchg
test
adc
sbb
lea
push
inc
and
lock
sbb
jae
js
ljmp
mov
adcl
lahf
push
or
jbe
in
addb
xor
push
sub
les
jg
push
fs
add
in
pop
aam
mov
xor
add
xor
and
in
ljmp
and
nop
mov
loope
nop
push
cmc
int3
mov
and
scas
pop
xchg
leave
mov
inc
jno
ret
insb
push
sub
dec
push
cmp
inc
sub
add
jbe
adc
jbe
in
jns
imul
lea
add
mov
nop
loopne
adc
ljmp
add
mov
sbb
test
loopne
aam
inc
ret
sub
insl
cmp
out
dec
mov
sub
je
fldpi
outsl
sub
pusha
mov
ljmp
stos
pop
or
and
sbb
rorl
lahf
dec
adc
push
inc
lods
push
lcall
and
push
rol
imul
xchg
mov
jg
push
fdivs
add
fnsave
push
adc
fs
repnz
into
push
push
test
mov
decl
movsb
xchg
xchg
jne
xchg
mov
push
ret
pop
out
insl
lods
in
xor
push
fcomip
lods
into
inc
loopne
icebp
inc
fistps
push
sbb
push
and
test
xchg
push
jg
fnstcw
shr
or
add
data16
jmp
add
add
or
mov
scas
cmp
cwtl
test
orl
cmc
scas
mov
mov
paddusb
adc
sub
ljmp
adc
add
adc
xor
cld
mov
pushl
in
mov
gs
jmp
test
daa
and
ret
popa
orb
fsubr
ljmp
adcb
xor
lock
stos
call
ja
fcomip
push
mov
testl
or
cmp
inc
mov
mov
inc
enter
call
add
cmpsl
pop
inc
jne
lcall
inc
sbb
sub
sbb
add
xchg
insb
cmp
inc
jge
inc
push
cmp
add
in
insl
lcall
and
shll
add
and
sub
mov
mov
dec
sbb
push
push
mov
and
fidivl
lock
jb
lcall
mov
sbb
cmp
shl
out
dec
xor
dec
cmc
daa
mov
add
add
fstpt
sbb
jae
fstpt
ret
jb
inc
mov
push
test
pusha
dec
jle
sbb
xchg
cmpsb
pusha
push
mov
hlt
imul
mov
sar
adc
push
mov
mov
mov
mov
idiv
pushl
mov
ret
into
shrb
adc
mov
mov
hlt
cmp
cmp
out
cli
call
xchg
nop
sub
xor
and
jecxz
add
ss
movsb
cmp
call
or
mov
outsb
xchg
out
lods
in
movsb
dec
enter
or
cwtl
inc
sub
and
ljmp
out
and
jmp
sub
jecxz
lcall
push
and
in
pop
std
ljmp
jmp
andl
aam
mov
and
mov
sti
push
mov
mov
mov
cmp
out
clc
decl
or
test
mov
notl
xchg
ljmp
mov
fnstenv
sahf
sbb
adc
ret
addb
add
lcall
add
adc
adc
ret
jg
inc
repz
fisubrl
in
add
sbbb
push
mov
adc
ljmp
add
fs
int
add
pop
cmp
xchg
and
xchg
jl
mov
in
cmp
inc
and
push
mov
mov
fnstsw
lock
andl
idivb
inc
pushf
inc
sub
xor
jmp
push
cmp
divb
es
sub
lcall
or
inc
dec
test
fstpt
fs
sbb
xchg
pop
xor
dec
add
stos
call
dec
xor
jge
sti
add
loop
decl
jns
pusha
rolb
shrb
add
mov
iret
ljmp
rolb
clc
sarb
ret
xchg
and
fnsave
push
loopne
mov
mov
gs
push
insl
ja
nop
and
fisttps
sti
xchg
mov
cmp
pop
repz
cltd
hlt
jo
cwtl
or
inc
push
add
dec
fildl
jl
xor
clc
or
jb
ljmp
jmp
cmp
dec
sub
xor
cmpsl
in
push
pop
add
in
or
cmp
adc
push
add
fs
dec
sbb
in
cmp
ror
lret
loopne
aas
push
jbe
mov
xchg
call
xor
ret
mov
icebp
jmp
mov
pop
inc
clc
fxch
xchg
cmp
push
push
test
or
add
inc
outsl
cli
sub
je
shr
cmp
jbe
nop
cmovae
jno
and
mov
inc
and
fs
fldcw
mov
loope
lods
loopne
mov
ret
add
mov
icebp
cld
cmp
addr16
pop
enter
push
sbbl
push
enter
add
movsl
fidivrs
dec
test
pop
movsb
and
pop
push
sarl
cmp
ret
popf
fdivr
incl
sarb
ret
jne
mov
mov
sbb
push
mov
in
mov
aaa
or
ljmp
pop
movsl
lods
pop
mov
lods
xchg
test
or
dec
and
xchg
pushf
adc
or
mov
inc
or
or
inc
jle
ljmp
mov
pop
push
dec
xchg
xchg
test
data16
incl
mov
and
pop
jmp
stc
and
and
lea
into
lods
repz
in
sbb
push
jnp
xchg
inc
lret
xchg
and
sbb
jecxz
fsubp
xchg
xor
dec
mov
pusha
lods
mov
pop
xchg
adc
mov
fbld
dec
popf
xor
push
add
adcl
jp
mov
decl
gs
jl
loope
xchg
test
push
rcll
jle
adc
mov
call
dec
adc
push
sub
mov
leave
iret
into
cmp
insb
lock
mov
and
cmp
popf
lock
cwtl
jns
adc
pushl
test
sbb
in
out
xor
mov
push
mov
incl
scas
pop
jnp
jns
mov
stos
add
cmpsl
fistpll
add
sbb
daa
xchg
adc
push
lret
test
sbb
fsubrl
pushl
shlb
push
pop
loopne
or
xchg
pop
xchg
adc
mov
or
test
iret
mov
sbb
inc
pusha
lods
cmp
jae
and
or
dec
dec
ret
cmp
imul
subl
push
idiv
cmovo
aad
inc
cmc
stc
movb
lcall
ja
ljmp
pop
xchg
xchg
push
std
or
aam
rolb
popa
xchg
mov
cmpsl
or
jne
ds
outsl
cli
mov
push
xor
pop
xchg
scas
cld
push
jo
cmpsb
loope
xor
ljmp
cmp
enter
mov
outsl
shlw
mov
jns
in
mov
hlt
ds
push
inc
pop
and
adc
cld
addr16
imul
jmp
or
cmpsb
xchg
add
sub
mov
mov
add
call
dec
mov
enter
push
fbstp
repnz
into
out
loop
ljmp
mov
enter
inc
or
shlb
fsubrl
pop
movsl
cli
xor
jb
xor
xor
mov
push
call
dec
xor
sti
sub
fst
dec
hlt
sti
out
movsb
mov
cmc
dec
dec
test
add
sbb
out
cmp
pop
dec
sbb
xchg
adc
sbb
lods
jae
ret
push
pop
xchg
lcall
das
ret
repz
pop
mov
pop
call
divb
pushl
and
add
ds
ficoml
dec
cmp
pop
cwtl
repz
adc
and
adc
cmp
cmp
add
inc
push
hlt
and
mov
in
cmp
and
push
ret
push
nop
push
adcb
jl
or
stos
call
nop
clc
xchg
lds
cmp
and
fs
cmpsb
dec
hlt
ljmp
mov
inc
inc
add
dec
stos
sbb
cmp
mov
cmp
jnp
add
pop
lds
mov
icebp
jge
xorl
mov
pop
add
or
push
decl
or
jl
mov
mov
adc
push
adc
xchg
sbbl
add
ljmp
sub
push
lds
and
inc
lea
dec
xor
dec
sarb
data16
movsb
imul
cli
jne
movzwl
js
cmc
or
jmp
in
pop
cmp
dec
pushf
adc
pusha
repz
daa
dec
jmp
jmp
cltd
pop
sbb
pop
jl,pn
roll
mov
or
mov
push
hlt
je
lcall
push
xchg
cmp
lcall
xor
arpl
dec
sub
inc
or
jo
inc
add
test
out
inc
mov
push
mov
jns
pushf
je
fnstenv
call
xchg
out
das
adc
add
mov
movsl
add
ja
cli
xchg
dec
call
std
fwait
and
test
jle
sahf
sub
pushf
in
std
push
xor
decl
add
lods
pushf
frstor
flds
imul
inc
xor
fcos
fists
xchg
leave
sub
aaa
inc
out
ffree
arpl
decl
lret
addl
nop
in
cmp
jmp
sub
leave
repz
in
add
mov
stc
bound
in
jnp
cmpb
push
shr
cmp
jo
ds
xchg
cs
sub
xchg
and
jg
ja
pop
dec
inc
ds
loope
push
out
mov
in
xchg
inc
sbb
mov
out
lods
push
lds
and
rcrb
stc
lock
xorb
sub
push
outsb
js
sbb
aad
imul
lock
xchg
xchg
daa
cmp
push
daa
mov
or
dec
or
pop
insb
cs
in
push
loope
into
dec
mov
jnp
dec
jo
test
jb
cwtl
in
arpl
mov
ljmp
jmp
push
icebp
dec
xchg
dec
push
imul
lock
dec
leave
pop
lret
sub
dec
rclb
ljmp
repnz
push
sbb
out
movsb
leave
push
jb
sbb
jmp
repnz
ljmp
fistpll
cmp
repz
loopne
repz
xor
jb
popf
push
movsb
push
inc
test
incl
push
call
stos
mov
sarl
push
sti
ljmp
cltd
pop
xchg
cmovns
je
dec
xchg
dec
push
lcall
loop
nop
hlt
pop
add
in
enter
xor
fcmovne
or
pushl
sbb
in
cmp
out
cwtl
pop
bound
cmc
xchg
ds
in
jo
pop
daa
cmc
das
daa
mov
test
pop
and
loopne
enter
xor
xchg
pushw
pusha
mulb
in
outsl
clc
add
xchg
sub
add
arpl
in
jmp
pop
mov
dec
lahf
lret
imul
cmp
ret
int3
out
sub
lcall
outsb
mov
xchg
fucom
dec
xor
cltd
shl
push
cmp
cmp
ljmp
js
adc
movsb
push
mov
dec
and
and
dec
sbb
fwait
stos
imul
clc
movsl
mov
mov
clc
lahf
aad
ja
cmp
lea
lahf
mov
xor
in
stc
outsl
or
jo
cwtl
lret
xchg
sbb
jno
or
idiv
adc
clc
adcb
or
jae
test
in
inc
cli
mov
lods
clc
out
clc
and
popf
sti
insb
mov
jne
pop
cltd
movl
bnd
fisttps
popf
je
pop
ja
xor
fldt
and
stos
jl
pop
pop
xchg
ljmp
mov
jp
insb
bound
orb
jnp
insb
add
fstpt
fs
fistpll
cmp
dec
cmp
das
pop
jo
push
cmp
cmp
cmp
sbbb
ljmp
incl
push
popf
incb
pop
pusha
xchg
inc
dec
sub
cmpl
dec
dec
jg
decl
mov
or
rorb
xchg
imulb
fwait
test
mov
in
xor
dec
sub
dec
xchg
mov
mov
pop
mov
hlt
add
fyl2xp1
aas
jb
incl
repnz
out
lea
xchg
mov
inc
pop
sub
in
in
lcall
mov
in
test
lods
ss
es
loopne
add
and
mov
in
pop
ret
popf
insb
imul
sbb
xchg
lock
movsb
sub
call
pushf
and
mov
loopne
in
sahf
xchg
iret
sbb
cltd
sbbb
notl
das
mov
negl
out
ror
sarb
sub
jl
orb
mov
fmull
pop
jo
mov
hlt
mov
jg
call
movsb
mov
inc
xlat
cmp
movsl
cmp
sbbb
out
cmpsb
pop
fs
arpl
call
ja
clc
std
leave
enter
and
repnz
pushf
stos
and
jmp
cltd
aam
cmpsb
lods
clc
idiv
lret
xchg
cmp
push
cld
mov
push
stc
jno
aad
out
scas
xchg
or
jp
ss
and
mov
insl
in
in
repnz
fildl
jl
das
aam
sub
loopne
out
fisttpl
mov
das
fdivrs
mov
pop
pop
pushl
add
mov
lds
into
das
pushf
cli
sete
xchg
xchg
daa
xchg
in
pop
mov
mov
jb
gs
mov
jno
fildll
loope
sub
ljmp
push
test
das
shlb
std
or
mov
jle
int3
shll
ret
mov
sahf
push
pop
cmc
xchg
pop
je
jg
mov
pop
add
lds
jb
je
mov
add
mov
lea
add
movsb
sti
movsl
enter
lahf
popf
xor
cmpl
dec
fimull
call
subb
hlt
test
mov
insl
loopne
mov
dec
sar
pushl
mov
lcall
cmp
mov
push
xchg
and
arpl
mov
xor
push
adc
pop
and
loopne
mov
add
dec
and
decl
repz
pop
faddl
dec
in
inc
sub
add
lock
arpl
cmp
cwtl
adc
jbe
inc
sub
and
enter
shlb
in
psubd
mov
sbb
sub
pop
mov
sub
xchg
dec
hlt
lcall
mov
xchg
repnz
mov
js
arpl
in
pop
push
mov
outsb
ljmp
cmpsl
out
leave
test
dec
outsb
cmp
dec
cmp
out
and
dec
sub
incl
jle
nop
or
clc
mov
mov
sbbl
shll
int
add
xor
lret
push
jmp
push
mov
push
enter
outsb
stc
add
mov
mov
pop
adcb
jg
pop
imul
repnz
mov
pushl
push
mov
xchg
add
movsb
out
and
jp
and
insl
or
xchg
and
repnz
orl
call
cltd
xor
clc
adc
cld
pmulhuw
clc
in
ss
or
mov
mov
pop
dec
xor
ljmp
filds
clc
repnz
mov
test
repnz
in
decl
orl
push
adc
sub
js
cmp
nop
pop
adc
loopne
sbb
sub
enter
popa
insb
insb
xchg
clc
cmpb
inc
mov
mov
repnz
pop
lcall
pop
push
fucomip
mov
incl
jns
inc
hlt
testl
in
nop
lret
or
and
fwait
loopne
cmp
sbb
push
adc
add
repnz
rorl
jle
pop
xchg
std
mov
dec
dec
lahf
push
imull
std
int3
ss
icebp
dec
out
cwtl
repnz
inc
xchg
mov
testl
loope
call
jb
pop
jl
adc
sbb
mov
cmp
icebp
cmpsb
enter
loopne
push
and
repnz
jo
test
lock
fwait
sbb
jo
inc
jbe
inc
not
lret
jbe
and
xchg
mov
xor
jge
fisttpll
mov
mov
gs
out
and
adc
mov
icebp
jb
idivl
icebp
mov
cmp
clc
push
shrl
jl
sarb
dec
mov
jb
std
inc
fildll
lahf
popf
inc
and
xor
stos
adc
push
xor
insl
or
xchg
icebp
adc
sub
cmc
es
inc
or
pop
test
ds
push
pop
out
and
inc
jns
cmc
pushl
mov
les
lret
int
cmpsb
mov
imul
sahf
cmc
icebp
andb
incl
lock
roll
xor
sbb
mov
dec
add
jg
fistps
and
frstor
std
sub
rclb
rcl
dec
mov
lds
jp
cltd
push
jns
or
int3
adc
or
pop
dec
push
loopne
inc
enter
mov
mov
mov
cld
mov
or
mov
loope
inc
xor
push
dec
or
repnz
std
fistpl
or
xchg
inc
pop
adc
cmpsb
xchg
xchg
xchg
mov
sbb
call
adc
lock
xchg
repnz
xchg
test
push
lods
loop
dec
and
fs
mov
pop
dec
xor
mov
aaa
pushl
dec
dec
lods
repz
cmp
fdivr
test
dec
mov
enter
sti
into
lods
enter
nop
scas
insb
dec
movsb
xchg
clc
dec
mov
nop
lea
jb
push
insb
push
jb
pop
cld
cli
aaa
ljmp
xor
push
or
clc
ss
mov
call
mov
push
les
xchg
js
push
dec
cmp
inc
add
sti
pop
mov
push
inc
or
stc
pop
sbb
aaa
jg
cli
fdivl
fmull
rcrb
inc
sub
cmp
lods
dec
mul
mov
jo
jb
fdivs
sbb
dec
nop
dec
or
incl
cmp
ret
mov
jp
pop
and
clc
xchg
jmp
add
dec
out
jne
lret
repnz
mov
mov
enter
and
mov
pop
xchg
fdivrl
jb
adc
clc
inc
jns
mov
push
pop
dec
adc
testl
faddp
fsubs
call
xchg
jbe
mov
inc
or
mov
enter
jl
aad
mov
insb
inc
sub
xor
inc
enter
dec
sub
and
or
dec
cmpsb
or
push
push
xchg
iret
rorb
mov
jns
sbb
cmpl
add
jmp
jp
dec
jge
inc
pop
push
clc
ja
lods
add
loopne
gs
lret
mov
jne
push
in
cmc
test
mov
mov
cs
outsb
or
jbe
dec
inc
icebp
pop
inc
movlps
adc
mov
fdiv
pop
inc
mov
push
sub
hlt
fcoml
mov
adc
fldenv
pop
push
cmpsb
insb
mov
push
inc
dec
repz
push
push
mov
cld
nop
icebp
xchg
xchg
clc
repz
mov
mov
mov
lea
in
sub
ss
push
inc
xor
in
and
or
cmpsl
inc
mov
dec
push
rclb
inc
mov
sbb
je
sbb
fxch
fisttps
sub
jo
xor
pop
mov
hlt
cmp
icebp
sub
int3
inc
pop
adc
pop
push
pop
push
xchg
inc
dec
lds
in
aas
jg
mov
mov
subl
ljmp
cld
push
sub
pop
adc
pop
jno
sbb
and
ljmp
in
clc
jecxz
lock
inc
shl
inc
sub
mov
mov
push
mov
inc
and
xchg
pop
cmc
lds
jnp
out
mov
adc
out
push
aaa
jge
stos
mov
add
adc
fs
loop
sub
inc
sbb
outsl
adc
dec
hlt
out
lcall
cmpb
dec
ss
stos
lock
popf
out
sarb
jmp
aam
out
mov
push
push
dec
fs
jg
dec
push
cmp
mov
pop
icebp
lahf
in
dec
pop
jb
hlt
push
je
mov
outsl
or
push
in
pop
out
aaa
nop
nop
xchg
lea
icebp
int
mov
mov
movsb
cmp
mov
add
outsl
bound
pop
in
pop
outsb
in
test
ficomps
and
in
dec
sahf
js
mov
in
call
cmp
sub
pop
xor
push
insb
xor
adcb
and
sbb
xchg
mov
lea
jmp
inc
ret
inc
and
xchg
mov
clc
dec
mov
dec
sbbl
imul
outsl
cli
xchg
adcb
or
cmp
loope
orl
jl
cmp
jg
pushl
add
enter
inc
out
imul
xor
or
test
push
or
rcrb
ret
mov
imul
mov
mov
ljmp
jg
dec
jge
push
cwtl
repnz
dec
ja
push
and
dec
push
pop
mov
sbb
pop
lock
xorb
jmp
dec
movsl
xchg
daa
sbb
dec
enter
mov
jno
and
in
jmp
mov
cmp
das
imul
aaa
inc
mov
pop
pop
push
cmp
dec
fisubrs
in
loopne
cmpsl
push
shrb
insl
movsl
or
sbb
fwait
inc
and
cltd
jmp
mov
pop
addr16
ljmp
out
mov
fdivl
mov
fnstsw
mov
shrb
sub
sti
arpl
outsl
pop
je
xlat
dec
jnp
into
push
mov
jnp
mov
mov
jg
inc
dec
sbb
pop
std
inc
outsb
mov
or
mov
in
sub
sbb
adc
repnz
mov
ss
push
lret
filds
loope
mov
enter
xlat
fs
sbb
dec
lcall
xor
cmc
cmpb
mov
mov
sub
outsb
add
lcall
pusha
movb
fisttpl
lcall
xchg
cmp
mov
push
mov
hlt
hlt
sub
lods
ficoml
ss
jne
jl
mov
adc
push
in
ljmp
pop
fs
pop
popf
shrb
cwtl
lods
arpl
jne
xchg
jl
repnz
and
dec
ljmp
mov
in
gs
dec
cmp
rcrl
mov
mov
into
lahf
iret
str
mov
lods
cs
mov
ljmp
push
push
push
dec
jnp
mov
cwtl
cmp
xchg
mov
ljmp
ficompl
mov
stc
xchg
stos
mov
xor
push
ss
lret
mov
push
hlt
and
pushf
fnsave
stc
push
jb
setb
decl
pop
in
mov
inc
pop
or
push
inc
or
mov
inc
ret
mov
add
bound
mov
mov
outsl
or
mov
int3
test
xchg
sahf
mov
addr16
add
in
fs
inc
iret
xor
pop
adc
fistpl
xchg
clc
ljmp
loopne
inc
mov
roll
nop
sti
addr16
sub
xchg
ljmp
add
mov
mov
jbe
xchg
mov
popa
or
nop
cmp
ljmp
push
cmp
je
call
inc
push
add
fisttpl
xchg
inc
in
ljmp
aas
fs
xchg
cwtl
shlb
mov
andl
mov
pop
or
iret
push
mov
pop
repz
push
orb
sub
lea
add
mov
add
dec
mov
add
testl
das
int
sbb
mov
mov
rcrb
sti
add
js
cmpl
ljmp
xor
hlt
popf
xchg
sarb
cmp
addr16
mov
int
xor
mov
lock
incl
cwtl
cwtl
add
sub
xor
push
pop
cmp
cmp
enter
push
add
jae
out
push
ljmp
or
std
pusha
leave
dec
mov
or
mov
xor
add
xchg
sahf
out
xchg
pushf
push
addl
mov
rorb
sub
push
pop
xor
leave
in
and
mov
dec
sub
cmp
in
push
pop
push
jns
inc
lods
cli
mov
pop
ficomps
cmp
decl
mov
test
mov
andb
ficomps
jae
adcl
pop
jg
lcall
pop
adc
cmp
or
and
lcall
or
std
call
push
push
je
jae
and
mov
adc
insl
push
cld
incl
dec
adc
xor
cmpsl
add
data16
pop
ja
fsubr
jmp
decl
sub
cs
test
inc
ds
xchg
lea
and
mov
xchg
xchg
daa
adc
mov
incl
sbb
cmp
adc
stos
mov
stc
add
mov
push
decl
mov
and
fwait
push
les
filds
fs
lret
pop
imul
out
push
inc
adc
jg
jmp
push
xor
fs
ret
jnp
pop
mov
adc
testb
jmp
cmp
mov
shl
mov
xor
fisttpl
xchg
or
repnz
dec
incl
cli
mov
mov
push
cld
sbb
in
cltd
inc
and
je
nop
xchg
jns
or
loopne
jmp
push
insb
and
xchg
cmp
pop
push
mov
jne
dec
jbe
std
ds
jg
sbb
fmuls
jae
dec
jmp
xor
cmp
cmp
incl
jbe
xor
xchg
gs
es
and
add
add
mov
cs
or
call
cmp
pop
mov
sbb
add
rcrl
xor
jo
push
pop
incl
and
mov
xchg
pop
loop
sub
pop
fists
push
dec
mov
or
add
add
mov
mov
dec
jno
loop
inc
jne
es
or
incl
push
out
push
dec
dec
cld
push
loopne
cmp
adc
jne,pt
dec
pushl
xor
jg
cmp
adc
or
mov
sub
sahf
mov
adc
je
dec
sti
jmp
mov
push
leave
mov
or
mov
inc
sbb
or
jne
push
lcall
pop
lods
cwtl
cmp
pusha
sub
adc
lret
in
decb
adc
decl
inc
dec
lea
dec
in
mov
lock
and
fucomi
ret
jp
mov
or
cmp
pop
xchg
cmp
decl
cmp
pop
jb
mov
cs
cltd
sbb
sub
xorl
adc
movsb
cmp
mov
jne
ret
add
filds
xor
push
sti
jbe
cmp
sbb
sub
jg
adc
inc
push
cmp
mov
push
out
mov
add
test
ret
xor
call
stos
cmpsl
mov
inc
cmpb
lcall
push
cmp
sub
jmp
ljmp
out
je
xchg
movsb
mov
scas
lahf
mov
cmp
fwait
push
fs
dec
inc
mov
incl
sti
shlb
sbbb
and
or
aaa
cmp
jg
lods
mov
incl
cmp
into
jb
xor
into
adc
or
sbb
add
ja
fsts
mov
addl
push
xchg
xchg
jmp
subl
shlb
out
ret
jb
dec
pushf
ljmp
sub
xlat
xor
sbb
inc
int3
xchg
pop
es
mov
hlt
out
ret
scas
mov
je
xchg
mov
and
add
dec
cmpsb
hlt
outsl
jg
or
test
jo
xchg
add
data16
stc
jg
incl
xchg
inc
repnz
or
add
sahf
and
mov
sub
fs
mov
cmp
add
notb
cmp
push
in
xlat
repnz
or
cld
ljmp
sub
dec
lret
repnz
mov
sub
push
fcoml
dec
call
cld
ja
enter
les
pop
enter
leave
js
inc
pop
add
adc
ljmp
sbb
jl
sbb
out
xor
orl
cli
xchg
imul
int3
push
fcomi
shl
add
jle
push
xchg
push
cli
ljmp
lods
dec
mov
pushf
dec
push
imul
mov
pop
xchg
es
in
ljmp
jae
notb
ja
jecxz
arpl
inc
rcll
mov
adc
jmp
hlt
out
movsb
pop
pop
pusha
adcb
out
push
xchg
out
js
cmp
stos
pop
scas
repnz
cmp
ljmp
shlb
rorl
jp
push
shl
mov
ljmp
mov
mov
mov
or
xchg
adc
adc
pop
sarb
dec
sbb
dec
ss
call
out
xchg
ret
dec
add
shrl
adc
dec
sbb
mov
cld
lods
call
xor
adc
sbb
pop
and
inc
dec
and
add
fdivr
call
sbb
sbb
xchg
push
and
adc
movsb
jno
out
aam
pushl
cld
sub
mov
fdivs
inc
jle
testb
mov
push
mov
ljmp
mov
jne
ret
jge
jg
mov
xchg
jmp
jmp
femms
xchg
sarl
lret
mov
mov
xchg
addr16
sub
adc
push
loop
jmp
in
add
add
int3
jg
or
adc
stos
inc
inc
decl
adc
mov
dec
mov
xlat
cmpsb
push
xlat
inc
clc
cmp
les
addl
sub
imul
es
cmp
add
push
cltd
or
adc
xor
adc
outsb
jg
pushl
into
xchg
sub
mov
push
ret
mov
rcll
and
mov
lods
xor
aas
in
decl
pop
jp
ffree
mov
test
cmp
lret
pushf
decl
jg
push
in
ror
xor
lods
ret
adc
push
sub
mov
ret
pop
outsb
enter
inc
lcall
push
ljmp
sbb
mov
mov
adc
or
adc
cltd
fildl
lret
decl
adc
push
fistpl
cmpsl
cmp
xor
fsts
xchg
push
mov
es
gs
cmp
jne
mov
sub
cmpsl
cmp
outsb
xor
push
pop
jne
dec
jnp
sub
mulb
mov
rcrl
les
scas
or
icebp
and
jmp
pop
js
sbb
dec
mov
inc
or
int3
cmp
push
neg
aaa
cmpl
inc
mov
test
or
cmp
inc
cld
iret
xchg
xor
jbe
cmp
jp
call
pop
in
ljmp
stos
adc
push
insb
or
or
jecxz
pop
and
nop
sahf
call
inc
mov
pop
in
add
test
push
push
sub
int3
jmp
aas
fdivrl
decl
mov
incl
inc
dec
dec
mov
mov
dec
cmp
or
sbb
fdivr
lret
imul
dec
and
xor
test
mov
sbb
mov
xchg
jae
xor
adc
sbb
pop
or
dec
xor
push
or
in
loope
lods
idiv
jmp
push
push
push
outsb
movsb
mov
cs
or
sahf
sbb
inc
fucomp
mov
xchg
and
flds
sbb
xor
push
adc
pusha
sbbb
adc
loopne
sbb
incl
daa
jbe
xchg
inc
pop
mov
xor
mov
inc
add
inc
sbb
insl
decl
xor
cmp
and
mov
test
ficoml
xor
dec
das
cli
or
push
sbb
frstor
gs
sbb
or
add
lock
lcall
or
add
lds
adc
lods
cli
jmp
outsb
dec
xchg
push
fnsave
jmp
mov
das
mov
fstp
xchg
xor
cs
jae
loop
int3
movsl
mov
ret
lods
jl
jo
adcl
jg
insl
rol
mov
lods
shlb
or
mov
stos
sub
sbb
jmp
cmpsl
push
xchg
fsubr
dec
xchg
push
dec
imul
sbb
cltd
stos
sub
or
incl
or
mov
inc
std
mov
je
popf
cmovl
stos
mov
mov
leave
ss
aad
mov
push
cmpsb
decl
in
push
add
mov
iret
ret
or
fs
lahf
add
incl
or
sbb
pop
outsb
movb
xchg
lock
das
xor
and
pushl
pushl
arpl
call
in
sti
cmc
or
pop
std
cmpsb
stos
pushl
out
push
cld
mov
hlt
ljmp
call
imul
jl
stc
aam
mov
je
mov
mov
pop
ljmp
int3
jle
mov
push
in
ret
pop
add
jmp
cmova
fldenv
ja
incb
icebp
cmpsl
call
pop
add
push
cmc
repnz
ss
pop
and
dec
lods
jmp
faddp
stos
je
rolb
sub
xchg
iret
push
push
popa
or
ljmp
pop
mov
mov
add
pop
cltd
add
pop
jmp
lcall
fcomps
test
fstpt
js
dec
sbb
movsl
adc
decl
push
adc
pop
pop
xorb
dec
sub
mov
cmc
pop
adc
daa
cmpsb
cmp
add
xrelease
addl
cmc
dec
or
or
daa
mov
mov
dec
jmp
sbb
adc
repnz
jle
imul
inc
inc
cmc
xchg
push
stc
ret
decl
jl
jp
dec
mov
call
ret
push
sbb
into
jg
add
sbbb
and
cmpsb
repz
pusha
dec
jo
psubsw
subl
jl
mov
xor
in
popf
in
mov
in
sbb
btr
and
sub
add
in
ja
lds
xor
sbb
mov
int3
jg
mov
std
ljmp
sahf
xchg
xor
mov
add
jg
imul
inc
mov
add
ja
lods
ret
les
and
dec
dec
in
lcall
adcl
dec
xchg
out
xor
je
xchg
push
dec
cmp
dec
and
pop
cs
mov
lea
dec
decl
insb
das
and
enter
adc
mov
and
push
idivb
mov
call
pop
or
mov
xchg
insb
inc
push
and
scas
jo
push
lea
xor
sub
insl
add
cld
das
sub
lock
mov
jle
push
or
js
jmp
and
jne
dec
sbb
dec
decb
xchg
and
int
dec
or
sub
outsb
repnz
add
sub
or
lods
ffree
fidivl
fs
repnz
jle
sbb
dec
hlt
jae
or
pushf
xor
mov
pop
or
lret
xchg
jae
fucomip
ficompl
add
pop
lock
or
incl
daa
pop
sbb
nop
xor
xor
stos
sub
decl
gs
loop
or
inc
pop
sarb
das
push
sahf
push
push
js
push
icebp
adc
adc
decl
fadds
sub
ljmp
setg
push
lret
inc
stc
mov
cmp
filds
push
ja
sbb
in
repnz
fcomps
inc
addr16
aaa
pop
fmulp
loopne
xchg
mov
incl
jo
xor
negl
das
xor
fdivrs
in
mov
dec
mov
out
cmp
ja
lock
ss
nop
std
sbb
push
push
clc
xchg
mov
les
mov
insb
in
push
sub
pushf
inc
mov
aam
xor
fildll
mov
adc
xchg
pop
stc
ss
xor
dec
pop
push
inc
enter
test
es
add
pop
cmp
and
js
ret
call
adc
push
pop
sti
or
imul
or
push
add
xchg
push
adc
jg
adc
into
pusha
sub
clc
std
mov
jbe
pop
in
push
mov
ss
gs
add
out
popf
clc
decl
inc
jmp
inc
dec
and
decl
xor
jae
dec
pop
je
into
sub
sub
insl
mov
mov
call
xchg
xchg
xchg
cmp
dec
push
pop
dec
cmpsl
sub
xor
lahf
push
int3
xor
jg
rorl
sbb
adc
push
xor
pushf
mov
sub
adc
ljmp
inc
insb
mov
std
shrb
aam
cmp
cmp
mov
push
decl
sub
std
int
or
fisubrl
mov
sbb
cmp
jp
mov
loopne
jbe
int3
push
mov
ficoml
xchg
lea
rorb
ljmp
dec
mov
inc
es
idiv
inc
jne
sub
aaa
mov
cmc
scas
pop
pusha
lret
sar
dec
icebp
shr
add
jle
pusha
leave
lret
cli
lret
imull
jmp
fmull
mov
insl
stc
popl
imul
and
stos
insl
mov
pop
or
xchg
fs
adc
xchg
fimull
data16
add
outsb
mov
daa
push
scas
jmp
ds
fcmovbe
and
adc
xchg
add
aas
mov
mov
lret
jno
jmp
adc
and
scas
cmpsb
imul
scas
fsub
fldt
mov
mov
mov
cmp
sbb
pushf
scas
dec
add
add
orw
sub
lea
mov
add
xor
cli
dec
xchg
push
lea
inc
int3
sbb
cpuid
ljmp
adc
sub
stc
pop
jmp
inc
mov
mull
add
pushl
mov
repnz
push
lret
inc
jo
sbb
mov
es
jl
dec
mov
mov
lds
adc
ret
sub
dec
test
push
rclb
mov
test
pop
clc
and
adc
js
adcb
push
push
sub
test
test
push
mov
lock
xchg
inc
mov
mov
fcompl
mov
or
add
faddl
testb
mov
insl
and
add
pushl
and
jg
add
cld
repz
popa
sbb
aad
pop
cwtl
inc
insl
decl
cmp
jb
jp
scas
ret
outsb
sbb
jecxz
jne
popa
enter
mov
xlat
call
ds
adc
icebp
dec
mov
shrb
and
pushf
cmc
mov
gs
sbb
data16
xchg
push
or
cmpb
icebp
mov
add
test
lods
ficoml
mov
ljmp
pop
pop
mov
adc
jbe
addb
outsl
subl
jno
sub
popf
mov
rol
aad
loope
pop
pushf
add
mov
call
cmp
decl
lock
push
rol
mov
pop
insb
sahf
hlt
loopne
and
jbe
scas
mov
stos
pushl
add
sarb
add
dec
mov
aam
fstpl
pushl
or
jae
and
movsb
cmp
movsb
cmp
ljmp
jmp
xor
andl
adc
mov
or
add
repnz
mov
decl
iret
xor
add
xchg
mov
jo
jecxz
lret
pop
enter
jo
xchg
lea
inc
cmp
lahf
clc
pop
add
jp
xchg
jno
fs
popa
stos
lock
loop
sbb
pop
inc
pop
sahf
ljmp
call
mov
ficomps
dec
mov
nop
daa
movsl
cmp
incl
clc
sub
pop
cmp
sbb
push
jge
inc
adc
or
mov
and
in
cmp
push
fdivrs
adc
sahf
iret
sbb
in
adc
push
inc
lds
or
mov
ljmp
xor
dec
add
push
cmc
mov
or
imul
cmp
xlat
or
out
inc
xor
loop
outsb
scas
xor
pop
movsl
cwtl
and
scas
pushl
or
mov
pop
ljmp
pushf
cmc
add
mov
push
adc
push
aam
in
je
or
adc
incl
enter
pop
orl
test
dec
stos
pusha
push
jmp
add
jge
pop
push
loopne
rorb
lods
adc
push
jmp
or
ljmp
sbb
movsl
aad
int
adc
jg
cmpsb
or
add
adc
sub
aam
sub
fcmovnbe
sub
popf
and
push
and
repnz
add
and
addb
int
push
enter
adc
lcall
add
add
movsl
mov
ja
mov
pop
imul
cmp
out
adc
roll
insl
pushl
les
mov
sbb
sbb
pop
mov
jmp
pop
test
jmp
jmp
xor
inc
xor
push
jg
ficoml
inc
add
mov
aam
and
mov
mov
sbb
jp
sbb
xor
lcall
lret
inc
ljmp
mov
xchg
jne
jge
lahf
scas
mov
int
cmc
add
subb
mov
ret
push
sub
fnstenv
dec
into
adc
in
movsb
add
mov
call
js
loop
add
in
aaa
mov
mov
ret
sbb
hlt
dec
mov
ljmp
cmp
xlat
enter
push
mov
xor
push
cmp
incl
mov
loopne
mov
mov
and
adc
or
inc
fsubrl
decl
mov
pop
rolb
cltd
aas
dec
jle
xor
mov
cmp
ljmp
ljmp
push
cmpsl
push
jmp
stos
sbb
lods
dec
jl
jecxz
ljmp
or
dec
mov
ss
cmp
mov
es
faddl
add
jmp
mov
push
push
and
lahf
jle
ret
inc
jg
and
pushl
mov
sub
cmpsl
pop
jmp
jmp
push
test
sub
mov
ds
jns
ret
sar
jmp
mov
inc
cli
or
loopne
pop
jno
xchg
sbb
movb
push
and
mov
loopne
push
xor
pop
lret
fs
and
xor
ljmp
dec
das
roll
inc
scas
test
push
jmp
ljmp
lcall
mov
pop
pushf
mov
push
arpl
xor
mov
jg
push
pop
stos
add
popf
adc
adc
lret
push
repnz
in
and
xchg
jbe
outsl
nop
sub
subb
add
jne
in
push
cld
shrb
dec
and
out
js
decl
mov
pop
adc
push
pop
clc
mov
je
push
sub
in
daa
aam
sbb
add
popa
lret
or
pop
lret
jle
sub
arpl
xor
pusha
data16
fcompl
cmp
sbb
mov
jge
in
decl
call
mov
inc
jb
das
nop
mov
ret
inc
sub
adc
cmp
and
ljmp
lods
sub
jno
ss
call
shll
jb
sar
decb
push
lods
bound
ljmp
fst
xor
sub
mov
in
aas
imul
push
push
adc
decl
ljmp
push
pop
ja
pop
cli
hlt
sub
pop
pop
pushl
xchg
rclb
vpmacsswd
add
pop
mov
adc
add
ds
fildll
inc
and
bound
or
push
jbe
adcl
arpl
sbb
xchg
inc
scas
ret
dec
dec
daa
lret
dec
and
inc
jae
scas
nop
fmuls
call
pop
pop
inc
xchg
sbb
lock
xor
or
pop
aaa
pop
and
add
jmp
psllw
xlat
adc
jmp
or
xor
mov
jg
outsb
cmp
or
leave
dec
cmp
orps
decl
testl
add
push
mov
jo
sbb
gs
sub
lock
xorb
mov
in
aas
cli
adc
sarb
pop
adc
clc
std
mov
rclb
mov
int
push
inc
and
into
rolb
sub
mov
push
adc
icebp
sbb
push
push
clc
fisttps
shlb
push
clc
nop
loope
jne
inc
or
adc
adc
lock
dec
or
or
cmp
add
add
xchg
aas
fbstp
pop
in
push
fbld
nop
sub
add
jl
inc
cmpsb
fs
adc
push
sbb
decl
les
push
cmp
cli
cld
pop
sub
dec
mov
jg
decl
jb
js
outsl
push
in
pushf
call
out
in
push
adc
decb
mov
adc
adc
push
ficompl
out
testl
lcall
dec
mov
adc
das
inc
adc
sahf
lods
mov
jbe
xor
pusha
cmp
lahf
inc
jl
fwait
add
pushf
das
cli
in
jge
pop
and
mov
push
or
xchg
push
pop
and
add
mov
adc
ss
inc
mov
add
jle
loop
fisubs
jnp
repz
ljmp
cli
jle
push
and
or
scas
testl
add
pop
adc
or
shlb
and
out
cmpsl
icebp
jmp
nop
mov
xor
loopne
sar
jmp
call
les
flds
adc
jl
cs
sbb
cmp
xor
jb
lahf
filds
outsl
loopne
push
nop
xlat
jbe
mov
das
rorb
les
stc
sub
pop
xor
jge
jae
jle
mov
mov
push
or
addb
je
inc
rcrl
jle
data16
fildll
clc
or
mov
addr16
xor
cmpsl
push
out
enter
mov
fdivr
fcomip
mov
lcall
cld
out
mov
mov
xor
pop
mov
ljmp
cmp
and
enter
dec
cmp
mov
xchg
xchg
jne
inc
push
in
inc
popa
adc
mov
jbe
jp
daa
je
push
and
lock
pop
adc
add
decl
add
push
add
lock
add
xor
mov
sbb
mov
in
call
les
adc
in
aas
int
sbb
lds
andb
push
pop
incl
movsb
pusha
xchg
js
adc
bound
xchg
xchg
or
incl
bound
dec
scas
mov
pop
push
mov
xor
jo
aas
xor
jne
lahf
pusha
dec
test
sbb
sub
test
xlat
arpl
pop
sbb
lock
call
sub
in
xchg
add
sub
or
push
ror
sbb
leave
outsb
scas
adc
cmp
call
cmc
sbb
add
decb
test
loopne
xor
or
inc
ret
xchg
add
add
fdivr
decl
push
mov
and
in
insb
or
mov
inc
jo
sub
sub
and
in
add
das
cli
ljmp
in
pop
add
fwait
xchg
in
push
icebp
pop
mov
xchg
xchg
pushl
insl
sbb
and
mov
sub
fadd
insl
jp
inc
inc
dec
add
into
cmpsb
and
dec
add
ljmp
xchg
inc
addl
xor
lea
pop
sub
mov
jo
sub
cltd
clc
jmp
push
fwait
cmpsb
lods
cmp
lea
inc
jmp
fwait
mov
mov
je
push
divl
and
pop
mov
sub
mov
lods
mov
sbbb
and
mov
adc
sbb
pop
jne
adc
xchg
dec
fwait
xor
sub
out
lods
sbb
sub
adc
insl
fbld
jecxz
sub
sbb
inc
addb
lock
jae
decl
and
cmp
mov
add
clc
add
rcrb
movsb
ds
inc
or
adc
mov
movd
cwtl
cs
or
mov
cmpsl
lock
inc
or
cmp
test
inc
lcall
inc
fidivrs
rorl
aas
jae
cmp
ds
and
dec
mov
jae
stc
cmp
jmp
dec
out
loopne
lcall
or
push
and
cmpsb
xchg
adc
mov
mov
ja
in
pop
xchg
pop
lds
repnz
inc
inc
sub
sbbl
pop
mov
incl
push
and
leave
xor
or
mov
pop
nop
adc
in
jg
repnz
stc
xchg
push
add
repnz
or
xchg
xor
sbb
add
sub
adc
daa
nop
shufps
out
testb
sbb
sbb
xchg
jbe
push
sub
lahf
stc
decl
pop
shll
add
xor
cmc
in
inc
inc
jb
inc
push
xor
mov
jb
outsl
cli
jmp
push
adc
push
and
dec
or
pop
inc
test
mov
lret
cmp
add
fmull
mov
sbb
mov
or
loopne
lcall
cmpsl
jge
inc
movb
je
lret
shlb
xor
add
loopne
fstl
incl
xchg
ficoml
lds
push
int
filds
rclb
add
rclb
xor
and
xorl
daa
mov
int
ds
icebp
pushl
cmp
aam
xor
mov
sbb
xchg
shrb
and
jmp
inc
scas
fwait
out
adc
call
inc
ret
sbb
adc
dec
orb
inc
aaa
cwtl
pop
inc
pusha
adc
adc
rcl
dec
shll
lea
pop
jne
pop
xor
cmp
ljmp
pop
mov
andl
inc
aad
inc
push
adc
call
pop
xchg
inc
stos
or
jmp
and
lods
xchg
mov
push
and
dec
std
adc
inc
xor
mov
dec
jb
cwtl
jge
cmpsl
or
mov
movsb
xchg
cmp
inc
add
mov
fdivr
mov
std
and
faddl
loopne
fwait
dec
xchg
jecxz
sarb
decl
daa
jmp
sbb
adc
adcb
mov
mov
das
pop
ljmp
lcall
and
cmp
cmpb
hlt
sub
in
pop
inc
jne
jbe
scas
mov
inc
je
call
enter
insb
sarl
mov
add
xchg
sub
je
stos
ljmp
mov
cmpb
sahf
call
xor
jmp
xor
pop
pop
fbstp
xchg
push
adc
call
dec
fistpl
mov
jmp
push
sub
gs
or
loop
dec
or
dec
incl
adc
test
mov
stos
jae
data16
punpcklbw
inc
mov
mov
sub
inc
jbe
xchg
push
repnz
pop
and
sbb
push
xor
nop
stos
push
sub
aad
cli
je
push
mov
cmp
pop
inc
out
push
inc
xchg
fs
mov
fldt
mov
lods
pop
jg
xchg
add
mov
xor
jnp
mov
push
stos
pop
lcall
jne
hlt
call
add
cwtl
jo
imul
sbb
jnp
mov
and
pushl
gs
cmp
add
push
mov
sbb
ljmp
or
pushf
mov
mov
xor
add
fs
stc
rol
push
lds
fdivrl
loope
sbb
loop
test
jo
call
loopne
add
sbb
or
sti
pushf
jno
aas
adc
paddusb
pop
mov
imull
xor
jl
xor
xchg
inc
cld
testb
jp
gs
lea
lret
or
xor
adc
mov
ljmp
mov
lods
sub
movsb
mov
dec
out
pop
push
sti
pop
cmc
mov
or
mov
adc
data16
loopne
inc
push
mov
cltd
adc
fdivrs
mov
lahf
push
mov
and
lahf
add
fmuls
sbb
fucomip
test
pusha
cmp
loopne
dec
jo
nop
dec
daa
fistpll
mov
ljmp
nop
jnp
or
jl
cli
ds
fidivl
add
mov
mov
test
fsubs
adc
xlat
sub
les
push
xor
xchg
add
xor
in
inc
or
push
mov
jl
xchg
push
sbb
je
mul
lret
js
inc
mov
arpl
cs
push
dec
mov
jge
mov
and
sbb
dec
sbb
ljmp
sbb
das
lret
aas
cwtl
mov
adc
cmovns
xchg
ljmp
incl
and
in
lcall
aam
sbb
sahf
lea
adc
decl
lock
dec
outsb
pop
cmp
mov
loopne
mov
mov
inc
push
lock
incl
movl
jae
hlt
fildll
pushf
pushf
ret
push
cld
fists
mov
xor
mov
pop
add
in
loopne
outsl
push
test
jmp
movb
aas
sbb
fldt
cmp
push
shrl
icebp
dec
out
dec
mov
lcall
inc
xchg
jmp
push
rolb
mov
sub
lret
add
lret
lods
and
jg
int
std
jo
xchg
movsb
or
lcall
rcl
dec
sbb
rcrb
xchg
mov
lcall
lea
mov
test
jge
adc
pop
aam
or
xchg
jecxz
incl
in
ss
rorb
mov
xor
rorb
popa
push
mov
decl
adc
add
adc
addl
sub
nop
lods
cmp
jae
jnp
es
jmp
adc
ss
inc
inc
or
or
ljmp
lock
lock
orb
mov
int3
jecxz
jno
test
inc
mov
lock
mov
adc
xor
push
adc
add
fdivl
addb
ret
fldl
rcll
loope
add
add
ja
daa
stc
in
mov
pushl
popa
xor
lahf
js
or
adc
pop
lods
cltd
orb
adc
rcll
or
in
inc
sbb
loop
add
fwait
jmp
arpl
dec
pop
or
pop
jg
xor
faddl
cld
pushl
inc
sbb
xor
daa
ficomps
inc
lock
dec
mov
xchg
call
push
xor
sbb
pop
jne
dec
and
and
cmp
inc
xor
movsl
push
mov
std
mov
fiadds
adc
in
loop
sahf
test
xchg
mov
ret
aaa
std
incl
bound
jmp
pop
xor
and
pop
and
les
jg
push
mov
cmpb
push
dec
inc
cmp
sbb
cltd
mov
fcompl
adc
flds
leave
adc
mov
push
int3
mov
dec
pop
xchg
cld
lahf
andb
fmulp
ss
fmul
cli
jno
dec
dec
cs
stos
mov
lea
call
mov
push
jae
leave
push
jnp
in
rorl
jg
mov
xlat
mov
sar
insl
lcall
ror
jp
pop
and
shrl
pop
orl
decl
dec
pop
mov
fcom
ja
dec
ret
dec
sub
gs
jg
je
xorl
cwtl
inc
aas
mov
imulb
xchg
push
mov
add
sbb
es
dec
lret
adc
mov
fists
test
stc
pop
cmp
ja
or
pop
mov
lldt
movzbl
add
jbe
or
inc
call
push
adcl
sbb
mov
iret
movb
scas
mov
xor
xor
call
lods
lret
cld
fcoms
mov
ljmp
sub
dec
push
in
call
cmpsl
pop
cld
fiadds
lahf
mov
sub
add
adc
cld
mov
movsbl
xor
stos
push
and
loope
loope
fwait
or
fmull
insb
mov
or
negl
xor
push
sub
jg
jg
or
pushl
push
out
or
in
clc
adc
int
addr16
push
add
in
decl
sub
sub
popa
ljmp
les
sbb
test
lret
ja
dec
mov
ljmp
jmp
sub
mov
sbbl
decl
test
jno
and
nop
roll
or
add
aas
and
add
jg
jge
jl
jecxz
rcll
push
das
mov
push
sbb
dec
mov
lret
gs
xchg
or
ss
add
and
or
cmp
outsl
cli
sbbb
pop
out
fsubs
adc
inc
cmc
call
movsb
adc
arpl
outsb
les
or
shlb
filds
adc
push
cld
mov
and
pushf
pushf
stc
repz
add
push
jg
pop
add
js
test
ds
dec
cli
adc
push
scas
push
fistps
je
pop
jg
push
shrb
push
inc
lods
test
and
repnz
test
push
xor
jnp
dec
cltd
ss
popf
jb
adc
xchg
or
fstps
push
ret
in
pushl
incl
inc
or
lock
test
mov
xchg
fwait
pop
lcall
decl
rorb
cmp
pop
loopne
outsb
fsts
insb
mov
cltd
add
mov
add
mov
in
nop
xchg
fnsave
mov
shll
subl
fnsave
mov
lock
clc
sub
mov
aam
xchg
jl
push
add
fildll
jge
stos
cmp
jo
test
push
pop
cltd
add
mov
sub
ljmp
jge
add
sbb
int
jl
in
add
lods
sbb
in
mov
ret
mov
dec
jbe
adcl
scas
pusha
pop
add
jmp
popf
mov
add
ret
jo
adc
dec
xchg
jne
jecxz
outsb
lock
push
jns
sar
dec
mov
or
stos
hlt
addr16
mov
jb
je,pt
sbb
ljmp
std
mov
pop
inc
arpl
sub
jbe
dec
lret
sub
fisttpll
mov
test
out
in
pusha
divl
fdivp
idivl
cmpsl
inc
dec
cmp
jg
lods
xor
movsl
jae
imul
adcl
push
or
mov
inc
dec
and
inc
test
cmp
mov
jmp
xchg
or
mov
fs
inc
inc
rclb
sbb
leave
adc
add
cmpsl
movsl
jbe
sub
loop
push
popa
xchg
movsl
xor
stos
push
scas
aaa
into
inc
fiaddl
push
mov
lret
and
mov
sbb
add
add
out
je
jmp
fstps
mov
xchg
mov
dec
lcall
xadd
add
call
sbb
sub
movsb
cmpb
lahf
add
sbb
xchg
sbb
mov
push
popa
or
fists
test
or
insb
jg
rclb
pop
cld
outsb
pop
sbb
xor
pop
leave
jg
sbb
sbb
nop
inc
in
ljmp
in
jbe
add
pop
pop
inc
pushf
inc
mov
adc
es
std
jmp
mov
and
and
pop
adcl
jno
inc
add
cmp
inc
scas
arpl
pop
or
adc
pop
or
pop
lcall
adcb
fisttpl
out
xchg
mov
xor
pop
add
lods
mov
cltd
cmp
sub
lds
enter
andb
ror
icebp
or
cmc
dec
pop
ljmp
mov
jg
or
inc
mov
mov
je
lahf
dec
insb
ja
clc
fisttpll
shll
xchg
inc
in
cs
call
sub
lock
dec
ret
or
dec
push
mov
push
add
sub
into
lea
jmp
xchg
mov
mov
jecxz
sub
in
and
rcll
dec
mov
xor
push
loope
or
add
and
sbb
pop
xlat
and
dec
mov
std
add
jo
lods
cmp
inc
or
mov
sbb
xor
and
mov
rcl
cmp
sbb
movsb
mov
insb
cmc
test
pop
pop
sbb
dec
sub
pop
pop
insl
adc
nop
mov
push
pop
cmpsl
or
pushl
flds
mov
pop
outsb
loopne
dec
lods
out
xchg
cmp
enter
sbbb
in
or
insl
pushl
and
fsubrl
dec
daa
ret
mov
test
xor
jle
cld
cmpb
les
js
incb
std
push
sub
jnp
cld
fnstenv
cli
rcrl
test
adc
push
add
aaa
push
lds
cmp
push
icebp
std
dec
inc
push
sar
bnd
add
jl
addl
hlt
aam
pop
and
decl
adcl
push
test
sbb
jecxz
xchg
cmp
ljmp
out
cltd
ljmp
jno
es
push
adc
and
add
xchg
push
jg
aam
xchg
sbb
inc
xlat
cmp
in
std
out
inc
dec
das
scas
lcall
cmp
and
or
imul
inc
lcall
lret
lcall
sub
std
sbb
and
pop
movsb
or
add
adc
or
fnsave
adc
int3
pop
or
or
mov
cld
jmp
andl
jo
and
stos
insb
lret
lcall
add
cmp
push
dec
sbb
jnp
jnp
jecxz
lea
jb
ficoml
out
dec
jbe
sub
mul
inc
jb
push
cmp
je
adc
sub
andb
sar
call
dec
fs
or
inc
push
mov
xorb
clc
cli
add
adc
dec
pop
jg
jae
dec
sub
mov
adc
rolb
clc
subb
daa
xchg
scas
call
fdivs
mov
add
push
push
fsubrs
data16
mov
jg
call
cmp
jns
or
test
in
adc
loop
and
pop
hlt
jmp
cltd
push
or
divb
daa
loopne
add
and
adc
decl
mov
mov
mov
imul
push
xor
mov
incl
sub
fld
es
jo
inc
mov
and
xor
loope
fimull
cli
pushl
bound
sub
ret
jmp
push
pusha
and
xor
decl
cmp
mov
sbb
sbb
adc
dec
inc
or
sbb
clc
fwait
cld
repz
sub
add
daa
xorl
incl
mov
cs
add
inc
pusha
ljmp
pop
or
loope
push
es
dec
jge
mov
jnp
inc
sub
imul
stc
mov
insb
mov
decl
cmp
jg
lea
sbb
xor
inc
pop
adc
push
scas
pushf
cmpsl
lcall
xorl
adc
or
mov
ljmp
push
sbb
imul
dec
outsb
outsb
push
in
sbb
sub
test
cwtl
xchg
xchg
pushl
fcomps
sbb
and
leave
or
adc
inc
in
push
rcrb
call
push
iret
push
mov
shrb
dec
sub
dec
shlb
xchg
pop
lret
sub
clc
loop
cmp
ret
sahf
mov
scas
pushf
mov
loope
decl
jecxz
xchg
add
pop
dec
pop
push
add
sbb
add
inc
outsl
push
lret
and
stos
incl
jae
icebp
mov
inc
adc
push
cmp
pop
push
mov
mov
lret
sti
push
xor
inc
jbe
cmc
xchg
loope
outsb
push
sub
inc
sbb
fstp
push
mov
call
jno
rol
dec
loope
mov
dec
mov
push
mov
add
mov
sub
mov
fists
movsb
in
inc
cmp
dec
sbb
cmpsl
push
int
dec
stc
pop
aas
push
push
jecxz
jns
push
or
or
clc
loope
inc
imul
sarb
decl
incl
add
movzbl
out
pop
add
xchg
dec
push
adc
or
decl
stos
enter
mov
and
cmpb
fnstsw
movsb
lret
mov
sub
lcall
pusha
xadd
or
incb
addr16
int
jmp
dec
icebp
pop
mov
sti
sahf
xchg
fcomip
mov
cmp
or
rolb
out
repnz
fldcw
dec
and
and
cmp
adc
fisubrs
inc
dec
or
add
out
xchg
stos
fcmovnu
sub
test
fistps
jmp
sub
call
fldl
mov
dec
push
sbb
test
mov
daa
test
stos
ljmp
mov
mov
or
sbbb
sbb
incl
mov
pushl
icebp
test
pop
pop
andb
push
jmp
inc
add
insl
incl
push
mov
push
and
mov
and
pusha
dec
add
imul
push
shlb
ljmp
dec
jmp
pop
add
popf
adcb
add
mov
enter
jmp
movsl
enter
lods
mov
sub
cmp
jb
mov
mov
push
sahf
ljmp
inc
pop
add
repz
sub
loope
mov
mov
fdiv
add
call
dec
repz
pop
push
sbb
call
dec
cmp
or
lcall
clc
pop
mov
sbb
push
inc
dec
fisttpl
mulps
jae
cld
adc
or
mov
adc
inc
pop
mov
sbb
test
push
inc
and
xor
sbb
ljmp
fnstsw
pusha
lods
push
sbb
mov
xor
sbb
test
dec
jecxz
testb
mov
adc
std
rorl
push
dec
push
cmp
sub
and
test
sbb
and
or
test
or
int
add
aaa
and
lea
test
jnp
inc
test
mov
push
push
les
mov
inc
fiaddl
lock
xlat
stos
test
and
sarb
ljmp
in
shlb
xor
rorl
mov
pop
xor
jno
ds
and
ja
mov
lock
jecxz
or
data16
jg
lcall
out
mov
or
dec
dec
pop
imul
mov
xor
cmp
sub
ja
pushl
in
add
sbb
pop
inc
sbb
dec
sbb
add
push
insl
mov
and
ljmp
adc
lret
fsts
adc
sbb
aam
cmp
and
push
pop
popa
loopne
sub
in
lcall
aam
dec
add
cmp
aas
mov
mov
jbe
pop
test
sub
pusha
idiv
lods
lcall
sub
test
inc
out
mov
movsb
sbb
pop
or
loopne
fxam
mov
adc
mov
xchg
decl
mov
sub
add
add
aam
dec
incl
sti
mov
xchg
dec
div
jecxz
daa
xor
add
add
ljmp
call
inc
fndisi(8087
xchg
adc
mov
imul
push
xchg
xor
mov
cli
loopne
mov
jmp
pop
ret
push
fidivs
fldt
and
sbb
push
aad
loop
clc
rcl
mov
push
jle
call
push
or
mov
rclb
clc
or
add
cmp
jae
insl
cmp
push
jb
or
in
jmpw
jns
sbb
sub
add
xchg
cld
test
pushl
loop
sbb
mov
leave
sbb
sysret
mov
push
lret
jle
jmp
ret
lods
xchg
jl
aas
push
rcll
les
sub
fbstp
inc
adcl
pop
hlt
pop
ret
pusha
xor
popf
inc
xor
cmp
dec
test
cmc
jmp
mov
stos
add
xchg
pop
mov
in
xor
cwtl
or
cmc
fists
shll
mov
dec
sub
mov
pusha
pop
or
push
sbb
sbb
filds
je
mov
xorl
adcb
incl
je
rcll
shrb
push
mov
stos
insb
ret
movsb
mov
cmp
dec
lcall
jbe
pop
mov
mov
mov
es
sbb
decl
add
and
faddl
lcall
imul
shlb
add
adc
test
dec
icebp
bound
xor
pop
in
pop
jge
cmp
ljmp
movsb
cmp
lret
in
pop
mov
mov
jecxz
cmp
xchg
sbb
int
cmp
cmp
mov
stc
pushl
fmuls
test
mov
adc
jmp
les
test
mov
ljmp
adc
mov
shll
dec
dec
inc
stos
test
cwtl
ja
mov
jp
call
push
adc
mov
or
ljmp
je
push
xor
lcall
cmpsb
loopne
sub
sub
sbb
out
in
jge
mov
jmp
pop
jne
roll
stos
out
insb
add
jmp
push
jae
inc
push
dec
cmp
out
pushl
insb
leave
inc
xor
push
test
xor
adc
cmpl
pop
popa
xchg
lods
mov
scas
mov
das
ljmp
adc
pop
mov
cltd
mov
lcall
pushl
lods
test
sub
inc
mov
lahf
jge
jno
testb
gs
ljmp
mov
jnp
inc
push
or
arpl
shl
and
pop
add
imul
cmp
push
fs
xchg
lods
inc
icebp
sub
push
or
sub
push
or
jo
mov
das
inc
sbbb
out
pop
mov
push
ljmp
pop
cld
fsts
leave
jns
repz
xchg
scas
jmp
xor
mov
rcll
sbb
sbb
incl
in
stos
adc
popf
and
pop
mov
inc
lcall
mov
inc
cwtl
xchg
cld
inc
and
xchg
mov
push
inc
mov
or
add
mov
xchg
loop
jge
js
loope
xor
ret
or
push
rorb
jg
mov
push
inc
mov
inc
ss
lods
sbb
mov
add
loop
dec
pop
loope
rcr
mov
and
adc
or
cld
inc
cmpsl
das
daa
loop
pop
ret
decb
ss
add
cltd
xor
adc
icebp
jg
call
jl
push
add
jg
mov
popf
pop
cmp
xor
icebp
lcall
mov
sbb
sub
icebp
enter
lock
ss
decl
enter
xchg
shlb
gs
aas
fcomps
mov
inc
and
lret
test
ljmp
pushl
ljmp
and
xchg
add
mov
js
jne
push
push
lods
das
cld
subl
decl
addr16
push
pop
rolb
jns
mov
clc
fucomp
and
push
add
shll
xor
test
pusha
inc
and
ror
pop
icebp
incl
pop
adc
dec
or
aas
dec
jne
xor
ljmp
mov
loope
lahf
pop
dec
call
or
dec
pop
inc
push
int3
fcomip
in
xchg
xchg
and
outsl
out
adc
in
jno
sub
dec
or
fidivrl
ret
out
nop
and
add
lods
mov
add
mov
arpl
dec
decl
mov
or
push
mov
jp
scas
test
push
dec
adc
push
pusha
lret
push
hlt
out
loope
adc
in
dec
sti
nop
clc
sbb
clc
cmc
testb
and
test
rcrb
incl
mov
cli
cld
pop
lcall
dec
cmpsb
add
cltd
aas
dec
clc
decl
pop
jno
mov
mov
cmpsb
mov
xchg
jns
push
ljmp
push
out
mov
fildll
push
rorb
add
adc
test
lcall
and
dec
stos
jnp
cmp
add
dec
add
lock
jo
add
mov
or
hlt
jb
dec
js
mov
or
lret
ret
push
ret
or
lcall
incl
arpl
outsb
stos
je
cmp
mov
pop
ljmp
xchg
dec
dec
fildll
js
adc
out
repnz
inc
pop
fwait
loope
call
call
pop
inc
push
xor
xor
mov
or
clc
or
cmp
ret
xchg
mov
lcall
iret
pop
icebp
call
sub
hlt
mov
ror
xchg
addb
inc
lods
and
stos
int3
out
mov
test
mov
fildl
outsb
shlb
sbb
adc
sti
mov
mov
pop
int3
push
std
dec
fnsave
rolb
jnp
mov
pop
decl
outsb
out
cmp
mov
bound
cli
subb
jmp
faddl
push
push
lret
rclb
jle
rolb
xor
mov
mov
push
test
cmpb
incl
je,pt
push
loop
test
les
mov
adc
jecxz
lahf
sbb
add
decl
lea
cmp
pop
mov
aam
jl
mov
js
xchg
inc
movsb
fbstp
pcmpgtw
enter
add
mov
test
test
decb
jbe
mov
inc
cmpb
mov
loop
mov
lret
xchg
enter
pop
adc
mov
push
pop
adc
decl
inc
ja
xlat
sbb
fldenv
and
lods
pop
mov
mov
int
or
jbe
lock
incl
mov
mov
cmp
mov
xor
insl
shll
mov
test
push
mov
aaa
and
dec
sahf
mov
addb
into
nop
or
inc
popa
aaa
add
divb
in
sbbl
and
push
push
sub
js
shrl
push
gs
popf
cmp
ljmp
mov
lds
aad
fidivrs
dec
mov
dec
pop
in
clc
and
cwtl
mov
dec
jl
push
sarb
and
mov
push
sub
pop
inc
inc
pop
mov
jmp
sub
sbb
rcrb
mov
lods
xchg
jmp
out
fs
pop
mov
mov
mov
dec
cmp
push
dec
lods
sahf
fs
imul
add
mov
pop
les
jbe
inc
pusha
scas
mov
and
cmp
js
sbb
xchg
hlt
lcall
jns
lock
inc
ss
lock
adc
push
test
lcall
fimull
xchg
ljmp
insb
xlat
add
add
test
outsb
jge
cmp
ret
adcl
jmp
call
cmp
test
popf
dec
cmp
cmp
jg
pop
sti
test
push
xchg
fs
jmp
lock
pop
lds
and
jno
cmp
inc
inc
lods
inc
call
clc
push
adc
or
push
mov
stc
cmp
inc
fcoms
mov
divl
pop
mov
xchg
js
test
cld
fnstcw
test
movsb
sti
cmp
sti
neg
xor
push
xorb
fdivr
dec
mov
cmc
lock
fnsave
ja
xor
pop
or
sub
lock
add
lret
mov
fistps
rorl
in
lret
fcoms
in
fcomp
mov
insb
roll
imul
scas
inc
dec
shll
loopne
adc
roll
subl
and
xor
decl
call
repz
mov
mov
push
push
lods
ja
decl
jo
mov
in
test
repnz
in
pop
cmp
jg
push
fidivrs
pop
add
fs
inc
fwait
lods
dec
lea
jge
loop
stos
in
push
push
push
push
nop
jp
and
sbb
repz
les
int3
inc
out
xor
jg
xchg
test
aam
test
lcall
push
shrb
orb
nop
xchg
mov
inc
jmp
rcr
lahf
jne
sahf
test
insb
pop
push
xchg
ret
sti
lcall
out
aad
sbb
mov
insb
std
icebp
cmp
psubb
sbb
es
ljmp
sahf
push
rolb
lea
adc
in
add
jnp
add
or
add
add
scas
in
adc
nop
ret
xchg
stos
ret
jns
jnp
aam
pop
mov
in
in
addl
or
sbb
mov
sub
add
das
adc
mov
mov
ds
cmpsb
adc
decl
mov
outsl
add
cmp
or
sbb
mov
pop
dec
inc
jne
and
cmp
int3
insl
faddl
insl
call
push
cmp
jmp
xor
push
jno
add
popf
aad
add
mov
stos
inc
ror
movb
or
fistpl
lods
mov
adc
mov
dec
incl
pop
xchg
int
les
sarl
xchg
insb
iret
ja
test
jmp
cli
cmp
xchg
scas
aad
xor
cmp
mov
jg
and
faddl
xor
pop
adcb
push
arpl
scas
jnp
mov
or
decl
xlat
adc
xchg
nop
cwtl
mov
hlt
sub
sbb
xchg
lea
pop
pop
cmp
jle
cs
jl
mov
xchg
and
je
dec
shrb
mov
push
in
addl
push
int3
sarb
imul
fnstcw
jle
sbbl
call
hlt
loope
cwtl
pop
sub
stos
rorl
or
rcr
sbbl
out
cmpsb
rol
sub
ljmp
pop
mov
bound
les
lahf
stos
jp
and
xchg
popf
sbb
je
jmp
fsubrl
negl
decl
adc
ss
lcall
sub
sub
aaa
in
mov
cs
ljmp
sub
xchg
jo
fcmovb
jo
cmpsb
adc
jecxz
call
decl
and
jne
pusha
xlat
mov
sub
cltd
push
stos
push
pushl
pop
push
popa
push
push
cmp
mov
jb
inc
loopne
inc
adc
loope
and
jo
and
jle
dec
sub
fcomip
mov
xchg
push
mov
xchg
push
test
cwtl
add
in
in
les
das
xor
sbbb
lret
loopne
pop
ret
mov
and
mov
mov
pop
sbb
inc
push
xchg
jmp
ljmp
cmp
jo
nop
cs
je
or
jp
or
cli
je
ds
sbb
out
enter
or
fadds
pop
xchg
mov
imul
jp
add
cmpsl
shrb
jae
cmp
pop
jnp
inc
and
fadd
mov
popf
jl
push
call
mov
arpl
xor
mov
sub
fists
sub
cs
ror
add
sbb
lret
mov
jb
push
push
icebp
ljmp
add
int3
sbb
iret
mov
cs
push
or
iret
add
or
lcall
test
aaa
or
add
subb
or
call
sbb
lea
filds
int3
add
pop
xchg
sbb
int3
adc
or
inc
cld
inc
adc
sbbb
fbld
decl
faddl
sbb
mov
scas
fbld
cmp
pop
lea
sub
add
decl
stos
shll
fstpt
cmpl
mov
xor
mov
push
jno
jo
ljmp
mov
lahf
fldl2e
rclb
and
pmulhuw
xchg
dec
incl
lcall
inc
fdivrp
cmp
mov
lea
ret
arpl
sarb
xchg
int
movzbl
push
hlt
push
lea
mov
fiaddl
mov
jne
test
mov
ja
push
stos
das
dec
xor
call
cmp
jbe
out
jb
add
test
ficoms
push
cld
mov
cld
pop
fnstenv
rcr
inc
mov
iret
adc
or
dec
faddp
arpl
jle
mov
aam
jmp
sub
hlt
or
inc
lock
add
sar
sbb
inc
outsb
sahf
ljmp
pop
jl
mov
inc
outsb
pop
jecxz
mov
lds
not
movsl
fistpl
repnz
ffreep
or
lcall
clc
cmpsb
ja
testb
add
inc
pushl
rcr
roll
add
insl
mov
insl
sub
push
in
sbb
ljmp
push
push
add
in
dec
pop
cmp
repnz
and
add
xor
mov
les
clc
push
ja
mov
or
mov
sbbb
jmp
rcll
ljmp
dec
inc
xchg
add
outsb
test
stc
jle
clc
push
lods
jg
pushl
mov
push
out
cmp
insb
or
scas
sti
scas
jmp
cmp
adc
jmp
inc
ljmp
mov
jmp
adc
jbe
cmp
add
pushf
adcl
cmp
div
pop
mov
ljmp
push
nop
bound
push
push
mov
dec
repz
fwait
mov
aas
sbb
or
lea
pop
sbb
sahf
adc
arpl
jmp
pusha
adc
mov
mov
imul
loop
lods
mov
clc
jbe
jo
ret
inc
add
cltd
mov
mov
ds
sub
xor
push
mov
sub
decl
xor
popa
std
les
inc
adc
add
psraw
fstpl
and
push
mov
stos
insl
out
arpl
jnp
or
stc
sbb
cmp
add
mov
lea
lcall
sbb
dec
mov
lcall
cmc
ljmp
popa
sbb
dec
xchg
in
jb
lcall
push
adc
adc
loope
clc
mov
or
sahf
test
aas
or
sahf
sahf
xchg
int
lods
mov
xlat
lret
add
ja
push
dec
sbb
push
cmp
or
pop
add
xchg
subb
jnp
incl
cld
stos
dec
and
mov
test
push
push
and
pop
jno
aas
dec
lods
mov
shrb
sub
sub
sub
jg
mov
and
es
ljmp
sub
mov
int
push
xor
mov
loop
hlt
push
and
push
dec
out
jns
add
mov
imull
push
cmp
dec
and
repz
ja
ret
inc
cmp
es
cmp
push
ret
fsubr
sti
dec
fidivrs
pop
cmpl
and
decl
rep
mov
ja
push
xchg
fwait
lahf
pop
std
push
or
or
adc
in
dec
sarl
or
cmpsb
adc
ljmp
dec
sbb
sbb
dec
sbb
xchg
pushf
sbb
sbb
xor
mov
mov
xor
add
mov
mov
call
or
jle
sbb
sbb
add
xchg
sbb
pop
std
jle
mov
pop
je
fldcw
pop
int3
jmp
mov
sub
cwtl
lret
push
jmp
enter
cmpsb
add
and
mov
cmp
std
sub
mov
mov
dec
push
push
mov
fistl
push
aam
mov
jne
addl
shrb
dec
popf
mov
outsl
leave
push
or
add
call
or
inc
clc
es
sub
push
ss
lahf
pop
incl
sub
pusha
outsl
cmp
ss
lods
dec
push
test
call
decl
xchg
jne
dec
add
inc
test
mov
adc
cmp
inc
sti
add
das
sar
ss
bound
sbb
rclb
dec
jo
push
jnp
and
call
xchg
stos
mov
dec
imul
or
adc
and
aaa
cmp
mov
add
dec
xor
mov
add
mov
inc
xchg
xchg
sar
cwtl
mov
fsubrs
dec
andb
fsubs
enter
mov
test
mov
sahf
fmuls
xor
scas
add
scas
loopne
clc
inc
mov
cli
sub
mov
daa
push
jbe
mov
rcl
xchg
mov
fdivl
lahf
sub
mov
push
lock
mov
aaa
nop
add
imul
xor
or
cmp
mov
xor
sub
dec
imul
xor
xor
jo
jb
scas
clc
adc
jle
sub
pop
test
fmulp
mov
sahf
add
push
into
pop
ja
inc
ret
add
dec
pusha
stos
loopne
loopne
mov
cmpsb
out
jae
push
std
inc
aam
sub
es
cmp
inc
orl
les
lea
sbb
add
mov
add
xor
lock
cmp
sub
add
andnps
lret
lcall
insb
pop
mov
in
and
ret
push
dec
add
mov
into
mov
rorb
aas
adc
fcoml
test
inc
dec
add
lods
lcall
sub
sbb
or
call
in
push
bound
daa
data16
cmp
shlb
sbb
mov
push
fcoml
pop
lods
nop
sbb
pop
or
loope
adc
ljmp
xchg
mov
push
push
push
daa
xor
ljmp
sbb
push
jp
pop
shll
data16
sbbb
xor
jmp
cmp
sub
lcall
sbb
and
adc
aad
sub
xchg
subb
lcall
pop
mov
sbb
xor
or
call
inc
mov
mov
shr
clc
call
testl
mov
int3
mov
jne
and
lods
ljmp
jo
adc
add
xor
shl
orb
data16
xchg
push
push
sbb
mov
mov
lock
jge
adc
add
dec
push
insb
aad
lods
and
inc
cmp
sbb
dec
fiadds
pusha
xor
pop
inc
jb
mov
rol
adc
clc
fcmovnbe
repnz
dec
add
cmp
fsubl
and
or
cmc
inc
mov
or
xor
test
inc
std
lret
inc
aaa
sub
sbb
decl
xchg
jbe
out
add
int
jge
mov
push
inc
push
push
push
mov
mov
mov
cmp
jne
adc
std
fs
enter
jne
inc
rcrl
decl
mov
ss
jne
adc
jns
inc
loop
inc
sub
inc
or
dec
inc
inc
jg
cmc
xchg
or
out
jg
icebp
jle
xchg
pop
push
lahf
dec
and
push
and
pushl
sub
jae
outsb
int3
sbb
sbb
pop
pop
scas
or
pop
and
mov
or
mov
push
bound
mov
inc
loopne
lea
add
jb
cmpsb
or
jg
pushl
stos
adc
mov
push
imul
mov
push
inc
pop
in
mov
test
fs
ret
test
add
xor
nop
loopne
dec
aaa
xor
and
dec
add
xchg
push
mov
jp
aaa
xor
and
push
cmp
inc
sahf
gs
mov
iret
and
pop
cmp
shll
aam
pop
subl
cmp
ljmp
add
int
movsb
loopne
add
add
mov
dec
clc
pop
cli
sbbb
sub
nop
cltd
mov
mov
lcall
cmp
add
leave
push
mov
jg
cltd
ds
pop
cmp
mov
xchg
and
mov
nop
or
mov
call
mov
leave
mov
data16
cmp
inc
and
or
cmp
dec
push
dec
andb
and
sbb
add
dec
dec
inc
push
or
add
es
adc
jbe
cwtl
and
lods
inc
bound
push
out
and
aam
mov
or
aaa
push
fisttps
push
add
and
or
lcall
test
mov
decl
imul
arpl
push
adc
popf
popa
adc
push
mov
add
xor
inc
movsb
dec
cmp
popa
adc
enter
jbe
mov
mov
cmp
add
pushl
jne
js
xor
fistps
and
fsubl
pop
shl
jns
mov
jmp
cs
incl
inc
push
jmp
or
das
mov
jl
in
jnp
arpl
call
sarl
jp
insb
cld
outsl
pop
mov
pusha
cmp
ret
mov
test
xchg
adc
xor
jge
jle
add
or
cmp
cmp
xor
out
mov
add
lahf
cmp
mov
jns
push
push
mov
inc
or
or
mov
jg
lock
xchg
sbb
inc
add
int3
push
int
subb
ljmp
mov
cmp
subb
or
int
add
add
lods
cld
insb
mov
decb
test
dec
idiv
mov
adc
test
pop
cmp
cld
lea
cmp
scas
cs
mov
dec
aaa
inc
push
movsb
push
imul
sub
xor
enter
call
push
lods
test
mov
sarl
popf
sbb
or
jg
cld
mov
in
call
daa
mov
das
bound
js
out
mov
jne
push
xchg
pusha
adc
dec
adc
dec
push
ss
inc
je
ds
and
sar
mov
push
cs
push
sub
insb
push
pop
mov
jno
hlt
add
jae
lea
std
lods
test
bound
sbbl
dec
in
sbbl
lret
sarl
pop
imul
cld
mov
orl
adc
dec
mov
xor
ret
popa
popa
rorb
iret
pop
cmpb
pushf
xchg
fisubrl
aaa
popf
mov
mov
decl
mov
daa
inc
mov
sub
and
and
lcall
mov
test
adc
in
inc
and
mov
push
lret
std
xor
fstpt
inc
repnz
or
xor
movsb
shrb
or
pop
dec
loop
pusha
mov
decb
bound
call
add
push
ja
jle
out
xchg
std
sbb
cmp
lahf
jecxz
in
in
out
fistl
jg
lcall
rcrb
or
push
mov
push
mov
adc
pop
pop
add
decl
movsl
iret
cmp
or
mov
jge
mov
movsb
popa
mov
pop
or
and
ljmp
test
push
cmpsl
out
rcll
scas
mov
rol
insb
mov
movsb
lea
sbb
adc
dec
lock
push
dec
and
lahf
dec
in
movsl
and
ljmp
imul
fisubs
dec
sbb
mov
clc
call
cs
add
push
es
mov
dec
jl
pop
clc
adc
cmp
stos
scas
adc
and
addl
jle
xor
push
sub
paddsb
testb
xchg
data16
out
in
in
jl
in
mov
jmp
in
mov
sub
xchg
mov
fsubl
add
gs
sub
mov
dec
lcall
lods
cmp
popa
jno
loop
push
dec
nop
adc
push
push
or
mov
cld
rcl
push
lea
xchg
outsl
jecxz
sub
mov
neg
lret
test
add
or
lcall
fbstp
push
inc
push
xchg
loopne
scas
xchg
add
lods
jb
clc
rcrb
sbb
sub
ljmp
decl
xor
stos
jae
cwtl
adc
je
lods
sbb
mov
dec
inc
lods
test
fcoms
cwtl
xchg
push
or
cmp
jmp
mov
sti
incl
push
xchg
fiaddl
or
insb
test
inc
dec
sub
call
ljmp
mov
jo
cmp
and
and
enter
sbb
movsl
jg
sti
dec
test
cltd
subb
adc
and
fcompl
sbb
push
cmpsl
enter
adc
mov
movsb
js
jnp
cli
mov
jmp
test
jne,pn
int3
fildl
inc
cmp
jbe
inc
jmp
sbb
cmp
cmp
inc
sub
adc
decl
pusha
mov
sbb
or
js
pop
xor
pop
jg
ljmp
loop
or
ret
pop
or
int
xchg
lret
push
test
add
lds
lods
in
lcall
cmp
out
shll
cmp
nop
pushf
or
decb
cmpl
lea
sub
in
xchg
rorl
adc
rcrb
pop
mov
xchg
mov
hlt
decl
je
add
pop
sub
adc
fwait
adc
pop
or
decl
call
pop
xlat
cmp
aad
or
mov
jns
cmp
incl
mov
cmp
es
movzbl
sbb
imul
add
aad
adc
dec
xchg
movsb
inc
ds
ljmp
add
fucomi
sahf
lods
push
icebp
add
cmp
jl
or
mov
cwtl
lret
dec
sbb
dec
inc
lcall
adc
les
hlt
in
nop
in
lcall
fdivs
inc
xchg
jb
sub
push
or
out
and
sbb
ja
incl
lea
das
mov
cmpsl
ja
mov
mov
inc
fnsave
xor
or
add
dec
xor
or
test
dec
dec
sti
sbb
mov
sbb
sbb
mov
mov
cmp
pushl
sbb
dec
lds
pop
xchg
xchg
xchg
push
pop
lds
sbb
test
call
xor
test
pop
jge
add
sub
sbb
test
push
push
aam
fs
jmp
and
push
inc
add
mov
sbb
sar
das
lock
sbb
dec
push
ljmp
cmc
incl
and
xchg
rorb
subb
add
adc
iret
addr16
mov
and
dec
sbb
mov
cmc
and
cmpsb
xor
out
nop
iret
push
loopne
mov
js
xchg
mov
xor
hlt
push
lahf
or
lock
call
xchg
and
andb
cmp
mov
jns
inc
cmp
lret
ljmp
push
enter
sar
js
test
push
jecxz
jo
mov
das
clc
lcall
inc
loope
loope
in
inc
push
dec
clc
fistps
inc
outsl
test
push
mov
mov
outsl
ljmp
int3
lods
subl
add
shr
je
es
mov
clc
jmp
js
or
mov
adc
inc
add
out
jb,pt
jmp
push
add
ljmp
adc
adc
jmp
roll
or
lret
mov
and
ds
pop
or
stc
pop
and
pusha
decb
inc
cmp
ret
push
jmp
and
ret
add
xchg
dec
movsl
icebp
sub
aaa
icebp
inc
int
cmp
je
push
xchg
mov
incl
jmp
inc
mov
stos
pop
push
pushf
loopne
jge
mov
xor
mov
dec
pop
or
std
mov
cmpb
sub
sbb
add
aam
in
cmp
fwait
or
ljmp
xor
mov
mov
popa
mov
lcall
cltd
add
loop
mov
shlb
push
push
mov
add
ljmp
mov
and
mov
add
subb
add
pop
mov
sahf
pop
cmp
jg
push
push
inc
mov
idivb
jo
cmpsb
scas
clc
call
dec
and
insl
jne
in
xchg
or
ficoms
adc
sbb
pushl
mov
decl
and
loopne
adc
mov
cmp
jecxz
inc
add
mov
push
loopne
mov
or
ja
jnp
pop
in
xchg
pop
jne
lds
and
je
add
lods
adc
inc
pop
and
dec
jno
adc
gs
add
push
inc
in
iret
daa
push
les
outsl
add
rorb
add
xchg
int
clc
les
nop
mov
and
ljmp
test
pusha
adc
jecxz
pop
sbbb
push
add
adc
xchg
pop
pop
insl
je
das
push
out
cs
lock
jne
ret
pusha
pop
or
cmp
mov
add
adc
insb
mov
push
and
xchg
push
jne
popa
pop
call
and
dec
mov
mov
and
insb
subl
mov
xchg
cltd
sti
je
mov
mov
int
sti
jne
movsb
lock
push
stc
sbb
loopne
incl
jo
shll
mov
push
cmp
or
ljmp
adc
push
cs
push
popa
cmp
loope
jg
test
xor
iret
jbe
or
aaa
in
xchg
decl
in
fmuls
movsl
adcb
mov
enter
and
xchg
sub
add
call
add
pop
sbb
push
pusha
sub
outsb
jg
fwait
ret
cwtl
les
dec
sbb
adc
out
inc
pop
punpckldq
sub
dec
sub
or
pop
mov
lcall
push
addr16
int
dec
push
loopne
les
and
into
add
xorb
sti
pushl
mov
movsl
add
cmp
dec
sub
dec
sbb
ret
xor
cld
dec
in
adc
lret
repz
ret
repz
in
dec
and
mov
incl
pop
jo
fisubs
jmp
dec
pop
dec
pop
push
outsb
arpl
jns
out
or
pusha
bound
add
ljmp
data16
stos
insl
sahf
imulb
cltd
sub
jo
insb
je
adc
push
rorl
js
jl
cwtl
sbb
fbstp
jae
push
mov
mov
push
sub
cmp
add
add
or
mov
stos
mov
int3
mov
pop
mov
shr
jmp
dec
xchg
lahf
mov
jg
dec
jns
sub
decl
pop
and
pop
cli
cs
xlat
dec
jl
pop
pop
fisttps
sbb
adc
or
ljmp
dec
push
rorl
bound
mov
add
insl
fadds
adc
jo
push
sbb
cmp
mov
or
inc
mov
test
add
lea
andl
stc
xchg
dec
in
call
inc
lcall
cmp
pop
sbb
daa
jl
gs
repnz
inc
inc
addr16
add
and
pushl
cmp
push
or
inc
es
mov
adc
cmc
jo
add
sbb
adc
ljmp
movsb
jl
decl
pop
insb
jle
or
cmp
movsb
rcrl
pusha
outsb
cmp
pop
hlt
inc
arpl
test
mov
or
jo
sub
add
dec
cmp
outsl
ljmp
sub
mov
push
push
enter
xchg
or
insb
jne
push
mov
fmul
in
adc
pop
mov
ljmp
mov
or
daa
mov
int
aas
repnz
into
sub
ljmp
sub
pop
push
clc
bound
xchg
sub
loopne
push
sub
mov
data16
dec
inc
jb
xor
push
xor
ret
inc
push
mov
incl
pop
lea
xchg
mov
add
adc
xor
filds
pushl
ftst
add
leave
jp
add
js
loope
pop
in
jb
pop
ljmp
mov
enter
lea
xor
jnp
push
ret
cmp
adc
insb
dec
pop
xchg
es
stc
push
decl
pshufw
cmp
mov
lods
shrb
pushf
mov
cli
inc
aam
push
mov
or
jecxz
fstl
lea
fists
jbe
sbb
lcall
xchg
jg
adc
pusha
xchg
dec
dec
and
jl
roll
mov
jg
cmp
popf
xchg
and
jg
in
outsl
sbb
ljmp
and
mov
pop
xor
gs
sub
mov
adc
daa
xor
xor
pcmpeqd
xchg
mov
mov
push
stc
decl
movsl
call
inc
cmp
xor
test
test
mov
add
pushl
add
inc
mov
int3
pop
mov
xor
shrb
cwtl
sahf
add
je
call
sbb
inc
jp
fisttps
in
push
pop
bound
xor
or
stos
decl
movsb
xorb
lcall
mov
mov
decl
pop
pushf
lahf
lret
mov
cmp
pop
jmp
xchg
or
mov
mov
xchg
pop
push
decl
dec
and
out
push
mov
push
add
sbb
lods
sub
push
incl
push
xorl
rcr
mov
xchg
or
or
lea
lock
add
jg
mov
ss
adc
mov
dec
std
call
or
lret
enter
hlt
pop
adcb
jmp
mov
pop
xlat
sub
clc
pop
fnsave
push
xchg
aas
dec
mov
leave
stc
adc
cmp
pop
pop
and
add
inc
add
decl
fcmovb
sti
lcall
dec
add
sbb
mov
lds
xor
decl
and
shr
inc
or
sub
cs
lds
push
jno
imul
sti
push
and
adc
push
insl
jae
or
cld
lea
out
sbb
ja
lcall
call
aad
test
mov
inc
xorl
mov
mov
push
cwtl
int
sbb
mov
mov
aas
adc
jl
sbb
xor
cld
loope
xchg
sub
lea
push
mov
dec
ss
xchg
push
aas
push
xchg
sbb
fcoms
xchg
jg
call
mov
xchg
cmp
popa
mov
jns
xchg
xchg
jbe
or
or
pushl
lcall
mov
cmp
flds
inc
xor
or
lcall
stos
sbb
sahf
xchg
jns
push
adcb
rcrl
scas
inc
sahf
sahf
sub
cmp
mov
rol
dec
in
dec
mov
push
enter
mov
aam
mov
push
sub
stos
insb
xchg
lcall
xchg
or
push
cmp
rclb
mov
pop
pop
push
rol
jg
movsl
adc
push
pop
inc
jb
inc
add
ljmp
push
inc
stos
xchg
pop
mov
lods
pop
adc
shl
push
or
push
adc
and
and
dec
stos
mov
loopne
jmp
pushf
push
cmpsl
lock
jmp
mov
jmp
int
outsb
inc
fisubrl
inc
jl
push
fdivs
pop
jb
enter
std
mov
gs
sub
rep
mov
in
or
mov
insb
dec
mov
fsts
add
xor
dec
dec
jno
xchg
or
pushl
mov
cmpl
lret
or
nop
push
sub
mov
enter
insb
fldl
pop
clc
add
cmp
sub
mov
push
popf
sbb
xchg
add
arpl
add
push
and
push
and
jb
pop
inc
sbb
add
enter
insl
call
add
push
cld
cmpb
gs
mov
add
addr16
ds
dec
subb
sub
mov
shll
push
sbbb
pushf
pop
dec
push
sub
pop
cmc
in
and
and
iret
adcb
pop
mov
xchg
mov
push
adc
call
xor
fisubrs
sbb
adc
or
fstpl
mov
in
sub
push
rcrb
cli
insl
sbb
sub
sbb
or
cmp
mov
dec
incl
mov
cli
mov
sub
inc
inc
adc
or
lcall
cmp
ds
negb
pop
jecxz
cmp
ret
lcall
cmp
sbb
pop
mov
insb
xor
and
test
mov
ficoms
jo
jne
sbb
sti
mov
sti
pop
ss
ljmp
jo
popf
test
dec
mov
xor
std
push
jno
sbb
pop
ret
jl
cld
jmp
sbb
ljmp
pushl
in
sbb
cmp
xchg
fidivrs
sbb
rolb
rol
ss
push
dec
stos
mov
sub
mov
sub
rolb
adc
mov
push
out
xchg
and
cltd
decl
mov
cmp
xchg
mov
aaa
aad
jg
cmp
jo
mov
data16
addr16
mov
inc
leave
push
mov
insl
loopne
xchg
fmuls
push
push
mov
mov
mov
push
out
pusha
dec
pop
test
xchg
cmp
cmpsl
sub
in
jmp
adc
ret
jns
push
ja
pop
sarb
dec
add
lret
sub
rcrl
lahf
ds
or
jg
push
jecxz
and
decl
fidivl
decb
aas
pusha
pop
sub
adc
out
mov
movsb
sbb
hlt
xor
test
pop
nop
or
mov
sub
out
repnz
mov
lcall
xor
sbb
popf
dec
sub
add
add
push
dec
sbb
dec
push
pop
push
or
jg
in
lahf
cmp
sub
loop
lock
jge
fsub
adc
mov
aas
shrb
adc
loop
pop
adc
iret
adc
mov
xor
pushf
daa
push
decl
ror
punpckldq
icebp
xor
mov
dec
inc
mov
add
cmc
aam
sub
or
test
jmp
fcomp
and
and
jecxz
jae
or
je
push
xor
call
mov
jb
mov
imul
ret
fmull
shrl
mov
mov
ljmp
dec
mov
or
ja
imul
xchg
mov
ret
add
mov
js
add
cmp
in
sbb
dec
dec
rclb
loope
and
xor
cmp
es
stos
pop
incl
adc
push
ret
adc
out
pop
cwtl
mov
add
sbb
popa
lcall
pop
mov
jns
cmp
or
and
adc
push
or
mov
ljmp
loopne
add
push
dec
sub
adc
int3
sbb
mov
orb
inc
adc
mov
mov
push
pop
mov
mov
imul
push
push
into
data16
adc
or
xchg
incl
push
aas
xor
aam
push
cmpl
push
rol
mov
shr
decl
jecxz
insb
add
cs
lret
inc
add
stc
ret
enter
cmp
test
cld
push
rcl
enter
inc
std
jmp
or
dec
pop
fistpll
das
sub
jmp
mov
mov
and
xchg
mov
popa
add
push
xchg
jmp
ljmp
cltd
sub
or
sub
lock
cmp
dec
addb
inc
cld
lahf
inc
lods
pop
xchg
adc
movl
mov
push
mov
cmp
in
cmp
outsl
cld
cwtl
mov
ljmp
pushf
or
clc
or
dec
push
sbb
mov
xchg
cmp
mov
sbb
sub
and
shll
lret
add
mov
or
add
test
ud0
out
cli
add
sbb
cmp
push
dec
jle
mov
adc
test
ljmp
fcoml
pop
insb
push
push
sub
lds
push
xor
adc
xor
outsl
decl
test
or
or
cld
mov
adc
sub
dec
cmp
jmp
sbb
mov
sbb
cmp
mov
pushl
cmc
mov
jo
jg
sub
add
out
or
sbb
dec
push
jg
dec
adc
lcall
ror
leave
nop
ljmp
mov
mov
and
dec
std
pushl
movsb
push
daa
mov
addl
test
mov
cmp
mov
enter
pushf
push
les
sub
push
rcr
xchg
aam
int
cmp
add
in
in
jb
loopne
in
fwait
rcr
pop
xchg
inc
loop
inc
push
hlt
push
cmp
lock
sub
or
mov
stc
loopne
rclb
sbb
and
push
mov
pop
cwtl
xchg
adc
cmp
imul
nop
jg
jae
push
push
mov
inc
jbe
jae
aaa
sbb
test
jb
add
test
xchg
incl
push
aad
in
mov
ss
fdivs
add
fsts
cmp
rolb
sub
decl
jo
gs
test
or
and
cmp
mov
or
sub
shrl
pop
push
lret
or
fs
sbbb
andb
jl
mov
lods
dec
idiv
incl
ds
mov
xor
inc
push
jmp
aad
mov
or
dec
loopne
cli
pop
push
outsl
xchg
popl
jg
push
insl
js
pop
daa
icebp
notl
adc
fs
jmp
aas
xchg
lock
decl
xor
iret
out
outsb
sbb
dec
nop
add
sbb
or
popl
lods
jmp
outsb
enter
mov
outsb
pop
adc
test
or
ss
push
adc
lcall
dec
repnz
sbbl
test
mov
xorb
sub
mov
jo
xor
add
and
sub
sbb
inc
clc
inc
sbb
push
inc
inc
push
aas
sub
add
ljmp
jbe
mov
testl
and
bound
xor
fs
jl
add
in
xchg
add
ljmp
enter
cwtl
push
dec
shll
decl
add
sbb
test
cmpsb
or
cmp
jl
pushl
sbb
dec
push
loopne
xor
lcall
ds
add
in
xor
insl
cmc
inc
mov
movsb
pop
rcl
adc
sbb
rolb
aam
add
decl
and
int
stos
pop
adc
lods
and
out
imul
inc
push
dec
incl
pushf
fmuls
inc
cmp
dec
in
mov
inc
es
nop
xor
out
cli
ficomps
fcmovu
rcrb
in
ds
scas
rclb
cmp
add
divb
ljmp
inc
push
and
clc
add
sub
pop
inc
mov
inc
inc
mov
lcall
stc
jnp
sub
cmp
mov
icebp
clc
mov
xchg
pop
orb
push
in
jb
or
pushl
push
sbb
pop
scas
jae
mov
imul
gs
aas
jecxz
mov
jg
arpl
jnp
clc
dec
mov
movsb
xrelease
cli
ljmp
shlb
in
mov
xor
or
jge
imul
addr16
ds
in
xchg
out
cld
fstps
or
and
cs
cmpb
cmp
shlb
sbb
aas
aam
loopne
lea
push
push
xchg
rcr
or
insb
push
insl
push
adc
les
or
ljmp
push
mov
sbb
imul
lods
cld
push
out
inc
cmpsl
mov
icebp
decl
test
popw
cmp
jge
cmp
xchg
ds
add
ja
decl
jno
mov
xchg
leave
sub
mov
aam
lods
call
inc
adc
adc
les
dec
mov
les
test
or
cmpsl
dec
mov
xchg
jne
jg
ljmp
rolb
orb
push
inc
dec
mov
add
ljmp
inc
lcall
cld
adc
popf
adcb
xchg
or
loopne
arpl
filds
add
fcompl
lock
shr
mov
pushf
inc
test
ljmp
fs
test
cmp
cmp
sub
jb
movsl
or
arpl
test
std
dec
or
orb
mov
or
and
mov
pop
dec
push
add
cld
pop
fs
mov
popf
add
bound
in
or
add
test
stc
xor
mov
aaa
ljmp
adc
lock
xchg
jl
xchg
mov
mov
into
inc
inc
push
incl
shlb
add
jbe
decl
mov
inc
and
mov
stc
xchg
or
xchg
gs
xchg
jmp
pop
outsl
lcall
and
mov
jae
ljmp
pop
xor
and
paddd
decl
inc
jo
outsb
gs
insb
push
std
adc
mov
adc
scas
mov
dec
sbb
add
lods
je
scas
adc
aad
jnp
cltd
ss
pusha
loopne
call
lock
sahf
popa
enter
psrlq
js
das
cld
mov
cmp
push
adc
and
jmp
pop
mov
jg
add
enter
rorl
movsl
xor
std
inc
xorl
adc
clc
js
in
mov
cmpl
pop
loopne
cmp
lods
popl
sti
mov
je
sub
jns
jmp
push
in
jl
les
scas
pop
dec
inc
out
push
add
movsb
ljmp
inc
imul
cmc
add
popa
fdivrl
pusha
lahf
int3
pop
pop
movsb
inc
shll
lcall
lods
cltd
nop
jo
int3
lods
push
push
or
mov
lods
rorl
jmp
cli
xchg
pop
loopne
dec
push
add
int3
push
rcrl
sub
push
shl
xchg
adcb
loopne
mov
decl
rcr
rolb
scas
dec
push
or
rcr
jmp
fimull
inc
sbb
push
dec
ljmp
sarl
out
ret
shrb
je
push
stos
jo
xchg
jmp
nop
or
adc
sbb
fwait
ret
jae
add
push
arpl
or
aad
adc
icebp
cmp
xchg
std
xor
insl
shlb
mov
sbb
outsb
cmp
jmp
or
je
adc
push
mov
dec
and
decl
adc
cmp
mov
cmp
cmp
mov
mov
in
cmp
mov
aaa
adc
iret
out
dec
pop
sbb
or
mov
pop
repz
pushf
and
clc
repz
out
cmp
iret
or
push
xor
adc
inc
pop
leave
add
push
jecxz
incl
cmp
or
cmp
inc
cmp
mov
push
mul
push
jge
jne
and
mov
inc
push
ret
cmp
incb
xchg
inc
addb
add
xchg
and
xor
decl
es
adc
jg
dec
or
mov
outsb
lock
in
mov
mov
push
xor
push
inc
icebp
ljmp
das
push
cmp
ja
pop
push
out
scas
xor
dec
das
sbb
push
popf
adc
ljmp
or
mov
cmp
or
rolb
pop
dec
dec
and
mov
mov
loopne
push
loope
add
mov
jae
xchg
xchg
out
dec
mov
std
das
clc
ljmp
push
sub
adc
add
cmp
adc
xor
jle
jl
test
in
popl
push
or
xor
pop
imul
mov
xor
loope
or
clc
lret
and
jb
in
cmp
xchg
sub
or
js
and
or
mov
incl
mov
mov
pushf
mov
add
mov
inc
sbb
test
ud0
lcall
sarb
and
sbbl
push
pop
outsb
repz
enter
and
daa
sbb
pusha
out
test
cmp
cmp
mov
hlt
mov
shr
fmuls
or
shll
adc
ja
or
xchg
pushl
mov
call
filds
or
and
sarl
push
xorl
jns
mov
daa
pop
cmp
and
out
mov
adc
or
cld
fs
push
pusha
ljmp
ja
shrd
sub
ficompl
ljmp
fisubl
and
xchg
sub
and
jg
push
stos
fbstp
incl
or
mov
jbe
dec
xchg
add
jae
ljmp
or
pushl
dec
xor
hlt
mov
adc
in
xchg
inc
popa
push
out
push
cld
and
shll
xchg
loopne
sbb
int3
fstpl
inc
aam
mov
call
sarl
sti
nop
dec
pop
loopne
pop
inc
subb
add
cmp
jmp
sub
push
lcall
addr16
clc
push
jbe
cwtl
pop
jp
cmpsb
and
incl
pop
xor
out
mov
mov
ss
clc
rclb
add
mov
lret
testb
int3
push
les
add
insb
adc
xchg
incl
inc
rol
xchg
or
jo
xor
dec
mov
iret
dec
jg
add
popa
loopne
pop
loop
or
xchg
inc
cmp
mov
sub
sub
call
scas
decb
pop
push
mov
jp
cmp
mov
mov
and
fs
pushl
mov
out
add
std
or
inc
aam
gs
enter
jg
fs
stos
xchg
jno
xchg
jne
scas
push
in
adc
add
loop
cmc
ljmp
out
in
sbb
cmp
or
jo
insb
adc
fisttps
rorl
mov
mov
xchg
jmp
pushf
mov
nop
push
shlb
test
stos
call
mov
jo
fdivl
or
mov
inc
mov
xlat
iret
xchg
and
sbb
je
das
push
cmc
xchg
pop
mov
mov
lods
mov
push
shll
push
mov
decl
inc
insl
scas
adc
jp
ret
popa
or
jge
mov
call
test
dec
cmp
sbb
sub
call
inc
add
pop
adc
ljmp
inc
fildl
and
leave
xchg
pop
dec
std
das
jne
in
dec
mov
add
jns
idiv
push
inc
pop
or
xchg
push
mov
mov
les
xor
pushl
or
push
cmpsb
add
test
adc
loope
outsl
ljmp
xchg
push
insb
sbb
cld
lahf
sub
pop
add
mov
mov
call
sub
xchg
or
aas
push
jns
dec
mov
mov
add
jg
popa
pusha
aad
mov
call
push
cmpb
decl
mov
hlt
xor
shlb
stos
sub
jns
mov
aaa
or
fxch
je
lds
cli
add
inc
dec
push
xor
push
lcall
sub
or
xchg
leave
cmp
cmp
or
sub
je
jg
mov
or
dec
je
jecxz
adc
add
dec
popa
mov
adc
cld
push
sbb
jg
jbe
inc
mov
sub
pop
popf
mov
test
lcall
ss
rorb
iret
jmp
lcall
ffree
rorl
orb
mul
ret
test
ljmp
mov
sub
nop
lcall
fldenv
inc
cmpsl
add
icebp
cmpsl
mov
fwait
decl
jg
jno
leave
and
add
pop
fimull
ficoml
adc
add
add
xorl
sub
xchg
hlt
adc
in
or
inc
stc
repnz
cmp
jnp
jge
push
xchg
decl
test
or
cwtl
or
jns
lea
push
dec
data16
or
lcall
fisttps
pop
jae
lea
inc
push
cltd
lahf
xor
add
xor
xor
jl
adcl
decl
jae
jne
fidivrl
stos
jne
push
xchg
inc
pop
dec
je
je
fsub
push
push
mov
decl
movsb
in
cmc
and
sbb
js
lods
jns
mov
das
sahf
or
pop
shlb
decl
adc
xchg
sub
xchg
lea
dec
js
and
pusha
lods
push
mov
add
je
lahf
xchg
shrb
push
inc
icebp
mov
in
jae
clc
or
dec
decl
sar
incl
or
enter
pop
jae
pop
arpl
adc
or
adc
jg
inc
in
pop
adcb
arpl
mov
outsb
add
mov
lcall
xor
pop
pop
cmp
imul
or
cmp
rolb
pusha
add
incl
sbb
pushf
decl
dec
xchg
mov
jmp
cmp
and
push
or
mov
jns
pop
popf
mov
cmp
sbb
pop
mov
into
pop
addr16
shrb
ljmp
and
pop
sbb
xor
push
and
pop
adc
ror
cmp
mov
push
loope
pop
and
jg
jle
or
add
mov
adc
ror
daa
xchg
adc
xchg
in
add
fcoms
fstps
sbb
sub
sub
xchg
cmp
dec
xchg
fadds
adc
add
test
xchg
test
mov
mov
mov
nop
cmp
xlat
int3
in
and
ljmp
or
andl
pop
push
add
rorl
cmp
mov
frstor
mov
clc
add
xchg
mov
jo
pop
sbb
rclb
jo
mov
decb
sahf
in
or
popa
mov
and
xchg
xor
test
add
xchg
xchg
push
out
in
mov
ds
push
sahf
push
jno
repnz
out
mov
cmp
je
mov
mov
mov
add
sub
pushl
adc
dec
insb
fsts
out
nop
push
jg
call
loope
push
adc
sbb
gs
fcoml
enter
ljmp
dec
xchg
and
sub
push
and
pop
or
enter
mov
mov
mov
sbb
in
sbb
push
sbb
enter
cld
or
push
lds
xchg
loopne
mov
ss
sahf
decl
sbb
loop
pop
mov
dec
into
je
jns
pop
xchg
sbb
incl
push
jge
idivl
scas
jae
adc
cltd
outsb
inc
outsb
sub
mov
add
pushl
inc
push
adc
sbbb
test
xchg
ljmp
dec
and
dec
add
sbb
xchg
faddl
daa
aaa
cmp
js
add
inc
mov
sbb
out
sub
pop
andb
popf
xchg
push
mov
xchg
add
inc
xcrypt-ecb
cmpsl
or
in
call
mov
xor
adcb
das
fwait
lods
sub
sti
mov
push
aaa
push
ret
sarb
jg
jmp
push
inc
adc
mov
clc
pushf
popf
iret
jle
or
insl
mov
clc
dec
ljmp
in
jnp
and
mov
int3
cs
jmp
icebp
xor
mov
or
pop
jbe
jns
cld
pop
test
pop
and
lret
cmpb
scas
push
and
pop
mov
imul
or
mov
pop
mov
test
dec
push
shlb
pushf
outsb
adc
ds
popa
mov
pop
dec
add
mov
push
jno
frstor
cmp
cmp
jg
sahf
sbb
and
test
fcomps
mov
loope
mov
sbb
incl
mov
push
lcall
add
mov
adc
shl
xchg
pop
cmpsl
add
xor
sub
mov
add
mov
sub
andb
mov
lcall
lcall
cmpsl
inc
lret
sub
shll
xchg
sub
sub
jge
test
ljmp
in
shrb
jmp
dec
xchg
loop
jmp
or
insb
or
pop
inc
and
decl
inc
mov
nop
or
inc
xorb
adc
rolb
es
in
aad
ljmp
pusha
add
into
mov
jecxz
push
sbb
adc
ret
add
push
jge
mov
mov
inc
pop
pop
ja
bound
cmp
and
decl
adc
push
and
and
imul
add
add
jmp
fists
xchg
push
mov
or
mov
cmp
iret
cmp
adc
sbb
hlt
popf
dec
cmpsb
fbstp
pop
js
add
js
lods
addl
xchg
fmull
in
lock
out
adc
lods
popf
and
xchg
add
adc
and
dec
jecxz
vmovdqa
aam
jbe
xor
pop
movsbl
xor
cmp
fisttps
lock
decl
xchg
mov
adc
xchg
call
push
fistl
lcall
fildll
push
add
push
dec
mov
mov
call
cs
insl
subl
lock
and
repnz
imul
add
sub
push
pop
mov
fstpl
pop
je
jge
and
xchg
ljmp
and
lods
in
add
test
mov
lds
pop
sbb
xchg
push
outsl
clc
ljmp
push
aaa
cmp
jge
insb
sub
cltd
mov
call
loopne
add
xchg
jl
xchg
fs
sbb
daa
bound
dec
xchg
decl
and
or
mov
push
adc
out
mov
pushl
pop
push
mov
into
add
mov
mov
cwtl
cmpsb
push
imul
lods
rolb
lret
pop
inc
std
mov
dec
fdivr
and
icebp
in
add
aam
mov
dec
mov
decl
and
push
std
dec
es
sbb
or
mov
ss
out
movups
push
adc
mov
fsubrp
in
xor
and
loopne
sbb
shrb
jmp
data16
lea
cld
adc
test
dec
lock
sub
mov
es
jmp
dec
ljmp
ss
ret
andl
addl
jle
jg
sarb
mov
lds
or
pop
subl
jmp
inc
xchg
xor
decl
jecxz
cmp
and
icebp
scas
xchg
and
push
sub
sbb
ljmp
lret
push
mov
mov
fidivs
loope
push
mov
ja
or
push
int
xchg
pop
rclb
out
add
call
arpl
aam
test
sti
decl
mov
mov
add
add
and
push
dec
movsl
mov
push
adc
mov
or
pop
xor
pusha
add
test
das
inc
cltd
mov
jmp
adc
lcall
add
adc
or
xchg
sub
pop
mov
mov
add
out
mov
push
sub
daa
pop
sub
ljmp
push
dec
xchg
xchg
adc
fsubl
dec
fiaddl
movsl
sub
adc
adc
lcall
push
add
xor
push
lcall
sbb
sbb
mov
lcall
or
lret
shlb
in
dec
inc
rolb
sub
add
sbb
pop
aaa
cmp
inc
dec
pushf
loopne
push
stos
ja
mov
dec
add
fcmovne
pushl
mov
cmp
imul
in
xor
pop
pusha
fs
enter
mov
incl
insl
mov
mov
dec
mov
xchg
push
ds
imul
aaa
add
or
movsb
inc
xor
js
std
pushl
pushl
or
outsb
outsl
leave
or
js
scas
insb
ficoms
pop
scas
dec
push
gs
ss
cmp
xor
or
cmp
cpuid
or
in
adc
xchg
pop
add
ja
loopne
xchg
int3
enter
fdivs
imul
inc
dec
xor
or
jns
incl
bound
lss
enter
add
push
fwait
sbb
dec
sbb
fists
push
scas
popa
subb
inc
add
dec
stc
xchg
shrb
mov
enter
jne
jns
notb
mov
fs
adc
adc
inc
mov
lcall
and
xor
pop
jbe
cli
lds
in
add
ljmp
mov
sub
adc
loopne
add
cmp
jo
nop
sub
jg
cmp
ljmp
shl
pop
pop
hlt
xchg
push
mov
add
jg
faddl
bound
int3
fldl
adc
shl
lods
pop
rolb
add
aad
mov
or
call
mov
or
push
jp
dec
xor
pop
loop
push
rolb
popa
and
incl
hlt
xor
and
add
add
std
inc
push
pushl
add
in
and
push
pop
xchg
cmp
inc
jle
inc
mov
jmp
xor
push
cmp
cmp
xchg
or
fldl
adc
gs
popa
and
sbb
mov
repz
scas
pop
loop
or
mov
add
scas
cmp
push
repnz
jmp
mov
dec
and
adc
sbb
xor
or
scas
push
mov
mov
add
imul
jmp
decl
adc
inc
push
daa
push
lret
pop
jo
test
loopne
fcomip
pushl
xor
leave
add
cmp
and
scas
adc
dec
inc
cwtl
inc
or
add
sbbl
fwait
test
pop
lea
dec
sub
lea
ljmp
into
loopne
sbb
shl
jb
enter
shlb
hlt
nop
pusha
cmovne
pop
in
lds
dec
push
and
fcoms
stos
fcompl
int
push
jg
xchg
mov
cmpps
jmp
in
xor
dec
inc
dec
pop
push
pop
test
shrl
xor
js
adc
stos
xor
push
push
lcall
sub
movsb
cmp
es
and
push
push
add
jle
jnp
sbb
adc
pusha
in
lcall
or
pop
jns
adc
shlb
dec
and
jle
lock
ja
add
shll
pop
fdivrs
shl
mov
adc
cmp
add
pop
mov
ret
sbb
jo
ss
pop
pop
cli
xor
shrb
pop
and
loope
adc
std
add
mov
add
pop
sarb
shrl
inc
mov
lcall
sub
lahf
mov
add
aaa
xor
out
ljmp
mov
mov
rcll
test
loope
testl
pop
jo
loopne
jb
jg
shl
test
lock
and
icebp
add
pop
xor
scas
outsl
adc
mov
dec
push
inc
bound
add
data16
in
xor
mov
scas
inc
push
xchg
xchg
mov
cmpsb
mov
in
and
inc
nop
das
add
ljmp
fistpl
or
lods
dec
push
imul
mov
jmp
cld
imul
aad
jnp
roll
inc
dec
push
fisttps
dec
add
lock
push
mov
fwait
xchg
not
decl
pop
ret
rcll
xor
xor
or
lods
inc
mov
cmp
adc
mov
ret
imul
fs
sbb
sub
cmp
loopne
or
or
es
nop
push
clc
adc
jmp
adcl
rcrb
mov
insl
add
aas
in
filds
fcomip
dec
and
loopne
rorl
add
test
insb
in
testl
xlat
push
aas
lret
lcall
or
push
andb
ljmp
mov
shlb
mov
js
sbb
sub
cmp
dec
mov
dec
fs
adc
push
adcl
rcrl
fstpt
inc
adc
pop
pop
or
add
dec
mov
inc
std
pop
xchg
outsl
fcmovu
in
push
enter
inc
stos
nop
lar
fs
and
test
or
dec
xor
das
movsl
test
decl
incl
inc
pop
and
cli
dec
std
mov
add
int3
cld
mov
shll
lock
fiadds
push
inc
dec
shlb
add
add
pop
in
pusha
dec
pusha
mov
push
or
pushl
stos
push
adc
add
mov
jmp
pop
cmp
addb
in
or
xchg
or
sub
xchg
cmp
lret
loopne
adc
add
inc
and
pop
nop
jl
adc
cmpsl
lcall
enter
push
outsb
ds
xor
mov
cwtl
pushf
xor
scas
mov
add
jo
mov
push
xor
add
or
scas
jbe
mov
jl
sbb
mov
stos
push
add
or
mov
clc
xor
pop
or
js
inc
sub
mov
ljmp
lcall
xchg
inc
dec
cs
and
push
imul
sar
call
rcrl
dec
pop
pop
popa
lods
pushf
ret
cmp
inc
idivb
push
je
mov
das
xor
dec
std
scas
push
sbb
dec
scas
sub
outsb
int
jae
cwtl
mov
es
mov
dec
jno
dec
fs
xchg
sub
push
insb
push
mov
scas
mov
push
or
call
push
aad
dec
es
mov
mov
js
cmp
mov
cmpsl
push
sarb
andl
xlat
lcall
imul
xor
je
push
mov
dec
push
testb
mov
jnp
jge
dec
mov
dec
out
movsb
push
sub
and
nop
xchg
call
das
and
sub
lcall
mov
inc
add
inc
xchg
scas
xor
stos
clc
lea
ret
cmp
dec
mov
xor
xor
cmp
ljmp
xchg
stos
test
mov
ret
mov
int
dec
test
xchg
push
rcll
arpl
xchg
jmp
rorl
cmp
push
mov
iret
mov
inc
lret
xor
daa
and
int
pop
in
lahf
mov
dec
cmp
outsb
clc
ljmp
icebp
xchg
aaa
push
pop
loop
clc
pop
and
add
mov
jecxz
ss
movb
or
incl
call
test
inc
imul
mov
adc
mov
ds
sub
push
decl
testb
push
je
inc
sbb
hlt
xchg
xchg
inc
mov
cld
mov
iret
in
ds
shll
pushl
adc
shll
fidivl
push
rcl
mov
es
xor
ljmp
mov
fcomip
cmp
jge
rcll
mov
xor
pusha
test
fs
cmp
dec
call
or
and
cmp
outsl
sbb
or
xor
lret
aam
jae
ret
fimull
mov
or
ret
mov
mov
mov
mov
xor
mov
add
cmp
inc
pop
fisubl
and
in
cmpb
out
cli
aas
push
xchg
xor
adc
daa
or
inc
imul
idivl
push
xor
decl
add
test
xchg
call
mov
stc
pop
sub
jg
aaa
in
ljmp
push
lret
fiadds
xlat
mov
aad
mov
and
dec
and
cmp
incl
push
or
mov
sub
bndldx
lret
ljmp
cwtl
adc
stos
test
andl
mov
mulb
sahf
outsl
sar
lcall
dec
add
mov
sbb
adc
pop
loop
mov
dec
insb
clc
push
lahf
lds
aam
in
mov
lret
add
int
decl
outsl
icebp
xchg
sub
cmp
sbb
and
adc
inc
or
mov
cld
icebp
stc
jo
cld
inc
dec
or
push
imul
cmp
jmp
pop
je
adc
mov
xchg
scas
mov
xor
pop
std
cld
jne
or
xchg
in
jns
adc
pop
outsl
adc
and
leave
and
jl
sahf
pusha
lret
sub
cwtl
and
sbb
dec
or
cmp
scas
inc
cmp
push
jnp
lods
movsb
incl
and
push
in
xor
popa
fists
xor
pushl
jle
mov
test
clc
lods
dec
aam
cmpsl
aam
adc
sub
mov
decl
add
adc
jo
adc
mov
jmp
cmp
cmp
fwait
dec
scas
clc
jmp
sbb
hlt
ret
aaa
xor
jnp
jbe
pop
shl
idiv
mov
pop
sub
inc
xchg
les
and
adc
pushf
push
pop
inc
scas
cli
add
push
adc
and
mov
clc
push
enter
adc
repnz
cltd
add
scas
mov
lahf
loopne
xor
cltd
jnp
or
mov
shrb
mov
popf
stc
rcrb
adc
imul
add
mov
and
jb
loopne
cmp
pop
inc
into
inc
inc
pop
cwtl
cli
es
adcb
dec
js
add
ljmp
dec
xor
das
fs
and
testb
in
loopne
daa
xchg
incl
lods
push
add
cmc
inc
fs
popa
add
cli
cltd
icebp
adc
and
incl
mov
andb
rorb
mov
testl
das
inc
test
test
dec
jecxz
ljmp
and
nop
ds
push
adc
test
adc
mov
add
and
ss
lcall
mov
pop
sub
rorb
sbbb
push
or
sub
adcl
mov
pop
inc
mov
ret
and
lcall
shrb
stc
hlt
jne
call
incb
fdivr
mov
popa
es
xchg
add
push
pushf
pop
ret
push
lea
or
ljmp
ljmp
mov
inc
xchg
and
add
jae
sub
dec
jg
adc
mov
scas
lea
je
jne
cs
and
shlb
addb
push
adc
fwait
loopne
je
sbb
shrb
shr
out
into
aad
call
cld
xor
leave
mov
pop
push
pop
mov
ret
fildll
mov
adc
cmp
xchg
add
and
decl
mov
ficomps
in
mov
push
sti
cmp
jne
fiadds
aam
mov
test
ljmp
xor
push
mov
xchg
push
addr16
ss
shr
rorb
out
stos
push
cld
xchg
inc
push
aas
add
push
inc
inc
jecxz
adc
push
and
or
call
inc
out
mov
or
xchg
dec
popa
pushf
or
dec
xor
mov
incl
adc
setne
add
mov
jns
sbb
jl
or
cmp
test
jne
pop
and
mov
xor
jg
mov
pushf
lcallw
jo
mov
sbb
fwait
pop
fwait
jg
and
xchg
in
mov
mov
or
std
xor
push
icebp
lcall
push
lcall
and
out
add
insb
shlb
add
imul
fcompl
rorl
jne
xchg
mov
incl
pop
mov
add
call
mov
push
cmp
movsl
in
pop
test
xchg
mov
pop
fistpll
push
dec
andl
or
aad
or
inc
loop
add
test
sub
jl
jne
lret
jmp
js
call
add
loopne
jmp
xor
nop
into
push
adc
ljmp
std
lcall
imul
pop
or
and
sub
add
adc
fcomip
rol
adc
add
fsqrt
push
mov
jmp
fimull
icebp
lea
sub
adc
and
mov
xor
call
cmpsb
aad
or
sbb
sbb
xchg
cmp
add
or
push
call
cwtl
fsubl
xchg
gs
add
aad
stos
mov
ja
rcrl
xorb
out
or
rol
mov
mov
int
push
rcrb
or
andl
xor
or
bound
hlt
insl
nop
adc
in
mov
lcall
orb
lea
add
mov
sub
aas
dec
sbb
stos
mov
xchg
test
call
dec
data16
sub
adc
or
outsl
ret
jns
mov
mov
cli
push
jmp
sbb
sar
xchg
push
and
sub
cwtl
jbe
lea
incl
adc
repnz
sub
sub
cli
mov
inc
sub
cld
cwtl
sub
pop
sbb
gs
idivb
mov
sbb
lea
ss
mov
jmp
fwait
xchg
and
icebp
movsb
aad
decl
mov
sub
inc
iret
test
imul
dec
fsubs
shlb
cs
jecxz
fsubp
lea
lock
ljmp
xchg
push
and
or
dec
call
mov
pop
cmc
push
ljmp
pop
pop
jbe
test
xor
dec
fwait
pop
pop
xor
sahf
sub
cmp
jge
nop
adc
xor
shl
inc
jb
mov
sub
ds
mov
out
mov
call
jmp
xchg
leave
pop
xchg
mov
and
dec
or
movsl
and
hlt
popa
or
fcompl
outsb
cld
dec
out
lods
je
test
pushf
fs
clc
imul
ljmp
inc
xchg
push
sub
test
dec
mov
arpl
enter
pop
jl
nop
ja
fwait
loopne
pusha
clc
fildll
or
std
or
rorb
movsb
cmp
lret
test
aam
inc
jne
jno
std
das
pop
shlb
xchg
xchg
fwait
test
in
decl
add
push
ret
js
dec
movsl
cmp
sub
ret
cmpsl
jge
add
gs
incl
int
dec
dec
jb
pop
or
jl
fisubrl
xor
enter
dec
insb
inc
jge
push
insb
mov
mov
dec
push
add
call
push
lcall
push
sub
in
push
or
mov
cli
pusha
sahf
and
jns
mov
jge
test
incl
mov
pop
or
cmc
cmc
add
mov
jg
cmc
lea
adc
mov
decl
pusha
call
scas
rcrl
stos
add
sbb
aas
nop
and
jmp
inc
int3
jae
loopne
jbe
insl
das
scas
mov
outsb
push
arpl
rolb
lcall
in
dec
mov
pop
inc
rclb
lock
es
jg
lea
or
cltd
fs
pushf
lret
rol
or
xor
or
xor
push
or
lret
jge
jae
pusha
pop
or
fstps
test
dec
jl
lea
xchg
mov
mov
aam
cmp
cmpsb
push
lods
mov
mov
cmp
dec
mov
cmp
push
mov
xchg
test
inc
std
ss
in
gs
in
mov
call
and
cmp
push
xor
repz
dec
jae
cwtl
jb
cmp
mov
inc
sbb
or
dec
icebp
xchg
stos
pop
aas
push
add
out
mov
sbb
mov
jg
decl
push
mov
pop
add
push
add
inc
jmp
lock
fimuls
fs
clc
xchg
fmull
dec
test
mov
shlb
repnz
push
add
movsl
iret
or
xchg
push
jmp
inc
in
mov
jg
mov
sub
lea
inc
xchg
or
mov
decl
imul
ja
xchg
jne
std
xchg
aam
mov
add
adc
ljmp
jmp
das
push
and
cli
mov
mov
xor
dec
mov
leave
call
je
add
test
and
mov
dec
scas
cmpsl
loopne
movl
test
jo
incl
incl
cwtl
add
adcb
pop
fstps
or
dec
ss
sub
decl
adc
rcl
mov
mov
lcall
mov
sti
pop
cmp
test
cmp
inc
xor
and
mov
and
out
pop
js
call
xor
sbb
in
ficomps
subl
push
pop
add
popa
xor
bound
nop
mov
adc
xor
cmp
arpl
decl
mov
insl
push
push
mov
sarl
and
mov
cmp
cmc
or
cmp
out
in
fistps
push
mov
mov
fdivrp
lret
push
cmp
sub
cmp
inc
test
mov
lcall
mov
ret
push
xchg
pop
jno
pop
pop
insb
fimuls
adc
and
int3
mov
pop
lock
pushf
ljmp
imul
ljmp
pop
dec
jno
mov
int3
aam
xchg
out
dec
inc
adc
dec
push
pop
int
adc
mov
gs
dec
dec
ljmp
std
imul
fldt
add
push
push
pushf
int3
pop
ret
xor
xor
cli
incl
cltd
pop
dec
xor
std
out
fld
mov
xor
cld
lcall
gs
scas
pop
pop
xchg
or
adc
in
pop
clc
call
pop
push
mov
add
sub
pop
addr16
xchg
mov
js
pop
cwtl
arpl
or
ljmp
or
enter
cmp
inc
and
mov
mov
jbe
lcall
mov
xchg
sarb
mov
in
dec
decl
scas
fildll
push
xchg
dec
sahf
lahf
or
xor
add
add
sub
push
call
jmp
loop
ja
stos
shlb
xchg
jb
push
pusha
sub
pop
mov
jne
pusha
jbe
jne
lcall
ss
mov
pop
mov
lods
shll
mov
loop
sbb
and
adc
mov
or
and
mov
insl
push
stos
mov
aad
insl
dec
cmp
ljmp
and
repnz
xlat
xor
movsb
inc
leave
fsubp
jmp
add
push
in
inc
cmp
ret
scas
cli
incl
in
lods
jb
xor
add
push
enter
mov
hlt
enter
push
sahf
jnp
or
lahf
dec
jl
sar
fiadds
add
cmp
add
inc
arpl
int3
mov
pop
xor
mov
mov
xor
mov
jmp
rcrb
jp
or
mov
ret
int
mov
sbb
xor
fiaddl
mov
les
cmpsl
add
xorl
pop
or
decl
enter
sub
imul
movsl
jno
negb
mov
inc
mov
adc
in
pop
mov
adc
jb
jno
loopne
cmpsl
pop
je
popf
ud0
call
out
aam
aam
outsl
cmp
add
inc
stos
add
int3
add
imul
pushl
add
xor
cltd
int
push
int3
andl
inc
mov
loope
fmuls
loopne
pushf
out
bound
mov
loopne
push
leave
or
je
xchg
repnz
adc
adcl
mov
xor
call
aad
and
xchg
mov
cmp
pop
or
xor
insb
sbb
inc
sub
inc
mov
decl
sub
jl
dec
mov
ja
lock
andb
push
jb
sar
ljmp
add
push
mov
lock
shlb
ds
rolb
decl
push
ret
mov
and
push
into
sub
add
lods
jae
pop
jnp
outsl
sub
mov
cli
xor
jp
fisubl
adc
mov
mov
lods
mov
and
push
cmp
adc
in
stc
ja
dec
sbb
loop
les
cli
hlt
jp
and
mov
adc
inc
add
mov
cmp
cld
or
or
push
cmp
mov
or
sub
lret
jb
jl
rcll
lods
xchg
sub
push
popl
movb
add
ljmp
mov
add
mov
dec
shr
cs
pusha
aas
dec
adc
cmp
das
js
imul
insb
je
push
dec
mov
mov
lock
loopne
loop
xorl
leave
loope
decl
xor
fidivrs
or
mov
mov
pop
jmp
xchg
call
push
clc
pusha
sti
jl,pn
dec
movsl
cmp
pop
and
gs
mov
mov
inc
push
popa
jo
xchg
xor
xor
inc
bound
cli
mov
into
sub
xchg
test
adc
mov
xchg
inc
cmp
decl
in
pushf
jo
fadd
mov
aad
mov
jb
xor
jo
add
out
add
lahf
pop
orl
mov
loope
std
mov
aas
cmp
sar
mov
rcll
pusha
dec
push
inc
push
lret
pop
mov
mov
and
jo
cmp
int
imul
lret
fadds
cmp
std
insb
pushf
je
fisubs
mov
ljmp
aaa
adc
mov
stc
roll
lea
pop
xor
jo
outsb
ljmp
mov
loopne
insb
leave
mov
cmp
cmp
adc
pop
lret
test
push
jg
stos
pushl
cs
push
sub
mov
in
adc
or
sub
fsubrl
adc
iret
push
or
out
clc
sub
sarl
adc
adc
in
mov
in
jmp
pushf
outsb
jnp
adc
cmp
cmpsl
mov
aas
arpl
mov
clc
std
cmp
std
ljmp
mov
mov
xchg
mov
sbb
in
cmpsl
or
xchg
xchg
stos
jg
inc
xchg
dec
mov
cmp
aaa
in
roll
mov
jbe
int
xchg
cmpb
mov
in
and
cmp
sbb
add
add
clc
mov
and
test
and
insb
call
jmp
mov
lcall
cmpsb
push
pop
cltd
aam
aam
jnp
adc
add
pop
pop
addb
cmp
lods
jne
fdivrl
fdivrs
cmp
pop
dec
cli
notb
xchg
jmp
lock
lcall
jmp
add
add
jne
clc
pop
mov
fs
imul
jg
pop
lods
loope
xchg
sub
push
pusha
clc
adc
dec
shl
ja
ljmp
sahf
mov
aam
push
sbb
bound
lcall
fs
and
cmp
sbb
push
cld
fildll
fsubrs
icebp
std
outsb
adc
les
mov
and
mov
shlb
fistpll
popa
pusha
loope
jl
std
mov
pop
enter
and
ljmp
lcall
xchg
or
push
lret
stc
and
xchg
inc
shr
add
test
call
cmc
and
test
addr16
cmpsb
pop
fildl
imul
ds
or
cwtl
adcl
xchg
push
stc
cmc
lahf
les
sbb
mov
movsb
pop
sub
ret
lahf
shlb
ud0
jmp
aam
test
in
stos
xor
dec
fadds
xor
push
lahf
inc
mov
cmp
pushf
cli
ds
decl
inc
mov
loop
ss
ficoml
inc
sti
dec
test
mov
mov
jae
add
ret
xchg
push
in
jecxz
jns
dec
insb
notl
push
insb
dec
push
mov
adc
aad
fadds
sbb
xchg
mov
cmp
das
adc
cmp
das
cli
subl
cld
and
sub
andb
lods
add
sbb
test
sub
incl
dec
adc
xor
adc
and
mov
cmp
jecxz
scas
outsl
inc
inc
in
jb
jb
cmp
dec
repnz
push
addr16
xchg
ret
ljmp
sbb
sub
dec
mov
lcall
mov
jne
fcomip
mov
mov
cltd
rolb
ja
pop
leave
add
std
sbb
daa
incl
mov
stos
jle
cmpsb
xchg
pop
clc
aaa
mov
leave
push
cld
jg
es
or
popa
ljmp
rclb
cmp
fimuls
lods
adcb
mov
sub
movsl
and
mov
pusha
cs
cmp
xor
fcompl
dec
test
cld
adc
dec
nop
push
mov
sub
mov
fwait
xchg
xchg
fadd
push
mov
cmc
jae
sbb
dec
fs
fisubrs
pushf
in
insl
insb
loope
out
fnstcw
aaa
push
ja
inc
decl
ljmp
push
fidivs
je
push
xor
cmp
test
jns
jp
sbb
ljmp
mov
adc
rcr
jnp
adc
push
adc
or
in
outsl
push
xor
pop
push
decl
std
push
movups
sbb
aas
mov
popa
jg
add
jbe
cmp
rcl
pop
mov
jo
add
orl
pop
mov
sbb
jne
cmp
incl
push
addr16
les
fidivs
push
and
aad
imul
shrb
ss
or
push
and
jg
es
push
decb
mov
in
popf
pop
pop
insb
cmp
les
arpl
insl
cmpsl
lret
inc
add
stc
fisttpl
mov
add
lea
out
cwtl
repnz
xor
or
cmp
add
pop
jl
inc
pop
hlt
fistpll
gs
dec
lods
inc
hlt
sub
xor
loopne
ss
cmpsl
sahf
jns
clc
push
rol
push
in
orb
xchg
or
add
mov
dec
push
xchg
int3
cmpsb
dec
push
sub
adc
sub
mov
mov
lods
pushl
loop
or
jbe
test
or
sub
and
lock
mov
pushf
test
call
int3
sub
mov
ret
or
xor
lcall
inc
fs
ljmp
clc
rol
jo
hlt
rcrl
js
mov
pop
xchg
fdivr
insl
or
lea
pushl
shlb
mov
lods
insb
mov
mov
sti
add
hlt
data16
adcl
pop
lret
pop
add
fbstp
call
xor
adcl
mov
out
clc
cmpsl
or
notb
cld
cmp
or
or
mov
jbe
jg
lock
add
lea
decl
andb
pop
xchg
xor
ds
and
mov
fcmovnu
lcall
push
test
push
and
inc
orl
popa
sub
adc
incl
push
pop
mov
test
ss
mov
mov
lret
mov
and
dec
pushl
outsb
shrb
push
loopne
xchg
pop
mov
mov
lahf
push
leave
pop
adc
or
or
and
jl
ret
call
popf
jne
push
addl
sub
or
xor
adc
mov
mov
out
ret
ficomps
nop
adc
dec
jbe
pushf
cmpsl
mov
push
test
insl
lods
mov
incb
adc
lret
mov
decl
cs
loopne
inc
xchg
sbb
push
mov
push
ss
pop
xchg
add
pop
js
insl
movsl
icebp
or
fstl
mov
test
cmp
xchg
jg
ljmp
push
and
push
inc
ret
insl
xor
cmpsb
cmp
jg
movsl
nop
mov
pusha
adc
jno
and
pusha
lods
int3
std
imul
cmpb
ficompl
mov
mov
jp
iret
lea
incl
nop
aas
shrl
cmp
add
fs
test
pop
push
sarl
ret
lcall
cld
fstpl
arpl
mov
add
scas
pushf
cmp
js
jmp
add
xor
loop
popa
xchg
adc
aaa
push
jo
inc
aaa
addb
decl
popa
and
sbb
je
in
jo
cs
sub
fnstsw
repz
cmp
lcall
and
out
adc
mov
scas
shrb
xlat
mov
in
adcl
ffreep
icebp
xor
lea
mov
fwait
pop
mov
push
pop
jmp
or
icebp
fimuls
shll
fldcw
adc
lock
mov
push
sbb
decl
rep
bound
movsb
mov
push
adc
and
cwtl
push
insb
adc
push
jmp
int
and
es
adc
andl
lahf
push
mov
std
aas
movsb
and
fcomps
std
pop
decl
cli
cwtl
lea
xchg
lret
push
mov
imulb
ret
movsl
push
add
fdivs
incl
sbb
lods
adc
in
shrl
scas
xor
jbe
dec
push
pop
xor
sbb
std
push
sahf
mov
jmp
data16
mov
inc
popa
imul
gs
xchg
lret
paddsb
pop
cmp
cmc
inc
mov
ss
mov
gs
popf
cs
push
lods
mov
pushl
push
and
jg
xchg
sbb
or
lods
mov
jno
fiaddl
mov
fnsave
xchg
test
ljmp
test
in
inc
fs
dec
cmpsb
sbb
or
cmp
adc
adc
decl
inc
ret
data16
mov
test
or
sub
mov
adc
pop
push
pop
lcall
ret
fildl
repnz
push
mov
or
jns
push
sub
mov
sub
pop
or
aas
pop
mov
xchg
adc
xchg
adc
call
adc
in
je
imul
nop
cmp
sbb
sbb
xchg
arpl
cmp
gs
call
inc
xchg
test
xor
loop
mov
xchg
outsb
fdivrl
sti
out
xchg
out
adc
lcall
mov
sahf
mov
xchg
add
jp
cmp
in
mov
lods
loopne
push
enter
arpl
cmp
jmp
dec
adc
ret
in
cs
pusha
mov
insb
xor
cmp
mov
pop
ret
or
outsb
push
push
mov
xor
sub
decl
dec
aad
xor
cli
push
adc
ror
push
fdivrs
movsl
inc
outsb
and
call
xor
add
cmp
push
dec
rcrl
inc
sub
shll
sbb
decl
fcmovnb
jae
loop
inc
in
xchg
lds
das
ret
cs
enter
xor
xor
xchg
decl
push
clc
sti
les
cmp
movsb
stos
pusha
test
aad
lcall
ret
dec
pusha
ja
push
mov
pop
sar
and
inc
dec
incl
cs
int
lahf
inc
ss
mov
fbstp
adc
hlt
decl
adc
test
push
push
inc
sahf
jmp
sub
and
add
outsb
adc
xchg
pop
aas
std
mov
repnz
shrb
inc
ret
pusha
decl
and
push
lahf
jl
pop
aam
jns
dec
push
push
shlb
push
and
add
enter
pop
sub
push
jmp
das
dec
icebp
ds
and
cmp
xor
pop
jmp
cmc
cmpl
xor
pop
inc
insl
xor
aas
sbb
mov
dec
lods
adc
cmp
and
adc
mov
orb
insl
pushl
and
les
sub
icebp
sbb
gs
push
push
ljmp
jle
xor
fcmovnbe
lret
pop
dec
movsl
xchg
push
push
movsb
inc
mov
jmp
stos
icebp
iret
jns
ror
pop
fbld
xchg
cmp
in
aam
dec
lods
shl
mov
scas
insb
inc
inc
or
push
dec
inc
inc
mov
jge
in
sarb
mov
rorl
ja
nop
or
dec
insb
jl
cmp
hlt
decl
push
jg
and
jb
cmpsl
add
shrl
push
mov
push
push
cmp
movsl
jg
addl
push
dec
xlat
ja
cmp
imul
sbb
jg
mov
sbb
movsl
insb
das
and
fnstsw
lock
ret
sbb
aad
xchg
mov
subb
insl
mov
iret
push
mov
incl
push
mov
jbe
testl
push
add
loope
incl
jmp
mov
sbb
inc
addl
push
faddl
adc
lcall
jle
jb
pop
in
jle
dec
cmp
jae
je
lret
incl
test
dec
and
lds
cmpsb
cmp
add
pop
dec
add
icebp
xor
nop
sti
lahf
push
add
je
mov
call
ret
call
jge
xchg
xor
loopne
call
daa
mov
je
sub
push
test
in
push
inc
xchg
cmpb
je
pop
adc
incl
cmpsl
lret
xor
push
or
inc
sub
xlat
adc
add
lret
aas
mov
aam
dec
out
pop
mov
popa
loop
add
subb
and
dec
sbb
out
jns
xlat
push
ret
jns
cmpsb
xor
inc
flds
loop
jmp
push
lret
test
or
or
xor
adc
cmp
sbb
in
test
int3
or
ja
imul
jno
rcr
adc
int
xchg
mov
andb
ljmp
or
out
push
cmpb
icebp
jge
loope
ret
into
lods
adc
xor
push
xchg
sub
cmp
push
loopne
imul
xor
inc
xchg
dec
jne
or
jg
jl
or
lods
jg
or
aaa
mov
sub
add
daa
jl
inc
dec
adc
sahf
popa
inc
out
lcall
dec
sbb
xor
ficomps
ret
not
inc
jno
mov
out
idivl
shlb
or
lahf
stos
decl
movsb
cltd
lahf
addr16
push
in
jle
cmpsl
push
lods
popa
adc
incl
rclb
ljmp
push
sub
and
decl
lock
stos
push
movl
adc
ret
push
dec
out
loopne
dec
popf
xor
pop
sbb
jmp
mov
subb
dec
arpl
negb
lock
push
or
sub
decl
mov
and
cmp
sub
xor
inc
push
or
loopne
pop
call
aaa
in
clc
fcmovb
enter
aaa
xchg
mov
adc
push
push
loop
popa
push
dec
ljmp
in
ret
xor
aam
adc
inc
aad
sbb
mov
dec
push
and
add
and
xor
add
enter
xor
inc
subl
jg
movsb
je
xor
dec
xchg
ja
lcall
or
jns
or
push
push
cmp
add
jo
lahf
and
push
mov
add
add
pop
jbe
mov
adc
nop
outsl
xor
incl
or
or
push
mov
or
jle
or
lret
xchg
jmp
jns
jmp
std
mov
cmp
rorb
mov
sbb
mov
xchg
ds
decl
ljmp
mov
jp
enter
sbb
loope
cmp
xchg
pop
add
sar
pushl
push
lcall
jecxz
in
dec
or
fadds
dec
dec
push
rcrb
mov
rolb
int
and
jae
xchg
cmp
mov
pop
add
or
jp
add
push
dec
dec
imul
into
or
es
call
and
or
aaa
hlt
or
mov
jmp
call
xor
pop
clc
or
icebp
push
fimull
mov
xchg
or
aad
add
dec
shll
in
lret
lods
push
pop
testb
sbb
mov
out
pop
scas
dec
push
mov
lcall
pop
insb
add
add
add
daa
inc
cmp
and
cs
mov
outsb
push
jg
sub
or
add
pop
pop
pop
cmp
pushf
and
sub
sub
sub
test
cmp
add
pop
fistps
cmc
push
ss
jg
test
mov
flds
dec
in
iret
popf
es
cmp
clc
push
sub
sub
dec
mov
adc
add
push
dec
mov
inc
push
mov
movsb
ljmp
test
fdiv
ljmp
enter
outsb
into
clc
inc
jg
sbb
or
xor
adcl
cmp
scas
clc
addl
andl
sahf
mov
inc
push
sbb
popa
add
or
lea
inc
inc
inc
sbb
add
xchg
push
inc
push
jl
and
sti
cli
bound
jg
adc
mov
jns
unpcklps
mov
cli
mov
mov
jl
mov
jg
nop
xchg
add
insl
mov
loop
sbb
dec
addb
sub
mov
cld
mov
jns
mov
adc
outsb
push
out
adc
js
mov
ljmp
push
cs
rclb
inc
xorl
adc
stos
mov
dec
push
fildl
add
inc
or
repz
rcrl
jl
add
insb
repnz
add
es
sub
aas
push
pushf
add
leave
dec
mov
xor
call
dec
les
leave
xor
pop
mov
repnz
or
and
or
dec
pushl
sub
test
pusha
pop
repz
dec
dec
add
std
fdiv
or
aam
mov
jl
or
test
popf
dec
call
xor
pop
dec
jb
dec
rolb
arpl
pop
mov
xor
cld
jg
cmp
mov
testb
jne
loop
add
sbb
mov
call
ds
push
jmp
imul
add
test
xchg
test
pop
decl
or
push
mov
std
add
das
out
and
or
ja
or
or
decl
lcall
int
std
xor
mov
and
adc
in
faddl
mov
mov
jg
mov
int
pop
rclb
loopne
jnp
sar
enter
push
ret
sub
jne
stos
adc
mov
decl
xchg
lock
in
test
cmpsl
cmp
inc
sbb
mov
jmp
icebp
pushl
ja
push
xchg
cmp
push
icebp
scas
mov
mov
sahf
out
nop
loopne
and
ret
rolb
mov
jle
add
sub
cmp
negl
add
rolb
jg
push
out
fdivs
pushf
adc
pop
lock
lea
es
cmpsb
cltd
jo
pop
insl
inc
dec
in
call
jl
mov
lahf
pop
add
das
jl
and
push
jl
dec
sarl
lods
addb
sbb
mov
cmp
test
pop
inc
incb
incl
movsl
jecxz
mov
mov
mov
push
cltd
push
add
add
ljmp
push
mov
xchg
js
repnz
leave
mov
sbb
je
sbb
mov
lcall
ret
sbb
inc
sbb
add
lock
stc
mov
sub
sti
icebp
jmp
jmp
decl
or
jmp
aas
mov
mov
and
mov
mov
lret
test
sbb
mov
repnz
lea
push
sbb
or
cmpsb
addr16
add
xor
pushl
and
bound
lock
or
mov
mov
call
sti
xchg
std
dec
clc
and
call
call
test
ljmp
fadds
loop
sub
mov
rolb
jne
enter
jl
adc
xor
adc
decw
call
out
add
mov
push
iret
cwtl
fbstp
mov
cmp
jne
push
movsl
mov
ja
decl
outsl
inc
and
outsl
les
shl
aas
in
or
leave
inc
loopne
adc
sbb
cmp
lcall
cmp
sub
add
mov
loop
sub
std
or
incl
inc
mov
mov
outsl
xchg
adc
aas
add
imul
sub
inc
shlb
sub
sub
cltd
nop
or
lret
add
mov
adc
fisubs
cmp
ljmp
jno
dec
jmp
mov
das
mov
testl
sub
jmp
lcall
cmp
cmpsb
jns
mov
ss
push
sbb
rcl
clc
cmpsb
mov
pushl
pop
mov
sub
and
pop
xchg
xchg
mov
dec
jne
popf
ljmp
xor
inc
push
or
adc
test
pusha
rcll
stos
fildll
jae
sub
nop
jbe
add
rolb
sarb
lds
ljmp
or
sbb
stos
mov
lcall
mov
stos
add
add
imul
add
inc
aad
add
aas
pop
cmp
mov
rolb
mov
idiv
mov
dec
movb
add
cmp
int3
push
in
mov
pop
mov
mov
ficoml
cmp
push
or
je
mov
mov
stos
pop
mov
ror
dec
or
xor
ljmp
mov
push
push
inc
fiaddl
adcl
xlat
adc
pushl
lock
lahf
cmp
xchg
and
mov
cmpl
or
mov
add
cwtl
xchg
dec
gs
push
cmpsb
cmpsb
push
jg
pop
cld
inc
add
jle
stos
inc
or
adc
mov
orl
cld
incl
inc
cmpl
cmpl
mov
add
repz
xchg
test
loopne
add
and
in
out
lea
fisttps
dec
push
rcll
in
mov
loopne
cmpsb
jle
dec
call
sub
js
cltd
in
les
incl
push
cltd
jmp
outsb
cmp
mov
xor
inc
inc
jmp
mov
cmpl
jg
mov
mov
inc
jae
xor
dec
and
or
decl
loope
pop
cs
push
loope
test
sbb
jg
jle
add
inc
or
inc
dec
adc
dec
xor
lcall
xchg
xchg
push
add
loopne
sarb
add
mov
or
roll
int3
mov
sbb
and
adc
in
aaa
movsl
in
or
cmp
add
incl
push
adc
in
lds
test
jo
xchg
cmpsl
stos
adc
clc
incl
clc
cmpb
scas
std
js
xor
adc
iret
dec
jb
dec
data16
lcall
cltd
or
lds
or
inc
sbb
or
rorb
add
decl
fadds
movsb
cli
in
outsb
dec
push
push
sarl
test
cmp
out
adcb
or
sbb
push
or
pop
ret
push
sub
outsb
call
subb
sub
sub
cmpsl
mov
cmp
add
adc
ljmp
clc
sbb
or
sub
daa
or
push
cmpsl
repnz
cmp
les
ljmp
add
ret
mov
lret
pop
cmp
or
sbb
mov
cs
incl
jp
cmp
mov
sbb
mov
adc
dec
inc
mov
push
mov
ljmp
add
xor
push
dec
pop
or
lahf
in
ret
mov
mov
scas
call
sbb
test
jge
cld
xor
mov
and
mov
ljmp
daa
xor
jb
movsl
push
jae
shrb
addb
ret
push
cmp
adc
add
mov
int3
roll
in
iret
pop
inc
bound
push
jl
mov
mov
mov
mov
add
cmp
jae
decl
shl
or
inc
cmp
mov
fildll
sbb
sbb
pop
mov
shr
xchg
and
and
aas
popf
xchg
incb
jl
addr16
mov
lock
ljmp
rclb
test
pop
movsl
flds
push
inc
jo
jle
pop
ljmp
cmp
push
push
mov
popa
mov
fcmovnb
pushl
xorl
sub
inc
and
cmp
ja
and
outsb
cmp
cli
clc
inc
bound
and
gs
clc
fstpt
iret
sub
shl
pop
inc
mov
ljmp
sub
sub
add
fstps
and
gs
enter
sbb
hlt
fwait
or
in
jne
out
cli
ljmp
mov
pop
je
jb
int
fcmovnbe
xchg
je
xor
push
pushl
mull
vrsqrtss
adc
shrb
ds
pop
mov
sar
insb
sbbl
jecxz
into
push
cmp
xor
cmp
ljmp
fs
mov
xor
jp
sbb
cmpb
and
xchg
pop
pop
pop
hlt
clc
add
js
push
imul
or
pushl
sbb
xor
imul
mov
fadd
lods
cmp
jne
pop
sub
jmp
lea
fs
test
push
or
nop
inc
dec
aas
adc
decl
movsl
and
mov
mov
adc
add
mov
mov
jne
add
push
call
jle
or
cmp
ffree
push
cltd
dec
xchg
xchg
mov
pop
imul
pop
mov
add
rorl
shlb
xchg
ja
sbb
mov
mov
icebp
ljmp
inc
xchg
loop
scas
mov
push
jo
mov
dec
out
push
punpckhdq
dec
stos
or
shrb
push
sbb
sub
sbb
xchg
cli
or
fidivs
push
je
decl
add
push
sbb
xor
push
xlat
movsl
fs
pushf
jge
inc
cmp
xlat
ljmp
dec
push
jmp
and
push
and
push
mov
mov
call
sub
data16
sbb
mov
cwtl
dec
jl
lahf
xchg
aaa
test
jmp
dec
lcall
stos
cmp
aaa
dec
sbb
jecxz
sbb
test
aas
mov
cmp
xchg
cwtl
addr16
jnp
fwait
cs
out
push
mov
hlt
bnd
fldl
jmp
inc
in
jne
mov
inc
mov
or
or
cmp
xor
notb
in
dec
push
or
cmpl
fnsave
xchg
loop
mov
decl
xor
jmp
aas
arpl
sub
xlat
into
popa
stos
mov
fs
pushl
lahf
sbb
loop
push
bound
sub
and
mov
int
incl
jns
push
ds
pusha
cmp
fsubrs
add
test
nop
cmpl
jo
pop
lcall
lcall
cmpb
adc
int3
loopne
pop
pop
or
or
mov
lock
ljmp
dec
xchg
xchg
int3
add
jge
enter
mov
adc
call
or
stos
sbb
pop
mov
add
aad
test
sti
das
clc
ljmp
push
and
popa
inc
je
int
fimull
fwait
pop
aas
clc
data16
loop
ljmp
or
dec
push
cmp
xor
in
mov
clc
mov
push
stos
call
or
cmpl
inc
enter
enter
pop
popa
sub
call
lea
jg
in
add
and
loopne
hlt
stos
lahf
mov
imul
ffreep
bound
aam
jb
or
clc
mov
repz
or
pusha
inc
mov
mov
or
pop
lods
test
fwait
insb
roll
pop
xlat
incl
mov
jg
clc
xor
jo
inc
faddl
es
adc
pop
xchg
xchg
popa
push
jmp
sub
dec
pop
push
push
std
lds
enter
dec
mov
test
addr16
inc
insb
inc
fs
or
scas
insb
jmp
push
xor
mov
cs
cmp
rorl
loope
adc
add
jne
sub
mov
pop
sarb
xchg
add
decl
xchg
mov
mov
add
pop
popf
daa
jmp
loope
in
insb
js
shrl
add
incl
and
adc
mov
call
or
nop
dec
out
push
mov
inc
push
mov
lret
dec
pop
xchg
adc
cmp
in
fdivl
pushf
adc
and
push
cmp
loopne
in
test
fwait
std
call
aam
add
push
jb
mov
mov
pop
outsl
clc
incl
lods
in
or
xchg
pop
shll
xchg
xchg
mov
add
xor
xchg
sar
dec
pop
adc
cmpsl
int
add
push
shlb
adc
cld
decl
ret
inc
lds
or
xor
xor
ja
mov
fadds
push
decl
pop
push
rol
and
or
jb
cmpsl
js
loop
cmovno
mov
call
mov
jg
mov
fwait
rcl
add
repz
and
cmp
imul
nop
jg
dec
dec
lods
inc
enter
cmp
pinsrw
subb
mov
push
jp
dec
ljmp
pop
movsb
or
out
and
or
or
xor
and
pop
loopne
sub
push
add
test
mov
stc
jg
loop
movsl
jg
clc
decl
mov
sbb
jae
xorl
sbb
sbb
sub
jle
jge
je
nop
jo
cmp
dec
shlb
pop
xor
std
push
cmp
cli
jno
sbb
add
xchg
jo
adc
cmp
mov
shrb
call
pusha
cmp
sub
jb
movsb
test
sahf
js
mov
in
inc
pop
xchg
push
ljmp
icebp
dec
faddl
das
xchg
mov
jmp
mov
call
lea
sbb
movsb
dec
inc
mov
std
mov
movsl
or
pop
loopne
add
inc
stc
xchg
add
fiadds
jbe
pop
and
and
decl
or
pushl
movsl
test
addb
shl
xchg
bound
and
sahf
adc
mov
repnz
and
jg
add
push
int3
or
pop
pop
cli
test
push
mov
test
rol
call
or
push
add
loope
incl
das
mov
loop
clc
cmpsl
call
shlb
sub
loopne
inc
inc
xor
ljmp
ret
out
and
sub
adc
xor
or
or
ljmp
jg
mov
add
roll
je
and
pop
add
add
cld
sbb
mov
das
cmp
femms
test
pop
insb
sbb
jno
jg
cmc
stos
sub
and
fdivrs
dec
decl
les
pop
loopne
dec
mov
xchg
andb
fs
into
mov
jmp
or
dec
inc
loopne
dec
or
int
cmp
adc
or
adc
sbb
cmp
xlat
out
sti
pop
fisubs
add
call
movsl
add
xor
outsl
xor
mov
cmpsb
add
scas
test
push
jbe
je
decl
jnp
xchg
fs
jnp
pop
shlb
sub
roll
mov
mov
cmpsb
lcall
ret
enter
mov
and
roll
fs
lcall
pop
js
shrb
lret
leave
mov
loop
call
in
sahf
mov
jge
pop
push
xor
aam
and
mov
cmpsb
cli
ja
in
mov
inc
xchg
push
pop
mov
inc
xchg
rcrb
and
ja
dec
cs
push
jns
xchg
mov
xchg
dec
mov
scas
fsubrl
push
or
int3
mov
sbb
hlt
pop
icebp
mov
cmp
push
adc
in
int3
add
das
mov
sub
or
sarb
xchg
push
or
test
pop
and
fldenv
subb
dec
inc
and
add
or
cmp
or
xor
mov
inc
add
loop
add
push
jp
imul
ljmp
push
or
sub
call
test
movsb
lds
pusha
xor
cmp
dec
dec
addr16
xchg
enter
pop
leave
pop
adc
push
fiaddl
sub
lods
sbb
xor
cmp
movsb
adc
rcr
mov
jge
daa
dec
mov
and
add
cmp
loop
push
jle
and
jl
mov
mov
arpl
mov
ret
lock
rorl
add
fs
loopne
xchg
loope
sbb
lock
js
xchg
mov
loopne
add
mov
test
das
and
clc
mov
ljmp
fcompl
mov
lods
inc
add
fldcw
and
adc
and
stos
lret
movsl
js
add
add
bound
push
push
rcrb
dec
xchg
decl
pushf
test
cmp
mov
push
nop
cmp
mov
mov
aas
popa
inc
jg
jg
inc
xor
sub
cmpsl
mov
int
jecxz
lock
call
in
jo
test
lret
or
aas
fdivs
cmc
arpl
fisubl
dec
cmp
jmp
mov
sub
dec
push
data16
pushf
cmp
jne
push
mov
xor
gs
mov
push
cs
inc
add
ret
sbb
mov
xchg
inc
lods
testb
lcall
cmc
cmp
sbbl
test
sar
lea
xchg
lods
not
cwtl
lods
js
push
fildll
flds
sub
test
add
xchg
xor
add
sbb
in
push
and
notl
mov
loop
sbb
fidivrl
add
jmp
lahf
xchg
sub
xchg
pop
popa
iret
inc
call
cld
pushl
ds
pop
cmc
dec
push
sub
sbb
sarb
popa
es
std
out
adc
xor
xchg
sbb
and
mov
decl
je
push
rcll
insb
iret
sub
push
jle
sub
ficompl
clc
fnstenv
outsl
imul
decl
pop
loop
push
sbbb
or
and
mov
ficoml
and
xor
jnp
push
add
stos
test
add
mov
adcl
mov
add
sbb
insl
inc
sub
pop
xchg
and
int3
add
push
sbb
inc
pop
cmpsl
in
jno
push
sub
pushf
push
jmp
or
adc
inc
sub
scas
sbb
dec
pop
push
jae
lea
call
lock
push
adc
push
inc
pop
sbb
rolb
xor
mov
xor
xor
je
js
cwtl
push
fwait
inc
lcall
call
fwait
sbb
lods
mov
inc
stos
pop
nop
lret
orl
jb
out
sub
insb
push
mov
jg
adc
fidivl
ss
aad
mov
pop
mov
xchg
xor
test
adc
std
xor
pop
mov
out
add
ret
into
in
mov
xor
pop
sub
decl
add
push
lret
inc
rcll
test
mov
das
popf
and
ljmp
mov
repz
jo
inc
sub
ja
aad
mov
pushl
or
jl
add
rol
dec
sbb
pop
mov
ljmp
shlb
mov
mov
into
jne
scas
pop
push
add
dec
mov
cwtl
mov
sbb
lock
rcrl
mov
add
xchg
imul
xchg
enter
sub
pop
adcb
push
ret
ss
and
add
mov
les
and
lret
loopne
mov
push
jo
adc
jle
int3
xlat
in
rorl
ret
sub
add
push
rcr
das
sbb
push
and
pushl
movsl
imul
jb
loopne
cmp
je
cmp
jne
loopne
jns
mov
adc
push
or
rorb
add
push
sub
je
sbb
cs
mov
ds
iret
test
into
inc
inc
mov
int3
and
data16
push
xchg
cmp
mov
xchg
mov
xor
push
stos
xor
cwtl
xchg
leave
outsl
push
cmp
ljmp
call
mov
cmp
mov
subl
test
clc
inc
scas
lock
and
lods
dec
mov
add
enter
sub
pop
outsl
dec
test
push
arpl
scas
inc
sub
imul
fldcw
ljmp
xor
push
enter
lock
paddusb
and
xor
dec
lahf
cli
test
in
push
push
jns
xor
xchg
inc
xchg
mov
movsb
push
xchg
in
or
ljmp
jo
popf
push
sbb
movsb
insb
lret
inc
clc
sbb
mov
sub
mov
call
sub
outsb
jb
sbb
test
dec
pusha
cmp
mov
std
push
sarb
sub
pop
mov
adc
pop
mov
es
movl
ds
mov
adc
outsb
or
add
xchg
jecxz
scas
and
adc
xchg
push
je
adc
add
cmp
push
jne
push
xor
jle
add
push
mov
xor
fwait
call
ficoms
cs
decl
adc
or
push
les
mov
or
incl
addl
jp
out
sbb
and
xchg
out
add
add
push
adc
out
xor
add
shll
stc
cmp
inc
sbbb
xor
decl
mov
shrb
cmp
negl
add
jl
ljmp
lcall
and
cmp
mov
add
mov
jmp
mov
shlb
sub
xor
jae
imul
out
mov
call
dec
mov
dec
add
into
arpl
out
dec
int3
adc
icebp
incl
push
cmpsl
shlb
or
imul
hlt
xchg
test
xor
inc
jmp
out
xor
adc
cmp
xor
mov
rorl
add
xor
out
clc
cwtl
or
scas
sahf
ret
ret
mov
xor
sub
out
push
das
mov
jmp
jp
lret
inc
jmp
sarb
and
mov
inc
inc
mov
add
inc
std
jge
push
jb
addr16
test
adc
aaa
std
fnstsw
jno
aam
rcl
mov
dec
or
xchg
sbb
adc
sub
cltd
outsl
incl
mov
and
enter
cmp
adc
sub
movsb
xchg
ljmp
clc
outsl
pop
add
pushf
stos
sar
push
push
jb
jbe
pop
ljmp
test
test
cwtl
addr16
call
inc
movsl
inc
imul
cmp
incl
pop
icebp
adc
bound
data16
inc
aad
js
xor
mov
aad
stc
mov
ljmp
or
adc
or
jmp
cmp
mov
je
sbb
cmp
lock
fcoml
call
std
or
jno
xlat
push
xchg
ss
test
dec
push
add
mov
outsb
lea
aas
test
scas
adc
add
push
fisttps
jg
mov
and
jl
mov
aas
mov
into
scas
xor
ljmp
mov
idivb
jg
lea
jmp
cmp
and
repz
test
mov
ljmp
push
push
mov
outsb
xchg
cld
inc
mov
incl
jmp
pop
jp
ljmp
adc
mov
jl
or
xor
andl
pusha
das
clc
jmp
hlt
daa
pop
or
ss
dec
inc
jns
pop
jl
add
mov
dec
xlat
adc
mov
sbb
rcl
push
mov
pop
add
mov
enter
loope
dec
add
push
pop
aas
loopne
xor
mov
push
cmp
add
mov
and
pop
daa
mov
pusha
ret
sub
das
cli
stos
stos
cmp
ja
scas
je
adc
sub
cli
scas
xor
ljmp
sbb
adc
jo
lret
pushf
xor
cmpsl
adc
xor
push
stc
jecxz
ret
mov
push
mov
call
daa
mov
cmpsl
xchg
jg
daa
xchg
and
aam
jl
sbb
push
jecxz
fdivrl
std
mov
adc
mov
rcrb
sub
push
inc
and
mov
loopne
stos
sub
mov
xchg
cmp
jne
call
cld
nop
cltd
and
pop
shr
or
fs
mov
sbb
sbb
aaa
inc
or
into
std
cli
pop
cmp
xchg
xchg
cmpsl
lret
push
jmp
add
and
ljmp
mov
pop
pop
cs
dec
inc
lcall
jne
push
mov
cmp
imul
jg
mov
js
cmp
mov
inc
xor
mov
mov
jecxz
add
test
addps
popa
inc
fsubp
push
adc
subl
add
nop
scas
xor
jo
adc
cmpsb
loopne
add
jne
nop
ljmp
sub
insb
adc
gs
cld
subl
stos
aaa
sub
ret
call
cmpsb
mov
xchg
pop
xchg
lcall
je
xchg
test
add
mov
pushl
shr
mov
pop
adcb
mov
or
aad
and
push
call
push
call
sbb
inc
insb
jge
lds
loop
dec
sbb
pop
sbb
jl
sbb
ljmp
rcrb
out
push
add
aas
push
jnp
xchg
xchg
ss
add
ljmp
jmp
add
adc
push
aaa
sahf
popf
pushf
cld
aaa
and
leave
push
fisttpll
imul
dec
add
mov
jecxz
inc
mov
jle
test
jnp
mov
cmp
jge
fistpll
in
je
push
int3
leave
push
mov
pop
es
loopne
and
ljmp
ret
int
adc
sarb
push
xchg
push
int
inc
cmp
ficompl
jmp
push
insb
cwtl
jmp
call
add
push
add
or
and
call
cld
push
mov
repz
ret
xor
repz
xor
lds
jmp
ret
cwtl
push
les
pop
pop
sti
ljmp
mov
nop
pop
jmp
jp
sete
inc
and
add
ret
inc
xchg
mov
jg
cmp
or
dec
js
out
inc
shrl
fnsave
aaa
outsb
adc
incl
inc
movsl
adc
add
shlb
mov
outsb
jmp
mov
jp
popf
out
xchg
sar
lock
test
mov
jl
or
shr
pop
mov
lock
insb
push
cmpsb
decl
jne
mov
lcall
mull
loop
dec
ja
or
lock
inc
inc
fisubs
and
ret
xchg
jae
inc
mov
lock
decl
dec
inc
jge
push
pop
inc
cld
aad
pop
xorb
pusha
sti
jmp
fildll
jmp
fs
dec
fbstp
andb
inc
les
jo
mov
icebp
pushl
jo
xor
cmp
add
sub
out
dec
mov
add
jb
inc
xor
lock
flds
mov
insb
and
incl
pop
mov
add
cmp
shlb
inc
mov
enter
call
push
push
mov
mov
lock
fs
sub
arpl
decl
lahf
dec
sub
or
lock
sbb
jmp
push
adc
xchg
add
xor
cmpsl
outsb
add
neg
sbb
xchg
repz
das
mov
push
adc
push
insl
incl
es
cmp
adc
lds
in
cmpsb
mov
faddl
rcll
mov
ss
add
push
sub
sbb
pusha
pop
outsb
add
scas
cmc
lahf
cs
cmp
nop
add
lock
add
jmp
push
lods
add
or
lods
incl
cmc
inc
jne
leave
add
idiv
in
roll
loopne
push
and
sbb
repnz
sbb
jge
xchg
das
add
popa
xchg
bound
mov
dec
imull
dec
decl
je
push
leave
and
nop
jno
jno
mov
adc
push
test
fists
jmp
pop
popa
ljmp
push
pushf
fcos
push
jb
xor
inc
lods
jmp
hlt
mov
adc
pop
and
mov
mov
xchg
std
and
lock
cmp
mull
push
push
ljmp
inc
add
and
inc
mov
cmp
in
nop
test
clc
daa
add
call
push
mov
mov
or
xor
mov
mov
insl
inc
jecxz
in
pushf
test
cmp
sar
pushl
dec
fwait
adc
sub
pop
add
mov
je
add
clc
cmp
or
lcall
cmp
sti
lods
sahf
inc
rcrb
jmp
jmp
push
decl
xchg
mov
pop
lret
bound
stos
and
ljmp
adc
add
mov
cmp
mov
fcomip
mov
or
ss
push
jecxz
xor
and
rcll
inc
sbb
sahf
pop
ljmp
subl
jmp
inc
rcl
arpl
add
push
mov
jae
adc
jb
pop
js
sbb
ds
lcall
mov
pusha
fcoml
sub
insl
testl
push
xchg
dec
jp
dec
push
or
lods
push
mov
and
test
stos
or
arpl
jb
test
mov
or
or
insl
push
inc
scas
xchg
fistl
push
push
cmp
push
loopne
int
jl
icebp
nop
adc
das
sbb
pop
decl
mov
sub
adc
shll
out
movsl
fsubl
push
aad
dec
jmp
pop
inc
je
pop
fnstcw
sbb
je
lcall
push
insb
adc
aaa
lcall
incl
sbb
adc
cmp
push
pushw
es
sahf
add
mov
and
js
jo
mov
pop
incb
gs
push
notl
sub
cmp
sub
jb
sub
jmp
jmp
pop
jne
fnstsw
fiadds
nop
xchg
insb
mov
or
push
mov
pop
adc
cmp
fwait
stos
and
push
inc
dec
inc
js
pushf
inc
cmpsb
in
mov
inc
mov
mov
movl
pop
cmp
rolb
push
leave
and
cmp
hlt
dec
icebp
adc
mov
xor
repnz
loop
xor
and
decl
cli
dec
add
push
shlb
jbe
sar
mov
dec
je
test
imul
fnstenv
cwtl
cmp
mov
add
jecxz
call
push
stos
andb
or
xor
mov
movsb
sub
nop
rcrb
ljmp
ret
or
add
jg
js
pop
mov
xor
jns
sub
lcall
aas
mov
push
leave
lds
push
and
push
dec
xorps
jp
mov
jp
xor
add
aaa
hlt
fimuls
xchg
xchg
push
lcall
rcrb
int
sbb
push
jecxz
sbb
test
loopne
xchg
pop
fucomip
incl
mov
inc
dec
xchg
sbb
add
movsb
jo
cmpsl
push
lcall
fstps
pop
repz
jo
inc
jmp
add
inc
mov
decl
test
ret
mov
dec
pop
add
pop
push
test
cs
je
decl
add
andb
jae
mov
push
inc
pop
stos
mov
cmc
mov
decb
push
cmpl
add
decl
push
movsl
or
push
pop
xor
not
fdivs
mov
add
push
clc
mov
stos
mov
and
sbb
cli
ljmp
mov
jno
sbb
int3
xchg
xor
ja
insb
or
mov
mov
sub
cli
int
add
sbb
inc
or
jmp
push
and
test
lret
es
repz
sub
inc
dec
arpl
je
lea
jne
bound
add
adc
test
and
addr16
add
decl
mov
cmpl
rol
push
dec
cmp
xor
sbb
xchg
test
cmc
outsl
xchg
pushf
cmc
shlb
decl
aad
movb
add
subb
cmp
push
lea
cmp
ljmp
pop
scas
cli
jns
in
push
inc
jbe
je
and
xchg
sbb
or
jmp
xchg
pop
loop
xor
and
test
adc
stos
add
push
addr16
jo
lock
and
les
orl
mov
call
fcmovb
xor
or
push
shlb
xor
ret
ret
mov
xor
cmp
jne
imul
jb
clc
incl
rcrl
add
jo
popa
add
add
dec
incl
sub
push
and
popf
outsl
stos
dec
sub
mov
mov
ret
sbb
push
lods
mov
outsl
add
pop
hlt
call
sbb
mov
inc
cwtl
push
jmp
sbb
and
push
adc
movsb
or
jne
cli
mov
add
fs
adc
push
or
jbe
xchg
jbe
decl
stc
push
mov
fcoml
test
sbb
inc
decl
inc
inc
add
dec
rep
add
and
or
repnz
mov
inc
mov
pushf
mov
inc
sub
push
dec
xchg
and
dec
mov
mov
jo
lret
and
sub
mov
and
dec
sbb
sbb
or
jae
push
loopne
mov
mov
inc
add
adc
clc
ljmp
add
xchg
xchg
sbb
push
push
or
mov
mov
xchg
mov
pop
mov
outsl
sbb
incl
push
jns
movsl
sbb
lcall
aas
inc
mov
rorb
inc
shr
mov
dec
mov
imul
inc
cld
movsl
jmp
push
and
jmp
es
mov
xchg
sub
mov
pushl
cld
adc
cmp
sub
xchg
mov
lcall
mov
repz
ljmp
or
adcb
in
mov
mov
decl
adcl
mov
push
and
xchg
xchg
lcall
mov
add
cmpsl
inc
pop
jle
jmp
push
fstl
out
nop
cmp
lcall
adc
inc
jmp
aaa
adc
or
testl
xchg
cmpl
decl
sbb
dec
adcl
cmp
jno
cwtl
jmp
ret
sub
jge
imul
sti
push
repnz
xor
dec
les
pusha
cmc
mov
and
aam
dec
dec
stos
stos
decb
insb
push
call
iret
add
mov
mov
decl
xchg
rorb
sub
push
push
add
jo
nop
mov
inc
dec
pusha
dec
es
lcall
adcb
imul
nop
orl
subl
dec
ja
aam
jge
pop
stos
enter
cmc
adc
add
cmp
cmp
popa
cmp
xor
pop
and
mov
pusha
add
vpshuflw
insl
jb
test
mov
xor
pop
sahf
add
xchg
or
sub
add
xor
jle
ficompl
es
and
jno
out
sub
das
clc
mov
xor
arpl
sbb
xchg
adc
inc
pop
or
in
add
fs
jnp
aas
pop
mov
bound
addr16
cmp
xchg
mov
inc
and
leave
and
pushl
js
cmp
popl
mov
or
imul
lods
dec
mov
add
cmp
pop
or
add
dec
arpl
or
cli
dec
add
pop
test
xchg
int
pusha
push
jle
push
sub
clc
jmp
fisubs
push
push
mov
sub
loopne
inc
lret
pusha
incl
shl
stos
dec
xor
aam
add
jmp
sub
jmp
das
mov
add
mov
loopne
lock
jbe
pop
insb
shlb
je
jne
repz
mov
jge
out
mov
inc
add
lcall
and
mov
push
mov
dec
pop
call
xor
cmpl
mov
stos
test
pop
lcall
or
push
push
shll
lds
or
aas
add
dec
test
lock
call
sbb
sub
mov
cmp
inc
add
pushl
outsb
inc
jle
daa
push
scas
push
xchg
xchg
icebp
movl
or
mov
mov
sbb
cmp
cltd
add
inc
push
call
mov
rcll
push
dec
aaa
add
fstpt
insb
lock
xor
mov
ljmp
adc
jno
add
pop
add
xor
add
test
imul
push
arpl
push
icebp
ds
in
sub
js
pop
mov
popa
xor
lcall
cwtl
ss
adc
xchg
xor
sbb
xchg
xchg
cmp
jg
fwait
mov
lret
adc
or
sub
scas
popf
cltd
jo
cmp
incl
cmp
push
sub
xchg
inc
push
push
add
lock
es
sbb
in
pushf
pop
adcb
mov
dec
andb
pushl
sbb
in
pop
test
and
push
jae
aam
xchg
mov
adc
cmp
and
ljmp
lret
jns
orb
mov
mov
push
or
ljmp
xorb
sbb
mov
xorb
in
pop
jl
xchg
mov
cwtl
push
sub
popa
push
ljmp
inc
repnz
jp
arpl
inc
mov
inc
addb
fbstp
jb
stos
loopne
lods
aad
repnz
fs
decl
xchg
pusha
or
mov
notl
cmpsl
push
cmp
mov
scas
std
test
lds
aaa
inc
cmpsb
mov
pop
in
and
fldt
mov
ljmp
xchg
xor
fwait
sub
add
mov
out
insb
push
and
jg
and
add
call
test
fcomps
or
les
imul
xchg
daa
shlb
fcomip
call
and
dec
jg
call
loopne
dec
xchg
lea
lods
mov
fstl
dec
gs
clc
fsubl
pop
lea
jae
arpl
add
push
xchg
mov
push
dec
ds
adc
pop
lcall
adc
add
roll
xor
cmpsb
aaa
fildll
nop
pop
xchg
test
pop
les
adc
lcall
mov
jnp
push
xor
sbb
sbb
xchg
stos
xor
je
fldlg2
test
lcall
add
mov
mov
inc
push
jno
in
movb
inc
inc
mov
aad
cmp
jmp
sub
mov
aad
pop
leave
enter
xchg
imul
mov
ret
nop
and
xchg
mov
enter
pop
repz
decl
push
js
fsqrt
sarb
loop
fldcw
pop
repnz
repz
mov
shrb
jb
xchg
fistpll
push
cld
adcb
icebp
pushl
sub
push
and
push
mov
sbb
xchg
sub
adc
jg
dec
xchg
popa
jne
push
daa
adc
or
or
add
cmp
push
jmp
inc
or
add
shl
inc
pop
push
mov
jmp
adc
xor
mov
test
dec
xchg
scas
add
cltd
cmpsl
fisubrl
sbb
insl
pop
jg
mov
jle
or
xchg
mov
xor
sahf
or
stos
lcall
lods
cmp
je
mov
fnstcw
decl
inc
add
or
mov
dec
pop
repz
or
mov
outsl
jge
out
mov
test
shlb
outsb
notb
daa
ljmp
and
cmp
or
decl
sarl
or
mov
sub
jmp
mov
ljmp
sarb
jbe
pop
pop
in
sub
cmpsb
jle
inc
lds
sub
sub
pop
push
xchg
jne
fstpt
insl
scas
add
add
imul
call
jp
and
jmp
and
subl
rcll
fidivl
insl
sub
push
mov
lcall
inc
inc
or
dec
and
xchg
clc
add
pop
xchg
jnp
inc
sbb
mov
dec
jmp
mov
mov
mov
inc
jns
push
fdivs
orb
xchg
add
mov
in
lds
pusha
and
mov
sbb
js
push
add
mov
cmp
dec
inc
dec
adc
fsubrs
ljmp
pop
cmc
pushl
in
push
sbb
incl
pop
imul
rolb
xor
push
int3
stos
push
mov
decl
jnp
xor
xor
sbb
inc
jg
inc
mov
push
fxch
test
iret
jl
lret
fs
fs
lods
addl
loope
mov
insl
pushl
and
inc
sbb
sub
pop
icebp
push
sbb
inc
das
shlb
lds
clc
cmpl
fld
fucompp
ljmp
out
mov
fldz
fsubr
jg
rcrl
imul
xchg
sub
scas
push
xor
scas
insl
imul
sarl
incl
fstp
pop
mov
mov
adc
cmp
idiv
icebp
fdivr
mov
jnp
push
jmp
iret
fcomp
lret
fstp
pop
incb
jl
insl
or
test
add
std
incl
adc
mov
inc
es
fs
jl
dec
inc
mov
jae
aam
jge
cwtl
je
mov
and
int
pop
pop
push
cmc
sub
adc
decl
scas
shlb
inc
xorl
push
cs
mov
jmp
xchg
mov
enter
incl
popa
sahf
or
lea
xchg
mov
sbb
ljmp
imul
aas
in
aaa
scas
fisubrl
add
sbbb
inc
mov
push
mov
inc
dec
mov
sbb
adc
inc
pop
decb
ljmp
sbb
jecxz
push
jmp
mov
jo
in
push
imul
je
or
lcall
bound
adc
repz
sti
js
pop
les
nop
xor
stos
in
cltd
test
push
sub
pusha
add
sbb
orb
testb
dec
xchg
sti
mov
aaa
pop
xchg
cmc
mov
enter
sub
push
lods
and
fldl
insb
push
fcmovnb
add
inc
mov
inc
xor
push
insb
pusha
push
push
ret
mov
or
xchg
push
mov
aaa
ret
fadds
je
dec
sbb
cmc
stc
lret
adc
lock
push
shlb
or
mov
mov
in
sub
jns
ret
mov
addr16
cli
adc
mov
mov
add
add
loopne,pn
aam
and
and
dec
mov
fdivrs
ljmp
out
imul
sar
ficoms
xchg
push
data16
sub
dec
insb
jecxz
or
cmp
jg
incl
or
pop
or
push
adc
mov
movsb
mov
ljmp
dec
pushf
adc
and
ja
mov
std
shlb
lret
cmp
jg
mov
test
jns
or
daa
xor
data16
xor
fmulp
ja
mov
loope
mov
clc
push
or
rcrl
mov
call
jp
inc
adc
xor
adcl
jae
or
or
pop
pop
inc
add
or
jle
clc
inc
lods
cmp
mov
fists
inc
es
ret
jge
or
rclb
cmpsb
xor
xor
ljmp
imul
add
cmpsl
or
inc
in
loop
xchg
jne
aam
or
test
jmp
jmp
add
inc
mov
xlat
mov
mov
push
test
jp
daa
push
test
call
dec
mov
cwtl
and
loop
incl
or
sub
and
xor
xchg
in
bound
push
xchg
mov
sbb
or
ret
popa
insb
pop
cmpsb
xorl
repnz
pop
pop
in
pop
lea
jmp
sub
enter
rcrl
mov
ljmp
push
cmp
int3
in
push
lcall
push
xor
jb
mov
mull
fwait
nop
inc
les
lcall
sub
jb
cmp
enter
pop
xchg
andl
inc
outsb
xor
ljmp
adc
xor
add
ljmp
mov
pusha
sub
cmc
push
js
pushl
adc
dec
cmp
inc
test
test
adc
sahf
aaa
sub
sarb
repz
mov
shlb
xor
fcomp
mov
ljmp
ret
jne
sub
insb
popf
mov
dec
mov
and
jle
in
aaa
lock
repnz
mov
push
iret
shlb
push
push
repnz
ljmp
add
andl
ret
bnd
xor
push
dec
push
and
dec
inc
cwtl
sbbl
xchg
punpckhwd
sbb
paddusb
imul
pop
ret
sub
cld
ljmp
inc
cld
cltd
nop
lret
xor
movsb
push
lret
jp
inc
mov
pop
dec
test
lahf
daa
leave
shrb
or
sub
ljmp
cli
add
pop
fmul
les
rorb
fwait
mov
jbe
xchg
sub
jb
incl
jmp
adc
push
loope
and
repz
test
or
das
daa
lock
pop
sbb
shrb
psubq
mov
repz
push
dec
mov
and
andb
adc
orb
jg
div
incb
jmp
inc
pop
cmc
rorl
pop
scas
repz
incl
fs
jle
aaa
adc
cmpsl
cmp
push
jmp
sbb
xor
xchg
jmp
jmp
push
jge
xlat
jmp
jno
scas
xor
jns
mov
inc
dec
xor
cwtl
in
and
push
dec
dec
lods
lahf
jl
in
dec
incl
add
das
mov
and
fstl
repnz
hlt
adc
push
out
and
ror
nop
or
pushf
jo
pop
decl
loopne
sub
movsl
fisttps
cmpsb
ljmp
add
and
push
mov
fcmovbe
mov
faddl
es
stos
xchg
in
add
jge
pop
data16
lods
cwtl
jno
call
mov
cltd
sbb
xchg
sbb
jmp
sub
ja
outsb
and
add
inc
int3
test
out
jg
ljmp
sub
push
mov
push
pop
cltd
xchg
push
push
clts
stos
add
lret
cltd
sbb
pushf
add
popf
ljmp
insb
mov
mov
or
lahf
or
jge
cmova
dec
dec
push
mov
adcb
pusha
jbe
push
fbstp
mov
or
and
ret
add
insb
rcrb
pop
clc
fwait
test
mov
jmp
xlat
les
dec
push
push
xor
sub
mov
aas
jmp
and
push
incl
pop
in
jp
jno
ret
and
sarb
loopne
jmp
sub
cmpsb
push
cmpsb
pop
insl
fcomip
dec
pop
mov
leave
mov
fsubl
jne
xor
popa
clc
jl
jg
jmp
push
or
pop
or
popa
or
in
orb
stc
scas
adc
add
jg
mov
sti
lcall
and
shr
mov
sbb
or
subb
out
decl
or
add
pop
pop
cli
mov
jge
cmp
incl
and
fisubrl
adc
add
or
pop
rcl
add
xchg
or
jmp
mov
je
inc
leave
int3
and
mov
jg
dec
stc
add
and
xchg
sub
mov
shlb
popa
or
pusha
or
popf
out
jmp
push
push
neg
pop
lock
fstpl
mov
sahf
add
mov
inc
icebp
lret
mov
mov
push
enter
int
jmp
dec
sarb
pop
movsb
dec
xchg
in
mov
cmpsl
sahf
mov
and
and
push
lret
lret
sub
pop
pop
stos
and
das
jns
aad
jecxz
xlat
scas
jmp
push
push
add
sbb
and
aaa
icebp
sarb
jg
inc
mov
add
int3
mov
jno
cwtl
pop
jb
cmp
push
shrb
das
clc
call
lods
setl
push
inc
push
jl
lcall
ljmp
fsubl
lock
jecxz
xchg
fwait
mov
xor
xchg
fistpll
dec
jge
sahf
inc
push
cmc
addb
call
in
fidivl
push
shrb
incl
push
pop
adc
sbb
test
lret
add
dec
fcomps
in
push
rorl
push
xchg
add
push
adc
and
hlt
cld
cmc
ljmp
ds
aaa
sub
insb
sub
push
xchg
fwait
lahf
mov
ljmp
adc
lods
lock
adc
jns
adc
stos
ljmp
add
adc
sub
jge
decl
lahf
mov
and
add
pop
jecxz
inc
ffree
dec
pop
pop
sub
inc
jg
ljmp
add
pop
bound
jnp
aas
lods
cmp
jg
insb
rcl
in
mov
mov
sbb
pushl
push
insb
cmp
push
imul
xchg
add
or
and
pop
insl
lret
mov
pop
js
jmp
stos
jg
pop
js
fsts
cmc
aaa
popa
nop
icebp
repz
and
aaa
push
pop
cwtl
cmpsl
or
pop
jg
jmp
sbb
mov
xchg
mov
loopne
imul
inc
jl
sub
xor
cmpsl
xchg
mov
inc
loope
dec
push
scas
lods
adc
popa
xchg
imul
xchg
pushf
or
cli
dec
call
shrb
cmpsl
push
sti
psrad
adcl
adc
cmpb
mov
mov
push
adc
mull
in
ljmp
mov
or
stos
xchg
cwtl
push
jo
or
mov
dec
cwtl
and
setbe
jns
jmp
test
fbstp
and
jne
push
inc
sub
jo
mov
xor
subb
mov
mov
scas
jle
movb
mov
lea
mov
push
je
in
out
sti
sub
es
cmp
jmp
mov
or
or
clc
push
inc
inc
jns
lret
sbb
xor
mov
shr
mov
outsl
call
in
sbb
lock
jo
test
cmp
mov
jg
mov
sti
adc
jns
jmp
dec
negb
xor
int3
mov
mov
or
sub
push
and
cmp
and
in
adc
dec
mov
shlb
call
inc
shl
xor
dec
ljmp
ljmp
test
adc
push
mov
push
sbb
cmp
shl
in
mov
jg
jnp
jno
xor
cmp
daa
in
inc
cmpsb
push
push
rclb
dec
rorb
in
dec
cmp
addb
dec
hlt
inc
sub
adc
cmp
cmpsl
push
sbb
out
xchg
movsb
jl
cmp
loope
add
jmp
popf
adc
or
ljmp
cli
jnp
divb
xorb
sbb
mov
or
std
sbb
enter
mulb
cmpsl
imul
insb
jp
xor
push
push
js
xor
inc
pushf
nop
xchg
and
rcrb
and
lahf
mov
test
adc
inc
fistps
lea
test
ret
popa
xchg
jg
in
push
loopne
ljmp
push
xchg
jne,pn
adc
dec
mov
jbe
jbe
pop
cmp
ljmp
mov
add
inc
xor
xor
imul
fcmovnb
push
pusha
mov
lcall
mov
sub
jmp
push
fiadds
fs
xchg
scas
and
xor
jae
mov
movsl
sbb
ljmp
cltd
jmp
cmp
xor
push
pop
hlt
mov
jnp
pop
loope
xchg
push
pusha
xor
add
jmp
push
inc
mov
or
and
xlat
lds
js
and
lcall
decl
and
dec
mov
adc
lfs
xor
jmp
adc
dec
adc
stc
and
out
test
cs
and
pop
jbe
inc
fs
dec
cmp
pop
push
faddl
push
push
xchg
xor
mov
ja
aaa
sub
jne
mov
cli
ja
mov
stos
lret
mov
or
cld
leave
adc
incl
and
inc
daa
add
push
push
inc
jo
add
and
jecxz
sub
inc
cmp
xchg
pop
mov
lret
pop
lcall
pop
popf
or
test
in
jmp
xchg
mov
mov
fwait
mov
ljmp
mov
dec
dec
sub
xchg
add
cmp
and
leave
cld
stos
push
add
fsincos
sahf
xor
mov
cmp
adc
or
out
insl
test
inc
sub
inc
les
cmp
out
cli
jmp
pop
das
pushf
stc
xchg
in
repnz
or
adc
xchg
xchg
xchg
xor
pusha
cmp
jle
xchg
fldcw
test
rcll
fmulp
or
pushl
mov
lods
sbb
addb
fs
adc
cwtl
xchg
out
rcrb
cmp
or
dec
inc
test
lods
and
inc
xchg
push
push
and
cltd
test
pop
sahf
mov
fcmove
mov
mov
adc
movsb
mov
mov
decl
icebp
mov
add
cmc
je
lods
fsubl
sub
repnz
mov
daa
lock
aam
inc
mov
ja
clc
shl
lahf
movsb
movsb
pop
push
movsl
lcall
add
push
jmp
and
ds
xchg
or
and
pop
mov
inc
scas
sub
mov
pusha
fwait
fs
jle
repz
data16
dec
inc
xchg
hlt
test
subb
gs
pop
mov
faddl
or
jg
pushl
rcrl
jge
push
aam
push
add
pop
int
outsl
daa
add
pushl
movsl
jbe
or
inc
jge
movaps
das
pop
push
clc
fs
inc
loopne
sti
dec
jns
add
pushl
jmp
xchg
adc
stc
pop
or
mov
mov
nop
das
movsb
pusha
adc
mov
test
mov
lods
lcall
jmp
push
pop
xchg
push
inc
cwtl
mov
ret
inc
lahf
jb
xlat
sbb
xor
push
and
or
int3
xchg
xor
or
push
test
jge
dec
dec
test
filds
xchg
aad
sub
aaa
pop
xchg
lahf
pop
subb
mov
pushf
pop
push
sub
fnstenv
dec
cmpsb
test
es
dec
inc
xorl
test
jo
adc
lcall
call
sarb
shrb
repnz
adc
aam
movsb
test
jb
sub
mov
movsl
decl
shll
mov
pop
mov
in
adc
cmp
xchg
fs
jb
scas
cli
incl
or
push
cltd
jns
ret
mov
push
pushl
mov
decl
adc
sub
adc
call
mov
pop
call
xlat
mov
xchg
dec
and
mov
nop
push
xchg
mov
pop
in
mov
xchg
enter
lock
cmpsl
add
ret
cmp
inc
push
nop
pop
pushf
decl
xor
xchg
push
je
imul
fs
stc
dec
inc
jo
cli
dec
adc
cmp
sbb
out
inc
cld
or
add
pop
lret
movsb
insl
and
decl
pop
addr16
mov
xor
pop
or
adc
sub
inc
jge
dec
add
add
mov
lock
nop
push
dec
lds
jae
ljmp
or
mov
repnz
add
xlat
xchg
les
cmp
mov
push
and
mov
adc
xor
jnp
mov
jg
pushl
ljmp
inc
lods
mov
jmp
popf
fsubl
jmp
std
mov
decl
movsb
jbe
sti
fwait
inc
daa
jns
addl
sbb
cmp
out
and
decl
arpl
xchg
mov
sbb
push
cmp
xchg
add
add
arpl
jmp
jl
cmp
je
fsts
aam
jne
add
pushf
fucomi
mov
mov
mov
popf
mov
mov
dec
adc
inc
jo
shlb
ljmp
je
nopl
push
inc
mov
add
imul
test
mov
push
inc
int
cmpsl
add
pushl
dec
fwait
aam
in
mov
pop
mov
inc
and
popf
dec
adc
cmpsb
pop
into
lcall
pushf
sbb
stc
mov
pop
push
push
add
icebp
addb
mov
add
xchg
add
inc
roll
mov
add
loopne
push
mov
call
and
pop
adcb
xchg
call
pop
sub
mov
ljmp
or
lds
add
mov
and
add
popa
aas
cmp
mov
add
cmp
mov
xchg
in
mov
into
in
pop
mov
ljmp
pop
or
sub
push
inc
cli
sub
je
mov
xchg
in
ja
clc
imul
mov
dec
in
and
mov
icebp
cmp
sub
repnz
mov
call
orl
sbb
add
pushl
ror
hlt
stos
and
push
jns
out
or
clc
aam
je
jg
incl
sub
gs
jl
test
cld
pop
in
std
sti
dec
and
add
mov
sub
jno
lock
clc
dec
mov
les
sbb
pushl
cmp
lcall
arpl
mov
aas
mov
cmp
jns
or
ds
or
fldpi
mov
icebp
lods
shlb
pushl
lods
adc
add
fisttps
mov
sti
adc
lret
xchg
in
decb
lcall
roll
ret
sbbl
test
mov
push
adc
jl
lcall
xchg
aas
pop
data16
loop
or
sbb
cmp
inc
push
mov
ret
jbe
pop
mov
cmp
jae
aaa
dec
mov
mov
out
lock
sbb
lock
int3
xchg
and
pop
sbb
ret
test
push
push
mov
in
rcll
je
fnstcw
popl
mov
adc
xorb
and
lcall
decl
and
imul
push
call
imul
push
xchg
lret
jb
call
cld
rorl
lahf
dec
add
mov
mov
sbb
add
mov
lods
sbb
clc
sbb
adc
int3
push
mov
push
ja
incl
mov
cltd
or
scas
mov
daa
test
dec
int3
xchg
test
lcall
push
shlb
pop
leave
lahf
dec
mov
adc
dec
add
xchg
dec
scas
lods
pop
push
in
decl
arpl
fcoms
fwait
push
xchg
aas
xor
or
mov
test
incl
jle
xor
jmp
push
ret
mov
add
fcomip
mov
stos
mov
cmpsb
push
gs
xchg
add
mov
or
lods
dec
push
out
mov
pusha
aad
test
push
adc
std
movsl
add
jnp
dec
jmp
push
imul
pop
or
xlat
call
jmp
inc
bound
lcall
shll
sub
jg
int3
shlb
dec
test
jns
pushf
and
pmuludq
sti
imul
mov
xor
add
imul
xor
pop
mov
pop
clc
negb
pop
or
mov
xchg
fcompl
int
pop
mov
mov
test
or
fdivl
insb
lock
fwait
or
jmp
mov
pushf
cmpsb
in
adc
ljmp
fsubr
mov
adc
shlb
mov
movsb
ljmp
cli
sub
rcr
pop
hlt
hlt
adc
inc
push
nop
xchg
call
movsl
push
ljmp
adc
adc
adc
test
and
mov
push
mov
cmp
filds
shrb
test
arpl
popf
push
std
adc
leave
mov
fcomip
jmp
sbbb
push
push
pushf
push
outsb
adc
repnz
mov
mov
push
jnp
adc
push
jg
mov
jne
lods
xchg
adc
xor
pop
or
outsl
mov
push
stos
dec
lahf
jae
call
cltd
outsb
adc
movsb
pop
or
dec
call
pushf
or
or
pop
or
mov
push
mov
jg
les
shl
lea
push
in
sar
ja
fdivl
arpl
xor
decl
add
push
fnsave
mov
or
xchg
jb
inc
stos
xor
and
push
jp
shll
push
subl
pop
inc
sub
sbb
inc
out
dec
sbb
lds
xor
dec
adc
das
cmp
push
mull
outsb
push
inc
push
add
sbb
sbb
mov
cmpsl
mull
add
and
sub
cmp
xor
das
or
xchg
ljmp
jne
insl
test
sub
lret
fildl
push
add
insb
idivl
movl
xor
inc
fisttpll
adc
lock
inc
and
ja
ljmp
lahf
out
mov
sub
and
xor
mov
jmp
mov
pop
add
cmpsb
repnz
sbb
fnsave
jmp
rolb
daa
inc
jg
decb
mov
les
lea
jbe
pushf
test
pop
inc
adc
sbb
decl
cmp
sti
and
add
pop
push
data16
push
or
enter
decl
movsl
mov
mov
arpl
test
inc
outsb
cmpsl
xchg
and
ret
mov
and
call
test
nop
or
and
dec
cmpsb
cmp
cmpsl
scas
bound
mov
insl
sub
call
enter
ss
or
outsb
pop
clc
test
or
pop
notb
and
sub
jmp
push
mov
mov
mov
pop
pushf
inc
sbb
sbb
mov
xchg
inc
mov
lcall
or
daa
rcrl
mov
aad
pop
dec
xor
push
sub
lcall
stos
jmp
xchg
pop
or
inc
in
mov
add
repz
sbb
adc
bound
and
xchg
pop
aas
inc
ret
dec
lret
xchg
cmpsb
in
bt
mov
add
and
test
fucomi
cmp
pop
jbe
xor
add
aaa
mov
ficoml
sarl
cmp
and
lea
sarb
pushl
shr
or
xchg
push
mov
or
jg
adc
enter
inc
test
in
mov
outsb
in
cmp
test
lods
push
or
ljmp
mov
xor
fistpll
pop
dec
ret
sub
loopne
xchg
push
sbb
pop
mov
jae
fistps
add
cmp
add
cld
cmp
push
shlb
mov
xor
pusha
nop
pop
in
mov
aas
push
push
jg
pop
or
xor
mov
push
xchg
pop
or
sar
js
adc
lahf
insl
out
call
rolb
mov
dec
lea
mov
inc
sarl
jae
mov
stc
fsubp
pop
mov
subb
add
and
lock
sbb
int
gs
xor
sarl
ljmp
cli
nop
roll
popf
push
fldl
clc
cmp
xchg
push
cmp
into
test
lcall
daa
adc
xor
mov
in
mov
xor
push
cs
push
xor
sub
mov
icebp
mov
sub
xor
add
sub
call
ret
ds
roll
add
enter
shl
stos
sbb
movsl
pop
imul
nop
repnz
fisttpl
dec
push
cmp
adc
ja
mov
mov
cmpb
lods
test
decl
inc
cltd
and
xchg
add
lock
adcl
outsb
stc
jb
arpl
dec
sbb
decl
inc
jb
dec
stos
jo
ds
mov
cmp
fadds
cmp
movsl
lods
lods
loopne
in
xor
arpl
push
cmpsl
or
mov
aas
movl
lea
inc
mov
mov
lcall
sbb
dec
mov
cmp
jge
mov
adc
and
mov
and
ljmp
popa
inc
loope
int3
mov
js
or
sbb
ja
hlt
jmp
das
xchg
shrl
cmp
es
incl
mov
test
pop
insl
dec
je
lret
pop
or
xchg
cmp
xchg
filds
sub
sarb
mov
movsb
mov
gs
stos
cmc
in
adc
dec
aam
cmp
dec
loope
xchg
jg
adc
fisttps
repz
subb
out
lods
push
sub
das
push
fwait
push
clc
in
out
xchg
mov
xor
add
lods
xor
test
inc
add
insb
incb
xchg
inc
nop
push
xchg
cli
xor
pushf
push
aaa
pop
fdivrl
aas
mov
aas
and
icebp
push
into
es
push
pop
xchg
daa
pushf
add
sub
jmp
xor
push
sbb
mov
and
mov
mov
int3
daa
lods
inc
test
inc
mov
sbb
or
xchg
negb
je
cli
decl
jae
jno
xor
jne
add
xchg
nop
cmc
lds
mov
pop
dec
sub
xor
ja
jne
lret
and
jb
ja
cli
or
outsl
pop
movsb
mov
push
sbb
loop
movsb
cli
mov
mov
cwtl
js
sbb
adc
popf
jecxz
sub
sbb
push
fsts
mov
lods
nop
ja
and
xchg
stos
fs
mov
add
clc
or
loop
push
in
jecxz
shrb
test
sbb
add
into
or
add
mov
cld
add
decl
pop
push
rcrb
xor
adc
push
push
xor
loop
jmp
push
decl
sub
jl
fiadds
xchg
pop
mov
xchg
les
fsubrp
cmp
add
add
or
testl
dec
nop
cli
push
arpl
push
scas
cmp
jbe
bound
scas
add
jl
fcomip
jmp
inc
inc
push
call
dec
test
cmp
xor
xchg
adc
incl
adc
mov
adc
repz
mov
icebp
sbb
push
enter
lods
lods
pushf
ss
decl
xor
or
popl
pop
aas
add
adc
pop
and
inc
enter
add
mov
cld
xchg
cmpsb
xor
aaa
mov
call
in
pop
repz
mov
jns
leave
lods
dec
lods
arpl
shrl
lret
jl
popa
ljmp
sub
sbb
and
adc
leave
test
fsts
sub
ljmp
push
xor
push
jo
stos
xchg
loope
adc
scas
inc
pop
lods
leave
and
lods
inc
lcall
pop
ljmp
rcrl
in
out
mov
add
das
cmc
and
sar
or
pop
sti
inc
imul
cmc
xchg
mov
push
add
mov
jnp
ljmp
test
aam
lea
repnz
add
push
push
mov
int3
sbb
ljmp
mov
int3
dec
cmp
and
mov
loop
mov
ficoml
jnp
adc
pushl
jmp
sub
jmp
push
lret
push
or
sbb
loope
pusha
xchg
xchg
xchg
push
jg
cmp
cltd
or
add
ret
or
sbb
mov
sub
add
lock
pushl
jne
iret
or
mov
push
in
and
pop
jecxz
inc
lea
jg
insl
call
xor
sbb
imul
sbb
popf
lcall
pushl
daa
adc
dec
inc
loope
add
push
inc
call
icebp
adc
gs
pop
jg
lcall
xchg
aad
sub
pop
insl
inc
mov
sarb
mov
push
sbb
les
mov
call
imul
add
and
pop
das
sti
ret
add
leave
lcall
dec
in
xor
pushf
lods
or
mov
inc
cltd
or
sbb
out
sbbl
mov
decl
cld
mov
cmp
adc
cmp
add
js
cltd
cmp
push
xor
jnp
in
call
insb
push
shrb
cs
enter
ljmp
add
xor
cmpsl
test
aaa
call
push
ret
xchg
mov
adc
jnp
cmp
sub
mov
dec
cmc
jmp
cld
pop
dec
sbb
push
jo
ss
mov
test
jae
cmp
rcrl
jb
push
jbe
jg
add
sbb
or
mov
lea
sub
decb
ud0
call
and
mov
pusha
test
mov
xchg
lods
mov
inc
sbbb
jg
xor
bound
loopne
pop
test
or
and
ljmp
rcrl
mov
loope
jno
sbb
cwtl
pop
pop
div
pop
jno
mov
sub
fistpll
xchg
scas
gs
jmp
lods
lods
movb
pop
lret
and
lods
pushl
push
call
push
popf
out
push
das
pop
pusha
repnz
lods
inc
aaa
adc
adc
jmp
sub
inc
push
rorl
sbb
jo
psllw
fsubrs
and
push
jg
cmp
test
stc
decl
pop
addr16
or
xchg
mov
inc
or
in
sbb
fwait
push
inc
mov
push
test
imull
push
faddl
jge
push
ret
fdivs
movd
decl
dec
mov
mov
iret
aaa
bound
and
pop
mov
and
xor
andb
mov
mov
cmp
inc
scas
pop
xchg
push
and
mov
add
cmp
dec
addb
lcall
push
loope
adc
cmpsl
add
mov
add
pop
add
pop
pop
out
inc
and
lcall
adc
cmp
pusha
dec
push
lods
jbe
ret
ljmp
or
and
pop
ret
push
pop
leave
jne
scas
pushf
jle
repnz
incl
inc
stos
jmp
fs
dec
xchg
inc
dec
movsb
mov
sub
add
fnsave
cmp
or
out
adc
mov
jo
mov
xchg
call
mov
xchg
or
rolb
mov
xor
xchg
cmp
mov
decl
jne
dec
nop
sbbl
loope
ficompl
mov
dec
push
popa
dec
pusha
rclb
lods
aad
cmp
or
adc
cmp
and
mov
jne
push
ljmp
call
sub
xchg
lock
pop
nop
sbb
xor
incl
enter
imul
and
clc
mov
decl
cmp
jae
leave
push
push
leave
push
and
sbb
out
lcall
xchg
ss
cmp
inc
fwait
icebp
inc
insb
syscall
add
sbb
sbb
lea
xchg
out
clc
jmp
test
or
daa
mov
pop
out
dec
cmp
cld
ja
add
xchg
out
or
mov
push
popf
test
addl
sbb
or
pop
into
call
add
pop
pop
test
orl
xor
push
xchg
mov
cmc
inc
mov
add
decl
aad
daa
jbe
or
insb
dec
add
bound
sub
xchg
je
leave
gs
movsl
lea
add
decl
arpl
loop
lret
pop
das
adc
sti
and
push
mov
je
daa
and
decl
fldenv
push
pop
in
push
inc
lret
add
add
and
enter
jmp
push
fstl
pop
push
aas
fwait
dec
mov
and
popa
fbld
arpl
adcb
pop
stos
and
inc
int
fistpll
and
add
mov
jb
or
sub
push
cmp
pop
jbe
jg
clc
push
sbbl
jp
adc
mov
fs
rorl
sbb
push
dec
push
inc
inc
inc
mov
mov
es
dec
jg
aad
in
xchg
push
scas
fs
fwait
es
ljmp
mov
es
or
add
cmp
in
jge
xor
mov
orl
push
adc
movsb
stc
ljmp
outsl
push
cmp
adc
mov
cltd
popa
jge
push
xchg
lds
push
mov
jl
das
cli
outsl
clc
idiv
adc
jge
jb
gs
leave
shlb
ret
fcomip
in
addr16
mov
cmp
xchg
lds
dec
or
mov
xchg
push
xor
call
inc
fsubrl
jne
push
or
jle
pop
sub
sahf
decl
and
stos
push
sbb
aas
mov
in
flds
mov
pushf
dec
mov
test
push
mov
repz
sbb
das
rcrb
mov
int
push
in
push
outsl
ret
in
pushf
mov
enter
cmp
fstpt
decl
xor
add
cwtl
in
fdivrs
mov
sbb
and
mov
inc
shlb
push
ljmp
pop
and
lods
shr
rolb
or
sub
in
ja
test
rolb
pop
sbb
sbb
or
outsb
sub
dec
decl
loopne
and
repz
jmp
push
inc
mov
jne
mov
inc
mov
mov
xor
call
mov
int
cmp
nop
push
es
jns
cmp
dec
pop
cmp
or
mov
movsb
or
ficoms
imul
decl
push
xor
mov
push
push
jb
adc
leave
js
stc
shll
cltd
cmp
ret
fistpll
ss
pop
hlt
xchg
mov
add
adc
and
mov
decl
sti
mov
push
adcb
and
xchg
add
adc
mov
pop
push
jbe
or
js
add
lods
push
push
jmp
push
add
out
into
dec
inc
lock
mov
call
pop
push
add
incb
dec
aad
subb
xchg
add
call
xchg
lds
add
cmp
xor
pop
mov
add
ja
xor
add
ljmp
mov
loopne
jb
mov
sbb
test
loopne
popl
popa
fisubs
lret
lods
nop
cmp
mov
jb
and
jno
pusha
hlt
sub
lcall
dec
inc
pop
nop
jae
loop
int3
call
push
in
or
sbb
fildll
add
loopne
mov
mov
cmp
fbld
pop
xorb
inc
or
cs
movsb
ret
or
pop
sub
jecxz
lods
dec
pusha
add
sarb
aad
adc
insl
inc
lcall
pop
push
mov
loop
or
jmp
cli
jnp
push
jne
cltd
cmpsb
adcb
rolb
out
or
je
sbb
orb
cs
mov
adc
es
xor
idiv
jmp
mov
xor
int3
xchg
pop
ja
addl
adc
jle
dec
mov
jge
or
mov
or
and
loope
mov
imul
jo
es
fcomip
ljmp
lods
sub
repz
add
cmp
inc
pushf
fcomp
xchg
inc
sahf
or
lret
mov
test
enter
xchg
xor
test
or
cltd
inc
push
push
cmpsb
shll
xor
int
cmpsl
lods
push
aam
mov
xorl
dec
sti
ljmp
and
pushw
sbb
lcall
pop
sbbl
ss
mov
pushl
xchg
mov
scas
jne
and
rcll
or
dec
xchg
lods
out
mov
sub
rcrl
or
stos
imul
or
pushl
push
mov
cmpsl
sub
aad
incl
add
pushl
call
clc
inc
es
lock
mov
addb
jno
and
pop
lcall
push
rorl
enter
dec
xor
xchg
or
jb
int3
lds
decl
inc
and
inc
pop
sub
inc
sub
faddl
push
rcrb
aad
or
lcall
mov
mov
aaa
jo
and
ss
adc
inc
sub
leave
outsl
jne
ret
pushl
dec
ficomps
pop
scas
loope
sbb
hlt
cli
ja
inc
sbb
iret
ljmp
lock
imul
dec
outsb
xor
inc
std
push
push
ret
or
jg
cmpsb
clc
cmp
out
cltd
adc
xchg
cmp
lods
add
imul
test
push
sbb
nop
pop
jb
cli
add
inc
jo
popa
loope
push
dec
jns
xor
pop
push
and
xchg
mov
movsb
pop
xor
scas
ja
leave
cli
call
inc
xchg
or
push
or
popa
jp
inc
imul
add
loope
adc
xchg
cmp
push
sbb
or
mov
addb
fs
or
adc
xor
add
or
sub
inc
dec
sbb
or
mov
cmpsb
loope
nop
leave
xchg
mov
daa
pop
enter
inc
in
mov
pop
push
adc
aam
aaa
jno
pusha
pop
xor
popa
and
outsl
jns
add
pushl
lcall
mov
filds
adcl
stos
sar
rcrl
ret
add
add
xchg
pushf
push
lret
sbb
inc
sbb
sbb
nop
adc
decl
adc
test
aam
fs
or
pop
push
lahf
dec
mov
and
add
lds
ret
out
xor
sbb
pusha
sarb
decl
test
in
pop
roll
cmp
mov
or
decl
adc
push
rol
push
push
jns
iret
adc
outsb
add
xlat
add
loop
mov
lods
push
inc
add
out
popf
sbb
cmc
mov
enter
scas
in
stc
jae
jbe
cmc
imul
test
jmp
in
nop
pusha
repz
jo
cmp
imul
push
pushl
mov
xchg
lea
adc
xorb
mov
jb
in
and
orl
cld
incl
ret
fwait
aas
push
cmpsl
dec
pop
jo
mov
mov
push
mov
pop
sub
add
or
ljmp
hlt
cmp
adc
xchg
int
pop
inc
push
lods
test
mov
aas
adc
and
mov
cmp
in
dec
mov
loopne
adc
cmp
or
cmp
mov
dec
mov
push
mov
sub
pop
push
sub
clc
mov
jb
mov
adc
ljmp
inc
jnp
push
xor
ja
ficompl
pop
lret
pop
repnz
in
pop
pop
ret
lods
incl
inc
shlb
loop
adc
stos
fs
jmp
push
mov
pop
ret
and
jmp
adc
push
sbb
jnp
add
sti
sbb
xchg
add
insl
cmp
cmpsl
leave
add
and
lahf
inc
xor
or
sbb
faddl
pop
test
ja
decl
sahf
stc
scas
xor
lret
push
dec
lret
lcall
dec
xchg
add
inc
repnz
call
xchg
adc
xchg
ret
xor
xchg
push
in
bound
dec
lods
lcall
push
push
ja
sbb
pop
ret
pushl
sub
push
dec
loop
bound
adc
inc
and
dec
add
xorb
or
decl
icebp
arpl
insb
or
push
jge
das
clc
or
or
ds
aaa
lea
andb
xor
push
andb
je
mov
leave
push
ret
arpl
pop
icebp
incl
push
mov
pop
cld
inc
adc
push
repz
mov
orl
mov
ljmp
je
movsb
push
pop
outsb
jo
xchg
push
nop
xchg
inc
add
add
sub
sarl
push
dec
push
ds
xchg
dec
addl
pushf
mov
out
mov
aam
mov
pop
dec
push
mov
add
or
mov
push
call
mov
scas
cli
or
adc
aam
push
sbb
fwait
dec
sarb
add
push
dec
repnz
lock
or
inc
ds
hlt
xchg
dec
jp
or
jg
jb,pt
dec
inc
mov
hlt
loope
inc
dec
lcall
inc
push
inc
cld
push
pop
popf
pushf
and
mov
lahf
or
test
push
repz
nop
add
sti
dec
int
sbb
inc
test
xor
fildll
mov
xor
mov
ljmp
and
push
mov
adc
add
insl
in
repz
loopne
ret
rolb
decl
fistpl
pop
repz
movsb
mov
ds
sbbb
xchg
nop
shrl
clc
adc
jg
lock
xchg
add
mov
push
pushf
inc
push
mov
decl
fs
loopne
or
outsl
roll
lods
ljmp
sbb
and
jnp
fildl
mov
mov
nop
inc
or
cli
mov
jns
outsl
shlb
pop
ret
xor
sahf
pop
push
ss
orb
sub
sub
jge
dec
fstpl
and
add
dec
bound
add
in
mov
orl
inc
sbb
xor
mov
sub
xchg
or
xchg
sbb
sbb
or
push
data16
test
icebp
push
and
cmp
or
mov
inc
cmp
or
shl
mov
or
insb
jg
sbb
push
dec
repz
popf
in
fadds
cli
or
adc
mov
stos
mov
out
sub
push
push
int
dec
dec
jge
incl
scas
mov
daa
movsl
sub
fs
mov
adc
and
int3
clc
out
dec
inc
mov
test
in
add
mov
imul
test
sar
out
lock
xor
adc
mov
aam
in
inc
dec
daa
insb
cs
cld
call
decl
adc
andl
cmp
pop
or
mov
dec
fsts
dec
pop
mov
sbb
push
mov
sbb
mov
add
cmpsb
pop
dec
and
push
in
daa
inc
daa
outsb
or
decl
push
xchg
push
jmp
aas
movsb
fsubs
scas
inc
cmp
xchg
xchg
decl
stos
adc
push
sub
xor
add
dec
ret
decl
loope
and
std
mov
enter
cs
mov
cmpb
xor
mov
inc
xor
push
std
sahf
movsl
call
jae
xchg
cmp
add
pop
cs
push
aad
jmp
xor
pop
repnz
push
push
out
xor
aas
inc
or
fdivr
jno
dec
fistpll
push
adc
std
inc
or
nop
out
enter
add
fisubrs
fdiv
lea
int
adcl
insb
lods
cld
std
dec
lods
add
outsl
int
leave
adc
nop
add
pushf
daa
xchg
dec
xor
and
fiaddl
decl
clc
adc
outsb
pop
aad
clc
test
lea
or
das
arpl
push
add
adc
outsl
rcrb
das
sbb
or
jmp
ret
in
adc
je
inc
decl
rcrb
int
lcall
sub
in
call
ror
popf
or
addl
or
or
push
aaa
dec
adc
ret
lcall
mov
bound
or
mov
sarb
xchg
in
fnstenv
lods
lahf
inc
cli
decl
adc
inc
mov
fwait
mov
and
inc
cmovle
call
adc
dec
sbb
cmp
mov
mov
and
cltd
pop
out
clc
pushl
sub
ljmp
pop
lock
add
int
push
mov
cmpsl
mov
hlt
mov
xchg
gs
mov
aas
testl
mov
call
mov
rcll
rclb
mov
test
pop
and
addr16
das
cli
jg
lcall
fmull
lret
jl
es
das
adc
add
xchg
mov
call
mov
sub
mov
adc
es
cmp
adc
imul
mov
push
jp
dec
insb
add
std
xchg
inc
out
mov
loopne
es
lock
and
cmpsl
arpl
adcl
divl
xchg
cltd
pusha
ficomps
mov
loop
movsb
fists
cmp
sub
mov
bound
ret
call
or
xchg
mov
mov
imul
inc
mov
xor
dec
mov
cld
adc
in
adc
mov
in
jb
add
andl
dec
loopne
sbb
ss
rolb
fdivrs
sbb
pop
mov
imul
xchg
pushl
sub
jae
es
int
xlat
scas
and
dec
es
inc
test
ljmp
dec
sahf
mov
popa
or
sbb
ljmp
or
inc
dec
jl
call
dec
add
add
cmp
xchg
ljmp
cli
jl
lea
jl
stc
inc
sub
and
movsb
lock
clc
ljmp
xor
push
cld
int
mov
jne
mov
stos
and
ljmp
sar
loope
fcmovnu
pop
pop
call
xchg
popa
adc
ljmp
movsl
mov
mov
add
mov
rclb
pop
imul
add
pop
test
sbb
xchg
and
mov
ja
add
movsb
incb
dec
cmp
ljmp
aaa
mov
sub
dec
inc
subl
arpl
jle
lods
or
adc
in
xchg
dec
adc
cltd
pop
and
ret
cmpsb
dec
sbb
and
roll
mov
pop
mov
lcall
or
aam
lds
sbb
jle
adc
or
aaa
mov
out
decl
pusha
sbb
and
xlat
jae
pusha
add
sar
sub
push
adc
or
dec
cmpsb
lcall
mov
cmpb
push
nop
mov
hlt
sbb
xchg
mov
dec
movsb
inc
push
negb
mov
sub
orl
mov
movsl
mov
lcall
es
in
or
xchg
rolb
std
sub
shrb
inc
call
lret
popa
push
pop
das
sar
imul
cmc
mov
and
push
nop
inc
pop
and
and
incl
push
and
loope
clc
lock
dec
jns
sub
xchg
fld
subl
inc
adcl
and
sub
pop
test
add
insb
xlat
subl
pop
popa
add
mov
decl
sub
sub
in
rolb
sbb
inc
idiv
dec
mov
push
lds
das
push
mov
inc
orb
dec
adc
sub
or
jno
lea
dec
aaa
addb
fdivrl
cmp
leave
mov
xor
nop
imul
rclb
cs
adc
mov
push
lcall
rclb
sbb
xor
and
pushl
insl
lret
std
pusha
enter
loopne
fcoms
add
add
pop
mov
push
roll
and
jo
mov
push
and
adcb
jo
pop
movb
push
dec
jg
test
mov
and
orb
xchg
pop
mov
add
sti
push
andb
outsb
dec
dec
stos
test
push
popa
push
sbb
mov
jg
nop
idiv
fisttpl
hlt
sub
adc
addl
and
push
xchg
xor
loope
decl
xor
shlb
pop
enter
sub
xor
xchg
jb
jmp
cmc
or
aam
test
outsb
mov
imul
jecxz
movsl
out
xor
sub
mov
push
jo
lcall
sbb
dec
adc
sbb
decl
je
mov
fcoms
inc
scas
add
ret
fstps
nop
lret
aam
clc
stos
push
mov
sbbl
sbb
adc
test
xchg
vmwrite
mov
shll
decl
enter
sub
cs
in
inc
sub
push
inc
int3
xchg
mov
and
or
push
adc
pop
jnp
xchg
call
lods
and
xchg
xor
pop
mov
nop
dec
sub
dec
jg
push
cmp
pushl
jmp
movsl
lods
inc
rorb
stc
adc
mov
push
mov
pushl
cld
xor
leave
sub
dec
dec
dec
stos
pop
xchg
sbb
pop
inc
gs
mov
ljmp
iret
ret
into
lea
adc
mov
aaa
cmc
push
xchg
pop
and
lea
call
decl
outsb
push
jbe
xchg
xchg
pop
enter
incb
mov
cmp
in
lock
adc
mov
cwtl
mov
popf
adc
insb
popf
add
inc
mov
add
xchg
ljmp
bound
add
add
or
sub
xchg
dec
sbb
adc
fcomp
push
mov
sbbl
daa
decl
push
sbb
xchg
int
cld
mov
mov
stos
mov
jge
add
lcall
adc
outsl
inc
sbb
mov
sbb
dec
int3
das
xchg
sub
lods
push
pop
iret
mov
mov
iret
gs
imull
pop
mov
test
data16
push
cmp
movsl
out
pop
add
int3
iret
addl
scas
pop
addb
mov
jg
imul
inc
loop
das
mov
ljmp
repnz
movsl
add
mov
aam
inc
inc
push
and
movsl
enter
sbb
decl
push
js
popf
pop
push
nop
jnp
xchg
xor
popf
and
jmp
mov
or
movsl
lahf
mov
mov
fdiv
cmpsb
xor
in
jnp
into
sub
jmp
jo
xor
jmp
dec
fdivr
xchg
xchg
hlt
inc
mov
insb
push
lcall
lds
mov
or
lods
xchg
pop
lods
sub
aam
fcompl
popf
inc
pop
aaa
xchg
xchg
fcomip
dec
aam
push
add
repnz
data16
dec
rcll
cmp
sbb
jmp
pop
mov
fistl
popa
mov
pop
adc
adc
decl
filds
pop
jecxz
dec
out
cltd
nop
andl
shlb
je
outsl
pushw
cld
push
fs
adc
adc
sbb
sbb
push
jmp
rorb
push
testb
sub
enter
out
enter
mov
outsl
call
test
sub
mov
test
mov
jae
push
jg
add
inc
push
repnz
jns
cmp
sbb
scas
mov
or
mov
xchg
idiv
out
inc
lea
pop
adc
test
xchg
rolb
jno
ljmp
rcll
mov
aad
mov
fmull
jb
inc
ret
call
dec
push
adc
shrl
xor
fnsave
push
push
jg
lods
add
movsl
daa
leave
inc
pop
xor
xchg
push
call
and
jb
mov
xor
ljmp
xchg
cmp
or
insb
inc
inc
push
inc
push
pop
shrb
ljmp
jmp
sbb
adc
or
insl
xchg
mov
in
pop
mov
das
test
insl
cmp
jl
or
pusha
xchg
dec
lret
pop
mov
cmp
mov
pushf
clc
inc
push
pop
dec
jg
shrb
dec
sub
and
sbb
push
mov
dec
push
loopne
pop
xchg
mov
sub
or
push
movsb
xrelease
push
addr16
shlb
in
or
lahf
jb
fdivr
sub
sub
pop
es
call
and
and
mov
cmc
sbb
dec
test
ljmp
mov
test
mov
adc
shrl
and
imul
lock
mov
mov
inc
push
fcoml
je
jb
lcall
scas
test
aam
sub
fimuls
fdivp
imul
loopne
leave
sti
push
inc
xchg
mov
or
mov
adc
ja
out
in
jo
ret
jmp
mov
jp
or
jo
ret
imul
ljmp
ljmp
inc
aaa
imul
sub
push
sahf
ljmp
jo
add
incl
cli
iret
pop
push
xlat
cmp
cmp
push
push
lret
leave
incb
pop
pop
push
dec
test
ljmp
test
add
jns
in
mov
and
or
push
push
cld
adc
cld
mov
pusha
push
mov
or
and
dec
jae
add
push
inc
mov
decl
sub
sbb
and
test
push
dec
ret
mov
and
das
cld
adc
adc
xor
popa
out
lock
iret
xor
xor
ljmp
push
sbb
xchg
push
xor
icebp
or
lds
xor
nop
aas
and
cmp
mov
inc
xchg
test
mov
ljmp
sarb
mov
xor
ret
xchg
adc
cli
sbb
ljmp
jmp
fisttps
inc
push
and
or
sbb
jmp
cmp
dec
push
lahf
add
cmp
call
ljmp
mull
mov
or
lcall
mov
cmp
adc
and
enter
push
mov
xlat
sbb
pushf
rclb
push
or
mov
adc
mov
sbb
lea
out
je
imul
xchg
dec
nop
pop
fsubs
cld
inc
mov
xchg
aas
loopne
not
popa
sti
mov
jge
adc
pushl
sub
mov
and
and
lea
pusha
dec
sub
ljmp
sub
inc
movsb
ljmp
roll
cs
push
and
les
cwtl
in
jb
add
decl
xor
mov
test
xchg
or
pushf
shrb
cld
dec
jns
jb
sub
mov
jbe
adc
mov
add
xor
inc
pop
aas
adc
or
adc
and
or
xchg
and
xchg
inc
push
cwtl
int
aaa
insl
inc
or
xchg
enter
inc
pop
mov
xchg
add
inc
dec
dec
daa
and
or
shlb
sub
mov
xchg
adcl
add
ret
add
popa
je
cli
mov
mov
adc
nop
jg
and
pop
mov
cld
push
decl
mov
cmp
cld
xchg
out
mov
xor
daa
dec
push
and
jmp
es
sub
sub
mov
popa
and
jp
lcall
cld
push
int3
movsb
inc
fisttpll
rcrl
je
mov
push
in
out
fimull
ljmp
cs
std
femms
popa
sarb
push
fcoms
mov
mov
mov
mov
adc
rcrl
add
popf
rorb
push
lock
call
lret
xlat
cmp
or
fs
jmp
loope
jmp
pop
and
mov
les
enter
adc
cmp
pop
adc
outsl
mov
mov
xor
repz
xchg
lock
mov
sbb
dec
ljmp
jg
mov
idiv
jbe
rclb
lods
push
or
jl
inc
pop
sarl
stc
inc
mov
and
add
enter
dec
or
xor
push
pop
sub
ljmp
out
jle
fs
add
ds
inc
mov
lcall
xchg
int3
pop
stos
inc
test
jmp
dec
sbb
push
add
pop
or
adc
shl
or
pop
lcall
pop
xorl
inc
lea
mov
pop
or
dec
call
add
push
clc
mov
push
dec
inc
push
adc
push
pop
or
inc
pop
das
sar
mov
jge
inc
xor
push
and
mov
sar
jb
mov
xchg
push
movsb
dec
push
add
test
clc
das
nop
add
decl
cmpsb
cmp
call
lock
jns
inc
push
ljmp
loop
call
in
movsl
pop
and
sbb
mov
lret
pop
push
shrb
adc
jle
repz
and
adc
popa
nop
or
and
pop
xchg
ds
fildl
nop
sbb
cmp
push
xor
pop
add
mov
arpl
fadd
out
hlt
sahf
or
xorb
add
dec
push
or
jg
mov
cs
xor
fdiv
cmp
mov
xlat
push
push
push
inc
dec
fidivs
and
or
imul
ljmp
and
lcall
nop
cltd
test
repz
push
imul
sub
shll
dec
xchg
dec
orl
mov
adc
mov
and
pop
les
push
or
xchg
and
add
aas
xor
xor
cmpl
rorb
or
leave
lods
jg
decl
test
jmp
adc
pusha
lea
pop
xchg
jl
inc
icebp
faddl
mov
push
dec
fwait
xchg
push
xor
enter
imul
push
sub
dec
fisttps
adc
pop
push
and
or
push
test
lcall
xor
in
fsubrl
adc
xor
leave
clc
xchg
in
xor
and
pushl
adc
mov
adc
fisubs
dec
mov
adc
shlb
lcall
xchg
xor
test
rcr
dec
xor
lds
jmp
mov
and
mov
jne
movsl
and
jge
std
dec
and
aas
and
mov
sub
and
and
sub
sub
xor
divb
jle
push
mov
pop
push
pushl
adc
cmp
xor
leave
shlb
xchg
cmpl
push
pop
push
cmp
push
xor
sub
xchg
jo
jo
or
lcall
xor
or
inc
ds
sub
lret
adc
or
cmp
test
jge
adc
clc
ljmp
jle
push
xlat
add
fldt
push
mov
xchg
aaa
mov
ljmp
ljmp
lcall
add
push
stc
lea
inc
test
mov
ja
lcall
test
adc
mov
incl
add
push
cltd
mov
subl
lcall
sub
jl,pt
xor
dec
mov
sub
decl
or
xchg
inc
or
out
loopne
cmp
pop
lahf
mov
pop
loope
outsl
aaa
sub
xor
jb
lock
push
add
mov
cmp
lds
ror
jp
ljmp
sbb
test
add
sahf
jg
adc
in
ret
jg
mov
adc
mov
adc
int3
lret
xchg
sbb
rolb
or
testl
daa
shrb
lcall
leave
adc
sti
leave
sbb
mov
and
andb
mov
bound
adc
daa
push
es
loopne
and
xorl
cmp
in
dec
xorl
decl
cld
mov
adc
xor
and
fldl
jmp
cmp
adcl
push
lret
test
push
enter
and
ret
clc
add
enter
or
mov
push
gs
mov
pop
incl
addl
lret
dec
call
insb
sbb
add
add
ss
xor
repz
mov
cwtl
xrelease
stos
adc
jl
add
inc
and
mov
lods
lcall
or
sub
xor
jg
xor
movsl
and
mov
jno
repnz
or
test
ss
in
xlat
xchg
je
xchg
out
aaa
xchg
inc
sub
orl
pop
fucomp
int3
shlb
jmp
lock
xchg
scas
mov
ljmp
repz
insb
pop
jb
into
jl
movsb
daa
incl
or
cld
mov
sbb
jb
aam
inc
jne
repz
fcmovnu
cmc
fcmove
mov
adc
xor
nop
bound
xlat
add
imul
call
js
or
add
lods
pop
push
jne
sti
add
jmp
pop
adc
std
lods
incl
sub
daa
pop
pop
push
jecxz
adcb
imul
inc
shlb
popa
call
sbb
ror
and
imul
adc
loop
jnp
jg
iret
sbb
movsb
sbb
dec
sbb
push
and
pop
mov
ficomps
shlb
cmp
lcall
jns
xchg
dec
mov
adc
jae
or
mov
and
inc
xchg
xchg
sbb
ljmp
mov
pop
add
add
mov
sbb
adc
fsubrl
push
inc
xchg
push
outsl
incl
mov
mov
das
iret
push
repz
mov
push
or
xchg
jo
jno
pushl
cmp
repz
xchg
ds
push
mov
pushl
mov
rcrl
les
pop
stos
hlt
add
xlat
cmp
mov
mov
rorb
inc
aad
cld
mov
add
add
pushl
addb
and
or
mov
aad
imul
cld
jmp
sbb
mov
mov
sub
incl
aas
repnz
or
movsb
lock
in
add
es
cmp
lret
dec
sub
jl
sub
shlb
adc
or
push
es
out
add
mov
pop
adcb
repz
mov
sar
ljmp
mov
sbb
push
xchg
ret
int
call
negl
lods
xchg
xchg
jo
push
xor
xchg
lods
mov
fnstenv
loope
cwtl
push
xchg
iret
jl
fcmovnb
arpl
pop
cwtl
iret
add
mov
cmp
push
stos
push
adc
inc
mov
add
incl
jle
push
xchg
divb
outsl
fadds
dec
pop
lds
imul
mov
jb
decl
sbb
nop
lret
fcomps
pop
dec
cli
inc
cmp
push
push
or
sbb
push
add
adcl
nop
fwait
mov
jge
push
or
je
pop
sti
shrl
sbb
dec
cltd
and
aad
je
jo
ja
fisubrl
sbb
hlt
inc
insb
pop
cmpsl
mov
ljmp
cs
push
sub
mov
add
push
mov
js
add
stos
incl
pop
push
mov
lea
adc
lcall
loopne
daa
lret
mov
in
cmp
cmc
fcmove
aam
cmpsb
jne
mov
cmpsb
inc
dec
add
mov
mov
setl
sarb
aad
cmp
cmp
jg
incl
sub
orl
dec
insb
mov
inc
xor
adc
push
xor
and
dec
in
bound
jno
cmc
inc
pop
xorb
dec
je
adc
lcall
push
xchg
mov
rorb
or
push
jne
cmp
push
call
and
cmp
mov
aad
nop
iret
movsw
sbb
lds
fst
push
xchg
decl
xor
int
xor
cmp
jl
call
orl
xlat
insl
dec
and
inc
pushf
push
frstor
dec
and
das
mov
ljmp
jmp
xchg
aad
ljmp
inc
mov
add
and
es
jg
or
mov
adc
xchg
pusha
cmp
ljmp
and
lods
sbb
cmp
xchg
pushf
or
vmovaps
jmp
psraw
insl
inc
and
add
aaa
push
inc
pop
xorb
lcall
call
xor
jg
dec
lcall
dec
push
cmp
add
push
jp
incl
lsl
jecxz
leave
data16
or
icebp
jmp
push
subb
cmp
ljmp
enter
push
nop
arpl
mov
movsl
insl
mov
clc
ljmp
sub
movsl
test
adc
cmp
inc
ljmp
xor
ret
push
std
dec
push
lods
and
movsb
cmp
push
jmp
lar
push
xor
mov
inc
jne
inc
mov
decl
outsb
sub
mov
cmp
enter
jge
icebp
inc
add
add
push
mov
cmp
stos
push
or
mov
dec
pop
or
dec
add
scas
cmp
insb
inc
ljmp
negb
dec
mov
popa
xchg
pop
cs
jmp
pop
sbb
cmp
lock
ljmp
mov
pop
call
lcall
adc
adc
test
shr
and
xor
mov
and
fdivrl
or
sar
scas
cli
lcall
push
and
or
stos
movsl
push
push
push
or
xchg
mov
jg
call
js
lods
push
mov
loop
or
in
cli
add
decl
je
ret
mov
jmp
rcr
mov
pop
inc
dec
sbb
jno
push
jg
add
mov
in
es
mov
xlat
dec
pushf
adc
mov
push
and
adc
push
mov
nop
aad
inc
cltd
sbb
ja
mov
sub
dec
int3
mov
int
sub
lea
test
cmp
push
nop
aad
decl
push
ror
mov
xchg
sub
cmp
push
fs
and
rclb
dec
push
add
bswap
add
pushl
je
push
pop
sub
pop
sub
cld
xor
aaa
in
mov
cmp
mov
xchg
add
dec
cs
and
xor
jns
popa
aam
mov
push
adcb
insl
add
enter
fldl
xor
ljmp
test
add
cmp
insb
fldt
push
jge
std
cmp
push
or
mov
mov
fists
pop
sbb
fldl
adc
inc
mov
rorb
or
inc
push
mov
scas
std
fstps
add
nop
mov
cmp
jne,pn
decl
mov
sbb
mov
cmp
mov
stos
or
cmpsb
call
ds
mov
fwait
jle
or
int
nop
data16
pusha
mov
xor
xchg
push
push
pop
pop
jmp
cmp
mov
sti
imul
inc
dec
inc
pop
push
fsubs
add
call
fstps
push
and
jb
add
xchg
lods
fcomip
push
fiaddl
ss
pop
movb
push
dec
dec
test
aaa
xor
cld
ljmp
jmp
lods
push
pop
lcall
jmp
push
push
imul
and
sbb
insb
decl
imul
and
pushf
pop
arpl
test
int3
std
add
inc
sbb
mov
lea
loopne
or
pop
lods
push
sbb
jnp
fcomip
outsl
cli
xchg
shll
xchg
pop
cwtl
data16
inc
jle
xor
adc
jp
addr16
sub
add
es
cmp
ljmp
push
mov
clc
dec
mov
dec
xor
inc
or
xor
xorb
dec
cmp
adc
aas
cmp
mov
mov
push
xchg
test
mov
xchg
jg
jo
dec
add
dec
xchg
divl
dec
icebp
xor
pop
add
dec
sub
jae
lcall
adc
cmp
or
addr16
into
jns
rorb
popa
mov
push
mov
mov
inc
ljmp
mov
sub
xchg
mov
jmp
filds
nop
push
lret
imul
jle
es
rorb
or
push
xor
loop
inc
push
aad
pop
lcall
adc
cmpsb
dec
rcll
mov
dec
push
adc
mov
or
fbld
or
jne
jmp
cmpsl
bound
pushl
bound
adc
add
jae
sahf
js
inc
scas
cwtl
mov
pop
sub
incl
insb
xor
lods
cmp
mov
lahf
cmpsb
cmp
repz
add
cmp
lcall
dec
ds
cmp
add
pop
mov
call
rcrl
jmp
mov
pop
dec
dec
dec
cmp
or
inc
adc
push
adc
les
jns
cmpsl
shl
les
mov
dec
pop
popf
je
outsb
jg
call
fnstsw
jae
jne
adc
jne
inc
test
xor
and
jg
bound
inc
sbb
inc
sbb
push
dec
sub
sub
cmp
lcall
sbb
cmp
and
ds
push
insb
ret
stos
jb
into
addl
push
rolb
mov
jp
adc
or
sub
aad
inc
loopne
xor
aad
inc
mulps
add
or
lcall
pop
test
lock
movsb
add
cmp
out
pop
fcoms
das
add
mov
incl
adcb
in
adc
inc
test
repnz
loope
push
decl
mov
mov
lods
xor
xor
fcomps
mov
add
cmp
add
jg
nop
dec
cmpsb
in
lods
cmp
dec
push
push
mov
dec
leave
dec
cs
pop
enter
xchg
pop
leave
sbbl
sbb
outsl
in
dec
orl
stos
pop
nop
xchg
inc
cmp
cmp
int
sbb
sbb
and
cmp
into
pushl
xchg
shll
pop
dec
inc
pop
fcmovnbe
daa
sti
bound
dec
mov
or
lods
lcall
ret
mov
lods
sub
sub
mov
add
jb
mov
xchg
or
and
jmp
cmp
sti
mov
pushl
cltd
pusha
insb
inc
rclb
sbb
xchg
inc
add
jb
xchg
decl
add
mov
xchg
shrl
hlt
and
push
enter
sbbl
jg
sbbb
ficompl
cmp
inc
sbb
dec
es
fcmovnu
mov
inc
cmp
fs
inc
fsubrs
int
orl
mov
sbb
cmp
mov
pop
push
incl
dec
push
ror
fmuls
jge
shl
mov
inc
jl
stc
decl
nop
clc
arpl
and
jp
jp
ficomps
call
call
add
pop
or
incl
movsb
mov
and
xchg
loope
cmpsb
pop
push
mov
clc
test
pop
data16
sbb
test
pushf
aad
sar
je
movsl
add
mov
lret
mov
jle
push
decl
sbbl
repnz
mov
adc
inc
mov
or
sbb
xchg
pushf
add
dec
mov
or
outsl
cli
pop
and
pop
add
decb
lock
sub
jg
bound
adc
pop
scas
inc
imulb
push
mov
sti
das
cli
call
sub
push
xchg
lea
icebp
icebp
or
mov
in
mov
sub
clc
int
decl
jge
jg
mov
or
subl
push
jnp
mov
fistpll
gs
ret
sar
out
addl
cld
push
and
pushl
loop
or
mov
push
in
outsb
jmp
xchg
insb
push
push
lods
jne
or
movsl
jg
push
push
popa
ss
lea
jg
or
or
or
mov
ljmp
ds
pop
adc
xor
hlt
xchg
out
and
in
jb
mov
lcallw
pop
push
in
clc
mov
or
in
cmp
xchg
or
das
insb
stos
dec
add
call
subl
mov
in
xchg
sub
and
or
and
ljmp
lods
or
or
push
xor
adc
js
jle
or
push
push
mov
jae
mov
cld
jae
pop
les
ja
pop
xor
pop
cmp
lock
decl
xchg
mov
add
mov
inc
pusha
mov
aad
decb
xor
xchg
fiadds
jo
mov
lea
mov
xor
shll
push
and
out
xchg
xorb
add
pop
imul
cmpb
popf
icebp
dec
adc
mov
testb
rclb
inc
sub
jmp
push
or
test
shl
movsb
into
mov
jmp
es
xor
rcll
out
incl
sub
add
mov
lods
mov
push
cmpsb
fiadds
test
pusha
dec
lcall
jecxz
stos
xor
jnp
dec
loope
xchg
mov
into
add
and
lds
and
fildl
call
in
sub
sub
sub
sbb
in
icebp
xor
sub
lods
fucomi
cli
pop
inc
mov
xorb
les
je
lahf
cmp
mov
lcall
inc
cmp
clc
jnp
push
decl
jge
lahf
int
out
aas
or
idiv
pushl
push
cmp
pop
mov
icebp
jno
pop
rcrl
and
add
in
jno
pop
or
inc
sbbl
fdivl
and
push
push
mov
sbb
call
or
cmp
dec
pop
fdivrp
jns
sbb
adc
mov
fisubrs
fsubp
jle
cli
jle
mov
loopne
add
jp
inc
fstpt
jb
dec
push
and
bound
les
push
and
jg
xchg
push
and
adc
push
or
arpl
and
dec
jle
xor
ljmp
pop
mov
and
xor
add
and
xchg
or
jb
ljmp
xchg
cmp
pop
and
or
fcoml
sti
jbe
push
stos
ljmp
pop
push
addr16
out
cmp
outsb
inc
adc
mov
pop
fiadds
rcrl
ja
cmp
out
jb
add
sub
jg
incl
pushf
or
add
sbb
pop
sbb
lret
sub
cmp
outsb
and
call
or
out
pop
popf
add
mov
ss
add
cld
and
ljmp
dec
and
pushl
mov
add
dec
add
int
add
and
inc
lods
jge
test
incl
enter
dec
fisubrl
adc
jg
jecxz
inc
and
mov
adc
mov
test
loopne
ljmp
cmp
aad
mov
hlt
fcmovnu
scas
pusha
xor
xor
scas
pop
lret
push
dec
rolb
jo
movsb
into
mov
add
loopne
or
sahf
adc
jns
or
loopne
mov
mov
shrb
call
fisttpll
jbe
sbb
lds
mov
mov
das
sar
inc
pop
or
inc
push
lcall
jne
imul
es
and
add
xchg
inc
xchg
pusha
lahf
cmp
sub
jmp
pop
iret
arpl
mov
xor
cld
in
fldl
xchg
push
inc
cmp
shlb
inc
sahf
inc
adc
insl
lcall
shlb
sub
dec
aam
movsb
enter
sbb
insl
pusha
and
icebp
std
das
mov
push
inc
incl
push
or
push
cmp
inc
repnz
fs
dec
push
pusha
inc
test
movsb
les
stos
decl
call
scas
enter
cmpsl
ss
rorb
push
shlb
fwait
add
inc
sbb
cmp
push
lcall
push
stc
pop
je
test
mov
dec
ljmp
xor
movsl
call
imul
add
decl
lods
adc
sub
jne
mov
jmp
inc
adc
sbb
lea
jecxz
mov
lcall
pop
adc
into
in
mov
sub
cwtl
sub
je
xchg
stc
mov
in
test
push
sub
pop
cmp
hlt
sub
mov
inc
sbb
mov
fs
mov
test
scas
inc
ds
test
scas
sub
add
or
dec
js
add
mov
cltd
xchg
push
sub
or
shlb
mov
mov
adcb
ficoml
incl
push
cltd
or
sub
sub
bound
pushf
in
pop
decl
jmp
pop
iret
loope
or
adc
addr16
loope
adc
ja
loope
add
pushl
xchg
jle
mov
inc
xrelease
pop
data16
in
and
sahf
mov
sti
popl
dec
ds
add
sub
add
mov
sbb
sub
clc
into
and
mov
decl
push
mov
xlat
and
mov
pop
hlt
xchg
adc
hlt
or
xor
scas
pushl
rcrb
cmp
sbb
fisubrs
dec
fidivs
inc
ss
jp
decl
nop
push
or
and
cmp
adc
iret
xor
stos
xchg
cmpl
test
cmp
mov
add
mov
icebp
ds
jns
dec
pop
mov
jmp
mov
push
xor
add
cmp
fcomip
decl
add
add
or
jl
nop
out
pop
stc
add
pushl
sbb
jle
xchg
test
xchg
push
enter
nop
addb
insl
ret
push
loope
addb
repz
movsb
or
ja
in
nop
add
add
mov
mov
icebp
mov
or
inc
add
cmp
mov
in
push
ja
push
push
test
pop
loope
xor
call
incl
outsl
adc
mov
cmp
aad
pop
sub
jmp
sub
adc
decl
clc
lret
lret
cmpsb
sbb
in
cmp
cmp
scas
xchg
dec
mov
lret
xor
cmpsb
ljmp
not
push
lods
mov
jmp
popl
add
sbb
je
in
ja
inc
adc
and
add
sbb
sbb
add
cld
dec
lock
cmpb
xchg
mov
mov
es
jp
fsts
sub
cmp
lods
jg
mov
test
fdivr
dec
dec
cmpsl
mov
or
add
ret
out
decl
ret
rcrl
inc
dec
cld
jb
cmp
mov
pop
clc
in
push
jmp
and
pop
pop
mov
push
enter
out
pop
jl
pushl
dec
dec
js
add
pop
adc
mov
iret
movsb
push
lret
xchg
or
loopne
jmp
fdivl
sbb
add
mov
sub
add
lods
pop
stc
lcall
data16
jmp
dec
icebp
mov
mov
add
and
xor
lds
xchg
adc
dec
dec
pop
push
into
dec
mov
inc
ljmp
call
repnz
xchg
pushf
inc
out
or
outsl
decl
xchg
xor
adc
mov
add
in
iret
and
cmc
fisttps
ficoml
es
cmp
or
repz
sbbb
lcall
fdivr
push
or
inc
and
shlb
sub
aad
lahf
in
dec
inc
dec
or
testb
leave
xchg
mov
add
lock
dec
and
adc
jbe
fwait
and
in
add
int3
push
dec
xchg
cld
mov
fdivrl
inc
xchg
lods
inc
cs
xchg
add
fdivrl
or
lods
push
cs
push
les
add
lock
out
leave
incb
add
or
xchg
loope
imul
or
cmovs
ljmp
push
dec
fiaddl
je
ja
lahf
push
push
jp
inc
daa
sbb
dec
sub
inc
add
mov
pushl
cli
mov
pop
lods
enter
addr16
loopne
mov
add
inc
and
rolb
push
sub
out
imul
ljmp
sub
les
icebp
scas
mov
pop
sti
es
fisttpl
mov
xor
jb
mov
push
mov
dec
mov
test
incl
inc
dec
xchg
repnz
cmpsl
or
pop
stc
daa
inc
cs
cmc
xor
sub
popf
lret
in
ljmp
pushf
icebp
push
mov
test
sub
repnz
inc
jp
or
pop
push
jmp
test
dec
sub
jle
lcall
jge
mov
arpl
ret
cwtl
mov
popf
stc
jo
xchg
dec
mov
lcall
lods
pop
sub
adc
mov
hlt
sub
lret
push
dec
test
push
sbb
dec
pop
pop
mov
adc
outsb
push
sbb
push
mov
xchg
mov
jnp
stc
mov
pop
sub
xchg
ds
stos
xchg
call
mov
mov
pop
js
mov
cmp
or
adc
or
and
ret
and
ljmp
mov
jo
xchg
add
push
push
ret
je
adc
pop
cmp
lcall
dec
cli
cmpb
insl
or
and
in
popa
inc
das
dec
sub
ljmp
lcall
mov
add
and
mov
andb
dec
add
ljmp
or
xor
xchg
jp
add
add
mov
out
or
push
push
xchg
ret
and
mov
cmp
add
in
ja
sbb
call
xlat
data16
sub
add
pushl
cmp
xor
cmp
sbb
js
push
sahf
pop
and
adc
push
xor
xor
fwait
popa
shr
adc
ja
mov
fwait
mov
push
push
or
xchg
sub
rolb
outsb
mov
mov
lret
les
pop
pop
jmp
xlat
cmpsb
lods
dec
fsubp
inc
push
sub
fcomip
and
outsl
dec
xchg
dec
sub
dec
sbb
stc
scas
mov
negl
and
cltd
cmp
jge
sbb
ljmp
int3
jg
jmp
fists
push
repnz
mov
cs
fdivr
cmp
in
cmp
xor
or
into
cwtl
out
or
cmp
mov
incl
mov
or
jmp
sbb
shl
push
adc
insl
jmp
cltd
add
mov
inc
add
add
in
jg
jecxz
mov
cmpb
sti
mov
stos
inc
mov
inc
data16
mov
loope
fwait
pop
push
loop
xor
xor
fwait
dec
jns
sub
lcall
or
mov
dec
mov
movsb
mov
cwtl
or
aaa
cmpsb
test
ret
sbb
rorb
xchg
pop
rorl
inc
push
stos
std
incl
mov
sbb
jle,pt
jno
dec
or
xlat
stc
push
push
lcall
rcl
xor
fstpt
arpl
xchg
inc
sbb
dec
lods
xchg
mov
adc
add
cld
cmp
adc
shrb
jg
lcall
in
inc
iret
add
out
mov
or
push
jg
push
add
js
add
decl
lea
sub
subb
pop
xor
iret
sbb
leave
adc
js
add
adc
push
popa
sub
and
push
adc
mov
in
sahf
or
fisttps
add
lods
and
add
in
push
dec
mov
push
mov
and
push
fistps
loopne
and
inc
subl
sbb
push
adc
in
mov
push
inc
rcll
bound
jecxz
or
and
addr16
scas
cwtl
push
or
or
lret
stos
cltd
inc
and
and
fsubrp
incl
ja
sub
xchg
pushf
in
mov
incb
jmp
jmp
xchg
push
xchg
call
mov
ficoml
hlt
test
ss
insl
fistpl
data16
push
ret
dec
mov
ljmp
lret
mov
dec
rolb
add
repnz
xor
cli
adc
xchg
fists
sbb
shll
mov
sbb
and
hlt
out
sub
and
or
adc
cmp
in
test
shr
lea
stos
aad
mov
or
push
test
adc
dec
sub
inc
add
cmp
jo
sub
or
in
cld
or
into
sub
or
outsb
inc
shrl
aam
sbb
cmp
adc
sbbl
gs
rcr
mov
jge
push
jp
in
sub
jg
add
mov
or
cmpsl
mov
or
decl
insl
xchg
push
rol
add
ficoml
aaa
ljmp
ljmp
test
xor
push
cmc
xor
mov
add
shlb
push
cli
inc
inc
insb
mov
out
movsl
dec
lcall
jg
inc
aaa
push
imul
xor
lcall
stos
and
mov
sub
rcrl
jnp
dec
pop
addl
lea
xchg
jmp
call
js
lcall
repnz
cwtl
jp
dec
push
scas
insb
cmp
mov
test
decl
sbb
inc
les
lret
fwait
lods
aad
jecxz
or
push
and
fwait
adc
fiaddl
mov
dec
inc
mov
gs
clc
mov
cld
hlt
clc
adc
mov
negb
add
test
xorl
add
mov
push
out
pop
loop
push
stos
adc
inc
test
jmp
loope
pop
pushl
sar
cmp
dec
test
fs
decl
or
insb
dec
or
shlb
clc
push
jge
dec
addr16
pop
inc
fldt
cmc
pushl
rcrb
pop
movsb
inc
arpl
or
or
in
xor
ljmp
mov
data16
imul
xchg
and
xor
cmp
jg
push
inc
sarb
std
push
clc
clc
push
lock
or
sti
add
sahf
fcmovnbe
add
pop
jns
push
pushl
xchg
jle
or
pop
addb
loop
add
adc
mov
rorl
jge
jl
push
faddl
ss
cmp
mov
dec
decl
push
movsb
jl
jle
jne
icebp
fisubs
int3
jnp
je
shrb
pop
enter
rolb
mov
cli
sbb
call
lcall
adc
mov
faddl
dec
iret
scas
mov
ror
shrl
jg
push
stc
icebp
mov
add
cmp
xor
lret
adc
push
xchg
pushf
dec
mov
stc
popa
add
push
je
dec
cwtl
sub
decl
rolb
inc
rorl
cwtl
cltd
fisttpll
in
jo
lock
call
incl
fsub
sub
xor
test
hlt
add
outsl
out
sub
push
cs
push
mov
adc
enter
inc
mov
and
adc
orl
incl
loope
cmp
js
mov
ljmp
sbb
mov
fisubl
xchg
add
push
mov
and
hlt
inc
xor
mov
mov
inc
imul
nop
dec
xchg
push
jg
das
cmpsb
push
les
mov
test
in
ljmp
pop
es
or
pop
push
roll
push
int
cmp
call
cmp
or
inc
xor
cmp
dec
bnd
fldt
xor
test
adc
enter
cmp
pop
inc
sub
inc
cld
call
popa
movsl
add
bound
sub
sub
dec
das
shrb
ret
fs
test
pop
rcll
sub
mov
ljmp
adc
aam
rol
pop
fstps
jge
pop
inc
add
fs
pop
stos
mov
ret
loop
or
xchg
ds
int
loope
mov
ljmp
adc
push
lods
jb
cltd
lea
fxch
cmp
add
movsl
inc
mov
popa
dec
sbb
lret
fcompl
call
mov
or
test
jo
push
jnp
xlat
xor
nop
mov
cmp
push
insl
dec
mov
jne
mov
jmp
push
mov
popa
jne
xchg
out
pop
icebp
imul
repnz
aas
cmp
into
arpl
sbb
xchg
sub
or
pop
push
ret
test
pop
inc
clc
call
sbb
push
inc
xor
popa
sbb
jne
push
arpl
ds
cmp
lcall
lock
mov
pop
adcl
lret
gs
adc
cmp
ljmp
sub
test
mov
pop
sbb
jns
jbe
cmp
add
add
add
imul
inc
cli
mov
cmp
ljmp
add
add
dec
je
and
mov
daa
stos
add
gs
dec
repnz
mov
dec
xor
pop
ret
add
xchg
cmp
mov
and
and
shlb
pop
cld
xchg
js
out
jb
test
clc
push
or
incl
lods
cmp
iret
jne
pusha
xchg
lods
inc
push
iret
enter
push
add
jne
push
sub
add
or
outsw
or
lods
cmp
sti
jmp
adc
or
aaa
adc
push
pop
jae
push
imul
sar
jg
jg
int3
jg
push
enter
dec
mov
sbbb
or
inc
adc
pushl
lock
jae
cmp
clc
cmp
incl
fs
pop
adc
pop
rorl
push
adc
mov
js
cmpsb
push
and
or
add
or
push
in
add
cmp
cmp
inc
add
push
pushf
pop
hlt
scas
xor
xor
sbb
pop
cmc
sub
pop
cmp
add
decb
movsl
sbb
sbb
sub
syscall
push
xchg
test
mov
xor
outsl
sbb
repz
jns
dec
ret
sbb
sub
add
incl
xor
pushf
add
int3
add
adc
xor
into
ss
pop
sub
jp
jg
adc
shl
lds
cltd
ja
ja
mov
test
sbb
mov
ja
adc
dec
lock
add
js
sbb
decl
les
hlt
mov
nop
or
adc
imul
and
sub
aas
and
and
dec
iret
loop
push
mov
dec
cli
decl
mov
inc
notb
roll
psrad
dec
js
push
dec
icebp
enter
arpl
test
loop
pop
and
mov
sub
sbb
bound
adc
cli
loopne
repz
test
mov
gs
clc
inc
jg
ja
aad
xor
or
rorl
filds
sub
leave
mov
leave
pushf
mov
add
mov
pop
add
push
xor
and
frstor
push
lea
push
bnd
mov
mov
add
mov
test
idivb
sub
insl
pushf
cmp
cwtl
inc
das
lret
push
cld
sti
iret
ss
les
pop
push
pop
cmp
dec
cmpsb
ss
fst
cld
pop
cmp
inc
cmpsb
mov
in
notb
jbe
xor
das
xorb
or
pop
test
push
lret
jg
in
outsb
call
ljmp
xchg
mov
push
imul
add
mov
inc
sbb
jns
lods
push
fs
rcrl
push
mov
enter
jbe
jge
test
out
fwait
hlt
popa
mov
jo
in
push
test
xor
jg
movsl
jg
rol
sub
mov
inc
pop
scas
addr16
pop
lock
pop
pop
add
and
int3
push
and
repnz
push
or
jae
mov
cmp
dec
enter
push
jl
push
xor
mov
dec
push
ds
rcl
not
or
aaa
rcll
outsb
imul
push
adc
push
arpl
roll
pop
mov
xchg
cmpb
ret
pop
inc
sahf
mov
mov
insl
stos
push
cmp
subb
popa
fdivs
jb
inc
mov
and
sti
add
enter
xchg
add
push
cmpsb
ljmp
add
inc
mov
or
pushl
jl
insb
or
inc
mov
mov
std
and
mov
jmp
jb
pop
es
orl
insb
test
ljmp
add
sub
and
push
push
xchg
les
add
push
sub
dec
adcb
mov
decb
test
inc
jle
jl
lea
call
cwtl
pop
test
pop
mov
adc
mov
and
das
jb
jae
and
cltd
mov
nop
cwtl
pop
jo
mov
inc
dec
decl
test
addb
add
test
addr16
lods
cmp
sub
je
and
dec
fiadds
lcall
ljmp
mov
je
fadds
adc
pushl
orb
test
pop
add
jl
mov
inc
es
lock
or
nop
cmp
stos
lcall
mov
test
add
lret
sub
ljmp
in
add
push
inc
and
add
sbb
adc
sub
sbbb
cmp
push
xor
dec
inc
sarl
or
lods
mov
dec
je
xor
test
pop
cmpsb
xchg
sub
pop
lea
incl
out
sbb
or
push
add
cmp
je
mov
ljmp
cltd
cmc
fwait
cmp
dec
daa
mov
mov
je
adc
fdivrl
cltd
push
sar
pushl
add
clc
fcoms
inc
pop
xor
cmpsl
das
or
das
cmp
test
sub
mov
addr16
inc
sti
pushf
loop
push
sub
push
into
cmp
xchg
add
add
jnp
sbb
enter
test
or
xchg
data16
xchg
jle
cld
mov
jns
nop
push
push
sarl
push
pop
ret
lahf
mov
incl
mov
xor
or
in
inc
xchg
inc
scas
xchg
test
repnz
es
dec
xchg
dec
dec
je
icebp
rcrl
cmp
add
mov
out
mov
daa
xchg
daa
sahf
stos
push
int
adc
dec
fadds
pop
in
inc
mov
pop
jl
mov
jmp
pop
pushl
inc
ljmp
and
or
push
sub
call
adc
mov
into
sub
inc
inc
or
sub
inc
mov
jns
add
aad
xor
pop
sbb
mov
ljmp
cmp
push
enter
sub
dec
loope
das
lds
js
push
fistpll
pusha
jns
decl
enter
aam
ljmp
test
dec
les
xchg
icebp
xlat
sub
out
repnz
pusha
add
pop
mov
cmovbe
mov
adc
jmp
insl
and
sub
jl
dec
mov
rcrb
or
mov
lods
movsb
cmp
sti
and
mov
add
jle
push
out
push
pop
data16
jge
push
push
and
mov
mov
dec
movsb
xlat
xor
stos
inc
inc
pop
pop
icebp
ljmp
or
inc
inc
jnp
lret
nop
xchg
mov
mov
outsb
stos
add
jmp
test
sub
xor
filds
rcrb
shlb
adc
fcos
incl
pop
in
xor
rolb
imul
add
test
cwtl
clc
jo
je
faddl
loope
insl
sbb
jge
push
gs
daa
daa
mov
add
orl
add
faddl
or
std
ljmp
mov
mov
repnz
mov
and
push
lods
adc
xchg
jg
dec
rorb
outsl
add
rolb
imul
fucom
pop
mov
inc
push
adc
sub
ret
mov
pushl
andl
imul
mov
pusha
pop
xor
adc
pop
lock
movsl
rolb
js
xchg
pop
xor
andb
pop
and
inc
jle
sar
stos
popa
pop
outsb
push
pop
inc
or
fs
lret
xchg
xor
push
mov
dec
outsl
decl
and
cli
int3
enter
fsubrl
push
mov
nop
push
sbb
xchg
jl
lea
test
sub
outsl
popa
ffree
inc
pop
lock
sbb
sub
incl
pop
push
adc
lret
es
and
push
lcall
mov
pushl
fisttpl
cmp
add
cmpsb
ds
icebp
lds
sub
inc
pushl
fimull
add
es
add
push
add
outsb
adc
mov
pop
incl
pop
addr16
mov
inc
je
add
sti
xor
in
mov
add
sub
icebp
dec
mov
cmc
cmp
mov
sarl
mov
fimuls
adc
and
lret
mov
adc
or
xor
jmp
and
mov
cmp
sar
sub
pop
xchg
mov
push
push
loopne,pt
cld
dec
ljmp
and
xor
mov
xchg
xchg
xchg
jecxz
dec
xor
rcrl
call
mov
or
pop
mov
xchg
sub
adc
test
xor
mov
mov
xor
and
dec
mov
cmp
scas
push
iret
test
je
mov
fbstp
mov
icebp
xor
test
decl
je
stos
xchg
and
out
je
ret
add
jmp
and
fs
lcall
dec
inc
inc
int3
mov
repnz
repz
cmp
mov
ljmp
call
stos
pop
sub
mov
jmp
push
lahf
subb
pop
or
pop
fdivrl
dec
xchg
push
loope
add
or
pop
push
push
clc
and
in
rorb
pushl
call
inc
xor
mov
inc
mov
lret
das
sbb
adc
icebp
pop
xchg
in
loope
inc
xchg
mov
lret
fs
outsl
clc
mov
in
fisubrl
jne
cmp
leave
sbb
mov
push
mov
sbb
bound
mov
lcall
mov
lock
push
mov
pop
pop
sub
push
cmp
insl
icebp
repz
jg
sti
data16
test
sarb
daa
dec
inc
jae
or
jmpw
aam
incl
daa
and
push
jg
add
popa
and
pop
add
cmp
pop
dec
aam
scas
je
mov
sbb
push
das
clc
call
cmp
and
sbb
dec
or
or
jno
out
mov
add
dec
add
lcall
loope
cli
and
add
cltd
sahf
adc
cli
inc
lods
inc
sbb
pop
xchg
stos
push
dec
inc
add
cmp
lret
or
shrl
cmp
enter
addr16
sub
cmp
xchg
cmpsl
sub
sbb
dec
adc
mov
mov
dec
mov
loop
adc
mov
mov
cmp
vmread
in
and
fs
cld
movsl
fs
mov
test
aaa
or
movsb
rclb
push
addl
das
cmpsb
test
ffreep
add
or
int
push
push
jb
ret
and
sbb
jmp
inc
lock
idivb
jmp
mov
daa
push
orb
into
shr
ljmp
mov
ds
jo
xchg
cmp
lea
testb
out
clc
dec
aaa
pop
rolb
xchg
jge
and
jmp
sbb
jno
push
or
lcall
mov
jg
jle
test
sti
jge
popf
jo
inc
sbb
sbb
decl
lea
gs
adc
jb
mov
aas
mov
loop
sbb
add
push
adc
push
int
rcl
jmp
repz
xchg
insb
add
mov
dec
push
pushl
pop
or
xchg
arpl
aam
inc
push
or
js
add
jmp
add
and
or
pop
pop
icebp
push
pop
add
cltd
icebp
add
pop
inc
addl
xchg
rolb
push
xchg
adc
std
dec
cmp
pmulhw
pop
mov
push
xor
js
movsl
sbb
popa
cmpb
testb
loopne
lods
push
xchg
sbb
fsubs
iret
daa
je
sbb
call
mov
xchg
and
aaa
dec
orb
cmp
xlat
jle
or
stc
movsl
dec
cmp
add
jg
pop
dec
push
sahf
pop
rcr
inc
popf
jno
cli
xor
pushf
pushf
inc
adc
hlt
add
gs
test
lcall
push
pop
push
sbb
nop
adc
fmuls
mov
ljmp
stos
in
incl
push
mov
jg
stos
xchg
dec
popf
je
aas
add
cli
jb
ds
lods
rcll
movsl
or
xchg
inc
movsb
movsb
pop
in
mov
jg
cmpsb
xor
inc
mov
ljmp
cli
jmp
pop
adc
int
sub
push
jns
int3
roll
imul
mov
nop
sti
push
test
add
sbb
subb
cmpl
pop
movb
mov
add
xchg
jmp
in
lahf
iret
sbb
lea
xor
or
add
adc
pop
popa
and
pop
mov
jge
test
incl
push
push
aaa
in
pop
fcmovne
sub
fldenv
push
and
test
test
jnp
xchg
adc
arpl
and
jnp
dec
push
dec
aad
sub
mov
xchg
cmpsl
sbb
cmp
fildll
pop
xchg
cli
adc
push
xor
rcll
imul
mov
aad
call
sub
inc
jne
inc
std
jp
cmp
mov
pop
in
out
jg
movsb
dec
xchg
inc
jmp
add
push
mov
or
into
sbb
xchg
mov
fxam
lcall
jmp
cwtl
leave
enter
call
adc
cmpb
mov
sbb
pop
std
dec
mov
mov
and
xor
mov
movsb
shrb
add
pushf
cmp
xchg
decl
mov
push
pop
clc
dec
sub
pushfw
dec
add
dec
inc
mov
orb
hlt
decl
ljmp
or
mov
pop
lret
dec
cld
mov
and
push
mov
or
pushl
add
loopne
imul
sbb
mov
in
and
jb
jg
in
dec
dec
inc
lret
xchg
leave
pop
push
insb
data16
cmp
scas
lcall
enter
pop
mov
inc
fcmove
inc
movsl
jbe
lds
adc
mov
pop
lcall
cs
mov
clc
and
test
icebp
mov
bound
nop
xchg
or
ljmp
add
jp
mov
dec
sbb
or
aam
or
push
dec
rolb
cmp
push
xchg
sub
sbb
sub
pusha
ret
xor
dec
cmp
cmp
jg
cmpsl
enter
jo
ret
mov
fstps
test
sbb
lcall
add
lock
loop
popf
mov
repz
xchg
push
lds
mov
jg
movsl
mov
xchg
scas
ds
call
leave
mov
push
cwtl
or
sbb
or
jl
push
jmp
xor
or
int
add
sahf
jg
lcall
dec
das
and
rcll
pushf
sub
rorb
xchg
push
push
hlt
jmp
pushl
jg
into
ja
sub
bound
sub
adc
sahf
or
lcall
xor
ljmp
cli
dec
jge
loope
outsb
mov
push
sub
xchg
enter
cmp
addr16
jmp
lods
movb
or
cmovo
and
mov
add
or
gs
mov
mov
and
dec
loopne
sahf
in
icebp
or
inc
sbb
mov
leave
adc
lcall
sbb
lret
roll
and
cmp
jg
sahf
incl
pop
fdivrs
cmp
lret
inc
mov
shrb
shlb
lcall
rclb
add
int3
mov
imul
nop
xchg
dec
push
inc
jo
lods
dec
jae
pop
inc
adc
js
in
jae
fsts
lahf
add
mov
dec
stos
xchg
add
jno
sub
aaa
pusha
add
sti
push
outsl
push
lods
or
jle
gs
jne
popa
daa
push
jnp
es
shlb
or
push
pusha
dec
aam
adc
cld
rolb
jp
es
or
mov
sbb
popa
pushf
mov
mov
push
push
out
sahf
rorb
decl
sbb
bound
dec
fisttpl
or
push
add
test
cmc
xor
add
call
pushf
fwait
je
lret
push
in
inc
mov
int3
lods
cmp
xchg
arpl
int
add
fists
movsb
xchg
xor
fwait
icebp
out
inc
es
mov
lods
enter
push
sub
jns
add
ljmp
cld
es
cmpl
push
gs
lods
rcrb
and
mov
ljmp
call
fisttps
cmp
rol
mov
add
push
adc
pusha
fidivrs
rolb
pop
sbb
sbb
mov
pop
sar
sub
push
jne
pop
cmp
mov
sbb
outsb
adc
mov
jb
push
sub
cmpb
push
push
sar
dec
adcl
xchg
sahf
xchg
mov
in
jge
scas
scas
add
stos
and
mov
fcmovbe
imul
mov
mov
ret
ja
sub
mov
sbb
push
je
lahf
mov
mov
sub
aaa
notl
or
bound
sub
ljmp
or
jle
jne
inc
test
inc
pandn
sarl
adc
xor
popa
mov
incl
pop
jb
adc
mov
xchg
mov
pushl
xchg
je
dec
add
scas
push
rolb
xchg
aas
mov
loopne
mov
inc
les
call
push
inc
push
add
test
mov
adc
decl
jbe
clc
sub
adc
aad
pop
mov
xchg
les
mov
pusha
xchg
pop
mov
add
negb
rcr
jno
scas
add
movsb
push
mov
shl
pop
xchg
add
jle
mov
push
popa
lahf
popf
insb
push
sub
pop
mov
imul
out
hlt
xchg
out
push
aaa
and
aam
jns
fdivr
decl
clc
stos
lret
or
je
mov
lds
cmpsb
add
dec
ret
insl
mov
cmpsl
dec
mov
adc
pop
imul
imul
pop
rolb
inc
push
adc
push
nop
sbb
jmp
fcompl
bound
daa
cmp
idivl
mov
mov
scas
pop
mov
jbe
push
push
call
js
jb
pop
mov
enter
cmp
sti
dec
jle
xchg
stos
call
and
xor
shl
cmp
dec
sub
adc
pop
lods
inc
pop
pop
dec
les
pop
sbbl
pop
call
incb
inc
test
shrl
and
cs
jns
aam
call
je
sub
cmp
jmp
xchg
outsl
jne
push
fisttpl
nop
adc
les
sbb
loopne
cwtl
loopne
push
inc
loope
ds
cmpb
push
cmp
les
fwait
sbb
pop
and
sub
decl
sarl
push
fistl
add
icebp
icebp
pushw
in
mov
shrb
inc
xor
mov
jbe
push
and
inc
push
or
mov
jp
xorb
scas
incl
push
sub
mov
dec
push
jae
test
icebp
out
sbb
dec
jnp
push
sbb
jno
mov
mov
in
ljmp
incl
and
lcall
push
xchg
sbb
ljmp
xchg
jae
sub
cmp
fxch
rorl
dec
and
add
int3
push
pop
or
scas
inc
push
movsb
pop
or
add
lcall
clc
popf
or
jg
fidivrl
scas
mov
mov
xchg
sbb
insl
push
sti
popa
mov
in
es
add
push
add
sub
call
mov
adc
adc
jbe
pop
scas
mov
fidivrs
pop
std
clc
shll
dec
push
add
cwtl
xchg
jmp
adc
int
jmp
decl
aam
jge
and
dec
lret
js
or
xor
mov
int3
pop
sbb
jmp
pop
mov
mov
in
adc
ljmp
dec
xlat
enter
incl
rolb
xchg
inc
in
adc
fstpt
adcb
cwtl
mov
or
mov
sub
add
add
jg
and
ror
cmpb
and
adc
bound
pop
pusha
cmp
std
je
dec
dec
mov
lcall
fiaddl
push
outsl
adc
xchg
inc
mov
pop
sti
push
add
inc
lret
add
sar
rol
pop
add
dec
and
std
add
jmp
out
mov
jle
sub
inc
xorb
pusha
jmp
adc
fistpll
add
pop
xchg
mov
gs
inc
inc
cmp
rcrb
push
lret
nop
arpl
sub
push
mov
or
mov
or
in
sbb
xchg
sbb
call
cmp
adc
jmp
enter
inc
add
xchg
inc
popf
lret
or
jp
inc
daa
mov
xchg
imul
call
add
push
push
and
jle
cmp
dec
fiaddl
add
clc
mov
mov
add
nop
out
outsb
cmp
add
in
mov
mov
je
push
cmp
sbb
push
pusha
mov
fs
daa
sbb
add
push
mov
sub
rcr
decl
cmc
add
in
inc
push
imul
add
in
int3
sub
ljmp
fcoms
sbb
imul
cmpsb
adc
cmp
and
xchg
add
lret
mov
push
addb
jp
mov
jae
push
int3
pop
push
pop
adc
addb
lret
push
mov
adc
jb
pop
mov
push
repnz
and
mov
enter
aaa
adc
mov
dec
test
dec
or
enter
add
pushl
adc
test
push
stos
xchg
test
jno
xor
aad
cmp
sbb
decl
cmp
aad
negb
cmpsb
adc
push
adc
in
fidivrl
mov
push
lods
pushl
ret
pop
adc
fcmovbe
into
sub
push
loopne
push
shlb
pushf
jno
test
xchg
pushl
fs
xor
lret
sub
jmp
xor
or
adc
mov
sub
pushl
mov
jne
leave
and
adc
fildll
push
arpl
mov
lock
dec
fcoml
cmp
jne
nop
inc
adc
sarl
jl
pop
loopne
dec
pop
adc
rolb
dec
push
rolb
xor
mov
lea
or
js
dec
ret
and
sub
jnp
aaa
cmc
mov
dec
outsb
shrl
xor
pusha
mov
aas
sbb
mull
outsb
cwtl
decl
out
ss
jmp
in
jnp
pop
add
or
clc
push
xchg
mov
cmp
mov
nop
xchg
pop
xchg
mov
jge
cmpb
mov
dec
pop
dec
pushl
incl
dec
push
xlat
mov
je
or
loop
xor
cmpl
inc
jo
int3
imul
inc
jo
mov
popa
pop
push
insl
cmp
lcall
addr16
enter
mov
jno
in
or
cmpsb
xchg
movsb
cmp
and
cmp
cmp
jne
jns
decl
push
add
insl
xchg
jecxz
andb
decl
sub
xchg
adc
lahf
insl
notl
and
fildl
rcll
push
xchg
pop
fwait
lcall
and
push
jg
stc
push
jecxz
jae
push
jo
inc
fsts
test
call
adc
dec
loop
jmp
sub
add
cli
fsubrs
mov
pop
loop
add
mov
lods
sarb
dec
test
jge
inc
addl
mov
rol
xor
inc
imul
nop
mov
ljmp
hlt
sub
test
shrb
sub
jg
js
lahf
dec
sbb
pop
je
sar
or
inc
xchg
loop
pop
aaa
push
mov
xchg
outsb
sbb
mov
pushf
and
add
pushf
dec
in
incl
fcmovnu
int
pop
inc
jne
bound
push
inc
test
xchg
jg
call
lret
lock
test
add
jmp
loopne
push
es
or
dec
jnp
push
ljmp
sub
bnd
aam
stos
sub
fsubl
in
clc
ljmp
hlt
mov
imull
clc
jmp
fisubs
aad
nop
decl
xor
dec
cmp
adc
adc
dec
adc
push
mov
jo
testb
decl
call
xor
fs
mov
jbe
pop
and
fidivl
stc
pop
insb
arpl
xchg
into
mov
pushl
inc
add
push
and
arpl
ljmp
or
lret
push
or
and
in
lcall
push
or
add
loope
std
xchg
and
xor
test
push
addl
lock
clc
inc
je
pop
pop
flds
movsl
in
mov
lret
sarl
pop
sbbl
ljmp
pushf
push
push
out
xlat
test
adc
inc
sbb
jns
in
mov
outsl
jmp
int3
sbb
arpl
ret
ss
cmp
cmpsl
sub
adc
xor
adc
inc
pop
or
lods
cs
cmp
std
lcall
or
pop
sbb
pop
mov
inc
mov
xor
mov
add
std
bound
mov
int
xlat
aas
inc
jb
cmp
xlat
sub
mov
jb
xchg
add
sub
mov
inc
dec
add
sub
jg
sub
sub
out
sub
or
sbb
pop
pop
ja
xor
shll
call
push
adcb
jp
pop
xchg
inc
adc
adc
dec
enter
push
pop
inc
stos
push
or
sub
inc
incl
cld
shlb
push
call
ja
xchg
decl
xchg
and
mov
inc
addl
sbb
pop
pop
and
and
cs
lods
mov
pushl
and
mov
movsb
sbb
mov
bound
push
mov
lcall
adc
push
lcall
adcl
fcomps
std
sbb
push
daa
ror
ret
into
imul
pop
dec
add
adc
pop
adc
cld
adc
es
cli
decl
enter
jle
jne
push
xchg
imul
add
mov
int3
js
and
incl
mov
in
lods
push
push
imul
adc
dec
dec
bound
incl
cmp
mov
sbb
xchg
sbb
sbb
ret
jp
fs
add
decl
iret
push
icebp
push
dec
xchg
dec
dec
mov
ficoms
sbb
mov
mov
xchg
and
es
aaa
cld
push
dec
mov
aas
loop
xchg
decl
pop
mov
pop
clc
add
loop
sarl
enter
sbb
cld
pop
shll
add
es
dec
ja
fimull
dec
mov
mov
imul
cmp
inc
mov
jmp
decl
jmp
outsb
scas
and
add
sbb
cmpsl
gs
jns
testb
shll
jg
call
or
out
js
mov
or
test
mov
add
push
xchg
int
sbb
mov
add
leave
popa
sarl
scas
ljmp
pop
test
adc
fstp
mov
cs
movsl
shrb
jp
mov
jbe
jge
dec
test
mov
call
cmp
movsb
ret
bound
cmp
adc
hlt
mov
mov
mov
int3
xor
sbb
adc
aas
lret
sti
mov
stc
rorl
pop
shlb
imul
lret
inc
and
sbb
sbb
inc
in
xchg
and
lcall
or
loopne
adc
add
sub
mov
subl
push
xchg
decl
dec
push
mov
lret
mov
or
and
rcr
sbb
lcall
inc
add
pusha
xchg
push
xor
jns
pop
push
add
call
in
hlt
lods
roll
and
inc
out
add
pop
jmp
xor
mov
dec
test
imul
nop
jg
cli
or
sbb
test
dec
sub
outsb
adc
addr16
jle
xor
push
push
imul
pushl
repnz
addl
fstp
adc
mov
cmp
mov
call
aas
and
mov
adc
and
outsb
lods
js
shrl
add
cwtl
jne
sub
insl
fistpl
jg
std
xchg
lods
fldl
adcl
roll
jo
repz
pop
popf
xchg
decl
fmuls
mov
pop
leave
push
jmp
int
in
push
xor
shrl
popa
stos
push
insb
or
fbld
loopne
sub
lahf
push
lock
je
mov
dec
incl
cmp
cltd
and
push
push
xchg
push
mov
loope
leave
loopne
dec
mov
add
dec
cmp
or
fimull
insl
sub
inc
add
mov
subb
cmp
dec
stc
or
dec
je
ss
sbb
cld
loop
sub
popf
mov
test
mov
es
lock
push
addb
inc
das
add
pop
rol
es
sub
outsb
or
jge
movsl
xor
cmc
adcb
aaa
out
mov
fcomip
adc
sub
sub
into
in
aaa
dec
scas
jnp
xchg
adc
ljmp
loopne,pn
test
hlt
es
adc
add
dec
mov
nop
imul
lds
mov
insb
add
outsl
cmp
push
aas
mov
sbb
fmull
and
adc
sbb
jb
xor
jle
push
test
dec
cwtl
adc
shrl
std
adc
push
cs
mov
rcl
js
sbb
xchg
hlt
cmpsb
das
inc
or
mov
aas
or
aas
push
dec
sub
lcall
and
or
push
subps
fdivrs
gs
push
rcrb
xchg
or
and
out
jo
add
dec
push
mov
pop
fwait
clc
lods
mov
cli
jne
add
pop
pushf
and
mov
fbld
out
pop
jl
mov
push
data16
push
dec
sbb
inc
test
jne
int3
and
decl
mov
push
xor
movsb
lea
dec
in
adc
and
fnstcw
or
or
incl
int3
xchg
push
jl
imul
mov
cmp
inc
adc
inc
sbb
in
xorb
mov
repnz
mov
movsl
lret
in
call
adc
nop
lock
xchg
and
rol
jp
push
push
pop
out
dec
insb
ret
sahf
xchg
pushl
cs
test
sub
jo
jnp
int3
and
into
push
lahf
clc
inc
inc
data16
dec
mov
ret
imul
or
inc
mov
jns
mov
ficompl
lock
mov
and
shufps
adc
lret
outsb
cmpsb
sub
push
and
inc
lahf
push
push
dec
sub
addr16
jo
imul
inc
loopne
loopne
xchg
cmp
lahf
ficoms
ror
or
pop
add
sub
add
inc
add
add
jmp
sahf
out
std
xor
lock
xor
arpl
imul
jle
ljmp
stos
mov
or
jbe
sbb
push
shlb
ret
push
inc
mov
sar
jmp
mov
mov
dec
lea
test
pusha
rcr
jle
xor
fxch
hlt
mov
mov
sbb
cmpsb
dec
inc
add
push
pop
test
jecxz
sub
call
popf
dec
cmc
sar
incl
in
jno
mov
pop
cmp
dec
pop
jnp
adc
lcall
jg
xchg
or
push
lock
or
movl
jmp
pop
incl
lret
cmp
xorb
stos
adc
adc
cwtl
addr16
stos
push
divb
add
adc
inc
mov
jne
jg
stc
sbb
push
sbbb
ljmp
clc
push
xor
incl
scas
shll
shrl
mov
lods
cmp
mov
outsl
mov
cmp
test
sarl
inc
jb
das
mov
popa
cld
outsb
divb
xchg
lds
or
inc
add
arpl
mov
inc
mov
jl
test
inc
sbb
add
decl
mov
sub
mov
lods
outsb
cmp
lcall
stc
adc
jmp
adc
mov
popa
popf
pop
xchg
es
loopne
or
xchg
cld
fistpll
push
daa
pop
push
add
test
add
jb
mov
clc
or
inc
pop
movsl
and
push
ret
ljmp
mov
int3
mov
dec
dec
mov
jl
or
lods
mov
push
std
mov
jge
push
aam
dec
mov
iret
cmp
cld
in
jg
jmp
or
insb
mov
adc
cmpsl
jmp
cmpsb
fistps
cwtl
cmp
sub
int3
or
pop
xchg
push
push
call
add
jmp
cltd
shrb
cld
repz
and
sti
sub
decl
or
inc
adc
xor
dec
fisubs
xor
mov
adc
fcmove
push
mov
mov
dec
push
xchg
mov
cmp
cmp
movsb
xchg
cld
or
outsl
insb
mov
movsb
pop
orl
in
push
and
inc
jp
adc
or
out
clc
ja
test
mov
bound
movsb
push
pop
mov
xchg
mov
jg
psubq
cld
addl
pop
bound
push
dec
and
idiv
push
lcall
mov
and
ljmp
sub
insb
adc
test
nop
sub
push
incl
mov
or
mov
mov
push
dec
das
push
cmp
sbb
push
leave
cli
dec
dec
jg
pushl
mov
dec
or
loopne
shl
jl
push
int3
dec
mov
xchg
ljmp
clc
dec
mul
test
jno
push
adcb
and
xor
and
sub
in
mov
adc
sbb
cmovo
sub
pushf
cs
xor
or
lahf
movsl
cmp
loopne
decl
dec
ret
pmaxsw
or
and
sbb
or
in
mov
lods
decl
into
rcrb
push
icebp
test
nop
mov
adc
mov
add
ud0
lcall
les
inc
and
mov
aam
or
call
daa
insb
dec
rcr
cli
decl
enter
jmp
hlt
sti
sub
out
lea
outsl
decl
and
dec
xchg
mov
sti
and
mov
fidivs
std
decl
test
insb
ljmp
xchg
ret
mov
nop
push
leave
adc
ljmp
adc
mov
push
dec
fistpll
jge
cmp
inc
xchg
aaa
dec
sub
adc
jne
ljmp
adc
movsb
faddl
cs
push
xor
cmp
popf
xor
fcomps
cmp
mov
scas
mov
mov
pop
leave
xchg
cmp
rcr
fidivrs
xor
lds
enter
cld
mov
es
push
lock
lret
pop
add
pop
push
push
cmp
ljmp
insb
xor
int3
mull
cvtps2pi
std
ljmp
cmp
lret
cmp
fs
add
jle
jge
rcr
cwtl
stc
xor
mov
xchg
insl
sub
jmp
sti
fmull
pop
push
rclb
fs
mov
push
in
fiaddl
jbe
adc
loopne
and
std
call
cli
add
orl
sbb
mov
sbb
mov
cmp
call
dec
pop
pop
jo
mov
xchg
int
mov
sbb
xor
inc
mov
inc
stos
or
or
fldt
push
inc
push
or
ret
and
imul
stc
dec
push
cld
jns
push
out
pop
gs
pop
ds
in
and
pop
adcb
les
xchg
xchg
in
or
add
inc
mov
jg
mov
add
and
in
orb
fisttps
mov
je
inc
xlat
gs
sbbl
insb
xchg
out
xchg
mov
sbb
enter
loopne
mov
test
scas
fs
in
lds
mov
jne
mov
mov
mov
sbb
fsubs
adc
nop
pop
add
cmpsb
inc
or
cmp
aaa
scas
call
das
leave
rorl
mov
pop
mov
xor
xor
sub
fs
add
ljmp
clc
insl
nop
sbb
addb
enter
dec
add
scas
addb
xchg
jno
loopne
and
add
pop
imul
imul
dec
pop
xchg
jg
pop
lock
sbb
xchg
add
push
mul
stos
add
cwtl
repnz
pop
test
pop
or
stos
add
mov
cld
jb
push
seto
inc
fisttpll
sarb
aad
add
mov
add
add
mov
arpl
fists
ljmp
dec
lret
unpckhps
mov
fisubrl
int
jmp
adc
fstp
iret
pop
test
or
or
int
mov
stos
ror
sahf
cs
loopne
push
jns
xchg
pop
mov
pop
add
sbb
in
lret
movb
push
xor
adc
xor
addb
adc
mov
pushf
and
sti
xchg
nop
aam
mov
xchg
add
jl
cltd
ljmp
xchg
pop
jmp
js
sub
push
sar
lldt
xchg
or
push
xchg
mov
mov
rorl
fiadds
aaa
mov
leave
popl
cs
jge
aaa
lcall
ljmp
mov
sarb
push
or
mov
jo
js
shrb
incl
sbb
mov
jae
mov
mov
lods
mov
and
fistl
rcrb
push
pop
mov
dec
push
push
rcr
push
in
adc
in
ljmp
jmp
dec
inc
mov
jo
push
jge
mov
xchg
jecxz
flds
ror
or
notl
add
ja
lret
adc
mov
fldl2e
pusha
arpl
dec
dec
cmpl
mov
cmp
dec
rclb
cwtl
sbbb
inc
cmpsl
shrl
lcall
and
xchg
or
out
or
mov
pop
loop
push
rolb
flds
lcall
mov
and
out
rcll
add
mov
ljmp
push
mov
rclb
and
push
clc
lcall
pop
push
cmc
inc
inc
clc
jecxz
cmp
dec
unpcklps
mov
clc
ljmp
xchg
mov
push
out
shll
jns
cltd
movsb
xchg
int
or
daa
je
sub
add
lahf
add
insb
add
inc
adc
out
clc
mov
and
mov
mov
add
sub
add
sbb
sahf
xchg
test
cmp
cld
mov
movsb
lods
push
decl
fcoml
ljmp
enter
lock
sarl
push
adc
push
jae
sbb
and
lahf
or
sbb
lret
xchg
clc
out
push
push
cmp
repz
sub
sbb
std
fildl
call
sub
and
push
movsb
sub
divb
out
cli
ljmp
aaa
lret
push
or
out
shlb
les
pusha
aad
mov
sub
out
cwtl
xchg
adc
ljmp
cwtl
and
call
lahf
sbb
lahf
and
outsb
sub
or
cmc
and
or
inc
ljmp
out
fbld
cmp
je
fsubr
mov
movsl
fwait
xor
insb
push
fildll
sub
add
test
xchg
or
sub
jo
sarl
incl
cli
ss
ret
push
rclb
pop
popf
fildl
scas
sbb
rcl
lods
das
xchg
les
subl
filds
add
xchg
dec
jl
sub
add
xchg
rolb
incl
or
mov
jp
jne
or
test
cmp
sub
mov
icebp
cmp
push
into
call
imul
inc
ss
sub
adc
xor
xor
fisttpl
inc
mov
add
cmpsl
or
adc
push
jle
or
ljmp
incl
adc
pop
cmp
divl
push
lcall
test
jns
loope
jne
ljmp
rclb
mov
cltd
push
sub
arpl
lahf
jg
cld
xchg
andl
fdivrl
imul
clc
add
decl
testl
push
lahf
mov
sub
icebp
cmp
or
xchg
and
stc
decl
out
jecxz
and
dec
jl
scas
inc
inc
pop
test
mov
push
push
das
xor
decl
adc
adc
sbb
scas
mov
adc
and
or
aad
push
dec
jns
adc
adc
jb
out
xor
insl
fadds
test
dec
and
sbb
lds
mov
cmp
pop
jge
clc
enter
sub
sbb
pop
mov
inc
aas
xor
jg
movsl
enter
mov
lret
push
inc
leave
cltd
jo
ljmp
ljmp
lods
lods
cmpsl
add
out
xchg
stos
add
mov
decl
and
pop
sub
pop
inc
and
or
push
in
shlb
insb
push
inc
mov
cmp
ret
mov
and
fstpt
addr16
adc
dec
pop
pop
cld
das
push
add
mov
adc
imul
dec
iret
lcallw
decb
add
xchg
mov
std
jge
or
mov
inc
jle
pop
mov
decl
mov
mov
adc
mov
ss
and
sahf
sbb
fdivr
lret
xor
loope
std
adc
push
stc
mov
pop
push
sub
lcall
popf
xlat
mov
adc
invlpg
gs
xor
aad
xorl
cmp
adc
clc
mov
adcl
movsb
filds
fistpl
cmpsl
decl
pop
jo
cmc
push
daa
push
mov
nop
mov
cmp
ret
xorl
ljmp
dec
or
fisttpll
push
or
sbb
xchg
pop
adc
loope
dec
sbb
scas
clc
jmp
xor
xlat
mov
mov
inc
out
out
add
decl
mov
dec
jecxz
mov
aam
dec
push
mov
inc
mov
mov
jle
out
adc
les
les
add
pop
fs
sbb
mov
add
and
inc
es
cmc
pushl
cmpsb
aam
pusha
rorl
mov
cmpsb
cltd
clc
rolb
cmp
out
xchg
sub
pop
and
mov
dec
sbb
sub
pop
das
mov
ljmp
xchg
test
movsb
lret
mov
das
int3
leave
fistpll
cmpsb
loopne
or
in
incl
mov
fdivrs
cld
adc
pop
cmpsl
or
cmp
imul
mov
xchg
push
mov
or
mov
inc
mov
hlt
divb
pop
add
outsl
roll
fcmovbe
pop
and
jecxz
scas
sub
leave
sbb
inc
push
scas
or
daa
loop
pushw
push
push
repnz
and
nop
es
mov
push
push
out
cmp
mov
dec
lock
paddb
call
jno
cld
mov
jecxz
sbbb
inc
xchg
sbb
cld
call
inc
xchg
push
mov
adc
sbb
cmp
lea
decl
cmp
push
out
and
cwtl
mov
pop
lahf
ret
push
jmp
rcll
xorl
jge
add
incl
push
cmp
mov
sbb
pop
pop
push
sahf
nop
les
hlt
mov
enter
incb
not
push
icebp
mov
fwait
icebp
insb
insb
and
decl
je
xchg
outsb
movsl
pop
movsl
setg
xchg
rolb
and
std
push
testl
jmp
sbb
iret
sbb
add
push
sbb
movsl
cltd
sbb
sbb
les
xor
add
xor
mov
xchg
std
std
xchg
fs
push
adc
imul
add
les
xchg
jg
test
mov
popa
sub
dec
aas
lods
insb
jp
test
jmp
rol
and
push
lea
fimull
mov
dec
cmc
ds
inc
decl
dec
addr16
xchg
sbb
aas
mov
inc
xchg
fwait
mov
add
push
or
ljmp
and
add
add
pop
shlb
cmpsb
push
cmp
imull
int
xchg
sbb
sbb
into
in
sbb
incl
sarl
push
mov
cmp
jp
sbb
xlat
stc
adc
cmc
std
and
mov
ljmp
cmp
pop
sub
and
xorl
roll
inc
mov
lea
lods
add
add
sub
lods
aam
push
lods
addr16
loopne
test
out
stos
jo
pop
cmp
decl
sbb
pop
add
sbb
outsl
cwtl
and
push
adc
lret
xor
aaa
or
push
push
pop
in
mov
xorl
into
push
decl
mov
sti
cmp
xchg
and
cmp
sti
sbb
inc
cmpsl
aaa
dec
cli
sub
pop
adc
notb
and
xor
sub
ljmp
decb
pop
out
jmp
sbb
pop
in
rorl
fsubs
inc
int3
add
mov
insb
add
in
sub
inc
divb
xor
lea
fdivrs
xchg
push
decl
scas
rclb
push
pusha
cs
test
pop
shr
pop
sahf
rclb
decl
insl
inc
rcrl
bound
inc
ret
adc
inc
inc
sbb
push
pop
sbb
xor
jmp
outsb
inc
and
loope
push
push
outsb
or
or
xchg
push
arpl
ja
inc
push
inc
imul
aaa
test
adc
dec
jecxz
cmpsb
sbb
repnz
decl
movsl
fsubrs
mov
aad
pop
shl
icebp
dec
imul
dec
ljmp
clc
push
xor
je
leave
rcrl
sarb
mov
jne
adc
pop
cmpsl
cmp
ljmp
adc
mov
jbe
loopne
and
es
xor
shlb
xchg
lock
dec
jmp
adc
daa
adc
cld
cmp
sbb
jecxz
jecxz
mov
movb
lar
ss
cmpsl
jg
ljmp
stos
cmp
adc
les
popf
lea
mov
or
ljmp
mov
dec
iret
fs
xor
push
xor
lret
xchg
test
decl
movsb
dec
adc
imul
fbld
div
adc
icebp
adc
and
adcl
push
and
xchg
icebp
ja
ret
jge
dec
sbb
movsb
sub
idivb
lea
push
or
test
popa
sahf
add
hlt
or
sub
decl
sub
or
cmp
xchg
adc
adc
popw
cmp
fisttps
push
adc
push
testb
sti
inc
popl
dec
je
xchg
sbb
dec
mov
inc
jge
add
push
xor
add
cmp
xchg
dec
push
lods
inc
lcall
mov
xchg
cs
push
jo
ret
xchg
sbb
fcmovnb
dec
les
mov
pusha
cmp
jbe,pt
mov
adc
stc
mov
mov
imul
aad
mov
or
xchg
lods
push
and
mov
inc
test
ljmp
dec
dec
or
mov
shlb
xor
pop
into
inc
dec
pop
pop
fs
pop
dec
fistl
bound
mov
cli
in
iret
sarl
mov
jo
mov
jg
out
subl
insb
jnp
enter
sahf
lcall
in
stos
mov
imul
insb
rorl
push
sahf
sub
inc
push
lock
pop
pop
mov
ret
jecxz
mov
addr16
and
lods
rorb
loopne
mov
push
movsl
mov
mov
ljmp
inc
push
sub
fnstenv
mov
sub
jmp
fsubl
mov
sbb
fnsave
jp
bound
pop
ffreep
mov
push
xchg
pop
add
insb
pop
mov
sarb
push
push
hlt
rcrb
jecxz
add
mov
xlat
add
popf
mov
or
add
js
mov
sub
sub
pop
jg
pop
into
scas
clc
and
push
or
sub
shrb
decl
sbb
jno
push
test
dec
sub
xor
loop
jo
lea
mov
jns
dec
add
call
sbb
test
add
jge
sub
lea
fnsave
mov
dec
mov
dec
jmp
lods
sub
aam
and
ljmp
jle
add
lea
sub
jno
and
jnp
mov
and
rcrl
push
push
mov
enter
jne
hlt
pop
jb
sbb
mov
lahf
sbb
add
loop
mov
ret
aas
and
xor
and
or
aaa
std
mov
mov
jb
mov
hlt
mov
add
or
push
fs
inc
and
add
js
mulb
sub
and
and
decl
mov
inc
sbb
xchg
xchg
ljmp
test
mov
xchg
xor
test
popf
pusha
mov
and
int
sahf
mov
test
mov
fildll
pop
jl
in
add
inc
push
add
and
pushl
xchg
ss
je
cmp
nop
clc
jg
ja
sbb
ret
les
dec
out
lock
jle
xchg
call
dec
clc
inc
or
or
mov
lret
xchg
outsb
cmp
fnstenv
mov
jo
push
dec
push
int3
pop
adc
and
mov
ljmp
aas
cs
jae
xchg
jecxz
gs
shrb
add
imul
push
xor
add
sbb
push
ljmp
arpl
cmp
push
xor
push
xor
or
jno
push
aaa
lods
mov
decl
mov
popa
incl
aad
add
fmuls
push
inc
and
sbb
or
ja
sbb
decl
push
cmp
cltd
rorb
mov
imul
mov
flds
sbb
xor
cs
or
lret
dec
push
push
xlat
stos
add
and
inc
mov
inc
inc
mov
dec
hlt
add
push
and
add
pop
push
jnp
jno
jecxz
xchg
inc
lods
mov
mov
jns
insb
lods
jl
shrb
pushf
lock
push
adc
xchg
hlt
mov
sbb
cmp
or
add
scas
mov
rorl
enter
push
cmp
inc
sub
ljmp
in
sub
dec
or
sbbb
add
pop
and
and
add
and
pushl
mov
push
jne
xchg
mov
and
and
push
in
or
add
xor
shrl
incl
jb
and
add
leave
jg
jecxz
loopne
mov
push
xchg
pop
sbb
cld
dec
mov
push
push
cld
mov
fcoml
cmpsl
mov
lcall
sub
pop
cs
or
push
mov
pop
pop
inc
nop
cmp
stc
insb
fildl
dec
outsb
in
jmp
jg
enter
dec
lret
mov
sbb
test
pop
adc
incl
xor
push
mov
fwait
into
jno
pop
mov
jbe
cmpsb
xor
decl
orl
fcmovnb
int3
xchg
movsb
pop
iret
in
pop
xor
lcall
mov
popf
sbb
dec
mov
lock
xchg
dec
pop
daa
push
push
shl
cmpsb
xlat
lock
ljmp
subb
lcall
enter
xor
xor
jne
ret
adc
push
xor
push
mov
push
mov
sar
mov
pushf
movlps
mov
bnd
test
add
cmp
inc
pop
test
push
je
mov
ret
data16
pop
adc
mov
mov
in
cmpsb
xchg
inc
push
pop
jge
jl
call
or
dec
shll
xlat
push
or
pop
mov
insl
sub
push
xchg
leave
pusha
push
xchg
jg
sub
mov
mov
pop
or
bound
pop
les
pop
dec
stos
sahf
mov
mov
pop
int3
call
push
and
mov
jmp
in
fisttpll
lea
push
inc
addb
or
cmp
andl
and
ror
push
pop
in
xor
dec
mov
cmpsl
jo,pn
into
pop
push
aad
push
cld
std
gs
jecxz
std
sub
jmp
sub
int3
dec
je
cmc
pop
push
std
loope
xchg
out
push
jg
add
inc
or
das
js
or
and
add
sbb
xchg
int3
leave
dec
clc
adc
mov
cld
pop
ficoml
xchg
add
mov
insl
sub
ljmp
sub
pop
jb
leave
sbb
mov
and
leave
xchg
rol
mov
or
inc
repnz
call
jbe
je
subl
aad
pushl
add
mov
insl
rorl
pushf
orb
or
inc
popf
cld
cwtl
repnz
mov
xchg
mov
repnz
or
pop
mov
jb
cmp
rolb
rolb
in
nop
add
add
mov
loopne,pt
call
xchg
stos
inc
movsl
ret
cmp
push
jbe
push
pop
aaa
in
cmc
xor
and
loopne
xchg
shr
push
and
in
adc
sbbb
sahf
std
leave
mov
cltd
shrl
in
ljmp
ja
lcall
enter
sub
xchg
jo
sub
mov
incb
xchg
add
pop
xchg
std
jo
ds
add
cmp
mov
or
je
xorl
mov
es
arpl
lret
pop
out
add
or
in
aas
into
or
and
mov
jno
add
xor
decl
mov
jg
faddl
add
lahf
pop
ds
jp
xor
les
xchg
jmp
ljmp
jo
cmp
mov
iret
dec
repz
xchg
mov
adc
mov
dec
jae
loopne
add
ljmp
shrw
in
xchg
sub
ret
shll
mov
sub
decl
cmpsl
add
into
lcall
shl
sahf
inc
pushl
push
or
mov
je
shlb
sub
jns
rcr
push
jbe
clc
in
jo
rolb
push
js
jl
cmp
dec
jno
pop
adc
dec
sub
pop
lcall
cmpb
cwtl
xor
out
nop
daa
js
xchg
loop
xchg
jg
shl
push
mov
mov
dec
sbb
jnp
movsb
shlb
test
sar
lock
lcall
shlb
cmp
arpl
js
push
ret
call
rcrb
dec
xchg
mov
lock
push
icebp
pop
std
incl
xchg
mov
push
or
mov
lock
jo
ds
dec
adc
mov
sbb
mov
xor
mov
cmp
mov
add
ficoml
mov
add
shrl
shrb
adc
xchg
sub
adc
add
mov
jbe
mov
jne
jge
insl
adc
decl
xchg
sbb
push
ss
fmulp
fisubrs
inc
and
dec
jbe
mov
fisubl
mov
cli
jp
sub
or
popf
sub
call
nop
dec
inc
and
and
pop
or
add
add
cmp
inc
pop
pop
lds
jno
imul
call
dec
jp
shrl
push
and
filds
inc
imul
xchg
es
fwait
adc
mov
xchg
mov
inc
adc
cmp
out
punpckhdq
lret
sbb
and
pop
mov
or
push
jge
mov
xor
mov
fadds
sub
xchg
mov
pusha
movsb
mov
insl
ljmp
pop
push
sbb
or
lods
rcll
and
or
xchg
adc
lds
clc
scas
clc
mov
mov
adc
lahf
push
inc
dec
movsb
sub
push
rolb
pushf
repz
movsb
jle
mov
mov
jne
push
push
mov
movsbl
sub
call
insl
popf
std
mov
jne
dec
xor
add
dec
jne
bound
pop
sbb
mov
jg
and
jnp
push
or
aaa
and
decl
enter
test
sub
sub
and
push
inc
pop
push
je
dec
jmp
cmpsl
aad
push
xor
ljmp
cli
scas
dec
into
sub
sahf
inc
cmp
xor
xchg
fsts
mov
mov
jmp
mov
sarl
and
add
dec
mov
fists
std
call
mov
es
and
shlb
add
dec
add
call
test
and
mov
cmpsl
dec
xor
sub
adc
lcall
popf
push
bound
or
divb
lret
mov
or
mov
imul
pop
dec
jns
ljmp
rclb
push
iret
shll
dec
mov
mov
movsl
xor
divl
push
addr16
mov
test
pushl
push
test
xchg
mov
xchg
add
inc
jb
mulb
add
cmpl
outsl
insl
ret
push
add
decl
in
inc
push
jle
mov
jo
ds
aam
test
incl
sub
adc
incb
sub
add
mov
ja
xor
push
mov
pop
decl
test
add
out
cmpsb
adcb
cli
or
je
push
jle
or
ljmp
mov
xor
es
jmp
add
mov
add
cmp
arpl
mov
dec
push
mov
lcall
push
jne
int
pop
or
repnz
lods
incl
inc
sbb
gs
sub
dec
sub
lds
inc
pop
imul
cmp
movl
and
test
lcall
cmp
shld
js
sub
inc
jne
rcrb
and
pop
jmp
mov
in
icebp
shl
push
push
mov
ljmp
in
adc
sub
dec
push
xlat
or
mov
or
jns
and
mov
xor
gs
loope
dec
in
data16
shrl
incb
ds
add
ljmp
push
stos
decb
inc
push
dec
in
mov
repnz
pop
dec
sbb
sbb
mov
add
aas
push
fcomip
call
lea
jno
rcll
out
call
jnp
adc
filds
sti
mov
es
sbb
adc
dec
xchg
adc
jb
push
dec
rorb
mov
add
hlt
into
roll
adc
jae
or
ds
or
aam
xor
pop
jb
pop
fiaddl
sub
aam
xlat
cmp
pop
sub
pop
hlt
or
mov
mov
fadds
bound
incl
or
push
mov
js
sub
shrb
add
pusha
inc
fsub
xlat
jg
inc
add
dec
push
pop
push
lock
jb
ljmp
daa
or
ss
adc
pushl
adc
pop
movsl
inc
test
cld
aam
cmp
mov
cmp
dec
movsb
out
cmp
ljmp
in
cmp
cmp
pop
dec
popa
mov
mov
ds
decl
lock
out
xchg
sbb
xchg
sbb
pop
in
cltd
nop
and
inc
push
sub
or
pop
icebp
push
sbb
dec
scas
xor
mov
and
lret
clc
mov
sbb
dec
out
pop
sar
call
fwait
push
fsubl
sub
arpl
add
push
and
dec
pushl
jmp
inc
roll
outsl
or
add
or
test
add
incl
dec
in
shl
jo
shll
lret
or
lea
incl
cld
or
sub
add
addr16
xchg
xchg
inc
sbb
decb
mov
stc
adc
cmpl
adc
and
inc
push
xor
sbb
ljmp
pop
sbb
and
add
ljmp
rcrb
mov
lock
pop
aas
mov
mov
incl
das
test
inc
sub
mov
enter
cld
sub
xor
ljmp
sbb
push
sub
cmc
std
xor
stos
or
shll
push
repnz
cmp
out
in
mov
jb
out
sub
push
leave
ret
sysenter
mov
loope
dec
fidivrl
lock
mov
fwait
aas
daa
adc
ss
xchg
push
hlt
ss
mov
adc
jae
fisttpl
in
subb
or
add
pop
push
xor
movlps
add
imul
dec
add
xor
pusha
push
out
pop
xchg
mov
in
clc
cs
inc
push
pop
hlt
dec
lcall
jae
ficoms
in
jle
in
outsl
mov
pop
repz
push
mov
jo
sub
cmpsl
nop
xchg
inc
add
cmp
cmp
jae
call
or
call
lahf
addr16
xor
push
dec
inc
shlb
out
outsb
scas
inc
dec
lea
gs
pushl
push
scas
or
xchg
pop
les
jmp
stos
mov
inc
fcoms
mov
das
rorb
inc
adc
dec
pushf
aad
fmulp
std
fs
inc
pusha
fimuls
jg
decl
mov
mov
dec
dec
and
inc
jne
call
and
js
jbe
in
pop
or
mov
outsl
bnd
test
rcrl
call
xor
xor
add
test
mov
int3
jb
or
hlt
xor
push
inc
fistpl
idivl
and
ljmp
inc
mov
mov
in
add
dec
out
pop
push
clc
inc
push
rcr
outsl
das
movsb
sub
push
pop
imull
pushf
addl
mov
cld
ljmp
in
shlb
adc
or
add
lahf
sub
test
pop
scas
adc
mov
decl
pop
out
mov
into
xchg
out
or
or
sub
add
mov
or
insb
pop
outsb
xchg
mov
jg
pop
push
xorl
adc
dec
outsb
aas
and
jl
cmpl
mov
mov
incl
jl
jo
jne
sbb
jb
jecxz
add
mov
cmp
sti
stos
mov
add
jmp
push
cmpsb
push
cli
jb
pop
inc
decb
cmp
mov
or
leave
add
jge
clc
jmp
inc
dec
arpl
push
jb
subl
call
xor
dec
jmp
clc
mov
loopne
adc
nop
mov
or
push
fnsave
cmpsl
in
push
push
jmp
pushl
ror
push
push
and
xor
movsb
dec
sbb
in
jnp
mov
add
decl
addr16
xchg
insb
dec
enter
xchg
pop
lret
add
or
test
in
push
jbe
mov
pop
and
mov
repnz
xchg
dec
mov
shlb
cwtl
test
shr
mov
outsl
mov
jbe
xchg
addl
dec
adc
ret
add
lcall
leave
and
jg
out
ficoms
fldt
and
mov
loopne
ret
push
push
fisttpll
lods
sub
pop
mov
aad
dec
mov
rolb
sbb
je
cld
call
rcrl
test
sub
mov
xchg
mov
mov
pushl
xor
cmp
roll
dec
add
cmp
sbb
int3
dec
mov
inc
mov
addb
idiv
incl
cmpsl
jp
mov
loop
pop
fstl
loop
fildl
test
lods
dec
aaa
cld
stos
push
push
shlb
sbb
add
sub
push
add
or
adc
cs
cmp
push
mov
popf
inc
aad
add
mov
sub
in
orb
sub
out
gs
mov
rclb
adc
sbb
fcoms
mov
rcrb
cmp
dec
lock
call
sub
sub
jmp
ja
inc
or
inc
mov
cmc
xchg
pusha
cmp
ja
call
pop
test
mov
pushf
sub
out
fdivrl
iret
add
test
add
je
sbb
sti
sub
jmp
es
add
loopne
mov
or
out
clc
rcrb
repnz
xor
scas
or
sub
pop
mov
mov
inc
jg
cmpsl
fldl
loopne
popa
pop
add
rorl
sub
xor
xchg
add
jmp
loopne
sbb
sub
mov
adc
push
pop
xlat
dec
push
divb
pop
addr16
sbb
sbb
jne
dec
inc
es
mov
dec
int
dec
pslld
sub
push
insb
je
adc
pop
sub
in
or
mov
inc
jb
clc
jns
aas
sub
mov
sbb
push
cmp
in
mov
xor
in
rclb
js
add
or
dec
pusha
adc
add
cmp
xor
out
cmc
daa
dec
sbb
in
mov
inc
lods
clc
adc
push
adc
or
add
sbb
and
jne
aas
sbb
pushl
xchg
bound
sub
pop
or
and
js
call
pushf
notb
mov
fnstenv
fists
in
cltd
into
ds
add
lods
xchg
xorl
inc
xor
out
rclb
call
dec
push
je
xchg
jno
movsb
lretw
int
lcall
cltd
add
pop
push
push
in
pushl
or
hlt
xlat
jb
pop
pop
push
push
jne
popa
insl
out
daa
into
daa
jg
popa
nop
loope
mov
pop
js
inc
call
rorb
and
push
ret
sub
sub
add
test
lret
sub
lcall
mov
sahf
jo
mov
mov
xchg
lahf
sbb
xchg
in
xchg
adc
xchg
and
jg
mov
xchg
movsl
dec
push
test
out
mov
adc
iret
push
pushf
fwait
xor
lahf
sbb
sahf
int
sahf
mov
jg
mov
xor
sahf
sub
fbstp
test
negl
push
sbbl
pop
push
sbb
dec
or
addr16
loop
jbe
sbb
dec
call
addb
sub
sub
sbb
jg
dec
sub
pop
pop
rcr
mov
fdecstp
xchg
add
pop
sarl
jo
adc
std
add
add
aas
push
pop
dec
and
insb
pop
add
aad
or
lea
fucomi
sbb
sub
shl
das
mov
xor
adc
arpl
pop
push
sahf
push
fdivl
push
fstpt
in
dec
fcoms
rolb
xor
mov
mov
push
sub
incl
jae
or
cs
mov
cli
jecxz
dec
ficoml
jnp
dec
or
or
in
pushl
iret
xor
dec
insb
pop
lcall
call
jno
mov
js
pop
jg
dec
sbb
jle
shlb
push
ds
jne
or
dec
daa
movsl
shr
add
sub
mov
mov
add
and
jge
ret
inc
inc
mov
ljmp
push
cltd
je
notb
xorb
incl
mov
sub
jnp
add
addr16
enter
outsb
mov
mov
or
pop
fisubl
cld
sub
jmp
ss
mov
fbld
fdivrl
adc
mov
jg
xor
push
jb
popa
ljmp
pushl
mov
ljmp
jmp
shll
adc
in
sub
sub
arpl
incl
inc
xchg
iret
or
cmpl
ss
sub
clc
ret
outsb
xorb
shl
dec
decl
cmp
add
rcl
cmpsb
and
enter
or
or
dec
je
inc
pop
mov
fstpt
dec
out
test
rolb
lret
hlt
pop
fadd
jmp
dec
mov
jno
leave
out
cmp
clc
jmp
lahf
fldln2
into
nop
sub
dec
dec
sub
or
decl
pushf
cltd
inc
inc
xor
test
roll
addl
sbb
clc
add
pushf
js
pop
add
pop
inc
insl
test
sti
inc
ljmp
adc
or
mov
icebp
movb
mov
jne
clc
push
push
mov
mov
jle
call
inc
mov
ja,pt
dec
push
lcall
mov
push
mov
outsb
sub
lea
cmc
inc
jmp
or
adc
ficompl
push
mov
lock
call
mov
outsl
sbb
cmp
loope
inc
sbb
sbb
test
push
sbb
ljmp
outsl
or
idiv
jmp
icebp
sub
dec
add
sbb
mov
mov
decl
cli
add
xchg
mov
or
add
fisttpl
cmc
mov
shrl
lods
cwtl
lds
std
or
cmp
mov
and
movsb
adc
enter
jg
stos
jg
pop
or
mov
push
stos
mov
mov
pop
ret
test
jle
lods
movsl
mov
and
mov
in
int3
sbb
ret
incw
adc
cmc
dec
push
inc
cmp
mov
test
add
pop
aas
clc
cmpw
fmuls
jae
inc
dec
imul
incl
mov
and
pop
pop
pop
jb
stos
out
in
addl
mov
decl
push
fsubrl
cld
or
iret
jge
inc
jp
hlt
sbb
scas
ljmp
loope
pop
jmp
add
sub
js
inc
jno
popf
jbe
add
ljmp
mov
test
jle
data16
je
aam
xor
cmp
xchg
dec
inc
adc
test
jg
lods
sub
movsb
scas
insb
sbb
jb
add
in
out
sub
inc
sub
inc
mov
cmp
mov
push
push
pop
sbb
push
sbb
lea
fdivl
cmp
pushl
out
jb
idivb
jge
cmc
je
mov
xor
mov
loopne
mov
add
xor
add
sbb
add
sar
outsl
or
add
fcompl
pop
cmp
out
clc
inc
pusha
mov
clc
lcall
popa
cmp
push
xchg
fs
cmp
call
xchg
mov
cmp
dec
out
push
mov
pop
mov
pop
mov
jne
sub
mov
decl
and
sub
xchg
loop
jge
stc
je
jle
cmp
xor
mov
mov
fmull
mov
ret
out
scas
inc
cmc
dec
je
push
cltd
xor
fxch
pop
lcall
cld
xchg
test
shl
rcrb
mov
or
cmc
adc
lcall
mov
inc
xor
int
ljmp
in
xchg
rolb
lret
add
cmp
js
and
add
addl
mov
loop
les
dec
cmpb
ss
fsubr
je
jmp
mov
sarb
sbb
and
and
rorl
cmp
mov
stos
in
call
out
add
pop
sbb
cld
ljmp
clc
jg
or
ret
or
je
lcall
lcall
jle
inc
cld
push
lods
mov
jmp
fcoml
cwtl
ret
pop
sbb
xor
add
pop
icebp
xchg
nop
mov
xchg
add
cli
insb
test
pusha
push
mov
fildl
decl
outsb
mov
xchg
push
push
cld
mov
push
xchg
stos
shl
shl
loop
decl
xchg
sub
leave
setne
inc
and
mov
js
dec
ss
imul
sbb
xor
clc
and
ljmp
mov
pop
push
or
xor
xor
movsl
sbb
sahf
cmpsl
clc
or
das
dec
mov
mov
mov
or
add
cmp
movb
fbstp
stos
cmpb
jo
loopne
pop
lock
out
adc
jb
incl
add
jmp
lods
adcb
xchg
jl
jne
adc
decl
bound
and
pop
xchg
inc
int3
adc
or
xrelease
cmc
jg
sub
addb
bound
shr
cmp
fs
mov
mov
push
jle
cmp
in
jp
add
scas
test
mov
or
adc
xor
xor
into
jl
mov
dec
les
add
pushf
add
jbe
push
pop
push
scas
or
decl
test
or
push
bswap
ret
xchg
lds
push
aas
push
cmp
sub
test
cltd
sub
call
cmp
xor
pop
cmp
rolb
jno
rorl
pop
cmp
push
lock
sub
cmp
adc
je
jg
mov
mov
adc
sarb
mov
jg
inc
add
adc
rclb
mov
xchg
andb
jne
push
push
mov
pushl
and
mov
add
cmp
mov
or
jmp
or
xorl
inc
idivb
popf
stc
cmp
sbb
mov
cli
lcall
cmp
push
jle
adc
test
int
enter
bnd
add
sbb
and
or
insb
leave
push
adc
mov
adc
hlt
adcl
clc
sub
mov
mov
cld
ret
sub
inc
decl
incl
or
outsb
in
mov
adc
pop
pop
in
imul
test
in
sub
lcall
sub
jp
call
nop
inc
out
xchg
incl
xor
mov
mov
mov
ss
sub
or
xor
cmp
loop
sub
jb
hlt
mov
ljmp
imul
mov
jbe
xor
jne
loope
dec
adc
roll
adc
or
adc
push
push
sbbb
xchg
push
sbb
jnp
jnp
outsb
jle
std
cmp
jbe
inc
lret
andl
nop
sbb
add
pop
ficompl
pop
sub
adc
xor
decl
int
push
dec
sub
sbb
pusha
sbb
idiv
stos
add
sub
iret
push
jmp
mov
nop
add
inc
pop
imul
or
jg
sub
xor
add
xchg
mov
mov
add
sbb
mov
cmp
in
xor
dec
pop
jmp
dec
dec
xchg
loope
dec
mov
push
mov
loop
daa
push
adc
incl
jl
ret
iret
jle
ret
inc
dec
sbb
mov
mov
jecxz
sub
lcall
rorb
mov
adc
sub
shlb
add
int3
jmp
or
push
jge
jnp
insb
stc
test
sbb
sbb
outsl
fs
lret
pop
dec
push
sbb
imul
add
lds
pushl
enter
inc
test
lea
mov
cmp
jb
out
jmp
add
adc
jmp
or
pushf
xor
std
mov
xchg
nop
or
push
push
je
shrl
decl
inc
add
lods
xchg
loop
mov
int3
imul
add
daa
jbe
movsl
add
nop
inc
mov
mov
xor
sbb
cmp
adc
aam
xchg
std
in
mov
mov
inc
mov
sti
ss
in
call
in
lock
hlt
mov
sar
mov
sub
add
mov
sbb
xchg
icebp
cmp
pop
mov
cmp
lcall
sub
ret
nop
pop
sti
fwait
andl
rcrl
sub
call
mov
xor
stc
hlt
ljmp
or
mov
or
std
rorl
sub
mov
pushf
test
loop
aam
mov
fisubs
jmp
movsb
mov
xchg
mov
inc
rclb
push
add
mov
fsubrl
dec
dec
mov
pushl
std
nop
dec
mov
add
or
in
sub
or
push
int
loop
loope
dec
mov
js
xchg
les
ss
sbb
push
sahf
adc
jge
call
adc
repz
xor
fadd
mov
test
incl
or
and
xor
data16
push
fistpll
jo
test
lcall
imul
push
shlb
cs
addl
dec
jmp
sub
aaa
cmp
push
add
jmp
xchg
test
insb
ljmp
mov
adc
ficompl
and
mov
jnp
insb
fistps
and
lods
or
iret
cmp
mov
lock
inc
iret
sarl
lcall
pusha
sub
sbb
add
mov
insb
ffreep
and
dec
lret
ljmp
mov
imul
add
push
cli
lret
dec
decl
fcoml
push
ret
in
loop
jbe
xchg
cmc
push
jl
add
clc
enter
add
or
lret
int3
fsubrp
cwtl
je
stos
mov
cmp
shlb
and
pop
rorl
ljmp
sbb
mov
stos
dec
clc
out
pop
cmp
cmp
dec
sbb
pop
mulb
int3
add
scas
sbb
or
mov
and
call
or
cld
push
scas
int
sarl
xchg
jle
jge
icebp
adc
xor
outsl
cli
mov
fimuls
enter
inc
sbb
or
jmp
repz
or
pop
fimuls
xor
cli
add
incl
inc
mov
or
push
in
sub
add
stc
xchg
push
push
push
mov
fs
ds
jmp
decl
inc
arpl
loopne
arpl
fisubl
test
fbld
shrb
inc
cli
in
fisttps
ret
mov
les
pop
je
in
ljmp
lahf
xchg
inc
add
hlt
jle
xchg
lahf
cmp
pop
pop
inc
sar
cmp
inc
sti
and
movsb
cld
addr16
cld
push
sbb
ljmp
les
mov
icebp
pop
jl
icebp
xchg
lea
dec
or
into
mov
add
jbe
arpl
push
call
lcall
or
into
inc
inc
lret
fcmovb
push
or
cltd
data16
jl
gs
rclb
and
and
cmp
sbb
lcall
ficoml
in
and
loop
push
lret
push
mov
decl
mov
data16
popf
enter
call
shrb
pusha
sub
xorb
shl
fstpt
in
inc
aam
dec
xchg
xor
push
pop
mov
stos
ljmp
push
mov
jp
xchg
ret
cltd
adc
inc
out
inc
incl
dec
shrb
lret
mov
jmp
push
std
cmp
mov
jo
xchg
popa
stc
ficoms
js
inc
ljmp
jmp
sbb
jl
ret
lcall
pushf
shrb
mov
arpl
imul
sub
inc
and
das
stos
inc
les
loope
fdivrp
sub
mov
cmpsb
in
dec
mov
imul
add
ljmp
add
or
sbb
loope
jge
xor
xor
sbb
decl
ja
fistl
adc
aaa
pushf
stc
mov
xlat
ljmp
cmp
imul
sub
aam
push
dec
dec
orb
rolb
outsb
add
lcall
test
jp
mov
fcomps
dec
jne
lcall
arpl
cmp
sbb
test
mov
test
leave
pop
mov
xor
push
pop
mov
push
icebp
lcall
sahf
popa
push
cmp
out
mov
pop
xchg
add
add
insb
cmp
pop
mov
xor
fldl
data16
incl
add
and
pop
cld
in
cmp
mov
mov
push
inc
lcall
cmp
or
lods
fstpt
inc
lock
decl
or
pop
mov
imul
push
sbb
cs
push
test
ljmp
push
or
loop
cmp
push
xor
decl
sub
inc
jo
adc
add
sbb
loope
xchg
lods
mov
cmp
sub
lcall
mov
dec
outsl
andb
repnz
pop
adc
ss
fimull
pop
jo
push
cmc
cmc
push
loop
hlt
ljmp
pop
pop
sbb
mov
xchg
dec
mov
test
decl
inc
mov
andb
jg
or
cs
xchg
loopne
pop
or
data16
ljmp
push
mov
pop
push
sub
pop
in
scas
mov
push
xor
test
std
in
cmpl
add
push
sbb
add
jo
dec
decl
and
jecxz
jecxz
idivb
pop
push
jns
or
call
adc
repz
sub
cmp
inc
mov
mov
dec
pushl
adc
pop
mov
mov
sub
jmp
add
xchg
shl
or
ss
cli
decl
fsubrp
add
repz
xchg
shlb
jmp
roll
xor
mov
mov
mov
xchg
sti
lea
shrl
mov
jmp
cs
or
sub
jge
and
scas
or
cmp
loope
cld
jg
jmp
call
rorb
or
movsb
shlb
sub
sahf
je
add
ret
and
ja
imul
in
jg
ret
clc
sub
or
mov
notb
aas
jo
push
cmp
push
incl
ror
jno
loope
mov
xchg
adc
in
aad
mov
adc
cmp
push
ljmp
ljmp
pushl
mov
fs
sti
xchg
mov
fidivrs
pop
lea
out
ds
lods
jge
ljmp
xorb
push
mov
jle,pt
sahf
test
in
stos
and
ljmp
cmpsb
fdivrp
mov
movsl
loopne
dec
jmp
push
cltd
cmc
pop
sbb
push
jg
jp
sbb
adc
cmp
xor
push
mov
neg
mov
cltd
mov
lcall
xchg
add
das
push
mov
and
or
fldl
je
sub
aaa
dec
pop
mov
cmpsb
sti
aam
or
fistpll
add
sbb
je
arpl
pop
xorb
ror
icebp
push
in
lret
push
inc
lret
std
add
int3
mov
sbb
add
cmp
jb
repz
mov
jmp
sbb
pop
dec
jmp
decl
or
jo
decl
cs
pop
sbb
dec
stos
dec
imul
sbb
je
mov
add
das
add
call
push
push
xchg
fiaddl
enter
outsb
dec
ljmp
sbbb
adc
add
xchg
orl
fs
fmulp
dec
mov
cmp
inc
adc
push
mov
or
add
jmp
lock
adc
loopne
jb
push
xor
std
lahf
enter
lock
cmp
cmc
add
les
add
adc
in
xchg
popf
or
xor
or
adcb
clc
sbb
pop
mov
loopne
inc
or
lcall
ret
test
lods
lret
aam
cmp
push
mov
mov
mov
mov
ljmp
jg
test
adc
push
cld
jne
mov
push
cmp
jne
cmp
js
es
mov
xlat
inc
dec
mov
rorb
andl
mov
sbb
lahf
out
adc
inc
inc
adc
std
jmp
int
sahf
adc
cld
mov
jg
and
adc
jbe
pop
out
dec
sub
and
mov
add
mov
and
jmp
jno
sbb
sub
lea
iret
xchg
push
mov
sbb
and
cmpsl
inc
mov
cmp
ljmp
ret
loope
into
shl
ret
test
add
notl
mov
fnstenv
dec
sbb
loope
pop
sub
scas
cli
decl
jbe
shr
mov
jne
push
pop
cmp
test
adc
cmp
incl
pop
push
mov
or
jnp
adc
jnp
sub
decb
pop
daa
dec
push
cmp
ljmp
or
movsb
scas
adc
popa
sar
push
pop
push
jo
orb
mov
cmp
inc
mov
push
out
notrack
test
xchg
jbe
push
cmpsb
test
mov
in
sub
mov
mov
and
andb
ljmp
and
fnstcw
cmp
aaa
and
cmpsb
jbe
std
ljmp
xchg
push
mov
sbb
mov
push
jle
in
insb
sbb
mov
popa
out
jp
aad
adc
and
imul
div
in
mov
je
shlb
test
and
mov
push
or
adcl
xor
jne
icebp
mov
mov
lret
sar
popf
ficompl
adc
shr
jnp
and
pop
mov
pop
jnp
push
mov
or
in
out
int
add
dec
idiv
pop
sub
ljmp
inc
pop
jle
or
stos
mul
mov
es
or
lcall
icebp
insb
sbb
outsb
loop
rcr
fsubrs
enter
rclb
les
lock
mov
ss
ljmp
mov
jmp
add
sbb
sbb
ds
sbb
mov
mov
jmp
xchg
ret
push
adc
jmp
aam
aaa
call
or
orl
mov
pop
or
pop
or
cltd
sbb
mov
pop
fmul
cltd
add
lret
adc
lret
jge
jns
push
or
jle
cmpl
lea
mov
out
sbb
push
mov
push
mov
adc
call
add
aas
int
add
aas
mov
ret
mov
in
fdivs
ja
pushl
cmp
jle
cmpsb
aam
push
aam
add
movb
or
jle
mov
mov
enter
movsb
push
pop
push
jecxz
test
cmpsb
mov
and
shll
decl
sbb
mov
dec
inc
or
mov
mov
push
mov
imul
ret
aas
sahf
add
xchg
xchg
add
pop
popf
fldenv
xchg
dec
data16
ds
mov
lea
or
enter
jmp
arpl
sbb
adc
mov
mov
push
and
mov
sub
cs
jnp
sub
sub
pusha
add
jecxz
cmp
xchg
add
or
neg
notl
aaa
mov
mov
dec
lahf
scas
mov
sahf
cld
fsubs
dec
pop
cmp
call
or
jg
jge
sub
maskmovq
testl
jmp
push
push
pop
mov
xchg
aaa
xchg
push
adc
inc
mov
jg
or
rep
jmp
jmp
mov
test
das
or
mov
fiaddl
dec
push
dec
ljmp
out
mov
inc
sub
add
add
sub
orl
push
push
decl
add
repnz
push
push
add
or
cli
lcall
nop
lret
adc
cmp
daa
sub
out
aam
addr16
shl
fisubl
mov
and
mov
popf
sahf
jmp
aam
adc
sbb
popa
es
cltd
inc
ljmp
jmp
sub
inc
lods
mov
jo
mov
mov
test
xor
push
push
inc
cli
ret
incl
sti
test
clc
sub
mov
mov
jecxz
add
andb
jne
sub
js
sbb
mov
shrl
sub
shrl
sbb
or
arpl
sbb
mov
push
or
fidivs
xor
call
incl
or
mov
sub
decl
int3
lret
aam
test
pop
sbb
hlt
lock
pop
out
in
jle
jp
xor
sarl
cmpsb
das
mov
sbb
xchg
mov
loopne
mov
xor
mov
jmp
and
xor
cmp
add
inc
shlb
push
je
sbb
decl
mov
popa
shll
xchg
cltd
je
mov
add
mov
cwtl
and
shll
dec
decl
roll
js
iret
jecxz
bnd
push
jg
cmp
ja
adc
fcmovnbe
cmp
add
pop
sbb
movsl
push
out
mulb
call
lods
iret
inc
cmpsl
lock
ret
test
pop
xchg
jbe
pop
xor
decl
aam
and
icebp
push
test
and
lods
push
inc
add
jae
push
cmpsl
jle
dec
pushl
ret
repz
or
or
je
and
sub
and
fcos
or
or
mov
push
mov
ja
lcall
inc
popf
xor
int
cmp
fcmovne
push
push
ja
test
mov
add
lods
push
fmull
inc
jl
lcall
scas
cmpsb
insb
xor
add
sub
cmp
ret
les
push
pusha
ret
xor
lret
cmp
mov
cmp
sbb
mov
pop
cmpsl
inc
aas
nop
push
fstps
in
lock
dec
xchg
in
mov
mov
aam
cmc
incl
stos
sub
xchg
cmp
mov
fs
fildll
cmp
arpl
xchg
and
mov
xchg
gs
cmp
sbb
lret
popf
sarl
cwtl
mov
add
push
adc
fisttpl
fs
lock
sub
mov
xchg
fbstp
or
cmpsb
jne
sbb
hlt
xorb
pop
cmpsb
mov
push
pushl
pop
jbe
adc
into
mov
imul
enter
call
fucom
xlat
add
imul
idivl
mov
push
leave
fwait
in
insl
das
cli
lcall
call
pop
adc
jb
jge
sti
lea
mov
pushl
push
cli
iret
and
pop
cmp
jae
mov
stc
sbb
call
test
push
loopne
popf
clc
adc
push
cmpl
stos
push
cld
decl
shrl
push
lea
std
xchg
mov
stc
mov
into
push
mov
xchg
push
das
sbb
mov
test
sub
push
sub
sub
ret
xor
clc
jmp
daa
xor
faddp
movsl
fadds
ret
mov
idiv
pop
je
or
xchg
fadds
insl
ret
push
mov
imul
push
fcoms
cmp
mov
pop
xchg
inc
mov
jbe
dec
push
pushf
mov
jmp
jmp
mov
in
and
mov
fiadds
mov
gs
push
lods
jg
jg
scas
push
loop
adc
cld
adc
mov
icebp
scas
ljmp
ljmp
pop
dec
push
rorb
mov
push
pop
push
xchg
pushl
lock
sub
or
daa
push
mov
es
decl
repnz
into
jl
insl
stos
push
pop
push
inc
push
int
cmpsb
or
adcl
mov
jb
mov
es
adc
mov
inc
fsubs
lock
call
sbb
xchg
xchg
jl
icebp
aas
enter
lret
mov
inc
shll
lea
addr16
fisubl
push
jb
divb
popf
lcall
pop
imul
xor
inc
cli
add
aad
or
push
cli
js
xchg
add
sub
add
jo
shlb
jge
dec
hlt
sar
lahf
jle
adc
sbb
sbb
decl
or
and
out
or
xchg
add
insb
dec
stos
jae
mov
cmp
inc
inc
xor
fmuls
insb
xor
add
mov
mov
sbb
pushl
xchg
cmp
xchg
mov
loope
mov
jg
sbb
mov
lahf
mov
or
ja
add
hlt
mov
sbb
cmp
sub
push
clc
jbe
add
or
add
loop
dec
test
and
ljmp
jmp
lds
pop
fdivrs
out
sar
scas
mov
jmp
test
jne
test
pushl
xchg
or
cmc
lds
sbb
shrb
jbe
aas
ljmp
pop
je
and
or
mov
pop
dec
aas
jo
add
mov
mov
movsb
cmp
testl
xchg
xor
dec
pop
pop
jg
or
jmp
imul
dec
imul
push
sarl
lcall
insb
xchg
xlat
xor
call
xlat
xorb
inc
int
mov
inc
pop
fnsave
lock
lock
push
mov
mov
data16
arpl
out
dec
add
cmp
and
mov
dec
mov
sbb
decl
push
pop
or
jnp
cmp
les
loop
add
jle
data16
push
decl
or
popf
and
out
loopne
sub
in
jnp
inc
jne
add
cli
adc
mov
in
and
jno
or
xchg
add
jl
fimuls
xor
decb
lret
push
shl
popf
jge
fwait
imul
xor
dec
adc
cld
add
adc
lret
sahf
div
mov
and
or
arpl
mov
iret
ficoms
fwait
or
fstl
aam
and
rcrb
mov
cmp
push
dec
sub
xchg
pusha
add
in
outsl
xchg
loope
pop
push
invd
or
test
lahf
pop
pop
add
pop
or
add
in
idiv
push
sbb
push
adc
inc
mov
testw
pop
pop
outsb
add
stc
out
fistps
or
pop
incl
xlat
dec
or
jns
or
aam
cmp
lcall
dec
fnclex
in
fucomi
or
push
add
cmp
and
rorb
popf
cld
or
jmp
ret
shll
icebp
push
mov
sbb
ljmp
push
add
push
add
xlat
mov
mov
insb
rcll
mov
dec
rcll
adc
mov
out
ljmp
jae
xchg
push
xor
add
inc
add
push
call
iret
jmp
sbb
sbb
adc
ror
ja
jb
and
test
ljmp
sub
rclb
pop
jmp
xor
pop
cmpsb
mov
mov
ret
stos
fistps
jno
icebp
xchg
clc
inc
and
xor
mov
jo
lahf
add
mov
lea
es
sbb
lods
xlat
js
push
loopne
jmp
or
xor
jmp
sub
decl
sub
jp
out
sub
xor
repz
iret
mov
fcompl
push
js
adc
pop
sbb
jmp
addr16
in
ljmp
insb
jb
test
out
incb
dec
jge
bound
leave
js
mov
popf
sbb
fnstenv
das
sahf
cmp
jle
push
lcall
push
fcom
jne
pop
leave
sbb
push
daa
pop
loopne
fwait
shrl
fs
call
insl
xchg
sub
js
pop
outsb
aam
mov
enter
xchg
xor
jl
cli
mov
shl
push
stc
lahf
mov
movsl
push
xchg
add
ljmp
decl
mov
mov
push
sbb
or
cmp
mov
movsb
cmp
jb
cli
decl
sub
mov
int
rolb
mov
adc
jp
add
pop
decl
sub
inc
clc
and
jno
cmp
adc
mov
push
cld
jmp
out
mov
push
call
sub
push
and
or
lahf
ljmp
addr16
push
push
cmp
mov
sbb
aas
mov
adc
mov
outsl
adc
inc
mov
push
xlat
int
cmpsb
jmp
jg
add
lcall
xor
and
roll
in
lods
jne
out
out
xor
or
jns
mov
push
movsl
push
lock
inc
cld
inc
add
dec
mov
test
cld
daa
xor
test
out
or
or
inc
dec
jns
dec
push
or
adc
call
pop
call
pop
or
pop
aaa
outsl
pop
and
arpl
add
rclb
sub
enter
dec
add
xchg
outsl
lea
dec
aas
loop
cmp
incl
jmp
sub
mov
int3
fistpll
iret
xor
pop
pusha
test
shl
scas
ret
or
in
decl
mov
out
push
xadd
sahf
icebp
dec
jecxz
out
or
in
int3
xchg
jmp
sbb
out
and
loopne
adc
out
dec
mov
jmp
jle
out
mov
push
or
imul
mov
or
out
mov
push
dec
pop
cmc
pushl
xor
cmpsl
test
icebp
aaa
add
mov
shlb
lcall
jecxz
jo
mov
jae
setno
out
in
decl
add
xor
push
or
fcoms
and
sbb
cltd
call
dec
cli
movsl
adc
jp
lcall
rorb
pop
cmp
rcl
add
and
aam
pxor
sbb
sbb
jl
outsl
fdivrl
repz
mov
push
test
mov
lahf
push
sar
les
sbb
filds
gs
mov
outsl
xor
dec
sarb
stc
or
pop
hlt
push
cld
mov
and
push
iret
aad
mov
sahf
inc
cmp
jle
ljmp
xor
jg
push
jg
jo
mov
mov
jg
test
insb
mov
decb
ffreep
jecxz
jg
mov
sbb
out
mov
rcll
xchg
dec
or
out
mov
dec
call
adc
push
repnz
add
jle
xor
shrb
fildll
inc
lcall
addb
sbbl
test
push
fisubl
or
sahf
add
ljmp
out
rclb
jp
jne
sbb
or
ljmp
push
inc
adc
adcl
and
lcall
mov
aaa
lcall
aad
mov
fmul
or
xor
mov
sbb
in
adc
pop
loop
rcrb
fs
mov
ret
ljmp
lcall
xchg
idivl
adc
aam
ret
sbb
push
mov
cmp
pop
movsb
out
push
fs
dec
rcrl
dec
insb
rclb
shr
lock
pop
and
nop
add
adc
add
nop
mov
xchg
pop
inc
and
add
jmp
sub
cmp
push
inc
and
inc
ja
push
inc
mov
mov
push
add
cmp
aas
popf
xchg
fs
out
pushl
daa
jecxz
push
in
mov
add
add
testb
je
mov
add
jmp
test
or
inc
jmp
and
repnz
cmp
inc
pop
cmp
test
jne
fildll
or
aas
jg
sub
lret
ss
push
mov
decl
sbb
mov
adc
sub
sub
jg
jnp
jae
in
or
leave
push
nop
adc
mov
adc
lock
jl
mov
jns
rorl
sbb
hlt
jl
lret
mov
mov
ja
sub
xor
popa
std
adc
fldcw
xor
add
add
cmc
push
jmp
pop
repnz
das
insl
push
in
mov
add
icebp
sbb
add
call
pop
icebp
pushl
loope
imulb
or
jne
inc
sbb
mov
sbb
xor
mov
or
sub
push
add
shlb
cmp
xchg
lods
loopne
test
ljmp
pop
mov
ljmp
or
sub
and
inc
test
rcrb
std
pop
sub
cmp
jl
push
lahf
dec
mov
add
ja
pop
inc
inc
mov
ja
hlt
push
xorl
jmp
or
movsl
xorb
push
xchg
sub
cmp
lret
ljmp
dec
push
and
sub
push
rcrl
ret
dec
js
jmp
sub
enter
add
lcall
stos
jmp
mov
test
jg
mov
incl
in
hlt
subl
mov
dec
call
mov
leave
mov
mov
stos
sbb
push
addr16
push
loopne
mov
jmp
jo
xor
add
sbb
inc
sbb
sbb
rcrb
in
dec
incl
clc
push
and
jbe
adc
mov
cli
rorb
mov
jmp
call
outsb
pop
adc
loope
mov
mov
nop
scas
fs
jb
ja
sbb
inc
lock
ds
cmp
divb
push
add
push
or
aaa
xor
or
jle
in
xchg
jb
adc
jo
mov
adc
loop
or
sbb
scas
mov
adc
jle
incl
sbb
jg
fbld
orps
mov
pusha
pop
insb
imul
mov
cmp
arpl
enter
cmpsl
add
mov
outsb
fld
in
mov
dec
aam
mov
adc
mov
imul
or
push
cmp
in
pop
cmp
ljmp
sbb
sbb
lods
mov
repz
scas
dec
mov
stc
inc
pop
sbb
shl
test
std
frstor
insl
sbb
adc
mov
lahf
adc
push
mov
idivl
rclb
idivb
xor
cmp
ljmp
mov
lods
dec
push
cltd
inc
test
xorb
pop
mov
pop
je
jmp
add
sbb
fld
fdiv
call
xchg
in
in
sub
pop
mov
aas
clc
pop
dec
or
in
push
or
mov
add
fsubr
cwtl
jmp
or
push
fdiv
insb
jmp
in
add
enter
popa
xchg
je
mov
mov
sbb
cmp
outsl
sub
adcl
lcall
fldcw
je
inc
xchg
jmp
mov
int
push
ss
jbe
sub
decl
adc
nop
pop
call
shl
lods
pop
adc
push
fcompl
jae
ljmp
test
fnstcw
pop
je
dec
jne
xchg
and
sar
ljmp
adc
adc
mov
inc
dec
mov
test
incl
data16
add
and
push
push
pop
pushl
fs
mov
rclb
mov
and
mov
cltd
jmp
outsb
in
fcompl
mov
xchg
cli
sbb
mov
repnz
fistpl
lret
loope
inc
sbb
jbe
ljmp
in
sub
and
decl
bound
adc
lcall
inc
adc
dec
inc
xchg
sbb
push
jb
idiv
outsl
idiv
push
xchg
xchg
push
pop
xchg
dec
hlt
jae
pop
clc
ret
dec
js
cmp
inc
cmp
decl
dec
ret
and
lock
jp
call
sub
add
and
add
inc
or
addb
mov
lcall
es
mov
fcmovb
mov
pop
push
xchg
scas
bound
sbb
mov
sbb
push
xchg
into
jmp
lock
cmp
cltd
xor
cli
sbb
jg
cmp
xchg
mov
mov
insb
pop
outsl
int3
call
sbb
add
ror
xor
mov
gs
out
or
je
jns
xor
xchg
xchg
fcompl
xchg
rcll
sar
mov
decl
push
inc
and
or
shll
inc
jnp
push
aad
mov
adc
pop
shlb
xorl
cmp
xchg
cli
cmc
ljmp
add
pop
or
jno
leave
ret
mov
add
sub
add
out
pushf
jo
rcrb
ljmp
movsl
add
addb
jb
jno
addb
je
pop
xbegin
push
loopne
mov
or
lret
mov
cmp
paddw
test
xchg
lcall
js
lea
and
hlt
push
outsl
in
xchg
adc
ja
push
test
insb
jp
dec
fs
decl
cmp
fstl
push
insb
je
mov
iret
mov
fmul
clc
lods
jecxz
out
fadd
or
and
xchg
mov
fs
and
and
lock
jg
inc
es
push
sbb
lret
outsl
shr
cli
call
fimull
cli
decl
inc
pop
adc
pop
jnp
pop
pushf
and
push
mov
jae
push
adc
sub
jno
xchg
and
jns
repz
imulb
cwtl
or
lock
cmpsl
test
mov
cmp
nop
rorb
xchg
call
stc
pop
sti
lds
jno
ljmp
and
int
adc
out
xchg
popa
sub
cmp
cld
lcall
into
je
scas
and
adc
xlat
sbbl
lcall
adc
cmp
jb
testb
decl
add
scas
jno
inc
inc
add
cmp
push
push
cmc
hlt
aaa
out
and
decl
jge
push
sbb
shrl
ljmp
in
and
jb
pop
or
sub
xor
daa
pop
cmp
imul
adc
daa
clc
sub
sbb
sub
push
fstpl
dec
dec
jbe
mov
jmp
lock
jge
out
mov
loopnew
add
mov
or
pushf
aad
add
jg
dec
movsb
shlb
xor
add
mov
je
pop
mov
popa
pusha
mov
pushf
fs
decl
lods
fiaddl
push
push
lods
inc
pop
jmp
add
or
out
push
decl
jb
adc
mov
lods
inc
push
mov
popa
sub
xchg
or
pushl
into
rcl
and
sti
or
add
jbe
and
loop
dec
jmp
mov
xchg
push
inc
pushl
insb
xlat
pushf
fnstsw
add
push
fidivrs
loopne
in
add
arpl
push
add
decl
loopne
sbb
clc
test
add
loopne
dec
xorb
mov
sbb
roll
add
sbb
push
jmp
ljmp
lock
xor
ret
repnz
iret
mov
call
xor
adc
popa
cmovns
fwait
movsb
fldl
cwtl
sbb
repz
push
in
cmp
icebp
or
lret
clc
jg
inc
xor
sbb
pusha
sub
decl
cmp
rol
notb
lcall
pusha
jl
jp
outsl
icebp
push
push
dec
mov
cmp
and
ljmp
push
ss
fwait
mov
sbb
in
add
fistpll
outsb
adc
or
ja
inc
int
cltd
inc
in
out
imul
popa
mov
fcmovnbe
imul
pushl
or
dec
aad
adc
cmp
or
pop
fsubs
or
push
mov
or
call
shlb
push
ret
mov
in
push
xor
enter
inc
cs
fimull
push
sbb
adc
fdivrp
out
xchg
jbe
testb
out
daa
adc
push
mov
sarl
leave
adc
call
and
sahf
test
adc
add
ljmp
add
and
ja
push
xchg
adc
pop
test
decl
in
in
ret
or
inc
pop
and
sub
pop
repnz
lock
test
jb
push
ret
insb
decl
fwait
call
pop
mov
or
add
nop
dec
jae
cmp
pop
mov
call
aaa
lcall
push
mov
scas
push
add
push
jno
and
and
jl
cltd
nop
call
mov
adcb
dec
and
lahf
pop
sub
clc
push
out
push
push
xchg
pop
mov
jb
scas
jne
inc
rcrl
test
pop
das
xchg
insl
rol
cwtl
into
rcl
lret
fstpl
jmp
dec
xor
jle
add
mov
pop
sub
sbb
mov
dec
fimuls
jl
mov
cs
add
mov
nopl
adc
jmp
sarl
or
loope
mov
and
lret
adc
cmp
add
sub
dec
cmp
jecxz
mov
cmp
sub
and
sbb
gs
ljmp
sub
rolb
xchg
aas
scas
rcl
cmc
jne
xchg
mov
fistpl
ss
jo
xchg
inc
fildll
cmp
and
mov
adc
stos
mov
out
dec
dec
je
push
lea
fcoms
in
adc
sub
jl
insb
ret
xchg
xchg
xchg
shrb
xor
xchg
std
aam
xchg
sbb
lcall
or
test
test
jle
mov
cmpsl
lret
into
mov
cmp
incl
sbb
xchg
popf
dec
fs
inc
push
je
fistps
xor
in
call
leave
jge
ljmp
clc
xrelease
mov
jb
mov
pop
pop
ja
rcl
call
push
adc
sbb
jecxz
rcr
mov
xchg
insl
mov
lahf
and
imul
fidivrs
cld
fsubp
ljmp
sbbb
push
shll
push
sub
push
cmp
push
push
mov
cld
leave
xchg
lods
add
nop
jo
dec
and
mov
mov
dec
add
orb
fsubrs
call
xor
call
mov
adc
jmp
fcoml
push
lea
lahf
sarb
call
lea
cmp
adc
or
fwait
jecxz
jmp
call
movsb
sbb
dec
jns
sbb
xor
and
cmp
jb
push
ljmp
push
and
clc
mov
popf
pop
jo
jg
loope
subl
pop
adc
dec
decl
adc
xor
aad
add
push
or
xchg
lods
push
mov
and
push
and
es
pop
push
inc
xor
sbb
mov
call
xlat
push
xor
mov
push
jbe
push
jne
mov
inc
int3
cmp
ret
mov
lock
add
inc
das
jne
fldt
cld
dec
inc
imul
jbe
dec
add
cmpsb
mov
jg
add
std
push
dec
imul
call
push
sbb
idiv
insl
outsb
lcall
jle
mov
push
mov
dec
outsl
mov
ljmp
lcall
into
std
xchg
je
push
jmp
add
mov
std
xchg
insl
inc
stc
push
and
xchg
aam
inc
add
push
push
push
or
inc
push
arpl
jae
cmp
cld
push
xor
rcrl
ud0
mov
out
mov
mov
loop
mov
push
leave
inc
add
push
pop
imul
cmp
push
cmp
fcomp
inc
dec
xor
sub
add
jmp
xor
or
dec
or
cmp
ljmp
fistl
lcall
sbb
mov
ss
adc
cmpsb
ret
ja
sar
ds
and
lods
inc
jle
pusha
push
pop
data16
or
nop
leave
xchg
jmp
xor
jl
mov
lahf
scas
repz
ret
or
inc
mov
jg
ret
aam
imulb
pop
inc
ret
loopne
das
push
mov
cs
int3
icebp
filds
cli
mov
sub
or
cmpsb
jg
fs
gs
push
mov
cmpsl
cli
iret
adcb
push
dec
call
jmp
mov
ljmp
ljmp
mov
or
jmp
adc
push
sbb
push
or
mov
rep
addl
cmp
and
jno
aad
pop
in
mov
mov
lcall
or
pop
xchg
cmp
xchg
mov
inc
xor
mov
add
inc
inc
gs
push
sub
cmp
push
push
or
pop
jl
mov
add
incl
and
mov
adc
out
mov
or
adc
mov
data16
or
mov
ret
pop
loopne
jmp
adc
ljmp
jp
ljmp
adc
pop
scas
fwait
jno
daa
lahf
inc
jecxz
xlat
mov
mov
sbb
mov
sti
dec
mov
mov
xor
sbb
repz
mov
in
push
adc
inc
or
push
pop
push
lcall
jne
call
pop
pop
aaa
mov
sbb
or
clc
add
push
jnp
rol
jmp
ret
cmp
leave
popf
in
jne
aam
mov
sub
push
ljmp
xlat
or
dec
aaa
xor
xor
aad
mov
xchg
xchg
xchg
fldenv
jle
imul
je
push
pushl
imul
adc
inc
out
adc
sub
mov
sarb
addr16
cmpsb
rolb
int
das
rorb
sub
sarb
subb
jp
aad
push
sub
repnz
jo
shll
push
sub
outsb
rcrb
cwtl
sar
cmovle
incl
test
dec
or
shrl
leave
icebp
ljmp
std
decl
arpl
or
ljmp
inc
add
add
fiadds
pop
hlt
sbb
cmpsb
jle
lods
add
push
or
inc
cli
mov
ret
push
sbb
dec
test
and
pop
or
inc
mov
lock
mov
pop
add
lock
xchg
jle
sub
inc
insb
test
or
lock
mov
insb
leave
add
or
dec
cmp
jb
test
dec
ret
xor
pusha
add
push
push
bound
sahf
loopne
sub
pop
icebp
adc
xor
cmp
sbb
push
lahf
enter
mov
icebp
and
test
std
lea
push
or
dec
xor
jnp
mov
in
popf
enter
repnz
jl
cld
pushf
popl
xchg
lea
test
and
decl
fcmovbe
call
adc
dec
icebp
aad
fwait
pushf
andb
mov
inc
or
divb
mov
insl
sbb
mov
jmp
call
mov
xor
scas
push
or
xchg
repz
or
inc
xlat
pop
mov
add
dec
call
dec
jg
inc
pop
jmp
daa
popa
cmp
lods
lods
lret
xchg
stos
movsb
ds
or
test
out
lods
popa
inc
add
lcall
or
mov
or
or
jae
fs
and
dec
push
xchg
pusha
push
hlt
push
mov
mov
dec
add
fcomip
lds
sbb
push
out
iret
lcall
imul
decl
inc
adc
inc
jne
notb
shlb
adc
mov
arpl
ret
lcall
push
div
or
push
and
cli
into
in
dec
push
adc
sti
jle
mov
push
frstor
cmpsl
push
adc
aas
and
jns
hlt
dec
loope
adc
or
push
pop
inc
ljmp
cli
add
add
or
cwtl
sti
test
cld
addl
je
push
inc
scas
adc
inc
inc
dec
jbe
cwtl
or
and
mov
mov
lds
fnstsw
jge
or
or
add
mov
fcomip
mov
inc
xchg
jg
add
inc
test
xor
lcall
sbb
cmpsb
inc
cmpb
sub
ljmp
stos
xor
cs
add
test
push
fidivrs
ljmp
out
shl
or
or
jecxz
call
in
enter
mov
push
sub
paddusb
sbb
outsb
jae
sbbb
and
into
decl
lcall
sub
int3
sub
push
mov
lcall
or
movsl
decl
jmp
inc
idivb
fwait
dec
sbb
adc
dec
es
stc
sub
mov
and
jno
jmp
notb
rorb
mov
idiv
pop
xchg
xchg
out
test
inc
cli
or
pop
sbb
ljmp
loope
sti
dec
and
inc
loopne
lods
ja
movsbl
add
lcall
and
mov
jg
js
outsb
sbb
push
adc
mov
push
int3
or
pop
call
incl
mov
pop
and
sti
or
shl
mul
jnp
push
adc
icebp
pushl
cmp
dec
or
jns
push
incl
stos
imul
pop
and
fadds
sbb
cmp
sub
add
pop
cld
movsl
ret
data16
lcall
shrl
popa
mov
cmp
inc
add
leave
test
call
fildl
in
or
mov
test
push
sbb
cmp
pop
icebp
call
and
or
out
daa
cmp
jmp
mov
scas
das
inc
aad
pop
and
or
lret
mov
in
add
jb
mov
call
or
div
cmp
inc
xor
dec
jg
cmp
pop
cmp
lcall
cld
fwait
ljmp
and
pop
lret
push
mov
mov
rorl
scas
out
xchg
aad
push
sahf
xchg
dec
mov
js
mov
pusha
xchg
ljmp
jmp
imul
mov
sub
sub
mov
test
inc
jmp
imul
jle
pusha
dec
jae
je
pop
or
sub
pop
in
ret
rcrl
xchg
sbb
cmc
inc
rclb
sahf
ret
mov
pushf
out
adc
jmp
cs
pushf
into
jb
push
mov
popf
mov
std
xor
jno
add
or
jbe
or
pusha
xchg
stos
es
xorb
rolb
hlt
add
pusha
or
cwtl
push
or
or
call
adc
jo
fwait
in
roll
jns
rcll
mov
jg
imul
cmp
sti
inc
je
movzwl
dec
dec
and
and
enter
mov
mov
ljmp
sub
add
cli
inc
subb
adc
flds
or
sub
movsb
into
je
pop
decl
dec
add
inc
mov
mov
sar
fisttpl
mov
les
add
xchg
test
decl
sub
add
sti
adc
mov
sub
sub
je
test
seta
idiv
subb
dec
inc
adc
dec
inc
xchg
and
push
mov
mov
and
roll
and
push
jp
or
ja
call
mov
add
push
and
and
sub
mov
add
push
push
add
outsb
addr16
out
cmp
out
adc
push
and
or
jge
decl
cmp
pop
push
push
xor
test
mov
imul
adc
pop
mov
nop
or
movsb
cltd
adc
cs
lcall
stos
cmp
mov
add
adc
ficoms
sub
lcall
mov
add
scas
jl
arpl
jo
ret
cld
push
ret
lcall
loopne
push
add
jbe
dec
mov
or
call
adc
mov
inc
out
push
inc
or
mov
jmp
jae
sub
decl
pop
mov
nop
int3
test
jae
mov
inc
push
xchg
fldenv
loopne
push
mov
roll
dec
mov
aad
mov
pop
adc
das
cli
decl
xor
test
jno
les
negb
sbb
aad
push
jbe
jmp
imul
ljmp
into
inc
sbb
rcrb
aaa
inc
dec
sbb
loopne
mov
adc
add
fimull
pop
es
pop
hlt
call
outsb
imul
or
push
mov
or
ret
jne
pushl
hlt
and
int3
dec
adc
add
xchg
jnp
in
pop
loopne
push
cmp
jmp
xchg
pop
icebp
cltd
adcb
mov
xchg
cmp
shll
pop
in
movsl
jmp
mov
fwait
mov
jmp
mov
in
sub
inc
jno
cltd
xchg
pop
int
mov
fbstp
inc
cmp
je
pop
or
lods
inc
orb
dec
mov
pop
aad
push
cmp
jb
mov
imul
sub
jmp
icebp
sub
decl
fiadds
push
inc
push
ror
cmpsb
rcll
in
cmp
aas
xor
push
sub
jle
jmp
test
add
xor
lahf
rorb
or
mov
das
stos
ljmp
inc
scas
dec
and
mov
dec
cmp
pushf
scas
pop
ljmp
dec
lret
or
fimuls
mov
pop
stos
mov
pop
jmp
cltd
xchg
dec
incl
dec
popf
fstpt
mov
pop
pop
xlat
addb
scas
inc
and
int3
mov
jge
cmp
and
xchg
add
jne
cmp
adc
adc
decl
dec
mov
nop
in
jmp
or
roll
fsts
inc
push
add
decl
and
js
arpl
loopne
and
xchg
push
pop
adc
daa
mov
decl
call
arpl
pop
xchg
lahf
jle
in
out
outsb
mov
jle
into
jle
cmp
int
cmp
jne
push
call
add
and
or
and
scas
cli
or
dec
arpl
or
data16
jmp
inc
sbb
ja
mov
dec
jp
int
fisttpl
scas
movsb
out
mov
in
movb
clc
xor
dec
ss
mov
jae
lret
lock
xor
adc
nop
loop
dec
nop
pop
jmp
lock
adc
ljmp
inc
or
sub
mov
lcall
xor
adcb
and
jmp
adc
or
sub
mov
out
fadds
jmp
dec
imul
push
add
mov
and
inc
pop
sub
scas
nop
test
inc
inc
nop
dec
or
adc
out
cmpsb
rorb
incl
jg
add
lock
mov
pop
sbb
adcb
xchg
test
jne
inc
pop
lds
ret
lea
xchg
in
ds
jle
call
pushl
add
sbb
addr16
add
daa
push
jne
mov
shll
cmpl
cmp
jne
loopne
outsb
es
push
lcall
cmpsl
dec
dec
shr
push
in
add
psubb
ficompl
inc
sbb
push
mov
dec
decl
push
sbb
or
adc
in
mov
ret
xchg
adc
lea
mov
jne
test
rolb
fs
mov
inc
outsb
stc
cmp
cmp
out
fs
mov
add
mov
push
jmp
add
jne
fstpt
push
xchg
dec
mov
sub
incl
or
add
loopne
xor
fldenv
mov
imul
call
jo
jbe
sub
dec
jb
and
dec
and
jmp
sbb
adc
sub
loop
jo
pop
or
xchg
inc
call
and
bound
mov
pop
repnz
sub
pushf
sbb
mov
inc
cmpsb
mov
lret
inc
push
sahf
xor
fwait
adc
push
adc
cmpb
push
lods
jl
xor
pop
mov
stos
call
clc
orb
aaa
or
jne
sub
test
adc
into
cmp
mov
sahf
or
loopne
mov
clc
dec
add
ret
aam
sbb
es
stos
daa
cwtl
or
xchg
jo
sbb
int
std
mov
adcb
inc
je
mov
mov
adc
icebp
int
sub
mov
push
rorl
adc
jle
jmp
mov
xchg
pushl
mov
sub
cmpb
call
lods
rcrb
dec
push
dec
adc
pushl
jae
in
loope
cmc
jb
xor
inc
push
into
inc
adc
test
and
daa
std
mov
fisubl
push
or
nop
call
fiaddl
lea
movsb
es
inc
mov
add
xchg
push
cld
cmp
push
cmpb
push
jmp
add
jbe
mov
mov
daa
sbb
mov
inc
add
push
or
sub
decl
cmp
xor
dec
inc
imul
mov
inc
pop
dec
movl
decl
sub
out
pusha
movsl
fidivs
push
stos
shlb
test
clc
dec
decl
mov
xor
ds
adc
push
clc
mov
dec
push
jmp
dec
incl
cmpsb
call
daa
jb
adc
mov
push
clc
ljmp
push
and
push
and
sbb
in
dec
inc
inc
stos
rclb
mov
inc
mov
jmp
in
cmp
stos
aam
mov
clc
pushl
jbe
and
enter
test
push
out
call
mov
or
adc
cmp
sub
cmp
xor
cld
dec
pop
in
dec
pop
cmpb
inc
bound
shl
fs
jae
popa
sbb
pop
or
mov
or
aas
lods
xchg
add
adc
add
jmp
and
stos
or
mov
cwtl
add
arpl
xor
add
jo
lock
push
pop
aad
inc
into
push
add
cld
mulb
ret
filds
inc
pusha
sahf
sub
lcall
sar
outsb
add
in
jne
loopne
mov
pop
icebp
test
les
cld
dec
imul
cmp
xchg
mov
adc
add
mov
adc
adc
cmp
inc
add
gs
in
incl
sub
fmuls
jnp
stc
mov
xchg
and
cmp
cmp
or
das
sar
xchg
scas
inc
loop
imul
insl
push
inc
jecxz
cmp
pop
inc
add
jmp
xchg
xchg
xor
and
push
sub
adc
aam
incl
lahf
mov
and
jnp
jb
ret
adc
mov
push
inc
push
in
xlat
sbb
jecxz
cmp
mov
and
in
xchg
popf
xchg
add
sub
fistps
in
mul
inc
mov
sub
jmp
cmp
mov
adc
das
icebp
adc
add
pop
add
loope
pusha
and
mov
adc
fs
lcall
xor
imul
mov
shll
incl
out
sub
cmpl
fadds
pop
jp
and
push
sub
ljmp
andl
int3
jo
add
rcl
cli
faddl
loopne
or
loopne
jl
push
ljmp
mov
dec
pop
push
sbb
addr16
push
jp
mov
cmc
mov
sub
xchg
ret
add
lods
add
lea
cmp
mov
or
aam
das
add
push
popf
loope
ljmp
loop
dec
imul
rcrb
mov
lahf
sbb
dec
fcmove
mov
cmpb
rolb
fcoms
add
imul
ficoms
sub
insl
lcall
fidivrl
or
and
pop
insb
test
scas
mov
inc
push
jg
sub
or
fistps
mov
add
fisttps
adc
push
mov
sti
inc
bound
pop
test
icebp
dec
dec
clc
mov
inc
in
sbb
sti
mov
cli
mov
pop
imulb
mov
nop
xor
push
iret
mull
mov
and
push
sbb
adc
jmp
pop
xor
mov
lock
ljmp
pcmpeqd
mov
xchg
lock
xchg
rorb
jle
push
xor
add
mov
and
loopne
or
mov
mov
xchg
push
aas
dec
inc
orl
jmp
adc
fstl
fcoms
stos
mov
loop
arpl
mov
jns
dec
or
ljmp
mov
and
lret
fldl
gs
aaa
insb
sbb
loope
jbe
pop
sbb
in
sbb
xchg
pop
pop
push
cmpsl
add
std
mov
xchg
insb
lods
and
loopne
mov
xor
jne
add
ljmp
je
mov
fisttpl
int3
js
lahf
mov
jg
and
xor
add
out
xlat
jmp
movsb
fldcw
ret
sbb
aaa
popa
pop
jmp
inc
push
std
fcomi
push
outsl
dec
pop
and
or
mov
adc
mov
fs
xchg
push
inc
or
test
out
inc
add
lock
andl
push
cmp
push
push
notl
decl
loop
sbb
dec
xor
pop
insb
loope
mov
hlt
aas
cmpsl
mov
nop
add
arpl
das
cli
decl
or
mov
push
add
out
pop
stc
xchg
push
push
ljmp
js
add
inc
outsb
cmc
xchg
aad
mov
pop
xor
sub
fwait
mov
in
fadds
and
mov
cltd
jnp
pushl
ds
jb
push
paddusw
inc
pop
sub
and
push
incl
data16
mov
inc
repnz
push
xchg
inc
xor
jae
sub
or
call
jb
cmpsl
cbtw
imul
xor
sarl
push
jno
mov
add
mov
dec
das
adc
lds
xor
mov
cmp
mov
mov
mov
imul
push
sub
dec
call
roll
sbb
dec
ret
mov
fnsave
sub
inc
sub
jmp
pop
pop
clc
lcall
and
jg
insb
loopne
int3
and
add
xlat
clc
push
mov
pushl
rcr
pop
stos
js
icebp
cmpl
xorb
test
xchg
xor
jmp
inc
loopne
push
push
pop
loopne
mov
and
and
mov
jne
cmp
ds
xchg
ljmp
shrb
lea
add
push
cli
add
dec
ljmp
push
add
dec
jb
mov
jp
and
lods
and
pop
fnstenv
aam
pop
and
std
cmp
lcall
or
insb
fsts
push
jb
es
fcompl
cld
scas
and
std
or
push
fistl
aas
xchg
add
add
nop
sbb
dec
jg
add
sbb
pop
shl
and
mov
int
incl
icebp
add
rcl
inc
ss
aam
cmp
push
gs
sub
decl
cmpsl
pop
sub
data16
add
dec
push
mov
mov
and
in
icebp
xor
push
mov
push
lea
pop
ja
dec
xor
stc
sbb
call
mov
stos
call
aam
sub
xor
in
nop
pushl
adc
std
jmp
popa
mov
mov
xor
push
loopne
mov
lock
cltd
idivb
ss
sub
insb
inc
cmp
cmp
jmp
mov
bound
in
or
int
aaa
aam
sbb
jb
cmc
ret
daa
in
and
in
pop
jne
cmp
orb
lods
testb
push
jns
sub
out
test
jg
or
adc
pop
jecxz
or
and
push
or
ljmp
inc
incl
and
mov
mov
pop
and
mov
pop
xor
or
xchg
mov
pop
mov
adc
lods
pop
inc
or
inc
popa
sub
pop
arpl
jecxz
test
cmp
decl
rorl
and
sbb
jb
push
fstl
pop
xor
and
xor
mov
nop
ljmp
jae
addr16
test
xchg
dec
and
adc
std
sbb
inc
jb
or
std
idivb
cmc
and
xor
movsb
add
and
in
cld
sub
fistl
jl
movsl
call
jmp
out
inc
ret
mov
dec
jmp
push
and
sub
inc
setno
out
and
add
pushf
inc
mov
or
movb
xorl
cmp
dec
daa
cmp
dec
xor
pop
inc
pop
addl
inc
ljmp
sub
ss
notl
das
loope
es
cmpsl
inc
push
dec
mov
xchg
lock
out
and
shll
push
in
cmp
repnz
sar
insl
sti
das
jmp
test
and
scas
xor
or
mov
and
aaa
cld
decl
dec
and
cmp
filds
ficomps
inc
or
and
mov
xor
mov
jb
leave
mov
or
adc
sbb
mov
push
pushf
jp
inc
je
mov
pushf
push
das
frstor
add
mov
cmp
dec
data16
and
jnp
shl
repnz
popf
or
std
jmp
bound
add
add
ljmp
add
push
and
pop
daa
jb
test
pop
popf
push
hlt
ljmp
add
mov
insb
aaa
add
jae
fsubrs
mov
data16
cld
add
lcall
shlb
push
inc
test
mov
leave
adc
inc
or
call
inc
or
pop
push
and
rorl
sbb
fidivrl
addb
outsl
lods
jmp
jmp
xor
jl
jg
iret
adc
inc
inc
data16
addb
xchg
out
dec
add
jg
pop
dec
inc
lea
cltd
mov
sti
lea
push
loopne
shr
push
fsubrs
cld
cltd
dec
imul
ljmp
jl
aam
mov
out
insl
shrb
push
inc
movsl
add
call
mov
sbb
mov
and
jno
cmpsb
jg
xchg
dec
lods
push
push
lock
inc
mov
sbb
lea
and
insl
xchg
lcall
jns
dec
or
hlt
push
cltd
inc
shlb
and
jne
je
mov
daa
inc
jbe
outsl
jmp
inc
jns
addb
movsl
mov
adc
imul
fimull
lcall
sbb
sahf
outsl
cmp
sub
inc
decl
test
rcrl
add
or
jl
fnstenv
in
or
sub
adc
rorl
mov
mov
xor
mov
jge
adc
push
sti
pushl
or
icebp
or
dec
subb
xchg
lcall
imul
xchg
pop
push
xor
and
lret
call
cld
ljmp
xor
push
push
mov
dec
sbb
pop
test
pop
loopne
sub
mov
ljmp
pop
or
jae
cs
sbb
fstps
jae
cld
xchg
inc
cmp
xlat
pop
fildll
xchg
mov
xchg
push
aaa
add
cld
xor
pop
jns
xchg
imul
jmp
jmp
inc
cwtl
mov
test
int3
and
loop
pop
cs
mov
sub
pushl
cmp
cmp
popf
or
or
cltd
inc
push
mov
push
insl
sbb
arpl
adc
ss
cld
mov
xchg
cmp
push
stos
sti
movsb
je
popf
je
jbe
ja
add
lcall
mov
xchg
ja
jg
sub
ret
arpl
es
and
pop
repnz
mov
fisubl
push
dec
fdivl
sub
sub
shr
mov
rcrb
addl
ret
add
insl
or
jno
sub
dec
lcall
mov
cmp
or
call
sbb
enter
jg
pop
mov
pop
dec
lcall
jl
sub
in
jns
dec
or
or
aas
xchg
xchg
mov
and
cltd
in
lahf
out
aas
pushl
push
cmp
rolb
jecxz
data16
fistl
rolb
xor
jg
lods
add
add
push
sbb
sbb
xchg
dec
aas
add
mov
jl
cmp
fadd
pop
test
repnz
or
jne
xor
loopne
mov
call
add
mov
loopne
loope
add
sub
lcall
mov
mov
in
je
pop
fadds
dec
in
int3
push
test
xor
jl
dec
cmp
cmp
insb
inc
or
scas
fmull
popa
inc
mov
sbbb
loope
fbstp
mov
out
push
pop
popa
data16
call
inc
in
add
addl
adc
cmp
cmp
xchg
test
or
jmp
test
push
mov
sahf
push
rcr
add
lcall
call
gs
sti
push
adc
in
ss
ljmp
pop
push
sti
int
aad
adc
cmp
push
sub
outsl
add
js
mov
add
inc
mov
ja
fsubr
push
leave
sbb
add
jnp
test
rclb
jb
sub
dec
loopnew
mov
mov
clc
lods
lahf
mov
dec
jmp
adc
outsl
push
mov
test
cmp
dec
adc
cmp
dec
pop
addb
rorb
adc
dec
push
cmp
ljmp
fs
stc
lock
xchg
fcmovu
sub
fidivl
in
xchg
cmc
iret
lahf
mov
add
pushl
cmpb
sbb
enter
pop
mov
repz
ljmp
popa
cld
adc
sub
js
cmp
jmp
jl
cmp
mov
jne
ljmp
jp
xor
and
inc
mov
lds
aas
sbb
shll
xchg
add
movb
in
xor
mov
dec
pop
dec
idiv
lcall
cld
ljmp
inc
div
mov
cmp
xor
cmpb
in
xchg
shrb
ljmp
xor
sub
xchg
dec
jo
rol
jno
dec
hlt
imul
mov
lea
popf
or
xchg
add
imul
decl
or
dec
mov
pop
cmpsl
lea
mov
cmpsb
sub
cltd
sar
sbb
iret
dec
bound
push
and
sub
cli
sbb
xlat
imul
dec
pop
test
push
add
fcoms
jg
rcrb
notb
lea
push
hlt
push
lea
inc
test
fcoms
daa
xorb
and
pop
das
push
idivb
in
push
inc
cmpb
lock
ljmp
out
pop
jmp
loopne
subl
sbb
inc
mov
pushl
std
fptan
in
add
imul
fbld
or
imul
jbe
adc
pushf
lcall
sbb
es
int
ljmp
repnz
sub
xor
adc
testl
add
ltr
incl
ljmp
sbb
cli
cmp
and
lcall
add
popa
push
fdivrs
cld
gs
shll
lods
mov
cmc
xor
js
sbb
adc
jmp
fiaddl
inc
mov
popa
push
into
mov
movsb
ljmp
insl
push
sbb
je
jb
xchg
push
push
push
or
inc
cmpsb
data16
pushf
jmp
pop
fldenv
inc
cmp
cltd
mov
ljmp
and
mov
inc
inc
insb
cmp
inc
jne
mov
lods
sub
mov
dec
lret
fucomi
mov
push
insb
lret
xchg
add
cmp
or
decl
cli
imul
add
mov
es
push
loope
push
push
ljmp
incl
push
ror
pushf
shlb
das
xchg
adc
stos
dec
add
cmc
push
das
sbb
sar
lcall
enter
data16
rorb
sarb
push
jle
or
shrb
push
jg
pop
repnz
jp
push
jne
int3
mov
cli
push
add
xor
ss
ljmp
cltd
inc
dec
popl
mov
xchg
mov
pop
pop
mov
in
shrb
shll
lods
aaa
test
call
outsl
mov
mov
pop
into
idivl
sbb
ds
xchg
push
testl
lret
mov
cmp
iret
xor
mov
sub
inc
fisubrl
xchg
testl
and
das
jo
cmp
adc
add
loope
push
mov
and
in
lahf
sahf
cmp
adc
rcrl
mov
and
cmpsb
mov
jle
adc
push
lret
push
xchg
neg
add
and
sahf
sub
ljmp
sbb
jnp
sbb
stos
jg
out
sub
dec
loope
push
shr
je
fdivrp
jmp
call
jmp
pop
shr
rcr
or
jne
ds
mov
mov
movsb
out
shll
jg
decl
lock
ja
jb
cmp
mov
cwtl
nop
mov
mov
xor
sub
cmp
mov
xlat
or
aam
ss
iret
popa
mov
loope
in
lcall
jnp
loopne
dec
pop
pushf
or
ret
mov
test
push
push
cmp
decl
popf
inc
popa
enter
pop
cmpsb
loope
addr16
jbe
sub
adc
xor
or
fstpt
popa
mov
outsl
jno
xchg
inc
sahf
push
adc
jns
jl
psubsw
repz
in
sbb
pop
jmp
mov
cmpsb
push
cwtl
xorb
sub
mov
mov
mov
pop
jmp
pop
jo
daa
and
cmp
out
int3
xchg
cmpsb
repz
jecxz
add
push
das
adc
fists
pop
aam
je
inc
and
je
mov
push
add
fnstcw
cs
stc
cmp
mov
test
mov
adc
and
ljmp
mov
add
dec
loopne
push
jne
call
inc
lods
add
sub
stos
push
jge
and
push
pop
ret
shll
out
rcl
push
dec
push
rcrl
mov
or
aaa
mov
mov
scas
add
pushf
ss
mov
fildl
inc
daa
mov
inc
bound
inc
push
pop
shl
testb
or
aaa
jg
aas
or
adc
or
les
mov
call
inc
xor
pop
and
xchg
xchg
stos
dec
adc
cmp
stos
lcall
fdivp
je
cmp
repz
cmp
cmp
add
jl
inc
int
dec
js
dec
ljmp
mov
ja
push
nop
icebp
pop
fdiv
sub
shr
inc
fcomps
outsl
push
jge
xor
loopne
jle
stos
cmpl
ja
jae
xchg
inc
jg
sar
mov
pop
outsb
jmp
test
subb
jecxz
fisubl
clc
lock
in
pushl
adcl
jne
ds
pusha
mov
ror
incl
ljmp
outsb
adc
adc
rorb
inc
orb
or
loopne
dec
test
fcompl
xchg
scas
mov
xchg
lea
shlb
cmp
jp
cli
test
adc
and
shrb
mov
mov
shl
pop
aas
mov
dec
pop
dec
fcoms
fistl
adc
out
and
sub
dec
inc
jae
push
stos
add
dec
outsl
push
adc
sbb
dec
adc
pusha
or
decl
pop
notb
cmpsl
imul
xchg
push
pusha
fildll
mov
orl
pushl
fisubrl
xor
sbb
sbb
mov
add
jmp
nop
pop
ret
xor
or
pushl
jo
dec
cmp
mov
ds
rorb
jns
mov
cmp
decl
sbb
or
lds
rcrb
jmp
adc
sbb
in
dec
cld
lcall
sub
or
mov
dec
mov
lea
cmpsl
scas
jb
cmp
es
push
clc
cmp
in
sub
mov
cli
lds
mov
mov
into
stos
int3
xor
mov
or
jnp
jg
jmp
sub
pop
mov
adc
xor
mov
push
cmpsb
or
jbe
fs
into
fadds
cmp
cmp
cmc
or
xchg
xor
and
ljmp
pop
into
sbb
adc
pop
xor
jg
sub
push
inc
mov
push
nop
adc
xchg
adcb
decl
xor
push
cmp
mov
decl
jne
add
ja
dec
xor
add
mov
test
jns
data16
imul
leave
jae
xchg
ret
sub
iret
sbb
sub
incl
je
fmuls
pop
std
add
and
cs
push
ja
ljmp
xchg
xlat
pop
out
iret
jecxz
dec
loop
aas
mov
push
cmp
jge
sub
sub
dec
add
rcll
cmp
test
sbb
mov
decl
loope
negb
fmull
push
test
cmc
adc
ljmp
incl
in
aam
mov
ror
mov
sbb
pusha
xor
or
dec
inc
gs
xchg
adc
aas
sub
leave
add
in
je
cmpsb
hlt
divl
dec
lcall
pop
nop
mov
lahf
pusha
dec
pop
and
push
gs
push
aad
dec
out
fstpl
xlat
mov
out
incl
test
insb
adc
bndldx
shll
sub
and
lock
jne
cmp
dec
inc
lcall
cmpsl
sbb
call
mov
push
fcomip
mov
lock
pop
mov
xor
sub
adc
es
pushl
pop
push
ss
jmp
icebp
cmpps
out
int3
rcr
fdivs
jp
pop
jbe
or
ljmp
mov
push
xor
test
jl
stc
orl
or
lods
stc
fmuls
das
mov
shl
stos
jb
imul
cli
ljmp
testb
ljmp
lock
and
pop
jl
mov
ljmp
mov
add
out
fsubrs
sub
push
push
mov
loope
shr
loop
sar
fcomip
incl
pop
imul
inc
mov
mov
mov
mov
pop
call
nop
push
aam
adc
out
rolb
cmp
lret
hlt
xor
test
mov
pop
in
inc
aam
mov
iret
lods
dec
cmp
dec
xor
push
lret
and
xchg
add
or
or
jns
cmp
jno
mov
jo
in
jg
push
loopne
shll
dec
xor
in
or
stos
cmp
or
jmp
jmp
add
and
das
ficomps
inc
dec
jno
rorb
cmp
add
or
add
adc
fadds
xlat
sub
and
pusha
or
mov
popf
je
dec
and
or
js
inc
jmp
jecxz
and
incb
lret
adc
dec
cltd
lock
cld
mov
in
sbb
aaa
sbb
xor
decl
decl
xchg
jmp
popa
lea
sub
inc
adc
and
out
cmc
cmc
jecxz
sub
cs
mov
jge
pop
pusha
and
das
mull
inc
test
add
sub
jg
mov
lds
flds
sub
add
dec
in
push
inc
roll
fstp
cwtl
out
and
pusha
pusha
lcall
fisttpll
out
add
insl
mov
or
lret
inc
or
in
lcall
ja
test
pop
test
and
mov
push
push
mov
decl
add
dec
add
jp
add
push
mov
push
lods
push
scas
xor
stos
adc
fcomps
ljmp
xor
out
and
add
ljmp
and
jnp
mov
inc
add
decl
jmp
decb
aaa
add
adc
inc
push
fstps
ds
fimull
pop
push
mov
adcb
push
ljmp
adc
adc
xchg
pusha
rcll
adc
ss
fcmovnbe
addr16
ljmp
ja
jmp
push
cs
pop
or
adc
adc
xor
add
lcall
or
jg
dec
inc
sub
and
dec
push
xchg
bound
mov
sbb
mov
test
add
pop
mov
fcomp
xor
jp
push
mov
sahf
call
adc
psubusw
sbb
add
inc
push
push
pushl
add
hlt
sub
mov
or
gs
xchg
cmc
test
scas
jne
jo
dec
lods
dec
in
pop
cmp
cmp
sarb
add
in
addb
std
lods
ljmp
jmp
xchg
fdivl
sub
repnz
push
in
xchg
enter
or
sub
decl
lock
sub
push
xchg
cli
rcrl
sbb
adc
push
push
sbb
and
or
loopne
or
push
push
pop
sahf
cmpsl
pop
bound
in
jp
push
subb
lea
je
and
in
pop
and
and
push
aad
test
pop
xor
push
push
in
sbb
add
and
sub
and
pop
insb
or
and
adc
push
lcall
mov
add
xor
cmpsb
lods
bnd
adc
aam
mov
jmp
or
repnz
or
ljmp
dec
or
fs
xor
pop
or
sbb
mov
movsl
jp,pn
cmp
mov
jle
sti
and
sub
xchg
pop
insb
ljmp
jne
test
or
imulb
cwtl
or
add
in
jecxz
das
fistpll
jmp
jno
or
inc
lcall
jne
jg
jb
jge
add
pop
or
pop
loopne
mov
xchg
addr16
xor
inc
adc
xchg
push
push
or
lcall
sti
pop
xchg
sbb
mov
or
mov
rorl
sbb
clc
incl
add
inc
jbe
mov
jmp
loopne
ljmp
clc
and
repz
push
shlb
fldl
xchg
jecxz
fildl
dec
mov
jae
sub
lock
leave
movsb
stos
xchg
loop
out
icebp
int3
sub
lea
pusha
orl
ret
sub
fbstp
adc
jne
dec
cmp
repnz
add
imul
pusha
mov
mov
cld
popf
mov
nop
das
xchg
cmpsb
lods
and
mov
pop
into
jnp
and
not
push
or
mov
fcompp
insl
add
xor
hlt
les
insl
shl
fcmovne
or
data16
fwait
call
xor
out
movsb
test
dec
inc
adc
and
into
ja
xchg
ljmp
icebp
ffree
cwtl
pop
stc
mov
lret
cmpsl
aas
xchg
lock
cs
cmp
out
inc
je
sbb
push
add
repz
mov
jmp
ljmp
mov
adcl
repnz
jmp
insl
xor
or
ds
adc
sub
mov
jmp
push
jg
adc
pushl
fwait
mov
mov
icebp
insb
ret
or
pop
xchg
mov
andb
add
and
cld
pushl
adc
jne
rorl
sbb
mov
incl
cwtl
push
dec
bound
std
push
incb
adc
xchg
inc
ljmp
xchg
or
pop
sti
or
flds
or
out
mov
dec
dec
lock
or
cli
push
mov
mov
lock
sbb
sub
jp
dec
decl
inc
pop
mov
push
dec
add
mov
pop
jmp
rol
add
lods
lds
jo
dec
add
lcall
pop
push
push
mov
test
arpl
adc
loope
or
cld
popf
sarl
nop
hlt
sub
adc
and
mov
out
push
adc
ret
cmpb
push
jne
mov
mov
xor
jge
cltd
or
jg
add
jbe
add
or
add
orl
sbb
jmp
push
outsb
sbb
roll
decl
decl
lahf
shlb
sub
mov
popf
adc
cmpl
jecxz
imul
push
ret
sar
aam
lea
mov
cli
fidivrs
mov
or
dec
loop
xchg
push
xor
mov
or
sub
mov
jmp
jmp
bound
arpl
cmpsl
dec
addr16
mov
inc
cmp
pop
jle
adc
xchg
dec
jns
neg
mov
xor
mov
jl
jg
and
cmpsb
subb
aam
or
add
movsb
mov
fbstp
push
jne
mov
xor
roll
test
push
stos
sub
dec
adc
out
clc
lcall
sbb
push
ja
cmp
cwtl
dec
push
add
sbb
sbb
cmp
jg
jmp
jecxz
pop
into
mov
xor
jge
in
dec
fstps
xor
loope
icebp
add
adc
icebp
adc
adc
adc
jmp
inc
lock
js
and
stc
lret
fs
lret
sub
xorb
add
xchg
cmp
push
push
jmp
adc
xor
or
add
inc
in
je
dec
rol
mov
jae
fidivrs
je
sub
jmp
mov
add
xor
xor
xor
push
inc
jecxz
lret
lret
pop
or
mov
xor
mov
dec
adc
add
sbb
fadd
cmp
out
push
in
out
xchg
loope
sub
shrl
cwtl
or
out
lret
xor
cmp
jbe
sub
or
pop
and
add
test
ss
in
clc
sbb
sub
push
dec
jno
js
sub
leave
and
inc
jbe
mov
shll
outsb
sub
mov
std
or
pusha
int3
or
jge
sub
sub
mov
adc
js
push
lds
mov
xor
sbb
jne
lds
xor
xor
sbb
inc
jb
sub
loop
jmp
lods
test
out
in
mov
pop
push
cmp
push
xchg
xchg
loop
mov
ljmp
mov
cmpsl
lcall
mov
stos
repnz
push
cltd
movsl
jb
add
loopne
pop
decl
fidivl
pop
and
mov
sbb
rcrb
cwtl
mov
lock
int3
in
mov
cmp
add
fcompl
shl
dec
push
or
sbb
adc
dec
cmp
jge
xchg
fldenv
lcall
push
movsl
push
call
xor
dec
inc
or
daa
xor
out
dec
loope
lret
in
mov
sub
mov
divps
pop
mov
in
sar
mov
push
inc
adc
cmc
jle
ljmp
add
fidivl
inc
lock
add
jo
xchg
shl
xor
ljmp
mov
pop
out
sarl
jg
pop
mov
xor
pop
jmp
adc
jmp
sbb
neg
pop
cmp
data16
mov
pop
push
outsl
cli
dec
inc
jb
push
mov
data16
add
mov
pop
cmp
sbb
mov
sbb
dec
add
insl
add
mov
dec
inc
push
pop
sub
sbb
in
mov
decl
fadd
sbb
cmp
or
hlt
add
scas
jmp
sbb
xor
loope
xchg
cld
push
pop
cmp
xchg
pop
test
out
adc
mov
sbb
data16
mov
incl
aaa
mov
lahf
mov
jg
push
jle
js
cld
ret
ss
add
adcb
push
cli
decl
xor
mov
xchg
decl
neg
push
test
lret
inc
movsb
inc
or
pop
mov
xor
push
mov
pusha
and
ret
jo
out
repz
mov
push
xchg
push
je
insb
lods
ljmp
out
push
hlt
add
call
and
movsb
andb
lods
xor
dec
adc
add
rorl
into
mov
mov
xlat
sbb
inc
add
pushl
cmp
pop
xchg
bound
add
subb
pop
mov
ja
cli
fs
nop
pop
adc
xchg
push
push
repz
inc
or
sub
clc
cmp
pop
ror
or
jmp
add
leave
cmp
cmp
fmuls
aaa
pop
push
adc
loopne
jge
dec
jmp
adc
arpl
jl
ljmp
push
lock
into
sbbl
jg
adc
fldt
adc
sahf
insl
gs
or
jne
sbbl
ljmp
pop
rcll
je
mov
insb
fs
sbb
pop
xchg
jmp
add
or
pop
push
pop
jmp
iret
mov
out
push
mov
xchg
rolb
subl
and
iret
mov
mov
ljmp
out
cli
dec
call
add
jge
decl
or
pop
outsb
sbb
test
xchg
loopne
pushl
mov
xorb
push
push
cmp
mov
mov
cmp
std
out
in
push
pop
jl
aaa
fs
pushf
aaa
std
out
xor
adc
mov
dec
icebp
sub
mov
jmp
idivb
ja
cmp
pop
inc
sub
mov
enter
cmp
cli
xorl
shl
sbb
cld
lods
idivl
xchg
add
push
cmp
jl
jns
mov
jg
shrl
pop
jns
mov
add
xor
lcall
jo
push
mov
fs
adc
xchg
mov
mov
mov
hlt
or
xchg
cwtl
sbb
rolb
stos
xor
add
clc
ffreep
add
imul
add
push
pop
add
pop
mov
sub
jmp
add
cmp
repz
pop
cmp
cli
sbb
bound
outsl
xchg
ljmp
ja
rol
jno
ja
loopne
adc
insl
pop
mov
push
movsl
fimuls
jl
decl
movsl
paddq
hlt
or
xor
and
mov
sbb
fidivrs
pop
nop
stos
mov
push
cs
outsl
aaa
std
decl
sbb
lea
testb
sbb
fsubrl
cwtl
or
lcall
test
jp,pt
add
push
inc
jl
add
fiadds
arpl
cmc
lcall
add
cld
or
decl
adc
xor
or
data16
in
imul
testb
lahf
mov
add
push
mov
or
clc
or
fildll
dec
jecxz
adc
arpl
mov
outsl
lods
xorb
add
test
or
int
mov
bound
jg
ffree
inc
aam
xor
dec
das
mov
adc
pop
cli
jmp
movb
cmp
mov
sbb
test
loop
cwtl
add
xor
pop
xor
ret
mov
loopne
sub
push
mov
push
mov
push
aas
add
add
add
lock
sbb
xor
test
lcall
orb
add
mov
or
rorb
and
sub
fistpll
cmp
jb
add
call
jle
jl
lcall
jb
shr
sbb
sub
lcall
pop
pop
cmpsl
push
movsb
and
pop
adc
push
jne
gs
imul
movl
mov
mov
xor
jns
stos
lods
clc
push
add
test
lcall
lods
imul
cmc
jbe
adc
jne
dec
or
jl
xchg
fucomi
mov
call
push
testl
jmp
dec
add
jmp
cld
repz
negb
add
sub
cmc
push
insl
jmp
sbb
adc
add
in
xor
mov
jne
pop
or
jne
mov
call
or
je
push
inc
fsubs
push
mov
inc
loope
test
out
je
fisubs
imulb
sbb
add
and
inc
loope
ljmp
test
psrlq
dec
mov
add
push
loop
aaa
out
xchg
push
jp
int
orl
aad
movsl
xchg
pop
cs
out
add
sar
test
sbb
arpl
cmp
jb
incl
and
ret
pop
sbb
pop
cmp
jl
lret
les
jg
jmp
push
cmpb
jecxz
mov
scas
cmpsb
inc
jmp
filds
outsl
xor
sub
repz
adcl
sbb
jg
adc
dec
dec
in
sub
jle
or
shl
dec
ljmp
inc
in
fisubl
mov
sub
sub
xchg
sub
and
adc
mov
cmpsb
cmp
or
adc
lock
cs
and
jmp
jnp
mov
pop
fisubs
xchg
xor
mov
adc
faddl
aad
adc
add
call
cld
lret
je
ja
jo
add
fdivl
jecxz,pt
adc
xchg
repnz
mov
sar
or
lahf
xchg
mov
sbb
sahf
and
ljmp
aam
add
into
cmp
clc
cmp
or
xor
mov
inc
inc
adc
ljmp
mov
inc
xchg
pop
je
pop
adc
mov
inc
enter
ljmp
sbb
mov
push
lock
sbb
cmc
insl
stc
add
add
pop
inc
icebp
xchg
adc
aad
je
inc
testb
lea
call
xchg
xchg
cmp
jne
and
jg
mov
sub
ror
inc
jbe
sti
sarl
test
lea
cmp
mov
sub
fwait
ljmp
ret
mov
push
out
xchg
push
movsb
cli
ljmp
sub
sbb
pushf
sti
cltd
jo
pop
mov
mov
pushl
inc
dec
mov
addb
jle
out
lock
cmpsb
popa
push
lea
ret
inc
cld
jmp
sbb
mov
das
xor
sbb
xor
add
das
push
adcl
addl
sarl
mov
jo
dec
jmp
push
jb
push
loopne
std
jne
xchg
aad
lods
popa
mov
icebp
sbb
es
call
sahf
cmp
fimuls
push
cwtl
push
mov
push
sub
push
repnz
mov
inc
push
sub
incl
ror
ljmp
cld
mov
sbb
pushl
adc
push
out
sar
inc
cmp
or
mov
pop
xor
lea
mov
lods
add
adc
ljmp
jmp
out
mov
push
pusha
dec
xor
rolb
xor
not
mov
push
pop
repnz
std
or
dec
shll
jl
lock
repz
test
scas
nop
pop
xor
ja
pop
mov
lcall
xchg
or
adc
xchg
ret
pop
lock
add
pop
lcall
incl
inc
jo
push
ljmp
cmpl
adc
pushf
mov
fmuls
int
sub
shrl
xchg
cs
and
xchg
cmp
cmp
xlat
push
mov
lods
jp,pt
fnsave
jmp
push
aas
cli
mov
clc
jl
push
or
jne
push
xchg
adc
ljmp
and
les
xchg
pop
popf
test
jge
cli
jg
rcl
call
sbb
pop
xchg
ljmp
outsl
mov
clc
and
mov
jne
sbb
and
dec
or
cmp
dec
adc
push
jne
pop
push
pop
pop
inc
sbb
push
fsubrs
in
imul
bound
repnz
cmp
mov
push
mov
enter
mov
adcl
scas
or
sbb
or
adcb
stos
add
dec
push
data16
mov
jmp
jbe
loop
jo
stos
mov
mov
add
or
call
jl
xchg
outsb
or
cmp
push
lcall
mov
enter
fucomp
inc
jmp
fwait
dec
mov
rolb
rorb
mov
mov
decl
sbb
ret
movsb
mov
scas
addb
mov
insl
jp
jl
xor
ljmp
mov
mov
dec
and
shlb
inc
fldt
pop
or
mov
lret
jg
cmc
sub
sub
fwait
mov
and
push
fidivrl
push
mov
notb
add
dec
int
dec
outsb
mov
push
fisttpl
test
jmp
dec
or
fdivrs
jae
jle
dec
call
data16
cld
or
call
or
ljmp
enter
and
fildl
je
xchg
fists
std
flds
test
ljmp
loopne
loope
notl
out
or
cltd
mov
and
roll
cmp
test
sub
jp
mov
out
outsb
ss
cli
aas
xchg
mov
std
enter
es
int3
adc
jns
iret
out
addr16
and
pop
fs
inc
jmp
int
ljmp
pop
leave
push
push
daa
sub
adc
and
xor
lret
leave
in
leave
add
in
add
imul
mov
add
inc
pop
cs
nop
insb
rorl
mov
inc
aaa
repnz
push
push
pop
sbb
mov
pushl
divb
shll
cld
add
jg
dec
adc
sub
incl
cs
or
repnz
xchg
and
mov
jns
mov
std
mov
je
in
cmp
shll
popa
cs
mov
lcall
std
xlat
out
xchg
shll
sbb
mov
inc
xchg
jnp
add
pop
pop
dec
cmpsb
orb
xor
jg
arpl
sbbl
sbb
and
ret
mov
popa
mov
pop
pusha
aam
xchg
fidivrl
add
mov
mov
and
popa
pop
push
jg
ds
pushl
push
aas
das
jb
js
push
pop
out
or
insl
jg
pop
imul
adc
decl
outsl
adc
in
xchg
jb,pn
sbb
imul
lret
sar
lcall
sbb
xchg
push
inc
jne
mov
mov
mov
cmp
stos
push
insl
call
pop
pop
cmp
std
jecxz
add
sub
xor
cmp
xor
out
push
inc
pop
add
gs
clc
ljmp
mov
adcl
aaa
sub
jmp
add
lcall
ret
pushf
push
sub
push
cmpsb
and
cmp
adc
jp
push
mov
xchg
mov
push
adc
mov
push
mov
mov
sub
rcrb
mov
or
cwtl
mov
jle
enter
adc
test
pop
add
inc
xchg
fadds
and
data16
cli
add
and
ljmp
inc
call
sub
mov
add
shll
push
out
mov
addl
decl
add
mov
push
je
shlb
and
or
pushl
mov
push
fldl
cmp
mov
mov
xchg
fisubs
test
jne
xchg
mov
clc
hlt
inc
jns
repnz
or
out
mov
xor
sub
ljmp
out
cld
cmp
inc
sbb
sub
mov
pop
lods
mov
or
es
adc
or
pop
xchg
sbb
cwtl
data16
in
ret
lds
sbb
xchg
iret
push
add
jno
cmp
cld
jmp
dec
lcall
fwait
push
and
or
xchg
pop
jmp
cltd
into
lods
mov
cli
inc
jle
dec
mov
out
ret
jmp
cmp
gs
cli
push
call
and
cwtl
jmp
ret
jmp
js
mov
lret
cli
push
adc
stos
das
dec
ljmp
sbb
push
and
mov
sbb
sbb
sbb
add
ljmp
and
lret
sub
adc
mov
hlt
xchg
sti
call
mov
xor
sbb
out
fistl
ljmp
das
lock
sti
jne
stos
push
add
jg
daa
adc
cmp
and
xchg
and
ljmp
push
clc
dec
xor
pop
dec
movsb
add
lock
adc
push
xor
push
push
pop
xchg
call
jecxz
shrl
mov
cmpsl
inc
cmp
xchg
mov
repz
dec
int3
xor
mov
negl
cmpsl
jecxz
or
lea
dec
fadds
in
into
popa
je
jl
or
fcomip
jbe
inc
push
or
inc
inc
push
outsl
les
jge
pop
inc
pop
cmp
jg
pushl
sub
and
test
movsb
cmc
in
dec
lds
mov
and
repnz
cmpb
mov
push
and
decl
clc
and
fisubs
fisttpl
mov
je
add
movsl
repnz
inc
orb
decl
ftst
lock
hlt
dec
and
jp
push
mov
ss
dec
andb
call
ljmp
imul
jb
xchg
push
mov
push
or
les
or
add
sar
jmp
mov
ds
dec
push
or
add
js
pushf
mov
cmpsb
sarl
incl
or
loopne
jg
and
fwait
ret
dec
dec
add
js
add
xor
data16
inc
push
pusha
sbb
push
adc
ljmp
push
mov
cmp
push
mov
adc
add
cmp
xchg
pop
imul
rclb
jns
adc
das
or
and
xchg
inc
incl
ret
push
add
cmp
orl
lcall
jno
inc
inc
mov
adc
pop
xchg
fcomps
pushl
mov
scas
pusha
loopne
and
inc
inc
popf
imul
movsb
add
into
test
dec
ljmp
in
fdivr
mov
dec
add
sub
sub
pop
data16
lds
fcomip
call
popa
adc
loope
int3
cmp
jl
jae
mov
addl
xchg
mov
or
pop
shlb
vcvttsd2usi
movsb
inc
dec
push
jae
out
je
lods
or
add
adc
sbb
lock
and
incl
mov
adc
int3
or
add
jecxz
incl
ss
push
add
imul
pop
cmp
clc
je
in
sub
decl
cwtl
or
loopne
inc
or
inc
jp
mov
pop
push
addr16
mov
arpl
ljmp
fcmovb
and
or
push
mov
aad
roll
cwtl
clc
or
je
addb
fimuls
je
cmp
pop
outsb
sub
fsts
adc
jle
push
push
pop
loop
pop
fadd
pop
mov
jle
int3
jb
jbe
notl
jb
inc
clc
xor
ljmp
push
ljmp
mov
pushf
push
mov
clc
pop
and
inc
aam
xchg
ss
lcall
data16
fcoml
cwtl
jno
xchg
or
add
xor
jo
popa
push
push
mov
scas
xchg
pushf
je
lds
rcll
add
lods
icebp
sar
mov
bound
in
xchg
xchg
es
dec
add
and
fldt
cmp
pop
test
fdivrp
mov
dec
jo
and
stc
add
out
je
or
loopne
sarl
adc
jecxz
push
mov
mov
test
ret
insb
pop
adc
xor
outsb
ljmp
and
push
cmp
dec
mov
aaa
ss
and
or
insb
jmp
lcall
push
subl
daa
pop
je
cmc
mov
loope,pn
jge
inc
mov
mov
sbb
and
ja
shlb
push
adc
inc
movsb
cmpsl
and
rcr
push
mov
jo
ficoml
test
xchg
push
push
mov
sub
js
mov
inc
rcl
jb
jg
cmp
out
lods
loop
mov
insb
mov
mul
test
fbstp
cld
mov
adc
shlb
jnp
sub
je
mov
sub
jp
and
push
cmpsl
add
pop
push
xchg
sub
jmp
mov
adc
mov
add
xor
adc
fcompl
dec
sub
insb
and
js
int3
adc
iret
sahf
les
popf
xchg
sub
cmp
add
push
adc
andl
or
sbb
add
ja
into
add
adc
inc
lcall
add
pop
sbb
sbbl
fisubl
loopne
jo
xor
pushl
cmp
xorb
xor
and
adc
push
dec
inc
mov
push
fisttpl
mov
dec
add
mov
lcall
clc
mov
ret
jne
negb
cmp
push
mov
cs
mov
mov
add
pop
cmp
jns
mov
jns
cmp
nop
lock
ljmp
test
jge
or
cli
push
cwtl
jmp
cmpl
jl
std
filds
cmp
pop
dec
or
pushl
ror
xlat
mov
scas
je
dec
test
mov
mov
or
incl
push
add
jb
in
sbb
mov
mov
sub
push
decl
lcall
inc
xor
push
fstp
in
adc
jne
xchg
test
rorl
mov
jg
decl
jns
scas
xchg
push
jb
rcl
jne
dec
dec
adc
decl
mov
arpl
cmp
inc
out
adc
dec
ret
dec
mov
jge
dec
dec
sbb
ficoms
das
cltd
push
push
scas
push
cmpsb
jo
xchg
push
test
lea
scas
imul
adcb
sbb
cs
mov
mov
inc
dec
sub
lahf
mov
dec
mov
xor
cmpb
testl
mov
adc
sub
lods
in
mov
dec
cli
xchg
add
out
je
icebp
bound
and
jmp
insb
cmp
ds
or
inc
notl
clc
mov
sti
jmp
ja
or
roll
sbb
decl
jne
adc
cwtl
lcall
and
mov
jle
fsts
adc
hlt
jmp
in
jmp
in
mov
repz
jo
std
stos
insb
mov
data16
xor
in
add
call
fsubrs
flds
push
lods
in
in
sbb
incl
inc
lcall
push
xchg
jge
jg
pushf
faddl
lods
cli
ljmp
adc
repnz
xor
fldenv
add
je
loop
imul
cmp
pop
pop
inc
subl
push
add
xor
ljmp
xchg
repz
xor
and
sbb
add
add
pop
adc
xchg
or
sbb
loope
pop
push
incb
test
scas
jns
mul
ret
cli
pushl
int3
pop
jne
lds
cmpsb
sahf
mov
sbb
mov
aaa
std
clc
imul
test
sahf
push
sub
mov
push
lock
xor
sub
sub
push
inc
aas
cmp
adc
pop
adc
cmp
bnd
sub
push
mov
adc
sbb
jmp
sub
adc
addb
or
subl
push
lea
xor
movsb
add
xchg
jae
or
aad
inc
test
jmp
push
jbe
push
pusha
lcall
fdivrl
pop
mov
pop
fsubr
fldt
push
pop
and
mov
dec
std
pop
cmpb
sub
pop
icebp
jne
fstps
lock
stos
ljmp
je
pop
mov
dec
mov
hlt
add
pop
cmp
test
arpl
call
push
pop
jmp
adc
enter
adc
and
jne
hlt
incl
in
jns
jge
push
xor
jmp
or
jne
inc
je
pushf
lock
mov
xchg
stos
push
adc
mov
add
add
ljmp
jo
es
sbb
mov
jge
divb
popl
push
jl
sbbb
clc
ljmp
adc
clc
hlt
sub
cltd
add
mov
jp
cmp
mov
or
and
dec
cmp
fdivl
or
pop
adc
ljmp
pop
enter
and
loopne
in
movsb
movsl
pushf
xchg
fmulp
xchg
and
icebp
decb
pop
jne
lock
mov
je
jmp
mov
ret
mov
mov
in
nop
sbb
enter
out
jnp
pop
pop
clc
cltd
cld
loopne
in
adc
mov
test
into
lcall
fsubs
popf
js
fsubrs
or
pop
cmp
loope
jb
data16
xchg
jmp
int
iret
cmp
pop
iret
addr16
loopne
or
mov
jg
pop
xchg
popf
rorb
mov
cmc
rcrb
mov
push
stos
fadds
jmp
pop
in
ljmp
dec
inc
std
daa
cmpb
stc
rclb
cmp
push
cmovne
jle
ljmp
inc
and
push
cmp
or
sbb
pop
xchg
repnz
jns
mov
popf
lock
lcall
sub
addb
jo
repnz
and
push
loopne
call
lret
xchg
sbbl
xchg
inc
lods
jg
imul
insb
fucom
mov
xor
sub
xchg
push
or
add
icebp
xchg
dec
mov
xor
dec
test
sti
mov
add
pop
push
clc
rcll
mov
and
mov
pusha
pop
and
shlb
ret
shrl
incl
add
jp
add
cld
push
sbb
and
and
das
js
or
das
push
loop
xchg
inc
daa
stos
mov
sub
ja
adc
adc
ljmp
mov
xor
mov
xor
dec
sbb
sbb
push
incl
mov
jmp
out
adc
and
inc
outsb
adc
in
xchg
pop
addr16
loopne
xchg
jo
inc
add
std
jmp
mov
mov
dec
ret
and
dec
inc
es
decl
imul
mov
lcall
and
pushf
movl
dec
fcoml
push
lcall
lods
mov
sbb
or
icebp
cltd
aas
pop
repz
daa
add
xor
cmp
sbb
pushl
loopne
jmp
movsl
lds
incl
xchg
jg
sub
repnz
call
outsb
insl
mov
sbb
adc
xorl
ds
and
std
cli
sub
ja
xchg
je
lret
xor
pop
in
clc
lods
xchg
out
mov
xchg
pop
push
lock
jmp
outsb
sbb
adc
js
add
es
or
xchg
mov
sub
jne
push
inc
dec
mov
clc
add
scas
out
repz
mov
int
lock
fidivrl
loop
lea
and
movsl
ljmp
addl
stos
inc
inc
je
dec
je
add
and
insb
dec
mov
lahf
mov
add
jg
jne
pop
dec
jge
add
cmp
jmp
push
sbb
push
test
mov
xor
inc
inc
xor
mov
adc
aaa
and
jne
adc
inc
sbb
fwait
outsl
jmp
jo
fsubs
pop
js
mull
scas
out
and
rcrb
insb
cmp
imul
jne
ds
dec
je
adc
daa
xchg
test
insb
lods
adc
or
add
sbb
push
nop
cmpsl
push
and
mov
mov
repnz
xor
xor
jnp
imul
in
das
inc
and
mov
sub
loope
xor
sub
mov
icebp
mov
dec
add
add
sbbb
in
call
call
ret
mov
cld
jmp
xchg
mov
push
adc
pushl
mov
call
scas
in
cli
ficompl
sarl
dec
xor
das
rcrb
and
pop
sbb
test
enter
xchg
pop
hlt
in
jecxz
push
leave
enter
dec
sbb
outsb
push
shrb
nop
jns
cmp
scas
stc
inc
jg
jmp
mov
inc
lods
bound
jnp
icebp
jb
adc
ret
loope
sar
int
or
lods
mov
rcrb
fwait
sub
push
imul
sbb
insl
xchg
dec
add
xchg
test
sbb
adc
repz
jo
icebp
in
clc
cmp
push
stc
xchg
dec
jp
mov
sbb
fimuls
test
jg
out
es
or
push
xor
shrl
cli
je
popl
pushf
js
imul
adc
or
dec
cmp
ljmp
add
xor
dec
sbb
cmp
movsb
fadds
jp
inc
lcall
jmp
adc
jl
cmp
and
xor
xor
clc
cmp
mov
mov
bound
sub
jmp
jecxz
shl
lret
push
or
adc
cmp
jne
clc
iret
push
in
call
push
ret
pop
mov
dec
push
mov
add
movsb
andl
lock
jecxz
dec
jno
and
mov
dec
in
sub
nop
stos
jecxz
or
fldl
jle
dec
or
pop
jmp
lret
mov
inc
adc
adc
fstps
call
pop
ret
mov
insb
inc
fisubs
iret
add
rolb
aas
or
pushf
bound
imul
mov
jge
xor
push
sar
jg
scas
movsb
daa
adc
orb
jg
movsb
addb
add
test
add
sub
loopne
mov
daa
add
in
ljmp
shlb
pusha
inc
and
adc
stc
inc
adc
iret
xor
mov
incl
lock
xchg
iret
nop
mov
ficompl
pop
xchg
cmpsl
lcall
mov
jb
incl
push
ret
add
mov
push
jecxz
jbe
loopne
xchg
sub
add
mov
into
int3
jne
sub
call
lea
push
js
jns
add
orl
mov
imul
roll
sub
insl
lods
in
pop
mov
lcall
jns
nop
fisttpll
test
lcall
mov
fcoms
fucomi
shr
rcrb
xlat
push
pushf
push
icebp
stc
imul
ljmp
out
or
mov
push
jmp
icebp
push
xchg
in
ficoml
ljmp
mov
lods
and
aam
mov
push
xor
pop
dec
fwait
test
inc
adc
mov
xor
les
lret
movsb
pop
loopne
or
inc
mov
incl
inc
jle
jg
lods
jge
sub
pop
stc
inc
cmp
les
aas
xchg
cmpb
xor
decl
movsl
lea
pop
rclb
imul
push
mov
in
dec
pushl
xor
mov
mov
adc
sub
sbb
mov
push
shll
dec
insb
sub
pushl
dec
dec
shll
and
rclb
push
js
sub
sbb
mov
xchg
fdivs
jge
jmp
xor
orl
pushl
ja
test
xchg
lock
mov
sahf
sti
or
cli
jmp
or
push
inc
pop
es
mov
mov
adcl
cs
sbb
faddl
push
inc
sub
pop
xor
nop
or
xor
xchg
adc
in
and
ljmp
cltd
sub
mov
inc
ret
dec
ja
fdivrl
push
adc
scas
pop
mov
pop
clc
mov
pushf
or
xorl
leave
scas
mov
sub
push
rorl
decl
push
pop
push
ficomps
push
scas
sbb
test
pushf
xor
out
in
lods
ret
mov
pop
cmpsb
xchg
adc
test
adc
jge
lds
bound
cmp
bound
je
aas
jae
add
stc
add
or
lret
test
jbe
test
jg
pushw
push
jbe
jne
lds
push
sub
fcmovb
inc
jae
adcb
mov
jns
pop
or
pop
inc
fcomps
icebp
insl
jnp
xchg
lods
decl
mov
decl
sub
addl
push
rcrl
rcll
lcall
xor
ret
daa
int
inc
ljmp
dec
imul
fsubrs
addb
cli
dec
dec
pop
and
out
xchg
movsb
push
call
xor
and
mov
pop
inc
push
fadds
mov
loopne
aaa
sbbb
pop
fsubrl
mov
pop
mov
mov
inc
mov
pushf
aam
imul
push
icebp
mov
call
decl
scas
imul
jo
aas
icebp
je
into
cmp
mov
add
jno
movsl
fidivrs
insb
cltd
shll
or
pop
sub
dec
xchg
mov
and
jmp
out
sub
push
cmp
sbb
mov
mov
add
sbb
xchg
cld
mov
in
jmp
inc
insb
sbb
mov
pop
test
shl
mov
mov
mov
cld
sub
aaa
repz
jg
push
add
adc
mov
jne
sbb
inc
stc
pop
je
jo
push
inc
adc
or
mov
call
xchg
lock
sbb
push
jbe
inc
imul
inc
inc
cmp
jmp
pop
clc
fidivrs
or
jle
loopne
in
add
shll
arpl
gs
mov
push
outsb
xchg
daa
inc
fbld
push
rcll
enter
jg
sti
mov
and
mov
dec
mov
addr16
add
push
les
pop
add
adc
jne
xchg
rolb
xchg
ljmp
sahf
sbb
mov
adc
cmpsl
bound
mov
int
xor
pop
hlt
incl
lods
mov
add
decl
scas
cmp
je
testl
aad
mov
xor
in
orl
fistpl
outsl
cli
pushl
or
xchg
dec
and
std
sahf
add
fisttps
mov
scas
shlb
adcb
dec
dec
push
mov
add
sar
inc
and
addl
cmp
ret
clc
lea
inc
mov
jg
mov
leave
inc
imul
daa
inc
pop
push
inc
cmp
push
cli
cmpl
test
adc
push
lock
xor
ds
mov
js
cs
fbld
dec
pop
sbb
andb
pop
mov
pop
add
dec
pop
jb
pop
lret
outsl
add
clc
mov
test
xor
rcrb
std
movsb
mov
je
fsubl
popa
push
xchg
stc
push
pop
dec
push
push
mov
decl
fstpt
sub
pop
test
sbb
jae,pt
push
shrb
cmp
insl
test
mov
test
ljmp
aas
call
enter
sub
add
pop
mov
pop
push
stos
incl
and
ret
sbbl
sti
xchg
test
cmc
adc
shrb
and
xchg
xchg
pop
mov
push
cmp
imul
and
ficoml
rolb
fsubrs
jl
rol
out
xlat
sub
loopne
jae
xchg
sub
pop
roll
adc
enter
ror
movsl
clc
enter
pop
cmc
sub
mov
in
push
push
sbb
and
hlt
call
push
fdivrs
jmp
mov
fbld
dec
je
cltd
outsl
xor
mov
pusha
cmp
andl
movsl
pop
mov
paddb
jmp
sarb
xchg
movsl
imul
icebp
or
addb
scas
add
mov
loop
mov
int3
rcrb
call
in
lahf
mov
push
or
test
sbb
pop
dec
int3
enter
orb
mov
js
mov
cltd
adc
sbb
leave
call
in
movsb
scas
loopne
mov
xor
jb
cmp
ljmp
cmpsb
insb
xchg
pushw
pusha
clc
int3
test
push
adc
dec
cltd
pop
testb
scas
mov
adc
cmc
mov
jp
dec
mov
aaa
xor
mov
pop
int
leave
xor
ss
mov
push
push
jb
rep
ljmp
cli
lock
dec
jl
cmp
adc
cld
or
jmp
mov
jecxz
xchg
scas
xchg
fsts
fsubrl
mov
fwait
or
ljmp
neg
xor
sub
dec
or
je
movsb
mov
call
pop
cld
pop
sar
adc
add
jg
pop
fisubrs
fimull
and
or
cmc
push
pusha
add
inc
out
add
lret
rcrl
mov
rcl
fsubl
push
je
in
test
jg
roll
and
mov
add
mov
hlt
dec
mov
pop
and
fstps
push
jl
pusha
and
ret
loopne
lret
and
jnp
out
xor
outsl
lret
enter
cmpsl
les
sub
adc
dec
adc
outsb
mov
fistpll
cmp
cwtl
cwtl
push
pop
shll
mov
js
lods
jo
jmp
pushl
lods
xchg
mov
dec
fistl
mov
rolb
call
ds
or
inc
or
mov
xchg
or
subl
and
jb
mov
push
movsl
cmp
xchg
adc
sbb
or
pop
jmp
mov
or
mov
call
sub
mov
or
pusha
mov
push
jecxz
sbb
outsl
nop
inc
xor
rcrl
xor
mov
data16
je
dec
mov
popa
add
sub
lods
imul
outsl
leave
in
inc
ss
aaa
xlat
cmp
into
loop
xchg
and
dec
call
push
test
andl
bound
sbb
popa
cmpsl
mov
mov
sarl
mov
inc
push
add
in
outsb
push
mov
into
in
dec
push
gs
dec
sub
repz
mov
push
fcoml
push
lods
dec
and
add
out
push
sub
push
lret
aad
mov
cmp
gs
jl
jb
inc
xor
or
inc
pop
and
test
push
sbb
adc
dec
push
xchg
sbb
or
ljmp
orb
add
test
inc
lahf
jl
inc
push
inc
std
push
add
rcrb
or
ljmp
xor
bound
shll
xchg
and
or
jecxz
xor
or
rorb
pop
fs
es
insl
in
add
and
mov
push
jg
out
bound
test
insb
xchg
clc
or
fwait
cmpsl
lock
xchg
pop
xor
js
mov
mov
push
inc
mov
lods
sti
cmp
jne
mov
dec
pop
cltd
xchg
push
inc
inc
addr16
dec
push
push
mov
xchg
mov
pop
or
clc
rorb
jo
and
mov
mov
add
incb
add
clc
cmp
lods
or
lcall
jge
stc
frstpm(287
pusha
movsl
inc
fxch
frstor
sub
dec
xor
inc
pop
inc
adc
push
add
jbe
push
add
fimull
leave
movsl
mov
add
mov
push
xor
or
rol
dec
ljmp
sub
orl
fiadds
cmc
movsl
out
cmpsb
scas
scas
loopne
xor
lock
arpl
lcall
lcall
xor
cld
lock
or
mov
lea
push
sbbl
lcall
outsl
mov
cld
test
mov
sbb
jno
or
adc
jecxz
addps
test
decl
adc
jnp
inc
sub
loopne
or
ret
mov
ljmp
mov
mov
cltd
fildl
sub
dec
xchg
jb
fldl
and
cmp
movsl
or
int3
or
icebp
lea
cmp
popf
aad
shrb
scas
insb
push
push
dec
sbb
fistpll
loopne
cmp
sub
loopne
cmp
pop
stc
pop
push
xchg
inc
pushf
dec
ljmp
push
faddl
aas
cmpsl
inc
mov
and
cmc
inc
jg
dec
or
dec
sbb
push
les
push
je
icebp
cmp
and
jl
or
imul
sub
call
iret
aad
pusha
adc
adc
or
insl
shll
and
adc
jne
dec
aas
jne
jno
cmp
lock
pop
cmp
sub
sbb
add
xchg
rolb
or
call
dec
push
cmp
lcall
daa
cwtl
pop
xchg
loope
cltd
jae
rclb
sub
ljmp
fisttps
fistps
shr
cmp
mov
add
push
dec
sbb
or
pop
mov
push
test
pop
rcrl
cmp
cmovp
sarb
cs
cmp
ret
in
decl
inc
mov
cli
ss
sbb
jle
sbb
xor
pop
push
ljmp
add
sti
sub
fstpl
rcrl
arpl
sub
lcall
push
mov
mov
js
sub
movsb
dec
jle
pop
inc
inc
add
mov
pop
lcall
ljmp
incl
rcrb
mov
dec
adcl
xchg
jmp
push
pop
bswap
and
adc
ja
adc
clc
pop
and
aaa
adc
and
sub
ret
mov
rcrb
or
inc
mulb
xor
stos
mov
mov
pushl
mov
and
jbe
mov
jg
jo
or
add
lret
out
or
std
incl
lea
mov
fisubrs
push
push
jl
rcrb
cmp
nop
or
jmp
mov
and
dec
loop
xchg
jge
inc
and
lcall
inc
cltd
ret
pop
test
pop
push
mov
hlt
push
inc
mov
and
and
pusha
inc
dec
and
inc
nop
call
inc
xor
or
inc
mov
xchg
ljmp
outsl
ret
js
and
cld
dec
scas
test
push
pop
xchg
push
mov
push
decl
push
pop
mov
xor
jne
and
sbb
push
aaa
or
push
inc
cmp
jp
js
fdivs
cmp
and
pushf
ret
cmp
push
shrb
sub
test
cmp
loope
adc
pushf
mov
es
imul
adc
sbb
arpl
pop
pop
mov
gs
push
fmuls
js
decl
fldenv
sbb
mov
pushl
cmc
fwait
push
incl
rolb
mov
mov
xchg
add
sub
jle
mov
test
inc
push
mov
in
mov
dec
call
call
or
leave
aaa
mov
mov
cmp
mov
mov
lock
sub
xlat
jmp
incl
adc
sub
push
loope
and
or
cmp
sbb
xchg
cwtl
cli
push
sbbb
add
xchg
imul
xchg
pop
xchg
jmp
pushl
jnp
hlt
xor
add
enter
add
lcall
adc
mov
fsub
push
mov
pushl
mov
rcrb
ljmp
jnp
jmp
popa
mov
push
cld
decl
dec
mov
sbb
push
orl
loopne
jne
lods
les
fstps
pop
inc
and
fwait
or
js
adc
nop
lods
sub
sbb
jns
lods
ljmp
decl
xor
adc
mov
ds
imul
pop
in
cmp
mov
decl
pop
dec
rol
dec
xchg
mov
or
cmp
stos
jg
sbb
or
sbb
repnz
mov
enter
incl
lods
call
cmp
push
nop
mov
out
notb
mov
test
pushl
xchg
adc
aam
and
enter
aaa
inc
ror
mov
sar
mov
in
pop
lods
or
sbb
call
xor
sbb
in
inc
jl
ret
fisubs
pop
gs
testl
insl
fnsave
push
adc
sbb
adc
adc
lods
andl
jne
sbb
imul
leave
xchg
stos
xor
ret
les
cmp
insl
loopne
xlat
or
pop
pop
inc
nop
xor
adc
hlt
and
insl
mov
fwait
xor
adc
inc
add
je
fmull
cmp
mov
and
ds
decl
packssdw
mov
lea
cmp
xor
int3
inc
cld
addr16
hlt
pushl
sbbl
and
jbe
cmp
out
mov
pop
mov
jg
in
pop
mov
leave
das
jb
jg
inc
cmpsl
aas
adcl
je
out
decl
inc
mov
aaa
jmp
xchg
ret
add
cli
jmp
sbb
add
ljmp
dec
push
push
ss
int
push
pop
jne
dec
inc
pop
nop
push
jb
mov
mov
mov
rorb
aam
adc
sub
sbb
sbb
pushl
hlt
push
or
loopne
imul
push
rolb
push
mov
sbb
dec
cmpsb
mov
or
movsb
add
pusha
out
jl
mov
in
dec
cmp
cli
jnp
inc
pop
movsl
clc
gs
inc
ss
sbb
xchg
sbbb
mov
inc
decl
jmp
add
arpl
lock
std
cmp
add
sbb
pushf
cld
mov
add
xchg
cld
add
mov
mov
mov
dec
lcall
popa
mov
lods
aaa
inc
bound
lock
xchg
sbb
mov
mov
decl
jle
mov
add
inc
js
and
into
ljmp
and
pushf
dec
push
push
sub
test
inc
sub
lahf
test
lcall
mov
sub
mov
enter
jg
lret
xor
repnz
in
je
ljmp
jne
int
mov
mov
dec
jg
aad
out
jge
gs
incl
cld
or
pusha
adc
add
cmp
xchg
rcrl
lods
aas
xchg
jg
ljmp
popa
mov
dec
aas
mov
out
cmp
in
mov
pop
sahf
mov
clc
jno
cmp
outsb
or
outsb
cmp
jg
pushf
adc
ror
in
dec
inc
push
push
je
ss
inc
dec
test
test
cmp
mov
push
sbbb
xchg
sub
stos
and
cld
fwait
jb
and
imul
jmp
cmp
insl
cld
lret
es
jo
pop
aad
hlt
popa
bound
jg
push
call
push
js
jnp
cmpxchg
lea
xor
lock
jo
ret
jne
and
decl
ljmp
and
test
xor
cmp
mov
jecxz
mov
fstpt
mov
cmp
scas
movsb
pop
rcrl
aas
mov
ret
scas
stos
sub
lcall
cs
jnp
test
xchg
and
cmp
mov
mov
outsl
cmpsb
xlat
jle
pop
mov
lcall
icebp
jmp
mov
and
sub
std
mov
adc
push
jne
in
js
fst
push
stos
and
ret
decl
movsl
cmp
cmp
xchg
jmp
in
std
push
movsb
aas
jecxz
adc
ljmp
push
mov
push
decl
call
out
mov
dec
add
add
adc
fnstsw
push
sub
push
sbb
cs
add
add
ljmp
in
jle
dec
icebp
push
clc
loopne
mov
rcrb
aas
decl
daa
pop
sbb
mov
jnp
add
pop
insl
push
lahf
popf
mov
ljmp
pushf
cmp
jae
lock
fdiv
xor
jnp
cmpb
mov
ljmp
jl
or
test
xor
jne
push
push
and
cwtl
mov
loopne
push
push
enter
call
mov
sbbb
lret
jmp
aad
mov
decl
push
addl
sub
scas
push
fwait
insl
call
out
inc
sbbl
ljmp
push
add
jge
test
flds
sub
lcall
xchg
cltd
fcoms
in
call
fwait
stos
and
xor
mov
prefetchwt1
push
shl
push
shrb
sub
lcall
pop
sti
xor
fptan
and
clc
movsl
jge
jle
jmp
push
stc
or
sub
ljmp
mov
lcall
or
in
jmp
push
popa
test
jae,pn
add
cmp
mov
add
push
lds
nop
xor
adc
or
outsl
pop
adc
cmp
mov
mov
xor
xchg
or
std
sub
sbb
pusha
mov
or
jg
adc
lds
lea
and
push
or
cmp
jns
fsubrs
lods
shlb
fnstsw
mov
adc
in
lret
add
dec
mov
ss
pop
add
adcl
or
adc
inc
sbb
call
orb
dec
inc
push
mov
cmpsb
pop
outsl
adc
push
dec
dec
jo
pushl
add
push
push
jo
adc
add
orl
add
call
pop
mov
ljmp
lahf
loopne
inc
cmp
xor
jmp
inc
subb
lcall
push
mov
out
std
insb
sbb
dec
xor
movsl
lret
aas
ljmp
lea
sub
mov
mov
mov
push
add
popa
sub
gs
rolb
jmp
push
cmp
hlt
inc
or
add
lcall
mov
push
push
adc
adc
add
xor
rcll
jecxz
call
and
hlt
and
mov
inc
pop
fmull
shll
enter
xchg
pop
fisubl
aam
add
mov
lret
decl
iret
push
xchg
loopne
xor
xchg
xor
push
test
push
push
and
xchg
xchg
xchg
pushf
mov
pop
incl
cmp
leave
mov
push
cmp
or
insb
add
sub
scas
cmp
cs
mov
int3
cmp
adc
jbe
sub
or
mov
xchg
mov
jg
and
push
andl
mov
xor
ljmp
mov
pop
mov
js
or
and
mov
outsb
aas
sub
jg
loop
inc
mov
dec
or
pushl
push
ljmp
push
jecxz
mov
ret
mov
inc
test
cmp
rorb
push
sub
decl
inc
in
decb
jne
dec
in
cmp
push
dec
notb
xor
adc
sub
add
jae
mov
fidivs
es
sbb
cli
jbe
inc
cwtl
stos
fs
cmp
and
sub
lret
adc
mov
psrad
add
ljmp
sbb
mov
xlat
leave
in
push
and
jb
push
pop
dec
roll
out
pop
add
and
pop
hlt
decl
stc
ds
adc
or
inc
data16
push
adc
rclb
shlb
ss
and
inc
out
push
push
fistpl
inc
outsb
das
shrb
push
dec
into
xchg
jo
sub
es
movsb
cs
dec
pushl
das
lcall
cmp
repz
cmp
inc
and
push
inc
inc
inc
sbb
and
inc
or
dec
imul
ss
and
pop
mov
fs
lcall
dec
push
cmp
lcall
xchg
fstpt
inc
pop
jns
jb
xchg
dec
test
scas
inc
lret
aad
inc
mov
nop
inc
and
mov
leave
gs
cs
fcmovnb
inc
mov
adc
xor
incl
xchg
test
or
sub
enter
mov
lea
repz
xchg
add
xor
enter
pop
add
sahf
mov
ss
sti
jg
mov
pop
fsubl
mov
sub
into
scas
shrb
repz
das
mov
xor
inc
es
out
idiv
popa
shrl
xchg
add
inc
repnz
mov
xchg
mov
dec
mov
dec
jecxz
scas
sub
sbb
jg
mov
std
stos
adc
cmp
leave
aaa
and
cmp
cmp
inc
nop
fisubrs
or
clc
sub
outsl
fildll
mov
in
mov
dec
popa
inc
popa
dec
or
dec
sub
mulb
xchg
ljmp
push
fwait
pop
xor
xchg
pop
xlat
push
out
pop
add
std
pop
and
pusha
sub
xlat
sub
in
or
sub
or
stc
jno
int
leave
add
pop
adc
mov
std
adc
ss
jne
or
mov
and
xor
push
cmp
sub
jne
or
push
push
lret
loope
iret
outsl
or
insb
outsb
js
addl
test
imul
cltd
fs
xchg
cwtl
pop
into
cltd
add
out
and
inc
iret
fs
shlb
lret
xor
mov
xchg
sbb
mov
dec
fsub
in
dec
add
in
fwait
loopne
aam
xor
leave
repnz
add
jbe
add
jo
jl
and
adc
sbb
aad
sub
in
push
fldenv
cs
gs
cmpsb
sbb
mov
ljmp
inc
push
in
pop
cltd
in
lods
mov
dec
lods
cmp
rol
mov
movsl
xlat
lcall
add
xchg
into
mov
aam
shl
dec
jecxz
int
loope
fwait
xor
fwait
int3
faddp
cltd
sbb
movsl
mov
xchg
mov
adc
out
mov
mov
sbb
add
pop
je
pop
fisubs
pop
ljmp
mov
inc
xor
pop
or
xor
jbe
cmp
mov
ljmp
pushl
pop
xorl
out
and
jo
sbb
dec
std
ror
test
lcall
fs
xchg
push
lods
cmp
pushf
cli
daa
add
js
adc
pop
popf
lcall
leave
cmp
dec
pushf
ret
lods
mov
xchg
dec
decl
sahf
dec
sub
jns
sarb
or
xchg
push
jp
inc
cld
in
stos
ds
decl
jbe
push
mov
push
lss
mov
or
aaa
outsb
movsl
outsb
jl
imul
add
xor
dec
bound
decl
adc
test
xor
jg
aad
sub
pushl
push
sti
xchg
jo
lret
dec
and
inc
or
dec
aam
add
jg
sub
adc
and
mov
popa
mov
or
cmp
or
decl
dec
xor
xchg
out
mov
roll
arpl
icebp
sbb
incl
sbb
add
sub
cmp
repz
imul
add
or
leave
in
add
lea
aaa
mov
in
sbb
and
xor
mov
push
sub
fwait
les
inc
out
addr16
dec
rorb
and
and
ljmp
in
sbb
stos
or
xchg
ja
loopne
nop
insb
iret
mov
mov
arpl
pop
stos
cmp
adc
adc
nop
cmp
adc
subl
mov
mov
push
sbb
nop
xor
rcl
push
and
out
pop
int
sbb
sub
faddl
sbbb
xor
mov
and
dec
out
sub
push
lahf
push
push
orb
shlb
out
add
stos
xchg
mov
dec
xchg
es
xor
pop
mov
lret
push
pop
push
icebp
or
mov
ds
mov
roll
lret
inc
dec
mov
outsb
stc
push
add
sti
sbb
popf
jecxz
or
cmc
ja
mov
add
je
or
lcall
xchg
cs
xor
popf
fdivrs
sbb
add
test
mov
push
push
xchg
in
cltd
es
and
mov
bound
cli
imul
jmp
stc
out
push
push
imul
cmp
mov
sbb
icebp
add
dec
lcall
test
mov
xchg
jo
pop
xlat
decb
cld
push
or
imul
inc
mov
jmp
std
sbb
imul
insl
pusha
dec
pop
rorb
inc
mov
xor
std
in
ljmp
andb
lret
lret
sub
js
xchg
out
rcrb
and
pop
adc
or
incb
fcom
pop
js
inc
adc
sbb
cltd
pop
loope
mov
repz
lcall
mov
sbb
sbb
push
movb
or
mov
adc
es
aam
mov
xor
nop
xchg
push
loopne
jmp
ret
test
add
jmp
hlt
lock
sub
rcrb
dec
xchg
movsl
insb
nop
mov
lcall
ljmp
jle
mov
adc
es
popf
dec
sbb
xor
aas
sub
and
decl
mov
jmp
sar
loope
rorl
inc
dec
insb
adc
sar
incl
stc
in
mov
movsl
fstpl
aas
or
shrb
fbstp
daa
mov
xor
push
pushl
xchg
adc
ljmp
add
iret
xchg
jbe
xor
fidivrs
pushl
inc
fiaddl
dec
cmp
test
dec
je
dec
hlt
and
sub
push
mov
pop
inc
inc
pushl
pop
push
push
ljmp
es
cmp
push
aas
icebp
popf
and
jns
push
sub
sub
jmp
test
or
fmull
push
or
negb
sarb
clc
dec
fs
mov
pop
mov
in
ljmp
hlt
lcall
jmp
std
sahf
adc
cwtl
push
pushf
jno
scas
adc
xor
out
lret
add
push
enter
jmp
mov
test
mov
test
daa
clc
push
xchg
add
or
insb
inc
call
jmp
xor
popf
ljmp
decl
and
imul
repnz
add
inc
push
add
data16
cmp
loopne
lock
pop
pusha
and
inc
lret
xor
or
je
push
jmp
cmp
sbb
fs
add
cmp
adc
outsl
mov
jl
in
ss
ljmp
fs
mov
push
add
sub
decl
inc
xor
push
pop
cwtl
je
and
xor
jp
addr16
rol
rorl
push
pop
sbbl
jp
scas
pusha
imul
mov
repz
dec
fldl
adc
decl
sub
mov
pop
sbb
int
adc
pop
cmp
pop
shr
incl
adc
lods
pop
adc
rorb
mov
xor
cmp
decl
leave
mov
je
call
jl
xchg
mov
roll
sbb
pop
xor
stc
adc
lcall
add
cmp
mov
popa
adc
cmc
dec
cmp
popf
shufps
cld
decl
imul
xchg
pop
movsb
lds
lock
push
inc
filds
mov
inc
fnstcw
push
ret
sub
or
fisubrs
insb
inc
jne
ljmp
lods
nop
addb
int
sub
pop
les
push
push
fbld
jns
push
jle
clc
adc
fdivrp
jg
push
into
ljmp
popa
mov
es
mov
test
jmp
cmpl
add
pop
enter
mov
sub
scas
dec
lock
sbb
subb
mov
add
rcll
add
shlb
sub
push
repnz
stc
loopne
hlt
push
push
bound
jmp
lods
sub
xor
es
std
js
outsb
scas
xor
cmp
add
jmp
negl
push
jmp
scas
mov
mov
and
pop
pop
mov
jmp
call
les
or
out
sbb
push
jmp
push
jae
loope
out
cmp
mov
popa
cmpsl
mov
xchg
ja
cs
sub
in
fsubrs
or
pop
or
js
push
ret
pop
xor
cmp
xchg
and
aam
inc
addb
jg
and
inc
xchg
cltd
or
into
push
loopne
or
cmp
or
mov
lret
jne
adc
test
or
sbb
icebp
jmp
clc
test
pop
movsbl
push
adc
lcall
mov
adc
jmp
test
push
dec
mov
std
dec
mov
mov
inc
jb
iret
pusha
rorb
xor
xchg
jne
mov
inc
pop
stos
inc
adc
mov
lcall
sbb
and
cmp
sub
out
sbb
shll
nop
int
xor
inc
mov
fcomip
inc
rcrl
add
sbb
inc
inc
shr
cmc
add
lods
ljmp
pop
subl
in
inc
fsub
jnp
ret
adc
xchg
pop
pop
jg
aam
movsb
bound
decl
push
jmp
es
sbb
gs
cmp
sbb
mov
je
fistps
popf
jl
cmp
lock
sarl
mov
stc
fldcw
inc
pop
fs
aad
nop
dec
test
xchg
adc
push
push
imul
pushl
test
sub
out
xor
add
adc
jge
dec
push
bound
inc
or
push
insb
push
iret
lods
outsl
xchg
cmp
and
bound
psubq
mov
test
push
lcall
cmp
or
sub
lret
lret
fisubrs
sub
or
cmp
frstor
add
adc
test
ficoml
pop
mov
and
push
pop
push
push
inc
adcl
ljmp
mov
divl
or
adc
inc
adc
or
stos
pop
add
mov
jg
mov
jmp
and
fldcw
loopne
xor
call
add
mov
and
add
add
fsts
dec
or
inc
inc
pop
mov
push
call
sub
xchg
cs
lret
idivl
or
js
dec
inc
popf
mov
add
loopne
mov
inc
sub
pushl
fisttps
pop
push
jg
adc
in
shr
inc
jbe
ret
and
test
decl
pop
fcomps
xchg
insb
fsubrs
jno
add
loopne
jl
or
pop
rcll
loopne
subl
or
sub
test
ljmp
push
mov
xchg
and
mov
mov
pop
in
subl
sti
sahf
rorl
jle,pn
jle
lods
xchg
xor
fcomip
cmp
ficompl
lock
add
xchg
sub
rcrb
xlat
lods
mov
ffreep
xor
fcompl
mov
rcll
jg
add
inc
outsl
dec
adc
xor
andb
mov
aaa
fucomip
and
pop
push
bound
dec
dec
loop
fsubr
mov
sbb
or
pushl
or
mov
loopne
push
mov
popf
xor
pop
add
and
lea
mov
out
mul
les
clc
adc
and
mov
js
decl
pushf
sub
leave
xor
dec
fiadds
fistpll
fs
sti
cmp
in
mov
dec
out
or
loope
daa
in
or
adc
sub
lcall
sbb
repnz
out
ret
lea
and
inc
adc
pop
sbb
push
sar
mov
push
xor
rol
pop
int
insb
or
enter
aam
int3
pop
rcl
dec
jmp
imul
lcall
lret
leave
dec
pop
mov
add
inc
jmp
mov
call
popf
repz
pop
push
testl
int3
addl
pop
push
xchg
xor
imul
inc
add
add
imul
fbstp
daa
andb
mov
fisttpl
mov
cmp
sti
movsl
sub
or
cmpsb
xorb
xchg
lock
sbb
lock
shl
mov
inc
cmp
pop
mov
in
push
adc
mov
mov
jb
pop
dec
jle
mov
adc
pop
mov
push
xchg
or
decl
ljmp
xchg
jbe
test
roll
push
mov
xchg
mov
call
rol
ret
pop
ds
fistpll
xor
and
nop
mov
and
ljmp
mov
fidivs
mov
dec
in
cmp
xchg
leave
inc
ja
ret
popf
push
xor
xchg
rcll
ljmp
sbb
mov
lods
and
jne
xchg
nop
ljmp
out
dec
pop
lret
cmp
sbb
xchg
jnp
jmp
cmpl
sub
lea
inc
pop
test
cmpsb
shll
cld
gs
lar
mov
adc
test
shlb
mov
inc
cmp
ja
dec
sti
aad
add
sbb
incl
enter
loop
lock
dec
popf
lret
sub
inc
inc
jg
mov
addb
ljmp
sbb
popa
push
xchg
pop
lods
call
stos
in
js
mov
and
sub
pop
cld
pushl
loope
mov
mov
push
and
mov
clc
in
jbe
push
dec
xchg
push
es
pop
popa
push
ret
mov
jbe
or
add
shll
ljmp
imul
cmp
sub
add
sbb
sub
pop
gs
cmp
mov
clc
pop
je
mov
jg
out
push
aaa
ret
cmp
mov
adc
stos
inc
mov
lret
data16
dec
mov
pop
xchg
push
sub
adc
mov
cmp
pushl
addr16
add
orl
xchg
inc
fcoms
enter
jge
sub
push
mov
iret
jne
sbb
mov
lods
pop
lock
mov
call
push
jne
jno
sbb
orb
jne
push
in
decl
sbbl
fs
addr16
loopne
lahf
jo
push
add
js
lcall
fs
inc
xor
xor
subb
adc
insl
repz
jmp
sbb
je
lret
jmp
mov
or
dec
jne
aaa
popf
push
pop
stos
or
push
faddp
out
aaa
clc
push
mov
ja
mov
push
scas
dec
lock
bound
push
push
inc
decl
lahf
clc
lret
aaa
xchg
cmpsl
push
and
out
jbe
in
push
cmp
xor
sbbb
call
je
mov
or
add
incl
and
jmp
or
sahf
pop
fdivs
int3
sbb
dec
ljmp
mov
mov
add
popa
mov
cs
xor
cmp
mov
jle
add
pop
roll
mov
xor
test
call
sar
sarl
cmpsb
push
dec
xor
mov
cmp
mov
nop
pop
loop
jnp
jg
and
cmpsb
push
imul
lret
mov
xor
cmp
cmpsb
add
mov
inc
ljmp
mov
push
xchg
decl
or
sbb
adcb
cmp
sub
jecxz
jo
pushf
clc
dec
push
repnz
xchg
cmp
pop
cmp
roll
fists
aad
and
cmp
add
inc
testl
lock
test
lock
adc
ljmp
call
in
mov
mov
inc
stos
lret
and
xor
jle
mov
push
xchg
hlt
jns
push
fildll
lock
cmp
xor
xchg
cmpsl
test
sbb
call
insl
dec
add
lds
je
lcall
mov
mov
sub
cli
test
or
je
xchg
add
lea
rcl
and
ljmp
sbb
adc
sub
decl
imul
xor
dec
aaa
les
js
push
in
pushf
xchg
pop
add
and
lahf
or
call
cli
and
loopne
pop
adc
imul
ljmp
mov
mov
fidivs
clc
movsb
ret
lea
test
psrlq
dec
mov
or
cmpsb
ja
leave
xor
cmp
pop
stos
jle
add
loopne
inc
icebp
push
sub
std
inc
lret
and
je
xchg
mov
xchg
mov
ljmp
rcrl
push
push
push
gs
add
inc
scas
icebp
pop
push
icebp
jg
jge
xchg
push
repnz
or
or
inc
xchg
cmp
pop
stos
mov
pop
enter
or
mov
mov
fistpl
xor
sbb
xor
sub
xorb
adc
pop
in
jmp
mov
xchg
or
adc
or
add
add
pop
xchg
mov
push
inc
stos
add
jmp
es
adc
jb
out
adc
jno
push
inc
mov
xchg
pop
and
repnz
fidivs
sti
or
sar
sbb
cs
sbb
out
mov
push
sbb
lcall
push
pop
movb
test
jns
iret
aad
jg
sbb
adc
mov
and
ret
cmp
test
cmp
cli
and
insl
jno
ljmp
adc
iret
aaa
in
pop
push
call
sub
xchg
cmp
je
xchg
repnz
sub
xchg
lock
call
xlat
subl
stos
dec
dec
out
jne
and
cs
aas
sbb
nop
test
je
sarb
nop
imul
xorb
mov
mov
jmp
stc
jns
ljmp
cld
jg
incl
in
mov
repnz
pop
in
cmp
jle
subb
mov
out
ret
sbb
out
or
inc
scas
mov
inc
imul
add
jb
icebp
das
xor
repnz
fcomip
dec
jg
das
nop
repz
std
roll
or
add
sahf
jb
cmp
cmpsl
test
repnz
mull
dec
push
add
and
sar
mov
stc
and
cli
inc
cmpsb
jb
sti
dec
sti
fisubs
pop
xchg
cld
add
es
repnz
nop
shlb
mov
xor
sbb
mov
rcrb
cld
daa
cwtl
movsb
mov
loop
stos
mov
int
jle
filds
adc
pop
nop
cmpsb
repz
cmp
adc
jecxz
add
jp
mov
cmp
cmp
lcall
and
jmp
sti
mov
sbb
or
out
movsl
push
and
call
cltd
pop
andb
cwtl
xorl
fsubrs
sbb
or
mov
inc
xchg
sti
jmp
push
or
test
dec
mov
xchg
ret
push
and
or
add
ja
inc
sub
rep
int3
push
repz
sbb
stc
int
xchg
adc
notl
sub
fsubs
clc
cltd
jb
or
and
add
test
sti
add
mov
decl
imul
jbe
mov
push
test
push
test
incl
clc
inc
xor
mov
sbb
and
shll
dec
nop
mov
outsl
pop
mov
adc
loopne
adc
dec
stos
insl
out
or
add
fdiv
dec
jg
lock
push
pop
out
daa
or
jnp
push
popa
mov
aaa
repz
pop
pop
dec
push
and
ss
js
testl
inc
movsb
inc
and
pop
add
jns
arpl
and
pop
cwtl
aad
orb
xor
and
sub
or
xor
decl
negb
adc
mov
dec
shll
mov
stc
jmp
or
stos
in
addr16
cmp
loope
pop
sbb
sbb
inc
or
add
or
data16
add
jne
les
mov
sahf
stos
mov
add
test
mov
je
loope
pop
jo
js
incl
shl
hlt
sbb
loopne
aas
dec
daa
or
in
loopne
sbb
push
repz
out
repz
testb
repz
mov
cmp
jle,pn
out
outsl
xor
or
xor
in
push
repnz
repnz
call
cld
fisttps
icebp
cmp
jns
aad
test
jns
jne
int3
repnz
repnz
dec
xor
mov
movsb
fsubrs
nop
mov
jg
jg
pop
xchg
es
jne
mov
dec
icebp
jg
in
xor
wbinvd
mov
adc
outsl
xlat
out
lock
inc
adc
test
sub
ret
add
add
lods
dec
or
rclb
jge
clc
aam
mov
sarl
sub
mov
test
xor
add
mov
mov
add
testb
cmp
pusha
dec
sbb
icebp
dec
xor
push
xchg
dec
add
movsb
mov
fildll
or
and
shll
add
mov
sbb
je
cld
mov
lods
addr16
lcall
push
hlt
cmp
fnstenv
fwait
in
icebp
push
not
sti
mov
pushf
mov
mov
sbb
adc
data16
jle
mov
lcall
sub
pop
pusha
push
stc
xchg
icebp
nop
cs
call
ljmp
sub
adc
or
mov
mov
movsl
shlb
push
or
aas
out
clc
jmp
and
push
add
and
and
imul
rcll
or
push
ja
in
imul
pop
or
insl
and
jae
cmp
and
cld
ret
cltd
lcall
jp
les
or
jnp
mov
das
test
and
pop
xchg
sub
add
pushl
jne
lods
fucomi
sbb
mov
movsl
pop
add
mov
cmp
jmp
add
cli
je
or
je
dec
out
cld
dec
aaa
enter
push
push
lcall
xchg
push
fs
sbb
push
mov
loopne
call
or
cmpsb
test
cmp
arpl
lret
je
cwtl
dec
dec
add
add
adc
in
sub
shrb
jne
dec
fs
xchg
lods
mov
mov
call
in
inc
sub
js
mov
sbb
mov
mov
mov
inc
adc
jmp
dec
ffree
mov
push
xchg
xchg
ret
icebp
push
cmp
insb
push
xor
in
incl
add
pop
sub
aaa
cmp
push
add
daa
and
push
adc
das
pop
or
and
arpl
aaa
cld
cmp
movsl
iret
xor
scas
sbb
xor
inc
scas
clc
js
sbb
inc
dec
push
and
dec
loop
ret
mov
les
cmp
js
push
inc
sbb
mov
jecxz
push
daa
jle
pop
or
jmp
pop
mov
rcl
jne
je
adc
push
add
insl
mov
jo
mov
and
mov
jo
enter
dec
pushl
addr16
xor
sbb
add
stos
movq
aas
ficompl
les
sti
mov
out
aas
add
cmpsb
xlat
jnp
test
xchg
js
sarb
mov
jne
gs
mov
sub
push
fldl
scas
dec
mov
lret
in
pop
mov
outsb
cmpsb
clc
lcall
mov
fistl
cmp
loopne
nop
cli
rorl
pushl
push
push
or
sbb
jecxz
imul
rorb
decl
jno
push
jbe
ja
push
sbb
mov
stc
jb
push
xchg
sub
shll
sahf
or
sub
cmpsb
jno
push
ret
int3
jle
in
lcall
push
add
add
clc
sbb
jae
repnz
add
add
sbb
ffree
in
dec
push
cs
adc
aam
mov
push
pop
fsub
xchg
or
test
das
add
mov
jg
das
adc
cmp
mov
fildll
out
sbb
pop
mull
pushl
pop
movsl
add
lock
xchg
jle
arpl
jnp
add
lock
in
add
ror
mov
adc
add
push
and
cmp
sub
sbb
xchg
ficoms
test
dec
call
mov
mov
and
push
daa
mov
dec
mov
out
jo
test
sahf
inc
int3
xchg
pusha
subl
leave
popf
pushl
mov
insl
or
push
inc
sbbl
xlat
push
imulb
les
adc
jne
sbb
jmp
mov
cmp
and
ja
mov
jp
cmp
cmp
jl
adc
cmpsl
cmp
jg
test
mov
and
jecxz
ret
movsb
mov
inc
dec
fisttpll
push
xlat
or
inc
and
cmpsl
xchg
cltd
shll
sbb
or
idivl
out
pop
pushf
ret
nop
insl
xor
stos
mov
ljmp
inc
sub
sar
push
adc
nop
pop
leave
frstor
mov
sub
ret
mov
orl
les
aaa
add
sub
movsb
fsub
cs
mov
xor
dec
pop
rorl
clc
jbe
jns
dec
cmpsb
mov
loopne
in
inc
je
sub
lds
add
dec
pop
int3
adc
addl
test
dec
and
or
inc
ficoml
cmp
xor
mov
mov
incl
or
mov
lock
add
or
ss
fnstcw
lahf
or
xor
loopne
push
fwait
in
adc
lods
add
sbb
and
je
outsb
dec
jecxz
adc
fcomps
and
and
pusha
rolb
mov
lods
adc
push
aaa
inc
and
jp
add
ljmp
ss
cmp
push
fistpl
fs
cmp
movsb
shrb
f2xm1
rorl
rorl
cli
add
out
inc
loopne
call
icebp
mov
adc
mov
sahf
mov
and
loopne
call
pusha
mov
shrb
incl
mov
daa
lret
push
faddp
jmp
lret
xchg
add
aaa
xor
or
test
sub
stos
inc
repz
push
push
sbb
in
ljmp
dec
sbb
das
cli
inc
std
je
push
and
sub
ret
clc
out
cli
sub
add
inc
adc
loop
inc
bound
roll
sub
xor
inc
jmp
bound
pop
fs
dec
addr16
loop
xor
idiv
call
out
jge
lds
pop
cltd
and
cmp
aas
out
leave
inc
hlt
loope
bnd
enter
mov
shrb
mov
scas
mov
movl
sub
inc
add
or
ljmp
lock
adc
imulb
clc
sbb
xchg
popa
fwait
adc
inc
in
jle
xor
or
leave
decl
push
add
and
es
adc
pop
call
and
jmp
sub
mov
incl
shrb
push
cwtl
or
into
add
in
lods
dec
orb
xchg
push
adc
outsl
ret
sub
add
sets
inc
sub
clc
test
push
ret
fsts
dec
inc
or
push
inc
mov
lcall
cmc
repnz
sub
mov
hlt
stos
jmp
pop
inc
dec
call
fldt
leave
fadd
dec
js
bound
loop
sar
jmp
cmp
je
test
aad
loopne
mov
int3
pusha
sub
adc
and
pop
or
decl
add
mov
push
push
sbb
sbb
add
push
sub
and
in
or
xchg
sahf
repnz
sti
lret
or
pop
data16
mov
hlt
in
ljmp
cli
sbb
add
ljmp
jg
and
aaa
ret
das
mov
test
fs
inc
pop
ljmp
loop
push
adc
rorb
push
add
or
loop
sti
mov
mov
leave
add
mov
js
je
pop
or
pop
ja
lods
push
or
jmp
mov
jbe
loop
sbbl
inc
push
jne
sub
outsl
pop
and
scas
cld
movsl
movsl
mov
mov
gs
and
movswl
ret
out
mov
push
adc
sub
adc
adc
pusha
and
popa
mov
push
icebp
decl
inc
ss
dec
mov
jge
aad
sbb
inc
movsl
ret
aam
jnp
adc
incl
sar
inc
sbb
pop
dec
outsb
jmp
and
mov
jae
ljmp
in
lock
and
pop
shr
sub
push
or
sub
lds
enter
jp
mov
and
ljmp
inc
ljmp
cmpsb
push
jae
fldcw
mov
inc
rolb
cmpsb
pop
and
lcall
jno
mov
cmp
and
aas
inc
mov
mov
imul
inc
fnsave
cwtl
mov
push
mov
popa
adc
not
addr16
xor
decl
loop
sqrtps
adc
sub
out
xchg
dec
inc
sbb
and
xor
sti
lea
ja
ret
sbbb
mov
push
mov
sub
mov
std
pop
cmp
in
xchg
sub
add
sbb
les
push
cmp
jle
iret
rcr
xor
mov
sbb
rorb
and
ss
mov
lods
ljmp
inc
jne
xor
addr16
inc
cmpb
pop
addb
xor
movsb
pop
incl
jg
adc
popa
inc
sub
cli
and
inc
jo
mov
fsubr
jge
sbb
fisubrl
jp
xor
dec
lods
push
lahf
pusha
jo
jp
fbld
sbb
popa
pop
sub
lea
lods
inc
out
das
les
jmp
adc
pusha
imul
and
mov
adc
inc
ljmp
xor
jecxz
push
out
or
outsl
push
cli
adc
sbb
pushf
lock
push
andb
nop
xchg
adc
jge
adc
push
loop
decl
call
xchg
push
add
jne
out
adc
inc
mov
jl
ljmp
sub
adc
push
xchg
and
adc
inc
pop
js
jg
call
aad
sub
negb
pop
mov
lcall
decl
add
or
jb
movsb
add
icebp
adc
dec
add
pop
sbb
js
cmc
cmpsb
cli
mov
fdivrl
lcall
fldenv
push
xor
cmc
jmp
mov
cld
jo
data16
je
mov
and
decl
pop
pop
shlb
loopne
pop
jge
lock
mov
mov
shl
data16
adc
decl
enter
ss
sarb
leave
or
imul
cmp
mov
and
mov
decl
outsb
xchg
push
add
sbb
jmp
loopne
sbb
mov
mov
stos
jg
lods
outsl
mov
or
ss
stc
and
and
stos
sbb
ret
xchg
pusha
daa
cmp
mov
pushl
xchg
push
lea
mov
popa
or
ljmp
ljmp
data16
push
push
xorb
ja
mov
mov
and
call
adc
cld
push
cmpb
and
clc
lret
in
xor
pop
shrb
xchg
decl
lods
test
jbe
xlat
imul
push
push
stos
fs
push
push
xor
cmpsl
xlat
dec
aam
lock
pop
pop
pop
cmp
rcl
std
jb
cmp
or
aas
mov
fwait
dec
sarl
out
pop
cmp
lcall
shrl
sub
rclb
and
fcmovu
sbb
xor
icebp
jmp
loope
popa
lea
pusha
xchg
stos
mov
xchg
sbb
incl
cld
or
and
lock
cmpsb
ficompl
aam
in
mov
rcll
lods
adc
pop
mov
sub
and
test
push
ficomps
sbb
xor
mov
jmp
sub
push
mov
sbb
iret
mov
lea
mov
outsl
bnd
ja
sbb
jmp
call
xor
fwait
pop
icebp
xlat
sbb
push
push
dec
outsl
adc
mov
jne
cmp
push
nop
ljmp
insl
push
fistpl
adc
push
inc
cmp
add
or
xchg
jg
stc
dec
bound
inc
cli
or
xorb
or
mov
adc
inc
inc
sub
shlb
xchg
jmp
insb
inc
nop
loope
add
cs
dec
mov
aam
arpl
mov
xor
jne
jbe
push
lds
mov
xchg
jmp
inc
out
lret
les
test
and
dec
adc
cld
pushl
jp
sbb
inc
xlat
inc
pusha
and
ljmp
sbb
jle
filds
stos
and
push
xor
adc
ljmp
add
adc
or
pop
push
mov
es
imul
into
and
jmp
sbb
pop
jmp
mov
int
clc
mov
lret
mov
jb
gs
add
pop
pop
sbb
mov
adc
es
push
imul
xor
add
adc
push
inc
xor
mov
in
test
es
idivl
add
and
sub
push
cmc
decl
push
jecxz
push
push
or
popa
loopne
lds
inc
jbe
mov
lods
jmp
ret
sbb
xchg
pushf
mov
pop
sbb
inc
add
incl
add
or
inc
ljmp
es
loopne
add
ds
icebp
int3
push
lcall
and
lods
inc
daa
push
or
rorb
cs
jns
jo
lods
aaa
sbb
jbe
jg
add
nop
xor
push
adc
adc
mov
incl
push
jne
jge
push
ds
jno
jmp
inc
js
inc
nop
cmp
int3
mov
mov
or
add
ljmp
loope
inc
jne
lock
mov
push
pop
lock
incl
aas
xor
stos
dec
push
sub
hlt
push
xorb
cwtl
mov
ljmp
incl
cmc
ds
test
loop
scas
mov
adc
or
jge
push
stos
pop
add
loope
decl
jmp
fcoms
lock
in
add
xchg
adc
xchg
fwait
out
call
push
add
adc
mov
pushl
add
lds
cwtl
ljmp
inc
test
roll
inc
addb
adc
ds
not
ja
inc
and
mov
fsubs
jl
cli
pop
repz
insb
pop
and
decl
loopne
adc
mov
test
iret
inc
jbe
dec
xchg
fnstcw
add
pop
add
inc
or
xor
jae
ljmp
cmp
sub
pop
in
pushl
incl
jae
fmull
sbb
pop
testl
aas
jmp
out
sub
pop
and
mov
sub
maskmovq
enter
decl
test
testb
xchg
cmp
jge
inc
stos
pop
sub
jecxz
das
add
xor
clc
push
sub
dec
in
xor
cmp
or
mov
dec
clc
jmp
add
shr
iret
hlt
shl
sub
or
push
jl
mov
pop
dec
pusha
add
and
cmpl
ds
mov
jne
mov
jne
shl
lods
mov
mov
and
out
incl
addb
into
inc
cmc
sbb
xchg
lahf
xchg
or
dec
or
repnz
xchg
dec
in
lcall
lea
pop
ror
mov
lahf
pop
js
test
out
nop
es
incl
mov
out
rorb
or
inc
rcrl
rdtsc
decl
decl
addb
xor
mov
jmp
out
push
push
jb
mov
repnz
call
xchg
movsl
loop
rcl
push
cmp
aam
jno
into
shl
ljmp
xor
xchg
nop
addr16
fisttps
insb
add
lea
fnstsw
pop
inc
mov
or
ljmp
lods
jb
jl
xor
adc
or
aas
dec
sub
push
sbb
insl
incl
repnz
mov
inc
je
in
dec
jl
es
mov
ljmp
iret
and
dec
out
mov
mov
sub
movsb
sbb
shll
movsl
pusha
jmp
adc
std
lods
xchg
xchg
enter
xchg
xchg
pop
pusha
or
pusha
mov
ljmp
push
dec
xor
pop
add
jmp
jo
pop
add
pushf
sbb
pmulhuw
xor
push
pop
mov
jg
call
out
test
and
ret
mov
xor
mov
daa
pop
je
sub
rclb
dec
adc
sbb
adc
or
stc
add
lcall
mov
shll
nop
bound
xor
inc
push
sub
mov
test
mov
dec
shll
jge
ljmp
and
xchg
push
inc
mov
inc
xor
push
xor
lods
mov
out
or
pop
fisttpll
ljmp
or
or
jmp
mov
jnp,pn
inc
or
jb
fucom
call
push
pop
loopne
decl
subb
mov
or
inc
mov
inc
add
fisttps
lret
ret
sub
or
test
adc
lret
push
lods
jmp
fsubl
movsb
xor
push
jmp
mov
lcall
test
stos
push
adc
push
jl
ljmp
cmp
das
cwtl
cmp
jle
sub
cmp
xor
lea
cmp
and
fs
unpcklps
jle
mov
movsb
ljmp
pop
lods
rorl
jnp
jg
lock
loop
movsb
lret
pop
mov
jae
fcoms
ret
loopne
shll
inc
mov
pop
push
mov
sub
add
ljmp
rclb
mov
sbb
jb
cmp
xor
mov
push
mov
jnp
xchg
xor
cmp
decl
mov
cmpsl
mov
mov
sbbl
adc
push
push
and
mov
dec
pop
stc
jle
cmp
mov
daa
pop
mov
lods
sub
int
je
ljmp
out
rcll
es
mov
mov
or
test
pop
ljmp
decl
mov
sub
testl
mov
jecxz
fldl
mov
push
bound
or
iret
sysenter
out
in
mov
sbb
push
repnz
mov
cli
rolb
cmc
outsb
outsb
data16
mov
fnstcw
pop
loope
nop
decl
cwtl
pushf
xor
stc
mov
dec
mov
mov
js
fisttpl
daa
lds
sub
pop
insb
xor
pushf
cwtl
jge
mov
adc
push
sbb
fcompl
xlat
test
das
cmp
repz
inc
out
mov
int
incl
jp
or
mov
divl
jle
and
push
js
mov
loop
das
cli
decl
mov
cmp
lods
adc
mov
rorl
cmp
and
pushf
push
loope
inc
outsb
decl
mov
pop
js
sbb
adc
push
test
pop
push
into
rol
popa
cs
fimull
dec
jecxz
js
andl
pushf
mov
les
add
dec
roll
pop
aad
or
jne
mov
data16
cmpsb
std
pushl
cmpsl
adc
adc
mov
mov
cmpb
ljmp
inc
push
enter
mov
push
pop
inc
bound
ret
fisttps
jne
mov
loopne
mov
les
test
jne
adc
lcall
cmp
adc
and
hlt
int3
push
mov
xlat
loopne
ret
test
insb
dec
call
pop
pop
inc
xchg
cli
add
sub
and
mov
lcall
xor
mov
fstl
sub
cld
lds
xor
cmp
cmp
decl
add
cld
je
push
adc
mov
js
subl
mov
decl
jg
xorl
cmp
imul
push
int3
ret
int3
xchg
call
call
enter
mov
add
push
loop
gs
insb
in
dec
jmp
sbb
rcrl
idivl
xchg
and
or
insl
call
adc
mov
imul
inc
xorb
ljmp
shrl
push
addr16
lock
rcrl
call
sahf
dec
into
pop
jne
jl
stos
inc
je
cld
push
mov
sbb
push
sbb
inc
xchg
cmp
aaa
scas
ja
sub
jne
push
cs
or
sbb
mov
pop
sti
sub
js
sbb
xchg
ljmp
add
or
mov
lods
fs
fwait
and
lods
or
cmp
ret
decl
decl
dec
cli
mov
dec
inc
das
add
push
cmp
or
mov
push
add
repz
ljmp
fcmovne
push
jg
sahf
push
lods
ss
rolb
push
jno
enter
les
jmp
sbb
xor
imul
movsl
add
jne
push
cwtl
out
fmuls
jmp
aas
xchg
roll
decl
jne
mov
cwtl
xor
adc
pop
fimull
mov
add
mov
ljmp
sbb
loope
add
push
add
clc
cmp
iret
mov
push
fsubrs
pushf
dec
aas
mov
scas
add
sub
push
pop
adc
pushl
pop
test
push
mov
mov
xchg
and
xchg
push
xchg
loope
xchg
push
shl
sbb
or
aas
dec
popf
or
scas
xor
add
ljmp
add
data16
xchg
lcall
or
mov
ret
add
sar
or
push
pusha
mov
cmp
xor
and
aas
je
pop
aaa
das
xchg
cmp
adc
decl
test
js
mov
das
ljmp
dec
es
inc
ret
mov
push
pop
scas
adc
cmp
push
pop
adc
sub
and
movsl
dec
arpl
cli
push
mov
xchg
out
add
sbb
je
fbstp
adc
mov
pop
jnp
lds
sub
adc
pop
sbb
scas
das
inc
xchg
int3
decb
aaa
adc
in
mov
mov
lret
repz
imul
aad
push
fildl
add
loop
cwtl
popf
sti
push
add
and
incl
lods
das
loop
jo
pop
fwait
sub
push
jmp
jae
and
popf
mov
or
jb
add
cli
imul
dec
mov
mov
in
sysexit
dec
lock
mov
shll
in
mov
outsl
lock
inc
hlt
call
bound
js
and
push
repz
push
pop
dec
loope
and
sbb
ret
clc
cmp
adc
add
ds
call
inc
add
cmpsl
inc
testl
in
ljmp
incl
clc
xor
or
add
jg
and
inc
and
dec
ljmp
mov
in
rorb
fdivl
fs
ds
xchg
xchg
lcall
pushf
dec
test
push
subl
call
fmull
and
stos
ficoml
movsb
movsb
sahf
sarb
xchg
mov
xchg
sar
mov
mov
ljmp
rorb
push
jle
xchg
clc
shll
adc
nop
push
std
div
mov
add
decl
jnp
pop
jns
and
add
cmpsb
xor
push
add
push
jg
lret
cmp
or
lcall
decb
orb
add
inc
sub
fcoml
hlt
dec
rol
loope
or
out
test
mov
sti
pop
or
mov
sbb
inc
mov
mov
iret
test
loope
repnz
xchg
out
testb
xchg
lret
inc
inc
fwait
clc
dec
mov
cmp
mov
or
jg
lret
test
or
cmp
lcall
lcall
sub
call
adc
fimull
xchg
cwtl
cmpsb
add
or
xor
popa
mov
fldenv
enter
idiv
jmp
jg
mov
insb
dec
and
enter
sahf
out
out
xor
addb
pushl
filds
notl
repnz
pushw
rorl
cmp
aam
loopne
jge
cmc
decl
and
repnz
cmovb
inc
ret
push
shr
xor
filds
adc
ret
outsb
das
mov
addr16
shlb
fsubrs
inc
outsl
cmp
sub
loopne
call
fnstcw
jmp
dec
sub
inc
xor
push
xor
shr
orl
test
xor
or
and
rcll
dec
push
lret
fcmovu
add
pop
clts
cmova
insl
test
cli
in
lock
sarb
movb
cmp
or
mov
adc
leave
and
or
adc
fs
dec
sub
nop
incl
push
sbb
stc
jge
test
rcll
inc
inc
fbstp
or
dec
leave
mov
movsb
jne
jmp
dec
push
fldt
dec
add
mov
andl
cld
ljmp
cwtl
cs
sub
jb
lret
push
movw
in
inc
sbb
xchg
push
mov
das
lcall
sbb
push
lahf
outsb
add
adc
xchg
xchg
mov
adc
shl
jmp
jno
hlt
cs
ljmp
inc
rcl
push
sahf
cmp
mov
repz
xor
fimuls
data16
inc
imul
decl
decb
jmp
sbbb
or
push
push
loopne
ror
fdivs
and
xorl
loop
mov
orl
movsl
out
sbb
ret
cld
sub
ljmp
mov
mov
pop
mov
jne
mov
cld
or
adc
jg
and
out
insb
enter
mov
or
lea
cltd
sub
lcall
imul
push
sbb
rclb
negb
mov
mov
jae
add
sbb
sarl
icebp
leave
les
jg
pop
add
add
add
cmp
dec
push
stc
out
mov
aad
jle
data16
dec
pop
mov
hlt
dec
mov
adc
icebp
cmpb
or
in
fcoml
cld
mov
ds
inc
lret
add
or
sub
pop
add
pop
and
and
xchg
mov
mov
mov
jb
pop
and
or
push
inc
or
mov
pop
dec
repz
xchg
xor
lret
incl
push
mov
xor
inc
mov
pop
and
xchg
out
mov
js
fldenv
ljmp
xchg
rclb
call
sti
dec
jge
stos
and
push
or
pushl
mov
xchg
std
fs
xchg
xchg
push
fsts
push
xchg
add
loop
pop
scas
add
test
iret
cmp
ret
sbb
dec
lret
pusha
xchg
stos
aaa
cwtl
cmpsb
pop
sub
imul
lds
mov
lods
lods
add
test
inc
ffreep
mov
mov
iret
movsb
repnz
lret
mov
inc
mov
push
pop
dec
adc
fcos
mov
ret
pushf
mov
xor
sub
inc
testb
adc
ljmp
pop
cmp
pop
xor
adc
lret
rorb
dec
or
xchg
adc
and
faddl
inc
or
mov
sub
movb
cs
jl
push
je
pop
xchg
xchg
into
jne
add
push
xor
or
add
cmc
mov
push
fistpll
xor
mov
arpl
fisubs
pushf
jle
shlb
mov
clc
ljmp
repnz
or
push
push
xor
jmp
mov
aaa
nop
clc
mov
pop
add
clc
dec
mov
testl
inc
scas
addl
and
pushl
aam
nop
outsb
push
outsl
fwait
clc
les
loopne
jb
add
sbb
cli
mov
clc
push
test
add
sbb
lock
ss
or
push
pushl
pop
push
jp
add
sbb
mov
test
sarl
sub
jmp
jmp
xor
inc
jg
push
xchg
xchg
xchg
into
add
lods
and
enter
pop
or
incl
outsl
lock
and
jb
arpl
xchg
or
shlb
fnop
push
mov
mov
fwait
cmp
mov
or
push
in
pop
pop
push
and
in
fdivp
in
enter
cs
lea
lahf
pop
xchg
out
enter
cli
repnz
mov
pop
out
testl
je
xor
add
ret
pop
adc
inc
xor
subl
mov
push
ret
sub
pop
lret
int3
popa
xchg
sbb
xor
xchg
decl
incl
push
pop
test
mov
pop
fnsave
loope
stc
mov
idivb
int
cmc
incl
pop
jb
jge
inc
push
mov
xor
sub
jns
mov
lods
mov
jnp
adc
xor
outsl
dec
in
cmp
decl
sarb
mov
lods
add
dec
fdivrl
cmp
fidivrs
outsb
es
jmp
and
add
jg
lods
faddp
pop
aad
adc
fs
out
dec
adc
mov
test
in
xchg
pop
sub
xor
pop
cmp
or
add
push
xchg
and
lcall
js
in
fists
enter
call
outsb
aad
mov
and
cli
cli
jle
fcom
pop
jno
sub
mov
mov
mov
and
adc
lea
add
mov
fldcw
aam
mov
mov
add
dec
adc
filds
push
out
sbb
into
stos
inc
ds
mov
test
call
inc
imul
hlt
jae
and
leave
cmpsb
add
aam
inc
decl
int3
xchg
or
cs
mov
decl
dec
or
movsl
loopne
das
jne
je
in
repnz
sub
lcall
jmp
adc
sub
outsb
cmp
je
pushf
mov
mov
or
or
cmp
ljmp
jbe
sbb
enter
mov
pushf
add
loopne
pop
arpl
cwtl
rcll
jmp
push
sbb
pop
add
xchg
repz
push
cwtl
pop
mov
mov
jle
nop
incl
jo
or
test
sbb
xchg
test
add
mov
ret
decb
in
add
and
fsubl
push
repz
loopne
mov
push
pop
push
js
decl
pop
test
xor
ljmp
add
dec
mov
jmp
jp
jg
and
cltd
inc
ret
dec
fmuls
stos
movsb
call
jb
enter
in
mov
and
test
xchg
cmp
add
jg
jb
rcll
adc
add
and
cwtl
out
push
mov
xor
decl
les
inc
subb
push
aad
push
mov
add
dec
push
mov
cld
push
je
jb
call
adc
and
loopne
test
jo
adc
das
shrb
add
push
dec
inc
lods
pop
push
test
testb
fnstsw
add
mov
add
jo
push
jb
pop
lret
pop
std
pop
sbb
jo
or
clc
dec
mov
inc
mov
mov
shr
push
dec
jb
mov
decb
incl
test
aaa
adc
and
inc
hlt
mov
into
push
std
hlt
jo
std
mov
mov
loopne
sbb
mov
pop
add
push
cmp
add
loop
daa
pop
push
in
and
cmp
cld
sbb
dec
scas
dec
in
push
leave
pop
cltd
push
lock
mov
jmp
je
fwait
sbb
pop
cmpl
adc
add
push
lock
sub
inc
push
roll
inc
test
sarb
ljmp
xor
enter
mov
push
cmp
js
jo
insl
jg
in
jnp
ror
xchg
dec
mov
outsl
xchg
cmp
cmp
hlt
ret
sub
jmp
or
pop
dec
push
mov
jg
push
add
icebp
push
les
and
cmp
sub
dec
hlt
inc
hlt
or
jmp
mov
pushf
adc
into
sbb
push
jne
inc
sbb
adc
cmpsl
test
ljmp
shl
js
movsl
push
xor
movsb
cmp
push
push
nop
xchg
or
insl
xchg
and
adc
ljmp
lods
inc
fmul
add
out
or
imul
xchg
bswap
dec
inc
into
je
adc
inc
hlt
sbb
pushf
pushl
insl
mov
bound
fimuls
orl
dec
or
or
dec
mov
mov
xor
xchg
sub
cltd
in
pushf
push
cli
push
sbb
les
stos
ja
call
mov
push
ja
js
dec
ljmp
dec
pop
in
call
iret
mov
mov
negl
mov
cli
or
sbb
mov
xchg
adc
jno
or
jp
scas
inc
popa
add
in
clc
inc
hlt
dec
mov
inc
jl
in
cs
cmp
xchg
fimuls
fcomip
bound
das
xchg
and
sti
pop
or
ja
fisttpl
xor
incl
add
bound
mov
inc
mov
lret
fadds
jp
loope
out
mov
stc
cmp
inc
test
popf
push
jmp
nop
mov
mov
and
xchg
pop
ret
or
xor
xchg
scas
add
cltd
icebp
or
loop
nop
fcmovb
popa
out
adc
dec
xchg
add
pop
hlt
call
xchg
dec
fcoml
pop
insl
push
fadds
loop
test
dec
cli
sbb
daa
and
push
data16
jns
or
inc
lret
stos
mov
loope
jp
add
lcall
test
push
cmp
push
adc
or
inc
addb
cmpsb
adc
pushl
push
push
sub
and
fs
clc
arpl
adc
push
mov
pop
ljmp
lea
or
stc
gs
add
sarb
add
xchg
or
pop
xchg
push
cmp
or
adc
inc
sbb
sti
setne
add
out
sbb
push
cs
jbe
or
dec
ds
push
push
cmpsb
xchg
and
stos
pop
fbstp
arpl
push
lcall
mov
fcomps
mov
xor
or
test
out
cmpsb
icebp
mov
mov
sbb
lea
hlt
outsb
cmp
dec
fdivrl
and
sbb
js
inc
mov
cmpl
sbb
jg
das
push
dec
lcall
cmp
pop
dec
add
and
and
call
inc
mov
or
add
imull
xor
inc
aaa
push
cmp
dec
lods
mov
push
loope
dec
sbb
mov
shlb
xchg
xchg
add
cmc
movsb
and
loope
or
add
cmp
dec
mov
pushf
jbe
int
push
in
mov
adc
sub
hlt
or
movsb
jle
inc
ljmp
adc
inc
iret
xor
mov
fdivr
jg
and
add
les
movsb
jo
cmc
rclb
ss
pop
std
out
mov
jle
add
xchg
push
loop
add
cs
xchg
pop
inc
fisubs
mov
loop
sti
outsb
or
cld
addb
push
xchg
adc
mov
test
and
pop
test
aam
mov
push
cs
push
fisubl
js
mov
cltd
cmp
mov
add
inc
rorb
sbbb
in
mov
hlt
adc
ficomps
jge
sub
lock
loope
addb
pop
cmp
incb
xor
incl
jmp
adc
sbb
jecxz
mov
mov
fdivrl
sbb
xor
sbb
jge
sbb
into
dec
decl
adc
daa
jp
imul
add
cmp
adc
adc
sub
lcall
lcall
repz
push
add
push
stc
inc
cwtl
cmp
call
push
push
pop
add
xchg
dec
lret
mov
ret
push
mov
std
push
push
sub
clc
int3
pop
inc
fdivs
rcr
inc
aad
aam
ljmp
adcl
cli
gs
pop
xchg
movl
pop
ja
test
mov
mov
stos
push
dec
mov
stc
lret
xchg
sub
push
cwtl
outsb
pop
xlat
xor
ljmp
push
mov
jl
std
ret
pop
push
and
mov
popf
pop
pusha
fwait
cld
clc
add
packssdw
sbb
pop
aaa
testl
decl
add
add
push
pop
nop
enter
icebp
mov
fisubs
sbb
xor
or
into
push
aad
and
or
cld
fisttps
rolb
xor
outsb
popa
and
je
xor
decb
push
add
sbb
out
jmp
mov
fsubl
mov
or
mov
xor
pop
lea
iret
xor
pushl
mov
ljmp
pop
xchg
pop
mov
or
lock
call
jns
jecxz
and
inc
bound
cli
enter
pop
cltd
shll
in
aad
push
test
loopne
mov
inc
jo
xor
gs
and
stc
push
adc
rcrl
lcall
jle
push
lret
adc
out
add
jg
or
mov
ret
push
or
jno
mov
incl
cmp
sbb
push
enter
dec
loopne
push
and
sbb
pop
sbb
dec
add
decl
lock
mov
sbb
add
int3
jns
add
inc
push
jae
ljmp
add
xor
gs
out
or
dec
inc
and
sbb
xor
repz
incl
dec
mov
nop
mov
pop
dec
cld
hlt
loope
push
popa
cltd
mov
roll
jmp
outsb
inc
jns
sub
inc
pop
icebp
stos
ja
jmp
lds
shlb
in
scas
enter
sbb
sbb
push
cld
aas
jnp
xor
xor
imul
clc
sbb
je
gs
dec
jecxz
add
fs
dec
push
add
or
les
ds
in
aas
rcr
mov
test
insl
or
add
ljmp
decl
movsl
mov
cs
dec
and
in
imul
testl
inc
and
xor
cmpsl
fadds
mov
sbb
push
mov
jne
and
pop
aaa
mov
fnstsw
pop
bound
mov
ljmp
adc
jmp
les
xor
mov
jge
in
pop
repz
push
jecxz
sub
pushl
push
icebp
cmp
icebp
sub
mov
mov
pop
or
xor
add
js
mov
adc
lcall
lds
loopne
adc
decb
ret
clc
cmpsl
clc
inc
ljmp
jbe
clc
inc
and
jmp
add
sub
outsb
sahf
lret
call
je
fwait
lock
shll
outsl
push
aas
xor
lcall
test
sub
cwtl
jg
ljmp
adcl
pop
ss
push
mov
pop
inc
jp
jg
incl
mov
test
xor
adc
rolb
sbb
and
mov
jg
jl
loopne
aad
sbb
mov
jmp
add
insl
push
mov
push
or
insl
ljmp
push
outsl
push
sub
add
mov
sub
bound
arpl
pop
and
push
mov
cmp
or
pop
jbe
mov
js
and
shll
or
adc
decl
or
pop
add
xor
pusha
sti
shll
pop
addr16
jmp
out
push
add
and
push
js
pop
mov
lods
cmp
push
lea
sub
ljmp
or
xor
inc
adc
lock
int3
cwtl
add
xchg
in
pushf
loop
lret
adc
dec
decl
and
xlat
sbb
sti
jmp
fs
enter
mov
sub
add
jp
jg
arpl
imul
and
cmp
pop
movsb
adc
das
mov
xor
mov
xor
mov
sbb
xchg
cmp
decl
mov
xor
xchg
adc
cmpsb
jmp
lock
jl
add
repz
cmovbe
icebp
pop
in
cmp
mov
test
out
add
mov
pop
adc
cmp
pop
movsb
insb
add
cmp
shlb
fildl
xchg
adc
fsubl
decl
stc
xchg
mov
push
sbb
add
jne
aad
and
in
adc
ja
or
ret
jg
arpl
fidivs
ds
add
xchg
push
push
pop
clc
call
sahf
pop
push
or
xchg
daa
test
inc
call
decl
roll
imul
nop
xchg
inc
push
fwait
mov
incl
sbb
mov
jge
push
cmp
or
ljmp
pop
lcall
int3
fwait
ret
shll
inc
push
scas
and
adc
fisubs
incl
sbb
fadd
mov
outsl
xchg
in
add
aaa
push
dec
mov
push
movb
or
into
pop
pop
mov
rol
addl
add
add
inc
jae
mov
repnz
push
mov
push
insb
mov
inc
cmpsb
data16
inc
fmull
std
stos
push
loope
icebp
mov
cmp
mov
mov
lock
dec
jne
cli
les
pop
jmp
dec
lea
jle
std
mov
mov
js
sbb
mov
test
jecxz
mov
je
cmp
add
movsl
insb
daa
es
lods
in
adc
dec
or
loope
mov
or
les
jmp
or
push
add
mov
pop
test
lods
pushl
dec
sbb
iret
mov
das
fstpl
xchg
jne
sarb
clc
pushl
sub
push
xchg
faddp
adc
std
lcall
or
dec
insl
leave
push
out
stc
xor
or
jns
dec
neg
icebp
and
andb
sub
rcrl
std
mov
dec
pusha
mov
xor
std
andl
mov
xor
test
cld
call
adc
lods
cltd
xor
ljmp
sbb
loopne
mov
pop
pop
dec
lock
mov
enter
call
pop
jbe
xchg
sbb
aam
js
clc
icebp
test
bound
jg
ljmp
in
mov
pop
jg
sbb
jne
aad
sbb
ret
jmp
or
incl
fdivl
or
fistps
sbb
push
lcall
cmp
dec
push
pop
fcomp
sub
and
mov
inc
xchg
insl
jmp
pop
push
dec
icebp
je
fidivs
ljmp
iret
mov
adc
incl
push
or
sahf
push
repz
jg
xor
push
or
pop
sbb
inc
adc
and
mov
int3
sub
sahf
push
sub
cltd
movsl
pop
push
gs
inc
call
les
xor
push
xchg
inc
fucomp
mov
fcoms
or
test
decl
je
jmp
jp
je
ret
mov
inc
mov
xor
call
das
in
and
cwtl
cmp
jg
mov
or
inc
sub
fadds
test
sbb
dec
mov
pop
push
loopne
lods
inc
into
xchg
or
loop
or
mov
mov
xorl
inc
fwait
js
adc
lcall
mov
sub
decl
add
inc
aaa
mov
dec
or
sub
xchg
test
test
push
or
push
test
push
frstor
adc
or
inc
scas
sub
push
es
cld
call
add
pop
mov
dec
mov
mov
clc
call
popa
inc
lea
dec
aam
jle
push
mov
jle
aam
call
aam
add
cld
mov
mov
jo
mov
push
push
or
xchg
out
clc
ljmp
jb
lods
gs
movsb
pop
imul
ret
orl
ret
cmpsb
push
cmp
push
xchg
or
lret
ljmp
call
bound
decl
mov
xchg
inc
dec
cs
and
lock
jmp
mov
xchg
adc
mov
mov
jle
nop
into
add
mov
and
xchg
dec
cmp
repz
mov
jg
mov
dec
add
jmp
jle
test
sub
xor
add
xchg
push
stc
ljmp
jmp
stc
jbe
fs
sub
adc
push
sbb
cmp
lods
jmp
sub
sti
adc
dec
lods
stc
in
cli
or
mov
cmpsb
cld
mov
and
dec
push
xor
pushf
ss
push
adc
sbb
lods
sti
jo
lods
dec
scas
sbb
push
decl
insl
mov
sbb
adc
pop
insb
in
clc
movsl
jb
and
fs
int3
xchg
ljmp
adc
or
out
jg
adc
inc
es
pop
mov
fbstp
sbb
pushl
cmp
dec
mov
insb
decl
sub
add
cmp
add
pop
mov
mov
adc
ljmp
sbb
insb
les
outsl
inc
and
push
decl
pmaxub
xor
fists
add
adcb
push
call
push
sbb
sar
jmp
scas
sbb
sbb
popa
pop
add
out
or
inc
mov
outsl
popf
pushf
xor
call
jg
mov
jne
pop
mov
loope
xor
xor
push
ret
dec
sub
decl
push
dec
in
cmpsb
mov
mov
mov
mov
mov
mov
stos
cld
xchg
or
insl
shlb
cmpsb
adc
adc
xor
ljmp
pusha
dec
sub
cmp
out
push
pop
jp
mov
and
jb
das
cli
call
adc
mov
pop
into
xchg
outsb
imull
sbb
rcl
mov
enter
clc
call
adc
ss
inc
scas
mov
in
shlb
incl
cltd
lds
std
lock
and
mov
cmp
sub
sub
pushf
ljmp
dec
fdivrs
inc
bound
dec
fwait
sub
roll
and
ror
xchg
test
test
stc
adc
popf
push
xchg
inc
sub
fcomps
pop
add
or
or
scas
scas
xchg
fisttps
adc
xchg
mov
pop
popf
and
jb
repnz
inc
sub
mov
test
pop
cmp
add
ja
xchg
jno
enter
fcmovb
mov
sub
lcall
jmp
inc
pop
add
sbb
inc
push
fs
sub
cmpsl
sbb
shll
push
sarb
or
mov
insb
inc
test
inc
sub
mov
xchg
sub
mov
pop
pcmpgtb
or
xor
add
jne
adc
push
mov
test
cli
decl
sbb
out
adc
into
cmp
pop
mov
loop
cmpsb
or
mov
pushl
sti
mov
xchg
in
out
sbb
pushf
outsl
shl
adcl
pushl
std
mov
fisubl
or
adc
icebp
dec
cmp
sub
push
mov
mov
or
mov
push
aam
subl
mov
jl
incl
jl
and
inc
aaa
loope
ss
dec
jno
lahf
mov
xchg
bswap
lds
dec
ret
lcall
and
flds
cld
lods
inc
aad
idivb
inc
lods
ret
stos
fsubs
ja
cmp
and
sub
test
pop
sub
jnp
mov
xor
dec
in
push
in
pop
lock
clc
out
adc
imul
insl
repnz
pop
xchg
mov
fcomip
jmp
hlt
add
xchg
mov
cmc
adc
mov
outsl
cmc
incl
dec
js
dec
push
es
mov
mov
cmc
pop
and
hlt
mov
adc
sub
mov
adc
cmc
das
sbb
push
mov
hlt
pop
pop
movsl
subl
test
ja
addl
and
jbe
xor
sub
cmp
xor
aad
sti
jb
sbb
xchg
je
test
loope
ljmp
jns
xchg
outsb
add
pop
shlb
cld
adc
dec
cmpsb
mov
psllw
in
xchg
fcoms
cmp
jg
dec
cmpsb
lahf
adc
push
jg
add
fsubs
lods
cmc
xchg
insb
out
adc
in
mov
dec
hlt
cmp
mov
pop
lds
nop
mov
pop
inc
rol
mov
in
cmpsb
dec
out
outsb
push
mov
jb
clc
xor
push
mov
std
icebp
pusha
jnp
cmp
and
fsubl
repnz
inc
dec
jb
cwtl
mov
cmpsb
pop
mov
js
dec
jb
dec
and
jle
aaa
outsl
or
rcll
mov
jo
and
dec
sbb
in
add
repnz
push
push
cld
stc
dec
jb
ret
cmp
mov
pusha
pushf
mov
mov
push
mov
pushf
in
cli
and
in
enter
mov
pusha
or
xor
popf
push
push
insl
mov
test
fsubl
movsb
rolb
mov
inc
pop
test
sub
int3
gs
fimuls
cld
lods
fsub
not
cmpsb
jg
fistpll
cld
scas
movsb
fldcw
pushf
fmul
in
fwait
mov
adc
aam
sub
jg
call
test
std
inc
push
push
cmp
repnz
hlt
mul
loopne
clc
out
sub
daa
adc
clc
cmpsl
dec
out
pop
pushf
cmp
aam
push
mov
stc
movsb
pusha
dec
inc
pop
in
push
jl
pop
fwait
sub
out
and
cmp
shrb
cli
daa
leave
inc
es
popa
cli
mov
mov
outsb
jg
push
int3
adc
insl
pop
xchg
add
push
cmp
filds
test
icebp
hlt
adc
lods
imul
lds
xlat
aad
stos
lcall
dec
js
add
es
lahf
cmp
pop
hlt
loopne
xchg
dec
icebp
jmp
lods
loope
push
push
adc
pusha
mov
aaa
into
pusha
in
xor
dec
lock
pushl
sub
push
aas
lcall
cwtl
mov
dec
movsb
imul
flds
data16
pop
jne
inc
jne
or
stos
mov
call
cld
incl
leave
lods
ds
lods
inc
pop
lods
sub
sar
add
test
mov
lds
ja
adc
jb
dec
fwait
cltd
fdivrl
jae
add
inc
loope
cmp
test
sub
movsb
fimull
mov
scas
push
pop
dec
add
fcmovnu
lods
pop
aam
xchg
std
sub
xchg
dec
mov
xchg
loopne
cmp
mov
xor
jg
or
ljmp
jnp
add
sbb
int
sub
and
pop
rep
in
shlb
push
loopne
nop
insb
and
decb
or
sbb
ljmp
jnp
mov
cmp
mov
mov
add
pop
insl
dec
pop
adc
cmp
add
mov
fildll
cmpb
mov
int3
and
adc
enter
and
shlb
inc
xchg
pusha
decl
mov
jne
mov
cwtl
mov
pop
outsl
pushf
xadd
fisttpll
push
mov
fcoms
jb
mov
and
add
shl
shr
sub
pop
arpl
hlt
lcall
adc
mov
mov
cmp
clc
into
lcall
loope
lcall
adc
push
shlb
lahf
sbb
inc
leave
mov
mov
nop
inc
push
jg
add
sbb
lods
stos
dec
push
aas
pushf
sub
mov
mov
ljmp
sahf
mov
jg
mov
inc
sbb
das
das
and
inc
lds
adc
jno
sti
dec
and
sub
or
push
sub
addr16
aas
es
or
inc
out
or
ja
push
hlt
cwtl
pop
ret
int3
movsl
xor
dec
jl
lahf
movsb
mov
orb
jg
repnz
adc
xor
mov
mov
sub
outsl
mov
push
pop
stos
pop
out
jo
jg
cvtps2pi
fcomip
pushl
mov
aas
lea
pop
dec
push
nop
aam
enter
inc
inc
lea
mov
lahf
mov
pop
mov
mov
push
rcll
jnp
mov
or
xchg
rcrb
mov
mov
pop
or
rcrb
stos
mov
push
mov
sar
nop
repnz
sbb
lods
mov
in
pop
fists
decl
movsb
cs
inc
cmc
fimull
mov
mov
pop
mov
nop
aad
xchg
mov
scas
mov
or
cld
aaa
std
mov
inc
or
in
stos
adc
in
scas
insb
dec
cld
sub
retw
xchg
in
pop
sbb
and
movsl
inc
fistpll
pop
mov
cmpsb
mov
fildl
add
sbb
dec
xchg
fadds
inc
jl
shll
cmp
lods
and
cmp
adc
adc
xchg
jg
fimuls
dec
fidivl
xchg
pop
inc
out
cmpb
dec
lock
fistpll
insl
xchg
daa
mov
imul
xor
aam
scas
lret
jb
xchg
out
repz
lods
xchg
ret
ljmp
dec
mov
rol
pop
adc
decl
pushf
sbb
shll
sub
rolb
fisubrl
cmc
jg
jne
xchg
or
mov
cmp
in
add
push
add
scas
xchg
push
movsb
repz
xor
nop
loope
cld
rcrl
sub
mov
shll
add
cmpsl
mov
mov
pop
outsb
inc
mov
adc
jae
call
repz
pop
decl
mov
mov
popf
es
jbe
push
ret
xlat
xor
add
sbb
loopne
adc
jns
lcall
push
mov
push
jo
dec
add
fisttpll
mov
push
hlt
lahf
mov
push
aam
ljmp
into
lock
cmp
mov
mov
pop
add
jbe
add
sub
or
mov
or
fs
call
jns
outsl
sub
stos
in
pusha
ret
pop
bound
adc
adc
in
jg
nop
push
or
lods
iret
cmpsb
aam
pop
les
lret
call
add
sub
pop
jns
sbb
test
lds
inc
sub
movsl
adc
cltd
inc
lcall
scas
mov
push
mov
in
adc
sbb
popa
pop
adc
xchg
sbb
pop
into
push
aam
push
pop
adc
pushf
mov
call
std
mov
lret
add
dec
dec
mov
dec
adc
mov
cltd
les
sub
nop
int3
lods
mov
imul
sub
inc
pop
enter
xorb
in
inc
fs
insl
mov
ljmp
push
cltd
and
push
jae
dec
jle
pop
jae
mov
stos
jg
mov
lahf
stos
sbb
and
ss
aad
jg
cmp
adcb
pushf
aaa
push
aam
adc
adc
lret
fisttps
call
or
into
rclb
pop
loopne
lret
adc
lock
cmp
fisttps
incl
adcb
sbb
pop
push
sbb
inc
xchg
cwtl
mov
push
dec
dec
ljmp
lds
pop
sbb
jmp
jl
arpl
lret
mov
add
mov
leave
insl
pop
leave
lds
rclb
pop
mov
add
in
cmp
clc
outsl
adc
lds
int3
xchg
pop
jmp
sbb
adc
cmp
sbb
mov
xlat
outsb
int
pushl
orb
pop
mov
in
cltd
fadds
lods
rcrb
xchg
adcl
test
js
mov
inc
bnd
xchg
sbb
jo
dec
ljmp
or
es
jl
jbe
mov
ret
or
xchg
std
arpl
jmp
and
pop
push
or
aas
lcall
dec
aas
xchg
in
and
xchg
pusha
fildll
iret
repnz
jns
pop
rclb
dec
push
jecxz
lds
mov
icebp
jmp
hlt
cmpsb
add
dec
add
cmp
mov
mov
ret
push
sbb
daa
cmp
sub
mov
ljmp
push
pop
scas
or
lea
arpl
jl
mov
mov
decl
xor
and
xchg
jmp
fadds
test
add
jno
or
lcall
insl
or
and
dec
pushl
cmp
rcrl
fwait
mov
inc
or
and
xor
mov
cmpsb
mov
sub
ja
mov
pop
std
pop
sub
push
ror
mov
jns,pn
dec
pop
les
push
xchg
ljmp
cli
pop
and
aam
xchg
mov
in
adc
push
loope
and
jg
xchg
sahf
push
mov
jl
xor
rcll
pushf
mov
sub
dec
fwait
jecxz
das
clc
jbe
inc
loopne
mov
js
mov
sbb
sar
mov
shrl
into
push
sbb
call
repnz
out
sbb
pop
lds
in
ja
push
xchg
and
es
leave
das
lea
popa
loopne
mov
mov
xchg
add
call
inc
aad
maxps
sub
jmp
inc
icebp
hlt
mov
jl
test
lods
inc
cmp
das
or
dec
call
push
fs
adcb
sti
ljmp
mov
cmp
mov
or
popa
add
inc
pop
or
decl
inc
inc
mov
in
sti
jecxz
testl
cmp
daa
nop
das
arpl
xlat
insl
fcoms
and
decl
push
or
push
xor
or
jle
dec
push
or
cvtps2pd
mov
mov
mov
mov
fcomp
pop
adc
std
jg
pusha
sub
inc
pop
dec
cmp
mov
add
add
push
aas
fstps
ljmp
add
ljmp
jl
or
sbb
insl
mov
nop
lahf
jne
jb
lock
dec
push
call
outsb
pop
fidivrl
ljmp
pop
push
mov
push
ret
push
push
cmp
stc
leave
sub
in
test
sbb
xor
js
push
cmp
inc
sub
fmull
inc
or
test
sti
fwait
adc
in
jmp
roll
xchg
fmull
mov
cmp
movsb
lcall
pop
mov
add
rcrb
pushf
ud0
inc
sub
in
lret
aaa
cmp
prefetcht2
outsl
loopne
les
dec
pop
jnp
filds
pop
fbld
mov
xchg
fcomip
sahf
and
sbb
cmp
std
test
stc
dec
sbbl
fimuls
cltd
jg
mov
fldt
add
pushf
ljmp
add
adc
jmp
inc
inc
sbbb
outsl
imul
into
and
imul
test
test
iret
mov
psllw
in
and
outsl
push
xor
jae
jmp
test
cmp
inc
jb
filds
adc
push
insb
adc
loope
inc
and
dec
loopne
pop
ret
mov
pop
sub
inc
fistps
or
add
ss
mov
mov
incl
cld
subb
cmpsb
fnstcw
mov
imul
push
pop
add
dec
mov
add
mov
push
xor
insl
pop
jns
inc
iret
comiss
decl
test
jg
nop
sub
insb
stos
imul
fdivr
or
or
pop
inc
dec
lea
daa
icebp
ret
and
jo
nop
push
dec
add
mov
inc
mov
or
fists
aam
scas
in
xchg
leave
jg
mov
nop
mov
in
xor
inc
cmpl
clc
jbe
scas
push
in
and
push
outsl
in
aas
mov
mov
sarb
adc
stos
mov
lret
pop
in
lahf
jp
cmp
out
cmc
mov
outsl
scas
adc
lods
adc
out
lret
aam
cwtl
pop
mov
decl
or
mov
fdivs
lods
pop
repnz
fsubl
lret
mov
jg
incl
nop
mov
cmp
mov
push
sub
dec
mov
add
sub
aas
adc
inc
push
scas
and
iret
mov
insb
out
cli
cmp
enter
bound
fcmovb
mov
push
or
call
jnp
or
xor
jmp
inc
inc
aaa
xchg
roll
cmp
outsb
popf
inc
jmp
movl
call
xor
and
rorl
shl
dec
push
jo
ljmp
dec
mov
mov
push
lods
jno
cmp
imul
decl
lods
xorl
mov
and
pop
repnz
add
adc
sub
and
ljmp
fnstenv
stos
and
popw
add
pop
push
inc
jmp
mov
push
jg
inc
push
fwait
js
loope
pushf
xor
cld
outsb
nop
adc
sub
das
scas
and
jg
inc
bound
mov
inc
addr16
loopne
mov
ljmp
aas
mov
add
fs
xchg
sbb
add
mov
decl
cmp
mov
jl
popa
faddl
mov
mov
jmp
dec
pop
xor
mov
imul
push
lea
jno
mov
pushf
lods
adc
pushf
fwait
xchg
add
outsl
dec
sarb
ljmp
or
movsb
sub
mov
das
sub
scas
lea
scas
mov
mov
fcomip
or
jno
mov
xlat
lret
hlt
popa
pusha
xorb
out
test
inc
scas
push
sub
call
adc
out
test
daa
sahf
insl
stos
lea
xor
adc
ljmp
xchg
negl
or
dec
or
sbb
out
test
cmp
sbb
decl
nop
into
es
adc
or
pop
inc
lret
lock
in
jmp
ja
sbb
cmpsl
mov
adc
shl
xor
mov
pop
sar
andl
mov
or
cmp
fisttpll
add
mov
xchg
cmp
add
xor
pop
pop
iret
xchg
loop
decl
out
out
mov
xor
stc
and
jno
dec
mov
test
divb
lock
pop
dec
xor
repz
or
cli
call
pop
js
test
dec
dec
xor
loope
das
inc
push
adc
pop
imul
stos
decl
shrl
js
lahf
push
mov
insb
push
xorb
mov
mov
ret
jg
jge
popf
cwtl
mov
or
sub
lahf
iret
jo
xchg
sub
jnp
pushl
sub
push
or
dec
aad
lcall
jno
jmp
xchg
clc
imul
movsb
scas
adc
or
fs
jbe
inc
decl
jbe
push
sbb
pusha
mov
sub
and
pop
cs
jl
adc
shrb
jl
incl
mov
mov
inc
and
lahf
inc
push
or
out
mov
pcmpgtw
ret
hlt
cmc
leave
lock
lods
lods
sub
mov
cwtl
jmp
or
cmp
push
lcall
or
sbb
adc
fwait
or
pushl
mov
js
xchg
jle
dec
jno
jecxz
mov
das
in
adc
rol
jns
popf
ret
sub
nop
add
movsl
jbe
cmpb
pushl
cmp
shlb
pop
shrl
mov
call
dec
jl
mov
xor
shlb
mov
xchg
cmp
cmp
negb
push
adc
rcl
push
mov
sub
dec
sub
dec
mov
insl
out
jg
jle
outsb
xchg
jg
std
stc
nop
bound
fldl
hlt
jle
fs
lcall
inc
pop
mov
jb
jmp
add
sbb
mov
jb
mov
xlat
fisttpll
mov
or
push
inc
pop
sub
test
pop
or
xor
cmp
loopne
add
decl
mov
and
xor
cmp
xor
jmp
js
enter
push
nop
mov
pop
cmp
dec
test
and
dec
loopne
mov
xchg
mov
xor
jns
or
cld
push
fisttps
add
fbstp
push
xor
mov
decl
je
movsl
incl
nop
shll
cmc
call
pop
inc
jge
mov
movsl
les
and
pushl
mov
mov
fildll
enter
inc
arpl
pop
mov
push
int
jnp
cmp
in
sbb
orb
mov
push
mov
insb
sbb
fisttpl
add
push
jb
ljmp
clc
mov
scas
mov
sahf
mov
insb
inc
push
push
pusha
imul
inc
incl
cld
incl
dec
repz
lods
subl
jp
inc
std
aad
adc
push
mov
rolb
inc
pusha
mov
cmp
ud0
in
scas
hlt
or
popf
or
jp
add
arpl
nop
popf
pop
sbbl
cmp
sti
jmp
add
lahf
inc
push
mov
imul
decl
das
aas
pushf
int
lock
mov
xchg
xchg
sbbl
or
add
adc
fisubl
ss
call
insl
mov
add
imul
sub
dec
stos
xor
ljmp
mov
and
sti
add
cmp
popf
adc
inc
adc
and
push
mov
in
hlt
jl
and
add
lahf
mov
mov
sbb
fdivr
loope
push
jmp
rclb
add
add
inc
icebp
andb
cmp
ljmp
enter
cli
sahf
add
clc
sub
insl
or
cld
call
scas
lock
mov
inc
inc
fisttps
lock
pop
ljmp
pop
push
add
test
mov
add
mov
inc
push
cmpb
nop
mov
mull
lahf
inc
enter
or
push
add
inc
jne
pop
clc
or
je
or
or
ret
or
xchg
inc
lods
adc
pop
xchg
nop
xor
pop
push
push
cltd
adc
adc
aaa
jl
testb
stc
pusha
jl
xor
sbb
push
mov
ret
pushl
rcr
lcall
pop
aas
ljmp
jecxz
sahf
or
pop
lods
and
push
pop
sbb
dec
test
xchg
pushf
mov
or
mov
mov
ficoms
push
or
in
flds
into
or
pop
pushf
jecxz
push
dec
filds
call
push
icebp
out
push
mov
fisttps
test
mov
out
lcall
ret
iret
add
xor
pop
movsb
sbb
jg
add
fisubs
and
movsb
icebp
cmp
cmp
icebp
and
fcomip
xor
ljmp
cs
je
ss
inc
fmull
fcmove
movups
add
in
and
decl
das
dec
cmpsb
test
xor
add
mov
mov
adc
in
js
sub
or
js
xchg
test
pushf
shll
cmc
inc
jo
nop
mov
fistpll
adc
jbe
or
or
jmp
ret
std
js
lcall
fmull
sbb
xchg
out
stc
adc
mov
sub
jne
push
fisttps
pop
sbb
jecxz
sbb
into
or
rorl
jg
daa
jns
push
add
cs
fsubrs
push
mov
xchg
nop
push
xchg
xchg
jg
mov
das
push
faddl
dec
or
fldenv
popf
aas
jg
and
nop
add
mov
mov
das
in
nop
cwtl
cmpsb
sub
xchg
syscall
dec
gs
sub
push
cltd
fisttps
inc
push
popa
dec
jns
enter
adc
add
pop
divb
int
decb
adc
push
mov
cli
adc
push
pop
hlt
pop
mov
mov
das
mov
sahf
xor
xor
pop
adc
xchg
sbb
xor
decl
int3
jg
stos
sub
inc
out
dec
cmp
fstl
mov
lds
out
add
clc
cmp
fists
mov
mov
fists
outsl
jb
imul
and
mov
fists
loopne
jl
and
or
leave
scas
xchg
xchg
repnz
ljmp
lea
inc
iret
push
adc
pushf
jg
sub
call
mov
lock
in
lock
inc
fwait
push
push
push
andl
cld
and
test
inc
lcall
loop
or
mov
fiaddl
pop
jg
push
cld
or
push
and
movsl
xchg
and
sar
lcall
push
dec
dec
cmp
movsl
mov
iret
loopne
mov
push
jecxz
dec
fsts
or
sbb
inc
jmp
xor
shlb
dec
jb
jmp
mov
mov
mov
jmp
pushl
pop
repz
inc
lret
or
jmp
daa
mov
mov
mov
fistpll
movlhps
int
test
push
mov
pop
popa
cli
xor
lcall
in
pop
xchg
pop
cmp
outsl
mov
add
mov
sti
mov
sar
jg
jbe
out
adc
ret
mov
out
sub
lods
dec
imul
sbb
jmp
pop
sar
lods
xchg
jg
push
outsl
inc
add
je
sbb
bound
cmp
sub
into
mov
push
roll
stos
xor
stos
movl
sub
push
inc
cmp
pushl
pop
aam
lds
pop
shlb
add
mov
xchg
es
add
decl
lahf
add
dec
rcl
out
or
xor
xchg
mov
cs
scas
mov
xchg
add
mov
lock
fldt
dec
aas
or
test
fwait
fs
sbb
jb
jl
sbb
add
or
dec
push
bound
in
mull
rcrl
or
mov
ljmp
adc
sbb
add
cmp
incl
rolb
cmp
inc
sbb
idivb
adc
jg
ljmp
or
adc
xor
or
nop
push
int
mov
clc
xor
cs
ftst
xchg
out
mov
mov
imul
decl
fbld
test
dec
fdiv
lcall
inc
push
lret
and
fdivl
cli
ljmp
mov
dec
lods
test
xor
push
mov
jg
mov
add
jne
loop
mov
add
das
inc
jns
adc
cmp
repnz
lcall
decl
ret
in
add
adc
nop
mov
test
std
dec
out
xor
dec
add
int
push
out
push
xchg
test
lock
mov
ljmp
sahf
mov
out
loopne
faddl
jp
jnp
icebp
xchg
dec
dec
sub
insb
pop
sar
xorl
push
pop
pop
lcall
andl
je
xor
and
cs
xchg
jl
sub
insl
popa
pushl
outsl
test
xorl
inc
sbb
xchg
addr16
pop
repz
push
or
je
outsl
and
sahf
mov
jo
testb
das
and
fcompl
inc
sub
ds
fwait
mov
add
xor
xor
ss
cmp
popa
adc
cmp
mov
ja
imul
push
je
gs
insb
jbe
and
outsb
lods
decl
jae
sbb
cmp
gs
fs
divb
ja
or
jl
dec
inc
jnp
jmp
je
cmc
cmp
and
lock
outsl
xor
inc
dec
jae
pop
push
cmp
lea
sub
pop
cld
cmp
mov
jge
arpl
xor
add
imul
cs
subb
js
add
jg
sub
inc
arpl
arpl
push
sbb
dec
xor
pushl
xor
insl
ret
std
filds
sahf
test
dec
push
inc
bnd
repnz
imul
in
imul
or
jg
popa
cld
mov
int
push
clc
push
ds
adcl
ljmp
clc
cs
fcomi
bound
je
popa
jbe
xchg
jb
inc
js,pt
fimull
decb
add
imul
rorb
daa
push
mov
dec
push
int
mov
das
lret
pop
scas
cs
rcrl
inc
incl
outsl
xor
adc
pop
cmp
xchg
push
mov
sarb
cld
lahf
mov
outsl
or
fsubrs
fcomps
jae
push
cs
pushl
lods
pusha
mov
mov
dec
call
leave
outsl
js
in
inc
mov
mov
gs
sub
cltd
jg
pop
outsl
jo
jmp
popa
xchg
les
push
push
and
loopne
or
fs
sbb
outsb
dec
inc
push
push
inc
inc
nop
pop
pop
cwtl
std
pop
aaa
add
cld
dec
xor
push
imul
insl
in
mov
mov
outsl
jp
out
popa
movswl
dec
xor
mov
xlat
adc
xor
mov
inc
fbstp
jb
out
pop
fbld
in
push
mov
incl
push
subl
push
push
push
fiadds
cmp
ja
test
xchg
mov
ljmp
inc
push
and
add
ja
pop
cmpsb
insb
pop
cmp
jns
aam
scas
jo
jecxz
sub
insb
push
sub
jae
sbb
add
out
test
jae
pop
rolb
mov
jo
decl
xchg
lods
mov
pop
inc
cmp
add
loope
inc
sbb
jle
add
je
xor
loope
call
adc
pop
jns
push
test
lods
ljmp
push
sbb
add
fisubs
and
add
add
add
push
nop
or
incl
jecxz
stc
or
cmp
je
das
cli
xchg
jmp
jae
xor
stos
jne
mov
cmp
es
adc
sbb
push
sbb
adc
sar
insl
and
mov
sub
fstpt
ss
push
hlt
sahf
shrb
movsb
das
xor
cmpsb
shrl
xor
pushl
mov
add
or
pop
dec
xchg
fdiv
scas
mov
fsubp
out
xchg
push
inc
push
sub
jae
mov
mov
in
out
or
add
in
stos
lcall
jns
arpl
out
ss
mov
neg
pop
or
xchg
or
arpl
outsb
sub
jb
cmp
out
outsb
outsl
sahf
xor
mov
jo
mov
sahf
add
mov
pushl
jecxz
bound
xchg
jg
in
shll
sub
push
dec
in
push
cmp
pop
ss
inc
and
decl
loop
sub
in
and
inc
xor
push
pusha
jo
scas
mov
fisttps
adc
clc
pop
shl
out
mov
add
imul
rolb
stos
loopne
jmp
push
sahf
push
in
sub
loop
xchg
or
jmp
jmp
test
aas
and
and
das
das
sub
adc
rolb
pop
mov
scas
orb
jmp
shrl
stc
push
dec
mov
xchg
in
pop
inc
xchg
shrl
mov
dec
les
dec
add
and
pop
shlb
shr
fsubrs
test
jne
pop
sub
cmp
mov
sub
pop
push
sub
mov
xor
xor
cmp
notl
arpl
or
jmp
push
jb
ljmp
sahf
mov
mov
daa
pushf
addr16
pop
push
inc
inc
xor
inc
dec
dec
dec
loopne
inc
scas
data16
xor
mov
lret
jbe
xor
jle
mov
xor
pop
loopne
sbb
aad
loopne
decl
jp
adc
insb
dec
out
sbb
shll
in
ja
mov
ffree
jo
arpl
adc
xor
cmp
ljmp
jbe
push
xchg
and
ljmp
repnz
adc
in
jo
mov
jb
add
sub
cmpxchg
insl
mov
mov
fs
cli
ljmp
fnstcw
fnsave
pop
cvtdq2ps
sub
jno
aam
and
idiv
stos
scas
cmp
test
jae
jg
cmpsb
inc
in
mov
ds
mov
fwait
enter
mov
fisttpll
iret
shr
test
faddl
adc
sbb
das
cmp
mov
outsl
lock
xchg
test
lock
dec
dec
adc
dec
adc
jne
or
decl
cmpl
sbb
out
push
fimull
daa
cs
jo
sbb
gs
ljmp
dec
sbb
decl
dec
inc
inc
push
testl
pop
clc
dec
mov
dec
push
push
adc
dec
repnz
pop
iret
xchg
cmp
imul
fbld
ret
inc
jbe
js
jp
xor
mov
sub
add
mov
add
js
cs
jg
ja
inc
cmp
xor
mov
dec
dec
and
and
jecxz
insb
inc
dec
pushl
fs
outsl
pop
pushf
insl
psrlq
dec
sahf
sub
push
cmp
or
dec
cs
lcall
roll
sbb
or
movsb
push
cs
inc
jne
in
filds
std
outsb
mov
popa
jns
jo
push
aam
int3
test
ja
mov
loopne
push
shrl
push
call
ret
push
mov
sahf
or
xorb
cmpsb
xor
xor
mov
call
lea
sub
push
call
inc
cmp
dec
push
inc
cli
inc
fs
jecxz
mov
repz
inc
decl
push
mov
mov
xchg
cmp
sub
outsl
sub
push
aas
fdivrl
std
fsubrp
mov
clc
or
aas
mov
insb
jns
push
popf
mov
and
fistpll
dec
ljmp
pushl
xor
pop
cmp
dec
cmp
test
xor
xor
stos
clc
and
loope
das
pop
add
pop
dec
ds
add
int
pop
push
pop
cmp
gs
or
pop
hlt
incl
imul
add
cmc
dec
push
sub
pusha
pop
cmp
jo
lcall
sub
ja
lds
mov
movb
sbb
fwait
dec
out
fidivs
mov
push
inc
out
adc
mov
in
adc
lods
cmp
jno
daa
push
cwtl
sbb
int
jnp
push
adc
adc
test
xorb
shrb
into
xor
decl
jmp
add
add
jne
pop
or
lret
cmp
imul
decl
mov
inc
shlb
cmp
shrl
lds
push
stos
or
pushl
jmp
in
push
loop
mov
sbb
mov
cmp
mov
inc
jbe
mov
inc
ss
pop
pusha
cmp
inc
inc
push
call
xor
sub
inc
dec
dec
push
decl
push
dec
dec
mov
repnz
dec
jbe
dec
adc
shlb
inc
inc
test
and
bound
sub
jg
mov
push
add
mov
add
jb
mov
enter
sahf
in
adc
ja
jo
mov
xor
inc
push
cli
push
inc
dec
add
jp
addr16
dec
ja
dec
cmp
jmp
cmp
inc
dec
push
adc
adc
ja
mov
pusha
sub
xor
inc
dec
cltd
pop
xchg
mov
push
testl
pushl
dec
push
dec
push
movb
fldlg2
push
dec
push
out
mull
inc
mov
and
and
clc
push
push
push
dec
ret
or
and
or
les
in
or
sbbb
pop
inc
or
ss
aaa
inc
dec
pop
mov
mov
mov
mov
dec
dec
pop
inc
inc
dec
daa
inc
inc
enter
sbbb
dec
das
inc
dec
lahf
add
push
mov
pushf
aam
mov
xchg
xchg
int
movsl
push
and
idiv
mov
insl
mov
mov
pop
inc
sti
das
test
loope
mov
call
lret
dec
sahf
dec
sbb
sahf
lret
fimuls
mov
adc
or
mov
add
je
ds
sbb
add
scas
xorl
xor
xor
in
flds
test
ljmp
jnp
adc
cmpl
inc
inc
pop
dec
int
addb
adc
dec
pusha
pop
xor
push
inc
jg
gs
adc
mov
xor
hlt
inc
movsb
das
clc
sti
lods
mov
fmull
call
cmp
sub
jge
mov
pop
rcl
enter
cli
icebp
call
imul
addb
daa
fnstsw
inc
inc
js
in
pop
push
push
push
outsb
mov
sbb
mov
sbb
sahf
leave
cs
orl
mov
pop
mov
sbb
cs
bound
dec
push
cld
out
cli
aaa
and
and
ss
adc
or
cli
dec
mov
ret
push
out
mov
mov
mov
dec
mov
or
pop
repz
pop
dec
pop
es
dec
inc
cwtl
push
sub
rclb
adc
inc
pop
cmp
inc
push
push
xchg
xchg
adc
adc
jle
push
xchg
push
pop
xchg
cld
decl
cmp
xchg
movsb
and
sbb
push
mov
rcrb
mov
gs
ljmp
dec
popa
lock
scas
add
mov
imul
mov
xchg
dec
pushl
lods
fistps
sbb
nop
sub
lret
cmp
dec
push
pop
inc
inc
lods
sbb
stc
dec
ret
cld
pop
inc
das
cmp
movsl
into
out
test
lods
bound
push
mov
xor
lcall
dec
pop
push
mov
xlat
mov
xchg
mov
push
or
inc
pop
ret
xor
jb
out
push
loop
dec
call
cld
xchg
push
cmp
add
out
inc
push
movsl
add
push
outsb
or
call
rcr
data16
mov
dec
xchg
xchg
dec
cmp
adcl
xor
mov
adc
fnstcw
fistps
aaa
popa
cmp
mov
mov
insl
js
inc
ja
jecxz
popf
fiadds
add
or
jo
add
jp
jb
test
jg
pushl
xor
movsb
cmp
and
and
jo
pop
pushl
pop
je
dec
or
jmp
jns
mov
and
fidivrl
inc
adc
push
sbb
jecxz
ja
mov
aaa
fldcw
gs
popa
sbb
or
add
and
fcom
popa
and
inc
xchg
inc
mov
mov
cmp
inc
xor
pop
push
test
pop
pop
xor
sbb
jo
bound
imul
jp
mov
aam
inc
adc
scas
push
jl
hlt
mov
and
xor
pop
push
pop
and
lcall
sub
notb
sbb
push
pop
mov
lds
testl
decl
clc
dec
mov
jo
inc
jns
dec
mov
push
out
or
pop
inc
enter
pop
pop
ja
scas
mov
dec
mov
ljmp
inc
jmp
push
xor
movsl
inc
incl
ficoms
test
sbb
into
sahf
jo
lods
jg
adc
in
mov
xlat
mov
loopne
xchg
test
inc
cld
popf
pop
fisttps
add
mov
insl
in
xchg
pushl
imul
sarb
movl
pop
repnz
xor
lcall
jmp
fs
imulb
mov
nop
mov
rcrl
xchg
jnp
fisubs
mov
jle
in
and
xor
push
movsb
jne
movsb
nop
pop
inc
cmp
testl
std
ror
ds
sbb
cmp
add
incl
jns
sahf
int3
adc
jae
sub
outsb
mov
fnstcw
decl
mov
add
int
inc
jb
xor
cs
push
sbb
loopne
lock
jg
inc
fsubl
roll
ret
jnp
scas
shrb
add
ficoml
add
sub
push
xchg
or
mov
push
adc
dec
inc
cmpsl
dec
stos
push
add
imul
xor
loop
mov
adc
orb
stos
pop
lahf
sub
push
cmp
mov
sub
pop
sub
push
cmp
push
clc
cld
jo
ret
push
iret
ljmp
jle
dec
jmp
sub
cs
pusha
in
icebp
insl
mov
pop
mov
add
dec
xchg
cmpsl
inc
movsb
pop
sahf
ret
dec
mov
repnz
mov
aas
jmp
mov
lds
mov
movl
cmpsl
xor
add
ljmp
pop
sub
ljmp
add
clc
mov
loope
xor
insl
incl
add
sbb
push
sub
sbb
xor
leave
in
xor
sbb
and
xor
jmp
scas
mov
cmp
ds
or
add
push
punpcklbw
outsl
lcall
je
xor
sub
das
or
sub
je
aas
arpl
sahf
ljmp
cs
jae
cs
cs
imul
rcrb
js
mov
sti
push
pop
and
add
add
xor
jne
wrmsr
dec
adc
jg
std
adc
adc
pop
xor
clc
mov
xor
popa
mov
push
cmp
pop
jmp
std
scas
ss
arpl
or
dec
outsb
enter
test
add
loope
lock
repnz
jo
mov
rol
roll
add
cmc
inc
sub
push
xor
mov
mov
das
add
les
sub
loope
jno
pop
je
jnp
ljmp
fstl
mov
shll
mov
mov
je
add
lea
decl
adc
out
gs
out
gs
test
pop
ljmp
sbb
dec
xor
and
femms
cmp
popa
push
push
lods
out
pushf
xor
in
jo
cmpsb
push
pop
ljmp
jge
insb
in
addr16
inc
pop
sub
jne
lcall
and
pop
sub
and
lahf
xor
data16
scas
mov
outsb
aaa
icebp
jnp
sub
or
xor
xchg
int3
and
mov
sbb
sub
das
sar
loop
icebp
iret
notb
jge
loope
adc
jnp
mov
fisttps
pushl
xchg
mov
mov
dec
pop
dec
xchg
cld
push
push
xchg
jnp
mov
aaa
adc
push
sbb
sbb
mov
pushl
pop
je
daa
or
cmp
movsl
jp
lock
mov
mov
cmc
decl
pusha
pushl
and
adc
mov
daa
and
dec
and
insb
out
adc
xchg
idivl
and
cmp
and
pop
cmp
xchg
dec
and
add
jb
cmc
dec
pop
fidivrs
cld
dec
push
sbb
jmp
insl
pop
jne
xor
mov
push
js
out
inc
push
cmp
cmp
adcb
adc
add
push
lods
rcrl
aaa
sub
dec
adc
add
cmpsb
mov
aas
cs
add
ss
sub
sbb
add
decl
sbb
bound
adc
or
ror
test
fdivrl
das
push
decl
or
pop
sub
js
call
sub
hlt
jmp
inc
jbe
addr16
push
jae
push
and
inc
inc
popa
outsb
arpl
xchg
adc
dec
fbld
xor
xlat
aam
movb
fbstp
mov
aam
push
incl
cmp
push
inc
sub
mov
outsl
aad
mov
fs
lcall
dec
outsb
mov
jo
jge
sbb
sbb
pop
or
insl
out
clc
lahf
sbb
push
ja
xor
push
imul
dec
mov
out
jae
add
dec
sbb
inc
outsl
xor
adc
inc
cwtl
or
mov
lcall
lret
push
dec
ja
push
inc
cmp
aaa
shll
insb
hlt
orb
dec
jmp
add
mov
aas
push
jecxz
adc
daa
movsb
das
arpl
ja
sbb
fildll
dec
cmp
ljmp
pop
adc
sub
add
xchg
test
inc
and
mov
sub
jae
inc
sub
dec
push
ljmp
fnsave
rorl
sub
inc
push
enter
push
jmp
inc
sub
adc
mov
popa
js
out
pop
sub
cmpb
lock
dec
idivb
movsb
ljmp
push
pop
add
lods
xchg
xor
jmp
fisubrl
pushl
push
les
outsl
xchg
fnsave
xchg
addr16
and
lret
lock
xor
push
movsl
cmp
dec
push
push
bound
and
sub
jl
decl
fs
repnz
xchg
or
push
push
push
dec
push
hlt
inc
adc
mov
arpl
jbe
pop
nop
mov
and
inc
rolb
mov
enter
lea
fsubrs
fadd
ret
add
test
push
cmpsb
xlat
mov
scas
ljmp
and
ret
mov
mov
inc
dec
and
mov
pop
mov
add
pop
std
or
xchg
sbb
test
xor
adc
dec
sub
vmovlps
jb
jns
lret
push
test
es
cmc
mov
aam
and
decl
in
push
je
inc
sub
jg
pop
xchg
xor
in
and
dec
lcall
pop
shll
insl
out
test
mov
inc
loopne
stc
rolb
dec
and
in
fcos
call
loopne
mov
add
sbb
and
inc
frstor
pop
outsb
das
push
jno
out
enter
jl
push
push
out
xor
and
pop
mov
and
mov
xchg
cld
push
push
inc
pop
stos
pop
stos
push
push
test
push
clc
xor
aad
sub
subb
mov
inc
push
cmp
adc
adc
mov
or
lock
and
sbb
or
jg
movsl
scas
add
pop
fsub
dec
dec
mov
or
sbb
ds
push
push
shr
mov
or
clc
jo
push
data16
xor
pusha
dec
sahf
hlt
jmp
xor
pop
jmp
sbb
adc
sub
ljmp
add
mov
addr16
addr16
sbb
mov
fcomip
pop
cmp
dec
in
in
cmp
subl
adc
cmp
xchg
popf
push
js
decl
fs
jl
popa
jae
jmp
sbb
pop
push
jae
out
in
movb
iret
mov
inc
jb
cli
ljmp
mov
add
push
mov
lret
hlt
lcall
or
push
add
aad
inc
out
and
lcall
dec
mov
mov
push
sub
or
sbb
jg
cmp
dec
xor
cmp
cmp
dec
subl
or
sub
test
xor
xor
in
dec
adc
movsl
jg
lock
lret
mov
fists
outsl
lret
mov
cli
inc
push
fldcw
push
sub
adc
incl
daa
dec
push
loop
arpl
das
push
inc
jne
data16
adc
scas
lods
dec
or
push
pop
mov
push
call
sub
hlt
inc
sub
or
fwait
push
jmp
inc
sub
xchg
xor
out
add
add
sbb
outsb
sbb
xchg
filds
pop
add
jbe
pop
imul
pop
loope
jne
xor
outsl
xor
loope
lea
inc
bound
sub
xchg
popf
lods
ss
inc
fadds
pop
ljmp
mov
in
lods
sbb
sbbb
int
rolb
xlat
sbb
mov
sbb
call
or
pop
and
mov
insb
sub
add
decl
sarl
notb
push
inc
add
call
filds
inc
jmp
lock
test
fimuls
dec
jg
andl
addl
xor
call
pushl
or
pop
adc
pop
popl
jg
outsl
je
scas
shlb
push
pop
mov
inc
fisubrl
xchg
mov
xor
das
daa
loop
adc
pop
and
aad
sbb
inc
push
mov
cmp
mov
and
iret
sbb
popf
sub
mov
cmpsl
jg
push
sub
incl
push
sbb
push
add
addb
push
sbb
aaa
aad
ljmp
or
push
movsl
mov
inc
or
test
mov
or
aaa
std
popf
sbbb
sahf
push
push
sub
ds
loopne
jns
push
push
pop
sbb
add
push
cmp
cmp
repz
or
add
pop
subl
repz
mov
dec
mov
adc
je
repz
enter
std
and
ds
shr
or
push
out
dec
fiadds
push
jl
fmuls
out
pop
mov
insb
cltd
mov
mov
and
jg
into
jg
insb
les
bound
testb
jmp
addb
pop
cmc
sbb
lahf
outsl
sahf
aam
push
mov
outsl
mov
add
stos
and
xor
fstps
push
pop
clc
fstl
inc
sbb
pop
arpl
push
mov
ds
decl
dec
scas
sbb
outsb
cs
sbb
icebp
cmp
mov
adc
repz
push
xchg
mov
xor
mov
js
inc
pop
cmp
insb
sbb
fldt
push
mov
imul
or
pusha
mov
push
adc
jne
add
gs
push
iret
mov
pop
outsl
in
js
outsb
repz
ficompl
scas
ljmp
mov
adc
cli
rcll
sbb
orb
ret
and
cli
sti
fistl
inc
and
sbb
imul
pop
out
and
or
mov
jns
inc
aaa
into
out
push
fwait
in
ss
scas
pop
xchg
insb
inc
out
pop
pop
lret
repz
aas
ficomps
das
stos
sahf
dec
pop
icebp
call
fnstsw
dec
ljmp
mov
shll
arpl
mov
addr16
leave
or
decl
fnstcw
stc
lds
in
push
cs
mov
data16
fdivrs
in
popf
ucomiss
ret
xlat
mov
stc
fsub
xchg
out
dec
pop
repz
stos
stc
leave
mov
inc
out
jmp
fwait
cs
cmpsl
in
jle
xchg
xlat
mov
ja
inc
testl
insb
push
lahf
lret
push
mov
jle
mov
pop
mov
dec
sbb
incl
add
adc
out
cmp
fisubrs
and
sbb
fwait
insb
xchg
das
xchg
enter
rorb
pop
sub
stc
je
push
jle
sbbl
imul
loopne
rclb
bound
fcoml
out
cmpsl
lods
shrl
outsb
mov
or
aad
push
cltd
inc
push
fsubr
push
mov
dec
add
sarl
bound
adcl
and
decl
addr16
and
das
std
jp
dec
out
sub
sbb
adc
xchg
stos
or
jg
out
jno
popaw
inc
shlb
sub
or
insb
gs
insl
jecxz
das
fisttpl
addr16
ljmp
and
fsubs
aaa
mov
xor
pop
jo
je
mov
outsl
mov
insl
scas
jae
lock
pushl
js,pt
mov
pop
outsl
xchg
push
and
xor
insl
adc
dec
jae
insl
bound
mov
pop
arpl
fcoms
scas
mov
xor
pushl
adc
pushf
cmpsl
ss
fucomi
leave
cwtl
jne
imul
outsb
xchg
aaa
data16
popa
addr16
movsl
mov
jecxz
cmp
cmp
lcall
cli
std
cmp
add
fcomi
repnz
ljmp
addb
repnz
data16
pop
push
sti
jae
imul
data16
add
inc
stos
and
pop
push
xchg
push
inc
outsb
fisubrs
push
ret
mov
out
out
lea
or
dec
loopne
rclb
cmp
mov
mov
bound
mov
adc
repnz
outsl
jo
xor
or
cmp
inc
ret
push
lcall
iret
mov
adc
sbb
pop
lret
mov
cs
js
cmp
inc
jbe
loopne
cmp
mov
ds
jp
notl
push
sbbb
adc
or
add
pop
adc
adc
fcmovnu
push
sub
mov
add
sti
push
sub
rcrb
fistps
adc
xchg
dec
xchg
sarl
movsl
jne
fadds
repnz
test
adc
cmpsb
jb
xchg
out
lcall
out
pop
ffreep
push
mov
sbb
sbb
dec
into
sbb
fwait
hlt
xchg
dec
xchg
xor
ja
popa
cld
fstpt
les
push
hlt
push
xor
xchg
xor
inc
push
xchg
mov
aad
mov
dec
mov
out
jl
stos
push
call
sub
mov
ljmp
dec
jno
and
inc
mov
out
ficompl
in
insl
push
mov
mov
test
adcl
jno
adc
test
jbe
sub
sti
std
in
pop
fisttps
add
sahf
push
push
mov
dec
or
pop
push
imul
pusha
aad
addr16
add
cmpsb
add
std
inc
or
movsl
cli
push
mov
insb
lea
fildl
mov
xor
filds
dec
mov
out
sarl
xor
cmp
xlat
enter
or
mov
test
xchg
mov
or
or
and
or
adc
jmp
or
sarl
fdivl
add
add
xchg
mov
movsl
incl
mov
movsl
fdivs
mov
sub
adc
jnp
js
stc
mov
test
xchg
sbb
es
or
subb
call
hlt
push
imul
cmp
sub
test
push
insb
jnp
add
call
dec
data16
les
cmc
mov
adc
mov
cld
fildll
fnsave
sub
loopne
scas
push
repz
mov
aam
pop
popa
rorb
cmp
mov
pushl
mov
dec
xlat
repnz
shll
jmp
or
or
loopne
mov
ljmp
jae
testb
xor
jg
leave
jl
fnstsw
pop
push
stos
inc
adc
adc
pop
mov
icebp
ja
incl
mov
push
mov
cs
ljmpw
stc
ficomps
jg
ljmp
mov
pop
cmp
mov
cmp
lods
insb
mov
repz
add
add
inc
aad
scas
movsl
rorb
es
dec
push
add
push
fsub
adc
arpl
test
fs
ds
insl
js
pop
push
or
push
idiv
mov
or
mov
pop
jge
xchg
cmpps
shlb
add
push
lcall
ljmp
pop
push
test
ss
sbb
push
jbe
sbb
loopne
rorl
jp
adc
fcomp
outsl
fistpll
mov
mov
pusha
cmp
pusha
call
jecxz
jle
shll
push
repnz
addr16
mov
aas
dec
ss
jmp
mov
fimull
dec
or
scas
testb
pusha
das
add
ret
out
pusha
ljmp
jns
mov
jns
imul
andl
outsl
and
xchg
add
std
pop
add
mov
es
cmp
lds
fidivrs
lcall
sub
popa
pop
cmpsl
call
ret
inc
mov
sahf
fldcw
cli
push
fs
cli
mov
fwait
es
pushf
inc
push
or
or
int
pop
mov
push
ds
sub
dec
mov
loop
sub
or
mov
inc
jmp
in
out
sub
and
fisttpl
inc
shlb
icebp
sub
ljmp
push
int
sub
out
es
outsl
shl
ja
ja
sahf
out
pushl
push
dec
lret
out
cmp
sahf
gs
clc
sar
imul
fnstsw
push
js
popf
jg
out
rorb
dec
ret
cmp
xor
jmp
call
dec
inc
pop
dec
fildl
lret
sub
fldenv
filds
cmp
aaa
push
mov
test
int
mov
jmp
repnz
das
mov
xor
ljmp
mov
bound
push
xlat
int
push
imul
fldenv
jp,pn
je
pushl
pop
hlt
les
push
sub
mov
cs
decl
fucomip
adc
and
sbb
and
inc
lds
decl
pop
mov
hlt
ja
xchg
inc
dec
or
enter
rorl
fxtract
sti
decl
in
jecxz
dec
mov
lahf
jle
mov
sub
cwtl
xchg
fsts
jo
ljmp
jge
xchg
inc
out
jae
xlat
scas
cs
out
xlat
mov
sbb
test
mov
ljmp
loop
lret
ss
out
insb
insb
decl
js
decl
scas
int
and
xchg
jecxz
or
cmpsl
popa
ja
mov
testl
call
pop
mov
fisubrl
inc
inc
sub
outsl
imul
jo
scas
mov
sub
sub
pop
or
sbb
repz
pop
pop
jno
jo
mov
call
or
stos
xor
dec
inc
mov
ret
ret
xchg
sbb
xor
pop
nop
sti
fildl
fidivrl
jns
pop
jo
out
mov
ljmp
jns
inc
mov
sbb
je
sub
dec
jns
fcomip
dec
lock
jle
cld
xchg
sar
sbb
bound
jbe
and
mov
js
cmp
cltd
hlt
mov
pop
jl
lea
or
clc
in
lock
pop
std
xor
jo
cli
outsb
sbb
scas
adc
mov
movsb
subl
push
xchg
or
pop
fists
test
loope
xchg
lret
xchg
pop
add
sbb
pop
push
inc
sbb
jg
test
pop
adc
xchg
sbb
adc
push
inc
and
mov
loope
inc
out
jmp
jl
or
movsb
cmp
pop
xor
ljmp
sbb
sub
lods
out
gs
mov
adc
insb
mov
xchg
mov
cli
adc
jle
push
ds
loop
jns
das
and
sbb
sbb
repnz
sbb
loop
xor
dec
pusha
cs
push
out
mov
xchg
rcl
cmp
mov
js
mov
fbld
std
dec
cwtl
adc
or
pusha
or
pop
pop
pop
push
insb
hlt
adc
aas
and
dec
insb
js
adc
pop
repz
aam
pop
adc
pop
dec
roll
xor
pop
mov
aas
cld
adc
incb
jno
mov
inc
inc
mov
lcall
dec
lea
pushf
sub
mov
lcall
std
int
mov
xor
bound
push
mov
push
mov
mov
xchg
ret
xchg
fdecstp
jmp
dec
adc
sbb
inc
aas
cld
add
in
push
lcall
lods
mov
pop
clc
cs
jmp
adc
fisubs
lds
and
and
in
repz
push
repz
movsb
xchg
test
test
es
or
mov
stos
sub
cmp
repz
fists
call
cmp
mov
ds
mov
cmp
fcomip
ljmp
and
xor
jae
pop
sub
pop
mov
gs
cmc
bound
ss
jp
arpl
lods
xor
int3
jle
jecxz
pop
stc
dec
sub
xlat
loopne
adc
mov
jo
call
inc
pop
and
insl
pop
insb
cmp
loopne
push
aas
adc
call
add
jns
or
cmp
pop
hlt
and
fcoml
popa
adc
dec
cld
cltd
bound
inc
fcoms
in
into
pop
dec
loope
push
jle
loop
sub
cmp
adc
add
xchg
call
outsb
pop
rcr
mov
pop
lock
lods
ret
fistl
sti
std
mov
adc
cmp
or
push
dec
mov
in
lock
jmp
or
loopne
cltd
repnz
imul
in
and
out
lahf
ljmp
cld
shlb
xor
xchg
lods
mov
adc
test
pop
mov
faddl
jle
aaa
fcoml
sub
mov
cmp
and
mov
mov
jb
and
mov
push
stc
aaa
push
mov
add
inc
and
test
jmp
lret
push
xchg
push
icebp
pop
or
test
sbb
sub
int
lea
mov
or
stc
lods
add
mov
xchg
xchg
fcomps
fnstsw
lea
es
leave
in
cmc
lret
ja
lea
sbb
das
into
fwait
push
jmp
test
fildll
lods
sbb
xor
shrl
es
arpl
jae
ja
call
cmp
push
xor
adc
sti
mov
pop
loopne
dec
cmp
jmp
cmp
out
inc
aas
test
cmp
push
add
jp
pushf
aaa
decl
hlt
test
push
xor
aad
mov
or
adc
nop
in
and
mov
pop
push
mov
insl
xchg
leave
pop
sub
cmc
mov
std
and
and
fidivl
ss
sub
ds
sbb
sub
lcall
fcomip
out
push
addb
scas
jo
out
jno
pop
outsb
cltd
xor
jb
xor
lcall
push
loop
inc
fwait
aad
js
sbb
mov
in
push
or
jge
iret
test
movsb
je
jns
push
test
add
das
lret
mov
mov
ret
incl
outsl
jl
es
ficoms
je
pop
in
ja
adc
push
stos
and
imul
sbb
stos
sub
shr
aam
cmpsb
gs
jmp
add
lea
xor
pop
incl
dec
dec
pop
outsb
or
dec
cld
arpl
dec
pop
hlt
mov
dec
popf
xchg
xchg
pop
dec
movsl
fstpl
scas
lock
in
ljmp
inc
shll
inc
xchg
inc
jae
std
inc
ljmp
aaa
sbb
sub
icebp
push
lock
ds
mov
mov
clc
push
mov
loop
xchg
lock
push
aad
mov
pop
fbstp
mov
mov
movsb
pop
add
sti
cmp
enter
insl
das
fistps
sbb
decb
add
out
iret
mov
insb
movsl
loope
pop
mov
lcall
imul
out
or
or
nop
jle
out
mov
out
push
jmp
in
popa
hlt
pusha
in
in
mov
outsb
mov
ss
jmp
pop
sbb
lock
out
sahf
insb
jmp
push
push
cmp
sbb
sbb
sti
xor
sahf
int3
jne
pop
clc
mov
jmp
addr16
es
inc
lock
adcl
hlt
mov
xchg
test
pop
js
push
aaa
mov
cld
or
mov
lahf
mov
shlb
cmc
sbb
fmuls
pop
out
test
fsubr
aas
ljmp
aam
mov
inc
movsb
shlb
into
mov
rcrl
and
adc
pop
mov
xchg
pushf
idivb
fimull
clc
repz
inc
sbb
push
ret
xchg
ret
mov
adc
jle
dec
rcll
clc
lret
lahf
lds
adc
sahf
sbb
xchg
inc
int3
inc
insl
xchg
sbb
ror
mov
fwait
xchg
ja
fadds
clc
inc
sub
sbb
mov
data16
xchg
repnz
adc
iret
lods
jle
ljmp
jns
popf
and
loopne
adc
add
xor
jne
lea
pop
sbb
mov
in
sub
clc
xchg
out
inc
mov
mov
cld
pop
and
push
clc
pushl
addb
adcl
cmpsb
push
rorb
incl
loopne
shl
test
pop
add
stos
stc
cmp
stos
mov
cli
cli
sti
jmp
adc
scas
pusha
lods
outsl
lods
aaa
lods
lods
in
xor
cmp
cmpsb
jbe
jne
jae
bound
clc
adc
inc
cmp
jmp
lds
mov
sbb
and
cmpsl
inc
mov
int
inc
stc
fcmovne
mov
decl
bound
dec
mov
push
dec
adc
mov
loop
out
aaa
std
incl
ficompl
mov
loope
dec
pop
addr16
mov
out
scas
or
pushl
xor
fdivrp
fwait
push
cmp
mov
lds
pusha
mov
call
sub
add
mov
int
repnz
loopne
bound
lahf
push
sbb
jle
call
lds
cli
jno
lods
inc
popf
adc
insl
stc
incl
jb
adc
int
lret
inc
sbb
sub
mov
xchg
call
iret
sbb
jae
pop
and
mov
xor
lods
scas
xor
pusha
cmp
sarb
decl
fmull
push
das
or
in
xchg
xor
sar
cmp
xchg
add
dec
pop
dec
mov
adc
ljmp
in
inc
cmp
call
into
lcall
dec
sub
mov
inc
in
mov
outsl
dec
jg
mov
sbb
retw
aad
shlb
push
pop
mov
sbb
daa
sbb
std
std
mov
xchg
movsb
imul
std
std
rclb
sar
dec
pop
aas
test
test
lret
mov
jbe
pop
test
lods
loope
jg
cld
aaa
mov
shlb
pop
sbb
pop
mov
mov
adc
call
rol
shl
cmpb
jge
jnp
dec
ja
mov
mov
decl
add
dec
xchg
inc
nop
clc
sar
jle
data16
sbb
ficoml
daa
mov
cmc
dec
mov
jae
mov
mov
in
cmpl
shrb
hlt
lock
ljmp
cmp
sbb
jmp
xchg
in
pop
xchg
push
pusha
adc
and
dec
iret
icebp
xchg
in
fists
adc
pop
fwait
pop
inc
adc
inc
xlat
jo
in
lock
mov
dec
leave
jne
push
out
arpl
adc
std
aad
pmuludq
shll
mov
aaa
pop
in
nop
loope
add
xchg
mov
divb
push
scas
push
mov
mov
add
adc
fsubl
inc
js
cltd
mov
mov
xor
clc
jg
mov
in
insb
shl
push
mov
add
in
or
cmpsb
call
cmp
dec
out
xor
orb
sub
stc
cld
decl
call
pop
push
in
test
pop
cmp
outsb
xor
or
xchg
movsb
loope
dec
dec
fildll
cld
add
dec
dec
cmc
scas
je
and
xchg
adc
cwtl
sbb
and
repnz
sbb
stos
jg
shl
inc
push
pop
xchg
imull
dec
mov
dec
icebp
cli
lods
lcall
pusha
imul
mov
lock
ficomps
mov
ret
mov
pushl
dec
inc
add
and
sarb
xor
mov
stc
and
lcall
lcall
pop
or
repz
or
adc
or
xchg
mov
jg
jmp
pandn
and
adc
sbb
and
addb
fcoms
add
mov
scas
iret
jb
leave
add
and
movsb
push
push
xchg
in
out
jge
aas
std
mov
pop
adc
out
cwtl
jbe
mov
into
pop
es
call
jns
stc
xor
xchg
inc
dec
call
pop
hlt
fidivl
jle
stc
popa
mov
lock
imul
pushl
push
test
cmp
cltd
mov
lret
adc
outsl
sar
jno
mov
loope
into
cs
imulb
out
add
addl
jecxz
imulb
pop
or
dec
cwtl
mov
subb
aam
into
ljmp
mov
jge
aaa
jle
repz
call
cmp
jl
out
lret
xchg
push
sbb
push
mov
loope
push
adc
cmpl
data16
ja
dec
mov
jle
aad
ljmp
test
and
mov
cmpsl
push
data16
jno
ds
loopne
addb
dec
mov
add
fildll
mov
mov
dec
lods
rolb
pop
outsb
cs
and
ljmp
pop
and
cmpsb
and
pop
sbb
int3
jp
or
xchg
mov
data16
aam
stc
jge
lahf
jmp
xchg
sub
sti
push
mov
pop
insl
ds
hlt
sti
arpl
mov
fcomip
outsl
inc
cwtl
pushl
jns
mov
xchg
rcr
mov
sbbl
jle
jl
jmp
jmp
ljmp
sbb
fs
ret
repz
inc
ficomps
fcmovbe
clc
push
jge
dec
in
inc
aam
push
sub
test
cmpsb
insb
sub
imul
dec
jp
gs
in
adc
mov
push
sahf
fsqrt
push
arpl
fbstp
cmp
fimull
pop
aad
imul
add
sarl
insb
loop
test
into
push
mov
xor
ljmp
fcmovne
fwait
lods
mov
jns
inc
fistps
inc
jg
stos
rorl
ljmp
dec
pop
fnstenv
push
push
mov
or
popa
ret
and
xchg
iret
xchg
xchg
push
push
push
call
movaps
mov
fadds
cltd
pop
sbb
fisttps
cmpb
rcll
jmp
cmp
add
jno
cwtl
sub
in
and
mov
push
cld
incl
pop
lahf
mov
xor
loopne
dec
les
decl
jmp
or
sbb
push
mov
cwtl
add
out
ljmp
mov
insb
popa
bound
xor
repnz
dec
flds
xchg
cwtl
sbb
movsl
cmc
cld
in
jnp
or
shll
push
gs
loopne
fistl
mov
mov
or
add
cltd
xchg
aam
gs
andb
into
decl
aaa
jmp
sub
mov
fbld
ret
les
fs
mov
jmp
push
outsb
sti
jg
mov
fisubl
rcl
add
cmpsb
xor
sbb
pop
and
dec
push
add
inc
adc
push
cmpsb
lcall
leave
or
adc
mov
and
jmp
or
popa
in
sub
stc
aas
cmp
leave
lea
mov
pop
mov
pop
jmp
mov
insb
lods
in
mov
lcall
and
mov
sub
inc
cmp
cs
mov
aad
jecxz
stc
adc
mov
fsubrs
jp
call
xor
or
lock
nop
pushl
jl
jge
sahf
mov
mov
pushl
rcl
lods
add
push
xchg
bound
andb
jns
ss
xlat
cli
lcall
aam
jbe
shrl
loopne
mov
fisttpll
stc
mov
fildll
es
add
adc
pop
mov
push
test
aaa
push
sub
repnz
shrl
adc
mov
rcrl
jo
mov
fmuls
sub
scas
or
xor
pusha
out
ret
cli
repnz
outsb
mov
push
call
fwait
mov
dec
mov
outsl
shlb
pop
or
sarb
icebp
add
add
movsb
mov
lds
or
mov
xchg
pop
mov
hlt
push
ret
cmpsl
mov
cmp
sahf
jle
stos
scas
sbb
std
nop
shl
es
mov
or
ss
jb
dec
filds
add
mov
jp
jnp
sub
mov
daa
mov
outsl
pusha
fsubr
mov
fcmovnu
and
rcl
movsb
mov
loop
push
fiaddl
int
push
cmp
pushl
sbb
out
punpckhdq
adc
or
decb
sahf
clc
lock
imul
inc
mov
or
or
cmp
mov
ljmp
pusha
testl
sbb
cmp
scas
inc
push
pop
test
aaa
fdivrs
loop
push
scas
push
fidivrs
jg
iret
jg
addr16
mov
mov
xchg
mov
cmpsb
mov
aas
jmp
int
push
xchg
inc
ficoms
and
addr16
data16
les
mov
cli
fcomip
add
outsl
sub
or
mov
mov
sbb
add
xor
sub
lds
ja
inc
push
mov
lcall
xchg
repz
enter
ret
ja
dec
cli
out
call
lret
lods
cld
ljmp
dec
or
scas
jle
pop
subl
insl
ret
push
fldenv
adc
jo
popa
out
inc
ljmp
xlat
push
lock
adc
cwtl
mov
mov
sbb
stc
incl
test
fistpl
ss
lcall
decl
insb
insb
sbb
inc
aas
fistps
push
sahf
add
jecxz
mov
and
ja
test
decl
mov
repz
ret
fiadds
gs
scas
stos
inc
je
sbb
pop
std
sbb
int3
pop
jbe
std
imul
and
pop
out
ret
adc
lcall
pop
fbstp
repz
pop
pop
xchg
test
imul
mov
call
mov
sbb
pop
nop
pop
adc
lahf
mov
mov
add
jns
mov
in
jae
out
stos
pop
dec
pop
or
sbb
fisubrs
cmp
or
add
ret
xchg
sbb
fnstsw
inc
mov
xor
mov
mov
hlt
sbb
decl
xchg
cmpsl
mov
pop
int3
add
xchg
decl
inc
xlat
xor
outsb
punpckldq
pop
mov
fsubrs
rcl
int3
fs
push
xchg
fisubs
push
push
int3
test
ljmp
ja
loope
shl
sub
jb
xlat
pop
imul
sbb
pop
mov
adc
cli
decb
pusha
and
and
dec
jo
cmp
jl
lret
or
lods
pop
call
dec
sarb
fs
xchg
or
mov
and
mov
idiv
lods
and
scas
mov
rcrb
or
mov
leave
cmp
inc
push
adc
sub
or
push
int3
dec
bound
decl
push
std
adc
xor
dec
lea
pusha
jle
xor
adc
das
xchg
mov
xchg
jl
repz
fldenv
cli
lcall
js
xchg
cmp
subl
dec
jg
out
leave
adc
lret
mov
pop
dec
inc
loope
push
insl
stos
aas
int
mov
mov
scas
adc
mov
lock
push
pop
insl
push
insb
jo
fsubs
xlat
inc
mov
xor
lds
mov
push
mov
icebp
mov
cwtl
pop
insb
out
sbb
jle
daa
iret
jmp
incb
sbb
mov
adc
scas
bound
lds
les
rcll
xchg
neg
hlt
or
scas
or
xor
imul
sbb
mov
dec
lods
clc
pop
sbb
inc
sub
data16
loope
push
mov
cld
fs
adc
cld
repz
repz
sbb
incl
es
scas
mov
and
int3
cmp
cli
std
jnp
test
ffreep
mov
or
incb
mov
pop
adc
xor
xor
pop
mov
jge
push
imul
outsl
inc
jbe
arpl
ja
cli
inc
dec
shl
out
or
sub
ljmp
jo
xchg
adc
lea
imul
inc
jmp
sbb
ljmp
cmp
je
int
cli
push
push
test
in
inc
jmp
test
sarb
incb
test
inc
and
hlt
insb
mov
dec
stos
adc
add
dec
xor
bound
into
jns
fdivrs
gs
notb
jle
fwait
push
call
xlat
sub
sub
push
lret
xchg
push
push
ljmp
fnop
pop
push
in
repz
inc
gs
popf
xchg
mov
cmp
adc
or
gs
sahf
loopne
ljmp
mov
sbb
mov
lret
mov
mov
call
jno
mov
shr
mov
or
sar
lcall
and
imul
stos
shl
inc
cmp
ja
or
push
jle
hlt
pushf
loope
jg
decl
aaa
idiv
cmp
or
adc
jl
xor
lahf
lock
pop
xor
push
inc
push
and
aaa
out
fwait
mov
pop
mov
ret
fdivrs
fiaddl
aaa
int
test
adc
add
psrlw
or
push
out
jnp
ja
stc
fs
xchg
push
or
jne
sbb
mov
ljmp
inc
pop
mov
dec
sub
das
or
stos
ffreep
add
test
mov
adc
cwtl
push
mov
cmpsb
insb
mov
or
cmp
stos
inc
and
testb
jecxz
lea
loopne
sub
jmp
scas
or
mov
int3
xchg
ljmp
cmp
pop
push
gs
pop
pop
and
fcmovb
ss
sbb
call
xchg
aad
rcl
imul
adc
ffree
imul
mov
push
dec
call
cmpsl
daa
aam
hlt
sub
dec
dec
mov
sarb
out
and
and
adc
mov
popa
sub
mov
rolb
or
mov
icebp
cs
sbb
stc
aaa
mov
xchg
jno
adc
mov
ja
and
sub
dec
or
jb
aad
xlat
jle
out
js
dec
mov
jge
cmp
xchg
jns
adc
inc
push
xchg
jp
mov
jnp
lret
mov
and
jg
insl
mov
cmp
fisubs
nop
pushf
dec
xchg
insb
push
pop
push
incl
add
cmp
arpl
js
sub
cmpsb
rcll
call
es
fs
mov
dec
xlat
mov
out
and
mov
lea
sbb
dec
cli
sbb
lret
dec
dec
pop
mov
dec
lods
push
cwtl
inc
push
and
fcomi
inc
xchg
and
inc
int
inc
inc
jge
jae
out
inc
mov
push
jg
pushl
add
push
mov
cmp
rorb
out
adc
push
scas
ljmp
pop
idivl
call
pop
adc
xchg
xchg
pop
pop
sti
add
cld
stc
fistpll
pop
lods
das
insl
loope
sbb
loopne
jno
loop
iret
pop
jecxz
movsl
movsb
cmp
pop
sub
mov
push
stos
mov
or
cmp
in
or
mov
hlt
sbb
das
loop
jmp
stos
ss
ljmp
ja
jg
call
lods
xchg
insb
sub
push
push
dec
outsb
cli
sbb
sub
fdivrs
stc
sahf
les
pop
decl
fcomip
scas
xchg
add
ret
lock
in
mov
hlt
or
shl
push
lret
sahf
mov
testb
fnstcw
push
fdivrs
mov
adc
lcall
sub
jno
mov
cmc
and
fdivl
dec
adc
imul
call
out
fdivs
adc
mov
jo
shlb
lcall
pop
mov
les
jmp
sbb
mov
ret
xchg
cmp
shrl
mov
lret
dec
scas
test
cmp
lret
stos
sahf
mov
icebp
int3
pop
jecxz
incl
clc
xchg
iret
rcl
pushf
add
nop
es
cld
gs
call
jmp
ds
xchg
fs
stos
xchg
mov
xchg
loopne
jo
adc
lods
jg
clc
sahf
jle
ficompl
int3
rcrl
add
dec
lcall
sarl
mov
ret
pop
pop
mov
mov
subb
mov
notb
orb
mov
sub
addl
xchg
int3
inc
test
xchg
sbb
cmpsl
jb
pop
fdiv
int
loop
mov
stos
data16
lock
stc
jno
cmp
js,pt
mov
lods
adc
sbbl
movsb
cmpsl
push
jbe
insl
add
movsl
mov
inc
mov
les
jl
stos
mov
ljmp
inc
jae
mov
sbb
mov
cmpsl
sub
fisttpl
cmpxchg
mov
punpckldq
pushl
test
push
in
inc
testb
xchg
pushf
xor
mov
mov
mov
jmp
fidivrl
mov
enter
jg
adc
outsb
mov
out
jp
xchg
push
sbb
xor
xlat
ljmp
cmp
das
dec
mov
mov
outsl
add
add
pushl
mov
loopne
ja
lcall
hlt
xor
mov
call
adc
inc
fistpll
jmp
cld
stos
enter
pushl
cmp
into
outsl
xor
sub
in
mov
jb
lds
xor
inc
mov
and
adc
repz
ljmp
sbb
addr16
xchg
sar
loop
imul
outsl
cld
ljmp
xchg
mov
dec
test
sub
ljmp
jecxz
in
pop
mov
fmuls
lods
mov
jp
lahf
les
xor
xlat
sahf
push
dec
jg
outsl
notb
sub
jmp
jge
rcrb
and
lds
sub
ja
std
cli
call
jl
hlt
cmp
negl
test
pop
xor
notl
icebp
add
push
mov
jg
xchg
push
ret
pusha
xchg
pop
mov
pop
loop
test
fisttps
add
call
ret
imul
xchg
ja
imul
setl
popa
jbe
pop
fnstcw
cmc
or
jle
dec
mov
daa
cwtl
mov
sahf
dec
inc
sub
out
sbb
mov
cmp
jg
sarb
xchg
outsb
pop
hlt
cmp
testl
ja
nop
data16
dec
mov
xchg
pop
in
cmpsb
inc
jb
or
pop
xor
std
call
clc
xchg
icebp
iret
mov
flds
lea
in
daa
and
jno
ljmp
decl
leave
dec
cmp
inc
xchg
mov
roll
cli
pop
jns
push
decl
loop
pop
loope
scas
dec
push
incb
and
scas
mov
jmp
jae
aaa
cmp
mov
mov
or
jle
js
inc
jbe
mov
xlat
scas
push
insb
sti
incl
mov
in
or
cmp
rcrl
and
mov
fistpll
das
out
lret
fcmovbe
inc
sbb
jo
mov
in
int3
aam
push
stc
mov
in
pop
iret
std
jp
dec
cmpsl
xor
or
inc
or
inc
loope
lock
or
pop
dec
sub
sbb
jbe
mov
adc
and
fstps
rorb
rorb
adc
ljmp
ljmp
xor
dec
sub
jns
out
jmp
xchg
in
movsb
repnz
imul
cmc
test
decl
ja
mov
sub
jnp
push
jp
mov
loopne
fld
add
lcall
ss
ljmp
rcrl
mov
mov
cmp
add
sbb
into
sub
mov
xor
loope
xchg
gs
sub
test
cmp
adc
andb
inc
pusha
jp
adc
scas
lret
mov
jae
leave
push
movsb
icebp
and
sbb
push
or
rorb
inc
adc
push
pushl
cs
into
icebp
mov
inc
out
sub
sub
in
cli
jns
inc
xchg
push
xor
xchg
mov
ljmp
jmp
fdivs
inc
cmc
mov
bound
fwait
push
decl
fistl
fwait
push
es
mov
fisubrs
xor
dec
jmp
push
ja
les
sti
adc
out
mov
repnz
arpl
stos
notb
les
std
icebp
addr16
cwtl
insb
xor
or
sub
bound
jl
jg
cmp
dec
out
jmp
pop
jl
mov
pop
cmp
outsl
loope
mov
repz
in
test
adcl
cld
imul
push
mov
ret
add
cmp
cltd
in
or
sbb
into
outsb
mov
push
push
fidivl
jle
pop
stc
ficomps
sarl
loop
mov
dec
cs
mov
inc
sarb
dec
sti
insl
scas
ljmp
sbb
push
test
addr16
hlt
int3
add
mov
fiadds
incl
mov
out
mov
mov
push
adc
sbb
gs
rcrb
xor
call
jl
sbb
popa
insb
dec
mov
pop
cmc
pop
jo
mov
sub
add
imul
push
lock
jle
out
outsl
enter
jg
lcall
push
cmpsb
ja
addr16
dec
repnz
add
mov
testl
jne
fisubs
push
decl
inc
rolb
jo
and
inc
push
cmp
mov
je
sub
dec
add
cmp
insl
cmp
imulb
and
in
leave
aad
and
jns
xor
popf
jmp
push
es
inc
mov
jg
cmp
gs
bound
inc
loop
jmp
cmp
outsl
add
xor
sti
lods
test
push
push
jo
dec
cmpsb
addr16
push
mov
es
cld
dec
ljmp
iret
push
insb
out
or
jmp
outsb
dec
divl
pop
ss
jnp
xchg
pop
lahf
mov
notrack
cld
call
fidivs
sbb
xorb
inc
cmp
xor
idivl
sti
insl
icebp
jmp
dec
mov
ret
sahf
jne
arpl
ljmp
daa
and
mov
rorl
outsb
fidivrl
push
ds
mov
pop
lock
lcall
fcomi
insl
iret
mov
or
mov
jg
out
test
cmp
push
xchg
dec
xchg
imul
push
das
ds
jnp
ds
sub
sub
adc
dec
cld
incl
cld
inc
push
push
aaa
adc
jno
scas
mov
les
cmp
orb
dec
rolb
push
xchg
or
inc
fdiv
out
pusha
mov
xchg
js
js
inc
cmp
es
sbb
cli
outsb
jbe
adc
dec
push
push
call
loopne
mov
dec
push
int
testl
hlt
and
lret
roll
push
fildl
push
ficomps
ljmp
sub
iret
xchg
sub
aad
and
inc
adc
jnp
inc
into
push
or
insb
xchg
pop
pop
fcmovnb
push
pop
inc
cld
lea
mov
dec
add
pop
movsb
mov
outsb
enter
and
and
es
mov
cwtl
xor
mov
aas
cmp
cmp
ds
inc
pop
add
push
cld
pop
imul
pop
icebp
jl
jle
mov
rorb
cmp
ja
lods
outsl
jb
pop
js
fs
pushl
movb
gs
mov
xchg
cmpsl
push
and
jb
mov
or
lods
dec
aam
pop
jnp
in
sub
nop
cmp
cld
mov
gs
add
call
ljmp
add
xor
jmp
sub
pop
and
enter
mov
inc
dec
jecxz
clc
mov
fs
push
lcall
cmp
cmpsl
push
js
lahf
jne
jnp
dec
cmp
fisubs
or
repz
aas
cmpsl
in
decl
imul
jp
inc
pop
sti
ficoms
subl
arpl
push
and
pop
aas
xchg
pop
sub
mov
aaa
jo
mov
out
xor
stos
or
pop
pusha
nop
addr16
scas
fstpl
cmp
filds
data16
imul
sahf
clc
mov
pop
cld
out
sbb
pop
xchg
jo,pt
scas
pop
out
push
das
add
sbb
jecxz
or
clc
jmp
lahf
cmp
outsb
inc
xlat
lods
sbb
jnp
pop
or
aaa
jmp
daa
sub
pop
mov
filds
out
ret
jge
mov
ljmp
jo
pop
inc
fimuls
outsl
or
int
push
xor
iret
push
xlat
mov
gs
fbstp
sub
decl
das
jb
mov
mov
sub
push
aaa
and
cmp
call
das
jbe
dec
xor
cmp
popa
shl
sti
popa
sub
adc
aad
ds
ljmp
lcall
aaa
xor
loop,pn
ja
iret
push
enter
ss
or
fnstenv
sub
jnp
idiv
pushl
addb
jae
mov
jg
dec
stos
icebp
movsb
cmp
and
das
mov
dec
lcall
jae
jg
loopne
inc
inc
cmp
outsl
scas
lods
lahf
sbb
pop
outsl
sub
pop
jb
cli
call
je
pusha
pop
ret
xor
addr16
dec
dec
fistpll
mov
jb
rorb
pushl
push
pop
fidivrs
jns
pop
sbb
pop
cmp
movsl
cmpsl
ljmp
mov
jae
jmp
jmp
loope
lret
jl
repz
add
aas
inc
mov
insl
jo
scas
jg
jge
mov
cltd
cmp
aaa
popa
addr16
mov
movsb
scas
daa
jl
aaa
pop
and
push
scas
mov
mov
adc
popf
push
movsl
loop
imul
invd
add
pop
popa
mov
and
pop
jge
sbb
jb
adc
enter
sub
enter
pop
dec
sbb
scas
clc
sbb
in
mov
outsl
push
dec
clc
pop
xor
inc
mov
push
mov
cmp
sub
dec
je
push
dec
out
clc
mov
aaa
add
and
xchg
pop
or
sub
sub
pop
into
fwait
sbb
daa
mov
jmp
aaa
mov
add
outsl
ret
mov
dec
lock
xchg
sar
inc
or
cmp
mov
jecxz
push
imul
xchg
mov
adc
adc
add
adc
or
pusha
sbb
daa
mov
popa
jmp
or
jne
and
xlat
sub
xor
adc
add
or
push
jo
add
mov
cli
xchg
rolb
mov
push
inc
add
decl
add
aas
mov
fsubrl
or
mov
insb
inc
or
or
out
xor
and
jmp
sbbb
out
js
sbb
add
repnz
jb
lea
mov
and
sbb
lods
nop
xchg
xchg
xchg
pop
rclb
mov
push
fwait
cli
decl
jg
cmp
ljmpw
aad
sub
mov
inc
dec
push
cmp
mov
pop
cmp
data16
outsl
loope
popa
bound
insb
fs
or
sub
loop
in
xchg
adc
imul
outsl
xchg
jnp
push
cmp
popa
call
fidivrl
cmp
outsl
cmc
decl
sub
dec
xor
push
rcll
mov
sub
repnz
push
add
fisttps
or
sbb
push
cwtl
push
aad
adc
clc
adc
sub
sub
jg
and
arpl
in
xchg
mov
je
jg
jmp
xor
pop
and
mov
ss
xchg
cmc
adc
adc
push
int
cmp
ss
dec
mov
test
decl
outsb
lods
jne
out
insl
data16
popf
push
rolb
int3
jae
cmc
sbb
xchg
inc
lock
inc
orl
fisubs
mov
adc
enter
cmp
gs
add
push
and
pop
es
mov
dec
insl
dec
lahf
mov
test
inc
xchg
push
push
adc
or
cmp
cmp
cmp
adc
push
pusha
imul
push
das
or
xchg
jg
les
and
and
aam
std
sub
testl
push
enter
or
lods
divb
dec
filds
mov
pop
or
lock
ret
pop
aas
jg
xchg
insb
lret
push
adc
add
xchg
outsl
and
sub
cli
lea
xchg
das
insl
roll
pop
mov
jns
pusha
stos
push
jne
ret
or
incl
mov
mov
test
xchg
xchg
mov
popw
lcall
in
pop
cmp
out
cmp
cmpsl
push
or
push
das
push
sub
sub
out
or
decl
jle
sbb
ds
addr16
pop
sub
sub
cmc
xorl
inc
jg
inc
addr16
adc
cmp
mov
mov
insl
ljmp
addr16
push
add
addr16
fldt
test
ss
sub
sub
cwtl
mov
dec
xor
imul
jae
call
ficomps
inc
jo
sub
cmpsb
sahf
jl
icebp
jge
sahf
negl
pushl
das
sbb
enter
cmpsl
movsb
cwtl
mov
jo
mov
jmp
pop
push
mov
scas
imul
push
inc
inc
jne
lock
pushl
mov
mov
sbb
sbb
cld
or
adc
pop
cld
pop
cmp
or
add
adc
clc
and
push
insl
call
xchg
mov
fcom
and
int3
rcl
mov
subb
data16
test
decl
fwait
or
in
int3
test
pop
sahf
fmull
jno
hlt
mov
pusha
cli
fsubs
mov
je
sub
ljmp
and
push
cmp
xchg
jo
cli
test
mov
stos
arpl
pushl
xchg
out
cmp
pop
mov
outsl
pop
sub
xor
sub
test
jecxz
dec
repz
lcall
cwtl
cli
je
pop
jnp
jp
xchg
aas
sub
nopl
mov
sbb
int
jg
rcrb
ret
adc
data16
cmp
mov
and
fists
loopne
pminsw
add
and
jbe
mov
in
mov
fs
dec
jo
inc
or
jle
cltd
adc
push
add
ja
pop
xor
pusha
std
mov
js
cmp
pop
test
jo
pop
cmp
cmp
pop
pop
jmp
push
daa
mov
cwtl
jns
pop
jne
call
xchg
arpl
rorl
mov
or
cmp
and
adc
mov
or
decl
xchg
in
rcl
insl
xchg
daa
push
pushf
jne
and
loope
dec
dec
call
xor
dec
js
or
mov
aaa
or
lcall
mov
inc
inc
ja
rcrb
dec
sar
in
jg
jo
push
lock
mov
pop
sbb
imul
sub
cli
mov
lods
add
cmp
or
ret
je
imul
mov
or
mov
fs
into
test
ljmp
test
jnp
push
pop
scas
into
lret
js
jge
push
outsb
lock
jmp
aad
jne
stos
insb
inc
inc
push
and
inc
xor
daa
das
sbb
ret
and
push
add
xor
mov
iret
push
ja
sub
int
or
pop
jle
xor
cmp
and
pop
xor
dec
ljmp
lods
ss
ja
and
cmp
cltd
sub
hlt
iret
add
or
out
inc
push
mov
xchg
xchg
hlt
sub
xchg
push
in
jmp
rolb
call
test
xchg
mov
nop
dec
fdivrl
sbb
dec
add
mov
add
add
insl
adc
in
or
ja
decl
xchg
jbe
add
aaa
add
inc
mov
adc
shrl
adc
lea
or
addl
call
lods
mov
mov
and
cwtl
cltd
lcall
outsl
sahf
lahf
mov
shlb
ljmp
scas
mov
mov
mov
ret
mov
mov
mov
lds
jg
leave
lret
fmul
iret
in
rcl
aam
xlat
mov
fcmovu
fsubrl
cmc
loope
jecxz
adc
fisttps
inc
clc
cmp
jmp
in
out
out
mov
hlt
cmc
div
sub
push
adc
xorl
ljmp
clc
inc
test
cmpsb
xor
rol
add
push
ret
dec
cmpb
mov
rorl
call
mov
jg
cmpsl
push
cmp
jbe
xchg
push
jne
js
call
popa
xor
les
jae
inc
outsl
cmpsb
pop
popa
jae
in
xor
sbb
push
and
outsl
or
stc
loop
sub
iret
out
sub
insb
call
and
cmp
mov
leave
sub
lcall
push
mov
aad
cmp
in
cmp
sub
js
mov
popa
idivb
mov
int3
inc
pop
aam
sbb
dec
xor
adc
xor
jae
pop
xchg
push
mov
incl
dec
xchg
outsb
pop
jbe
jp
push
pop
xchg
jbe,pt
daa
out
jne
jns
fcmovnu
inc
clc
pushl
push
lahf
and
or
imul
imul
push
clc
mov
cmp
inc
sahf
push
loop
out
pop
test
pushl
sbb
pop
sti
cs
cmc
mov
ljmp
mov
inc
sbb
test
adc
dec
cmp
lds
adc
imul
testb
insb
pop
add
in
push
popf
js
incl
push
inc
fmul
fiaddl
sbb
adc
test
cs
in
incl
incl
jp
dec
push
mov
sbb
or
mov
mov
imul
jge
lahf
imul
rorb
incl
cmp
in
addr16
dec
sub
or
jle
ljmp
popa
jne
or
call
pop
imul
dec
data16
test
mov
sub
incl
xchg
sbb
jle
in
adc
lcall
in
jno
ret
ljmp
gs
sub
fisubrl
add
in
lods
daa
outsb
pop
xor
jbe
scas
hlt
aaa
or
push
sub
cmp
pop
add
push
pop
out
test
cwtl
sbb
dec
mov
or
sub
daa
aam
loopne
cmpsb
imul
out
ljmp
enter
sbb
jmp
into
mov
adc
sub
adc
push
call
cld
inc
dec
cmpsl
movsl
mov
aam
enter
clc
jmp
lcall
mov
cmpxchg
xchg
ret
pop
icebp
ljmp
adcl
push
popl
popa
mov
mov
jbe
or
push
call
ljmp
dec
lock
sbb
push
push
lcall
orb
pop
scas
push
je
inc
add
inc
dec
push
sti
ljmp
push
dec
xor
lahf
cmpsb
add
inc
inc
or
js
mov
call
jg
add
pushf
je
mov
test
cld
dec
dec
mov
loope
push
inc
je
std
inc
pop
push
dec
dec
xor
mov
mov
inc
add
test
inc
dec
stc
fistpll
dec
loopne
pop
inc
mov
dec
dec
dec
test
inc
sar
jg
outsl
xor
out
push
push
cmp
scas
sub
push
pop
push
push
loope
adc
jbe
add
fiadds
clc
jg
rclb
in
cmp
add
push
lcall
pop
les
inc
push
cmp
dec
dec
jp
ljmp
or
inc
mov
cltd
xchg
dec
outsb
xchg
fldcw
push
dec
cmp
loope
jmp
js
cld
fistps
mov
add
fisubrs
or
loopne
outsl
incl
lcall
inc
adc
sbb
adc
in
fistps
dec
adc
adc
addl
call
cmp
push
and
or
lcall
pop
in
jo
jo
pop
js
inc
pushl
jo
js
rcpps
push
ret
and
dec
sar
inc
loope
fcomip
stos
mov
das
inc
push
add
sbb
and
lcall
push
pop
es
dec
sahf
mov
pop
lods
cld
ss
xchg
lcall
dec
loope
add
cltd
cmc
cmp
int
outsl
lock
xchg
shrb
push
push
lret
dec
xor
jg
jmp
jae
cld
in
fadds
inc
push
je
repnz
sub
stos
or
lcall
sbb
adc
or
jge
ficompl
pop
movsb
lahf
pop
sti
ljmp
mov
and
pop
pop
adc
ljmp
add
add
sbb
cmp
fadds
imul
fists
push
push
cmp
dec
pop
or
add
jne
or
ja
and
out
mov
addb
jmp
jmp
mov
cli
add
lret
rcrb
pop
movsb
cmpb
test
xchg
imul
outsb
mov
sub
ss
andb
cmp
add
mov
and
jnp
popa
scas
fadds
shlb
je
cmp
iret
xor
arpl
mov
lods
jmp
push
pushf
and
adc
sub
push
imul
shrb
push
cmovb
js
or
sub
inc
jno
dec
fbld
std
fnsave
xchg
repnz
xchg
loopne
hlt
ja
push
fsubrs
sub
add
fdivrp
call
faddl
xchg
data16
jae
inc
or
jae
sbb
jg
andl
sti
mov
sbb
jmp
push
je
loop
jne
cli
inc
imul
push
sbb
decl
xor
xor
pop
lods
pop
imul
decl
sub
outsb
imul
cmovg
mov
sbb
mov
in
incl
push
sub
paddd
scas
int3
mov
push
jns
sbb
scas
add
std
xchg
sbb
and
jne
push
xchg
or
mov
insb
mov
lock
xchg
mov
je
cli
or
pop
out
in
decl
sbb
aaa
pusha
cmc
inc
sub
pop
mov
ret
jo
je
rolw
push
mov
decl
push
cmpsb
ret
dec
mull
sarb
add
mov
add
xchg
test
fbld
into
testb
lcall
arpl
testb
dec
push
push
out
ljmp
adc
xchg
dec
jl
adcb
cwtl
aas
xchg
dec
mov
decl
lret
mov
inc
mov
dec
xchg
test
test
push
mov
cmp
ja
jmp
push
shll
cmpsl
inc
lods
leave
rcrl
jne
and
scas
call
cmp
jmp
loope
fadds
push
add
mov
add
inc
aaa
clc
xchg
xchg
or
sbb
ja
stc
stos
fisubrl
push
push
decl
xor
xor
sub
lock
mov
movsb
jl
or
int
sbb
in
lods
mov
jns
fistl
and
cmp
aam
mov
inc
xchg
adc
dec
sarl
xor
push
pop
dec
in
decl
decb
lahf
pop
adc
dec
out
dec
ljmp
inc
cli
pushl
clc
outsl
mov
cltd
inc
pop
in
push
pushf
cmpsl
xor
adc
dec
out
cmpsl
pop
ljmp
dec
in
sbb
ljmp
nop
xchg
daa
sbb
repnz
mov
jae
cmp
repnz
loopne
add
push
pop
inc
add
pushf
pop
cmp
push
push
dec
fwait
and
aaa
mov
sbb
rcll
icebp
dec
nop
js
or
hlt
dec
sar
adc
xchg
xlat
in
std
mov
andb
ljmp
mov
cld
shlb
push
pop
div
xor
mov
add
sahf
mov
mov
pusha
int3
ljmp
inc
xor
nop
xchg
pusha
jo
mov
roll
and
mov
call
mov
xchg
fdivrs
adc
xor
mov
add
ficoml
xchg
sbb
and
bound
loopne
data16
nop
inc
jo
jo
add
add
jle
add
xlat
jl
pop
mov
stc
mov
sbbl
pushfw
pop
xchg
mov
mov
jo
repnz
daa
mov
movsb
xchg
xchg
rolb
xchg
cld
push
movsb
dec
fistpl
popf
jae
sub
pop
or
and
lock
lock
imul
decb
decl
adc
inc
aaa
dec
divl
mov
mov
jne
scas
jo
testl
outsb
aaa
xor
testb
fadds
pop
add
pop
outsl
fwait
mov
adc
ljmp
dec
add
mov
mov
jb
jbe
pop
fs
daa
or
pop
pop
add
pushl
cmpsl
daa
mov
fildl
mov
pop
push
sub
xchg
mov
bound
mov
test
call
add
pusha
and
xchg
fistl
inc
das
pop
cmp
ret
sub
adc
sub
lock
dec
adc
pop
push
push
pusha
loopnew
sti
sbb
pop
mov
rcrl
popf
addb
stos
in
into
jb
scas
sbb
in
fnsetpm(287
mov
pop
sbb
push
xchg
adc
cmp
imul
inc
mov
ja
adcb
daa
add
scas
mov
orps
ficoml
xchg
and
xchg
mov
enter
fisttps
mov
sbb
leave
leave
leave
sbb
jg
pop
xchg
mov
push
ret
int3
xlat
loop
jno
mov
leave
sub
or
outsl
and
and
cmp
daa
in
inc
push
and
ljmp
jno
dec
xor
xchg
into
fisubrs
aaa
push
or
fbstp
hlt
xchg
cmp
fistpll
pop
ds
aas
adc
inc
or
sub
mov
inc
and
aaa
testl
enter
dec
arpl
dec
jns
sub
dec
fcomps
jl
push
mov
ljmp
cs
pushf
push
bound
xchg
lods
inc
orl
adc
pop
jecxz
mov
mov
bound
mov
jmp
inc
pusha
xchg
test
cmp
in
xor
mov
fs
xchg
or
xlat
mov
sub
mov
or
jb
add
lods
aas
pop
mov
xchg
loopne
inc
daa
xchg
scas
xchg
cmpsl
xchg
pop
lcall
sub
fs
pop
and
in
inc
add
add
push
xchg
jns
stc
jl
arpl
outsl
std
sbb
adc
fabs
sarl
push
jmp
faddl
decl
mov
jl
aad
xor
push
scas
mov
aam
sbb
cmp
fbld
push
xchg
cmc
enter
or
sbb
push
das
clc
outsl
aad
pushf
fs
fildl
cmp
mov
loop
mov
pop
pushf
aas
fadds
jecxz
jmp
xchg
das
inc
fimuls
arpl
or
gs
or
imulb
adc
sbb
xor
jnp
adc
adc
xor
cwtl
pop
jmp
xchg
adc
cmpsb
fwait
add
add
mov
push
sbb
sub
pusha
loope
std
ljmp
sub
out
sbb
jb
mov
or
or
rorb
incl
stos
xor
sbb
cmp
loop
jnp
lahf
and
dec
fldt
pushf
daa
fs
ss
jbe
addb
ljmp
cmpl
mov
and
psubb
insl
repnz
stc
ljmp
inc
scas
sbb
add
notl
and
leave
leave
pop
adc
mov
mov
femms
repnz
enter
add
mov
adc
lcall
ljmp
repnz
fwait
mov
enter
add
outsb
push
pop
outsl
push
jno
or
in
fisttpll
call
sbb
addr16
or
push
inc
or
sqrtps
mov
aaa
andb
lea
in
fwait
add
push
ljmp
in
push
add
testb
subl
test
rolb
loopne
test
xchg
mov
jge
testb
outsl
or
push
outsl
adc
cmp
dec
xchg
loopne
ud0
notb
mov
insb
xchg
mov
push
cmp
inc
add
sub
cli
addb
pop
push
and
push
addl
cmp
cmp
lods
mov
jae
fcompl
pushf
clc
mov
or
call
aaa
incl
and
add
sub
and
or
or
pop
cmp
dec
fistpl
xchg
imul
decb
adc
mov
inc
mov
adc
adc
jmpw
enter
pop
imul
stos
push
and
das
sbb
in
sbb
pop
aaa
scas
fildl
sub
and
lahf
xor
mov
inc
imul
clc
mov
or
push
adc
push
pop
xchg
into
inc
cld
jp
push
mov
xor
inc
int3
int3
xchg
in
decl
cmp
adc
pop
inc
sbb
nop
insb
mov
mov
xlat
inc
insb
insb
cmp
imul
inc
inc
lods
lahf
add
ficomps
or
out
cmp
push
ss
add
call
sub
imul
gs
push
mov
fbld
enter
mov
sub
adc
loopne
call
inc
mov
into
scas
rolb
psubusb
jecxz
jmp
dec
lock
addr16
add
or
jg
xchg
or
pusha
jbe
xor
aaa
or
popf
xor
push
xchg
int3
xchg
lahf
cmp
clc
mov
out
mov
mov
add
sbb
xchg
pop
repnz
in
pop
movsl
or
adc
enter
cli
in
pop
das
push
sahf
test
add
add
outsl
dec
aaa
sub
jb
adc
push
mov
imul
cmp
pop
out
xor
orl
and
jnp
lret
and
cmc
sub
xchg
sbb
or
in
adc
sub
ss
push
xor
aas
sahf
push
sbb
aaa
cld
jae
inc
fcoml
insl
cmp
lret
inc
cmp
mov
xor
jno
repnz
sbb
pop
inc
cmp
xchg
ret
aas
outsl
mov
fildl
jns
fstpl
pop
dec
xchg
jo
dec
xchg
mov
dec
in
cld
call
cld
or
movsb
js
rorb
xor
fcmovnbe
jecxz
jmp
addr16
outsl
cmc
mov
add
pop
andl
or
hlt
pop
mov
or
or
outsl
dec
or
sbb
frstor
push
add
push
sub
add
lea
xchg
popf
and
jbe
movsl
and
lcall
sbb
repnz
rcl
or
fcomip
lcall
sub
mov
and
decl
xor
cmp
mulps
xor
test
mov
ds
cmp
into
cmp
sahf
ror
fldl
je
sbb
jne
inc
in
adc
sti
jb
hlt
sub
dec
xor
sub
mov
sub
ja
cmpsl
cld
dec
pop
dec
lea
cwtl
push
mov
mov
push
fidivrl
loopne
sbb
pop
lock
sti
pavgb
lret
pop
adc
pop
daa
pop
hlt
dec
pop
pop
cmp
jo
pop
arpl
je
in
push
gs
jg
mov
push
enter
imul
out
jmp
int3
insl
xlat
jnp
outsl
in
movsl
cld
cld
clc
jno
add
jae
pushf
sbb
or
mov
nop
js
jns
jp
out
or
imulb
jge
jle
jg
subb
lods
std
aaa
clc
or
addl
add
and
loope
dec
insb
pop
sub
aaa
mov
dec
nop
pop
movsb
arpl
repnz
xchg
lcall
lcall
pushf
fcompl
lahf
std
mov
mov
call
mov
aas
cmpsb
dec
xor
aas
sti
push
test
pop
enter
jecxz
sbb
scas
mov
mov
mov
mov
enter
mov
mov
mov
dec
jns
mov
inc
mov
mov
js
sub
mov
lahf
fld
xchg
jle
mov
xchg
push
mov
sbb
and
enter
int3
out
in
js
into
cld
jp
pop
rcrb
lock
shrb
and
cmp
inc
and
xlat
movsb
sbb
pop
lods
or
inc
fsubrl
call
sub
fisttpll
xchg
mov
lahf
loope
fdivr
jg
or
nop
cld
rcrl
es
call
es
stos
mov
push
pop
or
mov
or
dec
xchg
clc
push
lock
adc
sarb
imul
push
and
gs
inc
add
xor
push
cmp
decl
dec
mov
mov
dec
add
jb
jl
push
push
mov
mov
ljmp
jb
push
je
bndcu
mov
jnp
sbb
stos
push
sti
or
or
add
dec
repnz
test
mov
idivb
mov
adc
sbb
enter
mov
not
and
lock
decl
jb
daa
cmpsl
xchg
adc
call
and
dec
in
jno
daa
inc
scas
aad
pop
ja
daa
xchg
pop
and
push
sbb
hlt
outsl
or
add
call
adc
scas
in
inc
negb
jle
add
pop
ljmp
pushl
cmp
and
push
pusha
imul
lock
jae
stc
scas
call
mov
std
mov
addr16
sbb
cmpsl
mov
inc
and
addr16
stos
inc
ret
dec
ficomps
loopne
ljmp
ret
jb
nop
cmpb
icebp
mov
and
out
mov
lods
dec
and
cs
call
ror
xor
jo
sar
pop
cld
es
push
nop
dec
jns
scas
loopne
in
or
mov
int3
scas
adcl
mov
cs
pop
leave
dec
mov
and
cmp
sbbb
lock
pop
filds
clc
filds
ret
mov
sahf
neg
lcall
ljmp
dec
lock
out
sub
dec
adc
xorl
push
pop
jb
lcall
xchg
xchg
pop
pop
dec
pop
and
pop
addr16
ss
shlb
inc
mov
jmp
inc
xchg
clc
ss
pop
scas
mov
sbb
push
out
jbe
ljmp
xchg
pop
add
lods
insb
orl
or
pop
cmp
in
imul
ud0
in
fnstsw
mov
lret
adc
adc
adc
cmc
outsl
test
sbb
imul
addb
pusha
push
inc
pop
sbbl
scas
mov
sub
pushl
pop
rclb
lods
mov
clc
int
jnp
aaa
push
testl
and
das
mov
test
fcompl
fadds
push
outsl
mov
mov
cwtl
mov
outsb
insb
addr16
jns
out
xchg
cmp
or
idivb
jg
mov
je
inc
mov
daa
xor
loopne
ja
pushf
in
mov
pushf
daa
addb
lods
mov
cmpsb
mov
sub
fstpl
invd
add
add
cmpsl
in
sub
out
xchg
in
cld
out
jp
push
dec
pusha
push
add
call
dec
push
das
jp
dec
add
mov
and
cld
mov
scas
shrb
das
mov
mov
sbbl
call
mov
and
mov
and
pop
pop
xchg
push
inc
mov
add
push
push
mov
lock
dec
mov
push
xor
mov
add
pusha
cmp
out
mov
sub
xchg
sub
mov
fistpll
mov
lcall
pushl
into
add
add
pop
adc
dec
into
int3
daa
mov
cld
in
inc
fnstenv
femms
inc
cmp
adc
lcall
jo
imul
xchg
aaa
imul
push
dec
pop
enter
inc
shrl
jbe
call
mov
mov
rorb
int
mov
mov
inc
ljmp
xchg
insb
fs
push
mov
or
jle
jb
cld
or
rcrl
icebp
mov
mov
in
stos
in
mov
mov
test
ljmp
dec
and
leave
and
shlb
inc
inc
mov
add
mov
push
mov
mov
adc
outsb
mov
sarb
jne
cmp
mov
mov
lret
lret
and
mov
mov
jb
mov
rorb
pusha
xchg
mov
add
movsb
mov
adc
jecxz
hlt
pushl
sbbl
movsb
xor
pop
rcrl
dec
add
in
mov
mov
cmp
sub
ret
daa
pop
pop
enter
aaa
std
call
mov
adc
mov
ret
cmp
pop
push
dec
outsl
call
iret
testb
es
ljmp
jnp
dec
xor
mov
jnp
repz
xchg
roll
mov
addr16
xor
scas
les
hlt
fildl
aaa
jge
je
cmp
add
and
mov
in
in
xchg
or
or
in
call
xchg
ja
jg
nop
pusha
sbb
out
daa
xor
enter
call
lock
mov
js
mov
add
dec
addr16
lods
fucomip
nop
fwait
das
xor
add
push
lds
gs
dec
mov
mov
dec
cmc
mov
call
repz
rsqrtps
outsb
ja
leave
push
cmp
fwait
ljmp
fmull
add
jns
inc
data16
sub
fdivr
std
das
js
sti
bound
data16
pcmpeqw
mov
sti
ja
nop
imulb
jmp
push
xchg
add
cltd
mov
and
pop
lcall
or
jecxz
push
bound
insb
adc
fimuls
ja
and
xlat
or
lret
and
mov
or
xor
ficoms
push
mov
les
das
pushl
xor
mov
call
jg
adc
iret
adc
inc
push
adc
sbb
dec
xchg
das
daa
loopne
repz
lret
jmp
jns
and
xor
mov
in
xchg
movb
call
movsb
faddl
shll
js
repnz
sbb
mov
xchg
or
dec
push
push
or
sub
xor
mov
daa
mov
outsl
cs
rorl
adc
pusha
imul
fs
cmp
cli
sbb
mov
fs
mov
scas
incl
xchg
fstps
outsl
out
sub
jmp
and
sgdtl
sub
cli
sbbb
aad
es
and
leave
cmp
push
adcl
inc
leave
ljmp
sbb
cmp
mov
lds
pushf
loopne
pop
mov
xor
imulb
lret
fldenv
jmp
cmp
pop
daa
aad
xchg
jp
ret
lcall
add
dec
push
adc
lret
andl
ds
call
mov
xchg
xchg
push
es
xor
leave
mov
mov
mov
sub
jle
mov
lock
xchg
lret
mov
dec
add
lret
aam
or
jecxz
mov
jge
dec
test
lods
or
movhps
add
js
int3
pop
es
fwait
or
pop
in
xchg
dec
incl
decl
sbb
int3
push
das
xchg
shl
mov
int3
int3
mov
es
mov
int3
pop
sbb
cmp
dec
cmp
add
daa
int
mov
aad
mov
daa
cmpb
xchg
push
and
xchg
jo
into
pop
out
roll
mov
jb
sahf
scas
pushf
test
iret
stos
les
ljmp
pop
push
lahf
xorl
jp
pop
daa
push
add
xor
decl
outsb
lahf
cwtl
adc
push
jo
cld
int3
inc
mov
sarb
iret
jge
sbb
sub
jno
cmp
cmp
pop
clc
hlt
decl
inc
aaa
push
in
fistps
cmp
inc
jne
notb
pop
je
mov
mov
or
ljmp
adcl
lock
or
dec
lcall
call
aam
add
pop
rcrl
cmp
iret
lcall
int
pop
add
xchg
lods
cmp
fwait
xchg
cmpsb
mov
ljmp
es
repz
and
xchg
aam
in
hlt
out
jnp
hlt
fs
dec
sub
scas
movsl
nop
cmp
rcl
sub
and
push
mov
inc
or
mov
add
lcall
in
push
xchg
adc
add
mov
pushl
mov
mov
cmpsl
rcl
and
in
movsb
and
mov
addr16
or
ljmp
add
inc
and
repz
sub
pop
addr16
mov
mov
out
icebp
loopne
mov
cltd
ss
push
jmp
pop
leave
in
leave
enter
aad
pavgb
in
fucomi
negb
sub
cmp
pushl
and
or
adc
mov
dec
pop
push
fs
xor
repnz
jne
pop
cld
or
scas
dec
fwait
montmul
cmpsb
add
mov
rorb
inc
mov
ds
jmp
and
pop
std
cmp
xor
add
cs
idiv
push
mov
dec
pop
popa
jg
mov
in
sti
bound
jmp
fbld
ds
jne
sbb
inc
add
dec
add
into
sub
fists
ja
adcb
add
mov
test
or
orl
mov
aam
pandn
insl
idiv
mov
in
cmp
xor
adc
add
cmpb
sbb
mov
dec
sbb
punpcklbw
mov
es
das
and
and
adc
mov
ret
sub
cmp
fldcw
in
cld
ljmp
in
sub
fcomip
sub
das
dec
xor
push
aam
ljmp
popf
inc
sub
xlat
push
daa
inc
test
mov
je
xor
pushf
xchg
rcr
and
sti
enter
shlb
std
sbb
ja
fdivrp
call
xor
and
push
shlb
popf
negb
push
sbb
xchg
sar
in
cmc
dec
cmp
leave
cmpsl
fucomi
adc
mov
mov
mov
or
call
sarb
push
repnz
pop
sbb
mov
outsl
aaa
cld
decl
daa
dec
testl
add
ja
add
mov
push
decl
mov
dec
outsb
lods
scas
fimull
xor
cmp
in
mov
jmp
adc
adc
idivb
pop
ret
jg
dec
leave
sbb
pop
cmpsl
bound
mov
loopne
jns
add
mov
in
lock
aad
js
adc
fistpll
add
fistl
dec
mov
int
jno
ret
mov
dec
xor
loopne
mov
push
inc
mov
pop
xchg
scas
cli
mov
data16
mov
add
dec
in
xchg
sub
sbb
lds
fdivl
cltd
mov
pushf
add
cmp
incl
enter
cmpsb
fstl
add
hlt
xor
cmp
push
xor
fnsave
mov
mov
mov
test
lret
aad
xchg
repnz
jl
or
fcoms
ljmp
cmpsb
loop
mov
add
mov
movsl
dec
test
je
dec
imul
and
or
pop
iret
daa
out
dec
callw
and
fs
comiss
test
push
pusha
fbld
xor
incl
loopne
push
mov
jb
cmpsl
cmpsl
push
xor
insb
xor
and
dec
inc
xchg
xchg
cmc
or
and
add
mov
dec
or
push
add
nop
cwtl
mov
mov
jmp
and
loopne
xchg
or
or
aas
push
dec
dec
mov
ss
fwait
decl
pop
fcoml
push
fisubrl
xorb
rclb
clc
decl
std
movsl
fcoms
mov
call
jb
aaa
loop
test
mov
mov
das
pop
xor
pusha
js
outsl
or
insl
add
fcomi
negb
cs
dec
filds
jle
repnz
add
jmp
loopne
stos
push
sarl
dec
xlat
cmp
xlat
add
jo
fisttpl
stos
and
stos
xchg
inc
ror
ret
or
arpl
stos
pop
idiv
incl
cmp
add
jg
xchg
xchg
add
sbb
sahf
nop
add
fstps
jecxz
mov
mov
and
lods
pop
fmuls
outsb
add
mov
leave
clc
xchg
in
xchg
inc
jb
leave
mov
pop
incl
push
fwait
mov
lods
fmuls
mov
pop
enter
jmp
xchg
mov
aaa
and
pop
sub
jg
jle
mov
rclb
push
ror
ds
mov
scas
add
sbb
mov
sbb
jp
filds
ljmp
popf
dec
dec
push
sub
mov
dec
pop
out
scas
push
cmc
and
mov
call
sub
cmp
inc
shl
fbld
jne
rorb
xor
or
adc
add
dec
out
add
xchg
out
xchg
test
clc
dec
popa
fnstsw
xchg
adc
pop
daa
sub
in
mov
xlat
push
sbb
ret
call
xor
and
mov
adc
mov
sub
jmp
test
addr16
and
pushl
jmp
inc
jo
cltd
je
xchg
pusha
jo
inc
aas
push
aaa
outsb
mov
fildl
bts
jg
pop
lods
pop
repnz
push
xchg
sbb
xor
mov
xor
test
fcomip
lock
je
pusha
xchg
dec
scas
inc
stos
mov
shlb
or
cmpsb
push
mov
push
movsb
xchg
xchg
in
add
mov
mov
jmp
nop
mov
mov
mov
add
loop
repnz
jg
push
or
or
std
jle
dec
repnz
or
mov
ja
and
cmp
mov
ljmp
jbe
inc
into
sahf
jle,pt
xchg
pop
cltd
xchg
xchg
pusha
jl
sub
pop
rcr
mov
jg
add
mov
imul
adc
in
les
clc
icebp
mov
fdivl
mov
fildll
aaa
mov
addl
xor
jns
testl
or
adc
dec
and
movsb
pop
lret
or
mov
mov
inc
add
pop
sub
addl
cwtl
daa
mov
jg
lar
ja
pop
cmpsl
rcrl
in
adc
ret
cmp
xor
mov
jo
ret
je
shll
push
mov
stos
lret
adc
add
incl
pushf
in
int3
add
add
mov
and
mov
pop
adc
flds
or
imulb
jl
cmp
inc
in
adc
repnz
mov
xorl
xor
jbe
out
pop
mov
cs
or
mov
or
mov
add
mov
out
mov
adc
xor
and
adc
dec
orb
imul
ljmp
scas
or
adc
mov
adc
and
or
int3
cld
lret
cmp
in
iret
mov
scas
icebp
and
leave
jg
repnz
loopne
or
out
xor
add
inc
scas
movsb
sarb
daa
insl
cltd
inc
mov
cmp
enter
add
pop
cmp
in
inc
mov
xchg
push
in
sbb
ds
sbb
lcall
push
pop
and
btc
jns
xchg
dec
cmpsb
incl
mov
sbb
mov
mov
repnz
and
hlt
repz
mov
sbb
inc
shll
cmpsl
mov
fimuls
dec
ljmp
or
push
add
ja
sbb
repnz
aad
in
sbb
out
cmp
jb
adc
and
fidivrl
adc
movsb
jb
mov
stos
incl
mov
sahf
andl
stos
jne
dec
dec
mov
pop
ret
fdivrp
aas
add
or
or
jb
icebp
clc
paddb
mov
sub
mov
aaa
sbb
in
adc
or
sbb
add
subl
add
adc
flds
fwait
pusha
jl
or
std
mov
scas
int3
pop
int3
jnp
fmull
sub
sbb
pop
sarb
jbe
mov
dec
add
push
cmp
addr16
outsl
and
xchg
or
or
decl
lods
stc
jnp
jb
jmp
add
rclb
cmp
or
ret
push
sub
inc
mov
sub
out
in
or
ja
dec
orb
or
decl
mov
rcll
push
fstps
loope
test
sbb
dec
dec
jmp
ds
and
and
sub
inc
adc
lcall
ret
push
dec
sarl
pop
and
cli
xchg
andl
cmp
mov
sar
pushl
rcrl
in
ret
or
ret
jp
ljmp
mov
pop
aad
xor
test
inc
xor
lds
mov
mov
movsb
cmp
pop
xor
stos
rcrb
jno
xchg
pop
imul
jmp
xor
repnz
call
mov
and
adc
push
push
push
pop
jnp
add
popa
add
andb
jb
decl
mov
xchg
dec
mov
or
addr16
push
pminub
adc
pandn
das
xor
les
adc
daa
push
rol
jg
mov
pushf
int3
or
imul
dec
jbe
dec
pop
mov
and
lcall
aam
and
lods
in
out
sub
push
or
lds
imul
xor
rclb
loop
mov
lds
cld
movsb
xor
ljmp
xchg
enter
rorl
imul
hlt
or
outsb
inc
xchg
inc
ret
pushl
loop
and
cmp
xchg
pop
cmp
outsb
mov
dec
stos
addr16
sub
adcl
push
push
pushf
and
cld
decl
ljmp
cld
mov
bound
call
cmpsl
cmp
cmp
add
cmp
incb
jo
incl
sahf
jle
movb
mov
mov
xlat
push
adc
out
lds
sbb
add
sbb
or
or
and
add
push
pushl
and
jb
xchg
xor
and
fcmovnu
movsb
std
enter
in
lahf
imul
add
dec
in
daa
push
cld
sahf
dec
or
mov
or
push
leave
push
pop
pop
and
or
decl
pop
mov
rcll
push
xchg
jb
enter
mulb
push
in
cmp
into
xchg
ljmp
fistpl
cltd
jne
lods
rcrb
and
fcmovnb
lock
adc
lret
push
movups
dec
daa
add
xor
inc
hlt
cmpsl
push
dec
or
gs
jmp
jno
pop
pop
pusha
cmpsb
sub
xchg
xchg
adc
cltd
mov
in
pop
mov
mov
inc
and
sub
fcomp
jecxz
jmp
cmp
les
sbb
pop
push
cmp
sub
lret
lret
ds
pop
data16
pop
jl
aad
outsl
setb
popf
das
mov
call
out
lock
out
pop
bswap
sbbb
add
ret
and
push
int3
add
call
and
sub
xchg
aas
test
mov
mov
lock
jbe
clc
pop
das
push
mov
xchg
invd
test
mov
int
mov
pop
lcall
loopne
mov
jns
push
cmp
out
cmp
mov
aam
push
pop
movl
xchg
xchg
sbb
dec
into
mov
or
xchg
lds
push
jo
sub
dec
in
scas
pop
cld
jmp
outsb
cwtl
rolb
mov
and
ljmp
push
mov
jno
pusha
daa
jmp
cld
ljmp
cli
iret
mov
test
xor
mov
aam
cmpb
xchg
jmp
fdivrs
loopne
push
int
popa
loopne
lcall
lods
daa
mov
mov
aas
hlt
jo
add
aad
pusha
push
jno
xchg
push
mov
jns
xchg
ja
push
xchg
test
mov
jo
xchg
rcrl
cmp
aam
scas
mov
cmp
sub
cmp
push
clc
in
or
leave
je
mov
pushl
std
call
scas
fisttpl
int3
inc
dec
xor
arpl
rorl
pop
add
daa
mov
mov
in
xchg
into
test
dec
sarl
adc
sbb
rcrb
test
mov
addb
push
and
js
mov
and
xchg
loopne
ffreep
mov
lret
push
inc
shlb
rep
mov
push
popa
xchg
rcll
mov
push
pop
mov
xlat
pop
cld
or
daa
call
or
add
mov
xchg
sar
int
loop
or
pop
or
cs
aam
fidivl
idiv
mov
jbe,pt
das
and
dec
jb
clc
or
push
sub
rcr
pop
mov
addr16
cmpb
ljmp
scas
mov
pop
and
leave
in
pop
add
pusha
push
pop
and
jg
mov
popf
mov
mov
insb
pop
mov
pop
sub
push
fnstenv
mov
push
or
jmp
jo
pop
outsl
or
mov
ljmp
daa
or
add
jmp
aam
incl
sbb
out
in
cmpsb
cwtl
cmc
jl
fisttps
fs
repz
xchg
push
xlat
push
adc
mov
sbb
aaa
or
add
push
das
mov
add
es
jge
or
adc
push
jmp
fldt
mov
sbb
or
lret
jle
fsubs
push
sbb
repnz
das
clc
cmp
xor
rclb
fcmovne
js
jle
ljmp
es
call
call
fistpll
inc
into
int3
dec
fcomp
or
adc
sub
xor
cli
inc
jg
fwait
or
jo
jle
xor
mov
rorb
dec
sbb
in
inc
out
mov
scas
loopne
mov
jl
outsb
das
fiaddl
add
sbb
jecxz
das
push
cmp
xchg
sbb
rorl
call
fs
out
push
xchg
sbb
push
mov
mov
or
popa
popa
pop
or
shrb
adc
jg
jg
fildl
iret
inc
mov
jbe
and
shll
cs
and
and
inc
aaa
pop
fistpl
ss
incl
push
mov
and
fildl
in
lcall
mov
stos
adc
inc
mov
std
decl
push
push
jbe
lcall
ret
xlat
and
scas
mov
dec
movups
mov
inc
pushl
bnd
enter
outsl
popa
outsb
add
add
pop
mov
pop
inc
sbb
or
lock
ud0
fimuls
adc
clc
lcall
and
xor
ficoms
fisubrs
push
pop
inc
lcall
ljmp
dec
pop
fimuls
mov
test
inc
aam
loop
adc
decb
fisttps
mov
sbb
and
inc
cwtl
mov
lcall
pop
cld
das
ret
and
call
or
mov
popa
push
jb
pop
fnstsw
jl
clc
in
test
push
lahf
add
ss
mov
ja
inc
popf
loope
cld
xchg
add
std
push
imul
push
adc
mov
push
divb
sub
imul
mov
movsb
add
push
scas
and
xor
out
in
test
je,pn
pop
xor
and
mov
mov
add
adc
aas
aas
daa
push
or
daa
cmp
sarb
neg
cltd
mov
pop
or
jb
xlat
adc
movsl
insl
bound
or
dec
fwait
rorb
or
lret
xchg
testb
es
decb
les
or
call
test
aaa
aas
push
inc
jge
fwait
dec
in
dec
adc
sbb
sbb
enter
jg
lds
xor
in
xor
mov
cmpps
stos
mov
lret
loop
fistpll
repnz
pop
xor
call
std
outsl
addr16
pop
xor
xor
ds
int
out
nopl
sub
adc
jmp
xchg
cmp
dec
fidivrl
dec
cmpsb
shlb
pusha
aam
pop
cmpsl
mov
in
push
jg
sbb
mov
outsl
cmpsl
or
dec
fdivs
loop
iret
pop
js
pop
sbb
outsl
pushl
mov
loop
mov
or
imul
jl
lahf
cld
lods
pop
clc
sub
add
cmp
inc
jecxz
cmp
dec
ja
jg
fs
pusha
pusha
sub
movsb
addr16
hlt
mov
ljmp
lds
nop
add
rorl
add
jmp
fcomi
push
mov
cli
sbb
pop
cmc
into
inc
mov
xchg
mov
push
bound
mov
mov
pop
js
iret
push
stc
pop
sbb
dec
out
aam
pop
pop
in
testl
sbb
pop
cli
jge
inc
add
ds
mov
incl
dec
xchg
rol
push
jg
and
dec
aas
fistps
mov
mov
cmpsb
push
adc
jg
mov
ret
bound
leave
jbe
out
inc
hlt
int3
sar
jmp
dec
mov
nop
push
cltd
daa
cmp
jnp
jmp
in
mov
adc
aaa
ja
jbe
inc
ljmp
mov
popf
lods
push
std
cmp
mov
in
cmp
out
pminsw
xlat
loop
rorb
inc
mov
xchg
pop
mov
cmp
jo
notb
pop
jle
decl
je
sahf
fsts
enter
sub
cld
xor
mov
add
decl
arpl
pop
fiaddl
add
mov
inc
push
and
and
icebp
pop
add
dec
jp
outsl
ret
rcrb
insb
cmp
adc
or
shl
mov
loop,pt
pop
testl
incl
ljmp
aas
daa
sbb
cs
sbb
push
dec
jnp
add
aas
pop
pop
jnp
dec
pusha
roll
les
fs
fistps
adcl
pop
inc
std
mov
shl
xchg
push
fwait
cmp
cmp
stos
in
inc
das
outsb
aas
inc
jbe
mov
flds
jne
xor
mov
clc
cs
es
push
push
or
lock
jmp
stc
dec
lock
les
cmpsl
in
nop
dec
dec
popl
stc
and
negl
dec
inc
loopne
xchg
sbb
in
jo
sbb
out
imul
cmc
pop
or
pop
or
push
outsl
in
scas
dec
cmpsl
push
xor
mov
xchg
add
jmp
ss
popa
je
loope
dec
std
xchg
cmp
add
pusha
push
int
ja
mov
rorl
arpl
ljmp
mov
jmp
inc
aad
adc
movsb
jecxz
mov
mov
jmp
sbb
sub
push
or
cltd
mov
inc
add
stos
test
enter
push
sub
cs
inc
add
pop
aad
subl
inc
inc
xchg
arpl
push
or
inc
outsb
mov
mov
loope
inc
inc
inc
inc
push
or
fstpl
fistps
dec
dec
dec
push
push
loopne
push
push
jecxz
adc
pop
mov
jbe
gs
mov
or
jmp
outsb
lcall
jae
filds
sbb
jns
xchg
sbb
roll
out
cmp
decl
pop
mov
push
push
pop
jb
mov
pop
mov
lcall
sbb
lret
mov
in
insl
xchg
pop
adc
push
and
call
sub
push
das
mov
or
incl
ja
or
push
adc
cmp
lods
testb
inc
scas
push
fs
mov
popa
addr16
sar
popa
es
mov
sub
sub
stos
rcl
adc
sub
sub
pop
or
cld
inc
inc
jbe
add
add
iret
xchg
mov
pop
push
in
repz
sahf
sub
add
mov
les
incl
out
cmp
jmp
inc
negb
mov
push
lock
pop
mov
jg
mov
div
pop
push
test
mov
out
ficomps
jecxz
insl
inc
sbb
addr16
movsl
lods
xchg
loopne
push
scas
xchg
xor
js
sub
mov
ljmp
add
stos
mov
mov
push
mov
je
jg
xchg
pop
push
inc
cmp
xor
sub
and
add
lcall
sbb
lret
loopne
sub
clc
mov
roll
test
xor
movl
pushl
cmp
push
insb
pop
ja
mov
pop
sbb
bound
lcall
adc
mov
xchg
mov
xor
dec
fcoms
je
push
mov
sub
sbb
pop
xchg
inc
pop
mov
jns
imul
mov
mov
inc
xchg
bound
sub
sub
sar
repz
daa
pop
test
das
cmp
lcall
xchg
addr16
push
ficoms
cltd
scas
add
fimull
movsb
and
nop
xor
outsl
mov
pop
iret
mov
and
sub
xlat
decl
adcb
add
mov
dec
je
shlb
cld
cmp
cwtl
mov
add
mov
jle
push
jp
enter
loope
insb
imul
pop
sbb
insb
pushf
fwait
out
inc
add
or
outsl
insl
iret
push
pushf
test
dec
fildl
cmp
and
dec
std
testb
mov
pusha
push
pusha
xor
sahf
sbb
push
imul
mov
add
movsb
mov
inc
repz
adc
and
aad
ljmp
js
sub
jle
cmpsb
inc
inc
push
xor
mov
xor
lcall
test
dec
fs
jl
dec
dec
adc
xor
and
lea
cmp
xchg
adc
cmp
repz
scas
cld
call
stos
ss
and
push
inc
loopne
mov
jl
ljmp
lds
in
pop
and
xor
xor
jmp
iret
jbe
sbb
pop
inc
rclb
add
sbb
aas
inc
jmp
or
push
ljmp
or
aaa
insb
scas
or
js
push
adc
das
and
inc
push
fcomps
daa
fstpt
outsb
pop
imull
and
es
or
mov
decl
jo
xorl
in
in
jns
jmp
movsb
fs
mov
into
aas
cmpb
adc
add
push
ds
add
arpl
xchg
pop
and
mov
jne
sahf
cwtl
bound
jle
jg
fsubrl
push
add
or
sbb
add
add
jns
add
push
clc
add
std
or
add
jecxz
cmp
add
ljmp
pop
jns
and
and
repnz
mov
enter
jbe
cltd
subl
inc
mov
ljmp
in
das
adc
std
jle
loop
jle
adc
adc
pop
fcmovu
jle
mov
decb
rcr
sub
stc
jb
int3
add
xchg
cmp
adc
orb
mov
ja
icebp
push
pop
push
mov
dec
inc
cmp
pop
and
add
lock
fadd
dec
cmp
mov
mov
xchg
jo
push
push
jl
jge
int
js
push
ss
hlt
test
test
dec
bound
out
outsl
mov
lods
subb
and
popa
adc
mov
cmp
push
mov
test
jo
out
cwtl
jo
xor
lock
mov
inc
stos
inc
leave
push
push
push
inc
jg
cmp
push
or
gs
pop
cld
jnp
pushl
push
pop
js
imul
add
or
out
insl
add
push
pop
ja
call
ds
xchg
repnz
dec
xchg
xchg
add
cwtl
psubb
out
pop
mov
incl
or
dec
sbb
jnp
inc
sbb
xor
mov
and
pop
or
add
nop
cld
push
clc
cmpsl
in
cli
or
and
fsubrp
or
sbb
rcrb
enter
sar
lahf
clc
sbb
test
movsb
add
and
and
xchg
mov
sub
jmp
daa
outsl
pop
jb
pop
and
call
fchs
incl
adc
xor
data16
dec
fbld
clc
jne
xchg
das
fimuls
and
push
add
xor
and
jg
cmpsb
jmp
pop
push
or
dec
jo
out
icebp
test
mov
lcall
xor
add
ret
sbb
jg
mov
push
and
add
add
or
ds
push
icebp
add
cld
xchg
adcb
cld
add
mov
dec
scas
mov
mov
add
test
mov
lods
lds
imul
call
sbb
orl
xchg
xlat
xchg
lea
mov
mov
mov
ds
sar
cmpsb
cmp
js
outsl
mov
cltd
jmp
hlt
inc
xor
subl
call
mov
test
jmp
stos
push
inc
adc
das
mov
xchg
es
cli
adc
stos
clc
lea
cli
inc
jmp
test
jns
dec
mov
xchg
push
cmpsb
mov
inc
hlt
ljmp
pop
or
mov
jne
sbb
pop
ja
cmpsl
xchg
lods
cmp
decb
cmp
mov
xchg
pop
decl
decl
cmpsb
lock
dec
aaa
popa
sar
mov
aas
and
stos
adc
repz
out
decl
in
mov
mov
and
and
cmp
sti
aas
jno
jg
cmp
or
aas
pop
fs
fistpll
adc
cltd
cmp
pop
pop
mov
and
orb
test
shrb
cmp
decl
imul
aas
xor
aad
mov
std
std
into
popa
test
ja
int3
push
sarl
das
dec
pop
loope
push
in
xchg
xchg
out
aas
xchg
push
inc
cmp
int
mov
std
fnstsw
ficoms
mov
cmp
push
mov
push
aas
and
xchg
loop
mov
dec
aas
jmp
jmp
faddp
jle
push
jl
mov
out
std
lea
stos
xchg
test
xlat
out
jmp
jg
sub
jge
xor
push
rorb
push
arpl
cltd
and
sarb
pushl
jmp
setno
cmp
enter
shrb
incl
inc
xchg
lods
add
xlat
cmp
mov
jecxz
cmpsb
add
movb
pop
mov
out
fisttpl
clc
addb
pop
dec
nop
pop
imul
movsl
xchg
cmpsb
mov
outsl
loop
mov
cmpsl
push
lcall
mov
fidivs
xor
es
imul
incl
rcr
jge
call
mov
xchg
cmp
push
xorl
decl
std
push
xchg
or
pop
ficomps
sub
cmpsb
fcomps
mov
add
imul
aas
daa
push
shrl
adc
inc
or
pop
les
sub
addr16
sub
jnp
inc
pop
scas
xor
pop
add
mov
shll
addr16
add
cld
jns
inc
dec
filds
or
pop
in
push
dec
rolb
ja
loopne
xchg
push
or
mov
jle
out
mov
fistps
sub
and
xchg
test
inc
shrl
arpl
jmp
shl
fdivs
ljmp
pushf
push
push
cs
cmp
outsb
enter
fwait
incl
arpl
cmpsb
xor
insl
inc
sub
cs
loop
or
outsl
or
jg
decl
dec
xchg
dec
push
push
and
outsl
adcl
incb
xor
imul
add
and
adc
std
or
sahf
adc
xorl
cmp
push
pop
pop
xor
mov
pushl
and
or
mov
ljmp
je
sub
mov
adc
lock
xlat
add
lcall
lahf
dec
push
add
test
rolb
or
gs
fsubrl
cmp
pop
fidivs
je
popa
insb
push
mov
push
sub
pop
js
gs
xchg
addr16
sbb
imul
sub
cld
push
cmp
dec
dec
jbe
imul
inc
popa
inc
into
dec
xchg
inc
sbb
ja
ljmp
dec
mov
mov
insb
cwtl
lea
cmpsb
addl
sbb
lods
inc
shlb
ret
inc
add
mov
push
xchg
int
fldenv
pushl
test
popa
faddp
fwait
repz
je
sbb
and
push
mov
jle
push
icebp
jg
sahf
js
int
adc
xchg
sub
jno
test
inc
out
push
mov
bound
shrl
xchg
push
add
ss
push
inc
xor
xchg
lock
insb
and
jmp
push
cltd
loope
mov
sub
xor
add
lret
in
cltd
loope
xchg
fs
ljmp
jbe
xchg
fwait
sbb
nop
sub
pushf
sbb
cli
sub
add
lret
pop
adc
lcall
int
jo
cmc
push
cmpsb
imul
test
mull
outsl
xor
out
push
xchg
jg
fwait
call
push
mov
dec
outsl
es
push
push
outsl
inc
cwtl
push
leave
arpl
ljmp
jbe
fcoms
and
add
or
repz
inc
dec
adc
mov
mov
lock
or
sub
mov
push
stos
subl
cmp
test
jp
dec
inc
in
mov
cmp
and
data16
push
pop
sub
popa
je
push
movsb
jmp
cmp
lock
lods
sub
mov
xchg
pop
mov
out
and
fdivs
dec
and
add
push
mov
sbb
nop
movsl
aad
jecxz
fwait
icebp
fwait
mov
pusha
inc
and
xchg
sbb
cmp
xchg
aad
jo
jae
lret
js
push
add
add
movl
fidivl
std
mov
addr16
xchg
xchg
mov
sub
push
dec
fwait
mov
imul
ss
inc
push
es
test
pop
and
mov
aam
movsb
out
push
test
cltd
cltd
xchg
cmp
scas
inc
add
call
push
mov
and
mov
inc
das
jmp
stos
jg
sub
in
loop
daa
sbb
mov
iret
scas
jnp
les
imul
fcomip
dec
ret
inc
test
andb
push
cs
cmp
imul
push
pop
aam
lret
decl
call
nop
insl
adc
xorl
mov
or
xor
sbb
call
scas
fists
push
je
jne
cmpsl
inc
jo
mov
fwait
xor
test
jnp
push
xchg
shrb
aad
inc
hlt
popa
bound
adc
lds
mov
adc
cmpsl
dec
inc
int
lret
and
mov
push
in
mov
and
int
jmp
xchg
inc
mov
cmc
sar
mov
ja
fidivrl
mov
cwtl
mov
push
ficoms
movsl
pop
inc
sbbl
push
add
pop
adc
lds
xor
push
outsb
pushf
xchg
out
sbb
js
lods
pop
mov
sub
lahf
insb
stos
sbb
ljmp
jg
pop
sub
stc
push
lcall
push
jne
mov
gs
test
loopne
je
xlat
xor
jmp
mov
inc
gs
rcll
outsl
sub
addb
lods
xchg
je
adc
negb
mov
inc
cmp
and
xchg
subl
movl
into
jbe
push
das
cmpsb
lret
and
lods
out
imul
or
xorl
xlat
xchg
xchg
jno
cmp
mov
push
mov
jg
inc
or
push
dec
jne
loopne
or
aaa
sub
push
fsub
push
out
push
fcos
jmp
inc
or
imul
rcll
jne
in
mov
inc
outsb
clc
dec
fs
adc
dec
scas
rcrl
push
pop
push
ss
stc
and
lods
mov
inc
jns
cmp
dec
sbb
add
xor
rcrb
ja
mov
push
mov
adc
and
ret
push
jmp
adc
cmp
ljmp
xchg
lock
test
pop
adc
aam
jne
lcall
and
out
and
aaa
outsb
jl
sbb
adc
sbb
inc
loope
decl
inc
in
push
mov
movsb
mov
mov
add
mov
jg
incl
mov
inc
nop
add
dec
xchg
cmpsb
xor
xchg
push
fadds
clc
jg
clc
pop
mov
jbe
adc
cs
xchg
sub
pop
enter
lock
and
adc
das
rorb
imull
sbbl
insl
adc
pop
xor
sub
shl
or
adc
cmp
pop
add
jae
inc
push
or
push
sbb
jmp
xchg
loope
cwtl
pop
adc
lock
decl
inc
or
repnz
lock
add
push
jmp
call
add
movsb
cmp
push
sbb
lfs
add
lock
pushl
inc
adc
add
aaa
jp
or
add
aaa
lock
andb
or
pushl
lock
xor
sub
push
add
adc
and
in
out
and
pop
adc
dec
and
pop
add
xor
mov
dec
sbb
adc
aaa
mov
dec
cmp
aas
mov
int
pop
ret
xor
cs
xor
mov
sub
ljmp
jle
and
pop
jo
jle
sub
lcall
mov
es
or
movhps
loope
cli
orb
push
dec
xchg
mov
out
mov
fcomp
and
lods
push
sbb
adc
sub
jle
push
jp
imul
and
inc
adc
push
cli
dec
mov
adc
mov
adc
ljmp
push
pop
inc
popa
or
mov
orb
xorb
add
jecxz
adc
and
push
scas
add
push
aas
pop
lock
pushf
test
lret
xchg
push
dec
push
in
stos
lret
adc
xor
decl
jp
cmp
sti
mov
xchg
pop
jle
and
adc
and
clc
ljmp
lret
mov
push
inc
mov
sbb
in
add
xlat
lods
jb
and
loope
add
add
jp
push
mov
sarl
or
test
fisttps
sub
out
ljmp
sbb
mov
adc
decl
xor
inc
sbb
inc
dec
lock
add
decl
add
jmp
ror
dec
cmp
fwait
pop
cmpb
or
adc
sbb
or
lcall
movsb
and
cmp
lock
xchg
test
out
pushl
mov
cmp
add
pop
aam
insl
imul
sbb
jl
or
ljmp
or
roll
add
rclb
arpl
sbb
cld
mov
mov
push
mov
in
ss
push
mov
mov
call
ss
sbb
lock
cmp
sub
aaa
add
in
cmp
in
xor
popa
cmp
mov
lods
add
or
lock
jg
call
pushf
jno
push
mov
divb
test
pop
push
js
rcr
jl
pop
mov
lock
adc
mov
lds
push
adc
dec
sbb
dec
push
scas
adc
adc
push
testl
sbb
xchg
add
xchg
mov
aaa
pop
lcall
pop
scas
pop
mov
lock
insl
jg
out
mov
or
and
inc
or
or
out
sbb
std
sub
or
adc
lock
es
cltd
repnz
sub
push
testl
icebp
lcall
adc
out
sbb
es
jl
fmuls
mov
lock
stos
add
or
adc
inc
aaa
or
popf
push
cmp
xor
or
mov
add
jmp
mov
lock
or
lock
sbb
dec
pop
push
xor
js
fs
ljmp
add
pmulhuw
and
lret
dec
push
dec
adc
push
push
adc
adc
adc
ljmp
lcall
out
js
mov
jmp
lcall
cmp
je
add
fildl
testb
sub
or
rorb
mov
sub
mov
decl
and
je
push
xchg
fcompl
push
mov
inc
imul
mov
roll
icebp
and
xor
ljmp
fdivr
xor
push
mov
jno
imulb
ljmp
adc
jle
xor
adc
and
dec
xchg
stc
imul
faddp
lcall
pop
pop
negb
mov
dec
incb
cld
sub
inc
jg
xor
pop
stos
or
push
cmp
mov
jle
inc
stos
lcall
pusha
jecxz
mov
push
ljmp
ljmp
cmp
pop
inc
or
mov
clc
push
pop
jp
xor
push
pop
mov
fwait
dec
xor
xchg
aas
and
aas
mov
or
push
cmp
and
jecxz
adc
mov
adc
mov
ljmp
add
jns
lock
in
dec
cmpsb
push
mov
xchg
pop
pop
and
in
pusha
push
dec
sbb
or
outsb
scas
pop
decl
push
test
lods
lock
mov
mov
pop
ljmp
movsb
in
ffreep
addr16
pop
ljmp
add
or
adc
incl
pop
jnp
fs
jbe
mov
push
cmp
mov
mov
ljmp
incl
hlt
sub
aas
rclb
add
pushf
mov
imul
add
cld
xor
dec
mov
and
lock
stc
add
sbb
decl
push
push
and
aas
mov
mov
ljmp
mov
cmp
pushl
adc
add
sub
and
hlt
das
jmp
call
ss
and
testb
push
push
bound
adc
and
call
mov
dec
ja
lea
rcrl
xchg
ds
dec
cmpsb
fildll
sarl
cmp
add
into
imul
push
adc
jnp
scas
fildll
push
enter
jle
lock
into
decl
mov
add
or
sti
aaa
add
sbb
xchg
pop
push
jne
mov
call
mov
fstl
mov
icebp
mov
mov
outsl
mov
bound
in
pop
hlt
pop
lods
mov
pushf
outsb
call
add
jp
pop
and
mov
lret
push
or
adc
mov
cli
fcomip
jae
aaa
aad
clc
addr16
cmc
adcb
mov
in
or
ljmp
pop
or
decl
clc
mov
lcallw
pushf
jbe
adc
mov
sub
mov
sbb
jno
out
jg
incb
in
sbb
mov
icebp
lcall
xlat
inc
cmp
decl
insb
xchg
dec
add
add
inc
inc
add
sub
cwtl
pop
cmpsb
add
jmp
or
clc
mov
int
lcall
xchg
push
push
xchg
xor
xor
add
mov
and
out
daa
push
adc
lret
dec
add
test
sbb
or
inc
scas
sar
dec
add
push
enter
adc
sub
dec
sub
inc
sbb
add
push
xor
or
lret
hlt
subb
lea
adc
sbb
incl
cmpsl
inc
shlb
fbstp
mov
adc
loop
sar
add
clc
push
outsb
mov
call
mov
imul
fcom
lock
mov
dec
sub
inc
dec
in
ds
inc
mov
xor
push
dec
lcall
pop
push
aaa
into
dec
pop
sbb
scas
xchg
or
dec
in
jmp
mov
xor
dec
push
add
in
adc
arpl
orb
add
outsb
dec
lcall
sbbb
in
push
mov
pusha
and
push
or
loop
rclb
int3
pop
cli
decl
cmpsb
xor
add
in
or
or
nop
add
shr
shll
insb
and
decl
movsb
inc
filds
sbb
shll
sbb
sub
jg
lcall
inc
dec
ljmp
sbb
sbb
sqrtps
ja
sub
jmp
sbbl
dec
adc
cld
dec
inc
pop
push
lea
mov
lret
pop
leave
aas
cmovo
sbb
dec
jge
ljmp
cmp
pop
dec
cmpsb
jge
dec
sbb
sbb
cli
stos
and
cmp
ss
adc
push
pop
scas
push
loope
daa
push
adc
lret
jo
rorb
test
outsb
push
decl
ljmp
insb
inc
sbb
pmuludq
ja
push
lock
icebp
in
inc
lock
fildll
mov
inc
mov
fcoml
or
ret
in
incl
mov
idiv
imul
cmp
cld
and
inc
ds
leave
and
in
jge
das
fsubr
fists
mov
ss
pop
sbb
out
and
test
pop
aas
inc
jg
jg
mov
sti
push
loopne
add
pop
bound
cwtl
sub
jle
fsub
imul
push
and
mov
add
xor
popa
push
push
sti
leave
and
mov
sub
sub
decl
rorl
fisttpl
stos
sub
jg
fisubs
decl
mov
xchg
lock
mov
mov
jg
jg
mov
pop
loopne
mov
int3
and
maxps
mov
ljmp
or
ret
adc
sbb
jne
xchg
std
inc
bound
push
add
call
out
jg
pop
pop
fimull
rcl
jl
aas
pop
mov
in
inc
sbb
cmp
ljmp
cli
call
ljmp
ljmp
pop
fisubrs
jmp
inc
cmp
fisttpl
push
lock
js
lods
stos
push
mov
mov
sbb
pop
jnp
sbb
inc
sar
sbb
or
pop
adc
push
xchg
mov
outsb
xor
pop
xlat
inc
bnd
dec
imul
sbb
push
rorb
sbb
lock
sub
jp
jmp
add
push
popa
pop
or
or
push
pop
idivl
fcomip
das
lods
sahf
sub
sbb
cltd
lock
pop
ja
scas
ret
stos
out
cli
fldt
mov
adc
and
sbb
sbb
or
cltd
pop
call
cld
cwtl
xor
jbe
fisttpl
mov
mov
sub
add
mov
sub
call
xor
push
cmp
add
fisttps
xchg
jo
cmpsl
or
es
inc
es
sbb
incl
leave
xor
fistps
inc
lret
sub
scas
sub
sbb
enter
insb
out
in
mov
inc
dec
mov
out
sti
cmp
pop
inc
inc
mov
sub
add
outsl
ja
dec
mov
jl
pop
or
in
mov
gs
out
mov
outsb
add
adc
bound
scas
std
sub
lock
add
insb
lods
push
pop
in
pop
mov
repnz
push
jle
inc
imul
push
adc
mov
add
test
jb
daa
push
inc
xor
mov
jnp
xchg
mov
aas
scas
add
sub
ret
lock
add
outsl
adc
jmp
mov
mov
and
add
mov
push
mov
add
nop
mov
push
jle
and
decl
sbb
mov
adc
mov
popa
push
jmp
mov
sahf
adc
pop
fildll
push
ds
shll
sub
js
pop
mov
lock
xacquire
mov
pop
sub
aaa
mov
imul
pop
lahf
out
sbb
and
sahf
or
or
lock
bound
mov
adc
out
add
out
pop
imul
fbld
adc
add
lods
dec
icebp
orl
ljmp
stos
xchg
lods
pop
fnsave
inc
icebp
clc
inc
dec
fdivr
aaa
popa
aam
ss
scas
xchg
out
add
mov
stos
mov
sahf
push
ret
jle
xchg
add
pop
nop
and
in
pop
ss
pop
push
incl
out
adc
imul
push
cmpsl
adc
lock
mov
mov
cwtl
out
adc
and
and
movups
aas
pavgb
adc
cmp
lcall
pop
xor
adc
ret
es
xor
es
aas
lods
jne
mov
mov
pop
pop
cld
jb
sbb
cli
ljmp
add
push
imul
int
or
loop
fisubs
outsl
inc
lock
les
and
jg
das
cmp
xchg
jecxz
hlt
scas
adc
inc
add
pop
jle
push
lcall
ret
push
movsl
add
ja
inc
inc
jg
push
dec
js
imul
jnp
push
mov
push
dec
push
popf
ljmp
cmp
mov
mov
xchg
or
sub
dec
pop
adcb
sarb
decl
cli
xor
int3
adc
mov
push
jp
into
negl
int3
lock
incl
fcomps
jo
or
stos
fldt
dec
add
fdivs
decb
xchg
or
mov
mov
and
cmp
xchg
mov
inc
call
jbe
sub
es
xorl
pop
dec
pop
data16
inc
jns
es
mov
incl
scas
mov
imul
adc
lahf
cmp
or
cmp
sub
out
or
fidivl
push
cmp
and
mov
lret
pop
mov
mov
or
dec
call
movsl
ficoms
push
or
dec
mov
fisttpll
nop
out
mov
mov
xchg
ja
or
xor
add
or
dec
sti
sub
pop
jae
cwtl
mov
cli
cld
mov
je
ljmp
dec
shll
repz
lock
dec
shll
movl
cmovnp
jge
je
pusha
mov
fcomip
add
cmp
mov
mov
push
add
sbb
call
call
notb
add
push
sub
cvtpi2ps
adc
adc
xchg
stos
or
jb
push
data16
mov
add
jne
je
cmp
in
decl
sbb
sub
mov
fs
mov
fbstp
jg
int3
and
pop
or
add
inc
ficoml
mov
lock
add
xor
push
out
clc
fdivp
in
cmp
aas
xchg
scas
mov
sbb
or
pusha
incl
push
xchg
mov
arpl
push
or
and
mov
push
jge
xchg
inc
jbe
pop
sbb
jge
lret
in
scas
pop
add
movsl
out
loopne
cmp
or
or
sbb
adc
dec
lcall
js
scas
or
add
adc
ret
mov
pop
das
inc
incl
movsl
mov
std
cmc
push
sarl
push
jl
int
mov
ljmp
inc
movl
and
pop
or
pop
sbb
push
push
int
dec
imul
pop
pop
nop
or
call
xlat
ljmp
lods
push
movhps
mov
pop
pxor
or
mov
xor
insl
cs
or
or
cld
pop
add
shrb
cmp
sub
mov
or
sbbl
xor
adc
outsl
inc
bound
adc
xor
fildll
cld
mov
xor
shlb
adc
dec
jp
or
sbb
sbb
or
call
cmp
pop
mov
and
pusha
bndstx
push
in
adc
imul
add
call
inc
in
or
das
add
jmp
ret
push
push
stos
clc
sbb
lcall
addl
add
pop
inc
push
jecxz
insl
aaa
inc
outsb
lea
pushf
es
stos
pushl
and
and
cli
adc
or
and
insb
or
or
push
mov
cld
lods
mov
push
lret
xor
sbb
call
cmp
add
cs
push
fs
push
ja
icebp
pop
xchg
xor
inc
fnsave
pusha
dec
lock
add
pushl
sbb
inc
cmpsb
lret
insb
insl
sbb
sbb
adc
fcmovnu
mov
xor
xchg
jbe
cmp
sbb
aas
filds
inc
jae
jb
or
std
and
and
fcomip
push
or
and
shrb
xor
std
fimull
int
push
sub
push
inc
dec
incl
cmp
xor
push
fs
lcall
cmp
mov
shlb
decl
xchg
add
cmp
sbb
xor
pop
fisubl
push
adc
shll
add
clc
scas
orb
inc
or
jp
cmp
push
and
cmc
and
and
inc
cli
call
lds
push
push
sub
push
xchg
pushf
and
lock
mov
adc
scas
pop
and
lcall
shlb
je
adc
mov
cmc
loopne
xor
mov
jmp
fisubrl
inc
mov
dec
push
addb
cmp
mov
adc
mov
out
inc
and
xlat
cmpsb
push
adc
repz
call
nop
fmul
pop
outsb
add
and
mov
fsubrp
fistpl
shrd
les
dec
ljmp
push
rcrb
push
dec
jno
add
or
mov
lds
cli
fisttps
sarb
add
cmp
push
sbb
int
das
add
jecxz
ds
mov
sub
inc
push
adc
rcr
fsubr
fisttps
pop
cli
and
jne
and
push
int3
sbb
sub
sbb
adc
sub
and
mov
fstpl
xor
lcall
cmp
adc
pop
and
icebp
fadds
pop
adc
pop
cmp
repnz
out
push
shll
bound
or
or
dec
or
sub
pop
pop
xor
push
lcall
stc
sub
and
filds
incb
sbb
dec
jo
mov
mov
add
fwait
sbb
lock
xor
and
outsl
lcall
push
jl
into
jg
cmp
jmp
pop
jg
cmp
and
xor
ret
or
decl
adc
in
jg
lds
pop
inc
jle
adc
adc
sub
jge
and
cmp
dec
lret
dec
clc
pop
jl
jb
movsl
stos
mov
imul
fs
push
inc
sbb
mov
das
dec
push
ret
or
jnp
loopne
inc
bound
xchg
mov
jne
xchg
mov
adc
jmp
and
push
sbb
jns,pn
std
ja
mov
mov
lock
xor
sbb
sub
inc
fs
jb
sub
xchg
jmp
or
xor
lret
jmp
sbb
add
and
and
aaa
lcall
aaa
xor
aad
imul
call
sub
scas
xor
lret
cmp
call
sub
outsb
mov
shlb
push
inc
or
dec
pop
popf
xor
jle
mov
push
call
in
fistl
jg
add
outsb
lret
push
and
in
mov
push
xchg
pushl
cmp
dec
inc
pop
or
repnz
cmp
dec
adc
ljmp
ds
js
je
push
xchg
adc
cli
fdivrl
std
and
push
xchg
push
mov
push
push
rorb
shll
pushf
fsubrp
sbb
mov
nop
or
push
lock
ret
mov
xchg
outsb
mov
lock
and
daa
mov
fisttpl
imul
sub
push
pop
or
push
push
pop
test
cmp
xchg
mov
fmuls
addl
push
mov
inc
pushf
pop
cmp
fdiv
push
dec
add
ret
xchg
ja
cli
and
sub
ret
adc
lock
mov
decl
mov
dec
call
xor
rcll
xor
or
dec
and
or
std
cli
push
xchg
add
sub
es
lock
rorb
cmc
in
sbb
mov
or
adc
adc
call
mov
lock
gs
add
movsb
push
inc
je
jae
dec
and
clc
or
and
hlt
sub
mov
incl
inc
daa
and
push
and
add
insl
divb
sbb
sbb
in
jp
sub
sub
xor
add
pusha
mov
fdivrl
mov
ljmp
cmp
addr16
push
xor
cmpsl
sub
inc
dec
pop
or
ljmp
mov
andb
inc
js
inc
repz
bound
inc
push
fstp
fdivr
push
sub
dec
lcall
jb
push
loope
nop
pop
sub
and
jae
mov
sub
push
sub
sub
mov
mov
dec
mov
inc
inc
js
mov
push
sbb
std
ljmp
xchg
adc
dec
fcomip
jg
aaa
icebp
repnz
fs
fbstp
stos
and
mov
fwait
cmp
cli
add
add
inc
cmp
sti
pop
addb
cli
call
xor
sub
inc
push
cmp
dec
dec
xor
out
ss
mov
imul
arpl
fistpl
and
jnp
movsl
mov
sbb
incb
dec
ss
sub
mov
call
mov
bound
push
int
pop
cmp
movsb
jbe
or
pop
add
movsl
sbb
xor
call
insb
push
outsb
push
xor
mov
or
bound
mov
aas
popa
cmp
ja
cmp
incl
jl
ds
lock
add
inc
cmp
push
inc
xchg
jg
inc
lea
inc
xor
pushl
das
lods
xor
ss
sbb
and
cld
or
add
enter
sbb
sub
or
shl
mov
push
pop
fists
loopne
add
cmpsl
jecxz
cmc
jg
in
loopne
jmp
cs
or
sub
hlt
ljmp
add
push
adc
popf
jl
stos
push
movsl
nop
and
and
rcrl
inc
cmp
add
dec
or
bound
push
sbb
adc
xlat
testl
decl
adc
and
sub
cmp
insl
fcomi
mov
divps
cwtl
call
lcall
add
ret
add
dec
stos
enter
mov
imul
lret
inc
push
sbb
or
mov
pusha
add
cmp
or
or
sub
mov
ljmp
jbe
add
mov
fdivr
inc
lea
in
subb
sub
sahf
rcll
stos
adc
sub
in
mov
mov
fmull
sub
mov
sub
out
add
pushl
jno
add
mov
popa
mov
ret
sub
loope
call
sbb
dec
and
sbb
xor
lahf
pop
xchg
decl
sub
jne
mov
dec
xchg
fcoms
sbb
and
fisttps
insl
dec
mov
nop
inc
sbb
mov
std
arpl
mov
fisubrs
xor
ljmp
ret
lods
mov
xchg
mov
addl
xchg
test
mov
incb
in
xchg
mov
cmp
adc
jg
sub
fsubrl
jmp
jecxz
outsb
cmc
out
inc
sbb
adc
lcall
das
dec
mov
insl
insb
cmp
iret
mov
xlat
popa
std
mov
movsl
cltd
adc
jg
lea
lahf
xor
adc
add
sub
cmp
mov
dec
imulb
push
push
ljmp
mov
jns
pmaddwd
sbb
mov
ljmp
rol
push
xor
ljmp
movsb
xchg
cmp
push
dec
sbb
addr16
in
sbb
add
dec
lods
and
xchg
add
mov
sbb
inc
ja
loopne
mov
lods
sbb
adcb
jnp
mov
adc
push
dec
mov
adc
add
sub
pop
mov
stos
inc
xchg
ljmp
lds
add
adc
sbb
aad
decl
sub
mov
stos
mov
pop
or
jo
add
cmp
adc
arpl
pop
jmp
sbb
cwtl
push
xchg
fldl
hlt
pushl
jbe
pop
ja
adc
lret
jmp
decl
test
shrl
aas
outsb
jl
pop
xor
add
or
sub
pop
cmpb
imul
or
adc
or
or
out
in
or
mov
mov
xchg
sbb
sbb
fldl
sub
sub
sbb
xchg
aam
jl
mov
js
aaa
xchg
xor
stc
xor
cli
and
inc
add
loopne
jle
and
sub
dec
mov
nop
fcmovbe
and
andb
add
adc
push
cs
pusha
xor
fadds
pushl
push
jbe
jb
or
push
decl
add
cld
add
xor
loop
cmp
jne
cmp
jg
adc
faddl
pop
cmpsb
lods
lock
dec
adc
mov
add
pop
jnp
sub
inc
jns
pushf
gs
psrad
and
out
pop
or
inc
inc
push
dec
push
jmp
xchg
outsl
out
clc
jg
add
pop
xor
std
dec
jle
sub
dec
push
mov
shlb
push
mov
jmp
add
add
cs
loopne
iret
mov
push
jmp
and
xlat
add
cwtl
xchg
incl
into
loope
jb
adc
add
sti
mov
pop
dec
cli
lods
aaa
add
dec
sbbb
enter
out
pushf
dec
ljmp
xor
xchg
out
xlat
mov
nop
sbb
mov
cli
insb
jge
test
in
outsb
dec
in
dec
inc
jnp
inc
add
pushl
sahf
cmp
dec
xchg
test
repnz
xchg
nop
mov
lods
bnd
or
loop
adc
mov
mov
or
int
jmp
nop
add
push
inc
mov
jb
fcmovnb
pop
mov
sub
add
out
cld
adc
addr16
sti
xchg
mov
fdivrp
push
adc
adc
leave
jae
jne
inc
add
loopne
dec
pop
jne
call
shr
sbb
mov
xor
ss
add
mov
fscale
sahf
out
jne
clc
mov
sbb
dec
mov
add
pop
sbb
out
adc
and
add
incl
pop
mov
add
scas
jbe
mov
pop
push
popf
or
jmpw
add
ret
repnz
ja
add
mov
dec
or
pop
pop
idivl
mov
sub
cmp
adc
incl
testl
add
sbb
outsb
ffree
rclb
xor
call
add
cmp
and
in
adc
xchg
loope
mov
test
js
push
fisubrl
leave
clc
add
push
xorl
fistpl
pushf
or
leave
fdivr
jns
movzwl
adc
push
dec
repnz
push
aas
xchg
scas
add
movsb
add
jmp
popa
xor
cli
xor
mov
repnz
ss
out
out
in
inc
mov
repnz
repnz
loop
andps
rorl
rcr
pop
mov
push
mov
adc
jle
push
jb
jmp
dec
lds
add
xor
pusha
sub
add
rcrb
sar
mov
add
les
sub
jmp
adc
add
dec
leave
push
je
mov
enter
jbe
xchg
mov
jge
sarl
jp
nop
jmp
xchg
xchg
add
inc
inc
sbb
js
inc
inc
inc
inc
inc
xor
inc
inc
inc
inc
aad
cmpsb
ret
inc
inc
inc
inc
fdivr
mov
inc
pop
xor
inc
inc
inc
inc
inc
jb
and
inc
inc
nop
mull
inc
xchg
out
loope
inc
inc
inc
inc
sbb
xor
inc
inc
inc
inc
cmp
sub
push
inc
inc
inc
lret
idiv
jl
enter
or
loopne
or
cwtl
push
leave
jnp
sub
repnz
mov
outsl
jmp
iret
iret
test
fcoms
dec
dec
out
es
hlt
and
mov
es
jo
enter
ds
sar
jbe
push
push
add
pushf
fdivl
ljmp
mov
xor
sbb
add
call
mov
add
xor
add
push
hlt
dec
mov
jnp
ret
push
out
mov
pop
je
shrb
pusha
inc
insb
sbbb
mov
mov
dec
dec
fldt
push
xor
sub
mov
fists
adc
mov
out
or
xchg
ret
mov
je
adc
out
xor
inc
popa
pop
xor
fidivrs
adc
push
imul
out
pop
add
dec
nop
je
outsl
jb
movsl
popa
loopne
insl
mov
add
mov
jae
mov
cltd
rcll
fidivl
jg
dec
inc
aas
sub
xchg
add
mov
push
or
ds
jp
in
cld
inc
mov
cs
jbe
adc
jns
cmp
add
or
adc
push
push
mov
pushl
fsts
lcall
ror
fs
test
inc
and
mov
and
int
adc
and
movsb
add
xor
sub
hlt
jmp
imul
xchg
mov
mov
int
aam
std
xor
jecxz
xor
mov
cmp
xor
and
dec
inc
pop
out
xchg
xor
push
jno
jle
lea
xchg
xor
int
pushl
add
xor
xor
xor
data16
xor
and
xor
decl
inc
aaa
xor
xchg
rcrb
xchg
movsb
mov
clc
sbb
mov
mov
aaa
cmc
aaa
std
aaa
add
daa
cmp
ja
mov
mov
subb
test
in
xchg
ficoms
cs
push
dec
mov
push
jnp
sub
and
xchg
clc
negb
loopne
pop
add
lcall
and
push
add
pop
inc
jb
adc
mov
push
dec
or
lret
out
scas
mov
fucom
sbb
mov
aas
out
sub
sub
fisttpll
sahf
cmpsb
fucomp
jbe
outsb
imul
push
insb
add
sbb
outsl
idivl
xor
xor
cmp
neg
or
push
push
xchg
outsl
jb
imulb
inc
sbb
aaa
pop
xor
or
ja
data16
dec
jno
push
fidivl
outsl
inc
push
jp
inc
ss
inc
inc
insl
movsb
mov
dec
jns
popa
sbb
dec
xchg
jae
fisubrs
xchg
xor
gs
push
bound
and
insb
mov
adc
pop
outsl
fisubs
add
fidivrl
outsb
arpl
mov
je
inc
push
bound
xor
jnp
jge
ljmp
imulb
jmp
sti
mov
adc
pop
outsb
sbb
out
sbb
jp
pmaxub
sub
es
lret
jo
loop
jnp
jb
addr16
sub
repnz
outsb
out
xor
outsb
rolb
xor
jge
push
cmpsl
fs
fdivs
rcrl
jae
das
gs
cmpsb
mov
outsl
dec
push
xchg
push
xchg
jnp
orl
push
jb
push
out
push
sbb
ret
and
jbe
mov
cld
icebp
sbb
xchg
cs
dec
add
push
rcrl
pop
jbe
inc
adc
cmp
pop
cmpsl
inc
add
ja
mul
adc
or
push
aaa
or
aaa
mov
push
mov
mov
sub
mov
enter
xchg
testl
pop
cmp
aaa
stos
pop
movsb
and
cmp
fcmovnbe
cmp
xchg
xchg
xor
xlat
xor
cmp
inc
inc
pop
test
xor
and
jnp
sub
outsb
dec
insb
push
outsl
bound
mov
mov
aas
mov
or
sub
sbb
cmp
add
xor
sub
xchg
pop
add
iret
and
add
add
push
mov
sub
jg
push
mov
sbb
stc
push
add
or
cli
xor
mov
shll
xor
out
push
cmpsb
mov
cmp
dec
adc
mov
jns
ds
mov
add
pop
pop
xchg
mov
enter
sbb
cmc
adc
xor
push
mov
jbe
sub
add
arpl
push
pop
add
cmp
aam
add
mov
push
add
sub
xor
test
push
add
add
int
outsb
notb
or
test
jae
popa
jb
push
fs
mov
sbb
insb
jae
es
pop
or
xor
xor
dec
insl
or
pop
sbb
xor
add
mov
jg
add
addl
inc
scas
fisttpl
lcall
insb
xlat
out
add
adc
push
xor
js
mov
sbb
insb
and
jb
ljmp
pop
mov
mov
dec
xchg
pop
xchg
idiv
add
sbb
and
sbb
push
clc
addb
add
xchg
jns
lea
sbb
and
cs
pop
jno
xor
jp
sarl
xor
mov
sbbl
sbb
pusha
out
jg
mov
aad
mov
inc
dec
pop
dec
xchg
in
xor
jl
pop
cmp
loop
psubusb
inc
mov
xorb
nop
push
or
adc
pop
lds
ljmp
dec
mov
sub
ljmp
ja
sarl
sub
add
xchg
pop
mov
inc
inc
or
mov
cltd
xchg
xor
inc
sbb
mov
dec
mov
insb
imul
pop
push
into
mov
dec
mov
jne
cwtl
xor
pop
ljmp
mov
insl
out
add
jbe
ret
xchg
add
das
adc
push
add
out
clc
jmp
mov
mov
fildl
pop
out
mov
shrb
xor
rolb
sub
call
mov
mov
nop
fs
or
loop
shll
or
xor
xor
ds
jl
mov
dec
xchg
mov
sub
not
mov
jg
addl
mov
xor
pop
cmp
lret
fisubl
aad
dec
aam
cmpsb
fsubrl
stos
pop
aaa
fcoms
and
inc
and
bound
cs
mov
cld
jmp
das
and
mov
cmp
mov
insl
test
and
push
rorb
out
and
sbb
pop
xchg
sbb
faddl
adc
loope
xchg
lock
xchg
xor
and
ljmp
inc
shrl
add
add
adc
dec
hlt
add
nop
inc
add
add
andl
adc
add
nop
push
add
inc
inc
add
add
lock
mov
xchg
subb
push
add
inc
inc
add
addl
orb
adc
adc
nop
push
xchg
push
and
notl
test
mov
add
and
add
nop
pop
add
add
adcl
adc
add
ret
adc
push
inc
add
add
add
and
inc
adc
nop
push
add
add
inc
add
test
adc
or
xor
adc
nop
push
add
xchg
test
inc
add
mov
add
and
add
nop
inc
add
add
andl
adc
add
nop
push
add
inc
inc
add
add
ja
or
mov
sbb
add
add
shrb
leave
aam
cmpsb
dec
push
popf
add
fwait
push
lcall
sbb
imul
sub
dec
inc
add
sbb
gs
dec
add
test
imul
or
xor
sbb
xchg
xor
push
and
fadd
fwait
add
lcall
xchg
jo,pt
add
outsb
insl
rclb
cmpsb
movsb
xorl
jo
and
gs
sbb
mov
sbb
shll
or
xchg
sub
push
cmp
sbb
jo
push
test
out
pusha
mov
lcall
xor
fwait
xchg
subl
movsl
sub
inc
sub
cmp
push
add
inc
dec
out
inc
mov
jg
dec
push
push
mov
xchg
shrw
sub
add
add
jmp
xchg
jb
loopne
xchg
add
pushl
pop
or
call
and
or
or
sbb
adc
push
movhps
push
mov
aas
xor
lcall
call
push
push
adc
adc
and
or
leave
dec
pop
cmp
and
push
or
jg
pop
adc
pop
syscall
or
adc
sbb
cs
sbb
jl
pop
or
sub
jb
push
outsb
jb
add
cmpsb
loopne
inc
jae
add
dec
push
ror
dec
adc
in
add
jae
cld
dec
xchg
mov
adc
test
xor
mov
dec
test
nop
adc
jne
xor
add
add
adcb
push
pop
push
rolb
lea
adc
xor
push
sub
and
xchg
inc
dec
adc
xchg
pop
jne
pusha
dec
jo
int
mov
and
sub
dec
xchg
add
add
add
add
sarb
lea
push
jmp
nop
pop
push
inc
mov
inc
add
loopne
mov
sub
adc
jb
mov
je
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
and
jb
dec
add
jne
mov
sub
adc
inc
shr
add
jne
sahf
push
sub
adc
adc
sub
xchg
shl
mov
inc
adc
pushl
clc
mov
jmp
add
jne
mov
jb
hlt
add
jne
mov
cmpl
add
loopne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
popa
in
roll
std
add
add
cld
jbe
mov
ja
pop
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
cmp
mov
shr
rol
xchg
sub
push
jmp
add
mov
adcl
fsub
add
cmp
pop
add
test
stos
mov
add
repz
adcl
adc
cmpsl
mov
inc
or
je
mov
scas
push
inc
or
adc
or
je
mov
add
jmp
lea
add
lea
xor
mov
aad
shlb
ja
add
mov
xchg
shll
les
lock
pop
loop
xadd
adc
pop
add
jmp
mov
adc
add
mov
and
push
call
lahf
xchg
add
add
sub
push
push
bound
call
pop
popa
lea
subb
les
sub
jmp
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
jbe
add
add
add
hlt
add
add
add
adcb
add
roll
add
add
add
mov
add
add
rclb
pop
add
add
add
add
add
add
adcb
cmp
jae
xchg
insl
bound
js
sbb
cmp
sub
push
js
imul
je
arpl
cmp
insl
jbe,pn
and
insl
xor
data16
push
jo
jae
outsl
outsb
cmp
and
or
je
jne
je
cld
outsw
and
insb
outsb
cmpsb
cmp
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
mov
or
and
arpl
imul
and
and
cmp
gs
gs
gs
inc
imul
inc
ds
and
and
cmp
gs
gs
gs
js
arpl
imul
insb
and
imull
popa
jae
outsb
mov
and
jne
inc
arpl
jae
cmp
jae
and
out
das
jb
jno
gs
gs
js
arpl
imul
sbb
or
and
and
jb
jno
xor
gs
jb
inc
imul
or
and
and
and
jne
imul
cmp
je
jne
je
outsb
outsw
lret
or
jae
imull
insb
jns
push
inc
aad
add
add
add
mov
add
xor
adc
mov
add
add
add
add
add
add
ret
and
adc
repnz
add
add
add
add
dec
ret
ds
add
add
push
add
add
add
add
add
add
add
add
adc
retw
and
adc
xchg
adc
add
adc
jb
add
mov
adc
cmc
add
add
ret
xchg
add
add
push
dec
nop
dec
xor
cs
dec
dec
mov
inc
push
inc
push
dec
xor
add
xchg
push
xor
cs
insb
xchg
add
fs
imul
gs
jb
arpl
fs
jae
add
add
je
popa
insb
push
inc
outsl
je
arpl
arpl
je
popa
insb
inc
ds
outsl
arpl
add
addr16
popa
insb
inc
jb
pop
add
add
imul
jae
xchg
add
outsb
push
jb
arpl
jae
outsl
imul
add
ja
jo
fsubrl
inc
add
add
mov
add
add
push
aaa
add
add
add
repnz
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
rolb
les
add
push
xor
xor
xor
je
mov
cwtl
xor
xor
xor
xor
cmp
xor
jno
jl
cmpsb
xor
dec
xor
jno
jnp
xchg
xor
xor
xor
xor
xor
xor
xor
je
xorl
xor
adc
das
ss
inc
ss
outsb
ss
mov
test
pushl
add
aaa
dec
aaa
jae
jge
mov
mov
mov
aaa
fbstp
out
aaa
pushl
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
cmp
