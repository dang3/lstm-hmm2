and
scas
rolb
mov
loop
add
jmp
add
sahf
add
add
sub
push
mov
sub
call
and
push
or
add
jne
lea
std
mov
mov
push
lock
push
sbb
add
mov
pop
ret
pushl
les
pop
mov
add
dec
or
fdivr
out
fbstp
es
add
inc
pop
inc
mov
push
push
idiv
adc
add
push
mov
not
push
aam
pop
and
not
push
push
push
push
push
or
lret
push
push
push
or
pop
sti
mov
dec
inc
push
pop
neg
not
xchg
enter
adc
push
out
ss
inc
push
fnstsw
push
in
push
rorb
xor
mov
inc
add
dec
xor
and
push
add
je
outsb
loope
push
add
jge
add
ss
and
int
mov
push
shrl
ds
leave
mull
mov
add
and
in
test
fidivl
sti
dec
mov
inc
mov
ljmp
jo
or
mov
jns
fmul
pop
or
lahf
clc
xchg
rorb
jmp
div
jmp
lahf
push
call
mov
adc
lahf
push
and
inc
xchg
insb
adc
adc
insl
outsl
or
adc
add
xor
add
push
jmp
pusha
pop
dec
fst
rclb
push
mov
mov
mov
imul
imul
insl
dec
xchg
pop
cmpsl
mov
cld
adc
adc
pusha
cld
and
or
into
xchg
or
fucomp
mov
je
jl
pop
or
xchg
mov
xchg
jo
insl
fisttpl
adc
or
jl
sub
incb
imul
les
cmp
jo
add
ds
das
jl
aad
inc
xchg
jg
cld
push
cmp
push
jle
pushf
mov
add
mov
dec
mov
jbe
jmp
xor
xchg
gs
jmp
mov
adc
daa
fcoml
aas
sub
out
aas
inc
cltd
pop
faddl
sub
cltd
fdiv
inc
jle
push
jb
jb
jp
jo
daa
fistpll
js
rcrb
mov
daa
movsl
inc
stos
jne
fcoml
imul
sub
shrb
popa
js
jns
sub
shlb
insl
jnp
popf
sub
leave
fs
addr16
xor
xor
jns
bound
arpl
insb
jnp
daa
dec
ja
outsb
sub
jne
imul
push
ds
mov
jl
xor
sarb
push
sub
outsb
adc
cmpl
call
fwait
push
clc
jl
sub
nop
out
or
sarb
int3
enter
mov
pop
aad
sbb
hlt
sbb
mov
dec
sbb
frstor
popf
mov
mov
lods
add
test
push
sub
add
popa
das
mov
in
inc
pop
push
sub
cmp
aad
mov
lods
in
adc
pop
aam
fidivs
enter
dec
sbb
or
cld
cwtl
int
inc
lock
adc
cld
call
into
popa
rorb
out
mov
clc
adc
cld
ret
lahf
xchg
xor
les
inc
in
jle
jbe
mov
dec
in
call
das
call
das
lret
dec
dec
pop
inc
xchg
xlat
in
mov
popa
push
lahf
mov
inc
push
and
pushl
inc
xor
push
add
insb
lahf
inc
sbb
inc
call
insb
pop
mov
pop
sbb
out
xor
or
jae
fisttps
xlat
cmp
and
loop
iret
xor
les
sbb
pop
inc
push
imul
dec
js
aad
jle
les
iret
int
js
je
mov
mov
mov
inc
or
lahf
loopne
rolb
lret
mov
xlat
out
outsb
fucomi
mov
shr
inc
inc
inc
iret
sbb
pusha
jno
cltd
xchg
mov
insl
jmp
xchg
pop
pusha
adc
pop
push
lcall
sbb
mov
rcrl
popa
pop
lahf
addr16
xlat
mov
pop
imul
mov
ja
ja
cltd
push
adc
and
inc
mov
sub
fidivrs
add
dec
dec
mov
sbb
jnp
lahf
aas
inc
sbb
adc
idivl
push
das
pop
sbb
andb
pop
fcomp
notb
xchg
std
es
or
jae
add
clc
lea
jb
repz
jb
sbb
les
das
pop
ret
mov
mov
push
pop
int
adc
nop
xchg
outsl
insl
adc
xlat
sbb
sbb
or
ss
or
sbb
lahf
mov
xchg
clc
push
or
shll
rcrb
or
xor
and
out
lret
inc
jl
or
add
add
cltd
inc
mov
lahf
push
daa
aam
jmp
popa
dec
es
data16
clc
outsl
outsl
std
incl
aad
adc
popf
jne
sbb
outsb
arpl
xchg
hlt
lret
pop
in
shr
mov
stos
or
jp
clc
mov
xchg
or
push
or
in
data16
pop
or
xor
out
das
mov
ss
outsb
jnp
xchg
mov
loope
mov
outsb
fisttps
popa
es
nop
xor
out
jg
pop
in
imul
pop
or
pop
xor
into
jo
push
cmp
jne
fucomp
lret
add
insb
or
decb
lea
sbb
adc
imul
imul
dec
out
push
add
daa
ret
dec
aam
test
jne,pt
add
jecxz
cmpsb
sub
mov
lea
pushf
xchg
lret
lahf
nop
faddl
add
testb
xor
sub
sbb
mov
xor
pop
mov
jmp
cs
ljmp
adc
fdivrl
adc
popa
in
clc
jnp
pop
es
and
aad
add
aad
or
daa
dec
div
jmp
in
pop
sahf
adc
dec
pop
idivl
je
cmp
lahf
call
mov
push
cld
jns
loopw
jo
idiv
or
aam
dec
aaa
sbb
add
pop
or
aam
jecxz
pushl
std
sub
or
push
push
cmp
ja
or
pop
pop
or
cld
cmp
fildll
inc
push
rcll
adc
inc
push
sbbl
jecxz
in
dec
lcall
add
fwait
loope
push
xlat
je
cld
cli
sub
cld
repz
data16
loop
std
xlat
aas
push
or
lock
add
lret
jmp
xor
shlb
mov
xor
jbe
in
mov
cli
inc
mov
mov
dec
add
mov
mov
roll
ret
not
es
inc
add
lock
fiadds
repz
inc
mov
mov
lods
push
mov
add
inc
pop
lea
ret
dec
jne
dec
mov
pop
imul
fst
decb
fistps
das
sbb
push
jp
out
mov
repnz
inc
das
hlt
inc
xor
jbe
push
push
out
sbb
mov
push
inc
call
and
inc
adc
pop
mov
lock
push
push
enter
and
add
cmp
jae
sbb
inc
add
pushf
lock
mov
fwait
xchg
or
sbb
daa
iret
idivl
and
and
loopne
adc
add
inc
hlt
jl
adc
or
mov
adc
fistl
inc
sbbl
push
or
hlt
bt
push
jae
dec
push
xchg
add
or
fisttps
fstpt
sbb
and
add
and
and
sub
and
and
and
adc
xor
and
sbb
lcall
outsl
pop
outsl
xor
bound
add
jbe
push
addr16
cli
call
inc
push
and
jbe
jo
push
xor
bound
outsl
icebp
call
ja
push
xor
pop
mov
inc
xor
pop
cmp
outsl
outsl
pushl
data16
add
dec
js
inc
xor
jbe
insl
inc
jbe
fs
data16
call
jne
js
jne
xor
insl
jae
xor
inc
dec
add
gs
jno
push
push
push
ja
ss
add
jns
xor
arpl
jbe
inc
jae
inc
jb
jbe
inc
add
mov
sbb
outsl
insb
ja
mov
cld
incb
pop
inc
xchg
dec
filds
movsb
xchg
iret
sahf
rcll
or
add
out
mov
add
push
test
fmull
jge
dec
adc
out
jnp
lea
and
xlat
jl
xchg
fdiv
add
mov
cld
jge
cmp
outsb
adc
leave
dec
mov
cmp
or
jge
jbe
dec
sbb
sub
data16
add
and
and
into
sahf
add
adc
leave
shll
xchg
jge
fbstp
jne
into
ljmp
addb
and
imul
mov
negb
cmc
or
int
inc
aaa
in
mov
inc
loopne
out
cmp
mov
mov
mov
xchg
fwait
or
ds
fcmovne
and
push
mov
adc
push
or
fs
inc
adc
loope
pop
repz
lcall
dec
cmpsb
pop
xlat
ret
jbe
push
jle
out
daa
in
test
call
xor
outsb
inc
cmp
loope
push
out
add
sbbb
int
lret
fcmovne
mov
mov
push
lret
add
and
jb
inc
mov
jae
cmp
hlt
subl
adc
cmp
and
mov
jne
pop
into
sahf
fstl
xchg
mov
clc
cmp
and
push
lcall
mov
icebp
mov
sub
iret
out
test
sarw
lock
jecxz
or
add
aam
imul
outsb
loop
adcb
call
or
jle
xor
lock
and
cld
clc
sbb
je
add
pop
dec
lea
call
pop
cmc
push
nop
jge
adc
or
push
xchg
jmp
insb
js
add
fcoms
inc
fs
jg
cmpsb
bswap
repz
lock
divb
or
dec
ret
in
sbb
mov
cmc
mov
dec
repnz
roll
mov
and
cmp
hlt
and
mov
cmp
cmp
xchg
and
imul
imul
jmp
loope
sti
in
mov
mov
addr16
fs
add
cli
adc
cli
sbb
add
jb
out
cs
js
iret
cltd
mov
jge
imul
aam
mov
mov
fbstp
xor
loop
in
out
leave
aaa
sbb
shll
mov
add
cmp
rclb
mov
int3
or
cmp
out
jmp
gs
inc
lcall
or
cmp
xchg
add
leave
repz
push
push
enter
xchg
xchg
cmp
cmp
lea
mov
cmpsl
push
jg
ret
add
jns
daa
add
adc
mov
adc
sti
ret
test
stc
nop
add
repnz
movsl
pop
xchg
out
inc
xchg
ret
movb
add
movsb
idivl
rorl
xchg
shrl
xchg
and
jbe
push
lods
adc
stc
jge
sub
add
nop
dec
add
mov
push
lock
nop
out
xor
xchg
xchg
cmp
mov
or
xchg
imul
xchg
and
lea
inc
add
xor
mov
xor
cmc
je
ljmp
nop
cli
pop
sub
leave
or
test
mov
repnz
add
out
fisubl
in
jle
or
xor
adc
mov
in
ss
iret
out
movsl
sbb
adc
sbb
adc
xchg
mov
push
cmp
mov
push
mov
ficomps
cmpsb
dec
mov
out
in
les
stc
inc
jbe
sub
mov
lahf
stos
aas
out
cli
mov
testb
icebp
insl
jp
icebp
jmp
or
movsb
add
mov
arpl
fistpll
int
rep
dec
or
xchg
and
out
and
jbe
dec
cld
ds
push
pop
test
pop
sub
mov
rol
sbb
push
int
sarl
lock
xchg
out
jno
fstpl
sarb
xchg
cmpsl
cmp
and
lods
push
xchg
fadd
das
arpl
scas
push
loopne
xchg
sbb
xchg
jo
ljmp
jecxz,pn
and
leave
mov
ret
fistl
shrb
mull
or
inc
dec
imul
mov
jae
xchg
out
xor
xchg
pop
in
push
xchg
and
mov
mov
int
fisttpll
xchg
out
xchg
and
push
xchg
andl
lods
pop
int3
lahf
loope
rorl
lods
movsl
pop
xchg
inc
sahf
cwtl
jle
add
cmp
cmpsl
add
adc
jo
jns
or
push
aam
ljmp
dec
arpl
lret
in
mov
or
add
add
jne
xchg
and
cwtl
push
xchg
xor
cmp
mov
push
lret
push
xchg
and
jb
jmp
outsl
inc
push
dec
loopne
fldl
cwtl
movsb
insb
fnstcw
push
cmpsb
xchg
cmp
xor
dec
push
inc
filds
and
adc
inc
sbb
add
jl
imul
addl
shrb
sub
cmp
ds
imul
or
push
mov
jbe
xchg
dec
lods
cmpsb
aaa
pusha
bt
jg
cmp
or
jo
xor
rcll
xor
sarl
jle
mov
fmuls
popf
xor
and
jp
lds
clc
jne
xchg
cmp
out
cmp
jecxz
lods
sbb
enter
sub
mov
jge
add
pop
fs
xor
rcr
and
jbe
push
xor
out
loope
sub
or
xor
pop
and
xchg
and
mov
push
addr16
adc
imull
or
loopne
fldcw
inc
rcll
test
in
in
mov
or
js
jl
cli
jae
mov
xor
jnp
or
lock
aam
cmp
sub
leave
and
xchg
loop
inc
int3
sbb
or
push
jl
sub
mov
cltd
loope
pop
out
jb
subb
out
mov
insb
add
cmpsl
ret
sarl
xchg
faddl
pop
pop
jl
jp
mov
mov
xorb
pminsw
ljmp
pushf
push
mov
testb
xchg
popa
aaa
sub
jb
cmp
sbb
add
es
iret
add
mov
sbb
popf
push
inc
test
rcr
xchg
sbb
es
pop
lods
cwtl
sub
dec
aas
or
push
add
push
xchg
mov
shll
int
pop
orl
loopne
dec
dec
xchg
stc
stos
xor
jmp
jecxz
aaa
int
inc
nop
aas
cmp
ds
outsb
sarb
rcll
aad
hlt
push
addl
jle
mov
rorb
or
or
cmp
mov
cmc
stos
and
int
test
mov
pop
add
mov
rorb
es
mov
mov
push
add
adc
adc
mov
movsb
bnd
dec
in
dec
and
add
cmp
popa
and
inc
popa
fs
cltd
mov
and
and
ss
aad
xor
adc
stos
pushf
fs
adc
cmp
sbb
lods
jge
xchg
xchg
ss
adc
mov
nop
out
mov
int3
loop
ss
mov
xorl
clc
orb
ss
arpl
sub
popa
mov
notb
ret
stc
push
jno
and
adc
pushl
push
add
fidivs
cmpb
dec
mov
pop
jbe
call
mov
insb
shlb
in
lock
xor
xchg
mov
rclb
mov
int
data16
pop
mov
stc
loopne
nop
jp
data16
add
xor
xor
xchg
outsl
ljmp
repz
adc
dec
ret
loopne
mov
mov
mov
xchg
mov
fbstp
andl
mov
outsb
inc
clc
ficoml
push
mov
and
and
cmpsl
add
dec
loop
jecxz
adcl
aas
leave
data16
push
imull
jb
inc
ds
stc
lock
mov
jae
add
jmp
aaa
iret
pop
sahf
sub
mov
or
mov
testb
mov
aaa
lock
decl
fcompl
dec
mov
test
push
adc
mov
cmc
clc
sub
xchg
adc
and
push
dec
aam
imul
or
add
lahf
fwait
pop
movb
jp
xchg
jo
loop
and
call
std
loopne
mov
imul
xor
sbb
push
repz
adcb
mov
jo
and
orb
insl
cli
into
loopne
cld
jecxz
mov
add
add
jge
mov
or
or
pop
inc
xchg
or
sbb
mov
jl
repnz
addr16
das
rorl
inc
rclb
cmp
and
adc
mov
xor
adcl
push
push
mov
mov
fnstenv
test
adc
push
into
sbb
xchg
mov
mov
push
sti
les
sbb
inc
or
sbb
insb
xor
jg
es
dec
push
mov
sbb
mov
nop
pop
test
shll
shll
xchg
fidivs
divb
sub
adc
push
cmp
lods
xchg
inc
and
pushf
and
lds
lock
dec
cmp
cmp
mov
inc
push
imul
in
add
dec
mov
jnp
loope
inc
mov
add
push
xchg
or
mov
jecxz
sbb
xchg
loop
mov
xor
leave
dec
jp
arpl
inc
lea
addr16
out
mov
inc
imul
sbb
push
cmp
xchg
push
mov
fcompl
pusha
xchg
fs
mov
jb
sbb
test
push
jns
les
ret
or
inc
xor
pop
repz
aaa
aas
fsubs
push
ret
sahf
and
outsb
and
jmp
cmp
inc
ds
pop
cmp
mov
lds
sub
jns
clc
stc
sbb
push
and
test
xchg
add
int
xor
outsb
test
mov
dec
inc
or
leave
stos
add
sub
out
adc
mov
or
dec
ret
push
ret
push
stc
ret
pop
imul
xchg
xor
std
dec
subl
nop
push
ljmp
ret
adc
inc
sarl
sbb
mov
jle
in
push
push
call
shr
sbb
out
fdivs
rol
pop
adcl
outsl
inc
sub
cmp
adc
movsl
sub
mov
lods
dec
ret
iret
enter
jge
es
cwtl
dec
bts
int
jg
sarb
add
movsl
jp
add
pop
int
popf
cmp
cmp
dec
cs
sub
out
mov
sub
sarl
sub
jecxz
cmp
mov
mov
call
add
xchg
in
xchg
fwait
sti
rorl
mov
sbb
ret
jo
scas
add
add
ret
mov
sbb
addr16
mov
inc
inc
sub
popa
andl
xchg
test
push
dec
leave
movsb
sbb
inc
adc
leave
mov
mov
pop
daa
leave
mov
popa
movsb
mov
cmp
pop
testb
xchg
mov
pop
xchg
scas
addr16
ror
xor
and
roll
test
repnz
cmp
into
xchg
aaa
add
push
movsl
cmpsl
clc
xchg
pop
aam
adc
add
fnstenv
add
inc
fldenv
add
mov
inc
mov
aad
mov
adc
js
daa
xchg
pop
sbb
loop
scas
nop
adc
add
lock
mov
cmp
leave
jp
aaa
add
loopne
shrl
inc
sahf
xchg
dec
popf
into
and
out
lock
lods
push
ret
stc
and
ror
mov
ret
pop
xacquire
sbb
cmc
mov
xor
psrad
mov
sbb
mov
dec
ss
mov
aam
sbb
mov
test
pushf
xor
inc
icebp
add
inc
in
cltd
xor
or
sti
inc
scas
xchg
clc
call
lret
sbb
or
mov
insb
sahf
inc
ds
rcr
repz
mov
mov
or
sbb
in
mov
pusha
pushf
movsb
cmpsl
leave
cmp
pop
sub
or
lahf
out
xchg
jb
adc
outsb
mov
add
mov
fbld
lds
sub
and
out
adc
jns
lahf
lock
mov
dec
clc
ret
and
ret
xchg
sbb
ret
sub
loopne
xor
xchg
cld
jl
in
xchg
add
fnop
bswap
inc
pop
jbe
xchg
aad
xor
inc
leave
xchg
jnp
xorl
pop
fwait
sbb
loope
jle
loopne
cmp
imul
shlb
clc
test
mov
and
sahf
popl
lret
push
or
cwtl
in
add
mov
sub
rdtsc
faddl
adc
cmp
pop
inc
movsb
cltd
xchg
sbb
jl
add
out
xchg
movsb
sbbl
dec
repnz
adc
add
ds
leave
stc
repz
addb
push
and
push
aam
mov
xor
push
xorb
clc
js
insb
xor
mov
inc
dec
mov
into
cmp
test
mov
mov
or
movswl
std
lcall
fisubrl
xor
mov
push
mov
fstps
dec
add
adc
jno
dec
cmp
aaa
imul
push
push
outsb
int3
cli
clc
sbb
rolb
js
xchg
fists
in
and
data16
xor
nop
adc
into
push
mov
repnz
test
lret
and
mov
sahf
xchg
sbb
or
and
mov
xchg
out
cld
cli
lods
jnp
jge
xchg
aam
mov
adcl
xchg
lea
cld
pop
jb
push
aaa
fwait
or
add
jno
cmpsb
and
or
leave
xor
dec
cld
fmull
mov
adc
xchg
push
push
jl
arpl
lahf
roll
add
cs
cmpl
sub
int
push
test
mov
adc
mov
xchg
and
addl
dec
loope
test
sbb
xor
enter
fwait
dec
lods
nop
mov
xchg
mov
push
push
adc
sbb
xchg
cld
cmp
push
xchg
lret
icebp
xor
xchg
cwtl
xor
sub
lds
xchg
frstor
ljmp
pop
and
or
ljmp
mov
mov
in
dec
cmp
push
les
sub
xchg
and
call
adcl
mov
loopne
xorl
mov
jecxz
dec
popf
and
mov
ret
jns
sub
add
ret
sub
inc
popf
ljmp
mov
lock
je
mov
dec
bound
xlat
sbb
mov
mov
call
pop
sub
or
ret
and
pusha
inc
mov
inc
xchg
mov
lods
and
aam
xor
mov
dec
clc
push
pusha
xchg
sub
xlat
insb
in
insl
aad
inc
push
jo
popa
inc
sti
pop
sbb
lods
outsb
shll
insl
stc
js
and
xor
loope
dec
test
ret
add
fldenv
stos
inc
pop
cs
xor
sahf
xor
icebp
bound
test
cmp
cld
jb
jns
adc
out
push
mov
add
adc
mov
xchg
xor
mov
mov
sub
xchg
sti
adc
cwtl
mov
xor
pop
add
sub
in
iret
nop
inc
jbe
aad
fcmovnbe
shlb
and
jnp
rcll
clc
into
cwtl
in
mov
aam
add
loopne
xchg
jl
sahf
mov
cmp
add
push
xchg
sbb
pushl
or
mov
or
pop
xchg
mov
sbb
psllw
push
add
xchg
shll
imul
inc
or
and
dec
xchg
or
imul
out
xchg
into
pop
subb
xchg
mov
lret
cltd
and
mov
lret
sti
movsb
mov
inc
insb
cld
push
pop
jecxz
fsubl
insb
stc
xor
mov
mov
iret
out
repz
mov
jmp
inc
andb
arpl
hlt
xor
jb
shlb
lock
push
mov
loop
add
sub
push
sbb
cmp
or
mov
ljmp
pop
push
nop
fwait
ds
mov
iret
ds
jo
repz
js
dec
sub
in
cmpsl
cmp
ljmp
lcall
push
xor
sbb
fimuls
push
jge
mov
gs
notl
cwtl
jno
les
xor
lods
xchg
inc
push
mov
roll
aam
push
mov
test
jo
stos
mul
gs
sbb
jne
xor
cmp
xor
repz
gs
lea
loop
sbb
sbb
xchg
rcrb
ret
sbb
cmp
in
cmp
and
nop
outsb
xchg
orb
push
xchg
addb
inc
aas
mov
das
cmp
js
icebp
mov
or
cmp
scas
ljmp
add
lods
loopne
add
pop
dec
jo
cli
push
mov
rclb
cmp
xor
or
mov
sbb
fisttpl
movups
or
xor
mov
mov
sbb
mov
mov
icebp
nop
pop
add
mov
repz
push
outsl
inc
and
lret
xchg
call
sbb
cld
add
fs
popf
cmc
push
inc
and
test
scas
mov
out
je
ss
jb
push
in
adc
push
push
pop
repnz
jg
push
jmp
xchg
fwait
hlt
outsl
int3
gs
test
push
lret
xchg
aad
es
mov
movsb
and
pusha
xchg
sbb
andl
scas
aas
lock
lock
movsl
inc
jge
pushf
ficomps
jmp
loop
sub
test
ror
icebp
mov
in
movsb
mov
sti
ret
push
push
sub
inc
mov
cmp
sbb
stc
jl
mov
inc
push
mov
insl
imul
pop
cmp
mov
adc
cld
sbb
jae
outsl
jno
xor
out
lods
push
jl
sbb
pop
test
mov
fcmovne
sbb
xor
and
shlb
lahf
fists
adc
or
sbb
jno
sub
jo
loop
out
xor
mov
sahf
hlt
lcall
into
jl
insl
add
js
xchg
push
rclb
mov
dec
or
lock
loop
adc
mov
dec
mov
adc
nop
test
lret
add
lahf
sbb
inc
pop
pusha
and
fcoms
inc
push
mov
rclb
jp
adc
in
jecxz
test
idivb
and
lods
shll
sbb
mov
jnp
mov
adc
jb
and
lahf
adc
dec
ss
arpl
or
and
xor
dec
push
xchg
xor
stc
ljmp
push
inc
pusha
push
add
jbe
pop
je
inc
loopne
or
loope
daa
iret
repz
jl
sub
add
push
push
xor
push
cmp
test
xchg
es
inc
and
insb
ds
test
xchg
push
xchg
push
inc
lcall
jle
add
int
add
dec
rcr
and
out
jae
mov
push
sub
adc
rcrb
push
stc
push
in
testl
loopne
pop
loope
mov
cmp
xchg
xchg
mov
ret
jbe
or
cmpsl
xchg
xchg
inc
inc
iret
and
icebp
je
je
cs
popa
or
xchg
ljmp
jl
lret
ljmp
popf
jno
mov
jmp
cmp
adc
sbb
dec
shll
push
lahf
pop
cmovno
dec
daa
push
fmul
rcrb
ds
lahf
push
push
mov
bts
adc
cmc
jle
ror
mov
cmp
push
cmp
hlt
mov
jmp
lret
ja
mov
and
inc
clc
or
pop
or
mov
sbb
aaa
pusha
fsubs
sbb
fs
enter
cmp
pop
push
add
test
mov
add
mov
aaa
imul
dec
rcrl
std
pop
jae
lods
xchg
js
pop
addr16
popa
add
mov
inc
push
dec
cs
lahf
sub
jge
jge
or
je
arpl
mov
mov
cmp
sbb
mov
inc
dec
rcrl
xor
and
sub
xchg
sub
push
sub
add
xchg
ffreep
or
cmp
inc
push
pop
pop
ret
fdivs
push
fwait
xchg
add
xor
mov
sbb
cwtl
xor
cmp
insb
stos
and
cmp
mov
mov
rcl
call
adc
dec
dec
sub
jecxz
flds
sub
iret
dec
fwait
sbb
xchg
cmc
sub
adc
roll
cmp
int
pop
or
dec
pop
lock
dec
les
dec
divl
mov
sub
andl
xchg
fcmovne
pop
pop
enter
inc
lds
dec
fnstcw
fadds
and
jne
lcall
jnp
mov
jb
ds
lret
fcoms
pusha
mov
pop
fs
sarb
scas
jmp
sub
push
jg
cmpb
dec
cli
ss
push
or
jns
movl
mov
arpl
mov
mov
mov
pop
clc
pop
inc
ljmp
div
adc
nop
iret
cmp
adc
xchg
mov
imul
test
test
out
pusha
inc
jo
jno
je
ljmp
outsl
cmp
push
cltd
andb
dec
stos
mov
cli
sbb
dec
mov
dec
sbb
leave
sbb
mov
inc
lret
cmp
popf
test
and
shl
sahf
and
or
adc
adc
daa
stc
jno
into
dec
xchg
mov
faddl
pop
pop
dec
mov
std
pop
leave
jmp
insl
ljmp
insb
dec
dec
fldl
pop
ret
arpl
repnz
popa
adc
lcall
cmc
jns
in
loop
mov
adc
std
xor
push
jnp
iret
add
jl
xchg
inc
mov
es
insb
test
addr16
sbb
in
enter
push
leave
cwtl
sub
lds
pop
and
adc
sub
in
out
push
cwtl
out
je
add
inc
lcall
jbe
cmc
sahf
mov
cmp
rclb
jmp
pop
adc
fistps
push
sub
stos
push
sbb
xchg
add
movsb
mov
es
fwait
xor
pop
jo
icebp
xchg
xchg
aaa
icebp
adc
jne
cs
out
cmp
push
pop
in
push
addr16
mov
and
sahf
arpl
dec
and
mov
sub
adcl
es
cwtl
lock
aad
popf
das
cld
je
cmp
xchg
inc
cmpl
xchg
xchg
mov
aaa
xor
test
rorb
add
inc
lock
enter
push
subb
pop
push
and
or
xor
xchg
adc
addl
sbb
shl
aas
mov
shll
adcl
push
adc
pusha
cmp
mov
cmp
je
push
and
mov
fldenv
fs
mov
sbb
pop
roll
outsl
loopne
insb
jl
test
xchg
or
jbe
divb
in
leave
push
shrl
lds
inc
movl
nop
push
ss
pusha
repnz
jae
call
dec
and
ljmp
xchg
push
jp
add
mov
jecxz
fsubrp
inc
push
aaa
sbb
mov
loopne
mov
fistpl
jns
leave
sbb
sarl
icebp
test
jnp
scas
sbb
mov
sahf
jecxz
mov
push
jp
bswap
sbb
push
shr
movl
xor
lea
xchg
jne
shlb
mov
es
test
mov
inc
int3
mov
cmp
sarb
xchg
inc
cwtl
dec
push
xor
lods
inc
xor
push
xor
loop
mov
sbb
inc
push
lds
mov
ja
and
das
aad
lcall
and
jo
mov
mov
out
addr16
sub
adc
inc
jmp
in
sub
jo
and
xchg
mov
fldt
adc
dec
lds
dec
ret
add
xchg
push
clc
cmp
xchg
aad
or
mov
or
pop
lret
arpl
jmp
xchg
rorl
lods
lcall
stos
imul
or
adc
push
pop
stos
leave
dec
jnp
stos
shrb
xchg
inc
es
aad
rclb
enter
adc
lods
stc
aam
scas
xchg
aaa
lods
repz
push
dec
or
jae
pusha
jnp
iret
pop
das
adcl
jp
imul
idivb
fisubrl
mov
mov
dec
cmpsl
fnstcw
pop
rcrl
enter
inc
xchg
sbb
mov
cmp
shll
mov
push
sbb
xorb
sbb
jp
int
sub
rclb
pop
notl
es
add
and
rorb
push
xchg
repz
test
jb
push
inc
jbe
test
xor
and
and
loop
adc
ret
icebp
bound
push
fisubs
sbb
test
xchg
imul
out
lds
icebp
enter
lock
sarb
loopne
mov
pop
out
jmp
nop
and
push
add
mov
int
push
icebp
stc
scas
sub
jp
outsl
ja
and
dec
cmpsl
mov
mov
jns
jle
inc
add
icebp
push
xchg
out
leave
jbe
arpl
out
dec
jne
lds
psllw
aam
jl
lock
test
add
push
and
push
cmp
repz
jmp
xchg
lcall
jmp
mov
enter
jecxz
insb
decl
adc
sbb
xchg
popf
add
push
sbb
stos
sub
mov
jp
jb
nop
mov
cli
add
add
or
jp
and
scas
push
mov
ljmp
jg
jge,pt
rolb
mov
mov
sbb
test
or
stos
nop
pop
lock
pop
mov
mov
add
test
cs
or
sub
mov
cmpl
rolb
cld
and
ret
cli
push
inc
jae
add
daa
dec
add
nop
imul
or
ret
movsb
aad
dec
mov
popa
mov
sarb
mov
sbb
pusha
and
sbb
jecxz
sbb
push
jg
pop
jne
or
cmpb
mov
xchg
or
push
inc
add
xor
mov
ja
imul
sbb
leave
xchg
push
aaa
sbb
cmp
xor
adcl
lods
mov
int
cltd
stc
enter
xchg
aaa
daa
xchg
aaa
xor
or
in
popf
call
ljmp
leave
pop
lock
inc
daa
mov
xor
pop
hlt
sti
sub
dec
jne
cld
jmp
cmpsb
sbb
mov
inc
mov
iret
push
inc
xchg
xchg
jne
stc
cli
outsl
pushf
and
pop
mov
add
jl
fs
in
cmp
mov
loope
dec
in
imul
inc
cmp
or
jp
xchg
jmp
sbb
out
cld
fnsave
dec
sbb
ss
dec
repz
push
into
push
and
leave
jecxz
or
fcompl
leave
fs
aam
sbb
mov
sbb
add
pop
push
lahf
xor
jge
loopne
mov
mov
loope
xchg
call
insb
out
insb
cmp
leave
fs
xchg
sub
adc
dec
ss
pop
mov
es
movsb
inc
mov
cwtl
mov
clc
xchg
mov
sahf
jnp
sub
adc
xor
xchg
jmp
popa
xchg
sbb
popa
mov
adc
shr
cmp
jno
cmpsb
add
xor
or
pop
mov
xchg
add
or
mov
hlt
dec
bnd
push
push
enter
xor
shll
sbb
sbbb
arpl
lea
xor
xchg
or
mov
add
in
add
jnp
push
add
lods
dec
rclb
dec
mov
adc
mov
sbb
or
pop
mov
cltd
test
add
fisubs
pop
int
ljmpw
inc
test
xchg
xor
aad
add
and
test
out
sbb
inc
sbb
pop
addr16
movsb
add
xor
mov
xchg
cli
scas
push
and
and
dec
push
lods
mov
sarl
adc
mov
lahf
xchg
inc
mov
mov
xchg
adc
dec
pop
icebp
xchg
add
cli
sub
enter
js
lds
lods
jns
rorl
mov
jno
pop
cmp
sti
xor
fwait
movsb
adc
xor
dec
sbb
mov
adc
sbb
rcr
mov
jge
lcall
mov
in
pushf
rolb
ret
andl
mov
sbb
mov
lahf
dec
sbb
shrb
and
bound
push
xchg
stc
sub
scas
cwtl
lock
test
dec
fstenv
iret
dec
sub
fwait
cld
sub
dec
shll
rolb
mul
int
enter
pop
in
and
dec
sahf
add
dec
popf
sbb
lock
invd
mov
pop
mov
cmpsb
sub
pop
pop
ds
sbb
aad
fucomp
add
adc
ret
rorb
cmp
and
out
add
sub
add
imul
arpl
pop
xorl
dec
call
pop
xchg
outsb
lret
pop
xchg
cmc
pusha
filds
inc
cli
cmp
popf
aas
les
bound
or
and
mov
sbb
cmc
or
push
pop
pop
notb
push
dec
ret
xor
sahf
push
dec
inc
stos
scas
rclb
dec
cli
mov
push
je
add
dec
jbe
sub
inc
leave
push
xchg
xor
stos
pop
adc
in
nop
aam
pop
sub
int
adc
or
xchg
jns
push
daa
daa
push
mov
mov
push
dec
pop
and
xor
fs
je
sub
jecxz
and
pop
jnp
in
adc
andl
jl
push
cmp
pop
mov
mov
in
xchg
cmp
mov
repz
xchg
int3
inc
test
xor
add
rcl
in
xchg
dec
add
pusha
in
or
and
push
or
daa
add
rolb
push
pushf
mov
popa
jg
dec
jmp
add
mov
mov
movsl
into
lods
xlat
sbb
sub
in
mov
cmp
or
aam
pushf
pop
or
dec
shll
sub
imul
sub
lea
stos
jp
sbb
inc
push
in
or
add
addl
je
xchg
add
imul
sbb
stc
nop
pushf
scas
shll
enter
sbb
cli
dec
clc
mov
mov
adc
daa
add
adcb
cmpsb
sahf
mov
cltd
and
loope
xchg
fdivs
scas
pop
in
pushf
repnz
cli
cmp
test
adc
pop
push
jo
test
mov
sbb
pusha
push
mov
xor
sub
je
xor
pop
out
cld
stos
ret
syscall
stos
inc
pop
fcoms
sahf
dec
xor
pop
pushf
cs
inc
ja
sbb
mov
cmpsl
xchg
inc
xchg
xchg
rol
xor
imul
sub
or
push
lcall
xor
add
jmp
cmp
add
nop
fsubrl
pavgw
jae
push
shll
lods
or
mov
lds
outsb
pop
stos
and
push
add
push
ret
inc
psrlw
imul
sbb
fcom
add
mov
test
jne
cmp
and
data16
cltd
mov
and
add
pop
shrb
xor
out
jbe
or
inc
jno
push
mov
adc
fs
xor
cmpl
xchg
add
andl
pop
and
mov
mov
int
adc
and
push
pop
pop
pop
push
test
out
out
push
push
add
lods
mov
jns
mov
fmull
sahf
orb
mov
mov
stos
sbb
xchg
sub
xchg
pop
mov
add
push
jl
mov
into
fcoml
sub
dec
push
aam
leave
or
lods
xchg
rolb
adc
xor
mov
movsb
adcl
fs
add
and
sbb
rcll
xor
ret
frstor
jb
xchg
and
andl
cmp
dec
cmp
mov
int3
loop
sahf
in
or
sub
mov
int3
mov
push
es
js
repnz
xor
push
mov
xor
dec
jno
mov
adc
orl
pop
lds
ja
or
jne
push
dec
cli
push
es
and
or
pop
sub
jmp
mov
rep
or
jle
mov
icebp
ds
xor
jp
xchg
je
sbb
mov
movsb
subl
pop
movsb
stc
xchg
sub
in
sbb
mov
and
fwait
lods
add
cltd
xchg
je
xor
jne
add
push
fsubs
cmp
je
fs
sbb
fs
mov
les
imul
mov
adc
pop
pop
test
mov
rcll
dec
add
mov
imul
mov
and
xchg
cmp
pop
rorb
mov
sbb
xchg
or
icebp
and
xor
lret
adc
nop
bound
loope
push
push
xor
cs
lahf
es
mov
test
dec
dec
jne
xchg
sbb
lds
or
jle
bound
stc
fisttps
sub
nop
fdivrp
pop
bnd
pop
mov
push
popa
aad
repnz
xchg
cmp
cld
andl
inc
lcall
or
cmp
hlt
pop
inc
sub
into
and
test
sub
popa
and
lock
dec
jbe
pop
xor
xor
inc
aam
sbb
jo
sar
lds
sbb
adc
sbbl
pop
jb
xor
fisubrl
mov
sbb
fdivr
imul
jo
mov
dec
stc
mov
push
inc
or
mov
push
jne
add
mov
lock
push
sete
addl
lods
xor
insb
insl
int3
shlb
lcall
sbb
xor
outsl
xor
cmp
dec
push
push
outsl
push
add
xor
adc
push
add
jp
jnp
js
popa
fwait
cmpsb
mov
mov
xor
test
gs
fidivrs
pop
sbb
orb
add
adc
push
mov
icebp
xchg
lret
into
xor
loopne
or
xchg
imul
inc
ficompl
sbb
test
jbe
mov
inc
sbb
ror
push
das
inc
sbbl
mov
xor
pop
push
xchg
adc
sbb
inc
xchg
pop
and
rcrb
inc
and
jle
mov
leave
or
add
jp
sub
dec
lcall
addl
mov
sub
sti
int
jo
je
jg
sbb
fs
xchg
add
xor
repnz
shll
loop
inc
call
shlb
repz
pop
pop
jmp
inc
xlat
add
dec
cmp
vpsrlq
inc
ss
pop
or
inc
and
xchg
lcall
sub
push
cmpsl
or
and
cmp
test
sbb
sbb
imulb
xor
pop
or
shrb
popa
ud1
and
insl
push
mov
mov
sbbb
pop
pop
jne
fs
adc
sbb
lcall
aas
leave
pusha
add
add
ljmp
pusha
stos
negb
sub
push
sub
popf
adc
adc
leave
movsl
cmpsl
fistpll
push
out
addb
and
push
leave
xchg
mov
jns
or
add
push
add
repz
push
adc
mov
shrb
lcall
push
jae
notb
pop
add
shrl
lods
sbb
test
add
push
pop
inc
and
jbe
nop
lods
add
inc
adc
push
add
xchg
loopne
and
xchg
sbb
cld
jbe
dec
pop
fistpl
add
and
xchg
fldcw
xchg
xchg
out
or
inc
cmp
jp
cli
test
mov
jle
add
adc
and
inc
push
les
dec
mov
dec
loopne
mov
xchg
aad
pop
inc
xor
nop
xchg
lret
pop
pop
jae
and
frstor
dec
roll
data16
cmpsb
ja
add
lcall
imul
inc
or
dec
sub
add
addr16
pushf
test
xor
mulb
out
cs
lea
xchg
ss
pusha
pop
bound
fninit
arpl
mov
pop
imul
stc
sbb
push
mov
in
xchg
imul
inc
mov
push
xor
jns
jne
or
and
mov
jnp
pusha
push
add
fwait
test
imul
jo
jo
adcl
and
push
mov
xchg
pop
adc
sub
jbe
nop
dec
enter
add
rol
daa
flds
dec
mov
cmpsb
pshufw
xchg
stc
fcoml
add
inc
bound
stos
mov
pop
dec
sub
mov
jmp
and
arpl
and
leave
rcl
dec
cmp
mov
push
push
sub
in
rolb
adcb
lahf
je
hlt
push
xchg
add
and
in
adc
shl
pushf
cwtl
movsb
dec
mov
push
popa
and
add
and
or
and
sbb
xchg
test
inc
xchg
dec
fsts
xchg
scas
push
cmp
add
sub
jg
rorb
in
mov
jb
addr16
pop
jp
sbb
xor
mov
les
push
ror
push
xchg
dec
adc
xchg
sbb
cmp
mov
lods
push
cmp
jge
adc
movsb
stc
add
mov
andb
push
outsb
push
push
inc
mov
and
or
ds
int3
xor
adc
in
adc
aad
stos
and
xchg
adc
jae
inc
mov
sub
orl
lods
inc
leave
hlt
xor
ret
pop
xchg
push
arpl
inc
fbstp
fwait
add
icebp
fisubrs
hlt
and
test
shll
dec
gs
shll
ljmp
loope
fs
pop
xchg
out
movsb
lahf
sbb
sub
lds
add
outsb
enter
into
push
ret
int
sbb
xor
add
inc
xchg
dec
push
fwait
jne
je
movsb
js
rcrb
insb
or
sbb
iret
lahf
xor
jle
sub
andl
bound
decb
pop
aam
rol
and
or
in
xchg
push
or
xor
push
pop
push
sbb
sub
fs
or
xchg
xchg
sbb
inc
mov
dec
call
rol
pop
popf
out
loop
sub
sbb
cltd
movsb
inc
jge
jne
into
lods
in
hlt
ss
and
dec
pop
push
pop
cmp
and
dec
or
cmp
and
pop
xchg
pop
int3
sbb
lret
sbb
sub
cmpsl
lock
and
sbb
gs
or
mov
jne
dec
push
pop
push
jno
dec
jns
mov
mov
mov
ret
sub
lock
mov
push
mov
sbb
dec
pop
adc
add
and
xor
add
xchg
iret
or
xchg
mulb
les
jnp
adc
lretw
xor
xor
loopne
std
clc
ret
jne
adc
repnz
aad
and
pop
cli
push
popf
jnp
sbb
jnp
out
jge
lock
xchg
sbb
or
popf
add
adc
popf
jo
or
and
and
pop
inc
pop
in
adc
pop
inc
add
lds
pop
push
jns
push
arpl
lcall
mov
enter
mov
rorb
add
mov
fdivp
dec
adc
sbb
mov
jae
add
xorl
and
loope
or
or
add
add
mov
pop
lret
push
add
nop
pop
jo
sbb
mov
es
jecxz
xor
add
scas
add
or
sbb
push
lods
xor
sub
dec
mull
add
jb
or
jecxz
adc
in
add
push
or
outsl
lock
cltd
imul
cmpsb
jge
and
je
adc
icebp
test
jb
push
push
jbe
mov
push
pop
jb
push
shlb
or
sub
iret
or
jno
enter
push
jmp
xor
and
out
adc
les
pop
dec
or
lock
cmp
loop
in
push
push
adc
daa
mov
cwtl
out
jbe
mov
aaa
ss
inc
sub
push
fmul
adc
fimuls
jecxz
mov
dec
add
cli
enter
fsubl
push
cmp
cwtl
push
sahf
push
and
mov
push
inc
sbb
cmp
inc
shlb
push
pusha
pop
jp
add
or
subl
lret
insl
add
jle
enter
aas
mov
or
cli
pop
pop
pop
mov
ds
mov
scas
adc
in
mov
sub
mov
pop
ljmp
xchg
imul
mov
lods
mov
mov
dec
mov
outsl
out
or
rcrl
icebp
mov
scas
inc
mov
sub
push
jnp
mov
subb
ljmp
xor
pop
insb
fdivrs
mov
aam
jle
jecxz
enter
clc
out
hlt
je
test
dec
xchg
repz
jle
inc
inc
pop
cmp
and
jmp
cmp
adc
push
outsl
loope
jns
push
ja
int
jns
ret
adc
mov
dec
filds
push
mov
inc
popf
dec
inc
les
sub
cmp
into
push
push
aas
mov
int
mov
jb
lahf
mov
rorl
lret
inc
mov
in
ja
sub
shl
cli
sbb
jp
cmp
or
mov
cmp
jb
xlat
xchg
lds
xchg
ret
and
jb
mov
mov
mov
leave
std
jne
xor
stos
scas
in
dec
push
jbe
or
sbb
adc
xchg
popa
push
inc
cmpsl
hlt
xchg
jne
and
and
sub
mov
adc
xor
sub
jge
js
in
pusha
fldl
xor
dec
xor
loope
jg
mov
sbb
mov
scas
push
xchg
xchg
data16
push
push
iret
adc
dec
ret
inc
push
cmp
push
cmpsl
adc
lret
pop
std
mov
jle
in
adc
ret
mov
pop
enter
arpl
pop
sbbb
jne
out
js
adc
ljmp
pop
inc
aas
hlt
stc
sub
adc
cmp
sbb
sbb
push
pop
jecxz
or
jmp
lock
pop
ja
mov
push
push
popf
insl
sbb
pop
outsb
call
ficoms
dec
movl
stos
xchg
mov
mov
sub
sbbb
imul
scas
sub
lea
mov
arpl
push
popa
cli
cmc
loop
push
push
ss
cs
clc
rcrb
and
xor
loopne
cmp
mov
imul
push
stos
inc
inc
xchg
mov
outsl
push
and
cli
push
outsl
jnp
push
dec
ds
aam
jne
outsl
mov
outsl
inc
or
add
test
sub
pushf
and
add
jbe
mov
jmp
rcll
sbb
adc
push
insb
xchg
daa
outsb
fwait
mov
cs
cwtl
push
xor
sub
sbb
jle
pop
cli
call
sarl
mov
leave
cmp
aas
pusha
mov
sub
inc
or
inc
stos
push
and
push
addr16
daa
lods
in
ret
xor
mov
sbb
jmp
push
jp
and
divb
mov
sarb
clc
or
xor
pop
dec
mov
mov
inc
call
mov
aaa
or
pop
aaa
aaa
shlb
dec
mov
aam
push
dec
dec
aam
push
push
cmpsb
xchg
fimuls
xchg
and
loope
mov
ret
mov
popf
std
fldl
scas
sbb
loop
mov
bound
mov
sti
fstpt
pop
xor
hlt
jae
xor
nop
mov
push
sbb
mov
inc
xor
loopne
in
call
add
fcmovnbe
jbe
lock
insl
xor
icebp
sbb
notb
inc
js
mov
xor
push
jecxz
jbe
adc
test
or
or
xchg
jecxz
push
scas
mov
pop
cmp
and
ret
imull
int3
stc
jecxz
add
jns
jns
sbb
inc
inc
jmp
inc
andb
loop
pop
push
xchg
mov
mov
inc
mov
xor
loop
mov
mov
dec
js
incb
lock
cmp
push
add
scas
push
test
rcll
mov
repz
dec
jmp
adc
sbb
clc
stos
js
inc
std
outsl
adc
xchg
add
inc
test
and
fsubs
xor
cmp
addl
repz
rclb
pop
ljmp
or
sub
in
mov
rcll
cmpsb
pop
jae
int3
fcmove
lret
leave
xor
pop
cmc
lock
call
popf
cmp
or
and
in
bound
jns
daa
roll
mov
mov
push
insl
or
into
pushf
cmp
mov
or
adcl
ret
jp
xor
loop
cmp
insl
pandn
mov
jecxz
push
shrb
sbb
inc
dec
std
clc
std
pop
jg
inc
mov
cmp
nop
pop
mul
push
xchg
addr16
and
mov
jne
aaa
mov
push
fidivl
push
inc
cltd
xor
adc
pop
daa
mov
push
lock
daa
cs
pop
out
adc
aas
clc
jp
call
inc
push
inc
pop
or
iret
sbbl
push
cmp
jmp
pop
add
add
icebp
xchg
jnp
mov
aas
arpl
shlb
out
pop
lock
cmp
xor
add
lods
pop
cli
subb
scas
add
rorb
add
out
xchg
aam
sub
pop
arpl
jl
aas
es
data16
cmp
clc
xchg
fwait
xchg
test
xchg
push
icebp
adcl
add
sahf
jg
add
imul
aad
insl
ljmp
mov
xlat
addr16
mov
shl
xor
test
fcmovnu
and
scas
adcl
pop
sbb
cmpsl
sub
fdivr
pushf
les
mov
add
out
inc
xor
cmp
into
inc
cmp
sti
or
loope
filds
adc
cmpsb
in
push
pushf
sub
loopne
mov
fidivs
push
mov
clc
cmc
inc
adc
jl
out
jbe
pusha
nop
push
mov
push
outsl
cmpsl
xor
mov
add
push
mov
addb
lods
daa
ret
jnp
scas
popf
leave
push
call
inc
mov
xchg
fneni(8087
ret
les
and
inc
data16
lods
aam
mov
test
xor
lock
js
pusha
mov
shlb
out
mov
lea
sahf
sub
sbb
mov
mov
mov
push
jecxz
in
sub
cmp
ljmp
out
mov
jmp
mov
jle
imul
add
aad
inc
lods
cmp
xor
not
cmp
aad
sbb
les
int3
pop
enter
fidivrl
ret
mov
sub
push
loope
testl
cmp
sbb
out
paddd
add
icebp
dec
inc
jno
inc
xor
cmpl
push
xchg
lret
dec
rorb
mov
repnz
fisttps
outsl
pop
pop
lahf
lods
sbb
ds
imul
stos
data16
mov
sub
stos
sar
or
push
mov
outsb
xchg
lds
test
rcl
paddb
inc
push
sbb
lahf
out
mov
lods
and
pop
xor
push
xchg
cmp
mov
dec
add
cmp
cld
push
dec
xchg
sub
pop
les
mov
clc
xor
jb
pop
leave
stos
cmpsl
mov
lret
lcall
pop
rolb
inc
rorb
ja
dec
mov
movsb
mov
pop
es
stos
outsb
loopne
mov
pushf
inc
sub
cmc
enter
mov
dec
mov
jmp
sub
nop
and
cwtl
into
outsb
mov
push
jae
xor
dec
mov
mov
add
ret
pop
addr16
pop
and
or
or
out
fimuls
ds
sbb
aaa
es
jl
or
push
and
fucomp
es
bound
inc
inc
lock
loope
and
pop
adc
xlat
das
mov
call
xor
bound
test
gs
lock
daa
sbb
or
sub
dec
jb
lret
mov
mov
sub
sbb
xor
fs
mov
adc
pop
xchg
repz
dec
mov
in
loop
xor
loopne
mov
pop
mov
insb
pushl
imull
addr16
inc
adc
jg
mov
cli
or
lahf
push
push
fnstsw
shrl
dec
dec
fdiv
jl
xor
lret
std
int3
jne
pop
ja
rorl
ss
loopne
or
lret
push
fwait
orb
cmp
cmp
push
cld
fidivrl
icebp
add
lcall
nopl
cmp
fldl
in
mov
arpl
mov
jmp
out
leave
inc
cmpsl
jbe
pop
and
repz
daa
cmp
inc
ret
xchg
cmpsb
dec
in
lret
outsb
inc
test
icebp
inc
jo
pop
mov
dec
inc
in
cltd
test
lcall
es
jno
jmp
mov
push
push
pop
insl
cmpsl
sub
cltd
mov
ret
pusha
pop
cmp
and
mov
push
sbb
divl
mov
or
stos
std
push
cltd
cmp
test
pop
movsb
cld
cmp
clc
jne
or
adc
ja
sbb
or
icebp
mov
cli
push
fisttps
fadd
cmp
ja
xchg
xchg
in
add
ja
idivb
insl
jge
push
sub
ljmp
imul
shlb
adc
mov
mov
aas
cld
inc
pop
xor
mov
mov
mov
ret
xchg
iret
pop
or
orl
push
mov
test
mov
add
out
call
mov
imul
test
add
cmpsb
hlt
cltd
mov
push
pop
cld
jg
sbb
sbb
bound
jb
pop
setle
pop
or
sahf
pop
dec
add
pusha
mov
cs
jge
push
xchg
inc
add
xchg
inc
testl
pushf
out
cld
es
cmp
jl
sbb
cmpsl
jnp
mov
aam
int
idiv
das
stos
mov
push
mov
dec
insb
push
and
adc
push
cmp
add
lret
mov
jnp
arpl
scas
adc
js
pop
add
insb
push
dec
pop
sub
inc
adc
jle
xlat
sbb
subl
push
sbb
push
andl
mov
push
mov
je
push
mov
fstps
push
mov
aam
mov
je
loopne
fildl
mov
out
mov
shrb
orl
ss
sub
cmpl
stos
cmpsl
out
out
mov
js
dec
inc
xor
fidivl
call
mov
daa
addr16
push
push
enter
aad
cmp
stc
orb
gs
jp
lret
push
and
adc
add
fdivrl
adc
sahf
nop
lcall
enter
xchg
test
ficoms
mov
sbb
ds
dec
or
adc
in
cld
mov
mov
xorb
sbb
outsl
ja
dec
aas
or
and
push
scas
cmp
cli
push
xor
leave
and
and
mov
fsts
loope
push
push
push
out
clc
mov
sbb
add
inc
jecxz
std
sub
xchg
jno
pop
insl
js
data16
and
dec
mov
cld
and
lds
enter
inc
aaa
mov
sti
push
roll
cld
filds
adc
lods
push
or
sbb
outsl
clc
gs
sbb
data16
xchg
ja
push
cmpsl
pusha
xchg
sub
mov
mov
pop
je
xchg
rorl
cwtl
sbb
cmp
insl
test
jecxz
cmc
aad
push
xchg
jns
in
stos
outsl
shlb
or
dec
jnp
add
adc
push
test
dec
aaa
loop
pop
xchg
dec
xchg
sbb
push
lret
cmp
push
fiadds
sbb
cld
ss
mov
jge
dec
pop
out
sbb
sti
movsl
and
jle
loopne
push
sahf
popa
jg
hlt
sub
mov
je
daa
dec
subl
or
fwait
clc
add
sbbl
sti
cmc
insb
lea
lds
enter
icebp
and
test
insl
fdivl
sub
push
push
or
push
ss
fsubr
loopne
push
fisubrl
jle
outsl
ret
jb
bsf
sti
je
imul
je
pop
xchg
negb
imul
mov
imul
sbb
lret
movsl
test
add
cmp
cmp
lods
push
or
data16
inc
bnd
add
pop
or
cmp
mov
add
out
adc
outsb
inc
mov
cmp
push
and
shlb
cli
cmp
rcrl
ljmp
push
lret
sti
add
outsl
repnz
dec
enter
push
jo
mov
add
sarl
push
outsb
mov
xchg
aam
xchg
test
jp
arpl
imul
pop
xchg
test
cwtl
jb
sahf
or
repz
xor
pop
bound
mov
mov
and
push
sti
subps
add
mov
push
mov
cmp
cli
in
dec
mov
mov
les
ficoms
adc
popa
sub
adc
cli
call
iret
fucomp
fsubr
push
mov
push
push
pop
insb
pop
rorl
cmpsb
ja
cmp
add
cmp
xor
sahf
push
xchg
push
mov
mov
jge
ss
xchg
mov
push
push
mov
fcoms
and
jo
in
jmp
or
xchg
je
insl
sbb
das
dec
mov
aad
lcall
push
dec
arpl
mov
pop
iret
stos
pusha
sub
sub
inc
aad
jbe
or
push
stos
adc
in
test
lcall
mov
cld
jb
mov
aaa
lahf
clc
ljmp
sbb
fmull
jae
aas
ss
xlat
stos
or
test
sbb
pop
fwait
or
xlat
ss
push
push
sbb
mov
mov
das
cld
or
cld
jb
xchg
mov
pop
lods
pusha
inc
push
movsb
movsl
mov
xchg
xor
mov
shlb
rcrl
xor
mov
addr16
cwtl
dec
jl
and
jns
jbe
dec
inc
adc
adc
add
jle
push
cmpsb
jno
arpl
cmp
and
aaa
or
hlt
add
int3
addl
loope
adc
add
xchg
mov
add
cs
jo
mov
xor
push
mov
scas
out
out
fdivs
add
sbb
fwait
sbb
in
and
out
lret
mov
fdivp
mov
loope
call
mov
xchg
push
rolb
jle
mov
xor
stc
negl
jg
aaa
sbb
cmp
out
cli
mov
mov
xchg
xchg
jno
add
bound
inc
in
push
jbe
cli
adc
mov
push
mov
push
inc
or
fmull
rolb
pop
xchg
out
cli
rcrl
imul
ss
mov
or
and
lea
negb
aaa
std
mov
or
jne
arpl
push
hlt
pushf
pop
cmp
push
jg
out
add
in
xor
and
orb
xchg
push
push
jle
lds
jmp
ret
fisttps
or
inc
fldz
nop
shrb
fildl
or
xor
cwtl
sbb
out
filds
mov
jl
cmpsb
push
cli
fbld
cs
jmp
push
sbb
pop
mov
mov
lods
xchg
cmpsl
pusha
pop
movsb
sub
out
dec
fiadds
lods
or
mov
js
mov
mov
mov
in
pop
in
mov
mul
out
and
xchg
clc
loope
outsl
loop
daa
inc
xchg
shll
arpl
insl
and
cmc
xchg
or
rcrb
ds
jle
mov
je
mov
or
xchg
bound
les
imul
push
int3
adc
pop
pop
dec
xor
mov
leave
mov
push
xchg
cmpsb
push
xor
pop
lods
inc
push
inc
mov
loopne
sti
or
cmpsl
int3
repz
cmpsb
sbb
clc
outsl
data16
sahf
sbb
dec
sbb
test
adc
xchg
int
fwait
repz
mov
cmp
sarl
jb
lcall
lods
jmp
popf
xor
inc
or
push
xchg
inc
rol
mov
pop
pushf
ja
lock
sub
or
mov
sti
popa
pop
inc
testl
daa
js
inc
cmp
mov
outsl
outsb
subb
roll
test
test
sbb
aad
out
mov
mov
adc
xchg
jae
cltd
out
enter
bswap
sub
xchg
dec
in
and
mov
xlat
fidivs
arpl
loopne
jbe
cmc
jp
outsb
mov
ss
lcall
imul
push
add
fs
push
adc
je
push
les
les
sbb
jno
and
ds
mov
insl
cmp
jns
lock
fstpl
sub
cmp
hlt
aas
add
add
imul
or
hlt
mov
stos
pop
mov
mov
sbb
aam
test
push
push
pop
mov
push
stos
jge
push
sub
adc
out
jecxz
test
insb
pop
and
and
out
dec
fwait
add
outsb
in
xorl
mov
and
repnz
in
pop
popa
push
lock
dec
adc
popa
addl
loopne
pop
std
nop
lahf
jg
dec
sbb
ss
rolb
ljmp
push
insl
scas
jecxz
inc
jns
mov
frstor
filds
jg
fmul
cmc
bound
push
clc
jno
push
adc
lods
clc
pop
xchg
bound
fisubrl
cmp
cmc
and
add
outsl
test
popl
mov
leave
sahf
int3
jb
cmpb
add
inc
sarb
ja
pop
test
sub
mov
sbb
xor
dec
add
mov
push
data16
mov
addr16
jmp
jo
fwait
xor
adc
mov
adc
mov
cmp
aam
sbb
movsb
in
nop
clc
inc
dec
mov
add
popf
sbb
push
pop
jle
les
lock
shr
dec
xchg
sbb
pop
and
jge
xchg
lahf
call
les
or
sti
shll
mov
cmp
fidivl
ljmp
push
imul
jno
xor
pop
and
popa
cmovae
jmp
cld
movsl
push
and
pop
cmpsl
pop
mov
add
xor
aaa
push
inc
xchg
loopne
out
mov
mov
test
sbb
jb
cmp
inc
adc
mov
pop
jo
rorl
test
sti
fisttpll
jbe
aam
mov
xor
pop
in
lcall
ret
cmp
mov
xor
xchg
sbb
fidivl
or
ds
fisubl
mov
imul
orl
jae
mov
cld
xchg
push
adc
lods
mov
mov
sbb
pop
mov
into
fs
fcomps
ja
or
pop
sbb
ficomps
clc
push
pop
hlt
iret
adc
inc
mov
outsb
push
mov
or
mov
iret
jmp
dec
insb
daa
push
cmpsl
sub
div
std
pusha
arpl
es
lahf
pop
hlt
mov
lahf
rclb
mov
jno
enter
mov
aad
test
fldcw
cld
pop
sbb
insb
pusha
mov
mov
icebp
push
dec
cmp
pusha
or
push
dec
movsl
pop
mov
inc
xor
mov
or
out
loop
mov
dec
fsubs
repnz
cmp
jmp
sub
lret
pop
mov
inc
and
cs
mov
in
jnp
lods
jecxz
popa
sub
test
es
sub
push
hlt
pop
mov
mov
pop
lds
jbe
or
dec
xchg
cli
mov
sbb
lcall
cwtl
xor
xor
loopne
xchg
adc
leave
int3
sub
clc
or
mov
sbb
insl
inc
adc
outsb
mov
add
pusha
inc
mov
in
leave
cmp
hlt
or
pop
pop
push
test
popa
xchg
inc
jnp
jns
sbb
mov
inc
movsl
pop
sbb
daa
cmp
enter
roll
jge
mov
loop
push
lcall
fistpll
or
pop
mov
jne
imul
mov
aam
sahf
lcall
insl
scas
inc
scas
jge
andl
sub
adc
mov
andl
fimull
leave
inc
jnp
and
jae
repz
lock
ret
add
ja
mov
xor
jne
jp
mov
or
out
dec
ss
xchg
into
cld
in
jp
mov
repnz
pop
jno
dec
add
mov
mov
cmp
or
adc
clc
popa
data16
push
rcll
push
out
fidivrs
sub
stc
jecxz
in
xchg
ds
jp
jge
mov
push
cmpsl
pop
dec
add
push
xchg
js
scas
sahf
inc
fadd
sbb
rcrb
outsl
std
fwait
jnp
jne,pt
hlt
mov
mov
lret
scas
xchg
lods
mov
mov
bound
inc
adc
cld
in
and
insb
adc
jne
lahf
xor
gs
xchg
mov
out
pusha
imul
jge
shlb
out
dec
cmc
outsl
jmp
out
add
fdivl
mov
loopne
mov
ljmp
aam
push
pop
mov
jmp
aam
pop
mov
push
dec
cmpsb
clc
leave
aad
mov
push
cwtl
adc
mov
loopne
add
enter
hlt
inc
xchg
lock
and
fwait
sub
push
ret
popf
movb
mov
ret
gs
movsl
gs
insl
cld
fwait
ret
push
mov
aaa
or
mov
sbb
test
ja
mov
loopne,pt
fistpl
cmp
cmp
lret
je
ficomps
out
lods
xchg
push
aaa
jbe
add
inc
add
xchg
mov
cs
mov
xor
insl
clc
and
push
mov
call
jnp
xchg
ja
xor
sub
outsb
mov
loopne
fistpl
jmp
scas
inc
in
add
fistps
aas
into
inc
jecxz
jns
mov
ja
pop
sarl
jmp
lcall
add
das
int
fnsave
pop
adc
cmp
mov
lock
adc
mov
orl
mov
fstpl
lods
sete
xchg
repz
imul
mov
mov
test
outsl
stos
ja
es
mov
mov
cmpsl
subb
gs
fs
mov
std
pop
mov
xchg
pushf
mov
ja
aad
cli
add
xchg
addr16
aas
loop
or
pop
pop
faddl
sbb
std
cmp
push
sub
clc
dec
mov
popa
imul
or
fimull
cld
mov
aaa
sub
jnp
or
sub
mov
lcall
es
js
aad
out
jne
sub
hlt
dec
mov
adc
jp
outsb
mov
mov
xchg
dec
loopne
sahf
cmp
mov
mov
add
or
ror
xlat
xchg
pop
or
inc
mov
sub
mov
pop
xor
es
out
ffreep
ja
or
sub
popa
ljmp
push
xchg
aad
push
mov
insl
aaa
sub
jo
pop
mov
xor
out
mov
imul
lock
test
mov
adc
or
jbe
dec
cmpsb
stc
stc
fstl
test
jns
push
mov
sbbb
loopne
cmp
or
frstor
push
fildl
push
sahf
push
clc
xorl
cld
sbb
gs
stos
jbe
aas
sbb
mov
jg
dec
fnstcw
lret
insl
out
pop
out
add
mov
mov
test
cmp
push
push
mov
enter
cmp
call
loop
rolb
lods
sub
or
cmpsl
or
nop
xlat
push
jb
jmp
mov
adc
jae
cmpsl
xor
dec
out
fucomp
popa
xchg
and
scas
xor
mov
xlat
imul
xchg
es
pop
cmp
push
stos
xchg
call
pop
ds
loopne
sub
pop
xchg
pop
rol
sbb
jae
cmp
gs
cmp
mov
in
mov
cmc
inc
push
ficompl
cmp
das
lcall
movsl
dec
test
loope
outsb
dec
or
xchg
cmp
dec
jmp
pusha
mov
aas
and
mov
fmull
sub
xchg
cmp
inc
ja
mov
adc
int
aam
out
jbe
data16
or
loope
pop
mov
dec
rcl
sub
enter
jl
pop
outsl
mov
inc
add
xchg
jne
test
dec
mov
std
adc
xlat
loopne
pop
jne
repnz
imul
cmp
mov
aaa
cltd
test
pop
insb
in
mov
out
sub
sub
mov
mov
fcomp
xchg
mov
mov
inc
push
and
cmp
aas
cmp
lock
fisttpll
add
add
ja
bound
lods
int
push
mov
outsl
icebp
les
inc
loope
jbe
repnz
inc
lock
jl
xchg
test
cmc
pop
shrb
aad
mov
pop
cmpsl
jb
aam
repz
cmp
and
add
addl
sbb
cmpsb
xchg
inc
inc
repnz
xchg
fsts
ss
bound
dec
hlt
iret
loopne
mov
rcrl
jle
imull
aam
xor
cmp
mov
call
clc
xchg
jbe
scas
ss
rcrl
add
ja
jbe
inc
scas
cmpsb
in
ljmp
jnp
pop
out
es
clc
push
pop
pop
lods
xor
xchg
or
push
fnstenv
loope
fiaddl
jno
xchg
mov
cli
sub
xchg
fwait
popf
ljmp
jno
add
outsl
rcl
call
pop
out
cli
push
cmp
cmp
mov
mov
shll
js
bound
stos
and
add
xchg
scas
js
out
inc
fisubl
stc
jb
andl
push
insb
mov
push
inc
cld
ljmp
and
pop
fildll
daa
cltd
das
and
mov
test
in
stos
adc
test
mov
mov
cmp
mov
sahf
inc
mov
mov
jnp
adc
or
shl
cmc
fstps
pop
and
pop
subb
imul
sti
rorb
xor
ds
push
lahf
inc
mov
lds
outsb
jmp
fnsave
xchg
adc
outsb
pop
lret
mov
imul
sbb
es
push
pop
outsl
add
mov
fadds
add
jbe
daa
jno,pt
iret
loop
push
sbb
sub
ljmp
rorb
mov
xchg
in
sbb
mov
jae
cmp
sbb
add
jp
sbb
add
push
aam
aad
sbb
aam
adc
imulb
insb
rcrl
push
xor
aad
test
bound
fisttpll
push
push
cmpsb
fldt
pop
fstp
andb
or
cmp
das
test
repz
push
sbb
mov
xor
and
test
push
mov
jns
jnp
xor
fsubrl
adc
sub
xor
stos
mov
mov
cltd
mov
pop
push
cli
push
dec
fstps
add
mov
mov
or
adc
jmp
shl
sub
and
in
or
mov
into
mov
fs
push
fucomip
push
pusha
inc
xor
arpl
fnstcw
sbb
sahf
gs
mov
mov
cli
rcr
testb
and
push
inc
mov
fwait
add
lock
aaa
cmpsl
fsubrl
rcpps
adc
jbe
out
and
xchg
xchg
dec
lock
lods
loope
imul
inc
mov
and
aas
mov
pop
test
repz
fmuls
adc
fsubr
sbb
bound
xchg
mov
jp
js
sti
leave
and
mov
dec
movq
push
inc
fcmovnb
pop
dec
insb
shlb
push
jbe
lea
jl
test
pop
pop
sbb
fildll
jno
les
push
setae
cmp
jo
sbb
sbb
xchg
xor
jns
sbb
dec
and
lcall
jl
les
pop
cmp
jnp
sbb
jecxz
ret
in
xchg
les
js
insl
mov
mov
sar
mov
movaps
rcrl
xor
lea
cltd
in
pusha
jae
mov
xchg
jge
nop
dec
cmp
jg
clc
sbb
and
cmp
call
lahf
lds
fs
pushf
decl
xchg
xor
mov
cmpsl
dec
int
push
pushf
xchg
xchg
pop
shll
les
add
inc
xchg
iret
out
es
ja
inc
insb
ret
xchg
adc
add
and
test
insb
mov
aad
add
testb
push
xchg
xor
scas
rorb
fidivrs
cmp
mov
inc
or
cs
leave
outsb
mov
rclb
shll
mov
sbb
es
pop
sbb
mov
js
lock
sahf
cmp
je
mov
mov
in
test
pop
add
movsl
push
mov
jb
cmpsb
lahf
cmp
out
outsl
insl
pop
hlt
and
loope
iret
out
jo
mov
scas
mov
jmp
push
cld
fisttps
mov
adc
loop
mov
or
out
arpl
sbb
icebp
mov
out
clc
rcrl
xor
fwait
xlat
mov
loopne
mulb
inc
mov
mov
std
mov
or
loope
orl
pop
cld
dec
les
in
rcll
sbb
push
clc
jmp
push
and
xchg
iret
into
push
lret
add
push
push
and
loope
loopne
insl
clc
out
xchg
test
mov
and
xchg
rcl
jno
adc
xchg
add
out
int3
and
out
imull
sub
inc
sbb
jnp
mov
jbe
sbb
mov
stos
sub
mov
ljmp
cmpsl
jl
js
mov
ljmp
and
aam
jne
or
mov
mov
push
cmp
or
dec
add
xorb
outsb
jb
dec
rclb
push
xchg
pop
push
aaa
push
mov
mov
inc
aad
stos
leave
xchg
push
or
pop
mov
mov
loopne
mov
xchg
push
aam
fwait
push
mov
add
jno
lods
clc
cmp
aam
hlt
scas
or
arpl
test
lret
jnp
inc
mov
je
cld
cltd
adc
negl
dec
sbb
jb
xchg
and
fistpl
jl
loopne
xor
aam
push
filds
jno
ret
mov
mov
xchg
negl
push
out
out
test
stc
jne
sub
test
in
adc
enter
scas
jbe
mov
loope
pop
lods
test
pop
jno
inc
ja
scas
inc
arpl
mov
xchg
cmp
jg
les
sbb
ja
adc
in
adc
sub
mov
sbb
sub
test
pop
call
dec
mov
push
pop
cmp
das
xchg
add
pop
leave
daa
mov
cmp
mov
push
pop
lock
pusha
push
jo
adc
xor
fidivrs
jne
das
aaa
lcall
add
fmuls
mov
mov
push
inc
addr16
mov
push
lret
adc
shrb
sub
arpl
ljmp
mov
fcom
sbb
cmp
out
aam
and
pusha
ret
mov
sbb
lahf
inc
movsb
loope
mov
ja
rol
pusha
loope
dec
aaa
btr
mov
mov
lods
or
ljmp
adc
les
ss
ljmp
repz
hlt
roll
out
jecxz
xchg
adc
les
sub
fbld
jae
jb
test
lods
inc
jo
sahf
loopne
insl
js
fwait
dec
mov
lods
aaa
sbb
call
mov
data16
xchg
or
repz
mov
fisubl
pop
cmp
push
fcmovnbe
jno
aad
imulb
sbb
xchg
add
mov
movl
les
repnz
mov
std
enter
add
mov
fistpll
lea
lock
fucomip
into
mov
mov
test
mov
in
jle
dec
mov
jb
addr16
shlb
lock
jno
popf
fimuls
outsb
fnsave
ds
xchg
in
and
leave
call
in
jmp
pop
pop
push
jae
pop
fdivl
cmpb
pushf
add
mov
imul
cli
insb
loope
or
pushf
and
jo
hlt
ret
mov
fidivrs
or
mov
lock
or
inc
jne
jb
push
icebp
mov
or
fsub
mov
cli
js
lds
cli
lds
add
mov
mov
inc
xchg
mov
stos
pop
cmp
out
or
push
jne
sub
out
std
ljmp
dec
xchg
stc
add
adc
push
xor
addb
ds
or
cmpsl
cmpsl
push
in
dec
xor
sbb
cmp
mov
imull
repz
mov
and
pop
fisttps
push
inc
fwait
mov
add
test
out
push
add
push
rcrl
inc
or
mov
mov
lock
scas
mov
push
lret
out
xor
sub
push
sbb
imul
in
xor
fidivrs
mov
push
inc
xor
mov
into
jb
ja
or
push
and
imul
scas
mov
pop
lret
xchg
test
cmp
and
adc
insb
push
repz
fmuls
fimuls
mov
mov
scas
rcll
popa
jecxz
jmp
sahf
sbb
dec
push
lret
adc
ljmp
lock
mov
mov
filds
fldl
loopne
jg
fsubrs
push
mov
xchg
adc
sub
subl
mov
pop
jne
mov
push
in
mov
lock
mov
jecxz
insb
dec
jno
dec
scas
adc
js
mov
or
sbb
pushf
aas
dec
fcomip
mov
cmp
cmp
cli
mov
jle
fucomp
loope
lret
popa
sub
loope
fimull
aaa
loopne
mov
ret
or
adc
xchg
outsb
divl
jl
push
mov
out
mov
pop
pop
mov
mov
push
fists
hlt
scas
adc
mov
popa
inc
rol
mov
and
jnp
push
out
lret
push
sbb
mov
std
mov
push
lds
pop
fidivs
addr16
fidivs
adc
sub
movb
stc
frstor
into
dec
test
jnp
inc
sbb
cmc
outsb
inc
daa
in
pop
mov
xchg
in
adc
mov
sub
mov
jg
cmp
mov
xchg
jecxz
push
js
lods
mov
dec
inc
cmp
clc
pop
jb
pop
push
out
lret
pop
xchg
arpl
jne
cs
jnp
xchg
ss
idivb
jmp
pop
subl
leave
mov
add
xchg
dec
out
sub
sub
arpl
or
cmc
push
arpl
sbb
add
adc
sarl
jb
or
pop
xchg
imul
jb
out
push
xchg
inc
shl
ret
fmulp
xchg
push
lahf
lcall
xor
pop
cmpsl
mov
pop
mov
les
pusha
cli
add
in
aam
mov
test
mov
mov
xchg
or
mov
ret
adc
pop
lods
push
jo
aas
sbb
mov
andl
icebp
imulb
loop
mov
sbb
push
mov
insl
mov
xchg
outsb
pop
jae
pop
and
popf
rorb
rolb
jp
imul
jnp
insl
mov
jmp
xchg
pop
lahf
cld
roll
sub
push
out
cld
inc
jmp
lods
push
push
push
pop
call
lods
xchg
adc
adc
cli
cmp
push
dec
mov
js
mov
lahf
cmp
push
jno
scas
dec
inc
inc
loopne
pop
movsl
or
mov
insb
movsl
shrb
lods
pusha
sbb
aad
sarb
push
dec
cli
pop
pop
aaa
mov
push
ret
mov
lcall
push
adc
loope
loopne
inc
sbb
lock
cmp
pop
test
std
mov
ret
movsl
cmp
pop
pop
sub
lock
sub
push
sbb
or
arpl
dec
pop
push
hlt
sub
push
mov
in
mov
xor
sbb
out
loope
daa
or
push
pop
fsubrs
sti
scas
sbb
sbb
out
outsb
lods
cmpsb
adc
roll
lods
hlt
cli
mov
pop
fwait
addb
fisubl
lods
cwtl
and
sbb
rolb
shll
lahf
std
xor
lds
sbb
push
movsl
push
cld
mov
adc
mov
pop
test
cmpsl
stos
mov
insb
push
xchg
mov
pop
es
hlt
and
mov
iret
in
jge
in
ss
mov
mov
inc
adc
insb
lret
or
fucomip
pusha
xchg
stos
pushf
mov
stc
insl
jnp
arpl
mov
sub
gs
out
data16
inc
jl
mov
sub
mov
mov
mov
cmc
or
fildll
and
or
cmp
lods
adc
daa
xchg
adc
imul
movsl
push
xlat
xor
ja
mov
imul
dec
xor
sub
dec
sbb
je
scas
jl
sti
shrb
sbb
mov
or
out
pcmpeqb
add
popa
jne
loop
repz
adc
test
or
jl,pn
lods
or
dec
sbb
imul
cltd
in
enter
in
cvtpi2ps
mov
imul
xchg
push
dec
dec
push
sti
pop
imull
loope
mov
orl
inc
addr16
call
or
pop
mov
imul
adc
mov
outsl
outsb
nop
inc
sbb
fsubrs
sar
adc
mov
arpl
mov
add
pop
dec
mov
je
sub
in
push
add
inc
hlt
adc
mul
int
mov
jne
hlt
cli
in
sub
cmpsl
leave
cmpsl
hlt
dec
cld
adc
dec
imul
mov
sub
mov
pop
mov
out
in
pop
stos
loopne
lret
pop
xchg
ret
insb
and
pop
mov
jl
add
outsl
pop
or
push
xor
out
mov
mov
push
add
lret
xorl
xor
mov
faddp
jno
ljmp
movsl
fsts
jl
fiaddl
out
jb
stos
xlat
pop
shl
jbe
sbb
jb
add
cmpb
cmp
inc
adc
out
sbb
mov
xor
mov
jno
std
cmp
push
xchg
mov
das
add
mov
fcmovnu
jb
add
mov
roll
dec
mov
mov
scas
sbb
lcall
ret
xchg
jg
pop
jp
and
mov
cli
add
lods
mov
sub
mov
adc
add
das
push
inc
mov
push
jecxz
repnz
mov
lock
cmp
pop
pop
pop
scas
or
rorb
imul
push
cwtl
add
int3
sub
mov
hlt
pop
push
fdivl
lcall
scas
mov
int
push
xchg
sub
pushf
jnp
adc
outsb
jge
loopne
mov
sub
mov
xor
adc
xlat
inc
lods
mov
xor
xchg
out
lahf
mov
icebp
lret
orl
jo
out
dec
aam
push
movsl
imul
cltd
addr16
pop
scas
movsl
in
push
or
insl
in
fwait
pop
sub
fisttpl
xlat
lods
fsubrp
outsl
neg
push
jb
mov
outsl
scas
lods
pop
lods
ss
call
cli
gs
and
push
push
sub
into
lret
mov
dec
aas
fsubr
loope
lea
sbb
push
rcrb
adc
push
and
fsubrl
stos
aas
cmpb
mov
mov
jno
loop
es
leave
in
clc
cmc
fistpll
movb
roll
sbb
jbe
add
dec
pushf
push
dec
in
lcall
cmpsb
add
fdivrl
jnp
roll
dec
sub
inc
cmpsl
out
shrb
stos
nop
leave
loope
fcom
cmp
jmp
out
add
xlat
loopne
add
adc
mov
pop
dec
xor
out
push
xlat
aaa
psllw
add
sub
xchg
insl
sarl
lock
loope
jp
std
xlat
out
push
pop
idivb
nop
out
xchg
dec
xchg
test
mov
aaa
inc
mov
in
inc
cmpsb
sbb
or
mov
mov
inc
inc
mov
dec
insl
add
icebp
inc
in
mov
test
icebp
and
faddp
leave
cld
mov
push
cmp
xchg
mov
sbb
xchg
shlb
js
fbstp
sub
movsb
test
fisttpll
fs
mov
mov
jnp
cli
mov
outsb
xchg
insb
loopne
mov
and
hlt
test
aaa
jp
out
pop
rorl
arpl
pusha
sbb
ljmp
call
push
pop
inc
int3
pop
iret
fldt
cmc
jge
scas
jno
mov
add
mov
inc
cld
pusha
dec
mov
scas
loope
xchg
jp
push
pop
add
and
fsubs
pop
mov
xchg
cmp
sub
ss
popl
lcall
sub
das
or
scas
clc
fisubl
in
add
cmpsl
mov
sbb
aas
sbb
lret
xor
cmpsb
mov
xor
lods
bound
insl
pop
loope
xchg
mov
push
data16
push
push
inc
insb
fidivrl
mov
lahf
iret
mov
iret
inc
pop
inc
pusha
lret
fiaddl
mov
lret
xchg
xor
mov
pop
or
push
leave
mov
add
mov
xor
sub
shl
lods
ret
insl
cmpsb
add
insl
xor
xchg
ret
insl
outsl
stc
dec
mov
lods
adc
push
orb
clc
repz
adc
jl
sti
inc
mov
pop
inc
insb
bound
out
sbb
sbb
mov
imulb
add
adc
push
andb
movsl
mov
inc
or
gs
in
lods
dec
mov
mov
pop
mov
mov
fdivrp
jmp
adc
mov
lret
sbb
andb
jae
cmp
test
or
sub
int
xchg
cmp
cmpsl
les
push
punpckhbw
sahf
mov
xchg
and
clc
out
into
xchg
mov
jo
add
je
mov
pop
pusha
ss
ret
jp
cmpsl
mov
xor
test
lret
pop
mov
imul
pop
adc
dec
pop
dec
add
pop
sub
mov
scas
fucomip
bound
stc
push
and
repnz
pop
cmp
in
lods
mov
mov
or
and
and
icebp
push
mov
cmc
mov
jne
sbb
aaa
mov
mov
add
bound
dec
mov
push
outsl
popa
push
pop
andb
arpl
mov
mov
pop
mov
mov
push
aaa
lock
scas
mov
imul
mov
sub
mov
fwait
test
lcall
dec
pop
mov
andb
mov
arpl
lock
inc
das
cld
fcomp
mov
jne
xchg
movsl
lods
out
cmp
jmp
ffreep
pop
or
and
repnz
fidivrs
call
jne
mov
into
jmp
jg
sbb
or
pop
mov
cmpsl
add
scas
lods
mov
push
cmp
roll
sbb
inc
xchg
notl
pop
pop
in
bound
or
xchg
mov
ficoms
adc
jp
vcvtsd2ss
push
ja
lock
jg
mov
jae
cmc
outsl
mov
test
scas
icebp
jnp
loop
mov
xchg
cmpsl
std
test
loopne
shlb
xchg
push
addr16
pop
xor
in
negb
inc
xor
inc
add
call
loopne
ds
mov
mov
add
roll
push
and
mov
cmp
mov
roll
jp
in
sub
mov
ret
dec
add
add
jbe
ret
ror
mov
mov
ds
pop
repnz
push
xlat
outsb
xorl
add
pop
ret
rcr
lahf
mov
pop
pop
mov
or
cli
push
mov
push
sub
or
ds
pop
fisubrs
std
adc
cmc
lds
xor
lds
pop
lods
sub
add
cmp
inc
pop
negl
out
jbe
clc
xor
test
test
loope
jg
aam
mov
sbbb
dec
ja
and
inc
ret
nop
aad
mov
orb
pop
dec
lods
adc
les
pop
mov
mov
cmc
sub
cwtl
js
pop
inc
pop
loop
jo
mov
pop
nop
ret
test
push
rorl
repz
jl
push
dec
mov
mov
push
mov
pop
daa
jle
mov
loope
inc
or
movl
dec
insb
iret
push
or
cmpsl
fsubrl
jae
insb
mov
stos
cld
repnz
les
repnz
test
jmp
js
repz
loopne
insl
mov
iret
loopne
jl
ret
xchg
fcom
sub
imul
inc
add
xchg
mov
cmp
jbe
sub
subl
ljmp
ss
fs
sbb
fmul
cmpsb
pop
pop
cmp
inc
xor
aam
movsl
jg
out
cmp
lods
icebp
adc
jns
jecxz
xor
insl
push
and
andb
adc
cmp
in
lods
movsl
push
fisubrs
and
popf
xchg
aam
and
xor
ret
repz
xlat
dec
push
jmp
call
add
xor
aaa
push
mov
sti
and
imul
je
addb
ljmp
and
push
lret
dec
push
jp
cmpsb
dec
fdivrl
and
lret
xchg
xor
add
and
jae
dec
fbstp
push
mov
cmp
push
insb
fcom
pop
xor
fistpl
jmp
mov
movl
pop
jne
lods
les
mov
sti
je
cwtl
mov
addr16
cmp
mov
adc
and
aad
sbb
dec
cwtl
mov
mov
fildl
inc
and
cmp
push
add
add
mov
cmp
stos
xor
mov
ret
test
imul
jne
leave
mov
push
adc
std
lods
push
sbb
ja
xchg
mov
sarl
or
push
mov
jnp
loopne
and
jg
in
mov
jge
mov
cli
clc
xchg
and
fcompl
cmc
mov
push
mov
pop
sub
cmpsb
call
shl
jo
xor
mov
fwait
inc
cmpsb
popf
mov
jle
inc
ja
xor
inc
inc
lret
sbb
mov
out
fisubrl
icebp
mov
ret
bound
js
icebp
push
pushf
ljmp
pop
cmp
ds
adc
mov
imul
nop
push
roll
in
pop
imul
xchg
ds
lock
popf
data16
cmp
xorl
dec
repnz
cmp
jb
cld
rolb
mov
and
push
xor
scas
or
mov
pop
dec
push
mov
addb
fwait
hlt
dec
mov
push
jp
ljmp
adc
push
pushf
push
in
incl
jl
xchg
js
add
repz
arpl
pop
cwtl
push
jb
inc
sub
mov
lahf
xor
mov
fstpl
cld
test
into
dec
lock
cmpsl
je
int3
pop
lcall
imul
jae
nop
pop
movsb
mov
fcoml
mov
adc
and
in
pop
clc
test
add
jne
in
out
add
mov
insb
mov
nop
dec
insb
adc
dec
jle
push
ss
jl
rorb
jle
dec
lahf
popf
inc
ret
jge
sub
fwait
jecxz
push
add
andl
cmp
ja
cmp
mov
cld
es
or
movsl
into
sub
cli
jnp
add
mov
jmp
stc
add
ficoml
jp
adc
subb
mov
rcr
pop
out
or
movb
ja
bnd
jne
xor
mov
xor
pop
inc
and
mov
cld
in
adc
fsubl
push
mov
in
and
inc
inc
mov
or
inc
or
iret
shlb
out
jg
sbb
lods
pop
sbb
sbb
or
sbb
jge
push
xlat
rolb
adc
mov
xchg
cmp
clc
xor
cmpsl
test
sub
int3
aas
pushf
add
lods
insl
or
mov
jne
and
loopne
cmp
cmc
pop
xchg
jo
and
inc
jp
mov
lods
test
fisttps
shll
sbb
dec
jb
mov
faddp
pop
subl
insl
dec
sub
mov
or
cmp
dec
mov
faddp
jp
popf
inc
scas
mov
addl
cmp
pop
int3
lods
cmc
cmpl
test
inc
xchg
cmp
call
adc
push
jns
xchg
ss
jge
ret
sbb
and
jge
jmp
outsl
loope
test
push
inc
adc
xchg
push
hlt
xor
out
sbb
jmp
xchg
jle
int3
inc
push
add
lahf
jl
inc
adc
push
cmp
push
xor
outsb
sbb
jmp
inc
push
outsb
xor
insb
jbe
push
scas
mov
sbb
mov
xchg
roll
cmp
pop
jae
mov
lock
loope
push
or
js
sbb
push
leave
fsubrs
mov
mov
mov
sahf
sub
and
fcmovnb
sbb
inc
push
mov
sbb
jbe
and
lods
mov
aaa
jle
mov
pop
add
movsl
pop
xor
cmp
out
test
jg
xor
cli
int3
out
std
fildl
rcrl
push
bnd
mov
dec
jl
pop
xor
loopne
addr16
add
das
arpl
loop
rorb
ja
sub
incb
lods
leave
xchg
movsl
pop
sub
fstl
out
mov
loop
rorl
sbb
int
inc
rcrl
stos
mov
shl
pop
push
xchg
mov
mov
xchg
mov
cmpsl
dec
mov
pushf
lea
jg
mov
cwtl
sub
ret
test
and
out
pusha
mov
pop
loop
ret
dec
adc
lret
int3
arpl
mov
push
test
mov
scas
push
push
mov
mov
std
bnd
xchg
cmp
xor
pop
incl
mov
cld
shlb
loope
aam
or
les
into
or
push
inc
mov
adc
test
fadd
cmpsb
jmp
cmp
call
aaa
loop
test
out
jne
xchg
ja
outsl
iret
icebp
mov
scas
loop
aaa
leave
inc
fsub
aaa
insl
or
dec
cmpsl
rol
add
in
js
mov
leave
mov
jge
out
clc
shr
lret
repnz
jo
and
jecxz
int
sbb
jmp
lahf
ret
aaa
inc
scas
fwait
xchg
xor
mov
push
push
aad
pop
mov
xor
jo
mov
cmp
jle
out
xor
pop
xor
cs
mov
inc
in
int
inc
jnp
mov
pop
mov
cltd
mov
call
lret
mov
in
push
mov
paddw
in
pop
popa
loope
inc
sub
mov
mov
sbb
sbb
sbb
xor
pushf
jg
sub
mov
test
imul
outsb
insb
rorb
jno
mov
pop
cmpsl
js
shlb
inc
jb
jecxz
dec
dec
frstor
jno
movsb
insl
ret
imulb
lock
mov
fbld
rclb
test
popa
inc
add
mov
fbstp
sub
or
jae
outsl
pop
shll
xor
sbb
icebp
and
das
mov
and
push
pop
xorl
push
out
mulb
rolb
scas
test
push
xchg
or
or
bound
data16
pop
outsb
xchg
scas
jecxz
fidivl
dec
push
int3
xchg
aaa
jb
out
jp
or
cmpsl
pushf
jo
or
xor
jecxz
imul
iret
sbb
dec
out
cmpsb
call
or
outsb
push
xor
insl
adc
pop
adc
mov
adc
imul
xor
jno
xchg
fidivrl
ja
mov
mov
fisubrs
in
dec
dec
ret
sub
mov
pop
jmp
mov
std
pop
cmpsb
fdiv
test
and
pop
addl
test
jae
or
jo
cmp
out
mov
loopne
and
sbb
xchg
mov
jae
jmp
repz
xor
loope
out
aaa
aam
mov
and
in
imul
daa
ss
sbb
lods
rep
scas
ss
repnz
add
rolb
loope
js
sbb
mov
inc
icebp
push
push
inc
cmc
std
push
rcrb
lcall
notl
xor
int
jns
jl
jns
jbe
xlat
outsb
pop
ret
pushf
enter
pop
stos
fnstsw
addr16
loop
shl
and
subb
xchg
sub
push
fisttpll
sbb
mov
jns
push
xchg
pop
push
pop
cmp
shl
in
fdivp
call
mov
mov
push
pop
mov
sbb
mov
ja
jnp
dec
jecxz
std
cmp
into
cltd
pop
add
jecxz
adc
fdivs
aaa
and
add
mov
mov
inc
test
mov
enter
jge
dec
xchg
jne
jnp
dec
aaa
bound
stos
or
mov
fistps
mov
push
outsl
cld
icebp
sub
mov
mov
pop
mov
stos
insb
and
shll
push
mov
pop
pop
std
push
jb,pn
mov
xchg
mov
xchg
shlb
lods
dec
mov
sbb
sti
jne
ret
push
je
mov
jge
mov
stc
loop
xchg
mov
loopne
lds
cwtl
pushf
push
push
test
pop
jmp
ja
ret
add
or
out
xor
jecxz
or
out
and
cmp
shll
jbe
xor
sub
push
dec
ds
xor
addl
xor
aad
in
in
and
xlat
in
lock
outsb
insb
jno
add
clc
push
aam
push
inc
in
mov
loopne
fs
and
pop
mov
das
or
out
rolb
dec
mov
xchg
mov
push
outsl
dec
sti
lea
lcall
cltd
mov
xchg
push
ds
aad
in
stos
sbb
jns
out
pushf
test
fwait
mov
cmp
add
loope
fmulp
jno
fnsave
xor
ss
add
and
ret
push
cmc
cmp
push
pusha
xor
negb
adc
mov
lock
inc
mov
pusha
ds
div
inc
out
mov
aas
adc
outsb
pushf
dec
pushf
ret
cmpsb
fstl
int3
es
aaa
adc
dec
es
xor
inc
add
push
mov
mov
dec
mov
loopne
das
jle
sti
and
xor
call
pop
pop
mov
cmp
or
or
dec
push
push
xorl
mov
jbe
int
dec
call
js
daa
or
pop
lahf
xor
fwait
jmp
fwait
mov
mov
fcoml
adc
mov
repz
pop
addb
cs
shl
add
jmp
loopne
push
inc
adc
ret
sbb
push
out
lret
sti
cmpsb
cmp
jge
ss
outsl
lret
mov
add
movsb
sub
pop
mov
outsb
dec
pop
mov
xor
mov
mov
jne
push
sahf
cmp
outsl
jo
mov
inc
push
mov
imul
adc
lahf
xor
in
les
fs
add
sbb
repz
mov
adc
or
or
lock
dec
mov
ss
testl
or
mov
jmp
lds
pusha
sub
or
insl
fwait
or
imul
mov
in
or
or
mov
xchg
ljmp
loop
fistpl
addr16
jnp
das
rcr
sub
sbb
rol
pop
add
jbe
loope
loope
je
mov
inc
adc
cmp
pop
test
adc
sbb
cwtl
test
adc
pop
or
push
and
call
movsl
add
fadd
add
aad
or
xchg
jecxz
push
push
aaa
in
les
ja
stos
cmp
xor
mov
inc
int
xor
rcrl
add
dec
aam
aas
cmpsl
ret
outsl
loop
sbb
mov
mov
out
sub
aaa
sbb
adc
outsl
gs
mov
mov
mov
into
arpl
inc
xor
scas
sbb
ret
cmp
cmp
xchg
add
popa
cwtl
call
cmp
dec
repnz
stos
jo
pop
dec
pop
notb
cli
jbe
fistps
iret
lods
das
icebp
mov
jno
mov
js
hlt
pop
sbb
pop
push
imul
mov
loope
mov
test
fdivrs
dec
pop
idiv
cmp
out
push
nop
mov
cld
int
add
xor
dec
pop
add
cmp
cld
mov
loopne
pop
je
inc
xchg
decb
pop
test
fadd
in
push
push
jnp
popa
scas
sbb
jo
mov
shrb
pop
je
aad
adc
fcoms
scas
loope
dec
jle
shll
jae
pop
xchg
jecxz
jns
push
je
dec
pop
push
aam
cmp
pop
movb
outsl
jg
iret
std
xchg
insb
jmp
ljmp
cltd
shll
lock
in
cmpsb
pop
movsb
ror
xlat
pop
cltd
imul
arpl
pop
fdivl
xor
sbb
movsb
jmp
mov
movsb
into
dec
pop
mov
mov
ds
into
lcall
fstpt
mov
movsl
push
mov
lock
pop
fwait
sub
push
jmp
mov
loop
pop
cs
mov
insb
push
sub
xor
mov
pop
or
pop
dec
and
push
fdivr
push
pop
push
ja
mov
xchg
jo
nop
adc
mov
js
fwait
call
arpl
push
scas
sarl
inc
daa
or
adc
xchg
fisttps
mov
adc
sbb
shll
push
movsb
mov
outsl
mov
shlb
cs
cmpl
shrl
int
out
or
cmpsl
mov
outsb
rcrb
repnz
dec
mov
insl
inc
jno
xchg
lret
imul
cmp
xchg
ret
add
fisttpll
int3
ficompl
add
test
addb
testl
scas
sahf
xor
mov
pop
mov
js
xchg
adc
shrb
arpl
adc
stos
sbb
stos
mov
fiadds
test
or
test
aad
in
sub
add
jp
xchg
mov
hlt
inc
ret
lahf
and
jmp
lock
push
push
bound
add
mov
cwtl
mov
jl
cli
mov
pinsrw
jo
mov
jnp
pushf
adc
mov
fsub
lods
ret
inc
jnp
xchg
dec
insl
std
fucom
stos
pushf
push
mov
adc
in
dec
mov
subl
stc
inc
jae
push
sub
cmp
pop
xlat
pop
sub
add
mov
sub
arpl
arpl
mov
outsb
and
call
fdivs
js
pop
movsb
loop
push
out
dec
adcl
ficompl
push
test
sub
push
sub
jo
clc
scas
mov
leave
idiv
jno
and
outsb
pop
mov
rorb
cmp
xor
adc
dec
push
mov
mov
xor
inc
and
sahf
push
inc
cmp
cltd
push
jb
cmove
pop
mov
fisubl
dec
push
push
or
push
sub
lret
mov
adc
aaa
adc
xchg
mov
outsb
lds
mov
jl
pop
pop
mov
inc
aad
mov
ficoms
mov
jp
cmpsl
push
sub
and
lds
mov
xchg
pop
jl
adc
movb
stos
out
push
leave
je
ss
inc
jae
mov
sti
notb
cmp
jb
in
lods
scas
cmc
fadds
xchg
push
dec
aaa
push
daa
enter
loop
fwait
rcl
mov
cltd
icebp
pop
pusha
sbb
dec
push
fimull
idivl
mov
sub
pop
bound
adc
xchg
imul
pop
inc
and
stc
rorl
sbb
rorl
sbb
test
movsl
push
cli
pop
imul
loopne
insl
leave
rorb
mov
out
paddd
push
pop
fdivl
cmp
addr16
cmp
in
lods
sub
xchg
jnp
jno
cmp
push
imul
inc
jecxz
sbb
cs
fisubs
inc
jns
cltd
adcl
push
scas
jne
pusha
inc
push
into
jbe
cmp
insl
ds
icebp
mov
sbb
addr16
cmovo
insb
outsl
xorb
cmpl
rcrl
jbe
xchg
mov
imull
add
cli
outsl
cmp
push
jle
add
jb
sub
mov
or
fisttpll
iret
inc
in
sub
adc
mov
jnp
mov
jl
stos
xchg
repnz
push
mov
cld
in
dec
jecxz
pop
mov
push
push
sub
cs
aam
movsl
mov
pop
sbb
pop
outsb
cmc
movsl
mov
loop
inc
pop
dec
xor
lea
sub
and
fnstsw
inc
ret
xor
cli
mov
xchg
bound
loop
mov
mov
int3
scas
push
mov
jae
enter
mov
push
push
inc
popf
cmpsb
shl
insb
pop
mov
scas
cmp
mov
or
sbb
xor
ret
scas
or
dec
adcl
jg
or
add
mov
aam
cmpsb
push
js
ja
mov
fdivs
arpl
pop
mov
orb
in
push
inc
mov
aaa
pushf
mov
das
jo
add
orb
and
ja
enter
les
cs
jg
les
fdivl
fmull
testb
ja
jae
call
push
adc
lock
mov
frstor
push
fs
push
adc
scas
pop
adc
pushl
clc
dec
dec
jl
fld
out
sub
cmc
pop
push
add
and
popf
xor
push
lock
and
cmp
pushf
push
aad
xchg
sbb
iret
fdivl
scas
mov
leave
movsb
dec
xchg
ljmp
call
adc
repz
cltd
mov
add
in
out
add
xor
or
jno
in
out
fisttpl
fistps
loope
in
je
xchg
dec
lret
add
cli
divb
pop
inc
mov
cwtl
push
fadds
shll
mov
add
mov
popa
test
ret
outsl
push
jbe
in
mov
adc
lcall
ja
aas
xchg
mov
mov
mov
mov
out
subb
pusha
sub
addl
mov
scas
cmp
cli
pusha
repnz
add
fnsave
inc
inc
xchg
fstpl
test
imulb
cwtl
out
mov
push
mov
or
jno
scas
sbb
and
lods
jge
mov
xchg
jne
fisttpl
insb
call
jo
mov
imul
and
cmc
orb
or
jb
dec
xchg
or
pop
dec
jl
push
xor
push
push
xchg
xchg
popf
jmp
xor
xor
mov
rcrl
test
or
fs
sub
mov
cmp
pop
adc
fistpl
lds
cmpsl
jmp
je
cld
push
sub
incb
mov
shll
inc
out
mov
mov
fistpll
iret
gs
pop
out
faddl
jge
fidivrs
or
lock
jb
pop
adc
aad
lea
cli
add
hlt
das
add
jbe
clc
jecxz,pn
mov
sbb
int
js
fbstp
mov
mov
cli
inc
adc
jae
sub
inc
loop
mov
jle
mov
repz
sbb
sub
dec
xor
je
and
pop
ret
and
mov
mov
lcall
xchg
into
jg
jge
jmp
adc
mov
cmpb
rorb
and
mov
call
ret
cs
aaa
cwtl
ljmp
in
sub
jnp
push
ja
pusha
mov
pushl
icebp
loop
push
xchg
sbb
mov
jge
jbe
sbb
fadds
js
xchg
sbb
jge
cltd
aas
inc
repz
pop
lret
pop
clc
ret
into
cli
data16
push
pop
lahf
clc
jae
cmp
push
jmp
push
mov
aad
popa
test
pop
dec
push
push
add
or
mov
mov
lea
adc
cli
mov
cltd
sbb
addr16
jbe
out
loop
jge
pop
xor
in
and
jge
orb
adc
pop
sub
int3
jb
ljmpw
popa
test
and
repnz
xlat
jmp
mov
xlat
jne
pop
mov
roll
fwait
add
aam
shl
push
push
add
dec
pop
mov
ljmp
push
push
aas
sub
adc
imul
sbbl
sub
push
movl
lods
push
dec
inc
imul
pop
mov
inc
lahf
push
mov
clc
aam
aaa
and
push
int
jl
mov
imul
dec
movsb
cmp
jmp
or
mov
les
or
mov
mov
das
mov
stos
mov
aas
or
or
jae
addb
faddp
outsb
push
push
jg
into
push
imul
repnz
jno
inc
and
dec
test
push
dec
and
movsl
pop
pop
shr
push
sbb
xor
jne
add
mov
cmp
inc
cmp
testb
js
dec
mov
repz
shlb
push
loop
leave
shrl
stc
fdivrl
and
inc
jo
push
mov
push
insb
fnsave
lods
mov
or
outsl
sbb
in
sahf
ja
xor
insl
test
push
pop
cli
pop
imul
lods
rcl
in
sub
xchg
out
sub
pop
jbe
xorl
xor
mov
outsb
cmp
lcall
xchg
mov
lods
std
movsb
scas
xlat
loope
sahf
mov
or
sub
pop
inc
test
dec
mov
lods
cld
cmp
pop
orb
sub
arpl
shrl
dec
mov
ss
cmpsl
pop
repnz
push
mov
add
push
mov
dec
push
or
in
cltd
insb
pusha
add
int
scas
stos
outsl
fistpll
add
xorb
dec
mov
pop
sub
xchg
mov
es
popa
xor
push
push
ds
pop
xchg
cmp
mov
fistpl
hlt
inc
mov
xor
cmpsb
jg
adc
ror
push
pop
movsb
dec
xchg
call
sbb
inc
or
or
je
fwait
sub
subb
sub
adc
loope
jo
fdivl
push
incb
xlat
hlt
lock
dec
in
outsl
sbb
xchg
sub
fidivs
cli
bound
or
inc
mov
arpl
pusha
mov
fdivs
sahf
dec
jl
js
or
sbbl
stos
ljmp
xchg
cs
data16
movsl
xchg
sub
pusha
out
jb
push
mov
pop
and
mov
outsl
mov
pop
xchg
lea
leave
test
inc
insl
cltd
aam
movsl
out
dec
pop
or
xchg
imul
in
dec
test
jecxz
fstpt
inc
jne
test
pop
subb
scas
arpl
pop
sar
xor
data16
fwait
jge
xchg
mov
cmp
test
mov
cmp
pop
cld
sub
cmp
cmp
mov
mov
call
es
hlt
inc
or
les
jns
jb
in
faddp
xchg
sbb
mov
add
jl
ss
adcb
outsb
fcoms
sub
and
push
je
aad
cmp
push
sbb
jl
std
les
push
push
sub
mov
mov
and
scas
jmp
out
cli
rcr
leave
xchg
pop
ja
dec
xor
test
aaa
shlb
fdivl
fcoml
jno
and
test
bound
imul
clc
mov
int3
out
sbb
mov
mov
jle
xor
mov
mov
stc
and
inc
mov
cli
jno
jae
test
dec
gs
mov
mov
insb
ror
pop
adc
jg
cld
aaa
jge
jp
mov
faddl
rorl
xchg
xor
dec
ss
xor
aam
shlb
inc
int3
add
and
lea
cmp
and
sub
cmp
arpl
xor
pop
jne
or
movsb
dec
aam
iret
xor
leave
cmc
popa
mov
push
cwtl
mov
sub
loopne
aam
jne
mov
jbe
dec
rcrb
fnsave
stos
pop
sub
xlat
or
shll
mov
add
mov
fwait
data16
scas
das
jl
test
jbe
pop
and
das
imul
fwait
mov
ret
inc
jmp
rcll
mov
jecxz
les
cs
in
imul
jl
popa
mov
scas
cli
mov
jmp
jl
mov
es
out
push
movsl
inc
jp
cmp
adc
hlt
sub
mov
je
mov
xor
das
lods
adc
orb
mov
pusha
arpl
nop
push
scas
jle
outsl
inc
cltd
pop
lahf
push
ror
push
sbb
mov
sub
xchg
sbb
xor
pusha
arpl
shlb
mov
dec
leave
es
xchg
pop
int
jge
push
pop
adc
add
mulb
out
scas
adc
mov
iret
add
inc
fstpt
outsb
movsl
dec
jg
push
rcll
imul
jge
mov
xor
pop
jo
pop
sub
or
mov
stos
push
dec
daa
stos
rcrb
es
sarb
cmp
jp
xor
dec
cmc
push
sahf
mov
sbb
fcomp
adc
idivl
loopne
popl
inc
dec
loop
jnp
xchg
push
cmc
or
ja
repnz
jmp
iret
fwait
sahf
lcall
mov
xchg
adc
fsubp
outsb
es
push
inc
sbb
test
repz
mov
mov
mov
jnp
sbb
pop
dec
stos
movsb
int3
dec
jle
test
mov
inc
pusha
sbb
fmull
pop
insl
fnstenv
enter
mov
cmpsb
pop
inc
fiadds
mov
adc
xor
int3
test
xchg
mov
shlb
call
imul
and
jp
lock
cltd
cmp
push
cld
mov
jmp
fidivl
mov
orl
adc
fwait
stos
and
test
mov
sahf
mov
adc
je
jle
rorl
xchg
adc
push
add
addl
cmp
mov
addr16
or
je
cmp
mov
or
rolb
jmp
sbb
sbb
push
sbb
test
fcmovnbe
pop
jne
mov
jb
mov
xchg
xor
dec
jno
mov
aas
dec
clc
mov
push
push
ja
ret
mov
addr16
add
insl
jo
stos
insl
mov
xchg
into
out
stos
das
aaa
sahf
bnd
mov
and
fdivs
pop
push
xchg
sub
jbe
ret
pop
ret
scas
sbb
sbb
jp
or
push
lods
sub
pusha
inc
push
aam
adc
lds
inc
in
sub
add
adc
mov
scas
xor
lods
mov
fsub
mov
jnp
sarl
pop
or
lods
popf
mov
stc
mov
gs
pop
sub
xor
pop
and
mov
fisubrs
mov
mov
frstor
stc
pop
adc
lock
ret
pop
dec
es
icebp
gs
lods
xor
sub
jge
add
test
shrb
enter
ds
fsubrl
jbe
mov
add
daa
or
mov
scas
fadds
push
and
jl
or
and
add
push
cs
pop
xchg
orl
insb
lods
pusha
or
fs
sbb
pusha
adc
push
jg
repnz
sub
ffreep
test
push
or
out
subl
cli
ss
lock
testl
shll
sbb
in
mov
push
pushf
scas
sub
push
fcmovb
sbb
pop
pusha
sbb
cwtl
out
mov
shlb
fisubs
mov
stc
fadd
outsb
in
dec
inc
sahf
cmp
jg
fnsave
mov
mov
fisubrl
dec
xor
push
pushf
ds
aaa
rcrl
mov
add
dec
sbb
inc
pop
mov
add
push
mov
mov
cmpsb
lret
scas
and
mov
insl
mov
pop
mov
pop
adc
icebp
cwtl
lcall
push
sub
mov
imul
pop
mov
popw
push
jno
iret
add
ss
cmpsb
and
loop
mov
add
scas
add
nop
arpl
mov
push
jecxz
das
xor
ret
fistl
sbb
mov
or
mov
pop
ja
pusha
test
in
inc
sub
fisubl
jne
insl
rcrl
dec
mov
sub
dec
hlt
sarb
mov
push
lock
das
scas
in
shl
fildll
inc
push
xchg
mov
mov
mov
mov
lock
or
jae
stos
test
mov
daa
pop
scas
jb
testb
rol
lods
push
leave
pop
out
fadd
mov
cwtl
xor
pushf
mov
mov
and
xor
jbe
mov
xchg
iret
test
dec
outsl
mov
mov
mov
jmp
mov
test
clc
ret
mov
and
jge
fdivs
lock
popa
inc
bswap
mov
fwait
add
daa
or
mov
lods
mov
je
push
lods
jae
jp
sbb
push
filds
div
xor
test
dec
orl
or
repz
cli
mov
pop
or
ljmp
js
call
inc
pop
xchg
xchg
inc
jnp
mov
stc
shrl
xor
data16
mov
dec
sti
xor
dec
dec
ljmp
icebp
mov
xlat
movsl
adc
jb
jmp
pop
test
dec
aam
popa
les
mov
and
jo
scas
sub
mov
shll
cmp
lcall
jg
pop
or
fs
jnp
lcall
cmp
xor
cmpsl
mov
insl
ljmp
cmpsb
cwtl
jbe
sub
adc
call
push
shl
outsb
out
xchg
shlb
mov
ljmp
push
imul
ss
jge
sar
insl
cltd
jnp
add
jbe
add
imul
outsb
push
je
ds
xchg
sahf
test
mov
pop
fwait
lahf
lods
ret
lods
scas
mov
insl
lods
fadds
dec
push
int3
in
cmpsb
or
adc
add
adc
push
dec
or
dec
int3
rcll
ss
pop
cmp
xchg
xchg
dec
aaa
jmp
repnz
hlt
xor
call
stos
sbb
xchg
add
fsubrs
cmpl
and
negb
ja
das
lds
daa
out
shlb
adc
cmp
outsb
pop
or
mov
scas
mov
cmc
js
sbb
add
es
cmp
mov
in
es
inc
loope
outsl
push
movsb
pop
mov
cltd
xorl
cld
fwait
and
add
test
push
inc
push
sbb
push
movsb
sti
mov
es
xchg
out
fsubs
or
inc
in
clc
jmp
lret
push
outsb
cmp
dec
jecxz
inc
aam
cltd
cli
sbb
cs
out
ds
ja
lods
lods
aas
inc
inc
dec
repnz
sub
outsl
rol
inc
jecxz
mov
sub
fistl
bound
je
jns
sbb
mov
call
popa
adcb
test
jge
and
popf
mov
mov
push
sub
fsts
test
test
push
popf
clc
jbe
int
mulb
pop
insl
xchg
das
outsb
jbe
push
out
stos
mov
and
mov
stos
xor
pop
or
sbb
lret
adc
mov
lds
xchg
dec
dec
mov
ficoml
mov
das
cwtl
dec
rcrl
test
mov
xchg
aad
sbbb
xor
mov
mov
in
and
mov
mov
xor
lcall
loope
jge
movsl
stos
xor
push
mov
pusha
shll
test
insl
pop
xchg
jno
out
clc
jo
push
push
push
or
addr16
fdivl
sbb
fsubl
and
outsl
lcall
and
xchg
cld
fisttpll
stos
repnz
mov
sbb
mov
mov
shrl
adc
icebp
fimull
fidivl
mov
sub
xlat
adc
pushl
rcl
out
add
mov
mov
cmp
cmpb
sub
mov
jg,pn
pop
and
sahf
mov
add
xchg
insb
dec
out
xchg
int
jne
mov
int
fs
xchg
adc
adc
mov
sub
xor
jl
aad
rol
cmpsb
mov
adc
push
xchg
jecxz
mov
rorb
ret
je
adcl
push
lock
jo
scas
sub
mov
outsb
arpl
adc
xchg
push
jle
pop
xorb
xchg
pop
mov
shlb
inc
pusha
push
dec
mov
scas
jp
cmp
xor
mov
imul
mov
fisubl
lahf
mov
negb
xchg
jmp
fbstp
mov
arpl
cmp
pop
aaa
lock
lods
sbb
ret
xor
add
inc
cs
mov
outsb
orb
aad
jbe
clc
add
mov
pop
sbb
fidivs
lods
mov
out
std
jle
adc
mov
out
mov
mov
sub
mov
clc
lahf
gs
cld
sbb
inc
mov
aas
push
int
pop
cmpb
les
pop
xor
cmp
xor
ljmp
add
jnp
push
lods
jno
aad
pop
in
test
icebp
push
clc
sbb
xor
xor
or
adc
pop
jbe
filds
test
cld
es
rol
loopne
enter
fst
xor
dec
test
in
adc
out
cmpsb
mov
jbe,pn
mov
pop
dec
mov
fildl
mov
testl
and
ja
lds
jle
in
enter
mov
mov
test
jne
scas
xchg
cld
testl
sub
je
xchg
fcom
pop
das
addb
push
mov
fwait
movsl
push
in
std
add
icebp
in
in
and
ds
sub
mov
mov
subb
or
loop
pop
nop
mov
aaa
nop
jmp
or
adc
stc
out
call
mov
mov
pop
jge
and
das
into
inc
sbb
dec
imul
std
pop
aam
and
mov
sub
inc
jp
push
xchg
loop
jl
out
xor
aad
ficomps
repnz
mov
xor
pop
call
loop
stos
or
movaps
pop
sbb
aad
xchg
ja
pop
xlat
fdivl
inc
xchg
mov
pop
xchg
lock
aaa
mov
mov
adc
jae
and
xchg
push
test
sti
adc
cmpl
xchg
popa
pop
test
push
sbb
idiv
mov
or
sahf
xor
xchg
or
push
scas
int
lods
cmp
aam
mov
aaa
inc
inc
stc
test
fbld
push
mov
jns
jns
fisubrl
sbb
inc
xchg
imul
insl
fcmovb
sbb
cltd
pop
or
pop
sbb
or
pop
jp
es
lea
sub
test
mov
jle
ret
mov
mov
fwait
or
test
les
fwait
arpl
roll
call
pop
aas
add
push
nop
mov
sbb
cs
into
mov
push
push
cwtl
mov
std
rolb
or
in
or
clc
es
imul
push
ds
into
mov
push
mov
addr16
cli
shr
or
lahf
xor
outsl
sbb
dec
int
popf
or
pop
insb
je
dec
fsubrl
incb
aaa
sub
inc
scas
xorl
insl
ja
mov
add
lret
js
outsb
sbb
cmp
arpl
ljmp
pop
cmp
aaa
std
mov
ljmp
fwait
inc
int
cmp
clc
push
push
out
fwait
pop
jne
cmp
ret
lahf
int3
inc
inc
loopne
cmp
jb
add
cwtl
inc
mull
pop
in
pop
mov
int
pop
call
mov
enter
mov
daa
ds
enter
pop
mov
fs
sbbb
cmp
je
shrb
out
mov
xor
subl
pop
imul
jmp
sbb
mov
jnp
sbb
rcrl
in
lea
cmpsb
in
stos
adc
mov
adc
xchg
out
movzwl
aaa
mov
add
push
out
cmc
push
dec
insl
add
or
cs
push
rcrb
mov
xchg
lods
and
adcl
scas
je
loope
loop
or
cmpsb
mov
add
xor
jbe
imul
iret
outsb
sub
idivb
add
fldl
mov
fld
fstl
inc
pop
dec
ror
adc
mov
aas
fwait
ss
insl
incb
fidivrl
jae
adc
icebp
hlt
ret
gs
dec
cmp
cmp
fidivl
test
pop
inc
mov
leave
fcmovnbe
mov
outsb
sub
mov
pop
sbb
in
rclb
call
push
fldenv
mov
or
fsubrl
sahf
mov
cmp
mov
adc
and
sbb
adc
mov
dec
arpl
jl
lods
xor
jnp
or
fnstcw
and
mov
inc
aad
mov
mov
jae
shll
aam
mov
or
push
push
pop
subb
lar
aam
sub
arpl
fimull
fnsave
xchg
sbb
sbb
fbstp
jne
dec
dec
mov
mov
test
fwait
test
push
mov
mov
or
mov
out
pop
loope
adc
push
es
outsl
push
add
pop
scas
jo
push
insl
mov
add
rolb
cmc
jmp
mov
jae
cld
fcmovnu
in
pop
jp
mov
inc
imul
pop
in
outsb
pusha
xor
sub
pushf
outsl
cmc
sahf
faddp
cmp
ds
cmp
loope
cmp
jp
cmp
push
fcompl
mov
mov
aaa
lock
insl
adc
roll
xchg
shrb
inc
lock
mov
dec
daa
in
lret
inc
inc
loop
aam
out
fmul
and
xor
test
outsb
int
pop
mov
pop
inc
mov
cmp
mov
ds
lret
jb
xchg
adc
mov
mov
movsb
stos
or
imul
push
into
ret
adc
lods
mov
cmpsl
fsub
aad
loope
test
xchg
je
leave
mov
sub
push
rcl
repnz
xor
orl
pop
jle
inc
in
xchg
xchg
stos
push
mov
popa
mov
fstpl
test
xchg
add
add
ret
mov
and
push
js
ljmp
ret
sub
stc
cwtl
pusha
adc
leave
mov
imul
jmp
fnstenv
cmpb
and
jecxz
les
and
pop
fwait
inc
mov
nop
aaa
sub
jmp
xchg
xchg
or
inc
xchg
inc
adc
pop
lock
lods
cmpsb
adc
or
addl
inc
outsb
inc
jl
or
adc
and
aaa
jne
pop
ret
jae
pop
jmp
jmp
aaa
outsl
ja
mov
dec
popf
push
xchg
pop
fwait
pop
out
sbb
mov
stc
push
int
xchg
push
add
fs
jl
cmpsb
dec
lahf
std
pop
pop
mov
sbb
xchg
dec
lds
test
cmp
test
jbe
xlat
pshufw
rcll
pop
xor
or
into
scas
fimuls
mov
inc
cmpsb
inc
and
sbbb
fadd
push
aas
cs
clc
stos
sub
fwait
imul
mov
int3
inc
sbb
jbe
mov
loopne
js
mov
fnstcw
fdivrp
sbb
in
dec
iret
insl
mov
enter
cmpsb
fsubr
loop
mov
xor
mov
cmpsb
stos
sub
push
lcall
mov
lahf
jne
outsb
dec
mov
jbe
mov
xchg
mov
scas
aaa
adc
inc
fadd
mov
fsubr
mov
js
sbb
outsl
aaa
aad
test
and
lock
fwait
pop
cmpb
sbb
addr16
imul
out
in
insl
push
movsl
scas
stos
test
jge
orb
or
loope
sub
loopne
mov
test
xlat
inc
mov
inc
bswap
xor
das
push
push
mov
shr
sub
loopne
mov
xchg
rcrl
inc
test
push
aam
mov
push
roll
js
mov
cltd
mov
into
lods
cwtl
stos
repnz
mov
cmp
jge
sbbb
sub
add
mov
pop
mov
mov
pusha
sbb
jmp
in
test
jo
pop
cmp
jge
in
xor
shrb
jbe
shll
negb
inc
sbb
addl
mov
aaa
mov
hlt
inc
dec
pop
mov
shl
addr16
adcb
mov
icebp
push
jne
shr
sbb
jae
or
add
popa
pop
int
pop
aaa
dec
adc
mov
jl
loope
dec
cmp
fistpl
dec
mov
dec
in
fucomp
mov
std
mov
int
loop
inc
cmp
mov
mov
add
ss
adc
lcall
mov
add
adc
es
shl
or
ret
gs
pop
jp
sub
add
sbb
int3
dec
pop
mov
mov
cmpsb
hlt
mov
cli
or
jb
dec
cmc
movsl
mov
aad
push
cld
jp
xchg
mov
or
outsl
mov
fcos
scas
test
mov
std
add
push
mov
cmp
mov
ss
ss
xchg
sub
out
insl
loopne
mov
sub
negl
adc
ss
xor
ret
js
sbb
into
stc
inc
vmovaps
fdivl
lds
jecxz
ja
fstpl
pop
add
pushf
insb
xlat
push
out
pop
in
sbb
sbb
in
lret
xchg
mov
pop
nop
fdivrl
je
divb
sub
mov
test
pop
mov
daa
out
sub
dec
xchg
mov
mov
in
pop
adc
fldl
outsb
cwtl
mov
adc
cmpsl
jge
cmp
dec
aad
fnsave
push
push
dec
pop
sahf
testl
orb
mov
sbb
shll
inc
int3
xchg
mov
test
jge
aam
inc
pop
and
loop
and
sbb
loopne
icebp
cltd
push
pop
enter
lcall
shrb
inc
shll
and
repz
mov
icebp
in
sbb
add
adc
ret
add
mov
or
test
arpl
dec
lods
icebp
scas
aaa
lock
push
js
jbe
add
jne
mov
mov
sbb
cli
adc
pushf
in
out
fdivrs
add
mov
cmp
hlt
loope
xchg
insl
mov
ljmp
pop
inc
jl
clc
fidivl
test
pop
xchg
cmpsb
fsubs
jecxz
xor
mov
ret
aas
je,pn
movsl
push
xor
mov
nop
mov
dec
pop
es
sbb
push
daa
mov
idivb
sub
push
mov
idivl
pop
or
popa
jnp
or
jb
jl
mov
jge
aad
clc
push
adc
rcr
xor
mov
ljmp
adc
js
push
mov
add
enter
jb
mov
loope
pop
pop
mov
in
cmovl
aaa
jle
hlt
lods
or
movsl
fsubrl
xchg
jne
hlt
cmp
outsb
outsl
ds
or
lret
dec
jb
and
add
in
iret
mov
loopne
adc
jno
mov
add
lods
negl
scas
add
sarb
jnp
outsb
mov
mov
jbe
lahf
mov
xor
sti
lret
xor
xchg
aad
push
les
notl
fadd
test
stos
and
loope
ret
fildl
inc
xchg
and
sbb
adc
push
sub
cmp
push
add
lahf
push
sbb
push
fistpl
test
pop
pop
adc
pop
fiaddl
or
fildll
pop
inc
scas
push
jns
int
outsb
xchg
and
in
adcb
daa
into
cs
pop
ds
push
sub
out
mov
leave
mov
mov
lret
ds
inc
and
call
sahf
add
xor
mov
adc
and
shrl
scas
sub
or
add
addl
lcall
inc
inc
inc
add
nop
add
adc
insb
sub
mov
fs
sarb
test
xchg
incl
int3
test
sbb
sub
shll
adc
mov
xchg
inc
rcrb
mov
mov
mov
sub
inc
enter
push
aas
das
xor
cmpsb
adc
xor
ja
sahf
pop
push
add
cli
cmp
mov
loopne
pop
or
inc
insl
sbbl
or
sbb
xchg
sbb
add
mov
inc
dec
jno
sub
sbb
push
nop
dec
ljmp
cwtl
push
dec
mov
push
js
es
ja
adc
aad
mov
in
and
aad
pop
nop
addb
dec
or
add
and
add
mov
outsb
jbe
pop
push
pop
cmp
cmp
sub
int
mov
or
int
dec
into
mov
push
outsl
add
and
hlt
in
push
add
inc
jp
adc
xlat
sbb
ret
adc
call
pop
add
pusha
add
jae
insl
ret
ret
repnz
repz
js
repz
mov
test
cwtl
mov
jo
jecxz
and
sar
push
mov
jl
inc
in
ljmp
aaa
ljmp
inc
loop
icebp
popf
pop
mov
pop
idiv
fsubs
pop
lret
add
adcl
jnp
cmpsb
in
mov
int
ja
mov
jecxz
pop
leave
outsb
jg
mov
dec
lods
pop
add
fs
pop
insb
sbb
inc
addr16
push
arpl
mov
adc
inc
add
push
imull
jb
xor
insb
mov
cmc
outsl
fmull
js
or
imull
inc
mov
gs
jo
fisttpl
lods
insb
add
pop
gs
adc
jbe
mov
gs
outsl
insb
cmp
xor
push
push
xchg
sbb
lahf
sbb
pusha
adc
pop
lret
fs
pusha
mov
pop
push
addr16
jmp
outsl
ja
jns
dec
adc
inc
js
jae
and
cltd
in
loopne
fdivrl
mov
cmpsb
mov
loope
adc
gs
or
mov
xor
push
mov
xor
inc
test
or
pop
mov
outsb
je
adc
das
es
cli
or
mov
je
jp
inc
jnp
les
sub
imul
loop
fldl
stos
fbstp
or
or
cli
and
sbb
cwtl
xor
dec
add
or
xor
inc
or
cmp
and
xor
ficoml
je
push
sbb
cmp
pop
aam
mov
jae
inc
outsl
movl
adc
pop
pop
shl
ret
popa
push
dec
loopne
jmp
push
lds
jecxz
lods
addb
mov
pop
mov
xchg
jae
aaa
adc
sbbl
pop
pop
pop
push
mov
test
pop
enter
dec
in
pushf
fwait
lret
or
dec
xor
xchg
cmc
enter
xor
or
push
cmp
xchg
or
jne
cmp
movb
sti
subl
push
mov
and
adc
out
dec
aam
xchg
out
pop
ret
fistps
sbb
push
pusha
cmp
and
test
push
je
lods
or
sub
cmpsb
dec
insb
les
shll
mov
pop
or
mov
or
cmpsb
inc
test
inc
push
inc
jne
push
jecxz
out
or
psrlw
jmp
jle
mov
pop
pushf
ljmp
test
je
xchg
test
push
and
xchg
xchg
ss
sbb
jbe
push
xor
jmp
sub
loop
ja
dec
jl
outsb
adc
jno
add
mov
jp
jmp
or
xor
les
ss
mov
and
pusha
jnp
jmp
into
mov
mov
xor
jle
bound
cmpsb
lock
inc
mulb
in
shr
and
adc
lahf
faddp
or
pop
mov
shr
adc
jbe
or
es
mov
gs
fcoms
mov
fidivl
adc
gs
push
sbbb
or
jecxz
das
push
or
add
push
mov
xchg
aad
and
jns
pop
push
adc
int
adc
in
or
ss
in
pop
sbb
jle
rclb
sub
mov
mov
xor
or
mov
sbb
jge
repnz
mov
sub
jmp
icebp
mov
xchg
and
out
mov
push
adc
jno
repnz
xlat
mov
or
sbb
insb
ret
loopne
int
mov
popa
mov
mov
mov
add
ficomps
jmp
fsubr
cltd
leave
ret
ret
inc
adc
jge
imul
cmpl
inc
enter
ss
xchg
xor
out
inc
insb
jns
push
mov
or
sbb
inc
sarb
into
out
xor
cmp
shrb
and
xchg
out
mov
jbe
inc
rcrl
lds
jp
mov
popf
xchg
clc
cwtl
adc
out
aaa
mov
adc
cmp
or
scas
mov
dec
js
cli
mov
aam
jg
fucomi
inc
outsb
flds
sub
xchg
adc
or
or
jmp
scas
mov
fdivrl
imul
xor
insl
aaa
icebp
push
xchg
add
into
nop
sbb
je
cmc
call
adc
jl
mov
jb
inc
push
data16
fcoms
out
stc
jne
xor
xchg
cs
pop
jge
jl
mov
inc
xchg
adc
push
push
ud2
add
outsl
pop
or
cs
sbb
cwtl
leave
adc
sbb
or
adc
rcr
mov
add
in
mov
fiaddl
rolb
and
adc
pop
loope
jnp
adc
jl
or
outsl
mov
mov
into
push
fdivl
sti
add
mov
push
jecxz
cld
inc
jle
push
shlb
popa
or
jbe
stos
adc
cmpsb
sbb
adcl
sub
push
push
cltd
mov
or
dec
lret
lea
inc
les
filds
clc
mov
movsb
and
rorb
testb
stos
js
or
inc
mov
and
mov
and
inc
or
or
adc
or
xor
pop
ffree
data16
push
add
int3
jecxz
mov
cli
xchg
add
ss
sub
mov
sbb
push
push
push
loop
stos
mov
nop
adc
out
clc
push
push
add
pop
jnp
xor
adc
aaa
and
stos
cmpl
cs
push
jae
push
mov
cmc
sti
sbb
movsb
jle
adc
aad
sti
mov
add
je
sbb
inc
lret
mov
dec
lods
lea
push
pop
push
xchg
iret
xor
adc
mov
jb
mov
fmulp
sub
jp
cmpsl
ficomps
xor
scas
dec
lcall
pop
fdivl
push
addb
fdivrl
pushf
cmpl
cmp
push
div
in
mov
rcrb
push
mov
out
icebp
push
cld
call
adc
adc
sbb
mov
rolb
or
jns
xor
or
mov
testb
popl
jns
rcll
or
and
les
push
jb
mov
pop
popf
cmpsb
cmp
and
les
cmp
jg
cld
xchg
mov
test
cmpl
mov
es
cmp
xchg
sbb
jle
add
mov
jmp
pop
mov
pop
shrb
ret
jno
lock
mov
lds
adc
push
push
adc
dec
jle
mov
rorb
es
int3
push
xor
enter
rcr
mov
cmc
and
rorb
mov
jne
push
inc
ret
push
cwtl
sbb
lea
jne
xlat
mov
mov
mov
test
add
jnp
dec
inc
addl
mov
or
dec
out
xchg
mov
stc
xlat
int3
xchg
jo
inc
js
pop
mov
lahf
cmpsl
xor
cmc
push
sqrtps
lods
fcoml
jbe
shlb
push
fistl
pop
push
push
add
jbe
push
mov
fcmovu
scas
fs
mov
pop
sbb
lcall
or
repnz
mov
xor
mov
scas
cli
movsb
jnp
cmp
lock
fiadds
pop
sub
fwait
cli
mov
jo
ret
jge
mov
push
call
decb
lock
mov
mov
jnp
in
push
fsubrs
or
add
pop
and
ljmp
imul
int
cmp
push
pusha
inc
imul
outsl
pop
and
inc
mov
sub
jl
in
pop
sbb
inc
jge
inc
xlat
hlt
in
add
fldl
fistpll
push
cli
jb
outsl
pop
test
loope
movsb
inc
or
scas
dec
lds
pop
jns
das
aaa
mov
stc
jle
mov
cmpsb
xchg
xchg
cmp
jge
add
lock
inc
dec
mov
cmp
in
in
and
inc
loopne
inc
mov
test
jbe
jb
xchg
mov
cmp
xorl
test
mov
bound
cs
rcl
mov
pusha
xchg
lcall
paddusw
xchg
adc
xchg
cmpsl
les
or
push
out
hlt
sbb
cmp
int
push
roll
lods
popf
outsl
aaa
repnz
cmp
aam
into
fdiv
cmp
mov
movsl
xchg
in
xchg
loop
sbb
add
sbb
jno
pop
inc
imul
and
in
rclb
add
and
shr
mov
hlt
test
cmp
inc
inc
aad
jne
cmp
repz
add
mov
pop
jbe
aam
imul
or
lods
or
xor
dec
cmp
xor
mov
jl
mov
pusha
xor
out
adc
in
insl
test
das
mov
cmp
insb
imul
clc
shrb
ja
test
or
js
jg
mov
xchg
outsb
fadd
jae
push
pop
outsb
dec
bound
push
lcall
negl
dec
jmp
outsl
mov
stc
insb
jb
xor
filds
mov
js
ja
ja
inc
jmp
test
fwait
int3
fcoml
xchg
js
orb
movl
lods
sbb
je
mull
sbb
jl
je
fstps
cmpsb
xchg
movsl
outsb
pop
fwait
mov
xchg
inc
jp
pop
sbb
test
sbb
cmpsb
mov
adc
movsl
sbb
push
mov
in
mov
xorb
add
adc
in
call
xor
ds
sub
mov
inc
mov
es
add
testb
aam
xor
sub
lret
pop
lods
shll
stos
adc
jmp
mov
loopne
cmp
pop
adcb
outsb
mov
pop
jg
scas
xchg
mov
sub
jbe
add
mov
adc
dec
insl
jmp
ret
inc
inc
call
leave
push
sbb
mov
lea
and
lods
mov
mov
loope
sarb
test
dec
adc
xchg
mov
or
mov
push
jg
cwtl
jge
loop
bound
sbb
lock
outsb
fistl
mov
popa
inc
js
sti
and
mov
push
adc
in
fstl
sub
mov
dec
adc
js
add
ret
bnd
and
inc
and
or
imul
sbb
push
add
and
jecxz
outsb
xchg
rcrb
or
inc
cld
les
mov
es
call
mov
mov
aaa
push
add
lret
stos
add
icebp
es
jo
pop
fistps
cmp
adc
cmp
jb
or
mov
scas
negl
daa
add
arpl
mov
aas
popa
or
and
jb
adc
lret
push
sub
xor
or
rclb
mov
pusha
inc
jle
xchg
js
cltd
jecxz
mov
inc
js
push
fsts
in
adc
xor
shl
mov
mov
adc
inc
js
mov
sbb
pop
jbe
clc
inc
xchg
movsl
orl
js
xchg
pop
movsl
movsl
call
insl
lret
leave
mov
add
rorl
lock
stos
mov
push
dec
jp
dec
ret
andl
dec
enter
jnp
mov
pop
icebp
or
add
adc
dec
nop
push
test
out
jmp
cmp
mov
nop
loop
add
loopne
push
cmc
jg
mov
lock
add
jns
or
fildl
cmpsl
pop
dec
sub
pop
icebp
stos
out
dec
pop
enter
pop
mov
stc
andl
mov
sbb
mov
inc
and
loope
or
xor
gs
and
loopne
fst
xchg
in
pop
mov
mov
into
xchg
adc
clc
push
test
inc
xchg
shrb
fidivrl
mov
subb
adc
pushf
inc
or
lds
xor
adc
fldl
sub
mov
pop
push
sbb
jl
lods
testl
jbe
in
ret
sahf
and
sub
mov
add
bound
cmp
leave
das
ret
add
lahf
ss
pmuludq
lret
add
mov
addr16
dec
lcall
jbe
je
adc
hlt
adc
jmp
jle
pop
and
push
cltd
cmp
fistl
subl
jecxz
mov
gs
add
pop
aaa
sub
shrl
sbb
inc
enter
jo
rorl
lock
dec
icebp
adc
mov
mov
into
sbb
add
or
in
test
negb
lret
call
inc
jge
in
jbe
notl
fcompl
cld
inc
pop
xchg
push
ficoms
rorl
jne
call
or
mov
sbb
nop
push
adc
cmpsl
pop
test
lret
push
lahf
aam
push
add
popa
in
push
arpl
inc
lahf
in
jne,pn
in
dec
movsl
add
xor
xchg
aam
out
stc
jo
stc
push
add
les
mov
in
push
push
dec
mov
xchg
mov
and
dec
lods
subl
stos
push
mov
pop
jo
adc
sbb
pop
mov
push
sbb
and
push
sbb
jae
lret
cmp
loope
lahf
push
mov
ret
fwait
decl
popf
push
mov
cwtl
and
jae
test
and
sbb
movhps
imul
and
and
mov
imul
pushf
aam
jns
lods
mov
jg
push
mulb
mov
pop
sbb
jge
add
mov
in
inc
loop
cmc
es
dec
popa
test
and
inc
and
inc
pop
mov
imul
xchg
lock
test
xchg
aaa
xor
ljmp
and
int
inc
shll
xchg
mov
xchg
or
cmpsb
adc
hlt
add
xchg
push
or
mov
dec
cmp
loop
gs
mov
adc
sbb
mov
sbb
shlb
push
xlat
jmp
insl
dec
ret
or
ljmp
and
jl
xor
stc
inc
sarb
adcb
mov
push
ja
lds
ret
es
xlat
pop
bound
in
pushf
mov
pop
pushf
ds
inc
sub
add
xchg
out
mov
lods
and
fldenv
fldt
sahf
ja
push
andl
jne
and
mov
mov
cmpsb
cmp
adc
add
dec
nop
data16
mov
stos
push
push
push
in
cltd
push
inc
loop
stc
sub
dec
mov
inc
inc
add
jne,pn
push
jle
xchg
cld
pop
enter
inc
cmp
mov
dec
aaa
in
orb
inc
les
xchg
lret
mov
jle
lods
add
jne
or
mov
das
mov
mov
add
in
orl
and
fildll
xorb
test
and
cmp
cmp
les
sbb
imul
lret
ja
fistps
ljmp
cs
icebp
fiaddl
shll
push
ret
dec
xchg
mov
jno
or
in
enter
inc
jecxz
add
fldcw
mov
inc
andl
xchg
dec
sub
sbb
ss
roll
mov
stc
adc
jp
aad
push
lcall
jmp
lcall
mov
or
cwtl
icebp
xor
jns
int
inc
fsubrs
and
imul
adc
mov
jl
stos
xchg
jo
stos
push
js
xchg
test
sub
jl
mov
ret
cmpb
cmc
xor
cmp
imul
les
test
dec
mov
add
ret
cmp
stc
jmp
xor
xchg
jmp
push
jnp
mov
xlat
lds
dec
andb
hlt
and
sbb
adc
fs
inc
xor
pop
aad
mov
inc
ljmp
mov
cli
popf
jp
xchg
or
out
in
jmp
add
add
xchg
pop
ret
cwtl
dec
dec
cmp
repnz
mov
lds
mov
xor
dec
loopne
jne
push
fcompl
dec
int
adc
mov
xchg
cli
rorl
push
xchg
jmp
daa
and
mov
mov
and
fidivrl
jns
dec
push
dec
popa
fs
aam
jg
mov
xor
icebp
stos
loopne
addr16
xchg
pop
popf
inc
repz
mov
adc
andb
cmp
sbb
mov
lcall
test
sbb
sub
mov
sahf
mov
out
pop
mov
push
movsb
jb
ret
hlt
lcall
jmp
xor
add
mov
icebp
movsl
lods
dec
jae
nop
xchg
orb
test
mov
xchg
sbb
int3
push
clc
sbb
mov
in
loope
mov
cmovbe
cwtl
mov
push
cld
lret
out
rcrl
addps
or
pop
mov
stc
roll
fidivrs
adc
je,pt
xor
in
jne
mov
add
sub
aas
push
fucomi
dec
push
pop
lahf
icebp
std
andb
aas
es
loopne
ror
jecxz
sti
xchg
cmp
push
jmp
cmp
xchg
in
adc
cmp
incb
push
lods
outsl
sbb
or
sub
and
or
int3
mov
in
xchg
dec
fucom
jnp
aad
pop
jbe
push
test
ds
adcb
insl
fwait
int
adc
negb
sahf
es
push
pop
out
adc
xchg
add
les
xchg
or
inc
js
fucom
imul
dec
lock
lahf
imul
fstp
rorl
add
and
push
push
iret
cmpsb
and
std
xchg
pop
repz
es
mov
cmp
xchg
aam
xor
and
aam
test
cmp
jno
cmp
mov
popf
je
cmp
push
xlat
movsb
scas
aaa
xchg
sub
jecxz
push
in
xor
shll
outsl
pop
out
fs
mov
rorl
loope
dec
mull
loopne
or
repz
push
push
sbb
push
or
inc
sub
orb
mov
sub
orl
fildll
pop
mov
dec
repz
jb
push
decl
sbb
pusha
cltd
inc
pop
xchg
cwtl
ret
iret
xchg
push
in
test
out
inc
mov
push
in
and
xchg
jo
xor
nop
out
shll
cmp
lods
dec
push
shlb
imul
divb
jae
push
or
sbb
stos
lea
xor
add
rcrl
in
cmp
mov
mov
mov
push
dec
pusha
loop
xorb
cmc
loop
mov
cmpsb
cmpl
fdivl
sub
nop
push
add
rorl
fs
aas
pop
mov
push
call
sbb
mov
adc
jecxz
lcall
and
shr
mov
push
sahf
xchg
mov
mov
in
lcall
mov
cld
ljmp
ret
xchg
punpckldq
cmpsl
mov
in
lret
push
cmp
push
jge
jne
pop
add
int
dec
jbe
mov
xor
dec
mov
mov
test
and
push
arpl
add
sbb
mov
ret
mov
repnz
push
mov
ret
loop
popa
or
jle
ds
ljmp
xchg
movsl
or
pusha
leave
ret
repnz
inc
or
cli
test
push
icebp
xchg
ja
pushf
mov
inc
inc
popa
das
pop
push
or
mov
sub
pop
mov
arpl
pop
sub
psubw
aam
xchg
test
clc
adc
dec
sub
call
mov
idivb
pop
add
cmp
shl
or
dec
sbb
or
mov
rcrl
jae
sub
push
and
inc
imul
pop
outsl
lret
push
dec
ret
out
push
lahf
inc
add
mov
sbbl
and
or
cmp
lcall
or
sub
cmpsl
jmp
pop
push
jmp
xor
icebp
fbld
xor
andb
inc
add
orl
bound
pop
loope
ljmp
xchg
or
or
cmpsb
pop
sbb
je
sbb
and
fdivr
push
cwtl
inc
shlb
sub
pop
enter
nop
sub
or
icebp
xchg
lret
mov
mov
xor
call
mulb
push
clc
sub
pop
pop
mull
xor
call
cmp
jmp
mov
les
imul
jne
pop
mov
or
adc
xor
push
ret
sbb
cmp
aas
cld
and
or
addb
dec
add
xor
cmpsb
movl
addl
lods
es
in
mov
push
js
pop
inc
data16
inc
imul
sbb
stos
adc
adc
push
roll
sbb
rolb
adc
mov
popa
jo
jo
xchg
das
ret
push
rclb
nop
jnp
add
jecxz
gs
sub
lret
negl
out
dec
sbb
popf
cwtl
addb
clc
imulb
dec
call
sbbb
movsb
push
dec
push
push
and
sbb
gs
aas
fadd
adc
xchg
and
jns
add
push
fistl
fcoms
lahf
cmp
out
data16
js
mov
sbb
insb
roll
sub
or
pushf
nop
fs
es
ljmp
scas
dec
insb
loopne
jo
jecxz
leave
icebp
pop
dec
jl
lret
jb
xchg
cli
addr16
inc
dec
mov
ret
ljmp
js
rorl
pop
inc
addr16
call
rcll
pop
push
jl
mov
pop
pop
push
fnstenv
lds
shlb
cmp
cwtl
mov
iret
fs
and
xchg
popa
shld
es
xor
sub
mov
cmc
inc
outsb
xchg
ret
add
lds
mov
std
lahf
iret
out
push
pop
inc
jne
mov
mov
or
out
fs
adc
popa
and
lret
mov
xor
ljmp
ret
mov
rol
mov
test
push
mov
and
mov
push
cmp
jbe
cmp
adc
and
add
shlb
cmp
sahf
sbb
out
pop
adc
jnp
or
lahf
mov
scas
inc
add
nop
push
pop
lock
addr16
cld
cld
dec
mov
xchg
jae
mov
icebp
cmpsb
cmpsb
imul
sub
gs
subb
mov
dec
pop
lods
mov
shlb
xor
enter
xchg
adc
jecxz
sbb
sbb
inc
sbb
push
add
pop
lods
and
adc
outsl
adc
adc
mov
mov
and
inc
mov
clc
adc
inc
push
sub
mov
push
loop
popf
insb
mov
pop
sbb
jae
mov
outsl
cmp
sbb
jge
push
mov
pop
add
or
mov
out
les
mov
dec
mov
mov
jge
test
jne
mov
test
push
inc
lea
popf
sti
xchg
sub
addl
ret
jb
loop
push
imul
cmp
ja
cld
jp
push
cmp
testb
cwtl
movsb
dec
fstpl
push
cmp
lock
cmp
sbb
shrb
push
fwait
mov
pop
push
mov
shlb
call
push
add
jecxz
pop
or
fdivs
push
jge
jne
dec
push
mov
add
loopne
push
inc
sbb
xor
pop
in
cmc
inc
lcall
dec
ficomps
packuswb
lods
enter
iret
sbb
mov
fwait
adc
negb
push
cld
cmp
repnz
stc
pop
or
imul
jo
jmp
std
fisubs
cli
sub
or
stos
mov
and
subl
pop
adc
pop
dec
call
clc
inc
mov
inc
lret
dec
rcr
sub
stc
cmp
pop
nop
subb
adc
mov
shll
xchg
cli
pop
gs
cmc
xlat
popa
xchg
xor
sbb
test
lock
lahf
push
fiadds
es
xor
cmp
lock
inc
cwtl
push
insb
push
popa
jecxz
mov
push
into
jmp
idivl
cmp
mov
and
cmp
stc
xchg
pusha
xchg
push
gs
pushf
pop
add
sbbl
enter
pusha
ret
mov
cmp
subb
scas
inc
loopne
pusha
mov
arpl
mov
jne
push
cmp
sub
xor
or
mov
xchg
add
mov
je
insl
xchg
xchg
aaa
sbb
and
aam
cmp
fisttpl
sbb
add
ljmp
outsl
xchg
mov
sub
push
test
nop
ffreep
adc
dec
mov
and
dec
stos
xchg
jmp
jle
jmp
int
ja
neg
push
xor
test
sti
js
push
daa
movsb
ljmp
lcall
or
sub
mov
mov
and
cmp
gs
je
lret
inc
rcl
fs
imul
lock
or
mov
sahf
push
dec
cmp
push
and
stc
jnp
pop
mov
add
pushf
pop
icebp
inc
pop
mov
aas
sbb
sti
fildll
xor
push
neg
add
imull
popa
popa
jmp
aaa
fnstenv
fnstenv
xor
daa
and
mov
std
daa
pop
xchg
stc
adc
xchg
xchg
fmuls
imul
outsb
addr16
iret
xchg
lds
aaa
sbb
ljmp
sub
repnz
insb
xchg
add
ror
fs
jb
fiadds
dec
cmp
movsb
jg
orb
popl
in
and
loope
mov
insb
add
cli
pop
dec
cli
sbb
mov
cmpsb
imul
sbb
adc
xchg
mov
xchg
outsb
mov
jge
xchg
push
mov
inc
int3
js
test
rcrl
fidivrl
test
loop
jno
and
xor
loop
movsb
cmp
bound
mov
outsb
nop
sti
ljmp
js
scas
xchg
push
jle
push
scas
ret
jmp
mov
cli
jp
or
push
les
movsl
sbb
cld
xchg
adcb
add
and
sbb
pusha
mov
or
xchg
loop
push
ja
push
mov
in
mov
jl
and
std
or
mov
popa
adc
and
test
or
lods
lahf
pusha
nop
in
shl
icebp
es
mov
daa
cmpsl
leave
mov
mov
pop
mov
insw
in
mov
loop
ffree
stos
xlat
mov
dec
ret
adc
icebp
aad
daa
negb
shll
xor
popa
or
adc
jo
xchg
pop
gs
cmp
rcll
std
push
add
in
mov
mov
cmpsl
fsts
sbbb
lds
or
xor
adc
sub
push
stos
dec
aaa
or
mov
cmpb
adc
dec
or
shll
inc
pop
int3
repz
mov
mov
notb
mov
or
shl
sub
cmp
xchg
add
test
mov
or
ret
sub
mov
add
and
or
test
cmp
or
test
pusha
jbe
call
mov
cmpsl
adc
xchg
out
mov
sub
lret
popf
fistpl
mov
sub
mov
test
mov
push
inc
scas
sti
push
mov
adcb
lds
jmp
sbb
push
or
les
xor
push
imul
scas
mov
sbb
dec
inc
roll
adc
xchg
in
push
ret
mov
push
jge
fs
jp
ljmp
cmp
jns
sub
mov
sbb
jns
mov
nop
xchg
test
outsb
jle
insl
adc
mov
xlat
fs
add
clc
lret
add
shlb
jbe
daa
xor
cli
push
or
into
movsb
iret
jge
ja
lret
add
es
mov
adc
jns
push
jl
jns
push
jb
jge
xor
xchg
ret
xchg
mov
pusha
fcom
jno
jb
adc
pop
mov
pop
xlat
sahf
xchg
mov
mov
xchg
sti
or
ja
sbb
xchg
mov
inc
sbb
and
mov
scas
push
mov
fidivl
mov
hlt
repz
leave
lods
mov
push
dec
dec
lods
adc
lcall
or
test
xlat
gs
out
jp
gs
dec
ret
enter
aas
fisubl
mov
ss
out
add
leave
add
insb
stos
addl
mov
inc
fildll
pop
ja
sti
cmp
call
mov
pop
mov
aaa
aaa
jnp
aam
ljmp
sbb
inc
add
sub
loope
pop
data16
pop
shlb
mov
cmp
in
rolb
add
lret
pop
add
jno
cmp
xchg
adc
clc
push
out
lahf
push
xchg
sbb
scas
mov
push
daa
add
xchg
testb
mov
fs
or
jg
push
pcmpgtd
sbb
aad
adc
mov
xchg
push
cmp
loopne
push
adc
lcall
lret
lcall
or
mov
outsb
fldenv
xchg
daa
push
adc
or
lret
cmpl
sub
mov
xchg
mov
lods
or
int
jmp
fisttpll
test
test
jle
add
sub
outsb
popa
fs
pop
jne
loope
notl
cli
lods
xchg
std
push
rcl
xchg
xor
mov
icebp
jmp
mov
mov
push
fildll
in
and
je
push
jmp
sahf
cmp
cmp
mov
movsl
pop
aas
cmp
sub
pusha
in
sbb
lock
ja
cmp
inc
mov
adc
adc
mov
fcmove
stc
pop
jb
stos
pusha
mov
adc
or
mov
or
pop
fnstcw
out
mov
cmp
call
cltd
rcll
jecxz
cwtl
inc
jle
cmc
sub
push
xchg
int
rcll
cmpsl
iret
dec
add
mov
cmpsl
stos
xchg
outsb
pop
testb
jl
stc
movsb
cltd
push
cwtl
je
mov
inc
lods
mov
mov
je
loop
mov
mov
mov
aas
adc
xlat
inc
cmp
js
push
or
or
or
jae
leave
ret
sub
ljmp
movsb
dec
sub
pop
pop
push
in
xor
inc
sbb
lea
out
rcrl
pop
add
xchg
adc
sub
lods
or
adcl
xchg
les
xchg
dec
rorb
and
mov
bound
xor
or
jmp
xchg
sbbl
popa
nop
mov
hlt
push
notb
or
push
shlb
mov
mov
adc
xor
arpl
xchg
mov
andl
push
and
sbb
push
pop
sbb
int
mov
mov
out
push
inc
jbe
add
cmp
shlb
mov
mov
dec
leave
out
xchg
aas
pusha
popa
dec
out
sahf
pushf
repnz
xchg
xor
inc
inc
cmpsl
cmp
push
mov
fprem
add
dec
or
xchg
daa
imul
movsb
test
arpl
ds
xchg
dec
inc
enter
fistl
fdivrl
adc
inc
dec
lahf
stc
cwtl
jbe
and
fdecstp
fstl
out
sub
rcll
mov
pop
and
lds
sub
add
lcall
push
mov
mov
stc
rorl
xor
pop
iret
enter
rorl
bnd
inc
xchg
mov
inc
fists
push
fsubs
mov
loopne
push
sub
add
push
mov
jne
mov
jge
push
inc
rcl
and
xchg
sbb
sbb
lea
jmp
sbb
jo
mov
mov
pop
rclb
pusha
in
pop
testb
bound
int
push
outsb
mov
sbb
sbb
pusha
jae
push
out
dec
imul
loop
push
movsb
imul
lds
push
push
pushf
popa
repnz
cmpsl
mov
mov
mov
adc
filds
or
std
cltd
imul
jns
pop
mov
push
dec
mov
mov
int
scas
aam
das
jmp
hlt
xchg
mov
hlt
or
es
push
out
xor
into
jge
push
mov
gs
xor
test
leave
test
or
aas
fdivl
and
sbb
xor
clc
lock
aas
clc
cld
leave
sbb
jmp
jg
xchg
adc
nop
out
in
nop
shrl
mov
mov
std
add
pop
dec
cmpsb
inc
pop
addl
jp
imulb
xchg
and
mov
je
decl
outsl
sub
jnp
pop
and
mov
pushf
and
pop
pop
out
lcall
sbb
jo
sbb
mov
aam
jg
movsl
and
outsl
xchg
mov
xchg
mov
iret
int
pop
push
push
imul
movsl
mov
jo
xchg
insb
xor
mov
pop
ds
pop
rclb
cmp
imul
fsincos
js
lods
xchg
cmp
stos
sbb
add
xor
js
adc
shrl
in
and
test
popf
xchg
push
mov
pop
push
addb
jnp
mov
test
sub
push
dec
mov
dec
push
cwtl
ss
inc
jo
mov
fwait
insb
jb
push
jg
dec
adc
push
leave
lods
jp
leave
fistpl
test
jns
xchg
cmc
or
adc
mov
and
or
xor
mov
dec
data16
ret
rol
repnz
loopne
cs
mov
lahf
scas
test
jge
mov
insl
jo
fcmovnu
xor
mov
xor
inc
jno
push
gs
dec
mov
test
inc
ret
sbb
popf
cmp
fildll
add
add
lcall
xchg
xchg
push
xchg
xchg
or
or
sbb
imul
std
aaa
add
push
stc
inc
mov
shrb
pop
push
and
mov
lcall
mov
int
cmp
pop
dec
push
mov
mov
out
outsl
ret
rcrl
sub
and
dec
inc
fwait
ds
sti
xchg
bnd
mov
jl
and
lret
shr
sbb
mov
js
cmp
xlat
sbb
dec
cmpsb
jge
or
dec
testl
xchg
sbb
ret
addr16
call
ja
and
icebp
xchg
jg
cmc
cmc
je
or
xor
fwait
sub
dec
dec
subb
xchg
xchg
push
mov
dec
hlt
cmp
sbb
decl
dec
xchg
inc
je
cmp
or
ds
enter
cmpl
test
jae
in
ljmp
xor
dec
outsb
adc
adc
xlat
inc
jnp
subl
mov
adc
clc
movsb
xchg
jnp
pop
loop
int
jmp
or
xor
fs
je
mov
insb
hlt
mov
jbe
sbb
xchg
xchg
cmc
dec
test
lods
inc
test
adc
xor
orl
aaa
fsubp
mov
add
repnz
cmp
je
add
and
fs
repnz
stos
loop
push
ljmp
pop
cmc
push
mov
lea
stc
cs
movsb
out
jle
sar
mov
std
clc
push
scas
sbb
mov
test
xor
jmp
mov
mov
filds
add
and
icebp
add
dec
sbb
xchg
push
pop
push
push
orl
mov
push
sbb
sub
fidivs
cmp
inc
pop
cltd
cmp
pop
add
jb
add
jo
pop
dec
imul
pushl
and
push
mov
add
int
frstor
push
inc
aad
jl
inc
jge
stc
ds
or
outsb
dec
ss
mov
and
xor
call
pop
or
rolb
mov
in
cmpsb
jae
pop
test
nop
adc
shll
sub
sbb
or
sub
xchg
pop
inc
ds
clc
imul
xor
mov
xor
int3
mov
jp
cmp
cwtl
into
add
mov
mov
rorb
mov
jl
inc
aaa
adc
add
cmp
outsl
sbb
ret
out
xor
mov
jecxz
cmpsb
cmp
scas
lock
xchg
lea
cmp
fcoml
into
lock
sbb
fadd
pusha
push
push
test
call
insl
cmp
pause
fmul
jl
sbb
in
mov
rolb
jp
mov
std
inc
andb
xor
sbb
inc
inc
in
adc
add
pop
iret
xchg
iret
sub
pop
push
push
or
adc
ja
fs
xchg
pop
inc
arpl
pop
cmc
outsb
shlb
scas
add
mov
xchg
shll
ret
pop
mov
idivb
loopne
sub
fld
addr16
sub
test
mov
xor
jmp
test
cld
inc
and
cmpsl
jl
add
push
out
imul
imul
mov
pop
adc
pop
shlb
ret
icebp
jecxz
ds
aad
out
or
jg
arpl
jns
lea
pop
jo
lds
ljmp
mov
and
xchg
lret
sub
ljmp
rorl
and
adc
xor
cmp
push
into
inc
xor
leave
sahf
flds
mov
movsb
add
leave
dec
jnp
ds
clc
xchg
cmp
add
imul
inc
or
or
ss
adc
pop
adc
xor
cmp
enter
addr16
sbb
and
adc
enter
pop
xor
stos
test
das
adc
mov
pop
js
mov
ret
mov
xchg
pop
xchg
add
je
mov
and
pop
ljmp
mov
mov
sub
sub
sti
cmpb
jns
ss
add
daa
scas
sub
push
fldenv
mov
sbb
repz
mov
pop
jl
loopne
jp
jae
mov
xchg
rcrb
aaa
notb
sbb
sbb
imul
repnz
push
jecxz
icebp
loop
xor
insb
imul
rorb
subb
add
dec
sahf
dec
xchg
push
bound
fs
cmp
outsl
icebp
and
cmpsb
cmpsl
inc
cld
hlt
mov
push
xor
xchg
push
js
inc
scas
adc
imul
xchg
sub
xchg
lcall
or
inc
ss
scas
pop
xor
lcall
rcll
sub
rcrl
fisttpll
add
dec
testb
leave
dec
sub
inc
repnz
pop
je
pop
sahf
inc
ss
add
clc
pop
push
pop
xchg
add
lds
or
inc
xor
add
dec
fidivrl
mov
push
pusha
cmp
mov
or
jle
push
sub
outsb
add
jo
xor
mov
adc
int
pop
xchg
les
or
sub
sbb
add
inc
mov
cmp
pop
dec
push
dec
imulb
add
mov
jmp
enter
iret
dec
scas
inc
mov
mov
pop
push
mov
adc
adc
cs
pop
test
cmp
icebp
mov
dec
mov
lea
flds
fwait
xchg
inc
mov
or
icebp
mov
pop
arpl
stc
xchg
and
nop
fldcw
div
fsts
inc
adcl
insl
stos
push
jmp
inc
sahf
mov
push
llwpcb
ds
cmpsb
sub
into
and
dec
in
jno
jecxz
fnstsw
fistl
dec
pusha
jnp
rcrl
test
or
lret
mov
mov
xor
lods
and
push
cmp
add
jl
or
pop
sbb
sub
arpl
mov
stc
sbb
mov
adc
daa
sbb
dec
or
add
xor
mov
adc
rclb
and
and
sub
lret
scas
aad
push
adc
add
adc
sahf
cld
dec
sbb
out
test
xor
mov
dec
or
daa
inc
cmp
inc
mov
lods
in
pop
mov
fwait
mov
mov
int3
bound
jo
ret
addr16
roll
push
xchg
cmpsl
das
fcomps
out
or
scas
pop
jo
push
int
xor
sbb
ja
xlat
dec
mov
fsubs
jp
jp
add
inc
add
pop
or
cli
ret
dec
ror
xchg
imulb
fisttpl
push
movsl
push
pop
imul
mov
xchg
aaa
and
pop
or
faddl
sahf
mov
mov
inc
outsb
rorl
int
xlat
sub
jnp
mov
push
dec
inc
sbb
loop
int3
fildl
pop
out
add
adc
mov
dec
pop
stc
icebp
xchg
sbb
mov
aam
sub
or
enter
stos
dec
rcrl
dec
rcrb
push
imul
aaa
dec
icebp
loope
popa
popf
iret
or
or
sbb
adcb
out
xchg
addr16
push
es
xor
and
rorl
int3
dec
and
xchg
mov
imul
sbb
pop
imul
mov
jo
push
cmp
xorb
push
popf
cmp
fildl
xor
add
adc
cli
cmp
sbb
aas
dec
inc
fisttps
andl
das
ja
push
rcr
inc
fs
mov
sub
mov
test
cs
jg
lcall
das
std
inc
fs
lret
fisttpl
jmp
sbb
aaa
add
sub
imulb
lods
icebp
or
xchg
cmpsl
push
mov
add
rcrb
mov
pusha
les
sahf
inc
jns
adc
aaa
in
roll
stos
mov
dec
outsb
sbb
fyl2xp1
pop
push
and
lds
int
push
addb
sbb
dec
movsl
scas
shll
loopne
or
lcall
fs
pop
shl
lret
cli
pop
cmp
adc
sbb
mov
cmp
imul
repz
push
xor
icebp
push
pop
mov
add
aaa
es
leave
fstpl
repz
sbb
mov
imul
or
mov
stc
pop
mov
popa
hlt
mov
xor
add
stos
or
out
pushf
sbb
cmp
inc
sub
fisttpll
test
xor
nop
push
or
push
mov
add
xor
les
mov
loopne
int3
mov
shlb
notl
sti
adc
repnz
sbb
ja
xor
addr16
mov
xor
xchg
or
imul
or
fs
xchg
pusha
repnz
cmp
dec
cmp
fidivl
push
sbb
divl
rclb
shrl
fidivs
xor
dec
add
mov
fnstsw
outsl
push
les
repz
fwait
pop
por
jnp
jns
mov
xchg
push
mov
pusha
in
jae
sbb
adc
cs
jnp
mov
adc
addb
sbb
pop
mov
inc
negl
sbb
cs
sahf
pop
lret
mov
mov
jge
mov
dec
sbb
mov
add
adc
push
inc
sahf
push
test
pop
dec
xor
pop
mov
int
pop
shll
lcall
shll
into
inc
mov
cmp
or
xchg
jle
sbbl
xchg
add
pop
xor
imull
push
dec
arpl
int3
loopne
xchg
scas
dec
dec
mov
ds
icebp
jb
fbld
lahf
ret
adc
sbb
inc
xor
aam
add
mov
jmp
jl
mov
jg
mov
icebp
mov
rorl
loop
arpl
mov
insb
aas
orl
shrl
sub
adc
xchg
cmpsb
jp
out
cmp
in
cli
in
jo
mov
inc
test
sahf
sarl
cli
jmp
push
lods
xchg
sti
xor
mov
pop
jnp
dec
jbe
add
subb
jnp
sub
ret
jg
shld
jbe
fcompl
sub
add
insl
fs
loopne
sbb
add
fadd
dec
sbb
xor
sbb
cmpl
inc
jle
in
out
push
arpl
mov
cmp
rorb
xor
popf
inc
or
jecxz,pn
xor
or
mov
xchg
mov
inc
loope
mov
out
call
ss
pop
in
aaa
cmp
and
ljmp
xchg
nop
and
stos
out
call
stos
fsubs
js
rclb
aas
jg
and
test
je
aam
sti
mov
mov
xchg
jne
outsl
out
shrl
cmpsb
pop
mov
enter
leave
sbb
sbb
pop
jns
dec
cmp
popf
in
or
push
cmp
xor
or
sarl
bound
push
jmp
or
xor
insb
pop
pop
add
mov
ror
cmpsl
xor
cwtl
ret
fisubs
push
adcl
pushf
cltd
movsb
stos
into
scas
mov
adcb
mov
pop
popf
movb
and
in
subl
cmp
stos
out
push
in
dec
adc
les
inc
je
insb
mov
jmp
inc
xor
push
mov
dec
and
das
cmp
cmc
dec
and
dec
pushf
les
pop
decb
repz
cmpl
pop
sub
inc
or
cmp
idiv
dec
lds
popf
fs
or
inc
flds
jl
loope
int
daa
xlat
sbb
inc
in
pop
xchg
inc
and
cmp
hlt
mov
add
dec
sbb
sbb
insb
cli
bound
sub
imul
lret
mulb
dec
or
adcl
outsl
jae
pop
sahf
xor
sbb
popa
lods
enter
sub
inc
stc
sbb
stos
pop
lea
decl
pop
inc
inc
adc
sub
xor
repz
rclb
loope
aad
sbb
jb
push
xchg
cltd
sarb
stos
or
shr
and
pop
scas
pop
jae
add
jbe
in
popa
or
mov
std
inc
xchg
rcll
scas
xor
push
sahf
scas
pop
ficompl
xor
aaa
rclb
pop
dec
pop
mov
es
jecxz
int
xchg
jecxz
jl
add
push
rol
test
inc
cmp
inc
or
stos
mov
das
cli
fcomip
in
imul
cwtl
in
and
jbe
jmp
ljmp
fsts
jle
push
pop
out
mov
xor
fwait
jae
and
pop
jnp
add
scas
jns
inc
negl
fmul
cmpsl
xchg
mov
or
mov
sahf
xchg
out
enter
dec
add
std
push
inc
dec
inc
fcoms
fs
loopne
lock
repnz
cmpsl
sbb
enter
push
outsl
nop
lea
adc
jb
sbb
rolb
loopne
outsl
xchg
adc
cmpsb
mov
lock
push
and
das
cmp
cmp
xchg
push
fstps
adc
daa
sarl
divb
icebp
je
jmp
mov
sbb
sbb
mov
sub
jns
cmp
stc
adc
js
ja
ljmp
adc
in
cmp
mov
push
add
cmc
popf
xchg
sub
data16
enter
cmp
and
in
jge
jns
jno
in
cmpsl
fbld
add
cmp
lock
pop
fs
sarb
ret
mov
leave
es
movsb
fsubs
test
fs
lods
fmuls
adc
and
sbb
lock
push
loopne
jbe
fisubs
cmp
push
cmp
aas
lods
xchg
clc
adc
lret
lahf
xor
inc
sahf
xchg
aaa
xchg
sbb
push
and
out
lret
xchg
mov
add
xchg
int
mov
iret
mov
xchg
aad
cmovno
and
adc
imulb
or
pop
shrb
fcoms
lds
sbb
insb
aad
in
cmpsb
or
clc
enter
mov
pop
and
in
add
lret
int
pushf
and
xor
or
out
push
outsl
js
jg
cmp
aad
out
mov
aas
shl
pop
mov
pop
test
movsb
movsl
mov
mov
adc
cmp
cmpb
rcrl
mov
push
jecxz
stos
push
js
push
repnz
bound
das
add
dec
adc
sub
pushf
fistps
cmp
subl
imul
adc
lods
loopne
ret
orb
rolb
mov
les
add
ds
push
fwait
mov
adc
lods
and
ja
sti
cmp
ret
mov
lahf
ror
cmpsl
movsb
int3
or
bound
cld
icebp
add
or
push
inc
and
jecxz
xchg
mov
mov
xchg
or
hlt
loope
mov
xchg
shlb
ret
xchg
sahf
cwtl
add
xchg
push
and
inc
dec
in
cmp
sub
mov
cmp
leave
loope
fs
xor
lods
pop
popf
and
sbb
insl
loopne
shrl
addr16
test
mov
aam
aas
hlt
mov
xchg
sub
push
cmp
jb
xor
sub
inc
pop
js
in
add
fadd
repz
jmp
bound
ljmp
or
ss
xchg
lds
mov
mov
pop
sbb
addb
lret
sub
les
jo
sub
cmp
les
and
hlt
mov
and
and
pop
jns
das
fisubrl
cs
aad
je
out
and
add
js
inc
mov
fsubs
add
xchg
adc
push
sbb
jmp
nop
pusha
fisttpl
jne
out
or
ljmp
inc
mov
and
inc
jecxz
inc
push
xchg
dec
sub
mov
fisubrl
testb
es
test
mov
hlt
test
lea
push
lds
push
sbb
adcl
mov
shll
xchg
test
les
shrl
jne
fldl
in
mov
leave
sub
and
pushf
bndldx
ss
aaa
pusha
dec
icebp
xor
jg
push
sub
add
int
xor
lcall
rep
enter
jne
flds
ja
sub
jne
inc
addr16
push
mov
add
inc
mov
hlt
dec
stos
mov
push
add
push
scas
clc
insb
jp
es
xor
addr16
jg
iret
ret
mov
clc
mov
je
xor
rolb
push
xor
adc
mov
roll
and
sbb
movups
jmp
push
cmp
and
cs
and
pop
dec
fadds
lock
aam
or
cs
out
rcll
cmpsb
sub
mov
mov
cmp
adc
dec
jnp
ja
test
and
movsb
pop
scas
cmp
mov
rcll
or
cmpsb
dec
mov
into
cmpsb
dec
movl
adcb
in
jnp
xor
into
outsl
xchg
lret
inc
jle
sbb
xor
push
sbb
lds
cld
mov
movsl
fdivl
movsb
call
dec
sbb
in
or
xor
xchg
mov
insb
int
shlb
adc
xchg
in
push
push
jne
push
push
adc
cmovle
adc
or
loopne
jb
ret
jmp
test
int3
dec
rclb
adc
inc
sbb
mov
mov
dec
add
pop
inc
loopne
adc
mov
nop
iret
decb
push
mov
cmpsb
push
xor
jae
jnp
inc
dec
loop
sbb
js
xchg
ret
movb
leave
sub
xchg
dec
popa
xor
pop
mov
push
rorb
xor
cmp
adc
lahf
cmp
cli
mulb
push
popf
rcr
and
and
in
sbb
mov
adc
dec
push
es
fs
add
sbb
cmp
popa
or
mov
push
lret
and
shll
mov
jbe
jbe
dec
or
cmp
add
in
aas
arpl
sahf
inc
movsl
loopne
mov
or
orl
push
cmp
or
xor
inc
mov
xor
push
inc
movsb
in
lret
testb
and
jle
sahf
mov
cli
xchg
mov
cmc
inc
mov
cwtl
iret
push
js
out
sbb
sbb
sbb
mov
sbb
out
mov
push
and
jne
sarb
xor
popa
sbbb
roll
xchg
jns
mov
cmp
addb
mov
iret
stos
xorb
cmp
mov
or
sahf
imul
mov
or
imul
push
add
cmpsl
inc
xor
scas
scas
stc
stc
cld
mov
mov
adc
rolb
sbb
and
sti
mov
lahf
jo
stc
mov
inc
mov
popa
add
mov
xor
and
add
andl
dec
loopne
mov
push
mov
ffree
rcll
outsl
xchg
adc
pop
arpl
mov
lods
pop
or
rcll
push
cmc
jecxz
lea
add
jno
insl
pushf
dec
pop
push
mov
cli
and
dec
mov
jp
es
je
cmpsl
dec
enter
ret
in
lahf
dec
fimuls
mov
pop
adc
mov
subl
stc
ret
jmp
jae
jns
call
outsl
inc
fnstcw
ss
xlat
enter
sbb
jne,pt
outsl
lds
icebp
or
shlb
enter
int
js
push
insb
inc
cmp
pop
loop
iret
push
mov
pop
adc
mov
dec
or
imul
add
stos
arpl
out
push
pop
pop
fadds
imul
aam
pop
mov
or
aam
inc
mov
xor
rcll
dec
fidivl
sub
adc
xor
mov
aam
subb
jns
outsb
nop
js
sarb
mov
dec
jle
fld
xor
jle
pop
rolb
insl
or
shl
ja
or
jge
xchg
mov
repnz
movsb
scas
sbb
mov
sbb
cmp
mov
cvttps2pi
ja
sbb
shrl
mov
xchg
lods
add
mov
and
shr
push
subb
and
add
or
jae
into
sbb
arpl
mov
add
outsl
fildll
pop
xchg
xor
inc
jne
fsubrs
js
mov
gs
adc
mov
dec
test
ret
ret
int
fiadds
mov
cmc
xor
cld
mov
ds
adc
xchg
mov
or
and
dec
adc
cmp
add
notb
call
rolb
js
pop
aaa
xor
sarb
or
cmc
sub
scas
xchg
lret
dec
fistpll
aas
and
test
orw
fs
mov
xorl
add
sub
inc
int3
icebp
xor
ljmp
inc
mov
imul
mov
sti
test
es
lock
sbb
negl
loopne
out
jnp
inc
jb
mov
lds
adc
outsl
rcl
sub
cmpl
ret
mov
lahf
add
sub
mov
mov
xchg
test
imul
loopne
mov
cltd
mov
push
jb
test
ds
ja
ret
sbb
cmc
inc
shr
pop
or
shl
sbb
lods
jmp
pop
push
iret
pop
ds
xchg
add
testb
cmp
inc
pop
pop
and
push
test
repz
out
dec
mov
inc
push
pop
popf
mov
lea
adc
nop
dec
aad
mov
dec
sbb
sbb
je
lods
hlt
adc
pop
jecxz
popf
ja
dec
arpl
cmp
aad
add
loop
arpl
in
push
sahf
cmp
gs
jmp
test
enter
mov
push
movsl
dec
in
jbe
or
inc
jg
cmp
sbb
insl
mov
ret
lds
shll
pop
fsts
icebp
mov
movsb
bnd
or
sbb
popf
jno
loopne
fnstenv
ljmp
jle
das
das
or
je
lret
lcall
cli
lds
xchg
ss
loope
and
ds
mov
adc
pop
stos
mov
sub
mov
call
lods
fldl
mov
and
arpl
inc
xchg
xchg
ljmp
and
xchg
js
mov
xor
cltd
sub
push
dec
inc
clc
sahf
adc
cmpsl
lret
icebp
sbb
ret
xorb
popa
bound
lods
into
out
lret
mov
sbb
nop
movq
sarb
fyl2xp1
ret
in
lods
roll
mov
cs
movsl
or
aad
mov
ja
inc
push
push
push
addr16
popa
dec
jb
cmp
ja
dec
dec
xor
cmc
sub
dec
dec
push
push
inc
pushl
mov
push
repnz
outsb
cmp
xor
sbb
pop
adc
mov
adc
and
add
add
add
fs
adc
nop
push
add
add
orl
add
in
rolb
adc
pop
push
xchg
adc
and
or
or
in
add
add
incl
or
push
fiadds
popa
or
nop
add
in
inc
inc
jae
insb
mov
idivl
add
add
add
xorl
add
dec
and
jo
inc
neg
and
outsb
add
gs
fs
fildll
add
add
add
add
add
addb
dec
inc
push
push
addb
push
add
or
fs
jo
sub
adc
fs
mov
sbb
nop
pusha
mov
repnz
je
popa
insb
inc
jb
gs
js
jae
jb
insl
jo
inc
or
lods
std
jmp
inc
outsl
insl
insl
popa
outsb
fs
imul
je
jb
arpl
leave
cmpsb
in
mov
sub
daa
inc
push
mov
insb
insb
sub
dec
outsl
fs
dec
and
and
inc
inc
push
imul
push
sbb
imul
push
imul
inc
imul
dec
enter
in
dec
cmp
fs
inc
ds
outsl
ja
or
push
inc
lahf
je
xchg
xchg
arpl
push
inc
dec
add
add
inc
push
dec
loopne
subb
add
add
add
add
push
adc
add
or
add
fimull
lds
add
mov
jbe
push
xor
pop
push
mov
dec
mov
je
add
leave
pop
enter
add
pop
in
ret
ret
js
orl
ret
fadds
ljmp
pop
lods
nop
add
test
lret
inc
shrb
sub
ret
sar
sub
inc
ja
or
cmp
pushf
or
rcrb
insb
adc
dec
lcall
xor
sar
xchg
sbb
xchg
add
or
add
add
add
sbb
mov
movl
push
jmp
nop
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
or
inc
