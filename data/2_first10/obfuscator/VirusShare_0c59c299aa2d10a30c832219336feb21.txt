add
add
add
add
psrld
sbb
xor
and
inc
movl
sub
push
inc
pop
decl
xor
addps
add
jmp
pop
ds
clc
and
dec
maxps
push
dec
pop
jmp
cmp
movb
sub
pmulhuw
movb
sub
shl
or
or
adc
xor
push
lahf
pop
sbb
adc
xor
and
adc
push
cmc
pop
imul
or
push
dec
pop
jmp
or
rol
pop
sbb
cmp
sub
dec
pop
rcl
psraw
and
paddsw
and
stc
movb
sbb
push
dec
pop
je
or
adc
je
sbb
push
aaa
pop
psrad
or
shl
cltd
movl
xor
maxps
movw
and
jmp
or
daa
aad
enter
dec
pop
add
sub
punpckhbw
push
cwtl
pop
pcmpeqb
sub
or
sbb
jae
movw
punpckhwd
push
dec
pop
adc
push
dec
pop
xor
rcl
push
aaa
pop
or
movb
push
inc
pop
sub
push
xchg
pop
sbb
xor
or
push
inc
pop
and
jmp
sbb
xor
and
psrlq
push
aaa
pop
inc
movb
or
sub
ja
and
pxor
jmp
or
loope
shr
movb
jmp
push
jae
xchg
mov
add
jle
psubusb
adc
jmp
xor
push
pmulhuw
sub
push
stc
pop
adc
movl
jmp
addb
add
push
out
lds
in
push
pop
and
dec
jne
or
mov
jmp
add
fwait
push
test
mov
shlb
pop
mov
mov
add
pop
cwtl
jo
mov
mov
or
jno
and
add
push
inc
dec
fcomps
push
push
cwtl
jo
mov
mov
pop
or
xchg
dec
xchg
add
mov
fcmove
ficoms
std
jo
dec
fdivr
xchg
dec
mov
mov
dec
out
add
mov
or
cwtl
mov
outsb
shlb
sbb
mov
add
jo
je
xor
push
lods
sub
je
and
jb
int
pop
or
sub
mov
cmc
fimull
jo
dec
ret
repz
or
lock
lods
addr16
mov
push
add
jbe
mov
push
push
push
lods
jae
push
lcall
cli
iret
xor
scas
jae
dec
mov
push
or
and
and
jo
dec
cmp
and
jo
pop
daa
mov
bound
jo
repz
pop
or
andl
addr16
fdivs
jb
xor
push
or
inc
pop
mov
rorl
inc
dec
fdivs
insb
jl
leave
ss
jl
test
pusha
cltd
addr16
pop
daa
mov
mov
xor
adc
jne
sbb
sbbb
sub
xor
daa
xchg
rcrl
xorb
inc
test
inc
leave
inc
push
mov
push
rcrl
orb
sub
mov
jb
fsubs
adc
jns
inc
dec
fdivr
add
cmp
jns
inc
dec
fdivr
add
xor
sbb
push
cmp
mov
andb
inc
fwait
mov
jo
or
sti
add
and
mov
sbbb
bound
jmp
jo
dec
push
xor
cwtl
jl
sbb
loopne
fimull
rcr
dec
loopne
fimull
rcr
dec
loopne
fimull
adcl
repz
jns
mov
aam
shll
add
fdivs
adc
and
popf
push
mov
add
jae
pop
sub
je
cmp
dec
out
outsb
fdivl
inc
pop
mov
je
dec
data16
add
inc
xor
push
je
add
pop
push
cwtl
rorl
jne
dec
fdivs
inc
pop
mov
pop
hlt
inc
dec
fdivs
roll
xor
dec
dec
add
sub
mov
push
dec
lods
adc
sbb
jae
sbb
pop
dec
inc
ds
and
leave
loope
aaa
push
push
jb
dec
fdivs
rclb
mov
jo
mov
sbb
mov
pop
je
dec
fdivs
rclb
mov
jo
mov
sbb
sbb
cmpsb
sbb
pop
mov
pop
push
jb
mov
fwait
repz
mov
sub
sbbb
rcr
or
pop
leave
dec
rorl
dec
leave
dec
inc
dec
fdivr
pop
leave
and
push
test
inc
shll
inc
dec
pop
mov
rcr
stos
push
pop
lret
cmp
stc
cmp
dec
mov
pop
out
jbe
mov
push
or
cwtl
dec
dec
fdivs
mov
int
or
daa
stos
mov
fdivp
test
mov
stos
scas
fdivs
ret
fdivp
test
cmpsb
push
or
daa
stos
lahf
fdivs
ret
fdivp
test
sbb
mov
push
jbe
mov
and
mov
bound
dec
push
mov
mov
xor
xor
inc
dec
fdivr
inc
leave
push
je
mov
sbb
js
adc
fsubs
sub
lods
add
daa
das
fsubs
sub
lods
add
cs
mov
add
cmp
add
cmp
add
cmp
sbb
fs
add
and
adc
sbb
adc
daa
sub
aaa
ds
ss
mov
add
and
add
aas
mov
push
sub
and
adc
cmp
jo
dec
fdivs
dec
fdivs
pop
fdivs
xchg
push
dec
pop
lcall
dec
fdivs
dec
fadds
add
test
jns
adc
add
stos
add
add
xchg
add
jp
add
add
add
add
add
add
add
dec
aas
xchg
add
push
stc
lods
int
test
test
push
scas
imul
adc
ret
xchg
adcb
jns
fsubrp
mov
xor
lahf
add
add
add
add
in
in
cmp
dec
sbb
gs
add
cmc
roll
pop
aaa
pop
add
out
add
jle
or
pop
pop
aad
ffree
and
mov
orl
pusha
xor
or
sub
rep
fisubs
mov
add
add
jns
add
into
pop
stos
add
add
add
add
add
out
and
add
add
roll
add
add
add
xchg
add
push
add
add
add
add
add
xchg
add
add
add
add
add
add
filds
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
xor
add
add
add
add
add
add
adc
add
add
mov
add
daa
xchg
shll
in
cli
add
fildl
add
xchg
mov
add
add
push
add
push
add
add
scas
add
and
add
push
xchg
add
add
push
lods
negb
add
add
add
add
and
add
add
add
out
mov
jo
inc
pop
jb
outsl
jno
add
add
sbb
sbb
add
add
mov
add
sbb
xor
orl
ss
ja
arpl
push
jmp
es
add
arpl
jne
call
fdivr
push
push
or
inc
xchg
jo
popa
mov
lock
xor
vmread
jo
scas
or
out
xchg
out
fs
mov
arpl
popa
jecxz
mov
push
xor
pop
push
sbb
push
dec
out
cmp
cmpsl
xchg
pop
mov
in
mov
fsubl
arpl
mov
cltd
jecxz
fs
cmp
cmp
div
cmc
cmp
sub
inc
je
pop
xchg
outsl
aad
xchg
xchg
outsl
andl
xchg
inc
cmc
pop
dec
mov
cli
mov
mov
mov
mov
xor
movl
movsb
sbb
push
int3
shrl
pop
push
lcall
pop
imul
jle
push
mov
fdivs
pop
jbe
cmp
popa
jecxz
push
data16
cltd
mov
in
mov
test
cltd
inc
stc
cmp
push
and
xor
and
mov
fdivs
jge
xor
sbb
mov
dec
xchg
push
jae
xor
push
sub
adc
gs
int3
push
jne
push
out
ss
in
mov
dec
int
or
aaa
cmp
jge
iret
ficoml
sub
roll
lret
sub
and
pop
xchg
jo
mov
xchg
dec
cwtl
and
out
rcrl
cmpsl
pop
cwtl
pop
push
repnz
push
mov
xlat
or
push
or
leave
lahf
icebp
hlt
xor
push
dec
adc
mov
aas
add
mov
mov
push
adc
mov
faddl
bound
push
jns
pcmpeqd
push
mov
hlt
pop
mov
std
mov
pop
xchg
loop
push
jge
outsl
push
and
sbb
insl
in
out
xchg
sbb
leave
out
push
popf
sbb
pop
sub
repnz
mov
cmp
out
or
cmc
mov
dec
nop
lcall
jns
dec
mov
sbb
dec
lds
lds
aam
daa
imul
stc
inc
test
mov
movntps
add
out
and
int
mov
mov
xchg
outsl
cmp
aaa
pop
add
hlt
sub
or
aaa
mov
inc
inc
lods
sbb
in
movsb
incl
repz
lea
nop
xlat
lea
and
insl
push
popf
dec
mov
sahf
popf
cmp
xchg
cmp
insb
aam
jl
xorb
int
sti
adc
or
mov
push
mov
pop
adc
test
ret
sub
sbb
outsl
cmp
scas
mov
and
pop
mov
imul
arpl
mov
in
xlat
jle
ds
out
dec
push
push
addb
scas
hlt
loop
cmp
hlt
scas
or
jbe
jp
adc
pop
mov
xor
shll
movsb
mov
add
mov
ss
mov
lahf
xchg
cmp
jg
stos
sub
pushf
mov
pop
jl
testl
out
sti
insl
loopne
pop
aam
mov
in
dec
xor
mov
sbbl
adc
loopne
gs
jge
mov
pop
push
jp
pushf
mov
mov
ret
sub
or
jns
lods
data16
fistpl
dec
or
mov
or
mov
out
cmp
outsb
mov
icebp
add
pop
sub
lods
xlat
cmp
ja
push
scas
ds
outsb
and
test
pop
cmp
xor
repz
std
pop
pusha
test
cmp
gs
bound
flds
push
test
inc
push
cltd
pop
mov
mov
loop
sbb
daa
push
dec
jge
lds
je
fbld
sti
jne
xor
sti
testb
arpl
sbb
clc
or
mov
and
xor
jno
xchg
stos
sbb
ds
or
std
sbb
jne
dec
js
and
pop
nop
sbbb
cmp
cmp
pop
aam
xor
or
dec
cltd
fs
out
sub
jb
push
mov
xchg
in
pop
push
popf
push
fstpt
lods
lock
or
and
fildll
inc
cmp
pop
mov
mov
xor
sbbl
and
repnz
pop
push
fidivrl
fdivl
pop
jno
insb
jo
jae
mov
gs
lock
testl
pushf
push
leave
pop
dec
frstor
xchg
shll
ret
mov
push
les
xor
add
mov
bound
adc
mov
adc
xchg
out
stos
ret
push
fdivrs
into
adc
hlt
xchg
nop
cmpsb
jmp
dec
fndisi(8087
lahf
ret
sub
test
mov
cmpsl
sbb
fs
enter
mov
mov
inc
inc
das
pop
mov
scas
test
nop
movsl
mov
les
jecxz
je
movsl
inc
clc
sub
dec
cmpxchg
and
mov
cmpsl
js
jo
pop
loop
lods
cmp
and
inc
pop
je
cld
movsl
sbb
cwtl
mov
sub
or
inc
js
and
rorb
cmpsb
out
shrb
mov
shrb
pushf
stos
in
sti
gs
lahf
push
xlat
inc
mov
test
repz
sub
mov
and
stos
aas
insb
aas
xor
mov
in
fldt
jge
pop
das
and
fdivrs
popf
sub
data16
adc
orl
sub
jmp
mov
adc
jne
push
mov
add
mov
int3
jp
cmp
addr16
mov
push
jns
mov
shlb
pop
arpl
ret
nop
jo
ficomps
dec
stc
inc
jge
sub
push
cmp
outsl
xchg
xor
in
subl
xchg
shl
jmp
jle
jge
sbb
jp
sbb
pusha
lret
enter
insb
icebp
xchg
cmp
inc
xchg
pop
inc
or
or
or
mov
stos
dec
shlb
adc
repnz
mov
fs
inc
or
cmpsb
ret
sub
sbbb
sbb
and
out
push
insb
xor
cmp
pop
cmp
jmp
lock
adc
jp
orb
call
js
out
xchg
xchg
mov
dec
bound
loop
and
hlt
xchg
xor
adc
pop
lods
xchg
test
dec
out
loope
cmp
int3
fadd
sub
incb
jg
inc
test
push
mov
cld
fisttpl
pop
cli
fs
lds
sbb
sbb
mov
je
jbe
mov
ds
les
mov
lea
lock
pop
lahf
rcrl
and
es
jl
testl
in
and
insl
imul
jns
adc
cs
daa
xchg
or
lret
lea
movsb
push
jne
insb
sub
xor
cs
mov
lods
adc
jle
xchg
xor
repnz
mov
andl
das
std
insb
dec
sub
pop
in
sub
in
cmp
mov
mov
add
into
insb
fs
out
jge
sbb
mov
and
imul
push
outsl
xor
into
add
and
mov
andb
cwtl
jo
cs
jae
lea
jns
repz
out
fsubl
xlat
movsb
sbb
divl
insl
popa
fisttpl
adc
mov
mov
jl
sub
addr16
pop
adc
into
push
add
scas
cmp
in
out
movsl
pusha
dec
stc
mov
out
scas
in
fsubrs
push
lret
pop
lahf
cmpsb
cld
jmp
mov
ds
and
jl
rcrl
repnz
rcr
andl
shl
outsl
or
cmc
in
cmp
repz
or
shll
jae
xlat
in
mov
es
mov
cmpsl
cmp
adc
mov
dec
mov
mov
adc
daa
shll
stos
push
mov
mov
cs
mov
ja
push
sbb
sbb
add
xorb
or
and
movsb
sbb
adc
je
outsb
sarb
movl
xchg
and
fadds
or
mov
rorb
mov
les
or
out
andb
mov
movsb
pop
incl
dec
repz
sub
and
jae
sub
nop
and
testl
dec
jb
fwait
test
jmp
push
push
inc
inc
sub
sbb
or
push
shll
adc
in
xchg
sarl
lock
jne
sbb
repz
jl
jp
pop
pop
dec
decb
in
scas
jb
ds
push
aam
xchg
push
sub
jns
mov
sahf
dec
outsl
xchg
push
xor
sarb
push
and
mov
push
cmpsb
sbb
mov
xor
mov
jb
outsb
imul
shlb
add
lret
sbb
dec
mov
nop
in
dec
push
and
fs
push
cmc
mov
mov
out
xchg
jns
mov
cmpsl
or
push
cmc
and
xor
xchg
push
popf
adc
dec
arpl
add
aad
popa
scas
cmp
cmp
cmpsl
ficompl
inc
sbb
sub
sub
les
je
cmp
cmp
nop
xor
inc
cli
mov
out
mov
dec
push
sahf
int
inc
jno
popf
repz
jne
mov
xlat
or
lods
flds
in
in
jo
pop
push
test
inc
ret
mov
jp
inc
xchg
cmpsb
adc
jmp
loop
test
push
cmp
xchg
cs
fwait
dec
mov
xor
arpl
mov
cli
loope
mov
and
dec
ja
cmpsb
push
lret
mov
and
jbe
outsb
lcall
inc
xchg
cmp
xchg
repnz
test
sti
repnz
or
add
jbe
dec
shrb
insl
into
jecxz
inc
jo
lret
iret
movsb
je
dec
mov
hlt
add
mov
clc
sbbb
sbb
lahf
jnp
pop
and
inc
fcmove
push
out
aad
push
sub
je
fucomp
mov
fst
fidivl
movb
adc
setl
int
fwait
out
inc
adc
add
imul
cs
push
sbb
and
sbb
add
add
shll
xchg
inc
sbb
push
xor
dec
jae
outsb
daa
adc
movsb
push
jnp
ja
lods
sub
cmc
xchg
movb
imul
push
outsb
mov
add
sub
je
mov
int3
add
pushf
out
mov
xchg
dec
mov
psubsw
xchg
push
pop
in
xchg
jae
push
add
mov
cmp
out
sub
add
lret
lcall
sub
ljmp
lret
int
cmp
insl
push
pusha
mov
mov
js
lea
adc
sub
jg
dec
push
dec
add
fidivs
push
movsl
pop
pusha
lods
xor
push
aaa
adc
xchg
add
push
in
push
mov
jae
dec
das
xchg
mov
push
imul
out
cmpsl
jmp
int3
idivb
jp
add
ret
rorb
pop
out
push
pop
loopne
mov
decb
jg
frstor
repz
xor
je
daa
cmc
cmp
sbb
lods
popf
jo
dec
hlt
sub
icebp
icebp
xchg
lret
lret
dec
out
popa
scas
inc
fld
pop
inc
sub
je
ss
xor
ss
pusha
std
mov
popa
xchg
lret
dec
dec
push
arpl
sbb
rorl
das
jno
sahf
clc
in
sbb
sub
icebp
test
adc
shlb
pop
pop
and
rcrb
jle
rolb
sarb
sub
mov
clc
and
lds
jns
xchg
inc
pop
jge
jmp
imul
arpl
out
popf
es
dec
xchg
adc
pop
and
push
mov
loopne
cmpsb
mov
outsl
lock
adc
dec
les
adc
xchg
lea
inc
hlt
mov
in
cmovp
bound
pushf
lret
dec
add
push
je
in
push
sbb
and
cmp
sub
lea
frstor
imul
cmpb
mov
cmp
fnstsw
es
movsb
repnz
sub
repz
mov
andb
test
push
pop
mov
mov
mov
int
ret
dec
push
dec
call
mov
idivb
mov
dec
std
jb
clc
mov
dec
push
mov
jg
aad
pop
daa
mov
push
fsubrl
sqrtps
out
or
cmp
aas
jb
ror
jno
jmp
inc
ud2
or
call
out
sti
negb
icebp
andl
icebp
pop
adc
pushf
pop
loope
or
xchg
fwait
cmpsb
shlb
and
adc
and
out
and
inc
dec
or
enter
jne
pusha
jmp
dec
push
adc
pop
jecxz
insl
andb
jae
stos
xor
xor
js
lret
lods
jg
push
mov
pop
mov
pushf
imulb
cmp
adc
xor
mov
aad
and
sub
rcrl
es
inc
xor
mov
xor
jg
jae
jns
ljmp
mov
ficoml
int
clc
aaa
nop
dec
push
push
adc
div
dec
cmc
leave
das
popa
test
mov
xchg
or
jae
push
aas
cmp
xchg
dec
gs
lcall
aam
push
xchg
lds
and
jo
mov
mov
and
or
mov
ljmp
mov
sub
cltd
mov
jae
lods
pop
pop
cli
data16
adc
dec
inc
bound
mov
inc
mov
mov
sub
xchg
aad
cmp
cmp
sbb
mov
outsb
mov
imul
cmp
adc
and
fbstp
adc
push
pushw
push
test
fisubrl
cmp
loopne
cli
push
push
shrl
jo
aaa
jmp
dec
pop
xchg
sub
stos
cltd
add
sub
xor
lret
jnp
and
shll
push
dec
jg
xchg
sbb
cli
sbbl
mov
mov
adc
shrb
and
adc
pop
or
inc
dec
daa
testl
jg
mov
into
push
add
nop
mov
inc
xchg
ja
cli
jo
aad
cld
dec
cmp
orl
inc
cmovp
mov
movsl
push
ret
xchg
idivb
and
xchg
jmp
fs
push
push
pop
es
xor
xor
mov
xchg
daa
push
ss
jl
int3
jns
movsl
ret
call
jg
add
push
pop
dec
bound
lods
decb
jmp
push
xor
pop
icebp
fwait
ds
gs
test
pop
sub
mov
and
pop
push
je
push
lods
insl
mov
aaa
loope
ret
mov
inc
imul
mov
int
daa
and
cli
push
lock
xchg
mov
decb
jnp
xchg
mov
cmp
dec
push
inc
mov
outsb
xchg
mov
loopne
sub
std
ret
push
scas
jle
repz
push
lock
mov
pop
jnp
ss
pop
nop
push
sub
dec
jle
sbb
cmpl
sub
sbb
inc
mov
std
inc
lcall
mov
repz
cmp
aaa
sbb
pusha
es
repz
fsts
sbb
addr16
ffreep
dec
and
and
rcr
pop
cmc
pop
xor
push
imul
xorl
xchg
pop
je
add
xchg
ja
add
push
pop
cmc
popa
loopne
cmpsb
paddsb
imul
fstl
sbb
mov
data16
test
jg
push
mov
mov
xor
fsubl
cltd
rcr
xor
sbb
inc
test
cmp
or
adcl
jle
cmp
or
jge,pt
int
arpl
mov
jle
insb
insl
xor
jns
lods
test
fidivs
test
and
mov
scas
dec
inc
imull
dec
ud0
std
and
or
ret
inc
fs
sbb
shll
mov
notl
and
test
ss
jns
dec
push
sarb
pop
bound
dec
shrl
adc
push
in
fbstp
inc
fs
fwait
jbe
cmc
and
dec
inc
divl
lds
jo
xchg
sbb
or
jg
mov
mov
push
call
and
nop
inc
outsl
adc
or
lds
stc
xchg
adc
cmp
push
jge
and
hlt
push
test
into
jae
popf
add
jecxz
adc
or
mov
enter
pop
mov
inc
fstl
xchg
mov
dec
hlt
movsl
pop
inc
mov
sbb
inc
out
pop
test
jno
dec
in
adc
dec
rcll
outsl
dec
xchg
ffree
test
dec
add
mov
xor
jl
inc
jle
loop
xchg
rcr
xchg
and
cmc
jg
push
mov
mov
pop
test
mov
adc
ror
insl
rolb
mov
mov
test
xlat
ja
ret
call
inc
adc
sbb
scas
and
sbb
insb
jne
jmp
xor
fnstcw
mov
shl
imul
inc
or
jg
std
aaa
cmp
dec
sbb
xor
xchg
outsb
pop
out
pop
mov
jl
pop
es
xchg
inc
outsb
adc
adc
ret
adc
aas
repz
cmpsl
dec
movq
and
dec
int
pop
stos
xchg
and
rorb
add
push
repnz
pop
out
cwtl
mov
and
mov
push
and
dec
test
push
lcall
push
adc
and
aad
lds
pop
aaa
dec
add
xor
push
xor
sbb
fisubs
into
fs
mov
adc
stc
inc
enter
jecxz
fsubrs
sub
dec
outsl
shrb
lods
and
adc
push
sarl
sub
in
shll
mov
push
lret
dec
dec
les
scas
enter
and
jb
xchg
les
inc
jl
add
jp
xchg
sub
lds
into
or
scas
xchg
or
adc
out
cmp
jb
or
mov
cmpsl
mov
lds
out
fwait
mov
push
lds
lods
xchg
mov
xchg
cmp
mov
and
dec
dec
in
icebp
sub
pop
test
and
inc
adc
jecxz
shlb
das
pop
dec
push
imul
jp
lahf
loopne
add
mul
cmpsl
aad
outsl
jp
dec
xchg
sbb
pusha
popa
mov
ja
in
ret
mov
xorb
hlt
and
call
imul
push
and
push
mov
out
jg
jp
pop
pop
outsl
lods
rorl
movsl
adc
fcomps
leave
out
inc
fcompl
mov
jnp
test
scas
cmp
add
repnz
mov
int
stc
fidivrl
sbb
loope
in
loop
ret
xor
cwtl
outsb
or
pop
pushf
mov
cltd
mov
inc
pop
pop
fcompl
clc
aas
sub
jl
add
cmp
and
stos
add
xchg
movsl
xchg
daa
add
xchg
ret
pop
lret
sbb
sbb
xor
sbb
ret
insl
inc
push
cmp
cmp
xchg
jmp
je
mov
push
aas
mov
ror
ja
xchg
gs
dec
call
ficomps
or
push
fsts
jle
les
sub
mov
or
sbb
jno
add
and
inc
int3
movsl
lret
aam
fs
dec
push
and
daa
dec
pop
jmp
mov
sarl
lea
sub
fistpl
add
add
cmp
add
cwtl
jae
inc
icebp
mov
mov
jne
mov
or
orb
mov
into
xlat
imul
jge
decb
stos
dec
lret
mov
mov
orb
addl
aam
imul
dec
ret
int
and
xor
cwtl
dec
mov
push
cmc
and
mov
loope
pop
out
insb
sbb
jp
std
pop
mov
mov
adc
jl
cmc
lret
ja
pop
mov
jno
in
lea
push
xchg
sbb
popf
dec
mov
movsb
shl
inc
mov
and
std
sub
jns
adc
stos
aad
sti
fidivrl
ret
mov
cmp
pusha
mov
lcall
loope
pop
insl
pop
mov
adc
jg
sub
sbb
dec
pop
les
out
cmc
dec
xor
push
sub
ret
arpl
inc
push
inc
fimull
push
in
and
inc
jp
dec
rcll
iret
mov
dec
pop
mov
ss
mov
rorb
popf
cmpsl
cmpsb
cmp
adc
sub
jp
fimuls
inc
or
into
test
sar
xor
fcomp
mov
adc
jge
aaa
nop
hlt
mov
pop
repnz
int3
stos
cltd
hlt
xor
lret
mov
mov
jge
inc
push
push
mov
sahf
fdivr
addr16
mov
js
loopne
sub
jmp
pop
hlt
mov
outsb
and
push
xor
int3
xor
pop
cmp
inc
jns
sub
stos
fists
mov
push
nop
clc
aaa
loope
push
loope
xor
dec
in
jb
clc
mov
lret
bound
cmc
sub
and
pop
or
dec
shlb
pop
adc
cmp
xor
jo
inc
inc
jno
and
inc
adc
call
lret
sbb
pop
hlt
lahf
scas
or
cli
or
add
jle
xlat
lret
adc
aaa
daa
stc
cmp
test
fnstsw
dec
loopne
negl
adc
dec
popf
addr16
stos
cli
or
enter
nop
add
lret
inc
adc
and
sub
jmp
push
sbb
out
icebp
fcmovnb
jo
xor
frstpm(287
das
jmp
jl
lock
jae
sbb
mov
pop
je
jb
inc
jno
fcomps
and
pop
iret
jne
iret
cs
sub
inc
pop
icebp
cs
xor
add
xchg
dec
cmpsl
ficoms
mov
push
nop
in
push
pop
ret
sub
xor
ffree
mov
scas
andl
xlat
and
repz
les
push
ficomps
and
scas
pusha
and
subl
repnz
pop
jo
and
mov
xor
enter
push
ret
inc
xchg
loopne
xchg
pusha
je
dec
ss
sub
fnstenv
aam
rol
repnz
inc
into
jns
add
sbb
dec
dec
mov
aam
incl
stc
stos
push
lods
lret
aad
ret
sub
inc
loope
rol
stc
pop
fdivs
xor
mov
mov
mov
fiaddl
cmpsl
inc
aam
data16
test
inc
jge
inc
int
in
out
addr16
pop
aaa
jns
push
and
cs
inc
mov
inc
mov
aas
dec
mov
cwtl
and
pop
fisubrs
sub
loop
subl
inc
movsl
fcoml
push
sub
cmp
adc
cli
sub
cmpsb
push
mov
bound
stos
xchg
hlt
pop
and
fwait
pop
adc
xchg
or
pop
or
repnz
cld
cld
push
stos
test
aas
int
test
mov
dec
or
out
pop
mov
popa
jbe
aad
xor
ss
mov
fcmove
insl
jmp
or
fadds
in
in
inc
xor
and
pushl
cmpsl
push
push
pop
cld
or
sbb
dec
repnz
repz
fucomp
stos
mov
scas
cmp
es
ss
adc
je
mov
mov
xor
ljmp
stos
mov
jg
fcomps
pusha
cmc
popa
cmc
dec
xor
std
outsl
iret
test
js
mov
xor
adc
repnz
out
lock
ret
outsb
inc
pop
sbb
in
jg
push
cmc
imul
xlat
mov
repz
pushf
push
fstpt
lods
es
lcall
mov
iret
ds
and
es
into
lds
popf
outsb
xchg
mov
fistpll
sbb
inc
lods
or
nop
ret
faddp
je
arpl
mov
stc
in
mov
push
scas
cld
add
out
rorb
sub
movsb
lcall
mov
add
lret
push
insb
jbe
jl
imul
pop
mov
sbb
clc
icebp
or
stos
iret
gs
imul
movsl
int
jecxz
aad
mov
xor
stos
imull
int
arpl
push
xchg
ret
out
dec
incb
inc
sub
and
hlt
in
push
pop
sub
lock
pusha
inc
lods
sub
or
int3
pop
stos
cltd
dec
dec
push
scas
fbld
cmp
push
or
push
andl
sbb
lret
lcall
add
add
dec
lret
inc
popf
jecxz
mov
fisttps
pop
push
andl
inc
in
sbb
int
test
or
stc
adc
in
faddl
xchg
dec
add
mov
ja
arpl
jnp
cltd
dec
repnz
jle
add
dec
icebp
cmpsb
adc
mov
lcall
pop
mov
ss
adc
sub
aam
and
cli
mov
lods
out
dec
sbb
mov
push
mov
or
mov
fnstcw
lods
jns
adc
ret
daa
xor
mov
shll
or
mov
jo
mov
jbe
loopne
jbe
adcb
inc
push
pop
je
rcrb
lds
pop
sbbb
lods
sahf
roll
adc
and
xchg
std
fistpl
push
nop
mov
mov
push
fcomp
sbb
stos
xchg
mov
jle
xor
mov
mov
outsb
push
inc
mov
setno
iret
mov
add
jns
enter
push
inc
mov
icebp
movsl
cmpsl
cmpsl
out
negl
xchg
add
sub
sbb
arpl
orl
jle
push
pop
nop
lret
rolb
jne
push
std
jle
mov
aam
fsubrl
filds
adc
add
inc
sub
clc
mov
mov
dec
cmp
out
adc
pop
jnp
imul
jb
ds
fsubrl
push
mov
sub
and
scas
iret
or
mov
pop
gs
jo
jge
cmp
idivl
and
adc
rcl
inc
jecxz
pop
dec
std
jecxz
lcall
jmp
int
pop
sub
xbegin
cmc
sub
sbb
icebp
shl
mov
and
xchg
pop
mov
mov
xor
test
imul
dec
mov
loopne
aad
test
call
enter
enter
test
es
and
lock
imul
inc
mov
mov
ficoms
mov
push
cmp
rolb
or
xchg
aam
push
cmp
movsb
mov
push
cmp
sub
add
sub
inc
rolb
xchg
icebp
push
ljmp
std
pop
mov
stos
js
and
push
cltd
xor
aam
sub
addr16
stos
mov
inc
imul
pop
loopne
push
fildl
jl
mov
dec
hlt
inc
dec
and
lahf
pusha
cli
jnp
fsubrl
icebp
lcall
stos
xchg
movsl
ljmp
push
mov
mov
sub
or
cwtl
jge
inc
or
push
sbb
push
xchg
pop
dec
mov
xor
jecxz
out
adc
mov
outsl
loopne
mov
fmul
sbb
dec
pop
adc
scas
rcrb
dec
inc
xchg
fnstcw
xchg
adc
mov
push
dec
pop
in
pop
push
in
or
fs
sub
insb
add
xchg
xchg
push
mov
hlt
loop
jle
daa
push
imul
push
xorl
jbe
jg
push
cltd
in
mov
cwtl
push
idiv
push
fldl
es
dec
cmp
rcrb
mov
shlb
push
std
sub
aam
mov
xchg
scas
ja
lds
ss
cwtl
je
repnz
cmp
fadd
adc
jmp
inc
rolb
aaa
mov
dec
mov
jg
push
jl
sub
cmc
daa
stc
loopne
ljmp
xlat
push
cmc
mov
lods
pushf
add
cmp
sub
xor
dec
loopne
mov
mov
lods
dec
sbb
push
shrb
dec
fistpll
cmp
pushw
or
push
loope
mov
mov
and
rcrb
mov
push
mov
mov
sub
shrl
dec
dec
add
push
sbb
int3
outsb
sbbl
lret
mov
shrl
mov
xchg
testl
movsl
pop
leave
xchg
adc
test
insl
mov
mov
iret
or
data16
pop
and
xchg
dec
inc
in
jbe
jp
jns
or
out
test
ss
movsl
ret
loop
dec
nop
loopne
aaa
dec
sub
sarb
sahf
cmp
push
shrl
dec
cmp
ja
mov
int3
lds
je
mov
inc
mov
ret
pop
imul
mov
iret
pop
in
call
sbb
pop
lcall
pop
mov
sbb
lea
jbe
clc
jae
add
mov
cmp
idivl
pop
fiadds
push
xor
add
mov
test
in
in
xor
inc
xor
testb
mov
movsb
and
and
push
cli
in
or
mov
in
scas
pop
inc
push
sahf
loope
mov
inc
cltd
xchg
push
xor
mov
mov
mov
lcall
fdivl
je
loop
mov
adc
out
sbb
lds
rclb
xchg
sub
mov
ds
aas
test
or
ljmp
mov
mov
in
sub
testb
xchg
push
xor
mov
push
lret
pop
dec
pop
fldenv
jg
push
shll
insb
aaa
loopne
aaa
loop
mov
sub
insb
aas
fnstsw
sti
sbb
lods
jp
mov
pop
mov
imul
mov
adc
scas
xchg
cmp
dec
add
inc
popl
out
or
popa
cmc
mov
adc
inc
mov
outsb
sub
cltd
sbb
jmp
pop
enter
adc
inc
dec
xchg
jae
pop
lds
fsts
es
aad
adc
push
or
pop
inc
mov
xor
dec
mov
mov
cli
inc
aam
mov
inc
mov
jnp
or
divl
xor
jg
sbb
shlb
std
rcr
mov
xlat
cltd
movsl
or
push
out
test
loopne
add
int
mov
lds
inc
rcrl
mov
mov
imul
inc
xor
fsubs
pop
js
cmpsb
jle
mov
cmp
imul
call
aad
push
scas
frstor
mov
in
dec
xchg
ljmp
xchg
in
out
mov
adc
mov
lods
xchg
aas
in
push
jmp
inc
add
jmp
imul
dec
or
stos
and
jns
cwtl
ss
cmp
mov
stos
movsl
pusha
push
xor
cltd
shll
sbb
aam
push
ds
imul
stos
pop
leave
adc
push
lods
cmpsl
fcoms
cld
adc
sub
aas
jle
dec
cltd
add
mov
dec
push
sbb
cld
push
push
pop
ljmp
in
xchg
lds
inc
adc
mov
push
pushf
add
fs
enter
sub
movsb
cmp
pop
repnz
insb
mov
sub
test
lcall
jb
sub
mov
sub
add
mov
add
mov
out
cmc
out
or
mov
cmp
push
pop
pop
pop
cs
pop
push
loopne
imul
out
stos
nop
mov
lret
mov
mov
mov
dec
sar
xchg
jo
pop
sbbb
jb
pusha
mov
idivl
push
add
adc
adc
mov
cmp
incl
dec
stos
and
data16
clc
pushf
das
out
mov
sub
std
mov
scas
in
add
mov
and
push
out
pushf
dec
jae
inc
xchg
lcall
repnz
add
hlt
pop
inc
aas
fs
mov
dec
fidivrl
rcrl
xchg
movsb
mov
xchg
sub
pusha
jnp
add
mov
fnsave
mov
fidivrs
pop
fildll
sub
push
jno
mov
mov
dec
push
dec
jo
jmp
packsswb
pop
insl
unpcklps
pop
shr
mov
jg
ret
fisttpl
add
pop
pop
mov
pop
scas
sbb
fsubr
clc
loopne
pop
push
out
sahf
out
lods
xchg
xor
daa
mov
lret
cmp
or
in
cmp
xchg
movsl
mov
sbb
mov
out
fisttpl
mov
cmp
shrl
cld
mov
dec
in
test
std
addl
shrb
xchg
addr16
fdivrs
lods
mov
shl
cmp
sub
sub
xorl
cmpsb
mov
mov
sbb
xchg
sti
add
pushfw
mov
adc
das
or
shrb
js
mov
insb
inc
imul
pop
mov
xchg
popa
mov
mov
or
sub
clc
inc
lcall
jl
pop
cli
add
xor
aam
jle
inc
dec
jmp
imul
jg
xor
idiv
daa
cltd
add
xchg
push
int
push
sbb
jmp
dec
lds
sbb
movsb
iret
mov
sahf
idivl
inc
jl
mov
mov
jp
andl
mov
mov
je
xchg
dec
insl
mov
jg
mov
dec
in
or
test
fisubs
mov
popf
arpl
test
cmp
shl
sti
js,pt
fbstp
cmp
cmp
scas
inc
ljmp
jne
or
stc
sub
xor
mov
dec
xchg
outsl
loopne
sbbl
stc
mov
out
test
loopne
out
pop
mov
sub
pop
inc
pop
sahf
out
jbe
sub
and
cmp
sti
std
cmc
mov
out
sarb
lock
daa
or
jmp
stos
je
fisubrl
jnp
cmp
dec
push
les
in
xchg
pop
mov
adc
mov
lea
imul
popa
push
daa
mov
mov
lcall
jp
adc
cmp
out
pop
add
movsl
jge
pop
lret
push
add
pusha
or
movsl
pop
push
loope
xor
rcr
jne
gs
fs
mov
fwait
cs
push
push
arpl
ret
sbb
rcrl
lock
sahf
fidivs
outsl
popf
repz
fisttps
loopne
jbe
nop
cmp
dec
pop
ret
insl
in
mov
test
in
adc
scas
jo
and
and
push
jg
push
test
sarb
and
sbb
cmc
push
outsl
and
rorl
or
jns
notl
fcmovu
lods
sbbb
push
push
mul
aas
fucomi
push
lods
cmc
xchg
or
fnstcw
lret
xchg
mov
adc
ret
lds
cmp
int3
mov
inc
icebp
add
rcll
fwait
and
push
mov
mov
jge
xchg
fstpl
xchg
sub
add
daa
sbb
pushf
and
xchg
adc
sbb
mov
stc
xor
into
loope
ret
push
mov
and
push
scas
cmp
push
leave
jbe
sbb
out
fiaddl
and
pop
add
addr16
jbe
enter
popf
adc
sbb
jmp
dec
pusha
lods
mov
inc
lea
xchg
and
dec
xchg
lds
fs
out
daa
test
insb
adc
scas
xchg
je
sarb
xchg
jge
xchg
sti
push
mov
outsl
int
and
xchg
lret
mov
and
aas
pusha
mov
adc
xchg
dec
and
lret
bound
push
sub
loopne
xchg
sahf
cmovne
add
or
push
push
imul
or
xchg
jnp
jecxz
or
scas
jb
xor
aam
adc
sub
ret
sub
and
cmp
cmp
sbb
xor
or
jo
ret
cld
gs
lret
shlb
fmuls
icebp
cmp
jge
push
dec
nop
lret
fwait
arpl
mov
mov
sub
add
imul
testl
lret
out
out
rcr
repnz
fists
jl
in
dec
sbb
mov
fs
cwtl
lods
into
rcl
cmp
pop
or
sub
inc
addr16
jb
push
es
mov
mov
add
inc
mov
jns
repz
cld
adc
mov
inc
inc
mov
sbb
push
push
aad
fisttpll
andl
fsub
sbb
rorl
jle
das
lret
ds
fildll
jecxz
xor
out
sub
fisttpll
add
outsb
loope
dec
push
mov
jp
dec
das
and
jle
sbb
cmp
inc
jns
popf
fstps
dec
add
push
outsl
movsl
push
mov
cli
fldenv
push
pusha
fsubrs
dec
mov
mov
mov
xchg
xorb
das
nop
js
jmp
addr16
stos
in
test
daa
cwtl
mov
hlt
lahf
sub
fwait
cwtl
add
mov
push
pusha
idivb
insb
lock
jge
insl
push
inc
les
xchg
sub
and
insb
and
push
sbb
inc
bound
xchg
jl
add
inc
aas
mov
jl
pop
aad
xchg
pop
mov
ficompl
mov
mov
and
jae
iret
shl
xchg
insb
xchg
push
cwtl
mov
aaa
int3
dec
xor
jg
mov
dec
xchg
fiadds
mov
pop
cld
inc
imul
mov
push
jp
pop
inc
sbb
inc
andl
inc
sub
call
sbb
mov
xor
aam
pusha
mov
xor
inc
sub
jns
ljmp
xchg
nop
cmp
outsb
loop
movsl
cld
outsl
rclb
jmp
or
roll
inc
cmp
mov
adc
test
mov
aas
clc
ret
mov
push
test
mulb
jecxz
scas
or
andl
ss
jno
cmp
mov
mov
push
sarb
jno
cmpsb
mov
ret
xor
sbb
push
jbe
cmp
jb
lcall
jge
mov
stc
enter
sub
mov
push
rcll
sbb
xchg
xor
push
fdivr
push
xor
xor
loope
popf
jne
js
pop
js
lds
and
lds
xchg
clc
rcll
cmp
mov
jp
pop
push
or
pop
stos
push
mov
fmuls
dec
insb
dec
lret
mov
jp
sub
shll
pop
scas
aam
stos
push
cmp
ss
shll
dec
jne
loopne
push
sti
push
aad
sub
inc
push
icebp
test
sar
pop
loope
dec
add
cmp
mov
je
addr16
push
push
dec
and
icebp
sub
imull
loopne
les
jae
cmc
mov
fimull
adc
mov
adc
inc
mov
pusha
fmuls
cli
sub
push
push
popa
test
mov
mov
pop
add
mov
dec
inc
inc
sbb
mov
add
pusha
cmc
cmpsb
dec
sbb
dec
out
push
mov
push
shr
sahf
xchg
test
cmp
xor
inc
push
fildl
ja
stc
scas
push
adc
es
bound
add
and
inc
int
xchg
lret
int3
add
int3
jno
clc
jecxz
fldl
int3
sahf
push
popf
aad
pop
xchg
xchg
mov
adc
inc
mov
fs
cmc
sbb
pop
insl
push
popf
jecxz
adc
and
aaa
bnd
loop
sbb
cld
cmp
and
xchg
mov
jecxz
cmpsb
aad
sbb
pop
xor
mov
data16
jb
cli
insb
xchg
cmc
xchg
and
and
orl
testb
dec
add
jb
sbb
adc
call
addb
mov
mov
jmp
jl
repnz
push
push
sbb
xchg
pop
out
push
addr16
push
xorb
pop
les
xor
mov
sbb
sbb
inc
movsb
or
jns
dec
push
testl
xchg
fisubl
push
inc
std
push
sti
ds
mov
les
add
inc
cli
loope
into
sub
or
add
push
adc
sbb
lds
adc
imul
sub
lea
mov
sbb
cmpsb
in
loop
cmc
xor
enter
daa
cwtl
sarl
add
cli
ljmp
stos
sub
sbb
orb
and
arpl
ror
ss
jp
je
fsts
mov
jmp
inc
clc
jg
and
push
mov
sub
sahf
movsl
jp
xor
aaa
jg
stc
rcll
lods
outsb
int
out
jo
stos
ret
mov
jp
fwait
mov
dec
subb
push
jge
jmp
cmp
add
scas
add
push
pop
repz
idivl
test
and
dec
sub
in
leave
mov
mov
loope
ja
pop
jmp
fwait
inc
out
push
mov
inc
bound
in
cltd
and
jb
aas
cmp
outsl
cwtl
cmp
mov
mov
xor
or
jnp
push
mov
popa
jnp
pop
jp
stc
pop
aaa
js
outsb
xor
cwtl
shll
xorl
bnd
and
shrl
jge
lock
in
jecxz
mov
flds
xor
in
push
in
js
cmc
xor
pusha
ljmp
mov
and
loope
dec
or
adc
popf
iret
arpl
mov
push
or
or
and
adc
push
jns
out
xchg
xchg
jo
pop
mov
lods
mov
rep
mov
cmpsb
addb
mov
jae
mov
mov
xor
cmp
sub
scas
mov
sbb
in
bound
or
loop
into
sbb
incl
add
mov
mov
movsb
adc
aaa
jp
jo
xlat
movsb
or
insb
push
adc
or
loope
jle
xchg
add
neg
sbb
dec
push
add
std
jbe
push
push
pop
push
icebp
lods
pusha
and
push
ja
pop
sub
repz
jle
testb
dec
leave
inc
sarl
and
mov
xchg
xchg
data16
and
gs
les
push
lods
sbb
cmpsl
add
or
ret
stc
pop
push
push
jno
in
adc
push
rcll
aaa
aam
pushf
cmp
adcb
mulb
test
cmp
dec
int
sti
sub
push
or
test
push
mov
repz
sub
fistpll
inc
sbb
jb
in
adcl
mov
incb
mov
mov
lock
mov
mov
adcl
aas
in
pop
mov
lock
add
or
insl
dec
jmp
ror
subb
sbb
adc
addr16
mov
pop
mov
into
pusha
icebp
sbb
dec
stos
pushf
pop
or
insb
dec
arpl
filds
xchg
stos
mov
sbb
mov
hlt
xchg
es
dec
lcall
loope
add
push
jno
mov
imul
mov
adcl
cmp
adc
das
xor
imul
sets
ds
daa
jl
inc
and
bound
push
imul
out
or
sbb
add
mov
pop
cmp
cmp
xchg
push
aad
mov
mov
cmp
call
scas
adc
fiaddl
jmp
add
mov
std
shll
or
add
dec
call
nop
imull
rclb
dec
call
xchg
ss
fwait
les
out
dec
xor
leave
andb
mov
and
std
repz
push
mov
xchg
xor
in
adc
mov
mov
cwtl
in
inc
iret
arpl
fbld
mov
call
aaa
lcall
jl
popf
popf
fnstenv
clc
mov
mov
push
bnd
push
mov
sbb
scas
pop
movsb
rclb
lds
test
fildll
cmp
sbb
sub
inc
mov
ljmp
mov
dec
mov
sbb
pop
stos
dec
mov
pop
test
mov
fdivrl
xchg
xchg
fdivrl
insl
dec
or
aam
jb
adc
fiaddl
cs
gs
shlb
sub
fwait
lsl
sub
jmp
mov
mov
push
shl
or
or
repz
test
into
sbb
mov
loopne
outsl
outsl
jns
aas
subb
cmp
cmp
jl
lds
addl
aam
fs
outsb
mov
jae
xchg
rclb
fstpl
sbb
inc
arpl
aas
cmpb
loopne
mov
inc
cli
xchg
adc
push
or
lods
pop
movsb
xlat
icebp
lret
adc
sub
in
pop
sbb
mov
sbb
out
jno
bound
add
cmpl
fimuls
add
sarl
fcmovnb
pop
ds
pop
push
orb
mov
mov
fildl
das
inc
stc
frstor
jmp
push
fwait
adc
mov
mov
mov
xchg
aaa
pop
cmp
pop
push
add
push
lcall
inc
jne
mov
fimuls
mov
cmpsb
ror
lea
xchg
out
out
insb
jg
pop
subb
cmp
pop
sub
adc
sbb
fisubl
push
cmpb
shrb
dec
imul
or
xor
push
mov
fdiv
mov
push
int
pop
mov
mov
cli
dec
outsb
les
shlb
cmp
movsb
fmuls
insb
pop
sbb
repnz
inc
sub
cmp
mov
xor
mov
repz
ljmp
mov
sbb
stos
xchg
add
or
add
jbe
jns
cmp
mov
mov
ljmp
shll
int
xchg
xor
jecxz
adc
shl
mov
ficomps
push
js
and
cmp
scas
inc
or
add
lahf
xor
outsb
mov
imul
adc
pop
xchg
ljmp
jns
das
insl
repz
mov
and
lods
cmp
pop
add
fadd
imul
cmp
or
mov
adc
xor
int3
pop
jnp
xor
mov
test
in
hlt
mov
mov
sarl
xchg
push
push
inc
cmp
and
adc
rcl
mov
sahf
jge
stc
dec
out
push
jmp
scas
data16
push
xor
mov
fdivrl
push
arpl
add
es
xchg
sbb
shll
loopne
push
aas
dec
out
outsb
add
mov
sarl
and
push
mov
repz
enter
jne
testl
push
xlat
push
imul
ficoms
pop
xchg
lods
dec
sbb
add
xchg
sti
dec
hlt
out
inc
or
push
mov
cmp
mov
roll
aam
dec
xor
mov
pop
fwait
inc
lahf
mov
push
nop
sub
idiv
dec
add
movsl
into
or
dec
dec
lret
cmpb
push
adc
push
cwtl
and
add
pop
inc
in
rorb
sub
mov
pushl
mov
xchg
pop
pop
inc
test
jle
pop
call
enter
push
test
pop
nop
cmpl
inc
insb
daa
dec
adc
loope
sub
xchg
mov
jg
inc
sti
std
test
jbe
movlps
dec
arpl
pxor
jnp
faddp
or
or
inc
pop
lret
push
jmp
lcall
std
stc
and
loop
mov
sbb
mov
or
mov
xchg
lea
adc
testb
sub
add
pusha
popl
xor
and
sbb
loopne
jno
xor
xor
scas
std
cltd
xchg
push
pop
lret
ljmp
adc
sbb
inc
adc
mov
push
push
divb
mov
shll
jne
jmp
popf
mov
push
outsb
mov
inc
xchg
decl
orb
mov
mov
loopne
xchg
scas
xchg
cltd
or
lods
cmp
cmpsb
repnz
call
jecxz
loopne
adcl
pop
aaa
push
fdiv
test
and
cmp
int
ret
arpl
add
add
test
jle
adcl
push
mov
mov
imul
push
push
int3
fwait
repz
mov
push
push
fwait
mov
es
insb
xchg
out
mulb
out
lods
je
mulb
mov
and
mov
cltd
adc
outsb
cwtl
rcrb
ja
test
movsb
pop
jecxz
or
mov
insl
mov
inc
testl
call
repz
loope
sbb
fcomp
pushf
lock
push
inc
aam
adc
mov
mov
inc
cmp
cld
sbb
sub
mov
dec
jns
aad
int
pop
aad
push
nop
xor
mov
pop
popl
mov
push
pop
mov
leave
into
adc
testl
iret
xchg
scas
xlat
add
sub
and
mov
mov
push
mov
inc
and
popa
leave
push
jmp
pop
call
push
adc
mov
sbb
xchg
stos
enter
shrl
xchg
inc
mov
imul
xchg
frstor
xchg
fs
nop
nop
mov
mov
xor
xor
pop
inc
dec
cmp
fidivs
imul
adc
or
adc
out
dec
into
xchg
sub
lock
scas
xor
test
loopne
call
andl
add
mov
roll
add
sbb
sahf
out
xor
mov
cmp
in
fcmovnbe
es
push
jne
lods
in
cli
inc
enter
or
mov
mov
in
xor
fs
mov
pusha
xchg
cmpsb
sbb
jle
push
loope
lret
push
sets
ret
sbb
adc
xor
test
repz
pusha
mov
inc
loope
xchg
add
scas
cli
xor
or
cmp
sahf
lods
fcomi
xor
sub
aaa
adc
inc
mov
orb
pop
cmpsl
ljmp
pop
addr16
jmp
add
lds
out
in
push
xor
dec
inc
xchg
aas
inc
and
adcl
mov
mov
jg
inc
lds
pop
jle
loopne
push
loopne
jmp
lds
push
aad
iret
int
jp
fsub
pop
or
mov
add
mov
fs
sub
cld
js
out
add
cwtl
mov
mov
pop
push
cmc
out
je
mov
sahf
in
sub
xchg
mov
ss
cmpsl
sbb
jo
data16
pop
mov
insb
insl
lock
rorl
adc
dec
fwait
mov
and
pop
mov
fimuls
mov
loopne
repz
icebp
insb
jle
cmp
out
lret
pop
dec
sti
xor
mov
mov
mov
cmp
jo
es
cmpsl
mov
or
pop
sbb
push
movsb
out
lcall
push
imulb
pop
jp
rorl
out
cmc
xchg
add
mov
fcmovnu
push
test
dec
xchg
mov
test
xchg
jb
cmc
inc
lahf
adc
and
xor
xchg
in
mov
push
or
loop
loopne
enter
push
inc
ss
push
mov
or
dec
daa
mov
lods
sub
inc
xchg
test
mov
xchg
sbb
pusha
insb
xchg
testl
lret
inc
xchg
mov
sbb
shrl
inc
sbb
cltd
mov
imul
out
adc
ja
sub
into
lcall
aaa
into
repz
xchg
out
and
push
mov
fs
insb
sti
sahf
push
adc
addr16
dec
js
add
scas
movsl
test
mov
dec
xchg
xchg
fldcw
jo
stos
js
mov
sbb
loopne
stos
jp
rcll
test
push
jg
outsb
push
out
xchg
sbb
movsl
dec
add
add
repz
clc
dec
mov
insb
cvtps2pi
shll
push
push
sbb
mov
mov
scas
and
ss
shll
pop
icebp
fistps
adcl
push
dec
test
or
sub
cmp
imul
mov
daa
jmp
or
add
add
push
dec
testb
mov
aas
xchg
jl
sub
std
gs
inc
cmpsl
pusha
mov
loopne
xor
mov
dec
cmovae
in
pop
xchg
mov
or
jne
int
out
pop
orb
dec
jbe
mov
outsb
pop
rep
or
xchg
sbb
dec
sahf
push
shlb
adc
movsb
adc
frstor
xor
out
push
fwait
xchg
sub
push
lcall
sub
mov
mov
xchg
das
repz
shll
fucomip
mov
mov
stos
xchg
repnz
pop
das
cwtl
jge
or
sbb
push
dec
mov
movl
or
out
sub
sub
neg
repnz
sub
pop
cli
xchg
jle
movsb
js
adc
mov
data16
out
mov
xchg
mov
and
push
mov
jle
xor
out
add
cmp
and
adc
lods
inc
xchg
mov
pop
imul
push
into
fisubl
ret
cmp
addb
jp
lods
outsb
pop
xlat
mov
je
leave
or
sub
cmp
lahf
jmp
paddsb
cmp
add
cmp
std
popa
jne
rcr
and
xor
jns
mov
imul
or
out
inc
mov
sub
pop
cmpsl
push
adc
add
add
pop
adc
stc
push
ljmp
pop
mov
loop
sbb
jecxz
movsb
push
xchg
inc
jbe
xchg
jmp
lea
or
dec
sub
cwtl
inc
aam
fistpll
fisubrl
xor
mov
pop
push
pop
or
jbe
sbb
loope
xchg
iret
and
nop
adc
mov
mov
pop
incb
call
addr16
and
adc
loope
or
jns
imul
push
sbb
iret
ljmp
rcrb
adc
cmc
dec
neg
mov
push
sbb
out
jb
movsl
inc
or
insb
or
dec
jg
pop
jnp
dec
mov
movsl
sbb
pushl
pushf
pop
lods
lret
sbb
and
push
arpl
orl
add
addl
repnz
push
jmp
push
fcoms
notl
test
arpl
lds
cwtl
sub
jae
dec
add
jno
lcall
rclb
sbb
fnstcw
fldcw
rolb
xchg
pop
fidivl
lds
push
jp
adc
stos
and
pop
cmp
fsubl
jl
ret
lahf
in
inc
mov
xchg
fs
std
lret
pop
pop
cld
pop
ljmp
xor
xor
inc
repnz
inc
push
ds
push
addr16
xchg
jecxz
shlb
cmpsl
aam
push
adc
sahf
notb
jae
out
ss
bound
cs
dec
adc
jo
ja
ljmp
in
or
mov
shl
scas
jecxz
sub
push
sbb
cld
andl
cmpsl
jb
test
popf
subb
xor
xchg
push
gs
xchg
adc
in
push
mov
lods
mov
fsubrp
ljmp
sti
and
lea
xchg
loop
xlat
lret
mov
xor
mov
mov
sbb
into
out
xchg
fsubs
lahf
cmc
ret
push
push
insl
mov
daa
dec
dec
fcompl
testl
adc
mov
xchg
dec
decl
mov
mov
mov
push
sbb
inc
cmc
jl
sbb
pop
addr16
xchg
rcr
xchg
mov
dec
fnstcw
inc
mov
enter
pop
fistl
fsubr
mov
testl
push
sub
xor
fstl
mov
mov
xchg
pusha
test
xchg
pop
mov
leave
and
sub
stos
push
mov
mov
es
jns
jae
ja
imulb
cmc
jmp
enter
mov
adc
mov
mov
mov
int
cmp
xor
sahf
pop
das
lahf
js
cltd
addr16
push
sbb
pop
cltd
jnp
push
jae
enter
fwait
jg
out
inc
in
xor
sbb
iret
out
xchg
xor
adc
pop
leave
xlat
add
push
adc
call
push
sub
out
movsb
and
adc
push
dec
push
fs
pop
cmc
daa
fmuls
jno
xchg
jnp
add
push
mov
jecxz
gs
clc
adc
popa
fwait
xlat
cmp
enter
add
push
mov
mov
out
mov
jne
aas
in
xchg
cmp
insl
addl
sti
cli
out
cmpsl
pop
adc
or
sub
mov
cmpsb
fwait
out
mov
sbb
jp
sub
rclb
jecxz
mov
jns
arpl
push
out
mov
loopne
insb
push
mov
mov
dec
movsb
lret
push
push
int
pop
hlt
repnz
mov
incb
mov
inc
add
adc
push
aaa
mov
sar
jb
or
pop
mov
out
cmc
cmpsl
mov
adc
loopne
push
ds
rorb
xchg
imul
cmpsb
outsl
dec
out
xor
idiv
movsb
dec
or
repz
icebp
push
or
fmull
mov
jbe
mov
cltd
div
aaa
push
pusha
mov
add
jnp
fdivs
mov
popf
insb
loopne
test
in
adc
or
insb
cltd
sub
in
cld
outsl
jnp
sahf
mov
rcrl
push
dec
add
movsb
or
stos
adc
sti
or
cmpsb
sbb
xor
or
fs
mov
push
pop
ljmp
xchg
push
sbb
dec
or
test
push
sbb
mov
sub
nop
test
inc
lahf
sahf
leave
jle
out
jle
lea
mov
mov
imul
adc
or
es
mov
and
xor
dec
adc
pop
xor
fbld
pushf
stc
loop
sarl
outsl
mov
pop
inc
aam
insb
imul
mov
clc
jmp
jae
fisttps
jg
je
ret
ja
add
popf
fnstcw
inc
push
gs
ljmp
inc
outsb
call
insb
mov
mov
shl
nop
push
jmp
mov
loope
cld
adc
adc
jb
idivl
cmp
cltd
addr16
cmc
add
xchg
mov
insb
fists
mov
test
and
imul
dec
mov
or
mov
test
dec
sbb
pop
lods
fwait
xchg
and
pop
mov
mov
pop
test
sbb
xor
arpl
hlt
or
roll
in
fwait
and
xor
cltd
pop
xor
std
daa
sub
je
adc
hlt
popf
mov
push
inc
jmp
cmp
push
push
out
out
add
subl
out
movsl
lds
sahf
and
xchg
jp
out
iret
in
add
aam
loopne
or
ds
add
ficompl
cwtl
sub
adc
lea
lods
call
loope
cmp
push
nop
pop
repnz
outsb
rclb
loope
and
xor
jbe
out
jo
pop
cltd
fs
gs
psubsb
out
and
xchg
in
dec
lea
test
pushf
movsl
mov
mov
mov
cs
lret
xchg
andl
imul
out
shl
popa
dec
sbb
pushf
loopne
stos
in
adc
in
in
test
add
dec
xor
es
into
mov
and
and
insb
inc
sbb
aas
scas
and
insl
arpl
test
notl
out
dec
nop
lds
adc
pop
sarb
mov
push
xchg
imul
mov
xchg
push
fildl
add
roll
pop
jnp
jns
mov
push
pop
mov
ss
hlt
int3
stos
hlt
ljmp
lret
push
out
into
sub
fdiv
xchg
mov
mov
aad
shrl
mov
and
out
adc
lcall
xor
jae
add
daa
les
xor
jp
scas
adc
push
ret
mov
pop
pop
nop
lret
sbb
mov
mov
mov
dec
jl
sub
mov
jle
push
or
ficomps
das
jg
or
mov
mov
out
cmp
aas
repnz
or
test
int
sub
jb
lret
cmp
sbb
mov
mov
mov
dec
cli
vdivss
or
and
lods
push
jmp
sub
inc
push
xor
movsb
daa
int3
gs
pop
fsts
xchg
fwait
and
sbb
test
jnp
lret
and
insb
adc
jmp
jp
jnp
adcb
js
rcrl
stos
out
xchg
fdivl
std
pusha
loope
cmp
cmp
dec
test
loopne
push
cmp
cltd
jecxz
xchg
or
xchg
mov
or
mov
lods
adc
mov
add
adc
subl
inc
xor
bound
pop
std
in
mov
mov
push
xorb
testb
cs
cli
loop
xor
and
jle
pandn
ret
stc
sbb
jl
push
jecxz
dec
pusha
sub
pop
into
es
xchg
sbb
addb
cmpsb
in
dec
sti
push
mov
mov
ficompl
sbb
add
fwait
imul
add
js
push
sub
push
sbb
jmp
in
push
cmp
or
jp
jg
cmpsb
or
mov
xor
leave
jbe
cmp
loop
andb
scas
mov
jp
push
mov
jp
pop
inc
or
fisubl
mov
movsb
mov
xchg
sbb
pop
stc
lahf
int3
jbe
clc
fldt
and
jmp
int3
addr16
xchg
mov
fisubs
fwait
loopne
ret
cmp
stos
lret
nop
push
mov
cmpsb
lea
xor
enter
jnp
cli
jp
inc
incl
das
pusha
outsb
dec
adc
fisubs
in
sub
xchg
fbstp
mov
sti
mov
test
xchg
imul
dec
mov
leave
lea
pop
sbb
and
popa
cmc
push
sub
pop
push
popa
test
inc
push
push
je
xchg
and
inc
sarb
out
outsl
mov
pusha
xchg
adc
or
xchg
scas
imul
outsb
jp
ljmp
stos
cli
aam
cli
ljmp
jmp
push
inc
cs
jecxz
sub
add
cmp
or
stc
mov
ds
ret
cmpb
nop
cmp
push
pop
lods
fwait
sbb
mov
imul
ljmpw
js
fcomps
sbb
xchg
dec
imul
aam
fs
ret
test
ds
fcompl
jb
enter
test
jmp
das
popa
pop
mov
cmpsb
xchg
and
cld
ret
add
pop
in
movsl
jmp
jns
dec
imul
rep
cmp
loop
inc
cmpsb
aas
lret
sub
pop
xchg
mov
cmp
push
sbb
jle
pop
outsb
out
aas
jge
out
cs
fs
movsl
xchg
xchg
cmc
jae
fnstenv
cmpsb
outsb
mov
popa
test
lods
mov
aas
test
jno
in
cmp
test
cld
inc
or
cmp
dec
sbb
pop
adc
jmp
mov
xor
push
push
inc
sub
fcoms
xchg
rcll
pop
test
cmpsl
hlt
shl
sbb
cmp
andb
cmp
lahf
sbb
pop
mov
stc
or
push
add
loop
mov
pop
js
add
adc
dec
cmp
int
sub
std
sbb
mov
inc
leave
test
int
jge
std
lret
sub
and
imul
clc
cmpsl
loopne
jnp
pop
mov
shl
pop
test
lret
fs
cli
das
cmp
lods
cmpl
or
xor
mov
pop
pop
and
xor
cmpsl
mov
sarb
jge
ljmp
dec
imul
sub
fcompl
pop
scas
cli
pusha
jmp
push
push
mov
mov
stos
gs
pop
sub
xchg
pop
call
cmp
dec
testl
or
mov
push
jb
push
add
pop
cmp
xchg
daa
pop
cmpsb
or
pop
arpl
push
stos
and
and
gs
sub
leave
or
fiadds
lods
mov
in
push
test
sub
or
rcll
mov
xchg
shl
pushf
int
es
sbb
arpl
pop
faddl
inc
jnp
mov
cmp
es
adc
cmp
xchg
cmp
mov
push
jmp
insl
dec
movsb
pushf
jo
mov
cmpsl
inc
mov
or
cmp
xchg
ret
push
push
jecxz
ds
leave
push
sbb
mov
imul
xor
lcall
inc
lods
pusha
jnp
je
dec
push
sub
loop
shr
aad
jge
xchg
cmp
mov
cmp
cmpsl
arpl
add
fiaddl
jg
mov
in
insb
pop
mov
fcmovne
fistps
test
out
js
xor
jp
xor
shlb
mov
ret
add
pop
cmp
stos
xchg
out
push
shlb
movsl
hlt
sbb
jp
mov
push
xchg
lcall
mov
lcall
xor
icebp
sbb
or
cmp
call
add
orb
cmp
in
jns
or
or
mov
repz
ret
addr16
lods
jg
and
push
fidivrl
xor
mov
xor
or
add
rcrb
roll
mov
cmpsb
sbb
cmp
fs
cmp
lods
dec
adc
cmp
xor
pop
imul
inc
int
int3
in
clc
or
xchg
int
fidivrl
repz
cwtl
push
cmp
das
mov
dec
push
push
cs
cld
sub
fadds
clc
gs
and
stos
dec
adc
adc
sahf
adc
aas
sub
repz
fdivrl
mov
rolb
mov
mov
push
ja
jae
pop
les
enter
adc
or
cmp
sbbl
stc
sbb
stc
mov
inc
pop
inc
push
mov
lock
std
adcl
je
fwait
pop
jns
inc
jecxz
and
into
push
mov
fisubl
aad
dec
push
mov
mov
mov
or
jle
jnp
inc
fsubl
xor
cltd
sub
out
adc
mov
lret
and
test
lret
fs
and
jne
aas
insb
rcrl
dec
cmp
inc
dec
add
out
aad
adc
nop
cs
into
addb
jp
fcoms
fsubl
or
scas
xchg
and
and
daa
icebp
or
pop
cs
jbe
js
lods
sbbb
jnp
dec
adc
cmp
in
inc
test
mov
ss
hlt
sub
xor
out
adc
sub
into
xchg
mov
ja
aam
mov
sbb
xor
pop
dec
fcomip
mov
pop
jmp
cwtl
jns
mov
jno
xchg
push
pusha
adc
or
mov
aad
cmpsb
push
adc
dec
push
cmp
orl
cmp
scas
mov
clc
or
xchg
and
jo
or
mov
lcall
lds
jle
ret
adc
lret
mov
cltd
fistpll
mov
jmp
xor
test
cmp
test
mov
popa
add
inc
inc
add
mov
mov
cmp
leave
orl
mov
push
jmp
repnz
or
push
xor
sub
pop
mov
aad
adc
dec
nop
push
ror
pop
dec
xor
pop
push
ret
dec
cmp
out
lret
inc
repz
hlt
aas
jae
enter
imul
lret
lret
push
or
loope,pt
sub
jmp
hlt
addl
sub
repnz
addl
cld
jmp
test
addl
mov
fstpt
sub
imul
clc
xor
in
insb
leave
stc
or
add
inc
xchg
xor
cmc
stc
xor
subb
gs
pop
xchg
js
jae
sub
sub
xchg
push
jae
and
or
iret
jge
inc
add
scas
pop
cmp
and
pop
into
aas
data16
in
push
push
jo
cmp
pop
out
mov
dec
into
mov
imul
pop
pop
jl
jmp
dec
daa
xchg
ficomps
fists
orb
lods
push
mov
repnz
popf
les
shl
dec
mov
in
adc
cmp
cltd
lods
sub
out
xor
loopne
stos
sarl
bound
lret
into
jge
nop
xchg
xchg
push
pop
insl
push
or
pop
jns
daa
xchg
das
sbb
call
mov
aaa
xchg
test
xchg
icebp
addr16
call
and
mov
jb
dec
dec
in
inc
scas
jns
jno
cmpsb
loop
mov
out
sbb
or
and
ja
xchg
or
and
in
inc
adc
out
xchg
les
xchg
outsl
push
and
fdivrl
adc
int
stos
adc
pop
mov
and
jae
xor
mov
mov
jne
pop
out
inc
data16
add
nop
call
mov
or
push
test
int3
data16
push
jmp
scas
xlat
sti
cwtl
pop
aaa
xchg
push
clc
lret
aas
iret
jb
dec
mov
xchg
jmp
dec
scas
mov
xchg
inc
sbb
cmpsl
sub
mov
sarb
and
sti
mov
dec
mov
mov
mov
push
addl
inc
sbb
pushf
sub
xchg
xor
dec
pop
jl
popf
inc
mov
dec
xor
mov
inc
xor
add
movsl
jmp
ss
lcall
shrb
std
nop
mov
jae
adc
stos
and
das
pusha
and
mov
mov
or
arpl
inc
dec
sbb
fwait
dec
push
scas
mov
scas
movsb
jle
xchg
xor
or
dec
sub
loope
jl
mov
pusha
iret
rclb
repz
xor
in
insl
call
pusha
mov
mov
test
gs
vmovhps
pop
mov
hlt
ficoms
xchg
pushl
dec
scas
mov
jo
xchg
sub
xchg
push
jmp
test
fdiv
fwait
cmc
repz
les
test
lods
int3
testb
push
and
mov
mov
xchg
imul
sbbb
mov
xchg
cmc
dec
icebp
lahf
sbb
lock
imul
inc
mov
stc
rorl
adc
or
push
ret
mov
xchg
idivl
in
inc
xchg
jnp
leave
xor
jg
inc
jmp
in
xlat
test
lods
or
adc
inc
cmpsb
cltd
out
ret
or
sbb
mov
jecxz
sti
jp
inc
mov
andb
mov
addr16
mull
sub
mov
into
mov
sub
and
jb
cwtl
pop
mov
movsb
jmp
iret
and
cmp
repnz
mov
sub
or
test
aas
mov
outsb
jns
mov
cmp
nop
pop
push
hlt
fidivrs
xchg
lea
cmp
in
lret
pop
lods
sub
shll
andb
lods
mov
imul
adc
loopne
mov
or
int
sbb
ret
ror
adc
push
and
push
and
mov
pop
lahf
mov
repz
inc
add
mov
mov
and
lock
jp
jmp
mov
repnz
mov
xor
and
jecxz
outsl
in
movsb
in
insb
stos
and
insl
sub
mov
dec
push
les
jmp
xchg
ds
xchg
lods
stos
insl
out
mov
jns
pop
jbe
shrl
mov
ja
dec
hlt
push
mov
in
cs
rcrb
ljmp
push
cld
inc
ja
pushf
mov
addr16
pushf
fiadds
subl
and
jge
adc
adc
jns
in
or
jg
inc
arpl
shl
jmp
or
or
sbb
mov
xchg
push
and
out
sbb
jg
into
sbb
int3
sbb
das
mov
jne
push
push
add
ss
cmp
pop
dec
mov
lcall
push
aad
das
pop
cwtl
push
adc
mov
fidivrs
loopne
dec
test
xchg
pop
lds
sbb
or
mov
or
cmp
lods
sbb
jo
aas
les
sbb
rcr
mov
push
test
outsl
data16
mov
mov
cmp
repz
push
inc
sbb
repz
mov
lret
lcall
popf
pop
add
test
icebp
mov
jne
imul
out
mov
ss
mov
fisubrl
ret
imul
sbb
or
mov
add
daa
mov
jmp
lods
fimull
inc
push
jmp
call
xchg
jns
jle
cld
push
inc
ds
ds
pushf
outsb
enter
icebp
add
inc
adc
add
sub
sub
xrelease
sti
aad
add
mov
mov
fidivrs
popa
dec
adc
adc
stos
and
aam
fists
push
pushf
sub
loopne
inc
jge
insl
dec
cld
ds
pop
xor
cli
out
mov
addl
mov
pop
pop
test
sti
outsl
mov
ret
enter
dec
jb
and
sahf
mov
xor
dec
nop
enter
mov
jge
loopne
bound
sbb
adc
push
or
test
std
shlb
rcrl
lock
insb
xchg
scas
mov
fdivrl
insb
add
das
negl
push
in
dec
sub
nop
push
mov
scas
sbb
enter
jl
jp
sbb
push
int3
xchg
mov
adc
inc
mov
pop
mov
or
push
jecxz
outsb
sbb
stos
xchg
push
std
out
call
imul
hlt
scas
aas
mov
push
imul
push
pop
jecxz
out
daa
mov
pop
jmp
loop
inc
rclb
loope
add
pusha
loop
pushf
mov
arpl
pop
xor
popa
pop
sahf
jnp
or
jmp
repz
sbb
int
jp
sahf
cld
mov
pop
xchg
sbb
shr
test
mov
test
cltd
jg
pop
mov
fsubrs
fsubl
fs
mov
jnp
movsb
scas
jmp
push
fcom
stos
adc
xchg
pop
test
sarb
leave
mov
sbb
fsub
repz
outsb
push
in
cmp
mov
int
scas
fisttpl
sub
repz
bound
leave
and
mov
sahf
mov
shl
lods
mov
arpl
jbe
dec
pusha
cs
cmp
xor
jge
add
sub
cmp
jge
cmp
aaa
mov
jno
shrl
sub
push
mov
dec
sub
call
pop
leave
xlat
dec
mov
outsl
enter
lea
test
test
or
ss
hlt
xchg
dec
mov
and
js
stos
inc
imul
push
jo
scas
pop
loopne
jl
aad
shlb
sbb
iret
dec
xor
add
in
cwtl
test
inc
and
add
loop
mov
push
jnp
es
xchg
cmpsb
push
push
cld
imul
stos
pop
mov
cltd
lods
mov
sbb
mov
shl
mov
rorl
add
leave
dec
lods
notl
mov
mov
cmp
xchg
ss
xchg
add
movsb
sbb
xor
sbb
xlat
mov
xchg
imull
sub
out
shlb
inc
stc
xchg
pop
pop
push
insb
in
popf
sbb
inc
inc
sbb
mov
movsl
xchg
or
jmp
push
call
push
subb
and
sbb
jge
and
in
imul
add
scas
adc
notl
cmp
mov
and
gs
fsubl
pop
or
mov
pop
enter
dec
in
mov
mov
idivb
jne
and
jne
cmp
lods
cmc
jb
push
or
stc
iret
or
addr16
mov
pop
mov
cmp
and
test
testb
lret
jno
jle
movsb
cmpsl
inc
cmpsl
into
xor
ja
sarb
and
inc
mov
in
call
daa
addr16
mov
mov
mov
ret
xchg
inc
lret
mov
jnp
cld
adc
mov
and
subl
sub
lahf
data16
pop
and
ficoms
and
stos
fcomps
fstps
push
cld
xor
std
mov
add
sub
test
cmp
lods
mov
inc
push
sarb
rcr
outsl
arpl
popf
push
jmp
daa
or
lods
cs
std
leave
mov
inc
sub
pop
mov
mov
xor
push
push
xor
mov
loop
mov
into
out
or
sti
int
cmpsl
ficomps
outsb
dec
jp
inc
jb
jbe
std
or
scas
add
push
mov
mov
jnp
mov
add
cs
das
mov
call
xor
aad
and
js
ret
jae
out
mov
sbb
jne
aaa
lret
imul
pop
lahf
pop
xor
clc
xor
call
rcrb
pop
mov
fidivs
pop
add
sub
aad
je
xor
sbb
dec
punpckldq
int
or
inc
addr16
inc
mov
outsb
imul
testl
push
push
test
pop
and
cmpsl
into
xor
mov
aaa
ss
insb
jle
jg
or
or
cmp
testl
call
mov
insl
cmovae
push
cld
incl
scas
nop
push
push
adc
adc
adc
and
inc
ret
mov
fwait
xor
stos
xchg
lahf
jb
les
jbe
xchg
fwait
addr16
bound
pusha
jl
and
and
mov
pop
sub
loop
out
scas
lods
in
iret
dec
pop
pop
popa
leave
movsl
clc
sbb
mov
loope
xor
mov
lret
add
sbb
add
pushf
adc
daa
rcr
rcrl
les
xor
xor
out
imul
mov
dec
mov
lret
mov
arpl
loop
sbb
shlb
xchg
inc
inc
gs
outsl
mov
loope
xchg
jbe
or
add
sub
inc
xor
fadds
out
mov
mov
test
sbb
xchg
aad
imul
ficomps
push
ret
adc
inc
pop
test
sub
test
loop
sarl
jle
into
cmp
xchg
mov
std
jno
inc
push
sahf
mov
mov
arpl
in
es
fidivrs
cli
sub
push
cmpl
or
push
test
and
or
lret
je
or
fmull
stc
iret
aas
jae
aas
jp
rorb
sub
ds
out
outsb
lds
mov
movsb
mov
xchg
out
test
jno
jne
ret
or
mov
cmc
int3
rorb
das
lods
aad
pop
mov
xchg
mov
mov
rolb
add
movb
dec
xor
and
push
push
or
or
repz
imul
fs
das
add
in
add
lahf
jns
pop
dec
add
ret
ficoml
sti
subb
hlt
rol
out
pop
jo
clc
bound
ret
sahf
jae
xlat
or
aad
sbb
push
inc
and
mov
mov
in
decl
cld
cmp
xchg
shll
pop
lds
pop
pop
rcrb
lds
adc
dec
add
cli
pushf
or
dec
mov
jge
ret
dec
sbb
aad
sub
mov
cmpsb
std
xlat
in
pusha
cld
sub
orb
test
cmc
lret
push
push
in
hlt
inc
aad
out
cmpsl
cmpsl
data16
aad
sub
ljmp
sbb
gs
or
in
push
sub
roll
scas
stc
jl
es
xlat
inc
loopne
bound
inc
mov
cmp
imul
pushf
jle
adc
testb
add
push
inc
fisttps
sub
mov
rorb
or
icebp
leave
hlt
hlt
cmp
gs
enter
fwait
mov
add
dec
icebp
sbb
cs
sub
sarb
es
fnstcw
int
call
and
xchg
pop
shufps
sarl
lock
aad
scas
stc
mov
test
subl
cmp
pop
out
mov
pop
xchg
sahf
and
xchg
bound
adc
in
insb
sarl
lods
aad
and
outsl
pop
mov
push
ja
loop
cmpsb
and
sbb
sub
int3
and
sbb
cli
xor
dec
mov
sub
xchg
sbb
xchg
jp
cmp
scas
jns
sub
outsb
add
loop
sub
cmpsl
cmp
dec
and
or
pop
push
lret
int
push
subl
mov
jle
push
sbb
lret
aaa
and
lea
sub
pop
in
pop
inc
cltd
xchg
mov
fisubrs
mov
movsb
lcall
xchg
incb
mov
cmp
mov
aam
bnd
mov
stos
sahf
jns
inc
andb
test
nop
xor
xor
shll
adc
mov
scas
inc
mov
cmp
cmpsl
mov
add
lods
lahf
jb
cmp
mov
xchg
inc
sub
mov
hlt
out
movsl
insl
xorb
movsb
rcrb
pusha
mov
ret
rcll
push
arpl
add
pop
push
pop
out
inc
xor
jnp
out
ja
mov
pop
movsb
and
inc
mov
in
rorl
jge
dec
inc
sub
mov
mov
popf
pusha
pop
in
add
xor
cmpsb
test
cwtl
mov
flds
cmpb
pop
mov
fisttpl
sub
insb
mov
pop
mov
cmp
pop
inc
arpl
in
cmc
cmp
imul
or
jmp
lcall
push
out
lock
inc
inc
xor
shrb
ljmp
fs
pop
mov
sahf
jne
pop
jg
in
mov
leave
dec
inc
lcall
jge
shlb
jb
stos
xor
cld
addr16
data16
ds
dec
jg
xlat
adc
ja
ds
adc
jle
adc
mov
dec
lret
jne
jb
pop
xor
jle
jo
scas
push
mov
stos
fiadds
push
xlat
push
adc
xlat
popf
cmpsl
fs
xor
ja
movsb
jo
out
mov
jge
jge
sub
je
mov
dec
jle
cmp
pop
out
outsb
test
xor
push
negb
xchg
add
or
xor
test
inc
add
add
pop
mov
xor
push
xchg
sub
cmp
xchg
xlat
enter
sbb
lock
bound
mov
inc
sub
xchg
cmp
or
ret
dec
mov
test
stos
push
jp
add
xor
sub
ficoms
xor
push
call
xchg
lock
and
xchg
mov
push
stc
sbb
shlb
aam
stos
je
dec
inc
xchg
jno
push
jl
pushf
std
out
push
sbb
pop
sub
scas
push
ja
jb
out
adc
loopne
test
push
aaa
dec
mov
push
pop
js
push
aad
sahf
sub
cmpb
push
jmp
push
push
and
or
add
in
jecxz
test
sub
xchg
jae
sub
loopne
pop
xor
cwtl
dec
or
enter
loope
xchg
bound
cmp
gs
sti
shl
gs
pop
jg
cmp
in
mov
jle
stos
dec
dec
ljmp
xchg
cmp
adcb
cmpsb
jge
mov
int3
xchg
jmp
inc
mov
xchg
imul
mov
int
xlat
lret
pop
mov
repnz
mov
or
cmp
mov
mov
gs
add
scas
mov
pop
adc
test
push
cmp
pop
pushf
std
imul
or
aam
jo
mov
call
add
sbb
test
cmpsl
nop
sahf
push
mov
sub
sub
add
xor
aam
jne
std
in
imul
and
xchg
idiv
cld
cmp
mov
movsb
ja
mov
ja
ja
in
adc
pop
sub
dec
xor
add
fdivp
sub
and
test
xchg
arpl
xor
popf
pop
mov
mull
bound
xchg
or
adc
xor
scas
dec
fwait
insb
or
and
mov
cmpsb
imul
or
pop
cs
mov
rcl
adc
jecxz
inc
cmp
mov
and
mov
push
cmp
sbb
push
fwait
rolb
add
ret
sub
and
jno
insl
movsl
mov
gs
lret
lahf
push
cmp
out
add
inc
je
aas
loope
fimull
jno
and
dec
cli
scas
shrb
push
sub
mov
jne
pop
iret
addr16
insl
sub
popf
lods
pop
cs
fiadds
imul
adc
mov
jb
mov
cltd
out
pop
cmp
mov
in
mov
movsb
ja
mov
ja
ja
in
adc
pop
sub
pop
daa
scas
or
mov
push
dec
adc
cli
cmc
xlat
mov
out
add
mov
push
pop
sub
mov
or
cmp
roll
lret
insl
xor
mov
adc
rol
decl
sbb
ds
adcb
jecxz
sti
nop
hlt
mov
push
xchg
imul
aad
jns
ficoms
push
inc
call
sbbl
mov
out
addr16
aam
adc
mov
stos
mulb
scas
add
icebp
xchg
add
loop
pop
sbb
int3
insb
out
push
dec
pop
scas
cli
in
rorb
hlt
pop
push
push
in
outsb
fdivrl
pop
xchg
inc
fcmovbe
push
lret
sbb
adc
sub
push
cmp
aas
adc
ja
sub
pop
sbb
mov
jle
das
push
xchg
xor
std
call
or
push
jb
cmp
jb
jge
dec
or
adc
cmp
xor
mov
cmp
int
mov
adc
fdiv
out
gs
test
test
testb
xlat
and
adc
fdivr
push
mov
xchg
loope
clc
shrb
in
xchg
into
cmp
xor
dec
das
xchg
adc
ret
push
add
xor
mov
aas
sub
jbe
mov
pop
add
pop
lods
iret
and
sbb
insl
test
jp
jb
cs
sbbl
stos
je
fidivl
push
fcmovnbe
shl
ljmp
cmp
sub
fldt
jbe
and
mov
add
mov
adc
jmp
xchg
jle
in
inc
leave
push
dec
lret
pop
data16
sar
sti
dec
rorb
gs
add
cmp
in
iret
and
lahf
mov
jp
adc
adc
std
je
push
popf
icebp
dec
and
out
idiv
dec
mov
popa
adc
adcb
sbbb
mov
xor
inc
xchg
xor
jg
push
mov
and
cwtl
sub
lret
mov
pop
dec
ror
loop
hlt
jnp
cmp
inc
or
dec
mov
lods
inc
inc
sub
out
push
aas
adc
xor
xor
dec
mov
ret
lret
jp
insb
push
scas
jbe
mul
sbb
ret
andl
fcmovnb
and
mov
imul
sbb
and
fucom
inc
aam
and
lea
repz
dec
movsb
std
push
cmpsb
call
xor
sarb
jbe
dec
aas
sti
ljmp
mov
pop
and
add
scas
add
pusha
cmpsl
adcl
into
sub
out
sbb
cmp
adc
ljmp
int3
inc
fildl
mov
in
leave
xchg
sub
xor
aas
mov
mov
mov
push
imul
xchg
pop
push
pop
sbb
ret
xchg
testl
clc
aam
data16
call
call
fsubrs
xor
mov
pop
rclb
pop
dec
sub
aam
sahf
jecxz
popa
inc
gs
pop
mov
adcl
insl
adc
sbb
mov
popf
pop
shrb
insl
js
fcomps
lds
dec
repz
lock
pop
push
jae
push
pop
aad
iret
fimuls
sbb
sbbb
aaa
test
cmp
icebp
cmp
sbbl
mov
dec
cmc
fmuls
push
ret
mov
xchg
js
icebp
loopne
sbb
adc
inc
stos
ss
adc
mov
or
push
xchg
xor
sub
rcl
fsubrs
aaa
pop
xchg
mov
out
rol
xor
dec
xchg
repnz
fcomps
dec
jle
mov
mov
hlt
xor
andl
mov
call
or
iret
shlb
adc
fisttpll
and
push
dec
aad
imul
and
test
stos
sub
mov
imulb
mov
and
mov
adc
pop
cli
hlt
fwait
gs
insb
mov
in
loop
lds
negl
sti
push
cmp
rcrb
fdivl
mov
xlat
fwait
cmp
and
cs
cmc
pop
pop
pop
int3
push
das
fwait
sbbb
pop
imul
ljmp
mov
push
pop
shll
add
int
ja
mov
mov
mov
fcoml
ror
leave
push
outsl
insl
cli
arpl
scas
sti
rcrl
mov
in
jae
nop
or
sub
ret
rol
ficomps
repz
sbb
in
in
sub
push
cmp
ret
sahf
ljmp
test
and
lahf
hlt
lods
inc
out
fcompl
scas
int3
test
in
push
push
repnz
pop
adc
sti
insl
inc
in
insl
outsb
out
or
inc
loope
cmp
addr16
sub
xor
lock
mov
jp
mov
and
mov
jb
cmp
push
xor
sub
rcr
aas
push
add
mov
stos
push
add
shlb
loopne
lock
jbe
mov
push
fbld
push
cmp
test
push
inc
mov
getsec
inc
ljmp
clc
mov
cmp
mov
aam
ja
rclb
insb
mov
daa
filds
push
xchg
leave
sub
jl
ret
call
pop
in
fidivrl
adc
loope
xchg
push
leave
ss
mov
je
ss
fsts
xchg
mov
iret
sbbl
jns
pop
loope
pop
sbb
add
roll
and
push
arpl
mov
shlb
pop
lock
popa
mov
push
nop
jle
add
sbbb
in
ja
arpl
jg
push
cmc
imul
fs
dec
aad
fs
icebp
unpcklps
lahf
vxorps
xor
jmp
pop
pop
mov
cmpsb
test
pop
nop
nop
fimuls
cmpsb
sbb
aam
andl
fcomps
and
xchg
sub
fisttpll
jge
adc
inc
leave
mov
xchg
jecxz
and
and
inc
in
insl
fdivrl
cmpsl
dec
iret
and
sbb
cltd
add
cmp
jae
and
int3
repnz
sub
jl
rclb
fsubrl
das
sarl
stos
bnd
lods
jae
bound
leave
shll
jp
push
lds
dec
dec
test
inc
push
cmp
cmp
mov
push
sbb
push
test
in
stos
loop
aad
add
in
or
dec
inc
popa
mov
sbb
push
xchg
jnp
add
scas
dec
stos
mov
sub
mov
mov
stos
out
outsb
pop
rol
fldenv
data16
sbb
addr16
out
repz
xor
sub
ret
cs
mov
mov
ljmp
inc
jno
and
mov
test
dec
or
test
mov
out
push
les
sub
or
ret
sbb
aas
and
adc
bound
mov
in
pop
mov
out
cmpl
sub
adc
insl
add
loop
fwait
mov
int
inc
xchg
push
das
cmpsl
inc
sbb
pop
out
nop
jnp
add
pop
mov
push
mov
lds
daa
inc
cmp
scas
cs
rcll
daa
and
mov
sahf
aaa
jo
into
loope
adc
inc
insl
xor
sahf
mov
push
push
and
in
insb
mov
and
stos
inc
and
repnz
ljmp
cmc
jmp
mov
fcmovne
incl
in
into
inc
imul
cmp
and
aam
xor
out
fisubrs
mov
mov
add
pop
push
popa
push
mov
pop
jbe
insb
xchg
jns
fnstcw
movsb
xchg
cltd
mov
cmpsb
mov
stc
aas
test
call
inc
mov
pop
pop
mov
loopne
hlt
sub
pop
test
jg
pop
xor
das
sub
nop
addr16
pop
fs
scas
divb
push
call
mov
inc
jns
pushw
sbb
pop
jo
shl
adc
xchg
adc
fisttpl
jb
pop
imul
dec
dec
mov
and
cld
stos
mov
pop
out
adc
push
fs
popa
jnp
sbb
outsb
sub
mov
sbb
cmpsl
mov
popf
dec
aaa
cmp
push
clc
dec
sub
iret
hlt
cld
out
mov
fcmovu
pop
xchg
adc
int3
in
mov
jo
add
add
mov
mov
ffree
ficompl
aad
insb
jae
sahf
push
cmp
movsb
xchg
shll
cli
ss
xor
jl
stos
lret
jle
adc
rcrl
je
ds
fidivl
inc
lahf
outsl
mov
push
pop
add
sub
sub
fistps
inc
lods
cmpsl
loopne
call
mov
pop
adc
xchg
sub
xor
test
mov
enter
fsubrs
adc
ret
ret
mov
iret
nop
xorl
test
outsb
jmp
mov
mov
pushf
mov
sbb
jg
or
jbe
mov
fistpll
sbb
aas
shrl
push
lock
mov
fists
fnstenv
fs
shrb
rcll
cltd
push
jo
dec
adc
cld
xchg
pop
push
das
in
js
xchg
into
fincstp
and
or
inc
xor
push
inc
xor
mov
shr
scas
pop
lock
mov
mov
imul
sub
clc
jo
sub
stos
popa
mov
push
jbe
lods
call
aaa
pop
insb
inc
mov
adc
ds
sub
mov
pop
push
push
sbb
mov
repnz
mov
cwtl
cwtl
es
dec
lret
pop
shll
cwtl
out
xchg
push
mul
lret
push
adc
inc
mov
jae
repz
pop
ss
push
fsubrs
cwtl
mov
jbe
xchg
cmc
inc
mov
dec
xchg
add
xchg
ret
cli
hlt
loopne
pop
outsb
cmp
fs
into
cs
sub
sti
adc
inc
imul
adc
pop
xlat
call
cmpsl
repnz
cmp
lret
jmp
test
xchg
or
cmc
ret
sbb
fldenv
clc
xchg
call
jnp
fcmovu
fldcw
and
std
jecxz
repnz
rcrb
and
loop
aam
sbb
out
push
call
xchg
mov
fs
push
sahf
std
xor
pop
fbstp
push
gs
sbb
xlat
sbb
inc
movsl
dec
in
jbe
jno
testl
adc
repz
inc
cmp
fstps
cltd
mov
arpl
xor
and
dec
call
sub
cmp
ja
leave
push
pop
xor
aas
repnz
lret
mov
out
adc
sub
mov
add
and
cmp
push
and
inc
stc
icebp
push
fsts
negb
inc
mov
addr16
pop
shrl
aad
pop
jno
push
xchg
mov
loopne
mov
inc
mov
xor
cmc
dec
dec
cli
stos
outsb
xchg
pop
pop
inc
bnd
mov
das
lret
jg
rcrb
jo
sub
or
lods
push
fsts
mov
pop
xor
mov
stos
movsl
andb
les
mov
ret
sub
lcall
push
pop
insb
iret
xor
mov
test
hlt
inc
roll
adc
lahf
popa
je
fwait
pop
repnz
lods
in
ljmp
sub
aad
enter
int
lds
dec
popf
push
icebp
mov
jg
jmp
into
ljmp
shll
shl
and
cmpb
xchg
dec
jmp
out
je
push
fcomp
jmp
push
enter
xor
shll
fcom
std
repnz
in
sub
xor
ljmp
test
xchg
pop
aam
inc
mov
sbb
repz
xchg
mov
sti
movsl
das
pop
mov
xchg
outsl
ret
xor
xchg
aad
mov
mov
or
lea
ja
cwtl
shlb
hlt
ds
add
ret
or
imul
xchg
cwtl
int3
mov
xor
or
jecxz
and
jns
cmp
mov
jne
mov
int3
pop
push
push
adc
test
pop
jns
outsl
stc
dec
addr16
and
mov
out
clc
jle
jbe
jge
test
pop
imul
cmp
mov
in
loope
cmpsb
push
loope
adc
dec
outsl
sbb
or
int
cmp
sbb
aam
out
pop
mov
inc
adc
mov
sarl
inc
cltd
pop
sbb
xorl
popl
xor
and
icebp
sbb
pop
aad
sbb
add
and
int
in
add
xchg
cmp
fcmovu
cmpsb
mov
xchg
sbb
je
cmp
dec
dec
outsl
les
pop
jle
sbb
sbb
cmp
lahf
lahf
cmc
cmc
mov
dec
cmp
push
inc
mov
push
aam
popf
dec
notl
movsb
mov
std
sbb
sub
add
push
mov
mov
xchg
xor
mov
pop
adc
movsl
mov
xlat
dec
test
sbb
mov
mov
mov
inc
sbb
adcb
js
mov
aam
in
je
ss
int
add
dec
outsb
loop
add
lcall
ret
negb
sti
or
mov
fucomp
lock
or
fldenv
and
arpl
out
add
sbb
jns
sbb
add
das
dec
inc
push
shrb
push
mov
xor
cmpsl
mov
xchg
shr
sbb
jb
clc
ret
leave
pop
in
sub
xchg
inc
pushf
mov
jecxz
cltd
xchg
repnz
repz
dec
mov
lret
clc
cmp
pop
arpl
pop
push
jg
inc
in
xor
adcl
daa
ljmp
xchg
loopne
out
sbb
loope
incb
invd
jle
inc
push
clc
loop
sar
ljmp
dec
mov
mov
jae
or
rcrb
std
xlat
sub
mov
sub
aad
mov
roll
shl
icebp
dec
sub
or
mov
mov
out
push
int
scas
fiadds
push
jne
icebp
jne
xchg
stos
icebp
fidivrs
idivl
mov
push
jl
lahf
sahf
and
pushf
cmp
push
mov
out
ret
icebp
scas
lcall
mov
push
mov
mov
dec
dec
adc
mov
sub
and
sbb
loop
adc
pop
and
xchg
enter
mov
dec
loopne,pt
sbb
scas
push
movsl
mov
cltd
pop
and
xor
inc
inc
fcoms
mov
and
js
test
and
jecxz
inc
fs
lret
sub
push
or
je
mov
sti
sub
das
outsb
mov
lods
jnp
int3
ret
clc
mov
inc
push
imul
roll
mov
test
subb
mov
jmp
xor
inc
inc
xlat
push
mov
loope
mov
jo
or
bound
clc
aam
add
fsubrl
bound
in
stos
jbe
mov
addr16
dec
and
pop
outsb
sbb
mov
shl
out
ss
mov
pop
jmp
das
and
fisubrl
inc
inc
fcmovnu
cmpsb
ffreep
rcl
xchg
les
clc
lods
aas
les
and
adcl
fs
xlat
cmp
movsb
aaa
mov
mov
cmp
jbe
adc
push
pop
sub
in
test
and
jns
lods
pop
and
cltd
mov
movsl
push
add
lcall
push
mov
mov
mov
cli
sub
adc
sbb
pop
inc
outsl
and
hlt
aaa
jae
aad
cmc
add
dec
fnsave
mov
hlt
int
adc
xlat
push
out
or
sahf
jns
jae
loopne
cwtl
in
mov
add
cmp
mov
mov
sbb
mov
inc
add
test
jecxz
mov
mov
xchg
or
mov
xor
dec
insl
sbb
dec
shl
mov
mov
cmp
popf
cmp
or
push
out
mov
arpl
int
jns
mov
inc
dec
jne
rolb
sti
mov
mulb
push
cltd
xor
sbb
dec
leave
mov
dec
fldt
sub
adc
jg
push
push
inc
cli
adc
das
cmpsb
sbb
push
mov
mov
out
fwait
stos
sbb
sub
add
push
jns
jno
dec
or
jge
cmp
iret
shlb
imul
push
jo
adc
pop
mov
add
cs
dec
loope
fisubl
jno
sbb
cs
or
cwtl
and
insb
loop
push
push
and
add
xchg
in
cmp
sbb
fstpl
orb
xor
out
mov
ficomps
les
mov
mov
mov
aad
iret
dec
mov
inc
lahf
jo
mov
mov
roll
lcall
adc
fst
inc
sti
inc
mov
lahf
inc
lods
adc
sahf
cmp
and
mov
mov
test
movsl
pop
divl
inc
xlat
xor
loopne
or
xlat
dec
xor
dec
movsb
xor
xor
cltd
push
jnp
jge
lock
leave
popaw
fwait
mov
mov
add
xchg
xor
jae
mov
adc
adc
or
das
les
lods
mov
xchg
ret
out
push
xor
pop
repnz
popa
sbb
jmp
dec
decb
aas
frstor
mov
in
cmp
pop
mov
jle
aas
mov
shll
inc
push
loopne
cmpsl
stos
orl
pop
push
aas
mov
movsb
scas
adc
push
pop
mov
sub
fdivr
xchg
rorb
lahf
mov
jb
leave
or
call
out
inc
stos
movsw
fcmove
dec
mov
adc
stos
or
mov
xor
js
scas
mov
xlat
sbb
div
push
jb
dec
aaa
jp
or
xchg
jno
mov
insl
pop
fstps
rorl
mov
aad
pop
push
pop
sub
ret
sbb
sbbl
fidivrl
pop
jno
jns
xchg
mov
cs
lea
dec
sbb
cmpsl
es
xchg
mov
mov
and
dec
dec
or
addr16
fxtract
or
mov
push
cmp
rorb
je
mov
loopne
xchg
jae
jae
jecxz
sbb
fsubrs
cmpsl
int3
mov
mov
push
loopne
mov
sahf
test
xchg
or
cmp
outsl
test
pop
jbe
lods
into
fmuls
inc
adc
aam
lods
xlat
mov
clc
xchg
fisttpll
cwtl
or
mov
sbb
idivb
inc
mov
cmp
xchg
inc
jge
and
or
jl
sbb
in
stos
es
or
stc
sahf
je
out
stc
js
add
jl
mov
lea
add
mov
sbb
jge
mov
rcrb
jp
adc
inc
cmp
inc
int3
cmpsb
dec
add
inc
fdivrs
push
or
mov
jns
into
sub
pop
mov
inc
ljmp
add
xor
jb
inc
or
dec
fisubl
lahf
pop
sbb
in
mov
bound
in
jp
aam
imul
bound
xchg
jo
cld
jecxz
and
insl
mov
loop
push
add
pusha
lea
xor
neg
adcb
adc
test
js
and
dec
in
adc
scas
sub
adc
mov
sub
mov
out
ficoml
dec
inc
jae
fwait
push
jp
int3
and
sub
cmp
xor
xchg
add
sub
push
rcrb
stc
lret
jle
mov
mov
dec
cmpsl
icebp
xchg
fisttpll
cmc
mov
negb
imul
push
cwtl
jnp
data16
push
xchg
subl
iret
sbb
shlb
or
sbb
jnp
cli
pop
cmpsb
es
data16
mov
push
repnz
das
pop
mov
leave
xor
xor
test
mov
sub
mov
enter
in
fstpl
mov
pop
test
xchg
ret
mov
test
jno
pop
out
jp
das
outsb
mov
rolb
adc
ret
add
adc
add
mov
loopne
imul
inc
xor
in
and
pop
mov
enter
sub
loopne
hlt
mov
adc
pop
stos
mov
dec
lcall
pop
sub
mov
lahf
aaa
in
sti
xor
jge
addb
and
jae
aam
flds
cmc
imul
push
popl
test
add
mov
jg
mov
xorl
pop
jbe
sub
push
mov
push
xchg
push
orl
add
sbb
lcall
es
daa
xchg
test
cmp
pop
dec
mov
adc
sub
inc
and
jnp
jno,pn
dec
and
pop
leave
fildll
popf
clc
int3
push
ds
and
mov
out
dec
out
aas
rcrb
into
dec
idivb
add
or
pop
or
imul
sub
lock
ss
inc
xor
mov
pushf
jp
stos
or
repnz
mov
adcl
and
imul
xor
xor
sbb
shlb
or
push
sbb
repz
adc
jnp
mov
leave
adcb
push
pop
movsl
arpl
sbb
mov
adc
push
cmpl
out
iret
lea
xor
xor
adc
call
outsl
nop
pop
or
adc
test
sbb
insb
cli
or
push
jns
loope
and
jne
pop
or
pop
repnz
or
loopne
pop
and
fldenv
ficoms
sarl
jne
cmp
cmp
pusha
test
jbe
xchg
add
cmp
pop
out
and
call
push
faddl
sbbb
fiadds
mov
cltd
sub
lock
add
cmpl
xchg
out
nop
fldenv
inc
sti
icebp
sbb
pop
ja
negb
lcall
dec
insl
push
pop
fwait
pushf
dec
xchg
outsl
iret
mov
lds
adc
push
jmp
fwait
test
hlt
into
dec
ret
mov
cmp
pop
push
pop
cwtl
in
dec
lds
mov
enter
add
mov
pop
jge
nop
or
jle,pt
aas
dec
push
and
les
sub
xchg
add
or
add
dec
pop
xchg
outsb
or
lods
mov
xchg
inc
push
out
add
sarl
pop
pop
or
rolb
lret
test
cs
fwait
add
xchg
mull
subl
xchg
pop
xor
bound
loop
cmp
mov
jge
out
and
into
inc
mulw
add
mov
test
sbb
xor
jb,pn
movsl
mov
jle
sbb
fstpt
push
or
cmp
jmp
iret
out
aam
fisttpll
das
xor
or
cmpsl
add
cmpsl
mov
movsb
inc
sbb
in
aad
sub
lods
add
cmp
inc
jle
out
jns
inc
push
andb
data16
int3
mov
xchg
inc
stos
push
lds
outsb
jmp
imull
pop
es
push
mov
mov
scas
jg
add
adc
pop
iret
scas
push
js
mov
loope
xor
add
adc
mov
test
shlb
mov
dec
adc
filds
jge
cs
rcrl
ret
push
mov
adc
in
in
imul
dec
repnz
mov
add
popf
pusha
enter
stos
pop
dec
fwait
out
dec
xchg
sub
mov
mov
es
inc
cmpsb
aam
fdivrs
cli
cwtl
mov
test
repnz
orb
testb
es
ret
mov
loopne
mov
fisubrl
in
call
mov
add
nop
movsl
mov
lcall
mov
add
fwait
sar
inc
inc
lret
sbb
and
ss
ret
iret
outsl
mov
jns
or
fsubl
hlt
in
pusha
out
xchg
pop
push
jge
pop
adc
or
dec
dec
fs
sub
inc
movsb
mov
jmp
mov
fidivrs
xor
std
xor
enter
pop
lret
and
or
xchg
lcall
test
jb
push
mov
and
fsubrs
adc
lods
test
xor
pop
xor
push
ret
mov
into
inc
loopne
in
dec
push
shlb
mov
cmpsl
das
pop
jg
out
lcall
push
sbbb
call
aas
sub
and
loopne
mov
lret
xor
test
lahf
movsb
repnz
adc
mov
lret
mov
jmp
mov
in
gs
fimuls
mov
inc
test
int3
push
push
xchg
add
rol
lods
insb
decb
popa
cmpsl
jno
lds
xor
adc
mov
xchg
into
adc
jne
push
pop
add
mov
mov
xchg
adc
add
sub
mov
testb
xor
dec
fmul
mov
shl
lock
nop
test
insb
and
cltd
test
cwtl
lods
and
loopne
inc
mov
xorl
pushf
jae
inc
sbb
nop
icebp
push
cmp
movsb
dec
sbb
and
loop
out
cld
dec
int
or
incb
pmaddwd
cmp
sbbb
mov
and
add
adc
out
and
daa
mov
pushf
xchg
and
xchg
movsb
push
jno
sti
fstpt
mov
xchg
push
lods
sti
fisttps
sbb
shll
dec
mov
cmpsb
nop
stos
xchg
xchg
xchg
gs
xchg
push
and
incb
nop
and
repz
aad
cmp
shrl
out
cwtl
sub
push
add
andb
add
and
fwait
dec
test
dec
ja
mov
xor
push
mov
js
adcb
cli
cmp
in
xchg
adc
das
rcrb
push
out
stc
iret
test
xchg
pop
andb
mov
adc
xor
mov
or
sub
add
or
lret
dec
xor
mov
cmp
sub
add
mov
outsl
pop
and
js
or
gs
ret
push
or
sbb
lods
mov
test
sub
jge
mov
mov
std
jnp
bsf
xor
cs
insb
out
and
in
push
adc
xchg
fwait
mov
jae
pop
dec
rol
insl
adc
xor
loop
fildll
cwtl
dec
push
jmp
ret
decb
js
pop
mov
sub
ret
mov
inc
in
pusha
aas
into
bound
inc
or
aad
lahf
jbe
add
jmp
pop
xchg
inc
jmp
and
out
iret
xchg
and
or
cmp
icebp
sbb
loopne
fwait
inc
inc
pop
push
test
push
pop
pop
stos
jb
out
xor
mov
add
push
sbb
mov
push
mov
sbb
jge
movsb
fimull
jmp
xor
ret
loopne
adc
repnz
cli
dec
std
repnz
sbb
stos
clc
outsl
out
scas
mov
jae
hlt
jp
mov
mov
cmp
push
mov
pop
insl
in
xchg
in
ret
test
loop
popa
in
dec
leave
imul
xor
and
jo
pusha
inc
adc
sbb
xlat
addr16
std
js
clc
sarb
or
adc
sbb
decl
sub
and
ss
sti
arpl
pop
cli
fcomps
mov
inc
sbb
dec
jne
cld
pop
push
or
cli
dec
xchg
shrl
lret
cmp
nopl
xchg
popa
and
mov
cmp
out
jnp
pop
leave
nop
movsb
inc
addr16
mov
gs
in
xchg
adc
ss
imul
sahf
jg
filds
push
loopne
xchg
mov
xchg
sbb
mov
clc
mov
ffreep
add
divl
jge
repz
adc
xchg
cmpb
mov
push
stc
xchg
mov
cmpl
popa
sub
out
xchg
sub
mov
mov
loope
push
mov
mov
xchg
mov
in
sbb
fstps
push
pushf
ret
cmp
cmp
test
jmp
pop
mov
addr16
enter
inc
adc
stos
js
or
jle
sub
ja
in
cltd
dec
xchg
pushf
scas
pop
pushf
popf
fisubrs
pushf
cmc
iret
add
in
or
inc
out
sub
xor
into
pop
jmp
jae
push
popa
scas
mov
inc
call
jp
pop
lods
rcll
pop
push
xor
lock
in
add
test
mov
addl
sub
test
call
lret
movsl
stos
out
aas
call
or
and
mov
jae
xchg
ficomps
aam
push
pop
stos
sbb
cmp
and
psllq
and
push
push
pop
xor
outsb
in
lods
mov
vcvtsd2ss
xchg
mov
push
mov
cmp
push
and
add
pop
jp
test
testb
sbb
iret
mov
lods
outsl
jbe
jmp
cli
fmuls
jbe
fcomps
loope
adc
inc
rcrb
in
cmpsl
add
cmpsb
jb
adc
xchg
cld
stos
imul
pop
mov
ds
into
or
ret
xchg
push
into
mov
mov
xchg
add
idivb
rcl
jns
out
mov
lock
xchg
cwtl
cmp
rep
mov
loopne
adcl
pushf
rorl
in
or
mov
sbb
mov
shlb
xchg
adc
xchg
jae
loop
jecxz
sbbl
ljmp
test
addb
stos
xor
inc
lods
push
fs
fbld
add
mov
loope
and
sub
sbb
dec
push
es
xchg
mov
inc
sti
imul
dec
sahf
aaa
ja
push
mov
mov
sbb
push
aaa
adc
pop
xor
sbb
mov
stc
pop
aam
clc
ficoml
push
ret
sahf
push
repz
dec
xchg
push
mov
dec
pop
inc
sbb
or
movsl
jmp
push
sbb
sti
sub
add
pop
push
jnp
mov
ret
std
gs
xlat
xchg
cmp
popa
rcl
sbb
mov
and
mov
sbb
or
cltd
shlb
sbb
js
out
stos
andl
hlt
outsb
mov
xchg
xor
cmc
outsl
movl
mov
push
mov
adcb
and
mov
jae
and
adc
mov
sbb
mov
je
lock
mov
inc
mov
into
outsl
iret
adc
xor
lds
out
rcrl
jmp
outsl
inc
mov
iret
repnz
mov
clc
out
sbb
lods
es
sub
popa
rorl
pushf
dec
or
sahf
rorl
xchg
push
fistps
in
mov
fadd
subl
push
and
insb
push
fildl
arpl
and
mov
ret
movsl
aam
dec
push
mov
rcrl
jg
lds
call
xor
push
dec
mov
psadbw
pop
mov
inc
pop
sub
cwtl
xchg
mov
cmc
pop
dec
aas
cmc
jge
push
lcall
ja
mov
imul
rorb
or
xor
jo
cwtl
hlt
es
repz
mov
mov
mov
or
sbb
cmp
rep
rcrb
loope
stos
adc
xchg
sarl
les
jge
mov
adc
inc
negb
and
cmpsb
or
and
dec
inc
es
ret
scas
inc
cltd
ljmp
out
inc
mov
mov
aam
mov
outsb
insl
mov
ds
outsl
test
xchg
xor
shlb
jge
mov
xor
daa
repnz
and
cmpsl
icebp
hlt
jbe
mov
inc
popa
mov
mov
outsb
andb
and
mov
sub
adc
push
jno
cmpsb
mov
insl
les
xchg
shl
pop
pop
nop
jbe
cld
lock
mov
or
icebp
decl
add
sub
movsb
or
or
lea
and
sbb
rcll
jne
inc
adc
loope
dec
pop
and
add
int
adc
jg
cli
jmp
xor
xchg
inc
lea
je
imul
nop
inc
inc
pop
adc
mov
test
jmp
ret
mov
je
stos
inc
lock
sbb
test
icebp
push
adc
out
pop
pushf
hlt
inc
pushf
aad
lret
xchg
das
shll
sub
sbb
fsubs
mov
lret
and
mov
lock
gs
mov
addb
mov
jp
or
shrb
xchg
mov
jmp
mov
push
fidivl
push
sbb
in
push
pop
adcb
shl
aaa
enter
lods
lcall
mov
pop
sub
lock
clc
xlat
ja
pop
or
stos
sub
sbb
add
in
roll
jecxz
xchg
dec
scas
addr16
xchg
in
das
push
xchg
or
insl
call
adc
fimuls
push
les
sbb
xchg
cs
xchg
mov
push
insb
cmp
lcall
leave
pop
leave
sub
fidivrs
out
adc
or
and
pop
fcoms
pushl
nop
out
and
xchg
xor
decb
sub
adc
dec
rorl
or
mov
dec
lods
pop
test
add
jns
arpl
pusha
cmp
xor
movsl
dec
mov
test
sub
pop
adc
pop
sbb
add
inc
leave
or
jge
pop
sbb
adc
out
mov
ret
mov
jo
fistps
leave
mov
add
pop
mov
mov
insb
add
jl
xchg
add
sarb
mov
lcall
ss
xor
dec
fwait
lock
and
inc
nop
push
ja
ljmp
xchg
test
pop
or
cltd
ljmp
fsubrp
pop
adc
ret
jnp
xchg
shlb
lcall
jmp
int
jle
mov
push
or
push
mov
daa
ret
add
gs
push
cs
nop
divl
push
cld
rorb
mov
dec
dec
cld
mov
ret
mov
adc
sub
mov
cbtw
bswap
daa
add
lea
pop
add
lock
fisttpl
jle
add
mov
rolb
pop
leave
jmp
stos
mov
pop
dec
xchg
mov
pop
mov
or
or
ret
imul
aas
sub
cmp
call
push
mov
pusha
xchg
sub
sbb
or
jnp
arpl
lret
lods
aaa
or
pop
jmp
daa
cmpsb
mov
dec
mov
add
pop
pop
adc
mov
ss
mov
in
sbb
mov
cltd
mov
ljmp
and
dec
ds
shrl
in
lcall
lcall
movsl
push
xchg
jae
cld
cmp
leave
in
ds
and
gs
das
jle
push
imul
repz
call
mov
es
popa
add
xchg
sub
test
hlt
orl
daa
insl
out
into
jp
scas
cmp
dec
repz
mov
mov
call
ss
and
ljmp
push
or
push
iret
xchg
mov
push
lods
push
pop
out
xor
mov
pusha
or
pop
pop
push
mov
mov
in
sub
test
jecxz
xor
fadds
aam
pop
mov
jbe
rcrb
cmp
gs
sti
insb
mov
aam
dec
cmp
andb
lea
xor
pop
mov
out
xor
shrb
stos
push
dec
lahf
in
mov
jb
mov
js
push
xchg
shrb
testl
icebp
mov
cwtl
pop
sub
pop
jg
jmp
push
xchg
vzeroupper
arpl
xchg
push
fildl
add
imul
jns
nop
andb
inc
mov
cld
fldl
shrb
mov
pop
jl
xchg
push
pop
pop
cmp
xchg
rclb
aas
pop
das
fadds
sub
mov
adc
js
cmc
ss
fdivl
pusha
lahf
xchg
xorb
jecxz
arpl
leave
sub
mov
mov
add
ljmp
adc
jae
loope
out
xor
mov
jecxz
jle
xor
push
outsl
cmp
mov
mov
and
pusha
daa
in
test
lcall
popl
mov
cmp
pop
push
mov
insl
add
jecxz
pop
pop
popa
aas
sub
jae
jb
int3
movsb
or
dec
test
icebp
mov
jae
mov
sahf
rol
stc
lret
mov
push
int
arpl
jl
jp
cli
sbbl
cltd
lods
stc
lcall
fsts
sub
and
rcr
sub
mov
pop
lret
jecxz
mov
xchg
cmp
mov
pop
adc
mov
mov
mov
dec
jb
inc
psubsw
out
icebp
jmp
imul
sbb
loope
add
push
in
or
lds
cwtl
sub
inc
adc
mov
notl
test
aaa
loop
repnz
lea
jbe
add
xchg
xchg
inc
ljmp
cltd
cmp
dec
xor
pushl
mov
nop
xor
push
xor
adc
rorl
add
lret
push
cli
cs
gs
push
pop
or
js
lods
mov
pop
stos
or
push
inc
enter
imul
lods
cmp
ret
mov
jl
sub
addr16
cld
int
add
clc
mov
lods
insb
icebp
mov
es
jg
mov
sub
nop
lods
sahf
clc
insw
lret
xor
adc
mov
dec
add
push
inc
mov
mov
mov
iret
jbe
mov
outsb
ret
icebp
mov
push
addr16
or
dec
inc
in
fsts
add
add
scas
xor
add
out
out
or
push
aad
in
mov
push
xchg
stos
inc
push
imul
xor
sahf
xchg
movsl
fmull
mov
and
dec
out
sbb
jo
sub
js
out
push
iret
xor
pop
idivl
dec
repz
jnp
nop
push
arpl
jecxz
mov
sbb
cmpsl
rcrb
fdivl
pop
mov
mov
add
sub
dec
inc
jg
sti
mov
xchg
jae
test
add
cltd
out
scas
cmc
aaa
cmp
out
mov
push
imul
fimull
sub
or
sbb
pushf
pop
gs
jp
pop
sub
adc
and
gs
jge
mov
cmpl
mov
or
pop
xchg
jne
out
stos
pop
adc
inc
sub
in
mov
insb
ret
stos
ror
xor
iret
cmp
imul
jl
movsl
jno
fwait
pop
fs
jmp
or
out
xchg
or
xlat
jns
mov
cmp
push
lcall
xchg
mov
mov
adc
mov
jns
subb
test
sub
add
adc
test
or
adc
rcrb
arpl
test
mov
inc
sub
mov
inc
and
or
dec
ffree
xchg
aaa
inc
mov
jmp
xchg
loopne
jmp
rorb
and
pop
repz
dec
sbb
lahf
fcompl
pop
or
or
pop
fistpl
dec
daa
test
xor
popf
or
xchg
lds
or
xchg
stc
mov
and
inc
add
mov
fs
shl
mov
outsl
cmp
repz
mov
jo
cmp
andl
gs
loopne
daa
shrl
or
imulb
movsl
push
push
cmpsb
mov
cltd
imul
pop
inc
xchg
sub
sahf
cmp
sti
mov
std
and
int
arpl
add
add
imul
sbb
adc
test
or
jnp
in
and
xlat
push
add
xchg
jge
add
add
movzbl
xchg
lods
aas
add
test
add
lret
ja
mov
cmp
jp
adc
xor
clc
xor
aam
adc
cmpsl
fimull
cld
push
pop
sahf
aaa
and
and
pop
fidivl
push
jecxz
ficoml
jae
adc
mov
and
push
scas
test
hlt
mov
sbb
ficompl
dec
stc
scas
xchg
fxch
das
dec
dec
addr16
push
test
shrb
mov
divb
icebp
xor
insl
shlb
lcall
cwtl
sub
push
lcall
negl
cmpsl
pop
subb
adc
xchg
add
pop
nop
scas
adc
fnstsw
jnp
mov
mov
or
push
arpl
fs
insl
in
mov
sti
out
push
cmp
out
fstps
sbb
ja
shll
loope
ss
add
xchg
imul
shll
testl
lods
aaa
xor
into
mov
inc
mov
jnp
mov
arpl
push
scas
xchg
fildll
mov
jo
inc
or
addr16
and
test
xor
lcall
stos
push
cmp
jle
push
mov
mov
cmp
and
cmp
enter
add
xchg
gs
mov
mov
push
and
xor
pop
mov
fs
movsl
scas
cmp
sbb
fisubs
fwait
cmp
xchg
imul
dec
cltd
jg
or
xchg
push
fnstcw
adc
jno
sub
xchg
scas
sahf
pop
aas
stos
add
cmp
add
aaa
fidivrl
mov
jge
mov
in
or
ljmp
subb
cmp
mov
cmp
cmpl
ror
push
mov
xchg
xchg
in
fildl
cmp
loop
andb
dec
mov
mov
jmp
push
add
inc
into
mov
mov
sbb
sub
pop
lea
in
add
pop
and
mov
adc
sub
sti
rcll
ret
mov
lock
rcll
fstps
sub
int
xchg
clc
cmp
push
dec
fdivrs
fimull
test
fstpt
shlb
xor
cltd
cmpsb
add
mov
in
xchg
flds
sti
add
adc
adc
leave
popf
or
push
add
inc
pop
sub
and
inc
or
push
mov
repnz
idivl
ljmp
or
dec
out
add
push
mov
or
das
xor
cltd
stos
mov
mov
mov
mov
cmpsl
mov
lea
xchg
bound
mov
inc
test
and
jge
jp
cmpsb
addr16
mov
lds
bound
lcall
out
fldt
xor
inc
bound
aaa
gs
aaa
enter
shll
rcl
mov
mov
scas
sbb
sbb
fmuls
jo
iret
rclb
stos
adc
jne
xchg
inc
add
jo
mov
mov
jne
adc
xchg
cmpsb
add
aam
imul
scas
loopne
pop
dec
xchg
or
out
pop
cmp
sub
push
insb
adc
mov
or
addr16
in
sbb
es
inc
adc
daa
movsl
pushl
jge
and
push
mov
xor
or
mov
je
pop
mov
pusha
insb
jmp
mov
mov
jle
shll
and
mov
cmc
pop
xchg
add
imul
leave
fsubs
fiadds
cmp
mov
mov
xor
mov
and
lret
push
push
sahf
leave
ja
test
dec
dec
rcrl
sub
adc
insl
js
out
dec
loope
cmpsl
in
or
inc
cmpsb
jge
or
cmp
pusha
int3
pop
pushf
scas
pop
bound
inc
pop
dec
cmp
outsl
inc
mov
xchg
pusha
mov
sbb
outsl
push
mull
xor
bound
icebp
out
in
push
call
push
dec
mov
fisubs
lds
mov
xchg
fidivrs
test
gs
cmp
jge
popf
xor
xchg
dec
loope
dec
xchg
movsl
enter
fdivl
cmc
mov
jbe
or
mov
and
lret
aaa
mov
or
addl
sbb
aad
std
popl
sub
sub
xor
jecxz
jae
sub
xor
sbb
cmp
test
setno
cmp
add
xchg
mov
mov
loope
push
leave
add
stos
es
jne
jmp
in
ret
std
cli
and
mov
outsb
lock
mov
or
dec
movsl
lock
imul
cmpsl
call
cmp
inc
xor
cltd
scas
dec
xlat
popa
popa
sub
sbb
stos
sbb
insl
push
fldl2e
push
ret
mov
cmpsb
das
ret
pop
push
mov
mov
ret
fstl
stos
repz
mov
mov
stc
stos
les
test
bound
mov
sahf
mov
subl
lahf
repz
push
add
xchg
and
imul
lret
dec
or
dec
push
lock
adc
push
push
fnstsw
adc
mov
mov
insl
cmp
sbb
add
aam
lcall
in
lahf
data16
filds
pushf
push
cmp
xor
jecxz
add
or
cmp
nop
mov
mov
leave
jae
popf
in
jp
stos
dec
test
ret
xor
test
sub
push
sbb
mov
loope
jo
sub
test
mov
push
add
addr16
repnz
decl
xchg
mov
adc
mov
inc
push
mov
inc
jns
pop
pusha
aaa
cli
cmp
aad
in
xchg
fwait
cmc
fwait
or
mov
jmp
mov
and
sub
sbbl
push
imul
jno
enter
mov
push
adc
mov
inc
insl
popf
jb
rcll
lods
imul
fmull
int3
mov
nop
sub
loop
scas
inc
fmul
mov
add
pop
mov
clc
or
imul
mov
lret
outsl
sub
dec
ja
lods
dec
sbb
cmp
cltd
mov
popa
cmp
mov
cmp
arpl
or
mov
jo
sbbb
in
call
xor
outsb
outsb
mov
addl
lock
xchg
fcmovnu
cmp
mov
cmp
pop
les
lret
loopne
js
xlat
sub
inc
daa
sbb
and
add
out
sub
fnsave
pushf
aaa
fabs
xchg
sub
addl
popa
ljmp
pop
das
aas
je
shr
bound
aaa
rorl
pop
jl
jns
push
inc
mov
insb
sti
inc
and
jo
sahf
mov
pop
xchg
es
inc
pusha
mov
add
cmpl
testb
xor
sbb
push
mov
cmc
jg
xlat
ret
cs
xor
pop
mov
call
push
push
xchg
mov
stos
cwtl
js
setns
sub
xor
lds
lods
xchg
hlt
orb
sbb
mov
cmp
movsl
inc
push
or
pop
push
arpl
aas
pop
pop
repnz
aas
lret
shrl
into
xchg
and
sbb
mov
adc
in
dec
xchg
pop
daa
jb
shlb
mov
dec
push
or
mov
inc
dec
xchg
and
nop
xor
adc
xor
or
adc
sub
ja
into
data16
ljmp
or
jle
mov
cmp
xor
and
sub
icebp
or
jnp
add
jmp
inc
cld
mov
jno
stos
or
insb
movsl
push
push
push
out
incl
sub
cmp
arpl
adcb
daa
iret
imull
fs
stc
iret
sub
fwait
mov
xchg
push
push
jbe
shr
int
popf
mov
aam
mov
inc
adc
sbb
xor
mov
push
test
pop
test
clc
xor
and
insl
pop
dec
sbb
xchg
cmp
cmc
sub
pop
andl
and
icebp
mov
dec
repz
mov
cmp
shl
adc
cs
jne
add
inc
xchg
push
and
and
std
push
jnp
pop
mov
lock
movl
scas
mov
les
jo
mov
cld
add
jns
and
cmp
inc
testl
mov
imul
fwait
loopne
cmpsb
out
cmp
insb
and
clc
outsb
xchg
sub
je
orw
cli
sub
inc
imul
and
fsubs
jmp
jmp
insl
mov
dec
js
jmp
pushf
xor
jnp
pushf
sbb
cmp
pop
push
xor
icebp
test
xchg
ficoml
and
popf
push
sub
pushf
daa
mov
aad
jbe
sbb
movsl
sub
fisttps
mov
test
popa
jbe
mov
nop
or
sti
mov
jae
and
mov
mov
test
mov
adc
adc
cmpsl
sahf
subb
arpl
pop
cmpsl
mov
sbb
mov
push
or
dec
mov
in
dec
fisubrs
cmp
daa
cli
out
int
mov
cmp
ud2
or
sub
cli
sarb
insb
cmp
cmp
xlat
push
push
out
dec
and
xchg
pop
mov
fcmovu
mov
pushf
push
mov
fs
xchg
dec
std
fildll
cmp
xor
xor
lahf
lret
bound
adc
mov
add
push
adc
jae
xchg
repnz
inc
fwait
jae
icebp
mov
stos
xor
push
mov
dec
and
js
pop
xchg
xor
mov
daa
inc
stos
inc
push
leave
push
lock
mov
mov
mov
mov
xchg
jle
jb
stos
cmc
sub
mov
popf
mov
loop
sbb
pop
and
pop
loopne
sub
adc
or
rcrb
adc
pop
inc
or
pop
mov
daa
adc
pop
and
std
popf
push
cmp
lret
cli
insl
push
icebp
movsb
cmp
inc
mov
dec
cld
loopne
adc
divb
lret
dec
sahf
cmc
aaa
hlt
scas
insb
inc
in
jnp
sbb
xlat
cs
gs
dec
push
sub
jae
aaa
jae
scas
mov
mov
inc
int3
fbstp
pop
xor
xor
mov
lds
ss
fcmovu
lods
pop
jecxz
mov
add
insl
das
lea
inc
ljmp
mov
fwait
bound
fs
ss
stc
xchg
andb
fnstsw
add
repz
mov
std
mov
and
xchg
mov
cmp
fisttpl
in
iret
push
outsl
daa
andl
mov
push
stos
stos
xor
je
xor
cmpsb
das
pop
repz
xchg
lret
ss
jecxz
sbb
nop
fdivl
and
loop
fidivrl
out
imul
test
jmp
outsl
mov
ret
or
pop
fs
lret
int3
cmp
incl
aad
ficoml
imul
lret
call
stc
leave
pop
std
pushf
jl
in
xchg
popa
push
pop
popf
fistpll
xchg
aas
shrl
imul
or
mov
inc
or
jb
mov
inc
fs
jb
aas
test
dec
lcall
lcall
pop
xor
adc
adc
sub
jp
iret
cmp
jb
and
bswap
subl
mov
ret
ror
sbb
test
clc
int
lcall
sti
cmp
dec
decl
inc
in
fs
xlat
fnstenv
rcrb
loop
int
test
pop
xchg
dec
inc
adc
mov
test
push
mov
icebp
imul
mov
in
pop
jnp
xlat
jp
out
out
or
lea
dec
bound
je
push
xchg
out
push
lahf
dec
aad
mov
push
outsl
mov
inc
repnz
and
push
mov
call
movsl
int3
inc
sub
mov
or
inc
fcompl
pop
pop
mov
lret
out
and
nop
mov
stos
lds
inc
pop
mov
mov
pop
fucom
sarl
inc
sub
das
rolb
insl
les
ret
popa
mov
and
xchg
dec
mul
mov
xor
iret
push
xchg
xchg
pop
lret
and
cmc
jg
fildl
pop
pop
ljmp
and
enter
outsb
sbb
mov
cmpsl
sbb
mov
jbe
test
xchg
scas
mov
or
in
cld
lea
xor
pop
clc
sub
inc
cmpsb
fistps
xor
test
mov
pop
mov
test
jnp
push
push
pusha
pop
mov
movsb
addr16
add
sub
sub
outsl
lds
lock
iret
cmp
cmp
xchg
sub
mov
mov
push
iret
xor
into
test
sub
repnz
int3
scas
jns
sar
mov
mov
or
xchg
fld
mov
mov
adc
leave
mov
push
push
cmp
or
popa
call
adc
ret
and
scas
test
dec
iret
push
outsb
mov
xchg
into
aaa
add
pop
push
xchg
push
in
enterw
iret
and
test
stc
xchg
sub
fisttps
mov
or
push
lock
xchg
out
cmc
lret
and
pop
xor
dec
icebp
xor
push
xchg
and
cltd
ficoms
add
mov
test
mov
scas
hlt
pop
mov
jl
add
iret
stos
jmp
xchg
pop
push
aad
or
fs
rorb
or
mov
cmpsl
xor
ss
dec
jns
push
add
je
in
cmc
fcmovnbe
nop
sarl
mov
ret
dec
push
inc
loopne
mov
or
sarb
push
loope
sbb
or
test
mov
es
dec
arpl
sbb
mov
js
js
dec
test
scas
inc
mov
stc
add
xchg
mov
and
mov
lock
mov
inc
xor
mov
push
and
iret
std
clc
pop
inc
mov
into
in
fdivl
cmp
mov
jge
aam
movsb
ss
cmpl
inc
ret
xor
mov
xor
pcmpgtw
outsb
and
aaa
movsb
jne
push
pop
int3
ret
loop
xor
test
inc
ret
mov
cld
add
test
xchg
push
lcall
scas
test
xchg
and
loop
je
rcr
xchg
pop
mov
add
scas
test
mov
adc
dec
leave
lcall
jge
lahf
dec
and
cmc
loop
sar
mov
bound
leave
jo
push
test
xor
xor
xchg
es
in
cmp
aaa
cmpsb
cmp
add
pop
jecxz
or
fidivrs
cmp
or
je
mov
cmpsb
jno
shlb
inc
repz
inc
inc
mov
mov
stos
pop
pop
or
xor
in
jbe
insb
gs
dec
sbb
insl
mov
jnp
xchg
jb
in
jmp
xor
ficoml
mov
add
enter
lea
cltd
push
push
idiv
jbe
and
imul
popa
adc
cmpsb
ficoms
and
in
mov
mov
pop
mov
push
xor
push
and
test
orb
push
pop
popa
add
adc
jmp
add
popa
mov
aaa
cli
or
out
fimuls
sahf
je
cmp
jmp
sar
lods
push
xor
sahf
lods
or
lods
push
push
xchg
jbe
jb
inc
pop
pop
mov
fdivr
pop
mov
aam
push
mov
jg
in
cmp
inc
dec
add
jge
imul
repz
cmpsb
pushf
hlt
and
mov
int3
mov
sbb
dec
cmp
sub
movl
inc
aas
mov
mov
xchg
jle
orb
inc
sub
and
dec
pop
into
popf
fldz
xchg
imul
or
cmp
mov
leave
leave
arpl
fldt
add
push
jnp
mov
jno
imul
fstl
fcmovb
nop
sub
mov
stc
or
loopne
cli
jbe
pop
mov
insb
sbb
mov
jno
pop
add
cmp
xchg
mov
xor
call
repz
fadds
push
and
sub
pop
in
adcl
pop
add
xchg
in
out
or
push
dec
mov
and
fstl
leave
jle
test
xchg
bound
jg
cmpsb
movsb
inc
pop
into
ret
lods
xorb
loope
and
cmpsb
cltd
sti
mov
push
mov
add
xor
insl
mov
or
imull
lahf
inc
lods
nop
outsl
hlt
push
lret
fdivr
pop
pop
xor
jg
push
loope
imul
xor
inc
test
sub
test
lahf
pop
imull
cmpsl
inc
mov
push
insl
movsb
push
out
out
xchg
push
rorb
mov
imul
das
mov
arpl
neg
push
pop
xchg
xchg
lahf
out
iret
add
pop
mov
int3
pop
subb
and
in
pop
ret
push
dec
or
pushf
sub
scas
push
lcall
xchg
jp
pop
xor
sbb
add
add
test
and
xchg
aam
or
mov
and
push
jmp
daa
fucom
mov
cmpsb
push
dec
cmp
sub
sbbb
imul
fildl
jbe
sub
call
xor
dec
mov
addr16
subb
lret
and
add
jp
popa
out
dec
xor
mov
jl
xchg
mul
loope
in
repz
sbb
stos
mov
sub
int3
mov
aaa
ljmp
cmp
fmuls
fs
mov
cmp
out
inc
dec
xchg
test
mov
aam
faddl
hlt
and
mov
stc
mov
sbb
mov
rorb
pop
and
addr16
mov
lea
aam
push
sub
jnp
jae
xchg
xchg
fdiv
jp
pop
dec
pop
jbe
sub
and
cwtl
pop
cmc
dec
jg
insl
add
in
into
sbb
push
daa
lcall
es
cmpsb
push
add
call
jo
push
lcall
in
xor
dec
inc
pop
sub
test
cmc
lds
mov
pusha
push
test
das
hlt
out
pop
ret
stos
out
dec
xorb
inc
mov
mov
cmp
insl
loop
mov
aad
js
xor
add
jne
aaa
hlt
pop
or
fstl
bound
inc
dec
pop
in
xor
mov
xchg
das
or
stos
push
push
add
inc
stos
add
loope
inc
push
orl
push
jns
push
andb
repz
sub
dec
jo
js
and
orl
notl
rol
int3
and
adc
inc
enter
cmp
fdivrp
call
or
lock
pop
pop
insl
gs
popa
int3
dec
jns
popa
jno
dec
cmp
icebp
xchg
push
nop
lret
icebp
jge
test
pop
test
pop
out
sub
jle
aas
adc
hlt
loop
mov
add
xchg
inc
adc
in
pop
roll
pop
xor
add
outsb
fldt
stos
jge
jmp
aas
sub
loope
lret
popf
jne
sub
rcrb
pop
inc
sbb
popa
aad
cmp
loope
sbb
ret
add
test
nop
sbb
jne
sub
int3
cmpsb
dec
test
mov
jne
adc
push
rclb
jne
mov
fs
xchg
pop
xor
cli
fstpt
add
stc
inc
xor
adc
pop
jmp
adc
std
mov
xchg
mov
jle
adc
jb
push
or
cmc
xchg
sub
cmp
insb
mov
lds
add
out
outsl
add
testb
mov
sbb
pop
adc
scas
mov
lret
int
movsb
imul
call
add
ds
es
leave
aad
mov
mov
xor
pop
dec
insb
flds
xor
push
push
std
cmp
pop
pop
fs
movsl
jp
pop
jbe
rcll
sarl
inc
repnz
std
cmp
roll
inc
mov
jmp
mov
sti
out
mov
mov
mov
jmp
inc
pop
loope
pop
dec
in
movsl
mov
sbb
test
ja
mov
push
sub
xor
cmp
push
xor
inc
sub
fcmovb
cltd
pop
notb
test
mov
push
pop
clc
and
scas
pop
outsb
pop
cmc
xchg
in
adc
outsb
mov
lods
inc
in
mov
les
into
ret
sarb
mov
fcmovnb
in
pop
push
or
jae
pop
wrmsr
or
sub
push
jl
rorl
test
jle
mov
insl
incb
dec
out
mov
xchg
in
mov
das
pop
test
mov
mov
mov
mov
or
das
jge
fildll
stos
shll
dec
mov
lea
sqrtps
cmp
pop
mov
lods
adc
outsb
int
je
aad
rcll
push
mov
mov
or
out
adc
inc
mov
mov
loop
aaa
or
push
shr
inc
add
xchg
jbe
lods
add
mov
pop
mov
out
sbb
or
shll
mov
lahf
orb
pop
xchg
jle
lods
vunpcklps
popf
imul
cli
and
cltd
lock
push
cli
ss
shll
dec
jns
push
or
jge
out
pop
and
inc
lds
lahf
stos
aam
loope
mov
jp
dec
enter
fnstenv
ds
scas
jb
inc
insb
ret
mov
arpl
movsl
cmp
mov
lea
lds
xor
mov
inc
cld
push
in
jp
or
mov
loop
aam
sbb
clc
out
push
inc
jne
sti
adc
push
xor
sarb
jb
sub
in
sbb
mov
sbb
and
arpl
push
mov
or
cmp
cwtl
pusha
rolb
sbb
bound
cmp
loop
mov
cwtl
add
and
push
sub
jns
jae
aad
shrb
gs
popw
addb
sbb
fdivrp
add
cmpsl
sbb
arpl
and
xchg
mov
fwait
jbe
mov
sti
cmpl
ds
arpl
repnz
in
scas
xlat
sub
and
jge
mov
jns
mov
sarl
shlb
aas
pop
push
xor
xor
imul
and
push
lret
stos
or
dec
cmp
jae
je
or
loop
adc
shll
sbb
out
or
mov
inc
mov
out
and
ret
leave
fisttpll
shl
and
stos
or
inc
shll
movsl
int
dec
mov
mov
fstpl
or
lods
enter
icebp
into
cmpsb
or
lret
pop
dec
add
cwtl
jle
cli
mov
xor
mov
xchg
rorl
xchg
retw
bound
aas
bound
or
cmc
mov
jns
shr
xorb
int3
fcomps
int3
adc
sbb
rolb
inc
idivb
inc
push
inc
dec
cli
in
rclb
xchg
cmpsb
rcl
adc
xchg
pop
imul
xchg
movd
and
scas
adc
sub
and
xor
ficoml
mov
enter
out
inc
mov
push
or
arpl
and
sar
pop
dec
pop
jbe
in
pop
mov
mov
add
pop
mov
push
and
out
scas
add
icebp
mov
mov
sub
idivb
int3
add
out
mov
push
lret
push
movsb
sbb
pusha
in
pop
lcall
out
inc
orb
shll
sub
push
test
mov
test
popa
shrl
sbb
xchg
dec
or
push
sbb
lods
out
cmpsb
lods
fidivl
rorl
push
pop
pminub
inc
inc
jo
and
aad
adc
ret
popf
xlat
lds
inc
xlat
xchg
in
xchg
dec
mov
test
loop
loopne
jmp
pop
movsb
lret
xchg
int3
mov
fnsave
and
sub
daa
or
rclb
ja
loop
stos
mov
fiaddl
outsb
shr
in
repnz
jmp
fnsetpm(287
pop
shl
daa
insl
and
out
lret
adc
cmpsl
sti
insl
jge
rorl
mov
sbb
inc
stos
pop
and
pop
mov
movsb
in
fs
sub
aas
jp
xchg
xor
xchg
mov
js
mov
nop
xor
add
test
mov
pusha
outsb
test
xchg
lock
out
insl
mov
dec
mov
push
push
lcall
imul
inc
adc
loopne
bound
bound
cmp
push
pop
hlt
in
dec
or
aas
dec
sub
xchg
push
std
jmp
cmpsb
xor
mov
xchg
lret
int
push
mov
sahf
pop
mov
sub
mov
xchg
test
mov
sub
pop
fst
test
mov
cmp
lods
adc
push
dec
push
dec
enter
das
out
or
jge
mov
mov
mov
std
repz
xor
fs
out
push
adc
leave
lock
adc
jecxz
jo
aas
mov
ds
shll
dec
das
and
sbb
movsb
in
mov
lods
in
or
inc
adc
mov
aas
add
push
clc
rcrl
sbb
mov
shlb
les
sbb
out
xor
bound
sbb
out
mov
xchg
faddp
rorl
sbb
adc
out
push
mov
sub
outsl
cmp
xchg
cli
imul
inc
iret
xor
ds
sbb
sub
lock
push
push
cltd
inc
test
out
mov
and
shll
jecxz
hlt
pop
fwait
and
jns
mov
movsb
and
push
inc
jl
jo
xchg
out
jmp
dec
fimull
sar
in
repz
cmc
pop
popa
push
fdivrl
and
lea
in
clc
lock
adc
mov
ret
ret
inc
lods
pop
sub
push
xchg
pop
mov
and
ret
push
jb
or
loopne
cmp
dec
xchg
pmaxsw
ds
sbb
insb
jg
test
pop
lods
xchg
sahf
jl
stos
mov
adc
sub
add
sub
ds
rolb
mov
imull
xchg
leave
sub
xchg
fistpll
ljmp
cmp
shl
cmc
out
jae
xchg
mov
mov
inc
ss
outsl
lahf
ret
xor
jne
lods
jl
xchg
divps
out
outsb
xor
pop
inc
sbb
out
cmpsb
push
mov
scas
inc
in
push
jl
adc
inc
pop
pushf
out
inc
movsl
sbb
or
lahf
ret
inc
sarb
cmp
add
iret
mov
dec
jbe
fs
xor
adc
sarb
adc
push
outsb
iret
adc
mov
mov
cmp
fildl
sub
add
and
add
dec
mov
scas
out
sbb
jge
jge
nop
test
cltd
sbb
je
aad
xchg
push
dec
push
mov
js
ffree
fnstenv
pop
sti
push
lret
ret
leave
stc
mov
dec
shrl
lds
pop
fcompl
bound
je
pop
and
xchg
adc
ret
pop
push
pop
pushf
movsb
sub
movsb
in
loop
cmc
scas
in
test
mov
xchg
js
out
ja
xor
jo
and
loop
lret
xlat
xor
pop
nop
test
sub
dec
mov
mov
mov
outsl
incl
xlat
push
movsl
fidivrl
lahf
lock
insl
mov
and
test
and
dec
mov
jmp
int
stc
fistps
push
repz
in
xor
xchg
dec
lods
hlt
push
jb
xorl
push
in
pop
xchg
dec
add
imul
xor
leave
sarb
imul
jle
inc
jae
xchg
jecxz
adc
dec
ret
add
or
cmp
stos
lds
stos
pushf
fidivrl
clc
cmp
jno
pop
cmp
sti
and
mov
outsl
sub
dec
sbb
push
fimull
sahf
notb
fcoml
imul
data16
cli
cmovb
shll
cmp
add
scas
or
xor
fidivrl
xor
sbb
xchg
push
popa
ds
mov
jmp
lds
in
lock
push
idivl
insl
cli
scas
gs
gs
jae
jmp
sbb
sbb
push
dec
fsubrl
push
xchg
js
xchg
dec
test
mov
rcrb
cmp
sub
loop
xlat
lock
aam
cmp
mov
cwtl
notb
jle
outsb
xchg
inc
push
mov
jmp
aas
and
enter
sub
bound
je
mov
loopne
sbb
jecxz
sbb
aas
nop
jb
jo
inc
xchg
fisttps
movsl
xor
inc
xchg
adc
push
mov
add
and
loop
adc
adc
aas
sub
push
std
test
jnp
mov
ret
jp
push
pushf
jle
lcall
xchg
add
xor
lcall
push
mov
rclb
dec
xor
ss
insl
sub
push
movsl
xchg
imul
xchg
push
or
push
cli
outsb
sbb
jo
mov
test
adc
pop
je
gs
std
loope
dec
dec
shlb
sbb
out
icebp
or
test
sub
sar
and
xlat
dec
mov
xchg
jnp
fsubp
cmp
dec
inc
sub
pop
xlat
out
push
fsts
xchg
ja
pop
aam
add
clc
add
aas
add
inc
in
sub
in
scas
mov
into
aad
mov
js
out
sbb
call
stc
and
sub
jg
mov
push
adc
mov
or
add
loopne
fidivrl
mov
movsb
pop
das
pop
clc
stos
cmp
and
arpl
xor
leave
in
mov
fstps
incl
cmp
call
mov
jno
scas
jmp
call
push
pop
outsl
fbstp
cli
cmp
sub
mov
call
jb
sahf
pop
jmp
je
outsl
mov
test
push
shrl
cwtl
sbb
cmp
ret
ficomps
std
test
and
mov
std
pushf
cwtl
xchg
mov
rcrl
fdivr
iret
test
ficoml
push
jno
ret
inc
in
and
inc
or
icebp
icebp
jae
out
negb
cmp
lret
xor
cmp
cmp
jp
lcall
cld
adcb
cmc
cltd
and
adc
xchg
sub
je
sbbl
xchg
and
addr16
mov
xor
sti
mov
mov
repz
mov
push
fbld
xchg
imul
push
inc
movsb
stos
out
call
mov
out
xor
adc
cmp
ret
mov
clc
pop
and
inc
mov
push
mov
sbb
outsl
imul
repnz
xchg
pop
adc
mov
pop
mov
lea
jns
repnz
xor
cmpsb
jns
aam
lods
mov
not
lea
addr16
ss
jns
dec
fdivrp
lcall
popa
or
mov
shll
loope
push
mov
dec
repz
lahf
jle
push
test
mov
and
je
mov
imul
sbb
mov
xor
mov
inc
pushf
cwtl
pusha
or
xlat
scas
mov
sbb
xchg
pop
jle
inc
jns
adc
aas
mov
xor
std
mov
mov
in
addr16
mov
push
fstpl
jnp
ret
adc
add
xor
pop
shrl
int3
popa
sbb
sbb
jnp
gs
fcmovu
shlb
movsl
mov
shr
adc
jo
push
mov
js
lods
mov
popa
ljmp
pop
xchg
js
cwtl
shr
aaa
jp
sub
push
insl
xor
cmp
pop
iret
int3
fsubl
xor
fstpt
sub
push
jns
dec
dec
mov
lahf
ret
and
cli
iret
and
add
mov
jl
out
lret
mov
loope
xchg
mov
sbb
std
push
cld
pop
mov
inc
xchg
jo
sub
cld
mov
popf
jb
imul
iret
lahf
not
and
cmp
fwait
jo
call
pushf
fbstp
fsubl
mov
jnp
stc
mov
xor
xor
nop
push
dec
enter
dec
nop
addr16
pusha
divb
sbb
jg
jp
leave
cmp
sub
outsl
pop
sahf
pop
mov
addr16
shll
test
pop
cmc
add
jae
cltd
pushf
add
xor
jbe
sub
gs
xchg
mov
stos
mov
js
mov
mov
adc
int3
mov
adc
dec
popa
lds
fists
sub
leave
xor
flds
or
test
insb
lock
xchg
xor
les
adc
enter
cmp
and
mov
bound
xlat
mov
lret
jbe
mov
mov
xchg
xor
nop
adc
cltd
lods
push
aam
into
fisubrs
cmp
les
into
xor
lret
fisubl
lock
cmp
xor
rcrl
lcall
icebp
in
cltd
andb
lock
lcall
shr
inc
mov
mov
xchg
pop
sub
add
xor
xchg
jecxz
test
dec
mov
imul
pusha
sarb
data16
adc
dec
push
inc
sub
pop
push
jbe
pop
adc
adc
cltd
pushl
mov
mov
popf
or
or
ficoms
xchg
add
ja
idivb
sub
jmp
dec
ret
repz
pop
and
idivl
dec
in
ds
test
mov
inc
js
mov
jne
adc
mov
lret
rol
mov
mov
popf
xchg
lods
push
xlat
jb
jecxz
mov
insl
sbb
cltd
cld
dec
pusha
fisttpl
sbb
ds
mov
lret
xchg
xor
out
lods
iret
mov
jg
mov
jge
and
sub
and
ds
jo
sahf
or
or
mov
push
scas
cltd
jmp
adc
scas
stc
cmpb
xor
call
push
enter
xor
ss
cli
daa
loope
jge
test
ja
push
add
movsb
stos
adc
jnp
push
inc
xchg
loop
cmp
mov
push
dec
int3
push
out
dec
add
aaa
shlb
fisubrl
or
xor
pop
or
jl
nop
sarb
cmp
lcall
fwait
into
add
jns
daa
aas
fs
out
dec
ja
mov
mov
dec
incl
roll
lods
fisttpll
ds
mov
rclb
push
popf
fistpll
jbe
jns
nop
sti
sar
fwait
stc
pop
test
inc
add
xlat
test
dec
or
stos
pusha
sbb
nop
jg
cmpsb
cld
call
subb
test
xor
or
cmpsl
insb
and
mov
movsb
mov
test
cmp
sbb
dec
mov
out
adc
xor
xchg
jnp
fcomp
jge
setg
cmp
or
add
hlt
repnz
mov
cli
mov
mov
shl
mov
nop
loope
adc
leave
ret
mov
xor
cmp
sahf
js
adc
jns
cld
fldl
sub
pop
push
les
mov
pop
shr
mov
mov
imul
mov
andb
mov
jo
ss
mov
movsl
inc
lock
pop
ss
cltd
lret
fmul
outsl
sbb
mov
ret
xchg
lods
hlt
insl
jbe
ljmp
daa
iret
pop
out
jecxz
jmp
out
fadds
dec
add
repnz
or
icebp
mov
xchg
addps
xor
xor
aas
xor
xchg
dec
sarb
jbe
into
or
dec
test
and
jmp
imul
sti
pop
push
xor
loopne
sets
cmp
xchg
add
pop
sti
aas
nop
stos
outsl
pop
inc
enter
test
lock
and
pop
xchg
or
add
mov
test
leave
out
cmp
or
lods
data16
sbb
andb
push
sub
pop
mov
inc
inc
cmp
xchg
cld
test
pop
movsb
loope
shlb
jne,pn
clc
xchg
dec
data16
cmp
inc
into
in
pop
mov
xor
cmpsl
or
daa
mov
fildl
push
mov
das
and
sbb
mov
cltd
sbbb
adc
adcl
rorl
fdiv
push
jae
faddl
fbstp
xlat
xchg
out
enter
mov
cmp
lock
cmpl
out
leave
lcall
add
xor
insb
stc
mov
jmp
inc
jmp
ljmp
loop
push
subb
lea
ret
insl
mov
push
arpl
fcomps
scas
lret
int
shll
ret
sbb
sbbl
jno
pop
std
lds
and
adc
aad
cmp
push
pxor
loopne
pusha
std
les
clc
push
or
cmp
cmpsb
movsb
mov
jg
xor
subb
movsb
jg
sub
add
mov
xchg
fwait
push
nop
test
or
mov
std
or
pushf
cmp
jecxz
push
push
push
aam
ret
das
mov
cmp
es
cwtl
insb
pop
rcll
stc
das
cmp
inc
mov
pusha
jns
lahf
in
mov
sub
shrl
sbb
xchg
jbe
mov
aam
cli
xchg
es
pop
ljmp
xor
scas
sbbb
cmp
sbb
test
pop
mov
add
orb
fdivrl
push
fwait
gs
jne
inc
and
icebp
cmpsb
push
subl
gs
sub
dec
cs
fcomip
mov
iret
add
cmc
sub
cmpl
or
cmp
scas
fcomi
mov
ljmp
orl
mov
or
xchg
std
jnp
in
pop
dec
insl
int3
dec
imul
mov
dec
mov
pop
hlt
cmc
mov
idivb
rcll
add
sbb
lods
jo
mov
ret
lea
std
ja
add
sbb
mov
stos
sbb
cmp
call
jg
cltd
adc
push
lcall
test
int3
xlat
or
mov
jg
js
aam
push
sti
loopne
arpl
mov
movsb
or
int3
into
inc
adc
and
les
clc
add
cmc
cwtl
sahf
push
xor
lods
insb
shl
imul
add
sbb
test
sbb
and
fisubl
cld
out
ret
shll
lea
cmp
lods
and
addb
push
cmp
scas
mov
ret
fstps
fsubs
push
rolb
adc
push
add
push
cmc
cmc
jnp
fistl
popf
mov
xchg
fsubrl
les
or
add
xchg
movsl
pop
and
test
imul
outsl
out
test
dec
inc
push
cwtl
dec
sub
icebp
sub
sbb
xchg
clc
sbb
shrb
aas
cld
aaa
and
into
cmp
sahf
and
ficoml
jmp
cmp
and
mov
enter
xchg
inc
or
mov
dec
lds
enter
nop
jb
les
std
movsb
jnp
cltd
dec
or
pusha
in
pop
xchg
cmpb
je
and
push
gs
pop
icebp
in
pop
repnz
repnz
ret
mov
sti
leave
push
repz
into
xchg
arpl
cmp
jnp
and
faddl
sub
jbe
pop
lcall
in
dec
adc
cmpsb
push
pop
and
cmpsb
sar
cmp
jae
jle
cwtl
cmp
test
out
push
fistps
push
and
repz
mov
sti
test
ror
ret
cmp
call
push
xchg
in
insb
push
jae
addl
scas
or
es
push
xchg
cli
lret
jno
out
iret
fdivl
aam
mov
or
or
adc
or
jg
cmp
xor
pop
xchg
lock
cmp
pop
out
mov
out
stos
jno
insb
add
jmp
cmp
mov
jl
pop
mov
hlt
mov
test
adc
daa
cwtl
out
pop
mov
in
jnp
pushf
sti
push
xor
lea
mov
or
notb
icebp
imul
dec
push
add
mov
loop
sbb
ja
clc
add
cmp
inc
mov
nop
add
out
adc
mov
push
or
push
imul
scas
mov
mov
inc
jl
mov
arpl
xor
and
lret
lret
adc
out
js
or
outsb
movb
cmp
cmc
out
jns
pop
fisttps
cmpl
or
dec
lret
aaa
xor
sbb
loopne
ffree
dec
or
jmp
xchg
add
ss
add
ljmp
je
add
or
mov
cmp
ret
mov
vpshuflw
push
jecxz
push
sub
or
stc
test
jo
sbb
add
mov
pop
xor
pusha
sub
iret
mov
enter
xchg
pop
dec
xchg
push
outsl
inc
mov
lock
lahf
lahf
add
jbe
sahf
push
and
xor
push
out
loopne
sbb
cld
ljmp
in
push
and
repz
scas
dec
sbbl
in
popf
daa
or
data16
sti
lock
loop
pop
inc
mov
push
xor
test
jb
mov
test
mov
test
xchg
inc
xchg
movsl
cmp
sti
jmp
out
dec
testl
xlat
mov
xchg
jae
mulb
mov
xor
stos
xor
pop
jbe
xchg
or
sub
testl
sbb
fldz
xchg
dec
movsb
aad
and
push
ljmp
sti
jmp
clc
xor
adc
dec
jecxz
sbb
lods
into
mov
sub
test
mov
pusha
xchg
jmp
mov
movsl
cmpsl
movsb
test
jne
clc
ja
daa
pop
int
jg
cmp
mov
cld
sub
sarb
in
mov
sarl
pushf
push
push
and
jecxz
in
icebp
addb
pop
es
and
gs
repnz
in
neg
insl
xor
cmp
jo
sbb
pop
in
dec
pop
push
sbb
fmull
dec
les
cmp
jecxz
enter
mov
das
sbb
sub
pop
cmp
aas
xchg
dec
add
dec
inc
push
dec
paddusb
xchg
jne
stos
sub
lea
mov
mov
scas
mov
xlat
or
mov
and
fimull
and
je
xchg
dec
sbb
pop
movsl
sbb
sbb
pop
sbb
xor
mov
inc
xor
loope
cmpsl
sub
idivl
fmuls
push
jne
fmuls
mov
push
pop
imul
pushf
mov
and
icebp
cmp
aam
push
jns,pn
arpl
bound
xchg
dec
xchg
icebp
mov
test
outsl
push
imull
wbinvd
mov
cltd
mov
mov
cwtl
mov
pop
call
dec
pusha
scas
jle
rcll
pop
mov
pop
mov
xor
xorl
jecxz
jge
adc
mov
outsl
pop
das
rorb
mov
cwtl
stc
stos
and
sbb
aam
push
jns
fdivrp
push
pop
mov
xor
xchg
push
sbb
push
rcl
mov
mov
mov
insl
popf
jne
shll
lret
mov
xchg
mov
orb
jg
repz
and
cmp
sahf
inc
movsl
popf
inc
cltd
inc
mov
je
call
pop
xchg
mov
inc
sbb
popf
mov
jno
clc
pushw
mov
pop
mov
mov
lahf
mov
test
push
lret
je
movsl
push
mov
pop
ret
mov
popa
rcrl
mov
call
push
ja
xor
adc
lods
mov
adc
fdivl
sbb
out
mov
mov
in
inc
sti
xchg
das
or
jmp
fists
adc
fwait
inc
push
push
addb
xor
adc
dec
pusha
push
jnp
mov
in
adc
call
pop
xchg
cmpsb
cwtl
sub
lcall
xchg
dec
cltd
mov
and
mov
in
popa
and
push
sub
fwait
push
sbbb
mov
outsl
int
arpl
mov
jns
add
xchg
cwtl
daa
mov
imull
or
or
mov
jne
pop
inc
aad
mov
clc
pop
clc
sbb
inc
stc
enter
iret
mov
dec
dec
lahf
js
gs
or
int
lret
int3
sub
cltd
out
inc
repnz
mov
xchg
out
sub
movb
pop
xchg
push
sub
push
xor
fmul
push
inc
ficoms
mov
jg
stc
jae
mov
xor
stos
cmc
cmpsl
mov
fisttpll
out
cltd
out
in
lcall
int3
movsb
ds
in
push
push
add
ljmp
outsl
mov
fwait
push
mov
sub
jle
adc
mov
std
add
mov
cltd
popa
jnp
in
jmp
loope
sub
sbbl
fmuls
xlat
lret
adc
push
adc
mov
jl
fs
lea
pop
in
mov
xorl
inc
xchg
inc
mov
pop
xlat
cmc
jmp
pop
lods
mov
pop
mov
sub
nop
ljmp
loopne
mov
fucomip
cmp
inc
push
sahf
pop
jo
or
mov
ljmp
pusha
mov
clc
cltd
jle
insl
jno
jns
out
dec
stc
add
test
scas
cmp
push
sub
sub
notb
push
and
movsb
cmp
xchg
inc
pop
movsb
out
imul
mov
bound
fstl
add
stc
shrb
lods
ljmp
std
sub
faddl
xchg
les
cs
or
fisttpl
fisttpl
add
mov
repz
nop
inc
push
xchg
pop
push
filds
lret
out
push
mov
mov
cmp
xchg
fwait
mov
push
push
out
or
cmc
xor
scas
out
add
mov
xchg
xor
jmp
xchg
cmpsl
cmp
cmpsb
ret
outsl
xor
jo
movsl
pushf
fmuls
or
inc
mov
or
sub
pop
pop
arpl
pushl
cwtl
out
dec
add
addr16
test
sahf
rolb
cmp
ficomps
mov
outsb
in
or
cmp
das
adc
inc
aaa
nop
mov
popl
xchg
loop
imul
pop
insl
fs
cwtl
sub
inc
idivb
inc
lods
stos
sbb
jle
insb
pop
xchg
stc
movsb
out
xchg
xchg
jmp
add
mov
sub
notb
xchg
adc
sub
in
sbb
mov
jns
stos
sbb
inc
stos
fwait
and
je
or
pop
icebp
mov
jge
mov
dec
iret
mov
pop
cmc
out
push
mov
xchg
test
stos
inc
add
push
inc
mov
iret
int3
aad
dec
push
cmp
jge
inc
xchg
pop
mov
mov
add
stc
lods
in
ja
aaa
test
loop
or
fcom
cmpsb
loopne
dec
xor
push
push
aaa
addr16
cmc
push
int3
dec
loope
xor
xchg
push
jmp
inc
insb
push
xor
loope
xor
movsl
sarb
scas
jnp
sbb
test
jo
mov
pop
sbb
mov
hlt
cs
jmp
add
pop
adc
mov
push
cmp
push
inc
push
lret
dec
repnz
inc
out
stc
pop
sub
sbb
pushf
push
lahf
jnp
and
fsub
adc
mov
test
push
mov
mov
dec
or
movsl
fildll
inc
push
hlt
inc
push
and
mov
cs
push
add
and
in
mov
mov
push
arpl
addl
lock
mov
in
cmc
push
mov
adc
enter
mov
xor
adc
fmuls
mov
pushf
inc
push
mov
aas
gs
into
mov
push
pop
shr
jns
adc
out
push
fcoms
xchg
add
push
mov
mov
cwtl
mov
in
in
cmpsl
inc
push
aam
sbb
stc
aaa
sbb
popf
or
movsb
dec
scas
es
mov
scas
and
shr
out
mov
aad
sbb
cmpsb
push
jbe
mov
jg
fwait
mov
adc
push
pop
fucom
jbe
mov
loopne
push
jmp
mov
test
xchg
adc
imul
sti
cmp
or
sub
jg
cmp
cltd
mov
push
mov
pop
or
push
cmc
lcall
fsubl
mov
into
pushf
cmpb
rcrb
dec
push
fimuls
fadds
out
arpl
jecxz
fistl
adc
or
cmp
pop
xor
jl
xchg
lahf
popa
in
out
daa
lcall
push
cmp
iret
adc
movsb
out
mov
popl
dec
xchg
mov
xchg
movsw
sub
shll
adc
ljmp
xchg
incb
es
out
movsb
sbb
cmc
pop
jno
or
pushf
jg
mov
insb
int
ljmp
push
mov
cwtl
lret
roll
mov
call
sti
cmp
outsb
cmp
lea
int
call
cmpl
pop
pop
negb
daa
mov
jge
xor
add
mov
sbb
push
xor
jmp
ret
mov
and
xchg
ss
outsl
cmpsb
stos
test
xor
iret
arpl
js
aam
pop
inc
sbb
das
sbb
imulb
mov
cmp
loop
dec
in
test
mov
dec
or
mov
test
scas
mov
inc
lret
cltd
sub
dec
mov
push
jp
add
fisttps
xchg
mov
push
aam
sbb
pop
loopne
jbe
ja
or
insb
cwtl
dec
popf
adc
test
out
fldt
rorl
pop
aas
dec
mov
lea
mov
imul
ror
xchg
xchg
sbb
jecxz
test
jbe
es
lds
add
popw
insb
cmp
outsl
adc
pop
imul
push
fdivl
std
adcl
sbb
push
and
cwtl
out
jl
jle
add
dec
jmp
aam
popa
push
jl
out
fdivrs
and
jae
outsl
rcrl
out
push
lcall
out
dec
and
shlb
adc
movzbl
out
scas
popf
sti
inc
pop
sarb
mov
adc
or
in
or
xlat
pop
sarl
pop
or
outsb
cld
out
push
xchg
cli
mov
pusha
mov
jg
imul
aad
repnz
pop
push
in
pop
xchg
clc
scas
movsl
sub
das
add
lods
inc
loopne
das
psubsb
shlb
ljmp
xlat
add
pop
xchg
jb
scas
out
cmpsl
adc
dec
stos
jbe
xchg
mov
mov
repnz
sub
or
sbb
xor
dec
nop
cmpsl
mov
pop
fwait
hlt
jne
insl
pop
lret
stc
add
adc
fs
cwtl
xchg
push
mov
mov
dec
int3
jle
test
cmp
out
imul
dec
jbe
xchg
into
mov
outsl
sub
mov
mov
fdivl
js
sbb
adc
pop
rorl
int
ds
cs
jg
adc
outsl
lahf
sbbb
dec
outsb
fiaddl
js
shlb
or
loop
jbe
pop
or
dec
lahf
mov
mov
jne
sti
call
pop
xor
popa
ds
test
pushf
jns
in
push
test
loope
pop
mull
sub
mov
outsb
imul
jp
push
adc
jle
test
mull
pushf
ficoms
adc
sub
dec
mov
sub
adc
jmp
xchg
outsb
xor
xchg
cmpsb
and
scas
imul
ror
xor
push
mov
test
mov
push
and
hlt
xlat
js
cmc
addb
cltd
loope
fcmovb
popf
mov
std
lds
subl
enter
ss
incb
std
xlat
daa
call
jl
inc
jp
rcll
push
pop
iret
sbb
shr
mov
add
or
jmp
adc
xchg
aaa
daa
mov
cmpsl
dec
xchg
push
out
dec
scas
mov
subb
and
xor
cmp
mov
sahf
insl
xchg
rol
test
mov
or
inc
mov
rcll
loope
daa
int
mov
jge
pop
cwtl
mov
cs
pop
fwait
loope
or
mov
dec
xchg
xchg
and
dec
mov
mov
cmpsb
dec
je
sub
inc
and
ret
movaps
scas
mov
xchg
push
test
or
je
push
cmp
insl
cs
fldcw
pop
cltd
mov
and
add
ja
nop
lds
mov
mov
fidivl
pop
int3
mov
rol
shrl
xchg
xchg
pop
repnz
adc
sbb
jbe
mov
adc
loope
xor
cmpsl
roll
add
cmp
push
in
pop
aaa
and
push
fildl
pop
inc
or
adc
jnp
fmuls
push
pop
loopne
inc
std
jne
push
out
repnz
cmp
psubusw
mov
or
push
push
adc
add
lods
push
std
push
mov
imul
rep
fsts
xchg
shll
lea
mov
fdivrs
sbb
imul
push
sub
cmpsl
testl
jg
inc
push
xchg
lds
adcb
sbb
xor
mov
nop
mov
inc
sbb
pushf
add
push
lds
xchg
mov
fimull
movsb
rcrl
pop
in
lahf
addb
jecxz
jge
push
fldenv
loope
add
sub
repz
xor
xchg
hlt
leave
dec
inc
and
adc
xor
dec
daa
fcmove
data16
pop
leave
je
ja
pop
pop
data16
adc
dec
rcll
cmpsb
xchg
ret
add
dec
pop
outsl
test
cmc
fisttpl
in
mov
pop
out
push
inc
jb
add
push
mov
cmp
push
adcl
sti
sub
dec
push
jge
add
xchg
mov
inc
in
popa
enter
push
outsb
dec
sub
sbb
push
mov
orl
jae
scas
adc
fcoml
mov
mov
mov
sub
and
out
push
add
rorl
dec
pop
stc
jnp
mov
add
std
add
sbb
scas
jmp
sbb
imul
test
and
enter
mov
push
pop
jnp
pusha
in
lahf
ror
and
and
cmpsb
in
dec
sti
push
mov
mov
ficompl
rcrb
fisttpl
les
mov
xchg
pop
enter
popf
subl
jg
popa
out
orb
mov
aam
out
mov
adc
int
bnd
xchg
inc
pop
aad
cmp
sub
lods
xchg
jb
fsubl
dec
stos
stos
cmp
fwait
mov
shl
lds
push
cltd
pop
in
pop
jmp
int
mov
inc
bound
jmp
ja
fstl
imul
call
ja
aaa
push
or
leave
call
push
addr16
test
js,pt
repnz
arpl
xor
push
nop
cmp
cs
add
and
filds
notb
lds
or
shlb
clc
xor
hlt
lret
mov
je
out
adc
and
aam
jnp
or
push
pop
or
sub
mov
test
ret
insb
loop
jb
je
jp
ljmp
adc
hlt
and
mov
fidivrs
lea
lret
sbb
xor
stos
cmp
stc
lcall
pop
in
in
mov
xor
xchg
lock
xor
mov
add
rolb
lods
stos
and
sti
or
rol
mov
push
insb
stos
and
mov
cmp
gs
movsb
jle
sbb
adc
inc
adc
stos
cmp
adc
mov
orl
cltd
pop
sbb
push
stos
or
and
mov
fdivrs
jle
cld
mov
clc
sub
test
jge
xchg
imul
jecxz
jle
inc
shll
dec
out
fmull
mov
cwtl
xorl
js
sbb
or
pop
pop
xchg
cmp
out
aaa
fmuls
mov
add
mulb
fsub
loopne
ljmp
out
adc
push
add
xchg
loop
xor
xchg
mov
scas
imul
bound
stos
lcall
ja
pusha
loop
sahf
faddp
in
es
xchg
xorb
loope
inc
scas
sub
mull
dec
xchg
sbb
ret
lods
rorl
push
stos
inc
out
movsl
xchg
popf
and
sub
adc
push
es
outsb
insl
sbb
xlat
sbb
gs
cmpsb
xchg
test
mov
popa
fwait
cmp
mov
inc
push
clc
stos
cmp
pop
pop
jecxz
imul
or
jg
in
ja
outsb
movb
dec
aas
scas
dec
les
lret
dec
hlt
sub
adc
stos
sbb
mov
popa
dec
mov
sbb
add
xor
shll
out
pusha
xor
test
mov
pusha
add
adc
mov
xchg
cli
icebp
out
mov
mov
daa
sbb
add
xchg
xor
jno
or
adc
test
loope
xchg
andb
mov
rcrb
sub
lret
sbb
pop
hlt
pop
xlat
call
scas
sub
out
jne
decl
sbb
arpl
push
or
jge
cmpsl
cmp
jno
add
stos
loope
das
or
aad
cltd
jnp
cmpsl
mov
hlt
es
sub
outsb
popa
dec
fsts
xchg
mov
std
pop
xlat
sub
push
cmpsl
loop
clc
movb
cmp
lds
das
mov
sub
into
cmp
cmp
rorl
jns
and
jp
repz
in
mov
rcrb
sbb
xchg
mov
push
adc
inc
pop
aaa
mov
xchg
push
push
jp
add
sahf
stos
cmp
lret
out
mov
stc
iret
loopne
jg
scas
add
push
xor
or
inc
fwait
adc
or
sub
hlt
xchg
imul
push
jmp
jno
jne
cmp
pop
jmp
xor
sti
lcall
pop
loope
or
or
jecxz,pn
or
pop
sub
cmpsl
mov
xor
dec
cmp
ret
fs
aas
inc
mov
sbb
xor
rorb
mov
mov
jb
sub
pop
in
lock
push
jmp
or
test
mov
add
call
push
ja
lret
jecxz
mov
cmc
fistpll
mov
lods
adc
fs
mov
ret
ret
lea
out
cmp
mov
dec
add
inc
faddl
jo
mov
call
lods
mov
lea
fistps
jne
movsl
ljmp
addr16
sbb
sub
mov
inc
or
push
or
mov
pop
lahf
mov
outsb
inc
or
fidivrl
push
pop
test
je
pop
stos
cs
mov
movsl
roll
push
cld
stos
je
mov
daa
sub
push
sbb
cmpsb
in
mov
xor
sub
rorb
test
mov
orb
das
mov
push
and
add
xchg
and
sti
dec
mov
inc
cmp
mov
pop
popa
adc
in
bound
mov
xor
dec
cwtl
cmc
andl
add
mov
bound
push
cmp
dec
insb
and
test
adc
into
mov
pop
cs
les
and
stc
lods
data16
pop
pop
in
sysret
push
mov
mov
filds
sub
push
push
push
sarl
pop
arpl
data16
sbb
or
les
punpckldq
cmp
jns
out
jmp
jecxz
xlat
or
mov
or
mov
aam
aaa
ficomps
pop
test
ljmp
push
cli
add
fldl
jb
push
sbbl
imul
mov
jg
add
adc
setg
repnz
test
lret
push
fdivl
cmp
mov
or
std
dec
mov
or
lock
adc
pop
in
add
out
aad
sub
movsb
xor
mov
daa
jns
lods
mov
cld
inc
sub
and
or
shl
frstor
xor
in
dec
and
jg
lahf
jp
movsb
sub
cmp
jmp
cld
mov
xchg
adc
lret
inc
xor
mov
mov
add
xchg
loope
pop
sub
mov
pop
lcall
sub
sub
dec
xor
sahf
or
pushf
adc
and
loop
fimuls
mov
sub
lock
xlat
js
adc
push
repz
mov
scas
in
mov
stc
lahf
out
sahf
mov
out
ret
xchg
enter
xchg
shll
and
xchg
enter
mov
inc
int
xor
cmpsl
fs
mov
imul
sahf
jge
push
divb
add
into
push
out
cmp
dec
ss
sub
cli
and
xchg
dec
sub
inc
cmp
xchg
cltd
mov
or
mov
dec
mov
gs
add
and
js
dec
add
or
jne
pop
xchg
in
in
call
cmc
subb
je
bound
in
pop
scas
add
orl
and
es
push
and
clc
andl
inc
xchg
sub
jns
data16
mov
test
std
aas
popf
fsubrs
xor
mov
daa
mov
xchg
jp
xorl
adc
out
clc
pop
clc
cmpsl
push
pop
or
daa
inc
popa
test
ss
jo
sbbb
mov
cmp
mov
lahf
movsl
int
cmp
jne
clc
xchg
orl
out
ret
mov
sbb
mov
jmp
or
mov
xor
test
xchg
imull
xor
dec
ret
dec
daa
lds
add
lcall
out
push
adc
scas
ja
call
frstor
sahf
sub
popf
or
movsl
push
aad
enter
bound
testb
pop
xor
popa
mov
push
insl
pop
ficompl
sub
sbb
jb
hlt
test
add
in
pop
test
cmp
cmc
fnstenv
add
outsl
lds
push
push
mov
fdivr
ja
sbb
pop
sbb
lahf
mov
and
test
lea
nop
pop
cwtd
mov
pop
push
fnstenv
inc
scas
pop
cmp
lds
push
lods
xor
daa
jmp
fdivrl
cli
cld
fmull
or
lcall
dec
cmp
addl
test
xlat
stos
jo
or
push
add
xor
or
test
pop
add
jae
mov
outsb
clc
sbb
lds
jb
mov
sub
push
rcll
frstor
or
sub
icebp
fwait
pop
xor
scas
cmp
push
aas
push
pop
mov
push
pop
add
int3
dec
nop
or
inc
lods
pop
push
jecxz,pn
inc
cmpsl
vorpd
outsb
es
in
jp
or
mov
xchg
subb
daa
out
jge
lahf
and
jne
shll
cli
test
jge
xor
sub
out
repz
pushf
dec
push
pushf
test
xchg
mov
popa
pusha
popf
inc
popf
mov
pop
inc
push
cmp
sarb
cli
and
pusha
adc
jb
sbb
jns
out
fwait
or
push
outsb
in
pop
ss
xchg
pop
dec
into
sub
mov
daa
push
clc
mov
and
inc
stos
and
into
inc
sub
cmp
or
mov
xor
test
jnp
cld
mov
push
neg
repnz
xchg
sub
aad
inc
cmp
cmp
hlt
or
push
pusha
imul
sub
incl
jno
adc
loope
cmp
mov
fs
les
and
inc
jns
and
out
in
stc
cltd
sbb
push
mov
divb
mov
and
pop
imul
mov
dec
pop
daa
jl
test
jl
mov
and
subl
outsb
and
jns
xchg
push
dec
imul
neg
or
es
cmp
mov
mov
je
lock
mov
jecxz
adc
rclb
stc
pop
ja
out
flds
dec
shl
in
jne
inc
sub
out
and
dec
mov
insl
fnstcw
mov
mov
das
jge
out
jl
xor
add
or
movsl
cmpl
sub
jbe
out
xchg
mov
mov
mov
add
jne
and
adc
loope
xor
out
mov
add
mov
or
ds
xchg
lock
pop
and
stos
inc
popa
jbe
cmp
cmp
xor
icebp
sbb
sbb
pop
mov
mov
aas
jmp
int3
push
xchg
stos
push
scas
call
push
test
into
lea
mov
adc
popa
aad
adc
leave
shld
or
xor
lcall
or
dec
jbe
lahf
pusha
out
mov
shll
ret
xlat
mov
int3
mov
mov
push
add
xor
xchg
outsb
mov
pop
in
in
popa
xlat
xchg
gs
cs
jp
jae
jmp
inc
jge
and
sbb
stos
mov
jno
mov
jne
imulb
mov
notb
pop
push
ret
fldenv
mov
mov
sbb
lcall
adc
daa
test
dec
xchg
shll
and
fcoms
adc
sbb
mov
testb
sub
adc
negb
ljmp
add
dec
dec
out
sbb
or
adc
sbb
lock
jg
dec
test
cmp
jmp
and
test
sbb
xchg
test
sub
mov
xchg
push
mov
clc
pop
pop
dec
lret
mov
jno
flds
pop
xchg
xchg
in
je
push
rolb
data16
sti
jecxz
mov
push
xchg
xchg
imul
jae
movsb
lock
or
mulb
dec
mov
jno
xchg
or
cli
sbb
insl
mov
xchg
xor
aas
or
loopne
outsb
pushf
cmc
and
cwtl
fucomip
mov
cmpsl
jp
nop
pop
push
stos
mov
inc
jg
repz
push
cmp
sbb
cld
popf
push
sbb
and
xor
and
imul
cmp
xchg
scas
test
lret
add
dec
mov
add
add
inc
fmull
es
pusha
cmp
daa
shl
int3
sub
add
adc
outsl
jnp
inc
xlat
and
cmp
int3
shlb
xor
sbb
sub
scas
lds
pop
mov
pusha
inc
ja
imulb
les
loopne
lea
ljmp
inc
dec
insb
repz
cmpsb
or
frstor
mov
pop
push
inc
es
daa
mov
add
add
lods
ret
cmpsb
mov
sub
pop
aam
bound
or
and
sub
fwait
mov
mov
adc
loope
lahf
sbb
mull
movl
mov
and
push
pop
out
aaa
jne
jo
jo
sbb
jbe
les
ret
adc
lds
ss
je
dec
dec
leave
xchg
xchg
xchg
les
jle
daa
shlb
mov
jle
in
and
enter
cld
xchg
push
lcall
vmovaps
daa
sahf
add
aad
mov
pushl
dec
push
cltd
fucomi
xchg
mov
loope
pop
cwtl
jge
scas
ret
aad
cltd
cmp
pushf
test
add
push
cld
mov
sbb
dec
rclb
hlt
out
lret
xchg
mov
sbb
mov
movsb
out
ret
addr16
jl
xchg
stc
jmp
leave
push
jnp
jecxz
lret
pop
or
shrb
mov
push
mov
int3
dec
mov
and
jnp
lock
loop
and
cmp
subb
dec
mov
jp
ljmp
in
push
adc
mov
cmp
ja
xchg
inc
push
adc
lret
dec
ds
les
insb
loop
lret
repz
lds
sbb
xchg
xor
push
add
outsl
xchg
ja
adc
inc
rdpmc
movsl
inc
subps
cwtl
jns
adc
push
xor
aaa
out
dec
add
or
call
in
or
fildl
insb
ret
inc
sbb
inc
rol
push
or
add
or
int3
dec
sub
ss
jns
dec
int
add
jle
enter
inc
add
xchg
aam
enter
fcoms
jae
lds
push
sub
cmp
arpl
adc
ds
pop
lret
cmp
fisubl
xchg
mov
test
std
adcl
pop
fisttpl
mov
lods
shlb
mov
jno
scas
jg
das
cs
loope
fnsetpm(287
je
push
pop
pop
cltd
insb
lret
cmpsb
inc
and
cltd
cmpsb
lret
rcll
dec
orl
jne
outsl
inc
mov
jge
mov
xor
test
xchg
add
jl
add
mov
xchg
push
fldcw
mov
pusha
std
mov
daa
add
dec
dec
lea
cmp
inc
fxch
mov
aam
mov
aaa
jmp
jle
insb
mov
push
arpl
xor
fwait
out
xor
dec
clc
xor
sbb
popl
decl
cmc
les
push
sbb
test
imul
sub
adc
xor
rcl
fsubrl
les
lods
push
in
mov
repnz
pop
lea
andb
in
and
xorl
dec
enter
mov
mov
push
cmp
rcrl
xor
pop
xor
fadds
jno
sub
adc
xchg
bnd
ret
loope
adcb
push
push
sub
in
sbb
pop
cmpsb
or
inc
fwait
enter
ss
xor
push
mov
mov
mov
push
inc
cmp
ja
fldcw
shrl
enter
cwtl
scas
dec
clc
aas
scas
ja
scas
xchg
pushf
fbld
js
jns
shlb
bound
mov
sti
sbb
out
lahf
xchg
push
push
in
xor
mov
xor
adc
mov
loopne
xchg
jns
pop
push
imul
sbb
and
lods
in
adc
insl
xchg
mov
in
test
dec
fisttps
lahf
cli
stos
mov
lea
fwait
das
in
shl
pop
jp
shll
andb
insl
push
hlt
push
push
adc
jg
mov
les
inc
mov
mov
stos
push
nop
insb
xor
add
push
xor
movsl
cmp
add
shll
in
pop
push
mov
js
mov
std
push
mov
dec
xor
push
int3
or
mov
mov
and
test
aas
xchg
clc
inc
mov
mov
dec
inc
cmp
sarl
fildll
xchg
clc
faddl
cmp
imul
cmp
hlt
mov
int
andb
pop
xor
dec
mov
repz
mov
orl
cmp
xchg
cmpsb
fiaddl
xchg
jnp
pop
dec
cmp
mov
ss
dec
data16
dec
rcrl
adc
add
cmc
or
fistps
scas
mov
dec
cmp
pop
pop
pop
dec
into
dec
movsb
jno
sub
sbb
call
inc
aaa
dec
inc
dec
leave
jmp
int3
js
mov
sarl
enter
hlt
inc
in
add
lahf
gs
stos
mov
into
int
rcrl
pusha
scas
push
push
sub
mov
and
cltd
jmp
mov
pop
iret
aam
xchg
push
fldenv
mov
stc
adc
jb
inc
xchg
push
dec
ss
sti
xor
ret
fsubrl
xchg
fildl
cmp
sahf
jno
daa
push
add
ja
icebp
negl
lahf
jp
and
lods
mov
and
flds
push
or
and
xor
or
ss
test
mov
push
adcl
cmp
and
push
sbb
push
fldenv
mov
xor
mov
jle
lock
shr
frstor
aas
adc
xchg
adcb
mov
inc
add
in
fisttps
sub
add
out
inc
mov
mov
ljmp
js
add
cmp
pushf
gs
jbe
das
mov
rorl
jge
mov
push
dec
push
mov
shrl
cmp
inc
push
shll
xor
loope
adc
hlt
or
aam
inc
in
out
aas
add
xchg
scas
loopne
mov
xor
sub
push
or
rorb
push
inc
jl
push
fwait
not
in
mov
loope
repnz
and
fwait
jle
insl
inc
outsb
mov
sbb
adc
push
fidivl
or
mov
gs
testb
and
inc
mov
xlat
mov
call
push
dec
mov
cmp
addr16
dec
jg
pop
push
xchg
cmp
aas
das
fnsave
sub
mov
pop
push
iret
push
push
sets
jl
inc
idiv
jbe
pop
push
clc
jge
mov
stc
xchg
mov
add
insb
dec
lock
popa
push
pop
adc
pop
mov
pop
int
movsl
cld
and
pop
lret
aas
arpl
lret
icebp
push
int3
pop
sbb
xchg
cmp
pop
cvtps2pd
mov
aas
sar
dec
pop
jns
dec
loopne
es
lret
xor
mov
jne
mov
pusha
cmp
pop
cmp
mov
cltd
push
jbe
jl
mov
xchg
cmp
jb
sti
push
hlt
loopne
repz
pop
cltd
mov
push
out
mov
sbb
xor
sub
repnz
cmp
pop
push
mov
sbb
mov
push
add
adc
mov
sub
mov
cli
push
fmul
mov
aam
addr16
sbb
adc
cwtl
subb
add
incl
icebp
push
mov
sahf
xchg
pop
jnp
fs
fcompl
out
stc
fsubr
sub
add
cs
inc
sub
ret
cmpsw
insl
aas
es
sti
cmp
pop
adc
mov
inc
loopne
and
pushf
inc
ds
cmpsl
es
dec
pop
bswap
pop
xchg
fdivrl
cmp
mov
mov
in
cmpsb
pop
jb
mov
es
jns
popa
adc
mov
scas
or
cmp
dec
popa
jno
jmp
js
pop
orb
jecxz
int
inc
jnp
push
in
movb
pop
push
fisttpll
xchg
inc
iret
sub
ret
dec
stos
and
adc
inc
mov
sarl
data16
icebp
mov
mov
dec
mov
inc
sub
hlt
sbb
es
cmpsl
int3
scas
or
ss
ffree
dec
jmp
push
popf
push
mov
mov
sti
test
lods
mov
testb
es
push
jle
pop
movsb
in
mov
fcomps
fistpll
pop
xchg
shlb
sarb
inc
cmp
push
fsubrs
and
ret
pop
jecxz
movsl
jge
nop
lret
fsubrs
jmp
xor
mov
pop
adc
inc
adc
lcall
push
xchg
lcall
lret
xor
sub
jnp
ror
out
into
push
jns
fldl
sub
pop
pop
dec
insb
lret
and
pop
mov
loop
jnp
ss
mov
lock
jno
inc
mov
cmpsl
sar
gs
aad
in
push
and
outsb
add
outsl
sarl
sarl
jge
cmc
inc
inc
and
jnp
push
sub
mov
dec
mov
out
dec
xchg
pushw
cli
jns
mov
mov
shr
cmp
fisubs
add
xor
xchg
lcall
dec
sub
dec
movsl
fildl
push
hlt
es
iret
dec
repz
adc
inc
fsubrl
scas
pop
xor
dec
push
jg
pop
push
outsb
fwait
mov
lret
pop
and
push
int
push
or
mov
int
popa
xlat
jmp
push
enter
hlt
stc
inc
mov
sub
int
mov
push
pop
push
adc
inc
jae
adcb
dec
test
xor
or
dec
inc
pop
pop
mov
ret
or
jne
ret
push
pop
dec
xchg
push
insl
jae
pop
cmpl
hlt
sti
movsl
fstl
pop
xchg
fldl
aaa
in
xchg
stos
push
inc
inc
das
out
cmp
push
push
loop
movsl
movsb
mov
je
mov
shufps
mov
rcl
xchg
push
aas
notl
fwait
enter
call
pop
jae
rorb
push
or
sub
lcall
xchg
aad
dec
or
mov
pop
dec
or
adc
or
push
stos
loopne
scas
mov
cmp
add
ljmp
add
loop
int3
pop
out
dec
push
push
xor
add
dec
dec
pop
mov
sub
mov
inc
push
mov
fldln2
cmp
mov
in
sub
les
in
mov
rorb
rorl
enter
mov
mov
sti
fwait
iret
inc
scas
stos
into
cmp
push
imul
cmp
mov
xchg
stc
fidivs
test
cmp
divl
sti
inc
int3
pop
test
mov
loop
push
xchg
dec
xor
sub
aad
jns
dec
sub
jmp
push
test
sub
sub
or
jbe
dec
sub
outsl
mov
mov
xchg
lret
mov
add
out
pop
iret
mov
or
bound
out
sub
daa
decb
out
test
or
outsl
adc
xchg
jns
mov
cltd
jbe
scas
arpl
sahf
shrb
bound
inc
push
jno
mov
cld
cmovl
inc
xchg
cld
aam
push
dec
js
inc
cmp
cmp
xor
xchg
out
dec
shl
and
call
xchg
fdiv
mov
fmull
push
pop
orl
and
and
sbb
mov
movsb
push
sub
sub
xlat
enter
mov
leave
and
lock
in
neg
es
in
imul
data16
ret
fadds
jp
jae
mov
inc
dec
xor
sub
and
ds
adc
ja
pusha
testl
add
cmc
aas
inc
push
inc
mov
add
scas
adc
call
ss
call
test
xor
sbb
xor
or
adc
pop
mov
ljmp
test
pop
ret
push
dec
adc
lods
out
outsb
mov
cld
lods
int
cmp
loopne
fdivrl
dec
jnp
out
xorb
lock
add
cmp
pop
pop
gs
push
repz
pop
pop
stc
mov
sub
repz
add
mov
mov
sub
cli
push
call
lods
or
mov
mov
in
dec
dec
ret
arpl
inc
xchg
fs
out
or
test
sub
jbe
add
pop
cmp
daa
lods
or
das
adc
movsb
mov
and
lea
mov
or
lock
idivl
pop
or
lock
cmp
in
xlat
mov
ficomps
out
fadd
aas
pusha
scas
das
sbb
xchg
xor
mov
xchg
dec
push
fcoms
xor
or
mov
and
add
popf
jae
lods
pusha
sub
andb
xchg
nop
mov
lods
xor
cli
cmp
push
xchg
and
dec
jp
aam
in
push
adc
add
push
add
stos
xor
mov
cld
es
ret
arpl
fists
xchg
mov
dec
rcrl
xchg
add
clc
xor
bound
add
mov
sbb
shll
inc
mov
mov
roll
aaa
std
icebp
data16
jle
inc
popa
pop
loope
jge
push
add
out
stc
out
or
je
hlt
pop
outsb
push
daa
pushf
dec
mov
sbb
mov
shlb
push
das
movsl
and
xchg
std
add
mov
push
iret
add
sub
jno
fs
lahf
movsl
mov
orb
jp
icebp
popa
stos
mov
jmp
out
aad
je
push
aaa
scas
addr16
sahf
mov
and
lods
jbe
dec
mov
aad
pop
fstps
subb
repz
xor
mov
gs
xor
loopne
fidivrs
mov
stc
dec
lods
sub
xchg
fisubs
xor
and
imul
rorb
ss
push
test
ret
lods
adc
inc
xor
mov
jb
mov
and
mov
jmp
xor
fisubs
push
and
aaa
sahf
js
sbbb
inc
xor
jns
jae
pop
jb
push
add
clc
mov
fisttpl
inc
xchg
adc
push
inc
cmc
pop
and
ljmp
pop
imul
cmp
push
jns
push
mov
repz
and
xorl
mov
dec
xor
or
cmp
lcall
daa
xor
xor
jmp
fsts
loop
ffreep
sub
xchg
mov
in
cmc
fwait
lds
mov
add
rcrb
scas
stc
dec
lods
sub
lock
pop
dec
movsb
mov
and
cmp
lods
pop
das
mov
push
push
hlt
lahf
cmp
and
push
dec
xor
test
xchg
std
mov
int3
lret
or
jl
mov
inc
sbb
std
neg
filds
jno
push
repz
adc
push
loope
divl
dec
adc
mov
enter
lcall
inc
pop
das
push
outsb
imul
cmp
pop
xchg
repz
xchg
mov
pop
jno
pusha
push
pop
cmp
add
mov
cmp
ret
aaa
mov
test
mov
scas
mov
sub
scas
loop
bound
fbld
xchg
cmova
push
ljmp
cs
mov
xchg
add
nop
xchg
mov
shll
add
dec
aas
push
cmp
scas
pop
dec
mov
or
hlt
xor
ret
lahf
inc
lret
sti
sarl
mov
push
push
jns
and
cli
das
mov
lock
push
sub
or
mov
pop
lock
mov
or
mov
pop
lret
cmp
push
sbb
pop
js
xchg
mov
lods
outsb
loope
icebp
jmp
jmp
loopne
cmc
lcall
push
fs
fnsave
icebp
mov
addr16
lcall
lods
mov
xchg
daa
push
out
and
and
outsb
sub
enter
push
lds
mov
dec
or
mov
lds
push
jg
jle
fildll
mov
mov
push
cmp
push
xchg
divl
mov
add
cmp
lahf
add
ljmp
in
pop
stos
pop
js
mov
push
ret
mov
cmp
xlat
adcb
jle
dec
test
sbb
and
push
cs
adc
pop
cld
sbb
repnz
cli
insb
cmp
or
dec
mov
cwtl
and
adc
adc
cmp
xor
push
fisttpll
mov
into
mov
inc
push
xlat
into
cmp
popl
mov
fnstcw
mov
int3
icebp
addr16
popf
pop
out
inc
push
mov
mov
jecxz
pop
fcoml
xor
mov
aad
adc
lods
pop
inc
insl
sbb
jg
and
or
lock
push
mov
xor
sbb
scas
loop
push
dec
mov
loopne
push
out
loopne
jl
hlt
in
pop
dec
pop
mov
xchg
mov
jl
xor
loopne
cmp
inc
xchg
or
cmpsl
and
xchg
insb
sub
cld
and
outsl
xchg
filds
mov
pop
repz
inc
cmp
xor
inc
out
cmp
addr16
push
inc
sub
push
mov
fnstsw
xor
fwait
dec
aas
and
cmpsb
iret
repz
jae
cmpsl
loope
add
sub
and
mov
arpl
sti
rcll
in
xor
dec
test
mov
into
mov
in
pusha
aam
cmp
inc
icebp
cmp
aad
insb
ja
or
sub
pop
and
push
mov
dec
rclb
lods
mov
das
aam
xchg
mov
stc
jbe
and
sbb
mov
pop
jne
mov
adc
jecxz
cld
mov
iret
hlt
pop
lock
data16
repnz
dec
push
test
mov
aaa
and
inc
cmp
jo
test
out
cmc
popf
dec
xor
js
mov
push
add
lahf
cmp
pop
call
addr16
mov
fprem
push
push
test
pop
arpl
dec
sar
gs
adc
fmul
decl
dec
sub
jns
leave
sub
dec
dec
scas
dec
cli
arpl
ffree
lret
rcll
jge
pop
fsts
out
mov
pop
pop
icebp
inc
xor
cld
jbe
mov
lret
outsb
or
shll
mov
lea
sub
pop
mov
loope
mov
push
outsb
mov
lcall
adcb
data16
mov
mov
mov
jmp
cmpsl
stos
stc
jbe
cmp
lods
mov
out
test
fstpt
outsb
sub
mov
dec
lds
testl
or
dec
and
daa
xchg
push
adc
insb
test
xor
insl
cmp
inc
add
ss
in
sub
dec
sbb
pop
jb
xchg
fstp
push
mov
rol
sub
das
clc
adc
add
popa
dec
sbb
aaa
or
imul
addb
jmp
stc
fdivl
into
imul
push
inc
test
lea
and
push
dec
and
push
cmpsb
and
and
dec
mov
inc
addr16
mov
in
pop
mov
push
inc
mov
icebp
cltd
bound
xchg
inc
jnp
xchg
lret
fdivrp
sub
dec
cmp
xor
xchg
sar
lods
mov
les
es
sbb
aas
or
fwait
stc
push
mov
scas
pop
dec
push
gs
jecxz
dec
add
loope
push
and
cmp
cmpsb
int3
mov
and
in
adc
pop
xchg
push
sub
call
mov
pop
dec
jnp
call
mov
int
xchg
adc
cmc
and
iret
aam
dec
cmpsb
xor
push
pop
aam
imul
ja
pop
inc
mov
sub
in
xchg
jp
popa
xor
popa
jae
test
inc
and
dec
scas
les
sub
les
and
mov
lret
inc
rol
mov
sarb
cmp
sub
repz
ljmp
fcompl
rcrl
js
bound
sub
idivb
fistl
jno
dec
adc
cmp
out
push
insb
hlt
adc
dec
int
lcall
push
insb
in
fimuls
or
lods
xor
imul
aas
sbb
push
imul
fnsave
jle
mov
and
imul
sbbb
pop
cmp
call
das
addr16
enter
cld
adc
loope
xor
sbb
sbb
and
mov
fildl
xor
inc
jb
cld
mov
sbb
inc
incb
and
test
rorl
pop
in
cli
push
fnstsw
dec
cmp
xor
shr
jne
fisubrl
push
cmpsb
mov
mov
cs
pop
into
cmpxchg8b
into
hlt
cld
imul
cmpb
in
or
imul
arpl
mov
idivl
pop
outsl
out
fnstsw
mov
aam
jmp
sahf
inc
jo
jb
cmc
daa
cmp
popf
jmp
icebp
rorl
xchg
mov
pushf
adc
rorb
sbb
pusha
cs
cmpl
sahf
xchg
das
push
jl
pop
and
inc
outsl
mov
add
inc
add
pushf
mov
fwait
or
push
sbb
mulb
push
sahf
mov
out
mov
jg
cmp
jle
aam
fisttps
sub
dec
out
cs
sub
test
push
push
ret
push
iret
jg
subl
arpl
push
sub
arpl
getsec
adc
adc
gs
jns
shl
mov
mov
and
pop
cmp
dec
or
or
and
jmp
nop
fisubl
pusha
int3
rcll
into
inc
into
xor
std
ljmp
out
mov
out
push
hlt
je
cmp
in
insb
lahf
divb
mov
dec
mov
stc
mov
mov
clc
mov
adc
push
add
loope
movsb
sbb
ds
mov
shlb
pop
mov
and
loopne
mov
mov
mov
call
fdivrs
pop
out
mov
mov
out
aaa
mov
into
test
test
sbb
loopne
mov
inc
roll
sbb
adc
mov
mov
mov
mov
lods
sbb
sub
inc
cwtl
ja
pop
cli
push
fdivrl
leave
xor
outsb
xor
xor
stos
pop
movsl
inc
sub
movsb
and
pop
arpl
out
pop
pop
add
jp
pop
add
into
xor
or
scas
dec
loopne
imul
xchg
iret
fisubrl
lods
xchg
scas
stos
jle
bnd
fisttpl
mov
push
dec
insl
pushf
and
in
push
nop
inc
jb
cmpsl
std
push
sbb
or
mov
push
lea
adc
ffree
dec
inc
add
clc
mov
xchg
fucom
cmp
cmp
xor
int3
pop
call
lds
insl
adc
stos
jnp
out
and
or
lret
addr16
daa
aad
test
pushf
or
cmpsb
scas
in
shr
mov
mov
jge
testl
dec
xchg
xlat
xlat
mov
lods
into
sub
repz
adc
in
lock
test
gs
mov
pop
fisubrs
push
xor
outsb
adc
fldenv
sbb
dec
aam
lods
cs
mov
ss
in
xchg
add
inc
push
jno
jmp
pop
mov
sarl
dec
dec
dec
pop
arpl
push
inc
enter
and
out
mov
dec
cmpsb
cmp
scas
add
jl
cld
int
xchg
xor
or
pusha
xchg
fcomip
xor
xorl
rcll
or
xorb
out
push
rcll
adc
jmp
cmpl
xchg
stos
cmpsl
cmp
jnp
push
dec
shlb
pop
xor
fsub
jns
movsb
rcrb
lods
add
insl
mov
les
int
das
ds
mov
mov
push
jle
mov
mov
push
push
call
aaa
add
add
cmp
xchg
xor
pop
adc
outsl
cmpsb
cmp
andl
jmp
insl
leave
xlat
push
xor
aam
stos
shl
int
out
mov
filds
loop
hlt
and
sahf
mov
add
pop
paddusw
jb
mov
cmpsb
xor
push
cli
inc
mov
dec
jns
bound
mov
xor
cmp
jge
test
mov
mov
inc
rolb
sub
insb
add
inc
jmp
jecxz
stc
sbb
mov
gs
scas
adc
mov
ror
loop
jne
push
push
shll
cmpsl
mov
xchg
pop
stos
loopne
into
jl
push
clc
andl
cmpsl
xor
cltd
lret
iret
jmp
or
loopne
dec
mov
pop
insb
mov
mov
inc
cwtl
sbb
out
and
iret
aam
aad
les
adc
jne
jno
xorb
cli
loop
iret
inc
mov
xor
sub
ret
fsubl
sbb
js
push
iret
fcompl
test
xor
ret
stos
shl
int3
js
fnstenv
rcl
je
lock
inc
lahf
rcl
cmc
lea
leave
inc
lock
dec
cmc
cmp
xlat
add
out
and
jno
dec
push
sti
cli
cld
stc
lods
push
sbb
loop
xor
inc
mov
xor
jle
push
and
pop
xlat
mov
add
cmpl
sbb
mov
ds
stc
sub
xchg
dec
scas
shll
jp
mov
mov
mov
xchg
pop
div
clc
sarb
rcl
ret
scas
xor
push
stos
fidivs
mov
inc
lds
sti
push
fsubrs
mov
pop
dec
shrb
inc
outsb
iret
or
mov
push
aad
xchg
inc
xchg
mov
jl
cmpsl
mov
sti
out
repnz
xchg
lods
movsb
push
pop
fbstp
inc
mov
dec
mov
cli
xor
xchg
out
xor
repnz
sbb
insl
add
cli
pop
rcr
push
lods
xor
loopne
movsl
inc
addr16
adc
xchg
sti
stos
cld
ret
mov
mov
and
in
out
shlb
lahf
addr16
cmpsb
mov
mov
test
dec
push
sbb
pshufw
sbbl
loop
push
insb
xchg
hlt
jge
mov
sub
fwait
ret
push
fidivrs
mov
test
inc
es
xor
arpl
stos
cltd
rcl
mov
sub
ljmp
test
xlat
outsl
jne
lahf
add
jo
rcl
cld
dec
sub
mov
mov
aaa
sbb
fildll
mov
enter
and
call
dec
nop
cmpsl
ds
adc
out
mov
lret
jne
xchg
xor
push
sub
hlt
push
push
icebp
aaa
loope
std
pop
out
and
sbb
inc
and
jp
mov
mov
mov
shlb
int3
aam
xlat
and
shr
js
add
frstor
outsb
mov
dec
sub
mov
jle
mov
xchg
mov
mov
in
enter
sahf
jp
loopne
insb
or
icebp
xor
lods
cli
pop
or
jle
ljmp
sub
je
mov
sbb
loopne
jae
mov
pop
or
cli
jl
not
jb
hlt
xor
lahf
sbb
stos
jecxz
push
popa
xlat
xchg
adc
loop
lods
sbb
xchg
cmp
outsb
and
scas
out
ds
sub
jg
loope
mov
xchg
cmp
ljmp
pop
add
push
or
outsb
fisttps
mov
and
xchg
xchg
push
inc
repnz
in
xorl
repnz
push
js
push
or
rcrb
sub
push
cmp
lahf
mov
mov
int
mov
incl
rol
cmc
jmp
pop
hlt
pushf
jmp
je
mov
xchg
xor
daa
les
call
or
movsl
cmp
ljmp
ja
ss
jne
jns
leave
mov
push
sub
cmpsb
addb
pushl
push
inc
data16
mov
rcr
call
and
lds
test
add
dec
jle
dec
cmpsb
jb
dec
dec
scas
or
das
mov
mov
insb
mov
xchg
cmp
loope
pop
mov
cltd
lods
pcmpgtw
lret
fdivrs
or
jne
movsl
mov
sets
les
scas
bound
js
cmp
xchg
jmp
jne
sbbb
fisubl
or
xrelease
sti
bnd
clc
outsl
lea
pop
add
testb
js
mov
inc
dec
shlb
dec
test
subb
stos
pop
push
sbb
inc
adc
mov
inc
mov
mov
mov
mov
adc
xchg
xchg
xor
mov
je
cwtl
lods
fucomp
inc
or
imul
movb
mov
out
jo
jmp
push
loopne
dec
sub
outsb
or
pusha
inc
rcll
pusha
inc
and
jae
push
aas
cmpsb
mov
inc
xor
mov
psllw
push
sub
enter
mov
loope
mov
fidivrl
mov
sarl
inc
pop
stos
ffree
jnp
sbb
xchg
push
mov
mov
ss
xor
dec
and
sahf
ja
test
scas
cld
loopne
mov
sbb
jo
xor
cltd
mov
js
ficompl
inc
dec
lods
shll
cs
fistpll
cli
ja
xchg
orb
cmc
mov
cmpsl
shlb
arpl
aad
pop
fcompl
shrb
xor
mov
int
mov
pop
xor
xchg
stc
push
xlat
lock
les
sub
xor
and
sbb
test
dec
seto
inc
lret
add
std
mov
inc
jne
mov
aad
in
or
xor
push
pop
subb
push
pop
aad
fdivr
and
and
ds
jle
imul
inc
je
dec
dec
sub
and
stos
ja
xor
mov
pop
enter
insl
sub
fwait
mov
inc
push
mov
and
xor
jns
imul
fs
xor
push
mov
bnd
and
push
ret
mov
pop
scas
mov
fistpl
push
decl
and
imul
ja
xchg
xchg
test
xchg
es
and
or
mov
inc
in
cmp
stc
jecxz
pop
rcrb
hlt
pop
jb
and
fbstp
and
cmp
out
imulb
movsb
adc
adc
lds
sti
lret
inc
out
popa
xchg
dec
fwait
dec
cmpsl
xlat
xchg
pop
inc
stc
adc
add
jmp
and
mov
lock
add
or
jnp
loope,pt
or
mov
loop
jge
ja
shrb
lahf
cmpl
jnp
mov
cmpsl
add
add
test
adc
dec
sub
sbb
cs
mov
out
xchg
das
shll
es
jb
push
repz
jmp
test
out
xchg
mov
cmp
adc
mov
movsl
xchg
sbbl
xor
inc
or
cmp
push
dec
idiv
dec
sti
jge
stos
lock
cmpsb
mov
add
inc
out
js
dec
fs
aaa
push
je
add
mov
xor
mov
push
and
push
int
mov
inc
lret
jne
lret
cmpsb
xchg
fldl
lcall
xchg
adc
jmp
xchg
pushf
mov
xchg
sbb
pop
dec
jle
pusha
ret
or
mov
enter
call
mov
js
das
mov
popa
orb
repz
les
inc
mov
aam
push
outsb
out
ret
sbb
mov
or
sbb
sti
jl
lds
push
mov
ja
dec
pop
pushf
or
jns
mov
imul
inc
push
invd
scas
andb
dec
mov
ret
inc
fstpt
popa
popa
add
and
or
or
in
lret
fsub
push
ror
xchg
rol
iret
imul
or
inc
adc
xor
adc
xchg
mov
ret
mov
jg
rorl
sbb
pusha
xchg
cltd
jmp
lods
fldl
je
fdivrs
push
mov
nop
mov
inc
sbb
mov
or
fstpt
adc
je
int3
pop
sub
cs
or
clc
jae
test
add
jae
or
int3
cwtl
mov
add
hlt
xor
push
and
mov
imul
pop
leave
cmp
and
scas
les
jp
pop
push
aaa
fsubrs
mov
pushf
test
repz
pushf
add
scas
pop
mov
ja
cwtl
hlt
pop
js
test
data16
pop
fwait
bound
xchg
and
or
jmp
push
xor
outsl
xor
jo
loop
add
pusha
addr16
sbb
stos
loopne
lods
ret
xchg
jecxz
fildl
mov
cmp
push
pop
in
shr
mov
pop
inc
add
jle
leave
push
cs
cs
push
add
das
jns
jno
lds
xlat
ret
mov
int
xor
out
push
jecxz
sbb
sub
xchg
sbb
adc
sbb
xor
lret
mov
sbb
icebp
or
les
xchg
mov
xchg
bound
lds
mov
jno
or
mov
lret
dec
mov
sbb
das
pop
cltd
dec
loope
js
xchg
jne
lret
cmp
add
int
pusha
jno
push
add
and
xor
movsl
xchg
fs
or
pop
jge
sbb
and
subb
and
stc
pop
ds
out
jl
fmuls
test
popa
mov
push
shrb
inc
and
jl
arpl
out
push
and
push
das
dec
imul
je
inc
dec
inc
fcoml
lods
or
pop
mov
iret
test
popf
loope
clc
jae
cmpsw
icebp
add
inc
sbb
sbb
xchg
mov
cmp
dec
cmpsl
push
xchg
sbbb
stc
sbb
ret
add
cmp
lahf
popf
das
jns
mov
jp
push
push
addr16
jmp
repz
sbb
cmovle
or
out
adc
push
repz
mov
test
push
sub
xor
aaa
cmp
lret
sub
stc
out
or
test
sbb
add
mov
loope
call
jle
mov
fcoms
sbbb
loop
into
in
inc
lods
and
dec
xchg
add
ja
cmp
and
jp
btr
or
cs
jp
sarl
mul
pop
inc
int
sti
cmp
int
into
out
inc
push
cmp
push
das
dec
sbb
push
add
repnz
data16
cmp
push
push
out
aas
sub
iret
popf
loope
dec
sub
xchg
outsl
ret
js
mov
mov
addr16
mov
xchg
inc
and
fwait
bound
push
jmp
sub
imul
mov
or
lcall
mov
ljmp
roll
icebp
mov
fwait
jecxz
xrelease
or
add
sbb
movsb
mov
mov
pop
les
xchg
pop
psllq
inc
inc
ljmp
dec
rolb
jno
mov
cmpsl
bnd
and
idivb
jge
and
iret
add
mov
mov
ficomps
push
fwait
and
adc
mov
push
sbb
jmp
xchg
loope
icebp
push
outsb
arpl
mov
popa
js
int3
fcoms
aaa
add
rorb
icebp
push
sbb
mov
fdivl
ds
fwait
pop
jae
and
push
outsl
movsl
dec
or
or
ret
imul
call
test
and
jnp
imul
inc
test
xchg
dec
push
jmp
sarl
movsb
mov
cmpb
push
lcall
lods
dec
in
into
cmpsl
fldcw
xchg
sub
mov
push
add
pop
cmpsb
mov
sbb
mov
cld
inc
cltd
inc
das
cmpb
arpl
aas
into
xor
lahf
inc
mov
fucomi
int3
loopne
pop
sbb
xchg
mov
fnsave
cmp
push
push
out
adc
cmp
movsb
std
insb
and
push
lret
imul
sbb
push
loopne
push
sbb
adc
bound
lret
test
pop
xchg
js
mov
loope
xchg
mov
jmp
dec
adc
aas
lock
pop
xor
jmp
lods
mov
mov
repz
jno
xor
and
xchg
cwtl
push
fldcw
xchg
test
or
jge
jo
or
add
data16
aad
jne
mov
ret
xchg
sub
jb
jle
mov
insb
test
aam
stos
jb
ds
mov
push
push
jnp
into
pop
mov
inc
dec
pushf
nop
add
rcll
lahf
pop
mov
add
pop
divb
mov
mov
or
push
mov
hlt
mov
addr16
push
cmp
xchg
pop
xor
mov
lret
fisubrs
subb
sahf
movsb
mov
sub
jecxz
pushf
xchg
xor
jb
cmpsl
cmc
mov
dec
push
repnz
mov
push
or
xlat
pop
xor
mov
push
xchg
popf
fldenv
pushf
xchg
cld
mov
js
mov
imul
mov
pop
mov
call
mov
cs
loop
popa
test
inc
in
repnz
cli
add
arpl
add
pop
mov
inc
jmp
pop
pop
rcrl
jecxz
sti
dec
jp
mov
and
sbb
inc
sbb
outsl
sbb
in
ja
stc
inc
add
xchg
pop
sbb
mov
jno
out
in
aad
aaa
lds
je
push
mov
pop
push
int
fidivl
sbb
inc
push
stc
xor
jbe
fstl
in
inc
adc
jne
mov
data16
or
scas
aam
call
mov
jns
jl
xchg
aas
lea
dec
mov
fsts
pop
xchg
xchg
jge
mov
arpl
insb
or
in
bnd
cmp
jo
lds
loop
test
adc
dec
shll
cmpsb
cli
lcall
cmp
push
lock
out
dec
xchg
add
xchg
aas
add
insb
cwtl
sub
dec
out
add
xor
or
in
pushf
insl
call
pop
adc
out
divl
jge
call
aaa
fcomps
add
std
fstl
lret
jg
nop
xchg
mov
movsl
cs
xor
in
fs
loope
lret
test
pop
loopne
pop
pop
or
insl
inc
in
outsb
ljmp
mov
movsl
dec
or
out
sub
pop
stos
mov
mov
shll
and
mov
dec
mov
push
pushf
push
jne
imul
clc
nop
in
mov
mov
ljmp
repnz
mov
add
leave
aad
sbb
lret
or
and
or
ficoml
add
xchg
xchg
jne
jno
xchg
fimull
outsb
and
mov
cltd
xchg
push
pop
sub
xor
int3
lods
cltd
mov
xor
pop
gs
xchg
and
jae
in
pop
divb
xor
in
popf
outsb
jmp
into
jo
insl
and
inc
in
cmp
xchg
pop
xchg
xor
lcall
mov
mov
ss
rclb
fsubs
cltd
add
inc
dec
dec
dec
enter
sub
mov
mov
jmp
pop
in
roll
inc
aas
mov
andl
loopne
pop
stos
xor
jmp
jbe
pusha
pop
sahf
xchg
mov
lds
inc
std
int3
lods
add
xor
cmc
lahf
nop
out
mov
fsubrs
mov
je
dec
or
les
fs
fiaddl
nop
hlt
aad
stc
jp
shld
std
test
divb
add
cltd
scas
sbb
pop
out
sbb
xchg
fsubl
lcall
ljmp
dec
inc
scas
xchg
sub
test
adc
in
mov
popf
and
das
lahf
xchg
dec
cmc
repz
dec
or
mov
aad
sahf
rclb
mov
lock
sbb
fnop
add
jle
jmp
inc
fmuls
lahf
cmpl
pop
mov
repnz
ja
gs
js
push
push
push
cli
and
into
jp
inc
or
inc
out
pop
ficompl
cmp
movsl
cmp
roll
or
xor
imul
fsubp
mov
sub
enter
lds
sub
shlb
xchg
les
xor
xchg
mulb
or
addr16
push
mov
mov
adc
inc
push
nop
mov
test
mov
movsl
push
outsb
in
divl
jg
scas
lods
fucomi
push
js
mov
jg
xchg
ficomps
xor
test
push
add
dec
mov
sub
inc
fisttpl
mov
mov
fiaddl
or
outsb
test
andb
push
dec
adc
call
cmpsl
mov
dec
pop
pushf
je
xchg
xor
sbb
sub
sbb
pusha
mov
pushf
es
dec
mov
nop
repnz
enter
jno
rol
dec
in
ss
decl
outsl
stc
cmpsl
mov
push
out
sahf
test
and
mov
or
call
jge
nop
movsb
mov
inc
push
ret
pusha
sbb
insb
push
lods
jb
aam
cltd
jg
xor
xchg
sbb
sub
xchg
xor
int
pop
fisttpl
imull
mov
pop
and
stos
loope
cmp
testb
loop
adc
and
xchg
mov
jle
loop
lea
in
std
xor
sbb
push
add
stc
ss
and
or
adc
cmp
inc
sbb
mov
test
push
inc
cmp
fildll
mov
xchg
imul
imul
fistpll
push
push
stos
popa
pop
mov
sbb
jae
pop
or
xchg
inc
inc
sbbb
lret
lahf
jg
dec
scas
loopne
push
jmp
inc
fmull
je
inc
pop
lcall
add
xor
fucom
xchg
xor
repz
negb
mov
and
mov
cmp
loope
out
js
sahf
arpl
fsubrs
ret
imul
xchg
add
add
add
hlt
out
popa
div
mov
or
adcl
inc
stos
add
shl
add
pminsw
add
push
lret
in
fs
testb
les
mov
iret
push
ficomps
dec
insb
adc
mov
aaa
stos
xchg
and
fidivrs
xor
cmp
fildll
mov
mov
mov
mulb
js
in
pop
and
and
xor
call
push
cltd
xchg
inc
add
outsb
pop
sbb
iret
push
hlt
or
fiadds
nop
inc
sub
mov
add
bnd
xchg
pand
rorl
mov
sti
xchg
cwtl
stc
mov
push
fistl
dec
jbe
jg
das
adc
xchg
loope
jae
dec
popa
xchg
ret
aas
jno
fistpll
mov
push
leave
bound
ja
sub
mov
nop
push
ret
jmp
cltd
adc
repnz
xor
aad
popf
subl
mov
out
sbb
cli
add
xchg
test
fisttpll
addr16
push
jp
jp
jge
adc
cltd
xchg
mov
dec
xor
cltd
push
cmp
inc
cmp
loope
and
scas
or
sub
sub
ud1
jo
fisttps
add
mov
xchg
mov
push
or
jbe
and
imul
mov
add
outsl
cmpsl
sbb
mov
inc
mov
daa
lods
es
lds
je
icebp
jae
push
push
stos
and
cmp
xchg
mov
in
sub
mov
pop
mov
jne,pt
add
lods
xchg
pusha
es
in
cmp
sbb
xor
sub
pop
add
cmp
mov
sub
cwtl
in
mov
test
aam
push
push
mov
je
roll
or
cwtl
lods
and
dec
add
jae
icebp
push
add
jp
push
push
bound
add
add
add
out
add
push
mov
lock
mov
add
dec
cmp
xor
int
xlat
cmp
pop
xor
imul
add
dec
mov
add
faddl
dec
ficomps
xchg
add
xchg
icebp
add
mov
xor
or
add
aas
stos
mov
add
mov
in
int
inc
add
fnsave
cmp
jae
sbbb
cmp
add
inc
das
pusha
and
cmp
adc
call
mov
les
repnz
cmc
add
or
add
je
nop
sub
jmp
outsb
add
les
pop
add
add
dec
ss
ret
imul
add
fsubrs
push
add
loope
jns
mov
insb
inc
add
jmp
add
lcall
add
xchg
mov
add
faddl
sti
add
adc
sub
add
adc
pushf
sbb
daa
push
loopne
test
pop
add
or
sarb
je
out
cmp
add
mov
jno
sub
gs
imul
add
mov
add
mov
adc
adc
in
lahf
jae
cli
mov
add
in
xchg
mov
rolb
add
pop
ret
std
inc
leave
sbb
data16
mov
fiadds
inc
call
pushl
add
das
out
add
ljmp
sbbl
cmpsl
mov
and
ljmp
test
repz
dec
testb
push
mulb
xor
rcll
fildll
je
lret
jnp
mov
inc
negb
add
jmp
rcl
cmc
add
xchg
mov
add
cmpsl
repnz
bound
push
scas
add
aam
push
lret
add
mov
add
std
push
jno
add
mov
pop
sbb
xchg
jp
push
pop
add
gs
popa
ret
cmp
add
dec
dec
add
aaa
iret
dec
push
jl
lds
jge
add
insl
sub
adc
mov
sbb
inc
add
or
push
fwait
add
push
push
add
push
add
int3
sbb
scas
push
fisttpll
sbb
adc
jecxz
or
rolb
sahf
test
cmp
add
xor
test
add
popa
pop
sbb
fisubl
mov
sbb
rolb
test
cmp
fistpl
std
mov
xor
and
rcrl
icebp
scas
cmp
sbb
mov
mov
pusha
xchg
mov
jae
dec
adc
in
out
movsl
inc
in
add
push
xchg
mov
add
xchg
and
notl
cmp
arpl
add
xor
add
cltd
xchg
jl
add
lock
es
jbe
add
fadd
push
out
or
jo
scas
add
dec
in
mov
out
push
xor
mov
lahf
loop
push
in
add
sub
add
popa
outsb
fiaddl
lret
mov
jmp
sahf
fists
mov
add
mov
lahf
inc
pop
add
pop
insb
js
add
add
ret
or
add
add
add
aam
add
clc
xchg
add
pop
jg
add
cwtl
sub
test
add
stos
bound
outsb
outsb
leave
pop
mov
push
mov
push
mov
lfs
mov
cli
btr
push
out
imul
mov
pusha
xchg
cmp
mov
add
mov
inc
or
cs
xlat
in
or
in
add
and
sub
add
add
jns
push
pop
repnz
push
in
int
lods
sub
mov
mov
mov
and
sub
mov
frstor
in
lods
add
cwtl
arpl
mov
test
mov
add
push
cmpsl
add
pop
xor
push
mov
icebp
push
add
jmp
cmc
sbb
add
xlat
js
incb
enter
shlb
add
scas
loope
xchg
flds
add
ret
cmpsb
jnp
add
jge
repnz
adc
sti
into
lcall
mov
ja
push
lds
in
js
or
xchg
mov
data16
roll
fucomp
jecxz
push
cmp
pop
out
adc
adc
xchg
dec
ja
div
jo
add
in
cltd
out
xor
add
jecxz
imul
mov
lcall
in
add
daa
push
xchg
add
cmc
je
out
add
inc
push
adc
add
cmc
add
xchg
add
lahf
inc
sbb
add
xor
aas
test
test
adc
dec
jne
jp
out
insb
push
xchg
add
push
inc
adc
pop
out
sub
stos
sub
add
add
xchg
lds
mov
add
in
test
push
in
add
sti
aaa
int3
add
lods
add
add
push
data16
add
add
int3
xlat
inc
add
xchg
cmp
add
push
daa
sti
popa
mov
push
hlt
aad
add
lgs
cmp
jge
mov
pushf
mov
add
cld
dec
add
push
and
addl
mov
add
out
insl
jl,pt
test
cmp
inc
insb
jecxz
mov
push
movsl
lds
jnp
lea
cs
xchg
mov
mov
add
fnstenv
xchg
hlt
add
push
testb
enter
add
lock
or
xor
xchg
fildl
mov
sbb
add
in
mov
movsb
mov
test
pop
pop
add
cmpl
inc
inc
xor
push
faddl
add
test
jo
je
dec
ficoml
jns
add
jmp
aam
imulb
mov
loop
stc
add
jo
cmp
testl
lock
add
or
add
jecxz
add
mov
out
add
call
ds
push
mov
jae
testl
pop
test
hlt
jge
int3
fldt
stos
fdiv
add
hlt
rol
jo
mov
addr16
mov
pop
inc
push
call
jl
add
sbb
imul
lret
dec
into
sub
add
adc
mov
fidivrl
ljmp
add
loope
mov
push
rolb
add
jg
mov
adc
sti
sbb
push
mov
add
xor
mov
fiadds
add
dec
adc
mov
add
cmp
dec
jbe
fistpl
lds
outsl
pop
daa
jns
cwtl
les
imul
mov
xor
fldenvs
out
jecxz
pop
inc
mov
mov
add
add
jecxz
mov
dec
sti
hlt
sub
mov
mov
and
or
aam
and
repz
mov
add
ja
inc
lcall
sbb
push
mov
xlat
xchg
pop
xchg
xor
dec
pop
or
cmp
add
adc
xlat
gs
aaa
pop
sub
and
loope
dec
jp
sbb
add
sub
add
add
add
dec
sbb
add
pop
mov
enter
jl
testb
add
add
adc
add
add
outsb
sbb
add
mov
mov
cmc
daa
jns
add
jl
bsf
and
notl
add
add
jb
xor
and
data16
mov
decb
pop
mov
into
mov
test
dec
lock
mov
pop
mov
daa
mov
and
mov
fdivrl
add
aam
test
stc
cmp
inc
add
sti
ret
bound
push
push
ret
and
aas
movsb
aaa
add
and
bound
outsl
dec
out
dec
popa
add
bound
add
lea
mov
insl
pusha
mov
aaa
xor
stos
and
aaa
push
add
add
sar
xchg
push
add
lods
sahf
push
out
add
add
push
notl
add
add
rcrl
stos
adc
add
int
xor
mov
repnz
pusha
sub
dec
add
jge
test
fs
es
add
scas
add
push
addb
lock
mov
and
mov
add
lret
fmuls
add
add
insl
js
out
clc
lahf
adc
cwtl
stos
sbb
cmp
dec
add
mov
jno
mov
add
frstor
add
insb
cmp
fwait
add
mov
add
dec
fldt
add
out
cmp
sahf
mov
cmpsb
add
sbb
fidivs
add
pushf
cltd
dec
mov
adcb
jbe
ja
mov
and
mov
push
loopne
outsb
mov
sub
pop
mov
shl
addb
out
mov
xor
inc
jle
ja
adcl
mov
push
mov
fldcw
mov
pop
test
pop
sti
add
aas
out
rol
or
add
movsb
int3
lods
ror
add
pop
jae
loopne
cld
sub
or
and
cli
push
add
jnp
js
outsl
jbe
clc
out
mov
xchg
bound
jg
push
ret
rolb
loope
push
add
mov
out
in
jg
cld
jno
dec
lret
rcrl
imul
xor
add
add
out
das
mov
rcl
repz
lods
jbe
or
pop
enter
nop
popa
pop
outsb
iret
pusha
mov
lods
test
into
and
scas
fsqrt
jne
adc
dec
rclb
sarb
jg
jle
fcmovb
hlt
sub
repz
push
inc
int3
push
int3
mul
mov
jmp
and
cmc
adc
lock
cmpsl
sahf
inc
cmp
mov
add
mov
cmpsl
ljmp
push
scas
add
daa
add
mov
sahf
jp
stc
enter
cmp
mov
mov
dec
outsl
cmp
add
push
push
and
adc
xchg
mov
movsb
xor
sub
fwait
adc
or
push
pop
and
jnp
arpl
mov
shlb
add
popa
test
add
or
stos
jno
imul
fadds
add
or
pop
add
add
cmpsb
xor
stos
push
xchg
add
mov
sub
add
or
cmp
sahf
sbb
cmc
inc
popf
push
jmp
jge
sbb
jmp
test
push
jg
mov
shrb
dec
xchg
lds
or
or
lret
in
in
push
xchg
int
hlt
es
inc
mov
loopne
popa
dec
adc
stos
data16
call
and
push
movsl
ljmp
fisubrs
cld
add
jecxz
cld
ret
js
loope
lahf
nop
lcall
mov
gs
add
sbbl
stc
lods
mov
bnd
mov
adc
add
lea
dec
lods
lret
mov
lods
push
mov
sbb
aad
in
mov
pop
lret
imulb
pop
xor
lds
add
add
fsubl
insl
lds
add
add
ret
inc
mov
pop
in
ret
pop
jg
cmp
add
pop
add
fistps
in
mov
js
push
dec
adc
mov
lcall
add
addr16
icebp
or
loop
push
jge
push
cmc
cmp
ror
sahf
int3
sub
iret
movsl
inc
iret
add
inc
mov
es
pop
mov
mov
lods
or
sbb
sarb
xor
mov
inc
outsb
push
mov
and
inc
xchg
cmp
pop
jbe
sahf
push
jmp
inc
cmp
add
mov
in
insb
mov
or
add
push
loope
jmp
ret
loop
scas
fsub
add
xor
inc
mov
add
cmpsl
adc
test
mov
xorps
cwtl
and
xchg
add
adc
idivl
pop
or
xor
or
mov
add
and
movb
aas
cltd
sbb
add
and
bound
add
add
rclb
scas
lret
ret
sbb
mov
fimull
add
mov
xor
add
ljmp
xchg
push
hlt
dec
in
add
add
call
testb
add
ja
stos
mov
lods
sbb
add
add
cltd
das
shl
mov
cld
cmp
add
add
lds
add
pop
mov
or
sub
icebp
out
add
rclb
movsl
push
mov
mov
add
dec
fsts
mov
loop
hlt
sub
jecxz
and
mov
cmp
or
sub
or
aam
cltd
add
xor
stc
je
jl
fisttpl
dec
pop
add
xchg
cmp
xchg
xor
faddl
push
daa
pop
lods
insl
ljmp
std
ja
push
jle
outsl
nop
lret
repnz
outsl
ljmp
dec
ror
mov
stos
insb
mov
sahf
pop
call
mov
lret
clc
ret
or
add
or
and
clc
or
lods
add
add
jl
loope
dec
jecxz
add
push
adc
test
jl
cmpsb
cltd
into
fstpl
je
mov
mov
mov
jmp
sahf
add
daa
lahf
js
adc
lcall
int3
jne
sub
mov
popa
cltd
pop
sub
fnstsw
test
add
jne
int3
in
mov
lock
xchg
outsl
js
dec
dec
daa
filds
add
sarl
imul
outsl
repz
xchg
aam
hlt
addl
add
fwait
jo
sub
jp
add
sub
imul
pop
loope
dec
mov
xor
je
pop
in
and
jmp
les
cmp
lcall
jmp
cmpsl
xchg
out
or
push
cmc
sub
filds
ljmp
in
mov
add
aaa
fdivr
mov
xchg
cld
out
push
enter
mov
push
pop
xchg
xor
sbb
push
mov
sbb
mov
xchg
mov
add
and
or
mov
stos
ret
adc
lret
mov
bound
repnz
add
jbe
das
mov
mov
aaa
sub
jle
in
jecxz
aad
push
add
dec
notb
fs
or
or
jb
enter
push
and
sahf
mov
pop
movsl
mov
out
mov
repz
jp
push
jge
out
pop
pop
ds
push
mov
outsb
add
add
inc
aad
xchg
sub
jmp
and
xchg
jecxz
mov
add
xchg
mov
xchg
jle
add
pop
arpl
jmp
sub
movsl
cmp
xchg
or
data16
push
pop
add
addl
add
mov
gs
in
inc
jns
jg
adc
add
push
add
lods
mov
out
les
xchg
bound
add
add
jle
cmc
add
xchg
xchg
mov
call
xor
add
sarl
or
or
outsb
xor
fiadds
outsb
dec
add
inc
inc
les
pop
enterw
adc
or
sbb
pop
pop
jl
shlb
pop
out
ret
add
add
mov
sub
cld
inc
add
hlt
inc
ret
add
mov
imul
fildl
add
pop
and
mov
sub
inc
mov
daa
push
insl
or
jge
ds
adc
ljmp
push
mov
lahf
dec
jp
daa
mov
add
add
mov
add
mov
into
xchg
add
xchg
ss
push
je
js
xor
add
popf
add
inc
popl
add
iret
add
inc
test
xor
push
shr
add
aaa
push
into
or
pop
fisubs
lock
and
add
add
fwait
push
aas
add
add
push
and
add
cltd
pushw
add
cld
jecxz
fisttpl
lea
iret
mov
mov
mov
add
mov
or
add
jp
daa
add
addr16
cwtl
jbe
call
adc
add
hlt
inc
push
dec
xor
jle
dec
pop
ficomps
lea
add
add
pop
xor
sbbl
dec
sbb
movl
jo
lret
add
inc
or
idivl
jge
ljmp
xchg
pop
add
sub
cwtl
mov
pop
add
mov
mov
push
xchg
add
push
add
insl
cmp
shll
cwtl
add
mov
je
fwait
lods
add
pop
dec
decb
xchg
mov
pop
inc
out
enter
inc
dec
adc
mov
push
xchg
mov
je
in
add
ficoml
and
mov
dec
add
adc
jo
add
dec
je
sbb
cli
add
icebp
adcl
add
cmp
fwait
mov
sldt
jo
add
sbb
sahf
xor
mov
dec
popa
ss
fsubl
add
push
mov
push
icebp
in
dec
hlt
add
jge
mov
or
or
push
es
add
push
dec
xor
sahf
add
and
clc
add
dec
movsb
and
push
cltd
pop
jl
and
add
jae
add
pop
or
divb
add
les
add
pop
inc
xlat
push
mov
rcrb
cmp
adc
shl
xchg
and
or
sbb
mov
adc
add
add
jp
negb
pop
dec
add
in
mov
or
add
testl
out
and
add
outsl
lods
repnz
mov
icebp
cltd
sub
loope
test
push
add
arpl
cmp
jmp
mov
inc
mov
add
mov
mov
enter
jg
adc
add
or
adc
lods
mov
je
add
in
add
add
test
js
aad
outsl
notb
loopne
ss
sbb
das
jno
add
pop
testb
add
mov
add
cmc
pop
sub
mov
xchg
xlat
add
mov
in
add
ficompl
add
shrb
stos
jnp
inc
addr16
aas
lods
sahf
add
lahf
add
add
arpl
outsb
cmpsb
mov
add
and
or
xchg
pop
add
add
push
lds
add
dec
stc
adc
shl
jmp
add
or
fnstenv
lahf
fsubl
outsb
lods
inc
add
mov
fs
es
loope
and
add
out
add
jbe
out
in
xchg
cmp
lret
add
and
lock
loop
ret
sbb
add
std
leave
jle
ljmp
or
push
loop
fwait
icebp
pusha
dec
insl
dec
icebp
push
cmp
nop
cltd
call
xlat
icebp
add
or
mov
inc
in
sub
repz
movsl
inc
xchg
dec
push
add
loopne
cmpsb
sbb
clc
out
in
sub
std
mov
gs
pop
popf
movl
or
mov
hlt
out
add
out
out
enter
inc
outsb
mov
pop
sub
add
fstpl
jbe
add
data16
add
test
jle
cmp
test
push
sub
push
jno
fwait
jae
dec
mov
push
push
push
in
add
loop
addr16
or
ret
or
jb
add
add
dec
mov
add
add
clc
arpl
test
orb
jae
mov
mov
loop
jp
stos
and
add
mov
test
lock
add
add
sti
and
call
add
int3
call
sbb
add
xor
outsb
mov
into
stos
push
loop
mov
add
jbe
dec
adc
xchg
mov
movsl
shrb
into
mov
cmp
mov
mov
pop
test
xchg
add
xchg
mov
daa
pop
pop
and
add
into
add
and
or
sub
sub
dec
pop
mov
push
add
jo
fistl
cmpb
ret
imul
lahf
aad
add
fmuls
mov
ja
mov
call
mov
add
add
add
js
xchg
xchg
add
lods
inc
je,pt
loop
andl
lahf
cmp
and
dec
add
sub
sub
lods
mov
fwait
add
cmp
dec
jecxz
jmp
je
out
pop
cmp
add
sbb
add
out
stos
imul
js
sahf
mov
fsubrs
add
repnz
xchg
sub
repnz
add
pusha
js
ss
jne
daa
inc
mov
ret
sbb
or
clc
imul
das
add
bound
rcll
xlat
daa
dec
xchg
andl
arpl
sbb
fstpt
test
stc
push
xchg
add
push
aas
aam
pop
add
push
mov
add
insl
add
pop
adc
pop
ljmp
push
xchg
jecxz
popa
roll
pop
in
mov
mov
aas
jle
add
sbb
inc
add
lret
outsb
mov
xchg
xchg
push
cmp
dec
les
sub
jp
sbb
add
sub
fwait
rcll
cmp
fld
js
or
mov
daa
sub
loop
test
cwtl
sub
mov
sub
xchg
mov
fsubrl
sub
add
neg
dec
sahf
adc
test
nop
sbb
in
xchg
mov
and
les
in
add
ja
xchg
mov
sub
mov
dec
mov
iret
add
ljmp
movsl
sub
jmp
cs
aaa
arpl
add
add
leave
aam
or
add
cmpsl
data16
mov
xchg
inc
fwait
scas
in
mov
add
movsl
add
mov
mov
sbb
aam
dec
xchg
inc
roll
mov
mov
push
orb
mov
ror
cmp
push
jp
cli
mov
sub
sub
add
and
add
add
nop
dec
pop
add
dec
cmc
xor
mov
jae
test
add
call
and
jmp
add
add
sub
and
lds
out
add
out
jmp
push
push
jae
add
dec
pop
pop
jle
sbb
cwtl
add
dec
add
add
add
popa
icebp
inc
pop
fs
xchg
add
add
xchg
mov
push
jp
mov
daa
add
adc
repz
popl
add
mov
add
add
add
into
mov
mov
aam
mov
das
fcmovbe
icebp
cmpsl
xlat
xor
add
add
xchg
dec
sbb
push
cmc
sub
xchg
jns
add
or
mov
imul
xchg
add
fwait
add
dec
sbb
dec
rcll
aam
jmp
cmc
mov
jp
mov
int3
mov
das
rdmsr
mov
xor
lock
mov
pop
je
pop
fldl
add
mov
inc
pushl
aaa
test
jecxz
add
call
add
test
in
popa
xchg
pop
add
data16
cs
xor
ret
lret
insl
add
andl
shll
sbb
into
push
fadd
mov
mov
push
out
es
test
jge
jmp
test
popa
jle
addr16
lea
xchg
insb
push
les
adc
mov
mov
jns
movsb
push
push
popa
ret
sbb
ljmp
hlt
mov
outsl
add
fldenv
cmp
insl
dec
imull
inc
jns
in
adc
movsb
imul
add
add
idivl
add
and
lea
lret
dec
mov
mov
pop
cwtl
frstor
outsl
test
inc
add
push
mov
jp
in
add
rcll
flds
lock
or
rcll
loop
add
repz
stos
adc
jg
sub
aad
add
lods
imul
or
lret
add
xchg
cmpsl
mov
les
xchg
movsb
ret
int
pop
je
add
inc
insb
in
mov
mov
pop
lock
cmpsl
sub
shrl
push
shll
imul
sub
les
in
jmp
add
push
repnz
es
mov
shrl
add
inc
push
loope
rcrb
into
icebp
cmp
enter
lcall
inc
add
add
or
push
sbb
outsb
xchg
faddl
add
int3
pusha
xor
js
out
add
sarl
pop
mov
bound
fs
loope
scas
and
ficompl
hlt
repnz
lahf
fisubrl
cmpsb
dec
test
std
mov
add
int
insl
inc
mov
xor
mov
and
push
test
enter
sbb
enter
sub
popa
jmp
sub
jge
xchg
add
ret
inc
xchg
and
add
sub
cli
sbb
mov
jnp
test
scas
add
mov
stos
dec
jno
fistps
push
movsl
out
add
dec
insb
data16
mov
pop
arpl
jge
fsqrt
scas
dec
loop
testl
jno
adc
inc
lahf
jae
mov
dec
insb
inc
stos
add
add
adc
std
jle
or
jns
call
rcrb
into
cmpsl
divb
sbb
dec
xor
je
push
xchg
jo
cmp
fstl
sbb
sub
out
sub
ljmp
pop
loop
or
ljmp
sbb
fwait
push
sub
xchg
leave
ret
inc
sub
jns
add
divl
lock
hlt
aam
mov
pop
mov
and
repnz
adcl
fs
jb
jno
dec
pop
sarb
dec
mov
push
aad
add
ret
jbe
out
or
dec
lock
mov
addb
cmpsb
iret
inc
pop
pop
test
jae
gs
test
inc
repz
std
or
std
int
test
orb
ljmp
xchg
stos
sahf
mov
cmpsl
pop
add
inc
add
add
aaa
pushf
mov
dec
or
adc
mov
add
pop
add
add
pop
add
push
add
xchg
ret
xor
ds
jl
mov
add
out
add
push
jmp
les
int3
ret
mov
jl
push
lea
sub
and
addl
jno
lock
sbb
rol
movsl
lods
repz
enter
cs
cwtl
sub
push
jno
adc
iret
andl
add
mov
adc
xor
adc
sbb
je
ds
divb
in
add
and
cmpsl
testb
xchg
divl
mov
jp
dec
jl
push
dec
out
jecxz
sarb
sub
push
in
add
dec
jecxz
jae
mov
movsl
scas
ret
les
popf
inc
out
leave
stos
jb
movsl
insl
push
loop
popf
sbb
mov
mov
cmp
ss
push
cwtl
shr
loopne
scas
mov
push
pusha
adc
fidivl
out
push
xor
mov
xlat
inc
or
jb
xor
ljmp
test
scas
sub
add
inc
scas
jae
add
je
dec
call
dec
xchg
ret
enter
mov
add
movsb
sbb
loop
xchg
daa
cld
mov
fwait
imul
push
or
lock
mov
lock
insl
add
mov
pop
add
mov
fwait
inc
jne
es
push
mov
dec
lods
add
loope
data16
add
ss
imul
inc
cmpsl
lods
cltd
je
sub
pop
call
push
xchg
mov
dec
stos
outsb
clc
stos
push
mov
out
int
imul
mov
mov
ret
mov
sub
push
aad
bnd
add
movsl
mov
xchg
cld
jl
mov
mov
and
outsb
bound
or
movsb
int
add
xor
sbb
sub
ljmp
fisubs
leave
sub
inc
insb
push
sub
ret
and
add
adc
mov
outsl
sbb
dec
inc
in
or
cmp
mov
dec
dec
ret
add
add
mov
sbb
mov
pusha
jne
xchg
lea
stos
lods
push
enter
dec
xchg
pop
xor
xchg
sahf
movsb
stos
sahf
rcll
sub
adc
add
jge
jp
in
nop
sub
add
add
movsl
and
lcall
popf
sub
dec
add
push
test
inc
icebp
xor
jecxz
add
mov
cmpsl
adc
sbb
add
aam
add
stc
add
pop
add
outsb
xor
sbb
adc
add
mov
sub
pop
and
sbb
in
or
sub
add
xchg
std
out
stos
adc
mov
dec
xor
out
cmp
add
dec
in
outsl
jmp
mov
insb
jns
mov
cmpsl
test
sub
jle
push
mov
sub
or
pushf
aad
cmp
jmp
jl
call
sub
xor
addl
ret
or
and
push
sbb
xor
mov
out
test
aam
or
clc
sub
iret
imul
add
pop
lods
stc
fwait
pop
pop
cltd
dec
fstps
sub
ret
outsl
push
push
loopne
mov
inc
cmc
cmp
jl
repnz
jecxz
xor
pop
es
flds
cmp
xchg
addr16
push
or
lods
out
out
icebp
neg
aad
push
xor
rolb
dec
dec
add
inc
push
xor
in
es
add
icebp
or
dec
push
add
vmovsldup
js
gs
add
fldt
adc
addr16
push
leave
test
cmp
in
pop
in
gs
and
daa
push
dec
call
xor
lock
cld
cmc
push
or
add
add
push
fmuls
jbe
cltd
repnz
ds
dec
mov
ret
push
push
arpl
and
jae
add
or
in
andl
aaa
mov
push
aam
mov
jmp
mov
sbb
in
jns
repnz
push
push
ret
rcr
cmp
ja
sub
xchg
jbe
jns
js
add
bnd
int
mov
call
subl
pop
lods
scas
sbb
adc
mov
jno
cmp
dec
mov
sbb
and
jge
out
inc
stos
scas
sti
and
jp
and
or
dec
cmp
push
pop
mov
aad
xor
repz
std
dec
and
dec
repnz
std
sahf
pop
mov
ficompl
xor
adc
or
and
inc
or
mov
out
adc
add
outsb
xchg
xchg
insl
adc
icebp
popa
inc
addb
ret
repnz
mov
mov
xor
sub
lods
test
rcl
xchg
lods
out
jnp
mov
jmp
popf
nop
lcall
xor
mov
sbb
popf
adc
sub
sti
pusha
xor
jne
sub
loopne
adc
pop
icebp
fs
testl
xchg
or
jp
rcrl
or
ret
addr16
and
repnz
adcl
and
add
lret
inc
xor
cwtl
pop
jge
push
push
xor
add
es
add
add
inc
dec
cwtl
add
add
add
sbb
add
add
dec
xor
stc
cltd
sub
fldl
push
add
pop
inc
pop
adc
fwait
cmp
scas
and
cmp
mov
inc
sub
adc
aaa
cld
stos
sbb
lahf
xor
lods
ds
pop
enter
test
cmp
push
mov
fisubs
cli
lea
dec
add
jge
xor
imul
sarl
push
insb
inc
xchg
ret
shrb
loopne
rcrl
stc
popf
mov
rcrb
xchg
rcl
lods
cwtl
sub
pusha
xor
dec
idiv
into
mov
xlat
inc
jbe
lods
cmpsl
or
xchg
cli
pop
inc
adc
shlb
out
mov
push
fwait
pushf
int
lea
mov
sahf
mov
cmp
push
or
add
jbe
and
notl
leave
sub
pop
out
in
add
add
add
and
pop
xor
loop
test
into
orb
imul
adc
cmp
jge
mov
xchg
shlb
push
inc
sub
fisubrl
sbb
sahf
adc
add
flds
bound
jmp
subb
stos
add
inc
xchg
ja
add
mov
les
scas
ret
mov
mov
sub
mov
mov
lcall
imul
xlat
jnp
movsl
xchg
xor
cmpsl
mov
or
jle,pt
gs
inc
push
fildl
pop
mov
orl
in
subb
push
dec
xchg
mov
push
add
jo
mov
cmp
fcomi
jnp
pop
shl
add
cmp
je
jl
lds
pop
lds
add
mov
icebp
mov
push
ja
push
add
push
inc
fldl2e
add
jg
outsb
xor
add
mov
lret
lods
push
and
add
insl
jge
mov
out
push
add
insl
jns
bound
sbb
rorl
inc
pop
fxch
inc
mov
add
sub
ret
xchg
add
mov
mulb
pop
add
mov
inc
xchg
shlb
cltd
sub
cmp
xor
add
push
aas
mov
sbb
fld
mov
and
in
xor
add
push
add
add
out
mov
sbb
rcll
pop
push
dec
jmp
cmp
add
cmpsl
push
jmp
insb
mov
cwtl
mov
mov
xchg
inc
dec
push
insl
or
adc
jnp
cmc
xchg
mov
add
aaa
xor
mov
icebp
mov
loopne
arpl
jns
mov
loopne
and
push
mov
xchg
add
mov
jecxz
dec
lret
scas
imul
jmp
out
les
xor
cli
xor
add
sbb
insl
mov
mov
out
mov
adc
outsb
lods
add
add
into
ja
sbb
out
cwtl
add
les
add
mov
xchg
cmp
out
adc
scas
popa
add
in
jmp
jno
or
mov
jg
daa
mov
outsl
push
pop
int
pop
stos
stos
ljmp
xchg
jecxz
add
add
xlat
mov
sub
push
add
sar
fisttps
mov
jp
xlat
icebp
sarl
es
mov
add
shll
jge
lea
in
flds
sbb
stos
repnz
movsb
jnp
jmp
std
in
jle
into
fimull
inc
add
fimull
dec
fxch
mov
cmpsl
lods
pop
mov
into
cld
vmwrite
add
jnp
adc
in
imul
imul
push
xchg
repnz
rolb
push
inc
lret
scas
ljmp
mov
xchg
gs
or
adc
xor
or
mov
aad
cli
jae
xor
pop
add
in
push
addl
push
fwait
add
addr16
mov
push
into
add
add
push
enter
add
mov
add
push
mov
inc
add
cld
add
in
xor
add
test
inc
jb
mov
jnp
push
int
mov
adc
mov
jnp
aad
lock
ror
push
mov
clc
popf
popa
outsl
push
cmp
jo
inc
std
test
add
add
add
sbb
mov
sub
mov
in
push
test
addb
rorb
add
add
mov
ret
sub
or
leave
adc
loopne
inc
add
add
or
push
jle
jo
mov
jp
mov
addr16
fs
jno
movsb
mov
push
push
in
add
lret
lock
cltd
pop
inc
lea
xchg
mov
cmp
push
adc
jbe
clc
add
jl
sti
cmp
sub
ficoml
add
add
inc
push
insb
sarb
add
add
pop
sub
xchg
cmp
int3
add
push
pop
sub
xor
jns
add
int3
inc
and
add
lods
adc
test
mov
add
insb
fwait
mov
add
mov
popa
add
cld
aad
pop
jno
and
ss
mov
or
add
subl
scas
inc
add
add
jmp
xlat
or
xor
cmpb
add
add
test
add
out
xor
or
add
add
dec
and
sub
in
ret
ret
loop
jns
jno
cmpsb
xchg
mov
cmp
pop
sbb
sbb
dec
mov
or
lea
dec
mov
xchg
xor
lea
aad
mov
jno
add
into
xchg
jge
mov
or
test
adc
or
add
add
jmp
lds
push
enter
pop
iret
test
ja
add
bnd
scas
fimull
push
adc
cmp
sub
and
mov
mov
dec
pushf
xchg
testl
sarl
mov
add
add
dec
lea
cltd
bound
in
cmp
adc
or
mov
cmp
stos
fistpl
lods
call
jle
add
ret
leave
sbb
jp
jne
outsb
aam
scas
add
data16
jl
lahf
cmc
add
data16
mov
xlat
icebp
rcl
push
mov
pop
push
orl
ljmp
les
xchg
inc
roll
add
jge
xchg
repnz
push
add
sub
int
leave
leave
js
xchg
add
add
mov
dec
test
fs
inc
jne
ds
popa
add
add
dec
mov
push
fwait
add
pop
push
cmpsb
jle
je
sarl
add
and
lret
mov
insb
cltd
xchg
cmpsl
adc
imul
add
add
in
repz
int3
jae
add
push
and
mov
insl
mov
jnp
dec
std
fldl
xchg
add
jo
mov
dec
cltd
cmp
add
into
mov
dec
cwtl
in
insb
mov
adc
mov
inc
pop
mov
xchg
add
icebp
popa
in
add
mov
add
xor
das
add
add
shlb
aaa
add
pop
jbe
js
add
dec
jp
shll
add
cmc
add
stc
aam
data16
add
or
shlb
lret
mov
cmc
add
inc
jns
adc
add
add
pop
mov
shl
add
stos
lock
mov
sub
jl
add
add
and
jl
repz
push
stos
sahf
bound
shr
mov
mov
insl
adc
daa
int
rclb
and
mov
sbb
mov
add
mov
bound
add
mov
sarb
mov
in
leave
lret
shrb
testb
push
dec
lods
push
add
inc
hlt
sub
add
sbb
cmp
fdivr
mov
add
adcl
iret
mov
adc
iret
add
add
in
stos
jle
cmp
mov
push
repz
and
fbld
inc
pop
add
adc
cltd
sbb
jbe
sbb
cmpsb
das
add
daa
imul
and
sbb
push
dec
sub
test
cld
fnsave
aam
cmpsl
add
and
pop
xchg
orl
inc
cld
sbb
add
and
imul
add
stc
imul
mov
sbb
pop
xor
push
shlb
daa
sub
inc
sbb
add
movsb
push
ja
add
dec
pop
aaa
movsb
mov
add
aam
mov
jl
add
cmc
pop
in
xchg
add
dec
pop
mov
shll
pop
and
test
xchg
divl
insb
jmp
lahf
aam
xlat
loope
mov
or
jle
fwait
nop
mov
xor
cmp
mov
mov
ret
fistps
add
adc
mov
sbb
add
mov
mov
add
adc
sbb
lcall
sbb
mov
push
cwtl
fdivrs
dec
outsb
outsb
scas
in
add
jb
add
push
add
sbb
push
cmpb
dec
lods
or
bnd
jecxz
pop
loopne
or
add
jno
sub
add
mov
aad
cmp
test
je
sahf
aaa
loop
jecxz
push
add
cmp
lods
pushf
sub
add
lea
ss
sub
push
std
pop
cmc
add
lcall
push
repz
push
mov
mov
inc
jl
add
xor
xchg
jne
cmpsb
sub
add
pop
fldl
inc
pop
sub
lahf
call
inc
cltd
stos
or
sbb
add
aas
daa
test
mov
or
jo
mov
jp
ret
xor
popa
adc
add
sbb
insl
mov
or
sti
lret
pop
pop
mov
cmpsb
xchg
add
add
xorb
rcrl
inc
add
dec
jg
adc
jo
leave
mov
add
sbb
add
cwtl
add
addr16
es
out
std
inc
scas
mov
imul
arpl
data16
push
int
sbb
pop
cwtl
ret
inc
xrelease
mov
pop
mov
xor
sbb
or
add
add
fisttpl
mov
jmp
insl
cmc
add
adc
add
in
add
add
and
js
fwait
mov
and
es
ds
andl
xchg
jno
add
add
jecxz
or
loope
outsl
sbb
inc
inc
in
ffree
std
inc
cmp
aam
or
xchg
add
add
in
aam
add
sbb
dec
in
iret
cmp
cmp
repz
add
insl
incl
lcall
lret
sub
add
lahf
es
push
mov
sub
jnp,pt
pop
mov
pop
dec
pop
out
add
jnp
add
sbb
add
aam
adc
mov
hlt
fmull
adc
movsb
and
mov
stos
addb
scas
adc
push
inc
jb
or
loop
or
or
add
sbb
jmp
inc
add
jae
push
shlb
lock
sar
inc
sub
in
mov
add
test
mov
dec
xchg
iret
out
cmpsb
dec
mov
pop
sbb
movsl
xchg
add
mov
xchg
add
jmp
push
add
stc
xchg
add
ret
inc
push
fsubl
cmpsb
adc
xchg
sti
mov
loopne
jecxz
inc
add
leave
adc
cmp
movsb
jecxz
cmp
sbb
mov
xchg
lret
test
add
add
mov
xchg
mov
mov
push
icebp
add
pop
add
pop
cmpsb
add
mov
or
ss
imul
mov
je
cmpsl
rorl
xchg
jo
shll
push
sbb
fisttpll
fnstcw
dec
or
popa
bound
or
ja
aam
adc
fidivl
fldl
add
mov
rorl
pop
add
in
jg
add
cmp
scas
jmp
mov
push
add
lea
dec
adc
daa
lds
arpl
push
pop
add
add
sbb
add
mov
jo
add
jl
mov
push
and
mov
icebp
cmpsl
xlat
outsb
jle
add
xchg
mov
add
or
jns
inc
add
add
into
push
sub
insb
add
add
sub
insl
xor
and
add
add
cmp
in
xor
add
cmp
add
add
inc
sti
loop
add
and
add
add
pop
sets
popa
pop
add
add
imul
inc
xchg
dec
inc
add
sbb
mov
mov
insb
sbb
jmp
outsb
fsubrp
stos
or
mov
add
add
inc
adc
dec
arpl
jge
inc
std
jb
dec
es
push
sub
push
minps
scas
cld
je
cmp
xor
mov
xchg
movsl
push
jo
pop
cmpsl
jns
xchg
sahf
jmp
inc
fdivrl
xor
out
movsl
scas
aad
stos
add
xchg
imul
xchg
mov
push
frstor
xor
add
mov
add
lods
aas
add
add
pop
dec
in
push
enter
add
add
cmp
arpl
outsb
sbb
and
add
test
addl
fbld
mull
jle
mov
bound
jp
pop
lock
daa
stos
push
cltd
loope
fwait
sarl
sub
inc
dec
cmpsb
mov
add
dec
dec
add
add
sarl
leave
jl
mov
repz
cmpsl
cmpsl
out
jne
add
out
sbb
dec
xor
add
into
add
jnp
add
add
sbbl
pop
cmc
add
add
jecxz
stos
or
add
add
dec
inc
mov
add
inc
jbe
mov
add
add
push
sub
ret
in
jecxz
push
jge
jns
sub
push
pop
cmp
mov
insb
fisubrs
cmp
pushf
cwtl
add
add
popf
fstps
ds
push
std
push
test
sub
cmpsb
rorl
aad
lds
mov
in
bound
cld
and
lods
add
xlat
cmp
stos
add
jmp
into
add
jb
dec
std
pop
js
adc
fdivrs
pop
aam
jae
pop
insl
loop
push
rcrb
add
sub
cmp
rorl
xor
adc
push
rcll
fs
sub
push
movsb
jecxz
rcll
add
out
adc
outsl
adc
rcll
push
xlat
adc
pop
sets
aad
add
jbe
and
jl
int
test
lock
jnp
pop
out
inc
add
jns
sub
xor
insb
icebp
sbb
cwtl
jp
add
incb
into
sub
jmp
aaa
push
loop
or
sbb
jno
fldenv
mov
sbb
int3
cmp
data16
sahf
clc
cmp
fimuls
push
xchg
addl
inc
stos
enter
add
aas
mov
jae
pop
lea
sbb
jge
cmp
push
outsb
add
mov
cvtps2pi
repz
add
test
or
xchg
dec
movsb
mov
sub
daa
addr16
pop
lods
add
mov
sub
divl
xor
out
mov
sbb
xor
push
adc
add
cmpsl
pushf
cs
loope
into
dec
sub
imulb
popa
xchg
xchg
xorl
push
mov
bound
or
hlt
sub
dec
cld
jl
gs
movsl
fcmovnb
lds
add
aaa
jge
pop
sub
jg
push
sub
push
fdivrl
xor
push
aaa
pop
stos
ret
jg
cmc
icebp
push
mov
jmp
dec
cmp
iret
sahf
jno
aad
orl
add
mov
ds
sub
pop
mov
inc
leave
push
call
cmp
rolb
add
add
jmp
dec
xchg
test
out
sub
mov
pop
push
sti
xchg
and
ds
mov
mov
ds
mov
mov
stos
pop
inc
adc
into
cmpsl
and
add
add
mov
gs
and
bound
fmull
shlb
test
and
inc
mov
clc
adc
jecxz
cmpsl
push
roll
xor
jp
shrb
add
jmp
xchg
orl
add
adc
push
inc
xchg
push
mov
fbstp
popf
add
mov
add
push
dec
pop
ret
fisttpl
mov
push
je
pusha
add
add
dec
xchg
cmp
fadds
add
add
pop
xor
aaa
je
add
das
imul
stos
dec
les
add
repnz
mov
imul
add
add
push
ret
inc
std
mov
out
add
insl
add
push
scas
push
sbb
add
jmp
jle
add
cmpsl
add
add
xlat
call
int3
lea
inc
insl
dec
icebp
out
add
add
add
adc
sbb
pop
lock
movsl
jecxz
jecxz
add
enter
inc
add
popa
js
sub
mov
ljmp
add
out
add
xchg
push
add
ss
push
add
push
mov
dec
add
push
mov
cli
jns
mov
scas
add
ja
mov
inc
mov
mov
addl
dec
aam
inc
pop
add
popa
mov
out
in
jge
add
cmpsb
nop
addr16
or
push
cmc
add
mov
xor
sub
cs
inc
sub
and
add
int
mov
jle
adc
jp
out
das
pop
loop
daa
lret
aad
jmp
fldt
sub
fwait
jg
mov
dec
fmulp
iret
fisttpll
add
push
add
xor
insl
iret
push
or
add
adc
into
clc
add
or
ja
lods
add
add
pop
add
adc
mov
add
pop
cs
std
adc
loope
xchg
negl
mov
adc
adc
clc
adc
mov
ja
in
filds
cld
icebp
cltd
sub
cmp
jnp
jne
js
sub
sub
mov
pop
mov
jne
jo
cld
inc
stos
add
aam
push
insb
sldt
xor
push
xchg
and
data16
mov
sahf
lahf
movb
add
cwtl
jb
enter
add
add
sbb
and
inc
jle
roll
roll
mov
jg
into
lock
cltd
inc
data16
loope
outsb
insb
pop
pmulhuw
add
push
mov
mov
mov
mov
add
xorl
add
movsl
dec
add
mov
addl
bound
xorb
add
add
arpl
test
jo
xchg
mov
test
mov
xchg
int3
cmp
add
pop
xchg
and
add
aam
cltd
pop
mov
xchg
jnp
push
jg
stos
dec
adc
std
add
add
add
cmp
std
sarl
push
fisttpll
sbb
loopne
mov
scas
mov
in
ret
mov
lock
sub
cmp
mov
jb
mov
add
add
push
clc
negl
lret
jle
dec
lods
out
push
and
sub
ficomps
ret
popa
push
out
cmc
add
jecxz
xor
ljmp
lret
cmp
pusha
out
adc
fdivs
adc
movb
cli
mov
outsl
add
add
mov
jo
lret
gs
xchg
mov
in
cmpb
testb
inc
or
push
add
sbbb
js
mov
lret
nop
add
mov
ljmp
jge
sbb
push
sti
add
mov
shlb
add
add
xchg
loope
lds
inc
iret
into
std
shrb
scas
in
mov
into
nop
ss
cmp
cwtl
testb
lahf
mov
or
sbb
mov
ljmp
fidivs
cmpsb
push
sahf
jnp
xchg
dec
fdivl
push
push
shlb
jb
add
add
sub
stos
test
enter
leave
xlat
add
pushf
dec
cld
mov
jp
loope
and
add
add
es
add
fnstcw
in
sbb
test
cwtl
and
das
push
sub
sahf
jl
leave
xchg
je
out
lds
int
add
dec
jp
add
xchg
mov
xorl
mov
fsts
test
mov
or
jne
pop
mov
or
fs
xor
add
xor
push
aad
xchg
mov
fwait
mov
inc
mov
sahf
pop
dec
add
add
push
and
sub
pusha
inc
mov
int3
stc
pop
cmp
insb
sbb
mov
cmp
ljmp
in
mov
add
sbb
or
jle
jns
push
adc
lods
outsl
xchg
es
popf
pcmpgtd
rclb
popf
inc
jle
mov
push
push
cmpsb
jl
sub
cmp
or
fimull
out
xor
sbb
ror
iret
cmp
pop
jno
inc
pop
sub
popa
sub
lods
scas
push
push
sbb
loopne
sti
and
pusha
push
inc
mov
arpl
inc
iret
sbb
inc
add
jae
add
sbb
into
xchg
cmp
imul
add
out
dec
add
add
js
xor
mov
mov
push
cs
repnz
sbb
addr16
xchg
sbb
sbb
jnp
xor
xchg
sbb
cmpsb
add
push
and
jne
inc
mov
mov
pushf
lahf
xchg
repz
iret
push
dec
fsubrl
xor
into
xchg
inc
jmp
push
pop
xchg
xor
jo
mov
mov
inc
sbb
push
pop
mov
inc
or
push
mov
insl
adc
xor
in
add
pusha
repnz
popf
or
std
shlb
mov
lock
or
daa
or
xchg
add
cmp
dec
je
jecxz
xor
push
mov
in
xlat
dec
sbb
subl
pop
rolb
ret
call
aaa
insl
mov
ljmp
adc
repz
cld
and
add
pop
cmp
pop
mov
in
inc
add
out
rorl
mov
leave
mov
loope
cmp
pop
test
pop
or
ret
ljmp
mov
xor
clc
add
add
cmp
dec
jbe
dec
mov
pop
or
mov
fadds
dec
das
mov
out
call
add
les
cmp
xchg
add
adc
mov
xchg
lahf
subl
push
pop
out
add
add
pop
ja
fwait
xor
add
push
sahf
test
mov
mov
jmp
inc
gs
popa
cltd
and
clc
cltd
xchg
or
rep
mov
jl
inc
test
jbe
ss
mov
add
add
cmp
mov
lret
mov
rcl
out
pop
mov
jg
lret
xor
push
mov
adcl
or
in
push
jns
and
add
add
xor
or
xor
in
repz
rclb
xor
or
sar
clc
lods
fnsave
add
pop
mov
inc
fadds
shll
or
add
out
add
jge
add
mov
popf
xchg
jne
xchg
lret
es
cmp
mov
xor
jg
cmp
dec
dec
push
test
incl
jo
xchg
add
add
mov
leave
sbb
xor
inc
add
add
jge
cmpsb
fidivl
dec
clc
sub
cmp
xchg
xor
mov
in
out
cmp
int
arpl
filds
add
ror
jae
add
cmpsb
sbb
xchg
inc
mov
adc
push
mov
clc
cltd
addr16
lock
std
bound
repnz
ljmp
lods
shlb
lcall
adc
scas
cmp
cmpsl
add
test
and
mov
cmp
add
xchg
cltd
add
clc
mov
sub
stos
xor
and
sarl
nop
mov
xchg
add
pop
nop
add
add
pushl
sbb
lret
cmpsb
add
add
adc
fwait
xorl
lds
pop
push
adc
pop
leave
fdivrs
adc
hlt
shrb
sub
push
add
sti
sub
out
dec
jno
add
ljmp
out
pop
jb
add
pop
jle
daa
add
add
mov
shlb
fldt
jne
movsb
add
add
add
add
pop
aas
cmp
pop
and
cmp
in
mov
std
stc
xchg
repz
cmp
push
fistpll
mov
cmp
arpl
add
cmpsb
lods
hlt
pusha
mov
sub
clc
jb
pop
xchg
int
pop
mov
push
jmp
les
cld
jmp
js
out
aad
pushf
loope
lds
fs
mov
ret
pop
cmpb
sbb
icebp
cmpsl
in
pop
push
in
xchg
out
jmp
xchg
xor
out
add
add
mov
hlt
pop
sub
sbbl
lods
pop
inc
xchg
add
jp
jo
add
lret
push
or
lods
loope
xchg
xor
insl
faddl
std
push
loop
test
inc
pop
std
mov
push
sti
cltd
enter
sub
testl
add
stos
dec
std
add
add
adc
adc
add
lds
aaa
add
push
pop
pop
cs
inc
mov
std
adc
dec
ss
and
xchg
rorl
xor
scas
in
insb
aad
repz
movsb
cli
cmpsl
loopne
jp
js
dec
fnclex
scas
dec
std
arpl
add
mov
cld
sbb
mov
add
add
add
std
inc
mov
mov
sbb
sub
sti
jmp
push
add
sub
add
add
inc
imul
scas
lods
movsl
xlat
daa
dec
jmp
push
or
ret
push
cmp
add
mov
sub
adc
rcll
cli
sbb
push
pop
pop
pop
mov
std
aad
cmpsb
inc
and
cmpb
mov
inc
xchg
cmpsb
cmp
pop
and
push
push
test
lcall
xor
rorl
enter
rolb
add
jb
jl
jae
add
push
add
cwtl
mov
pushf
lea
mov
and
inc
std
lret
scas
jle
sub
arpl
movsb
repz
js
lds
enter
add
mov
scas
into
jecxz
adc
push
je
fisttpll
cmpsb
inc
sbb
dec
mov
in
push
pop
add
ficompl
cmp
aam
push
xchg
gs
bound
ret
stos
add
add
test
jnp
ret
gs
popf
iret
jmp
push
xchg
mov
add
lods
mov
lock
icebp
add
jbe
pop
push
push
pop
mov
lea
loopne
and
insb
hlt
mov
jnp
add
jne
mov
fwait
mov
add
cmp
mov
loopne
dec
push
push
das
lods
outsl
mov
jle
cmp
push
sub
movsl
aas
lds
pop
filds
xor
out
lahf
aaa
add
adc
add
es
stos
and
mov
jge
pop
inc
and
movsl
mov
add
sbb
fistps
aad
jecxz
jmp
or
ja
dec
insl
mull
orl
add
push
add
int3
sbb
mov
add
jge
pop
adc
ss
xchg
jle
xor
push
push
mov
add
repnz
sahf
movsl
ficoml
xchg
jge
lret
xorl
ret
cwtl
fldcw
fwait
mov
mov
out
add
mov
aaa
ret
add
push
out
subb
add
mov
test
nop
add
cli
xor
inc
and
add
out
xchg
popf
lret
inc
jp
xor
jp
mov
test
add
add
adc
mov
addl
es
mov
test
cmpsl
pop
repnz
inc
stos
add
add
add
int
jbe
bts
add
rolb
add
xor
cltd
sbb
outsb
add
in
add
add
add
cmpsl
jg
inc
mov
mov
int3
in
enter
pop
xor
sub
loop
xor
insl
popl
inc
ficompl
add
push
loopne
mov
dec
shll
outsb
inc
js
inc
out
inc
sub
in
ret
add
add
and
mov
scas
add
add
jge
test
add
or
xchg
repz
arpl
xchg
or
clc
jbe
dec
inc
inc
xor
add
or
lods
call
in
data16
int
mov
fdivs
add
imul
add
xor
fldcw
add
lods
cs
adc
sarb
push
xlat
sldt
data16
mov
leave
jecxz
pop
mov
js
aas
lcall
jge
mov
fdivrl
lahf
adc
lahf
addr16
or
mov
rorl
mov
and
or
mov
sarl
pop
stc
jecxz
stos
leave
mov
sub
enter
inc
das
xor
xchg
jo
cli
xor
cmp
mov
push
out
add
sti
pop
jmp
int3
fucom
mov
insb
add
add
pop
push
lret
pop
ljmp
push
pop
mov
pushf
xor
jl
add
sbb
divb
in
sub
pop
adc
out
outsl
push
leave
mov
sbb
xchg
lcall
lods
nop
xor
mov
idivb
pop
popf
dec
imull
add
insl
inc
xchg
in
leave
mov
add
dec
iret
pop
je
stos
out
add
xor
add
push
mov
loope
aaa
dec
mov
jns
add
inc
mov
mov
divl
mov
push
mov
imul
pop
jns
out
xor
inc
and
mov
into
mov
add
enter
jae
add
inc
pusha
inc
jno
pop
leave
add
pop
dec
out
jecxz
adc
rcr
enter
mov
dec
data16
cmpb
cmpsl
mov
mov
pop
mov
mov
jbe
int
in
xor
cmp
and
xchg
sub
xchg
jge
sub
in
cmp
fs
or
in
inc
dec
adc
xchg
add
outsl
ds
daa
and
mov
xlat
cs
cmpsb
mov
sahf
sub
enter
mov
add
arpl
sti
add
mov
cmp
in
mov
cmpsl
dec
push
or
lret
stc
shlb
add
and
movsb
add
iret
shll
in
aam
mov
mov
add
or
gs
add
cmp
stos
add
sub
pop
push
dec
lods
add
mov
add
add
cltd
and
add
aad
mov
pop
mov
je
sbb
inc
lock
imul
xchg
mov
jo
jbe
pusha
push
ret
out
ficoml
loop
mov
cmp
add
jge
cmp
inc
jno
ljmp
add
test
xchg
mov
cwtl
sub
add
add
or
loop
mov
shlb
enter
add
and
add
add
addl
inc
pop
add
and
push
movsl
cmc
popa
in
cmpsb
mov
mov
sbb
xchg
scas
decl
popa
je
mov
dec
notb
xchg
fldenv
mov
and
pop
loop
hlt
call
dec
jl
xchg
rorb
ljmp
add
cmpsb
mov
outsl
pop
lods
jg
jge
mov
or
sbb
notl
subl
push
jae
sub
outsb
mov
xchg
shll
mov
ja
orb
cmp
xor
fidivrs
mov
cmp
enter
inc
mov
xor
pusha
push
or
les
dec
or
push
hlt
out
sbb
or
jle
dec
rcll
rclb
xor
int3
mov
lcall
pushl
aad
mov
repz
sahf
adc
scas
jp
ficompl
and
outsb
xchg
je
inc
aas
subl
cld
and
testb
inc
sbb
cwtl
or
lahf
pop
xchg
push
int3
pop
aam
cli
pop
pop
sbb
in
inc
cs
jmp
bound
dec
nop
ret
mov
add
lods
insl
ljmp
shl
in
lds
inc
shll
imul
add
aam
add
cwtl
adc
les
mov
js
cmc
add
add
nop
cmp
pop
jb
add
push
imul
sahf
inc
jle
xor
xorl
mov
out
xchg
xor
push
dec
fs
shlb
mov
int
cli
mov
mov
adc
addl
movsb
movsb
sbb
fwait
mov
inc
inc
mov
into
aaa
add
mov
into
std
into
lea
ss
mov
lret
inc
shll
push
sbb
mov
hlt
sub
incl
add
aaa
pop
xlat
mov
ds
cmp
daa
clc
leave
and
sbb
stos
add
call
loop
add
outsb
xchg
inc
loop
jmp
cld
add
adc
nop
in
mov
loop
cmp
add
int
fwait
cmpsl
jg
and
fdivrp
sar
jo
leave
into
in
repz
imul
cmc
push
mulb
pop
mov
movsb
fisubl
add
rorl
sub
xor
or
inc
xchg
into
sub
jne
jb
stos
adc
sarl
adc
push
into
fldt
fdivrp
jns
in
lcall
shll
cmp
scas
popa
cmp
add
add
add
add
insl
aam
inc
ja
push
test
test
mov
movb
stc
lret
pop
popa
and
add
outsb
add
fnstenv
push
push
lcall
mov
mov
pop
inc
mov
incl
add
pop
popa
iret
and
aad
jle
out
inc
add
push
pop
push
pop
mov
sahf
xor
enter
jnp
aam
dec
push
cmp
mov
push
cmp
xchg
fs
add
add
pop
sub
mov
hlt
xor
mov
std
add
aam
ret
fwait
push
mov
call
sub
ljmp
stos
fcmovbe
add
add
pop
mov
aad
mov
imul
push
mov
testl
jmp
dec
push
jne
jb
sub
xchg
jbe
or
fdivrp
xchg
shrb
jnp
hlt
and
outsb
loope
add
adc
scas
and
adc
icebp
aas
dec
popf
lret
imul
push
add
aaa
pop
jns
inc
or
and
add
cli
movsl
scas
test
push
je
in
outsl
insb
or
xor
cmpsb
fwait
adc
cmp
cmp
jge
cwtl
push
pop
adc
adc
mov
pop
pop
in
leave
xchg
add
dec
jp
add
xor
mov
inc
fwait
test
movsl
add
mov
sbb
lahf
test
cmpsb
dec
xor
inc
inc
dec
cmpsb
push
fwait
mov
movsb
jno
add
add
add
shr
outsb
cmp
ljmp
sbb
push
aas
pop
xchg
idivl
xor
or
lea
push
and
push
lods
loope
jle
push
sub
push
fidivrl
insl
adc
adc
xchg
add
add
cmp
mov
out
jmp
insl
sub
and
add
adc
cwtl
pusha
add
mov
mov
hlt
pop
add
in
imul
or
loope
sbb
pop
mov
inc
add
bound
in
cmp
mov
push
aad
mov
movsb
jle
loop
inc
and
aad
js
cmp
push
add
in
jns
adc
imul
in
nop
jge
lods
xchg
imul
xor
ljmp
add
add
stos
shl
push
dec
lods
push
cwtl
xchg
shr
dec
test
ret
mov
sbb
add
dec
pause
xchg
or
cmp
imul
xlat
lods
outsb
ds
fwait
xchg
enter
jb
lcall
sarl
pop
int3
cmpsb
loopne
push
js
gs
add
add
sbb
add
add
insb
inc
cmp
sub
inc
mov
out
and
js
adc
dec
push
xor
rorl
and
dec
mov
push
jge
in
mov
mov
out
inc
inc
inc
pop
xor
les
or
pushf
fwait
stos
mov
int3
lcall
sbb
mov
sbb
in
into
adc
fcoml
cmp
insb
pop
xchg
test
dec
mov
insb
loop
sbb
adc
lock
fcoml
popf
jnp
mov
dec
shll
push
sar
push
pusha
js
xchg
jae
scas
aam
ret
pop
arpl
gs
xchg
inc
sbb
and
mov
pop
mov
and
std
mov
pop
push
imul
pop
mov
or
repz
cltd
xor
mov
test
stos
jbe
cmp
enter
add
int
dec
leave
add
add
fisttps
aaa
xor
add
negb
stos
xor
scas
rcrl
push
xor
pop
mov
adc
fisubrl
je
sti
dec
or
popf
and
outsl
mov
pop
pushf
stos
or
xor
add
into
add
adc
ror
cmp
inc
or
push
sbb
dec
add
cld
xor
pop
sbb
add
add
scas
aas
jmp
add
test
cltd
mov
fs
push
pop
add
mov
call
and
sbb
xor
xor
push
pop
int
fildl
aaa
ret
inc
fwait
push
gs
je
ljmp
jmp
das
pop
pop
fwait
jae
dec
sbb
bound
mov
add
xchg
sub
aam
adc
sub
push
xor
add
mov
xchg
push
mov
std
aam
sub
rcll
rcll
jge
jl
inc
fwait
inc
xchg
add
cmpsl
ficoms
xor
int3
dec
or
lret
push
add
cwtl
in
imul
mov
or
neg
jae
jb
adc
push
aaa
push
cmp
enter
lcall
repnz
mov
inc
jl
push
adc
cmp
push
jmp
mov
mov
mov
pop
sbb
rep
pop
mov
add
jae
xchg
cmp
mov
loope
xchg
push
lea
adc
sbb
xlat
data16
mov
xor
add
add
leave
sub
dec
pop
mov
pop
in
push
add
add
inc
ret
sbb
add
add
fisubs
sbb
add
das
or
ret
mov
add
into
pushf
aad
xlat
daa
je
add
add
add
pop
push
cmc
fs
add
in
daa
inc
jns
dec
mov
add
mov
jge
add
add
ljmp
add
jle
sub
xor
mov
adc
cs
pop
into
or
outsl
push
push
mov
out
je
stos
mov
push
xchg
js
or
ret
inc
mov
pop
xchg
jle
mov
rolb
add
inc
out
sbb
cli
xchg
hlt
fsubrs
inc
add
add
xor
sbbb
rorl
add
dec
push
push
and
cmc
jnp
pop
gs
inc
dec
push
pop
pop
in
and
and
std
mov
push
into
xor
loope
repz
fwait
std
inc
cmp
arpl
mov
mov
inc
xchg
add
ds
add
cld
and
sbb
orb
add
add
in
insl
ljmp
pop
scas
cwtl
test
fistpl
push
cld
aam
dec
cmp
rcrb
inc
mulps
js
or
xchg
xchg
mov
pop
out
je
mov
call
repz
sarb
cwtl
pusha
add
scas
sahf
cmp
call
inc
out
shrb
push
loopne
dec
xchg
cmpsb
cmp
pop
and
das
movsb
inc
xor
popa
sub
xchg
or
fstpt
mov
ja
and
imul
push
dec
sbbb
pop
fnstsw
cmovae
lcall
push
mov
std
out
pop
push
sahf
push
jb
shrb
dec
add
add
mov
dec
cmp
push
or
cmp
add
add
xchg
insl
push
push
ret
add
sub
jecxz
ficompl
adc
out
adc
daa
insl
mov
call
bound
std
out
push
sbb
andb
cmp
in
in
dec
mov
mov
lahf
imul
or
dec
sub
sub
shl
adc
or
mov
or
xlat
jle
call
dec
add
jl
add
dec
jnp
inc
add
add
lea
sub
es
push
xchg
xchg
test
test
jmp
xchg
add
add
sti
das
inc
cmpl
mov
inc
incl
loop
xchg
nop
add
add
daa
das
xor
pop
add
imul
rcrb
add
faddp
push
inc
insb
add
ja
ret
add
and
pop
mov
daa
pushf
aam
push
sar
jne
mov
lock
add
into
movsl
push
arpl
cmpsl
jle
xor
std
add
xchg
loopne
add
stos
add
mov
jmp
stos
repnz
je
mov
mov
xor
inc
mov
and
jbe
dec
in
mov
ds
popf
sbb
mov
popa
mov
jge
into
loopne
push
adc
shlb
fsubs
ljmp
test
add
into
mov
add
ljmp
push
sub
cmpsb
loopne
xchg
sti
dec
sub
ret
adc
push
inc
push
leave
adc
fnsave
push
jecxz
cmp
sbb
mov
add
add
xchg
mov
push
push
cmpsl
stos
push
mov
xchg
mov
xor
add
adc
lret
jne
push
lret
leave
mov
mov
inc
test
and
push
scas
mov
lahf
adc
dec
push
ja
add
js
sbb
or
mov
outsl
pop
push
mov
stos
mov
adc
add
sbb
mov
and
addr16
popf
jnp
adc
adc
leave
data16
enter
push
ret
jmp
inc
add
adc
jmp
fistpll
push
lret
mov
add
ror
test
push
lock
cmp
aas
pusha
js
sub
jmp
stos
ja
mov
adc
add
add
out
pop
pop
xchg
js
cmpsb
jmp
gs
sub
lods
sar
loop
frstor
pop
xor
jo
enter
cltd
xchg
add
and
daa
cs
mov
xchg
addb
and
dec
sbb
mov
cmpsb
in
insb
jns
sub
add
cmc
sub
inc
xchg
pop
add
dec
add
mov
add
sbb
sub
shlb
movb
mov
push
and
jmp
gs
xor
or
out
call
add
add
push
add
test
repnz
jg
add
call
add
shl
add
or
imul
sub
aas
insl
cmpsl
inc
pop
fnstsw
add
add
mov
or
and
outsl
dec
mov
stc
test
rcl
push
xchg
jno
add
subl
add
cld
and
add
add
ljmp
xlat
push
jne
add
insl
dec
lods
add
in
in
xchg
add
jo
sub
sahf
cmpsb
fwait
fwait
add
adc
and
inc
add
add
lods
jnp
fdivr
js
insl
rolb
mov
fcmove
cmp
add
lock
mov
gs
leave
xorb
add
add
daa
or
and
mov
jecxz
rolb
lods
add
nop
pop
add
outsb
or
add
dec
stos
xor
rolb
testb
pop
add
add
es
in
in
push
repz
add
jge
jb
shl
ret
lods
add
adc
inc
jl
leave
jnp
pop
inc
add
pop
rolb
push
mov
adcb
inc
add
enter
outsb
stos
shll
out
mov
sub
add
cmp
push
repnz
xchg
pop
or
stos
dec
test
add
xchg
mov
add
mov
out
loop
pop
bound
iret
sub
add
adc
add
add
in
pop
insl
test
cltd
int
mov
shll
jnp
xchg
add
add
insb
bound
scas
lock
mov
add
mov
adc
adc
mov
js
adc
add
add
inc
xchg
adc
stos
add
add
insb
loopne
pop
fmul
repz
sahf
mov
xchg
lahf
and
sub
xchg
dec
or
mov
fstpl
jns
imul
incb
add
add
mov
add
add
and
add
add
cmpsb
and
dec
adc
add
inc
addl
movsb
sub
shr
loope
add
add
enter
sub
mov
or
add
popa
popa
inc
push
or
addr16
cmp
xchg
pop
add
pop
aam
out
aaa
subl
mov
xor
out
push
jg
mov
pop
sti
fmuls
and
add
add
add
cmpsb
loopne
outsb
sbb
fmull
loop
cmp
sub
or
dec
cld
fsubl
jne
fwait
in
xlat
sub
add
add
pop
js
mov
enter
xchg
mov
es
fnsave
jle
das
repnz
fnsave
push
aam
jecxz
stos
mov
out
jbe
inc
mov
stc
xor
pop
and
jmp
sbb
inc
dec
sbb
mov
das
xchg
inc
cmp
jl
sub
nop
or
jecxz
add
jno
icebp
mov
pop
pop
push
out
jno
in
pop
mov
mov
sub
lret
add
dec
xchg
xchg
test
xlat
ds
mov
dec
jmp
mov
call
xlat
js
mov
int3
jmp
mov
int3
lret
mov
outsl
add
dec
dec
and
lods
test
add
add
fcompl
call
xor
repnz
aas
xchg
add
add
lahf
insb
or
pop
xor
add
xor
jne
sub
jnp
jno
add
subl
dec
adcl
lods
test
std
imul
xchg
jo
imul
mov
repz
loope
leave
or
rolb
cmp
sahf
add
mov
pop
adc
loope
adcl
pusha
cmp
adcl
sahf
f2xm1
sbb
inc
ficoml
add
sub
sbb
loope
dec
nop
or
sbb
xor
out
pop
or
jno
stos
add
adc
mov
in
lods
mov
add
fldt
adc
ret
cmpsb
add
mov
xlat
in
ss
add
dec
or
jle
inc
cmpsl
push
cmpsb
mov
mov
or
jmp
dec
dec
ja
xchg
mov
psrld
dec
cwtl
cmpsl
jmp
mov
lods
repnz
mov
es
jmp
jns
xchg
cmp
hlt
or
add
add
mov
repnz
in
mov
xchg
add
cmp
enter
lods
mulb
lahf
movsl
enter
sti
lret
clc
cmp
cmc
sbb
sbb
add
add
loope
xor
fs
dec
lock
jge
push
mov
or
addr16
std
in
das
xchg
lcall
sub
mov
sub
stc
mov
testb
adc
add
mov
jnp
repz
mov
stos
mov
shll
add
mov
adc
data16
lret
add
mov
jno
inc
out
mov
aam
or
fldcw
cmp
daa
daa
insl
pop
arpl
jb
orl
xor
xchg
dec
dec
push
mov
out
jno
jne
stc
mov
mov
mov
jg
mov
dec
mov
aad
sbb
add
or
dec
mov
ret
into
inc
xor
sub
cmp
ret
fwait
adc
repnz
cmc
cli
jo
arpl
lret
xchg
add
push
lods
test
push
mov
jno
div
mov
dec
mov
and
and
fldcw
fcompl
xchg
adc
mov
jne
xchg
neg
jl
and
push
ret
or
idivl
mov
je
adc
xchg
rcll
in
mov
adc
inc
and
push
add
xchg
insl
mov
add
lea
pop
je
xor
testl
jno
mov
out
cmc
in
lcall
push
xlat
cmp
mov
das
xor
cli
pop
xor
out
outsl
push
insl
imul
sbb
addr16
inc
adc
inc
dec
ja
add
mov
and
add
rorb
add
popl
cmp
dec
test
add
stc
sub
pop
sub
addl
shrb
pop
outsl
sbb
outsb
imul
lods
aad
outsl
add
add
das
dec
insl
adc
das
add
sti
ret
shll
or
add
inc
lret
adc
ja
sub
in
call
sarl
out
aas
xor
add
add
xchg
or
dec
mov
xor
jge
jno
cmp
dec
xor
add
add
mov
cmp
test
cmp
lods
or
sub
jno
popf
pop
mov
or
and
popa
mov
jno
in
pop
pop
add
mov
pop
rorb
push
fmull
mov
add
add
mov
ljmp
push
add
xchg
sbb
push
pushf
add
add
in
les
dec
ljmp
push
mov
push
xchg
outsl
adc
ja
dec
add
add
in
bound
fbld
sbb
loopne
and
shrl
lds
xlat
mov
mov
stos
mov
jnp
inc
cmpsl
aam
ret
repnz
daa
xor
push
adc
mov
std
cmp
inc
cmp
pop
jbe
cmc
mov
jl
daa
mov
add
xchg
jo
loop
in
xchg
add
mov
stos
fiadds
gs
out
dec
ja
jo
lds
jns
sbb
push
in
int3
sarl
jo
nopl
pop
dec
std
add
add
adc
inc
xor
pop
mov
jle
cmp
test
add
add
in
push
lods
dec
mov
std
test
push
lock
repz
sbb
mov
adc
out
sub
in
mov
lahf
ds
loopne
pop
cmpl
sub
into
push
pop
pop
xchg
inc
and
sti
jmp
aam
dec
mov
out
ret
aam
add
and
mov
in
scas
mov
repz
push
mov
stos
ljmp
mov
leave
push
test
add
nop
imul
push
mov
inc
push
clc
dec
addr16
in
dec
xchg
cmpsb
mov
ja
mov
mov
jecxz
gs
mov
sti
mov
and
in
stos
mov
bound
push
sub
mov
leave
in
pop
mov
dec
in
and
shrb
sub
xor
mov
inc
and
mov
inc
pusha
fwait
adc
int
test
orb
ljmp
aas
dec
xor
xor
inc
out
or
inc
loopne
aas
add
adc
scas
test
loope
in
inc
hlt
mov
mov
sti
rcll
sbb
or
enter
jmp
pextrw
xchg
ljmp
cmpsl
dec
mov
stos
loope
fildll
cmp
or
xchg
in
dec
or
xchg
add
repnz
sub
lret
add
inc
jle
sbb
jo
dec
cwtl
cmp
adc
or
xor
xor
movsb
add
cmp
std
sbb
ret
shlb
gs
cs
adc
aam
mov
add
bound
push
mov
sbb
xchg
fwait
sub
inc
xchg
and
cwtl
sbbl
add
test
loope
adcl
divl
mov
jp
add
add
icebp
add
inc
lret
adc
loope
ret
mov
and
jne
sbb
push
aam
out
dec
jne
add
add
mov
xor
mov
divl
sub
test
mov
push
inc
mov
sub
inc
adc
repnz
add
jmp
cmp
and
adc
bound
mov
xor
dec
add
add
pop
loop
push
add
sbb
in
push
into
and
cmp
and
repnz
push
mov
popa
or
inc
das
popa
cmc
xor
sub
sbb
shll
lock
movsb
mov
xor
jnp
xor
add
inc
add
lods
add
cwtl
inc
add
add
mov
jo
enter
stos
out
add
scas
out
lcall
add
int
add
testl
or
add
sub
jg
pop
add
add
lods
dec
add
add
fbstp
add
stos
out
add
lds
stos
cltd
add
jg
dec
add
gs
add
call
add
mov
xor
add
clc
mov
sub
add
and
add
sbb
movsb
lahf
outsl
add
pushw
add
jb
add
test
inc
fwait
adc
and
add
xchg
add
lods
pushf
xchg
add
sub
add
and
add
add
jge
dec
push
lds
lds
movb
add
add
jge
inc
cli
sbb
pusha
push
imul
fwait
lods
sbb
rcrl
xchg
popl
add
add
add
xchg
add
add
lret
add
add
add
add
js
sub
mov
add
inc
testl
lahf
scas
shll
in
jmp
add
inc
addr16
cltd
cld
cwtl
add
add
test
jg
clc
mov
stc
xor
in
add
add
add
mov
jne
inc
xchg
cmp
aad
insb
js
in
pop
lret
das
nop
sti
dec
outsl
jmp
stos
pop
xor
fldt
dec
lahf
cmp
fwait
sub
outsl
sbb
movsl
lds
mov
and
inc
fs
dec
popf
dec
lods
add
lods
add
and
out
jbe
ret
and
or
hlt
scas
lret
shrb
inc
add
mov
decb
rcr
pop
and
pop
icebp
xchg
hlt
mov
push
enter
add
add
add
dec
or
sbb
fldcw
sub
test
mov
subb
shr
or
cmp
sub
xor
sbb
test
sub
mov
sub
pop
repz
xchg
clc
cmp
add
dec
xlat
rorb
pop
mov
lahf
sub
es
into
int3
mov
icebp
adc
jp
in
add
sbb
and
cli
inc
jb
sub
mov
movsb
popf
enter
cmpb
sub
pop
pop
loop
sub
int
push
mov
adc
dec
mov
inc
push
scas
push
leave
ja
bound
mov
insl
dec
jo
jmp
aas
aas
aam
test
shll
out
lahf
shrl
inc
add
out
push
iret
adc
sar
push
insb
xchg
cmp
lcall
mov
aad
push
jno
push
shll
pop
mov
add
dec
mov
lcall
fstl
add
add
add
push
lahf
jbe
outsl
fdivs
cmpsl
sbb
add
std
mov
ljmp
ljmp
inc
xchg
lock
lahf
mov
dec
xchg
dec
cmp
sub
xor
xchg
jno
sub
push
inc
roll
daa
popa
shl
pop
jo
push
shlb
roll
mov
out
fildl
dec
cwtl
pushf
fisubl
rorl
and
idiv
fwait
into
mov
push
add
jmp
in
or
ret
stos
mov
outsl
and
or
loop
addr16
and
add
push
sub
int3
addb
jb
inc
push
sbb
mov
pop
gs
imul
notb
lret
jmp
add
add
std
sub
es
ss
dec
pop
sub
or
dec
mov
xchg
fstpt
mov
xchg
shr
pop
xchg
je
lods
cmp
xor
add
mov
fidivrs
test
cmp
mov
mov
jle
xchg
in
js
or
add
mov
cmp
mov
es
aaa
into
mov
in
dec
and
xchg
popa
cmp
dec
push
rcrl
cmp
out
jge
insb
lahf
int
pop
daa
cmc
cltd
cmpsl
mov
add
push
fldt
iret
das
add
call
inc
repnz
sub
mov
shlb
lret
adc
sub
je
mov
add
push
jmp
dec
loopne
mov
imul
dec
xor
nop
adc
add
add
mov
xchg
adc
aam
jae
push
sbb
jae
mov
inc
jnp
pop
popfw
pop
clc
popf
in
out
dec
stc
shl
dec
jmp
add
add
std
sub
and
loopw
dec
pop
sub
or
dec
mov
xchg
fsubl
subb
pop
fwait
sbb
mov
mov
jns
imul
and
sbb
icebp
mov
out
adc
ret
outsl
or
fwait
rcl
out
add
xchg
adc
cmp
arpl
mov
push
flds
lods
push
pop
pop
pop
adc
testb
sub
jmp
aam
dec
pop
fwait
push
dec
push
mov
pop
mov
sub
loop
shlb
xor
and
js
lods
mov
outsb
lods
and
cmp
sub
add
mov
iret
jl
and
icebp
mov
js
xchg
adc
out
lret
les
sbb
mov
sahf
mov
jecxz
mov
pop
jecxz
jecxz
inc
inc
hlt
sbb
lret
into
jge
xor
push
in
mov
addr16
add
jp
push
sti
mov
mov
fmul
jmp
frstor
pop
mov
sub
inc
add
add
mov
dec
pop
sti
mov
aad
inc
repnz
mov
sbb
sti
addb
push
push
movsl
cld
mov
add
add
pushf
dec
add
rol
add
ljmp
inc
lods
add
aad
cmp
fisubrs
mov
mov
stos
pop
push
out
movsb
pushf
popf
andl
jne
push
push
add
add
add
dec
add
outsb
add
add
add
add
add
push
dec
add
add
add
add
add
inc
xchg
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
ret
sahf
mov
add
add
add
dec
add
adc
add
add
mov
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
mov
je
loop
mov
arpl
add
in
dec
add
add
adc
bound
stos
add
add
into
add
add
add
add
test
add
mov
push
or
aas
mov
inc
ja
xchg
rol
pop
jbe
push
sti
mov
add
push
mov
add
add
call
push
xlat
mov
outsb
or
cli
sub
add
mov
movsl
into
xchg
js
xchg
fsubr
pop
xchg
je
mov
add
pop
loopne
pushf
popa
push
shl
cmp
sbb
add
loopne
and
int3
pop
jmp
mov
sub
or
gs
mov
rorb
sldt
add
add
out
in
scas
xchg
inc
fldl
jno
stc
or
pop
xor
inc
push
test
xor
ret
adc
mov
fucomip
enter
adc
fisttpl
cli
stc
enter
sbb
lahf
out
xchg
mov
nop
lahf
xchg
xor
dec
movsb
push
jae
xchg
popa
push
lea
dec
sbb
adc
dec
icebp
push
or
jecxz
jbe
mov
cmp
push
pushf
jp
xorb
mov
adc
mov
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
movb
add
add
xor
sub
movsb
add
add
pushf
add
add
add
mov
add
add
add
add
add
add
das
add
add
add
add
movsb
add
add
add
add
add
add
add
das
add
add
sub
or
inc
add
add
add
in
add
cmp
jge
test
faddl
les
dec
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
into
add
add
add
cli
add
lock
lahf
add
add
cmp
sub
add
lods
add
sbb
sahf
add
jne
popa
add
add
incl
sub
movl
daa
add
test
jmp
fildl
incb
lods
add
add
add
add
add
add
add
dec
add
int
sub
mov
add
add
add
add
add
add
aam
xor
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
iret
add
or
pop
add
enter
scas
mov
ja
add
push
xchg
sbb
or
repnz
fwait
mov
jmp
outsl
jnp
add
test
xor
sarb
add
add
add
add
add
add
add
movb
add
add
pop
add
add
lods
add
add
add
mov
jns
dec
add
add
push
add
cmp
enter
jle
movb
add
add
add
add
add
movsb
add
add
add
add
add
add
test
dec
add
add
add
or
je
movsb
pop
dec
cld
push
insb
xchg
int
lret
mov
xchg
pop
test
xchg
in
and
pushf
in
add
inc
out
out
lods
cmpb
fisttpl
mov
add
jae
mov
xchg
sub
int
push
xchg
stc
lret
mov
ljmp
clc
dec
lods
cmp
xchg
dec
pop
adcb
icebp
push
dec
pop
mov
dec
add
sbb
lds
add
add
sbbl
xchg
into
inc
lods
inc
in
addr16
aas
popf
sti
push
loop
mov
sbb
cli
or
dec
push
mov
or
jle
mov
mov
and
sbb
push
std
ret
jg
push
cmp
jecxz
imul
scas
out
popa
adc
loopne
ja
mov
lret
int
and
or
in
adc
jae
or
movsl
push
scas
ret
jmp
das
cmovl
jg
test
cmp
fdivl
fwait
mov
xchg
mov
dec
pop
clc
lods
int
movsl
ja
fcomps
jno
inc
mov
jmp
aas
sub
incb
scas
js
xlat
mov
mov
out
aaa
data16
xchg
inc
push
lods
pushf
cs
push
inc
cld
and
in
std
mov
mov
sub
mov
jl
popf
mov
pop
into
xchg
lds
out
jns
cmp
xchg
mov
sbbl
dec
lods
dec
pop
lods
xor
push
inc
lgs
mov
insb
or
scas
insl
adc
inc
jns
push
cmp
loope
outsl
push
repnz
int3
aam
test
push
sbb
mov
pushf
dec
mov
mov
cmp
cli
and
incl
dec
jno
add
lahf
push
sub
das
inc
push
scas
or
sub
rol
insl
cli
mov
rcll
fcomps
pop
test
pop
and
or
cmp
or
andl
pop
push
adc
test
addr16
mov
int
dec
mov
mov
sti
int
fidivl
jno
loopne
dec
and
xor
mov
or
adc
adc
mov
push
and
cmpsl
inc
and
mov
mov
add
push
cmp
fdivl
or
inc
adc
dec
ret
jb
add
outsl
sbb
dec
cwtl
test
mov
nop
inc
lret
and
fldcw
mov
rol
xchg
sub
cmp
vpmacsdqh
inc
sti
jno
mov
test
in
shrl
cld
dec
push
inc
sub
sahf
sbb
lcall
arpl
adc
mov
fwait
in
mov
pop
xorl
sbb
test
adc
dec
stos
sub
popf
mov
sub
into
mov
push
cmp
pop
push
stos
sbb
stos
mov
std
push
int
sbb
or
andb
std
and
push
push
pop
cmp
mov
into
out
mov
jg
cli
into
or
xor
out
mov
pop
xor
mov
or
adc
out
sub
rol
jns
scas
jae
or
pop
pop
cld
mov
inc
sub
jo
test
add
sub
subb
lea
sub
mov
sbb
fwait
push
add
add
dec
sbb
add
sub
add
clc
in
mov
add
add
or
mov
dec
pusha
scas
int3
rolb
popa
ja
xchg
iret
add
add
cltd
repz
lock
add
add
lods
into
sarl
add
inc
fs
push
fadds
add
mov
movsb
fildl
add
sub
fldt
push
push
add
add
inc
cmp
mov
xchg
addl
movsb
add
fcomi
add
jb
fstpt
add
lahf
add
add
aas
and
scas
or
out
daa
mov
add
add
xor
call
add
jmp
mov
cmp
adc
add
add
push
rclb
mov
cmp
mov
aas
add
mov
negb
mov
add
jl
addr16
sbb
outsb
pop
add
and
add
pop
jns
xchg
mov
idivl
mov
add
cld
add
test
insb
popf
lods
sahf
sbb
es
add
dec
sub
clc
stos
cmpsl
cmp
dec
lcall
mov
and
push
int3
inc
add
add
adcb
xchg
add
mov
add
add
pusha
add
hlt
adc
add
add
add
adc
dec
cmp
push
and
and
adc
testl
add
add
push
add
xor
je
add
add
movhps
add
loope
add
add
cwtl
add
add
add
cmp
jge
rcrl
add
add
mov
daa
cmp
nop
sub
add
add
nop
dec
add
repz
add
add
lret
add
add
add
jbe
cmpsb
push
add
add
add
add
push
add
idivl
add
mov
xchg
add
add
hlt
xchg
imul
add
add
movsl
jne
loope
dec
add
add
add
add
cmpsl
add
add
jl
or
add
add
insl
adc
add
add
pop
iret
add
add
add
sub
add
add
pushf
imul
add
add
dec
cltd
or
add
add
data16
add
add
fsub
neg
add
add
jb
lds
adc
ds
rolb
add
add
aad
and
add
add
daa
pop
xor
add
add
lods
imul
add
add
add
add
add
es
xor
ss
add
ret
add
add
add
add
add
js
sti
mov
add
add
add
add
add
add
adc
roll
add
or
add
and
add
dec
adc
add
fdivs
lahf
push
add
add
lds
xchg
add
add
cmp
std
filds
add
add
fiaddl
add
add
loopne
sbb
add
scas
dec
sahf
add
add
adc
adc
add
add
ror
add
add
add
in
add
add
leave
xchg
xchg
add
add
clc
cld
and
add
add
cli
call
add
sub
add
add
adc
add
add
cld
inc
leave
push
sbb
mov
add
add
aad
pop
arpl
add
add
sbb
add
add
clc
jmp
add
add
xchg
lds
add
add
add
add
add
add
add
sub
add
add
es
add
jg
pop
push
add
add
hlt
sub
incl
pop
pop
mov
add
xchg
add
lret
lret
add
add
roll
mov
add
add
mov
push
add
pop
inc
add
xor
add
packssdw
mov
dec
and
add
out
xchg
add
and
add
fdivl
add
mov
add
inc
add
cmp
add
add
sti
xchg
add
out
add
imul
inc
sbb
xor
or
adc
add
ds
add
add
or
add
pop
add
add
in
add
aas
add
xor
leave
jbe
add
in
add
leave
call
add
ja
push
mov
lods
xor
add
sti
mov
add
add
and
add
add
add
push
mov
ffreep
int3
push
push
add
scas
icebp
mov
leave
push
in
repz
jge
repz
adc
stos
and
mov
int3
sub
dec
inc
pusha
push
inc
mov
or
jle
mov
nop
fcmovne
dec
xchg
jno
lret
addb
js
or
iret
pop
outsb
insl
xor
sub
add
enter
sub
lret
inc
call
add
pop
lcall
lahf
rclb
gs
jmp
popl
add
cli
lcall
push
fstpt
sub
rolb
add
cltd
jnp
rorl
adc
add
mov
lods
mov
jp
jecxz
xor
sti
mov
mov
or
push
add
pop
dec
mov
and
jmp
xor
mov
add
pop
in
jnp
mov
insl
add
cltd
lcall
mov
sbb
fildl
add
push
mov
repz
iret
pop
stc
xchg
jecxz
pop
fcom
out
push
mov
fmull
add
pop
das
pop
rorb
sub
aaa
push
add
icebp
sub
pop
sahf
stos
add
add
mov
lds
popa
or
ds
lds
pop
sub
sub
pop
nop
cwtl
sub
push
add
mov
pop
inc
mov
cmp
test
add
and
pushf
adc
movsl
clc
cltd
add
enter
mov
fwait
outsb
insl
dec
jmp
push
jno
and
fisttps
stos
dec
xchg
mov
xchg
mov
sbb
je
jbe
mov
pop
add
xchg
xchg
push
xor
testl
mov
insb
fwait
add
cmpb
push
jno
cmp
repz
add
fisubrl
test
inc
add
xchg
jnp
xchg
and
rolb
add
jbe
fstps
pop
movhps
ffree
inc
add
rcrl
aam
repz
mov
fisubrl
adc
mov
out
mov
add
pop
sub
pop
lods
cmpsl
add
jns
mov
test
jmp
add
das
lock
je
pop
and
add
xchg
add
xor
aad
loopne
pop
aam
imul
test
roll
test
popa
movsl
repnz
sub
inc
out
ljmp
push
flds
jmp
jbe
cmp
sar
dec
jo
insl
mov
loopne
movsb
cmp
push
dec
mov
add
and
mov
repnz
mov
add
fdivrs
arpl
jno
js
mov
jb
jmp
mov
mov
andb
or
in
hlt
jo
mov
dec
and
imul
jo
rorl
jg
or
add
shr
repnz
and
xchg
enter
dec
data16
dec
cld
iret
mov
pop
movsl
aam
jnp
jne
pop
add
psubsw
cmp
and
sub
add
add
scas
shrb
jecxz
xchg
jns
int
inc
pop
das
cmpsl
jnp
mov
jnp
add
aad
and
les
xor
push
into
lds
add
arpl
sub
push
int
add
sub
rorb
xchg
push
lea
push
hlt
popf
outsb
add
and
xor
add
xor
mov
add
daa
out
movsl
mov
lock
add
pop
hlt
gs
mov
push
dec
ret
ss
add
mov
and
dec
jle
xchg
mov
add
xor
add
mov
scas
add
add
add
fwait
add
add
add
or
adc
add
push
adc
add
add
add
add
add
dec
add
add
out
inc
add
add
add
mov
add
lret
add
add
add
add
add
cwtl
lahf
lods
add
add
add
push
enter
add
out
xor
add
ljmp
add
add
add
cmp
add
add
add
inc
in
add
scas
inc
add
push
mov
add
add
add
lods
cmpsl
add
add
add
popl
call
stos
cmc
add
add
add
sbb
add
imul
add
dec
add
add
xchg
fldcw
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
enter
sub
add
test
add
fadds
add
ljmp
add
add
add
add
add
add
filds
add
jge
add
test
add
add
add
inc
add
add
add
add
add
and
add
popa
add
add
add
add
add
lds
add
mov
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
sub
add
movb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
xor
add
add
cwtl
add
add
add
add
std
add
jns
data16
add
xchg
or
and
sbb
pop
add
sti
mov
add
or
add
dec
test
pop
adc
or
adc
pop
or
fnsave
fnstenv
add
add
add
xor
and
and
and
and
and
and
and
and
and
and
add
inc
xor
jnp
test
jbe
fimuls
jne
cli
mov
adc
add
add
add
lea
repz
jmp
pop
lahf
loopne
movsb
insl
push
out
gs
stos
rcrb
add
pop
add
sub
jle
push
mov
push
dec
add
add
add
or
loop
testb
lds
fcompl
inc
mov
jns
jnp
stos
dec
iret
movsb
mov
pusha
sub
xor
lea
pop
push
loopne
xor
add
add
add
jbe
out
dec
outsl
mov
mov
jne
mov
movsb
adc
add
cmpl
add
stc
into
ja
add
add
add
add
add
add
add
add
movsl
pop
mov
add
add
add
add
stos
cmp
add
add
add
add
add
jle
add
jge
mov
lret
add
add
add
add
add
add
add
jl
add
xor
add
mov
leave
add
add
add
add
xchg
rclb
add
add
sbb
add
call
add
xor
add
mov
add
js
int
add
add
stos
push
add
add
add
add
add
add
loope
out
add
addl
add
add
popa
add
fiaddl
push
cmp
add
add
push
add
add
add
add
add
add
lods
add
arpl
add
xlat
cmp
into
add
add
mov
call
push
add
add
inc
leave
push
add
fldl
add
add
and
cli
add
fidivrs
mov
repnz
add
add
sbb
xchg
xchg
stc
imul
or
mov
xor
dec
add
inc
dec
add
pop
incl
mov
add
aam
imull
add
scas
add
jb
add
add
add
pop
sub
mov
out
add
xchg
movb
stos
push
add
lret
mov
sbb
roll
lea
jo
xchg
add
dec
in
add
in
flds
pop
push
mov
sbb
xor
push
xor
movsl
loope
add
add
add
add
add
mov
add
lea
add
daa
mov
dec
pusha
enter
stos
add
push
mov
pop
xchg
out
add
add
ss
scas
rorl
movsl
xor
add
add
add
out
add
add
add
add
add
add
add
add
sahf
jb
cltd
and
add
dec
add
jns
add
fildll
add
add
add
sbb
add
add
cwtl
loopne
dec
jg
add
xlat
add
add
add
xchg
add
add
add
add
add
add
in
ljmp
pop
aaa
add
add
add
clc
cld
and
add
add
add
add
add
add
add
roll
add
and
add
mov
cmp
add
add
pop
xchg
add
add
mov
add
in
add
mov
adc
add
add
add
repz
sbb
adc
or
imul
pushf
int3
fsts
js
insb
push
enter
jmp
xchg
mov
xchg
repnz
pop
push
cmpsb
aaa
jno
nop
xor
arpl
fdiv
call
fsubrl
xchg
jecxz
aad
into
sahf
popa
and
in
push
push
rcr
jmp
sub
ss
mov
scas
push
or
movsl
add
repz
cmpsl
mov
and
dec
imul
sbb
lods
ret
repnz
push
dec
push
enter
mov
shl
or
loopne
or
into
lcall
xor
jo
mov
xchg
out
mov
jae
push
pop
xchg
sbb
insb
jle
adc
ljmp
add
fidivs
sbb
mov
scas
and
xor
movsl
mov
es
pop
xchg
loop
movsb
out
cltd
inc
adc
jbe
pop
sbb
push
out
xchg
iret
fcoml
idivb
pop
sub
adc
mov
mov
incb
adc
scas
and
pop
in
addr16
xchg
repnz
sbb
pop
fimuls
jl
adc
push
sub
iret
push
adc
cmp
lea
sub
int3
fldt
movzbl
insb
xchg
divb
pop
arpl
and
xchg
inc
mov
xchg
mov
sbb
aas
sub
bound
outsb
xor
mov
clc
or
or
aad
lahf
int3
xchg
pop
popf
push
cli
adc
ss
dec
out
mov
xchg
in
mov
jns
pop
lcall
add
adc
call
int3
add
fnsave
push
fisubs
scas
and
xchg
mov
aas
and
jecxz
movsl
in
cwtl
inc
adc
imul
out
cli
push
in
nop
enter
xchg
movsb
dec
idivl
pop
cs
adc
adc
jg
xchg
mov
mov
stc
add
ret
aaa
mull
pop
hlt
xlat
lods
fnsave
fsts
jne
movsl
iret
mov
scas
addr16
dec
push
push
push
insb
es
mov
lock
mov
adc
jmp
cmp
pop
insl
xchg
loope
dec
pusha
sub
sub
add
icebp
xchg
push
xchg
jl
xor
insl
ret
mov
les
jle
loopne
xor
and
cs
xor
adc
adc
mov
andl
sbbl
pop
mov
cli
push
mov
add
jnp
mov
inc
pop
xor
movsl
lahf
rcll
nop
sbb
mov
adcb
hlt
test
sbb
loopne
push
push
inc
pop
js
nop
and
push
mov
fimull
jbe
add
mov
std
xor
pop
jns
mov
xor
ljmp
pop
mov
das
andb
jp
pusha
sbb
ljmp
or
jb
mov
jecxz
ljmp
cmpsb
mov
rorl
sub
sbb
push
inc
movntps
mov
out
movl
mov
and
jno
in
mov
shlb
sub
fsubrp
das
mov
cmp
xor
xchg
add
ret
jne
and
sbbb
pop
mov
out
mov
push
sub
shll
and
xchg
mov
test
cmp
mov
pop
cmpsb
shll
movsb
push
fldl
cmp
leave
xor
jne
in
and
js
or
xchg
cmp
push
mov
in
lahf
repz
xor
mov
inc
ret
mov
addr16
xor
pop
add
shlb
adc
inc
test
cmp
mov
xlat
mov
pop
jnp
cmp
std
dec
dec
adc
xlat
mov
dec
insl
or
cwtl
shl
mov
sbb
mov
nop
mov
ret
sub
fs
lock
lea
je
mov
lea
sbb
sbb
xchg
into
daa
jl
dec
adc
mov
insb
cmp
lahf
ljmp
stos
shlb
cmp
and
xor
out
push
add
jmp
repnz
cmpsb
mov
xchg
adc
outsb
lcall
stc
out
lea
in
mov
fldz
and
mov
fwait
inc
xor
pushf
add
dec
mov
cmp
lcall
and
add
psubd
jbe
fsubrl
popf
adc
push
loop
mov
push
aad
fucom
dec
movsb
jb
mov
inc
ret
pop
jge
mov
sbbb
dec
and
cld
adc
jne
daa
loopne
and
jp
xor
stos
dec
add
aaa
fnstenv
or
xor
sbb
mov
xchg
aas
lds
add
xchg
cmpsl
popa
mov
xchg
push
cmp
test
repnz
add
lcall
pop
dec
sub
sub
test
nop
fldcw
xor
ret
repnz
mov
pop
out
push
or
es
sbbl
movsl
jo
sbb
out
lea
or
sbb
mov
popf
int
xor
sbb
xchg
cmpsb
pminub
inc
cmp
cli
js
mov
and
and
jp
or
mov
mov
in
push
cli
jecxz
sbb
or
xor
sbb
stos
mov
filds
xor
dec
and
daa
mov
cmc
adc
cmp
bound
test
ds
sub
add
loopne
dec
or
outsl
jo
adc
sbb
mov
mov
or
in
sti
mov
xchg
mov
or
arpl
jbe
cmpsb
jne
aad
repz
test
sbbb
inc
mov
adc
sub
pop
subl
ret
mov
ss
mov
xchg
icebp
scas
push
ljmp
xchg
adc
out
imul
clc
in
bound
or
and
std
xchg
mov
incb
and
mov
mov
pop
inc
xlat
pop
jle
orl
stc
inc
icebp
or
jnp
lea
cli
aaa
mov
cmp
outsb
xlat
lahf
jecxz
dec
xchg
je
lds
fidivs
cmp
dec
fcompp
sub
adcb
lds
adc
je
or
jnp
add
aas
insb
cli
outsl
dec
cmp
jae
or
lahf
sub
loope
aad
pop
mov
mov
or
sub
mov
or
aad
xor
and
inc
cmpsl
mov
aad
repnz
sbb
mov
xchg
mov
jnp
dec
adc
jmp
pushf
fbld
mov
cs
sub
cmp
adc
add
pop
mov
int
cmpsb
je
sbb
ljmp
add
shlb
and
pushf
jnp
mov
cld
popf
lahf
fisttpl
mov
add
mov
mov
pop
inc
push
cmp
or
cmp
insb
adc
or
imul
vmwrite
mov
subl
inc
mov
sub
mov
dec
fcmovnu
push
int
sbb
adc
subl
movhps
cmp
push
outsb
sub
cmp
nop
jne
pop
sub
daa
sub
je
call
test
adcb
stos
mov
js
ficompl
inc
arpl
ss
jmp
fistps
loope
sub
inc
xor
daa
in
in
push
jbe
cltd
in
std
mov
out
lret
mov
jp
xor
out
arpl
lret
pushf
stc
in
pop
mov
adc
inc
jbe
shl
call
or
xor
das
sub
scas
mov
loop
test
or
push
outsb
in
xor
mov
add
jle
ljmp
adc
mov
ret
jg
adc
or
popa
jo
add
lahf
push
mov
mov
leave
outsb
xchg
xchg
xchg
fsubr
inc
xchg
jnp
cmpsb
sub
aaa
mov
outsl
push
jl
test
iret
jns
stos
ljmp
or
movsb
push
cmp
xor
pusha
sub
cmp
stc
nop
dec
sbb
ds
or
xchg
jmp
cld
ss
stos
mov
and
ljmp
iret
and
lcall
mov
cmc
rcll
push
and
scas
andb
inc
ss
cmp
movsb
mov
ret
sbb
int3
xor
call
mov
add
jmp
add
or
pop
je
jle
dec
jnp
pop
adc
sbb
aas
xor
dec
jo
sub
lahf
mov
es
adc
cmp
push
loop
sbb
pop
cmp
mov
fisttpll
decb
xor
gs
xchg
je
insl
mov
xlat
fadds
fs
popf
mov
rep
mov
mov
les
cmp
mov
inc
cs
add
pushf
mov
imulb
outsb
xor
push
ret
add
inc
inc
add
xchg
hlt
test
dec
mov
mov
xor
xchg
xorb
pop
shrb
sub
sub
dec
mov
clc
rclb
adc
jle
iret
je
mov
or
jmp
daa
mov
ds
and
leave
and
cmpsl
loope
push
pop
gs
mov
xor
mov
xchg
in
pop
inc
scas
mov
and
stos
pop
incl
push
and
lds
ss
inc
ret
add
xchg
stos
sarb
mov
cld
xchg
pop
dec
pop
inc
jbe
lret
pop
fstl
incb
xor
add
lahf
cmp
push
lea
add
xchg
popf
or
mov
icebp
aas
mov
lds
aam
mov
jne
stos
adc
inc
jp
ret
mov
arpl
push
ljmp
fwait
ja
cmp
clc
push
in
xlat
imul
mov
pop
lds
ficompl
mov
jnp
movsb
std
add
and
or
xchg
xchg
testl
pop
push
cmp
call
aaa
lret
push
loop
xchg
sub
fwait
out
adc
push
or
add
insb
lods
jno
das
call
and
lods
in
lea
in
xor
fwait
mov
dec
cli
mov
ja
mov
rcl
sbb
jmp
loop
cmp
add
in
sbb
or
and
xchg
xor
mov
aaa
loope
mov
stc
cmp
fwait
jns
jbe
push
fmull
and
rcrl
jg
testl
xchg
mov
fcoms
push
push
dec
mov
dec
push
push
out
cmp
cld
out
push
inc
mov
mov
imul
rclb
int3
push
arpl
icebp
andb
popf
hlt
xor
mov
xlat
sbb
daa
lods
jae
testb
int3
lcall
mov
lcall
shrb
xor
subb
shrb
mov
insb
lret
js
sub
ret
ljmp
dec
cmpsb
outsb
push
mov
push
xor
jo
pop
inc
and
andl
pushf
push
mov
mov
into
fwait
movsl
xchg
mov
inc
xor
decb
rolb
repz
daa
jnp
push
pop
mov
cwtl
mov
mov
push
inc
pushf
jae
xlat
stos
xor
movsl
inc
fldl
arpl
je
movsl
or
and
push
adc
pop
shlb
adc
xor
or
lods
lods
jl
out
jecxz
pop
or
cmc
and
lods
mov
dec
push
mov
cltd
jne
loope
adc
pop
insb
pop
out
lods
or
mov
cmp
sub
fstps
xor
out
lret
dec
dec
mov
dec
testb
adc
lods
pop
into
daa
xchg
push
jmp
xor
and
or
out
fisubl
jnp
push
add
pop
popf
mov
inc
mov
mov
xorb
push
dec
jmp
sub
cltd
or
mov
sub
xchg
in
or
add
mov
fldl
scas
sti
jmp
dec
inc
xor
fistps
imul
jl
movsb
ljmp
add
jge
loope
mov
aaa
mov
je
mov
cmp
xorl
les
pop
ret
dec
pop
out
adc
push
leave
or
bound
cltd
and
or
das
pop
clc
and
inc
inc
sbb
pushf
jne
sub
or
fdivs
add
push
out
aad
fisubl
jne
loopne
inc
xor
rorl
cmpsb
es
and
rcrl
xor
dec
dec
inc
mov
bound
inc
cmp
loope
movsb
push
and
js
mov
out
and
fsubrs
adc
xor
rolb
sbb
bound
sarb
ret
push
pop
push
je
and
adc
fistpl
mov
int3
mov
dec
pop
push
push
cmp
stc
stos
cltd
pushf
jno
sub
scas
jp
orb
cmp
fldcw
push
push
dec
and
ficomps
cmp
xor
add
jle
gs
push
jno
adc
rorb
mov
ficompl
push
and
les
mov
pop
inc
popa
cmp
push
cmp
sbb
test
enter
cmp
sbbb
pop
lahf
xor
out
stc
imul
test
sqrtps
andl
fsub
loopne
jb
in
xchg
adc
mov
mov
push
and
sbbb
jbe
lock
sub
push
add
push
pop
inc
add
push
ret
shl
inc
rorl
cmp
shrl
sbb
sbb
xor
lcall
jno
lock
ret
lods
mov
aas
sbb
outsb
xor
mov
xchg
xchg
mov
jbe
cmpl
call
repz
pop
pop
mov
rclb
repz
add
gs
mov
jge
mov
jl
icebp
scas
adcb
mov
movsl
rorl
xchg
test
rcrb
pop
cmp
mov
xchg
pop
fsts
add
sbb
test
push
pop
sti
or
daa
dec
ds
into
lcall
lret
and
jmp
mov
into
out
inc
mov
mov
aam
jae
lret
mov
sbb
pop
push
xchg
out
clc
out
add
or
cmpsb
jb
adc
lock
jmp
mov
sbbb
std
adc
pop
aad
and
into
ds
adcl
or
insb
and
cltd
ret
pop
xchg
push
frstor
lods
sub
adc
add
push
scas
xor
not
pushf
lret
cltd
jbe
xchg
mov
mov
fldenv
dec
lods
lock
inc
sbb
aad
adc
nop
in
icebp
enter
dec
popa
cmp
rcrl
jle
mov
mov
scas
and
mov
push
rolb
test
and
aam
push
add
mov
cvtdq2ps
pop
jnp
sbb
mov
pop
fcoms
inc
dec
testl
cli
enter
fiaddl
dec
int
mov
pop
mov
xchg
std
ret
outsl
mov
mov
add
xor
adc
imulb
ret
cmp
inc
inc
enter
mov
icebp
pop
pop
idivb
jl
inc
add
push
xor
jp
jnp
push
and
fs
add
push
mov
cmp
push
lds
jp
xor
imul
pop
fisubrl
test
hlt
or
add
pushf
imul
ja
mov
lock
out
std
dec
pop
sbbb
aam
arpl
xor
ss
mov
sbb
xchg
cltd
ja
mov
aas
jmp
aam
and
and
jge
cmpsb
add
lret
cld
xor
cld
insb
fcoms
or
cmp
mov
mov
cmp
push
pop
ficoms
push
test
fs
xchg
jge
ss
leave
popf
dec
mov
xchg
jne
adc
push
fdecstp
loopne
fisubrl
inc
test
adc
sahf
bound
lret
cmp
jae
add
adc
pop
cmc
pop
and
fnstcw
mov
jmp
xor
push
cmpsb
fs
dec
xchg
push
fidivrs
dec
and
inc
clc
pop
ds
push
adc
cmp
mov
insl
lds
das
lods
enter
jne
add
stos
mov
inc
call
fnstsw
repz
jno
jmp
inc
dec
jne
outsl
rclb
outsb
or
das
fsubr
nop
dec
data16
pop
mov
mov
lret
ss
lds
jne
ljmp
xchg
repz
les
mov
push
or
and
lahf
push
sub
or
out
or
inc
aaa
loope
and
loope
push
cs
mov
add
xchg
fcoms
not
dec
xor
mov
fsubr
and
in
imul
aad
pushf
lods
ja
idivl
filds
loop
aam
mov
insb
mov
mov
xor
dec
mov
pop
aas
mov
add
sbb
shll
jp
and
pop
std
sbb
pop
hlt
xor
push
sbb
push
incl
sbb
pop
mov
stos
movsl
mov
nop
sub
add
popf
inc
ds
mov
jmp
in
cld
mov
les
in
shrl
dec
and
pop
sub
pop
daa
lret
push
inc
pusha
addl
sbb
jae
add
mov
cld
push
inc
mov
popa
fmull
das
inc
jle
loopne
fiadds
movsb
aaa
leave
in
outsl
mov
dec
push
aas
ljmp
cwtl
push
sub
mov
and
popa
das
rorb
pop
xchg
pop
and
sbb
jb
jbe
rcl
out
cmpsl
out
jb
xchg
jp
hlt
sarl
loop
inc
sub
mov
and
add
add
negb
push
shlb
mov
insl
mov
push
fsubs
mov
inc
push
std
sysenter
mov
add
fdivl
jns
cwtl
xchg
es
daa
sub
jnp
test
mov
xchg
jo
mov
test
bound
pop
pop
xchg
rcl
loope
xorl
cli
outsb
fnstcw
xor
pop
cltd
fsincos
sahf
pop
inc
sbb
stos
and
stos
jmp
and
mov
mov
xchg
dec
popf
dec
pop
mov
push
and
in
push
fsubs
addr16
pop
data16
loope
clc
dec
ljmp
mov
ss
fbld
push
and
and
mov
pop
jbe
jg
and
inc
inc
cmpsl
hlt
fs
sbb
cs
and
popa
dec
cmovnp
lods
cwtl
je
aam
inc
stos
loopne
xor
pusha
inc
test
inc
cmp
sub
or
cwtl
mov
or
rorb
and
cmp
push
mov
xor
pop
jo
in
es
sti
sti
inc
push
leave
hlt
pop
xor
adc
cmp
bound
push
xchg
pop
fdivrl
out
jl
add
and
movsl
rcll
pop
lds
jb
sub
sub
jbe
aas
cmpsb
cmp
stos
xchg
rolb
scas
dec
dec
ljmp
shlb
push
insl
dec
sbb
push
shll
pop
and
sub
cmpsl
cmpsl
lods
out
mov
jb
inc
mov
test
push
pop
push
test
and
ljmp
jle
mov
fsubrs
xor
ret
imul
push
add
xor
aaa
jle
in
push
decl
inc
push
in
inc
aam
adc
cli
daa
push
outsl
dec
adcb
pop
mov
xor
aad
aad
mov
mov
xor
xor
fidivrl
push
imul
ret
lret
clc
xlat
inc
iret
cmp
fsubs
mov
movsl
or
fistl
lret
out
hlt
sbb
in
sub
add
aas
out
dec
idivb
and
or
mov
push
daa
push
push
fdivrl
insb
lods
inc
stos
int
lea
dec
inc
pop
dec
mov
aaa
inc
pop
lahf
clc
jecxz
cmpl
lods
dec
or
leave
hlt
nop
loopne
inc
push
jns
push
rcll
xor
dec
and
lcall
je
test
and
mov
jb
jne
adc
push
lcall
arpl
cmpsb
xchg
jecxz
call
fcoml
xchg
lret
cmp
jnp
icebp
cmp
es
add
inc
jne
inc
pop
dec
push
pop
out
cmp
repnz
inc
inc
subl
pop
aad
fs
inc
movsb
inc
cmp
ret
pop
movsb
ljmp
into
les
in
dec
cmp
inc
mov
outsl
mov
sbb
or
and
sub
fs
mov
xor
inc
rcr
jge
pop
cmp
adc
xlat
and
aam
sub
fimuls
dec
fstpt
in
adc
loop
or
xor
shlb
mov
pop
or
inc
lea
sub
loopne
js
fwait
int
mov
fcoms
stc
rclb
lret
dec
or
push
movsb
ficomps
xchg
fdivs
push
cmpsl
push
popa
ljmp
mov
jo
jg
jb
jb
in
and
xchg
sub
inc
in
lods
add
int
adc
or
std
in
push
rorl
data16
inc
sub
xor
mov
cmp
jl
sub
inc
sbb
or
xor
repnz
cltd
ja
fwait
bound
mov
add
add
dec
jle
push
push
icebp
add
pushf
mov
rcrb
loop
mov
add
test
ret
or
inc
adc
sar
adc
insb
cmp
ljmp
push
std
dec
push
pop
inc
sub
jge
scas
das
mov
mov
dec
les
cmpsl
mov
mov
outsb
daa
xchg
xchg
repz
mull
adc
xor
lcall
or
push
and
stos
shll
aas
lock
int
push
fsubrl
shl
fisubs
and
push
es
jo
hlt
aas
inc
lret
jp
or
cmpl
mov
jecxz
lods
fwait
xor
outsb
pop
call
dec
notl
jnp
inc
xor
dec
daa
xchg
aaa
jl
jle
test
lret
cmpsl
in
mov
pop
sti
sbb
add
dec
pop
pop
aam
cmp
stc
cmp
sbb
outsb
adc
mov
add
mov
mov
dec
fsubl
mov
in
shrb
and
push
mov
sub
cmpb
pusha
inc
cmp
mov
dec
adc
inc
stos
cld
jbe
or
mov
xorb
xchg
daa
jmp
mov
and
ja
push
push
inc
mov
adc
mov
dec
lock
inc
out
iret
push
fcmovnu
or
movsl
nop
xor
jbe
hlt
pusha
negl
sub
pop
mov
fnsave
mov
xchg
cmp
pop
push
mov
dec
icebp
and
or
cs
cld
dec
adc
div
fisubs
pop
popa
cmp
jo
or
pop
adc
cmp
aas
inc
frstor
addr16
add
lods
fcoml
fistl
lock
stos
push
stos
cli
and
mov
mov
or
filds
cmc
sub
inc
out
jle
test
xchg
icebp
sub
cmp
pop
daa
mov
mov
jno
insl
in
pop
jns
cld
dec
mov
pop
loope
stos
sbb
lahf
out
movsb
mov
add
fiaddl
adc
testl
push
xor
sub
stos
sbb
ret
in
rorl
pop
sub
sti
inc
mov
pop
xchg
andb
in
daa
and
rclb
stos
scas
lea
adc
in
leave
adc
ja
push
add
dec
movsl
mov
mov
mov
sbb
arpl
cmp
mov
or
mov
std
pusha
cmp
cli
stos
lock
and
cwtl
adc
call
lret
call
orb
fsubl
mov
pushf
or
ficomps
pop
popa
xor
inc
xchg
ficompl
jp
in
cmp
xchg
orl
mov
pop
aas
fwait
repz
push
lods
daa
fstpt
pop
pop
lcall
adc
or
test
jns
cmpsb
lds
ds
or
cld
push
lea
mov
pushfw
fdivrs
jg
pop
adc
fdiv
aam
repz
leave
jbe
lds
cmp
arpl
push
pop
mov
cmp
adc
sbb
inc
in
adc
add
iret
pop
sub
loop
fimull
cltd
ja
mov
lock
btc
ss
outsb
movl
in
lea
cmpb
xchg
push
sbb
mov
mov
rcr
sbb
lcall
and
and
aas
add
loop
dec
popa
push
cmpsl
pop
cmc
jne
jg
lret
test
cli
jge
and
jo
outsl
ret
mov
outsb
add
add
pop
outsl
nop
mov
arpl
pushf
push
dec
or
adc
ret
jo
adc
pop
pop
sbb
cmp
jge
push
mulb
xchg
dec
add
dec
mov
pushf
shl
sbb
imul
jo
inc
fidivs
rorb
fnstcw
or
jg
stos
stos
das
push
call
add
push
fcoms
mov
adc
push
les
inc
xor
test
insb
lock
das
mov
jns
cmp
inc
push
sbb
mov
or
test
push
xor
pop
cld
mov
xorb
mov
cmp
movsb
rclb
clc
dec
or
cmp
imul
inc
jle
push
cmc
adc
mov
xor
jae
out
pop
and
jl
sbb
adc
and
xor
sbb
vorps
fldt
lods
sub
fs
xor
ss
iret
mov
lahf
push
fsubrs
dec
fcoml
inc
lock
xlat
xor
mov
push
cmp
inc
fldl
sbb
test
rcl
cmpsb
jle
xchg
jmp
xor
adc
inc
push
mov
popf
xchg
inc
insl
add
pop
subb
push
jae
dec
push
sub
outsl
test
popa
cmp
setg
inc
ds
mov
inc
and
mov
cmpsl
shll
pop
add
sub
testl
icebp
mov
pop
mov
sub
roll
and
mov
shl
cmpsl
andb
dec
fnstcw
mov
ret
jns
testb
dec
lea
xchg
sbb
test
cmp
xor
mov
arpl
insb
cmp
xchg
dec
loope
sahf
and
movsl
mov
cs
sub
mov
scas
lds
cmc
inc
inc
fucomp
jbe
cld
sbb
xchg
mov
fimull
dec
imul
push
or
aam
std
mov
test
mov
repz
insb
mov
in
or
shll
add
and
sub
xor
popa
mov
mov
movsb
insl
stc
and
sti
dec
enter
rcr
mov
fdivr
pop
scas
repz
fists
push
or
cld
and
xchg
mov
xchg
and
test
jbe
std
mov
aam
lods
imul
gs
cmp
push
cmp
movsl
mov
dec
sbb
mov
pushf
mulb
xor
sahf
push
gs
jo
add
inc
int
nop
jle
fsubp
sub
adc
or
inc
mov
and
fstpl
mov
int
lea
pop
es
dec
lock
dec
lods
and
pop
aaa
loope
aam
jmp
inc
ret
dec
and
mov
inc
adc
mov
cmpb
add
sahf
adc
jg
cmc
aas
lea
or
fwait
fcmovu
lock
sbb
pusha
fstp
inc
daa
xorl
hlt
lds
cmp
dec
ja
aam
cmp
push
sub
mov
int3
sub
add
lea
idiv
popf
cs
clc
repz
test
sbb
dec
je
cltd
sbb
and
push
sub
cmp
jno
add
std
clc
ljmp
ljmp
pop
rclb
lods
icebp
test
mov
inc
push
stc
pop
or
xchg
add
mov
sub
cmp
jo
or
inc
mov
lahf
shll
out
add
cmc
lods
sbb
mov
jne
sub
cwtl
mov
mov
loopne
xchg
sub
inc
loopne
out
test
cwtl
pop
or
sbb
cmp
sti
add
insl
inc
int
enter
mov
mov
bound
pop
shrl
mov
and
int3
inc
stos
shl
shlb
pop
pop
adc
pop
jno
cmp
push
mov
or
lahf
inc
lahf
popf
sbb
sbb
mov
mov
inc
lods
dec
loopne
mov
das
jg
push
ss
mov
dec
dec
cmp
pusha
into
loop
icebp
mov
pushf
cmpsb
popa
xor
inc
add
inc
popl
jl
movsl
lods
lods
addb
into
fwait
idivb
push
xchg
mov
jp
mov
sbb
cmp
sbb
dec
stos
clc
push
jge
aas
jge
test
sub
jmp
fwait
xor
jbe
push
jl
mov
outsl
mov
mov
jmp
push
adc
shr
leave
pop
imul
fsubs
nop
mov
cwtl
adc
cmp
orl
and
mov
fwait
pop
ds
mov
das
jmp
mov
sti
rdpmc
inc
out
and
in
mov
mov
ret
mul
cwtl
dec
xlat
outsl
insl
or
sbb
mov
scas
or
pop
aaa
xchg
imul
mov
adc
pusha
mov
dec
in
js
cld
mov
movsb
loope
dec
sbb
push
stc
jl
pusha
rclb
lea
jns
aam
dec
fcmovnbe
cmpsl
sub
push
sub
push
xchg
mov
inc
sbbl
or
inc
pop
or
or
push
mov
es
cmp
add
dec
movsb
jnp
push
addl
sub
sbbl
cmp
repz
aam
mov
mov
mov
sti
shr
mov
jmp
mov
mov
cmp
fwait
scas
mov
call
sti
pop
sarl
movsl
or
mov
push
sbb
and
arpl
xchg
lds
pop
test
add
xor
movsl
and
mov
sbb
repz
push
mov
push
xlat
in
lret
jne
and
mov
ficoms
sub
cltd
outsl
bnd
insl
movb
adc
adc
adc
and
add
shll
mov
jl
enter
inc
fsub
jecxz
in
jmp
add
jg
push
xchg
loop
addb
out
enter
ret
sub
pop
pop
pop
lahf
cwtl
adc
lret
xchg
ja
jg
pop
inc
push
popa
iret
sub
push
shrl
pop
jb
bound
rolb
inc
and
jne
lret
xchg
push
push
lds
push
add
sub
in
icebp
and
sbb
add
inc
ljmp
jp
test
hlt
aaa
and
jo
jne
dec
fsubp
pusha
rol
add
ret
cld
aam
aas
xor
adc
push
dec
and
mov
lahf
test
xor
pop
mov
inc
xchg
push
xchg
push
jl
jbe
adc
je
movl
imul
or
and
stos
loope
ret
movsb
cltd
sarb
dec
adc
sbb
js
lods
and
shl
adc
cwtl
popf
fists
pushf
and
cmp
lods
pop
pop
test
iret
xor
mov
mov
xor
sarb
add
jecxz
jb
mov
lcall
xor
push
mov
mov
jns
gs
pushf
popf
mov
cmp
lods
inc
jl
adc
mov
js
cwtl
sbb
sbb
push
test
lock
cmpsb
jo
xor
int3
add
lods
ret
cmp
push
data16
xor
loope
or
loopne
fldcw
xchg
mov
jns
cld
scas
stos
jp
decb
mov
ret
pop
sub
and
pop
mov
ret
hlt
divb
lcall
xchg
stc
jbe
lods
xor
and
pushf
inc
xchg
pop
add
pop
cmc
dec
andl
scas
and
shl
inc
rcll
or
push
stos
outsb
xlat
xor
sahf
ret
clc
jno
mov
add
or
test
insb
in
mov
add
test
jns
inc
add
xchg
sub
mov
mov
lds
lret
cmp
enter
stc
daa
add
inc
inc
sub
stos
fsts
xor
insl
or
mov
push
push
outsb
cmp
and
adc
xor
sub
repnz
push
or
fstpl
scas
stos
movsb
loop
xchg
dec
fdivrs
mov
int3
mov
scas
dec
into
lds
adc
adc
les
clc
popf
pop
inc
mov
mov
setno
xchg
loope
push
xchg
dec
cmpb
xchg
aaa
xor
loopne
test
outsb
cld
shl
add
mov
lret
sbb
or
push
mov
icebp
push
mov
bound
out
xor
mov
aas
add
call
dec
mov
push
inc
lret
insl
cs
xor
jae
mov
mov
imul
ja
mov
gs
mov
sub
repz
xor
lret
sub
mov
pop
clc
js
insb
lods
xchg
lret
sbb
fmul
push
push
dec
in
movsl
mov
mov
test
jecxz
lret
pop
jg
dec
clc
rorl
dec
xchg
es
xchg
jge
imul
mov
cmp
inc
or
je
bound
out
dec
roll
cmp
roll
shr
fistpll
imul
daa
test
stos
dec
test
rorl
push
mov
dec
mov
add
in
mov
outsb
xchg
out
movsl
push
clc
mov
push
std
js
loope
push
gs
sub
andl
in
fldenv
inc
mov
mov
pop
sbb
push
inc
xor
sub
out
sub
out
shrb
pop
jge
inc
mov
mov
xchg
into
insb
cwtl
dec
add
inc
mov
dec
dec
mov
xchg
outsb
inc
lock
shll
cmp
popw
pop
xchg
lret
mulb
dec
sahf
adcb
stos
shr
mov
rorl
mull
mov
loope
inc
xchg
sar
and
and
pop
cmovns
scas
xchg
aas
imul
rclb
fsub
fs
jmp
lods
test
sub
iret
les
js
cmpsb
cltd
pushf
loopne
das
mov
jmp
shlb
mov
in
jb
fstps
out
mov
add
fisubrs
movsb
or
and
or
add
xor
mov
jg
imul
enter
jg
and
pop
ss
insl
daa
ja
jp
shll
xchg
rorb
or
popa
inc
movsb
sar
jns
jg
jp
and
adc
fldenv
outsl
sbb
mov
add
das
in
and
aas
push
xor
jbe
adc
mov
mov
ret
testl
stos
jnp
dec
mov
jno
arpl
ja
pusha
sub
lock
pop
sbb
ljmp
and
subl
mov
bound
nop
lea
push
sbb
stc
je
add
divl
shrl
mov
js
inc
dec
xchg
pcmpgtb
or
lods
mov
jae
es
into
rorl
clc
dec
add
sub
and
xorl
repnz
mov
scas
lret
mov
fs
inc
in
mov
mov
fnstsw
sub
rcr
ror
mov
inc
cmp
test
jne
jl
mov
mov
mov
add
imul
addr16
cmp
ja
and
jge
mov
adc
loopne
pop
out
push
lods
sbb
dec
mov
rcr
lahf
mov
filds
add
pop
ret
aam
movsb
pop
xchg
xlat
fs
shll
pop
fnsave
and
cld
mov
orb
push
xor
test
or
aad
out
inc
dec
js
movsl
mov
add
insl
ret
add
clc
sti
mov
repnz
jmp
das
inc
iret
fmul
sub
test
test
jge
dec
das
or
mov
push
xor
pop
or
nop
mov
inc
cli
stos
xor
enter
or
push
and
out
xor
inc
mov
aaa
imul
add
arpl
jl
mov
fdivrl
mov
les
push
pop
xchg
jle
insb
cli
xor
or
adc
pop
out
dec
movsl
dec
out
stc
mov
add
xchg
loope
push
inc
sub
inc
inc
sbb
push
fidivrl
loopne
and
mov
negb
inc
iret
fcmovnu
pop
bound
das
js
mov
call
xchg
addr16
dec
repz
mov
fidivrs
and
inc
arpl
fs
hlt
jmp
insb
mov
shll
pop
movsl
adc
out
lret
test
push
popa
xor
xor
aas
push
xchg
lret
jae
aas
bound
pop
ss
push
lods
or
xor
out
mov
cld
dec
test
out
push
jge
push
mov
mov
ret
lahf
pushf
mov
adc
popf
mov
lods
lcall
inc
mov
jo
idivb
add
jle
mov
aaa
mov
sbbl
repz
cmc
int3
inc
sbb
jne
cmp
jge
in
mov
iret
xlat
in
adc
mov
mov
enter
adc
xchg
cmpsb
adc
pop
jmp
or
inc
pop
xor
adc
mov
test
adc
push
arpl
repz
pop
mov
sub
push
push
jmp
movsb
inc
sbb
mov
in
aaa
in
lretw
sbb
mov
scas
cmpsb
icebp
xchg
inc
mov
jnp
push
lods
insb
xchg
jle
jecxz
aaa
scas
loop
pop
pop
cmp
pop
imul
and
mov
mov
or
jg
mov
or
out
mov
push
push
or
incb
jp
inc
test
or
pop
mov
imul
xor
inc
out
mov
scas
and
loope
mov
mov
mov
nop
inc
jge
inc
mov
or
mov
jl
adc
push
pop
push
sbb
push
pop
cmc
inc
stos
pusha
int
dec
sbb
sbb
jb
data16
xchg
mov
movsb
xor
dec
scas
aas
mov
dec
stos
or
ror
xchg
das
rolb
sbb
ja
push
jp
rorb
mov
aaa
call
or
jae
jns
lea
cmp
aam
jbe
inc
loope
pop
jb
pop
cmpl
cmp
scas
jg
imul
fdivs
sub
stos
fldcw
mov
sub
in
idivb
rcrl
mov
sbb
insb
xor
imul
std
mov
into
rcrl
lahf
mov
inc
push
add
push
or
xchg
add
fs
fnsave
popa
lds
loope
push
lahf
out
push
or
xor
inc
aad
cmp
test
cld
mov
jno
mov
xor
mov
popf
mov
sbb
jl
adc
mov
dec
sub
outsb
sbb
xchg
add
sbbb
mov
push
rorl
int
fxch
je
add
sbb
or
subb
lea
mov
mov
ret
xchg
adc
sbb
imul
aaa
pop
addr16
mov
dec
loop
idivb
test
fwait
mov
in
stos
imul
xchg
imul
xchg
inc
loopne
aam
mov
inc
adc
dec
jnp
daa
test
nop
pop
fisttps
test
iret
xchg
sub
jnp
fcmovne
pop
add
jnp
mov
nop
call
or
pop
xor
add
sbb
lahf
jbe
xlat
mov
mov
inc
iret
xchg
xchg
or
cmpsl
xchg
add
pop
aad
rep
outsb
pop
mov
shrl
mov
sbb
aaa
aam
pushf
in
or
xor
adc
js
pop
mov
cwtl
fdivl
mov
shll
inc
out
add
sub
adc
mov
sar
cli
aas
adc
mov
push
inc
or
pop
or
insb
xor
jp
cmpsl
add
shl
cmc
stos
xor
mov
mov
dec
inc
sub
sbb
arpl
lret
jbe
lret
add
and
cmp
fdivl
xor
aas
enter
inc
fwait
jp
ss
and
cli
xchg
lahf
in
fdivr
adc
pop
iret
add
mov
xor
dec
dec
add
sbb
jo
js
dec
add
mov
jge
or
imul
adc
sbb
jecxz
push
adc
xchg
fsubp
int3
jg
dec
jnp
fnsave
push
and
scas
push
or
rcpps
fistps
and
ret
mov
xor
mov
cwtl
jmp
jecxz
scas
lds
cs
pop
dec
pop
call
mov
fistl
mov
fsubrl
inc
popl
mov
inc
or
add
addr16
jns
shr
sarl
aaa
jle
add
mov
shl
lds
lahf
jno
push
xchg
lods
aas
adc
mov
jp
les
mov
aaa
outsl
jle
or
aas
push
aas
lcall
adc
jne
mov
outsl
cld
sbb
int
and
lods
push
scas
jle
jae
or
into
push
inc
cmp
dec
lret
mov
mull
cmp
jno
push
mov
pop
or
shll
movsb
fstpt
inc
stos
xor
ljmp
lea
outsl
ret
dec
dec
or
testl
pop
sub
enter
push
es
in
test
mov
movsl
int
lods
jno
mov
jb
jge
xchg
jmp
inc
mov
sub
add
lds
dec
pushf
loopne
les
cltd
les
inc
or
cmp
fnstsw
lock
test
mov
out
lret
push
aad
sub
lahf
or
dec
add
mov
adc
icebp
and
leave
popf
sarb
notl
add
jecxz
lea
nop
fxch
cmp
out
or
loopne
jnp
incb
aaa
or
std
loope
and
imul
mov
call
outsb
inc
adc
movsl
mov
sbb
test
push
sar
sub
cltd
cwtl
int3
jmp
jp
mov
add
push
lods
push
cmp
add
cmp
or
add
cmp
jb
leave
dec
arpl
imul
fwait
pop
jbe
mov
roll
repnz
sbbb
xchg
mov
cmp
adc
std
jo
rclb
mov
gs
cmpsb
fmuls
enter
mov
scas
hlt
jo
insb
and
jle
repz
cmp
pusha
push
sbb
sub
aad
js
mov
xor
mov
in
or
int3
inc
insb
sub
leave
loop
call
jb
xchg
mov
in
fildl
fcmovnbe
cltd
or
add
cmpb
sti
adc
test
inc
xlat
iret
cmpl
inc
pop
xchg
das
jns
mov
xchg
sti
pop
movsb
std
dec
popa
mov
roll
cmp
pop
or
pusha
loop
jb
imul
jle
pusha
loope
and
sub
pop
cwtl
xchg
pop
test
pushf
cmc
push
and
xchg
dec
mov
lea
push
xor
imul
jl
pop
jnp
pop
jecxz
push
mov
jne
adc
into
jp
jp
aas
push
clc
mov
in
sbb
xor
pop
xor
and
shrb
in
sbb
dec
fs
jbe
or
aad
push
jno
cltd
adc
mov
addl
rep
xchg
or
push
pop
pop
xchg
mul
mov
dec
popa
or
in
shll
stos
xor
loope
or
cmp
rcll
ja
lahf
xchg
or
jl
add
mov
aas
arpl
mov
add
fsubs
pop
xchg
xchg
ljmp
add
pop
xchg
jmp
ficomps
leave
repz
clc
xchg
clc
repz
leave
das
inc
cmp
arpl
mov
jl
fidivrl
call
lcall
sahf
dec
adc
scas
pop
xchg
es
add
pusha
cwtl
aam
stc
or
aas
jmp
sar
jb
test
mov
sbb
cwtl
and
pop
jb
addr16
mov
or
dec
add
adc
test
lahf
fidivs
lods
hlt
xchg
jae
sub
dec
aam
shll
rcll
inc
and
outsl
fmuls
mov
fstpt
xchg
loop
jge
mov
out
hlt
and
pop
lea
dec
mov
fucomp
aaa
mov
sub
mov
dec
test
dec
lods
insl
jp
or
cld
pushf
push
and
inc
sub
and
and
lcall
dec
dec
in
push
cmpsl
and
xchg
lock
jo
jg
xor
xchg
mov
cmp
pop
jae
shlb
dec
add
cmp
adc
aas
hlt
and
push
sbb
add
adc
cmpsb
mov
add
pop
xchg
enter
inc
sbb
lods
cmp
rcr
pusha
not
mov
xchg
add
es
inc
inc
pop
sub
mov
push
jae
push
repz
mov
push
jo
pop
ret
xchg
push
push
xchg
pop
and
or
sub
imul
sub
ds
or
push
lods
mov
divb
sbbl
scas
cmc
mov
push
mov
mov
adc
add
sub
pmaxub
orl
or
jno
push
mov
sub
or
adcb
and
outsl
and
pop
pop
and
xor
mov
lock
jns
ret
add
adc
dec
popl
lods
outsl
sbb
jp
aad
insb
pop
pushf
int3
stos
mov
or
sub
adc
xor
daa
mov
pop
in
xor
mov
add
aad
jecxz
cld
int3
lea
fwait
jns
stos
int3
ss
call
xchg
pop
bound
or
cmp
movsb
fdivrl
loopne
mov
push
and
das
jno
scas
sbb
rcrl
and
sub
repnz
incb
xor
mov
mov
imul
dec
xchg
hlt
sbb
sahf
cld
mov
cmp
daa
cmc
loop
outsb
mov
mov
cmp
lret
cli
inc
and
and
rclb
imul
jl
mov
cmp
sbb
xor
insb
int3
das
cmp
jmp
sti
lret
insl
push
inc
adc
inc
cmpsl
outsb
loope
xchg
inc
jae
mov
mov
and
xchg
into
pusha
sub
jno
and
lds
xchg
mov
data16
js
movsb
cmp
and
loopne
lds
int3
lods
bound
add
jl
lahf
in
subb
cmp
sbbl
lahf
stc
sarb
inc
cmovge
lds
rcrb
cmp
xchg
jp
and
pop
sub
das
mov
mov
push
shl
jae
cmpsl
test
cmp
jbe
sbbb
das
mov
dec
fbstp
inc
adc
push
sub
push
add
and
ret
lret
sub
push
fmull
insl
pop
lret
xchg
xchg
mov
mov
push
add
xchg
sub
addr16
rcrl
adc
ret
mov
cmp
or
or
push
mov
pop
push
mov
lret
inc
jns
xlat
mov
sbb
add
xor
call
and
icebp
scas
and
and
xchg
mov
hlt
test
jno
mov
orl
xor
and
icebp
lds
fsubrs
adc
scas
jmp
cmp
roll
icebp
int
mov
iret
stos
xchg
rorl
mov
add
sub
mov
loope
call
jp
scas
inc
fwait
xchg
and
fnstsw
pop
cmpl
xchg
stos
aad
loope
ds
pushf
cs
pop
addr16
mov
mov
cmp
cmp
jbe
and
mov
ds
repz
call
data16
scas
mov
cmp
pop
mov
aas
and
sbb
or
jae
and
cmp
cmp
insb
out
xchg
aam
icebp
in
ja
xchg
cmpsb
cmpb
pop
cmp
cmc
imul
in
fcomp
mov
out
leave
or
sti
xor
adc
xchg
in
loope
xor
imul
mov
push
pop
shlb
cmp
repnz
inc
sarl
adc
out
mov
pop
shlb
jge
mov
mov
xchg
mov
dec
imul
add
push
out
xchg
out
cs
out
sbb
mov
pop
cmp
push
mov
sbb
clc
out
xchg
or
xor
push
push
dec
cwtl
outsb
jg
mov
out
popa
pushf
pop
pusha
push
aam
push
inc
fdiv
popa
sub
pop
jg
adc
mov
cmpsl
leave
jg
add
test
cmp
sub
jmp
and
cmp
loop
test
inc
mov
sub
cmpl
ret
dec
sub
jae
xchg
push
imul
out
in
dec
mov
test
les
aam
arpl
sub
sub
push
push
mov
push
arpl
imul
aas
mov
aad
add
cli
inc
xor
pusha
sbb
mov
es
roll
sbb
lahf
and
inc
fbld
xor
dec
sbb
test
xor
mov
and
mov
or
repnz
insb
imul
les
in
jle
pop
push
int
push
lret
xchg
ret
enter
add
cwtl
sti
xlat
inc
fistpll
test
xor
pop
loopne
mov
jnp
aaa
movsb
sub
jecxz
or
pusha
pushf
cli
stos
inc
fsubp
in
mov
addb
stc
repz
rorb
cld
push
add
push
dec
pop
rclb
aam
aad
jle
and
adc
mov
push
ficoml
aaa
pop
xlat
lret
out
add
daa
mov
xchg
js
fwait
cmpsl
in
dec
jae
cmpsb
aaa
sbb
jg
pop
mov
imul
mov
mov
flds
gs
jne
sub
test
je
lret
inc
adc
divl
cmp
cmc
ret
pusha
xor
pushf
insb
push
mov
fcompl
lcall
jae
adc
jno
sbb
pusha
hlt
xchg
nop
fs
lahf
out
jecxz
cmp
jecxz
xor
jp
scas
inc
pop
or
lahf
jmp
shlb
imulb
les
dec
aaa
cld
ds
imul
ret
cs
jno
dec
inc
mov
stos
imul
cmp
cmp
xchg
add
inc
orl
ja
in
pop
mov
incb
push
popf
mov
lods
or
loopne
sbb
mov
adc
cwtl
jno
jge
sbb
add
adc
jecxz
mov
sub
rcrb
std
testl
pop
pop
xchg
mov
addl
roll
bound
jmp
xor
jnp
jp,pt
push
in
xor
int3
push
mov
int3
cmpsl
test
fisttps
vpcmpgtd
aam
sbb
roll
loop
add
and
ljmp
loop
dec
xchg
or
mov
fadd
push
mov
in
xor
std
pop
push
lock
mov
aas
xchg
clc
push
in
mov
aas
fstl
mov
mov
push
mov
sub
add
loope
mov
sub
cmpsb
inc
jnp
mov
inc
cltd
scas
hlt
lds
shlb
jns
mov
mov
loopne
dec
aam
mov
loope
push
mov
shll
xor
dec
jns
mov
pop
cld
jmp
mov
push
add
xor
adc
dec
stos
daa
sbb
out
jae
test
mov
dec
lret
jns
sarb
jg
in
cmpsl
mov
mov
jo
dec
adc
shl
lds
lcall
out
xchg
or
dec
imul
cmp
pop
mov
lret
stos
fsub
pop
sti
sub
add
push
sub
inc
ret
xchg
mov
fmull
adc
je
cmp
mov
cbtw
jg
shll
sahf
lods
mov
and
xor
lds
loopne
sti
xchg
add
dec
mov
les
sbb
sti
adc
or
nop
imul
mov
jmp
jns
cmp
inc
xchg
ljmp
mov
mov
push
jp
add
pop
push
test
or
and
lods
or
out
xor
inc
xor
mov
arpl
xor
fs
es
lock
jno
aas
sbb
in
loop
mov
les
mov
sarl
jmp
and
fwait
repnz
daa
lea
or
lds
fsts
xor
or
paddsw
mov
data16
int3
out
out
fsubrs
cmp
insb
icebp
mov
inc
loopne
sbb
inc
mov
movsl
insb
mov
aad
scas
dec
cs
jo
pop
inc
pop
pop
imul
sysexit
jb
adc
xchg
arpl
dec
mov
movl
hlt
xchg
or
je
mov
clc
fwait
jecxz
sub
loopne
push
lahf
imul
pushf
push
fists
test
loopne
push
pop
pop
sub
jne
insl
or
hlt
aas
out
leave
push
jg
ret
lods
or
and
sub
or
push
push
xor
mov
xchg
clc
jnp
icebp
sarb
stos
cld
cmp
jne
pop
aas
push
push
xchg
cmpsl
jp
mov
cld
in
icebp
xchg
idivb
dec
xchg
mov
inc
clc
add
roll
ds
jg
sbb
scas
pop
cmpsl
mov
out
sahf
les
cld
mov
xor
or
ret
lret
in
out
xchg
jno
das
mov
inc
sti
aaa
aad
xor
sbb
mov
push
mov
repnz
jno
mov
inc
std
cli
push
xchg
inc
imul
add
shrl
xor
sbb
lcall
xchg
jo
xor
sbb
adcb
scas
clc
cli
push
inc
sbb
lds
inc
clc
loop
cltd
mov
int3
pop
jno
sbb
cli
lret
out
push
jmp
pop
jmp
cmpb
lret
push
jbe
jl
imul
rclb
imul
fstp
scas
jne
loop
inc
add
pop
push
fdiv
lret
mov
nop
xchg
add
