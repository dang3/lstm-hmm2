std
mov
in
add
imul
mov
imul
pop
add
sub
mov
mov
outsl
mov
clc
push
adc
add
or
or
idivl
sub
movl
mov
xor
in
in
pop
sbb
add
mov
lret
or
sub
imul
cmp
idivb
cmp
bswap
add
cmp
mov
arpl
aas
sub
mov
mov
add
pop
add
sub
mov
push
sub
mov
testb
mov
cli
adc
or
call
leave
add
mov
repnz
adc
push
into
mov
sub
add
mov
pop
mov
fbstp
add
mov
pop
insb
mov
sahf
and
aad
arpl
sti
pop
imul
mov
ljmp
adc
imul
add
jmp
push
pop
mov
ret
adc
mov
test
je
add
add
into
pop
pop
add
rclb
or
lods
jge
add
pop
rorb
das
or
lock
mov
inc
lcall
mov
fistpl
or
imul
mov
push
mov
add
mov
ret
leave
mov
loopne
pop
or
mov
adc
sub
sub
fsubrl
mov
add
or
jmp
std
cld
inc
cs
cmp
cmp
add
into
or
ret
mov
pop
or
cmp
dec
rolb
fcmovnbe
sbb
movsl
sbb
sbb
lods
lds
xchg
lods
add
ret
lock
cmp
icebp
mov
ffreep
ret
mov
insb
into
out
out
xor
or
rclb
or
sbb
inc
sti
or
mov
sub
flds
or
jle
mov
lret
mov
shrb
shrl
cmp
adc
or
add
mov
popa
imul
das
add
adc
insl
pop
cmp
nopl
xchg
mov
into
outsl
mov
movsl
adc
xchg
mov
imul
ret
or
in
xor
pop
in
xchg
mov
insb
test
sbb
or
mov
negb
lret
shr
sbb
add
fmull
ret
or
mov
leave
or
lahf
mov
sbb
shlb
cli
adc
ret
data16
inc
adc
movsl
inc
popa
jnp
ljmp
mov
mov
xor
imul
fisttps
sti
data16
xchg
call
ljmp
or
sbb
int
push
cld
ret
pop
js
cmp
sbb
ret
mov
ret
mov
int
leave
mov
xor
push
aaa
and
fldt
add
mov
fcoms
mov
mov
mov
dec
seto
sub
call
scas
cld
jbe
mov
mov
cltd
call
rcr
dec
shrl
pop
mov
enter
sbb
push
and
mov
push
clc
add
fwait
arpl
clc
sbb
inc
call
jmp
mov
pop
andl
rorb
or
aad
adc
pop
add
ret
sbb
jmp
decl
jle,pt
dec
fisubrs
xor
in
insb
sbb
adc
sub
je
aam
sbb
mov
insb
fldl
mov
sti
lds
mov
and
sbb
mov
mov
xor
add
test
stos
icebp
pushf
clc
adc
mov
cmp
ljmp
sbb
or
dec
xchg
push
adc
mov
sbb
rolb
lahf
xchg
pop
xlat
cltd
out
adc
mov
jle
lock
xor
or
sbb
or
lods
push
push
lahf
into
mov
pop
out
adc
mov
stos
loope
mov
add
mov
or
mov
sbb
mov
mov
adc
and
in
xor
mov
add
add
mov
xchg
pop
inc
in
jno
or
mov
ljmp
xor
pop
rcrb
adc
sbb
adc
sbb
jnp
mov
stc
push
dec
leave
and
mov
or
cs
add
hlt
aam
dec
out
dec
shlb
shll
sar
or
pop
sub
fisttpl
adc
rolb
inc
add
inc
add
inc
sar
adc
pop
ret
xor
push
push
pop
outsb
xor
int
add
jl
scas
insl
fistpl
dec
adc
add
jmp
xor
aas
lock
clc
or
push
pop
fisttpl
sbb
sub
or
roll
push
rorl
or
repz
pop
ljmp
fsub
adc
outsb
into
lock
pop
push
push
mov
popa
adc
push
cli
or
cmp
mov
inc
fisubs
loope
pop
pop
jnp
icebp
mov
lock
mov
mov
in
cwtl
jo
fwait
hlt
mov
pop
mov
sbb
jbe
sub
mov
xlat
add
mov
sarb
pop
push
add
or
mov
adc
sbb
js
loope
mov
jns
xchg
xor
jl
adc
jecxz
add
leave
jo
mov
or
ret
out
mov
fsts
cmpb
pop
and
aaa
lock
push
push
lock
xor
dec
enter
int
xor
add
sub
or
push
or
mov
xor
clc
xchg
repz
pop
insb
sbbl
jbe
xor
inc
xchg
test
leave
adc
leave
inc
rol
das
fwait
inc
bound
es
lahf
xor
aam
sub
sbb
stc
xchg
add
or
rclb
fwait
imul
add
and
test
in
fisttpl
cmc
pushf
inc
popa
jae
cmpsb
minps
pop
out
sub
pop
xorl
rol
push
cmp
cmpsl
int
pop
inc
mov
test
add
pop
popf
es
mov
fmuls
push
enter
mov
adc
sbb
xor
jo
xor
stos
aad
add
outsl
out
sbb
or
jno
pop
mov
pop
hlt
mov
inc
pop
fcomps
pop
and
int
mov
inc
adc
add
xchg
in
add
fistpl
xor
sbb
cmp
adc
inc
mov
ret
jle
cmp
fistl
je
jmp
scas
jl
shlb
pop
or
shll
xor
or
insl
call
ljmp
aaa
stos
sub
or
push
loope
std
arpl
shll
movsb
adc
les
mov
fidivrl
fcomp
into
push
lock
rcll
pop
pop
pop
stc
add
fs
lcall
test
sahf
dec
mov
les
ja
jmp
xor
popa
test
ljmp
cmpsb
fidivrs
xchg
bound
jbe
xchg
or
daa
rclb
mov
push
ret
push
es
and
mov
jae
ds
sti
movsb
es
rcrl
adc
hlt
add
addl
in
sbb
adc
xchg
aaa
jmp
or
decb
push
jo
mov
dec
outsb
or
inc
lock
sub
sbb
insb
push
cmpsl
dec
ljmp
imul
addr16
sbb
je
sbb
loope
mov
push
or
insb
scas
dec
mov
adc
or
aad
dec
sub
leave
int3
inc
pop
testl
popa
mov
mov
insl
adc
or
xchg
mov
inc
cmp
mov
or
jge
or
leave
or
pop
mov
xor
jnp
leave
in
enter
int
int
mov
out
add
shr
enter
mov
xchg
mov
xor
imul
mov
shll
adc
psllw
jnp
mov
mov
dec
lret
adc
mov
pop
adc
xor
dec
push
pop
mov
dec
mov
sbb
mulb
lret
xorl
arpl
test
push
jne
adc
rolb
ja
and
hlt
subl
push
movsb
xchg
mov
push
movsl
push
imul
mulb
bound
xorb
mov
mov
add
jae
mov
in
mov
rcl
xchg
sub
popf
into
lret
sub
add
mov
psubw
pusha
jbe
cmp
push
mov
out
add
cmp
rolb
mov
xor
icebp
cmp
push
adc
outsl
jo
cmp
pop
ret
inc
jmp
sub
inc
int3
mov
fimull
sub
sub
cmp
mov
leave
xor
pop
mov
movsb
adc
mov
enter
adc
lea
out
pop
sbb
adc
adc
repz
push
adc
stc
push
add
inc
cmp
sub
mov
lcall
inc
scas
mov
adc
lgs
sbb
aaa
call
mov
insb
ja
ljmp
or
jns
adc
std
imul
or
shl
add
xor
adc
rcrl
add
cmp
push
call
movsb
jp
adc
nop
xor
or
and
test
push
clc
lcall
inc
push
pop
or
push
jo
movb
cmp
cmp
not
fcomip
pop
push
lcall
add
xor
push
mov
mov
movlps
push
fdivl
lret
sub
js
jnp
lods
mov
icebp
ret
mov
push
push
inc
shlb
loopne
jp
out
add
fld
in
push
jl
out
mulb
lock
out
mov
inc
push
fs
xchg
rorl
push
adc
lock
inc
sub
in
jbe
fldt
cmpl
cmp
cmpsl
xlat
jbe
nop
sub
add
sbb
sbb
sbb
adc
lcall
adc
call
jmp
je
xchg
jnp
lret
call
das
cmp
mov
sbb
pop
insb
shll
adc
mov
fucomip
mov
cs
lret
or
clc
ja
adc
push
adc
inc
enter
jo
push
fwait
or
or
bound
sub
inc
push
and
push
aas
push
xor
or
add
sarl
mov
stos
sbb
cmp
cmp
shrl
daa
xchg
push
movsl
or
inc
call
push
pop
cmp
sub
jecxz
mov
loope
xchg
shll
mov
shr
xor
or
xor
push
fs
inc
mov
insb
stos
enter
xor
pop
push
push
sarb
push
mov
je
or
sbb
rorb
pop
xor
jg
cltd
push
mov
orl
fcomps
out
ret
add
push
add
aam
sbb
mov
pop
cmpsb
adc
rclb
mov
adc
subb
sub
xor
cmc
lret
leave
in
adc
int
fldt
lock
lahf
sbb
xlat
aad
loope
lods
fcmovbe
cmp
scas
ss
cmp
push
pop
cwtl
ljmp
lods
mov
sarb
mov
jl
mov
fwait
xchg
adc
jl
scas
rorl
xchg
test
mov
cmpsb
push
mov
add
push
xchg
push
cltd
or
ret
in
or
push
add
ljmp
loop
dec
loope
sbb
push
sub
ret
out
push
cltd
xor
aas
outsl
mov
loopne
cmp
mov
inc
sub
inc
add
pop
cmc
cmc
adc
int
loope
push
add
push
jl
add
xor
push
leave
mov
adc
outsb
jo
fcompl
ljmp
mov
add
sbb
ret
lea
push
rolb
push
xchg
inc
and
dec
add
push
cmovge
jecxz
fs
or
enter
popa
cli
cs
push
sbb
rorb
and
mov
push
adc
clc
rolb
rcll
in
shl
mov
xor
jne
clc
inc
shrb
movsb
lods
push
jmp
arpl
or
mov
hlt
in
out
dec
loopne
scas
and
push
lea
add
sub
push
movsb
leave
push
adcl
mov
mov
add
jbe
dec
and
push
pusha
add
sbb
mov
cmp
sub
popa
inc
in
pop
sbb
add
adc
cs
invd
inc
adcb
popa
orb
frstor
xor
dec
pusha
adc
out
sbb
mov
mov
push
andb
bound
xlat
aad
data16
call
add
shlb
jge
repnz
imul
loope
cs
cs
jns
int3
aaa
pop
jb
or
inc
movsb
xor
cmpsl
es
jae
mov
mov
push
leave
sbb
outsl
sarb
aad
iret
inc
push
sahf
cmp
sub
mov
divb
scas
mov
sti
imul
xchg
inc
sbb
fidivrl
mov
scas
dec
setb
into
inc
or
fcoml
fildl
mov
adc
iret
ljmp
popa
sub
adc
packsswb
or
cmc
fcmovb
clc
rclb
xchg
sub
es
mov
cmp
into
push
icebp
cmp
bound
sbb
fiadds
shlb
mov
mov
psubsb
mov
les
pop
ret
pop
movsl
add
cmp
xor
jo
pop
and
fists
xor
mov
pop
fbld
or
xchg
mov
imul
mov
stos
scas
push
pop
sbb
int
push
in
fdivs
ret
shlb
adc
or
add
push
roll
pop
add
dec
adc
and
sbb
dec
mov
pop
add
adc
adc
rcrb
xchg
loop
inc
inc
pop
movsl
sub
push
movsl
movzwl
sbb
sbb
lds
or
lods
cwtl
push
testb
rorl
adc
roll
mov
mov
insl
add
enter
lret
std
push
shrb
js
mov
imul
pop
mov
lods
inc
pop
ss
scas
dec
aam
pop
mov
mov
pusha
mov
jo
ret
into
call
or
or
fstpl
stos
movzwl
cmp
mov
push
sbbl
stc
cmpsl
aad
mov
push
movsb
adc
push
out
icebp
pop
adc
mov
jo
aam
pop
stos
adc
gs
xchg
notb
je
sub
xchg
shlb
stos
jbe
mov
movsl
push
mov
fadds
sbb
mov
and
mov
pop
dec
push
mov
adc
jl
mov
daa
mov
pop
sub
out
insb
mov
clc
popa
test
xor
pop
cmp
and
inc
out
hlt
mov
xchg
dec
cmp
jge
pop
subl
mov
or
cmp
and
dec
jmp
cmp
sbb
pushf
and
popf
int3
test
inc
push
testb
add
sbb
or
add
roll
jnp
adc
addl
addl
lock
or
je
cmpl
imul
ljmp
add
push
push
mov
lret
pop
scas
js
lods
lret
cli
adc
xchg
cmpl
pushf
jmp
inc
test
ficoms
mov
add
add
adc
mov
push
pop
jae
test
jecxz
sbb
stc
aad
cmp
mov
addr16
dec
push
adc
push
es
pop
and
inc
lock
push
test
push
mov
adc
sbb
mov
sbb
imul
ljmp
mov
inc
fs
pop
mov
bound
ret
sub
js
adc
push
jns
fdivrl
mov
mov
adc
shlb
push
add
test
lcall
mov
ret
inc
and
popf
mov
adcl
sbb
call
ds
push
mov
test
sbb
out
adc
xchg
sahf
int3
inc
inc
gs
push
adc
and
mov
jmp
lret
inc
daa
sub
and
test
adc
ljmp
sbb
mov
mov
and
add
daa
xchg
aad
dec
mov
xor
inc
rolb
loope
rcrl
in
add
pop
lock
cmpsb
sub
call
lods
insl
std
push
scas
xor
leave
movsb
es
or
shll
push
cs
mov
adc
ljmp
jge
mov
add
cmp
add
cltd
and
add
mov
add
sbb
push
inc
adc
lods
xchg
je
jae
lods
or
adc
cmp
sbb
mov
mov
or
add
int
pop
test
lcall
pop
rcll
subb
ljmp
mov
pop
inc
jmp
push
outsb
jb
mov
push
adc
pop
jb
jae
push
mov
enter
push
and
mov
pop
pop
push
ret
inc
push
outsb
movaps
jne
jns
icebp
andb
jno
pop
cmp
sbb
pushf
shlb
push
mov
adc
data16
xchg
jle
mov
fiaddl
addb
add
js
push
mov
test
bound
andb
pushw
cmp
push
out
jo
rorb
popa
mov
jnp
cmp
lret
or
into
je
lahf
shr
mov
xchg
pop
xlat
popf
test
test
sbb
in
adc
mov
rcpps
popa
jae
mov
push
sub
cmp
cli
xchg
mov
mov
jne
into
or
sbb
inc
add
cmp
jmp
mov
jg
xchg
dec
push
push
adc
sbb
jl
adc
adc
stos
int
scas
gs
or
adc
lret
call
push
mov
add
sub
jo
mov
push
and
addl
inc
push
rorl
rolb
mov
les
add
and
push
push
movaps
out
data16
stos
fldl
aas
push
call
inc
rcll
and
and
jp
rclb
xchg
sub
sbb
dec
sbb
jae
es
dec
sbb
add
xchg
dec
daa
vunpckhps
sbb
in
or
repnz
jl
add
mov
jmp
jo,pn
xor
mov
cmp
push
push
push
pop
xchg
xor
out
notl
adcl
in
in
add
jne
ljmp
xchg
jo
sbb
and
daa
push
add
add
xchg
aad
or
push
loope
xor
imul
lea
dec
ficompl
rclb
or
mov
cmc
popa
aad
sbb
les
xor
inc
test
jmp
stc
adc
cli
sub
fnstenv
xlat
jbe
inc
add
or
or
daa
add
dec
sbb
push
mov
xchg
cmp
dec
in
into
testb
push
repz
daa
inc
jge
call
inc
sub
cmpsl
or
jo
push
jge
sbb
leave
xchg
movsl
sbb
pop
sbb
inc
ret
out
out
sub
in
jno
jmp
mov
enter
adc
inc
mov
push
clc
call
addb
push
adc
add
dec
adc
sbb
subb
lods
add
pop
insl
or
pop
mov
or
jo
aas
shlb
push
ja
cli
pop
div
lods
push
push
ja
mov
and
push
aaa
xchg
js
scas
test
out
adc
cli
rorb
loop
add
add
sbb
sarl
rorl
cwtl
test
and
cwtl
jo
push
jo
mov
adc
xor
pop
mov
pop
in
add
ja
cmp
loope
aad
lods
mov
or
jb
add
fs
leave
sarl
jp
psubusb
icebp
cmpsb
dec
adc
push
push
adc
les
in
ljmp
js
pop
mov
or
add
jmp
jg
and
icebp
jno
xlat
or
fadds
mov
ret
cmpsb
fiaddl
addb
daa
ficompl
insl
testl
sub
ja
shrb
push
xor
jmp
mov
fs
scas
movsl
test
mov
adc
cmpsl
ret
mov
cmpb
ret
test
dec
dec
popa
sbb
add
shlb
pushf
std
inc
scas
dec
mov
dec
mov
mov
test
sbb
sub
inc
jae
adc
mov
or
into
cwtl
ret
es
or
cwtl
or
sbb
mov
test
lcall
flds
adc
mov
sub
xor
ss
loopne
xchg
or
add
dec
movhps
mov
or
jg
xchg
sub
fwait
or
lret
inc
cmp
repz
mov
aaa
inc
mov
adc
jne
call
push
jge
call
mov
push
jg
fimull
shr
es
jb
sub
push
into
loop
das
sub
arpl
xorl
add
mov
adc
pop
cmp
push
popf
rol
nop
sbb
xor
dec
jnp
rol
andb
test
sub
push
and
idivl
test
mov
gs
pop
xor
adc
lds
lods
sbb
inc
ljmp
jmp
mov
add
sub
inc
sbb
adc
addb
and
roll
lods
icebp
scas
adc
mov
arpl
aad
aad
xor
enter
pop
push
rorb
lret
nop
xchg
dec
in
shlb
stos
aad
push
inc
loope
sub
or
comiss
mov
sbb
stos
pop
je
gs
into
inc
jne
push
push
push
sub
jo
adcb
jge
pop
cltd
movsl
mov
lret
sbb
jp
jecxz
xor
push
push
addr16
popf
push
mov
or
or
push
push
test
into
int
cwtl
pop
and
mov
lret
jmp
scas
push
or
cmp
rcll
andl
ret
cmc
add
cltd
or
getsec
in
push
or
addr16
int3
pushf
or
adc
adc
or
cmpsl
inc
xor
and
aad
shl
and
inc
test
inc
push
xor
lea
ficoms
push
push
and
inc
xor
rcrb
je
pop
enter
sbb
pop
notb
add
dec
or
testl
cli
push
jne
push
dec
sub
add
shll
fldenv
dec
add
inc
mov
sub
add
sbb
adc
aam
int
and
ret
push
jb
cmp
xorl
cmp
ret
andb
adc
dec
insl
das
cmp
clc
js
or
adc
add
mov
es
and
pop
movsb
add
scas
and
fcom
sub
jb
test
jle
add
lcall
or
add
or
das
mov
inc
jnp
sub
sbb
jno
cmp
fmuls
subb
outsb
push
popa
movsl
pusha
push
xchg
int3
mov
inc
jo
rolb
or
into
cld
push
push
cmp
call
mov
xchg
clc
pop
xchg
ljmp
add
pop
in
cmp
lds
into
cmp
shl
ret
repz
mov
cmp
mov
imul
das
xor
cmp
push
filds
adc
test
ret
inc
loopne
mov
cmp
jne
xor
sub
lahf
out
cmp
jp
mov
mov
adc
push
adc
jp
or
ret
mov
in
lock
xchg
jae
inc
push
shlb
adc
lret
adc
shlb
push
and
mov
and
mov
fsubp
fnstsw
es
les
ljmp
sahf
sbb
push
push
or
pop
inc
lret
adc
and
sbb
das
pop
rcll
lret
adc
push
fimull
inc
xor
push
push
xor
adc
in
or
mov
jo
inc
adc
cmp
lods
testb
add
jne
add
pop
mov
or
adc
es
inc
sub
dec
popf
int3
popa
pusha
push
add
add
push
rolb
cmp
or
pop
mov
iret
add
sub
mov
xchg
out
loop
cmp
or
adc
push
cs
inc
roll
lahf
filds
push
scas
cmp
adc
mov
dec
adc
or
or
xor
popa
jo
clc
inc
cmp
push
inc
mov
and
push
and
inc
movsb
aaa
test
stos
mov
cltd
rclb
mov
addr16
arpl
fwait
push
aas
push
push
push
jne
sbb
jne
jo
and
push
sarb
xchg
icebp
loopne
xchg
add
repnz
xor
xchg
inc
dec
mov
insb
ljmp
or
sub
movsl
xor
cwtl
and
inc
loopne
orl
bound
xchg
sbb
lret
loopne
popf
and
push
cmp
add
jb
in
dec
gs
cmp
jo
cltd
nop
push
sub
add
mov
mov
and
insb
adc
push
jne
or
into
into
push
out
push
mov
jecxz
jnp
cmpsb
loop
add
cs
xchg
push
aas
icebp
xchg
mov
pop
push
xor
cmp
jne
add
mov
in
aam
roll
xor
push
cmp
push
adc
pop
add
frstor
jo
loop
sub
or
push
jne
mov
or
adc
add
or
pop
mov
pop
or
ret
jb
push
push
rclb
ljmp
sub
lret
xchg
imul
jge
mov
int
int
jecxz
push
add
ljmp
stos
inc
cmp
in
xor
enter
movsb
or
pop
dec
cli
pop
orl
test
mov
shll
xor
or
scas
dec
or
imul
fadds
xchg
cmpl
aaa
jp
inc
dec
stos
dec
lds
aaa
inc
aaa
pop
or
shr
les
jmp
xchg
pop
sub
lock
stos
adc
out
ficoml
into
imul
pop
adc
adc
mov
sbb
sahf
adc
arpl
inc
pusha
orb
sbb
inc
aaa
jnp
jp
fadds
lret
movsl
cli
cmp
inc
out
add
adc
adc
pusha
add
call
sub
popa
cmp
or
ljmp
push
pushf
mov
pop
or
xlat
out
clc
call
mov
push
push
in
xor
aam
jg
je
popl
rclb
sub
mov
dec
sti
leave
pushf
mov
enter
mov
or
repnz
testb
adc
out
lock
test
push
xor
push
jae
lret
xchg
and
or
sub
int
xchg
jmp
jno
push
sub
cltd
xor
pop
cli
or
pop
jno
test
icebp
and
enter
dec
xor
push
aam
push
cmp
xchg
shll
mov
cwtl
mov
push
repnz
andl
movsl
push
sub
and
loopne
add
push
sbb
sub
push
cmp
mov
icebp
push
cltd
mov
push
rolb
fiaddl
pop
push
cmpsb
add
lcall
shl
enter
dec
jno
pop
arpl
dec
int
xchg
cltd
dec
mov
mov
adc
cmp
ret
nop
ret
rclb
popf
cmp
add
shll
pop
ficoms
fiadds
push
push
xor
push
or
xor
mov
and
ljmp
mov
cmp
cmp
push
leave
or
clc
outsl
movb
xor
call
loope
imul
push
shlb
arpl
mov
jns
pop
fs
ljmp
and
rcl
adc
push
pop
push
sahf
sbb
and
inc
dec
inc
and
cmpsb
adc
xor
or
ficoml
cltd
out
sbb
movsl
inc
add
popf
aad
adc
sahf
sub
push
cmp
pop
icebp
push
aam
imul
mov
mov
mov
pop
or
rcrb
jne
and
shlb
or
ret
jno
add
pop
or
shrl
inc
push
sub
lret
ljmp
pop
icebp
adc
sub
dec
and
pop
clc
xor
lds
lret
lcall
stos
sbb
mov
nop
in
outsb
mov
test
push
cld
mov
stos
add
mov
scas
and
adc
aad
and
xchg
sbb
push
mov
adc
and
call
xorl
bnd
fmuls
push
jp
mov
shlb
push
push
shrb
ljmp
push
in
fisttpl
adc
and
and
lahf
leave
inc
push
cmp
pop
pop
inc
ret
scas
push
add
ret
mov
push
pop
or
adcb
pushf
or
sbb
xchg
leave
mov
push
aad
adc
inc
lcall
test
rorb
add
adc
mov
cmp
test
or
mov
sub
cmp
mov
cmp
daa
in
into
mov
imul
dec
adc
or
repnz
push
loopne
adc
dec
vorps
or
xchg
cmp
cmp
lret
or
mov
testl
sbb
orb
iret
mov
mov
sarl
or
push
mov
insl
stc
push
fisttpl
mov
add
mov
jnp
xchg
or
insl
popa
nop
jo
int
adc
scas
and
cmc
stc
add
xor
idivb
leave
xlat
jg
xor
dec
push
out
jle
mov
and
xchg
ret
icebp
xchg
popa
out
jl
xchg
rcrb
xchg
adc
fidivrl
loopne
and
std
lret
add
or
push
fcomp
test
stc
cmp
push
daa
pop
lods
cmpsl
mov
nop
lret
int3
or
push
divb
test
pop
or
repz
push
mov
sub
test
pop
mov
es
inc
js
pop
and
ret
enter
shll
rcll
std
rorl
pop
or
mov
std
inc
bound
sbb
scas
lret
call
mov
hlt
loopne
pop
stos
nop
xor
jbe
or
xchg
pop
std
sbb
dec
popf
jne
std
cli
adc
and
arpl
or
aam
lret
icebp
cld
add
adc
dec
xchg
pop
xchg
pusha
xor
inc
mov
mov
roll
shlb
inc
lock
jo
les
insl
mov
jnp
push
lods
cmc
push
push
faddl
cwtl
sub
inc
pop
mov
jle
mov
push
dec
shll
in
cmpsl
loope
inc
lret
mov
cs
adc
or
icebp
test
es
push
lret
inc
outsb
iret
or
push
cs
sbb
mov
inc
cmp
mov
test
add
push
pop
faddl
jge
das
insb
inc
adc
loope
iret
adc
mov
adc
fimull
shl
or
out
mov
pop
out
pop
push
dec
fsubrs
rcl
call
lea
xor
sbb
pop
addr16
pop
lods
icebp
xor
rcl
push
dec
push
adc
testl
jmp
jp
inc
push
mov
mov
movsb
call
jo
inc
lret
mov
roll
xchg
pushf
sub
sahf
inc
dec
xchg
adc
add
push
add
sbb
push
pop
das
pop
dec
mov
pop
inc
imul
add
in
rclb
mov
push
jmp
aam
lret
hlt
sbb
cmp
pop
push
ret
pop
sbb
push
mov
inc
push
loopne
mov
mov
pop
fnstcw
mov
mov
mov
adc
xchg
sbbb
es
mov
icebp
subb
test
mov
dec
lret
push
in
adc
stos
pop
sbb
movb
pop
adc
in
add
popf
and
icebp
mov
push
test
ljmpw
out
push
popf
push
push
and
or
xchg
js
sbb
mov
movsl
push
bound
xchg
or
data16
push
addb
shlb
shrl
inc
sub
out
cmp
movsb
ss
rcll
xchg
pop
inc
enter
or
xorl
mov
rclb
sub
fcomp
sbb
ret
pop
int3
sbb
sbbb
mov
xchg
in
stc
faddl
cli
or
sub
out
mov
pop
mov
push
pop
jb
ljmp
xchg
in
add
adc
rcll
addb
jmp
dec
sbb
or
test
fldenv
sbb
lock
mov
leave
mov
in
sub
inc
xorl
adc
popa
ret
add
inc
push
pop
lcall
mov
pop
xorl
or
mov
ficoms
jo
dec
andb
inc
xchg
mov
sbbl
mov
cmp
leave
rcrb
inc
shll
xor
leave
inc
popa
ret
add
lahf
test
mov
pop
xchg
pop
and
in
lods
adc
sbb
or
mov
popa
mov
xor
sbb
insl
xchg
pop
cmp
jne
mov
sub
dec
lret
lods
push
cmp
xor
lea
and
icebp
xchg
test
mov
pop
pop
jno
sbbb
mov
dec
add
or
lret
ret
pop
das
adc
sub
xchg
out
loope
andb
out
popa
xor
scas
push
lods
inc
adc
push
inc
push
inc
stos
arpl
lret
sub
sbb
or
shl
push
xor
inc
cmp
adc
mov
mov
shrl
adc
and
push
xor
aas
cmp
cmpsb
les
sbb
adc
rolb
mov
lret
cmp
divl
test
rclb
push
ret
ret
push
outsl
cli
shrb
push
xor
jp
xlat
add
sub
lret
lock
jb
mov
in
xor
xor
pop
aam
popa
add
pop
jne
in
out
pop
bound
xchg
push
or
pop
add
push
sub
mov
jle
out
adc
sbb
cmc
pop
lret
in
pop
push
dec
sbb
sub
cmp
or
jnp
mov
js
sbb
rcl
push
pop
cld
leave
roll
test
aas
andb
call
fwait
int
hlt
ror
sbb
xchg
or
pop
call
mov
insb
push
insb
pop
adc
xchg
or
adc
je
push
mov
mov
ret
cmp
std
jge
or
test
fisttpl
cmc
jo
adc
mov
rclb
call
sbb
adc
sub
inc
or
jnp
and
sub
enter
or
lea
xor
cmp
enter
iret
pop
mov
movsb
push
leave
inc
xchg
push
xor
add
add
aaa
sub
sub
rcrb
xchg
sub
inc
inc
lods
popa
pop
mov
adc
sbb
adc
ja
xchg
or
pop
aam
stos
ja
mov
mov
call
call
into
rorb
dec
mov
xor
push
shll
xchg
test
inc
lods
daa
jb
int3
rcl
orb
pop
ret
and
incb
push
addr16
clc
inc
aam
push
mov
mov
js
bound
les
je
adc
leave
or
dec
inc
add
push
cs
mov
xlat
dec
sarl
test
sbb
out
mov
or
mov
aam
in
sub
ss
adc
out
enter
add
jne
movsl
rolb
cmp
jmp
call
xchg
xor
adc
hlt
xor
or
std
adc
sub
add
add
push
popa
jb
nop
repnz
mov
lds
push
ret
inc
test
add
data16
xor
cmp
push
js
pop
outsl
rorl
mov
cmp
push
mov
lods
xor
lds
fs
mov
or
rolb
push
orl
shlb
jo
test
xor
lds
push
pop
jge
sub
repnz
call
js
mov
mov
insb
mov
push
push
sub
dec
insl
xchg
push
in
adc
pcmpgtw
mov
outsb
push
aaa
fcmovbe
xchg
roll
test
add
mov
lret
loop
sbb
call
mov
push
mov
hlt
dec
push
and
jmp
xor
or
sub
aam
cld
fsubl
test
mov
cwtl
push
add
jge
sbb
dec
mov
or
scas
sub
inc
xor
or
mov
shlb
cmpsb
add
mov
push
test
sbb
and
mov
or
hlt
push
or
ret
lahf
sbb
xchg
mov
mov
stos
adc
sub
xor
call
les
pusha
add
or
fisubrl
dec
aam
insl
push
jle
xor
jb
add
jbe
jb
dec
push
add
push
fisubrl
mov
or
bound
pop
or
sbb
add
cmp
repnz
enter
pop
pushf
xchg
xor
adc
clc
push
push
xor
pop
dec
mov
push
dec
xchg
clc
or
or
mov
ret
pop
fs
mov
cmp
or
ret
notl
insb
mov
pop
and
sbb
push
scas
pop
std
call
xor
adc
cli
ljmp
pop
xchg
rorb
bound
ljmp
add
xchg
pop
and
loop
sbb
or
xchg
add
mov
xor
or
mov
push
rclb
lock
dec
test
lock
lret
xor
add
loope
js
inc
sbb
fldl
mov
add
push
add
xor
or
iret
add
enter
sbb
or
or
pop
mov
sbb
sub
in
or
xchg
fldt
lea
jmp
fcomps
mov
mov
insb
mov
mov
cmp
cmp
sahf
adc
sahf
divps
push
push
add
loopne
mov
test
inc
sbb
push
or
push
xor
shll
sub
xchg
aad
xchg
mov
rclb
pop
pop
xor
push
mov
mulb
jne
hlt
lcall
popa
fadds
in
scas
fidivl
inc
rcr
sbb
or
add
out
xlat
call
popa
shrb
arpl
xchg
or
dec
mov
push
nop
add
add
mov
pop
lods
cmp
jo
push
mov
cmp
lcall
push
lods
mov
sarb
sbb
sub
pop
or
xchg
pusha
and
or
hlt
adc
push
mov
in
or
sub
inc
pop
cmp
jle
cmp
cmp
push
dec
add
mov
or
add
dec
shrl
insb
testb
jo
sub
inc
and
jg
sub
imul
push
and
cmp
pop
shr
aam
or
inc
ror
loop
mov
push
test
and
add
sub
xchg
cmp
mov
xchg
subb
pop
pop
call
xor
imul
test
jo
adc
cmp
mov
add
jge
adc
fsts
push
in
addb
push
loopne
mov
lods
and
stc
cmp
mov
ret
sbb
data16
call
add
cmp
cmp
adc
mov
lcall
jmp
add
popa
int
lret
push
rcrb
inc
sbb
add
adc
push
cmp
shlb
fldl
push
adc
pop
rcrb
xchg
iret
or
out
mov
cltd
icebp
cmp
or
push
push
nop
or
pop
das
xchg
loopne
lods
ss
pop
pop
into
mov
dec
int
pusha
sbb
jae
sub
into
push
rcrb
stos
dec
in
or
icebp
dec
nop
lret
adc
pushf
xchg
adc
ret
inc
clc
ret
or
movsl
push
xor
imul
jbe
push
mov
lock
jge
push
shrb
dec
data16
push
sub
dec
jno
pop
or
xchg
ds
lods
loopne
adcl
dec
cmovge
cmp
mov
mov
decb
arpl
mov
or
sub
add
mov
lds
mov
sbb
sahf
cmp
jb
push
push
jecxz
sbbl
xor
mov
or
sub
cmp
sbb
sbb
cmc
mov
daa
test
or
jl
rcr
jmp
mov
xor
lock
imul
scas
sub
gs
cli
fimull
xchg
leave
add
adc
movl
mov
pop
jae
xchg
lret
loope
cli
decb
rol
and
aaa
shrb
or
push
cwtl
roll
js
shr
sbb
daa
inc
sbb
mov
xor
scas
sbb
pusha
xchg
xchg
fcompl
or
push
repnz
pop
push
jo
icebp
lret
cmp
pop
faddl
push
push
cmp
dec
push
pop
add
push
mov
mov
sub
cmp
sbb
dec
push
jo
inc
pop
ficoms
aad
inc
inc
fcomip
push
xchg
test
pop
loop
out
jmp
mov
jbe
inc
ret
mov
sub
mov
cmp
xorb
lret
pop
dec
add
sbb
inc
sbb
ficoml
or
push
lods
sbb
push
push
lods
push
mov
push
push
int3
lods
orb
mov
into
sti
add
jo
ds
shlb
cmp
add
add
or
push
loopne
push
popf
sub
inc
mov
xchg
fs
cmp
js
shrl
cmp
mov
adc
scas
lcall
in
popa
push
adc
mov
xor
mov
cmc
stc
or
or
and
fcoml
shl
mov
adc
inc
out
mov
xor
push
inc
add
adc
cmpsl
rol
lds
movb
push
xor
orl
aas
inc
xor
inc
les
sbb
mov
jb
sub
adc
mov
push
scas
pop
lock
stc
or
mov
or
adc
cmp
add
pop
or
sub
inc
insb
into
faddl
ret
mov
roll
imul
sbb
loop
int
add
ret
nop
aam
pop
sbb
xchg
sbb
rorb
sbbl
bswap
ret
rclb
adc
xchg
and
mov
data16
imul
sub
repnz
add
inc
pop
mov
mov
lcall
inc
mov
jo
dec
push
iret
into
fcoms
incb
popa
stc
add
pushf
dec
adc
test
sub
push
jg
cwtl
push
inc
or
pop
lea
imul
xor
or
rcrb
dec
pop
aam
adcl
rorl
in
add
lea
xchg
sbb
lods
push
cmpb
into
inc
daa
sarl
mov
adc
and
shll
mov
rclb
repnz
push
dec
sahf
or
cmp
push
xorl
mov
sub
push
pushf
scas
adc
xor
mov
jno
sbb
sub
add
adc
or
mov
mov
into
add
sub
and
popa
pop
mov
mov
or
stc
mov
or
fwait
xchg
inc
push
andb
loop
cld
mov
or
cmp
sbb
in
adc
mov
out
lock
rcll
loope
adc
rolb
sub
mov
jno
add
rorl
pop
pop
sub
pop
push
or
xchg
fcoms
or
in
sub
push
cwtl
push
inc
and
mov
rclb
push
cli
pop
ja
xor
inc
orl
push
xchg
out
xchg
push
mov
jbe
push
push
das
shlb
cmp
mov
xchg
repnz
ret
push
mov
out
mov
and
sub
dec
inc
movsb
enter
adc
cmp
dec
insl
cmp
das
inc
cmpsb
push
and
cmp
or
and
push
inc
sti
dec
cmpsb
repnz
push
push
xor
cmp
mov
sbb
xor
push
xor
pop
inc
stos
push
jo
inc
inc
ss
add
lret
xor
cmp
pop
cli
mov
lret
adc
lret
mov
je
mov
hlt
stc
add
push
sub
stc
lcall
stos
or
push
lret
and
and
lcall
popa
ret
mov
dec
and
adc
outsb
or
adc
test
andb
loopne
xchg
fistpl
add
xchg
adc
fimull
jmp
roll
push
pusha
roll
sar
adc
pop
and
sub
sbb
sbb
jmp
and
add
pop
mov
loopne
push
dec
sub
mov
pop
lcall
cmp
popa
out
and
repnz
push
int3
push
je
inc
add
rorb
cli
insl
or
cmp
push
add
cmp
xchg
sub
sbb
mov
test
push
in
aam
roll
cld
ret
lret
or
ror
xchg
push
xor
inc
xor
sbb
scas
call
add
gs
dec
add
lock
mov
sbb
shll
imul
out
push
or
lret
add
loopne
inc
movsl
shl
pushf
xorl
push
xlat
xchg
inc
sbb
loop
into
xchg
and
subb
psubd
sbb
imul
cmpsl
push
pop
sbb
cmp
in
inc
test
fs
push
jae
push
xor
sbb
pop
popa
inc
loop
cmp
push
mov
filds
or
sti
bound
adc
fidivs
lret
enter
mov
pop
out
adc
lret
sbb
push
mov
sahf
mov
mov
xchg
mov
clc
dec
leave
leave
or
or
outsl
add
pop
or
mov
and
pop
push
inc
cmp
adc
add
xor
sub
and
rcrl
xchg
and
sbb
out
aad
sbb
shlb
inc
iret
push
cmpl
rol
das
mov
fdivrs
jne
sbb
aad
hlt
imul
and
adc
adc
jb
cmp
cmp
aam
and
mov
jle
inc
punpckhdq
clc
or
or
dec
clc
xor
mov
push
mov
sub
int
add
mov
xor
leave
and
lds
sbb
pop
int
cmp
ljmp
negl
dec
xor
xor
ss
sbb
push
pop
sbb
or
ds
or
adc
xchg
data16
inc
mov
rep
push
dec
cmp
sub
ds
and
push
pushf
push
lock
shlb
mov
cmpl
ret
push
mov
xor
addb
loop
inc
xor
xor
cmpsb
filds
cmp
mov
push
scas
jnp
adc
push
ret
in
arpl
loopne
cmpsb
or
add
insl
sbb
mov
lret
sar
lea
les
lds
mov
cltd
mov
mov
sub
es
sbb
adc
dec
pop
jnp
jle
loopne
xor
xchg
sbb
mov
mov
enter
or
dec
add
pop
shrl
test
add
out
or
call
jnp
nop
call
push
sbb
scas
icebp
stc
push
sti
outsl
mov
jl
rolb
outsb
adc
stos
nop
jle
nop
imul
lods
adc
lea
fwait
imulb
and
mov
pop
adc
cmp
mov
jecxz
je
movups
xchg
push
mulb
je
add
dec
repnz
sbb
cld
adc
ret
daa
dec
lods
add
fisubrl
call
js,pn
ret
fiadds
out
std
mov
dec
das
mov
in
jl
imul
xchg
dec
sbbb
ljmp
or
fcmovnbe
pop
or
stc
ret
mov
outsl
ret
test
imul
mov
mov
or
cmp
flds
xorl
pop
or
jo
xor
inc
push
test
imul
ljmp
add
adcb
and
push
mov
shll
push
pushf
jo
mov
int
dec
xor
push
jnp
pop
loopne
rolb
std
mov
insb
sub
ret
punpckhbw
pop
lret
push
lock
adc
pushf
decb
inc
xchg
call
std
push
push
cmc
add
stos
sbb
add
xor
pop
jno
ss
mov
clc
or
jbe
sub
js
test
dec
insb
add
pop
lahf
add
adc
lcall
lar
mov
cmpsl
mov
insw
les
hlt
add
sbb
and
inc
sbb
mov
adc
ror
aad
xchg
xor
cmp
aaa
addr16
aas
xor
call
mov
or
or
shlb
inc
sbb
cmp
ret
or
push
sbb
xchg
mov
sbb
jp
sub
push
test
push
mov
mov
mov
mov
mov
or
aaa
repz
iret
pop
in
ret
leave
sbb
loopne
test
or
and
fisttpl
push
sti
imul
inc
mov
and
push
push
sub
add
inc
jae
repnz
cmp
stos
adc
jmp
call
stos
mov
push
push
dec
aaa
stos
pop
push
pop
add
or
mov
mov
test
pop
fsubs
xor
cli
leave
pop
pusha
je
les
push
popa
and
dec
movb
pushw
enter
mov
lret
cmp
aam
add
sub
xor
in
mov
jbe
daa
test
nop
aam
xlat
cmp
iret
icebp
pop
lea
mov
mov
mov
mov
add
push
push
adc
mov
or
orb
lock
add
jle
pop
mov
adc
xlat
add
cmpsl
lret
mov
push
js
leave
loop
or
push
cmp
call
jnp
cmp
mov
pop
or
cltd
bound
lock
add
scas
int
pop
sbb
add
aam
jae
hlt
dec
xor
adc
stos
sbb
mov
adc
mov
leave
ret
jp
insl
cmp
xor
mov
scas
fsubrl
pushf
xor
stc
push
pop
mov
out
adc
addb
idivb
sbb
cmp
shrb
xchg
adc
test
je
dec
sbb
rcpps
ret
or
pop
xchg
sbb
enter
inc
sahf
dec
ret
inc
mov
sub
rcll
popa
shl
fnstsw
add
call
mov
sbb
pop
mov
lcall
adc
xor
mov
push
pop
insb
aad
jo
push
or
adc
add
and
rcl
inc
in
ret
data16
test
loop
je
or
lcall
sbb
push
dec
sbb
adc
mov
pop
xchg
pusha
add
les
je
adc
mov
pop
gs
pop
adc
pop
and
xlat
inc
xchg
test
sbb
loope
mov
rcl
inc
and
inc
out
add
ret
mov
add
inc
mov
daa
adc
or
add
jge
pop
and
js
js
or
adc
or
popa
clc
imul
ljmp
push
sbb
adc
fimuls
xor
xlat
notb
movsl
ret
rcrb
or
lret
add
inc
mov
loop
insb
inc
mov
mov
and
cli
iret
lret
xchg
jae
inc
mov
outsb
ret
adc
sub
andl
sub
mov
leave
push
fisttps
pop
test
or
ficoml
sub
js
push
lods
adc
push
icebp
orl
shrl
jecxz
xor
nop
and
add
sbb
inc
mov
shlb
push
icebp
push
add
sub
inc
jne
mov
sbb
adc
and
lds
mov
loope
or
push
xor
in
mov
jecxz
icebp
mov
lcall
add
mov
js
add
sarb
lods
mov
ret
inc
inc
pop
imul
dec
lret
pop
push
push
mov
cmp
jge
shll
adc
push
cltd
push
popa
add
stc
adc
mov
fldt
sbb
push
popf
rolb
cmp
inc
or
add
pop
out
pop
imul
ret
adc
pop
popa
mov
cmp
xchg
aad
addr16
xchg
jno
cmp
jne
push
cltd
ret
add
and
das
dec
rorl
add
out
mov
inc
and
mov
dec
sub
das
out
or
mov
sbb
sbb
add
lock
push
adc
sarb
movsb
sbb
mov
sbb
lods
aam
jmp
leave
cmpsb
jo
shrb
xor
addr16
push
stos
dec
dec
add
lea
daa
ljmp
fdivl
add
lock
loop
xchg
or
stc
add
jge
sub
rcrl
jecxz
stos
pop
add
xor
xlat
pushf
iret
popa
mov
mov
push
adc
push
mov
orb
and
dec
ret
inc
scas
mov
mov
mov
fndisi(8087
cmp
push
in
add
test
mov
lock
lods
imul
mov
in
mov
xchg
sub
inc
or
xor
inc
popf
das
stc
sbb
mov
push
push
in
adc
iret
testb
aad
leave
add
inc
or
loop
push
cltd
fdivs
mov
enter
mov
push
les
dec
shlb
and
pushf
push
es
sbb
inc
scas
jp
push
mov
add
nop
dec
cs
ret
fcmove
int
mov
icebp
mov
sub
inc
das
int3
push
out
cmp
ret
into
fidivl
sbb
adc
sub
gs
push
adc
in
dec
js
dec
movsl
push
sub
mov
add
mov
enter
cmp
scas
xchg
mov
and
mov
adc
popa
call
pop
enter
push
or
xor
call
mov
or
add
or
add
inc
xor
adc
sbb
push
test
jge
mov
mov
cmp
ja
orb
aam
stc
add
rolb
mov
cmp
push
lock
mov
pop
aad
xchg
push
push
les
bound
sub
mov
mov
rcll
outsl
addr16
fwait
push
xlat
push
add
pop
lahf
add
imul
fisubrs
xor
lds
fisubs
jb
xchg
lret
rorl
and
cli
rclb
xor
test
lret
adc
mov
aam
incb
adc
pop
adc
push
bound
xor
clc
data16
cmp
mov
pop
int
xchg
mov
or
inc
lcall
add
push
push
mov
pop
adc
or
aam
and
and
aam
subb
adc
jb
and
and
xor
bound
test
jecxz
sti
adc
add
cmpsb
mov
inc
mov
xor
or
cmp
shl
scas
bound
ret
das
sbb
dec
push
sbb
into
addr16
cmpl
push
and
or
stos
add
xchg
aam
cs
cmp
pushaw
mov
sbb
pop
push
xadd
int3
jge
and
or
sub
shrb
or
xlat
add
push
fistpll
inc
pop
push
cmp
and
push
lods
cmp
loop
adc
sub
loop
mov
push
xchg
ret
test
imul
sbb
ja
adc
rol
inc
aam
test
sub
loope
pop
adc
js
pop
mov
sub
adc
or
ss
inc
rclb
push
and
sub
dec
sar
adc
inc
or
lret
mov
inc
lret
in
test
sbb
repz
cmc
pop
push
push
jmp
fdivrs
hlt
push
icebp
repz
xlat
adc
scas
mov
and
push
insl
inc
pop
jo
dec
aaa
or
xchg
mov
out
and
lock
ret
sub
mov
and
jno
pop
std
xchg
lret
jbe
pop
pop
adc
cmp
mov
add
ret
shrb
sbb
lret
stos
add
lahf
sbb
imul
mov
inc
xchg
sbb
push
test
rcll
inc
pslld
inc
cmpsb
loop
jbe
or
push
pusha
stos
or
lret
dec
add
and
test
inc
jno
imul
int3
testl
cmp
in
and
out
xor
xlat
inc
cmp
je
add
dec
scas
addb
lock
or
push
xor
mov
insl
shrl
test
adc
aas
push
and
xchg
lcall
inc
jne
pop
push
repnz
add
add
or
push
mov
xor
mov
fistl
mov
xchg
or
and
jmp
add
test
dec
xchg
push
jp
popl
pop
cvtpi2ps
test
ret
inc
mov
lret
push
ret
fildl
sub
inc
mov
or
cmpsb
jb
xor
pop
or
or
mov
and
sbb
rol
lods
bound
cwtl
lods
push
push
pop
hlt
cli
enter
pop
lds
inc
adc
cwtl
notl
fiadds
xor
xor
push
xor
sub
mov
repnz
xlat
bound
into
mov
xchg
inc
scas
or
sti
push
xorb
pop
and
xchg
add
imulb
sbb
stc
cmp
call
lret
or
sbb
jle
out
shrl
cwtl
or
lahf
out
push
jmp
cmp
dec
push
mov
cmp
pop
push
fsubl
les
fdivl
dec
lret
lock
xor
das
xlat
fldenv
adc
ss
jo
ljmp
dec
hlt
mov
movsb
out
cmp
loop
sbb
sbb
popa
adcb
orb
add
push
push
nop
repnz
mov
mov
adc
inc
jae
sub
test
and
mov
adc
int3
push
xor
stos
mov
jb
gs
adcb
movsb
mov
xchg
cmp
push
fmull
and
shrb
sub
ds
pop
xor
inc
mov
sbb
repnz
push
mov
insb
push
dec
orl
add
cmpb
push
decb
jnp
fldcw
adc
icebp
lahf
or
stos
aam
push
outsl
sub
rclb
pop
ret
sbb
pop
orb
inc
dec
sbb
mov
jmp
test
dec
mov
ljmp
rolb
push
enter
or
mov
jp
stos
adc
shr
insl
inc
cs
add
cmpl
sbb
jae
jmp
pop
sysexit
jb
adc
and
push
jae
test
xchg
mov
xchg
xor
or
pushf
mov
insl
pusha
sub
pop
add
outsb
stos
inc
mov
adc
jno
pushf
inc
aam
lahf
cmp
jnp
add
push
dec
push
bnd
les
pop
push
sub
push
add
or
addl
and
and
dec
repnz
enter
push
mov
push
add
loop
pop
pop
cmpsb
mov
repz
lock
sbb
inc
insl
or
xor
push
sbb
add
loop
adc
or
push
adc
into
jo
adc
das
ret
sbbb
push
inc
loopne
add
fnstcw
push
add
es
leave
nop
sbb
mov
sbb
or
xchg
pop
jb
or
mov
lods
inc
inc
adc
rorl
shll
mov
roll
xchg
push
add
push
push
inc
push
in
bound
neg
cmpsb
in
sub
sbb
xor
aad
mov
xorl
push
inc
push
lods
push
cmp
and
push
aam
add
ljmp
out
fisttpl
or
adc
shll
lcall
mov
push
sbb
adc
lret
test
bound
call
or
push
push
mov
jb
cmp
inc
clc
js
and
orb
or
mov
pop
add
add
jmp
jp
mov
lahf
push
jb
push
clc
inc
and
addb
push
mov
inc
notl
test
out
pop
mov
sub
mov
add
or
ror
bound
dec
mov
aam
ljmp
mov
dec
sub
aad
push
enter
dec
loopne
or
pop
inc
movsl
in
mov
aad
inc
pop
je
lods
push
aad
ss
popl
test
cmp
push
mov
add
dec
push
insb
addr16
enter
adc
add
cmp
mov
insb
mov
nop
fisubrs
cmp
push
es
and
xchg
or
or
cmp
loopne
adc
ret
fldl
shr
shll
or
or
fldl
adc
jae
call
repnz
mov
sbb
add
into
arpl
sbb
sbb
lahf
and
cli
mov
and
cwtl
or
mov
adc
and
xor
call
add
ret
adcb
add
inc
jne
rcl
ja
test
pop
inc
mov
sbb
add
inc
lret
xchg
sub
scas
mov
pop
pop
pop
jg
pop
enter
mov
xor
push
push
cmc
hlt
or
xor
pop
mov
cmpsb
iret
add
notb
inc
movsb
jbe
push
push
cltd
or
mov
and
pop
mov
pop
or
rclb
stos
and
scas
sbb
stos
loopne
adc
lahf
xor
push
push
push
test
adc
in
dec
sub
fwait
into
mov
and
imul
adc
push
sub
inc
mov
mov
sub
adc
mov
inc
fcomps
pop
xchg
nop
mov
push
pop
pop
rolb
test
cld
cmc
add
lea
jecxz
and
movsb
cmc
adc
xor
sub
xor
shll
stc
add
mov
cmp
xor
inc
dec
push
sti
cmpsl
lock
rol
fists
aam
pop
shlb
shll
add
lods
xor
push
pop
les
or
sub
cmpb
adc
call
mov
or
push
xchg
xchg
xlat
or
push
sub
mov
push
js
aas
mov
adc
bound
inc
or
pop
or
shrb
push
xchg
add
lcall
icebp
pop
push
jb
mov
xchg
inc
push
or
lods
rcrl
mov
jl
pop
shr
push
ret
adc
xchg
sbb
imul
cmpsl
xchg
xlat
pushf
pusha
ljmp
popf
adc
add
rorb
imul
test
lock
mov
dec
mov
mov
pop
xlat
les
pop
jne
mov
inc
xor
insb
shll
rcrl
mov
sar
cmp
xchg
clc
add
xchg
lcall
fildl
sbb
pop
pusha
sub
add
mov
sbb
push
xor
or
cmp
mov
outsl
or
mov
mov
stos
clc
test
sbb
insl
inc
adc
shrl
je
xchg
push
sbb
lea
int
inc
shl
adc
xor
jl
push
cmp
mov
mov
lock
lock
cmp
inc
mov
mov
push
or
push
icebp
jecxz
notl
adc
aad
adc
enter
cmp
sbb
ds
xchg
lods
fdivs
dec
adc
cmp
mov
loopne
pop
sub
adc
cmp
push
mov
sbb
push
push
sahf
cmp
lock
mov
pop
je
cltd
adc
pop
insb
and
loopne
mov
or
add
shl
aam
test
pop
addb
sbb
sub
jbe
pop
push
in
call
sub
rcl
add
mov
rcrl
sub
lret
dec
sbbl
dec
in
mov
xchg
jnp
pusha
cmp
punpckhdq
lods
xchg
rclw
into
jecxz
lock
pop
push
andb
adc
cmc
js
sarb
ret
or
sub
in
popf
adc
mov
lea
daa
jp
xchg
sub
and
shrb
mov
pop
sub
adc
orb
and
cwtl
push
inc
add
mov
out
add
mov
adc
push
enter
adc
push
mov
mov
lock
cltd
mov
stos
add
sub
cld
ljmp
pop
mov
lret
ds
icebp
lds
adc
jp
imul
add
fsub
and
ret
push
ljmp
xchg
stc
sbb
push
sbb
or
stos
pop
and
pusha
mov
push
rcrb
pop
lock
inc
icebp
rorl
push
mov
pop
aad
xchg
rcl
je
push
xchg
mov
inc
sbb
push
sub
sbb
add
push
mov
mov
sub
enter
pop
cmc
inc
nop
test
aad
mov
dec
mov
inc
stos
test
add
xchg
xor
push
imul
or
je
lret
and
add
push
jns
cmp
xchg
or
pop
test
repnz
repz
test
pop
xchg
add
popa
inc
xor
shrb
popa
sbb
les
jmp
mov
pusha
repnz
mov
jle
cwtl
ja,pn
sbb
addr16
rorb
or
xor
gs
adc
push
and
outsb
adc
mov
je
mov
add
out
mov
adcl
inc
mov
cli
inc
inc
add
xor
add
pop
aad
into
fisubs
mov
or
inc
sbb
mov
fdivrl
xchg
push
pushf
sub
inc
push
shrw
add
pop
add
push
mov
inc
mov
stc
dec
push
add
pop
andl
or
cmp
and
xchg
jl
jno
pop
sbb
call
rcll
shl
sub
push
mov
rclb
adc
dec
aad
sbb
mov
and
mov
outsb
cmova
int3
or
sbbl
xor
inc
pusha
mov
pop
lret
mov
popa
xor
adc
push
int
push
mov
xor
fcmovb
adc
inc
scas
push
mov
ret
or
popf
push
mov
add
dec
pop
mov
mov
dec
sbb
cmp
mov
xor
inc
cmc
sub
hlt
add
sbb
pop
cmpsb
cltd
lret
mov
clc
sub
push
dec
scas
and
leave
adc
movsb
adc
xchg
icebp
adc
loopne
push
das
pop
or
loopne
int3
lret
dec
and
cwtl
xor
dec
mov
add
push
test
in
in
or
inc
jl
push
push
inc
pop
rolb
push
dec
push
push
test
and
or
pop
sub
gs
jg
mov
add
movsl
pop
push
subl
sub
cmp
add
mov
add
pop
push
or
rolb
pop
shl
pop
mov
mov
push
out
adc
lahf
shlb
mov
push
adc
xor
sbb
push
mov
ret
ljmp
mov
aam
xchg
add
jns
rcrb
sbb
popf
pop
mov
fcoml
xlat
jb
test
out
clc
rclb
mov
and
imul
mov
mov
adc
adc
jnp
inc
aam
lock
sbb
loop
push
adc
je
out
or
decb
xor
sbb
mov
into
jecxz
xchg
lods
mov
gs
cmp
inc
sub
loope
ljmp
sbb
xlat
sub
movb
shll
pop
or
je
ljmp
sbb
add
xlat
stos
add
das
mov
jo
push
ret
loop
pop
push
repz
stos
lcall
or
inc
or
sbb
sub
out
adc
push
les
or
xchg
mov
add
sbb
xchg
or
xor
in
push
addb
lods
xchg
adc
daa
sub
sbb
mov
jmp
and
pop
fiadds
aaa
popf
cmp
sbb
rcrb
in
push
and
jmp
xlat
pop
and
repnz
adc
loope
scas
add
add
adc
frstor
arpl
lds
out
stos
shlb
or
test
ljmp
push
push
inc
mov
sub
xor
icebp
outsl
out
rclb
xorl
das
imul
mov
push
pusha
jo
stos
loop
outsb
out
inc
je
add
add
cmovne
out
into
or
and
enter
push
push
cmp
push
and
pusha
repnz
add
in
push
int
enter
bound
jae
push
or
sub
or
push
jae
stos
push
sub
mov
dec
inc
jne
or
out
ljmp
dec
mov
adc
stos
shlb
sub
mov
adc
inc
sub
and
cwtl
sbb
push
icebp
cmp
cmp
jge
out
xor
stos
icebp
or
lds
dec
push
in
jnp
adc
cmp
sbb
cmpsb
es
and
mov
adc
aad
fiaddl
in
push
or
push
lret
pop
add
adc
adc
inc
sbb
cld
or
jecxz
push
push
and
inc
ror
push
sbb
push
mov
push
movb
inc
adc
mov
push
mov
aad
pop
jae
cltd
mov
push
mov
adc
sbb
add
fstps
js
xchg
or
ror
sub
sub
idivb
pop
and
mov
pop
ret
repz
shl
incl
inc
push
rolb
clc
in
imul
inc
push
mov
jo
fmul
adcl
xor
pusha
js
mov
and
push
dec
mov
test
sub
pop
test
add
je
and
pop
push
push
in
cwtl
mov
nop
xchg
call
pop
dec
rolb
mov
in
push
inc
mov
fiadds
rol
or
les
xchg
nop
fs
pop
inc
add
push
dec
adc
cmp
inc
adc
dec
aam
push
add
pusha
sub
xchg
lret
in
pop
test
xor
mov
dec
and
dec
sub
aam
adc
sub
icebp
mov
xchg
push
xor
test
fdiv
adc
inc
rol
mov
pusha
test
push
sbb
pop
pop
leave
mov
inc
loop
inc
test
aam
scas
cmp
or
inc
mov
dec
shrl
cmpsb
push
xor
adcl
mov
rol
push
xchg
adc
dec
cmp
es
aas
ret
inc
popa
stos
push
mov
lcall
lock
imul
rolb
mov
mov
fstpl
bound
pop
stos
popf
rclb
inc
adc
lahf
mov
xor
adc
adc
push
push
or
push
jb
xlat
femms
ljmp
sbbb
sub
orl
and
jne
movb
daa
jmp
add
fmuls
xchg
or
or
jp
inc
sub
sub
or
rclb
shll
aam
test
jns
inc
stos
push
mov
cmp
in
mov
jl
cmc
mov
push
shlb
addl
xor
push
outsl
inc
mov
jmp
in
arpl
sbb
or
ljmp
xor
insl
cmp
lds
rclb
pop
nop
loope
movsb
sbb
fnstsw
adc
test
addb
push
pop
jnp
pop
sbb
fdivrs
ja
test
shll
leave
xchg
popf
out
insl
or
pop
ret
loopne
es
mov
mov
shrl
inc
pop
sub
jnp
adc
cltd
sbb
test
ret
bound
adc
stos
pop
and
jne
xor
popa
clc
sbb
or
adc
das
dec
ja
inc
mov
hlt
rcrl
sahf
or
fsubrl
mov
lock
out
add
mov
shl
xor
loopne
repnz
mov
fisubl
loop
cwtl
ror
test
imul
enter
in
add
or
jnp
push
imul
mov
pop
shrb
push
jp
mov
sub
rcrl
jle
push
cmp
xchg
les
aam
lea
testl
push
mov
jne
xchg
cmp
dec
fs
or
lcall
xor
cmp
push
orb
fs
fcmove
jnp
mov
push
sbbl
or
ret
mov
dec
ror
shl
dec
add
loope
adc
mov
adc
jo
sbb
test
and
shrl
mov
adc
bound
sbb
ja
pop
cmp
dec
push
cmp
push
sti
add
subb
andb
adc
daa
or
push
dec
push
add
scas
leave
push
mov
imul
pop
inc
rclb
xor
jp
push
push
sub
test
loopne
or
push
adc
pop
or
xchg
mov
in
mov
jo
sbb
pop
add
and
popa
leave
cmp
loopne
xchg
xor
push
stos
xor
mov
inc
add
cmpsl
leave
or
lods
or
xor
pop
push
jns
push
stos
push
fidivrl
str
adc
add
mov
mov
pop
push
xor
push
jae
xchg
lcall
mov
scas
dec
lock
add
dec
arpl
loopne
adc
mov
pop
or
js
cmp
and
sbb
and
push
sbb
mov
push
pushf
test
lds
cmp
call
cld
lret
clc
stos
cmpsb
adc
test
pop
mov
sbbl
orl
adc
add
roll
dec
out
lcall
push
sbb
jp
cmp
repnz
flds
test
push
lods
out
shll
subb
mov
ret
in
pop
test
push
or
push
pop
mov
lret
rcrb
inc
int3
cmc
sub
push
push
xchg
push
sub
clc
mov
inc
imulb
add
push
mov
mov
mov
jmp
insl
roll
push
sbb
xadd
mov
adc
dec
mov
xorl
inc
sub
jbe
clc
push
inc
les
mov
fdivrl
add
adc
push
push
push
push
mov
lods
adc
pop
pop
add
pop
lock
sub
jae
add
xlat
sbb
or
adc
leave
jl
jno
clc
scas
repnz
add
mov
mov
mov
adc
clc
mov
xchg
imulb
lret
inc
icebp
jle
test
rcrb
cmp
inc
movsb
adc
cmp
sub
mov
sbb
add
sbb
out
cmpsb
sbb
test
add
movsl
mov
sbb
int3
mov
imul
mov
sbb
push
and
addl
rclb
aam
into
push
or
sbb
jp
pop
out
lahf
rolb
jo
sub
add
and
push
inc
fisttpl
mov
inc
mov
sbb
push
mov
cmp
movl
bound
pop
loopne
xor
push
sub
sbbl
hlt
or
and
inc
sub
scas
mov
sbb
sub
ss
push
adc
cs
inc
push
add
cmpsb
sbb
das
rolb
fadd
sbb
push
mov
push
xor
sbb
inc
xor
push
mov
andb
mov
mov
mov
push
cmp
roll
inc
mov
sub
sbb
ljmp
int
push
aam
shlb
jmp
ret
adc
and
orps
or
addb
lock
add
push
xor
adc
push
cwtl
and
ss
pushf
lahf
inc
jge
aad
jp
push
leave
pop
sub
movsb
xchg
adc
das
sbb
jne
lcall
jae
enter
and
add
and
push
mov
test
jo
ret
insb
pop
push
das
orl
mov
daa
jnp
push
push
mov
es
push
or
mov
nop
decb
test
push
jge
test
and
mov
ret
sub
sbb
add
sbb
mov
icebp
add
scas
scas
or
es
adcb
je
inc
pop
jge
or
add
mov
popa
pop
pusha
mov
sbb
test
movsb
ret
sub
mov
cmp
push
mov
lret
aad
inc
mov
repnz
scas
ljmp
adc
int
imulb
add
add
xor
inc
stc
repz
dec
enter
out
inc
lods
push
arpl
int
xorl
enter
mov
rcl
aas
cwtl
push
cmp
sti
mov
sbb
scas
dec
ret
gs
jmp
cli
fsubl
sbb
xor
data16
test
mov
sbbl
add
mov
jne
ja
pop
adc
inc
adc
mov
xor
lods
pop
xor
ret
mov
rcrl
shll
add
mov
push
stos
and
jno
pop
fisubl
sbb
test
add
add
push
or
dec
xchg
bound
out
jp
push
andb
mov
movsb
add
fdivrs
push
cmp
cmp
hlt
movhlps
sbb
in
add
repnz
mov
mov
mov
mov
stos
inc
or
add
mov
addb
shlb
xchg
dec
aad
mov
or
cmp
shlb
xchg
roll
inc
add
mov
sbb
adc
or
add
jmp
xor
mov
fsubs
cmp
push
push
mov
or
push
add
push
or
ss
das
dec
sbb
dec
cmpsl
imul
mov
ds
jnp
jmp
sbb
cmp
lcall
in
pop
ret
loope
jo
sub
xchg
inc
push
iret
xor
mov
xorl
or
push
subb
clc
int
lret
or
or
add
sbb
jmp
add
adc
and
push
xchg
sbb
push
jecxz
les
or
add
test
dec
or
test
xchg
cmpsb
xor
push
push
mov
jno
mov
lods
xchg
adc
or
pop
mov
adc
jl
dec
sub
jne
sbb
mov
js
adc
mov
xor
mov
stos
or
rorb
outsl
pop
arpl
add
mov
cmp
adc
push
mov
mov
mov
adc
enter
adc
adc
mov
cli
cmp
or
ds
imul
add
adc
nop
dec
shrl
jb
cs
popa
xor
ret
pusha
dec
xchg
mov
les
rclb
inc
fldpi
mov
ret
cmp
cmp
or
aas
jecxz
cmp
mov
lcall
out
hlt
mov
cmpsl
stc
jl
ds
int
add
mov
add
mov
push
cmp
xor
mov
sbb
call
imul
icebp
sub
pop
gs
and
pop
adc
add
add
adc
aam
loope
mov
pop
push
adc
in
sbbl
mov
inc
ret
rorl
ror
cld
or
ret
push
call
aam
push
push
dec
movsl
loope
jb
std
lods
push
stos
daa
dec
xor
mov
add
inc
leave
les
rorl
loop
or
loop
out
gs
mov
mov
jns
jae
dec
cwtl
mov
lcall
popa
xor
or
cwtl
out
inc
lods
xor
sbb
pop
mov
sahf
push
adc
xadd
pop
mov
scas
stos
adc
sub
mov
or
push
popa
or
mov
mov
mov
aad
in
mov
pop
cmp
shll
push
or
lods
cwtl
sub
icebp
xor
dec
popf
add
adc
enter
iret
mov
xor
stos
jge
cmpsb
add
js
mov
push
test
adc
add
jmp
jmp
and
test
rorb
xor
js
inc
and
mov
or
cmpsb
and
lods
mov
cmp
scas
xor
call
js
add
rcl
data16
addb
pop
and
in
pop
ffree
or
test
cli
pop
loopne
and
pop
mov
add
inc
rcr
jmp
rorb
rorb
and
push
je
movsl
adc
or
icebp
inc
loopne
and
jmp
jo
icebp
pop
fs
jb
scas
or
ds
aad
out
addr16
xor
jge
pushf
or
aad
lods
xor
sub
mov
adc
pop
cmp
or
adc
jg
adc
pusha
sbb
pop
andb
xchg
mov
pop
mov
gs
gs
loop
xor
pop
inc
add
mov
cli
sub
push
sub
and
mov
xor
lea
dec
pop
sub
enter
test
leave
adc
test
mov
inc
sar
sbb
ljmp
stc
scas
add
rcrl
adc
push
dec
cmpsb
test
shr
push
push
cmp
jb
inc
inc
shll
inc
lret
sbb
add
xor
popf
dec
rclb
inc
jo
out
push
inc
mov
xor
push
jl
push
and
lock
add
stc
and
loopne
cmpsb
xchg
sbb
xchg
sub
pop
adc
addr16
and
or
or
or
adc
cltd
mov
pop
xor
mov
adc
sarl
fistpl
add
inc
mov
jns
addr16
push
pop
or
and
rorb
inc
cmpsl
add
mov
push
mov
popf
push
push
cmp
int3
inc
sbb
outsb
enter
and
hlt
icebp
aad
or
pop
loopne
pop
loope
jno
or
xchg
inc
xor
or
inc
add
mov
negb
aad
or
pushf
mov
ret
jmp
popl
pop
pusha
rorl
lea
mov
pop
xor
mov
or
mov
add
call
mov
enter
pop
scas
push
imul
out
in
es
and
and
test
dec
or
mov
in
adc
rep
sar
inc
lods
cwtl
or
clc
add
imul
jle
or
mov
ljmp
aam
sbb
lea
jmp
bound
cmp
seto
call
mov
inc
shrb
inc
or
xchg
and
adc
sub
xchg
inc
or
push
shll
mov
pop
rolb
add
dec
mov
dec
sbbb
mov
pop
mov
jnp
adc
push
ret
arpl
add
push
scas
adc
jo
or
add
jp
imul
cmp
mov
or
mov
imul
push
rcrl
push
ljmp
or
or
loopne
inc
dec
mov
sarb
jge
call
repz
mov
xchg
adc
lock
ljmp
je
cmp
mov
pop
loop
rorb
dec
in
mov
and
leave
xor
jno
xor
push
adc
sbb
xchg
scas
add
push
out
xchg
clc
test
adc
sahf
test
mov
and
cltd
mov
jg
or
xor
xor
rolb
jo
mov
jo
jo
push
push
jp
inc
xor
push
rcrb
ljmp
int3
inc
or
sub
add
or
push
out
lds
cmp
push
mov
jae
mov
rolb
dec
inc
subb
test
sbbb
adc
or
xchg
dec
and
inc
or
jmp
cwtl
and
es
test
push
inc
test
std
sbb
clc
ret
add
cmp
adc
jle
les
add
pop
pop
add
mov
dec
inc
or
jg
inc
or
and
or
mov
data16
jecxz
mov
test
pop
fstpl
cmp
push
loope
jne
push
andb
mov
mov
sti
jb
loopne
xchg
mov
pop
xor
jl
out
push
mov
lret
into
cmp
sbb
cmpsb
mov
mov
pop
hlt
push
xor
orb
xor
cmc
add
or
enter
mov
add
jle
lock
push
fisubrl
pop
shl
push
inc
test
scas
jle
lret
loop
xor
or
mov
gs
mov
inc
adc
add
adc
repnz
xchg
ljmp
or
pop
rorb
call
push
test
add
insb
sbb
adc
add
aad
cmp
mov
stos
stc
ljmp
mov
add
nop
cmpsl
dec
loopne
xor
adc
or
cmp
out
leave
jg
push
daa
add
sbb
ret
sbb
out
and
xchg
rcl
or
xchg
pop
jmp
pop
xor
dec
cmp
inc
lds
and
sbb
mov
cmpsl
add
fildl
pusha
ss
sbb
pop
leave
in
rcl
inc
and
push
cmp
test
xchg
sbb
mov
out
cltd
sbb
sub
sbb
xchg
popa
stos
shl
inc
xchg
xor
popf
cmp
dec
adc
fiaddl
dec
add
fstps
gs
sub
sub
sbb
adc
js
push
inc
add
sub
mov
xlat
mov
shl
call
movsb
mov
pop
insl
js
or
ret
movsb
cwtl
add
aad
mov
ljmp
xchg
and
outsl
jmp
or
pop
pop
pusha
mov
add
cmp
loop
xor
sub
xor
jl
xchg
fcom
insl
inc
xor
jnp
add
clc
and
push
lret
pop
add
stc
mov
mov
or
popa
fdivp
mov
cmp
out
jnp
jne
mov
ret
loopne
sar
add
mov
les
push
push
cmp
adc
lds
popa
stos
das
or
ja
das
and
pusha
cmp
inc
xchg
lods
das
adc
cmp
stos
sub
stos
push
lock
mov
add
rcll
ficoml
pop
jno
mov
jge
add
cmp
test
jb
push
dec
mov
nop
mov
enter
xchg
push
insb
out
ret
add
loop
aaa
mov
subl
loope
out
cs
xchg
mov
mov
adc
push
in
cmp
adc
call
stos
jmp
icebp
enter
or
push
inc
push
and
call
fsts
call
cmp
mov
call
add
icebp
push
movb
add
cmp
jge
mov
inc
cmp
lea
int
repnz
push
pop
ljmp
or
push
mov
stos
into
loopne
or
or
mov
imul
push
test
adc
stos
fiadds
fwait
pop
push
mov
test
and
or
cmp
jo
sbb
add
sub
push
pop
cwtl
push
add
push
es
add
push
lds
jl
mov
push
scas
push
adc
dec
rcrb
xor
add
cmc
addb
out
add
or
push
scas
push
dec
or
jo
mov
int3
sbb
pop
cmp
pusha
fistl
movsb
mov
jno
lods
push
rolb
lock
clc
enter
xor
mov
in
xor
or
rcl
in
xor
mov
or
jp
adc
stos
cmpsl
pop
insb
mov
inc
enter
or
insb
add
xor
fists
call
sar
sar
scas
test
pop
sarl
xor
add
jmp
shr
and
mov
push
add
pop
adc
push
loopne
push
loopne
roll
js
jl
add
sbb
fcoml
and
push
pop
and
mov
notb
push
push
adc
cmp
ret
pop
add
xchg
sti
in
add
sahf
mov
rorl
and
in
push
add
jg
xchg
cmp
mov
cli
push
icebp
stos
inc
sbb
sub
imul
jne
sbb
or
fwait
sbb
sbb
punpckhdq
jns
inc
jo
sbb
pop
loopne
sbb
or
rclb
mov
inc
sbb
cmp
mov
aam
ud2
loopne
nop
or
lea
or
jecxz
inc
cmc
xor
shlb
sub
pushf
adc
mov
sbb
sbb
and
mov
adc
pop
mov
repz
mov
mov
mov
cs
enter
sub
sub
inc
jb
mov
push
ret
mov
ret
fsts
cmp
into
xacquire
lret
pop
dec
and
inc
mov
jp
out
jge
jmp
rclw
shl
roll
sbb
mov
push
xor
daa
cli
pop
fisubl
enter
inc
mov
out
mov
or
mov
sub
xorl
mov
pop
mov
dec
add
xor
pop
xchg
or
pop
js
adc
dec
xor
or
sub
clc
or
mov
loopne
push
push
sub
es
imul
shlb
insl
dec
inc
add
push
xchg
ret
lods
mov
cmp
scas
ljmp
outsb
jmp
stos
bound
psubsw
mov
sbb
loopne
sbb
aad
dec
pop
adc
cmc
or
mov
pop
in
jmp
movl
sub
lret
sti
pop
add
gs
push
adc
pushf
lret
out
lahf
out
inc
aam
mov
fwait
dec
sbb
sti
incl
push
add
adc
pop
dec
out
lahf
aas
sarl
hlt
lcall
inc
inc
cld
stc
repz
jl
aam
mov
imul
sub
jnp
cs
lahf
aas
jg
cmp
je
cmpb
sbb
aaa
mov
stc
repz
out
mov
pusha
add
loope
bound
lahf
aas
jg
rol
sub
ljmp
out
in
movl
push
jo
insl
mov
jg
cld
lods
sahf
xchg
movsl
dec
xchg
cmpsl
xchg
push
inc
test
lahf
out
lret
sbb
arpl
ds
push
int
xchg
jg
cld
stc
or
xchg
lidtl
inc
push
xchg
and
out
lahf
aas
jns
cmp
scas
enter
adc
rep
xor
decb
pop
push
movsl
add
mov
lahf
aas
jg
xor
in
mov
cld
stc
repz
mov
cmp
mov
sahf
lahf
aas
jg
nop
mov
xchg
push
add
fdivrs
addr16
repz
and
or
int3
dec
mov
stc
popf
aas
jg
cld
cmp
dec
lcall
movsb
xchg
lds
lahf
popf
stos
dec
fistpll
fistpll
lret
cld
stc
pop
mov
jmp
mov
lahf
aas
ja
push
dec
jno
cmp
push
stc
cld
stc
repz
jmp
mov
mov
pop
aas
fadds
dec
jns
sarl
jg
cld
stc
mov
test
or
xor
lahf
aas
fcoml
lea
push
mov
iret
pop
pop
mov
xorb
xor
cld
stc
jle
mov
mov
repz
or
das
sbb
inc
inc
out
lahf
aas
popa
and
fstl
repnz
fwait
mov
cld
stc
repz
shrl
push
inc
out
pop
ja
add
in
lcall
leave
push
pop
push
cld
stc
repz
xchg
or
sub
arpl
les
lahf
aas
jg
jmp
jnp
mov
sbb
popf
or
repz
adc
or
outsb
sbb
icebp
subb
ret
jg
cld
sbb
test
int
dec
gs
xor
push
jp
jecxz
addb
jg
cld
stc
stos
lds
pop
shll
push
mov
mov
out
lahf
aas
xchg
imul
ror
jg
lcall
repz
mov
lahf
imul
mov
iret
lahf
aas
jg
fs
xlat
mov
mov
loope
inc
ljmp
jmp
adc
add
leave
out
scas
lahf
aas
jg
ljmp
mov
pop
test
repz
dec
ja
gs
adc
faddl
jmp
cli
iret
aas
jle
xchg
pop
in
addr16
push
stc
repz
and
or
orb
mov
aas
jg
add
sub
scas
insb
mov
dec
scas
push
fs
repz
fs
jecxz
cmp
rorl
dec
jle
cld
mov
sarb
imul
cmp
push
lea
scas
mov
stos
stos
mov
pop
rclb
mov
xor
cmp
popa
sar
repz
pop
push
jl
test
and
pusha
pusha
add
jg
cld
jge
jne
inc
dec
mov
fmul
xchg
repz
lahf
mov
cli
rorl
lahf
fidivs
fcomip
cld
stc
mov
dec
sbb
cmc
stos
ljmp
repz
mov
ret
jg,pt
or
lahf
aas
jg
mov
and
mov
cltd
or
stc
repz
cmp
pop
cs
sbb
push
std
pop
mov
cld
push
loope
cmp
add
repz
lahf
imul
mov
jg
cld
stc
rorl
adc
inc
cmpsl
ljmp
jns
iret
lahf
aas
fs
addb
outsb
fdivrl
jp
add
scas
in
icebp
aas
push
push
lret
xchg
lahf
out
test
outsl
mov
stc
repz
add
cmp
or
pop
movsl
dec
addr16
push
or
or
outsb
ret
out
lahf
add
push
cmc
idivl
jae
adc
cld
stc
lds
lock
add
dec
dec
jae
jmp
iret
lahf
aas
adc
mov
lahf
mov
inc
xchg
cld
stc
repz
and
push
mov
push
adc
iret
lahf
aas
jg
sub
ss
cmp
stc
repz
addr16
push
xor
mull
lahf
aas
jg
leave
pop
mov
inc
sbb
mov
repz
push
sahf
jo
xor
jecxz
std
xor
jg
cld
mov
aas
jae
mov
jbe
mov
mov
pop
mov
stos
into
andb
popf
cmp
scas
fidivrs
cld
stc
pop
daa
ret
xor
inc
fs
hlt
inc
sub
iret
lahf
aas
jns
mov
rcr
inc
cmp
mov
cld
stc
repz
push
std
push
decb
ds
rclb
iret
lahf
aas
jg
loope
xchg
pop
lock
sbb
xor
jmp
stos
adcb
dec
xchg
jmp
aas
jg
cld
fstl
pop
cs
inc
rcrb
repz
lahf
mov
sbb
daa
data16
mul
jg
cld
stc
inc
xor
popa
jae
mov
repz
mov
aas
pop
push
cs
pop
pushf
es
adc
call
dec
je
popf
push
inc
lret
cld
stc
push
nop
imul
mov
push
xchg
iret
lahf
aas
jg
adc
adc
rorl
jg
in
mov
lret
inc
xchg
test
repz
xchg
xor
imul
cld
andb
cwtl
push
cmp
addr16
xchg
out
lahf
fs
mov
mov
mov
sub
push
test
cmp
sbb
adc
cmp
iret
lahf
aas
shrb
jo
cli
mov
pop
cld
stc
repz
iret
sti
pop
decl
adc
lahf
aas
jg
cs
mov
sbb
loopne
dec
idivl
out
jle
inc
sbb
jne
repz
aas
push
ret
test
pop
and
mov
fidivrl
ret
cmp
iret
lahf
aas
xor
fsubs
cmp
cli
cld
stc
repz
or
xor
dec
and
inc
iret
lahf
aas
jg
adc
xchg
push
adc
push
stc
repz
pop
andl
stos
dec
out
push
aas
jg
rcr
or
in
mov
repz
lahf
push
aas
pusha
adc
xchg
aad
gs
cld
stc
into
mov
test
pop
cmc
sarb
push
inc
xchg
stos
jl
add
cld
pop
push
cld
stc
repz
push
pop
pop
out
xchg
pop
mov
aas
jg
call
lds
sub
lret
add
stc
repz
je
lds
cwtl
jbe
rcrb
sahf
jl
aas
jg
loope
xchg
cmpl
mov
repz
sub
pop
mov
jl
jp
outsl
shrb
aas
jg
cld
pop
sub
bound
cmp
icebp
pop
repnz
in
lahf
cwtl
dec
mov
cmp
mov
fstpl
loope
ret
pop
fisttpll
fsubrp
inc
cmp
repz
mov
ffree
lret
loop
int
aas
jg
cld
xor
xor
gs
push
cmc
repz
lahf
mov
aas
fildl
std
sub
add
cld
stc
add
adc
enter
mov
adc
out
lahf
aas
adcl
pop
cmpsl
mov
popf
cld
stc
repz
xchg
push
lods
push
popf
cmc
je
out
sub
iret
mov
jo
mov
sbb
lock
stc
repz
jo
hlt
jbe
or
and
sti
lahf
aas
jg
scas
aad
sbb
in
in
imul
jle
sub
leave
cs
repz
jg
cld
or
xor
fmuls
loope
es
fwait
aaa
shlb
mov
xor
repz
push
dec
fs
jns
add
cmp
test
xchg
pop
mov
lret
jno
mov
repz
jl
jns
int
dec
scas
adc
insl
pop
add
outsl
fidivrs
das
iret
pop
fdivrs
repz
fwait
shr
add
in
cmp
mov
movb
add
jg
repz
test
cli
pop
sahf
dec
repz
cld
insl
fisubrs
xchg
push
push
std
imul
mov
gs
inc
lods
jg
cld
stc
push
xor
outsl
cmp
pop
push
pop
push
iret
lahf
aas
xlat
mov
push
or
ss
cld
stc
repz
arpl
push
or
mov
and
adc
jg
in
push
bound
xchg
jg
lahf
cld
sub
aad
adc
out
cld
stc
repz
hlt
fdivr
stos
cs
call
aas
jg
enter
movsl
mov
fcompl
out
or
adc
xchg
test
mov
and
jg
cld
push
ds
rorl
fidivs
lock
lahf
gs
xchg
mov
and
cld
stc
sub
in
mov
inc
cmc
into
ror
adc
fisttps
mov
mov
cld
stc
repz
mov
fstpl
daa
icebp
push
bound
lahf
aas
jg
outsb
lds
repz
and
out
dec
pop
inc
push
add
lahf
aas
jg
divb
cmp
cmp
cmp
repz
bound
mov
mov
push
xchg
test
jg
cld
aad
jb
mov
test
repz
lahf
cmp
pusha
add
xor
div
sbb
hlt
sub
jp
pusha
and
sbb
shll
movsb
sti
out
lahf
aas
outsl
mov
dec
pop
daa
lahf
movsb
rol
xor
out
xchg
mov
jg
cmp
xchg
dec
cmp
fimuls
repz
inc
inc
nop
fidivrl
fisttpl
hlt
cmc
outsb
adc
push
iret
lahf
aas
jg
test
je
dec
jno
cld
stc
repz
xchg
adc
leave
mov
dec
stc
cli
adc
aas
jg
push
pop
sbb
mov
fiaddl
repz
and
daa
jle
arpl
imul
aas
jg
cld
shll
loope
call
sbb
lods
xchg
repz
lahf
out
cmp
fistl
xchg
dec
jg
cld
stc
shrb
pop
aad
sub
xchg
icebp
sub
clc
and
lahf
aas
in
jns
mov
fcompl
xor
insl
and
call
xor
or
or
lahf
aas
jg
pop
jno
mov
cltd
jge
lret
cld
stc
repz
mov
cltd
cld
cld
mov
lahf
aas
jg
xchg
inc
and
pop
cltd
mov
addr16
xchg
mov
out
add
add
jo
mov
cld
call
adc
pop
mov
and
scas
inc
mov
and
es
iret
lahf
aas
mull
mov
xlat
das
lds
cld
cld
stc
repz
add
dec
test
inc
out
fisubl
rep
mov
mov
dec
jg
cld
stc
add
stos
mov
pop
enter
hlt
mov
inc
and
ss
int
ja
xchg
inc
push
push
jg
in
repz
fidivrs
xor
push
jg
in
cld
push
jge
test
outsl
mulb
dec
les
icebp
pop
sbb
push
js
and
lea
sahf
les
fdivp
mov
sub
iret
mov
cmpb
int
outsl
scas
fs
jl
out
mov
mov
sub
outsl
fidivrs
mov
adc
jecxz
push
repz
fwait
pop
or
mov
out
ja
in
outsl
fidivrs
jne
int
push
mov
fwait
aaa
mov
cmp
cmp
fdiv
fcmovu
mov
mov
rcrb
cmpsl
mov
dec
hlt
mov
int
aaa
outsl
adc
sahf
imulb
mov
adc
jle
leave
mov
xchg
shr
stc
mov
pop
dec
push
add
adc
inc
or
jge
add
repz
pop
or
test
mov
ficoms
mov
outsl
fidivrs
sbb
fwait
mov
mov
enter
xor
mov
sub
cld
stc
enter
xchg
subb
xchg
pop
jo
out
lahf
aas
les
cmp
cld
stc
repz
sub
mov
pop
pop
jecxz
jl
sub
loop
lahf
aas
jg
add
loop
inc
arpl
pop
xchg
sub
stc
repz
mov
movsb
hlt
outsl
movsl
loop
xlat
mov
adc
jg
mov
mov
pop
test
repz
mov
adc
fisttpl
cli
or
stc
mov
and
cmp
xor
sub
xchg
lahf
aas
adc
push
repz
push
push
cmp
jb
aas
jmp
icebp
push
into
and
lahf
sahf
sahf
add
ret
nop
and
jle
stc
and
rcrb
in
repz
xor
sbb
rcrl
fcoms
ret
lds
lods
mov
fs
std
cmp
rolb
lahf
jg
in
addb
fisttpll
addr16
xchg
repz
jle
lret
insb
mov
jo
jno
and
cld
jb
jnp
push
sbb
stc
repz
not
addl
test
aas
jg
cld
ja
movsb
cmpsl
loopne
mov
pop
test
out
dec
sahf
xor
cltd
out
ds
in
stos
sbb
stc
repz
inc
and
or
xor
rcrb
repnz
jmp
aam
mov
outsb
stc
repz
push
add
mov
repz
mov
cld
sub
pop
ja
add
add
test
nop
jg
pop
or
xorl
aaa
out
int
dec
sub
inc
outsl
add
jb
jb
jg
fbstp
sbb
mov
push
fwait
dec
pop
stc
repz
mov
push
int
xor
test
mov
jg
cld
pushf
cli
jno
sbb
out
mov
xchg
xchg
inc
inc
and
mov
jbe
or
lahf
aas
jg
inc
xchg
add
sub
lock
sti
leave
out
mov
jp
test
cwtl
push
cmp
jg
cmp
xor
fisttps
les
stc
repz
jp
test
popa
stos
into
lret
pop
inc
jle
cld
nop
push
insl
in
aam
out
cs
xor
out
shrb
ror
sahf
sahf
add
test
filds
in
ja
jl
xchg
add
stos
orl
mov
jo
mov
xchg
cld
cld
xchg
data16
lock
pop
cld
jnp
out
and
daa
push
icebp
cmp
inc
lahf
stc
js
mov
cmp
sbb
repz
xchg
lods
insl
insl
push
sahf
cld
stos
lea
iret
adc
pushf
lahf
aas
jg
outsl
jg
cwtl
sbb
movsb
and
std
insl
in
iret
popa
dec
iret
push
cltd
cld
cld
ss
std
sbb
stc
repz
xchg
xchg
xchg
test
jae
lahf
pusha
leave
inc
jle
sti
jo
jae
ret
scas
xchg
adc
jg
or
mov
fadd
or
out
lahf
test
in
aas
lea
nop
jg
cld
stc
xchg
scas
orl
subl
aas
fcomi
dec
subl
outsl
mov
pop
or
push
mov
sahf
fistl
addb
pop
lahf
jg
push
inc
adc
push
lret
or
iret
fcoml
test
enter
cld
cld
imul
insb
jle
xor
cmpsb
sub
push
dec
pop
fistl
cld
stc
sahf
cmpsb
movsl
fidivl
mov
sub
iret
lahf
aas
xchg
mov
xchg
cmpsl
mov
stc
loope
in
mov
cmc
jns
dec
pop
pop
pushf
xchg
lahf
aas
pop
sub
jne
push
jg
jns
pusha
daa
cld
stc
xchg
daa
lods
data16
adcl
mov
inc
mov
mov
call
repnz
push
das
cmp
movsl
out
cmp
rep
or
and
xor
sahf
or
ds
add
xchg
subb
iret
lahf
aas
call
sub
jle
or
out
out
mov
sbb
outsb
dec
mov
pop
push
jo
xchg
repz
or
aas
jg
mov
adc
pop
movsl
insl
add
in
stc
lods
iret
mov
jo
das
xor
stc
repz
pop
cmp
pop
dec
add
mov
fimuls
or
ljmp
repz
dec
pop
pop
and
xor
dec
dec
mov
aas
jg
cld
in
iret
xchg
cmp
jge
repz
lahf
rol
jl
pop
cmc
ficomps
out
jg
cld
stc
push
je
insb
dec
shlb
sbb
popa
jo
iret
lahf
aas
mov
xchg
cmc
sub
push
jae
mov
stc
repz
test
sahf
repnz
cld
mov
loope
sbb
lret
and
cld
stc
repz
out
inc
xor
or
pushf
jae
iret
lahf
aas
jg
dec
push
and
pop
jnp
outsb
cld
stc
repz
dec
pop
or
and
in
out
lret
outsl
lahf
aas
jg
je
inc
fucom
inc
mov
rclb
repz
jae
cmp
shrb
jns
aas
jg
cld
popf
sbb
and
in
dec
arpl
jl
andb
repz
lahf
add
inc
and
cmp
cld
stc
outsb
repz
bound
xchg
mov
out
call
out
lahf
aas
icebp
xor
and
sub
jg
jl
inc
pop
in
dec
sub
fnstsw
divb
jecxz
xchg
test
lcall
repz
std
mov
mov
ss
push
xor
fwait
ja
lahf
xor
adc
sub
jnp
cmc
xchg
int
xor
lea
jnp
inc
xchg
es
lcall
dec
jmp
aaa
cmpsl
jae
cmp
jmp
lahf
ss
cmp
repz
xchg
sub
mov
fistpl
jmp
repz
clc
imul
inc
fists
cld
cmpsl
pop
lea
jge
sbbb
repz
lahf
ja
mov
mov
lret
movl
popa
mov
ds
mov
pop
out
test
xlat
into
dec
dec
cmp
xchg
xor
aas
jg
cld
icebp
add
jle
dec
lcall
jmp
lahf
pop
mov
jge
iret
stc
xor
jg
cld
stc
mov
mov
xor
sarb
xchg
lahf
aas
push
jo
pop
pop
dec
cmp
xrelease
push
xchg
jno
dec
sbb
jnp
jg
cld
stc
and
pop
pop
ds
jle
pop
push
add
out
lahf
aas
lock
gs
ss
mov
cld
stc
repz
mov
lds
fwait
or
mov
jg
dec
or
adc
and
cld
jmp
pop
scas
pop
adc
xlat
mov
cld
mov
sub
cmp
rclb
cld
stc
add
or
add
fs
dec
shll
lods
and
and
out
sahf
aas
jg
ja
fs
cmp
mov
in
mov
test
adc
xchg
xchg
rcrl
aad
and
mov
adc
dec
mov
arpl
fwait
aaa
outsl
fiadds
mov
fcoml
jns
aas
ds
call
adc
outsb
mov
test
push
outsl
sti
jb
leave
cld
stc
repz
cmpsb
in
mov
mov
inc
movsl
add
lahf
aas
jg
dec
and
shll
mov
inc
xchg
outsb
mov
call
jmp
pop
pop
outsl
fidivrs
push
xchg
xchg
cmpsl
hlt
or
inc
fmuls
adc
push
rdpmc
nop
sub
mov
in
pop
sbb
mov
mov
out
push
push
leave
cmpsb
hlt
xchg
jno
stc
push
xchg
jns
lahf
aas
jg
pop
arpl
popa
mov
push
jg
clc
cwtl
mov
repz
cmp
out
rol
ljmp
cmp
jg
cld
sub
mov
cmp
inc
outsl
sub
sub
out
lahf
add
pop
mov
sub
or
cld
stc
and
ret
ljmp
fmul
xlat
test
xchg
aas
js
mov
jl
pop
leave
int3
lahf
push
loopne
fwait
pop
jle
hlt
and
jns
cli
mov
test
movsb
lcall
int
aaa
outsl
mov
mov
add
xchg
xchg
mov
pop
pop
cmp
aas
sbb
xor
or
in
mov
mov
in
int
jecxz
mov
jmp
imul
cs
pop
les
aaa
jg
ret
ret
xchg
dec
testl
cli
enter
mov
jno
lock
das
decl
iret
xchg
push
xchg
jmp
xor
or
cs
xlat
repnz
or
aaa
in
adc
out
mov
call
nop
xchg
repz
fwait
pop
js
push
fsts
push
scas
leave
fwait
adc
pop
cmp
xor
addr16
rorb
aad
aaa
loop
xchg
jge
sbb
jo
int
adc
repz
inc
enter
clc
lahf
aas
jg
addps
out
mov
rorb
sbb
stos
mov
into
sbb
aas
jg
cld
mov
std
data16
jl
push
ja
xlat
shl
out
lahf
sahf
hlt
je
add
cmp
daa
jg
cld
stc
lods
addr16
inc
mov
cmp
or
mov
mov
aas
mov
xlat
mov
push
gs
jno
push
es
icebp
int
aaa
outsl
inc
sarb
fistps
aad
lcall
in
jle
push
push
scas
push
movsb
addps
aaa
outsl
fidivrs
lcall
sbb
int
adc
dec
jbe
xor
fidivrs
jmp
jnp
or
out
fwait
aaa
sub
jbe
dec
pop
les
mov
call
sar
in
jno
ror
iret
aas
not
dec
dec
mov
cmp
jg
rcll
push
aaa
fs
push
adc
aas
jne
lahf
roll
outsb
mov
iret
call
out
xor
sub
gs
mov
cli
jnp
fwait
aaa
outsl
fmulp
jnp
cltd
fwait
lret
idiv
or
pop
add
jns
out
xchg
push
xor
aad
mov
js
loope
push
mov
ss
or
sbb
int
loope
sbb
dec
mov
fwait
jb
add
mov
popa
into
sub
pushf
stos
dec
jecxz
push
mov
xchg
push
dec
push
pop
rcll
out
mov
xlat
and
cld
les
addr16
cld
in
jg
cld
sbb
out
pop
sub
int3
rolb
repz
lahf
sbb
loope
push
idivb
movq
cld
stc
push
or
fxch
shrl
popf
outsb
cs
mov
stos
js
push
in
cmpsb
int3
mov
xor
ret
fidivrs
fdivl
inc
test
out
fwait
aaa
in
in
jne
or
push
addr16
jns
add
popa
les
jns
push
fists
std
pop
jg
rol
cmpsb
dec
xlat
cld
cld
stc
repz
and
jb
loope
pop
sub
adc
jg
sbb
add
data16
push
stc
repz
nop
aad
nop
enter
add
sbb
mov
cld
xor
pusha
jns
mov
xchg
sbb
dec
mov
cld
stc
repz
dec
lods
orb
cmpsl
imul
in
test
jecxz
xchg
pop
sar
repz
iret
fbld
movsl
loopne
mov
bound
and
mov
lods
js
repz
mov
mov
pop
jo
mov
mov
inc
test
jle
cmpsb
mov
cmp
cld
mov
jae
adc
sub
inc
mov
lahf
aas
cmpsl
pop
jbe
lea
jb
fabs
popf
cld
stc
repz
lea
xor
shlb
lahf
aas
jg
sarl
lea
jne
imul
repz
movsb
xchg
enter
sti
fnsave
out
or
jae
fbstp
dec
jmp
out
fwait
and
jns
call
mov
fidivrs
insl
aas
adc
mov
int
aaa
fstps
cli
pop
adc
aas
fidivrs
decb
push
dec
inc
add
xchg
insb
idivl
outsl
add
repz
and
jne,pn
mov
addr16
imul
sbb
movsl
mov
gs
stc
adc
clc
repz
fwait
lret
mov
fmul
jmp
mov
fidivrs
loope
popf
jo
in
jp
repnz
out
fwait
aaa
mov
push
fistpl
xchg
pop
js
mov
addr16
jb
das
xchg
xchg
out
and
push
inc
xchg
mov
fucom
out
fwait
int3
pop
pushf
cld
cmpb
push
dec
bound
pushf
das
mov
xor
or
jo
iret
xchg
fwait
aaa
outsl
call
push
rolb
or
aaa
cmpb
in
or
scas
lods
movsl
inc
pop
push
fs
arpl
mov
lahf
aas
or
mov
out
mov
jns
iret
sub
out
mov
add
mov
sti
push
and
and
add
in
lods
mov
cmpsb
fwait
aaa
outsl
mov
inc
clc
xchg
sub
mov
out
jge
ja
mov
jl
and
ljmp
push
push
cmpsb
fldcw
xchg
in
es
repz
xchg
mov
mov
sub
cld
stc
push
or
fistpll
adc
and
and
and
out
fwait
aaa
scas
loopne
dec
dec
sarl
adc
lods
lret
sub
imul
dec
pop
ss
scas
cld
stc
repz
fnstcw
or
xor
mov
jae
mov
push
cltd
xor
push
dec
sahf
out
sub
movsb
fistps
cld
stc
repz
clc
cmp
mov
stc
adc
lret
out
xor
mov
mov
decb
jnp
pop
sahf
xor
jle
fpatan
out
mov
xor
inc
push
cmp
nop
jb
outsl
fidivrs
test
xchg
or
int
aaa
adcl
imul
pop
dec
rolb
inc
repz
loope
cltd
sbb
out
out
cmc
mov
add
dec
cmpsb
inc
lahf
aas
jg
inc
xchg
mov
or
std
stc
repz
jl
movsb
push
cmp
push
add
fdivrs
stc
cld
cmpb
fwait
inc
fistpll
dec
repz
lahf
pop
dec
mov
fistpll
or
dec
jg
cld
stc
dec
inc
push
push
sbb
int
inc
lret
jg
xchg
push
out
lahf
aas
adc
push
add
cld
cld
stc
repz
mull
scas
cld
stc
dec
jno
push
ds
pop
sub
xlat
icebp
cwtl
out
aaa
adc
addr16
cmp
pushf
push
imul
dec
push
fs
inc
test
dec
aaa
outsl
fidivrs
mov
cmc
in
sti
xchg
jbe
sbb
out
lahf
fwait
jnp
jmp
xor
stc
les
sbb
jns
jle
divl
mov
push
popa
sub
xchg
int
fwait
aaa
outsl
loopne
outsl
or
push
je
in
jg
cld
loope
mov
out
adc
imul
aas
test
sub
xchg
js
aad
cmp
mov
sub
add
cmpsl
mov
insl
mov
cmp
sub
mov
pop
mov
jg
aas
sub
fsubl
into
int
aaa
out
iret
cmp
and
sti
sub
out
stos
mov
pusha
add
jge
dec
int3
fdivrs
aaa
outsl
fimuls
fstl
je
andl
sub
repz
fwait
mov
lahf
subl
outsl
fidivrs
out
dec
dec
mov
cli
lahf
xchg
jmp
push
out
fwait
aaa
mov
mov
push
loop
xchg
repz
xor
pop
pop
jbe
fidivrs
insb
mov
out
loopw
dec
or
inc
out
xchg
add
imul
mov
gs
in
xor
cmpl
mov
mov
stos
pop
xchg
out
add
sub
mov
or
out
pop
jg
xchg
fwait
dec
mov
push
push
add
and
sub
ljmp
loop
push
adc
fists
daa
push
lock
lahf
cwtl
imul
adcb
mov
sbb
jmp
leave
iret
lahf
aas
jg
pusha
pusha
xor
push
mov
out
ljmp
ja
jae
sbb
and
sub
movsb
fcomps
or
adc
inc
jns
fcoms
cli
sub
repz
stos
xchg
pop
pop
jnp
lcall
lahf
aas
jg
mov
gs
outsl
out
leave
ss
iret
or
sbb
test
pop
aas
jg
cld
adc
stos
pop
in
std
push
clc
data16
scas
std
test
in
iret
lahf
mov
popf
mov
add
lahf
jno
lahf
ds
jo
pop
mov
out
pop
cli
fidivrl
out
dec
test
jno
insb
arpl
inc
jle
lock
xchg
test
fidivrs
dec
xchg
jmp
xchg
out
fwait
aaa
mov
xlat
cld
jmp
fidivrs
mov
in
sbb
ja
int
aaa
outsl
dec
mov
cld
mov
icebp
std
dec
sub
repnz
sbb
and
in
fbstp
add
repz
or
loope
adc
mov
sarl
and
sub
ljmp
rclb
iret
lahf
ja
pop
sbb
hlt
pop
test
push
cmp
cld
stc
cli
and
xor
cmp
imul
pop
das
jle
add
out
ja
out
lahf
aas
lcall
sub
cmc
ss
cld
stc
repz
in
ja
sub
sahf
daa
pop
cmp
repz
lahf
aas
jg
cmp
jecxz
pop
dec
cmpsb
fidivrl
repnz
loopne
push
xor
ret
movsb
ficompl
stc
inc
lahf
mov
mov
sbb
cld
stc
repz
inc
jo
inc
pcmpgtb
mov
in
sahf
aas
jg
mov
pushf
add
inc
or
sub
lea
pop
out
sbb
mov
repnz
mov
fwait
aaa
outsl
inc
dec
stc
lcall
xor
icebp
enter
mov
aam
ljmp
cmc
fdivrs
call
or
aaa
outsl
ficomps
popa
pushf
pop
sbb
jns
out
sbb
rcll
jecxz
xchg
mov
outsl
fidivrs
adc
jle
and
shll
cmp
jo
jns
out
cmp
aad
shl
pop
pop
jo
and
inc
outsb
fidivrs
repnz
jmp
mov
daa
add
sbb
repz
mov
loopne
xchg
and
mov
icebp
fidivs
mov
fidivrs
popf
dec
lock
mov
iret
lahf
mov
aam
mull
loopne
mov
cld
stc
jbe
adc
pusha
pop
mov
out
xchg
iret
lahf
jg
cmpsb
adc
dec
leave
stos
dec
aas
xor
out
iret
inc
adc
inc
pop
aaa
outsl
fidivrs
pop
push
loope
js
dec
data16
mov
pop
aad
pop
cmp
in
mov
push
pop
sbb
cs
cmpl
mov
iret
push
adc
pop
repz
lahf
lahf
cmpsb
sti
pop
sbb
push
mov
mov
jg
cld
stc
popa
and
xchg
insb
pop
pop
dec
aam
mov
aas
xor
push
mov
adc
jle
cld
stc
in
mov
and
rorb
xor
mov
adc
mov
xchg
cmp
dec
pop
add
enter
ficoms
jp
ss
mov
jns
aaa
or
or
mov
xchg
or
aaa
outsl
pop
pop
addb
xor
dec
sub
inc
mov
cmpsb
adc
xchg
xchg
mov
add
fistpl
sub
or
nop
add
dec
jns
out
jge
or
rol
fadd
pop
outsb
es
add
outsb
fidivrs
sub
jno
aaa
outsl
mov
or
dec
dec
loop
aam
js
out
in
inc
popf
fstp
cmp
mov
repz
aas
inc
neg
jl
addr16
lahf
rorb
in
pushf
jmp
push
inc
cmpsl
mov
pop
jl
cld
stc
clc
mov
mov
pop
lds
or
iret
lahf
aas
cmp
cmp
std
cwtl
out
vmovsldup
dec
fisubrs
out
sub
mov
cld
sbb
cld
pop
push
lods
test
aaa
outsl
out
ret
or
jecxz
push
mov
push
ret
arpl
es
add
loopne
fisttps
stc
repz
out
adc
sub
lret
aas
jg
cld
mov
xchg
xchg
shrb
mov
cltd
xor
repz
lahf
or
mov
cmp
mov
jl
xchg
mov
pop
push
inc
or
enter
out
roll
andb
push
faddl
cld
mov
mov
repnz
iret
lahf
in
mov
lret
mov
jg
cld
stc
mov
adc
inc
ficompl
mov
jge
outsb
xchg
lahf
aas
sbb
cwtl
outsl
xor
cmpsb
lea
inc
pop
ja
les
cld
stc
lods
outsb
insl
jle
in
push
ret
push
mov
out
sub
inc
inc
fstpt
cmp
aaa
dec
out
fwait
aaa
push
pop
add
into
or
sti
ret
in
mov
movsb
mov
pop
xchg
dec
xlat
mov
mov
aam
xor
add
push
call
int
aaa
mov
subl
out
mov
repz
imul
clc
cmpsl
pop
xchg
iret
lahf
aas
lcall
out
and
int3
into
jne
test
add
xor
cmp
push
fcomp
outsb
test
cld
cmp
daa
inc
push
cmp
mov
hlt
insb
dec
xor
mov
test
xchg
inc
outsb
fisubs
push
mov
fcoml
cld
nop
mov
mov
xchg
ds
shrb
cs
imull
add
stc
adc
or
dec
adc
lret
adc
dec
cmpsl
jns
mov
mov
xchg
sbb
cmp
mov
sub
jg
pop
xchg
pushf
iret
lahf
jg
pop
jg
mov
mov
inc
cld
stc
repz
mov
mov
in
into
cmp
lahf
aas
jg
aad
sbb
stos
test
into
inc
or
hlt
in
repz
iret
mov
lea
dec
cmp
lahf
aas
jg
insl
sub
pop
stos
test
and
cmc
bound
stc
repz
leave
mov
jns
cmc
mov
mov
jg
or
mov
adc
aas
insb
vcvtdq2pd
out
jno
repnz
xor
cltd
sbb
cli
xlat
mov
jg
cld
jb
in
mov
cld
jno
stos
insl
aad
jne
repz
lahf
dec
cmp
dec
add
jge
push
lahf
jl
stc
xchg
in
add
daa
imul
xchg
fwait
sbbb
or
aas
jg
cld
pushf
cmpsl
inc
pop
popa
jns
stos
out
jnp
add
push
repz
lahf
lock
xor
cmp
cld
stc
test
ffreep
in
cmp
sub
xchg
or
orb
cmp
jbe
mov
or
insl
pusha
aaa
outsl
ficoms
cmc
popa
xor
push
outsl
cmc
mov
xchg
repz
fwait
cwtl
and
jo
nopl
or
fdivrl
inc
test
xchg
mov
jg
xchg
mov
lret
mov
cld
stc
repz
inc
xchg
les
mov
adc
pop
pop
mov
xor
es
dec
call
outsl
mov
xor
adc
js
clc
cmp
stc
mov
cld
xchg
xchg
fsubrp
inc
ljmp
lock
les
xor
test
outsl
fidivrs
inc
jge
dec
jns
shll
int
aaa
outsl
adc
add
fimuls
out
mov
test
test
aam
loopne
sbb
push
fisttpl
mov
push
lds
mov
and
fldt
hlt
enter
sahf
inc
insb
mov
fs
movsl
adc
jno
or
add
or
inc
dec
pushf
cmp
push
inc
into
push
out
fwait
aaa
sub
add
ja
imul
push
cmp
adc
popf
mov
fnstcw
mov
test
cld
stc
inc
lahf
fcmovne
pop
sub
fisttpll
dec
push
push
xchg
lahf
aas
jg
mov
enter
inc
rorl
repz
das
das
fsts
add
xchg
jne
mov
aas
jg
call
ret
arpl
adc
add
loop
repnz
pop
decb
mov
out
lahf
xchg
xchg
or
mov
jg
jg
cld
stc
outsb
mov
incb
jne
js
iret
mov
xor
ret
cld
stc
repz
add
rolb
pusha
out
mov
jg
xor
cmc
repnz
test
inc
sub
repnz
repz
test
inc
mov
inc
inc
test
in
pop
sbb
push
loope
ret
scas
inc
daa
xor
sti
push
mov
je
iret
fwait
aaa
sbb
or
mov
repz
pop
pop
mov
loop
push
scas
pop
xor
mov
xchg
push
rorb
cld
pop
sbb
test
es
add
out
and
xchg
outsl
jae
xor
out
fwait
aaa
cmp
mov
sti
sub
shlb
jns
ja
shll
jp
xchg
outsb
xchg
aaa
outsl
pushf
jae
lds
push
sbbl
xor
shl
xchg
test
dec
sbb
or
and
ret
in
mov
int
aaa
outsl
out
daa
nop
mov
mov
push
jns
out
outsl
fcoml
fimuls
in
xor
fwait
aaa
outsl
ficomps
jne
stos
inc
sub
xchg
xchg
int
lcall
aas
pop
lock
repz
lahf
add
cmpsb
lcall
adc
stc
jecxz
sub
test
js
out
mov
cltd
cmp
dec
inc
cld
stc
repz
xchg
cmp
loopne
sbb
cli
adc
popl
incb
cld
stc
repz
cmpl
imul
mov
clc
loop
lahf
inc
push
fisttps
pop
pop
cmp
mov
xchg
jp
cmp
cwtl
test
fwait
icebp
test
adc
negl
jge
add
xor
rclb
xor
lahf
aas
aas
adc
cwtl
sarb
leave
jg
adcb
ja
mov
pop
leave
pop
rcll
mov
call
cmc
ss
jns
inc
mov
cmp
iret
into
in
or
aaa
outsl
fisubrs
lods
ss
jg
jns
out
and
jle,pn
mov
pop
mov
clc
das
mov
mov
fbld
push
repnz
loopne
test
bound
imul
lahf
aas
cmp
sbb
mov
and
sbb
insl
sub
sub
adc
fisttpll
fsubs
cld
stos
sbb
pop
mov
jnp
ja
mov
fcom
enter
lcall
and
adc
cmp
xlat
jp
outsb
fidivrs
xor
mov
loop
stos
fwait
aaa
inc
dec
loop
inc
lods
jbe
sbb
int
movsl
mov
xchg
sub
sarl
adc
inc
outsb
fidivrs
push
ret
cwtl
pop
mov
lea
add
enter
pushf
rolb
bound
jns
dec
loopne
and
xchg
imul
aad
out
fwait
aaa
aad
xor
jge
test
jge
repz
incl
xchg
push
adc
push
pop
sbb
iret
lahf
out
and
inc
xor
or
cld
stc
pushf
or
std
pop
sub
mov
jnp
add
lods
sub
std
cld
stc
rep
std
push
mov
or
inc
in
adc
inc
adc
aas
jg
arpl
inc
pop
cmp
iret
lahf
jg
xchg
xchg
sbb
cmp
pop
add
je
mov
fdivrl
clc
loopne
jae
sbb
stc
adc
es
adc
repz
ds
icebp
push
fistpll
pop
cmp
inc
jl
jmp
aas
shrb
xchg
fwait
aaa
adc
sub
sub
aas
out
fmul
loope
aam
cmp
fisubs
mov
repz
push
int
ja
pop
dec
cmpsb
xor
mov
testl
out
stc
call
icebp
mov
jge
aaa
outsl
fidivrs
repnz
or
rorl
sbb
fwait
cmp
std
aad
pusha
sub
lcall
jns
clc
push
pop
pop
ret
faddl
sub
fstp
xor
fwait
aaa
or
xor
aas
test
cld
stc
test
mov
xchg
add
outsl
iret
enter
lahf
aas
jg
jl
das
movsl
pop
push
out
and
jmp
xor
in
sbb
cmp
jns
es
cmpsl
addr16
iret
xchg
mov
int3
aaa
outsl
fidivrs
adc
shr
and
roll
push
mov
xlat
dec
aas
stc
cld
mov
cmp
in
mov
aad
fwait
ja
xlat
inc
adc
jle
bound
repz
loop
add
push
cmp
fidivrs
nop
rolb
push
sbb
xchg
sbb
jmp
push
jno
int
ljmp
or
fidivrs
aad
std
test
dec
cmp
stos
cld
mov
dec
je
mov
test
jg
xchg
out
and
push
repz
sbb
popa
xor
push
imul
cmp
arpl
sub
outsl
out
out
je
scas
outsb
std
inc
push
push
inc
out
fwait
aaa
mov
pushf
js
xlat
sbb
mov
mov
rorl
cmp
aaa
outsl
ficomps
or
sbb
push
xlat
rcrl
repz
pop
mov
or
fsubrs
shll
aaa
outsl
fidivrs
mov
adc
jne
repz
fwait
cmovae
in
lret
mov
jb
fdivrl
mov
or
xlat
xchg
pushf
out
lahf
jg
notb
inc
adc
adc
test
in
fsubrl
sarl
int
push
iret
testl
push
andb
aaa
outsl
fidivrs
out
jmp
xor
fisttpl
repz
fwait
or
add
aam
subb
jns
cmp
and
lea
pop
adc
add
dec
sbb
aas
xchg
fwait
imul
xlat
fidivrl
cwtl
fwait
mov
mov
mov
repz
sbb
xor
cwtl
mov
xchg
mov
mov
test
daa
mov
out
mov
cld
cwtl
ffreep
bound
repnz
call
fsubr
cs
aaa
outsl
fisubrs
mov
mov
pop
xlat
mov
repz
sbb
mov
lret
sub
add
dec
pushf
outsl
sub
mov
mov
or
or
setbe
int
fwait
aaa
popa
lods
adc
divb
adc
xchg
jg
in
pop
mov
out
scas
movzwl
sub
into
in
pop
lock
add
imul
scas
pop
sub
movsb
mov
lods
add
fists
pop
pop
imul
xchg
dec
insb
cld
stc
repz
add
ljmp
sbb
adc
nop
inc
fnstenv
fs
sub
insb
popa
jg
repz
cltd
or
int
out
std
in
jns
aas
jg
cld
out
ret
daa
adc
jbe
add
je
enter
in
or
outsb
and
int
add
dec
movl
jns
out
sbb
test
in
jnp
sub
jle
outsl
ficomps
xor
sti
sub
xlat
faddl
shrb
push
mov
inc
aaa
outsl
fidivrs
daa
lods
scas
fs
xchg
mov
int
sbb
test
add
int3
mov
sbb
jns
das
pop
xchg
ljmp
repz
sub
movsb
fdivrl
mov
aas
jg
xor
sbb
sbb
js
jg
mov
leave
out
out
inc
and
arpl
repz
pop
imul
ja
lret
rorl
leave
add
mov
movsb
inc
sub
inc
stc
repz
hlt
mov
adcl
scas
adc
mov
cld
pop
dec
dec
daa
and
and
mov
xchg
mov
cmovae
outsl
fidivrs
pusha
cmp
cmp
hlt
mov
hlt
mov
pop
pop
icebp
outsl
fidivrs
sub
cmpl
mov
adc
in
fwait
aaa
outsl
and
int3
xor
lods
add
aas
cmc
enter
mov
push
jge
stc
cli
cmp
shll
insl
sti
outsl
fidivrs
and
movsb
jmp
inc
out
fwait
aaa
shlb
dec
icebp
rorl
sti
enter
mov
cmp
and
repnz
xor
cmpsl
mov
fnstcw
repz
pop
dec
dec
cltd
mov
mov
push
sbb
outsl
fidivrs
jno
insb
add
push
xchg
out
fwait
sti
jmp
mov
fsubr
outsl
fidivrs
cmp
das
add
push
aad
hlt
loope
fwait
aaa
lahf
push
adc
lods
dec
pop
scas
mov
cld
pop
repz
mov
ljmp
stc
repz
push
insb
adcl
call
aas
jg
mov
cmp
xor
or
cld
stc
repz
jb
pop
sahf
cmpsb
inc
aad
cmpsb
les
inc
loopne
aas
jg
and
xor
push
xchg
test
mov
push
push
ds
stc
sbb
leave
mov
inc
jae
fwait
and
aas
jg
inc
xchg
push
inc
xlat
xchg
negl
push
inc
repz
lahf
rclb
push
aam
and
and
add
jg
cld
stc
ja
imul
js
push
jl
lods
rorb
enter
iret
lahf
aas
stc
movsl
mov
dec
jns
dec
paddd
stc
repz
add
out
fidivl
xchg
push
mov
jg
jnp
aaa
out
nop
or
xchg
push
nop
lods
push
out
in
pushf
push
aas
mov
out
aam
mov
repnz
out
fwait
aaa
xchg
test
pushf
jl
mov
mov
lcall
mov
jle
aaa
outsl
fidivs
das
add
inc
je
addr16
repz
gs
push
pop
fwait
aaa
inc
dec
add
aad
test
aaa
outsl
fidivrs
nop
mov
movsl
push
movsb
or
pop
sub
add
aas
inc
int
aaa
outsl
dec
jp
or
dec
jne
jmp
mov
fidivs
cmc
jecxz
aas
das
jbe
adc
fwait
aaa
outsl
ficoms
stc
push
imul
inc
inc
int3
push
aas
ljmp
mov
inc
push
xchg
out
lahf
int
sbb
shrl
andl
iret
mov
adcb
xchg
neg
or
jle
cld
stc
mov
in
inc
or
cwtl
repnz
stc
outsl
stos
or
or
ja
and
out
fwait
aaa
push
jae
or
mov
negb
push
jbe
test
inc
lcall
and
adc
fidivrl
scas
cmpsl
sub
sub
sbb
out
jle
xchg
mov
or
call
fwait
aaa
outsl
fisubrs
cwtl
push
mov
dec
push
adcb
in
adc
jns
inc
jg
movb
scas
fists
icebp
aam
enter
jp
push
imul
adc
lahf
aas
sub
scas
xchg
scas
push
movsb
inc
adc
fdivrp
stc
repz
aad
jge
or
xor
xchg
cmp
fnstenv
mov
hlt
xchg
test
movsb
add
subb
jg
cld
stc
repnz
push
cli
fcoml
xor
rorl
xor
stc
out
lahf
aas
scas
rol
fwait
dec
push
ficoml
cld
stc
repz
test
loope
or
xchg
inc
push
iret
lahf
aas
jg
fcomip
sahf
mov
adc
jle
add
cmpsb
sub
leave
out
gs
mov
leave
das
insb
fidivrs
xchg
mov
push
dec
cwtl
mov
fxch
mov
adc
xchg
cmp
test
sub
enter
fstps
iret
push
ss
sti
imul
in
mov
aaa
outsl
fidivrs
adc
jmp
sar
mov
sub
rclb
arpl
aaa
outsl
fidivrs
mov
maxps
repnz
fwait
jmp
or
loopne
cmpsl
stc
stc
ja
mov
divl
aas
cld
stc
rcll
adc
mov
lret
outsb
mulb
push
jne,pt
jns
cmpsb
aas
pop
mov
mov
inc
out
lahf
aas
and
in
daa
dec
cmp
cld
arpl
repnz
stos
stos
insb
push
inc
lea
rol
cmp
mov
sub
jle
inc
dec
mov
aad
out
push
aas
jg
cld
mov
mov
inc
cltd
jmp
xchg
repz
lahf
jb
out
mov
inc
xlat
mov
fstpt
cld
stc
arpl
daa
les
popa
sub
sarl
iret
aas
xchg
inc
out
out
or
and
stc
repz
fwait
xor
sbb
adc
fwait
adcb
repz
xor
mov
sub
shr
fcomps
aaa
outsl
fidivrs
xchg
xor
stos
test
pop
or
sbb
in
fwait
outsb
jnp
adc
mov
mov
mov
icebp
pop
push
or
shl
adc
stos
inc
outsb
jns
and
sub
sbb
add
xor
jbe
scas
mov
in
inc
or
xor
mov
mov
adc
fwait
aaa
outsl
fsubp
xor
test
mov
sub
add
out
shrl
popa
jbe
mov
adc
test
push
or
loope
sbb
mov
std
sarb
sbb
in
scas
scas
pop
insl
jge
addb
xchg
sub
mov
out
cmp
adc
int3
es
ljmp
rcrb
lock
idiv
cld
stc
repz
daa
jbe
mov
roll
rcrl
aad
jg,pt
add
jne
psraw
dec
in
aas
jg
movl
or
pop
stc
repz
out
push
push
dec
cmpsb
rcl
xchg
xchg
and
out
dec
inc
jle
cld
adc
push
emms
jmp
loope
icebp
in
iret
mov
dec
scas
outsl
mov
push
decl
lahf
shlb
ja
mov
lar
mov
inc
inc
jae
mov
test
and
or
mov
xor
cmp
stos
scas
jg
xor
or
aam
push
or
std
add
cwtl
leave
out
insl
xor
aaa
outsl
ficoms
icebp
test
dec
je
sub
int
cmp
adc
inc
and
outsl
fidivrs
pop
jne
xor
scas
out
cwtl
mov
adc
int
aaa
jp
mov
lret
js
adc
inc
mov
jno
pop
jns
lret
xchg
mov
fwait
aaa
outsl
inc
jae
dec
mov
inc
mov
repz
test
lret
inc
lret
fs
xchg
add
fidivrs
js
mov
aad
enter
and
das
aas
iret
rcl
push
in
mov
andl
add
in
in
pop
pushf
pop
daa
jg
cld
push
xchg
fmul
inc
cs
in
or
addb
iret
mov
repz
or
adcl
stc
jmp
ds
test
and
pop
mov
repnz
imul
xchg
push
daa
in
jmp
push
push
lcall
outsl
fidivrs
mov
imul
sbb
xchg
fwait
xchg
hlt
lock
push
push
jg
das
shlb
xchg
ret
xchg
mov
jg
jb
daa
push
aas
cmp
xchg
pop
jg
pop
pusha
fwait
and
and
clc
out
int
cmc
outsb
push
push
clc
xor
bnd
cmp
loop
or
cmp
out
cld
mov
mov
mov
ja
xchg
push
mov
movb
les
stos
and
jnp
repnz
lods
ljmp
int
and
sbb
shr
fidivrs
mov
adc
mov
jp
out
adc
xor
int
aaa
outsl
cmc
cmpsl
cmpsw
jmp
adc
pop
mov
pop
jg
ror
dec
sbb
or
enter
mov
insb
add
ds
sbb
adc
cmp
inc
es
test
mov
repnz
mov
ds
aam
xchg
aaa
outsl
mov
pop
ret
rclb
and
test
inc
adc
or
xor
inc
out
sub
mov
aaa
outsl
fisubrs
xchg
push
adcb
sub
xchg
pusha
jb
dec
repz
in
shlb
sub
adc
inc
adc
cld
stc
mov
out
sub
cmp
jecxz
cs
mov
in
lahf
aas
int
adc
xchg
push
cmp
incb
loope
not
and
cmp
lahf
aas
arpl
inc
adc
subb
cld
stc
rep
clc
push
call
push
data16
ret
xchg
aas
jg
cmc
dec
lret
inc
test
cld
stc
add
push
lcall
pushf
out
lahf
aas
outsb
daa
and
jecxz
cmpl
sbb
adc
pusha
dec
outsb
stos
js
cli
iret
lahf
aas
jg
subl
jl
ret
lods
test
cld
stc
repz
pop
int3
hlt
ds
enter
aaa
and
jg
ds
fnstenv
cmpb
repz
out
movsl
and
mov
stos
test
stos
xor
jl
pop
outsb
fidivrs
addl
cltd
int
addb
stos
mov
push
mov
fstps
mov
into
cmp
fwait
aaa
outsl
fiadds
inc
mov
add
loope
fiadds
enter
cmp
iret
out
daa
outsl
fidivrs
xchg
call
push
ficoml
imul
fwait
aaa
mov
cmovp
jl
imul
sbb
repz
pusha
cld
in
test
ss
imull
out
lahf
xchg
lock
cwtl
fstpl
insb
cmpsb
sub
cld
stc
xchg
sub
jle
mov
call
shl
iret
lahf
aas
sbb
push
add
and
cld
stc
repz
out
insb
jne
push
lcall
into
into
iret
lahf
aas
jg
add
fists
pop
or
enter
add
cld
stc
repz
mov
pop
jo
pushf
pop
push
push
adc
push
push
dec
inc
xchg
aas
jg
and
test
ljmp
or
lock
aas
jmp
mov
mov
mov
fcmovu
mov
cltd
mov
aaa
outsl
fimuls
mov
mov
mov
js
out
lods
xchg
lods
enter
mov
mov
dec
jle
lds
add
jmp
pop
mov
scas
lahf
aas
jg
fistps
sub
ljmp
repz
add
sub
aas
pop
filds
xchg
jg
lea
fdivrs
push
jl
stc
repz
adc
mov
dec
sub
jg
sub
dec
or
int3
mov
add
fcoms
inc
stc
repz
inc
addr16
addr16
test
push
les
jg
cld
jbe
out
test
mov
add
out
iret
lahf
repz
or
insl
mov
rcll
add
shll
rclb
push
div
movsb
mov
out
add
add
stos
es
sub
sbb
call
fnstcw
leave
inc
iret
push
xchg
les
pop
push
in
dec
sub
roll
inc
shll
add
jne
inc
cmp
adc
dec
mov
aam
movsl
sbb
add
mov
xor
js
sub
les
pop
jmp
adc
test
push
std
das
jbe
cmp
dec
leave
xor
pop
subb
sub
or
add
inc
rorl
insl
orl
adc
out
mov
push
es
sbb
mov
mov
subb
sub
loopne
inc
or
clc
sbb
push
pop
xchg
push
pop
imul
adc
mov
or
xchg
sub
sub
or
hlt
inc
rclb
repnz
rcl
jp
ret
imul
loop
jge
adc
add
mov
sbb
ds
inc
pop
push
xchg
sub
inc
aad
or
cmovl
fwait
subl
call
adc
and
out
mov
or
dec
or
add
cmp
lea
sarl
cmovno
in
push
cmc
sub
sub
sub
or
loopne
pop
and
ret
je
pop
mov
stos
shll
ljmp
sub
cmp
scas
add
mov
ret
pop
or
sbb
enter
pop
adc
es
cli
sbb
sub
push
lock
push
fs
push
ja
test
jecxz
push
push
ror
cmp
test
dec
or
stc
ja
mov
ret
or
sbb
incl
and
addr16
add
lock
shl
mov
mov
test
adc
jmp
imul
add
imul
inc
push
push
push
pextrw
clc
add
clc
sbb
and
mov
adc
ss
into
or
clc
jge
or
xlat
lock
sbb
mov
pop
out
mov
stos
push
js
push
mov
addr16
sbb
add
cli
or
adcb
mov
sub
adc
sub
inc
adc
aam
scas
sbb
lods
mov
popf
stos
cmpsb
and
inc
mov
add
add
divl
cmc
add
mov
icebp
sub
sbb
orb
out
int3
stos
pushf
jmp
mov
adc
shlb
or
aam
sahf
push
xor
mov
inc
insl
sbb
gs
add
adc
mov
mov
call
int
sbb
sbb
or
sbbb
pop
add
inc
in
sbb
sbb
push
sbb
mov
push
inc
and
sub
fsubrl
notb
popa
lods
mov
jmp
test
lods
adc
mov
in
jb
sub
push
enter
add
push
movb
cwtl
imul
das
jae
mov
aad
xchg
sbb
sti
push
or
mov
inc
popf
jnp
inc
mov
adc
mov
pop
cs
clc
adc
popa
jecxz
in
rorl
sbb
mov
push
mov
out
mov
xor
push
add
icebp
lods
test
cmpsl
pop
call
inc
aad
leave
push
outsb
mov
or
or
mov
imul
andl
sub
add
inc
or
out
outsb
cli
sbb
sbb
mov
cmc
aad
push
sub
cmpsb
scas
into
and
shlb
addb
add
sub
aam
dec
adc
outsb
xor
add
inc
sarb
mov
adc
mov
rcr
mov
mov
add
sbb
or
fistps
or
adc
pminub
ja
out
adc
lock
sbb
bound
jl
dec
push
clc
subb
add
rolb
pop
mov
or
js
inc
add
ret
ljmp
mov
dec
add
mov
in
nop
loope
add
push
fildl
adc
movsb
and
imul
add
faddp
jmp
or
or
pop
push
push
push
mov
add
mov
pop
inc
loopne
inc
jmp
lahf
lret
pop
lret
insl
mov
sbb
int
inc
xor
mov
mov
xor
call
add
daa
pop
sbb
js
mov
popa
mov
push
push
fbstp
andb
pop
jb
sbb
inc
insl
push
push
xor
arpl
test
dec
sbb
add
addl
push
mov
or
dec
idivb
jo
lods
xor
dec
icebp
into
or
mov
or
add
adc
jbe
xchg
mov
pusha
sub
lock
pop
xchg
jg
add
jo
jno
imul
pusha
jo
lret
adc
sub
and
popf
adc
fsubs
cmp
cmp
push
mov
adc
loopne
aam
jp
and
or
clc
pop
mov
mov
push
push
mov
movsb
jne
mov
adc
sbb
mov
mov
rcl
insb
mov
adc
inc
sbb
push
inc
in
mov
jmp
add
int
or
add
addb
sbb
subl
dec
dec
xchg
cld
or
add
xor
pop
mov
shr
sub
cmpsl
xor
pop
out
ds
or
lret
pop
rcr
mov
outsb
sbb
inc
in
push
ret
lds
inc
sbb
leave
mov
sbb
push
cs
ja
push
lea
leave
sbb
arpl
sbb
ret
push
and
movl
mov
aad
sti
sbbb
sahf
aam
xchg
stos
cmp
out
mov
or
add
mov
in
cmp
xchg
add
sub
xchg
out
mov
mov
push
xchg
mov
inc
in
add
jecxz
push
ljmp
push
dec
jl
xor
lock
dec
mov
adcb
lock
ret
sarb
or
inc
in
or
xchg
sub
cmp
push
aas
adc
inc
xchg
xor
and
sbb
xchg
inc
push
mov
mov
out
adc
test
les
xchg
adc
ret
or
roll
push
xor
repnz
or
adc
and
push
push
insl
add
add
sbb
cmpsb
roll
mov
aam
test
jo
and
or
notb
xor
js
or
out
add
push
push
inc
rolb
shll
mov
cmc
jb
push
and
je
js
xchg
sbb
pop
adc
xor
mov
add
sub
test
orl
push
pop
push
adc
and
push
xchg
pop
push
push
jae
ljmp
cmp
nop
sahf
fcomps
pop
cmp
arpl
mov
ja
and
cmpsb
add
sbb
xchg
lea
mov
inc
add
in
adc
xchg
sub
ret
mov
xchg
fwait
ret
dec
mov
pop
mov
pop
sbbb
mov
or
loopne
mov
unpckhps
xchg
pop
push
inc
push
inc
in
mov
test
or
in
sbb
enter
outsb
xorb
std
ja
orb
repnz
jge
ret
icebp
movb
mov
sub
push
and
and
xchg
jmp
sub
repz
pop
sbb
mov
adc
mov
or
pusha
mov
imul
clc
lcall
out
dec
lea
xor
adc
ja
inc
push
sub
es
mov
or
xor
rolb
push
call
pop
mov
les
jne
push
lahf
fadds
add
push
sbb
dec
push
sub
xchg
push
pop
or
mov
filds
notb
sub
adc
cmp
call
adc
push
sbb
pop
inc
repnz
mov
adc
das
fimull
add
mov
icebp
adcb
stos
popf
and
hlt
adc
xchg
mov
in
stos
adc
push
push
int
stc
mov
or
xor
faddl
jo
bound
lods
xor
dec
mov
in
imulw
and
sbb
cmp
mov
gs
stos
insl
add
sbb
mov
cmp
roll
inc
sub
enter
dec
int
or
inc
mov
ret
mov
mov
or
fsubrs
mov
pushf
sarl
or
stos
adcb
mov
hlt
cmc
push
imul
and
mov
loopne
subb
jo
sbb
rcrl
sbb
jae
add
lahf
jmp
mov
outsb
imul
test
jbe
call
xor
lods
xor
xchg
mov
dec
push
sbb
jo
sbbb
pop
ret
leave
push
daa
mov
rcl
mov
aad
dec
ss
xchg
test
jge
andl
lds
fadd
sbb
lahf
add
das
es
lods
cmp
add
movsb
push
fsubl
mov
orl
mov
or
push
test
mov
leave
aam
sbb
mov
push
mov
xchg
repnz
sub
clc
sbb
test
sub
nopl
push
repnz
sbb
push
loopne
add
and
inc
mov
stos
out
push
mov
mov
add
adc
xchg
jb
xor
sbb
lret
jnp
jno
lods
and
dec
sbb
pushf
stos
std
inc
mov
xor
lods
roll
mov
test
and
cmp
inc
cmp
sub
imul
mov
adc
sbbb
test
push
and
es
lcall
or
sbb
addl
push
and
xchg
outsb
sbb
ss
cmp
add
push
cmp
lcall
ljmp
xor
loope
jnp
daa
push
mov
in
push
jecxz
xchg
fwait
adc
inc
enter
pop
mov
ret
adc
enter
imul
jbe
xchg
sbb
jle
scas
push
aad
or
insb
push
sbb
push
ret
lock
mov
rorl
mov
lcall
adc
sbb
sbb
dec
add
inc
or
or
subb
cmp
or
les
fs
das
pop
jp
adc
cmp
into
mov
mov
rolb
inc
inc
fwait
or
lods
push
push
repnz
push
aad
sub
adc
pushf
sub
add
xchg
sahf
mov
cltd
cmp
or
push
push
js
jp
ret
adc
add
dec
pushf
and
pop
mov
push
adc
and
push
push
pop
jnp
xor
lds
inc
je
or
test
push
dec
sbb
or
pop
lock
add
ds
xor
shlb
xor
push
sbbb
dec
or
inc
adc
cltd
sbb
cmp
je
adc
clc
sbb
fstpt
stos
push
adc
and
in
and
push
push
std
and
push
mov
test
cmpsb
shl
sbb
mov
cmpsl
push
add
xchg
xor
popf
mov
dec
rcrl
sub
push
mov
xor
and
sbbb
xor
or
xor
ret
add
jnp
add
insl
xchg
shl
rcrl
cmp
cmp
test
adc
xor
or
push
pop
mov
cmp
mov
adc
xchg
psubusb
call
push
mov
or
add
fstpt
add
nop
add
pop
and
dec
das
add
push
pop
mov
addr16
sub
push
in
std
mov
or
sbb
pop
mov
inc
daa
mov
inc
aas
lea
andb
add
in
xchg
repz
dec
adc
rolb
bound
pusha
aad
cmp
or
and
call
sbb
aad
leave
adc
or
orl
dec
decb
subb
fisubl
rcrl
lods
aas
xchg
push
push
movsb
dec
and
jne
rcll
das
rorb
sbb
iret
push
mov
and
cltd
xchg
popa
or
xor
sub
dec
jno
push
push
or
sahf
cmovno
sub
cmp
inc
xor
loope
inc
inc
adc
or
decb
mov
pop
jmp
jge
je
push
sarb
add
inc
std
xor
and
aad
stc
jle
test
add
pop
adc
jge
insb
pushf
xor
sbb
testb
nop
add
inc
xor
mov
xor
js
inc
test
lock
adc
cltd
prefetchwt1
cmp
fmuls
es
or
lock
inc
adc
enter
enter
add
or
ljmp
cmpsb
test
adc
push
shlb
pop
sbb
mulb
pop
push
cmp
sub
push
pop
mov
push
stos
dec
adc
adc
aad
push
adc
add
imul
repz
pop
sbbl
jo
adc
out
fwait
insl
cli
push
ljmp
imul
popf
dec
add
pop
sbb
fwait
jae
cmp
adc
sbb
cmc
add
scas
add
cmpsl
fcoml
pop
push
aam
inc
stos
and
arpl
cli
daa
sub
cli
push
add
rolb
and
adc
cmp
add
inc
or
adc
adc
or
dec
out
shl
adc
or
sbb
andl
mov
push
jne
jl
jo
sbbl
int3
jecxz
or
pop
rcrl
outsl
push
sbb
je
push
jo
into
aaa
imul
sub
arpl
push
jb
adc
enter
and
leave
out
jo
pop
lods
cmpsl
sar
cmp
mov
pop
xor
push
loope
loop
sbb
sbb
fisttpll
ret
sbb
mov
in
aad
addr16
push
imul
dec
pop
lahf
adc
push
test
mov
push
xlat
adc
or
ret
jge
in
cmpsb
fstps
sbb
xor
icebp
mov
mov
add
inc
das
fidivl
loop
jbe
test
xor
cmpsb
ret
cmpsl
jo
or
and
or
add
cmp
rorl
leave
jo
mov
int3
xor
inc
add
add
loope
aam
fists
jnp
sbb
cld
rolb
es
xchg
add
test
push
add
inc
add
pop
jo
rcrl
fdivrs
cmovno
and
lds
sbb
add
sub
dec
in
or
lcall
xor
xlat
fdivl
stc
push
cld
sbb
inc
pop
cmp
repnz
imul
mov
mov
mov
cmpsb
addr16
jmp
jl
jo
or
or
outsl
lods
mov
adc
dec
xor
cmp
je
int
push
dec
xor
pop
imul
fsubl
mov
mov
jo
lods
add
jo
adc
pusha
add
loopne
or
add
aas
ja
dec
pop
cltd
and
inc
add
rorb
add
or
push
mov
mov
sbb
xchg
xchg
inc
lea
xlat
stos
pop
adc
jmp
mov
sbb
sbb
sbb
es
mov
or
iret
gs
mov
pop
repz
mov
outsb
dec
bnd
call
pop
cmp
add
outsb
or
adc
xchg
xchg
stos
mov
ss
and
test
lock
and
push
pop
movsl
push
mov
sub
scas
bound
mov
stos
push
call
frstor
jl
std
ljmp
imul
lds
and
lea
cmpl
jmp
mov
push
test
cli
dec
pop
mov
cwtl
ret
push
pop
sbb
add
fisubrl
enter
stc
pusha
fcoms
push
mov
loope
mov
je
shrb
add
in
popf
adc
sub
lret
adc
addr16
loop
mov
mov
or
mov
and
das
jp
fisubrs
call
lahf
out
xor
dec
sbb
or
pop
push
fdivl
stc
loopne
add
rol
mov
or
add
ret
add
push
fcomps
push
xor
mov
xchg
jbe
push
aad
jae
xor
cmp
lods
pop
dec
adc
or
cmp
push
xor
jmp
or
lods
rcr
popa
xchg
dec
test
mov
test
adc
xchg
decb
std
adc
lret
ret
xchg
ss
xchg
pop
ja
add
or
pop
jne
mov
pop
roll
sbb
shrb
icebp
add
pop
jmp
stc
sbb
add
inc
sahf
xor
inc
adc
push
cmp
push
mov
mov
add
sbb
movl
ret
push
pushf
sub
add
and
or
xorl
or
ret
add
sub
daa
inc
mov
outsl
ror
mov
imul
add
mov
movsl
push
int
rolb
andb
push
std
ljmp
dec
sarl
idivb
add
popf
and
sub
jne
pusha
sbb
mov
xor
movsl
roll
mov
adc
and
add
jg
push
pushf
arpl
mov
and
add
adc
pop
adc
in
xor
jns
cmpsb
dec
push
pop
add
popa
or
aad
adc
leave
add
movsb
push
test
aam
inc
lea
mov
cmp
mov
pop
movsb
in
mov
pop
shll
bound
notb
sub
mov
rcll
rorl
leave
mov
adc
mov
sub
test
mov
out
xor
jl
enter
rorl
in
sub
dec
or
mov
ljmp
xor
or
sub
xchg
or
add
leave
pop
pop
lea
lock
mov
leave
cmp
xchg
ja
frstpm(287
pushf
lock
daa
mov
mov
xchg
inc
mov
enter
xor
cmpsl
mov
push
enter
push
adc
xor
daa
cmp
add
sbb
push
stos
das
out
cmp
leave
mov
push
push
test
inc
or
mov
sbb
jmp
cmc
push
mov
es
inc
popa
add
add
inc
mov
sti
mov
push
je
xor
add
add
inc
sbb
cmpsl
xchg
mov
mov
mov
adc
add
cli
or
sarb
push
lods
inc
add
pop
mov
pop
adc
sbb
call
or
sub
rcll
addr16
loope
fdivrs
mov
orl
mov
and
lock
or
push
dec
sub
cli
inc
pop
inc
loopne
push
sarb
push
mov
or
push
push
mov
aaa
adc
and
mov
js
lcall
or
sbb
mov
lret
xchg
add
shrl
and
sbb
inc
out
adc
pop
push
adc
and
sbb
mov
add
push
pop
sti
inc
add
fucomip
inc
adc
mov
push
dec
mov
or
test
add
push
inc
orb
or
movsl
xor
roll
mov
pop
pop
and
fs
das
stos
push
cmp
adc
orb
sbb
inc
sbb
adc
loopne
imul
jo
in
pop
fidivrl
inc
inc
sbb
nopl
cmp
mov
or
lock
push
push
xchg
jae
jns
pop
les
icebp
mov
insl
push
subl
push
mov
sbb
ja
add
add
adc
xchg
add
pop
subl
sub
jecxz
adc
test
add
sbb
popa
adc
je
xor
cmp
adc
dec
and
adc
add
add
int3
clc
pop
sub
and
mov
mov
xchg
ret
dec
xor
mov
push
add
leave
mov
add
push
add
push
and
jl
mov
push
test
mov
add
xchg
push
and
pop
fldl
and
shlb
or
push
and
aam
gs
sbb
nop
sbbl
imul
adc
xchg
test
aam
sbb
mov
mov
push
pop
subb
cmp
rorl
cmp
sti
add
sub
add
mov
loope
push
mov
push
mov
xor
add
pop
push
inc
mov
enter
push
mov
jb
ret
cmc
movsb
jo
pop
xchg
dec
and
mov
and
xchg
mulb
int3
stos
inc
pushf
stos
inc
jno
or
sbb
xor
and
jg
push
orl
cwtl
mov
aam
cmp
enter
push
adc
adc
mov
insb
or
aad
loope
pop
push
pop
xchg
dec
mov
pop
lds
mov
lods
and
pop
push
push
inc
pop
push
mov
sub
hlt
push
or
mov
mov
sbb
push
inc
pop
cmp
rcrl
and
sub
mov
fldenv
add
pusha
push
sarl
je
ds
cltd
mov
ret
mov
mov
inc
enter
ss
ret
fisubl
jle
sbb
xchg
sbb
add
inc
inc
out
inc
mov
cmp
aad
xor
xor
inc
push
xchg
sbb
mov
add
scas
or
ficoms
in
or
popf
jp
add
push
rorl
test
or
popf
xor
loopne
jmp
push
pop
jb
push
xor
rcll
and
add
xor
mov
push
gs
or
add
stos
add
add
test
push
push
xor
rorb
xchg
ret
sar
lahf
aad
inc
je
pop
add
adc
test
movsb
xchg
mov
sub
addb
sbb
jae
xchg
lea
call
xchg
xor
ja
insl
push
imul
fcmovb
enter
or
inc
decl
jae
das
mov
fwait
and
inc
je
push
inc
xor
dec
dec
inc
shr
xchg
mov
ret
push
loop
movsb
pushf
loopne
inc
xchg
pusha
testb
cld
mov
mov
cmp
in
inc
je
add
inc
push
adc
nop
ret
icebp
or
jmp
dec
inc
jp
mov
and
pop
hlt
rorl
testl
ud1
rcl
inc
mov
rclb
and
pop
movsb
push
cmp
push
fs
inc
rcr
out
and
xchg
xchg
les
outsl
push
mov
add
shlb
and
hlt
mov
add
fldcw
popf
jmp
push
roll
jo
sarl
loop
xchg
mov
mov
out
pusha
sbb
cmp
mov
push
push
mov
sbb
jno
popf
or
pusha
mov
mov
mov
mov
pop
or
aas
rcr
cwtl
and
jmp
xchg
loop
insl
xlat
push
add
test
rclb
add
push
inc
ror
scas
cmc
push
pushf
add
adc
xchg
call
arpl
aam
mov
insl
inc
daa
xor
lds
push
inc
roll
cmp
scas
clc
sub
fsubs
xchg
add
mov
dec
sub
and
lret
mov
cmpsb
test
sub
add
or
sub
mov
data16
rorl
cmc
dec
xor
pandn
sarb
pop
or
lret
mov
sub
mov
push
lds
idivb
and
andb
push
adc
pop
adc
pop
adc
leave
pop
cmp
int
or
mov
inc
or
cltd
add
sbb
js
sbb
cmpb
and
jp
int
add
xlat
xchg
pop
and
test
adc
or
xchg
sbb
sti
arpl
rorb
mov
test
mov
cmc
insl
xchg
ja
push
out
int3
popa
dec
push
add
push
push
pop
lock
mov
xchg
xor
cmp
cmp
mov
pop
ret
mov
mov
or
pop
push
lock
push
xor
inc
rorl
sbb
add
mov
mov
add
jecxz
cmpsb
push
cmp
mov
pushw
add
mov
in
test
ja
mov
mov
sub
push
xchg
mov
or
inc
xchg
addb
add
or
lds
aas
mov
enter
cmp
add
bound
mov
add
sbb
sbb
repnz
sub
rcr
rcll
dec
or
mov
ret
pusha
cmp
jb
cmpl
movsl
ret
sub
inc
mov
mov
cli
sub
xchg
sub
cmp
dec
push
rorb
fadds
lds
scas
mov
lock
mov
fiadds
mov
rolb
add
sbb
sbb
icebp
movb
pop
sbb
mov
mov
cwtl
sub
mov
pusha
enter
repnz
push
imul
subl
cmp
roll
xchg
cmp
addr16
sbb
add
cmp
arpl
or
cwtl
stos
jp
outsb
jmp
or
push
loope
inc
adc
orl
mov
mov
das
out
push
ret
sbb
add
fcmovne
in
adc
push
fimull
mov
ds
add
push
xor
loopne
outsl
push
les
cmp
push
ret
adc
iret
cmp
or
cmp
pop
inc
shrl
lock
cmp
or
mov
lods
jno
and
jb
inc
or
je
add
sbb
and
xchg
adc
pop
mov
sbb
or
sarl
mov
nop
push
test
mov
adc
inc
loope
and
es
xchg
hlt
shrb
xor
shll
add
pop
xor
jns
jo
mov
faddl
push
or
mov
push
mov
popf
adc
add
jge
dec
cmp
lcall
hlt
and
enter
stos
jmp
and
xchg
sbb
pop
js
shll
mov
pop
pusha
adc
or
mov
add
jp
push
jge
adc
jp
sub
inc
je
ljmp
test
subl
cs
rcrb
stos
pop
adc
negb
add
jecxz
sub
add
xchg
mov
xchg
movsl
push
adc
sbb
push
push
divb
xor
mov
out
add
and
mov
sbb
int3
jo
loopne
inc
inc
iret
int3
add
ret
sbb
sar
call
fistps
mov
xchg
or
inc
xor
mov
pop
rcrl
lcall
mov
add
or
rolb
pop
xor
ljmp
pop
push
test
cmp
adc
add
pop
ror
ljmp
cmp
enter
dec
adc
add
jno
in
push
sbb
adc
xor
sbb
pop
lock
add
adc
add
xor
or
out
dec
cmp
pop
and
lret
inc
cmpsl
jecxz
lea
test
adc
adc
shl
push
and
mov
push
and
movsb
icebp
jle
dec
stos
mov
or
in
repnz
xor
sbb
mov
or
mov
push
out
in
inc
push
bound
adc
stos
adc
or
jge
adc
push
add
mov
adc
pop
add
je
adc
dec
mov
je
and
inc
xor
pop
xchg
insl
sbb
or
nop
andb
shl
icebp
and
sbb
mov
mov
jae
add
pop
sti
xchg
mov
and
push
sti
and
lcall
push
or
les
mov
add
sub
inc
cs
es
in
js
cmp
xor
and
into
pop
ljmp
ret
inc
call
mov
or
data16
sbb
and
rolb
test
jne
fsubr
lret
addl
sbb
call
shll
lret
or
out
notl
ret
pop
cmc
mov
inc
xor
jle
mov
loopne
mov
scas
cmpsl
sbbb
mov
mov
adc
arpl
lods
icebp
cwtl
mov
inc
jmp
sub
cmp
xor
arpl
sbb
add
enter
rorl
and
or
push
add
subl
fs
ljmp
mov
call
or
push
scas
sbb
aaa
sbb
mov
push
xor
lret
in
loopne
mov
icebp
xchg
add
fmul
xor
push
inc
push
mov
mull
movsl
or
jb
js
cmpsb
orb
xor
aam
cmp
cmpsb
lock
cli
xor
push
mov
cmc
add
push
dec
nop
test
cmp
adc
sbb
into
jno
pop
shrb
lcall
inc
add
movsl
incl
inc
sub
scas
ss
jp
pop
decb
sbb
inc
roll
rcll
loop
push
nop
push
adc
testl
testb
and
pop
scas
or
sbbb
mov
mov
addr16
cmp
xchg
sbb
shlb
pusha
ss
pop
or
sbb
enter
sbb
sub
add
dec
inc
loope
pop
inc
ret
add
or
shl
popf
xor
mov
push
enter
mov
jno
lock
inc
inc
push
dec
shl
mov
cmovge
into
sbb
xor
lret
sbb
xorb
shrb
xchg
test
push
mov
cmp
sahf
jp
mov
adc
push
mov
sbb
xchg
mov
push
pop
pop
test
cld
popa
add
cmp
adc
add
clc
or
sub
loop
loopne
shlb
adc
into
popa
inc
scas
dec
jp
sahf
sub
inc
imul
rclb
fdivl
cmp
test
sub
test
inc
sarl
adc
inc
scas
jmp
adc
out
add
rclb
lock
ret
adc
in
mov
mov
adc
xor
popf
jecxz
cmpsb
sbb
mov
rolb
dec
aam
inc
jno
incb
add
or
jb,pn
push
ret
mov
shl
sub
rol
or
cmpsb
sub
and
jae
adc
sub
jno
lret
dec
push
inc
cwtl
or
insb
and
mov
clc
popa
movsb
xchg
addb
push
sbb
inc
les
sbb
mov
addr16
adc
clc
cli
es
sbb
sub
pop
mov
cmpl
push
stos
out
sub
xor
lock
or
cmp
fs
mov
add
test
mov
mov
jno
ret
dec
mov
pusha
ljmp
or
jo
mov
add
sbb
cltd
lock
adc
or
rclb
test
test
scas
sarl
and
icebp
cmpsl
push
pop
popf
add
insl
lods
dec
xchg
sub
iret
pop
lods
lret
andb
je
pop
int3
jl
push
push
pop
mov
mov
je
mov
cmpl
call
pop
mov
test
sbb
or
adc
fmull
rcll
add
loopne
xchg
push
rcl
mov
adc
sub
fadd
adc
fstpl
and
test
negb
rolb
sub
shll
pop
rclb
push
cmp
rcr
dec
inc
xor
pushf
shlb
push
jecxz
inc
or
pop
jbe
mov
stos
and
xchg
addl
dec
push
arpl
nop
rcrl
sbb
sub
decb
cli
cmp
xor
add
push
in
jecxz
jns
aas
push
adc
push
push
in
arpl
je
rorl
divb
mov
fwait
and
cmp
lods
mov
and
hlt
add
rcrl
mov
lds
andl
cmp
mov
inc
inc
in
sbb
jo
xchg
icebp
nop
xor
lret
inc
test
daa
add
aam
xchg
sarb
add
inc
divl
fdiv
lret
sbb
stos
hlt
scas
fisubrl
sbb
std
add
scas
adc
pop
add
mov
insl
movsb
or
lret
scas
xchg
and
fwait
ret
jno
push
out
push
orl
popa
andl
dec
mov
inc
push
cmp
subl
add
cmc
sbb
xchg
push
orl
sti
lods
aaa
jp
cmpsl
nop
cmp
jo
lcall
js
lods
add
add
xor
adc
mov
or
jmp
or
adc
mov
sbb
sbb
loope
out
adc
int
mov
push
xchg
das
adc
test
or
inc
adc
mov
xor
xor
in
addr16
out
add
cmpsb
push
pushf
mov
aam
jnp
push
inc
or
sbb
les
or
xor
push
int
push
or
dec
data16
sbb
mov
inc
lds
imulb
mov
sub
cmpb
inc
mov
shrb
popl
jne
add
inc
sbb
pop
adc
mov
dec
cmp
push
rol
test
pop
adc
rol
adc
lea
push
adc
shlb
mov
mov
daa
and
rcrl
xchg
es
pop
gs
mov
das
push
push
add
stos
sahf
sub
adc
daa
stos
sub
mov
lock
je
add
lret
sub
add
test
rcrl
enter
add
test
sbb
jmp
mov
jbe
pushf
jae
in
outsl
jecxz
push
cmp
push
jmp
cmp
test
inc
xor
shll
call
xchg
add
sub
or
inc
xchg
sub
push
pop
out
out
fucomp
mov
nop
inc
mov
ljmp
inc
or
test
add
mov
mov
push
xchg
cmp
jno
pop
inc
inc
cmp
in
popa
repnz
aad
or
xor
loop
sbb
sbb
cmp
sbb
sbb
jecxz
fbstp
adc
push
push
insl
mov
outsl
sbb
adc
inc
add
cld
das
sub
orb
rorl
js
arpl
mov
jg
add
in
or
xor
and
ja
icebp
add
pop
lret
inc
ret
mov
sbb
iret
or
mov
adc
mov
pusha
call
push
je
add
xor
cmp
mov
sub
shlb
mov
or
arpl
out
pop
stc
sub
movsl
cli
xchg
cmp
mov
add
cmp
shrb
mov
popa
sbb
add
int
xor
lahf
rorb
shll
cli
or
adc
mov
xchg
cli
pusha
sub
mov
push
test
adc
lret
cmp
orl
fldl
lcall
add
lea
test
mov
add
push
cmp
adc
xor
mov
push
lock
sbb
pop
int
mov
imul
inc
js
cmp
mov
adc
or
xor
inc
pop
movl
push
xor
sub
mov
push
mov
testl
cltd
push
sub
call
add
stc
loope
test
shlb
int3
dec
xchg
mov
inc
jp
and
cltd
sbb
and
pop
in
jmp
push
insb
cmp
mov
mov
xchg
rol
mov
pop
inc
cmpsl
add
mov
fs
xor
xchg
loop
mov
xlat
add
rcrl
sahf
sub
fcompl
push
jge
or
and
inc
push
or
adc
xchg
ret
adc
pop
and
cmp
movsl
mov
ret
push
jp
push
adc
xchg
add
cmp
in
jno
xchg
gs
fcoml
loop
sbb
add
sbbb
cmpsl
push
mov
adc
rcll
subl
andb
imull
push
test
sbb
imul
xchg
or
test
xchg
loopne
sbb
aam
inc
jmp
insb
xchg
test
rcrl
xchg
call
adc
sbb
push
mov
adc
add
push
stc
adc
into
mov
daa
rcll
pop
rcll
or
xor
fnstenv
movl
inc
or
mov
or
dec
popw
jb
add
daa
push
fidivrs
push
in
push
xchg
in
or
sbb
cltd
cltd
pop
test
mov
hlt
nop
rcrb
pop
and
cmc
cli
pshufw
or
xor
inc
dec
jne
mov
testb
adc
push
mov
dec
pusha
cmp
int3
and
mov
pop
sbb
out
mov
ficoms
adc
sub
or
icebp
push
fsts
imul
xor
and
pop
mov
subps
loop,pt
shlb
inc
cmp
mov
xor
xchg
es
movb
dec
or
push
mov
push
push
or
inc
addl
test
inc
pop
mov
mov
mov
sbbl
bswap
inc
js
loop
adc
jo
add
add
inc
test
andl
or
inc
xchg
xor
or
ss
sub
or
ljmp
push
das
xchg
loopne
lock
sub
mov
and
in
pop
push
push
push
mov
jmp
and
rorb
sti
shrl
lods
and
cwtl
shl
xchg
sbb
lret
xlat
adc
jg
cmp
pop
test
jne
sbb
sbb
aad
outsb
es
adc
xor
mov
jbe
mov
pop
sbb
stos
clc
packuswb
inc
orb
cmp
subb
sub
lea
movsb
push
sub
push
sub
rolb
je
in
fdivs
jmp
push
pop
sbb
and
and
push
leave
mov
inc
mov
jg
mov
push
push
adc
pop
pop
ret
mov
jne
push
jmp
out
xchg
mov
jb
add
insl
inc
sti
inc
loop
je
add
mov
sti
fs
cwtl
and
and
les
loop
hlt
in
add
jp
pop
jns
scas
or
push
add
add
ret
insb
pop
xlat
dec
sti
add
and
or
jge
repnz
xchg
cmp
popa
lods
sti
int3
jne
sbb
sub
add
and
mov
enter
les
sbb
fnstsw
and
lea
inc
jb
test
inc
mov
pushf
push
pop
in
and
pop
cltd
sbb
mov
and
or
mov
repnz
cmp
test
pop
or
mov
jmp
cmp
jae
jo
add
push
xchg
clc
push
or
pushf
pushl
fwait
sbb
arpl
pop
je
jbe
pop
or
pop
or
fsub
sti
add
sbb
sub
adc
test
insl
add
loop
dec
push
int
mov
mov
div
out
jp
dec
add
jne
cmc
aaa
jle
jecxz
int3
xchg
push
popa
jge
lea
movsb
add
jle
sub
and
aas
inc
add
cmp
jl
mov
pop
jle
cmp
and
dec
jmp
cmp
stc
cmp
ds
inc
test
cmp
cmp
push
cmp
xchg
pop
test
push
cmp
pop
push
rcrl
js
sbb
sti
pop
pop
jmp
call
mov
or
jmp
popa
jecxz
mov
addr16
pop
leave
mov
push
or
pop
popa
cmp
push
jg
sti
das
shl
lea
add
add
xor
out
adc
or
xchg
or
cs
call
imul
incl
cmp
jne
mov
inc
pop
je
test
dec
in
outsl
clc
hlt
movzbl
das
outsl
jnp
je
inc
jmp
cmpb
mov
pop
or
jbe
inc
or
ja
xor
add
mov
cmpsb
push
push
xor
cmp
sub
mov
hlt
xchg
cmp
je
cmp
je
inc
out
jne
pop
lea
add
dec
filds
xchg
clc
cmp
outsl
jnp
mov
or
cmp
std
cmp
je
push
push
cmp
aas
dec
and
cld
mov
das
push
cs
pushl
js
pop
jge
outsl
ja
pop
add
aaa
jne
pop
incl
mov
sbb
movl
mov
mov
xchg
mov
ja
dec
clc
fnstsw
mov
cmp
dec
mov
mov
push
mov
mov
push
lahf
gs
ja
imul
mov
fwait
das
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
movsl
insl
jae
mov
sbb
sub
lods
add
jne
jecxz
or
mov
sub
jge
sub
and
loope
fwait
inc
mov
inc
cmp
sub
cmp
sbb
sub
add
mov
inc
inc
mull
or
jmp
or
andb
inc
inc
arpl
add
sub
sbb
mov
inc
and
js
imul
or
jne
dec
mov
mov
pop
cmp
cmpsl
cmp
fcomi
xor
sub
std
add
arpl
enter
adc
add
out
fisttps
scas
rcl
test
pop
jne
inc
inc
jmp
xchg
mov
test
and
or
lods
inc
mov
jmp
push
xchg
or
sbb
sete
mov
shr
mov
dec
test
push
pop
inc
mov
jne
mov
cmpsl
dec
cmpl
or
insl
je
minps
sbb
test
es
pop
sbb
inc
popa
xlat
out
add
shlb
mov
mov
shlb
outsb
or
sti
pop
ret
dec
or
aam
mov
fildl
rcl
ffree
test
add
iret
popl
test
dec
jnp
aam
adc
pop
inc
inc
into
pushf
cmp
add
lretw
les
popf
lret
or
mov
ret
push
jae
push
shr
in
inc
inc
or
jne
push
mov
das
nop
cmp
clc
mov
pop
mov
mov
insb
xor
pop
fcmovnu
xchg
xor
je
sbb
mov
and
and
ret
daa
pop
or
cltd
imul
jne
movsl
test
je
pusha
mov
je
inc
cmp
add
sub
mov
xchg
outsb
sbb
push
into
stos
sti
jmp
mov
xchg
dec
mov
cmp
xor
jmp
pop
pop
dec
in
imul
or
popa
addr16
pop
xorl
loopne
lea
mov
jae
outsl
add
andl
mov
movsl
testl
and
pop
jmp
and
mov
shr
iret
inc
cmp
in
or
cmp
fidivrl
mov
jl
mov
jnp
pop
addr16
mov
outsb
int
push
cmp
xorl
add
pusha
imul
pop
pop
jnp
imul
orb
std
jl
jmp
mov
adc
jle
mov
cwtl
push
mov
cmp
test
xor
or
push
and
rol
ja
mov
or
shll
fidivl
pop
mov
mov
push
in
add
inc
cmp
jl
pusha
xchg
clc
cmp
cmp
decl
ss
push
sub
das
enter
jmp
ret
dec
neg
sbb
ss
andl
or
or
ret
ds
pop
mov
jle
or
jne
or
add
addb
jl
dec
jge
jo
ret
pop
test
outsb
fdivl
mov
mov
jns
int
jnp
sub
sbb
sbb
cmp
test
adc
pop
lea
or
xor
inc
adc
insl
insb
insb
add
xor
fwait
popf
mov
adc
data16
les
jne
mov
aas
xchg
sbb
xchg
insb
es
push
pop
adc
adc
cld
sub
add
ret
mov
lods
push
pop
push
incl
pop
fistl
dec
mov
mov
test
nop
or
ret
imul
mov
daa
mov
pop
aad
out
pusha
add
inc
add
fs
out
mov
mov
imul
ficoms
adc
incb
fs
sbb
push
mov
arpl
test
sub
jbe
outsl
fcompl
jp
mov
pop
jl
jae
adc
clc
mov
sub
push
or
jle
ret
popl
fs
jmp
cmpl
mov
sbb
push
or
push
test
sbb
pop
jecxz
add
or
dec
push
or
lods
imul
ret
int3
push
inc
xor
pop
loopne
sbb
inc
xor
mov
or
fmuls
in
adcb
cwtl
ss
inc
adc
and
jnp
shll
mov
call
inc
push
push
lea
test
pop
pop
inc
or
mov
js
and
add
sub
ret
insl
fidivrs
mov
push
or
or
mov
mov
jmp
mov
jmp
pop
or
pop
push
xchg
jbe
or
sub
sbb
xor
dec
loope
loopne
lods
sysexit
xor
lock
mov
add
and
jmp
ss
jge
fcomps
call
into
sub
xor
mov
push
inc
inc
mov
mulb
icebp
shl
cmp
jmp
xchg
call
inc
aaa
adc
test
jne
icebp
lea
cld
sti
test
xchg
sub
xor
adc
push
sub
in
add
push
outsl
in
in
or
pop
gs
sub
or
push
clc
or
ljmp
loopne
xchg
sbbb
inc
adc
jne
sbb
rcrl
ds
push
adc
and
fsubrs
pop
pop
sub
adc
imul
fisttpll
push
movsl
jge
pop
fcomps
nop
jl
mov
stos
or
enter
push
pop
jb
push
subl
pop
pop
jne
push
push
push
clc
mov
adc
lods
cmpl
pop
lods
add
in
outsb
jl
stos
aaa
mov
test
push
arpl
pop
xchg
sbb
fsubrs
adc
pop
sub
mov
ret
loopne
mov
adc
ret
pop
outsl
push
movzwl
stc
jns
aad
add
ss
jno
mov
pop
adc
cwtl
pop
add
or
fmull
push
stc
sbb
pop
mov
je
or
xor
pusha
push
call
js
mov
cmp
popa
and
andl
jmp
cmp
rep
stos
mov
jbe
arpl
dec
out
mov
ss
jbe
push
popa
call
lds
push
and
out
push
testl
stos
lea
jno
cmpb
lret
je
mov
mov
add
xchg
ja
adc
mov
aam
mov
jbe
inc
inc
cmpb
aam
sbb
aad
ret
sbb
xlat
jb
fs
fisubs
lods
push
mov
out
ja
das
mov
movsl
movsl
pop
mov
inc
pop
add
jns
jno
gs
std
hlt
or
xchg
jb
push
cmp
mov
push
jmp
and
lock
jmp
jo
inc
xchg
cs
shrb
or
jecxz
and
or
pop
jb
inc
lahf
inc
sub
mov
adc
pusha
cltd
xchg
std
mov
mov
lods
push
cld
mov
aaa
nop
addl
sub
insb
addr16
mov
or
pop
ret
push
jno
shrb
inc
or
add
in
mov
icebp
lods
pop
xchg
rorl
push
push
shl
jle
sarb
decl
jb
mov
movb
add
outsl
rorl
or
and
jmp
sub
test
fnstsw
shr
test
and
rep
inc
inc
mov
hlt
fildl
xor
rcrb
push
in
cli
mov
fnstcw
push
mov
popf
mov
lods
test
and
sbb
fwait
dec
push
xor
sbbl
dec
pop
daa
jmp
pop
lret
jb
mov
test
push
add
mov
out
pushf
mov
je
and
jecxz
add
mov
add
insl
cwtl
jo
jmp
adc
in
divb
enter
mov
in
insl
pop
sbb
ja
and
lods
shr
and
dec
dec
mov
add
push
inc
mov
rolb
mov
push
jbe
mov
adc
or
daa
pop
imul
or
insl
mov
jo
int3
add
pop
jmp
lea
mov
imul
add
add
cmc
jg
lret
cmp
jne
mov
mov
xchg
lock
add
inc
add
jle
cld
and
lods
push
mov
add
int
pop
jmp
add
jmp
xor
jmp
cld
pusha
or
sbb
rcr
sub
mov
inc
out
jmp
mov
bound
add
outsb
imul
loope
xor
stc
daa
test
sbb
pop
push
cmp
mov
jmp
mov
mov
adc
sub
jo
aad
jl
xchg
xchg
loop
ja
mov
shlb
lret
xchg
add
jmp
sub
push
ja
jge
push
or
sub
fincstp
ret
xor
add
test
jge
pop
jle
xorl
outsl
outsb
adc
xchg
adc
leave
dec
jae
and
inc
and
insb
pop
sub
ret
or
std
mov
das
enter
jmp
aad
sub
test
lret
mulb
sub
in
jb
in
lret
test
loop
push
mov
mov
movsl
jmp
mov
jne
loopne
fldt
enter
pusha
push
lea
pop
cmpsb
jmp
jbe
nop
add
add
mov
imul
sub
inc
add
jnp
mov
mov
int3
lea
sub
mov
and
cmpsb
jl
fldenv
and
inc
aas
mov
aas
add
or
or
mov
inc
lcall
pmulhuw
call
cmpsb
imul
or
cmpsb
clc
clc
cld
jge
mov
aam
xabort
andl
pusha
insb
addb
pop
lds
add
insb
adc
xor
sub
cmp
jg
insl
das
sbb
js
and
gs
dec
imul
leave
leave
stc
sub
and
nop
or
or
add
add
outsl
mov
dec
pop
dec
push
mov
outsb
aam
sbbb
stos
out
add
mov
stc
sub
pop
adc
xlat
sub
pop
push
xchg
add
xor
pushf
movsb
lods
mov
les
xor
xlat
xchg
sbb
sbb
xor
shll
adc
adc
xor
rorl
or
dec
xlat
sbb
add
jns
pop
adc
mov
and
xchg
xchg
adcl
xor
pop
or
imul
es
ljmp
adc
add
pusha
xor
mov
push
or
and
push
sub
js
push
jle
pop
sbb
push
subps
mov
jmp
std
addb
xchg
ss
sbb
insb
mov
push
nop
and
mov
adcb
mov
sbb
mov
xchg
jbe
mov
mov
or
push
and
pop
or
test
jnp
imul
sub
add
adc
loopne
mov
pop
jp
cld
push
shr
jns
cld
adc
outsb
loop
leave
add
dec
mov
mov
das
sub
inc
dec
dec
or
idivb
call
clc
jne
rcrl
mov
iret
jbe
ret
dec
adc
add
lods
aam
inc
adc
sbb
pop
push
out
les
xlat
and
js
clc
jl
inc
decb
sub
cmp
and
loopne
pop
jae
push
sub
fsubl
jns
push
adc
adc
sbb
or
add
lods
scas
add
icebp
aas
jnp
mov
mov
pop
das
mov
mov
mov
adc
imul
pop
cmp
cmpsb
jbe
repz
outsb
sbb
sti
inc
ds
jbe
cli
mov
mov
cs
push
mov
and
and
jl
mov
mov
insl
mov
mov
push
xchg
add
adc
test
or
xor
xlat
mov
lea
or
mov
pop
mov
xor
dec
arpl
mov
mov
pop
add
jg
paddd
mov
imul
mov
jae
scas
cmovbe
mov
jmp
mov
or
sbb
sub
lea
fdivl
and
pop
push
or
mov
sbb
pop
adc
ds
dec
inc
xlat
xor
mov
fisttps
idivb
insb
shl
add
push
xchg
bound
push
push
call
pop
xor
push
jnp
sbb
push
or
cmp
sbbl
insb
push
paddd
or
testb
andl
adc
pop
dec
jne
sub
jo
pop
adc
push
mov
or
in
xor
repnz
xchg
cli
out
sub
sub
lea
push
push
not
fs
mov
nop
cmp
lea
test
mov
inc
mov
dec
add
clc
in
in
adc
sub
dec
pop
fcmovbe
popa
fidivl
pop
push
xor
push
jb
test
in
decl
es
or
test
push
or
clc
add
mov
jae
mov
cmp
scas
jno
mov
iret
jne
clc
adc
lcall
out
jne
mov
cmp
es
insl
jmp
sbb
and
push
jnp
and
into
sub
jmp
add
fimuls
push
jmp
insl
sbbb
test
mov
xor
mov
aaa
loopne
lcall
jmp
test
mov
cli
dec
sub
ret
mov
mov
mov
push
push
push
fisttpll
push
in
or
inc
or
mov
jne
xchg
adc
sbb
push
and
or
je
mov
mov
pop
pop
dec
jbe
push
std
fistps
pushw
fs
test
jl
shl
inc
jmp
mov
push
inc
or
jg
jnp
cmpsb
or
aas
jle
pop
aam
dec
out
fwait
or
push
adc
imul
push
mov
in
and
mov
decb
jne
fidivs
and
jmp
pop
sub
push
sbb
ss
adcb
scas
push
gs
sarb
xchg
es
or
fstpt
jl
inc
or
and
jmp
push
decb
jge
notl
or
mov
bound
fs
mov
cmp
jmp
xchg
mov
push
jmp
mov
lods
push
mov
shrb
mov
mov
mov
cld
mov
xor
xlat
and
adc
mov
xor
lahf
mov
and
ljmp
mov
push
adc
in
inc
add
add
pop
outsl
rol
pop
push
lret
xor
nop
mov
cmpsb
push
jb
xchg
push
xchg
rorl
cwtl
cmp
je
pushf
push
ret
das
mov
cmp
loopne
inc
lods
inc
xor
stos
xor
loopne
add
mov
je
push
and
call
sbb
mov
loop
fs
jl
mov
lds
bound
test
shr
pop
fildll
push
jno
inc
or
fcmovnb
outsb
xor
dec
loopne
ret
aaa
imul
xor
inc
or
add
dec
push
sti
test
out
jl
pop
fistpll
mov
addb
leave
in
mov
daa
addb
xchg
add
insl
mov
cmp
inc
ja
repnz
hlt
lea
cld
lock
fisttpll
push
out
jmp
call
dec
out
add
mov
add
xchg
es
.byte
lods
std
mov
in
add
imul
mov
imul
pop
add
sub
mov
mov
outsl
mov
clc
push
adc
add
or
or
idivl
sub
movl
mov
xor
in
in
pop
sbb
add
mov
lret
or
sub
imul
cmp
idivb
cmp
bswap
add
cmp
mov
arpl
aas
sub
mov
mov
add
pop
add
sub
mov
push
sub
mov
testb
mov
cli
adc
or
call
leave
add
mov
repnz
adc
push
into
mov
sub
add
mov
pop
mov
fbstp
add
mov
pop
insb
mov
sahf
and
aad
arpl
sti
pop
imul
mov
ljmp
adc
imul
add
jmp
push
pop
mov
ret
adc
mov
test
je
add
add
into
pop
pop
add
rclb
or
lods
jge
add
pop
rorb
das
or
lock
mov
inc
lcall
mov
fistpl
or
imul
mov
push
mov
add
mov
ret
leave
mov
loopne
pop
or
mov
adc
sub
sub
fsubrl
mov
add
or
jmp
std
cld
inc
cs
cmp
cmp
add
into
or
ret
mov
pop
or
cmp
dec
rolb
fcmovnbe
sbb
movsl
sbb
sbb
lods
lds
xchg
lods
add
ret
lock
cmp
icebp
mov
ffreep
ret
mov
insb
into
out
out
xor
or
rclb
or
sbb
inc
sti
or
mov
sub
flds
or
jle
mov
lret
mov
shrb
shrl
cmp
adc
or
add
mov
popa
imul
das
add
adc
insl
pop
cmp
nopl
xchg
mov
into
outsl
mov
movsl
adc
xchg
mov
imul
ret
or
in
xor
pop
in
xchg
mov
insb
test
sbb
or
mov
negb
lret
shr
sbb
add
fmull
ret
or
mov
leave
or
lahf
mov
sbb
shlb
cli
adc
ret
data16
inc
adc
movsl
inc
popa
jnp
ljmp
mov
mov
xor
imul
fisttps
sti
data16
xchg
call
ljmp
or
sbb
int
push
cld
ret
pop
js
cmp
sbb
ret
mov
ret
mov
int
leave
mov
xor
push
aaa
and
fldt
add
mov
fcoms
mov
mov
mov
dec
seto
sub
call
scas
cld
jbe
mov
mov
cltd
call
rcr
dec
shrl
pop
mov
enter
sbb
push
and
mov
push
clc
add
fwait
arpl
clc
sbb
inc
call
jmp
mov
pop
andl
rorb
or
aad
adc
pop
add
ret
sbb
jmp
decl
jle,pt
dec
fisubrs
xor
in
insb
sbb
adc
sub
je
aam
sbb
mov
insb
fldl
mov
sti
lds
mov
and
sbb
mov
mov
xor
add
test
stos
icebp
pushf
clc
adc
mov
cmp
ljmp
sbb
or
dec
xchg
push
adc
mov
sbb
rolb
lahf
xchg
pop
xlat
cltd
out
adc
mov
jle
lock
xor
or
sbb
or
lods
push
push
lahf
into
mov
pop
out
adc
mov
stos
loope
mov
add
mov
or
mov
sbb
mov
mov
adc
and
in
xor
mov
add
add
mov
xchg
pop
inc
in
jno
or
mov
ljmp
xor
pop
rcrb
adc
sbb
adc
sbb
jnp
mov
stc
push
dec
leave
and
mov
or
cs
add
hlt
aam
dec
out
dec
shlb
shll
sar
or
pop
sub
fisttpl
adc
rolb
inc
add
inc
add
inc
sar
adc
pop
ret
xor
push
push
pop
outsb
xor
int
add
jl
scas
insl
fistpl
dec
adc
add
jmp
xor
aas
lock
clc
or
push
pop
fisttpl
sbb
sub
or
roll
push
rorl
or
repz
pop
ljmp
fsub
adc
outsb
into
lock
pop
push
push
mov
popa
adc
push
cli
or
cmp
mov
inc
fisubs
loope
pop
pop
jnp
icebp
mov
lock
mov
mov
in
cwtl
jo
fwait
hlt
mov
pop
mov
sbb
jbe
sub
mov
xlat
add
mov
sarb
pop
push
add
or
mov
adc
sbb
js
loope
mov
jns
xchg
xor
jl
adc
jecxz
add
leave
jo
mov
or
ret
out
mov
fsts
cmpb
pop
and
aaa
lock
push
push
lock
xor
dec
enter
int
xor
add
sub
or
push
or
mov
xor
clc
xchg
repz
pop
insb
sbbl
jbe
xor
inc
xchg
test
leave
adc
leave
inc
rol
das
fwait
inc
bound
es
lahf
xor
aam
sub
sbb
stc
xchg
add
or
rclb
fwait
imul
add
and
test
in
fisttpl
cmc
pushf
inc
popa
jae
cmpsb
minps
pop
out
sub
pop
xorl
rol
push
cmp
cmpsl
int
pop
inc
mov
test
add
pop
popf
es
mov
fmuls
push
enter
mov
adc
sbb
xor
jo
xor
stos
aad
add
outsl
out
sbb
or
jno
pop
mov
pop
hlt
mov
inc
pop
fcomps
pop
and
int
mov
inc
adc
add
xchg
in
add
fistpl
xor
sbb
cmp
adc
inc
mov
ret
jle
cmp
fistl
je
jmp
scas
jl
shlb
pop
or
shll
xor
or
insl
call
ljmp
aaa
stos
sub
or
push
loope
std
arpl
shll
movsb
adc
les
mov
fidivrl
fcomp
into
push
lock
rcll
pop
pop
pop
stc
add
fs
lcall
test
sahf
dec
mov
les
ja
jmp
xor
popa
test
ljmp
cmpsb
fidivrs
xchg
bound
jbe
xchg
or
daa
rclb
mov
push
ret
push
es
and
mov
jae
ds
sti
movsb
es
rcrl
adc
hlt
add
addl
in
sbb
adc
xchg
aaa
jmp
or
decb
push
jo
mov
dec
outsb
or
inc
lock
sub
sbb
insb
push
cmpsl
dec
ljmp
imul
addr16
sbb
je
sbb
loope
mov
push
or
insb
scas
dec
mov
adc
or
aad
dec
sub
leave
int3
inc
pop
testl
popa
mov
mov
insl
adc
or
xchg
mov
inc
cmp
mov
or
jge
or
leave
or
pop
mov
xor
jnp
leave
in
enter
int
int
mov
out
add
shr
enter
mov
xchg
mov
xor
imul
mov
shll
adc
psllw
jnp
mov
mov
dec
lret
adc
mov
pop
adc
xor
dec
push
pop
mov
dec
mov
sbb
mulb
lret
xorl
arpl
test
push
jne
adc
rolb
ja
and
hlt
subl
push
movsb
xchg
mov
push
movsl
push
imul
mulb
bound
xorb
mov
mov
add
jae
mov
in
mov
rcl
xchg
sub
popf
into
lret
sub
add
mov
psubw
pusha
jbe
cmp
push
mov
out
add
cmp
rolb
mov
xor
icebp
cmp
push
adc
outsl
jo
cmp
pop
ret
inc
jmp
sub
inc
int3
mov
fimull
sub
sub
cmp
mov
leave
xor
pop
mov
movsb
adc
mov
enter
adc
lea
out
pop
sbb
adc
adc
repz
push
adc
stc
push
add
inc
cmp
sub
mov
lcall
inc
scas
mov
adc
lgs
sbb
aaa
call
mov
insb
ja
ljmp
or
jns
adc
std
imul
or
shl
add
xor
adc
rcrl
add
cmp
push
call
movsb
jp
adc
nop
xor
or
and
test
push
clc
lcall
inc
push
pop
or
push
jo
movb
cmp
cmp
not
fcomip
pop
push
lcall
add
xor
push
mov
mov
movlps
push
fdivl
lret
sub
js
jnp
lods
mov
icebp
ret
mov
push
push
inc
shlb
loopne
jp
out
add
fld
in
push
jl
out
mulb
lock
out
mov
inc
push
fs
xchg
rorl
push
adc
lock
inc
sub
in
jbe
fldt
cmpl
cmp
cmpsl
xlat
jbe
nop
sub
add
sbb
sbb
sbb
adc
lcall
adc
call
jmp
je
xchg
jnp
lret
call
das
cmp
mov
sbb
pop
insb
shll
adc
mov
fucomip
mov
cs
lret
or
clc
ja
adc
push
adc
inc
enter
jo
push
fwait
or
or
bound
sub
inc
push
and
push
aas
push
xor
or
add
sarl
mov
stos
sbb
cmp
cmp
shrl
daa
xchg
push
movsl
or
inc
call
push
pop
cmp
sub
jecxz
mov
loope
xchg
shll
mov
shr
xor
or
xor
push
fs
inc
mov
insb
stos
enter
xor
pop
push
push
sarb
push
mov
je
or
sbb
rorb
pop
xor
jg
cltd
push
mov
orl
fcomps
out
ret
add
push
add
aam
sbb
mov
pop
cmpsb
adc
rclb
mov
adc
subb
sub
xor
cmc
lret
leave
in
adc
int
fldt
lock
lahf
sbb
xlat
aad
loope
lods
fcmovbe
cmp
scas
ss
cmp
push
pop
cwtl
ljmp
lods
mov
sarb
mov
jl
mov
fwait
xchg
adc
jl
scas
rorl
xchg
test
mov
cmpsb
push
mov
add
push
xchg
push
cltd
or
ret
in
or
push
add
ljmp
loop
dec
loope
sbb
push
sub
ret
out
push
cltd
xor
aas
outsl
mov
loopne
cmp
mov
inc
sub
inc
add
pop
cmc
cmc
adc
int
loope
push
add
push
jl
add
xor
push
leave
mov
adc
outsb
jo
fcompl
ljmp
mov
add
sbb
ret
lea
push
rolb
push
xchg
inc
and
dec
add
push
cmovge
jecxz
fs
or
enter
popa
cli
cs
push
sbb
rorb
and
mov
push
adc
clc
rolb
rcll
in
shl
mov
xor
jne
clc
inc
shrb
movsb
lods
push
jmp
arpl
or
mov
hlt
in
out
dec
loopne
scas
and
push
lea
add
sub
push
movsb
leave
push
adcl
mov
mov
add
jbe
dec
and
push
pusha
add
sbb
mov
cmp
sub
popa
inc
in
pop
sbb
add
adc
cs
invd
inc
adcb
popa
orb
frstor
xor
dec
pusha
adc
out
sbb
mov
mov
push
andb
bound
xlat
aad
data16
call
add
shlb
jge
repnz
imul
loope
cs
cs
jns
int3
aaa
pop
jb
or
inc
movsb
xor
cmpsl
es
jae
mov
mov
push
leave
sbb
outsl
sarb
aad
iret
inc
push
sahf
cmp
sub
mov
divb
scas
mov
sti
imul
xchg
inc
sbb
fidivrl
mov
scas
dec
setb
into
inc
or
fcoml
fildl
mov
adc
iret
ljmp
popa
sub
adc
packsswb
or
cmc
fcmovb
clc
rclb
xchg
sub
es
mov
cmp
into
push
icebp
cmp
bound
sbb
fiadds
shlb
mov
mov
psubsb
mov
les
pop
ret
pop
movsl
add
cmp
xor
jo
pop
and
fists
xor
mov
pop
fbld
or
xchg
mov
imul
mov
stos
scas
push
pop
sbb
int
push
in
fdivs
ret
shlb
adc
or
add
push
roll
pop
add
dec
adc
and
sbb
dec
mov
pop
add
adc
adc
rcrb
xchg
loop
inc
inc
pop
movsl
sub
push
movsl
movzwl
sbb
sbb
lds
or
lods
cwtl
push
testb
rorl
adc
roll
mov
mov
insl
add
enter
lret
std
push
shrb
js
mov
imul
pop
mov
lods
inc
pop
ss
scas
dec
aam
pop
mov
mov
pusha
mov
jo
ret
into
call
or
or
fstpl
stos
movzwl
cmp
mov
push
sbbl
stc
cmpsl
aad
mov
push
movsb
adc
push
out
icebp
pop
adc
mov
jo
aam
pop
stos
adc
gs
xchg
notb
je
sub
xchg
shlb
stos
jbe
mov
movsl
push
mov
fadds
sbb
mov
and
mov
pop
dec
push
mov
adc
jl
mov
daa
mov
pop
sub
out
insb
mov
clc
popa
test
xor
pop
cmp
and
inc
out
hlt
mov
xchg
dec
cmp
jge
pop
subl
mov
or
cmp
and
dec
jmp
cmp
sbb
pushf
and
popf
int3
test
inc
push
testb
add
sbb
or
add
roll
jnp
adc
addl
addl
lock
or
je
cmpl
imul
ljmp
add
push
push
mov
lret
pop
scas
js
lods
lret
cli
adc
xchg
cmpl
pushf
jmp
inc
test
ficoms
mov
add
add
adc
mov
push
pop
jae
test
jecxz
sbb
stc
aad
cmp
mov
addr16
dec
push
adc
push
es
pop
and
inc
lock
push
test
push
mov
adc
sbb
mov
sbb
imul
ljmp
mov
inc
fs
pop
mov
bound
ret
sub
js
adc
push
jns
fdivrl
mov
mov
adc
shlb
push
add
test
lcall
mov
ret
inc
and
popf
mov
adcl
sbb
call
ds
push
mov
test
sbb
out
adc
xchg
sahf
int3
inc
inc
gs
push
adc
and
mov
jmp
lret
inc
daa
sub
and
test
adc
ljmp
sbb
mov
mov
and
add
daa
xchg
aad
dec
mov
xor
inc
rolb
loope
rcrl
in
add
pop
lock
cmpsb
sub
call
lods
insl
std
push
scas
xor
leave
movsb
es
or
shll
push
cs
mov
adc
ljmp
jge
mov
add
cmp
add
cltd
and
add
mov
add
sbb
push
inc
adc
lods
xchg
je
jae
lods
or
adc
cmp
sbb
mov
mov
or
add
int
pop
test
lcall
pop
rcll
subb
ljmp
mov
pop
inc
jmp
push
outsb
jb
mov
push
adc
pop
jb
jae
push
mov
enter
push
and
mov
pop
pop
push
ret
inc
push
outsb
movaps
jne
jns
icebp
andb
jno
pop
cmp
sbb
pushf
shlb
push
mov
adc
data16
xchg
jle
mov
fiaddl
addb
add
js
push
mov
test
bound
andb
pushw
cmp
push
out
jo
rorb
popa
mov
jnp
cmp
lret
or
into
je
lahf
shr
mov
xchg
pop
xlat
popf
test
test
sbb
in
adc
mov
rcpps
popa
jae
mov
push
sub
cmp
cli
xchg
mov
mov
jne
into
or
sbb
inc
add
cmp
jmp
mov
jg
xchg
dec
push
push
adc
sbb
jl
adc
adc
stos
int
scas
gs
or
adc
lret
call
push
mov
add
sub
jo
mov
push
and
addl
inc
push
rorl
rolb
mov
les
add
and
push
push
movaps
out
data16
stos
fldl
aas
push
call
inc
rcll
and
and
jp
rclb
xchg
sub
sbb
dec
sbb
jae
es
dec
sbb
add
xchg
dec
daa
vunpckhps
sbb
in
or
repnz
jl
add
mov
jmp
jo,pn
xor
mov
cmp
push
push
push
pop
xchg
xor
out
notl
adcl
in
in
add
jne
ljmp
xchg
jo
sbb
and
daa
push
add
add
xchg
aad
or
push
loope
xor
imul
lea
dec
ficompl
rclb
or
mov
cmc
popa
aad
sbb
les
xor
inc
test
jmp
stc
adc
cli
sub
fnstenv
xlat
jbe
inc
add
or
or
daa
add
dec
sbb
push
mov
xchg
cmp
dec
in
into
testb
push
repz
daa
inc
jge
call
inc
sub
cmpsl
or
jo
push
jge
sbb
leave
xchg
movsl
sbb
pop
sbb
inc
ret
out
out
sub
in
jno
jmp
mov
enter
adc
inc
mov
push
clc
call
addb
push
adc
add
dec
adc
sbb
subb
lods
add
pop
insl
or
pop
mov
or
jo
aas
shlb
push
ja
cli
pop
div
lods
push
push
ja
mov
and
push
aaa
xchg
js
scas
test
out
adc
cli
rorb
loop
add
add
sbb
sarl
rorl
cwtl
test
and
cwtl
jo
push
jo
mov
adc
xor
pop
mov
pop
in
add
ja
cmp
loope
aad
lods
mov
or
jb
add
fs
leave
sarl
jp
psubusb
icebp
cmpsb
dec
adc
push
push
adc
les
in
ljmp
js
pop
mov
or
add
jmp
jg
and
icebp
jno
xlat
or
fadds
mov
ret
cmpsb
fiaddl
addb
daa
ficompl
insl
testl
sub
ja
shrb
push
xor
jmp
mov
fs
scas
movsl
test
mov
adc
cmpsl
ret
mov
cmpb
ret
test
dec
dec
popa
sbb
add
shlb
pushf
std
inc
scas
dec
mov
dec
mov
mov
test
sbb
sub
inc
jae
adc
mov
or
into
cwtl
ret
es
or
cwtl
or
sbb
mov
test
lcall
flds
adc
mov
sub
xor
ss
loopne
xchg
or
add
dec
movhps
mov
or
jg
xchg
sub
fwait
or
lret
inc
cmp
repz
mov
aaa
inc
mov
adc
jne
call
push
jge
call
mov
push
jg
fimull
shr
es
jb
sub
push
into
loop
das
sub
arpl
xorl
add
mov
adc
pop
cmp
push
popf
rol
nop
sbb
xor
dec
jnp
rol
andb
test
sub
push
and
idivl
test
mov
gs
pop
xor
adc
lds
lods
sbb
inc
ljmp
jmp
mov
add
sub
inc
sbb
adc
addb
and
roll
lods
icebp
scas
adc
mov
arpl
aad
aad
xor
enter
pop
push
rorb
lret
nop
xchg
dec
in
shlb
stos
aad
push
inc
loope
sub
or
comiss
mov
sbb
stos
pop
je
gs
into
inc
jne
push
push
push
sub
jo
adcb
jge
pop
cltd
movsl
mov
lret
sbb
jp
jecxz
xor
push
push
addr16
popf
push
mov
or
or
push
push
test
into
int
cwtl
pop
and
mov
lret
jmp
scas
push
or
cmp
rcll
andl
ret
cmc
add
cltd
or
getsec
in
push
or
addr16
int3
pushf
or
adc
adc
or
cmpsl
inc
xor
and
aad
shl
and
inc
test
inc
push
xor
lea
ficoms
push
push
and
inc
xor
rcrb
je
pop
enter
sbb
pop
notb
add
dec
or
testl
cli
push
jne
push
dec
sub
add
shll
fldenv
dec
add
inc
mov
sub
add
sbb
adc
aam
int
and
ret
push
jb
cmp
xorl
cmp
ret
andb
adc
dec
insl
das
cmp
clc
js
or
adc
add
mov
es
and
pop
movsb
add
scas
and
fcom
sub
jb
test
jle
add
lcall
or
add
or
das
mov
inc
jnp
sub
sbb
jno
cmp
fmuls
subb
outsb
push
popa
movsl
pusha
push
xchg
int3
mov
inc
jo
rolb
or
into
cld
push
push
cmp
call
mov
xchg
clc
pop
xchg
ljmp
add
pop
in
cmp
lds
into
cmp
shl
ret
repz
mov
cmp
mov
imul
das
xor
cmp
push
filds
adc
test
ret
inc
loopne
mov
cmp
jne
xor
sub
lahf
out
cmp
jp
mov
mov
adc
push
adc
jp
or
ret
mov
in
lock
xchg
jae
inc
push
shlb
adc
lret
adc
shlb
push
and
mov
and
mov
fsubp
fnstsw
es
les
ljmp
sahf
sbb
push
push
or
pop
inc
lret
adc
and
sbb
das
pop
rcll
lret
adc
push
fimull
inc
xor
push
push
xor
adc
in
or
mov
jo
inc
adc
cmp
lods
testb
add
jne
add
pop
mov
or
adc
es
inc
sub
dec
popf
int3
popa
pusha
push
add
add
push
rolb
cmp
or
pop
mov
iret
add
sub
mov
xchg
out
loop
cmp
or
adc
push
cs
inc
roll
lahf
filds
push
scas
cmp
adc
mov
dec
adc
or
or
xor
popa
jo
clc
inc
cmp
push
inc
mov
and
push
and
inc
movsb
aaa
test
stos
mov
cltd
rclb
mov
addr16
arpl
fwait
push
aas
push
push
push
jne
sbb
jne
jo
and
push
sarb
xchg
icebp
loopne
xchg
add
repnz
xor
xchg
inc
dec
mov
insb
ljmp
or
sub
movsl
xor
cwtl
and
inc
loopne
orl
bound
xchg
sbb
lret
loopne
popf
and
push
cmp
add
jb
in
dec
gs
cmp
jo
cltd
nop
push
sub
add
mov
mov
and
insb
adc
push
jne
or
into
into
push
out
push
mov
jecxz
jnp
cmpsb
loop
add
cs
xchg
push
aas
icebp
xchg
mov
pop
push
xor
cmp
jne
add
mov
in
aam
roll
xor
push
cmp
push
adc
pop
add
frstor
jo
loop
sub
or
push
jne
mov
or
adc
add
or
pop
mov
pop
or
ret
jb
push
push
rclb
ljmp
sub
lret
xchg
imul
jge
mov
int
int
jecxz
push
add
ljmp
stos
inc
cmp
in
xor
enter
movsb
or
pop
dec
cli
pop
orl
test
mov
shll
xor
or
scas
dec
or
imul
fadds
xchg
cmpl
aaa
jp
inc
dec
stos
dec
lds
aaa
inc
aaa
pop
or
shr
les
jmp
xchg
pop
sub
lock
stos
adc
out
ficoml
into
imul
pop
adc
adc
mov
sbb
sahf
adc
arpl
inc
pusha
orb
sbb
inc
aaa
jnp
jp
fadds
lret
movsl
cli
cmp
inc
out
add
adc
adc
pusha
add
call
sub
popa
cmp
or
ljmp
push
pushf
mov
pop
or
xlat
out
clc
call
mov
push
push
in
xor
aam
jg
je
popl
rclb
sub
mov
dec
sti
leave
pushf
mov
enter
mov
or
repnz
testb
adc
out
lock
test
push
xor
push
jae
lret
xchg
and
or
sub
int
xchg
jmp
jno
push
sub
cltd
xor
pop
cli
or
pop
jno
test
icebp
and
enter
dec
xor
push
aam
push
cmp
xchg
shll
mov
cwtl
mov
push
repnz
andl
movsl
push
sub
and
loopne
add
push
sbb
sub
push
cmp
mov
icebp
push
cltd
mov
push
rolb
fiaddl
pop
push
cmpsb
add
lcall
shl
enter
dec
jno
pop
arpl
dec
int
xchg
cltd
dec
mov
mov
adc
cmp
ret
nop
ret
rclb
popf
cmp
add
shll
pop
ficoms
fiadds
push
push
xor
push
or
xor
mov
and
ljmp
mov
cmp
cmp
push
leave
or
clc
outsl
movb
xor
call
loope
imul
push
shlb
arpl
mov
jns
pop
fs
ljmp
and
rcl
adc
push
pop
push
sahf
sbb
and
inc
dec
inc
and
cmpsb
adc
xor
or
ficoml
cltd
out
sbb
movsl
inc
add
popf
aad
adc
sahf
sub
push
cmp
pop
icebp
push
aam
imul
mov
mov
mov
pop
or
rcrb
jne
and
shlb
or
ret
jno
add
pop
or
shrl
inc
push
sub
lret
ljmp
pop
icebp
adc
sub
dec
and
pop
clc
xor
lds
lret
lcall
stos
sbb
mov
nop
in
outsb
mov
test
push
cld
mov
stos
add
mov
scas
and
adc
aad
and
xchg
sbb
push
mov
adc
and
call
xorl
bnd
fmuls
push
jp
mov
shlb
push
push
shrb
ljmp
push
in
fisttpl
adc
and
and
lahf
leave
inc
push
cmp
pop
pop
inc
ret
scas
push
add
ret
mov
push
pop
or
adcb
pushf
or
sbb
xchg
leave
mov
push
aad
adc
inc
lcall
test
rorb
add
adc
mov
cmp
test
or
mov
sub
cmp
mov
cmp
daa
in
into
mov
imul
dec
adc
or
repnz
push
loopne
adc
dec
vorps
or
xchg
cmp
cmp
lret
or
mov
testl
sbb
orb
iret
mov
mov
sarl
or
push
mov
insl
stc
push
fisttpl
mov
add
mov
jnp
xchg
or
insl
popa
nop
jo
int
adc
scas
and
cmc
stc
add
xor
idivb
leave
xlat
jg
xor
dec
push
out
jle
mov
and
xchg
ret
icebp
xchg
popa
out
jl
xchg
rcrb
xchg
adc
fidivrl
loopne
and
std
lret
add
or
push
fcomp
test
stc
cmp
push
daa
pop
lods
cmpsl
mov
nop
lret
int3
or
push
divb
test
pop
or
repz
push
mov
sub
test
pop
mov
es
inc
js
pop
and
ret
enter
shll
rcll
std
rorl
pop
or
mov
std
inc
bound
sbb
scas
lret
call
mov
hlt
loopne
pop
stos
nop
xor
jbe
or
xchg
pop
std
sbb
dec
popf
jne
std
cli
adc
and
arpl
or
aam
lret
icebp
cld
add
adc
dec
xchg
pop
xchg
pusha
xor
inc
mov
mov
roll
shlb
inc
lock
jo
les
insl
mov
jnp
push
lods
cmc
push
push
faddl
cwtl
sub
inc
pop
mov
jle
mov
push
dec
shll
in
cmpsl
loope
inc
lret
mov
cs
adc
or
icebp
test
es
push
lret
inc
outsb
iret
or
push
cs
sbb
mov
inc
cmp
mov
test
add
push
pop
faddl
jge
das
insb
inc
adc
loope
iret
adc
mov
adc
fimull
shl
or
out
mov
pop
out
pop
push
dec
fsubrs
rcl
call
lea
xor
sbb
pop
addr16
pop
lods
icebp
xor
rcl
push
dec
push
adc
testl
jmp
jp
inc
push
mov
mov
movsb
call
jo
inc
lret
mov
roll
xchg
pushf
sub
sahf
inc
dec
xchg
adc
add
push
add
sbb
push
pop
das
pop
dec
mov
pop
inc
imul
add
in
rclb
mov
push
jmp
aam
lret
hlt
sbb
cmp
pop
push
ret
pop
sbb
push
mov
inc
push
loopne
mov
mov
pop
fnstcw
mov
mov
mov
adc
xchg
sbbb
es
mov
icebp
subb
test
mov
dec
lret
push
in
adc
stos
pop
sbb
movb
pop
adc
in
add
popf
and
icebp
mov
push
test
ljmpw
out
push
popf
push
push
and
or
xchg
js
sbb
mov
movsl
push
bound
xchg
or
data16
push
addb
shlb
shrl
inc
sub
out
cmp
movsb
ss
rcll
xchg
pop
inc
enter
or
xorl
mov
rclb
sub
fcomp
sbb
ret
pop
int3
sbb
sbbb
mov
xchg
in
stc
faddl
cli
or
sub
out
mov
pop
mov
push
pop
jb
ljmp
xchg
in
add
adc
rcll
addb
jmp
dec
sbb
or
test
fldenv
sbb
lock
mov
leave
mov
in
sub
inc
xorl
adc
popa
ret
add
inc
push
pop
lcall
mov
pop
xorl
or
mov
ficoms
jo
dec
andb
inc
xchg
mov
sbbl
mov
cmp
leave
rcrb
inc
shll
xor
leave
inc
popa
ret
add
lahf
test
mov
pop
xchg
pop
and
in
lods
adc
sbb
or
mov
popa
mov
xor
sbb
insl
xchg
pop
cmp
jne
mov
sub
dec
lret
lods
push
cmp
xor
lea
and
icebp
xchg
test
mov
pop
pop
jno
sbbb
mov
dec
add
or
lret
ret
pop
das
adc
sub
xchg
out
loope
andb
out
popa
xor
scas
push
lods
inc
adc
push
inc
push
inc
stos
arpl
lret
sub
sbb
or
shl
push
xor
inc
cmp
adc
mov
mov
shrl
adc
and
push
xor
aas
cmp
cmpsb
les
sbb
adc
rolb
mov
lret
cmp
divl
test
rclb
push
ret
ret
push
outsl
cli
shrb
push
xor
jp
xlat
add
sub
lret
lock
jb
mov
in
xor
xor
pop
aam
popa
add
pop
jne
in
out
pop
bound
xchg
push
or
pop
add
push
sub
mov
jle
out
adc
sbb
cmc
pop
lret
in
pop
push
dec
sbb
sub
cmp
or
jnp
mov
js
sbb
rcl
push
pop
cld
leave
roll
test
aas
andb
call
fwait
int
hlt
ror
sbb
xchg
or
pop
call
mov
insb
push
insb
pop
adc
xchg
or
adc
je
push
mov
mov
ret
cmp
std
jge
or
test
fisttpl
cmc
jo
adc
mov
rclb
call
sbb
adc
sub
inc
or
jnp
and
sub
enter
or
lea
xor
cmp
enter
iret
pop
mov
movsb
push
leave
inc
xchg
push
xor
add
add
aaa
sub
sub
rcrb
xchg
sub
inc
inc
lods
popa
pop
mov
adc
sbb
adc
ja
xchg
or
pop
aam
stos
ja
mov
mov
call
call
into
rorb
dec
mov
xor
push
shll
xchg
test
inc
lods
daa
jb
int3
rcl
orb
pop
ret
and
incb
push
addr16
clc
inc
aam
push
mov
mov
js
bound
les
je
adc
leave
or
dec
inc
add
push
cs
mov
xlat
dec
sarl
test
sbb
out
mov
or
mov
aam
in
sub
ss
adc
out
enter
add
jne
movsl
rolb
cmp
jmp
call
xchg
xor
adc
hlt
xor
or
std
adc
sub
add
add
push
popa
jb
nop
repnz
mov
lds
push
ret
inc
test
add
data16
xor
cmp
push
js
pop
outsl
rorl
mov
cmp
push
mov
lods
xor
lds
fs
mov
or
rolb
push
orl
shlb
jo
test
xor
lds
push
pop
jge
sub
repnz
call
js
mov
mov
insb
mov
push
push
sub
dec
insl
xchg
push
in
adc
pcmpgtw
mov
outsb
push
aaa
fcmovbe
xchg
roll
test
add
mov
lret
loop
sbb
call
mov
push
mov
hlt
dec
push
and
jmp
xor
or
sub
aam
cld
fsubl
test
mov
cwtl
push
add
jge
sbb
dec
mov
or
scas
sub
inc
xor
or
mov
shlb
cmpsb
add
mov
push
test
sbb
and
mov
or
hlt
push
or
ret
lahf
sbb
xchg
mov
mov
stos
adc
sub
xor
call
les
pusha
add
or
fisubrl
dec
aam
insl
push
jle
xor
jb
add
jbe
jb
dec
push
add
push
fisubrl
mov
or
bound
pop
or
sbb
add
cmp
repnz
enter
pop
pushf
xchg
xor
adc
clc
push
push
xor
pop
dec
mov
push
dec
xchg
clc
or
or
mov
ret
pop
fs
mov
cmp
or
ret
notl
insb
mov
pop
and
sbb
push
scas
pop
std
call
xor
adc
cli
ljmp
pop
xchg
rorb
bound
ljmp
add
xchg
pop
and
loop
sbb
or
xchg
add
mov
xor
or
mov
push
rclb
lock
dec
test
lock
lret
xor
add
loope
js
inc
sbb
fldl
mov
add
push
add
xor
or
iret
add
enter
sbb
or
or
pop
mov
sbb
sub
in
or
xchg
fldt
lea
jmp
fcomps
mov
mov
insb
mov
mov
cmp
cmp
sahf
adc
sahf
divps
push
push
add
loopne
mov
test
inc
sbb
push
or
push
xor
shll
sub
xchg
aad
xchg
mov
rclb
pop
pop
xor
push
mov
mulb
jne
hlt
lcall
popa
fadds
in
scas
fidivl
inc
rcr
sbb
or
add
out
xlat
call
popa
shrb
arpl
xchg
or
dec
mov
push
nop
add
add
mov
pop
lods
cmp
jo
push
mov
cmp
lcall
push
lods
mov
sarb
sbb
sub
pop
or
xchg
pusha
and
or
hlt
adc
push
mov
in
or
sub
inc
pop
cmp
jle
cmp
cmp
push
dec
add
mov
or
add
dec
shrl
insb
testb
jo
sub
inc
and
jg
sub
imul
push
and
cmp
pop
shr
aam
or
inc
ror
loop
mov
push
test
and
add
sub
xchg
cmp
mov
xchg
subb
pop
pop
call
xor
imul
test
jo
adc
cmp
mov
add
jge
adc
fsts
push
in
addb
push
loopne
mov
lods
and
stc
cmp
mov
ret
sbb
data16
call
add
cmp
cmp
adc
mov
lcall
jmp
add
popa
int
lret
push
rcrb
inc
sbb
add
adc
push
cmp
shlb
fldl
push
adc
pop
rcrb
xchg
iret
or
out
mov
cltd
icebp
cmp
or
push
push
nop
or
pop
das
xchg
loopne
lods
ss
pop
pop
into
mov
dec
int
pusha
sbb
jae
sub
into
push
rcrb
stos
dec
in
or
icebp
dec
nop
lret
adc
pushf
xchg
adc
ret
inc
clc
ret
or
movsl
push
xor
imul
jbe
push
mov
lock
jge
push
shrb
dec
data16
push
sub
dec
jno
pop
or
xchg
ds
lods
loopne
adcl
dec
cmovge
cmp
mov
mov
decb
arpl
mov
or
sub
add
mov
lds
mov
sbb
sahf
cmp
jb
push
push
jecxz
sbbl
xor
mov
or
sub
cmp
sbb
sbb
cmc
mov
daa
test
or
jl
rcr
jmp
mov
xor
lock
imul
scas
sub
gs
cli
fimull
xchg
leave
add
adc
movl
mov
pop
jae
xchg
lret
loope
cli
decb
rol
and
aaa
shrb
or
push
cwtl
roll
js
shr
sbb
daa
inc
sbb
mov
xor
scas
sbb
pusha
xchg
xchg
fcompl
or
push
repnz
pop
push
jo
icebp
lret
cmp
pop
faddl
push
push
cmp
dec
push
pop
add
push
mov
mov
sub
cmp
sbb
dec
push
jo
inc
pop
ficoms
aad
inc
inc
fcomip
push
xchg
test
pop
loop
out
jmp
mov
jbe
inc
ret
mov
sub
mov
cmp
xorb
lret
pop
dec
add
sbb
inc
sbb
ficoml
or
push
lods
sbb
push
push
lods
push
mov
push
push
int3
lods
orb
mov
into
sti
add
jo
ds
shlb
cmp
add
add
or
push
loopne
push
popf
sub
inc
mov
xchg
fs
cmp
js
shrl
cmp
mov
adc
scas
lcall
in
popa
push
adc
mov
xor
mov
cmc
stc
or
or
and
fcoml
shl
mov
adc
inc
out
mov
xor
push
inc
add
adc
cmpsl
rol
lds
movb
push
xor
orl
aas
inc
xor
inc
les
sbb
mov
jb
sub
adc
mov
push
scas
pop
lock
stc
or
mov
or
adc
cmp
add
pop
or
sub
inc
insb
into
faddl
ret
mov
roll
imul
sbb
loop
int
add
ret
nop
aam
pop
sbb
xchg
sbb
rorb
sbbl
bswap
ret
rclb
adc
xchg
and
mov
data16
imul
sub
repnz
add
inc
pop
mov
mov
lcall
inc
mov
jo
dec
push
iret
into
fcoms
incb
popa
stc
add
pushf
dec
adc
test
sub
push
jg
cwtl
push
inc
or
pop
lea
imul
xor
or
rcrb
dec
pop
aam
adcl
rorl
in
add
lea
xchg
sbb
lods
push
cmpb
into
inc
daa
sarl
mov
adc
and
shll
mov
rclb
repnz
push
dec
sahf
or
cmp
push
xorl
mov
sub
push
pushf
scas
adc
xor
mov
jno
sbb
sub
add
adc
or
mov
mov
into
add
sub
and
popa
pop
mov
mov
or
stc
mov
or
fwait
xchg
inc
push
andb
loop
cld
mov
or
cmp
sbb
in
adc
mov
out
lock
rcll
loope
adc
rolb
sub
mov
jno
add
rorl
pop
pop
sub
pop
push
or
xchg
fcoms
or
in
sub
push
cwtl
push
inc
and
mov
rclb
push
cli
pop
ja
xor
inc
orl
push
xchg
out
xchg
push
mov
jbe
push
push
das
shlb
cmp
mov
xchg
repnz
ret
push
mov
out
mov
and
sub
dec
inc
movsb
enter
adc
cmp
dec
insl
cmp
das
inc
cmpsb
push
and
cmp
or
and
push
inc
sti
dec
cmpsb
repnz
push
push
xor
cmp
mov
sbb
xor
push
xor
pop
inc
stos
push
jo
inc
inc
ss
add
lret
xor
cmp
pop
cli
mov
lret
adc
lret
mov
je
mov
hlt
stc
add
push
sub
stc
lcall
stos
or
push
lret
and
and
lcall
popa
ret
mov
dec
and
adc
outsb
or
adc
test
andb
loopne
xchg
fistpl
add
xchg
adc
fimull
jmp
roll
push
pusha
roll
sar
adc
pop
and
sub
sbb
sbb
jmp
and
add
pop
mov
loopne
push
dec
sub
mov
pop
lcall
cmp
popa
out
and
repnz
push
int3
push
je
inc
add
rorb
cli
insl
or
cmp
push
add
cmp
xchg
sub
sbb
mov
test
push
in
aam
roll
cld
ret
lret
or
ror
xchg
push
xor
inc
xor
sbb
scas
call
add
gs
dec
add
lock
mov
sbb
shll
imul
out
push
or
lret
add
loopne
inc
movsl
shl
pushf
xorl
push
xlat
xchg
inc
sbb
loop
into
xchg
and
subb
psubd
sbb
imul
cmpsl
push
pop
sbb
cmp
in
inc
test
fs
push
jae
push
xor
sbb
pop
popa
inc
loop
cmp
push
mov
filds
or
sti
bound
adc
fidivs
lret
enter
mov
pop
out
adc
lret
sbb
push
mov
sahf
mov
mov
xchg
mov
clc
dec
leave
leave
or
or
outsl
add
pop
or
mov
and
pop
push
inc
cmp
adc
add
xor
sub
and
rcrl
xchg
and
sbb
out
aad
sbb
shlb
inc
iret
push
cmpl
rol
das
mov
fdivrs
jne
sbb
aad
hlt
imul
and
adc
adc
jb
cmp
cmp
aam
and
mov
jle
inc
punpckhdq
clc
or
or
dec
clc
xor
mov
push
mov
sub
int
add
mov
xor
leave
and
lds
sbb
pop
int
cmp
ljmp
negl
dec
xor
xor
ss
sbb
push
pop
sbb
or
ds
or
adc
xchg
data16
inc
mov
rep
push
dec
cmp
sub
ds
and
push
pushf
push
lock
shlb
mov
cmpl
ret
push
mov
xor
addb
loop
inc
xor
xor
cmpsb
filds
cmp
mov
push
scas
jnp
adc
push
ret
in
arpl
loopne
cmpsb
or
add
insl
sbb
mov
lret
sar
lea
les
lds
mov
cltd
mov
mov
sub
es
sbb
adc
dec
pop
jnp
jle
loopne
xor
xchg
sbb
mov
mov
enter
or
dec
add
pop
shrl
test
add
out
or
call
jnp
nop
call
push
sbb
scas
icebp
stc
push
sti
outsl
mov
jl
rolb
outsb
adc
stos
nop
jle
nop
imul
lods
adc
lea
fwait
imulb
and
mov
pop
adc
cmp
mov
jecxz
je
movups
xchg
push
mulb
je
add
dec
repnz
sbb
cld
adc
ret
daa
dec
lods
add
fisubrl
call
js,pn
ret
fiadds
out
std
mov
dec
das
mov
in
jl
imul
xchg
dec
sbbb
ljmp
or
fcmovnbe
pop
or
stc
ret
mov
outsl
ret
test
imul
mov
mov
or
cmp
flds
xorl
pop
or
jo
xor
inc
push
test
imul
ljmp
add
adcb
and
push
mov
shll
push
pushf
jo
mov
int
dec
xor
push
jnp
pop
loopne
rolb
std
mov
insb
sub
ret
punpckhbw
pop
lret
push
lock
adc
pushf
decb
inc
xchg
call
std
push
push
cmc
add
stos
sbb
add
xor
pop
jno
ss
mov
clc
or
jbe
sub
js
test
dec
insb
add
pop
lahf
add
adc
lcall
lar
mov
cmpsl
mov
insw
les
hlt
add
sbb
and
inc
sbb
mov
adc
ror
aad
xchg
xor
cmp
aaa
addr16
aas
xor
call
mov
or
or
shlb
inc
sbb
cmp
ret
or
push
sbb
xchg
mov
sbb
jp
sub
push
test
push
mov
mov
mov
mov
mov
or
aaa
repz
iret
pop
in
ret
leave
sbb
loopne
test
or
and
fisttpl
push
sti
imul
inc
mov
and
push
push
sub
add
inc
jae
repnz
cmp
stos
adc
jmp
call
stos
mov
push
push
dec
aaa
stos
pop
push
pop
add
or
mov
mov
test
pop
fsubs
xor
cli
leave
pop
pusha
je
les
push
popa
and
dec
movb
pushw
enter
mov
lret
cmp
aam
add
sub
xor
in
mov
jbe
daa
test
nop
aam
xlat
cmp
iret
icebp
pop
lea
mov
mov
mov
mov
add
push
push
adc
mov
or
orb
lock
add
jle
pop
mov
adc
xlat
add
cmpsl
lret
mov
push
js
leave
loop
or
push
cmp
call
jnp
cmp
mov
pop
or
cltd
bound
lock
add
scas
int
pop
sbb
add
aam
jae
hlt
dec
xor
adc
stos
sbb
mov
adc
mov
leave
ret
jp
insl
cmp
xor
mov
scas
fsubrl
pushf
xor
stc
push
pop
mov
out
adc
addb
idivb
sbb
cmp
shrb
xchg
adc
test
je
dec
sbb
rcpps
ret
or
pop
xchg
sbb
enter
inc
sahf
dec
ret
inc
mov
sub
rcll
popa
shl
fnstsw
add
call
mov
sbb
pop
mov
lcall
adc
xor
mov
push
pop
insb
aad
jo
push
or
adc
add
and
rcl
inc
in
ret
data16
test
loop
je
or
lcall
sbb
push
dec
sbb
adc
mov
pop
xchg
pusha
add
les
je
adc
mov
pop
gs
pop
adc
pop
and
xlat
inc
xchg
test
sbb
loope
mov
rcl
inc
and
inc
out
add
ret
mov
add
inc
mov
daa
adc
or
add
jge
pop
and
js
js
or
adc
or
popa
clc
imul
ljmp
push
sbb
adc
fimuls
xor
xlat
notb
movsl
ret
rcrb
or
lret
add
inc
mov
loop
insb
inc
mov
mov
and
cli
iret
lret
xchg
jae
inc
mov
outsb
ret
adc
sub
andl
sub
mov
leave
push
fisttps
pop
test
or
ficoml
sub
js
push
lods
adc
push
icebp
orl
shrl
jecxz
xor
nop
and
add
sbb
inc
mov
shlb
push
icebp
push
add
sub
inc
jne
mov
sbb
adc
and
lds
mov
loope
or
push
xor
in
mov
jecxz
icebp
mov
lcall
add
mov
js
add
sarb
lods
mov
ret
inc
inc
pop
imul
dec
lret
pop
push
push
mov
cmp
jge
shll
adc
push
cltd
push
popa
add
stc
adc
mov
fldt
sbb
push
popf
rolb
cmp
inc
or
add
pop
out
pop
imul
ret
adc
pop
popa
mov
cmp
xchg
aad
addr16
xchg
jno
cmp
jne
push
cltd
ret
add
and
das
dec
rorl
add
out
mov
inc
and
mov
dec
sub
das
out
or
mov
sbb
sbb
add
lock
push
adc
sarb
movsb
sbb
mov
sbb
lods
aam
jmp
leave
cmpsb
jo
shrb
xor
addr16
push
stos
dec
dec
add
lea
daa
ljmp
fdivl
add
lock
loop
xchg
or
stc
add
jge
sub
rcrl
jecxz
stos
pop
add
xor
xlat
pushf
iret
popa
mov
mov
push
adc
push
mov
orb
and
dec
ret
inc
scas
mov
mov
mov
fndisi(8087
cmp
push
in
add
test
mov
lock
lods
imul
mov
in
mov
xchg
sub
inc
or
xor
inc
popf
das
stc
sbb
mov
push
push
in
adc
iret
testb
aad
leave
add
inc
or
loop
push
cltd
fdivs
mov
enter
mov
push
les
dec
shlb
and
pushf
push
es
sbb
inc
scas
jp
push
mov
add
nop
dec
cs
ret
fcmove
int
mov
icebp
mov
sub
inc
das
int3
push
out
cmp
ret
into
fidivl
sbb
adc
sub
gs
push
adc
in
dec
js
dec
movsl
push
sub
mov
add
mov
enter
cmp
scas
xchg
mov
and
mov
adc
popa
call
pop
enter
push
or
xor
call
mov
or
add
or
add
inc
xor
adc
sbb
push
test
jge
mov
mov
cmp
ja
orb
aam
stc
add
rolb
mov
cmp
push
lock
mov
pop
aad
xchg
push
push
les
bound
sub
mov
mov
rcll
outsl
addr16
fwait
push
xlat
push
add
pop
lahf
add
imul
fisubrs
xor
lds
fisubs
jb
xchg
lret
rorl
and
cli
rclb
xor
test
lret
adc
mov
aam
incb
adc
pop
adc
push
bound
xor
clc
data16
cmp
mov
pop
int
xchg
mov
or
inc
lcall
add
push
push
mov
pop
adc
or
aam
and
and
aam
subb
adc
jb
and
and
xor
bound
test
jecxz
sti
adc
add
cmpsb
mov
inc
mov
xor
or
cmp
shl
scas
bound
ret
das
sbb
dec
push
sbb
into
addr16
cmpl
push
and
or
stos
add
xchg
aam
cs
cmp
pushaw
mov
sbb
pop
push
xadd
int3
jge
and
or
sub
shrb
or
xlat
add
push
fistpll
inc
pop
push
cmp
and
push
lods
cmp
loop
adc
sub
loop
mov
push
xchg
ret
test
imul
sbb
ja
adc
rol
inc
aam
test
sub
loope
pop
adc
js
pop
mov
sub
adc
or
ss
inc
rclb
push
and
sub
dec
sar
adc
inc
or
lret
mov
inc
lret
in
test
sbb
repz
cmc
pop
push
push
jmp
fdivrs
hlt
push
icebp
repz
xlat
adc
scas
mov
and
push
insl
inc
pop
jo
dec
aaa
or
xchg
mov
out
and
lock
ret
sub
mov
and
jno
pop
std
xchg
lret
jbe
pop
pop
adc
cmp
mov
add
ret
shrb
sbb
lret
stos
add
lahf
sbb
imul
mov
inc
xchg
sbb
push
test
rcll
inc
pslld
inc
cmpsb
loop
jbe
or
push
pusha
stos
or
lret
dec
add
and
test
inc
jno
imul
int3
testl
cmp
in
and
out
xor
xlat
inc
cmp
je
add
dec
scas
addb
lock
or
push
xor
mov
insl
shrl
test
adc
aas
push
and
xchg
lcall
inc
jne
pop
push
repnz
add
add
or
push
mov
xor
mov
fistl
mov
xchg
or
and
jmp
add
test
dec
xchg
push
jp
popl
pop
cvtpi2ps
test
ret
inc
mov
lret
push
ret
fildl
sub
inc
mov
or
cmpsb
jb
xor
pop
or
or
mov
and
sbb
rol
lods
bound
cwtl
lods
push
push
pop
hlt
cli
enter
pop
lds
inc
adc
cwtl
notl
fiadds
xor
xor
push
xor
sub
mov
repnz
xlat
bound
into
mov
xchg
inc
scas
or
sti
push
xorb
pop
and
xchg
add
imulb
sbb
stc
cmp
call
lret
or
sbb
jle
out
shrl
cwtl
or
lahf
out
push
jmp
cmp
dec
push
mov
cmp
pop
push
fsubl
les
fdivl
dec
lret
lock
xor
das
xlat
fldenv
adc
ss
jo
ljmp
dec
hlt
mov
movsb
out
cmp
loop
sbb
sbb
popa
adcb
orb
add
push
push
nop
repnz
mov
mov
adc
inc
jae
sub
test
and
mov
adc
int3
push
xor
stos
mov
jb
gs
adcb
movsb
mov
xchg
cmp
push
fmull
and
shrb
sub
ds
pop
xor
inc
mov
sbb
repnz
push
mov
insb
push
dec
orl
add
cmpb
push
decb
jnp
fldcw
adc
icebp
lahf
or
stos
aam
push
outsl
sub
rclb
pop
ret
sbb
pop
orb
inc
dec
sbb
mov
jmp
test
dec
mov
ljmp
rolb
push
enter
or
mov
jp
stos
adc
shr
insl
inc
cs
add
cmpl
sbb
jae
jmp
pop
sysexit
jb
adc
and
push
jae
test
xchg
mov
xchg
xor
or
pushf
mov
insl
pusha
sub
pop
add
outsb
stos
inc
mov
adc
jno
pushf
inc
aam
lahf
cmp
jnp
add
push
dec
push
bnd
les
pop
push
sub
push
add
or
addl
and
and
dec
repnz
enter
push
mov
push
add
loop
pop
pop
cmpsb
mov
repz
lock
sbb
inc
insl
or
xor
push
sbb
add
loop
adc
or
push
adc
into
jo
adc
das
ret
sbbb
push
inc
loopne
add
fnstcw
push
add
es
leave
nop
sbb
mov
sbb
or
xchg
pop
jb
or
mov
lods
inc
inc
adc
rorl
shll
mov
roll
xchg
push
add
push
push
inc
push
in
bound
neg
cmpsb
in
sub
sbb
xor
aad
mov
xorl
push
inc
push
lods
push
cmp
and
push
aam
add
ljmp
out
fisttpl
or
adc
shll
lcall
mov
push
sbb
adc
lret
test
bound
call
or
push
push
mov
jb
cmp
inc
clc
js
and
orb
or
mov
pop
add
add
jmp
jp
mov
lahf
push
jb
push
clc
inc
and
addb
push
mov
inc
notl
test
out
pop
mov
sub
mov
add
or
ror
bound
dec
mov
aam
ljmp
mov
dec
sub
aad
push
enter
dec
loopne
or
pop
inc
movsl
in
mov
aad
inc
pop
je
lods
push
aad
ss
popl
test
cmp
push
mov
add
dec
push
insb
addr16
enter
adc
add
cmp
mov
insb
mov
nop
fisubrs
cmp
push
es
and
xchg
or
or
cmp
loopne
adc
ret
fldl
shr
shll
or
or
fldl
adc
jae
call
repnz
mov
sbb
add
into
arpl
sbb
sbb
lahf
and
cli
mov
and
cwtl
or
mov
adc
and
xor
call
add
ret
adcb
add
inc
jne
rcl
ja
test
pop
inc
mov
sbb
add
inc
lret
xchg
sub
scas
mov
pop
pop
pop
jg
pop
enter
mov
xor
push
push
cmc
hlt
or
xor
pop
mov
cmpsb
iret
add
notb
inc
movsb
jbe
push
push
cltd
or
mov
and
pop
mov
pop
or
rclb
stos
and
scas
sbb
stos
loopne
adc
lahf
xor
push
push
push
test
adc
in
dec
sub
fwait
into
mov
and
imul
adc
push
sub
inc
mov
mov
sub
adc
mov
inc
fcomps
pop
xchg
nop
mov
push
pop
pop
rolb
test
cld
cmc
add
lea
jecxz
and
movsb
cmc
adc
xor
sub
xor
shll
stc
add
mov
cmp
xor
inc
dec
push
sti
cmpsl
lock
rol
fists
aam
pop
shlb
shll
add
lods
xor
push
pop
les
or
sub
cmpb
adc
call
mov
or
push
xchg
xchg
xlat
or
push
sub
mov
push
js
aas
mov
adc
bound
inc
or
pop
or
shrb
push
xchg
add
lcall
icebp
pop
push
jb
mov
xchg
inc
push
or
lods
rcrl
mov
jl
pop
shr
push
ret
adc
xchg
sbb
imul
cmpsl
xchg
xlat
pushf
pusha
ljmp
popf
adc
add
rorb
imul
test
lock
mov
dec
mov
mov
pop
xlat
les
pop
jne
mov
inc
xor
insb
shll
rcrl
mov
sar
cmp
xchg
clc
add
xchg
lcall
fildl
sbb
pop
pusha
sub
add
mov
sbb
push
xor
or
cmp
mov
outsl
or
mov
mov
stos
clc
test
sbb
insl
inc
adc
shrl
je
xchg
push
sbb
lea
int
inc
shl
adc
xor
jl
push
cmp
mov
mov
lock
lock
cmp
inc
mov
mov
push
or
push
icebp
jecxz
notl
adc
aad
adc
enter
cmp
sbb
ds
xchg
lods
fdivs
dec
adc
cmp
mov
loopne
pop
sub
adc
cmp
push
mov
sbb
push
push
sahf
cmp
lock
mov
pop
je
cltd
adc
pop
insb
and
loopne
mov
or
add
shl
aam
test
pop
addb
sbb
sub
jbe
pop
push
in
call
sub
rcl
add
mov
rcrl
sub
lret
dec
sbbl
dec
in
mov
xchg
jnp
pusha
cmp
punpckhdq
lods
xchg
rclw
into
jecxz
lock
pop
push
andb
adc
cmc
js
sarb
ret
or
sub
in
popf
adc
mov
lea
daa
jp
xchg
sub
and
shrb
mov
pop
sub
adc
orb
and
cwtl
push
inc
add
mov
out
add
mov
adc
push
enter
adc
push
mov
mov
lock
cltd
mov
stos
add
sub
cld
ljmp
pop
mov
lret
ds
icebp
lds
adc
jp
imul
add
fsub
and
ret
push
ljmp
xchg
stc
sbb
push
sbb
or
stos
pop
and
pusha
mov
push
rcrb
pop
lock
inc
icebp
rorl
push
mov
pop
aad
xchg
rcl
je
push
xchg
mov
inc
sbb
push
sub
sbb
add
push
mov
mov
sub
enter
pop
cmc
inc
nop
test
aad
mov
dec
mov
inc
stos
test
add
xchg
xor
push
imul
or
je
lret
and
add
push
jns
cmp
xchg
or
pop
test
repnz
repz
test
pop
xchg
add
popa
inc
xor
shrb
popa
sbb
les
jmp
mov
pusha
repnz
mov
jle
cwtl
ja,pn
sbb
addr16
rorb
or
xor
gs
adc
push
and
outsb
adc
mov
je
mov
add
out
mov
adcl
inc
mov
cli
inc
inc
add
xor
add
pop
aad
into
fisubs
mov
or
inc
sbb
mov
fdivrl
xchg
push
pushf
sub
inc
push
shrw
add
pop
add
push
mov
inc
mov
stc
dec
push
add
pop
andl
or
cmp
and
xchg
jl
jno
pop
sbb
call
rcll
shl
sub
push
mov
rclb
adc
dec
aad
sbb
mov
and
mov
outsb
cmova
int3
or
sbbl
xor
inc
pusha
mov
pop
lret
mov
popa
xor
adc
push
int
push
mov
xor
fcmovb
adc
inc
scas
push
mov
ret
or
popf
push
mov
add
dec
pop
mov
mov
dec
sbb
cmp
mov
xor
inc
cmc
sub
hlt
add
sbb
pop
cmpsb
cltd
lret
mov
clc
sub
push
dec
scas
and
leave
adc
movsb
adc
xchg
icebp
adc
loopne
push
das
pop
or
loopne
int3
lret
dec
and
cwtl
xor
dec
mov
add
push
test
in
in
or
inc
jl
push
push
inc
pop
rolb
push
dec
push
push
test
and
or
pop
sub
gs
jg
mov
add
movsl
pop
push
subl
sub
cmp
add
mov
add
pop
push
or
rolb
pop
shl
pop
mov
mov
push
out
adc
lahf
shlb
mov
push
adc
xor
sbb
push
mov
ret
ljmp
mov
aam
xchg
add
jns
rcrb
sbb
popf
pop
mov
fcoml
xlat
jb
test
out
clc
rclb
mov
and
imul
mov
mov
adc
adc
jnp
inc
aam
lock
sbb
loop
push
adc
je
out
or
decb
xor
sbb
mov
into
jecxz
xchg
lods
mov
gs
cmp
inc
sub
loope
ljmp
sbb
xlat
sub
movb
shll
pop
or
je
ljmp
sbb
add
xlat
stos
add
das
mov
jo
push
ret
loop
pop
push
repz
stos
lcall
or
inc
or
sbb
sub
out
adc
push
les
or
xchg
mov
add
sbb
xchg
or
xor
in
push
addb
lods
xchg
adc
daa
sub
sbb
mov
jmp
and
pop
fiadds
aaa
popf
cmp
sbb
rcrb
in
push
and
jmp
xlat
pop
and
repnz
adc
loope
scas
add
add
adc
frstor
arpl
lds
out
stos
shlb
or
test
ljmp
push
push
inc
mov
sub
xor
icebp
outsl
out
rclb
xorl
das
imul
mov
push
pusha
jo
stos
loop
outsb
out
inc
je
add
add
cmovne
out
into
or
and
enter
push
push
cmp
push
and
pusha
repnz
add
in
push
int
enter
bound
jae
push
or
sub
or
push
jae
stos
push
sub
mov
dec
inc
jne
or
out
ljmp
dec
mov
adc
stos
shlb
sub
mov
adc
inc
sub
and
cwtl
sbb
push
icebp
cmp
cmp
jge
out
xor
stos
icebp
or
lds
dec
push
in
jnp
adc
cmp
sbb
cmpsb
es
and
mov
adc
aad
fiaddl
in
push
or
push
lret
pop
add
adc
adc
inc
sbb
cld
or
jecxz
push
push
and
inc
ror
push
sbb
push
mov
push
movb
inc
adc
mov
push
mov
aad
pop
jae
cltd
mov
push
mov
adc
sbb
add
fstps
js
xchg
or
ror
sub
sub
idivb
pop
and
mov
pop
ret
repz
shl
incl
inc
push
rolb
clc
in
imul
inc
push
mov
jo
fmul
adcl
xor
pusha
js
mov
and
push
dec
mov
test
sub
pop
test
add
je
and
pop
push
push
in
cwtl
mov
nop
xchg
call
pop
dec
rolb
mov
in
push
inc
mov
fiadds
rol
or
les
xchg
nop
fs
pop
inc
add
push
dec
adc
cmp
inc
adc
dec
aam
push
add
pusha
sub
xchg
lret
in
pop
test
xor
mov
dec
and
dec
sub
aam
adc
sub
icebp
mov
xchg
push
xor
test
fdiv
adc
inc
rol
mov
pusha
test
push
sbb
pop
pop
leave
mov
inc
loop
inc
test
aam
scas
cmp
or
inc
mov
dec
shrl
cmpsb
push
xor
adcl
mov
rol
push
xchg
adc
dec
cmp
es
aas
ret
inc
popa
stos
push
mov
lcall
lock
imul
rolb
mov
mov
fstpl
bound
pop
stos
popf
rclb
inc
adc
lahf
mov
xor
adc
adc
push
push
or
push
jb
xlat
femms
ljmp
sbbb
sub
orl
and
jne
movb
daa
jmp
add
fmuls
xchg
or
or
jp
inc
sub
sub
or
rclb
shll
aam
test
jns
inc
stos
push
mov
cmp
in
mov
jl
cmc
mov
push
shlb
addl
xor
push
outsl
inc
mov
jmp
in
arpl
sbb
or
ljmp
xor
insl
cmp
lds
rclb
pop
nop
loope
movsb
sbb
fnstsw
adc
test
addb
push
pop
jnp
pop
sbb
fdivrs
ja
test
shll
leave
xchg
popf
out
insl
or
pop
ret
loopne
es
mov
mov
shrl
inc
pop
sub
jnp
adc
cltd
sbb
test
ret
bound
adc
stos
pop
and
jne
xor
popa
clc
sbb
or
adc
das
dec
ja
inc
mov
hlt
rcrl
sahf
or
fsubrl
mov
lock
out
add
mov
shl
xor
loopne
repnz
mov
fisubl
loop
cwtl
ror
test
imul
enter
in
add
or
jnp
push
imul
mov
pop
shrb
push
jp
mov
sub
rcrl
jle
push
cmp
xchg
les
aam
lea
testl
push
mov
jne
xchg
cmp
dec
fs
or
lcall
xor
cmp
push
orb
fs
fcmove
jnp
mov
push
sbbl
or
ret
mov
dec
ror
shl
dec
add
loope
adc
mov
adc
jo
sbb
test
and
shrl
mov
adc
bound
sbb
ja
pop
cmp
dec
push
cmp
push
sti
add
subb
andb
adc
daa
or
push
dec
push
add
scas
leave
push
mov
imul
pop
inc
rclb
xor
jp
push
push
sub
test
loopne
or
push
adc
pop
or
xchg
mov
in
mov
jo
sbb
pop
add
and
popa
leave
cmp
loopne
xchg
xor
push
stos
xor
mov
inc
add
cmpsl
leave
or
lods
or
xor
pop
push
jns
push
stos
push
fidivrl
str
adc
add
mov
mov
pop
push
xor
push
jae
xchg
lcall
mov
scas
dec
lock
add
dec
arpl
loopne
adc
mov
pop
or
js
cmp
and
sbb
and
push
sbb
mov
push
pushf
test
lds
cmp
call
cld
lret
clc
stos
cmpsb
adc
test
pop
mov
sbbl
orl
adc
add
roll
dec
out
lcall
push
sbb
jp
cmp
repnz
flds
test
push
lods
out
shll
subb
mov
ret
in
pop
test
push
or
push
pop
mov
lret
rcrb
inc
int3
cmc
sub
push
push
xchg
push
sub
clc
mov
inc
imulb
add
push
mov
mov
mov
jmp
insl
roll
push
sbb
xadd
mov
adc
dec
mov
xorl
inc
sub
jbe
clc
push
inc
les
mov
fdivrl
add
adc
push
push
push
push
mov
lods
adc
pop
pop
add
pop
lock
sub
jae
add
xlat
sbb
or
adc
leave
jl
jno
clc
scas
repnz
add
mov
mov
mov
adc
clc
mov
xchg
imulb
lret
inc
icebp
jle
test
rcrb
cmp
inc
movsb
adc
cmp
sub
mov
sbb
add
sbb
out
cmpsb
sbb
test
add
movsl
mov
sbb
int3
mov
imul
mov
sbb
push
and
addl
rclb
aam
into
push
or
sbb
jp
pop
out
lahf
rolb
jo
sub
add
and
push
inc
fisttpl
mov
inc
mov
sbb
push
mov
cmp
movl
bound
pop
loopne
xor
push
sub
sbbl
hlt
or
and
inc
sub
scas
mov
sbb
sub
ss
push
adc
cs
inc
push
add
cmpsb
sbb
das
rolb
fadd
sbb
push
mov
push
xor
sbb
inc
xor
push
mov
andb
mov
mov
mov
push
cmp
roll
inc
mov
sub
sbb
ljmp
int
push
aam
shlb
jmp
ret
adc
and
orps
or
addb
lock
add
push
xor
adc
push
cwtl
and
ss
pushf
lahf
inc
jge
aad
jp
push
leave
pop
sub
movsb
xchg
adc
das
sbb
jne
lcall
jae
enter
and
add
and
push
mov
test
jo
ret
insb
pop
push
das
orl
mov
daa
jnp
push
push
mov
es
push
or
mov
nop
decb
test
push
jge
test
and
mov
ret
sub
sbb
add
sbb
mov
icebp
add
scas
scas
or
es
adcb
je
inc
pop
jge
or
add
mov
popa
pop
pusha
mov
sbb
test
movsb
ret
sub
mov
cmp
push
mov
lret
aad
inc
mov
repnz
scas
ljmp
adc
int
imulb
add
add
xor
inc
stc
repz
dec
enter
out
inc
lods
push
arpl
int
xorl
enter
mov
rcl
aas
cwtl
push
cmp
sti
mov
sbb
scas
dec
ret
gs
jmp
cli
fsubl
sbb
xor
data16
test
mov
sbbl
add
mov
jne
ja
pop
adc
inc
adc
mov
xor
lods
pop
xor
ret
mov
rcrl
shll
add
mov
push
stos
and
jno
pop
fisubl
sbb
test
add
add
push
or
dec
xchg
bound
out
jp
push
andb
mov
movsb
add
fdivrs
push
cmp
cmp
hlt
movhlps
sbb
in
add
repnz
mov
mov
mov
mov
stos
inc
or
add
mov
addb
shlb
xchg
dec
aad
mov
or
cmp
shlb
xchg
roll
inc
add
mov
sbb
adc
or
add
jmp
xor
mov
fsubs
cmp
push
push
mov
or
push
add
push
or
ss
das
dec
sbb
dec
cmpsl
imul
mov
ds
jnp
jmp
sbb
cmp
lcall
in
pop
ret
loope
jo
sub
xchg
inc
push
iret
xor
mov
xorl
or
push
subb
clc
int
lret
or
or
add
sbb
jmp
add
adc
and
push
xchg
sbb
push
jecxz
les
or
add
test
dec
or
test
xchg
cmpsb
xor
push
push
mov
jno
mov
lods
xchg
adc
or
pop
mov
adc
jl
dec
sub
jne
sbb
mov
js
adc
mov
xor
mov
stos
or
rorb
outsl
pop
arpl
add
mov
cmp
adc
push
mov
mov
mov
adc
enter
adc
adc
mov
cli
cmp
or
ds
imul
add
adc
nop
dec
shrl
jb
cs
popa
xor
ret
pusha
dec
xchg
mov
les
rclb
inc
fldpi
mov
ret
cmp
cmp
or
aas
jecxz
cmp
mov
lcall
out
hlt
mov
cmpsl
stc
jl
ds
int
add
mov
add
mov
push
cmp
xor
mov
sbb
call
imul
icebp
sub
pop
gs
and
pop
adc
add
add
adc
aam
loope
mov
pop
push
adc
in
sbbl
mov
inc
ret
rorl
ror
cld
or
ret
push
call
aam
push
push
dec
movsl
loope
jb
std
lods
push
stos
daa
dec
xor
mov
add
inc
leave
les
rorl
loop
or
loop
out
gs
mov
mov
jns
jae
dec
cwtl
mov
lcall
popa
xor
or
cwtl
out
inc
lods
xor
sbb
pop
mov
sahf
push
adc
xadd
pop
mov
scas
stos
adc
sub
mov
or
push
popa
or
mov
mov
mov
aad
in
mov
pop
cmp
shll
push
or
lods
cwtl
sub
icebp
xor
dec
popf
add
adc
enter
iret
mov
xor
stos
jge
cmpsb
add
js
mov
push
test
adc
add
jmp
jmp
and
test
rorb
xor
js
inc
and
mov
or
cmpsb
and
lods
mov
cmp
scas
xor
call
js
add
rcl
data16
addb
pop
and
in
pop
ffree
or
test
cli
pop
loopne
and
pop
mov
add
inc
rcr
jmp
rorb
rorb
and
push
je
movsl
adc
or
icebp
inc
loopne
and
jmp
jo
icebp
pop
fs
jb
scas
or
ds
aad
out
addr16
xor
jge
pushf
or
aad
lods
xor
sub
mov
adc
pop
cmp
or
adc
jg
adc
pusha
sbb
pop
andb
xchg
mov
pop
mov
gs
gs
loop
xor
pop
inc
add
mov
cli
sub
push
sub
and
mov
xor
lea
dec
pop
sub
enter
test
leave
adc
test
mov
inc
sar
sbb
ljmp
stc
scas
add
rcrl
adc
push
dec
cmpsb
test
shr
push
push
cmp
jb
inc
inc
shll
inc
lret
sbb
add
xor
popf
dec
rclb
inc
jo
out
push
inc
mov
xor
push
jl
push
and
lock
add
stc
and
loopne
cmpsb
xchg
sbb
xchg
sub
pop
adc
addr16
and
or
or
or
adc
cltd
mov
pop
xor
mov
adc
sarl
fistpl
add
inc
mov
jns
addr16
push
pop
or
and
rorb
inc
cmpsl
add
mov
push
mov
popf
push
push
cmp
int3
inc
sbb
outsb
enter
and
hlt
icebp
aad
or
pop
loopne
pop
loope
jno
or
xchg
inc
xor
or
inc
add
mov
negb
aad
or
pushf
mov
ret
jmp
popl
pop
pusha
rorl
lea
mov
pop
xor
mov
or
mov
add
call
mov
enter
pop
scas
push
imul
out
in
es
and
and
test
dec
or
mov
in
adc
rep
sar
inc
lods
cwtl
or
clc
add
imul
jle
or
mov
ljmp
aam
sbb
lea
jmp
bound
cmp
seto
call
mov
inc
shrb
inc
or
xchg
and
adc
sub
xchg
inc
or
push
shll
mov
pop
rolb
add
dec
mov
dec
sbbb
mov
pop
mov
jnp
adc
push
ret
arpl
add
push
scas
adc
jo
or
add
jp
imul
cmp
mov
or
mov
imul
push
rcrl
push
ljmp
or
or
loopne
inc
dec
mov
sarb
jge
call
repz
mov
xchg
adc
lock
ljmp
je
cmp
mov
pop
loop
rorb
dec
in
mov
and
leave
xor
jno
xor
push
adc
sbb
xchg
scas
add
push
out
xchg
clc
test
adc
sahf
test
mov
and
cltd
mov
jg
or
xor
xor
rolb
jo
mov
jo
jo
push
push
jp
inc
xor
push
rcrb
ljmp
int3
inc
or
sub
add
or
push
out
lds
cmp
push
mov
jae
mov
rolb
dec
inc
subb
test
sbbb
adc
or
xchg
dec
and
inc
or
jmp
cwtl
and
es
test
push
inc
test
std
sbb
clc
ret
add
cmp
adc
jle
les
add
pop
pop
add
mov
dec
inc
or
jg
inc
or
and
or
mov
data16
jecxz
mov
test
pop
fstpl
cmp
push
loope
jne
push
andb
mov
mov
sti
jb
loopne
xchg
mov
pop
xor
jl
out
push
mov
lret
into
cmp
sbb
cmpsb
mov
mov
pop
hlt
push
xor
orb
xor
cmc
add
or
enter
mov
add
jle
lock
push
fisubrl
pop
shl
push
inc
test
scas
jle
lret
loop
xor
or
mov
gs
mov
inc
adc
add
adc
repnz
xchg
ljmp
or
pop
rorb
call
push
test
add
insb
sbb
adc
add
aad
cmp
mov
stos
stc
ljmp
mov
add
nop
cmpsl
dec
loopne
xor
adc
or
cmp
out
leave
jg
push
daa
add
sbb
ret
sbb
out
and
xchg
rcl
or
xchg
pop
jmp
pop
xor
dec
cmp
inc
lds
and
sbb
mov
cmpsl
add
fildl
pusha
ss
sbb
pop
leave
in
rcl
inc
and
push
cmp
test
xchg
sbb
mov
out
cltd
sbb
sub
sbb
xchg
popa
stos
shl
inc
xchg
xor
popf
cmp
dec
adc
fiaddl
dec
add
fstps
gs
sub
sub
sbb
adc
js
push
inc
add
sub
mov
xlat
mov
shl
call
movsb
mov
pop
insl
js
or
ret
movsb
cwtl
add
aad
mov
ljmp
xchg
and
outsl
jmp
or
pop
pop
pusha
mov
add
cmp
loop
xor
sub
xor
jl
xchg
fcom
insl
inc
xor
jnp
add
clc
and
push
lret
pop
add
stc
mov
mov
or
popa
fdivp
mov
cmp
out
jnp
jne
mov
ret
loopne
sar
add
mov
les
push
push
cmp
adc
lds
popa
stos
das
or
ja
das
and
pusha
cmp
inc
xchg
lods
das
adc
cmp
stos
sub
stos
push
lock
mov
add
rcll
ficoml
pop
jno
mov
jge
add
cmp
test
jb
push
dec
mov
nop
mov
enter
xchg
push
insb
out
ret
add
loop
aaa
mov
subl
loope
out
cs
xchg
mov
mov
adc
push
in
cmp
adc
call
stos
jmp
icebp
enter
or
push
inc
push
and
call
fsts
call
cmp
mov
call
add
icebp
push
movb
add
cmp
jge
mov
inc
cmp
lea
int
repnz
push
pop
ljmp
or
push
mov
stos
into
loopne
or
or
mov
imul
push
test
adc
stos
fiadds
fwait
pop
push
mov
test
and
or
cmp
jo
sbb
add
sub
push
pop
cwtl
push
add
push
es
add
push
lds
jl
mov
push
scas
push
adc
dec
rcrb
xor
add
cmc
addb
out
add
or
push
scas
push
dec
or
jo
mov
int3
sbb
pop
cmp
pusha
fistl
movsb
mov
jno
lods
push
rolb
lock
clc
enter
xor
mov
in
xor
or
rcl
in
xor
mov
or
jp
adc
stos
cmpsl
pop
insb
mov
inc
enter
or
insb
add
xor
fists
call
sar
sar
scas
test
pop
sarl
xor
add
jmp
shr
and
mov
push
add
pop
adc
push
loopne
push
loopne
roll
js
jl
add
sbb
fcoml
and
push
pop
and
mov
notb
push
push
adc
cmp
ret
pop
add
xchg
sti
in
add
sahf
mov
rorl
and
in
push
add
jg
xchg
cmp
mov
cli
push
icebp
stos
inc
sbb
sub
imul
jne
sbb
or
fwait
sbb
sbb
punpckhdq
jns
inc
jo
sbb
pop
loopne
sbb
or
rclb
mov
inc
sbb
cmp
mov
aam
ud2
loopne
nop
or
lea
or
jecxz
inc
cmc
xor
shlb
sub
pushf
adc
mov
sbb
sbb
and
mov
adc
pop
mov
repz
mov
mov
mov
cs
enter
sub
sub
inc
jb
mov
push
ret
mov
ret
fsts
cmp
into
xacquire
lret
pop
dec
and
inc
mov
jp
out
jge
jmp
rclw
shl
roll
sbb
mov
push
xor
daa
cli
pop
fisubl
enter
inc
mov
out
mov
or
mov
sub
xorl
mov
pop
mov
dec
add
xor
pop
xchg
or
pop
js
adc
dec
xor
or
sub
clc
or
mov
loopne
push
push
sub
es
imul
shlb
insl
dec
inc
add
push
xchg
ret
lods
mov
cmp
scas
ljmp
outsb
jmp
stos
bound
psubsw
mov
sbb
loopne
sbb
aad
dec
pop
adc
cmc
or
mov
pop
in
jmp
movl
sub
lret
sti
pop
add
gs
push
adc
pushf
lret
out
lahf
out
inc
aam
mov
fwait
dec
sbb
sti
incl
push
add
adc
pop
dec
out
lahf
aas
sarl
hlt
lcall
inc
inc
cld
stc
repz
jl
aam
mov
imul
sub
jnp
cs
lahf
aas
jg
cmp
je
cmpb
sbb
aaa
mov
stc
repz
out
mov
pusha
add
loope
bound
lahf
aas
jg
rol
sub
ljmp
out
in
movl
push
jo
insl
mov
jg
cld
lods
sahf
xchg
movsl
dec
xchg
cmpsl
xchg
push
inc
test
lahf
out
lret
sbb
arpl
ds
push
int
xchg
jg
cld
stc
or
xchg
lidtl
inc
push
xchg
and
out
lahf
aas
jns
cmp
scas
enter
adc
rep
xor
decb
pop
push
movsl
add
mov
lahf
aas
jg
xor
in
mov
cld
stc
repz
mov
cmp
mov
sahf
lahf
aas
jg
nop
mov
xchg
push
add
fdivrs
addr16
repz
and
or
int3
dec
mov
stc
popf
aas
jg
cld
cmp
dec
lcall
movsb
xchg
lds
lahf
popf
stos
dec
fistpll
fistpll
lret
cld
stc
pop
mov
jmp
mov
lahf
aas
ja
push
dec
jno
cmp
push
stc
cld
stc
repz
jmp
mov
mov
pop
aas
fadds
dec
jns
sarl
jg
cld
stc
mov
test
or
xor
lahf
aas
fcoml
lea
push
mov
iret
pop
pop
mov
xorb
xor
cld
stc
jle
mov
mov
repz
or
das
sbb
inc
inc
out
lahf
aas
popa
and
fstl
repnz
fwait
mov
cld
stc
repz
shrl
push
inc
out
pop
ja
add
in
lcall
leave
push
pop
push
cld
stc
repz
xchg
or
sub
arpl
les
lahf
aas
jg
jmp
jnp
mov
sbb
popf
or
repz
adc
or
outsb
sbb
icebp
subb
ret
jg
cld
sbb
test
int
dec
gs
xor
push
jp
jecxz
addb
jg
cld
stc
stos
lds
pop
shll
push
mov
mov
out
lahf
aas
xchg
imul
ror
jg
lcall
repz
mov
lahf
imul
mov
iret
lahf
aas
jg
fs
xlat
mov
mov
loope
inc
ljmp
jmp
adc
add
leave
out
scas
lahf
aas
jg
ljmp
mov
pop
test
repz
dec
ja
gs
adc
faddl
jmp
cli
iret
aas
jle
xchg
pop
in
addr16
push
stc
repz
and
or
orb
mov
aas
jg
add
sub
scas
insb
mov
dec
scas
push
fs
repz
fs
jecxz
cmp
rorl
dec
jle
cld
mov
sarb
imul
cmp
push
lea
scas
mov
stos
stos
mov
pop
rclb
mov
xor
cmp
popa
sar
repz
pop
push
jl
test
and
pusha
pusha
add
jg
cld
jge
jne
inc
dec
mov
fmul
xchg
repz
lahf
mov
cli
rorl
lahf
fidivs
fcomip
cld
stc
mov
dec
sbb
cmc
stos
ljmp
repz
mov
ret
jg,pt
or
lahf
aas
jg
mov
and
mov
cltd
or
stc
repz
cmp
pop
cs
sbb
push
std
pop
mov
cld
push
loope
cmp
add
repz
lahf
imul
mov
jg
cld
stc
rorl
adc
inc
cmpsl
ljmp
jns
iret
lahf
aas
fs
addb
outsb
fdivrl
jp
add
scas
in
icebp
aas
push
push
lret
xchg
lahf
out
test
outsl
mov
stc
repz
add
cmp
or
pop
movsl
dec
addr16
push
or
or
outsb
ret
out
lahf
add
push
cmc
idivl
jae
adc
cld
stc
lds
lock
add
dec
dec
jae
jmp
iret
lahf
aas
adc
mov
lahf
mov
inc
xchg
cld
stc
repz
and
push
mov
push
adc
iret
lahf
aas
jg
sub
ss
cmp
stc
repz
addr16
push
xor
mull
lahf
aas
jg
leave
pop
mov
inc
sbb
mov
repz
push
sahf
jo
xor
jecxz
std
xor
jg
cld
mov
aas
jae
mov
jbe
mov
mov
pop
mov
stos
into
andb
popf
cmp
scas
fidivrs
cld
stc
pop
daa
ret
xor
inc
fs
hlt
inc
sub
iret
lahf
aas
jns
mov
rcr
inc
cmp
mov
cld
stc
repz
push
std
push
decb
ds
rclb
iret
lahf
aas
jg
loope
xchg
pop
lock
sbb
xor
jmp
stos
adcb
dec
xchg
jmp
aas
jg
cld
fstl
pop
cs
inc
rcrb
repz
lahf
mov
sbb
daa
data16
mul
jg
cld
stc
inc
xor
popa
jae
mov
repz
mov
aas
pop
push
cs
pop
pushf
es
adc
call
dec
je
popf
push
inc
lret
cld
stc
push
nop
imul
mov
push
xchg
iret
lahf
aas
jg
adc
adc
rorl
jg
in
mov
lret
inc
xchg
test
repz
xchg
xor
imul
cld
andb
cwtl
push
cmp
addr16
xchg
out
lahf
fs
mov
mov
mov
sub
push
test
cmp
sbb
adc
cmp
iret
lahf
aas
shrb
jo
cli
mov
pop
cld
stc
repz
iret
sti
pop
decl
adc
lahf
aas
jg
cs
mov
sbb
loopne
dec
idivl
out
jle
inc
sbb
jne
repz
aas
push
ret
test
pop
and
mov
fidivrl
ret
cmp
iret
lahf
aas
xor
fsubs
cmp
cli
cld
stc
repz
or
xor
dec
and
inc
iret
lahf
aas
jg
adc
xchg
push
adc
push
stc
repz
pop
andl
stos
dec
out
push
aas
jg
rcr
or
in
mov
repz
lahf
push
aas
pusha
adc
xchg
aad
gs
cld
stc
into
mov
test
pop
cmc
sarb
push
inc
xchg
stos
jl
add
cld
pop
push
cld
stc
repz
push
pop
pop
out
xchg
pop
mov
aas
jg
call
lds
sub
lret
add
stc
repz
je
lds
cwtl
jbe
rcrb
sahf
jl
aas
jg
loope
xchg
cmpl
mov
repz
sub
pop
mov
jl
jp
outsl
shrb
aas
jg
cld
pop
sub
bound
cmp
icebp
pop
repnz
in
lahf
cwtl
dec
mov
cmp
mov
fstpl
loope
ret
pop
fisttpll
fsubrp
inc
cmp
repz
mov
ffree
lret
loop
int
aas
jg
cld
xor
xor
gs
push
cmc
repz
lahf
mov
aas
fildl
std
sub
add
cld
stc
add
adc
enter
mov
adc
out
lahf
aas
adcl
pop
cmpsl
mov
popf
cld
stc
repz
xchg
push
lods
push
popf
cmc
je
out
sub
iret
mov
jo
mov
sbb
lock
stc
repz
jo
hlt
jbe
or
and
sti
lahf
aas
jg
scas
aad
sbb
in
in
imul
jle
sub
leave
cs
repz
jg
cld
or
xor
fmuls
loope
es
fwait
aaa
shlb
mov
xor
repz
push
dec
fs
jns
add
cmp
test
xchg
pop
mov
lret
jno
mov
repz
jl
jns
int
dec
scas
adc
insl
pop
add
outsl
fidivrs
das
iret
pop
fdivrs
repz
fwait
shr
add
in
cmp
mov
movb
add
jg
repz
test
cli
pop
sahf
dec
repz
cld
insl
fisubrs
xchg
push
push
std
imul
mov
gs
inc
lods
jg
cld
stc
push
xor
outsl
cmp
pop
push
pop
push
iret
lahf
aas
xlat
mov
push
or
ss
cld
stc
repz
arpl
push
or
mov
and
adc
jg
in
push
bound
xchg
jg
lahf
cld
sub
aad
adc
out
cld
stc
repz
hlt
fdivr
stos
cs
call
aas
jg
enter
movsl
mov
fcompl
out
or
adc
xchg
test
mov
and
jg
cld
push
ds
rorl
fidivs
lock
lahf
gs
xchg
mov
and
cld
stc
sub
in
mov
inc
cmc
into
ror
adc
fisttps
mov
mov
cld
stc
repz
mov
fstpl
daa
icebp
push
bound
lahf
aas
jg
outsb
lds
repz
and
out
dec
pop
inc
push
add
lahf
aas
jg
divb
cmp
cmp
cmp
repz
bound
mov
mov
push
xchg
test
jg
cld
aad
jb
mov
test
repz
lahf
cmp
pusha
add
xor
div
sbb
hlt
sub
jp
pusha
and
sbb
shll
movsb
sti
out
lahf
aas
outsl
mov
dec
pop
daa
lahf
movsb
rol
xor
out
xchg
mov
jg
cmp
xchg
dec
cmp
fimuls
repz
inc
inc
nop
fidivrl
fisttpl
hlt
cmc
outsb
adc
push
iret
lahf
aas
jg
test
je
dec
jno
cld
stc
repz
xchg
adc
leave
mov
dec
stc
cli
adc
aas
jg
push
pop
sbb
mov
fiaddl
repz
and
daa
jle
arpl
imul
aas
jg
cld
shll
loope
call
sbb
lods
xchg
repz
lahf
out
cmp
fistl
xchg
dec
jg
cld
stc
shrb
pop
aad
sub
xchg
icebp
sub
clc
and
lahf
aas
in
jns
mov
fcompl
xor
insl
and
call
xor
or
or
lahf
aas
jg
pop
jno
mov
cltd
jge
lret
cld
stc
repz
mov
cltd
cld
cld
mov
lahf
aas
jg
xchg
inc
and
pop
cltd
mov
addr16
xchg
mov
out
add
add
jo
mov
cld
call
adc
pop
mov
and
scas
inc
mov
and
es
iret
lahf
aas
mull
mov
xlat
das
lds
cld
cld
stc
repz
add
dec
test
inc
out
fisubl
rep
mov
mov
dec
jg
cld
stc
add
stos
mov
pop
enter
hlt
mov
inc
and
ss
int
ja
xchg
inc
push
push
jg
in
repz
fidivrs
xor
push
jg
in
cld
push
jge
test
outsl
mulb
dec
les
icebp
pop
sbb
push
js
and
lea
sahf
les
fdivp
mov
sub
iret
mov
cmpb
int
outsl
scas
fs
jl
out
mov
mov
sub
outsl
fidivrs
mov
adc
jecxz
push
repz
fwait
pop
or
mov
out
ja
in
outsl
fidivrs
jne
int
push
mov
fwait
aaa
mov
cmp
cmp
fdiv
fcmovu
mov
mov
rcrb
cmpsl
mov
dec
hlt
mov
int
aaa
outsl
adc
sahf
imulb
mov
adc
jle
leave
mov
xchg
shr
stc
mov
pop
dec
push
add
adc
inc
or
jge
add
repz
pop
or
test
mov
ficoms
mov
outsl
fidivrs
sbb
fwait
mov
mov
enter
xor
mov
sub
cld
stc
enter
xchg
subb
xchg
pop
jo
out
lahf
aas
les
cmp
cld
stc
repz
sub
mov
pop
pop
jecxz
jl
sub
loop
lahf
aas
jg
add
loop
inc
arpl
pop
xchg
sub
stc
repz
mov
movsb
hlt
outsl
movsl
loop
xlat
mov
adc
jg
mov
mov
pop
test
repz
mov
adc
fisttpl
cli
or
stc
mov
and
cmp
xor
sub
xchg
lahf
aas
adc
push
repz
push
push
cmp
jb
aas
jmp
icebp
push
into
and
lahf
sahf
sahf
add
ret
nop
and
jle
stc
and
rcrb
in
repz
xor
sbb
rcrl
fcoms
ret
lds
lods
mov
fs
std
cmp
rolb
lahf
jg
in
addb
fisttpll
addr16
xchg
repz
jle
lret
insb
mov
jo
jno
and
cld
jb
jnp
push
sbb
stc
repz
not
addl
test
aas
jg
cld
ja
movsb
cmpsl
loopne
mov
pop
test
out
dec
sahf
xor
cltd
out
ds
in
stos
sbb
stc
repz
inc
and
or
xor
rcrb
repnz
jmp
aam
mov
outsb
stc
repz
push
add
mov
repz
mov
cld
sub
pop
ja
add
add
test
nop
jg
pop
or
xorl
aaa
out
int
dec
sub
inc
outsl
add
jb
jb
jg
fbstp
sbb
mov
push
fwait
dec
pop
stc
repz
mov
push
int
xor
test
mov
jg
cld
pushf
cli
jno
sbb
out
mov
xchg
xchg
inc
inc
and
mov
jbe
or
lahf
aas
jg
inc
xchg
add
sub
lock
sti
leave
out
mov
jp
test
cwtl
push
cmp
jg
cmp
xor
fisttps
les
stc
repz
jp
test
popa
stos
into
lret
pop
inc
jle
cld
nop
push
insl
in
aam
out
cs
xor
out
shrb
ror
sahf
sahf
add
test
filds
in
ja
jl
xchg
add
stos
orl
mov
jo
mov
xchg
cld
cld
xchg
data16
lock
pop
cld
jnp
out
and
daa
push
icebp
cmp
inc
lahf
stc
js
mov
cmp
sbb
repz
xchg
lods
insl
insl
push
sahf
cld
stos
lea
iret
adc
pushf
lahf
aas
jg
outsl
jg
cwtl
sbb
movsb
and
std
insl
in
iret
popa
dec
iret
push
cltd
cld
cld
ss
std
sbb
stc
repz
xchg
xchg
xchg
test
jae
lahf
pusha
leave
inc
jle
sti
jo
jae
ret
scas
xchg
adc
jg
or
mov
fadd
or
out
lahf
test
in
aas
lea
nop
jg
cld
stc
xchg
scas
orl
subl
aas
fcomi
dec
subl
outsl
mov
pop
or
push
mov
sahf
fistl
addb
pop
lahf
jg
push
inc
adc
push
lret
or
iret
fcoml
test
enter
cld
cld
imul
insb
jle
xor
cmpsb
sub
push
dec
pop
fistl
cld
stc
sahf
cmpsb
movsl
fidivl
mov
sub
iret
lahf
aas
xchg
mov
xchg
cmpsl
mov
stc
loope
in
mov
cmc
jns
dec
pop
pop
pushf
xchg
lahf
aas
pop
sub
jne
push
jg
jns
pusha
daa
cld
stc
xchg
daa
lods
data16
adcl
mov
inc
mov
mov
call
repnz
push
das
cmp
movsl
out
cmp
rep
or
and
xor
sahf
or
ds
add
xchg
subb
iret
lahf
aas
call
sub
jle
or
out
out
mov
sbb
outsb
dec
mov
pop
push
jo
xchg
repz
or
aas
jg
mov
adc
pop
movsl
insl
add
in
stc
lods
iret
mov
jo
das
xor
stc
repz
pop
cmp
pop
dec
add
mov
fimuls
or
ljmp
repz
dec
pop
pop
and
xor
dec
dec
mov
aas
jg
cld
in
iret
xchg
cmp
jge
repz
lahf
rol
jl
pop
cmc
ficomps
out
jg
cld
stc
push
je
insb
dec
shlb
sbb
popa
jo
iret
lahf
aas
mov
xchg
cmc
sub
push
jae
mov
stc
repz
test
sahf
repnz
cld
mov
loope
sbb
lret
and
cld
stc
repz
out
inc
xor
or
pushf
jae
iret
lahf
aas
jg
dec
push
and
pop
jnp
outsb
cld
stc
repz
dec
pop
or
and
in
out
lret
outsl
lahf
aas
jg
je
inc
fucom
inc
mov
rclb
repz
jae
cmp
shrb
jns
aas
jg
cld
popf
sbb
and
in
dec
arpl
jl
andb
repz
lahf
add
inc
and
cmp
cld
stc
outsb
repz
bound
xchg
mov
out
call
out
lahf
aas
icebp
xor
and
sub
jg
jl
inc
pop
in
dec
sub
fnstsw
divb
jecxz
xchg
test
lcall
repz
std
mov
mov
ss
push
xor
fwait
ja
lahf
xor
adc
sub
jnp
cmc
xchg
int
xor
lea
jnp
inc
xchg
es
lcall
dec
jmp
aaa
cmpsl
jae
cmp
jmp
lahf
ss
cmp
repz
xchg
sub
mov
fistpl
jmp
repz
clc
imul
inc
fists
cld
cmpsl
pop
lea
jge
sbbb
repz
lahf
ja
mov
mov
lret
movl
popa
mov
ds
mov
pop
out
test
xlat
into
dec
dec
cmp
xchg
xor
aas
jg
cld
icebp
add
jle
dec
lcall
jmp
lahf
pop
mov
jge
iret
stc
xor
jg
cld
stc
mov
mov
xor
sarb
xchg
lahf
aas
push
jo
pop
pop
dec
cmp
xrelease
push
xchg
jno
dec
sbb
jnp
jg
cld
stc
and
pop
pop
ds
jle
pop
push
add
out
lahf
aas
lock
gs
ss
mov
cld
stc
repz
mov
lds
fwait
or
mov
jg
dec
or
adc
and
cld
jmp
pop
scas
pop
adc
xlat
mov
cld
mov
sub
cmp
rclb
cld
stc
add
or
add
fs
dec
shll
lods
and
and
out
sahf
aas
jg
ja
fs
cmp
mov
in
mov
test
adc
xchg
xchg
rcrl
aad
and
mov
adc
dec
mov
arpl
fwait
aaa
outsl
fiadds
mov
fcoml
jns
aas
ds
call
adc
outsb
mov
test
push
outsl
sti
jb
leave
cld
stc
repz
cmpsb
in
mov
mov
inc
movsl
add
lahf
aas
jg
dec
and
shll
mov
inc
xchg
outsb
mov
call
jmp
pop
pop
outsl
fidivrs
push
xchg
xchg
cmpsl
hlt
or
inc
fmuls
adc
push
rdpmc
nop
sub
mov
in
pop
sbb
mov
mov
out
push
push
leave
cmpsb
hlt
xchg
jno
stc
push
xchg
jns
lahf
aas
jg
pop
arpl
popa
mov
push
jg
clc
cwtl
mov
repz
cmp
out
rol
ljmp
cmp
jg
cld
sub
mov
cmp
inc
outsl
sub
sub
out
lahf
add
pop
mov
sub
or
cld
stc
and
ret
ljmp
fmul
xlat
test
xchg
aas
js
mov
jl
pop
leave
int3
lahf
push
loopne
fwait
pop
jle
hlt
and
jns
cli
mov
test
movsb
lcall
int
aaa
outsl
mov
mov
add
xchg
xchg
mov
pop
pop
cmp
aas
sbb
xor
or
in
mov
mov
in
int
jecxz
mov
jmp
imul
cs
pop
les
aaa
jg
ret
ret
xchg
dec
testl
cli
enter
mov
jno
lock
das
decl
iret
xchg
push
xchg
jmp
xor
or
cs
xlat
repnz
or
aaa
in
adc
out
mov
call
nop
xchg
repz
fwait
pop
js
push
fsts
push
scas
leave
fwait
adc
pop
cmp
xor
addr16
rorb
aad
aaa
loop
xchg
jge
sbb
jo
int
adc
repz
inc
enter
clc
lahf
aas
jg
addps
out
mov
rorb
sbb
stos
mov
into
sbb
aas
jg
cld
mov
std
data16
jl
push
ja
xlat
shl
out
lahf
sahf
hlt
je
add
cmp
daa
jg
cld
stc
lods
addr16
inc
mov
cmp
or
mov
mov
aas
mov
xlat
mov
push
gs
jno
push
es
icebp
int
aaa
outsl
inc
sarb
fistps
aad
lcall
in
jle
push
push
scas
push
movsb
addps
aaa
outsl
fidivrs
lcall
sbb
int
adc
dec
jbe
xor
fidivrs
jmp
jnp
or
out
fwait
aaa
sub
jbe
dec
pop
les
mov
call
sar
in
jno
ror
iret
aas
not
dec
dec
mov
cmp
jg
rcll
push
aaa
fs
push
adc
aas
jne
lahf
roll
outsb
mov
iret
call
out
xor
sub
gs
mov
cli
jnp
fwait
aaa
outsl
fmulp
jnp
cltd
fwait
lret
idiv
or
pop
add
jns
out
xchg
push
xor
aad
mov
js
loope
push
mov
ss
or
sbb
int
loope
sbb
dec
mov
fwait
jb
add
mov
popa
into
sub
pushf
stos
dec
jecxz
push
mov
xchg
push
dec
push
pop
rcll
out
mov
xlat
and
cld
les
addr16
cld
in
jg
cld
sbb
out
pop
sub
int3
rolb
repz
lahf
sbb
loope
push
idivb
movq
cld
stc
push
or
fxch
shrl
popf
outsb
cs
mov
stos
js
push
in
cmpsb
int3
mov
xor
ret
fidivrs
fdivl
inc
test
out
fwait
aaa
in
in
jne
or
push
addr16
jns
add
popa
les
jns
push
fists
std
pop
jg
rol
cmpsb
dec
xlat
cld
cld
stc
repz
and
jb
loope
pop
sub
adc
jg
sbb
add
data16
push
stc
repz
nop
aad
nop
enter
add
sbb
mov
cld
xor
pusha
jns
mov
xchg
sbb
dec
mov
cld
stc
repz
dec
lods
orb
cmpsl
imul
in
test
jecxz
xchg
pop
sar
repz
iret
fbld
movsl
loopne
mov
bound
and
mov
lods
js
repz
mov
mov
pop
jo
mov
mov
inc
test
jle
cmpsb
mov
cmp
cld
mov
jae
adc
sub
inc
mov
lahf
aas
cmpsl
pop
jbe
lea
jb
fabs
popf
cld
stc
repz
lea
xor
shlb
lahf
aas
jg
sarl
lea
jne
imul
repz
movsb
xchg
enter
sti
fnsave
out
or
jae
fbstp
dec
jmp
out
fwait
and
jns
call
mov
fidivrs
insl
aas
adc
mov
int
aaa
fstps
cli
pop
adc
aas
fidivrs
decb
push
dec
inc
add
xchg
insb
idivl
outsl
add
repz
and
jne,pn
mov
addr16
imul
sbb
movsl
mov
gs
stc
adc
clc
repz
fwait
lret
mov
fmul
jmp
mov
fidivrs
loope
popf
jo
in
jp
repnz
out
fwait
aaa
mov
push
fistpl
xchg
pop
js
mov
addr16
jb
das
xchg
xchg
out
and
push
inc
xchg
mov
fucom
out
fwait
int3
pop
pushf
cld
cmpb
push
dec
bound
pushf
das
mov
xor
or
jo
iret
xchg
fwait
aaa
outsl
call
push
rolb
or
aaa
cmpb
in
or
scas
lods
movsl
inc
pop
push
fs
arpl
mov
lahf
aas
or
mov
out
mov
jns
iret
sub
out
mov
add
mov
sti
push
and
and
add
in
lods
mov
cmpsb
fwait
aaa
outsl
mov
inc
clc
xchg
sub
mov
out
jge
ja
mov
jl
and
ljmp
push
push
cmpsb
fldcw
xchg
in
es
repz
xchg
mov
mov
sub
cld
stc
push
or
fistpll
adc
and
and
and
out
fwait
aaa
scas
loopne
dec
dec
sarl
adc
lods
lret
sub
imul
dec
pop
ss
scas
cld
stc
repz
fnstcw
or
xor
mov
jae
mov
push
cltd
xor
push
dec
sahf
out
sub
movsb
fistps
cld
stc
repz
clc
cmp
mov
stc
adc
lret
out
xor
mov
mov
decb
jnp
pop
sahf
xor
jle
fpatan
out
mov
xor
inc
push
cmp
nop
jb
outsl
fidivrs
test
xchg
or
int
aaa
adcl
imul
pop
dec
rolb
inc
repz
loope
cltd
sbb
out
out
cmc
mov
add
dec
cmpsb
inc
lahf
aas
jg
inc
xchg
mov
or
std
stc
repz
jl
movsb
push
cmp
push
add
fdivrs
stc
cld
cmpb
fwait
inc
fistpll
dec
repz
lahf
pop
dec
mov
fistpll
or
dec
jg
cld
stc
dec
inc
push
push
sbb
int
inc
lret
jg
xchg
push
out
lahf
aas
adc
push
add
cld
cld
stc
repz
mull
scas
cld
stc
dec
jno
push
ds
pop
sub
xlat
icebp
cwtl
out
aaa
adc
addr16
cmp
pushf
push
imul
dec
push
fs
inc
test
dec
aaa
outsl
fidivrs
mov
cmc
in
sti
xchg
jbe
sbb
out
lahf
fwait
jnp
jmp
xor
stc
les
sbb
jns
jle
divl
mov
push
popa
sub
xchg
int
fwait
aaa
outsl
loopne
outsl
or
push
je
in
jg
cld
loope
mov
out
adc
imul
aas
test
sub
xchg
js
aad
cmp
mov
sub
add
cmpsl
mov
insl
mov
cmp
sub
mov
pop
mov
jg
aas
sub
fsubl
into
int
aaa
out
iret
cmp
and
sti
sub
out
stos
mov
pusha
add
jge
dec
int3
fdivrs
aaa
outsl
fimuls
fstl
je
andl
sub
repz
fwait
mov
lahf
subl
outsl
fidivrs
out
dec
dec
mov
cli
lahf
xchg
jmp
push
out
fwait
aaa
mov
mov
push
loop
xchg
repz
xor
pop
pop
jbe
fidivrs
insb
mov
out
loopw
dec
or
inc
out
xchg
add
imul
mov
gs
in
xor
cmpl
mov
mov
stos
pop
xchg
out
add
sub
mov
or
out
pop
jg
xchg
fwait
dec
mov
push
push
add
and
sub
ljmp
loop
push
adc
fists
daa
push
lock
lahf
cwtl
imul
adcb
mov
sbb
jmp
leave
iret
lahf
aas
jg
pusha
pusha
xor
push
mov
out
ljmp
ja
jae
sbb
and
sub
movsb
fcomps
or
adc
inc
jns
fcoms
cli
sub
repz
stos
xchg
pop
pop
jnp
lcall
lahf
aas
jg
mov
gs
outsl
out
leave
ss
iret
or
sbb
test
pop
aas
jg
cld
adc
stos
pop
in
std
push
clc
data16
scas
std
test
in
iret
lahf
mov
popf
mov
add
lahf
jno
lahf
ds
jo
pop
mov
out
pop
cli
fidivrl
out
dec
test
jno
insb
arpl
inc
jle
lock
xchg
test
fidivrs
dec
xchg
jmp
xchg
out
fwait
aaa
mov
xlat
cld
jmp
fidivrs
mov
in
sbb
ja
int
aaa
outsl
dec
mov
cld
mov
icebp
std
dec
sub
repnz
sbb
and
in
fbstp
add
repz
or
loope
adc
mov
sarl
and
sub
ljmp
rclb
iret
lahf
ja
pop
sbb
hlt
pop
test
push
cmp
cld
stc
cli
and
xor
cmp
imul
pop
das
jle
add
out
ja
out
lahf
aas
lcall
sub
cmc
ss
cld
stc
repz
in
ja
sub
sahf
daa
pop
cmp
repz
lahf
aas
jg
cmp
jecxz
pop
dec
cmpsb
fidivrl
repnz
loopne
push
xor
ret
movsb
ficompl
stc
inc
lahf
mov
mov
sbb
cld
stc
repz
inc
jo
inc
pcmpgtb
mov
in
sahf
aas
jg
mov
pushf
add
inc
or
sub
lea
pop
out
sbb
mov
repnz
mov
fwait
aaa
outsl
inc
dec
stc
lcall
xor
icebp
enter
mov
aam
ljmp
cmc
fdivrs
call
or
aaa
outsl
ficomps
popa
pushf
pop
sbb
jns
out
sbb
rcll
jecxz
xchg
mov
outsl
fidivrs
adc
jle
and
shll
cmp
jo
jns
out
cmp
aad
shl
pop
pop
jo
and
inc
outsb
fidivrs
repnz
jmp
mov
daa
add
sbb
repz
mov
loopne
xchg
and
mov
icebp
fidivs
mov
fidivrs
popf
dec
lock
mov
iret
lahf
mov
aam
mull
loopne
mov
cld
stc
jbe
adc
pusha
pop
mov
out
xchg
iret
lahf
jg
cmpsb
adc
dec
leave
stos
dec
aas
xor
out
iret
inc
adc
inc
pop
aaa
outsl
fidivrs
pop
push
loope
js
dec
data16
mov
pop
aad
pop
cmp
in
mov
push
pop
sbb
cs
cmpl
mov
iret
push
adc
pop
repz
lahf
lahf
cmpsb
sti
pop
sbb
push
mov
mov
jg
cld
stc
popa
and
xchg
insb
pop
pop
dec
aam
mov
aas
xor
push
mov
adc
jle
cld
stc
in
mov
and
rorb
xor
mov
adc
mov
xchg
cmp
dec
pop
add
enter
ficoms
jp
ss
mov
jns
aaa
or
or
mov
xchg
or
aaa
outsl
pop
pop
addb
xor
dec
sub
inc
mov
cmpsb
adc
xchg
xchg
mov
add
fistpl
sub
or
nop
add
dec
jns
out
jge
or
rol
fadd
pop
outsb
es
add
outsb
fidivrs
sub
jno
aaa
outsl
mov
or
dec
dec
loop
aam
js
out
in
inc
popf
fstp
cmp
mov
repz
aas
inc
neg
jl
addr16
lahf
rorb
in
pushf
jmp
push
inc
cmpsl
mov
pop
jl
cld
stc
clc
mov
mov
pop
lds
or
iret
lahf
aas
cmp
cmp
std
cwtl
out
vmovsldup
dec
fisubrs
out
sub
mov
cld
sbb
cld
pop
push
lods
test
aaa
outsl
out
ret
or
jecxz
push
mov
push
ret
arpl
es
add
loopne
fisttps
stc
repz
out
adc
sub
lret
aas
jg
cld
mov
xchg
xchg
shrb
mov
cltd
xor
repz
lahf
or
mov
cmp
mov
jl
xchg
mov
pop
push
inc
or
enter
out
roll
andb
push
faddl
cld
mov
mov
repnz
iret
lahf
in
mov
lret
mov
jg
cld
stc
mov
adc
inc
ficompl
mov
jge
outsb
xchg
lahf
aas
sbb
cwtl
outsl
xor
cmpsb
lea
inc
pop
ja
les
cld
stc
lods
outsb
insl
jle
in
push
ret
push
mov
out
sub
inc
inc
fstpt
cmp
aaa
dec
out
fwait
aaa
push
pop
add
into
or
sti
ret
in
mov
movsb
mov
pop
xchg
dec
xlat
mov
mov
aam
xor
add
push
call
int
aaa
mov
subl
out
mov
repz
imul
clc
cmpsl
pop
xchg
iret
lahf
aas
lcall
out
and
int3
into
jne
test
add
xor
cmp
push
fcomp
outsb
test
cld
cmp
daa
inc
push
cmp
mov
hlt
insb
dec
xor
mov
test
xchg
inc
outsb
fisubs
push
mov
fcoml
cld
nop
mov
mov
xchg
ds
shrb
cs
imull
add
stc
adc
or
dec
adc
lret
adc
dec
cmpsl
jns
mov
mov
xchg
sbb
cmp
mov
sub
jg
pop
xchg
pushf
iret
lahf
jg
pop
jg
mov
mov
inc
cld
stc
repz
mov
mov
in
into
cmp
lahf
aas
jg
aad
sbb
stos
test
into
inc
or
hlt
in
repz
iret
mov
lea
dec
cmp
lahf
aas
jg
insl
sub
pop
stos
test
and
cmc
bound
stc
repz
leave
mov
jns
cmc
mov
mov
jg
or
mov
adc
aas
insb
vcvtdq2pd
out
jno
repnz
xor
cltd
sbb
cli
xlat
mov
jg
cld
jb
in
mov
cld
jno
stos
insl
aad
jne
repz
lahf
dec
cmp
dec
add
jge
push
lahf
jl
stc
xchg
in
add
daa
imul
xchg
fwait
sbbb
or
aas
jg
cld
pushf
cmpsl
inc
pop
popa
jns
stos
out
jnp
add
push
repz
lahf
lock
xor
cmp
cld
stc
test
ffreep
in
cmp
sub
xchg
or
orb
cmp
jbe
mov
or
insl
pusha
aaa
outsl
ficoms
cmc
popa
xor
push
outsl
cmc
mov
xchg
repz
fwait
cwtl
and
jo
nopl
or
fdivrl
inc
test
xchg
mov
jg
xchg
mov
lret
mov
cld
stc
repz
inc
xchg
les
mov
adc
pop
pop
mov
xor
es
dec
call
outsl
mov
xor
adc
js
clc
cmp
stc
mov
cld
xchg
xchg
fsubrp
inc
ljmp
lock
les
xor
test
outsl
fidivrs
inc
jge
dec
jns
shll
int
aaa
outsl
adc
add
fimuls
out
mov
test
test
aam
loopne
sbb
push
fisttpl
mov
push
lds
mov
and
fldt
hlt
enter
sahf
inc
insb
mov
fs
movsl
adc
jno
or
add
or
inc
dec
pushf
cmp
push
inc
into
push
out
fwait
aaa
sub
add
ja
imul
push
cmp
adc
popf
mov
fnstcw
mov
test
cld
stc
inc
lahf
fcmovne
pop
sub
fisttpll
dec
push
push
xchg
lahf
aas
jg
mov
enter
inc
rorl
repz
das
das
fsts
add
xchg
jne
mov
aas
jg
call
ret
arpl
adc
add
loop
repnz
pop
decb
mov
out
lahf
xchg
xchg
or
mov
jg
jg
cld
stc
outsb
mov
incb
jne
js
iret
mov
xor
ret
cld
stc
repz
add
rolb
pusha
out
mov
jg
xor
cmc
repnz
test
inc
sub
repnz
repz
test
inc
mov
inc
inc
test
in
pop
sbb
push
loope
ret
scas
inc
daa
xor
sti
push
mov
je
iret
fwait
aaa
sbb
or
mov
repz
pop
pop
mov
loop
push
scas
pop
xor
mov
xchg
push
rorb
cld
pop
sbb
test
es
add
out
and
xchg
outsl
jae
xor
out
fwait
aaa
cmp
mov
sti
sub
shlb
jns
ja
shll
jp
xchg
outsb
xchg
aaa
outsl
pushf
jae
lds
push
sbbl
xor
shl
xchg
test
dec
sbb
or
and
ret
in
mov
int
aaa
outsl
out
daa
nop
mov
mov
push
jns
out
outsl
fcoml
fimuls
in
xor
fwait
aaa
outsl
ficomps
jne
stos
inc
sub
xchg
xchg
int
lcall
aas
pop
lock
repz
lahf
add
cmpsb
lcall
adc
stc
jecxz
sub
test
js
out
mov
cltd
cmp
dec
inc
cld
stc
repz
xchg
cmp
loopne
sbb
cli
adc
popl
incb
cld
stc
repz
cmpl
imul
mov
clc
loop
lahf
inc
push
fisttps
pop
pop
cmp
mov
xchg
jp
cmp
cwtl
test
fwait
icebp
test
adc
negl
jge
add
xor
rclb
xor
lahf
aas
aas
adc
cwtl
sarb
leave
jg
adcb
ja
mov
pop
leave
pop
rcll
mov
call
cmc
ss
jns
inc
mov
cmp
iret
into
in
or
aaa
outsl
fisubrs
lods
ss
jg
jns
out
and
jle,pn
mov
pop
mov
clc
das
mov
mov
fbld
push
repnz
loopne
test
bound
imul
lahf
aas
cmp
sbb
mov
and
sbb
insl
sub
sub
adc
fisttpll
fsubs
cld
stos
sbb
pop
mov
jnp
ja
mov
fcom
enter
lcall
and
adc
cmp
xlat
jp
outsb
fidivrs
xor
mov
loop
stos
fwait
aaa
inc
dec
loop
inc
lods
jbe
sbb
int
movsl
mov
xchg
sub
sarl
adc
inc
outsb
fidivrs
push
ret
cwtl
pop
mov
lea
add
enter
pushf
rolb
bound
jns
dec
loopne
and
xchg
imul
aad
out
fwait
aaa
aad
xor
jge
test
jge
repz
incl
xchg
push
adc
push
pop
sbb
iret
lahf
out
and
inc
xor
or
cld
stc
pushf
or
std
pop
sub
mov
jnp
add
lods
sub
std
cld
stc
rep
std
push
mov
or
inc
in
adc
inc
adc
aas
jg
arpl
inc
pop
cmp
iret
lahf
jg
xchg
xchg
sbb
cmp
pop
add
je
mov
fdivrl
clc
loopne
jae
sbb
stc
adc
es
adc
repz
ds
icebp
push
fistpll
pop
cmp
inc
jl
jmp
aas
shrb
xchg
fwait
aaa
adc
sub
sub
aas
out
fmul
loope
aam
cmp
fisubs
mov
repz
push
int
ja
pop
dec
cmpsb
xor
mov
testl
out
stc
call
icebp
mov
jge
aaa
outsl
fidivrs
repnz
or
rorl
sbb
fwait
cmp
std
aad
pusha
sub
lcall
jns
clc
push
pop
pop
ret
faddl
sub
fstp
xor
fwait
aaa
or
xor
aas
test
cld
stc
test
mov
xchg
add
outsl
iret
enter
lahf
aas
jg
jl
das
movsl
pop
push
out
and
jmp
xor
in
sbb
cmp
jns
es
cmpsl
addr16
iret
xchg
mov
int3
aaa
outsl
fidivrs
adc
shr
and
roll
push
mov
xlat
dec
aas
stc
cld
mov
cmp
in
mov
aad
fwait
ja
xlat
inc
adc
jle
bound
repz
loop
add
push
cmp
fidivrs
nop
rolb
push
sbb
xchg
sbb
jmp
push
jno
int
ljmp
or
fidivrs
aad
std
test
dec
cmp
stos
cld
mov
dec
je
mov
test
jg
xchg
out
and
push
repz
sbb
popa
xor
push
imul
cmp
arpl
sub
outsl
out
out
je
scas
outsb
std
inc
push
push
inc
out
fwait
aaa
mov
pushf
js
xlat
sbb
mov
mov
rorl
cmp
aaa
outsl
ficomps
or
sbb
push
xlat
rcrl
repz
pop
mov
or
fsubrs
shll
aaa
outsl
fidivrs
mov
adc
jne
repz
fwait
cmovae
in
lret
mov
jb
fdivrl
mov
or
xlat
xchg
pushf
out
lahf
jg
notb
inc
adc
adc
test
in
fsubrl
sarl
int
push
iret
testl
push
andb
aaa
outsl
fidivrs
out
jmp
xor
fisttpl
repz
fwait
or
add
aam
subb
jns
cmp
and
lea
pop
adc
add
dec
sbb
aas
xchg
fwait
imul
xlat
fidivrl
cwtl
fwait
mov
mov
mov
repz
sbb
xor
cwtl
mov
xchg
mov
mov
test
daa
mov
out
mov
cld
cwtl
ffreep
bound
repnz
call
fsubr
cs
aaa
outsl
fisubrs
mov
mov
pop
xlat
mov
repz
sbb
mov
lret
sub
add
dec
pushf
outsl
sub
mov
mov
or
or
setbe
int
fwait
aaa
popa
lods
adc
divb
adc
xchg
jg
in
pop
mov
out
scas
movzwl
sub
into
in
pop
lock
add
imul
scas
pop
sub
movsb
mov
lods
add
fists
pop
pop
imul
xchg
dec
insb
cld
stc
repz
add
ljmp
sbb
adc
nop
inc
fnstenv
fs
sub
insb
popa
jg
repz
cltd
or
int
out
std
in
jns
aas
jg
cld
out
ret
daa
adc
jbe
add
je
enter
in
or
outsb
and
int
add
dec
movl
jns
out
sbb
test
in
jnp
sub
jle
outsl
ficomps
xor
sti
sub
xlat
faddl
shrb
push
mov
inc
aaa
outsl
fidivrs
daa
lods
scas
fs
xchg
mov
int
sbb
test
add
int3
mov
sbb
jns
das
pop
xchg
ljmp
repz
sub
movsb
fdivrl
mov
aas
jg
xor
sbb
sbb
js
jg
mov
leave
out
out
inc
and
arpl
repz
pop
imul
ja
lret
rorl
leave
add
mov
movsb
inc
sub
inc
stc
repz
hlt
mov
adcl
scas
adc
mov
cld
pop
dec
dec
daa
and
and
mov
xchg
mov
cmovae
outsl
fidivrs
pusha
cmp
cmp
hlt
mov
hlt
mov
pop
pop
icebp
outsl
fidivrs
sub
cmpl
mov
adc
in
fwait
aaa
outsl
and
int3
xor
lods
add
aas
cmc
enter
mov
push
jge
stc
cli
cmp
shll
insl
sti
outsl
fidivrs
and
movsb
jmp
inc
out
fwait
aaa
shlb
dec
icebp
rorl
sti
enter
mov
cmp
and
repnz
xor
cmpsl
mov
fnstcw
repz
pop
dec
dec
cltd
mov
mov
push
sbb
outsl
fidivrs
jno
insb
add
push
xchg
out
fwait
sti
jmp
mov
fsubr
outsl
fidivrs
cmp
das
add
push
aad
hlt
loope
fwait
aaa
lahf
push
adc
lods
dec
pop
scas
mov
cld
pop
repz
mov
ljmp
stc
repz
push
insb
adcl
call
aas
jg
mov
cmp
xor
or
cld
stc
repz
jb
pop
sahf
cmpsb
inc
aad
cmpsb
les
inc
loopne
aas
jg
and
xor
push
xchg
test
mov
push
push
ds
stc
sbb
leave
mov
inc
jae
fwait
and
aas
jg
inc
xchg
push
inc
xlat
xchg
negl
push
inc
repz
lahf
rclb
push
aam
and
and
add
jg
cld
stc
ja
imul
js
push
jl
lods
rorb
enter
iret
lahf
aas
stc
movsl
mov
dec
jns
dec
paddd
stc
repz
add
out
fidivl
xchg
push
mov
jg
jnp
aaa
out
nop
or
xchg
push
nop
lods
push
out
in
pushf
push
aas
mov
out
aam
mov
repnz
out
fwait
aaa
xchg
test
pushf
jl
mov
mov
lcall
mov
jle
aaa
outsl
fidivs
das
add
inc
je
addr16
repz
gs
push
pop
fwait
aaa
inc
dec
add
aad
test
aaa
outsl
fidivrs
nop
mov
movsl
push
movsb
or
pop
sub
add
aas
inc
int
aaa
outsl
dec
jp
or
dec
jne
jmp
mov
fidivs
cmc
jecxz
aas
das
jbe
adc
fwait
aaa
outsl
ficoms
stc
push
imul
inc
inc
int3
push
aas
ljmp
mov
inc
push
xchg
out
lahf
int
sbb
shrl
andl
iret
mov
adcb
xchg
neg
or
jle
cld
stc
mov
in
inc
or
cwtl
repnz
stc
outsl
stos
or
or
ja
and
out
fwait
aaa
push
jae
or
mov
negb
push
jbe
test
inc
lcall
and
adc
fidivrl
scas
cmpsl
sub
sub
sbb
out
jle
xchg
mov
or
call
fwait
aaa
outsl
fisubrs
cwtl
push
mov
dec
push
adcb
in
adc
jns
inc
jg
movb
scas
fists
icebp
aam
enter
jp
push
imul
adc
lahf
aas
sub
scas
xchg
scas
push
movsb
inc
adc
fdivrp
stc
repz
aad
jge
or
xor
xchg
cmp
fnstenv
mov
hlt
xchg
test
movsb
add
subb
jg
cld
stc
repnz
push
cli
fcoml
xor
rorl
xor
stc
out
lahf
aas
scas
rol
fwait
dec
push
ficoml
cld
stc
repz
test
loope
or
xchg
inc
push
iret
lahf
aas
jg
fcomip
sahf
mov
adc
jle
add
cmpsb
sub
leave
out
gs
mov
leave
das
insb
fidivrs
xchg
mov
push
dec
cwtl
mov
fxch
mov
adc
xchg
cmp
test
sub
enter
fstps
iret
push
ss
sti
imul
in
mov
aaa
outsl
fidivrs
adc
jmp
sar
mov
sub
rclb
arpl
aaa
outsl
fidivrs
mov
maxps
repnz
fwait
jmp
or
loopne
cmpsl
stc
stc
ja
mov
divl
aas
cld
stc
rcll
adc
mov
lret
outsb
mulb
push
jne,pt
jns
cmpsb
aas
pop
mov
mov
inc
out
lahf
aas
and
in
daa
dec
cmp
cld
arpl
repnz
stos
stos
insb
push
inc
lea
rol
cmp
mov
sub
jle
inc
dec
mov
aad
out
push
aas
jg
cld
mov
mov
inc
cltd
jmp
xchg
repz
lahf
jb
out
mov
inc
xlat
mov
fstpt
cld
stc
arpl
daa
les
popa
sub
sarl
iret
aas
xchg
inc
out
out
or
and
stc
repz
fwait
xor
sbb
adc
fwait
adcb
repz
xor
mov
sub
shr
fcomps
aaa
outsl
fidivrs
xchg
xor
stos
test
pop
or
sbb
in
fwait
outsb
jnp
adc
mov
mov
mov
icebp
pop
push
or
shl
adc
stos
inc
outsb
jns
and
sub
sbb
add
xor
jbe
scas
mov
in
inc
or
xor
mov
mov
adc
fwait
aaa
outsl
fsubp
xor
test
mov
sub
add
out
shrl
popa
jbe
mov
adc
test
push
or
loope
sbb
mov
std
sarb
sbb
in
scas
scas
pop
insl
jge
addb
xchg
sub
mov
out
cmp
adc
int3
es
ljmp
rcrb
lock
idiv
cld
stc
repz
daa
jbe
mov
roll
rcrl
aad
jg,pt
add
jne
psraw
dec
in
aas
jg
movl
or
pop
stc
repz
out
push
push
dec
cmpsb
rcl
xchg
xchg
and
out
dec
inc
jle
cld
adc
push
emms
jmp
loope
icebp
in
iret
mov
dec
scas
outsl
mov
push
decl
lahf
shlb
ja
mov
lar
mov
inc
inc
jae
mov
test
and
or
mov
xor
cmp
stos
scas
jg
xor
or
aam
push
or
std
add
cwtl
leave
out
insl
xor
aaa
outsl
ficoms
icebp
test
dec
je
sub
int
cmp
adc
inc
and
outsl
fidivrs
pop
jne
xor
scas
out
cwtl
mov
adc
int
aaa
jp
mov
lret
js
adc
inc
mov
jno
pop
jns
lret
xchg
mov
fwait
aaa
outsl
inc
jae
dec
mov
inc
mov
repz
test
lret
inc
lret
fs
xchg
add
fidivrs
js
mov
aad
enter
and
das
aas
iret
rcl
push
in
mov
andl
add
in
in
pop
pushf
pop
daa
jg
cld
push
xchg
fmul
inc
cs
in
or
addb
iret
mov
repz
or
adcl
stc
jmp
ds
test
and
pop
mov
repnz
imul
xchg
push
daa
in
jmp
push
push
lcall
outsl
fidivrs
mov
imul
sbb
xchg
fwait
xchg
hlt
lock
push
push
jg
das
shlb
xchg
ret
xchg
mov
jg
jb
daa
push
aas
cmp
xchg
pop
jg
pop
pusha
fwait
and
and
clc
out
int
cmc
outsb
push
push
clc
xor
bnd
cmp
loop
or
cmp
out
cld
mov
mov
mov
ja
xchg
push
mov
movb
les
stos
and
jnp
repnz
lods
ljmp
int
and
sbb
shr
fidivrs
mov
adc
mov
jp
out
adc
xor
int
aaa
outsl
cmc
cmpsl
cmpsw
jmp
adc
pop
mov
pop
jg
ror
dec
sbb
or
enter
mov
insb
add
ds
sbb
adc
cmp
inc
es
test
mov
repnz
mov
ds
aam
xchg
aaa
outsl
mov
pop
ret
rclb
and
test
inc
adc
or
xor
inc
out
sub
mov
aaa
outsl
fisubrs
xchg
push
adcb
sub
xchg
pusha
jb
dec
repz
in
shlb
sub
adc
inc
adc
cld
stc
mov
out
sub
cmp
jecxz
cs
mov
in
lahf
aas
int
adc
xchg
push
cmp
incb
loope
not
and
cmp
lahf
aas
arpl
inc
adc
subb
cld
stc
rep
clc
push
call
push
data16
ret
xchg
aas
jg
cmc
dec
lret
inc
test
cld
stc
add
push
lcall
pushf
out
lahf
aas
outsb
daa
and
jecxz
cmpl
sbb
adc
pusha
dec
outsb
stos
js
cli
iret
lahf
aas
jg
subl
jl
ret
lods
test
cld
stc
repz
pop
int3
hlt
ds
enter
aaa
and
jg
ds
fnstenv
cmpb
repz
out
movsl
and
mov
stos
test
stos
xor
jl
pop
outsb
fidivrs
addl
cltd
int
addb
stos
mov
push
mov
fstps
mov
into
cmp
fwait
aaa
outsl
fiadds
inc
mov
add
loope
fiadds
enter
cmp
iret
out
daa
outsl
fidivrs
xchg
call
push
ficoml
imul
fwait
aaa
mov
cmovp
jl
imul
sbb
repz
pusha
cld
in
test
ss
imull
out
lahf
xchg
lock
cwtl
fstpl
insb
cmpsb
sub
cld
stc
xchg
sub
jle
mov
call
shl
iret
lahf
aas
sbb
push
add
and
cld
stc
repz
out
insb
jne
push
lcall
into
into
iret
lahf
aas
jg
add
fists
pop
or
enter
add
cld
stc
repz
mov
pop
jo
pushf
pop
push
push
adc
push
push
dec
inc
xchg
aas
jg
and
test
ljmp
or
lock
aas
jmp
mov
mov
mov
fcmovu
mov
cltd
mov
aaa
outsl
fimuls
mov
mov
mov
js
out
lods
xchg
lods
enter
mov
mov
dec
jle
lds
add
jmp
pop
mov
scas
lahf
aas
jg
fistps
sub
ljmp
repz
add
sub
aas
pop
filds
xchg
jg
lea
fdivrs
push
jl
stc
repz
adc
mov
dec
sub
jg
sub
dec
or
int3
mov
add
fcoms
inc
stc
repz
inc
addr16
addr16
test
push
les
jg
cld
jbe
out
test
mov
add
out
iret
lahf
repz
or
insl
mov
rcll
add
shll
rclb
push
div
movsb
mov
out
add
add
stos
es
sub
sbb
call
fnstcw
leave
inc
iret
push
xchg
les
pop
push
in
dec
sub
roll
inc
shll
add
jne
inc
cmp
adc
dec
mov
aam
movsl
sbb
add
mov
xor
js
sub
les
pop
jmp
adc
test
push
std
das
jbe
cmp
dec
leave
xor
pop
subb
sub
or
add
inc
rorl
insl
orl
adc
out
mov
push
es
sbb
mov
mov
subb
sub
loopne
inc
or
clc
sbb
push
pop
xchg
push
pop
imul
adc
mov
or
xchg
sub
sub
or
hlt
inc
rclb
repnz
rcl
jp
ret
imul
loop
jge
adc
add
mov
sbb
ds
inc
pop
push
xchg
sub
inc
aad
or
cmovl
fwait
subl
call
adc
and
out
mov
or
dec
or
add
cmp
lea
sarl
cmovno
in
push
cmc
sub
sub
sub
or
loopne
pop
and
ret
je
pop
mov
stos
shll
ljmp
sub
cmp
scas
add
mov
ret
pop
or
sbb
enter
pop
adc
es
cli
sbb
sub
push
lock
push
fs
push
ja
test
jecxz
push
push
ror
cmp
test
dec
or
stc
ja
mov
ret
or
sbb
incl
and
addr16
add
lock
shl
mov
mov
test
adc
jmp
imul
add
imul
inc
push
push
push
pextrw
clc
add
clc
sbb
and
mov
adc
ss
into
or
clc
jge
or
xlat
lock
sbb
mov
pop
out
mov
stos
push
js
push
mov
addr16
sbb
add
cli
or
adcb
mov
sub
adc
sub
inc
adc
aam
scas
sbb
lods
mov
popf
stos
cmpsb
and
inc
mov
add
add
divl
cmc
add
mov
icebp
sub
sbb
orb
out
int3
stos
pushf
jmp
mov
adc
shlb
or
aam
sahf
push
xor
mov
inc
insl
sbb
gs
add
adc
mov
mov
call
int
sbb
sbb
or
sbbb
pop
add
inc
in
sbb
sbb
push
sbb
mov
push
inc
and
sub
fsubrl
notb
popa
lods
mov
jmp
test
lods
adc
mov
in
jb
sub
push
enter
add
push
movb
cwtl
imul
das
jae
mov
aad
xchg
sbb
sti
push
or
mov
inc
popf
jnp
inc
mov
adc
mov
pop
cs
clc
adc
popa
jecxz
in
rorl
sbb
mov
push
mov
out
mov
xor
push
add
icebp
lods
test
cmpsl
pop
call
inc
aad
leave
push
outsb
mov
or
or
mov
imul
andl
sub
add
inc
or
out
outsb
cli
sbb
sbb
mov
cmc
aad
push
sub
cmpsb
scas
into
and
shlb
addb
add
sub
aam
dec
adc
outsb
xor
add
inc
sarb
mov
adc
mov
rcr
mov
mov
add
sbb
or
fistps
or
adc
pminub
ja
out
adc
lock
sbb
bound
jl
dec
push
clc
subb
add
rolb
pop
mov
or
js
inc
add
ret
ljmp
mov
dec
add
mov
in
nop
loope
add
push
fildl
adc
movsb
and
imul
add
faddp
jmp
or
or
pop
push
push
push
mov
add
mov
pop
inc
loopne
inc
jmp
lahf
lret
pop
lret
insl
mov
sbb
int
inc
xor
mov
mov
xor
call
add
daa
pop
sbb
js
mov
popa
mov
push
push
fbstp
andb
pop
jb
sbb
inc
insl
push
push
xor
arpl
test
dec
sbb
add
addl
push
mov
or
dec
idivb
jo
lods
xor
dec
icebp
into
or
mov
or
add
adc
jbe
xchg
mov
pusha
sub
lock
pop
xchg
jg
add
jo
jno
imul
pusha
jo
lret
adc
sub
and
popf
adc
fsubs
cmp
cmp
push
mov
adc
loopne
aam
jp
and
or
clc
pop
mov
mov
push
push
mov
movsb
jne
mov
adc
sbb
mov
mov
rcl
insb
mov
adc
inc
sbb
push
inc
in
mov
jmp
add
int
or
add
addb
sbb
subl
dec
dec
xchg
cld
or
add
xor
pop
mov
shr
sub
cmpsl
xor
pop
out
ds
or
lret
pop
rcr
mov
outsb
sbb
inc
in
push
ret
lds
inc
sbb
leave
mov
sbb
push
cs
ja
push
lea
leave
sbb
arpl
sbb
ret
push
and
movl
mov
aad
sti
sbbb
sahf
aam
xchg
stos
cmp
out
mov
or
add
mov
in
cmp
xchg
add
sub
xchg
out
mov
mov
push
xchg
mov
inc
in
add
jecxz
push
ljmp
push
dec
jl
xor
lock
dec
mov
adcb
lock
ret
sarb
or
inc
in
or
xchg
sub
cmp
push
aas
adc
inc
xchg
xor
and
sbb
xchg
inc
push
mov
mov
out
adc
test
les
xchg
adc
ret
or
roll
push
xor
repnz
or
adc
and
push
push
insl
add
add
sbb
cmpsb
roll
mov
aam
test
jo
and
or
notb
xor
js
or
out
add
push
push
inc
rolb
shll
mov
cmc
jb
push
and
je
js
xchg
sbb
pop
adc
xor
mov
add
sub
test
orl
push
pop
push
adc
and
push
xchg
pop
push
push
jae
ljmp
cmp
nop
sahf
fcomps
pop
cmp
arpl
mov
ja
and
cmpsb
add
sbb
xchg
lea
mov
inc
add
in
adc
xchg
sub
ret
mov
xchg
fwait
ret
dec
mov
pop
mov
pop
sbbb
mov
or
loopne
mov
unpckhps
xchg
pop
push
inc
push
inc
in
mov
test
or
in
sbb
enter
outsb
xorb
std
ja
orb
repnz
jge
ret
icebp
movb
mov
sub
push
and
and
xchg
jmp
sub
repz
pop
sbb
mov
adc
mov
or
pusha
mov
imul
clc
lcall
out
dec
lea
xor
adc
ja
inc
push
sub
es
mov
or
xor
rolb
push
call
pop
mov
les
jne
push
lahf
fadds
add
push
sbb
dec
push
sub
xchg
push
pop
or
mov
filds
notb
sub
adc
cmp
call
adc
push
sbb
pop
inc
repnz
mov
adc
das
fimull
add
mov
icebp
adcb
stos
popf
and
hlt
adc
xchg
mov
in
stos
adc
push
push
int
stc
mov
or
xor
faddl
jo
bound
lods
xor
dec
mov
in
imulw
and
sbb
cmp
mov
gs
stos
insl
add
sbb
mov
cmp
roll
inc
sub
enter
dec
int
or
inc
mov
ret
mov
mov
or
fsubrs
mov
pushf
sarl
or
stos
adcb
mov
hlt
cmc
push
imul
and
mov
loopne
subb
jo
sbb
rcrl
sbb
jae
add
lahf
jmp
mov
outsb
imul
test
jbe
call
xor
lods
xor
xchg
mov
dec
push
sbb
jo
sbbb
pop
ret
leave
push
daa
mov
rcl
mov
aad
dec
ss
xchg
test
jge
andl
lds
fadd
sbb
lahf
add
das
es
lods
cmp
add
movsb
push
fsubl
mov
orl
mov
or
push
test
mov
leave
aam
sbb
mov
push
mov
xchg
repnz
sub
clc
sbb
test
sub
nopl
push
repnz
sbb
push
loopne
add
and
inc
mov
stos
out
push
mov
mov
add
adc
xchg
jb
xor
sbb
lret
jnp
jno
lods
and
dec
sbb
pushf
stos
std
inc
mov
xor
lods
roll
mov
test
and
cmp
inc
cmp
sub
imul
mov
adc
sbbb
test
push
and
es
lcall
or
sbb
addl
push
and
xchg
outsb
sbb
ss
cmp
add
push
cmp
lcall
ljmp
xor
loope
jnp
daa
push
mov
in
push
jecxz
xchg
fwait
adc
inc
enter
pop
mov
ret
adc
enter
imul
jbe
xchg
sbb
jle
scas
push
aad
or
insb
push
sbb
push
ret
lock
mov
rorl
mov
lcall
adc
sbb
sbb
dec
add
inc
or
or
subb
cmp
or
les
fs
das
pop
jp
adc
cmp
into
mov
mov
rolb
inc
inc
fwait
or
lods
push
push
repnz
push
aad
sub
adc
pushf
sub
add
xchg
sahf
mov
cltd
cmp
or
push
push
js
jp
ret
adc
add
dec
pushf
and
pop
mov
push
adc
and
push
push
pop
jnp
xor
lds
inc
je
or
test
push
dec
sbb
or
pop
lock
add
ds
xor
shlb
xor
push
sbbb
dec
or
inc
adc
cltd
sbb
cmp
je
adc
clc
sbb
fstpt
stos
push
adc
and
in
and
push
push
std
and
push
mov
test
cmpsb
shl
sbb
mov
cmpsl
push
add
xchg
xor
popf
mov
dec
rcrl
sub
push
mov
xor
and
sbbb
xor
or
xor
ret
add
jnp
add
insl
xchg
shl
rcrl
cmp
cmp
test
adc
xor
or
push
pop
mov
cmp
mov
adc
xchg
psubusb
call
push
mov
or
add
fstpt
add
nop
add
pop
and
dec
das
add
push
pop
mov
addr16
sub
push
in
std
mov
or
sbb
pop
mov
inc
daa
mov
inc
aas
lea
andb
add
in
xchg
repz
dec
adc
rolb
bound
pusha
aad
cmp
or
and
call
sbb
aad
leave
adc
or
orl
dec
decb
subb
fisubl
rcrl
lods
aas
xchg
push
push
movsb
dec
and
jne
rcll
das
rorb
sbb
iret
push
mov
and
cltd
xchg
popa
or
xor
sub
dec
jno
push
push
or
sahf
cmovno
sub
cmp
inc
xor
loope
inc
inc
adc
or
decb
mov
pop
jmp
jge
je
push
sarb
add
inc
std
xor
and
aad
stc
jle
test
add
pop
adc
jge
insb
pushf
xor
sbb
testb
nop
add
inc
xor
mov
xor
js
inc
test
lock
adc
cltd
prefetchwt1
cmp
fmuls
es
or
lock
inc
adc
enter
enter
add
or
ljmp
cmpsb
test
adc
push
shlb
pop
sbb
mulb
pop
push
cmp
sub
push
pop
mov
push
stos
dec
adc
adc
aad
push
adc
add
imul
repz
pop
sbbl
jo
adc
out
fwait
insl
cli
push
ljmp
imul
popf
dec
add
pop
sbb
fwait
jae
cmp
adc
sbb
cmc
add
scas
add
cmpsl
fcoml
pop
push
aam
inc
stos
and
arpl
cli
daa
sub
cli
push
add
rolb
and
adc
cmp
add
inc
or
adc
adc
or
dec
out
shl
adc
or
sbb
andl
mov
push
jne
jl
jo
sbbl
int3
jecxz
or
pop
rcrl
outsl
push
sbb
je
push
jo
into
aaa
imul
sub
arpl
push
jb
adc
enter
and
leave
out
jo
pop
lods
cmpsl
sar
cmp
mov
pop
xor
push
loope
loop
sbb
sbb
fisttpll
ret
sbb
mov
in
aad
addr16
push
imul
dec
pop
lahf
adc
push
test
mov
push
xlat
adc
or
ret
jge
in
cmpsb
fstps
sbb
xor
icebp
mov
mov
add
inc
das
fidivl
loop
jbe
test
xor
cmpsb
ret
cmpsl
jo
or
and
or
add
cmp
rorl
leave
jo
mov
int3
xor
inc
add
add
loope
aam
fists
jnp
sbb
cld
rolb
es
xchg
add
test
push
add
inc
add
pop
jo
rcrl
fdivrs
cmovno
and
lds
sbb
add
sub
dec
in
or
lcall
xor
xlat
fdivl
stc
push
cld
sbb
inc
pop
cmp
repnz
imul
mov
mov
mov
cmpsb
addr16
jmp
jl
jo
or
or
outsl
lods
mov
adc
dec
xor
cmp
je
int
push
dec
xor
pop
imul
fsubl
mov
mov
jo
lods
add
jo
adc
pusha
add
loopne
or
add
aas
ja
dec
pop
cltd
and
inc
add
rorb
add
or
push
mov
mov
sbb
xchg
xchg
inc
lea
xlat
stos
pop
adc
jmp
mov
sbb
sbb
sbb
es
mov
or
iret
gs
mov
pop
repz
mov
outsb
dec
bnd
call
pop
cmp
add
outsb
or
adc
xchg
xchg
stos
mov
ss
and
test
lock
and
push
pop
movsl
push
mov
sub
scas
bound
mov
stos
push
call
frstor
jl
std
ljmp
imul
lds
and
lea
cmpl
jmp
mov
push
test
cli
dec
pop
mov
cwtl
ret
push
pop
sbb
add
fisubrl
enter
stc
pusha
fcoms
push
mov
loope
mov
je
shrb
add
in
popf
adc
sub
lret
adc
addr16
loop
mov
mov
or
mov
and
das
jp
fisubrs
call
lahf
out
xor
dec
sbb
or
pop
push
fdivl
stc
loopne
add
rol
mov
or
add
ret
add
push
fcomps
push
xor
mov
xchg
jbe
push
aad
jae
xor
cmp
lods
pop
dec
adc
or
cmp
push
xor
jmp
or
lods
rcr
popa
xchg
dec
test
mov
test
adc
xchg
decb
std
adc
lret
ret
xchg
ss
xchg
pop
ja
add
or
pop
jne
mov
pop
roll
sbb
shrb
icebp
add
pop
jmp
stc
sbb
add
inc
sahf
xor
inc
adc
push
cmp
push
mov
mov
add
sbb
movl
ret
push
pushf
sub
add
and
or
xorl
or
ret
add
sub
daa
inc
mov
outsl
ror
mov
imul
add
mov
movsl
push
int
rolb
andb
push
std
ljmp
dec
sarl
idivb
add
popf
and
sub
jne
pusha
sbb
mov
xor
movsl
roll
mov
adc
and
add
jg
push
pushf
arpl
mov
and
add
adc
pop
adc
in
xor
jns
cmpsb
dec
push
pop
add
popa
or
aad
adc
leave
add
movsb
push
test
aam
inc
lea
mov
cmp
mov
pop
movsb
in
mov
pop
shll
bound
notb
sub
mov
rcll
rorl
leave
mov
adc
mov
sub
test
mov
out
xor
jl
enter
rorl
in
sub
dec
or
mov
ljmp
xor
or
sub
xchg
or
add
leave
pop
pop
lea
lock
mov
leave
cmp
xchg
ja
frstpm(287
pushf
lock
daa
mov
mov
xchg
inc
mov
enter
xor
cmpsl
mov
push
enter
push
adc
xor
daa
cmp
add
sbb
push
stos
das
out
cmp
leave
mov
push
push
test
inc
or
mov
sbb
jmp
cmc
push
mov
es
inc
popa
add
add
inc
mov
sti
mov
push
je
xor
add
add
inc
sbb
cmpsl
xchg
mov
mov
mov
adc
add
cli
or
sarb
push
lods
inc
add
pop
mov
pop
adc
sbb
call
or
sub
rcll
addr16
loope
fdivrs
mov
orl
mov
and
lock
or
push
dec
sub
cli
inc
pop
inc
loopne
push
sarb
push
mov
or
push
push
mov
aaa
adc
and
mov
js
lcall
or
sbb
mov
lret
xchg
add
shrl
and
sbb
inc
out
adc
pop
push
adc
and
sbb
mov
add
push
pop
sti
inc
add
fucomip
inc
adc
mov
push
dec
mov
or
test
add
push
inc
orb
or
movsl
xor
roll
mov
pop
pop
and
fs
das
stos
push
cmp
adc
orb
sbb
inc
sbb
adc
loopne
imul
jo
in
pop
fidivrl
inc
inc
sbb
nopl
cmp
mov
or
lock
push
push
xchg
jae
jns
pop
les
icebp
mov
insl
push
subl
push
mov
sbb
ja
add
add
adc
xchg
add
pop
subl
sub
jecxz
adc
test
add
sbb
popa
adc
je
xor
cmp
adc
dec
and
adc
add
add
int3
clc
pop
sub
and
mov
mov
xchg
ret
dec
xor
mov
push
add
leave
mov
add
push
add
push
and
jl
mov
push
test
mov
add
xchg
push
and
pop
fldl
and
shlb
or
push
and
aam
gs
sbb
nop
sbbl
imul
adc
xchg
test
aam
sbb
mov
mov
push
pop
subb
cmp
rorl
cmp
sti
add
sub
add
mov
loope
push
mov
push
mov
xor
add
pop
push
inc
mov
enter
push
mov
jb
ret
cmc
movsb
jo
pop
xchg
dec
and
mov
and
xchg
mulb
int3
stos
inc
pushf
stos
inc
jno
or
sbb
xor
and
jg
push
orl
cwtl
mov
aam
cmp
enter
push
adc
adc
mov
insb
or
aad
loope
pop
push
pop
xchg
dec
mov
pop
lds
mov
lods
and
pop
push
push
inc
pop
push
mov
sub
hlt
push
or
mov
mov
sbb
push
inc
pop
cmp
rcrl
and
sub
mov
fldenv
add
pusha
push
sarl
je
ds
cltd
mov
ret
mov
mov
inc
enter
ss
ret
fisubl
jle
sbb
xchg
sbb
add
inc
inc
out
inc
mov
cmp
aad
xor
xor
inc
push
xchg
sbb
mov
add
scas
or
ficoms
in
or
popf
jp
add
push
rorl
test
or
popf
xor
loopne
jmp
push
pop
jb
push
xor
rcll
and
add
xor
mov
push
gs
or
add
stos
add
add
test
push
push
xor
rorb
xchg
ret
sar
lahf
aad
inc
je
pop
add
adc
test
movsb
xchg
mov
sub
addb
sbb
jae
xchg
lea
call
xchg
xor
ja
insl
push
imul
fcmovb
enter
or
inc
decl
jae
das
mov
fwait
and
inc
je
push
inc
xor
dec
dec
inc
shr
xchg
mov
ret
push
loop
movsb
pushf
loopne
inc
xchg
pusha
testb
cld
mov
mov
cmp
in
inc
je
add
inc
push
adc
nop
ret
icebp
or
jmp
dec
inc
jp
mov
and
pop
hlt
rorl
testl
ud1
rcl
inc
mov
rclb
and
pop
movsb
push
cmp
push
fs
inc
rcr
out
and
xchg
xchg
les
outsl
push
mov
add
shlb
and
hlt
mov
add
fldcw
popf
jmp
push
roll
jo
sarl
loop
xchg
mov
mov
out
pusha
sbb
cmp
mov
push
push
mov
sbb
jno
popf
or
pusha
mov
mov
mov
mov
pop
or
aas
rcr
cwtl
and
jmp
xchg
loop
insl
xlat
push
add
test
rclb
add
push
inc
ror
scas
cmc
push
pushf
add
adc
xchg
call
arpl
aam
mov
insl
inc
daa
xor
lds
push
inc
roll
cmp
scas
clc
sub
fsubs
xchg
add
mov
dec
sub
and
lret
mov
cmpsb
test
sub
add
or
sub
mov
data16
rorl
cmc
dec
xor
pandn
sarb
pop
or
lret
mov
sub
mov
push
lds
idivb
and
andb
push
adc
pop
adc
pop
adc
leave
pop
cmp
int
or
mov
inc
or
cltd
add
sbb
js
sbb
cmpb
and
jp
int
add
xlat
xchg
pop
and
test
adc
or
xchg
sbb
sti
arpl
rorb
mov
test
mov
cmc
insl
xchg
ja
push
out
int3
popa
dec
push
add
push
push
pop
lock
mov
xchg
xor
cmp
cmp
mov
pop
ret
mov
mov
or
pop
push
lock
push
xor
inc
rorl
sbb
add
mov
mov
add
jecxz
cmpsb
push
cmp
mov
pushw
add
mov
in
test
ja
mov
mov
sub
push
xchg
mov
or
inc
xchg
addb
add
or
lds
aas
mov
enter
cmp
add
bound
mov
add
sbb
sbb
repnz
sub
rcr
rcll
dec
or
mov
ret
pusha
cmp
jb
cmpl
movsl
ret
sub
inc
mov
mov
cli
sub
xchg
sub
cmp
dec
push
rorb
fadds
lds
scas
mov
lock
mov
fiadds
mov
rolb
add
sbb
sbb
icebp
movb
pop
sbb
mov
mov
cwtl
sub
mov
pusha
enter
repnz
push
imul
subl
cmp
roll
xchg
cmp
addr16
sbb
add
cmp
arpl
or
cwtl
stos
jp
outsb
jmp
or
push
loope
inc
adc
orl
mov
mov
das
out
push
ret
sbb
add
fcmovne
in
adc
push
fimull
mov
ds
add
push
xor
loopne
outsl
push
les
cmp
push
ret
adc
iret
cmp
or
cmp
pop
inc
shrl
lock
cmp
or
mov
lods
jno
and
jb
inc
or
je
add
sbb
and
xchg
adc
pop
mov
sbb
or
sarl
mov
nop
push
test
mov
adc
inc
loope
and
es
xchg
hlt
shrb
xor
shll
add
pop
xor
jns
jo
mov
faddl
push
or
mov
push
mov
popf
adc
add
jge
dec
cmp
lcall
hlt
and
enter
stos
jmp
and
xchg
sbb
pop
js
shll
mov
pop
pusha
adc
or
mov
add
jp
push
jge
adc
jp
sub
inc
je
ljmp
test
subl
cs
rcrb
stos
pop
adc
negb
add
jecxz
sub
add
xchg
mov
xchg
movsl
push
adc
sbb
push
push
divb
xor
mov
out
add
and
mov
sbb
int3
jo
loopne
inc
inc
iret
int3
add
ret
sbb
sar
call
fistps
mov
xchg
or
inc
xor
mov
pop
rcrl
lcall
mov
add
or
rolb
pop
xor
ljmp
pop
push
test
cmp
adc
add
pop
ror
ljmp
cmp
enter
dec
adc
add
jno
in
push
sbb
adc
xor
sbb
pop
lock
add
adc
add
xor
or
out
dec
cmp
pop
and
lret
inc
cmpsl
jecxz
lea
test
adc
adc
shl
push
and
mov
push
and
movsb
icebp
jle
dec
stos
mov
or
in
repnz
xor
sbb
mov
or
mov
push
out
in
inc
push
bound
adc
stos
adc
or
jge
adc
push
add
mov
adc
pop
add
je
adc
dec
mov
je
and
inc
xor
pop
xchg
insl
sbb
or
nop
andb
shl
icebp
and
sbb
mov
mov
jae
add
pop
sti
xchg
mov
and
push
sti
and
lcall
push
or
les
mov
add
sub
inc
cs
es
in
js
cmp
xor
and
into
pop
ljmp
ret
inc
call
mov
or
data16
sbb
and
rolb
test
jne
fsubr
lret
addl
sbb
call
shll
lret
or
out
notl
ret
pop
cmc
mov
inc
xor
jle
mov
loopne
mov
scas
cmpsl
sbbb
mov
mov
adc
arpl
lods
icebp
cwtl
mov
inc
jmp
sub
cmp
xor
arpl
sbb
add
enter
rorl
and
or
push
add
subl
fs
ljmp
mov
call
or
push
scas
sbb
aaa
sbb
mov
push
xor
lret
in
loopne
mov
icebp
xchg
add
fmul
xor
push
inc
push
mov
mull
movsl
or
jb
js
cmpsb
orb
xor
aam
cmp
cmpsb
lock
cli
xor
push
mov
cmc
add
push
dec
nop
test
cmp
adc
sbb
into
jno
pop
shrb
lcall
inc
add
movsl
incl
inc
sub
scas
ss
jp
pop
decb
sbb
inc
roll
rcll
loop
push
nop
push
adc
testl
testb
and
pop
scas
or
sbbb
mov
mov
addr16
cmp
xchg
sbb
shlb
pusha
ss
pop
or
sbb
enter
sbb
sub
add
dec
inc
loope
pop
inc
ret
add
or
shl
popf
xor
mov
push
enter
mov
jno
lock
inc
inc
push
dec
shl
mov
cmovge
into
sbb
xor
lret
sbb
xorb
shrb
xchg
test
push
mov
cmp
sahf
jp
mov
adc
push
mov
sbb
xchg
mov
push
pop
pop
test
cld
popa
add
cmp
adc
add
clc
or
sub
loop
loopne
shlb
adc
into
popa
inc
scas
dec
jp
sahf
sub
inc
imul
rclb
fdivl
cmp
test
sub
test
inc
sarl
adc
inc
scas
jmp
adc
out
add
rclb
lock
ret
adc
in
mov
mov
adc
xor
popf
jecxz
cmpsb
sbb
mov
rolb
dec
aam
inc
jno
incb
add
or
jb,pn
push
ret
mov
shl
sub
rol
or
cmpsb
sub
and
jae
adc
sub
jno
lret
dec
push
inc
cwtl
or
insb
and
mov
clc
popa
movsb
xchg
addb
push
sbb
inc
les
sbb
mov
addr16
adc
clc
cli
es
sbb
sub
pop
mov
cmpl
push
stos
out
sub
xor
lock
or
cmp
fs
mov
add
test
mov
mov
jno
ret
dec
mov
pusha
ljmp
or
jo
mov
add
sbb
cltd
lock
adc
or
rclb
test
test
scas
sarl
and
icebp
cmpsl
push
pop
popf
add
insl
lods
dec
xchg
sub
iret
pop
lods
lret
andb
je
pop
int3
jl
push
push
pop
mov
mov
je
mov
cmpl
call
pop
mov
test
sbb
or
adc
fmull
rcll
add
loopne
xchg
push
rcl
mov
adc
sub
fadd
adc
fstpl
and
test
negb
rolb
sub
shll
pop
rclb
push
cmp
rcr
dec
inc
xor
pushf
shlb
push
jecxz
inc
or
pop
jbe
mov
stos
and
xchg
addl
dec
push
arpl
nop
rcrl
sbb
sub
decb
cli
cmp
xor
add
push
in
jecxz
jns
aas
push
adc
push
push
in
arpl
je
rorl
divb
mov
fwait
and
cmp
lods
mov
and
hlt
add
rcrl
mov
lds
andl
cmp
mov
inc
inc
in
sbb
jo
xchg
icebp
nop
xor
lret
inc
test
daa
add
aam
xchg
sarb
add
inc
divl
fdiv
lret
sbb
stos
hlt
scas
fisubrl
sbb
std
add
scas
adc
pop
add
mov
insl
movsb
or
lret
scas
xchg
and
fwait
ret
jno
push
out
push
orl
popa
andl
dec
mov
inc
push
cmp
subl
add
cmc
sbb
xchg
push
orl
sti
lods
aaa
jp
cmpsl
nop
cmp
jo
lcall
js
lods
add
add
xor
adc
mov
or
jmp
or
adc
mov
sbb
sbb
loope
out
adc
int
mov
push
xchg
das
adc
test
or
inc
adc
mov
xor
xor
in
addr16
out
add
cmpsb
push
pushf
mov
aam
jnp
push
inc
or
sbb
les
or
xor
push
int
push
or
dec
data16
sbb
mov
inc
lds
imulb
mov
sub
cmpb
inc
mov
shrb
popl
jne
add
inc
sbb
pop
adc
mov
dec
cmp
push
rol
test
pop
adc
rol
adc
lea
push
adc
shlb
mov
mov
daa
and
rcrl
xchg
es
pop
gs
mov
das
push
push
add
stos
sahf
sub
adc
daa
stos
sub
mov
lock
je
add
lret
sub
add
test
rcrl
enter
add
test
sbb
jmp
mov
jbe
pushf
jae
in
outsl
jecxz
push
cmp
push
jmp
cmp
test
inc
xor
shll
call
xchg
add
sub
or
inc
xchg
sub
push
pop
out
out
fucomp
mov
nop
inc
mov
ljmp
inc
or
test
add
mov
mov
push
xchg
cmp
jno
pop
inc
inc
cmp
in
popa
repnz
aad
or
xor
loop
sbb
sbb
cmp
sbb
sbb
jecxz
fbstp
adc
push
push
insl
mov
outsl
sbb
adc
inc
add
cld
das
sub
orb
rorl
js
arpl
mov
jg
add
in
or
xor
and
ja
icebp
add
pop
lret
inc
ret
mov
sbb
iret
or
mov
adc
mov
pusha
call
push
je
add
xor
cmp
mov
sub
shlb
mov
or
arpl
out
pop
stc
sub
movsl
cli
xchg
cmp
mov
add
cmp
shrb
mov
popa
sbb
add
int
xor
lahf
rorb
shll
cli
or
adc
mov
xchg
cli
pusha
sub
mov
push
test
adc
lret
cmp
orl
fldl
lcall
add
lea
test
mov
add
push
cmp
adc
xor
mov
push
lock
sbb
pop
int
mov
imul
inc
js
cmp
mov
adc
or
xor
inc
pop
movl
push
xor
sub
mov
push
mov
testl
cltd
push
sub
call
add
stc
loope
test
shlb
int3
dec
xchg
mov
inc
jp
and
cltd
sbb
and
pop
in
jmp
push
insb
cmp
mov
mov
xchg
rol
mov
pop
inc
cmpsl
add
mov
fs
xor
xchg
loop
mov
xlat
add
rcrl
sahf
sub
fcompl
push
jge
or
and
inc
push
or
adc
xchg
ret
adc
pop
and
cmp
movsl
mov
ret
push
jp
push
adc
xchg
add
cmp
in
jno
xchg
gs
fcoml
loop
sbb
add
sbbb
cmpsl
push
mov
adc
rcll
subl
andb
imull
push
test
sbb
imul
xchg
or
test
xchg
loopne
sbb
aam
inc
jmp
insb
xchg
test
rcrl
xchg
call
adc
sbb
push
mov
adc
add
push
stc
adc
into
mov
daa
rcll
pop
rcll
or
xor
fnstenv
movl
inc
or
mov
or
dec
popw
jb
add
daa
push
fidivrs
push
in
push
xchg
in
or
sbb
cltd
cltd
pop
test
mov
hlt
nop
rcrb
pop
and
cmc
cli
pshufw
or
xor
inc
dec
jne
mov
testb
adc
push
mov
dec
pusha
cmp
int3
and
mov
pop
sbb
out
mov
ficoms
adc
sub
or
icebp
push
fsts
imul
xor
and
pop
mov
subps
loop,pt
shlb
inc
cmp
mov
xor
xchg
es
movb
dec
or
push
mov
push
push
or
inc
addl
test
inc
pop
mov
mov
mov
sbbl
bswap
inc
js
loop
adc
jo
add
add
inc
test
andl
or
inc
xchg
xor
or
ss
sub
or
ljmp
push
das
xchg
loopne
lock
sub
mov
and
in
pop
push
push
push
mov
jmp
and
rorb
sti
shrl
lods
and
cwtl
shl
xchg
sbb
lret
xlat
adc
jg
cmp
pop
test
jne
sbb
sbb
aad
outsb
es
adc
xor
mov
jbe
mov
pop
sbb
stos
clc
packuswb
inc
orb
cmp
subb
sub
lea
movsb
push
sub
push
sub
rolb
je
in
fdivs
jmp
push
pop
sbb
and
and
push
leave
mov
inc
mov
jg
mov
push
push
adc
pop
pop
ret
mov
jne
push
jmp
out
xchg
mov
jb
add
insl
inc
sti
inc
loop
je
add
mov
sti
fs
cwtl
and
and
les
loop
hlt
in
add
jp
pop
jns
scas
or
push
add
add
ret
insb
pop
xlat
dec
sti
add
and
or
jge
repnz
xchg
cmp
popa
lods
sti
int3
jne
sbb
sub
add
and
mov
enter
les
sbb
fnstsw
and
lea
inc
jb
test
inc
mov
pushf
push
pop
in
and
pop
cltd
sbb
mov
and
or
mov
repnz
cmp
test
pop
or
mov
jmp
cmp
jae
jo
add
push
xchg
clc
push
or
pushf
pushl
fwait
sbb
arpl
pop
je
jbe
pop
or
pop
or
fsub
sti
add
sbb
sub
adc
test
insl
add
loop
dec
push
int
mov
mov
div
out
jp
dec
add
jne
cmc
aaa
jle
jecxz
int3
xchg
push
popa
jge
lea
movsb
add
jle
sub
and
aas
inc
add
cmp
jl
mov
pop
jle
cmp
and
dec
jmp
cmp
stc
cmp
ds
inc
test
cmp
cmp
push
cmp
xchg
pop
test
push
cmp
pop
push
rcrl
js
sbb
sti
pop
pop
jmp
call
mov
or
jmp
popa
jecxz
mov
addr16
pop
leave
mov
push
or
pop
popa
cmp
push
jg
sti
das
shl
lea
add
add
xor
out
adc
or
xchg
or
cs
call
imul
incl
cmp
jne
mov
inc
pop
je
test
dec
in
outsl
clc
hlt
movzbl
das
outsl
jnp
je
inc
jmp
cmpb
mov
pop
or
jbe
inc
or
ja
xor
add
mov
cmpsb
push
push
xor
cmp
sub
mov
hlt
xchg
cmp
je
cmp
je
inc
out
jne
pop
lea
add
dec
filds
xchg
clc
cmp
outsl
jnp
mov
or
cmp
std
cmp
je
push
push
cmp
aas
dec
and
cld
mov
das
push
cs
pushl
js
pop
jge
outsl
ja
pop
add
aaa
jne
pop
incl
mov
sbb
movl
mov
mov
xchg
mov
ja
dec
clc
fnstsw
mov
cmp
dec
mov
mov
push
mov
mov
push
lahf
gs
ja
imul
mov
fwait
das
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
movsl
insl
jae
mov
sbb
sub
lods
add
jne
jecxz
or
mov
sub
jge
sub
and
loope
fwait
inc
mov
inc
cmp
sub
cmp
sbb
sub
add
mov
inc
inc
mull
or
jmp
or
andb
inc
inc
arpl
add
sub
sbb
mov
inc
and
js
imul
or
jne
dec
mov
mov
pop
cmp
cmpsl
cmp
fcomi
xor
sub
std
add
arpl
enter
adc
add
out
fisttps
scas
rcl
test
pop
jne
inc
inc
jmp
xchg
mov
test
and
or
lods
inc
mov
jmp
push
xchg
or
sbb
sete
mov
shr
mov
dec
test
push
pop
inc
mov
jne
mov
cmpsl
dec
cmpl
or
insl
je
minps
sbb
test
es
pop
sbb
inc
popa
xlat
out
add
shlb
mov
mov
shlb
outsb
or
sti
pop
ret
dec
or
aam
mov
fildl
rcl
ffree
test
add
iret
popl
test
dec
jnp
aam
adc
pop
inc
inc
into
pushf
cmp
add
lretw
les
popf
lret
or
mov
ret
push
jae
push
shr
in
inc
inc
or
jne
push
mov
das
nop
cmp
clc
mov
pop
mov
mov
insb
xor
pop
fcmovnu
xchg
xor
je
sbb
mov
and
and
ret
daa
pop
or
cltd
imul
jne
movsl
test
je
pusha
mov
je
inc
cmp
add
sub
mov
xchg
outsb
sbb
push
into
stos
sti
jmp
mov
xchg
dec
mov
cmp
xor
jmp
pop
pop
dec
in
imul
or
popa
addr16
pop
xorl
loopne
lea
mov
jae
outsl
add
andl
mov
movsl
testl
and
pop
jmp
and
mov
shr
iret
inc
cmp
in
or
cmp
fidivrl
mov
jl
mov
jnp
pop
addr16
mov
outsb
int
push
cmp
xorl
add
pusha
imul
pop
pop
jnp
imul
orb
std
jl
jmp
mov
adc
jle
mov
cwtl
push
mov
cmp
test
xor
or
push
and
rol
ja
mov
or
shll
fidivl
pop
mov
mov
push
in
add
inc
cmp
jl
pusha
xchg
clc
cmp
cmp
decl
ss
push
sub
das
enter
jmp
ret
dec
neg
sbb
ss
andl
or
or
ret
ds
pop
mov
jle
or
jne
or
add
addb
jl
dec
jge
jo
ret
pop
test
outsb
fdivl
mov
mov
jns
int
jnp
sub
sbb
sbb
cmp
test
adc
pop
lea
or
xor
inc
adc
insl
insb
insb
add
xor
fwait
popf
mov
adc
data16
les
jne
mov
aas
xchg
sbb
xchg
insb
es
push
pop
adc
adc
cld
sub
add
ret
mov
lods
push
pop
push
incl
pop
fistl
dec
mov
mov
test
nop
or
ret
imul
mov
daa
mov
pop
aad
out
pusha
add
inc
add
fs
out
mov
mov
imul
ficoms
adc
incb
fs
sbb
push
mov
arpl
test
sub
jbe
outsl
fcompl
jp
mov
pop
jl
jae
adc
clc
mov
sub
push
or
jle
ret
popl
fs
jmp
cmpl
mov
sbb
push
or
push
test
sbb
pop
jecxz
add
or
dec
push
or
lods
imul
ret
int3
push
inc
xor
pop
loopne
sbb
inc
xor
mov
or
fmuls
in
adcb
cwtl
ss
inc
adc
and
jnp
shll
mov
call
inc
push
push
lea
test
pop
pop
inc
or
mov
js
and
add
sub
ret
insl
fidivrs
mov
push
or
or
mov
mov
jmp
mov
jmp
pop
or
pop
push
xchg
jbe
or
sub
sbb
xor
dec
loope
loopne
lods
sysexit
xor
lock
mov
add
and
jmp
ss
jge
fcomps
call
into
sub
xor
mov
push
inc
inc
mov
mulb
icebp
shl
cmp
jmp
xchg
call
inc
aaa
adc
test
jne
icebp
lea
cld
sti
test
xchg
sub
xor
adc
push
sub
in
add
push
outsl
in
in
or
pop
gs
sub
or
push
clc
or
ljmp
loopne
xchg
sbbb
inc
adc
jne
sbb
rcrl
ds
push
adc
and
fsubrs
pop
pop
sub
adc
imul
fisttpll
push
movsl
jge
pop
fcomps
nop
jl
mov
stos
or
enter
push
pop
jb
push
subl
pop
pop
jne
push
push
push
clc
mov
adc
lods
cmpl
pop
lods
add
in
outsb
jl
stos
aaa
mov
test
push
arpl
pop
xchg
sbb
fsubrs
adc
pop
sub
mov
ret
loopne
mov
adc
ret
pop
outsl
push
movzwl
stc
jns
aad
add
ss
jno
mov
pop
adc
cwtl
pop
add
or
fmull
push
stc
sbb
pop
mov
je
or
xor
pusha
push
call
js
mov
cmp
popa
and
andl
jmp
cmp
rep
stos
mov
jbe
arpl
dec
out
mov
ss
jbe
push
popa
call
lds
push
and
out
push
testl
stos
lea
jno
cmpb
lret
je
mov
mov
add
xchg
ja
adc
mov
aam
mov
jbe
inc
inc
cmpb
aam
sbb
aad
ret
sbb
xlat
jb
fs
fisubs
lods
push
mov
out
ja
das
mov
movsl
movsl
pop
mov
inc
pop
add
jns
jno
gs
std
hlt
or
xchg
jb
push
cmp
mov
push
jmp
and
lock
jmp
jo
inc
xchg
cs
shrb
or
jecxz
and
or
pop
jb
inc
lahf
inc
sub
mov
adc
pusha
cltd
xchg
std
mov
mov
lods
push
cld
mov
aaa
nop
addl
sub
insb
addr16
mov
or
pop
ret
push
jno
shrb
inc
or
add
in
mov
icebp
lods
pop
xchg
rorl
push
push
shl
jle
sarb
decl
jb
mov
movb
add
outsl
rorl
or
and
jmp
sub
test
fnstsw
shr
test
and
rep
inc
inc
mov
hlt
fildl
xor
rcrb
push
in
cli
mov
fnstcw
push
mov
popf
mov
lods
test
and
sbb
fwait
dec
push
xor
sbbl
dec
pop
daa
jmp
pop
lret
jb
mov
test
push
add
mov
out
pushf
mov
je
and
jecxz
add
mov
add
insl
cwtl
jo
jmp
adc
in
divb
enter
mov
in
insl
pop
sbb
ja
and
lods
shr
and
dec
dec
mov
add
push
inc
mov
rolb
mov
push
jbe
mov
adc
or
daa
pop
imul
or
insl
mov
jo
int3
add
pop
jmp
lea
mov
imul
add
add
cmc
jg
lret
cmp
jne
mov
mov
xchg
lock
add
inc
add
jle
cld
and
lods
push
mov
add
int
pop
jmp
add
jmp
xor
jmp
cld
pusha
or
sbb
rcr
sub
mov
inc
out
jmp
mov
bound
add
outsb
imul
loope
xor
stc
daa
test
sbb
pop
push
cmp
mov
jmp
mov
mov
adc
sub
jo
aad
jl
xchg
xchg
loop
ja
mov
shlb
lret
xchg
add
jmp
sub
push
ja
jge
push
or
sub
fincstp
ret
xor
add
test
jge
pop
jle
xorl
outsl
outsb
adc
xchg
adc
leave
dec
jae
and
inc
and
insb
pop
sub
ret
or
std
mov
das
enter
jmp
aad
sub
test
lret
mulb
sub
in
jb
in
lret
test
loop
push
mov
mov
movsl
jmp
mov
jne
loopne
fldt
enter
pusha
push
lea
pop
cmpsb
jmp
jbe
nop
add
add
mov
imul
sub
inc
add
jnp
mov
mov
int3
lea
sub
mov
and
cmpsb
jl
fldenv
and
inc
aas
mov
aas
add
or
or
mov
inc
lcall
pmulhuw
call
cmpsb
imul
or
cmpsb
clc
clc
cld
jge
mov
aam
xabort
andl
pusha
insb
addb
pop
lds
add
insb
adc
xor
sub
cmp
jg
insl
das
sbb
js
and
gs
dec
imul
leave
leave
stc
sub
and
nop
or
or
add
add
outsl
mov
dec
pop
dec
push
mov
outsb
aam
sbbb
stos
out
add
mov
stc
sub
pop
adc
xlat
sub
pop
push
xchg
add
xor
pushf
movsb
lods
mov
les
xor
xlat
xchg
sbb
sbb
xor
shll
adc
adc
xor
rorl
or
dec
xlat
sbb
add
jns
pop
adc
mov
and
xchg
xchg
adcl
xor
pop
or
imul
es
ljmp
adc
add
pusha
xor
mov
push
or
and
push
sub
js
push
jle
pop
sbb
push
subps
mov
jmp
std
addb
xchg
ss
sbb
insb
mov
push
nop
and
mov
adcb
mov
sbb
mov
xchg
jbe
mov
mov
or
push
and
pop
or
test
jnp
imul
sub
add
adc
loopne
mov
pop
jp
cld
push
shr
jns
cld
adc
outsb
loop
leave
add
dec
mov
mov
das
sub
inc
dec
dec
or
idivb
call
clc
jne
rcrl
mov
iret
jbe
ret
dec
adc
add
lods
aam
inc
adc
sbb
pop
push
out
les
xlat
and
js
clc
jl
inc
decb
sub
cmp
and
loopne
pop
jae
push
sub
fsubl
jns
push
adc
adc
sbb
or
add
lods
scas
add
icebp
aas
jnp
mov
mov
pop
das
mov
mov
mov
adc
imul
pop
cmp
cmpsb
jbe
repz
outsb
sbb
sti
inc
ds
jbe
cli
mov
mov
cs
push
mov
and
and
jl
mov
mov
insl
mov
mov
push
xchg
add
adc
test
or
xor
xlat
mov
lea
or
mov
pop
mov
xor
dec
arpl
mov
mov
pop
add
jg
paddd
mov
imul
mov
jae
scas
cmovbe
mov
jmp
mov
or
sbb
sub
lea
fdivl
and
pop
push
or
mov
sbb
pop
adc
ds
dec
inc
xlat
xor
mov
fisttps
idivb
insb
shl
add
push
xchg
bound
push
push
call
pop
xor
push
jnp
sbb
push
or
cmp
sbbl
insb
push
paddd
or
testb
andl
adc
pop
dec
jne
sub
jo
pop
adc
push
mov
or
in
xor
repnz
xchg
cli
out
sub
sub
lea
push
push
not
fs
mov
nop
cmp
lea
test
mov
inc
mov
dec
add
clc
in
in
adc
sub
dec
pop
fcmovbe
popa
fidivl
pop
push
xor
push
jb
test
in
decl
es
or
test
push
or
clc
add
mov
jae
mov
cmp
scas
jno
mov
iret
jne
clc
adc
lcall
out
jne
mov
cmp
es
insl
jmp
sbb
and
push
jnp
and
into
sub
jmp
add
fimuls
push
jmp
insl
sbbb
test
mov
xor
mov
aaa
loopne
lcall
jmp
test
mov
cli
dec
sub
ret
mov
mov
mov
push
push
push
fisttpll
push
in
or
inc
or
mov
jne
xchg
adc
sbb
push
and
or
je
mov
mov
pop
pop
dec
jbe
push
std
fistps
pushw
fs
test
jl
shl
inc
jmp
mov
push
inc
or
jg
jnp
cmpsb
or
aas
jle
pop
aam
dec
out
fwait
or
push
adc
imul
push
mov
in
and
mov
decb
jne
fidivs
and
jmp
pop
sub
push
sbb
ss
adcb
scas
push
gs
sarb
xchg
es
or
fstpt
jl
inc
or
and
jmp
push
decb
jge
notl
or
mov
bound
fs
mov
cmp
jmp
xchg
mov
push
jmp
mov
lods
push
mov
shrb
mov
mov
mov
cld
mov
xor
xlat
and
adc
mov
xor
lahf
mov
and
ljmp
mov
push
adc
in
inc
add
add
pop
outsl
rol
pop
push
lret
xor
nop
mov
cmpsb
push
jb
xchg
push
xchg
rorl
cwtl
cmp
je
pushf
push
ret
das
mov
cmp
loopne
inc
lods
inc
xor
stos
xor
loopne
add
mov
je
push
and
call
sbb
mov
loop
fs
jl
mov
lds
bound
test
shr
pop
fildll
push
jno
inc
or
fcmovnb
outsb
xor
dec
loopne
ret
aaa
imul
xor
inc
or
add
dec
push
sti
test
out
jl
pop
fistpll
mov
addb
leave
in
mov
daa
addb
xchg
add
insl
mov
cmp
inc
ja
repnz
hlt
lea
cld
lock
fisttpll
push
out
jmp
call
dec
out
add
mov
add
xchg
mov
inc
mov
sahf
inc
inc
mov
mov
push
ja
push
sub
cmpsb
pop
add
add
sub
push
add
stos
push
push
sahf
cmpsl
inc
jmp
sub
cmpsl
js
scas
mov
and
popa
inc
je
adc
imul
mov
push
mov
mov
sarb
enter
or
mov
or
pop
sbb
jae
add
jbe
ror
add
aad
mov
push
push
mov
jne
idivl
push
stos
sub
adc
jne
subb
aam
and
inc
inc
dec
je
std
scas
cmp
jne
sub
add
xchg
stos
fwait
and
daa
mov
pop
vmulsd
jmp
inc
adc
out
or
fwait
cmp
cli
sub
xor
inc
xchg
arpl
nop
push
push
add
sub
fistl
cmp
sbb
jmp
add
rclb
fnsave
add
pop
pop
jne
mov
sub
mov
test
mov
sbb
clc
outsb
cld
inc
das
jo
inc
push
push
or
xor
pushf
inc
das
mov
lods
jne
mov
fistl
sbb
cmp
cmp
bound
cmpsl
jo
cwtl
mov
adc
cmp
arpl
mov
pop
call
push
in
push
sbb
sbb
out
lods
loope
push
sub
mov
and
inc
and
ss
jnp
cmp
jae
andb
std
mov
push
aaa
and
jbe
fiaddl
test
sbb
dec
rcr
cmpsb
aam
cld
fimuls
jmp
mov
jmp
lock
es
sti
adc
push
dec
fsubl
jne
fisubl
push
hlt
dec
in
sbb
adc
movsl
lods
dec
jne
mov
testb
je
ds
lea
push
cmp
jg
fidivl
call
rorb
movsb
mov
addr16
xor
lods
sub
or
mov
movsl
and
mov
adc
jne
bound
push
fs
je
mov
add
jmp
mov
inc
cmp
jo
and
pop
icebp
mov
jmp
test
push
decl
push
dec
rorb
mov
or
lret
sub
adc
gs
add
pop
sbb
rcrb
es
lods
jbe
inc
outsb
cld
lea
push
push
pop
push
push
movsl
mov
outsl
add
test
mov
push
mov
xchg
pop
mov
sub
add
jbe
xor
xor
and
xchg
in
xchg
pop
sbb
nop
lea
sbb
add
test
loopne
je
gs
inc
or
adc
add
subl
stc
testb
loopne
seta
clc
in
inc
push
add
int3
sbb
lock
add
mov
lahf
add
and
int3
add
ds
je
sbb
inc
sub
neg
cld
test
sub
addr16
adcb
push
inc
sbb
out
pop
and
rep
cmp
and
ja
gs
dec
and
dec
mov
shll
jl
sbb
add
and
mov
lds
add
dec
xlat
outsl
incl
in
in
aam
inc
xor
int3
les
or
lock
sub
add
roll
mov
mov
test
mov
jne
mov
mov
mov
lds
push
push
add
dec
shll
je
test
mov
xor
mov
mov
add
lahf
push
cmp
push
lret
jb
sub
push
je
test
pop
jae
xlat
les
push
adc
push
cmp
les
xchg
xchg
adc
xchg
xchg
xchg
in
hlt
lock
loopne
or
rolb
add
add
ljmp
cs
push
cld
incl
jne
je
insl
and
jb
jb
or
rclb
adc
add
dec
dec
inc
add
inc
adc
mov
xor
cmp
sub
insb
je
and
fucomip
imul
aaa
daa
aaa
das
jne
aas
outsb
outsl
je
add
addr16
jo
ss
out
mov
and
insb
outsl
ja
cmp
jns
mov
ss
fs
in
and
jo
jb
jbe
jb
jne
fdiv
fistpl
movsl
arpl
and
insb
sub
inc
mov
gs
xchg
mov
push
fsub
pop
xor
out
mov
imull
gs
xor
xor
fs
sub
inc
inc
mov
and
gs
cmp
insl
jne
lods
je
mov
popa
das
insb
outsl
arpl
int
subl
add
jo
mov
jo
addr16
insl
and
insl
ss
xor
rorl
sub
stc
pop
mov
cmp
jb
jne
jae
xor
lds
outsb
subb
cmp
mov
adc
dec
sub
pop
cmp
push
imul
push
mov
dec
imul
sub
loope
push
and
push
aam
ret
mov
cmp
loopne
push
mov
insl
sub
insb
ja
sbb
ja
sub
popa
xor
jbe
push
scas
jne
insl
addr16
adc
push
xchg
fs
jae
popa
addr16
outsl
js
lds
xor
cs
test
mov
add
xchg
add
and
inc
pop
in
and
add
aad
cmc
mov
or
out
push
mov
add
sub
popa
aam
and
and
or
rorb
xchg
lea
mov
nop
enter
xchg
xchg
xchg
rclb
or
xchg
or
lret
and
sbb
add
xchg
sbb
pop
add
repnz
daa
sbb
xchg
hlt
adc
adc
cmp
cwtl
adc
sbb
sbb
in
and
js
dec
sahf
cmp
push
js
jns
jp
cld
in
enter
decl
cmpsb
loopne
inc
xchg
mov
cmpsl
adc
sub
adc
cmpsb
clc
sub
add
das
xchg
cmp
movsb
add
jns
and
leave
mov
cld
inc
jle
cld
test
cmp
and
incb
inc
inc
xchg
push
mov
inc
scas
nop
mov
in
sbb
in
call
leave
outsl
ja
push
add
pop
pop
fisubrl
xor
xchg
fistpl
fcomp
loopne
cmp
jle
add
sub
inc
mov
jns
fs
sub
dec
add
nop
add
adc
nop
add
jbe
aas
addb
push
out
inc
adc
add
and
adc
jo
addb
or
outsl
push
add
fs
gs
popa
outsb
fs
add
push
je
xor
outsb
outsw
adc
sbb
inc
outsl
insl
insl
pop
dec
imul
sbb
pop
add
or
pop
stos
fisubrl
push
cmp
adc
push
push
fs
adc
xor
insb
pop
jb
imull
pusha
js
gs
popa
insl
pop
inc
jb
gs
fnsave
jb
addr16
std
xor
fs
bound
outsl
dec
push
imul
xor
pop
pop
sub
pop
ret
inc
push
pop
sbb
pop
add
in
das
ss
or
jne
jb
sti
add
ds
gs
fs
insb
jae
addb
push
popa
insb
jne
or
push
test
inc
add
cmpsl
jno
idivb
inc
xor
sbb
inc
add
popf
loopne
pop
mov
je
cmp
loop
inc
ja
cmpsl
je
adc
pop
sbb
arpl
arpl
xor
push
jbe
push
sub
push
fmull
inc
push
in
cmp
inc
dec
or
or
inc
mov
jb
dec
ret
and
xor
sahf
mov
sub
inc
mov
test
dec
or
xorps
inc
inc
inc
js
push
jns
adc
pop
pop
js
inc
outsb
call
roll
inc
loope
sti
add
insb
add
cmp
add
push
cmp
xor
int3
inc
fnstcw
mov
addr16
jae
add
cltd
pop
xlat
mov
test
shlb
lock
jae
aas
mov
add
dec
jae
xor
in
mov
add
packssdw
jne
sub
and
les
sbb
xchg
jo
mov
out
adc
xchg
jo
pop
push
pop
mov
daa
inc
jne
je
inc
push
jo
dec
insb
push
jb
lock
add
pop
add
lock
pushl
mov
pop
jl
testb
mov
xor
xchg
test
inc
add
repnz
insb
mov
adc
add
jmp
inc
jnp
lret
imul
add
cmp
xchg
add
pop
cmpb
add
mov
add
add
add
adc
das
fnsave
lock
sbb
lock
mov
push
adc
cmp
test
divb
aaa
outsb
roll
lock
adc
add
fucomip
jle
pushf
and
inc
sub
mov
jge
add
cmp
pop
inc
inc
lock
jb
or
mov
loopne
inc
add
inc
sub
add
add
cld
add
mov
and
ret
add
mov
mov
xchg
push
ds
mov
aaa
data16
add
add
lock
lret
idivb
or
mov
add
cmp
aam
or
call
cmp
mov
ret
adc
pop
jle
pop
ds
jl
add
add
dec
insb
mov
ss
add
popa
jae
mov
jl
rolb
lock
frstor
aas
and
jbe,pt
sub
adc
mov
lock
add
insl
jnp
cs
or
adc
enter
in
mov
outsb
and
imul
jnp
pop
mov
dec
lock
imulb
lods
add
mov
or
dec
inc
add
jmp
mov
mov
add
fldt
ds
add
lock
loope
lret
push
subl
add
mov
pop
inc
shrl
pop
pop
fcomi
xor
xor
or
add
or
xor
or
mov
or
push
pop
or
or
push
push
push
test
ss
decl
adc
or
or
dec
inc
jecxz
xor
aas
push
adc
xor
xor
and
push
adc
add
inc
or
mov
pop
sbb
adc
pop
inc
imul
es
inc
adc
fistps
push
or
adc
adc
sub
xor
or
xor
mov
and
mov
pop
adc
mov
or
inc
cwtl
add
push
outsl
mov
adc
filds
push
movups
lock
add
push
ret
sbb
scas
add
sub
sbb
out
flds
add
dec
push
add
or
pop
push
sbb
notb
jb
push
or
jecxz
xor
or
dec
add
idiv
push
push
sbb
adc
or
fimuls
imul
in
add
adc
test
or
fisttpl
sbb
adc
or
pop
pop
clc
adc
sbb
pop
mov
sbb
xor
push
pop
adc
sarl
push
add
insb
lret
test
add
lods
or
or
stc
outsl
cmc
jg
adc
lock
add
push
inc
lcall
imul
sbb
loopne
in
out
sbb
mov
add
inc
fwait
adc
int3
lret
sahf
mov
sysret
add
jnp
ja
ret
push
inc
subl
xchg
sub
js
xchg
jl
xor
add
rolb
rolb
add
pop
subl
cs
xlat
pushf
mov
add
lods
push
jb,pn
mov
orl
cli
or
or
or
cs
xor
xlat
jae
mov
push
lcall
jae
arpl
pop
rorb
dec
xor
cmp
in
xchg
and
repnz
movsl
add
rcl
xlat
add
add
add
add
or
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
