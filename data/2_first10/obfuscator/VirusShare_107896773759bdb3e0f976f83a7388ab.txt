add
add
add
pusha
jmp
clc
inc
adc
push
aaa
pop
and
movw
sbb
or
decl
jmp
stc
add
push
inc
pop
sub
movw
or
jmp
add
jb
fs
jmp
push
fiadds
cld
push
inc
pop
jmp
adc
lds
add
add
jmp
dec
or
rcll
add
pop
jmp
stos
fldl2t
add
movl
rol
or
add
jae
push
dec
pop
sbb
push
inc
pop
jmp
out
mov
xchg
push
stc
pop
jae
movl
add
push
xchg
pop
and
sub
and
jmp
jns
adc
add
movw
xor
jge
rcr
push
inc
pop
add
jmp
mov
sub
adc
shr
push
aaa
pop
xor
paddb
inc
movw
sub
or
punpckldq
push
xchg
pop
sub
jo
pmaddwd
sbb
push
dec
pop
shl
push
inc
pop
sbb
push
inc
pop
psubusw
rol
add
movb
push
xchg
pop
sub
jmp
scas
scas
push
lahf
pop
add
shl
or
sbb
push
inc
pop
add
pcmpgtw
movb
jns
andnps
and
add
cvttps2pi
stc
movb
push
inc
pop
jmp
jb,pt
sub
jo
jmp
adc
or
push
cld
pop
psubusw
jl
rol
push
inc
pop
ror
jne
adc
sub
inc
movl
jl
jmp
aam
out
xor
add
rcl
sbb
push
dec
pop
adc
push
xchg
pop
jno
jb
cmpl
jne
or
mov
jmp
add
les
push
stos
imul
xlat
ret
jge
pop
lock
push
ret
jp
adc
stc
jmp
test
inc
std
push
ret
inc
imul
push
aas
cmp
push
push
jns
push
push
sub
jle
xor
test
add
imul
add
pop
xor
push
push
fdivr
add
push
inc
xchg
out
add
dec
imul
jle
ds
push
mov
inc
and
pop
sub
cwtl
sub
push
hlt
imul
push
xchg
cmp
pop
sub
mov
jl
jp
adc
xor
shrd
shlb
push
or
sub
lods
push
sub
adc
bound
cld
push
push
imul
push
test
push
push
sub
pushf
dec
adc
bound
push
pop
adc
arpl
sub
pusha
push
sub
jle
ds
push
pop
shll
sub
sub
push
push
inc
push
hlt
push
sub
push
xor
jmp
nop
or
push
push
jle
push
xchg
sub
test
xor
movsb
cpuid
inc
mov
xchg
add
sub
popf
sub
shr
add
push
fisubl
mov
mov
in
inc
repnz
push
xor
jmp
test
stc
sub
roll
push
sub
mov
jmp
push
push
pop
sub
stc
rcl
jmp
leave
inc
fsubr
test
arpl
les
cmp
popf
push
inc
inc
jle
sbb
push
add
loope
mov
sub
push
fsubrl
lahf
pop
and
dec
sub
push
fsubrl
popf
pop
and
push
lahf
pop
xor
jmp
popf
inc
sub
jb
sbb
push
push
mov
or
aam
push
popf
inc
dec
cmpsl
es
sub
popf
pop
and
push
ss
mov
xchg
xchg
mov
xchg
xchg
mov
pop
inc
aam
push
popf
pop
mov
cmc
xor
pop
lea
sub
dec
adc
out
push
push
sub
push
mov
add
push
push
pop
adc
jno
cmp
sbb
and
push
pop
or
imul
std
mov
lea
cmp
push
popf
mov
sub
push
push
mov
or
push
in
dec
pop
stos
jg
push
pop
jg
push
and
stc
rorl
bound
ficoms
xor
push
push
push
cld
push
popf
outsb
sub
xchg
insl
sub
push
jnp
das
push
pop
pop
popf
push
addb
push
test
stc
push
push
jns
xor
in
test
push
jns
or
cs
push
addb
push
test
stc
push
push
jns
adc
push
jns
jmp
xchg
pop
pop
lahf
push
stos
les
mov
cmp
jae
cpuid
into
xchg
xchg
adc
test
jg
push
adc
pop
stos
ret
call
push
adc
xchg
sub
push
fdivl
test
push
pop
es
and
lea
dec
cmpsl
push
push
sub
xchg
xchg
add
es
jg
jbe
ficoms
ja
jb
mov
pop
sub
sbb
inc
push
mov
mov
inc
push
add
repz
push
sub
jle
ds
push
add
jecxz
push
sub
jle
ds
push
add
rcll
push
sub
inc
aas
lret
push
jle
rclb
push
lahf
push
stos
rclb
inc
hlt
add
sub
lods
push
sub
popf
scas
inc
cli
add
sub
lock
push
fisubrs
test
push
jl
jge
pop
push
cmp
inc
push
add
bound
dec
push
and
inc
je
and
push
cmp
jne
imul
dec
je
push
sub
and
jns
push
jne
push
inc
jb
cmp
jb
inc
push
pop
and
ss
push
jg
pop
dec
jo
dec
bound
inc
push
data16
jae
pop
popa
inc
and
js
push
jae
and
inc
je
ss
outsl
jns
jns
jns
dec
jne
push
sub
push
push
sub
push
push
sub
push
push
sub
push
push
sub
jmp
push
and
cmpsl
push
push
push
add
add
add
add
add
add
push
add
jl
add
add
add
add
add
add
cld
xchg
clc
addb
cli
adc
xor
in
sti
or
and
pop
xchg
mov
insb
cmpsb
jnp
int3
mov
mov
mov
in
fs
cmc
sub
add
add
add
sub
cmp
hlt
clc
out
mov
xor
add
inc
cld
dec
and
adc
inc
lret
test
call
out
out
pusha
arpl
fists
cmpsl
fbstp
mov
popa
scas
hlt
and
ds
inc
pop
stc
mov
or
inc
jmp
add
add
add
fildl
add
iret
arpl
rolb
mov
inc
sub
add
test
add
add
add
add
jecxz
add
add
add
adc
add
add
add
scas
add
adc
add
add
add
fldl
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
loop
add
push
and
add
aam
add
add
add
add
add
adc
add
nop
cmp
add
add
sub
add
je
add
inc
and
add
out
add
xchg
add
add
add
add
push
mov
cld
addb
add
flds
add
jae
add
dec
add
add
add
add
mov
loopne
add
xor
adc
add
add
addl
pop
add
sbb
lahf
js
inc
push
lcall
ja
pop
cmpb
dec
or
push
call
lcall
sub
ret
popa
mov
add
stos
jge
xor
cmp
repz
inc
aaa
mov
movsb
xor
xor
dec
mov
imul
scas
imul
pop
xor
sahf
je
add
scas
divb
or
and
adcb
scas
out
xor
sarl
adc
in
xor
sub
jbe
and
pushf
popf
jae
or
dec
mov
sbb
push
rcr
test
mov
add
jl
push
mov
add
lds
lock
push
xor
jge
mov
mov
nop
inc
sbb
out
decb
mov
outsb
add
lcall
icebp
cld
imulb
shrb
push
jmp
fucom
jo
sub
into
mov
mov
pop
push
les
loopne
jb
jecxz
push
mov
rorl
jno
sahf
pop
inc
xor
push
jb
cmpsb
inc
ret
lret
inc
cmp
stos
std
sbb
cmpsl
cltd
pop
inc
bts
jb
mov
leave
cmp
xchg
xor
pop
mov
cltd
dec
push
out
mov
out
mov
aas
ss
dec
cltd
clc
test
rorb
clc
cli
xchg
out
lcall
loopne
xchg
mov
movsb
in
test
lea
sub
test
pop
and
xchg
or
inc
xchg
leave
in
je
jns
dec
pop
adc
and
cmpsb
jns
adc
js
xchg
jnp
inc
test
dec
imul
xchg
sahf
ss
mov
cli
frstor
dec
pop
mov
jp
sub
das
sbb
lods
mov
inc
jp
push
mov
pop
roll
push
cmp
jno
pop
sbb
sub
mov
xchg
or
jae
aaa
and
js
pop
cli
xor
rcl
cmp
movsl
fldt
fbld
das
lret
leave
cmp
les
scas
xchg
adc
cli
cmp
pop
subb
aaa
and
cmp
fbstp
jne
ss
push
outsb
or
mov
mov
iret
add
cmp
pop
cmpsl
jnp
mov
xchg
or
cmp
jp
fcomps
rorb
int
xchg
cltd
repz
les
dec
int3
jl
cmp
lret
aam
sub
push
bswap
push
adc
into
jmp
dec
inc
loope
xchg
lahf
pop
mov
shll
jae
jecxz
loopne
push
dec
out
arpl
add
scas
mov
scas
jl
aam
imul
add
jns
lods
cmp
jnp
mov
xchg
and
stc
and
in
jecxz
pop
xchg
cmpb
scas
pop
jbe
sub
shr
fbstp
aas
outsl
pop
rcrl
mov
test
inc
adc
mov
jb
xchg
xor
or
sbbb
xchg
jb
push
daa
ljmp
mov
into
cmp
nop
fst
mov
jp
lret
xor
mov
addr16
mull
add
sbb
xor
push
sarl
addr16
mov
movsl
jbe
dec
xor
lea
push
lcall
sbb
std
out
xchg
mov
jl
push
sub
jns
inc
cltd
mov
daa
jns
shll
add
cmp
jae
mov
pop
psrld
xor
push
ret
out
loop
cltd
push
jp
push
decb
pop
mov
in
xor
jae
add
inc
pop
push
aas
bound
aam
incl
xchg
cmp
je
sub
pop
les
test
ds
dec
mov
cmpsl
out
add
shlb
lods
pusha
push
outsl
dec
push
jae
pop
cmp
pop
sbb
fisubrs
xor
mov
int
fwait
mov
pop
mov
adc
inc
push
mov
adc
pop
jnp
nop
filds
sub
and
cmpsb
addr16
cld
sti
pop
sub
mov
pushf
fstps
xchg
sahf
cmp
mov
xchg
mov
imul
mov
lret
sub
mov
add
push
mov
cmp
sub
in
stc
fisttps
pop
sbb
xor
aam
jae
fisttpl
pushf
mov
out
dec
out
cmp
mov
ljmp
fidivl
popf
xchg
jecxz
or
or
or
xlat
sub
push
das
andl
es
mov
icebp
inc
call
push
jge
jecxz
ret
outsl
add
add
into
aaa
or
mov
mov
repz
xor
gs
jne
cmp
mov
xor
aam
mov
push
je
fstp
out
and
mov
xor
or
adc
xchg
es
push
mov
add
int3
sbb
add
nop
pop
pop
mov
xor
adc
mov
leave
mov
cli
cmp
shll
ss
mov
mov
lock
lahf
int3
xchg
das
push
jl
mov
je
daa
mov
fisubrs
rol
lcall
inc
in
mov
and
das
dec
cmp
pop
scas
and
inc
movsl
sbb
cmp
push
adc
push
loop
jno
push
mov
add
into
pop
rolb
inc
mov
cmpb
mov
js
das
jne
outsb
cmp
mov
notb
call
das
xor
cmpsl
inc
mov
cmp
adc
mov
or
in
inc
shl
dec
pusha
jo
pop
cwtl
cmc
enter
cmovns
iret
cmp
movsb
insl
sub
and
fidivl
jle
cmpsl
or
pop
orb
sbb
jmp
pop
cmp
adc
out
lret
xchg
test
scas
and
cmp
shl
pop
xor
repz
jno
adc
ljmp
dec
and
mov
jg
jns
mov
rcl
cld
scas
std
xchg
inc
pushf
or
mov
jae
cmp
orl
jge
adc
push
adcb
inc
mov
and
pushf
frstor
mov
cli
out
addb
push
mov
push
pop
add
scas
inc
dec
sub
movsb
pop
lods
je
into
sbb
pop
repnz
in
dec
xchg
lods
iret
mov
jg
sub
add
ret
sbb
adc
pop
pop
dec
mov
jmp
insb
push
xor
stc
int3
mov
or
popf
sbb
jno
arpl
sbbl
mov
ljmp
push
or
sub
pop
fsincos
cltd
xor
bound
dec
xchg
xchg
lret
fstps
xchg
mov
pop
push
mov
scas
js
stos
push
in
xchg
jp
hlt
lahf
test
lea
push
push
adc
xchg
fmul
divb
ljmp
xchg
pusha
or
repnz
pop
mov
das
arpl
outsb
mov
aad
dec
lea
pop
and
je
mov
fs
sub
add
adc
add
jo
mov
aad
movsl
jecxz
mov
push
add
mov
add
push
icebp
jbe
dec
mov
mov
cmp
stos
shll
pushf
cld
jnp
jo
sub
xchg
iret
addr16
jns
cmpsb
sti
dec
xlat
xor
push
or
jns
adc
push
fidivrl
loope
sub
jge
push
test
adc
in
ret
test
repz
adc
inc
mov
inc
popa
ss
mov
xor
inc
mov
xchg
lock
cmp
lahf
cli
fdivrs
sub
push
push
ss
lcall
mov
and
loopne
dec
movsb
cwtl
ds
iret
das
sbb
les
mov
cmp
xchg
not
adc
out
sbb
and
mov
insb
pop
xchg
mov
push
adcl
jno
dec
adc
dec
pop
mov
jle
jge
shrb
data16
dec
adc
ja
dec
sub
push
clc
adc
push
out
sbb
mov
lock
pop
add
sub
fsubrs
and
shl
xchg
pop
add
push
mov
aam
xchg
mov
mov
into
push
sbbl
sbb
add
or
cmc
xchg
jae
cmp
dec
fldl
jnp
lds
lods
lods
cmp
push
adc
scas
movsb
repz
push
mov
mov
push
adc
ret
xchg
shll
repz
mov
or
push
test
inc
sbb
xlat
jl
aaa
mov
mov
sti
out
jmp
sbbb
pushf
scas
push
xcrypt-cfb
cmpsl
out
inc
fstpt
mov
sub
les
add
cld
lahf
mov
cmc
leave
jb
daa
jge
loop
lods
mov
jmp
cmp
cmc
and
bound
aad
gs
xor
push
xor
mov
xor
jecxz
lods
loope
xorb
je
std
or
popa
pop
xchg
lret
adc
aaa
push
jecxz
fwait
pop
mov
packssdw
fcomps
push
or
inc
sub
mov
sub
xchg
mov
mov
enter
pushf
cmc
out
mov
shrl
push
push
xchg
cmp
xchg
lret
xor
jb
mov
imul
xchg
shll
repz
mov
or
push
test
inc
sbb
xlat
jl
mov
sub
xlat
adc
cli
fwait
lahf
xor
stos
inc
and
pop
push
cltd
fcomip
cmp
mov
xchg
lret
lea
lock
mov
add
lea
lret
mov
fsubrp
push
mov
push
sub
mov
imul
mov
loopne
jg
cltd
mov
rcr
loop
or
cmp
dec
mov
pop
xor
mov
in
cmp
and
mov
add
enter
pop
sbb
jecxz
sbb
mov
mov
fisubl
jmp
add
and
mov
adc
cmpsl
xchg
idivl
mov
jle
mov
mov
movsb
stos
fnstsw
mov
pop
movsl
setle
lods
jnp
ljmp
daa
pop
rolb
cwtl
sub
add
inc
loope
adc
inc
adc
mov
cmp
sub
aad
insl
push
xchg
rcrb
jnp
inc
jg
adc
mov
cmp
aad
hlt
int3
xchg
loopne
pop
inc
fmuls
mov
repnz
mov
hlt
arpl
mov
into
and
cmp
in
imul
fimull
pop
loope
scas
mov
arpl
scas
imul
fsubrs
ret
cmpsb
push
popa
xor
push
inc
and
cmp
sarl
xor
subl
enter
mov
mov
mov
xchg
push
add
and
xchg
cs
and
out
dec
rolb
hlt
aad
or
and
je
or
add
mov
cmp
pusha
pop
not
mov
cmp
jno
addr16
lds
sti
push
dec
dec
jns
adc
lret
rolb
mov
push
push
cmpsl
xor
push
inc
push
jae
mov
rclb
sub
jmp
inc
repnz
pop
sbb
repz
pop
fnstsw
out
andl
or
add
repnz
mov
add
and
aam
mov
xor
in
in
lods
int3
push
rol
out
dec
enter
mov
fsub
stos
add
repz
ss
in
scas
loope
les
cmpsl
out
jno
scas
xchg
xorb
or
not
adc
push
or
push
jle
pop
sbb
mov
and
mov
add
cltd
xor
call
adc
fadd
xchg
mul
bound
cmp
push
mov
xchg
push
xchg
aaa
scas
mov
addr16
xor
fcomps
pop
or
ror
ja
shll
repnz
xchg
leave
mov
add
call
pop
xchg
cmp
repnz
inc
xchg
xor
lahf
ss
or
pop
push
test
mov
lret
test
loopne
pop
inc
fbstp
or
jge
jb
call
ffree
and
xchg
ret
and
jne
sbb
adc
sbb
inc
sbb
mov
mov
rolb
push
sbb
adc
mov
mov
out
sub
pop
stc
out
pop
shrb
mov
push
test
cmp
mov
ja
insb
nop
adc
and
fstps
jo
sub
mov
sbb
adc
enter
ret
or
cmpsl
inc
shrb
mov
cltd
push
cmp
hlt
mov
pop
lods
mov
inc
cmp
divl
fistps
rcrb
arpl
shll
mov
xchg
in
add
popa
mov
movsl
enter
icebp
outsb
mov
dec
inc
push
lea
or
jbe
or
pop
lret
sbb
fs
sub
daa
repnz
add
mov
cltd
clc
test
fwait
std
pop
rcrl
insl
stc
cwtl
pop
xchg
adc
dec
in
iret
mov
fistpll
in
dec
imul
addr16
and
push
sbb
test
jp
clc
sbb
sbb
sbb
in
fidivrl
loop
cmp
test
add
xor
pop
sbb
pop
std
pushl
xchg
ficomps
mov
fs
pop
mov
xchg
popa
sub
in
pop
mov
ret
or
shl
and
adc
pop
mov
sahf
lret
loope
and
add
imul
xor
fsubl
inc
sarb
int3
cli
mov
or
mov
movsb
inc
mov
xchg
aaa
jl
jmp
xlat
imul
into
icebp
movsb
enter
lret
or
sbb
int3
lahf
iret
test
lock
fmull
mov
je
out
fwait
iret
add
pop
gs
dec
pop
idivl
movsb
or
dec
pop
adc
cmpl
lods
xchg
or
fs
cmp
popa
in
nop
shlb
rcrb
aaa
xor
outsl
mov
mov
cli
inc
pop
jb
repz
jno
addr16
pushf
sub
and
into
clc
or
loopne
in
push
scas
xchg
or
mov
js
sub
inc
pop
and
in
mov
jge
rorb
xor
mov
xor
into
jo
or
lret
or
cmp
clc
pop
sbb
push
testb
and
js
mov
push
inc
pop
sub
inc
mov
inc
mov
int3
mov
adc
xchg
ret
push
mov
das
sbb
jbe
inc
addr16
iret
jmp
lods
ja
pop
inc
lea
mov
pop
cmp
pop
pop
mov
bound
test
mov
arpl
out
mov
and
pop
pop
jg
jbe
jge
or
jne
push
lods
out
cli
xlat
lods
push
xchg
rcll
mov
adc
xchg
adc
iretw
ret
xchg
lea
stc
xchg
xor
aad
out
jno
mov
mov
push
popa
outsl
daa
gs
jl
inc
daa
jge
sub
sarb
aaa
push
xlat
mov
cli
push
mov
jno
xchg
xorl
cmp
daa
pop
sub
push
jecxz
test
nop
sub
out
jmp
xchg
mov
mov
xchg
jge
jmp
and
pop
pop
push
and
xor
mov
xchg
xchg
idivl
mov
jnp
int
add
jb
xchg
movsb
jno
mov
divb
pusha
fcmovnb
jp
rcl
rol
pop
lods
mov
dec
in
xchg
fstps
int3
pop
push
notl
ja
fldl
aam
push
add
inc
lcall
xchg
inc
cmpsb
sbb
filds
inc
dec
pop
mov
sub
add
ss
out
in
into
cmpb
dec
sub
jl
loope
dec
cmp
xchg
leave
cmp
or
mov
fbstp
loopne
jbe
mov
pop
shrb
pop
mov
aam
out
adc
test
dec
out
insb
idivl
fildl
pop
stc
pop
fwait
subl
mov
mov
sbb
push
jno
shlb
cwtl
jge
mov
jmp
cmp
add
pop
push
popf
mov
sahf
sbb
int
fwait
loopne
repz
and
int
ret
ds
sti
insl
jmp
fwait
aaa
pop
loopne
xor
pop
lods
dec
adc
jne
inc
and
mov
call
subb
inc
adc
mov
fdivrl
into
jno
adc
sbb
push
mov
mov
adc
lea
mov
dec
lahf
dec
out
and
mov
add
mov
or
mov
adc
sub
in
jge
fdivrp
cld
inc
mov
or
ret
cmpsl
out
mov
xchg
mov
lret
orl
push
nop
pop
mov
push
push
jp
out
pop
aam
cmp
dec
in
cwtl
sbb
add
andb
add
push
jmp
fimull
hlt
mov
fs
jmp
sbb
jo
add
inc
add
jb
aad
sbb
data16
sbb
xlat
mov
int3
push
cmp
dec
adc
jecxz
ret
out
jge
out
fwait
call
cmp
sbb
inc
push
pushf
xor
xchg
cmp
add
dec
adc
push
xor
sub
dec
sub
mov
ror
sbbl
fidivs
mov
pop
sub
arpl
and
xchg
insb
jp
repz
sub
int3
lret
and
xchg
lds
mov
xchg
push
cmp
add
mov
mov
mov
out
into
hlt
pop
mov
popa
scas
aad
mov
sbb
ja
aas
aad
subl
sbb
add
add
sbbl
mov
cli
xlat
das
pushl
or
cmc
das
add
mov
cmp
add
adc
ss
imul
repz
and
xchg
fldcw
fwait
xor
andl
cs
sub
and
mov
xorb
jae
mov
sarl
xchg
dec
or
fistps
loope,pn
fisubs
cmpl
inc
push
dec
xchg
pop
idivl
into
mov
and
sbb
dec
sub
fldenv
pop
push
jno
dec
fnsave
mov
push
mov
insb
out
dec
xor
xorb
xchg
sub
jp
icebp
imul
ss
inc
insb
add
mov
jmp
jae
test
lods
ficoml
pop
dec
sbb
push
stc
xchg
ss
xchg
mov
movsb
push
add
bound
or
movsl
out
imul
not
mov
addr16
pop
add
arpl
fnstsw
add
sbb
std
data16
sub
fildll
test
aaa
jo
sub
xchg
add
add
or
pop
add
rorl
popf
addr16
cli
xchg
jmp
push
adc
pusha
or
mov
shl
rcr
fpatan
push
jl
and
gs
scas
popf
inc
lahf
cmpsl
stos
int
in
pop
imul
daa
lea
fildll
push
enter
arpl
xchg
repz
lret
lock
pop
push
dec
jecxz
xor
mov
push
jbe
les
mov
js
or
mov
lods
ljmp
jl
mov
xchg
cli
dec
clc
jp
fndisi(8087
cmp
fmuls
xchg
jb
call
fnstcw
pop
daa
call
or
or
or
and
dec
arpl
jne
pop
jp
out
sub
dec
add
mov
sbb
rclb
adc
call
popa
sbb
adc
insb
mov
dec
sub
sbb
cmp
mov
dec
inc
je
xchg
fldl
jle
lret
pusha
sahf
add
idivl
int
push
xor
or
rcrl
jge
pop
test
pushf
xchg
ja
gs
jmp
pop
insl
lret
repnz
popf
jmp
mov
pop
cmp
mov
adc
ds
arpl
push
mov
mov
mov
sub
inc
inc
mov
loop
push
call
and
mov
in
cmpsl
rolb
pop
inc
loop
insl
pop
push
idivb
scas
sbb
mov
lahf
inc
lret
or
fadd
push
aaa
cld
and
and
xor
dec
fs
push
pop
data16
dec
enter
or
mov
filds
pop
inc
push
and
mov
mov
ljmp
hlt
popa
fs
int3
inc
mov
test
dec
movl
mov
inc
pop
lods
or
pop
imul
sti
xor
ss
leave
xchg
jb
imul
aam
repz
fdivl
push
sbbl
aas
ljmp
jnp
cltd
jmp
sub
nop
jae
xchg
or
ljmp
cwtl
xorb
je
dec
int3
ss
mov
push
into
mov
test
adc
inc
gs
cli
jmp
cmp
dec
inc
lds
decl
fisubrl
test
adcl
loop
rcrb
scas
ror
push
mov
cwtl
jnp
movsl
addb
sbb
dec
push
xor
and
xchg
xchg
xchg
ljmp
inc
mov
xchg
scas
arpl
in
xchg
cmp
outsb
mov
or
sbb
push
or
and
jo
push
push
adc
out
out
int
lcall
push
cmc
jb
lods
push
sub
push
jnp
mov
test
out
ljmp
xchg
out
insb
and
into
jmp
pop
test
pop
xchg
mov
int3
push
test
add
adc
sbb
sbb
cmp
push
xchg
fldenv
lds
push
and
and
das
or
arpl
adc
faddl
mov
adc
movsb
jp
jns
adc
and
mov
repz
jb
dec
jl
add
scas
cwtl
xorl
mov
cwtl
aas
jne
loopne
stos
dec
in
fs
arpl
adc
mov
cmpl
or
xor
mov
inc
pop
xchg
dec
xor
jl
sbb
lret
scas
xor
in
mov
fs
push
rolb
sub
xchg
in
pop
flds
stos
in
mov
add
xchg
mulb
or
rorb
aas
mov
sbb
arpl
xor
fidivrs
imul
jne
add
and
jno
rcll
mov
aam
les
shll
rolb
lcall
push
roll
adc
jle
cmp
mov
insb
adc
cmp
add
xchg
icebp
mov
mov
fwait
xlat
jl
mov
int
imul
test
js
mov
xchg
adc
gs
adc
mov
mov
enter
mulb
rcll
lock
sbb
fmul
add
pop
mov
out
pop
mov
psubusb
sbb
adc
paddq
mov
pushf
in
mov
sbb
out
pop
adc
sub
adc
sbb
idivl
test
cmp
and
jb
sti
mov
inc
xchg
jo
mov
xor
and
jge
inc
sbb
mov
jae
pop
pop
mov
adc
fadds
leave
pop
xchg
cmp
or
scas
cmpb
mov
addr16
xor
aas
test
test
adc
push
adc
sbb
adc
sub
pushf
xorb
push
cli
pushf
loop
inc
out
fisubs
push
scas
movsl
lret
ret
out
xchg
pushf
cwtl
mov
cmc
movsb
add
jecxz
js
jmp
stos
fs
push
pop
sbb
sbb
std
js
popa
aas
arpl
fdivs
xlat
xlat
shl
pop
es
pop
repz
lods
stos
mov
cmp
sti
sbb
sub
lds
insb
outsl
jmp
sub
hlt
pop
add
aad
and
cmp
and
jno
xchg
outsl
dec
movsb
jmp
js
jns
movsl
into
je
adc
push
pop
inc
jmp
push
loop
shlb
pop
insb
outsl
lret
push
inc
imul
pop
mov
add
add
fcmove
ja
xchg
daa
mov
jno
insb
sub
ds
out
repnz
clc
adc
jmp
xchg
test
int
jo
cld
sbb
mov
fsub
mov
and
cmc
mov
fldcw
mov
fs
mov
pushf
pushf
mov
int3
ret
out
mov
push
cs
imul
and
cmp
cli
lcall
scas
sub
insl
loopne
inc
dec
cmp
repnz
test
popa
mov
insl
add
mov
cwtl
dec
dec
test
xor
pushf
inc
push
mov
lahf
jecxz
mov
int3
adc
imul
pop
mov
xchg
jmp
lods
lds
ss
cltd
jge
fisttps
lods
pushf
addr16
push
cmp
and
mov
inc
cmp
movsb
lcall
xor
in
dec
cmpsb
cmpsl
add
and
xor
or
lret
xlat
pop
mov
test
aas
inc
icebp
xchg
inc
or
push
in
push
add
orl
inc
stc
sahf
out
push
shlb
test
and
push
push
insb
addr16
dec
lcall
fdivr
cmp
cmpsl
xlat
push
inc
pop
or
sti
xor
xor
movsb
inc
or
mov
mov
fs
ljmp
add
dec
xor
push
into
lahf
add
inc
les
decl
test
inc
cmp
lock
xor
jns
xchg
fisubl
je
add
into
lea
fimull
in
fxch
mov
and
sub
addr16
sub
push
sub
mov
lcall
imul
cmp
sub
cmp
and
roll
mov
cld
dec
jge
in
mov
jbe
jge
cld
sbb
fisubrl
lea
xchg
enter
aas
icebp
fs
jo
mov
jmp
pop
mov
gs
add
pop
inc
cmc
sbb
and
adc
bound
and
arpl
aam
push
push
repz
test
shrb
jo
xor
sti
sub
xlat
insb
sub
cld
dec
cmc
loopne
fs
data16
loop
mov
add
leave
outsb
insl
cmp
adc
clc
fists
jae
popa
outsb
scas
xor
test
divb
stos
jmp
push
xchg
dec
rcrl
jbe
rcr
jbe
mov
incl
cs
out
xchg
lret
mov
int3
mov
iret
push
jp
mov
pop
cmp
out
hlt
ja
repnz
xchg
int
inc
mov
pusha
mov
cli
test
and
clc
decl
adc
imul
or
ds
mov
incb
scas
sbb
mov
ljmp
pop
ret
pop
fs
sbb
dec
mov
fistpll
dec
adc
nop
and
repnz
dec
in
cmpsb
inc
push
or
stc
xor
cmp
lock
cmc
push
cld
sub
dec
mov
arpl
add
pop
ret
cmp
cmp
inc
adc
repnz
outsl
scas
loope
mov
repz
loopne
jno
xor
in
cs
xor
je
inc
lock
cld
aas
or
int3
push
sub
cwtl
push
inc
ret
mov
push
sub
mov
lcall
les
int3
add
mov
out
into
das
inc
aas
mov
mov
jo
rorb
rcrb
nop
ja
lret
or
dec
pop
and
cwtl
movsb
xor
cmp
mov
incb
push
or
stos
call
push
or
leave
mov
cmc
sbb
adc
jnp
inc
adc
test
mov
jo
jecxz
mov
addr16
mov
push
xorb
add
mov
push
and
data16
es
push
ret
fcmovb
cmp
cmp
add
inc
pop
lea
imul
dec
and
jmp
lods
rolb
jns
popf
inc
dec
sub
xchg
mov
scas
fcmovnb
mov
add
mov
out
repnz
insb
lcall
inc
push
pop
mov
pop
xor
movsl
push
mov
pop
ds
aad
subb
fldenv
dec
fildll
pop
lcall
daa
mov
add
cmc
repnz
fsubr
gs
data16
xor
push
imulb
sbb
ss
outsl
xchg
add
mov
xchg
push
add
xchg
add
pop
dec
test
mov
sar
out
pusha
dec
outsl
mov
inc
inc
mov
stc
xor
icebp
lret
jle
data16
xchg
and
sub
cwtl
add
mov
std
int
cmp
cld
mov
jb
push
lret
sti
inc
inc
adc
arpl
push
lock
incl
hlt
mov
shll
inc
and
inc
pop
mov
iret
cmpl
pop
add
sub
flds
add
dec
cltd
jbe
mov
fwait
dec
mov
mov
jo
mov
loopne
sbb
cmp
mov
pop
xor
mov
inc
cmp
mov
push
mov
loop
popa
mov
xchg
std
jp
xchg
xor
and
or
inc
push
cmp
clc
ss
xlat
loopne
imul
popf
sbb
adc
lods
mov
jns
sbb
push
int
ficomps
gs
push
xchg
loop
icebp
inc
inc
sti
idiv
xor
cmp
test
std
pop
xchg
cmp
dec
sbb
data16
hlt
stos
xor
and
clc
notl
jle
arpl
inc
iret
outsl
pushf
jnp
mov
cmc
dec
sbbb
xor
mov
cmp
push
jecxz
sub
push
push
hlt
xor
xchg
inc
lret
cmp
stos
jns
mov
inc
xor
mov
mov
icebp
pop
and
push
hlt
sbb
sub
mov
pop
xor
jo
fldl
sbb
inc
dec
gs
mov
mov
inc
in
pusha
ret
jb
popa
xchg
scas
add
inc
out
jecxz
and
subl
subb
test
into
xchg
cs
in
or
xchg
iret
dec
cmp
sub
loopne
xorl
adc
fcomps
bound
in
insb
mov
imul
mov
inc
insl
mov
js
repnz
adc
xlat
adc
icebp
popa
pusha
pop
in
add
sbb
sbb
loopew
in
mov
inc
or
sbb
repnz
sbb
test
jns
adcl
sbb
sub
loopne
adc
inc
sbb
jge
add
test
mov
test
inc
out
in
add
jg
mov
cmpsb
imul
xchg
shll
incb
xlat
daa
mov
xchg
pusha
mov
cmp
pop
jnp
add
mov
add
xchg
ja
sub
pop
sbb
push
pop
stos
pop
out
addl
dec
mov
mov
jb
jl
cmp
popa
lds
mov
cld
xchg
test
mov
mov
pop
cmc
arpl
in
sub
popf
lea
sbb
or
imul
or
lods
out
cltd
in
les
dec
push
xchg
jge
dec
and
pop
sub
pop
out
inc
std
push
out
jg
dec
iret
test
fnstenv
xchg
mov
inc
mov
jp
iret
insl
mov
xchg
mov
out
inc
lea
sbb
ljmp
and
sub
aaa
adc
aam
ds
push
mov
cld
mov
ss
movsb
inc
and
sbb
lods
imul
inc
inc
mov
fstpl
adc
js
mov
cmp
xor
mov
adc
leave
pop
xlat
hlt
stc
in
xchg
insl
sbb
ret
stos
fs
in
pop
or
sub
inc
add
sub
fs
outsb
sbb
enter
push
mov
push
mov
outsb
jno
push
cmp
fldt
inc
hlt
xlat
add
int
and
insl
shrl
pop
jp
and
xor
fnstsw
fcoms
insl
lock
bound
cmp
xchg
adc
mov
outsb
int3
sbb
mov
imul
call
js
adc
xlat
sub
call
inc
xchg
cmp
sbb
mov
imul
scas
enter
jmp
daa
cmp
add
dec
jl
xchg
add
pop
mov
mov
sbb
js
mov
test
xor
adcl
mov
pop
mov
jno
loop
enter
mov
aaa
xchg
mov
mov
das
mov
js
xchg
fisttpl
inc
in
sahf
fiaddl
shl
xchg
pop
sbb
add
pop
mov
pushf
jp
add
movsl
bound
arpl
adc
fstl
or
ljmp
or
mov
cmp
test
xchg
ss
xor
scas
repz
pop
pop
pop
mov
jle
ficomps
imul
jne
dec
xor
dec
sbb
cmp
pop
pop
in
cmp
sbb
jmp
loop
imul
inc
sbb
pop
sti
jmp
xchg
in
jl
sti
call
mov
cmc
inc
pusha
jo
adc
cmpsb
push
aas
outsl
push
add
ficoml
scas
arpl
dec
jle
mov
sbb
cmpsl
test
xor
dec
mov
jno
dec
icebp
mov
std
lret
lret
mov
cmpsb
mov
inc
in
inc
xor
push
jnp
cmp
push
xor
jno
add
adc
mov
in
or
jo
pusha
xor
and
out
lcall
test
dec
mov
pop
mov
out
ljmp
cmp
js
iret
add
mov
adc
call
stos
stc
sahf
fmull
out
cmp
xlat
sbb
jge
push
mov
addr16
shll
jno
popf
mov
pop
sub
push
or
mov
jge
mov
adc
sub
jns
mov
xchg
test
clc
insb
push
jae
add
arpl
cmpsb
jge
xchg
pop
dec
pop
mov
in
iret
and
jmp
in
sub
inc
dec
lods
sahf
sub
stos
rcr
shlb
cmpsb
cmp
cmp
lcall
mov
ret
movsb
int
xchg
inc
or
mov
roll
daa
mov
mov
int3
aas
and
roll
sbb
pop
popf
outsb
mov
cmp
add
mov
add
jne
pushf
inc
cmc
std
lret
sbb
fsubs
lods
push
mov
int3
push
cmp
movb
sbb
jecxz
aam
push
js
pop
sbb
or
in
mov
aam
push
sub
in
je
hlt
nop
in
ret
out
inc
adc
pusha
mov
mov
enter
or
sahf
or
jb
sub
cmpb
sti
pop
dec
sub
addr16
xchg
sbb
decb
imul
shll
out
sub
or
orl
fwait
sbb
cmc
fiadds
add
dec
lods
cltd
jecxz
sarb
int3
pushf
shlb
fnstenv
leave
repnz
xchg
xchg
das
jne
ret
mov
lods
mov
scas
in
sahf
sahf
mov
lds
sahf
test
mov
mov
xor
daa
push
repz
in
stc
jp
mov
add
ds
xchg
gs
add
stos
test
pusha
mov
mov
cmpsb
mov
mov
in
mov
jb
pop
lahf
mov
mov
mov
andb
sub
mov
mov
pop
in
je
push
lock
and
xor
lret
mov
jo
daa
hlt
dec
icebp
pop
jle
daa
icebp
cmp
adc
adc
int3
lcall
jo
jno
pop
mov
push
inc
xor
push
add
sbb
mov
std
pop
shrb
xchg
inc
jbe
sti
pusha
js
lds
jne
push
adc
sub
adc
jmp
mov
pop
xchg
and
or
mov
add
clc
sahf
fldl
imul
jns
out
movsb
add
or
cmpsb
popa
sbb
fwait
shlb
cmp
pop
sbb
inc
adc
mov
push
jns
inc
ficomps
add
lcall
rcll
push
test
xchg
sahf
pop
sbbl
ja
outsb
mov
mov
call
jl
shll
lahf
popa
fsts
push
inc
mov
jl
lock
sbb
inc
push
cmc
inc
sub
push
out
inc
nop
add
mov
add
jl
mov
cmp
lods
ja
popw
dec
dec
mov
pop
push
cmp
addr16
sti
int3
lock
mov
mov
or
outsb
push
pop
adc
mov
inc
xor
cmp
and
daa
sbb
cli
push
or
push
cli
jge
test
adc
mov
cmp
jbe
push
outsl
add
test
pop
sbb
sub
scas
xor
outsb
mov
daa
pop
jno
scas
xchg
sbb
mov
nop
incl
std
rcr
lods
sbb
ret
aas
inc
and
sbb
es
jp
xor
test
or
or
in
jl
je
jge
das
les
adc
mov
aas
fildl
cmc
lds
movsb
adc
mov
sbb
mov
mov
pop
fdivl
jmp
addr16
fsubr
lret
fisttps
loop
xchg
ret
or
les
into
pop
cmp
imul
inc
sti
xchg
enter
or
inc
test
xor
adc
out
stos
inc
mov
into
mov
fwait
xlat
test
and
ret
lods
xchg
pop
lods
push
ret
lret
sub
cwtl
mov
add
repz
js
sbb
sbb
and
push
lock
sub
dec
push
icebp
stos
testb
jae
incb
xchg
data16
push
jbe
pop
fidivs
jbe
rcrl
jae
mov
out
imul
sbb
inc
or
and
into
push
cltd
call
sahf
out
mov
sbb
inc
adc
jnp
cmpsl
idivl
mov
or
dec
or
mov
in
leave
xchg
lock
mov
adc
mov
and
or
rorl
push
mov
aaa
adc
popf
ficoms
scas
lahf
xchg
mov
aas
outsb
push
xor
mov
stos
xchg
in
jae
js
int
out
or
push
outsl
adc
mov
into
lods
xchg
inc
aaa
out
pop
sbb
mov
fwait
push
fsubrs
clc
and
jbe
and
push
push
mov
xchg
rclb
loopne
pop
xor
sub
roll
pop
dec
scas
jge
sbb
push
addl
adc
and
lahf
orb
pusha
cmp
cmp
xchg
pop
mov
imul
push
push
dec
pusha
lret
or
adc
test
jle
mov
out
cld
push
and
jp
test
aam
xchg
mov
fnsave
movsl
repnz
in
ret
jge
fs
fisttpl
repz
addps
inc
push
cltd
ret
fsubrp
jb
push
test
mov
daa
mov
add
es
loop
test
bound
adc
ljmp
dec
cmc
mov
cmpsb
push
inc
cwtl
cmp
pop
loop
addr16
add
dec
jns
add
mov
clc
fisubrs
sub
mov
pusha
mov
pop
push
mov
call
daa
cwtl
add
push
add
lds
in
jge
and
cltd
xor
mov
in
sbbl
xor
and
out
mov
mov
mov
dec
sbb
scas
sub
enter
jb
push
pop
mov
xlat
cli
inc
xchg
jle
add
pop
sahf
sub
mov
pusha
push
sbb
mov
inc
inc
shlb
popf
sbb
jle
sar
roll
lcall
push
xor
adc
push
jle
xor
leave
xor
fs
or
sub
lods
adc
xor
sahf
pushf
int3
adc
and
scas
lods
sbb
and
mov
ret
mov
dec
mov
outsb
addl
add
call
call
jo
loop
xchg
xor
jb
test
repz
mov
fisttps
sub
adc
pop
mov
mov
fwait
add
mov
and
lea
pusha
std
lods
sbb
test
sti
or
loopne
push
movsb
outsl
pop
jb
aas
xor
mov
inc
call
and
sbbb
jecxz
enter
gs
cmpsl
jecxz
lret
xor
clc
adc
imul
in
into
adc
and
scas
lahf
in
mov
lret
push
orl
jns
popf
mov
ljmp
add
mov
mov
cmp
mov
mov
adc
lods
push
jo
xor
lea
das
inc
mov
jp
out
sub
clc
fmull
insb
bound
test
sti
sub
out
inc
out
mov
je
pusha
fldt
sbb
add
dec
mov
xor
divl
or
jge
push
decl
sbb
cmp
and
push
push
lods
push
mov
dec
fsub
inc
sti
cmc
sbb
movsb
pop
movsl
out
sbb
aad
rcll
popa
andb
cmpsb
out
jge
cwtl
cmpsl
sbb
call
ret
inc
sbb
mov
mov
mov
mov
or
gs
cmpsb
adc
aad
sahf
jle
scas
popa
int3
movsl
mov
loop
push
loopne
dec
aam
popf
cs
push
push
push
push
arpl
sbb
dec
fsubs
lcall
aaa
stos
adc
daa
repnz
pop
jae
or
ret
pop
push
jmp
cld
ret
stc
xchg
push
frstor
jg
outsb
sti
cmp
or
inc
fildll
loopne
adc
mov
enter
imul
add
mov
addr16
push
sbb
mov
icebp
addl
test
push
dec
jo
sub
stc
clc
mov
aad
outsl
xchg
xchg
mov
insl
pop
cld
mov
fs
pop
loopne
and
sbb
outsb
enter
pop
jp,pt
into
hlt
xor
test
mov
pop
push
lods
in
jg
push
mov
and
repz
idiv
inc
dec
aad
add
add
and
inc
cmpsb
inc
fucomp
sub
mov
push
or
xor
xchg
stos
cmp
pusha
loopne
jo
test
jnp
lret
lods
jo
scas
mov
mov
push
and
or
inc
out
inc
pop
and
not
dec
sub
push
xchg
iret
push
jmp
push
mulps
shlb
orl
xlat
cmp
into
ret
mov
push
pand
es
insb
fldenv
cld
repz
sub
lea
mov
aas
bnd
sub
incl
adc
mov
insl
addr16
repnz
mov
js
call
scas
add
stc
mov
dec
xchg
mov
mov
outsb
int
lock
repz
je
or
or
inc
insl
lods
inc
stc
inc
mov
scas
in
mov
ret
pop
mov
lahf
inc
dec
mov
inc
cmp
fnop
std
testb
mov
rclb
xlat
outsl
fisttps
leave
repz
pushf
cwtl
enter
test
jge
cltd
sti
inc
inc
fistpll
lods
jge
jge
pop
hlt
cltd
inc
mov
xor
cmp
jge
inc
and
popa
cmp
pop
ja
aam
pusha
mov
stc
pop
xchg
mov
cmp
jnp
mov
push
iret
push
mov
lret
stc
lea
pop
bound
ret
mov
sti
lea
in
inc
mov
jne
adc
pop
mov
adc
in
cld
inc
js
mov
adc
ret
lea
sbb
inc
dec
mov
leave
enter
cs
dec
or
pop
enter
out
push
pop
daa
popf
xor
aaa
jne
aad
cmpb
fsubrs
cmp
cli
xor
cli
inc
lcall
notl
pop
add
push
jno
popf
scas
lods
inc
loopne
jae
mov
inc
lea
jge
inc
stos
xor
adc
sub
push
push
xor
js
lock
pop
and
dec
aad
lahf
pop
sub
add
jnp
fcmovne
xchg
or
test
leave
add
jge
andl
jg
dec
adc
mov
ds
sub
aam
adc
xor
in
push
or
push
adc
orl
pop
mov
outsl
push
nop
sti
aad
jno
pushf
xchg
popa
scas
mov
sub
ja
sub
addr16
mov
mov
cmp
scas
std
lds
xor
jge
and
in
push
mov
sarl
mov
cmc
fwait
xchg
in
scas
adc
inc
lods
cltd
jmp
pi2fd
daa
push
xchg
int
outsl
sbb
cli
mov
cmp
dec
dec
cmc
mov
mov
outsl
jp
xchg
loop,pt
loope
lcall
call
ret
sbb
pop
fcoms
xor
lahf
fldcw
xor
sub
push
es
inc
jge
sbbb
inc
dec
ret
icebp
rcr
daa
mov
xchg
xchg
mov
fstpt
xor
lret
mov
jp
lret
xchg
mov
jbe
sub
inc
jne
add
push
push
aad
inc
fs
xlat
mov
cltd
dec
xchg
mov
adc
add
mov
mov
rcrb
xchg
and
push
push
push
jbe
jns
cmp
int3
pusha
int
std
push
mov
inc
jg
test
add
or
mov
xor
shrl
inc
ljmp
shll
ja
fiaddl
cmp
imul
fimull
arpl
adc
scas
sbb
fimuls
ret
xchg
or
imul
cmp
aas
clc
gs
pop
lods
pop
in
mov
jmp
mov
ret
mov
xor
and
jmp
bound
ja
jge
jmp
aas
lcall
jno
sbb
mov
arpl
mov
test
jb
in
mov
cmc
and
daa
add
enter
jge
push
mov
xor
adc
shll
dec
mov
pop
test
mov
adcb
pop
cmp
shlb
jbe
add
mov
push
mov
mov
rolb
cmc
mov
jmp
iret
orl
cmp
inc
dec
scas
sub
out
popa
rorl
sub
dec
shll
data16
pop
test
xor
loope
jmp
mov
push
insb
leave
xchg
call
push
cmp
stc
cmp
bound
push
movsl
insb
in
ror
mov
imul
xchg
mov
out
push
mov
ljmp
dec
mov
loopne
and
jno
int3
mov
jne
cmp
flds
scas
add
xlat
lock
pop
and
pop
add
je
add
adc
inc
xchg
mov
cmp
ret
pop
lods
add
xchg
xchg
jmp
adc
addl
mov
bound
cs
xor
int3
inc
dec
adc
rcrl
repz
xor
js
shl
mov
fcoml
es
test
jl
out
push
rcll
push
add
mov
mov
or
cmp
push
cmpsl
scas
popf
jae
xor
pop
out
fwait
xor
push
add
hlt
mov
cmpl
mov
insl
stos
mov
lock
fmull
ret
cwtl
rol
lods
clc
or
popf
rorb
jae
pushl
adc
mov
xor
sub
out
jmp
adc
inc
call
out
sbb
andl
pushf
lods
add
pop
cmp
dec
or
sub
add
pop
mov
mov
dec
push
lea
into
adc
jne
jecxz
in
outsb
xor
xchg
xchg
adc
bound
out
inc
arpl
arpl
mov
rorl
call
not
imul
shr
sbb
push
dec
sub
xchg
cmp
sbb
popf
push
rolb
out
xor
dec
adc
or
mov
add
push
xchg
stos
and
cld
aaa
push
dec
xor
mov
cs
mov
imul
cmp
inc
mov
jmp
pop
and
inc
push
push
jne
dec
mov
rorb
dec
es
clc
or
cmp
mov
faddl
jle
into
stc
int3
sbb
test
iret
add
leave
or
jle
sub
pop
rol
xlat
inc
inc
aaa
cs
repz
jae
dec
and
int3
shll
les
xor
pushl
xor
in
rol
inc
fldenvs
popa
jl
jo
push
pop
inc
arpl
lret
xor
aas
mov
pop
push
mov
inc
divb
xchg
stos
insl
adc
out
xchg
mov
gs
inc
mov
adc
xor
es
sbb
inc
lods
mov
insl
jnp
andb
mov
or
stos
mov
cmp
inc
mov
fcmovne
xor
out
inc
jnp
insb
sub
in
cmp
push
mov
mov
outsb
sub
aaa
pop
mov
ljmp
outsl
pop
stos
jns
inc
popf
movl
aad
xlat
xchg
dec
into
cld
sub
test
int
xor
mov
aam
mov
push
rcrl
pop
hlt
and
mov
enter
call
sbb
xchg
mov
lds
insb
xchg
jle,pt
xchg
jg
jo
call
and
pop
sbb
mov
je
and
push
aad
jl
lret
or
mov
into
sub
pushf
repz
loop
outsb
xchg
sub
ja
xchg
inc
gs
and
mov
test
sub
push
int
sbb
rol
test
xor
outsl
sti
or
in
xchg
sahf
cmp
or
pop
popa
dec
cli
xorb
sti
xlat
fmulp
lahf
sahf
mov
cmp
push
xlat
stos
xlat
pusha
xor
inc
cmp
ljmp
cli
shlb
xor
mov
lds
ficompl
int
inc
nop
push
ljmp
jg
pop
lods
js
repz
repz
dec
pop
nop
pop
add
addr16
leave
rorl
test
out
adc
lods
cld
xchg
ret
push
adc
jp
adc
and
mov
add
push
or
aad
jae
sbb
sar
jmp
xchg
enter
jmp
add
lods
lock
les
push
inc
ss
es
test
jg
out
jno
daa
lcall
or
andb
test
cltd
push
aam
in
jmp
jl
mov
dec
in
mov
add
test
fiadds
cmp
lret
fldenv
notl
or
loopne
aaa
lcall
movsl
cli
xchg
lock
xor
mov
and
fisttps
mov
shrb
call
gs
call
push
fstpt
xchg
std
orb
ds
pop
cmp
jb
shlb
push
push
push
sub
je
aas
pop
cltd
and
push
sub
dec
pop
mov
aaa
mov
or
bound
test
hlt
mov
and
pop
insl
push
ret
lea
or
and
mov
lock
push
mov
dec
inc
xorb
testb
shrl
or
xchg
shll
and
test
ret
ret
and
jg
push
stos
addr16
xor
in
stos
jb
out
mov
mov
popf
xchg
js
outsb
inc
push
xor
push
pop
mov
sub
test
cmp
mov
xchg
xor
negl
sbb
clc
inc
adc
ss
sbb
testl
add
addr16
lods
mov
push
cmpsb
jae
outsl
mov
aas
sbb
rcr
outsl
mov
jbe
or
add
jb
mov
enter
cmc
inc
mov
lahf
push
movsb
dec
xor
les
xchg
mov
fyl2xp1
bound
xchg
arpl
mov
in
mov
xor
fistpll
push
inc
jae
sub
xchg
stc
sbb
pushf
mov
fstpt
xor
std
cmp
cmp
lret
push
mov
js
and
testb
lods
arpl
inc
sbb
push
sub
mov
ret
int
imul
in
sub
js
sbb
or
cmp
aas
mov
or
dec
xor
mov
stc
mov
lret
js
pop
and
push
popa
mov
xorb
xor
pop
ss
mov
dec
sbb
push
in
lret
loopne
repz
sarl
lock
mov
xchg
into
push
mov
dec
popa
fs
cmpsl
clc
jle
addr16
dec
repz
data16
push
add
inc
lods
jo
mov
and
push
push
cltd
imul
movb
mov
decb
xor
pop
mov
fisubs
pop
dec
xchg
pop
lods
cltd
std
scas
ss
test
jmp
loop
rcrb
mov
call
push
and
decb
pop
mov
fcomps
sbbb
mov
sub
es
push
in
leave
dec
xor
xor
lcall
ret
or
fldcw
xlat
sbb
lret
inc
cli
lret
test
adc
xchg
cltd
pop
push
fldl
jge
movsl
test
stos
stos
push
movsl
pop
mov
jnp
cs
push
test
loope
xchg
sub
call
repnz
scas
mov
repz
out
repnz
lret
inc
pop
pop
pop
loopne
or
mov
aas
jb
dec
repnz
sbb
cmp
xchg
xor
push
push
scas
test
lret
xor
gs
out
lahf
fdivrs
adc
cmpb
mov
sub
mov
loopne
push
outsl
pop
fisttpl
stos
popa
cmp
ja
pop
xchg
sub
push
cmp
mov
inc
push
pop
std
jnp
rcll
or
inc
adc
bnd
ja
arpl
push
mov
jae
clc
gs
lock
adc
sbb
nop
std
xor
mov
fcomp
inc
pop
mov
or
shl
cwtl
inc
pop
bound
leave
cmpl
sbb
sbb
dec
out
call
fwait
ds
add
jo
cld
daa
pop
push
add
jnp
aad
fwait
mov
lock
in
repz
mov
push
enter
dec
addr16
lds
cmp
inc
aam
stos
mov
clc
aas
jno
mov
and
push
stc
inc
and
ficomps
push
mov
dec
sarl
dec
adc
and
pop
iret
or
cwtl
mov
and
sub
in
dec
lret
lods
sub
xor
shrb
dec
hlt
shll
add
sub
jmp
dec
cmp
sarl
push
or
outsb
xor
in
out
jl
sub
jb
mov
cmpsl
fsin
nop
xchg
jp
loopne
stc
test
ljmp
inc
lret
sti
jbe
sbb
out
ret
pop
lock
sub
int
jae
mov
sub
aam
sbb
push
push
mov
or
pop
push
push
fdecstp
hlt
or
sti
lahf
cmp
inc
int3
xor
shlb
pop
jbe
in
pusha
lods
lret
mov
lds
notb
stos
negl
leave
pop
fistpl
inc
sub
or
dec
jmp
arpl
sub
sarl
cmpsb
and
insb
lea
push
outsl
xchg
fucomp
push
pop
xlat
xchg
xor
pop
in
pop
stc
pop
add
sub
nop
enter
fwait
daa
pop
pop
jo
icebp
movsl
hlt
out
outsl
ret
sub
divb
imul
mov
push
mov
or
push
sbb
into
in
mov
jb
loope
jecxz
je
mov
and
pop
dec
xor
stc
rclb
stos
jb
rclb
das
mov
mov
push
sub
jbe
insb
xchg
rol
nop
fwait
adc
adc
iret
loopne
fildl
pop
sbb
push
stos
sbb
aam
mov
add
and
and
test
pushf
mov
inc
hlt
test
jecxz
imul
stos
rcrl
leave
pop
xor
mov
cmc
add
out
addb
xchg
dec
lock
mov
daa
lea
mov
jecxz
mov
hlt
fstpl
mov
mov
adc
ss
sub
inc
inc
rolb
mov
dec
es
sub
xor
and
leave
imul
ret
sbb
push
dec
fwait
cmp
jbe
sub
and
and
sti
aam
add
dec
cmp
mov
push
mov
in
aaa
js
pusha
enter
xor
leave
ljmp
adc
xor
test
mov
mov
dec
nop
push
sti
push
enter
lret
sahf
gs
mov
fs
add
pop
lods
sbb
mov
mov
mov
mov
scas
loope
jle
outsl
mov
jnp
fildl
into
mov
cli
mov
hlt
push
mov
cmp
xchg
dec
popa
test
or
into
dec
pop
push
jmp
push
xchg
mov
sub
pop
sarb
in
xchg
and
sub
out
or
lds
push
ja
mov
sub
push
inc
int3
cmpxchg
imul
cmp
fcmovb
scas
sti
cmp
scas
sub
mov
adc
out
dec
cwtl
movsb
je
ljmp
pop
insl
out
loop
adc
mov
lods
add
push
xor
pop
and
adc
int3
pop
mov
dec
in
imul
je
fldl
jge,pn
not
mov
lock
lods
xor
arpl
fdivl
das
rorl
lcall
shlb
cmpsb
cmpsb
fcoml
inc
adc
fnstsw
mov
mov
adc
mov
insb
dec
int3
fwait
loop
lret
lret
in
add
rolb
aas
movsl
sub
mov
dec
xor
fsubl
rolb
adc
pop
jno
xlat
gs
faddl
lret
clc
in
cwtl
xchg
fisubrs
jg
pop
pushf
sub
dec
mov
and
stc
ficoml
hlt
lcall
aaa
cmpsl
mov
dec
out
lret
shrl
fld
xor
cmp
xlat
in
cmpsb
push
out
xlat
dec
lods
daa
add
divl
add
jbe
jo
add
xchg
cmp
out
in
mov
xchg
sahf
insb
aad
lods
cli
cmp
outsb
jg
out
ret
cmp
xlat
sbb
dec
mov
xchg
and
mov
in
addps
int3
scas
and
sub
in
imul
fistpll
ss
mov
dec
sbb
imul
sub
lahf
add
test
add
jge
iret
sbb
ljmp
sahf
mov
xor
call
sbb
sbb
sarl
mov
pop
dec
mov
je
cmp
inc
test
mov
into
and
loopne
sub
shll
mov
jno
adc
mov
adc
inc
out
cmp
add
loopne
shrb
pop
xor
mov
in
aaa
mov
pop
sbb
xlat
mov
mov
sti
enter
xor
xchg
mov
movsl
mov
lock
cmc
and
adc
in
scas
and
fs
jg
icebp
push
fiadds
jg
mov
adcb
inc
inc
and
arpl
xchg
mov
xchg
dec
cmpsb
movl
or
movsl
pop
fidivrl
jp
addr16
or
popf
adc
fidivs
in
pusha
dec
leave
popa
test
add
fimuls
daa
testl
mov
push
add
lods
aaa
pop
dec
int3
test
adc
call
mov
lcall
pop
arpl
xchg
pop
call
mov
adc
push
rclb
jp
sub
xchg
adc
scas
xchg
movsl
xor
jl
shrl
push
xor
outsb
nopw
sub
mov
mov
loop
mov
orl
cmc
pop
xor
pop
imull
jno
bound
xchg
cli
sub
scas
mov
xor
lock
sbb
push
in
dec
dec
dec
in
je
pusha
inc
jb
std
xchg
nop
cwtl
fcomi
inc
push
pop
daa
shlb
cld
pop
sahf
cmp
scas
pop
int
pop
and
mov
or
mov
push
adc
inc
sahf
dec
movsb
dec
cmp
and
lods
dec
or
aam
inc
jp
fdivrs
das
xchg
insb
sbb
pushf
adc
and
mov
fs
repz
int
in
and
sub
mov
mov
aam
aam
cmp
cmp
out
adc
fmull
push
mov
mov
inc
das
and
adc
and
outsb
imul
std
aam
adc
shr
push
adc
xor
mov
or
jg
shlb
push
push
call
cli
clc
nop
push
andl
cmpsb
push
mov
loope
rorb
ja
lods
pop
ljmp
enter
add
mov
rorb
dec
test
inc
inc
aad
movsb
cld
sub
jmp
push
rcl
sahf
inc
imul
jge
push
sub
pop
pop
lods
das
mov
sub
xlat
dec
sub
push
fldl
pop
loope
insl
sub
pop
push
leave
inc
aaa
loopne
es
movsb
lea
fsubrs
jmp
xchg
mov
add
mov
js
daa
xchg
loop
pop
ret
push
add
jge
sub
dec
mov
jle
mov
inc
inc
imul
sbb
sub
push
mov
sub
sahf
add
popf
xchg
ret
daa
incb
cltd
sub
push
sbb
repz
push
adc
inc
push
dec
fmull
mov
pusha
cmp
aas
dec
ret
mov
aas
sbb
mov
push
fimull
dec
inc
fiadds
out
xchg
das
fnstenv
sub
test
push
je
fs
ds
mov
inc
sti
icebp
sub
xchg
scas
xchg
xchg
inc
iret
inc
test
popa
jb
imul
sub
ds
sub
mov
lcall
sarb
insb
gs
pop
and
mov
out
jmp
lock
ss
push
subl
dec
psubusb
adc
lods
test
xor
lret
mov
popa
mov
adc
int3
gs
in
adc
fcoml
dec
cltd
out
add
push
adc
adc
mov
mov
imull
pop
outsl
or
dec
pushf
xchg
movsb
movsl
add
push
pop
cltd
fmuls
mov
jp
sbb
push
incb
sub
push
or
ds
dec
jecxz
pop
cmp
fcomps
mov
cwtl
jecxz
jbe
aaa
hlt
xor
sub
xchg
inc
das
out
or
ja
sub
test
test
stos
adc
or
mov
or
xorb
dec
ljmp
jb
pop
push
fiaddl
mov
cmp
repnz
popf
xor
jo
sbb
mov
imul
jbe
or
mov
jmp
aaa
enter
movsb
mov
mov
mov
sbb
out
fidivrs
mull
sbb
pop
ss
addr16
xlat
int3
mov
sahf
clc
icebp
adc
xchg
mov
popf
add
icebp
cwtl
xchg
test
aas
stos
sbb
sub
push
xlat
addr16
sbb
jns
je
fadds
or
fstps
mov
lcall
xor
movsb
pop
xchg
pop
and
ret
add
adc
arpl
sub
inc
out
dec
les
xor
sub
xchg
dec
or
adc
add
notl
add
xorl
mull
test
xor
xchg
lcall
cmp
pop
sub
push
fimull
popf
fimuls
andl
mov
sbb
sbb
hlt
pop
out
fs
xchg
inc
test
mov
adc
mov
js
sbb
arpl
and
pop
mov
jno
scas
mov
cmp
or
fisttpl
fildll
aad
sahf
and
scas
xor
popf
or
sub
push
mov
fisubl
shlb
mov
or
mov
sbb
mov
jge
xor
arpl
test
xchg
dec
ja
ret
inc
jmp
lret
out
sub
dec
out
pop
iret
mov
dec
js
imul
ret
push
or
loop
into
imul
inc
sub
push
sbb
add
mov
xchg
push
dec
inc
or
sbb
cmpb
add
xor
pushf
fmull
xor
jbe
insl
shl
pop
and
add
fisubrs
mov
test
ss
movsb
fstpl
mov
ds
hlt
mov
leave
test
mov
aaa
inc
and
aad
push
lods
jbe
lods
lea
sbb
fidivrs
lahf
xlat
test
lea
push
mov
leave
cmp
or
dec
das
cltd
ss
paddusw
lss
dec
ljmp
das
rcrl
mov
cmp
add
push
jl
sahf
stos
lahf
or
dec
inc
test
mov
adc
lods
imul
cli
ret
cs
out
test
mov
push
mov
inc
xorl
xchg
push
shr
pushf
test
popa
test
xchg
cltd
mov
sub
ss
sub
test
cmpsl
add
or
inc
enter
push
test
test
dec
hlt
jecxz
xor
pop
dec
fidivrl
cmc
cmp
fistps
loopne
lods
das
leave
and
add
and
mov
loop
loop
pop
mov
jno
daa
div
loope
lret
mov
in
pop
cmp
rcll
mov
lret
and
cwtl
loopne
and
mov
stos
mov
stos
iret
repz
into
lds
pop
divb
lcall
sub
mov
es
xor
mov
movsb
in
loopne
rclb
push
push
test
fisubs
test
or
cmc
xchg
sub
lret
cmp
or
cmp
sub
cmp
push
lcall
xlat
aaa
inc
jge
int
and
dec
imul
push
mov
pop
cmpb
inc
daa
sub
es
add
es
lea
repnz
rcr
test
push
je
int3
dec
daa
push
inc
inc
out
out
out
lret
jg
xchg
sar
cli
nop
sub
fbld
outsb
xchg
test
and
ret
outsl
lahf
pop
das
popa
outsb
pop
shrl
insb
rorl
cvtps2pi
fwait
movsb
shlb
or
cmp
addb
test
sbb
lods
repnz
test
pop
fsubl
addr16
fcompl
arpl
pop
daa
popa
inc
and
testb
in
inc
or
mov
xor
adc
mov
adc
fldcw
mov
cli
jecxz
xchg
lcall
inc
cmp
xor
adc
cli
push
jg
icebp
cmc
dec
out
mov
push
cli
cmpsl
loopne
loope
pop
das
or
shll
and
xchg
lret
add
inc
cmp
adc
or
mov
in
sub
adc
xor
push
or
and
cmpb
mov
js
jb
insl
das
mov
addr16
addr16
xchg
jbe
push
lods
xor
and
or
inc
sub
inc
iret
les
sub
pop
mov
jno
sbb
pop
mov
dec
mov
inc
inc
push
sub
mov
pop
dec
add
ss
adcb
xchg
sbb
in
pop
int3
mov
clc
hlt
sbb
xchg
loop
jecxz
inc
and
ror
push
out
inc
add
clc
dec
clc
push
ret
in
pusha
pop
lods
dec
xor
sub
fidivrs
sub
fdivr
mov
jae
stc
leave
mov
pop
ret
inc
xor
sti
mov
lahf
adc
imul
add
fwait
or
inc
add
in
jne
push
das
xchg
mov
hlt
movsb
shlb
pop
aam
or
mov
cmp
sbbl
mov
test
mov
into
rcrl
pop
pushf
xchg
aaa
lcall
nop
push
jno
lea
bound
sbb
mov
js
fs
mov
nop
mov
pop
xlat
popa
fs
mov
cmpsb
ljmp
xchg
jns
fbstp
jno,pt
icebp
in
sub
in
movsb
xchg
mov
sub
mov
xchg
frndint
sbb
and
jg
dec
dec
call
xchg
pop
jbe
and
push
pop
xchg
mov
pop
inc
popa
pop
mul
mov
jl
pop
addl
adc
subl
mov
lock
lds
shll
or
faddl
and
leave
arpl
pop
shll
mov
mov
xlat
jbe
mov
xchg
adc
in
and
int
gs
andb
leave
jbe
dec
cmc
xor
in
cld
leave
push
add
push
lret
in
sbb
ss
fimuls
push
mov
rcrb
jge
cmc
xor
bound
xor
mov
dec
jecxz
popf
fdivs
imul
adc
sub
add
or
mov
out
push
xlat
add
or
jno
cmpsl
pop
repz
xchg
out
or
lea
repz
jbe
mov
arpl
out
dec
adc
mov
pop
mov
jg
mov
sub
push
cmp
test
xor
xor
mov
and
test
adc
xchg
sub
xchg
pop
mov
push
jle
sub
and
movsl
in
jno
inc
push
subb
push
sub
mov
lret
shrb
xor
sbb
ds
vpsubsb
push
adc
jb
sbb
hlt
xor
cwtl
and
sbb
xchg
xor
push
mov
xor
iret
lret
jnp
jnp
jmp
or
shll
mov
das
in
mov
mov
or
rcrb
ret
push
mov
dec
icebp
jge
fmuls
ficoms
stos
iret
pop
sub
xorb
movhps
push
pop
aad
lock
es
jo
xchg
jo
insb
xchg
aam
sub
enter
insl
mov
ret
adc
outsl
mov
aad
mov
test
addr16
addr16
push
fwait
sbb
test
das
pop
push
cmc
jne
inc
or
ds
push
dec
stos
out
lret
and
jmp
push
std
mov
fistl
subb
lea
cmpsb
add
lcall
lods
adc
jb
icebp
inc
sahf
or
pop
xchg
adc
sbb
call
pop
addr16
sbb
lds
and
leave
and
push
leave
popf
fsubrp
sbb
in
ret
fidivrl
rorl
push
fstpt
call
stc
in
add
icebp
stc
enter
xlat
adc
sub
push
xor
stos
xchg
lock
push
out
push
jl
cs
cli
mov
push
inc
sub
jno
loope
or
nop
imul
and
and
mov
pop
xor
cmp
pop
je
daa
jp
push
mov
xor
cmp
push
xcrypt-ctr
cmpsl
fiaddl
inc
inc
sbb
outsl
or
cmp
cmp
andl
mov
gs
ljmp
cmp
inc
insb
adc
je
pop
sub
jae
shll
out
xchg
cmpsb
fistps
rclb
in
add
mov
pop
outsb
mov
add
aad
out
xchg
add
push
xor
push
add
in
imul
cmp
stc
dec
es
dec
adcb
shl
ja
rorb
loope
ss
sub
add
push
ss
pop
jne
hlt
iret
push
lahf
inc
and
xor
notb
icebp
cli
jle
xlat
lods
loop
aad
jg
es
test
ja
es
enter
js
lcall
fwait
push
sub
push
fisubl
xchg
roll
jnp
adc
les
into
xor
das
mov
arpl
xchg
clc
cmp
lds
sarb
xorl
jo
ja
adc
or
push
or
sbb
mov
test
mov
mov
ds
pop
lock
pop
mov
mov
je
add
pop
repnz
roll
movsl
xchg
and
sbb
test
insl
xchg
mov
xchg
ja
push
add
out
xchg
stos
cld
pop
adc
push
mov
sarl
push
cwtl
rorb
loopne
push
das
adc
outsl
inc
xor
ja
popf
movsb
insl
pop
shrb
jle
arpl
adc
je
movsl
outsb
cmpsb
jne
fnstsw
inc
jg
test
int
movsb
test
push
lock
aad
lahf
or
mov
repz
adc
cmp
and
jge
dec
sub
andb
xor
out
pop
lret
mov
xor
pop
sub
and
popf
jno
push
test
jbe
cmpsl
insb
cmc
clc
pop
hlt
fmul
scas
in
jns
or
inc
aaa
adc
push
std
into
adc
mov
cmp
jbe
add
dec
aad
pushf
jl
and
add
jne
rolb
dec
mov
cltd
ljmp
jbe
cmc
mov
test
js
push
into
jo
sti
jg
mov
push
fwait
sbb
in
lods
rcr
push
inc
mov
adc
addr16
pop
push
adc
rolb
sub
mov
sbb
mov
cs
sbb
jmp
adcl
jbe
test
sub
stc
in
mov
or
aad
or
pop
gs
jmp
add
aad
or
popf
sbb
out
scas
cmpb
mov
pop
out
pop
popa
mov
mov
sbb
xchg
sub
cltd
mov
lret
arpl
hlt
sub
jb
imul
cmc
cmc
sbb
cmp
sti
inc
xor
jp
insb
jmp
push
xchg
faddl
das
ficoms
bound
std
test
pop
jnp
jo
mov
push
jns
adc
hlt
popf
fnsave
xchg
dec
push
sbb
mov
cmpsl
mov
cmp
les
js
inc
cmpsl
dec
mov
sub
mov
bound
scas
mov
dec
mov
sar
mov
xor
movsl
jmp
xchg
mov
mov
rcrl
fildll
xor
gs
fs
lret
std
loop
mov
jno
cs
mov
jno
lret
push
lahf
dec
inc
cs
cmpsb
shrb
lds
loope
inc
push
roll
js
outsb
push
xor
pop
add
insl
sbb
add
cld
push
in
mov
mov
shll
mov
mov
movsl
xor
lock
dec
jp
int
repnz
mov
xlat
and
ret
dec
sarl
sbb
xchg
pushf
cmpsl
scas
int
lds
in
dec
enter
cmpsl
and
cwtl
std
mov
mov
in
stos
and
xchg
loope
push
inc
shrl
sub
push
iret
pop
dec
adc
rcrl
pop
pop
loop
filds
adc
xchg
add
mov
pop
addr16
out
and
mov
loopne
pop
movntps
movsl
mov
repnz
lods
fbstp
out
fldcw
clc
add
cmp
popf
jae
repnz
shlb
adc
movb
test
shrb
pop
xchg
cwtl
push
lods
fwait
lret
fs
cld
pmullw
outsl
gs
dec
mov
movsb
ss
mov
jg
fiadds
xchg
cmp
es
mov
ret
mov
into
xchg
mov
int
data16
aad
loop
in
cmpl
xor
iret
jecxz
leave
xor
into
int3
sbb
fimuls
push
popa
rcr
dec
imull
icebp
xchg
adc
jae
adc
jns
jp
xchg
xor
fsubp
shrb
popa
xchg
mov
cld
arpl
hlt
aas
sti
scas
sbb
pop
mov
pop
dec
inc
xor
and
jns
mov
mov
cmpsl
push
sbb
cmc
fwait
scas
jnp
mov
ret
inc
mov
sub
outsb
in
leave
and
jl
in
insb
sti
mov
aaa
mov
das
mov
push
jnp
mov
add
mov
push
and
mov
push
mov
inc
xor
cwtl
mov
cmpsl
or
or
or
and
mov
sub
fidivrl
jle
inc
fwait
rolb
mov
adc
inc
dec
xchg
sarb
cmp
xor
in
dec
adc
pop
stc
es
addr16
mov
sub
stos
lea
mov
lcall
pop
out
mov
push
cli
lcall
rcll
jg
push
sbb
data16
fwait
and
mov
shll
stos
shll
sarl
xchg
pop
mov
inc
movsl
push
sbb
and
mov
nop
inc
cltd
aad
icebp
add
scas
xor
inc
call
push
fstpl
std
lret
rolb
arpl
scas
lret
cmove
sbb
rcl
xchg
pop
xchg
outsl
pop
les
subb
pushf
lret
addl
push
mov
gs
iret
inc
jae
scas
jb
enter
loopne
lods
int
push
xchg
or
and
movsl
std
daa
andb
jmp
fsubl
and
mov
mov
jmp
in
xchg
popa
cmp
inc
xchg
add
push
movb
es
cmc
imul
push
adc
xor
jno
repz
in
movsb
mov
cmp
shrl
ret
nop
in
fisubs
and
inc
xchg
rorb
inc
push
pop
or
je
and
dec
and
scas
stos
sahf
ret
pop
int3
gs
insb
test
add
mov
enter
call
ja
outsl
push
fs
test
jo
arpl
jo
mov
sbb
popl
outsb
mov
push
rorb
lcall
insl
add
scas
sub
repz
jo
push
and
pop
adc
sbb
add
cmp
imul
xchg
test
cmpb
xchg
and
stos
sbb
in
cmp
loopne
cmp
pop
dec
leave
fucom
test
sahf
data16
push
push
mov
loop
lods
xchg
jle
jne
push
pop
sarb
jp
pop
sarl
aad
inc
lret
adc
lret
vrcpps
jp
mov
rol
stc
aaa
shll
xchg
adc
adc
loop
in
push
rcl
fnstsw
in
cld
mulb
imul
push
cmp
cmpsl
push
dec
push
jle
mov
cmpsb
inc
das
popf
iret
or
jns
leave
int3
jo
and
sarl
mov
aam
dec
jno
and
shlb
push
int3
cmpsb
inc
mov
jecxz
cmp
jnp
add
pop
out
push
and
push
inc
in
shlb
adc
es
xchg
mov
and
jg
faddl
bswap
movsl
lods
xchg
mov
scas
add
inc
hlt
stos
rcl
loopne
lcall
sub
and
mov
xchg
and
out
ss
lds
arpl
sub
mov
test
add
xchg
jno
push
pop
arpl
adc
pop
sbb
pushf
mov
insl
insb
or
push
dec
mov
mov
or
push
inc
pop
scas
fstl
loope
fwait
rcll
mov
mov
stc
cli
sbb
mov
rolb
cli
cltd
jge
fcompl
mov
dec
stos
rcll
inc
pop
xor
or
cmp
jns
mov
push
stc
xchg
ret
loop
add
lds
add
cmpsb
outsb
and
mov
add
dec
xchg
xor
push
fwait
lods
hlt
pop
sbb
mov
ret
mov
ds
movsl
push
sti
leave
insl
fidivs
fs
and
mov
push
xchg
lcall
sub
xchg
push
nop
aaa
cmp
push
sub
push
pushf
add
ja
mov
mov
and
movsl
mov
cltd
test
inc
jnp
or
jnp
adc
mov
cmp
testb
movsl
cld
mov
push
or
mov
xchg
pushf
or
imul
add
mov
cs
mov
leave
dec
mov
pop
sbbl
xor
sahf
and
cmc
loope
add
dec
cmp
test
lock
filds
xchg
mov
aam
add
loopne
out
pop
push
adc
call
ds
adc
push
clc
jg
adc
shll
xchg
shl
cs
aam
je
fs
inc
das
sub
mov
pop
pop
mov
clc
mov
sarl
xorl
dec
push
add
adc
jns
or
jl
jae
fisttps
cmpsl
rcll
mov
push
cmp
jo
and
or
adc
leave
push
stos
fnstenv
pushfw
xor
icebp
xchg
add
adc
fists
fdivl
jl
comiss
int3
pop
call
rclb
xchg
mov
xor
push
and
jne
ljmp
adc
scas
popa
sbb
add
loopne
movsl
shrl
sub
mov
cltd
xchg
or
repz
adc
jne
insb
hlt
mov
shlb
or
jnp
pop
dec
or
mov
push
jl
jne
imul
ret
and
push
imul
mov
or
jle
ljmp
dec
fistl
sbb
ss
dec
or
inc
pusha
add
cmp
into
bound
dec
sarb
xor
inc
xor
jb
mov
pop
cld
dec
pop
mov
push
push
lahf
sub
mov
pop
mov
out
mov
push
movsl
pop
cmpsl
jb
int3
mov
out
pop
pop
xchg
in
mov
cmpsl
jnp
orb
adc
xor
rclb
aas
mov
mov
pop
in
arpl
add
aam
jno
mov
icebp
frstor
push
aad
sbb
lcall
scas
je
adc
addl
mov
repnz
push
aas
dec
cltd
mov
inc
jb
inc
gs
fistpll
jp
mov
dec
inc
rcr
pop
xor
mov
mov
jecxz
mov
les
xor
jp
neg
pop
lock
push
es
inc
pop
aas
cmp
test
or
pop
xchg
mov
arpl
jg
shrb
adc
loopne
aaa
repz
mov
and
or
fstpl
mov
js
lretw
mov
cmpsl
inc
pop
rorb
add
dec
xchg
push
cmp
mov
fistpll
orb
adc
xor
dec
jecxz
and
imul
sbb
push
push
mov
dec
imul
out
lods
test
push
mov
jae
mov
jae
rep
adc
and
xor
push
adc
cmc
xchg
push
outsl
jl
pushf
add
xor
mov
pop
push
add
mov
mov
aam
add
pop
and
rcr
pop
stos
hlt
test
je
add
cmp
xchg
popa
roll
jno
or
jae
test
divb
jne
sub
sub
sbb
scas
push
pop
sbb
ss
lcall
lret
inc
test
lsl
ret
outsb
mov
or
setg
push
pusha
push
loop
add
loopne
aam
or
into
dec
sub
or
xor
popa
out
add
enter
je
inc
sbbl
inc
fcmovnu
sbb
daa
loopne
mov
xchg
lahf
cmp
pop
mov
jg
mov
ljmp
loopne
daa
mov
xchg
out
push
inc
push
adc
mov
and
lods
and
lahf
mov
stc
jb
aaa
cmp
cli
lods
xorb
mov
xor
shl
fmul
mov
xchg
add
mov
mov
jne
fcomps
inc
or
pop
popa
cmp
pop
andl
xchg
sbb
pop
in
pop
gs
inc
stc
sub
dec
add
adc
mov
xor
inc
insb
in
pushf
mov
lods
dec
jg
inc
cmp
mov
or
jl
jnp
or
lcall
icebp
movsl
sub
cmp
sub
adc
ljmp
mov
push
add
push
pop
into
or
mov
or
xchg
fs
inc
ljmp
and
add
movsl
and
pop
in
shr
jne
sub
shr
movsl
aas
sub
mov
daa
hlt
jno
andl
sti
pop
or
stos
mov
popf
xor
mov
divb
mov
mov
mov
insb
mov
pop
loopne
xchg
push
xor
sub
adc
push
cmpsb
pop
add
lret
mov
out
push
ret
pusha
sbb
shlb
pop
push
mov
mov
in
xchg
pop
mov
stos
or
or
je
dec
pop
insb
or
inc
sbb
mov
dec
dec
nop
iret
push
jae
mov
es
cmp
pop
mov
push
in
loop
into
imul
aam
xor
shl
dec
into
stos
ja
xchg
es
and
lcall
loope
cmp
outsl
mov
mov
pop
jmp
cmp
add
cli
xchg
mov
test
xchg
mov
faddp
cmp
push
cltd
jp
jns
xorb
insb
push
orb
and
ret
std
sahf
nop
outsb
outsb
notl
ja
mov
and
jb
ljmp
jnp
leave
fadds
test
cltd
jmp
cwtl
out
push
jecxz
popa
push
outsb
pop
push
cmp
std
cmp
xor
jb
or
xor
and
push
mov
mov
in
xchg
pop
mov
mov
adc
hlt
lret
adc
sahf
cmp
je
mov
and
xchg
iret
push
jae
push
jne
stos
lods
stc
pop
xor
test
and
jg
mov
sub
cmpsl
adc
pmaxsw
ret
adc
ret
dec
push
std
mov
imul
loop
loope
cmpl
jo
loopne
decb
jno
faddl
frstor
mov
out
daa
ljmp
cmpsb
xchg
dec
mov
xorb
add
jns
stc
sub
sub
xchg
mov
sbb
mov
repnz
xchg
mov
jbe
sbb
xchg
fs
jno
adcl
sbb
subl
in
gs
adc
add
in
mov
mov
mov
push
adc
dec
jge
pop
lret
mov
out
push
push
sub
mov
imul
xchg
mov
and
cltd
pop
addr16
adc
ljmp
ret
outsl
cmp
or
out
cwtl
mov
js
shlb
jnp
xchg
pop
aas
subl
pop
arpl
ret
push
mov
daa
inc
xchg
imul
mov
cmpsl
mov
insb
test
xor
ret
xchg
xor
sub
and
add
pop
mov
mov
cmp
pop
xor
inc
ret
fidivrl
pop
cmp
push
cwtl
pop
inc
cmp
push
xchg
xchg
sub
or
mov
ret
xorb
jns
test
aam
cmp
add
xor
sbb
push
and
hlt
aam
std
js
lret
add
pushf
test
mov
jns
sbb
ds
mov
rclb
push
sbb
dec
inc
xchg
dec
or
xor
adc
jnp
ret
sub
adc
add
rcll
shrl
in
add
out
mov
xorl
jge
dec
mov
into
push
out
pop
or
mull
pop
arpl
lock
dec
rcll
mov
push
mov
lods
sub
adc
add
mov
jnp
xchg
jge
cmp
repnz
in
das
xor
std
mov
cmpsb
jge
lret
jne
ror
mov
jmp
fidivrs
lds
adc
sbb
call
repz
mov
icebp
outsb
push
cmp
xchg
add
pop
sti
in
inc
es
jge
jo
mov
out
mov
add
push
or
ret
cmp
or
mov
rol
mov
data16
pop
push
lods
fnstcw
fwait
shll
out
xchg
lcall
lods
mov
sub
jp
jbe
clc
jge
push
cs
add
jns
jbe
int3
mov
insb
xlat
popa
dec
movsl
mov
stos
mov
in
mov
fcoms
ds
movsl
jl
rorl
mov
int
jns
cmp
dec
mov
sbb
daa
into
je
iret
add
sbb
arpl
popa
push
or
add
cmp
jecxz
mov
sbb
mov
pop
sub
jecxz
jb
sub
and
sbb
push
rcrb
loop
fistpll
jbe
ret
mov
out
xor
mov
and
lock
aaa
adc
clc
into
pop
xlat
xchg
sub
loop,pn
scas
sub
scas
xor
adc
sub
leave
sti
adc
xchg
popa
popf
addr16
dec
std
outsl
sbbb
inc
cmp
arpl
out
insl
popa
push
add
inc
popf
pop
push
dec
push
pop
stos
adc
jo
into
jno
popa
jo
pop
pinsrw
or
or
int3
mov
ja
sbb
and
sub
pop
nop
adc
sti
loop
fbld
add
loop
out
mov
jb
bound
out
push
popf
push
out
cmpsb
in
test
pop
outsb
fidivrl
pop
and
sub
jge
pop
mov
fwait
pop
ss
mov
stc
push
jo
cmp
pop
or
xchg
cwtl
insb
js
cmp
test
les
and
aam
cmp
mov
mov
aad
pinsrw
in
cmp
int
pushl
leave
shlb
jo
pop
repz
pop
test
xor
adc
jecxz
jmp
mov
add
in
push
pop
aad
jmp
iret
dec
iret
call
fidivrl
mov
cmc
dec
push
loop
dec
addr16
xchg
pop
sahf
out
test
movsb
arpl
cli
and
or
jne
push
and
sbb
das
xchg
pop
idivl
sbb
call
push
fdivl
push
mov
inc
xor
loopne
jmp
in
mov
icebp
cmp
popf
mov
adc
or
test
stc
arpl
arpl
lret
push
andl
stc
jg
push
ret
hlt
lods
cld
out
out
ds
bswap
insb
push
inc
mov
cmp
aad
icebp
andb
inc
and
or
aad
jae
imul
inc
movsb
mov
xchg
inc
inc
add
xor
mov
mov
out
mov
mov
xchg
and
xchg
mov
and
cmpb
pop
iret
xchg
adc
cwtl
and
hlt
xor
pop
sub
lahf
lret
adc
sahf
lret
test
push
cmp
jnp
jne
cmc
std
add
and
xor
mov
clc
movsb
mov
das
sub
leave
pop
xchg
lcall
lds
ds
jnp
dec
pop
scas
push
lods
pop
shll
push
fwait
or
call
insl
scas
scas
mov
inc
and
outsb
sbb
and
fidivrs
test
cwtl
subl
pop
or
and
cmp
adc
push
insb
pop
jecxz
fwait
push
cmpsl
out
andb
mov
jecxz
push
rol
and
addr16
scas
pushf
mov
mov
sarb
mov
dec
inc
xor
or
in
loop
ds
mov
mov
cwtl
xchg
lock
mov
testl
mov
xor
push
sbb
xor
pop
xchg
in
jo
das
fwait
and
jns
sarb
scas
inc
loope
push
mov
adc
das
fcmovnbe
or
xor
shr
push
sub
jne
adc
gs
daa
inc
js
cmp
pop
jl
test
jp
cmp
sti
outsb
mov
add
and
fs
inc
adc
add
xchg
enter
jbe
das
inc
int3
inc
jb
mov
adc
inc
hlt
add
notl
jmp
lock
sbb
mov
inc
sbb
mov
xchg
mov
jle
in
xor
out
inc
repz
dec
mov
mov
fcom
sub
in
xor
leave
mov
sti
jmp
popa
push
mov
outsl
xchg
cmp
pop
mov
or
sar
dec
stos
js
pop
ror
add
mov
jne
push
xchg
lcall
or
cmp
jge
cmp
xchg
push
and
jmp
fistps
cmpsl
or
fistpll
ret
jb
sbb
mov
sar
inc
mov
insl
dec
popa
fadds
mov
fcoml
jb
pop
dec
adc
push
sub
pop
dec
shll
lds
push
stc
ss
imul
push
nop
roll
outsb
mov
mov
rcr
xor
test
adc
jecxz
fwait
test
ja
das
xchg
ret
dec
mov
push
and
jae
int
mov
dec
cltd
mov
jl
std
test
push
push
xor
add
xlat
leave
inc
sub
cmp
jne
pop
testb
mov
dec
fbstp
mov
sub
or
out
fsubrl
and
loopne
test
mov
sub
xchg
lods
xor
cli
inc
adc
arpl
pop
push
jb
jle
adc
rcrl
dec
notb
push
xor
adc
sbb
push
pop
js
dec
sarl
lret
add
lcall
data16
xchg
out
sbbb
iret
sti
bnd
mov
mov
jg
cmc
div
icebp
sbb
push
mov
pop
sub
mov
lock
test
gs
pop
push
lock
sahf
outsb
xor
sahf
dec
add
loope
sub
js
rcrb
xor
imul
push
icebp
sub
dec
in
sbb
out
lcall
xor
add
ret
movsb
xor
lahf
cli
out
push
mov
pop
sub
mov
mov
hlt
cmp
sbb
pop
jbe
int3
hlt
arpl
ljmp
punpckhbw
mov
andb
mov
into
es
movsl
out
popa
fwait
mov
jo
jecxz,pn
daa
in
mov
aad
roll
jo
add
call
gs
dec
sbb
jecxz
mov
pop
fcompl
sub
pop
push
ret
imull
imul
xchg
sbb
aas
ficompl
aam
push
dec
scas
lret
pop
loopne
cmpsl
dec
orb
repz
dec
dec
push
ret
scas
lcall
xchg
aas
scas
xchg
push
fidivs
setp
shrb
popa
ljmp
cmp
xor
push
fwait
xor
adc
addr16
add
int3
popf
add
add
sub
mov
fsubs
sub
push
scas
test
orb
cld
lretw
xor
xor
lret
std
cmp
mov
mov
in
stc
test
mov
mov
fmull
add
test
sarl
gs
xchg
mov
test
sahf
or
lea
das
call
rcll
cmp
aam
addr16
int3
push
out
jne
xchg
cli
mov
outsb
in
xchg
int3
das
lret
xlat
repz
loopne
ror
push
pop
pop
lcall
cwtl
cli
rcll
stos
enter
sub
leave
mov
movsl
push
and
scas
shrl
ret
ret
xchg
sar
sub
stc
xor
ficoms
lret
rcrb
add
int
xlat
outsl
in
cli
call
scas
inc
adc
fwait
bound
in
imul
test
test
cmp
imul
shlb
xlat
mov
addr16
xchg
out
pusha
push
xor
sub
fmulp
ret
daa
les
lret
ljmp
or
mov
inc
mov
inc
cld
gs
cld
into
adc
call
lahf
fsubs
test
push
xor
mov
xchg
cli
mov
jnp
clc
push
fcoml
in
sahf
sbb
in
cmp
push
gs
add
fidivrl
or
icebp
xlat
gs
lds
icebp
adc
dec
into
cli
stos
jbe
ljmp
or
fdivrs
stc
inc
negb
mov
lret
in
icebp
jbe
pusha
and
mov
ds
std
test
ffreep
cmc
mov
mov
cwtl
pop
pop
mov
sbb
jg
call
jne
xchg
loopne
addr16
and
outsl
mov
push
loopne
aad
in
lret
push
xchg
mov
movsl
imul
je
add
aad
and
mov
mov
xchg
hlt
aas
cltd
scas
enter
jne
mov
pop
cmp
inc
push
les
repz
out
xlat
testb
out
pushf
adc
lea
sub
mov
imul
into
ja
fwait
das
cmp
in
xchg
daa
jge
jne
outsl
jecxz
out
xchg
js
adc
xchg
int
movsl
jp
xchg
sub
sbbl
mov
cmc
decl
and
pop
lret
push
fisubrl
pop
mov
movsb
dec
mov
mov
push
pop
lahf
inc
fimull
pop
jecxz
repz
fxtract
in
test
inc
pop
lcall
sub
lcall
aad
daa
int
xchg
or
lcall
test
cmc
into
mov
xor
in
mov
mov
pop
out
push
push
mov
pop
ret
lret
in
leave
mov
mov
cmc
into
pop
or
stos
test
ss
xchg
inc
xor
mov
fscale
cmp
lods
inc
push
addr16
outsb
fimuls
or
sbb
lock
cmpsl
enter
rorl
nop
cmp
fwait
cmp
adc
add
add
out
in
add
inc
adc
xchg
push
std
movsb
mov
xor
jg
es
arpl
mov
int3
hlt
mov
push
mov
aam
adc
jmp
gs
sbb
and
inc
mov
xchg
call
and
sbb
enter
mov
lds
dec
test
sub
and
xchg
jle
loope
jle
pop
sub
enter
adc
xlat
xor
icebp
test
aam
shll
jnp
pusha
jle
adc
addr16
or
mov
sti
adc
xor
int3
mov
sbb
rcrl
aam
fs
pop
jno
xchg
jge
mov
and
icebp
outsl
ds
pop
test
mov
int3
scas
test
and
pop
es
fmul
cmp
cwtl
or
bound
jl
repnz
add
xor
jecxz
jae
repnz
xchg
cld
sub
repz
scas
pop
adc
mov
arpl
add
push
lea
aad
fidivrl
xchg
lahf
mov
push
cmp
xor
lods
test
loop
sbb
sbb
xor
orb
push
jnp
in
cmp
les
mov
popf
data16
inc
add
subl
inc
push
sti
jne
pop
mov
mov
sub
push
sbb
xorps
mov
sar
pop
les
negl
push
cmp
aad
sarl
fcompl
ret
pop
stc
es
or
shl
aam
mov
lret
movsl
inc
xchg
and
add
xor
pop
and
pop
and
jae
stos
cmpsb
aad
cmp
in
cmp
data16
push
insl
test
mov
and
and
xor
loop
neg
dec
push
dec
mov
mov
scas
sub
notb
mov
inc
aam
mov
in
dec
inc
xchg
jp
push
out
mov
push
lock
inc
push
clc
ficomps
shll
js
push
xlat
scas
data16
lods
jmp
cmp
pop
mov
jnp
or
jp
mov
test
test
sbb
mov
and
mov
sbb
test
cld
shl
bound
mov
cmp
mov
inc
lods
cmpsb
or
mov
dec
cld
pusha
xchg
or
mov
rol
test
xor
mov
sti
pusha
sti
lcall
mov
rorb
mov
out
loopne
leave
cld
dec
scas
aas
shrb
fwait
push
sahf
clc
cmp
sub
hlt
fdivrl
fists
lods
pop
jmp
jno
aad
ficoms
mov
cmp
insl
cmp
sbb
cmp
jae
push
in
daa
mov
dec
mov
mov
out
rclb
push
aam
decl
dec
sbb
or
fnstcw
inc
jmp
pop
sub
mov
ds
iret
shlb
pusha
sub
pop
jbe
ds
adc
mov
mov
out
and
cs
lret
fs
xor
mov
test
insl
dec
out
mull
and
inc
jl
movsb
or
mov
dec
xchg
aad
fsubl
xchg
stos
mov
pop
mov
jo
stos
mov
lahf
jne
push
mov
cltd
aaa
je
lret
sbb
mov
push
in
pop
movsb
das
fcoms
shlb
lods
mov
mov
xchg
lahf
xor
sbb
dec
adc
jl
iret
shll
aaa
movsl
sar
sarb
push
cli
and
clc
outsl
jae
imul
daa
mov
inc
sbb
pop
icebp
push
insl
mov
xor
jge
or
xchg
fildl
push
in
ret
lea
imul
into
mov
sbb
mov
adc
in
orl
adc
jmp
and
mov
pop
out
jb
jbe
push
data16
or
inc
pop
xor
sub
bound
and
push
cltd
mov
repz
cmp
enter
push
jbe
pop
push
cs
pop
jp
dec
cld
and
mov
mov
ja
xchg
add
test
dec
jl
cmc
sbb
les
imul
and
stos
dec
cmp
stc
xchg
mov
es
rcrb
les
xchg
mov
in
pop
and
and
or
or
push
int3
xchg
xlat
sbb
sahf
pop
rolb
add
outsl
xchg
fstl
xchg
out
sti
testb
mov
imul
mov
cli
test
add
inc
jae
jmp
dec
jns
cs
cmpsl
sub
pop
fwait
mov
fwait
ja
test
pop
cli
adc
mov
jb
movsb
xor
shll
adc
sahf
popa
sub
jns
jo
cmp
mov
push
fs
sarl
ss
addr16
cmc
cmp
flds
and
dec
in
cld
daa
daa
movl
jp
mov
pop
sbb
fistl
cmpsl
or
scas
lods
adc
testl
xchg
mov
dec
inc
scas
xchg
es
aaa
or
or
loope
xor
loop
js
push
sub
leave
add
add
fnsave
lahf
loop
scas
xchg
or
arpl
xor
jmp
mov
xchg
push
ja
mov
lods
test
stos
scas
dec
outsb
mov
pop
pop
dec
sbb
movsb
bound
insb
adc
test
cmc
xor
mov
into
outsl
adc
jnp
adc
imul
inc
dec
mov
ja
je
ret
inc
movb
pop
and
jo
and
pop
inc
sarl
mov
cmp
gs
gs
push
arpl
stc
or
shl
repz
and
sbbb
pop
xor
jne
repnz
sbb
sub
push
call
adc
test
aam
inc
xor
inc
rolb
pop
and
sbb
adc
loope
add
lods
adc
pop
subl
xor
sbb
repz
jecxz
jb
xchg
push
jb
push
pop
cmp
xor
push
jbe
je
mov
cltd
rcrb
test
cld
push
popf
adc
movsl
mov
xor
jns
mov
out
call
cmpsl
jecxz
and
jg
ret
stos
out
cmpsl
push
mov
insl
int3
pop
cs
or
cld
xchg
sbb
leave
hlt
sar
push
cmovl
push
xor
lock
std
arpl
in
lds
movsl
imul
jno
fisubrs
sbb
mov
in
mov
movsl
jg
xor
pushl
in
or
inc
adc
mov
sbb
cs
pop
mov
roll
test
test
pop
push
mov
pushf
lcall
push
shll
int3
icebp
mov
outsl
xlat
mov
sub
cmp
pop
in
xchg
xchg
ljmp
ss
xchg
or
add
cltd
loope
lahf
xlat
andb
int
cmp
es
fiaddl
mov
adc
add
xchg
pop
shr
push
xor
cmpsl
fs
and
mov
test
std
repnz
push
mov
lcall
dec
mov
adc
mov
movsl
repz
push
out
xchg
aaa
in
pop
leave
aam
adc
jo
clc
addl
sub
ret
dec
stos
inc
add
test
cmp
jecxz
loopne
aas
cmp
push
jne
lcall
mov
in
and
aaa
sbb
sbb
ret
aaa
xor
fst
mov
sahf
cmp
in
cmp
leave
push
or
leave
push
pop
dec
aas
fbstp
cmc
pop
aas
xchg
xchg
mov
adc
iret
lods
xchg
out
ret
movsl
xor
pop
pop
outsl
sahf
lock
hlt
dec
mov
fbstp
add
cmp
mov
lahf
cmpsb
cmp
fwait
aam
mov
xchg
nop
inc
sti
ljmp
cmp
jbe
imul
pop
mov
lock
adc
outsb
fadds
jg
inc
sbb
scas
outsl
rorl
addb
inc
icebp
lahf
mov
cwtl
push
cmp
sub
rorb
imul
nop
sub
outsl
push
lret
daa
stc
mov
mov
sarl
dec
jg
mov
leave
jp
jnp
or
popf
aam
rol
xchg
xor
call
popl
push
or
jl
inc
cmp
push
popf
cmp
in
aaa
test
add
sahf
xor
pusha
lock
xchg
xor
sub
pushf
or
mov
xchg
dec
jge
lcall
xor
cwtl
xchg
sub
mov
or
or
bound
cwtl
repnz
add
dec
outsl
mov
or
cmpsl
inc
shll
add
dec
inc
inc
adc
shll
insb
ss
or
sbb
push
je
or
sbb
popa
lret
adc
repnz
cwtl
pusha
ss
dec
add
jge
sub
pop
jns
loop
adc
out
push
sub
dec
sub
arpl
cmp
push
mov
flds
pusha
jo
mov
inc
roll
push
dec
in
imul
xchg
jp
cmpsl
aas
daa
lcall
dec
cmp
cmp
push
xor
stos
cmp
dec
and
lcall
jae
rorb
inc
adc
push
inc
fs
ds
mov
insb
aas
rcll
xor
jb
sub
xchg
loop
shlb
cwtl
pop
pop
and
fnstsw
and
adc
adc
mov
rcrb
cwtl
fs
mov
dec
pushf
std
push
sti
in
lock
add
adc
loope
sbb
bound
mov
add
mov
lds
sbb
sub
pusha
xchg
cmpsb
dec
popf
or
daa
ja
jle
cmpsl
aas
aas
add
pusha
rolb
or
cltd
pop
int
repz
push
pop
mov
sbb
and
jg
inc
sub
fadds
imul
push
nop
pop
dec
pop
loope
jns
decb
outsl
mov
fs
in
or
fldz
pop
xchg
loopne
fcomip
pop
out
sub
popa
fwait
rorl
inc
aam
popf
lds
pop
jno
pop
in
aam
imul
pusha
sub
jmp
inc
ljmp
sbb
movsl
out
imull
fiadds
or
push
and
jge
and
out
sub
repnz
sahf
or
push
push
pop
mov
test
xchg
loopne
enter
jle
bound
dec
inc
rolb
shrl
jmp
outsb
push
xor
cltd
fcoml
lods
jge
adc
adc
daa
xchg
test
push
mov
pop
pop
lea
je
outsl
lds
out
push
adc
jmp
imul
mov
fildl
and
mov
andl
out
lea
xchg
pop
bound
les
sbb
lds
je
addr16
and
mov
xchg
fwait
pop
push
imul
cmp
adc
mov
les
cmp
push
fcmovne
mov
movsb
fst
hlt
xor
xor
lock
loop
fwait
push
mov
and
xor
cmp
dec
mov
sub
xchg
outsl
aas
cli
daa
push
lds
shrb
pusha
dec
outsl
xorb
adc
out
fisttpll
je
ror
xor
inc
loopne
mov
and
jmp
popf
and
jle
adc
pop
mov
or
cwtl
push
mov
data16
adc
pop
push
arpl
cld
test
nop
inc
test
mov
mov
jns
push
test
mov
jne,pn
ret
fisubs
and
add
jge
xchg
dec
fadds
cmp
push
into
jno
mov
iret
pop
rolb
cmpsl
mov
cli
mov
outsb
outsl
in
in
and
add
in
fisubl
popf
movsb
or
dec
out
fisttpl
dec
aad
sub
rcr
inc
mov
test
lret
scas
mov
pop
mov
std
jmp
and
pop
mov
pop
add
fs
xor
sbb
pop
cmp
sub
dec
adc
jo
adc
mov
addb
rcrb
add
push
jnp
shl
insb
mov
xchg
xchg
lret
inc
cwtl
repnz
es
and
ljmp
insb
sub
es
testl
jbe
mov
cmp
cmp
out
sahf
mov
mov
fcom
and
in
mov
push
popa
imul
fildl
mov
sub
repz
mov
iret
dec
xchg
invd
add
lods
xchg
lds
xor
jecxz
stc
fistpll
movsl
fldl
push
dec
sub
dec
and
jbe
lcall
das
dec
fnsave
in
mov
incb
cmpsl
cltd
cmp
jb
mov
or
xchg
pop
push
dec
out
sbb
adc
loope
subl
mov
cmc
js
nop
ljmp
ficoml
arpl
imul
lods
gs
xchg
mov
insl
pushf
xchg
push
mov
and
push
inc
fiadds
sbb
faddl
mov
and
lcall
daa
jmp
inc
idivb
cmp
dec
mov
pop
add
cmp
mov
out
test
les
inc
fnop
and
ljmp
jp
test
out
push
outsb
ja
add
pop
cmp
jg
add
pop
dec
mov
adc
cmpsb
push
add
insl
jb
xor
in
das
xchg
dec
xlat
push
das
movsl
fsubs
mov
xchg
or
shr
sub
int
cmp
mov
icebp
sbb
fs
cmpsl
arpl
jmp
cwtl
inc
sub
es
adc
nop
cmp
fs
testb
clc
mov
fs
push
inc
aad
ja
dec
pusha
icebp
jecxz
cld
pop
or
mov
pop
push
cpuid
mov
jg
enter
xor
fsubrp
push
lcall
xchg
mov
sbb
dec
sbb
xchg
pop
mov
dec
xchg
sub
pop
fcomp
sbb
xchg
jle
inc
cmp
sbb
mov
jp
add
iret
xchg
jnp
adc
or
dec
fsubl
movsb
jmp
cmp
mov
filds
or
ja
pop
or
lds
mov
sbbl
xor
lret
pusha
in
mov
mov
ds
push
js
mov
movsb
dec
xor
sub
ret
push
cmpsl
in
fldcw
mov
in
out
xchg
cmpsb
sti
ret
mov
add
cmp
lods
imul
in
in
jp
test
outsl
repz
pop
cmp
fcmovb
repz
adc
add
movsb
arpl
in
in
push
lea
imul
testb
cmp
jge
push
cmp
sub
int3
mov
leave
xchg
daa
mov
mov
add
popa
sbb
icebp
jle
fists
xchg
jb
popf
mov
mov
loopne
mov
xor
out
add
scas
inc
adc
jb
mov
add
int
in
loop
cmp
aad
add
call
inc
fldt
add
scas
mov
fcoms
xchg
icebp
pop
lret
and
xchg
cmp
adc
add
pop
cmp
test
and
fwait
and
movsl
jb
push
xor
idivl
shlb
add
and
mov
icebp
aam
outsb
mov
mov
pop
xor
inc
js
mov
ret
jmp
arpl
pop
xor
xor
enter
xlat
movsb
or
xor
cmp
and
push
mov
push
sahf
negl
cmp
jl
push
sbb
arpl
push
cmpsl
out
cmpsl
cwtl
mov
push
dec
rcrl
adc
lret
pop
push
mov
dec
loope
andl
sub
add
sub
fildll
sub
addl
loopne
js
enter
ss
rcr
lods
insb
push
xor
loope
in
fadds
push
cwtl
and
or
fdivrl
dec
lea
and
bound
sahf
inc
fcmovnbe
in
mov
sbb
dec
test
sbb
packsswb
fcoml
scas
mov
mov
sbb
and
repnz
xchg
lahf
mov
jmp
and
mov
lock
or
add
cld
jmp
jg
pop
fwait
jno
std
aaa
cli
je
stos
test
mov
or
or
out
jle
fnstenv
notb
ljmp
fsubrl
imul
add
add
push
cmpsl
pop
movsb
cld
ret
les
shlb
rcll
xchg
inc
fcmovu
andb
out
xchg
fldcw
push
jl
inc
out
push
sub
adc
push
stos
dec
jae
add
inc
push
dec
mov
push
outsl
cmp
std
mov
mov
push
push
jmp
xchg
movsl
jo
cmp
add
pop
lock
leave
cmpsl
adc
inc
outsl
add
and
mov
scas
lahf
pop
aas
std
movsb
shrb
loop
and
sub
add
xchg
xchg
xchg
in
lret
scas
cmp
jmp
add
sub
add
jmp
or
pop
out
mov
lea
sbb
cmp
ret
in
std
cmc
std
scas
or
shll
push
test
xchg
lock
ss
add
pushf
xchg
fs
loopne
pop
mov
imul
cmp
rolb
vandps
dec
int
sub
aad
mull
and
gs
pop
out
inc
push
mov
and
popa
sbb
test
sub
dec
cmpsb
sub
orl
mov
aad
sub
push
cmp
xor
ret
insl
mov
cmp
arpl
push
lret
and
push
cmc
or
mov
mov
cmp
rorl
and
out
jb
jmp
aam
mov
adc
imul
jb
pop
lahf
hlt
mov
or
add
mov
mov
pop
fsub
in
cmpsl
aam
pop
inc
mov
dec
js
out
bound
add
push
and
xor
out
jno
mov
jb
repz
call
inc
add
or
mov
scas
inc
loopne
jnp
stc
sub
mov
xchg
push
and
adc
dec
mov
lods
scas
ficoms
inc
sub
rorl
sub
divl
sub
shlb
push
aad
in
push
mov
lock
mov
lock
pop
aaa
notl
mov
fidivrl
lcall
aaa
enter
ljmp
sub
fiaddl
cltd
sub
push
mov
jae,pn
sub
push
into
sbb
ret
arpl
fs
inc
scas
and
cs
jnp
cwtl
xchg
ret
mov
negl
dec
movsb
push
aaa
in
inc
sub
adc
mov
push
sub
mov
adc
push
jns
xchg
sub
out
jmp
push
into
pop
fdivrp
fwait
sbb
fnsave
ret
sbb
js
icebp
orb
push
or
pushf
out
sti
push
add
and
jo
mov
cmp
pusha
dec
dec
push
push
sbb
pop
repnz
stc
stc
popf
mov
rclb
inc
aas
scas
fists
mov
stc
mov
daa
int
inc
lret
pop
jle
daa
adc
insb
cmpsl
imul
jmp
sub
ss
loopne
icebp
imul
scas
dec
sbb
in
cmp
cmp
lahf
movsl
imul
xor
call
and
or
not
and
not
imul
je
or
rcrb
lods
push
or
pop
mov
lahf
ss
mov
stc
fnsave
pop
mov
mov
aas
in
mov
mov
mov
jp
test
jo
jne
mov
mov
jle
stos
popa
test
mov
mov
fisubs
xorl
xor
cmc
xor
aad
add
cmp
leave
into
loopne,pn
test
jg
lea
and
loope
push
decl
push
push
sbb
lcall
test
xchg
mov
mov
sbb
pop
mov
mov
xor
xchg
adc
jne
mov
xchg
pop
mov
adc
shl
scas
decb
ret
xor
repz
pusha
outsb
push
mov
iret
xchg
das
cs
sub
test
xorl
xacquire
xorl
jnp
in
sbb
cli
mov
xor
fidivrs
sbb
aas
xlat
add
insl
sbbb
loopne
push
pushf
lahf
mov
and
mov
jo
push
jbe
ja
sub
rol
mov
mov
push
pop
sub
push
testb
and
outsb
lea
cwtl
leave
ja
jmp
xor
mov
add
fdivrs
fsts
sbb
sarl
xchg
mov
sbb
jo
inc
push
je
xor
fprem
lods
shlb
adc
or
insb
fwait
xchg
inc
or
pop
das
jle
inc
mov
dec
mov
or
dec
movsb
loopne
mov
cmc
test
dec
scas
stos
inc
aaa
push
insl
xor
mov
adc
cs
mov
scas
insb
dec
xor
cld
cmp
insl
or
dec
or
in
adc
rcr
sbb
push
xor
xchg
hlt
shll
pop
sarl
das
fcmovnu
ss
pop
cmp
sub
xor
mov
inc
dec
and
xor
fsubrl
aad
push
addr16
rcr
scas
mov
repnz
pushf
lcall
icebp
sar
or
pop
das
dec
xor
iret
mov
xchg
mov
ret
xchg
mov
inc
dec
dec
pop
xchg
movsl
aaa
scas
rorb
push
cwtl
cmpsl
mov
rcr
test
add
icebp
mov
popf
fcoml
add
cmp
mov
lods
sbb
adc
push
in
mov
hlt
test
or
jns
mov
cmp
pop
push
in
data16
xchg
and
sbb
push
pop
das
mov
cwtl
add
test
out
sbb
aam
insl
adc
push
xchg
cmpl
pop
adcl
xchg
cmpl
mov
add
pop
jle
xchg
insl
fdivr
mov
test
xchg
mov
cmp
lea
xor
fiadds
imul
jg
stos
xor
ficomps
imul
in
das
mov
dec
jne
cs
aas
hlt
cmp
and
das
xchg
add
mov
push
pop
sarl
fs
mov
inc
adc
pop
sub
mov
jbe
xor
sbb
lret
cmc
dec
stos
mov
pop
mov
aaa
sub
daa
jl
lcall
in
sti
xor
sbb
lret
cmp
or
pop
fwait
inc
cmp
sahf
dec
add
fcmovnbe
cmp
xor
in
mov
mov
leave
pop
xor
lret
popa
xlat
leave
shl
xor
xor
sub
cmpb
sbb
push
iret
es
lds
std
data16
adc
sbb
xchg
and
mov
add
pop
mov
dec
push
mov
dec
lcall
cld
jl
mov
add
pop
testb
lds
lcall
xor
or
xchg
insl
lds
sub
sub
xchg
mov
jb
cmpl
add
out
mov
adc
cld
aaa
out
cld
and
cltd
mov
sbb
mov
pop
das
scas
dec
xor
adc
cmc
dec
and
addr16
sub
xor
movsb
pusha
cmp
cmp
cmp
xor
iret
mov
fildll
cmp
inc
ds
xlat
jecxz
into
popl
or
les
xlat
push
notl
cmp
xchg
in
sbb
and
test
mov
popf
xchg
xchg
mov
adc
jge
jecxz
out
cs
adc
cwtl
fnstenv
inc
mov
ljmp
inc
sub
ret
ss
jns
push
test
xchg
push
int
jl
or
imull
jle
imul
js
mov
sub
movsl
xchg
loope
cld
cld
das
mov
enter
cmp
stos
jne
mov
cmpb
cmp
add
mov
sti
xchg
add
or
and
imul
shrl
mov
push
xor
aad
scas
shlb
orb
xor
dec
lock
dec
sahf
sub
adc
and
pop
das
mov
sub
fadd
sub
pop
cmp
inc
xchg
test
sbb
sub
test
out
adc
gs
std
out
inc
filds
mov
insb
cli
lea
or
pop
jecxz
ret
push
sub
rcrb
push
jle
mov
sub
jns
dec
sbb
ret
dec
stc
into
cmp
int3
mov
dec
lahf
andb
rolb
ljmp
mov
popa
pusha
or
jl
cltd
pop
das
jo
adc
jae
xchg
add
push
mov
push
andb
xchg
push
inc
mov
loopne
mov
pusha
push
leave
daa
jmp
int3
adc
sbb
cmc
push
xlat
mov
add
imul
mov
pop
adc
and
cmp
in
dec
cltd
insl
stc
dec
repnz
aad
or
mov
push
pop
push
test
xor
mov
push
mov
push
push
ja
filds
sub
inc
cmpsl
add
insb
fs
jb
xchg
pop
das
loope
xor
mov
psrlw
ret
mov
cmpsl
test
sbb
mov
pop
mov
cmp
mov
insl
stos
pop
adc
inc
lods
jb
jae
inc
int3
sarb
push
mov
xchg
fwait
loop
aad
mov
sahf
std
fsubs
loop
pop
fsubrl
in
std
orb
mov
test
popf
jnp
std
lods
or
adc
add
pop
add
jp
adc
cmpsb
sub
gs
cs
jne
in
jmp
add
mov
nop
out
mov
cmp
cmp
pop
xchg
lret
popf
mov
enter
and
js
stc
or
outsb
fldt
xor
les
mov
std
sbbl
and
pop
jno
sbb
jg
test
pop
fsubrp
add
fimull
add
ja
xchg
inc
pop
scas
outsb
cltd
push
fwait
add
push
xor
in
xchg
mov
lock
add
sbb
pop
push
push
xlat
mov
test
jnp
call
adc
mov
mov
mov
sub
cmp
inc
icebp
int
mov
mov
sbb
es
or
pop
daa
fdivl
mov
inc
sub
lcall
orb
mov
dec
fbld
ret
mov
rclb
dec
cmp
or
out
outsl
inc
pop
sbb
xor
fs
mov
mov
push
in
fistpll
icebp
push
aas
jne
outsb
pop
shrl
cli
inc
pop
inc
cmp
stc
aad
loop
mov
enter
pusha
decl
xchg
xchg
imul
enter
jmp
mov
adc
jae
cmc
cmp
nop
loopne
pop
movsb
dec
enter
jle
cmp
xchg
loope
mov
lods
mov
push
mov
call
add
pop
adc
lds
movl
outsb
pop
sub
subb
lea
cmp
mov
inc
mov
std
push
cmp
scas
inc
jle
inc
cmp
dec
add
mov
xor
fidivs
push
je
xchg
jae
jne
clc
or
sbb
sbb
out
xchg
fcoms
and
cmp
lods
pop
fs
cmpsl
xchg
rol
cltd
into
mov
xor
arpl
das
rcr
out
push
out
and
mov
xlat
adc
mov
dec
jnp
fcoms
shll
push
cmp
into
dec
subl
cmp
adc
jge
push
sub
xchg
mov
hlt
mov
loopne
jecxz
and
jecxz
fidivl
pusha
or
dec
mov
cmp
or
sahf
pop
pop
fcompl
push
lods
or
movsl
in
push
cmp
xchg
jbe
jo
iret
std
lods
cltd
jg
cmp
inc
push
dec
dec
add
jno
test
repnz
fdivrp
scas
jmp
pop
int3
xlat
stos
cmp
sub
aaa
inc
testb
jmp
sbb
sbb
pop
ss
bound
jmp
jl
ljmp
nop
and
dec
lret
fs
fwait
jno
push
sub
sub
sti
stos
fldl
clc
pop
pop
add
ja
imul
insb
dec
aas
xor
mov
scas
stos
and
iret
repnz
pusha
outsl
and
push
repnz
sub
ret
cli
es
push
addl
push
mov
jno
sbb
cmp
fdivrl
add
repz
mov
inc
xchg
jecxz
push
inc
sub
das
fisttpll
or
cltd
inc
jp
inc
sub
sbb
mov
addl
add
xchg
pop
and
fadds
jne
fisttpl
pop
dec
insl
xor
out
aaa
xchg
cmp
dec
hlt
dec
mov
ja
out
mov
adc
xchg
imul
call
jno
stc
leave
inc
xchg
jp
in
mov
icebp
int
cmp
loopne
adc
mov
jmp
stc
mov
sbb
ret
and
push
das
sbb
or
cmp
sub
leave
push
int3
fdiv
int3
imul
mov
mov
and
aas
cli
popf
and
and
push
dec
sub
jg
aad
pop
bound
and
jnp
shll
lods
pop
and
repz
add
sub
loopne
mov
nop
and
cli
xlat
mov
test
fndisi(8087
push
imul
add
push
cld
addb
dec
es
lods
sbb
jge
addb
and
dec
adcl
dec
lret
mov
orl
mov
call
loopne
cmpsb
cmp
mov
stc
or
lahf
sub
add
cltd
jp
std
movsl
sub
or
pusha
mulb
adc
gs
inc
jmp
adc
pop
in
popf
fsubl
push
insb
cld
sahf
sbb
ret
fdivp
push
add
cwtl
add
inc
rclb
fstpt
ret
cmp
sbb
mov
mov
outsb
ret
mov
jmp
xchg
enter
jl
hlt
mov
int
movsl
addr16
ljmp
and
lds
sti
mov
adc
test
dec
mov
dec
mov
sub
std
add
adc
add
sahf
jge
sbb
icebp
outsb
lcall
repnz
mov
in
rorl
mov
fucom
sbb
jae
aam
mulb
sbb
and
cmp
cwtl
mov
loop
imul
xchg
pop
fdivrp
jbe
push
aam
adc
xchg
pop
add
sbb
add
dec
inc
xchg
xchg
jmp
sub
pop
hlt
lret
push
dec
imul
rclb
push
pop
out
cld
adcl
insl
jns
adc
push
sub
mov
xadd
rolb
push
flds
iret
movsl
pop
shr
push
pop
sahf
loope
popa
inc
add
mov
add
or
mov
into
lods
cli
movsb
xor
les
cld
rclb
es
sbb
push
mov
jp
xchg
mov
movzwl
fdivrl
sahf
sub
cmpsb
jns
test
add
lea
pop
ljmp
mov
out
out
dec
dec
sub
call
mov
mov
in
test
mov
fnstsw
sbb
push
cmp
fwait
mov
cmp
pop
add
sub
in
adc
daa
int3
fsts
movsl
nop
mov
inc
std
xchg
xor
sub
sub
jbe
and
fcmovnu
icebp
xchg
or
mov
push
gs
mov
dec
sub
or
loopne
xorb
stc
pop
je
mov
adc
inc
cmp
negl
outsb
mov
push
or
lds
mov
out
and
sti
addr16
add
fldt
lret
repnz
or
mov
aaa
dec
insl
jae
in
fstps
out
xchg
jno
lock
add
in
cmpsl
in
lret
arpl
pop
fwait
add
loop
aam
mov
push
movl
dec
adc
test
je
sti
mov
std
or
adc
xchg
push
cltd
pop
jmp
aaa
push
mov
dec
aam
push
inc
rclb
pop
lret
mov
jno
clc
jecxz
pop
pop
outsb
and
xor
sbb
xchg
ds
ret
in
wbinvd
xor
in
outsl
push
jp
mov
std
mov
je
and
paddd
xor
insb
int3
inc
lahf
push
es
add
das
sbb
popf
out
and
stos
push
int3
scas
dec
jne
xchg
sbb
mov
jp
loopne
ret
scas
sbb
mov
sub
xchg
imul
push
jp
mov
adc
lds
mov
mov
daa
dec
or
or
movsl
mov
in
lods
cwtd
mov
xor
jns
sub
loope
pop
loope
divb
lods
mov
inc
adc
mov
pop
subl
xor
jge
scas
adc
jmp
pop
testb
ficoms
loopne
mov
push
sub
repz
mov
dec
xchg
dec
pop
lret
mov
test
mov
xor
sbb
loop
dec
aam
xchg
push
pop
adc
push
ds
xor
ror
lahf
xor
jg
and
push
icebp
dec
xchg
std
das
adc
je
adc
mov
and
call
stos
xor
jo
fimull
pop
lea
dec
outsb
ret
xor
les
xchg
cmc
jge
and
sub
push
icebp
cmp
jg
push
ja
xor
jb
in
push
sbb
fdivrs
sbbb
out
mov
jns
push
jno
std
cmc
int3
push
stc
insb
fwait
rclb
and
or
lcall
orb
ljmp
adc
adc
push
jle
enter
mov
stos
shll
sahf
stos
sbb
int
sub
jns
mov
xchg
pop
cmc
arpl
pop
push
jl
imul
cli
out
inc
sbb
imul
lcall
gs
cmp
add
mov
div
in
dec
push
int3
xor
icebp
and
cmp
ficompl
push
call
inc
aam
jmp
or
jo
xor
shl
add
and
jp,pn
or
jnp
pop
and
xor
push
adc
xadd
push
loope
jns
je
mov
mov
arpl
imul
push
jmp
or
subl
and
dec
in
or
cmc
int3
in
dec
sub
mov
hlt
mov
add
test
popf
inc
pop
hlt
fucomi
mov
inc
sbb
mov
test
mov
mov
xchg
aas
push
pop
sub
mov
aaa
and
cli
mov
in
dec
sub
or
mov
inc
xlat
testb
push
mov
sbb
jg
nop
xor
mov
push
and
fucomip
lea
arpl
push
out
shrb
dec
into
ret
sub
stos
dec
and
lcall
aam
cmp
out
sub
jb
pop
cmp
adc
pop
fiadds
mov
lods
push
popa
leave
mov
lcall
mov
faddl
lret
shl
out
or
inc
xor
add
aas
add
call
popa
mov
jbe
xchg
add
rcrb
pusha
adc
loop
inc
pusha
or
pushf
insl
mov
lret
outsl
sahf
dec
fidivl
js
adc
adc
push
mov
cmp
push
mov
js
int3
jb
and
aad
add
fs
jnp
xor
inc
lcall
enter
aas
pandn
fpatan
gs
push
mov
jmp
adc
frstor
mov
std
jns
pop
xchg
call
in
mov
pop
xchg
xor
lret
aas
loopne
lea
sbb
stos
dec
and
fs
outsb
aad
and
in
scas
dec
js
enter
push
xor
and
lahf
popf
cmpl
mov
add
les
pusha
and
mov
inc
repz
push
mov
aad
sbb
mov
jge
shr
mov
shrb
outsl
imul
mov
pushl
push
jb
mov
enter
shr
sub
aaa
lahf
sub
or
sub
mov
cmp
jmp
mov
pop
mov
adc
inc
imul
test
ja
mov
cmpsl
fcom
ret
xchg
jl
mov
dec
pop
mov
movsb
cwtl
push
push
addr16
adc
dec
rolb
xchg
mov
pop
mov
in
test
inc
add
mov
cmc
cmpsb
andl
bound
loop
sarb
pop
aaa
inc
jp
add
roll
add
inc
sub
mov
stos
test
adc
xchg
pop
sub
inc
pusha
int3
fsubrp
xor
aas
imul
inc
lahf
pop
adc
push
ss
je
mov
inc
xchg
pop
sbb
lock
decb
pop
push
inc
push
cmpsl
test
lods
call
outsl
mov
loopne
sbb
adc
jns
pop
mov
push
push
xor
std
les
or
sbb
pop
dec
xor
dec
test
pop
pop
loopne
pop
push
sub
lretw
fmull
xor
cld
dec
and
shl
fwait
sahf
imul
fimull
mov
push
sbb
and
pop
out
cmpsb
aas
dec
jns
test
mov
adc
fisubl
cmp
pop
das
fcomps
pop
cmp
iret
mov
sub
xchg
fidivrl
add
sbb
mov
enter
out
idivl
pop
ret
sub
addb
pop
or
movb
mov
cmp
cli
adc
scas
fs
out
jecxz
cwtl
push
jae
test
dec
or
fisttps
add
sbb
popf
jg
jmp
mov
loope
sub
mov
dec
cmc
inc
cmp
adc
movsb
or
mov
xor
fdiv
movsb
addb
fs
in
sahf
test
sbb
dec
lret
shl
and
mov
out
push
push
jp
dec
repz
xchg
repnz
sbbl
push
mov
pop
movsl
sub
inc
cmp
xlat
cld
addr16
mov
std
in
jbe
inc
pop
lret
lcall
pop
cmp
fdivl
mov
mov
xor
sub
jo
das
js
pop
mov
daa
push
xlat
and
mov
push
rclb
push
out
and
cmp
lods
in
pop
jl
ret
add
mov
sbb
fnclex
jmp
fstps
pop
push
stos
cmp
outsb
cmp
outsb
mov
cld
es
pop
pop
adc
mov
rcrl
xchg
mov
push
hlt
inc
stos
cld
xlat
ficompl
ret
enter
sub
clc
mov
test
int
test
cmpsl
pop
push
lods
divl
divl
in
clc
add
movsl
js
clc
rorb
adc
stos
mov
xlat
push
or
ficomps
ret
mov
pop
mov
test
ret
cli
mov
loop
rorl
loopne
fildl
adc
enter
xchg
pop
insl
aam
ss
cmp
jg
bound
xchg
aas
dec
jmp
push
and
idivl
add
mov
sub
mov
into
repz
add
mov
cmpb
mov
addb
inc
pusha
or
ljmp
or
pop
jl
push
or
sti
lea
add
lock
add
mov
enter
jne
imul
or
outsl
fcoms
xor
dec
pop
cmc
lea
and
ljmp
pop
or
cli
sbb
pusha
dec
cmp
lret
gs
stos
mov
out
and
inc
mov
cmc
mov
xor
xchg
adc
jne
mov
jno
cld
sbb
shlb
cmp
in
push
movups
icebp
adc
sahf
loopne
mov
dec
push
pushf
or
insb
cmc
cmpsl
or
pop
xor
jge
ljmp
std
xor
mov
xlat
cld
in
rolb
and
mov
jl
ljmp
aad
lods
adc
cmp
or
mov
in
mov
lods
sub
push
enter
mov
push
ret
push
push
pop
stc
inc
ss
sub
jecxz
sti
sbb
jg
nop
sahf
inc
pop
call
ret
or
pop
jecxz
cld
sub
push
and
sbb
xchg
lahf
and
add
ljmp
mov
stc
mov
cmovnp
sbb
into
cli
int3
xchg
xlat
dec
inc
xlat
gs
pop
cs
push
lret
adc
jbe
scas
test
push
lcall
in
fwait
push
iret
dec
and
sbb
enter
mov
call
adc
imul
sahf
xchg
push
sub
push
sub
shll
int
fwait
and
int3
xchg
ss
pop
xor
rcrl
fdivl
mov
mull
test
mov
lods
fistpll
mov
enter
pusha
addr16
lret
cmc
mov
add
mov
push
lcall
and
mov
out
popf
cmpb
inc
loopne
adc
push
mov
sub
and
mov
pop
dec
adc
or
cmp
fcomip
loope
nop
jge
into
pop
sub
std
sarl
adc
aas
jne
subl
sub
xchg
dec
and
dec
int3
fs
inc
cmp
sbb
mov
dec
xlat
pop
popa
dec
xchg
mov
inc
orb
mov
and
push
loopne
hlt
popa
push
xchg
ljmp
lock
fdivs
ss
mov
mov
pop
shlb
faddl
lods
addr16
and
adc
out
xchg
fwait
stos
xor
push
cli
fidivs
dec
ja
pushl
lcall
in
outsl
loopne
ret
repnz
or
mov
dec
in
test
or
cmp
mov
movsb
sub
push
mov
mov
pusha
mov
lret
ret
outsl
push
outsl
sub
add
and
pop
in
pop
push
xlat
lods
mov
jns
in
cs
sbb
aam
inc
inc
leave
sbb
xchg
js
jb
mull
test
dec
cli
and
lea
andl
nopl
or
mov
repnz
shrb
dec
sub
xlat
push
dec
or
loopne
or
js
xchg
mov
loope
or
push
in
inc
or
sub
hlt
xor
es
sbb
adc
xchg
nop
leave
lock
adc
scas
popl
lret
mov
daa
jne
push
rol
mov
rcl
push
mov
out
inc
and
test
mov
xchg
cmpb
inc
add
cmc
adc
mov
mov
mov
je
push
cs
notb
xchg
ds
int3
outsl
imul
mov
xchg
mov
in
clc
imul
jno
push
jo
jmp
lret
cwtl
add
outsb
push
add
in
cli
mov
movsl
rcrl
push
pop
inc
push
or
cmc
out
mov
hlt
or
pop
cmp
mov
sbb
sbb
push
pop
sbb
adc
fcmovbe
insb
divb
inc
cmpl
adc
inc
or
pop
fcmovnu
inc
jns
sbb
pop
call
imul
sahf
cmp
jle
pop
int3
idiv
jb
add
mov
loope
xchg
mov
fstpl
or
sbb
and
stos
push
je
scas
popa
dec
cmc
fcoms
pop
push
aas
shll
in
sub
sbb
test
es
out
std
test
out
jbe
dec
iret
sbb
into
push
fcmovnbe
sub
clc
scas
adc
push
xor
mov
push
jo
leave
pushf
out
mov
testl
mov
or
push
add
xor
mov
push
negl
test
cli
iret
fcom
lods
xchg
xchg
inc
nop
jne
idivl
ss
mov
repnz
inc
mov
mov
mov
mov
rolb
pop
mov
popf
push
inc
pop
lahf
add
imul
js
popa
mov
add
mov
and
push
mov
xchg
fsincos
lret
ficomps
mov
inc
jbe
or
stos
lahf
push
mov
jge
iret
adc
push
lods
cld
imul
arpl
xchg
fldt
ret
aam
add
nop
or
lret
mov
dec
sbb
test
ret
cmpsb
dec
aaa
in
mov
xor
adc
lret
out
inc
ljmp
cmp
sub
pusha
xchg
dec
jns
sbb
push
stc
cmp
iret
xor
outsl
testb
out
mov
push
push
dec
push
and
lea
xchg
dec
push
outsb
in
xchg
and
mov
cmp
or
sbb
test
mov
sarl
arpl
lock
add
pop
xor
or
leave
fwait
packssdw
shl
mov
or
mov
dec
sbb
js
sbbb
roll
jbe
or
pop
mov
jge
mov
ret
std
lret
jno
or
testb
sti
xor
stos
sbb
in
js
mov
push
stos
xor
push
push
or
scas
repz
mov
sub
dec
hlt
or
lock
cmc
test
ja
sti
test
dec
incb
out
jg
js
aas
icebp
cld
addr16
cmp
adc
add
inc
in
mov
sbb
xor
adc
sbb
inc
in
test
ljmp
cld
sbb
push
push
xorl
arpl
pop
ja
push
sti
dec
sahf
jo
iret
aas
test
xchg
in
in
pextrw
adc
inc
dec
repnz
or
cltd
mov
test
xor
out
fadds
jbe
fld
mov
daa
dec
xor
jl
mov
and
push
mov
pop
add
xchg
push
imul
daa
data16
cmp
jge
sbb
in
adcl
jg
jg
out
mov
scas
stos
xchg
leave
inc
xor
add
jp
out
out
ret
pop
cwtd
xchg
dec
rcr
push
mov
mov
inc
fnstcw
mov
in
fidivl
cmp
xor
cmpl
inc
js
xchg
fisubrl
call
or
stos
lea
jnp
scas
sbb
inc
insb
aad
xor
out
pop
std
mov
pop
sub
xchg
or
or
in
dec
adc
outsl
xor
shrb
add
out
ss
aas
insb
je
inc
or
rclb
and
mov
in
jg
pop
xor
std
hlt
ds
adc
mov
push
xor
cmc
mov
fcomi
mov
xchg
imul
fwait
adc
xchg
ret
mov
cmpsb
clc
and
into
ja
and
in
jg
pop
lcall
repnz
push
movl
xor
mov
add
notl
out
ljmp
push
inc
repz
stos
sbb
out
arpl
sbb
hlt
inc
popa
xchg
mov
add
jbe
cwtl
and
js
lahf
sub
jp
ss
push
xor
xchg
or
enter
xor
cmp
xchg
loop
bound
ljmp
in
insb
adc
sub
and
mov
popa
fucomi
pop
mov
pop
ret
pop
lcall
mov
inc
inc
mov
adc
fildll
cmp
insl
repz
mov
roll
pop
idivb
push
add
mov
mov
push
adcl
aaa
pop
out
sahf
icebp
in
out
cltd
imul
movsb
into
adc
jge
sahf
push
ss
xchg
sarl
or
jge
add
mov
jb
add
pop
aad
call
test
jmp
out
xor
or
inc
stc
shlb
std
cmovne
push
loop
or
inc
aaa
dec
cli
iret
test
push
call
add
addr16
xchg
push
jl
sub
repz
mov
dec
xor
cmp
enter
mov
cmp
icebp
mov
mov
and
or
test
jle
dec
or
loopne
or
jg
aad
sar
dec
pop
push
mov
frndint
leave
dec
je
push
sub
and
mov
adc
sbb
xor
inc
inc
dec
fdivl
jno
call
and
push
repnz
or
mov
out
and
or
shlb
popa
add
sbb
and
frstor
mov
add
inc
hlt
and
mov
shll
push
sub
add
ret
aam
pushf
into
insl
adc
sbb
jb
stc
idiv
mov
mov
pop
push
pop
push
push
mov
lock
cmp
lods
ret
lcall
je
sub
test
mov
fldcw
or
call
nop
inc
scas
cmp
mov
or
add
pushf
push
mov
ds
push
adc
lret
scas
add
dec
leave
xor
loop
nop
addr16
jno
mov
fcoml
push
clc
bound
mov
std
or
ja
cld
cmp
ret
cli
mov
in
cwtl
std
sbb
aam
cwtl
dec
or
les
adc
in
xchg
xchg
sbb
xor
popa
clc
push
stos
rcr
jge
jp
jne
int3
movsb
les
cmpsb
add
add
xor
rcrl
dec
adc
sbbl
fistpll
or
adc
xchg
and
les
xorl
mov
fisttpll
test
mov
xor
jae
sub
dec
data16
push
fmuls
mov
jecxz
dec
es
in
mov
les
inc
stos
sbb
pop
pop
xor
nop
popa
push
dec
hlt
iret
dec
push
sahf
pushf
stos
out
add
pop
mov
cs
push
pop
icebp
adc
dec
pop
out
clc
sbb
or
pop
push
scas
jmp
mov
movsl
ficompl
imulb
add
cmp
ror
mov
pop
mov
lds
push
out
and
jo
in
sub
or
mov
mov
push
mov
cli
movsl
push
leave
sub
int
jo
loopne
ljmp
mov
test
sarl
aad
rclb
mov
fidivrl
jg
fwait
fxch
xchg
in
xchg
xchg
add
data16
fwait
adc
or
lods
or
call
dec
ss
xor
xor
aad
in
jp
mov
sbb
push
dec
inc
mov
xor
insb
mov
mov
jo
add
mov
adc
or
dec
xlat
sbb
push
movlps
sub
dec
xchg
adc
hlt
adc
dec
and
repnz
sbb
popf
cmpsl
daa
imul
loope
sub
rolb
addr16
fdivl
cmp
icebp
xchg
pop
fwait
inc
dec
aad
xlat
lcall
or
adc
sahf
fs
push
push
push
lods
cltd
or
xor
dec
aaa
xchg
mov
mov
negl
xchg
stc
repnz
stos
shr
sub
ret
jnp
mov
test
addr16
addl
push
adc
pusha
iret
in
inc
stos
or
stos
cltd
inc
pop
adc
icebp
pop
jnp
jmp
mov
xchg
dec
aas
sub
int
adc
push
xor
lds
loopne
and
inc
mov
aaa
pop
xchg
ret
xor
je
cmp
or
and
adc
jecxz
ret
cli
lock
jecxz
gs
jmp
push
subb
dec
or
adc
negl
cld
or
clc
pop
add
or
mov
and
cmp
int3
xchg
lcall
lret
aas
xor
repz
mov
cltd
pop
cld
jbe
les
sahf
out
fimull
das
jle
loope
mov
ljmp
out
shrl
dec
in
fimull
mov
outsb
xchg
sbb
cwtl
adc
jne
jnp
push
mov
les
data16
dec
add
fsubs
cli
dec
call
loope
dec
in
shl
movsl
scas
lahf
inc
std
fwait
mov
out
jge
test
push
into
ja
jne
dec
cmp
insb
or
cmpb
push
jecxz
pop
jecxz
icebp
jo
loope
mov
mov
andl
push
sahf
or
or
mov
xchg
pop
loope
push
out
rclb
cli
sbb
outsl
add
in
rcl
gs
pusha
xor
insb
shl
adc
js
in
fxch
or
jp
sbb
pop
mov
xor
test
mov
insl
iret
clc
jg,pt
movsb
xchg
in
dec
push
pop
pop
fimuls
push
fnstcw
out
movsb
out
push
dec
mov
xorl
mov
repnz
mov
leave
sbb
out
jns
dec
fstp
out
movsb
sahf
inc
mov
ficompl
fbld
in
rcrl
push
test
cmc
cli
shrb
mov
jbe
int3
rorb
cmp
or
test
or
jmp
cwtl
xlat
or
mov
jge
and
inc
outsb
addl
or
mov
adc
add
mov
and
adcb
push
fs
push
mov
pop
xchg
pop
sub
mov
pop
fidivs
lcall
daa
mov
stos
pop
push
add
add
aam
cmp
or
das
xlat
inc
ficoms
test
imul
push
add
jb
cmp
jns
jnp
sub
ret
xor
and
ja
sub
leave
xchg
insb
push
movsb
cli
mov
mov
cld
stc
sub
in
xor
imul
lods
pop
sbb
js
jle
cltd
dec
add
mov
outsl
mov
in
cmpsl
and
ds
std
lret
fimuls
inc
daa
cltd
stos
cmp
dec
mov
int3
or
inc
pop
scas
pop
add
jns
mov
inc
outsl
das
push
xchg
test
insb
or
sbb
repnz
leave
inc
pop
inc
idivl
insb
repnz
dec
out
fcmovnbe
mov
jae
xlat
orl
inc
daa
ljmp
pop
mov
cmp
push
outsb
adc
pop
push
dec
xchg
and
add
popf
pop
push
sahf
cmpsb
dec
sub
dec
or
fdivrs
mov
adc
dec
testl
scas
insl
or
jp
xor
in
mov
shll
arpl
mov
push
jno
leave
jge
mov
gs
repnz
mov
jbe
in
fwait
cmpsl
pop
adc
enter
xor
arpl
lahf
dec
and
mov
dec
jnp
hlt
bound
inc
cld
mov
clc
adc
dec
and
mov
xor
dec
call
jp
adc
into
dec
leave
sbb
push
lds
dec
insl
inc
lcall
sub
push
es
xorb
dec
inc
cmpsb
orb
ret
fsubr
fnstcw
nop
aaa
enter
test
xor
inc
push
aam
or
cli
and
lds
mov
inc
pop
push
push
pop
pushf
mov
push
add
outsb
jp
mov
or
jae
fisubrl
fstpl
sub
incb
ds
inc
mov
or
loopne
lods
sbb
inc
and
cmpsb
inc
loopne
mov
mov
cmp
jp
mov
lret
mov
push
imul
in
jecxz
sub
es
pop
fistl
xlat
push
lods
jg
xchg
ds
cwtl
sbb
ret
mov
xor
dec
xor
mov
aam
punpckldq
aas
inc
and
fistpl
xchg
gs
test
jae
xchg
add
test
push
xchg
scas
scas
xchg
dec
cmp
xchg
xor
inc
cltd
call
stc
fstpl
addl
or
dec
lahf
fucomp
daa
stos
add
jb
and
cli
and
dec
fcmovu
dec
rcr
mov
pop
xchg
and
xor
lcall
dec
movsb
popa
aam
pop
push
add
add
aaa
ja
inc
xchg
jo
xchg
in
add
aam
xchg
lock
cld
es
arpl
jae
in
and
xor
xchg
push
cmpsb
cmpsb
sub
rorl
mov
outsl
movsb
das
lahf
pop
push
int3
ret
jge
out
jg
dec
inc
bound
xchg
cltd
push
pop
sbb
mov
lret
scas
lods
adc
inc
pop
and
testl
dec
mov
mov
pushf
cmc
popf
mov
or
adc
je
outsb
xor
xsavec
jp
outsb
jge
sbb
mov
jnp
jno
daa
mov
mov
and
inc
lods
aaa
pop
dec
mov
mov
outsl
popl
mov
sub
sbbb
cli
or
or
mov
xchg
xor
cld
fsubl
ljmp
jne
rol
mov
jg
fidivrs
xor
and
repz
sub
pop
and
add
in
lcall
add
xchg
test
ja
sub
mov
nop
ss
arpl
xor
or
sub
adc
pop
push
sbb
divb
jno
and
shl
mov
nop
fwait
or
sub
loop
mov
jmp
or
loopne
hlt
mov
or
fdivrl
xchg
lret
das
shll
mov
repz
stos
mov
sub
mov
pop
data16
ja
popf
xchg
add
outsb
test
std
push
test
dec
arpl
shl
and
xlat
mov
addr16
and
inc
dec
fstps
fisubl
push
ret
aam
fdivrl
int3
ret
xor
js
mov
xor
std
pop
push
sbb
xchg
mov
or
outsb
lret
pop
mov
push
adc
add
or
mov
mov
xlat
push
addr16
cmc
or
xchg
jecxz
je
jecxz
das
scas
mov
out
nop
negb
xor
xor
and
mov
inc
mov
inc
imul
push
je
in
mov
jae
adc
or
inc
arpl
inc
mov
repnz
std
add
das
dec
pusha
pusha
cmp
clc
outsl
loop
cmp
mov
lcall
lret
sbb
xor
xchg
cmp
aad
jno
mov
test
sub
push
mov
shlb
imul
cmp
sbb
fnsave
cmp
xor
fstl
adc
pusha
push
or
pop
out
xchg
push
push
or
mov
cli
repnz
mov
jnp
cmp
dec
fsub
add
add
mov
add
jo
jecxz
cld
pop
add
mov
iret
or
cmp
out
lock
cmp
xlat
adc
adc
inc
add
mov
mov
cmp
shll
test
insb
fwait
popf
cmc
xchg
xchg
pop
lods
movl
inc
push
divps
push
fsubrs
push
sbb
xchg
test
push
mov
out
dec
aad
mov
push
es
jne
add
push
and
call
add
mov
cmpsb
cs
mov
mov
dec
dec
das
fs
and
daa
mov
sbb
pop
mov
jmp
pop
push
in
pop
in
mov
lds
sub
add
popa
gs
mov
lds
cmpsl
int
imul
push
mov
call
push
xchg
sub
testb
sbb
sbb
test
mov
mov
rclb
out
stos
xor
lret
add
in
dec
dec
enter
cli
ljmp
std
scas
test
es
sti
xor
stc
repnz
scas
nop
and
mov
test
dec
inc
in
and
scas
jmp
outsl
jmp
pop
out
or
mov
aaa
mov
cmp
aaa
inc
shrl
xor
enter
into
mov
pop
pop
and
sti
dec
popf
cli
jl
or
lcall
and
mov
popf
jne
fldcw
push
xor
push
sar
insl
fdiv
test
sarb
dec
ret
push
fwait
push
jns
mov
test
data16
push
ja
imul
jmp
cmp
jg
cmpsl
mov
cwtl
and
roll
xchg
rorb
push
rclb
sbb
mov
push
adc
cmp
arpl
filds
add
sbb
ss
add
pop
popa
cwtl
jnp
ljmp
js
ljmp
mov
mov
roll
and
repnz
scas
nop
and
mov
test
shll
imul
lds
test
push
divl
hlt
inc
or
es
fs
xor
cmp
cmpsb
pusha
jge
iret
insb
loopne
lret
push
mov
xchg
icebp
or
mov
xchg
das
jbe
or
shlb
sub
addr16
dec
dec
push
pop
lcall
je
xchg
dec
cwtl
subl
mov
jnp
dec
out
xchg
ficoml
in
icebp
mov
sti
test
addl
mov
icebp
bound
jp
sarl
push
pop
mov
push
push
shrl
loopne
pop
shlb
mov
pop
or
das
pop
jle
stos
pop
and
js
sbb
xchg
mov
jle
sar
jo
mov
xchg
test
orb
addr16
fld
loopne
push
or
bound
pop
fs
fs
mov
inc
jne
adc
mov
jge
push
cmp
inc
add
mov
pop
test
jl
push
repz
lret
fbld
ss
add
pushf
mov
das
xchg
pop
mov
xor
jl
adc
call
sbb
das
mov
jp
mov
lahf
lods
jnp
mov
repz
pop
pop
push
test
ljmp
sbb
xchg
and
mov
stos
int3
dec
into
add
sbbb
mov
push
shl
inc
into
and
jae
dec
fstp
mov
and
arpl
sub
mov
sbb
sub
inc
cmc
and
adc
mov
sti
jno
scas
inc
or
ds
ja
pusha
movsl
adc
add
or
jmp
iret
xchg
cmp
jbe
pop
mov
mov
cld
arpl
mov
pop
movsl
adc
sbb
arpl
mov
xor
xchg
xor
cmp
ret
in
push
je
jl
and
mov
and
or
pop
nop
lods
data16
xchg
and
push
enter
jns
mov
sub
lcall
ror
mov
les
jnp
ds
xchg
daa
sbb
out
push
outsl
mov
mov
inc
pop
jnp
mov
call
jbe
sbb
push
hlt
or
subl
clc
sahf
ja
lods
dec
fwait
lret
sbb
push
xor
loopne
mov
fcmovnbe
cmp
out
add
rcrb
pop
xor
dec
rcrb
cmp
sub
call
push
repnz
cmp
push
pusha
inc
stc
mov
roll
xor
popl
adc
cmp
sub
fdivl
mov
add
and
jne
stos
xor
pop
mov
mov
aad
cld
cmp
pop
push
mov
jnp
xlat
lahf
andb
jae
lods
sbb
cmp
fistps
int
mov
pop
outsl
lcall
int
xor
xchg
rcrl
in
sub
mov
push
das
outsb
pusha
pop
push
push
mov
lcall
enter
xchg
adc
xorl
push
xlat
jo
mov
out
cmpsb
or
fldl
xlat
sub
inc
js
push
aad
es
adc
mov
subl
in
pop
pushf
jle
test
test
gs
add
or
and
lods
jmp
call
into
leave
sbb
cli
cmp
repnz
out
pop
adc
mov
fwait
clc
mov
sahf
inc
aas
rcll
push
mov
cmp
lahf
mov
call
lcall
in
dec
jb
xor
dec
pop
call
adc
mov
pop
dec
insl
jns
jb
stos
iret
cltd
push
sub
je
inc
mov
jns
gs
inc
js
out
es
sbb
dec
add
jecxz
ret
dec
xchg
int3
adc
push
pop
into
pop
js
arpl
ja
and
sahf
fstps
or
add
xchg
xchg
int3
imul
loopne
push
iret
subl
call
pop
adcb
pop
call
mov
pushf
fmuls
and
test
lea
cld
jae
inc
cmpsb
incb
sbb
stos
nop
shrb
int3
sub
movsl
jne
call
ret
js
gs
outsl
ds
insb
ret
int
fwait
xchg
inc
ds
mov
mov
insl
jecxz
cmp
test
mov
push
ret
mov
imul
out
movsl
mov
jnp
cmp
cmpsl
add
out
cmpb
push
out
inc
out
cmp
loope
pop
push
das
mov
adc
cmp
xchg
arpl
popw
ret
cmp
push
mov
inc
sahf
jl
test
aad
dec
pusha
sub
xchg
imul
xchg
loop
pop
push
cmpsb
or
iret
mov
pop
scas
xchg
sbb
fs
mov
mov
mov
adc
in
xor
mov
jmp
sarl
fdivrs
xor
andl
int3
addr16
cmc
movsb
nop
je
pop
fs
mov
dec
xor
xchg
mov
push
sahf
pop
rcll
insl
jbe
add
lret
jge
push
pop
dec
lcall
setle
es
xor
imul
xor
sub
adc
add
xorl
cmpb
sbb
mov
xchg
dec
lock
sub
jl
jle
test
popl
xchg
fldl
les
cmp
sbb
dec
cmpsl
insl
jecxz
movsb
ljmp
mov
leave
pop
dec
pop
pop
inc
adc
or
adc
xor
into
into
add
jmp
jmp
xor
in
and
jle
movsb
je
dec
pop
jne
mov
gs
pop
adc
sti
ljmp
aad
aaa
cmc
scas
push
adc
sub
insb
xor
loopne
lds
pop
pop
adc
rcll
cmpsl
sarl
imul
adc
nop
stc
xchg
fwait
mov
or
loope
decl
arpl
jb
add
push
ss
sti
test
cli
loopne
mull
testb
test
mov
loopne
and
loopne
movsb
cmp
hlt
mov
mov
xchg
push
sub
or
sbb
mov
mov
jo
fldcw
lods
xchg
mov
xor
mov
mov
ret
testl
jmp
dec
roll
stos
test
data16
push
jno
mov
pop
pusha
cmp
jp
imul
sbb
hlt
or
adc
fsubl
sub
call
mov
adc
adc
in
ret
dec
gs
adc
fsub
cmp
pop
pop
dec
frstor
push
mov
mov
push
test
dec
mov
in
xor
cmp
adc
out
cmp
cmpsl
outsl
bnd
hlt
cltd
lock
cmp
xchg
xchg
into
sub
pop
mov
mov
lods
pusha
test
pop
mov
outsb
xchg
lds
push
arpl
dec
pop
aaa
test
xchg
adc
xor
and
cwtl
negb
shrl
push
mov
arpl
or
mov
cmp
push
sub
in
dec
adc
or
mov
nop
jns
mov
xchg
or
adc
js
fwait
dec
orl
pusha
sbb
sbb
imul
sub
idivl
cmova
inc
int
stc
icebp
sbb
leave
xlat
dec
mov
lcall
sub
ss
rclb
mov
adc
cld
test
jmp
or
mov
movsb
lahf
clc
and
in
jne
xchg
mov
mov
das
xor
fildl
bound
into
test
stos
lcall
popa
xchg
sahf
insl
das
cli
push
and
push
jmp
push
fadds
enter
mov
lds
pop
dec
fcmovb
xor
in
lahf
sbb
dec
sarl
stc
aaa
mov
mov
fisttpl
arpl
popa
dec
sub
pop
std
mov
push
or
daa
jne
outsb
mov
or
mov
pop
nop
add
dec
pop
pusha
pop
repz
dec
mov
jmp
ret
imul
out
inc
lret
stos
cmpb
cmp
or
push
lret
mov
ret
pop
push
and
xchg
cwtl
mov
stos
pop
ret
inc
fistpl
jne
sub
cmp
addr16
bts
xor
mov
dec
push
negl
das
jno
push
mov
dec
popf
rcrb
xor
jl
scas
xor
outsl
push
scas
sub
mov
dec
push
pushf
aam
loopne
mov
mov
ljmp
into
lret
int3
jmp
xchg
ja
jl
xchg
jnp
or
inc
nop
add
lds
lcall
xor
jb
lods
push
lods
xchg
out
mov
dec
rorb
cmp
lahf
mov
or
push
add
flds
dec
out
jmp
dec
and
jae
or
call
lods
pop
mov
jecxz
xor
inc
sbb
cmp
jne
ja
lods
inc
and
mov
push
add
movsb
xchg
mov
mov
pop
bound
arpl
sbb
jmp
test
rcll
push
or
jae
mov
frstor
push
xchg
xor
ljmp
loopne
mov
loop
push
dec
clc
push
aaa
sub
jb
insb
sbb
ljmp
inc
outsl
pop
jl
loope
outsb
loopne
ja
fdivrs
cmp
pushf
loopne
sarl
xor
std
lods
inc
outsl
mov
xchg
mov
out
int3
lret
adc
int
test
jge
mov
sbb
lcall
lret
jecxz
mov
stos
aam
scas
mov
scas
sbb
shlb
xor
stos
mov
repz
rclb
int
jns
outsb
push
stos
rolb
inc
jl
sbb
cmc
push
mov
push
add
add
iret
movsl
dec
data16
push
insb
mov
enter
sbb
sub
xorl
mov
inc
fidivs
jp
or
out
and
adc
pop
pop
dec
sub
decb
inc
xor
mov
inc
lock
insl
jne
aaa
xchg
loop
xchg
nop
push
jae
mov
mov
inc
or
cmpsb
mov
sar
or
nop
and
sahf
mov
jne
in
and
fstl
cwtl
out
cltd
lds
ds
mov
lret
mov
pop
jmp
lods
dec
and
pop
ljmp
pop
sub
popf
cmpsb
jmp
mov
pop
adcb
int
out
lcall
sbb
fldl
bound
pop
or
in
sbb
inc
dec
daa
in
adc
jmp
adc
dec
ror
sbb
loop
xchg
subl
fisttpll
jge
and
jmp
ss
lods
in
sti
insb
cs
rorl
jno
xchg
inc
icebp
mov
sbb
mov
push
lea
das
inc
movsl
mov
popa
and
jno
cli
pop
stc
jbe
insb
repz
jbe
xchg
cmp
in
lods
nop
mov
imul
mov
movsl
and
movl
in
mov
cwtl
stos
out
lret
jl
mov
mov
mov
das
cmpsl
test
je
xchg
inc
cmp
dec
and
mov
inc
and
or
push
mov
dec
mov
ds
out
mov
aad
loope
pop
xchg
daa
mov
cmp
mov
add
inc
pop
pmullw
xlat
in
jo
mov
sbb
inc
pusha
sbb
mov
mov
clc
ds
ror
ficoms
outsl
sbb
ret
les
xchg
pop
maxps
hlt
clc
and
xchg
ret
fwait
lods
cltd
xor
iret
in
jle
or
add
cld
dec
aad
sbb
aaa
scas
push
dec
mov
cmp
lods
sub
xor
je
or
mov
pop
or
js
test
cmp
fadds
pop
in
push
lods
scas
mov
lret
sub
inc
cld
mov
adc
xor
dec
imul
sbb
add
inc
inc
iret
fildl
mov
push
push
imul
add
sbbb
jno
dec
test
popf
inc
fwait
cmpsb
xchg
push
or
dec
adc
push
sbb
sub
mov
add
push
ljmp
push
movsl
cli
dec
cmp
out
subl
xor
dec
std
daa
mov
inc
daa
mov
call
mov
je
push
pushf
sub
out
and
bound
pop
int
fcoms
js
ljmp
sub
fwait
sub
aad
xchg
ljmp
push
inc
mov
test
cmp
cmp
pop
inc
aaa
adc
sarb
aas
stos
testl
adc
lock
cs
add
scas
xorl
test
andl
mov
inc
in
cmpsl
mov
cmp
hlt
clc
callw
push
push
mov
rorl
cmp
fwait
jl
mov
shl
les
cld
sub
int
mov
add
mov
call
push
inc
stos
cmp
in
mov
shr
pop
mov
xchg
add
lock
and
sbb
daa
insl
shll
jne
mov
out
dec
into
insl
mov
xor
sahf
loop
add
jecxz
ljmp
inc
mov
add
dec
xor
and
in
flds
mov
ret
stos
push
sbb
xor
lods
jae
mov
clc
mov
xchg
imul
repz
filds
push
jne
or
inc
ss
pop
das
roll
lods
cmpsl
or
in
enter
fisttpl
mov
jp
icebp
push
testb
xor
xor
mov
add
push
cmp
stc
aaa
or
icebp
fisubrl
xchg
or
push
pop
mov
cmp
jle
push
cli
push
push
les
es
push
mov
sub
cmp
pushf
lock
xchg
pop
pop
int3
cmp
inc
mov
xor
mov
push
or
jmp
sahf
dec
pop
mov
dec
pop
mov
sbb
or
add
fistpll
mov
xor
sarl
cmp
mov
push
mov
leave
mov
in
out
cltd
popf
cmp
sbb
lods
xor
sub
mov
and
or
nop
lahf
xchg
push
mov
cltd
cmpsb
xor
pop
jp
mov
pop
scas
push
xchg
pusha
push
adc
shlb
rcll
into
pop
subl
rorl
lahf
sbb
pop
das
test
ljmp
jmp
repz
cmpsb
into
mov
daa
test
jo
lcall
and
adcb
pmuludq
add
icebp
xor
xor
cmp
and
mov
cmpsb
sub
clc
push
push
sub
fpatan
divl
sub
lret
adc
sub
sbb
loope
stos
xchg
xchg
add
add
ljmp
inc
cltd
sahf
push
pop
mov
into
rolb
loopne
hlt
push
sbb
pop
daa
loope
mov
ljmp
mov
movsb
mov
cmp
roll
mov
jb
xor
rol
push
add
insl
mov
mov
mov
add
xor
out
cmp
nop
mov
add
or
xchg
pop
push
xor
or
loopne
lods
pop
icebp
mov
dec
repz
push
add
std
push
out
mov
idivb
and
ds
jmp
dec
mov
inc
ret
or
inc
mov
sub
mov
call
aaa
or
lcall
sub
inc
mov
dec
inc
dec
pop
xor
lds
ds
or
inc
xor
cmp
aam
push
in
inc
sub
icebp
lock
in
test
sahf
adc
bound
mov
mov
adc
pop
out
jno
fstpt
cltd
cmp
loop
push
or
mov
pusha
add
push
stos
xor
scas
ljmp
pop
decl
sub
les
and
cmp
mov
mov
add
cmp
jne
out
adc
insb
mov
cmp
iret
imul
loope
call
cmp
cld
lock
imul
push
jne
js
cmp
pop
inc
popf
jl
cwtl
int
mov
xchg
sbb
mov
adc
int3
xor
out
pop
dec
mov
in
fdivs
mov
fs
jns
mov
or
ja
mov
xor
sbbl
jne
jl
js
pop
insl
out
adcl
das
lret
ds
dec
cmp
jae
pop
pop
push
cmpsb
or
mov
mov
aam
sbb
shr
dec
adc
fdivrp
or
movsl
das
pop
add
dec
clc
stos
shlb
test
cmc
gs
or
fs
mov
test
mov
adc
daa
xchg
and
fnstcw
adc
push
mov
bound
ja
or
fstp
mov
or
or
pop
xchg
mov
das
std
iret
push
push
inc
scas
sbb
lret
fmuls
enter
and
cmp
jns
and
sub
notl
scas
das
and
dec
cmpsl
cwtl
jne
sub
shll
out
push
push
fsubrp
pop
lock
cmp
repz
pushf
lods
fwait
insb
mov
je
jg
jne
negl
outsb
push
xchg
xor
jno
fisubrs
inc
test
pop
xchg
rorl
aaa
loopne
push
sahf
and
xchg
aad
fisubs
js
mov
mov
push
push
add
dec
and
lret
cmp
rolb
out
js
fadds
rol
cltd
pop
das
cld
into
jno
add
ucomiss
mov
stos
mov
cmpsb
fs
pop
out
xchg
adc
in
xchg
lahf
insb
lds
mov
ja
add
test
in
push
adc
or
scas
lds
cmp
xor
mov
pusha
ret
jg
fcmovu
lods
lret
aaa
and
xchg
rcrl
call
bound
push
or
cmp
add
inc
lret
testl
repz
test
in
outsb
xchg
sub
icebp
out
mov
fmull
pusha
repz
cmp
inc
pop
test
and
pop
stc
mov
sub
int
outsb
in
clc
inc
pop
mov
mov
xor
mov
sub
dec
rdpmc
pushf
xchg
shrb
and
jmp
pop
sahf
mov
cltd
sbb
mov
dec
mov
js
test
push
or
inc
xchg
jmp
mov
daa
ss
clc
mov
sbb
dec
outsl
adc
jo
in
ss
push
pusha
hlt
dec
test
cmp
push
fstps
xchg
sub
or
popf
out
push
push
inc
jae
cmc
nop
jo
pop
outsl
out
aaa
in
mov
notb
enter
jmp
lds
cltd
dec
loope
mov
pop
hlt
pop
cmp
jo
push
cmp
or
sarb
jne
clc
and
aam
or
xor
inc
push
cwtl
roll
sbb
jmp
leave
lret
pop
repnz
gs
aaa
sbb
pop
dec
and
mov
inc
icebp
jno
adc
sub
xor
xor
imul
jb
mov
repz
cwtl
sub
aad
mov
cmp
mov
and
out
push
xchg
lahf
mov
insb
dec
repz
pop
xor
cs
aam
pop
mov
sbb
jmp
cmp
mov
and
mov
cmp
mov
test
sbb
lcall
lret
pop
pop
cmp
imul
cli
push
xchg
es
cmc
dec
out
les
cli
cmp
push
icebp
ja
cmp
into
or
leave
xchg
call
sbb
xor
notl
jg
in
dec
es
in
add
sbb
push
fwait
cli
mov
pop
adc
or
pop
mov
xor
or
test
iret
stos
call
lods
push
pop
into
sti
fdivs
movsl
push
or
cmp
xor
and
sub
mov
andb
adc
stc
adc
lcall
mov
or
js
mov
jnp
mov
inc
sbb
outsl
adc
pop
and
push
rcll
loopne
fs
push
pop
inc
xchg
arpl
addl
aad
int3
test
subl
jl
pushf
outsl
sti
das
mov
iret
es
lds
xor
les
mov
dec
cs
lods
pop
lret
push
and
or
les
push
nop
cmc
pop
les
addr16
jmp
fcom
call
in
leave
lret
loop
rolb
and
cmp
add
inc
mov
std
loopne
xor
repz
fisttps
push
arpl
in
mov
dec
loopne
inc
sbb
adcb
mov
movsb
loope
out
push
mov
inc
out
mov
pop
push
mov
movsb
dec
adc
xchg
daa
repnz
sub
ss
sub
adc
push
dec
into
add
lock
push
outsl
sbb
add
push
add
imul
and
and
fwait
int
mov
stos
add
aaa
loope
add
adc
mov
pop
loopne
cli
mov
mov
loopne
push
das
mov
out
orb
iret
daa
pop
testb
adc
sbb
push
scas
loop
pop
xor
and
mov
adc
xchg
stos
push
fwait
pop
xchg
jnp
daa
cmp
stos
push
lea
movsb
xchg
faddl
lock
fimuls
aaa
lds
lock
les
rorb
jno
xchg
cmp
jg
call
dec
jecxz
mov
sub
and
sbb
cs
mov
insl
or
fadd
and
fmull
ret
dec
fcompl
stos
mov
mov
or
pop
shlb
mov
cli
pop
ret
inc
mov
jno
out
movsb
cmp
sub
clc
int
or
push
in
pop
mov
add
daa
mov
aad
ret
and
inc
pop
clc
jge
decb
pop
aaa
inc
fdivs
mov
inc
mov
xor
andb
jg
dec
or
add
lods
ja
scas
xor
shlb
cmp
les
pop
pop
inc
mov
cmp
mov
insb
das
pop
mov
iret
fadds
dec
mov
or
jmp
ret
add
pop
xchg
sbb
xchg
sbb
jo
jmp
iret
pop
hlt
loopne
jg
xor
lds
movsl
push
das
bound
push
orb
cmp
imull
xlat
aas
cwtl
xor
shl
in
mov
dec
xadd
pushl
pop
and
loop
out
xchg
lcall
inc
xor
int
mov
movsb
jo
rorl
mov
xchg
repnz
cmc
push
ss
outsb
fdivl
mov
xchg
xchg
xor
jae
mov
inc
dec
add
mov
cs
je
int3
jae
dec
addr16
and
in
add
into
test
mov
jno
lods
cmpsl
fistl
mov
sarb
setle
dec
enter
faddp
mov
jecxz
mov
mov
fwait
sbb
adc
test
jno
aad
sahf
cmp
sbb
sub
cmp
sahf
jmp
dec
fsts
lcall
pop
daa
xlat
loop
into
mov
pop
sbb
rcrb
cmp
mov
lahf
lret
aam
mov
and
clc
jl
sub
and
adc
fs
mov
test
loope
pusha
pop
out
or
jno
push
pop
jbe
cmp
sbb
sub
add
adc
push
mov
test
lock
mov
loop
fldcw
out
dec
insb
ss
and
fldenv
hlt
rcl
out
popf
pop
dec
push
mov
pusha
xlat
fxch
out
aam
adc
add
dec
or
jae
addb
jg
out
movsb
movsl
int3
cmp
push
mov
or
dec
popf
fldcw
jo
fmull
pop
xchg
push
shl
or
push
pop
mov
fwait
test
cmp
ud0
push
mov
xchg
pop
pusha
iret
and
aad
cltd
sbb
or
push
popa
pop
adc
xor
pop
loop
out
imul
pop
imul
push
lods
xor
mov
aad
cltd
repnz
movsb
push
idiv
data16
adc
loop
or
pop
stos
cmp
jne
ss
ficomps
xchg
xchg
jg
push
inc
repz
push
stos
sub
jns
jno
xorl
adc
push
xchg
xor
mov
ss
in
pop
jo
movsl
jb
shlb
cmp
xchg
dec
sbb
mov
stos
mov
inc
nop
xor
ljmp
mov
add
mov
cmp
in
fcompl
test
sub
or
fisubrl
std
jne
movl
adc
add
add
push
shll
jg
sbb
loopne
xchg
cltd
pushf
add
pop
je
fistps
ret
test
mov
push
dec
aaa
sbbb
inc
adc
mov
and
mov
xchg
mov
loop
sbb
pop
fsubrl
jb
cmp
pop
scas
stos
daa
sub
scas
xor
pop
xor
push
imul
dec
ljmp
fidivrs
add
adc
or
cmpsl
les
xchg
gs
push
jno
out
lods
xor
add
leave
movsb
mov
outsl
test
int3
mov
cmp
jnp
sub
push
loop
xor
cmp
xchg
jb
nop
cmp
lds
ja,pt
hlt
icebp
cmp
mov
sub
add
in
sbb
cmp
jbe
decl
das
scas
xchg
or
push
dec
pop
push
std
lock
pushf
mov
bound
mov
loop,pt
jl
fs
loope
nop
fucomp
jmp
sbb
je
and
sub
ljmp
dec
shlb
imul
inc
sub
movsb
push
push
push
or
pop
cmp
inc
mov
imul
enter
cli
shlb
pop
pop
push
cmp
xchg
dec
cmpsb
mov
jo
mov
sub
pop
mov
movsb
call
loop
xor
ret
mov
sbb
in
mov
subb
inc
and
ret
cmp
lds
or
ja
inc
jmp
test
or
std
cmc
cmp
dec
mov
sub
popa
xlat
inc
mov
jb
mov
fsts
mov
xor
cmp
mov
cltd
lods
mov
mov
mov
dec
xchg
pop
in
inc
xchg
xchg
lret
pop
push
imul
sbb
fmuls
jne
cmp
ljmp
jecxz
inc
cltd
pop
leave
pop
call
inc
sbb
cmp
xor
cmp
ja
cli
mov
movsl
shll
mov
push
sbb
bound
out
repz
mov
mov
pop
jge
andl
jnp
cmp
cmp
adc
int
subb
push
test
cmpsb
int3
inc
xor
aas
lods
mov
in
xchg
pop
stos
push
jg
push
jo
cmp
adc
jns
jnp
pop
mov
pop
or
aam
jne
lahf
and
sbb
fimull
mov
fdivs
mov
pop
xchg
push
fistpl
repz
inc
and
push
mov
aam
or
clc
andb
push
in
sub
add
fdiv
or
xchg
pop
xchg
lods
xlat
ret
cmp
stos
ljmp
inc
lock
aad
inc
fmull
jp
jecxz
cs
inc
leave
daa
arpl
inc
mov
or
push
stos
mov
lea
lods
xor
mov
dec
mov
out
gs
mov
lods
imul
mov
clc
nop
add
mov
stc
bound
test
pusha
outsb
sub
bound
push
push
add
pop
cmp
test
add
sarl
popl
mov
mov
and
mov
das
xchg
lods
cwtl
sub
mov
jmp
adc
mov
cmc
cmpsl
xor
dec
arpl
xchg
inc
sbb
int
call
sbb
pop
inc
sbb
jp
adc
jle
mov
imul
rorb
mov
and
mov
xor
add
mov
inc
cwtl
lds
cmp
imul
test
clc
in
scas
sub
xor
test
mov
vaddps
sub
xchg
push
sahf
shll
mov
sbb
and
add
iret
push
out
or
dec
into
push
or
dec
cld
xchg
out
jne
mov
mov
sbb
add
popf
push
movsb
leave
mov
mov
push
push
cltd
imul
xor
jo
sub
or
fists
add
sbb
or
loop
loop
mov
scas
push
and
sub
test
and
lods
mov
pop
and
cmp
dec
loop
mov
xchg
lea
xor
sbb
push
jo
outsl
nop
add
adc
xchg
jle
stos
push
dec
mov
mov
push
jmp
push
add
cltd
mov
int
mov
xor
cmc
fnsave
cltd
daa
inc
adc
scas
fdiv
dec
loop
mov
sarl
push
addb
repz
sub
ror
jp
jo
notl
or
and
mov
pop
adc
std
cmpsb
xlat
mov
pusha
mov
lret
or
cs
inc
ss
mov
push
rcrb
mov
das
mov
das
cmp
jo
notb
mov
cli
adc
xor
sub
stos
in
jb
pop
sub
sub
in
mov
inc
sbb
test
insl
xchg
add
orb
adc
or
scas
clc
mov
adc
repnz
mov
jbe
adc
push
xchg
js
or
cld
mov
inc
xlat
adc
mov
inc
fs
nop
jge
les
outsl
lahf
fstpl
lahf
push
fs
pop
jl
mov
push
repz
push
mov
fs
and
sbb
jmp
mov
and
sub
or
hlt
movsl
in
push
dec
dec
xchg
das
add
xorb
cmp
loop
mov
je
pop
pop
jmp
in
test
repnz
pop
and
mov
loopne
je
int
outsl
test
inc
push
push
mov
xor
or
mov
jle
mov
int3
jle
loopne
jne
pop
subb
sti
push
xchg
push
xor
popa
mov
nop
push
lock
ja
mov
xchg
decb
jle
cmpl
dec
add
dec
cmp
ds
cmp
xchg
rolb
clc
out
jl
aas
jb
sub
cmp
and
iret
pop
xchg
pop
lret
mov
push
loopne
sbb
adc
adc
aam
xchg
stos
mov
pop
jo
sbb
adc
adc
xchg
fdivrs
adc
cmp
mov
or
jns
hlt
lahf
add
push
push
mov
out
insl
dec
jne
lahf
mov
mov
outsb
loop
dec
xlat
jecxz
pop
clc
sub
sbbb
imul
loop
sti
aam
aas
andb
mov
add
stc
xlat
fdiv
add
push
or
data16
testb
sbb
and
sub
in
jae
insl
add
aad
jne
loope
sbb
mov
jbe
lds
insl
mov
jno
fidivl
incl
nop
dec
xchg
xchg
sub
xchg
stos
cs
cltd
movb
cli
pop
adc
les
mov
mov
cli
jo
mov
push
jnp
cmp
and
push
loop
sbb
fimuls
movsb
cmp
ljmp
mov
mulb
sbb
jb
fwait
in
mov
roll
and
popf
mov
pop
outsl
or
mov
outsl
inc
inc
test
push
and
lods
push
sub
fldt
pop
mov
or
movsl
inc
in
vpackssdw
mov
sbb
sbbb
sbbl
push
shrl
movsb
imul
imulb
lea
dec
cmp
adc
idivl
setnp
jecxz
and
jns
imul
fdiv
push
pop
sbb
jno
xchg
add
jbe
xor
push
push
add
aam
call
rcrl
shlb
icebp
adc
jl
rcll
mov
ret
jne
imul
and
cmp
jne
test
jbe
jb
cmp
dec
fisttpll
mov
or
push
push
test
jne
sub
adc
xchg
xchg
adc
mov
call
fists
lock
cmpsl
jl
aad
xor
or
stos
mov
rcr
add
lods
adc
or
adc
xchg
and
or
shrl
or
jmp
test
mov
xchg
aad
test
or
mov
loop
in
lret
sub
cmp
nop
push
sub
aas
lods
aad
mov
sub
or
jl
add
or
inc
dec
jns
mov
push
sub
cmp
push
cmc
bound
sbb
and
imul
add
push
cmp
std
cltd
jb
xlat
mov
imul
icebp
aas
cld
movsb
icebp
call
inc
and
movsb
cmp
pusha
int3
fstpl
or
adc
sbb
jg
xchg
xor
fiaddl
movsb
jge
sub
fistpl
push
mov
outsb
or
sub
mov
mov
repnz
fsts
cmp
jl,pn
mov
jmp
scas
adc
push
hlt
or
arpl
movsb
sub
lock
cld
mov
and
idiv
lret
xor
cmpsb
jp
dec
cmp
sbb
hlt
jg
int3
sti
aaa
nop
xchg
sub
jle
in
mov
xorb
std
cmp
fsubrl
stos
cmp
sti
mov
adc
lods
aam
sbb
stos
cmpsl
pusha
push
cmc
in
dec
pop
or
or
popl
addb
dec
pop
jmp
inc
out
cmpl
and
push
ret
and
adc
dec
sbb
mov
pop
mov
xchg
incl
push
or
jb
mov
cmp
jecxz
in
lock
fadds
ds
mov
in
inc
push
inc
loopne
sub
and
mov
push
in
imul
out
jp
stos
sbb
mov
mov
insb
and
adc
cltd
hlt
fldcw
or
fsubr
les
cmp
fsubl
push
fildl
xchg
jns
lds
je
lret
loope,pt
lret
add
lock
data16
ret
fwait
or
add
jp
popf
jo
jmp
xchg
lret
adc
and
mov
mov
mov
cmp
dec
std
fildll
or
push
or
fists
cmp
dec
in
jne
mov
fnstcw
push
lock
negb
push
testl
push
mov
lea
mov
sub
bound
xchg
repz
filds
cmp
adc
leave
xchg
xchg
mov
mov
imul
addr16
or
mov
in
lods
dec
push
adc
mov
xor
outsb
bound
and
and
lahf
lods
lret
adc
jae
push
adc
rcrb
or
adc
mov
popf
call
xchg
lds
or
mov
jge
add
push
jns
adc
shlb
ja
cmp
sub
fisttpll
data16
lcall
pop
cmp
lods
mov
mov
popa
arpl
sti
add
hlt
loopne
pushf
xchg
data16
into
jg
push
in
pop
fsubr
pushf
mov
and
out
ret
xor
mov
mov
in
mov
pusha
jae
sub
jnp
push
pushf
mov
and
fadds
add
out
dec
dec
out
add
rorl
lods
mov
xor
push
adc
mov
cmp
insl
pop
cs
adc
pop
sti
in
xchg
cmp
test
ds
xlat
and
mov
ljmp
js
push
cmp
movsl
add
stos
test
cmp
fstps
roll
ret
cltd
push
sbb
sarb
rcrl
xchg
aam
sub
cwtl
rcl
repnz
arpl
sub
int3
sbb
fs
sub
insl
push
ss
inc
scas
fwait
jns
mov
jge
adc
mov
lret
fwait
adc
pusha
insb
mov
dec
out
aas
and
cltd
mov
js
je
and
leave
mov
dec
ljmp
sti
repnz
add
sub
scas
test
arpl
test
xor
or
mov
data16
mov
dec
int
pushf
fistps
and
aaa
loop
mulb
loope
and
mov
mov
mov
sbbb
pop
add
insl
sub
rcll
ret
and
fidivrl
jge
jnp
mov
mull
leave
inc
sbb
dec
clc
xchg
xchg
clc
jmp
cwtl
movsl
add
mov
icebp
inc
mov
js
aas
and
test
inc
mov
sbb
popa
inc
roll
cmpsb
sti
int3
cmp
int
ficoms
pop
pop
cmpsl
rcrb
lock
imul
out
js
inc
scas
lcall
sahf
cmp
lret
sbb
or
ret
jmp
adc
out
cltd
out
jecxz
mov
cltd
addr16
ljmp
xchg
dec
jle
sbb
out
test
jne
add
add
mull
rorl
sub
dec
pop
pusha
fld
add
cmp
jecxz
dec
dec
push
pusha
or
insl
jns
inc
icebp
adc
outsb
inc
mov
movsl
jl
adc
loop
aaa
mov
aam
pop
mov
fs
push
mov
je
mov
shlb
aas
rcrl
inc
fwait
push
hlt
cmp
xchg
adc
xchg
sbb
pushf
ret
dec
ja
mov
hlt
xor
inc
sub
stc
xchg
mov
inc
insb
sbb
inc
pop
mov
sub
sub
stc
inc
cmpsb
add
ret
sbb
lahf
cwtl
cmp
pop
icebp
cmpsb
push
arpl
inc
leave
divl
pop
dec
xchg
push
xor
push
div
cmpsb
lret
rclb
je
mov
jns
fistpll
lods
and
pop
in
dec
cld
cmpsl
dec
je
in
into
mov
ret
dec
push
out
lods
in
jecxz
das
in
test
lret
mov
or
sbb
adc
ret
gs
outsl
scas
pop
iret
adc
mov
push
inc
dec
imul
xchg
push
fs
mov
cmpsb
mov
std
jg
sub
push
mov
sub
jno
mov
push
or
leave
cmc
dec
cld
pop
jp
ret
jecxz
cmp
pusha
mov
dec
aas
popf
notl
mov
mov
test
dec
jp
xor
imul
dec
lods
add
jbe
imul
ljmp
orl
jge
scas
rcll
lcall
adc
push
xchg
pop
out
xchg
fcmovbe
add
jb
iret
in
mov
stos
negb
push
and
js
sbb
jp
pop
jbe
sbb
loopne
ss
and
adc
or
push
daa
sbb
ds
out
cmp
lret
in
fstl
fwait
pmulhuw
sar
sbbb
addr16
cmpsb
cwtl
fwait
movsb
jmp
cltd
pop
aaa
lret
outsl
xorl
jbe
or
push
lret
xchg
xchg
mov
out
pop
xor
pop
and
scas
sbb
popa
test
cmp
mov
mov
and
iret
in
addr16
inc
pop
jns
leave
push
dec
cs
push
mov
sub
mov
lea
inc
js
sub
test
jp
add
hlt
cmp
insb
or
fcom
push
cmp
test
ret
movsb
push
mov
pop
test
inc
rorl
mov
push
into
popa
in
mov
jg
xor
sub
mov
xor
mov
std
jg
cmp
and
pop
xorb
sbb
ljmp
push
icebp
dec
sti
lods
mov
call
add
and
cmp
jb
in
insl
xor
insb
and
fmul
add
push
dec
mov
mov
or
cld
push
orb
sbb
jle
aam
movsl
cmp
fdivrl
call
cmp
mov
leave
outsl
fcompl
mov
cmp
lret
inc
push
cmp
add
cmc
ss
es
mov
add
mov
lods
cmpb
adc
adc
cs
jmp
fsubs
mov
lret
fnstenv
xchg
jl
arpl
mov
xlat
adc
mov
add
stos
pop
sbb
hlt
test
push
xchg
gs
sbb
jmp
ljmp
int
inc
push
pop
and
inc
dec
sbb
jl
test
mov
in
shlb
push
arpl
ljmp
add
pushf
mov
adc
xchg
xchg
les
scas
scas
pop
jae
push
dec
in
sub
aad
lcall
dec
mov
sub
in
hlt
cmp
jmp
mov
es
das
popa
das
scas
movsb
mov
fldt
fsubs
imul
inc
test
dec
xor
jg
movb
mov
scas
jnp
negl
ret
popa
aam
lret
lea
in
and
and
xor
and
out
mov
mov
lcall
je
push
sbb
lods
push
adcl
sub
in
xor
xchg
filds
enter
sbb
ja
fcoms
sub
xor
pop
mov
dec
clc
mov
inc
nop
cmp
mov
adc
and
jb
sbb
jno
push
out
clc
mov
xchg
icebp
scas
push
and
mov
movsb
iret
cwtl
adc
inc
mov
xor
insl
cmpsb
in
mov
sbb
cmp
xchg
adc
add
cmp
dec
inc
hlt
pop
lock
mov
mov
mov
mull
jnp
popf
outsl
out
cmc
dec
sti
jb
cld
push
out
and
imul
out
mov
mov
inc
mov
mov
or
jo
rolb
rcl
and
xor
test
jle
fsubrl
gs
aas
fwait
xchg
mov
pop
pop
movsl
shrb
jmp
mov
and
pop
psubsb
or
stc
jp
loope
jp
mov
push
sbb
jb
fnsave
mov
mov
fnstsw
cmp
mov
cli
jbe
in
push
loop
mov
mov
fiaddl
nop
divl
jecxz
imul
push
inc
lea
cwtl
testl
fdivr
ret
jno
pop
repz
xchg
xchg
das
outsb
add
mov
xchg
xor
icebp
sbb
jns
push
xchg
pop
dec
pop
and
fistpll
xor
mov
int3
repz
dec
ljmp
ds
sub
dec
int3
pop
push
mov
mov
imul
and
in
jmp
pop
mov
fstl
ffreep
dec
mov
fdivrl
or
icebp
inc
or
cmp
aam
push
test
fildl
xchg
push
mov
xchg
popa
add
add
ss
add
fldcw
mov
push
xor
jge
mov
dec
mov
mov
mov
clc
dec
mov
fimuls
jns
les
jne
mov
and
mov
fsubs
ja
popa
cli
stos
dec
dec
dec
mov
sahf
in
filds
je
pusha
add
in
inc
aas
test
pusha
stos
sbb
int3
sbb
ret
sub
outsl
sub
jne
dec
pop
mov
xor
adc
leave
adc
popf
xchg
je
sub
or
sbb
ret
mov
aad
cmpsb
xchg
sub
push
fnsave
aaa
inc
xchg
ret
clc
sub
jnp
in
inc
sub
loopne
push
fnstsw
xchg
ds
jecxz
or
in
loop
and
dec
mov
or
lea
push
out
push
and
dec
out
out
xlat
pop
or
sub
or
xchg
and
add
xchg
jge
stc
pop
and
mov
push
lock
rol
mov
add
je
or
fidivrl
or
pop
sub
bound
repnz
pop
push
inc
outsb
icebp
pop
jo
xchg
sbb
lock
jo
push
pushf
dec
repnz
nop
jle
cli
push
xor
jmp
adc
rorb
icebp
pop
inc
mov
and
stc
lock
gs
test
mov
fstpt
sarl
jge
sub
xchg
cwtl
jbe
je
out
mov
cmpsl
add
lret
fstpl
fisttps
imul
jg
adc
in
mov
cmc
mov
outsl
inc
dec
fwait
loope
jne
outsl
mov
mov
push
ja
sbb
sub
jecxz
popf
cmp
xor
or
adcl
fnstsw
add
mov
xchg
ss
mov
push
xor
jle
adc
xchg
push
adc
test
mov
xchg
sbb
push
movq
mov
mov
aas
cli
movsl
cmpsl
pop
roll
mov
xor
ret
repnz
or
rcrb
clc
in
mov
fwait
or
stc
fnstsw
mov
pushf
add
jl
mov
mov
addr16
xchg
insb
pop
repnz
clc
aaa
mov
lcall
sbb
lret
sub
xor
cmpb
fidivs
mov
mov
mov
xchg
fwait
or
mov
or
popa
and
int3
push
cmpsb
cmc
and
jno
test
hlt
clc
and
popf
packssdw
jns
pop
sub
xor
xor
lds
add
jg
sysret
sub
out
outsl
loopne
push
flds
jle
inc
arpl
push
push
or
xlat
popa
push
jb
popa
repnz
jge
xchg
mov
stos
push
sahf
cmc
push
cmc
hlt
xchg
jo
push
sbb
aas
arpl
js
xor
and
jnp
ljmp
xor
lods
jne
and
inc
outsb
shrl
js
inc
sub
fdivrp
inc
mov
in
add
jnp
push
shlb
test
or
int
xchg
push
pop
mov
idiv
dec
add
into
push
xor
jae
sbb
mov
mov
iret
cld
aas
mov
cmp
inc
cld
inc
xlat
outsl
sbb
push
inc
movsb
leave
mov
mov
or
sub
jns
pop
test
push
pusha
sub
lds
ljmp
push
cvtpi2ps
and
popf
jae
mov
sbb
and
dec
add
mov
fistpll
inc
orb
sub
iret
mov
push
faddl
or
push
adc
mov
xchg
push
sub
arpl
repnz
scas
add
and
push
addr16
repz
fstps
shrl
iret
push
loop
outsl
xor
lods
jbe
popa
sbb
cld
dec
scas
pop
sub
or
and
inc
out
push
loope
xor
or
pusha
cmc
sub
out
cltd
imul
push
shlb
sub
sub
les
out
pusha
leave
cmc
adc
jl
rorb
mov
dec
lods
xchg
lahf
lds
jp
push
fsubr
push
loope
js
sbb
sub
mov
sbb
out
subb
jbe
pop
lcall
bound
sarl
jle
pusha
xchg
sub
pushf
or
jnp
add
dec
cltd
in
outsl
data16
jmp
xchg
icebp
pop
inc
test
push
jmp
and
leave
pop
scas
dec
ret
incl
insl
movsl
rcrl
test
fwait
icebp
aam
addr16
pmullw
lret
adc
dec
xor
pusha
int
shlb
push
sbb
ja
lea
cltd
dec
daa
fiaddl
xor
mov
pusha
mov
lcall
jnp
add
fsubrl
inc
push
pop
pushf
xchg
jecxz
xor
lcall
jecxz
rcll
mov
lods
ret
jno
imul
push
cwtl
fwait
inc
sub
and
dec
pop
pop
xchg
mov
cld
jmp
pop
sarb
ret
das
outsb
or
loopne
out
push
loopne
fcomi
lea
in
ja
cmpl
mov
mov
sub
and
sbb
paddw
loopne
adc
add
ljmp
cmp
repz
jo
dec
lahf
repnz
lock
pop
imul
mov
rol
sbb
jmp
outsb
push
outsl
or
scas
mov
mov
pop
cmp
in
and
lds
mov
dec
test
inc
xor
push
loopne
mov
nop
push
outsl
jbe
and
in
mov
leave
movb
repz
or
push
icebp
arpl
jno
test
js
aaa
loope
mov
mov
test
jg
outsb
mov
sti
fsubrl
into
jae
fwait
push
shr
insl
pop
cmp
dec
test
dec
enter
xchg
arpl
mov
aas
jb
fcomip
roll
js
sarl
cmpsl
mov
xchg
sbb
loopne
sub
add
pop
imul
adc
sub
push
cmp
sub
outsb
jne
mov
inc
scas
sbb
sub
xchg
testl
loope
shrb
jecxz
mov
in
pusha
mov
jne
aas
and
js
lret
iret
sbb
lods
pop
sbb
inc
movsl
pushl
rcrb
jbe
sbb
push
stos
pop
enter
dec
xchg
dec
add
sti
inc
jae
cmpsb
and
arpl
sub
sub
sub
inc
out
add
enter
cmc
leave
lea
xchg
cmp
movsb
iret
bound
stos
out
xchg
push
imul
call
mov
sahf
ja
out
or
xor
shlb
in
dec
ss
push
pop
cmp
push
arpl
push
popl
mov
jecxz
jb
rclb
xor
ss
mov
mov
stos
cli
sarl
mov
cld
xchg
fcmovne
mov
data16
jbe
fcmovb
out
out
sahf
adcl
and
mov
sbb
push
in
pop
jns
decl
js
cmp
dec
pop
imul
loopne
mov
pusha
scas
aad
cli
dec
inc
movsb
gs
shrl
mov
adcb
dec
sbb
sti
inc
sub
fldlg2
cmpsl
cwtl
sti
jge
add
sub
pop
in
mov
dec
out
rorl
leave
lea
sub
dec
data16
adc
sub
lcall
sbb
jle
lds
add
push
out
dec
xor
or
jecxz
mov
fwait
test
ret
xchg
daa
pop
mov
repz
dec
lods
cmpsb
ss
xchg
mov
loop
dec
loop
and
fdivs
mov
in
movl
xor
iret
loopne
push
cltd
pop
xchg
pop
xchg
jns
push
loope
sub
mov
mov
xlat
adc
sbb
cli
add
mov
xor
es
andl
pop
push
inc
lret
push
test
push
jne
daa
xchg
int3
xchg
loop
test
or
je
loope
push
mov
dec
inc
pop
lods
inc
pop
mov
add
outsl
daa
and
mov
pop
or
insb
pop
loopne
data16
push
or
loope
add
repz
ret
icebp
ret
xchg
loope
jo
cs
push
jmp
into
out
mov
and
xchg
popf
xor
decl
clc
xor
roll
outsb
fptan
pop
lds
nop
dec
adcb
mov
xor
pop
hlt
cltd
mov
dec
and
int3
push
pop
pop
add
sti
cmpsl
fists
xor
out
cmp
sbb
fsubrp
mov
cmp
lock
cwtl
xchg
lea
leave
lret
adc
jl
pusha
fbld
xor
adc
xchg
push
pop
lock
mov
mov
movsl
pop
lods
gs
inc
inc
rorb
mov
xor
mov
call
sbb
jmp
fsubl
popa
aaa
add
mov
jecxz
sbb
rolb
mov
lret
pop
push
lds
into
test
cmp
push
adc
push
fcmovb
enter
sahf
mov
and
adc
imul
and
ljmp
inc
mov
sbb
mov
mov
iret
lahf
scas
mov
shrb
xchg
icebp
xor
mov
sub
xchg
mov
inc
outsb
test
iret
mov
stos
sbb
mov
fstp
jmp
xor
fldt
repnz
pushf
push
bound
stos
dec
imul
jg
mov
xchg
push
sbb
or
sub
stos
lea
cmp
jl
cmp
cmp
jbe
es
das
mov
or
mov
scas
adc
push
sahf
inc
into
adc
and
in
jae
sbb
push
jno
fldl
adcl
cli
pop
popf
mov
lds
and
scas
fidivrs
es
loopne
out
mov
xchg
xor
lock
sub
adc
inc
stc
sub
in
jg
push
jo
and
outsl
xor
mov
jl
add
sub
out
mov
xchg
or
sbb
cmpsl
mov
movsb
add
xchg
mov
inc
cmp
inc
fisubs
sti
push
xlat
out
push
xchg
xlat
imul
or
call
addr16
adc
adc
mov
jl
xchg
push
sahf
push
out
jl
adc
jne
jmp
cltd
in
mov
das
cs
lret
jge
add
pop
adc
subb
sti
clc
pusha
mov
mov
cmp
push
shr
mov
or
and
sti
push
xor
adc
and
in
jmp
adc
add
push
insl
outsb
sub
lret
xor
pop
in
jle
cmpsb
aaa
lret
mov
in
subl
mov
cmp
hlt
icebp
ret
out
lds
jle
sub
sbb
cs
test
test
lods
aad
cmpsb
into
mov
sbb
int3
lods
fcmovnbe
inc
js
in
sub
xchg
jae
fimuls
push
or
cmc
bound
inc
test
int
fisttps
xchg
out
mov
imul
add
pop
sahf
xchg
test
adc
adc
movsl
add
mov
xchg
fcoms
push
or
decb
xor
push
mov
inc
cmp
sbb
mov
fs
cmpsl
out
dec
inc
ret
jno
mov
mov
enter
ret
ljmp
pop
sbb
and
xor
scas
out
jae
sbb
inc
adc
mov
shrl
xchg
arpl
lds
loop
je
pop
out
out
mov
inc
adc
push
inc
ret
cmpsl
push
lret
insb
jne
divb
pop
push
icebp
ret
jle
xchg
sub
cmp
andl
xchg
mov
out
test
cmc
ret
inc
mov
lock
sbb
pop
aad
ja
imul
mov
mov
xchg
adc
rorl
push
add
inc
call
dec
push
fucomip
mov
out
dec
icebp
mov
scas
rcrb
cmpsb
and
daa
sub
xchg
call
or
jge
push
sbb
arpl
inc
xchg
or
mov
scas
xchg
mov
xchg
fprem1
mov
daa
mov
dec
fcmovu
je
lds
in
add
sbb
pop
dec
inc
dec
das
jp
pop
jo
mov
bound
aam
jmp
pop
in
je
jnp
push
pusha
fldenv
test
adc
pop
scas
repnz
adc
xor
aad
or
imull
cmpsb
sub
into
pop
cld
add
lock
jne
gs
sbb
sbb
push
hlt
cwtl
or
mov
testl
mov
push
shlb
inc
pop
mov
adc
inc
movsl
dec
dec
notl
fs
stos
rcrl
mov
in
aad
mov
fneni(8087
lock
sbb
jecxz
roll
push
lock
sbbb
xor
mov
mov
adc
jo
jp
cmp
cmp
mov
iret
aam
mov
mov
mov
dec
or
jp
mov
adc
jb
dec
outsl
lcall
fwait
and
jmp
lock
dec
inc
mov
test
push
add
push
jle
mov
lods
int3
sbb
adc
inc
pop
xor
fcomps
es
mov
dec
testl
jge
pushw
fsub
rcrl
aam
mov
jmp
jecxz
dec
jno
xchg
jo
mov
jnp
shlb
pop
and
ljmp
xchg
rol
movsb
loope
sbb
push
es
pop
shll
addr16
jmp
int
ret
popf
xchg
scas
and
add
mov
ret
test
push
scas
enter
mov
cmp
outsb
push
push
jns
cmp
gs
shrl
stos
aam
test
jmp
mov
xchg
jmp
xchg
xor
lret
adc
cli
das
outsb
cmp
mov
push
mov
out
outsl
call
int
push
and
mov
iret
ja
push
data16
int
jne
movsb
mov
push
jb
or
les
mov
ficoml
xor
or
iret
ret
insl
sub
cld
loopne
int
mov
jbe
rcrl
pop
mov
mov
fs
stos
cmc
sbb
data16
pop
lods
aaa
mov
inc
mov
icebp
scas
fnstcw
mov
das
inc
lods
xchg
mov
mov
cmpsb
or
in
out
out
xchg
inc
dec
mov
sub
xchg
pop
cmp
out
or
bound
xchg
fsubl
cmp
lea
mov
and
xor
xchg
and
push
mov
dec
mov
dec
clc
mov
mov
mov
jecxz
scas
dec
xchg
dec
je
mov
loope
dec
insb
fisubrl
mov
inc
dec
test
inc
lods
insl
out
xchg
stos
and
loopne
enter
pusha
data16
pop
lahf
loop
aaa
push
fsubrl
push
mov
mov
and
add
xor
xor
mov
and
dec
xchg
imull
mov
cmovs
cmpsb
xchg
sahf
out
mov
inc
jp
fldt
popl
inc
add
mov
adc
cmp
mov
lret
add
add
xchg
daa
test
xchg
jecxz
fcomip
push
push
mov
xchg
mov
into
push
les
divb
popa
pusha
dec
mov
jge
jnp
push
lahf
adcl
repnz
dec
into
jg
ret
cmc
test
xor
mov
inc
adc
cmpsb
cwtl
pop
xlat
hlt
push
pop
pop
lcall
xor
sub
pop
sbb
and
inc
pop
sbb
lea
out
nop
shll
cmp
and
dec
or
pop
int
jae
sarb
jo
push
ds
out
fcompl
faddl
mov
and
jnp
sahf
xchg
push
pop
inc
test
lcall
and
xchg
and
sub
dec
cmpsw
test
daa
andl
rcl
stc
push
int
aad
cmp
sbbb
inc
jl
or
mov
mov
decl
cmc
aad
fnstsw
sbb
mov
push
fmulp
std
shl
enter
mov
adc
adc
lcall
push
sub
xchg
outsl
lcall
imul
mov
inc
test
decb
out
ret
xchg
pop
xor
mov
rorl
sti
ss
test
out
sub
cmp
clc
loope
xchg
cmp
adc
and
into
test
outsb
les
sub
jne
das
stc
cmpl
push
dec
sub
fsubrs
mov
add
dec
aad
orb
mov
test
in
dec
push
int
sbb
mov
dec
and
fidivrs
push
pop
xorb
sub
add
push
sar
adc
inc
ret
stc
cmp
int
out
xor
out
out
xor
out
xchg
pop
pop
enter
jb
cltd
jae
and
daa
out
popf
sub
in
cmpsb
fs
std
pop
testb
lret
out
pushf
ljmp
cmp
jle
sub
adc
std
clc
cmc
or
adc
lock
dec
cmp
adc
repnz
fnsave
in
sti
fadds
or
or
jns
sbb
xchg
fwait
int3
xor
and
rcll
les
shl
sub
out
test
sbbb
xchg
jbe
jp
dec
enter
int3
xor
sbb
add
pop
scas
pop
faddl
mov
fdivrl
addr16
xorb
mov
cmpsl
xchg
pop
jae
loopne
sahf
mov
mov
adc
lret
cli
data16
fstpl
dec
orb
pop
sub
scas
ljmp
popf
ds
mov
mov
xorb
jae
cmp
and
pushf
sub
jecxz
inc
loop
imul
or
nop
xchg
rcrb
pushf
xchg
push
lret
repnz
jl
mov
hlt
int3
adc
inc
push
xchg
xchg
pop
rep
jne
pop
jo
sbb
daa
lods
dec
pop
mov
outsb
dec
fsubrs
cltd
je
and
mov
ss
into
outsb
mov
pop
add
mov
pop
inc
lret
pop
inc
gs
es
rcll
std
lea
dec
pop
xlat
insb
sub
jo
push
inc
jge
jnp
cltd
inc
jnp
sarb
cmp
rorl
push
dec
bnd
adc
sbb
roll
push
fmuls
dec
popf
xchg
cmc
fadd
mov
mov
pop
adc
in
jbe
testl
push
imul
add
out
sbb
pop
xchg
jle
orl
adc
popa
test
gs
scas
inc
mov
loop
jmp
xchg
jae
sub
xor
ret
repnz
cld
data16
mov
jg
imul
mov
pop
xchg
inc
or
or
push
jb
add
stos
adc
fldl
sub
sub
dec
icebp
jb
and
sub
roll
es
push
divb
pop
sar
data16
popa
or
addr16
mov
jmp
cmp
inc
fsubl
leave
jmp
rorl
hlt
push
lret
adc
sub
imul
and
and
add
ret
and
pushf
adc
fs
stos
cmp
mov
test
iret
xor
push
popf
adc
stc
mov
cmpsb
test
push
xlat
mov
pop
cmp
nop
xchg
fwait
push
repz
mov
in
xor
jle
mov
lahf
inc
lret
cmpsl
test
cmp
cmp
pop
scas
stos
sub
fcoms
xchg
in
inc
shll
ret
mov
outsl
loope
adc
lds
push
add
dec
adc
inc
mov
or
aad
inc
dec
jmp
cmpsl
add
int
btr
fists
mov
fwait
sub
roll
xchg
rcrl
mov
imul
mov
jbe
mov
cs
jne
mov
outsb
mov
inc
aad
das
inc
push
bound
xchg
cmp
test
dec
dec
ja
push
les
in
mov
push
push
cmp
jnp
call
adc
xchg
cmp
jmp
mov
jmp
in
jne
or
push
popa
adc
daa
repnz
sbb
push
les
inc
sbb
jne
adc
push
das
pause
lret
insl
lods
xchg
push
and
repz
ficompl
mov
jo
mov
push
movl
mov
test
sub
xchg
jnp
mov
mov
sahf
jo
or
je
iret
scas
xor
add
mov
xor
fisttpll
mov
xor
aas
pop
xchg
in
jle
rclb
lret
mov
fisubl
sahf
in
js
mov
jae
sub
xchg
pop
dec
lods
mov
push
add
jbe
pop
mov
lret
jl
repnz
xchg
leave
sbb
ret
mov
mov
popf
shll
mov
in
sbb
dec
push
cld
adc
mov
in
xor
mov
fstl
mov
movsb
ja
dec
sub
in
sbb
xchg
jp
sub
es
ja
sbb
jecxz
mov
test
lret
push
xor
into
pop
jl
xlat
std
jecxz
rep
or
sbb
lods
into
jp
pushf
add
dec
mov
sbb
sub
jo
int
pop
les
rcl
push
movsl
mov
lea
cs
lret
out
vorps
and
push
loope
lds
jmp
mov
mov
pop
insb
push
sbb
push
aaa
movsl
cli
pop
fildll
imul
mov
gs
dec
addl
adc
loopne
or
pop
jno
and
xor
int3
cmp
xor
subb
cmp
xchg
enter
into
pop
jecxz
cmpsb
jb
out
pop
sti
out
mov
mov
cmpsl
jmp
scas
adc
ja
push
xor
and
inc
and
scas
sbb
cmp
dec
sbb
dec
push
pusha
cli
mov
xor
dec
outsl
mov
jl
std
cmp
xor
pusha
int
lods
mov
lret
adc
mov
iret
std
xchg
rcrb
arpl
adc
loop
cmpb
add
cmpl
mov
xor
jl
jmp
xchg
push
dec
xchg
es
dec
push
jge
push
lfs
pop
ds
xlat
lcall
jno
lods
popa
xchg
mov
sarb
fxch
rcrb
sbb
loop
inc
fisubs
mov
inc
jae
sbb
add
jp
add
pop
sub
outsl
pop
pop
add
stos
mov
int
mov
test
jb
jnp
xchg
mov
jmp
std
jne
pop
shlb
jb
xchg
lea
cmp
mov
xlat
push
mov
jb
jbe
cmp
ss
xchg
in
add
sub
repz
popa
loopne
or
adc
dec
mov
aam
adc
ret
lcall
cwtl
popf
test
das
test
pop
or
push
lock
ret
inc
cmp
lcall
daa
inc
cmp
lea
imul
in
jo
sub
mov
adc
add
popf
aad
es
icebp
mov
repz
fiaddl
pop
aad
xor
shrl
test
stos
mov
in
mov
stos
push
adcb
push
add
add
add
in
call
in
add
xchg
scas
push
dec
leave
fisubrl
mov
inc
sbb
dec
adc
das
fsubrs
ds
shr
test
fsts
pushf
push
push
scas
pop
test
mov
inc
pop
data16
enter
xor
in
mov
imul
and
pop
outsl
lock
jo
scas
leave
iret
fsubs
xchg
add
sbb
mov
data16
push
sub
and
sbb
pop
pusha
xchg
repz
mov
les
ljmp
clc
cmp
fucomi
inc
loop
push
mov
and
js
inc
inc
sbb
inc
and
pop
movsb
jb
dec
sbb
stos
inc
int3
enter
xchg
xchg
fs
addb
jecxz
mov
xchg
fldcw
push
inc
xchg
inc
pop
in
xchg
mov
mov
sub
pop
push
inc
mov
push
outsb
imul
push
shll
rcl
ljmp
jno
ss
fwait
pop
popf
and
mov
mov
xchg
rcll
test
push
jb
and
jmp
outsl
data16
in
cmpsb
lods
mov
dec
out
lahf
cmc
pop
dec
rcll
sub
mov
pop
es
mov
out
ljmp
das
in
popa
mov
cmp
cld
lret
subl
xor
sti
xorb
cli
jne
aaa
and
int3
xchg
lock
sahf
jne
popf
sub
cmp
fwait
push
inc
mov
mov
pop
adc
cltd
jge
testb
jns
cwtl
mov
les
push
xor
mov
xor
testl
mov
mov
sbb
shll
imul
rol
ljmp
push
add
loopne
sahf
movsl
mov
testb
cmp
or
sbb
pop
or
jbe
data16
jecxz
mov
xchg
scas
fiaddl
jb
xchg
pop
and
xchg
jns
dec
out
dec
popa
push
push
mov
xchg
pop
enter
popf
ds
fstps
xchg
mov
scas
in
ss
push
fsub
xorl
ja
bound
ret
push
xchg
xor
int3
pop
fcompl
scas
sub
dec
loopne
scas
int
das
in
pusha
mov
das
aam
lods
data16
jp
add
inc
xor
mov
stc
adc
sbb
popf
jnp
enter
pop
lds
mov
jecxz
fs
sbbl
dec
mov
add
ret
pop
movsl
shll
xor
inc
orl
jmp
pop
mov
mov
sahf
pop
stos
out
push
aad
leave
jmp
sub
scas
and
cmp
pop
aaa
xorb
sbb
xchg
outsl
subl
out
roll
fisubl
and
dec
jae,pn
stos
insb
mov
jmp
mov
mov
jmp
sub
lahf
ds
fmul
xor
mov
fucom
mov
or
jno
add
cmp
add
push
aaa
movsl
stc
sti
ret
push
sub
mov
and
push
insb
xchg
jmp
add
lods
in
xchg
and
mov
inc
lods
rep
pusha
push
mov
call
arpl
push
ret
jne
xchg
movsb
pushf
xchg
add
jo
jp,pt
lret
out
bound
mov
shll
inc
or
mov
mov
into
aam
pop
sub
imul
xlat
daa
mov
sub
sahf
adc
mov
sbb
sub
in
xchg
xchg
inc
cwtl
aad
sub
xorb
test
pop
aaa
add
divb
push
cmp
lds
xchg
js
xor
popa
inc
fstpt
push
sbb
pop
stos
push
push
test
dec
loope
inc
mov
rcrl
xchg
cmp
and
or
addr16
imull
roll
xor
inc
shrb
or
adc
push
sub
mov
sub
jg
jle
or
mov
mov
xor
pusha
xor
xchg
ss
lock
sub
or
test
testl
mov
cmp
movsl
call
les
jp
cld
dec
mov
push
sbb
leave
and
pop
jp
in
add
lret
sti
std
add
adc
scas
fstpl
push
sub
sbb
ds
out
leave
mov
fidivrs
sbb
inc
pop
ljmp
movsb
mov
xorl
in
xchg
popf
js
cltd
xor
int3
loop
sbb
and
xor
and
pop
pop
mov
ds
aaa
dec
lods
mov
das
dec
ja
add
outsb
xor
rolb
cli
data16
cmp
imul
push
mov
add
imulb
sub
mov
movl
sbb
adc
mov
pusha
sub
out
test
mov
sub
xchg
jnp
cli
mov
mov
mov
lcall
movb
shrl
mov
jo
jne
pop
push
sub
mov
stc
movsl
add
add
pop
inc
mov
lods
adc
stos
jae
stc
push
mov
adc
pop
jae
xlat
lea
xor
push
inc
pushf
or
adc
push
leave
daa
sub
sti
cmp
xor
dec
dec
sbb
jecxz
scas
lcall
rorl
shlb
repnz
mov
jne
je,pt
mov
mov
into
dec
xor
inc
out
cli
fbld
out
mov
inc
sbb
sbb
scas
pusha
cs
sbb
in
and
imul
call
jg
pop
dec
fs
mov
inc
and
cltd
dec
sbb
arpl
js
ret
mov
dec
mov
shrl
popa
cmpb
sub
sarb
scas
sub
mov
or
out
jp
dec
jns
pop
daa
mov
adc
add
push
sub
sub
call
adc
mov
mov
repz
ret
cmp
xlat
loop
sub
pop
dec
jne
pop
push
je
icebp
sbb
rorb
cltd
push
xchg
dec
mov
pop
out
adcl
mov
cmpsl
movsl
in
mov
cs
or
sbb
jmp
scas
std
push
cmp
push
adc
loopne
cmpsl
fs
xchg
mov
arpl
lcall
sub
scas
daa
xchg
xor
xchg
jge
mov
dec
fists
dec
mov
mov
mov
ljmp
jp
mov
mov
mov
lds
loope
arpl
iret
inc
cmc
adc
mov
mov
loopne
push
ficomps
call
dec
sub
cmpl
aad
push
aaa
div
shll
sbb
out
movsb
xchg
aas
inc
push
rcrb
outsl
stos
out
jb
and
bndstx
test
arpl
outsb
out
pop
sbb
movsl
dec
aad
dec
xor
in
push
int3
sub
rorb
divb
loope
mov
outsl
sub
inc
mov
or
enter
loop
xchg
xlat
dec
jp
icebp
add
push
inc
cmp
sti
push
add
sbb
and
add
cmpsb
push
xor
push
stos
ffreep
mov
dec
adc
sbb
dec
rcr
sub
sub
jecxz
adc
push
aad
push
test
mov
pop
mov
lret
lcall
fwait
dec
push
ja
lahf
cld
mov
stos
xor
adc
jg
nop
outsb
pop
outsl
mov
adc
cli
addr16
sbb
jle
add
pmullw
stc
mov
mov
pop
cmp
cmp
fsubl
aaa
jge
int
int
rcll
popa
pop
jo
rcrl
dec
mov
cmpsb
xor
inc
dec
xor
dec
ds
pop
cwtl
cltd
out
ja
stc
jns
leave
pop
ja,pn
fwait
jmp
testb
rcrl
sub
xchg
inc
cmp
adc
pop
push
inc
jmp
mov
ror
add
rcll
insl
int3
jno
lcall
sub
addr16
cmp
adc
jae
movsl
pop
or
push
jmp
movsl
xchg
and
xor
pushf
test
das
ret
jle
cmp
push
pop
sub
sbb
jl
into
push
iret
into
jb
in
imul
mov
mov
xlat
sbb
sbb
ljmp
shll
into
stos
add
stc
or
in
mov
or
imul
push
mov
xor
int
mov
pop
mov
insb
xor
in
mov
lretw
lret
lods
dec
dec
jg
dec
push
int
and
pop
addr16
push
xor
scas
lock
mov
imul
lds
lret
xor
add
lahf
inc
roll
sbbl
sahf
inc
dec
mov
adc
inc
push
and
dec
scas
out
cmpsb
cmc
inc
mov
sub
loopne
pop
insb
iret
jnp
fldcw
mov
scas
ficoml
cmp
cmp
jo
dec
aaa
popa
mov
clc
adc
push
push
or
sbb
js
cmp
and
sub
test
ret
insb
call
iret
aas
and
std
clc
fisttps
nop
mov
xor
std
fstps
mov
imul
inc
lea
jbe
orb
cli
arpl
mov
ja
les
add
mov
jmp
push
pop
imul
ja
jge
or
popa
mov
xlat
movsb
lret
push
mov
mov
push
push
sbb
ljmp
adc
shrb
dec
scas
xor
scas
hlt
sbb
mov
nop
push
lods
iret
aas
mov
fiaddl
loope
sbbl
addr16
sub
jne
mov
jle
or
shll
xor
pop
test
mov
pop
sub
pop
or
sarl
addr16
cmp
dec
aaa
popa
mov
clc
adc
push
adc
dec
lret
ret
sub
ret
mov
lods
scas
cmp
imul
jmp
jge
dec
outsl
xor
daa
std
in
sti
fmull
pop
or
cmp
orl
fcoms
push
imul
mov
pushf
je
ret
xor
push
add
jmp
jno
and
add
fs
js
das
sbb
sarl
lret
hlt
arpl
rorb
adc
lods
aas
jnp
pop
mov
pop
add
mov
testb
fimull
dec
cmp
adc
adc
rorl
sub
adc
fs
dec
mov
xor
push
or
stos
test
xchg
mov
aaa
mov
mov
sub
mov
aaa
jno
adc
pop
andl
add
adc
negb
jnp
stos
cmpsb
mov
popf
fadds
repz
call
cmp
sbb
arpl
add
ret
mov
cmp
mov
pop
cs
dec
fdivrl
jo
ret
scas
dec
in
cmp
int3
in
adc
pop
inc
dec
mov
arpl
jg
and
push
lds
adc
std
sbb
mov
push
jae
add
jo
and
inc
push
xchg
dec
adc
and
adc
fcmovnbe
aad
outsb
cmp
mov
sarl
jp
test
push
movsb
out
xchg
dec
fisubrl
mov
ret
mov
loopne
out
fabs
and
sub
xchg
and
cmpsl
insb
fldenv
iret
and
xchg
xor
adc
es
ret
jle
fildl
shlb
sbb
and
test
mov
out
ficompl
out
push
sbb
nop
pop
fcoml
andl
sub
lods
cmpl
pushl
aas
adc
add
je
or
push
mov
mov
mov
pop
add
cmp
jmp
dec
aas
adc
icebp
aam
push
shll
adc
jbe
xchg
test
lock
dec
mov
out
xchg
jge
enter
cmp
dec
dec
inc
sbb
in
jno
rcrb
and
jp
push
in
shr
sbb
adc
dec
in
ss
pop
push
jns
pop
scas
lock
stos
shrb
xor
es
lods
stos
sarl
push
mov
inc
sti
or
popa
lock
movsl
stc
les
mov
repz
push
push
xchg
sbb
fstpl
jo
sbbl
pop
mov
sahf
out
mov
fiaddl
int
dec
push
in
ret
inc
jo
hlt
xor
adc
pop
loope
cmp
sub
or
cmp
cmpsb
jo
fiadds
mov
cmp
hlt
out
pop
lock
pop
test
test
cmc
jecxz
xchg
jae
pop
pop
scas
add
cmpsb
ja
or
mov
or
and
test
dec
jge
mov
pop
icebp
popa
cmpsl
sbb
daa
inc
jecxz
sub
jmp
mov
addr16
lcall
pop
iret
add
not
jl
es
xor
push
and
inc
popa
lock
sarb
and
push
jge
inc
xor
cmp
or
ljmp
mov
mov
lea
leave
fsubrs
sti
out
test
icebp
xorb
call
lahf
clc
and
dec
frstor
adc
cmp
data16
fs
adc
ret
adc
loope
adc
aam
movsl
nop
lods
ds
loope
add
pop
out
out
push
mov
inc
lahf
jbe
dec
mov
lret
fstpl
pop
adc
inc
jp
movb
cmc
adc
jle
ret
imul
sub
popa
mov
add
iret
mov
mov
lea
add
popf
pop
mov
xor
add
xor
add
in
xor
add
add
xchg
in
add
testl
les
les
add
inc
add
fwait
stc
push
add
std
add
mov
add
add
sti
add
cmpsb
add
add
imul
mov
or
add
or
outsl
jns
ss
insb
add
jmp
adc
xchg
ja
mov
or
mov
add
mov
ud0
push
xchg
add
push
loopne
xor
xor
mov
add
push
push
roll
xor
cltd
adc
ret
add
test
mov
add
out
xchg
dec
mov
clc
inc
add
jp
pop
daa
add
dec
jae
iret
adc
add
dec
mov
insl
leave
jns
stos
sbb
test
add
stos
int3
add
or
cmpb
xchg
push
bound
add
aad
push
cli
adc
sbb
mov
lahf
das
add
popa
mov
cli
xchg
xor
jmp
call
testl
push
movsb
mov
pop
bnd
lcall
cli
add
sbb
notl
jno
mov
decb
into
rolb
lods
test
loope
add
lret
add
adc
add
out
movsl
pop
cmp
inc
or
loop
testl
xor
es
aam
in
cmp
lahf
js
sbb
test
les
lea
add
stc
stc
or
xor
add
mov
adc
add
push
mov
sbb
add
cwtl
movsb
pop
bound
testl
mov
cmp
xchg
scas
xor
pop
enter
or
and
add
or
cwtl
and
into
popa
clc
sahf
xor
jp
add
lret
xchg
add
add
filds
add
add
sbb
push
push
adc
mov
add
add
iret
decl
sub
inc
test
cli
arpl
mov
jmp
dec
in
push
out
add
sbb
sahf
imul
dec
fs
add
adcb
dec
mov
dec
arpl
sahf
pop
js
mov
inc
mov
sbb
inc
loope
add
mov
rclb
icebp
mov
lock
mov
sbb
clc
outsl
mov
add
add
xor
orl
dec
add
sbb
dec
dec
mov
test
inc
aad
add
aad
dec
push
add
imul
inc
in
add
add
jb
add
ret
add
sub
and
jbe
inc
jne
rcrb
gs
add
xchg
stc
scas
stos
repnz
jbe
sldt
add
add
sbb
loopne
insl
add
pop
and
or
add
add
ror
jne
add
arpl
dec
rcll
popf
out
add
add
inc
xor
stos
add
int
mov
xchg
add
add
fstpl
cmpeqps
pop
push
pop
ds
mov
inc
call
adc
add
les
lret
stc
and
or
inc
add
imul
dec
mov
add
lahf
xor
add
jno
aas
mov
loopne
lea
adc
daa
popa
add
je
cmpxchg
sub
add
jne
cmp
popf
jmp
mov
jno
test
cmp
mov
jmp
hlt
mov
push
jno
mov
and
jbe
add
adc
add
imul
movsb
hlt
mov
in
les
loop
mov
add
add
mov
cmp
bound
dec
xchg
enter
add
fdivl
dec
sbb
jecxz
add
sub
sarb
fmull
testl
in
out
add
pop
mov
pop
sub
sti
add
sub
push
jne
loop
inc
insl
sub
mov
jne
rcrb
fistpll
adcb
out
mov
repz
and
add
fadds
add
jne
xchg
add
adc
shl
add
cmp
addr16
add
ficoml
add
inc
icebp
add
add
pop
push
mov
push
sub
stos
pop
inc
add
inc
fiaddl
sbb
test
rorl
mov
inc
popa
cmp
xchg
adc
add
add
stc
loop
push
and
sbb
hlt
loop
fisttps
dec
fs
faddl
add
cli
push
pop
jb
mov
int3
testl
sub
add
sub
adc
mov
or
movsb
inc
out
add
add
lds
add
fsubrs
add
popf
movsl
in
ss
mov
aaa
jecxz
sbb
iret
xchg
enter
add
imul
add
adc
add
mull
enter
add
adc
test
xchg
filds
rol
add
adc
out
out
stc
jle
lds
jnp
mov
lahf
lcall
sbb
push
xchg
add
mov
pop
scas
jae
add
xlat
rcll
insb
aaa
adc
lcall
or
popf
in
inc
mov
fisubrl
inc
clc
add
or
push
addr16
imul
testb
push
fs
es
dec
je
lods
cmpl
andl
and
inc
adc
pop
sbb
les
add
andb
lds
add
mov
lods
out
sbb
and
jbe
jno
add
add
dec
jg
push
ja
in
pop
stos
add
mov
lods
fdiv
pop
inc
sub
or
jno
ljmp
push
repnz
add
add
xchg
dec
jge
popf
in
filds
push
jnp
jge
dec
popf
enter
add
xor
popa
add
dec
rcrb
pop
jge
arpl
xor
add
add
fcmovne
jnp
sti
or
add
and
lock
sub
xchg
decb
push
mov
add
pop
push
adc
and
cmpsl
cmp
add
sti
mov
addr16
out
push
mov
adc
outsb
xor
out
xchg
add
adc
xchg
xchg
mov
xchg
lahf
rorl
stc
push
mov
sahf
stc
mov
add
add
push
enter
loope
dec
test
montmul
cmpsb
add
add
and
add
mov
push
pop
loopne
and
hlt
clc
mov
add
add
lods
mov
or
mov
jge,pn
and
xor
mov
cmp
add
add
and
mov
cli
xchg
repz
jg
cmp
mov
cltd
add
mov
add
cmpsl
push
mov
sbb
add
decb
push
in
add
cmp
iret
mov
add
add
cld
rolb
add
or
add
add
cs
fcomps
push
mov
add
add
in
adcb
repz
add
add
add
arpl
add
mov
cld
cmp
je
sbb
add
out
aad
push
imul
out
jmp
dec
cmp
mov
add
inc
movsb
and
add
daa
push
add
cs
and
adc
clc
pop
ljmp
movsl
scas
mov
cli
xor
cmp
sbb
mov
add
es
pop
fs
sub
testl
dec
or
aaa
scas
jl
cmp
cltd
add
imul
cmp
add
inc
mov
repnz
pop
std
xchg
mov
mov
ficompl
sbb
add
sbb
cmp
sahf
xchg
cmp
xor
add
pop
and
sub
add
faddl
pop
aam
pop
sbb
add
insb
jl
test
int
and
sbb
std
mov
das
sti
jbe
add
cs
lds
dec
cmp
jg
xor
addl
jne
lcall
xlat
add
aam
hlt
sub
test
rcl
push
push
add
movb
jb
imul
add
add
imul
add
icebp
pushf
add
sti
nop
gs
add
loope
lret
inc
sub
loopne
mov
lods
outsb
aam
adc
decb
lea
add
shlb
xchg
fwait
movsb
push
in
jae
bound
lock
fisubs
sub
jl
arpl
lods
cmp
lcall
out
mov
cmp
mov
ljmp
jecxz
stos
stos
movsl
pop
add
stos
sbb
sbb
mov
lret
fstps
jne
pop
add
jg
mov
js
and
xchg
testl
mov
add
add
mov
int3
add
int3
les
push
add
rcrb
lock
ljmp
ljmp
push
sbb
fcomps
jbe
lods
icebp
bound
adc
mov
mov
xchg
or
lahf
in
or
mov
int
std
add
push
ljmp
push
ds
lret
stos
dec
int
add
mov
ljmp
int3
inc
mov
lea
xor
adc
std
cmp
aam
push
mov
dec
sbb
enter
add
mov
out
pop
test
icebp
push
mov
lock
cmpsb
popf
push
jge
cmp
jp
pop
push
pop
fsts
ds
push
push
dec
sti
in
test
imul
mov
mov
rcr
add
sub
cltd
or
sbb
out
inc
bound
and
aas
and
lret
add
pop
scas
filds
pop
jbe
test
fildll
andb
mov
add
xchg
stos
pushf
popf
mov
ss
jo
enter
cmpsb
cwtl
fisttpll
cmp
mov
out
cmc
sub
cmp
pop
ljmp
out
pop
sub
sahf
add
repz
pusha
shll
xor
dec
mov
dec
jecxz
push
dec
cmp
dec
dec
les
seto
add
jbe
push
mov
or
adc
inc
xchg
test
popf
into
mov
sbbl
imul
inc
xchg
sub
pusha
addr16
add
add
add
cmpxchg
shl
push
and
inc
xor
lea
add
jb
mov
jns
add
int
sahf
jbe
sub
push
jmp
enter
push
outsb
add
add
in
cmp
sbb
mov
in
outsl
xchg
dec
inc
stos
shll
je
pop
jae
jb
adc
test
notb
movsl
outsb
popa
notl
cmp
adc
add
xor
jg
or
repz
insl
mov
sbb
adc
add
enter
push
mov
jne
push
int3
or
mov
aam
mov
pop
cmp
cmp
pop
add
testb
roll
push
push
lahf
stc
inc
andl
out
mov
je
jge
add
pop
jb
shlb
fiaddl
add
test
adc
aas
stos
mov
add
inc
fisubrl
call
ret
and
jns
js
jno
into
mov
add
jmp
in
sahf
xchg
mov
dec
xchg
xor
negl
pusha
je
mov
add
dec
mov
sub
push
mov
bound
xor
and
rolb
add
sbb
stc
jbe
daa
and
test
inc
and
adc
mov
add
je
lods
xchg
loopne
lret
add
add
add
inc
inc
push
int3
stos
mov
lahf
add
es
or
aaa
mov
add
add
in
mov
sbb
add
jg
jnp
mov
subb
rolb
add
sub
sbb
add
and
in
push
lock
add
loopne
in
jae
and
fcoms
das
add
add
cs
data16
out
jl
mov
je
out
cmpsl
adc
mov
mov
test
int
jo
xchg
add
outsb
ja
cmc
and
jo
cld
add
sub
out
repz
repz
or
add
add
out
sbb
pop
dec
test
sbb
push
or
std
cmp
mov
sub
lods
aaa
push
loope
inc
fs
loope
lds
add
and
in
repz
ja
test
jp
add
pop
popf
push
mov
loop
add
fidivrl
mov
add
add
subb
and
push
pop
mov
popa
aas
aam
js
mov
add
andb
jmp
ljmp
inc
xor
sbb
jle
inc
addl
xchg
lock
sub
lods
pop
xchg
xchg
push
lret
add
pop
aaa
movl
sbb
jno
outsl
pop
cld
aad
out
add
add
clc
cli
out
mov
mov
mov
divl
rolb
add
into
inc
decl
add
dec
mov
jne
test
stc
pop
lahf
mov
sub
les
out
sbb
dec
ss
lea
fmul
mov
add
pop
test
cmp
les
and
cwtl
out
jle
xchg
xchg
jl
mov
sub
hlt
add
jle
repz
add
daa
fwait
xchg
aad
insb
mov
mov
mov
mov
fwait
add
pop
and
and
incb
test
in
adc
les
xchg
lcall
mov
adc
mov
in
adc
jbe
add
mov
add
lahf
sub
lock
jbe
popl
add
notl
mov
add
cmp
fs
add
add
iret
decl
sub
inc
test
jl
frstor
push
push
or
jmp
rcrb
enter
mov
shll
add
lock
mov
ljmp
movsb
dec
cmp
dec
insl
int3
cmp
add
leave
cltd
inc
inc
inc
mov
aad
repz
in
xor
cmpl
or
dec
xchg
xor
jg
inc
repz
lock
add
pusha
cwtl
adc
and
add
add
sahf
adc
inc
dec
xor
push
lds
loop
push
test
push
add
imul
cmp
shll
jns
aas
xor
lret
add
fmull
xchg
jo
xchg
ds
jle
push
ljmp
push
pop
add
add
aam
pop
pop
cmp
push
jns
addb
ljmp
mov
ret
sub
add
xchg
cmp
add
dec
inc
mov
xchg
sub
fs
lock
push
jb
xchg
mov
xchg
iret
lret
inc
fwait
cmpb
test
lret
add
rolb
add
add
lds
push
in
add
dec
das
int
aaa
and
add
stos
mov
add
add
pop
dec
xchg
add
add
dec
fld
dec
add
fs
dec
add
shll
pop
popf
icebp
enter
add
pop
cmp
push
and
cmpsb
mov
dec
adc
xor
movsb
cmp
inc
add
mov
lods
call
add
add
add
jle
and
insb
sar
jecxz
fistpll
popa
in
push
add
arpl
xchg
jge
cltd
in
std
out
add
add
mov
dec
inc
xchg
mov
pop
inc
add
hlt
lods
std
push
pop
add
pop
enter
jmp
mov
and
sahf
or
out
inc
ret
push
mov
ret
sahf
and
pop
cmp
outsl
jge
sub
sbb
loop
dec
iret
arpl
flds
add
int3
inc
insl
aad
test
push
inc
sti
mov
and
and
jno
fisttpl
xchg
bound
xor
into
add
cmpsl
mov
add
std
and
test
xor
outsl
sub
adc
popa
fiadds
add
clc
push
pop
addl
cld
cmp
push
in
sahf
add
adcl
nop
ljmp
mov
int
pop
xchg
aad
add
push
insb
lods
cltd
pushf
lcall
add
data16
mov
or
mov
add
sbb
add
mov
push
add
add
imul
mov
leave
scas
xor
and
add
mov
daa
fwait
pop
jns
add
es
mov
test
add
add
sbb
sbb
add
cmp
enter
add
lock
out
mov
add
mov
push
inc
js
add
mov
add
mov
and
push
add
inc
cmpsb
sbb
or
add
add
add
add
add
push
cmp
add
mov
mov
mov
fwait
add
testl
or
add
in
decl
add
jb
mov
push
ja
dec
xchg
add
out
jmp
add
jl
cmpsl
add
mov
jmp
adc
add
add
call
test
pop
pop
cltd
add
mov
add
xchg
sbb
add
stos
in
cmp
add
or
add
push
xor
lcall
xor
add
mov
push
or
jo
enter
test
and
sbb
aad
test
sub
and
adc
add
add
movsb
data16
mov
add
shll
sub
gs
add
shll
daa
loopne
inc
add
adc
fldcw
xchg
add
bound
mov
or
mov
fmuls
pusha
ja
scas
sub
mov
and
add
mov
add
xchg
popl
sti
push
and
cmp
add
add
gs
icebp
add
mov
bound
add
add
sbb
cmp
and
cmc
inc
or
add
inc
mov
mov
loope
inc
sub
sbbl
pop
dec
and
out
or
add
fsub
in
push
fnstenv
or
sbb
push
mov
stos
bnd
rcrb
jbe
sub
test
add
rclb
pop
mov
xchg
sbb
or
enter
jmp
test
mov
add
mov
cmp
dec
sbb
jno
aas
fadds
lret
add
push
fisttps
jo
or
or
into
fistl
popf
mov
ss
cwtl
jbe
loopne
add
add
push
jge
jle
int
add
add
pop
mulb
push
out
pushf
cmp
es
push
cmp
aam
push
hlt
inc
xchg
dec
ljmp
rcrb
adc
add
dec
add
lods
mov
mov
dec
cld
sbb
fcmovnb
xchg
xchg
xchg
push
cmp
add
jb
mov
inc
inc
lret
cmp
fwait
add
pusha
lret
int3
mov
cld
add
dec
sbb
jmp
add
xchg
enter
pop
lret
cmp
jbe
popf
adc
sub
loopne
mov
or
sub
loope
mov
dec
cwtl
add
add
dec
sbb
add
jl
pop
pop
int3
mov
ljmp
add
inc
jae
dec
adc
aam
jb
xlat
sub
cmpsb
fadds
add
int
scas
out
sbb
fcmove
lcall
nop
xchg
inc
ds
xchg
ret
xchg
loop
inc
add
add
int3
out
adc
and
fs
in
fildll
push
add
xor
add
sti
xor
add
sbb
cmp
pushf
lret
push
loope
call
out
int
aam
add
mov
push
jmp
popf
idivb
sbb
xorl
ljmp
adc
in
cmpsl
movsl
cmp
dec
pushf
pop
jmp
aaa
out
lret
cltd
add
push
push
jg
cmpsb
adc
ret
add
pop
jl
mov
xchg
jae
ja
inc
adc
lea
adc
sub
adc
xchg
or
add
sub
or
std
mov
mov
pop
int
js
sub
out
lcall
dec
cmp
sub
mov
lea
add
lret
fsubs
fsubl
mov
adc
jle
or
xchg
loop
add
sub
mov
add
sbb
xchg
ret
add
mov
push
addb
and
sub
mov
daa
inc
jne
daa
outsl
sbb
add
and
mov
add
stc
mov
mov
lods
or
xchg
mov
loopne
out
add
dec
pop
mov
fbstp
pop
cmp
lods
rolb
add
test
sub
and
jne
inc
mov
mov
cwtl
jg
clc
aad
in
add
faddl
jno
mov
dec
mov
fsubs
hlt
int
xor
add
add
sarb
pop
leave
loope
add
xor
es
pop
mov
les
mov
sub
xor
add
adc
jnp
mov
add
add
jg
cmp
or
adc
sbb
mov
jge
add
popa
jno
sbb
dec
aaa
add
xchg
movsl
in
ffreep
in
add
data16
daa
lea
mov
jp
pop
add
adcb
fcmove
xor
das
fsubrs
add
xchg
jo
lret
pop
mov
jp
mov
bound
dec
mov
mov
clc
push
push
imull
imul
jecxz
or
pop
stos
scas
and
gs
inc
out
adc
inc
sbb
jge
add
ret
mov
popf
pop
mov
add
imul
add
add
and
scas
je
aaa
cwtl
add
add
jge
push
mov
fs
add
sbb
mov
in
fisubrl
add
sbb
mov
add
add
add
sti
popl
out
das
cmpb
add
add
add
add
dec
and
inc
jae
test
repnz
sbb
sbb
jae
lds
imul
xchg
repz
sub
cmp
sbb
pushf
lcall
xlat
jl
mov
fildll
add
lea
ss
cltd
or
mov
and
stc
add
adcb
sub
mov
add
mov
pop
adc
cmp
add
loopne
into
cmpsb
mov
add
add
sbb
daa
mov
inc
loopne
jle
leave
jnp
adc
movl
push
mov
movsl
nop
push
ds
ss
jg
mov
mov
jmp
add
cmp
add
push
inc
test
mov
out
ljmp
aaa
jecxz
and
jge
je
popa
mov
mov
inc
push
es
cmp
jae
int
cwtl
push
stc
pop
aam
dec
adc
loope
push
mov
loope
xor
sub
or
dec
sbb
in
inc
pushf
mov
call
pop
ret
popf
sbb
add
jg
rorb
cvtps2pd
mov
xor
imul
outsb
cmc
in
in
mov
push
or
jle
push
mov
or
xchg
jo
fdivr
add
in
int3
push
add
pop
in
adc
add
push
lret
fwait
test
dec
in
int3
or
add
shll
leave
inc
xorl
push
jle
mov
iret
out
sbb
push
mov
add
popa
lret
or
push
mov
lock
sti
inc
add
sub
mov
mov
sbbl
pop
rcrl
fidivs
roll
cmpb
mov
fmul
cmp
sbb
aas
imul
pop
sub
cmp
push
push
fistl
fisubrl
repz
in
mov
hlt
pop
add
fadd
mov
sbb
adc
js
add
add
pop
es
fldenv
dec
adc
or
fwait
sbb
rolb
add
mov
cmpsl
daa
out
fcmovne
fdivrs
add
imul
inc
add
int
mov
adc
scas
pop
stos
mov
cmp
scas
and
pop
repz
push
mov
push
popf
add
fisttpl
es
cmp
mov
iret
ret
roll
loopne
pushf
lds
stos
mov
test
repz
adc
mov
and
lds
std
jge
mov
and
inc
add
dec
out
leave
fsubr
test
dec
je
xor
xchg
stos
add
sbb
pop
sub
sbb
pop
mov
lret
pop
push
sbb
hlt
and
movsb
or
mov
add
xchg
push
sbb
jne
fs
es
cmp
mov
jae
add
out
aas
cmpsb
imul
and
lea
inc
add
es
inc
and
add
insl
xor
or
lock
test
cmp
cmp
daa
lds
jmp
lret
push
add
sbb
pop
xor
fcomps
imul
pop
shll
sti
cmp
pop
incb
add
sbb
dec
stos
jmp
and
popf
xchg
outsb
out
mov
out
lea
cltd
sub
das
or
jo
sub
les
into
jecxz
sahf
nop
dec
call
inc
push
pop
cltd
mov
dec
lods
jg
jne
or
pushf
scas
iret
es
push
cmp
out
sub
repnz
add
rcll
add
add
jnp
mov
jecxz
dec
scas
fildl
add
mov
bound
add
add
xchg
jbe
loop
add
add
add
or
jbe
movsl
fistpll
scas
xchg
add
add
add
add
inc
out
aas
sarb
xor
popf
inc
jecxz
ret
add
outsb
jns
xor
sbb
movsl
pop
cmp
add
add
xor
push
stos
inc
scas
sub
cmc
jge
mov
test
lahf
and
inc
iret
testl
out
in
rcll
or
add
add
mov
mov
das
ss
push
push
out
pop
in
ret
cmp
pop
xor
out
add
out
xor
sub
fistpl
mov
xchg
data16
sbb
mov
shlb
movsl
imul
sbb
mov
xorl
leave
mov
pushf
and
xor
sub
ret
rcll
mov
ret
dec
xor
aad
scas
adc
push
mov
mov
mov
jo
fnstcw
push
hlt
shll
cltd
add
inc
ja
aaa
cwtl
jp
es
mov
add
out
add
jns
mov
mov
xchg
enter
push
test
xor
imul
test
test
add
add
add
xor
cmp
jbe
pop
push
stos
sbb
or
cmp
mov
cmp
or
push
add
mov
add
inc
adc
add
jae
xor
imul
xorl
pop
pop
push
mov
arpl
push
js
es
lret
and
add
add
std
mull
sbb
sbb
push
push
and
enter
mov
mov
cmp
addr16
sbb
push
ret
xor
jnp
push
movsl
aam
dec
jne
xor
mov
pop
pusha
or
add
add
xor
jge
inc
fwait
xor
es
rcrl
sub
add
out
mov
pop
loope
repnz
fdivp
in
xor
or
mov
cmc
push
shrb
fsts
cmp
add
add
add
lods
into
jne
fadd
adc
xor
inc
cmc
dec
sub
icebp
int3
push
add
dec
mov
loope
jge
sub
sbb
scas
xor
sbb
sbb
xchg
sti
js
setge
in
add
sbb
cmp
push
sar
sbb
int3
sbb
ljmp
inc
jmp
mov
not
cwtl
or
add
adc
mov
sbb
or
add
scas
mov
adc
push
cmp
lcall
mov
push
das
popa
xor
lret
outsl
cmova
push
dec
add
add
sub
add
sbb
cmc
jns
fsubr
sahf
sbb
add
mov
adc
scas
test
or
push
sub
adc
cmc
pop
mov
push
sbbb
mov
jne
ljmp
cmp
dec
shlb
jae
inc
dec
mov
test
lret
push
xchg
andl
xlat
mov
and
test
pop
rorl
jb
mov
xor
fwait
imul
ljmp
dec
icebp
ss
add
mov
arpl
add
add
ret
ret
push
xchg
movsl
stos
xor
adc
add
sub
std
mov
cltd
add
ja
fyl2xp1
in
and
inc
daa
int3
out
mov
cmp
cmp
cli
idivl
cmpsl
inc
pusha
mov
lahf
dec
cmp
jp
xor
push
sub
aad
xor
ret
xchg
iret
sbb
hlt
aas
xchg
dec
fcmovnbe
aaa
loop
sahf
and
inc
mov
inc
dec
push
and
jo
imul
bound
scas
faddl
mov
add
movsl
outsb
popa
xchg
jns
push
pop
xor
ret
fidivrl
insb
ret
fwait
push
lds
iret
mov
mov
xchg
adc
jge
icebp
and
out
ss
mov
sub
cmp
mov
and
jns
add
out
add
ficoml
ret
in
das
into
inc
arpl
in
push
popf
sti
pop
xchg
and
jb,pn
int
xchg
push
dec
adc
call
mov
stos
sti
push
sub
mov
inc
add
mov
xchg
inc
insl
jns
mov
sbb
out
xchg
ret
gs
ret
jns
test
out
ret
fsts
pop
add
call
out
orb
jl
cmpsb
jl
ror
add
sub
repz
mull
add
aas
into
mov
push
mov
test
cmc
fmuls
adc
jmp
and
and
push
frstor
xor
pop
mull
xchg
push
xchg
out
mov
lds
adc
cmc
dec
addr16
jns
jno
pop
cmp
mov
jo
ret
push
in
cltd
jno
inc
xchg
cld
sbb
xchg
or
push
icebp
or
repz
cmp
dec
adc
loopne
sahf
out
pop
and
inc
aaa
fnstsw
fldenv
insb
xchg
enter
xchg
sub
repnz
xchg
int
jbe
pop
das
push
pop
les
mov
push
sbb
mov
in
scas
mov
or
xor
pusha
cwtl
adc
inc
imul
sti
lahf
pop
or
xchg
lea
lea
clc
in
rcrl
dec
stos
jmp
and
in
sbb
int
add
outsb
inc
dec
jbe
nop
and
je
imul
ljmp
inc
add
add
scas
fldenv
lods
push
add
pusha
rcll
or
and
pop
xor
fs
add
xor
mov
inc
xor
dec
dec
int
add
xchg
add
rol
add
add
sahf
cmp
pop
mov
or
in
mov
pop
pop
lahf
xlat
push
adc
mov
and
fcompl
test
test
lds
jns
stos
xchg
pop
push
mov
lods
jne
dec
sub
mov
push
popl
xor
jge
adc
sub
add
dec
scas
sub
dec
lea
sub
jl
imul
or
cmp
mov
mov
adc
pop
push
scas
mov
mov
aam
xchg
out
adc
insb
bswap
mov
add
insl
int
loopne
sbb
imul
mov
cli
stos
std
or
push
and
jb
add
insl
outsb
push
add
push
mov
and
mov
xor
xor
add
push
cltd
rcr
popa
mov
fsubl
inc
dec
mov
xchg
cwtl
inc
dec
enter
push
filds
mov
xor
or
jge
loop
dec
ret
mov
inc
out
cli
pusha
jmp
jnp
dec
sbb
cmpl
dec
add
add
dec
mov
and
addb
je
fnsave
pop
add
dec
inc
fld
in
pop
lock
jbe
mov
xchg
subb
mov
lahf
xor
dec
lea
stc
push
flds
mov
lret
jmp
inc
aas
les
fiaddl
cmp
push
js
xchg
inc
dec
push
rclb
sub
or
inc
push
inc
xchg
popf
cmp
pop
movsl
push
add
mov
push
push
jecxz
jge
add
pushf
inc
mov
or
push
aam
popf
cltd
daa
out
add
mov
or
push
je
aam
add
sarl
push
jbe
in
test
cwtl
es
movl
and
divb
repnz
mov
lcall
inc
add
loopne
subb
add
or
ret
add
mov
sahf
sub
sarb
add
pop
or
mov
add
iret
mov
and
xor
pop
mov
fadd
in
add
fisubrl
or
rcll
add
xlat
sub
call
mov
dec
arpl
add
fimull
loop
push
les
sahf
add
xchg
js
bound
sti
int
lret
xchg
jbe
mov
inc
ja
ljmp
lock
call
dec
bound
fisubrs
or
xlat
sub
pop
cld
jp
xchg
stos
jp
push
jnp
ds
cmc
rsm
sbb
xlat
mov
push
filds
mov
dec
adc
in
sbb
xlat
movsb
jnp
add
les
insb
movsl
add
add
jae
cwtl
fcmove
pop
or
pop
into
lds
dec
call
and
add
fcmove
mov
mov
xchg
adc
fdivl
dec
sbb
xchg
std
pop
pop
add
push
cld
jo
inc
imul
mov
mov
push
sarl
push
mov
push
add
push
shlb
jge
push
jne
xchg
popf
dec
inc
in
out
clc
dec
mov
xchg
push
xchg
pusha
jb
sub
add
shlb
mov
cmp
test
adc
add
int3
mov
add
add
ret
outsl
popa
in
or
inc
add
dec
cmp
out
aas
scas
inc
inc
js
insb
pushf
xchg
mov
fadds
pop
push
stc
sahf
add
add
rcl
nop
pop
jmp
mov
in
xchg
push
iret
in
arpl
stc
jmp
lods
in
and
imul
lods
in
add
pushf
and
push
adc
cmp
sbb
je
add
ss
sbb
jl
scas
inc
mov
mov
add
inc
dec
aad
std
or
mov
sbb
iret
cmp
inc
jne
enter
int
dec
and
push
ljmp
test
xchg
adc
xchg
rolb
cmp
jb
push
push
push
sub
add
or
fnstcw
aam
cmp
add
popa
movsl
xor
call
xchg
xor
jnp
in
das
cmp
jb
adc
popf
stc
lret
inc
lret
add
add
insl
jns
cli
fcmovnbe
sub
popa
push
fcmovnu
cltd
push
xchg
cmc
jno
push
sub
mov
xchg
jns
pop
add
scas
enter
mov
add
add
pop
je
arpl
xchg
dec
push
xchg
cmp
dec
ss
xchg
sbb
lret
add
add
add
pop
ja
sub
push
pop
fnstcw
push
dec
adc
or
add
add
add
frstor
push
and
iret
movl
je
stc
pop
ss
sti
mov
sbb
out
pusha
inc
inc
rclb
xchg
sub
lahf
cmc
out
xor
out
cmp
mov
fsts
stos
js
jbe
faddl
jecxz
add
divl
xchg
lods
enter
aaa
mov
add
add
test
add
faddl
add
loope
dec
jno
mov
fnstcw
add
push
add
jmp
xor
test
mov
js
fcomps
add
in
sbb
dec
mov
insl
jl
mov
cmp
add
jle
fs
mov
add
and
and
pop
fisttpll
clc
add
add
lods
add
add
cmp
or
dec
or
add
xchg
cwtl
push
aam
add
fldpi
call
pop
mov
sub
push
add
test
sti
call
inc
cmp
add
sbb
out
push
sahf
pop
call
fimuls
mov
mov
mov
cli
in
pop
pop
push
fldcw
mov
mov
test
mov
adc
cmc
mov
addr16
jo
add
cmp
add
add
jp
fwait
xor
dec
xor
fsubl
cmp
loope
dec
jb
sbb
lea
loopne
insl
inc
ret
sub
orl
loopne
icebp
sub
js
add
jns
add
insb
jno
push
loopne,pt
hlt
add
add
mov
ror
pop
lea
jae
cwtl
in
mov
fucomi
jmp
pop
push
pop
mov
jge
sub
inc
jg
pop
push
mov
ja
outsb
mov
fwait
dec
pop
cmp
roll
add
add
mov
pushf
inc
jge
mov
lea
movsb
cwtl
xchg
stos
fisubrs
jae
or
pop
sbb
sar
fcoms
mov
sbb
pushl
clc
mov
xor
dec
xor
add
repnz
cld
daa
icebp
pop
shr
cmp
lds
xor
xchg
roll
mov
popf
pop
or
imull
inc
add
add
into
sbb
cltd
jbe
stc
add
out
pop
sub
dec
in
jbe
add
fdivrs
out
sbb
mov
add
mov
or
add
add
outsl
test
nop
add
pop
inc
loopne
js
enter
xchg
push
scas
push
lds
iret
or
or
add
out
int
outsl
ss
or
pop
mov
add
jno
sub
es
pop
jno
ret
cmp
ret
add
push
mov
mov
add
xchg
pop
call
mov
push
mov
mov
shlb
add
arpl
jae
data16
add
lret
mov
cltd
cmp
xchg
loopne
push
add
or
add
xchg
dec
xchg
testb
add
jae
fisttps
add
popf
loopne
and
jg
subl
lcall
inc
xor
mov
add
or
enter
add
lmsw
out
aad
hlt
add
add
or
xchg
cld
add
cmpsb
leave
js
dec
cmpsl
ja
cwtl
jl
push
xchg
ljmp
xchg
lock
mov
pop
add
scas
iret
mov
cmp
jle
arpl
in
mov
add
cmp
xor
add
xor
jp
push
and
mov
rclb
xchg
inc
lret
add
jle
add
cmc
cmpsl
jp
inc
jo
xchg
pushf
push
jne
mov
fildll
push
mov
mov
lret
jns
test
fstpt
mov
scas
testb
movsb
jge
imull
cli
push
cmp
pusha
scas
movsb
ljmp
pop
add
pop
inc
shrl
push
int
lock
faddl
stc
add
in
rolb
adc
insl
dec
push
loop
loope
sbb
inc
scas
sub
loop
push
iret
add
aam
xchg
mov
movsl
pusha
add
stos
out
and
pop
out
xor
lret
add
ss
jecxz
jnp
add
jns
scas
add
jmp
int
lcall
or
enter
outsb
or
inc
divb
xchg
inc
push
push
das
jbe
cmpsb
add
add
sbb
jnp
loopne
cmpsl
lret
or
cltd
add
int3
outsb
lret
out
and
jbe
faddl
xchg
iret
add
inc
lret
mov
xchg
push
mov
mov
mov
push
jnp
push
ljmp
loop
sarl
mov
adc
add
imul
mov
mov
add
mov
and
xchg
lods
aad
gs
add
cs
mov
add
decb
inc
divps
ljmp
sub
shrl
jle
add
add
je
add
fsubs
roll
dec
loopne
pop
mov
adc
cmp
cmp
pop
add
arpl
add
movsl
in
aam
cltd
add
xor
addb
fcoml
inc
sbb
cmp
xor
push
pop
jne
cltd
inc
filds
sub
and
adc
dec
call
sbb
mov
hlt
addr16
push
sbb
sbb
mov
faddl
testl
sbb
fisttpl
add
loopne
outsb
mulb
add
iret
add
add
cld
jg
xor
sub
jnp
sub
lret
mov
xchg
add
ret
add
jmp
fsubs
pop
or
mov
mov
fbld
mov
daa
mov
inc
push
test
or
ljmp
adc
add
add
add
fisubl
mov
stos
scas
inc
add
rolb
dec
mov
add
stos
add
sub
enter
inc
jmp
push
sarl
mov
push
orb
loope
jne
icebp
or
pop
out
push
test
add
and
push
dec
loop
rorl
jmp
mov
dec
mov
jne
icebp
pop
mov
mov
xor
pop
stc
sti
mov
das
jl
divl
mov
ljmp
add
sbb
scas
jge
and
add
movsb
addr16
xchg
and
fucomip
ss
xchg
ds
popa
adc
outsb
jne
sub
pop
add
aaa
mov
cmovb
lea
stos
dec
movb
stos
insb
sub
gs
lret
or
add
sbb
jmp
add
movsl
and
ss
ljmp
testl
mov
lods
mov
hlt
fcomi
add
adc
arpl
cmp
bound
add
pop
aas
and
adc
sbb
mov
mov
inc
sbb
shl
add
pop
add
cmpsl
lds
pop
dec
sub
add
mov
mov
pushf
test
xor
andl
repz
fsts
into
mov
jmp
js
bound
pop
shlb
push
sbb
lea
and
add
add
ljmp
and
popl
xchg
lcall
sti
add
add
cli
add
test
and
pop
cmp
call
sti
mov
arpl
aaa
push
push
jle
mov
add
div
sub
out
ret
jmp
mov
or
imul
add
push
mov
adc
les
add
xchg
mov
xchg
cs
xchg
aaa
outsl
add
add
cwtl
add
lcall
add
cmpsb
xor
push
mov
xchg
andl
cmp
xor
add
inc
in
add
xchg
sbb
in
inc
add
add
enter
mov
add
add
call
inc
add
add
pop
jle
loope
clc
jmp
add
rcl
mov
daa
add
add
xchg
test
pop
aad
add
in
add
add
nop
adc
jl
jae
sbb
add
sarb
and
add
cli
mov
inc
ja
push
movl
aam
sbb
dec
fbld
rolb
add
mov
addl
scas
adc
fstp
popa
jns
pop
mov
add
add
sbb
push
add
es
andl
xor
jecxz
jnp
lret
jb
push
ret
add
fstps
add
rol
repz
fs
jne
fmuls
mov
xlat
mov
shlb
jae
in
cs
and
push
mov
and
cltd
add
add
pop
add
test
inc
add
add
jmp
jb
insl
add
add
call
cmp
add
test
insl
nop
scas
imul
mov
add
add
cmp
fwait
incl
mov
pop
hlt
push
ret
or
pop
imul
jne
lods
sbb
xor
test
scas
or
add
push
push
add
add
jns
and
sbb
and
mov
cmp
in
add
add
outsl
xor
sti
das
or
push
imul
add
jl
scas
aas
stos
add
add
lret
popf
lock
in
inc
lcall
outsb
xchg
mov
mov
xor
push
popf
jo
pop
dec
sbb
mov
add
xor
add
movsb
sahf
fcmovnb
adc
inc
leave
jecxz
push
add
cmpsl
shl
dec
dec
lock
sbb
jg
sub
out
sbb
popa
mov
pcmpgtd
add
cmpsb
outsb
push
jne
push
sub
dec
fwait
sahf
sub
sub
mov
ficoml
ror
ss
pop
clc
push
test
mov
loope
and
add
add
add
lcall
sbbb
sub
test
mov
lea
aaa
xchg
movsb
arpl
cmp
outsb
add
and
or
call
clc
testb
lock
mov
pop
push
ljmp
cmpl
sbb
data16
jne
das
or
add
jl
sarb
sub
cmp
add
add
add
sbb
dec
call
xor
enter
mov
test
ss
cwtl
xor
jne
mov
add
xchg
add
xor
roll
jne
aad
sbbl
jns
pushf
mov
jns
mov
icebp
dec
push
mov
nop
dec
out
insl
cmp
mulb
repnz
add
jne
cmp
add
loopne
xchg
outsl
adc
dec
loopne
insl
adc
add
xor
mov
cmpsb
mov
mov
fwait
cld
push
shll
cltd
cmc
jmp
inc
in
mov
test
mov
stc
jecxz
js
add
add
jb
sbb
ds
push
stos
dec
pop
pop
or
pop
push
popf
jno
lcall
ss
int3
sbb
sub
insb
cmp
add
add
gs
xchg
mov
jnp
mov
loop
xchg
fcompl
sbb
sbb
stos
incb
test
cs
aam
ds
fs
into
rorl
cmp
cmp
pop
xorb
add
push
movsb
jae,pt
outsb
lods
iret
mov
int
dec
popf
and
jl
sbb
lcall
pop
out
movaps
inc
jmp
mov
ret
sti
mov
leave
test
lcall
cmp
dec
mov
or
subl
movsl
stos
das
mov
jnp
dec
pushw
cli
leave
ja
cmpsb
add
add
xlat
mov
sbb
inc
test
dec
out
jns
push
cmp
and
shl
cli
add
jb
aad
mov
mov
mov
adcb
push
jns
add
add
lock
repz
add
xchg
jl
jae
sarl
outsl
popa
push
cs
fldcw
into
adc
push
push
arpl
xchg
mov
rcl
mov
mov
mov
add
mov
aad
inc
test
fmull
fdivrs
lock
mov
add
add
or
mov
xor
add
imul
flds
add
mov
cltd
dec
jno
adc
xlat
popa
sub
loop
mov
mov
add
push
loope
in
add
add
add
jle
outsl
clc
mov
add
shlb
out
add
adc
add
inc
mov
stos
dec
sub
add
imul
dec
lret
add
add
add
push
clc
cmp
arpl
add
jno
sbb
inc
movsl
dec
fs
pop
xchg
add
cld
popa
dec
js
push
mov
bound
ficoml
add
shl
dec
fidivrs
loopne
add
cld
mov
push
mov
add
sub
test
adc
arpl
xchg
xor
out
push
imul
loopne
addr16
add
xchg
sub
jl
cld
jnp
mov
mov
add
xchg
jae
movsb
cmp
add
xchg
add
dec
inc
lds
add
add
pusha
cmp
add
fwait
add
loopne
sub
rol
or
dec
js
or
fcoml
jno
insl
aaa
sub
mov
add
loop
mov
out
pop
cmp
insl
unpckhps
add
add
cmc
pop
add
jne
fdivs
lcall
or
add
fidivs
adc
add
inc
mov
rol
add
add
addb
sub
outsb
cmc
dec
add
add
fcomps
iret
fildll
push
mov
mov
sbb
jo
mov
fistps
lret
test
jns
push
xor
shlb
shl
xchg
in
lods
dec
xchg
int3
mov
mov
sbb
lcall
cs
js
mov
sub
jp
add
or
add
je
aaa
mov
or
pop
es
pop
cmc
in
add
negb
sbb
arpl
call
xchg
add
repz
mov
rolb
xchg
add
bound
adc
pop
mov
jnp
sti
cmp
mov
push
push
push
push
faddl
add
ja
incb
add
push
in
movsb
int3
test
add
es
add
jb
mov
add
push
jno
jb
adc
inc
add
scas
xor
xchg
setb
mov
and
push
add
mov
add
jl
int
mov
inc
dec
in
sbbb
or
add
fsubl
dec
inc
aas
pop
xor
imul
jmp
movsl
push
fstl
push
arpl
mov
push
pop
pop
dec
xor
jnp
sarb
jle
push
lea
add
sub
imul
push
sub
jbe
fdiv
bound
mov
ja
push
out
add
mov
cs
movsb
add
cmp
and
inc
or
and
sbb
jnp
sbb
jle
add
add
push
popl
or
nop
loope
pop
jecxz
mov
stos
arpl
and
mov
push
mov
lds
adc
rorl
jno
sub
in
sub
add
add
xor
cmp
cld
rcrl
in
scas
jle
stos
hlt
mov
sub
std
sub
repnz
mov
or
push
popf
add
add
divl
lret
andb
cli
jb
mov
sbb
divb
sbb
xchg
or
push
addr16
push
call
sahf
add
pop
mov
jne
push
ljmp
cmc
sti
popf
dec
pushl
add
adc
add
dec
sbb
je
sbb
pusha
inc
shll
rcrl
and
add
add
jo
sbb
roll
add
add
mov
insl
add
add
call
test
pop
pop
xchg
jbe
jns
xchg
jo
sbb
repz
mov
add
data16
add
dec
out
jle
test
jno
jmp
dec
scas
je
mov
push
dec
jmp
mov
push
mov
sbbl
add
adc
fistpl
sbb
mov
sbb
stos
hlt
mov
or
or
fwait
add
add
out
or
push
jle
push
xor
cmp
and
cmp
nop/reserved
push
mov
fidivrs
scas
loopne
imul
push
add
add
cwtl
imull
hlt
mov
loop
jmp
movsl
cltd
cmpsb
adc
cmp
loopne
pop
push
aaa
fnstenv
lea
xchg
inc
movsl
lret
call
jb
mov
jnp
cmc
std
jp
flds
leave
out
push
arpl
testl
lahf
mov
les
fwait
shl
cmpl
or
fdivrs
xlat
add
add
sub
jnp
rclb
push
sub
mov
jo
mov
lods
pop
cmp
add
mov
loop
sbb
add
add
fisubrl
add
add
mov
fsubs
inc
jbe
and
sbb
cli
stos
inc
inc
in
cwtl
mov
add
mov
xchg
iret
insb
movsl
fidivl
jb
mov
add
jne
movsb
jg
xor
xor
dec
dec
ret
outsb
dec
sbb
push
jne
or
adc
and
ret
fisubrs
shl
push
out
mov
sub
mov
sahf
xchg
cmp
jno
cwtl
jb
cmp
dec
xor
sbb
add
push
fstpl
popa
push
in
cli
call
sbb
shrb
cli
ret
sbb
xchg
push
dec
cmpsb
xor
into
js
int
int3
dec
dec
sub
sti
adc
xchg
inc
inc
fnsave
aaa
cmpsl
fucomip
cs
repnz
das
mov
jge
jg
loop
jbe
clc
add
imul
lock
add
test
push
inc
repz
jg
lahf
cmp
add
xlat
lcall
adc
inc
push
add
add
scas
dec
push
jmp
ljmp
dec
xor
add
add
in
dec
popf
out
xchg
xchg
dec
fistl
add
rol
not
faddl
mov
jnp
add
enter
flds
add
sahf
int3
mov
add
cli
icebp
sbb
dec
add
add
popa
add
bound
mov
es
jnp
jmp
cmp
out
mov
fs
popa
adc
test
add
jmp
or
scas
jl
xchg
add
add
rclb
mov
repz
mov
repnz
cmp
inc
xchg
xchg
mov
jp
loope
push
in
push
lahf
das
xchg
outsl
inc
ja
pop
xor
add
push
jle
adc
jbe
in
nop
xor
mov
jnp
rclb
repnz
roll
push
inc
jmp
cld
or
pop
sbb
lods
out
push
arpl
fwait
pop
dec
adc
add
add
pusha
jns
fidivl
xor
fistps
mov
outsl
mov
lcall
outsl
xor
out
push
push
sbb
cmpsl
jecxz
add
cmpl
mov
iret
lds
add
xchg
xchg
jno
pop
and
scas
mov
sbb
xchg
or
dec
add
add
imul
and
enter
add
add
dec
or
cmp
cmpsb
or
fs
add
pop
int3
add
mov
popa
sub
icebp
jns
xor
push
cli
mov
jg
pop
cmp
inc
xchg
addl
mov
adc
into
pop
out
add
pop
icebp
je
sbb
jecxz
js
shlb
cli
cmpsl
add
in
loope
loop
add
sbb
dec
push
mov
shl
xchg
int
les
call
lock
dec
cmpsb
add
add
push
pop
adc
push
mov
add
add
int3
mov
sbb
fs
hlt
jne
adc
mov
pop
inc
sub
xchg
dec
call
js
dec
data16
adc
jb
les
add
fstpl
add
add
sahf
add
add
pop
add
enter
leave
add
add
xor
fbld
dec
push
pop
es
cld
inc
and
xor
add
add
push
add
add
jns
mov
mov
push
sarl
adc
loop
mov
mov
xlat
xchg
and
mov
rolb
add
aaa
jae
fwait
jo
adc
daa
jle
inc
mov
jne
sbb
loope
and
clc
ret
insb
xchg
dec
inc
scas
xchg
cmc
ja
dec
jno
lret
daa
mov
sbb
loope
cmpsb
call
jae
icebp
icebp
add
dec
test
cmp
lea
out
mov
or
mov
out
add
test
sub
addl
jmp
in
test
sbb
add
dec
add
xchg
mov
push
jg
add
xor
push
cmp
push
add
add
sar
cmp
cmpsb
gs
movsb
mov
mov
pop
sub
cwtl
pop
fwait
xor
rolb
filds
push
sub
jle
add
scas
mov
dec
into
incl
cmp
sub
add
daa
mov
inc
loopne
inc
ds
jnp
cmc
jp
jbe
mov
add
loope
and
cmc
mov
adc
mov
pop
sti
or
sahf
mov
jne
shll
xchg
add
cmp
mov
xor
sbb
jp
dec
and
pop
add
add
sbb
in
push
dec
ds
cwtl
fcmove
or
aaa
xor
mov
jae
add
cwtl
pushf
and
jne
pusha
std
inc
mov
adc
sub
sbb
movsl
mov
add
push
cmpsl
fs
xchg
jbe
fdivrl
loope
mov
mov
outsb
cvtps2pd
int
jae
add
sete
mov
repnz
pop
inc
repz
lods
xor
add
mov
xor
pop
xchg
ss
and
ljmp
insl
add
es
add
push
daa
in
and
push
int3
inc
mov
addr16
mov
aam
pop
ror
out
in
scas
fwait
inc
sbb
rorb
jns
fiadds
in
push
fisttpl
dec
cmp
sahf
test
call
jne
subl
into
cmp
mov
inc
clc
stos
in
mov
dec
fistl
xor
cmp
push
mov
mov
sbb
jbe
loope
add
add
add
stos
or
push
dec
cmpsb
push
aas
mov
cmc
pop
add
mov
xlat
jbe
aas
aas
xchg
dec
lret
sub
scas
or
sub
jl
xchg
adc
fistl
or
addb
add
ljmp
add
adc
adc
xchg
sarb
inc
mov
fmuls
push
push
and
mov
rcrb
cmp
mov
loope
outsb
ja
lahf
xchg
rcrb
push
and
enter
mov
xor
imul
push
lods
cltd
add
mov
push
in
dec
push
and
push
iret
add
jl
push
lcall
sub
imul
add
imul
add
jmp
jl
add
cmc
je
pop
or
add
sbb
ljmp
add
add
jns
inc
inc
repz
andl
in
jb
push
xor
jns
in
mov
xchg
add
ljmp
cmpsb
cltd
int
aas
jo
sbb
push
jge
dec
call
inc
jmp
add
xlat
testb
push
shl
mov
push
mov
dec
add
inc
loope
dec
repnz
cmpl
mov
add
add
jns
pop
int3
pop
shlb
push
ficomps
add
push
push
cmp
add
jnp
enter
rolb
lods
add
in
add
add
out
setl
and
pusha
shr
sbb
add
pop
or
stos
inc
add
shl
mov
xlat
xor
movsb
repnz
add
jmp
ljmp
lahf
loopne
jle
cmp
cmpsb
cs
iret
add
pop
push
clc
fmul
push
xor
mov
cld
cmp
icebp
sbbl
and
add
iret
xor
push
gs
sub
push
cmp
add
fisubl
int3
mov
pop
out
mov
test
ret
cli
ljmp
mull
add
add
or
int3
dec
push
xor
jnp
mov
mov
add
std
addr16
dec
mov
popa
jae
popf
jno
add
ja
add
stos
orl
popf
and
add
sub
add
mov
subl
jae
sub
daa
imul
ds
xchg
xor
jg
ljmp
mov
ss
movsl
addr16
test
mov
jnp
stos
or
loop
add
inc
test
stos
sbb
sarb
push
mov
in
arpl
inc
addl
in
xchg
out
in
cwtl
xchg
lods
and
dec
sbb
movsb
push
les
in
aas
pop
int3
fisttpl
cmp
add
stos
ss
mov
lret
icebp
sub
add
jg
daa
cmpsb
mov
push
ds
adc
xorl
cld
outsl
and
ljmp
pop
jno
add
lret
inc
or
popf
sarb
xchg
sub
add
and
imul
add
add
std
push
fs
out
add
mov
lahf
push
std
inc
inc
jo
add
ljmp
jno
add
shrl
or
test
cmp
sub
jl
sbb
and
xchg
jl
cld
jnp
out
pop
pop
or
out
pop
fldenv
daa
jle
mov
jmp
and
cmpsl
scas
mov
lahf
aaa
sahf
xchg
mov
daa
and
and
call
xchg
jne
push
inc
inc
mov
adc
shl
idivl
outsl
jge
add
push
sub
mov
aam
mov
add
shl
out
push
mov
in
xor
in
mov
dec
and
decb
fwait
pop
mov
das
enter
xor
ja
cmp
push
adc
aam
sub
cld
push
fists
adc
sbb
int
pop
fs
or
popf
jae
push
mov
loope
ds
fistl
push
popa
or
jae
sub
ret
in
int3
jne
xchg
add
dec
adc
sub
jo
lds
xchg
add
mov
or
sti
mov
mov
hlt
loopne
xor
jecxz
cmpsb
hlt
add
xor
movsb
mov
add
xorl
and
push
sbb
sub
ret
std
push
push
pop
jo
push
adc
adc
xchg
and
add
daa
or
add
xor
xor
xchg
ret
pop
jge
inc
dec
shll
push
jp
jae
jne
push
sub
inc
fistpll
adc
add
adc
xchg
pop
rorb
mov
lret
add
add
insb
or
mov
add
jle
inc
jg
add
into
xor
pop
dec
add
shlb
sbb
add
shll
add
inc
add
or
and
sbb
jl
imul
daa
test
dec
stos
shll
loopew
test
xor
push
jae
out
xorb
jo
movsl
sbb
add
push
stos
inc
lea
scas
adc
xorl
mov
repnz
sarb
outsl
push
inc
pushf
in
lds
xchg
outsb
out
or
shl
mov
add
mov
insb
test
fdivr
sahf
js
jae
lret
mov
das
push
mov
xor
add
jmp
jne
repz
mov
inc
cmpsb
iret
in
xchg
mov
cld
cwtl
push
mov
cs
push
sarl
add
mov
sub
jecxz
loopne
sti
int3
in
lcall
xor
xchg
push
aam
or
add
imull
sti
mov
dec
leave
mov
sbb
out
mull
pushf
test
jge
aaa
int3
add
imul
je
rorl
mov
clc
push
xor
imul
add
mov
scas
bound
add
adc
mov
mov
ljmp
add
aaa
push
add
mov
mov
addr16
sub
fwait
mov
cmp
bound
add
add
xor
add
add
out
dec
ja
daa
hlt
mov
loope
sbb
add
add
push
loope
push
add
dec
sbb
inc
shr
jge
mov
sti
daa
or
inc
movsb
hlt
push
popf
and
je
iret
pop
out
js
mov
in
fiadds
fcoms
sub
cli
add
enter
push
loop
out
cltd
inc
push
mov
add
mov
imul
lock
add
mov
cmp
inc
cmp
movb
lahf
cmc
outsb
lahf
or
add
gs
add
add
add
sub
xlat
jo
js
call
mov
leave
xor
mov
add
dec
pop
jae
push
cmc
fistpll
jo
or
push
add
mov
cmp
ljmp
add
add
inc
xor
mov
sbb
aam
add
xor
and
divl
push
push
in
mov
xchg
lcall
loopne
adc
xchg
add
add
cmp
and
xchg
sub
inc
shrl
test
pushf
bound
inc
scas
popf
xchg
mov
inc
cmp
inc
lret
jbe
int
or
add
push
iret
lds
mov
outsl
add
sbb
outsb
data16
mov
fwait
sbb
sbb
add
enter
mov
mov
adc
int
addl
add
lods
mov
mov
sbbb
and
test
xchg
sahf
pushf
dec
add
add
add
pop
fs
movsl
push
shl
add
aad
xor
push
stos
iret
movsb
adcl
repz
add
cmpb
fstps
outsb
lds
add
xchg
and
and
add
add
dec
xchg
lret
inc
loopne
mov
pop
add
popf
xchg
cmp
movsl
pop
jmp
orl
movsl
push
jb
add
add
add
pusha
mov
push
dec
loope
fistps
insl
pop
fwait
mov
xlat
sbb
cmp
les
das
xchg
sub
repz
jbe
mov
es
iret
imul
xchg
and
push
dec
fsubs
imul
lret
xor
sbb
and
lahf
into
inc
out
lds
roll
or
dec
leave
into
cs
mov
cwtl
cmp
test
push
fabs
adc
mov
call
push
fs
xchg
add
add
addb
add
mov
fdivrs
jmp
aam
js
push
icebp
lret
add
dec
imul
into
shll
aas
scas
in
cmp
arpl
add
add
and
popa
mov
imul
out
movsl
cld
xor
xchg
xchg
call
sahf
jnp,pt
daa
adc
jne
cwtl
leave
mov
cld
shl
sbb
filds
sbb
pop
lcall
test
lods
neg
testl
add
and
ljmp
cmpsb
cmp
inc
mull
jmp
hlt
pushf
xchg
cltd
xor
notb
repnz
push
mov
mov
pusha
ror
xchg
stos
mov
pop
rorb
in
addb
add
add
sub
negl
mov
lahf
add
dec
jnp
insb
jae
sti
xchg
lods
dec
leave
push
shll
mov
mov
or
test
shll
mov
mov
aam
mov
jmp
movsl
clc
add
push
mov
lret
in
lock
iret
cmpsl
push
fwait
enter
jge
hlt
sbb
xchg
scas
pop
dec
repz
dec
sbb
xorb
sbb
pop
xor
pop
into
pushf
fsubrs
outsl
xor
idivl
bound
sahf
add
add
push
loop
add
push
or
shrb
push
mov
or
into
lcall
stos
lret
leave
xchg
scas
jno
xor
mov
adc
sub
popf
push
inc
nop
mov
lret
push
push
adc
rol
lds
iret
cltd
ljmp
dec
sbb
adc
cmp
cmp
das
inc
fstpl
pop
shrl
pusha
sbb
xchg
lret
cmp
or
ljmp
xchg
test
icebp
cli
adc
add
pop
lock
pushf
inc
popf
arpl
push
jns
inc
push
out
icebp
stos
cli
cmp
rorb
mov
andl
sti
xor
add
out
inc
dec
pop
icebp
cwtl
cmpsb
fcoms
mov
or
out
or
xchg
jg
jno
das
jl
imulb
pop
data16
jp
mov
lret
pop
jnp
add
insl
xor
scas
jae
xchg
add
add
xchg
insb
xor
add
test
sub
pop
add
daa
lahf
fisubrs
lcall
out
xlat
and
add
mov
adc
aaa
dec
cmp
pop
movsb
add
leave
mov
sbbl
popf
xchg
add
jne
sub
dec
push
movsb
fistpl
jb
test
xchg
lcall
rolb
add
aaa
xchg
jnp
jecxz
mov
outsl
add
add
mov
clc
push
mov
add
push
sbb
push
fwait
decl
add
mov
popf
lret
test
negl
jns,pt
add
in
mov
xor
sbb
dec
and
sub
loope
push
mov
jne
push
mov
cmp
adc
lds
xchg
push
inc
icebp
ljmp
dec
adc
pop
nop
cmp
fidivrs
arpl
jl
sbb
dec
sbb
in
jg
pop
inc
pop
test
sbb
leave
dec
in
dec
cmp
daa
hlt
sbb
lcall
popf
in
fmulp
sbb
xlat
mov
cmp
inc
sub
mov
cwtl
fcmove
pop
mov
xor
test
fstpt
daa
jbe
fiaddl
push
jae
imul
insb
popa
adc
or
cmpsl
jno
daa
mov
arpl
lahf
add
push
insb
add
repnz
es
push
mov
fists
push
sbbb
push
dec
add
ret
mov
xchg
jb
cmp
push
adc
xchg
sub
popf
mov
add
add
sbb
decl
add
add
sbb
add
test
cmp
add
stos
inc
and
cs
add
add
xor
mov
add
add
lods
es
scas
inc
les
add
add
inc
mov
pop
add
add
mov
inc
and
add
ljmp
mov
add
push
decl
add
add
stc
add
xchg
and
ds
movsl
cs
jg
jle
cmp
js
stos
sbb
addr16
add
adc
jne
mov
jmp
xorb
or
mov
add
or
sub
jmp
aaa
inc
fdivrl
or
jb
scas
iret
mov
xor
int
es
ds
add
enter
sahf
sahf
push
call
add
stos
sbb
pop
shrl
enter
repz
popf
inc
cmp
adc
int
jp
xor
inc
push
les
xchg
add
test
jae
dec
mov
and
pop
add
add
add
fsubs
aas
add
cmc
fsubrl
mov
out
sub
into
pusha
ljmp
add
and
popa
mov
insb
dec
into
ficoms
jns
clc
sub
ret
cs
dec
out
and
jl
icebp
push
ficoms
aad
lcall
inc
mov
fadd
mov
daa
adc
xchg
fisubrs
fcoml
mov
call
outsl
je
xchg
shrl
rcrl
pop
addr16
lret
lcall
mov
jmp
cmpsb
jnp
movsb
in
sub
adc
fmull
jecxz
test
push
lahf
nop
test
add
add
frstor
repz
arpl
lock
mov
add
and
test
cmp
ss
adc
outsb
push
fisttps
sub
scas
xor
xor
jecxz
sub
xor
cld
sahf
push
mov
stos
adc
add
pop
fimull
aad
popa
mov
mov
push
mov
dec
mov
mov
fdivr
lea
cs
mov
dec
je
fistpl
mov
or
inc
and
mov
insl
add
and
test
mov
adc
add
fdivrs
pop
pusha
pop
mov
mov
dec
mov
shlb
add
sbb
nop
push
jl
scas
push
and
pop
aad
xchg
sbb
add
cwtl
pushf
mov
add
add
xor
les
lcall
inc
nop
stos
add
popa
add
jne
into
mov
lds
mov
leave
mov
add
in
add
or
aad
xor
push
call
cs
pop
leave
push
ret
inc
lret
mov
leave
pop
iret
sbb
ljmp
jmp
jmp
dec
icebp
add
shrl
lahf
sbb
popf
and
jae
cs
mov
fdivs
lahf
outsl
imul
vpcmpgtb
clc
lret
or
inc
sahf
leave
stos
add
jae
dec
idiv
add
push
add
xchg
add
test
mov
test
pop
incl
jno
pop
adc
inc
imul
fwait
les
sbb
pushf
xchg
subb
xchg
push
loope
cmp
loope
fstl
insb
dec
or
add
push
pop
aam
imul
push
add
add
cmc
xor
add
cltd
test
add
pushf
in
leave
bnd
pop
stc
add
imul
arpl
insl
fwait
sub
mov
mov
and
mov
cmp
add
sahf
inc
pop
jg
js
sbb
shll
cmp
jl
pop
push
outsb
add
add
sti
rorb
push
adc
add
jl
xor
sahf
js
adcb
xor
out
cwtl
out
add
cld
add
add
test
test
or
cld
xor
inc
in
add
lahf
dec
mov
icebp
add
xorb
cmp
sti
mov
push
ds
mov
adc
icebp
sbb
outsl
stos
mov
push
dec
add
xchg
push
adcl
or
sbb
dec
pusha
lcall
sub
sbb
adc
add
enter
adc
inc
sbb
cmp
and
icebp
adc
icebp
inc
rcrl
rcrb
out
stos
jae
jl
fiaddl
notl
loopne
addb
nop
lret
add
add
test
add
adc
pop
cmc
add
lret
add
bound
popa
add
insb
fcomi
push
lret
push
push
pop
pop
jl
ljmp
or
sbb
lret
pop
mov
mov
int3
sub
mov
pop
sbb
movsl
jo
jl
test
add
add
xor
lods
je
xchg
addb
popf
cmp
incb
mov
js
xor
and
ljmp
lods
mov
sbb
xchg
push
icebp
lcall
push
mov
cmp
aaa
int
dec
inc
xor
shll
mov
scas
jnp
add
test
sti
pop
nop
testb
out
dec
add
aad
test
adc
push
outsl
mov
sub
mov
add
add
mov
mov
jnp
pushf
add
pop
sub
xor
mov
mul
mov
dec
pusha
xchg
add
enter
or
sbb
xchg
shlw
add
add
rclb
pop
add
xorb
clc
sti
add
bound
cmp
dec
mov
jnp
or
jle
adc
in
jo
add
vmwrite
repz
ret
and
repnz
inc
sub
sub
add
and
pusha
xchg
mov
or
ds
push
push
pop
add
pop
mov
rorl
mov
sbb
jo
and
test
push
adc
add
mov
mov
add
push
shr
or
cltd
imul
mov
jmp
inc
add
jno
mov
mov
add
sti
jg
jno
repz
loop
add
add
movsb
add
add
out
cltd
les
ret
dec
xor
push
mov
jecxz
add
add
inc
add
stos
pop
arpl
pusha
mov
inc
add
add
imul
mov
subb
add
add
mov
sbb
aaa
test
aaa
pop
outsl
dec
add
add
dec
in
adc
mov
mov
ljmp
ljmp
push
or
cmp
je
pop
popa
xchg
and
aam
scas
mov
add
add
jns
aaa
and
mov
lret
mov
inc
mov
dec
scas
movsl
in
add
add
imul
push
mov
adc
add
add
not
mov
pop
sbb
lret
test
in
jl
lea
add
mov
add
push
mov
fbld
jg
pop
in
xchg
push
std
dec
adc
aam
scas
orb
stc
adc
push
or
adc
jp
cmpsl
in
addl
ja
repz
add
addr16
cltd
pop
cmp
iret
lcall
imul
lahf
or
cmp
aam
ret
mov
mov
dec
or
mov
scas
sahf
or
mov
push
fbstp
xchg
test
mov
mov
lock
jns
fistpll
mov
std
in
fwait
out
pop
lsl
push
popa
filds
dec
test
mov
or
fstpt
rolb
xor
cwtl
jo
shlb
mov
gs
mov
test
pusha
cmp
loop
je
and
lods
xor
clc
lcall
add
pusha
lahf
rcll
cmp
cmpsb
hlt
adc
jo
inc
adc
xchg
daa
xor
push
jl
test
adc
push
add
cmp
iret
clc
into
add
add
cmpsb
test
scas
addr16
inc
add
add
mov
mov
int3
loop
cmc
sub
push
pop
inc
add
add
add
pop
arpl
cs
cwtl
sbb
sbb
sub
test
add
mov
lds
loopne
add
dec
or
xchg
or
loope
jecxz
cwtl
in
inc
outsl
adc
or
cmpsb
and
jl
mov
enter
adc
testb
xchg
cmpsb
fsubs
cmp
das
mov
lea
lcall
push
arpl
dec
or
in
int3
int3
int3
int3
int3
int3
int3
int3
int3
popf
ds
jecxz
cmp
or
testb
add
mov
fldl
or
mov
loop
xor
xchg
outsl
add
mov
sbb
add
mov
iret
loop
pop
jne
lret
cmp
add
mov
movsb
mov
jns
test
xor
push
sti
or
jb
inc
add
and
sub
jns
jne
dec
jb
mov
xor
mov
add
dec
adc
stc
cld
repnz
cmp
xchg
xchg
outsb
jno
sbbl
or
dec
nop
adc
jbe
and
popf
adc
cmp
pop
sahf
and
inc
js
hlt
xor
popa
add
fs
xchg
bswap
shll
jl
hlt
or
outsb
mov
cmp
enter
cmp
pop
addb
add
fildl
push
hlt
pushf
sbb
adc
aaa
loop
xchg
xchg
pop
pop
xor
dec
dec
fcomps
jae
into
testl
repz
push
sbb
sbbb
xchg
pop
hlt
add
call
lret
icebp
hlt
stc
divl
mov
push
xor
add
add
or
mov
add
stos
add
cs
push
call
adc
add
mov
loop
popf
mov
or
push
xor
les
ds
pop
je
push
mov
bound
jb
sbb
insl
adc
xchg
jle
out
and
inc
pop
mov
add
arpl
cmp
jl
ss
add
fs
xlat
dec
cmp
loope
lods
popf
lret
or
sub
and
inc
jns
and
sub
xor
imul
aam
cli
aaa
cmp
mov
cmp
or
sbb
js
arpl
popf
shrl
ljmp
mulb
mov
scas
call
pop
jg
rorl
fisttps
enter
cmp
sahf
xor
aas
sub
xchg
push
dec
shrl
lret
mov
add
and
dec
fisubrl
add
push
lds
jle
jge
jp
adc
add
xor
cmpsb
pop
loopne
add
and
add
add
mov
cmc
and
scas
lret
lahf
mov
les
lods
and
or
aaa
add
cmp
pop
cmp
mov
dec
pop
add
add
add
cmpsb
ljmp
out
push
or
sub
in
add
ja
and
or
push
lcall
xchg
divb
add
imul
pop
iret
idivl
sti
hlt
add
daa
xchg
add
push
and
mov
xchg
adc
jne
jnp
ss
rol
inc
adc
or
jnp
or
fnstenv
push
dec
sub
shrl
inc
dec
fsubrs
test
notb
ret
add
pop
sbb
cmpsl
cmp
cmpsl
jnp
sbb
sub
mov
leave
cld
orb
jb
dec
sub
outsl
cli
xchg
jp
jnp
jp
add
jb,pn
outsb
shll
add
outsl
pop
std
lret
lods
adc
pop
imul
stos
jb
add
pop
or
inc
mov
cmp
xlat
add
add
jp
fstpt
cmc
sbb
outsb
call
mov
push
mov
lahf
mov
sbb
or
jno
add
add
dec
mov
test
mov
fistpl
sbb
jnp
sti
mov
jb
ds
icebp
add
lock
js
xchg
das
mov
stos
xor
pusha
js
aaa
xor
adc
push
and
dec
push
fnstenv
repz
andb
repz
clc
lret
xchg
mov
ja
push
mov
mov
inc
inc
jle
popa
inc
jno
scas
pop
or
xor
inc
jne
cmp
jns
cmp
cli
cld
repz
ljmp
add
cmp
ret
repnz
ja
jnp
or
test
add
add
add
imul
xchg
cld
add
sti
add
and
and
mov
iret
loop
sbb
sub
mov
push
xchg
and
add
add
addb
hlt
and
inc
jg
mov
dec
dec
sbb
mov
sub
mov
inc
out
sahf
out
dec
mov
pushf
push
mov
sbb
addb
mov
cli
sub
xchg
xchg
jl
in
sbb
mov
movsb
cli
jns
cmp
daa
lds
sbb
jmp
aad
daa
push
push
push
repz
cmp
push
sub
jb
ret
push
mov
adc
fs
mov
adc
or
and
inc
adc
sbb
cmpsb
push
mov
imulb
dec
lcall
xor
dec
adc
jae
lods
aaa
ds
dec
loopne
cmp
fmuls
inc
pusha
pop
or
dec
ror
shl
inc
into
ss
and
xor
xor
lahf
mov
sub
call
mov
fnstsw
and
lcall
push
sub
sbb
mov
push
add
pop
inc
cmp
mov
test
ret
in
cmp
dec
nop
inc
mov
adc
xor
movb
sahf
mov
aad
pop
add
out
jmp
jae
xor
das
jne
shlb
aad
push
ss
mov
sbb
iret
jge
push
mov
add
cltd
mov
inc
xor
int3
push
sarl
sbb
je
add
test
jmp
adc
roll
into
xchg
add
add
inc
call
cmp
dec
int
int
mov
mov
mov
xchg
push
adc
mov
xor
mov
test
add
mov
or
insl
mov
adc
push
enter
pop
xlat
mov
fsubr
cmp
xchg
les
sub
jae
add
dec
mov
sbbl
mov
jnp
add
jb
xchg
cmpsb
test
adc
test
mov
and
mov
cmp
js
and
lret
xor
test
orl
xchg
ss
mov
xchg
out
pop
or
imul
ja
push
and
enter
push
out
insl
jnp
add
mov
add
out
add
addb
pop
testl
mov
jbe
add
inc
movsl
add
addb
cmpb
outsl
arpl
add
mov
lahf
add
andb
pushf
mov
add
aad
add
fs
mov
in
lahf
add
mov
cmp
mov
enter
pushf
test
out
cmp
add
test
mov
push
add
les
add
jnp
add
sub
add
dec
cmp
lds
add
cltd
jmp
dec
and
add
inc
ret
lret
stc
add
xchg
jmp
add
iret
add
dec
repz
imul
xor
add
add
add
into
mov
xorb
xchg
in
scas
notl
fmul
out
jo
mov
add
add
add
das
add
mov
push
xlat
xchg
mov
xchg
icebp
jo
bound
add
pop
iret
dec
cmp
jg
jmp
adc
add
repnz
dec
push
loope
xlat
mov
add
pop
inc
insb
xor
add
add
add
or
fs
cmpb
cltd
xchg
push
lds
popa
leave
nop
in
out
inc
xor
jg
mov
imul
mov
lcall
jecxz
add
in
inc
mov
jp
std
ret
and
xchg
adc
testl
and
andl
outsl
sbbl
mov
push
xchg
dec
pop
fucom
insb
adc
imull
inc
or
fistpl
and
addr16
lds
add
add
add
dec
xchg
repnz
pop
lea
ss
xchg
jbe
out
shr
dec
xor
popf
push
flds
xchg
sub
mov
test
insb
xorl
fs
or
fwait
push
sbb
add
adc
cli
lahf
lret
cmpsb
jge
bound
dec
jge
xchg
mov
and
mov
push
mov
lret
sbb
push
lds
jl
test
cwtl
jle
js
in
pop
push
lods
jno
inc
mov
adc
and
into
xchg
dec
inc
mov
sub
movsb
inc
mov
pop
push
sub
xor
xchg
sbbb
cli
in
sub
daa
iret
dec
xchg
dec
lret
bound
xchg
in
pop
je
xchg
pop
add
clc
ds
cs
cwtl
cmc
in
push
xchg
cmc
xchg
jne
add
imul
push
xor
cmpsb
jecxz
lea
scas
cs
testb
pop
sti
popf
clc
loopne
nop
mov
loope
sub
shr
pop
jl
xchg
int
add
add
add
out
inc
sbb
or
mov
jle
rcr
mov
dec
mov
movsb
fwait
dec
cmp
push
sar
lret
mov
push
adc
insl
mov
cmp
xor
mov
pop
loope
lahf
mov
pop
fdivp
mov
test
test
in
or
mov
add
or
xor
cmp
or
rol
dec
inc
repnz
shr
dec
sub
add
mov
decb
xor
int3
ja
and
jno
fwait
push
call
out
and
add
add
pop
pushf
int3
addr16
jle
xchg
in
pop
adc
jge
jl
pop
cwtl
mov
lods
or
adc
push
subl
or
add
add
mov
int3
push
fnstcw
pushf
stos
adc
xchg
loop
decl
aam
std
sbb
clc
fsub
inc
xor
aam
fldl
mov
leave
adc
add
add
lret
cli
mov
pusha
das
xlat
aad
fs
popa
shl
lods
jo
aad
jbe
dec
push
aam
pushf
test
add
add
cmp
lea
jno
mov
ja
in
pop
out
sahf
cltd
mov
pop
aam
scas
xchg
mov
ja
int
test
jbe
add
add
add
lds
scas
inc
mov
sti
jno
aad
dec
push
sti
dec
fwait
jmp
call
mov
jo
xchg
cmpsl
add
add
inc
out
jo
cmp
push
sahf
mov
out
scas
scas
in
and
ja
pop
fwait
aaa
add
int3
add
add
push
fmull
or
pop
sbb
add
push
lahf
idiv
mov
mov
add
enter
pop
faddp
push
add
add
mov
iret
das
xchg
lret
jbe
lock
ja
stos
or
lcall
icebp
in
fstpl
fldl2t
dec
xor
mov
add
sub
cltd
mov
sahf
in
insb
js
nop
scas
ja
insb
or
mov
movsb
lods
jbe
xorl
fdiv
rcl
ret
or
sbb
lahf
std
jo
xor
dec
lock
sbb
sarl
mov
xor
push
cwtl
xor
movsl
rolb
mov
jne
loop
mov
dec
push
ljmp
inc
adc
and
roll
fistpll
xor
push
pop
fdivl
xor
ret
and
xor
push
pushf
and
mov
insb
mov
add
jnp
sub
add
in
sub
lahf
sbb
or
inc
fsubrl
jno
jmp
out
data16
je
add
iret
les
hlt
icebp
in
fiadds
test
jp
xchg
mov
into
pop
rcrl
and
mov
xchg
mov
add
add
stos
jns
xlat
fildll
cmp
ds
mov
movsb
sbb
rorb
jne
add
add
add
xor
add
lods
imul
in
out
add
pop
cmp
sbb
add
subb
test
sbb
fwait
stos
movl
add
add
add
popa
add
push
adc
add
add
add
js
add
add
add
or
add
add
add
aaa
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
rorl
add
fcmovnb
jbe
and
push
add
mov
add
add
add
add
add
pop
xchg
or
scas
add
sahf
pop
dec
add
add
xlat
lock
adc
cmpsl
push
add
out
push
cmp
fsub
xchg
imul
fiaddl
cmp
imul
stos
jo
adcb
popf
lock
inc
lea
add
mov
std
mov
pop
es
cmc
out
jp
nop
mov
stos
add
add
aas
mov
inc
lret
mov
in
jb
pusha
add
sbb
hlt
jo
or
imul
xchg
rcpps
cld
mov
add
jp
pop
rorb
add
add
add
pop
inc
in
fcomps
pop
sbb
pop
dec
cwtl
xchg
mov
in
ljmp
push
lret
into
lds
cmpsl
inc
add
call
sub
push
cli
das
push
repnz
cmpsl
imul
mov
sbb
popa
stc
leave
test
gs
imul
inc
mov
in
cmp
lods
imul
icebp
xchg
scas
jmp
and
outsb
ret
push
test
add
mov
jno
dec
dec
jl
mov
clc
push
or
add
lea
stos
add
add
jl
push
adc
lret
add
add
add
add
add
add
add
inc
add
add
mov
out
add
ret
add
add
add
add
add
in
mov
mov
add
add
add
add
lea
jbe
push
add
add
add
ja
pop
add
push
add
add
add
add
lods
add
inc
add
add
jmp
call
add
out
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
std
add
add
add
add
mov
add
add
xor
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
add
add
add
xor
ret
add
mov
stos
add
add
add
add
add
add
jae
mov
bound
mov
add
add
add
add
xchg
add
xor
add
add
add
mov
mov
add
add
add
aad
negb
cmpsb
es
and
mov
inc
and
int
jecxz
jle
inc
lahf
lods
adc
inc
sarb
xor
cli
repz
lret
inc
dec
push
test
stc
add
jge
mov
add
shll
subl
mov
arpl
xor
fwait
mov
cs
cltd
mov
push
arpl
lock
sbb
ffree
dec
add
add
add
add
add
add
add
mov
add
lods
add
add
add
add
add
add
add
or
add
add
add
popf
add
xchg
add
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
out
add
add
pop
insl
mov
aaa
mov
icebp
movsb
lods
sub
or
mov
pop
inc
out
fcompl
pop
adc
push
inc
xchg
mov
andb
leave
ljmp
rcr
mov
movsl
lock
pop
or
lds
andl
fs
jbe
push
daa
mov
and
jg
and
mov
lds
inc
pushf
lods
pop
flds
sub
ss
xor
leave
popl
add
add
mov
inc
ljmp
js
adc
cmp
lods
ja
pop
inc
lea
mov
pop
cmp
rcrl
xchg
inc
sti
int3
test
push
inc
dec
test
dec
and
cmp
mov
inc
xor
adc
pop
call
cli
int
daa
sbb
or
and
lret
push
adc
cmp
insb
repnz
loop
push
inc
sub
js
xchg
xchg
add
push
jnp
fstps
movsl
addr16
icebp
pusha
aas
mov
es
xchg
sbb
push
pop
std
lock
ret
mov
sbb
rclb
pop
pushf
loope
mov
out
and
pushf
enter
sbb
cmpsl
les
scas
jne
push
movsl
jbe
stos
sbb
and
rclb
pop
ret
pop
jle
fildl
roll
test
mov
mov
insl
adc
ljmp
xchg
mov
inc
in
pusha
mov
xchg
adc
cmp
xchg
lods
je
sub
dec
addr16
pop
xor
rcrb
xchg
inc
clc
int
test
jge
push
inc
dec
cmpsb
or
out
and
inc
cmp
add
inc
xor
arpl
pop
out
nop
pop
imul
ret
bound
lea
leave
push
pop
cmp
pop
jb
adc
and
nop
add
jo
pop
popf
call
loope
ds
jge
and
adc
jl
inc
xchg
mov
cmc
jecxz
das
cltd
and
push
pop
arpl
std
push
ret
imul
sbb
fwait
pop
rcrl
div
add
dec
test
aam
adc
outsl
lock
pusha
push
sbb
cld
popf
gs
pop
and
stc
xor
repnz
xchg
or
int
xlat
outsl
or
dec
add
lret
in
sub
shl
xchg
cmp
mov
add
push
enter
or
jmp
dec
shll
fldenv
add
les
mov
sbb
push
mov
cmpps
mov
out
jno
inc
mov
cmc
scas
scas
aas
and
lods
pop
mov
icebp
stos
xchg
inc
add
ljmp
jle
jae
add
in
call
cmp
popa
aaa
aas
mov
pop
xchg
out
sbb
dec
jl
stc
mov
icebp
out
and
addr16
enter
sbb
add
sbb
inc
cmpsb
out
xlat
sahf
int
or
cli
icebp
add
dec
stos
push
lret
mov
mov
insl
std
cld
inc
std
gs
and
sub
xchg
clc
test
mov
lret
rolb
call
js
insl
or
cmp
add
lea
or
in
dec
dec
cmpsl
ja
sub
or
loopne
jp
jae
dec
add
add
mov
lods
add
push
lcall
fimull
cmp
je
add
add
mov
add
scas
mov
cltd
cld
lret
lock
add
sahf
mov
jmp
cs
add
add
mov
mov
add
add
lret
ret
push
add
add
in
into
jmp
add
add
lahf
mov
fdivl
add
add
sti
mov
add
mov
mov
cwtl
mov
add
addr16
add
ret
test
add
insb
pop
add
sahf
je
mov
stos
add
roll
and
xchg
add
push
fildl
rclb
lcall
sbb
add
adc
jae
add
add
push
xor
out
dec
out
addl
mov
aaa
sahf
or
loope
mov
mov
add
inc
xchg
lret
cli
add
xor
int3
add
bound
mov
pop
lods
add
add
xorl
xchg
add
add
stc
sti
add
imul
in
pop
push
sbb
inc
test
mov
int3
popa
add
add
nop
bnd
mov
ljmp
inc
fcompl
and
test
mov
add
add
add
add
add
add
push
les
add
add
cmp
sbb
fwait
add
rcll
add
add
dec
rcrb
add
xchg
iret
pop
add
and
push
xor
sbb
fcomps
ret
clc
addb
or
add
add
dec
loope
push
add
add
cmp
add
sbb
add
add
add
or
add
add
push
dec
adc
add
add
les
push
add
add
add
add
add
push
xchg
mov
add
add
sbb
add
sub
add
add
mov
cmpsl
add
movsl
pop
dec
add
add
add
add
add
add
add
xor
add
loope
add
add
push
pop
pop
add
xchg
leave
dec
add
add
dec
cvtps2pd
add
add
daa
hlt
sbb
mov
pop
add
add
add
add
add
movsl
in
sbb
test
add
add
mov
add
push
or
adc
add
add
add
add
lea
add
add
aam
xchg
add
add
add
add
add
jbe
cwtl
add
add
fildl
movsb
pusha
lods
test
fbstp
add
add
ss
fwait
add
add
push
in
cmp
add
add
add
add
repnz
add
add
popa
filds
add
pop
ds
add
movsb
xchg
imul
add
add
ljmp
sub
lret
add
add
or
loopne
add
add
add
add
add
insb
or
add
add
jno
mov
mov
push
roll
add
and
add
add
xchg
cld
add
add
ds
add
add
sub
outsb
jge
add
add
mov
add
mov
add
add
lret
mov
add
add
adc
add
out
ja
add
add
add
add
add
xchg
add
add
pop
test
add
in
add
add
add
sti
sbb
add
add
sub
dec
and
add
add
movsb
or
add
add
add
add
add
push
cmp
dec
or
add
jb
or
add
add
jge
repz
add
add
add
add
rolb
add
add
out
aas
add
add
inc
into
xor
add
add
dec
adc
add
mov
add
add
loope
inc
mov
inc
add
pop
add
sbb
add
addb
insl
iret
insb
add
icebp
add
pop
add
pop
arpl
rcll
add
adc
add
jle
add
add
loopne
add
jp
add
xchg
add
addb
pop
testl
xchg
pop
jae
jl
fildl
push
je
add
inc
movsl
add
and
add
repz
fldt
jb
leave
add
add
fistps
add
add
mov
add
aad
add
fs
call
in
lahf
add
jp
add
mov
add
test
sahf
cmp
add
test
mov
push
add
call
add
les
add
nop
cmp
sbb
add
dec
cmp
dec
pop
mov
push
lret
pop
add
lcall
scas
inc
ret
add
add
mov
push
test
or
js
mov
std
pop
aam
xchg
das
xchg
in
outsb
pop
xchg
mov
mov
jmp
jmp
jecxz
and
jmp
gs
xchg
scas
aas
sti
sbb
sahf
mov
add
push
dec
fimull
insb
cmpb
add
or
add
movzwl
lods
dec
push
into
add
or
shl
addl
mov
xchg
jmp
insl
xor
push
mov
xchg
sub
out
add
daa
popf
sbbb
enter
add
pushf
ja
jmp
inc
jp
outsb
cmpsl
movsl
int
jnp
add
jg
stos
add
and
flds
ljmp
push
lds
lahf
int
xchg
fistpll
sub
lret
insl
or
sub
shrl
outsb
fistl
sub
lds
push
insl
mov
jl
test
xor
out
loope
push
pushf
cmpsb
add
arpl
dec
pushf
adc
je
fiadds
add
add
fildll
ret
out
data16
mov
hlt
pushf
in
xor
add
adc
mov
sub
jmp
pop
jnp
add
sub
push
fadds
testl
add
rcrb
imul
ja
insl
imul
movsb
call
xor
lcall
leave
fildll
addr16
add
mov
sub
sbbb
add
out
lds
popf
xchg
add
jmp
fidivrs
scas
lret
out
inc
add
mov
mov
mov
jne
add
push
stc
rcll
dec
iret
fisubrs
imul
in
sarl
mov
jo
fsubrl
xchg
xchg
pop
lock
mov
mov
cmp
dec
mov
add
imul
pop
push
dec
mov
sub
pop
pop
jmp
jnp
add
or
lahf
cli
cwtl
jl
mov
or
pop
stos
cmp
push
in
mov
in
push
add
mov
xor
pushf
popf
lods
cmp
ss
das
push
jl
xchg
sub
push
aam
mov
aas
xorb
scas
mov
add
jno
shl
jnp
jo
or
pop
xchg
out
ja
iret
add
mov
push
rolb
push
ljmp
add
lret
jl
jg
cmp
loopne
outsl
icebp
setnp
rclb
pop
fcoms
jl
hlt
and
add
add
rcrl
js
and
push
icebp
aas
arpl
fcoms
in
add
icebp
mov
pop
icebp
inc
stos
nop
xchg
or
popa
add
inc
lahf
push
push
xchg
repz
mov
add
hlt
and
xor
lds
and
fldcw
push
pop
mov
in
inc
sbb
ja
pop
and
shl
imul
fsts
add
cmp
cld
add
fldl
movsb
xchg
mov
xchg
orb
add
pushf
out
dec
jae
lods
sbb
popf
out
daa
fcompl
mov
mov
dec
add
shl
dec
add
stos
test
xchg
add
call
mov
mov
enter
jle
ja
add
imul
or
or
aam
shl
inc
mov
bound
dec
pop
add
cmpsb
in
sahf
push
cmp
and
std
in
ret
jp
mov
mov
rolb
call
hlt
push
push
push
xchg
aam
push
cmpsb
jp
add
pop
int3
pop
adc
fucom
pop
push
sti
popa
add
sti
mov
push
movsl
fldl
leave
add
out
mov
xchg
je
rclb
add
lock
add
scas
insl
add
pop
iret
add
or
push
add
add
add
add
addb
add
add
jnp
sub
add
cs
mov
addl
add
pop
push
add
add
add
add
mov
add
add
movsb
stos
add
jne
add
add
add
mov
add
inc
sub
add
jnp
add
add
pop
cmpsl
in
add
add
add
mov
fiadds
add
and
add
filds
add
add
push
add
out
faddl
mov
add
int
add
dec
nop
add
add
bnd
add
add
add
add
hlt
add
add
shr
out
lret
scas
inc
lea
push
xchg
out
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
filds
add
adc
add
addb
add
add
add
add
repnz
add
add
add
add
add
add
add
add
add
add
test
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
lea
add
jnp
add
stos
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
add
add
add
xchg
add
add
dec
sti
add
dec
data16
dec
cli
add
test
add
movsl
repnz
add
jl
add
mov
and
scas
pshufw
and
cmp
out
sahf
xchg
push
pop
pop
mov
mov
add
add
and
sbb
sub
mov
or
push
lea
adc
mov
add
std
fcoms
fcoml
cmp
push
nop
xchg
and
add
add
add
push
mov
cmpps
mov
out
add
rolb
bound
push
negb
xor
xchg
add
add
add
and
xor
nop
std
xor
sub
dec
addl
add
xchg
enter
mov
in
adc
sub
addr16
and
in
lock
add
add
jle
and
mov
loopne
xchg
repnz
aam
jl
add
call
movsb
cmp
cmp
out
add
add
add
add
add
rolb
add
add
add
into
lds
add
add
pop
cmpsl
bound
add
add
bound
add
add
add
add
push
les
add
add
add
add
add
add
mov
add
cmp
add
xchg
insb
mov
add
add
add
add
into
cli
in
add
add
push
lods
add
outsl
xor
mov
add
add
jnp
add
or
add
add
fwait
ss
add
add
add
add
add
add
pusha
add
add
add
and
add
xchg
test
add
xchg
and
lock
add
add
mov
add
fsts
add
push
inc
add
insl
mov
add
loop
add
cmp
repnz
test
xor
xor
xchg
inc
mov
add
add
jne
adc
mov
leave
add
add
add
bound
add
dec
cmp
pusha
loope
add
pop
add
cmp
add
add
and
push
mov
add
pushf
add
and
mov
push
lds
pusha
mov
pop
add
ja
sbb
mov
or
stos
mov
add
sbbl
dec
mov
push
add
xor
and
adcb
fcoms
add
jnp
add
add
add
push
add
test
hlt
add
push
imul
les
fstps
cmc
add
xchg
add
mov
add
add
add
loope
bound
push
add
add
lea
pop
xchg
fcmovne
add
cmp
add
add
and
pop
jne,pn
and
rolb
push
pop
iret
add
cmp
js
inc
xchg
cmp
add
add
add
add
cmp
lret
jbe
add
addl
add
test
movl
fiadds
dec
and
add
or
mov
rolb
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
rolb
add
adc
add
jecxz
add
cs
add
cmc
add
popa
push
jge
or
add
ret
add
add
add
add
add
add
add
pop
add
add
clc
add
add
pushf
mov
add
ljmp
add
add
add
add
rcrb
mov
add
pop
mov
add
push
inc
sbb
imul
or
mov
aam
outsb
nop
xchg
sub
xor
or
mov
mov
jg
fdivrs
mov
rcrb
ja
push
mov
push
sbb
iret
jnp
mov
pop
out
sar
scas
enter
lret
xchg
push
xor
add
fldl
data16
pop
cmc
cmp
jae
mov
popf
out
addr16
adc
out
aad
ss
pop
nop
jge
jns
mov
push
mov
test
int
aam
dec
cmc
mov
test
push
movsl
lret
cmc
sbb
inc
push
stc
cmpsl
xor
mov
inc
push
es
test
jb
xchg
pop
aam
mov
cmp
adc
and
cmpsb
or
scas
sbbb
sti
orb
std
rcrl
fwait
movsb
xchg
aaa
push
add
push
xchg
leave
int
dec
fs
gs
xor
out
mov
shlb
sub
dec
mov
fwait
pop
sub
and
stc
fidivrs
pop
mov
rcrb
jns
sbb
mov
inc
cmp
xor
icebp
in
pop
jmp
xchg
popf
movsb
xchg
cmp
add
mov
push
fimuls
cmp
es
inc
xchg
or
inc
xchg
ljmp
and
push
pop
fnstsw
inc
popa
fdivrs
jne
jl
test
stos
aad
inc
mov
xor
test
subl
div
lds
daa
inc
push
jmp
push
lds
jnp
add
or
jno
xchg
pop
xlat
pop
cmpsb
xchg
hlt
pop
cmp
adc
push
in
and
sbbl
xchg
clc
orl
cwtl
mov
xchg
movsl
xchg
or
fbstp
push
xchg
into
int3
pop
dec
imul
out
xor
nop
aad
out
mov
shll
insl
popf
mov
sub
mov
pushf
pop
sub
sub
and
fnstsw
pop
mov
rcll
inc
sbb
dec
cmpl
fildl
xchg
test
je
icebp
scas
out
repz
cmpsl
xor
and
sbb
rorl
enter
mov
imul
outsl
adc
iret
movsb
out
pop
insl
jae
adc
stos
dec
cmp
dec
xchg
push
aas
push
and
ljmp
fldcw
aad
push
xchg
mov
cli
mov
gs
xor
lods
pusha
sti
lahf
jp
mov
add
leave
mov
in
or
test
fs
mov
fdivrp
lock
mov
insl
mov
das
lret
xchg
xlat
xlat
sub
movsb
dec
sbbb
mov
popf
int3
iret
dec
test
or
loop
inc
aad
cmp
cmpsb
push
stos
fadds
js
or
shl
cwtl
int
dec
mov
mov
idivb
outsb
xor
imul
jb
push
and
push
ss
dec
subl
sbb
mov
ja
cmp
cwtl
imul
insb
fdivl
std
mov
xchg
jbe
fwait
les
cwtl
jno
pop
pop
mov
rcrb
mov
icebp
repz
scas
sub
out
cld
inc
and
pop
pop
sahf
xchg
movsl
lea
out
jecxz
sbb
or
jmp
stos
mov
adc
sbb
adc
add
cs
popf
mov
pop
outsl
or
mov
ljmp
xchg
in
mov
rcr
stc
cmpsl
lahf
sarb
sbb
sub
dec
mov
aad
sub
mov
divl
push
mov
or
in
inc
fadds
cmp
dec
mov
xchg
stc
mov
jnp
lret
aad
or
aas
mov
xchg
daa
in
mov
cmp
data16
mov
repnz
and
dec
scas
inc
dec
xchg
jno
imul
or
and
in
leave
push
mov
adc
jnp
lahf
sarb
fs
fcoml
mov
into
mov
cmpsb
icebp
sar
dec
aas
xchg
xor
dec
fisttps
xchg
jle
stos
jmp
push
shl
prefetcht2
fiaddl
adc
xchg
fstpt
mov
mov
pop
fs
adc
pop
xchg
mov
pop
mov
fmuls
adc
in
xchg
sahf
popa
push
mov
fdivrs
aad
ja
mov
jo
stos
mov
scas
add
in
outsl
xorb
add
or
cltd
cwtl
cmpsl
rcl
aad
pop
jae
add
and
jge
ret
sahf
add
fwait
ret
ret
inc
test
jp
push
imul
cmp
cmovno
call
repnz
and
sub
test
arpl
sbb
mov
jb
add
and
fs
push
xor
xchg
push
pop
mov
jnp
popf
lret
jbe
and
aam
pop
addr16
adc
insl
aam
sub
push
cmc
dec
sub
xchg
fdivs
or
mov
or
aam
cmp
xchg
sbbb
lcall
jecxz
in
shrb
pushf
mov
push
jb
ds
out
stos
int3
fldl
mov
out
mov
rcr
push
mov
jbe
mov
std
xorb
rcl
cmp
push
imul
int3
push
lods
inc
psllq
test
inc
xor
mov
cld
sub
add
mov
popf
lret
inc
jns
jns
int
jp
pop
out
popf
mov
addr16
lock
mov
ret
loop
inc
dec
sub
add
pop
jp
es
test
popf
pusha
xor
into
inc
aaa
lret
ljmp
xchg
xchg
push
cltd
add
inc
popa
push
jno
add
pop
adc
sbb
dec
aam
and
cmp
dec
lods
pop
push
pop
sbb
and
xor
in
push
pusha
jo
adcb
push
jae
lcall
jecxz
in
inc
sub
lock
pop
xchg
xchg
es
cmc
fs
pop
stos
inc
fldl
sahf
add
mov
cmp
push
mov
mov
jmp
mov
mov
sub
jb
lods
ds
or
push
mov
out
lock
push
xor
popf
jmp
aaa
xor
inc
or
or
add
mov
stos
js
iret
icebp
je
sbb
xchg
xchg
mov
sarl
call
neg
outsb
and
inc
push
jmp
aas
insl
adc
clc
test
mov
scas
je
pop
cwtl
fwait
mov
mov
je
sub
nop
xchg
out
mov
lcall
movzbl
mov
cltd
pop
sbb
out
push
mov
sub
outsb
pop
cmpsb
stos
in
lcall
out
push
aad
sti
pusha
add
push
ror
jno
fbld
sahf
lea
sub
ret
repz
mov
mov
adc
mov
jecxz
insl
rcr
adc
lea
xchg
mov
scas
scas
mov
mov
je
xchg
adc
xor
scas
scas
aas
and
dec
or
test
inc
add
jmp
or
jns
das
pushf
imul
lret
cmp
mov
scas
insb
fildl
pop
popa
pop
mov
fisttps
push
icebp
mov
push
xchg
jns
pop
push
cmp
pop
xchg
and
sbb
dec
or
mov
adc
loope
jmp
pop
mov
add
inc
jns
dec
repnz
or
inc
out
jecxz
movsl
mov
mov
sbb
mov
aad
call
rcrl
into
mov
xor
mov
mov
insb
mov
loop
bound
loopne
int
jb
imul
adc
in
adc
cmp
cmp
add
lods
ret
mov
out
jmp
jnp
add
lret
sbb
negl
pop
cli
cmpsb
movsb
ss
push
idivl
dec
ja
mov
push
mov
mov
or
jae
into
or
sbb
loope
aad
push
mov
je
pop
popf
ret
subb
rcrl
pop
scas
adc
imul
in
lret
xchg
xor
inc
mov
add
lea
mov
or
ss
jl
aad
shll
mov
and
pop
dec
pop
xchg
mov
jmp
mov
xchg
dec
jns
push
xchg
or
loop
imul
iret
dec
xor
out
dec
roll
test
pop
das
pushf
idivl
enter
testb
jg
mov
loope
cmp
mov
add
inc
cmp
xchg
xchg
fucom
shlb
ja
mov
stos
js
sub
in
and
xchg
out
fcoms
lret
testl
ret
lret
mov
stos
into
js
mov
into
push
xor
cld
mov
mov
xchg
dec
jnp
mov
push
xchg
icebp
aad
jne
jl
inc
mov
outsl
push
xchg
push
insb
nop
pop
dec
int3
jmp
out
sahf
cmp
aas
bound
insl
xlat
int
fnstcw
push
jno
iret
in
xor
das
mov
mov
add
sbb
adc
jbe
test
mov
loope
js
jecxz
pop
out
inc
or
out
mov
scas
sbb
and
movb
psraw
insl
outsl
ret
push
aad
lret
dec
adc
gs
test
sbb
cltd
pop
daa
lcall
or
sub
dec
push
push
fs
icebp
and
sarb
ja
mov
dec
insb
sbb
jmp
mov
mov
lods
cs
fcomi
pop
test
jge
mov
enter
dec
into
push
pop
mov
insl
lock
stos
mov
sbb
fwait
mov
push
int3
out
mov
add
xchg
add
push
mov
out
lahf
aad
push
pop
scas
lcall
rcrl
xchg
cmp
mov
clc
outsb
imul
push
sbb
lea
push
insb
add
or
movsb
popa
stos
mov
xchg
jg
lahf
out
dec
out
inc
add
int3
shlb
addr16
lods
dec
jle
or
xchg
leave
in
and
cld
andb
fstpl
jbe
sub
adc
dec
lret
sbb
sbbl
xlat
ret
out
push
xor
lea
xchg
mov
cmp
sbb
inc
inc
or
aad
and
subb
lret
or
fptan
fmul
jo
roll
mov
aaa
in
popa
repnz
mov
add
xorb
int3
xor
in
jnp
or
jg
mov
rclb
mov
repnz
xchg
jmp
arpl
lods
cmpsl
outsl
fmul
add
mov
lret
pop
fdecstp
pop
mov
dec
jl
adc
push
daa
inc
lret
mov
pop
insb
sbb
mov
mov
fsubs
jecxz
push
cwtl
jmp
in
dec
or
sbb
xor
lret
or
fs
mov
icebp
pushf
adc
jno
mov
pop
xor
cmp
xchg
sbb
jns
xchg
sbb
and
xchg
iret
test
out
and
mov
jae
adc
loope
cmc
cld
out
mov
shl
cmp
mov
loopne
iret
mov
and
mov
mov
pop
insl
mov
sbb
pop
repnz
xchg
xor
sbb
adc
mov
xchg
fisubl
jp
shr
jae
imul
in
mov
ja
sbb
ficompl
andb
jbe
add
aad
xchg
push
loopne
mov
clc
add
xchg
sbb
outsl
imul
fstl
and
mov
push
sub
std
mov
outsl
sbb
cmpb
cmpsb
jmp
inc
xchg
cltd
jo
ljmp
jnp
mov
sti
add
into
movsl
dec
jnp
push
inc
lcall
daa
aam
leave
jo
iret
jge
push
mov
test
bnd
push
arpl
lock
jns,pt
pushl
jae
insb
xor
xchg
nop
lock
dec
xor
lea
jo
cmp
mov
sub
rol
cs
sti
out
jno
add
aad
sub
enter
fwait
jae
int
or
jb
enter
pop
pop
sahf
cltd
sbb
cs
mov
mov
ljmp
cmpb
lods
jo
push
or
orl
jns
sub
clc
scas
cmpsb
aad
insl
daa
mov
filds
cmp
pop
das
jmp
ss
pop
imul
leave
hlt
mov
in
or
inc
mov
pop
je
in
jge
hlt
pop
icebp
push
pop
or
push
jg
or
in
setnp
fucomip
sub
adc
les
cmpb
std
cmpsb
leave
sbb
jbe
in
xor
or
mov
push
out
sub
adc
and
orb
cmp
loopne
inc
iret
test
dec
pop
sub
cmp
cmpsl
test
daa
and
xchg
into
mov
push
lret
into
into
loop
lret
mov
mov
and
in
rorl
stos
fwait
or
push
cli
movsb
mov
adc
lods
mov
outsl
ss
pop
cltd
or
call
sbb
repz
out
mov
inc
mov
sub
lret
jle
dec
xchg
lret
fcomp
sub
sbb
pop
imul
repnz
jge
jl
insl
jno
cmpsl
inc
pop
aas
cmp
mov
gs
mov
adc
sub
sub
fwait
lret
in
jb
jnp
sub
jge
sub
pop
fsubl
pusha
sbb
sub
shrl
scas
or
orl
les
out
enter
jl
daa
push
lcall
in
xchg
or
jecxz
in
sbbb
dec
xchg
sbb
lret
sub
scas
andl
cmp
into
jle
ror
in
sar
ret
lds
frstor
push
stos
mov
loope
in
movsb
sub
and
fists
pop
lea
mov
push
mov
ja
ljmp
jne
inc
xor
jns
and
movsl
andl
mov
rorb
sahf
daa
hlt
icebp
push
jbe
icebp
lock
jae
adc
pop
jmp
xor
mov
scas
in
mov
out
das
lret
js
mov
jecxz
js
notb
js
lret
popf
sub
std
sbb
cmpsl
shlb
sahf
cmp
and
mov
orl
lahf
sbb
jle
stos
mov
mov
pop
cmp
ret
cmp
neg
filds
dec
pop
cmpsb
mov
imul
les
ljmp
ret
es
popf
in
fisubs
fldcw
cld
cmp
jecxz
call
lret
ljmp
into
push
test
shrl
in
lcall
xchg
out
cmp
insl
xchg
push
lahf
mov
xchg
pusha
adcb
sahf
adc
loope
sub
int3
add
or
jae
adc
shrb
jne
xchg
ret
xchg
loope
push
lcall
xor
add
push
pusha
add
dec
adc
xor
mov
and
test
or
dec
mov
fimull
and
rcll
arpl
popf
in
pushf
push
jmp
dec
loop
cmpsl
iret
lods
xchg
inc
incb
lods
or
pusha
icebp
dec
out
imul
jbe
and
pop
lret
adc
or
dec
and
mov
inc
cwtl
cvtdq2ps
gs
lods
enter
out
jmp
stc
sbb
xor
push
cmp
xor
ror
lahf
scas
std
outsb
ret
mov
daa
mov
ret
mov
pushf
sar
push
imul
push
test
shll
sub
lea
jns
rcrb
sbb
jl
xor
out
dec
in
sahf
mov
dec
aas
in
mov
and
xchg
cwtl
fnstenv
dec
mov
fiaddl
sbb
push
push
inc
dec
in
or
gs
pop
add
cmp
ret
fs
int
out
int
jns
dec
xchg
outsl
mov
gs
adc
mov
cmp
mov
scas
jns
decl
add
mov
pop
sarb
outsl
add
jnp
mov
add
call
cmp
ss
aad
xchg
push
js
sub
mov
sbb
int
lds
ljmp
xchg
push
lods
shrl
sbb
stos
mov
fsubp
cmc
xor
popa
lret
xchg
sbb
lds
scas
adc
fisubl
dec
push
in
mov
and
push
popa
xchg
jmp
xchg
push
sbb
mov
out
ja
in
inc
lret
mov
mov
mov
adc
cmp
add
in
dec
mov
hlt
or
sub
insb
dec
enter
or
fs
add
cmp
pop
mov
mov
add
out
lret
stos
push
rcll
xlat
je
call
jge
mov
fisubl
gs
cli
push
sbb
cmpsl
xor
fcoml
mov
mov
jno
aaa
pushf
or
mov
mov
add
inc
cmp
pop
fsts
pop
in
mov
adc
sbbb
inc
mov
xchg
cmp
sub
insb
int
cld
ret
and
cmpl
inc
aam
int
mov
mov
out
bound
jne
out
xorb
and
fstpl
mov
jl
rcr
mov
pop
sbb
hlt
push
fs
out
mov
adc
and
lods
dec
test
jbe
lahf
call
jns
sar
jl
and
pop
sar
out
addr16
leave
and
xor
xchg
or
jg
shl
or
mov
rep
js
std
dec
ljmp
lds
push
adc
mov
lock
movsl
repz
add
add
add
or
scas
sarb
out
sub
fdiv
ljmp
mov
push
das
arpl
call
xchg
pop
and
jae
pop
test
in
fcmovb
int3
sub
stos
add
inc
dec
mov
cmp
int3
cmp
lcall
sarl
int
mov
add
mov
push
daa
pusha
and
divps
test
int3
push
gs
push
dec
sbb
test
or
xchg
jbe
mov
gs
or
xchg
inc
cmpb
mov
mov
dec
mov
mov
fnstcw
das
and
addr16
imul
dec
faddl
int3
pop
jbe
push
pop
inc
inc
dec
inc
aam
pop
scas
jecxz
and
lds
mov
ljmp
imul
ret
ljmp
test
mov
cmpsl
aaa
push
sbb
inc
out
xchg
movsb
out
mov
shl
sbb
out
aaa
sbb
push
dec
icebp
adc
add
lret
insl
data16
aad
jg
mov
push
jne
sub
ficoms
pushl
mov
sti
mov
fadd
jbe
fwait
test
xchg
sahf
push
jl
fcomps
jns
data16
fistps
mov
push
add
mov
call
fisubl
and
and
dec
push
lea
inc
repnz
pushf
cmp
pop
imul
or
adc
pop
fs
aas
xor
out
fnstsw
repnz
insl
shrl
push
cld
repnz
cli
inc
pop
adc
notl
push
pop
mov
imul
pop
jmp
add
mov
cli
push
addb
add
lret
mov
xor
xchg
in
sbb
in
mov
cmovs
mov
das
xchg
out
inc
ror
push
cwtl
or
insl
dec
xor
dec
pop
mov
jmp
lcall
int
cli
or
lods
cmpsb
nop
insl
repz
mov
fmull
jo
rorl
fdivl
xchg
das
inc
jno
js
nop
sub
and
adc
push
arpl
aaa
into
xchg
jno
mov
push
or
jl
sbb
inc
inc
dec
mov
test
stc
fidivrs
cmp
imul
iret
pop
pcmpgtd
daa
push
xor
shl
xchg
leave
in
push
jle
icebp
cmc
adc
push
ficoml
ret
mov
icebp
inc
repnz
push
movsl
push
int
pop
pop
leave
outsl
cmp
mov
enter
call
cmpsb
cmp
cmp
inc
pop
cmp
xchg
or
xor
sbb
ss
sub
push
inc
dec
pop
sbb
mov
lret
outsl
hlt
in
divb
sub
cmp
xchg
outsl
dec
xlat
int3
into
xor
jmp
in
pop
das
mov
or
mov
xchg
mov
sti
cmpsb
shll
shr
jns
inc
cmpsl
pushf
ds
mov
mov
inc
rorl
outsb
addr16
push
insl
loope
subb
and
in
pop
loopne
cmp
popa
sub
nop
dec
xchg
mov
fcomi
and
jae
stc
mov
out
out
daa
mov
push
inc
or
in
fildll
fisttpl
repz
push
popa
cmp
enter
sub
leave
daa
les
daa
xchg
xor
xor
mov
outsl
cli
mov
add
repnz
hlt
mov
stos
in
aad
add
xchg
add
insb
incb
jne
xor
push
push
add
in
inc
loopnew
pusha
adc
add
xchg
mov
push
mov
jae
pushw
jno
or
mov
lahf
pop
push
dec
aam
xchg
cmp
cmc
pop
aas
add
and
sub
lods
pop
fstpt
jnp
sti
ficoms
fsubr
je
mov
lods
xor
pop
loop
fistpl
mov
stos
mov
test
sub
adc
xchg
pop
adc
dec
push
cs
jl
cmpsb
and
arpl
scas
cwtl
jp
jp
adc
dec
sti
xor
in
sub
or
inc
sahf
scas
inc
jbe
fmuls
cli
adc
xor
fs
xchg
pop
repnz
and
arpl
push
inc
xchg
lods
xor
orb
xchg
sub
rclb
push
mov
add
jl
pop
push
pop
mov
fidivl
sub
loopne
int3
aaa
xchg
inc
or
das
les
js
int3
les
mov
xchg
add
fstpt
push
outsl
push
mov
stos
aas
jmp
pushf
jl
jae
mov
leave
aam
mov
insb
pop
mov
mov
pop
lock
xchg
dec
pop
test
mov
dec
loope
mov
add
jle
push
nop
cmp
lcall
loop
xchg
add
fldt
iret
jns
aad
add
push
jae
call
push
repz
adc
jmp
cli
cmp
mov
xor
stos
fs
popa
or
addr16
and
jl
and
ficoml
xor
add
adc
dec
xorb
loop
sub
mov
repnz
sub
je
sub
enter
js
mov
xchg
dec
push
xchg
dec
push
sbb
xor
hlt
sub
mov
jno
cmpsl
push
dec
add
cwtl
or
push
clc
in
push
pop
pop
fildl
xor
addb
cwtl
mov
sbb
adc
xchg
sub
cmpsb
mov
aad
adc
jecxz
cmp
insb
setnp
jg
test
ret
pop
xor
mov
fsts
push
inc
cld
push
sbb
adc
sub
ljmp
stos
xchg
insb
mov
sbb
add
mov
sub
sbb
fcomp
dec
fwait
scas
outsb
ret
sbb
xchg
mov
fisubs
stos
fcmove
add
ret
mov
filds
mov
inc
sub
mov
insb
lea
cmp
out
mov
dec
add
sub
enter
xlat
mov
sbb
mov
pop
add
pop
adcl
repnz
rorb
sbb
push
shrb
rorb
cmp
clc
mov
insb
out
clc
mov
and
sub
and
inc
mov
adc
loop
es
test
jg
sahf
int
pop
mov
add
dec
or
mov
xor
fimull
dec
sub
mov
icebp
call
mov
mov
dec
fiaddl
pop
mov
mov
cmpb
cld
xchg
lret
ja
push
jns
push
dec
jnp
lcall
out
lock
je
dec
div
outsl
push
fsubs
stc
jns
rcrb
push
jo
sbb
xchg
cs
adc
xchg
xchg
in
cmc
cmp
and
pusha
inc
mov
inc
sbb
jne
cld
sub
cmpsl
insb
dec
and
js
dec
into
jmp
insl
mov
jne
push
aaa
stos
pushf
mov
pop
fwait
xlat
cmp
and
xchg
rclb
popf
stos
fnstcw
pop
dec
popf
sub
rol
sbb
negb
cli
mov
add
or
mov
mov
popa
push
out
js
jle
insb
jecxz
repz
pop
adc
adc
mov
sbb
cmpsl
dec
xlat
in
xchg
push
jbe
int3
js
cmp
xor
sub
test
jle
test
ja
outsl
mov
push
stos
push
adc
and
push
fcomp
leave
push
adc
aaa
mov
in
cmpsl
outsl
fimull
pop
frstor
dec
movsb
and
rcll
add
cli
or
cmovge
pop
inc
mov
push
int3
add
in
jbe
cmp
or
xor
jne
les
mov
shll
adcb
daa
pop
sets
cmp
pop
pop
sar
push
andb
fwait
and
mov
xor
adc
imul
inc
and
push
sbb
out
sbb
mull
fiadds
aaa
sub
filds
aaa
xchg
test
fstps
xchg
pusha
mov
ret
mov
cmp
aam
lret
fwait
ljmp
cltd
sbb
inc
aas
iret
push
je
or
mov
cmpsb
pop
mov
inc
inc
jg
inc
in
and
push
dec
xor
aad
xor
push
arpl
mov
icebp
popa
mov
jp
inc
fcoml
or
inc
sti
cltd
hlt
fdivs
cli
mov
scas
or
mov
xor
clc
in
jge
lods
push
jno
insl
add
in
in
negl
or
jne
xchg
out
or
or
sbb
mov
paddsw
jp
pop
shlb
jge
adc
leave
lret
push
imul
or
int3
in
lcall
ja
div
push
into
pusha
imul
bound
je
jge
es
rcrl
addr16
mov
inc
mov
mov
imul
jl
jge
nop
cmp
movsl
es
scas
jecxz
dec
insl
jae
ja
adc
mov
das
sti
test
scas
adc
push
roll
jno
insb
pop
in
mov
fs
push
or
rcrb
adc
std
nop
cli
int
xor
xor
hlt
sti
mov
cwtl
jae
sbb
push
fwait
jge
aam
cli
jbe
xchg
jmp
nop
cltd
mov
shll
add
call
cltd
std
mov
je
add
daa
and
jo
jb
mov
mov
xchg
in
pop
inc
mov
fildll
les
dec
xchg
add
inc
hlt
inc
lds
fisubrs
or
icebp
xor
test
pop
cmpsl
jl
push
sti
hlt
jb
adc
inc
xor
add
cmp
lea
mov
dec
cmpsb
sbb
movsb
inc
popa
cmpsb
dec
mov
pop
jne
fldcw
dec
jl
push
and
je
lahf
js
jae
jae
inc
push
jge
das
or
in
sub
jmp
mov
das
mov
js
mov
nop
ret
adcb
outsl
cmp
inc
fmull
sub
push
cmp
push
jae
mov
outsb
test
sub
mov
sub
sub
xor
out
mov
mov
les
push
pop
mov
adc
dec
push
lret
stos
jg
sbb
fistps
xor
es
js
lods
adc
dec
clc
jbe
clc
std
lret
inc
shll
xchg
pop
inc
nop
push
add
xor
jno
sub
mov
ret
and
pop
fs
out
sub
shl
push
cmpsl
sbb
mov
xchg
in
cmpsl
jb
sbb
pop
addr16
mov
cmp
test
inc
inc
jle
xlat
push
pop
mov
fprem1
push
adc
inc
xlat
xorl
cmp
dec
jge
push
mov
push
pop
into
sub
xor
dec
adc
cmp
fcmovbe
outsb
jp
enter
lods
add
addb
in
imul
add
cltd
mov
pop
sbbb
push
lock
pop
mov
insl
mov
fdivs
jle
mov
mov
fucomp
sub
std
imul
dec
sub
pop
out
ucomiss
stos
stc
in
lahf
stos
pop
ret
mov
or
inc
xchg
aam
mov
and
shlb
mov
inc
mov
unpcklps
xor
dec
pop
sbb
sahf
rclb
arpl
and
aas
pop
mov
mov
aam
gs
sbb
pop
jnp
mov
fdiv
aas
out
je
jbe
idiv
scas
xor
int3
arpl
xlat
sbb
cs
push
repz
xchg
mov
jle
jle
ret
mov
sub
mov
nop
push
sub
das
pop
adc
fwait
push
sbb
push
rolb
xchg
fxch
inc
push
pop
adc
xchg
mov
mov
loop
xor
arpl
xchg
cmc
sub
movsb
sub
or
loop
adc
fildll
negb
je
jle
mov
sar
ljmp
inc
xchg
lds
ljmp
cmpsl
sbb
mov
mov
lcall
es
and
jns
mov
cwtl
add
je
pusha
test
js
ds
ljmp
roll
aam
movsl
ret
sbbl
outsl
in
popa
mov
pop
rcl
shlb
jp
es
jb
or
mov
ss
fisubrl
xorps
jb
pop
sbb
loope
xor
xchg
scas
out
or
clc
sbb
cmp
jbe
mov
inc
nop
fisubrl
and
pop
fdivrp
iret
and
xchg
daa
cmp
inc
dec
movsb
in
dec
mov
movb
int
rorb
cli
rcr
popa
adc
jmp
andl
cltd
fcoml
iret
jns
out
cmc
push
ds
push
add
test
cmp
sub
enter
mov
mov
sti
out
jle
popf
push
cld
daa
or
jecxz
xor
les
enter
add
adc
rcll
inc
outsl
ret
cmp
call
xor
lods
add
inc
jae
fnsave
movsl
addr16
cs
dec
sub
adc
aam
stos
scas
jno
xorl
mov
pop
sub
adc
sub
jg
lea
call
scas
and
push
int3
ret
loop
mov
jg
popf
mov
jmp
test
cmpl
jns
cli
mov
and
xchg
shr
xor
or
mov
pop
out
xlat
pop
out
xchg
add
add
iret
in
shlb
jnp
pop
into
loop
test
scas
push
ja
xchg
aam
es
mov
push
and
cs
dec
into
pop
stc
icebp
pop
out
push
pop
add
or
loop
add
xchg
notb
xor
dec
fnstsw
mov
clc
pusha
mov
push
push
outsb
sti
mull
jo
shr
sti
jb
mov
mov
inc
inc
xor
test
in
mov
inc
xchg
dec
test
in
icebp
ds
push
aas
loop
cmp
sbb
fstps
ss
lods
jae
mov
and
dec
xchg
call
jbe
inc
daa
push
test
pop
and
xchg
mov
je
cmc
add
adc
add
outsl
inc
into
xchg
or
xor
mov
loopne
mov
cld
lret
out
ja
test
xor
lret
push
jle
adc
imulb
enter
fcompl
xor
sub
fists
or
and
pop
cwtl
sbb
rcrl
sbb
flds
or
imul
ja,pt
out
int3
mov
movsl
xor
or
xchg
lods
sub
les
jne
mov
xchg
fiaddl
push
jecxz
stos
in
add
lods
and
call
pop
ret
mov
push
pop
lock
into
loope
ljmp
sahf
das
mov
pop
jnp
push
adc
ret
repnz
cmpsl
ljmp
push
cmp
out
daa
loop
rclb
jmp
fdivs
enter
dec
inc
mov
iret
mov
push
scas
mov
xchg
pop
lahf
out
call
mov
or
mov
shlb
dec
push
lods
cwtl
cli
jg
push
xchg
adc
cmp
enter
mov
dec
and
jbe
popf
nop
and
sub
aas
sti
std
repnz
mov
int
out
jbe
xor
js
cmp
test
fwait
lret
icebp
imul
mov
cmp
mov
inc
mov
ja
popa
cmpsb
pop
orl
and
cmp
repz
and
in
cltd
popa
sub
and
fsub
jb
add
lret
mov
call
adc
test
fmull
or
pop
and
add
ss
lods
cmp
fdiv
je
adc
jmp
aad
jb
mov
push
pusha
cs
imul
jmp
jp
mov
imul
jo
sbb
loop
cmp
push
xor
enter
out
out
ficomps
mov
lret
or
lds
js
inc
adc
in
pushf
push
pop
xor
inc
sub
cmc
dec
pop
lods
add
or
adc
stc
in
xor
add
jae
ja
mov
add
scas
leave
inc
neg
shrl
or
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
sbb
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
and
add
add
inc
add
insb
add
push
add
jb
jae
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
cmp
push
add
jb
pop
add
add
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
