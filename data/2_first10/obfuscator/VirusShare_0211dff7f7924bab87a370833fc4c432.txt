cmp
jno
xor
pusha
xchg
jp
sahf
orl
repnz
adcb
pop
shlb
and
jl
fwait
pop
pop
fildl
mov
jae
inc
dec
cli
insl
push
fstl
out
mov
ja
push
cltd
jmp
int
jecxz
push
cmp
outsb
addb
idivb
add
mov
mov
dec
and
das
mov
dec
xorb
jl
pop
rorb
or
pop
movsb
fxch
cmpsb
mov
lea
pop
notb
aad
sbb
xchg
orl
js
dec
shrb
outsl
mov
jge
jns
cli
or
or
cmp
xchg
xchg
xchg
sub
add
cmp
sbb
outsl
mov
scas
outsl
stc
mov
jns
or
sub
rcrl
push
mov
pop
scas
repnz
fmuls
push
mov
push
pop
or
cmc
daa
repnz
xchg
jae
cmp
inc
fbld
lahf
shr
sub
fcomp
xor
and
add
inc
mov
or
mov
adc
ret
or
mov
orb
or
mov
push
sub
sbb
in
lods
mov
jns
pop
and
sub
jno
xchg
sub
icebp
push
into
lods
outsl
pushf
inc
mov
pop
mov
ficomps
fstpt
xor
cmpsl
imulb
lahf
jle
test
xor
mov
bound
imul
dec
xor
sub
pop
sbb
test
and
ds
pop
in
jb
cmp
movsl
or
sbb
push
xlat
out
or
subb
mul
ljmp
jne
ficomps
pop
or
jo
mov
in
sub
mov
iret
dec
adc
xchg
push
iret
clc
jle
push
mov
arpl
sbb
jmp
pop
and
dec
shrb
mov
push
push
add
mov
push
push
ret
mov
shrb
mov
lret
into
mov
outsl
jecxz
add
mov
xchg
xchg
scas
sbb
leave
pop
pop
jbe
mov
jno
adc
stos
jle
rclb
inc
movsl
mov
out
sahf
dec
dec
xor
hlt
pop
jbe
subl
or
clc
pop
lahf
xor
pop
ficoml
mov
mov
test
mov
lea
xchg
pop
dec
test
cmp
out
cmpb
push
inc
in
lret
mov
jbe
xchg
lea
dec
stos
outsl
add
pop
lock
dec
int
outsl
daa
pushf
ret
in
and
sub
fmulp
test
aad
js
hlt
inc
mov
hlt
dec
out
fucomp
xchg
dec
test
cs
out
out
mov
cmp
pop
cmova
pop
push
aam
xchg
lcall
out
sbb
jnp
push
sbb
or
aad
mov
fisttps
mov
mov
jo
leave
mov
adc
mov
push
mov
les
mov
mov
pop
mov
push
cli
aam
adc
movsb
pop
loopne
scas
xchg
mov
clc
lds
or
mov
add
jnp
scas
lcall
lret
xlat
lea
ret
inc
sbb
int
or
mov
fdivl
ret
xlat
es
cli
js
aaa
pop
test
popf
into
xchg
icebp
pusha
ds
sub
xchg
mov
in
popf
rorb
cmp
add
push
outsb
stos
adc
rcr
mov
dec
ret
leave
cmp
xchg
jo
dec
or
sub
cwtl
xor
or
mov
fimuls
cmp
inc
fidivrl
jecxz
sbb
mov
jge
lahf
cmp
xchg
mov
insl
adc
and
and
xor
lds
inc
mov
imul
and
insb
ds
sub
shl
pop
mov
in
in
in
and
jge
mov
pop
scas
add
aad
inc
jmp
pop
mov
clc
jecxz
mov
xchg
pop
jp
jp
sahf
cmp
hlt
jb
test
outsl
xor
push
mov
sbb
cmp
int
jno
ds
or
xchg
mov
mov
icebp
cmp
in
jo
std
ret
xor
dec
and
ret
cmpsl
fcomps
stos
test
xchg
adc
or
jmp
insb
push
push
add
pop
inc
lock
mov
psllq
add
lea
mov
fistpl
in
arpl
das
inc
out
and
std
mov
imul
pusha
push
inc
dec
mov
push
adc
sub
pop
pop
movsl
loopne
push
sub
sbb
das
pop
stc
or
jbe
push
gs
sbb
push
pop
in
lret
cmp
fwait
mov
jns
shufps
cld
call
xchg
pop
cld
repz
mov
insb
pop
into
pop
imul
jecxz
call
cld
and
mov
inc
rclb
ret
mov
fcomps
cmpl
je
and
popa
add
mov
dec
push
std
icebp
lcall
subl
push
and
mov
loope
sahf
dec
and
out
insb
inc
das
fsubrs
sarl
mov
pusha
push
stc
in
pushf
inc
daa
lock
jno
sub
push
mov
sahf
pop
dec
out
cmpsl
xchg
das
repnz
fidivl
and
fld
mov
sub
sti
xchg
jb
leave
fcoml
dec
jnp
sahf
nop
ret
fmuls
std
das
and
ja
mov
fisttpl
inc
js
popf
pop
mov
or
sub
push
inc
jne
cwtl
mov
daa
sbb
outsb
pusha
xchg
test
lock
cmp
mov
cli
in
and
pop
nop
xorb
and
inc
ss
mov
sbb
inc
xor
xchg
pushf
into
shl
pop
or
sub
cmpsl
cltd
lret
mov
sub
jle
test
int3
mov
cmp
pop
dec
xorb
leave
mov
xor
outsb
mov
fmuls
cld
and
ja
lcall
stc
sub
xchg
mov
cmc
sbb
inc
xor
jp
sahf
rol
hlt
out
or
ja
lcall
cmp
pop
dec
jle
mov
fmull
add
and
dec
jnp
sahf
nop
ret
fmuls
std
das
and
ja
mov
fisttpl
inc
js
popf
pop
mov
or
sub
push
inc
jne
cwtl
mov
daa
sbb
outsb
pusha
xchg
test
lock
cmp
mov
cli
in
and
pop
nop
xorb
and
inc
ss
mov
sbb
inc
xor
xchg
pushf
into
shl
pop
or
sub
cmpsl
cltd
lret
mov
sub
jle
test
int3
mov
cmp
pop
dec
xorb
leave
mov
xor
outsb
mov
fmuls
cld
and
ja
lcall
stc
sub
xchg
.byte
.byte
daa
jnp
sbb
xor
test
jle
scas
pop
popa
pop
fs
test
xor
sahf
sub
mov
outsb
or
jl
ret
xchg
push
and
insl
xor
ret
hlt
cwtl
jge
mov
sbb
mov
xor
cmp
data16
ror
fsubl
mov
push
int3
cwtl
insl
and
mov
add
or
push
ret
daa
ljmp
xchg
inc
bound
je
xchg
outsb
add
dec
pop
arpl
and
jne
addr16
and
mov
mov
xchg
gs
cs
jmp
push
or
jle
arpl
xor
and
push
hlt
adc
ret
repz
dec
xchg
pop
aam
cmpl
inc
mov
jge
push
sub
sahf
cmp
push
xchg
rcrl
jb
jle
sub
sbb
movsb
into
and
mov
mov
cmp
iret
mov
or
arpl
sbb
fs
dec
repz
xor
lret
push
sbb
or
ror
imul
ficomps
xchg
sahf
test
in
nop
mov
sub
inc
lods
repnz
xchg
int
imull
rorl
inc
ja
mov
pushf
mov
fisttpll
dec
cli
in
pushf
adc
dec
or
in
in
rolb
rclb
rorl
jnp
popf
rcrb
pop
push
push
dec
xorl
jmp
fidivs
inc
fsubrs
or
add
sub
cmc
cmp
fmuls
mov
cmc
cs
cld
enter
insb
cmpsl
loope
aad
incl
cmp
jge
lret
inc
push
dec
imul
mov
lret
pop
adc
mov
pop
fistl
add
xor
mov
movsb
rorb
out
or
ja
lcall
cmp
pop
dec
jle
mov
fmull
add
and
dec
jnp
sahf
nop
ret
fmuls
std
das
and
ja
mov
fisttpl
inc
js
popf
pop
mov
or
sub
push
inc
jne
cwtl
mov
daa
sbb
outsb
pusha
xchg
test
lock
cmp
mov
cli
in
and
pop
nop
xorb
and
inc
ss
mov
sbb
inc
xor
xchg
pushf
into
shl
pop
or
sub
cmpsl
cltd
lret
mov
sub
jle
test
int3
mov
cmp
pop
dec
xorb
leave
mov
xor
outsb
mov
fmuls
cld
and
ja
lcall
stc
sub
xchg
mov
cmc
sbb
inc
xor
jp
sahf
rol
hlt
out
or
ja
lcall
cmp
pop
dec
jle
mov
fmull
add
and
dec
jnp
sahf
nop
ret
fmuls
std
das
and
ja
mov
fisttpl
inc
js
popf
pop
mov
or
sub
push
inc
jne
cwtl
mov
daa
sbb
outsb
pusha
xchg
test
lock
cmp
mov
cli
in
and
pop
nop
xorb
and
inc
ss
mov
sbb
inc
xor
xchg
pushf
into
shl
pop
or
sub
cmpsl
cltd
lret
mov
sub
jle
test
int3
mov
cmp
pop
dec
xorb
leave
mov
xor
outsb
mov
fmuls
cld
and
ja
lcall
stc
sub
xchg
.byte
.byte
sub
add
add
add
push
outsb
inc
insb
xor
cs
insb
add
push
add
dec
push
add
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
call
pop
sub
mov
sub
mov
add
lea
mov
xor
call
nop
jmp
ret
add
stc
jmp
ret
rol
rol
jmp
jmp
add
sub
jmp
ret
clc
rol
nop
xor
add
ror
jmp
ret
jmp
mov
ror
sub
jmp
ret
nop
add
ror
jmp
jmp
add
jmp
ret
jmp
ret
or
stos
loop
add
dec
add
add
daa
push
or
daa
es
fwait
push
and
or
gs
fldt
pushf
mov
mov
mov
stc
stc
aaa
sahf
mov
insb
mov
iret
dec
jbe
lret
push
or
inc
aam
in
popa
enter
add
ds
mov
aam
xchg
loop
pop
insb
and
cmpsl
or
imul
dec
mov
sub
adc
jge
inc
sbb
inc
sub
cmp
imul
ret
rol
or
iret
std
push
xchg
add
dec
aam
push
rcll
push
push
dec
or
lcall
jae
add
sbb
daa
push
or
gs
out
jnp
inc
scas
insl
cmpsb
or
add
int
cmp
mov
mov
stos
jne
and
add
dec
add
add
xor
mov
pop
incl
cmp
lds
scas
in
pop
sub
paddusw
push
in
imul
gs
jg
stc
pop
shll
sub
xor
enter
leave
pop
mov
pop
sub
out
inc
xchg
bound
sbb
push
pop
lret
imul
push
outsb
insb
jno
mov
jge
mov
movsl
clc
mov
adc
jns
inc
in
and
rorb
inc
cmp
xchg
jbe
test
js
pop
shll
inc
xor
dec
xlat
mov
jle
jne
push
mov
aad
loop
xchg
test
cmp
push
add
lds
or
mov
out
daa
inc
clc
jmp
enter
pop
jl
mov
mov
outsb
jecxz
cmp
sti
jl
mov
call
inc
mov
push
stc
mov
mov
es
jge
jge
ss
dec
mov
test
out
or
daa
xchg
insl
push
clc
push
das
push
fcmovne
lods
cld
out
stos
mov
iret
xor
test
mov
pop
pop
xchg
out
jl
mov
daa
mov
mov
orb
dec
js
outsl
cmp
mov
ds
adc
test
jno,pn
mov
push
xor
out
repnz
jmp
rep
cmp
adc
loop
pop
inc
xchg
test
jo
roll
add
cld
stc
loopne
inc
lds
test
andb
mov
loop
loopne
dec
sbb
xchg
ja
jp
jl
and
stos
or
popf
inc
test
mov
mov
cmp
push
enter
xor
repnz
movsb
cmpsb
lcall
push
mov
mov
nop
test
add
inc
sti
or
and
gs
addb
popf
push
lea
sub
sahf
mov
push
jmp
jmp
scas
das
icebp
xor
jecxz
loope
push
add
or
es
mov
and
sbb
inc
pushl
mov
cmp
or
addl
xchg
je
clc
lret
inc
add
inc
addr16
sub
sub
in
cmp
dec
mov
cmp
push
fisubl
stc
pop
gs
jns
scas
jge
cli
dec
fisttpll
and
adc
add
jne
mov
icebp
and
es
cmp
xchg
dec
dec
out
sub
pop
push
lea
int3
insb
jge
int3
xchg
outsb
fs
jns
pushf
dec
scas
loopne
mov
dec
nop
addr16
jo
ret
divl
pop
rolb
push
inc
inc
add
iret
jno
jp
xchg
cmp
inc
jns
test
ss
cmp
push
loopne
lds
into
mov
jno
jge
loope
mov
cmp
xor
mov
loope
pop
adc
and
movsb
lcall
enter
pop
fnstsw
dec
in
decb
call
lret
fistpll
hlt
in
or
inc
jecxz
les
and
call
mov
inc
test
test
mov
insb
outsb
jno
pop
les
push
jo
push
ljmp
jle
sbb
out
mov
mov
divb
pushf
mov
xor
and
repz
lcall
jb
cld
inc
and
out
test
out
pusha
bswap
divl
pop
add
adc
inc
or
cwtl
pop
push
jne
xchg
sub
cltd
dec
mov
ss
pushf
inc
insl
adc
cwtl
jne
arpl
ds
sbb
cmp
out
push
stos
mov
and
cmc
cld
and
fisubrl
lret
sbb
movsb
fldcw
ja
or
outsb
lret
das
push
sarb
sarl
scas
sub
fnsave
lahf
repz
pop
out
add
lock
pop
leave
inc
rcll
ret
jns
pop
out
or
in
push
aam
lret
ja
dec
jmp
cmpl
mov
je
andb
dec
arpl
stc
push
ljmp
bound
sub
jmpw
mov
rorl
ds
ret
cmpsl
or
inc
pop
mov
mov
pop
dec
out
xchg
cs
and
ds
xorb
lock
and
daa
push
or
gs
inc
scas
imul
or
and
inc
add
push
pop
and
fildl
xor
inc
stc
test
xor
dec
dec
or
bswap
jmp
jae
mov
das
popa
add
or
test
roll
dec
jmp
lods
das
mov
insl
sahf
sbb
xchg
lret
sbb
mov
add
aaa
fdivr
push
jmp
pop
xchg
scas
addl
pop
push
mov
test
cmp
jle
mov
lcall
cwtl
mov
pop
jbe
pmulhw
in
jno
test
repnz
push
and
jl
push
adc
and
pop
add
mov
cmc
jns
das
mov
cs
test
jl
or
mov
sbb
dec
mov
fdivrl
pop
pop
into
mov
jl
mov
inc
mov
lods
pop
add
loop
push
mov
enter
mov
mov
cmpsl
jmpw
popa
out
outsl
sub
stc
sbb
scas
mov
cmpsl
sub
ja
mov
movsl
inc
inc
mov
ds
jo
push
cmp
lcall
push
xor
data16
jmp
add
pop
sti
pushf
dec
loope
push
jmp
stc
dec
xchg
out
dec
fiadds
cmc
fsubrl
xchg
cmpsb
dec
cs
mov
test
inc
jns
in
xchg
je
xchg
push
pop
outsl
push
mov
dec
in
or
out
cmp
int
test
ja
jae
ret
subl
imul
imul
or
xchg
dec
cld
mov
add
pop
in
pop
rolb
cmpsl
push
or
or
pop
mov
sub
call
scas
and
fsubrs
adc
push
push
bound
cwtl
and
push
mov
jmp
rolb
add
xchg
push
sub
cwtl
mov
idiv
inc
ss
ljmp
mov
mov
call
loop
les
cwtl
inc
imul
insb
pushl
add
scas
punpcklwd
data16
push
jge
mov
daa
out
stos
adc
mov
movsl
and
pop
cmp
lahf
jb
mov
push
aaa
sti
jge
push
repz
xchg
jbe
leave
scas
add
xchg
fnstcw
push
es
mov
xchg
mov
ja
dec
aas
xchg
test
inc
push
add
jl
inc
test
shl
inc
cwtl
mov
repz
xchg
fisubrl
popf
mov
xchg
mov
in
inc
jae
lds
jb
mov
stc
dec
mov
mov
negl
fwait
jge
shll
daa
xchg
inc
and
jns
lods
pop
add
xlat
mov
mov
std
pusha
xchg
imul
jbe
mov
jno
mov
cli
cmp
add
dec
cmp
outsl
shlb
fnstsw
mov
jmp
ss
xor
in
dec
mov
jmp
mov
cli
sub
jmp
shlb
fnstsw
mov
adc
inc
xchg
imul
and
or
inc
xchg
je
mov
xchg
jae
cmpsl
or
das
xchg
loope
push
out
mov
shlb
jge
mov
mov
adc
inc
cwtl
jns
scas
sbb
xlat
mov
xchg
jbe
test
jmp
inc
jae
lds
jb
mov
stc
dec
mov
mov
negl
fwait
jge
shll
daa
xchg
inc
and
jns
lods
pop
add
xlat
mov
mov
std
pusha
xchg
imul
adc
jae
jecxz
sbb
ret
push
xor
inc
movsb
shl
mov
imulb
pop
and
pop
std
iret
scas
scas
jmp
fstpt
add
inc
add
add
in
scas
push
xor
mov
xchg
sbb
in
dec
into
pop
ja
and
es
cmp
das
fildl
push
xchg
into
pop
cs
xchg
bound
imul
xor
repz
mov
jmp
decb
sahf
ficomps
in
mov
shll
mov
inc
sub
repz
cwtl
jns
scas
sbb
fdivrp
xor
add
push
jmp
pop
inc
jae
add
out
nop
mov
inc
in
shlb
xor
sbb
arpl
mov
fisubrl
xlat
mov
mov
std
pusha
xchg
imul
adc
cmp
mov
mov
adc
add
ret
