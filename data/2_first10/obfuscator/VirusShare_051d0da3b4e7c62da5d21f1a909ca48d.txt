lea
mov
seto
movl
lahf
jmp
scas
and
in
fwait
sbb
popf
fidivs
fmuls
mov
mov
sub
mov
cmpsb
cli
test
test
shl
adc
mov
repnz
outsb
sub
jnp
daa
cltd
fsubl
into
sub
and
xlat
adc
and
in
fwait
sbb
jo
dec
add
push
sbb
xor
out
cmp
js
adc
sub
xor
push
xchg
xor
jge
dec
loope
movsl
mov
out
iret
jb
mov
daa
iret
push
das
fcoml
push
shr
sbb
or
arpl
cmp
enter
icebp
bound
sub
adc
movw
pushf
movb
lea
jae
pushf
jmp
or
in
fwait
sbb
pop
jbe
sbb
fmuls
cmpsl
ret
inc
inc
fldenv
push
fwait
mov
xchg
mov
repnz
push
inc
fcmovne
mov
in
mov
mov
ret
jmp
dec
out
cmc
repz
jmp
into
and
push
mov
mov
rorl
and
lcall
and
arpl
in
fwait
sbb
ret
lods
jbe
jbe
shrb
mov
jle
inc
pushf
test
js
arpl
jo
repz
sti
push
ljmp
cmp
popf
movsl
call
jg
cmp
insb
push
arpl
sbb
rcr
pop
inc
push
clc
xchg
pop
popa
in
fwait
sbb
push
or
lahf
mov
daa
pop
out
jg
ret
and
xchg
insb
inc
bound
add
inc
and
mov
addr16
or
imull
and
ss
aaa
scas
popf
leave
imul
leave
gs
mov
dec
cmpsb
inc
jmp
inc
mov
testl
mov
daa
gs
cmp
sbb
xchg
and
mov
mov
test
mov
dec
call
xor
ds
in
adc
push
gs
pop
pop
popa
mov
in
mov
jl
testl
mov
dec
jbe
xchg
sbb
add
clc
pusha
or
pusha
lea
jne
pushf
mov
pusha
pushf
popl
stc
pushf
cmp
or
mov
push
movb
lea
jne
jmp
pushf
pushl
popf
movw
push
push
pushl
lea
jmp
and
sbb
adc
sbb
xlat
insb
add
lret
js
dec
sub
xchg
mov
inc
push
js
mov
test
fidivs
mov
inc
lret
out
adc
jl
call
push
call
push
mov
ljmp
andb
es
sbb
in
test
sub
lahf
inc
lods
es
dec
inc
cmp
outsl
xchg
mov
push
and
std
sub
cltd
int3
or
cs
and
mov
movsl
inc
aad
or
int3
shlb
dec
inc
aam
test
test
jno
pop
fmull
jmp
ljmp
fistpll
or
push
and
out
int
xchg
jecxz
das
cmpb
sub
or
push
ljmp
pop
cmc
mov
test
sub
mov
shr
rcr
adc
int
cmp
into
repnz
push
inc
popf
arpl
pusha
inc
nop
popf
xchg
test
sub
dec
insl
adc
pusha
sub
xor
push
inc
xor
stc
inc
lret
inc
outsl
jno
sbb
inc
pop
cltd
arpl
inc
xor
ret
pop
cs
pop
cmp
lods
fsubrs
mov
push
cmp
cmc
cmpb
jmp
test
jnp
fwait
sbb
jno
lcall
addr16
pop
in
ret
or
adc
cli
les
dec
add
dec
cld
daa
mov
cmp
cltd
repz
int3
xchg
sub
inc
stc
das
cmp
dec
scas
inc
lret
xchg
popf
pop
dec
das
hlt
jbe
insl
dec
dec
sub
rcr
push
int
ret
pop
daa
push
ret
push
mov
fnstsw
imul
sub
mov
inc
mov
sub
stc
jp
push
call
sbb
lock
sub
push
mov
pushl
popl
cmp
stc
cmp
cmp
push
lea
ja
mov
or
inc
test
sub
bts
mov
add
stc
shld
mov
or
and
call
dec
add
cmp
jae
cmp
pop
mov
and
int3
dec
jno
in
adc
sub
add
sub
push
adc
pop
idivl
jecxz
addr16
adc
xor
imul
fs
and
aas
imul
lock
xchg
adcb
adc
out
aaa
out
xor
mov
jne
xchg
loopne
cmpb
push
lea
jne
rcr
mov
test
add
bt
clc
pushf
movzwl
lea
and
mov
cmp
mov
test
add
call
dec
push
push
inc
push
cmp
cs
insb
add
or
add
rolb
inc
ljmp
or
add
iret
pop
xchg
fs
rolb
cmp
iret
push
sahf
aad
cmp
add
jns
roll
add
add
mov
add
lock
lret
mov
not
xchg
add
add
xor
xchg
pop
add
push
jns
mov
test
xchg
or
add
pop
and
movsl
fldl
test
repnz
add
movsb
xchg
imul
adc
rolb
arpl
fldl
push
or
add
add
add
mov
add
add
call
xchg
add
add
xchg
add
add
call
xchg
add
add
movsl
fldl
test
or
iret
push
roll
sbb
shlb
movsl
fldl
test
jno
movsl
fldl
inc
mov
fldl
inc
cmp
xchg
add
test
lahf
jmp
imul
inc
add
add
pushf
inc
or
pop
pop
add
pop
xchg
ss
outsl
imul
add
cmp
fldl
add
movsl
fldl
add
sahf
aad
cwtl
add
add
lea
and
rolb
sahf
push
mov
insl
movsl
fldl
test
jns
mov
add
add
jge
sarb
xchg
add
add
insb
adc
adc
add
adc
sbb
xchg
add
stos
xor
add
add
imul
mov
add
imull
push
test
or
add
or
insb
lret
lods
fldl
shrl
roll
mov
movsb
fldl
test
icebp
jmp
mov
cmpsl
push
push
push
pushl
or
jmp
push
call
fimuls
xor
mov
push
add
jbe
pushf
mov
pusha
pushf
lea
jmp
lea
pushf
pusha
movb
movl
pushl
mov
pushf
pusha
push
pushl
ret
bt
pusha
push
sub
clc
call
lea
movw
movl
pushf
mov
pushf
pushf
pushl
pushl
ret
test
in
sbb
pop
mov
int3
xadd
pop
cmp
leave
cmc
sbb
imul
orb
popa
jmp
and
fisubs
or
movsl
or
ljmp
xchg
jbe
sub
sub
icebp
mov
adc
push
fldenv
stos
shrb
lock
and
scas
add
sbb
mov
js
cmp
cmpsl
test
push
repnz
or
cli
iret
aad
push
in
push
fwait
sbb
add
sub
add
mov
mov
sub
jl
push
inc
pop
jb
cmp
hlt
outsb
and
psrad
push
fstl
xchg
inc
in
xchg
pushf
jmp
jl
pop
cli
dec
adc
jmp
repnz
js
inc
push
cs
xchg
push
inc
pop
out
push
xchg
sti
clc
ds
jne
dec
jmp
xchg
mov
push
jae
in
sbb
fwait
sub
subb
pop
mov
push
loope,pt
add
jmp
cli
mov
addr16
pop
sub
xor
mov
aas
jbe
xor
or
mov
jb
xor
jmp
xchg
stos
lret
fidivrs
push
stos
jle
sub
mov
push
and
mov
bound
jmp
jnp
nop
stc
push
inc
fiadds
out
dec
cwtl
repnz
xor
push
js
call
aas
cmp
or
mov
into
or
les
xchg
ds
push
pop
fists
sbb
cmpsl
mov
fcomps
inc
jne
jecxz
sbb
jge
dec
lea
push
mov
inc
and
lock
xchg
in
or
push
jmp
out
pop
popf
stos
push
mov
sub
fwait
inc
gs
gs
icebp
xlat
add
jp
mov
rcrb
or
test
mov
arpl
add
jecxz
cmpsl
test
fwait
sarb
push
pop
sbb
sub
mov
loop
mov
out
or
fwait
sbb
mov
fucompp
sub
loopne
push
dec
popf
repnz
push
dec
arpl
lods
iret
and
in
rcrl
sbb
mov
jge
sbb
imul
jns
xor
iret
aas
add
std
pop
push
loopne
insb
dec
mov
call
jg
adc
sub
jmp
fstpl
xchg
addb
add
sti
inc
or
add
add
pop
jecxz
add
add
add
or
add
add
in
cli
pop
add
add
add
add
add
add
add
pop
add
add
add
xchg
or
add
add
xchg
add
addb
add
les
add
add
add
pop
pop
add
add
add
add
add
jno
add
or
aaa
cmp
add
pop
pop
add
add
add
mov
add
add
add
sbb
add
push
call
in
pop
or
popf
les
pop
or
sbb
mov
testb
icebp
aad
mov
int3
in
jl
sbb
call
cmp
dec
ret
add
and
mov
push
cli
jmp
fisubs
pushf
or
pop
mov
stc
cmp
call
push
call
into
lods
and
idiv
call
xor
push
call
push
movsb
lea
idivb
sbb
mov
push
push
repz
push
add
icebp
push
push
call
scas
pop
addr16
lea
je
pusha
pushl
bswap
jmp
push
mov
pushf
pushl
inc
pushf
mov
adc
movb
pushl
ret
lea
jb
stc
pusha
pusha
cmpb
call
inc
add
loope
sbb
pusha
cmp
mov
lahf
repz
dec
dec
ret
test
pop
popa
mov
in
lcall
sbb
out
add
iret
jno
pop
jae
pushl
cmpl
pushf
lea
je
adc
mov
shl
sub
sbb
btr
shr
neg
test
bt
mov
neg
sub
add
or
add
add
rcr
shl
not
mov
cmp
jmp
adc
mov
fwait
sbb
loop
ja
mov
and
cmpsl
lcall
shll
adc
xor
mov
cmp
shrb
fcomps
test
jbe
loop
adc
mov
inc
xor
jecxz
aaa
mov
xor
dec
hlt
lds
outsl
lfs
xchg
lods
iret
rcrl
pop
loop
decl
inc
sub
stos
ror
xchg
pushf
xchg
xchg
mov
adc
xlat
stos
test
pop
lcall
je
add
jg
add
ja
add
mov
push
loopne
sbb
cli
lods
idivl
or
push
fimull
mov
or
dec
mov
or
or
int3
shl
xor
xor
dec
dec
mov
or
jno
pop
mov
push
sub
xchg
lret
dec
int
cmp
fcmovnu
cmpsl
in
or
mov
stos
jp
xor
fwait
out
aaa
out
mov
push
sbb
int3
imul
push
int3
cld
mov
mov
arpl
jmp
add
test
es
mov
jo
sbb
idivl
sbb
cmp
stc
lret
aaa
sub
scas
xchg
pop
jno
adc
repnz
sub
ja
pop
push
call
cmp
fwait
sbb
bound
sbb
jecxz
fdivl
jmp
jae
jge
add
dec
pop
jb,pt
add
lret
in
stos
data16
or
push
mov
push
xor
adc
in
fcomip
movsl
xchg
out
stc
mov
pop
ret
in
hlt
jne
rep
mov
adc
adc
or
btc
inc
rcr
mov
test
and
clc
bt
call
lea
jp
jne
jmp
mov
sbb
inc
mov
mov
mov
xor
mov
xchg
adc
jb
add
call
popf
dec
in
pusha
andb
dec
push
jecxz
stos
pop
das
nop
jno
popa
pop
sub
fldenv
shl
je
adc
loop
test
gs
lods
lods
lock
lods
jp
push
lock
xchg
push
call
mov
ds
or
push
call
js
pushf
jmp
mov
lea
push
pushf
lea
call
push
push
jmp
sub
movw
call
push
rolb
and
int3
stos
cmp
jmp
jno
scas
in
in
es
sahf
jbe
push
test
fwait
add
out
ljmp
jbe
test
push
cmpsl
dec
and
dec
mov
jl
rclb
rorb
inc
pop
rorb
mov
mov
popw
mov
pop
das
mov
jl
lret
aaa
pop
inc
scas
mov
in
xor
fstpl
cli
and
ljmp
push
sahf
cld
cmpsl
nop
add
rcrl
or
adc
into
jg
std
sahf
mov
movsb
fsubl
or
push
leave
sbb
bound
popf
int3
jnp
push
cli
fucomp
inc
stos
enter
or
inc
lcall
push
cltd
jge
test
call
push
call
shl
adc
fcompl
pop
pusha
xor
sbb
stos
lods
dec
pop
push
jl
and
mov
es
into
cmp
test
outsb
movsl
shll
mull
mov
shll
sbb
pop
adc
jno
dec
nop
mov
adc
mov
adc
push
mov
rorb
ret
fisubl
pop
adc
cmpsl
dec
push
call
das
pop
loop
and
add
or
sbb
pop
mov
popa
pop
mov
lahf
inc
xor
imul
js
and
add
jnp
and
in
cmp
lea
int
fimull
fcompl
shrb
cmpsb
nopl
loopne
xchg
add
dec
popa
adc
or
arpl
jecxz
adc
pop
mov
inc
ljmp
fdivrl
mov
pop
stos
out
mov
imul
orl
bound
push
nop
scas
mov
leave
xor
mov
movsb
cmp
xchg
js
mov
mov
stc
xchg
push
pushw
push
into
sar
rol
mov
test
cmc
push
cmp
cmp
call
clc
test
push
call
mov
call
push
call
cltd
sbb
incl
mov
mov
push
pushl
lea
jmp
stc
pushf
mov
mov
mov
jmp
push
call
movsl
ret
cmc
in
push
call
dec
xchg
fs
sub
pushf
pusha
rep
movzbw
lea
not
bswap
mov
pushl
lea
jmp
push
or
fwait
sbb
mov
out
mov
call
dec
xchg
or
mov
cmp
mov
jae,pt
mov
nop
and
push
enter
std
rcrb
xor
test
lock
insl
sbb
icebp
int
push
aaa
add
loop
sbb
pop
mov
out
loop
lock
mov
adc
sbb
sbb
clc
mov
sub
cs
shrb
fwait
or
cmc
rcrb
xor
mov
lods
pop
mov
pop
jno
adcb
pop
jp
fs
sbb
cmp
shl
es
mov
lock
lcall
lcall
pop
cmpsl
xor
adc
mov
fs
mov
cmc
imul
jmp
stos
aas
xlat
es
add
add
and
inc
jecxz
cmpsl
jp
jmp
daa
fstps
repz
movsl
mov
and
frstor
negb
jge
leave
fwait
and
push
xchg
stos
mov
out
mov
jnp
hlt
mov
adc
cmp
xchg
imul
mov
sbb
mov
lock
hlt
shll
push
cmc
sub
testl
push
call
in
ret
das
xchg
fstps
adc
and
les
and
int3
push
mov
pushl
jnp
outsl
in
sub
fdivr
push
xchg
ret
aas
cwtl
mov
inc
pop
sarl
sub
xor
daa
mov
mov
out
imul
ja
sbb
iret
js
loop
push
pop
push
call
ss
mov
add
negl
call
outsb
pop
and
push
fcomps
jbe
jne
subb
orl
sbb
lds
mov
movsl
stc
push
test
pop
mov
and
sti
sar
dec
mov
enter
jae
cld
or
xchg
pop
or
mov
mov
sub
adc
xor
dec
mov
mov
lea
jne
push
pushf
pusha
mov
lea
jmp
push
call
nop
jae
imul
testl
nopl
jecxz
insl
in
popf
test
loope
xchg
jbe
jnp
sub
popa
mov
lahf
xor
xor
ficoml
stos
pushf
jg
cs
pop
cld
add
and
push
sub
push
sbb
mov
xchg
loope
setno
xchg
or
pop
pop
das
dec
sbb
xor
push
aaa
leave
test
push
xchg
mov
ja
sbb
push
daa
test
mov
add
pushf
mov
pusha
pushl
lea
jmp
cmp
pusha
mov
pushf
call
push
call
gs
pushf
call
push
movzwl
shr
rol
lea
mov
bt
add
cmp
mov
pushf
test
movb
mov
lea
je
pushf
movw
add
cmc
call
push
call
call
push
call
and
or
push
call
cmp
jmp
cs
scas
lea
ja
bt
neg
neg
neg
add
rcl
mov
cmp
cmp
pushf
jmp
push
call
and
mov
movzbw
mov
pushf
lea
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
lret
cmc
fwait
sbb
iret
test
dec
mov
fnstenv
and
sbb
cmpsb
cltd
sbb
std
sub
ret
cmpsl
in
push
outsb
cmpl
jae
pushf
movsb
lret
pop
or
or
cmpsl
scas
filds
jge
sbb
dec
je
out
adc
add
dec
add
mov
cmp
jmp
xchg
dec
fisubs
les
xchg
mov
xor
mov
iret
mov
sbbb
sbb
and
icebp
cmp
rorl
pop
jbe
cmp
pop
sub
lcall
fwait
sbb
or
dec
jno
mull
adc
ret
mov
cmp
jge
ret
fwait
das
cli
add
sub
test
lret
nop
push
push
push
push
addl
int
or
push
lods
pusha
pop
mov
mov
push
adc
in
adc
clc
testl
sbb
xorb
shl
test
outsb
cmp
cli
faddp
mov
jmp
lcall
gs
lret
into
jno
insb
pushf
lret
jge
aas
fstl
imul
cli
jg
outsl
adc
cltd
mov
or
xchg
aam
sahf
daa
cltd
aad
sbb
repnz
mov
pop
das
adc
subb
daa
imul
clc
mov
daa
xlat
and
add
lret
jmp
in
or
sbbl
add
orl
jle
popa
pop
mov
sbb
fwait
sbb
out
inc
sbb
fwait
inc
sub
loop
lret
sub
popf
out
jle
insl
pop
xor
inc
in
add
push
lahf
nopl
subl
stc
js
lods
adc
ljmp
adc
fisubrl
xor
or
fidivl
movsb
mov
pop
sbb
loop
add
add
cld
leave
push
push
jge
lods
jp
jl
loope
mov
mov
sub
mov
out
sbb
pop
icebp
loop
push
push
pop
lret
mull
aad
xchg
and
loopne
imul
movsb
cmpsb
cld
mov
mov
in
push
out
orb
jl
test
dec
mull
nop
repnz
loopne
or
xor
testl
fwait
sbb
mov
fwait
andl
cwtl
jl
push
mov
sbb
mull
sub
pop
pop
cmpsl
add
jmp
cld
xchg
and
call
mov
dec
mov
jle
and
mov
inc
mov
inc
out
ret
std
rcrl
insl
arpl
inc
loope
lahf
sub
popa
hlt
add
out
and
push
insb
adc
outsb
popa
sub
stos
enter
sti
push
lea
call
mov
test
aam
sbb
inc
icebp
dec
and
fwait
dec
into
add
and
pop
push
push
popa
mov
rcrl
aaa
inc
incb
and
push
push
sbb
sub
push
jno
add
js
xor
sahf
cmp
adc
and
loopne
mov
cmp
aam
jae
nop
xor
push
jmp
dec
xchg
stos
pop
or
sahf
cltd
imul
xor
xchg
mov
int
popf
movsl
dec
cmc
enter
pop
push
add
clc
ror
dec
fcoms
sbb
xlat
push
lea
jae
jmp
inc
mov
cmc
repnz
push
call
shl
mov
test
bt
test
cmpb
call
call
mov
lea
jne
dec
mov
and
and
sbb
push
sub
lea
xor
lea
cmc
bt
sub
pushf
pushf
clc
stc
pushl
popl
bt
cmp
lea
jns
push
lea
ja
pusha
sar
sbb
sub
adc
xor
or
lea
add
add
or
mov
cmp
and
mov
cmp
jmp
push
call
insl
fmull
lea
jne
push
call
pushf
lea
jne
bswap
cwtl
pushf
mov
push
movl
movb
lea
jmp
je
push
rcrb
jb
in
cli
cmpsb
cltd
jns
addr16
mov
icebp
push
mov
jecxz
data16
fwait
xor
js
jecxz
imul
adc
loop
int3
fsubrl
add
or
xchg
mov
pop
adc
xchg
pop
cmpsl
test
loopne
cwtl
jb
xchg
xchg
sahf
pop
stos
sub
mov
xor
pop
shlb
std
push
rcrl
pusha
mov
mov
ljmp
lahf
mov
addl
xor
movsl
clc
jl
xchg
mov
loopne
repz
pushf
lea
call
push
push
pusha
lea
jmp
push
call
push
jbe
push
call
stos
push
mov
mov
xor
and
add
bsr
neg
bsf
shld
movl
shrd
inc
mov
pusha
pushf
bt
test
pushf
call
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
pusha
push
pushl
popl
cmc
test
cmp
pushl
call
lea
jmp
mov
jne
fwait
sbb
add
jp
dec
add
cmp
and
xchg
rcrb
xchg
inc
sbb
sbb
lea
jmp
sbb
or
cmp
imul
nop
popa
mov
dec
sbb
xchg
xor
iret
sub
clc
adc
and
clc
les
dec
int3
xor
rcr
xchg
and
xchg
inc
jne
dec
sbb
mov
dec
dec
dec
inc
push
nop
aaa
nop
dec
cmpsb
movsb
pusha
mov
lea
jp
push
push
movw
pushf
mov
pushl
ret
lea
ja
bt
cmc
clc
imul
jmp
xor
test
pop
add
out
pop
dec
cmp
sbbl
cmpsl
lods
sub
xchg
mov
add
in
jno
sbb
sub
cmp
je
fldcw
jne
clc
roll
lret
push
mov
orb
daa
sarb
lock
ljmp
test
in
imul
cmp
imul
fnstsw
xchg
adc
mov
pushf
std
shrb
sbb
aam
jae
out
shrl
mov
mov
fisubl
adcl
sarb
int3
insl
adc
jecxz
xchg
xor
jne
sbb
repz
in
jl
sahf
les
xchg
sub
outsl
xchg
in
mov
incl
lea
fiadds
fnstenv
cmpsb
add
ja
mov
lret
daa
push
xlat
insl
repnz
call
fcomps
pop
inc
xchg
mov
inc
push
xchg
pop
dec
push
xor
xchg
jmp
and
mov
pushf
ret
pop
mov
rcll
fcmovb
or
out
adc
pushf
into
call
mov
jmp
btc
sub
shld
rcr
sub
mov
jp
stc
pusha
pusha
sub
pushl
pushl
popl
cmc
jmp
lahf
gs
into
fwait
sbb
adc
dec
add
fisttps
jno
pop
pushf
and
mov
lret
add
cmp
adc
das
cld
dec
fiaddl
in
cli
mov
rcr
push
subl
fwait
sbb
push
dec
mov
aam
xor
mov
dec
dec
sbb
cmp
imul
adc
jns
dec
test
out
fcmove
pusha
and
and
inc
add
push
jae
xchg
les
std
aas
jg
out
sub
xlat
sub
cmp
inc
xor
xor
jmp
pusha
je
cmpsb
clc
bnd
in
mov
jl
aaa
fisubl
popf
cmpsl
stc
xor
icebp
stc
js
xor
add
jecxz
cmp
cs
sub
fwait
sbb
daa
scas
push
mov
into
inc
xchg
scas
andl
sub
repnz
loop
push
or
cli
xchg
popf
xchg
pop
ds
incb
xor
popa
movsb
cmp
mov
adc
cmpl
repnz
dec
mov
ljmp
push
pop
xchg
mov
dec
cmpsl
sbb
fwait
sbb
sub
and
mov
cs
pop
mov
push
jbe
rorl
cwtl
dec
mov
jg
loop
insl
jno
jge
popa
imul
or
fsubrs
iret
imul
aam
cwtl
dec
mov
roll
adc
out
testl
sbb
pushl
xor
lahf
popl
clc
lahf
imul
enter
mov
repz
je
mov
movsl
inc
push
pop
ss
pop
xchg
rcrb
in
adc
cs
je
jge
xor
sbb
adcb
pushf
les
sbb
mov
mov
mov
push
or
push
xor
sub
mov
mov
adc
fildll
idiv
push
call
adc
inc
movl
push
pushf
pushl
popl
push
pushl
ret
and
sbb
in
cmp
adc
dec
pop
repz
insb
loop
inc
push
xor
pushf
pop
mov
inc
es
sbb
mov
or
cmpsl
mov
mov
mov
or
repz
fwait
and
fmul
test
sahf
inc
fwait
scas
sbb
xchg
fwait
ljmp
push
inc
cli
sbb
sub
jmp
stc
mov
adc
mov
in
sbb
and
push
dec
jo
push
xor
add
popa
jb
push
gs
imul
jl
add
enter
fwait
sbb
inc
mov
scas
stos
js
negl
push
lock
mov
sub
jmp
fnsetpm(287
push
sarb
int
shll
adc
mov
inc
sbb
inc
call
xor
lahf
cwtl
call
and
jno
movsb
mov
fwait
sbb
imul
mov
or
pushf
inc
addb
jno
bound
sub
push
imul
stos
push
xor
or
aaa
fisubs
neg
mov
xchg
cmp
loopne
iret
xor
and
jo
xor
push
jo
pushf
xor
in
leave
cmp
pop
fadd
loope
nop
negl
pop
sub
push
push
lea
jmp
bound
lret
out
pop
mov
aaa
push
outsb
rcll
shll
fwait
bound
lock
pop
mov
imul
out
cmc
dec
jecxz
popf
pop
movsl
cmp
hlt
ret
lret
or
xchg
sub
shl
mov
call
sbb
mov
or
in
test
and
cld
mov
lock
rcr
sbb
lods
sbb
inc
and
sub
sbb
cmp
sbb
sbb
ret
les
imul
adc
mov
dec
in
scas
or
inc
orl
sbb
inc
inc
scas
ret
jo
lods
mov
jnp
jl
lods
rcrb
and
lret
add
roll
mov
stos
pusha
not
sets
not
mov
jmp
push
call
cmp
cmp
aaa
adc
cmpsb
je
aas
fidivs
cmp
lea
call
sub
pushf
jnp
std
adc
loopne
scas
inc
in
scas
rcrb
xor
outsl
outsl
jo
mov
rclb
out
and
popf
ret
loopne
inc
pop
daa
call
popf
add
adc
movl
call
cltd
sbb
enter
xchg
out
rclb
out
jge
test
fs
cld
mov
xchg
xchg
lock
cltd
scas
flds
xor
insl
add
inc
divps
cmp
out
test
jne
ret
adc
and
test
pop
jle
add
push
clc
popf
push
in
or
or
jmp
dec
ss
push
mov
push
movl
bswap
lahf
mov
seto
movl
bswap
movsbl
setne
jmp
js
outsb
enter
fidivl
std
shrb
lret
push
outsl
jnp
mov
test
cmp
push
sub
sub
ss
das
pop
insl
fwait
cmp
adc
cltd
xor
stos
add
jno
and
out
or
aad
add
incb
movsl
and
sub
dec
and
pusha
lea
ja
rcr
bsf
add
xchg
movsbl
shr
rol
bt
call
mov
mov
fwait
sbb
mov
cmp
jae
lret
add
gs
cmp
push
mov
mov
sub
mov
mov
insb
gs
cwtl
or
xchg
push
call
test
jge
movsb
mov
push
mov
push
bound
add
shlb
sub
push
lock
mov
mov
insl
call
aam
sub
sub
fwait
sbb
lret
cmp
mov
sbb
push
xorl
fsub
mov
mov
ud0
push
popa
xor
xor
xor
mov
test
sub
add
mov
or
cmp
sub
mov
jmp
imul
jecxz
lcall
add
ljmp
sti
sub
dec
or
fwait
rol
fwait
sbb
addr16
lods
push
pop
lret
mov
ss
call
fwait
push
push
cwtl
aad
cmp
mov
xor
xchg
in
hlt
ja
cmp
sub
jno
stc
dec
out
jno
mov
or
imul
sbb
jno
mov
shr
pop
sub
cmp
lea
or
inc
or
sub
xchg
fwait
sbb
cmp
in
and
adcb
jmp
stc
lods
rcrb
insb
mov
jbe
inc
add
andb
out
mov
insl
test
push
shlb
stos
test
stc
test
mov
mov
xchg
push
ret
add
add
xchg
mov
in
xor
fmull
ds
jbe
sub
mov
arpl
push
mov
sub
gs
push
cmpsb
add
pop
clc
sub
cmc
bt
mov
add
cmp
not
mov
clc
call
pop
add
in
outsb
push
pop
dec
sub
aas
gs
aad
lds
clc
jg
xrelease
mov
push
xor
xor
test
or
rclb
mov
test
inc
std
loopne
aam
mov
and
es
jno
mov
pop
mov
adc
lret
push
idiv
fcoml
imul
std
out
inc
sub
adc
stos
fidivl
inc
fld1
sbb
sub
inc
fstpt
popf
adc
mov
cmpsb
sbb
aad
sub
ret
outsl
test
aas
jne
bnd
add
adc
dec
xchg
push
add
push
negl
push
call
adc
gs
popa
addr16
outsl
js
add
stc
les
inc
and
xchg
mov
jl
push
leave
movzwl
push
sub
sub
scas
fwait
call
stos
dec
sub
mov
into
mov
push
lea
cmp
jno
addr16
stos
xlat
jge
adc
shrb
js
pop
add
cmp
rcrb
mov
jl
sbb
mov
das
idivl
out
call
out
xchg
imul
add
pushl
popl
call
movw
cmp
mov
lea
ja
bts
add
sbb
call
pusha
xor
fwait
sbb
pop
dec
dec
pop
test
out
in
lret
pop
cmpsl
rcrl
xchg
rol
fldl
nop
jecxz
or
lahf
mov
jmp
jle
sbb
rcr
sbb
mov
iret
test
in
mov
pop
sbb
lds
pop
out
inc
lea
cmp
jae
lods
mov
mov
sahf
int
stos
movsb
addr16
jno
fcmovnbe
clc
fldl
mov
lock
mov
loop
rclb
push
push
leave
mov
sahf
jp
sbb
loop
push
pop
push
xor
js
or
mov
mov
popf
lea
and
insb
jb
aaa
dec
ss
rorb
mov
fwait
sbb
cmp
fidivrs
pusha
and
das
sub
in
push
sub
ss
rcrb
cmpl
lahf
xor
fists
test
popa
call
sbb
pop
sub
aad
lret
xchg
mov
in
cli
xchg
fisubrs
sbb
cli
or
inc
lcall
dec
fldt
sub
in
sbb
jbe
loop
adc
and
insb
das
xchg
xchg
addb
fs
imul
call
jmp
negb
sub
xchg
dec
push
call
or
negl
call
cmp
dec
call
in
jmp
lea
call
pusha
call
lret
or
dec
and
jne
add
imul
inc
or
in
jbe
popf
mov
sub
pop
das
mov
shrl
pop
adcl
pop
jmp
aad
and
mov
sbb
shrb
inc
sbb
popf
push
adc
push
inc
add
fstpl
addr16
mov
adc
jns
push
lret
addps
pop
bound
out
mov
dec
dec
out
shll
mov
or
or
dec
rclb
idiv
repz
subl
call
ret
pushf
push
call
or
hlt
shlb
call
pop
test
int
movsb
movsb
notl
inc
testl
in
xchg
cmp
int3
jnp
cmpsb
pop
or
loop
cmp
sbbb
in
outsb
outsb
fistpll
xchg
pusha
decl
outsb
xorb
add
negl
call
cmp
adc
mov
call
cltd
dec
cmp
cmp
dec
sub
les
dec
imul
rcll
sti
test
imul
or
mov
push
cmovle
xchg
rolb
loope
sbb
pop
inc
push
add
imull
sub
push
adc
ljmp
movb
jmp
inc
call
fistl
arpl
fucomi
lret
dec
cmp
shrl
ret
lds
nop
arpl
call
dec
ds
jae
jno
dec
arpl
push
mov
cmp
sub
pop
push
rcrb
push
sub
iret
or
arpl
jno
mov
dec
sub
sbb
pop
cmp
add
or
fcoml
xchg
jne
mov
mov
movsl
lea
inc
faddl
outsb
sub
imul
daa
jae
cmc
and
jecxz
or
rorb
or
lock
sub
cmp
lahf
jnp
mov
push
ja
les
jecxz
cmp
dec
adc
addl
sub
sti
lret
lret
sub
cmpsb
sbb
fsub
adc
push
mov
or
sub
xchg
sti
jnp
cmp
clc
xchg
push
dec
or
movsl
sub
or
push
xchg
loope
cmc
std
test
push
insl
jmp
xchg
push
fadd
std
call
dec
dec
mov
sbb
repnz
cmovo
cmpb
cmp
lea
cmp
jmp
dec
insl
aaa
xchg
fnsave
xor
add
mov
add
insl
cmp
jge
lds
xor
stc
loope
xchg
shrb
test
inc
push
clc
das
call
sti
dec
clc
mov
fwait
jle
in
inc
cltd
sti
fsubl
jno
inc
push
test
dec
sub
add
pop
call
cmp
mov
ds
ja
shlb
fxch
subb
mov
sub
and
jp
dec
add
ret
test
cltd
and
xor
inc
jg
add
jae
push
sbb
fnstsw
cmp
jg
add
les
cmp
lcall
fs
imul
stc
jecxz
push
outsl
addl
cltd
add
ds
pop
xchg
aaa
mov
shl
mov
mov
enter
hlt
arpl
cs
cmc
adc
pusha
cmp
sbb
loopne
xchg
lahf
cmp
movl
rcrb
ds
in
imul
sar
mov
in
int3
dec
rorl
out
lret
cmp
aad
jp
loopne
sbb
stos
clc
mov
fwait
pop
arpl
lds
sbb
mov
clc
ret
push
cmp
fldt
sub
leave
sub
push
cs
push
mov
sbb
pop
clc
outsl
sub
add
fcmovb
mov
cmpsl
fwait
lahf
xchg
pop
les
pushf
mov
test
scas
loope
sbb
sarl
shll
mov
bound
pop
jl
jmp
mov
mov
push
or
repz
lea
pop
dec
inc
or
fwait
adc
sbb
je
fstl
or
add
movsl
sarl
sar
adc
xchg
lods
mov
jp
mov
or
sbb
mov
fsts
ja
pop
incl
or
mov
mov
pop
dec
or
jne,pt
js
jge
add
inc
dec
mov
out
mov
or
sti
and
cmp
push
loope
push
inc
add
adc
call
sbb
pop
sti
loopne
dec
jecxz
cs
pushf
pop
mov
rcr
pop
lds
cwtl
jmp
inc
jmp
jae
sub
mov
add
push
cmp
les
lahf
mov
sbb
insb
lds
sbb
dec
pop
pop
loopne
movsl
and
popa
scas
push
cmp
cmp
pop
jnp,pn
ret
mov
dec
orb
and
imul
and
xor
add
pusha
je
cmp
xchg
loope
mov
stos
sub
inc
pop
stos
scas
pop
cmp
xchg
fadds
xrelease
or
aaa
jmp
test
mov
je
xchg
lds
mov
inc
and
and
push
mov
test
dec
dec
and
mov
sub
in
cwtl
dec
pop
test
cmp
pusha
push
dec
pop
sub
jge
enter
std
cli
fldl
and
jns
pop
insl
enter
dec
mov
fadds
test
inc
adc
mov
or
fld
test
sti
jecxz
stc
stos
add
dec
in
mov
mov
pop
sti
into
fisttpl
das
fldenv
mov
xor
adc
incl
loope
mov
jno
repnz
popa
adc
notl
int
adc
and
jb
ret
sbb
or
stos
sti
cmc
jae
lret
aam
mov
fstpl
subl
jmp
adc
push
jp
jmp
push
pop
test
call
push
sub
rorl
adc
mov
sbb
pop
adc
mov
cmc
mov
fnstcw
gs
adc
aas
jmp
jecxz
stc
roll
adc
xor
and
int3
andb
pop
mov
call
lods
add
rorl
aad
and
int
add
pushf
xor
mov
mov
mov
mov
scas
test
push
jb
gs
outsl
add
cmpsb
mov
stos
out
xchg
or
sub
es
and
and
cmp
dec
or
loopne
fdivs
push
movsl
mov
mov
mov
stc
les
dec
xchg
or
pusha
push
jg
popf
pop
repnz
sub
jbe
pop
movsl
push
mov
jae
mov
inc
cmpb
enter
sub
je
sub
dec
inc
fwait
test
jge
mov
dec
test
mov
leave
stos
rcrb
cmp
dec
fidivrl
hlt
dec
adc
pop
xchg
cmpsb
sub
out
add
sbb
ds
or
aam
fldcw
or
loop
or
add
mov
sub
push
lock
sub
insl
mov
lea
loop
mov
mov
or
or
inc
sbb
arpl
and
data16
push
mov
cli
lds
sub
jg
jle
cmpsl
fstps
mov
mov
insb
mov
negb
sub
pop
int
cld
adc
inc
sbb
or
sbbb
sbb
cmp
loop
cmpsl
mov
aaa
aas
xchg
sar
adc
push
add
repnz
loope
inc
js
test
aaa
pop
mov
notl
xlat
mov
dec
dec
sub
sahf
fldt
notl
into
push
repz
mov
or
cmpsl
daa
cmp
and
bound
sub
cmp
sarb
xchg
or
dec
subb
sarb
jnp
sub
xchg
stos
andl
cmp
push
hlt
cmpsb
out
dec
sti
sub
xor
adc
xchg
das
sub
sub
rolb
enter
xchg
push
lahf
fs
stc
sbb
cmpsb
jae
mov
sub
push
ds
cld
mov
mov
test
sar
inc
mov
popf
mov
inc
shrl
mov
xchg
cmp
repnz
mov
push
pop
sub
cmp
lret
sbb
loope
xor
inc
scas
subl
or
cmp
sub
imul
shlb
xchg
bound
push
jb
jl
leave
repnz
cltd
popf
sbb
sub
clc
add
push
lcall
add
mov
imul
xchg
sub
mov
adc
mov
in
add
jl
shll
dec
sub
scas
lods
lock
in
stos
daa
cmpsb
fwait
lods
in
push
aas
test
sub
add
inc
lret
inc
mov
sarb
sub
ret
inc
addr16
cmpsl
xchg
sub
push
test
dec
pop
pop
inc
test
divb
ret
scas
or
arpl
inc
pop
insl
mov
push
xchg
sub
sub
cmp
insb
add
std
hlt
sub
push
push
jecxz
fwait
pop
nop
in
mov
or
into
sub
add
sbb
pop
xchg
fs
sbb
jae,pt
or
sub
cltd
jnp
imul
lcall
imul
cmpsb
fwait
jge
mov
les
lahf
and
shrb
pop
ret
fs
pop
rorb
dec
push
out
mov
fdivrl
leave
ds
into
xchg
out
bound
lds
in
cmp
cmc
out
adc
sbb
xchg
jecxz
push
or
iret
xchg
sub
clc
fnstenv
sub
xchg
sub
rcrl
mov
xor
push
push
mov
mov
cmp
jecxz
pop
sub
adc
xor
imulb
mov
std
jp
test
jmp
imul
adcl
jns
push
add
add
sub
aad
enter
jl
stos
bound
call
shll
sub
and
std
xchg
cmp
shll
jne
xor
pop
cltd
sbb
out
movsl
stc
adc
in
sub
dec
addr16
xchg
pop
fst
or
test
out
xchg
mov
out
leave
jno
xor
sbb
ret
aad
sub
sub
jp
pop
sub
push
loopne
sub
or
pop
gs
sub
popa
sub
pusha
movsb
sahf
cwtl
jg
psllq
rclb
jno
pop
in
sub
jp
push
outsb
mov
outsl
in
or
dec
xor
loopne
jg
fistps
leave
sbb
mov
clc
das
imul
test
lea
sub
inc
jp
pop
add
imulb
loopne
out
arpl
in
pushf
sub
jmp
dec
fdivrs
call
ljmp
fwait
testb
and
sbb
gs
xor
ds
xchg
dec
push
sbbb
and
sub
mov
fcompl
mov
dec
sub
sub
sub
ret
cltd
xchg
leave
mov
jecxz
outsb
mov
sub
ljmp
mov
cld
sub
subb
jno
cmp
sub
jnp
test
sub
and
sub
int3
pop
stos
jnp
popf
sub
stc
add
pop
not
jae
cmp
inc
call
bnd
adc
sahf
cmpb
cmp
inc
test
out
test
shl
loope
mov
sbb
jg
rclb
inc
pushf
ljmp
xor
dec
out
int3
jle
frstor
push
pusha
add
sub
sub
ds
jns
lret
ja
ds
enter
xchg
mov
and
daa
out
or
sub
inc
pop
fsubrs
pop
push
dec
fcmovb
mov
jmp
enter
jecxz
mov
nop
pop
xlat
sub
xchg
push
mov
mov
dec
xorb
test
repnz
imul
test
inc
sbbb
int3
cltd
sub
xchg
jge
xor
sahf
inc
pop
lds
sub
int
iret
sbb
sub
jo
mov
dec
lock
les
loopne
shr
or
adcl
sub
mov
push
push
sub
xchg
adc
mov
outsl
cmp
jle
sbb
pop
mov
cltd
loopne
push
and
sbb
cwtl
sarl
cltd
fidivrl
clc
clc
push
sbb
cwtl
pop
test
inc
decb
jecxz
add
xor
adc
sub
add
loopne
or
andb
mov
mov
ficoml
outsl
iret
popa
in
xor
add
adc
rcrb
jecxz
jg
mov
push
xor
ss
jno
fwait
pushf
negl
inc
jmp
test
add
sbb
pop
sub
dec
inc
lock
fsubrl
cld
in
sub
pop
cmpsb
scas
sub
jo
lahf
adc
mov
mov
in
add
xor
cwtl
imul
movsl
outsb
push
sub
inc
in
cmp
sub
push
test
dec
movb
add
add
dec
push
into
push
xchg
iret
sti
xchg
ss
mov
in
sub
fwait
xchg
push
icebp
inc
inc
jge
sahf
std
aas
int
incb
ret
popa
data16
dec
cmc
repnz
leave
sub
notl
xchg
sub
mov
sub
pop
pop
cmp
mov
int
sub
idivb
xchg
frstor
push
sub
xchg
outsl
sub
xchg
ret
cmp
sbb
xor
mov
inc
movsl
mov
popf
dec
loope
mov
iret
xchg
loop
test
sti
push
mov
vandps
insl
jno
test
push
mov
push
cmpsl
arpl
xchg
imul
xchg
sub
sub
aam
cld
fcmovbe
sub
loopne
mov
sub
or
ja
pop
dec
sub
and
sub
dec
adcb
adc
ffree
inc
mov
push
scas
mov
stc
sub
popa
pop
mov
insl
adc
xchg
sub
push
es
push
shll
jbe
mov
addr16
popf
push
add
call
dec
in
stos
adc
jnp
in
sub
push
fisttpl
aaa
fiadds
adc
sbb
stos
jl,pt
out
jge
cwtl
xchg
daa
sub
je
jg
into
xchg
in
mov
add
sub
pop
dec
sub
pop
xchg
movsb
or
sub
mov
ret
sub
hlt
lea
sub
mov
pusha
mov
jg
mov
jmp
dec
lock
cmp
mov
out
ret
sbb
xor
cmp
sub
pop
aad
jge
sbb
sub
lock
test
hlt
test
pop
rcrb
out
and
ljmp
pusha
cli
lock
imul
push
aad
call
inc
xor
stos
cltd
fidivrl
jne
mov
call
ret
xchg
xor
xor
sbb
sub
js
stc
or
xchg
ret
incb
or
dec
inc
push
dec
outsb
sti
fimuls
inc
fdivrs
pusha
pop
cmp
fstps
sub
sbb
sub
xlat
pop
pop
inc
in
js
lahf
inc
sub
inc
mov
pop
sub
bound
movsl
pop
mov
sub
cmp
cmp
xor
cmp
pop
sub
nop
lods
inc
pop
pusha
push
clc
mov
ret
jecxz
in
push
insl
rolb
jg
mov
sub
out
lods
mov
outsb
mov
stos
clc
and
mov
insb
int
sub
in
fdivrs
das
mov
adc
pop
push
test
jp
dec
es
out
inc
mov
sub
mov
mov
sub
rcl
pop
sub
js
out
jmp
scas
sub
inc
adc
les
daa
sub
je
stc
mov
sub
jae
xor
mov
orl
push
fisubrs
xor
dec
or
int
xchg
cmp
mov
shlb
fdivl
cmovne
cmp
in
lcall
outsl
or
stos
bound
mov
cs
mov
js,pt
adc
rorl
mov
sub
cmpsl
inc
sub
mov
add
sub
or
jge
sbb
sub
dec
mov
outsw
mov
jae
sub
push
xchg
aad
lods
sub
mov
rolb
daa
cltd
aas
test
xor
pop
push
inc
or
add
loopne
pop
jnp
add
adc
sbb
xlat
popf
xchg
es
clc
push
insl
popa
sub
loopne
adc
sbb
scas
sub
out
xlat
cli
jecxz
movsl
pop
mov
imul
push
outsl
or
dec
xchg
inc
loop
pop
or
repnz
test
jge
dec
push
test
movsl
imul
cmp
mov
lret
aaa
jae
jmp
jp
sub
loopne
jb
or
sub
out
mov
imul
cmp
mov
jmp
sti
mov
push
sahf
sub
test
and
mov
jae
dec
mov
outsl
jmp
jae
ds
push
lahf
iret
dec
call
bound
sub
loop
aaa
sbb
xor
fildll
mov
fwait
ss
mov
sub
xor
mov
arpl
mov
lods
test
sub
dec
icebp
push
rorb
jge
sub
stos
xchg
clc
loope
sub
sahf
data16
stos
xchg
movb
sub
out
push
pop
sub
pop
test
sub
scas
sub
xchg
cmpsb
xlat
aaa
arpl
sub
sbb
mov
inc
sub
hlt
mov
iret
dec
mov
mov
mov
sub
sub
fisubrl
push
addr16
js
ljmp
sub
jae
mov
jno
loope
or
sub
lcall
mulb
mov
xchg
cwtl
push
sub
lock
and
mov
loope
sbb
jecxz
sbb
mulb
jge
push
sub
mov
pop
pusha
jae
ss
or
cmpsl
pop
sahf
sub
mov
jmp
push
cmp
jmp
lds
popa
cltd
xchg
add
push
inc
cld
clc
mov
lahf
sub
negb
sub
stc
or
sub
mov
aad
movsb
add
sub
out
xor
jae
xchg
lods
mov
jns
popa
rcl
shrl
loope
stos
sbb
sub
jae
xlat
adc
pop
cmc
sub
notl
pushw
sub
lds
xor
les
cmp
sbb
sub
or
xor
repnz
jo
mov
inc
push
adc
ds
int
ret
jae
xchg
in
sahf
dec
insl
mov
loope
sub
lret
fadd
dec
and
sbb
cmp
mov
dec
jge
mov
push
dec
dec
imul
pop
jl
loopne
movsb
fisubrl
repnz
and
xor
sbb
scas
test
jmp
xchg
jg
ljmp
mov
add
xor
sub
adc
aam
jle
sub
mov
adc
pop
push
push
stc
sub
ja
add
add
inc
out
push
xor
imul
test
or
push
aas
add
mov
xchg
cmp
cmpsb
xchg
fdivp
mov
dec
cld
repnz
adc
jno
sub
inc
sbb
jae
add
push
repz
out
aad
pop
pop
insl
lret
sub
mov
clc
insb
es
jg
repnz
and
inc
stos
cmpsb
in
dec
mov
sbb
loope
pop
inc
or
movsb
adc
pop
jl
cld
loop
push
lretw
dec
mov
sub
aam
pop
push
push
cs
adc
dec
and
mov
sub
test
sub
enter
xchg
pusha
xchg
shll
filds
aas
xchg
nop
jge
inc
push
into
sub
adc
push
sub
mov
sub
xchg
icebp
sub
xor
popf
test
jae
test
sub
bound
push
inc
pop
xchg
jecxz
repz
out
lret
lret
xchg
stos
movsb
inc
sub
xor
sub
jmp
mov
in
int
repz
mov
movsb
sub
loope
mov
scas
dec
or
stos
in
inc
lret
enter
pop
outsb
into
imul
inc
mov
add
jae
sbb
test
dec
movsl
jno
sub
dec
loop
push
mov
fst
dec
jmp
sub
jnp
mov
cld
out
pusha
outsb
jo
push
test
mov
push
xchg
push
clc
sub
mov
or
pop
fsubrl
mov
test
mov
pusha
jp
inc
int3
sub
ds
or
repnz
sub
addr16
xchg
sub
fucomip
jg
fwait
pop
mov
in
xchg
icebp
xor
mov
mov
xchg
nop
cmpsb
cs
in
xchg
daa
pushf
movsl
int3
sahf
sub
lcall
push
push
stos
fmull
jo,pt
mov
fisttps
pop
mov
sub
jne
shl
fwait
jae
sub
lds
cmp
add
rorb
jge
repnz
jbe
sbb
adcb
xor
icebp
adc
sti
xchg
add
insl
jns
adc
lods
pop
fldcw
xchg
xchg
int3
into
test
shll
fsubrl
mov
ret
pop
and
add
and
mov
xor
imul
push
je
sub
mov
into
sub
iret
ds
cmp
aaa
lcall
jns
lret
test
mov
shrl
ret
ds
inc
insl
mov
lock
mov
test
cmp
cmp
mov
adc
cltd
lea
cltd
loopne
test
test
dec
testl
es
mov
jp
les
insl
and
sub
shrb
or
sbb
sbb
lret
fstpt
pushf
ret
jl
and
stos
and
adc
xor
add
aad
mov
pusha
cli
popa
pop
bound
inc
push
lea
cs
mov
sub
fmul
mov
lahf
les
pop
sbb
dec
fsubr
dec
repnz
fcomi
xor
and
pop
imul
jns
bound
imul
sub
sbb
xchg
test
jne
mov
and
ss
jp
test
daa
insb
enter
xor
inc
cmp
or
dec
sbb
mov
inc
sbb
xchg
mov
arpl
out
mov
ljmp
fwait
mov
sub
xchg
repnz
xor
ss
stos
pusha
mov
mov
lret
pop
sub
mov
call
ds
xor
xchg
cmp
mov
cmp
loope
sub
xor
dec
xor
cmc
push
jmp
xor
shrl
lods
out
bnd
std
mov
test
dec
add
dec
mov
jno
sbb
sub
cmp
pushl
pop
out
or
mov
aad
jnp
ljmp
mov
xor
jmp
cmpsb
cld
and
and
rol
ret
or
mov
scas
mov
adc
orl
cmp
cmp
ljmp
mov
mov
mov
imul
pop
cmpb
dec
loop
stos
rcl
push
lret
push
enter
ret
pop
or
cmp
mov
sub
and
dec
fidivrs
jb
in
sub
pop
pop
mov
inc
bound
popa
rcll
addr16
mov
xchg
sub
pop
je
xchg
cmp
sub
cwtl
sahf
push
sub
pop
std
xor
pop
fsubrl
out
or
add
cs
adc
js
xchg
sub
sub
pop
outsl
and
jae
sub
scas
pop
xchg
outsb
push
adc
dec
sub
mov
lods
pop
pop
aaa
test
ljmp
in
add
sub
sbb
add
mov
mov
mov
sub
xor
push
les
test
sti
jne
sub
ret
jb
push
cmp
jle
add
sub
push
cmp
push
jae
xchg
add
push
loope
sub
or
les
mov
inc
call
ficomps
cmp
xchg
shrb
xchg
xorl
mov
jge
xchg
lds
mov
cmc
mov
out
stos
fcompl
call
cmc
xchg
pop
fs
or
enter
push
dec
dec
aaa
sub
test
xlat
dec
shrl
std
or
loopne
and
dec
dec
loop
pop
mov
dec
sub
cmpsb
and
cmp
or
hlt
mov
pop
cmp
rorl
xor
sub
xor
cmp
out
inc
sub
out
imul
rorl
imul
scas
and
jge
sub
inc
and
js
cli
dec
scas
xchg
cmp
mov
mov
pushf
mov
enter
ja
xor
out
push
inc
mov
ret
leave
ficompl
out
jae
jno
sar
repnz
mov
jp
add
sub
scas
or
mov
jno
aaa
sub
leave
push
scas
ret
sub
fiadds
sub
jo
jge
cmpsb
cmp
inc
pop
frstor
clc
in
add
in
shrb
xlat
pop
imul
xor
mov
shll
sahf
mov
sub
loop
mov
sub
ficoml
adc
mov
out
sub
inc
ret
adc
addr16
and
sub
mov
sub
adc
sub
xor
ret
enter
pop
into
push
xchg
cmc
xor
xchg
mov
pop
outsl
or
loopne
int3
and
pop
out
fs
shl
movsb
mov
adc
or
mov
or
es
sub
cmp
imul
cmpl
sub
sub
xchg
mov
into
mov
sub
clc
inc
flds
int3
mov
ds
icebp
fdivrp
or
or
popa
sub
sub
mov
push
mov
popf
cmp
xchg
adc
pop
sub
sti
test
lret
lcall
jmp
fsubs
stos
and
adc
sub
icebp
mov
in
cli
push
mov
sub
lret
dec
movsl
sbb
cmp
stos
jp
push
movb
cmp
mov
in
cmp
clc
repnz
sub
xor
mov
sub
cmc
fwait
imul
sub
ficoms
lret
movl
dec
or
into
mov
es
jmp
and
dec
push
outsb
mov
leave
xchg
cmp
mov
cmpsl
pop
mov
movsl
sub
popa
sbb
test
sub
fnstsw
nop
ds
cmp
or
test
mov
pop
sub
lea
fidivrs
sub
pop
aaa
data16
or
fisubl
daa
pop
sub
pop
xchg
mov
repnz
fcmovb
jg
sbb
in
sub
out
mov
mov
mov
adc
fwait
lods
inc
rcr
sub
add
inc
ds
jne
xor
jmp
mov
addr16
out
fisttpl
popa
mov
mov
sub
push
pop
sbb
and
sub
cmp
out
mov
ss
lret
int
sub
xor
pop
push
push
shr
dec
sub
in
add
sub
cmpl
or
ljmp
xchg
jne
dec
dec
jnp
mov
mov
aad
lret
xchg
sub
jecxz
in
xchg
mov
fdivr
sub
imulb
sub
out
jae
xor
xor
sub
jmp
out
mov
stos
in
sub
add
cmp
cmp
imul
jle
push
aaa
mov
call
jge
daa
iret
sub
bound
mov
into
imul
dec
lea
push
lret
icebp
push
dec
pop
sub
mov
jns
jle
sahf
sub
shl
push
cwtl
ds
pop
stc
dec
sbb
or
adc
stos
jbe
sub
cmp
pop
sub
rorb
mov
aas
and
jmp
test
sub
mov
enter
xchg
mov
fdivrs
popa
repnz
call
jo
sub
dec
imull
sub
mov
dec
pop
flds
scas
sub
lds
sub
pushf
outsb
or
adc
fwait
ljmp
lods
repz
mov
sbb
shl
sub
cs
aam
xlat
jae
out
and
lods
sub
out
cmc
push
mov
sbb
test
aas
imul
loope
adc
pop
jno
mov
dec
jns
ficomps
mov
pop
mov
inc
subb
push
decl
cmp
jl
mov
imul
inc
call
int
cmp
out
sub
sub
jb
cmpsb
or
and
test
cli
push
stc
pop
jns,pt
mov
mov
jmp
fstp
dec
adc
add
sub
cltd
cmp
sub
jb
mov
push
fldcw
stc
pop
sbb
sub
and
inc
mov
popa
dec
sub
fmul
pop
inc
loope
mov
sbb
mov
push
jno
adc
sub
sub
jbe
pushf
sub
clc
inc
dec
icebp
rcl
shrl
mov
xchg
pop
sub
cwtl
gs
mov
cmp
aas
pop
sub
and
jmp
dec
stos
les
mov
cltd
icebp
std
xor
sub
sub
xchg
inc
sub
cs
sub
and
dec
or
int
adc
in
mov
dec
mov
ret
fdivrs
push
outsb
sub
mov
mov
cld
and
fisubrl
mov
imul
sub
sub
jecxz
call
outsb
jo
stos
dec
js
hlt
sub
lock
test
shrl
and
mov
sub
jmp
enter
in
lret
dec
pop
inc
sub
and
xor
mov
xor
or
sub
ss
pop
sti
arpl
scas
inc
aad
outsl
sub
imul
movsb
mov
mov
or
sub
sub
xor
pop
dec
pop
mov
rcrb
pop
sub
cmp
imul
test
dec
fsubrl
xor
rorl
mov
push
jb
jo
cmp
mov
mov
xor
sahf
enter
inc
mov
movsl
lret
stc
ds
pop
or
fisttps
inc
je
jle
jge
or
sub
in
cmp
sub
push
enter
call
outsl
add
sub
ret
sub
sub
dec
test
jne
jle
outsl
insb
add
adc
js
sub
lds
sub
lcall
mov
pop
rcl
dec
test
xchg
sub
and
xchg
push
xor
pop
jge
or
and
mov
xlat
gs
dec
and
cmp
add
sbb
dec
mov
ds
inc
adc
and
inc
jo
push
arpl
dec
and
clc
and
leave
mov
jnp
cld
imul
push
or
rcl
cmc
sti
xchg
test
sbb
fstpl
dec
dec
inc
xor
aaa
sub
jo
mov
push
jne
test
and
pop
cwtl
mov
out
xchg
pop
jno
mov
jmp
xchg
lods
jbe
sbb
sub
add
sub
sub
aaa
sub
pop
cmc
pushf
dec
xchg
lahf
out
imul
mov
and
stc
out
in
xchg
sub
cmpsl
adc
mov
lcall
bound
xorb
pop
prefetch
and
scas
mov
mov
adc
clc
add
ds
dec
imul
push
cmpsb
push
in
js
push
dec
dec
shl
sub
jne
inc
test
clc
imull
out
or
or
sub
and
xchg
mov
add
out
cwtl
movsl
sub
and
inc
into
loopne
mov
push
xchg
sub
xor
mov
cmp
and
or
sub
jne
mov
iret
es
stos
movsb
mov
pop
cmp
and
test
fdivs
or
jg
outsl
movsl
test
mov
sub
mov
cmp
mov
dec
sub
repnz
add
ds
and
sub
lods
sti
mov
jmp
or
pop
int
mov
rcll
shll
push
sub
mov
jb
sub
xor
push
xlat
push
jno
sbb
and
sub
pop
ror
lret
and
sub
fbld
xor
sahf
adc
out
js
stos
xor
adcb
sub
gs
test
dec
jg
test
sub
sub
arpl
loopne
mov
adcl
jne
lret
sub
fidivl
mov
lods
lcall
in
mov
out
test
cld
jnp
ret
push
movsw
push
cmp
ret
cmovo
xlat
stos
sub
xchg
popa
jl
rol
sbb
shr
jecxz
sub
stos
xor
adcl
fsubrs
mov
aam
sahf
sub
pop
jl
rol
call
inc
pop
and
add
mov
fs
push
repz
mov
call
jb
jae
xchg
sub
mov
in
out
or
loopne
add
sbb
pusha
insb
and
adc
ret
sub
xchg
sub
xchg
mov
ds
sub
rorb
in
sub
sub
sub
faddl
mov
sub
inc
and
popf
inc
push
cmp
das
sub
repnz
sub
scas
daa
pop
adc
test
inc
or
mov
sub
sbb
jecxz
test
aad
xchg
xlat
lods
cld
in
sub
fsubrs
icebp
and
lret
clc
cmp
test
pop
gs
arpl
sub
sub
repnz
pop
jo
sbb
sub
ja
cmpsl
jmp
popa
imul
jbe
loope
jae
pop
xchg
dec
mov
in
rorb
scas
xor
sub
cmp
es
mov
sbb
fsubl
subl
or
repz
inc
out
xlat
sub
or
enter
mov
call
movsb
inc
mov
loop
sbb
arpl
and
sub
nop
outsl
dec
das
dec
lds
sub
or
dec
sub
and
mov
mov
lods
pop
idivb
adc
inc
pop
iret
jecxz
dec
sub
jmp
jl
cmc
mov
popa
pop
push
aam
repnz
push
and
popl
lds
stos
jbe
aam
test
sub
in
push
sub
jae
arpl
jecxz
xchg
mov
sub
shlb
clc
push
mov
shll
cli
imulb
icebp
sub
cmp
in
clc
push
inc
xor
imul
arpl
or
cwtl
inc
repz
lock
inc
sbb
ds
jg
imull
sub
sub
or
push
das
dec
ds
jae
xchg
dec
leave
ficoms
fwait
adc
cmp
or
int3
sub
cmpsl
add
cmc
pusha
sub
mov
dec
mov
subb
shrl
imul
sub
stos
test
mov
adc
cmpsl
mov
jo
mov
lret
rorb
add
mov
mov
fisubrl
les
out
insb
inc
sbb
in
mov
and
xlat
das
inc
repz
mov
jb
ret
cmpsl
out
push
call
outsl
xchg
pop
fdivrl
inc
mov
adc
xlat
or
sahf
push
sub
hlt
int
repz
sub
cltd
rorl
mov
lods
aas
inc
mov
sub
bound
das
mov
das
dec
sub
adc
fistps
scas
cmpl
rclb
push
sub
lock
mov
xor
mov
mov
dec
adc
dec
int
sub
push
insl
ds
sub
cld
push
leave
pop
or
sub
ja
or
sub
pusha
popa
push
inc
and
sub
idivb
jecxz
mov
push
stos
into
call
mov
jmp
sub
jne
mov
inc
pop
sbbb
popf
shll
ds
cmp
arpl
test
mov
sub
adc
lret
push
shrl
jle
sbb
jnp
call
stos
sub
notb
movsb
mov
sub
push
fldcw
movsl
roll
jle
push
push
popa
mov
imul
popa
xchg
stos
dec
mulb
stos
inc
in
sbb
cltd
into
js
jge
mov
mov
adc
pop
xchg
xchg
int3
cmp
imul
jp
mov
mov
sbb
pop
aad
push
mov
add
dec
lods
push
jmp
imul
pop
push
in
xchg
or
xor
movsb
xchg
out
sub
pop
and
or
sub
mov
fwait
adc
jne
lret
mov
inc
mov
fcoms
scas
pop
jns
cmp
sub
loop
test
repz
sub
test
repz
sub
adc
cli
add
mov
push
pop
aaa
cmp
jne
movb
mov
leave
test
pop
mov
shrl
out
fwait
push
xor
and
in
outsl
sub
push
lea
jle
adc
mov
iret
cli
sub
or
int3
pop
clc
fbstp
sub
test
lds
adc
sub
fcomps
aad
mov
cli
dec
jmp
ss
sahf
cmp
inc
sub
or
sub
pusha
jg
push
pop
sbb
mov
push
idivb
sbb
sub
mov
mov
xor
mov
repz
xchg
cmp
addb
sub
cmp
call
icebp
iret
adc
sub
mov
push
lds
dec
xchg
mov
sub
inc
imul
out
ds
andl
daa
fistpll
xchg
jle
jg
jbe
pop
sub
and
jmp
ret
sarb
dec
sub
and
icebp
clc
stos
adc
push
or
int
popa
mov
sub
mov
aam
mov
out
jmp
and
and
cmpsl
fsubl
adc
adc
jg
mov
aad
inc
xchg
xor
adc
sub
mov
push
sbb
mov
lahf
pop
insb
mov
xor
dec
mov
lcall
repz
call
mov
out
lods
or
std
sub
cmp
adc
sahf
je
test
pop
mov
add
and
scas
fstpl
xor
push
jle
lods
sub
pop
js
test
test
pop
xchg
and
and
sbb
sub
adc
roll
jmp
and
sub
fdivl
mov
sub
test
mov
mov
dec
pop
or
into
jmp
lods
sub
dec
imul
xchg
test
dec
lea
popf
mov
ret
dec
test
aam
inc
sub
xor
and
sub
jae
int3
or
inc
sbb
sub
addr16
xchg
out
stc
leave
sub
mov
pop
mov
sub
add
lret
inc
dec
mov
loop
push
mov
lods
jbe
lds
sub
xchg
push
pop
jle
jl
mov
xor
sub
scas
pop
or
das
fldcw
mov
enter
fcmovne
notl
push
cld
jge
mov
shrl
pop
mov
sub
enter
out
aaa
xchg
xor
int
jne
sub
lcall
sub
sbb
imul
lea
inc
add
sub
imul
sub
or
loop
pushf
dec
nop
ret
mov
xchg
leave
or
xchg
out
cld
roll
and
cmpsl
sub
addr16
add
adc
sub
jg
xor
inc
jge
sub
jle
and
scas
cmc
inc
imul
test
mov
shrb
jecxz
iret
inc
jb
and
hlt
jge
test
sub
add
adc
push
dec
add
cld
lods
sub
or
sub
leave
add
sbb
and
xor
sub
add
pop
loop
and
loope
and
aam
pop
fists
sub
ss
sub
mov
sub
adc
ret
scas
dec
sub
push
mov
sub
lds
inc
xchg
adcb
jo
negl
fimull
mov
mov
mov
insl
lahf
mov
mov
jo
fisubrl
mov
inc
jns
push
cmp
sub
insb
mov
cmp
imul
xor
sub
cmp
and
cmpsb
adc
dec
fbld
push
sahf
sbb
xadd
cmp
pop
push
aaa
xor
fdivrs
push
sbb
loop
mov
and
push
or
pop
adc
rcll
int
adc
pop
leave
sahf
pop
test
xchg
mov
js
xchg
dec
push
dec
mov
adc
testb
cmc
sub
cmp
loope
xchg
sub
pop
mov
nop
stos
insb
lods
push
mov
sub
lods
in
cmp
movb
mov
sub
in
dec
sub
push
ljmp
les
sub
mov
lods
sub
cmc
xor
xor
sbbl
and
inc
pop
ret
push
jb
sub
inc
jo
sub
or
or
inc
add
dec
aam
xchg
dec
jo
jle
sub
outsb
scas
xchg
ljmp
lds
push
sub
fs
sarb
aam
aaa
ret
or
sbb
leave
in
cmp
or
or
push
fucom
lret
and
enter
stc
sub
sarl
stos
push
ret
into
ret
insl
push
jl
jle
mov
ret
aam
cmp
sub
pop
cmp
sub
lods
int
repnz
push
cmp
jl
jnp
and
sub
cmp
cmp
lds
frstor
jno
shrb
jns
lret
sbb
xchg
outsl
mov
pop
outsl
sahf
fdivl
sub
dec
das
cltd
jnp
mov
fsubl
jo
cmp
xor
lea
adcl
cmpsb
sub
fwait
cmp
jmp
sub
test
out
xor
push
xlat
add
inc
ret
bt
adc
imul
inc
pop
daa
inc
mov
sub
mov
lret
pop
sub
push
movsl
xchg
aam
in
cwtl
int3
pop
call
jg
out
xchg
mov
xchg
rcll
jl
push
mov
sbb
mov
jb
aaa
dec
sub
jns
rclb
mov
loop
pushf
add
dec
addr16
imul
jnp
aaa
fsubrl
icebp
ret
pop
push
mull
or
mov
inc
ret
fldcw
xor
dec
jmp
cld
pop
push
call
call
pop
sub
xor
mov
ss
mov
out
int3
and
iret
mov
xor
pop
pop
adc
insb
xor
jns
loope
sub
sbb
and
in
clc
daa
insl
sbb
sub
stos
xlat
cwtl
jmp
cmp
sub
push
hlt
dec
enter
sub
xchg
mov
adc
or
je
pop
xor
pop
movb
dec
mov
ret
jae,pt
out
or
pop
add
sub
mov
loopne
xor
xchg
bound
sub
push
and
pop
ret
push
pop
jg
fwait
sub
sbb
sub
cmpsl
aaa
movsb
push
add
pop
push
mov
ret
inc
test
mov
iret
adc
arpl
jns
sbb
in
push
jp
jno
push
imul
add
mov
mov
mov
pop
xchg
jb
mov
repnz
xor
and
sub
sub
lea
adcl
or
les
add
stos
ret
mov
sub
fcoms
cmp
shlb
push
cwtl
xchg
das
pop
inc
sub
sbb
sbb
jns
stc
or
lock
out
cmp
jl
and
pop
daa
fucomi
pop
js
push
inc
mov
rorb
cli
and
mov
scas
dec
sub
dec
or
lcall
cmp
sub
push
add
ljmp
xor
rorb
jnp
add
mov
mov
cs
and
cli
stos
xchg
push
push
inc
das
aaa
div
dec
mov
test
movsb
inc
inc
mov
loopne
test
mov
mov
mov
pop
xchg
push
add
push
cli
addl
addr16
sub
xor
int
sub
mov
mov
sub
dec
in
xor
leave
pop
loopne
sub
mov
mov
inc
sub
and
jmp
addr16
cmp
jnp
rcrl
int3
push
sub
push
push
pop
scas
xchg
iret
mov
sub
shll
mov
dec
shrl
jb
repz
sub
mov
add
jle
mov
push
sub
push
ret
adc
cmp
and
pop
inc
jae
xor
dec
cmp
imulb
sub
add
sub
shl
mov
faddl
mov
sbb
sub
mov
adc
sub
add
xchg
dec
or
jle
rorl
adcl
xchg
mov
imul
dec
loop
aaa
aad
mov
cmp
sub
mov
aaa
sub
jmp
bound
push
lds
mov
lea
adc
imul
jg
les
lods
nop
jmp
push
sub
add
jecxz
sub
cltd
and
jnp
or
sbb
hlt
fwait
arpl
add
sub
imul
mov
jp
sub
mov
imul
sub
jge
sub
adc
cmpsl
dec
or
cmp
and
popa
dec
test
mov
sub
xchg
shl
push
pusha
in
dec
xor
adc
repnz
dec
mov
lea
sub
xlat
jge
inc
test
sub
ljmp
sub
jecxz
inc
pop
sti
fsubrl
stos
movsb
int3
or
push
adc
mov
in
and
rcrl
cs
les
mov
xchg
dec
dec
xor
test
shrb
aam
jno
cmp
push
inc
sahf
mov
pop
cmp
stos
mov
mov
inc
sub
xchg
out
xchg
clc
sarl
sub
shl
push
in
xchg
scas
lock
in
cld
fsubrs
jb
and
push
jle
fnstsw
push
and
pop
sub
fcomps
aam
lret
dec
mov
fmuls
pop
sbb
and
cmpb
xchg
dec
dec
sbb
jb
test
adc
add
xchg
jp
loopne
sub
clc
icebp
push
outsl
ljmp
in
cmpsb
or
loope
sub
mul
addr16
mov
cmp
xor
dec
sbb
ss
mov
and
sub
sbb
insl
sub
lea
out
pop
icebp
je
sub
fs
and
sub
mov
add
sub
movsb
aas
inc
lods
add
jge
xchg
outsl
dec
mov
jbe
lahf
push
inc
sub
push
sbb
pop
mov
sub
pusha
sub
sbb
sub
xor
xor
sub
jecxz
jns
inc
pop
mov
cs
loop
pop
cltd
repnz
popa
pop
xor
and
outsl
aad
leave
and
dec
sub
push
fadds
sub
cltd
roll
pop
mov
addr16
sub
xor
outsl
mov
sub
pusha
aam
cld
sbb
xchg
add
shrb
sub
std
jb
fwait
inc
xchg
sbb
jmp
imul
pop
bound
fs
xchg
loop
shlb
mov
sub
mov
lcall
jo
scas
sub
mov
jne
popa
dec
ss
popa
jl
sub
leave
adc
push
ficoml
fbld
cmp
add
dec
xor
inc
mov
stos
test
loopne
iret
sbb
sub
push
or
shlb
ret
fwait
cld
out
sub
jecxz
or
add
push
in
mov
jnp
pop
sub
lret
xchg
imul
sub
dec
addr16
jbe
sub
mov
insl
adc
pop
sub
lret
orb
xchg
lcall
mov
movsb
lret
mov
outsl
mov
xor
xchg
movl
add
mov
cmc
jp
xchg
ljmp
ffree
out
xor
fisubrl
sub
and
sub
jl
call
dec
outsl
enter
dec
mov
sub
mov
mov
movsl
push
divb
cmp
xor
insl
xor
dec
daa
mov
sub
pop
adc
call
jne
fistpll
xchg
and
sub
add
iret
pop
subb
xchg
stos
or
sub
lcall
lret
gs
xchg
clts
pop
icebp
bound
shll
in
mov
sub
jae
sub
movsl
outsb
sub
dec
pushf
xor
push
das
enter
popa
cltd
mov
test
xchg
cld
mov
ret
pop
out
sub
cmp
aaa
mov
addr16
cmp
sub
pop
dec
mov
stos
ror
push
sub
inc
bnd
pop
nop
jae
loopne
mov
sbb
xchg
and
dec
mov
test
popa
fld
and
sub
stos
or
sub
pop
mov
lea
lcall
jo
xchg
jbe
fcoml
das
jns
push
sub
outsb
ljmp
inc
and
dec
mov
xor
mov
adcl
stos
sahf
sub
mov
jne,pt
mov
insb
add
or
adc
shll
addr16
imul
fwait
mov
ret
inc
shrl
push
sbb
fisttps
jge
pop
sub
dec
les
jae
bound
stos
mov
imul
mov
cld
mov
pop
push
dec
in
push
pop
jge
fsubp
scas
movsb
dec
fs
inc
sub
insl
cmp
mov
adc
sarb
lds
enter
in
sub
dec
pop
xor
rorl
stos
push
fsubrs
jge
add
mov
out
subl
inc
arpl
cmpsb
sub
call
push
mov
jge
aas
pop
shrb
push
outsl
pushf
scas
cli
adc
or
dec
mov
out
push
sub
add
sub
mov
cmp
adc
xor
and
movsl
sbb
sub
not
mov
sub
mov
sub
xlat
mov
and
stos
pusha
es
xchg
mov
in
mov
jp
sub
dec
mov
daa
sbb
lret
icebp
test
and
sub
cmpsl
notb
push
sub
inc
popa
dec
jb
enter
cmp
clc
cmp
sbb
and
call
outsb
pop
xor
mov
sbb
or
cmp
sub
or
sub
mov
jns
sub
add
mov
call
push
lahf
imul
sub
test
mov
cwtl
mov
and
and
mov
lods
lahf
dec
fsubrl
loope
pop
aad
test
shrl
shrl
inc
loopne,pn
xchg
dec
mov
insb
sub
add
jge
subl
sub
push
ss
sbb
adc
mov
mov
mov
inc
add
pop
into
cmp
bsr
mov
je
pop
inc
dec
xchg
and
scas
sub
stos
mov
sub
pop
into
jae
mov
sub
in
imul
mov
popf
add
pop
jle
xor
dec
and
sub
cmc
or
test
add
push
sub
icebp
outsb
lods
sub
dec
popf
cltd
data16
nop
jge
jnp
addr16
nop
mov
ja
clc
jg
test
loopne
jp
cli
xor
loop
mov
sub
andl
jmp
stos
fld
mov
cs
mov
lret
adc
call
iret
test
pop
sub
jo
jno
loope
add
push
mov
cmp
pusha
je
stos
lods
out
xchg
bound
cmp
mov
push
sub
jl
fldenv
xchg
movsl
nop
rcll
adc
imul
mov
pop
and
mov
push
sarl
push
dec
add
into
sub
repnz
sbb
mov
sub
and
stos
shrb
loop
popf
fsubr
sub
sub
inc
lcall
xchg
sub
pop
sub
ja
jb
push
jg
push
inc
pop
mov
cmp
loop
sub
add
mov
mov
lret
sub
or
xchg
sarl
and
xchg
fs
loop
les
nop
decb
out
inc
mov
push
add
ds
cmc
pop
push
aaa
jmp
ja
and
std
test
sub
outsl
outsl
popf
adc
fisubl
test
pushf
clc
push
or
ds
call
jle
shlb
cmp
dec
scas
mov
fdivrs
pop
loopne
inc
fdivrl
test
xor
sub
dec
jne
aad
stos
add
sub
pop
and
movsl
sub
in
sub
xchg
xchg
jl
out
adc
xchg
dec
testb
add
loope
or
xchg
rorl
inc
mov
sbb
sub
divl
push
int
shlb
push
sub
idivl
mov
imul
stos
sbb
mov
xchg
xor
inc
push
or
sub
pop
dec
fs
add
mov
pop
jnp
pop
xchg
sub
mov
jns
xor
adc
mov
xor
xor
mov
stc
imul
add
sub
dec
lock
stos
cmp
jno,pt
test
cld
lret
jne
inc
dec
inc
xchg
dec
jae
xor
mov
inc
mov
cmp
xchg
stos
mov
jns
popl
pop
aam
fsubrs
dec
cmpsb
mov
fwait
sbb
enter
xchg
mov
sub
je
sub
out
push
in
gs
sub
test
fwait
sub
or
mov
les
push
fucomi
in
push
jmp
sbb
leave
pop
loopne
pop
pop
push
xor
test
inc
mov
mov
les
sub
lahf
pop
imul
jae
inc
mov
add
addr16
in
js
or
mov
shrl
add
cmp
int3
jns
lds
hlt
dec
fadds
adc
clc
shrl
push
in
cwtl
jmp
or
add
mov
or
in
sub
sahf
jo
jb
push
in
sti
fs
add
push
mov
outsl
or
js
sub
iret
ss
es
push
cwtl
cwtl
sub
mov
or
push
sub
xlat
enter
xor
sub
in
lret
sub
loop
mov
sub
push
pop
add
int
popl
sbb
mov
sub
jl
mov
int3
cmc
push
sub
dec
adc
mov
sub
adc
push
fwait
ja
imul
sub
adc
jecxz
mov
mov
daa
xor
test
icebp
fmull
jge
rcl
jl
sub
pop
je
pop
data16
in
jbe
xor
jmp
addr16
mov
mov
ror
outsl
insl
adc
stos
push
ss
push
push
test
mov
add
push
clc
pushf
ds
mov
int3
enter
movaps
aad
jle
xor
sub
cmp
movsb
repz
mov
or
dec
stos
jnp
mov
stc
shlb
sahf
sub
xchg
and
mov
mov
lds
aam
and
lock
inc
lea
mov
push
shll
push
or
mov
xchg
outsl
scas
inc
jne
pop
rol
inc
dec
xchg
sub
out
rcl
inc
sti
int
repnz
imul
pop
jmp
push
in
sub
xor
or
inc
das
or
lret
ljmp
int
stos
rorl
push
inc
aaa
sub
aaa
test
int
mov
les
data16
insb
xchg
adc
push
xchg
shrb
push
cmpsl
test
adc
sub
cltd
call
ljmp
inc
jge
movb
jmp
push
lcall
test
dec
sub
ret
fdivrs
mov
sbbb
mov
das
into
mov
jo
in
xorb
adc
inc
mov
xchg
mov
sub
test
out
xchg
ror
inc
mov
stos
push
dec
sub
loop
xchg
jmp
and
sub
or
cmp
dec
lcall
push
and
pop
xchg
testb
cmp
jecxz
sub
ja
imul
jb
cli
icebp
out
sbb
ret
adc
sbb
sub
or
mov
cmpsl
sub
pop
xchg
imul
lods
lcall
adcl
scas
mov
mov
lock
nop
leave
mov
les
sub
ja
ss
cmpsl
decl
outsl
sub
repnz
loop
sub
mov
sub
sub
lret
sub
es
pushf
cwtl
hlt
fcmovbe
adc
fdivs
cmp
dec
sbbb
scas
mov
adc
cmp
lods
out
adc
repnz
lret
jbe
dec
clc
sub
stos
aam
imul
rorl
sbb
mov
imul
cli
divb
lods
pop
sub
js
in
mov
mov
sub
sarl
adc
sub
cmp
mov
das
into
sub
scas
fwait
and
ljmp
sub
stos
xorb
fcompl
pop
sti
sub
data16
in
jmp
push
xchg
or
sub
mov
and
adc
sub
mov
into
imul
test
es
mov
test
push
jg
sbb
cwtl
sbb
and
inc
stos
sub
inc
adc
sub
mov
sbb
push
popa
scas
lds
inc
sbb
dec
call
inc
sub
cs
cli
cwtl
push
mov
add
mov
sub
popa
icebp
cmp
fimull
add
jl
loop
les
fildll
xchg
mov
jecxz
sub
dec
jb
sub
icebp
xchg
subl
mov
mov
sub
fwait
subl
mov
pop
cmpsl
pop
shrl
incb
popa
sub
fiadds
pop
nop
xlat
rcrb
sub
das
sbb
and
mov
or
popf
js
push
sub
nop
cmpl
in
sahf
push
insb
cmp
shrb
or
das
pop
jae
pushf
sub
xor
int
addl
sub
les
inc
inc
loopne
push
sub
in
and
rorb
sub
or
and
enter
dec
mov
lds
stos
jl
mov
fsubrs
push
pushf
sub
xlat
cmpsb
pop
les
dec
dec
add
xchg
imul
jle
sbb
ud0
mov
pop
mov
push
repnz
fwait
outsb
cltd
pop
insl
pop
dec
mov
imul
in
inc
and
sub
inc
hlt
adc
xorb
xor
sub
lcall
dec
nop
movsb
pop
dec
sub
push
mov
in
sbb
out
xor
dec
scas
push
jge
stos
xorb
daa
clc
xlat
sub
mov
xchg
sbb
adc
xchg
cmpsl
movsb
and
in
mov
push
lock
lea
repnz
mov
jnp
mov
fdivrl
fwait
mov
jp
or
ret
sub
scas
xchg
xor
lret
clc
cltd
cmp
lahf
adc
and
or
inc
adc
ret
jne
mov
aam
add
pushf
push
push
loopne
cmp
cmpsl
test
lods
sub
mov
imul
data16
iret
das
xchg
mov
push
cmp
xor
adcb
stos
test
dec
fstps
dec
imul
cmp
loop
rolb
xchg
addr16
adc
pushf
push
sub
xor
cmp
mov
repz
sub
dec
frstor
xchg
or
mov
push
mov
pushf
jmp
sbb
outsl
sysenter
cmp
sub
pop
test
adc
xchg
and
gs
adc
leave
cmp
adc
and
sub
pop
sbb
mov
jg
xor
or
mov
mov
sub
andb
push
mov
addr16
ds
xchg
sub
jle
adc
fwait
mov
js
push
xchg
enter
xor
mov
xor
mov
out
adc
add
out
xor
lret
pop
mov
mov
nop
or
iret
sbb
scas
push
fimuls
sub
loopne
mov
inc
mov
cmp
int
fwait
inc
outsb
sub
sbb
roll
pushf
and
xor
subb
inc
fisubrs
mov
sbb
mov
icebp
pop
sub
movsb
loopne
jo
xor
xchg
add
xor
cmp
mov
mov
jmp
push
jp
pop
test
mov
pop
lea
outsl
dec
pop
xlat
push
in
arpl
pop
out
jb
test
test
jg
fisubrl
cmp
cmp
stos
add
cmpsl
push
fwait
lret
pop
ss
sub
jnp
jb
subl
aas
or
gs
add
ror
sub
mov
sti
add
std
sub
xchg
je
insb
out
ret
mov
xlat
cmp
iret
test
inc
push
out
lahf
and
aad
popf
xor
push
rol
jg
lods
and
sub
test
lds
je
cmc
aam
in
test
cld
insl
sub
dec
pop
outsb
xchg
adc
sub
je
test
imul
and
jbe
lock
addr16
jno
test
sti
sub
dec
mov
mov
popf
cmpsb
scas
lock
inc
test
push
jbe
xor
cld
push
fcomps
mov
push
xorl
push
sti
imul
in
mov
jnp
and
rorl
negb
stos
inc
mov
dec
or
xor
in
lcall
push
xor
ljmp
cmp
sub
mov
dec
push
arpl
mov
or
or
inc
in
sub
cmp
sub
mov
sub
jns
fadd
ljmp
jmp
sub
xchg
mov
lret
aaa
inc
sub
and
adc
pop
jge
xor
jle
sub
mov
cmp
filds
sub
ret
fwait
jmp
xor
push
sub
loopne
mov
cmc
xchg
mov
jge
xchg
dec
int
mov
sub
cmp
iret
fdivl
xor
call
daa
mov
out
mov
pop
addr16
mov
lods
mov
mov
xor
sbb
sub
dec
jae
sub
orb
inc
jge
adc
std
movd
sub
lahf
pop
ja
lods
pop
call
xchg
gs
sub
and
jno
sha256rnds2
sub
push
sti
mov
pop
js
jp
pop
orb
cmp
mov
ss
sub
dec
ja
out
jg
and
into
dec
dec
and
and
push
sub
sbb
ret
data16
outsb
hlt
outsl
call
inc
int
dec
xor
or
pop
fbstp
test
dec
repz
int3
stos
cmpsb
das
aas
inc
in
mov
mov
adc
push
and
sti
loope
into
dec
sub
aad
mov
movsb
or
push
xchg
inc
jb
mov
cmpsl
int3
bound
enter
sub
add
mov
sub
jmp
cli
jo
outsl
inc
xchg
mov
in
sub
or
ret
and
sub
adc
mov
and
push
push
add
push
or
push
jle
mov
xor
mov
pusha
push
les
sub
jmp
sub
loopne
pop
mov
daa
and
sub
jecxz
jae
and
outsl
inc
xor
pop
push
dec
loopne
xchg
iret
cmpsl
push
mov
out
sub
fwait
je
lret
in
sbb
outsb
repz
mov
lods
test
xchg
mov
xor
pop
orb
cmp
pushw
sub
push
fdivrp
aas
les
dec
imul
jge
xchg
push
shrl
je
outsl
cmp
cmp
pop
dec
movsb
fldcw
nop
jbe
jl
sub
aas
xchg
shlb
fs
popa
mov
sbbl
lret
shll
sub
dec
xor
fistpll
or
scas
cmpsl
popf
sub
jecxz
or
sub
shll
cmpsb
pop
add
lods
ss
or
rcrw
sub
jbe
add
sub
pushw
shlb
add
icebp
test
sub
adc
mov
sub
jmp
imulb
insb
repz
or
lcall
leave
dec
xchg
movb
sub
sbb
es
sub
arpl
mov
xchg
mov
cmp
add
mov
repz
cmp
lea
adc
outsl
cld
pop
fldcw
test
stos
cmp
pop
bound
lret
mov
lods
das
inc
out
xlat
lahf
jns
adcb
movsb
pusha
pop
xor
inc
pop
dec
sub
stc
mov
lock
pop
stos
imul
out
xorb
lahf
in
bound
pop
push
lret
push
cld
aam
xor
cwtl
loop
imul
cli
add
sub
push
out
lock
mull
sub
fdivrs
sub
fcoml
mov
push
mov
or
fidivrs
out
iret
lods
inc
adc
jl
dec
xlat
dec
cs
pop
sub
pop
jne
mov
or
out
add
int
dec
pop
popa
sub
loope
inc
mov
or
in
ficoms
sbb
jge
mov
test
icebp
xor
sbb
adc
pop
hlt
sub
lret
movsl
mov
leave
lcall
sahf
mov
mov
mov
shlb
in
mov
rorl
jnp
fs
sub
jnp
push
sub
pop
mov
test
ds
lcall
sarb
mov
sub
adc
sahf
push
cmp
inc
sub
ficompl
and
sbb
jmp
mov
test
js
push
jmp
cld
mov
mov
inc
fdivr
adc
xchg
sub
and
rorl
les
xor
add
or
push
pushl
pop
fists
imul
mov
fdiv
cmp
push
jmp
mov
sarb
dec
lods
bound
scas
call
or
push
fs
sub
ret
mov
inc
xor
mov
pop
sub
insl
mov
jmp
xor
cmp
sub
mov
cmp
dec
mov
and
sar
jne
sub
std
lea
push
lods
dec
cmp
sub
or
pop
fsubrl
shrl
es
xchg
aaa
sub
cmp
shlb
dec
cmp
insl
leave
loope
lcall
adc
daa
and
xchg
fdivl
mov
sub
shl
pop
enter
ds
add
jns
test
or
nop
sbb
scas
movsl
jnp
sub
loop
sub
in
dec
scas
sub
sub
lock
sbb
lods
dec
sub
jg
mov
xchg
stos
test
jge
arpl
addr16
push
ljmp
and
push
dec
lahf
sbb
jge
add
xor
or
aam
pop
pushf
ret
jnp
inc
add
in
insb
mov
mov
clc
adc
mov
cld
mov
lret
inc
repz
sub
cmp
sub
bound
sub
add
mov
out
fcom
icebp
fisttps
fwait
cld
sub
aaa
jae
shlb
into
sub
mov
out
lds
out
loope
add
sbb
jl
add
ret
imul
das
mov
mov
push
jge,pn
xor
lahf
inc
push
lds
push
out
shr
jno
jne
hlt
or
aaa
sub
pop
out
jg
dec
sbb
cli
push
stos
das
xor
fisubrs
fsts
and
pusha
adc
ficompl
xchg
mov
aaa
out
pop
adc
iret
pop
lds
in
push
push
dec
pop
sub
loope
jbe
mov
push
xchg
test
mov
ds
mov
stos
rcll
daa
pop
sub
dec
push
mov
sbb
aaa
cmp
popf
xchg
mov
fimull
or
mov
mov
sub
ret
pop
dec
sbb
clc
cs
push
sub
mov
sbb
mov
inc
iret
sub
shl
test
inc
cmpsb
xchg
aad
loopne
sbb
mov
or
push
xor
pop
cmp
add
and
subb
jo
push
add
xor
divl
jno
arpl
ret
sub
pop
sub
sbb
popf
sarl
out
sub
sbb
pop
ss
mov
ret
sub
aaa
js
notl
mov
into
fs
addr16
scas
add
or
xchg
pop
xor
xchg
cmp
adc
sbb
ds
jb
and
jmp
sub
cmpsl
sti
push
mov
xchg
cmp
dec
adc
shrl
mov
loop
test
cmp
mov
dec
mov
cmp
ret
test
jae
pusha
inc
lock
lods
ficoml
xchg
dec
sub
dec
or
mov
repnz
sub
mov
sub
add
inc
mov
outsb
xchg
fldcw
mov
push
jnp
jb
mov
adc
push
and
sub
pop
cwtl
mov
ja
div
popa
test
mov
mov
xchg
push
fisubs
dec
mov
call
pop
mov
mov
jmp
shufps
and
jmp
insb
jb
mov
xchg
mov
aam
lret
test
sbb
mov
mov
popf
push
sub
cmp
jg
cwtl
cli
push
jb
incl
sbb
sub
fdivrs
scas
sbb
test
scas
xchg
mov
fcmovb
sbb
fsts
lock
repnz
aaa
pusha
sbb
push
cmp
cmp
jg
sub
shl
sbb
fincstp
sub
hlt
mov
sahf
jge
cmp
push
add
aad
add
or
sub
cmp
sub
push
jecxz
sub
inc
decl
sub
bound
in
sub
cmp
sbb
movsl
bound
mov
sbb
das
stos
and
loop
pop
fisttpll
push
imul
addr16
aas
inc
sub
mov
pop
adcb
mov
outsl
xor
std
xchg
adc
pop
mov
imul
dec
and
ds
lret
ss
adc
call
fldenv
pop
dec
out
sub
push
cmp
or
dec
fadd
add
test
out
inc
mov
lock
sub
cmp
mov
ja
sub
dec
enter
inc
pop
dec
inc
xchg
bnd
jbe
sub
jge
jecxz
roll
cltd
inc
mov
sub
rdpmc
lods
mov
sbb
pop
popf
xchg
pop
aas
cmp
xchg
addb
or
pusha
sub
sub
test
fidivs
sub
sub
lods
mov
imul
sub
dec
pop
sti
testb
sub
xor
into
adc
jae
mov
stos
or
je
push
sub
repz
sub
fisttpl
mov
adc
add
pop
sbb
imul
sub
repnz
scas
push
pop
or
sub
das
adc
xor
out
push
xchg
push
subl
movsb
dec
dec
sub
ret
loope
andb
cmp
sahf
mov
mov
sub
push
pop
mov
fldt
mov
or
sbbl
dec
dec
in
enter
sbb
outsb
rcrl
and
xchg
fisttps
sub
in
test
ds
adc
and
addr16
pop
shrl
cmp
push
repnz
mull
push
ret
sti
sub
mov
inc
sbb
in
pushf
sub
ss
push
sub
push
mov
aad
sub
jl
jp
mov
jge
push
push
jmp
js
push
inc
xchg
mov
loop
out
sub
xor
rcl
and
mov
mov
push
inc
cmp
sub
xchg
push
add
rol
notl
add
xchg
push
popa
enter
mov
dec
sub
loope
sub
jmp
cmp
scas
add
popf
adc
push
pop
mov
ds
ror
pushf
movsb
push
ljmp
dec
sub
fnstsw
sub
rorl
stos
repz
sub
dec
pop
pop
or
dec
push
les
sub
inc
stos
loope
dec
add
in
mov
repz
jg
xchg
sub
cmp
mov
sub
cli
dec
and
hlt
mov
lds
outsb
pop
call
xchg
jmp
xchg
rcr
sbb
cmp
mov
cwtl
sub
mov
pop
jmp
cmpsl
and
orb
ja
mov
rcrl
daa
shlb
int3
sub
xchg
adc
or
pop
sub
mov
sub
popa
jecxz
jnp
add
fwait
adc
sub
fcomps
js
sbb
pop
mov
push
movb
add
ja
xor
dec
sbb
xor
cltd
xchg
std
adc
push
cmp
xor
fdivr
mov
adc
xor
xchg
aad
push
popa
ds
jnp
adc
sbb
gs
push
mov
dec
std
jns
sbb
lock
out
in
aaa
and
icebp
stos
clc
xchg
orl
inc
push
out
or
sub
mov
fdivr
and
fcoml
gs
enter
xor
mov
sub
mov
mov
cli
sub
cmp
stos
into
test
ficoms
jp
mov
push
movsl
sub
xor
popf
shl
adc
mov
mov
lahf
les
fldcw
inc
mov
add
push
push
outsl
push
fisubrl
lds
stos
das
orb
pop
dec
xlat
mov
inc
lahf
push
jg
pop
pop
sbb
pusha
rcl
es
or
mov
cwtl
dec
in
ds
mov
lret
xchg
les
push
push
dec
das
push
popa
arpl
leave
ss
loope
cmp
es
push
adc
mov
int3
jb
aas
jg
repz
sub
pop
dec
or
sub
mov
or
and
aas
xchg
sahf
sub
mov
loop
in
cmp
jbe
sub
add
pop
sub
mov
mov
outsl
clc
sub
xor
dec
test
jge
sub
test
or
sub
inc
popa
movsl
scas
das
pop
sub
movsb
mov
fldt
aad
jnp
jno
test
shrl
cmp
int
clc
movb
lods
fs
jmp
ror
outsl
std
enter
testb
lock
in
jo
fcoml
mov
sbb
jne
mov
mov
sub
mov
vmovaps
push
jg
sub
inc
cmpsb
pushf
fwait
sub
pop
shrb
xor
test
jo
jb
scas
push
sub
sbb
scas
mov
xchg
mov
cs
leave
sub
nop
sub
aas
jmp
ds
test
push
mov
repnz
inc
inc
mov
mov
sub
pop
mov
jmp
cli
sub
adc
dec
fidivs
cs
movl
xor
cmp
inc
lea
imul
test
dec
ds
sub
mov
fsts
ret
sub
sub
cmpsl
js
push
call
add
dec
fiaddl
aaa
jge
hlt
shrl
adc
testb
loopne
mov
inc
js
sbb
aaa
sub
mov
jg
inc
cmc
mov
call
outsl
cmp
repz
sub
dec
cmc
sub
mov
hlt
xor
mov
ljmp
popf
mov
or
sub
aam
push
mov
cmc
mov
mov
inc
add
sbb
mov
in
iret
notl
sub
jns
mov
jmp
dec
or
inc
js
jbe
mov
jno
mov
mov
and
ja
dec
daa
imul
mov
jno
mov
inc
loopne
pop
pop
test
sub
ja
andl
cmp
sub
shrl
lret
xor
mov
push
fstpt
sub
repz
adc
push
dec
and
xor
jo
xor
sbb
mov
push
ds
ljmp
push
sub
in
adc
cld
inc
sub
lcall
sub
aad
sub
push
dec
subb
or
jns
cmp
mov
push
repnz
jbe
cmp
aaa
dec
add
push
adc
stos
imul
dec
and
jo
add
mov
sub
stos
sbb
sub
icebp
jl
mov
cltd
or
imull
sbb
jnp
inc
movaps
xor
jbe
je
xor
sub
mov
loop
and
jmp
stos
notb
jns
inc
dec
sub
shl
clc
xchg
out
pop
xlat
sbb
pop
ret
jb
outsb
jns
jp
and
mov
test
push
add
xchg
fadds
cmpsl
sub
test
rclb
or
fwait
imul
dec
mov
or
loope
sub
adc
dec
dec
push
lods
scas
sbb
mov
imul
xor
fadds
cmp
pop
fiadds
mov
pushf
jmp
test
mov
dec
xchg
adc
cmp
outsl
repnz
fiadds
push
cwtl
lahf
stos
cmpsb
mov
sub
call
sbb
adc
sarl
mov
movaps
cmp
mov
jp
and
sahf
dec
loop
adc
out
shlb
das
fs
sub
aaa
shll
fcoms
in
les
jle
dec
pop
fistpll
subb
ds
bound
sbb
cmp
in
pop
je
sub
push
xchg
sub
add
lock
inc
sahf
lcall
fwait
das
stos
out
leave
dec
inc
sub
mov
inc
sub
std
pop
fistl
mov
pop
in
aaa
into
dec
sub
push
cli
xchg
jae
push
push
test
adc
hlt
aad
pop
pop
sub
repz
stos
aaa
or
fimuls
push
les
jbe
mov
mov
inc
ss
das
enter
sub
jmp
pop
mov
adc
add
addb
outsl
lods
cli
mov
lret
in
pop
and
dec
sub
xchg
dec
mov
cmp
push
int
dec
fsubrl
call
loopne
andb
jecxz
int
sbb
sub
mov
mov
loopne
or
lods
sub
push
in
mov
push
in
jo
out
and
sub
cmp
xor
sub
or
in
cmp
jg
adc
pop
push
cmpsl
aaa
sub
jmp
imul
pop
cmc
iret
push
out
stos
das
adc
sbb
or
mov
les
add
icebp
sbb
out
lret
push
sub
sbb
jmp
or
sub
cld
cmc
cmp
mov
sub
movsl
sbb
jb
iret
or
in
mov
sbb
adc
lods
and
sub
and
std
sub
in
lods
cmp
ret
push
sub
imul
pushf
jns
mov
push
push
pusha
mov
sub
mov
inc
xchg
sub
lea
je
lods
les
or
pop
loopne
stos
stos
xchg
dec
dec
mov
push
adc
cmpb
or
mov
add
sub
jp
xchg
dec
inc
sub
pop
push
sbb
mov
sbb
sub
fwait
in
mov
lods
adc
cmp
call
sub
jne
adc
cmc
lods
sub
inc
jge
dec
push
push
push
sub
adc
sub
sbb
push
jae
sbb
insb
fmuls
lods
inc
sub
adc
and
add
gs
or
fimuls
cmp
jnp
arpl
sub
sub
jge
sti
std
and
ljmp
adc
gs
outsb
aam
and
xor
cwtl
and
dec
icebp
sub
rol
jns
test
gs
jl
enter
sub
cmpsl
shrb
mov
mov
jl
in
iret
pop
std
mov
testl
fmul
jmp
pop
dec
js
movnti
mov
shrl
imul
ret
lods
mov
adcl
cmp
sub
pusha
popf
lret
fisttps
jno
aad
cmp
cli
cld
sbb
jle
inc
stos
sub
sbb
jnp
daa
popa
adcl
add
sahf
ret
adc
jl
pushf
in
sub
popa
outsl
dec
inc
sbb
push
sbb
shr
and
cmp
cli
dec
in
std
shl
xor
jb
fimull
xor
rcl
sub
ret
cltd
add
je
and
outsl
mov
cmp
push
mov
lret
push
mov
cli
es
imul
sbb
mov
mov
mov
out
xchg
sub
mov
pop
rclb
sub
pop
ds
fisubrs
cltd
sub
js
add
das
sub
test
adc
jge
cmp
loop
or
ljmp
lock
shll
pop
or
inc
sub
in
sub
loope
loop
xor
sub
das
mov
sub
ds
mov
pushf
les
outsb
sub
lret
fmull
xor
dec
xchg
jecxz
repz
jnp
cwtl
jl
or
cmp
jle
clc
decl
rclb
leave
mov
and
xchg
jo
test
sub
xchg
cmp
mov
dec
push
xchg
leave
sub
ret
push
test
add
jo
xchg
in
cmpsb
sub
push
cmp
sbb
sub
insb
push
repnz
bound
push
addr16
sub
fwait
dec
loope
xchg
ret
adcb
insb
sub
add
sub
inc
push
les
cmp
inc
sub
push
cmpsb
jge
xchg
and
int
xchg
mov
cmpsb
jp
lds
sub
repz
xor
icebp
pop
rcrl
xor
pop
mov
dec
mov
loop
jo
out
outsl
pop
sub
cli
sbb
sub
imul
cmpsl
dec
fstpl
test
mov
je
mov
xor
int
or
sub
xor
out
test
ds
jecxz
push
mov
xchg
mov
sub
lcall
jge
inc
xor
mov
mov
call
xchg
subl
mov
push
mov
dec
mov
sub
mov
cs
dec
and
adc
bound
cwtl
xor
push
sbb
mulb
addr16
test
das
cmp
jno
aam
add
sbb
lret
sub
xchg
cmpsb
fmull
outsb
mov
xor
sub
or
and
xchg
push
mull
pusha
jo
popa
push
fsubs
dec
xor
je
lahf
jb
mov
and
fisttpll
push
iret
or
pop
mov
shlb
icebp
and
dec
test
sub
mov
jecxz
xor
dec
push
sub
scas
std
xchg
fsubrs
xchg
sub
pop
jg
bound
push
push
push
sub
mov
stc
cs
inc
fmull
add
ds
mov
push
push
ds
scas
add
jmp
sub
cmpsb
push
pop
sub
lock
dec
add
sbb
fsubrs
fisubrs
fildll
mov
inc
and
test
sbb
popf
loope
mov
inc
mov
mov
int
cmp
sbb
rorb
dec
test
jb
aaa
test
jnp
mov
mov
inc
sub
pop
movsb
lock
xchg
ret
lret
inc
in
lods
sub
ja
call
add
stos
xchg
push
test
in
out
mov
popf
sub
aam
xor
sti
cmp
mov
sbb
fmull
out
sub
daa
xlat
inc
rol
adc
jge
imul
test
pop
sub
aam
jo
xchg
inc
subb
jg
jge
fs
or
mov
dec
mov
ficomps
or
jo
push
jmp
sub
aaa
popa
pop
xchg
ds
subl
mov
and
movsb
sub
in
cmp
sub
jno
aas
stos
je
pop
sub
and
add
adc
fcompl
bound
push
jg
inc
or
popa
sub
mov
and
xchg
push
call
sub
sbb
mov
adc
jmp
lahf
pushf
and
sub
dec
xor
fisubrl
or
sub
mov
call
mov
stos
xchg
sub
nop
inc
pop
mov
sub
cmp
sub
add
cmp
and
cmp
daa
jae
sub
jp
cmp
sub
push
mov
xchg
nop
data16
fcomps
cmpsb
xor
sub
pop
pop
je
or
jl
std
test
pop
push
pop
fdivs
iret
jae
mov
xorl
xor
jae
inc
fisttpl
push
lcall
nop
sub
cwtl
sarl
les
orb
test
ja
sub
sub
mov
xlat
push
stc
push
mov
addr16
aam
jge
jnp
xchg
xchg
dec
loop
xor
por
pushf
lods
xor
sub
movsb
cmpsl
jne
sbb
sbb
sub
push
mov
jb
pop
add
dec
cs
cli
in
ficomps
or
or
sahf
sub
push
pusha
push
pop
jle
sbb
xor
dec
enter
xchg
rcl
push
jae
mov
ds
jo
ja
mov
adc
addr16
lret
or
sub
xor
mov
mov
stos
std
fnstsw
xor
sub
or
sub
mov
ja
repz
mov
sub
das
outsb
sub
rcr
nop
xchg
es
mov
fwait
inc
cmp
sbb
push
lods
cmp
in
dec
mov
ja
pop
test
add
sub
sahf
in
rep
in
sub
imul
cmp
adc
add
pop
mov
aaa
sub
ja
stos
push
xor
aas
xlat
shrb
fisttps
xor
lcall
jbe
int
ficoms
loope
subb
arpl
push
mov
aad
and
js
inc
push
lods
jle
jb
mov
push
jmp
inc
mov
lock
and
scas
out
mov
fldl
sub
cmp
mov
test
xchg
push
in
mov
inc
pop
dec
mov
subb
cmpsb
into
xorl
jnp
andl
ss
pop
enter
aam
scas
pop
push
adc
sbb
leave
scas
call
xor
add
xorl
mov
push
push
add
fidivrl
shrl
lods
loopne
dec
pusha
or
test
xchg
daa
outsl
fwait
inc
mov
xor
sub
xchg
les
imul
dec
mov
and
stos
jnp
scas
push
pop
fisttpll
out
in
inc
xor
push
icebp
mov
test
stc
sub
fsubr
sarb
mov
pop
pop
push
mov
xchg
int3
rcrb
sbb
pop
loop
push
cmp
push
sub
sub
inc
xchg
add
adc
daa
add
adc
jmp
mov
pop
outsl
loop
sub
adc
jmp
insb
sub
fmull
orb
xchg
rorl
xchg
test
aaa
clc
scas
adc
cwtl
pop
es
sub
cmp
push
and
adc
loope
jb
lods
clc
dec
sub
jecxz
cmp
scas
or
or
sar
push
inc
pop
or
sbb
push
into
mov
jbe
add
jmp
dec
out
test
outsb
or
sub
mov
mov
pop
push
stc
popa
fcoms
jns
push
jne
xor
xchg
mov
ret
lahf
push
xlat
or
pop
sub
push
scas
dec
sub
sti
xor
push
dec
mov
jl
rorb
stos
hlt
add
ret
mov
sbb
jle
imul
inc
inc
iret
sub
addr16
in
sub
jle
shll
sub
mov
sub
sahf
mov
push
andl
sbb
xchg
out
sub
lea
ds
rol
aas
decb
sub
test
inc
sahf
pop
sub
loopne
xor
mov
pop
fldcw
xchg
mov
sub
mov
repz
jne
or
sub
push
or
sbbb
pop
das
or
adc
inc
je
popf
hlt
xchg
sub
imul
xchg
jnp
and
jmp
mov
fidivrl
addr16
shr
push
push
xchg
pop
sub
pop
push
sbb
out
push
sub
int
inc
pusha
icebp
sub
stc
fdiv
negb
push
xchg
sub
jge
and
ss
ret
pop
mov
sub
filds
cmpb
sarb
test
cmp
sub
pop
push
shrl
mov
xlat
sbb
inc
sbb
mov
add
mov
and
dec
pop
pop
fbstp
jo
adc
sub
clc
jnp
xchg
add
xor
dec
push
pop
jae
call
and
sbb
dec
push
data16
dec
dec
mov
cmp
jp
movaps
sahf
dec
xchg
fmull
xchg
orl
add
jns
outsb
sub
xor
mov
mov
adc
and
cltd
test
mov
pop
sub
push
sbb
inc
and
movsb
lock
xor
cwtl
mov
testl
lods
movsl
sub
js
mov
orl
in
popa
cmp
or
sub
out
push
mov
outsl
cmpb
adc
js
ja
mov
fs
call
fsub
sub
testl
lea
xchg
or
outsl
nop
or
adc
aas
bound
pop
or
cmpsb
repnz
add
and
or
inc
cmp
jge
mov
test
cwtl
mov
mov
sub
and
sbb
sub
inc
das
xor
sub
sbb
or
ljmp
cmpsb
rcl
into
insb
sub
sub
out
adc
adc
dec
mov
pop
leave
sub
icebp
xor
fwait
rolb
sub
fldenv
sub
ret
out
push
test
xor
cmp
into
enter
sub
ret
sub
pop
ret
jmp
clc
js
lods
sbb
and
int
cmp
pop
xor
or
fadds
jns
xor
subl
cmc
fwait
in
sub
test
mov
fbstp
ss
lret
jmp
dec
cli
stos
into
fwait
mov
and
ret
mov
sub
les
jecxz
aam
sub
cmpsb
imul
or
xor
repnz
xchg
jecxz
iret
cmp
int
jne
mov
outsl
xchg
inc
fnstenv
push
movsb
aaa
sub
iret
dec
jg
fstpl
mov
sub
sbb
inc
jns
add
sub
pop
mov
sbb
and
aaa
fwait
ret
pusha
rcrl
sub
xchg
mov
lock
pop
and
cmp
dec
fsts
ja
inc
les
test
mov
loop
mov
stos
int3
jecxz
sub
iret
or
scas
rorb
outsl
push
lds
sub
jbe
mov
sub
sub
mov
jmp
jne
test
jle
and
mov
jb
sti
adcb
xor
adc
mov
push
outsb
mov
sub
call
sub
xor
push
sub
popa
inc
pop
sub
mov
loopne
mov
sub
push
sub
adc
negb
pop
dec
jge
cli
mov
sub
rsm
inc
xchg
cmp
pop
sub
leave
sbb
test
call
loop
mov
hlt
push
imul
test
lcall
xchg
pop
dec
sub
sub
jae
cld
xor
hlt
xlat
dec
fwait
mov
or
sub
pop
leave
jge
pushf
sub
fdivr
push
fucom
sbb
adc
mov
xchg
jnp
data16
push
aad
xchg
cmpsl
sub
pop
pop
in
pop
int
sub
jae
xchg
pop
arpl
jl
les
lods
jge
fmuls
inc
sar
xlat
mov
addr16
xor
jle
pop
sbb
shl
push
sub
loop
int3
inc
inc
lret
jmp
outsb
in
xchg
cmc
jno
add
dec
sub
mov
mov
sub
mov
ret
jp
jae,pt
icebp
push
cwtl
sub
decl
add
sub
mov
xchg
adc
jg
stos
xchg
das
pop
sti
mov
orl
and
push
adc
and
shlb
mov
xchg
jne
lods
pop
fmull
xchg
test
and
fisttpl
sub
loopne
sarl
push
addr16
push
sub
pop
cmpsl
sub
movd
out
sub
jp
iret
mov
lods
fld
dec
cmpb
jne
sub
add
mov
lods
sub
sub
scas
or
or
loopne
xchg
imul
mov
clc
es
nop
sbb
jle
jge
and
sub
adc
movhps
outsb
addr16
sub
xchg
int
dec
stos
xchg
cld
sub
in
js
pop
mov
inc
jb
or
push
xor
adc
pop
popf
dec
pop
shrb
mov
jmp
lret
movl
sub
lods
add
jnp
mov
jle
add
and
ret
mov
push
arpl
push
pop
aas
mov
loopne
int
cmp
lock
repnz
jns
cs
sbb
push
pop
jne
imul
mov
push
sub
rorb
cli
inc
and
mov
add
fdivs
adc
push
add
cmp
addr16
sub
mov
xor
add
std
addb
shl
sub
mov
sbb
add
sub
push
loopne
mov
xor
sub
jle
inc
sub
insl
mov
sub
sub
adc
lds
sub
xchg
int
in
cmpsb
sbb
jg
jae
sub
pop
jge,pt
dec
popf
rcl
lahf
xchg
mov
mov
mov
dec
sub
rclb
repnz
jnp
jg
mov
or
test
ret
dec
dec
imul
mov
outsb
scas
ret
inc
push
mov
loop
xor
xor
dec
dec
cmp
movhps
insl
push
ja
loop
cltd
fisubrl
xor
rorl
std
popa
test
jecxz
pop
push
ret
or
xor
outsl
fs
pop
sub
adc
mov
xchg
jb
out
inc
sub
sar
add
sub
sub
pushf
push
rorl
sub
scas
jp
fidivrs
add
insl
cli
ret
or
je
push
xchg
lock
adc
inc
ret
push
daa
pushf
sub
mov
sub
xchg
dec
aaa
mov
sub
fidivl
dec
dec
out
mov
adc
pop
mov
dec
add
scas
clc
ret
mov
pop
out
subb
aad
cltd
shl
add
sub
lods
sbb
jae
nop
shll
dec
add
push
bound
inc
jnp
inc
mov
cltd
loopne
dec
sub
test
jae
divps
std
insl
loopne
inc
mov
push
sub
wbinvd
pop
stos
jle
pop
mov
icebp
lret
ja
sub
cmpsb
add
fdiv
inc
xor
mov
sub
cmpsl
fstp
sahf
aas
in
sub
aam
in
add
negb
stos
sub
dec
pop
or
call
adc
enter
jmp
outsl
cmc
pushf
pop
sub
sub
dec
mov
xor
dec
dec
xchg
xchg
lahf
push
xchg
sub
xchg
aam
add
pop
shrl
push
mov
fidivrl
in
out
sub
pushf
mov
sub
lahf
mov
push
rorb
enter
sub
call
inc
sub
pop
mov
hlt
mov
sub
jb
into
and
adc
aam
jnp
movsl
push
out
rolb
add
mov
mov
sub
push
outsb
ss
or
lcall
movsl
nop
aaa
sub
stos
lret
xchg
sub
mov
push
or
jge
xor
repz
sub
jle
adc
cmp
pop
dec
adc
aad
cmp
mov
sub
clc
outsb
pop
jmp
and
jnp
cwtl
shrl
fadds
lcall
or
out
jae
sub
jle
pop
mov
inc
out
or
and
sub
jecxz
mov
std
fmuls
jae
dec
jnp,pt
push
add
ret
cmc
test
inc
call
mov
sub
fsub
iret
sahf
mov
shll
sbb
inc
clc
pushf
cmp
mov
mov
out
jge
pop
sub
and
sub
in
xor
pop
sbb
mov
lods
in
shr
sub
xchg
pop
into
inc
sbb
adc
add
jle
fsubrs
mov
lods
and
enter
sub
lods
movsl
sbb
cmp
sub
sub
xor
fidivs
insb
cmp
mov
daa
jb
pop
cmpsl
scas
mov
sub
jp
jl
xchg
sub
iret
inc
pop
insb
and
adc
add
sub
mov
xor
jmp
fldenv
dec
push
dec
sub
mov
xor
inc
call
jae
hlt
cs
push
arpl
popa
mov
cli
jo
xchg
test
mov
and
mov
popf
mov
insl
push
dec
adc
dec
ja
ret
cmp
push
cs
push
dec
dec
call
sub
clc
cld
in
es
inc
xchg
fisubrs
sbb
mov
sub
pop
push
fnstenv
pop
test
sti
dec
sbb
cltd
dec
sub
mov
and
aas
std
test
test
pushf
cmc
sub
xchg
and
aaa
pop
pop
sbb
and
jge
and
test
stc
jb
lea
and
rol
and
push
aaa
sub
inc
loop
dec
sub
mov
scas
imul
xchg
xor
xlat
je
cmp
imul
nop
insb
xor
shll
push
adc
xor
stos
lret
and
xchg
fdivrl
flds
das
mov
int
inc
in
adc
bnd
xor
jmp
jb
jl
jecxz
mov
xor
mov
sub
repz
addr16
sub
push
cmp
xorb
mov
inc
fwait
xchg
pop
sub
lods
cmp
nop
out
dec
movl
lahf
mov
push
sub
andb
inc
mov
xor
mov
fnstenv
sub
add
sub
mov
ret
jecxz
out
jae
xor
mov
jne
cmp
sub
mov
mov
in
sbb
push
xchg
sbb
enter
call
add
sub
push
fstpl
shr
les
mov
int
test
mov
pusha
out
or
mov
xor
xchg
mov
sub
sub
pop
in
adc
cmp
daa
mov
pop
sub
fs
ds
test
repz
and
pushl
dec
mov
sub
insb
inc
sub
jecxz
cmpsl
xchg
je
adc
out
jne
lahf
fimull
test
xor
xor
pop
sub
popa
adc
mov
pop
xlat
mov
or
cmp
mov
sarb
sub
lcall
inc
or
into
xchg
mov
in
sbb
fwait
and
or
cmp
mov
sub
mov
and
das
scas
bound
test
repnz
and
mov
push
and
dec
lds
dec
ljmp
jb
movsl
xor
cmc
nop
test
cmp
mov
jl
int3
cmp
add
sti
cmp
sub
movsb
dec
sbb
xor
rolb
inc
subl
and
ds
xor
idivb
jne
test
cmp
fdivl
pop
mov
pop
sub
push
outsb
aaa
fs
mov
fwait
xchg
test
add
mov
shll
lea
adc
mov
mov
sub
push
mov
lock
xor
mov
fidivl
mov
mov
or
inc
xchg
in
aas
inc
sub
ljmp
cmp
fisttps
idiv
xchg
adc
or
sbb
data16
sub
fsts
jns
mov
mov
mov
test
les
push
call
mov
addr16
sub
sbb
xchg
fnsave
pushf
fisubs
pusha
rorl
into
fwait
sub
push
jno
mov
fistpl
dec
xchg
fmull
adc
pop
push
ds
mov
xchg
lcall
imul
pop
out
stos
cmpsl
adc
test
push
out
pop
lahf
inc
lock
mov
sub
ljmp
sub
and
xor
mov
mov
xchg
fldcw
xor
aad
push
sub
jno
shlb
js
inc
sbb
or
xor
pusha
mov
dec
imul
sub
push
xchg
jnp
enter
fsubrs
mov
ljmp
es
pop
sbb
iret
test
or
das
clc
sub
xchg
sub
push
jo
dec
aas
outsl
lahf
sbb
sub
inc
pop
lret
dec
jecxz
lods
cmp
jae
xor
test
mov
jl
sub
cmp
push
xor
sbb
out
nop
mov
int3
subl
jnp
mov
imul
sub
xor
sub
aad
xchg
insb
insl
sbb
out
push
ljmp
push
mov
sbb
sub
xor
fcoml
je
add
sub
aad
addb
cmpsb
cmp
cmc
push
dec
push
mov
imul
lods
insl
sbb
stc
test
mov
sub
mov
sub
push
xorl
pop
out
repz
mov
lock
daa
and
cmp
push
cmp
jae
cmc
fsubrs
test
out
push
push
lea
fwait
leave
xchg
sub
loop
out
dec
sub
shld
aad
stos
mov
lods
int3
subl
cs
les
lds
or
stos
frstor
shlb
cmp
jecxz
mov
push
push
sub
call
adc
popf
sub
out
std
cwtl
decb
loopne
sub
ret
shll
leave
jecxz
inc
out
orb
pop
in
lods
jmp
pop
outsb
stos
fdivrs
sub
popa
jbe
popf
add
cmc
incb
or
xor
outsl
mov
mov
mov
call
shl
imulb
scas
sub
adc
push
cmp
popa
shl
test
xchg
jmp
movsl
ret
push
ds
lods
sub
jge
sub
jo
cmp
push
mov
jl
dec
pop
add
push
adc
fildl
push
pop
lods
sub
and
mov
adc
adc
cs
mov
inc
mov
pop
dec
sarl
lods
les
sub
xchg
push
sub
jns
ds
push
scas
adc
shlb
add
cmp
sub
out
pop
sub
popa
dec
pushl
push
push
sbb
jmp
or
sub
sub
lgs
add
stc
in
lret
mov
cmpsb
cld
push
fucomip
xchg
dec
adc
sub
xchg
imul
or
das
xchg
adc
push
sub
loope
fnsave
movsl
aas
sub
shll
or
in
lods
dec
inc
or
outsl
out
cmp
test
shrl
or
mov
clc
mov
repz
cmp
sub
jo
inc
out
cld
xorl
push
lcall
mov
aam
incb
xchg
jnp
js
jge
scas
pop
nop
jb
loop
push
aam
fidivs
mov
pop
enter
cmp
push
adc
sub
mov
pusha
sub
sub
and
rorl
jl
push
sub
ret
mov
jg
call
sub
cmp
push
pusha
sub
fdivrl
shr
sub
push
dec
dec
mov
xchg
adc
das
js
fisubrs
sti
outsl
jmp
repz
ret
lea
xchg
mov
sub
sub
mov
subb
lret
jmp
repnz
lock
dec
jne
and
push
in
loopne
sub
adc
bound
cltd
ret
mov
sub
sub
dec
xor
xor
sub
push
in
rol
pusha
sub
cmpsb
and
mov
mov
sbb
xor
push
clc
out
pop
adc
in
pop
sahf
cmpsb
outsb
sub
mov
sub
sub
jge
sbb
std
fnstcw
mov
rcl
ss
xchg
test
mov
mov
faddl
mov
pop
sub
xchg
popf
sub
int3
testb
stos
into
repz
fbld
fisubrs
mov
cmp
sbb
in
ds
call
sub
out
jp
addr16
mov
clc
adc
aad
mov
mov
sbb
push
cs
jge
sub
mov
push
and
rcl
adc
sub
fnstsw
pop
mov
scas
sub
dec
sahf
imul
cmp
or
das
subb
or
push
and
test
add
lcall
mov
sub
les
sarl
imul
cmp
dec
dec
push
sub
into
jno
sub
das
in
push
subl
test
add
cwtl
aas
je
ret
repnz
pop
pushw
sub
dec
push
push
ss
mov
xchg
jp
hlt
cmpb
cli
sarl
test
pop
jmp
loope
call
inc
dec
lock
cmp
dec
add
sub
xchg
lds
icebp
sub
mov
push
aad
xchg
xor
fwait
mov
xor
and
xchg
scas
inc
cwtl
mov
out
sub
or
jge
sti
sub
xchg
inc
in
rolb
and
subl
and
or
sub
lret
ret
out
and
test
sub
movsl
push
mov
ljmp
fs
cmp
sbb
cmpsb
sub
in
js
or
mov
mov
mov
xor
sub
jmp
shlb
mov
or
subb
dec
adc
push
inc
inc
test
and
push
adc
xor
sub
pop
jne
jae
leave
cld
sub
into
mov
jno
mov
sub
xchg
xor
imulb
fs
jle
mov
shll
add
xchg
sub
inc
dec
sub
xchg
push
sub
fsubs
dec
cltd
lock
sub
sbb
daa
in
subl
filds
jp
mov
adc
push
sub
dec
mov
mov
jmp
mov
sub
loope
inc
sub
imul
mov
arpl
in
jp
lcall
loopne
xor
push
cmpsl
arpl
sub
inc
mov
dec
addl
insb
int
in
sub
sub
jae
and
stc
mov
ds
outsl
or
sub
push
mov
sub
and
test
xchg
int
xchg
sub
and
imul
fcomi
xor
and
aam
int
xor
lods
sub
adc
sbb
and
adc
in
das
repnz
insb
shlb
mov
mov
xor
outsl
lds
cmpsl
cld
xor
inc
inc
push
fsubrs
mov
jo
mov
lods
adc
sub
mov
insb
sub
and
xor
fwait
jg
scas
fwait
iret
popa
sub
jge
rorl
mov
gs
aas
dec
rcrl
sub
insb
mov
or
imul
jecxz
adc
jg
loope
mov
and
mov
push
mov
pop
out
sub
fidivl
sub
sahf
push
push
mov
cmpsb
in
enter
dec
test
ret
adc
rcrb
sub
fucompp
std
jns
into
push
es
inc
jle
dec
loop
aas
push
mov
add
mov
inc
imul
hlt
dec
pop
mov
popa
inc
dec
xor
inc
jmp
dec
push
sub
jo
cld
cmpsl
mov
shll
aaa
push
jmp
sbb
sub
sub
popa
test
dec
stos
or
shl
adc
jge
and
xor
push
inc
pop
subb
cmp
lods
shlb
cmp
jnp
sub
sub
or
and
mov
or
cmp
sti
movsb
jno
and
xchg
lock
inc
pop
or
gs
js
adc
jne
insb
add
cli
in
ffree
mov
jp
sbb
xor
adc
loopne
sub
sub
pop
scas
cld
jp
mov
cmp
arpl
sub
xor
sub
xchg
sbb
sub
mov
xchg
shlb
sub
or
enter
sub
into
mov
pop
loopne
ds
clc
int3
xchg
cwtl
test
push
mov
fisubl
xor
das
imul
jnp
mov
add
daa
and
lcall
jl
push
cwtl
inc
and
sbb
js
sub
adc
or
movsl
jl
les
lret
test
dec
inc
sub
xchg
loopne
scas
jno
data16
test
xor
pop
movsl
movsl
mov
xorb
sbb
sbb
bound
pop
fcmovne
imulb
jl
andb
imul
sub
cmp
mov
push
ds
xchg
in
icebp
scas
test
cli
dec
xchg
sub
mov
cltd
movl
fisttpll
ljmp
test
pop
stc
popa
push
imul
sbb
bound
inc
push
mov
sahf
add
addr16
push
sub
or
sbb
test
sarl
jl
sbb
pop
aad
inc
sub
es
addr16
mov
and
cli
inc
push
dec
pop
sub
inc
int3
add
sbb
xor
cmp
add
and
cs
lock
lret
sbb
movsb
test
test
sub
adc
mov
inc
sub
and
movsl
adc
dec
rclb
stos
and
xor
lahf
sub
add
sub
mov
sub
and
push
mov
mov
sub
and
or
pop
or
mov
or
mov
pushf
dec
or
call
enter
push
insl
sub
add
xchg
sub
cmp
push
jmp
je
dec
arpl
mov
xor
xchg
negb
adc
sub
fwait
std
je
dec
mov
test
xchg
test
clc
add
push
sarb
dec
mov
fs
outsl
sub
sub
lret
adc
call
call
sub
fs
sub
mov
push
jnp
mov
push
popf
cmpsl
mov
jp
cmpsb
xchg
mov
inc
int
subl
push
popa
cwtl
movsl
push
mov
sub
out
in
xchg
sub
ja
gs
popf
adc
sub
lock
dec
arpl
cmp
and
inc
jns
or
mov
movsb
jne
sub
mov
scas
pop
xchg
sub
pop
pop
sub
adc
push
mov
jl
sub
mov
and
mov
sub
shrb
dec
ds
test
je
fistl
sub
insb
sbb
adc
xor
adc
dec
push
lret
sub
mov
out
lods
dec
inc
mov
cwtl
mov
cs
lcall
add
iret
or
cwtl
fistl
push
fdivrs
push
in
stos
sub
jae
mov
pop
call
cmp
lods
dec
std
pusha
adc
mov
jns
loopne
sahf
or
add
pusha
mov
js
in
mov
or
in
movsl
inc
dec
jnp
shll
jns
pop
fstps
dec
sub
xor
lods
adc
or
jmp
sub
movsl
mov
jp
sub
test
pop
divb
ljmp
popa
dec
xchg
ret
fimull
aaa
mov
xor
and
xchg
mov
sub
fsubp
mov
ds
cmp
shrb
xchg
pop
jnp
repnz
pushf
push
xor
mov
push
scas
add
scas
dec
dec
or
push
in
pusha
inc
shrl
shl
pop
test
push
test
xorb
mov
push
dec
scas
jmp
outsl
sub
push
stos
dec
inc
cmp
repnz
push
adc
jecxz
sahf
hlt
popl
enter
pusha
xor
jmp
in
xchg
push
ljmp
lods
mov
pop
mov
imull
push
jg
fadd
out
ljmp
dec
mov
sub
repz
sub
or
aas
fbstp
pop
lods
adc
pusha
sub
and
mov
mov
pop
mov
and
sub
fwait
and
sub
in
fsubrs
jge
push
dec
test
das
or
xchg
sub
incl
dec
jnp
xchg
daa
imul
notb
jmp
shrl
cmp
add
cmp
nop
loope
in
jge
sbb
mov
jns
add
sub
sub
cmc
dec
call
repnz
shrb
lret
daa
jno
push
xor
repz
lret
sub
sbb
idivb
xor
fwait
sub
mov
sub
lea
ljmp
movsl
outsl
sub
inc
fs
push
mov
outsl
jecxz
mov
sub
ss
add
jo
hlt
push
aas
lea
adc
mov
stos
inc
cmpsb
sub
stc
jp
cmp
add
dec
xor
lods
cmp
fwait
les
pusha
cmpsl
or
dec
dec
ret
call
in
and
cmp
add
sarb
inc
ja
int3
adc
test
mov
mov
xor
pop
sub
dec
xor
mov
pop
and
insb
aas
pop
lock
sub
dec
stos
sub
and
push
sub
addr16
adc
sbb
lds
cltd
call
insl
sti
dec
int
in
sbb
or
sub
jbe
sarb
dec
hlt
mov
jmp
out
sbb
dec
jne
and
add
rcrl
testl
mov
ret
mov
imul
test
sub
lcall
mov
cwtl
or
sti
aaa
jmp
jmp
in
or
ljmp
mov
dec
aas
fwait
xchg
dec
push
sub
mov
pop
jg
mov
lea
sbb
fwait
add
mov
sub
in
and
or
enter
mov
fidivs
dec
mov
dec
xchg
icebp
sub
dec
in
sub
sbb
das
pop
jge
sub
push
sar
js
lcall
push
dec
inc
clc
sub
mov
fcomip
cs
test
pop
mov
dec
insb
dec
not
adc
push
mov
imulb
dec
bnd
cmp
cwtl
js
sub
je
mov
sub
sbb
fcomi
sub
add
fwait
mov
insl
push
test
pop
das
lcall
ret
and
adc
sti
sub
pop
shl
test
jb
jg
ds
out
test
xchg
rorl
xor
mov
aad
mov
fmul
movsb
sub
out
les
inc
xor
jl
popa
insl
in
sub
xor
mov
jae
stos
cmc
in
or
inc
in
sub
xchg
lods
dec
sti
rcr
xchg
mov
fdivrs
xchg
enter
pop
xorl
sub
xchg
and
xor
arpl
es
xor
je
mov
or
test
bound
sub
push
and
push
push
dec
mov
dec
imul
sbb
mov
sub
sub
adc
sbbb
js
test
rcrl
ds
pop
sbb
enter
and
inc
mov
fsubs
out
leave
sbb
test
in
push
fisubrs
xchg
lret
mov
mov
xchg
cs
test
in
push
xchg
or
sub
dec
pop
sub
rcrb
mov
sub
sbb
loopne
add
sub
and
mov
rorb
sub
filds
mov
insb
pop
lock
cmpsb
lahf
xor
jmp
popf
mov
xchg
ffree
push
push
sub
int3
es
test
mov
pusha
sub
ja
push
cmp
clc
or
lret
popa
stos
mov
ds
out
std
pop
lea
movsl
je
adc
push
sub
adc
xchg
lret
sub
into
xchg
sti
and
popf
imul
enter
dec
aam
ffree
mov
jbe
ds
or
shrb
xor
ja
sub
sbb
mov
loope
sub
xchg
lock
push
dec
ds
dec
cmp
out
cmp
xchg
sbb
loope
cltd
xchg
add
lds
dec
sti
fisubrl
iret
mov
ret
out
pusha
dec
push
add
sub
sbb
mull
jnp
loop
int3
mov
mov
mov
cmp
fwait
mov
lea
ss
outsb
dec
loopne
xchg
inc
sub
out
mov
sub
mov
and
mov
sub
push
shrb
mov
adc
loopne
out
dec
stc
sar
jmp
dec
test
cmp
xor
leave
mov
mov
sbb
add
stos
ljmp
clc
inc
rcll
insl
adc
adc
or
inc
cmp
repz
sub
pop
mov
sub
outsl
clc
or
inc
cmp
jge
test
pop
in
jno
sub
ret
cmp
inc
cld
mov
sub
addr16
insb
orb
add
lock
and
test
in
push
sub
add
sub
jno
iret
enter
mov
movb
sub
fstpt
mov
pop
popa
lock
sub
push
cwtl
enter
popa
sub
pop
adc
cmp
dec
dec
adc
mov
loopne
pop
push
xlat
loopne
imul
lret
adcl
adc
pusha
xlat
jl
xchg
push
data16
add
repnz
jge
mov
stos
stos
movsb
test
cmc
js
sbb
xor
cmp
push
ficoml
xchg
bound
lret
test
pop
add
rclb
sarl
mov
test
jge
dec
das
repz
sub
xchg
or
ret
push
jbe
sub
repnz
sub
rcll
dec
lcall
jge
sub
test
imul
pop
outsl
shlb
in
xor
sti
sbb
pop
shlb
stos
mov
lea
cmc
jbe
mov
pop
insb
and
jp
cli
shlb
int
add
xchg
pushf
std
pop
arpl
jge
sub
xlat
bound
data16
cmpsb
lods
or
ret
unpcklps
movsl
fwait
adc
stos
fwait
sbb
jne
out
dec
xor
lods
fadds
sub
movsb
and
ds
and
push
divb
mov
inc
das
add
inc
test
lret
sub
cld
hlt
ret
adc
data16
dec
fnop
sub
pop
push
call
jg
inc
fdivs
mov
pop
and
sub
sub
mov
jb
mov
xchg
leave
pop
add
sub
sub
and
sbb
mov
jbe
jnp
stos
loop
xor
test
sub
lds
cmpsb
or
outsl
mov
sub
loope
sbb
sub
imul
sub
das
movsl
popf
pop
shrb
cmpsb
push
gs
cmp
xchg
sbb
fcmovnbe
sub
or
insl
sbb
sub
sbb
mov
and
pop
jmp
mov
or
pop
mov
pushl
aam
mov
mov
jecxz
mov
fiadds
fmull
jle
mov
stos
pop
mov
test
fnstsw
sub
mov
dec
mov
and
mov
jge
arpl
ss
sub
sahf
mov
or
jecxz
sub
cmc
sub
loope
sub
or
arpl
push
push
out
lea
jge
ds
mov
inc
adc
jle
adc
sub
ljmp
sbb
pop
jbe
adc
jne
inc
out
ret
sub
and
xor
and
popa
jae
jo
sub
out
xor
sub
ljmp
shlb
aad
dec
sub
push
popf
pop
addr16
mov
cmp
xor
or
je
and
push
fwait
aaa
icebp
dec
dec
xchg
ds
mov
jle
test
push
idivb
or
dec
outsl
loop
push
inc
int
or
lcall
or
loop
jb
mov
cmpsb
mov
call
scas
sub
cli
xchg
cmp
ret
cmc
loop
inc
or
sbb
repz
sbb
in
dec
in
lret
sbb
jbe
pop
faddl
cs
mov
push
sub
push
clc
mov
sub
jns
mov
or
xchg
sub
test
dec
imul
xlat
xchg
loope
test
cs
shrb
sbb
or
fmull
and
xchg
sbb
call
mov
push
pop
dec
push
dec
gs
fistps
rorl
cmp
in
pop
cli
sub
enter
pop
scas
sub
pop
sub
sub
jmp
sarb
es
adc
dec
imul
sub
sbb
mov
sub
ds
xor
add
xor
sahf
enter
sub
bswap
xchg
movsl
mov
dec
in
sub
scas
dec
and
jmp
repz
out
sub
in
and
daa
adc
scas
jno
xor
mov
das
sub
pop
mov
sub
jmp
sbb
sub
iret
call
xor
xchg
sbb
insl
pop
cmc
sub
mov
scas
mov
pop
sub
cmp
dec
cmp
cs
loop
adc
test
pop
ret
jmp
call
inc
add
imul
mov
mov
sub
cltd
in
dec
xchg
adc
jmp
fldt
jae
push
push
les
adc
sbb
xchg
mov
add
rcll
sbb
pop
int3
sub
das
daa
pushf
pop
out
scas
sub
xor
lods
inc
dec
stc
out
dec
ss
dec
incb
lcall
cmc
into
mov
or
jmp
cmp
inc
and
scas
push
sub
repnz
iret
out
lahf
imul
sub
push
inc
sbb
pop
mov
mov
in
dec
push
stos
lcall
test
push
mov
ds
sti
outsb
loop
aad
sbbb
fwait
lea
jb
jmp
push
fisttpl
cli
je
jo
mov
jle
jmp
mov
sub
stos
cmpsl
mul
scas
adc
cli
sub
mov
rorl
loopne
jmp
xor
push
cmpsl
mov
mov
xchg
xchg
sub
jae
lahf
jae
jg
stc
and
sub
cs
xchg
jne
mov
push
cmp
call
dec
sub
lods
adcb
stos
arpl
pop
jecxz
test
or
sub
lds
aaa
jb
sbb
xor
sub
xchg
or
and
jp
xor
cmp
add
icebp
push
popf
ret
cwtl
sub
add
add
dec
sbb
add
jb
inc
inc
sub
sub
divl
pop
stc
jl
les
pop
pop
loopne
mov
fisubl
ds
jae
cmc
pop
sub
ror
sbb
jg
jbe
dec
sti
rcrb
fsubrs
jmp
or
dec
sub
mov
insl
add
mov
pushf
rorb
sbb
test
mov
out
mov
mov
ss
popa
jo
dec
or
stos
dec
jmp
sub
sbb
sbbb
xor
repnz
fcoml
cli
sbb
mov
jge
adc
add
div
sub
push
lods
inc
lret
rorb
sub
xor
adc
push
cld
mov
shrb
sarl
xor
or
sbb
inc
sub
mov
mov
bound
or
push
xchg
cmp
pop
xlat
insl
mov
punpcklwd
loope
inc
mov
jmp
jge
xor
gs
adc
xor
sub
jg
and
sub
call
pop
sub
dec
and
les
adc
andl
fstpt
xchg
leave
mov
mov
notb
cmpsb
sub
pop
out
fisttps
or
add
loopne
insb
sub
mov
fwait
test
mov
int3
sub
xchg
outsl
cltd
cmp
adc
test
mov
sub
mov
pop
sbb
and
xor
das
inc
push
xorb
sbb
mov
fwait
sbbl
push
mov
out
and
jb
in
sbb
sub
ja
jno
sahf
sub
aas
and
push
xchg
je
cld
dec
repz
call
sub
jne,pn
ljmp
inc
inc
mov
sub
mov
pop
sub
loopne
sub
mov
inc
dec
pop
push
test
dec
rorb
mov
cmpsb
sub
clc
and
cltd
xchg
dec
adc
sub
fcoms
dec
xor
clc
jno
dec
push
sub
or
mov
and
or
push
lock
pop
sub
loope
hlt
mov
pop
fnstcw
or
and
cs
xor
xchg
dec
inc
adc
mov
in
and
popa
leave
shll
mov
sub
rolb
push
cmp
adc
mov
fdivs
pop
inc
and
mov
int
stc
in
or
aas
sub
ds
jbe
push
mov
xchg
xor
rcl
push
sub
sub
sub
inc
xchg
mov
add
mov
js
in
or
sub
pushf
ja
add
out
dec
dec
icebp
ret
pop
test
shr
test
ret
scas
adc
stos
and
out
pop
les
push
sub
adcb
push
and
ds
insb
mov
shrb
push
test
cmp
sub
push
sub
test
shll
sub
mov
or
aad
aam
pop
scas
xor
push
inc
sub
lds
mov
mov
aad
xchg
ljmp
popa
and
sbb
push
add
jns
ret
or
fwait
mov
outsb
pusha
daa
pop
dec
imul
popf
push
lcall
scas
inc
rorl
sub
push
mov
sub
sbb
jp
sub
push
ljmp
inc
and
sub
adc
sub
mov
inc
jge
data16
add
and
test
stos
add
mov
cs
cld
xchg
testb
mov
sbb
imul
bound
and
push
dec
ja
js
add
mov
leave
add
xchg
dec
sti
fwait
jns
stos
cli
inc
testl
dec
pop
adc
scas
cmp
sub
inc
jl
xchg
xor
sbb
mov
sbb
aad
push
data16
xchg
dec
rcll
ljmp
test
sbb
jno
sub
rorb
aas
xchg
icebp
cltd
push
push
arpl
call
ja
mov
mov
add
sub
jae
sub
inc
dec
lcall
int3
mov
xor
or
fldcw
dec
mov
add
sbb
sbb
add
adc
sahf
mov
inc
or
xchg
xchg
out
sub
add
xor
jnp
mov
mov
or
std
insb
test
popf
push
sbb
sub
pop
jno
and
dec
lods
test
popa
sub
dec
and
fwait
rol
mov
and
push
push
pop
andb
lock
lds
mov
jb,pt
add
fimuls
push
inc
push
mov
mov
out
pop
sub
int
add
inc
ja
cmpsl
loope
mov
and
mov
mov
iret
xchg
imul
mov
in
and
sub
call
sub
adc
jnp
int3
fsubrl
lods
pusha
inc
rcrl
sbb
add
outsl
jle
int
scas
mov
dec
in
in
lret
and
xor
sub
add
enter
sub
sarb
icebp
mov
push
sbb
in
fwait
lret
js
and
repnz
int
mov
push
test
imul
std
sub
sub
push
mov
xchg
sub
in
jns
fcom
das
cmp
adc
fidivrs
frstor
aad
add
mov
outsl
xlat
test
jmp
xor
xchg
sub
sbb
pop
notl
and
add
adc
fldcw
add
cwtl
sub
or
popf
push
adc
push
lock
mov
adc
jecxz
insl
inc
sub
push
xor
faddl
pushf
test
pop
sub
xchg
sbb
sti
sub
idiv
into
imul
aam
repnz
sub
insb
rorb
pop
jp
and
push
popf
es
stos
subl
adc
into
in
dec
arpl
xor
mov
jecxz
sub
adc
iret
push
and
adc
jne
jp
js
lods
lret
fdivrp
scas
sbb
sub
in
xchg
jg
les
jo
aas
scas
sub
in
ds
push
xchg
jecxz
pop
outsl
sub
inc
dec
gs
xor
imul
pop
shlb
push
mov
shll
ret
mov
xor
sub
push
dec
pop
add
lds
enter
jmp
mov
mov
scas
jmp
or
rcl
push
sub
repz
outsb
xor
and
test
dec
je
jo
sub
xchg
jns
dec
inc
aam
sub
xor
adc
xor
imul
push
cmp
addr16
cmp
cli
xchg
pop
push
test
dec
mov
sarb
sub
mov
dec
arpl
je
xchg
xchg
xchg
lock
inc
shrl
rcll
in
inc
mov
nop
dec
inc
shrl
xchg
pop
mov
adc
in
lock
nop
insb
inc
sub
mov
sub
jg
mov
aas
dec
sbb
inc
sub
enterw
fs
sub
pop
ds
adc
mov
and
or
or
test
xchg
sub
sbb
test
sub
and
insb
scas
mov
sub
inc
add
push
or
inc
mov
adc
fwait
shlb
test
sub
adc
cmc
pusha
pop
ds
inc
jo
sub
das
scas
stc
push
sub
pop
xor
dec
and
data16
jge
icebp
mov
or
sub
nop
dec
fisubrs
pop
xor
out
mov
sub
jl
fbstp
sub
sbb
mov
sub
pop
ror
dec
cmp
in
addr16
or
enter
test
sub
int
les
rolb
jp
call
sbb
mov
mov
cmpsb
sbb
sub
mov
sub
and
dec
inc
int3
in
sub
mov
scas
in
outsl
ret
mov
sub
mov
enter
cmp
pop
sub
paddusw
jmp
mov
and
jns
test
push
sub
sub
sbb
xlat
dec
js
sub
in
cwtl
mov
adc
xor
cmp
ss
mov
imul
sub
cmpsl
mov
cwtl
mov
aaa
call
test
push
pop
enter
aad
mov
in
into
push
sub
daa
adc
mov
sub
jb
or
and
sub
lret
lahf
ljmp
sub
adc
lret
jo
fiadds
sub
data16
in
add
sub
adc
sub
cmp
pop
sbb
icebp
lret
cmp
xchg
cmpsb
rorl
mov
mov
mov
test
xchg
aad
push
dec
mov
adc
test
adc
ds
ret
push
shll
lret
sub
adc
mov
inc
ficomps
and
adc
movsl
dec
mov
cltd
pop
pushf
sub
stos
inc
in
sub
pop
scas
sbb
push
xchg
push
sub
push
adc
sub
andl
or
in
enter
dec
inc
sub
aad
icebp
ds
inc
inc
dec
push
adc
add
mov
sub
push
addr16
scas
in
mov
dec
mov
jns
outsb
pop
xor
ds
sub
and
inc
mov
and
shl
push
adc
aas
mov
in
ffree
add
sbb
sub
test
clc
sub
push
out
mov
add
sub
xchg
xchg
mov
add
dec
push
ret
jnp
jl
pop
iret
repnz
jnp
rol
sub
jg
xlat
xor
mov
les
shrb
test
ljmp
call
mov
mov
enter
push
clc
inc
test
push
adc
mov
mov
and
cmp
sbb
or
hlt
call
dec
sbb
mov
push
int
jae
mov
push
lods
cmp
fwait
mov
pop
sbb
ljmp
inc
xchg
stos
cmp
fistpl
shlb
sarl
movsl
fwait
enter
fisubrs
pop
sbb
test
cwtl
aas
xlat
enter
jmp
push
mov
push
dec
in
mov
call
cmp
imul
mov
ret
push
lock
cmp
pop
test
fisttpll
sarl
repz
js
movsl
stos
repnz
push
sub
xor
cwtl
cmp
pop
jnp
fsubs
out
dec
dec
mov
gs
pop
ljmp
lods
xchg
mov
in
arpl
push
pop
or
xorb
cmp
pop
enter
call
loop
les
dec
pop
mov
sub
xor
mov
add
inc
cld
outsb
dec
push
arpl
lahf
cwtl
lds
ss
jnp
subb
ljmp
mov
push
imul
add
lret
ljmp
mov
pop
es
xchg
inc
dec
in
hlt
insb
pop
out
dec
aas
cmp
cmpl
sarl
int
dec
enter
pop
flds
insl
sti
mov
push
xor
cmp
in
ret
xor
jmp
int3
shlb
mov
jg
mov
fs
sub
adc
fwait
xchg
pop
mov
mull
pop
pusha
push
inc
inc
xchg
arpl
adc
mov
pop
arpl
jmp
sbb
out
cmp
jmp
xor
sub
cli
adc
imul
add
adc
arpl
dec
and
and
lods
js
in
fcoms
dec
xchg
mov
mov
jp
adc
es
mov
pusha
and
int
jo
fwait
xlat
pop
cmp
mov
lret
fwait
sbb
cmp
pusha
arpl
push
popa
or
push
imul
insb
jg
cmp
mov
inc
cmpsl
mov
repz
idivb
roll
aam
ljmp
test
and
and
sbb
jne
hlt
inc
cmp
mov
push
stos
lret
lcall
push
sub
sub
lret
sub
out
push
inc
pusha
push
test
mov
pop
lret
test
pop
clc
inc
and
sub
mov
dec
jo
dec
pop
rorl
aad
mov
shll
push
add
and
std
xchg
and
xchg
arpl
scas
stos
dec
push
subb
movsb
sub
sub
or
pusha
mov
fidivrl
call
xchg
push
inc
adc
loop
push
pop
mov
push
mov
inc
shrl
dec
sbb
cmp
push
int3
add
sbb
mov
popf
add
or
jmp
and
inc
cmp
jp
bound
fidivs
sub
push
and
jnp
ss
jb
cwtl
ret
cltd
stos
lahf
add
jle
aas
and
mov
jl
aas
pop
sbb
ret
imul
rcrb
or
cmp
adc
sti
sarb
lret
and
push
cmp
and
sub
add
subl
mov
pop
icebp
cmp
or
cmp
out
scas
outsl
dec
mov
xorl
rorb
and
sub
sbb
fisttpl
cld
inc
adc
push
test
push
sbb
push
shlb
jne
cmp
out
adc
sub
pop
rclb
ljmp
push
or
jnp
or
mov
or
mov
rcr
ret
icebp
loope
jle
push
lret
jg,pt
cmp
ret
ja
rcrl
lret
or
dec
repz
pop
mov
ss
ret
arpl
out
inc
mov
ret
cmp
insl
lods
fstpt
mov
mov
lret
mov
rcll
fcmovbe
xchg
add
xchg
mov
xchg
ds
rorb
inc
icebp
in
dec
cmp
mov
push
jnp
pop
dec
push
stos
pop
xor
sarl
dec
stos
or
stos
xor
mov
adcb
dec
sarb
subb
shrb
pop
push
in
jae
and
xlat
push
mov
rcr
add
call
push
popl
addr16
xchg
jnp
sub
cmpsl
test
popa
mov
push
sub
mov
ficomps
rolb
iret
fwait
mov
dec
mov
pop
sub
aad
movsbw
mov
lea
pushf
mov
movw
pushl
ret
pushf
add
pusha
lea
jmp
push
call
and
and
adc
xor
cmp
aas
inc
and
and
pop
jae
jl
outsl
add
dec
cmp
mov
mov
jge
lds
xchg
loop
and
pop
jb
sub
lret
mov
icebp
and
jp
mov
adc
or
lods
sub
cmpb
das
mov
xchg
cmp
loop
adc
mov
xchg
push
fcompl
inc
mov
rclb
loopne
push
fstpl
jl
pop
lods
and
adc
into
pop
or
pushf
mov
in
mov
rclb
out
ror
lret
sbb
pop
les
and
pop
fwait
sbb
dec
icebp
stos
or
sub
jbe
push
xchg
stos
inc
lret
je
shrl
push
and
inc
jne
fldt
push
push
out
push
pop
loopnew
nop
test
jmp
cwtl
sbb
adc
jb
frstor
mov
pop
fdivl
cwtl
jb
pop
mov
sti
aad
jmp
or
imul
mov
add
xor
mov
mov
mov
repnz
mov
add
out
and
mov
pusha
cmp
push
pushf
jmp
rol
bswap
mov
btc
or
pushf
rcl
sub
sar
sar
pusha
movzbw
shr
pushf
mov
shr
add
jmp
push
call
test
test
ja
push
fwait
sbb
ret
jg
push
shlb
inc
js
movsb
cmp
jge
aam
adc
adc
mov
sbbb
mov
frstor
inc
sub
xchg
mov
mov
add
cs
jno
pop
sahf
inc
adc
add
and
fildll
insl
adc
popa
neg
pusha
lcall
popf
xor
out
jb
inc
clc
test
cmpsb
movsl
mov
ss
cmp
cmpsl
jns
and
dec
sbb
dec
xchg
mov
jmp
filds
cmp
push
jp
pop
dec
pop
daa
mov
push
test
lock
cmp
xor
push
pop
test
in
jnp
jp
pop
aam
dec
out
ret
ret
pop
lahf
pop
fldenv
cli
or
andb
pushf
mov
cmp
sbb
sub
mov
push
call
imul
mov
mov
movb
cmp
jmp
ja
lret
sbb
cld
out
cltd
pop
sub
or
dec
jo
cmpsb
dec
cmp
arpl
lods
sub
add
nop
data16
out
rcrb
repnz
push
mov
mov
cmp
mov
cmpsl
mov
leave
call
into
push
and
mov
outsl
movl
lods
push
mov
sahf
dec
cld
bnd
nop
clc
cmp
pop
out
icebp
dec
sahf
jne
xor
call
push
call
cmp
test
push
stc
cmp
xor
cmp
pushf
cmc
add
pusha
rol
test
jmp
push
call
loop
cmp
pop
sbb
sbb
aad
pop
xchg
repnz
mov
push
sti
ja
mov
sbb
sbb
cltd
pop
insl
mov
push
pop
fcmovne
fldl
inc
jmp
in
pop
xor
mov
leave
pop
sbb
sub
cltd
mov
negl
insl
call
push
call
push
xlat
cmp
jecxz
jbe
fwait
sbb
mov
mov
outsl
mov
aaa
fadd
mov
dec
jb
add
out
xchg
hlt
je
test
ds
push
dec
mov
rcll
and
mov
cmpsl
fisttps
xchg
lahf
in
repz
lods
push
push
cmpsb
sbb
sbb
add
icebp
int
jnp
int
sbb
sbb
rclb
mov
test
es
call
dec
mov
sub
pop
je
std
repz
mov
stos
or
and
loope
shr
fcoml
jecxz
aam
pushf
push
or
in
ret
sbb
sub
lds
lret
jecxz
dec
adc
dec
or
fs
xchg
rcr
mov
pop
xor
jae
cmpsb
sbb
add
cmp
stos
clc
fmuls
jns
leave
adc
ror
cld
imul
jge
insl
mov
inc
push
adc
mov
fcompl
jmp
popf
sbb
lcall
mov
jnp
out
mov
dec
sbb
dec
add
loop
insl
in
inc
repnz
rcll
fs
sbb
cmp
ljmp
out
push
std
jbe
xor
inc
pop
int
clc
movsl
or
or
insb
test
pop
xor
cmp
mov
sbbl
cli
out
adcb
out
aas
sahf
mov
pop
in
xor
sbb
std
dec
das
ret
data16
xchg
ja
mov
dec
dec
jp
jno
pop
pop
cmp
ds
stos
jae
idivl
push
add
cmpsb
insb
out
aad
adc
xor
enter
sub
aaa
sbbl
jb
mov
cwtl
push
call
mov
mov
xor
sti
pop
xchg
pop
into
pop
mov
mov
add
int3
in
cwtl
out
and
jae
ret
in
out
sub
popf
sub
add
into
pop
mov
lea
jae
jmp
loop
negb
fwait
sbb
adc
aas
jg
mov
in
stc
ja
test
fsubl
rcrb
push
repnz
add
add
adc
add
int
adc
adc
push
test
xchg
inc
xchg
mov
pop
repnz
in
pop
jae
gs
xlat
add
lret
mov
dec
sub
jmp
aam
lcall
push
bt
clc
cmp
call
setno
lea
movsbl
movzwl
push
lea
lea
jmp
jl
lds
fwait
sbb
ss
or
xor
jo
mov
adc
or
fwait
mov
rolb
in
pop
ljmp
in
test
jne
push
repnz
nop
repz
push
test
leave
mov
cmp
and
mov
lahf
mov
xor
inc
mov
sbb
mov
popf
stc
pop
pop
cld
mov
cmc
sbb
gs
in
scas
lret
jb
jb
jns
xor
clc
pop
and
or
jb
mov
push
lods
outsb
aad
aas
aam
popf
add
add
and
cmp
adc
icebp
cmpsl
js
jbe
sub
test
xor
adc
sbb
mov
enter
xchg
pop
mov
jbe
lea
ja
pushf
pushf
add
add
pushf
bt
push
cmp
push
lea
jne
call
jmp
push
call
enter
idivb
call
add
fwait
lods
inc
jnp
fwait
sbb
xor
pop
mov
dec
xchg
test
outsl
mov
popf
push
mov
push
pusha
int3
imul
pop
sbb
dec
push
cltd
mov
sbb
jbe
fdivrp
pushfw
cmp
int3
cmp
int
xor
inc
into
iret
adc
sub
les
xor
add
fildl
pushl
popfw
push
movb
lea
je
inc
pushf
pushf
adc
lea
push
pusha
pushl
ret
mov
shl
mov
cmp
cmp
call
lea
je
push
test
test
clc
sub
clc
cmc
cmp
movb
lea
ja
bt
push
clc
imul
pushf
lea
jge
pusha
cmc
add
pushf
pushl
pushl
lea
jmp
push
call
ficomps
push
pop
fwait
sbb
arpl
cs
push
sarb
and
leave
mov
xchg
dec
jecxz
xor
enter
push
jmp
cmp
popa
sub
enter
push
int
jp
mov
ret
stos
icebp
pop
pop
push
push
and
jb
mov
nop
dec
test
or
addl
arpl
mov
add
outsb
movl
call
bswap
jmp
add
mov
mov
stc
test
call
pushl
push
lea
jae
inc
mov
pusha
pusha
inc
mov
jmp
push
call
lock
lds
add
pusha
pushf
mov
lea
jmp
mov
mov
pusha
pusha
pushf
pushf
lea
jmp
push
call
pop
leave
out
pop
push
fwait
sbb
lret
cmpb
mov
scas
insl
mov
ja
jl
aaa
loopne
pop
xor
sti
adc
fistps
ss
fidivrs
out
test
and
sbb
loope
sti
dec
sub
enter
frstor
and
addl
xor
adc
negl
data16
sub
cmc
push
mov
push
aam
sbb
into
lahf
mov
mov
popa
and
imul
adc
imul
repz
test
repnz
or
dec
pop
and
mov
jg
jb
inc
sbb
sub
mov
les
lcall
int3
cwtl
repnz
js
add
jo
push
pusha
xor
jb
imul
rcrl
jmp
sti
cmpsb
inc
ret
test
fsubs
add
and
scas
sar
lea
jae
dec
std
and
xor
pop
xchg
push
mov
call
loop
mov
adc
inc
mov
or
xor
out
data16
push
stos
adc
fsts
and
pop
mov
cmc
test
lret
mov
gs
lods
je
aas
pushf
pop
bswap
into
sub
call
xchg
andb
or
pusha
addr16
or
mov
push
sbb
icebp
mov
inc
test
idivb
call
test
and
idivl
call
fsubrs
negb
call
sub
pushf
jmp
lret
xchg
adc
sbb
add
outsb
dec
test
fists
data16
dec
sahf
add
dec
xchg
out
and
and
jae
shl
add
pop
aam
xchg
aas
push
xchg
in
test
lret
jb
jns
sbb
add
dec
jb
jae
add
inc
jmp
aam
mov
test
xchg
lods
into
in
sbb
jmp
push
call
inc
push
jmp
std
popf
push
lea
jmp
pushf
xchg
ret
adc
pop
cmp
scas
lock
jnp
inc
ja
mov
adc
std
scas
sub
xchg
jno
jg
mov
mov
cltd
mov
lods
test
jae
fdivrl
mov
fwait
sbb
jle
fwait
je
inc
pop
sub
dec
fsubs
push
jecxz
mov
lds
adc
movsl
out
push
mov
adc
xchg
lock
add
mov
fisttpll
test
pop
gs
cwtl
in
mov
and
imul
js
lea
sub
aad
inc
sbb
cmpsb
push
push
call
jnp
adc
loope
mov
rcrb
add
idivl
call
xor
and
ja
pushf
lea
jb
clc
jmp
lret
adc
mov
adc
icebp
ja
je
mov
xchg
pop
jno
arpl
sahf
popa
rcrb
adcb
jne
dec
adc
or
jmp
mov
or
sbb
lret
sbb
pop
adc
repz
push
jge
jo
inc
aaa
sub
lea
call
call
str
push
call
fwait
mov
xchg
push
call
mov
in
negb
add
adcl
pushf
popl
stc
pushf
call
push
call
xlat
lea
jne
bsr
and
mov
pusha
clc
test
add
cmp
cmc
call
push
sbb
add
popa
xlat
in
cli
addb
imulb
iret
imul
pop
popa
mov
sbb
loop
jae
mov
scas
rcrl
outsl
filds
add
pushf
dec
fsubrl
mov
es
movsl
cmpsb
adc
into
gs
enter
push
pop
adcb
gs
outsl
fs
gs
imul
add
push
test
movsb
adc
push
cmc
jl
pop
rcll
notl
insb
xchg
mov
ss
insl
adc
lea
sub
and
sub
pusha
xchg
mov
inc
jmp
nop
test
repnz
push
inc
xor
jmp
pop
es
int
ret
push
jmp
and
movsb
sti
mov
lods
jae
jp
iret
lock
jge
adc
rorl
and
push
pop
lea
inc
add
jmp
imul
pusha
pop
push
imul
pop
sub
ror
outsl
std
mov
xchg
mov
push
add
sub
push
fwait
das
ret
mov
or
mov
cmpsb
aas
fnstsw
sub
adc
lock
pop
mov
popf
pop
mov
jae
cld
and
pop
lret
add
dec
notl
add
mov
push
jecxz
nop
xchg
cld
es
mov
cmpsb
or
xlat
faddp
ja
xchg
lods
lahf
inc
das
or
ds
popf
es
daa
pop
cmc
out
aad
jl
push
call
add
cmp
mov
and
stos
adc
cmp
pop
ljmp
test
stos
or
xchg
cli
push
or
int3
mov
fidivrs
adc
add
dec
gs
sub
into
rcll
idiv
pushf
mov
jae
mov
das
dec
dec
pop
pop
mov
mov
fdivl
pop
rcl
xchg
xchg
add
inc
add
inc
mov
push
shlb
and
pop
fwait
out
lcall
sbb
and
in
lods
inc
gs
mov
int3
jg
mov
aas
fwait
add
inc
mov
cmp
jmp
call
sbb
add
adc
aam
add
lds
idiv
sub
fistpll
push
call
inc
pop
xchg
aas
lea
jne
push
pushl
popf
pushf
pusha
push
push
lea
jmp
push
call
imulb
adc
setnp
subw
cmp
inc
ror
out
fdivr
xor
insl
outsb
repnz
ja
andb
sbb
js
lock
ja
cwtl
xor
pop
xor
mov
sbb
outsl
adc
jmp
push
cmp
cmc
stc
cwtl
push
out
or
add
fs
pop
mov
lds
sub
xor
lret
insl
mov
pop
rolb
push
cmpsl
push
push
fsubl
xlat
mov
movb
lea
call
push
pusha
adc
push
jmp
lea
call
jmp
xor
ljmp
mov
int3
mov
insl
fisttpl
fwait
sbb
dec
pop
rcrl
mov
push
jo
in
cmpsl
mov
cmc
cmp
mov
xor
cmp
add
orps
sub
xchg
mov
pop
lock
jo
aas
dec
cmp
xchg
stos
xor
sbb
test
sbb
xor
arpl
lods
pop
cmpl
in
sarl
ds
jae
jecxz
std
movsb
cld
test
es
cld
adc
cli
idivb
cs
dec
pushf
or
push
fwait
sbb
test
xchg
cli
push
push
add
push
hlt
sbb
mov
pop
xchg
lock
sbb
insl
mov
out
lods
cmp
mov
push
popf
push
lret
cs
movsb
mov
insb
in
or
test
push
jl
lret
fnstcw
notw
insl
movsb
test
dec
adc
push
ljmp
inc
enter
and
cwtl
dec
call
dec
inc
push
call
push
jno
pop
or
in
push
out
cmc
sbb
sahf
dec
cmp
out
test
out
mov
jge
push
nop
stos
mov
movsb
xor
loopne
sahf
add
in
and
test
inc
sbbl
adcl
jb
sbb
or
pop
aad
cmp
loope
rcrb
push
inc
out
fwait
sbb
jb
les
test
sub
jge
out
sub
mov
mov
xlat
iret
mov
negb
pop
mov
sbb
xchg
sbb
add
mov
in
das
xchg
dec
add
insb
daa
sub
add
loop
push
lods
add
fwait
sbb
jne
push
push
sub
push
or
pop
mov
mov
xchg
stos
fsubr
adc
shll
lret
xchg
mov
bound
lds
sub
mov
add
mov
inc
xchg
xor
or
mov
cwtl
or
mov
subb
in
hlt
adc
pusha
lahf
mov
mov
stc
push
cmp
sbb
insl
pushf
xchg
mov
sbb
push
hlt
push
adc
pushf
scas
into
aam
mov
push
insb
sbb
cmp
and
fisubs
push
sti
dec
adc
outsl
lret
push
fs
push
jle
dec
es
or
inc
xchg
inc
push
test
pop
jmp
mov
xchg
mov
pop
mov
pop
insb
punpckhbw
adc
cmpsl
xor
sub
pop
insb
or
repnz
lahf
pop
and
insb
adc
pushf
sbb
or
sahf
imul
test
or
or
add
jecxz
push
aad
cmp
fcmovnbe
call
jmp
jo
jp
aam
dec
mov
push
push
pop
mov
xchg
mov
sub
in
cmpsl
aaa
mov
ror
mov
sti
clc
inc
push
ret
movsl
mov
xchg
and
fdivl
xor
mov
or
lret
xor
dec
ds
clc
cli
loope
mov
inc
repz
xor
rcrl
xchg
sub
pop
inc
lea
movzbw
setae
pop
lea
pop
pusha
pusha
setg
jmp
shr
outsl
or
push
dec
iret
add
jne
adcl
sub
lea
add
sub
jbe
cmp
inc
sbb
xor
call
mov
and
mov
sub
mov
repz
jl
mov
jg
lds
fwait
sbb
sbb
ss
cmpsl
mov
lds
sbb
es
data16
add
xchg
push
lcall
hlt
fistps
leave
fwait
dec
movsl
fsubrl
inc
repz
cld
pop
mov
cmpsl
ret
sub
adc
repz
xor
lock
or
ja
xchg
xchg
pop
jl
xor
sbb
ret
and
push
push
pop
jle
repnz
mov
jmp
xadd
shr
movzbw
mov
movzbl
add
neg
pushf
jmp
pop
push
hlt
or
loop
xor
addl
jp
mov
sahf
stos
lods
decl
mov
fstpl
call
testl
negl
cld
mov
mov
jb
pop
pop
fs
jg
xchg
push
cld
out
in
and
inc
pop
scas
mov
jg
dec
lds
cmpsl
mov
dec
out
stos
mov
sbb
scas
leave
rorl
or
sbb
fisubrs
cld
subl
and
add
daa
add
mov
mov
pop
cmp
jp
cli
and
call
and
scas
mov
and
dec
bound
mov
or
and
cmp
int
pusha
rol
scas
push
pop
out
sub
adc
pop
push
andb
push
mov
dec
xchg
lods
mov
xlat
iret
hlt
cmp
adc
xor
or
sbb
and
stc
in
jp
lret
xor
inc
add
pop
inc
sub
mov
adc
sub
pop
or
inc
out
loope
mov
popf
sbb
mov
out
dec
mov
pusha
jmp
push
orb
sbb
push
xor
lahf
pusha
stos
popa
mov
and
push
int
xchg
dec
pop
out
aad
addb
inc
pop
stos
dec
dec
arpl
shrl
jl
aam
mov
xchg
mov
mov
sub
pop
pop
or
aad
stos
jg
add
out
popf
ljmp
mov
mov
lods
mov
repnz
xor
inc
test
push
stc
sub
pop
jge
daa
mov
addb
add
push
push
fwait
and
inc
mov
inc
out
insb
andb
jmp
je
andb
dec
add
fwait
sbb
pop
xchg
stc
aam
ds
jo
mov
pop
shrl
rcrb
jg
push
and
xchg
cmp
pop
adc
xchg
mov
dec
mov
push
pop
je
enter
hlt
loope
cmp
add
inc
inc
lret
inc
xor
inc
dec
rcrl
ds
ss
sahf
bound
add
in
imul
or
jo
pop
and
jge
pop
fwait
sbb
jmp
jl
push
movsb
sub
xor
into
out
inc
jae
insb
lahf
add
ficoml
in
call
out
test
inc
fimuls
xchg
shll
xchg
dec
aam
xchg
ss
int3
add
clc
xchg
inc
mov
mov
mov
xchg
or
rolb
xorl
fwait
dec
andb
bt
jnp
bt
sub
call
push
call
ja
xlat
push
call
lahf
add
cmp
push
jmp
jb
cwtl
push
fwait
sbb
cwtl
or
sti
mov
adc
outsl
pop
inc
cmpsb
pop
xchg
movsb
pushf
cmp
das
shll
xchg
and
push
pop
orb
shr
push
je
jb
fwait
sbb
jns
mov
mov
push
mov
xchg
aaa
cwtl
sti
sbb
fcmovnu
mov
daa
insb
inc
test
sbb
pop
fsubrs
and
or
and
push
mov
cmp
mov
mov
sub
push
mov
rol
pop
bound
testb
adc
inc
mov
shrb
push
push
outsl
sti
mov
lret
outsb
movsl
imul
cltd
jnp
je
or
xchg
jmp
xchg
fiadds
push
xchg
data16
xchg
pusha
pusha
add
movw
mov
pushf
push
pushf
pushf
lea
jmp
xor
mov
repz
clc
xchg
sbb
mov
lods
inc
push
shll
frstor
fildll
pop
jns
mov
es
inc
pushf
in
in
xlat
inc
push
mov
ret
and
scas
and
push
jmp
cld
sarb
popa
inc
call
mov
jl
jae
aas
fstpt
xor
mov
push
mov
das
push
movsl
dec
cmp
stos
push
or
lret
add
cwtl
push
arpl
shll
ret
xor
popf
mov
lea
xchg
cmp
ss
push
out
lcall
sbb
outsl
xor
or
and
mov
add
insl
aaa
mov
mov
test
dec
xchg
cwtl
dec
aad
ja
or
inc
sbb
mov
aad
adc
nop
mov
inc
adc
mov
jl
insb
jecxz
addr16
mov
adc
ds
pusha
dec
cs
add
stc
in
pop
pop
xchg
mov
mov
and
scas
sti
add
adcl
mov
ja
test
mov
movsb
mov
loopne
nop
mov
fsubrs
mov
insl
dec
cli
sbb
fidivl
gs
cmp
in
call
mov
pushl
pushf
lea
call
pusha
call
in
jbe
add
sbb
loop
jl
jmp
dec
call
movsl
fsub
mov
das
jno
jge
mov
push
jb
cltd
nop
repz
pop
jmp
cmp
adc
or
jmp
js
fwait
aaa
out
inc
add
pop
xchg
sub
mov
dec
sti
enter
shrb
inc
stc
fdivrl
cli
out
push
aam
push
xor
pop
cmp
loope
mov
sbb
push
movsl
adc
addr16
xchg
pop
loopne
add
push
leave
mov
mov
jl
lock
push
popf
add
gs
sub
scas
add
inc
scas
cmp
sbb
clc
out
mov
adc
shlw
jmp
int3
xor
xor
jb
dec
imul
fisttps
sahf
jno
jnp
xor
fidivl
mov
int
into
sub
fwait
xor
sbb
inc
dec
je
loop
jns
ja
xor
pushf
mov
movb
pushf
lea
jmp
push
call
add
fwait
sbb
jge
std
cs
fsubs
insl
mov
pushf
or
push
dec
mov
xor
in
test
xchg
stos
mov
in
loope
inc
or
mov
and
and
stc
cmp
mov
pushl
lea
ja
jmp
lea
je
call
movw
mov
lea
jb
jmp
test
sbb
mov
mov
cli
iret
and
rclb
sbb
iret
xor
ja
lods
js
add
sbb
jmp
jl
mov
test
sbb
pop
pop
push
xchg
insl
aam
jno
push
xor
mov
bound
xchg
push
or
xor
sbb
jg
mov
enter
and
jl
cmp
pushf
push
in
pusha
xor
lahf
pusha
add
jg
xlat
sti
je
mov
int3
out
pop
mov
push
aad
ret
outsl
inc
jmp
sub
and
mov
nop
push
and
pusha
stc
ljmp
inc
pop
lock
lds
cmp
jg
sub
mov
sbb
mov
fs
jmp
mov
arpl
mov
jns
leave
mov
jecxz
iret
fildll
insb
iret
lahf
gs
pop
mov
sti
lret
or
fwait
sbb
add
sar
out
xor
out
sub
outsb
js
bound
dec
fmuls
push
cmpsl
xchg
out
icebp
xchg
ret
fcmove
out
call
movd
or
push
jnp
or
nop
popf
xchg
or
xchg
inc
jns
pop
push
shlb
mov
jo
test
hlt
inc
loope
mov
and
loope
in
add
inc
xlat
jno
bound
test
roll
test
into
jecxz
lds
add
xchg
test
cmc
xchg
mov
not
sub
or
push
stc
pop
pop
xchg
push
mov
je
push
int
mov
lds
lock
cld
out
fwait
inc
pop
imul
mov
test
lret
sbb
and
or
jge
sbb
imul
cmp
leave
popa
add
cmp
popf
mov
lea
and
out
jne
xchg
pop
ficompl
mov
repnz
pop
sbb
and
fildll
push
out
mov
sahf
pop
inc
or
lcall
pop
jnp
sub
out
cmp
pop
jg
mov
or
or
push
ljmp
add
sub
sti
mov
negb
call
popa
xor
push
call
test
adc
jg
call
neg
push
sub
lcall
mov
and
push
fldenv
cmp
xchg
in
or
mov
fisubrl
outsl
aam
push
dec
inc
sbb
push
push
sub
cmp
sbb
int
or
ds
lea
movb
xchg
not
movl
lea
mov
call
push
call
xchg
or
in
push
call
push
call
mov
lret
inc
xor
shr
mov
pusha
stc
cmc
cmpb
pushf
pushf
push
lea
jne
aad
xor
bt
xor
push
btc
pushf
mov
add
xor
add
test
pushf
mov
stc
cmc
pushf
test
pushf
call
pushf
jmp
test
and
bt
ja
add
pusha
push
pusha
pushl
lea
jmp
scas
into
repnz
lcall
sbb
outsb
xchg
jecxz
xor
inc
sbb
lock
push
insl
aad
pop
sub
out
sub
push
into
icebp
sbb
rolb
xchg
jp
cmp
mov
mov
mov
daa
lret
stos
add
push
fisubrl
mov
lcall
dec
jo
push
call
jno
add
lcall
sbb
outsl
mov
push
mov
inc
test
and
cs
jle
push
mov
xchg
lret
lahf
sti
fisubs
adc
dec
stc
sub
sbb
js
mov
mov
push
or
pushf
xor
push
in
inc
pop
sbb
jb
mov
mov
xchg
fisttpl
jbe
push
push
adc
mov
jb
ret
xor
in
int
das
inc
enter
test
imul
mov
cltd
pop
movl
jmp
jb
add
lcall
add
xor
int
mov
aas
mov
leave
xor
xchg
mov
xchg
and
mov
cmp
mov
adc
jmp
jnp
push
data16
add
pop
xchg
jae
mov
sub
mov
mov
stos
jp
aad
cmpsl
push
lcall
inc
mov
add
test
adc
or
inc
sarl
dec
inc
dec
sahf
lock
addr16
xchg
sbb
add
adc
sbb
lcall
int3
cmc
stos
jge
pop
lock
lret
paddsw
clc
or
push
test
dec
lret
mov
arpl
jmp
sbb
jae
lds
xor
cld
loopne
addl
add
idiv
mov
add
mov
test
sbb
sub
dec
sub
dec
sub
roll
into
xor
movsb
sub
pop
mov
lods
fisttpll
xchg
cmp
loope
jl
lods
iret
sub
adc
jns
lret
cmpsb
pushf
cltd
hlt
xlat
out
movsb
mov
mov
hlt
pop
adc
xor
fmul
cwtl
es
aam
scas
sti
fldt
jns
or
and
pop
cld
lcall
decl
iret
pop
and
movsl
jle
ljmp
jle
cmpsl
xor
add
insl
stos
ss
ljmp
lgs
adc
mov
push
or
xor
pop
push
aas
push
repz
adc
cmp
call
test
shlb
adc
jae
daa
adc
rclb
adc
lcall
sbbl
adc
push
cmp
adcl
div
ja
inc
xchg
rcrl
sbb
imulb
push
mov
adc
mov
mov
add
xchg
repz
adcl
movsl
or
hlt
enter
push
mulb
xor
mov
push
lock
mov
mov
pop
add
insb
push
push
shlb
imul
or
mov
and
xchg
mov
push
jno
xchg
loope
mov
idiv
push
call
dec
pop
push
cmp
cld
sti
lcall
sbb
nop
sbb
pop
insb
bsf
lods
xchg
aad
sbb
fbstp
jmp
adc
mov
rolb
scas
sti
cmp
out
push
in
pusha
int
movsl
mov
jmp
xchg
gs
mov
xor
daa
adc
mov
xlat
or
lcall
dec
mov
addl
test
jp
or
add
aaa
fcmovne
aam
scas
repz
int3
mov
or
push
je
mov
lret
pop
rcrb
in
dec
mov
dec
jnp
push
push
daa
rorb
mov
jb
nop
jno
sbb
xor
mov
fnsave
dec
fldt
adc
mov
imul
pop
mov
add
mov
shrl
imul
gs
shl
dec
andb
test
and
mov
sbb
mov
out
xor
xchg
push
xchg
adc
shlb
mov
scas
push
dec
imul
push
cwtl
xchg
shr
mov
push
inc
sub
clc
xchg
mov
ljmp
lcall
into
scas
sbb
adc
out
inc
xor
pop
scas
xor
loope
inc
jo
sub
rclb
imul
es
icebp
dec
in
cmp
je
jb
lahf
testl
and
mov
nop
or
sub
es
sbb
pop
inc
push
popl
sub
aas
jge
jle
lds
popf
daa
adc
scas
outsb
lss
shl
iret
imul
cmp
loop
outsb
sbb
pop
popa
pop
fucom
add
scas
fisttpl
mov
fwait
into
je
pop
jnp
lds
dec
lret
stos
aas
lcall
popa
stos
pusha
fldcw
mov
aam
out
andb
fdivr
das
add
in
lock
inc
enter
cmpsl
adc
cwtl
xchg
cli
sbb
push
mov
add
jbe
sub
dec
test
sbb
aas
add
dec
cltd
add
int3
pop
int
or
sbb
shlb
rorb
add
push
call
outsl
out
stos
das
loope
mov
fsub
clc
lcall
out
mov
lods
or
xchg
mov
into
lock
int3
mov
push
fistps
and
lds
add
inc
push
dec
outsl
xor
imul
pop
std
fdivrl
pop
dec
icebp
xchg
sarl
movsb
loopne
inc
cli
sub
add
call
pop
jge
pop
call
mov
lock
push
xor
and
aad
jne
in
xor
call
cmp
jmp
add
aas
aas
xor
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
inc
push
xor
inc
inc
pop
add
enter
sbb
cli
xorl
lret
mov
in
dec
stos
cld
mov
test
add
push
notl
fs
fcompl
shl
fisttps
sbb
and
mov
mov
testb
stos
push
pop
stc
in
dec
andb
fldcw
in
add
jmp
pop
inc
adc
lcall
push
add
push
push
mov
xchg
insb
mov
stos
mov
adc
lock
pop
add
sub
popf
jge
jne
adc
stos
push
mov
xor
jne
push
jo
jle
lahf
xor
sub
mov
outsl
push
and
mov
fucomip
scas
sahf
inc
insl
or
mov
popf
xchg
call
push
call
test
dec
negl
dec
fs
mov
cmp
xchg
mov
clc
rcr
dec
mov
sub
scas
jge
or
jg
jle
xor
in
pop
clc
sub
mov
out
fcos
dec
sub
inc
ss
adc
mov
shrl
cmp
out
test
loopne
fisttpll
leave
int
inc
gs
fwait
mov
scas
lcall
ss
pop
cmp
negb
aad
aam
mov
fsubl
repz
xchg
test
add
pop
insb
int
mov
enter
mov
inc
lret
sbb
xchg
lods
push
mov
mov
orl
out
jno
stos
sbb
fisubs
dec
xor
mov
inc
dec
sbb
int
call
push
in
jnp
mul
fisubrl
jmp
lahf
daa
call
gs
lcall
or
jne
jl
push
xor
inc
in
mov
nop
or
push
cwtl
daa
bound
xchg
insl
stos
xor
mov
pop
mov
mov
mov
in
lret
ja
std
xchg
mov
mov
xchg
aaa
push
mov
push
mov
cli
les
lds
out
sbb
xchg
mov
and
ja
pusha
pusha
mov
mov
lea
jb
clc
cmpb
call
neg
aas
bsf
stc
mov
jmp
lea
je
cmp
bt
clc
jmp
adc
sbb
mov
je
inc
xor
cmp
femms
jp
test
in
call
xchg
movsb
sub
xchg
aam
jb
out
pop
add
dec
and
daa
cmc
test
xchg
jmp
fcompl
inc
popf
sbb
popf
out
mov
imul
inc
dec
in
repz
adc
fs
test
mov
pop
jns
andb
inc
aam
pop
out
hlt
lcall
jb
pop
inc
cmp
adc
dec
pushf
xor
test
pusha
shll
mov
imul
push
stos
dec
fnsave
popa
cmpsb
jnp
repnz
leave
xor
mov
mov
pop
push
adc
or
jno
addr16
mov
fdivrs
jne
call
jge
pop
hlt
lcall
scas
and
decl
mov
cmp
jle
jnp
or
jae
mov
sub
into
dec
xchg
into
xchg
clc
lock
mov
stos
adc
stos
cltd
rcr
mov
mov
dec
iret
in
test
cmpsb
mov
scas
mov
lcall
in
enter
fistl
sub
mov
pop
out
fsubrl
xchg
push
dec
and
popa
jns
add
les
push
aad
pop
xor
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
bsr
rcr
movzbw
mov
stc
cmpb
call
mov
pop
outsl
inc
add
sarb
test
out
out
dec
lock
mov
mov
testl
mov
cmp
cmp
incl
push
inc
dec
push
mov
jnp
jnp
imul
push
push
xchg
sti
int
insl
mov
jns
in
dec
rorb
push
jbe
daa
mov
fsub
cmp
inc
and
in
mov
and
ljmp
idivb
mov
mov
outsl
inc
sbb
neg
shr
jns
add
xlat
add
pusha
sub
call
pushl
call
add
je
insl
gs
gs
imul
mov
add
repnz
mov
cmpsb
stos
add
movw
not
mov
mov
mov
pushf
push
pushf
pushl
ret
lea
je
call
ret
jg
repnz
insb
mov
call
imul
iret
sub
sub
mov
mov
es
and
sti
pusha
dec
jnp
lea
test
sub
imul
adcl
fwait
mov
jne
popa
adc
add
orb
addl
lcall
jge
jb
cld
sub
adc
inc
dec
dec
inc
push
dec
xor
cs
insb
add
clc
push
repnz
fnstcw
push
mov
pop
push
fdiv
shll
mulps
fcoml
iret
jecxz
xchg
sub
xchg
lods
nop
push
xlat
fwait
push
inc
add
popf
in
adc
std
loopne
cmp
sub
sbb
pop
sub
fdivr
sahf
pop
scas
daa
sbb
push
repz
loope
or
sbb
out
adc
push
fnstenv
popf
pusha
icebp
lcall
mov
sub
push
stos
inc
fld
xor
dec
lods
xchg
es
or
xchg
cmpsb
xchg
cmc
std
pop
out
adc
aaa
sbbb
arpl
lahf
out
mov
bound
shll
or
call
sbb
insb
int3
mov
js
adc
pop
push
js
dec
mov
aas
fs
cwtl
or
pop
daa
mov
into
fidivrs
in
xchg
pop
mov
mov
call
out
std
mov
les
mov
ret
sbb
mov
clc
cmp
jmp
push
call
push
rcll
add
imul
jae
lea
jne
pushf
jmp
cld
subb
shrb
ja
push
mov
ss
stc
or
popf
jmp
sub
pop
clc
shll
cmpsb
lret
imul
in
lock
or
test
or
decb
pop
insb
cmovnp
test
or
mov
mov
sbb
cli
push
test
cmp
test
test
pushf
call
scas
push
push
lcall
lcall
inc
push
cmp
jne
dec
mov
mov
mov
xchg
nop
shlb
mov
test
xchg
and
lcall
mov
cmpsb
add
inc
xchg
sbb
call
and
jo
arpl
lret
jne
lock
add
dec
test
dec
bound
testb
mov
outsl
lock
pop
mov
pop
cmpl
mov
fbstp
xchg
mov
sub
inc
pop
lahf
add
jmp
rorb
cmc
cltd
jl
mov
jge
lods
jo
lea
add
push
jns
xlat
out
lcall
rol
dec
daa
subl
cmpb
cmpsb
cmpsl
jno
fldt
pop
sub
mov
sbb
outsb
test
push
int3
xchg
cmp
outsb
sbb
movlhps
lahf
add
push
out
dec
in
pushf
jp
cld
xor
sub
pusha
fsts
repz
sbb
mov
movl
and
jb
clc
push
movb
pushl
cmp
movb
lea
jae
bts
mov
btr
or
mov
btr
and
mov
bt
inc
lea
clc
mov
clc
xor
cmp
jl
stc
repnz
call
pushl
lea
jne
mov
movb
push
not
movzbw
mov
setg
jmp
push
call
pusha
or
xchg
xchg
out
lcall
adc
arpl
mov
mov
push
dec
push
enter
mov
test
mov
in
dec
push
aad
cmp
and
mov
push
idivl
xor
ja
add
rorl
test
inc
push
pushf
pushl
popf
push
pusha
lea
jmp
cmp
popa
out
lcall
popf
push
sbbb
in
xor
xor
push
inc
dec
stos
add
sub
sbb
jmp
jns
inc
sbb
jmp
dec
and
xor
dec
movsl
rsqrtps
sbb
test
mov
cmpsb
ss
push
movzbl
iret
inc
mov
jno,pn
cmp
push
jbe
lods
or
popf
out
pop
cmp
jne
push
shlb
xchg
cld
mov
mov
xor
or
add
add
mov
test
call
pusha
mov
in
lcall
sub
lock
nopl
pop
or
dec
push
jo
stos
popa
mov
push
scas
lret
push
push
adcl
dec
repz
ja
mov
mov
add
push
mov
adcb
or
testb
int
and
inc
pop
cmp
xchg
pop
inc
mov
xor
jb
dec
pop
nop
xor
jp
push
repz
rorl
rol
mov
inc
test
test
jbe
jb
xchg
fnstsw
fldenv
std
movsb
leave
out
sbb
inc
cmpsl
cmp
dec
mov
adc
push
repnz
mov
in
push
call
mov
push
pushf
lea
jne
sete
lea
mov
pusha
push
pusha
pushf
popl
stc
cmc
bt
pushl
or
movw
jmp
push
call
pop
inc
dec
push
add
outsb
in
lcall
sbb
dec
jg
das
jmp
mov
out
sbb
inc
js
outsl
ss
adcl
mov
add
ja
sbb
lret
pop
cmp
adc
xorb
push
mov
mov
repz
lods
xchg
mov
fucomi
leave
fstpl
and
sub
rorb
faddl
dec
pop
out
psrlw
jmp
insl
jge
mov
in
inc
and
pop
call
adc
fsubr
lcall
push
cmpsl
mov
lahf
add
mov
fisubl
call
push
xchg
xchg
clc
cmp
push
pop
and
add
fistpll
shlb
pop
pop
sub
sar
int3
or
cmp
sbb
pop
cmp
sub
dec
or
scas
in
mov
aaa
call
popa
push
call
daa
test
jmp
sbb
or
and
fildll
push
mov
or
cmpsl
stos
call
jbe
add
mov
lods
popf
mov
pop
adc
dec
sti
cmp
xlat
push
dec
popa
loopne
add
inc
fildll
imul
fnstcw
xchg
dec
insl
dec
jl
das
inc
jnp
pop
sub
inc
ljmp
sub
xchg
pop
xchg
arpl
jae
mov
and
mov
and
loopne
leave
mov
inc
sub
out
sub
lcall
inc
fcomps
dec
aam
jl
adc
cmp
mov
push
mov
mov
adc
clc
lock
mov
push
fcmovu
add
mov
jns
lds
mov
push
lahf
test
dec
xlat
inc
test
add
mov
pop
js
ja
xchg
pop
cmp
jmp
mov
mov
stos
xor
pop
mov
dec
fdivl
rorl
mov
pop
out
popa
decl
lcall
aaa
xchg
dec
out
cmp
into
xor
add
add
ret
int
mov
xchg
adc
pop
xor
insl
pop
inc
push
pushf
jecxz
pop
rorl
and
mov
and
das
mov
out
push
insl
inc
mov
inc
ljmp
dec
rcr
mov
inc
xchg
lret
add
add
cltd
cmpsl
lret
out
ret
cwtl
outsb
sbb
ds
pop
mov
divl
repnz
shll
jae
pop
fdivp
shrl
out
scas
mov
and
inc
clc
jmp
pushl
push
lea
ja
clc
adc
bt
sub
sar
clc
clc
or
add
call
shl
pusha
lods
clc
mov
xor
cmp
cmp
add
stc
movb
rol
pushf
jmp
push
lea
je
call
xor
sbb
lcall
jge
dec
fcmovne
scas
pop
mov
mov
push
scas
xchg
dec
sahf
mov
dec
std
mov
loop
and
lret
aaa
adc
jae
mov
xchg
pop
fisttpll
xchg
or
cwtl
leave
sub
call
ja
test
ret
pop
cmp
fidivrs
mov
xchg
dec
enter
jmp
or
fs
lea
pushf
jmp
jmp
push
push
inc
push
xor
cs
insb
add
negl
hlt
call
mov
adcl
add
jg
cmp
push
call
push
call
or
neg
call
call
push
movl
jmp
rcll
in
call
inc
sti
dec
out
jge
adc
push
xchg
mov
jecxz
sub
cli
push
dec
pop
xor
mov
arpl
ds
sahf
push
arpl
dec
xchg
fistpl
dec
ss
repz
cmpsl
imul
fmull
mov
test
add
xor
mov
pop
push
imul
scas
aam
jmp
xchg
mov
in
xor
inc
jl
and
pushf
cmp
fnstenv
cld
rorl
lret
repz
call
push
jmp
push
call
inc
mov
jle
add
fs
jne
stc
pusha
stc
mov
cmp
jmp
mov
lea
je
bt
rcr
adc
add
cmp
call
pushl
movl
jmp
push
call
jp
mov
call
nop
lret
jne
ret
mov
ds
inc
ficompl
dec
and
test
cmp
out
adc
sbb
testb
sti
inc
sbb
pop
adc
adc
add
test
gs
mulb
icebp
lds
push
adc
xchg
xchg
sbb
mov
test
push
mov
fucomip
call
in
sbb
lods
call
cmpsl
adc
pop
ljmp
push
sti
pushf
rcrl
inc
test
outsb
jp
and
mov
out
notl
scas
xlat
xchg
cmp
pop
shlb
xor
jge
pop
adc
adcb
push
pop
dec
push
loop
loop
lret
cmpsb
ficoml
ret
out
mov
testl
mov
cwtl
inc
mov
and
rcrl
mov
jne
push
sbb
adc
dec
popa
ljmp
lret
and
jne
cmc
aaa
add
neg
xor
jmp
mov
inc
out
sbb
lods
xlat
arpl
jbe
lahf
mov
cwtl
inc
sbb
sub
jbe
sbb
cmc
lcall
cltd
xor
in
rorb
lcall
aas
xchg
dec
mov
lcall
push
xchg
sahf
test
movsb
add
rol
dec
outsl
out
sub
xchg
pop
sub
xor
push
pushf
cmc
add
stc
stc
rol
pushf
neg
test
bt
xor
cmc
cmc
cmp
add
movl
shr
call
push
call
iret
mov
lea
ja
xchg
add
mov
neg
shr
call
stc
fsubl
in
sbb
dec
aaa
shlb
popf
push
mov
test
cwtl
sub
movsl
test
jns
lods
push
cltd
sbb
adc
sahf
ret
sar
or
insl
call
xor
pop
push
ljmp
loopne
jno
lret
je
orb
ret
mov
mov
jmp
sub
add
lcall
push
lret
xchg
lahf
and
ja
ret
xchg
mov
nop
in
js
cld
push
leave
mov
xchg
xchg
enter
xchg
jnp
ficompl
imul
es
popa
inc
and
xlat
cs
loop
dec
gs
ficompl
mov
jno
nop
imul
or
jne
mov
cmp
jno
cmc
neg
shr
mov
add
fsubs
pop
sub
sub
out
cmp
lcall
push
dec
arpl
sbb
inc
xchg
sar
mov
imul
or
aaa
push
mov
test
mov
stos
push
ficomps
dec
cmp
outsb
pushw
outsb
dec
inc
outsl
xchg
add
fmul
xor
push
push
stos
leave
and
dec
mov
outsl
xor
xchg
clc
pop
adc
ficoms
add
inc
push
arpl
scas
xchg
fidivrl
mov
mov
lahf
add
sub
mov
adc
mov
pop
arpl
in
lea
call
call
push
call
pop
mull
cmp
add
push
call
out
pop
pushf
movb
pushl
popl
pushl
movb
movb
pushl
ret
test
scas
pop
stc
lret
mov
ja
out
pop
inc
or
aam
and
and
mov
int
out
lea
cmp
call
loope
sti
and
add
mov
enter
loopne
shlb
jns
xor
iret
sarl
xchg
in
mov
insl
dec
lea
sbb
sub
std
jl
inc
push
lea
ja
pusha
imul
clc
pushf
stc
pusha
add
pushf
lea
jmp
cmc
pushf
sub
pusha
pushf
push
mov
cmp
push
lea
ja
bt
imul
cmc
add
pusha
push
pushl
pushf
lea
jmp
or
mov
add
jle
aas
xor
ret
ja
and
cmp
xchg
sbb
and
xchg
mov
add
in
pop
std
adc
jg
mov
xchg
xchg
mov
dec
mov
sbb
popf
cmp
jl
sub
or
jmp
cmp
mov
push
call
dec
add
pushl
or
pushl
pushf
pushf
pushf
lea
jne
bswap
call
pusha
cmc
xor
ja
and
test
movsb
shll
mov
popf
jo
xchg
std
add
loope
movsb
dec
loopne
fdivrl
and
nop
in
mov
ss
dec
out
pop
stos
or
jmp
pushf
xchg
fwait
shl
inc
daa
jecxz
addl
mov
pop
jge
lods
jp
bound
and
je
pusha
bt
call
lea
jle
push
jmp
push
call
xchg
push
pushf
push
lea
ja
stc
bt
jmp
pusha
test
mov
cmp
stc
pushf
pushl
mov
shld
cmp
bsr
xchg
jmp
add
pop
loope
sbb
adc
sbb
enter
imul
and
jmp
aas
mov
mov
xchg
add
inc
cmp
movsl
xchg
mov
pushf
enter
rorl
jae
or
dec
shl
addr16
add
xchg
pop
aad
daa
shlb
jmp
leave
clc
movsl
mov
adc
cmp
movb
lea
je
cmc
test
bt
sub
push
call
push
call
ja
adc
test
imulb
cs
sbb
sahf
ljmp
rolb
jbe
dec
outsb
inc
adc
sbb
and
mov
popa
jbe
xchg
mov
fsub
mov
jno
mov
adcb
cmp
mov
testb
in
xor
mov
fs
insl
or
mov
jns
or
js
fildl
mov
mov
adc
dec
movsl
mov
bt
cmc
cmp
pusha
jmp
cmp
loopne
sbb
mov
and
sbb
fstpt
sbb
pop
cs
dec
jbe
push
iret
imul
inc
mov
lahf
xor
jge,pt
data16
pushf
mov
stc
or
adc
cli
sbb
aas
push
xchg
out
add
adc
lcall
neg
adc
mov
or
mov
cwtl
or
add
scas
clc
orl
leave
pop
jae
xchg
stos
lea
cs
lret
faddp
shlb
mov
leave
mov
daa
jno
xor
stos
push
test
fdivl
push
mov
and
add
push
xchg
and
dec
xchg
popa
idiv
repz
in
rcr
mov
or
sbb
adc
sbb
cmc
xchg
add
cld
push
out
lcall
mov
movsb
dec
jle
sarb
loopne
push
mov
test
repz
cmp
dec
aas
add
and
jmp
push
call
pop
or
ficomps
pop
repnz
pop
sarl
stc
pop
in
and
and
cwtl
into
mov
outsb
adc
sbb
dec
jg
xor
js
call
mov
popf
dec
add
or
jge
imulb
test
inc
lcall
jl
mov
push
pop
pop
lret
cmpsb
fsubr
cmp
decl
sbb
loop
testb
inc
mov
push
pop
cli
mov
inc
cmp
insb
adc
push
adc
push
je
push
test
or
pop
push
mov
call
sti
loope
xchg
sbb
jns
jb
add
push
decb
adcl
add
and
bsr
and
or
mov
inc
mov
shld
sub
not
rcr
mov
cmp
test
push
sub
test
repnz
push
lea
jne
movzbw
add
test
pushf
mov
sub
btr
sub
bsr
bts
rcl
lea
jmp
bt
mov
lea
jmp
pushf
jmp
insb
and
imul
outsb
mov
push
stc
adc
mov
push
add
mov
mov
stos
aam
cmc
inc
xchg
leave
mov
lahf
ret
ds
sbb
sub
in
outsl
shll
lcall
push
push
das
and
addr16
inc
loope
mov
ljmp
mov
mov
hlt
pushf
xchg
loope
mov
sub
and
add
sub
sbb
jge
fcmovu
jae
pop
lods
mov
mov
mov
mov
movb
movzbl
mov
lea
movzbw
mov
jmp
push
call
jmp
add
add
sti
inc
or
add
add
pop
jecxz
add
add
add
or
add
add
in
cli
pop
add
add
add
add
add
add
add
pop
add
add
add
xchg
or
add
add
xchg
add
addb
add
les
add
add
add
pop
pop
add
add
add
add
add
jno
add
or
aaa
cmp
add
pop
pop
add
add
add
mov
add
add
add
negb
xchg
call
xor
dec
jb
lcall
stos
insb
cmp
cmpsb
xchg
mov
stc
icebp
xor
in
pop
lret
fnstcw
das
push
sub
jg
pop
mov
mov
fs
movsl
fcompp
fists
inc
scas
jge
outsb
adc
dec
and
dec
sahf
push
lock
pop
push
cmc
jbe
out
jae
ljmp
aam
adc
and
call
lea
ja
push
inc
pusha
not
inc
add
jns
ror
pusha
xchg
bts
shrd
xadd
adc
mov
setne
pusha
mov
stc
stc
pushf
mov
rol
test
shrd
mov
movb
clc
sub
jmp
push
call
jno
jno
add
call
sbbl
mov
sbb
sarb
out
loope
mov
ret
nop
sbb
aas
xor
arpl
repz
loope
call
sbb
sub
mov
pusha
loopne
sub
add
test
fistpl
fisttpl
repnz
xchg
cmp
rcll
scas
scas
xchg
or
and
cmpsb
mov
push
ljmp
repz
rcrb
mov
outsl
gs
add
icebp
fwait
test
inc
xchg
in
ja
test
pop
out
inc
sub
mov
add
es
in
sti
or
insb
cmp
pop
sbb
bound
repnz
enter
test
lcall
xchg
jb
push
iret
aaa
sub
movsl
lods
shr
data16
aaa
ret
dec
lcall
out
in
or
xchg
scas
jecxz
into
test
xchg
dec
roll
in
inc
aam
mov
fistl
jg
xchg
test
pop
js
das
push
adc
fistpll
into
les
or
das
jbe
xor
out
imul
mov
stc
les
pop
jp
pop
push
mov
push
lods
jb
sarb
aas
mov
bswap
jmp
or
pusha
lea
jb
pushf
movw
lea
je
sar
sbb
ror
mov
rcr
mov
jge
sub
cmp
shr
clc
cmpl
pusha
movb
call
pop
jg
fstps
les
into
fdivrs
int3
xor
sbb
pop
mov
add
in
jb
outsl
dec
lret
mov
sub
fdivp
test
dec
cmp
sub
fnsave
imul
and
jp
out
icebp
mov
mov
sub
dec
lods
cmp
or
pop
ljmp
cmpsb
mov
inc
and
push
pusha
movb
lea
jae
movsbl
bsr
movsbw
not
mov
ror
mov
pusha
jmp
insb
jge
fstps
dec
adc
dec
cmp
push
sub
mov
loope
leave
in
sbb
fcmove
pop
sub
int
fsubs
fs
xchg
sarl
cltd
aad
stos
psubsw
lahf
test
mov
inc
mov
in
dec
pop
push
pop
sub
mov
push
xchg
dec
push
icebp
xchg
in
int
adc
pop
je
test
push
mov
mov
pop
jmp
mov
jbe
in
sbb
mov
fs
jne
pushf
lea
jmp
push
call
outsl
test
push
pushf
push
lea
jmp
setg
mov
pushf
xor
test
pusha
call
inc
pusha
pusha
fcomps
push
cmc
insb
sbb
dec
in
nop
fsubs
or
lcall
jb
jge
movsl
insl
stos
cmpsl
mov
or
sub
cmp
or
leave
or
out
or
dec
jl
jl
xor
mov
insl
pusha
xchg
pop
out
mov
and
in
add
fs
call
push
jmp
push
call
mov
dec
stc
jmp
call
push
call
pushf
xchg
push
call
inc
fimull
pop
mov
and
mov
inc
push
outsl
sbb
jne
cmc
notb
cld
stos
mov
js
add
and
xchg
inc
push
ficompl
outsb
test
mov
jp
mov
lods
adc
inc
int
shrb
inc
jne
cmp
dec
insl
jns
sbb
push
jge
insb
stos
rep
inc
fcmovnb
fldlg2
cmp
mov
pusha
lea
jmp
loopne
loopne
lcall
mov
filds
jmp
lea
gs
ljmp
lea
cltd
daa
push
mov
orb
mov
jo
fsub
daa
lret
pop
xorl
jb
repnz
sub
jle
jmp
mov
mov
sub
and
leave
push
and
inc
xor
cwtl
pushf
leave
stos
cmpsl
mov
xor
neg
mov
lahf
lcall
pop
lea
call
cli
imul
lcall
add
mov
sub
xchg
mov
mov
jnp
cmp
lret
push
push
fdivp
sub
inc
in
xor
pop
cmpsl
xchg
fxch
lret
xchg
cli
in
sub
aas
lahf
mov
inc
dec
popa
jne
out
popa
jo
cmp
push
es
repnz
mov
sbb
mov
mov
push
scas
cmc
mov
dec
and
call
lea
je
stc
cmp
pushf
jmp
into
xchg
sub
lcall
inc
std
fimuls
test
sbb
pop
loope
loopne
je
and
ds
jnp
cmp
mov
pop
or
ljmp
pushf
cmp
adc
shll
cli
ss
lcall
xchg
adc
mov
sub
iret
cltd
adc
popa
ret
inc
test
xor
push
filds
mov
les
pop
dec
mov
mov
dec
outsb
aas
jnp
pop
nop
imul
mov
popa
push
out
mov
jg
call
adc
neg
call
fistpl
inc
push
call
pop
cmc
cltd
pop
inc
dec
push
fwait
outsl
adc
in
sub
popa
push
lods
lcall
pop
push
adc
in
and
xor
adc
jmp
pop
dec
iret
jmp
jmp
dec
out
jnp
in
pop
add
gs
inc
insb
sti
std
mov
dec
outsl
push
int
jmp
out
adc
cmp
jecxz
jecxz
xor
cmp
xorl
subl
dec
outsl
leave
xor
nop
adc
dec
push
rclb
cmp
es
adc
sub
cld
test
je
pop
out
mov
clc
in
cmp
sbb
push
call
xor
idivb
add
lcall
nop
scas
cmp
popa
lret
sbb
dec
mov
jmp
or
fs
arpl
dec
adc
xor
jae
jmp
pop
mov
in
pop
icebp
sbb
int
xchg
sbb
daa
jl
scas
nop
cmp
pushf
jg
mov
pushf
xor
xor
cmp
clc
pop
inc
in
sub
jecxz
add
push
rcll
jo
mov
insl
int3
fsubs
or
jo
mov
jecxz
cmp
scas
loop
test
call
sbb
sub
lcall
dec
mov
dec
jecxz
lahf
dec
scas
addr16
stos
pushf
mov
popf
add
cltd
repnz
aaa
lret
pop
lods
jg
ret
stc
daa
push
dec
xchg
insb
aam
push
aad
jne
notl
icebp
xchg
sbb
jnp
push
pop
aad
xchg
mov
es
in
int3
mov
bound
pusha
cmp
cmp
jno
shrb
jnp
jno
inc
ffree
lret
cmp
adc
insb
gs
cmc
test
test
shll
jne
popl
add
add
enter
shlb
push
aas
bswap
not
mov
movzbw
das
sub
bsf
push
bswap
btc
rcl
push
push
shr
cmp
xor
pop
lahf
pushf
pop
lea
pushf
pushl
pusha
push
mov
lea
jae
push
mov
lahf
lahf
movzbw
push
cwtl
push
call
push
call
iret
daa
push
call
xor
in
add
aas
pop
call
cmp
jl
pusha
cmp
jmp
call
dec
add
sub
add
cmp
insl
clc
inc
fisubl
test
mov
fwait
cmp
push
mov
mov
dec
insl
test
out
mov
stos
iret
xor
mov
lods
shlb
pop
cmp
xchg
out
aam
jmp
jg
inc
ss
pop
aaa
sbb
mov
nop
les
mov
xor
bound
stos
cld
jo
ds
lods
ljmp
add
push
jb
ret
xor
leave
ds
stc
test
and
dec
mov
sbb
lahf
inc
call
jmp
mov
xor
lcall
jp
sub
fdivr
mov
inc
xlat
jo
arpl
mov
mov
lahf
fstp
jp,pt
push
or
test
inc
push
ficoms
or
mov
push
ret
call
icebp
mov
push
or
dec
out
fstpl
arpl
jbe
popa
jno
add
stc
dec
cld
inc
jg
sbb
pop
shr
rclb
jmp
mov
sbb
rcrl
es
enter
pusha
dec
xchg
sub
cmc
sub
imul
add
ds
xchg
rolb
xchg
daa
fistpll
mov
int
fimull
daa
pop
or
mov
push
cmp
lea
add
fs
sub
sahf
fcomps
jns
pusha
pushl
popl
mov
pusha
mov
lahf
movl
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
negl
loop
popa
jge
add
jne
rcrl
add
cmpsl
jb
xor
pop
and
popa
ret
stc
mov
add
xchg
mov
ss
jbe
dec
out
pusha
dec
jmp
jae
jmp
adc
add
mov
adc
cltd
das
cli
pop
dec
ficoms
fldt
sti
mov
dec
lods
loop
mov
lret
mov
leave
pop
jbe
mov
test
adc
push
push
leave
mov
movsb
cs
mov
push
inc
lock
add
add
add
add
add
add
mov
pop
add
jge
add
add
add
add
lock
jle
sar
lock
push
nop
push
mov
outsb
insb
test
ljmp
pop
or
push
aad
jae
ljmp
negl
pop
addr16
pop
inc
lret
or
arpl
roll
jmp
jge
cs
mov
adcb
mov
lods
cmc
hlt
nop
rorb
pop
sbb
mov
pop
fucom
lret
out
insb
movsb
adcl
mov
ds
and
fstl
sbb
lods
add
sub
out
sbb
js
push
sbb
aam
cltd
mov
sbb
push
in
call
lods
pusha
cmp
sub
dec
pop
jg
cmp
into
inc
or
out
mov
mov
lahf
bound
push
stc
mov
insl
mov
push
or
dec
insb
fidivl
lcall
and
mov
inc
mov
mov
js
xor
repnz
adc
scas
add
pop
icebp
push
int3
push
jo
jo
or
ds
stos
pushf
orl
jmp
lds
add
je
cmp
push
movsb
aad
cmpsb
xchg
neg
xchg
mov
imul
das
cmpsb
ret
dec
std
dec
push
std
rorb
orl
jne
push
sub
xchg
and
sbb
push
in
xor
pop
gs
pop
popf
fimull
mov
xor
sub
movsl
mov
aas
cmc
clc
bound
push
lea
rorl
fsubrl
or
roll
or
mov
mov
or
jp
and
or
fdivrp
jno
sti
in
sub
fmuls
add
cmp
push
cltd
sbb
test
mov
addl
sub
sbb
push
loopne
inc
out
aas
add
callw
call
add
mov
mov
int3
xlat
fdiv
mov
pop
shrb
cwtl
add
cltd
push
ljmp
dec
lds
idivl
lds
scas
fwait
pop
aas
xchg
test
mov
outsb
inc
stc
lcall
ja
xor
mov
sub
shll
cmpsl
dec
aaa
nop
scas
xor
movsb
scas
icebp
int
inc
test
into
int3
add
aam
mov
rcrl
adc
pop
out
and
js
and
cwtl
lcall
jecxz
fucomp
rclb
and
cmovl
clc
cmpsl
ja
sbb
pop
ds
pop
iret
pop
lret
inc
jmp
lret
in
and
pop
xor
nop
inc
xchg
jns,pn
cli
or
or
divl
enter
add
jb
sub
bound
fnstcw
adc
mov
xchg
loopne
pop
inc
stc
xor
scas
gs
leave
popf
add
push
inc
adc
pop
hlt
jne
adc
pop
or
popa
jmp
inc
mov
test
fstpl
outsb
loop
mov
dec
mov
fnstsw
pop
push
shl
sbb
pop
in
cmpsl
sbb
jae
pop
mov
mov
dec
test
ja
inc
test
lods
add
ljmp
in
inc
in
add
and
rcr
add
les
adc
and
pusha
inc
mov
cmc
pop
insb
outsl
out
cltd
imul
or
adc
mov
pop
test
in
sub
jge
imul
mov
mov
decb
dec
loope
jne
mov
sarb
into
fisttpll
pushl
cmpsl
add
scas
inc
stos
lods
or
sahf
das
add
cwtl
call
and
incl
jne
mov
into
aam
push
pop
jle
movsb
jno
push
scas
gs
insl
sub
mov
test
lea
dec
pop
xchg
sub
js
xchg
and
rcl
ret
jnp
mov
int3
or
add
cmp
rcrb
fstps
adc
shl
lret
inc
jne
mov
in
pop
adc
jo
adc
das
jl
mov
fiaddl
push
popf
inc
mov
std
orb
push
jmp
inc
dec
fs
mov
inc
push
pusha
inc
insb
test
or
and
jne
ja
mov
sub
dec
adc
push
or
and
negl
notl
mov
xlat
dec
cmp
hlt
fimull
into
daa
jne
insl
jmp
je
outsl
ret
mov
les
test
mov
lock
mov
stc
adc
call
out
push
scas
sbb
sub
mov
push
std
mov
dec
pop
ja
xor
loope
pop
or
or
mov
push
mov
mov
push
movsb
mov
sbb
aam
cltd
negb
and
xchg
and
cld
popa
fsubl
pop
std
lcall
addr16
les
or
aaa
jo
repz
dec
lahf
cs
lcall
dec
xor
lea
movsl
adc
lods
idivl
sub
push
and
ljmp
adc
rcr
repnz
jbe
xchg
or
cmpsl
vpaddd
sbb
popf
in
sbb
rcrl
cli
push
sub
sbb
or
mov
lahf
and
push
sti
push
or
cwtl
arpl
cs
popa
repz
dec
arpl
pop
movsb
lea
push
cmp
pop
jo
imul
lahf
add
cli
inc
xchg
insb
add
sub
sub
pushf
jb
insb
out
xlat
es
jnp
subb
add
aas
stos
xchg
mov
iret
aad
ljmp
adc
stc
xor
sti
adc
and
ljmp
test
pushf
adc
mov
movsb
adc
jb
addr16
icebp
rol
dec
jnp
dec
push
mov
jnp
cmp
mov
mov
inc
sbbb
and
mov
dec
sbb
push
fisubrs
cmp
mov
aad
sbb
pop
mov
adc
add
inc
into
pop
cmp
and
arpl
out
jl
mov
push
icebp
mov
fnstcw
test
rol
ret
xor
or
lea
repnz
mov
xchg
lret
daa
stos
imul
lock
jnp
loope
aas
mov
cli
sub
push
call
sbb
jno
popa
mov
insl
lret
mov
setbe
ret
adc
jbe
sub
sub
lock
mov
jmp
outsb
or
or
lock
iret
int
lret
sbb
pop
push
or
nop
enter
iret
adc
lret
push
cmp
push
mov
and
mov
stos
xorl
lahf
mov
lods
mov
push
dec
scas
mov
fucom
jecxz
cmp
jns
sub
adc
fdivrl
or
inc
hlt
or
mov
aam
lret
mov
mov
test
push
insb
mov
sbb
mov
divl
xchg
daa
adc
test
insb
daa
cmp
mov
nop
movsl
testb
rcll
xor
js,pn
fsts
sub
jb
push
add
sub
and
imul
enter
rorb
jmp
mov
negl
int
mov
lea
imul
mov
movsb
pop
mov
jb
mov
scas
push
in
mov
js
iret
sub
andb
fcoms
jb
jo
push
mov
or
repnz
jns
cmp
imul
loop
fsubrs
sbb
lock
aam
push
cli
scas
or
cmp
push
aad
inc
mov
es
xlat
orb
mov
push
repz
and
fs
jge
movnti
jl
cmc
push
dec
test
mov
popf
mov
mov
dec
in
jp
pop
push
imul
nop
imul
inc
or
jp
mov
outsl
and
cmc
lret
out
fadds
fldl
mov
scas
sarl
jb
popa
mov
jbe
lret
test
mov
stc
sbb
fiaddl
sbb
add
dec
sbb
in
clc
jae
popa
jne
rcll
xor
pop
push
stos
dec
pop
test
sbb
dec
mov
adc
stos
les
out
adc
cmpsb
mov
add
push
add
jne
std
in
adc
aaa
pushf
push
mov
ficoms
xchg
jl
mov
push
add
pushf
push
adc
ja
test
je
inc
cmp
cwtl
pop
lret
push
mov
push
comiss
out
xor
ret
lcall
dec
bound
pusha
jb
jg
ret
xor
out
lock
add
and
imulb
std
cmp
jo
outsb
mov
mov
clc
cs
pop
lret
cwtl
out
cwtl
cltd
pusha
rcrb
call
jb
stc
fadd
inc
adc
jns
and
fidivl
and
sti
in
jnp
insl
bswap
jmp
xor
jl
loope
pusha
sbb
jg
adc
mov
in
or
mov
aad
mov
ljmp
xor
les
leave
dec
fstpt
sub
mov
sub
popf
ror
addr16
xchg
push
or
stos
xchg
cmpsl
cld
sbbl
xchg
or
incl
jb
xorl
gs
pop
pop
or
cmp
pop
mov
int3
ja
sbb
add
fwait
push
push
sub
mov
add
aas
mov
dec
scas
pop
inc
lock
lcall
push
inc
or
sahf
mov
sub
mov
cmp
jmp
stos
lds
pop
push
call
dec
mov
out
or
shll
psubsb
inc
icebp
mov
sub
mov
sbb
mov
aaa
add
jmp
or
or
jne
inc
xchg
outsl
in
dec
and
pop
lcall
fwait
sbb
jp
mov
push
and
js
pop
add
subl
enter
fstpl
mov
inc
outsl
sbbb
aas
popf
rcl
nop
adc
push
inc
fs
dec
pop
push
inc
mov
add
dec
insl
loopne
ficoms
dec
and
pop
cmp
push
aad
pop
stc
test
or
xor
daa
add
popf
loope
pop
mov
jo
shrl
repz
imul
sub
dec
push
clc
in
mov
lcall
jb
cmpsb
ficoms
in
in
mov
popf
out
or
cld
add
inc
into
dec
mov
sahf
icebp
mov
cmp
aas
xacquire
jge
xor
and
add
js
pushl
not
pusha
mov
push
movl
pushf
setl
not
movsbw
lea
jmp
push
call
mov
movb
push
lea
jmp
pushf
call
or
fcmovb
lcall
das
xor
out
aas
xlat
jno
outsl
adc
add
xchg
dec
iret
add
adc
cld
jecxz
sbbl
jmp
aaa
or
mov
test
aam
popa
sbb
repnz
mov
test
dec
push
mov
decl
xor
ret
lcall
das
fs
inc
or
jnp
jg
pop
das
pop
cmpsb
adc
xorl
mov
repz
pop
ss
mov
xchg
or
ljmp
outsb
shlb
lds
adc
clc
loopne
inc
daa
repnz
mov
cld
aaa
sub
fsubl
movsl
popa
dec
movsb
out
add
pusha
lea
jb
push
mov
movl
pusha
pushl
ret
push
call
iret
orl
lcall
adc
adc
enter
inc
fcoml
and
cli
aaa
inc
xlat
repz
mov
imulb
mov
stc
lret
cli
xor
mov
mov
mov
pushf
pop
jge
gs
xchg
pop
sub
pop
shll
jp
cmpsb
and
cwtl
loopne
lret
mov
stc
je
in
sarl
mov
xor
mov
jno
faddl
lcall
in
mov
sbb
fnop
xchg
push
loopne
vpshufd
out
or
mov
mov
imul
rol
xlat
sub
pop
aam
jge
pushl
movsl
push
jp
jne
adc
dec
int
push
loope
sti
jecxz
mov
sub
or
pop
or
mov
bound
fwait
int
adc
test
mov
xchg
inc
push
call
and
or
pop
pushf
add
out
lea
je
rcr
xor
pushf
shrd
mov
bsf
pusha
neg
jmp
push
call
mov
mov
mov
lcall
mov
adc
push
add
dec
fisubs
popa
xor
push
cmp
mov
orb
sub
xor
cmc
addr16
dec
mov
call
and
sbb
adc
jl
inc
stos
std
das
insl
xchg
mov
pusha
xor
movsb
ret
inc
outsb
xchg
stos
inc
je
in
mov
out
xor
fdivr
sbb
mov
sbbl
fwait
mov
mov
xchg
mov
jecxz
hlt
jne
out
inc
mov
push
call
or
jg
add
pushl
lea
jae
movzbl
sub
mov
shl
bts
xor
bt
mov
cmc
call
inc
mov
mov
ret
test
ret
mov
adc
notb
push
jmp
dec
es
sub
jno
inc
pusha
in
cld
push
jno
push
ffree
sub
push
or
and
dec
xor
into
sub
hlt
aad
sbbb
std
test
pop
fisubs
cmp
pop
adc
sbb
idiv
aaa
call
mov
push
and
lea
je
push
mov
lea
jmp
xchg
and
mov
mov
cwtl
or
mov
fisubrl
mov
sbb
in
mulb
add
xor
or
xchg
mov
jo
mov
cs
adc
sub
dec
stc
mov
popf
push
sub
pop
cmpsb
jp
fisubrl
je
jmp
mov
sbb
imul
mov
inc
movsb
in
adc
bound
in
into
adc
mov
inc
cmp
xchg
sub
xchg
loopne
mov
add
popf
neg
shl
mov
popf
pop
pusha
and
nop
xchg
cmp
jp
jg
push
mov
neg
push
cmc
xor
bt
movw
add
jmp
call
push
call
add
nop
push
popf
dec
inc
inc
cmp
cs
dec
dec
add
sbb
stos
mov
push
xor
sbbl
mov
iret
je
mov
out
jl
lret
sahf
pusha
or
inc
mov
jbe
push
sub
sub
cmpsl
lahf
mov
dec
mov
addb
das
bnd
aas
jns
sbb
sti
stos
mov
popa
lods
sub
jle
in
scas
popa
call
in
or
sub
lcall
loop
or
jge
sahf
movsl
jle
iret
inc
dec
pusha
xor
aam
stos
jp
ds
pop
ret
orb
mov
pop
push
pushf
adc
adc
scas
or
lds
ret
inc
push
imul
xchg
push
xor
push
jns
cli
xchg
cmp
test
popf
ret
xor
adc
addr16
idivl
push
inc
dec
sub
pop
push
jmp
loop
std
dec
mov
jo
out
and
mov
jno
cmpsb
sbb
mov
aad
out
mov
add
fisttps
lret
mov
neg
mov
pop
orb
push
add
stos
dec
pop
jne
inc
and
fadds
sbb
push
xchg
stos
or
sbb
push
lods
sub
mov
jl
adc
ljmp
andb
scas
mov
std
pop
adc
fdivl
cmp
iret
jbe
inc
push
hlt
outsl
fwait
push
call
inc
cmp
je
outsl
fs
gs
popa
outsb
fs
gs
add
idivl
mov
and
add
shl
dec
stc
cmc
test
call
movb
lea
ja
stc
push
pushl
cmc
imul
jmp
bt
jmp
push
call
aam
std
popf
pushf
mov
pusha
pusha
lea
jmp
scas
fucom
mov
and
ss
rcrb
dec
icebp
lds
sbb
insb
scas
push
push
ss
filds
and
xchg
or
jo
inc
test
and
xor
add
insl
subb
bsf
inc
mov
inc
pop
inc
insl
cmp
inc
mov
loop
les
xchg
pop
daa
xor
push
jne
outsl
or
push
sbb
push
lea
jne
push
pushf
jmp
inc
dec
js
lcall
imul
and
push
xor
mov
ja
js
push
jecxz
sbb
xchg
jmp
into
icebp
inc
insl
inc
leave
or
dec
xchg
mov
sahf
enter
mov
das
and
mov
daa
out
dec
adc
shlb
jne
xchg
xchg
xor
repz
jbe
and
sbb
cld
iret
shrl
hlt
aas
xor
loop
aas
fs
sbb
movsl
add
outsl
test
imul
push
sub
xchg
jnp
sti
cmp
shll
movsl
and
jp
mov
lcall
leave
cwtl
cld
push
pop
dec
arpl
adc
mov
leave
add
xchg
stos
iret
pop
and
das
jge
pop
aas
hlt
fdivrs
aaa
out
xchg
dec
jmp
inc
jle
lcall
sbb
mov
xchg
xchg
stos
cmp
stos
push
das
jge
add
adc
insl
pusha
jle
sbb
dec
aaa
mov
ja
push
int3
xor
mov
aam
or
enter
mov
and
push
enter
push
test
stos
mov
dec
inc
xor
or
mov
lret
or
pop
or
push
in
adc
sbb
jb
or
stos
jb
jl
mov
jbe
and
aaa
sub
cmp
into
inc
xor
iret
push
aaa
pushf
stc
cmc
repnz
jmp
push
call
mov
push
lea
jbe
shl
neg
cmp
xchg
mov
shld
add
bt
jmp
cmpb
sub
lret
aaa
jecxz
hlt
insb
cltd
ja
cmp
xchg
outsl
sbb
xor
dec
sbb
cmpsl
popa
insb
mov
nop
cwtl
cwtl
and
jns
cmp
btr
add
stc
mov
call
pop
icebp
or
lcall
fistl
imul
or
cmp
mov
xor
enter
into
xor
push
sahf
adc
adc
std
jbe
xlat
and
pusha
push
in
enter
aad
dec
lcall
ljmp
mov
pop
pushf
cmp
and
cld
xchg
in
cld
mov
jge
inc
pushl
mov
lds
inc
ds
inc
in
add
outsb
pop
xor
pusha
cltd
push
pushf
cmp
stc
pushf
mov
sbbb
iret
pushl
mov
mov
mov
ljmp
mov
adc
imull
ljmp
shrb
add
push
call
movsb
xchg
pushf
adc
pusha
lea
jmp
push
call
arpl
out
gs
mov
pusha
jnp
int3
ljmp
xsave
ret
mov
inc
cmpl
and
inc
push
xor
xor
jp
repz
imul
and
inc
loopne
stos
or
mov
repz
scas
sub
sbb
and
insl
sbb
scas
ret
xchg
pop
cs
jg
jns
cmp
test
cli
sub
test
leave
push
pushf
movl
mov
lea
call
pusha
jmp
pushl
lea
je
clc
test
test
cmp
cmp
call
inc
cmp
aas
xchg
addb
mov
dec
stos
call
mov
stos
mov
xchg
ficoms
xor
inc
lret
dec
pop
mov
xlat
sbb
inc
cmp
jbe
mov
pop
shl
or
push
xchg
jbe
mov
add
in
sbb
out
pop
jnp
add
iret
shlb
stc
fwait
inc
sbb
js
call
cmpsl
or
aad
stc
test
out
mov
xchg
cltd
loope
int3
loop
add
mov
cltd
lods
or
mov
stos
call
shl
push
call
ljmp
xchg
call
and
add
leave
sub
add
push
call
stos
mov
and
movb
lea
jne
push
pushf
pushf
pushf
lea
jmp
lea
je
test
clc
test
stc
add
pusha
push
stc
clc
cmp
push
movb
jmp
push
call
loope
push
jmp
pusha
push
movb
call
neg
mov
clc
pusha
bt
cmp
movl
lea
jb
pushf
stc
cmp
call
lea
pushf
bswap
lea
lea
push
pusha
movzwl
movzbw
pop
lea
lea
pop
mov
call
push
call
lret
dec
sar
mov
pusha
sub
push
push
movb
pushf
rep
lea
movzbw
movzbw
mov
movb
pushf
push
pushl
lea
jmp
push
call
gs
lcall
call
add
fs
jne
movzbl
movb
movsbw
pusha
mov
cwtl
call
lods
ret
lcall
adc
lock
aad
pop
test
dec
jmp
out
icebp
xor
fcmovne
enter
push
addl
jge
and
inc
loop
jb
sub
push
repnz
xor
fdiv
xchg
jns
pusha
mov
xor
roll
sbb
add
test
adc
or
or
into
mov
call
stc
add
sbb
dec
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
test
cmc
outsl
rol
xor
scas
mov
push
and
sbb
fildl
jmp
xchg
dec
xor
shll
je
pop
add
cmp
ds
sbb
aas
xor
jmp
xchg
flds
outsb
jne
lcall
push
ja
dec
test
lea
fsub
pop
lock
xchg
jl
iret
mov
pusha
push
call
aaa
push
cli
test
inc
and
push
jmp
push
jge
add
jecxz
arpl
arpl
xchg
lret
imul
pop
dec
sti
ret
stos
ds
cmpsb
sbb
movb
dec
fists
cld
lds
outsl
jmp
scas
cmp
and
cs
movb
push
mov
cli
fwait
mov
sti
out
lret
push
mov
imul
lret
add
mov
dec
mov
aad
sahf
xchg
loop
dec
enter
les
inc
dec
xchg
and
pop
pop
cs
push
pcmpgtd
push
dec
sbb
xchg
imul
stos
dec
push
addl
insl
pop
call
pusha
push
jecxz
pop
jl
cmpsl
sbb
fwait
arpl
xchg
jae
mov
lret
pusha
mov
stos
mov
pop
jge
push
lds
les
cs
sub
push
ds
mov
mov
push
mov
pop
stos
push
out
aam
dec
pushf
daa
add
fwait
in
int
push
adc
pusha
les
rolb
mov
and
out
jp
lret
xchg
loopne
test
outsb
sub
imul
mov
cmpsb
or
cmp
std
lods
and
mov
sti
and
subb
xchg
or
arpl
fs
cmp
out
dec
in
jnp
mov
pop
inc
arpl
jl
aad
add
push
or
stos
push
inc
mov
sub
rcl
cs
xchg
pop
push
sarb
fildll
int3
stos
scas
out
add
dec
clc
jge
push
push
cmpsl
cmove
ret
sub
mov
test
xor
filds
addr16
push
ret
cmp
rorb
jno
fcmovnb
sub
and
or
push
pushf
jle
cmp
pushf
add
dec
imul
mov
jecxz
add
popf
sub
sti
add
sub
ja
js
jae
or
dec
mov
filds
cmp
push
cmp
pusha
les
inc
pop
mov
jecxz
adcl
lock
dec
aad
pop
andb
andb
mov
lds
sbb
mov
mov
add
mov
movsb
ffreep
mulb
call
sub
inc
clc
and
loope
movsb
dec
mov
mov
mov
hlt
and
cmp
add
jnp
test
sti
jge
xchg
fnstcw
stos
sub
sub
push
inc
inc
fldcw
adcl
pop
fs
daa
pop
inc
sti
push
xor
cmc
clc
mov
movsb
pop
xchg
inc
iret
pop
jne
imull
xor
dec
fwait
icebp
je
mov
lret
shll
adc
test
jno
mov
and
cmp
xor
dec
push
int3
out
in
inc
xchg
push
ret
push
imul
jo
in
stos
push
lock
mov
pusha
decl
cmp
xor
mov
dec
fmull
mov
ds
daa
xchg
mov
jno
ljmpw
pop
pop
icebp
pop
add
in
or
mov
clc
cmpsl
inc
add
fistpll
popa
addl
push
push
lret
adc
pop
cmp
push
aam
orl
cmp
dec
xchg
lahf
cmpsb
inc
xchg
push
arpl
insl
cmp
movsw
sub
movl
cli
push
movsb
dec
dec
inc
addr16
xchg
cmp
push
jmp
dec
or
loope
lcall
inc
shl
cmp
and
icebp
jmp
in
ds
adc
sbbb
xchg
push
div
mov
lret
cmpsl
pop
cmp
pop
leave
shrb
cmp
dec
mov
lds
cmp
jmp
mov
pop
in
mov
ret
fbstp
cmp
xor
fadd
jns
imul
cmp
mov
mov
push
into
movsl
jmp
xchg
sub
movsl
rclb
sub
inc
stos
sbb
test
jmp
push
inc
push
mov
cli
shl
inc
aas
adc
mov
jnp
push
dec
popf
jnp
loop,pt
cs
test
or
mov
pop
bound
les
mov
cmpsl
xor
inc
ja
pop
fs
cmp
push
xchg
jnp
pop
sbb
imul
push
xorl
push
bound
cld
pop
jecxz
sub
js
cs
cli
pop
jecxz
cmpsl
outsb
or
xchg
inc
add
pop
dec
add
xchg
imul
imul
test
dec
jae
or
push
add
mov
push
cmp
int
inc
inc
mov
fisttpl
and
jmp
sti
or
fwait
push
xchg
pop
pop
cwtl
imul
shrb
ss
pop
fnstcw
jno
mov
cmpsl
sub
movsl
stos
or
push
sub
loopne
loope
mov
xchg
mov
jae
test
push
xor
int
sbb
push
ljmp
jge
sbb
xchg
into
mov
sub
in
sarb
sti
mov
sbb
aas
cmp
and
fwait
das
mov
mov
inc
int3
push
mov
inc
sub
mov
lds
subb
movups
mov
js
push
xchg
mov
les
pop
out
dec
pop
push
lahf
mov
shll
or
ja
mov
mov
inc
mov
jmp
lret
fldcw
dec
mov
jnp
pop
cmp
sti
shll
jge
jo
lock
cmp
cmp
mov
std
addr16
int
ret
mov
and
in
sarb
sbbl
ret
dec
mov
cmp
or
jae
arpl
cmp
adc
test
mov
lods
dec
cmp
jo
inc
xor
sub
testl
lret
andnps
mov
inc
push
fistps
out
mul
leave
divl
out
nop
adc
dec
cli
push
popa
and
and
lret
dec
inc
addr16
daa
add
and
pop
aad
repz
push
xor
push
pop
fcompl
cmpsl
dec
rclb
dec
xor
in
dec
fildl
add
mov
cmp
movsl
cmpb
push
scas
dec
adc
mov
sub
mov
mov
push
shr
pop
sbb
cs
fs
add
and
or
lret
dec
cmpsl
fildl
lret
inc
dec
popa
lds
and
add
daa
fs
ja
imul
dec
or
mov
push
sub
push
fwait
es
fisttpl
int3
sub
lret
outsl
push
push
push
push
lret
aad
cmp
jnp
push
push
sti
mov
call
xlat
mov
jmp
mov
mov
xchg
jae
mov
insl
lret
ret
inc
add
aam
dec
mov
std
fidivs
jmp
loopne
shll
addr16
dec
or
imul
mov
mov
mov
enter
push
adc
jmp
pop
mov
lret
in
add
inc
push
stos
je
arpl
hlt
mov
sub
cmpsl
subb
inc
fildll
xchg
dec
inc
jo
mov
aad
shrl
jae
mov
dec
jo
sar
add
repz
scas
rcll
das
lds
jecxz
std
or
imul
inc
pop
jg
aam
sub
mov
dec
pusha
and
mov
dec
push
test
mov
mov
clc
les
stos
notb
outsb
cs
dec
mov
enter
mov
stos
mov
mov
negb
dec
adc
pop
adc
cmp
mov
mov
xabort
jne
shlb
les
cmpsl
mov
or
push
cmp
clc
pop
test
pop
xchg
aaa
imul
ret
or
sti
pop
imul
fxch
in
stos
mov
inc
dec
sahf
mov
cmp
jg
cmc
or
pop
dec
sti
sti
or
sub
cmp
popa
push
gs
lcall
push
rolb
pushf
dec
in
sarb
clc
mov
lahf
cmp
hlt
outsl
mov
stos
rol
xchg
lret
jl
push
push
xlat
insb
mov
sub
jg
sbb
dec
and
inc
shrb
pop
adc
push
lds
les
aam
stos
jne
lds
dec
test
push
cmp
lods
push
xchg
pop
inc
push
fnsave
out
fistpll
clc
nop
imul
inc
cmp
xor
jg
mov
sahf
out
loope
stos
insl
dec
inc
imul
cmp
pop
dec
lret
mov
mov
sti
sub
arpl
aas
lret
adc
in
in
add
inc
scas
mov
test
adc
aad
dec
loop
inc
dec
xor
xchg
mov
pop
cmc
aas
mov
sarb
and
cmpsl
mov
inc
ret
pop
dec
inc
lahf
in
mov
js
fcomps
or
push
push
js
adc
mov
cmp
xchg
pop
sbb
sbbl
outsl
shlb
sub
subb
inc
add
dec
adc
out
imul
cld
ljmp
je
push
sbbl
gs
decl
nop
int
sub
mov
cltd
mov
lret
lcall
sahf
ds
mov
add
mov
lds
jge
test
mov
mov
push
idiv
inc
mov
mov
sub
cmpxchg
mov
mov
add
pusha
pop
jo
mov
dec
pop
mov
push
inc
in
inc
aam
fmulp
dec
inc
shrl
sbb
ds
sub
jecxz
add
ss
adc
mov
cmpl
mov
or
jne
xchg
push
sbb
out
popl
gs
bound
push
add
in
movsl
push
jecxz
fld
inc
pop
mov
push
push
cmp
cmp
push
or
iret
arpl
pop
ret
jecxz
pop
test
pop
mov
dec
lock
push
adc
shrb
sti
mov
mov
stos
mov
xchg
sbb
loop
jns
xor
addr16
adc
mov
std
cwtl
mov
in
lret
outsl
ret
mov
ret
inc
mov
popa
hlt
mov
sbb
xchg
test
xchg
sub
jg
mov
nop
bound
jmp
ret
mov
sub
mov
or
test
movsl
ret
dec
mov
mov
xor
js
outsb
imul
mov
pop
push
jb
xchg
addr16
idivl
mov
ljmp
andb
pop
jno
cmp
das
js
hlt
sub
ja
sbb
or
mov
push
xchg
pop
stos
test
imul
mov
das
fstpl
les
sbb
mov
pop
es
inc
aas
mov
jo
adc
sbbb
stos
xchg
push
mov
xchg
push
imul
ret
cmp
sbb
sub
insb
stos
xchg
inc
pop
mov
cmp
lods
pop
mov
mov
cmp
push
mov
mov
mov
hlt
mov
sub
pop
adc
test
jg
arpl
jecxz
xchg
sbb
mov
mov
or
inc
cli
push
inc
jle
push
repz
or
or
nop
pop
fsincos
js
sub
cltd
pop
push
rorb
nop
lahf
cli
gs
ret
jmp
movsb
sub
or
stos
aaa
popf
stos
xor
sub
xor
inc
push
adc
inc
pop
adc
xor
out
insb
popa
out
sub
ja
mov
pop
rorl
fsub
lds
rcrl
sub
clc
push
push
cmc
adcl
push
lea
mov
nop
fwait
call
cmp
outsl
cmpsb
fs
sub
sub
mov
adc
sub
mov
mov
pop
or
ljmp
inc
ret
into
cwtl
add
outsl
jecxz
or
fdivs
test
in
inc
sti
xchg
dec
xchg
mov
cmpb
inc
sub
add
inc
jle
lea
push
ret
sarl
ret
mov
xchg
push
fstpt
ss
and
xor
mov
mov
jnp
xor
pushw
std
pop
subl
push
shrb
test
popa
sbb
pop
mov
mov
mov
dec
or
cltd
xor
lahf
push
std
mov
push
pop
imul
mov
imul
dec
push
sti
cmpsl
push
pop
jne
fdivrs
or
push
cli
mov
bound
push
jno
pusha
add
xorl
inc
jno
mov
mov
dec
fisttpll
mov
mov
cmp
loope
stos
js
pop
cmp
xchg
ret
push
addr16
mov
sub
push
cmp
imul
shr
stos
rol
addb
ljmp
push
add
push
or
dec
sahf
mov
call
fcmovne
fistpll
sti
mov
sahf
push
sub
jmp
push
sub
in
outsl
xchg
mov
test
mov
push
dec
pusha
stos
lds
test
mov
aas
aad
push
aas
dec
cli
icebp
adc
cmp
xlat
lret
inc
xor
jecxz
ds
cli
inc
stos
jge
imul
pusha
jb
je
push
mov
imul
mov
aas
inc
pushl
jns
and
aad
mov
jno
cwtl
popa
push
lret
dec
jbe
push
popa
sbb
sub
mov
rcrl
mov
push
adcl
cltd
sbb
mov
bound
push
inc
jle
fnstsw
inc
popa
mov
mov
clc
clc
dec
lret
jnp
jno
push
pop
pop
inc
popa
lds
lock
or
pusha
mov
dec
lret
jo
lods
mov
mov
out
xchg
mov
outsl
mov
jno
movsl
mov
ja
in
cli
mov
loopne
inc
mov
lods
cli
lods
xor
or
sti
into
jnp
orl
mov
rorl
pop
cmp
xchg
call
xchg
add
inc
jns
lret
inc
push
mov
pop
push
outsl
lods
adc
cmc
sbb
mov
loopne
lret
mov
out
sarb
dec
jo
test
pushf
pop
cmp
pop
dec
sbb
mov
sub
sub
dec
stos
jno
push
enter
idivl
ds
inc
in
adc
mov
fisttpll
mov
xor
out
push
in
arpl
adc
xchg
mov
call
fwait
andl
dec
mov
pop
lea
addr16
movsl
shlb
add
icebp
pop
imul
and
call
mov
sub
add
push
or
sbb
xchg
cmp
sub
outsl
mov
cmp
shll
stos
inc
ljmp
stos
add
push
add
inc
in
push
pop
adc
insl
sti
inc
jge
dec
lods
jmp
pop
mov
insl
cmp
cmp
xchg
pop
ret
jne
lret
cmp
ret
sbb
push
and
sbb
dec
sbb
cmp
dec
int
xor
push
cmpsl
sub
push
jge
movsb
jge
sti
add
arpl
outsl
or
dec
cmpsb
fdivr
pop
add
lock
mov
cwtl
rorl
out
add
jmp
sahf
leave
lret
in
test
xchg
dec
cmp
cmp
inc
test
push
repz
mov
icebp
xchg
mov
int
ljmp
cmp
inc
stc
mov
xchg
pusha
sub
rcl
cltd
adc
lock
sbb
jnp
push
cwtl
dec
add
scas
ret
mov
bound
les
sub
sarl
jmp
inc
pop
ret
push
jno
clc
jp
mov
lods
sbb
mov
cltd
cmp
jg
mov
add
xchg
cmpsl
lea
aas
cmpsl
mov
pop
mov
inc
xchg
outsb
pop
mov
mov
arpl
int
adc
leave
test
cmp
leave
outsl
inc
lods
arpl
mov
mov
daa
cmp
fstpt
and
shll
insb
fdivl
add
js
js
int3
ss
add
fldenv
bound
in
mov
inc
or
addr16
dec
push
stos
add
inc
call
xlat
imul
lret
out
or
addl
arpl
loopne
mov
dec
fstpt
popf
xchg
shlb
push
and
enter
sbb
clc
ds
lods
stc
mov
pop
sbb
sub
and
xchg
imulb
xchg
cmp
aas
lcall
sbb
test
jecxz
bnd
mov
cmp
pushw
dec
std
push
jmp
fildll
dec
mov
rcrb
xchg
push
cmpsb
add
fdivs
mov
gs
xor
ret
lds
and
mov
hlt
ja
sub
lods
leave
stos
mov
jl
cmpsb
ds
call
inc
cmp
push
fmull
cmc
out
jmp
fld
dec
cmp
idivl
sarb
enter
inc
or
mov
daa
push
push
mov
popf
xorb
cli
shrb
rclb
sti
cmp
subl
add
sub
bound
ret
mov
push
add
test
pop
pop
insb
jmp
pop
mov
cmp
mov
mov
mov
ret
sti
mov
lret
adc
out
ret
push
xor
dec
mov
filds
mov
xchg
sahf
push
stc
dec
dec
cmp
sub
subl
aad
aas
cld
out
aas
mov
aas
das
push
inc
sbb
aad
dec
and
inc
rcll
dec
jecxz
pop
popa
sub
mov
push
fistl
movsl
jmp
jnp
rorw
lret
pop
loope
or
out
andb
aaa
xlat
pop
stos
mov
sarl
mov
cmp
lret
das
aas
jecxz
add
sub
mov
inc
arpl
fcompl
sub
pop
push
sub
loope
cli
fsubrl
sbb
push
subl
in
xchg
sub
lahf
xor
cmp
enter
inc
mov
data16
lock
cmpsl
inc
cmovle
and
pop
call
cs
mov
push
jl
iret
pusha
test
jecxz
lea
filds
inc
mov
insb
xchg
mov
sub
ja
rorl
mov
sti
les
jns
pusha
mov
mov
cmp
or
je
sahf
push
lea
pop
jne
frstor
mov
push
xor
or
pop
aad
adc
arpl
mov
and
pushl
mov
push
int
jns
and
cmp
sbb
sbb
out
andps
cmc
sub
pusha
push
dec
outsl
ret
adc
add
and
in
je
jbe
inc
jnp
xchg
popa
clc
jg
inc
push
fcoms
idivb
mov
push
arpl
mov
js
aas
jg
test
test
popf
fisttpl
popa
sub
not
cmpsb
pop
lcall
xchg
ljmp
xor
pop
push
das
xor
or
repnz
cmp
xchg
rorl
lds
push
in
rorb
or
imul
dec
xchg
add
dec
pop
iret
filds
cli
xchg
lahf
cmp
inc
lret
sub
push
jb
mov
xor
add
push
mov
jp
xor
or
jnp
mov
adc
dec
lods
sahf
stos
into
mov
enter
jnp
push
mov
sub
sti
xor
lods
sarl
jnp
and
mov
jge
fstpt
inc
pop
jecxz
jnp
push
add
sti
cmp
ds
pusha
loopne
adc
sub
shll
andl
ret
cmpsl
pop
xchg
dec
loopne
sub
sti
adc
cmp
jecxz
arpl
test
pop
mov
cli
xor
popa
xchg
ds
ret
mov
xor
cmc
xor
stos
test
mov
pop
dec
sub
jnp
repnz
cwtl
leave
push
dec
lods
jmp
scas
cmp
mov
cltd
jo
imul
js
rorb
sub
jne
add
pop
pusha
stc
push
push
push
push
mov
cmpsb
lock
sub
and
imul
lods
call
popf
clc
dec
fdivs
loope
cmp
mov
push
loopne
sub
pop
dec
pushf
inc
rcrl
mov
ret
das
jns
movsl
sbb
lret
mov
dec
pop
xorb
test
adc
in
aad
cmp
sub
call
pusha
jmp
xor
stos
jecxz
push
call
cmp
insl
inc
dec
sar
cs
movsb
dec
mov
sub
fucom
push
jge
fs
in
decl
mov
xor
fstpl
cmp
mov
sbb
xor
mov
xchg
aam
xor
mov
mov
push
ja
add
lock
push
inc
xor
dec
clc
push
xchg
mov
dec
push
xor
stos
faddp
or
clc
mov
test
in
sub
jae
fwait
cwtl
in
cmpsl
iret
gs
pop
pop
push
add
jo
pop
nop
jne
sub
pop
rorb
inc
adc
xor
add
enter
pop
or
in
call
jge
push
shlb
shll
jne
cmp
test
pop
imul
or
lret
shlb
pushf
stos
mov
subl
fstpl
pop
insl
fnstenv
aaa
xchg
sub
es
movb
clc
es
mov
ss
icebp
mov
test
rcl
jb
dec
xchg
dec
sbb
add
outsl
repz
imul
stos
imul
aaa
fnstenv
int3
das
or
in
mov
cli
sub
xlat
scas
cwtl
mov
xlat
mov
jae
bts
push
dec
mov
sub
and
lret
sub
aad
dec
xchg
pop
and
stos
in
add
xor
scas
dec
cmpsl
xor
std
mov
add
int
sahf
push
outsl
jae
lahf
xchg
add
push
cs
fildl
push
lret
push
push
std
xchg
ret
negl
add
mov
xlat
dec
jecxz
push
sti
mov
sar
mov
push
fcmovnu
test
mov
aaa
adc
mov
imul
clc
mov
sbb
push
inc
fcmovb
add
cmp
add
sbb
pop
adc
push
xchg
sbb
push
cmp
push
ret
push
flds
rorb
mov
pop
movsl
popa
mov
cmp
ret
inc
sbb
cmp
dec
and
arpl
or
cmp
inc
or
mov
push
mov
enter
jmp
stos
iret
mov
repz
movsb
pop
sbb
cmp
xchg
push
test
push
dec
ret
int
mov
sbb
aaa
add
std
inc
jmp
popf
sub
data16
or
int
sub
inc
dec
pushf
dec
arpl
xor
enter
outsl
sub
ds
mov
inc
cmp
mov
xlat
rcl
filds
mov
inc
shrb
clflush
adc
push
loope
pop
cmp
dec
repnz
pop
das
enter
js
ret
gs
mov
mull
xor
int
push
stos
pop
push
ss
fadd
xchg
ljmp
push
xor
rcrl
leave
aam
sbb
sbb
mov
inc
ljmp
xor
clc
fiaddl
jmp
xchg
pop
mov
fimull
mov
stos
ret
stos
cs
cld
icebp
std
ret
les
dec
filds
iret
shlb
inc
insl
pop
jecxz
jne
push
das
and
arpl
add
mov
jb
ds
js
mov
insl
aam
ljmp
mov
jae
mov
divb
mov
mov
mov
push
add
nop
mov
lcall
jmp
outsb
add
cmp
dec
clc
popf
push
push
fs
jnp
adc
pop
pop
je
mov
sti
cwtl
les
test
lock
xchg
dec
jg
sub
das
sbb
cmp
dec
cmp
ljmp
sub
dec
mov
les
rcrb
shll
jmp
cmp
push
insl
fwait
cld
cmpsl
mov
cmpb
out
jmp
dec
inc
daa
or
shlb
dec
dec
xchg
jp
imul
in
aas
dec
jae
imul
movsb
or
xchg
and
mov
dec
cmp
xchg
mov
ss
jns
stos
sub
in
cli
popf
cmc
pop
outsl
add
add
xchg
or
jg
sbb
sar
adc
mov
add
rcll
push
pop
rcll
out
ss
popa
pop
adc
sub
cmp
push
lcall
mov
jnp
mov
pop
push
mov
aad
clc
insb
shrb
xchg
inc
roll
push
stos
lds
sub
cld
inc
or
dec
xor
mov
sub
dec
sub
add
aad
popf
jno
mov
adc
inc
pop
jg
xorl
out
xchg
jnp
insb
mov
mov
dec
aas
and
push
lods
rcrl
mov
xchg
lret
or
fs
sub
cwtl
mov
js
mov
imul
ret
iret
jecxz
add
leave
inc
lahf
stc
repz
mov
push
cmp
test
mov
scas
pushf
inc
jnp
push
push
pop
pop
addr16
imul
sbb
sub
hlt
sub
dec
lods
or
mov
push
arpl
sub
pop
cmp
mov
lret
mov
mov
cmp
xlat
push
lcall
mov
imul
mov
fistps
rolb
sbb
dec
les
jmp
decb
js
icebp
inc
inc
int
ds
insl
lds
mov
mov
sti
ret
iret
out
pop
mov
pop
mov
stos
clc
std
dec
xchg
xchg
shrl
cmp
iret
inc
mov
dec
bound
arpl
test
xor
mov
scas
sub
and
lea
push
lret
jecxz
je
jae
mov
scas
leave
push
loope
sbb
inc
mov
fwait
cmp
add
pop
test
inc
addr16
jg
cmp
pop
in
pop
pop
and
mov
dec
enter
fwait
cmp
inc
mov
arpl
enter
ret
dec
pop
dec
jae
lahf
mov
push
pop
push
lahf
aad
cmp
cmp
fs
mov
ljmp
xor
stos
les
rol
mov
inc
pop
les
lds
cmp
dec
cmp
cwtl
xor
or
jmp
inc
rsm
xor
dec
loopne
xchg
ret
andl
push
loop
mov
sti
in
aas
fsubl
jecxz
sbb
nop
dec
push
lds
mov
clc
ljmp
xchg
daa
jg
lret
or
dec
daa
ret
fwait
aad
jns
adc
xor
cmp
addr16
pop
pop
mov
fwait
rol
andl
mov
int
and
xor
mov
adcl
mov
ret
pusha
add
out
pop
cmp
loopne
stos
out
popf
test
fs
mov
inc
dec
push
insl
arpl
adc
push
out
xchg
popa
push
lret
pop
push
mov
xor
jp
aad
hlt
xchg
pop
je
cmpsb
dec
sti
subb
jae
mov
mov
pop
xor
adc
pop
lds
push
ror
inc
orps
popf
xchg
popaw
out
adc
push
loope
mov
std
ror
xor
inc
cmp
and
sub
ss
fcoml
pop
cmc
jmp
inc
stos
or
in
push
push
sahf
pop
add
xor
xchg
adc
jns,pn
in
popa
sbb
push
imul
int
enter
push
cmpsl
pop
and
push
mov
arpl
cmpsl
pop
aaa
repz
dec
outsb
and
jbe
lret
mov
push
xchg
cmp
aam
loope
xchg
std
push
es
cmpsl
sub
cmp
pushl
je
gs
popf
fadds
jne
inc
mov
or
lea
mov
and
inc
loopne
cmp
les
and
enter
pop
inc
sti
ja
mov
cmp
aam
push
in
mov
aaa
enter
xor
cmp
mov
int3
shrb
sub
dec
cmpl
pop
add
sub
sbb
add
mov
stc
xchg
sarb
jg
andl
aam
jne
mov
fs
mov
rolb
sti
inc
sarb
dec
rcll
aam
jg
insl
repnz
fsubl
mov
inc
int3
test
int
pop
inc
xchg
push
lret
jmp
mov
loopne
cmpsl
push
or
ret
xor
outsl
cmp
push
add
movsl
addr16
pushf
sub
fxch
jns
pop
jns
cmp
les
cwtl
push
push
inc
popa
or
movsl
mov
push
xchg
pop
jns
pop
cmp
or
dec
cmpsl
sbb
adc
enter
sub
je
shll
jnp
add
sbb
push
fmuls
je
out
mov
andl
push
push
sbb
cli
jb
or
pop
and
mov
shll
pop
and
pushf
pop
lcall
jb
rcll
shl
test
push
xchg
mov
cli
cs
dec
jns
add
push
insl
nop
pop
push
sub
sbb
pop
js
gs
ret
mov
cmp
push
add
aad
sub
imul
add
inc
mov
mov
lret
mov
jg
lds
inc
pop
sbb
lds
cli
notb
lret
mov
pop
aad
lcall
or
les
pushf
xchg
out
or
cltd
sti
ret
fld1
jg
je
pop
mov
push
adc
lret
pop
and
idivl
xor
dec
or
stos
imul
lret
fstps
sti
and
popa
mov
pop
sarl
nop
sub
sub
aam
imul
dec
repz
mov
sarl
aad
sub
jecxz
lret
into
test
je
or
pop
push
xchg
sti
arpl
inc
dec
jecxz
xor
xlat
jae
mov
cmp
mov
js
out
mov
mov
js
imul
add
fidivs
adc
cmp
fsubr
jno
leave
add
pop
stos
in
fsubl
enter
cmp
clc
int
popa
fildll
mov
xor
cltd
pushf
push
jae
cmp
jo
fs
jmp
mov
dec
loopne
mov
fdivr
pop
xchg
xchg
mov
adcb
mov
xlat
bsf
ds
push
pop
xlat
movl
cs
ds
popf
sub
mov
inc
mov
loope
sbb
ljmp
inc
out
clc
sti
push
mov
int
nop
pop
in
ljmp
sbb
lods
push
sarl
mov
imul
lds
mov
inc
adc
stos
mov
xor
cmpsb
jo
aaa
mov
nop
test
cli
mov
mov
mov
fs
stos
pop
cmp
out
xlat
and
or
push
add
nop
xor
mov
in
insl
mov
add
xchg
lds
iret
jmp
int3
insl
ljmp
xor
mov
xchg
jne
mov
or
or
and
jmp
bound
cli
cwtl
fidivs
mov
and
cmpsl
fstpl
push
jae
adc
pop
mov
lock
mov
jo
adc
test
xor
adc
sub
xor
xchg
and
push
cli
pop
inc
cwtl
add
into
stos
xlat
jg
lahf
jbe
xchg
pop
call
fwait
xchg
or
ljmp
sbb
jecxz
push
sti
mov
adc
cwtl
mov
xchg
das
lret
jnp
test
inc
iret
jo
mov
adc
push
lret
dec
push
inc
or
sub
test
sbb
fisubl
enter
jecxz
inc
push
ret
jnp
insl
les
loope
xchg
out
or
xor
inc
int3
push
fsubrs
ds
xor
jns
adc
mov
jo
rolb
imul
in
jle
sub
roll
aad
xlat
pop
push
jne
rclb
outsl
iret
nop
test
jp,pt
movl
pop
pop
dec
loopne
add
fldenv
sbb
jo
mov
fstpt
je
jns
testb
jecxz
sub
cwtl
scas
mov
sbb
addb
add
fdivl
xor
sbb
insb
push
sub
inc
lret
sbb
push
loope
jne,pn
sbb
xlat
arpl
inc
ret
shrb
into
mov
inc
xchg
fdiv
out
mov
jne
jecxz
mov
ret
out
js
mov
clc
sub
push
mov
lret
push
test
sbb
sar
push
add
mov
adc
add
out
push
repz
cmp
push
lock
inc
ret
lods
pop
inc
ret
adc
mov
lret
inc
int3
mov
dec
aaa
cli
ret
loopne
cwtl
loope
jne
cmp
fwait
push
dec
cmp
jne
rorb
mov
outsb
push
lods
icebp
ja
rol
hlt
shl
data16
lds
xchg
jnp
cmp
push
jae
mov
pop
sbb
popf
arpl
push
mov
arpl
jnp
add
inc
sti
call
pop
or
fmull
filds
or
push
mov
leave
inc
sahf
sbb
cmp
clc
scas
mov
leave
push
add
xchg
popf
lahf
xchg
xor
sbb
push
pop
cmp
xlat
mov
jnp
sbb
dec
xor
add
sub
icebp
push
ficomps
or
and
or
mov
clc
cmp
mov
sbb
sbb
pop
add
fiaddl
lret
ja
enter
mov
mov
jne
rolb
xor
inc
loope
push
sti
push
push
stos
cs
pushf
sbb
mulb
sub
mov
pop
mov
js
imul
std
inc
and
lods
fs
and
ret
add
sub
mov
loop
mov
push
adc
movl
push
xor
inc
addr16
jns
dec
jo
xor
inc
ljmp
pop
mov
andl
aad
push
inc
mov
out
rolb
lahf
and
jae
push
mov
in
test
add
imul
das
xorl
nop
mov
enter
inc
inc
sar
mov
sbb
inc
arpl
ror
pop
in
add
insb
ret
push
pop
jp
loop
xor
clc
and
stos
popa
pop
add
cmp
sub
cmp
dec
les
daa
out
dec
adc
lds
jno
cmp
jns
jno
sbb
or
inc
clc
mov
add
mov
das
cmp
sub
clc
jne
sbb
add
ret
test
push
jnp
add
pusha
xchg
jg
add
popa
incl
inc
push
aam
pusha
mov
and
jnp
in
rcl
movsb
stc
iret
cmp
jae
clc
inc
in
dec
iret
add
les
nop
jmp
movsl
xchg
jmp
and
xchg
and
out
movsb
xor
mov
hlt
fiadds
rorl
mov
inc
mov
add
jnp
adcb
call
pop
xchg
out
addr16
pop
ret
fs
mov
cs
les
ja
subb
cmp
lret
in
mov
cmp
inc
push
test
xchg
scas
add
jne
mov
adc
add
cli
push
xchg
rcrl
mov
data16
rclb
in
je
sti
pop
push
loop
outsl
and
lret
loope,pt
xchg
insb
cmp
xchg
cmp
xchg
sahf
lock
jno
sub
push
or
cmp
dec
inc
push
fcoms
xchg
or
ds
leave
inc
into
jecxz
ja
ljmp
and
imul
enter
cmpsb
or
ljmp
pop
cmp
dec
ret
dec
mov
push
insb
roll
daa
adc
lret
imul
xlat
mov
cli
shlb
sub
arpl
jecxz
iret
sbb
sbb
xchg
adc
cmp
jae
in
push
xchg
fbld
xor
mov
add
lret
mov
pop
push
inc
mov
xchg
dec
lahf
pop
sti
repnz
dec
cwtd
add
mov
cmc
movsb
inc
in
out
dec
adc
mov
icebp
fnstsw
pop
fstpl
push
push
jg
mov
add
and
imul
and
pop
xchg
sub
insb
lea
cmp
inc
mov
mov
or
mov
mov
adc
lret
lahf
iret
movsb
ljmp
jne
mov
pop
movsl
cmp
stos
imul
push
inc
cli
pop
les
push
cmc
cli
push
imul
lcall
fdivrl
arpl
int
les
arpl
loopne
adc
or
cli
nop
int
fwait
mov
scas
cmp
inc
add
fsubrs
movsl
mov
push
push
fists
out
mov
cli
rolb
and
inc
cwtl
and
dec
hlt
xorl
pop
adc
pop
mov
data16
mov
je
aam
dec
xor
test
arpl
stos
pusha
gs
push
xchg
xchg
and
adc
xchg
test
clc
into
ds
insb
pusha
cmp
loope
add
sbb
stc
cmpsl
mov
icebp
and
inc
jbe
push
enter
pop
clc
jp
mov
into
sahf
cmp
cmp
in
lret
push
clc
adc
push
cmp
cli
test
sbb
adc
je
push
outsb
js
popa
sbb
ret
clc
pop
mov
jns
push
pop
mov
lods
cli
xchg
loope
mov
sub
dec
inc
shlb
pop
in
call
push
inc
scas
sub
push
dec
inc
imul
popf
push
dec
xor
ret
sti
mov
fs
mov
fwait
aad
imul
jb
push
or
pusha
sub
dec
shrb
cs
pop
dec
arpl
mull
mov
movsl
bound
jae
out
test
sbb
push
addr16
mov
adc
dec
sbb
aad
lock
dec
fwait
xlat
js
pop
fcoms
addr16
ret
inc
aas
mov
jno
and
sbb
addr16
aaa
add
test
orl
mov
icebp
mov
add
js
scas
outsb
inc
ret
push
das
sbb
arpl
into
popa
cmp
pop
rcl
pop
mov
ds
je
imul
fstpt
mov
arpl
clc
push
ret
dec
sahf
sti
in
or
lret
or
xchg
sti
pop
inc
cmp
arpl
pop
addr16
cmp
mov
push
out
dec
lret
ds
fdivp
mov
stos
iret
mov
mov
mov
loope
inc
and
fs
daa
jno
adc
push
outsl
jno
inc
das
cld
out
push
arpl
adc
shrb
xchg
pusha
rorb
popa
cwtl
add
xor
jecxz
in
ljmp
pop
mov
inc
xchg
lret
cwtl
push
dec
jns
addb
enter
mov
sbb
stos
sti
dec
push
sub
mov
add
loopne
jmp
sbb
fidivrl
or
in
dec
lods
cltd
hlt
jmp
sub
cmp
movb
es
push
cmp
jnp
sti
push
lds
dec
inc
push
mov
or
sti
fiadds
stc
test
dec
push
in
fildll
push
cmp
loop
cli
xchg
js
sbb
jle
sub
cli
mov
test
in
dec
je
cld
pop
cld
xor
jae
sbb
jo
sbb
xor
mov
pop
enter
call
lret
ds
orb
scas
sbb
xlat
mov
jnp
push
jecxz
in
das
dec
sub
jge
cli
popf
dec
ss
cmp
sbb
or
mov
rol
sti
jno
push
outsb
fcmovb
inc
aas
das
push
cltd
pop
pop
inc
mov
mov
cmc
hlt
mov
aaa
stos
sub
sub
xor
dec
pushf
mov
jle
sbb
les
sub
clc
rolb
pop
dec
lret
push
inc
adc
repz
cli
jnp
dec
daa
sbb
fdivr
xchg
in
clc
jmp
hlt
les
sti
bound
in
sti
push
cmpsl
jp
and
push
mov
cmp
fmul
xor
jp
jmp
dec
dec
mov
xlat
jmp
fwait
jg
negb
xchg
push
fdivl
pop
dec
mov
mov
sub
stos
orb
cmpl
xchg
cld
mov
cmp
sbb
repnz
data16
aad
imul
cli
jl
mov
test
fdivs
les
push
jp
rorb
iret
bound
lds
out
dec
jle
rcl
inc
xor
dec
mov
jo
xchg
or
out
dec
mov
sbb
daa
jnp
ret
pop
into
cmp
lds
bound
arpl
push
or
sub
push
dec
fcmovnu
sbb
adc
xorb
addr16
xor
pop
mov
ret
add
fistpll
push
lret
or
mov
psrld
or
sbb
sti
xor
adc
std
or
outsl
mov
pop
ljmp
push
js
sub
push
clc
add
nop
jecxz
test
push
dec
nop
es
dec
sarl
fmull
sbb
clc
inc
mov
bound
fidivs
push
mov
and
loopne
ljmp
jecxz
mov
shl
inc
jb
lret
jne
or
sbb
and
xor
push
cmp
push
sti
test
mov
pop
fsubl
mov
mov
dec
ret
je
jns
in
mov
sub
cmp
cmp
les
and
repz
mov
cmp
out
in
dec
xor
pop
mov
das
movsl
pop
mov
adc
test
js
dec
je
fldcw
into
sub
and
out
xor
shrb
ja
arpl
pop
aad
cmp
push
jmp
cmp
aad
iret
inc
mov
dec
jns
clc
lret
adc
leave
push
add
mov
fdivr
or
jbe
inc
testl
or
test
lods
adcl
pop
ret
push
out
pop
ret
sbb
in
scas
addr16
jp
inc
clc
jae
xor
lcall
inc
sub
cs
mov
test
lahf
mov
or
sub
std
flds
pop
sti
xlat
mov
push
clc
repnz
lret
stos
inc
jae
cwtl
mov
fistpll
inc
scas
or
out
dec
cmp
call
xchg
das
mov
lods
push
jmp
xor
inc
sbb
xchg
mov
js
pop
clc
scas
cmpsl
sub
push
adc
dec
fldcw
scas
pop
push
adc
xchg
adc
cmpsb
cmp
push
mov
push
in
push
out
mov
xchg
loopne
jno
pcmpeqd
and
es
movsb
mov
pop
xchg
shll
lret
sub
sbb
jg
mov
push
call
fwait
stos
imul
lret
mov
mov
stc
imul
cmp
cmp
nop
xor
fmul
mov
jne
lahf
xchg
unpcklps
pop
add
jnp
dec
pop
lret
repz
cmpb
dec
cli
add
mov
cmp
cmp
fistps
cmpsb
cmp
cmp
pop
clc
lea
mov
enter
inc
dec
dec
movsb
mov
sub
cmp
test
or
pop
out
sbb
inc
mov
adc
scas
sti
pop
or
mov
ret
mov
mov
mov
sub
pop
dec
inc
or
pop
lods
mov
and
lock
cmp
or
dec
pop
imul
ds
fsts
or
cmp
inc
or
rorb
cltd
ljmp
scas
mov
jb
xchg
cmc
iret
ficompl
mov
pop
dec
cmp
clc
outsb
mov
jle
imul
fdivr
pop
adc
ds
out
sub
lcall
push
push
pop
popa
pop
or
pop
outsb
jmp
call
out
inc
icebp
sub
hlt
mov
sbb
lcall
clc
mov
jg,pt
pop
mov
ds
rclb
fistps
jb
test
movsl
outsl
pusha
mov
into
mov
add
rclb
mov
inc
inc
lds
nop
popf
xor
dec
xor
cmp
xor
nop
in
mov
in
jle
jecxz
out
fsubrs
dec
cmpsb
sub
out
adc
dec
mov
xchg
mov
pushf
mov
jecxz
outsl
cmc
mov
jbe
mov
xlat
ficoms
xlat
in
xchg
mov
addr16
testl
fisttpll
mov
das
sarl
into
lret
sub
in
call
cmp
sub
push
iret
push
lahf
mov
xor
mov
pusha
fisubrs
push
add
cltd
jecxz
xlat
or
adc
mov
sub
ret
repnz
icebp
iret
pop
sti
cmpl
outsl
mov
int3
dec
inc
jns
add
xchg
scas
inc
jnp
pusha
inc
ljmp
inc
lods
xchg
cmp
mov
mov
sub
mov
dec
mov
js
ja
rcl
in
add
mov
mov
sahf
rcr
enter
and
or
xchg
cmp
and
rcrb
das
and
sbb
shrl
jnp
fisttps
adc
lea
inc
aad
dec
jecxz
aas
inc
jmp
adcb
mov
addr16
into
lret
ja
clc
fs
mov
int
add
or
mov
dec
ret
lahf
dec
sar
pop
jb
mov
mov
cmp
cmp
mov
je
cmp
pushf
out
clc
cld
mov
roll
dec
push
inc
sub
pop
mov
sub
jns
pop
fcmovu
mov
sti
and
pop
dec
clc
dec
inc
imul
in
add
inc
xchg
pop
lahf
add
cmp
mov
jge
shll
mov
lret
lds
ffreep
mov
pop
push
jnp
scas
mov
sbb
dec
xchg
dec
aaa
sti
pop
lcall
inc
xchg
sub
mov
clc
iret
cwtl
add
dec
pop
or
in
call
insl
push
mov
or
mov
popa
mov
sbb
out
mov
fstl
imul
xchg
cwtl
lea
jbe
lret
aas
in
xor
int3
lahf
movsl
xorl
cmpl
rorb
in
arpl
fpatan
roll
cmp
mov
ljmp
ret
cltd
les
mov
jg
pushl
fdivrs
push
ss
aas
shrl
popf
cltd
add
mov
sub
test
cmp
outsb
in
push
out
push
outsl
pushf
sub
shll
aam
pusha
sub
mov
pop
clc
cmp
cmc
cmpl
frstor
js
imulb
xchg
daa
out
pop
adc
xor
in
sub
cs
into
mov
lds
jmp
fs
cmpsb
sub
outsb
sub
out
imul
in
icebp
or
test
cmp
aaa
jmp
fistps
lret
fs
or
aam
sub
sbb
dec
aad
sub
adc
xchg
or
push
mov
push
aas
mov
mov
inc
sarl
test
jmp
inc
jns
jge
push
push
arpl
aam
lcall
in
pop
xor
cmp
aad
popf
int
xchg
int3
sbbl
shrl
mov
cmc
mov
out
push
or
xchg
add
filds
push
movsl
test
popf
fwait
xor
mov
xor
sub
sbb
jmp
rorl
fidivl
cmc
fwait
sub
push
sub
scas
xchg
xchg
ficoms
lret
inc
out
cmp
add
out
cmpsb
enter
dec
les
rolb
push
mov
push
out
sbb
dec
enter
push
pusha
into
out
nop
lods
mov
cmp
xor
jo
jmp
jno
jp
xchg
int3
stos
and
inc
test
shrb
addl
push
imul
mov
movl
adc
sub
xor
ret
jp
addr16
ja
ror
mov
mov
out
pop
mov
adc
les
pop
pop
ja
or
cli
pop
dec
fists
jnp
out
clc
cwtl
out
sahf
push
jp
xchg
imul
pop
adc
mov
fcmove
out
dec
sub
mov
push
push
cs
push
inc
push
sbb
sbb
hlt
test
xchg
inc
mov
mov
mov
cmp
xchg
iret
out
lret
cmp
push
les
insb
inc
jg
push
sub
add
mov
addl
mov
nop
and
icebp
insb
sub
add
xchg
cmp
fcmovnbe
and
and
insl
xor
inc
xor
dec
jmp
inc
jae
push
data16
jae
aaa
lret
ds
fisttpll
in
xchg
fistps
pusha
xchg
leave
add
push
push
stos
sti
and
mov
push
xor
cs
lret
push
add
mov
sbb
or
sbb
stos
sub
insl
inc
pop
js
data16
push
fwait
out
jae
jecxz
aaa
and
mov
xchg
mov
add
push
sarb
push
xchg
iret
jg
jmp
clc
addr16
cmpsl
sbb
mov
mov
popa
scas
icebp
pop
hlt
sahf
dec
test
add
fadds
sub
scas
xchg
lahf
lret
iret
aad
rclb
insl
clc
lods
lock
out
inc
sub
mov
in
inc
sub
inc
out
inc
push
sub
push
enter
das
enter
jnp
outsl
aad
inc
test
dec
fstpt
dec
xchg
pop
js
aaa
mov
cmp
mov
and
lahf
mov
pop
mov
mov
sar
outsl
lret
inc
mov
xchg
dec
sarl
or
mov
and
lret
stos
cld
push
mov
push
clc
iret
xor
add
sti
and
xor
pop
mov
push
mov
dec
inc
sti
stc
inc
jge
mov
fs
sti
and
inc
adcl
loope
enter
frstor
clc
lret
sub
imul
movsb
jbe
sbb
dec
mov
pop
lea
xor
mov
mov
mov
ja
mov
push
add
rcll
pop
sti
imul
lret
test
cmpsl
fsubl
dec
enter
mov
dec
cmp
mov
lret
jnp
mov
jge
jnp
fs
shlb
adc
stos
cmp
and
xor
out
mov
dec
dec
sbb
dec
inc
push
arpl
sub
inc
pop
add
andb
jp
js
cmpsl
loope
xchg
mov
ja
cmp
jne
sahf
dec
imul
xchg
fistps
insl
lds
xor
sarb
in
jo
sbb
xorb
mov
jno
cli
xor
mov
sub
clc
in
inc
ret
and
pop
sbb
dec
or
mov
aam
mov
aad
frstor
imul
loope
push
jnp
outsl
xor
mov
iret
lahf
test
adc
mov
xlat
rclb
mov
push
cwtl
pop
push
hlt
cli
xchg
popa
mov
add
in
test
cmp
mov
lea
sub
ret
pop
mov
push
out
inc
pop
mov
shlb
movsl
inc
adc
mov
sub
jmp
test
mov
or
add
push
out
add
decl
leave
repz
cmp
mov
sbb
shufps
js
inc
or
lret
cli
clc
sti
push
popf
and
inc
jno
test
or
lahf
sub
imul
pop
test
test
push
push
mov
pop
and
shrl
lods
jne
pop
loop
inc
mov
push
shrl
xor
push
pop
push
xchg
mov
push
cmp
test
into
mov
or
or
sub
cmpl
jnp
mov
pop
mov
std
inc
xchg
adc
mov
outsl
pop
add
push
xchg
fisubl
pop
jne
test
call
daa
pop
pop
cli
icebp
push
popf
inc
cmp
and
jne
shlb
inc
or
subb
addr16
dec
add
out
adc
fwait
pop
outsl
imul
clc
jmp
cmpsl
mov
cmp
inc
loopne
inc
cmpsb
push
ret
inc
sbb
pop
xor
ficoms
sub
fs
fisttpll
or
mov
mov
in
and
mov
rorb
cli
dec
add
mov
inc
cli
sbb
adc
cld
add
pop
sub
or
dec
add
push
fbstp
call
scas
pop
inc
inc
gs
sti
jle
lcall
test
push
cmp
xchg
mov
dec
dec
xor
icebp
mov
cwtl
push
lods
movsb
addr16
push
out
insl
jne
mov
mov
jbe
jnp
mov
js
mov
push
fmuls
and
adc
dec
or
sbbl
clc
jnp
call
push
jnp
xchg
leave
push
mov
or
nop
jne
sahf
outsb
mov
jg
xchg
lret
jno
xchg
in
gs
or
mov
jle
enter
xlat
enter
push
ret
mov
out
loop
push
jne
dec
das
outsb
push
mov
stc
aam
mov
scas
fisttpl
movsb
fdivrs
imul
sub
mov
and
xor
mov
lgs
inc
mov
fwait
aas
inc
and
adc
mov
mov
cwtl
add
mov
outsb
loop
shll
roll
jmp
and
out
cmp
call
movsl
jnp
rcll
adc
sub
scas
push
testl
out
clc
enter
js
fmull
pop
pushf
in
stos
std
insb
add
dec
xchg
dec
cmp
aaa
dec
mov
mov
or
fmull
jns
adc
add
adc
push
push
enter
cmp
jg
fldt
mov
mov
jmp
jmp
jge
frstpm(287
and
sbb
push
inc
clc
ja
or
cmp
mov
push
jns
inc
fildl
iret
int
xchg
jmp
sti
mov
mov
outsb
sub
fildll
ja
sbb
test
orl
insl
xor
dec
cmpsl
fs
inc
dec
in
inc
mov
scas
sbb
cld
jae
push
pusha
jecxz
mov
adc
fidivs
movsl
loop
in
pop
mov
mov
repz
mov
test
push
rcrb
sbb
adc
stos
test
popf
ret
jmp
sbb
inc
lret
jnp
clc
mov
xor
icebp
push
imulb
neg
aam
stos
das
add
cli
jbe
sbb
adc
sub
fwait
movsb
jns
xlat
adc
adcb
pop
nop
into
xchg
inc
mov
not
out
push
adc
pop
inc
jns
jmp
push
jle
pop
scas
cmp
xor
xlat
sub
xor
pop
rep
js
lret
mov
xchg
ret
push
mov
push
mov
pushf
insl
mov
cmp
pusha
out
popa
sbbl
and
in
cmp
push
call
sbb
pop
xor
xchg
add
dec
push
call
movsl
sbb
hlt
mov
lcall
xchg
daa
adc
add
and
inc
lahf
jle
outsl
jmp
push
scas
xor
icebp
add
sarl
jg
fildll
and
and
fdivp
mov
inc
cmp
mov
mov
xor
popf
lods
clc
xor
roll
in
fldt
idivb
inc
call
pusha
stc
or
and
negb
call
cmpl
push
jne
sbb
and
pop
mov
pushf
call
sbb
ljmp
add
pop
adc
call
sbb
jno
sti
dec
inc
dec
xlat
stos
shr
cmp
xor
push
movsb
clc
ret
xor
into
mov
ret
fisubrs
dec
ljmp
or
push
sbb
adc
xor
add
push
test
fdivl
xchg
xchg
in
fwait
je
adc
movsl
fldenv
sbb
jo
xor
xlat
aas
and
push
call
or
inc
and
or
add
call
pop
sbb
je
sbb
sbb
xor
and
outsb
dec
arpl
out
inc
test
enter
std
fdivrs
push
cwtl
loopne
cltd
test
and
mov
adc
adc
test
dec
sti
xchg
cs
mov
in
cs
gs
outsl
enter
in
in
or
jbe
cld
cmp
imul
inc
addr16
rcrl
dec
push
and
aaa
lcall
test
lcall
jae
mov
sbbb
and
xchg
xchg
mov
mov
inc
iret
xor
addr16
cmp
lock
neg
cmp
inc
sbb
data16
jno
xor
jno
addr16
mov
dec
les
aad
jne
or
bound
mov
sbb
sub
add
fwait
aas
stos
lret
sub
and
test
decl
stos
outsl
dec
push
cld
and
inc
cs
sub
or
add
push
jmp
xchg
dec
push
mov
sub
mov
jmp
inc
leave
xchg
lea
pop
inc
sbb
daa
stc
lea
jae
dec
sbb
adc
daa
daa
out
mov
cmp
mov
pop
cmp
mov
sbb
jae
test
adc
inc
lea
sbbl
movq
test
sub
cld
daa
jnp
enter
jnp
sti
nop
add
pop
fwait
adc
cmc
xchg
mov
sbb
test
sub
inc
loope
and
jbe
addl
sbb
jae
inc
test
cmp
ljmp
cwtl
mov
xchg
mov
je
sbb
mov
mov
imul
cli
push
ja
lods
push
or
sub
lahf
bnd
jno
push
fsub
jae
pop
adc
pop
dec
in
ss
adc
cld
jb
sbb
je
sbb
enter
mov
hlt
imul
int3
lcall
jne
jno
sahf
cli
arpl
movsl
and
es
mov
call
repnz
lods
or
xchg
mov
cmp
add
push
cltd
sbb
push
inc
sbb
sub
push
sub
pop
adc
adc
loop
gs
mov
sbb
push
call
and
dec
imul
sbb
neg
std
call
dec
mov
add
mov
add
lock
mov
mov
aad
pop
push
mov
lret
dec
aad
std
mov
sub
push
imul
ret
xlat
sbb
call
mov
sub
cli
adc
pop
lock
rol
and
int3
push
fidivs
add
push
aaa
mov
popa
data16
std
pushf
std
pushl
popf
mov
pushf
movb
lea
jmp
push
call
popf
or
add
sbb
dec
scas
mov
mov
dec
cs
in
fbstp
clc
scas
pushf
cli
mov
out
cltd
add
imul
int
xchg
mov
jo
cmp
out
aas
and
stc
lea
xchg
mov
ss
mov
pop
xor
imul
pop
sbb
mov
addb
jno
sbb
dec
jge
mov
add
jo
aam
ja
shl
testb
sbb
lretw
rolb
aaa
lods
cli
sbb
xchg
or
js
test
test
push
fmuls
daa
lret
loope
fsubl
and
jae
pusha
pusha
lea
jne
pusha
pusha
mov
jmp
push
call
fs
sbb
xor
pop
mov
push
and
das
ret
pop
and
ss
xchg
mov
adc
stos
negl
mov
jbe
stc
mov
sarl
addl
mov
pop
inc
call
movsl
in
dec
data16
adc
in
out
nop
loop
jecxz
push
call
mov
lcall
dec
je
inc
js
test
pause
push
int3
lods
inc
dec
mov
cmc
scas
cmpl
pop
inc
repz
imul
inc
addr16
and
into
loope
shlb
fldt
pop
in
xchg
lods
pop
sbb
inc
enter
mov
add
inc
xchg
daa
daa
icebp
outsb
push
call
rorb
jmp
lea
lahf
pushl
popl
movsbw
bswap
setno
mov
pusha
jmp
inc
setge
pushf
pushf
inc
cmc
shl
dec
shr
xchg
pop
rcr
mov
cmp
bt
mov
pusha
test
stc
cmc
xchg
btc
cmc
pop
bsf
mov
jmp
subl
sbb
pop
data16
out
and
arpl
cmpsb
add
sbbb
ss
sbb
xchg
jb
mov
jmp
push
cmp
stos
mov
das
inc
iret
in
mov
clc
sbb
xchg
and
add
jecxz
icebp
lret
xchg
outsl
xor
psubusw
xchg
sub
cwtl
sbb
out
xor
push
xor
xor
push
mov
aas
adc
adc
stc
aam
imul
sbb
jg
or
mov
cld
je
sub
mov
sub
sbb
xchg
add
out
xchg
dec
flds
mov
call
or
mov
mov
das
clc
xlat
fisttpl
scas
mov
lods
jnp
push
pusha
inc
cmp
cmp
sub
out
add
mov
cli
sub
dec
bound
pop
and
aam
push
lcall
scas
or
lds
insl
call
shr
sahf
xchg
outsb
lcall
loope
xchg
lret
jl
outsl
addr16
out
stc
xchg
mov
popf
fistl
les
add
aam
icebp
lock
ljmp
sbbb
mov
and
lcall
cmpb
gs
ffreep
pop
cld
push
loope
icebp
mov
and
test
cmp
imul
adc
rcr
add
lahf
sbb
xchg
es
loop
mov
add
jge
dec
mov
sahf
movsb
pop
stc
cmpsb
jg
sbb
mov
sarb
lcall
movq
in
xorb
roll
xchg
call
outsb
jge
jae
xchg
lea
pop
in
xchg
cmp
pop
xor
rcr
dec
dec
adc
sahf
scas
sub
jno
and
jmp
mov
aad
in
adc
mov
popf
loope
call
cld
cmp
imul
and
and
bound
mov
inc
adc
test
testb
add
push
sbb
mov
cmpsb
inc
jg
sbb
lcall
dec
roll
pop
je
sbbb
add
icebp
les
inc
nop
and
fs
inc
push
mov
out
jl
dec
dec
jle
lcall
xlat
and
fnsave
or
xchg
addb
pop
sbb
in
mov
jl
aas
jns
fnsetpm(287
inc
fsubrs
dec
pop
notb
cmp
mov
fildll
popf
fnsave
dec
sub
sub
push
arpl
pop
data16
ljmp
faddp
push
call
pop
aaa
cld
ss
aaa
adc
imul
movsb
fcmovnb
movsb
xchg
xchg
rolb
nop
and
dec
rcrl
pop
movsb
inc
cmpsb
add
add
movsb
jecxz
mov
add
jnp
hlt
inc
jle
dec
out
xchg
mov
insb
sarl
es
idiv
rcr
lret
and
jge
jbe
inc
mov
inc
jmp
lcall
push
out
loopne
jno
je
repz
lds
push
push
fnstcw
repz
xor
mov
dec
push
pushf
xor
push
imul
inc
filds
pop
xlat
mov
inc
pop
jnp
ljmp
and
cli
sbb
clc
sub
mov
je
xchg
sub
add
cmc
call
subb
jno
std
lock
mov
dec
cli
fdivrl
mov
mov
lea
js
loope
sbb
inc
lcall
sub
repz
jnp
xor
fnsave
jge
pusha
inc
adc
hlt
xchg
sysenter
jge
jg
cmp
add
sub
jns
je
int3
loope
adc
lock
dec
xchg
in
adc
mov
mov
insb
lcall
sub
test
hlt
cs
fiadds
into
test
stos
sub
add
pop
mov
sbb
mov
adc
push
push
sbb
jg
pop
mov
in
movb
mov
ja
fisubrs
jbe
jns
sahf
push
inc
jecxz
push
push
int
adc
xchg
shlb
inc
jecxz
out
je
dec
test
std
inc
insb
nop
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
push
call
and
and
jg
add
jmp
jmp
imul
lcall
push
and
xor
repz
dec
mov
imul
cmp
lods
lea
mov
and
lock
filds
or
xor
iret
mov
mov
aaa
or
sbb
pop
xor
outsl
pop
push
or
pop
sahf
outsl
ret
push
sbb
pushf
pusha
imul
adc
stos
rcll
movsl
jg
cli
jne
sbb
idivb
call
pop
stc
loop
imul
mov
shr
pusha
adc
sbb
pusha
mov
movsl
jecxz
sub
sbb
push
jb
fcmovu
std
add
inc
dec
xchg
sbb
push
testb
inc
jp
loopw
xchg
dec
sahf
rcr
pop
jnp
je
jp
je
add
insb
xor
mov
test
sbb
or
push
push
call
mov
aaa
mov
sbb
fs
dec
rorl
push
roll
inc
pop
rolb
test
stc
ret
pop
icebp
mov
lods
in
in
test
mov
test
fucomi
aaa
sub
inc
and
movsl
shlb
bound
cmp
xchg
xor
pop
sbb
fsubrs
jle
cli
adc
icebp
jno
and
int
ja
test
test
cmp
jb
das
subb
out
jle
pop
pop
xchg
sub
and
mov
pusha
sub
clc
shr
stc
bt
call
push
call
les
cmc
imul
sub
stc
shr
jmp
push
call
pushf
jp
nop
push
call
push
and
loop
inc
and
movsbw
movl
call
push
call
sbb
jmp
repz
add
or
and
fs
ja
dec
cmc
shr
dec
sub
adc
adc
shl
push
lea
add
xor
mov
shr
sub
add
mov
mov
stc
repnz
push
lea
jne
pushf
sete
setae
movb
movw
pushf
mov
push
jmp
mov
call
in
and
sbb
daa
int
inc
es
repz
xchg
movsb
or
fsts
cmpsb
mov
and
jbe
adc
pop
in
add
inc
arpl
scas
mov
xchg
mov
in
push
jg
adc
mov
in
adc
fistpll
jbe
ja
out
sbb
add
pop
in
dec
lock
jb
test
jg
cli
xchg
or
or
movsb
lock
jle
subb
lock
jg
mov
popf
bound
test
mov
xchg
add
inc
push
daa
xchg
out
mov
push
sar
push
mov
shlb
push
dec
arpl
lock
in
xor
aad
cmp
sbb
sti
mov
or
push
divl
cmpsl
jno
mov
into
fstpt
fsubrl
sbb
and
inc
mov
mov
out
stc
or
xor
test
lock
pop
mov
cwtl
loopne
lret
xor
in
aaa
icebp
mov
inc
out
fildl
xchg
dec
loope
lods
jne
push
add
mov
adc
adc
mov
mov
cmp
pop
sbb
jg
mov
ret
mov
repz
sbb
movsb
push
call
lods
push
out
fnstsw
div
pop
push
call
mov
cmc
negb
add
xor
mov
lcallw
push
cmpl
sub
xchg
repnz
cli
cmp
push
stos
sbb
inc
dec
pop
jge
jns
xor
vpsrlq
gs
push
xlat
fwait
aas
xor
push
sbb
les
sub
and
fstpt
insb
adc
inc
out
inc
ss
xchg
outsb
subb
add
bsr
mov
mov
cmc
lea
jge
pushf
test
pushl
lea
je
stc
push
btr
add
movb
add
sbb
cmp
mov
clc
cmc
add
jmp
sbb
les
sbb
sbb
in
jns
clc
mov
and
lret
mov
add
pusha
and
pop
mov
xlat
dec
pop
jae
push
imul
cmp
lods
mov
dec
push
mov
arpl
ret
inc
sbb
iret
push
pop
arpl
mov
std
cmp
jecxz
jns
mov
test
mov
lcall
in
clc
clc
pusha
movw
test
movb
lea
je
test
jno
cmc
sub
cmc
stc
test
mov
jmp
inc
sbb
gs
mov
or
fnsetpm(287
std
shl
sbb
sahf
in
cmp
data16
pop
add
xchg
mov
test
ljmp
xchg
jle
xchg
fmull
stc
icebp
movsb
jnp
xor
push
fwait
inc
pop
out
inc
aaa
jge
mov
jge
jle
hlt
dec
sbb
mov
cmc
jnp
push
rcrl
iret
sbb
pop
stos
cmpsb
sub
int3
imul
push
call
push
push
call
nop
xor
mov
fs
incb
popa
adc
mov
enter
lcall
or
xchg
adc
and
xchg
int
sarb
sbb
adc
hlt
mov
outsb
xor
dec
mov
or
mov
aam
insl
iret
xlat
call
pusha
out
mov
jl
sbb
mov
cmp
mov
div
aas
sub
and
add
push
push
repnz
pushf
jmp
rol
pusha
cmc
and
mov
clc
mov
and
xadd
mov
not
pop
not
mov
or
bts
test
mov
clc
seta
shl
xadd
mov
cmc
or
bts
movzbl
mov
or
push
pushf
pop
adc
lea
cwtl
lahf
sbb
mov
call
push
call
jmp
rolb
inc
inc
and
lods
movl
movb
lea
jne
stc
bsr
shl
mov
jmp
mov
movsbw
pusha
mov
push
lea
pushf
mov
mov
lahf
jmp
data16
jno
lcall
jge
add
ja
mov
stos
test
stos
sahf
fxch
cli
xor
push
mov
das
add
mov
mov
jbe
push
or
sbb
push
cmp
ljmp
jmp
std
xchg
and
das
mov
mov
or
jge
repz
push
push
pavgb
pop
mov
in
fldenv
sbb
mov
bnd
popf
roll
pop
mov
sub
pop
insb
inc
push
or
mov
xchg
lret
sbb
sub
sahf
push
ret
cli
lcall
push
xor
int
push
pop
pop
sbb
fs
sub
fsubr
push
dec
mov
mov
jmp
movsb
and
inc
xchg
test
dec
xchg
push
xor
jmp
push
call
insl
pop
addr16
cmp
sbb
jno
inc
pusha
sbb
test
sub
in
into
hlt
adc
dec
push
test
sbb
sti
sbb
sub
les
mov
cmc
mov
xchg
jmp
sbb
jb
cmp
xlat
or
xchg
cli
popf
xor
sbb
jge
pop
les
imul
outsb
cmp
xchg
mov
popa
bound
popa
lcall
add
pop
mov
push
icebp
add
jmp
dec
test
ficoms
scas
or
sub
xor
aad
push
jmp
mov
fsts
in
in
arpl
adc
xchg
pop
or
in
clc
les
pop
add
dec
pusha
outsl
xchg
sbb
xchg
push
in
push
xor
aam
and
test
cmp
cmovge
mov
or
ret
pop
adc
sub
hlt
dec
xor
cli
cmp
mov
sti
arpl
mov
inc
sub
test
mov
and
ljmp
pusha
lcall
cmp
stos
mov
push
or
push
push
push
push
xchg
in
test
mov
xor
movsl
push
scas
jno
or
fcoms
movsb
xor
xchg
xchg
cmp
xchg
and
sub
popa
in
in
imul
inc
inc
aas
xor
adc
adc
pop
sbb
popa
pop
and
pop
sbb
cmp
push
inc
push
pop
add
push
inc
jae
clc
mov
into
js
lock
icebp
xchg
jo
pusha
inc
inc
or
or
or
addr16
adc
cmp
mov
loop
iret
sub
inc
mov
int3
push
sbb
adc
jnp
jae
mov
in
inc
mov
cltd
mov
fwait
lea
icebp
jp
cmc
xchg
inc
mov
jno
jo
push
pusha
add
cli
jecxz,pt
mov
inc
in
sub
je
flds
dec
testl
sub
push
lahf
lret
cltd
add
lds
pop
lods
test
or
and
mov
dec
dec
or
xchg
push
jge
push
sbb
and
lods
shlb
pop
cmc
iret
je
pushf
call
std
inc
sahf
ljmp
stc
cmp
aaa
rclb
mov
push
lock
stc
adc
cltd
in
in
jb
push
dec
iret
push
xor
jnp
push
test
les
lods
lahf
scas
icebp
movsl
dec
shr
clc
out
lods
and
pop
mov
mov
or
sub
mov
jne
dec
mov
lret
inc
scas
mov
aam
sbb
jmp
inc
inc
add
pop
lahf
inc
addl
xchg
adc
jnp
mov
and
call
pop
and
dec
gs
test
push
mov
icebp
ljmp
out
xchg
lods
aam
test
lods
jmp
lock
jg
into
cmp
mov
stos
dec
push
add
mov
jl
mov
rclb
or
jl
xor
stos
pushf
enter
lock
and
xor
add
repnz
shrl
xchg
lret
out
iret
xchg
fxch
js
arpl
adc
jg
mov
mov
mov
iret
into
or
sbb
outsl
insb
xor
cs
insb
add
sbb
jo
mov
mov
push
test
bound
pop
nop
cmp
mov
int
test
insb
mov
adc
xorl
dec
or
popf
mov
data16
mov
inc
inc
adc
jge
mov
sbb
lods
lret
mov
jne
call
mov
mov
dec
ror
outsl
ret
mov
dec
inc
or
sbb
test
dec
shrl
loopne
mov
sbb
inc
jle
jg
stos
fldenv
ja
lock
movsb
sahf
out
outsl
and
data16
fsubrl
popf
cmp
jae
mov
stos
test
add
adc
in
lcall
movsl
push
lea
jb
push
pushl
mov
pushl
ret
mov
pop
lcall
or
lret
dec
lods
out
mov
sub
mov
inc
push
xchg
cmp
adc
push
inc
sub
int3
mov
mov
or
xor
jl
aam
jle
repz
rol
adc
lods
movsl
in
jb
add
jp
mov
jno
rdtsc
push
call
push
mov
orb
movl
and
ret
push
call
cmp
mov
sbb
popf
push
int3
ljmp
in
hlt
or
mov
arpl
or
jno
push
movsb
pusha
sbb
sbb
cmp
shlb
jbe
shll
adcb
push
lods
mov
aas
pop
sub
and
js,pn
mov
push
rcrb
xor
push
adc
into
mov
pushf
push
movb
mov
lea
jmp
push
call
lcall
and
add
in
pop
lcall
daa
out
xor
push
out
call
movsb
notl
inc
pushf
mov
pop
cmpxchg
mov
inc
jle
jp
dec
aam
xchg
inc
dec
inc
jbe
mov
arpl
jb
subb
jecxz
xchg
std
rcll
mov
cmc
lods
ret
mov
stc
mov
data16
fdiv
test
flds
xor
add
sbb
or
stc
aad
inc
aad
mov
or
mov
pop
adc
int
xchg
xor
leave
loopne
mov
xchg
dec
mov
cmpsl
scas
das
scas
movsl
xor
fstps
icebp
lret
sahf
pop
outsl
popl
xchg
in
xchg
mov
cmpsb
mov
icebp
push
stos
sbb
aaa
sub
jmp
jns
lock
test
div
mov
add
push
call
mov
push
call
pop
stos
popa
xchg
negl
dec
call
pop
or
lcall
lock
push
xchg
shrl
flds
sbb
xchg
add
mov
cmpsb
pop
fsubr
addr16
and
sbb
jg
mov
mov
dec
xchg
adc
mov
sub
add
imul
mov
into
pop
in
adc
xchg
cwtl
mov
inc
test
ds
sub
sub
mov
mov
mov
jl
out
push
pushf
cmp
call
cmp
xchg
sbb
test
pop
js
hlt
in
push
mov
cmp
cmpb
pop
mov
into
out
stc
sti
push
jp
loopne
fsts
into
cmp
jge
test
push
cmpsl
mov
mov
pop
push
or
and
std
and
mov
mov
dec
sarl
fwait
mov
loope
fwait
xchg
cmc
cmp
mov
mov
fs
es
ja
jp
jne
ret
sbb
pop
cmp
pop
pushw
aas
mov
pop
and
add
jmp
pushf
lahf
mov
lea
movsbl
push
lea
pushf
push
movl
pushf
call
push
call
push
outsl
mov
cwtl
shlb
inc
clc
movb
test
stc
shl
push
lea
je
push
pushf
mov
pushf
movl
call
lahf
lea
call
push
call
addr16
lds
sbb
jo
jae
test
movsb
sub
lret
pop
xchg
pop
and
cltd
add
xchg
fs
inc
xchg
addr16
ss
xchg
orl
das
pop
in
inc
subl
loope
and
mov
mov
lcall
pushf
xchg
inc
jnp
sub
jae
loop
aad
dec
fnsave
jl
imul
stc
xor
mov
fdivs
and
pop
jmp
lcall
ret
sbb
and
ss
fistpll
loop
shl
adc
and
xchg
mov
int3
cli
cmp
imul
jnp
or
lods
inc
inc
jmp
xchg
std
test
es
fucom
mov
movsl
enter
popa
jbe
lcall
stos
shlb
vphadduwd
lea
pop
mov
bt
stc
pushf
movl
xor
push
clc
repnz
call
lea
jne
not
setb
jmp
push
call
cmp
dec
cmp
sahf
and
sbb
mov
sbb
sbb
add
sub
jne
sti
and
dec
mov
sub
push
cmp
add
sbb
pop
push
xchg
fidivrs
arpl
cmp
jmp
clc
pop
mov
or
aas
push
daa
jl
ds
lds
iret
test
jnp
daa
mov
jmp
ror
mov
call
jmp
jmp
les
cwtl
mov
pop
push
enter
pusha
jmp
das
rclb
or
pop
into
lock
pushf
xchg
cmp
lcall
ffree
pop
pushf
xchg
adc
adc
ds
dec
pop
mov
jp
pop
sbbl
xor
pop
mov
or
scas
decl
pop
mov
arpl
je
lcall
sub
jbe
cmp
xchg
mov
testb
pop
jae
pop
call
xchg
dec
sub
in
lea
mov
and
fisubs
jo
jecxz
pop
and
ret
sbb
or
xchg
and
push
ss
ret
xchg
sub
pop
icebp
enter
push
test
mov
test
outsb
and
call
shl
iret
mov
adc
iret
into
inc
aad
mov
push
call
mov
and
call
inc
ss
sti
int3
and
xor
fs
repz
out
and
push
ljmp
adc
enter
jbe
lret
dec
push
je
movsb
and
cmpl
shl
shl
push
pop
push
xchg
les
xor
mov
and
inc
aad
push
call
icebp
xor
push
lcall
jl
out
and
jp
or
sar
jg
or
xchg
sub
pushf
fistpll
leave
mov
or
xchg
push
jp
jp
shll
notl
mov
push
pop
pop
mov
and
xchg
adc
in
sub
push
sbb
test
stos
addl
leave
mov
adc
aam
addb
movsb
ret
lret
lret
fsubrl
adc
jg
call
mov
je
add
adc
lea
jae
push
lea
jmp
pushf
cmc
sub
pusha
cmc
bt
push
pushl
popl
cmc
cmp
pushl
jmp
lret
push
lcall
repz
pop
xchg
imul
cmc
lds
cmp
mov
cmpsb
loope
imul
jb
mov
xor
dec
adc
ljmp
inc
jne
lcall
pop
xchg
outsb
adc
add
lea
cmp
xchg
imul
cli
or
rol
aas
or
sbb
cmp
lret
xor
out
pop
xchg
sub
mov
cmp
pop
mov
ja
and
aaa
jecxz
sbb
dec
in
mov
sub
leave
dec
sub
stos
test
jns
subb
aas
xor
nop
call
lods
mov
inc
loope
testb
mov
lcall
loope
xorb
out
aas
xor
nop
call
sbb
pop
pop
ss
mov
aaa
inc
fstp
xor
sub
fisttpll
pop
sti
push
ret
shl
or
out
push
add
sti
fsubs
jle
dec
addr16
mov
pop
xchg
rcrl
aaa
push
jno
bound
fstpt
in
cmp
aaa
push
outsb
xchg
mov
movsl
fwait
and
sahf
ds
nop
cwtl
dec
mov
mov
clc
scas
mov
es
push
adc
xchg
dec
pop
jae
cmp
inc
or
jno
sub
movsl
cmp
push
add
add
inc
add
push
inc
add
inc
add
add
add
pusha
jmp
shr
mov
rcr
shl
pusha
movsbw
add
bsr
stc
xor
mov
sub
bt
clc
cmpsb
call
sahf
mov
push
lcall
xchg
sub
xchg
or
jg
inc
add
pop
jno
ret
mov
jecxz
sbb
outsb
shl
stc
aaa
arpl
cld
and
iret
mov
xor
mov
xor
mov
repnz
out
lds
add
rcrl
inc
jb
popa
je
inc
outsl
outsb
je
add
mov
in
inc
es
lods
pop
test
hlt
push
sub
sbb
and
lds
insl
in
jo
sbb
fwait
test
xchg
rcl
inc
add
xchg
xchg
scas
xchg
xor
jl
inc
fiaddl
dec
pop
sbb
int3
test
outsb
aaa
ret
push
pop
fisubs
fadd
popf
mov
out
mov
and
repz
psrlq
dec
dec
in
popf
sub
call
inc
sub
push
or
lahf
cmp
rcll
test
aas
hlt
fs
scas
sub
stos
rcr
das
shrb
pop
out
xchg
dec
cmp
repz
and
fimuls
jne
into
pop
xchg
sub
iret
and
imul
in
dec
jle
push
sub
data16
push
repz
cmpsb
sub
mov
or
sub
out
mov
fbstp
jne
push
into
stos
lcall
sub
push
outsb
xchg
rcrb
pop
mov
fs
decl
je
repnz
in
sub
aad
jnp
lretw
je
notl
out
lcall
pop
fdivs
shrb
push
cmp
mov
xor
sbbl
ljmp
and
fistl
loopne
loope
push
sub
sbb
imul
and
shlb
aas
cmpsb
adc
stos
loopne
ljmp
dec
leave
add
ds
sbb
jmp
stos
outsb
loopew
jo
lret
mov
or
arpl
or
xor
sub
cld
sub
lea
mov
pop
sub
sbb
inc
cmp
jge
les
mov
sub
pushf
jle
sub
sbb
popa
mov
xorl
sarl
ss
and
mov
sbb
sub
xchg
mov
xchg
lret
insl
pop
sub
lods
imul
imul
shrl
xchg
mov
into
dec
in
cmp
jl
vmptrst
jg
jns
sub
arpl
imulb
sub
sbb
jbe
faddl
mov
shrl
pushf
cltd
and
cmp
jl
call
adc
xchg
lret
jmp
add
xchg
adc
test
jp
mov
shrb
je
cli
les
sub
test
sub
scas
icebp
negb
out
scas
sub
mov
sub
hlt
pushf
lds
ss
cmp
mov
sub
adc
sbb
push
pop
mov
out
stc
mov
lcall
mov
sub
add
pop
call
sub
mov
pop
roll
sub
jae
aad
fcompl
dec
sbb
or
rcrb
stc
lods
dec
push
xchg
movsl
xor
lcall
xchg
ds
dec
divl
xor
repz
push
jnp
dec
imul
mov
ret
in
mov
stos
lods
repz
add
lock
fwait
std
mov
or
outsl
ljmp
jp
rcr
jnp
sub
mov
loopne
das
inc
imul
sub
in
push
sub
pop
mov
cmpsl
outsl
xor
sub
dec
jae
pop
cmp
sub
and
nop
mov
push
sub
mov
or
cmpsl
fisubrl
xor
mov
sbb
inc
test
test
sti
cwtl
fldl
sub
sbb
movsb
mov
data16
cltd
je
imul
repz
mov
mov
fmull
repnz
pop
jl
sub
cmp
xchg
xchg
mov
sub
pop
rclb
xchg
push
inc
insl
bound
dec
out
iret
and
lds
fcmovnb
sub
gs
mov
mov
jmp
xor
dec
xchg
add
das
sbb
fwait
mov
and
sub
sbb
cld
dec
xor
test
jns
mov
test
mov
test
adc
ret
imul
dec
mov
pop
stc
adc
jo
rclb
ds
or
test
adc
xor
in
dec
ficoml
sti
xchg
js
or
sub
push
jg
test
sub
xchg
push
popf
xchg
push
cmp
ret
pusha
outsl
dec
xor
pop
fldenv
and
incb
lcall
jg
insb
jnp
stos
jb
rcrb
mov
in
mov
push
mov
push
mov
sub
mov
btr
dec
pop
lock
nop
xor
fldl
jl
xor
orl
mov
mov
ja
das
xor
sub
pop
inc
lcall
test
lock
or
stos
jmp
adc
jl
sub
mull
mov
gs
inc
call
fwait
imul
out
sub
shr
xor
xlat
sbb
movsb
pusha
in
orl
sub
mov
jmp
jp
scas
xor
ljmp
dec
int
clc
mov
mov
shrb
xor
jge
add
lcall
add
rorl
lock
sbb
daa
push
sub
push
cmpsl
mov
lods
cmp
shrb
out
cmp
pop
divb
imul
sub
je
inc
xchg
lahf
xchg
outsl
lret
stos
nop
jg
imul
daa
adc
add
in
add
sub
jne
sub
jae
ja
clc
adc
sub
mov
les
jns
xchg
adc
lcall
push
clc
cmpl
imul
lret
shrl
jmp
shll
cmp
dec
lds
jne
bound
rcl
inc
les
jo
inc
lea
adc
iret
or
iret
sbb
scas
mov
dec
cmp
cmc
adc
add
mov
mov
dec
or
adc
loopne
rclb
jo
loope
sub
inc
les
out
sub
jno
dec
lea
stos
xchg
inc
lret
push
sarl
lea
sub
cmpsl
mov
mov
jnp
dec
jno
cmc
movq
dec
out
pop
ror
pop
iret
aam
mov
fisttpll
stc
push
inc
or
fistpll
cmp
sbb
inc
mov
daa
sbb
or
push
cli
subl
shll
mov
loope
inc
aad
sub
add
adcl
psubq
inc
and
daa
sahf
jl
mov
jbe
daa
or
dec
sbb
fstps
fstpl
fs
jp
mov
and
out
sub
inc
inc
scas
imul
or
leave
or
push
xorl
cmp
sub
test
lret
scas
pop
sti
add
addr16
inc
sub
jnp
jnp
and
xor
insl
cltd
or
sti
imul
and
negb
or
lds
mov
test
subl
insl
push
mov
xor
fcom
jle
lock
nop
movb
xchg
movsb
mov
jle
mov
enter
and
push
pop
stos
mov
in
stos
push
xchg
and
add
stc
packssdw
and
pop
xorps
cmp
xchg
mov
mov
cmp
ds
mov
pop
jecxz
or
or
or
arpl
or
lret
mov
mov
inc
jg
inc
cmp
sarb
pop
leave
mov
fbstp
vmwrite
cmp
data16
lret
daa
push
inc
in
lods
mov
sbb
inc
pop
or
aaa
lahf
loop
rol
pop
cwtl
jmp
sbb
push
or
movsl
stc
ret
cmc
dec
adc
sbb
mov
hlt
mov
dec
mov
sub
mov
xorl
movsb
sub
insl
cmc
mov
lcall
inc
mov
sbb
call
mov
sbb
mov
mov
mov
cltd
inc
add
fwait
stc
cmpsl
mov
mov
or
leave
mov
lahf
sahf
mov
cli
mov
adc
lods
mov
inc
sub
inc
mov
ficomps
mov
out
mov
push
mov
sub
je
outsb
mov
mov
aaa
into
jecxz
mov
sbb
pop
bound
fidivs
jb
push
sbb
testb
xchg
in
fs
outsl
testl
push
or
mov
sarl
or
clc
dec
out
dec
xor
fwait
movsl
aam
adc
xor
fs
aad
movsl
nop
fwait
push
rclb
icebp
add
sbb
xchg
mov
pusha
inc
xor
sbb
lahf
daa
movsb
mov
jmp
or
mov
or
jecxz
mov
pusha
add
dec
mov
mov
clc
push
sti
lods
mov
imul
jecxz
test
ljmp
and
jno
mov
cltd
loopne
sbb
repz
mov
dec
sti
sbb
lahf
insb
cld
push
mov
and
les
sbb
pop
mov
mov
jnp
xor
lock
sti
aaa
roll
enter
mov
cmp
cmp
jns
xor
push
xchg
pop
mov
not
add
push
fsubl
or
imul
out
cltd
fildl
inc
xchg
in
lods
xchg
loopne
enter
enter
sub
inc
dec
push
push
adc
adc
mov
enter
fdivs
sub
arpl
orl
sbb
mov
push
mov
xor
mov
test
push
cmpsb
add
loopne
arpl
enter
mov
mov
or
ret
pop
imul
or
cmpsl
mov
stos
and
sbb
push
stos
arpl
inc
iret
mov
leave
mov
rol
mov
lea
fcmovne
es
dec
scas
out
xorl
xlat
fcomp
in
inc
roll
push
cmpb
fstl
or
push
popa
cmp
test
add
push
scas
nop
rolb
aam
add
inc
les
push
in
loope
inc
cmp
cmp
lea
sbb
xchg
push
inc
add
push
adc
sti
into
popa
adc
shlb
daa
jl
inc
inc
dec
into
mov
mov
xor
rolb
inc
out
xchg
fcomps
bound
push
dec
and
shr
adc
mov
mov
or
xchg
icebp
push
mov
bswap
sbb
add
std
dec
test
pop
mov
mov
xchg
push
push
cli
push
sbb
inc
sbb
cmp
cmp
add
int
inc
fcmovne
popf
addr16
push
dec
adc
cmc
jmp
sub
iret
xchg
sbb
leave
jmp
popa
and
movsb
test
pop
dec
mov
sbb
insb
test
or
ds
inc
jp
xchg
mov
pop
push
mov
ret
or
lea
or
enter
call
fwait
mov
mov
sbb
sbb
or
lahf
stc
jne
or
add
add
repz
and
jge
fst
pop
popf
pop
push
pop
cmp
xchg
mov
mov
dec
andl
xchg
pop
add
inc
fstl
cmp
out
cmp
imul
loope
and
or
xchg
mov
popf
dec
inc
mov
push
jne
mov
imul
fists
xor
imul
dec
icebp
mov
dec
fstps
dec
jnp
inc
xchg
push
jae
sub
dec
or
test
pop
imul
ja
cmc
pop
inc
inc
and
xlat
or
arpl
mov
or
sub
fistpll
push
mov
adc
test
faddp
add
stos
ljmp
imul
cmp
adc
jne
orl
xlat
dec
cmp
cmp
pop
mov
mov
in
fsubr
lds
mov
les
mov
pop
cmp
ja
lds
xchg
add
pop
inc
inc
xlat
lret
repz
pop
and
sub
aas
addr16
add
dec
insb
pop
add
mov
pushf
addr16
inc
mov
loopne
hlt
call
jnp
mov
and
jne
cmp
rolb
push
addr16
add
jae
inc
jnp
mov
add
sbb
movsb
dec
and
ljmp
insb
shll
jb
push
sub
xor
push
add
jmp
pushf
dec
mov
fidivrl
fs
push
jl
sub
cmpb
and
inc
out
xor
test
imul
mov
and
cmpsb
mov
push
mov
ds
mov
ljmp
push
or
dec
movsl
inc
bound
clc
and
xchg
jg
lret
repz
pop
or
dec
cmp
xor
push
nop
cmp
inc
inc
aam
lock
and
stos
add
cmp
push
mov
outsl
inc
add
jnp
jae
add
fwait
cltd
pushf
pop
inc
jnp
cmp
dec
push
arpl
aad
les
addr16
dec
dec
dec
cmp
push
cli
ds
jecxz
pusha
cmc
adc
adc
outsl
pop
cmp
test
nop
lock
call
push
mov
xchg
or
sbb
jne
jecxz
sbb
int
cmp
push
inc
les
mov
cmp
cmp
outsl
jmp
ja
inc
imul
mov
gs
cmp
push
inc
imul
xchg
pop
xor
adc
scas
lcall
inc
incl
cltd
gs
idivl
cmp
sub
mov
or
imull
xor
pop
mov
jo
inc
dec
dec
adc
push
leave
inc
or
push
loope
sub
lcall
dec
pop
jmp
or
lds
sub
das
push
sbb
fiadds
xchg
shrl
mov
or
dec
jae
loope
stos
cwtl
adc
in
mov
sub
add
repz
dec
je
fcomps
push
push
pop
filds
loope
adc
adc
cmp
test
jmp
or
repnz
mov
mov
mov
cmp
nop
insb
clc
out
rol
js
out
jns
lahf
pop
jnp
mov
addl
stos
jo
pop
dec
sub
jnp
mov
pop
or
lea
clc
xchg
arpl
lds
data16
shr
pop
cmp
pusha
add
jnp
cmp
add
sub
andl
repz
inc
jo
sbb
nop
add
and
mov
andb
shrb
adc
jge
dec
andb
sub
or
inc
rcr
sbb
cmp
ret
stos
scas
adc
insb
test
lret
cmp
gs
rolb
lock
fbld
pusha
xor
ret
outsb
cmp
cmp
adcl
or
jbe
inc
lret
mov
add
jmp
add
outsb
jo
dec
xlat
mov
cmp
mov
mov
dec
push
call
jecxz
push
xor
add
lret
jne
add
inc
add
rol
sbb
mov
cmp
loope
add
pushf
lret
inc
call
sarl
mov
mov
push
or
pop
jne
cmp
xor
fldt
mov
pop
call
sub
dec
sub
shll
xchg
sub
xchg
jge
pop
and
mov
in
pop
push
dec
mov
dec
das
mov
jne
rcll
jle
orb
subl
inc
lret
xchg
add
aaa
sub
loop
dec
adc
ss
roll
test
sub
inc
testl
ds
fucom
xor
pop
rolb
dec
push
inc
sbb
imul
add
mov
leave
add
mov
loop
imul
push
sbb
imul
mov
dec
cmp
mov
pop
adc
cmpsb
lret
mov
mov
les
jg
inc
rolb
dec
xchg
jo
add
roll
jnp
jecxz
bound
fmuls
push
jae
inc
jnp
mov
test
js
aad
sti
fwait
or
jae
ret
gs
or
push
js
insl
dec
cmp
nop
or
call
aam
xrelease
pusha
xchg
add
or
dec
add
sti
aaa
arpl
pop
repz
out
sub
inc
dec
mov
inc
mov
sbb
mov
xchg
mov
mov
mov
filds
jecxz
cmp
dec
test
or
add
add
xchg
rcll
dec
add
sbb
or
imul
fdivs
ja
stos
aam
push
enter
jmp
ret
jl
xor
add
push
dec
jnp
sbb
or
jo
loope
filds
testl
sti
push
imul
sti
movsb
pop
movsl
dec
test
lock
push
dec
inc
fstpt
arpl
jl
dec
mov
fsubrs
mov
cmp
or
cmp
xor
les
movsl
addr16
sarb
std
js
push
fstps
lock
aaa
cmp
mov
call
mov
push
cwtl
inc
frstor
mov
cmp
sbb
pop
jecxz
add
mov
push
dec
shrb
mov
sti
push
imul
js
or
jns
mov
mov
add
jecxz
sbb
mov
pusha
js
xor
add
add
mov
dec
cmp
add
add
add
stos
and
enter
js
jae
add
or
cltd
repz
sub
and
jnp
inc
dec
mov
mov
iret
adc
push
fistpl
dec
or
mov
jle
cmp
xor
call
fsubrl
arpl
push
push
loopne
sub
mov
jb
mov
mov
stos
into
les
or
notb
stos
xchg
fmuls
cmc
inc
inc
sub
outsb
pop
dec
sub
stos
mov
leave
das
mov
popf
jbe
mov
outsb
jae
lret
push
shrb
movsl
aaa
ret
xor
dec
imul
jo
xor
push
mov
push
cmp
ret
lea
lock
addr16
mov
stc
pushf
mov
sbb
pusha
xchg
jp
inc
push
sub
test
and
sub
push
adc
lret
insb
or
xchg
push
stos
xor
mov
out
sti
sub
add
fiaddl
es
sub
jecxz
daa
push
pop
arpl
pop
sub
xchg
outsb
sub
push
cmp
js
jle
daa
sub
or
cmp
pop
adc
inc
subb
testl
scas
push
popa
hlt
inc
pushf
ljmp
lahf
shl
xchg
stos
imul
push
mov
add
jae
imul
pop
cmp
shl
cmp
push
imul
push
rcll
fs
push
pop
lret
mov
add
les
mov
mov
lock
adc
mov
cmp
jmp
mov
stos
cmp
mov
dec
inc
insb
pop
shlb
add
inc
push
sahf
cmp
mov
stos
inc
shr
lds
add
mov
and
push
cwtl
inc
jae
lds
pop
fisubl
sub
add
pop
call
jo
dec
cmp
rorb
sti
push
fs
mov
mov
mov
add
or
dec
cmp
cmp
sub
and
mov
pop
cmp
sbb
outsl
push
imul
imul
cmp
ret
xor
push
lods
arpl
sarb
fadds
rcrb
cmp
inc
push
mov
dec
in
pop
dec
or
dec
and
cmpsl
in
add
lea
cld
shll
mov
rclb
pop
mov
aad
xchg
sub
push
mov
cltd
cmp
dec
cmc
and
cmpsl
lds
sub
jecxz
js
mov
rolb
mov
lock
xchg
jne
push
movsb
adc
les
cmp
mov
sub
jl
push
test
and
cmp
gs
add
sub
sub
and
scas
aad
shlb
lcall
clc
and
gs
mov
gs
cmp
in
mov
aad
pop
rcll
aaa
and
bound
pop
cmpsl
lret
jl
in
inc
out
shrl
mov
stos
test
adc
push
add
jl
jp
pop
dec
cmp
pop
jmp
out
repz
mov
aad
loope
cmp
cmp
dec
cmp
hlt
dec
push
int
push
jp
stc
loope
out
xchg
cltd
cli
nop
add
sbb
cmp
cmp
shlb
and
stos
push
out
add
mov
adcb
jne
push
cmp
cmp
js
aas
push
xor
add
cmp
iret
lcall
repnz
mov
mov
mov
out
imul
inc
mov
pop
cmp
addr16
xor
fmuls
pop
inc
inc
mov
fs
mov
jmp
out
push
shll
pop
xor
dec
in
pop
faddl
inc
lds
jg
mov
mov
xor
pop
idiv
pusha
dec
xchg
cmp
stos
rorb
push
mov
aad
cmp
lds
add
jge
rcrb
cmp
cmp
bound
add
pop
stos
js
jns
pop
cli
scas
adc
lcall
pusha
orl
aaa
rcrl
mov
mov
nop
lds
pusha
add
mov
jmp
mov
mov
fwait
inc
cmp
mov
cld
dec
in
push
jne
dec
jge
imul
cmp
loope
ss
lods
nop
jge
stos
or
add
push
inc
out
subl
mov
push
jmp
arpl
aad
xor
dec
int
movntps
js
fldcw
inc
xorl
push
movl
mov
cmp
xchg
push
ret
loop
pusha
sub
xlat
push
imul
jge
mov
dec
push
push
xchg
mov
movsb
ret
fst
xchg
aaa
push
popf
ds
adc
into
dec
add
cmpsb
pop
mov
dec
lds
test
popa
jae
sub
pop
je
jmp
ss
jnp
jne
xor
dec
sbb
jae
xorl
out
aaa
jmp
arpl
es
lods
sarl
xchg
add
iret
clc
clc
lahf
mov
cmc
lret
mov
call
cmpsb
in
pop
lahf
sbb
imul
sub
dec
xor
xchg
jnp
dec
cld
rorb
in
mov
arpl
dec
and
imul
mov
xchg
jnp
popf
sub
stos
enter
push
inc
sub
mull
pushf
fs
jg
push
lds
sub
mov
fwait
call
push
movsb
cmp
sub
dec
mov
or
ds
rorl
mov
out
inc
xchg
fsubr
call
bound
pop
or
repz
push
aas
sub
and
enter
mul
cmpl
jns
xor
dec
sub
inc
call
cmpsl
mov
daa
enter
sub
xchg
pop
xchg
sub
leave
sub
psubusw
add
pop
mov
popf
iret
jae
sub
mov
sub
pop
test
movswl
shll
int3
cmpsl
aas
mov
cmp
xchg
jle
or
sub
shrl
dec
xchg
or
sub
inc
pop
mov
dec
mov
jne
repnz
out
lods
stos
imull
lods
xchg
push
or
push
adc
lret
aas
test
dec
jl
mov
shl
mov
add
jo
mov
xchg
out
pop
ds
arpl
dec
add
adc
or
sub
sbb
sub
push
sub
lods
pop
push
jno
push
mov
sub
and
je
js
addr16
or
add
xlat
cmpsb
dec
ss
sub
xchg
add
jns
imull
stos
xor
cmp
pop
cmova
sub
push
loopne
lahf
test
loop
jg
push
adcl
and
sar
pop
ret
aaa
push
aam
sub
into
jns
call
sub
mov
int3
inc
addr16
xchg
sub
addb
adc
sub
cmp
push
test
shlb
inc
bound
adc
mov
jnp
fiadds
dec
shlb
call
sub
stos
adc
out
js
sub
push
pop
pop
lahf
dec
inc
stos
pushf
test
or
enter
lret
je
xor
pop
pop
movsl
mov
adc
sub
pusha
gs
inc
lds
enter
mov
xchg
mov
out
jg
mov
xor
sub
repz
imull
jbe
mov
fstpt
stos
add
repnz
cmp
sti
jae
sub
in
sbb
mov
mov
jo
test
inc
roll
mov
test
pusha
jmp
jnp
cmc
sub
sbb
xchg
cmp
inc
cmpb
sub
in
aaa
adc
insl
mov
and
test
push
or
lds
xor
sbbb
adc
cmp
add
cwtl
adc
dec
cmc
aas
mov
adc
out
sub
enter
cli
sub
lret
ljmp
xor
pop
pop
jg
pop
dec
inc
cmp
cld
and
ds
cmc
jmp
jae
outsb
arpl
pop
mov
inc
sub
mov
in
popf
ja
sub
xchg
pushf
into
push
sub
jae
pop
mov
or
mov
sub
lret
fwait
mov
leave
mov
roll
scas
stos
movsl
imul
pop
cmp
pop
inc
mov
and
push
cmp
mov
mov
adc
sub
inc
aad
dec
jae
add
test
xchg
cmp
inc
sub
std
repnz
subl
xchg
push
fwait
lahf
ret
scas
sbb
sub
ljmp
outsl
ret
or
jb
dec
lea
jecxz
fwait
std
push
sbb
cli
imul
shrl
xlat
packuswb
and
xor
inc
jo
dec
push
mov
pop
test
subl
push
jbe
dec
fxch
jae
jmp
xchg
aam
shrl
test
adc
movsb
add
adc
and
push
push
adc
adc
daa
sub
cmc
stos
pop
pop
dec
repz
or
sub
lret
mov
test
push
push
call
mov
ret
ja
mov
dec
repz
mov
jae
clc
jne
jae
pop
test
pop
push
lods
in
dec
stos
test
lock
aad
sub
leave
push
js
mov
outsl
jne
dec
scas
mov
call
shufps
scas
xchg
aaa
jl
mov
mov
std
and
leave
les
adc
add
das
sbb
xchg
push
ficomps
mov
sub
dec
insl
orb
jo
aas
cmp
je
add
sbb
ljmp
inc
icebp
mov
pusha
mov
add
mov
adc
das
nop
or
loop
xchg
adc
pop
pop
sub
xchg
cli
sub
jmp
lcall
in
lea
addl
adc
dec
sahf
inc
sub
mov
jnp
push
not
sub
sub
addb
movsl
fists
leave
cmp
test
lods
aam
gs
xchg
outsl
cmp
shrl
popa
lret
cld
sub
loop
jp
add
cmp
sbb
call
shlb
cmpsl
loopne
xlat
std
mov
mov
bound
push
inc
pushf
sub
sahf
lahf
dec
mov
cli
lods
mov
imul
sub
iret
push
xchg
dec
sbb
push
sub
adc
xor
mov
sub
lods
xchg
dec
hlt
jo
fwait
cmp
sub
jae
mov
sub
in
stos
and
sub
clc
int3
stc
sub
iret
lret
pop
pop
in
sub
dec
ds
add
push
jmp
xchg
dec
jmp
mov
inc
test
movsb
or
inc
into
mov
jecxz
iret
and
xor
push
sbb
bound
testb
push
lret
pushf
shlb
or
leave
lahf
in
and
ret
lds
insb
bound
adc
clc
jns
cmp
mov
dec
aam
cmp
repz
mov
sub
or
sub
fidivl
cmp
jae
negl
sub
jp
push
bound
xchg
jle
sti
mov
sub
xor
pop
rolb
cltd
sbb
fsubrs
lods
mov
adc
call
pop
xchg
push
pusha
mov
cli
sbb
sbb
loope
or
gs
mov
fwait
in
aam
mov
dec
arpl
push
add
je
jmp
dec
insb
xchg
incb
push
or
push
ljmp
add
iret
nop
and
add
and
lds
aad
fidivl
call
popf
lock
sahf
and
ljmp
ss
xchg
sub
pop
push
stos
lret
jmp
mov
jnp
mov
pop
sub
cmp
pop
je,pt
and
gs
xor
call
hlt
ds
jg
in
mov
imul
enter
sbb
out
push
cmpsl
outsb
sub
jae
inc
mov
and
or
inc
push
or
xchg
mov
shrb
jge
inc
mov
stc
aad
jnp
out
pop
mov
divl
sub
cmp
js
loopne
jmp
sub
fwait
iret
push
dec
cmpsb
dec
shrb
push
push
movsl
mov
and
in
test
cmp
sub
jp
imul
lods
sub
sarb
mov
cmp
mov
sub
loop
ja
push
dec
cmp
fwait
mov
mov
add
pop
mov
fsubrs
mov
xchg
hlt
push
push
adc
sbb
test
icebp
arpl
sub
fs
pop
fmuls
and
mov
xchg
xchg
rol
mov
orb
in
jae
or
lock
enter
shl
xchg
sti
jle
pop
lock
mov
in
dec
es
mov
mov
push
mov
jae
nop
leave
xor
daa
sub
hlt
sbb
out
outsl
xchg
adc
js
sbb
lock
mov
movsl
data16
xlat
sub
pop
inc
fsubr
xor
je
pusha
out
add
rorb
push
cs
push
les
jp
and
pop
or
out
sub
mov
mov
lea
inc
xchg
cwtl
mov
dec
adc
push
imulb
pop
or
lods
jbe
mov
pop
sbbb
xor
lcall
ds
add
popf
stos
push
mov
cmc
not
xchg
dec
sub
sbbl
xchg
xchg
outsl
les
cmp
arpl
sub
test
dec
or
dec
test
or
xchg
dec
xor
cmpsl
push
cmc
fwait
mov
mov
movsl
ret
mov
sahf
pop
lret
adc
mov
test
mov
cmp
mov
mov
shlb
inc
jae
cmpsb
mov
mov
mov
arpl
cmp
in
sbb
jle
enter
mov
xchg
sub
outsb
inc
sbb
movsl
inc
and
push
dec
ss
call
mov
int
and
and
std
bound
movsb
outsl
xchg
dec
mov
nop
test
mov
cmpsl
pop
sub
pop
adcb
mov
ja
cs
int3
dec
dec
faddl
cmpsl
cltd
fists
loop
lock
xchg
push
inc
jb
faddl
sbb
pop
push
sub
cmp
scas
sub
xchg
dec
adc
dec
sub
mov
sbb
dec
push
in
add
ljmp
fidivl
decb
bound
mov
test
fstpt
mov
inc
pop
data16
mov
je
insb
sbb
daa
out
sub
lret
adc
add
sub
sbb
sub
cwtl
inc
imul
ds
dec
arpl
add
leave
ret
sub
movsb
or
xor
ds
push
mov
or
idiv
adc
jne
pop
loope
enter
jge
sbb
push
ss
xchg
xor
mov
pop
mov
jb
mov
icebp
fcoml
dec
dec
subb
cmp
mov
test
adc
cwtl
mov
test
add
shrb
jno
adc
xchg
pop
mov
bound
test
dec
movsb
push
cld
jb
stc
jecxz
in
add
in
sbb
add
cmc
push
push
mov
dec
fadd
cmp
cmp
dec
repz
aam
pop
inc
cs
sub
out
fisttpll
lahf
xchg
sub
sub
clc
pusha
or
jmp
push
call
dec
lods
inc
push
clc
movb
pusha
sub
cmc
call
or
sub
cld
scas
or
fmull
or
jb
in
lock
movsb
stc
ss
sbb
and
call
into
xor
lret
dec
mov
enter
mov
mov
sub
stc
aas
daa
mov
clc
and
mov
ja
hlt
pop
movsl
inc
inc
jecxz
lock
stc
fstpt
push
add
jecxz
or
out
mov
lcall
out
jno
mov
and
jbe
ficoms
test
iret
and
adcb
test
dec
jl
icebp
sarb
cmp
fdivs
jle
mov
inc
andl
sub
pop
push
xchg
ffree
sbb
aaa
mov
xchg
sub
lcall
pop
icebp
repnz
pop
stc
mov
dec
fsin
sub
add
addr16
lods
sar
xor
enter
jge
push
subb
ret
sbb
insb
dec
sub
and
or
push
sbb
mov
dec
daa
dec
push
cli
enter
xchg
cltd
pop
pop
fdivs
mov
adc
dec
pop
mov
mov
pop
ja
lret
xor
cmp
sub
jns
sbb
repz
sbb
pop
in
or
sub
cltd
filds
jp
mov
cmc
inc
dec
imul
testl
dec
mov
fwait
shl
and
sub
call
push
clc
scas
cmp
call
and
inc
pop
ljmp
xchg
insb
jb
dec
pop
gs
ret
mov
icebp
cmpsl
popf
icebp
loope
lcall
test
lds
mov
push
inc
xchg
invd
fbld
mov
mov
push
xchg
mov
clc
adcl
test
sub
cmpsb
insb
stos
sub
sbb
fsubrl
or
push
and
sahf
das
jl
stos
add
out
ret
and
xchg
sbb
pop
mov
xchg
adc
clc
ret
jns
add
lcall
adc
clc
loop
lea
or
mov
jae
adc
int3
sbb
sub
push
stos
fistpl
xor
dec
sbb
or
jne
nop
in
pop
xchg
orb
mov
imul
and
cmpl
idiv
shrb
xchg
negl
sub
adc
idiv
xchg
call
adc
push
call
lret
js
cmp
lcall
hlt
mov
cld
mov
jecxz
xor
int
xchg
fwait
test
cmpl
pop
popf
pop
enter
dec
data16
in
add
add
mov
movzbw
bswap
pushf
mov
lea
pushf
xchg
movzbw
setnp
mov
pop
lea
movsbl
mov
call
and
sub
xchg
mov
xchg
sbb
jo
add
in
xchg
dec
cmp
push
rclb
or
sbb
sub
mov
push
adc
out
call
fsub
dec
sbb
mov
xchg
mov
jno
loope
xlat
fiaddl
shl
popa
in
mov
xchg
sub
sbb
mov
lock
aam
dec
mov
jne
or
mov
fcomp
mov
adc
jecxz
test
call
xchg
and
mov
add
outsl
mov
push
call
xchg
shlb
sbb
insl
sti
in
cmp
lret
push
ljmp
sbb
push
ljmp
out
std
lcall
adc
jbe
push
pop
adcl
jl
repz
pop
xchg
dec
jo
aas
or
int
and
add
xchg
mov
cmp
movsb
fwait
and
test
or
push
call
pop
sub
negl
call
or
aas
sub
loope
add
hlt
lods
fsub
sub
mov
notl
fidivs
or
lds
dec
in
cmp
push
pop
mov
mov
jb
inc
jo
xor
shl
push
dec
and
or
pop
mov
test
mov
push
popa
rcrl
mov
sub
jl
xchg
jbe
or
gs
sahf
leave
pop
popa
adc
cltd
pop
lock
std
mov
push
xlat
dec
jnp
adc
call
add
push
call
shll
push
call
test
lcall
pop
sub
fsubrl
sub
push
ljmp
push
test
enter
inc
mov
mov
shrl
pop
cmp
shr
stos
mov
fcoms
sbb
sti
add
sub
cmp
xchg
fldl
mov
sub
sub
fstp
js
subl
push
push
stos
sbb
mov
aam
add
mov
pop
int3
shl
dec
xchg
pop
and
fdiv
mov
pushf
xor
bt
add
call
mov
sbb
adc
imul
cmp
jg
add
dec
scas
cmp
filds
ret
mov
inc
sub
insb
adc
cmp
cmp
add
mov
aad
movsb
inc
psllq
mov
sti
push
mov
orl
aam
sahf
pop
cwtl
add
test
stos
push
call
js
out
add
xor
out
lcall
f2xm1
mov
or
sub
out
lret
inc
test
sbb
dec
adc
and
mov
je
add
sbb
popa
imul
imul
clc
mov
ja
out
sarb
cmc
sahf
in
ja
jge
sub
push
sahf
xchg
sub
sbb
mov
sub
cmc
cwtl
in
and
xor
mov
insl
jge
lret
testb
cs
lods
loopne
and
insb
fidivrl
sbb
xor
daa
lahf
loope
lods
clc
aas
xor
jmp
sub
leave
sbb
or
sbb
roll
jmp
int
xlat
andl
cmp
xor
arpl
dec
adc
pusha
dec
or
cld
dec
or
mov
push
push
idivb
push
call
mov
pop
dec
call
ss
xchg
movl
mov
pushl
popl
pushf
pushl
pushl
ret
pop
adc
cmpsb
rorl
popa
mov
imul
xlat
outsl
fiaddl
push
push
pusha
mov
push
je
daa
fcoml
pop
shlb
repnz
jnp
xchg
jnp
cs
push
das
fdivrs
mov
jno
add
and
jl
sbb
mov
mov
cmp
mov
add
lock
ss
jg
inc
mov
idivb
ljmp
cmp
sub
pushf
pushf
repnz
pushl
call
push
call
cmp
test
movsb
fildl
xor
jmp
ret
mov
es
pop
inc
push
leave
mov
add
clc
cmp
lock
inc
jns
dec
and
subb
in
xor
xchg
adc
sbb
lahf
sahf
sbb
out
cmp
xor
out
bound
shll
sub
inc
mov
test
xor
aaa
cs
sar
shl
xchg
mov
cmp
out
pop
inc
lods
push
xchg
movsb
loope
not
inc
fcomps
cld
sub
jne
ss
inc
cmp
clc
repz
adc
xor
stos
mov
popa
add
subb
xor
xchg
lret
sub
push
dec
inc
or
sbb
jle
das
out
add
fdivr
sbb
add
ret
mov
ss
dec
imul
adc
hlt
imul
jg
sbb
add
jb
mov
push
clc
push
mov
or
push
and
jb
cmp
xor
mov
sbb
inc
nop
out
je
or
inc
data16
adc
repz
push
xchg
cmp
jge
mov
pop
call
idivb
sub
add
idivl
add
mov
mov
dec
and
imul
mov
neg
cmp
loope
push
inc
flds
repnz
std
rclb
cmpl
jo
mov
jnp
decb
scas
or
push
mov
ds
out
out
enter
and
jle
mov
repz
popf
rorl
pop
insl
xor
push
out
pop
dec
mov
add
bsr
rcr
sub
mov
cmp
mov
rol
and
cmc
mov
rcl
rcl
sub
lea
call
lea
loopne
mov
loope
add
cmp
push
jmp
scas
or
icebp
loopne
loopne
ret
or
les
ljmp
dec
in
xor
bound
xchg
les
and
push
out
push
sub
xor
cmpsb
jg
push
or
push
js
sub
fs
call
adc
inc
and
push
add
jmp
xor
mov
inc
sti
mov
insb
aaa
dec
repnz
add
and
jl
bound
aam
add
jecxz
into
xor
cwtl
cwtl
fsubs
data16
popf
cmp
push
orb
sbb
ljmp
scas
mov
dec
gs
jl
and
xchg
xor
mov
cmc
rorb
xchg
cltd
das
out
xchg
mov
inc
cmpsb
mov
xchg
push
addb
scas
hlt
push
pusha
pushl
clc
pushl
popf
movb
pushl
lea
jmp
push
call
es
fucomi
fimuls
ljmp
idivl
add
or
out
inc
lcall
dec
and
mov
xor
mov
into
andb
cmpsb
dec
jmp
add
ja
les
mov
leave
mov
adcl
call
aad
and
sbb
lret
xchg
xor
dec
mov
scas
cli
mov
imul
out
push
fnstcw
xchg
push
mov
testl
scas
mov
add
iret
scas
test
cld
jl
sti
es
or
lcall
add
mov
mov
cltd
jae
lea
cwtl
push
xor
adc
outsl
inc
out
fistpl
das
rolb
subb
xor
inc
mov
pop
pop
movsb
add
sbb
sub
pop
in
scas
rorb
dec
jne
cmc
decb
call
es
xlat
addr16
loopne
fmuls
add
lcall
and
test
dec
push
add
or
pop
lcall
cmpl
fistpll
ret
sbb
jno
jnp
push
in
dec
jp
and
aam
xlat
in
mov
aaa
cwtl
cli
cmp
nop
xchg
mov
mov
or
clc
inc
clc
iret
mov
xor
jae
inc
in
arpl
scas
js
mov
decb
popa
or
lcall
xor
dec
mov
inc
add
pop
sub
xlat
or
sub
xor
negl
add
jecxz
adc
sub
fldcw
adc
mov
xor
cmp
jmp
or
ja
ret
pop
pushf
testl
lds
pusha
ja
shr
insb
mov
out
pop
popa
jo
lea
fdiv
int3
lock
xor
fsubrs
push
inc
pop
and
adc
in
cmp
xor
repz
ja
pusha
stc
bt
sub
sub
stc
mov
pusha
add
add
bsf
shl
mov
pusha
pusha
call
cmp
sar
xlat
sub
mov
mov
push
mov
jle
in
int3
pusha
and
mov
dec
mov
loopne
cltd
xlat
test
rol
and
or
cs
aaa
pop
call
ficomps
xchg
sbb
xor
and
mov
bts
lea
add
adc
rcl
push
inc
mov
rol
pushf
mov
test
push
repnz
movb
lea
jne
pushf
lahf
movb
setge
cwtl
mov
pushf
mov
pushl
lea
jmp
mov
push
add
test
push
jmp
sub
mov
lcall
mov
jno
jne
jbe
jl
dec
ljmp
dec
cmp
das
push
inc
pop
push
pop
out
sub
ss
mov
ror
btr
stc
rorl
vmovdqu
jmp
cmp
in
or
dec
fidivrl
dec
mov
dec
push
and
std
cmp
notl
rorb
add
add
ret
and
lea
jmp
sub
push
push
lcall
xchg
mov
sbb
sub
inc
jmp
sub
mov
je
negl
fwait
pushf
jbe
ret
dec
sub
mov
pop
jne
fsub
dec
js
cmpb
jle
sub
inc
add
orb
mov
aas
sbb
in
mov
rorl
cltd
xchg
mov
mov
pusha
push
lea
jne
not
sub
rol
inc
shrd
setge
mov
cmc
add
shr
not
cmp
shr
mov
pusha
test
push
lea
je
pushf
test
sub
cmc
stc
cmp
pusha
lea
ja
stc
call
lea
jne
test
stc
popf
push
mov
pushl
pushf
lea
jmp
push
call
movsb
fwait
popa
pop
sbb
test
movsb
ret
adc
std
lock
sub
cwtl
test
hlt
pop
xchg
push
jo
xor
inc
data16
cltd
rcrb
push
push
ffreep
xchg
hlt
cwtl
mov
mov
fbstp
aaa
sub
or
adcl
aam
push
xor
and
jo
jecxz
and
rorb
js
imul
sub
das
idivl
add
lock
insb
fcompl
sbb
sub
pop
or
pushf
int
mov
push
scas
adc
ds
mov
sub
stos
push
fnstcw
mov
xchg
push
jb
xchg
mov
daa
jo
dec
and
cmc
test
js
xor
and
mov
push
mov
mov
sbb
xchg
mov
xor
and
sti
mov
fistpll
enter
add
xchg
sbb
dec
test
loopne
neg
bound
and
out
nop
popa
sbb
push
mov
movsbw
mov
lea
jnp
pushf
pusha
movzbw
mov
mov
mov
pop
mov
call
push
call
cmp
push
mov
out
negb
add
es
jg
add
sbb
test
repz
les
add
adc
test
test
push
adc
lock
mov
lods
arpl
mov
clc
add
in
sub
xchg
pop
lahf
ret
outsb
shlb
add
fs
dec
mov
pushf
xchg
data16
and
adc
inc
mulb
push
test
idivb
jl
pop
jl,pn
push
or
ds
cmp
mov
and
ret
ret
mov
not
cwtl
jmp
push
call
sub
movsb
add
movl
movzbw
bswap
setg
movzbl
lea
push
pusha
pushf
movl
call
push
call
jecxz
push
call
cmp
addr16
call
ret
imul
push
mov
leave
sbb
dec
push
ret
popf
xchg
cmpsl
lret
pop
outsl
int3
andl
fimull
lea
mov
adc
lods
pusha
pop
rolb
enter
aam
std
pop
xor
repz
mov
and
cli
insl
sbb
mov
jno
adc
xchg
push
adc
push
mov
mov
cmc
subl
pusha
xchg
sbb
push
call
inc
cmc
push
call
mov
sbb
aad
xchg
jmp
call
fisttpl
xor
inc
jae
lret
jnp
sub
jecxz
nop
mov
insl
pusha
lods
clc
jmp
lock
cmp
out
cmp
inc
mov
repnz
sub
push
clc
ret
filds
sbb
stos
lea
repz
das
andb
mov
jmp
call
mov
negb
lcall
nop
cmp
in
add
cmp
stos
fmull
mov
push
lahf
in
mov
jle
xchg
mov
fs
adc
addr16
inc
xchg
mov
icebp
jp
sbb
ret
dec
push
xchg
test
cld
mov
mov
popf
imul
sbb
mov
jbe
hlt
imul
mov
insl
xor
das
sub
pop
je
scas
lock
sahf
or
cmpsl
in
repnz
idivl
mov
std
lock
jnp
and
fwait
das
scas
sbb
jno
in
add
add
ret
loope
xchg
and
xchg
sti
in
outsl
sub
insl
mov
adc
xor
xchg
ret
push
ret
pop
and
insl
arpl
xchg
inc
cmp
jns
pop
jmp
lret
mov
push
and
push
lods
xchg
mov
lcall
add
int3
mov
lcall
test
adc
lea
mov
push
push
push
lea
call
call
push
call
pop
icebp
stc
sbb
sbb
xchg
dec
mov
sub
jae
pop
ja
les
std
xchg
lock
or
popf
cld
int
xchg
cwtl
or
cmp
mov
daa
mov
mov
mov
xlat
push
mov
cmp
inc
push
int
pop
fnstsw
sub
shr
nop
fs
cmpsl
int3
outsb
daa
mov
mov
sub
aas
push
xchg
sub
mov
int3
out
inc
inc
jb
test
pop
or
inc
arpl
movzbw
lea
movzbw
lea
mov
movsbl
pusha
movzwl
lea
pop
not
movw
lea
call
test
call
push
call
xor
outsb
jne
pop
lcall
jmp
lcall
mov
rcll
dec
scas
adc
lret
xchg
aad
out
jg
movsl
sub
fstl
adc
andb
cmc
stos
andl
aad
es
adc
cmpsl
scas
mov
cmpsl
dec
jmp
ficoml
imul
add
pop
mov
lret
daa
enter
and
mov
sub
lock
stos
sbb
push
adcb
or
pushf
arpl
lods
lods
cmc
outsl
cs
mov
push
push
call
push
icebp
negb
add
pop
in
and
push
call
lret
dec
mov
mov
cmp
and
add
jecxz
mov
outsl
call
xor
xchg
popf
push
out
rcll
lcall
adcl
push
les
inc
inc
popa
pop
imul
mov
add
fldl2e
xchg
fsubr
sarb
dec
fnstcw
sbb
cwtl
imul
sub
hlt
inc
dec
push
mov
or
jno
shrb
faddl
pop
sub
ds
lcall
pop
xchg
lahf
lea
xchg
mov
add
dec
sbb
jecxz
sub
mov
pop
pop
fs
lcall
push
inc
push
push
and
xor
jecxz
inc
cltd
repnz
lods
mov
and
in
adc
stos
movsb
mov
aaa
test
rorl
test
nop
lret
mov
movb
cmp
fisttpll
inc
or
jns
cli
push
cmp
push
nop
inc
aad
jl
loope
inc
stos
out
and
fildll
les
in
sbb
jne
inc
mov
fadds
mov
jb
fistps
lcall
hlt
mov
mov
lea
fimuls
sbb
leave
cld
mov
lahf
add
adc
mov
mov
out
aas
arpl
adc
fsubs
add
xor
mov
mov
dec
jbe
hlt
mov
push
jo
and
jbe
in
pop
sub
arpl
sub
mov
jmp
push
call
shlb
neg
vunpckhps
add
insb
clc
pusha
jmp
aas
mov
xor
lea
cmp
loop
dec
stos
test
push
pop
mov
pop
mov
je
push
scas
cmp
movsb
adc
das
and
out
outsb
mov
es
adc
mov
or
xor
fisubl
mov
inc
loop
clc
sahf
push
cmp
cmpsl
test
dec
call
in
icebp
add
lret
adcb
pop
mov
imul
inc
or
inc
dec
aaa
gs
cmc
cld
xchg
inc
subb
out
sbb
stos
adc
mov
vmovdqa
inc
and
jo
cmp
xor
in
enter
jle
out
lret
mov
fcoml
outsb
enter
mov
add
ret
inc
imul
mov
xor
pop
negl
scas
call
inc
mov
push
push
call
out
mov
push
pushf
push
lea
jmp
lea
jae
jmp
push
call
popl
xchg
xor
push
imul
add
jno
add
push
add
gs
add
jno
add
push
add
cmp
pop
add
push
add
add
jno
add
push
add
jno
add
push
add
ja
add
jno
add
add
add
add
add
jno
add
add
add
add
add
pop
pop
add
pop
add
add
add
add
add
jno
add
add
add
add
add
or
pop
jno
add
add
add
add
add
jno
add
add
add
add
add
dec
or
push
imul
fdivrs
jo
pop
add
add
add
add
add
cmp
pop
add
imul
pop
gs
add
add
cwtl
lea
pusha
call
push
call
gs
lods
and
adc
sub
pusha
xor
stc
mov
inc
add
stc
rol
and
sbb
dec
neg
add
ja
xor
rcr
jmp
push
call
imul
add
sbb
cmc
push
adc
enter
arpl
cmpsb
bound
and
sbb
push
fadd
adc
jae
dec
pop
jno
in
xchg
cmp
mov
xchg
call
pushf
lods
fwait
test
jb
mov
movsl
lcall
shlb
je
mov
xor
push
les
add
or
lcall
stos
xor
dec
cmp
imul
enter
sbb
mov
sub
mov
movsb
nop
mov
ficomps
jnp
dec
les
dec
ret
mov
cmp
jle
dec
mov
sbb
cmp
jge
push
ljmp
clc
sarb
call
and
mov
jecxz
sahf
dec
cmc
add
sub
mov
xor
in
lret
xchg
mov
pushf
jno
imul
inc
sub
add
mov
cmp
enter
mov
adc
adc
sub
xchg
sub
pop
imul
out
jo
test
imul
sbb
in
test
repz
mov
fiaddl
push
jle
mov
nop
arpl
add
adc
ret
stos
pushf
les
mov
mov
xlat
popa
dec
push
sbb
fnsave
cmp
pop
and
push
call
cmp
lcall
repnz
inc
cmp
repnz
inc
stos
repz
cli
data16
aas
lret
movsb
pop
ljmp
iret
notl
test
scas
sbb
cltd
jmp
lret
jns
or
cmpb
xchg
mov
xlat
iret
jb
jo
inc
iret
jecxz
ss
popa
add
jp
push
nop
sub
xor
dec
push
push
inc
push
cmp
cs
insb
add
sbb
add
jno
decl
lea
movsbl
mov
pop
push
jmp
push
call
xchg
sbb
inc
dec
xor
cs
insb
add
stos
push
adc
jae
scas
push
sbb
popf
rclb
inc
mov
loopne
scas
in
lret
lret
shrl
dec
aaa
inc
xor
push
lock
scas
and
jmp
jno
mov
mov
arpl
xchg
ljmp
and
shl
xor
bswap
add
js
movsl
xor
jle
out
or
mov
mov
mov
adc
jno
jnp
rcrb
icebp
mov
add
mov
inc
push
call
lods
shlb
and
pusha
clc
clc
cmpb
call
push
call
pop
int3
lahf
and
iret
ror
cmc
mov
add
sub
mov
pusha
repnz
call
pusha
pushf
lea
jne
call
jmp
jmp
push
call
ljmp
aad
jns
pop
sub
and
xor
push
inc
mov
inc
fidivrs
insb
in
out
rclb
jb
mov
and
rcll
xchg
aad
xchg
xlat
in
inc
std
cli
les
ret
call
jecxz
mov
imul
push
lcall
mov
loopne
xchg
lcall
add
test
xchg
aas
fidivrs
cmp
cs
ret
test
sub
inc
mov
xor
mov
lcall
arpl
sbb
aas
adc
je
sahf
fbstp
dec
outsl
sahf
imul
test
jge
fnstsw
in
sbb
shlb
loope
dec
adc
sbbl
pop
imul
popa
in
lret
repnz
xchg
adc
out
fisubrs
xchg
push
call
mov
hlt
pusha
bt
shl
mov
movw
lea
je
call
push
call
lret
pushf
lea
push
movl
pushf
pushl
popl
pushf
pushl
ret
push
call
inc
arpl
negb
add
mov
push
call
pop
cmp
sbb
lea
mov
outsl
pop
inc
test
xlat
mov
je
add
fldt
stos
inc
mov
xchg
sbb
sar
adc
popf
scas
push
add
int
fcoml
into
xlat
stc
mov
into
mov
cli
inc
push
fisubrl
mov
lcall
leave
loopne
and
or
jmp
mov
cmc
data16
in
js
icebp
test
inc
xchg
push
test
in
xor
adc
cltd
scas
loop
test
fs
ds
lcall
enter
xchg
pop
mov
mov
cmpb
push
sub
test
add
bound
shrl
jge
rcrl
or
mov
idivb
jp
insb
jbe
daa
mov
lea
ret
push
lea
jne
pushf
pushf
movb
pusha
pushl
ret
inc
or
dec
and
cltd
or
mov
push
jo
out
adc
mov
in
cli
xorl
jmp
fildll
mov
clc
inc
out
filds
scas
cltd
mov
xor
sub
dec
or
xchg
test
mov
fnstcw
imul
adc
adc
push
mov
sbb
push
mov
and
cs
or
or
sbb
insb
pop
mov
jbe
sub
cld
mov
sub
sahf
push
pop
xor
int
xor
dec
or
inc
sbb
jns
sbb
in
cmp
dec
addr16
clc
dec
cwtl
mov
sub
and
fidivs
or
out
shr
push
xor
jp
inc
sti
xor
push
sbb
scas
add
push
and
js
int3
inc
in
mov
das
imul
xor
push
mov
add
push
std
out
mov
and
jne
jmp
test
sbb
enter
subl
or
dec
fnstsw
ss
test
ss
pusha
pop
int
mov
jl
cmovs
xchg
dec
push
subl
mov
aad
loopne
out
aad
scas
dec
xrelease
cltd
sbb
test
add
xor
sub
out
nop
addb
mov
dec
lods
push
lcall
or
inc
sub
negl
mov
add
dec
arpl
push
call
ret
punpcklbw
test
add
stc
push
pusha
cmp
movw
lea
je
push
pusha
push
lea
jmp
test
pushf
shl
setbe
call
xor
mov
pushl
pushl
mov
jmp
sub
aas
or
mov
in
pop
cmp
in
sub
fs
orl
mov
adc
cmp
pop
inc
adc
pop
adc
push
pop
ret
jbe
jp
lcall
push
xchg
je
scas
xlat
ret
adcl
outsb
cmp
jno
shl
shrb
push
fisttps
int
push
or
scas
push
inc
or
xchg
test
leave
xchg
repnz
pop
add
inc
andl
sbb
cs
movsl
das
or
push
adc
in
sbb
movsb
ss
dec
mov
int3
loop
jno
dec
insl
orl
adc
jae
movsl
jp
mov
push
pop
mov
mov
dec
in
mov
sti
out
iret
mov
out
push
mov
loopne
xor
stos
pop
ja,pn
and
movsb
xor
or
shl
and
mov
and
cmp
push
fidivl
out
sub
mov
andl
xor
cmp
or
data16
pop
aaa
or
xor
lahf
cmp
xor
add
add
negl
add
int
movl
pushl
push
pushf
mov
mov
pushf
mov
pushf
pushl
ret
push
call
mov
scas
push
call
mov
iret
icebp
or
outsl
mov
dec
adc
push
mov
in
push
xchg
sub
pop
cmc
pop
inc
push
inc
jnp
or
decl
sbbb
cs
int
ds
cmc
xor
cltd
mov
imul
push
cmp
cmp
mov
add
xor
mov
stc
cmp
push
xchg
add
push
icebp
adc
sbb
inc
lods
mov
push
dec
pushf
int
insl
mov
les
mov
or
lahf
xor
pop
int3
cmpsb
loop
pop
ljmp
xorl
xchg
pop
es
push
arpl
nop
addl
pop
iret
xorb
mov
inc
shrl
add
pop
clc
mov
movb
adcb
lret
jmp
jo
inc
inc
pop
pushf
cmpsl
ljmp
imul
jo
ret
leave
imul
faddp
inc
and
add
add
pusha
xchg
movsbw
movl
pusha
seta
lea
jmp
xchg
out
lcall
call
sbb
push
xchg
jl
mov
in
daa
aam
mov
aam
cmpsl
jnp
push
xchg
lea
and
roll
movsl
jb,pt
jbe
dec
push
loop
out
test
push
add
mov
dec
scas
rorl
call
ss
pop
lcall
int
jl
mov
pushf
andb
test
sbb
and
sahf
popa
mov
or
shlb
adcl
int3
push
arpl
mov
inc
or
add
dec
push
mov
xchg
imul
ja
pop
jmp
lret
pop
lcall
call
sub
negl
add
js
lds
negb
call
sbb
mov
push
lcall
xlat
and
addr16
icebp
dec
in
xchg
push
mov
aaa
jmp
in
sbb
test
aas
pop
inc
dec
mov
mov
sahf
mov
enter
call
cld
xor
into
int
movsl
testl
add
mov
jb
and
add
lods
sub
or
and
aas
xchg
addr16
xchg
cltd
je
mov
sbb
cmp
inc
pop
add
and
xchg
push
pop
mov
out
fisubrs
loop
ds
int
jmp
push
mov
pushl
popf
pusha
push
lea
jmp
push
call
mov
pop
popa
arpl
insb
outsb
add
add
inc
lea
jae
cmc
bt
jmp
push
call
addr16
cmc
stc
add
mov
jmp
xchg
pushf
lea
ja
dec
jmp
push
call
std
dec
mov
sub
test
jmp
mov
btr
pusha
mov
setle
btc
or
shr
sub
push
movzbw
shl
shr
add
rcl
rcl
stc
mov
btc
add
bt
and
rol
mov
add
neg
xor
mov
pushf
shr
clc
pushf
pushf
cmp
pushf
pushf
jmp
fdivl
lcall
mov
fidivl
jl
daa
push
and
pop
and
nop
adc
jae
scas
inc
daa
arpl
leave
sub
push
loopne
jno
test
imul
sbb
mov
push
mov
test
jmp
lods
pop
mov
and
jmp
lret
add
push
insb
mov
add
insl
sub
cmp
dec
dec
dec
cs
insb
add
idivb
add
into
lea
jae
jmp
push
call
rol
call
jmp
push
call
push
sub
sub
call
sbb
lods
ja
stos
push
mov
ljmp
decl
push
mov
inc
fcomps
mov
inc
or
jne
mov
pushl
mov
inc
gs
clc
xchg
xchg
adc
call
mov
cli
mov
sub
daa
dec
xor
sbb
pop
sbb
or
mov
push
lahf
testb
mov
xor
pusha
adc
aad
mov
cwtl
mov
sub
mov
pop
pop
add
pop
pop
cmp
mov
in
mov
add
out
loop
adc
fs
bt
call
cmp
add
pushl
pushf
jmp
push
call
xchg
movzbw
pusha
lea
movzbl
push
pusha
pushf
movzwl
pop
movzbl
lea
movsbl
pushf
mov
jmp
push
sub
cs
sbb
push
jmp
sbb
pop
mov
mov
xor
repnz
out
cli
js
adc
iret
jle
sub
and
shlb
xchg
ds
hlt
shl
in
ret
or
shll
sarl
les
push
push
pushl
add
mov
ret
lret
out
pop
add
je
inc
fists
dec
les
loopne
scas
xchg
mov
push
call
mul
pop
cmpsb
sbb
lcall
test
movsl
inc
dec
and
in
test
fisttpl
mov
ja
loope
dec
out
lret
out
mov
out
movq
bound
push
iret
lds
cmp
shll
outsl
adc
or
add
bound
mov
jge
jb
shrb
or
jp
push
stc
push
add
cld
sub
pop
push
insl
mov
inc
nop
fnsave
sub
inc
pop
mov
cltd
cs
pop
test
out
enter
sarb
orb
add
push
fstps
filds
cwtl
mov
loope
clc
sbb
and
push
fdivrl
cwtl
jae
adc
idivl
adc
pop
xor
jle
add
mov
int3
int3
push
inc
sahf
clc
subb
sti
xchg
adc
jno
loopne
lret
sti
lds
or
add
sub
or
adc
stc
bsf
mov
push
test
clc
test
shr
stc
push
push
cmp
call
shl
filds
lcall
out
push
and
lods
fldcw
mov
jbe
mov
loop
cmp
inc
call
lcall
insl
sub
shl
mov
aad
jns
filds
adc
xor
or
add
sub
ret
mov
gs
insb
inc
js
arpl
gs
add
clc
lea
jl
cmp
call
cmp
pusha
push
lea
jb
bt
cmp
call
call
addl
sbbb
mov
out
cmp
adc
aad
icebp
and
lahf
std
push
cmp
jge
testb
pop
lcall
call
in
sub
adc
adc
add
push
fildl
aas
in
fists
rcll
outsl
dec
mov
int
xchg
popf
sbb
fs
mov
push
mov
jmp
sub
ret
sbb
fildll
inc
sbbb
daa
in
cli
push
call
js
sahf
inc
jnp
lcall
loop
xor
les
push
ds
xor
xor
and
out
call
lea
mov
mov
mov
lds
push
sub
andl
sub
loop
mov
pop
pop
rcrl
fidivrs
sbb
nop
mov
xchg
stos
jp
mov
mov
push
add
shll
inc
xchg
in
fs
aas
daa
dec
les
pop
repnz
and
ret
pushf
pop
test
mov
dec
shll
add
push
call
cmpsb
daa
mov
cmc
add
cmp
bt
movzwl
lea
add
mov
cmp
add
test
clc
jmp
push
call
cmpl
sbb
add
mov
ret
out
cmc
movsl
popf
ret
dec
arpl
mov
cmp
push
imul
rclb
and
add
push
pop
dec
xor
lea
and
movsb
or
mov
insb
adc
cli
mov
fdivp
pop
fcomi
mov
inc
insb
or
clc
pop
in
xchg
sbb
jmp
idivb
mov
psubsb
inc
mov
and
ror
js
pop
jno
subl
neg
cmp
jmp
push
call
mov
cltd
sbb
mov
xchg
jb
cmp
aaa
aas
popa
arpl
fnsave
jne
mov
or
xor
and
cmp
sbb
stc
xchg
out
push
es
pop
leave
jne
xor
xor
add
or
les
pop
pop
outsl
and
mov
mov
les
push
enter
in
add
cld
into
cmp
mov
cmp
mov
and
sbb
std
jno
mov
scas
das
aas
sbb
xchg
clc
or
xor
lods
sbb
pop
and
mov
mov
mov
movw
pushl
ret
stos
movw
mov
lea
jmp
push
call
out
mov
lahf
out
call
mov
jne
movb
push
lea
jne
setge
lahf
seto
sub
xor
adc
btc
mov
adc
not
add
ror
mov
clc
jmp
push
call
mov
not
pop
mov
movb
pushl
ret
push
call
pop
jp
call
jmp
lea
je
jg
push
movw
cmc
sub
cmc
bt
clc
cmc
cmp
call
jmp
notb
std
cltd
sbb
mov
imul
ret
loope
hlt
push
xchg
adc
mov
shll
jne
jecxz
ffree
mov
fldt
or
add
add
dec
insl
gs
xchg
mov
pusha
lds
les
or
aad
jnp
testl
mov
loopne
repnz
punpckldq
arpl
ret
jmp
xor
clc
mov
stc
insb
pop
test
adc
sub
dec
cmp
imul
sbb
and
negl
call
in
and
sar
xor
movl
call
das
add
cld
cltd
sbb
xor
pop
es
or
leave
out
lods
or
push
stc
dec
or
xor
mov
jno
into
lds
adc
mov
insb
mov
xor
rclb
inc
bound
and
lret
jo
jp
cmpsb
xchg
xchg
enter
mov
andb
xor
adc
lcall
bound
and
jne
push
pusha
pop
movzbl
movb
call
nop
inc
mov
cltd
sbb
and
fistpll
and
insl
movsb
lea
lret
mov
xchg
aas
pop
jae
fcomps
dec
mov
adc
mov
cmp
jge
xor
sbb
cld
sub
addb
dec
mov
clc
or
sub
pop
dec
lods
jge
cltd
sbb
sub
pop
arpl
adc
pushf
in
sbb
and
sub
jno
fs
iret
push
in
les
inc
pop
stos
xor
or
repz
data16
inc
outsl
push
sti
cltd
sbb
fisubl
and
call
je
cmpsb
jae
sbb
mov
mov
or
test
jb
in
cwtl
cmp
push
leave
shlb
mov
pop
loopne
dec
add
sbb
push
sub
stc
in
fisubrs
xchg
sub
xor
cltd
sbb
xchg
mov
mov
xor
dec
and
leave
xor
xchg
icebp
icebp
sahf
sub
in
scas
shrb
scas
dec
sbb
mov
inc
mulb
outsb
and
push
ret
push
xchg
repz
imul
xor
xchg
je
in
mov
jl
adc
mov
rcr
or
xor
or
push
mov
pushf
pushl
ret
push
call
cmp
xor
fists
add
pushf
push
pushl
popl
pushf
movb
movb
pusha
pushl
ret
mov
cltd
sbb
push
icebp
xor
xchg
mov
push
loope
sub
ds
popl
mov
cmp
scas
jne
and
sub
sub
sbb
xchg
push
in
adc
dec
cmp
xchg
push
lock
mov
push
addr16
jno
nop
jne
cmpl
cmp
movl
pushf
pushl
popl
pusha
pushf
push
push
pushl
ret
fidivrl
stc
cltd
sbb
adc
xor
sbb
orl
jecxz
out
test
pusha
mov
pop
clc
xchg
roll
and
jge
push
jo
fldl2t
int3
cmpsb
dec
cmpsb
push
icebp
push
insl
ja
das
ss
test
pop
add
idivl
insb
sti
sbb
test
in
repnz
hlt
movsl
lahf
mov
dec
sub
adc
ds
mov
dec
cmp
fldenv
dec
rorb
push
imul
add
jb
repz
sbb
jno
dec
sbb
dec
jbe
dec
stc
cltd
sbb
movsl
or
ds
inc
js
out
cmp
es
ds
xor
adc
mov
cld
push
xor
jno
xchg
and
test
popf
stos
iret
insb
rol
pushf
jbe
jmp
mov
add
dec
int3
loop
inc
push
stc
or
or
push
xor
adc
cmpsl
daa
into
iret
mov
push
push
dec
negb
sbb
and
dec
sbb
mov
pop
ret
gs
cmpl
push
push
xchg
dec
int
iret
cmpsb
or
out
mov
mov
inc
cmpsl
jnp
jg
xor
jb
loop
mov
adc
cmpsb
test
mov
aas
or
mov
adc
adc
xchg
cli
mov
jno
push
call
mov
out
push
call
xlat
pop
into
jp
cltd
sbb
xor
fcoml
in
es
jbe
aad
and
lods
sbb
jnp
inc
adc
mov
in
inc
fistl
add
lahf
and
jmp
stc
hlt
lea
jle
cmp
push
add
sub
mov
cld
push
push
inc
push
pop
loop
push
pop
clc
fldt
pop
ficomps
dec
or
xchg
pop
rorb
xchg
mov
pop
loop
mov
inc
bound
jp
sub
jns
movsb
add
dec
mov
cmc
negb
call
mov
jmp
mov
stc
negb
dec
call
add
push
cltd
rcll
cltd
sbb
xchg
ljmp
adc
xchg
ss
call
dec
push
in
imul
add
cmp
xor
sub
sub
jle
push
jne
scas
dec
pop
jge
fcoms
imul
out
mov
shrl
loop
stos
in
xor
xor
xor
fildll
call
adc
xchg
hlt
xor
xchg
sahf
sub
jbe
in
and
rorl
movsb
faddl
sbb
dec
loope
sub
es
add
shlb
or
xchg
mov
or
push
dec
push
call
ds
cmc
sbb
neg
ss
popf
cmpsb
mov
xchg
push
call
aas
dec
mov
pushf
lea
jae
test
sub
pushf
push
mov
lea
call
push
call
movl
pushl
pushf
lea
pushf
jmp
push
call
fsubs
mov
movzwl
not
or
or
cmc
mov
test
pushf
mov
movb
add
stc
cmp
movb
mov
cmp
movw
test
pushf
jmp
call
push
inc
mov
int
test
hlt
int3
and
idivl
outsb
out
js
clc
cmp
pushf
xlat
insl
adc
mov
add
int
mov
sub
cmpsl
adc
and
call
mov
pop
mov
sbb
testb
mov
cltd
sbb
adc
inc
inc
and
jmp
and
inc
in
xchg
mov
push
es
jb
xchg
fwait
lret
pushf
call
pop
xchg
out
test
loop
sbb
sub
shlb
cmc
xor
lret
jecxz
stc
sbb
insb
add
shl
jae
inc
inc
sbb
fnstsw
cmp
shrd
jns
mov
test
in
mov
cmp
push
dec
add
mov
clc
push
cmp
bt
push
call
divl
cmc
cltd
sbb
push
ret
nop
shll
clc
pop
jl
jo
sbb
gs
adc
xchg
jb
mov
push
mov
dec
pop
lahf
imul
shrl
pop
mov
sbb
cmc
inc
sub
hlt
mov
push
or
add
fdiv
cltd
sbb
int3
pop
cmp
mov
cmp
sahf
mov
imul
sbb
sbb
or
dec
cmp
mov
dec
xchg
xor
pop
mov
loope
bound
dec
pop
aam
imul
test
push
add
andb
loop
arpl
xor
pop
cmp
aad
pop
mov
pop
dec
add
insl
lea
out
lahf
or
jns
dec
shll
ret
roll
je
addb
test
movsl
movsl
push
fdivrs
pushw
pop
add
xchg
aas
je
xchg
pop
dec
mov
and
fs
adc
je
jle
inc
pop
int
mov
or
lea
pop
ret
loop
nop
inc
mov
mov
mov
lahf
inc
dec
pop
outsl
nop
ficompl
pop
lock
mov
or
pop
cmp
daa
data16
lods
push
call
hlt
mov
lea
ja
ror
lea
lea
add
add
xadd
shr
movzbw
mov
xor
cmp
cmp
cmp
add
lea
lea
test
bsf
mov
cmc
pushf
pusha
cmp
cmpsb
pusha
jmp
push
call
loope
lea
call
pusha
pushf
mov
lea
jne
movzbw
not
mov
push
pushl
pushf
lea
jmp
or
pusha
jmp
mov
not
pusha
movzbw
lea
lea
jge
pusha
movl
jmp
lea
jne
bsf
add
add
bts
mov
test
pusha
cmc
add
test
movzwl
rol
rol
mov
clc
cmp
bt
jmp
bt
add
pushf
movl
push
lea
jmp
push
call
scas
je
pop
push
call
jg
lea
jb
call
adc
call
sbb
mov
cltd
sbb
movsl
int3
mov
add
lahf
push
xchg
jne
loope
add
xor
cmp
push
data16
push
es
sahf
into
jbe
inc
outsl
cmpsl
dec
scas
js
je
stc
dec
pushf
cmp
jnp
fldt
add
in
dec
pusha
clc
popf
sbb
in
jns
and
loope
mov
into
das
xchg
not
mov
call
dec
or
repnz
sbb
test
cmp
pop
push
or
sbb
imul
test
clc
mov
jo
adc
mov
push
fidivrl
cmp
sbb
jne
test
scas
fwait
jbe
pushf
jo
imul
adc
movsl
pop
xor
out
testl
js
push
mov
nop
add
mov
scas
add
outsb
or
mov
xchg
mov
and
jl
inc
mov
imul
push
inc
ljmp
mov
dec
cmc
das
mov
cmp
cli
or
std
shlb
xchg
and
stc
sarl
cs
mov
jne
ss
sarl
cs
lds
push
call
test
ss
sub
add
push
xor
jp
cltd
sbb
movsb
cmp
dec
mov
adc
jecxz
mov
into
dec
outsb
push
mov
loopne
aaa
pusha
cmp
sbb
cmp
aam
cmpsl
inc
fisttpll
std
fwait
icebp
in
mov
enter
jns
out
dec
add
dec
push
out
stos
jbe
jns
xchg
popa
test
fwait
jne
sub
pop
push
jnp
cltd
popf
mov
or
jmp
call
push
call
in
out
shl
cltd
sbb
outsb
cmp
enter
and
pop
inc
mov
jbe
data16
xchg
movsl
or
enter
adc
cmp
imul
rol
push
out
into
out
push
pop
push
sti
loopne
xchg
je
adc
jbe
mov
movsl
rcll
test
cltd
sbb
push
push
in
jecxz
scas
mov
sti
sti
das
inc
test
lea
fbstp
lds
add
sbb
stos
mov
xor
not
dec
call
mov
es
andl
stc
aad
or
inc
jg
ljmp
jne
sub
push
cmp
mov
sti
pop
cmp
lods
out
lds
cltd
popa
addr16
push
add
pop
mov
dec
push
into
mov
fstl
cltd
inc
inc
insl
jne
call
shrl
xchg
push
jne
xor
adc
out
and
addr16
fstpt
pop
les
sbb
xor
and
mul
mov
push
out
mov
sbb
push
pop
sbb
xchg
setb
pusha
add
pushf
push
push
call
mov
jmp
call
imul
bt
pusha
test
pushf
add
movb
pushf
push
pushf
lea
jmp
push
call
jle
out
negb
add
pushf
pop
xorl
filds
shrl
data16
push
sti
mov
lock
sbb
push
adc
pushf
or
mov
xchg
or
dec
mov
call
jecxz
fucomi
gs
pop
loope
addb
out
or
in
xchg
jl
cmp
adc
outsb
and
cmc
out
cltd
sbb
js
mov
adc
add
pop
lods
iret
in
xchg
xor
pushf
pop
mov
xchg
test
jle
outsl
jb
mov
inc
adc
shll
stos
cltd
cmp
adc
std
jnp
xlat
inc
out
mov
mov
xchg
xchg
adc
add
mov
ds
test
mov
mov
lret
pop
es
mov
pop
stos
shlb
ja
xchg
in
inc
out
idivb
cli
jecxz
mov
lea
incl
subl
sub
push
pushf
stc
add
push
lea
jmp
jmp
lea
jne
pusha
jmp
pushfw
bt
and
dec
adc
mov
clc
xor
test
pusha
test
add
call
push
call
mov
cmp
pushl
pushf
jmp
setae
mov
pushf
mov
sub
jmp
pusha
lea
mov
mov
pusha
mov
movw
movzbw
mov
pushf
call
push
call
mov
xor
xchg
scas
pop
mov
cmp
lea
out
arpl
cmc
and
lds
frstor
out
test
fbld
fmuls
mov
xor
sbb
mov
insb
cli
or
bound
and
add
test
test
sub
jbe
lods
push
cmp
pop
shr
lret
movsl
add
pop
xchg
cmpsb
inc
add
cltd
sbb
and
div
dec
mov
pushf
push
cs
mov
hlt
add
dec
add
xchg
movsl
mull
pop
sub
mov
pusha
inc
nop
xchg
xor
aaa
data16
push
scas
mov
pop
jmp
notl
rclb
add
invd
rcrl
inc
in
add
jecxz
mov
and
pusha
call
push
call
xchg
jb
sub
je
imul
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
idivb
call
inc
push
std
scas
jb
xchg
sub
cltd
sbb
sbb
xchg
dec
and
xor
mov
sub
insl
pop
lods
sub
ds
mov
push
push
sub
int
aam
fmull
sub
movsb
xor
mov
lods
inc
imull
in
jmp
out
lret
xchg
pop
cmp
adc
sbb
aas
mov
or
xchg
lea
psrlw
jle
dec
pop
adc
std
xchg
test
lahf
andb
and
test
inc
cmp
cmp
cli
dec
sub
cwtl
scas
push
loope
pushl
pop
adc
scas
push
pop
mov
adc
sbb
inc
leave
loop
inc
dec
mov
mov
aaa
movb
repz
push
xchg
mov
adc
mov
aam
movsl
dec
pusha
pusha
push
lea
ja
clc
sub
clc
shrd
add
bswap
bswap
mov
rcl
neg
sub
clc
mov
cmp
pusha
bt
pushl
repnz
call
lea
jae
pushf
mov
not
inc
setns
inc
setb
setge
mov
pushf
pushl
lea
call
jmp
push
call
dec
or
add
xchg
mov
mov
jmp
push
call
mov
jo
out
lock
cltd
sbb
mov
push
mov
jo
push
xorl
sbb
scas
xchg
stc
pop
aaa
mov
xchg
iret
xor
iret
add
sub
pop
jmp
mull
test
mov
inc
jg
ljmp
jne
js
test
jbe
lods
xor
dec
and
neg
lock
cwtl
mov
hlt
mov
xlat
xchg
jns
ljmp
jns
es
into
daa
cwtl
and
mov
mov
or
push
aam
repz
mov
fnstsw
pop
mov
ljmp
cli
into
daa
mov
inc
imul
daa
inc
push
arpl
jb
jb
inc
cli
daa
mov
mov
out
sbbb
dec
xor
pop
ss
jmp
lea
jae
jmp
push
call
outsb
repnz
ret
sbb
xchg
fdecstp
push
lret
pusha
stos
inc
test
inc
jo
imul
cld
cs
mov
cld
rorl
in
dec
lret
mov
jnp
es
xchg
xor
adc
mov
pop
loopne
sub
xchg
or
fiadds
pushf
ljmp
lock
xor
cltd
cmp
mov
sti
dec
and
mov
idivl
call
push
sub
nop
arpl
negl
push
call
xchg
mov
sub
mov
xorl
lods
lret
shr
sub
add
push
test
jmp
sbb
sbb
or
out
xor
sarb
mov
sbb
pusha
lods
or
or
push
mov
loop
and
sbb
daa
add
xchg
xchg
xchg
in
decl
jge
pop
lret
xlat
xchg
sbb
imull
scas
std
and
ss
lret
sub
dec
jae
ljmp
mov
orl
xchg
inc
pop
das
icebp
xchg
jae
mov
inc
mov
fwait
sbb
push
call
or
in
call
pop
les
idiv
dec
call
or
scas
jmp
lret
push
insb
call
sub
pop
ret
mov
in
ljmp
add
and
jle
cmp
sbb
push
sbb
cmp
rolb
add
mov
and
cwtl
int
hlt
xchg
loop
jp
aas
jge
int
and
xorb
mov
fbstp
test
imul
xor
popa
lods
idivl
add
cmc
iret
subb
hlt
and
je
cmc
cmc
test
add
pusha
cmp
pushl
lea
jb
pushf
cmc
cmp
cmp
pusha
push
movb
pushf
lea
jae
dec
mov
cmp
sar
mov
sub
or
mov
jmp
insb
inc
jg
cltd
sbb
insb
das
loope
jne
mov
fwait
rol
mov
fcoml
lea
out
jns
mov
push
jmp
push
jbe
inc
mov
int
and
les
ljmp
sbb
rcrb
cmpsl
sbb
mov
jg
fs
je
jne
cld
mov
mov
punpckhwd
xchg
sbb
xchg
sbb
push
xor
in
cmp
lds
negl
fucomip
jns
add
lea
or
test
int
jmp
cmp
pusha
jmp
xchg
out
sbb
out
and
adc
stos
daa
into
xchg
aaa
cld
mov
mov
pusha
jl
cmp
outsb
pushf
enter
pop
imul
sbb
fldcw
adc
push
data16
lea
sub
and
add
xchg
push
insb
out
sbb
dec
add
inc
in
cltd
out
push
data16
add
arpl
push
cld
addr16
inc
stos
test
mov
arpl
fwait
enter
xor
pop
push
pusha
xchg
out
push
cmpsl
ljmp
dec
xchg
cmp
imul
or
call
testb
dec
out
sbb
lahf
adc
pop
icebp
add
cmc
pop
sbb
aam
cmpsl
test
dec
lret
aad
je
popa
cmpsb
in
cmp
inc
shlb
jmp
bnd
xor
daa
int3
mov
popa
push
adc
mov
push
andb
xchg
jne
outsl
pop
push
xor
jo
movsl
lods
push
in
dec
fbstp
aad
mov
arpl
sub
xchg
push
xlat
call
adc
xchg
sub
cmpsl
imul
push
sub
repnz
dec
mul
or
mov
stos
sahf
xchg
loopne
incl
popa
jecxz
shlb
inc
cmpl
call
xchg
out
sbb
orl
inc
addr16
cwtl
xchg
aad
lcall
iret
mov
aas
or
lds
cmpsl
repz
and
adc
dec
std
loope
mov
data16
xchg
rcrb
jmp
rcr
pop
cmp
mov
aam
sbb
mov
lea
jg
inc
jmp
push
call
in
cmp
adc
mov
add
test
idiv
insl
call
andl
push
jg
call
movsb
and
lea
jbe
shr
mov
movzbw
bt
shrd
dec
add
dec
adc
mov
add
add
bts
pushf
movsbw
movl
lea
mov
push
test
push
push
pushf
lea
je
jmp
push
call
popf
push
call
xchg
ret
cld
push
call
push
jne
inc
cmc
mov
test
clc
cmc
add
jmp
xlat
lods
adc
cltd
sbb
xchg
inc
lret
push
jl
cmp
and
ficoms
jns
clc
daa
outsl
ret
loope
mov
or
mov
jle
mov
lahf
mov
mov
popa
sysenter
test
lahf
cmp
sahf
mov
push
mov
inc
xchg
and
mov
js,pn
sbbb
push
mov
xor
mov
orl
cwtl
mov
aas
mov
lock
inc
adc
scas
popfw
pop
pop
push
cmpsl
lret
negb
enter
sbb
jb
xchg
iret
dec
jmp
pop
std
out
leave
cmpsb
repnz
add
mov
mov
icebp
push
pop
rcl
push
or
push
jns
xchg
sub
pop
push
leave
xchg
addr16
cmpsl
loop
lds
xchg
pop
jmp
xchg
mov
jecxz
sbb
and
fnstsw
insb
enter
xor
insl
adcb
cmpsl
jae
outsb
cmp
mov
cmp
mov
ljmp
sti
outsb
cmpsl
mov
dec
aas
push
out
shlb
cmp
inc
outsl
cmp
sti
and
jno
and
shlb
jmp
dec
and
ljmp
and
inc
popa
sbb
push
rorl
jecxz
push
test
cltd
sbb
shrb
inc
dec
mov
or
stos
jg
xchg
mov
pusha
jge
lea
dec
pop
mov
mov
inc
scas
sub
rclb
push
pop
pusha
pop
loopne
push
xchg
sbb
jns
nop
inc
cmp
sti
pop
mov
arpl
fidivs
mov
xchg
gs
mov
fimuls
xchg
ret
push
mov
call
pushf
inc
lea
jmp
push
call
cmp
cmp
sbb
in
inc
cltd
hlt
test
cmp
cmovg
inc
pusha
mov
in
dec
jmp
mov
sbb
jg
push
insb
lds
mov
add
lea
sbb
es
aaa
pop
jle
xlat
test
subl
inc
lds
push
adcb
inc
aam
sbb
in
roll
outsl
push
jp
jb
adc
ret
in
cmp
outsl
cmp
xchg
mov
xor
mov
test
lods
popa
mov
add
pusha
jp
or
jle
fisttpl
negl
add
out
or
rolb
sbb
jle
aaa
and
pop
movsb
mov
dec
mov
pop
call
arpl
and
and
std
mov
les
cmp
dec
and
pop
ds
test
cli
pop
jae
dec
popa
lret
sbb
dec
xor
clc
scas
mov
outsl
mov
movsb
push
xchg
sub
sub
sbb
push
mov
sub
xor
dec
ds
jbe
roll
add
xor
inc
push
divl
imul
in
jo
jns
mov
andl
repnz
mov
popa
add
call
leave
push
jmp
daa
sub
out
clc
cmp
cmp
js
ja
push
dec
pusha
jmp
jae
jae
cltd
sbb
or
call
jmp
adc
dec
lret
add
enter
fimull
xchg
mov
mov
jb
daa
rcr
fiadds
out
ljmp
mov
xor
test
add
arpl
scas
dec
ljmp
adc
cs
cmpb
bound
out
xchg
jb
xor
icebp
mov
jecxz
clc
movsb
pushf
dec
mov
cld
in
test
insl
xor
jno
ret
mov
pop
int
cltd
sbb
lahf
hlt
fwait
sub
aad
test
scas
dec
je
fiaddl
fstl
mov
inc
idiv
scas
subb
fsubs
inc
push
ds
test
sub
lahf
dec
pop
mov
dec
cs
data16
jecxz
lea
pop
out
cltd
jae
mov
pop
and
outsb
inc
pop
inc
movsl
sbb
rcr
sbb
ss
cltd
sbb
and
test
int
cmp
push
fisttpl
hlt
cmc
sub
fsubs
adc
mov
lea
popf
fisttps
ja
dec
dec
loopne
mov
and
dec
pop
mov
out
nop
ja
or
push
fwait
xlat
lret
enter
imul
in
scas
mov
rorb
lock
sbb
in
lret
popa
jb
sbb
scas
imul
int3
cmpsb
cs
push
xchg
clc
int3
rcr
or
pop
shrl
idivl
mov
out
lods
add
arpl
shr
ficomps
sub
or
cmp
into
imul
loopne
imul
js
lcall
stos
jecxz
xchg
or
or
dec
cmpsl
cli
fisttpl
or
and
adc
fsub
add
movsl
cmpsb
sub
jle
popa
rorb
leave
addr16
data16
movsl
leave
leave
xor
pop
nop
pop
sub
mov
push
and
sbb
jb
mov
sbb
call
dec
daa
push
inc
cmp
loope
dec
xchg
fsubrp
add
ljmp
daa
ficomps
push
push
in
dec
icebp
sbb
jne
and
dec
sbb
mov
mov
nop
movl
xchg
xor
mov
scas
arpl
mov
or
dec
inc
movsb
inc
sub
mov
in
xor
xchg
cmp
insb
hlt
add
sub
lea
pushf
mov
pushf
movl
pushf
pushl
popl
push
pushf
pushf
mov
pushl
ret
push
call
enter
pusha
stc
mov
sub
movzbw
shld
cmp
mov
cmc
jmp
cmc
test
bt
pushl
popl
clc
cmp
call
mov
rep
jmp
test
fstpl
mov
loope
push
push
jle
insb
mov
fdivr
jecxz
jb
cld
mov
add
inc
sti
mov
add
jno
xor
int3
jns
sub
pop
and
adc
stos
fisttpl
xchg
fisttpl
arpl
and
push
pop
push
pushl
stos
in
lods
add
pushf
scas
jmp
pop
xchg
enter
cld
adc
outsl
jo
cmp
lahf
pop
inc
call
jae
inc
and
fadds
aaa
or
push
xchg
mov
push
dec
loop
mov
mov
incl
add
fs
imul
add
negl
sub
fildll
js
cmp
negb
add
js
mov
adc
xchg
push
pop
cmpsb
fsubrs
dec
sub
mov
ljmp
xchg
adc
xlat
adc
test
outsl
jno
pushl
sti
push
repnz
faddl
mov
jp
and
ret
andl
push
js
stos
push
outsl
imul
sbb
rcll
cmp
sti
insl
cld
mov
test
jno
xchg
into
push
mov
les
sbb
mov
inc
lret
sub
xchg
ljmp
jmp
andb
mov
int
sbb
cmpsb
pop
add
xchg
add
and
sbb
mov
int3
movsl
adc
fwait
push
mov
cltd
sbb
int
mov
dec
sub
test
hlt
push
push
ljmp
sbb
scas
mov
cs
std
sub
push
test
jg
mov
mov
in
mov
fldcw
mov
sub
into
ds
mov
decl
lret
stos
xor
mov
in
out
movsl
insl
ds
add
negb
push
leave
cmpsl
add
nop
test
fistpl
lahf
jmp
fwait
mov
mov
aad
in
shl
cmpsb
loope
lods
push
nop
inc
rorb
mov
mov
mov
jmp
inc
in
insb
jecxz
add
ds
inc
jg
sub
adc
shll
mov
pop
push
mov
rorl
hlt
neg
add
add
add
lahf
int
dec
cmpsl
add
fs
jmp
mov
push
bswap
mov
lea
pushf
mov
push
call
pusha
sete
mov
pushl
movw
mov
pushf
popl
bt
cmc
or
jmp
mov
call
push
call
jmp
ds
call
stc
cmp
push
call
into
arpl
std
in
decl
add
add
cmp
push
out
call
fdivs
cltd
sbb
inc
scas
push
bound
xlat
jecxz
cs
dec
push
pop
push
repz
xor
jne
push
and
jo
int3
xor
popa
xchg
int
dec
insb
cmp
adc
imul
push
out
ja
push
and
test
notb
or
mov
pushf
and
jns
stos
pop
mov
scas
xchg
push
call
sbb
ret
setp
dec
bt
xchg
shl
bswap
test
shrd
mov
clc
sar
adc
mov
cmp
cmc
push
push
pushf
and
mov
call
xchg
sub
outsl
inc
aam
in
loop
cmp
push
push
mov
adc
loop
xchg
leave
es
or
push
ljmp
inc
sub
lret
in
je
sbb
jb
in
ret
lret
lea
xchg
dec
xchg
dec
scas
cmp
rorb
into
je
adc
push
fs
mov
pusha
pushf
lea
jne
push
pusha
pushf
pushf
lea
jmp
push
lea
je
mov
bswap
bswap
mov
setae
lahf
lahf
pushf
lea
pushf
lea
jae
push
lea
pushl
pushf
bswap
call
push
cltd
sbb
push
and
repnz
and
xchg
push
xchg
popf
imul
add
jmp
xor
or
lret
push
ja
es
jmp
add
mov
push
mov
fsubrl
xchg
notl
add
fs
dec
dec
mov
dec
lods
pop
ljmp
test
jmp
negl
mov
add
and
push
xor
in
fisubs
shr
movsb
add
stc
push
xor
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
mov
ljmp
incb
and
je
pusha
pushf
add
cmc
jmp
movzbl
lea
lea
movzwl
pusha
call
push
call
fsubl
nop
call
or
ljmp
pop
add
cmp
cmc
cmp
bt
cmp
call
push
call
adc
cltd
push
call
dec
stos
lret
adc
negl
add
out
enter
and
cmp
ja
or
pushf
sub
movzbw
call
pusha
pusha
lea
jae
jmp
push
call
adc
lcall
sbb
xchg
dec
lcall
jmp
xchg
sub
inc
or
and
push
inc
repz
lret
jb
sbb
gs
mov
and
xor
lock
scas
out
cld
inc
or
mov
mov
pop
jecxz
lods
sbb
repz
in
inc
mov
lods
movaps
movsl
nop
ss
xor
int3
pop
push
add
in
mov
xchg
xchg
shl
out
fs
pop
push
mov
xor
cld
sbb
mov
jmp
xor
mov
add
into
inc
inc
pop
nop
movlhps
sub
jo
pop
addr16
pusha
push
push
lea
jne
stc
sub
bt
aad
mov
add
xor
add
neg
or
shl
mov
pusha
pushf
push
test
call
push
fs
cltd
sbb
sub
xchg
xchg
push
js
jo
add
out
fisubl
pop
mulb
cmp
mov
push
xchg
and
jp
dec
mov
sbb
mov
mov
mov
inc
add
xorl
sub
pop
out
movsl
pop
fldt
mov
xchg
mov
clc
in
jae
cld
rcrb
pusha
cld
daa
jns
push
call
popf
popf
fldenv
cltd
sbb
shrb
push
and
sbb
mov
sbb
sub
mov
xchg
push
stos
push
cmpsl
lcall
sbb
cmpsb
adc
inc
in
inc
stos
cmp
jecxz
outsb
loop
dec
mov
aaa
jne
mov
xchg
jmp
mov
aam
dec
sbb
inc
jne
cld
mov
jmp
jg
loop
aad
jo
mov
mov
xlat
iret
inc
inc
cld
inc
or
jecxz
add
and
and
cltd
sbb
and
xchg
aas
into
fadds
clc
mov
stc
out
dec
mov
mov
jne
cld
pusha
adc
jge
leave
cs
adc
testl
pop
sbb
push
or
xor
adc
jns
adc
call
out
xchg
fmuls
push
sub
lock
and
sbb
cmpsb
dec
add
or
sbb
pusha
shrb
lods
clc
sbb
cld
xlat
test
nop
sub
ljmp
ss
popa
call
sbbb
gs
pop
add
clc
clc
clc
pushf
add
pushf
lea
jmp
pushf
pushf
lea
jne
stc
popf
pusha
mov
push
mov
lea
jmp
mov
sbb
stos
sub
popf
lret
popf
into
aam
add
and
in
sbb
push
in
out
pop
and
xor
mov
inc
dec
cmp
adc
inc
sar
test
sbb
inc
lahf
addl
or
xor
sub
inc
or
adc
call
push
call
jo
adc
sbb
cmpsb
xor
insb
and
dec
dec
pop
inc
inc
cmpsb
jge
mov
add
mov
fisttpl
hlt
sbb
inc
jno
aas
outsb
dec
xchg
loop
icebp
addb
sbb
hlt
push
lods
lcall
shrb
mov
dec
and
pop
or
sbb
negb
add
and
push
call
lock
mov
and
add
call
push
call
sub
mov
out
pop
rcrl
es
stc
xor
ret
loopne
mov
loop
sbb
rclb
and
mov
popa
cli
cmpsb
stc
mov
jecxz
push
test
mov
ja
test
aas
cmp
dec
sbb
mov
fidivrs
rorl
fdivl
shlb
cmp
ficoml
cmp
neg
mov
insl
lods
add
mov
push
call
lahf
cmp
jne
xchg
rcrb
stc
movsl
xlat
sub
je
mov
icebp
sbb
fidivs
rorl
add
inc
inc
loop
jb
test
jbe
aas
xchg
xchg
sti
test
xchg
mov
add
jno
sub
rorl
push
sbb
negl
add
xchg
pop
sbb
mov
sbb
mov
movsbw
not
lea
mov
movsbw
movzbw
movsbw
not
mov
mov
push
pushl
ret
fisubl
lahf
cmp
inc
inc
xchg
ja
dec
mov
stc
xor
std
jns,pn
adc
xchg
aad
cli
mov
int3
xchg
or
push
jb
rep
mov
pop
dec
imul
xlat
out
sub
sub
pop
mov
xchg
stos
add
xchg
inc
cmp
add
test
fisttps
add
add
xor
mov
pushl
ret
pushl
pushl
popl
pushf
push
movb
pushl
ret
jge
pop
rcrl
testb
fldt
ds
imul
rcll
subb
pop
mov
push
scas
jae
mov
sub
jg
xor
cmp
shlb
movsl
mov
pop
ljmp
xor
sbb
ljmp
icebp
aas
popf
pop
cmp
fsubs
add
ja
mov
cmpsl
inc
inc
pop
cmp
adc
mov
lea
je
push
pushf
push
lea
jmp
call
push
call
cmp
jb
cmpsl
rcrb
mov
testl
fs
fsubrp
repz
push
fadds
shll
push
push
ljmp
enter
shlb
lods
inc
jle
or
icebp
jle
arpl
lods
add
dec
outsb
rol
movsl
fidivrs
adc
mov
aas
cmpsl
dec
xchg
test
clc
int3
orb
jecxz
push
mov
inc
mov
cld
mov
inc
mov
xor
push
call
adc
aaa
rcrb
sbb
or
push
jb
mov
mov
mov
in
ja
pushf
testl
mov
lret
push
dec
sub
inc
test
xchg
sahf
shll
lock
test
popf
sbb
inc
jns
pop
cmp
fsubr
and
push
mov
out
aaa
or
jg
call
add
lea
je
clc
cmp
test
add
test
pusha
cmp
cmp
pushl
jmp
push
sbb
lods
testb
xchg
lds
jno
das
orb
adc
jle
xchg
call
push
outsl
push
mov
lea
repz
mov
jmp
xchg
sbb
xlat
cmp
xchg
sub
pop
out
pop
fidivs
in
sti
inc
pop
xor
cmp
pop
adc
test
dec
cwtl
sub
cltd
sbb
pushf
push
movsb
pop
add
les
imul
mov
lret
push
ja
mov
jne
and
cmp
ss
add
int3
pop
xchg
lahf
mov
fistl
mov
jp
dec
mov
ret
pop
inc
idivl
push
pop
xor
arpl
popf
movsb
mov
push
sbb
sahf
mov
cmpsl
lea
ja
pusha
pusha
mov
pushf
lea
jb
call
push
call
mov
or
sbb
xchg
imul
push
test
adc
xchg
mov
leave
add
or
int
cmovge
ret
xchg
mov
std
cmp
rcrb
out
mov
pop
mov
out
cwtl
mov
je
clc
xchg
adc
jecxz
mov
dec
jecxz
mov
call
sbb
sbb
scas
aas
mov
add
mov
fwait
jmp
add
add
test
aas
pop
and
jnp
fisttps
mov
add
fwait
cmp
cli
pushf
clc
or
mov
pushf
lea
jne
movsbw
call
push
call
or
stc
cmovs
cltd
sbb
daa
and
hlt
lea
cmp
jnp
xchg
xor
and
jne
es
loope
mov
push
dec
testl
cltd
ds
int
jae
push
and
das
push
insl
ss
rorl
cmc
xchg
mov
add
cmp
adc
sahf
adc
lcall
int
sbb
into
jp
imul
imul
int
js
pop
outsb
mov
adc
ljmp
idivb
dec
call
or
movb
lea
ja
bt
not
shld
clc
add
ror
add
inc
shr
cmp
mov
bt
shrd
rcl
add
bsf
mov
bt
cmpsb
pusha
jmp
sub
int3
cltd
sbb
xorb
pop
and
inc
pop
test
inc
xor
bound
scas
mov
mov
adc
push
insl
cli
popf
subl
loopne
dec
sub
pushl
pushf
mov
shr
pop
stc
ror
test
dec
sahf
jnp
lds
sbb
mov
sbbl
in
cmpsl
mov
xlat
cld
lahf
sub
sahf
js
sbb
sub
xchg
cmp
mov
inc
or
test
push
jmp
dec
push
inc
int3
cltd
sbb
stos
jmp
std
shlb
inc
pop
mov
mov
cmp
mov
xorb
ret
push
jg
adc
popa
cwtl
push
push
notb
cmp
test
and
repnz
mov
iret
push
xchg
mov
fsub
mov
popa
sub
fldl
mov
inc
jecxz
neg
xchg
sahf
cli
mov
inc
loope
mov
mov
push
popf
ret
push
and
mov
not
rcr
cld
ja
imul
fstps
mov
loop
in
or
sbb
cmp
filds
dec
or
es
loope
pop
xor
dec
mov
adc
sbb
push
or
lods
adc
dec
lret
sub
mov
add
and
or
add
hlt
adc
cltd
sbb
out
loop
jle
in
inc
xor
icebp
inc
inc
jnp
cmp
adc
cs
jmp
adc
sbb
adc
aad
sub
aad
jbe
cld
push
xchg
sbbb
lods
adc
and
inc
inc
daa
scas
hlt
ss
mov
lret
jo
inc
test
ret
cmp
inc
adc
inc
pop
cmc
pushf
stc
xor
pusha
cmp
repnz
pushf
lea
jne
shl
adc
or
rol
mov
clc
movsbw
sar
sub
shl
jmp
dec
mov
dec
loopne
insb
add
fwait
adc
scas
jg
les
lret
nop
cmpsb
sbb
sub
sbb
arpl
arpl
and
imulb
xor
push
mov
mov
imul
aaa
daa
push
cmp
cmpl
push
clc
popa
addr16
jns
sbb
and
mov
popa
ret
es
mov
test
pop
inc
xrstors
imul
dec
jbe
add
pop
stos
adc
fxch
int3
insl
out
inc
xor
cmp
into
testl
stos
cmp
lea
aaa
fwait
add
addr16
fbstp
pop
add
jle
js
and
push
out
test
les
adc
or
adc
mov
xor
in
or
fsubl
pop
enter
imul
test
push
xchg
mov
xor
ud0
int3
jb
sbb
aaa
adc
adc
imull
add
hlt
mov
adc
lahf
lret
jo
add
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
fmulp
cltd
sbb
sub
add
jne
or
mov
and
jmp
in
mov
ret
aas
enter
pop
jecxz
lahf
inc
and
outsb
xor
popf
or
mov
loop
pop
add
inc
push
dec
lds
add
jecxz
lods
xor
push
ret
sbb
leave
cltd
sbb
or
pop
inc
lret
cmc
rcr
bound
pop
addl
sahf
adc
adc
test
lahf
mov
fbstp
shr
push
shll
xor
cmp
adc
aad
fwait
popa
cmp
sub
push
push
xor
mov
sbb
fnsave
pop
or
idivb
jg
les
or
ljmp
idivb
call
jns
sbb
xlat
jmp
adcl
sbbb
loopne
xchg
dec
ret
xor
stos
addr16
xchg
nop
and
dec
out
pop
xor
mov
int
enter
or
rcrb
imul
jle
sub
cli
xchg
mov
dec
sbb
adc
xchg
enter
in
in
push
call
orb
negl
call
jbe
pop
aas
push
call
or
add
jb
jne
insb
inc
insb
insb
outsl
arpl
mov
sbb
adcb
jns
cwtl
or
out
dec
imulb
cmp
adc
xor
jne
mov
mov
clc
sub
shll
fsubs
ds
outsb
shl
sbb
jle
xchg
adc
cltd
xchg
mov
pusha
push
jecxz
sub
insl
jg
aas
push
call
xor
push
xchg
cmpb
pushf
pusha
pushf
jmp
pusha
test
bt
cmpb
pusha
jmp
pusha
call
mov
sbb
les
adc
or
lret
gs
leave
out
test
out
adc
add
push
sti
js
mov
loope
jae
call
int3
xor
fstpt
sbb
ds
mov
cmp
loope
dec
test
in
jp
imul
scas
loopne
outsb
cltd
iret
or
fcom
inc
xchg
push
sahf
sub
sar
and
mov
jno
fwait
and
fnsetpm(287
mov
scas
int
push
xchg
push
xchg
mov
cltd
sbb
sbb
repz
xor
mov
jle
call
ljmp
into
and
gs
xchg
stos
xchg
push
imul
push
shll
adc
div
lods
stc
testl
lcall
in
sbb
int3
call
repz
adc
call
outsl
mov
popa
inc
mov
xor
or
adc
into
fwait
jl
mov
pop
inc
xchg
insl
mov
mov
jb
cltd
sbb
cmp
push
and
mov
jl
neg
test
mov
sbb
and
pop
mov
sbb
sahf
push
das
lock
or
mov
adc
cmc
mov
clc
repnz
mov
lea
jne
jmp
push
call
lahf
cmp
or
int3
lds
cwtl
mov
push
popf
rorl
stos
jl
push
jae
stc
lret
jbe
mov
mov
cmp
mov
testl
int3
push
push
push
jns
lea
xchg
or
mov
adcl
scas
xorb
repz
and
mov
pop
add
add
push
inc
rep
lods
add
inc
loope
xor
mov
lret
add
fadd
ret
adc
movsl
jo
push
mov
out
lret
lahf
and
dec
xchg
adc
in
add
jg
call
fldcw
lea
clc
neg
loop
dec
test
or
cmp
les
es
arpl
pop
jae
adc
sbb
push
lock
pop
jno
rcrb
jo
or
dec
aad
stc
sbb
inc
fcomp
mov
sub
and
pushf
xor
movsl
stos
arpl
divl
dec
leave
cld
push
scas
sbbl
test
imul
sbb
pusha
call
mov
xor
insb
clc
cmpsb
mov
inc
mov
jg
pop
cmp
fdivl
cwtl
jg
lret
jne
mov
mov
test
cwtl
push
adc
xchg
adc
push
cwtl
scas
xchg
imul
fcoms
cmp
int
mov
orb
aas
lods
push
call
imul
mov
std
repz
movzbw
mov
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
insl
mov
je
cltd
sbb
cmp
dec
nop
in
test
xchg
dec
testl
aas
out
adc
jp
mov
xlat
fadds
xor
and
or
and
mov
adc
ja
and
xchg
jb,pt
mov
in
js
jnp
cmpsl
pop
mov
lock
add
or
xchg
inc
xlat
add
dec
pop
rcl
pop
dec
sub
in
push
cli
xchg
ror
aaa
jl
dec
add
dec
lret
rcll
pop
aam
leave
jp
in
hlt
arpl
cltd
sbb
shll
adc
add
vpsubw
or
mov
xchg
icebp
das
fnstenv
enter
cli
xchg
sbb
test
sbb
dec
arpl
addr16
mov
mov
cmp
in
iret
sub
add
adc
inc
pop
test
cli
adc
pop
cmpb
sub
mov
imul
cmp
pop
fidivrs
adc
sbb
mov
out
ss
inc
pop
bnd
pusha
or
call
into
adc
ret
sbb
std
and
sub
loop
ja,pt
out
or
fidivrl
jecxz
sub
add
xor
jo
js
sbb
adc
lcall
fnstenv
shlb
adc
scas
orb
fisubl
call
dec
and
shld
mov
bt
bt
cmp
movb
lea
jbe
sbb
mov
shld
bsr
shrd
add
inc
bt
mov
ror
add
btc
cmc
movl
sbb
test
bsf
shr
mov
push
cmc
sub
jb
clc
test
jmp
insl
jle
rcrl
aaa
push
push
js
shll
fcom
dec
xchg
shr
stos
sets
cmp
dec
ficoml
mov
push
clc
stos
sbb
pop
lret
test
test
and
or
enter
mov
fwait
add
pushf
dec
xor
cld
popa
push
sbb
xchg
ret
inc
repz
test
push
or
not
pusha
mov
push
pushf
movb
pushf
popl
pushf
bt
or
pushf
push
jmp
push
call
add
rorl
shr
int3
incl
call
adc
sbb
mov
mov
inc
test
xchg
inc
sbb
iret
scas
mov
lret
mov
dec
test
in
mov
mov
jns
enter
pop
fwait
add
cmc
xchg
shll
cltd
sbb
pop
sbb
sbb
test
ret
mov
push
imul
iret
and
popa
mull
jmp
mov
sbb
mov
mov
inc
testl
insl
or
jge
cmp
mov
push
push
lds
cs
jno
lret
add
jg
loope
push
shl
push
xchg
mov
outsl
and
imul
mov
in
lock
mov
inc
call
xchg
fistps
ret
or
gs
mov
pop
shll
sub
inc
cmc
adc
dec
fwait
mov
sub
and
pop
movsb
std
repnz
inc
and
sub
xchg
add
pop
push
push
ss
mov
ljmp
and
jle
sub
ret
add
inc
cli
sbb
call
xchg
repnz
mov
push
outsb
mov
pop
sbb
movsl
pop
stc
mov
scas
cld
xchg
popf
mov
add
inc
cli
pop
arpl
sub
test
ror
into
inc
jno
mov
out
adc
pop
mov
lahf
xchg
cmp
push
test
jnp
data16
push
roll
mov
cmc
xchg
fdivl
xor
idivl
ss
lcall
push
gs
jnp
stos
sub
lods
sarb
xor
inc
lcall
test
aas
bound
push
sbb
in
ret
xchg
pop
cld
xorl
std
call
not
xchg
sbb
in
adc
enter
jb
dec
sbbl
jbe
push
int3
lods
test
movsl
mov
pop
lods
sbb
cld
sub
idiv
pop
xchg
imul
push
mov
int3
into
hlt
cmpsl
test
jmp
cmpsb
negl
pop
mov
sub
test
ja
push
sub
or
fsubr
pop
in
xor
ret
sti
push
lock
sub
movsb
outsb
in
inc
dec
outsb
test
jp
vpor
outsl
or
pop
stc
fistpl
std
inc
mov
or
jbe
movsb
jle
negl
jle
jmp
mov
sahf
xchg
lcall
xor
nop
push
call
lcall
mov
jle
add
loopne
sbb
sarl
repz
xor
insb
jecxz
fwait
add
imul
jg
xor
cmp
xchg
imul
and
cmp
scas
lea
clc
gs
sbb
inc
xchg
fidivl
and
adc
iret
mov
cmp
xlat
divl
mov
ja
push
inc
mov
inc
and
stc
xchg
lea
shl
shr
bswap
mov
test
mov
call
push
call
popa
xor
or
decl
xchg
rolb
xchg
rol
add
or
mov
lea
sarb
les
jecxz
bt
push
not
dec
mov
call
push
call
mov
fistps
call
ds
in
in
aam
cltd
sbb
inc
mov
loop
std
xchg
lcall
mov
mov
stos
insl
and
or
xchg
imul
inc
mov
push
push
in
imul
jmp
nop
arpl
sahf
fs
lods
inc
leave
iret
test
int3
shlb
adc
push
mov
pushf
push
sub
sub
test
sti
lahf
xchg
cltd
pop
les
mov
into
arpl
inc
in
pushf
xor
or
mov
cmpsl
jg
out
mov
jp
mov
dec
out
jp
test
mov
cwtl
loop
sbb
add
sbb
sbb
push
inc
popf
push
jnp
sbb
idivl
into
call
push
mov
mov
jns
sbb
or
insl
insl
xchg
rcrl
cmpl
xor
dec
int
lret
sbb
push
shl
inc
fidivl
pop
rcl
test
xchg
and
xchg
out
imul
sbb
test
aad
mov
jns
pop
jecxz
inc
cmp
loope
cmp
mov
aam
in
add
arpl
popf
cmp
in
clc
addb
cltd
push
dec
ss
push
cmp
fdiv
dec
dec
push
shl
ret
popa
xchg
push
adc
mov
or
shl
andb
dec
loop
imul
pop
mov
and
movsb
mov
sub
cmp
stos
mov
dec
rorl
add
jp
cmp
enter
cs
push
jnp
mov
cld
jl
sub
xchg
cmpsl
ret
push
cmp
jne
dec
adc
push
in
aad
cs
lret
das
push
mov
fldt
and
mov
loope
ljmp
xlat
xchg
mov
call
cmp
jnp
punpckhbw
idivb
imul
mov
add
test
cmpsl
pop
in
imul
in
and
sbb
jbe
push
roll
jb
push
mov
outsl
xchg
lds
iret
leave
ljmp
ds
jg
sub
dec
movsl
sarb
ljmp
aas
addl
cmp
mov
push
stos
xchg
mov
push
or
test
lahf
orl
push
or
jl
add
add
push
mov
ja
test
and
iret
in
in
xor
sahf
push
ret
push
inc
fbstp
fwait
push
call
movsb
push
adc
lahf
fs
push
mov
cltd
sbb
add
add
test
sbb
jecxz
sbb
mov
adc
inc
jnp
sub
fmull
adc
adc
pop
or
into
icebp
test
inc
leave
aam
imul
pop
bound
cli
jne
and
jns
movsb
testb
mov
mov
lock
xlat
jl
add
inc
icebp
or
jecxz
or
aaa
dec
add
movsl
mov
sub
pusha
jle
sbb
test
stos
xchg
out
xchg
and
cmp
add
mov
push
adc
mov
pop
or
sbb
mov
lock
rol
in
int3
xchg
mov
and
jp
adc
adc
in
rorb
push
lea
je
push
cmp
pushf
jmp
push
cmpsb
sbb
mov
fmuls
insl
jbe
in
add
sbb
cwtl
aaa
shrl
imul
fisubl
je
jmp
aam
insl
jbe
push
mov
pop
pop
xorb
sbb
cwtl
sarl
xor
ja
std
inc
jbe
pop
lea
test
push
jo
movsl
cmp
push
cltd
rcrb
pop
cmp
mov
pop
shrl
ret
popf
popf
xchg
xchg
cmp
mov
ret
test
imul
push
sbb
inc
aas
cli
sub
dec
adc
bt
sub
lea
call
push
call
loope
pop
rolb
mov
xor
sbb
out
out
data16
mov
int
xor
test
dec
fnsave
xor
lret
stos
jge
fcoml
jo
jp
sbb
sub
xlat
ja
mov
or
insb
cmpsl
rcrl
pop
cli
pop
pusha
incl
xorl
mov
std
add
idivl
push
jo
ficoms
mov
in
roll
mov
push
and
mov
ljmp
jg
xchg
aaa
cmp
fwait
pop
dec
and
fldenv
mov
jnp
in
push
call
or
pop
push
call
mov
cltd
sbb
sbb
sbb
pushw
push
test
outsl
sar
mov
sub
dec
out
push
lock
pop
sub
test
sbb
fbstp
out
adc
ss
mov
aam
jae
sub
lret
xor
in
sbb
push
call
pop
dec
insl
ljmp
stc
rcrl
cmpl
xchg
daa
rcll
cmp
fdiv
push
add
test
cmp
outsb
add
jmp
test
stos
cmp
push
frndint
iret
cltd
cmpsb
pop
fsubr
ss
fsts
cmp
rcrb
cmc
iret
add
jns
push
pushf
lea
jl
call
pushf
jmp
xchg
mov
int3
jbe
sbb
mov
cs
add
add
mov
sbb
lret
lods
cmp
fcomps
psubd
add
js
scas
enter
cmp
ss
pop
fcmovnu
add
and
add
or
std
and
sbb
scas
push
or
in
stos
and
hlt
mov
xor
lea
or
mov
adc
lret
cld
out
push
stos
je
aad
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
push
call
cli
cmp
cltd
sbb
cmp
cmc
int
outsb
dec
inc
call
cli
push
shrl
mov
pop
adcb
and
pushf
jecxz
mov
ret
incl
icebp
pop
ss
add
incb
into
pop
mov
push
sbb
testl
fidivs
xor
cli
inc
leave
adc
push
inc
push
test
mov
pushl
movb
pushf
mov
mov
pusha
push
pushf
lea
jmp
cmp
in
data16
fucompp
jecxz
mov
sub
out
je
in
sbb
out
in
jmp
jno
movsl
jns
mov
adc
loop
mov
je
fnsave
cmp
test
stos
mov
cmp
fldenv
push
arpl
xchg
dec
test
ss
sub
pop
mov
movsb
jp
jmp
clc
jns
inc
gs
fwait
loop
mov
aad
inc
mov
dec
repnz
mov
sbb
lcall
in
fisubrs
pop
pop
and
push
push
imul
sbb
fsub
maxps
cltd
adc
les
iret
jae
inc
into
std
xor
aas
inc
mov
jo
inc
mov
jge
stos
test
out
scas
inc
fldt
xor
movb
lahf
mov
movsbw
call
shl
mov
cmp
cmp
stc
pushf
cmpb
call
push
call
pop
adc
push
sbb
arpl
push
push
pusha
xchg
add
mov
lret
push
lods
adc
dec
outsb
add
repnz
push
pop
pop
popf
push
xorl
ret
stos
test
sbbb
dec
scas
jb
mov
mov
and
xlat
dec
pop
loop
cmp
stos
xchg
pop
adc
xchg
push
call
xlat
jo
pop
movsl
fcmovnu
jecxz
cltd
sbb
bound
pop
scas
out
inc
int3
jmp
and
xchg
lock
clc
cmp
pusha
lea
ja
jmp
push
call
int3
sub
mov
pushf
pushf
jmp
imul
cltd
sbb
mov
inc
cmp
adc
pop
push
push
push
and
adc
adcl
std
xrelease
and
sbb
movsb
aas
push
adc
dec
data16
mov
mov
in
test
cmc
push
cmp
inc
xchg
out
jmp
in
rol
call
xor
in
mov
fldenv
out
xchg
stos
dec
xchg
mov
pop
pop
sbb
dec
cmp
mov
mov
add
enter
aad
mov
sbb
ficompl
mov
and
fildll
je
mov
pop
sub
sub
mov
or
adc
inc
adc
jo
mov
imul
repnz
fucomip
and
out
dec
or
ficompl
jecxz
das
mov
gs
in
pushf
idivb
jge
stc
sti
xor
adc
pushf
xchg
sti
lahf
faddl
movsl
push
mov
pop
push
add
sbb
mov
dec
ss
lds
dec
cmp
mov
mov
jmp
lcall
jne
mov
xchg
ljmp
idivb
add
cmp
stc
jmp
jmp
push
cmpl
leave
cmp
and
adc
mov
jnp
and
stos
pop
cltd
mov
adc
negl
xor
sbb
adc
xchg
inc
push
imul
mov
rclb
xchg
aaa
sub
mov
dec
loop
lods
sub
or
inc
pop
sbb
rcll
ret
lret
aam
xchg
ja
popa
mov
ret
jae
in
mov
add
jbe
leave
in
mov
sbb
pusha
pop
pop
mov
xchg
imul
adc
frstor
mov
pushf
clc
call
push
call
in
cmpsl
xchg
cltd
sbb
inc
cli
cmpsb
pop
xchg
popa
or
adc
sti
or
mov
not
jge
mov
sub
pushf
es
push
push
push
repz
rcrb
mov
loope
dec
cmp
rcll
xchg
cmp
cmp
xchg
inc
stc
mov
ret
dec
or
leave
addr16
out
add
psubsb
add
pop
mov
pop
push
pusha
pusha
pushl
ret
call
inc
push
call
pop
adc
sbb
sbb
iret
rcll
roll
mov
mulb
xor
inc
or
lcall
or
orl
in
mov
inc
dec
pushf
scas
cli
jg
hlt
or
add
mov
inc
cmp
mov
lret
mov
xchg
bound
mov
std
fbld
loope
addr16
dec
adc
dec
mov
out
lret
insb
push
outsl
shlb
lret
push
btc
sbb
movzbw
mov
and
pushf
sar
not
add
cmp
adc
sub
shl
mov
jmp
push
call
dec
in
add
lahf
loopne
adc
add
je
bt
bt
cmc
sub
pusha
clc
cmp
pushl
call
repnz
call
push
call
test
sbb
inc
call
into
pushf
movb
cmp
cmp
cmp
pushf
jmp
push
movl
pusha
pushl
popl
push
pushf
movb
pushl
ret
inc
inc
dec
xor
cs
insb
add
negb
call
jb
push
insl
scas
cltd
sbb
jle,pt
jns,pt
lret
xchg
das
jg
push
push
and
dec
cmpsl
fldcw
fistps
icebp
mov
adc
jecxz
std
stos
test
ss
mov
mov
or
loopne
dec
aam
sub
add
mov
fmul
inc
sbb
or
mov
inc
int3
push
into
adc
les
and
je
mov
pushl
call
mov
push
push
lea
call
call
push
call
arpl
scas
cltd
sbb
shll
cli
mov
into
jecxz
jae
mov
adc
push
movsb
sub
or
jecxz
out
popa
jnp
push
in
jbe
xor
sar
or
lahf
out
sbb
mov
push
or
or
fimull
add
inc
xchg
jno
pusha
or
subb
rcll
mov
mov
insb
adc
fistl
cmp
mov
sbb
mov
inc
cmp
and
xor
jae
add
js
scas
cmpsl
jns
push
inc
adc
aad
inc
push
sbb
mov
pop
das
out
and
push
cmp
xchg
adc
xor
fs
in
pop
adc
sbb
ds
adc
js
mov
inc
cltd
scas
sbb
sub
test
shld
or
jmp
push
call
mov
mul
call
push
call
pop
stc
push
repnz
push
call
ja
cmp
sbb
cltd
sbb
push
xor
mov
inc
adc
clc
out
xchg
inc
cmp
sub
std
and
mov
daa
sub
push
cmp
adcl
push
jns
xchg
xchg
fsts
dec
das
dec
cld
and
sbb
xchg
xchg
cld
frstor
sub
dec
cmp
xchg
jge
aad
aaa
adc
sbb
repz
xchg
ror
mov
call
lea
stc
lods
cltd
sbb
lret
movsb
lahf
push
icebp
or
addr16
lahf
xchg
ja
gs
nop
pop
out
mov
ss
sbb
aas
add
add
mov
add
scas
stos
call
sbbb
jae
clc
leave
rcrb
sub
js
inc
scas
pop
scas
subl
pop
adc
stos
dec
pop
pusha
inc
std
pusha
js
dec
push
xchg
mov
xor
stos
and
xchg
es
cmp
rcr
add
test
shr
mov
movl
clc
bt
cmpsb
mov
push
pushf
lea
ja
jmp
push
call
jbe
es
call
mov
setno
jmp
push
call
test
mov
sbb
cli
call
stos
jo
jns
incl
dec
lods
cltd
sbb
mov
insb
enter
mov
aam
and
nop
mov
pop
test
std
frstor
sub
xchg
or
inc
add
sbb
sti
mov
and
cmovle
sbb
xor
and
rol
imul
shll
fistps
insb
adc
sub
cmp
gs
and
or
insb
sbb
adc
imul
inc
shlb
addr16
loop
pop
pusha
call
push
call
lds
sbb
aas
dec
call
fld
push
call
pop
lret
stos
cltd
sbb
sub
jbe
pop
dec
lcall
or
push
mov
inc
jp
inc
call
ja
cmp
scas
sub
repnz
jns
aas
fs
je
popa
jl
popf
lahf
inc
fnstenv
mov
cmp
sub
repnz
mov
addr16
cli
ja
mov
mov
xor
les
int
lret
ficoml
sbb
hlt
ret
inc
in
popf
ja
mov
jecxz
jmp
mov
push
xor
and
adc
aas
int3
pop
lds
fdivrl
mov
int
scas
insl
push
call
mov
cmc
test
cmp
pusha
pusha
lea
jnp
jae
xor
cmc
shl
mov
stc
adc
shr
inc
mov
and
shr
jmp
lcall
cmpsb
inc
add
and
sub
jle
dec
fs
lods
cmovl
or
mov
inc
stc
outsl
into
mov
lcall
lds
and
cmp
lods
fwait
sub
adc
cs
cwtl
daa
fisubrl
mov
and
dec
rcll
pop
or
idivb
dec
call
test
push
call
cmp
cltd
sbb
mov
data16
add
adc
insb
clc
daa
dec
aaa
or
jg
mov
testb
push
test
cmp
repz
fwait
adc
mov
push
imul
dec
loop
daa
or
or
and
fdivr
inc
dec
ljmp
push
jne
adc
mov
mov
cltd
and
scas
sti
scas
inc
and
mov
add
and
mov
stc
push
jecxz
xchg
and
insl
stos
mov
mov
gs
dec
push
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
xlat
jmp
xchg
mov
push
popw
icebp
gs
inc
inc
movsl
add
or
in
testl
mov
mull
dec
mov
les
push
and
adc
push
add
add
adc
insb
sarl
lret
mov
and
dec
rcr
call
fcoms
and
gs
icebp
push
ret
aad
cmp
push
call
mov
add
test
sbb
scas
out
mov
pop
inc
fcmovnbe
lods
sets
push
les
testl
mov
push
mov
stc
mov
inc
out
in
dec
mov
or
inc
in
in
cmc
bound
cmp
fisttps
lret
or
add
add
test
dec
xor
cmp
mov
mov
loope
adc
cmc
sbb
aam
shlb
mov
mov
repz
call
scas
mul
push
or
cltd
sbb
push
ret
push
stos
or
mov
push
jnp
dec
ljmp
rcrb
rcrb
cmc
jno
add
dec
adc
ret
shl
jmp
jbe
mov
sarb
jae
adc
and
push
add
in
mov
jne
cmp
adc
shll
pushf
popa
dec
fnstenv
scas
mov
pusha
pushf
lea
jne
call
lea
jne
rcl
sub
mov
mov
dec
sar
add
xor
sub
stc
mov
cmc
test
pushf
lea
je
push
jmp
adc
cmpsl
cltd
sbb
mov
mov
cmp
out
inc
aas
adc
aad
mov
jge
je
cmp
ds
push
mov
xchg
lahf
mov
rcrl
cwtl
mov
adcl
mov
out
rol
fidivrl
aad
lock
call
call
aas
mov
xchg
mov
cmpsb
cltd
sbb
pop
mov
mov
cmc
xor
push
sub
daa
aad
ljmp
dec
shll
or
inc
cmp
repnz
sbb
or
xorb
aad
push
jne
shll
cwtl
stc
jae
mov
push
push
mov
outsb
divl
sbb
bt
mov
rol
cmp
call
jmp
fisubs
add
andl
pop
mov
or
pop
mov
push
data16
fwait
dec
call
cmp
arpl
jno
mov
stos
stc
mov
popf
lods
out
arpl
stos
sti
cmp
mov
cltd
icebp
hlt
pop
std
mov
pusha
dec
scas
and
psllq
mov
ret
and
add
fs
jb
cmp
stc
jmp
test
pushf
push
pusha
jmp
push
call
sbb
add
or
les
sbb
xor
and
std
inc
jmp
and
and
push
or
insl
popf
loopne
cmp
stos
in
sub
sub
rcl
xor
cmpsl
mov
shll
imul
lret
loope
and
insb
aad
mov
mov
fistpl
sbb
lea
gs
push
mov
sbb
adc
ja
dec
test
cli
testb
sbb
adc
xor
ds
ret
movsb
cmp
xchg
lods
stos
movsb
cltd
sbb
jp
leave
rolb
xchg
pop
outsl
adc
inc
stos
sub
and
nop
pop
aam
sub
or
out
dec
jge,pt
repz
ds
mov
push
pop
push
out
sbb
xchg
cmp
cmc
xchg
xchg
xchg
movsb
cltd
sbb
jmp
mov
mov
adc
mov
mov
push
mov
push
ja
mov
fdivrl
dec
cmp
cmc
rorb
sub
and
in
jb
lock
pop
rcl
rclb
inc
sbb
sbb
cltd
mov
lret
push
cli
mov
add
jnp
cld
push
bound
jl
fisttpll
jbe
or
stos
inc
jb
push
pop
call
cmp
dec
or
cltd
sbb
sbb
hlt
mov
push
out
push
and
pop
cld
xchg
dec
loop
xchg
pop
lret
sbb
adc
or
enter
test
push
pop
cmp
mov
iret
jo
popf
xor
aam
xchg
xchg
sbb
cmpsb
adc
mov
sub
mov
pop
xor
xor
in
insl
dec
sbb
cld
push
and
sub
and
es
daa
cmp
stos
add
hlt
push
call
cld
sahf
out
popf
cpuid
push
call
adc
insb
mov
stos
lea
pusha
shll
fdivs
jno
ret
pushf
lahf
and
shrl
inc
mov
push
cmp
fistpll
sub
push
loop
sahf
add
jecxz
fsubl
push
out
rorb
pop
out
andl
cmp
stc
incl
sbb
dec
push
mov
xor
dec
sbb
popa
jae
sbb
shlb
mov
stc
inc
xchg
sub
stc
psllq
sub
bound
push
shll
shll
call
hlt
xor
push
lea
jnp
outsl
fldenv
add
add
or
or
xchg
push
jg
daa
das
xchg
hlt
push
push
loop
cmp
pop
xchg
push
cmpsb
sbb
dec
and
subl
call
ret
xchg
dec
gs
cmp
fnstenv
jmp
xchg
xor
andl
adc
cmpsb
icebp
pop
jl
out
inc
imul
push
mov
sbb
mov
pop
mov
filds
mov
icebp
in
cmc
push
into
jae
test
int
cmp
push
insb
mov
mov
jl
push
test
negb
xchg
loop
mov
mov
es
sti
fstpt
dec
xchg
imul
imul
jnp
adc
bound
outsl
jp
js
lea
xchg
inc
adc
in
aad
push
xor
jnp
jo
jnp
out
leave
sub
sub
cmp
cli
mov
pop
into
daa
add
push
jno
sbb
test
cmp
mov
pushf
or
les
mov
mov
les
out
xchg
push
jbe
pop
scas
lcall
test
push
mov
inc
mov
aas
arpl
lods
call
repnz
xlat
call
lcall
addl
ds
pop
test
xchg
test
add
rol
in
mov
idivb
out
dec
push
add
scas
fsts
jno
adc
pop
xor
into
cmp
sub
pop
add
push
sbb
fidivrl
loopne
testl
mov
pusha
mov
mov
fisubrs
lds
inc
pop
inc
pop
add
or
push
stc
fsubrl
pop
insb
dec
lcall
lds
fwait
push
jl
adc
fwait
cmc
cmp
and
iret
pop
jne
pop
pop
pop
out
neg
jo
cld
pop
sbb
push
adc
adc
pop
push
iret
and
xlat
in
jmp
cmp
cmc
bt
cmp
pusha
lea
je
push
stc
pusha
cmp
jmp
lods
push
insb
mov
mov
outsl
outsb
pusha
out
mov
das
and
sti
xor
xor
adc
scas
push
fs
push
mov
outsb
cmpsl
xor
lret
pop
push
iret
adc
sbb
shlb
sti
negb
or
pop
pop
add
jle
mov
sbb
jp
data16
andb
mov
pusha
mov
pop
add
jne
lods
jmp
lcall
stc
mov
cmp
out
and
or
adc
and
push
scas
mov
xchg
add
sbb
mov
fwait
or
pop
les
xchg
test
stos
lret
in
add
sbb
rorl
cmpb
push
add
xor
pushf
pushf
mov
mov
dec
out
dec
cmp
imul
call
sbb
pop
insl
scas
inc
pop
test
sbb
add
mov
adcl
data16
out
daa
cmp
jmp
fiaddl
inc
test
inc
pop
repz
cmp
xchg
cltd
bound
in
dec
inc
fwait
test
cmc
cmp
sti
sbb
loop
negl
out
out
ret
mov
dec
lods
xchg
lahf
cmp
sub
sbb
fstpl
repz
int3
outsl
or
rorb
and
fs
mov
cmc
negb
add
mov
neg
inc
add
cmp
push
pushf
lea
ja
inc
push
call
jmp
push
pusha
call
push
call
sub
mov
neg
movsl
call
lahf
mov
adc
aam
add
mov
pop
jmp
push
call
inc
aas
pop
pusha
lea
call
pusha
pushf
lea
jae
clc
pusha
sub
jmp
shl
mov
test
test
cmc
and
bt
add
pusha
pusha
lea
jmp
jmp
mov
bound
les
aad
sbb
xor
jl
fwait
lock
cmp
outsb
sbb
adc
sti
fistpll
fildl
jle
inc
insb
adc
mov
push
sub
adc
xchg
fwait
outsl
pop
jno,pn
dec
fnstenv
cli
or
pop
bound
lret
inc
add
push
dec
stc
popf
cltd
sbb
ret
decl
faddl
pop
sbb
into
sub
mov
xchg
idivl
lret
leave
fwait
sub
push
mov
shll
pop
fs
aaa
int3
clc
lahf
icebp
cli
cmp
cwtl
mov
stos
mov
pop
aas
sub
sbb
call
xchg
aam
pop
aad
stos
mov
pusha
rcrl
loop
mov
mov
pop
xchg
ja
lret
movsb
jg
pop
lret
jp
cmp
addr16
pop
jnp
popf
cltd
sbb
fcom
stos
popf
stos
sbb
lahf
lret
mov
scas
in
inc
dec
mov
faddl
and
sbb
adc
inc
mov
jnp
hlt
pop
divb
pusha
in
dec
jmp
movsb
dec
jae
pop
ljmp
icebp
xchg
add
ja
inc
xchg
movsb
add
inc
stos
insb
cs
lea
out
mov
sub
enter
not
not
mov
push
pushl
ret
add
push
imul
jb
add
inc
inc
push
push
xor
cs
insb
add
popl
pushf
pushf
pushl
ret
leave
clc
enter
sub
popa
arpl
cmp
xor
nop
pushf
mov
cmp
jge
movsb
je
pop
pusha
adc
ljmp
sbb
aas
js
adc
mov
fs
rorl
aad
adc
or
push
jl
dec
mov
fistpl
sub
add
adc
shr
imul
push
call
sub
push
stos
pushf
cltd
sbb
xchg
test
mov
scas
rcrl
ljmp
in
pushf
dec
sbb
data16
test
lret
inc
in
mov
push
or
movsb
outsl
push
jg
sub
pop
dec
out
div
add
roll
in
je
or
push
int3
repz
lahf
sbb
adc
test
sbb
mov
arpl
jecxz
mov
js
mov
addr16
cmp
insb
shll
push
mov
xlat
or
push
jecxz
leave
pop
scas
shlb
cmp
es
cs
lret
push
incl
clc
loop
js
ret
dec
out
cld
mov
repnz
mov
jle
fisubrs
mov
ficoml
cmp
fs
sub
adc
stos
lods
mov
es
or
push
lret
mov
sub
lret
jl
andl
and
rcrb
fs
jb
call
pushf
push
add
pusha
jmp
push
lea
jne
cmp
mov
btc
sub
sub
clc
shl
mov
pushf
jmp
pop
lahf
jmp
inc
add
xchg
loop
pushf
add
push
lods
enter
xchg
jg
test
sahf
lock
pop
xor
clc
xchg
stos
push
sbb
inc
js
mov
dec
jle
cmp
cmp
outsb
and
mov
lock
sbb
xchg
jns
pop
pop
sub
xchg
add
push
call
aas
pop
cs
call
sbb
inc
setno
movzbl
push
pushl
popl
jmp
cs
arpl
jle
test
sub
mov
movsl
mov
orl
clc
lret
popf
sarl
pop
xlat
push
mov
test
fldenv
stc
insl
jnp
data16
sub
cmpsl
dec
arpl
arpl
jle
jo
mov
ljmp
int3
cmp
pop
xor
mov
pop
jae
cmp
add
imul
out
dec
sub
fldenv
mov
aad
and
xchg
repnz
and
jg
test
pop
mov
cmp
out
sub
and
shrl
or
rcl
push
jne
sbb
cs
sarl
mov
popf
inc
cmp
aas
jno
xabort
fstps
dec
jl
push
mov
xchg
dec
sub
bound
out
nop
cld
and
insl
sahf
sub
filds
cmp
aam
cmp
sbb
jnp
mov
inc
jne
data16
xchg
jmp
icebp
xchg
dec
ret
cmpsl
sbb
scas
or
int
repnz
int3
push
xchg
daa
gs
jmp
sbb
add
push
xlat
xorb
ja
icebp
mov
mov
jecxz
daa
and
pushf
mov
test
inc
inc
stos
loop
xor
rcrl
stos
insl
rcrl
and
mov
pop
xchg
pop
jae
add
dec
xor
cwtl
cltd
sbb
and
out
movsb
dec
and
inc
push
cmpsb
mov
fmul
adc
jp
inc
pop
adcl
jnp
stos
imul
xor
mov
dec
aaa
cs
leave
cs
xchg
mov
dec
jae
rcrl
inc
in
jno
mov
shrl
xor
cmp
scas
mov
mov
add
sbb
cwtl
cltd
sbb
and
push
cli
xchg
sbbb
dec
scas
out
cmp
bswap
sub
xor
xor
hlt
mov
ja
mov
mov
push
pop
mov
es
mov
ret
loop
cmp
test
push
push
arpl
or
mov
movsl
jp
pushf
cmp
pop
add
loop
push
sub
call
lea
jle
jne
test
btc
sub
rcr
bsf
shr
mov
xor
test
adc
xor
add
add
adc
push
shl
mov
pusha
bt
test
pushf
push
jmp
push
call
das
cmc
call
lea
je
jmp
ds
cltd
xchg
cltd
sbb
xchg
or
loope
das
sbb
or
addl
xor
mov
pop
js
cmp
cmpl
fcom
inc
inc
out
and
jo
cmc
pusha
adc
das
lods
das
test
add
movsl
or
push
dec
out
and
cmp
inc
adc
mov
push
pop
imul
fiaddl
es
test
rcl
fstps
aaa
or
imul
mov
push
pavgw
add
inc
gs
insb
imul
je
stos
clc
enter
mov
mov
orl
es
push
out
cmp
cwtl
mov
lock
movsl
mov
popl
sbb
cmpsb
test
sub
mov
enter
lock
in
into
shll
stc
pop
popf
stos
cmpsl
shl
mov
sbbl
push
push
cmp
jp
fucomp
mov
negb
add
stos
sbb
stos
or
xchg
cltd
sbb
and
loope
pop
and
arpl
leave
inc
mov
mov
in
fwait
pop
xor
repnz
shll
divb
jmp
push
call
lock
cmp
subb
mov
xchg
sub
push
pusha
rcl
lea
add
and
loopne
cmp
sbb
cltd
sbb
and
adc
je
fisttpl
jg
sti
dec
popf
je
inc
adc
popa
out
add
adc
pop
sarl
pop
sub
loopne
sbb
loope
dec
mov
cs
daa
adc
mov
pusha
inc
mov
xor
cmp
push
fsubrs
and
int3
aas
imul
cwtl
loopne
out
sbb
and
fcoml
push
call
cli
rcr
test
xchg
cltd
sbb
fisttpll
dec
mov
lret
cmp
je
inc
cld
jnp
enter
add
mov
inc
push
addb
adc
xor
cltd
out
dec
sbb
cmp
insb
adcb
pop
arpl
pop
and
call
or
xlat
gs
xchg
out
aas
mov
hlt
cs
and
inc
sub
bt
test
xchg
movsbl
mov
call
lea
jb
clc
call
push
call
sbb
cltd
sbb
lds
mov
inc
dec
mov
fxtract
xchg
cmp
mov
fldl
test
mov
mov
adc
push
cmpsl
into
test
mov
leave
movsb
movsl
fdivl
outsb
push
ljmp
push
sub
xchg
add
cld
push
lcall
or
fnstcw
lahf
imul
mov
push
xor
lcall
fnstsw
pop
pop
inc
adc
repz
lds
daa
or
decl
fidivrl
xor
jae
push
in
sub
xor
in
sub
cli
sub
rcrl
icebp
mov
push
add
mov
xchg
test
or
loop
push
imul
xchg
fwait
out
or
inc
add
sub
cmp
push
and
mov
and
clc
dec
mov
iret
cmp
int3
insl
mov
jmp
sbb
loop
repnz
push
adc
dec
ret
fdivl
cli
lds
xor
jecxz
dec
push
orl
cli
lahf
mov
dec
cmp
test
cmp
push
ret
sub
cs
cmp
loopne
jns
push
sub
ds
lods
test
xor
mov
arpl
dec
cli
cmpb
jo
dec
jmp
and
enter
sbb
sti
sub
pop
movsb
push
mov
inc
mov
jo
jne
mov
inc
incb
dec
push
add
pop
test
les
or
adc
and
jae
xor
mov
jo
clc
sar
repnz
push
sbb
aam
or
push
sarb
jecxz
rolb
cs
int
inc
in
cmpsb
inc
lds
pop
mov
cli
imul
dec
in
dec
mov
jnp
xchg
ljmp
pushf
and
test
out
mov
sub
ds
push
int
es
sbbb
push
jne
cmp
rcll
jo
inc
cmp
mov
jmp
xchg
add
cmp
inc
fsubrs
dec
add
jae
mov
mov
jnp
ret
dec
loope
int
jbe
repz
pusha
push
push
clc
and
jmp
inc
int3
cli
repz
repnz
rcl
pop
add
add
loopne,pn
clc
mov
cs
arpl
jp
lcall
cmc
add
stos
add
cmpxchg
mov
js
add
push
cmp
add
mov
mov
shl
dec
cmp
ret
jmp
and
jmp
or
xor
jge
jmp
or
cld
sub
xor
ffreep
mov
cmp
sti
inc
stos
xchg
and
sarl
jnp
in
mov
and
lock
imull
call
jl
and
insl
lret
imul
cld
popa
clc
jae
sub
lods
mov
ret
cmpsl
inc
sbb
cmp
cmp
in
inc
mov
out
in
je
dec
jmp
sbbb
push
sub
int
cmp
push
iret
icebp
mov
mov
mov
pop
cmp
adc
inc
in
test
clc
jmp
xorl
jns
sub
pop
imul
aam
mov
sbb
dec
sub
cmp
clc
in
ret
sub
jo
sti
xor
cli
pop
dec
movsl
loop
shrl
mov
xor
arpl
rolb
jae
push
mov
inc
out
sbb
fnstenv
stc
inc
cli
push
mov
cmpb
mov
push
push
insb
sub
lds
loop
dec
rorl
movsl
sub
jp
push
jecxz
bound
scas
and
loope
xor
ret
dec
push
cli
jle
sti
fcmovne
gs
movsl
xor
in
lret
xchg
jecxz
not
xchg
or
in
push
jecxz
xor
cmp
inc
jns
jge
cli
pop
push
mov
loope
push
sti
xchg
or
sub
dec
lods
mov
rol
sti
adc
call
out
push
les
xor
hlt
inc
lods
test
clc
lret
clc
cmpsb
push
xor
push
dec
clc
int
cltd
addr16
scas
std
mov
inc
pop
in
imul
ret
aam
aaa
and
sbb
in
dec
shll
jne
push
sar
sbb
mov
jg
addr16
xor
movsb
add
aad
mov
dec
adc
jecxz
ficoml
sti
les
mov
xchg
arpl
pop
ja
subb
jnp
xchg
cli
call
mov
movsb
jmp
das
sbb
push
mov
push
push
xchg
sbb
inc
sbb
enter
mov
or
ds
sbb
movsl
push
mov
cmpsb
cli
adc
mov
pop
movb
cld
jo
push
ljmp
rclb
repz
lcall
adcl
mov
mov
daa
mov
das
and
cli
faddl
dec
pop
dec
es
ret
nop
xchg
cmpsb
mov
cltd
xchg
punpckldq
mov
lret
sti
aad
sbb
int
xchg
sub
fidivrs
xchg
cmp
pop
clc
es
lock
in
je
mov
or
push
pushf
mov
xor
xor
xor
fmuls
adc
arpl
and
fs
dec
inc
dec
filds
add
ss
cmc
ret
roll
sti
adc
lods
add
in
mov
pop
push
cmp
sti
pop
jae
xchg
xor
xchg
clc
shr
ret
in
fs
jmp
nop
inc
xchg
xor
inc
test
lret
jns
jae
adc
out
and
call
add
xchg
jo
movsb
incl
ret
loop
call
sti
jmp
push
push
and
mov
out
or
push
xor
clc
movsb
gs
enter
xchg
mov
mov
loop
inc
push
pop
add
imul
mov
jle
and
push
out
test
jecxz
lret
add
add
lret
loopne
in
jo
or
sbb
push
sbb
mov
xor
loopne
clc
fld
jg
xlat
test
ljmp
or
dec
jnp
enter
mov
cmp
jb
movzbl
orb
mov
sub
mov
in
std
stos
mov
mov
jo
push
push
or
and
mov
sub
out
mov
lret
dec
ret
add
jno
mov
lcall
mov
shrb
add
xchg
jno
xchg
dec
fistl
out
stos
add
out
inc
decb
std
jecxz,pn
dec
add
roll
mov
pop
jle
push
stos
in
sub
inc
mov
dec
fiadds
or
pop
adc
sti
lods
cmp
xchg
cmp
repnz
dec
or
adc
sub
and
pusha
lret
sti
cs
in
mov
ss
mov
imul
sarb
out
inc
adc
lea
ja
out
sarb
in
push
mov
stos
xor
add
mov
xchg
add
mov
sub
xor
and
sub
mov
cmp
or
stos
lods
mov
jp
xchg
mov
dec
pop
push
aam
jle
sbb
inc
sbb
sub
sub
cld
adc
jecxz
fmull
cli
jo
sub
sub
in
jns
and
mov
fisubl
push
repz
in
dec
cli
add
add
stos
xor
lds
jo
shrb
xor
mov
clc
lds
lock
cmpsb
shrb
sti
imul
rcrb
sub
sti
mov
test
pusha
or
lret
sbb
mov
mov
aad
lods
lock
clc
es
jb
inc
inc
int
sbb
stos
push
xor
mov
mov
pushf
sbb
cmp
lret
les
das
stos
lret
data16
xchg
arpl
push
orl
inc
loope
mov
lds
sbb
inc
adc
pop
dec
popa
out
cmp
mov
aaa
mov
adc
and
popa
mov
sub
sbbb
sub
sub
jge
jecxz
sub
lds
sbb
test
inc
movsl
dec
and
enter
push
xchg
sbb
mov
mov
lods
xchg
iret
inc
rolb
lret
stos
cmp
push
nop
aaa
sti
jp
sub
nop
mov
mov
mov
jo
out
sub
inc
sub
push
mov
rolb
mov
and
add
xchg
xchg
adc
imul
and
mov
mov
movsb
mov
and
xor
lods
sub
pop
push
fnstsw
movsl
rolb
push
cmp
push
push
xchg
fwait
test
fs
pusha
push
ljmp
adc
insl
jg
lret
jns
iret
dec
pusha
xor
add
ret
pop
or
push
dec
mov
sar
mov
mov
les
cmp
dec
dec
rorb
pusha
push
in
cmp
clc
out
add
repz
xlat
push
xor
movsb
add
and
stos
mov
cmp
pushf
test
outsl
inc
aas
fcmovbe
insb
mov
pop
dec
adc
mov
mov
xor
mov
or
sub
inc
push
jl
mov
cmpsl
clc
sbb
xor
add
inc
lds
or
aam
mov
pusha
stos
jns
push
repz
pusha
out
cmp
aad
test
scas
sti
leave
sub
addl
sbb
pop
pop
cmp
fwait
test
ret
in
rcrb
dec
insb
cltd
jge
sarl
pop
in
sti
adc
mov
mov
cltd
jne
inc
pop
jno
rcrb
mov
inc
outsb
sbb
mov
adc
je
pop
lret
mov
les
inc
into
sti
and
sub
ds
jne
lcall
jmp
cltd
lcall
shrl
push
addr16
inc
push
jecxz
dec
push
in
sbb
push
push
repz
mov
xchg
jb
mov
cmpsl
hlt
and
lret
inc
push
out
ljmp
mov
adc
push
mov
xor
imul
add
sbb
and
scas
jg
mov
fiaddl
dec
jae
adc
push
xchg
int
or
iret
std
repz
out
stos
xlat
mov
hlt
out
jmp
jecxz
mov
cli
lcall
dec
xor
loope
out
mov
jnp
adc
cmp
in
pop
popa
cmp
jecxz
enter
sub
gs
xchg
cli
into
push
dec
cmp
jbe
insb
xor
jne
jb
sbb
dec
jmp
or
pop
or
imul
test
cmp
push
mov
or
rclb
in
sub
push
sbb
mov
sub
popa
mov
fwait
int3
cmpsl
inc
or
jecxz
pop
sbb
lret
mov
stc
pop
mov
or
loope
push
cmp
cmp
jl,pt
popf
in
xor
or
xor
ljmp
arpl
fwait
sbb
cmp
and
jl
repz
xchg
mov
pop
xchg
ds
or
or
push
push
clc
mov
mov
pushf
icebp
sbb
pusha
xchg
push
cmp
mov
adc
cmc
pop
out
call
popa
daa
stc
orb
sub
shlb
push
jmp
sti
aad
jg
mov
pushf
cmc
loope
dec
add
dec
dec
push
shll
cmp
frstor
loop
cmp
mov
dec
mov
push
jmp
mov
movsb
inc
lea
cmp
dec
mov
call
jl
pop
pop
jecxz
js
pop
xor
cmp
mov
inc
xor
stos
jns
dec
push
ds
add
mov
arpl
jge
dec
lcall
fdivl
sti
jne
loop
out
cmp
jae
xor
inc
or
dec
pop
cli
inc
stc
imul
mov
ljmp
dec
cmp
stos
lahf
clc
pop
xchg
jnp
roll
nop
pop
pop
push
ret
sbb
mov
popa
dec
pop
xor
xor
and
std
sbb
push
pxor
gs
inc
add
aas
arpl
jge
push
adcb
pop
jl
lock
and
push
adc
aas
and
cmp
js
roll
mov
lods
nop
stos
jle
inc
xor
fcoml
stos
xchg
js
aad
leave
dec
int3
ret
mov
pop
sti
mov
mov
in
pusha
pop
test
les
xor
enter
sbb
sub
cld
sar
and
and
vpshufhw
bound
push
xchg
repz
ret
xchg
arpl
inc
push
into
dec
inc
dec
sub
jl
cmpsb
sub
rcll
insl
aas
into
cmp
fisttpl
xor
rorl
mov
add
xchg
lahf
call
dec
ss
sbb
lea
pop
jmp
jp
cmpb
xor
sub
pop
mov
jge
sarl
and
pop
mov
sti
dec
popa
dec
hlt
inc
jo
cmp
arpl
pusha
xchg
mov
fisubrs
stos
jp
and
test
mov
shll
push
inc
jmp
out
sub
mov
stos
push
sti
imul
ja
cmp
mov
aad
enter
cmp
movsl
and
les
insl
cmp
mov
leave
or
shrb
loope
clc
xchg
push
lcall
daa
enter
xor
lret
sbb
xchg
int3
and
daa
push
jp
mov
inc
decb
inc
lahf
stos
lret
xor
cmp
inc
mov
jne
idiv
mov
and
push
push
mov
lret
sub
push
testb
or
xchg
cmp
dec
orl
arpl
xlat
ja
cltd
and
ret
push
pop
cs
iret
pop
fs
jmp
arpl
sbb
clc
sti
out
lods
dec
mov
mov
pop
daa
dec
push
faddp
fmull
jns
lock
scas
jmp
mov
push
and
adc
test
in
loopne
stos
add
xchg
fs
enter
xor
adc
lea
inc
mov
ret
les
push
pop
scas
ret
cwtl
adc
shlb
loop
addl
hlt
xchg
or
jno
jmp
pusha
jmp
mov
movsb
mov
fwait
and
or
scas
push
fs
sub
mov
dec
inc
xchg
push
or
push
ds
xchg
outsl
and
cmp
fildll
or
jg
rcrb
add
pop
cmp
sbb
pop
stos
xlat
mov
xchg
shlb
js
mov
pop
frstor
sub
mov
xchg
jo
in
hlt
into
sbb
xor
clc
scas
std
or
add
xchg
pop
in
sbb
insb
mov
int3
push
out
and
xchg
push
sbb
xchg
dec
sub
lret
dec
dec
daa
dec
mov
mov
pusha
pop
test
rcll
or
jg
pop
pop
lds
or
sbb
aad
push
in
adc
stos
dec
cli
leave
xchg
dec
jo
ss
pop
mov
dec
stc
inc
push
and
sbb
cli
int3
or
inc
loop
clc
push
jne
add
lods
insb
lods
loop
arpl
mov
loop
fidivs
and
inc
inc
sub
dec
pop
int
fwait
out
aas
adc
adc
inc
fisubrl
inc
sti
dec
andl
cmp
push
lea
sti
mov
inc
call
mov
xor
sub
pop
aam
sbb
mov
test
add
mov
stos
dec
aam
daa
push
pop
je
dec
aam
xor
outsb
pop
lcall
in
pop
stos
rolb
int
sbb
loop
add
jg
sbbb
loop
inc
adc
insl
mov
sub
ljmp
jecxz
pop
pop
in
and
iret
sbb
push
ret
push
popf
mov
data16
sub
inc
stc
jmp
out
sub
mov
test
or
outsb
mov
ljmp
repz
fcmovu
jp
sti
mov
xor
jl
insb
mov
inc
and
jne
sub
shr
or
in
jae
rorl
decl
inc
or
jnp
ret
xchg
cltd
stc
imul
mov
adc
sbb
out
cmp
mov
aas
popf
pop
cli
rclb
loop
aad
xor
inc
cmp
lods
jo
std
mov
sbb
imul
sbb
clc
out
and
mov
mov
dec
cmpps
lret
rclb
ret
aas
in
cld
lret
stos
mov
pop
push
popf
lods
out
pop
lret
stos
fsubl
loop
mov
sub
addr16
movsl
data16
and
cld
pop
inc
aad
jmp
inc
sbb
sbb
insb
add
cli
adc
cmp
cmpsb
in
sti
fdivrs
inc
adc
and
mov
aad
push
fistps
test
outsl
jnp
push
mov
or
gs
fsubs
sbb
push
stos
sub
outsl
ret
push
cmp
or
movsl
mov
fldt
xchg
clc
mov
in
sbb
mov
andl
call
in
movsl
shlb
je
and
dec
stos
clc
imul
adcb
add
adcl
daa
push
repnz
ss
mov
push
cli
inc
popa
jo
jb
dec
cli
push
cltd
pop
jno
pop
mov
sub
push
scas
cwtl
cmpb
insl
test
les
sbb
dec
in
in
jmp
mov
add
or
push
sbb
lds
cmp
pop
arpl
dec
pop
and
cli
mov
mov
adc
call
sub
push
sbb
sub
clc
or
cmpsl
stos
cli
mov
adc
sbb
push
or
or
cld
lock
jo
push
cwtl
cld
push
jnp
push
adc
addr16
fwait
mov
test
lds
ret
out
ret
dec
aam
imul
add
mov
ja
cmpsl
add
jecxz
shlb
xchg
mov
in
jb
pushf
stos
adc
ret
movsb
out
mov
inc
pop
adc
sbb
popa
sbb
nop
int
push
flds
mov
rcll
and
arpl
dec
mov
push
pop
mov
sti
jno
jmp
add
push
outsl
push
popa
ss
inc
int
out
int3
dec
int
cmp
mov
jge
fadd
cli
and
xor
loop
cld
cmp
test
push
rcrb
inc
pushf
sub
xchg
sti
test
popf
add
cld
dec
popf
imul
sub
fbld
clc
scas
inc
in
ret
insl
add
mov
sbbl
pop
adc
xor
dec
jecxz
dec
or
imul
adcb
outsl
add
mov
test
or
mov
gs
ja
push
push
push
cmp
push
sub
add
jnp
push
stos
add
fistpll
jo
inc
add
jg
inc
stos
sti
mov
test
xchg
lods
in
rol
daa
sbb
ret
cltd
and
add
sbb
in
sub
fsubr
movsb
aad
scas
repnz
mov
test
les
inc
fiaddl
nop
adc
jne
and
add
push
lret
cmp
pop
xchg
ljmp
cmp
shlb
out
fistl
sahf
daa
mov
push
test
cld
dec
cmpsl
sti
movsb
mov
push
pop
fwait
jo
stos
fisttpl
inc
xor
mov
add
xchg
jb
xor
mov
addr16
inc
xchg
mov
push
inc
or
aas
xchg
mov
lea
jg
movsl
pop
call
sbb
dec
cmp
sbb
je
xor
aas
and
pop
movsl
sti
in
hlt
sbb
adc
xchg
xchg
fwait
mov
popa
mov
sub
fists
fadds
xchg
inc
xor
mov
jo
sbb
fwait
adc
sub
xchg
adc
decb
stos
dec
inc
in
in
sub
fcmove
cli
mov
clc
addl
jecxz
xchg
xchg
add
push
bound
push
imul
jecxz
je
dec
push
sub
lock
pop
jo
pop
jne
add
cmp
cmp
mov
iret
lcall
test
xchg
jb
mov
push
lea
movsb
sub
mov
outsb
insb
rorl
jle
mov
dec
insl
mov
out
cmp
mov
jmp
sub
stos
popa
std
mov
adc
shrl
lock
mov
mov
cmp
xor
cmpb
test
xchg
dec
and
xor
push
mov
and
mov
out
jmp
cmp
icebp
xlat
ret
icebp
inc
or
mov
fcomps
sbb
out
jnp
cli
pushf
call
imul
ret
mov
repnz
popa
aam
sbb
call
test
or
leave
stos
push
and
dec
xchg
adc
rcl
mov
cmc
notb
jmp
or
popf
clc
sub
cwtl
test
int
push
xor
lret
jecxz
iret
mov
stos
rol
pop
sbbb
loopne
rorl
dec
mov
mov
jo
sub
jns
mov
insb
aas
push
scas
pop
outsb
enter
jmp
cmpl
das
push
andb
xchg
inc
icebp
lods
stos
xchg
sbb
jnp
or
sarl
in
jmp
sub
add
push
insb
out
jg
enter
enter
xchg
mov
dec
ret
stos
filds
in
xchg
lds
jecxz
xorb
inc
cmpsl
inc
mov
mov
cmp
jge
sub
enter
lcall
push
add
dec
jl
xchg
rcrl
or
add
aad
inc
dec
cmp
mov
adc
and
roll
add
jg
xlat
inc
add
add
stos
sub
adc
push
lds
push
aad
xchg
lods
daa
and
test
scas
inc
aas
dec
repnz
aad
fistps
shrb
loopne
leave
jo
mov
cltd
sarl
outsb
sbb
jo
ret
mov
xchg
mov
push
mov
xchg
sbb
dec
add
inc
mov
fistpl
sahf
rol
push
ficoml
leave
or
mov
pop
pop
cmp
cmp
clc
add
cmp
aas
or
sub
stc
sbb
mov
hlt
jo
adc
in
roll
stc
jmp
jmp
fsubs
das
xor
iret
ret
shlb
jmp
inc
push
clc
repnz
jnp
and
cmp
mov
sti
push
ss
pop
dec
test
loop
aas
outsb
and
testb
adc
and
sbb
testl
xchg
push
mov
push
xor
cli
iret
add
dec
imul
clc
popf
mov
imul
mov
and
call
arpl
repz
jne
sbb
or
das
in
cmpsl
cmp
notl
and
jmp
repz
add
inc
mov
sti
test
cmp
and
pusha
add
xor
and
sub
mov
sub
mov
iret
mov
push
fcmovnbe
xor
xlat
sbb
inc
imul
shrb
xchg
jb
pushf
shrb
jecxz
mov
dec
inc
sbb
dec
adc
mov
rolb
push
sub
xchg
or
sti
cs
add
mov
iret
mov
or
sbb
jb
stc
push
dec
fnstenv
shl
sub
xchg
rcl
or
cmpsb
fwait
xchg
mov
dec
or
xchg
addr16
push
or
cmpsb
mov
jo
fprem
mov
push
lods
xor
pop
test
popf
xorb
mov
out
stos
incb
pop
les
mov
xchg
pop
mov
sbb
imul
jg
jo
sbb
loop
sbb
dec
push
fcoml
sti
ja
add
sub
adc
and
cmp
cmpsb
cmp
add
pop
fisttps
mov
outsb
xchg
inc
xor
test
cwtl
mov
lods
or
cli
clc
imul
inc
out
aam
cs
inc
or
shr
cmp
jecxz
mov
pop
mov
mov
out
or
popa
fs
jecxz
fldenv
mov
and
push
pop
lock
mov
lods
dec
fsubs
mov
inc
mov
leave
pop
sahf
push
icebp
jl
or
push
sub
or
mov
daa
xor
pop
xchg
and
xor
adc
xchg
push
jnp
inc
cli
mov
loop
insl
dec
push
aam
clc
xlat
lods
movb
push
sub
cmp
sbb
mov
sti
popf
in
adc
cmp
inc
loope
cld
xor
popa
arpl
jno
mov
imul
pop
add
jmp
xchg
xor
jnp
lret
dec
sub
les
pop
rolb
in
fs
push
inc
clc
in
or
jbe
sub
push
lock
out
loope
jnp
cmp
push
rclb
jmp
push
sub
in
xchg
inc
push
or
mov
addr16
adc
test
cmp
clc
in
fnstcw
cmc
sub
or
xor
cmp
cmp
cmp
stos
les
cmp
cmp
mov
in
stos
aad
div
sub
inc
and
shlb
and
push
mov
xchg
jmp
shl
repz
sub
cmp
insl
lret
ficoms
enter
lds
into
in
inc
jnp
dec
mov
fcomip
mov
jnp
pop
rep
xor
mov
cmp
mov
push
dec
lock
dec
ret
arpl
jecxz
ret
dec
dec
mov
add
dec
jnp
xlat
jmp
scas
out
mov
inc
lret
lret
dec
pop
push
stos
xor
out
imul
gs
add
dec
xor
dec
mov
dec
xlat
shll
out
imul
dec
dec
dec
mov
pop
cmp
mov
pop
ficoml
testb
gs
pop
lret
fnstcw
fcoms
sbb
mov
xchg
stos
and
add
js
push
enter
arpl
cmc
clc
insl
lret
inc
enter
fistps
sti
js
mov
jae
jmp
jnp
ret
add
cmpsb
imul
pop
sub
mov
xchg
inc
cmp
and
lret
sbb
cmp
cmpsl
or
mov
pop
jnp
inc
inc
mov
fistpll
je
cmpsl
push
inc
imul
fcomp
add
aam
insl
push
push
pop
je
movsb
sti
cmp
rolb
in
andl
xor
jecxz
enter
imul
dec
pop
or
aad
cmp
jmp
jnp
adc
jecxz
pusha
adc
dec
mov
fistl
out
or
xor
test
arpl
adc
add
mov
imul
cli
mov
sti
adc
push
cmp
inc
pop
pusha
inc
addr16
shl
loopne
and
daa
fbld
stos
std
clc
roll
repnz
pushf
or
mov
cmpb
data16
dec
pushf
leave
inc
loopne
daa
pop
adcl
add
mov
jle
inc
xor
test
and
dec
jns
ds
cli
jmp
and
mov
jb
repz
repz
pop
fsubs
ficomps
jo
sbb
addr16
mov
mov
jae
into
call
ds
test
pop
mov
aad
xor
notb
fwait
pop
jmp
loope
adcl
adc
sar
cmp
cld
sub
shrb
adc
aam
cmp
cmp
add
call
adcl
sahf
push
fsubp
pshufw
loop
stos
sbb
and
push
mov
arpl
pop
cmp
and
mov
ljmp
cwtl
sub
loop
cli
mov
push
lret
iret
test
push
push
cmc
insb
push
test
xor
or
addr16
cld
mov
sti
cmp
loopne
jo
arpl
mov
or
adcb
cmp
adc
lret
jge
jle
clc
add
add
out
enter
shll
mov
lret
fwait
imul
pop
xor
jg
jg
or
push
lret
jo
das
ja
in
dec
xor
cmp
sbb
fadd
les
cmp
test
cmp
fwait
arpl
iret
xor
sub
and
inc
mov
jno
mov
clc
int3
jo
mov
lods
cmp
push
clc
rcll
sar
mov
add
mov
mov
pop
orb
cmp
cli
mov
pusha
aaa
jp
or
mov
in
aaa
or
jo
inc
push
mov
lret
sub
sti
call
filds
jbe
rolb
int
jne
lea
xlat
or
pop
and
das
xor
pop
mov
repz
jmp
in
cmp
push
sbb
arpl
sub
jge
das
dec
cld
cmp
clc
out
scas
jecxz
cmp
cmp
mov
inc
jo
mov
hlt
sub
addr16
xchg
cld
add
mov
mov
es
inc
nop
nop
popa
clc
inc
out
sbb
inc
sbb
loopne
clc
std
jecxz
mov
cmp
dec
iret
pop
dec
lret
dec
xor
rorl
mov
dec
add
adc
sbb
sub
sub
xchg
inc
xor
or
cli
mov
mov
cmp
or
cmp
std
and
sbb
xchg
jo,pt
nop
jg
dec
inc
ret
test
cmp
mov
faddl
jae
rcr
inc
mov
mov
out
pop
movl
push
jmp
test
imul
cmp
daa
lock
jae
hlt
data16
mov
js
push
sub
fs
mov
fsubl
fidivrs
mov
adc
push
jmp
call
mov
push
and
clc
mov
in
and
lods
cli
mov
stos
adc
ret
xor
ds
arpl
repz
sub
jmp
jno
mov
in
mov
fwait
shll
cmc
insb
stos
fimuls
mov
rcll
mov
mov
jl
enter
mov
clc
push
pop
dec
sub
jmp
or
mov
sbb
movsb
dec
arpl
xor
push
test
iret
adc
inc
or
std
faddl
lds
pop
cli
sub
shrb
dec
jb
mov
mov
or
ficomps
ss
leave
mov
insl
fs
test
add
sub
lods
jae
sbb
roll
push
inc
sbb
sbb
mov
mov
sbb
sbb
test
stos
push
push
mov
addr16
xor
push
sub
sti
add
cmp
lret
addb
in
movsb
adc
cli
inc
in
mov
jmp
mov
jne
mov
sub
aad
jnp
inc
arpl
sti
jno
sbb
dec
fildl
push
inc
stc
and
cmpsb
sbb
mov
jb
and
popa
mov
sbb
icebp
dec
push
stc
lret
lcall
call
nop
xor
mov
repnz
jns
imul
adc
inc
xor
lods
cld
mov
rcrb
mov
sbb
clc
push
in
jo
sub
in
adc
adc
sub
movsl
sbb
cld
jno
pop
shr
shr
pop
adc
mov
arpl
push
lret
cli
xchg
stos
xor
and
sbb
test
or
clc
mov
fsubs
test
je
sub
pusha
stos
sbb
xchg
jns
out
and
enter
into
cmp
jno
hlt
mov
hlt
call
cmpsb
push
out
add
mov
aam
aad
xor
or
add
push
icebp
xchg
test
out
inc
mov
sbb
jnp
mov
jo
mov
and
push
les
ret
mov
add
cmp
lret
cmp
jmp
std
cwtl
cmp
jmp
dec
sub
xor
sbb
pop
xchg
mov
push
xor
pop
mov
cld
int3
sti
loopne
arpl
stos
ret
jmp
mov
inc
dec
dec
xor
out
push
scas
xor
or
jle
sub
lret
push
fs
pop
cmp
push
les
sub
fidivs
shll
jp
pop
sub
cmp
or
bound
rcll
insb
add
dec
punpckhwd
xchg
arpl
add
sub
pop
xchg
ficoms
inc
mov
out
aad
les
std
cmpsb
subl
pop
xchg
pop
int3
adc
repz
test
dec
jb
xor
xchg
pop
shrb
sub
adc
pop
testl
popa
shrl
stos
clc
cltd
stc
sub
hlt
lods
pop
daa
cmp
mov
pop
subl
imul
rol
lods
imul
out
push
inc
imull
mov
outsl
in
dec
call
cmp
jg
sub
pop
jmp
mov
cltd
cmp
ds
addr16
popa
xchg
rcl
push
adc
popa
push
popa
outsb
xchg
pop
push
movsl
repz
stos
sbb
out
loope
mov
add
mov
shl
dec
push
and
dec
mov
pop
movsl
rclb
mov
dec
sub
inc
xchg
shlb
add
and
sub
test
les
pop
aam
push
jb
sbb
add
lock
stos
ss
inc
popa
lcall
cltd
enter
jmp
popa
addr16
pop
leave
sbb
push
jnp
mov
push
call
mov
stos
dec
push
xor
outsb
inc
hlt
ret
stos
or
inc
inc
sub
mov
or
aaa
mov
popa
repz
pop
xor
testl
ds
mov
push
pop
xchg
pop
jno
dec
inc
lds
jge
lds
das
roll
sub
lret
in
xor
mov
test
cmp
js
fmulp
cmp
xor
add
mov
enter
sbb
sub
and
outsl
cli
rorl
sbbb
sbb
repz
mov
cmc
mov
mov
popa
out
psrad
pop
xor
inc
cmpb
bound
mov
movsl
mov
and
jmp
push
pop
jnp
leave
sbb
sbb
cmp
mov
cmp
stos
pop
fucom
popa
les
or
inc
les
inc
jle
pop
jg
sahf
popa
cmc
movsb
cmp
insb
fsubrl
icebp
repnz
push
rcll
shl
xor
push
jb
mov
jmp
scas
fildll
out
repz
out
mov
and
imul
fmul
dec
jno
in
sub
movsb
dec
jmp
fstl
xchg
in
xchg
movsb
adc
cmp
push
pop
pusha
sub
dec
je
push
mov
test
jae
daa
xchg
jmp
adc
repz
sbb
pop
pop
xlat
dec
xchg
pop
mov
push
sub
mov
dec
xor
pop
xor
jmp
out
dec
loop
rorl
aad
pop
xabort
jmp
popa
jmp
shl
pop
out
sub
jno
or
insl
lret
insb
xor
arpl
push
lods
ror
dec
out
inc
push
push
mov
repz
es
push
loope
cmp
mov
std
push
stc
pop
int
pop
lret
push
jno
jg
cltd
mov
pop
ja
or
jbe
lcall
fwait
push
mov
mov
inc
mov
jo
cwtl
stos
cmp
fisubrl
repz
in
mov
sbb
mov
cmp
xor
fs
popa
les
mov
sbb
adc
lret
xchg
les
test
fdivrl
popa
xchg
jmp
leave
pop
out
rcl
fnstsw
mov
lea
mov
es
fdivr
aam
mov
push
adc
add
mov
data16
popf
inc
stos
out
stos
test
xchg
stc
ds
sbb
stos
out
xchg
fisubrs
popa
mov
push
sub
popa
lcall
jmp
mov
cmp
and
lods
sub
cmp
jmp
and
cmpsl
xchg
inc
aad
sub
sub
sub
stos
testb
xor
cmp
fs
aam
popa
xchg
arpl
jno
or
ret
icebp
in
cmp
sub
shlb
ja
sub
aaa
jg
xor
scas
xchg
repnz
jp
xor
pop
cmp
push
pop
stos
popf
out
das
sbb
sub
ffree
lahf
add
imul
adc
movntps
dec
mov
popf
inc
roll
ret
fsubrl
movsb
out
xor
pop
pop
popf
or
adc
sub
mov
inc
dec
orb
les
fcmovnb
inc
std
test
cmc
pop
push
sub
repz
notl
xchg
sub
andl
ret
imul
outsb
imul
fs
imul
cmp
lcall
iret
pop
jmp
dec
xor
sub
shll
fwait
aas
jae
fnstenv
inc
jecxz
cli
out
mov
dec
sbb
push
dec
shlb
dec
mov
shrl
negl
cwtl
clc
lahf
stc
push
por
push
scas
jo
jbe
mov
fdiv
pop
pop
jge
clc
popa
add
or
test
fwait
shlb
ret
call
call
and
sbb
sbb
xchg
shl
shrl
in
mov
xor
inc
mov
insb
mov
mov
andl
test
rcrl
loop
std
lcall
sub
jbe
sbb
ljmp
mov
jbe
sbb
ret
in
inc
dec
mov
pop
out
lods
push
mov
jmp
int3
cmp
lock
sbbl
sbb
jecxz
sbb
adc
movsb
lea
and
test
pusha
cmpsb
les
jge
push
pop
sahf
sar
outsb
dec
pop
adc
xchg
jns,pt
ss
cld
stos
or
mov
lods
cmp
aas
cli
insb
mov
in
inc
shrb
push
sti
mov
and
push
xchg
enter
dec
iret
mov
mov
aaa
sub
inc
imul
sbb
iret
mov
cmovnp
nop
mov
jmp
ret
mov
ficomps
sub
cli
cmp
and
mov
push
lahf
aaa
aam
arpl
adc
pop
lret
sar
and
sbb
xchg
and
aaa
push
xchg
fcompl
imul
stos
jmp
xor
jmp
inc
dec
sarl
pop
jge
mov
add
push
lret
hlt
mov
push
loope
add
or
xchg
fwait
scas
xchg
jmp
xchg
sbb
imul
jb
loope
addr16
pop
dec
into
stos
sub
jnp
dec
lds
adc
push
cmp
faddl
cmp
mov
inc
jmp
push
shrl
stos
stos
cli
add
dec
jb
hlt
mov
in
fwait
add
imul
cmp
jne
dec
stos
jo
jp
inc
mov
roll
add
xchg
rol
pushf
fildll
dec
clc
pop
xchg
push
mov
adc
mov
les
dec
mov
clc
pop
inc
es
fstl
sahf
push
in
push
mov
sarl
push
mov
adc
add
xor
cli
push
xor
pusha
scas
jo
bound
xchg
sarb
sub
jp
jo
pop
ljmp
cmp
sub
je
clc
sub
fs
mov
imul
les
stos
adc
cmc
cmp
mov
jns
outsl
lret
sar
iret
inc
clc
inc
mov
fwait
popa
jo
nop
inc
cmovnp
sbb
dec
cwtl
leave
fstps
repz
clc
xchg
sbb
aaa
sub
and
jbe
jo
sahf
cmp
dec
dec
inc
cli
xchg
dec
mov
clc
mov
outsl
adc
xchg
inc
les
jecxz
cmp
clc
mov
cli
ljmp
mov
jp
rol
daa
sbb
pop
dec
aad
mov
sub
repnz
mov
addr16
pop
and
sbb
mov
mov
xchg
daa
cmp
clc
or
fsubl
or
mov
jo
dec
xchg
pop
mov
out
pop
cld
push
add
mov
ja
fadds
dec
cmp
rolb
pushf
push
testl
inc
pop
stos
popf
lods
movsl
addl
flds
sbb
ljmp
stc
mov
adc
addr16
es
xor
fildll
mov
sub
and
cmpsl
clc
lods
pop
arpl
mov
stos
xor
xor
or
add
sub
ret
pop
push
sbb
add
in
shlb
jnp
int
fistpll
and
shrl
xlat
push
div
inc
rorb
mov
jb
cltd
sbb
in
sub
test
bound
sti
outsl
push
adc
pop
mov
dec
jge
and
xchg
or
inc
pop
xchg
clc
scas
ds
imul
xchg
cwtl
or
pop
sub
dec
data16
mov
cmp
push
lds
push
popa
lret
sti
pop
fwait
push
stos
inc
or
cmp
popf
dec
clc
or
outsb
call
daa
test
lods
xlat
jmp
dec
int
ljmp
stos
test
sti
cmp
jle
addr16
out
loope
mov
pop
dec
mov
pop
sub
addr16
push
mov
fdivrp
test
lods
pushf
push
adc
subb
and
sahf
rcrb
xchg
or
outsb
dec
xor
xchg
cltd
pushf
mov
fists
aam
fists
icebp
outsb
outsl
pop
idiv
cmp
xchg
cmc
and
pop
rorb
cli
lock
jecxz
dec
mov
add
and
add
lret
sub
xchg
inc
push
sub
sbb
add
ror
inc
cmp
xor
ret
sti
loope
lret
ss
pop
cmp
in
repz
add
sub
icebp
jnp
adc
xor
jbe
sub
cs
insl
mulb
sbb
scas
cmpsl
xchg
popa
jo
aam
lock
rcll
clc
and
fs
jmp
xor
movsb
xor
rcrb
sub
push
repnz
js
add
jl
sar
jmp
pop
jp
push
xor
or
arpl
popf
add
mov
inc
push
pop
inc
je
adc
les
sub
sub
jo
outsl
icebp
adc
inc
pop
push
cld
iret
push
sub
mov
fldcw
in
out
stc
std
push
cld
sbb
sub
fdivrl
dec
pop
in
or
test
les
mov
sub
dec
cs
fcoms
cmpsl
cmp
pop
mov
push
mov
sbb
or
or
je
sub
push
imul
push
or
cmp
jp
add
es
test
das
enter
sbb
pushl
inc
adc
inc
jbe
or
and
sub
nop
lods
jns
pop
repnz
mov
push
sub
or
fisttpl
jg
fsubrl
add
pop
daa
cmp
jge
sub
test
movsb
sub
aam
clc
fisubrl
or
inc
xchg
xchg
jmp
int3
addl
sarl
jns
cltd
mov
jge
xchg
inc
and
sub
mov
pop
sub
jl
rdseed
arpl
js
sub
in
sbb
cmp
mov
mov
sub
push
in
or
and
loopne
cmpsl
cli
xor
test
sub
aaa
shrb
cltd
push
xor
imul
mov
push
test
push
ret
adc
sub
icebp
xchg
pop
cmpsl
int3
xor
push
ffree
mov
scas
mov
in
xchg
das
test
or
gs
mov
sub
scas
inc
or
loope
das
push
out
out
ret
sub
xchg
xor
pushf
lahf
pop
sub
lods
mov
sub
subb
adc
nop
mov
mov
mov
test
pop
push
adc
sub
lret
xorl
sub
dec
scas
fs
push
jno
hlt
sub
cmp
xchg
dec
fstl
sub
pop
movb
lret
orb
into
sub
jg
sti
jae
adc
ss
rcrb
and
xchg
push
sub
and
pop
push
lcall
xor
sub
movsl
pop
add
adc
push
sub
and
ret
push
fsubrs
lods
mov
sub
ss
outsb
cmp
mov
push
jno
cmp
push
jns
xchg
enter
dec
popa
and
int3
sub
xchg
dec
repnz
loopne
sbb
andl
dec
sbb
sub
cmpsb
push
xchg
jge
xchg
adc
je
pop
mov
movsb
popf
les
mov
mov
lahf
sbb
jno
sub
test
mov
cwtl
cmp
iret
test
ja
mul
inc
fimull
scas
push
push
stos
push
stos
in
sahf
sub
lret
or
dec
jg
add
jbe
push
cmp
or
fldcw
push
xchg
or
mov
out
dec
jmp
and
fdivr
sbb
push
addr16
cmp
push
inc
pusha
jg
lea
xor
ds
xchg
xchg
push
jmp
lock
xchg
repnz
dec
sbb
imul
jecxz
jbe
iret
jmp
sub
sbb
xchg
jns
ds
sti
fidivrs
imul
mov
cltd
pop
mov
xor
arpl
ret
mov
std
in
or
scas
xlat
xor
cmp
std
inc
push
nop
jecxz
sub
inc
aad
fs
pop
in
add
mov
mov
sti
cli
adc
jno
cld
mov
in
aad
es
clc
cmp
dec
fs
push
sub
test
cli
adc
aaa
add
mov
test
cmc
mov
cmp
xchg
push
adc
cmp
adcb
xchg
mov
stos
clc
outsb
xor
mov
inc
cltd
sbb
pop
push
jmp
cmp
add
popf
fmuls
pop
in
fists
pop
scas
pop
xchg
inc
les
pop
pusha
daa
sar
add
mov
adc
scas
mov
stos
push
ss
loope
adc
cli
aaa
lret
sub
adc
cmp
loope
mov
iret
add
shll
cld
data16
das
dec
mov
dec
xor
imul
dec
adc
inc
add
call
xchg
mov
and
push
clc
fadds
mov
dec
push
sbb
out
mov
leave
stos
jmp
scas
inc
leave
xlat
jne
in
pop
imul
rol
dec
inc
lret
aaa
out
pop
call
mov
or
xchg
test
das
sbb
xchg
into
ret
rorl
mov
mov
adc
sub
pop
sbbl
inc
stos
cmpsl
lds
fdivs
clc
cmp
or
add
das
imul
fldt
sub
mov
lods
out
adc
inc
bound
cmpsl
jno
dec
pop
jg
sbb
push
fs
mov
pop
icebp
sub
xchg
rorl
pop
xor
loop
sub
add
lods
push
call
add
cli
iret
pop
shlb
stos
pop
clc
cmp
sub
mov
into
mov
cmpsl
add
or
pop
xor
iret
mov
stos
ja
fsub
clc
mov
inc
sti
inc
xchg
jo
popf
push
jnp
enter
arpl
aas
hlt
jmp
xorb
push
push
in
sbb
bound
mov
jbe
pop
inc
jmp
jns
jno
scas
cs
psrlw
mov
dec
lcall
cli
fwait
push
in
mov
cwtl
gs
mov
sahf
mov
jp
cmp
jmp
cmpsl
xor
add
and
sbbb
test
mov
mov
pop
add
js
dec
add
adc
push
add
mov
push
dec
mov
xchg
js
fldt
test
adc
xchg
out
stos
fcmovnb
ja
sub
outsl
addr16
cmp
cmp
jnp
mov
in
jecxz
stos
shlb
leave
fs
pop
shlb
and
aas
cli
cmc
push
dec
push
in
jle
inc
int3
ljmp
add
mov
flds
stos
std
out
nop
imul
pop
cmp
push
and
cwtl
aaa
cmp
jo
mov
aaa
xor
addr16
inc
stos
lds
push
lcall
pop
fcomip
cli
sbb
lret
jno
pop
pushf
adc
mov
aam
push
cli
mov
and
mov
jmp
inc
test
das
adc
sub
dec
scas
cmp
adc
int
clc
subb
add
idivb
and
aaa
loope
inc
inc
pop
xlat
roll
insb
xor
xchg
add
out
xchg
imul
outsb
mov
dec
mov
add
loop
clc
mov
pushf
xchg
addb
shr
and
xor
mov
inc
jns
add
push
ret
xor
adc
mov
jecxz
fs
xor
sbb
std
inc
lret
xchg
in
loope
and
push
pop
cli
pop
fs
mov
jmp
xchg
clc
popf
push
test
cmpsl
dec
cltd
push
sbb
pop
mov
sti
inc
xchg
adc
clc
mov
jg
or
sub
aam
mov
inc
sub
push
dec
cld
test
xchg
in
movsl
out
push
arpl
repz
in
cmp
and
mov
xchg
jmp
dec
inc
jl
cli
lock
lods
pop
mov
icebp
sti
sbb
add
pop
cwtl
cmp
xlat
push
sub
es
cld
in
push
test
push
add
sbbl
xor
mov
push
adc
imul
imulb
adc
enter
push
and
sub
pop
lahf
sub
push
and
xchg
fadds
and
inc
xor
mov
add
cld
int
push
ret
xchg
out
pop
dec
adc
stos
cli
lock
sub
sbb
sub
push
stos
cmp
aam
movsl
loope
sub
popa
lods
testl
mov
pop
sub
popf
push
mov
or
ret
adc
pop
sbb
stc
xor
fldenv
mov
ret
xlat
out
sub
xorl
dec
lea
mov
adc
sub
and
jmp
mov
sbb
sub
pop
data16
or
scas
sub
shrb
mov
out
sub
inc
sbb
call
push
sub
sub
imul
and
jno
outsb
xor
sub
dec
leave
adc
adc
sub
sub
pop
cmp
hlt
cmp
add
jb
je
sbb
data16
test
aam
sub
bound
jbe
mov
sbb
xchg
xorb
call
scas
dec
icebp
pop
ds
sub
sub
ret
and
mov
and
loopne
sbb
arpl
fsubr
xor
fcomps
mov
push
dec
sub
add
mov
dec
and
notl
sub
fistl
outsl
adc
sub
outsl
lahf
sub
add
jnp
add
test
cmc
mov
cld
imull
call
xchg
push
mov
mov
xor
sub
jge
add
arpl
shll
mov
jmp
add
movsl
jne
call
ret
mov
inc
fnstenv
dec
push
icebp
mov
sub
add
dec
addr16
mov
push
jmp
leave
mov
sub
imulb
xchg
pop
pop
jno
das
push
adc
and
or
xor
push
or
cmp
dec
js
xor
in
mov
loopne
push
or
jmp
sub
in
dec
push
sub
aam
xchg
sub
daa
mov
sub
and
aas
mov
dec
les
loopne
pop
and
fwait
xchg
jmp
jecxz
sub
or
dec
stos
out
sub
sbb
jmp
popa
mov
jb
jo
test
jmp
lret
stos
jmp
mov
sbb
push
outsb
dec
mov
sub
in
cmpsl
lcall
out
imul
sub
faddp
outsl
int
sbb
repnz
pop
sub
mov
jg
dec
jb
aam
out
movsb
mov
mov
roll
pop
sub
xchg
mov
mov
sbb
sbb
aaa
push
in
sti
adc
cwtl
lahf
outsl
pop
push
xchg
imul
push
mov
xlat
xor
out
lret
xchg
adc
xor
inc
sub
sti
dec
add
and
loope
fistpl
popf
dec
mov
pop
das
push
sub
mov
faddl
enter
sub
lret
cmp
cli
inc
jb
jne
jmp
lods
xor
aaa
lea
sbb
psllq
test
fldt
out
mov
and
inc
jne
sub
mov
pop
sbb
ds
cld
icebp
stos
push
pop
repnz
push
xchg
xchg
jp
sub
test
rcll
mov
dec
ljmp
stos
cs
pop
pusha
ds
ja
lret
addb
sub
pop
dec
xchg
jo
sbb
fistpl
mov
fld
stc
or
sub
add
popl
popf
xchg
cld
movsb
call
sub
test
daa
push
mov
imulb
ljmp
je
mov
popa
lcall
outsb
adc
cltd
push
cmp
shll
mov
stc
fwait
sub
sub
sub
sub
mov
lock
or
pop
xchg
scas
mov
or
sahf
shlb
movsl
pop
shl
push
dec
jmp
inc
jge
cmp
mov
cli
push
sub
out
outsb
not
jle
mov
dec
lock
mov
popf
sub
fimull
jb
or
dec
fucomip
or
sbb
mov
repnz
rorl
lock
stos
jl
push
or
sub
cmpsb
pop
sub
jo
sbb
sub
mov
jg
imull
rcr
dec
add
outsl
jecxz
mov
cli
shlb
je
ds
jbe
pop
push
dec
mov
mov
std
sbb
sub
inc
xor
sub
xor
xchg
push
test
nop
ret
mov
adc
insl
aaa
movsl
sub
jb
push
mov
subb
loop
movsb
push
or
ficomps
lock
dec
mov
xor
mov
enter
clc
arpl
push
sub
nop
iret
es
sub
les
mov
push
sbb
lret
and
cmp
push
mov
cmp
pushf
sbb
int
jmp
sub
or
leave
inc
cmp
fs
and
movsl
sub
pushf
loop
mov
daa
push
loopne
cmp
cld
sub
mov
insb
xchg
ljmp
sarl
push
bound
fadd
dec
je
dec
fsubs
jno
stos
mov
in
cmp
add
and
jg
sbb
xchg
sub
push
dec
adc
out
sub
shl
xor
pop
sub
xchg
hlt
adc
mov
mov
stc
popf
leave
pop
mov
sub
mov
cmp
fcmovne
clc
inc
sarb
or
cld
inc
sub
aad
sub
dec
fimull
out
arpl
jne
sarl
dec
stc
stos
pop
push
xchg
inc
outsb
cwtl
xchg
mov
cwtl
dec
mov
xor
sub
cmp
and
push
and
lds
add
push
std
add
and
dec
pushl
inc
test
push
fcmovbe
cli
add
call
hlt
and
shufps
adc
dec
cwtl
mov
lcall
or
sub
lods
popa
test
and
pop
es
mov
jns
sub
xlat
xchg
sub
clc
push
imul
scas
mov
js
mov
popf
loope
das
cltd
sub
inc
mov
dec
sub
sbb
xchg
and
sub
out
mov
dec
jae
cmp
aaa
add
fildl
iret
les
xchg
idivb
outsb
xchg
cmc
pop
jmp
in
fwait
pop
dec
in
inc
stos
push
xorl
xor
dec
mov
sbb
shlb
pusha
insl
sub
push
fwait
sub
cmp
and
push
sub
add
add
lds
test
mov
jle
sub
xchg
mov
clc
or
test
repnz
mov
sub
add
adcl
mov
sub
adc
movsb
popw
sub
inc
orl
add
jl
add
push
pop
mov
cmp
mov
test
roll
pop
jl
xor
add
xor
adc
inc
testl
push
mov
into
and
add
rcrb
es
push
out
xchg
scas
xor
test
pop
jecxz
sub
shrb
movsl
pop
aam
mov
sub
jb
xor
lret
sub
ss
sub
aad
xor
inc
or
push
mov
cmp
out
mov
cs
enter
add
scas
push
sbb
sub
je
aam
cmpsl
mov
les
popa
adc
test
and
outsl
les
pop
mov
sahf
adc
fadds
rol
repnz
rorl
mov
shrl
data16
sbb
mov
push
repnz
cmc
cli
add
in
clc
subb
popf
aas
jecxz
jge
sbb
pop
or
xlat
scas
and
cmc
cmp
cli
sub
xor
popa
push
push
sub
nop
clc
mov
xchg
sub
push
dec
cld
stos
hlt
outsb
cwtl
pushf
fnstenv
jp
push
and
insb
push
pop
lods
pop
cmpsb
scas
mov
lret
dec
mov
dec
cli
pop
cmc
mov
xchg
loope
sbb
std
xchg
inc
fdivl
xchg
and
inc
scas
inc
mov
movsb
fnstenv
inc
add
popf
in
sub
cwtl
popf
mov
adc
popa
adc
pushf
dec
mov
ss
icebp
aad
lret
cld
sub
jo
jp
sbb
sub
rcrl
push
cmpsl
movsb
cmp
sbb
test
fs
push
cmp
push
jecxz
faddl
xor
test
jecxz
imul
icebp
cmc
jne
es
adc
jne
out
mov
sbb
jecxz
stos
mov
jg
jp
cmp
pop
dec
scas
jae
inc
mov
mov
adc
pop
or
push
aaa
sub
jge
rep
xor
scas
outsl
xor
or
repnz
ret
ret
jecxz
lea
xorb
fistps
xchg
mov
stc
jmp
dec
xchg
out
jmp
clc
mov
popl
push
std
mov
faddl
aaa
enter
jb
xchg
cmp
repnz
push
loope
push
mov
push
fstps
sbb
jo
jmp
cmc
cmp
lret
sub
in
mov
rclb
jns
add
hlt
inc
sti
dec
pop
inc
sbb
lods
mov
scas
mov
mov
xor
sahf
test
out
ret
ret
shl
mov
push
jmp
pop
clc
daa
and
lods
jle
xchg
addr16
lret
sub
xor
sub
loope
and
push
mov
adc
dec
int3
les
sbb
sub
fldenv
sub
inc
in
push
xor
jmp
seta
sub
inc
mov
xchg
adc
and
sub
cmp
cmp
push
pop
sub
pop
push
xor
ds
fdivl
in
sub
mov
dec
sub
xor
xchg
int
sub
shl
cmpb
negl
jle
sub
push
sub
sub
dec
dec
dec
xor
push
int
js
sub
cmp
xchg
mov
leave
stos
iret
loope
lea
push
ja
fnsave
out
cltd
xchg
inc
pop
ret
imul
mov
daa
xor
in
pop
ret
mov
ja
and
mov
int3
sbb
mov
mov
test
lods
pop
xor
mov
cs
nop
add
outsl
mov
xchg
in
push
sub
pop
test
aaa
sarl
and
fnstcw
out
xor
sub
mov
fadds
stos
sub
ja
pop
loopne
xchg
je
mov
pop
push
bound
push
paddb
outsl
movsb
sbb
inc
xchg
cmc
mov
and
jnp
mov
mov
cmp
mov
and
stos
addr16
popf
mov
cmp
aam
and
les
dec
xor
push
mov
bound
ret
sub
sbb
jle
js
push
mov
es
jae
push
cli
push
insb
jae
sbb
dec
mov
push
xchg
jb
xchg
mov
aas
push
mov
inc
lods
sub
dec
mov
dec
bound
and
icebp
sub
push
sahf
sbb
hlt
sbb
std
and
jae
repz
xchg
lock
pop
mov
and
mov
ret
sub
sbbb
mov
test
xor
sub
cmp
inc
sub
mov
push
dec
loopne
xor
sarl
dec
jno
hlt
jge
add
in
test
das
xor
int3
std
mov
mov
mov
xlat
loop
nop
sub
xchg
addr16
mov
sub
jne
into
push
ret
ja
mov
popa
imul
test
ds
xchg
add
dec
outsb
sub
sub
push
out
push
sbb
mov
sub
xor
ss
test
cmp
pop
std
daa
sbb
lahf
lea
aas
sub
ljmp
xor
sub
cmp
out
sahf
cld
mov
sub
fldenv
jns
shlb
sub
outsl
sbb
sub
mov
insl
bound
mov
mov
andb
or
and
sub
xchg
leave
rorl
mov
outsl
dec
xor
xchg
sub
lcall
sub
dec
cmc
test
mov
inc
lahf
and
dec
sub
inc
mov
pusha
sub
in
rcrb
jae
dec
jae
popa
jmp
pop
cmp
jbe
mov
icebp
test
inc
dec
pop
xchg
fisubl
mul
pop
in
cli
sub
pop
xor
shll
popa
sub
adc
sub
shll
adc
xchg
mov
shl
rcrl
push
push
mov
mov
push
sub
xchg
fs
inc
stos
jle
push
mov
les
dec
addr16
icebp
add
cmp
daa
mov
adc
sbb
sbb
sub
aaa
bound
cwtl
shrb
pusha
mov
xlat
sbb
sub
lock
outsl
pop
fists
rcll
pop
adc
loopne
dec
jns
stc
testl
add
ficomps
inc
push
out
cmp
out
imul
ss
insl
jmp
sbb
mov
lods
sub
pushl
mov
mov
cmc
push
sbb
popf
xor
fdivl
or
lods
sub
call
sub
je
mov
mov
stos
mov
mov
out
mov
jno
movl
test
xor
sub
cmp
shrb
xchg
sub
jecxz
xchg
sub
imul
pop
in
add
cld
sub
pop
mov
test
popl
sub
jle
add
loop
pop
stos
fistl
fdivl
dec
fisubrs
in
xor
shrl
jmp
cmpsl
out
fistps
insl
sub
push
stos
fwait
clc
dec
inc
xlat
sub
or
jo
std
sub
syscall
int
outsl
xorb
and
xchg
mov
das
inc
ret
scas
jns
adc
adcl
rolb
dec
add
test
mov
jns
and
mov
scas
popa
adc
shrb
call
loop
in
add
and
ss
jmp
lods
sub
inc
les
outsb
movsb
push
sub
mov
pop
jl
in
insb
mov
dec
out
subb
fmull
xor
int
sub
inc
dec
outsb
daa
mov
sub
jl
ret
cmp
pop
repz
pop
enter
add
int
icebp
sbb
mov
pop
es
out
sub
or
xchg
sbb
xor
jb
xlat
jbe
lret
add
mov
lret
into
cs
pop
jp
icebp
mov
repz
mov
mov
dec
rorl
cmp
inc
icebp
sub
ss
dec
adc
orl
aas
outsl
xor
pop
dec
dec
roll
cmp
dec
stos
lcall
pop
mov
imul
int
das
add
addb
cmp
pop
pop
test
pop
idivb
mov
mov
dec
aam
adc
ljmp
lcall
pop
ret
cmp
and
dec
mov
adc
outsb
cmp
ljmp
mov
or
push
inc
adc
cltd
lods
sub
pushf
cmpsl
mov
mov
inc
arpl
pusha
stc
jb
sub
xchg
nop
add
pushf
jnp
inc
test
mov
sub
arpl
in
ret
inc
mov
pop
jne
bswap
pop
popf
pop
scas
clc
mov
mov
cwtl
lods
ljmp
enter
push
and
jns
cwtl
push
orl
imull
arpl
sbb
shlb
mov
inc
ffreep
pop
adc
movsl
adc
call
jno
addr16
imul
mov
or
jmp
inc
lcall
ficoml
mov
pop
adc
in
sub
aam
dec
sbb
mov
dec
cli
sbb
sti
mov
push
mov
dec
push
clc
stc
dec
or
popf
enter
dec
loopne
push
or
stos
add
aas
mov
bound
fstpt
dec
pop
test
outsl
jo
loope
jo
sti
and
mov
pusha
test
jmp
or
mov
adc
jo
mov
sti
mov
dec
fs
jge
jae
jecxz
pusha
push
fcompl
imul
mov
adc
adc
inc
repnz
out
cmc
icebp
imul
fldl
cmp
clc
icebp
push
push
cmp
lea
and
sbb
cmp
pushf
xchg
scas
daa
cmp
jbe
inc
movsb
outsb
in
jns
dec
das
gs
stos
into
mov
popf
shl
cli
ret
aam
adc
inc
xlat
inc
jl
movsb
push
nop
aas
ret
es
push
adc
jmp
pop
repz
add
test
adc
iret
jo
pop
cli
imul
mov
aad
inc
dec
popa
dec
std
jo
aam
icebp
das
aas
jne
dec
cmp
and
fs
cmp
frstor
mov
push
test
cmc
inc
ret
cli
mov
mov
xor
xchg
sub
movsl
fildll
mov
add
test
sbb
in
dec
push
xchg
mov
pushf
cmp
cli
popf
jae
addr16
pop
jb
cmp
pusha
add
dec
dec
aad
cs
inc
sub
lock
stos
and
or
pop
push
bound
sti
push
mov
int
aas
jle
mov
xor
push
sahf
sub
int
and
fs
push
outsb
mov
cmp
sti
subb
out
insb
dec
jnp
xchg
sub
cmpsl
notb
xor
clc
fisttpll
test
sub
xor
jl
inc
into
sub
jns
jae
loope
stos
mov
lret
cmp
out
xchg
lds
dec
xor
into
out
and
pop
sub
push
xchg
push
sub
jle
adc
mov
mov
xchg
inc
sub
out
pop
mov
jns
sub
repz
test
movsl
iret
and
add
das
mov
cmp
fistpl
sarl
sub
sbb
jb
iret
push
xchg
imul
filds
shlb
pop
dec
adc
sub
imul
das
inc
mov
movsl
into
mov
sub
cmc
and
sub
cmpl
jge
inc
xchg
jnp
mov
cs
stos
xchg
popl
inc
outsb
sub
sub
icebp
gs
lods
pop
aam
insb
xchg
and
or
icebp
sub
fisubs
cmp
mov
dec
jl
sub
repnz
enter
xor
int
test
adc
mov
sub
fsubs
lods
fs
and
sub
popa
mov
lds
pusha
scas
mov
adc
orb
sahf
xor
and
mov
ds
in
lahf
adcb
inc
ret
scas
and
xor
mov
mov
sbb
arpl
sub
scas
pop
mov
push
repnz
sub
mov
sub
push
xchg
filds
ret
push
sub
xchg
xchg
insb
mov
cli
fwait
mov
stos
sub
sbbl
lret
dec
add
mov
jae
popf
bound
nop
sub
push
call
push
test
fnsave
stos
lds
stos
pop
dec
sbb
sahf
add
push
adc
jmp
fcomps
fimull
lahf
fs
stos
or
push
sub
xchg
inc
push
subl
mov
ja
pop
ljmp
sub
sbb
nop
sub
jge
addr16
sahf
adc
clc
in
sbb
ljmp
adc
lahf
je
mov
hlt
cmpsb
in
add
cmp
test
adc
loopne
mov
push
cs
dec
aam
pop
sbb
nop
gs
addl
cmc
popa
sub
mov
jno
dec
adc
pop
sub
shr
int
test
or
xor
cld
ret
cmpsb
aam
ja
xchg
aad
sub
sahf
push
cmp
flds
test
outsl
scas
out
mov
nop
inc
lods
out
andl
insb
repnz
inc
icebp
bound
jmp
lret
mov
dec
adc
in
pop
jmp
loop
sub
jo
mov
inc
or
inc
rolb
fidivrl
scas
jno
dec
cmc
sti
je
sub
dec
xor
or
fadds
in
mov
or
push
repz
inc
pop
test
pop
sub
push
sub
xchg
xchg
sub
addr16
sub
push
dec
push
mov
xchg
xor
mov
imul
cwtl
sub
jno
test
and
vmwrite
adcb
movsb
test
dec
inc
xchg
cmp
or
lds
fists
inc
loop
push
or
jl
sbb
f2xm1
and
and
jns
inc
mov
dec
je
xchg
hlt
stos
cs
sub
outsb
push
add
sub
cmp
lods
in
rcll
push
jle
outsl
pop
pop
inc
sub
adc
outsl
push
sub
repz
cmp
mov
pop
push
ret
sub
cmpsb
mov
jmp
cmp
in
insb
adc
cmp
mov
scas
fs
inc
stc
lret
sti
aaa
cld
loop
fwait
cwtl
dec
pop
int3
sahf
inc
ficompl
mov
aas
cmp
scas
sub
adc
and
mov
add
loopne
or
xchg
jne
je
push
test
in
daa
les
inc
call
fmull
enter
ret
pop
pop
ds
call
aad
adc
sti
dec
xchg
test
int3
mov
sub
jnp
pop
sti
sub
sub
sub
cmp
sub
addr16
bound
hlt
sub
cli
es
push
sbb
addb
pusha
adc
add
or
cmpl
gs
and
sub
mov
pop
sub
push
xchg
sub
pop
sbb
lea
pop
mov
int3
pop
fcom
sub
xchg
sub
mov
ljmp
inc
push
popa
jle
inc
out
cmpsl
mov
sub
mov
push
popa
lret
sub
lea
lods
push
xchg
sub
xlat
inc
cmp
call
push
imul
out
sub
push
xchg
push
sub
xlat
bound
outsl
into
nop
sub
or
lcall
sub
cmp
jg
je
gs
adc
xchg
sub
jge
jbe
subb
leave
ljmp
mov
push
mov
fwait
cli
mov
mov
loopne
sbb
dec
test
fcomi
inc
int3
js
test
mov
xchg
ss
mov
dec
xor
sbb
push
inc
sub
push
dec
aam
lcall
adc
mov
sub
jb
cmp
scas
mov
inc
call
cmp
icebp
int
sub
lds
lods
dec
mov
sub
icebp
pop
mov
pusha
sub
add
sub
mov
mov
dec
sub
mov
sbb
jl
xchg
inc
xor
out
sahf
or
bound
mov
enter
ja
sub
fdivl
jp
mov
aam
test
fbstp
dec
push
lret
push
mov
push
sub
xor
mov
test
jecxz
loopne
sub
in
aam
jne
pusha
sub
into
xchg
add
sub
dec
sub
imul
adc
adc
add
mov
mov
sub
int
and
push
mov
fwait
rcr
or
cmc
sub
dec
and
ficoml
cmc
xor
sub
mull
lret
or
clc
cmp
cltd
xor
data16
sti
xchg
call
pop
mov
pop
lahf
aas
fsubrl
push
bound
sub
popf
aad
cmpsb
stc
xchg
cmpl
mov
sbb
and
push
bnd
test
mov
xor
dec
cmp
call
sub
push
lea
mov
jne
int
add
xchg
enter
psraw
jns
divl
clc
dec
and
sub
and
mov
addr16
lods
and
mov
aam
jbe
adc
cmp
mov
dec
mov
mov
out
cmpsl
pop
and
mov
test
test
dec
scas
xchg
mov
ret
dec
test
cmpl
push
or
pcmpeqb
sub
mov
and
jecxz
pushf
pop
lds
sub
pop
int3
das
xor
mov
je
inc
push
xor
add
fwait
sti
enter
movsl
jb
cmp
outsb
int3
sub
mov
stos
cmpsb
into
jl
inc
pushl
xchg
jmp
lods
sub
or
pusha
movsl
inc
popf
ss
cmp
jl
mov
les
sbb
mov
sub
dec
dec
xchg
sar
mov
mov
jmp
jb
mov
ja
xor
aam
mov
or
scas
fcomps
lds
clc
inc
or
mov
in
fimull
push
lds
cmpsb
sub
imul
outsl
add
push
dec
icebp
sbb
cltd
sub
and
fdivs
or
call
cli
xor
lcall
sar
pop
jg
push
jno
addr16
mov
sub
dec
ret
fmull
jl
daa
mov
outsl
cli
std
pop
inc
pop
test
shl
add
es
sub
jle
sub
sbb
popa
and
test
xchg
insb
outsb
pop
std
mov
sub
jne
jbe
push
sub
movsl
aas
mov
ret
cmpsb
ja
stc
xor
push
or
cmp
clc
test
sub
pop
js
hlt
sub
es
in
out
mov
and
fwait
jecxz
cmp
xchg
cmp
test
add
sbb
push
push
cli
lret
mov
xchg
test
arpl
mov
jbe
ds
mov
repnz
test
add
pop
jb
cli
out
lock
sub
jle
imul
sub
scas
jno
test
inc
outsl
cmp
mov
pusha
sub
pop
adc
pushf
aaa
xchg
cmp
mov
pop
sub
repz
push
fiadds
pop
fwait
xor
xor
cli
in
mov
ret
xchg
xchg
sbb
mov
xchg
ds
cmc
mov
ret
ds
popf
or
lods
add
jno
mov
inc
sbb
les
bound
jmp
jno
mov
mov
sub
jnp
je
subb
gs
sahf
dec
test
and
mov
cmp
scas
fdivrs
dec
jp
jb
fistpl
lds
loope
fimull
stos
xor
pusha
les
fwait
inc
je
sub
clc
lock
mov
scas
push
aad
pop
sub
or
add
pop
xor
dec
dec
icebp
sub
sub
push
bnd
mov
inc
push
mov
cwtl
cmpsl
lret
mov
sbb
sub
data16
iret
pop
nop
xchg
sub
repz
xchg
ret
cmp
and
popa
rcrb
cmpsl
aad
jno
fldl
xchg
xchg
push
jmp
and
cmp
pop
or
ds
mov
lds
adc
cltd
cmp
loopne
rcrb
jle
fcoms
jmp
pop
push
mov
lods
rcl
push
sub
push
mov
mov
ret
cli
or
ss
mull
add
lret
push
out
test
lahf
mov
push
jmp
xor
and
jno
cltd
jle
ljmp
sub
nop
orl
sub
pop
cwtl
insl
test
ljmp
sbb
inc
or
mov
push
push
push
push
fs
pop
pop
jno
sbb
sub
sub
fidivl
fwait
adc
repz
testb
jnp
mov
lea
push
jecxz
leave
test
in
arpl
push
testl
mov
push
popf
inc
push
scas
xchg
je
repz
gs
daa
ret
mov
sub
imul
arpl
xor
insb
gs
nop
dec
faddl
cltd
mov
jecxz
pusha
dec
sub
mov
dec
int
pushf
or
insb
out
mov
pop
lret
cmp
repz
sbbl
jg
pop
mov
push
dec
push
sub
fisubrs
ret
xchg
decb
lods
aad
lods
pop
inc
movsb
mov
add
enter
pop
jne
inc
pop
and
js
and
mov
sub
int3
inc
mov
push
push
and
ret
lcall
movsb
jp
cld
cs
fs
insl
cltd
add
sahf
leave
sbb
scas
sarb
fisttpl
pop
sbb
lret
clc
pop
and
push
jle
ret
leave
movsl
mov
popa
sub
xlat
pop
fstpt
out
sub
inc
ror
jo
lods
cmp
insb
cli
jl
scas
out
scas
mul
add
inc
inc
mov
mov
add
cltd
dec
pushl
cmp
jp
in
cmp
jmp
cmpsl
or
sub
cltd
cwtl
mov
sub
popf
inc
arpl
dec
sub
in
push
jmp
mov
jae
in
cltd
push
mov
lods
cmp
sub
jno
pop
pushf
push
cmp
cmp
inc
js
xor
push
mov
xchg
dec
sub
mov
mov
js
and
xlat
dec
cmp
sub
fsubl
cmp
xor
lods
xor
imul
pop
ss
scas
insb
mov
mov
les
push
dec
xchg
inc
jp
test
data16
push
jmp
test
aas
jno
and
sub
fmuls
mov
sbb
push
je
mov
mov
adc
dec
aaa
sub
daa
cmp
dec
in
jbe
sub
scas
hlt
repz
xor
mov
sub
in
sub
ljmp
leave
push
sub
outsb
repnz
gs
jle
sub
cs
mov
sbb
das
jae
or
jo
or
ror
mov
sub
jg
dec
cli
mov
sub
adc
xchg
xlat
imul
ja
mov
sub
rcrb
les
cmpsl
add
enter
xor
jo
mov
shlb
pop
icebp
add
pop
loopne
jae
xor
adc
out
outsb
sub
mov
mov
popa
pop
data16
out
repz
cmp
sbb
jl
arpl
mov
xor
lret
add
jp
xor
pop
xchg
lds
mov
mov
loope
loop
jno
cmpsb
stos
cmpsb
andb
outsb
xchg
mov
enter
lcall
das
clc
xor
sti
cmp
dec
rol
xor
popf
fs
mov
es
es
jno
call
cmp
pop
pop
sub
sbbl
sub
popf
fadds
and
stos
test
xchg
mov
into
lea
shlb
cwtl
cltd
je
repz
outsl
jecxz
fdivrl
inc
movsl
lret
stc
shlb
and
lret
sub
pop
mov
jle
fs
mov
out
pop
aam
mov
mov
data16
test
jae
movsb
mov
adc
out
push
xchg
test
loopne
sub
jbe
jmp
enter
in
sub
popf
xor
inc
ds
or
push
scas
pop
xor
xchg
dec
mov
inc
sub
aad
mov
or
mov
pop
add
pop
mov
stos
push
shlb
sub
cmpsl
pushw
clc
pushf
imul
xchg
push
mov
xor
das
sbb
mov
dec
pusha
les
lock
pop
sub
pop
mov
lret
popf
push
sub
or
xchg
negl
mov
test
adc
cmp
inc
pop
jb
lock
loope
adc
sub
fisttpl
jnp
int3
jp
leave
and
imul
sub
add
mov
pop
inc
sub
cli
mov
arpl
xlat
sub
sub
or
clc
sbb
push
mov
jmp
test
pop
lcall
std
or
add
lahf
and
sub
pop
xor
mov
and
pop
mov
pop
stos
push
sub
cmpsb
or
xorl
hlt
sahf
repnz
test
push
xchg
pop
mov
mov
sub
cmp
mov
stos
repnz
dec
int
sub
hlt
test
fldl
xor
push
imull
out
mov
xchg
cmpsb
mov
mov
mov
inc
dec
lahf
mov
outsb
leave
call
sub
insb
and
mov
ficompl
push
sub
pop
sbb
dec
sbb
push
sub
fnstenv
mov
pusha
out
in
or
pop
jb
sbb
nop
sub
ret
pop
out
hlt
add
mov
ss
sti
mov
ds
and
dec
subl
jbe
outsl
sub
mov
daa
pop
lret
and
sub
pop
shl
test
sbb
sub
dec
and
xor
sub
fcomps
out
sub
lds
mov
mov
sub
sbb
test
bound
dec
lods
ds
mov
jecxz
mov
xchg
andb
sub
loopne
out
lret
call
rorl
int
cltd
inc
cli
imul
or
fwait
push
lea
arpl
call
divl
cmp
xchg
sarl
repnz
cld
mov
cs
jne
xor
test
sub
aad
inc
jae
aaa
mov
mov
xor
dec
rcr
outsl
js
inc
sub
mov
mov
inc
sbb
sub
fmuls
fistpll
mov
cld
mov
pop
jg
movsb
adc
sub
outsl
adc
in
cmp
fistpll
loopne
adc
xchg
ja
popa
lret
xor
in
xchg
sub
fidivrs
sub
jecxz
mov
mov
inc
mov
adc
sub
xor
leave
icebp
div
push
and
inc
ds
pop
push
xchg
call
pop
and
jecxz
fcmovnu
test
pop
mov
stc
test
inc
xor
int
dec
sub
insl
fsubrs
or
xchg
das
jge
clc
mov
push
xchg
test
lret
ret
loopne
outsl
pushl
test
add
adc
sub
mov
in
inc
sub
push
aad
cltd
iret
sub
bound
push
sub
popa
push
cmp
adc
mov
or
mov
test
fcoml
xchg
cli
push
lahf
mov
dec
aaa
dec
flds
mov
pop
sub
mov
and
call
insb
cs
mov
xor
push
and
or
cwtl
movsl
dec
outsb
add
cmp
xchg
xchg
adc
mov
inc
icebp
sahf
sub
jb
or
pop
call
sub
cli
mov
ja
inc
sub
or
dec
mov
sub
rorb
or
xlat
or
jno
jge
fnstsw
int3
stc
aad
aaa
xchg
dec
jge
xchg
ss
scas
ret
js
mov
jecxz
in
mov
or
sub
enter
lret
sub
stos
stc
cmc
fsubp
jns
popa
les
les
add
sub
mov
mov
sub
inc
mov
loope
outsb
sub
aaa
test
pop
sub
adc
jns
loop
out
shrb
push
outsb
and
push
adcl
shll
push
jns
sti
push
cmp
mov
loop
or
lret
dec
mov
scas
popa
cmpsb
push
inc
xor
test
xchg
rcrb
mov
aam
push
shll
int
push
ds
test
pushf
mov
push
fcmovbe
pop
scas
cmp
mov
mul
jmp
in
dec
cli
mov
push
test
shl
inc
xchg
pusha
mov
pusha
clc
xlat
aas
roll
jmp
je
cli
add
mov
adc
scas
jbe
lods
adc
sub
das
sub
mov
sti
and
subl
imul
inc
divl
sub
jne
mov
and
cld
sar
push
xchg
inc
stos
out
sub
pop
or
jo
cmc
mov
les
mov
jle
cli
mov
xor
sub
jle
divl
pop
jno
push
je
jmp
fs
test
das
inc
movsl
cli
xchg
mov
jno
js
dec
push
mov
mov
pop
subb
dec
jecxz
mov
cli
mov
mov
lock
clc
cs
dec
jle
in
jecxz
leave
mov
jno
cmp
aam
and
cli
mov
rclb
push
sarl
sub
jle
dec
cld
pop
cli
test
jecxz
out
popf
cmp
jnp
sbb
jo
enter
jl
bound
fs
fistps
inc
sub
jp
and
clc
jns
out
adc
adc
lods
cmp
xor
mov
mov
fisubrl
addl
mov
push
cmp
jecxz
sbb
or
sbb
jo
mov
rclb
pop
or
enter
push
lods
sahf
and
std
fdivrs
sbb
cmp
gs
fistl
mov
mov
dec
fwait
sbb
mov
xchg
dec
and
pop
dec
lods
sub
je
das
fdivs
xor
pop
mov
add
stos
dec
xor
sti
adc
pusha
adc
out
ds
clc
lods
dec
enter
out
and
test
xor
and
cwtl
xchg
jne
fsubrs
mov
adc
fmull
pop
sahf
pop
rcrl
push
test
gs
mov
in
sub
test
sbb
xchg
push
jo
test
mov
dec
bnd
xchg
push
ds
iret
notl
sub
mov
cwtl
popa
sub
xor
stc
lcall
inc
loopne
test
push
dec
dec
dec
or
push
xchg
sbb
jnp
enter
push
mov
xor
addr16
sub
inc
or
fmul
in
rcrb
orb
insl
sub
repz
sub
addr16
inc
jbe
mov
adc
cmp
pop
mov
cmp
sub
call
fisubs
xor
mov
int3
les
pop
jmp
jb
daa
imul
lods
pop
sti
mov
leave
inc
outsb
sub
maskmovq
testl
sahf
push
rorl
fs
jns
push
aad
dec
dec
loop
or
daa
adc
cmpb
adc
lock
ret
pop
mov
sub
mov
outsl
lcall
std
or
pushf
lods
sub
js
jle
imul
xor
in
and
adc
or
mov
test
inc
sbb
push
mov
pop
imul
add
fwait
lret
inc
inc
hlt
cmpsb
int
ds
cmp
negb
loopne
jle
cmc
clc
sub
push
push
test
lds
and
jns
into
outsl
mov
stos
add
leave
sub
mov
sub
cmp
xor
push
sub
cmp
adc
clc
cmc
sub
cli
mov
mov
ds
shr
adc
sub
lea
data16
mov
hlt
rclb
xor
out
sub
push
cld
ljmp
aam
popf
insl
daa
xor
dec
lret
ds
mov
daa
push
ret
inc
into
jbe
sub
sub
pushf
mov
mov
clc
add
ja
mov
and
mov
push
inc
mov
add
bound
aas
adcb
popf
inc
and
rorl
pop
inc
sub
addr16
int
pop
jns
push
gs
xchg
jb
jmp
add
std
adc
dec
dec
pop
and
jecxz,pt
xchg
sub
pop
dec
mov
jbe
jg
push
cmc
sbb
xor
scas
sub
imul
xor
icebp
dec
bound
jmp
enter
es
cwtl
inc
test
push
cs
clc
and
ret
adc
lock
fidivl
lret
cmp
inc
sub
sub
mov
jb
imul
and
adc
cli
and
sub
pop
addr16
movzwl
test
in
xchg
inc
out
push
sub
add
xchg
in
adc
cmp
adc
shl
inc
sub
sbb
pop
or
mov
mov
mov
je
pop
jns
sub
ficoml
mov
sub
enter
in
pop
add
outsl
sub
sbb
push
mov
sbb
aam
ds
int
rcrl
je
xchg
pop
sub
xor
fmull
filds
bound
std
lea
sbb
jmp
sahf
mov
in
aaa
sti
rcrl
lods
fstpt
add
adcb
mov
xchg
adc
push
sub
xchg
xchg
mov
pop
pop
mov
xor
mov
scas
jno
popfw
mov
imul
push
jae
lock
sbbl
adc
adc
inc
mov
cmp
sub
hlt
push
aad
ret
sub
push
push
popf
and
loope
sub
movsb
pop
sahf
aad
add
pop
sbb
jmp
sub
xor
or
jnp
movsb
lret
bound
adc
pop
test
cmp
push
inc
sub
mov
sub
xlat
adc
jno
lods
sub
stos
sub
mov
sub
inc
push
scas
pop
push
mov
dec
in
sbb
sub
xor
mov
sbb
jae
jb
xor
rcrb
movsb
mov
xchg
cwtl
or
subl
outsl
ret
adc
sub
pop
cmpsl
stos
nop
pop
jmp
sub
imul
cli
scas
fmull
xor
ret
mov
dec
pop
adc
sub
ret
mov
lea
mov
rorl
pop
inc
sub
lcall
inc
orl
sub
jmp
mov
push
shll
imul
imul
dec
inc
push
jo
xor
mov
push
push
ror
sub
cmc
outsl
popa
sti
mov
test
sub
add
jge
jns
cwtl
and
fpatan
nop
sub
cs
mov
pushf
xor
lcall
shlb
pop
imulb
inc
sub
rolb
ds
stos
sub
inc
out
scas
test
lea
cmp
arpl
in
sub
cmpsl
cmp
loope
sub
dec
popa
or
into
sub
out
jns
orl
adc
jb
daa
cmp
pushf
mov
sub
aam
scas
or
or
mov
dec
jge
xchg
cmp
jge
sub
jae
loopne
bound
sub
jne
xchg
mov
mov
pop
push
cmp
stos
out
pop
mov
loope
dec
cwtl
sarb
lea
push
arpl
sub
jae
push
ljmp
or
sti
push
jo
andb
or
fst
dec
adc
les
sub
sbb
mov
or
ds
std
mov
and
inc
sub
aas
adc
and
xchg
lret
cmp
sub
cmc
std
fcmovu
jmp
sub
loopne
sbb
push
cmp
into
sub
cs
push
movsb
push
jbe
push
call
xchg
fwait
sub
jno
ljmp
xor
push
sub
imul
sub
es
adc
fisubrs
jg
call
sub
mov
pop
xor
and
push
int
jne
add
mov
cli
mov
xor
or
or
fistps
adc
sub
hlt
mov
mov
sbb
mov
jb
lods
pop
aaa
out
xor
adc
xor
stc
incl
dec
popf
pop
frstor
imul
sbb
std
add
push
sub
sub
inc
inc
pop
push
gs
sbbb
in
mov
repz
jl
cli
sub
push
inc
arpl
fs
sub
push
or
incl
jae
or
jb
cmc
js
adc
call
xlat
cmp
pop
jmp
sub
ja
xchg
das
mov
mov
xor
popa
sub
pop
rcrl
lret
pop
aas
adc
pop
inc
daa
sub
cmp
dec
mov
jns
sub
movsb
les
flds
ret
mov
lret
xor
sub
and
sbb
add
jmp
aad
sub
in
xor
data16
sbb
mov
jecxz
xchg
mov
dec
jmp
fbld
xor
fcmovbe
dec
pop
cmp
sub
in
outsb
mov
sub
push
std
xchg
sub
mov
ljmp
pop
adc
sub
pop
push
in
movsb
mov
xor
pop
movsl
fldl
lds
sub
int3
es
and
mov
frndint
sbb
pop
mov
cmp
mov
imul
dec
loopne
push
jmp
xchg
ljmp
sub
cmp
sub
adc
popa
pop
mov
dec
and
dec
outsl
inc
aas
imull
and
jp
xor
loope
adc
sub
into
xorl
test
cmc
add
sub
sbb
pop
mov
sub
pop
aaa
mov
pop
sub
xor
sbbb
and
lea
sbb
sub
xor
outsb
or
in
clc
fiadds
ret
jno
outsl
jg
and
movntq
aam
add
dec
fdivr
pop
and
scas
cmp
fbld
pop
add
cwtl
pop
fisubrl
cmp
dec
out
stc
xor
mov
out
mov
xor
subps
out
test
jnp
cmp
ds
push
sub
or
jmp
push
add
sbb
sbb
repnz
or
clc
and
push
inc
in
mov
push
or
cmp
aaa
pop
mull
pop
inc
sbb
cmp
inc
inc
or
ds
loopne
dec
ret
in
xor
sbb
or
gs
mov
cmp
sbb
test
aam
sarl
lods
push
clc
jmp
fdivs
cmpb
and
sbb
pusha
sti
jbe
dec
xlat
jne
imul
icebp
cmp
jl
or
adc
sub
out
in
les
jecxz
mov
iret
cmp
mov
aad
out
stos
call
loop
and
jbe
push
xor
jecxz
cmp
loopne
adc
jnp
inc
mov
dec
push
inc
leave
stos
dec
xor
shlb
test
push
subb
pop
sti
dec
es
dec
mov
aas
leave
mov
and
and
and
popa
rcll
popa
or
and
push
cli
and
xchg
sbb
loop
lcall
and
lahf
jecxz
cmp
dec
int
dec
add
aaa
mov
dec
sub
and
leave
jp
or
mov
and
push
in
data16
sub
dec
gs
sub
into
sbb
sub
aas
insl
jb
push
and
add
jecxz
inc
xchg
xor
sub
jmp
js
iret
aaa
inc
fsubrl
pop
pop
daa
and
les
iret
push
icebp
sub
inc
sbb
outsl
mov
stos
sub
popa
mov
sub
cli
ds
nop
imul
repz
int3
stos
mov
rcll
dec
sub
push
mov
mov
fidivl
xchg
shrb
test
fsubs
iret
lret
jb
test
mov
sub
sub
cmp
int
in
daa
add
clc
sub
cli
shlb
push
aas
pop
repz
mov
sub
ret
xor
mov
push
jp
jecxz
lock
xor
sub
cwtl
sbb
imul
outsb
lret
lods
in
arpl
clc
push
pop
sbb
pop
xorb
scas
stos
out
inc
mov
fistpll
or
sahf
sub
and
fwait
adcl
add
sub
es
out
lcall
sub
lret
ret
adc
loopne
aam
daa
scas
pusha
test
xchg
push
sbb
add
and
insl
clc
and
out
bound
cmp
sub
sbbb
jbe
cmc
mov
cmp
add
cmp
pop
rcll
jo
sub
mov
xchg
dec
fldl
jne
inc
popf
imul
sub
mov
jg
add
sub
int3
in
rclb
jns
sub
loopne
and
test
inc
and
sub
shlb
or
sub
movsl
mov
sub
loope
ljmp
icebp
dec
bsr
xchg
mov
lea
dec
xor
pop
mov
dec
sbb
sub
cmp
mov
pop
ja
nop
sub
lea
iret
and
push
aas
dec
aam
jge
cmp
sbb
loope
out
popa
insb
scas
sbb
and
sub
aad
test
inc
pop
outsl
out
and
test
xor
sub
pop
and
pop
xor
mov
mov
xchg
push
lret
push
jae
jnp
mov
mov
jle
enter
dec
andb
cmp
mov
and
mov
sub
sbb
pop
cmpsl
popa
push
sub
mov
rcr
add
out
icebp
sub
ja
movl
enter
call
dec
mov
mov
mov
pop
arpl
dec
repz
mov
lds
dec
mov
sbb
cli
sub
subl
fisubrl
stos
cmp
or
jp
subb
pop
int
movsl
cbtw
sub
mov
cmp
fsub
shrl
jnp
or
pop
push
jmp
push
sub
mov
lcall
push
inc
shll
sub
pop
data16
push
sub
into
cmp
stos
add
js
mov
nop
orl
xchg
add
cmpsl
lods
sub
xor
xor
stos
in
aaa
xchg
push
negl
divb
pop
outsb
imul
pop
push
or
mov
movsb
sub
stos
lods
and
sub
jns
imul
xlat
cmp
push
addr16
jl
pop
pop
and
mov
lods
xchg
popf
sbb
adc
scas
insb
test
jg
push
xchg
sub
mov
adc
out
cltd
sub
and
mov
mov
pop
pop
jl
sub
test
add
pusha
sub
aas
int3
cmp
in
rorb
mov
stos
sti
out
sub
into
xlat
test
and
mov
aad
cmp
sub
frstor
lds
sbb
and
xchg
or
add
outsl
scas
sub
mov
push
mov
add
mov
scas
mov
push
push
scas
test
xchg
cmp
fmulp
enter
push
in
loop
cmp
fidivs
scas
add
inc
loope
outsl
inc
mull
cwtl
and
mov
stos
sarl
mov
sahf
aam
mov
negl
aad
push
jne
dec
dec
mov
mov
push
push
loop
mov
push
and
dec
xchg
cwtl
pop
xor
popl
ret
out
les
xchg
nop
mov
insb
cmpl
lret
fs
nop
push
inc
push
frstor
stc
xor
xor
fwait
js
or
or
mov
decb
data16
push
mov
inc
cld
dec
push
sub
or
ret
adc
cltd
int
bound
insl
inc
mov
pop
ds
fsub
sbbl
leave
jmp
adc
jo
xchg
popf
aas
mov
popa
sub
sbb
outsl
shll
sub
jmp
pop
movups
sub
xchg
sahf
sub
in
dec
jmp
popf
xor
cmp
test
jae
shll
push
mov
mov
xor
clc
ds
sub
test
repz
popf
and
xchg
jbe
subb
sahf
sub
push
and
push
mov
dec
or
xor
pop
mov
fcomip
sbb
stos
shrb
mov
mov
cs
int3
enter
sbb
bound
fsubrs
je
jecxz
cmp
fisubl
ja
sbbb
clc
lods
enter
add
push
mov
js
jnp
sbb
sub
xor
sub
in
inc
sub
out
pop
push
push
add
sub
movb
ds
test
andl
loope
jbe
mov
enter
sub
out
add
scas
push
rcll
dec
or
jnp
imul
pushf
out
add
and
repnz
std
push
adc
xor
pop
xchg
jo
call
push
stos
push
repz
cld
insl
sub
sbb
adc
cmp
pop
mov
popa
push
arpl
mov
ret
push
sub
dec
inc
loop
lret
xchg
inc
scas
or
sbb
les
pop
push
mov
popf
subl
cmp
sub
and
mov
push
sub
stc
lcall
jle
xchg
shr
pop
mov
into
sbb
jge
sub
mov
or
fidivs
je
sub
or
fwait
or
xchg
cmpsb
mov
cmp
mov
dec
mov
inc
sub
pushf
lods
ds
test
jb
subb
sbb
daa
jae
pop
sub
fmull
sub
cmp
jmp
rcrb
cmp
sub
jecxz
lea
popa
in
popa
cmp
je
or
inc
insl
jae
mov
test
mov
inc
or
shl
fistpll
lret
lds
lock
insl
mov
aas
call
stc
sbb
dec
or
or
add
icebp
mov
js
jb
dec
fucomi
sti
sub
in
push
sub
lahf
rolb
aad
mov
adc
sub
enter
xchg
imul
lods
fnstenv
insl
dec
fcmovb
mov
sub
imul
xor
rclb
lods
xchg
cmp
imul
shll
xor
push
mov
cwtl
sbbb
dec
fstp
andb
push
sub
mov
jae
xchg
es
sub
rcr
outsb
push
lcall
adc
lds
les
sbb
mov
aas
sub
cmpl
fidivl
stc
push
mov
into
sub
jo
lods
jg
sbb
js
stos
fidivs
lock
insl
adcb
pop
nop
sub
fldt
daa
add
lret
sub
jmp
adc
or
je
cmp
scas
jge
test
icebp
push
xor
out
sub
int
push
xor
inc
cli
fld
stos
sub
pop
ss
fsincos
adc
pop
sbb
outsb
dec
fcmovb
jns
cmp
sub
xor
fbstp
jns
push
clc
enter
mov
cwtl
push
mov
mov
dec
inc
xchg
mov
stos
mov
inc
bound
arpl
xor
sahf
inc
ljmp
cmp
movsb
repz
scas
sub
jbe
pop
jmp
pop
xlat
clc
mov
xchg
test
lock
sbb
dec
scas
add
inc
inc
fidivrs
xchg
dec
push
arpl
dec
rolb
push
dec
add
movsb
sub
hlt
stos
pop
fsubs
jo
daa
mov
out
mov
cmpxchg
xchg
imul
call
and
jmp
stos
dec
scas
cmp
cmp
mov
and
xor
or
xlat
std
and
adc
jnp
cmpsl
js
dec
stc
cmp
das
xor
ret
clc
pop
sbb
lds
xor
xchg
mov
sbb
outsl
out
insb
in
cmpsb
inc
mov
stos
mov
dec
aam
push
fdivr
cmc
push
fadds
enter
dec
out
pop
cwtl
mov
shlb
sarb
jne
inc
ss
sarb
ja
inc
push
lcall
pop
cmp
mov
call
pop
jno
xchg
push
adc
ficoms
dec
xchg
cli
dec
push
jmp
ret
pop
mov
sbb
leave
sti
int
mov
xor
xor
mov
fwait
xchg
mov
or
push
sub
jo
add
cmp
mov
mov
jns
sub
pusha
lahf
lret
shlb
mov
mov
mov
and
inc
mov
cmc
mov
es
pop
xor
jmp
jmp
cli
repnz
call
in
pop
rep
dec
dec
outsb
pop
call
fimull
jle
mov
ss
lods
pop
adc
or
jg
enter
sub
pop
hlt
add
int3
xor
sub
and
push
fcom
mov
mov
daa
mov
shrb
pop
stos
add
mov
call
push
inc
mov
arpl
arpl
sub
repnz
xchg
sti
ret
sub
jmp
cltd
or
insb
sbb
jmp
xor
sub
js
mov
hlt
jecxz
jne
arpl
inc
or
test
push
inc
sub
cmp
aad
sub
popa
lock
stos
orl
pop
mov
sub
je
inc
subb
mov
mov
lahf
popl
pusha
psubw
jge
mov
jmp
in
mov
pop
sub
lret
inc
es
sub
and
mov
push
adc
ficompl
aad
adc
pop
or
testb
mov
xlat
hlt
shrb
mov
pusha
push
xor
icebp
sub
ds
mov
aam
or
test
fisubrl
cld
mov
push
mov
sub
and
aam
pop
in
sub
shrl
push
sub
cmpsb
outsl
and
orl
and
mov
aaa
cltd
jg
sbb
xor
xlat
sub
leave
pop
rcll
inc
pop
sub
lret
loopne
int
ljmp
sub
push
add
mov
fwait
pop
inc
cmpsl
pop
inc
dec
sub
popa
jns
inc
icebp
mov
sarb
leave
in
sub
adc
mov
imul
xchg
insl
mov
mov
mov
adc
adc
jmp
inc
cmpsl
xchg
insl
ret
mov
xor
sub
cmp
add
mov
sub
lds
in
xchg
push
xor
or
sub
jo
pop
xchg
rorb
sub
mov
popa
push
addr16
in
dec
mov
dec
adc
inc
divl
push
push
adc
ja
pop
popa
lret
pusha
sbb
push
fcomps
lcall
sub
dec
or
roll
mov
inc
inc
jmp
pop
aas
sub
imul
sub
sub
cmp
sub
rclb
sbb
inc
pop
cmp
ljmp
xor
sub
xlat
xor
adc
aas
rorb
dec
iret
mov
mov
pusha
test
je
sub
shrl
out
loopne
sbb
mov
cmp
popa
push
rcll
cmp
mov
xlat
nop
pop
dec
cld
xor
xchg
leave
adc
sub
mov
mov
sub
push
mov
sub
js
cmp
stos
jecxz
adc
push
call
movsb
sbb
sub
mov
es
mov
dec
out
stos
sti
push
call
int
pop
xchg
jg
into
xchg
fwait
cmp
pop
rorb
int3
dec
pop
inc
lock
fcomip
jbe
sub
out
movsl
pop
mov
punpckhbw
addr16
sub
cmc
enter
adc
aad
sar
ret
push
lods
cmp
lea
sub
sbb
jne
aaa
sub
add
pop
std
xor
sub
jl
mov
pop
sub
sbb
push
sub
mov
loopne
insl
popa
and
mov
add
daa
movsl
lcall
or
fisubrs
rcr
cmp
xor
mov
pop
mov
dec
lods
jae
ret
push
mov
xchg
popa
sub
mov
fdivs
loope
lds
cmp
fdivr
test
mov
enter
cli
int3
xchg
jge,pt
inc
mov
fisttps
stos
sub
aad
sub
mov
mov
jns
push
dec
sub
loopne
out
inc
pop
mov
and
dec
loope
ret
and
xchg
pop
cmp
iret
ja
rcr
popa
mov
lea
cs
inc
or
jne
xchg
hlt
mov
sub
sti
pop
or
inc
fcoms
sbb
sub
mov
dec
jmp
int3
sub
xor
xchg
adc
rol
mov
movsl
movsb
shrl
jecxz
or
pop
cmp
fnsave
jmp
dec
adc
popa
xor
dec
jge
out
aad
lea
push
ds
movsb
loopne
sub
jb
cmp
jns
or
add
add
sub
test
mov
xor
outsl
imul
lds
rorb
stos
nop
dec
mov
inc
sub
icebp
arpl
xchg
mov
adc
sub
add
les
in
sub
out
in
mov
lea
sbb
mov
sub
sub
arpl
jns
lret
pusha
push
sub
add
sbb
dec
mov
jl
and
fistl
sub
movsl
push
jp
inc
mov
cmp
test
mov
add
insl
xor
popf
inc
inc
pop
mov
push
ljmp
sbb
add
sub
cwtl
cmp
xor
push
inc
pop
adc
push
and
dec
inc
test
dec
mov
xor
jmp
xor
xlat
outsl
dec
mov
jle,pt
xchg
out
stos
adc
jge
sub
test
adc
mov
sub
push
or
add
mov
lret
push
xchg
sub
je
add
pushf
das
dec
sub
inc
cmc
mov
cltd
aam
sub
in
sub
xlat
mov
sub
and
popa
lahf
mov
lds
lret
sub
fisubrs
sub
ret
jo
sub
sub
jne
arpl
scas
cmp
leave
inc
mov
lea
sub
insb
mov
mov
mov
pop
sub
es
sub
out
mov
cld
pop
scas
mov
and
xchg
sub
cld
ss
ficoml
inc
cmp
lahf
adc
sub
dec
jl
push
add
lods
fiadds
cmc
sub
shlb
xor
mov
cmp
xor
push
stc
sub
mov
mov
ret
movaps
test
and
movsb
mov
shrl
aaa
jne
stc
maxps
push
mov
fdivrl
push
das
je
int3
js
aam
xor
jae
in
or
mov
sub
jl
xchg
lds
outsb
jmp
pop
xor
xchg
repz
xor
or
inc
cs
xor
leave
icebp
fcomps
sub
xlat
jl
sbb
lods
pop
in
scas
es
cmp
ss
push
sub
xor
mov
sub
sub
cmp
movsb
and
jns
fwait
ret
cmpsl
fmuls
int
ret
hlt
stos
inc
inc
imul
push
nop
test
movb
sbb
add
xchg
loop
pushf
dec
push
call
aam
pop
mov
sub
cwtl
and
sbb
xor
es
cmpsl
and
inc
test
dec
jge
jle
sbb
jo
shrl
push
adc
or
sub
divb
loop
movsb
lret
pop
mov
mov
add
jae
pop
inc
test
out
out
test
push
sub
fstpt
js
scas
pop
cs
push
lcall
je
ret
fcmovne
xchg
repz
mov
or
sbb
rcll
cmp
pop
fwait
sub
push
andl
add
dec
jmp
les
ret
sti
test
imul
gs
pop
aad
in
movl
or
dec
and
gs
sahf
rcr
sub
pop
sub
add
or
jmp
in
sub
lock
xchg
mov
imul
xor
inc
jmp
pusha
imul
jg
sbb
and
add
cmpsb
inc
lods
fnstenv
imul
xor
aaa
out
xchg
push
sub
sub
cmp
dec
jne
mov
icebp
sub
aas
sti
cs
mov
cmp
lcall
adc
sahf
pop
xchg
cltd
sub
int3
cmpl
pop
stos
sub
sub
imul
pop
movsb
roll
or
lcall
dec
cli
lods
pusha
arpl
addr16
xchg
ds
ds
jns
push
jo
cmc
pop
mov
out
sub
fstp
cs
mov
mov
ret
push
xchg
jns
out
push
dec
pop
int
mov
jo
fsubrl
js
insb
outsl
sub
int
cli
add
add
push
jo
fsub
sbb
lret
clc
lods
adc
daa
stos
out
lods
or
jmp
in
fsqrt
mov
or
out
scas
clc
dec
xlat
fwait
xor
sbb
and
jb
pusha
insb
inc
or
lds
mov
add
sbb
lahf
out
test
test
movmskps
adc
cli
icebp
dec
and
cmpsl
pushf
enter
push
test
mov
jge
fadds
push
repnz
push
loopne
cmc
mov
dec
jecxz
adc
icebp
sbb
pop
cmp
mov
or
cmp
adc
clc
das
out
push
sub
push
ret
jmp
push
jo
out
cmpsl
push
push
insb
icebp
cmp
or
jmp
rcll
sti
test
sbb
cli
arpl
mov
pop
movsl
sarw
sbb
hlt
mov
movsl
xlat
scas
cwtl
cmp
sub
mov
fwait
sub
sub
sar
mov
stos
push
jg
mov
xchg
adc
pop
push
cmpl
cmpsb
push
lahf
mov
adc
stos
pop
sti
int
mov
out
lret
test
repz
loop
gs
lock
jb
add
dec
dec
add
sbb
mov
or
leave
mov
fcmovnb
imul
pop
push
les
or
sbb
jl
cmp
mov
jmp
add
scas
push
fmull
cmpl
push
movsl
ds
jecxz
add
lods
cwtl
mov
inc
dec
mov
dec
dec
cli
stc
stc
movsb
rcll
cmp
sbb
addr16
pop
inc
cmp
mov
data16
or
cmp
test
inc
je
fs
sub
cmp
mov
lcall
mov
push
int
aam
mov
std
adc
jecxz
mov
mov
out
hlt
stos
je
jns
jecxz
mov
jecxz
inc
jns
xor
mov
mov
lods
das
mov
sti
inc
and
mov
clc
fisttps
mov
enter
aam
rolb
cmpb
lds
les
arpl
icebp
mov
jmp
mov
clc
clc
cmp
jmp
out
push
scas
xchg
dec
hlt
fnstenv
lds
xor
imul
popa
mov
lcall
cmpsb
lds
iret
js
insb
jnp
addr16
add
cmp
test
push
and
pop
arpl
rolb
cli
outsb
aaa
mov
clc
pop
mulb
rcrb
and
xchg
mov
xor
push
lds
les
lods
inc
shlb
enter
push
mov
mov
popa
mov
loope
jmp
clc
cmovne
xor
push
mov
imul
mov
jecxz
stos
ljmp
xorl
xchg
test
ret
rcll
repnz
push
sti
cmpsl
inc
xor
lcall
outsl
cmp
dec
jae
dec
leave
adc
push
lret
es
dec
fistpl
pop
and
movsb
sub
pop
xchg
lock
cli
bound
adc
repnz
cmp
adc
dec
or
cli
sti
loopne
jge
and
fisubrl
aas
int
xlat
mov
adc
dec
imulb
sub
add
pushf
ds
sub
aaa
testb
cmpsb
dec
jns
nop
test
lods
jo
jb
imul
pop
clc
movsb
xchg
xchg
arpl
sbb
or
jp
cmp
and
sbb
lds
mov
mov
sti
rsqrtps
sub
out
or
test
dec
sub
stc
dec
ret
jno
sub
sub
testb
adc
imul
sub
dec
addr16
xor
cltd
sub
sub
mov
sub
sub
add
mov
scas
pop
pop
push
lods
ds
sahf
lret
popa
call
mov
sub
inc
sub
xchg
loopne
rcrb
cmp
mov
repnz
mov
das
and
sub
xchg
sarb
pusha
outsl
fistpll
int
inc
test
xchg
push
mov
dec
mov
sbb
sub
stos
int
cwtl
clc
imul
push
inc
xor
push
cltd
std
lret
xor
rcrb
int
fwait
mov
ds
mov
adc
pop
int
pop
xor
push
sar
mov
mov
andl
imul
inc
sub
mov
scas
xor
add
idivl
push
scas
cld
cmc
pop
xor
outsb
js
xchg
jno
ja
or
fisttps
enter
mov
icebp
cmp
sub
outsl
out
fiadds
cld
dec
add
dec
mov
xor
xor
jns
jno
lds
push
inc
daa
xor
insb
add
dec
mov
mov
js
sub
test
mov
in
or
cmpsl
adc
sub
pop
out
sub
mov
pop
dec
and
cmpsl
ret
clc
sub
mov
insl
incb
rol
loopne
xor
and
fidivrl
cld
movsl
sub
mov
aam
les
insb
pop
push
mov
arpl
pop
xor
sub
cmp
push
xor
int
mov
mov
adc
repnz
loop
mov
inc
sub
les
call
ds
jbe,pt
jmp
adc
sahf
cmp
mov
jno
inc
sbb
sub
cmp
fwait
dec
ljmp
les
lahf
ds
inc
clc
enter
or
subl
stos
sub
jge
int3
js
notb
stos
les
gs
or
scas
or
sbb
pop
shrl
stc
daa
fwait
in
imul
call
movsl
and
jb
dec
cld
mov
push
repz
lret
rclb
pop
enter
imul
sub
scas
xchg
imulb
push
dec
and
sub
inc
jns
sub
xor
jo
sbb
mov
lret
and
pop
sbb
dec
mov
cmpsb
scas
test
aam
adc
sub
mov
or
dec
mov
imul
dec
ret
dec
test
xchg
loop
sbb
cmp
mov
or
fisubrl
or
in
sbb
hlt
sub
das
mov
xchg
add
push
adc
fs
xorb
lock
ds
dec
pop
dec
push
sub
add
xchg
aaa
iret
jns
inc
or
ljmp
xchg
jmp
out
dec
sub
mov
repnz
pusha
mov
nop
fwait
into
test
mov
pop
push
loopne
mov
mov
mov
daa
insb
sub
mov
inc
sahf
or
lods
icebp
jbe
add
jae
fsubrs
imul
mov
pop
or
xor
clc
lcall
pop
je
dec
daa
fwait
sub
scas
add
in
call
cli
out
repnz
pop
inc
dec
mov
inc
sub
test
int
nop
sub
mov
sub
xlat
clc
cmpsb
adc
cmp
mov
daa
addl
rorl
jbe
pop
sub
sub
decb
sub
mov
ljmp
ret
scas
in
lcall
push
sbb
sub
popf
jle
fimull
xchg
push
xchg
mov
outsl
xor
sbb
into
bound
or
jbe
ret
clc
push
daa
sub
setge
or
shlb
xor
popa
out
push
clc
xchg
xor
add
push
aas
insb
mov
jmp
jne
sub
gs
iret
shlb
not
pop
cli
mov
cltd
scas
dec
add
arpl
mov
pop
ljmp
pop
adc
in
mov
insb
repz
test
test
cli
pop
pop
adc
ja
sub
sub
mov
lock
inc
inc
cli
loopne
daa
add
jecxz
dec
mov
cmp
sub
fimull
mov
stos
test
jns
adc
inc
cmp
pop
lret
xchg
cltd
jno
push
push
mov
cmp
sbb
clc
leave
test
or
mov
pop
popf
lock
inc
mov
sbb
lea
push
or
jp
inc
iret
cs
mov
cmp
insb
jne
pusha
sbb
or
in
in
sahf
popf
xor
cmpl
scas
popf
bound
aad
negl
sahf
clc
and
mov
sub
dec
cmp
mov
adc
adc
lea
jae
mov
das
dec
cmc
cli
outsb
stos
divb
and
xchg
std
movsl
push
frstor
mov
dec
ds
pop
call
stos
sub
lock
clc
int3
fisubrl
out
ficomps
dec
add
xchg
and
pop
popf
or
push
mov
dec
cwtl
sahf
mov
scas
xor
in
loope
inc
inc
push
mov
out
lahf
mov
mov
jl
mov
hlt
aaa
pop
jp
loopne
xor
movsb
add
dec
lea
ljmp
and
imul
jbe
outsl
movsl
dec
or
sub
mov
hlt
adc
popf
test
xchg
xor
das
enter
push
adc
in
mov
mov
mov
clc
jae
repnz
xchg
rorb
xor
mov
jns
push
sbb
je
xor
add
in
jecxz
push
rorb
sbb
in
fildl
sub
lahf
and
xchg
nop
inc
cmp
jae
daa
xorl
sub
ds
jecxz
stos
mov
inc
popl
nop
jle
and
and
popf
mov
test
das
adc
mov
ret
cmp
inc
sub
jb
cmp
aad
nop
jno
sub
pop
cmp
xor
lods
test
shll
fidivs
call
and
jo
inc
je
mov
out
sub
pop
daa
out
lret
repz
ret
mov
loop
dec
jnp
es
sub
aaa
add
sub
jb
fsubrs
xorl
mov
mov
insb
mov
popa
adc
xchg
cwtl
xor
mov
imul
pushf
add
xchg
rorb
imul
jl
mov
popa
jnp
pop
shrb
pop
insb
cmp
sub
mov
cli
mov
cmp
xchg
aas
sbb
push
sub
sub
xchg
or
ret
dec
sub
icebp
imulb
push
sub
leave
xchg
movb
and
pop
xor
xchg
push
cltd
fldlg2
test
xchg
jnp
scas
test
jp
ds
lret
cli
sbb
jo
lods
push
sub
cmp
inc
push
jmp
xchg
cwtl
shrl
mov
xor
adc
and
daa
adc
sub
dec
mov
popa
jmp
cmp
push
in
int3
xor
repz
sub
sbbb
adc
loope
cmp
jno
mov
outsl
pop
insb
adc
xor
mov
mov
mov
fsubrs
mov
or
dec
out
test
loope
adc
jae
push
stos
xchg
sbb
jl
scas
loop
push
imulb
sub
sub
lret
mov
cmp
ss
sarb
xor
mov
add
lock
ljmp
out
stos
xchg
outsb
movsl
mov
sub
push
imul
testb
push
lret
or
sub
adc
je
mov
jne
scas
mov
sub
xor
ss
and
push
das
cmp
imul
mov
cltd
pop
sub
push
xchg
mov
sub
mov
es
mov
add
mov
fimull
push
testb
jle
sub
add
mov
pop
mov
sub
sbb
dec
sbb
lcall
dec
pop
shrb
sbbb
and
adc
fistl
sub
fwait
xchg
adc
lock
enter
pop
mov
ret
sub
sbb
xor
mov
mov
sbb
daa
push
shlb
mov
jnp
mov
inc
mov
xor
in
daa
insl
cltd
aaa
push
dec
and
mov
mov
lcall
fsubrp
xor
or
xor
and
sub
push
idivb
aaa
stos
arpl
cld
in
or
adc
xchg
out
movsb
lcall
lret
inc
imul
enter
movsb
mov
inc
test
mov
sub
sahf
mov
pop
pushfw
adc
sub
fxtract
sub
imul
add
call
jle
jb
ficoms
cli
sub
pop
pusha
mov
mov
rol
lahf
sbb
lds
mov
sub
add
in
mov
sub
sub
push
xchg
repz
sub
inc
arpl
sub
fwait
jo
sbb
jmp
sahf
lds
movsl
sub
jb
cmp
pop
gs
mov
xchg
cld
gs
lods
xor
push
xchg
mov
add
fiaddl
sub
test
pop
ds
aam
lret
mov
mov
inc
jecxz
cmp
mov
test
aaa
ret
mov
jo
push
sub
mov
cmpsb
fdivrl
lret
outsl
push
mov
and
shrb
nop
pop
lds
sub
adc
inc
mov
push
mov
shrb
pusha
loop
sbb
sub
adc
and
test
inc
mov
cli
cmp
lret
mov
add
sub
ljmp
pop
inc
add
push
out
hlt
mov
xor
pusha
or
jbe
and
adcb
dec
sub
fcmovnb
add
or
pop
adc
loop
sub
cltd
sbb
mov
xchg
or
lock
xchg
pop
sbb
ja
sub
pop
xor
icebp
xor
imul
mov
adc
arpl
mov
xor
sub
and
push
lcall
out
pop
mov
jno
out
in
outsb
js
pop
loope
fisubrl
xchg
push
mov
in
or
sub
loop
mov
scas
jl
mov
pop
xchg
push
test
out
add
rcrl
push
aam
sub
pop
cmc
adc
outsb
lret
pop
and
xor
mov
jge
xchg
fwait
or
pop
or
sbb
mov
stc
dec
xchg
pop
mov
sub
push
jg
shrl
pop
mov
xchg
jmp
jecxz
adc
shl
cmp
inc
imul
clc
popf
add
jmp
push
shrl
pop
aaa
cli
gs
push
addr16
add
sub
insl
xchg
xor
sbb
mov
mov
push
test
pop
sahf
sub
stos
incb
adc
pop
movsb
dec
stc
sub
outsl
mov
mov
pusha
adc
cli
xor
jp
movsl
sub
mov
xchg
shl
xor
sti
push
mov
and
ret
xchg
lret
test
add
sbb
sbb
loopne
add
mov
mov
jle
fisubrl
lds
sub
lods
pushf
mov
ds
dec
xchg
inc
lcall
ljmp
not
adc
mov
cmp
or
dec
add
sti
push
fwait
and
add
mov
movsl
cs
jg
jnp
and
jge
in
mov
or
rcrl
ret
out
adc
sub
cli
mov
shll
xor
mov
addr16
lock
cmc
inc
sub
mov
mov
mul
xlat
adc
sub
pop
ficoms
cli
rclb
int
cmp
sub
jo
push
cmp
pop
mov
jbe
pop
add
sub
cmpsb
sub
movsb
xor
mov
cwtl
jl
mov
sub
ret
xchg
mov
test
cmpb
movsb
dec
jmp
popa
adc
and
jns
sti
dec
sti
test
adc
pop
mov
cwtl
stc
cmpsb
mov
mov
ds
imul
dec
leave
fbstp
into
jmp
jle
fwait
cli
es
shl
pop
jp
inc
push
xchg
loop
xchg
aaa
sahf
or
imul
jb
lahf
mov
std
iret
test
sub
add
or
sub
fistpl
cmc
fwait
adcl
push
push
scas
aam
les
repz
jb
pop
xor
and
sbb
mov
js
in
sarl
in
data16
xchg
shl
lcall
mov
cli
mov
xor
xor
sbb
push
pop
inc
imul
rcrb
mov
ja
popf
aad
jmp
test
mov
test
jae
aad
cwtl
cmp
aam
je
sbb
dec
stos
clc
out
les
lock
sbb
ret
fs
mov
add
mov
out
mov
out
sub
sbb
jb
in
rorl
inc
in
cmp
shl
hlt
shrb
cli
testb
lods
mov
dec
xor
popf
cmp
xchg
orb
lock
mov
enter
dec
xchg
adc
sub
jmp
mov
pop
shlb
push
scas
mov
xchg
xchg
lahf
inc
roll
jmp
jne
rcrl
stos
fidivrl
sbb
iret
push
dec
filds
sbb
mov
mov
xchg
int
je
test
sub
pop
insl
push
clc
gs
sbb
add
sub
mov
or
push
push
pop
cwtl
lret
sti
cmp
rorb
pop
in
add
scas
xchg
int3
dec
push
sub
clc
aaa
pop
out
push
pop
stos
test
outsb
cli
ja
inc
mov
lods
lahf
pop
sub
cmpsl
and
xor
fmul
cli
xchg
inc
push
mov
ret
notb
pop
push
push
mov
mov
addr16
dec
push
jg
addb
mov
jae
cmp
dec
jo
mov
sti
jge
cmp
aaa
push
mov
popf
sub
cmpl
cli
adc
cli
sti
stos
fcoms
pop
dec
pop
outsb
cwtl
cmp
loopne
mov
dec
push
cmp
ds
inc
pop
push
enter
aas
inc
xor
xchg
fildll
cmc
mov
adc
or
fbstp
sti
mov
dec
mov
and
jg
mov
rcrl
mov
mov
push
jecxz
mov
cli
push
or
sahf
or
mov
cwtl
clc
mov
inc
rorb
mov
ret
popa
lret
sbb
mov
or
rclb
pop
pop
clc
add
loop
repnz
orb
jg
sub
add
push
shrl
push
xor
cltd
mov
pop
sub
pop
or
and
mov
adc
xchg
enter
sub
sti
aad
or
jmp
inc
and
cmpsl
sahf
fwait
in
or
add
dec
call
pop
fists
stos
pop
jmp
mov
or
dec
xchg
mov
lds
jb
cmpsb
or
mov
mov
jne
les
mov
movsb
fdivs
aaa
sti
pop
ja
lcall
ret
nop
or
cmpsb
fbld
aam
pop
xor
aad
mov
js
dec
fxtract
xor
inc
jg
dec
rcrl
xlat
lcall
cmp
leave
les
xor
mov
pop
popa
mov
bound
clc
popa
lret
mov
push
ret
nop
xchg
out
xchg
ret
push
in
outsl
sub
scas
add
add
ret
sbb
or
call
cli
popf
xor
add
ret
fs
push
stos
test
xor
shll
cli
pop
mov
les
pushf
push
in
mov
std
sbb
lret
dec
lods
cmp
jns
rorl
mov
mov
dec
xor
lret
mov
lds
stos
mov
mov
cmp
cli
add
scas
jns
fisttps
xchg
les
inc
lcall
movsb
addr16
cs
xor
in
dec
cmp
rcll
mov
xchg
dec
inc
sbb
mov
jne
pop
shrb
jg
les
jbe
filds
mov
int
ret
les
test
into
stos
divb
mov
xchg
cli
lods
lods
mov
mov
mov
arpl
pop
push
mov
fucomip
out
test
lea
enter
xchg
cld
insl
out
out
enter
jne
mov
in
ret
jecxz
andl
push
mov
je
mov
pop
add
add
jecxz
jbe
sub
sub
fists
imul
aaa
sbb
push
rolb
pop
xchg
cltd
outsl
in
shlb
ret
cmp
arpl
dec
cltd
lea
pop
repnz
sbb
sbb
push
cmc
stos
insb
clc
ret
adc
cmc
dec
and
test
rcl
sti
xchg
or
into
movsb
pop
les
outsb
push
enter
stos
cwtl
add
dec
dec
vpmaxsw
gs
stc
push
sub
mov
fucomi
jbe
clc
xor
insl
fwait
sti
aas
pop
into
enter
enter
xchg
or
pop
jl
nop
lock
arpl
cmpsl
inc
lock
rcrl
pop
jmp
xor
mov
xor
stos
push
aam
sub
adcl
inc
jecxz
sub
dec
cmp
iret
cli
lcall
sub
out
adc
inc
cmpsl
in
fldcw
adc
nop
shll
ljmp
dec
jecxz
ds
jl
inc
xchg
mov
push
pop
in
cli
or
je
lcall
rcl
push
fdivs
inc
mov
xchg
mov
mov
dec
and
cli
popf
and
and
out
rorb
lods
add
jmp
dec
mov
mov
mov
mov
cli
sbbl
sbb
pop
das
jmp
rolb
mov
sbb
dec
cli
dec
mov
int
pop
pop
imul
jmp
cmp
adc
sub
lret
push
shll
xchg
in
es
mov
push
stos
or
cmpsb
add
mov
scas
jg
das
iret
push
mov
ds
lods
cli
mov
pop
cmp
pop
iret
sub
mov
icebp
sub
push
ds
rcll
es
mov
out
pushl
fsubrl
pop
stos
xchg
icebp
mov
sti
mov
push
shll
inc
js
in
or
cmp
out
sti
sub
mov
add
test
out
add
push
scas
adc
cmp
or
pop
rorb
sub
mov
insl
js
sub
mov
leave
cmpsb
sub
sarl
inc
pop
sub
inc
jl
scas
fidivrl
and
xchg
sub
push
cwtl
iret
imul
sub
xchg
mov
cmp
cmc
xor
ja
add
mov
mov
ljmp
sub
out
mov
jno
dec
cs
rcr
int
xor
xchg
sub
or
lcall
dec
add
sub
jecxz
call
xor
stos
xchg
movsb
cmp
test
add
test
stc
push
les
and
mov
sub
lahf
sub
popl
inc
xchg
clc
subb
sbb
jns
push
xchg
dec
sub
imul
and
inc
adc
imul
dec
cwtl
dec
sbb
sub
dec
mov
nop
mov
sbb
sahf
sub
jl
or
sub
inc
push
dec
xchg
data16
test
sbb
lret
jne
inc
pushf
scas
stos
mov
cmp
shlb
imul
dec
int3
imul
fsts
mov
sub
imul
in
call
inc
sub
xchg
lea
cwtl
push
sub
fisubs
shll
xchg
dec
push
test
xlat
sub
push
aaa
lahf
shrl
jge
loope
js
mov
push
mov
test
or
test
ds
mov
cmpsl
push
sub
mov
das
divl
sub
mov
bound
inc
mov
int
stos
leave
inc
xor
adc
xchg
loope
add
sub
xor
and
test
sub
fidivs
push
aam
inc
and
in
dec
cmc
sahf
or
popa
icebp
sub
sub
xchg
lahf
sub
lds
leave
orb
push
test
or
mov
cmp
dec
int
add
mov
sub
cmp
mov
in
sub
jbe
jle
xchg
mov
or
js
ja
sub
data16
lock
jns
fcmovu
adc
sbb
call
jae
sbb
cwtl
sbb
or
adc
sub
xor
cli
mov
jo
movsl
enter
and
fldt
test
imul
lea
cmc
jns
shrl
shrb
neg
sub
cmp
mov
adc
or
clc
jnp
push
data16
out
dec
inc
leave
fsubl
dec
outsl
cmp
sahf
aam
push
dec
fldcw
mov
sub
sub
das
or
ret
rorl
push
clc
loopne
or
repz
cmp
inc
loop
movl
adc
inc
xor
fsubl
pop
leave
push
in
aas
adc
sub
scas
cwtl
lcall
sbb
stos
scas
mov
aaa
arpl
cmp
filds
pop
pusha
scas
push
xor
xor
mov
sbb
inc
outsb
dec
sub
frstor
pop
sub
dec
adc
mov
adc
filds
iret
pop
adc
ret
jmp
or
push
stc
test
or
sub
xchg
inc
outsl
aas
stos
fidivrl
sub
test
adc
mov
jno
inc
icebp
lods
push
out
lock
sahf
sub
xor
pop
je
dec
jae
cmpsb
xchg
test
xchg
and
dec
and
cmp
lret
dec
add
push
ja
adc
push
jns
pop
test
outsb
jne
sub
push
adc
mov
pushf
mov
scas
sub
inc
mov
push
mov
mov
or
pop
movsl
aam
push
repz
mov
or
in
les
aad
inc
jbe
ds
icebp
mov
xor
and
repz
int3
es
iret
cmp
xchg
mov
mov
adc
adc
push
out
mov
lods
imulb
xchg
xor
lcall
xchg
adc
sub
shld
sbb
lret
pop
out
mov
dec
imul
jp
lret
fstpl
mov
int3
add
cmp
ds
fnstenv
and
sub
jp
xchg
ljmp
cmp
xor
nop
sub
sub
adc
fwait
jmp
mov
xor
adc
nop
enter
fdivs
addr16
mov
sub
sub
bound
les
inc
fistps
push
cmpsl
mov
xor
push
daa
push
cmp
dec
aam
or
sub
push
shrb
sub
sub
xor
cmpsl
sbb
jmp
mov
cltd
add
sub
xchg
sub
push
outsl
mov
inc
fsubs
jae
sub
mov
sub
xchg
jge
add
test
je
bsf
sub
mov
push
sub
pushf
sahf
dec
std
add
sub
pop
jp
and
jmp
imul
mov
sub
xchg
lret
jns
sub
xor
test
sbb
jle
pop
pop
lods
lock
and
cmp
gs
test
fs
imul
mov
imul
inc
mov
sbb
scas
xchg
or
ljmp
push
sub
and
iret
jbe
push
sub
jecxz
adc
lcall
push
jg
push
stos
sub
push
addb
add
xchg
loope
sub
sub
mov
lret
mov
sti
ja
andb
insb
sub
movsb
inc
pusha
bound
sub
fimull
rcll
mov
sub
lret
jbe
cmpsl
and
pop
out
ret
insl
in
jle
sbb
loop,pt
rol
push
sub
ds
lcall
sahf
fbld
je
sub
test
pop
xchg
shrb
sbb
pop
lock
sub
sbb
dec
lret
inc
movd
sub
adc
ret
fstpt
lds
ficomps
cwtl
mov
ljmp
push
pop
scas
leave
lea
sub
sub
push
mov
xor
dec
loop
mov
negw
clc
or
test
movb
or
ret
or
aad
addr16
stc
sub
stos
xchg
mov
pop
inc
outsl
mov
les
jp
mov
mov
lock
fstps
das
je
ds
mov
stc
inc
test
enter
mov
push
repnz
mov
in
pop
sbb
xchg
movaps
xor
sub
xchg
aas
mov
sub
icebp
push
dec
mov
adc
pop
sub
mov
data16
mov
jmp
cmp
out
mov
dec
sub
nop
xlat
add
loopne
pushf
pop
push
out
clc
inc
stos
sub
push
mov
mov
dec
repnz
adc
fwait
dec
pop
dec
pushf
and
push
sub
mov
sahf
xchg
or
or
push
mov
sarl
ljmp
jmp
psubsb
les
jg
sbb
shlb
adc
bound
imul
cmp
push
cmc
xlat
loope
jge
cli
inc
sub
and
sbbb
mov
leave
and
and
sub
and
jns
jecxz
sub
loope
push
lds
lret
push
push
fstps
test
imul
in
or
cli
xlat
jae
shrl
iret
movsb
mov
and
cld
sub
daa
adc
cmp
xor
sub
add
imul
mov
lds
jno
sub
jge
pop
adc
sarl
pop
xchg
shrb
mov
in
sub
jno
sub
inc
movsl
pop
cmp
sbb
stos
sub
dec
imul
test
push
or
or
sahf
fiadds
loop
mov
mov
mov
pop
jp
or
inc
les
fnstcw
adc
or
jo
and
push
or
and
lds
add
shrl
and
cli
scas
leave
subl
dec
push
mov
mov
nop
jg
flds
push
ret
push
icebp
mov
out
pop
push
inc
jmp
negl
xorb
sti
mov
adc
xchg
mov
lcall
ja
mov
insb
out
push
fld
pusha
pop
fimull
mov
pop
cli
sub
repnz
sti
or
and
fwait
dec
pop
pushf
jmp
daa
and
lahf
push
ljmp
sti
lods
fadd
fwait
js
mov
and
addr16
jno
xchg
ret
add
mov
clc
out
mov
cmp
xchg
xchg
cmp
and
lret
leave
mov
in
fcoms
and
pop
jno
inc
shlb
lods
cli
cmc
fisttps
outsb
add
sub
loop
divb
pop
xor
pop
lea
push
cmp
movsb
int3
in
pop
lret
mov
mov
sub
cld
mov
xchg
cli
int
sar
lods
sub
sbb
add
les
xchg
inc
jge
arpl
push
sub
flds
or
je
arpl
adc
js
mov
sub
lds
ret
sbb
and
bound
push
loope
std
mov
loop
fldt
pop
sbb
cwtl
and
bound
mov
shlb
lret
jg
sub
aam
fcomp
jmp
push
jo
lcall
repz
dec
cmp
popf
cmp
mov
inc
dec
subl
jo
pop
movsb
sub
outsb
jmp
jns
adc
mov
lods
sysexit
fistpl
xor
xchg
lods
xchg
add
inc
addb
xchg
mov
rcrb
clc
and
faddl
jg
test
cli
scas
jns
mov
pop
aaa
sar
sub
loop
movsl
lods
mov
lret
push
jp
testb
cli
leave
mov
ficoms
insl
xchg
lcall
into
inc
push
push
push
sub
lds
adc
fwait
bound
outsb
xchg
test
in
cmp
hlt
cltd
fmuls
add
jle
lods
data16
lds
enter
out
adc
in
sbb
jb
shlb
shll
adc
shll
fsubrl
lahf
dec
adc
clc
and
push
int
mov
inc
lods
jmp
push
sbb
push
push
or
shr
add
lcall
inc
pop
ret
adc
pop
inc
sbb
xlat
arpl
xchg
add
add
in
outsb
dec
dec
jle
scas
in
addl
std
jne
outsl
dec
aad
jnp
inc
cmp
inc
fstpt
cltd
aad
jns
mov
mov
fimull
mov
sbb
in
sarl
push
jg
pop
clc
outsb
in
add
push
xor
call
inc
lret
fbstp
addb
jecxz
data16
pop
or
stos
push
fists
aad
push
nop
jnp
cmp
xor
mov
inc
scas
cli
mov
mov
xchg
push
xor
cwtl
and
scas
pusha
inc
mov
or
and
mov
fistpll
dec
lret
hlt
dec
inc
in
repz
sub
cli
or
sbb
scas
add
or
in
add
repz
cltd
jo
mov
cs
loop
pusha
pop
cli
mov
sar
and
mov
icebp
mov
repnz
xchg
dec
xlat
pop
push
push
push
out
sub
addb
cmp
sub
fidivrs
or
lahf
adc
out
rcrl
sub
es
insl
dec
push
pop
mov
mov
inc
xchg
iret
sub
inc
fadds
shufps
xor
imul
add
nop
adc
mov
mov
jg
arpl
push
lds
jno
jns
xor
jp
dec
jl
test
sub
xchg
ds
jle
sub
ljmp
fsubs
bound
out
repz
ds
adc
rorb
out
cwtl
and
nop
xchg
sub
dec
inc
mov
sub
mov
rorl
movl
cld
sub
sbb
outsb
pop
jg
mov
lret
push
inc
pop
mov
iret
inc
fbld
imul
sub
add
lcall
or
push
xchg
sub
mov
and
scas
lock
sub
jbe
mov
fcoml
pop
lcall
or
jb
ljmp
lret
aaa
inc
sub
ficompl
jnp
cltd
push
outsl
push
adc
sub
xchg
shr
sub
test
ret
push
movsl
pop
movsb
sub
scas
xchg
xchg
jne
call
mov
lock
add
scas
nop
xchg
or
out
sub
push
and
sub
add
add
or
or
ffree
dec
pop
xor
adc
sahf
mov
lock
enter
ret
outsl
aam
test
jg
sub
jo
insb
xchg
mov
sub
push
add
ja
dec
xchg
xor
add
jno
cli
shrb
lds
lock
into
adcl
shrl
out
es
addr16
out
sub
rolb
imul
mov
sub
mov
cmc
pop
sub
es
jns
clc
sbb
jp
ljmp
mov
sti
rcrl
mov
fbstp
sub
mov
test
push
das
sub
jns
and
lods
fs
inc
ret
xor
scas
aad
daa
sub
sbb
xor
pop
std
lcall
sub
xchg
cs
push
mov
sub
sbb
rcrb
aad
enter
xchg
dec
mov
push
arpl
insb
sub
sub
ret
das
subl
inc
mov
imul
or
push
sub
dec
movsb
jle
fisubrs
ret
insb
in
xchg
les
icebp
stos
xchg
sti
dec
pop
jmp
decl
fldenv
and
fs
fimull
push
test
push
sbbl
jno
ja
cli
rcl
push
push
sub
loopne
xlat
fwait
add
loope
sahf
fisubrl
data16
lret
sub
and
cmp
insb
sub
imul
cmpb
outsb
add
xchg
mov
cmp
sbb
jp
push
push
adc
les
add
jmp
es
cwtl
inc
faddl
aam
imull
jmp
dec
cmp
jae
mov
sbb
adc
push
inc
add
xchg
add
jae
xor
stos
rolb
sub
addb
sub
and
sub
jb
decl
xchg
addr16
enter
imul
pop
sbb
or
mov
jns
arpl
addr16
inc
mov
mov
xchg
sub
push
dec
mov
jmp
lret
js
cmpb
mov
xor
repnz
sarb
lods
mov
imul
dec
xchg
adc
imul
jmp
sub
sbb
dec
sub
daa
cld
mov
cltd
popf
sub
outsb
sub
sbb
shl
shrl
addr16
mov
sub
sub
mov
test
scas
repz
lea
jnp
negl
sub
std
stc
jne
push
mov
and
pavgb
xor
sub
lods
das
sub
mov
or
test
cmp
mov
leave
sub
pop
std
adc
inc
sub
in
cmp
jae
mov
cmpsl
or
sub
or
shrb
clc
push
jae
mov
lock
mov
cltd
lret
push
popa
cmp
sub
test
imul
shl
and
stos
sub
sbb
insb
int
jl
lods
dec
push
je
pop
pop
xchg
mov
and
fsubrs
fistl
aad
idiv
jb
sub
cmpsl
cli
push
xchg
pusha
pop
sub
inc
mov
dec
xchg
mov
dec
pushf
adc
ret
es
sub
test
rolb
sub
and
xor
pop
test
popf
cmpb
add
cwtl
or
iret
mov
or
mov
adc
pusha
add
push
sub
push
pop
out
int3
in
insl
sbb
jecxz
sbb
les
repnz
cmp
pop
scas
sub
sub
mov
iret
dec
inc
sub
sbb
outsl
push
sub
sub
xlat
stc
sub
cmpb
dec
test
mov
sub
push
dec
je
and
xor
jae
mov
push
sub
sub
sub
cmpsb
fucomp
je
mov
outsl
jo
and
sub
lock
mov
sub
mov
loop
inc
out
jmp
sub
push
lret
sub
dec
rorb
cmp
loope
inc
mov
repz
test
pop
enter
ja
mov
xchg
cmpsb
sub
lods
into
pop
std
jmp
shll
dec
mov
sub
xchg
inc
mov
outsl
mov
push
add
inc
sub
popf
cmp
jno
ret
and
pop
dec
sti
sub
push
rclb
sub
and
lods
push
jne
dec
dec
adc
fs
sub
push
insl
mov
clc
mov
cmp
inc
call
test
sbb
dec
mov
xor
mov
jge
sbb
pop
lret
cmc
cltd
movsb
sub
fistpll
mov
ds
stos
outsl
dec
adc
loopne
jbe
sub
in
or
xor
or
ds
call
sub
movsb
imul
xor
or
out
fs
call
dec
es
movsl
pusha
stos
cmp
imul
jo
cmp
ret
add
sub
mov
sub
je
xor
jmp
xlat
add
imul
adc
mov
in
push
pop
jecxz
adc
xchg
push
call
sub
ret
rcrb
stos
repnz
nop
pop
sub
jnp
bound
or
mov
add
stos
ja
pop
and
sub
adcl
lcall
dec
scas
adc
sub
bnd
out
inc
subb
adc
movsb
sub
and
mov
mov
pop
jae
mov
insl
xchg
sub
pop
push
sbb
sub
sub
rclb
pop
jecxz
cltd
dec
mulb
shl
call
push
in
sub
dec
xchg
mov
or
inc
adc
push
sub
pop
scas
jmp
dec
inc
jb
mov
jo
sub
lcall
and
sub
cmp
xchg
loope
inc
movaps
imul
adc
inc
aad
mov
mov
loop
mov
iret
mov
inc
pop
test
dec
or
adc
and
data16
insl
ljmp
pop
or
fimuls
push
fs
xchg
jmp
sub
lds
cli
add
shlb
lods
outsb
pop
sub
inc
push
or
dec
inc
push
sub
divl
rcrb
cmp
les
mov
out
lcall
bound
subl
dec
enter
fwait
jle
pop
shll
or
mov
and
mov
dec
sarl
dec
outsl
hlt
fldcw
pop
push
push
imul
andb
sarl
shrb
lahf
xchg
cmp
aaa
and
out
mov
dec
sub
mov
es
add
and
fists
rorl
sub
leave
sbb
filds
lret
adc
ret
jnp
and
sub
jo
jmp
or
lods
fwait
sub
in
mov
das
outsl
sub
fdivrs
ret
sub
movsl
inc
or
pop
xchg
xor
push
or
call
jecxz
out
rolb
fidivrs
das
sbb
add
cld
jbe
imul
repnz
out
repz
decb
push
sub
xchg
mov
push
test
xor
mov
xor
sub
sbb
scas
sub
add
scas
pop
mov
jmp
imul
vprotw
lcall
ficomps
repnz
nop
ds
jmp
rcrb
call
loopne
enter
scas
jnp
adc
loop
test
mov
ret
sub
sub
iret
sbb
call
adc
inc
stos
jno
lods
test
push
push
pop
stos
cmp
sahf
test
hlt
call
dec
aad
dec
fmull
lahf
rclb
dec
mov
sub
ss
in
idivb
add
rorb
mov
fildll
jo
pop
cmp
xchg
sub
mov
push
testl
jae
int
test
and
adc
ret
jmp
shrb
mov
cmc
call
push
mov
mov
push
clc
shl
fisubrl
pop
and
push
inc
jp
inc
aam
icebp
xchg
stos
pop
addr16
xchg
adc
imul
jbe
lock
sub
mull
clc
sub
fwait
or
xchg
adc
mov
leave
jp
fucomip
mov
cmp
mov
or
ficoml
insb
xchg
ffree
dec
sub
int3
jo
lret
fcoms
or
das
test
inc
push
sub
in
int
xor
js
xor
into
sub
scas
jne
cmp
sub
jns
jno
leave
and
and
jge
sbb
lret
push
lret
mov
lods
mov
sub
inc
cmp
in
idivl
mov
mov
inc
pop
stos
and
addr16
and
and
shrb
push
mov
or
and
stos
cmp
inc
jmp
insb
out
rolb
jno
movsb
pushf
mov
xchg
pushf
stc
loope
mov
cmp
fwait
push
and
xor
jmp
sbb
xchg
xchg
mov
fdivs
mov
imul
pushf
mov
cmp
pop
dec
flds
pusha
stc
pop
pop
fisubrs
mov
ret
sbb
or
mov
sbb
mov
dec
cmc
clc
sahf
adc
pop
fcomi
pop
cmpsb
out
dec
sbb
dec
sbb
lcall
fsubrs
and
cmp
and
push
scas
ret
pop
xor
aad
xor
jp
inc
xor
hlt
jge
gs
mov
cmp
call
loop
ja
xor
sbb
out
sub
mov
outsl
push
adc
cmc
lret
outsb
cmc
aas
pop
cli
imul
fisubs
mov
and
mov
cmp
xor
or
js
xor
pop
sbb
xor
adc
mov
lods
mov
imul
dec
jb
xor
psrad
scas
jo
jmp
das
mov
xor
cli
test
test
jo
pop
mov
into
pop
cli
jae
or
rorl
push
js
pop
inc
lea
and
jl
sub
push
xor
lret
jnp
or
mov
scas
cmp
xchg
insl
mov
or
mov
std
int
das
stos
les
jnp
stos
add
cltd
push
scas
faddl
sbb
adc
pop
icebp
das
fnstenv
mov
clc
sub
pusha
inc
dec
jo
jne
mov
jg
cwtl
dec
scas
add
mov
fdivrp
xchg
addb
jae
lahf
in
and
fldl
rclb
dec
inc
decb
sti
jg
add
test
add
loope
jg
lods
sti
inc
jp
ljmp
mov
lcall
decb
or
push
rolb
sbb
shlb
xchg
push
les
mov
repz
push
clc
mov
cmp
out
cmpsb
subl
push
add
mov
dec
sbb
fcmovnbe
cli
inc
mov
xor
pop
jo
sub
adc
cmp
inc
clc
mov
jmp
ljmp
cli
mov
lock
lcall
cli
or
out
jnp
mov
cmp
and
lcall
lret
sub
mov
cld
or
xchg
and
push
push
push
pop
cwtl
mul
out
mov
loopne
dec
pop
mov
sbb
iret
mov
jnp
push
pop
aas
add
jp
popa
outsl
pop
pop
or
dec
or
and
shlb
cmpsb
jge
mov
call
sti
sbb
arpl
pusha
add
jbe
test
push
in
mov
pop
ret
sbb
out
and
push
push
and
enter
jg
jb
jb
in
repz
lock
movsb
lods
sub
sti
xor
stc
into
jmp
mov
js
shlb
loopne
cmp
je
jnp
icebp
cld
leave
or
dec
orl
sti
test
or
add
push
das
ret
xor
movsb
loope
add
scas
mov
mov
xchg
aad
xor
stos
xorl
scas
and
test
cmp
ffreep
aad
mov
sub
fadds
out
es
cli
pop
mov
int
pop
inc
push
flds
mov
lcall
out
push
sub
xchg
lret
add
ja
jb
aam
dec
jg
fsubr
dec
int
jmp
xchg
sbb
lods
pop
clc
pop
xchg
sarb
adc
sub
or
push
sbb
xchg
cmp
xchg
ss
jno
out
ret
dec
fldt
enter
cli
jo
mov
adc
mov
std
gs
cmp
adc
cmp
fsubrs
xor
mov
in
int
ret
adc
sbb
cmc
sbb
and
mov
cmp
sub
mov
sub
push
cmp
sub
idivb
push
sub
jo
stos
inc
iret
or
xor
mov
lcall
jae
push
dec
insb
add
adc
jb
xchg
adc
ficoms
add
push
outsb
sti
ret
in
xchg
out
inc
push
inc
sub
push
push
les
insb
rcrb
lahf
cmp
popa
cmp
fbld
xchg
pop
xchg
ror
movsb
lret
push
shlb
add
mov
push
rcrl
shr
cli
or
cwtl
mov
stc
filds
mov
insb
clc
popa
sbb
movl
lea
cmp
ds
cmp
inc
push
push
out
ffree
sahf
test
fwait
sbb
pop
loop
cmp
xlat
adc
test
jo
por
rolb
cli
dec
out
mov
xchg
nop
aaa
cli
subl
or
inc
ret
rcrl
std
out
jo
fnstcw
cli
pop
inc
aad
sar
jle
ds
inc
leave
push
imul
and
pop
push
icebp
sbb
aad
jge
cmp
pop
mov
xor
pop
lock
mov
and
fs
push
xchg
dec
inc
ljmp
ja
test
lcall
cmpsl
push
add
mov
adc
mov
ljmp
cmp
ja
sbb
mov
lock
jnp
test
pop
mov
in
cmpsl
xchg
fmull
lret
jp
push
addr16
cmp
icebp
test
add
imul
sti
add
add
stos
int3
scas
gs
or
and
lods
aam
push
xor
push
xor
xlat
clc
adc
inc
cmp
push
and
cltd
sub
iret
lahf
inc
inc
xchg
cmpsb
mov
add
ret
stos
mov
xchg
push
mov
call
mov
or
mov
jne
aaa
es
std
cmp
pushf
jbe
jecxz
lds
leave
fldpi
mov
jp
mov
les
and
or
xchg
cmpsl
mov
outsl
push
addr16
imull
ficomps
dec
sbb
inc
repz
jmp
ss
cmp
cmpl
rolb
stos
fistpl
cmp
es
xor
xor
cli
ljmp
rcrb
dec
push
xchg
xchg
cwtl
outsb
xor
jle,pn
xor
int3
clc
data16
imul
adc
mov
mov
sbb
aad
xchg
dec
stos
or
mov
mov
inc
push
inc
push
in
sarb
push
loope
and
xor
mov
cmp
push
xor
cwtl
dec
dec
das
or
mov
sbb
push
fmull
dec
out
jmp
lea
mov
rcrb
imul
sub
pop
sbb
dec
adc
xor
jbe
cmpsl
push
popa
imul
sbb
ret
cwtl
jecxz
lods
imul
iret
sub
jg
ret
insl
push
sbb
addb
xor
in
clc
filds
cmp
sti
or
rolb
xchg
add
lods
xchg
push
xchg
jecxz
dec
jb
sbb
sti
test
je
ljmp
mov
mov
sub
and
sahf
xorl
cmp
hlt
dec
sub
cwtl
pop
mov
aad
loop
mov
pop
xor
mov
cltd
push
icebp
jecxz
inc
movsl
push
or
push
mov
mov
mov
loop
fwait
data16
inc
jecxz
rorl
push
inc
ds
aas
mov
xlat
jmp
dec
push
divl
push
in
add
das
pushf
jae
fcom
shrl
xchg
sti
scas
jmp
fadds
adc
ljmp
push
enter
decb
jg
and
sbb
loopne
ss
and
test
add
mov
cmp
cmp
test
xchg
xchg
dec
dec
stos
lcall
inc
jmp
mov
jecxz
shlb
mov
push
fs
mov
pop
mov
sbb
mov
sub
jp
ljmp
shrb
push
mov
dec
pop
rcrb
clc
hlt
fsubl
jbe
sub
mov
adc
dec
imul
ljmp
andl
xchg
ljmp
sub
sbb
and
mov
pushw
add
stos
inc
pshufw
jmp
shlb
popa
stos
push
pop
ljmp
push
insl
sub
inc
fsubr
imul
leave
add
mov
gs
fstl
push
add
dec
mov
imul
or
call
xchg
jge
fdiv
jno
sbb
mov
movsb
add
ret
dec
jg
mov
lcall
sub
dec
jae
inc
out
mov
pop
push
outsb
and
add
scas
jo
jb
aam
mov
sub
xchg
lret
jl
sub
ret
cmpsb
cld
cwtl
sub
int3
fldcw
popf
mov
sub
inc
jns
mov
sub
dec
push
ds
jle
test
int
sbb
fsubrs
add
mov
cmp
sbb
out
mov
ljmp
dec
jmp
pop
cmp
mov
sbb
adc
test
pusha
add
add
push
jnp
dec
cs
mov
pop
cmp
mov
xor
push
sub
cs
loop
in
bound
incl
xor
test
imul
sbb
push
cld
sub
push
sub
xchg
out
into
sti
in
mov
das
cmp
fwait
mov
xchg
and
out
out
jb
sub
pushf
loope
jae
shrl
int
and
lret
jo
sub
hlt
dec
and
push
push
popf
or
and
lret
xchg
dec
push
cmp
rclb
ljmp
or
rorb
dec
sbb
in
jle
insb
test
je
scas
pop
sbb
pushfw
sub
xchg
mov
cmp
es
popf
aam
aas
je
push
in
mov
adc
sub
dec
and
cmp
fdivrl
xchg
in
fisubs
dec
ljmp
push
xchg
ret
jecxz
sbb
daa
data16
incl
sub
or
pop
ficompl
sbb
in
sub
add
nop
imulb
adc
aam
add
dec
pop
sub
imul
out
jae
jecxz
sub
jne
cmp
push
sub
stos
lods
and
and
shl
inc
push
shrb
sub
mov
cld
inc
sub
ficoml
sub
mov
lock
mov
and
jmp
cwtl
outsl
and
std
xor
mov
xchg
mov
in
or
fsubs
adc
push
ret
fistpll
js
lahf
imul
subb
decl
mov
jnp
loopne
mov
xchg
sub
out
test
sbb
inc
adc
jmp
ret
push
lods
cmp
mov
les
inc
ds
dec
mov
mov
mov
push
repz
loopne
push
xchg
sub
xorb
mov
leave
ud2
pushf
sub
xor
mov
lods
fsts
jnp
and
jl
sub
aam
je
popf
sub
push
sbb
jae
js
and
sbb
insb
sub
loopne
or
push
sub
sub
inc
test
and
cmp
sub
ret
movsb
mov
shrl
lds
push
loope
movsl
sub
push
arpl
sub
pop
cmp
xorb
pop
shrb
push
stos
xor
sbb
ret
inc
and
scas
sub
loope
insl
xor
sub
pop
lds
sbb
aam
jno
sub
or
int
jae
add
inc
cmpsb
mov
outsb
jge
and
imul
sub
sbb
or
add
fsubl
pop
jmp
les
sbb
lea
in
xchg
movsl
pop
jne
jns
imul
jb
sub
jne
push
mov
mov
ret
sbb
sub
mov
dec
jmp
sub
out
aas
cmp
in
sub
sbb
mov
or
jo
add
or
jmp
sub
cwtl
fisubrs
clc
xlat
hlt
push
jmp
or
jae
stos
cmc
jp
xor
dec
in
test
por
scas
andl
imul
icebp
sub
loop
dec
repz
stos
mov
inc
orb
push
push
push
push
sub
jae
jmp
push
mov
pop
sub
sbb
lahf
imul
bound
pusha
les
popf
jmp
cld
lock
and
in
push
insb
into
mov
les
stc
sub
adc
repz
fs
sub
ds
add
insb
das
sub
dec
mov
mov
inc
pop
jae
fdivl
imul
negl
inc
movsb
dec
inc
les
push
movsl
fisubrl
dec
sub
push
mov
push
mov
sti
dec
aas
or
cmp
mov
ss
out
mov
xor
cmp
mov
xchg
add
sub
dec
jb
ds
daa
dec
ret
inc
lods
or
ja
test
sbb
data16
xchg
mov
sub
dec
lds
sub
repnz
aas
dec
sti
xchg
add
sub
dec
cld
fldt
enter
pop
push
mov
shrb
cmp
mov
ret
adc
xchg
adc
inc
xor
push
les
clc
inc
outsl
mov
lds
mov
add
inc
or
stc
pushf
outsl
sbb
add
das
push
aad
sub
or
mov
jnp
jb
xchg
insl
sbb
jmp
and
push
sub
idivb
sub
daa
pop
test
mov
mov
sub
jae
mov
mov
call
mov
add
sub
or
pop
inc
cwtl
testb
enter
cmp
adc
sub
test
mov
aam
sarb
dec
inc
sub
jle
cmp
adc
nop
mov
xor
shr
ret
enter
sbb
mov
cmp
xchg
inc
pop
sub
cmc
mov
cs
enter
mov
lret
out
xor
jne
sub
mov
mov
mov
jb
cmpsb
test
divb
mov
pop
jnp
das
jecxz
enter
sub
les
inc
jle
mov
xor
sub
stos
add
cmp
pop
outsl
jnp
push
stos
mov
adc
sbb
mov
or
sub
dec
cmp
pop
sub
lea
lock
push
xchg
das
vmovaps
jge
and
pop
dec
sub
outsl
cmp
sbb
mov
fs
loope
vmptrld
lds
imul
test
push
mov
imul
lcall
dec
inc
sub
cwtl
shrb
enter
lahf
cld
enter
mov
out
push
inc
in
sbb
dec
sti
movntq
xor
adc
data16
ss
imul
or
movsl
loope
out
mov
cs
dec
bound
jecxz
pop
sbb
loopne
mov
cwtl
sub
jae
lahf
icebp
sub
jge
mov
sbb
push
mov
sub
push
add
fsubrs
inc
aas
sar
ljmp
mov
jl
or
pop
icebp
push
cmpsb
sub
push
jge
addb
and
sub
inc
sbb
sbb
sub
testl
sub
dec
add
ffree
dec
cmpl
pusha
and
push
mov
loop
xchg
lcall
sti
shl
push
inc
xor
xchg
imul
jns
push
cmp
or
mov
arpl
xor
sub
lahf
shlb
ret
sub
pop
dec
fldl
mov
movsb
nop
push
pop
sub
add
mov
fidivs
sbb
xlat
int3
in
adc
cmp
fs
cmp
mov
out
test
fiadds
cmp
pop
ret
or
lock
sub
and
dec
or
std
sub
pop
sahf
fmuls
mov
popf
cs
xchg
and
bound
pop
adc
xor
cld
rorl
movsl
repz
jl
mov
sub
adc
lahf
imul
or
out
xorps
repz
add
inc
call
ss
adc
xchg
mov
scas
inc
pop
cs
inc
inc
dec
repnz
adc
cmpsl
xchg
pop
pop
jmp
pusha
js
or
sub
inc
fisttpl
push
add
inc
loopne
fsts
mov
lret
in
xor
insb
mov
jmp
or
call
pop
mov
mov
sub
scas
adc
sub
imul
sbb
lret
adc
mov
aam
ss
xchg
jg
xor
dec
sub
jno
mov
pusha
sbb
push
sbb
dec
hlt
sub
in
fcmovne
adc
sub
lcall
sti
sub
test
ret
sub
xchg
aam
sbb
test
into
xor
jmp
rorl
jle
push
cmpsl
dec
xchg
data16
xchg
cli
cmp
lods
in
ds
sub
push
jo
ficoms
and
mov
sub
sub
jg
leave
outsl
mov
push
stos
xor
daa
imul
icebp
adc
mov
pushf
loop
cmp
mov
sub
push
sub
sub
mov
inc
repz
pop
dec
sbb
and
pop
fidivrs
les
cmc
lea
mov
cld
lcall
int3
and
fs
ljmp
cmpsb
lea
out
in
inc
not
pop
lods
shll
in
sub
push
pop
mov
shrl
xor
sub
push
add
into
sub
mov
adc
cwtl
clc
inc
in
push
and
shlb
mov
cmpsb
insb
ficoms
clc
gs
sbb
fucomi
or
sub
inc
loopne
pop
sar
mov
dec
popf
mov
sub
cli
xchg
add
ret
cmpsl
mov
out
and
lea
scas
sub
stos
jb
idivb
vorps
cmp
out
push
cmp
notl
jae
jmp
and
pop
mov
clc
jns
and
repnz
outsb
das
sbb
pop
arpl
sti
pop
cli
das
sbb
xor
xchg
jmp
lret
dec
int
test
scas
add
xchg
orb
repnz
ss
outsb
ljmp
jo
clc
icebp
aas
addr16
pop
mov
scas
jmp
xor
ret
scas
xchg
jp
xchg
lret
sbb
gs
mov
ret
loope
fisubs
cmp
or
loope
xchg
lcall
clc
dec
pop
mov
cli
popl
into
lea
nop
sahf
testl
cmc
loopne
dec
inc
inc
xlat
cmp
sub
or
mov
mov
cmpsl
pop
push
mov
dec
outsl
mov
adc
adc
push
jns
mov
aas
dec
inc
jge
xlat
inc
adc
daa
pop
mov
fbld
adc
pop
jmp
or
gs
sub
int3
dec
bound
mov
outsb
arpl
push
iret
add
jno
fucomip
in
push
xchg
addr16
outsb
test
in
cwtl
cmpl
lds
into
xlat
cli
popa
fimuls
jns
cmc
dec
dec
test
in
or
daa
shll
movsl
cwtl
inc
mov
out
mov
shll
clc
addr16
in
repz
and
test
mov
clc
jl
cmp
int
lods
out
scas
sarb
dec
bound
sbb
sti
gs
or
pop
lock
jno
mov
out
lea
cli
xchg
push
push
pop
ja
sbb
lret
scas
es
jmp
push
xchg
xor
mov
in
movsb
pop
jns
jns
and
enter
add
sbb
sbb
dec
sub
test
out
dec
add
scas
inc
mov
mov
mov
jecxz
cli
jnp
aas
inc
sar
vphaddbq
push
sti
pusha
or
mov
popa
xchg
mov
fs
cltd
mov
imul
sub
push
mov
mov
pop
shl
mov
sub
xchg
call
mov
xchg
sub
or
push
les
push
imul
das
xchg
lahf
or
sub
dec
mov
ljmp
lods
rol
mov
mov
dec
aam
mov
rcrl
fs
loop
outsb
dec
clc
inc
cmp
shr
mov
aad
push
cmpsl
sub
pop
outsb
push
xchg
inc
xchg
xor
outsb
sub
sti
dec
pop
cmc
repz
aas
jae
pop
inc
inc
cli
mov
push
and
mov
cmp
or
push
fldt
sub
aam
scas
ja
out
sub
lcall
xor
imul
cmp
dec
or
or
inc
das
cmp
mov
xchg
rorb
pusha
leave
add
or
inc
pop
inc
push
add
or
fsubrs
jno
imul
daa
cwtl
test
addb
pop
jbe
mov
addl
push
icebp
pusha
fcomi
shll
push
push
cli
mov
ret
ds
jecxz
inc
push
pusha
dec
scas
mov
sub
fsubp
inc
cli
pop
sahf
js
pop
fnstsw
lret
outsl
sbb
clc
dec
pop
push
pushf
loop
les
cmp
inc
pop
ljmp
outsl
negl
dec
mov
xchg
shlb
hlt
lss
iret
jb
pop
mov
sub
clc
aas
or
jp
dec
mov
imul
addr16
test
and
sbb
in
cmp
pop
add
pop
lret
mov
mov
lea
arpl
mov
or
lret
cmp
jmp
and
insb
mov
in
incb
sbb
repz
mov
jg
pop
clc
scas
sbb
addr16
pop
push
mov
fldl2e
andb
add
sub
mov
mov
sbb
xchg
cmp
aam
mov
imul
sub
loope
push
subb
and
mov
xor
lret
lock
shl
sbbb
lods
xor
xchg
shll
sub
pop
lret
xor
xchg
clc
inc
cwtl
sbb
cmpsb
ret
mov
mov
insb
fwait
add
sti
imul
cli
loop
lds
js
add
lcall
push
xchg
les
add
jmp
iret
xor
loope
pop
clc
pop
out
xor
scas
xchg
inc
lret
sub
imul
mov
adc
mov
add
jle
pop
adc
imul
dec
cmp
dec
aad
xor
fidivs
or
push
xlat
mov
sti
into
jns
aam
mov
dec
cmp
push
test
int
xor
ret
enter
pop
mull
fwait
jns
outsb
sbb
mov
fistpll
mov
dec
ds
out
push
insl
push
cmc
je
inc
or
pusha
mov
jo
mov
sarb
fdivr
cmpsl
faddp
loope
xchg
dec
pop
sti
add
ljmp
dec
ret
pop
xor
push
push
xor
scas
mov
in
movsb
lret
sub
sbb
push
dec
sub
popf
fdivl
mov
cwtl
push
jmp
cmc
pop
cmc
mov
clc
push
mov
inc
sti
mov
mov
dec
in
leave
int
sarl
cmp
test
sar
push
add
pop
iret
sub
mov
xchg
sub
lret
movsl
test
lea
cmc
int3
sub
test
faddl
sub
mov
xchg
cmp
adc
sub
jb
or
mov
sub
call
sub
sbb
outsl
xor
loop
call
cmp
or
add
hlt
ds
cs
mov
popf
sub
ja
lods
adc
push
shlb
jmp
sbb
sub
push
inc
mov
push
cmc
and
jne
ds
cmp
lahf
arpl
inc
push
scas
sub
ja
lret
movsb
loopne
mov
lahf
cmc
cmpsb
jmp
ds
mov
xorb
pop
xor
sbb
loop
dec
sub
xchg
scas
cmp
xor
push
push
test
lret
lods
std
movsl
mov
cmp
xrelease
test
das
lahf
icebp
push
sub
pusha
inc
test
pop
mov
add
sub
adc
cmp
and
js
xadd
ror
sub
mov
std
pop
cmp
push
fisubrs
lret
xor
lcall
enter
popf
pop
cltd
stc
fwait
js
dec
dec
insb
std
lret
xchg
test
sbbl
in
fisubrl
sub
insl
movsb
sub
jp
jl
sub
arpl
xchg
sub
dec
jns
mov
add
fst
rorb
shr
sub
repz
ret
ja
push
sub
and
sub
sbb
out
xchg
fists
inc
clc
mov
push
test
sub
inc
call
push
pop
adc
int
cmp
iret
jno
stos
popf
faddl
push
ds
daa
aam
dec
sub
test
sub
push
icebp
lret
inc
adc
scas
sub
aam
and
sub
add
jo
mov
cmpsl
enter
clc
push
xchg
icebp
push
pop
inc
ficomps
call
inc
sub
inc
ds
aaa
rcll
sub
mov
sti
loopne
addr16
std
jb
push
into
add
jmp
sar
cmpsb
in
dec
sub
adc
xchg
jecxz
loope
jge
mov
mov
mov
ds
push
lret
xor
aad
sbb
pop
sbb
or
shrb
lret
jnp
and
mov
xchg
mov
jb
cmp
movsb
push
dec
push
inc
cwtl
sbb
push
sbb
mov
dec
jae
xchg
sub
push
xor
jecxz
xor
add
jne
sbb
push
sub
or
sbb
mov
mov
stc
aaa
mov
arpl
insl
stos
jp
cmc
jmp
xor
mov
jecxz
int3
jae
in
sub
call
cltd
mov
fistl
out
ja
adc
addl
cld
add
lcall
sub
add
mov
mov
ds
imul
xchg
lret
pop
dec
mov
out
sti
sbb
mulb
pop
leave
ret
popa
cmp
and
enter
subl
cld
ds
out
xor
mov
loop
sub
icebp
sti
lock
je
xor
xchg
enter
loop
insb
push
sub
add
iret
sub
jns
xor
sbb
xchg
in
adc
outsl
sub
sahf
daa
cmp
adc
nop
int3
enter
sub
or
arpl
cmp
mov
sub
aaa
push
pop
sub
js
ja
push
notb
mov
rcrb
adc
sub
neg
adc
ja
stc
xor
push
or
sub
cmp
dec
mov
push
mov
add
jle
fisttpl
xchg
mov
sbb
or
xchg
jge
mov
dec
xlat
jge
and
out
jl
out
xor
ss
sbb
js
pop
xchg
stos
xchg
ljmp
xchg
les
adc
xor
lahf
loope
mov
push
stos
sub
icebp
push
xchg
stos
xor
les
bound
lock
push
adc
dec
mov
pop
out
add
leave
mov
imul
fldt
insb
or
sub
mov
cmp
sahf
inc
hlt
movb
loope
mov
out
rcll
scas
pop
imul
pusha
mov
stc
cmp
cmp
call
sbb
daa
fmull
xchg
xor
adc
int
jmp
rol
cwtl
sub
cmpsl
xor
dec
pushf
pop
cmp
or
cwtl
out
mov
inc
push
xor
loopne
jb
xor
fs
dec
aaa
repz
jg
repz
sarb
popf
enter
add
mov
jno
or
xor
cmp
popa
hlt
jne
fisubs
sarb
fcomp
ret
pop
mov
aas
outsl
pop
sub
sub
and
call
push
aam
outsb
sbb
stos
xor
pop
loop
dec
sub
nop
sub
ds
stos
or
mov
stos
sbb
xchg
aad
shrl
cld
aaa
pop
sub
and
leave
jg
jp
sub
data16
fisttpl
fwait
push
out
cmp
lahf
lods
loopne
sub
aam
mov
sub
nop
push
and
push
sub
add
int
sub
or
mov
mov
fstps
sub
pushf
xchg
cmpsl
sub
dec
pop
scas
cmp
fdivr
rcr
aas
mov
xchg
mov
mov
mov
xchg
sub
and
xor
mov
stc
pushf
sub
jp
push
push
bound
arpl
test
sub
mov
pop
dec
je
cmp
jecxz
mov
xchg
sbb
enter
loop
sbb
cmp
sub
aad
sub
add
or
or
jnp
call
sub
adc
dec
cmc
or
xchg
xor
rorl
sbb
lcall
pmullw
cmp
add
mov
and
pop
stos
mov
ds
fimull
or
adc
icebp
js
insb
aam
cmovge
jno
pop
stos
insl
movsl
out
sub
testb
dec
mov
call
dec
sub
mov
js
pop
jmp
adc
ds
comiss
push
sub
inc
adc
cmp
lcall
add
xor
nop
ds
bound
mov
or
inc
arpl
stos
das
or
jg
test
pop
push
mov
addl
dec
add
adc
scas
or
fsubs
outsb
and
xor
in
sub
cs
call
pop
repnz
sar
xchg
dec
fwait
enter
sub
xor
rorb
xchg
jae
pusha
les
sbb
fcomip
jmp
dec
pushf
and
sub
scas
data16
adc
clc
enter
mov
out
and
popa
and
int3
dec
push
push
push
jp
lret
jo
daa
push
and
mov
lock
pop
cmp
xor
and
leave
and
in
lods
push
in
cmp
push
mov
jbe
cwtl
xlat
cmp
add
mov
das
je
xor
sbb
inc
xchg
push
bound
sarl
jae
xchg
adc
addr16
adc
add
lods
insl
test
xor
add
xor
pop
shrl
sub
inc
and
inc
clc
fwait
and
mov
leave
imul
imul
sub
push
data16
or
sub
xchg
dec
inc
cmp
int3
pop
ja
nop
out
repz
fnsave
out
adc
pop
lods
ljmp
jbe
sub
sub
ret
xchg
mov
rorb
add
pop
fcoms
lock
sub
cmp
jge
shll
lret
cmc
es
jp
shlb
inc
pushf
sub
gs
mov
jae
mov
sub
mov
sub
dec
adcl
mov
daa
add
jl
push
cmpb
pop
lcall
adc
leave
and
movsl
leave
fnstcw
scas
ds
xor
cld
mov
outsb
add
mov
sub
jg
std
movsb
push
inc
ficomps
pop
sub
fdivl
inc
mov
pop
sub
mov
mov
sub
gs
pop
push
xchg
sub
xor
sub
iret
xor
icebp
inc
ljmp
js
jne
pause
movsb
sbb
jae
mov
daa
in
ss
aaa
dec
fistpll
sub
das
xor
imul
xchg
sbb
sarb
sub
enter
add
test
and
lods
outsl
mov
psrlw
lret
movsl
mov
faddp
or
xchg
hlt
lcall
xchg
push
sahf
std
outsb
xchg
scas
dec
lea
bswap
enter
mov
jbe
movb
cmp
push
push
clc
inc
popa
push
or
std
sub
pushf
jo
loope
ret
inc
sub
sub
mov
push
lock
push
lods
jne
push
adc
mov
or
mov
mov
mov
dec
mov
mov
psadbw
sub
out
in
xor
call
mov
mov
dec
sbb
rolb
and
jns
jnp
sub
xchg
ret
lahf
xlat
sbb
leave
mov
jl
jmp
or
in
pop
stos
ss
outsb
rclb
stos
insb
addr16
inc
dec
sub
mov
adc
enter
outsl
mov
inc
xchg
sub
in
cmpsl
int3
mov
mov
mov
stc
popa
xor
add
pop
sub
pop
dec
xchg
sub
fucom
lcall
jle
jb
sbb
cmp
mov
sti
mov
testl
dec
mov
xor
jge
and
xchg
mov
sbb
mov
and
mov
mov
fsincos
push
test
addr16
stc
sub
add
testb
nop
and
clc
inc
mov
lods
rorl
les
js
jae
mov
cmpsl
inc
cmp
and
push
das
lcall
lods
sub
fs
in
xchg
cmp
mov
jg
mov
cli
push
cld
inc
stc
push
and
xor
idivl
xchg
imul
test
fsubl
mov
loopne
das
addl
insb
test
leave
xchg
int
add
stos
ret
outsl
imul
dec
mov
pop
sub
adc
cli
sarl
mov
sub
fcoml
clc
jnp
mov
xchg
jne
lret
mov
sub
sti
xchg
ret
test
sahf
out
imul
int
xor
stos
cli
sti
jns
mov
imul
out
imul
ljmp
movsb
stc
shll
in
lods
mov
clc
push
stos
sbb
enter
push
jmp
testl
dec
dec
cltd
stos
pop
int
fwait
or
imul
fbld
insl
clc
js
lret
xchg
lahf
and
sub
or
jne
adc
js
sarl
sub
add
push
sub
inc
cwtl
lcall
addl
sub
adc
or
push
into
pop
inc
hlt
int
int3
sub
push
mov
in
les
adc
push
xlat
sub
iret
cld
clc
mov
jno
into
ja
ljmp
stos
data16
inc
and
ret
dec
sub
test
mov
sbb
mov
aam
leave
and
popf
and
iret
fmull
sub
mov
mov
xchg
xlat
mov
pop
and
sub
dec
ffreep
jne
fcomps
mov
push
hlt
jp
loop
dec
in
jns
stos
not
mov
sarb
das
jne
outsb
mov
jno
xorl
mov
sbb
repnz
pop
cmc
adc
and
popf
fidivl
and
stos
dec
movb
or
ret
mov
stos
fisubrs
enter
movsb
cmp
sarl
dec
sub
pusha
push
js
xor
cltd
push
mov
fnstcw
sub
mov
xor
sub
leave
mov
add
mov
je
mov
jmp
or
imul
in
sub
or
scas
mov
sub
mov
es
nop
push
push
dec
fwait
outsb
loop
pop
ret
mov
jmp
sti
les
cmp
sub
mov
sub
push
jecxz
sub
loop
mov
fcmovnbe
jl
xchg
aaa
fistpll
loopne
fwait
jae
lds
push
fistpl
les
jmp
mov
cli
dec
jns
and
xchg
fisttpl
sub
pop
mov
mov
popa
sub
mov
sub
shrb
mov
test
pop
push
adc
sub
dec
cmp
mov
dec
dec
test
fstp
fildl
xor
ret
test
rolb
loop
fwait
adc
add
pusha
lahf
xor
xchg
sub
das
push
ja
mov
lods
popf
cwtl
push
add
mov
sub
mov
adc
cld
and
sub
cmp
adc
aad
cld
push
jl
add
int3
lahf
repz
outsb
sub
repnz
popa
pushf
shrl
shll
imul
sub
jg
xchg
xor
xchg
popf
sub
lret
adc
dec
dec
stc
sub
mov
mov
push
stc
sub
clc
scas
dec
sub
sub
ret
pop
xchg
sub
jbe
add
int
dec
je
fnstsw
jl
imul
and
cmc
add
mov
mov
repz
sub
fisubrl
arpl
push
pop
addr16
sub
jae
jle
loope
shll
lods
and
sub
cmpsl
or
push
inc
data16
mov
ret
insl
mov
pop
cmp
and
sub
scas
sbb
clc
and
fstpt
sub
imul
push
xlat
arpl
or
sub
inc
mov
adc
sub
mov
or
sti
pop
inc
dec
aad
and
mov
adc
pop
push
xchg
sarl
add
mov
outsb
mov
xor
sub
je
add
imul
in
push
sub
aas
jmp
inc
test
or
sbb
fisttpll
or
dec
lock
test
sahf
or
jb
movsb
fld
ret
mov
sub
sbb
hlt
adc
mov
xchg
stos
testb
je
sub
sub
pop
and
repnz
sbbl
dec
sub
xchg
js
mov
sub
ja
xchg
jnp
mov
or
cltd
sub
sbbb
insb
scas
sub
cmp
enter
mov
cli
or
sbb
inc
imul
mov
fcoml
push
ficompl
enter
ds
and
fisubrl
test
out
nop
insl
mov
dec
rorl
mov
add
mov
xchg
imul
xchg
sub
add
sub
pop
lahf
mov
test
lods
add
ss
dec
andl
gs
fidivrs
xchg
jge
sbb
popa
xchg
sub
pushf
shrl
roll
sub
clc
inc
call
int
cwtl
push
jne
sbb
sub
jp
jb
rorl
sub
push
dec
sbb
ljmp
jge
push
aas
stos
mov
dec
sub
adc
addr16
sbb
push
sub
cs
mov
push
std
mov
adc
insb
cmp
xor
pop
jmp
lods
mov
sar
inc
jno
jo
pop
push
lods
inc
aam
sbb
loop
test
mov
inc
stos
mov
std
stos
push
mov
lahf
cmp
scas
inc
repz
leave
test
clc
inc
bound
cwtl
mov
enter
fcomps
mov
fistps
mov
inc
lret
clc
out
jg
and
xor
pop
daa
call
jno
sbb
scas
mov
sarb
xor
dec
sti
loopne
dec
jb
cltd
cmc
adc
mov
mov
rcrb
jbe
cmpsb
xchg
mov
pop
push
mov
mov
cmp
rol
into
push
pop
cli
loopne
divl
dec
mov
scas
enter
sub
or
fchs
jo
loope
cld
call
lds
out
sub
or
and
bound
out
sub
sub
sbb
sub
leave
enter
pop
dec
stos
sub
pop
orb
xor
jns
mov
loop
push
and
cmp
stc
icebp
sbb
syscall
adc
int
pop
iret
mov
out
mov
cmp
mov
and
pop
aaa
push
std
and
push
push
shrb
xchg
leave
std
adc
push
insl
imul
mov
clc
popf
push
mov
push
filds
mov
fisttpl
or
out
or
sub
fs
pop
in
push
pop
cmpsb
fmul
inc
xchg
imul
jge
xchg
dec
cli
mov
mov
and
rcrb
push
adc
clc
andb
xchg
mov
loopne
add
shrl
dec
push
std
stos
add
add
shlb
testl
test
jmp
lret
mov
push
mov
neg
test
adc
test
data16
or
cmp
iret
fbstp
popl
addr16
mov
scas
jg
stc
sbb
sub
out
mov
mov
add
jbe
mov
shll
cmpsl
jo
mov
std
dec
ss
insl
lcall
outsb
lock
sti
in
sbb
xchg
aad
imul
gs
dec
loopne
mov
mov
mov
mov
iret
std
pop
xchg
clc
adc
cli
cli
imul
mov
jae
lret
idivl
lea
mov
ja
dec
clc
mull
pop
add
inc
mov
jns
mov
xor
clc
stos
adc
repnz
jae
lods
pop
faddp
popa
fdivl
xchg
shl
es
inc
sub
std
das
inc
test
in
outsl
adc
mov
out
icebp
loope
movsl
or
jmp
inc
xchg
dec
jge
and
aaa
jecxz
mov
incl
pop
push
vsqrtsd
pop
mov
dec
sar
jne
out
jp
sub
inc
cmp
push
cmp
cmp
popf
dec
or
sub
stos
mov
dec
cmp
lock
mov
enter
jle
mov
and
scas
aam
and
xchg
ret
push
out
jg
gs
hlt
outsb
loopne
mov
jbe
aad
lds
imul
or
das
test
js
sti
xlat
loope
cmp
dec
icebp
xlat
in
outsb
gs
inc
aad
dec
inc
mov
subb
cli
mov
push
add
pop
ss
popa
cmp
jecxz
into
push
push
adcb
gs
rol
packssdw
dec
cmp
and
lods
push
push
xor
lret
clc
int3
fnsave
addr16
sub
cmpsl
fwait
iret
test
push
xchg
fwait
sti
and
stc
int
pop
lret
mov
jl
loopne
negl
ffree
sti
jle
jg
shr
orb
int3
shlb
out
xchg
adc
cmp
xor
clc
or
aam
sarb
int3
outsb
jmp
fs
sub
ret
lds
enter
inc
push
dec
jle
jmp
cmpsl
push
and
xchg
shll
imul
popa
mov
xchg
push
popa
jne,pn
push
jmp
popf
xor
lret
jnp
push
shll
mov
lock
sub
shrl
insl
insl
testl
mov
into
mov
push
imul
jle
push
xor
and
cmp
addr16
ljmp
inc
sbb
enter
std
popf
loope
xchg
jnp
add
sub
sti
insb
dec
mov
adc
popf
cmp
jle
push
or
mov
or
cwtl
or
pop
jno
gs
ss
rcll
cmpsl
insb
and
loop
mov
sub
and
scas
mov
repz
outsl
dec
mov
adc
jns
pop
out
push
inc
dec
sti
cmpsb
daa
dec
inc
cli
dec
jge
xchg
aaa
jo
stos
dec
xchg
addr16
cmp
inc
data16
or
pop
adc
mov
in
pop
xchg
xchg
ficomps
cmp
adc
jmp
add
mov
clc
xchg
mov
imul
inc
sbb
jns
mov
dec
pop
stc
sub
add
mov
pop
ds
aad
out
fcompl
inc
adc
jmp
mov
cmp
mov
les
jbe
and
and
orb
or
jnp
scas
xchg
sahf
addr16
mov
sub
repz
sub
jecxz
clc
add
or
xchg
xchg
mov
js
lret
inc
lea
jge
fldl
pop
cmp
dec
mov
js
jg
push
popf
cmc
cmp
xor
fsts
mov
xchg
cli
enter
cmp
add
clc
test
je
loopne
mov
stc
movsl
lds
push
mov
or
lods
ret
ds
pushf
add
xlat
pop
lcall
loope
mov
mov
dec
jmp
test
jle
cli
cmp
das
mov
pop
mov
adc
cmp
insl
inc
push
add
xchg
inc
mov
test
push
sbb
jge
or
and
jo
adc
mov
xlat
push
sbb
pop
iret
xchg
xlat
sbb
pop
fbld
xchg
dec
fcmovb
cmc
xchg
jb
and
sbb
cwtl
or
jecxz
addl
mov
push
add
rcll
cmp
leave
dec
pop
dec
and
push
jae
mov
cli
stos
das
cmp
and
or
leave
call
sub
testl
sub
jb
or
push
mov
das
mov
xchg
push
cmp
pushf
or
cmpsb
ljmp
scas
aas
in
cmp
lods
or
and
inc
add
or
les
mov
mov
stc
les
push
scas
flds
xor
bound
aaa
add
cli
aaa
and
fs
jnp
pop
subb
jnp
leave
add
adc
jecxz
sub
psubsw
xor
ficomps
dec
lds
sbb
les
popf
mov
ds
mov
jmp
or
mov
pop
mov
fiaddl
mov
xor
dec
mov
iret
or
mov
sbb
daa
and
test
mov
and
cmpsl
fnstcw
fdivrl
mov
mov
push
push
push
jmp
pop
cmp
fildl
sti
push
inc
or
add
dec
pop
fwait
ss
divb
clc
or
dec
pop
xor
pop
je
lods
shrb
mov
fwait
stc
insb
leave
inc
push
add
cmc
das
add
daa
leave
or
ficomps
sub
test
jo
cwtl
inc
dec
mov
out
mov
fmul
xor
xchg
clc
jle
jmp
bound
mov
clc
dec
add
add
inc
push
shl
cmp
ljmp
gs
lods
loope
adc
in
std
aad
sbb
jl
sub
dec
mov
addr16
imul
imul
pop
push
mov
sub
outsb
sbb
sti
loopne
sub
rclb
rcr
lea
lret
pop
clc
daa
aam
mov
sub
or
imulb
int
dec
mov
dec
stos
fwait
dec
dec
or
sub
in
fwait
xor
shlb
iret
cmp
sub
pusha
sbb
cli
stc
rcrb
fwait
mov
jo
mov
cmp
mov
cli
mov
jmp
dec
sti
push
ret
addr16
xchg
insb
fwait
addb
clc
mov
xlat
aad
cmp
pop
cwtl
sbbl
dec
cmp
mov
pop
jp
push
push
pop
xchg
mov
fwait
cmp
or
jo
fsub
lret
fisttps
push
sbb
mov
ss
adc
jae
scas
xor
pop
pop
cmp
sti
jle
and
xchg
add
jl
jbe
cmc
out
or
pop
call
xor
mov
scas
mov
jmp
push
adc
mov
popf
lea
xor
jp
dec
sbb
lea
cmp
mov
pop
adc
dec
push
inc
sti
das
jp
imul
jmp
sub
sti
and
mov
cmc
cli
add
add
add
aas
shl
dec
pusha
mov
scas
and
aad
mov
mov
dec
pop
xor
or
stos
sar
add
jns
call
pop
inc
and
inc
inc
cwtl
ret
inc
clc
push
out
sahf
call
jl
outsl
icebp
add
clc
xchg
cli
xor
aam
addl
inc
mov
cmp
pop
imul
sub
out
mov
imul
sahf
pop
aad
lods
mov
repz
cltd
iret
aaa
int
push
mov
testl
cmp
mov
cmp
in
sbb
jae
xchg
mov
adc
jae
lea
aad
out
sbb
or
mov
and
rcrb
fiadds
imul
jnp
push
outsb
scas
leave
jmp
adc
pop
adc
inc
cld
mov
xchg
dec
leave
mov
cwtl
xlat
scas
fistpll
push
xchg
mov
lcall
inc
adc
pop
lock
adc
sti
stc
mov
jecxz
dec
jae
fidivl
mov
jmp
ja
pusha
sti
jmp
xor
ret
xchg
lret
pop
xor
cmp
cmp
test
inc
cmp
aas
mov
and
or
fs
jns
xor
sub
imul
xor
mov
sti
cwtl
cmpsl
lcall
pop
pop
add
lret
jge
cmp
xchg
push
orl
mov
sbb
inc
xchg
sbb
cmp
xor
push
aaa
sub
outsb
cli
sarb
cmp
fs
js
out
cli
mov
push
and
mov
xchg
jb
nop
insl
push
mov
push
xchg
push
cmpxchg
das
movsb
scas
std
lea
push
clc
push
in
jp
in
mov
dec
hlt
push
scas
mov
pop
shll
bound
sti
inc
stos
xchg
repz
jbe
enter
cli
fcmovb
scas
push
mov
dec
inc
sub
and
lahf
jmp
sbb
sub
mov
push
ljmp
les
adc
xor
xlat
fisubrl
push
cli
inc
icebp
mov
xor
mov
stos
mov
pop
out
cmp
std
hlt
in
sarb
add
jo
les
push
fiaddl
jp
popa
clc
ret
mov
cli
jle
loop
inc
cli
lea
mov
sbb
jnp
scas
imul
mov
cmp
mov
mov
cmp
popa
cli
imul
sub
popf
inc
int
movsb
popf
push
das
adc
adc
cs
fstpl
rolb
dec
shr
xchg
inc
iret
rol
movsb
jle
leave
mov
xchg
lods
bnd
aam
ret
insl
sub
mov
clc
xor
xor
outsb
pop
sub
or
fidivl
mov
jecxz
mov
test
insl
mov
sub
ja
stos
or
cmpl
data16
mov
out
cmpsb
test
jp
push
sub
sub
nop
mov
push
addr16
test
sub
sub
sbbl
leave
jg
sti
loopne
fsts
in
pop
mov
in
cltd
dec
mov
dec
push
divl
pop
xor
mov
or
or
lods
sub
jecxz
cmpl
inc
jl
in
pushf
lods
les
sub
sub
adc
fsubl
stc
cmp
pop
cmp
jge
pop
ljmp
lret
jmp
mov
inc
sub
rep
out
shll
rcrl
cmp
xorl
sbb
lret
fisubs
fsubl
sub
stos
test
mov
xchg
fdivrs
cmp
cwtl
mov
inc
sub
mov
mov
push
xor
xchg
jmp
cwtl
inc
sub
adc
test
sub
xchg
sbb
cmp
add
das
sbb
inc
clc
pusha
sahf
jae
mov
iret
fisubl
leave
mov
stc
popf
push
gs
rolb
test
test
mov
aad
pusha
push
cmp
mov
mov
addr16
mov
sahf
push
sbb
mov
test
fdivl
dec
lea
add
sbb
dec
lcall
call
mov
sub
add
iret
mov
xchg
mov
out
jb
xchg
stos
push
lcall
jle
lea
mov
inc
int
shlb
add
ret
jno
jge
dec
cmp
test
xor
or
lock
test
jmp
fwait
jns
outsb
dec
lcall
bound
data16
int3
xor
pop
popf
aas
movsl
test
push
sub
mov
mov
das
and
mov
ljmp
or
xchg
mov
vmovaps
in
lcall
sbb
repz
dec
xchg
mov
dec
add
jmp
repz
fsubrs
repnz
int
push
mov
sbb
pop
jmp
stc
imul
jecxz
outsl
frstor
out
aam
shrb
lahf
sub
mov
daa
fisubrs
pushf
cltd
addr16
jno
cmpb
adc
xor
or
add
loopne
addb
sub
cmp
movsl
subl
sub
daa
int
ds
inc
mov
out
iret
sbb
xchg
add
jmp
sub
pop
ss
jge
sub
pop
or
je
mov
cmp
mov
sbb
into
cmp
mov
push
test
dec
cmp
push
xchg
testl
popf
out
dec
adc
repz
loop
stos
add
loope
mov
stc
jae
fprem
movsl
pushf
les
cli
ret
in
pop
cmp
sti
xor
mov
dec
scas
add
push
jb
adc
fists
pop
mov
dec
sub
mov
cmp
xchg
xchg
fld
add
call
and
xchg
les
mov
xor
jle
sbb
filds
inc
ficoml
xchg
jmp
mov
inc
mov
inc
cwtl
test
sbb
sarl
clc
xor
addr16
call
adc
scas
adc
mov
inc
cmpsl
jo
mov
loopne
xor
cmp
lret
or
cmpsb
pusha
iret
shlb
xchg
ds
sbbl
mov
pop
cli
or
cmp
pop
xchg
lcall
dec
ds
pop
arpl
enter
inc
mull
cwtl
aaa
fs
inc
sbb
jno
xor
je
test
fnstsw
cmp
or
call
sub
sub
sub
push
inc
inc
pusha
sti
ds
aaa
xchg
mov
or
push
inc
mov
clc
pop
push
and
pop
es
cli
push
mov
repz
test
fisttpl
dec
mov
mov
push
addr16
or
sbb
sti
jae
imull
dec
cmp
bound
lods
fildl
loop
inc
jmp
jmp
adc
mov
mov
sbb
pop
xchg
lea
or
mov
inc
sbb
stc
in
mov
sbb
dec
cltd
push
push
divb
test
push
sarb
rorl
dec
mov
aam
stos
mov
aam
mov
lds
cmp
jmp
hlt
stos
pop
push
rorl
sbb
das
jecxz
das
repnz
cmp
inc
push
pushf
loopne
mov
fisttps
lock
andb
lret
xlat
stos
shl
and
shr
push
imul
xchg
inc
add
mov
stos
fmull
push
jg
lahf
popa
in
sahf
in
xor
and
jno
mov
cmp
cmp
add
fmuls
fildl
mov
mov
add
dec
fmul
inc
xchg
jo
scas
and
mov
adc
rcl
out
dec
adc
pop
sbb
scas
xchg
inc
or
testl
jecxz
xchg
lret
repz
mov
pop
je
add
jl
sbb
push
in
sub
imul
lea
mulb
sub
popf
cmp
sbb
imul
aaa
enter
and
mov
cmp
jl
aam
sub
push
cltd
fstpl
cmp
cmp
nop
jmp
cmp
mov
push
int3
addr16
cmc
jno
push
push
outsb
sub
add
scas
mov
adc
ret
adc
xchg
mov
dec
mov
adc
les
cli
or
pop
mov
inc
add
cwtl
adc
in
test
sti
xlat
and
popf
dec
xor
mov
mov
loope
jecxz
push
mov
and
or
cmc
jmp
fbld
shlb
mov
mov
xor
mov
sub
cvtdq2ps
lahf
icebp
or
sbb
ljmp
or
ret
sbb
icebp
ss
cmp
loope
cmp
push
jmp
loop
adc
or
push
in
stos
inc
push
pop
push
mov
mov
add
add
adc
pop
jle
cld
xchg
mov
jmp
ljmp
std
out
pop
sub
fcmovnu
or
mov
push
fimuls
mov
adc
iret
test
cli
mov
mov
dec
push
hlt
popf
jmp
add
mov
mov
pop
repz
sarl
pushf
daa
mov
inc
xor
sti
subl
xor
loop
sar
add
fldl
add
les
jmp
lods
imul
xchg
fimuls
lods
cmp
out
xor
adc
inc
adc
push
les
mov
jae
adc
jg
sub
add
insl
push
popa
pushf
fs
cmp
outsl
adcl
dec
sub
and
aam
cmp
stc
or
outsl
mov
inc
bound
or
dec
scas
xlat
inc
out
jns
inc
push
pop
mov
sub
loopne
dec
and
xor
dec
dec
out
sbb
or
cmp
dec
inc
or
daa
cmp
scas
cld
mov
mov
add
lcall
pop
sahf
inc
sbb
loope
jecxz
bound
and
aas
add
arpl
cld
add
sbb
ds
push
cmpsb
and
adc
iret
sahf
pop
pop
fistpll
cmc
inc
push
enter
cli
fwait
lea
fstpt
test
push
adc
les
fimull
sti
pushl
shlb
inc
mov
xchg
sub
fs
or
clc
cmpsl
hlt
mov
aad
int3
sar
lret
mov
jo
aam
mov
cmpsl
jne
xchg
pop
orl
jmp
lods
jnp
sub
ret
cwtl
jae
sbb
lods
mov
fstps
pop
xchg
shl
ret
in
hlt
outsb
adc
adc
mov
std
mov
out
dec
ret
sub
cli
or
push
mov
sub
lahf
sbb
cld
fs
mov
imul
insb
jecxz
xor
add
vpackusdw
push
jmp
cmpsl
test
xchg
pop
jns
pop
xor
mov
adc
sbb
pop
cmp
insb
fsqrt
int3
and
fcmovu
testb
xchg
push
pop
push
bound
jnp
stos
mov
in
loope
dec
adc
rcrb
mov
cli
add
sub
std
sub
xor
leave
stos
mov
out
in
mov
decb
xchg
repnz
fucomip
jae
mov
mov
mov
pop
lret
jmp
cmp
imul
dec
jb
fdivrs
sbb
jnp
fwait
mov
aad
sub
fistl
leave
call
hlt
stos
add
sarl
js
pop
fs
mov
je
sub
data16
sti
lods
mov
ret
hlt
rcrb
pop
cmp
adc
aam
cld
pop
sbb
bound
jae
jnp
enter
jg
movsl
movl
and
testl
cmc
add
add
inc
jmp
loopne
arpl
xor
mov
xlat
shrl
mov
pop
xor
mov
lock
dec
fs
dec
out
loope
lret
fldenv
pop
adc
out
das
test
inc
int
rol
inc
pop
cli
clc
mov
lret
mul
int3
add
add
stos
push
aam
inc
inc
jg
and
mov
sbb
dec
cli
stos
mov
pop
pop
mov
mov
enter
repnz
sub
push
xchg
enter
jmp
shlb
lds
mov
pop
add
leave
jb
es
xchg
push
das
push
mov
mov
cmp
arpl
jno
outsb
push
fdivrp
cs
or
mov
int3
pop
push
add
fadd
arpl
xchg
fdiv
mov
addr16
testb
int
out
or
shll
adc
dec
out
mov
out
mov
stc
xor
lea
es
mov
jae
push
cli
or
in
out
shr
aad
inc
mov
push
push
xchg
dec
cs
mov
mov
xchg
jnp
clc
or
mov
flds
out
sub
gs
push
jmp
jb
ja
push
pop
sbb
push
jmp
push
mov
ret
mov
test
jne
ljmp
mov
cmp
lret
jno
test
lcall
push
cmp
push
mov
hlt
xchg
adc
sub
jp
sbb
dec
decl
loopne
sub
xchg
mov
imull
cmp
test
cwtl
clc
mov
sarb
mov
xor
stc
xchg
mov
mov
jnp
inc
mov
lahf
sub
ds
mov
or
clc
icebp
iret
test
cs
jns
test
aam
shl
clc
lea
leave
sbb
or
push
icebp
or
es
aad
sbb
sbbb
mov
cmpsb
into
imul
mov
clc
adc
pop
cmc
sbb
inc
sub
sbb
xor
in
rcrl
outsl
clc
sbb
pop
scas
sbb
mov
popa
pop
push
push
sti
popf
jle
enter
xchg
and
sahf
jmp
cli
fs
inc
mov
and
jae
sbb
movsb
adc
test
xor
mov
cwtl
mov
fdivrl
adc
test
sub
and
shr
test
mov
or
and
mov
out
pusha
stos
push
inc
jecxz
xchg
jno
clc
adc
mov
mov
popa
aad
nop
mov
cli
push
cmp
cli
sub
jns
mov
pop
mov
push
or
ret
xchg
stc
sub
xchg
inc
add
inc
adc
out
lea
imul
mov
jnp
and
aam
jne
leave
outsl
les
incl
clc
and
push
shlb
mov
mov
popf
fcom
cmp
fiadds
and
pushf
leave
jp
mov
out
out
sbb
xor
dec
imul
sub
sti
adc
push
lret
repnz
es
and
dec
int3
stos
jbe
cli
fstl
xor
dec
int
dec
int
lods
jg
inc
cli
cmpsl
jecxz
sub
imul
mov
jno
hlt
jmp
pushf
sti
mov
ficoml
mov
cmc
xchg
xchg
cli
mov
adc
popa
mov
xchg
out
das
push
or
aaa
imul
fisubrs
and
or
stos
mov
mov
jns
int
rclb
inc
pop
mov
jp
lock
push
out
mov
sub
clc
xchg
mov
and
adc
iret
ss
jns
fstpl
call
aam
add
ror
mov
jg
mov
adc
jp
outsl
add
mov
jmp
push
jl
test
les
outsb
cwtl
cmpsl
cltd
hlt
xchg
addr16
sub
sbb
fdivl
jmp
lcall
pop
push
lret
push
or
xlat
sarb
jb
cmp
jne
fldl
xchg
ret
xchg
addr16
add
mov
push
xchg
sub
xor
stos
push
mov
jp
or
add
push
ss
push
add
pusha
je
xchg
pop
nop
jecxz
sbb
jl
xchg
lret
loopne
std
icebp
lds
out
inc
imul
jge
inc
gs
int3
mov
mov
ret
ror
pushf
sub
xchg
aad
cwtl
and
repnz
inc
or
jns
fbstp
pop
jmp
mov
sbb
push
cmp
rcrl
mov
out
push
seta
pop
xchg
ret
hlt
out
or
mov
and
dec
jae
aas
ss
pop
dec
shlb
aas
push
inc
mov
and
test
xor
fprem
jmp
int3
divps
mov
ret
push
pop
mov
je
in
pushl
sbb
enter
aam
xchg
movsb
xor
pop
mov
out
xchg
imul
cwtl
xchg
jo
sub
clc
leave
and
pusha
lcall
mov
mov
cwtl
in
sub
insb
cli
aad
enter
mov
dec
sub
xchg
sbb
clc
cmpl
pop
int
sub
ds
push
sub
xchg
push
sbb
cmp
ret
pop
pop
subl
adc
repz
mov
inc
std
adc
sub
repnz
iret
jne
fisttpll
ljmp
jae
mov
mov
cmp
pop
cwtl
jns
rol
cli
dec
lret
adc
movsl
pusha
ja
test
dec
jp
aas
je
fisttpl
in
mov
bound
and
inc
loopne
add
jno
test
jnp
cs
xchg
xchg
and
sbb
mul
fisubrl
xor
add
pop
rcr
dec
jb
jns
pop
imul
ret
lret
je
js
and
clc
popf
push
xchg
push
push
popf
dec
mov
sub
push
mov
jp
or
cmp
adc
mov
fildll
sbb
cmp
inc
fwait
std
repz
xchg
jbe
cli
mov
adc
push
sub
jb
bound
out
sub
push
pop
fdivs
push
jns
sbbl
mov
mov
test
mov
call
lret
jns
pop
call
adc
dec
add
iret
inc
out
add
loopne
icebp
sub
rcrb
sub
ret
xor
xor
cmc
aad
mov
sub
pusha
outsl
lahf
sub
lods
dec
dec
sbb
dec
sub
mov
xchg
dec
xor
or
sbb
test
jmp
call
dec
sub
pop
test
jecxz
pop
adc
mov
jae
int3
jg
inc
sub
add
xor
mov
pop
xchg
xor
sahf
cli
and
stc
sbb
push
mov
xor
clc
shlb
cli
call
xchg
gs
clc
cmp
jnp
ljmp
aaa
or
les
mov
addr16
pop
xchg
push
lock
or
push
xchg
pop
in
dec
mov
mov
fcmovne
test
mov
enter
mov
or
rclb
push
push
dec
jb
cli
xor
jl
movsl
sti
fildl
mov
mov
mov
add
gs
add
mov
mov
mov
repnz
scas
ret
jo
jl
movsl
movsb
mov
pop
jmp
call
jno
shl
sti
das
repnz
dec
dec
movsl
pop
cmpsl
jecxz
test
sub
and
repnz
push
hlt
subb
pusha
insb
fnstcw
ja
mov
daa
movaps
cli
mov
pause
xchg
jg
orl
pop
push
sahf
shrb
mov
and
adc
sbb
mov
mov
ds
xchg
mov
dec
test
aad
stos
add
add
movb
or
mov
or
dec
cmpsw
xlat
sbb
das
lods
sti
imul
mov
jecxz
xlat
mov
das
mov
movsb
ret
xor
dec
into
inc
dec
test
mov
jae
scas
cmp
xorl
int
lods
and
and
rcll
xchg
mov
dec
jl
inc
inc
sbb
xchg
sub
adc
pop
enter
outsl
fbstp
ret
enter
test
jb
or
aas
push
nop
xor
or
mov
xchg
outsl
xchg
subb
inc
sub
mov
mov
sub
pop
mov
dec
push
mov
mov
inc
sub
bound
loopne
shrb
outsb
mov
push
adc
in
sub
pushf
dec
dec
pop
ss
gs
and
sub
pusha
push
fwait
movsb
sub
or
int3
ja
test
or
sub
movsb
test
sub
notb
sub
inc
mov
and
inc
arpl
xchg
jae
xor
std
aas
xor
sub
cld
pusha
add
rorb
popa
pop
xlat
sub
test
sub
inc
mov
cmc
mov
jp
push
pop
push
mov
not
mov
push
xchg
fsubrp
mov
jmp
es
cmp
testl
test
pop
popa
ds
cmpsb
and
xor
inc
fimull
cmp
jmp
popa
xchg
stos
adc
mov
sbb
ss
shld
lea
mov
cmp
into
daa
mov
and
scas
dec
sub
mov
das
icebp
iret
jb
sub
mov
jne
dec
aaa
sarb
fisttpll
mov
mov
and
mov
loop
push
mov
sub
cltd
imul
xor
cwtl
mov
sub
xchg
je
sub
mov
sbb
testb
es
sbb
dec
fisttps
lret
push
mov
ret
push
mov
test
or
add
mov
movsl
aaa
shll
outsl
cli
push
jge
out
mov
add
sub
fcoms
int3
cmc
out
sbb
fwait
popf
sbb
xchg
ret
inc
ljmp
dec
pop
cwtl
rorb
push
pushf
sub
sbb
adc
ror
enter
sub
inc
jg
popf
leave
push
and
test
shlb
or
sub
or
pop
pop
sub
inc
sbb
fistpll
pop
nop
int
cmp
lret
mov
ljmp
push
dec
out
push
sbb
addb
mov
sub
sar
sar
sbb
test
call
pop
ds
mov
in
sub
sub
insb
jl
sub
xchg
clc
dec
sub
lds
and
cmp
leave
mov
sub
inc
rclb
mov
mov
ret
jnp
loop
inc
or
sahf
cmc
jbe
xor
pop
xchg
nop
mov
dec
stc
pushf
orb
fst
mov
xor
into
sbb
jp
adc
fs
sub
or
and
jp
add
or
out
mov
loope
pop
notb
sub
hlt
xchg
mov
sub
ficoml
mov
fistl
mov
cltd
jns
sbb
pop
scas
pop
push
or
shrl
hlt
les
push
js
xor
push
push
fistpl
cs
leave
mov
mov
mov
dec
pop
fiadds
xorl
jnp
adc
xchg
jp
sub
scas
loope
scas
mov
sub
cltd
add
dec
push
movsb
inc
mov
mov
mov
xchg
sub
je
into
mov
mov
cmc
inc
sub
jg
cmp
push
xor
pop
mov
cwtl
inc
rcrb
or
push
jge
mov
inc
jo
ret
scas
add
add
jp
insl
jae
clc
sub
jmp
inc
call
push
sub
mov
clc
fidivrs
aam
jge
imull
dec
jno
fnstcw
gs
xchg
test
push
xchg
push
aaa
or
pop
mov
xor
xchg
leave
test
push
push
subl
popf
sub
mov
and
inc
test
lret
sub
xchg
pop
sbb
dec
js
sub
cmp
pusha
lea
repz
movl
jae
inc
dec
sub
mov
sub
pop
push
sub
mov
sub
cs
into
setg
push
sub
movsb
out
pop
das
lcall
add
lret
xchg
sub
in
bnd
or
sub
sub
push
lret
subb
sub
xor
mov
sub
ss
mov
inc
lahf
sub
pushf
fcompl
cli
sub
lcall
sub
loop
sbb
sub
jne
sbb
clc
jae
xlat
cltd
xor
int3
shrb
sub
add
sub
mov
sub
ret
jge
sub
bound
dec
lods
adcb
lock
sub
iret
repnz
cltd
repz
xor
sub
ja
les
mov
sub
and
jmp
sub
scas
push
rolb
sub
jle
xor
sbb
mov
gs
fdivs
out
clc
xlat
scas
push
imul
sbb
xchg
enter
sub
jl
xchg
mov
jmp
cmp
mov
enter
jb
aam
les
and
add
je
das
imul
popa
adc
sub
arpl
fmuls
sbb
push
fwait
shrb
inc
xor
cmpsl
cmc
push
xor
dec
mov
mov
cmp
adc
push
imul
movsb
movsl
push
xchg
xchg
int
mov
inc
arpl
outsb
mov
insb
lods
sub
popf
ret
mov
jmp
or
enter
xchg
pop
mov
sub
ficomps
xchg
mov
test
cmp
or
pop
jmp
mov
fsubrl
testl
add
das
rcll
dec
lock
sub
addr16
rcll
sub
xchg
push
mov
bound
dec
aam
mov
aad
outsl
and
test
test
int3
or
inc
subl
in
xchg
imul
sub
cwtl
into
cmp
out
jecxz
lcall
cmpsl
mov
clc
sub
dec
push
adc
loope
fs
mov
and
sub
iret
and
mov
aaa
int3
insb
outsl
cmp
sub
cld
xor
fbld
cmp
push
out
out
das
xlat
clc
stc
lds
mov
or
aas
sti
imul
adc
repz
mov
mov
sbb
repz
push
sti
test
jns
clc
sub
movsb
mov
loope
cmp
cmp
cmp
mov
into
sbb
push
add
mov
push
add
inc
cs
xchg
fmul
inc
cli
adc
xchg
xor
fcmove
cmp
cmp
mov
popf
addr16
outsl
daa
inc
out
jmp
mov
jo
push
stos
mov
mov
xchg
and
cli
xchg
loop
rorl
dec
cld
mov
das
ds
mov
push
aas
xor
scas
sub
andl
push
dec
dec
shlb
push
xor
xchg
mov
test
inc
shr
stos
imul
jmp
popa
mov
cmp
out
les
and
xlat
fldt
mov
mov
js
jo
pop
or
insl
fsubrs
mov
shll
jne
je
mov
or
test
mov
mov
adc
pop
dec
add
scas
push
loopne
or
xchg
clc
iret
loop
dec
pop
mov
test
xor
fdivr
clc
adc
mov
mov
loop
out
test
bound
ja
push
push
or
sbb
call
icebp
dec
ror
xorl
mov
in
and
pop
inc
es
or
cld
mov
xchg
fwait
data16
push
dec
xor
push
pop
or
fimull
test
jecxz
jmp
push
mov
sbbb
sub
dec
dec
mov
addb
mov
stc
cli
or
stc
popf
repnz
or
sbb
sahf
adc
fnstcw
out
push
mov
adc
stos
cmp
das
add
cmp
aam
jge
in
sbb
mov
cs
mulb
xor
out
sbb
sub
test
add
imul
mov
xchg
dec
jae
in
xor
dec
shr
xor
sbb
std
scas
mov
and
and
push
push
jmp
call
mov
jo
mov
sub
test
and
mov
jge
stos
sbb
sti
leave
inc
shll
cs
push
rorl
ja
gs
mov
cli
sahf
cmc
ljmp
stos
jmp
mov
outsb
or
xchg
shll
cli
cmp
movsl
movb
out
dec
xor
outsb
scas
xchg
cmpsb
xlat
clc
mov
inc
adc
inc
test
andb
add
mov
xlat
mov
xchg
nop
dec
cmp
imul
or
clc
mov
iret
pop
lret
and
cmp
shlb
add
or
mov
incb
icebp
cmp
stos
cli
lods
sbb
clc
mov
mov
mov
les
or
mov
pop
mov
aam
sub
dec
or
cli
sub
or
aaa
imul
out
clc
add
iret
push
xchg
in
lcall
lret
jmp
adc
push
mov
in
out
mov
ljmp
popf
xchg
enterw
lret
ja
es
pop
lcall
out
and
jl
mov
test
lret
push
push
pop
cwtl
fwait
clc
xor
lods
jmp
add
jp
roll
cwtl
fdivrl
out
popf
sub
in
mov
jp
cmp
xor
aam
das
idiv
or
in
jp
out
mov
push
mov
shrb
xor
push
inc
mov
and
daa
dec
cmp
pop
test
dec
sub
enter
cmp
inc
cmpsb
out
jae
or
scas
adc
and
mov
pop
sbbl
cld
add
sub
rcll
lds
mov
gs
mov
sub
xor
outsb
dec
aas
push
adc
jl
mov
jne
ja
xchg
sub
mov
ja
jge
lods
or
mov
fbld
in
mov
rcrl
xchg
mov
fwait
inc
out
or
lods
test
push
daa
mov
xor
pop
paddq
and
fdivl
aad
inc
repz
lea
cmp
imul
dec
fdivrs
and
cmpsl
lahf
in
mov
je
imul
sub
test
outsb
pop
dec
mov
test
adc
cmp
lods
out
imulb
test
mov
xchg
jb
dec
pop
dec
push
ja
push
jp
jns
mov
xchg
jle
mov
mov
sub
or
xchg
dec
bound
push
les
adc
push
mov
es
push
dec
jb
push
mov
push
add
loopne
mov
leave
daa
aam
insb
xchg
into
mov
sub
xchg
push
popa
pusha
in
sbb
aas
dec
insb
sub
sub
rcrl
inc
loop,pt
ficomps
fdivrs
cmp
sub
sub
pop
cmp
pusha
sub
pop
xor
inc
add
jp
sub
dec
out
and
ret
pushf
loope
ss
outsl
mov
loopne
fnstenv
cmp
add
out
adc
mov
mov
inc
jge
dec
mov
imul
js
mov
fs
sub
out
xchg
incb
gs
xchg
mov
sbb
dec
sahf
out
cmpl
add
sub
jmp
sub
aad
jnp,pn
vmovaps
pop
shlb
mov
or
sub
sbb
stc
inc
out
push
or
and
sub
sub
lret
dec
movsb
push
adc
cmp
fadds
in
mov
sbb
test
xchg
pop
cs
sub
insl
push
dec
sub
sarb
fdivs
ret
enter
or
xor
mov
and
mov
test
sub
sub
sub
loope
add
adc
jno
aas
add
dec
inc
int
cmc
loop
pop
push
in
dec
andl
push
adc
shlb
add
mov
dec
sub
test
movsl
xor
fadds
sub
push
clc
push
pop
add
sub
xor
ret
jl
sub
into
mov
jmp
cmpsl
push
jno
pop
loopne
push
sub
imul
sub
cmc
add
dec
jg
xor
push
or
pop
mov
push
sub
into
sub
pushf
sub
inc
sbb
jns
mov
icebp
jmp
sub
push
mov
inc
and
dec
mov
sub
sub
cmp
ud2
sub
inc
arpl
jl
pop
sub
pop
ficoms
imulb
test
sub
mov
mov
jns
je
lock
out
sbb
mov
or
pop
mov
adc
rcll
jp
notb
or
cmp
cltd
sub
aaa
push
repz
sub
pop
nop
outsb
mov
sbb
push
dec
sub
sub
mov
cmovg
push
stos
xor
or
xchg
and
shlb
icebp
jns
mov
mov
aad
add
scas
adc
inc
adc
ja
jnp
in
sbb
notl
enter
lahf
iret
mov
sub
cwtl
cmp
or
mov
les
rol
sub
dec
pop
mov
adc
mov
mov
xchg
mov
push
addr16
push
cltd
js
sub
dec
clc
jp
pop
clc
mov
push
xchg
xor
mov
out
sbb
test
xchg
loope
xchg
rorl
clc
pop
iret
fisubrs
pop
fmuls
mov
lcall
pop
lds
adc
mov
mov
dec
jo
pop
mov
pop
add
ljmp
adc
popf
mov
inc
xchg
dec
pushf
mov
xor
fidivl
jp
mov
cmpsl
rolb
push
shrb
cmp
xlat
aaa
icebp
adc
mov
imul
inc
es
mov
xchg
sbb
jae
inc
lods
sbb
pusha
jecxz
adc
push
pop
add
and
xor
movsb
or
call
jecxz
mov
sub
mov
xor
out
push
sti
aaa
mov
xchg
insb
push
loope
mov
aad
inc
sbb
fstl
dec
int
mov
out
ss
or
push
dec
into
or
lret
cmp
les
dec
xor
or
test
dec
cmp
push
mov
inc
sub
test
mov
add
sbb
cli
push
xchg
sbb
out
sub
inc
scas
add
fwait
push
mov
lret
insl
mov
add
mov
sub
out
jle
add
and
sub
push
dec
int3
jmp
xchg
push
cmp
fwait
mov
and
imul
add
sub
insb
rolb
fdivp
jl
push
pop
clc
xlat
xchg
rol
pop
mov
mov
ret
cld
aam
stos
push
negl
outsl
es
cmc
addr16
loop
stos
pop
lods
mov
mov
pop
sub
icebp
mov
scas
xchg
jns
mov
mov
pop
adc
add
and
push
jmp
cwtl
outsl
addl
cmp
cmp
shr
cwtl
pop
fcoml
mov
push
shl
xchg
cwtl
dec
dec
lcall
movsl
outsb
jecxz
lcall
movsl
addr16
inc
sar
aas
or
and
in
inc
in
push
pop
shrb
push
mov
mov
dec
popf
push
mov
arpl
cmpb
shl
pusha
cmp
std
clc
add
cmp
into
or
sub
xchg
xchg
fldcw
fwait
and
cli
jmp
pop
xlat
pop
adc
and
pop
sub
in
aas
pop
clc
popf
in
pop
jae
and
cli
jb
jne
aaa
push
and
enter
inc
jle
data16
jnp
popl
leave
les
cmp
stos
aaa
mov
cli
iret
test
dec
xchg
cmp
insl
mov
adc
lods
mov
dec
orb
clc
das
jae
adc
inc
and
fxtract
into
aam
fwait
mov
jg
mov
nop
outsl
mov
jp
out
test
sbb
mov
subb
insl
aad
hlt
inc
sbb
lahf
icebp
push
test
jmp
scas
stos
mov
pusha
add
lods
int
movsb
inc
or
xor
cmp
pop
mov
test
mov
pop
push
pop
xchg
xor
sub
ja
cmp
jmp
pusha
pop
jmp
pop
pop
js
mov
int3
sti
sub
jle
arpl
mov
inc
fdivrp
sub
mov
pop
push
lret
mov
xchg
mov
push
jmp
cld
xchg
cli
flds
jmp
imul
xor
xchg
idiv
xchg
bnd
addr16
test
inc
or
dec
negl
sahf
fs
sar
xor
loope
inc
mov
pusha
sub
daa
dec
out
or
mov
sbb
setge
jne
jne
push
xor
xchg
pusha
pushf
lahf
and
and
dec
aad
add
loope
scas
rclb
mov
jmp
pusha
dec
test
popf
mov
and
push
ja
push
mov
je
out
mov
addr16
lock
clc
sub
ret
subb
das
cmp
push
ss
push
orb
daa
dec
in
push
les
scas
loope
xor
cmp
ret
cli
mov
pop
imul
rorb
icebp
inc
jns
sub
test
aaa
mov
dec
mov
and
popa
adc
loopne
sub
ret
test
mov
mov
movsb
dec
sub
call
jle
jmp
cli
mov
and
insb
mov
jl
sti
inc
addr16
clc
pop
pcmpeqb
nop
jns
fs
in
sbb
push
vfrczpd
xor
les
push
pushf
cld
movsl
sub
sbb
jmp
pop
insb
inc
loopne
fucomp
sbb
push
das
sub
sbb
add
inc
cmp
and
lret
cli
pop
outsl
rol
ss
loope
push
jne
shll
cltd
int
icebp
jle
faddp
mov
fdivs
xchg
jns
lahf
jne
pop
ret
sub
out
es
lds
nop
jne
xor
mov
or
push
add
sub
sti
sbb
pcmpgtb
and
xor
fwait
popa
mov
xlat
shlb
cmp
push
ret
mov
or
jb
xchg
pop
cmpsb
cmc
pop
daa
hlt
pusha
dec
lret
push
pop
addb
dec
dec
sub
fwait
mov
iret
aam
mov
pop
enter
mov
ds
fldcw
loope
push
push
test
add
jae
dec
iret
rolb
xchg
ffreep
jp
dec
inc
push
cmp
mov
sub
adc
repnz
sub
mov
fisubs
mov
cs
and
stc
les
clc
sbb
sbb
inc
sub
lds
cmovnp
jne
dec
pop
out
std
addr16
mov
dec
or
fs
cmp
outsl
mov
xor
push
std
inc
cmp
addr16
loope
cmp
cwtl
dec
xchg
cmp
xor
jg
jmp
es
jecxz
int
adc
ja
fimuls
mov
push
dec
sbb
int3
sbb
xchg
xchg
test
jae
sub
mov
les
pushf
insb
push
ja
das
lea
leave
and
add
mov
jbe
jns
mov
pop
push
pop
stos
sti
push
mov
mov
push
pop
jle
mov
jae
cli
adc
lds
pop
xchg
sub
inc
jae
jp
adc
clc
inc
fstps
mov
iret
mov
xchg
cli
inc
add
and
outsl
dec
sti
iret
cmp
rol
sar
insl
add
es
fsubrl
roll
adc
mov
nop
out
ret
push
sub
iret
incl
xor
int
jle
push
inc
loopw,pt
push
xor
sub
sub
cmc
fldt
sub
lods
cmpsb
popa
sub
and
jbe
mov
push
fistps
dec
jmp
mov
push
incl
sub
adc
lods
shrb
sbb
repnz
mov
add
push
in
xor
cltd
dec
add
dec
imul
push
pop
int
and
cmpsb
sub
fisubs
dec
or
lea
in
and
pop
fwait
xor
fwait
lret
xchg
xor
jecxz
or
jae
and
sub
mov
cwtl
sub
jo
sub
ss
daa
or
scas
das
lret
stc
sub
subb
cltd
repnz
dec
jmp
add
pushf
dec
mov
popf
imul
push
sub
xchg
cwtl
xchg
xor
test
iret
nop/reserved
sub
insl
jns
xchg
aam
mov
cmp
push
pop
sbb
in
fwait
es
mov
dec
sub
mov
sbb
jne
stos
fstp
cs
sub
push
popa
sarb
outsb
sub
movsb
leave
fcoms
sub
mov
xchg
xorl
or
and
mov
inc
xchg
roll
push
mov
fsubrp
sub
and
cmp
sub
or
sub
inc
push
push
call
and
xor
mov
call
xchg
sub
fnstenv
mov
push
and
push
hlt
mov
sub
outsb
stos
jg
mov
insl
mov
sub
or
pop
xchg
fwait
mov
cld
sarl
pop
and
sahf
mov
pop
dec
and
sbb
les
sbb
scas
dec
adc
lret
cmpsb
lcall
mov
idivb
in
lahf
sub
adc
fdivs
into
inc
jg
sub
cmc
sbb
sbbl
lds
jmp
inc
test
or
adc
scas
dec
scas
imul
lea
shl
cmp
sbb
push
add
cmpsb
or
jmp
fisubl
sub
fs
lahf
daa
mov
popa
cld
mov
imul
je
test
xor
shrl
fprem1
pop
sahf
mov
xchg
or
and
icebp
and
adc
jmp
xchg
cmpsb
aas
ljmp
in
jmp
dec
sub
hlt
pop
sub
xchg
and
jle
sub
fmull
cmp
push
or
pop
adc
sub
leave
mov
sub
push
sub
insb
adc
icebp
xor
es
adc
sbb
push
xor
lahf
js
cmp
jns
lcall
sub
into
data16
or
pop
movsb
out
fcomps
rolb
ja
dec
sarb
das
mov
dec
mov
mov
fnstsw
sub
mov
push
aas
loop,pt
enter
test
cmp
and
cmp
push
imul
xchg
into
mov
iret
or
dec
add
push
das
mov
in
sub
sbb
xchg
sub
mov
in
dec
jge
mov
mov
das
sub
and
popl
adc
cmp
sub
jg
subl
mov
std
subl
mov
xor
xor
mov
and
jge
out
cs
jns
push
jle
sub
jmp
imul
aaa
js
mov
and
lret
insl
test
or
push
mov
mov
mov
rcrb
out
loope
xrelease
rol
mov
sbb
xor
cmp
mov
dec
rcrl
out
sahf
adc
pushf
popa
jl
mov
js
popf
into
sub
mov
test
rolb
daa
and
lahf
imul
dec
dec
inc
rcrl
pop
sub
cmp
sub
jmp
arpl
xor
and
mov
jns
aaa
fcomip
cmp
out
jo
popf
sub
mov
dec
stc
sbb
sub
inc
repz
shlb
jae
sbb
lret
fisubrs
push
sub
jp
aad
in
mov
std
clc
dec
mov
jg
in
das
iret
add
inc
pop
push
test
mov
xchg
sub
jle
jns
out
outsl
subl
dec
sbb
imul
or
mov
test
jecxz
dec
cmpb
or
cltd
push
cmpb
ret
fdivr
ds
int
jmp
push
in
mov
rcll
inc
xor
or
jae
popf
pop
inc
movsb
hlt
add
test
mov
jne,pt
mov
jp
stos
adcb
inc
cmp
pop
fistpll
mov
xchg
xchg
sub
and
mov
xor
gs
adc
xor
in
sbb
mov
inc
outsl
pop
in
mov
sub
push
out
imul
stc
jmp
mov
aam
lds
add
push
pop
icebp
insl
mov
xchg
push
cmpsl
pop
sarl
or
push
sub
xor
sahf
nop
sub
cmp
insb
dec
lock
xchg
orb
lds
sti
dec
dec
sbb
pop
xor
shrb
inc
jp
sub
imul
mov
and
imul
int3
xor
sub
push
mov
jg
push
cmc
or
add
lods
sub
loop
aad
dec
inc
push
push
sub
xor
jbe
pop
nop
mov
jno
dec
mov
sub
cltd
pop
test
test
les
push
dec
imul
jge
sub
jnp
fstl
lds
sub
inc
cmpsl
outsb
jp
outsl
and
pop
xor
sbb
shlb
mov
add
and
fimull
aad
loope
in
mov
adc
outsl
sbb
or
pop
push
lcall
test
lds
orb
cld
das
loope
sub
xor
stos
flds
shlb
mov
mov
rcrb
push
push
sbb
xchg
les
and
sbb
andb
push
inc
xchg
mov
cmpsb
out
adc
in
movsl
roll
inc
fucomi
stos
sub
cmpsb
inc
test
enter
xor
jnp
sub
mov
jns,pn
mov
pop
insb
aas
mov
pop
sub
sbb
std
add
mov
pop
loop
rolb
mov
sub
inc
ss
push
push
sub
mov
and
ret
jl
sub
scas
xchg
cmp
or
out
sub
sti
lret
jae
mov
pop
cmp
dec
or
shll
loopne
in
sub
dec
test
mov
or
hlt
outsl
cwtl
pop
movsb
rclb
push
addr16
fldt
dec
hlt
das
xor
movsb
push
insl
sub
call
shrb
mov
lea
inc
cwtl
iret
and
xor
sub
insl
adc
sarb
scas
adc
dec
daa
and
dec
push
repnz
enter
in
imul
and
in
loopne
add
pop
xor
sub
cli
lods
jg
cs
cmp
pop
mov
inc
pop
or
sub
in
mov
sub
mov
cmp
xchg
push
fnstenv
adc
repnz
jmp
ss
sub
add
gs
xor
test
neg
mov
xor
push
aam
std
shrl
iret
xchg
bts
fistpll
jb
or
test
jns
xor
stos
sub
lds
aam
and
pushf
xor
cld
adc
cwtl
ss
int3
lret
sbb
mov
pop
mov
adc
dec
mov
cmp
pop
sarb
sub
sub
fildll
push
stos
out
mov
repz
ret
jg
pop
lods
test
clc
xchg
xor
lcall
and
jmp
mov
or
mov
aas
bt
jo
mov
imul
fmull
add
mov
lea
cs
ret
inc
sub
les
stos
mov
out
inc
cli
loop
mov
jo
ficompl
clc
or
stc
dec
or
mov
push
adc
adcb
enter
adc
push
ret
pop
clc
xchg
rcl
push
pop
xchg
sbb
dec
loope
pop
and
cmp
mov
das
sub
adc
popf
push
test
outsb
ljmp
xchg
sti
fsubs
xor
bound
and
jno
scas
mov
jmp
iret
adc
shrl
shll
xor
shl
js
mov
shrb
jne
cmp
xor
jge,pt
in
cs
mov
int
es
cmpsl
push
mov
sub
mov
repnz
sub
adc
sub
pop
or
push
dec
mov
mov
mov
dec
add
dec
mul
insb
call
pop
mov
add
cmc
shrb
or
outsb
cmpsb
jge
js
sub
hlt
mov
dec
jl
jbe
mov
mov
sbb
dec
call
sub
hlt
cmp
mov
inc
jl
rorl
sub
cld
jb
ljmp
andl
adc
stos
xchg
into
ret
out
mov
je
cmovge
sbb
jg
or
data16
pop
mov
mov
cmpsb
movsl
imul
push
sub
adc
stos
sub
call
movsb
rol
cmp
mov
push
inc
scas
cmp
dec
aad
adc
imul
cmp
ja
mov
mov
xor
roll
mov
pop
pop
mov
lods
sub
push
int
sub
inc
lret
dec
testl
jle
pop
or
xor
add
movsb
sbb
test
xchg
cltd
aaa
sub
fstl
int3
fprem
adc
sub
clc
popa
or
jne
dec
add
pop
mov
shrl
popf
mov
push
mov
mov
test
jecxz
pushf
je
test
mov
cltd
xor
push
fsubrl
xor
fwait
loop
fmuls
insl
mov
cmc
call
outsl
sub
in
cmp
les
mov
cld
mov
mov
add
adc
aas
enter
xor
dec
push
adcl
xor
scas
add
sub
xlat
shlb
inc
adc
int3
lea
jl
pop
sub
ds
icebp
lret
cmp
sub
sbb
push
or
shlb
js
lcall
sub
outsl
pop
xlat
bound
sub
dec
push
xor
cmp
push
xchg
sbb
fcoml
push
cltd
sub
dec
sub
les
fsubr
cs
xor
push
cmp
adc
lret
sub
and
push
call
pop
popf
xchg
inc
jg
arpl
jecxz
imul
mov
js
cmp
sub
outsb
dec
icebp
andl
cwtl
mov
jp
pop
adc
inc
nop
movsb
ja
jne
popa
inc
call
ds
mov
int
or
imul
or
inc
loopne
jmp
sub
pop
in
cli
mov
dec
mov
push
fwait
mov
xor
mov
push
and
mov
inc
jg
std
inc
push
mov
xor
icebp
fbld
sub
mov
pop
bound
sub
iret
pop
clc
add
jmp
call
lods
mov
cwtl
xor
sbb
popf
sbb
jb
or
xchg
sti
pusha
ret
xchg
mov
cwtl
mov
jnp
scas
rol
fs
xor
loope
xchg
movsb
push
sbb
add
bound
fwait
mov
sbb
jl
add
mov
and
mov
imul
stos
add
nop
inc
les
push
es
inc
fninit
or
jl
shr
lods
sahf
repz
orb
mov
mov
add
xchg
scas
std
jnp
pop
jmp
adc
scas
cmp
mull
mov
inc
test
adc
sti
clc
mov
mov
dec
inc
jb
push
mov
cli
xchg
sub
test
ficomps
xchg
popa
sub
jo
jmp
arpl
cli
das
roll
cmp
push
adc
les
mov
pop
test
sahf
test
mov
sub
jb
push
lret
dec
cli
leave
xchg
mov
sub
add
fs
add
mov
shrl
push
mov
les
and
clc
popf
mov
inc
shlb
add
cmp
push
data16
stc
jae
jecxz
fsts
aad
clc
lods
repnz
ja
lahf
xor
lret
out
sub
and
cmp
call
cmp
pop
xor
and
loopne
inc
mov
jge
popa
sub
and
dec
jb
sub
sbb
push
dec
cmp
lcall
sarb
xchg
mov
cli
jmp
shrl
mov
adcl
push
sub
xor
dec
inc
lods
add
add
sub
loope
pop
in
mov
mov
test
add
inc
in
enter
std
call
adc
inc
sysexit
lods
sub
ds
xor
and
push
jns
sub
xchg
lods
sub
loop
add
cmp
sub
pop
insl
mov
ljmp
cmp
or
lods
sarb
cmp
push
popf
sti
jl
pop
sub
loopne
add
ret
lret
loope
cmpb
fisubs
xchg
sub
sbb
testl
sbb
push
lea
add
fdivs
andb
xlat
fisubl
enter
repz
stc
jl
sub
cmc
loop
jge
movsl
movsb
movb
std
jmp
mov
dec
popa
adcl
cmc
cmp
sti
and
sub
inc
push
xchg
ja
jns
icebp
dec
leave
adc
xor
mov
add
jno
jae
repz
stos
fidivrl
or
jnp
imul
dec
mov
insl
mov
mov
sub
movb
inc
mov
sti
cli
cmp
popf
inc
clc
movsl
dec
cwtl
pop
adcb
adc
push
iret
push
jg
mov
jp
cmp
ds
push
push
in
xchg
test
out
sub
inc
incl
and
dec
imull
aad
inc
leave
adc
inc
xor
mov
ja
xor
stos
sub
repnz
cwtl
mov
push
movsl
sbb
fisubl
mov
cmp
sahf
std
imul
mov
inc
xchg
test
jmp
cmp
out
or
inc
lahf
lods
sub
add
xor
fisubl
or
pop
adc
dec
outsb
pop
repz
je
mov
jle
dec
mov
jl
jb
or
sub
pop
xchg
sbb
mov
sub
cmp
nop
pop
adc
mov
dec
mov
add
notb
imul
inc
sahf
cmpsb
std
pop
cld
sub
push
or
cmpsl
inc
sub
dec
jecxz
jmp
pop
std
insl
cli
push
cmpsb
mov
sub
jmp
ficoml
xor
loop
bound
movsb
das
call
hlt
imul
xchg
rorl
in
roll
shll
mov
je
sahf
inc
push
cmp
jp
sub
adc
jge
adc
and
and
cmp
jne
lds
sub
test
lret
xchg
sub
xor
sub
das
inc
out
shrb
nop
insl
mov
lret
sub
mov
mov
sub
and
xorl
xchg
rorl
xchg
sbb
pusha
sub
mov
add
inc
add
pop
sub
or
xchg
incl
cwtl
movsl
dec
and
sbb
or
pusha
xlat
dec
push
popa
shrl
daa
dec
bound
leave
sub
dec
or
cs
lahf
jecxz
add
mov
sub
sti
sub
fsubr
out
test
xchg
sub
insl
or
mov
rorl
dec
out
scas
sub
dec
sub
testb
sub
push
out
shrl
mov
imul
aaa
popa
in
cmc
aam
inc
sub
mov
loop
inc
lahf
cmp
push
sub
adc
leave
and
dec
dec
dec
sub
cwtl
arpl
aas
stc
pop
fisttps
or
xor
jle
adcb
cmp
mov
neg
fidivrs
enter
out
jns
ss
mov
xlat
jo
add
lds
xchg
inc
sub
fdivr
xchg
sub
aam
cmp
je
iret
sub
inc
pop
rolb
std
push
sub
adc
test
jg
loopne
ret
jno
in
pop
jns
mov
or
mov
add
repz
repnz
fimuls
ret
adc
dec
xchg
or
jecxz
xor
mov
jne
cwtl
stos
cmp
cmpsb
sub
xor
jnp
add
sub
ss
cmpsl
pop
mov
sub
pusha
leave
and
cmc
cs
add
scas
popf
adc
fsubrs
shrl
test
inc
lds
adc
repz
sub
fs
in
add
adc
movsl
lods
xchg
lds
sbb
clc
add
inc
in
inc
shr
outsb
xor
int
fcmovu
xchg
sub
stos
pop
mov
cmp
scas
mov
jb
rol
sbb
xchg
rcll
jp
fmull
clc
add
or
rorb
sub
pop
or
in
add
jl
inc
sub
xor
xchg
push
push
mov
jo
push
sub
dec
sub
movsl
test
inc
andl
pop
cli
adc
sub
sarl
out
pop
sub
lods
mov
ljmp
jle
imul
mov
xchg
mov
subb
sub
test
mov
pusha
ret
sti
sub
ret
in
jnp
adc
dec
sub
jp
xor
mov
enter
fdivs
in
sbb
je
cmp
sti
cmc
sub
push
sub
ss
daa
cwtl
xor
pmaddwd
int
aas
out
int3
sub
jg
lods
push
mov
clc
imul
or
xor
inc
insl
jmp
inc
scas
aad
out
sbb
push
jp
out
stos
push
les
out
ret
fwait
pop
push
aam
pop
jne
int
adc
lret
jg
repz
shll
or
outsb
rorl
pushf
add
ds
adc
rolb
mov
cmp
rclb
mov
mov
arpl
fwait
add
mov
sub
aaa
in
lds
adc
enter
adc
jle
icebp
insb
pop
out
enter
sub
sub
mov
in
sub
jno
mov
mov
dec
sub
fisubrl
mov
ficomps
in
and
pop
cwtl
in
imul
mov
pop
xchg
sub
mov
add
scas
and
repz
sub
ret
mov
dec
gs
push
movaps
sub
movsl
jle
test
xor
in
push
cmpl
jge
clc
insb
fildl
sub
xchg
test
data16
jo
sub
inc
xchg
mov
cmp
xchg
mov
cmpsl
or
popaw
sbb
lock
fidivrl
mov
cld
mov
push
imul
leave
xchg
stos
or
jne
mov
push
sub
shll
xchg
or
hlt
and
jns
es
xor
sub
mov
push
sub
mov
loope
sub
test
movsl
and
insb
jmp
imul
xchg
jae
sub
mov
jp
arpl
stos
imul
jg
xor
adc
push
sub
push
gs
popf
sub
lods
inc
fdivrs
jmp
enter
push
xor
outsb
or
fwait
das
in
sub
sbb
sub
cmpsb
add
sub
test
mov
sub
push
es
cwtl
hlt
in
adc
daa
sub
shlb
outsb
pop
sub
enter
mov
push
dec
inc
sub
fs
xor
fbstp
fldl
adc
cmp
icebp
xor
mull
sbb
cmc
mov
inc
adc
sub
mov
mov
xchg
sbb
stc
cmp
popf
js
loopne
mov
les
add
inc
sub
xlat
das
aam
xor
xor
ljmp
leave
jp
js
repz
mov
pushf
add
cmp
not
insb
cmpsl
sub
adc
sub
fstpl
jnp
inc
push
fisubrl
sub
or
mov
lods
mov
mov
ret
aad
sub
jbe
sub
test
xchg
outsl
sbb
sub
sbb
sub
in
push
rorl
push
mov
les
mov
ljmp
sub
xor
add
lret
mov
ror
enter
or
sub
sarl
fisubl
pop
cwtl
xor
or
ror
int3
iret
test
ds
xchg
jno
lcall
out
popf
push
inc
mov
push
jmp
sahf
lcall
sub
sbb
fldt
fisubs
sub
push
push
jl
das
and
lock
bnd
mov
sbb
in
iret
jmp
mov
push
jp
jb
sbb
jnp
adc
sub
sbb
pop
dec
push
les
pop
inc
gs
mov
and
pop
cmpsb
mov
scas
repz
ja
sub
pop
add
dec
sahf
mov
repnz
jbe
inc
or
loopne
lods
or
mov
sub
cwtl
sub
and
dec
sub
sub
push
sbb
fcoms
shrl
adc
inc
pusha
push
ret
fsubs
adc
push
pop
add
ja
into
and
adc
movb
adc
add
stc
pop
dec
mov
imul
ficoml
sub
rclb
jae
jmp
fimuls
or
or
mov
inc
fsts
xchg
outsl
ss
insl
hlt
mov
sub
xchg
add
add
jmp
iret
imul
stc
fmul
lock
decl
cmpl
shrl
mov
cmp
stos
repz
xor
and
mov
out
push
icebp
xor
sub
sbb
inc
pushl
mov
dec
sub
pop
into
jp
repnz
pop
lcall
or
mov
mov
sub
and
sub
pop
scas
outsl
mov
call
xor
xlat
xchg
sub
push
mov
cmp
aad
or
stos
inc
xorl
stos
mov
and
mov
popa
in
dec
add
adc
fisttpll
mov
xchg
dec
movsl
sub
sub
jbe
mov
jp
push
int3
daa
sub
and
in
subl
andb
fildl
sub
mov
cli
ds
pop
das
fisubrs
sbb
cltd
and
jmp
sbb
inc
mov
daa
out
shrl
addr16
mov
mov
sbb
gs
xchg
sub
mov
sti
ds
and
cmp
or
and
jle
push
push
popa
shlb
sub
mov
sti
imul
sub
inc
add
clc
jb
mov
roll
cmp
sbb
aad
sub
inc
inc
sbb
push
adcb
push
and
sub
jle
sbb
scas
xchg
sub
xchg
lods
jmp
xchg
inc
popf
sub
out
movsb
xlat
mov
iret
add
push
lret
nop
les
loop
cwtl
hlt
jmp
sbb
ljmp
fildll
jp
stos
mov
sub
and
subb
inc
sub
stos
mov
jne
sub
sarl
push
jp
test
and
loopne
ja
arpl
ret
repnz
cmp
push
stc
outsb
push
inc
icebp
in
enter
daa
xor
test
pop
cmp
xchg
mov
sub
insl
cli
sbb
subb
ds
push
jno
enter
ljmp
add
jnp
mov
adc
push
popf
into
add
sarb
testl
adc
sub
jp
call
negb
push
sub
cltd
popa
push
lods
cmp
mov
sub
or
inc
cltd
pop
mov
sub
cmp
add
mov
dec
arpl
sub
imul
jbe
jns
test
repnz
in
sbb
mov
pop
jne
add
scas
lods
enter
xor
fisubs
xchg
outsb
sub
js
adcl
pop
add
xor
jle
sti
fadds
adc
pop
pop
jae
imul
out
mov
fdivp
repz
sub
mov
sub
xor
loope
mov
lods
sub
cmpsb
lret
sub
mov
inc
fldt
mov
jp
mov
imul
bswap
pop
enter
repnz
in
lcall
or
fcmovbe
stc
jl
es
movsl
xor
pop
push
jle
pop
add
clc
push
lret
or
inc
cmp
mov
cmpb
les
adc
push
mov
mov
fs
dec
loopne
call
lcall
outsl
andb
stos
test
add
ds
aas
pop
jmp
jne
loope
lcall
and
push
push
dec
adc
or
xor
lret
sub
dec
rcrb
shrl
sub
lret
insb
pop
sub
and
cs
or
test
sub
xor
mov
aaa
imul
nop
insl
movsl
fisubrs
mov
inc
mov
aaa
push
or
adc
call
pop
sub
or
push
mov
pop
mov
fidivrl
mov
pop
or
lcall
dec
and
in
in
test
cmp
jmp
mov
xchg
sbb
add
push
jno
mov
mov
sub
cmc
sub
inc
repz
inc
and
lods
popa
jns
push
sub
dec
insb
out
ss
add
pop
or
mov
sub
mov
es
das
add
inc
rcrb
iret
adc
mov
pop
fdivs
jmp
xchg
stos
incb
rorl
mov
xchg
clc
push
arpl
xor
pusha
stos
mov
popf
jnp
repz
jmp
negl
mov
popf
pop
xor
cmp
dec
xor
rclb
pop
bound
xor
in
leave
sub
inc
jp
loope
pop
jae
out
mov
dec
xlat
pop
adc
and
xchg
inc
pushf
mulb
adc
por
xchg
mov
dec
add
adc
loop
sbb
pushf
ds
adc
cs
push
inc
es
scas
mov
dec
int3
les
and
rclb
std
inc
mov
push
jbe
ret
stos
test
cli
fcoms
sub
inc
xchg
scas
shrb
sti
sub
and
adc
popa
push
int3
inc
xor
aas
and
daa
dec
sub
pop
mov
stc
add
es
subb
add
cld
js
aam
les
adc
dec
imul
test
mov
or
daa
lods
shrb
inc
jno
sub
test
pop
jmp
dec
iret
jnp
add
xchg
outsb
pop
imul
xor
sub
mov
jns
inc
mov
lret
cmpxchg
and
push
jmp
or
shrb
outsb
pop
mov
vpaddq
mov
js
call
adc
cmpb
sub
pusha
stc
sub
es
les
fsubr
jmp
push
dec
mov
sbb
sbb
and
lds
push
ret
test
nop
xchg
sar
pop
fisubrs
inc
adc
push
int
test
mov
sub
jle
fildl
cmpsb
dec
sub
mov
mov
sub
push
dec
outsl
pop
popf
enter
push
fwait
xchg
mul
cmpsl
or
in
dec
test
pop
sub
testb
push
fs
sub
enter
sub
dec
fisubl
ret
push
adc
shrl
insb
icebp
sub
jp
pushf
adc
mov
inc
pop
mov
sbb
clc
mov
sub
bound
add
out
daa
sub
scas
inc
or
mov
ds
hlt
push
lea
mov
mov
inc
vpaddusw
shlb
jg
sub
dec
xor
std
out
mov
mov
push
sbb
sbb
xor
fmul
test
mov
jge
add
mov
adc
mov
inc
insb
cltd
sub
pop
repz
push
sbb
mov
mov
loope
nop
scas
stos
xor
dec
mov
xchg
ret
mov
add
sub
gs
mov
scas
inc
imul
xchg
insb
sbb
pushf
sub
sub
xchg
lcall
jmp
movsl
imul
and
pop
sbb
dec
adc
push
jb
ljmp
insb
sbb
jno
fisubrs
jle
loope
pop
sub
sub
pop
sahf
dec
in
cmpsl
push
cmp
jg
sarb
push
das
sbb
fs
fwait
mov
add
or
xor
xor
ds
call
sub
fidivl
mov
jecxz
sub
add
sub
lock
sbb
adc
pop
mov
sub
push
in
fisttpl
mov
jp
jecxz
sub
enter
xchg
movb
call
sbb
inc
stos
sub
inc
xchg
sub
nop
dec
jmp
mov
sub
add
stos
outsl
mov
int3
lea
bound
cmpsl
or
mov
jb
rcll
sub
pushf
je
in
jecxz
ret
sbb
out
rcr
sub
push
stos
or
in
mov
movsb
push
jns
sub
ficoms
stos
jp
mov
int
aad
xor
mov
pop
mov
movsb
sbb
adc
loope
ret
or
shrb
or
or
dec
into
add
add
jge
outsb
or
sub
stos
push
fiaddl
pop
cmp
rcll
push
sub
hlt
add
jecxz
jmp
arpl
jg
push
pop
ds
sbb
cmc
test
mov
push
enter
pushf
sub
aas
xchg
mov
iret
dec
dec
test
adc
icebp
add
dec
ja
and
pop
outsl
cmpsb
adc
in
in
and
das
jmp
movsb
cltd
addr16
sub
mov
cmp
xchg
fnstsw
jecxz
sub
je
inc
sub
stc
xor
and
dec
in
mov
sub
mov
shrl
in
movsl
int
test
and
rcrl
movb
dec
push
pop
in
sub
mov
sub
into
test
ret
test
adc
popa
mov
jecxz
jmp
repz
int
je
pushf
lcall
push
fiadds
jmp
pop
pop
int
sub
js
pop
fstps
ret
imul
fsubrl
or
mov
js,pt
push
cmp
ret
mov
nop
hlt
out
in
xchg
testb
push
sarb
mov
and
in
sbb
pop
insb
dec
dec
cmc
sub
jle
bound
rorl
fadd
mov
and
xor
sub
jle
sbb
xlat
ljmp
cmpsl
cs
aam
pop
sub
lock
mov
inc
sub
inc
icebp
iret
jae
or
fs
jmp
gs
adc
sub
and
rcrb
jl
ret
pop
sub
out
call
sub
shl
jg
xchg
and
mov
outsb
sub
sub
mov
xor
sub
test
popf
shll
pop
mov
daa
pop
outsb
fistpll
mov
pop
sub
mov
xor
sub
in
push
sub
out
hlt
bswap
sub
pop
xor
ljmp
mov
or
lcall
ljmp
cmp
inc
gs
and
push
or
repnz
lahf
xorb
insb
ret
sub
pop
mov
popa
sub
je
bound
arpl
outsl
fldt
jge
inc
rol
sub
jns
scas
or
sub
sub
adc
adc
sbb
dec
rcr
mov
icebp
sub
fwait
sub
je
cmp
sbb
stc
js
lds
sub
es
enter
or
push
test
dec
sub
fcmovne
mov
fmul
sub
and
in
ds
call
sub
addb
xchg
sub
mov
pop
insb
cmp
and
pusha
addr16
jmp
add
lret
pop
mov
les
pop
adc
fsubrl
in
and
or
jno
pop
ss
sub
mov
cmc
sub
inc
scas
xchg
mov
cmp
imull
sbb
outsb
mov
imul
sub
push
cmp
scas
push
mov
test
pushf
sbb
or
hlt
mov
push
inc
test
sub
aaa
les
xchg
mov
sub
mov
pop
pop
cmp
cmpsl
shrb
sarl
sub
js
fcom
xor
push
adc
inc
negb
push
cld
or
mov
sub
or
or
adc
outsl
inc
jne
and
xchg
mov
dec
adc
cld
or
mov
and
or
test
daa
mov
cwtl
add
sbb
hlt
stos
mov
pop
fistl
fbld
jnp
add
movsl
mov
sub
xor
sbb
sub
mov
stos
rolb
push
push
shrb
or
jno
testl
dec
adc
ficomps
sub
lods
and
sar
xchg
sub
or
mov
sbb
mov
adc
dec
mov
mov
hlt
add
inc
cmp
jno
mov
sub
pop
sub
scas
dec
xor
mov
xchg
sbb
sbb
sbb
dec
mov
loop
mov
inc
sub
adc
sub
and
scas
sub
push
and
mov
movsb
data16
jmp
inc
pop
sub
subl
sub
pop
test
and
testl
jo
inc
jl
push
jnp
mov
lods
mov
sbb
cmp
dec
sub
rcll
sub
scas
jge
fadds
sub
daa
ret
push
inc
das
sarl
sub
mov
cltd
lahf
sbb
into
cmpsl
pop
cwtl
fs
enter
dec
dec
test
mov
jecxz
sub
icebp
dec
and
xchg
or
lcall
ljmp
cld
sub
xchg
push
bound
mov
pop
xor
orl
mov
or
push
ret
sub
adc
dec
and
ret
fisttpll
xor
push
dec
jb
inc
jae
dec
pop
sub
aaa
out
and
xchg
cwtl
mov
shrl
cmpsb
dec
popf
lds
or
xor
call
cs
inc
fmull
jo
sbb
aam
mov
ds
adc
sub
sti
stos
fnstsw
in
xchg
in
in
xchg
sub
repz
jmp
inc
sub
add
sbbl
pop
sub
pop
subb
dec
enter
imul
xchg
xchg
cmp
add
push
jl
dec
shr
pop
fdivrs
lcall
or
test
sbb
insl
mov
ucomiss
or
popa
and
aas
and
cs
push
sti
jb
mov
xor
dec
sub
roll
adc
pop
in
jge
mov
mov
jb
gs
rclb
cltd
xlat
dec
xchg
add
std
add
push
xchg
icebp
enter
loop
jmp
xchg
pop
into
sub
xchg
pushf
pop
lret
add
push
jb
cmp
dec
and
test
aaa
mov
sbb
repz
or
jmp
es
pushl
cmpsb
leave
loope
sbb
cli
ds
test
sub
fldenv
mov
or
sbb
and
test
repnz
outsb
icebp
sub
or
add
lods
jl
mov
mov
and
jmp
jg
sub
inc
hlt
mov
ret
cmp
lods
data16
sub
or
sti
mov
subl
adc
cmp
sub
cmp
mov
pushf
daa
faddl
les
ljmp
xchg
mov
dec
outsb
mov
in
sbb
sub
sub
push
mov
lret
jns
sub
lcall
sub
orb
out
sub
dec
mov
mov
inc
cli
add
pushf
ficoml
sub
pop
jo
mov
xchg
dec
pop
or
cmp
xchg
cwtl
ja
sbb
int
stos
lods
dec
movsl
push
in
dec
jmp
imul
sub
sub
inc
push
cwtl
jns
pxor
cmp
ret
scas
sub
sti
les
lods
push
xchg
pop
mov
cmp
add
sti
outsl
push
decl
mov
xor
dec
sti
sub
stc
or
fs
dec
cmp
sbb
pop
sbb
mov
insb
les
adc
ja
fimuls
adc
jbe
push
add
cs
test
xchg
adc
dec
push
sbb
jmp
mov
jae
test
add
lfs
push
pop
clts
sbb
mov
test
stos
into
sti
adc
xor
pop
mov
push
scas
mov
xchg
test
push
mov
jecxz
or
jg
pop
jmp
inc
pop
fcomps
xchg
fsubrl
mov
clc
aaa
adc
rcrl
scas
and
int
mov
cli
push
mov
sti
fs
mov
jl
and
in
push
xchg
xchg
dec
sub
sti
dec
mov
hlt
shrl
adc
pop
clc
cwtl
fldlg2
push
les
mov
sti
aas
rorl
mov
in
les
lods
ja
or
in
adc
sbb
xor
pop
adc
dec
and
inc
int3
repnz
je
dec
push
mov
movsl
sti
push
addr16
add
das
push
repnz
sarl
push
out
std
xchg
sub
testl
pop
add
jb
xlat
push
in
in
ret
pop
mov
ja
xchg
mov
adc
push
imul
js
movsl
movsb
or
cmp
clc
mov
out
icebp
mov
out
xchg
push
fs
inc
push
cmp
dec
mov
pop
clc
xor
imul
rorl
jle
hlt
lret
idivl
gs
pop
xor
mov
lods
shlb
ja
test
xor
xor
fstl
xchg
ret
push
scas
repnz
mov
push
mov
movsl
cltd
js
push
loop
popl
lds
cmp
or
clc
adc
int
lds
call
mov
enter
lea
dec
xorl
mov
sti
mov
cmp
loop
sbb
call
jae
cwtl
xchg
xchg
jne
sahf
repz
mov
xlat
sub
or
lret
adc
push
sets
fs
push
stos
cwtl
jo
mov
sahf
cmp
adc
cli
jg
ret
mov
hlt
loopne
mov
repnz
sbb
test
mov
repz
fwait
mov
dec
sar
mov
xor
outsb
arpl
iret
add
inc
les
push
out
xor
into
jmp
and
scas
pop
jmp
add
test
inc
aaa
add
and
std
scas
jo
push
fwait
push
xchg
push
cmpsl
jge
and
out
push
add
popf
lret
cs
xlat
or
adc
pop
mov
mov
xor
pop
or
xchg
ss
sti
in
lahf
cmp
pop
cli
andb
push
stos
dec
test
xchg
clc
and
add
ja
out
sbb
sub
push
or
jmp
xchg
clc
push
push
mov
mov
add
ret
outsl
loope
pop
ss
cmpsb
popf
jl
and
dec
icebp
or
add
in
dec
ret
lds
lahf
or
mov
adc
push
ret
or
popf
fstl
addr16
loop
push
mov
ds
pop
in
fnstenv
hlt
jnp
adc
inc
je
data16
dec
sbb
in
out
mov
aad
rcl
cli
cltd
sbb
inc
repz
out
dec
lret
test
into
jmp
das
or
pop
and
sti
xor
mov
cmp
pop
sbb
hlt
push
fisttpll
fisubrl
test
push
cmp
sub
loop
sbb
jle
cs
xlat
dec
std
and
inc
cmp
fcompl
push
xor
int3
in
mov
push
orps
test
out
add
push
out
push
cli
adc
lret
sti
scas
movsl
dec
leave
in
js
jg
stos
pop
test
imul
sbb
push
fsubrl
cwtl
cmp
cmp
lret
sub
mov
push
or
movsb
mov
loope
stos
pop
adc
mov
jl
sub
gs
lcall
cmp
into
fldlg2
out
js
mov
lock
fwait
iret
mov
out
dec
jb
push
pusha
sub
rolb
dec
inc
fsub
fisubrl
mov
xchg
mov
lret
sub
mov
lret
push
sub
fsubrs
sub
outsl
and
mov
imul
into
mov
aad
lcall
xor
in
imul
sub
mov
jl
push
push
cmp
cmp
sub
sub
sub
out
sahf
jle
push
dec
and
movsl
push
fadd
cmp
shl
jne
aas
lea
cwtl
sub
jge
xor
sub
pop
ds
cmc
test
and
jnp
out
sub
fsubrs
dec
ss
sub
xchg
rolb
mov
test
mov
sub
xchg
dec
push
sub
pusha
mov
mov
imul
sbb
push
xor
int3
sarl
sub
sbb
jmp
sub
mov
xchg
cmpsb
sbb
enter
aaa
sub
sbb
arpl
sbb
out
or
jns
imull
popa
and
sub
daa
imul
lods
xchg
lret
in
repz
stos
fs
andb
sbb
sub
scas
jae
sub
bnd
pop
inc
lds
sub
push
add
sbbb
sub
xchg
scas
pusha
push
ds
enter
mov
cmc
mov
sub
stc
xchg
xchg
sbb
idivb
mov
xor
push
icebp
and
cs
adc
cltd
test
sub
sbbb
xchg
jle
mov
out
mov
call
bound
cmp
sub
insb
sub
lret
sub
xchg
rcll
mov
push
mov
xlat
daa
repnz
je
jle
push
or
fsubl
push
mov
nop
test
stos
std
lret
jns
dec
sub
mov
cmpb
push
add
cmp
cmpsb
pop
enter
add
adc
add
sahf
sub
enter
nop
movb
cmp
aaa
in
sub
loopne
int3
sub
je
jb
jge
push
sub
xor
adc
xchg
mov
sbb
cmp
loope
in
add
sub
mov
repz
arpl
xchg
cmc
sub
ljmp
ss
sub
dec
inc
fsts
in
dec
xor
sbb
call
sbbl
xor
inc
ffree
inc
mov
test
icebp
lahf
test
sbb
subl
dec
jmp
sbb
adc
adc
les
xor
fistps
clc
js
mov
pop
dec
sbb
popf
fistl
fcmovbe
or
mov
in
mov
mov
arpl
icebp
jns
cmpl
out
sub
fidivs
inc
cs
dec
mov
jno
mov
jbe
nop
fistpl
sbb
lock
and
push
jae
xor
aad
arpl
mov
shlb
add
xor
mov
hlt
push
subl
imul
ljmp
loopne
mov
hlt
in
push
xor
insl
mov
je
scas
xchg
call
not
jmp
jns
xor
sbbb
jg
js
hlt
or
cmp
cmp
dec
mov
sub
in
mov
sub
dec
dec
rcr
jns
js
push
popf
mul
clc
mov
lahf
clc
sub
pop
dec
xchg
mov
addr16
movsb
lret
xor
stc
loope
rcr
pop
test
fstp
mov
pop
outsb
dec
lds
lcall
inc
dec
rol
and
fidivl
sub
fdiv
out
out
push
pop
roll
or
nop
mov
cmp
popf
sub
sbb
or
add
inc
mov
ljmp
and
jmp
arpl
mov
cli
mov
jae
inc
sub
jecxz
and
ds
mov
scas
inc
cmp
rcrl
js
push
loope
pop
mov
aad
mov
adc
adc
call
cmp
jmp
pop
dec
add
repz
mov
mov
or
movsl
cmp
dec
pop
jle
lods
in
andb
or
aam
std
fs
dec
jp
xchg
lcall
push
pop
mov
addr16
imul
fcmovbe
xchg
jne
jb
int3
inc
xor
add
jo
mov
test
mov
dec
sarl
out
rcl
filds
jae
pusha
lods
ss
push
leave
je
mov
je
jmp
sub
xor
mov
mov
stos
fisubl
sub
cmp
popa
pop
pop
test
test
dec
shrb
adc
sbb
and
xor
dec
loopne
fldcw
enter
sub
sahf
ret
pop
shlb
xchg
lret
jle
ljmp
das
jl
add
push
and
aas
aam
mov
sub
addr16
clc
gs
cmp
out
pushl
inc
push
xor
fwait
notl
cli
sbb
test
scas
adc
rol
mov
cmpb
inc
lock
sbb
push
rol
outsl
mov
jmp
add
leave
hlt
es
fcmovnb
add
push
xchg
xchg
sub
push
xchg
sub
repnz
jmp
sti
insl
cwtl
inc
xlat
mov
dec
cmp
mov
or
out
inc
add
incl
add
icebp
fistpll
testb
jo
adc
jae
lcall
lods
rorl
stos
fadds
jg
divl
in
movsb
fidivrs
xor
push
cmp
rcrb
test
dec
cmp
xchg
and
sbb
push
insl
mov
jl
push
cmpsl
loope
fcmovbe
inc
adc
sbb
mov
sub
cmpsl
loopne
je
addr16
jns
popa
test
enter
sahf
icebp
cmc
leave
out
mov
call
mov
clc
lahf
test
loopne
cld
xchg
jne
jnp
test
cwtl
xor
cmp
data16
mov
xor
add
inc
dec
test
and
out
in
imulb
pop
push
mov
sub
push
inc
je
jno
xchg
add
cli
dec
push
call
push
jbe
cmp
push
xchg
subl
repz
cmp
in
sbb
mov
sub
sub
xor
pop
imul
neg
add
xor
enter
inc
add
xchg
mov
adc
cmp
sub
add
mov
mov
dec
jmp
in
inc
sub
add
sub
mov
stos
and
mov
mov
sbb
cli
xchg
cmp
mov
jne
cli
sbb
cld
add
adc
pop
sub
add
lea
mov
stos
jno
jmp
dec
ljmp
push
pop
enter
mov
cmpsl
je
loopne
iret
or
sub
jbe
icebp
adc
out
sub
xchg
rorl
adc
je
mov
jmp
jle
test
out
imul
or
outsb
sub
cld
mov
cld
sub
or
jbe
bound
sub
jns
mov
jge
cmp
pop
push
mov
test
mov
push
mov
xlat
cmc
mov
sub
sbb
xor
arpl
popa
outsl
push
pop
or
mull
cmp
push
data16
lret
xchg
xor
mov
xchg
jno
insb
int3
dec
and
ficomps
xor
data16
pop
jle
push
enter
jno
das
push
imul
sahf
push
mov
icebp
fxch
dec
jecxz
mov
cmp
lcall
cmpl
dec
sub
or
push
jns
mov
shrb
pop
dec
ss
dec
sub
or
push
daa
sub
adc
sub
push
stos
or
arpl
iret
shrl
pop
xchg
sub
add
ficomps
cmpsb
xor
sarl
jne
ret
sub
jno
scas
nop
dec
rorb
jnp
dec
rorl
cmpsb
sub
subl
std
sub
cmp
xchg
dec
aas
cli
jge
test
or
das
popf
sub
sub
popa
sub
lock
dec
aam
push
add
int
rclb
subl
data16
shrb
lea
lods
push
cmp
push
lahf
fwait
add
push
jmp
repz
in
sbb
loope
sub
std
pop
sub
pop
jne
add
xchg
enter
or
dec
cmp
shll
lahf
sub
sbb
dec
out
jge
jmp
lods
and
xchg
mov
mov
fwait
sub
outsl
ret
cmp
sub
adc
cmp
mov
lret
inc
sub
cmp
pop
mov
pusha
cltd
sub
or
sahf
sub
xchg
cmc
mov
or
iret
add
pop
xchg
sub
stos
fwait
xchg
inc
arpl
in
je
cwtl
fists
jo
loope
dec
dec
clc
push
fwait
repz
jp
mov
divl
sbb
mov
inc
and
jmp
mov
sti
pop
sub
sub
stos
inc
inc
mov
dec
sub
pavgb
dec
pop
inc
push
dec
sub
addr16
and
pop
in
popf
ja
sbb
sahf
sub
int3
push
sbb
jmp
stos
pop
fadd
inc
fiadds
dec
clc
cmp
xchg
dec
out
shrb
sbb
pop
lcall
mov
std
lods
arpl
jns
inc
ljmp
pop
xlat
cmc
shll
lea
adc
out
sbb
test
fdivrp
push
addr16
aad
push
pusha
ss
mov
imul
addl
inc
lret
and
jns
xchg
cwtl
xchg
insl
cmp
cmp
adc
repnz
xor
mov
pop
mov
and
insb
inc
cmp
std
cld
testb
js
jb
push
bound
jnp
mov
cmp
sbb
cmp
add
cmp
push
out
in
xor
mov
dec
cmp
sbbb
mov
cmp
lods
cld
and
test
xlat
mov
push
mov
cld
cmp
inc
test
das
es
jnp
mov
sub
adc
cmp
adc
mov
pop
and
sbb
in
jnp
js
rol
clc
addr16
out
pop
xchg
popf
shr
or
scas
mull
sbb
xor
lret
jmp
sub
mov
ret
inc
sbbb
clc
and
int
mov
sub
clc
sbb
insb
mov
es
fcmovbe
jecxz
int
lods
rorb
push
mov
nop
and
dec
call
enter
dec
mov
inc
push
push
fdivs
push
adc
sub
testl
mov
sub
shrb
xor
pop
mov
mov
iret
loop
xor
cld
sub
push
mov
stc
sub
cld
jmp
xchg
adc
loop
loope
cmpsb
xor
add
add
jp
pusha
mov
rol
icebp
and
dec
out
jnp
cmp
pop
push
push
cli
mov
negl
es
mov
leave
std
aas
lahf
sub
icebp
sar
or
xlat
in
mov
dec
bound
pop
push
testl
sbb
xchg
rorl
lds
mov
loopne
cwtl
xchg
aam
jge
push
mov
pop
adc
mov
push
clc
shll
sub
icebp
cmpl
sbb
cmp
dec
mov
xchg
push
fidivrl
clc
cmp
cmp
xchg
mov
cmp
adc
cmp
dec
frstor
and
push
cmp
std
jbe
add
xor
pop
xor
adc
xor
jecxz
sbb
jo
outsb
cmpsb
mov
clc
in
fidivrl
out
cld
pop
inc
in
shlb
inc
aam
lret
cwtl
inc
clc
sbb
and
sarl
push
imul
xchg
or
pop
outsb
mov
inc
push
and
aam
push
mov
jmp
mov
iret
stc
pop
push
repnz
dec
sub
pushl
stos
jns
jae
inc
repz
clc
sub
ds
mov
jns
sub
push
pop
cwtl
or
jnp
jg
enter
push
dec
movsb
stos
insb
fisubl
jnp
inc
hlt
scas
repz
lret
dec
loopne
cmpsb
jmp
scas
push
mov
clc
clc
fadd
dec
fldenv
adc
fistps
lcall
dec
les
jo
test
adc
pop
out
sub
xor
ja
xor
sub
mov
mov
cmp
in
mov
test
or
aas
xor
mov
into
xchg
int3
gs
fisubrs
mov
das
out
xor
mov
xchg
gs
push
jbe
sub
push
sar
and
sub
inc
scas
push
outsl
in
fiadds
pop
add
jb
movsl
shlb
sbb
xchg
clc
sbbl
fwait
pop
jecxz
adc
cmpsb
jnp
and
mov
push
mov
mov
jbe
nop
jns
rol
sahf
sbb
loope
mov
mov
fldenv
mov
shrb
mov
fsubl
xchg
inc
pop
inc
jo
sbb
enter
popa
jmp
sbb
call
repz
insb
out
test
xchg
faddl
popf
cwtl
or
cmc
in
xor
mov
sbb
pop
test
and
mov
dec
subb
xchg
jl
fistl
adc
xor
mov
sub
sbbb
mov
mov
sbb
add
arpl
jae
and
movsb
sub
stos
pop
sarb
cli
jg
stos
sub
xchg
call
add
pop
adc
mov
push
lret
push
mov
push
mov
clc
pop
shll
cli
pop
xchg
push
sub
fwait
test
and
mov
int
sub
cli
faddl
pushf
xlat
sbb
dec
pop
and
std
clc
daa
adc
dec
mov
mov
imul
sub
arpl
negb
mov
pop
jo
mov
movsl
mov
mov
or
cmp
pushf
clc
and
sbb
xchg
test
push
inc
add
pop
movsb
jo
mov
fldenv
out
orb
test
clc
or
leave
cmp
stos
mov
mov
bnd
cmp
loope
xchg
pop
popa
dec
scas
mov
leave
lret
into
pushf
movsb
outsb
shrl
imul
icebp
out
adc
cli
sbb
push
aaa
das
xchg
in
out
push
cmp
les
in
loopne
out
ret
inc
or
sbb
sbb
aas
pushf
sti
cmp
pop
sbb
mov
aaa
adc
pop
inc
jne
inc
test
inc
cmp
cmp
sub
jcxz
fisttps
ss
out
stos
push
ret
test
or
push
ror
inc
and
jb
rorb
xlat
adc
fistpll
pop
lcall
mov
lret
mov
mov
enter
xchg
adc
int3
lods
xlat
dec
enter
inc
jnp
mov
das
mov
aad
rcll
repz
dec
sub
mov
mov
into
and
orl
lods
imul
scas
sar
or
mov
addr16
test
xor
or
xchg
sbb
push
fisttpl
mov
es
push
pusha
loopne
jno
negl
ret
jno
fildll
mov
and
clc
dec
xchg
les
lret
mov
aas
out
repnz
test
inc
in
sti
lock
movl
jmp
in
dec
sti
sub
notb
ret
jmp
popf
sub
rcrb
xor
dec
push
loope
pop
xor
stos
lret
cli
adc
pop
or
cmp
lahf
jmp
test
xor
add
stos
es
mov
lcall
rcl
jo
dec
mov
sub
test
shl
outsl
in
push
and
mov
lea
push
sub
ret
jne
roll
lods
mov
pop
and
int3
bnd
out
sbb
call
fnstcw
jno
mov
sub
arpl
mov
sti
dec
sub
pop
adc
sub
pusha
cmpsl
jne
leave
subb
cmp
sub
mov
lds
lret
lock
cmpb
leave
xor
xor
filds
sbb
mov
lahf
jle
sub
faddl
cld
lcall
arpl
dec
lds
or
sub
mov
or
dec
call
scas
out
ss
and
es
cmp
or
sbb
push
dec
mov
xor
in
shrb
jle
mov
test
je
sub
mov
das
mov
test
cld
cmp
leave
cwtl
shll
add
out
push
dec
cmp
push
repz
or
pop
loope
sub
cmpsb
iret
jmp
adc
roll
dec
and
and
out
mov
mov
sbb
bound
negl
adc
out
movsb
push
filds
mov
or
jns
or
xchg
cltd
sub
icebp
xchg
pop
jae
jbe
in
lods
mov
sbb
push
outsl
xchg
xchg
dec
dec
shlb
sub
icebp
jp
ret
std
es
sub
nop
push
scas
push
jl
sub
popf
mov
test
add
lods
or
mov
int3
push
jg
cmp
jecxz
shrl
add
mov
adc
jb
subl
cmc
imul
xor
js
sete
add
jb
leave
xchg
pusha
jmp
mov
cmc
and
scas
gs
ds
loop
and
sub
in
xor
or
imul
sub
movsb
sbb
and
xchg
aaa
dec
popf
adc
test
fdivrl
stos
inc
cmpsb
mov
stos
sub
sub
or
dec
or
xchg
dec
mov
stos
dec
pop
or
repz
popl
pop
shll
pop
sub
lret
shl
lret
sub
jbe
jge
dec
fadd
inc
and
inc
fdivs
pop
dec
icebp
mov
pop
lret
bound
pop
sbb
daa
jo
xchg
cmp
call
jbe
into
sub
cld
les
mov
xchg
stos
cmp
mov
adc
mov
cmpsl
adc
scas
jp
pop
aam
jmp
outsb
lret
ss
xor
pop
xchg
pop
add
aaa
sbb
push
mov
jb
sub
dec
push
xchg
mov
sysenter
sub
ja
adc
imul
fcompl
aad
sub
mov
sub
mov
in
add
jecxz
sub
dec
in
dec
adc
xchg
stos
mov
dec
shr
lcall
cltd
mov
sbb
dec
inc
sub
loop
jmp
and
out
cmpsl
add
push
or
lret
aad
sub
add
cmc
mov
add
adcb
add
mov
mov
adc
das
jecxz
xchg
test
pop
sbb
leave
xchg
call
dec
jae
xor
mov
sub
sub
icebp
inc
pop
mov
aad
dec
cmp
sbb
sbb
inc
cmp
das
mov
fwait
lahf
clc
int3
sbb
add
enter
sahf
addr16
inc
mov
add
lret
adc
xor
or
lahf
int3
adc
cltd
add
inc
or
rorb
popf
xchg
sub
jo
and
add
push
pop
cmpsb
mov
ret
dec
mov
push
adc
add
xchg
repz
iret
cs
sub
dec
mov
push
aas
sub
xor
and
mov
gs
mov
sbb
cmp
loope
sub
fadd
repnz
dec
call
movsl
jne
loop
sub
mov
call
sub
test
addr16
je
js
outsb
sub
sub
mov
pop
xchg
sub
adc
inc
sub
sub
jle
imul
sti
inc
push
cmp
pop
push
add
sub
subl
incb
mov
lods
mov
call
inc
das
mov
push
ficompl
sub
jae,pt
mov
add
or
leave
sub
jecxz
and
mov
adc
xor
cmpsl
push
sub
mov
sbb
lret
das
scas
lret
jbe
sub
rolb
sub
pop
xchg
sub
lea
shrl
sbb
dec
mov
jno
cs
jge
into
adc
xor
inc
lret
mov
in
loope
mov
test
dec
or
pop
sub
daa
arpl
in
mov
pop
push
xchg
sub
or
cmp
in
mov
sub
push
push
shrl
sti
aam
repnz
or
ds
mov
or
cmpsl
xor
adc
fmulp
int3
add
add
sub
jnp
loopne
aad
negb
adc
insl
loope
mov
push
xor
xchg
loopne
lahf
push
cmp
pop
in
lret
pop
sbb
aas
add
mov
jae
mov
adc
dec
pop
inc
lret
movsb
stos
push
dec
pop
sbb
test
cmp
jecxz
mov
ss
push
mov
jle
inc
insl
lret
sbbl
xchg
adc
adc
push
push
cmc
mov
aam
push
xchg
sarl
dec
fldt
sub
ds
add
sbb
xchg
inc
mov
sub
push
lcall
call
or
jge
sub
inc
jb
mov
dec
mov
addr16
rolb
out
scas
aaa
push
lds
aas
stc
sub
and
mov
movsl
les
fsubs
mov
out
call
stos
push
lea
divl
dec
les
mov
in
test
dec
lock
movsl
dec
mov
inc
sub
sbb
add
push
jne
add
and
rorl
stos
loop
stos
mov
sub
or
movsl
mov
xor
scas
dec
jmp
xchg
sub
clc
sub
jge
and
stos
add
sub
inc
adc
jg
je
cmp
sti
mov
sub
fs
sub
push
lcall
jmp
rolb
int3
lret
sub
mov
dec
add
sub
aas
neg
sbb
or
ds
pop
lret
jmp
mov
imul
out
xchg
mov
push
mov
jns
scas
pop
hlt
sub
mov
cld
cwtl
lds
fcoms
sbb
mov
mov
movsl
in
cltd
sub
icebp
shll
int3
fdivs
and
and
mov
or
mov
mov
cld
mull
pop
mov
pop
insb
jp
shr
lds
les
dec
jb
mov
mov
mov
xlat
pop
in
aaa
dec
mov
jge
ljmp
push
pop
xor
movsl
fs
sub
xchg
dec
jno
sub
pop
outsl
sub
sbb
clc
mov
sub
xchg
xchg
or
push
ret
or
call
push
scas
jo
inc
fdivrs
add
gs
sub
push
sub
shl
arpl
or
push
stc
mov
fildl
out
adc
and
or
fwait
ljmp
push
push
fidivrl
push
sub
int
inc
ret
xchg
inc
inc
clc
sbbl
sti
mov
mov
int
jg
and
loop
cmp
js
popf
adc
push
push
push
cmp
cmp
test
lret
or
loope
cmp
push
sub
fs
xchg
mov
pop
fucom
aas
shl
leave
out
lahf
data16
mov
mov
sbb
cwtl
sbb
jmp
cld
dec
mov
clc
mov
stos
adc
faddl
insb
mov
addr16
jns
cmpb
push
les
js
jno
or
addr16
cmp
sti
repnz
fwait
jl
push
push
xchg
adc
fwait
xor
dec
or
imul
pop
iret
les
sub
push
dec
ror
sub
bnd
lcall
aam
vcmpps
jo
push
push
mov
xchg
xor
sarl
data16
jne
xor
and
test
add
mov
add
lcall
pop
cli
les
in
shrl
add
pushf
sub
addr16
xor
pop
jno
mov
mov
jmp
arpl
sub
test
icebp
fidivl
sub
test
and
into
out
icebp
push
dec
sub
sti
inc
cli
push
std
imul
insb
ds
jge
push
je
hlt
mov
sbb
sub
lods
add
test
lds
inc
cld
repz
sbb
mov
sti
sub
push
push
sub
mov
adc
pop
insl
cmpsb
cmp
cmp
sti
inc
in
mov
sub
fldenv
xlat
sub
scas
jmp
das
loop
dec
mov
xchg
lods
sub
sub
adc
push
enter
int
sub
dec
mov
and
inc
mov
dec
sub
push
hlt
loopne
popa
push
loop
sub
cmp
push
fcoms
sub
xchg
sahf
fildll
push
enter
adc
js
stos
repnz
in
adc
sub
inc
and
jecxz
or
push
imulb
arpl
ficomps
pop
and
sbb
les
mov
lock
dec
iret
les
or
insb
dec
call
jmp
lea
sbb
xchg
in
adc
inc
cmp
popf
cmp
add
pop
orl
sarb
and
mov
je
daa
daa
adc
dec
cmp
or
xor
rcrb
fmulp
or
jbe
inc
push
pop
daa
jne
adc
mov
addl
test
imul
popf
mov
push
pop
push
adc
pop
sbb
in
mov
loopne
out
jmp
sub
jle
jg
or
fildl
fbld
xchg
sbb
ljmp
and
or
dec
adc
inc
imul
pop
xchg
sub
dec
mov
mov
out
sub
ror
cwtl
mov
adcl
lahf
or
sbb
cmp
mov
das
xor
jg
push
mov
sub
pop
imul
subb
mov
xor
ret
sub
inc
lds
leave
add
add
mov
jl
jns
fs
orl
jge
mov
out
sub
mov
mov
fldt
push
dec
add
sti
or
sub
sarl
sub
ss
fwait
sub
cmp
shl
push
out
add
pop
pop
enter
mov
popa
xor
and
sub
jo
in
dec
idivb
fcompl
sub
movsl
mov
ljmp
out
mov
mov
push
scas
jno
mov
out
ret
scas
xorl
xrelease
pushf
push
int
sub
adc
sub
sub
add
mov
cltd
inc
aas
xor
xor
sub
das
enter
adc
sub
popf
push
movsl
jo
xchg
lret
mov
out
data16
jmp
push
sub
or
shrb
insl
daa
dec
xor
xchg
test
dec
and
addr16
inc
push
sbb
cwtl
lock
das
sub
fistpl
mov
jp
out
jae
inc
push
lahf
mov
mov
insb
bnd
insb
orb
sbb
call
popf
lret
sbb
idivl
cmp
sub
and
bound
xchg
xor
jle
int3
sub
ja
rcl
loop
jmp
roll
sub
cmp
jbe
sub
pop
mov
lods
in
aaa
dec
nop
sahf
js
cmc
aas
stos
push
and
push
mov
enter
ret
xor
xchg
aam
pop
loope
aam
sahf
mov
adc
push
mov
dec
and
push
sub
clc
lret
adc
test
cmp
mov
jp
jne
sub
insl
cwtl
sub
outsl
mov
sub
pop
shll
mov
xchg
xchg
add
jg
imul
xchg
jge
adc
arpl
clc
jle
xor
and
pop
pusha
sub
outsb
cmpsb
xchg
into
and
nop
ret
pop
cmp
sub
mov
test
and
ret
inc
imulb
mov
shll
icebp
lock
subb
or
mov
cmp
repz
pop
das
and
jno
and
jbe
mov
lret
fs
cmp
jmp
shr
xchg
ljmp
nop
test
or
dec
lret
xchg
test
pop
fisubrs
call
cmc
and
jl
popf
pushf
mov
sbb
cmpps
mov
incl
or
xor
pop
ds
fsts
jbe
loope
inc
test
pushf
fcoms
pop
jns
jp
dec
jb
clc
mov
outsb
mov
adc
outsb
sbb
pop
in
clc
mov
loope
popf
and
push
push
fcoml
in
add
gs
xchg
fcmovnu
jnp
mov
dec
sbb
push
subb
jns
sub
in
leave
dec
cli
pusha
push
xchg
mov
push
or
test
shlb
test
lcall
sub
sbb
idivl
inc
sub
sub
mov
addr16
jo
adc
sbb
es
dec
lret
sbb
fcoml
xor
loop
mov
lret
cmp
lds
out
mov
pop
jg
mov
jo
nop
subl
adc
ret
arpl
add
sub
lret
lods
mov
pop
mov
out
out
dec
add
gs
push
jmp
test
repnz
jmp
mov
popa
jae
rclb
adc
or
je
jp
ret
aad
movaps
mov
mov
push
arpl
sub
lahf
fnstenv
mov
and
das
lcall
ljmp
or
or
push
xchg
out
pop
pop
xchg
pop
insl
cwtl
and
pop
movsl
in
orb
pop
sar
push
cmp
jb
inc
sti
in
daa
mov
adc
mov
sub
aaa
cmc
pop
clc
push
dec
fs
pop
stos
outsl
mov
cwtl
jle
lcall
mov
xchg
rcrb
mov
pop
jb
add
xchg
mov
push
movsb
hlt
sar
pop
ret
ss
sub
lret
mov
clc
cmpsl
pop
push
mov
xor
jmp
push
pop
jae
sub
leave
jns
sub
loop
mov
sub
mov
movb
sub
mov
les
fsubrl
mov
repz
ds
ljmp
sub
mov
jge
xor
out
mov
aad
loop
xlat
push
and
sub
movb
fstpt
or
sub
bound
and
push
xchg
outsb
movsl
inc
mov
and
aaa
adc
cmc
add
cs
mov
xchg
push
pop
pop
xor
mov
cs
cmp
lods
cmp
in
outsb
inc
movsl
in
fimull
dec
rorb
sti
mov
ret
dec
pop
mov
push
cs
pop
jo
mov
push
push
push
scas
xor
or
mov
dec
cli
inc
sub
shll
insb
stos
fwait
pop
cli
lret
pop
and
dec
cs
mov
sub
sbb
fistl
lahf
roll
mov
repz
ret
icebp
mov
test
popf
das
mov
cld
lret
data16
add
or
cmp
cmp
loope
test
push
dec
pop
and
dec
push
imul
out
movsl
adc
jg
clc
cmpsl
aas
pop
movsb
ficoml
and
es
icebp
mov
mov
in
aad
jno
imul
jae
loop
mov
cmp
clc
or
test
jb
sub
mov
ret
cmp
loop
testb
or
mov
scas
loop
and
mov
sti
out
sub
fsubl
mov
fs
sbb
lcall
jo
pushf
xor
adc
or
cli
and
into
lock
add
pop
clc
js
cld
hlt
pop
fstpt
push
xor
inc
das
arpl
ret
jmp
lock
imul
divl
addr16
mov
scas
es
or
jmp
adcb
clc
dec
cmp
cs
sbb
jo
mov
in
jae
div
fwait
rcrb
lret
mov
mov
inc
cmp
test
dec
push
les
push
notb
sbb
xchg
xchg
lods
push
test
pop
jle
pushf
inc
fmul
imull
sti
adc
and
sbb
cmp
inc
sub
xor
jns
jne
ret
fcoms
xor
jle
je
adc
sub
push
jmp
cmp
mov
fs
xor
fcoml
xor
popa
xchg
ret
ja
and
jae
imul
pushf
test
sub
jns
ja
adcb
imul
push
cmp
mov
bound
leave
lods
mov
push
mov
mov
push
ficompl
dec
clc
add
popa
mov
cmp
mov
sti
mov
into
arpl
mov
in
repz
sti
cmp
stos
outsl
aad
add
bound
in
jge
fildll
jle
and
mov
mov
scas
jne
clc
pushf
cmp
pop
xor
shlb
mov
sub
add
lahf
scas
out
pop
jl
fwait
lods
repz
cmp
xor
xchg
sub
int
ret
lahf
adc
xchg
sub
sti
rclb
clc
jb
bound
test
into
add
mov
movsl
sub
insb
pop
sub
jno
fisubrs
xor
and
sub
in
insl
jae
jecxz
sub
adc
ljmp
addr16
cwtl
ficoms
sub
mov
bound
test
iret
das
dec
sub
rcl
add
dec
push
or
sub
inc
cmpsl
enter
sub
imul
pop
sub
push
je
adc
sub
mov
adc
sub
sbb
mov
fisubrl
mov
in
xchg
cmp
dec
hlt
pop
popf
mov
loop
nop
or
shl
loopne
add
fnstsw
sbb
push
or
mov
adc
sub
mov
imul
mov
aam
xor
adc
sub
fsts
jl
xor
sub
xor
mov
sbb
ret
jne
dec
mov
cld
and
pop
inc
pushf
pop
test
mov
sub
xchg
dec
addl
dec
cmp
sub
sub
and
cli
or
sub
bound
ffreep
jmp
add
repz
ja
lcall
fs
das
hlt
sub
outsb
mov
pop
pushf
sub
cld
xchg
stc
shrl
sub
ja
mov
outsl
push
dec
xchg
mov
add
inc
sub
aaa
sub
push
lahf
fmuls
aam
mov
lock
jb
mov
adc
sbb
outsl
jle
call
sub
pop
jb
dec
mov
inc
or
in
sti
fcomp
ds
and
mov
popa
jle
xlat
add
daa
imul
movsl
call
out
out
jns
in
inc
scas
lods
sarb
jge
ficomps
sub
jbe
xor
in
dec
lahf
pop
sbb
stos
andb
scas
cs
pop
fcomps
jne
das
ds
enter
xchg
xlat
int
enter
outsl
dec
icebp
or
inc
ret
cwtl
ret
test
or
das
sarl
mov
pop
or
inc
inc
xchg
mov
jnp
neg
cmp
imul
xchg
jo
or
xor
pop
shl
and
test
out
ficoml
push
jp
fs
ret
push
push
mov
xchg
rcrb
fnstcw
stos
xor
fsubs
cwtl
push
fsubl
loop
in
mov
ja
sbbb
sar
push
popa
mov
adc
leave
mov
clc
stc
testl
pop
insb
pop
jmp
sbb
popa
xchg
divl
add
jno
out
sbb
or
int
pop
js
jp
shlb
jp
mov
jecxz
dec
imul
rorb
cwtl
mov
pusha
stos
aas
add
icebp
inc
sbb
clc
dec
xor
lcall
mov
fists
lods
and
outsl
push
dec
push
out
hlt
arpl
in
aaa
shlb
cwtl
sahf
and
cltd
pop
add
ljmp
stos
lea
xchg
ficompl
pop
sbb
or
les
jecxz
xor
shll
dec
out
rcl
cwtl
inc
in
cmp
les
popf
imul
sbb
loopne
inc
inc
push
clc
xchg
pop
cs
push
imul
test
cmc
push
gs
lds
dec
mov
call
arpl
push
cwtl
loope
and
dec
mov
pop
push
jns
in
in
and
push
andl
js
pop
stc
imul
lahf
sub
popa
fdivs
aam
mov
add
stos
addr16
jno
clc
leave
cli
cmpsb
aad
dec
push
add
js
push
lds
mov
pop
xchg
or
fisubs
arpl
sub
jae
cs
das
dec
dec
jmp
mov
orb
negl
mov
mov
cvttps2pi
sub
sti
dec
insb
aaa
call
sarb
shr
inc
cmp
cld
sub
or
test
std
dec
ficomps
data16
inc
sbb
ja
cmp
mov
ret
pop
sub
mov
mov
icebp
call
sub
lcall
xchg
cs
call
pop
mov
orb
or
clc
or
push
enter
stos
fstpt
adc
ficompl
ds
mov
out
and
push
movsl
in
inc
jbe
test
pop
cmp
mov
repnz
pop
sbbb
inc
pop
loop
sub
sub
shrb
mov
or
sahf
sti
sbb
xor
cmp
sub
push
ficoml
fdivrs
repnz
pop
aas
mov
or
lret
jmp
push
rcr
loopne
jo
pop
sub
mov
cmp
push
clc
xor
out
sub
aad
or
insb
imul
mov
clc
loopne
stos
mov
mov
lea
jo
divb
out
sub
cmpps
xor
adc
les
jo
enter
cs
xchg
in
sbb
aad
jge
mov
fnstcw
fwait
sti
xchg
dec
movsl
mov
fbstp
in
jne
xchg
jle
dec
xor
sub
int
adc
and
mov
aad
flds
dec
mov
cmp
and
pusha
frstor
add
sbb
xchg
fdivs
arpl
clc
out
or
lcall
push
sub
fistpl
or
cmp
mov
lea
mov
and
repz
call
jl
mov
or
xor
pop
xchg
je
or
in
das
shll
enter
rorb
inc
push
repz
sub
insb
mov
lds
clc
mov
xor
rcll
mov
xor
adc
fdivrp
jmp
add
scas
mov
pop
jp
sub
repz
sbb
xchg
inc
or
cli
push
lret
pop
int
cmp
sbbb
fstps
ds
clc
cmpsl
jae
insl
shl
add
jnp
outsb
push
push
outsl
mov
or
test
lcall
aam
je
cmp
aad
mov
enter
add
cmp
out
sbb
sbb
xlat
push
jns
mov
out
negb
inc
outsb
mov
push
daa
dec
pop
lods
negb
jecxz
subps
clc
cmp
sub
inc
pop
push
fstps
clc
mov
loopne
cmp
pushf
pop
into
loopne
jo
cmp
xlat
ret
lods
fisttps
icebp
adc
dec
in
dec
adc
adc
sub
push
out
clc
xchg
test
pop
jmp
jns
ljmp
add
xor
imul
fwait
ss
xor
adc
sub
pop
xor
fwait
cmpsb
mov
xchg
pop
dec
testb
out
xchg
mov
xor
gs
imul
clc
or
sti
addr16
scas
push
fidivrs
in
jl
cmp
int
mov
enter
pop
cmp
imul
inc
xbegin
add
stos
pop
movsb
sbb
and
jb
loope
dec
pop
add
int
pop
xor
jne
mov
adc
pop
push
mov
flds
leave
fisttps
push
xor
jmp
lds
xor
ret
pop
inc
dec
and
jno
adc
inc
les
mov
mov
push
sub
inc
mov
pop
mov
cmp
in
fucomip
pop
ljmp
mov
push
add
cmp
jo
mov
mov
and
dec
repnz
jge
popa
data16
cmp
fisttpl
cmpsb
and
imul
jl
mov
imul
addr16
sbb
cs
int
test
and
mov
jnp
sbb
mov
loop
mov
call
push
imul
out
mov
dec
fcmovnbe
xor
pop
std
rcrl
inc
jecxz
mov
inc
sbb
push
ror
pusha
pop
xchg
add
int
orb
jo
add
xor
arpl
sub
sbb
push
mov
pop
xor
pop
repz
sbb
pushl
jmp
ljmp
test
add
inc
jge
stos
push
pop
rcr
sbb
xchg
inc
es
mov
add
fbld
inc
call
movsl
sti
ss
test
inc
xor
mov
test
inc
jmp
pop
push
pop
xor
jg
fwait
xlat
jne
imul
rolb
sub
add
cmp
bswap
xor
mov
inc
leave
clc
sbb
push
xchg
cmpsl
sbb
sti
sbb
out
jp
cmpsl
sbb
in
cmp
lret
sub
cmp
mov
in
xchg
pushf
fidivrl
sub
xchg
push
xor
mov
cmpb
ljmp
testl
movsl
sti
arpl
add
dec
shrb
clc
popf
rclb
pushf
out
mov
bound
mov
imul
nop
push
jo
and
dec
cwtl
mov
sub
aad
cmp
xchg
cli
xchg
and
sub
gs
shl
add
lods
jle
fildl
sub
insb
pop
in
adcb
into
sub
or
push
inc
or
dec
pop
jno
out
sbb
bound
test
jp
sub
es
dec
sub
mov
call
cmpsb
sub
dec
jl
cmp
xchg
les
xchg
sub
out
test
xchg
scas
adc
sub
movl
sub
sub
push
lea
sub
or
mov
cmp
add
arpl
dec
adc
push
out
clc
mov
stos
test
jmp
sbb
in
sub
pop
aaa
fstps
lods
dec
pop
fmuls
sub
mov
test
sub
adc
sub
jno
sub
int
iret
mov
cmpsl
or
sub
push
or
sarb
cmp
jmp
xchg
add
push
xchg
add
fdivrs
push
sub
fmulp
xchg
xor
lahf
cli
or
sub
jns
movsb
rorl
pop
mov
cmpsl
add
aas
jb
cmp
test
sub
xchg
xchg
add
addr16
cmp
mov
lock
pop
or
sub
fwait
cmp
jl
aaa
int
lods
fimull
js
or
sub
loopw
sub
xchg
pop
call
cmpsl
int
push
push
negl
mov
scas
cmpsb
sub
inc
aam
push
mov
sub
repz
pcmpgtb
push
cld
addr16
shr
xorb
pop
push
cmp
cmp
test
mov
pop
dec
lret
mov
fldcw
push
in
dec
and
jne
out
out
push
sub
mov
fwait
outsb
in
arpl
xchg
mov
int3
jmp
and
popf
es
test
filds
xor
cwtl
test
outsl
shrl
xchg
into
cld
inc
repnz
ljmp
xchg
jns
nop
pop
mov
mov
sub
cwtl
xor
test
cwtl
cmp
cmp
stos
stc
cmc
xchg
je
out
xor
int3
pop
cmp
stos
push
int
loopne
inc
jge
push
pop
xchg
subb
cmpsl
call
jne
ret
push
adc
fbld
fcoms
movsl
les
lahf
cld
out
adc
add
out
test
mov
int3
scas
scas
sub
movsl
shr
sbb
add
push
sub
pushaw
jmp
xchg
movsb
flds
mov
roll
jb
inc
test
int3
or
cs
inc
sub
insl
clc
push
add
popl
jne
jmp
repz
out
sub
imul
sub
stc
inc
xor
pop
jge
test
icebp
scas
mov
mov
or
fwait
sub
adc
stos
lods
sub
shrb
pop
data16
dec
cmp
and
jp
pop
aaa
push
add
sub
cmc
inc
repz
pop
fcomps
and
sub
stos
lret
sub
lcall
add
sbb
test
dec
mov
or
sub
stos
flds
or
xchg
jne
add
mov
xchg
fistl
jge
and
loopne
iret
sub
jo
mov
je
dec
push
insb
sub
mov
add
shrl
mov
inc
das
sub
jg
lahf
xchg
shlb
push
sub
pop
idivl
popa
mov
inc
sub
lahf
adc
mov
dec
lods
cs
cmpsl
pop
sub
imul
sub
clc
cmc
insl
sbb
sub
pop
notl
mov
mov
sub
mov
rorb
jns
cmp
stos
sbbl
add
jmp
fldt
and
fs
js
lahf
les
mov
lods
int
sub
cmp
adc
movsb
sbb
arpl
repnz
dec
cltd
insl
movsb
fidivrs
leave
or
xor
rclb
ret
add
popa
adc
and
lea
arpl
insb
in
pop
sub
cwtl
push
into
ret
mov
hlt
rorb
insb
xor
push
pop
add
out
fisubl
jne
sub
sub
sbb
xor
jae
fmull
jbe
divb
ds
leave
sub
cmp
inc
sub
iret
xchg
sub
cmp
jp
pop
jo
sub
jecxz
test
and
add
es
ret
adcl
movsl
adc
dec
mov
and
mov
sub
pop
pop
sarl
sub
pop
adc
stos
sub
pop
in
out
shlb
sbb
inc
jl
xchg
cmp
inc
in
test
aas
xchg
lods
sub
pop
adc
jmp
xchg
jecxz
or
sub
and
jb
and
inc
sub
jl
in
ret
mov
je
repz
mov
lret
add
cld
mov
adc
xor
push
dec
cmp
ss
aam
test
fstpl
dec
insl
push
pop
sub
cmpsb
mov
xor
cltd
call
fildll
and
or
cmp
sub
lret
and
inc
or
jo
add
push
popf
mov
mov
xchg
sti
cmp
lea
push
int
pop
imul
lods
sub
cli
mov
ret
imul
sub
std
movb
call
imul
repz
or
fnstsw
sahf
test
sub
add
mov
sbb
test
sbb
add
out
mov
imulb
mov
fildl
out
lods
ds
test
fisubl
ja
pop
and
sub
test
sub
ret
ret
decb
add
mov
shlb
xchg
add
xor
mov
aaa
sbb
add
inc
jp
cwtl
imul
lock
or
xor
mov
outsl
popa
adc
pop
aad
sub
loop
shrl
lock
and
sub
jbe
cmp
in
sub
jle
cmc
les
notl
call
sbb
mov
pushf
test
js
lcall
shrl
lret
popf
inc
imul
and
adc
xor
dec
push
outsb
sub
jp
cmp
add
pushf
cltd
and
leave
clc
xchg
das
hlt
sub
orl
ds
inc
inc
push
test
out
mov
fwait
fs
push
or
xor
sub
enter
xor
inc
jmp
sub
pop
fcmovne
add
inc
mov
mov
mov
movsb
mov
pop
cmpsb
sub
xchg
aas
and
push
mov
ds
mov
sbb
and
sbb
pminsw
repz
lock
hlt
sub
mov
sub
inc
enter
jl
jge
leave
or
das
sub
test
lds
jae
cwtl
cmpsl
das
mov
push
sub
xchg
jo
aaa
jmp
jge
cmp
sub
pop
inc
push
adc
sar
cmp
and
and
sbbb
adc
lods
jno
sub
mov
or
sarb
xor
in
enter
cmp
mov
mov
sub
adc
push
push
push
fwait
shrl
push
or
repnz
push
jge
dec
enter
pop
fsts
mov
repnz
push
adc
jl
stos
xor
sub
rorl
jbe
stc
adc
mov
mov
mulb
pop
lds
jp
fnsave
xchg
stos
jg
outsl
xlat
jmp
fidivl
pop
dec
test
sti
insl
mov
add
push
mov
add
or
cmp
or
sub
mov
cmpsb
sti
iret
adc
das
mov
pop
ds
sub
or
or
std
test
scas
mov
je
pop
or
dec
in
loopne
int
adc
mov
data16
xchg
rorl
int
sub
fisubrl
and
scas
cmp
dec
dec
int3
movl
cli
ror
repnz
pusha
daa
iret
psrad
sti
les
or
js
call
adc
cmp
lcall
fisttpll
cli
jmp
mov
jae
clc
mov
jo
mov
sti
sahf
push
sub
and
ss
inc
lds
pop
cli
mov
repnz
mov
xor
fmul
dec
rcrl
lret
outsb
mov
in
jmp
sti
lcall
cmp
push
pop
in
cs
bound
xchg
sub
push
sub
or
mov
dec
pop
in
dec
mov
jmp
cld
add
movsb
ds
mov
rclb
sub
dec
pop
cli
mov
xchg
mov
mov
inc
addr16
jmp
or
cmpsl
nop
dec
mov
sub
pop
addr16
dec
mov
adc
gs
aaa
out
mov
dec
and
jecxz
jle
imul
pop
sti
test
adc
test
or
mov
jbe
fisubs
lret
adc
or
sub
fsubrs
lods
push
stos
repnz
aam
pop
mov
rcrl
and
pop
shrl
mov
or
addb
test
sbb
ljmp
cmp
cltd
sub
sub
jmp
imul
push
sub
add
mov
outsl
sub
dec
xchg
jecxz
mov
mov
jbe
stc
in
add
daa
sub
outsb
fstl
push
xchg
xor
mulb
fwait
lods
leave
jnp
mov
or
sub
sbb
dec
dec
leave
cmc
mov
scas
test
clc
inc
insb
sub
sub
int3
fldenv
adc
cld
mov
and
sub
xchg
fisubl
outsb
jno
mov
jae
aaa
xor
imul
mov
fistl
mov
xchg
pavgw
adc
pop
push
cmp
mov
dec
add
call
or
mov
aaa
mov
sub
dec
or
sub
imul
pop
push
loop
xor
call
aad
popa
data16
cmp
xchg
popf
sub
or
xor
pop
pop
ret
sbb
test
and
cmp
out
inc
sub
aaa
shufps
mov
or
jbe
inc
or
out
sub
and
decl
pop
or
imul
subb
jecxz
push
mov
or
jns
sbb
ja
add
ds
jg
cmp
test
and
or
sbb
mov
and
fmuls
sbb
mov
sub
sub
repnz
cld
ljmp
out
mov
call
pusha
mov
add
mov
sbb
sti
test
cld
xlat
lods
and
sub
cmp
sub
ja
sub
xor
cmp
dec
mov
mov
sub
negb
sub
jg
gs
push
push
sub
pop
sbb
pusha
shll
dec
ret
sub
adc
and
and
mov
and
lret
call
jecxz
mov
ret
sub
pop
rcrl
pop
fwait
sub
daa
dec
roll
leave
cmp
sbb
sub
sti
frstor
sahf
js
sub
dec
aad
loope
mov
rolb
cmc
and
outsb
and
xchg
lock
les
sub
lret
or
push
sub
xchg
cmc
fbld
out
sub
pop
aam
unpcklps
xor
xchg
sub
dec
inc
mov
pusha
dec
icebp
mov
xor
push
inc
sub
mov
rol
sub
jae
bound
stos
fstpl
jnp
sub
rolb
hlt
jge
testb
mov
fdiv
ds
inc
movsl
xor
data16
sub
cs
sar
push
push
insb
fwait
xchg
int
js
or
lahf
mov
ds
pop
lcall
add
cld
out
ss
jg
les
mov
push
sub
cmp
jmp
popf
test
lods
test
in
sub
ret
into
idivl
sub
aad
pop
sub
loopne
cmpsb
es
imul
lcall
in
or
mov
sub
pushf
inc
fmull
mov
push
fs
mov
adc
or
sahf
mov
mov
fidivrl
xor
mov
mov
cmpsl
arpl
fsubs
mov
movsl
xchg
and
and
xchg
cltd
cmpsb
mov
push
pop
sahf
or
bound
mov
sub
cmp
rorl
pop
cmpb
jbe
jno
and
sub
mov
mov
clc
sub
bnd
sub
jmp
sbb
push
sub
or
iret
mov
push
ds
and
fimuls
xchg
pop
arpl
imul
sub
dec
mov
mov
jns
cli
xchg
lock
cwtl
shrl
dec
push
mov
sbb
pop
sub
pcmpgtd
push
out
or
aam
stos
jbe
xor
sub
insb
outsl
sbb
hlt
rolb
pop
icebp
enter
inc
shlb
dec
stos
pop
sbb
popa
adc
add
outsb
ret
int
xlat
cmp
dec
rorb
sub
jb
pushl
cs
push
fsubs
sub
stos
loope
and
sub
jp
or
xchg
mov
add
cmc
push
shlb
aaa
push
xchg
sub
fisubrl
subl
fwait
call
ljmp
or
sub
cwtl
adc
pop
insb
test
sti
shl
movsl
push
movsl
sub
ds
fdivrp
lds
mov
add
pop
push
pop
out
pop
mov
lock
outsb
stos
jae
or
sahf
nop
push
hlt
adc
mov
mov
pop
adc
pop
enter
ds
iret
push
mov
movsl
sub
sub
adc
cmp
xor
cs
jae
aad
sub
dec
stos
inc
dec
lock
push
xor
enter
pop
sub
rclb
jo
push
ret
cmpb
lahf
pop
lea
popa
sarb
mov
sub
cmpsb
dec
jnp
test
pop
lret
mov
mov
push
stos
dec
adc
jp
mov
mov
les
in
inc
addr16
inc
js
sub
fiadds
mov
mov
sub
dec
js
sub
mov
and
xchg
popa
jne
ja
sbb
aaa
cs
pop
outsb
enter
imul
mov
js
mov
xchg
sub
dec
pushf
push
in
imul
fisubl
inc
outsb
and
dec
or
sub
into
arpl
clc
lcall
pop
rcl
sbb
push
daa
xchg
sub
xchg
negb
lret
call
ds
call
pop
or
xor
inc
clc
mov
cmpsl
cmpsb
jmp
or
adc
mov
rorl
sub
mov
sub
loopne
daa
sub
orl
push
pop
xchg
les
xchg
and
lahf
mov
into
leave
xor
mov
sbb
stos
sti
notl
sub
add
cs
lcall
cltd
divb
lea
sbb
dec
sbb
sbb
sub
in
mov
sub
das
jno
loop
mov
xchg
movsb
into
sub
cmc
lods
and
dec
mov
push
testb
add
test
sub
mov
stc
ds
jae
xor
jno
jns
fisttpll
add
mov
ror
out
cmp
cmp
mov
dec
enter
addb
in
call
loope
loop
xchg
xchg
stos
andb
sub
ljmp
daa
and
in
inc
pop
sti
hlt
xlat
fistl
sub
lods
xchg
sub
cmp
jp
pop
imul
popa
js
cmp
push
adc
subl
mov
in
ds
cli
mov
add
jnp
repz
rorb
les
loop
and
cwtl
dec
je
ss
fildll
sub
jae
dec
sub
pop
xchg
lea
imul
or
sti
xor
jae
sbb
sub
enter
mov
sub
stc
sub
jmp
push
jne
mov
mov
inc
clc
and
sbb
or
enter
sub
or
add
mov
cmp
mov
pusha
ds
lods
jno
dec
mov
mov
xchg
les
cmc
push
inc
stos
mov
sahf
sub
sub
inc
test
leave
les
xchg
jbe
sub
dec
dec
adc
push
enter
pop
in
outsl
mov
inc
jle
sti
mov
cmc
sub
gs
mov
mov
mov
js
dec
pop
xor
rcrl
shrb
into
or
pop
sub
push
add
test
sub
into
in
lret
xlat
or
flds
cltd
lock
inc
and
scas
mov
cmp
xchg
icebp
inc
adc
mov
clc
pop
leave
test
repz
testl
std
pop
fwait
push
mov
call
scas
test
sarl
lret
lcall
lds
inc
jo
inc
xchg
pop
call
jo
mov
push
sub
push
cmpsb
dec
stos
pop
mov
scas
cltd
mov
sbb
xchg
sti
adc
dec
mov
pop
xor
and
scas
in
mov
les
xor
ret
push
pop
cmp
or
adc
mov
jl
push
bound
or
cmp
icebp
cmpsb
xor
xchg
mov
mov
push
xchg
into
cmp
ret
fwait
insb
scas
out
mov
or
cwtl
xor
jb
mov
push
sub
mov
mov
and
push
adc
jns
int3
and
shl
or
clc
repz
sbb
ret
daa
push
push
jne
mov
sub
mov
lods
jb
jmp
jae
and
arpl
lret
test
mov
jmp
jne
adc
xor
je
fwait
mov
jne
clc
add
sub
sub
aad
jae
jp
pushf
or
cmp
and
and
sub
inc
mov
or
movsl
icebp
popa
lock
sbbb
cli
mov
out
xchg
push
test
cwtl
mov
xor
dec
mov
nop
sbb
popf
xchg
test
cmc
scas
ljmp
in
or
dec
xchg
dec
lds
xchg
add
cmp
ljmp
push
jns
jg
dec
jmp
jae
test
inc
or
jmp
inc
jo
cmp
xchg
mov
push
jae
pop
cltd
jns
cmpsl
inc
cmp
lods
jp
fiadds
push
pop
add
data16
cmp
cmpsl
int
and
inc
cmp
rcr
sti
addr16
lcall
add
in
add
sbb
daa
mov
daa
pop
lcall
int
cld
or
xchg
push
jp
or
frstor
popa
shrl
adc
nop
mov
xlat
jae
rolb
mov
push
cmp
adc
mov
cli
xchg
out
inc
mov
push
stc
cmp
mov
fbld
cwtl
adc
and
sub
mov
mov
imull
subl
pop
imul
cmp
sub
or
lock
mov
xor
test
push
sti
dec
xchg
incb
ret
jne
shrb
pop
and
add
ds
xchg
mov
mov
call
imul
loop
jl
rcrb
das
xor
stc
loopne,pt
push
adc
or
mov
arpl
cli
dec
add
pop
fwait
cmpsl
xchg
dec
and
sub
pop
ljmp
andl
leave
sub
add
outsl
inc
sub
mov
xor
lock
mov
pusha
xchg
or
shrl
inc
call
clc
adc
sub
cmpsl
pop
in
fisubrl
outsl
push
cmp
and
shl
repnz
mov
insb
imulb
cmp
lea
jae
mov
jmp
and
pop
xchg
mov
cmp
or
pop
sub
mov
sbb
mov
ret
pushf
cmp
xlat
jns
sub
sub
jae
adc
stc
adc
stos
mov
mov
sub
push
xchg
pop
mov
xchg
add
sub
outsl
cmp
mov
lahf
adc
aas
test
icebp
ret
arpl
sub
xor
filds
leave
sub
out
sarb
xchg
jb
dec
cmpsb
pop
or
jg
mov
fwait
lods
mov
mov
popa
xchg
loope
mov
pop
lea
clc
mov
pop
fdivrs
sub
repnz
mov
std
adc
lcall
fildl
test
jo
jge
cmpsl
sub
mov
sarl
or
enter
cli
push
out
xchg
cmp
jne
pop
int3
xor
sub
std
movsb
arpl
pop
sub
jne
xchg
inc
ret
les
ficomps
push
or
mov
adc
adc
out
jecxz
sub
cmc
add
xlat
lds
iret
lahf
jne
lcall
adc
sub
clc
pop
mov
sub
pop
and
loopne
jmp
enter
pop
dec
mov
sub
in
jg
in
mov
add
jecxz
imul
out
into
sub
or
sbb
sbb
in
mov
sub
stc
gs
push
cmp
lods
dec
shrb
xchg
or
std
push
test
jge
sub
out
int3
jmp
in
inc
movsb
pop
sbb
psubq
sub
lods
loop
sub
xchg
fstps
inc
jge
js
mov
test
lds
xor
sub
or
ret
push
mov
dec
test
mov
xor
adc
adcb
leave
fcmovnu
lods
cmp
inc
sub
sti
inc
sub
rorb
mov
and
jne
sbb
sub
dec
sarb
sub
jl
call
imul
jne
repz
sbbb
sahf
mov
add
or
aam
sbb
mov
out
mov
rcll
pusha
or
cmp
jmp
or
add
pop
in
mov
repnz
cwtl
out
or
sub
xchg
push
popa
movsb
mov
in
les
daa
sub
dec
xor
push
popa
outsl
adc
xor
shrb
insl
mov
push
sub
mov
test
mov
loope
idivb
popa
inc
and
sub
fwait
stos
aas
sbb
jge
cli
adc
outsb
sbb
mov
mov
mov
add
pop
push
sub
jae
aas
aad
std
insb
sub
mov
shr
or
jns
cmp
sub
or
sub
xor
pop
fsubrs
addr16
mov
pusha
mov
and
cmpsb
movsl
mov
into
push
cmc
push
push
repz
add
outsl
and
and
test
dec
cld
arpl
jl
mov
and
lock
push
pushf
sub
or
sub
cmp
mov
sub
stos
lods
loope
data16
dec
sbb
iret
inc
call
sub
mov
jl
cmpsl
stos
pop
hlt
jb
add
xlat
sub
cmpsb
sbb
lahf
sbb
sub
int3
inc
xor
add
cmp
mov
sub
fldenv
adc
popa
enter
mov
loop
sub
jl
dec
and
jnp
xchg
insl
sub
lret
fs
cmpsl
mov
test
movsl
xchg
sbb
ror
mov
dec
cmp
mov
or
sti
test
sub
lret
sub
shlb
cli
inc
aas
test
mov
insl
aam
call
push
mov
push
imul
icebp
jnp
xchg
sub
sub
shlb
pop
mov
push
shrl
push
std
fists
rcr
xchg
test
add
repnz
mov
sub
imull
sub
movsl
mov
sub
insl
fisubrs
push
inc
cmp
xor
cli
or
imul
and
lea
mov
push
scas
je
sub
adc
pusha
aaa
jge
and
lret
ret
int
sub
mov
sub
test
orb
mov
ftst
notb
fsubrs
cmp
lret
xchg
push
decb
rcrl
sub
sti
cmp
mov
iret
jl
dec
test
cmpsb
sbbb
cmp
jmp
inc
push
mov
shrl
mov
mov
ja
pop
loopne
jecxz
stos
or
sub
mov
dec
and
aad
adc
mov
sbb
inc
mov
sub
xchg
cmpsb
loop
pop
js
mov
repz
les
mov
rcr
lcall
outsl
stos
cli
aam
push
xor
inc
fldt
mov
inc
pusha
or
lret
and
mov
addr16
in
filds
cld
or
imul
test
push
popf
mov
jne
shlb
mov
mov
push
or
loope,pn
shrl
adc
out
in
bound
sub
pushl
mov
out
stos
cs
sub
out
xchg
push
fadd
js
sub
sub
adc
jmp
gs
movb
push
xor
sub
dec
push
mov
enter
call
add
pop
sub
xchg
push
adc
mov
dec
std
mov
cmp
sub
outsb
mov
push
das
mulb
fadd
insb
imul
push
cmp
sbb
lret
stos
mov
subb
jl
xchg
test
mov
fisubs
pop
repnz
out
jnp
dec
sub
test
and
push
pop
sti
pop
push
xchg
add
pop
in
cmp
jbe
sahf
popa
sub
imulb
loope
mov
xchg
shrl
clc
mov
cmp
cmp
push
mov
push
add
and
jl
ret
mov
xor
jbe
mov
sub
lret
push
mov
sti
mov
ret
out
pushf
mov
sub
fdivl
and
aas
add
sub
mov
or
xor
mov
mov
and
jno
jbe
push
push
cmp
adc
add
test
mov
test
leave
sbb
int
or
hlt
mov
je
outsb
pop
mov
sub
push
inc
and
sbb
or
jle
push
adc
pusha
sub
fimuls
test
out
xchg
or
mov
add
andb
xor
loopne
jae
mov
fimull
mov
sub
cmp
sub
inc
cmp
cmp
mov
les
lahf
fistl
scas
ret
lds
iret
push
add
test
mov
nop
sub
inc
fsubrs
xor
mov
mov
inc
push
jbe
cli
adc
and
inc
adc
sub
popf
sbb
lods
push
push
sbb
sbb
out
lret
sub
lods
adc
inc
fsub
and
sub
shlb
xlat
adc
sub
push
andl
dec
ds
imul
jp
sub
cmc
inc
xor
pop
icebp
scas
push
lret
sti
rorb
lahf
sbb
pop
sub
aam
sub
adc
mov
and
jb
xor
leave
or
outsb
lds
pushf
lahf
sub
add
subl
pop
pop
ficoms
dec
jnp
popa
sub
hlt
push
cld
lds
sub
adc
adc
aas
pop
iret
xor
shlb
sub
cmp
repz
or
stos
lcall
jmp
mov
test
mov
add
dec
mov
sbbb
mov
js
mov
mov
std
enter
sbb
xor
inc
fnstenv
aaa
cmp
out
dec
xchg
mov
or
test
jns
aam
clc
popa
sarb
popf
cli
xchg
sbb
lret
adc
dec
or
std
xchg
sbb
testl
imul
aam
test
sti
mov
clc
add
xor
mov
and
cwtl
cmp
cmp
sarb
xchg
filds
sub
sar
push
mov
ja
lret
xchg
or
int
sub
mov
in
mov
mov
sub
jmp
or
mov
jg
xor
clc
negl
lcall
mov
inc
cli
popa
daa
loopne
cmpsb
cwtl
scas
jecxz
cld
scas
sbb
int3
jae
mov
test
cli
imull
pop
cmp
clc
lcall
in
and
xchg
scas
add
jns
mov
dec
cmc
jns
dec
push
ja
hlt
mov
jecxz
or
and
sbb
lcall
rorb
sub
sti
cmc
pop
mov
aad
sub
loop
mov
test
fs
jno
mov
jns
or
movl
cltd
push
loop
adc
push
mov
lret
fdivr
cs
pop
push
fists
add
gs
cmp
je
sub
sub
or
js
push
or
push
mov
cli
mov
ljmp
or
decl
or
xchg
repz
mov
bound
leave
sub
jmp
xor
mov
xchg
ss
mov
push
icebp
inc
lret
xor
cltd
jo
cmp
push
mov
insb
les
push
fsubrs
jnp
dec
xor
jb
lds
xlat
xchg
test
shll
or
dec
cmpsb
shll
sbb
xchg
imul
add
mov
push
mov
fprem1
clc
insl
inc
aad
and
addr16
lds
mov
mov
or
sub
mov
xor
mov
mov
mov
int3
inc
scas
adc
mov
jo
ret
mov
dec
fisubrs
jmp
jo,pn
cmp
or
iret
inc
das
add
fldt
test
call
jo
pop
imul
lret
xor
inc
mov
pop
xchg
shrb
dec
push
out
sub
add
lret
les
gs
jmp
daa
lods
jns
sbbl
lods
imul
push
shll
lea
call
stos
sbb
push
arpl
add
mov
dec
stos
aam
inc
lretw
in
hlt
jb
test
sti
jge
sbb
shrl
dec
mov
lods
cmpsb
inc
dec
mov
int3
xor
mov
push
adc
ja
clc
leave
hlt
sbb
sbb
dec
jge
js
pop
dec
xchg
pop
mov
jmp
pop
dec
sti
push
stc
mov
popa
clc
sub
add
test
fwait
pop
xchg
add
adc
gs
lret
aad
mov
adc
stos
or
cld
jo
sub
sbb
inc
aad
mov
mov
sbb
mov
sub
stos
sti
xchg
mov
dec
cmp
push
adc
sub
loopne
ljmp
stos
sbb
push
mov
dec
push
or
cmp
mov
dec
call
mov
lcall
sub
cmpsl
movsb
inc
pop
jnp
sar
mov
inc
test
mov
mov
sbb
movsl
mov
test
les
jmp
cmpb
rcll
ficoms
loop
js
es
pop
pop
sbb
arpl
sbb
mov
arpl
aaa
fiaddl
movsb
outsl
pusha
lahf
or
push
sbb
cmpl
dec
ds
push
push
imul
daa
or
roll
add
and
arpl
ret
imul
xor
sbb
fs
xor
jbe
sub
xchg
mov
sbbb
inc
ret
cmp
arpl
add
sub
mov
fidivl
dec
add
sbb
xchg
es
or
into
dec
fucom
pop
mov
dec
sub
mov
mov
mov
stc
jbe
imul
push
add
data16
xor
mov
dec
add
imul
ja
adc
dec
xchg
or
lock
sub
jno
xor
cmp
adc
leave
cmpsb
lahf
data16
add
xor
sub
jbe
mov
mov
pusha
mov
xor
stc
mov
adc
enter
adc
fnsave
or
call
jne
inc
cmp
cmpsl
push
sub
pop
xchg
enter
lods
dec
add
cs
mov
fs
ljmp
ja
into
cmpsb
imul
inc
sub
jge
icebp
dec
cmc
je
sub
pop
push
out
adc
loope
das
das
mov
add
lret
imul
movsb
lret
jl
daa
mov
sub
outsl
and
or
adc
sub
in
sub
push
loop
dec
mov
popf
jb,pn
test
xchg
xlat
loopne
push
sub
notl
leave
inc
adc
pop
dec
ret
subl
in
or
imul
xchg
test
int
sub
bound
mov
jmp
int3
test
jecxz
dec
add
icebp
pushf
inc
insl
inc
sub
jbe
xor
adc
scas
cmp
enter
sub
lahf
push
xlat
or
xchg
call
dec
movsl
mov
cmp
pop
loope
or
addr16
lock
js
ja
xor
sub
cmp
mov
mov
fcoms
out
aaa
and
testl
sub
sub
and
mov
fsubrl
repnz
sub
loopne
roll
pop
cwtl
jmp
mov
shlb
jecxz
sub
xchg
mov
add
and
push
push
add
cmp
sub
in
js
sub
xor
movsl
dec
and
dec
push
mov
sub
cltd
mov
xor
add
mov
insb
xchg
pop
mov
test
push
or
dec
cmp
loop
mov
pop
mov
sbb
sub
push
jmp
sub
in
pop
in
sub
mov
loop
out
pop
fsubrs
sub
out
popf
or
sti
mov
test
test
cmp
fmull
push
dec
cmp
sub
jecxz
add
int
sub
dec
jae
xor
subl
sub
push
imul
or
mov
jge
movb
mov
mov
sbb
call
into
inc
jmp
aad
sub
sbb
int
mov
adc
daa
aam
iret
sub
mov
inc
inc
cmp
js
push
or
movq
dec
fwait
out
jmp
das
jecxz
inc
ds
mov
fbld
and
jp
leave
dec
adcl
cmpsb
jmp
jg
sub
scas
cmp
sub
cmp
adc
adc
fwait
sub
pusha
push
popf
rsqrtps
cmpsl
xor
call
xor
xchg
jmp
pop
jmp
inc
fwait
adc
add
iret
and
arpl
sbb
movsl
jmp
int3
es
pop
adc
mov
pop
test
cmp
sub
nop
sub
push
push
fidivrl
test
test
mov
hlt
mov
dec
inc
cmp
push
mov
lahf
and
cmpb
sbb
cld
stc
add
sub
sub
sub
outsl
fmulp
push
mov
aas
xlat
std
mov
sbb
mov
lea
sub
fs
xchg
xchg
outsl
call
pop
and
sub
aaa
stc
cmp
fcmovnu
xchg
sub
adc
mov
aad
ss
imul
stos
dec
popf
aas
adc
repz
add
mov
sub
shl
aam
not
dec
mov
mov
sub
rsm
sub
inc
dec
dec
loopne
adcb
mov
das
ja
lods
push
cmpsl
enter
loope
data16
adc
lea
out
inc
imul
imul
sub
xchg
sbb
mov
xor
repnz
fwait
mov
cmp
xor
lods
sbb
inc
adc
idiv
pop
dec
aam
test
jmp
or
jne
xor
pop
sub
jp
jmp
rolb
cmp
cli
sbb
into
sub
jg
xchg
stos
mov
pop
bnd
clc
int3
or
repz
jecxz
jo
sti
jnp
mov
push
les
mov
cli
mov
aaa
scas
cwtl
shl
jnp
ljmp
loope
test
push
das
jg
sub
clc
cmc
out
rolb
aam
ret
loope
ja
and
pop
test
cld
push
mov
push
mov
jmp
cwtl
scas
popf
push
lret
cmp
enter
sar
in
jne
cmc
ret
dec
jnp
dec
loope
rorb
into
popa
cli
pop
ja
dec
pop
fidivs
mov
adc
daa
push
sub
stos
lea
add
pushf
stos
xlat
inc
sbb
mov
cmp
fucomip
clc
bound
into
push
cli
mov
int
imul
pop
push
fistl
sub
and
dec
cwtl
add
and
rol
cli
push
jbe
pop
adc
push
je
dec
icebp
cmp
xchg
cmpsb
pop
push
cli
xchg
fwait
testl
and
or
mov
push
sub
ss
jmp
mov
iret
leave
adc
clc
ret
dec
or
cmp
ds
repnz
js
pop
mov
bnd
cmp
popa
imul
cmp
sub
cli
popa
loope
mov
pop
divl
push
addr16
mov
sahf
dec
lock
fs
movsb
or
mov
dec
insl
out
push
lret
mov
push
and
aad
aas
cmp
aam
cmp
stc
icebp
sbb
or
loopne
std
mov
fisttpl
dec
sti
loope
lret
sbb
inc
shrb
cld
jp
push
jae
ret
sbb
jo
sub
jp
xchg
cli
jns
mov
sbb
adc
test
clc
dec
jmp
imul
jp
sub
leave
ds
add
fwait
gs
rcl
mov
cltd
clc
sti
sbb
cli
in
xor
imul
fimull
int3
out
clc
or
sub
aaa
negl
mov
pop
adc
jg
mov
dec
cmp
jns
loope
adc
sti
loopne
or
sub
fs
pop
clc
and
scas
mov
xchg
xchg
lods
testl
test
pop
arpl
loop
sub
or
inc
pop
outsb
cwtl
data16
jle
ret
inc
in
jb
cmpsl
mov
add
push
js
stc
inc
std
lret
ret
ret
stos
sti
sti
mov
or
fidivrl
iret
rorl
fnstenv
jecxz
cmpsl
les
repnz
cwtl
out
shlb
out
stos
scas
les
clc
cli
leave
hlt
xor
sarb
mov
stos
push
jns
aaa
jmp
fs
dec
testl
imul
clc
out
clc
outsl
push
jns
inc
out
fnstcw
cmp
xchg
push
aaa
push
sub
push
fisubs
sti
cwtl
int
out
xor
imul
xor
push
cli
pusha
aaa
sti
leave
int
loope
loop
les
lret
mov
xchg
lret
mov
pop
mov
mov
mov
adc
jge
add
adc
lret
and
inc
cmp
inc
jp
aas
ds
pusha
inc
sbb
in
jmp
lods
mov
daa
and
subl
test
mov
push
sub
mov
push
cs
xor
adc
xchg
in
dec
testl
clc
mov
rcrl
call
int
mov
sbb
xchg
jp
jmp
in
popl
push
std
rorb
flds
shll
inc
fidivl
test
cmp
out
xor
sbb
dec
xchg
sub
test
add
popf
sub
dec
jmp
into
jnp
shlb
mov
bound
dec
pop
mov
in
cmpsl
mov
sub
cmp
adc
sbb
andl
stc
shr
xchg
mov
pop
xor
lret
shll
mov
imul
ret
cli
and
stc
lds
pop
jb
xchg
mov
fstpl
fwait
push
mov
in
test
sub
cmp
shlb
out
mov
imul
pop
fadd
push
clc
mov
out
dec
or
pop
cli
lods
or
lds
mov
bound
push
adc
les
jp
push
scas
test
sti
mov
sub
sub
pop
jo
sbb
or
adc
fisubrs
ror
push
sbb
jo
dec
inc
ficomps
aaa
adc
pop
clc
jae
inc
xchg
insb
sub
fs
sub
outsb
aam
outsl
imull
dec
fidivrs
popf
lds
jb
xchg
mov
xchg
stos
test
das
fistpll
inc
add
mov
ret
inc
out
fldenv
clc
jl
and
jns
push
add
add
cmp
insb
jmp
shlb
adc
cwtl
fsubs
sbb
jo
cwtl
lock
push
sub
ss
mov
sub
aad
imul
push
test
mov
xorl
cld
inc
mov
sub
lea
sub
cmpsb
mov
cld
add
dec
pop
mov
rol
loopne
sub
les
or
ret
cld
and
popl
mov
jmp
adc
xchg
fsubrs
pop
mov
push
xor
ret
dec
scas
inc
stos
adc
xor
adc
sahf
mov
sbb
out
and
rol
and
sub
pop
mov
and
popf
xchg
inc
shrd
rcrl
pop
out
mov
mov
sub
lret
sbbl
fst
int
sub
push
dec
ret
inc
ds
xchg
push
pop
loope
cmpsl
cmpsb
xlat
popf
int
pop
sub
shll
cli
sub
fistps
cmp
and
fwait
xor
cmp
adc
add
adc
fwait
je
sub
and
test
sahf
pop
aas
js
rcl
push
inc
push
je
aad
cwtl
idivb
sub
dec
jbe
scas
cmpsb
icebp
sub
sahf
lret
push
xor
jno
lcall
outsl
sub
jp
cmp
scas
push
pop
ds
push
pop
std
enter
fisubrl
xor
push
mov
push
sbb
or
repnz
jge
js
stos
data16
std
daa
pop
sub
shrl
add
jno
cmp
mov
or
cwtl
out
push
ds
lods
enter
adc
call
xor
les
pop
cmp
mov
faddp
jmp
sub
cmp
icebp
out
outsl
shll
stos
cs
into
out
enter
jbe
inc
adc
or
incb
fsubl
mov
sbbl
dec
aas
mov
das
cmp
dec
push
rcrl
in
push
and
fwait
cmp
jae
push
push
clc
sbb
xlat
shl
dec
sub
mov
cmp
scas
cmpsl
and
sub
mov
aaa
addr16
sub
sarb
jge
stos
in
loop
mov
ljmp
mov
sbb
movaps
mov
repnz
add
out
pop
aaa
push
mov
pop
cmp
mov
push
cmp
lret
movsl
out
sub
sbb
sbb
ds
pop
lods
xlat
aas
jp
xorl
mov
sub
push
or
sub
dec
inc
xchg
sub
xor
push
mov
sub
repz
je
jns
ja
push
and
xor
out
test
mov
loopne
cwtl
mov
in
mov
int
data16
jno
xchg
out
fwait
add
sub
mov
pop
and
mov
dec
test
subl
sbb
imul
sub
mov
cwtl
movsb
sub
stos
hlt
or
sub
jo
lret
sub
pop
in
outsl
inc
xor
sbb
lahf
inc
insb
adc
mov
and
inc
ret
sub
mov
inc
jge
xchg
jp
cmc
mov
negb
push
test
mov
adc
call
hlt
sub
add
cli
ret
clc
pop
sub
mov
test
push
jo
push
xchg
dec
adc
sub
cs
jne
push
cmc
sub
add
es
sub
mov
mov
lea
push
sub
jbe
in
leave
shrl
push
mov
xchg
sahf
gs
shrl
mov
pop
add
sub
mov
sub
das
jbe
inc
into
dec
ss
roll
xchg
cmc
add
frstor
xchg
cli
inc
in
dec
push
sub
xlat
add
add
sbb
jae
push
ret
clc
jnp
jbe
xchg
rcrb
push
adc
out
sub
sub
xchg
int3
sub
lahf
out
mov
shl
shrl
fdivr
sub
inc
push
and
push
pop
popa
and
lret
sub
and
add
and
sbb
sub
das
adcb
fidivrl
jae
ret
and
stos
dec
push
and
and
mov
add
sub
addr16
andl
loope
sub
pop
push
inc
mov
out
sbb
hlt
mov
cmp
inc
mov
sbb
ret
xchg
es
dec
push
sub
test
fisubrl
lret
push
sbb
cmp
scas
pop
jmp
in
repnz
lea
and
mov
pop
mov
iret
jns
insl
leave
dec
subl
sub
cmp
and
push
push
lcall
outsl
pop
mov
sub
mov
call
out
sub
mov
xchg
xlat
loopne
imul
gs
sub
arpl
fstpt
sub
and
mov
mov
sbb
bound
jg
pop
cltd
jge
ja
clc
cwtl
pop
mov
lcall
mov
mov
push
cmp
addb
push
dec
imul
push
ja
dec
js
sahf
cmc
jmp
call
sub
iret
mov
ret
inc
inc
insl
or
mov
ljmp
mov
mov
nop
adc
or
mov
mov
sub
inc
xor
mov
dec
adc
cmp
popa
int3
sub
fistl
push
mov
lret
clc
pop
das
pop
xchg
add
jle
sub
pop
lahf
xorl
lcall
sub
pop
inc
stc
lret
mov
add
jecxz
jae
jb
ljmp
or
sbb
insl
pop
xor
sub
xor
shrb
pop
fdivrs
mov
sub
fstps
push
imul
enter
dec
int
imul
call
pop
pop
pop
das
out
loope
sub
into
cwtl
les
add
dec
mov
mov
sub
and
movsb
cmp
nop
out
sub
pop
sbb
outsl
adcl
jno
mov
testb
sti
sub
pop
sub
add
icebp
pop
addr16
jns
push
aas
in
xchg
cltd
sub
push
xchg
orb
jle
loope
dec
add
jecxz
sub
mov
jns
sub
ja
repnz
loop,pn
push
repz
sub
out
sub
jl
hlt
fiaddl
mov
inc
sahf
incl
js
sub
xchg
aas
cmp
mov
ret
js
jbe
add
jl
jb
pop
jg
hlt
add
sub
lock
fidivl
push
cmp
sub
sub
xor
xlat
les
or
dec
xlat
int3
or
lds
leave
mov
imul
sub
pop
mov
ds
lds
fnsave
jg
push
jo
in
or
scas
divl
call
sbb
xchg
push
js
add
mov
mov
je
mov
and
dec
inc
lea
sub
mov
push
xchg
movsl
push
push
or
sub
xchg
mulb
ja
adc
pop
out
repz
jmp
es
sbb
loop
or
bound
jae
pop
cs
cmp
fistl
shrb
mov
sub
loop
cmp
add
inc
jmp
sarb
jns
lea
imul
fidivrl
cmp
data16
inc
mov
cmpsl
sub
or
cmp
jns
mov
and
repz
in
icebp
cmp
out
test
xor
jl
add
daa
movsb
inc
loope
rcrb
stc
ss
xor
test
add
leave
adc
pushf
pop
fldcw
mov
mov
dec
jmp
and
icebp
push
loop
mov
fidivrs
mov
sbb
or
loope
mov
xor
repnz
ss
pop
loopne
jnp
popf
mov
scas
mov
and
dec
cmpsb
imul
mov
cltd
arpl
shlb
pushf
out
cmp
nop
inc
fnstcw
jns
ss
test
or
sbb
mov
adc
sub
std
xchg
push
movsb
push
mov
and
insl
or
pop
mov
popa
fwait
test
pusha
jmp
fisubrs
or
sub
push
or
sub
outsl
push
jl
lea
call
or
sub
mov
push
jge
mov
fstpl
adc
fs
gs
xor
or
mov
lcall
andb
mov
push
xor
mov
xchg
clc
or
add
jo
test
repnz
mov
push
scas
lods
jnp
jecxz
xor
icebp
mov
out
xchg
jp
pop
push
add
cmc
dec
sub
mov
or
or
shll
mov
dec
inc
imul
sbb
ret
cmovge
sub
jae
and
adc
push
pop
add
jmp
adc
push
aad
mov
enter
jo
gs
jmp
or
fimuls
and
outsl
jo
jg
sbb
xchg
stos
sub
test
dec
cmpsl
sub
sbb
sbb
sbb
test
out
das
push
sub
stc
scas
cmp
xor
push
ret
xor
jle
fwait
cmpsb
cli
mov
inc
jne
inc
popa
mov
das
sbb
sub
bound
push
jbe
lea
popf
sbb
filds
and
std
pushf
cmpsl
ret
push
sub
sub
nop
dec
gs
mov
mov
sub
jp
fs
xor
jae
xchg
loopne
xor
jns
enter
incl
movsb
mov
mov
les
mov
pop
cmp
mov
fscale
inc
stos
and
jbe
sub
inc
icebp
lret
sub
in
dec
nop
repz
mov
cmpsl
mov
aaa
outsb
sahf
add
xchg
pop
out
push
cmp
mov
cmp
jmp
inc
sub
int3
adc
hlt
in
cmpsl
pop
mov
mov
in
sub
out
outsb
sub
fisttpll
ret
imul
sub
sub
aas
or
or
mov
mov
lock
iret
or
neg
inc
outsb
fcom
stc
loop
lods
push
dec
sub
cwtl
sub
inc
and
sahf
sub
fbstp
sbb
sbb
mov
sub
loope
adc
fildll
clc
push
adc
cli
cld
xchg
cmpsl
enter
into
push
push
sub
popa
icebp
sbb
imul
mov
cld
add
pop
popf
stos
es
mov
lods
outsl
jle
push
push
dec
fdivrs
xor
adc
and
int
jb
pop
mov
sub
sbbl
data16
movsb
dec
aad
push
cmp
int3
mov
xor
rcrb
inc
enter
cmp
cmp
rorb
sub
push
jl
loopne
sub
push
sub
sub
sub
movb
inc
mov
mov
ret
std
popf
mov
or
ja
adc
insb
xor
insl
xchg
push
sub
jns
cmc
daa
sbb
ja
mov
pop
int
sub
fisubl
push
movsb
in
sub
incb
push
clc
or
sub
insb
ljmp
mov
push
stos
outsl
and
sub
inc
fstpl
rcr
xchg
sub
pop
push
cli
jae
fisubrl
adc
mov
enter
imul
lret
jecxz
push
cmp
clc
inc
ds
adc
push
mov
pusha
jae
hlt
sub
mov
or
push
xchg
sbb
inc
das
cmp
in
gs
mov
test
out
push
mov
push
xchg
rcr
xchg
push
sub
test
lock
push
roll
pop
jne
out
mov
sbb
sbb
or
pop
aaa
movsb
xchg
xchg
dec
divl
ret
push
pop
dec
dec
rorl
negl
pop
shll
add
xor
pushf
not
mov
and
mov
popa
push
out
mov
mov
scas
sub
push
out
jnp
loop
mov
fdivr
aas
push
cli
sarb
sub
daa
sbb
inc
xchg
adcb
dec
adc
iret
cmp
in
and
push
or
in
imul
push
scas
js
cwtl
sub
or
call
cmpsb
push
aad
popa
jle
push
pop
popf
in
es
push
mov
mov
inc
push
iret
jo
xor
xchg
xchg
dec
mov
lods
out
cli
inc
xchg
sub
cmc
add
xchg
add
adc
dec
cmpsl
sub
sub
sbb
pop
or
cmp
xor
mov
jne
into
pushf
inc
xchg
dec
jb
out
pop
std
sbb
test
bound
ret
lret
pop
mov
pop
inc
push
call
lods
cmpsb
fildl
xor
inc
aad
xchg
out
cmpb
aad
pop
mov
mov
adc
xor
mov
enter
inc
pop
scas
xchg
mov
shrl
jne
out
jns
and
jmp
xchg
sub
outsb
sti
test
clc
xor
jnp
mov
clc
push
imul
xor
scas
cmp
pusha
gs
xor
jo
push
push
jns
subb
mov
mov
xlat
std
xchg
mov
fadd
cmp
loop
push
pop
lcall
xchg
int3
or
movsb
bound
insl
mov
inc
push
fcomi
fwait
roll
aam
ffree
add
cmp
mov
jecxz
cmp
jge
sub
inc
pushf
or
std
pop
iret
and
cmp
push
mov
orl
cltd
lea
sub
jmp
xchg
sub
pushf
jmp
clc
dec
out
push
outsb
or
sbb
push
lock
sub
rcll
jg
aam
mov
fisubl
jne
sub
sbb
xor
fwait
orb
cld
mov
test
push
sahf
sub
negb
fwait
rcrl
sub
les
jl
xor
test
inc
addr16
das
sub
pop
mov
jo
add
leave
data16
or
fildll
daa
dec
movb
clc
stos
lock
dec
outsb
cmp
mov
mov
out
and
ds
mov
dec
movsb
add
and
out
sub
sub
add
loope
mov
out
insb
pop
sahf
das
or
mov
sub
pop
adc
hlt
mov
aam
arpl
sbb
dec
dec
mov
ljmp
pop
xorl
sub
inc
mov
mov
sub
mov
jns
sub
pop
out
lock
out
adc
movb
loopne
lahf
push
lret
cmpsl
fimull
xchg
rcrb
or
push
pop
ljmp
pop
inc
imul
jmp
sub
leave
dec
xchg
es
data16
sbb
fisttpll
xchg
outsl
sub
or
les
test
stos
ja
sub
add
push
cwtl
push
cltd
xchg
sub
pop
divb
mov
ds
mov
arpl
or
ficoml
fadd
lods
mov
test
mov
pusha
pop
jae,pt
mov
sbb
jp
xor
rcpps
in
adc
aad
mov
pop
mov
jmp
jge
cmp
inc
push
adc
dec
xlat
rorb
jmp
insb
mov
or
xchg
outsl
lods
test
sub
fs
jb
adc
mov
lret
or
into
sub
inc
add
xlat
jg
cmpsl
sub
mov
jnp
jge
rcl
sub
imul
pop
sub
inc
xlat
repz
sub
out
sub
das
jmp
jnp
test
shll
inc
sahf
fimull
popf
jmp
inc
or
xor
adc
fsubr
and
cmp
xorl
jp
sub
xchg
enter
jno
xchg
sub
or
push
and
sub
dec
test
jle
imulb
pop
jne
sbb
movsl
mov
imul
adc
test
push
sub
iret
int3
jnp
fdivrp
sbb
out
pop
mov
scas
cmp
dec
sub
cmp
jl
mov
test
adc
call
sbb
mov
sub
sbb
sub
or
jnp
inc
nop
mov
jmp
int
sub
rcll
xchg
push
pop
cmp
mov
clc
jns
cltd
in
popf
sub
or
sub
xchg
cmpsb
aaa
push
clc
xchg
lcall
es
scas
sbbb
cmp
mov
loopne
push
or
pop
fstpt
lcall
mov
loope
clc
mov
mov
sbb
test
nop
sarb
pop
fs
outsb
jg
xchg
repnz
jb
clc
stc
sti
sub
pop
xchg
dec
fmull
sub
pop
jo
pop
pop
test
lcall
sub
fs
xor
fildll
out
dec
out
clc
cmc
loope
mov
push
loope
shl
cmp
int
stos
mov
cmp
jnp
mov
sub
inc
int
sbb
mov
fimuls
mov
shlb
xchg
and
jl
popf
inc
test
xor
xchg
sub
mov
mov
or
idivb
aad
push
push
sub
loope
xor
cli
mov
adc
xchg
dec
cmp
mov
enter
pop
sbb
int
test
inc
mov
mov
mov
imul
cmpl
xchg
add
push
cld
dec
add
xchg
push
mov
stos
aam
lahf
popl
dec
mov
clc
fbld
les
lahf
adc
data16
out
xor
fists
and
mov
clc
lds
or
ficoml
pop
and
add
imul
addr16
mov
aad
and
out
xchg
lods
xchg
dec
arpl
jo
xor
out
sbb
insl
es
out
fs
add
adc
imul
ja
adc
add
push
lret
clc
inc
pop
pushf
pop
jae
lds
pop
imul
fcmove
push
jmp
pop
or
rcrl
or
adc
sarl
sub
lahf
push
jae
mov
push
popl
sbb
mov
xchg
sub
stos
cmp
jno
scas
push
mov
sub
in
outsb
cmp
mov
sub
fstl
cmp
popa
or
sarl
inc
inc
shrl
xchg
clc
mov
dec
icebp
push
cmp
cmpl
sub
scas
imull
push
add
out
sub
sub
cltd
jle
mov
js
adc
add
or
in
ds
or
cltd
adc
xchg
loope
inc
pop
mov
test
inc
xor
xchg
mov
dec
clc
push
std
scas
mov
test
and
sub
mov
inc
sub
jb
aad
loop
imul
add
mov
lret
cmc
sub
xchg
movsl
push
dec
hlt
sbb
int3
imul
dec
fsubl
jecxz
cmp
sbb
xor
sub
and
push
addr16
mov
sub
mov
inc
rcrl
cmp
sbb
mov
cs
aas
in
imul
sub
sub
outsl
aam
jns
sub
xor
mov
adc
popa
test
dec
mov
mov
pop
xchg
bound
aas
stos
sub
ljmp
mov
mov
push
sub
jl
and
sub
cmp
lods
and
leave
sub
pop
mov
es
jge
sub
mov
test
add
mov
push
jno
mov
mov
inc
and
aam
in
xchg
stc
jo
ds
cltd
pop
addr16
data16
jg
and
insl
sub
xchg
push
test
xlat
push
daa
sbb
hlt
popf
xchg
push
sbb
stos
jb
pop
mov
sub
popa
jle
cmpsl
cmc
pop
push
test
sub
arpl
test
mov
push
mov
xchg
lods
xor
mov
data16
xor
pop
sahf
ds
mov
repnz
jecxz
jne
mov
ret
and
rclb
dec
add
cli
imul
add
pop
testl
inc
inc
ljmp
std
scas
iret
int3
lahf
xor
jno
xchg
mov
rcr
xchg
and
lods
negb
imul
popa
nop
dec
sbb
movsl
cmp
clc
xchg
xor
pop
sub
out
rorl
jp
mov
dec
or
push
std
jmp
call
adc
fsub
sub
sbb
mov
inc
mov
pop
dec
cmp
jns
call
jb
orl
notl
subb
push
out
mov
imul
fisttpll
adc
das
dec
test
iret
sub
test
fsubp
mov
pop
pop
mov
jb
sub
jne
sub
sub
mov
icebp
repnz
sub
sahf
mov
push
les
xlat
les
and
add
mov
jmp
or
stos
je
fsubrs
xchg
into
ja
cmpsl
and
sub
adc
inc
aam
adc
push
das
pop
mov
loopne
lret
jb
sbb
popa
jp
jl
das
sub
sbb
inc
insb
jle
add
sub
jl
negb
sub
jle
jge
mov
outsl
pop
or
imul
and
loopne
lods
sub
out
add
xchg
movsl
sub
push
mov
testb
push
cmp
sub
xchg
test
pushf
lods
aam
and
aaa
add
cmp
insl
rorb
sbb
adc
scas
popa
and
pop
sub
loope
cmpsl
arpl
in
sub
mov
insl
mov
sub
xor
pop
fisubrs
subb
in
out
mov
adc
out
mov
sbb
jo
ljmp
sub
sti
cmp
rorl
mov
scas
sub
fisttps
imul
sub
pop
jb
test
popa
test
mov
mov
les
outsb
xor
dec
xor
fdivrs
data16
jl
sub
mov
mov
popf
cs
sub
in
fwait
aaa
dec
push
fldenv
adc
test
mov
adc
cli
dec
testb
pop
xlat
js
mov
push
jmp
and
rorb
sbb
sbb
or
outsb
sub
add
dec
push
out
mov
ds
mov
mov
sub
cmp
and
in
scas
in
inc
cwtl
lret
pop
jmp
imul
dec
xor
or
fldenv
sbb
dec
cpuid
mov
loop
mov
icebp
sbb
add
out
sub
cmp
adc
sub
and
xchg
sub
cwtl
or
das
je
movsb
pop
jge
and
popa
or
sub
repz
xchg
add
adc
dec
ds
cltd
dec
mov
jo
sub
mov
jae
and
stc
int
sti
jecxz
das
add
xlat
lock
icebp
sahf
out
mov
push
aas
adc
call
sub
jno
inc
fisubl
into
cmp
jbe
xorb
push
sub
sbb
jae
pop
dec
stos
ss
cmpsl
push
mov
sub
aad
imul
fbstp
mov
cmpb
cs
cmp
dec
js
cmp
lods
add
out
fsubs
cmpsl
sub
push
in
icebp
cmp
cmp
decl
clc
or
push
test
sahf
sub
popa
pop
test
inc
les
loope
mov
xorb
cmp
iret
clc
aas
divl
mov
repz
adc
mov
mov
sbbb
mov
insb
push
out
loopne
and
fisubrl
jge
test
jae
adc
hlt
jbe
clc
adc
imul
cmp
lret
aad
out
cmp
jo
movl
adcl
cmp
push
jbe
leave
sahf
adc
cmpsb
xchg
in
stos
and
in
or
popa
xor
jp
or
push
lea
cmp
stc
add
mov
adc
mov
jo
es
jmp
imul
in
sti
ds
cmp
lret
sbbl
or
or
fs
mov
mov
cmp
sub
push
out
ljmp
out
jle
pushf
adc
add
adc
cld
loopne
sub
leave
popa
enter
jbe
leave
mov
pop
sub
push
out
and
mov
push
bound
push
int
jmp
push
addr16
cmp
mov
fwait
sti
push
xor
xchg
imul
jbe
in
ja
js
sub
das
push
xchg
xchg
cmp
cs
es
test
and
cmp
push
xchg
roll
push
clc
mov
push
mov
push
leave
inc
mov
xor
daa
jge
mov
sub
hlt
in
inc
push
fs
outsb
lea
jmp
mov
lods
int3
xchg
mov
inc
dec
add
pop
push
sbbb
pop
jae
cli
mov
fwait
push
arpl
dec
xchg
adc
aad
mov
xlat
or
pop
test
orb
and
or
les
and
jmp
or
push
push
std
sahf
xor
inc
inc
orb
jns
out
ss
push
add
push
xchg
sti
cmp
or
addr16
repnz
mov
scas
adc
mov
arpl
clc
jl
shll
gs
mov
cli
mov
popa
lock
xchg
ret
aaa
les
mov
add
xchg
jp
and
das
sub
xor
mov
jp
sbb
dec
cs
and
xor
sbb
pushf
aaa
push
sub
stos
xlat
mov
sbb
orl
cmpsl
push
inc
mov
xor
or
shrl
xor
add
stos
jecxz
xchg
push
mov
xor
inc
xchg
xchg
out
scas
jmp
fwait
icebp
or
adc
sbb
mov
sub
dec
shl
fcoml
cli
push
stos
xchg
ret
int3
jg
cmp
stc
sub
rorl
fadd
pop
xor
fstps
mov
clc
mov
mov
jno
sub
and
jb
dec
inc
std
insl
iret
divl
dec
mov
jl
fsubl
cmp
xor
out
mov
fistpl
out
bound
sti
insl
ljmp
inc
sub
jp
dec
sub
xchg
xor
pop
in
push
sti
cmp
mov
fists
mov
push
dec
or
bound
jl
push
sbb
jae
add
or
pop
stc
dec
inc
sub
pop
jbe
xor
shr
dec
mov
inc
sarb
clc
mov
mov
dec
xor
adc
inc
adc
jp
ljmp
roll
add
out
ss
jno
push
subb
repnz
mov
call
in
pop
out
clc
enter
out
inc
and
je
gs
mov
jmp
imul
mov
into
xor
mov
xchg
pop
cld
mov
jns
sub
add
cli
decl
flds
cmpsl
mov
jle
fistpl
daa
push
mov
loopnew
nop
out
lret
ds
inc
or
jle
movb
in
sub
lods
movsl
iret
add
clc
mov
xchg
outsl
loope
mov
pop
dec
outsl
mov
mov
mov
popf
inc
pop
mov
mov
aad
cld
mov
jmp
inc
mov
and
aas
movsl
out
jbe
roll
shl
adc
mov
mov
fiaddl
cmp
nop
mov
cmp
cwtl
insl
add
clc
lods
das
mov
mov
sti
xor
xchg
js
add
faddl
push
test
mov
inc
mov
fidivl
mov
hlt
sub
sbb
and
pop
lcall
sti
xchg
mov
adc
push
jg
inc
sub
pop
outsb
xor
cltd
lcall
insb
mov
or
dec
ds
out
dec
outsl
mov
in
jb
jae
subb
push
sbb
pop
sub
add
sbb
mov
pushf
sub
in
add
sub
cltd
dec
lea
daa
jmp
sub
adc
popf
sub
push
jl
cmp
push
jmp
sub
nop
push
movsb
fimull
lods
xorl
push
fidivrl
addr16
dec
mov
sbb
sub
leave
notl
aaa
add
dec
pop
cli
gs
or
outsl
inc
sub
movsb
xor
sbb
lea
stc
sub
gs
add
mov
ficompl
or
push
xorb
pop
loope
call
aas
hlt
mov
mov
dec
in
sub
aaa
mov
mov
incl
jo
clc
hlt
xchg
aam
in
pushf
das
xchg
mov
pop
jg
out
lcall
cli
das
or
jmp
insl
push
aaa
inc
adc
orl
insb
mov
aad
hlt
add
leave
movsb
ds
mov
lahf
jmp
cmp
insl
addb
cmpsl
leave
adc
mov
mov
push
adc
test
jbe
dec
xchg
lock
sub
push
mov
add
sub
es
jno
cmp
jae
daa
or
xchg
testl
test
sar
sub
cwtl
test
les
insb
push
cltd
addr16
in
sub
filds
subl
das
jbe
inc
mov
jnp
push
xor
and
ss
jae
mov
pusha
clc
jecxz
fadds
xor
cmp
rol
repnz
lds
xor
inc
sub
xor
fmuls
shll
xor
dec
adc
dec
imul
add
sub
outsb
xchg
lock
jmp
jg
add
or
sub
sub
rcrb
dec
xchg
stc
cmpsb
add
add
std
inc
sub
stc
call
notb
popf
or
ljmp
fwait
andb
loope
test
pop
cmpsl
sub
mov
daa
inc
adc
add
mov
and
xor
stos
stc
sub
jb
cwtl
data16
mov
je
pop
mov
sub
push
mov
sub
test
jae
xchg
test
outsb
cwtl
jl
inc
ds
or
std
outsb
sub
pop
dec
mov
inc
sub
push
jne
out
pusha
and
pop
jns
jb
xchg
mov
imul
imul
xchg
sub
mov
jae
and
mov
and
movb
je
addr16
sbb
enter
or
xor
aad
pop
xor
sub
sahf
cmp
in
lcall
mov
jmp
ds
loop
rcr
mov
ret
sub
imul
sub
or
push
cmp
clc
and
aas
ljmp
sub
outsl
shlb
lret
or
cmc
daa
inc
sub
or
dec
sub
imul
outsl
enter
call
fs
sub
or
pop
mov
mov
xchg
pop
push
repz
jne
adc
mov
mov
pop
mov
test
lods
inc
bound
pop
sub
adc
jmp
sar
pop
ficoms
sbb
sahf
sub
adcl
popa
lret
daa
mov
or
sub
outsb
mov
dec
shlb
stos
sub
cmp
add
sub
repnz
cmc
inc
je
popa
push
xchg
xor
sub
sbb
in
or
sub
daa
cmp
mov
pop
jmp
pop
mov
aam
pop
mov
sbb
push
or
add
xor
adc
jno
sti
dec
in
call
push
xchg
mov
lea
stos
repnz
adc
sub
bound
push
sbb
mov
mov
cmp
mov
bound
push
clc
cmp
je
out
sub
sub
icebp
sbb
xchg
lods
jp
sub
loope
sub
adc
sub
fadd
insb
sub
mov
cmp
movsl
inc
sub
sub
packsswb
mov
movsb
lods
adc
inc
adc
test
shrl
aad
sub
pop
mov
mov
push
jns
loopne
and
sub
pop
xor
xchg
test
leave
loope
rorb
sub
insl
fs
ficoml
and
ja
push
mov
dec
xchg
mov
xchg
cmp
test
arpl
inc
ret
sub
aad
popa
imul
rorl
jnp
js
adc
jb
aas
clc
cmp
fdivl
sub
mov
pop
mov
pop
or
into
cli
mov
xchg
cmpsl
jbe
sub
pop
jle
xchg
loopne
xchg
les
ljmp
cmpsl
aam
lret
js
xor
xor
cmc
outsl
data16
push
pop
rclb
dec
pop
ja
jg
outsl
push
cmp
pop
sub
in
add
hlt
and
loop
rcrl
in
xchg
mov
fdivrl
loop
dec
push
shrb
das
mov
popa
insb
hlt
mov
jns
mov
cld
sbb
stos
lock
fld
mov
fwait
xchg
mov
outsl
push
inc
or
sub
inc
popa
jbe
dec
mov
movsl
call
ficoms
sbb
pusha
mov
stos
pop
inc
shrb
mov
ret
sti
cmpb
sub
in
mov
iret
clc
add
test
lea
cmp
mov
sti
sub
lods
test
cmpb
push
sub
pop
jmp
shrl
lret
dec
and
sub
cmpsb
xlat
push
jecxz
pop
sahf
outsl
pop
leave
scas
xor
xchg
test
fstpt
ret
inc
fidivrl
imul
sub
xchg
mov
loope
or
shl
cmp
clc
imul
subl
fimuls
loopne
mov
xor
inc
call
fists
imul
xchg
sub
sub
aas
xchg
enter
cmp
pop
rcr
xlat
mov
bound
dec
ret
fs
push
call
mov
mov
jl
in
call
jle
stos
jp
lret
mov
jbe
sub
fistpl
jg
xchg
sub
cmpsl
cmp
push
enter
rorb
dec
lock
test
enter
ljmp
call
cmp
stos
cmpsb
fnsave
jo
pushf
outsb
sti
pusha
jl
loopne
fcmovbe
jae
push
add
mov
pop
addb
ret
pop
xor
jmp
mov
sti
inc
ret
sub
mov
fidivrl
je
sub
xor
cs
sub
mov
sbb
dec
cmc
sub
jecxz
cld
push
inc
pop
call
sub
movsl
lcall
sbb
sub
push
push
push
sub
lods
divb
sub
fsubl
orl
imul
push
fcmovb
fistpll
fnstsw
sbb
fistpl
or
popa
stc
mov
fnstcw
lret
mov
sub
out
fwait
stos
jmp
lret
mov
pop
imull
fisubs
jb
sub
das
inc
hlt
sub
sub
out
rorb
push
and
mov
adc
dec
cmp
sbbb
mov
sub
adc
xor
vmovaps
into
or
repnz
imulb
push
out
test
int3
adc
subl
mov
arpl
add
stos
and
mov
mov
pop
xchg
add
sbb
sub
imul
pop
lahf
add
cmc
mov
clc
repz
sub
mov
add
push
push
fcomip
ja
xchg
adc
adc
stos
cwtl
mul
sbb
ja
jle
xor
sub
push
sbb
pop
repz
push
sbb
mov
sbb
sti
andl
dec
movsl
push
mov
inc
outsb
and
mov
scas
clc
lret
mov
ficoml
xor
sahf
aad
xchg
xor
sbb
mov
fucom
decl
enter
pop
jo
lds
sub
dec
sbb
sub
das
mov
sarb
fcomps
add
pop
enter
dec
outsb
and
jns
add
mov
sti
and
ficompl
adc
mov
loopne
loope
or
inc
jecxz
dec
pop
out
mov
cmc
adc
outsl
lcall
cmpsb
xchg
js
xchg
clc
ljmp
dec
fisttps
stos
fwait
jnp
aad
pop
fildll
ljmp
daa
or
je
jno
mov
ss
loope
test
loopne
mov
push
jae
in
push
push
imul
dec
pop
out
loope
adc
in
and
cmp
enter
push
fs
imul
and
cld
hlt
jns
sbb
dec
cltd
dec
and
mov
sbb
sub
icebp
xchg
cmp
gs
aaa
xchg
mov
daa
push
cmp
and
jnp
sub
mov
jecxz
sbb
fidivrs
dec
dec
push
fldl
cmp
shlb
pop
or
jo
sti
icebp
sub
xor
loop
jo
in
mov
repnz
sahf
cltd
cmp
pushf
push
push
pushf
push
cmc
xchg
mov
push
cli
into
adc
dec
neg
adcb
psubb
popf
dec
push
test
lds
idivb
jecxz
mov
add
xor
and
cmp
jo
cmp
pop
clc
rorb
jnp
pop
sub
mov
jecxz
jmp
fcmovu
push
lahf
shlb
into
jg
mov
or
dec
fistl
mov
cmp
xchg
clc
jnp
sbb
sub
inc
into
adc
scas
adc
add
test
dec
sbb
pop
mov
arpl
inc
and
xor
jmp
mov
sbb
mov
mov
in
in
fwait
pop
popf
adc
ljmp
addr16
mov
in
cli
rcl
sub
mov
vmovlps
test
cmp
rcrl
imul
push
pushf
aaa
sbb
mov
cmp
jmp
popa
inc
mov
sbb
ljmp
xchg
push
push
pop
aaa
popf
scas
aad
mov
xor
lret
mov
mov
insb
pop
cmc
pop
cli
dec
daa
jo
xchg
add
jle
dec
test
cmp
pushf
inc
and
sbb
sub
inc
jb
xor
push
xchg
sub
jns
push
sub
jmp
decl
out
leave
in
lock
inc
enter
rcrb
sbb
rol
outsl
sub
xlat
js
inc
mov
sub
dec
icebp
fwait
mov
adc
out
inc
stos
add
sbb
cmp
mov
shll
adc
lcall
ja
inc
mov
sub
xor
xorl
inc
sub
mov
sub
ret
sub
or
repz
push
lods
dec
dec
mov
inc
mov
out
xor
std
adc
sarl
pop
push
daa
sub
push
fisubrl
jns
arpl
jle
aas
adcl
sub
cmp
insb
or
jnp
sub
push
xchg
mov
fsubrl
ljmp
ret
sub
mov
insb
fisttpll
inc
sbb
pop
or
jg
sub
inc
pop
mov
pop
pop
ljmp
add
outsb
popf
or
lret
sub
mov
push
pop
mov
pop
fldt
xchg
cmp
sub
jns
cmp
das
adc
inc
sub
sbb
push
sub
out
ljmp
mov
ds
adc
push
icebp
or
das
cmp
fbstp
or
mov
jbe
lret
lods
out
pusha
xor
pop
call
xor
int3
cs
inc
enter
bound
out
mov
adc
gs
add
push
imulb
adc
sub
mov
rclb
ret
orl
xchg
sub
lods
hlt
sub
int
and
cmp
push
add
xor
scas
mov
sub
scas
movsb
pop
idivb
and
sub
dec
and
mov
fcompl
stos
sub
in
test
jne
movl
pop
push
mov
mov
sub
dec
subb
mov
dec
dec
sbb
sub
jo
or
pop
int
jnp
inc
mov
pop
jno
sbb
mov
and
cwtl
push
xchg
stc
shrb
rcll
push
ds
cwtl
mov
sub
mov
fistps
arpl
nop
out
hlt
sub
ds
push
cmpsl
cmp
test
push
jge
pop
jne
mov
mov
in
mov
jge
mov
push
sub
jmp
fcompp
sub
sbb
sub
ljmp
or
jl
sub
loop
xchg
loopne
pop
sub
xchg
mov
or
pop
iret
push
xor
cmp
mov
push
cld
mov
and
outsl
aam
dec
mov
mov
mov
icebp
xor
sbb
lods
jbe
mov
jg
fstl
sub
sub
xor
filds
push
jae
loopne
ss
cmpsb
cmp
adc
mov
sbb
sub
loope
cmp
scas
int
cmc
xchg
xchg
jns
pop
adc
sub
or
mov
push
icebp
cli
lods
imulb
fstl
pop
sub
or
pop
ss
mov
sub
mov
fisttpl
mov
and
inc
xchg
rorb
call
lret
cmpsb
pop
mov
outsl
push
ret
adc
xor
imul
sub
aas
sbb
fs
sub
mov
mov
push
xor
sub
xchg
dec
adc
ljmp
mov
dec
in
inc
adc
mov
add
push
test
jecxz
out
xchg
cmpsb
push
je
rcrb
aaa
xorl
pop
test
jmp
cmpb
out
mov
cmp
orl
out
push
or
jmp
pop
pop
or
fs
sub
fnsave
lock
sub
test
stos
jg
jnp
xor
pop
shrl
movsb
arpl
add
adc
sbb
add
mov
dec
movsl
mov
jno
push
push
into
xchg
push
add
int
mov
push
stos
test
mov
lods
dec
xor
pop
popf
aas
jmp
xor
jge
mov
fldenv
ljmp
mov
push
mov
icebp
shl
mov
sub
shlb
adc
hlt
mov
movsb
and
cwtl
fcoms
sub
mov
dec
pop
xlat
or
jae
std
test
ds
outsb
sub
sub
repnz
pushf
dec
or
fcomp
aam
outsb
jl
mov
add
loop
bound
test
sub
mov
lret
sbb
adc
sub
sub
adc
lods
shrl
sti
addr16
adc
arpl
sub
pop
mov
adc
hlt
jnp
sub
clc
inc
popa
ficompl
mov
insb
adc
cmp
lds
sub
and
or
in
sub
leave
inc
push
call
aaa
sub
inc
pop
jg
or
scas
dec
shll
in
mov
mov
sub
jg
mov
mov
mov
dec
sub
imul
mov
cs
mov
or
push
fsts
cli
jge
push
popa
cmpsb
shlb
xorl
cmp
cli
cmpb
fsubl
clc
jb
dec
xor
push
scas
shlb
dec
pop
xacquire
inc
cs
gs
xor
lods
ja
int3
xchg
dec
sub
mov
push
sub
fucomi
jle
int
les
sbb
lock
sub
dec
mov
cltd
fmuls
or
sub
cmp
lods
mov
xchg
ja
out
imul
mov
into
pop
mov
push
jo
lahf
sub
sub
addr16
test
jmp
xchg
and
or
hlt
sub
xchg
loope
in
or
sub
mov
xchg
push
sub
loope
ja
stos
arpl
cmpb
js
push
push
loopne
imul
push
and
sub
adc
ret
mov
rolb
push
sub
push
cmp
sub
add
push
cli
test
sub
or
mov
xor
cld
push
ds
fwait
pop
imul
jecxz
pop
popa
in
test
call
sub
mov
jl
daa
sub
hlt
mov
dec
inc
stos
lods
push
stc
mov
sub
cmc
inc
fnstenv
in
nop
sub
imull
and
lds
pop
cmp
push
movsl
sub
cmpsb
mov
scas
sub
mov
dec
fwait
jmp
sbb
sub
notb
pop
ds
mov
pop
push
jmp
inc
mov
mov
sub
lds
sahf
in
jp
orl
imul
dec
add
xorl
jle
out
dec
pop
rorb
in
imul
push
sahf
sbb
sbb
hlt
cmp
xchg
sub
jmp
imul
aas
or
dec
fildl
or
adc
cwtl
xchg
inc
call
cmp
jnp
sub
pop
pop
lret
popf
mov
clc
repnz
call
and
jns
pop
inc
cmp
in
adc
out
popf
lds
jmp
aam
mov
lret
stos
call
addr16
popl
cmp
inc
clc
sar
pop
popf
and
cmp
clc
cmpsl
rcll
mov
mov
shl
repnz
icebp
mov
xlat
or
mov
mov
sub
sbb
pop
sub
mov
pop
mov
fyl2x
jmp
push
fst
addr16
scas
push
iret
lods
fisttpl
pop
clc
xchg
inc
ljmp
mov
ss
mov
xor
cmp
jmp
cwtl
negb
sbb
ret
dec
inc
loope
push
decl
nop
ljmp
jno
arpl
cltd
enter
xlat
daa
lret
adc
mov
and
fwait
mov
and
mov
lods
fcomps
js
fdivr
pop
adc
movsl
jno
cmp
insl
mov
cmpl
push
scas
scas
aaa
mov
add
push
arpl
push
mov
jns
xor
dec
jmp
addr16
lods
adc
mov
or
pop
out
shl
mov
jg
les
clc
mov
rcrb
shl
orb
inc
lea
push
push
aaa
xchg
xchg
arpl
dec
movsl
popf
jo
into
imul
into
xchg
clc
mov
aad
jbe
sub
mov
pushf
sub
mov
icebp
ret
pop
out
int
or
dec
dec
pop
add
cmp
or
pop
int
mov
mov
imul
inc
push
or
sub
std
add
in
movsb
fs
mull
out
sub
jbe
out
sbbl
sub
inc
xor
insb
pop
mov
push
jns
pop
xchg
sub
fbstp
dec
fldcw
cmpsb
mov
mov
sub
lods
or
add
pop
stc
xor
shll
hlt
push
movsl
pushf
jmp
cltd
add
stos
sub
sub
mov
arpl
aas
in
sub
negl
dec
popa
dec
imul
mov
call
sub
cmp
call
mov
jg
xor
adc
sub
sub
dec
sbb
sub
and
bound
sub
fimuls
cmp
push
les
loop
dec
fst
popf
sub
xor
xchg
cmp
insl
daa
dec
aam
sar
xchg
outsl
mov
fwait
stos
pop
mov
xlat
mov
lret
xchg
sub
mov
cmp
mov
xor
add
fwait
ljmp
pop
test
mov
pop
xchg
mov
sbb
std
gs
add
sbb
adc
loopne
add
adc
adc
mov
clc
ljmp
incl
imul
fdivrs
pop
sahf
pusha
push
adc
data16
jae
in
movsl
dec
dec
add
sbb
xor
mov
gs
shl
out
mov
mov
push
mov
jbe
pop
xchg
sub
repnz
fsubrp
mov
xor
sub
stos
es
sbb
stos
clc
ss
xor
xor
sub
push
inc
das
sub
xchg
scas
sub
mov
mov
cmp
xchg
push
pop
jmp
ds
cmp
or
mov
push
push
sbb
jns
cmp
add
inc
fidivl
xlat
imul
sub
mov
or
lret
jne
sub
shll
jno
sbb
push
addr16
pop
jg
lret
dec
mov
scas
sub
pop
cmpsb
shrb
or
je
mov
or
pop
dec
cmp
xorl
ret
outsl
in
sub
mov
das
push
jge
pop
and
xor
out
inc
sbb
add
xor
jl
in
sub
bound
mov
xchg
popa
fsubrs
insl
xchg
stos
popl
sub
arpl
cmp
outsb
jmp
roll
incb
mov
test
adc
or
push
fxtract
loopne
shrl
sub
mov
cmpsl
ret
in
cltd
dec
push
cmp
sub
sub
sub
jmp
cmpsb
out
sub
mov
in
mov
rcr
movsl
jecxz
sub
fwait
std
fbstp
jg
fstpl
rcr
jnp
ret
enter
test
sub
imul
push
mov
mov
jns
or
movsl
movsl
pop
sub
mov
arpl
and
sub
iret
mov
loop
lods
arpl
sub
test
leave
xchg
jno
fsubs
sub
and
std
pop
lea
sub
pop
mov
fdivp
jne
dec
adc
dec
js
aas
out
or
sub
dec
sub
aam
xor
xorl
je
pop
mov
mov
cli
dec
xchg
ret
lret
int
sub
xor
aaa
mov
sbb
mov
in
pushf
jo
fldt
dec
pop
fimull
mov
push
in
sub
add
mov
xorb
xchg
xchg
test
sub
scas
imul
gs
cwtl
bound
mov
je
pop
in
sub
dec
push
into
pop
ljmp
mov
sub
scas
mov
in
sub
xchg
mov
mov
or
enter
mov
sub
in
iret
jno
and
dec
fwait
jge
sub
das
imulb
add
leave
sar
shrb
push
std
mov
mov
mov
jns
sub
or
and
jmp
scas
xchg
and
sub
stos
adc
xchg
jbe
and
pop
in
sub
add
mov
adc
inc
insl
test
pop
loope
sbb
gs
rorb
aad
loop
sub
mov
out
sub
pop
jnp
jecxz
clc
mov
popf
sub
xchg
xor
sub
cmpsl
sbbb
dec
cmp
push
es
sti
mov
js
push
adc
scas
adc
pop
sub
adc
int3
pop
addr16
lahf
stc
sub
jge
xor
pop
movaps
insl
xchg
outsb
xchg
and
jg
mov
dec
mov
mov
stc
mov
xor
jmp
dec
out
xchg
sub
pop
lcall
outsl
rcll
inc
call
and
or
pop
mov
in
sub
in
xchg
mov
mov
mov
outsl
sar
sub
loopne
add
sub
cwtl
lods
ret
mov
in
sub
imul
sub
lret
mov
data16
sub
xchg
mov
sub
idivl
movsb
or
add
sub
dec
adc
mov
shrb
test
sub
push
lret
or
sub
inc
pop
and
sub
cmp
push
test
sub
outsb
cmpsl
mov
cwtl
rol
mov
sarl
fcmovnb
xor
sbb
outsl
mov
roll
jne
sbb
mov
sub
or
add
cli
sub
subl
jno
inc
int3
lahf
jbe
push
sub
mov
dec
div
shr
jmp
shrl
add
loopne
repnz
rorl
or
out
bound
mov
pusha
incb
fistps
test
mov
xchg
dec
sbb
sub
daa
in
jp
jecxz
imul
and
cs
mov
outsb
into
inc
push
mov
imul
jge
mov
cmp
push
mov
xor
scas
int3
jo
push
out
mov
cmpsl
call
push
and
cltd
push
cmp
imul
mov
cltd
cmp
sub
and
fidivl
mov
fstl
pop
pop
push
sub
jp
fistps
cli
lahf
sbb
mov
rclb
mov
jmp
xor
sub
inc
cmpsb
xlat
fwait
jp
and
cmp
icebp
stos
cmp
dec
push
sub
mov
adc
jo
cmpb
jbe
test
push
xchg
stos
or
test
test
hlt
popf
mov
lret
mov
pop
fwait
mov
repnz
fisubrs
test
repz
incb
cmc
ds
sub
lods
cmp
cmp
cmpsl
aas
repnz
inc
jp
in
lret
cwtl
dec
mov
arpl
stos
ja
rclb
sub
dec
lcall
jo
jg
push
arpl
filds
or
xor
test
mov
adc
data16
mov
push
insb
mov
jne
jnp
sarl
mov
test
or
js
or
sub
mov
mov
xchg
js
or
not
inc
jbe
xor
xchg
cmpsb
xor
cwtl
jo
adc
dec
jae
outsl
push
pop
sub
sub
repz
popf
push
lret
sbb
push
sbb
les
rcrl
mov
scas
push
sub
lret
imul
pop
sub
push
inc
xor
hlt
cmp
sub
sub
adc
mov
cmp
dec
sbb
sub
push
jmp
pop
push
mov
test
ret
cmp
ljmp
mov
jns
or
sub
ret
cld
movsl
jbe
jmp
xchg
insb
movb
test
jle
test
push
inc
das
push
xchg
push
mov
jae
lret
call
in
stos
pop
in
and
andb
arpl
shll
mov
dec
inc
lods
inc
in
xor
adc
push
add
jmp
fs
ljmp
sub
imul
push
sub
and
xchg
scas
add
sub
mov
inc
push
or
sub
mov
adc
mov
rorl
xor
pusha
dec
or
sub
aaa
jns
daa
inc
push
sub
sbb
cs
or
sub
loop
out
sub
adc
adc
in
testl
sub
jne
cmp
movsb
leave
mov
sub
jge
stos
xorb
pop
out
mov
adc
sub
arpl
lcall
cltd
sub
xor
sti
rcr
mov
and
ljmp
push
lea
jl
cli
clc
sub
mov
ss
mov
mov
rclb
shrb
and
push
outsb
test
sub
ss
pop
dec
xor
loopne
add
lret
ss
sub
jp
pop
sub
lods
outsb
lcall
mov
xor
sub
inc
sub
xchg
imul
test
rorl
push
push
int3
mov
shrl
mov
out
sub
popa
mov
lahf
mov
clc
push
insb
pusha
aas
cli
sub
sub
cs
or
negl
lcall
jae
jmp
add
or
into
pop
cmpsb
stc
icebp
mov
push
fidivrs
in
mov
mov
sub
sub
adc
xor
je
repnz
test
leave
scas
adc
sbb
outsl
pop
cli
xchg
stos
cld
pop
xchg
sub
test
and
or
test
insb
in
pop
sbb
sub
sbb
add
pop
push
pop
int3
inc
stos
subb
je
ficompl
fsubp
add
ss
push
push
add
and
testl
add
xor
mov
mov
outsl
xchg
sub
roll
pop
cmp
popl
and
fisubrl
sub
cld
lcall
cli
or
xchg
sub
pop
call
stc
pop
mov
lahf
add
cmp
aaa
mov
test
mov
ja
stos
nop
xchg
mov
push
out
lock
push
cmp
stos
jno
in
mov
rorb
clc
xchg
fcoml
xlat
imul
xor
mov
jge
xor
jbe
mov
add
popf
enter
pop
add
xor
ret
cmp
scas
jecxz
sub
bnd
or
adc
rolb
push
mov
mov
jl
popf
cmp
xchg
mov
jne
dec
fs
sbb
dec
xor
adc
dec
das
cmp
push
xchg
shlb
ds
lds
push
cmc
lock
push
jmp
ss
mov
js
sbb
sub
add
and
lock
enter
adcb
sub
addr16
dec
xchg
xor
adc
imul
imul
addr16
je
and
movsb
or
jmp
rolb
cltd
and
jp
fwait
jo
clc
jecxz
fsub
push
cmpsl
mov
xor
or
xor
in
xchg
movsb
or
and
cli
dec
pop
lock
popa
es
movsb
test
aad
pop
inc
pop
pop
sub
andb
icebp
popf
loope
push
ds
faddl
xlat
nop
jecxz
ret
jmp
outsl
sub
cli
xor
mov
sub
les
xor
mov
in
ljmp
cli
sub
cmp
aad
lcall
subb
lcall
mov
and
mov
arpl
ss
fmulp
push
xchg
test
jb
jne
cli
jecxz
int
clc
fnsave
mov
pushf
lcall
ret
sbb
xchg
sbb
push
pushf
dec
mov
imul
jb
mov
inc
mov
clc
orb
add
pop
cmp
inc
mov
repz
sub
pushf
ret
xchg
lea
pushf
mov
jmp
call
mov
inc
pop
iret
scas
inc
or
out
push
dec
push
stos
arpl
push
jo
pop
test
les
adc
jge
ss
jg
stos
jo
xor
or
addr16
cltd
jmp
rcr
daa
bound
lcall
dec
push
sub
pop
sub
in
cmpsl
dec
sbb
ret
cli
filds
nop
or
push
out
adc
adc
out
fstl
pop
cli
mov
mov
push
pop
js
in
rolb
jb
pop
loopne
imul
dec
mov
sti
in
jge
dec
mov
inc
jmp
dec
mov
test
stos
add
aaa
jbe
xchg
cmp
dec
jb
add
iret
mov
inc
xchg
mov
adc
mov
and
int3
addr16
test
mov
inc
or
or
andb
add
movsl
repz
ljmp
fsubp
push
xor
mov
or
push
aam
add
sbb
sub
sbb
loope
xchg
sti
adc
inc
les
pop
js
jnp
ljmp
add
inc
inc
test
fnsave
sub
cmp
cs
sti
xor
orl
push
pusha
jns
rorb
mov
nop
mov
mov
jo
mov
mov
es
fists
popf
cli
sub
dec
cli
daa
addl
ds
pop
cli
cs
adc
push
adc
rcl
addr16
mov
jecxz
pop
lock
mov
jmp
movsb
sbb
xchg
jl
pop
stos
pop
arpl
lahf
sub
inc
lds
fdivp
lds
and
cli
inc
dec
scas
pop
dec
sub
popf
das
sti
addr16
int
dec
fwait
jmp
xor
imul
push
sub
mov
dec
es
pop
mov
imul
fldl
hlt
dec
loopne
pop
sti
push
dec
es
inc
fcmove
dec
xchg
push
repnz
mov
flds
clc
mov
or
pop
cli
outsb
fstl
mov
sbb
idiv
daa
xor
addl
cmpsb
daa
clc
std
or
xchg
xchg
xor
out
rcrl
jmp
or
inc
dec
stos
cmp
js
int
add
lds
fcmovnb
add
ds
xchg
cmc
mov
int
fidivrs
xor
scas
std
cmpsl
fs
sti
test
pop
mov
shll
inc
cmp
sub
sub
sahf
xchg
mov
inc
push
dec
call
fildl
push
bound
fwait
jno
outsl
out
mov
pop
aad
imul
and
jmp
rolb
lret
cmpsl
add
mov
inc
lret
pop
test
mov
lret
add
aam
fists
push
sbb
loope
mov
inc
dec
sbb
out
xor
dec
adc
and
cmc
mov
jno
jns
ret
or
sub
subb
out
add
cmpsl
ja
movsl
add
and
lcall
dec
add
out
push
movsb
in
add
fs
and
and
lcall
mov
lret
into
sti
imul
dec
mov
jp
fldl
or
mov
shrb
sub
subb
int
jb
clc
pop
icebp
orl
xor
cli
mov
int3
mov
imul
aaa
sahf
jg
and
xlat
or
lds
ret
pop
ficoml
scas
cli
aad
xchg
push
sahf
gs
inc
dec
mov
negl
mov
lods
pop
inc
cmc
mov
cmp
or
scas
add
iret
jns
out
push
les
lods
lock
pushf
call
push
insl
pop
or
push
fucomp
fwait
cmp
popa
loop
and
shrl
mov
js
jb
mov
hlt
mov
jbe
repz
dec
es
adc
xchg
jmp
sub
pop
and
movq
cmpb
mov
xor
mov
or
mov
cmpsb
push
clc
imul
or
repz
mov
arpl
xor
dec
cli
enter
std
adc
aaa
and
loope
dec
sub
xchg
insb
stos
push
ror
scas
outsl
mov
xchg
aad
out
pop
xor
pop
mov
ljmp
rorb
lock
stos
push
dec
dec
into
stos
repz
ds
adc
aas
cmp
clc
stos
cmp
frstors
cmove
seta
int3
gs
movsb
xchg
cld
scas
mov
jns
sub
xchg
add
add
push
stos
stos
shlb
lahf
enter
add
out
adc
xchg
lcall
and
dec
fwait
push
fiadds
and
aas
cli
call
xchg
push
jo
jl
scas
jp
adc
ss
fcmovbe
lds
test
ja
push
test
pop
pusha
cmp
aas
push
pop
aad
or
cmp
mov
loop
xlat
dec
mov
es
pop
xchg
je
sub
and
and
js
jg
add
addr16
lds
adc
cmp
mov
test
fs
cmc
jecxz
js
adc
cmp
jmp
push
dec
scas
mov
xor
cmp
push
jo
cmc
dec
pop
add
mov
push
outsb
jp
cmp
push
inc
shll
pop
fisttpll
cmpsb
ret
xchg
sbb
aad
out
mov
fs
shrb
push
out
mov
or
mov
mov
cld
clc
es
pop
cli
sbb
stos
movsb
test
imull
mov
sti
adc
and
outsb
imul
sbb
jns
popa
lret
push
push
pop
iret
movsl
mov
shlb
inc
pushf
jo
pop
xchg
nop
out
lret
or
dec
pop
aaa
testb
dec
jmp
mov
inc
stos
insb
pop
je
inc
fsubs
mov
adc
xchg
xor
mov
push
jnp
outsb
jns
jg
lock
xor
fldenv
or
call
shrb
aad
dec
les
test
lret
mov
sub
sub
fwait
add
loopne
out
shrb
hlt
xchg
insl
cld
fld
jb
xor
sub
jecxz
xchg
scas
inc
mov
sbb
jp
lods
mov
int
rcrb
out
cmp
mov
rcrl
pop
xor
add
jmp
jp
jns
mov
out
cmp
dec
test
sti
cwtl
scas
inc
rorl
mov
dec
xchg
cli
inc
sbb
jge
cmp
mov
movsb
jecxz
jb
loopne
adc
sbbl
sub
bound
sub
out
mov
ffree
dec
sub
push
call
add
xor
cmp
and
mov
and
xchg
xchg
mov
lods
aas
jne
fsub
xor
mov
leave
mov
int3
mov
sbb
pushf
jmp
xlat
jmp
nop
dec
push
jmp
adc
sbb
das
outsl
mov
jo
jmp
or
inc
test
lods
pop
addr16
repz
cmc
pop
jae
cmp
push
inc
pop
pop
xchg
ja
dec
xor
and
and
pop
stos
sbb
jns
mov
ja
mov
xor
add
cmp
mov
fwait
stos
dec
mov
xor
lret
out
push
jmp
and
aad
lahf
push
js
in
push
or
jg
in
sbb
mov
jg
and
mov
cmp
jge
loopne
movb
cmpb
mov
int3
and
push
or
pop
xor
push
push
lret
dec
adc
out
xor
sub
xchg
movsb
mov
mov
jge
or
out
pop
xchg
scas
sti
adc
insb
addr16
enter
adc
les
cmp
rcrl
int
dec
jecxz
lret
cmp
mov
aad
enter
lds
fs
pop
adc
or
lret
dec
or
fldenv
jmp
sti
mov
dec
pushf
cmp
cltd
xlat
push
clc
jle
add
xor
les
fmuls
pop
rcrl
pop
lahf
pop
divl
jb
je
sti
outsb
cli
jo
mov
add
lret
cmp
lahf
xchg
mov
xor
hlt
mov
gs
rorb
pop
popf
nop
out
jecxz
fs
scas
mov
jo
popf
sbb
jnp
jg
sahf
lock
out
sbb
lods
push
adc
sahf
lret
jae
xor
cmpsl
or
inc
cmc
xchg
or
or
xchg
cs
jnp
lret
mov
adc
mov
cmpsl
arpl
lea
movsb
stos
inc
adc
mov
xor
mov
xchg
xchg
add
rclb
rclb
xchg
mov
addr16
mov
ret
fistps
inc
mov
dec
inc
sbb
ja
mov
addr16
std
jae
dec
push
lcall
sbb
and
and
mov
inc
bound
and
cmp
xor
push
cmp
or
sub
cmp
xchg
das
cld
loopne
mov
bound
roll
outsl
jl
negl
jno
push
xchg
jbe
pop
sub
sub
das
imul
sub
or
test
lods
mov
in
xor
scas
shll
into
adc
sbb
mov
jno
mov
shr
dec
popa
jns
mov
dec
mov
into
mov
mov
mov
and
mov
and
lcall
clc
mov
insl
sbb
inc
test
pop
cmp
jo
and
cmp
rolb
xchg
sbb
in
pop
xor
cltd
fsub
mov
xlat
pop
jmp
loope
test
repnz
jo
addr16
stos
cmp
pop
push
pushf
push
inc
div
mov
cwtl
pop
out
inc
and
or
inc
xorl
dec
inc
xchg
inc
std
das
lods
add
push
movsl
popa
pusha
sub
ja
insb
pop
sub
push
lock
loope
roll
sbb
mov
xchg
push
sub
jnp
shll
sub
sub
dec
adc
adc
ds
daa
cmp
and
dec
aaa
mov
test
mov
push
mov
stos
cmpsl
hlt
aas
pop
inc
xchg
jae
push
clc
into
mov
sub
xchg
sub
pushf
daa
pop
sub
loop
push
cwtl
out
lret
sub
lock
out
sub
cmp
pop
les
push
xchg
sub
leave
scas
sub
inc
add
push
mov
sub
fcmovb
cli
mov
outsb
ret
dec
out
mov
ja
cltd
jnp
push
and
ds
arpl
sbb
and
in
inc
lock
test
push
imul
sub
xchg
cs
dec
push
std
adc
test
sub
push
jl
aas
cmp
add
inc
pop
mov
xor
in
sub
dec
xlat
nop
inc
fiadds
dec
sub
fisubrl
psrlq
insb
sub
mov
sub
and
subl
xchg
fwait
out
pop
decb
xchg
mov
call
jnp
cmpsb
cmp
add
into
nop
inc
xchg
cmp
mov
popa
mov
adc
sub
xchg
fstl
dec
sub
sahf
lock
sub
js
mov
ds
jle
or
mov
test
add
mov
shl
cmpsb
cmp
test
int3
and
ds
sbb
lock
inc
out
xor
repnz
mov
sbb
shrl
sbb
iret
nop
sub
mov
and
jecxz
mov
sub
movsb
sub
insl
nop
push
push
sub
pop
mov
sub
mov
jnp
jl
inc
inc
pusha
or
les
fldt
es
pop
cmp
xor
js
lods
imul
pop
pop
stos
dec
sbbb
rcrb
sub
fimuls
aaa
fcomps
push
imul
call
inc
stc
sub
push
sbb
movsl
in
mov
sub
xor
je
mov
sub
mov
push
dec
inc
ljmp
addl
in
mov
cmp
pop
adc
sub
out
or
jbe
xchg
sub
xor
and
addl
and
pop
icebp
stc
dec
sub
xchg
sub
stos
cmp
add
and
cmpl
inc
outsl
movsb
sub
jg
sbb
sub
sar
mov
cmpsb
xchg
into
sbb
lds
pop
inc
sub
test
sub
pop
mov
into
sub
jno
shrb
aad
mov
sub
cltd
fimull
data16
sub
push
add
pop
sti
sub
movsb
cmpsb
push
iret
mov
sub
cltd
cld
xlat
into
jg
sub
mov
add
lods
sub
aam
jns
or
inc
loop,pt
add
movsl
call
dec
mov
cmp
sub
fstl
mov
shrb
xlat
mov
push
push
xor
dec
loopne
mov
call
clc
sub
and
pop
adc
xor
stos
aaa
push
sub
jbe
jg,pt
sub
pop
loopne
lods
movsl
sbb
outsl
fldt
lret
or
sub
jns
and
sub
in
xor
push
es
mov
stc
les
addl
sub
enter
or
inc
jge
loope
shl
cmp
imul
and
xor
lret
popa
and
cmpb
subl
bound
add
sar
dec
stos
sub
out
add
adc
sub
cmp
adc
andb
mov
cli
sub
in
adc
sub
pop
mov
sub
xchg
addr16
lret
mov
das
divb
xchg
or
jns
in
sbb
and
sub
data16
popa
xchg
mov
fwait
push
aam
adc
sub
lret
sub
leave
call
fdivrl
add
inc
mov
lock
sub
jmp
outsl
cmpsb
mov
js
clc
ficoms
pop
push
jle
div
cmp
clc
inc
add
or
and
xchg
call
in
cld
push
mov
pop
cmp
test
jecxz
jg
sub
pop
jnp
xchg
les
fisttpl
les
sub
outsb
nop
ret
sub
in
xor
sbb
sub
arpl
imul
pop
js
popf
or
inc
push
mov
nop
mov
sar
sub
dec
mov
cmpsb
and
adc
mov
mov
jmp
fistpl
stos
cs
pop
inc
repz
inc
in
out
sub
cltd
jle
sub
int3
popa
je
mov
and
jecxz
pop
stos
ret
in
call
scas
sub
dec
mov
xchg
aas
subl
pusha
leave
mov
mov
repnz
dec
daa
movsl
fisubs
ds
jle
inc
cmpsl
inc
or
fstl
ljmp
popf
std
inc
arpl
inc
fcmovb
jmp
add
into
dec
mov
int3
aad
ss
xchg
mov
cmpsl
dec
das
in
das
inc
fs
out
xor
add
insb
invd
push
sbb
in
mov
cs
mov
sub
out
xor
adc
or
arpl
outsl
add
xor
jp
sub
fistpl
xor
dec
imul
cs
inc
ret
pusha
stos
incb
fmul
mov
cmp
xorb
daa
imul
sbb
insl
outsl
dec
mov
push
or
adc
sub
fmuls
push
jae
cmc
rorl
push
sub
mov
cli
jl
cmp
repz
sub
mov
sub
mov
mov
icebp
insb
andl
dec
sub
pop
jns
xchg
out
nop
dec
or
icebp
jmp
imul
daa
mov
adc
out
xor
cltd
push
add
push
sub
enter
and
sti
shrl
pushf
jno
push
pop
sub
push
and
and
inc
xor
sub
les
sbb
xchg
call
test
jo
fsubr
aad
xor
pop
sti
cmp
pop
push
ss
sub
outsb
mov
inc
mov
jnp
cmp
cld
in
mov
sub
outsb
mov
movsb
inc
fildll
xor
arpl
mov
mov
inc
cmpsl
into
scas
jb,pt
xchg
popa
icebp
imul
cmpl
fisubrs
out
adc
add
dec
jne
popf
cmp
jo
mov
cmpsb
test
scas
and
sub
and
add
sub
lock
mov
push
add
inc
andb
pushf
mov
pop
std
cmp
mov
xchg
jne
dec
dec
into
das
les
sub
sbb
stos
outsl
add
mov
orl
adc
insb
pop
pop
iret
sub
pushf
adc
sub
rcll
dec
xor
lret
push
or
lea
add
mov
mov
xchg
xor
push
sub
inc
aam
outsl
sub
cltd
or
sub
or
repnz
dec
sub
push
jb
mov
jns
sub
or
push
movsb
jg
std
sub
xorb
dec
mov
push
rolb
push
xor
jge
call
in
mov
sub
xlat
lahf
push
fcoms
out
fbld
sub
adc
scas
fmuls
cmpl
sti
fisubl
xor
les
xchg
lock
je
push
daa
inc
dec
push
std
add
leave
dec
sub
je
lcall
and
iret
fistpll
pop
or
outsb
lret
cli
adc
xchg
movsb
lret
pop
and
jo
mov
sbb
lds
push
fldt
cmp
xor
pop
or
dec
leave
les
cli
fists
in
mov
pusha
mov
lock
pop
in
sarl
pop
push
aas
mov
fwait
xchg
sub
cmc
and
rclb
adc
divl
or
notb
sbb
jns
test
push
sbb
jbe
mov
push
or
sub
pop
push
test
sub
lods
fsubl
push
push
sub
xor
lods
mov
dec
stc
inc
dec
sbb
inc
in
insb
push
es
jl
mov
and
jmp
scas
shl
and
add
sbb
mov
das
sbbb
add
and
pop
lds
cli
mov
es
add
dec
mov
inc
sti
cmp
inc
bound
fcomip
out
test
jle
rclb
mov
stc
pop
push
jbe
sti
or
jg
jo
stos
pop
dec
roll
or
mov
ds
jo
imul
sub
jg
pop
inc
ja
test
scas
cmc
testl
adc
inc
mov
push
sbb
mov
sti
sub
cmp
lods
roll
xchg
jb
cli
mov
ljmp
divl
cwtl
cltd
push
pop
rcll
xchg
jns
dec
loop
cwtl
or
out
inc
mov
in
xchg
adc
pop
mov
fdivrp
sub
or
fisubrl
jmp
cmp
xor
sbbl
dec
fcomps
xor
test
inc
sbb
cltd
mov
fistl
push
sub
test
or
in
mov
in
out
push
jbe
popa
stos
mov
arpl
icebp
jb
lock
mov
jno
sub
addb
mov
iret
and
lahf
or
pusha
or
pushf
dec
cmp
jmp
xchg
mov
pop
sti
out
push
cmpsl
cmpsb
dec
aad
cld
sbb
sahf
jne
clc
jle
add
out
ljmp
clc
mov
push
push
sub
jno
sti
cmpsb
rcrl
dec
fdivrp
mov
pop
pop
std
mov
shr
jg
jg
cmpsl
fsubl
xchg
pop
addb
clc
mov
scas
add
inc
divb
cli
pop
mov
ret
out
les
pop
xchg
sub
std
or
lret
lods
jle
xor
jnp
inc
loop
mov
flds
lods
sti
sub
test
xchg
pop
popa
jae
fs
and
std
jae
ret
jae
mov
in
dec
mov
mov
les
dec
sub
stc
aas
sahf
js
in
mov
jns
xor
add
jo
sbb
sbb
shr
or
stos
js
xor
mov
mov
flds
inc
bound
push
std
in
push
cmp
shr
sbb
fisttps
call
rorl
mov
pop
gs
outsb
mov
inc
out
enter
inc
xchg
cli
hlt
push
dec
into
dec
mov
clc
add
xlat
lods
test
cmp
push
addl
fnsave
jl
push
pop
pushf
add
lods
addr16
mov
lods
mov
sar
push
ja
es
pop
cli
orb
jle
cs
ljmp
mov
cmpsb
lret
lods
sbb
enter
and
jns
clc
sbb
mov
sub
sbb
push
jnp
push
jb
stos
movsl
cwtl
movsl
jge
dec
adcb
mov
es
dec
sbb
out
or
mov
push
stos
xchg
pop
aaa
sub
dec
adc
sti
subl
inc
out
das
xchg
int3
inc
cli
in
push
mov
sub
xorl
scas
jo
inc
adc
enter
pop
cmp
jp
jmp
pop
insl
in
leave
inc
lds
sbb
aad
popf
sbb
rcrl
imul
pop
stc
cwtl
xchg
push
xchg
or
cmp
fcmovbe
add
xchg
cli
in
add
icebp
sbb
ljmp
je
mov
fadd
push
scas
das
sub
stos
jbe
sub
movsb
push
shll
sub
xor
fisttpl
or
push
sbb
addl
pusha
mov
jmp
sbb
mov
dec
cltd
xchg
and
cs
sbb
and
clc
adc
push
sub
push
jmp
out
dec
push
add
sbb
xor
pop
jae
push
out
sbb
sbb
jl
fistpl
ret
xor
enter
xchg
movsb
lcall
or
cld
jno
cli
xlat
lahf
pop
push
insb
mul
sub
jle
roll
cli
je
inc
lds
mov
push
lds
mov
jmp
in
mov
fimuls
push
shlb
mov
mov
ret
je
clc
sahf
out
imul
jecxz
add
cmpsl
dec
stos
mov
pop
inc
jmp
sti
in
leave
or
sbb
jecxz
stos
addr16
mul
and
ljmp
test
push
sub
clc
mov
cmp
mov
dec
pop
ljmp
test
lock
xorl
in
popf
and
push
jne
outsl
jb
adc
cmp
nop
pushf
pop
je
and
inc
push
in
push
arpl
sbb
lods
dec
push
sub
in
inc
lds
test
sub
je
imul
sub
ud0
iret
or
xchg
dec
lret
jb
sbb
dec
int3
mov
sbb
and
test
or
mov
clc
add
pop
sub
rcrl
ret
jo
push
lock
xor
mov
in
pushf
pop
cmp
pusha
add
add
test
mov
push
nop
mov
fmul
fcomip
add
rolb
pop
cwtl
push
cmp
mov
add
sub
ret
sbb
inc
mov
mov
lahf
popa
pop
xchg
aaa
imul
into
pusha
sbb
and
in
ficomps
out
enter
inc
aam
sti
pop
enter
loop
cmp
mov
pop
adc
xchg
jmp
popaw
mov
loopne
rcrb
sti
mov
std
jnp
sar
iret
mov
fsubrp
xor
cmp
subl
pop
pop
mov
and
mov
fnsave
xchg
or
xor
aam
push
xlat
ljmp
mov
ficomps
insb
int3
movsb
rclb
fistpl
mov
cmpsw
inc
mov
xlat
stos
lret
fcoml
cmc
mov
push
mov
cmp
sub
mov
push
jle
adc
sub
imul
popa
inc
pop
cmp
pop
pop
imul
dec
lahf
mov
push
or
mov
std
sub
mov
fldcw
stos
in
cwtl
xor
sbb
out
ret
fmul
sub
jmp
dec
or
sub
repz
xchg
cmp
int
gs
sub
dec
jecxz
jmp
sub
test
jns
sub
cltd
adc
sub
inc
or
ds
imul
test
pop
mov
pop
cmp
ret
mov
mov
dec
mov
inc
sub
imul
sub
mov
sub
cmp
icebp
xor
clc
cmp
xor
int
test
loopne
jg
push
std
add
mov
inc
push
stos
sub
out
sbb
or
push
cmp
mov
sub
xor
mov
and
imul
nop
test
daa
mov
jmp
das
cmpl
and
jmp
mov
and
imul
adc
push
push
sub
adc
lock
add
or
dec
lret
in
outsl
mov
and
add
or
stos
dec
sub
movsl
sbb
cmp
lret
dec
pop
jg
fdivrl
adc
push
sub
jns
hlt
scas
xchg
xlat
jo
inc
mov
dec
rcll
fimuls
sub
sbb
imul
negl
push
xor
sub
je
adc
dec
pop
imul
sub
pop
mov
mov
inc
push
call
addb
jae
cwtl
pop
mov
and
rcr
dec
and
sub
sbbl
fsubs
sub
jns
popl
xorb
sub
adc
daa
cwtl
pop
repz
jno
sub
jmp
mov
sahf
outsb
inc
call
pop
mov
sub
in
movsb
insb
jecxz
sub
jb
dec
lods
jle
jo
push
notb
or
icebp
shr
ja
sub
mov
imul
mov
lods
pop
push
je
jg,pt
mov
sbb
out
xchg
and
jne
push
fwait
push
stos
sub
and
aaa
sahf
sub
fwait
push
es
pop
xlat
jge
adc
sub
mov
sub
orb
in
je
bound
loope
or
jne
dec
pusha
sub
xor
mov
repnz
pop
iret
jmp
sub
mov
lcall
sbb
aaa
sub
add
call
add
sub
mov
lahf
cld
test
mov
jb
dec
insb
or
sbb
mov
outsb
stc
lcall
dec
movsl
popa
adc
inc
ret
in
add
xor
add
mov
jns
stc
xchg
lock
mov
cmc
arpl
mov
sub
sbb
stos
nop
sub
cmpsb
or
fidivl
push
jb
dec
or
sub
inc
and
incb
sub
lahf
jmp
mov
jg
or
sub
int
mov
mov
sub
negb
adcb
or
jg
lds
call
sub
cmp
imul
add
inc
or
aam
aad
stos
push
int
movsb
imul
push
inc
jg
outsb
xor
stos
add
xchg
daa
xor
ss
enter
sub
out
xchg
mov
shll
adc
pop
out
mov
pop
jge
movsb
lods
fisttpl
pop
arpl
movb
or
add
cmp
lods
sub
add
sub
xor
or
sub
sub
push
inc
push
cmp
fidivs
arpl
cli
hlt
or
sub
mov
bound
or
jl
or
push
loop
mov
ja
sub
shll
pop
sahf
xchg
and
jl
cmp
popa
lods
int3
sub
jmp
add
or
sub
cwtl
sub
sub
mov
imul
std
jne
call
in
xor
cli
fnsave
dec
sub
movsb
inc
sbb
aaa
sbb
imul
cwtl
mov
sub
jmp
outsb
hlt
iret
and
jmp
stos
push
call
scas
sub
loopne
adc
sti
mov
mov
das
sub
or
mov
jl
aam
inc
daa
dec
inc
orl
cmp
fcmovnb
outsl
pop
or
and
movsl
xor
push
cmpsl
xchg
mov
in
sub
fwait
push
call
pop
jle
data16
cmp
add
mov
or
jg
jmp
popf
and
and
xor
pop
es
dec
cmpsl
adc
sbb
mov
out
sub
sub
add
or
xchg
or
imul
sbb
test
mov
icebp
xchg
xor
add
call
sub
xor
pop
sahf
pop
pop
mov
sbb
push
inc
scas
jg
sub
xchg
adc
push
fsubrs
pop
cld
aaa
mov
sub
sub
stos
dec
dec
repz
dec
mov
rolb
sub
sbb
jbe
jb
xor
push
insb
push
xchg
add
jle
in
cld
pop
cmc
pop
das
dec
test
incl
xlat
into
mov
out
dec
sub
cli
test
jbe
lock
daa
push
fs
jge
xchg
add
jmp
or
ret
or
dec
test
push
sub
test
es
aaa
mov
pop
ja
xor
imull
jl
fnstcw
ljmp
movsb
fsubr
imulb
xchg
aad
pop
stos
pushf
jmp
loop
outsl
mov
jp
xchg
mov
andl
sub
jmp
inc
xchg
mov
mov
ret
sub
int
shrl
repnz
cmp
or
jbe
aaa
pop
mov
fdivrs
sub
xor
inc
cmpsl
clc
repz
test
lahf
das
loope
leave
xlat
pop
mov
in
imul
dec
sahf
jg
sub
fsubrs
sub
mov
cwtl
iret
es
repnz
or
movsb
sub
sub
mov
sub
imul
sub
sub
cld
mov
fisubrl
negl
stc
test
std
pop
test
pop
repnz
dec
sti
add
sub
fxch
pop
inc
sub
cmp
fstpt
mov
fcmovnbe
xor
scas
je
mov
outsl
ret
xchg
gs
mov
jbe
inc
inc
icebp
dec
add
sub
clc
and
adc
xchg
sub
xchg
pushf
mov
ss
pop
xchg
xchg
mov
fbld
arpl
fs
dec
push
mov
or
jb
xchg
mov
mov
adc
push
in
fsubrl
outsb
add
stos
jecxz
nop
or
jge
pop
push
jns
mov
jno
pop
sub
mov
push
sub
and
mov
cmp
fisttpll
cld
sub
sbb
in
ds
stos
fsts
jge
mov
insl
popa
xchg
lods
les
mov
jle
bound
xor
mov
jmp
fidivrs
aaa
adc
xchg
aam
sub
push
jns
add
les
iret
xchg
addr16
sub
push
gs
or
add
and
cmpsb
sbb
jge
dec
into
jb
mov
push
out
fadd
xor
daa
push
xchg
dec
mov
sub
or
sub
enter
mov
xor
adc
loopne
inc
mov
or
cli
fwait
rorb
cmp
test
push
popa
mov
mov
outsb
lods
inc
mov
cmp
jno
dec
sub
shlb
aam
pop
cmp
cli
ret
outsl
dec
mov
sub
addr16
imul
syscall
sub
xchg
and
push
scas
mov
cltd
repz
arpl
jo
cmp
jp
scas
ss
call
das
xor
mov
adc
ds
call
popa
sahf
sub
jns
test
add
sbb
push
sub
ja
pop
repnz
decl
ljmp
push
xchg
mov
lods
pop
inc
sub
mov
aas
or
jl
adc
push
push
inc
mov
sub
test
loope
or
inc
mov
mov
ret
rolb
dec
shl
iret
pop
arpl
and
pop
ficoms
pop
call
into
jae
jmp
fs
sub
int
int3
pop
adc
pop
mov
fdivrs
adc
or
jns
es
jb
movsb
jno
sub
dec
popf
lds
pop
mov
mov
loope
xchg
jae
enter
cmp
inc
sub
iret
cltd
and
es
in
adc
sbb
sub
mov
inc
and
jmp
adc
sub
je
hlt
scas
pop
sbb
dec
and
dec
sub
sub
pop
push
sub
test
add
mov
scas
repnz
test
sub
dec
cmpsb
bswap
rorb
sti
xor
das
cmp
inc
jmp
test
notl
sub
xchg
call
sbb
ret
flds
pop
loop
les
dec
sub
das
test
rorl
lock
nop
push
mov
jecxz
sub
mov
stc
sub
mov
mov
loope
aas
stos
fmuls
iret
cmp
scas
sub
lods
lret
push
or
inc
mov
sub
aad
outsl
jbe
add
sub
in
sahf
and
jg
xchg
mov
mov
data16
pushf
dec
push
jg
fadds
mov
cmp
mov
cmp
or
lahf
ds
int3
adc
dec
stos
dec
push
cmpsb
add
fnsave
mov
adcb
and
push
es
pop
xchg
xlat
negb
push
sub
fmull
nop
bound
sub
mov
push
sub
dec
insb
mov
sub
stos
inc
bswap
mov
inc
xor
sub
popa
mov
and
xchg
xchg
cmp
lret
dec
out
push
sti
fsub
mov
fisubrs
pop
push
xchg
dec
xchg
cmp
rep
lods
and
mov
cmpsl
cmpsl
push
xchg
movsb
xor
inc
xchg
fistpl
adc
mov
rclb
fcomps
jle
sub
imul
sub
cmp
add
cli
mov
inc
dec
push
test
mov
xor
xor
dec
adc
dec
mov
and
lods
sub
packssdw
mov
js
mov
push
add
pop
or
mov
pop
inc
mov
lods
sbb
es
sub
and
jne
int
push
je
sub
dec
out
rolb
ficomps
pop
cmp
fists
lahf
fidivrs
mov
xor
in
out
aad
xor
pusha
and
cmp
mov
in
stos
mov
sub
xchg
sub
call
pop
lock
xchg
sti
subl
div
pop
in
sub
out
iret
int
arpl
jmp
ret
inc
mov
test
jns
cmpsb
mov
mov
aam
xchg
test
xor
sub
andb
idivl
sub
lret
dec
cmpsb
sub
dec
add
sub
aad
cmpsl
stc
popa
out
stos
sub
mov
xor
fsubrl
mov
inc
shlb
scas
cmp
mov
sub
repnz
jmp
add
iret
into
std
mov
subl
inc
mov
sub
mov
cli
mov
sub
in
inc
hlt
jecxz
mov
cmc
mov
dec
je
mov
fisttps
sub
inc
enter
mov
dec
fwait
int3
mov
pop
aaa
add
fdivl
mov
dec
push
dec
adc
mov
sub
rol
jbe
inc
sbb
push
adc
dec
imul
mov
insb
or
rol
fimuls
push
xchg
insb
jne
push
stos
sbb
pusha
or
or
data16
imul
sub
jno
dec
dec
mov
out
ret
sub
test
push
mov
add
sbb
sub
pushf
inc
test
jae
lahf
sbb
sub
inc
pop
pop
inc
movsb
mov
add
and
pop
loop
bound
adc
rorb
icebp
sbb
or
scas
mov
test
lcall
pop
lock
out
sub
daa
xor
sub
or
imul
sub
or
pop
sub
ds
test
outsb
bnd
fisubrs
sub
add
sub
sub
mov
outsl
sbb
stos
sbb
shl
outsl
inc
sub
dec
aas
inc
stos
push
in
pop
fsubrl
fmuls
mov
loop
aad
andb
xchg
nop
cmp
fldcw
push
add
mov
pop
push
jmp
test
sbb
xchg
dec
aas
sub
jle
xchg
sbb
sub
fmuls
aaa
mov
push
cltd
test
pushf
pop
lahf
sub
and
out
mov
xor
out
mov
xchg
inc
les
jno
repnz
stos
rcrl
enter
sbb
inc
and
cwtl
mov
in
xchg
int3
fistpll
add
imul
in
sub
sbb
dec
into
xor
roll
call
cld
test
mov
sub
cmp
adc
sub
pop
sub
mov
sub
sbb
sub
fmuls
ss
dec
movsl
and
add
lret
sub
movsl
adc
jb
xor
mov
and
dec
test
out
dec
gs
pushf
mov
fidivrl
sub
stos
sub
out
cli
cs
repnz
cltd
mov
sub
out
mov
sub
out
gs
xor
mov
negl
sub
mov
repnz
sub
dec
mov
push
sub
clc
pop
movaps
sub
pop
call
int
jo
jae
subb
pop
push
popf
lcall
enter
lds
arpl
repnz
sub
or
mov
push
nop
test
cmp
xor
shrb
sub
aas
daa
adc
sub
push
cmp
mov
xor
mov
sub
in
lcall
outsb
cmpsl
or
inc
or
inc
add
aas
jl
repz
adcb
shrl
xlat
and
and
mov
aam
cmpsl
sub
sub
lea
sub
lahf
mov
movsb
lret
or
les
imul
lcall
repz
lock
cmp
dec
add
cld
out
or
sub
ret
test
filds
popa
jp
cmp
into
fisubs
or
pop
and
flds
and
out
out
sub
in
daa
test
inc
mov
xchg
test
jns
sahf
push
push
sub
or
xchg
outsb
lcall
jecxz
fidivrl
dec
mov
std
in
aaa
pop
rorl
movsb
fnstsw
sub
xor
mov
dec
loope
mov
fcomps
mov
out
sub
aaa
out
mov
fnstsw
imull
push
ret
add
and
roll
iret
cmpsb
or
sub
jecxz
pop
dec
jecxz
out
subl
xchg
add
lds
test
cmpsb
stos
test
sub
push
std
mov
fwait
mov
push
sub
mov
imul
jne
stos
loopne
in
xor
in
mov
shl
out
push
icebp
jae
adc
and
lahf
rcrb
fisubrs
pop
int
inc
cmp
sub
mov
cld
xor
xor
iret
pop
and
jae
dec
mov
and
popf
xor
mov
inc
stc
push
test
imul
nop
dec
jmp
sbb
mov
dec
inc
out
call
sub
adc
enter
xchg
xchg
and
cmp
test
aas
xchg
shrl
xchg
test
ljmp
jge
add
call
ds
sub
in
loopne
and
sub
add
xchg
or
outsl
jle
adc
xlat
cld
ljmp
and
xchg
cmpsb
call
push
add
cmp
cli
mov
cmp
jmp
stc
fisubrs
dec
push
add
std
or
push
ljmp
cmpsb
sub
xchg
lcall
xchg
sub
cmp
sbbl
adc
imul
stc
jmp
aad
cli
sub
xchg
mov
dec
int
xchg
or
jae
jo
cmp
push
test
repz
pop
xlat
adc
cmp
imulb
sub
push
test
ficomps
cli
popa
lret
pop
insb
addr16
sub
hlt
mov
push
jb
int3
sub
rcll
mov
push
sub
mov
sub
enter
add
and
movsl
popa
out
mov
fnsave
dec
and
jbe
sub
jo
loop
sub
mov
imul
jecxz
pop
scas
or
mov
lea
jbe
je
and
pop
fcoms
fwait
mov
push
mov
mov
mov
sub
faddl
push
mov
xor
mov
push
ds
int
bnd
or
or
daa
imul
cmp
out
nop
push
cmpsb
jg
fsubrp
les
in
xor
sbb
mov
jo
sbb
sub
fwait
or
jg
sub
add
mov
ds
mov
sub
in
ss
fdivrs
pop
jno
sahf
add
movsl
sub
stos
pop
sub
push
or
in
and
dec
sub
pop
jne
mov
dec
pushf
test
rolb
jmp
dec
lahf
aaa
insb
test
adc
gs
xchg
ds
sub
je
out
xorb
sbb
out
jge
ljmp
shll
and
dec
mov
ljmp
dec
mov
clc
insl
stc
cmp
mov
clc
sbb
or
lods
mov
daa
scas
shrl
movsb
pushf
negb
cmp
sub
inc
clc
mov
mov
dec
sub
push
and
xlat
xchg
mov
imul
add
ret
pop
sbb
jae
daa
pop
stos
movb
push
jno
gs
int
cmpsb
imul
adc
jns
jmp
mov
fsubl
lret
loopne
bswap
pushf
pop
leave
cmpsb
fs
roll
clc
sti
fs
movsl
shrb
xor
es
popa
cli
xor
push
repnz
jmp
dec
pop
pop
jmp
rorb
aad
outsl
dec
imul
in
sub
jb
lds
mov
mov
mov
fstl
shll
jmp
clc
or
ljmp
fcoml
adc
push
ds
scas
lods
ja
outsl
sub
xchg
jecxz
cmp
dec
jmp
xchg
push
loop
pop
popa
mov
inc
mov
or
iret
push
pusha
gs
clc
pop
mov
and
xor
jp
arpl
test
jmp
and
jno
loope
mov
push
jo
insb
jns
pop
cmp
push
xor
fisubs
dec
movsb
stos
pop
lahf
fisttps
sub
dec
dec
jbe
cwtl
push
mov
xor
cs
les
lcall
push
push
scas
dec
push
pop
pop
aas
push
pop
int
pop
jne
jmp
nop
shlb
cmp
cli
addr16
xor
jne
scas
inc
jae
xor
loop
les
fdivr
movsl
daa
in
sub
sub
fwait
scas
enter
lods
pushf
loopne
cmp
mov
clc
inc
jb
call
push
outsb
stos
stos
xchg
xlat
adc
popa
dec
xor
push
sub
cli
outsb
mov
mov
jo
cli
mov
sti
popa
jl
loopne
fimull
or
cld
ret
xor
xchg
mov
mov
inc
stos
cmp
inc
out
in
add
mov
mov
mov
rorl
pop
jmp
sub
xor
push
sbb
jecxz
jle
je
stos
sub
shrl
mov
pop
clc
pop
cmp
mov
pop
clc
add
cltd
ss
push
sti
xor
testb
cmp
jmp
test
push
adc
add
mov
repnz
push
movsl
insb
pop
push
sub
inc
shrb
cmp
hlt
nop
imul
pop
ret
sbb
popa
xor
mov
sub
mov
jmp
mov
adc
jne
popf
sub
jnp
pop
xor
sub
mov
push
sbb
adc
insl
jne
jl
loopne
lods
and
fwait
mov
push
daa
add
pop
aas
xor
pop
adc
icebp
lods
and
js
cwtl
mov
xchg
sub
pop
aaa
xorl
js
dec
jno
in
nopl
inc
andb
mov
sub
sbb
xchg
sar
lods
push
sub
push
iret
mov
call
xor
mov
les
and
test
aad
icebp
inc
sub
test
mov
add
mov
sbb
fisubs
into
add
jnp
icebp
sub
jle
push
gs
scas
inc
add
pusha
scas
test
movsb
aaa
sub
jno
mov
mov
push
js
and
inc
shlb
enter
ljmp
dec
nop
sti
pop
cmc
or
jb
inc
sub
rcrb
in
aaa
sub
pop
jp
xchg
leave
add
popa
adc
pusha
pop
test
pop
xor
movsb
scas
sub
push
xchg
sub
push
pop
loopne
orl
sub
cmpsl
out
shrb
ret
movsl
fpatan
jmp
mov
shrb
pop
stos
jnp
outsl
and
insb
fcmovbe
lea
into
xor
test
mov
jecxz
data16
js
fldt
add
pusha
test
les
mov
sub
fmuls
jmp
fidivrs
sti
lret
leave
jg
push
daa
add
adc
mov
dec
add
fldt
sub
iret
mov
cmp
idivl
or
adc
repnz
fwait
jb
into
sub
xchg
fcomp
sub
xor
and
sub
adc
ret
lds
in
mov
pop
out
xor
sbb
shlb
mov
sti
push
xchg
shl
jne
test
hlt
outsb
sub
in
in
cmpsb
sbb
dec
popa
and
mov
jno
adc
imul
lea
fucomi
dec
xor
incl
mov
jecxz
insl
sub
sahf
in
test
test
jne
cmpsl
bound
daa
dec
xchg
les
jecxz
cwtl
mov
aam
xorl
xor
fwait
shrl
push
and
push
iret
mov
insl
xchg
jp
ljmp
data16
rcl
adc
inc
test
jne
out
fsubrs
pop
inc
dec
mov
mov
adcb
xlat
mov
lret
jb
sub
lcall
sub
mul
mov
stos
sub
sub
das
aaa
jge
inc
pop
sub
pop
or
sub
fdivrl
jnp
inc
dec
popa
dec
inc
cwtl
call
mov
sarl
pop
subb
sti
mov
gs
xor
xor
rolb
testb
push
ja
push
jl
pusha
adc
sub
cli
push
lret
inc
fs
sub
fstp
cltd
js
lock
xor
sub
in
sbb
xchg
inc
adc
sub
sbb
jnp
enter
sub
sbb
out
sbb
sbb
insb
ds
add
add
and
sub
hlt
cld
jmp
and
out
sub
jmp
pop
in
xor
and
inc
sub
aad
les
adc
or
lds
into
imul
sub
mov
xor
jno
sub
lea
movsl
mov
mov
push
popa
sbb
les
sbb
loop
lret
adc
or
jle
jns
sub
scas
adc
pushf
stos
mov
jecxz
and
add
pop
clc
sub
sbb
ds
mov
gs
sub
jb
dec
ja
adc
pop
hlt
insb
mov
out
loopne
xor
inc
cmp
cltd
int3
xor
jns
mov
shl
loop
les
xchg
test
repz
xchg
sub
popf
mov
mov
mov
ret
loopne
sahf
mov
cld
cltd
dec
push
out
pop
jmp
sub
sbb
cmp
sub
test
mov
inc
repz
les
inc
ljmp
xchg
sub
dec
loop
loope
mov
pop
sub
sbb
adc
add
sti
xor
fs
psubb
je
mov
fldt
push
sub
jecxz
xchg
lds
ja
pop
xor
popf
xor
xchg
lods
dec
jecxz
sub
sub
mov
mov
xlat
imulb
jo
in
add
mov
sub
and
icebp
ja
imul
mov
mov
aad
push
sub
icebp
loop
xlat
jno
dec
sub
dec
test
sub
inc
fmull
in
sub
dec
mov
std
lcall
aad
stos
sarb
add
out
loope
mov
add
dec
insb
sub
jno
out
mov
inc
filds
sub
int
xor
sub
sub
out
je
mov
mov
inc
pop
sub
jmp
mov
mov
mov
out
mov
imul
jb
shll
sub
sub
mov
sub
pop
sub
xor
iret
jmp
pusha
push
push
popa
inc
sub
jae
dec
mov
fsub
je
pop
js
fnstenv
xor
stos
xor
rcll
cmpsb
fsts
xor
pop
cmp
aad
fsubrs
fisubrl
add
dec
jecxz
or
les
adc
lds
filds
pop
mov
lock
repnz
and
stos
mov
push
inc
aaa
sbb
pop
mov
push
xchg
push
aam
push
subl
sub
adc
sub
mov
inc
sub
jecxz
mov
cmp
fwait
pop
adc
call
jns
je
int
sbb
pop
stos
pop
sbb
inc
lahf
enter
inc
mov
jecxz
lea
addr16
or
xor
jp
mov
adc
sub
sub
dec
rcrl
pop
xchg
push
cmpsl
xchg
iret
lods
pop
jle
loopne
mov
jp
enter
dec
popf
test
adc
inc
jl
cmp
mov
cld
sub
mov
mov
pop
loopne
dec
shll
int3
xorb
pop
cmp
dec
or
imul
je
adc
push
in
inc
fsub
movsl
popa
into
sub
xchg
mov
pusha
cmpsl
cmp
mov
mov
cmp
jg
aas
insb
sub
adc
jl,pn
in
insb
push
sub
fsts
mov
popa
data16
jmp
into
cmp
cmpsb
xor
in
dec
mov
scas
lods
in
sbb
fdivrl
movsb
icebp
dec
sbb
and
popf
dec
mov
sub
sub
iret
mov
iret
sub
rcll
push
mov
mov
and
out
aaa
lea
pop
jmp
jb
scas
jnp
mov
adc
jae
jns
stos
ljmp
jbe
cmp
mov
add
cmp
lds
sbb
decb
aam
leave
es
cmp
and
aad
pop
das
clc
sub
jno
mov
in
sub
mov
in
sub
rorl
sub
add
mov
test
and
imul
xchg
sub
clc
mov
in
jle
test
jo
out
aam
sbb
clc
jb
rorl
mov
sbb
das
xorb
scas
jnp
cwtl
scas
pop
mov
enter
pop
mov
icebp
jmp
push
icebp
icebp
push
fdivr
lret
xchg
pop
mov
ficoms
jo
iret
loop
dec
mov
scas
inc
aad
cli
idiv
dec
mov
push
aad
pop
inc
repnz
ja
sub
rclb
adc
dec
jecxz
shll
fmull
pop
repz
test
out
aas
cli
jb
pop
adc
iret
cmp
test
pop
out
add
cmp
gs
mov
pop
cld
scas
dec
sbb
fadds
adc
and
lds
mov
cs
pop
insl
in
cli
mov
cmp
sub
or
imul
or
ds
push
idivl
outsb
repz
hlt
jmp
inc
in
jl
ds
addb
pop
sti
mov
or
enter
pop
negb
icebp
push
push
xor
movsl
loopne
adc
or
pop
xchg
jmp
mov
lds
pusha
mov
xchg
inc
mov
std
inc
cmpsb
inc
and
mov
or
or
jo
mov
mov
jge
sbb
add
lret
les
xlat
ss
mov
inc
jmp
shrl
sub
jp
mov
rol
adc
sub
or
repz
cmpsb
es
aam
sub
pop
inc
push
jae
ljmp
in
jnp
lea
sbb
es
les
clc
xor
repnz
popf
and
outsl
outsb
push
push
add
cltd
aas
mov
xorl
add
dec
leave
push
push
mov
pop
into
push
inc
inc
cli
lcall
push
dec
aaa
xchg
call
adc
xchg
les
mov
bound
lock
push
mov
roll
stos
add
cmp
jge
lods
test
dec
xchg
idiv
mov
push
jbe
cltd
adc
inc
out
mov
lods
hlt
sbb
lds
repnz
scas
mov
mov
negl
in
xor
sbb
inc
push
out
push
push
and
loopne
addr16
les
sti
int
inc
add
shll
arpl
je
je
adc
inc
scas
pop
or
mov
and
pop
nop
fwait
les
jnp
fidivrl
rorl
pop
scas
aad
inc
push
jnp
test
mov
rorl
int3
jl
iret
adc
cmp
add
mov
popf
and
jb
pop
push
in
popa
mov
jnp
bound
imul
lods
or
out
push
mov
jg
shlb
out
add
or
sbb
cwtl
mov
aad
cld
dec
imul
push
mov
mov
ljmp
xchg
js
cmp
rorb
pop
out
pop
mov
cmp
pop
cmp
mov
push
bound
fucompp
scas
add
rcll
mov
js
mov
xchg
mov
push
mov
das
pop
mov
add
flds
fs
lret
push
push
inc
cli
and
loope
sti
dec
jecxz
nop
sub
mov
push
test
outsb
jmp
stos
mov
les
pop
pop
insl
mov
stos
dec
adc
pop
shrl
aam
and
pop
dec
je
test
cmpsl
outsb
mov
add
repnz
sti
outsw
cmpsb
sbb
repz
shlb
sbb
jo
fcomps
clc
popf
and
sub
jecxz
adc
clc
sbbl
mov
inc
cli
xor
pop
stc
inc
inc
cmp
add
cmp
or
rol
xor
and
jecxz
lret
pop
adc
pop
stos
sub
cli
push
and
lahf
lret
lret
jnp
inc
popf
xlat
movsl
cli
sbb
xchg
jge
add
mov
mov
sbb
addr16
jp
addr16
xchg
pop
sub
sahf
pop
imul
outsl
sub
xlat
add
test
mov
in
imul
packuswb
loop
mov
ds
lods
dec
dec
jg
jae
cmp
push
mov
xchg
push
mov
xchg
xor
and
add
fadd
push
lcall
rorb
daa
dec
icebp
push
incl
mov
add
xlat
out
mov
cmpsb
test
cmp
sti
pop
clc
mov
xchg
test
sub
or
mov
pop
imul
mov
sti
sub
cwtl
mov
dec
adcb
in
popf
pop
iret
cs
or
mov
mov
and
orl
xor
dec
mov
pop
sub
les
xorb
adc
stos
sti
das
mov
adc
jno
inc
mov
or
mov
and
pop
popa
mov
mov
clc
cli
lds
inc
cmc
xor
fmuls
gs
int
out
test
jo
dec
add
fs
and
jns
inc
cmp
js
pop
inc
rol
lret
shll
mov
jecxz
mov
sub
push
movsb
outsb
dec
xchg
ja
jl
rcll
adc
jmp
dec
dec
data16
aam
jae
fists
in
nop
xchg
cmp
sbb
clc
adc
sahf
ffree
pop
into
arpl
xor
stos
xchg
pop
sbb
das
xor
sbb
cmp
adc
mov
ds
add
add
in
mov
sbb
bound
sub
xor
lods
add
and
ret
popf
int
adc
jg
xor
mov
and
insb
pop
cli
jmp
icebp
jecxz
jno
adc
divl
dec
jno
mov
imul
sbb
dec
and
push
mov
mov
adc
out
push
adcb
test
jbe
sub
in
lods
stos
push
pop
cwtl
je
scas
cmp
iret
ffreep
pop
xchg
lds
xor
repnz
xchg
pop
or
pop
aaa
or
fucomi
mov
fisttps
in
cmpsb
arpl
daa
mov
and
pop
cltd
leave
ss
jp
stos
push
mov
inc
sbb
shl
shlb
stos
xchg
clc
lret
cwtl
insb
mul
pop
aas
jb
push
mov
lret
dec
dec
inc
dec
bnd
mov
jmp
sbb
outsb
fs
out
aam
fdivrs
push
push
in
cmp
sti
xchg
pop
inc
outsb
mov
mov
popa
jbe
rcrl
pop
jp
pusha
sbb
inc
push
push
fs
xchg
adc
mov
sub
cmp
int
xor
jns
sub
cltd
popf
das
fimull
push
sub
in
add
ret
sub
movsl
ret
ljmp
sub
xorl
and
jg
cltd
sub
xchg
js
sbb
sub
test
lods
pop
std
xor
sbbl
nop
sub
leave
or
ds
out
mov
sbb
sub
cli
jl
movsb
xchg
inc
push
test
adc
ds
aaa
jne
sub
in
fldpi
sub
paddusb
mov
sub
add
push
mov
jg
out
lds
mov
js
xchg
sub
mov
dec
inc
jg
loopne
xor
push
dec
test
iret
pop
sub
xchg
lds
sub
mov
test
or
ja
hlt
scas
inc
sub
fldenv
sub
lahf
addr16
push
call
or
pop
bound
sbb
ds
loope
in
test
ret
cmc
outsl
push
sbb
push
cld
leave
stos
insb
push
adc
jae
fs
stos
ret
sahf
cmp
sub
loop
pop
sub
int3
js
shrb
mov
outsb
idiv
sti
out
fldcw
sub
sub
movb
sbb
sub
leave
mov
mov
jb
aaa
inc
ret
sub
push
popf
into
arpl
pusha
push
outsb
dec
scas
es
repz
lods
pop
nop
clc
adc
sbb
stos
sbb
rolb
leave
xchg
sub
lods
push
mov
inc
sbb
jge
lock
outsl
or
add
sub
stos
arpl
mov
lods
dec
jge
cmp
imul
pusha
arpl
mov
shll
sub
dec
inc
ret
push
in
or
xor
jl
in
repnz
es
sarl
int3
bound
add
aaa
dec
test
shlb
lods
cli
inc
xor
sub
inc
or
and
mov
xor
jecxz
popa
sub
sub
pusha
xor
jmp
cmp
sub
testb
sub
int3
xor
inc
out
and
mov
lea
shrl
sub
addr16
enter
sbb
lahf
test
and
sub
and
lea
jbe
ja
mov
popf
push
outsb
les
sub
mov
mov
movsl
mov
scas
sub
pop
pop
data16
sbb
test
shl
or
jbe
mov
es
add
dec
fnstsw
stos
cmpsb
in
xchg
cmp
and
or
lods
flds
cs
insl
sarb
ret
subb
push
and
scas
mov
test
jo
mov
xor
lahf
jge
dec
negl
clc
sbb
sub
sub
out
sub
jle
outsl
nop
or
xchg
cld
aam
push
dec
sub
fmul
mov
add
pop
dec
sub
xchg
push
xor
leave
loopne
popl
inc
jno
sub
scas
and
jnp
lret
cmc
jg
movsb
enter
les
in
add
ds
mov
jp
fsubrl
and
mov
insb
hlt
gs
push
xor
or
dec
sub
mov
popf
jne
ljmp
test
subb
pop
daa
fdiv
mov
idivb
shl
test
inc
sbb
adc
mov
xchg
add
insb
mov
jp
movsb
outsb
lret
cmp
adc
loop
mov
sub
mov
notb
insl
arpl
mov
outsl
jb
testb
sub
arpl
sub
mov
sub
in
add
mov
sub
push
sub
or
push
mov
sub
lods
cltd
xchg
mov
sub
jns
inc
incl
xchg
fadds
fldenv
shrb
pop
jecxz
mov
dec
shrl
push
clc
lea
jg
subb
jp
ljmp
push
adc
mov
outsl
pop
aad
sub
shll
inc
jnp
imulb
inc
out
jge
xor
add
cs
mov
mov
sub
out
push
jae
inc
insl
mov
cmc
das
sbb
sub
ret
call
insb
idivl
popa
sub
roll
fimull
sub
inc
jl
fs
mov
cmp
hlt
bound
dec
stos
sub
leave
lock
add
outsb
scas
ja
and
fsubrl
dec
fs
jmp
bound
outsb
movb
push
fsubrs
in
sahf
lds
push
add
dec
stc
inc
pusha
mov
pop
cli
pop
and
loop
sbbl
mov
xchg
push
subb
xor
fwait
sub
aaa
add
inc
lods
push
stos
lret
bound
fldt
add
push
shlb
adc
hlt
adc
jb
sub
sub
lret
adc
pusha
insb
mov
cmpsl
enter
sub
lret
xchg
push
sub
pusha
jo
mov
cmp
dec
mov
dec
mov
sub
inc
ret
in
in
and
mov
cli
sub
xor
xchg
inc
test
sub
mov
pop
push
mov
sub
test
loop
sub
jbe
adc
int3
mov
loope
in
pop
pop
mov
jg
out
cld
cmp
jns
repnz
imulb
sub
sub
push
dec
adc
mov
cmp
mov
int
push
les
shlb
lods
sub
imul
jae
sub
in
shlb
scas
sub
sbb
cmpsb
cmp
xchg
sub
sub
stos
jno
outsb
inc
sub
dec
adc
sub
mov
arpl
mov
xor
shrl
mov
xor
or
js
outsb
xor
sub
pop
mov
les
cmpsb
sub
xchg
sub
mov
mov
mov
addl
call
mov
cmp
pushf
xlat
jmp
mov
add
rep
cmpsl
or
lret
and
or
mov
adc
fsubr
pop
outsb
fildll
xor
xchg
sub
push
stc
sub
ret
jmp
incl
push
and
adcb
adc
add
jno
xchg
push
call
stos
gs
ljmp
aad
adc
nop
cmpsl
mov
mov
lods
dec
daa
sub
xchg
mov
add
add
mov
shlb
daa
sahf
shrl
jbe
jmp
pop
orl
xchg
pop
jecxz
push
adc
cltd
loope
or
sbb
pop
add
and
pusha
clc
dec
push
sub
nop
mov
sub
mov
dec
adc
mov
dec
pop
aas
mov
imul
fs
sbb
sub
cmp
sub
das
cmp
sub
mov
sbb
and
and
mov
call
testb
mov
pop
imul
mov
and
std
xchg
and
movsl
test
lahf
icebp
push
cltd
push
dec
out
sub
mov
add
xchg
je
sub
pop
mov
out
mov
shlb
ja
ds
insl
lcall
sub
fisubl
fldcw
and
xchg
lcall
jo
push
outsl
int3
push
dec
test
xchg
rorl
inc
xchg
jmp
push
das
xchg
inc
sub
mov
mov
stos
imull
push
sub
out
adc
lods
cli
popf
dec
sub
pop
xorb
and
call
dec
or
inc
push
push
insb
sub
mov
cmp
test
lds
es
fwait
std
cmpb
jl
lcall
or
pop
jge
pushf
fadds
rolb
stos
shrl
aam
or
xor
out
imul
repz
push
andb
cmp
jb
testl
out
jmp
cltd
mov
or
inc
ds
cwtl
sarb
pop
fimuls
xor
sar
mov
jo
or
test
in
daa
loop
cmpsl
mov
cmp
stos
mulw
scas
sbb
mull
cwtl
inc
stos
fcmovu
aas
add
cs
clc
jmp
enter
sub
push
cmovb
adc
roll
ret
pop
clc
int
js
push
and
inc
adc
xchg
in
test
nop
inc
mov
add
ljmp
inc
and
fldcw
ss
cwtl
cwtl
mov
mov
stos
sbb
in
insl
mov
jb
loopne
shrl
lea
cmc
xchg
pop
rol
and
popf
jo
ja
cmp
loopne
adc
xor
mov
jo
sbb
mov
xor
xor
pop
lods
into
mov
movsl
inc
pop
xchg
or
int3
mov
stos
popa
sbb
iret
jb
pop
xbegin
push
popf
daa
fimuls
mov
jmp
and
sub
dec
dec
data16
push
rolb
pushf
mov
scas
in
push
cmp
or
inc
sbb
loop
mov
enter
sahf
xor
arpl
sbb
hlt
adc
popa
dec
push
jmp
and
stos
lahf
fdivl
dec
push
mov
aad
sbb
mov
jecxz
mov
or
mov
jo
loope
jle
push
xor
cmpb
cmp
decb
sbb
jecxz
cmp
xor
dec
xor
imul
jmp
jb
cmp
push
and
jmp
rolb
mov
lods
fidivl
push
lock
aad
push
imul
mov
fcomps
mov
pop
movsb
mov
sub
jmp
clc
dec
adc
cld
pop
lret
aam
icebp
mov
orl
popa
add
mov
cld
jecxz
or
xchg
loopne
sub
enter
in
mov
adc
fldcw
jo
pushf
jnp
stos
inc
popa
push
cli
in
test
out
clc
push
push
les
das
and
sub
dec
sti
cld
out
loopne
cmc
sarb
cmpsl
push
mov
jns
je
push
loopne
pop
add
push
in
or
cmp
mov
or
mov
lcall
fcmovu
push
cmpsb
cmp
sti
out
adcb
bound
ljmp
rorb
sub
popa
mov
popa
cmp
push
jae
aam
addr16
pushf
scas
mov
sbb
hlt
push
pop
out
sbb
sub
xchg
movsb
pop
stos
out
jmp
jb
sti
jbe
sub
mov
push
inc
adc
xchg
push
sub
jnp
lods
jmp
adc
push
aad
clc
mov
jns
loope
mov
into
push
jne
add
sbb
loope
or
loopne
call
mov
test
sub
sti
out
popf
and
mov
sub
xchg
repz
insl
adc
pop
mov
cmp
movsl
push
popf
mov
pop
dec
xchg
push
mov
xchg
and
ret
int
mov
push
aas
sub
xor
fs
inc
mov
xchg
or
in
popw
or
lock
shr
adc
inc
dec
jbe
jle
mov
idiv
insl
loop
push
cmpsl
xchg
and
mov
sbbl
loope
clc
sub
inc
data16
lods
sarl
cli
xor
mov
iret
cli
mov
std
mov
adc
notl
adc
add
sub
gs
adc
enter
ljmp
mov
mov
idivl
xor
jnp
in
lahf
push
mov
fstps
cmp
jb
mov
pop
lcall
jo
pop
mov
lcall
loope
aaa
xchg
outsl
mov
xor
fadds
inc
cli
xchg
mov
es
xchg
and
icebp
and
xchg
cmp
cmpsl
inc
jmp
fsubr
decb
mov
outsb
xchg
mov
test
les
aas
push
mov
push
sub
ss
lds
ret
jnp
dec
and
mov
sub
mov
add
into
lods
test
shll
add
std
enter
pop
out
sbb
scas
cmp
xor
shll
outsb
cmp
sahf
out
push
test
in
push
or
je
cwtl
mov
in
sar
adc
cli
in
cs
add
push
cmp
shrl
xchg
mov
faddl
sahf
neg
push
mov
pop
xchg
insb
outsl
xor
fcmovnu
and
loopne
push
insl
cmc
mov
adc
in
cmpsl
enter
dec
fs
xchg
add
xor
mov
cmp
inc
add
push
jl
lahf
mov
fisubl
and
mov
or
mov
add
inc
insl
subl
cmp
sub
lcall
mov
add
std
inc
mov
adc
adc
pop
jne
mov
or
in
inc
icebp
popa
cmp
xlat
in
imul
cmpsb
or
lds
adc
mov
xchg
mov
das
fprem
jbe
test
pushl
jl
shll
insb
xchg
sbb
and
pusha
mov
dec
icebp
cmp
pop
clc
jge
mov
cli
xchg
pop
xor
imul
xlat
mov
fs
out
and
xchg
dec
imul
mov
mov
imul
push
pop
in
and
cli
lar
ret
or
shr
cmp
fnstsw
lret
xchg
mov
subl
test
lcall
add
ss
jge
or
jmp
push
and
mov
mov
pop
jecxz
xchg
sub
xchg
jmp
jnp
sbb
jo
std
pop
mov
arpl
test
cld
aaa
shl
in
mov
lret
in
leave
or
js
sub
jle
std
add
xchg
pop
bound
add
pop
sub
ret
repnz
cs
dec
xchg
dec
scas
push
lods
add
std
mov
std
jae
sti
lods
hlt
mov
mov
push
outsb
inc
test
xor
pop
cli
mov
and
fdiv
mov
mov
cwtl
cmp
mov
inc
int
pop
or
loope
ja
call
push
mov
mov
jmp
pop
pop
mov
mov
loop
jmp
inc
jno
andb
push
add
mov
cli
cs
jb
xor
fcomi
movsl
div
and
pop
clc
inc
ljmp
pop
push
setle
shr
insl
in
out
subb
jp
repz
xchg
dec
cli
mov
cmp
test
mov
cmp
shlb
lods
inc
jg
test
cli
push
ret
cld
xor
fwait
mov
sarl
addb
jg
sti
push
in
cmpsb
in
or
sbb
add
pop
gs
lods
scas
sub
imul
imul
mov
sarb
xchg
inc
lcall
clc
icebp
out
mov
loopne
push
mov
xlat
lahf
jmp
pop
into
push
lcall
scas
mov
push
pop
mov
cmc
jl
and
push
clc
out
cmp
popf
cmp
les
dec
test
adc
lret
notb
mov
icebp
nop
adc
cli
dec
test
cmc
cmp
ret
hlt
mov
scas
js
xor
add
gs
call
xchg
icebp
dec
int3
lods
add
mov
clc
insl
fnstsw
lret
xchg
mov
dec
lret
push
pop
xor
dec
subb
cmp
add
bound
mov
testl
int3
cmp
iret
adc
inc
pusha
ret
mov
jns
lds
sub
stos
clc
mov
mov
cmp
xchg
ja
sbb
adc
das
rolb
mov
ljmp
jl
into
push
jmp
mov
lret
add
aaa
ret
cmp
xchg
dec
leave
sub
jne
xor
scas
mov
or
or
add
arpl
xchg
push
insl
pop
lcall
mov
sti
fnstenv
out
mov
jle
clc
iret
lods
dec
sbb
cmp
mov
mov
movsb
inc
shrl
xor
dec
pop
insb
ret
push
push
sbb
shlb
jmp
add
push
jp
in
cmp
jnp
cmpsl
dec
jne
rcr
sbb
ss
mov
rolb
sbb
stos
rorl
add
addr16
cmpb
xor
inc
mov
cli
addr16
dec
lods
jb
push
out
jae
fs
out
call
das
les
and
stos
lcall
lret
inc
jle
push
ja
repnz
gs
jg
add
xlat
jmp
dec
clc
xchg
push
jecxz
pop
lret
test
or
dec
int
das
sub
cltd
packuswb
sbb
jmp
jecxz
mov
push
out
add
js
insb
out
scas
push
cmp
push
out
arpl
loope
rolb
scas
sub
or
pop
xchg
fidivl
cmp
mov
xor
fdiv
lahf
adc
addr16
inc
lret
cmpsb
lock
sti
adc
insb
mov
xchg
mov
gs
cmpsl
jbe
sahf
cmc
fcompl
adc
push
repz
out
mov
out
cs
ljmp
mov
push
jmp
cli
xlat
sahf
dec
popa
test
scas
lods
rorl
dec
adcb
scas
dec
mov
js
jo
test
cmp
mov
xchg
fs
cli
arpl
dec
xlat
lods
add
jg
ficoms
pop
push
ficoms
pop
sti
adc
push
adcl
dec
push
cmp
sbb
test
call
mov
mov
and
stos
inc
mov
test
inc
jle
mov
mov
or
sti
push
jae
inc
inc
scas
ret
xor
jns
daa
cmp
insl
pop
in
aad
xor
lret
out
and
or
add
pop
mov
sub
stos
sub
in
out
data16
mov
daa
sti
push
mov
or
sub
sub
mov
ficoms
arpl
inc
rorb
dec
sbb
push
xchg
cmp
add
push
std
and
addr16
mov
xchg
adc
popf
stos
into
sub
fs
mov
clc
sbb
fstpt
cmp
mov
ljmp
out
mov
or
xchg
or
lock
mov
jnp
mov
insl
jne
out
push
and
xlat
cwtl
adc
dec
stos
dec
inc
jnp
daa
pop
lret
les
jmp
clc
rol
inc
inc
out
aas
subb
movsb
iret
add
and
scas
sti
mov
js
sbb
outsb
aas
mov
je
lret
mov
mov
repnz
pop
or
mov
jbe
addr16
jns
fucomi
and
pop
movb
cwtl
inc
movsl
ret
xchg
mov
mov
outsb
sub
push
jg
test
sti
mov
scas
imul
subb
nop
xor
mov
int
jo
xchg
jle
out
scas
xchg
movsl
xor
popf
dec
pop
inc
fnstcw
je
dec
jp
sub
pop
out
outsl
pop
jae
jmp
xchg
imul
sbb
lock
loope
xchg
js
push
jmp
cmp
hlt
xchg
lds
push
test
mov
jns
clc
xor
jb
mov
jb
cli
pop
fisubs
jmp
adc
or
addr16
in
pop
test
idivb
shll
mov
xor
insb
push
dec
sbb
cwtl
push
adc
and
cli
int
repz
jns
or
add
xor
mov
mov
jecxz
bnd
cmp
rol
out
mov
adc
ret
cmp
lret
jne
dec
lcall
pop
jb
arpl
loopne
jne
ds
mov
add
push
cmp
rcrb
sbb
inc
roll
push
ret
in
sub
shlb
and
dec
clc
les
repz
lods
pop
mov
sub
ss
or
pop
add
pop
and
in
sar
add
add
flds
clc
jecxz
lods
and
mov
jnp
inc
insb
cltd
jl
jg
mov
test
mov
add
or
lds
test
mov
ljmp
sar
stos
sbb
mov
xchg
dec
clc
rcll
popa
and
mov
sbb
test
push
jle
or
cmp
and
push
out
mov
test
jne
or
inc
jnp
cmp
ud2
rol
add
mov
cmp
int
int3
mov
gs
pop
push
vunpckhpd
xchg
lcall
cmp
rcrl
push
mov
shlb
lret
inc
mov
jb
sub
sbb
xor
sub
in
pop
lret
pop
sub
addr16
insb
pop
test
add
sti
in
insl
sub
cmp
adc
xchg
pop
mov
roll
es
push
popa
add
aaa
out
xorl
inc
out
enter
jecxz
cltd
xor
aaa
cmp
jno
sub
mov
jle
push
andl
cmp
bnd
shr
lret
cmp
fldt
sub
xchg
jb
movsl
icebp
shrl
push
popa
lret
sub
std
push
inc
fldt
dec
sub
pop
cmp
sti
inc
dec
mov
fldt
enter
sbb
shrl
sahf
xor
sub
mov
bound
sub
pop
ja
push
mov
pop
stos
sub
sub
and
or
imul
loope
sub
stc
ret
rcr
hlt
sub
data16
sub
push
mov
mov
jg
jge
pop
sub
sub
fs
mov
adc
pop
rcrb
xchg
inc
cmp
das
cmp
fwait
sub
aaa
adc
xor
subl
push
ja
push
pop
movb
hlt
es
sub
leave
jns
mov
jnp
in
xchg
ret
test
fwait
sub
sbb
add
dec
cli
dec
sarb
sub
cmp
inc
es
addl
pop
sub
stos
sbb
mov
mov
dec
add
inc
loope
lret
xor
popa
inc
mov
jne
test
das
dec
in
cltd
mov
js
jae
mov
xchg
pop
push
push
add
xor
add
dec
ljmp
icebp
mov
cs
jb
in
adc
insl
cmpsb
pop
fwait
ds
scas
in
and
and
imul
cmp
or
scas
adcl
xor
ret
call
popf
lock
rolb
data16
cwtl
jne
das
out
add
mov
aam
mov
lods
outsb
xchg
mov
inc
jae
popf
int3
xchg
mov
insb
mov
pop
pop
shll
cmp
fmull
jecxz
push
mov
mov
jb
leave
stc
shl
repz
cmp
les
sar
cmp
jge
in
push
bound
or
mov
std
sub
lcall
arpl
stos
mov
adc
or
aaa
arpl
push
iret
xor
sub
std
add
loope
jg
sub
sar
mov
inc
cmp
ljmp
sub
fstpt
iret
sti
sub
out
inc
mov
mov
dec
mov
inc
lods
sub
lret
nop
int
mov
mov
sbb
mov
jb
sbb
pop
jge
sub
or
dec
nop
int3
jae
clc
sub
sahf
or
aaa
sub
xor
pop
xchg
int
sub
sbb
adc
mov
aaa
xor
mov
sub
jecxz
cmp
xor
sub
mov
popf
dec
mov
jnp
and
sbb
sub
hlt
test
fisttps
pop
xor
xor
jle
xchg
xchg
or
movsb
mov
orl
pop
sbb
icebp
gs
sub
sub
and
test
mov
add
xor
mov
shl
add
subl
xor
sahf
sub
loope
mov
sbb
sub
pop
pop
dec
mov
inc
xchg
sub
jmp
jp
les
imul
jg
xor
dec
daa
lods
push
sub
dec
xchg
push
rol
xor
mov
add
xlat
cmp
inc
orl
add
das
xor
fisttpll
call
dec
dec
or
ljmp
cld
icebp
add
outsl
pop
dec
xchg
push
test
in
dec
pop
daa
imul
sbb
dec
bound
inc
lods
pop
inc
xor
add
push
pop
mov
fbld
xchg
and
inc
lods
mov
push
sub
js
xchg
fwait
into
in
or
sub
push
sub
inc
cmp
pop
or
mov
stos
push
cmp
xchg
inc
cmp
jl
or
pusha
scas
dec
cmp
jmp
cmp
sub
sub
xchg
mov
sub
ja
lds
sub
mov
outsl
nop
insl
jns
or
das
fcom
test
out
cmp
and
sub
push
cli
movsl
push
sub
inc
cmpsl
dec
inc
lgs
sub
jns
enter
xor
ljmp
loope
mov
mov
cmp
jmp
out
push
clc
adc
fsubr
pop
push
or
lea
int3
push
push
add
cli
sub
addr16
and
jmp
and
inc
or
pop
xchg
in
dec
adc
sti
sub
mov
sub
dec
cwtl
out
xor
ds
lea
and
pop
mov
fstps
fstl
jae
movsl
xor
addl
pop
fisubs
jle
jmp
cs
push
xchg
jg
sub
jae
add
dec
adc
pop
std
subb
adc
adc
adc
sub
push
nop
imul
sub
lds
das
pop
cmpl
dec
out
sbb
dec
int
push
lds
xor
nop
cmp
add
loopne
sub
mov
loope
lock
enter
pop
loop
cli
xorb
sub
shrl
sub
xchg
mov
ret
jbe
sub
je
into
jnp
cmp
outsl
cmp
jbe
inc
sub
inc
cmp
sub
sub
mov
push
inc
sub
cmp
sub
and
cli
sub
or
mov
les
xchg
call
mov
adc
fimuls
fcomi
in
mov
sub
imul
inc
sub
aas
cmc
mov
xchg
add
and
fsubs
outsl
int3
test
mov
push
xor
subb
filds
sahf
sub
nop
scas
aaa
pop
push
sbb
int
add
pop
inc
ja
cli
pop
enter
rorl
push
stos
fs
fmuls
imulb
dec
ljmp
stos
jno
fs
sbb
xor
sub
mov
push
into
cmpb
stos
xchg
test
icebp
pop
test
xchg
sub
jo
int
subb
ja
or
sub
sub
sub
push
pusha
or
scas
in
sar
int3
inc
outsl
xor
push
xchg
testb
sub
bound
mov
loop
cmp
lds
test
data16
jmp
jmp
ret
sub
or
sub
jne
inc
test
and
cwtl
sub
pushf
int3
and
mov
lods
mov
sub
sbb
sbb
les
sbb
aam
jne
jnp
mov
jo
std
xchg
dec
andl
nop
and
insl
lcall
out
ljmp
lods
dec
into
push
push
sub
inc
mov
pushf
outsb
mov
jge
xor
inc
sub
jle
ss
loope,pn
and
or
cmpsl
xor
sbb
test
and
pop
cli
test
insb
mov
mov
lods
dec
ss
dec
xor
jp
mov
loopne
add
jns
xacquire
outsb
jnp
dec
adc
fldt
xlat
sbb
imul
pop
push
cmpb
nop
lret
dec
cld
cmp
sahf
popf
sub
int3
addr16
shrb
lock
mov
lea
cmpsb
ljmp
stos
in
jl
xchg
sub
xchg
loopne
push
cmpsl
in
repz
mov
inc
dec
push
shrb
xor
je
clc
sub
adc
xor
sbb
pop
fdivr
dec
add
repz
imul
js,pt
pop
jne
cmpsl
lahf
fsubrs
push
fidivrl
sti
test
dec
daa
jecxz
dec
ljmp
inc
iret
test
mov
cmp
xchg
cmp
inc
mov
in
sahf
test
out
mov
inc
push
popf
leave
mov
stos
jo
adc
sub
mov
mov
jmp
adc
arpl
iret
mov
adc
clc
mov
call
push
cli
mov
sbb
inc
adcl
xchg
rclb
xchg
or
scas
cmc
clc
dec
mov
pushf
mov
jmp
stos
jecxz
xor
xor
lret
clc
mov
andl
inc
movsb
sbb
xor
fstp
punpcklwd
les
stc
xchg
fsubl
shrl
mov
les
pop
dec
roll
movsb
icebp
fwait
shll
push
cmp
mov
mov
shrl
out
inc
cmc
or
xchg
rcr
jb
mov
fcompl
add
cwtl
mov
test
subl
pop
cwtl
or
fidivs
mov
dec
aam
push
in
stc
dec
xchg
rcll
dec
xchg
push
pop
mov
popf
es
cmp
mov
sti
test
clc
jmp
jmp
inc
push
mov
icebp
add
lds
test
fiadds
sti
or
add
mov
cmpl
adc
add
sbb
jnp
mov
xchg
jg
sti
loopne
xchg
xor
mov
jae
or
cmp
and
jecxz
lret
shl
jnp
mov
enter
ret
rol
cmpsb
lret
or
xlat
outsb
xor
iret
mov
add
mov
xor
popa
inc
xlat
push
cmp
inc
mov
pop
dec
cli
pop
mov
fldcw
fmull
cmp
push
sbb
push
popf
jmp
stc
sub
stos
lock
test
mov
iret
xchg
pop
out
mov
sub
sbb
mov
call
imul
aaa
stos
pop
dec
dec
fwait
sbb
in
cmpsl
and
adc
sub
xchg
mov
fdivp
es
sub
xor
sub
repnz
sub
cltd
imul
mov
dec
inc
xor
cwtl
sbb
fwait
xchg
mov
sub
sub
popf
inc
add
femms
insb
or
push
add
sub
or
xchg
pop
cmp
mov
sub
aam
ficomps
shll
mov
dec
xor
lods
addr16
jecxz
bound
mov
imull
shlb
mov
adc
push
pushf
es
inc
addr16
add
fwait
iret
dec
or
cwtl
ds
sti
fwait
in
mov
mov
xchg
mov
cli
mov
sub
sarb
icebp
cmc
imul
push
mov
mov
inc
mov
lea
or
and
insb
sbb
mov
aas
sbb
sti
mov
sub
pushf
arpl
idivl
clc
xlat
lds
icebp
int3
adc
or
stos
cli
insl
imul
jnp
cmp
push
clc
pop
push
mov
pop
push
jb
push
pop
clc
push
aaa
add
sub
hlt
shr
push
push
jecxz
imul
ds
stos
cmp
mov
lods
mov
push
loopne
lcall
jl
clc
lcall
sub
push
aam
pop
sub
push
sub
inc
jo
movsl
repnz
adc
mov
mov
shlb
jb
rolb
dec
and
pop
pop
pop
insl
sub
sub
orl
nop
xor
jmp
add
xchg
add
xor
sahf
pop
sbb
cmp
out
stc
or
insl
lcall
sub
sahf
mov
mov
cs
pop
or
adc
sub
test
es
jno
inc
lea
add
xchg
lcall
sub
xor
lods
cmp
lea
in
ret
loopne
sbb
outsl
mov
stos
cld
push
cmp
test
sub
lock
addb
into
xor
fcomps
out
sub
or
js
popa
les
rorb
scas
pop
sub
adc
pushf
mov
fistpl
jb
inc
sub
xchg
jne,pn
sub
sbb
add
ffreep
repnz
dec
fs
mov
test
adc
pop
repz
mov
and
lds
sub
sbb
jge
es
les
adc
pop
stos
rorl
negl
movsl
fwait
sub
cltd
cmpsb
pop
out
or
add
dec
mov
sbb
sbb
pop
es
add
ds
imul
adc
stos
mov
out
jg
iret
rolb
popf
or
adc
adc
and
mov
sub
or
push
mov
fsubrs
hlt
sub
pop
xor
mov
adc
and
loope,pt
xorl
test
ret
movsl
sub
mov
jg
sub
imul
jle
cmp
push
mov
inc
sub
inc
push
mov
addr16
loop
lret
pop
test
leave
sub
les
out
push
jnp
rolb
cwtl
test
ret
or
aad
pop
ss
nop
jns
and
movsl
sub
int
loopne
popa
fwait
inc
clc
sub
in
dec
lds
loopne
aam
mov
xor
jns
inc
sub
jp
adcb
pop
sub
mov
fstps
pop
jp
xor
shlb
sub
ljmp
enter
fistl
sub
mov
out
rorb
dec
jo
addr16
add
movntps
out
popf
enter
xchg
cmp
jo
subb
or
jle
adc
sub
xchg
dec
and
out
xor
test
out
mov
mov
hlt
and
mov
sub
push
cld
pusha
mov
or
sub
aaa
cmp
sub
in
cwtl
mov
ja
jnp
jmp
cs
test
mov
dec
mov
lods
ficoms
ret
sbb
sub
fldt
lret
push
stos
test
mov
lds
fstpl
sub
insl
sti
aas
sub
loopne
sub
xor
xchg
in
shrl
pop
mov
push
mov
sub
jae
and
repz
sub
jg
ds
jecxz
xor
repnz
and
push
sbb
lock
or
sub
insl
jne
mov
add
fidivl
test
bound
fxch
ret
cmpl
mov
fisttpl
je,pt
or
adc
insl
mov
dec
and
sub
sbb
out
xor
daa
sub
aad
movsl
push
sub
sbb
loopne
dec
push
or
sub
jp
lds
or
cmc
push
inc
jae
xchg
sub
push
sub
inc
lcall
ljmp
sub
repz
sbb
rcr
jbe
das
and
lret
scas
repnz
sub
mov
sbb
mov
packsswb
jns
inc
imul
jmp
inc
cmpb
pushf
sbb
stos
lods
cmc
aas
loop
sbb
sub
pop
xchg
xchg
mov
inc
sarb
mov
aaa
frstor
ljmp
xlat
mov
inc
rorb
dec
sahf
push
mov
enter
pusha
sti
jno
sub
xchg
imul
xor
pusha
mov
sub
daa
test
mov
orb
jb
int
addb
mov
pop
es
pop
cmpsb
add
in
xor
dec
cltd
sbb
jg
and
cmc
inc
test
ljmp
clc
and
jno
fsubrl
gs
ds
fwait
shll
movsb
bound
xlat
cmp
lcall
repz
sub
popf
shl
push
sub
mov
loope
mov
mov
ja
mov
es
jmp
std
sub
mov
cmp
dec
adc
sbb
mov
cmpsl
pop
adc
ds
imul
push
or
jp
sahf
mov
sarl
push
sub
cwtl
into
push
popf
dec
sub
mov
push
cs
add
pop
sub
lret
jb
outsl
and
xlat
adc
jge
movsl
stos
sub
insl
sub
or
mov
les
pusha
xchg
xor
sbb
mov
shl
dec
loopne
push
subl
addr16
xor
ds
cltd
enter
idivl
arpl
jmp
lods
popf
sbb
loope
iret
adcb
aad
sub
mov
push
mov
sub
rolb
sub
cli
outsb
std
jns
imull
stos
sub
into
pop
fistl
ljmp
imul
or
add
cmp
fidivl
movsb
mov
mov
lret
es
cmpsl
push
cmp
mov
fldcw
mov
mov
lahf
test
stos
shll
sub
add
lock
mov
lods
xlat
call
out
or
xor
inc
call
fwait
sub
or
cld
scas
sub
adc
sub
mov
cmp
xchg
lahf
and
notb
jle
sub
pop
addl
popf
inc
jl
lods
cmp
movsb
mov
mov
dec
inc
sub
pop
incb
adc
sub
not
cmc
jge
xor
lret
sub
add
fisubrs
or
imul
iret
sub
or
adc
dec
xchg
in
fs
inc
pop
repnz
sub
inc
in
or
sbb
ret
ss
jecxz
repnz
je
jmp
jl
add
mov
push
or
mov
ret
sub
push
jg
sub
sbb
mov
inc
pcmpgtb
stc
xor
movsl
jno
leave
mov
push
mov
fsubl
shrl
pushf
mov
hlt
cmp
pop
mov
xor
jns
das
mov
mov
test
repz
ljmp
xor
push
xchg
cmp
fisubs
sub
sbb
lcall
mov
adc
int3
sahf
rorl
lods
xor
orl
cmpsb
sub
shlb
sbb
gs
out
sti
jl
ret
or
xor
sub
fistpll
cmp
sub
fisubrs
les
sub
sbb
repz
mov
cmpsb
and
fcmovne
dec
ds
inc
jns
imul
inc
xor
mov
dec
adc
lds
pop
add
and
pop
mov
sub
xchg
and
test
std
iret
cmc
pop
dec
mov
rcl
cwtl
dec
ret
or
sub
mov
cmp
xor
enter
sub
jno
sbb
mov
pop
mov
sub
lock
fdivrs
xchg
fstl
dec
sub
ds
scas
jno
stos
int
lcall
fistps
sub
mov
imul
inc
push
jo
mov
and
sub
ficompl
dec
push
dec
mov
sti
cmc
sub
adc
imul
mov
push
dec
rorb
sti
pop
mov
out
jge
inc
dec
cli
xor
imul
mov
in
das
mov
jg
sbb
shr
or
or
flds
cmp
cmp
aad
sub
xchg
rcrb
pop
psubd
inc
jl
stos
push
xchg
push
rcll
sub
jmp
stos
ds
jmp
scas
adc
mov
jae
sti
lds
cmc
and
xchg
mov
lret
push
jae
mov
jmp
cli
or
add
sub
mov
int3
push
jmp
inc
sub
fldcw
sar
adc
in
rcll
push
arpl
and
sub
lea
dec
sti
mov
push
push
pop
lods
mov
push
pop
idivb
cmp
cli
gs
setge
arpl
xor
jo
shrl
mov
xor
cli
loope
mov
cmp
pushf
lahf
and
cmp
in
clc
adcl
cwtl
mov
das
pop
sbb
pop
pushf
fmull
sub
loope
mov
mov
out
ret
mov
push
add
sbb
push
and
sub
push
or
push
and
clc
sbb
and
ficoms
aam
fdivrl
cli
std
in
sahf
fsub
xchg
add
push
sbb
lock
dec
or
dec
sub
addr16
js
int
cmp
cmp
pop
mov
sti
das
nop
or
lcall
aas
push
sub
shlb
inc
jnp
sub
xchg
lret
cli
mov
push
je
xor
loope
add
lock
stc
lds
cmp
clc
ds
loop
and
cmp
mov
fsubrp
subb
add
xchg
test
jns
sub
xchg
dec
cmp
imul
cmc
sub
cmp
dec
jbe
inc
sti
and
clc
arpl
cmpsb
sahf
mov
cmp
and
push
fdivrl
or
xchg
sub
sbb
mov
cmp
test
subb
aam
push
cli
call
mov
add
test
pusha
test
sub
dec
in
js
outsl
cmp
jns
sbb
xchg
fisubrl
mov
rorl
nop
mov
je
addr16
clts
push
inc
std
addr16
mov
push
ja
or
and
inc
hlt
jnp
sbb
mov
movsb
xor
inc
pop
inc
lret
clc
mov
sti
scas
out
std
mov
cmp
out
imul
adcl
es
cmp
insl
adc
clc
xor
mov
sbb
popf
ljmp
dec
lock
push
or
add
out
jge
push
sbbb
or
clc
jl
subl
push
cmp
leave
jmp
add
loope
daa
fisubrs
cltd
mov
clc
es
pop
mov
add
sub
scas
lret
add
xor
adc
inc
or
insl
scas
mov
lods
js
mov
repnz
cmpsl
cmpsb
jnp
mov
shrl
cmp
imul
int
cmp
push
pop
pusha
jg
pop
pop
inc
add
lods
stos
in
out
imul
push
sbb
pop
xor
movsl
fdivl
decb
test
push
jbe
inc
les
push
push
jns
cmp
cwtl
mov
into
and
xchg
and
and
clc
cmp
cmp
das
add
add
stc
inc
cmp
imul
sbb
mov
cltd
fnstenv
cli
lret
jl
mov
push
mov
pop
test
stos
aas
lret
pop
sub
jmp
jo
adc
lcall
pop
outsb
mov
adc
lods
cmpl
xchg
or
sti
stc
pop
mov
ret
dec
cli
dec
cmpsl
lret
jne
mov
lods
xchg
cli
add
ret
out
pop
mov
cmpsl
lds
mov
mov
xchg
inc
mov
sbb
sub
lock
shll
pop
loope
and
clc
pop
roll
jo
jge
fisubrl
jb
das
add
mov
push
sub
jno
addr16
sbb
lods
xchg
shll
ljmp
pop
inc
shl
nop
int
sub
pop
popf
cli
icebp
dec
mov
das
das
dec
mov
xlat
aad
and
xchg
popa
ss
test
movsl
mov
mov
mov
adc
lds
mov
jg
xchg
and
outsl
int
inc
scas
push
pop
cmp
xor
pushf
pop
pop
pop
dec
stc
push
cmp
enter
pop
dec
adc
adc
inc
arpl
scas
pop
out
jmp
xchg
stos
mov
clc
jns
xchg
or
notl
push
pop
les
mov
dec
outsb
cmp
jge
and
cltd
cs
hlt
fldlg2
mov
jno
lds
jno
scas
lock
xor
les
int3
leave
inc
push
mov
ret
icebp
shlb
int
cwtl
push
cmp
sti
cmp
xchg
mov
ret
dec
jmp
clc
aam
pusha
jge
fprem
push
push
inc
push
in
jne
and
fdivrs
aas
lret
mov
inc
or
inc
std
gs
lds
cmp
imul
mov
out
mov
mov
add
arpl
cmc
lods
nop
mov
pusha
les
cld
outsb
push
mov
cwtl
test
repnz
loopne
shll
outsb
std
fs
sti
cwtl
es
pop
cli
ss
lods
movsb
xchg
movsl
sub
xchg
mov
cmp
xbegin
shlb
and
call
lret
cwtl
test
jle
sbb
mov
shrl
in
sbb
leave
xchg
out
or
dec
aad
imul
fndisi(8087
sbbb
or
adc
sti
iret
pop
loop
orb
jo
popa
mov
and
and
in
movsb
dec
mov
outsb
xlat
into
fsubp
lods
dec
xor
cmp
jne
pop
cmp
xchg
cmp
les
js
pop
ljmp
lods
stos
push
test
ljmp
cmp
cltd
cmp
or
aad
sbb
test
cltd
push
and
scas
mov
xor
xlat
loop
imul
sub
ret
popf
jmp
mov
and
lcall
sbb
inc
imul
push
push
out
out
ja
add
inc
out
push
popf
shrb
cmc
out
clc
lcall
cli
mov
fcompl
push
in
adc
sti
les
lods
jae
cmpsb
mov
lret
enter
rcll
cwtl
xlat
nop
and
lds
subb
xor
stos
inc
or
sub
cwtl
aas
lret
mov
mov
sbb
lret
sbb
xlat
je
lods
sub
mov
add
neg
mov
pop
pop
repz
push
xchg
dec
clc
mov
sahf
int3
adc
mov
cld
pop
fprem
mov
fidivs
sub
mov
icebp
lret
push
inc
cmp
ret
andb
xchg
orl
sbbb
in
and
inc
rcl
mov
mov
dec
adc
lods
adc
cltd
add
pop
push
add
mov
xlat
imul
iret
mov
inc
imul
cwtl
imul
ja
pop
mov
test
xchg
add
in
in
imul
loopne
test
loopne
adc
nop
rcrl
fnstcw
push
mov
jp
scas
and
insb
dec
outsl
test
sti
inc
mov
pop
loop
cmpsb
lods
adc
ja
or
sbb
xchg
inc
cmp
xchg
shl
xor
lods
aas
movsb
or
and
cmpsb
clc
xchg
aaa
jle
and
dec
jnp
pop
inc
popa
cli
scas
inc
mov
int
xor
jg
fs
das
xor
xor
jg
out
adc
xchg
xor
dec
dec
sub
inc
dec
cli
stos
js
fiadds
repnz
dec
pop
lret
mov
xor
out
cmp
push
push
iret
fwait
adc
jle
sti
sar
mov
cwtl
adc
sbbb
jmp
js
jg
sbb
push
andb
loope
ret
cmpl
pop
out
adc
pop
movsb
sbb
clc
adc
ds
pop
dec
jl
or
mov
cli
es
loope,pn
lea
fdivs
in
mov
data16
cmpsl
inc
popa
xchg
or
pop
push
outsb
in
call
jp
mov
pop
sub
fcmovne
or
aas
adc
or
adc
lahf
data16
jae
or
stos
jl
lret
call
je
sub
repnz
cmpl
xchg
push
cmp
push
rclb
repnz
xor
es
mov
mov
test
xlat
out
mov
das
sub
clc
pop
add
sub
sub
mov
ds
lds
ds
sub
pop
testl
jo
and
dec
cmp
sub
popa
inc
out
push
scas
and
xor
sub
daa
pop
jecxz
sti
insl
and
cmp
enter
mov
fdivl
mov
pop
sub
dec
aaa
push
sub
ljmp
push
rep
inc
mov
fmull
add
sbb
out
add
push
sub
push
lret
nop
iret
sub
sbb
sub
sti
loope
jl
sbb
mov
sub
and
jle
add
dec
decb
and
lea
sub
in
mov
xchg
sbb
mov
nop
das
ljmp
faddp
adc
sti
mov
pop
xchg
add
movsb
dec
push
xor
test
mov
pushf
mov
cli
hlt
mov
sub
dec
mov
loopne
outsl
sub
xor
cmpl
arpl
adc
arpl
mov
fildll
push
cmp
add
mov
push
mov
dec
pusha
cli
sub
mov
add
xor
jecxz
stos
lret
cld
imull
out
icebp
mov
cmpb
sti
xchg
xchg
jb
xchg
dec
adc
das
cmpsb
pop
faddp
in
mov
andb
and
xlat
jae
ficoml
xor
iret
pop
push
shrl
ljmp
adc
cmp
inc
incl
mov
mov
sub
xchg
sub
mov
outsl
test
jle
scas
scas
pop
jo
inc
sub
neg
xchg
or
mov
icebp
movsl
repnz
lret
stos
and
xor
movsb
scas
pusha
mov
jge
popf
push
inc
cmpsl
pop
stc
push
clc
sbb
mov
push
int3
cs
pop
sbbb
insl
cltd
sarl
mov
sub
jnp
jno
xchg
scas
xchg
dec
jns
jns
adc
addr16
cmp
mov
push
or
fwait
jne
cwtl
push
adc
sub
sti
xchg
dec
sub
out
adc
jg
icebp
insb
sub
inc
int3
jmp
daa
out
mov
or
sub
and
in
mov
mull
inc
js
sub
add
sub
in
call
jecxz
lods
cmp
lock
push
push
sbb
es
inc
xchg
mov
sub
dec
mov
sub
pusha
stos
mov
inc
sub
and
fcoms
rcll
sub
mov
jl
and
ret
inc
loop
xchg
leave
cmpsl
cmp
or
lods
sbbl
and
out
insb
mov
arpl
psubw
jecxz
ljmp
fistpll
jae
repnz
sub
dec
mov
sub
call
in
xchg
pop
jb
sub
push
mov
mov
cmpsb
xchg
sub
out
push
jg
mov
push
sub
ljmp
mov
xchg
imul
mov
enter
popa
adc
jmp
in
sub
pop
sub
push
cmp
xchg
sub
xor
push
in
pop
gs
lods
mov
subb
inc
cmp
sub
mov
jmp
call
stos
test
add
test
lods
pop
enter
sbb
or
pop
repz
sub
bound
sub
aad
daa
pushf
push
sarl
xchg
cmpsb
pop
loop
and
inc
sub
mov
movb
in
sar
repnz
cltd
sub
fnstsw
adc
iret
jmp
sub
into
cmp
mov
xchg
test
inc
daa
rclb
adcb
or
and
sub
leave
sahf
and
ja
sub
push
sub
imul
fwait
push
add
ljmp
cltd
mov
mov
imul
xchg
aas
out
clc
imul
sub
mov
aaa
sarl
fsts
mov
push
sub
dec
outsl
outsl
sub
inc
adc
push
enter
sub
or
mov
cmpsl
testl
mov
sub
pop
push
xchg
add
dec
dec
movsb
sub
bound
movaps
insb
cmpsl
and
fists
jae
xor
idivb
sub
sbb
push
pop
sub
or
sub
stos
xchg
adc
pop
sub
in
scas
cs
dec
sub
icebp
dec
sbb
sub
ljmp
dec
fucomp
daa
sbb
inc
jne
pop
sbb
sub
and
lea
andb
fsubrl
mov
jne
sub
cwtl
aad
xor
jecxz
addr16
mov
and
lods
leave
pop
lock
ret
cwtl
mov
imul
in
test
pop
or
inc
push
jnp
pop
xchg
and
xor
mov
stos
mov
int3
add
cmp
inc
sahf
pusha
add
mov
shll
dec
rorb
outsb
daa
sub
ss
sub
jge
les
popf
sub
in
dec
sub
pop
sbb
loopne
jb
addr16
or
sub
fxch
lods
sub
loopne
xchg
sub
sti
mov
sub
mov
repz
daa
das
in
lock
scas
or
fldt
outsb
xchg
ss
cmc
test
inc
fimull
or
sub
sbb
test
aas
mov
add
add
dec
pop
sub
mov
incb
lcall
adc
or
cmp
scas
in
imul
push
inc
lock
jmp
and
sub
dec
fidivrl
test
dec
sub
push
and
into
fisttps
sti
push
lret
daa
sub
jg
or
push
and
cwtl
push
sub
int3
inc
shlb
fildll
xchg
in
ret
fs
sub
test
mov
lock
mov
stc
xchg
enter
repnz
sub
shlb
dec
sub
mov
adc
and
insl
and
or
sub
sub
inc
fisubl
ret
mov
imul
adc
sub
imull
test
pop
outsb
jo
jge
fwait
sub
aam
aaa
cld
push
or
pop
nop
sub
insb
dec
add
stc
sub
in
aaa
pop
inc
loope
int
sub
jp
hlt
lock
cmpl
or
dec
mov
mov
sub
hlt
daa
xor
lcall
mov
inc
or
xor
inc
das
mov
push
mov
sub
dec
repz
and
xlat
adc
mov
mov
scas
data16
into
dec
mov
cli
xor
fmul
shll
cmp
bound
in
rclb
mov
outsb
adc
mov
mov
xchg
ja
xchg
xor
sub
pop
stc
nop
rclb
jp
add
xor
scas
sbb
and
pop
mov
sbb
clc
int3
ss
sti
mov
test
imul
aam
lret
cli
int3
push
mov
repz
scas
mov
jecxz
and
fists
push
sub
jno
push
cli
xor
or
imul
push
clc
pop
dec
xor
cmp
aaa
repnz
cmc
cmp
loopne
loopne
xchg
adc
movsl
mov
test
sbb
andb
es
mov
dec
repz
mov
add
pop
cmp
ss
data16
insl
mov
fwait
sbb
insl
aad
xchg
clc
and
stc
mov
inc
sti
adc
jle
jnp
pop
pop
lret
adc
shrb
jnp
imul
xchg
mov
and
mov
out
pop
bound
lret
jle
inc
repnz
mov
test
dec
xchg
mov
sbb
insl
cmp
fcmovne
pop
jmp
cmpsb
sub
push
xchg
add
mov
xorb
cmp
or
aam
pop
and
stos
jns
xchg
jmp
xor
xchg
ud0
popa
push
inc
lods
mov
ds
jl
aas
cli
xchg
dec
rcr
testl
push
mov
sahf
mov
cmp
data16
lock
ljmp
jae
push
xchg
pop
sbb
cmp
dec
adc
fistpl
sti
add
sarl
push
out
adc
pop
sar
adcl
out
jle
cli
addr16
sub
in
fs
stos
cmp
sarb
mov
cmp
aad
fs
or
aas
shrb
inc
and
cmp
cli
push
or
xor
pop
mov
cmp
lret
jne
sbb
add
xor
icebp
xor
and
or
cli
or
js
sub
mov
jecxz
xor
sarl
cmp
and
push
scas
sub
sti
mov
xor
mov
inc
push
mov
mov
test
xchg
xchg
jmp
jmp
clc
xor
sub
lds
push
ficomps
ljmp
addr16
sub
pop
rcrb
cli
aaa
test
in
pop
pop
cmp
mov
dec
and
insb
cmp
and
test
add
and
leave
les
jg
mov
pop
inc
and
scas
orl
clc
loope
push
push
cld
xchg
cs
ss
addr16
aaa
add
xchg
jb
xchg
cwtl
push
ret
ret
push
scas
addr16
mov
imull
in
mov
or
cli
inc
sbb
add
js
iret
js
mov
pop
dec
cltd
pop
repz
enter
sub
test
push
xor
xlat
fbstp
insl
scas
inc
iret
cmp
mov
inc
jg
loopne
sti
pop
and
push
push
pop
mov
shrl
adc
sti
addl
push
sub
sub
out
fsubr
and
mov
mov
or
add
adc
fdivs
dec
movsb
cmp
pushf
addr16
dec
mov
cli
xchg
inc
adc
pop
inc
rcll
test
cmp
pop
mov
gs
xchg
icebp
divb
lcall
push
sti
mov
cli
adc
cmp
jecxz,pt
mov
mov
sub
je
fisttpl
mov
aam
std
xor
dec
movsb
ss
lods
cld
test
and
jb
jl
lahf
xor
add
cli
push
inc
xchg
psubsb
sti
outsl
popa
cwtl
or
mov
push
imul
cmp
push
insb
das
mov
mov
xchg
mov
outsb
inc
mov
icebp
mov
dec
push
clc
push
daa
movsl
shll
mov
push
mov
mov
dec
pop
in
test
sar
push
in
ror
insb
add
incl
loope
insl
insl
dec
lcall
loopne
stos
cli
sbb
sub
cmpsb
xchg
popa
mov
mov
xor
mov
sarb
in
ftst
movsl
out
ret
dec
adc
mov
mov
out
jbe
add
pop
add
dec
adc
dec
lcall
push
icebp
mov
adc
ss
iret
inc
and
add
out
movsb
ret
clc
aaa
push
push
pop
lds
fstl
fwait
lds
cmc
outsb
ret
outsb
push
mov
imul
mov
xchg
clc
jg
stos
sbb
dec
jb
es
jbe
fs
cmc
clc
push
cli
sub
or
and
mov
sbb
stos
sti
sahf
rol
cmc
mov
cmc
cmp
sub
enter
jl
outsl
jp
dec
or
repnz
dec
pop
cmpsb
movsl
jns
dec
out
repz
cwtl
clc
xor
jecxz
xchg
imul
mov
js
lret
in
push
ljmp
push
and
imul
add
pusha
pushf
in
xor
inc
aaa
loope
push
lcall
dec
sub
mov
jmp
mov
sub
mov
sbb
arpl
fimuls
sub
cmpsb
or
or
adc
and
sub
cmc
cmp
std
cltd
jnp
fnsave
sub
sub
cmp
pop
sbb
test
adc
cs
dec
faddl
jmp
andl
cld
test
and
popf
adc
sub
mov
fisubrl
mov
cmpsb
imul
add
sub
scas
push
jns
test
fcmovne
repz
mov
push
sub
insb
mov
or
das
scas
scas
fsubl
sub
pushf
ret
ret
mov
add
pop
cmc
stos
jns
and
sbb
sub
aas
gs
dec
cmpsb
int3
sub
and
xor
xor
push
adc
loop,pt
xchg
push
push
sub
adc
insb
cltd
and
ds
jbe
xchg
or
pop
dec
push
repz
jp
sub
and
out
push
pop
xchg
jge
sub
out
enter
cmp
loope
ret
jmp
out
inc
jp
inc
cmp
sub
add
push
inc
and
sub
sbbb
sub
aaa
jne
imul
inc
fistps
imul
sub
cmp
sub
xchg
icebp
mov
ret
adc
les
out
stos
stos
cwtl
push
sub
pop
pop
sbb
lods
rcrl
sub
jns
jmp
or
dec
stos
subl
sbb
je
mov
dec
inc
int
sub
pop
enter
in
aaa
loopne
dec
and
jae
jle
test
dec
sarb
cmpsb
mov
sub
int3
cmp
fdivrs
cmc
lahf
sub
mov
add
lret
sub
or
push
jecxz
cmp
icebp
jae
scas
pop
mov
and
push
add
addl
jnp
sub
xchg
dec
pop
aad
inc
push
outsb
dec
mov
push
adc
sub
iret
xchg
cmp
push
push
mov
imul
jo
nop
sub
push
dec
stc
mov
xchg
xor
xchg
xlat
xorb
fwait
mov
inc
aad
sbb
ss
ds
xor
dec
sub
dec
stos
test
sub
xchg
sarb
leave
test
push
sub
out
mov
pop
sub
dec
pop
insb
sub
inc
add
outsl
push
sub
jle
adcl
sub
int3
je
fwait
xor
mov
scas
xchg
clc
push
or
sub
andps
mov
es
int3
das
mov
out
sbb
pop
sub
sub
jb
pop
sub
push
xchg
test
out
lcall
ret
and
hlt
mov
lret
fwait
push
add
sarl
sbb
sub
or
cld
add
out
pop
cmpsl
enter
sub
repz
dec
fsubs
imul
add
fists
sub
imull
and
jle
and
imul
xchg
sub
imul
mov
popf
nop
test
cmp
dec
mov
lcall
into
pop
and
lock
sub
and
sub
sar
push
sub
sbb
in
xchg
je
sbb
push
mov
sub
std
jmp
in
xchg
sub
pop
push
sub
or
jmp
jns
mov
add
dec
sub
mov
sub
mov
sub
adc
imul
repnz
ss
in
cmp
xchg
sub
cmp
fs
ret
shrb
adc
cmp
jle
sub
xchg
jbe
xchg
add
push
mov
movsb
sub
lcall
pop
cmp
stos
addr16
aad
pop
ds
hlt
pop
fs
xchg
mov
ja
ds
testb
xchg
pop
jg
les
je
xchg
push
sub
mov
add
shrb
mov
add
pop
rclb
sub
sbb
fwait
dec
cld
imul
or
int3
ret
mov
fcmovnb
adc
dec
adc
sub
cmpsb
into
jmp
sbb
sub
add
sbb
lock
pop
sub
sub
fstpt
sub
dec
test
es
inc
add
sub
adc
test
mov
pop
lods
sar
imul
cmp
mov
mov
icebp
mov
jmp
jmp
or
iret
subb
mov
mov
mov
sub
mov
lods
loope
sub
shlb
jle
scas
repz
dec
inc
cwtl
add
dec
ror
dec
ds
sahf
mov
shrb
push
out
adc
mull
mov
dec
int3
ss
mov
repz
xchg
cmp
dec
cmpsb
jmp
pusha
into
push
call
out
sub
pop
push
int3
sub
test
xchg
sub
push
mov
pop
lds
mov
push
ffree
pop
lock
or
lods
and
xlat
dec
xchg
or
cmp
jecxz
loope
fs
addr16
movsb
fldenv
mov
divl
sub
sub
sub
mov
inc
mov
mov
or
daa
xor
jmp
mov
clc
cmc
and
in
jmp
pop
xchg
push
shrl
lods
loope
sarb
pop
inc
ret
in
push
pushf
adc
punpckldq
shl
cmpsl
es
sti
or
cmp
push
out
sub
sub
push
call
sub
lods
imul
subl
add
js
push
pop
mov
add
cmp
sub
out
call
cwtl
pop
and
or
xchg
sub
dec
add
icebp
iret
or
sub
ret
or
xor
enter
lods
dec
mov
cmpsb
sub
xchg
ret
jne
fwait
sub
imul
or
in
sub
int3
or
fs
shlb
push
or
ja
repz
fstl
xorb
cmp
fidivs
popa
or
cmovg
push
push
lea
mov
add
sahf
cmp
dec
jle
inc
push
and
stos
out
dec
push
sub
into
pushf
pop
mov
imul
jns
int
sub
shr
mov
stos
adc
xchg
push
cmpl
xor
add
sub
fistps
mov
outsb
stos
repz
sub
xorb
sbb
call
mov
gs
aad
fstps
mov
mov
cs
lds
sub
mov
mov
cmpl
adc
pop
push
jns
jnp
ljmp
aas
mov
and
add
cmpsl
sub
jge
int
fisttpl
mov
fwait
and
or
ficoml
xor
stos
addr16
jae
sub
pop
testb
rcrl
sub
daa
dec
jns
cld
push
pop
mov
pop
push
test
xor
sub
fistpl
mov
push
sub
ds
mov
out
sub
pop
pop
stc
inc
ret
pop
push
dec
mov
scas
test
repnz
ds
add
mov
sub
xorl
mov
mov
xor
test
and
int3
jge
cmp
imul
jns
je
daa
sub
out
or
push
in
das
jecxz
ja
in
pop
out
xchg
sbb
sbb
or
push
mov
mov
or
dec
sbb
clc
popf
mov
call
adc
xchg
xchg
movl
shrb
test
inc
scas
xlat
ds
sbb
sub
les
jns
xchg
aaa
xchg
mov
cld
ret
push
xchg
pop
pushf
xchg
cs
inc
test
xchg
and
or
push
fildll
lahf
inc
cmc
ja
loopne
jnp
fimuls
sub
sub
xlat
jns
test
inc
xchg
daa
fs
sub
cmp
loopne
lret
test
jnp
jmp
sub
arpl
call
mov
fsts
adc
adc
sub
decb
mov
dec
insl
lcall
sub
sub
sub
shrl
add
insb
pop
aad
adc
into
mov
push
mov
in
jnp
lods
movb
pop
push
je
arpl
mov
adc
outsl
xlat
mov
jg
lock
mov
addr16
sub
out
std
mov
jnp
test
pop
cmc
xchg
out
add
shlb
jmp
test
cmp
inc
insl
inc
sarl
ret
test
and
dec
adc
mov
pop
dec
cli
call
iret
pop
xor
loop
sub
jle
scas
insb
ss
out
sti
pop
mov
mov
mov
sbb
ja
lock
sti
mov
out
dec
cli
adc
adc
rorl
push
dec
mov
fnstcw
es
lcall
sarb
push
lds
clc
jg
sbb
mov
shl
jle
xor
repz
ds
fldpi
xchg
or
xor
outsb
dec
xchg
lea
adc
sahf
mov
ja
testb
lea
mov
mov
jmp
lcall
cld
dec
les
sub
or
push
in
scas
lds
xchg
jle
sbb
stos
push
iret
and
mov
push
pop
cmp
into
sbb
cmp
cli
cmp
movsb
jmp
sbb
fldlg2
bound
pop
clc
icebp
jbe
les
int
sub
inc
dec
jo
dec
dec
mov
cli
mov
and
mov
in
cld
cmp
jmp
xchg
jmp
inc
mov
pop
xor
mov
adc
sub
cltd
rol
sub
dec
cli
jae
inc
jle
push
pop
call
int
lock
xchg
lret
jecxz
xchg
sub
sub
xchg
in
test
idivl
dec
push
stos
pop
clc
or
stc
mov
flds
jnp
popf
cltd
sub
xchg
dec
fs
sub
add
push
jmp
add
out
clc
ljmp
mov
ja
push
in
aad
pop
pusha
lcall
andl
and
and
clc
mov
cmpsl
pop
sub
pop
jecxz
addr16
loopne
jmp
dec
adc
clc
stc
js
and
jge
enter
sbbl
dec
jmp
inc
pop
jge
cli
fwait
xor
mov
bound
sar
lcall
mov
ljmp
fxch
mov
push
repz
mov
test
shr
insl
sub
xor
pop
push
repnz
sbb
xchg
fmuls
loop
push
sub
jo
bnd
sbb
dec
stos
cmp
sub
fnstenv
adc
jmp
sbb
sti
xor
push
sub
fsubs
or
mov
sub
ja
cmp
fidivl
sub
mov
loope
cmp
fcomps
lret
imul
sub
sub
sub
dec
sub
testl
sub
cli
cmp
and
jecxz
call
subb
fcomps
mov
push
in
pop
in
mov
sub
cwtl
je
daa
scas
lret
push
mov
subb
insl
bound
pop
pop
mov
push
jl
in
sub
popa
cli
pop
in
mov
sub
jns
cld
xchg
xchg
or
mov
mov
inc
decl
jo
cmp
pop
push
add
out
pusha
adc
popf
fnstenv
in
fildll
ss
mov
sub
jp
out
add
and
and
jne
rcl
jl
rcrb
mov
xlat
and
movsl
insb
adc
mov
adc
sarb
pop
xchg
lret
in
pop
push
test
adc
and
jmp
popa
pop
out
dec
jb
sub
sub
dec
in
shrb
imul
ret
xor
fmull
rorl
jge
dec
enter
lahf
js
std
les
clc
jge
pop
mov
cmp
test
jle
mov
mov
pop
inc
mov
mov
fnstcw
rorl
push
shrl
es
call
jmp
ss
popa
and
loopne
inc
adc
shll
loop
frstor
sbb
adc
sub
enter
and
sub
dec
lock
dec
pop
mov
test
adc
subl
jns
push
mov
aaa
sub
outsl
push
jo
pop
popa
sub
mov
xor
mov
jle
add
es
or
sarl
test
loopne
cld
jae
dec
mov
je
sti
out
pop
sub
ljmp
push
popa
cs
sub
dec
orl
arpl
mov
sti
mov
fiadds
sub
mov
sub
outsb
cs
adc
call
jne
imul
into
mov
nop
jge
rclb
cltd
cmc
mov
lods
sub
xor
sub
mov
aad
sub
jns
pusha
sub
les
leave
mov
sub
dec
xor
xchg
mov
pop
enter
in
mov
das
lods
push
sbb
cmpsl
cmp
lret
clc
movsl
sub
xor
mov
pop
mov
fs
cmp
xchg
int
mov
mov
adc
mov
cmc
sub
notb
lcall
or
mov
repz
jmp
ja
sbb
mov
sbb
ljmp
mov
mov
inc
xor
sub
int3
loopne
mov
arpl
cltd
or
pushw
sub
fisttps
call
outsl
push
push
or
mov
icebp
sbb
dec
xlat
push
es
sub
cmp
inc
sub
stos
sbb
mov
shrb
fwait
or
outsl
loopne
xchg
ret
les
test
push
inc
pop
jge
sbbb
sbb
js
jb
dec
dec
loopne
cld
add
ret
jp
in
mov
adc
mov
inc
pusha
sub
xlat
add
test
popf
sub
sub
mov
sbb
sub
mov
inc
sub
stos
and
dec
mov
sbb
aas
xchg
sub
cmpl
or
inc
cmp
aaa
les
pusha
push
ds
insb
imul
insl
lods
notl
ljmp
ds
jmp
mov
popf
xor
xor
sub
js
push
inc
sub
in
into
lahf
xor
add
out
fwait
imul
xchg
sub
pop
mov
cmc
lock
test
dec
les
add
xor
cmpl
int3
sub
and
pop
sub
popf
sub
stos
cwtl
test
and
ret
jb
retw
scas
pushf
movsb
mov
into
subl
mov
sti
ret
rcll
or
jb
into
data16
jmp
out
ss
xchg
movsb
mov
push
sub
test
mov
movsl
dec
fildl
adc
lock
vpperm
or
jne
mov
cwtl
sub
out
push
mov
sub
test
hlt
sub
xchg
cmp
sub
inc
pop
add
xchg
or
and
and
xor
data16
int3
push
inc
repnz
mov
adc
testl
push
hlt
xor
mov
das
sbb
push
sub
mov
jl
sub
xchg
popf
mov
fwait
jge
sub
mov
rcrb
pushf
dec
sub
jb
dec
mov
inc
sub
xor
cmp
cli
adc
mov
ds
sti
push
imul
sub
sub
mov
outsb
insb
jl
loope
xchg
add
mov
ret
push
ljmp
scas
out
pop
dec
jge
sub
or
hlt
mov
fdivrl
sub
and
mov
mov
cmp
xor
subl
xchg
mov
pop
and
xor
cltd
cmpsl
sub
mov
adcb
fs
cmpsb
mov
adc
add
add
das
sub
pop
pop
lds
inc
repz
fistl
and
cld
adc
enter
sub
cs
sub
sub
adc
scas
aad
mov
pusha
mov
in
xor
enter
fs
cmp
sub
mov
dec
jb
mov
cmp
test
jle
cwtl
popa
test
sub
js
cld
ds
test
lea
sbb
inc
subl
xchg
test
xchg
ja
cwtl
bound
arpl
insl
pop
mov
mov
in
mov
mov
out
sub
adc
jge
mov
push
push
stc
imulb
xor
or
cltd
and
pop
push
mov
xlat
cmp
push
ljmp
lret
pop
xor
fisttpl
lods
addb
push
xor
pop
sbb
mov
fisubs
ljmp
fldcw
aas
or
loop
dec
xchg
ret
pslld
push
subl
ja
mov
pop
mov
push
jbe
sbb
in
sub
fistl
cltd
aaa
int3
call
pop
pop
sub
lret
test
xor
xor
and
xchg
aaa
adcl
popf
sub
dec
and
cmp
mull
clc
outsl
inc
sub
mov
mov
fisubs
sub
fisubl
aaa
into
sub
scas
fmull
jbe
imul
sub
pop
jge
ret
push
jbe
sub
fstps
call
notb
repz
mov
adc
inc
xor
lahf
fimull
sbb
jl
mov
inc
dec
fcomps
mov
loope
jle
or
mov
fisubrs
xchg
insl
rorb
add
repnz
test
ss
pusha
sbb
pop
loope
shrb
push
inc
or
pop
push
xorb
mov
pop
jns
mov
push
dec
out
inc
shl
sub
out
mov
sub
ljmp
aas
aad
pop
jle
subl
orb
in
cmp
mov
out
mov
push
push
mov
cmp
out
adcb
iret
add
push
jl
xor
add
lret
push
fsub
hlt
jno
js
push
inc
fnstenv
mov
pop
mov
scas
jo
cmp
leave
ffree
repnz
cmp
sbb
jp
lret
movsl
mov
pop
das
dec
fistps
popa
scas
mov
jge
xor
call
out
pop
je
loopne
fs
repnz
and
cli
mov
pop
or
push
push
lret
pop
jbe
testl
mov
jae
aad
pop
mov
lods
fists
or
adc
shrb
clc
cmp
cwtl
xlat
outsb
nop
pusha
jl
sbb
std
mov
test
rolb
shrl
arpl
repz
mull
jl
xchg
mov
js
aam
sub
inc
sti
xchg
lahf
cmp
jo
mov
adc
pushf
cmp
dec
push
mov
push
sti
ds
fmuls
or
out
cmp
inc
not
jo
shlb
nop
fadds
pop
mov
sub
out
dec
lret
cli
and
pop
repz
sub
ljmp
imul
pop
dec
mov
mov
jbe
call
scas
jl
div
out
cmc
movb
out
scas
daa
pop
icebp
mov
jns
lods
shrb
or
adc
loope
xchg
and
adcb
add
fisttps
pop
pop
push
pop
ficoms
js
jecxz
rorb
div
xor
jbe
push
push
jbe
push
and
mov
vmovdqa
sbb
mov
das
sub
pushf
mov
xor
sub
dec
jb
clc
enter
pop
les
aam
jae
push
clc
scas
sbb
sti
ljmp
fmull
jmp
in
hlt
pop
mov
adc
jmp
push
jle
int
pop
clc
adc
cwtl
push
sub
push
push
fstl
sub
pop
ss
aad
outsb
cmp
mov
mov
push
out
sub
cwtl
lret
fdivl
sbb
jno
mov
dec
cld
adc
mov
test
push
jle
fs
ret
ja
test
pop
adc
dec
mov
jmp
stos
push
sub
jae
add
out
dec
adcl
icebp
aam
push
mov
idivl
jae
add
movl
push
std
mov
fbld
call
add
push
sub
jne
push
sub
cmp
adc
jecxz
sub
push
fistpl
fcoms
pop
add
stos
popf
ja
sub
xlat
sbb
aas
push
shlb
push
out
fstpt
cld
ret
jnp
adc
or
mov
shr
fdivrs
sbb
jbe
or
inc
add
scas
add
iret
mov
divb
dec
sub
lcall
shl
fmuls
inc
sti
sub
dec
shll
repz
dec
mov
scas
mov
lcall
sub
mov
inc
sub
adc
dec
hlt
dec
in
jmp
in
jmp
clc
and
repnz
into
leave
pop
aam
fsubrl
cmp
mov
mov
sub
jg
outsl
add
xor
lahf
xchg
fsubr
push
sub
cwtl
push
mov
stc
add
scas
dec
cmp
cmc
popf
sbb
js
das
std
aaa
lret
sub
sbbb
mov
mov
sbbb
ja
sub
shlb
sub
loopne
ljmp
jne
sbb
xor
das
mov
js,pt
es
sub
dec
mov
mov
and
addr16
xchg
shrl
xor
pop
sub
leave
test
sub
or
sub
push
xor
sub
dec
mov
push
sub
or
or
xchg
jecxz
test
push
leave
fwait
sub
push
add
dec
and
jo
jb
ds
add
in
add
js
test
insb
push
movsb
jbe
lds
ljmp
jne
mov
fcom
sub
ja
mov
hlt
gs
enter
xor
add
out
sbb
push
data16
enter
lods
imul
mov
jo
mov
jnp
pop
cli
dec
adc
dec
mov
mov
sub
sub
inc
push
push
sbb
cmp
sub
mov
add
jae
inc
outsb
sub
ret
inc
test
in
rolb
add
inc
push
pop
lret
data16
sbb
mov
sbb
or
dec
mov
push
call
popa
sub
or
mov
ljmp
rolb
push
xchg
mov
enter
cmc
andb
cli
sub
scas
insb
in
or
js
push
or
xchg
aam
into
sbb
int
in
push
arpl
jae
inc
mov
out
xor
mov
jmp
test
fld
cltd
lcallw
test
sbb
call
sub
mov
sub
adc
gs
repnz
adc
roll
js
add
movsl
scas
jge
inc
adc
idivl
jae
sarb
xchg
into
and
mov
mov
sub
sbb
add
cli
push
sub
adc
stos
adc
xchg
mov
sub
sbb
inc
add
jo
insb
test
jnp
sbb
push
stc
call
lods
adc
lods
or
clc
sub
jb
mov
mov
ds
jmp
js
outsl
lret
push
lahf
sub
aad
or
inc
sub
hlt
push
cmp
cmp
sub
sbb
insb
insb
pop
inc
mov
xchg
je
mov
fdivr
mov
add
rcr
push
addr16
sub
jae
lock
adc
add
ja
or
lcall
sub
push
orl
adc
sbb
and
lods
test
xchg
push
or
pushf
scas
shrb
test
cld
cmp
sub
push
sub
pop
sub
pop
sahf
pushf
popa
sbb
sub
mov
fisubrs
daa
pop
xor
stc
paddsw
dec
jmp
shll
mov
aas
mov
insb
out
and
out
mov
xchg
imul
outsl
xor
repnz
jge
dec
jno
adc
je
jl
fcos
mov
loope
fdivrl
mov
scas
sub
mov
cmp
inc
outsb
push
addl
sub
sub
dec
test
adc
xchg
outsb
lock
shll
cmp
xor
mov
sub
fstps
xor
dec
inc
movsl
stos
adc
adc
andl
arpl
ljmp
lods
cmp
sti
fsubrl
fcmovnbe
das
and
cmpsl
stos
popa
xchg
inc
out
movsl
mov
mov
sub
cmp
ds
lret
sub
clc
sub
xchg
xor
or
adc
sub
and
cltd
sti
xor
sub
push
cmpsl
mov
jb
and
into
aad
adc
sub
ss
mov
sub
popa
jo
sti
hlt
lea
sub
outsl
pusha
push
mov
lods
jge
popa
test
push
fldcw
push
and
mov
dec
cmp
and
das
push
mov
mov
fdivr
inc
sub
push
jmp
out
inc
pop
outsl
call
sub
aad
lods
mov
jo
and
dec
sbb
cmp
adc
add
aam
jae
in
stos
incl
movsl
outsb
mov
sub
xchg
fists
fisubrl
xchg
xchg
sarb
xchg
sbb
lods
sbb
mov
ja
add
inc
pop
rolb
cmp
sub
movsl
mov
sub
pop
rcrb
shlb
pop
add
ret
les
popf
mov
jnp
mov
mov
sbb
scas
stos
pop
test
pop
lret
pop
cmp
push
in
scas
cwtl
cli
mov
sub
or
inc
imul
ljmp
nop
sub
jae
add
and
cmp
add
sti
stc
sub
sbb
test
sub
outsl
sub
aaa
mov
jmp
pop
sub
cmp
cmp
int3
aaa
or
sub
ljmp
es
pop
lds
fsubs
addr16
sub
mov
insl
mov
ds
mov
lock
sub
cmp
fisubrs
jae
lods
push
mov
shll
mov
test
xor
ret
mov
jg
xor
add
cmpsb
inc
add
sbb
sub
or
push
sub
xchg
mov
stos
push
sub
sbb
add
lds
push
mov
call
pop
jb
arpl
lahf
and
xor
mov
sbb
popf
lds
jge
push
jo
cmp
push
cmp
incl
pop
imul
adc
pop
sub
dec
sub
adc
push
sub
loope
dec
dec
adc
outsb
add
lret
repz
sub
mov
cmp
ficoms
adc
out
pop
cs
mov
lret
push
mov
stos
or
sub
sbb
xor
bound
add
mov
sub
popf
jge
movsb
push
push
sub
add
call
sub
sbb
and
cmp
pop
mov
mov
in
shll
aam
sub
arpl
jbe
jno
cmp
popa
or
jmp
sti
mov
test
cli
popa
mov
loopne
int
xor
xor
pop
jg
cmp
imul
rorl
add
scas
pop
pop
daa
clc
or
mov
jo
and
mov
leave
scas
cmp
sub
xor
sti
xchg
clc
cmpsl
stos
and
mov
adc
cli
jg
cltd
sub
mov
dec
rcll
mov
iret
add
gs
sbb
jo
and
mov
shll
sub
loop
mov
mov
mov
call
xchg
jmp
xchg
mov
jne
add
sub
filds
xchg
jo
lock
outsb
sbb
dec
dec
andl
cli
or
pop
jae
cltd
cli
addr16
push
xor
in
fs
sbb
adc
popfw
xor
gs
pop
sub
pop
pop
stc
sbb
in
mov
shrl
or
popf
cmp
add
repnz
test
fcom
andl
cmp
cli
jbe
jmp
leave
lret
loop
js
jnp
cmp
aaa
test
push
les
inc
push
int3
cmp
dec
out
sbb
jns
in
push
outsb
and
lret
lret
sti
les
lcall
mov
xor
in
inc
xor
clc
mov
add
in
ja
xor
dec
subb
je
fmuls
test
push
int3
sahf
mov
int
pop
scas
jge
mov
push
push
loopne
lret
pop
ss
mov
push
icebp
dec
movsb
scas
push
in
adc
stos
imul
cmp
jecxz
aas
lret
rolb
lods
cmp
sub
and
les
sbb
xchg
push
push
mov
ret
lcall
pop
push
cltd
mov
sahf
lahf
call
aad
pop
xchg
adc
dec
push
push
jg
scas
mov
cmp
and
in
inc
loope
clc
mov
jns
push
js
stos
fs
mov
lds
pop
xlat
cli
sbb
in
sti
xchg
lds
jmp
jmp
inc
xchg
cmp
data16
add
xchg
adc
out
cs
scas
icebp
inc
movsl
shrb
mov
lret
ja
out
jmp
fs
loope
jmp
mov
data16
addr16
push
sub
jo
push
sbb
cltd
jae
adc
pop
sub
dec
jmp
ds
cli
gs
cmp
mov
incl
jl
sbb
or
pop
ret
repz
popf
fdivrs
or
xchg
fcoms
cli
pop
int3
mov
out
add
arpl
ret
aas
test
test
inc
add
jge
aad
push
and
or
xchg
movsb
mov
es
cmc
sub
ret
lock
repz
sub
aas
vmovdqu
inc
xchg
sbb
or
cmp
pop
popf
sbb
and
sub
push
push
jl
lcall
fwait
es
mov
mov
add
js
mov
scas
xchg
cs
stos
daa
adcl
cld
xchg
cmc
mov
mov
loopne
pop
jns
sbbb
mov
mov
adc
into
pop
fsts
jmp
adc
addl
rol
or
fcmovnu
dec
mov
dec
aam
xor
or
xchg
mov
mov
inc
call
mov
icebp
dec
push
sub
sti
aaa
mov
scas
mov
in
addr16
fldl
xor
ret
shrb
andb
int3
mov
cmpsl
fldl
stos
xchg
lret
cmpb
jns
fadd
dec
push
scas
cmp
dec
dec
cmpsl
ss
xchg
loopne
pop
cmp
popa
dec
test
hlt
jmp
mov
mov
adc
jns
repnz
cmp
leave
lret
ljmp
loop
mov
lds
jmp
xchg
popa
in
adc
popa
cli
xchg
nop
getsec
mov
pop
mov
in
adc
sub
push
cli
sub
movsb
sbb
mov
mov
dec
sub
inc
mov
jg
aad
push
arpl
inc
jmp
push
mov
outsb
sbb
sbb
jmp
mov
pushf
test
ds
jge
int
mov
sbb
ss
out
outsl
int
sbb
jno
push
enter
cmp
cmp
xchg
aam
rcl
cmp
inc
jb
pop
mov
xchg
fdivs
ret
mov
shrb
scas
ljmp
xor
movsl
xor
push
cli
dec
repnz
out
jb
or
xor
outsb
cmp
cwtl
notl
xlat
pop
stos
inc
dec
out
addr16
add
or
aaa
lds
push
stos
fucomip
scas
jp
enter
out
xor
mov
das
sub
jl
lds
pop
cmp
std
dec
cli
sub
mov
mov
mov
dec
mov
sbb
insl
cmpsb
jle,pn
dec
pop
mov
pop
inc
pop
mov
test
shlb
rcll
fs
jecxz
pop
xor
xor
push
fldt
dec
cmp
addr16
ret
cmp
stos
and
push
aad
clc
mov
pop
cli
jns
xchg
jecxz
pop
mov
sub
pop
jmp
lea
dec
and
push
roll
adc
mov
mov
cmpsl
popa
adc
out
imul
mov
mov
fnstsw
mov
sub
pushf
stos
cmpsb
sub
stos
cmp
inc
sti
je
cmp
mov
push
ja
lods
mov
push
add
xor
pop
movl
mov
shlb
adc
push
fsubrs
call
adc
mov
sbb
in
out
jg
push
out
jnp
ret
push
clc
sub
mov
pushf
lods
out
cmp
adc
inc
xor
cmc
pop
add
adc
sub
and
dec
xor
and
sub
mov
push
xchg
outsb
loop
shrb
xchg
aad
frstor
inc
inc
in
int3
push
and
xchg
xchg
xor
push
or
cltd
pop
scas
dec
inc
xorl
push
push
mov
or
popa
repz
scas
sbb
lods
lahf
ret
fdivrp
or
sbb
adc
jo
ror
dec
pop
sub
xchg
sbb
movl
in
sbb
fstpt
les
mov
aaa
ret
lods
leave
mov
xor
scas
out
cmc
cmpsl
gs
mov
inc
insb
stos
cmp
cmp
popa
inc
fsubrs
sti
cmp
filds
clc
mov
dec
jnp
cmpsl
sbbb
repz
add
iret
push
fcoms
or
mov
add
fistpll
rcr
das
sbb
add
pop
fistl
mov
fwait
dec
cmp
shlb
sub
in
aas
cli
aam
mov
repz
pop
mov
cwtl
xor
inc
jp
jns
cli
mul
add
lret
cmpsb
mov
test
pop
lret
mov
out
out
sbbl
movsb
cmpsl
push
imull
or
out
and
dec
out
int3
lods
inc
ljmp
dec
stos
pusha
jns
ljmp
aam
push
dec
andb
std
movsb
adc
stos
mov
mov
mov
popf
and
dec
scas
dec
shrl
test
sub
sub
pop
sbb
test
sti
push
xchg
jl
bound
addr16
or
pop
cmpl
loop
mov
push
stos
xor
pop
fstpt
sub
lds
lods
sub
rcll
pop
dec
sbb
loope
cmp
mov
rol
mov
bound
and
outsb
cmp
or
cmp
sbb
mov
sub
aad
cltd
loope
jmp
es
push
push
add
fs
push
add
aad
fsincos
arpl
gs
mov
jae
jb
cmp
or
inc
xchg
ja
mov
cmpb
inc
movsb
jb
pop
dec
xchg
jge
jo
fsubrl
or
sbb
sbb
decb
pop
iret
adc
xchg
cmp
lods
sub
push
adc
mov
jp
sub
mov
mov
enter
mov
addr16
sub
sbb
mov
in
and
inc
mov
add
cmpsl
rcll
add
mov
daa
adc
lock
loopne
cmc
stos
adcl
push
adc
or
lea
pop
ret
xchg
loope
ds
scas
arpl
or
inc
sub
iret
pop
xchg
int
sub
call
faddl
pop
imul
test
inc
fwait
negl
sub
jecxz
adc
push
sbb
sub
dec
icebp
ds
int
aam
mov
sub
cmp
sti
mov
in
sub
je
xchg
pop
clc
cmp
fcmovnb
insl
pushf
pop
js
xor
sub
xlat
xchg
scas
mov
jb
jg
ja
mov
movsb
adc
loope
sub
cmp
or
test
jp
sbb
sub
dec
cmc
lock
fistpl
jns
xor
jecxz
aas
jb
push
inc
shll
xchg
pop
stc
inc
sub
ljmp
push
cmp
add
sub
push
mov
dec
adc
jnp
and
pop
sub
sbb
or
jmp
sbb
ds
cmp
popf
adc
sub
sub
test
bound
and
dec
cmpsl
nop
jns
sahf
lods
dec
push
cmp
and
add
push
push
aas
mov
sub
sub
push
into
pop
pop
pop
sub
aad
ljmp
add
mov
jno
or
xchg
xor
or
cmp
lcallw
sub
adc
clc
nop
xor
mov
je
imul
add
mov
dec
push
ret
mov
pushl
mov
mov
jnp
inc
nop
aam
lods
pop
inc
and
sub
cmp
xor
fistps
in
add
sub
cmp
xchg
leave
test
stos
cmpsl
popa
mov
sub
rorl
push
sub
xchg
mov
or
sub
stos
inc
sub
jl
out
mov
fidivrs
inc
xchg
add
mov
inc
test
outsl
movsl
call
jg
or
and
jle
sub
movsl
jne
xor
sub
cmp
jp
jecxz
adc
sub
and
and
incl
popf
push
xchg
ret
mov
jmp
inc
aad
adc
cmpl
test
inc
rcrb
jae
aam
leave
ret
sub
sub
sub
out
xor
cmc
push
xchg
dec
sbb
push
push
pop
jae
cmp
ret
fsubrs
adc
mov
mov
js
mov
pop
cmp
lea
test
loop
xlat
xchg
insl
push
lahf
push
dec
loop
rclb
or
push
fisubl
mov
test
push
mov
cmc
int
jg
xor
sub
xor
out
sub
or
je
sub
rorb
loopne
fisttps
dec
xchg
imulb
mov
sti
sub
or
cmp
in
push
sub
add
xor
sub
das
pop
mov
sar
sub
jmp
sub
int
jb
shl
jnp
cmp
jns
sub
ret
std
add
pop
daa
sub
mov
mov
xchg
and
xor
inc
stos
pop
arpl
sub
sub
mov
and
xchg
rorb
xchg
sbb
mov
fadds
jg
out
sub
adc
popa
adc
xor
repnz
mov
sub
enter
jae
sub
pop
and
jg
incl
add
std
mov
ficoms
add
inc
insb
adc
sub
ss
dec
pop
sub
scas
adc
jne
les
sbb
lods
sub
pop
mov
ret
xchg
inc
shlb
adc
shrb
hlt
stc
inc
stos
iret
lods
adc
adc
inc
shrl
ds
mov
addr16
sub
cmp
outsl
mov
sti
aad
sub
pop
mov
cmp
mov
insb
outsl
mov
add
stos
dec
or
out
shlb
jge
adc
jle
in
ficomps
adc
sub
pop
pop
jmp
inc
sub
sub
out
nop
imulb
push
jmp
jecxz
or
adc
std
call
adc
cmp
insb
scas
cltd
sub
in
les
push
pushf
popa
sub
mov
shrb
cmp
scas
pop
sub
adc
stc
ror
push
outsl
repz
mov
push
fucomp
enter
aas
das
add
pop
sub
testb
enter
jo
sub
shrb
jno
lods
mov
sub
and
or
insl
sub
mov
lahf
sub
insb
sbb
lods
fldt
mov
std
stc
xor
test
inc
push
rol
into
cmp
cmp
sub
hlt
repz
push
ret
loopne
xchg
adc
add
adc
movb
clc
cli
lret
cld
push
leave
pusha
sub
inc
out
or
jns
xor
jnp
aam
test
ret
sbb
test
loope
hlt
lea
pop
dec
scas
sub
cmp
push
sub
lods
sbb
dec
imul
cmc
mov
shrb
lock
jge
cmpb
sbb
push
dec
test
daa
mov
sub
push
call
sub
and
pop
pop
sub
out
aaa
jbe
cmp
pop
jae
faddp
sub
xchg
in
ret
ja
sub
or
push
fisttpl
insl
loopne
xchg
and
in
sub
inc
jmp
outsl
loop
leave
sub
imul
sbbl
push
ret
imul
dec
leave
addr16
mov
pop
push
cld
pop
or
pop
rolb
ds
or
inc
add
psubd
stos
push
dec
test
dec
inc
or
fildll
xchg
shrb
outsl
cmp
dec
jae
mov
cmp
movsb
js
popa
xor
ret
sub
mov
fidivrs
xor
xchg
int
cmpl
movsl
adc
out
or
sub
enter
out
stos
es
decl
and
or
and
jae
jns
ffreep
movsl
sub
sub
xchg
out
dec
mov
loopne
push
inc
sub
rcrl
mov
lret
cmpsl
test
sbb
dec
add
jns
jne
add
mov
in
dec
sti
add
adc
push
ret
jge
shl
sub
lret
sub
hlt
scas
jp
inc
repnz
sub
fld
inc
insl
dec
stc
lcall
pop
push
aaa
push
sub
sub
pushf
cmp
sub
mov
jmp
dec
xchg
mov
adcl
ljmp
push
pushf
mov
xchg
inc
ja
jmp
xchg
and
sbb
repz
push
dec
ljmp
pushf
fimull
insb
mov
out
dec
loope
add
jecxz
or
push
inc
sbb
pop
fcoml
cmp
xor
out
imul
push
sbb
sub
add
sub
ljmp
addb
sub
sub
inc
sbb
imul
cmp
popl
andl
lea
test
es
sub
xor
imul
dec
mov
in
stc
jge
mov
movsl
enter
cwtl
sub
adc
or
push
adc
mov
stos
dec
dec
and
add
jne
push
xorb
mov
adc
or
daa
ds
mov
fwait
or
enter
sub
jg
mov
mov
push
sub
pop
adc
fistl
xorb
jnp
std
in
lds
or
and
inc
sub
push
mov
insl
sub
call
mov
in
sbb
and
lea
rorl
sub
mov
notb
in
mov
into
cld
xor
xlat
sub
je
fsts
mov
jbe
mov
mov
nop
sbb
pop
cmp
or
push
repnz
sti
daa
mov
stos
jo
mov
sbb
cmp
out
in
jmp
inc
rcrl
dec
aas
sbb
scas
push
dec
dec
sbb
fucom
mov
mov
repz
mov
popf
jns
icebp
ret
cld
and
cmpsl
out
inc
loop
add
lret
push
xor
sub
loop
mov
mov
pop
mov
repz
push
sbb
mov
mov
cmp
movsl
leave
leave
in
sbb
sub
fwait
jp
xchg
mov
push
pop
int
ss
ljmp
clc
adc
dec
mov
pop
enter
mov
and
mov
add
xchg
and
xor
pop
repz
movsb
cmp
xor
aam
cmp
shl
xorb
fisttpll
cs
jecxz
dec
cmp
aam
imulb
mov
dec
sbb
mov
clc
xchg
aas
bound
mov
push
inc
mov
sti
mov
mov
jb
inc
push
fsts
cwtl
hlt
enter
and
pop
outsb
xchg
mov
loop
scas
dec
sti
cli
xchg
mov
js
dec
inc
inc
shll
add
sti
into
stos
lods
dec
sub
adc
outsb
dec
popf
daa
inc
and
xor
xor
cmp
mov
mov
pop
mov
push
scas
mov
adc
insl
sub
push
mov
out
dec
inc
cwtl
xlat
push
mov
or
jge
jle
clc
mov
ja
cli
ds
out
pop
jae
mov
jne
adc
xor
icebp
jge
jle
repnz
clc
jae
or
repnz
jmp
out
dec
xor
lods
sbb
mov
or
ss
aaa
out
dec
int3
sbb
xchg
xchg
sub
pop
jg
leave
popf
mov
clc
mov
pop
shlb
inc
jecxz
decl
cmp
and
aaa
mov
test
and
push
ret
js
inc
cs
push
cmp
icebp
jns
fucomip
mov
leave
cs
sbb
sbb
mov
mov
and
xor
jge
sbb
insl
repz
sbb
push
push
pop
sub
pop
mov
sbb
sbb
loop
push
pop
cwtl
mov
test
push
pop
cld
xor
fs
out
inc
inc
add
clc
jmp
into
imul
scas
pop
addr16
popf
pop
fldcw
outsb
pop
sub
jmp
stos
movsl
subb
add
sub
loop
sub
jo
sbb
enter
push
insb
inc
mov
pop
sub
dec
pushf
add
loop
fists
sbb
rcr
daa
out
mov
faddl
mov
loop
leave
mov
rclb
lret
xchg
inc
shll
ret
cmp
out
sbb
pop
or
nop
loope
mov
out
fs
xor
mov
sar
in
sub
push
pop
insb
pop
or
lds
mov
rorl
lock
sti
cmpb
in
shr
mov
ljmp
nop
sub
mov
movsl
out
lods
lret
xlat
inc
push
push
fxam
xor
push
ja
insl
fs
cmp
cmp
popf
pusha
fldcw
nop
add
cld
sbb
cwtl
lcall
inc
stc
jg
jb
dec
adc
mov
inc
pop
iret
jnp
dec
in
cmp
jp
cs
stos
dec
cmpsb
imul
addb
and
jecxz
and
dec
mov
mov
cmp
push
dec
mov
sub
pop
xor
test
inc
in
pop
out
mov
and
idivl
push
push
or
insl
add
mov
cmp
add
mov
jb
cwtl
xor
sub
mov
xchg
mov
sub
or
test
lds
add
add
inc
mov
push
fs
out
or
dec
rorb
add
pop
or
push
dec
cmp
dec
sub
jg
add
sbb
imul
aad
xchg
repz
sbb
push
xor
add
or
filds
sbb
ja
icebp
insl
clc
mov
pop
sub
inc
xor
cmpsb
and
fmull
sbb
cmp
xor
sub
mov
inc
sub
jmp
sbb
jae
lcall
push
lret
mov
imul
inc
jae
cld
adcl
mov
sub
and
xchg
outsb
aaa
jbe
daa
inc
lret
dec
clc
insb
xchg
jnp
mov
pop
push
je
daa
dec
jbe
adc
jmp
xor
mov
xlat
test
loop
in
mov
jp
jns
gs
loopne
xor
xor
push
ret
add
pop
sahf
fs
cmpsb
push
or
data16
mov
aam
sbb
jnp
lods
xor
fnstsw
inc
inc
sub
test
jo
push
jae
scas
sub
out
ljmp
es
push
push
ds
subb
xor
adc
pop
jecxz
sub
rolb
sbb
sbb
in
insb
pusha
cltd
pushf
inc
cmp
imul
popf
clc
call
nop
lcall
lods
ss
shlb
ds
lret
nop
or
xchg
add
data16
out
imul
les
push
outsb
ss
sub
mov
mov
in
pop
stos
sub
cmp
test
outsl
sbb
jbe
out
addr16
cmp
push
arpl
fldenv
mov
lods
mov
int
add
adc
push
cmp
mov
push
lods
or
sub
rolb
mov
inc
sub
add
ret
icebp
xchg
xor
imul
or
sub
or
dec
push
stos
je
sub
fimull
js
adc
xchg
cmp
adc
jmp
mov
pop
inc
gs
pushf
sbb
sub
outsl
std
sub
mov
xor
lea
out
aas
push
dec
lods
cmpl
inc
xor
outsl
mov
ja
mov
xchg
dec
pusha
mov
add
jbe
push
sbbl
bound
lods
sub
jle
mov
or
sbb
stos
push
adc
lret
mov
jge
mov
jb
rcrl
sub
and
mov
stc
cmp
sub
rolb
dec
mov
into
and
xchg
es
push
jmp
adc
cmpsl
mov
test
mov
mov
jae
push
adc
and
cmpb
out
rcll
fwait
insb
or
testb
push
je
iret
jecxz
fsubrl
leave
cmp
xchg
out
sub
mov
fnstenv
subl
mov
cs
jl
popa
sahf
mov
test
ja
cmp
sub
pop
sub
ja
arpl
sti
add
rcrl
shll
mov
ret
int3
bound
sbbb
sti
mov
push
cmp
mov
sub
or
mov
or
push
pop
ret
lret
inc
negl
sub
jl
sbb
add
cmp
arpl
clc
lret
and
cmp
push
aas
andps
imul
jo
hlt
sub
inc
mov
sbb
fdivr
rcl
clc
cs
add
xchg
or
fsubr
int
inc
cmp
pusha
mov
in
aam
repz
loope
inc
adc
mov
dec
sub
aas
inc
dec
sub
sub
lock
mov
scas
enter
and
icebp
xor
xor
clc
lcall
nop
mov
dec
sahf
jns
stos
rcl
xor
cmp
xchg
icebp
ret
adc
div
addr16
mov
dec
cmp
pop
test
jl
mov
sub
push
scas
cmc
aam
das
xor
dec
push
jmp
adc
ja
jb
scas
mov
mov
daa
lock
xlat
sarb
fcomps
js
add
cwtl
rcrb
inc
xor
stos
mov
sub
lds
outsb
inc
xor
cmpsb
cld
gs
cmp
std
adc
xlat
cmp
sbb
dec
stos
mov
push
leave
and
movsl
clc
in
mov
adc
inc
dec
mov
mov
test
adc
dec
sar
xor
cli
xor
xchg
sub
sbb
in
pop
addr16
jecxz
jnp
pop
push
inc
jle
mov
nop
push
jbe
cmp
jo
or
push
jnp
push
sub
cmovg
in
mov
and
jb
sub
fists
cltd
sbb
je
pop
sub
in
lods
lea
loopne
push
std
js
add
fistpl
jns
mov
loope
sub
mov
cmp
pop
jmp
popf
sub
sub
push
jl
sub
adc
movsb
in
insb
jecxz
xchg
enter
sub
jno
mov
orl
cld
cmp
ds
out
cmpsb
frstor
or
jmp
addr16
das
repz
lock
divl
call
inc
pop
loopne
lcall
int
xor
xchg
test
out
xchg
jle
ja
sub
and
and
add
dec
cmpsl
pop
sbbb
mov
aad
jmp
stc
imul
sub
test
inc
sub
fildll
inc
mov
jge
repz
jb
stos
xchg
ficompl
jge
icebp
and
stos
outsb
sub
inc
in
imul
cmp
dec
icebp
outsl
cmp
sbb
sub
push
mov
xor
jb
in
xor
enter
xor
addl
mov
js
xchg
mov
js
imul
inc
sub
inc
leave
jmp
jae
fcoml
sti
fistl
dec
dec
xchg
nop
xchg
outsl
inc
add
ds
pop
mov
ljmp
xor
fdivs
xchg
sub
bound
inc
test
sbb
jae
and
rcrb
pop
sub
or
frstor
xorb
pop
ret
sub
arpl
hlt
js
push
lret
test
aad
pop
cmp
mov
cli
test
sbb
xchg
outsl
mov
sub
popf
or
mov
and
xor
sub
inc
xchg
stos
in
sub
stc
sub
imul
mov
xchg
sub
fnstenv
out
cmp
sub
pop
adc
inc
fimull
out
inc
lret
dec
fwait
decl
sub
sub
xor
sub
pop
adc
jns
and
stc
cli
sub
cmpsl
int3
push
and
push
test
adc
sub
pop
std
mov
push
iret
out
adc
cs
hlt
repnz
je
mov
icebp
sbb
inc
test
test
mov
ds
inc
mov
dec
into
and
daa
cwtl
jbe
adc
sub
pop
loope
dec
mov
mov
jmp
stc
arpl
xor
ds
dec
cld
popfw
dec
imul
adc
lret
je
add
xlat
sub
sub
cld
xchg
dec
jle
sub
push
inc
imul
xchg
sarl
sub
movsb
mov
je
in
hlt
and
dec
sub
js
rsqrtps
rorb
pop
or
and
lret
mov
jmp
out
scas
mov
mov
jmp
lods
popa
sub
call
lods
dec
cmpb
test
hlt
adc
jg
pop
cmp
loopne
xor
mov
mov
sub
outsl
popf
ds
stos
and
sub
mov
mov
sub
xor
dec
mov
sub
ret
dec
mov
mov
mov
roll
lcall
cwtl
sub
sub
inc
pop
out
pop
and
add
sub
fcoms
in
stos
call
and
cmp
js
cs
mov
repz
pop
popw
cmp
lea
std
sub
filds
adc
je
nop
push
out
in
xor
rcll
mov
movsb
cmp
test
sub
int3
repnz
fisubrs
xor
fcoms
mov
outsl
xor
mov
iret
imul
movsb
sub
push
dec
scas
subb
sbb
mov
out
mov
fs
sub
or
outsl
sti
mov
popf
pop
rcr
xchg
mov
or
pop
ret
cmp
and
outsl
sub
dec
lods
sbb
iret
pop
int3
push
xor
pop
sub
sub
in
dec
daa
cmp
je
int
sub
pop
insl
xchg
push
cmp
push
xor
test
arpl
cli
sahf
sub
pop
dec
add
fwait
sti
imul
push
fists
mov
fiaddl
sbb
sub
sub
fwait
push
jl
test
xlat
sbb
cmp
imul
insb
mov
sub
mov
and
xor
mov
adc
xor
stos
je
pop
mov
pop
daa
lock
or
in
sub
rcll
add
dec
into
test
cvtpi2ps
pop
sar
push
sub
std
inc
fsubrs
cmp
test
mov
scas
lock
mov
js
fisubrs
lds
and
adc
es
out
pop
inc
sub
xchg
hlt
arpl
sahf
inc
cmpsb
imul
call
ds
and
test
sub
adc
rcrl
aas
sub
mov
ficoml
sbb
adcb
xchg
enter
sbb
jb
push
loop
push
sub
jno
test
mov
fcom
fldenv
fcompl
sub
jl
and
add
adc
inc
and
test
sub
fs
mov
lret
xorb
rcl
mov
cmp
fcoms
imul
inc
push
mov
mov
sti
add
sub
jmp
scas
xchg
decb
aaa
lret
sub
mov
adc
int3
adc
inc
or
out
add
call
sub
dec
xchg
ds
inc
xorb
loop
fadds
shll
jb
les
lds
in
rorb
out
push
add
mov
lret
mov
das
jo
cwtl
sub
or
call
inc
cld
lcall
sbb
cmc
sub
ja
xchg
sub
addr16
sub
jle
clc
aas
ror
test
lods
mov
sbb
bound
xor
cltd
sub
or
out
mov
data16
inc
test
add
mov
push
out
sub
call
idivb
sub
pop
inc
pop
sub
out
in
xor
sbb
xlat
mov
push
push
cld
ret
jge
jle
out
outsl
sub
or
sub
jo
imul
imul
sub
test
xor
std
jae
pop
adc
iret
fs
sub
mov
mov
sub
pop
popa
jmp
mov
xor
sub
fsubs
test
fwait
lock
cld
push
repnz
aam
js
jb
lcall
cmpsl
mov
push
pop
sub
and
decl
dec
cmc
repz
les
scas
inc
and
mov
pop
cmp
aas
popf
xchg
sbb
inc
pop
test
pop
dec
jg
sub
xor
adc
imul
pop
inc
sub
xor
push
sub
jge
push
fisubrl
cmp
inc
dec
pushf
in
and
cmp
xchg
sub
cmp
scas
jbe
lcall
and
je
jge
cltd
sub
inc
ret
mov
pop
inc
jne
rcl
add
fwait
insl
push
or
adc
cmp
outsl
call
fsubrs
sub
sub
push
push
inc
add
scas
push
or
les
addr16
dec
xchg
sbb
lea
pop
mov
push
lock
push
cmc
and
adc
and
shrl
clc
in
ret
adc
pushf
test
sti
inc
pop
sub
sub
lahf
mov
sub
scas
lea
adc
movsb
fisubrs
adc
repz
dec
and
fdivl
pop
xchg
addr16
mov
sub
sub
lock
loopne
jb
mov
aam
je
fldt
in
sub
enter
or
mov
nop
aaa
dec
jb
pop
and
mov
pushf
gs
push
mov
test
inc
sbbl
sub
mov
into
push
sub
lret
ja
cmp
sub
add
xchg
imul
push
stos
loope
mov
cli
add
mov
imul
cmc
loop
inc
inc
mov
sub
dec
cli
inc
adc
fidivrl
mov
cmp
icebp
cmp
sbb
mov
fisubrs
push
das
popf
or
push
push
mov
xchg
lds
cmp
cmp
and
cmc
cmpsb
xor
fldcw
cmpb
push
dec
mov
vpaddw
call
mov
fstl
cwtl
mov
mov
repnz
leave
inc
pop
lods
sbb
mov
add
vmovlps
jb,pt
inc
bound
repz
add
or
pushf
popf
out
dec
pusha
push
shll
xchg
js
sub
mov
leave
iret
fwait
test
imul
xchg
mov
std
jae
inc
cli
adc
adc
add
sub
adc
ret
pop
call
sbb
les
xorb
cli
mov
jne
insl
push
mov
inc
push
cli
push
fbstp
jl
sarl
push
sub
xor
mov
and
ljmp
out
push
and
imul
jns
jmp
sub
jns
cmp
popa
les
dec
adc
mov
pop
test
in
mov
dec
xor
jp
sub
xor
movsb
clc
aam
repnz
inc
test
shll
test
cli
jns
sub
lds
push
pop
shrb
sti
push
pop
popf
push
out
repz
iret
aas
jecxz
sub
outsl
rcll
mov
cmp
aad
mov
sti
mov
inc
lock
fs
sub
idivb
lahf
jecxz
addl
rcr
fistl
js
cld
and
mov
inc
pop
repnz
mov
fists
jp
mov
xchg
ss
xor
aaa
xchg
psubq
jbe
fs
sbb
cmpsb
mov
inc
xchg
cmp
out
mov
bound
scas
and
imul
push
mov
pop
mov
push
inc
jb
cmp
sti
testl
cli
lcall
insl
scas
ret
lret
es
pushf
add
inc
jae
push
push
mov
xchg
in
inc
adc
fsubl
loope
mov
andb
adc
mov
adc
jecxz
add
dec
cmp
aaa
les
clc
mov
add
movsb
sub
jg
inc
lds
sub
cmc
xor
cld
sbb
rcrb
sti
test
loope
xchg
inc
stc
or
mov
loope
mov
sub
push
dec
pop
jns
sbb
test
sbb
bound
cmp
out
adc
push
cmp
jo
cmc
jmp
call
and
or
push
pushf
or
out
add
push
sti
cmp
mov
or
icebp
call
add
roll
add
push
or
les
fwait
cld
mov
xchg
mov
fnstsw
mov
sar
nop
addr16
cmp
sbb
sub
jmp
pop
rorb
daa
dec
jo
add
lret
insl
mov
push
data16
movsb
adc
dec
push
data16
fs
xor
push
ss
in
loop
shlb
cmp
jp
out
sub
jo
pop
test
ret
stos
or
mov
cmp
mov
push
add
push
leave
jecxz
cmc
dec
mov
lods
cmpsb
lock
xlat
mov
negb
pop
cli
mov
sub
testb
int
loopne
xchg
mov
mov
mov
add
jno
cli
pop
pop
sub
xor
outsb
mov
cwtl
cltd
sbb
inc
mov
add
mov
mov
mov
adc
sub
das
sub
cmp
push
loop
inc
stc
outsl
sub
sub
xchg
subb
xchg
jecxz
mov
sub
sbb
loop
sub
pop
cli
sub
loopne
push
sub
dec
xor
ret
insl
lods
jmp
or
jmp
repz
cwtl
push
or
pop
xor
test
mov
mov
xchg
xor
sub
cmp
sub
sbb
and
subb
pop
daa
push
cmc
ret
push
mov
fldcw
push
sub
sub
sub
sarb
cmp
mov
adc
mov
sbb
or
sub
and
adc
mov
sub
repz
imul
sub
movsl
push
sub
pop
cli
sub
xor
sub
insb
aas
adc
jge
int
sub
adc
inc
jae
push
in
lcall
outsl
xchg
push
push
cmpsl
pop
popa
sbb
mov
mov
mov
or
jmp
sarb
and
mov
sub
hlt
loopne,pn
ret
ds
push
push
sub
pop
cmpsl
sub
scas
hlt
ret
loopne
dec
sub
cld
out
dec
dec
sti
push
lret
dec
int
sub
imul
mov
ret
das
pop
cmp
outsb
adc
inc
sub
sub
mov
sub
sbb
movsl
and
mov
sub
cwtl
mov
in
and
sub
xor
sub
fstp
jge
dec
pop
stos
enter
scas
pop
mov
aaa
sub
pop
inc
pop
sub
inc
inc
sbb
mov
pushf
add
mov
or
ljmp
pop
cli
mov
sbb
lods
add
stos
sub
sub
mov
pop
mov
push
ss
enter
xlat
jb
jge
fwait
int3
sub
mov
sub
inc
add
dec
jg
xlat
sub
adc
mov
dec
cmp
cltd
scas
push
mov
dec
sub
into
mov
imul
push
jmp
flds
pop
inc
aas
xchg
push
test
mov
data16
jl
mov
sub
mov
js
insb
addr16
sub
fwait
arpl
pop
or
or
xlat
outsl
push
repz
imul
add
xchg
xlat
mov
sub
xchg
fisubrs
dec
fwait
psrlq
or
js
xchg
lock
sub
inc
shrb
mov
call
mov
sub
fwait
jnp
les
sub
mov
adc
cli
lahf
dec
xchg
cmp
adc
and
xchg
dec
lea
adc
sub
shrl
pop
or
xchg
jg
sub
xchg
out
loop
lock
xorb
fildl
push
jg
sbb
mov
push
out
mov
lret
adc
pop
jmp
out
and
out
shll
add
sbb
or
arpl
push
into
jge
daa
fisubs
test
sbb
mov
cmp
fincstp
or
adc
xchg
addb
adc
jne
ret
sbb
icebp
xor
out
jae
push
xor
pushf
cli
fs
xor
test
stos
outsl
sub
add
sub
addr16
cltd
hlt
push
bound
xor
repz
js
and
stc
shll
lds
sbb
orl
daa
das
rol
clc
push
or
lcall
mov
sbb
mov
test
testl
into
sub
enter
cmp
lcall
or
shrl
cltd
repnz
adc
lcall
xlat
xchg
jmp
je
rcrb
pop
mov
lret
ss
pop
mov
mov
dec
hlt
sbb
push
test
rol
inc
imulb
cltd
dec
imul
mov
mov
jp
pop
xchg
push
sub
lret
pop
sti
scas
mov
imul
call
sub
jo
aad
sar
ljmp
or
or
cmp
mov
mov
xchg
dec
add
in
jge
xchg
cs
jbe
fldl
push
cmp
stos
jae
add
in
cmp
cli
sti
dec
stos
xor
push
jmp
xor
pop
lds
mov
mov
adc
jmp
xlat
adc
mov
cwtl
sub
sahf
cmp
in
shrb
es
add
push
sub
mov
shll
sub
in
js
mov
addr16
xorb
outsb
imul
lds
pop
jne
inc
movsb
adc
sub
outsl
mov
inc
out
jmp
or
mov
adc
xor
fsubrl
repnz
mov
jno
sub
sbb
sub
cmp
jl
or
mov
das
or
in
xchg
sub
cmp
mov
xchg
scas
dec
test
stc
js
dec
mov
inc
lock
mov
xor
cmp
inc
push
cmp
pushf
push
sbb
push
stos
pop
mov
sbb
cmp
jns
icebp
sub
pop
mov
in
repz
js
or
inc
jle
xchg
mov
ljmp
sub
arpl
shr
xchg
xor
nop
pop
and
lea
loope
and
sbb
rcll
inc
jae
shrl
sbb
cld
adc
mov
xlat
hlt
push
sahf
pushf
sub
jge
js
out
ja
xor
and
mov
lock
inc
mov
in
xor
lret
push
in
jecxz
cmc
xor
shll
movsl
out
dec
or
sub
xor
mov
aas
xor
pop
sub
add
mov
dec
fadds
int
jge
sub
sub
push
sub
mov
clc
push
pop
mov
jmp
test
rcl
push
les
dec
test
sub
js
clc
imull
xor
sarb
sub
rclb
jne
mov
fs
orb
in
inc
out
daa
push
jae
sbb
sub
or
push
dec
mov
lock
sub
in
sbb
and
dec
inc
mov
xor
add
mov
ds
enter
pushf
xor
movb
out
xchg
enter
sub
xchg
xchg
xchg
sub
call
pop
aaa
test
fldenv
or
sub
jle
cld
inc
xor
out
int3
sub
sub
sub
push
add
std
ds
call
sub
out
outsb
xorl
out
xchg
dec
sub
mov
or
dec
or
repnz
lods
rolb
or
jnp
sub
and
fidivrs
hlt
lea
sahf
cltd
loop
arpl
bound
loope
xchg
dec
jae,pt
mov
jmp
test
imul
pushf
sub
mov
mov
xor
sub
xchg
mov
fwait
add
add
push
push
pop
add
out
or
dec
in
mov
sub
push
xor
or
aaa
inc
lea
add
jle
shlb
sub
jae
dec
popf
dec
test
daa
or
aad
outsl
mov
sub
test
leave
xchg
shll
jecxz
nop
xchg
test
or
xchg
push
cs
push
scas
fsubrl
push
inc
stos
out
adc
inc
jg
add
jecxz
and
xor
testl
scas
push
sub
fwait
jmp
or
or
push
xchg
sub
repz
inc
loopne
dec
addl
mov
aam
cmp
and
sub
lods
dec
outsl
ret
pop
out
pusha
sub
out
sub
inc
sub
push
fbld
ss
addr16
aaa
loop
or
pusha
dec
cmp
cmp
mov
cltd
ljmp
test
mov
mov
dec
sahf
cmp
mov
fildll
inc
mov
enter
xchg
sub
sub
jae,pn
fwait
loope
sub
lret
nop
lcall
ficoml
sub
dec
push
outsl
and
stos
cmp
sbb
pop
sub
jbe
add
push
jl
sub
imull
push
inc
fcomi
mov
add
sub
cmpsl
cmp
pop
dec
cmp
mov
mov
sbb
ljmp
xlat
pushl
xchg
scas
sub
jge
addr16
fstl
sub
cmpl
dec
jno
clc
inc
clc
pusha
movsl
xchg
lods
ds
fists
stos
lret
sbb
xor
loope
stos
xchg
cwtl
nop
sub
scas
cmp
into
cmpb
or
insl
mov
daa
or
cmp
sub
repnz
fs
dec
push
add
sub
in
xchg
jp
or
shlb
pop
mov
inc
xor
into
push
sub
mov
les
popa
mov
xchg
fldenv
ss
popf
pop
into
mov
sub
fsubr
inc
jge
mov
out
mov
fld
into
xchg
mov
nop
xor
imul
jnp
es
sub
mov
sbbl
mov
or
leave
cmp
in
sub
out
sahf
jle
mov
iret
addr16
sub
jb
imul
lahf
popa
and
jg
pop
push
sub
loope
loopne
sub
pop
ror
mov
and
dec
xchg
popf
and
dec
fidivl
in
sub
mov
sub
dec
xor
aad
sub
addr16
push
leave
std
lds
cmpsb
lcall
sub
movsl
movsb
testl
push
jecxz
and
xchg
mov
ret
in
sub
add
loope
insl
ret
push
clc
inc
sub
addr16
lea
jo
cwtl
imul
mov
cs
sub
les
xchg
and
mov
mov
push
xchg
ret
sti
pop
sub
cli
ret
sub
jmp
xor
jg
aas
mov
jecxz
add
lret
sub
sub
aaa
sahf
ja
popf
xor
icebp
loopne
pop
or
mov
mov
ret
jecxz
sti
sub
loopne
stos
dec
cwtl
rolb
out
mov
mov
lods
sub
mov
out
sub
ds
mov
fisubrs
in
cmp
sub
push
cmpb
add
mov
mov
xchg
popa
lods
sub
sti
test
xchg
dec
sub
xchg
cmp
les
cmp
cmp
xor
and
imul
ret
in
out
or
mov
push
mov
mov
and
push
mov
jmp
jp
sbb
pop
sub
adc
sub
aam
loopne
push
and
pop
mov
dec
sbb
sub
dec
sub
xor
nop
dec
cltd
jne
push
pop
cmp
sub
cmp
scas
sub
jecxz
jb
mov
mov
dec
sub
and
orl
sub
inc
push
shrl
jmp
fisubrs
mov
xor
aam
test
mov
sub
insb
jp
push
jecxz
cmp
xor
imul
add
rcll
sub
mov
dec
sub
mov
pop
sti
jmp
sub
outsl
in
jmp
sub
dec
adc
or
jge
cmp
insl
loope
push
cmp
in
stos
std
jne
sbb
xchg
dec
mov
jmp
mov
mov
add
pop
xchg
mov
and
dec
sub
out
clc
xchg
fbstp
ss
js
aas
nop
adc
dec
loope
pushf
subl
outsl
mov
jg
roll
in
dec
sub
push
dec
xor
sub
cmp
sub
mov
ret
mov
cwtl
lcall
xchg
dec
mov
ja
pop
in
mov
pop
inc
sub
cmpl
loopne
cld
sub
add
pop
in
or
repz
or
xchg
aas
pop
xor
inc
scas
sub
call
mov
dec
jg
daa
test
aad
and
and
sbb
xlat
or
add
sub
dec
cmpsb
imul
jo
mov
loope
sub
fidivs
sub
and
sub
imul
enter
cmp
or
leave
das
adc
addr16
clflush
adc
es
inc
arpl
lcall
cli
data16
std
adc
xor
mov
sub
jbe
xorb
bound
inc
mov
jo
or
outsb
mov
cmc
je
pushf
sub
mov
lods
fsubr
test
jge
dec
cmp
and
das
xchg
xchg
xor
sub
mov
inc
les
ss
dec
dec
sub
fwait
std
fdivs
jo
movsl
in
les
push
or
push
cli
and
mov
jmp
cmp
jae
pop
mov
in
pop
cli
inc
mov
jne
jb
mov
push
scas
mov
or
dec
clc
dec
inc
cmp
sti
cmp
inc
jg
dec
mov
or
adc
sub
adc
jmp
enter
push
in
jecxz
ds
cwtl
test
or
ret
add
test
push
mov
mov
popa
pop
adc
dec
test
mov
sub
stos
into
adc
xor
cmc
test
sbb
ret
adc
xchg
hlt
mov
ds
push
gs
mov
mov
jno
fwait
testl
loop
push
adc
icebp
mov
or
icebp
push
inc
lret
mov
imul
sub
jne
sub
xchg
clc
pop
stc
sub
cmp
push
emms
lock
aad
inc
jmp
dec
sub
xor
push
gs
sahf
repz
push
or
inc
imul
imull
and
add
insl
nop
dec
jns
dec
aaa
iret
jle
xchg
clc
popw
sub
mov
cs
int
ds
mov
popf
das
or
imul
push
inc
outsl
out
into
xchg
pop
int3
pop
loopne
pop
jb
and
push
repz
lods
cld
stos
loope
testb
repnz
dec
inc
int
ljmp
cmp
rorb
fwait
in
and
mov
sub
jle
cmpsl
or
lahf
gs
pop
xchg
push
push
jb
push
sbb
clc
mov
push
icebp
jb
push
sub
hlt
sub
negb
test
sub
test
sub
inc
pop
push
sub
sub
pop
mov
sub
and
dec
sub
mov
xchg
sub
negb
inc
cwtl
arpl
lods
std
test
push
sub
cmc
dec
stos
push
stos
into
pop
mov
enter
mov
aas
adc
xor
xchg
stos
jge
movsb
sub
mov
stc
mov
je
pusha
movsb
lods
sub
pop
loope
out
dec
or
dec
pop
outsb
pop
lahf
imul
and
push
nopl
idivb
jmp
js
subl
out
ret
cmpsb
std
fldl
dec
enter
ret
fbld
stos
lea
test
jns
mov
xchg
sub
test
sub
outsl
repz
repz
outsl
mov
ds
pop
adc
inc
mov
fldt
sub
popf
mov
aaa
in
subb
xchg
jecxz
sbb
dec
pop
mov
jo
jl
aad
cmp
sub
push
in
xor
pop
sbb
cli
cmpsb
jmp
pushl
sub
insb
push
add
mov
mov
fsin
nop
sub
mov
shll
lock
call
fnstcw
cmove
out
pop
fs
mov
repnz
and
cmpsb
push
test
outsl
mov
jl
andb
adc
nop
dec
sub
inc
jl
addr16
jge
sub
ds
xchg
mov
repnz
cmp
test
loop
cltd
and
mov
pop
subb
push
scas
loope
mov
mov
push
subb
rcrb
rorl
adc
jmp
stc
push
iret
dec
mov
xbegin
fwait
adc
push
pop
xor
sbb
outsb
clc
insb
inc
inc
pop
sbb
cmp
testl
or
scas
jns
or
mov
movsb
or
shr
mov
inc
add
push
pushf
dec
dec
push
clc
lcall
mov
push
and
dec
ret
cli
movsb
bound
repz
pop
inc
xor
inc
insb
or
and
inc
pop
push
fsubr
dec
mov
push
in
jle
xor
leave
xchg
pop
jle
clc
ror
cmpl
pop
addr16
xchg
sahf
mov
mov
xor
pop
cld
xchg
xlat
push
and
push
sub
out
mov
clc
pusha
cs
in
pop
mov
sub
scas
cmp
push
fcompl
in
loopne
outsb
mov
loope
popf
repz
push
ret
mov
inc
mov
push
push
loop
inc
dec
outsb
aam
mov
jge
push
clc
mov
addr16
cli
icebp
adc
inc
std
sbb
shlb
arpl
test
rol
adc
fstps
sarb
test
cwtl
gs
jge
sub
in
call
out
rolb
add
dec
das
test
sbbl
adc
mov
xchg
inc
jo
sbb
ds
jmp
ss
cld
push
mov
sub
dec
pop
pop
cli
push
ds
mov
stos
std
fimuls
xor
adc
adc
push
and
aaa
ds
jbe
repz
ret
in
cwtl
imul
pop
xlat
sbb
dec
sub
hlt
stos
lods
fsubrs
mov
repz
outsl
inc
ds
sub
notb
test
ds
sbb
xchg
sub
pop
es
add
jnp
dec
add
or
push
sub
cmp
or
sub
testl
loope
mov
xchg
jnp
push
mov
ror
sub
push
shrb
xchg
lret
cmp
and
mov
stos
out
pop
xor
mov
test
iret
jne
push
mov
sub
sbb
mov
dec
aad
cmp
insb
and
xchg
lret
or
sub
lret
stos
dec
fwait
mov
sub
std
scas
sub
enter
cmp
iret
sub
ss
or
inc
fwait
std
stc
adc
cli
jmp
outsb
sub
fistpll
xchg
mov
cmp
cmp
add
bound
and
xor
aam
ss
sbb
jle
or
sub
out
inc
cmovl
call
inc
ret
shll
iret
sub
xor
mov
sub
sbb
lods
jne
das
lock
xchg
mov
mov
sub
test
popa
mov
mov
pop
cmpsl
sub
inc
sbb
push
mov
dec
mov
scas
sub
mov
push
jge
mov
lods
stos
mov
in
shll
sub
sbb
sub
sub
popa
fbld
sbb
mov
jns
jns
dec
outsb
adc
lret
dec
cmp
sub
call
push
test
sbb
jp
fcmovb
jbe
fimuls
mov
pop
xor
cwtl
mov
aas
das
sub
sub
adc
mov
cmpsl
mov
cwtl
lds
or
imulb
cmp
out
xor
mov
mov
fnsave
pop
dec
mov
dec
pop
mov
pusha
pop
sbb
dec
cmpsb
sub
mov
sub
cmp
cltd
pop
xchg
push
iret
ficoml
or
movsl
fs
sub
xchg
pop
inc
icebp
std
addb
jecxz
sub
xchg
xor
int3
cli
xor
aad
pop
test
mov
push
or
xchg
leavew
sarb
movsl
cwtl
adc
sub
aam
mov
mov
push
dec
iret
or
add
xchg
add
dec
xor
dec
aas
lcall
sub
lds
imul
mov
jo
bound
sub
ss
fwait
enter
daa
shrl
pop
call
push
lcall
xor
adc
outsl
mov
sbb
jl
sub
mov
sbb
inc
lods
sub
je
stos
aad
jle
sub
dec
or
movb
pusha
lods
in
dec
cmpl
xlat
dec
test
aas
xor
or
imul
pushf
push
call
dec
adc
sub
lahf
inc
leave
sbbl
lds
fdivrl
sbb
sub
arpl
cmpl
lods
sub
das
pop
sub
movsl
nop
adc
mov
sub
fsubl
cltd
sub
bound
mov
jmp
adc
mov
in
xchg
inc
cmpsl
idivl
push
sub
push
jp
push
leave
iret
test
dec
and
outsl
push
adc
repz
sti
rcrl
sbb
sar
lds
icebp
xchg
xor
pop
mov
rclb
jnp
popf
imul
xchg
fwait
jne
rcrb
movsl
xor
enter
popf
pop
jmp
push
dec
dec
push
std
test
xor
adc
enter
mov
sbb
sub
jg
inc
stos
out
je
add
aas
sub
xor
lret
pop
orb
fdivl
fwait
jo
cmp
pop
loopne
add
push
scas
xchg
cmp
sub
jg
ja
mov
lea
sub
push
push
mov
adc
pusha
test
jle
mov
xchg
dec
popf
xchg
xor
sub
push
jg
push
or
shrb
and
xchg
js
sub
jbe
xlat
sbb
in
xchg
pop
mov
ret
cmp
int3
fwait
hlt
mov
push
pop
mov
push
shl
sub
jecxz
daa
icebp
xlat
adc
xor
sub
lds
out
pop
test
mov
push
mov
jmp
push
sub
lahf
push
pop
mov
cltd
jecxz
cmp
dec
jae
cs
scas
js
shll
jno
dec
xchg
pop
and
loope
lock
sub
pop
lods
jbe
ds
ss
test
les
in
out
adc
sub
sbb
pop
test
jecxz
push
jne
popa
cs
add
mov
push
scas
sti
add
sbb
sub
ret
add
inc
cld
push
shlb
inc
insl
or
sub
add
gs
mov
jl
aad
out
mov
mov
ffree
mov
fcoms
push
sub
push
push
andb
rorb
dec
shlb
sub
popf
cmc
pop
xchg
lahf
fcoml
icebp
ja,pt
sub
js
into
sbb
lock
mov
and
faddl
stos
pop
sub
mov
std
sub
fs
sti
or
sub
mov
cwtl
sub
sarb
das
rcrl
or
xorl
outsl
das
pop
mov
fxch
mov
rcrb
imul
in
sub
adc
sti
cmc
aas
fs
mov
add
or
pop
jo
or
add
imul
out
xchg
xchg
call
dec
inc
adc
js
inc
mov
inc
icebp
add
and
sti
mov
adc
scas
inc
cs
repz
ja,pt
cmp
leave
inc
insb
mov
rcll
lret
jp
push
xor
sub
mov
pop
mov
test
dec
jb
pop
sub
stc
add
inc
sub
sub
inc
divb
imul
sub
shrl
xor
sub
xor
sub
arpl
vsqrtps
enter
pop
cmp
adc
mov
loop
in
mov
dec
test
push
cld
stos
cmp
inc
mov
movsb
pushf
sub
or
ds
sub
sub
es
inc
pop
add
sbb
push
into
xchg
jge
mov
imul
mov
leave
jo
mov
sub
aas
sub
loope
xlat
push
push
leave
or
imul
mov
dec
shl
ljmp
add
cmpl
adc
aas
fisubrl
jne
arpl
test
adc
les
loop
inc
popa
stos
arpl
sbb
enter
lahf
adc
lret
mov
out
cmpsl
jno
mov
xor
push
sub
sub
pop
lret
xchg
rclb
lock
push
outsl
lds
sub
aaa
cld
add
loopne
stos
loopne
pop
sub
mov
pop
daa
mov
and
fdivl
dec
idivl
insl
xchg
loope
es
inc
inc
mov
or
add
xchg
sub
dec
or
and
or
fists
xlat
mov
test
jmp
fs
sti
fstpl
jp
push
mov
sbb
jae
pop
mov
pop
mov
sub
jae
xorb
dec
dec
sub
ret
xchg
insl
sub
sub
mov
adc
dec
test
dec
jp
sub
imul
sub
js
loopne
je
leave
inc
mov
sbb
add
sub
jnp
xor
add
push
sub
mov
test
mov
sbb
arpl
mov
stos
rcll
loopne,pn
or
inc
mov
les
ret
adc
nop
ds
sbb
sub
xor
jmp
jmp
jb
mov
gs
sar
sbb
jnp
fldenv
rcl
stos
sbb
outsl
add
cli
mov
sub
cld
adc
bound
sahf
sub
lods
dec
jecxz
add
or
addr16
add
push
dec
jmp
xchg
inc
jb
cmp
clc
int
mov
je
repnz
fsubrl
jo
icebp
add
push
popf
out
jp
cmp
sbb
imull
push
inc
add
mov
xlat
sub
sub
ljmp
hlt
fisttpl
push
inc
in
mov
mov
shll
mov
cmp
xchg
inc
add
xchg
sbb
in
sub
dec
sti
adc
sbb
mov
lret
and
sbb
fcmovb
sti
js
sbb
adc
pop
mov
repnz
shrb
ljmp
push
inc
scas
adc
and
outsl
shl
inc
inc
mov
cmp
test
mov
or
mov
loop
lret
dec
test
jmp
mov
enter
add
xor
popf
out
subl
sub
mov
mov
add
and
pop
cli
dec
pop
mov
and
xlat
jge
push
clc
or
jnp
ret
xor
jecxz
popa
pop
lods
pop
lock
mov
iret
iret
xor
insl
stos
sub
imul
roll
push
popa
inc
mov
sub
addr16
into
fsts
add
lds
fs
mov
in
sub
jmp
jle
push
shrb
mov
mov
sbb
sub
sbb
cli
mov
imul
nop
outsl
sub
pop
mov
or
pop
addr16
outsl
sarl
xchg
jbe
ret
arpl
add
pop
jae
pop
jecxz
call
adc
lock
ret
aam
test
dec
push
cmpsb
sub
mov
jmp
mov
push
push
pop
jbe
shll
scas
pop
testb
stos
outsl
ret
pop
pop
icebp
cli
and
in
int3
inc
mov
outsl
test
cmp
sti
mov
loope
jmp
dec
int3
and
daa
jb
jmp
flds
hlt
aaa
imulb
mov
lock
sub
adc
cmp
fsubrs
cmpsl
add
into
out
sub
jnp
mov
or
sbb
sub
je
fwait
sub
out
xor
lret
mov
cmc
icebp
xor
sbb
sub
or
nop
pop
fsubrl
jecxz
dec
sub
cmpsb
xchg
dec
mov
pop
add
xor
pop
fwait
inc
ds
mov
mov
fsubrs
cmp
cmp
dec
mov
js
xchg
cmp
loop
nop
adc
pop
sub
add
sahf
test
jp
lret
imul
dec
jle
xchg
enter
test
sub
sub
pop
or
in
sbb
repnz
mov
ss
popf
mov
cmpb
fwait
sub
jnp
rcrl
cmpsb
fstl
mov
in
mov
std
sub
jl
sbb
push
lock
mov
sub
jmp
jl
pop
adc
das
cmpsl
sbb
fsubp
subb
mov
repz
iret
inc
testw
mov
es
pop
sub
adc
scas
sub
popf
cmp
sub
mov
cmp
sub
push
insl
jae
js
cmpsl
ds
and
imul
insb
jno
jecxz
test
push
test
ret
cmp
sub
cmp
std
stos
or
sub
pop
es
add
loop
jle
ret
imul
into
arpl
xor
aas
in
lods
std
aaa
jle
std
jae
cmpb
sub
ret
cmpsl
lret
nop
mov
sub
jmp
jg
adc
sub
cwtl
aam
mov
repnz
sbb
xchg
movsb
adc
mov
stos
pop
xor
imul
push
mov
ja
orl
sub
jmp
inc
sar
add
sub
dec
int3
lods
xchg
add
jmp
shrl
push
dec
push
dec
rcrl
xchg
mov
mov
cmpsb
repnz
push
lock
scas
mov
cmc
hlt
jo
lret
inc
mov
add
clc
mov
jo
pop
dec
test
sub
sti
nop
pop
or
push
and
outsl
sbb
clc
pop
add
lds
aas
xchg
push
or
in
call
int
cs
fsubr
fmuls
insl
call
outsl
lock
jns
xchg
jo
sbb
jmp
xchg
sti
outsb
filds
cmpsb
cmp
popa
dec
cmp
test
and
or
mov
jmp
adc
and
dec
and
sti
fwait
adc
cmp
cmpl
and
addl
mov
fs
push
cmp
dec
dec
sbb
mov
std
jecxz
xchg
mov
loopne
aam
stos
mov
xchg
pop
lahf
loop
xchg
imul
cwtl
xorb
pop
mov
int
sahf
lods
jmp
and
clc
ret
test
xor
pop
icebp
data16
or
arpl
push
addr16
cmp
push
outsl
xbegin
mov
stc
clc
mov
mov
pop
clc
pop
nop
add
fcomps
add
sti
mov
cld
inc
rol
and
sub
sbbl
iret
jl
push
lcall
scas
subps
pop
addr16
inc
jg
inc
stc
sub
test
jmp
sub
push
sub
pop
cmp
and
inc
jnp
mov
dec
fists
push
or
inc
clc
shlb
aam
add
dec
push
pop
push
inc
shll
xchg
adc
dec
sub
imul
xchg
add
jns
cmp
stos
push
cmp
mov
leave
fstpt
cwtl
dec
test
mov
rclb
cvttps2pi
in
cmp
test
les
lret
push
lods
push
clc
arpl
xchg
sbb
sti
mov
inc
push
pop
ss
xchg
mov
inc
cmp
push
xchg
push
cmp
fbld
inc
cmp
std
pop
and
mov
ret
adc
xchg
lods
lret
sub
aas
insb
jecxz,pn
xchg
mov
jecxz
scas
inc
cmp
pop
imul
jmp
sarl
jo
mov
jae
cmp
lret
insl
imul
mov
mov
divl
popa
mov
fwait
push
aad
sub
js
mov
cmp
pop
jle
push
in
dec
xchg
xor
cmpsb
out
mov
ds
xchg
jl
ds
xor
cmp
ret
insl
rclb
dec
push
or
pop
shll
add
in
push
call
dec
stos
or
movsb
pop
daa
cmpsb
cmp
cmp
std
inc
in
iret
ja
push
mov
sbb
mov
cmpsl
sub
jecxz
dec
mov
popf
imul
xor
les
jns
dec
and
mov
mov
push
mov
cmp
arpl
outsl
xorb
push
sbb
int
lods
addr16
or
sbb
sbb
fs
push
aam
jmp
xchg
add
xchg
jg
cmp
dec
jmp
push
jne
enter
mov
xor
adc
adc
popa
fwait
mov
jg
push
pop
clc
jl
push
pusha
xchg
inc
cli
lds
xchg
jno
clc
xchg
jmp
mov
mov
dec
dec
clc
push
mov
mov
fldenv
xlat
pushf
mov
je
push
ret
cltd
xchg
and
and
std
and
rorb
and
das
mov
cli
out
test
sub
sbb
cmp
mov
jnp
pop
cli
push
mov
lock
out
cmp
or
sub
sti
pop
adc
pop
pop
or
es
insl
daa
jle
sub
add
outsl
sub
mov
mov
call
pushf
pop
insl
sbb
pop
sbb
push
rcll
or
sub
in
aam
rorb
sub
sbb
mov
jmp
repz
ds
mov
aas
cmp
fmuls
jge
lea
pop
aad
lock
out
lds
iretw
ss
dec
repz
adc
addr16
xor
sub
xor
pop
push
rclb
iret
hlt
sub
jbe
add
add
xchg
mov
xor
mov
sahf
inc
jp
mov
scas
test
sbb
je
mov
mov
cmc
ds
inc
ret
and
das
sub
int
push
lock
mov
clc
dec
adc
dec
in
shl
imul
addb
and
jmp
mov
add
xchg
aad
pusha
ret
mov
gs
stos
lret
mov
imul
xchg
sub
divl
push
decl
mov
mov
and
repnz
push
je
push
inc
inc
out
ljmp
jne
or
cmp
daa
cmp
mov
push
cld
ja
cltd
test
test
add
jnp
movsl
inc
sbb
cmpsl
xor
adc
scas
sub
mov
inc
sub
mov
add
enter
jnp
fs
jns
das
movaps
push
or
dec
xor
arpl
repz
sub
aam
roll
mov
ret
sbb
loopne
loope
and
enter
jbe
sub
fistps
pop
pop
arpl
push
jmp
stos
jno
lcall
mov
fwait
call
outsl
dec
push
clc
test
jp
pop
outsb
call
mov
pushf
jecxz
cmp
js
inc
sub
data16
mov
outsl
pusha
inc
sub
js
lea
icebp
xchg
in
cmp
sub
scas
mov
loope
data16
sub
in
jecxz
je
insb
cmpsl
dec
mov
icebp
push
and
in
fldt
or
shrl
test
mov
cmc
sub
out
nop
mov
xor
stos
adc
gs
or
sub
icebp
mulb
push
lret
fcmovu
jl
shrb
cmp
and
push
dec
and
out
sti
adc
and
push
xchg
cmp
dec
dec
jmp
sub
add
sbb
mov
add
jne
das
sub
xchg
insb
cmc
sub
repnz
fnstsw
pop
sub
or
mov
mov
pop
js
in
mov
lods
dec
or
jg
test
mov
xchg
sbb
jae
sub
sbb
xor
cmp
adc
sub
iret
aad
jns
and
jmp
sar
testl
jne
hlt
sub
cmpsl
sbb
and
outsb
xchg
test
rcrb
xchg
shl
lahf
sub
or
mov
mov
int
sub
les
sub
mov
mov
cmp
daa
lods
or
jp
sbb
add
std
pop
jnp
mov
ficompl
or
ljmp
lret
mov
mov
jno
call
lret
mov
pop
sub
pop
mov
push
das
dec
repnz
and
test
jmp
pop
les
repnz
in
subl
pop
test
sub
and
iret
std
pop
movsb
push
cwtl
adc
pop
mov
mov
or
jl
fstpt
pop
push
sub
pop
adc
pusha
push
adc
pop
xchg
push
jns
or
fsub
sbb
scas
sub
cld
and
insl
sub
lea
sub
xchg
xor
repnz
bound
jnp
in
mov
leave
enter
mov
fsubrl
push
psadbw
out
test
lret
rcll
popf
test
adc
out
sub
mov
cs
fsubr
mov
mov
nop
sub
jne
sub
js
xchg
inc
jmp
shrl
scas
jge
arpl
mov
rorb
mov
js
lods
dec
xlat
mov
lret
pop
movsb
leave
aaa
push
jge
sub
pop
mov
test
inc
ljmp
sbb
push
sub
inc
xor
mov
scas
clc
mov
push
jnp
xor
xchg
bound
jp
jb
pop
mov
push
mov
ss
popa
lods
cmp
pop
out
ret
cmp
add
push
xor
pop
mov
lea
std
add
xor
ja
sub
jnp
adcb
sub
push
xor
lods
and
insb
jg
out
dec
inc
push
add
popa
sbb
sti
mov
push
xchg
in
mov
cs
adc
iret
dec
jmp
pop
fmull
mov
sub
shl
xchg
sarb
xchg
popf
or
in
lods
inc
aaa
mov
inc
mov
jmp
fbld
fs
dec
mov
jp
xor
cmp
rorb
pop
gs
xor
aad
mov
jno
xor
dec
sti
sub
cmc
mov
les
sub
inc
jae
sub
mov
es
loope
push
test
sub
out
movsl
mov
sar
adc
cld
mov
imul
xchg
clc
inc
stos
js
adc
imul
sub
aam
mov
rcll
push
pop
jo
cmp
daa
mov
sub
in
sub
cli
aam
cmp
rcll
mov
fisubl
add
clc
cmp
adc
daa
pop
cmp
mov
inc
push
jnp
int
imul
inc
sbb
fcmovb
leave
fmul
jns
pop
adc
stos
icebp
xchg
call
popl
clc
sbb
sub
xor
pop
stc
dec
sub
cmp
mov
mov
popf
pop
rorb
cli
jno
enter
dec
push
out
sub
inc
sti
and
mov
mov
xchg
aas
sub
aaa
dec
mov
xor
imul
fsubr
pop
sub
cmp
dec
dec
jns
subl
loopne
sub
sub
out
adc
xchg
testb
xor
dec
jp
fsubrl
xchg
aaa
xor
cmc
dec
jecxz
mov
add
xor
xor
cmp
mov
shr
xchg
orb
pop
push
xor
outsl
fidivrl
jb
fs
mov
aaa
adc
outsb
mov
xchg
nopl
leave
mov
cmpsb
sbbb
push
lock
sub
pop
cmc
push
shll
rorl
push
or
test
cmpsl
sub
mov
jns
rclb
adc
or
sub
add
shr
or
xlat
movsl
aad
sub
dec
push
sbb
fistpl
lret
mov
cs
icebp
cmp
gs
in
mov
adc
xchg
mov
jmp
les
adc
rclb
xor
push
add
add
ret
push
cmp
or
stc
push
jns
or
cmpsb
cs
dec
jle
jno
test
lods
in
cmp
aam
mov
cmpsl
xor
pop
and
xor
mov
sub
mov
fwait
cmp
push
shrb
cmp
ljmp
pop
loope
stos
aam
mov
out
mov
fwait
ret
shll
jb,pn
or
cltd
sub
mov
imul
sbb
adc
dec
rcr
ljmp
loop
adc
mov
mov
adc
sub
outsl
adc
call
jg
mov
add
and
cmp
or
xor
stos
insb
dec
popa
pop
xchg
mov
out
daa
cmpl
dec
cmpsb
nop
inc
jno
push
add
ljmp
adcb
or
xor
insl
inc
clc
mov
lret
popf
cmp
icebp
lds
dec
in
mov
cltd
fcomi
dec
jecxz
jmp
jmp
mov
cmp
and
lds
imul
loope
pop
push
jmp
fadd
mov
jl
out
xchg
flds
mov
ficoms
jno
fildl
clc
mov
sub
stc
mov
push
add
mov
sbb
xchg
stc
fistpll
cmp
in
mov
jb
mov
test
std
imul
into
clc
aas
fcmovne
sar
add
jle
imul
mov
xor
shll
inc
xlat
sub
pop
sbb
jo
insb
lods
aas
sub
imul
push
cmp
in
sbb
in
rorl
push
mov
mov
jge
rcr
dec
fistpl
jns
xchg
cmp
push
add
sbb
mov
inc
enter
sub
stos
push
rcrb
sub
push
insl
add
mov
add
into
mov
rcrl
or
sbb
pop
popa
rcrb
xlat
sbb
sub
sub
push
mov
sub
mov
loopne
push
push
sti
test
mov
sub
add
das
push
lods
sbb
sti
pop
in
adc
adc
fs
rcrl
sbb
incl
sbb
lock
sub
stos
loop
andb
xchg
dec
sub
ss
int
sub
bound
test
decb
js
out
dec
inc
js
adcb
adc
mov
or
and
addr16
xor
sub
sahf
lock
movaps
leave
xor
fwait
mov
cmp
mov
call
sub
or
xor
dec
cmp
ljmp
dec
cmp
xchg
clc
sub
mov
sbb
jns
aad
roll
cltd
and
mov
sub
ja
sub
rcrl
int
ds
out
sub
test
mov
ss
insb
xchg
xchg
dec
or
sbb
cmp
xchg
sub
adc
pop
cmp
sub
sbb
inc
push
sub
fidivrl
xor
pop
sub
xchg
lahf
sub
jno
xchg
inc
mov
push
mov
mov
ljmp
sub
dec
push
push
mov
dec
and
add
sbbl
test
fcmovne
sub
sub
sub
imul
mov
mov
push
sub
call
adc
pop
into
in
jg
scas
sbb
sub
pop
mov
inc
cwtl
shr
repnz
sub
sbb
add
xchg
ror
sub
pop
sbb
inc
and
call
pop
inc
ds
cwtl
mov
mov
je
into
mov
testl
xchg
sub
inc
and
mov
xor
mov
cmp
jmp
stos
jmp
lcall
cmovns
movsl
mov
or
ds
fsts
leave
out
and
in
insb
test
divb
test
xchg
push
mov
sbb
dec
or
or
inc
nop
push
lea
scas
sub
movsl
jle
shr
fidivrs
jp
std
xor
sub
cmp
sub
dec
jge
movsl
jbe
cmp
adc
int3
jno
jmp
push
xlat
dec
in
or
sub
push
xchg
add
xor
loopne
movsl
sub
ja
xor
mov
test
cmpl
lods
cmp
jae
jecxz
sub
push
ds
push
das
iret
add
testl
sti
ret
js
push
mov
jno
out
insl
notl
imul
addr16
insb
rcrb
je
adc
pop
test
mov
xorb
addr16
push
or
dec
pop
insb
inc
push
jno,pt
or
pushf
mov
pop
sub
sti
testb
pop
pop
push
sar
sbb
testl
sti
imul
filds
aam
scas
jmp
cli
push
gs
sub
mov
mov
repz
cltd
inc
ret
popa
les
jmp
mov
xor
jmp
in
xlat
jmp
push
ficoms
loope
adc
das
push
fsub
inc
in
stc
cmp
lods
sub
jge
std
pop
push
cmp
test
push
mov
inc
and
pop
cmp
imulb
add
push
inc
add
hlt
jne
pop
inc
arpl
mov
add
movsb
mov
repnz
push
repz
xor
jns
lret
bound
sub
dec
fwait
cli
dec
sar
cmp
jno
adc
repz
test
add
sbb
cmc
dec
add
pop
or
mov
es
and
sti
mov
jo
dec
js
xchg
pop
xchg
jmp
and
dec
dec
sub
mov
and
push
aaa
stos
xlat
inc
enter
iret
ret
scas
and
aam
out
call
push
adc
mov
orl
insb
push
dec
or
in
mov
out
fisubs
add
sti
xlat
rol
mov
pop
lgs
outsb
fsubrp
jne
lock
daa
cmp
adc
dec
mov
xchg
xchg
cmp
adc
clc
les
orl
jmp
mov
ljmp
mov
lcall
je
lcall
lds
std
inc
stos
push
and
jl
cmp
push
jb
jmp
int
aaa
sub
xchg
pop
cmp
nop
jnp
and
sub
sbb
mov
packsswb
sti
sub
rcr
stos
pop
push
sub
cwtl
push
repz
sbbb
lds
add
add
cmp
in
or
cli
and
sbb
push
and
outsl
xchg
dec
popa
rorb
pop
dec
movsl
mov
sbb
sub
pop
nop
lods
push
fs
cli
add
shl
cs
test
push
imul
jge
or
stos
mov
ds
int3
jecxz
push
mov
int
test
repnz
or
dec
jnp
xchg
sub
int3
sbb
mull
dec
sbb
out
out
inc
pushf
push
test
roll
into
imul
ja
andl
jbe
lret
pushf
xchg
jl
scas
sbb
mov
push
sti
dec
iret
xchg
in
fsts
cwtl
mov
in
adc
dec
sub
pop
cs
cmpsl
xchg
xor
mov
adc
sub
daa
repnz
icebp
and
popa
mov
mov
xchg
cs
push
xchg
pusha
push
mov
inc
mov
outsb
fcmovu
xor
nop
fidivs
sub
and
out
test
push
aas
ja
cli
mov
divl
sub
sub
push
clc
dec
xchg
stc
das
mov
icebp
inc
dec
ret
xchg
pop
mov
and
and
sub
jbe
xchg
subl
sti
clc
lock
sub
fwait
jo
add
mov
loopne
cli
lds
test
pop
jp
sub
movsl
enter
mov
mov
pusha
pop
js
cmpsl
xor
leave
xchg
sub
mov
daa
je
mov
or
stos
cmp
sub
movsl
stos
inc
cmp
rcrl
and
dec
andl
jle
or
sub
mov
mov
aaa
jmp
jecxz
mov
mov
push
sub
jl
rclb
xchg
out
cmp
hlt
mov
xor
loopne
pop
sub
and
mov
mov
repnz
out
jo
add
add
shlb
xchg
sub
jbe
adc
sahf
push
sub
call
mov
cmp
mov
mov
fmuls
mov
or
sub
mov
hlt
nop
sti
push
sub
jb
mov
mov
cmp
call
jnp
cmp
sub
or
sub
leave
xchg
loop
and
iret
out
andl
cmpsl
ffreep
sti
dec
push
pop
sub
mov
add
shrb
sub
mov
rcrb
or
imul
cmpl
xor
pop
sarb
sbb
pop
push
xlat
adc
test
pusha
rclb
mov
inc
mov
inc
lret
das
pinsrw
nop
add
outsb
in
xchg
mov
call
aad
mov
fdivrp
pop
jnp
push
pop
cmpsb
in
inc
jbe
clc
idivb
cmp
or
loop
pop
les
and
or
and
dec
dec
mov
lea
sub
iret
repz
inc
dec
subb
and
and
out
sub
addr16
in
pop
sub
sub
and
push
sbb
loopne
jg
or
cmp
cmp
push
add
jns
call
cmp
ljmp
or
lds
ret
add
xor
sahf
clc
lods
jb
xor
test
pop
fbstp
xor
and
std
lret
dec
push
mov
xor
push
mov
scas
orps
pop
notb
sahf
xchg
inc
ds
out
jns
pop
inc
lret
cs
lahf
notl
test
out
shl
inc
sbb
or
push
sar
dec
dec
pop
sbb
pshufw
jnp
cmp
sti
push
movsb
das
jg
ret
fwait
push
mov
cmpsl
stos
mov
push
adc
mov
clc
or
loope
pop
dec
push
scas
pop
js
fmull
adc
std
test
popf
and
shr
push
jnp
mov
jb
and
xlat
dec
lds
lds
fs
out
popf
sbb
das
stos
iret
pop
sub
jmp
lods
aad
adcb
test
pop
sbb
dec
pop
sub
cmc
movb
les
or
jns
lret
cli
bound
ret
push
mov
mov
cs
stc
cli
pop
jmp
fwait
push
jns
fldcw
mov
lods
sub
xchg
cmp
idivl
pop
test
add
popa
decb
and
daa
sar
xchg
lcall
mov
inc
dec
mov
add
push
xchg
scas
scas
sub
imul
std
enter
test
movsl
fmull
fwait
sub
fidivl
sbb
hlt
sbb
push
jg
pop
es
repz
jae
leave
mov
scas
jns
push
sahf
out
mov
cmp
sub
pop
or
add
mov
inc
sahf
or
dec
mov
cmpsl
imul
pop
int
xor
add
hlt
xor
mov
sub
popa
addb
sub
inc
pop
movsb
fsubl
jge
je
push
insl
pop
ljmp
repz
sub
lahf
ljmp
leave
ficompl
jp
fldl
lahf
sbb
pop
cmp
call
dec
sbb
push
rcll
fstl
xor
add
popa
movsl
mov
xchg
sti
sub
jne
xchg
sub
fwait
and
ss
sub
stos
xchg
xor
jg
push
test
jno
sbb
test
sub
or
in
pop
stos
fnstenv
out
movsl
jne
das
sub
fs
adc
das
data16
clc
shrb
repz
mov
or
mov
pop
lahf
and
mov
sarl
insl
test
out
clc
push
sub
sbb
sub
cmpsb
mov
aad
lret
push
mov
mov
sti
inc
and
in
js
mov
jl
scas
mov
xlat
cld
popa
rorb
jnp
xor
xchg
std
repnz
sbb
fimuls
imul
push
es
fistl
push
sub
pop
jmp
and
dec
lods
lock
adc
cltd
cmp
mov
xor
cmp
dec
mov
push
sub
hlt
stos
mov
or
cmp
adcl
and
scas
push
add
cmpsl
cmp
dec
mov
jmp
addr16
lea
test
pmaddwd
sbb
pop
lea
mov
and
testb
mov
je
push
lahf
sub
xchg
sbb
sub
hlt
push
cs
fdivl
jo
sub
sub
pushf
sub
pop
mov
cmp
jbe
sub
ret
loopne
iret
jnp
push
sub
pop
cmp
out
or
test
mov
iret
xchg
sub
stos
push
jno
jmp
sub
aas
pop
pop
cmp
gs
sub
sahf
adc
sub
int3
mov
dec
pop
and
and
test
out
mov
jo
sbb
sub
push
push
jl
sub
inc
and
sub
outsl
pusha
add
sub
sub
clc
test
jbe
data16
sub
jmp
pop
test
pop
xchg
mov
loopne
repnz
cmp
add
sub
les
out
jbe
pop
les
daa
mov
scas
add
add
mov
jge
xor
jo
ja
or
iret
dec
push
jmp
lret
movsl
jp
sub
aad
xchg
sub
sbb
dec
mov
inc
sub
inc
std
cld
push
or
sub
aam
negb
fadds
jae
sub
xchg
mov
xor
cld
or
jg
sub
out
stc
sbb
add
pop
adc
sbb
aas
je
push
sub
jge
jnp
mov
pop
and
outsl
adc
sub
aas
sub
fs
ret
jp
jne
stos
test
rorl
or
arpl
xor
mov
repz
sub
dec
pop
sub
lahf
push
cli
mov
push
in
push
push
out
cmp
js
xor
loopne
adc
mov
sub
fimull
ljmp
int
adc
pop
sbb
jns
test
cmp
sub
add
rclb
jbe
inc
imul
jae
nopl
mov
xor
inc
push
sub
arpl
sub
neg
enter
xchg
lcall
int
dec
pop
jl
inc
roll
mov
pop
insb
fbstp
push
mov
into
push
jp
dec
rcr
push
pop
stos
sbb
sub
outsl
stos
test
inc
jns
mov
into
sub
and
xchg
sbb
adc
popf
stos
aam
cwtl
inc
insb
ds
xchg
and
scas
mov
jbe
or
repz
int
xchg
sub
cmp
js
iret
je
inc
and
inc
and
in
arpl
cmp
imulb
dec
pop
mov
lret
pop
dec
test
test
xchg
and
mov
cltd
test
sbb
xchg
stos
rep
mov
jmp
outsb
sbb
inc
jecxz
sub
push
adc
fildl
cmpsl
test
lds
sub
xorl
js
clc
cmpb
mov
mov
ret
in
cmp
test
push
inc
dec
sub
ret
shl
mov
imulb
and
pop
fwait
jmp
or
rorb
mov
movsl
sub
movb
lock
enter
adc
add
mov
fs
call
clc
shlb
sub
and
jns
scas
push
ds
dec
mov
jo
or
jmp
test
dec
ds
test
int3
jge
cld
sbb
sarl
adc
pop
shlb
cwtl
dec
sub
inc
push
jge
pop
jb
and
lock
movsl
jg
sub
xchg
inc
jb
lods
mov
sub
mov
out
loopne
sub
cmpsb
or
xchg
imul
shrb
int3
push
rorb
cwtl
sbb
ljmp
addr16
frstor
cmp
dec
dec
insb
xor
inc
sub
enter
add
adc
lret
test
or
dec
add
cmp
push
sub
sahf
and
mov
mov
stc
call
sub
icebp
cmp
jbe
aas
insl
or
jge
gs
sub
mov
popf
sub
je
mov
pop
jle
sub
xlat
aad
cmp
popa
xor
adc
mov
jo
and
sub
andl
add
cmp
jno
xor
push
xor
and
out
mov
stc
pop
in
mov
add
cmp
dec
pop
adc
stos
imul
dec
fdivrs
jne
cmc
jecxz
mov
sub
sub
je
into
and
xchg
ja
pop
xor
sub
fwait
dec
in
mov
add
jb
sub
cmpsb
adc
jno
mov
enter
das
cli
inc
aam
lret
aad
ljmp
test
xor
xchg
sub
pop
leave
insl
push
fwait
xchg
jp
js
aaa
sub
xchg
clc
cmp
dec
add
ja
shll
dec
sub
jge
xorl
sahf
sub
gs
rorb
sub
sbb
lahf
dec
sti
rol
test
fistps
pop
jp
js,pt
ljmp
mulb
mov
jle
dec
lahf
test
xchg
sub
imul
test
xchg
sub
cmp
stos
pushw
dec
xchg
sub
sbb
cld
in
insb
and
sub
lahf
xchg
out
cmp
fnstcw
mov
mov
in
xchg
js
test
loope
sub
sub
sti
inc
add
js
xor
hlt
mov
sub
imul
sbb
xor
les
call
add
push
mov
out
icebp
mov
int
and
dec
cmc
sub
aam
dec
jmp
in
mov
cmp
pop
test
jge
mov
sub
lods
js
push
aaa
sub
dec
mov
pop
sti
mov
stos
add
pushl
or
sub
lret
xchg
push
pop
jle
ficoms
insb
loop
pop
stos
inc
cmp
test
jnp
repz
add
jns
add
jae
or
dec
sub
mov
or
sub
mov
push
decb
pop
movsl
push
imul
cmpsb
and
leave
add
sub
fbstp
arpl
ss
mov
jae
mov
movsb
pusha
mov
mov
scas
mov
sub
call
int
subl
lret
sub
lods
cmc
imul
ds
imul
mov
dec
inc
add
xlat
add
sti
jg
cmp
or
clc
icebp
in
cmp
imul
lret
repnz
add
jl
pop
push
test
and
mov
cli
testb
das
jb
or
jle
jle
out
cmpsb
je
rcrb
xlat
shrb
mov
aad
ret
mov
cmp
pop
iret
fldcw
sub
dec
jo
lcall
jno
js
push
loopne
adc
lods
jne
int
out
sahf
sub
or
orl
xchg
ja
sarl
pop
clc
sbb
lret
ret
xchg
sti
nop
mov
dec
idivl
bound
or
jmp
xor
and
adc
jecxz
mov
lods
sub
cmpsl
test
ljmp
sbb
push
push
pushf
repnz
push
addr16
sbb
pop
sti
cmp
insl
lcall
sub
push
pop
les
push
or
stos
arpl
lds
jb
test
rolb
mov
stos
adc
push
icebp
fnsave
mov
aad
xor
push
push
inc
and
mov
mov
dec
cli
popf
aad
pop
clc
sub
mov
sar
repz
and
aam
push
pop
xchg
outsl
cmp
inc
adc
and
cmp
mov
mov
lret
bound
cli
mov
int3
jae
jns
testl
jo
testl
jnp
xchg
out
stc
sbb
xchg
jae
int
mov
ret
fimull
stos
andl
iret
out
ficoml
stos
outsl
push
add
roll
push
test
sub
sti
shlb
push
and
insb
hlt
dec
cli
cmp
adc
iret
ret
mov
sti
inc
adc
xor
sbb
cmp
test
xorb
mov
dec
and
jb
add
mov
sahf
pop
or
push
das
push
sub
push
mov
pop
cwtl
cmp
mov
imul
mov
add
mov
daa
mov
subl
mov
cli
mov
sub
adc
pop
cmpsl
push
lret
mov
mov
sbb
or
mov
out
xchg
int3
sub
out
idivb
sub
jnp
mov
sub
pop
jno
xchg
leave
add
sub
insl
push
lods
inc
cmpsl
cltd
jl
sbb
in
xor
cld
out
test
xor
pop
pop
jl
shrl
sub
jg
outsb
fldt
sub
lods
xchg
cmp
sub
mov
sub
sbb
popl
movsb
inc
rcrb
xlat
push
xchg
inc
scas
push
sub
sub
and
fcmovnu
xor
ret
cmp
movsb
out
stos
stc
sub
or
mov
sahf
fs
neg
sbb
push
sub
in
jge
ffree
mov
iret
inc
dec
xchg
pop
xor
insb
call
ss
mov
mov
add
stos
sub
and
fadds
jecxz
dec
sarl
jnp
jge
xchg
cld
sub
dec
aaa
leave
mov
xchg
sbb
pop
adc
test
mov
mov
jp
sub
xor
addb
enter
sbb
rcll
pop
cld
cmpsb
out
jmp
xchg
scas
dec
mov
pop
stos
dec
bnd
inc
sahf
push
test
sbb
ret
stc
sar
cmp
sub
dec
es
das
cmpsb
dec
add
cmp
push
imul
cltd
out
or
pop
shrb
data16
sub
dec
lock
shrl
sub
mov
dec
movsl
mov
addr16
call
in
push
stos
adc
push
test
cs
into
stos
and
lret
sub
mov
adc
test
lock
mov
mov
sub
xor
sbbb
cmp
mov
sbb
pusha
fsts
adc
cmp
mov
sub
mov
sub
in
iret
mov
enter
icebp
push
jmp
pop
pop
je
aad
jge
jne
xchg
push
cmpsl
repnz
lods
test
pop
sahf
sub
xor
xor
lods
sub
loop
lret
xchg
into
push
add
jmp
adc
rcrl
in
aam
dec
cmc
dec
sbb
nop
jmp
cmp
ljmp
cwtl
dec
setb
gs
lea
sub
mov
sub
imul
or
lret
sbb
xchg
call
cmp
xchg
and
dec
sbb
popa
inc
jns
mov
scas
fdivs
repnz
loope
jle
push
xchg
sbb
gs
xor
and
aam
jge
orb
packssdw
enter
mov
int
mov
in
mov
fmulp
push
loopne
sub
and
imul
and
xor
push
jge
cwtl
cli
sub
sub
int3
dec
call
push
sub
push
xor
loopne
dec
call
sahf
outsl
mov
cli
rclb
add
in
stc
mov
xchg
xor
mov
dec
push
sub
inc
jmp
stc
sub
sub
sub
cld
cli
and
dec
pop
and
arpl
aaa
pop
int
jno
mov
ds
cmp
js
jbe
mov
pop
sub
aas
push
lahf
rcll
dec
cmpsb
int
test
lods
cmp
test
data16
sub
es
cmc
and
sub
dec
lahf
add
std
pop
mov
sub
inc
sbb
pop
sub
lods
pop
fstps
das
ds
ret
movsb
loopne
cs
fwait
push
mov
jne
das
push
adc
mov
dec
push
jl
and
sbb
or
jle
sub
ret
add
subl
cmp
push
sbb
xor
jae
fidivrl
popa
ljmp
dec
sub
sub
pushf
lods
push
sub
xor
cmp
jbe
mov
add
sub
xchg
sub
mov
shr
sub
sbb
mov
movsb
es
lds
out
push
call
cmc
ljmp
iret
movsb
roll
cwtl
mov
les
cmp
mov
aas
inc
adc
hlt
adc
xor
pop
xor
idivb
data16
inc
adc
ret
inc
jmp
xchg
sbb
icebp
je
adc
cs
fldt
cld
mov
dec
push
xor
neg
ds
push
mov
ficomps
xor
cmp
xchg
sub
bound
xchg
lea
pushf
test
push
es
and
stos
notb
sub
mov
test
sub
nop
and
and
aaa
sarl
fs
jg
cmp
xor
insl
arpl
dec
sub
adc
lret
sbb
add
lock
test
outsl
sub
cwtl
add
loopne
xchg
lods
sub
xor
mov
dec
xchg
aad
fldt
xor
aam
jg
inc
xlat
jge
push
sub
bound
sbb
adc
xchg
test
push
aam
mov
dec
cmp
inc
cmc
test
aad
sub
les
aaa
sbb
mov
adcb
stos
sub
push
repz
imul
jne
flds
icebp
push
in
arpl
fmul
push
popf
mov
scas
aad
int
mov
ret
jae,pt
je
sbb
sub
mov
jg
movsl
mov
out
add
imul
jl
sahf
mov
or
arpl
dec
mov
pop
and
test
scas
mov
add
mov
mov
push
pop
inc
sub
mov
jecxz
adc
stos
hlt
aad
leave
lds
or
and
ficoms
or
sub
mov
push
js
cmp
mov
inc
sub
lods
jecxz
je
call
ficoml
push
sub
cld
cmp
pop
jae
sbb
xlat
xor
movsl
sub
xchg
out
sti
cmp
mov
sub
push
sub
or
daa
lods
or
lea
xor
adc
clc
cmpsl
hlt
call
in
dec
or
sub
push
add
lcall
jbe
andl
iret
dec
inc
dec
loop
sub
cmc
push
cld
mov
call
inc
add
fisubrl
scas
rorb
sub
jno
sub
lahf
int
mov
in
stos
lock
xchg
dec
cli
adc
inc
mov
in
sbb
aas
inc
xor
mov
addl
pop
sbb
outsb
sub
adc
ds
int3
andb
cmpsb
out
cmp
aaa
test
mov
cs
int
cmpsb
scas
ljmp
lea
mov
sub
jbe
and
sub
sub
and
dec
sub
nop
pop
inc
ja
jmp
stos
sub
push
push
rcll
rcrl
sub
push
insb
inc
mov
sub
imul
mov
or
into
ds
lret
xlat
or
sub
in
sbb
fcompl
mov
sub
shrl
loopne
sbb
mov
jo
xor
cmp
sub
add
ret
sbb
pop
mov
enter
sbb
mov
adc
shrb
insl
mov
and
popa
fs
andb
or
jle
jae
push
pop
sub
movsb
jp
dec
es
outsb
inc
dec
ja
dec
xchg
fwait
dec
lret
mov
in
inc
sub
push
jbe
sbbl
clc
aas
adc
inc
jb
mov
jbe
mov
out
bound
add
cltd
stos
sub
jg
push
cmp
inc
push
int
mov
loope
shll
pop
popa
mov
sub
dec
in
and
sahf
gs
or
loop
std
or
cmp
sbb
stos
mov
and
leave
pop
sub
rcll
mov
mov
cmp
sub
movsb
mov
sbb
and
add
xchg
mov
lret
aaa
dec
and
sub
mov
and
jb
shrl
dec
hlt
int
por
sub
leave
ret
add
rclb
mov
xchg
movl
xor
adc
adc
call
sub
jmp
or
ds
and
xor
lock
cli
pop
test
pop
fcoms
dec
push
stos
pusha
mov
xlat
cmc
or
leave
mov
testl
sub
xchg
sub
xlat
fisubs
int3
cmp
mov
xor
push
sub
pop
ficoms
int
sub
and
sarb
xor
testb
inc
ds
dec
call
xor
sub
hlt
shl
adc
lcall
push
test
sub
mov
sub
lahf
aam
sti
jne
pop
jecxz
test
imul
dec
mov
push
push
outsl
inc
sub
dec
jg
sub
sub
dec
fdivrl
xchg
lcall
insl
push
mov
mov
pop
xchg
cmp
sub
sarb
xchg
sub
mov
xor
movsl
mov
sti
add
subl
aam
dec
adc
jns
ja
loope
mov
jo
movsl
sbb
jno
arpl
pop
jle
cmc
push
sbb
mov
mov
ss
jle
subb
popa
and
mov
xchg
sub
push
cmp
cs
xchg
mov
or
inc
sub
inc
push
inc
sub
call
js
sub
rolb
sub
ljmp
bound
repz
data16
sub
xchg
push
cmp
shrl
insl
lock
xchg
aam
outsl
mov
xchg
sub
fisubrs
sbb
fbstp
repnz
pusha
sub
push
push
popf
mov
sub
mov
inc
mov
data16
xchg
add
insl
push
cmp
inc
xchg
sub
push
inc
cmc
adc
test
sub
outsb
xchg
lods
add
mov
sub
scas
push
push
les
cli
call
xchg
sbb
stos
xchg
inc
push
daa
outsb
enter
test
pop
jge
mov
sub
in
cmp
aad
les
cmc
or
andb
cmp
dec
xchg
xor
cwtl
sarl
push
sti
scas
shll
dec
or
ds
daa
sub
dec
stos
xor
cmpsl
dec
sub
mov
loop
test
pop
es
jge
inc
sub
lods
mov
int3
dec
pop
jmp
mov
adc
fimull
adc
cmp
divl
cmc
sbb
sub
fisttpl
repnz
nop
mov
sar
mov
mov
daa
jae
cmp
lods
or
xchg
mov
scas
push
arpl
xlat
jl
sub
inc
outsb
pop
xor
mov
mov
rorl
or
es
test
sub
rep
test
repnz
push
sub
mov
movsb
ficomps
and
sub
pop
shl
inc
jnp
sub
stos
ljmp
inc
cmp
fimuls
leave
inc
lret
mov
mov
sub
xor
inc
es
cli
leave
test
pop
and
push
mov
add
mov
movsl
sub
sub
loope
ja
sahf
fsubrs
mov
jmp
js
inc
lea
es
lods
sbb
jg
adc
sub
inc
push
outsb
inc
jmp
call
movsb
je
cmp
and
loopne
push
jnp
in
xor
fimuls
xor
lahf
mov
mov
cwtl
push
dec
sbb
into
xchg
pop
sub
add
mov
push
dec
jle
loope
out
pop
xchg
lods
gs
sub
jae
clc
xchg
add
cmpl
stos
enter
add
in
sub
inc
test
aam
dec
mov
addr16
sti
xchg
shrl
sub
imul
xor
clc
les
cmp
ret
xchg
pop
ja
sub
mov
push
lods
sub
out
mov
adc
inc
insl
bound
fistl
iret
ret
sub
sbb
outsb
sub
lock
notb
ret
roll
add
xchg
sbbl
push
cli
shlb
sub
pop
dec
push
sub
enter
out
stc
sub
fs
sub
jns
add
sbb
mov
fadd
sbb
outsl
sub
test
cmp
mov
pusha
int
stos
js
sub
sbb
imul
aam
out
sub
mov
outsl
test
repz
jle
sub
add
addb
sub
in
push
inc
pop
xor
mov
insb
sbb
sub
mov
and
les
imull
add
insl
xchg
mov
popa
cmp
ret
sub
sbb
sarb
subb
nop
and
mov
xor
sub
aam
jbe
je
imul
inc
sub
leave
sahf
xor
dec
xor
or
ret
movb
mov
sub
shrl
shlb
rolb
fnstsw
sub
pop
std
sahf
xor
mov
lret
sarb
adc
dec
aad
cmp
gs
mov
cwtl
minps
test
clc
daa
and
mov
fmull
push
mov
dec
test
loop
sbb
dec
sub
adc
xchg
lret
sub
or
jg
aam
rcll
mov
cmp
fstpt
test
test
jg
mov
sbb
sub
mov
pop
sub
mov
push
sub
mov
inc
jge
cmp
push
jmp
push
incb
fstpt
out
aaa
rorl
cs
sub
addr16
mov
cmp
scas
sub
fs
xchg
rclb
sub
inc
out
test
loop
imul
aad
add
jecxz
adc
fisubrl
dec
inc
imull
je
cmp
mov
jae
lret
imul
push
xchg
mov
in
je
push
in
mov
call
adc
lods
ds
ret
push
dec
add
push
sbb
xchg
and
pop
subb
addr16
std
sarb
data16
mov
sbb
test
ret
stos
leave
insl
sub
gs
sub
ret
pop
loopne
dec
movsl
and
push
xor
popa
pushf
mov
sub
xchg
mov
rcrl
insl
jnp
add
sub
fdivl
xor
lret
bound
sub
subb
sbb
cmpsb
movsl
sbb
mov
rorl
call
inc
in
imul
mov
sbb
adc
out
mov
add
cmpsl
cwtl
mov
xchg
scas
mov
sub
ja
mov
pop
sub
jge
test
dec
mov
lea
and
mov
stos
push
sbb
sub
mov
jne
or
int3
outsl
daa
pop
aaa
insb
cmp
xor
jg
gs
shrb
jne
jmp
loope
cli
sub
or
or
inc
dec
jb
call
std
sub
sub
jge
or
pushf
fsub
repz
or
aaa
push
imul
in
and
test
and
popa
pop
or
cmpsb
clc
inc
sub
mov
inc
push
and
aad
jo
or
sti
inc
sub
mov
add
cwtl
ret
push
subb
dec
inc
xchg
cli
pushf
add
dec
xchg
sahf
scas
inc
xchg
push
sub
shr
jb
cmp
pop
pop
jecxz
clc
call
mov
enter
sub
dec
pop
xchg
data16
sub
std
mov
jo
push
mov
popa
and
push
inc
push
imul
cmpsl
mov
scas
lret
dec
popa
mov
adc
cmp
call
cmp
adc
das
shll
int3
mov
adc
pushf
fisubl
pop
xchg
mov
shll
scas
jmp
mov
cmpb
scas
fidivrs
sti
aam
xor
or
push
push
sbb
cmp
mov
cmp
cwtl
cltd
pop
stos
fisttps
mov
or
pop
jnp
iret
addr16
and
loop
inc
aas
orl
outsl
xor
push
sub
lds
cmp
pop
or
and
dec
std
push
pop
outsl
sar
hlt
pop
imull
xchg
lods
cmp
sub
mov
add
sbb
scas
push
cli
cltd
jecxz
xor
sbb
andl
xchg
sbb
test
fwait
cld
pop
stos
sub
and
test
shl
and
jne
test
rdpmc
outsb
xchg
shrl
adcb
inc
pandn
push
scas
pop
and
shlb
loopne
imulb
rcll
inc
scas
pop
in
xor
in
jmp
sub
pop
mov
loop
scas
dec
push
cmp
inc
rcrb
inc
cmp
ret
pusha
inc
stos
pop
test
mov
sbb
fcmovnbe
stos
hlt
xchg
xchg
adc
aad
jae
or
jns
adc
iret
les
cmc
cmp
cmc
clc
stos
mov
xchg
mov
ja
jl
das
fnsave
stos
repnz
xchg
inc
cwtl
addr16
out
cmp
js
dec
mov
add
ret
jo
sar
pop
imul
dec
sti
pop
sbb
jne
lea
or
lahf
push
and
push
mov
mov
inc
cmp
add
jae
outsb
cwtl
out
outsb
stos
outsb
adc
stos
cmp
push
mov
push
daa
repz
mov
ss
cli
imul
rcrl
fldcw
or
out
lods
jne
mov
pushf
mov
dec
mov
or
mov
cli
xchg
push
mov
adc
mov
dec
sti
xor
imul
outsb
into
inc
or
and
aam
ds
call
scas
jge
inc
sbb
fsincos
mov
cltd
jle
xlat
fbstp
cli
lret
data16
cmp
pusha
push
arpl
dec
xchg
jle
jmp
mov
repnz
aaa
jge
xor
adc
sub
imul
jb
push
sbbl
jecxz
mov
sub
xchg
out
pop
or
inc
mov
jg
das
xchg
inc
lods
stos
xlat
movsl
jmp
push
pop
fincstp
jbe
jae
imul
lods
mov
mov
test
adc
imul
lahf
sub
sub
fstpt
scas
xchg
bsr
int3
sub
outsb
pop
mov
or
jge
and
jp
fcompl
dec
fwait
imulb
push
mov
lret
sahf
fwait
cmc
dec
push
cmpsl
jp
rcrb
cmp
mov
jne
pand
inc
fisttps
imul
mov
mov
or
sub
pushf
int3
or
add
mov
sub
cli
aam
sub
sub
jnp
sti
call
in
jle
rcl
in
daa
aad
clc
mov
jmp
mov
sbb
test
scas
rcr
sbb
in
leave
mov
push
fs
int
pop
dec
fdivr
xchg
xor
movsb
mov
inc
cs
cmp
jo
ret
cwtl
adc
cmc
leave
psubd
pop
jmp
pop
add
rcr
lret
out
repnz
jge
in
adc
cmpb
pop
clc
dec
sub
out
dec
cwtl
insl
sub
iret
jecxz
jle
jo
push
mov
xchg
push
cmp
dec
dec
sti
dec
sbb
mov
xor
cmp
rcrb
fdivrs
add
clc
ffree
xchg
insb
std
sub
test
aad
mov
sub
jbe
mov
shl
pop
in
stc
pop
mov
pop
outsb
addr16
adc
mov
inc
dec
mov
mov
sub
fs
outsb
xchg
in
in
cmp
in
icebp
imul
and
cmpsb
jge
inc
arpl
mov
pop
es
mov
cmp
or
mov
rclb
hlt
shrl
sub
push
sahf
cmp
mov
stos
fmuls
pushf
or
and
jmp
inc
js
inc
das
mov
cs
cmp
push
jp
inc
clc
sbb
mov
mov
jo
pop
enter
outsb
push
fistpl
loope
loop
dec
mov
int
fldt
sub
lret
call
mov
das
ljmp
jp
sub
push
mov
dec
fisubs
fistpll
les
mov
push
inc
test
push
scas
scas
popa
iret
jmp
cli
jl
mov
lods
inc
int3
aas
mov
mov
mov
sub
decl
jp
mov
sbb
outsb
inc
jg
lea
mov
adc
idivb
and
jge
sbb
aaa
sbb
mov
jne
lods
test
data16
ficompl
pop
js
xbegin
mov
push
rcrb
xlat
xchg
cmpb
mov
pop
cwtl
cli
mov
sub
adc
mov
jne
in
push
pop
dec
and
cli
test
jmp
dec
int3
gs
arpl
jns
cwtl
xor
addb
inc
jb
mov
mov
sub
and
sub
lahf
cmp
fisttpl
jmp
enter
jno
inc
dec
fsubr
std
inc
clc
mov
push
movsb
lahf
jmp
fpatan
test
lret
iret
pop
ffree
or
or
fstps
lds
sub
jns
in
mov
nop
insb
pop
sbbl
lcall
add
out
xor
test
jmp
pop
fdivrs
cs
les
shl
add
fistpl
cmp
jle
jae
bound
jmp
push
pop
jb
andl
sti
mov
add
xchg
mov
in
push
jnp
jo
movsb
cmp
clc
jnp
fidivrs
sbb
xor
mov
or
scas
jge
lahf
mov
sbb
cmpsb
or
pop
ficomps
add
xor
nop
stos
mov
cmp
mov
repz
fadd
push
pop
pop
dec
mov
mov
mov
je
mov
stos
pushf
push
testl
xor
aas
out
mov
faddl
xlat
sub
push
insl
stos
sti
and
into
mov
xchg
les
push
xor
and
push
push
cli
outsl
mov
pusha
imull
jo
mov
jo
sbb
sti
clc
cmp
fidivrl
shlb
cmp
inc
and
sbb
cli
jg
aaa
jle
in
lret
inc
loopne
into
cmp
in
add
add
and
leave
mov
mov
or
popf
and
aaa
mov
sti
dec
mov
popf
jecxz
lahf
cmp
fsqrt
jae
xor
add
movsb
sti
jo
or
addr16
sub
jg
add
imul
push
xchg
out
xchg
mov
dec
test
lods
push
mov
jmp
int3
stos
jb
or
cltd
sbb
shlb
cltd
pop
fwait
dec
xlat
or
sbb
cmpsl
and
cmp
loopne
inc
loopne
arpl
addr16
xchg
test
sti
adc
sbb
outsb
inc
push
jo
push
outsl
fcmove
jp
cli
pop
je
scas
mov
sti
fdivr
mov
push
mov
fists
and
jne
loope
push
mov
sahf
popa
rcrb
dec
hlt
sarb
jno
enter
aad
sub
rcrl
rcr
fsqrt
inc
cmp
cli
lahf
mov
jnp
sub
movsl
idiv
xor
fimull
shl
cs
cmp
lahf
rcll
fidivl
mov
lret
sub
repnz
xor
addr16
stos
xor
push
in
pop
mov
add
dec
inc
add
lods
pop
cmc
gs
pop
stos
out
test
stos
std
addr16
inc
jg
stos
inc
dec
stc
andl
lds
inc
lahf
or
push
das
test
les
sahf
dec
out
aad
loope
arpl
cmp
jmp
adc
add
lahf
test
dec
push
testb
test
sbbb
and
arpl
imul
pop
push
insl
cmp
jmp
jne
insb
out
pop
mov
aad
dec
pop
adc
xchg
idivl
xor
pop
pop
mov
les
mov
jo
insb
mov
inc
test
xor
lar
mov
scas
pop
test
ret
lahf
lret
adc
cli
and
adc
mov
mov
push
xchg
xchg
add
xchg
cs
in
outsl
push
add
out
mov
repz
popa
addr16
cld
mov
arpl
sti
adc
pop
sub
mov
sub
fldl
jg
inc
cwtl
push
clc
int
pop
cli
std
xchg
lds
fists
in
insl
jmp
jp
push
out
in
fdivs
aaa
rorb
in
les
add
popa
add
sbb
orl
pop
sbb
dec
push
hlt
movsl
mov
addr16
sub
and
in
xlat
out
cmp
adc
fiadds
out
mov
in
lret
stos
outsb
loop
lret
fld
mov
mov
pop
frstor
jg
into
add
imul
test
leave
pop
fwait
push
scas
into
dec
idivb
inc
inc
popf
jo
pop
imul
adc
mov
dec
outsb
mov
jne
mov
pushf
dec
cmp
pop
int3
or
jno
aaa
test
lods
jl
stos
mov
sub
jb
gs
jnp
xor
xchg
sar
pop
dec
movsl
fnstcw
xchg
mov
sub
xchg
add
cmpb
jo
xchg
shl
inc
mov
scas
push
adc
sbb
cmp
lods
rclb
sbb
pop
push
dec
ds
pop
sbb
and
inc
lret
dec
push
or
lea
mov
sub
clc
jns
das
xlat
adc
add
mov
test
fdivs
inc
jbe
inc
test
or
pop
hlt
enter
dec
xlat
mov
lods
leave
mov
jecxz
cmp
adc
loop
cs
pop
xchg
jns
mov
bound
mov
xchg
sub
stos
fisubs
push
sub
stos
mov
add
mov
fildll
sti
cmpsl
sub
jecxz
adcl
cli
pushf
mov
js
sbb
pop
scas
cmp
lret
insb
fisttpll
dec
pop
dec
jns
xchg
lcall
hlt
push
jae
sub
dec
loopne
ret
in
js
cmp
jmp
out
jbe
sub
sub
std
cmp
push
js
jg
int
or
test
je
jecxz
mov
in
xor
inc
int3
mov
mov
push
nop
rcr
ds
pop
stos
subl
cmp
sub
sub
jmp
mov
insl
stc
jbe
xchg
ret
int3
add
push
push
in
das
scas
in
popf
push
pop
adc
mov
cli
mov
lcall
add
jp
test
sbb
inc
sub
sbb
loop
xchg
sub
stos
adc
sub
sub
ret
fidivl
jb
mov
scas
out
cmp
pop
ds
adcb
enter
mov
out
and
loop
stos
stos
add
loopne
sub
mov
clc
cwtl
aam
xor
push
dec
mov
cmp
mov
mov
mov
pop
lcall
cmc
lret
sub
les
xor
cmp
inc
fistpl
clc
xchg
inc
or
adc
pop
les
add
aad
repz
add
cwtl
stc
xor
jb
test
fldt
es
lods
mull
in
hlt
xchg
lea
mov
dec
flds
notl
xchg
inc
cwtl
sarl
mov
sub
lret
inc
push
clc
sbb
insb
loope
jno
cwtl
dec
pop
dec
sbb
or
std
andl
add
add
sub
insb
mov
dec
int3
xchg
pop
or
subb
mov
mov
mov
sub
jb
cmpsl
test
mov
sub
mov
cmp
xchg
popf
sub
shll
sbb
push
mov
dec
fsubrl
xor
test
inc
adcb
fisttpll
fs
divl
sti
shrb
mov
mov
in
imul
testb
aad
loope
fs
and
mov
inc
lret
push
stos
lods
inc
fisubrs
lcall
loopne
jns
and
mov
or
inc
clc
shrl
push
pop
mov
adc
sub
inc
jae
fs
setl
aaa
lods
mov
movsl
jge
adc
or
lcall
in
push
adc
add
das
loopne
add
mov
enter
or
add
push
xchg
int
sbb
sbbb
outsl
shrb
clc
mov
add
inc
fcoml
rolb
loope
mov
pop
lcall
jmp
dec
sbb
or
dec
popf
gs
and
add
xchg
loope
inc
test
ss
add
mov
push
imul
cld
xor
shrl
cmp
lods
testl
lcall
mov
cld
out
sub
int
addr16
clc
xlat
sub
or
out
mov
inc
ret
mov
paddb
vrcpss
scas
es
xchg
iret
cmp
sub
push
jp
cmp
mov
xchg
add
add
sub
mov
jmp
shrl
rorb
cmp
inc
jae
mov
sub
push
xor
push
gs
push
sbb
js
sub
cmc
push
loopne
sarb
movl
bound
ss
sub
js
sub
sub
call
mov
cmpsl
sub
fstpl
or
or
jle
sub
or
xchg
mov
sub
sbb
jp
add
jmp
test
xchg
cs
popa
adc
sahf
test
lock
subl
push
aad
push
cli
adc
sub
ja
cs
sub
mov
mov
rcll
push
xor
or
pop
mov
cmpl
add
jg
out
xor
push
in
pop
jnp
sub
jle
insb
rcr
jno
sub
fisubs
mov
lods
test
or
dec
inc
add
pop
sub
loop
aad
pushf
mov
cmc
mov
int
pop
add
into
icebp
mov
pop
jae
cli
xchg
pop
cmpsl
lcall
ficoms
mov
dec
sub
sub
inc
ss
dec
add
mov
sub
pushf
sub
mov
add
mov
jmp
jecxz
faddl
sub
and
mov
sbb
adcl
mov
es
xchg
sub
push
pop
lods
into
sub
sbb
sub
fcompl
inc
sub
ss
sub
cmp
add
and
shlb
add
adc
in
js
pop
shll
mov
rorb
rorb
sbb
lock
icebp
or
dec
jecxz
ret
inc
jmp
sub
cli
or
pop
test
iret
scas
sub
lahf
xchg
test
mov
sub
sub
xor
cmp
test
leave
jne
or
inc
das
clc
mov
dec
mov
stos
int3
jns
adcb
jno
outsb
sub
and
loope
jecxz
ja
sub
fsubl
iret
jb
jbe
pop
push
inc
call
addr16
xchg
sub
pop
pop
dec
rcl
out
ficomps
mov
add
sahf
movsl
popa
pushw
test
push
cmp
rol
jno
xor
pop
out
sbb
in
lods
push
in
fst
jns
jae
nop
mov
movsb
jno
sub
inc
stc
out
out
sub
mov
arpl
xor
or
fcoms
test
pusha
push
or
stc
lds
add
mov
dec
insl
jmp
ljmp
ds
testb
rclb
orb
add
jge
minps
movb
adc
jge
push
shll
aad
inc
cld
test
mov
sub
testb
sbb
sub
mov
mov
fildll
adc
inc
bnd
mov
stos
mov
stc
in
adc
sub
pop
cmc
cltd
sub
jmp
movsb
pop
xchg
xorl
or
inc
in
and
sub
push
fwait
jecxz
cmpsb
sub
dec
add
sub
add
pop
std
in
push
sub
add
xorl
sbb
insb
add
rorl
push
jnp
mov
pop
lock
adc
into
in
jmp
sub
ljmp
mov
push
mov
repnz
push
cmp
xchg
insl
into
pop
sub
std
test
cltd
scas
jp
or
mov
xchg
addl
dec
clc
sarb
xor
jge
or
les
rorb
imul
xchg
into
shufps
or
shll
add
sub
test
add
mov
add
les
mov
jmp
data16
sbb
sub
inc
call
lret
pop
in
or
js
inc
sub
lret
mov
xor
repnz
inc
xor
testb
in
sub
lock
jae
adc
ljmp
fildll
mov
test
out
or
cmp
push
fldcw
sub
test
insl
push
lahf
out
sub
and
push
test
jo
aad
cmp
dec
pop
jmp
rcl
mov
dec
xchg
sub
insb
lret
xor
sub
sbb
cld
dec
adc
sub
cmp
leave
xchg
mov
fadds
sub
mov
push
push
hlt
dec
mov
mov
jne
movsl
sub
fldl
sbb
sub
xchg
xor
jmp
add
clc
sti
inc
xor
pop
les
arpl
shl
jp
std
sub
dec
int3
add
ret
jnp
lods
out
sub
dec
mov
sub
fs
ljmp
cwtl
xchg
daa
inc
sub
shrl
sbb
sub
lcall
jbe
movb
arpl
js
push
sub
cs
or
dec
test
pop
and
cld
stos
push
xchg
rcll
sub
ja
lahf
sub
xchg
aas
test
popfw
lods
dec
xchg
add
imul
cwtl
jg
dec
add
adc
ret
jae
xchg
sub
and
in
and
out
xchg
push
sub
or
sbb
push
jge
add
daa
or
enter
lret
movsl
sub
loop
repz
nop
push
fwait
push
jecxz
push
jmp
push
sub
dec
mov
cmp
xor
mov
cltd
lahf
sub
xlat
add
sub
mov
fsts
sbb
mov
leave
pop
or
in
sub
nop
ja
sub
cmp
sub
addr16
dec
mov
sub
lcall
dec
dec
xchg
sbb
je
imul
fldt
subb
xchg
sub
lcall
push
sub
pop
js
mov
das
pop
sub
imul
mov
stos
sub
aas
inc
cwtl
loopne
lea
test
out
dec
xor
sbb
sub
and
insl
clc
pop
data16
xlat
mov
lea
sub
iret
fsubrl
mov
add
adc
jno
clc
adc
jge
xorb
jmp
jmp
pushf
sub
jmp
sub
into
xchg
clc
mov
sub
out
sub
xor
mov
mov
cmpsb
mov
shrb
adc
mov
push
push
dec
pop
cld
idiv
subb
data16
pusha
xchg
jae
sub
push
call
push
fnstenv
xor
imul
fistpll
cwtl
movsb
into
sub
out
das
xor
repnz
sbb
xor
jge
jmp
sub
loope
lods
lods
fs
shll
fwait
jns
ret
sub
add
and
xchg
pop
insb
lret
dec
lret
lds
bound
dec
or
call
arpl
ret
fs
stos
test
loop
cmp
sub
dec
mov
or
sub
fsubrs
add
rol
outsl
ljmp
jle
das
aaa
testl
mov
or
int3
call
pop
sub
xchg
jo
jecxz
sbb
repnz
call
dec
outsb
inc
push
popaw
mov
and
mov
sub
lods
hlt
shlb
loopne
sub
adcl
mov
lcall
push
sub
sub
int
pop
push
fnstsw
xchg
jo
jp
or
cmp
and
scas
dec
in
ret
mov
mov
jge
push
inc
sub
mov
sub
mov
movsb
imulb
popa
lahf
in
sub
adc
cwtl
jbe
sbb
sahf
iret
lcall
lcall
push
jo
mov
pop
cmpl
pop
sub
cmp
cwtl
jae
int
ret
cltd
sub
sbb
cli
aaa
scas
cs
js
push
stos
xchg
out
out
repz
imull
addr16
mov
xor
dec
adc
pop
mov
int
test
loope
in
xor
outsb
mov
mov
hlt
popa
jmp
ret
popa
jb
jp
lcall
mov
clc
sti
js
pop
outsl
jb
repnz
sub
xchg
and
rcll
fisubrs
adc
adc
mov
xor
test
jns
test
sub
aam
pop
dec
call
cmc
sbb
test
push
pop
pusha
pop
xchg
mov
sub
out
mov
dec
sub
xchg
shrl
cmp
jl
jmp
sub
and
mov
or
les
movl
dec
hlt
sub
insl
xor
mov
adc
es
pop
or
sub
rcll
sub
insb
xchg
push
xor
insl
mov
adc
jecxz,pt
xlat
push
out
enter
std
sub
leave
dec
or
lea
nop
sub
cli
rcrb
shrl
cmp
sub
pushf
jl,pn
popf
add
sub
mov
jb
jno
push
sub
pushf
leave
hlt
sub
mov
adcl
xchg
lret
adc
lods
call
dec
mov
test
dec
lahf
xlat
call
sub
lea
sub
aad
mov
std
int
cs
imul
adc
sub
fadd
lock
sub
mov
imul
test
jnp
scas
popa
lret
sub
das
mov
outsb
pop
dec
add
xchg
scas
mov
sub
cli
jbe
push
imul
pop
cld
lret
mov
fistpll
int
out
pushf
imul
mov
or
inc
les
lea
sub
xchg
or
jo
hlt
iret
sub
outsb
fs
and
jmp
xor
sub
add
pop
mov
sub
in
sub
lock
enter
pop
jno
movsb
pop
or
movsl
arpl
mov
data16
stos
test
adc
subb
addl
pop
test
add
push
shlb
and
icebp
xchg
adc
mov
push
out
cmp
fcmove
sub
inc
testb
movsl
add
cwtl
adc
push
insl
jl
icebp
sub
cmp
mov
xorl
jg
ret
push
or
loopne
mov
aam
outsb
shl
push
ds
ja
sub
ret
mov
pop
sub
sub
popf
jno
xchg
dec
xchg
sub
lcall
in
js
mov
repz
loope
mov
mov
sub
sahf
dec
mov
fimull
in
jno
inc
cltd
cmp
xlat
jp
adc
iret
enter
pop
sbb
sub
jnp
enter
sub
mov
cli
rol
shl
xor
iret
popf
stos
ficoms
in
roll
gs
jmp
scas
add
aad
sub
xchg
mov
or
sbb
jne
push
dec
xorl
jge
sbbb
fisubrl
pop
loopne
xor
jecxz
int
lods
scas
sub
mov
or
sub
stc
inc
xchg
sbb
fs
sahf
mov
jae
jno
sub
inc
jne
shlb
sub
xorb
movsl
lret
cmp
das
scas
addr16
mov
inc
jge
xchg
int
sub
scas
jp
sub
repz
cmp
and
fdivrp
jno,pt
mov
out
jg
xchg
imul
or
add
cld
push
cwtl
outsb
fldt
outsl
mov
mov
sbb
sub
lods
pop
xchg
stc
rolb
daa
inc
xadd
cmp
or
shll
add
jns
pop
sub
lret
jg
xchg
mov
ficompl
adc
adc
mov
faddp
pusha
push
or
test
sub
jns
inc
out
pop
adc
pop
sahf
testl
mov
setb
and
dec
mov
mov
aaa
sub
mov
lods
icebp
sub
or
sub
out
adc
rorl
xor
sub
sti
xchg
push
push
cltd
mov
shrb
cmpsl
adc
add
das
sub
clc
aas
push
lret
not
dec
sub
push
pop
cmp
pop
mov
cmp
subl
sahf
data16
shr
ficompl
pop
scas
ret
adc
cwtl
or
rol
push
test
and
fsubrl
into
add
dec
sub
push
or
jne
loopne
pop
sub
xchg
xor
lds
jnp
push
and
sub
jmp
mov
sub
test
outsb
mov
mov
std
sub
stos
and
mov
jae
xchg
xlat
das
jge
pushw
sub
or
sbb
mov
xor
mov
pcmpeqw
lods
sbb
cmp
dec
lahf
test
jl
mov
cmc
sub
mov
mov
lea
sbb
xchg
push
and
adc
test
add
lret
inc
or
adc
rolb
ficompl
add
xor
imul
xor
add
adc
xor
xchg
mov
or
pop
sub
aas
data16
leave
repnz
mov
das
xor
iret
sub
mov
adc
icebp
ret
xlat
test
mov
movsb
mov
test
cmp
out
cmp
jae
mov
rclb
leave
ja
jl
cmpb
mov
repnz
adc
inc
je
jae
cltd
stos
sub
out
sub
pushl
sub
fldenv
pop
in
xor
xchg
ds
xchg
clc
sbb
inc
scas
mov
cltd
pop
and
sub
insl
cmp
in
mov
fwait
lods
fildll
or
dec
in
mov
faddl
mov
or
sub
cld
mov
test
sub
sub
lret
sbb
cmp
mov
sub
nop
pushf
and
add
dec
or
dec
lea
adc
nopl
adc
pop
sub
or
and
inc
ja
cmpb
call
inc
fstl
inc
dec
cmp
sub
int3
push
pop
iret
call
fldcw
inc
orb
sub
dec
lret
aad
shrl
test
ljmp
gs
sub
rcrl
and
sbb
sub
in
insb
or
pusha
scas
mov
sbb
adc
ret
xor
pop
test
jo
sbbl
fistpl
lret
in
adc
sar
lret
sbbb
mov
push
out
ret
push
mov
jo
jecxz
mov
or
cmp
xchg
mov
mov
mov
dec
imul
adc
mov
out
mov
ret
xchg
push
and
imul
les
fwait
icebp
sahf
and
or
cmp
jb
mov
cltd
mov
sub
push
jge
aas
mov
fimuls
inc
adc
test
int
out
jg
sub
nop
out
mov
lods
in
sub
sbb
mov
out
loopne
dec
loop,pt
inc
push
adc
add
sbb
sub
imul
push
sub
lret
lds
or
xchg
in
mov
mov
push
adc
incb
test
jmp
sub
xchg
mov
mov
pusha
icebp
sub
mov
aaa
and
std
adc
mov
sub
jae
in
leave
sbb
pop
push
mov
xchg
popa
unpcklps
out
dec
pusha
inc
jmp
pop
loope
outsb
adc
mov
cmp
or
jae
jmp
sub
in
leave
scas
test
sbb
mov
into
pusha
test
addr16
inc
mov
inc
xchg
jns
fisttpll
push
lret
cli
sbb
stos
les
fwait
mov
mov
outsl
int
clc
scas
sbb
sub
je
lret
mov
out
xchg
sti
add
mov
push
mov
scas
push
mov
pop
movsb
in
xor
nop
xor
stc
cs
adc
sti
pop
loopne
jmp
xchg
nop
das
cmp
aas
mov
fs
das
std
jb
xlat
fsts
jns
cmpxchg
pop
or
sub
push
xor
dec
imulb
jmp
sub
inc
jg
sub
stos
repz
cmp
rcrb
dec
sub
mov
pop
jno
or
les
sub
sti
int3
sarl
mov
push
daa
jae
out
and
sbb
mov
xor
shlb
rolb
mov
xorl
cmp
sub
shll
cmp
ljmp
arpl
clc
test
push
ret
sub
gs
xchg
push
and
inc
jecxz
jg
out
adc
cmp
and
jp
mov
leave
dec
mov
mov
mov
pop
ss
dec
sbb
xlat
mov
test
fimuls
ljmp
leave
cmp
inc
cmp
xor
add
cmp
imul
aam
add
mov
push
mov
jmp
pop
sub
imul
sub
xchg
ret
dec
or
cmp
sub
ljmp
xchg
shl
and
sub
ret
adc
adc
mov
sub
gs
push
mov
rorl
mov
divb
fbstp
scas
sub
aad
xchg
das
sub
lea
jle
sub
sub
xor
std
mov
mov
push
stos
or
sahf
sub
adc
arpl
pop
add
dec
and
xchg
mov
ja
sti
dec
dec
and
rorl
les
into
stc
je
fldenv
insb
loope
sbb
cltd
lds
sub
popf
mov
or
and
std
subl
jb
push
sub
and
cld
test
add
das
and
push
adc
sub
cmp
jmp
or
mov
in
outsb
insb
pop
repz
xor
and
sbb
les
ds
jmp
cwtl
sbb
mov
sub
and
mov
add
shll
jmp
fsubr
shlb
pop
es
popf
jle
addr16
xor
push
shrl
sub
jns
test
movsl
clc
call
test
mov
dec
jp
enter
hlt
push
out
in
mov
sub
lea
or
push
loopne
fnstcw
mov
shrb
sub
insl
stos
pop
xlat
push
cmp
sar
dec
andl
imull
mov
push
push
push
adc
in
popl
sub
shlb
icebp
push
xor
fadds
mov
je
dec
add
enter
xchg
std
xchg
pop
mov
mov
sahf
dec
pop
sub
je
pop
arpl
mov
sbb
cmp
cwtl
lds
jbe
fists
cmpl
fwait
int3
mov
add
cmp
cltd
cli
mov
push
cmp
js
sbb
shrl
jge
scas
sbbb
sub
sub
repnz
in
movsl
and
sub
dec
adc
pop
mov
sub
and
shl
in
lods
sub
sub
daa
pop
jae
sbb
inc
lret
pop
dec
jl
sub
xor
fcmovnbe
lods
and
add
inc
sub
lds
sub
cmp
or
mov
aam
shlb
imul
sti
sub
lods
push
xlat
test
add
inc
jns
popf
lods
repnz
jne
push
es
fisubrl
pushf
rclb
rcr
push
cmp
mov
sub
lret
test
sub
ret
mov
or
jnp
push
jl,pt
sub
mov
iret
sub
int3
subb
mov
xchg
or
pop
ss
mov
push
loop
inc
adc
jae
pushf
xor
sub
dec
jbe
fwait
pop
sub
mov
sub
enter
mov
inc
or
shr
nop
jnp
sub
mov
addr16
stos
shlb
xor
ja
sub
aas
loop
rorl
and
mov
adcl
sub
mov
jle
push
sub
push
cmpsl
cli
sbb
lcall
nop
push
orb
loop
rcl
sub
in
sbb
test
sub
std
movsl
cmp
sub
inc
cld
push
mov
jne
jp
mov
jg
fstpl
mov
mov
push
mov
jecxz
adc
imul
fwait
push
mov
js
or
push
sub
outsl
ficoms
daa
sbb
sub
in
outsl
cmp
jbe
stos
xor
das
mov
lea
xchg
dec
shrb
xchg
ror
pop
mov
stc
inc
pusha
pop
sub
fcomps
cli
addr16
sub
bound
ret
cld
scas
sub
out
add
push
mov
pop
xor
subl
jmp
enter
insb
ret
xchg
repnz
xchg
test
jecxz
iret
cmc
scas
push
sub
mov
cmp
test
shlb
shrb
repnz
xorl
adc
add
scas
fnstsw
sub
add
leave
sbb
sub
cmpsb
sbb
shl
mov
imul
imull
shlb
outsb
sub
aas
inc
out
sub
add
mov
ja
sub
xor
or
xchg
adc
into
sub
repz
aad
imul
addr16
or
sub
sub
sub
das
icebp
cmp
jns
cmp
dec
adc
push
or
or
lret
push
jb
in
arpl
add
mov
test
and
sub
xor
insl
xchg
mov
test
adc
add
push
sub
addr16
popl
fmull
jle
ljmp
loopne
daa
ret
fs
mov
and
lods
pushf
rcr
fsubrs
mov
add
mov
sub
mul
xor
aad
dec
loope
ficoml
out
lret
mov
sar
adc
mov
and
push
imul
jb
mov
sub
test
test
jg
popf
mov
repnz
sbb
xor
xchg
cmp
leave
out
or
pop
stos
sub
icebp
ficoml
fisubs
sbb
and
xchg
sub
frstor
sub
mov
mov
test
in
sub
es
fcompl
push
sub
rcl
xchg
sub
jns
stos
js
pop
std
fbld
xchg
sbb
cmpsl
pop
int3
sub
adc
lds
sub
cmp
adcb
les
or
ljmp
icebp
sub
pop
jns
and
aas
cmpsl
sub
mov
and
imul
ds
inc
push
clc
mov
pusha
xchg
push
sub
loope
mov
mov
xor
sub
sub
push
jg
int3
push
dec
dec
sub
inc
mov
sub
shll
rcrl
les
mov
cld
les
sbb
and
imul
lret
sub
lods
dec
fwait
jo
inc
clc
mov
sub
jp
sub
xchg
xchg
es
mov
pop
jmp
test
sahf
imul
mov
popf
lahf
jp
jmp
pop
mov
les
incb
popa
mov
add
jnp
jecxz
imul
dec
lock
xchg
sub
sar
fdivrs
cwtl
out
jle
cli
and
jae
test
insb
sub
fbstp
addr16
movsl
dec
je
neg
sub
inc
jg
js
pop
mov
jbe
cmpsl
and
sarb
mov
mull
mov
sub
out
sub
ja
insl
adc
iret
mov
stc
jne
and
pop
sub
or
test
bound
sub
pop
xchg
jl
and
popw
call
adc
shrl
rcrb
pop
loope
sub
outsb
outsl
mov
ret
movsl
inc
dec
sub
into
mov
sub
pop
and
mov
bound
or
rol
push
loopne
outsl
fdivrl
ljmp
mov
adc
sbb
out
test
aaa
xchg
mov
mov
ljmp
shl
pop
sub
popa
xchg
sub
adc
sub
fdivs
call
mov
rorb
sub
sub
cld
mov
enter
sub
arpl
in
jo
sub
test
xchg
mov
enter
inc
inc
sub
popl
dec
and
sbb
push
jp
jmp
sub
jno
inc
fisubrl
pusha
pop
adc
js
in
fistpll
out
sub
in
stos
sub
push
inc
cltd
iret
mov
sub
cmp
arpl
mov
push
sub
cmpb
and
stos
fstps
scas
rorl
xor
je
xchg
leave
add
push
dec
sub
and
fisttpl
lret
ret
daa
pusha
mov
test
int
movsl
sub
and
sub
enter
ret
mov
jmp
mov
sbb
fidivl
ret
out
sub
sbb
out
rolb
sub
pop
jl
pop
dec
hlt
sub
call
add
shrb
mov
movsl
imul
xchg
iret
and
push
out
popa
pop
dec
fbld
loop
adc
push
sub
mov
adc
inc
cmpsb
sub
loop
adc
adc
mov
movsb
xchg
inc
pop
cli
or
sub
dec
push
jg
jmp
mov
pop
mov
jnp
std
jno
dec
js
arpl
mov
jnp
pop
xor
or
les
fistl
or
cmp
ret
lods
cwtl
sbb
mov
mov
stc
mov
nop
cwtl
imul
stos
clc
sbb
mov
cmp
in
sub
stos
loopne
jecxz
clc
mov
lds
lods
test
jp
pop
jnp
jecxz
mov
sbb
push
xchg
inc
loope
rorb
popl
push
xchg
or
or
xor
lret
into
iret
pop
jb
xchg
xor
and
clc
mov
jecxz
sti
sub
orl
loope
es
xor
add
adc
mov
inc
dec
jnp
popa
cli
add
lods
pop
add
outsl
inc
push
xlat
pop
fidivrs
ret
arpl
ja
adc
ljmp
inc
call
sub
push
jo
cmp
and
cli
test
sbb
in
nop
aaa
cmp
scas
in
out
out
arpl
mov
mov
and
cmp
mov
cmp
inc
popf
cli
jp
rcrl
cwtl
sub
jnp
xor
les
lods
inc
jp
out
fcmovne
sub
es
pusha
xchg
push
jo
dec
pop
inc
mov
xchg
push
ret
add
lcall
cwtl
xor
ret
mov
dec
add
inc
out
cmp
std
fsubl
stos
xchg
fidivs
sti
punpckhwd
inc
ror
mov
dec
or
sti
cli
gs
outsb
cmp
push
loop
adc
sub
fucomip
mov
jb
imulb
or
dec
mov
push
jmp
pop
sub
outsl
not
inc
repz
sbb
mov
or
inc
pop
lret
push
sbb
int
sub
jne
adc
xchg
cltd
test
sbb
stos
dec
push
push
in
lea
nop
push
sub
ss
aaa
jb
cwtl
frstor
shrl
imul
shufps
jp
add
pop
sub
jmp
stos
sub
cmp
clc
and
pop
and
repz
mov
pop
xor
add
pop
stos
rorb
pusha
sub
pop
xor
sub
pop
add
adc
cmc
iret
ds
lret
rorl
jge
push
xchg
or
imul
outsl
jae
pop
stos
lret
mov
xchg
mov
xor
lds
fldt
sub
pop
mov
dec
sub
pop
mov
push
ret
push
or
cmc
or
mull
sub
pop
jmp
cmp
in
cmpl
cmp
mov
adc
fcomps
imul
xor
dec
lods
bnd
xor
ljmp
pop
ret
or
jmp
leave
sub
mov
cmc
mov
jb
cmp
xor
lds
test
cltd
adc
popf
adc
leave
jge
jne
fsts
sbb
fsubrl
adc
sbb
mov
xor
fcomi
sub
sbb
sub
push
xlat
pop
pop
adc
jne
or
xchg
sub
stc
sbb
aam
xchg
popa
adc
out
sub
shlb
sub
push
mov
or
add
sub
cs
cmpb
sub
pop
je
sub
jbe
pop
mov
int
fisttpl
add
or
cmp
jns
daa
movsl
sub
add
dec
sub
sahf
cld
ret
inc
and
loop
insb
dec
sub
aam
or
hlt
mov
jecxz
sub
sahf
pop
into
sub
xor
mov
sti
mov
dec
cs
js
gs
push
push
ljmp
loope
scas
out
je
xchg
cltd
cmp
aad
push
loope
mov
push
divb
cwtl
xchg
xrelease
or
pusha
lcall
mov
push
push
jo
sbb
dec
jecxz
lret
push
fisubrl
out
mov
subb
ja
bnd
mov
out
adc
lret
cmp
subb
popf
shrd
sub
and
sub
lds
mov
jbe
sub
cmp
push
pop
mov
sub
sub
inc
or
add
jge
out
dec
pop
lret
sub
inc
bound
dec
mov
push
imul
pushf
sub
adc
adcb
push
stos
add
fstl
sahf
or
and
shrb
jmp
inc
lcall
mov
pop
mov
mov
nop
and
or
stc
ds
mov
call
roll
sub
xchg
push
popa
sub
dec
ret
xchg
and
xchg
stos
ss
fisubrl
add
mov
pop
sub
std
adc
adc
repz
jne
xor
sarl
cmp
out
dec
inc
cli
inc
stos
sub
out
lcall
dec
mov
mov
sbb
mov
imul
jge
fildll
ret
std
sbb
dec
enter
fcomps
test
sub
in
fisttpll
jl
int
jo
cwtl
xchg
test
das
mull
jg
sub
lods
stos
mov
jb
into
cmpsl
mov
cmp
sbb
dec
cmp
push
lret
mov
and
jns
inc
xchg
stc
push
push
cmc
sub
jl
pop
sbb
xor
sub
js
sahf
pop
sbb
rcr
aam
push
inc
call
repz
xlat
std
fcoms
std
adc
sbb
mov
sub
add
aad
jle
outsb
jmp
inc
lcall
es
sub
stc
jbe
leave
mov
cld
ret
mov
cmc
xor
jnp
ljmp
fwait
jbe
xchg
cmp
pop
fsubrl
and
cld
sub
xchg
rcrl
mov
test
scas
int
int3
popa
dec
es
jo
add
push
sub
mov
out
scas
outsl
adc
jo
dec
daa
cmp
mov
fiadds
dec
add
les
jb
sub
push
cld
mov
les
aas
push
fistpll
in
adc
sub
std
and
sbb
sub
sbb
lcall
push
imul
or
cwtl
dec
mov
pop
jae,pt
pop
jecxz
dec
dec
loop
call
add
sub
sahf
push
push
mov
addl
jns
mov
in
fisubrs
repz
out
inc
adcb
mov
inc
andb
inc
sub
xor
rorb
ret
test
push
cltd
dec
jno
mov
mov
pop
jb
push
imul
jp
add
stos
mov
cmp
pop
or
jmp
scas
andb
sub
out
movsl
pop
les
sub
sub
cltd
push
add
ss
sub
je
push
sti
mov
jae
jno
or
popa
mov
sbb
dec
std
and
ss
lret
in
das
movaps
sbb
sbb
sbb
xchg
scas
lahf
mov
sub
scas
push
mov
or
shlb
mov
mov
stc
enter
jge
pop
arpl
jg
outsb
or
ds
inc
lods
movsl
pop
shll
stos
loop
lahf
pop
add
dec
imul
push
lds
push
ljmp
ljmp
or
pop
xor
dec
lret
cmpsb
adc
pop
test
hlt
cmp
and
sub
add
repz
idivl
sub
push
jmp
mov
in
fcoms
adc
mov
fwait
xor
mov
stos
mov
sub
je
inc
pop
sar
sbb
fsubrs
ss
cmp
sub
mov
repnz
mov
enter
lret
xchg
out
jnp
call
fidivs
sub
ds
imul
or
jb
aam
and
sub
push
in
cmp
into
test
dec
in
call
test
xchg
into
ret
inc
int3
orb
cmp
sbb
std
sahf
sub
divb
lock
or
or
and
sub
xchg
push
adc
enter
hlt
in
out
test
repnz
cwtl
dec
fs
jmp
enter
ds
loope
cmpsb
jmp
push
ljmp
sub
jl
sbb
subb
mov
sub
les
cmpsb
xchg
int3
call
or
ret
and
jmp
dec
lea
jmp
mov
imul
inc
cmpsl
sbbl
fistpl
or
movb
jecxz
fimull
out
mov
push
and
sub
dec
js
clc
xchg
ds
lcall
call
sub
out
adc
fdivrp
cwtl
inc
sub
xchg
lods
fisttpl
inc
cltd
sub
xor
je
dec
push
scas
or
test
sub
repz
cmc
jecxz
lret
lds
in
gs
or
test
xlat
xor
fistps
mov
cmp
mov
adc
stos
repnz
mov
pushf
test
dec
inc
int
add
ret
addl
fsubrs
cmp
push
ds
mov
shll
pop
xchg
pop
iret
add
sar
call
mov
mov
mov
sub
shl
adcl
fdivrs
sub
das
adc
shrl
scas
xlat
push
ret
mov
sbb
push
sarb
jae
sbb
sub
xor
pop
xlat
popf
cli
pop
inc
cmp
test
sar
sub
pop
test
les
mov
movsb
jmp
mov
out
cld
mov
xlat
xchg
and
jne
mov
pop
adc
inc
mov
ret
scas
dec
sub
imulb
cwtl
jp
mov
and
jne
xchg
jns
iret
cmp
arpl
cwtl
mov
cmp
cli
sub
jno
sub
or
jecxz
in
xor
sub
mov
and
jge
pop
pusha
xlat
test
mov
add
mov
adc
int3
mov
out
popf
dec
lahf
je
dec
fld
dec
dec
and
mov
jl
cld
notl
jmp
into
out
stos
pusha
testl
dec
push
dec
popf
pop
sub
cmp
push
sti
cld
scas
rorl
jecxz
and
or
mov
sub
pushf
pop
rorb
cmp
add
arpl
cmp
negb
repz
dec
mov
sub
mov
lds
jmp
lods
pop
jmp
dec
clc
mov
add
clc
dec
xor
jo
stc
lods
or
push
pop
lcall
arpl
orl
add
xor
inc
add
flds
ret
nop
mov
mov
inc
mov
sets
nop
cld
cmp
sbb
test
cmp
sti
xor
push
xor
jmp
std
imul
sbb
sar
test
sub
push
dec
pop
mov
jl,pn
icebp
out
gs
mov
ds
add
add
movsl
sub
sub
cs
xchg
pop
push
or
xchg
mov
fwait
lock
fldl
sti
lahf
sti
mov
cmp
cmp
jmp
jnp
out
in
pop
push
pushf
enter
rol
scas
out
inc
add
add
nop
xor
or
lods
push
shll
add
and
add
js
mov
or
cmpsl
es
dec
fwait
dec
maxps
daa
test
jl
adc
mov
in
imul
mov
repnz
jle
xor
mov
repz
stos
cmp
cmp
test
sti
lods
ret
sbb
mov
mov
dec
prefetcht0
dec
push
sbb
and
pop
jns
jns
jge
jmp
aas
xchg
test
mov
mov
je
cli
lock
mov
int3
fwait
sti
sbb
and
inc
or
cmp
outsl
movsl
xor
xor
jo
sahf
iret
and
clc
jle
sub
add
inc
push
ficompl
lcall
xchg
jp
inc
mov
stc
push
push
mov
call
cli
scas
out
cwtl
dec
imul
cmp
in
jbe
cli
ds
fildll
sub
jecxz
int3
cmpsb
adc
and
xor
jno
popl
movsb
xchg
dec
insb
ljmp
jne
clc
icebp
jmp
mov
jecxz
fmuls
scas
sub
mov
push
aas
pushf
adc
arpl
add
mov
clc
std
pop
jmp
das
lock
stos
lea
jecxz
inc
sub
leave
jp
adc
push
and
dec
cmp
dec
push
push
clc
psubusw
jp
in
popa
pop
data16
loope
xor
adc
and
or
stos
arpl
xchg
ja
enter
sub
in
push
and
aaa
jl
xor
adc
aas
push
sub
adc
and
je
pop
mov
dec
ret
add
dec
loop
cld
dec
lret
mov
or
cmp
in
dec
mov
lock
mov
arpl
pop
push
inc
dec
pop
adc
pop
inc
cwtl
rol
pusha
aas
pop
dec
jl
jmp
jge
leave
mov
xor
lret
movsb
cmp
insb
add
mov
inc
dec
sbb
pop
out
in
push
arpl
lock
push
push
sbb
cmp
incb
and
sub
outsl
cli
daa
sti
xor
in
imull
jle
ds
jge
mov
or
sbb
inc
into
mov
mov
cld
lods
mov
out
and
ja
out
push
pop
xchg
neg
sbb
adc
shll
mov
repz
test
mov
pop
inc
jg
fs
sti
icebp
int3
or
inc
xlat
cs
imul
mov
stos
les
pop
aad
mov
adc
mov
imul
mov
cmp
shlb
or
or
cmp
fs
sub
jecxz
mov
inc
mov
push
xor
fsubp
pop
sahf
pop
mov
in
or
clc
stc
cmp
pop
cli
nop
daa
dec
stc
insl
mov
sti
add
fs
push
mov
cld
xor
fstps
outsl
fwait
scas
jno
pop
jg
addr16
pop
scas
push
mov
loop
push
je
fistpl
or
cmp
pop
push
daa
sub
push
xchg
sti
adc
aad
sbb
xor
insb
xlat
jp
sti
bound
pop
ficoml
mov
lods
push
mov
test
push
push
das
shlb
mov
in
sbb
adc
in
test
pop
push
sub
xor
mov
mov
ds
xor
or
pop
in
insb
subb
pop
call
inc
dec
pop
mov
insb
test
xor
sub
push
push
sbb
into
fcoms
aaa
in
popa
push
fcoml
cmp
sub
or
and
xor
into
add
xchg
out
aad
push
sub
push
xchg
sub
xor
sbb
adc
jb
loope
jg
test
sbb
lods
sub
dec
xor
sub
and
xchg
push
out
sub
inc
xchg
sbb
bndstx
sub
adc
pop
sub
test
call
movsl
movsl
insb
inc
subb
xchg
cmp
pop
nop
push
pop
in
push
es
push
sub
mov
dec
out
pop
arpl
sub
inc
inc
cld
outsl
out
mov
sub
xchg
dec
or
sub
mov
sub
dec
loop
dec
movsl
popa
ds
sbb
test
jecxz
arpl
push
xchg
pop
int3
ds
sub
neg
adc
bound
insl
cmp
je
lret
sub
shlb
xor
xchg
loopne
push
sbb
sub
xchg
jo
lds
sub
jno
xchg
inc
cmpl
ds
add
sbb
aaa
adc
cmpsb
lret
cmp
aaa
xor
ret
push
push
mov
adc
mov
or
xchg
pop
cs
sub
je
add
xchg
sub
sub
pop
loop
test
jno
lock
mov
mov
dec
popf
mov
sub
push
sub
xchg
lret
ret
jmp
mov
lods
ds
test
dec
aas
call
sub
lahf
pop
fistl
shrb
pop
out
mov
cmpsb
sub
lea
mov
js
sub
lahf
pushf
shrl
cwtl
fbstp
dec
scas
jmp
loope
inc
sub
cs
pop
call
cmpsl
jno
jns
lods
scas
xor
into
jo
or
cmp
and
sub
push
sub
push
push
lea
and
loopne
mov
movb
es
dec
pop
or
imul
pop
test
or
inc
popa
lea
sub
and
iret
push
sbb
dec
xchg
gs
pop
mov
adc
cmp
mov
shrl
dec
sbb
cmp
fisttps
cld
and
rclb
test
mov
insl
sub
jae
cwtl
pop
lods
loope
arpl
xchg
lock
mov
rolb
fwait
mov
sub
scas
xlat
roll
and
rcll
sub
and
repz
and
push
cmpsl
lret
fsubr
sti
sbb
or
scas
stos
dec
mov
jmp
aad
sti
add
push
add
xchg
push
mov
shr
xor
aas
mov
sub
iret
int3
pop
icebp
push
dec
sbb
sub
outsl
cmpsl
dec
out
sub
push
sub
dec
add
sbb
popa
outsl
inc
or
pop
mov
sub
dec
jecxz
mov
test
pop
sub
inc
push
sub
daa
pusha
xchg
mov
mov
cmp
outsb
jne
jae
les
cli
lea
hlt
mov
mov
mov
mov
leave
insl
sub
push
push
addr16
lods
sub
sub
rorl
push
pop
sub
xchg
push
cmp
mov
roll
sub
lahf
push
dec
sub
pop
popa
or
fstpt
mov
gs
push
pop
fnsave
mov
pop
push
shll
ret
pushl
test
lret
out
mov
push
subl
push
icebp
pop
xor
sub
adc
mov
push
lock
pop
lahf
cmp
gs
hlt
jge
cld
sbb
jmp
sbbl
sub
xor
sub
popf
pop
mov
mov
arpl
push
mov
je
sbb
and
sub
ret
sbb
stc
out
loopne
jle
ret
sub
dec
push
std
insb
mov
mov
sbb
jmp
push
adc
sub
xchg
or
or
dec
adc
and
cmp
popa
test
shrl
sub
std
mov
mov
fdivrl
cmp
movsb
iret
push
sub
mov
dec
or
clc
sub
cmpsl
or
sub
pusha
cld
or
cwtl
sub
adc
push
sub
cmp
mov
fidivl
sub
mov
loope
jecxz
or
in
inc
call
ds
mull
mov
cmp
popa
mov
jle
int3
imul
loop
mov
orl
jmp
data16
xchg
fiaddl
out
fwait
fs
rcll
and
dec
dec
xorl
xchg
cld
dec
fsubrl
jae
jp
mov
int3
dec
stos
xchg
aam
in
inc
sbb
call
inc
sub
mov
leave
fldcw
jg
xor
jecxz
shl
mov
dec
sub
sub
test
flds
xor
icebp
imul
int
and
test
adc
lods
arpl
or
jmp
xchg
je
xchg
iret
pop
rcrl
push
int
push
cmp
mov
or
arpl
mov
mov
xchg
sub
jl
sub
fs
jns,pt
movsl
lock
pop
outsl
mov
add
sbb
or
sub
scas
out
push
push
push
push
sbb
xor
ret
jae
loope
sub
clc
decl
push
int3
popf
stos
outsb
ja
or
sub
loopew
clc
mov
pusha
jnp
xchg
cmc
pop
mov
xor
imul
jge
xchg
mov
sti
or
stos
cmp
add
pop
ret
js
sub
mov
and
lahf
inc
and
xor
rcrl
fstps
lods
out
lret
jae
insb
cld
idivl
in
jbe
add
push
icebp
push
rorb
sub
cli
adc
frstor
bound
ret
cmp
xorl
cli
inc
mov
sub
daa
shl
fsubrp
ficompl
fldcw
in
sub
adc
stos
mov
adc
xlat
ret
sub
imul
into
pop
movsl
mov
fstl
cmp
sub
rol
movsb
xor
cmp
sub
test
pop
insb
sub
ret
lret
jbe
sub
addl
fisubs
cmp
mov
aam
sbb
push
outsb
popa
in
xor
ret
mov
imul
sub
pop
lret
sub
shr
sub
jbe
ljmp
xor
cltd
xchg
bsr
xor
cmc
and
ljmp
inc
hlt
xor
bound
pop
ja
je,pn
mov
sub
fldt
call
fldcw
sub
jbe
and
adc
sub
mov
divl
sub
add
movb
dec
stos
lea
ret
shrl
inc
sub
in
int
cmp
add
adc
adc
fdiv
or
mov
rclb
cmp
pop
sub
xchg
sahf
mov
sub
dec
mov
pushf
sub
push
push
add
dec
mov
mov
mov
call
imul
test
aam
or
iret
adc
add
push
mov
jle
mov
pop
fmull
xor
jl
jg
test
sub
xor
loopne
cld
cmp
pop
adc
push
mov
sbb
push
mov
stos
fsubr
push
cmp
dec
push
sub
add
sub
add
fidivrs
dec
pop
mov
dec
ljmp
in
sub
mov
adc
push
pop
mov
gs
or
outsb
mov
jnp
aad
addb
xorb
push
cs
jmp
clc
xor
insb
ret
ret
mov
and
rcrb
idivl
pop
mov
outsb
push
enter
icebp
test
daa
adc
xlat
sub
mov
cs
clc
push
jmp
jg
std
and
into
or
ja
fdivrs
jbe
mov
imul
inc
jae
or
lcall
xchg
test
lret
rorb
cmp
sti
aaa
add
scas
mov
mov
shrb
mov
in
sub
pop
clc
dec
xchg
push
push
test
lret
sub
idivl
adc
aad
das
lcall
and
or
mov
mov
in
jmp
sti
mov
sub
test
xor
sbb
push
mov
push
xlat
lahf
inc
stos
or
inc
push
sub
cmc
cmp
loopne
pop
insb
or
mov
jno
mov
sub
add
call
sbb
pop
push
test
dec
int
sub
xchg
sbb
shrl
enter
push
mov
sub
pop
pusha
adc
xchg
inc
or
inc
jno
xchg
push
test
sub
dec
jo
cmp
leave
out
out
sub
mov
jmp
lods
ret
or
popa
hlt
jo
das
loope
fldcw
mov
cmp
sub
xor
bound
xor
test
push
jns
push
sub
js
ljmp
sarb
enter
sbb
xchg
mov
int
fcomps
push
pop
or
jno
mov
shrb
sub
subl
xchg
push
add
das
mov
xor
sub
jbe
sbb
sub
jns
fisubs
sub
push
inc
dec
fcompl
aaa
aaa
sub
into
ja
and
lret
sub
mov
push
insl
pop
inc
sbb
mov
fs
adc
xor
cmp
test
lock
test
flds
jl
sbb
imulb
data16
sahf
mov
pop
pop
or
js
negl
enter
sub
lods
push
and
push
mov
or
lcall
or
dec
stos
push
push
xorb
cmp
es
mov
sub
and
fcmovne
sub
into
lea
cmp
push
adc
repz
xor
icebp
cmp
test
sub
enter
mov
dec
fistps
call
adc
std
jge
sub
leave
insb
sub
dec
adc
js
inc
push
sub
or
adc
xor
test
adc
sbb
sub
ret
movsl
inc
sub
or
push
sbbl
sub
lock
mov
and
xchg
fwait
sub
aad
fnstsw
inc
jp
cwtl
jecxz
fwait
sub
push
cmp
sub
adc
gs
sbb
add
cmp
jecxz
mov
popf
add
loopne
and
sub
pop
push
sbbl
mov
mov
imul
sub
add
lock
scas
cld
jecxz
testb
sbb
mov
xchg
in
sti
cmp
push
sub
mov
inc
jnp
sub
xchg
test
sub
loopne
mov
sub
mov
int3
mov
or
pop
cmpsl
xchg
daa
in
jl
push
cmp
lret
sub
mov
mov
popa
sub
stos
add
cmp
out
mov
aad
sub
adc
sti
jmp
das
cmp
ret
push
out
test
sbb
jns
push
out
mov
data16
xchg
cwtl
loope
push
ss
insb
repnz
xor
push
stos
sbb
inc
jnp
icebp
cwtl
sub
mov
mov
mov
loop
jnp
sbbb
push
repnz
cmp
ret
std
outsl
mov
stos
sub
loopne
mov
mov
push
or
sub
pop
decb
fimull
adc
ds
or
test
pop
fcoms
in
sub
fucomi
lods
jno
pop
sub
mulb
xor
or
popaw
mov
fwait
sub
sbb
mov
cmp
test
adc
xchg
aam
sarb
sub
repnz
sub
push
dec
mov
mov
sub
std
inc
imul
add
and
jae
xchg
inc
icebp
or
jmp
push
outsl
jne
add
sub
cmp
js
addr16
cmc
and
ucomiss
add
cmpsl
enter
xchg
cmp
sub
std
mov
sbb
and
mov
adc
or
mov
pop
cmp
leave
inc
int3
sbb
sbbl
sbb
sub
out
push
decb
sbb
mov
and
cmp
das
lcall
dec
adc
je
sub
dec
and
and
and
sahf
pusha
mov
out
pop
cli
jmp
jne
imul
rclb
jo
push
neg
mov
std
fwait
shlb
mov
xchg
xlat
jns
fdivrl
loopne
sub
mov
add
mov
sub
sub
push
jo
icebp
pop
add
push
jne
call
sub
adc
sub
jp
in
sbb
out
mov
pushf
push
sub
push
pop
lds
daa
sub
adc
sub
or
into
xchg
inc
sub
fcmovbe
jecxz
mov
sbbb
sub
lock
rcr
addr16
icebp
sub
mov
mov
stos
jge
jns
push
fildl
xor
xor
cmp
sub
test
stos
jge
jns
push
xor
ret
sbb
fmul
icebp
test
jne
xor
out
add
or
loopne
movsl
sub
lea
notb
mov
out
pop
sub
xchg
mov
jns
mov
or
sbb
or
push
mov
xor
std
mov
adc
push
sbb
pop
and
mov
pop
lcall
or
mov
lds
xchg
mov
es
xor
push
push
fisubrl
mov
ret
jo
fisubrl
gs
sbb
sub
or
aad
icebp
sub
dec
and
sub
lret
push
out
mulb
mov
cmp
insb
mov
ds
out
mov
cmp
ss
and
frstor
fs
daa
rol
push
sub
arpl
sub
lcall
dec
push
movsb
cmpsb
xor
test
adcb
xchg
cmp
mov
jg
sub
int
xor
and
ret
arpl
mov
xor
mov
cwtl
sbb
mov
orl
jg
jns
scas
add
aam
mov
jnp
fbstp
out
dec
xchg
jmp
adc
mov
jg
dec
ret
popa
jge
rorl
xchg
enter
xor
cmp
sub
sub
push
pop
adc
or
stos
jl
pushf
sub
leave
cmpsl
mov
and
sub
inc
inc
push
jmp
aaa
mov
call
pop
inc
xor
push
ficomps
arpl
call
add
imul
hlt
add
outsb
pop
push
rep
mov
jecxz
sub
inc
fsubs
lret
sti
adc
addr16
sbb
je
ret
inc
mov
mov
lock
repnz
dec
or
push
sub
andb
repz
xor
jb
lcall
pop
mov
pop
imul
sub
fsubrs
xor
and
in
sbb
sub
sarb
js
adc
sub
mov
loope
stos
cld
cmp
add
mov
sbb
push
sub
mov
dec
jae
enter
movb
pop
mov
or
push
jge
aaa
lds
pop
stos
rorl
sbb
in
sbb
sub
lcall
sub
stc
push
jnp
in
jnp
mov
sub
cltd
and
outsb
les
pop
leave
mov
add
bound
jmp
adc
push
shrl
mov
imull
sbb
cli
imul
xor
push
push
sub
sahf
rol
in
in
inc
clc
popa
ret
or
push
pop
pop
add
sar
out
fwait
jno
sbb
pop
clc
pop
loopne
cmp
popa
push
push
xor
daa
jno
xor
ja
mov
jnp
out
cmp
mov
ficomps
push
or
mov
cmp
jo
enter
mov
out
cwtl
cwtl
ja
push
popa
cmp
inc
dec
mov
add
pusha
or
clc
jmp
push
icebp
das
sbb
stos
cmp
dec
mov
cli
push
fdivl
mov
sbb
clc
imul
adc
pop
push
jp
add
mov
inc
fadd
cmp
mov
mov
and
movb
clc
jle
in
xchg
pop
cwtl
loope
mov
sahf
pop
inc
cmp
push
pushf
adc
mov
xor
test
sbb
mov
cmp
addr16
sbb
adc
xor
push
and
or
int
push
loopne
into
addr16
cmp
pop
jl
push
scas
repnz
shlb
mov
or
jbe
or
xor
and
mov
stos
pop
sar
stos
out
icebp
je
add
mov
inc
pop
aas
jmp
dec
shl
xor
rcrl
rcrl
and
lods
movsb
test
mov
repnz
popf
add
sub
mull
jmp
jmp
dec
cmp
push
cmp
rolb
cmc
push
insl
xor
adc
shl
sub
loope
pushl
mov
popl
sbb
imul
dec
xchg
push
ljmp
pop
cli
hlt
ds
pop
jno
movsb
das
leave
add
inc
hlt
cmp
jmp
sub
sub
in
jo
imul
stc
jecxz
jo
push
scas
lds
push
push
rcrl
loop
mov
sub
imul
jl
cmp
xor
xor
cmc
rorl
adc
or
fnsave
jg
dec
mov
scas
dec
mov
pop
arpl
cmp
dec
jge
mov
cmp
xor
in
sub
fistpl
popfw
fmuls
dec
out
stc
ss
push
test
xor
xlat
mov
mov
aas
adc
push
imul
adcb
clc
je
dec
sbb
enter
pop
shrb
test
faddp
xchg
fwait
cmp
rep
mov
mov
add
and
jmp
sbb
loope
push
out
cwtl
or
xchg
mov
enter
les
mov
push
js
aaa
jne
add
and
sti
adc
les
aam
or
loopne
in
imulb
repnz
fidivl
and
les
outsb
cli
mov
push
repnz
outsl
pop
push
scas
outsl
out
mov
or
push
jmp
jnp
and
subl
lds
mov
and
and
adc
hlt
cmpsl
push
mov
std
dec
ljmp
push
jne
and
and
scas
cmp
mov
gs
pop
mov
pop
mov
test
push
in
mov
pop
test
mov
gs
fcomp
mov
arpl
dec
mov
in
pusha
inc
pop
lock
fwait
lods
imul
rcrb
xchg
int
push
dec
mov
mov
out
addr16
or
aaa
xchg
and
sub
pop
ds
mov
mov
lods
sahf
adc
mov
pop
mov
mov
and
roll
or
ret
mov
push
and
sub
cld
xor
jge
jl
aam
sbbb
cld
shlb
mov
ror
daa
popa
test
push
gs
inc
jo
repnz
add
aaa
jns
stos
sub
cmp
xchg
popa
shl
mov
jmp
pmaxub
jne
add
imul
daa
sbb
inc
ret
cltd
lds
out
cmpsl
rdmsr
pop
pushf
imul
dec
loope
fiaddl
shrb
jp
sub
dec
ja
adc
push
mov
pusha
push
in
pop
pop
cmp
mov
push
sbb
push
push
gs
fcmovbe
cmp
pop
sbb
sahf
push
popf
sub
inc
cmp
mov
add
imul
inc
mov
inc
addr16
repz
dec
or
mov
push
hlt
fcmovu
and
xchg
dec
stc
test
ja
aaa
shl
adc
mov
and
call
test
lret
dec
rclb
addr16
pop
adc
dec
cltd
data16
xchg
ret
jmp
pop
inc
pop
push
shlb
mov
cmp
loope
mov
aaa
fcomps
les
xor
addr16
jne
xor
mov
adc
stos
mov
shrl
add
in
imul
popa
shlb
jg
mov
pop
js
push
adc
cmp
jle
push
data16
sbb
cmp
les
imul
jecxz
adc
arpl
adc
add
out
out
adc
movsb
xchg
sbbl
cmp
out
out
add
xchg
movsl
sbb
fbstp
lea
ja
add
xor
out
shrb
pop
mov
dec
cli
sub
xchg
mov
ret
test
imul
push
pop
dec
cmp
pop
adc
cmpsb
mov
rcrb
xor
jno
les
sub
stos
xchg
jb
imul
daa
mov
enter
pop
bound
cmp
popa
sti
lods
dec
push
icebp
jbe
jno
inc
mov
test
or
cmp
test
mov
fsubp
test
iret
cmpsb
movl
popa
dec
dec
xor
push
sbb
add
ret
popa
cs
push
pop
decb
shrb
popa
ljmp
enter
xchg
in
les
sub
jns
js
mov
mov
jmp
and
call
jmp
push
sbb
jmp
rcl
dec
pop
arpl
pop
les
sti
inc
and
rorb
mov
fucomip
test
mov
ret
ret
rclb
sub
lret
mov
sub
rcll
clc
sub
es
subl
xchg
loop
pop
xchg
ds
sub
mov
cwtl
movsb
xchg
mov
test
rorl
jne
ds
pop
pop
out
shlb
lcall
pop
out
xchg
test
dec
pop
pop
jge
dec
mov
push
aaa
shrb
cmp
lods
sub
cmp
pop
cmpsb
push
xor
lret
push
pop
jmp
xchg
sbb
fidivrl
jmp
gs
adc
imul
sub
pop
adc
cmp
outsb
dec
push
ds
cmpsb
addb
pop
rorl
xor
mov
hlt
xchg
mov
jmp
ss
test
aaa
push
es
out
test
pop
jmp
out
cmp
stos
nop
cmp
sbb
mov
iret
sub
fldenv
inc
jae
push
jge
addr16
outsl
repz
xchg
cmpsb
sub
add
xor
xchg
repnz
pop
jb
jg
imul
shrb
sbb
sub
rcrb
xchg
mov
xor
mov
and
cld
insl
mov
cmp
adc
stos
cmp
stos
mov
scas
inc
stos
push
int3
sub
movsb
sub
sub
es
stc
add
dec
bound
push
sti
mov
dec
xor
out
addr16
cmp
push
inc
sbb
sahf
inc
and
sarb
pop
ja
jo
rolb
or
sbb
icebp
dec
mov
cmp
ja
mov
adc
adc
inc
pusha
test
jbe
loop
ret
cltd
cwtl
test
cmp
fildll
scas
inc
push
jo
jb
aaa
test
pop
adc
sbb
sbb
daa
push
add
add
or
rclb
mov
in
dec
sub
push
cli
dec
iret
add
jns
stos
das
pop
cmp
gs
stos
lds
out
fimull
in
push
sbb
popa
lods
mov
shll
stos
xchg
push
test
daa
lea
insb
mov
mov
dec
jmp
mov
pop
dec
mov
aaa
jp
inc
popa
jne
dec
push
inc
stos
dec
loop
imul
fsubrs
je
push
movsl
test
pop
dec
jne
icebp
dec
imul
mov
das
fwait
lods
test
mov
cwtl
xor
adc
adc
push
dec
mov
fstl
enter
stos
ja
adc
mov
cmp
les
int
sub
movsl
dec
push
fdivr
mov
test
sub
pop
pusha
jnp
jne
add
test
adc
lock
test
imul
std
and
xchg
orb
cwtl
sar
xchg
lahf
stos
sub
scas
imul
inc
push
sbb
sub
fstpt
test
data16
sbb
push
xchg
push
xor
mov
repz
cld
jno
cltd
ljmp
out
ds
imul
inc
inc
addr16
fsubrs
add
dec
stc
insb
add
cmp
mov
inc
cmp
in
or
aaa
pop
xor
mov
fs
mov
xor
jmp
push
jp
dec
dec
fnsave
pushf
orb
add
fwait
insl
mov
mov
xorb
aad
sbb
dec
jmp
sub
das
push
out
sbbb
ja
adc
cmp
sbb
pop
and
fdivs
loopne
mov
int3
js
negl
jmp
inc
jns
or
jb
xor
cli
mov
scas
xchg
stos
sub
stos
sub
shlb
test
es
sub
rcrb
pop
xor
adc
xchg
push
loopne
repnz
xchg
sub
sub
xlat
stos
mov
pop
shll
xor
nop
jae
xchg
and
jnp
mov
jmp
in
scas
xor
xchg
test
jl
dec
pop
inc
mov
icebp
sub
jns
shll
rcl
mov
mov
stos
cmp
in
test
dec
adc
sub
shll
inc
adc
shl
inc
xor
daa
shl
pop
jns
push
dec
ljmp
jb
subl
adc
ss
in
push
nop
addr16
fisubrl
dec
dec
or
les
xor
mov
xorb
outsl
les
push
das
mov
mov
jns
sahf
pop
and
xorb
addr16
stos
mov
xchg
sub
push
or
xor
aaa
dec
mov
cmpsb
adc
sbb
gs
dec
jg,pt
mov
roll
cs
imul
scas
clc
cmpb
loopne
or
xor
cwtl
sub
or
mov
sti
add
push
iret
pop
xchg
imul
cmp
pop
inc
mov
out
mov
lds
shl
xchg
pop
mov
pop
out
sub
mov
addr16
jg
pusha
test
js
xor
out
loope
int
push
enter
mov
fcmove
addr16
add
test
test
in
cmp
mov
lock
cs
les
sub
mov
add
xlat
jo
push
or
mov
mov
lcall
les
call
cltd
les
shlb
ds
jne
xchg
int
mov
lret
and
or
bound
jbe
shrl
adc
les
lcall
scas
lahf
jne
or
loop
fisttpl
popf
les
inc
mov
ja
mov
pop
push
imul
pop
push
test
cmp
pop
cmpsl
mov
stos
rorb
pop
push
jle
jmp
sti
test
dec
stc
jo
clc
sbb
lock
push
movsl
lds
cli
shlb
lret
ret
xor
add
lods
cmp
fcmovnb
imul
aad
xor
mov
nop
lret
inc
ret
push
cmp
andb
xor
sbb
shlb
pop
test
fs
daa
mov
lahf
add
scas
push
les
sub
incb
push
mov
sti
fdivl
test
sub
dec
mov
pop
call
stos
adc
xor
dec
sahf
add
sbb
ret
gs
push
imul
test
sub
push
mov
xor
mov
daa
xor
cltd
mov
js
add
lock
mov
clc
dec
cs
shll
mov
cmp
push
push
lret
mov
enter
pusha
or
andl
push
xchg
jne
lret
jp
pop
orb
jbe
sub
inc
mov
push
call
pop
shr
std
out
fadds
test
sub
xor
addr16
imul
push
sub
jae
sbb
xchg
ret
inc
popf
adc
cmp
orl
jecxz
push
sarl
movsl
mov
xchg
scas
xchg
sub
fwait
stos
xchg
int3
pushl
in
jecxz
mov
sub
out
jmp
dec
cwtl
scas
lods
lods
add
lcall
xchg
stos
inc
mov
ret
fistl
inc
jmp
xor
cwtl
ljmp
lds
outsl
add
inc
pop
sbb
xchg
inc
mov
int
bound
pushf
adc
and
push
addr16
xor
fwait
insl
mov
ret
fld
stos
and
cmp
xor
pop
adc
dec
lods
ljmp
sub
iret
popa
adcb
test
lahf
jl
sarl
adc
adc
adc
cmpsb
mov
mov
pushf
push
mov
push
mov
and
cmp
addl
pusha
lea
fisubrs
pop
sbb
jns
cmp
repz
imul
dec
xlat
push
inc
pop
cltd
daa
repnz
push
pushf
imul
adc
addr16
out
lea
cli
rcrb
loope
mov
sti
add
hlt
mov
leave
stos
push
push
adc
outsb
push
mov
adc
sub
cmp
jno
push
or
scas
push
arpl
ret
and
sub
cli
adc
mov
fwait
mov
adc
xor
sub
inc
ret
add
mov
dec
icebp
pop
ljmp
and
and
outsl
cli
and
test
inc
fdivl
xlat
int3
mov
push
xchg
rol
push
outsb
sbb
sub
icebp
or
xor
or
out
rcr
xchg
mov
popa
lock
in
cmpl
add
dec
push
xchg
pop
mov
lahf
imul
or
cmp
sub
or
xor
sahf
nop
ret
push
clc
add
or
dec
test
push
jbe
loopne
je
aad
jmp
pop
jp
clc
pop
hlt
jg
sub
or
rcll
loop
jge
or
and
negl
decl
push
ljmp
dec
xchg
dec
rolb
fmull
mov
sub
dec
rcll
neg
xor
ret
adc
imul
repz
sub
jno
sbb
daa
jg
and
std
les
and
in
and
repnz
cmp
cs
sti
mov
dec
xchg
into
jo
dec
jmp
aam
push
test
sub
cli
test
outsb
cmp
sub
leave
jo
and
ss
mov
sub
test
loopne
rcr
addr16
pop
imul
push
je
cltd
mov
ss
pop
jnp
bound
jmp
popa
ss
frstor
mov
loope
inc
aaa
mov
inc
and
inc
xor
inc
push
scas
lock
xlat
lods
sub
das
fists
and
gs
fstps
mov
sar
cwtl
shll
pop
push
int
popf
sub
js
repz
mov
imul
add
ret
push
xor
adc
out
pop
arpl
xchg
mov
mov
scas
repnz
or
adc
xchg
cld
adc
int
mov
sub
testb
mov
or
inc
divl
xor
mov
rclb
fnstcw
sub
popa
mov
adc
arpl
rorl
jne
push
add
repz
sub
fwait
daa
and
lods
test
sub
adc
subb
or
sar
mov
sub
xchg
mov
lcall
and
push
in
stc
sub
in
sub
call
or
xlat
es
adc
in
mov
jmp
in
add
fistl
push
aad
data16
cmp
js
sbb
cld
xchg
sub
repnz
mov
dec
sbb
add
jmp
jae
adc
push
sub
pop
or
lret
insb
xchg
xlat
out
sub
mov
xchg
push
sub
cmc
mov
pushf
mov
daa
cld
shrl
mov
int3
xor
out
push
in
clc
fs
icebp
push
xchg
sahf
dec
cwtl
lahf
jno
ds
fst
outsl
mov
stos
ljmp
xor
dec
out
cld
sbbl
idivl
mov
divb
cmp
sub
mov
sbb
sbb
stos
repnz
rcrl
outsb
sub
js
fsubr
sub
les
movsb
flds
add
cs
lods
imulb
aam
xor
mov
xor
xchg
mov
or
pop
push
sub
mull
fcomi
jns
ja
sub
insl
push
fwait
rorl
mov
sub
scas
dec
ljmp
xchg
xor
sbb
sub
aas
fs
xlat
push
sub
xchg
sub
movsl
inc
int
or
sub
add
cmp
in
inc
pop
fldcw
lcall
imul
mov
push
repz
sub
cwtl
sub
pop
mov
std
repnz
es
sub
and
addl
mov
pop
mov
paddq
pop
out
mov
das
inc
xchg
inc
sub
outsl
sub
dec
adc
add
or
push
adc
test
jecxz
or
xor
enter
rcrb
cmp
lock
movsb
xchg
dec
jo
leave
cwtl
and
mov
test
adc
sub
cmp
addb
dec
in
pop
jmp
sub
sub
loopne
jle
and
in
pop
xor
sub
sbb
pop
mov
adc
ljmp
rolb
cmp
mov
xchg
movl
adc
je
inc
lcall
jns
stos
movb
sub
sbb
mov
dec
or
std
rol
pop
movsl
rcrl
and
cmc
cmp
mov
jae
sub
in
in
neg
ljmp
shl
dec
lods
sub
fldt
std
xchg
sub
lret
stc
xor
cmp
pop
imul
cmpl
sub
xor
fldt
cmp
jne
enter
pusha
or
push
subb
adc
jecxz
dec
jnp
pop
leave
xor
mov
leave
add
addr16
imul
aaa
adc
mov
testb
lret
outsb
stos
cwtl
test
es
clc
or
mov
fmuls
xor
cmp
rcrl
in
insl
sbb
dec
insb
or
jg
mov
sub
outsl
enter
mov
pop
shll
mov
xchg
sub
stc
testl
orb
inc
push
jge
aas
pop
loop
rol
sbb
scas
and
call
ds
push
in
arpl
inc
pop
aaa
pop
fsubrs
shrb
pushf
das
in
mov
and
fcompl
mov
cld
je
cmpsb
mov
mov
mov
or
xchg
inc
cmp
push
notb
xor
out
outsl
outsb
jne
repz
cmp
fisubrs
cmp
mov
xchg
xlat
je
sbb
enter
jmp
mov
add
mov
loope
sub
pop
jb
and
sub
mov
adc
repnz
shr
lds
ds
mov
sti
imul
and
or
jno
outsb
test
inc
out
sbb
and
inc
pop
pop
sbb
sub
dec
push
cmp
call
push
jb
sub
pop
and
popa
arpl
mov
int3
iret
test
pushf
fcmovb
lock
std
sti
out
sub
sub
test
lock
sub
sahf
stos
cmp
mov
mov
cwtl
aam
mov
mov
stos
xchg
adc
shrl
repz
addr16
stos
test
sbb
or
sbb
inc
mov
fcomi
nop
sub
push
imul
sub
inc
xorl
shl
movsb
xchg
xchg
xor
mov
mov
sbb
sbb
pop
and
add
out
or
les
mov
jae
sub
aam
push
and
sti
jl
std
and
jbe
sub
enter
mov
sub
mov
xchg
insl
sub
sbb
xor
lret
xchg
popf
and
mov
into
add
sub
imul
clc
adc
loop
pop
in
jl
sub
jns
lods
ss
ds
push
call
sub
test
add
sub
or
sub
or
sub
pop
sbb
xchg
jle
inc
das
dec
jns
iret
sbb
outsl
cmp
lods
ret
sub
cwtl
fwait
sub
push
enter
dec
lcall
pushf
stos
pop
out
sub
mov
adc
cmpsb
bound
sbb
mov
mov
jp
add
dec
or
adcl
sub
daa
mov
xor
mov
scas
iret
pop
push
nop
mov
mov
neg
dec
inc
les
add
mov
mov
sub
mov
or
mov
sub
enter
pop
xor
sbb
add
movsb
lcallw
adc
and
in
pop
ds
or
xchg
pop
jle
lahf
fisubrl
push
xchg
sub
cs
mov
mov
and
movsl
subb
repnz
stc
cmp
pop
je
outsb
sub
mov
ficoml
mov
test
mov
sub
lret
add
fcomps
sub
jns
inc
sub
jg,pt
test
outsb
div
test
inc
mov
jmp
mov
mov
and
ja
xchg
dec
loope
aaa
fildll
adc
les
add
mov
cwtl
pop
int
pusha
popf
sar
or
gs
xlat
out
xor
cltd
lret
jb
mov
dec
cli
fisttpl
ss
mov
shlb
and
xor
in
cld
clc
xchg
arpl
mov
movsb
add
sahf
or
aaa
dec
bound
jl
ds
jmp
sub
sub
xchg
push
cmc
sub
mov
push
sub
inc
cmp
sbb
or
sbb
cli
mov
push
aad
rcrb
cwtl
clc
dec
cli
fwait
add
stos
sub
fsubr
int3
xchg
xor
jp
xchg
out
sub
imul
pushf
test
sub
jb
add
or
scas
and
mov
sub
pop
inc
xchg
dec
dec
insl
and
mov
jle
mov
into
xor
imul
loope
adc
sub
dec
cmpsb
rorb
jo
wrmsr
bound
pop
mov
sub
sar
adc
stos
fdivrl
sub
fdivs
inc
cmp
sbb
jae
sub
and
sbb
out
data16
stos
incb
pushf
inc
sbb
sub
insl
clc
clc
xchg
sub
xchg
mov
sub
push
mov
sub
fisubl
int3
or
or
scas
sub
imull
xchg
lods
inc
loop
mov
test
mov
pop
dec
dec
adc
lea
mov
inc
stos
xor
sub
xchg
mov
mov
jp
sbb
js
xchg
cwtl
xchg
fwait
test
or
sub
fisubl
sub
sub
cmp
jnp
std
iret
mov
call
jns
cwtl
xor
sub
test
cmpsl
lods
gs
insl
mov
sub
pop
divl
push
mov
jno
push
inc
xor
xchg
sub
lods
dec
out
xor
inc
jmp
negl
out
fldcw
sub
pop
rcrb
leave
push
popa
sbb
sub
jae
fcom
sub
fisubs
popf
rol
mov
sbb
push
xchg
mov
sub
ljmp
push
sbb
out
xchg
ret
cmp
xlat
cmp
addr16
pop
movsb
ds
mov
push
sub
rorl
push
add
movsl
jae
xchg
stos
inc
orl
mov
jg
arpl
and
repnz
xchg
rcrb
push
xor
movsl
fbstp
inc
test
jo
stos
in
pop
cmc
idivb
fbld
pop
mov
lcall
ds
add
jmp
test
movsb
sub
pop
popf
test
loop
es
das
sbb
sub
and
pop
mov
pop
in
mov
orl
cmp
outsb
lds
pop
sbb
insb
mov
sbb
pop
jg
shrl
scas
jmp
dec
cmp
ljmp
dec
test
inc
outsl
data16
sub
xlat
incb
dec
cmpsb
inc
ffree
push
es
pop
test
push
cmp
pop
sub
mov
push
cmp
fwait
andb
inc
test
jnp
or
pop
fildll
nop
sub
jb
sbb
jecxz
xorl
fscale
ljmp
stc
nop
popf
mov
push
cltd
pusha
xor
sub
mov
or
mov
sub
sub
les
xchg
inc
mov
inc
sub
je
pop
adc
ja
xor
shrl
push
loope
adc
or
push
inc
push
sub
popa
aaa
mov
adc
push
mov
pop
lret
sub
imul
mov
mov
jno
aam
sub
ficomps
iret
push
into
test
sub
mov
rcll
or
mov
push
imul
pop
pop
add
xor
jae
mov
test
cmp
sub
sub
js
pushf
iret
mov
sbb
fldenv
out
out
jg
sub
push
jmp
test
sub
xor
mov
ds
call
sub
xchg
cmp
add
mov
dec
mov
cli
inc
xor
adc
mov
sub
cld
cwtl
cmpb
xlat
sub
test
sbbl
leave
ds
sbbb
xlat
out
loope
shlb
aad
out
mov
adc
adc
cmp
sti
cmp
sub
insb
and
push
dec
stos
div
andl
movsb
push
dec
daa
dec
hlt
rolb
into
mov
sub
jae
rorl
inc
cs
test
jne
sub
dec
nop
cmp
mov
fbstp
sbb
call
xchg
cmpsb
fwait
sub
ljmp
in
jecxz,pt
loopne
dec
lret
inc
sub
push
pop
jmp
stos
sbb
add
inc
sub
jl
dec
mov
push
insb
sub
sub
jne
sbb
testl
sub
sbb
jae
lahf
fwait
out
xchg
adc
sub
pop
add
sub
popf
mov
sub
cmp
movsl
pop
mov
filds
aad
xor
cmp
jbe
xor
xor
and
je
mov
dec
js
shll
movsl
or
xor
add
hlt
outsl
pushf
movb
dec
into
xchg
mov
mov
enter
push
add
sbb
stos
xchg
dec
or
fildl
pop
ds
mov
in
mov
and
mov
xchg
call
cmp
inc
shrb
fadd
popa
push
xor
out
dec
cwtl
xchg
sbb
fimuls
fcmovu
pop
sub
mov
add
arpl
xchg
jle
sarl
ja
std
sbb
xor
in
or
inc
ret
mov
adc
or
into
imul
leave
sub
dec
out
cmp
dec
mov
addr16
mov
sahf
mov
sub
dec
or
aam
mov
cmp
and
fmul
sbb
xchg
mov
cmp
dec
cmpsb
inc
push
mov
mov
jae
int
push
cmp
dec
or
dec
lea
int
push
ds
adc
mov
shl
repnz
and
jge
clc
in
lret
pop
lods
shld
clc
loope
sub
mov
sub
clc
fistpl
add
popa
nop
lret
aas
jae
dec
std
xchg
pop
aad
out
insb
js
movsl
in
cmp
popa
cwtl
and
pushf
jns
jp
fildll
mov
dec
jg
cmp
stos
call
aas
sub
add
mov
jae
dec
imul
ret
adc
jl
xor
movsb
fsubp
mov
pop
cwtl
icebp
sub
dec
xchg
jge
cmp
xor
jmp
or
xor
filds
outsl
bnd
in
enter
mov
sub
jmp
jae
dec
xor
jb
sub
jg
sub
bound
jno
xor
imul
xlat
xor
rcrl
push
andb
icebp
sub
sub
cmp
into
dec
or
scas
fmuls
fs
loope
repz
mov
sub
xor
adc
cmp
iret
inc
adc
into
cmp
fwait
cmp
push
xor
in
mov
mov
sahf
leave
mov
inc
mov
or
movsb
pop
cmp
xchg
outsb
shll
dec
js
enter
push
push
clc
mov
add
lret
outsb
jecxz
sarl
sub
push
mov
rcll
out
or
sub
sbb
frstor
int3
bound
adc
push
mov
in
icebp
xor
xor
and
scas
xor
ds
sbb
rclb
lret
sub
or
flds
pushf
or
jecxz
lds
mov
ret
popf
mov
xor
lock
push
jb
pop
clc
cmp
pop
mov
jecxz
out
cmpsl
stos
sub
out
scas
sarl
xorb
push
ds
jo
inc
jmp
loop
fdivrs
cld
push
mov
sub
sub
out
mov
cmpsl
push
dec
flds
and
mov
aaa
imul
outsl
nop
mov
cwtl
mov
cli
dec
push
ds
dec
and
jne
or
cltd
jp
clc
cwtl
push
or
movsb
les
lods
les
mov
xchg
sub
mov
ret
add
sub
mov
mov
stc
fs
mov
and
shrl
sarb
fucomi
push
sub
xchg
mov
in
jno
int3
js
adc
popl
iret
pop
test
mov
stos
jge
imul
jmp
jg
test
mov
or
dec
push
dec
daa
cmpsb
ds
out
sub
and
jns
sub
js
rorl
xchg
test
sub
adc
fmuls
sub
and
int3
mov
mov
aas
inc
imul
xchg
pushf
ja
hlt
out
dec
sub
repz
addr16
fsubs
jle
mov
fidivl
cmp
sub
rcl
in
lds
cmc
repnz
mov
mov
xchg
adc
mov
mov
adc
or
jge
stos
adc
shlb
cmp
cmp
enter
mov
dec
cmp
inc
mov
ja
lcall
xor
pcmpeqb
push
cmp
mov
xchg
sub
cmp
data16
inc
and
and
or
inc
pop
sub
add
jmp
imul
fbld
add
sub
mov
xor
lret
jns
inc
js
xchg
mov
dec
xor
imul
adc
cmpsl
jo
or
sub
push
pop
mov
xor
and
pop
sbb
stc
mov
pop
xor
add
jns
xor
cmpsl
fwait
mov
sub
push
out
or
sub
xchg
dec
jge
xor
adc
ds
adc
insb
in
int3
aad
inc
mov
cmp
xor
dec
jae
mov
xchg
cmp
shr
aaa
std
xor
sub
sti
or
cmp
xor
bound
sub
push
inc
cmc
mov
int
andl
mov
adc
lahf
aas
subb
jmp
std
repz
cmp
adc
inc
mov
test
inc
lahf
ja
les
scas
sbb
sub
adc
mov
inc
sub
iret
jl
popa
pop
mov
cs
subl
jge
sbb
sbb
mov
or
outsl
daa
dec
lret
add
push
sub
dec
shr
std
mov
test
bound
xor
and
sub
sub
je
ss
sub
sub
clc
cltd
mov
imul
jg
adc
cmp
rcr
insl
cld
popf
js
sub
pop
xchg
scas
outsb
sbb
shr
adc
and
jle
mov
out
or
fldt
inc
pop
mov
pop
sbb
stos
lock
jnp
mov
sub
jb
xor
jmp
xchg
pop
adc
sub
stos
xchg
sub
jns
fildll
loop
mov
cmpsl
sub
xchg
ss
xor
cmp
sub
push
add
xchg
inc
movaps
dec
gs
jge
sub
sbb
or
cmp
insl
ficomps
fistl
sti
roll
pop
sub
arpl
sub
flds
lcall
sbb
pop
jb
adc
lret
sub
xor
mov
clc
clc
mov
call
xor
sub
mov
mov
mov
fildll
lcall
or
scas
lret
movsb
pop
daa
sbb
leave
out
aam
pop
inc
je
adc
repz
cmpsl
dec
add
movsb
test
fidivl
pop
sub
mov
mov
or
psubsw
repz
xchg
out
out
imul
sahf
jg
repz
lcall
jmp
shlb
xorb
filds
adc
adcl
in
sub
repnz
push
mov
sub
adc
sub
mov
les
out
dec
push
sbb
loopne
ret
ret
outsb
popa
sub
pusha
mov
aas
push
inc
imul
cmp
sub
stc
xchg
xchg
sahf
sbb
sub
repnz
and
insl
loopne
dec
jb
jbe
sbb
sub
pop
jg
jae
sub
pusha
inc
mov
insb
ds
fst
imulw
lcall
xchg
xchg
lret
dec
mov
inc
daa
sub
call
xchg
or
push
pop
adc
test
movsl
nop
jg
out
cmp
mov
pop
sub
aam
outsl
lcall
dec
cmp
clc
cmp
sub
mov
dec
pop
jmp
adc
jge
pop
andw
test
pop
outsl
inc
pop
push
dec
lahf
sbb
mov
adc
std
xchg
add
xlat
repz
mov
sub
loopne
rorl
adc
out
sub
cmp
ds
inc
aas
push
mov
push
inc
imul
sub
cmp
mov
mov
repz
rcll
mov
out
and
mov
les
fildll
or
jl
xlat
jle
sub
jae
jecxz
xchg
sub
fs
or
dec
mov
les
loop
daa
test
test
ficompl
cmp
cli
push
jmp
and
bound
out
pop
andb
sub
loope
or
pop
dec
lock
out
sub
repz
scas
add
xor
cs
push
orl
and
push
in
sub
sub
call
fstps
push
mov
push
xchg
xchg
xchg
sub
in
frstor
sub
and
sub
or
in
daa
sub
fidivl
or
or
insl
addr16
std
mov
in
sub
out
sbb
add
mov
fnstenv
xchg
scas
cmp
daa
aaa
adc
fldt
in
mov
ficoms
add
pusha
in
sarl
mov
sbb
xchg
dec
and
scas
cld
das
sub
shrl
inc
sub
cmp
lea
adc
pusha
mov
xchg
repz
int3
cli
and
test
push
fstpt
and
daa
xchg
sbb
ret
cmpsl
and
cld
cmp
mov
mov
cwtl
sub
dec
push
ret
rcrl
test
cmpsb
jl
xor
mov
dec
in
js
fnstcw
push
adc
or
push
sub
inc
in
mov
cmp
inc
cmp
dec
icebp
adc
xor
sub
xor
jmp
jp
call
stos
in
hlt
imul
cmc
test
sub
lahf
adc
sbb
and
dec
inc
cmp
loop
sub
sub
dec
cltd
push
sub
adc
insb
out
push
inc
pop
or
sub
xorb
mov
adc
sub
xchg
xor
cmp
dec
mov
cmp
ja
sti
push
or
or
xchg
stos
shlb
xchg
lahf
add
inc
repz
sub
insb
xchg
jb
pop
pop
sbb
sub
inc
mov
or
push
sub
ds
jecxz
mov
sub
push
mov
jle
jl
jb
sub
mov
mov
pushf
xor
jmp
das
sub
pop
cmp
ds
mov
rorb
shrb
sub
repnz
dec
mov
xchg
xor
fisubs
rclb
int
sub
inc
xchg
mov
data16
or
loope
xchg
sub
or
jp
cwtl
into
test
push
mov
pusha
xor
outsl
mov
aas
hlt
scas
movsb
inc
enter
xor
xchg
mov
dec
xchg
jno
mov
jge
sahf
adc
xor
mov
test
addb
xor
add
adc
add
or
cmpsl
xchg
xor
and
jge
int
mov
ret
mov
jno
dec
or
mov
mov
sbbl
addr16
out
add
pop
mov
sub
pushf
pop
mov
mov
mov
lds
fdivrs
fs
add
mov
or
jp
push
out
aaa
test
lret
ss
and
jae
insb
adc
shr
mov
inc
cmp
stc
inc
in
inc
data16
xlat
cwtl
cltd
scas
das
jl
cmp
repz
in
lret
shrb
shll
fdivrl
aam
jns
aam
mov
and
mov
jns
in
rcll
pop
mov
imul
orb
aam
or
mov
popfw
imul
sub
scas
xchg
aad
xlat
ret
mov
mov
addr16
clc
cli
push
pushf
outsb
das
jmp
push
incb
das
add
scas
cli
das
pop
cmp
and
push
pushf
fildl
test
mov
push
mov
fwait
aad
cmp
sub
movzbl
lcall
out
dec
test
mov
pop
dec
sub
xchg
test
sub
xchg
test
fildll
dec
sub
inc
pushf
mov
bound
stos
xorl
dec
shlb
vphaddbq
xor
or
sub
cmpsl
push
dec
ljmp
sub
jne
les
xor
jb
sub
push
cmpsl
adc
sub
pop
cld
adc
sub
out
cli
mov
fwait
shrl
cmp
ss
dec
mov
std
int3
dec
test
aaa
pushf
out
pop
fwait
xchg
insl
push
mov
fimull
lret
mov
sub
jb
rcr
xor
out
je
in
push
mov
loopne
loope
ss
sub
lret
add
imul
insb
or
mov
cmp
mov
dec
sub
int
xchg
sub
jbe
mov
dec
cmp
dec
jmp
movhps
clc
repz
fnstsw
and
flds
test
jne
leave
mov
inc
ret
clc
std
into
sub
push
mov
inc
sub
add
andl
ljmp
sub
clc
ret
or
aam
sbb
rorb
pop
mov
mov
sub
pushf
dec
mov
out
push
std
add
sub
aas
or
orb
ficoms
pop
test
inc
push
and
mov
inc
lods
lcall
ret
jno
xor
lret
xor
cli
je
add
rcrb
icebp
push
scas
jae
jo
loop
mov
out
les
add
pop
call
pop
lret
inc
push
mov
lahf
arpl
cli
popf
clc
outsb
fadds
mov
sub
ficoms
lret
std
xchg
test
lret
cli
or
jae
scas
cmp
xor
mov
dec
scas
xor
inc
repnz
xor
ds
std
xor
jmp
cwtl
stos
idivb
lahf
cli
pop
aaa
sub
push
pop
xor
out
dec
stc
das
add
outsb
mov
mov
pop
push
scas
les
test
aad
inc
imul
out
sub
inc
xchg
mov
outsl
sti
sub
test
push
movsl
jg
xchg
push
pop
mov
pop
cli
adc
mov
mov
or
outsl
push
lcall
pop
xchg
mov
sti
rolb
ret
jo
push
xor
call
dec
add
push
scas
pushf
mov
popa
sub
repz
dec
push
imulb
push
push
sarb
popa
or
stos
push
adc
push
or
sub
mov
mov
test
dec
jb
sub
cltd
pop
pop
sub
adc
jmp
lea
mov
es
sub
flds
sub
loopne
sub
sarb
dec
xor
inc
cmp
or
sub
imul
and
xlat
loop
sbb
jl
out
loope
dec
lods
mov
cmp
xlat
cwtl
push
sub
jge
subb
and
sub
out
ss
pop
push
shl
or
mov
xchg
ret
sub
mov
test
sub
mov
cmp
push
mov
lock
push
cmp
sbb
jb
int3
jmp
or
shll
dec
jnp
mov
imull
jae
push
xchg
imul
movsb
ds
je
mov
sub
divb
sbb
xor
sub
sub
xor
out
xlat
xor
inc
jb
sbb
sub
xchg
push
jne
sarb
std
sub
fists
pop
xchg
out
dec
jp
adc
stc
sub
cmpsl
jge
sub
push
daa
imul
lret
push
cmp
cmc
xlat
or
push
test
sub
xor
push
and
mov
adc
bound
in
outsb
dec
aad
arpl
jle
xor
cld
jg
jmp
sub
dec
cmp
xor
stos
cmpsb
jns
daa
das
dec
les
out
xor
sarw
inc
cmc
jge
add
sub
insl
lahf
es
and
cltd
inc
or
loope
mov
mov
cmp
jns
cli
or
push
sub
in
and
push
jnp
sub
sub
jae
and
adc
jl
jecxz
pop
sub
es
adc
pop
in
fildl
pop
adc
popa
push
jge
outsb
push
and
xchg
mov
jae
ss
scas
adc
nop
fists
shl
push
dec
xchg
stos
leave
cmpsb
xlat
enter
mov
add
xchg
sub
or
fs
cld
jecxz
sti
call
sub
adc
fisttpl
and
push
nop
sbb
xor
lock
mov
scas
adc
sub
sbb
mov
sub
push
jns
mov
mov
fsub
dec
add
sub
in
xchg
jae
ljmp
add
popl
nop
cmp
mov
xor
dec
dec
mov
mov
mov
cs
movsl
fcompl
scas
lock
flds
lds
mov
mov
notb
mov
lea
sub
xchg
movsl
push
je
dec
cmpsb
popf
mov
mov
aas
sub
loop
dec
and
shrl
pop
adc
in
mull
stos
sub
xor
aaa
orl
cmp
jle
adc
dec
jnp
subl
push
xlat
ja
leave
cmc
add
imul
sub
jge
scas
lea
sbb
sub
lods
inc
push
mov
pop
cwtl
xchg
add
jmp
fcmovnbe
incb
ljmp
dec
or
and
stos
in
sub
fldlg2
dec
inc
imul
dec
pop
cmp
push
stos
xchg
inc
mov
sub
sbb
jle
lods
pop
sub
cltd
sahf
fs
popa
adc
dec
adc
jns
test
jno
test
cs
out
cmp
popa
add
mov
push
push
sbb
aad
lea
pop
or
or
inc
ds
pushf
jp
test
fwait
ss
rcr
sub
jno
dec
cmpsl
lcall
cmp
xchg
sub
sub
das
sub
in
ds
stos
xchg
inc
or
or
js
fldcw
sti
pop
jns
lea
aaa
into
lcall
mov
adc
ja
popf
mov
xor
neg
sub
sbb
adc
popa
pop
subl
lret
sti
cwtl
divl
fstpl
ret
pop
lcall
pushf
inc
test
cmc
mov
adc
lods
in
mov
sub
fdivrp
call
push
negl
push
dec
pop
jmp
dec
jno
cmp
inc
pop
mov
icebp
inc
xchg
add
mov
int
cmp
sbb
sub
bound
and
adc
add
mov
and
ljmp
xor
mov
test
and
shrb
pop
xor
or
iret
and
push
mov
mov
sub
xchg
insb
fsubr
cmp
push
sub
popa
lods
inc
and
pop
fwait
repnz
xor
push
adc
cmpsb
pop
rorb
test
in
daa
push
jg
test
add
mov
sub
push
imul
in
adc
in
sub
push
stos
xchg
and
xchg
sahf
inc
outsl
mov
push
repnz
adc
inc
mov
fwait
jle
and
mov
inc
hlt
push
movsb
inc
jmp
nop
sbb
cwtl
sub
sahf
stos
sub
mov
das
ud1
push
outsl
add
sub
xor
push
mov
lcall
sub
and
sub
lret
push
xchg
int
jne
pop
shll
cmp
mov
cs
jne
pop
out
or
mov
add
xchg
stos
mov
test
out
sbb
jle
pop
adc
pushl
ja
test
subl
mov
bnd
adc
ds
cmp
out
addr16
lods
sub
into
mov
mov
insl
mov
sub
mov
std
jo
sub
inc
jecxz
sbb
and
mov
xchg
jge
mov
sub
add
in
dec
sub
shrb
jmp
cmc
bound
ljmp
jl
mull
outsl
inc
test
into
enter
fbstp
fmul
sub
add
jmp
es
aaa
adc
mov
das
sub
icebp
sub
mov
out
sub
add
xor
ds
mov
push
mov
fidivl
and
sarb
sub
dec
loope
sub
dec
mov
call
mov
ret
mov
sub
cmpsl
sub
xchg
mov
add
outsb
test
cmpsb
and
or
test
inc
orl
sub
add
pop
sub
lret
es
test
inc
xor
jmp
inc
sub
sti
jmp
push
dec
push
out
cmc
jbe
orb
and
pop
xor
fwait
out
sub
cmpsb
jle
in
or
inc
sub
pop
mov
cmp
call
or
mov
outsb
pop
cmp
mov
subb
add
movsl
icebp
or
bound
and
dec
outsl
sub
xchg
stos
in
sub
imul
cwtl
icebp
xchg
enter
lahf
out
repnz
cltd
sub
push
add
add
insl
lods
inc
frstor
sub
adcb
outsb
push
and
pop
xchg
sti
loope
das
inc
or
sub
xchg
out
add
mov
fstl
adc
sub
mov
pop
imul
ljmp
sub
sub
sub
mov
sub
push
adcb
xor
test
sub
xor
inc
movsb
push
mov
testl
jno
mov
and
mov
inc
flds
push
cwtl
faddl
enter
aad
pop
or
cli
jns
hlt
jecxz
xabort
mov
jnp
lock
xor
ss
clc
movsb
push
xor
fdivl
adc
call
xchg
xchg
jmp
jbe
sbb
mov
clc
js
cs
dec
int
pop
into
shr
mov
sti
in
repz
in
xor
and
push
push
fdivl
lret
jns
in
ret
clc
push
xchg
push
aas
imul
jecxz
mov
mov
nop
inc
test
fbld
test
dec
inc
dec
xor
cmpl
shrb
or
or
pop
lret
mov
lret
xor
jmp
sbb
repz
add
shrl
mov
lret
sti
cltd
fstpt
repnz
push
movsb
add
sbb
add
out
les
mov
cmp
mov
es
shlb
inc
xor
mov
fisubs
sub
pop
pusha
jp
arpl
clc
sub
xchg
sbb
cmp
sahf
inc
insb
cs
pop
loopne
inc
inc
sbb
movsb
iret
lock
push
clc
and
pop
outsl
xchg
push
sti
xchg
mov
jnp
lret
outsl
dec
or
mov
jne
in
sbb
mov
testl
sarl
inc
or
jo
imul
sub
inc
dec
mov
xchg
clc
mov
xor
ja
mov
push
js
inc
mov
aas
cmc
lods
xor
loopne
roll
cli
sbb
or
push
dec
cmp
inc
test
in
add
stos
fsts
jae
sub
bound
clc
cli
fmull
enter
xchg
or
or
mov
xchg
add
adc
clc
das
loop
and
into
xchg
add
sub
pop
stos
xor
clc
cmp
sbb
addr16
and
pop
andl
xor
aad
into
clc
out
xchg
clc
mov
repnz
cli
aaa
popf
cmc
arpl
repnz
sub
pop
lea
fidivs
jne
or
pushf
cmp
out
pop
addb
sbb
jo
in
bound
push
pushf
pop
xor
mov
push
gs
cmp
adc
inc
push
jge
sub
adc
add
jmp
push
lds
and
jmp
cli
scas
popa
add
dec
aam
or
dec
sub
in
arpl
pop
push
inc
inc
decb
and
xchg
ficomps
es
push
lret
jb
pop
push
mov
or
xor
scas
in
lahf
push
jnp
test
mov
xchg
mov
loopne
ret
sbb
or
mov
sbb
xlat
sahf
mov
or
imul
add
cli
jno
nopl
sti
gs
ret
fsubs
stos
fs
fdivrp
inc
cmpsl
pushf
mov
cmp
sbb
and
inc
lds
in
add
cmp
in
adc
clc
daa
mulb
jb
cli
dec
sub
mov
push
lods
in
lods
and
out
push
bound
les
lea
popf
add
push
inc
dec
clc
mov
dec
mov
jno
add
pop
fildll
mov
push
icebp
rclb
wrmsr
mov
cmp
or
sar
popf
xchg
jmp
sbb
sub
pop
outsl
sub
pop
adc
std
sar
out
xor
out
xchg
add
je
daa
xchg
or
pop
fst
inc
push
scas
mov
add
invd
out
jg
inc
scas
mov
mov
and
fs
inc
sub
and
add
mov
pop
push
scas
out
rorb
dec
sbb
lea
aad
and
dec
pop
mov
add
cmp
mov
imull
scas
mov
and
pusha
out
icebp
rorb
add
mov
xchg
arpl
stc
popa
pop
icebp
std
lea
lret
cmp
push
clc
adcb
dec
jbe
mov
sti
mov
adc
roll
sub
outsb
imul
sar
mov
sub
xor
add
fldt
jmp
loopne
aas
and
jbe
jl
xchg
andb
jnp
stos
ret
inc
std
scas
pushf
addr16
xor
dec
bnd
pop
pop
xor
adc
movsb
mov
pusha
mov
aad
arpl
xor
cwtl
aas
cmp
jmp
lcall
mov
aaa
mov
add
jno
lds
dec
mov
js
pop
call
xor
or
jns
js,pt
sbb
fwait
mov
enter
iret
xchg
lds
pop
ret
int3
cli
adc
and
jns
sub
out
jecxz
jl
clc
ret
adc
sub
jo
imul
and
sub
jnp
insb
dec
ffreep
je
les
or
fisubrl
mov
push
enter
sub
mov
jae
sub
or
and
aaa
sub
gs
test
jbe
lods
movb
sub
fistl
sub
lods
dec
loopne
jns
adc
sub
dec
call
sub
cmpsb
movsb
dec
mov
or
int
gs
pop
or
jnp
dec
or
mov
cmpsl
push
pop
sub
lcall
loop
faddl
xchg
pop
mov
sub
mov
mov
dec
movsb
nop
aas
mov
sub
sub
pop
imul
jae
inc
test
push
std
movb
in
sub
xlat
inc
add
push
or
imul
imul
sub
or
cmp
mov
xor
movsb
or
add
or
sub
mov
repz
push
cmp
movsb
repz
sub
cs
or
lahf
inc
sub
icebp
sbb
insb
std
mov
fsubs
stc
push
dec
adc
mov
cwtl
sti
mov
out
mov
jp
es
test
mov
movsb
mov
xchg
sub
dec
mov
xchg
sub
mov
sbbb
shrb
cmp
ja
adc
jo
and
jge
cmc
icebp
out
mov
sub
fmuls
xlat
popaw
lret
mov
insb
pop
ds
sbb
xor
adc
or
test
scas
sub
icebp
sar
ss
popa
fsubrs
imul
outsl
and
push
hlt
pop
sub
daa
dec
rolb
or
clc
shrb
jmp
ss
stos
sub
push
push
insl
lret
lahf
cmp
shll
dec
repz
into
in
arpl
out
adc
popf
sti
and
mov
mov
lret
sbb
test
add
stc
pop
sub
leave
add
push
scas
inc
imull
daa
cmp
jecxz
pop
fsubrl
sarb
ds
loopne
into
push
lcall
xchg
push
jae
rorb
in
mov
sbb
mov
repz
pop
sub
mov
cmp
lea
and
sti
adc
adc
push
mov
loopne
loopne
sar
dec
pushf
mov
xchg
push
push
js
sub
outsl
in
call
sbb
add
and
adc
movsl
shl
pop
xlat
add
bound
and
mov
push
pop
mov
imull
pusha
push
xor
xor
dec
mov
stos
test
icebp
dec
xchg
xchg
inc
push
jg
jnp
out
cwtl
es
dec
adc
mov
cmp
mov
and
sub
mov
and
pop
xchg
mov
mov
lahf
stos
imul
add
inc
jp,pn
fsubrs
xchg
push
test
sub
sub
jle
loop
add
and
fbld
pop
xchg
xor
sub
jl
push
jp
es
subb
test
inc
adcl
movsl
adc
jmp
mov
rolb
sbb
dec
aad
into
mov
cli
das
shufps
mov
xchg
pushf
jp
jnp
mov
pop
jne
mov
xor
loop
or
mov
cmp
jnp
mov
adc
aas
aaa
test
push
iret
sub
fsubrs
notb
mov
mov
fiadds
or
sub
lret
mov
rcrb
xlat
xor
or
sub
rcll
sub
and
aam
mov
xorb
arpl
and
inc
sub
movsl
daa
das
sub
xchg
adc
inc
fwait
arpl
mov
cmc
sbb
sub
sub
scas
jecxz
and
outsl
sbb
and
or
cmc
shr
push
mov
xor
pop
into
shr
jb
stos
arpl
or
test
imul
imul
scas
push
clc
mov
sub
stos
repnz
or
shll
inc
mov
and
jns
jae
sahf
pop
test
addr16
pop
arpl
sub
and
cs
mov
lock
inc
dec
xor
add
daa
int3
mov
cmp
jp
mov
and
notb
and
xor
xchg
cmp
jo
or
sarl
test
sub
shlb
stc
mov
cmp
cmp
ret
dec
fdivs
repnz
xchg
adc
dec
pop
jle
mov
stos
adc
in
mov
sbb
xchg
xlat
sub
imul
mov
sub
sub
cmp
mov
call
ljmp
out
jns
or
inc
arpl
cmp
xchg
ja
movsb
test
and
addr16
gs
das
jg
add
sub
sub
add
testl
ds
shlb
mov
mov
mov
dec
mov
imul
pop
and
adc
idivb
es
imul
push
insb
mov
sbb
mov
js
movb
push
movsl
int
repnz
mov
cltd
sub
cld
xor
popf
loopne
jne
mov
adc
fwait
int3
sub
arpl
out
leave
vunpcklps
push
pusha
int
add
inc
dec
sub
mov
or
sbb
xchg
aam
and
fdiv
and
int
jl
jnp
pop
sbb
test
sub
pop
dec
mov
lahf
aaa
out
pop
and
xorl
sbb
and
inc
add
push
dec
outsl
mov
les
dec
inc
psubsw
rclb
xor
adc
or
loopne
sub
in
jnp
js
test
lret
mov
sub
cmpsb
addr16
decb
fnstsw
jo
clc
push
xor
sub
bnd
out
popf
add
sarb
cmc
pop
jo
ljmp
sbb
xor
sub
sbb
mov
pop
mov
out
sub
dec
hlt
cmp
popa
adc
insb
sahf
jbe
or
mov
cs
dec
and
jno
bound
loop
mov
das
imul
mov
adc
jb
test
outsl
sub
std
sahf
scas
int3
daa
and
cmpsl
adc
cmp
dec
out
dec
pushf
pop
les
push
jmp
pusha
out
pop
rcr
xchg
add
sub
fcmovbe
popf
rol
test
popa
and
or
subl
dec
lret
sub
sbbb
push
xchg
pop
hlt
clc
adc
sub
ror
jg
pushf
fisubrl
outsl
cmp
jbe
ja
ds
add
adc
push
insb
sub
and
les
call
test
or
mov
getsec
fistpl
sub
adcb
sbb
lods
ret
ret
jns
into
sub
lahf
jae
and
movsl
push
js
pop
outsl
mov
scas
cmp
xlat
sti
pop
sub
popa
pop
fwait
je
ret
push
sub
jp
xchg
cmp
data16
sub
int
hlt
repnz
fdivl
daa
cmp
jg
push
sbb
scas
jmp
or
aaa
dec
dec
add
sub
imul
mov
aas
insb
cld
sub
mov
scas
jg
sub
jbe
out
sub
or
popa
pushf
lahf
loope
xor
shl
std
aam
pop
imul
sti
jb
sbb
fldenv
push
and
xchg
out
std
js
int3
jne
or
test
leave
mov
sub
xchg
dec
fwait
adc
xor
mov
dec
scas
sub
jmp
inc
jae
subb
or
cmp
addr16
cmc
xchg
xor
fcmovu
xchg
subl
mov
cld
mov
mov
call
test
and
fs
push
sub
dec
dec
pop
arpl
call
jmp
popa
enter
fiaddl
or
xlat
roll
in
sub
into
jp
pop
aad
btr
sub
test
add
movsb
lret
sub
ror
subb
test
sub
xchg
adc
cwtl
cmc
or
and
les
mov
es
call
inc
pop
pop
sbb
and
fldt
jbe
mov
ds
pop
movsb
push
imul
or
jae
mov
inc
fistpll
xor
fstpl
sub
mov
sbb
cmp
sbb
sub
mov
lret
gs
movsb
dec
cmp
adc
mov
enter
int3
js
sub
sub
sbb
add
xor
lret
pop
jle
imul
inc
mov
sub
outsb
pop
aam
sub
and
sarl
jl
ficoml
dec
inc
jle
jle
xchg
insl
sbb
sub
dec
sub
sub
js
push
pop
xchg
mov
sub
jge
aad
sahf
dec
and
leave
in
and
add
sub
das
scas
jecxz
inc
pop
sub
lds
sub
ss
sarb
test
jg
mov
lods
movl
out
movsb
or
or
sub
jmp
cmc
xlat
jl
sub
iret
pop
lcall
cmp
gs
inc
mov
add
decb
sbb
mov
mov
cmpsl
or
mov
insb
repz
mov
mov
cmp
sub
sar
add
jl
cmp
mov
in
sbb
sub
ljmp
cmp
lret
jge
jecxz
push
cwtl
lret
sub
test
adc
aaa
ds
loope
mov
enter
iret
ds
xchg
dec
xchg
and
push
in
sbb
jecxz
fldenv
push
bndstx
enter
outsb
in
jl
sub
lods
push
adc
dec
cmp
mov
add
jg
sbb
fnstenv
mov
incb
icebp
add
sahf
fstpl
xchg
aam
xlat
push
mov
ror
icebp
arpl
jne
dec
adc
adc
popa
adc
scas
popf
fldln2
dec
sub
lcall
out
and
clc
sbb
nop
mov
mov
sub
enter
pop
xchg
or
dec
dec
push
xchg
or
lds
push
adc
mov
cs
push
mov
jnp
pop
call
mov
in
add
daa
jns
mov
xor
sub
scas
ret
movsb
psllw
cmpsb
xor
sub
dec
xlat
dec
stos
cmp
leave
mov
push
jp
xor
pop
in
icebp
push
or
clc
mov
push
gs
lahf
sti
jo
jne
mov
test
insb
std
or
ret
dec
cmp
std
in
enter
mov
xor
scas
ja
dec
push
stos
and
cmc
jge
imul
enter
test
and
sbb
insb
lret
lods
or
aam
sub
testl
inc
sahf
and
fwait
push
cmp
loop
cltd
fs
mov
es
sti
out
xchg
cmp
xchg
push
push
lods
add
shlb
pop
ja
aad
enter
shr
cmp
sbb
or
test
lret
add
lret
arpl
outsb
or
mov
stos
cmp
xchg
cwtl
notl
fsub
xchg
push
sti
lock
cli
cmc
stos
cmpsl
clc
fsubrp
xor
stos
push
dec
push
cmp
adc
sub
pop
jmp
xchg
test
imul
pop
in
jne
outsl
mov
stos
push
dec
push
adc
test
inc
dec
sbb
xchg
out
insb
add
in
sub
ret
rcl
sub
testl
insl
cmpsl
iret
adc
push
mov
aaa
das
xchg
imul
aas
clc
sub
inc
fs
mov
add
lcall
cmp
pushf
mov
jl
fildll
imul
mov
cli
sub
sub
xchg
sub
das
dec
fbstp
hlt
and
pop
mov
cld
inc
push
mov
cli
xor
sub
ret
mov
sbb
sub
inc
mov
jns
jmp
sub
adc
sub
jecxz
pop
sub
testb
jge
lea
xchg
aas
fdiv
add
xchg
cli
mov
cmovg
jns
ja
mov
roll
and
pop
mov
jl
aam
jae
sub
mov
out
clc
jle
lods
insl
stc
aas
adc
and
add
in
in
aaa
jb
xor
call
dec
cmpsb
cmp
js
inc
push
sub
cmpsl
mov
push
sbb
sub
push
mov
sub
push
adc
sahf
mov
jge
sarl
jo
aad
pop
mov
int3
adc
fcmovnb
add
add
popa
lahf
push
daa
icebp
fsubrl
sub
jno
adcl
pop
mov
outsl
dec
jae
mov
mov
cwtl
mov
sub
mov
repz
imul
push
int3
cltd
sub
mov
call
ljmp
sub
movsb
mov
sub
rorb
dec
push
outsb
pop
lock
jns
push
int3
loopne
cmp
outsb
jmp
sub
mov
daa
sub
adcl
sub
cmp
ret
sub
push
add
xchg
dec
inc
pushf
sub
and
sub
adc
jmp
xor
fldenv
fisubrs
and
or
jecxz
mov
sub
jmp
ret
mov
pushl
cmp
jb
mov
enter
outsl
sub
popa
fcomps
out
adc
dec
adc
dec
xor
std
data16
fidivrs
ljmp
in
jmp
lret
dec
fistl
pusha
sub
cwtl
out
xchg
clc
arpl
sub
fnstenv
aam
addb
sub
movsb
xor
jge
shlb
lret
xchg
imul
cmpsl
mov
sub
dec
push
sbb
push
enter
lret
call
pusha
pop
or
push
sub
stos
mov
out
inc
push
mov
lcall
rcrl
dec
push
cmpsl
mov
pop
jno
out
sub
rorb
inc
sbb
ret
insb
push
lods
mov
out
xor
dec
sbb
jo
rclb
xor
daa
shld
sub
xor
into
mov
clc
jnp
in
jno
mov
scas
xchg
sub
call
inc
mov
out
dec
movsl
jmp
or
scas
sub
insb
fildll
adc
sub
fs
mov
fcoml
lcall
sub
jno
sub
mov
xchg
mov
fbld
adc
outsl
push
adc
testl
add
mov
mov
mov
mov
mov
das
insl
push
jbe
iret
sub
addr16
cmpsb
pop
cmp
add
jbe
fsubp
cmp
push
xor
fs
mov
pop
sub
testl
sub
lea
push
xchg
pop
mov
lret
mov
inc
shll
fsubrs
inc
es
dec
mov
addl
sub
sbb
mov
les
sub
sub
lret
mov
and
mov
arpl
jecxz
pop
je
xor
inc
fucomp
ds
clc
sarl
pop
and
push
mov
dec
push
jg
mov
cld
movsb
sub
cmc
lds
sub
and
movsb
mov
sbb
push
inc
add
out
ret
fmuls
sub
pop
sbb
sub
dec
or
ret
add
cs
test
and
cmpsl
aam
pop
push
xor
cmp
fwait
jg
sub
test
jnp
sub
mov
gs
cmp
lock
fistl
adc
cmp
lea
pop
jb
mov
jecxz
sub
nop
scas
test
daa
mov
dec
jbe
dec
loopne
out
movsb
ds
repz
cmp
mov
lahf
loope
enter
lret
sub
xchg
test
xchg
jae
push
sub
mov
pop
sbb
sub
cwtl
ss
es
jo
dec
add
pop
ret
inc
sub
xor
pusha
cmp
ds
jge
test
imul
fwait
lret
sub
fimull
dec
mov
lods
testl
jne
mov
rcl
das
sub
mov
outsb
cmp
ds
adc
imul
and
sub
aas
jno
popf
jmp
popf
add
enter
fistl
cltd
test
out
sub
mov
popf
jl
imull
test
mov
ds
cwtl
xor
pushf
sub
mov
sub
or
imul
push
test
mov
jae
out
repz
test
icebp
ja
cmp
stos
out
xor
sub
sub
push
mov
or
enter
inc
push
orb
mov
mov
and
mov
cmpsb
add
in
adc
outsl
mov
sub
cwtl
sbb
shr
pop
xor
sub
inc
and
sub
push
in
inc
movsb
bound
sub
add
lret
sbb
add
cmp
fs
fcompl
and
cmc
dec
push
into
add
dec
dec
sub
loope
jno
jbe
push
pop
push
popf
sub
mov
xchg
dec
push
mov
add
arpl
inc
pop
jl
cmc
xlat
jns
add
jmp
add
push
dec
test
adc
sarl
push
imul
imul
sub
iret
rcr
xchg
jle
xchg
pop
outsl
popa
push
sub
and
and
aas
cmp
sbb
add
mov
shll
scas
dec
scas
sbb
or
fwait
push
mov
xchg
and
or
jbe
adc
rclb
jmp
cs
arpl
xor
sub
mov
push
stos
or
sbb
ret
jmp
mov
xor
mov
call
aas
sub
jl
mov
lea
test
inc
pop
stc
inc
ret
cmc
lret
stos
jmp
enter
inc
iret
rcr
mov
xchg
imul
add
pop
xchg
dec
sub
fs
out
aas
test
sub
mov
dec
mov
in
add
mov
in
aaa
mov
mov
cmp
loop
cmpsb
inc
jge
ja
mov
lret
test
pop
dec
sub
daa
sub
shr
and
ds
adc
sub
stos
insb
iret
rcpps
nop
add
sbb
dec
jmp
clc
lcall
add
push
and
sub
fldl
repz
jnp
int3
pop
sub
lods
dec
imul
inc
fs
jecxz
les
les
out
sarl
xchg
enter
lret
push
lret
pushl
sub
cwtl
cmc
outsl
or
fsts
int3
cmp
insb
mov
cli
in
out
and
jo
imul
loop
jnp
jne
jae
clc
mov
cld
pop
ljmp
inc
out
lock
sub
jmp
sub
dec
leave
mov
dec
push
mov
jo
fildll
mov
loop
orl
adc
or
jo
mov
dec
outsb
sbb
xchg
mov
inc
fldcw
in
into
test
push
rcrb
cli
pop
pop
add
xchg
mov
push
mov
cmp
aaa
push
ja
test
loope
xchg
test
std
imul
push
pop
cmpsl
lods
cmp
dec
push
clc
iret
test
dec
xor
pusha
cmpsb
leave
sbb
cwtl
jecxz
jmp
jo
loopne
sub
ret
arpl
push
aam
mov
icebp
adc
popf
mov
jmp
dec
out
pop
mov
pop
xchg
dec
mov
repnz
xchg
lods
push
clc
mov
hlt
and
in
sbb
test
imul
iret
pop
mov
mov
shr
lods
imull
jae
lahf
push
stos
addr16
popa
jne
cmp
popa
xchg
fidivs
cwtl
jae
lods
sbb
lret
popa
jmp
aad
sbb
icebp
mov
sub
scas
pop
mov
cli
mov
ret
xor
inc
jmp
pop
dec
cmp
je
jmp
or
jns
sub
imul
jo
loope
jmp
in
dec
add
or
mov
jae
fnstsw
sub
gs
sbbb
bound
dec
xchg
notl
mov
jns
sub
xchg
loope
mov
imul
sub
sbb
push
scas
push
mov
sub
or
sub
jp
sub
shll
jmp
jnp
cmp
sub
mov
jne,pt
adc
push
ljmp
ds
fwait
or
cmc
xchg
imul
insl
jmp
loopne
dec
sub
hlt
mov
lret
adc
jne
push
test
int
adc
cltd
add
in
fisubrl
movsl
out
loopne
stos
outsl
or
call
adc
pop
push
and
dec
fsubrs
add
jae
inc
jge
jmp
mulb
lock
mov
and
sub
fldt
sub
push
out
imul
decb
sub
xchg
hlt
inc
arpl
mov
mov
ret
das
icebp
or
mov
xorb
jecxz
pushf
push
sub
and
adc
jg
jno
popf
cmp
sbbl
mov
ljmp
aas
adc
mov
sub
cli
sub
insb
test
mov
pop
std
push
scas
lcall
push
in
roll
daa
xchg
mov
sbb
mov
aas
sub
xchg
dec
sbb
sub
div
jmp
add
push
fldcw
mov
mov
andb
sub
insl
dec
mov
enter
and
bound
int3
in
push
aad
or
imul
adc
pop
cmp
sub
jecxz
add
xor
ds
insl
stos
xchg
inc
repnz
in
cmp
les
movsb
rolb
cmp
push
sbb
adc
outsb
sub
dec
cltd
push
xor
das
mov
imul
push
ljmp
sub
sub
push
nop
dec
sub
or
sub
out
fadd
es
jo
mov
pop
cmp
pop
add
and
loop
pusha
sub
cmp
jp
sbb
push
stos
lcall
xor
cmp
cwtl
ror
sub
pop
jno
sbb
dec
mov
mov
push
or
lds
mov
sub
cld
out
sbb
pop
jp
aas
je
aam
sub
ja,pt
out
aad
dec
dec
mov
mov
pop
nop
sub
jg
and
ja
test
jecxz
mov
sub
out
xchg
adc
push
fwait
hlt
movl
stos
xlat
subl
sahf
aaa
nop
test
inc
push
rorb
mov
test
aad
dec
sub
push
test
xchg
das
pop
movsl
gs
mov
cli
mov
imul
les
stos
inc
push
imul
sub
cmp
into
add
shlb
jb
loop
sub
pop
scas
push
pop
push
mov
sub
pop
jno
test
xlat
cld
pop
sub
sub
ret
xorb
cld
and
lahf
addr16
subb
in
cmpsl
push
bound
mov
push
sbb
mov
es
and
sub
jge
dec
nop
mov
cltd
stc
sub
js
pop
jp
mov
or
xlat
cmc
cmp
enter
xor
cmovne
xchg
rorl
mov
daa
xchg
negl
and
popf
sub
stc
cmpsb
roll
add
and
sub
pop
adc
outsb
or
cmpsl
ss
dec
cmp
sub
data16
cmp
xchg
mov
fisttpl
popa
xor
pop
sub
roll
in
pusha
cmp
out
sub
pop
sub
shlb
and
add
add
call
cwtl
mov
and
sbb
bound
mov
pop
jae
icebp
mov
stc
inc
in
or
sub
lea
aas
xor
mov
dec
scas
enter
stos
xor
adc
movsl
movsb
stc
shl
sti
icebp
in
sub
sar
jno
or
int3
jmp
test
imul
sub
cmc
pop
pop
iret
mov
mov
sub
push
mov
mov
inc
ret
arpl
jg
in
inc
sub
jne
dec
leave
jae
push
leave
lock
enter
jge
or
fwait
jbe
sub
out
movsb
push
or
fsts
cmp
sub
cmpsb
or
mov
fdivrl
push
loope
adc
lea
mov
movsb
push
add
sub
lret
sub
mov
fistpll
lods
outsb
sahf
add
mov
xchg
je
adc
ljmp
sbb
ja
sub
jecxz
sub
aam
mov
mov
pusha
mov
addr16
adcb
push
outsb
jno
or
adcb
lods
mov
dec
xor
xchg
mov
xchg
sub
js
xchg
dec
jg
enter
sub
fildll
clc
sub
lahf
push
dec
mov
ljmp
std
and
sub
pop
lds
sub
jo
imul
cmpsl
sbb
ret
mov
sub
rcr
lock
xlat
sub
and
imul
and
mov
mov
sub
lods
sahf
loope
push
sub
pop
pushf
fs
pop
data16
in
and
stos
es
mov
sub
mov
sub
push
arpl
sub
data16
fdivs
or
dec
outsb
xor
enter
sub
and
cmc
mov
outsl
sbb
int3
stos
add
std
sub
iret
add
sbb
sub
scas
int3
test
movsb
sub
in
cmpsl
jmp
insl
shrl
mov
jne
sub
dec
or
icebp
mov
movsb
cmp
jnp
jo
xor
and
out
insl
shrb
sbb
lods
jne
push
or
es
insb
clc
sub
ret
loope
and
and
hlt
pushf
cmpsl
or
sub
inc
xchg
imul
cmp
mov
gs
ss
out
in
les
pop
call
shrb
add
int
inc
stc
test
sahf
ret
jmp
cmp
icebp
mov
sbb
sub
cmpl
scas
je
lret
jo
push
sub
dec
push
lret
push
int
movsb
and
mov
inc
sub
dec
loopne
lock
dec
add
mov
rcrb
mov
mov
dec
xchg
xlat
sbb
outsl
inc
mov
sub
rorb
jp
xchg
negl
jecxz
sub
add
cltd
push
sub
clc
sub
test
imull
pop
sbb
adc
sbb
xchg
sub
nop
inc
cmp
call
cmpsb
js
repz
push
mov
sbb
lahf
aad
popf
rcl
and
cwtl
xor
or
loop
stc
xorb
pop
inc
lock
pop
call
mov
or
jecxz
stos
push
sbb
and
adcb
fisubrs
imul
inc
or
jmp
pop
ret
dec
sub
and
mov
sub
and
cmc
mov
mov
out
sti
sbb
js
ret
dec
xchg
mov
mov
daa
fidivrs
mov
sub
loopne
pusha
arpl
popf
gs
loope
daa
push
outsl
sub
pushl
aam
outsb
rol
sub
xor
sub
sbbb
fdivr
es
icebp
in
xor
sbb
xor
and
adc
add
in
fwait
add
dec
pop
cld
push
imul
pop
xor
stos
imul
mov
out
dec
stos
test
push
insb
mov
push
cmc
sub
mov
daa
mov
js
and
sub
dec
jle
pop
jo
fldcw
mov
sub
jns
sub
xor
aad
lods
subb
lret
mov
les
shlb
cmovo
mov
mov
and
in
pop
stos
pusha
and
mov
rolb
outsl
scas
sub
addl
daa
sub
sbb
add
jns
mov
lcall
and
int3
adc
inc
insl
ficomps
lds
icebp
sub
lcall
xchg
xchg
pop
cmc
fwait
xor
dec
pop
pop
popl
jmp
lahf
push
sahf
push
sarb
hlt
movsl
test
jns
mov
xchg
push
sub
adc
inc
clc
es
dec
mov
hlt
jmp
dec
das
or
imull
add
cmpsl
mov
jbe
into
rorl
mov
dec
nop
push
scas
xchg
ljmp
mov
push
fidivrl
loope
repnz
arpl
inc
and
iret
push
sub
adc
cmp
test
mov
or
jmp
pop
test
sti
shrb
xchg
mov
xchg
aas
mov
clc
es
dec
pusha
inc
or
xlat
ljmp
push
imul
das
xor
xchg
add
xor
mov
call
dec
popf
jae
scas
mov
sbb
outsb
xor
pop
shrb
adc
clc
and
test
jmp
cli
add
push
adc
jns
int
sub
out
sbb
iret
pop
lds
pushf
faddl
sub
sti
shll
fbstp
cli
xor
or
mov
pop
movsl
nop
xor
mov
mov
add
test
cmp
sbb
ljmp
cmp
inc
inc
sub
call
out
in
push
shlb
cmp
or
loope
push
ret
ss
and
xchg
jne
pop
xor
xor
imul
sub
test
lods
stos
cli
inc
adc
shr
push
inc
shrl
addr16
test
aam
nop
push
and
sbb
arpl
pop
dec
or
push
clc
push
fnstcw
or
jl
or
sbb
sub
dec
and
dec
shrb
lret
ds
jge
cmpsb
xorb
or
dec
cmp
clc
jge
inc
mov
lock
repnz
inc
inc
repnz
mov
mov
test
dec
jg
sarb
std
cmp
add
cld
scas
aam
sarl
mov
aad
cli
scas
cmp
push
mov
sti
add
jle
jbe
sahf
xlat
push
sbb
sub
push
pop
out
inc
jle
jo
int3
sbb
sbb
or
imul
outsb
fsubrs
inc
cmpsl
lcall
daa
pop
sub
pop
mov
xchg
sti
cld
les
push
stc
cli
inc
shr
das
mov
cmp
popa
sub
jecxz
sbb
push
cmp
pop
sub
sti
jmp
sub
sbb
inc
in
cmp
mov
xor
lods
imul
inc
jb
sub
push
dec
rorl
movsb
add
stos
dec
push
into
cli
divb
mov
rcl
cmp
cmp
xchg
sub
jb
icebp
mov
cld
xor
rcr
iret
lret
dec
sti
fdivs
test
fs
sub
jl
popa
jnp
add
add
fs
rorl
sbb
sub
xor
push
cmpsb
pop
aas
jo
pop
cld
mov
ret
inc
and
xchg
ja
sub
cmp
jb
icebp
mov
xor
ss
jo
jecxz
int3
dec
std
sub
dec
out
xor
outsl
iret
jae
mov
lahf
loopne
in
mov
mov
bound
aaa
scas
and
or
stos
insl
pop
imul
cmc
dec
sti
aad
mov
roll
outsl
jge
loop
dec
cmp
push
jmp
lods
mov
dec
dec
hlt
mov
sub
pop
imul
mov
aaa
sub
or
aad
adc
sub
xchg
cld
cmp
ja
pop
pop
mov
add
outsb
pop
fdivrs
add
adc
test
pushf
mov
test
loop
sub
nop
mov
ljmp
outsl
xchg
xor
test
movsb
sub
repz
aas
sub
mov
out
aad
ja
fistpll
xor
lret
icebp
outsb
test
sbbl
sub
sbb
mov
hlt
adc
sub
popa
aam
xchg
sbb
sub
test
xchg
sub
testb
sub
test
je
or
jae
inc
rorb
push
subb
push
dec
daa
sub
stos
sub
sbb
lock
stos
add
mov
dec
xchg
pop
xchg
shrl
and
outsl
jl
xchg
and
xchg
jp,pn
adc
and
dec
push
enter
int3
sub
push
push
icebp
imul
scas
fstps
int
call
out
xchg
test
xlat
scas
and
sub
dec
jno
in
adc
mov
ficompl
repz
sub
call
imul
jbe
insb
jmp
test
jp
gs
cmpsl
ljmp
stos
xor
jecxz
mov
inc
loope
cmp
in
mov
pushf
insl
cmpsb
and
bound
sti
fwait
rclb
sub
imul
xor
mov
mov
jno
lods
rclb
fcoml
sub
fcomip
sub
ljmp
test
lods
in
imul
push
inc
ret
sub
inc
push
push
jo
ljmp
shrl
xlat
shrb
repz
mov
in
push
dec
sub
adc
inc
stc
int
movsb
rorl
sarb
ss
fdivl
sti
sub
addl
push
sbb
loope
sub
xor
mov
fs
mov
lods
pusha
fstps
rclb
cmp
or
jae
dec
jno
sub
or
jae
sub
scas
clc
sub
sub
mov
pop
movsl
pop
arpl
xor
sub
mov
inc
ljmp
push
xchg
sub
mov
cmc
dec
sbb
inc
lock
gs
test
lods
sub
mov
stos
sub
dec
pop
aam
jnp
or
mov
sub
mov
sub
out
xchg
inc
sub
sbb
roll
sub
repnz
mov
push
sub
dec
push
addr16
sub
inc
std
sub
bound
lahf
into
mov
fisubrs
mov
imull
pop
sub
xchg
stc
movsl
xor
sub
icebp
daa
in
sbb
push
movntq
mov
enter
cmp
xor
cmp
jmp
in
sub
orb
mov
cmp
xchg
mov
gs
ljmp
add
sub
adc
shlb
fdivrs
or
inc
aaa
jmp
sub
dec
dec
xchg
cld
fisubl
test
out
sub
scas
fbstp
mov
stos
mov
inc
or
test
lret
outsb
in
sub
lock
xchg
xchg
or
pop
sub
push
fidivl
out
mov
ret
sub
testb
stos
jbe
sbb
mov
fsubrl
sbb
dec
adc
pop
cmp
cmp
sub
stc
or
mov
insb
mov
leave
sub
ret
push
cmpb
shl
xor
data16
fcoml
cmc
inc
lods
cmp
sahf
lret
sbb
sub
jns
loopne
add
cltd
bnd
in
sbb
xor
sub
fidivs
jbe
dec
enter
fcoml
imul
test
jmp
mov
sub
add
popa
call
pop
loop
add
adc
mov
pop
sub
ret
xchg
int
xorb
hlt
arpl
stc
xchg
out
test
mov
sub
jg
adc
popf
or
sub
sar
inc
and
inc
push
xchg
fists
adc
xor
sub
or
shrb
rclb
pop
fsubrp
jo
adc
xlat
in
jecxz
pop
loopne
inc
and
push
sbb
inc
outsl
mov
cmp
sbb
jne
sub
cmc
push
cmp
test
jecxz
sub
aaa
insb
sub
xchg
xor
pop
push
sub
mov
adc
insl
enter
cli
push
xor
out
aaa
sub
es
sbb
dec
xchg
pause
sub
mov
cs
ficomps
jnp
lahf
stos
and
or
pop
dec
ljmp
fcompl
leave
jnp
out
push
ret
enter
sbb
xchg
mov
lahf
inc
sti
cs
sarl
iret
iret
icebp
adc
adc
rorb
imull
mov
jne,pn
or
cmp
xchg
jmp
adc
xchg
fcmove
je
sub
in
call
and
jmp
rcrl
fwait
lret
cld
or
xor
in
xlat
and
xor
hlt
rclb
orb
xchg
sub
scas
sub
dec
fldcw
jno
dec
nop
and
push
lret
mov
and
cmp
push
sbb
imul
push
xchg
xor
addr16
sbb
scas
adc
rorl
out
sbb
dec
call
dec
mov
mov
jge
call
test
in
mov
js
lcall
data16
sbbl
adc
scas
repnz
fildll
dec
iret
push
leave
sub
fiadds
sub
jl
outsl
sub
mov
push
arpl
mov
push
mov
out
xor
xchg
ret
imulb
mov
sub
and
js
cmp
clc
mov
daa
sub
ds
dec
sub
xchg
inc
cld
and
fwait
and
data16
mov
push
sub
pop
aas
jl
lret
in
mov
xlat
add
sub
lcall
dec
jp
call
jmp
lock
test
movsb
dec
faddp
jge
cmp
jb
mov
mov
cld
ss
cs
data16
out
pop
sub
jb,pn
nop
lds
mov
dec
bound
jnp
lahf
dec
sub
test
or
fs
mov
das
ret
sbb
push
pop
xchg
cmp
xchg
sub
pop
pop
es
cmp
addr16
adc
jmp
sub
inc
test
stc
mov
sbb
mov
cmpsb
sbb
cmp
jbe
bound
aad
fcmovb
or
push
jnp
repnz
mov
or
pushf
sub
dec
push
xchg
jnp
loopne
sub
rcll
call
pop
in
xor
test
lea
sub
jnp
shrl
adc
sahf
sub
sub
xorl
xor
fstpl
sbb
int
lods
fsts
sub
pop
sub
sahf
pop
mov
inc
sub
mov
dec
sub
insb
or
clc
cmp
inc
jge
mov
gs
fwait
xchg
pop
out
pop
testb
push
jae
xchg
fwait
xlat
sub
lods
loope
mov
push
les
and
jg
pop
mov
dec
test
xor
hlt
outsl
inc
mov
imul
mov
ljmp
jo
das
adc
movsb
mov
scas
pop
ret
and
data16
adc
dec
pop
pop
jl
loop
or
sub
in
mov
and
mov
sub
push
hlt
push
es
jle
or
pop
mov
cld
lds
mov
in
mov
jmp
push
or
push
mov
je
cwtl
push
inc
dec
and
or
cltd
int
cli
push
out
mov
scas
mov
cmp
dec
xchg
imul
xchg
jo
xchg
out
add
sbb
push
lret
xor
dec
inc
test
cmpsl
mov
sub
push
sti
in
outsb
repnz
mov
ss
sub
pusha
adc
push
pop
scas
push
jnp
mov
add
push
cmp
ds
sti
xor
pop
movl
rcrb
or
shr
xchg
jne
js
shrl
in
push
push
cli
decl
sub
out
xchg
test
imul
push
icebp
mov
xchg
clc
mov
cmc
mov
xor
dec
shl
sub
int3
rclb
pop
ja
pop
cli
test
cmpsl
sti
cltd
sub
pop
jno
and
mov
cmpsl
jb
mov
mov
mov
stos
outsb
cwtl
gs
mov
pushf
bound
jecxz
jmp
sub
into
sbb
push
test
pusha
pop
fildll
popf
int3
fst
jae
clc
jmp
inc
in
sti
testb
nop
fmuls
sub
movsl
xor
mov
pop
xor
inc
adc
sub
in
push
out
sar
icebp
std
jns
dec
clc
bound
gs
pop
es
inc
push
clc
inc
lods
pop
ret
addr16
mov
fwait
in
scas
aam
jnp
std
mov
stos
clc
mov
ja
cvtps2pi
sti
push
push
pop
push
xchg
aaa
add
test
clc
divl
scas
pop
sbb
mov
cwtl
in
sub
clc
xchg
cli
add
cwtl
push
push
imul
xor
inc
add
sub
mov
popf
aas
loopne
cltd
mov
enter
rorl
jo
or
inc
sysret
adc
push
cmp
stos
and
sub
ret
aad
sbb
repz
or
or
imul
fisttps
pop
sbb
jecxz
add
cmp
mov
popa
xchg
dec
jo
xchg
scas
xchg
inc
in
loope
xchg
jl
jle
out
jnp
subb
pop
mov
sub
mov
sahf
pop
test
jne
adc
inc
xchg
arpl
add
addr16
xlat
lds
ret
lcall
cmp
mov
dec
out
add
ret
jl
adc
jmp
inc
mov
cmp
mov
test
sub
lea
jg
rcl
mov
xlat
adc
and
cli
jg
pusha
daa
test
fucomp
jp
sbb
jg
dec
jle
push
xor
out
scas
lcall
ret
addr16
adc
out
sub
sub
xor
addr16
dec
outsb
add
jnp
iret
leave
cwtl
mov
xchg
cli
dec
repz
ret
jmp
sbb
clc
ja
inc
out
lcall
or
sbb
mov
push
adc
stos
int3
pop
inc
xor
adc
in
out
loope
jecxz
push
add
lcall
mov
mov
pop
push
cli
dec
cmpl
imul
jmp
pop
xlat
std
ja
lock
mov
mov
push
shlb
and
fcmovnu
sbb
dec
test
jns
out
addl
mov
loop
lret
adc
cmpb
cmovae
xchg
and
imul
add
push
cwtl
les
pop
pop
push
jmp
cli
sti
icebp
sub
dec
lret
jo
xor
inc
pop
adc
or
test
sahf
and
sbb
pop
jnp
aas
into
insl
lods
inc
outsl
or
sub
cld
outsl
xor
sub
fidivs
mov
fmul
add
sbb
std
sbb
xchg
fisttps
sub
mov
imulb
and
xor
xor
sub
mov
mov
mov
sbb
cli
xor
push
sub
nop
es
add
shrb
or
add
adc
sub
popf
xchg
enter
xchg
mov
nop
jae
and
sub
mov
sub
push
test
loop
sub
pop
ljmp
push
enter
sub
jmp
pop
scas
sub
sbb
pop
adc
das
mov
repnz
lcall
sahf
fsub
fwait
dec
lds
js
into
inc
jno
xchg
push
xor
add
mov
or
sub
rcrb
push
cwtl
out
cld
jp
jae
enter
mov
push
inc
dec
inc
ret
mov
stos
sub
pop
loope
orw
add
cmp
sub
sbb
pop
adc
mov
rolb
fsubrs
sbb
push
sbb
jbe
adc
push
in
loopne
int3
ret
sbb
jg
ror
shlb
xor
lds
push
cltd
sub
dec
scas
inc
leave
orl
shrl
push
pop
add
aaa
test
lods
test
sub
mov
sub
mov
inc
inc
outsl
mov
sub
pop
mov
xor
sbb
popa
test
sbb
test
es
pop
xchg
je
cmp
call
sub
xchg
or
jno
or
xchg
dec
inc
add
in
addl
sub
scas
inc
adc
sub
add
es
dec
sub
and
push
sub
cmpsb
ret
insl
out
std
mov
testb
xlat
jl
js
addb
ss
clc
ljmp
lea
test
shlb
push
sub
add
xchg
in
imull
mov
jl
sub
push
jg
pop
icebp
mov
shl
sub
ss
imul
push
xor
dec
mov
push
shlb
mov
sbb
push
sub
push
lcall
das
inc
sub
pop
cmp
sub
inc
packsswb
mov
clc
sub
loopne
outsb
es
lahf
sub
testl
in
sub
add
clc
sti
ret
sub
push
and
and
aam
stos
inc
sub
xor
sar
dec
mov
test
inc
xchg
push
arpl
mov
xor
sub
loop
add
adc
adc
sub
inc
call
and
stc
loop
test
dec
adc
loopne
jle
scas
mov
sub
insb
sbb
jns
adc
loopne
test
mov
pop
xchg
or
dec
cmp
pop
rcl
jb
mov
xor
mov
xor
ljmp
xchg
popw
sub
sub
xor
push
xlat
scas
mov
sub
push
mov
mov
add
xchg
fs
leave
bound
or
mov
fists
arpl
ds
cli
test
or
fs
popa
lret
sub
sub
cmpsb
stos
mov
pop
clc
cmpl
scas
cs
repnz
xchg
xor
out
mov
dec
jae
or
imul
lods
mov
test
fwait
lret
push
add
test
sub
add
push
ds
or
enter
cmp
mov
rcll
shrb
mov
add
fdivrl
fmuls
add
in
mov
rorl
stc
mov
dec
sub
lcall
inc
jno
sub
push
push
es
shrb
stc
sahf
sar
jge
sub
les
psrld
push
jl
rcll
stos
ds
jns
push
int
xor
aam
jae
inc
and
das
and
fistpll
sub
xor
test
xor
pop
aam
jl
and
mov
xor
sub
pop
push
bound
mov
fisubs
test
mov
jge
hlt
insb
repz
popf
out
fmuls
push
jnp
dec
sub
je
fiaddl
cmp
push
xor
jb
aaa
sub
xorl
ja,pt
mov
scas
mov
xchg
aam
sub
and
sub
stos
sub
jbe
stos
jge
xor
rep
enter
inc
iret
mov
jno
adcb
xchg
das
mov
sub
cmpsb
fs
xchg
jo
sub
or
repz
je,pt
sub
iret
test
inc
cmp
jo
cmp
push
dec
or
call
sub
cmp
sub
shlb
push
mov
test
call
loope
xor
insl
mov
and
fadd
dec
js
cltd
pushf
sub
mov
rclb
adc
sub
add
inc
sub
insl
xchg
sub
jge
xor
outsl
in
nop
mov
cli
sub
push
sbb
adc
loopne
or
data16
in
inc
popf
sub
in
cmpb
cmp
add
push
sub
push
and
inc
sub
add
movb
icebp
sub
cs
push
sub
push
inc
fld
or
popf
sub
faddl
jle
test
loopne
call
mov
daa
inc
ror
shll
test
mov
sub
cmp
mov
pop
and
dec
aam
fisubs
dec
xor
aas
cmp
stc
jge
arpl
test
imul
cli
xor
sub
xor
xor
and
sub
test
out
jmp
stos
lcall
dec
xor
dec
jmp
xchg
lods
jno
jge
mov
sbb
or
jge
push
inc
stos
jg
lret
cld
dec
loop
cmpsb
dec
mov
inc
pop
sub
or
int3
call
mov
jnp
sub
mov
sub
mov
test
ret
sbb
dec
cmp
or
jbe
jae
lret
mov
fnstenv
xchg
daa
sub
inc
lcall
add
fisttpll
xor
outsb
push
sub
xchg
fmuls
pop
or
sub
cmpsl
cmp
test
das
sub
fcmovb
mov
mov
lods
push
cltd
and
loop
push
cmp
and
sub
jecxz
out
scas
jno
pop
xchg
sub
cmp
in
sti
pop
push
dec
add
mov
orl
sub
xor
inc
mov
mov
push
test
into
ret
shlb
sub
pop
sbb
lods
in
das
es
sbb
and
cmpsl
iret
test
jge
push
pop
push
stos
xor
cmp
mov
ficoms
cmp
mov
inc
ds
adc
dec
sarb
data16
jl
es
inc
sub
hlt
xchg
mov
sub
addr16
inc
repnz
sub
sub
mov
pop
or
aad
mov
les
int
fs
and
inc
sub
fidivs
push
mov
cmp
in
jp
sti
icebp
sbb
dec
sub
adc
xor
test
sbb
setns
push
xchg
leave
cmp
mov
jge
xchg
fsubrl
push
lds
xor
push
js
pusha
jb
faddp
out
dec
and
pop
sub
mov
mov
xchg
clc
fcmovnb
out
sub
sbb
sbb
out
sub
mov
roll
xchg
dec
dec
mov
sub
add
sub
lret
lods
cmp
sub
rclb
subl
mov
hlt
test
imul
sub
test
fwait
stos
std
dec
aaa
mov
sbb
scas
mov
call
lods
repnz
mov
sub
outsl
mov
and
popa
cwtl
cmp
aas
push
mov
or
dec
cmpsb
sbb
jmp
mov
test
movsb
pop
rol
mov
mov
arpl
add
lahf
or
jp
xor
sbb
insl
ficoms
pop
enter
cmp
int3
mov
dec
jge
mov
mov
add
pushf
jg
fdiv
sub
adc
mov
sub
pop
test
fstpl
sub
je
in
sub
push
mov
jge
jge
data16
sub
sbb
mov
mov
int
or
aas
pop
add
pop
sahf
xchg
sub
push
dec
adc
mov
push
push
mov
jb
xchg
jl
ds
ret
xchg
idivb
insb
dec
fstpl
fnstcw
out
notl
push
cmp
and
stos
inc
add
cmc
push
clc
sub
popa
push
dec
or
aaa
xchg
push
and
mov
and
push
mov
sub
sub
in
xor
sub
xchg
or
test
clc
shrl
leave
or
sub
mov
jg
dec
mov
in
dec
add
negl
icebp
sub
insl
mov
test
inc
out
push
mov
cmp
sub
int3
cltd
jg
xor
mov
imul
enter
cmpsb
jo
scas
movsb
cs
sub
aas
mov
mov
jae
in
lock
mov
loopne
sahf
sub
xchg
mov
push
push
pop
pop
push
fwait
loop
pop
jmp
mov
or
sub
fwait
sub
sbb
dec
cld
das
outsb
les
fcompp
xor
addr16
insb
or
fstpl
sub
adc
cwtl
std
scas
testb
dec
js
aam
xchg
push
dec
mov
push
sub
in
and
xchg
xor
ljmp
mov
cwtl
jne
mulb
sub
shlb
rcrl
repz
pop
jnp
pop
or
bnd
clc
mov
std
movl
pop
xor
pop
jae
xchg
inc
inc
push
test
push
or
insl
sub
frstor
push
in
je
sub
pop
imul
inc
sub
fisttpll
lods
loope
test
cmp
jp
imul
lea
xor
in
jbe
cwtl
jbe
xor
fs
imul
mov
mov
cmp
sub
mov
ds
mov
out
xchg
xchg
subl
int3
mov
fmul
jmp
pop
lock
in
add
sbb
cli
xlat
xchg
cs
and
js
jo
aad
jbe
jge
rcrb
out
dec
adc
mov
adc
loop
int3
add
inc
lods
xchg
sysexit
sbb
sbb
ja
xor
lret
aad
cmp
and
mov
pop
jp
pop
mov
ja
or
cli
addb
lret
sub
lds
mov
add
sub
xchg
data16
arpl
dec
ficoms
scas
sub
or
adc
and
pushf
ss
stos
cwtl
push
faddp
jmp
mov
ret
xchg
xchg
movsb
xchg
xchg
gs
sbb
cmp
clc
stos
insl
or
push
cli
in
or
hlt
push
pop
xor
push
aaa
xchg
jbe
pop
jmp
push
lcall
sub
and
ljmp
cli
xchg
psrld
jl
adc
pop
dec
int
mov
xor
xor
fnstsw
rclb
mov
lcall
rclb
outsb
les
dec
iret
sbb
xlat
ss
xor
into
inc
loope
icebp
test
jle
clc
mov
bound
je
ja
rcll
adc
fs
ret
mov
xor
outsl
cli
lock
mov
es
or
cmp
iret
in
nop
popa
xor
aad
pop
or
sub
pop
sub
or
mov
sub
xchg
dec
xchg
add
push
les
cli
dec
aam
sub
add
dec
bound
pop
fs
icebp
shrl
cmp
out
sub
fnstenv
pop
test
leave
add
push
in
sub
inc
std
insb
sar
data16
ds
lea
sub
or
outsb
xor
dec
lea
sbb
pop
dec
dec
imul
ja
sub
or
mov
add
and
inc
ds
imul
jmp
sub
pop
lods
dec
dec
jb
add
jecxz
sbb
pop
fwait
dec
push
loope
xor
rcrl
mov
jns
push
mov
sbb
jbe
xchg
mov
mov
sub
adc
ljmp
xchg
cwtl
stc
push
mov
mov
sub
adc
xchg
jns,pt
mov
lcall
dec
sbb
cmc
test
adc
add
insb
inc
jecxz
hlt
add
sub
mov
push
mov
jbe
sub
sub
jno
ds
das
mov
dec
inc
cli
push
call
ficoml
pushf
pop
sub
mov
repz
std
sbb
inc
sub
fnstsw
jae
pop
sbb
inc
or
mov
add
dec
sahf
mov
sub
xchg
aam
push
sarb
lahf
xchg
stos
xor
pop
dec
pop
test
test
sbb
jge
stos
mov
pop
dec
in
xor
sub
sub
xor
bound
xor
ret
scas
jae
cltd
out
xchg
sbb
xchg
popa
arpl
or
aam
test
add
test
mov
sub
mov
test
shrb
dec
cmpsl
or
cmp
cmp
mov
dec
ds
mov
cmp
inc
xchg
mov
or
jnp
roll
jo
or
adc
sub
scas
ja
sbb
fildl
int3
sub
pop
dec
stos
sub
std
sbb
mov
mov
shlb
push
sbb
int
sub
dec
into
xchg
push
mov
push
jnp
add
jae,pn
and
mov
push
cmpsb
enter
int3
sbb
add
adc
fidivrl
test
xchg
adc
xor
xchg
xchg
fs
sub
mov
lcall
mov
lahf
ds
popa
lods
mov
mov
sub
pop
mov
push
sbb
test
out
jp
xchg
outsl
nop
out
sarl
or
out
imul
ret
lret
add
sub
pop
in
push
or
dec
add
mov
outsb
cmp
dec
idivl
jecxz
call
repz
icebp
dec
cmc
xchg
fwait
aam
dec
jbe
imul
sub
xchg
jnp
adc
add
dec
xorl
xchg
out
imul
popa
notl
sub
dec
xchg
stos
sub
adc
pop
dec
jmp
test
and
and
insb
scas
mov
test
adc
jg
xchg
dec
les
fsubl
neg
or
cwtl
out
sbb
jecxz
mov
lret
lcall
subb
sbb
add
sub
pop
pop
sub
cmp
fcoms
mov
out
sbb
clc
test
fucomi
add
repz
les
lock
jmp
pushf
and
out
mov
data16
adc
imul
jge
push
sub
les
xchg
call
xor
sbb
lods
cmp
add
mov
or
test
call
je
sub
jb
inc
jmp
test
mov
sub
sub
cmpsl
pop
xchg
sbb
fwait
jb
sub
out
or
mov
in
clc
andb
jo
dec
cmp
push
clc
cmp
movsb
enter
lds
sbb
fidivl
scas
or
sbb
ror
stos
sti
sub
das
test
and
aaa
imul
bound
add
push
roll
sbb
cli
bound
rorb
out
push
dec
cmp
mov
pop
mov
out
loope
jle
sbb
adc
sub
jo
loope
sbb
in
shr
inc
push
fwait
jmp
mov
imul
movsl
xchg
jmp
cmp
adcl
pop
insl
dec
inc
pop
mov
sar
fnsave
mov
enter
je
dec
out
lret
jns
push
sub
mov
cli
flds
mov
sub
clc
daa
sbb
mov
ljmp
mov
and
xchg
imull
sub
xor
test
into
je
test
mov
loop
clc
dec
inc
lods
rcl
xchg
std
inc
jg
xchg
andl
lock
mov
dec
push
xchg
cs
fnstcw
push
outsb
push
sub
adc
push
cmp
cwtl
jecxz
repz
imul
push
xchg
xor
mov
aad
int
clc
aas
in
scas
add
andl
pop
xor
add
dec
or
cwtl
xchg
mov
jmp
add
xor
mov
inc
add
xchg
or
ret
mov
mov
std
push
leave
clc
pop
aam
sub
and
mov
movb
clc
and
sub
std
xchg
jmp
jo
ds
pop
addr16
push
test
sub
sarb
sub
xchg
loopne
inc
repz
sub
dec
aas
fld
cmc
fisubrl
xor
xor
jno
add
outsl
sub
loop
push
mov
int
mov
lret
push
xor
sub
dec
dec
mov
and
scas
stos
rcrb
jo
inc
insl
inc
sub
gs
jbe
push
scas
push
sub
ss
or
sub
inc
mov
rorl
push
clc
push
mov
sub
insb
adc
xchg
mov
addr16
cli
or
sub
cmpsb
xor
data16
add
adc
lods
lret
adc
dec
ds
inc
pop
out
enter
std
les
jbe
enter
ss
xchg
ret
adc
in
out
cmc
or
call
icebp
add
push
enter
ds
mov
loop
or
sub
bound
sub
sbb
sub
insb
cmpsl
ds
or
outsl
sub
stos
clc
adc
stc
js
pushl
mov
fadds
imull
adc
sub
jmp
mov
jecxz
les
cmp
sub
and
insb
sbb
sub
or
add
pop
enter
les
sbb
ret
push
lods
xchg
scas
fnstsw
dec
dec
cmp
ret
or
lcall
lret
dec
add
xor
sub
stos
pop
adc
sub
aas
cli
lods
call
sbb
sub
fwait
inc
and
leave
add
dec
lret
xor
push
dec
or
fs
mov
inc
pop
xchg
movsl
jno
sub
dec
sub
mov
xchg
les
das
push
lahf
cmpsb
fldcw
call
push
cmpsl
adc
or
ja
cmpsb
out
and
sarl
sub
push
xlat
adc
mov
and
sub
insl
aam
popa
cld
in
xchg
sub
push
andb
movsb
sub
stos
popf
mov
sti
sub
pop
mov
jno
xor
dec
mov
sub
xchg
push
icebp
outsl
add
pop
sub
mov
add
and
sbb
inc
jmp
jae
sbb
ficoms
push
pop
mov
mov
inc
dec
outsb
daa
cmp
sub
imul
jg
mov
sbb
xor
adc
dec
aaa
movsl
cmp
add
pshufw
mov
icebp
clc
and
mov
fst
gs
mov
std
outsb
push
pop
cwtl
test
je
xchg
addr16
jbe
dec
sub
adc
dec
or
pusha
popa
add
scas
sub
imul
sub
mov
cmc
rcrl
mov
clc
fsubrl
pop
outsb
mov
pusha
daa
jnp
add
mov
sbb
test
or
inc
shlb
aad
idiv
lods
nop
outsl
les
stc
jae
jecxz
mov
push
lods
sub
cmp
call
mov
pop
in
jno
out
shr
in
sub
and
int3
add
mov
xor
ds
aaa
jo
mov
shrl
fidivrl
and
bound
bound
xchg
pop
mul
nop
mov
mov
xor
push
adc
mov
aas
sub
sub
dec
aaa
stos
jbe
cmp
loopne
jns
xor
in
lock
mov
repnz
xor
adc
cmc
stos
inc
lds
jl
daa
push
ds
jnp
int
outsb
push
test
enter
xchg
dec
imul
xor
cmc
sub
gs
das
lret
hlt
dec
xchg
sub
and
pop
sub
add
pop
cld
inc
sti
les
adc
cmp
adc
add
into
inc
push
aas
call
and
mov
fstl
imul
mov
sub
pop
jb
adc
jmp
or
insl
scas
cmp
test
xor
xor
fistpll
pop
les
xlat
push
aaa
cmp
inc
sub
or
loop
cmpsb
cmp
daa
xor
mov
iret
lea
mov
mov
sub
iret
adc
mov
xlat
sub
fstp
popl
fdivrs
xchg
sbbb
sub
cmpsl
adc
and
loope,pt
mov
sub
xchg
fimull
inc
outsb
xor
push
mov
lcall
jae
add
jecxz
sub
sbb
cmpl
mov
int
mov
fdivl
jg
loop
pop
ret
stos
xor
or
call
mov
arpl
add
rcrl
mov
push
sub
fwait
push
jle
data16
fdivr
lret
cmp
sub
repz
adc
imul
rcrb
mov
cmp
idivl
sub
push
sub
xor
sub
test
test
push
jle
sti
scas
pop
push
sub
mov
ds
sub
jmp
ret
sbb
adc
pushf
into
popf
mov
loope
xor
xchg
sub
xor
outsl
mov
mov
adc
mov
cmpsl
sbb
jmp
sub
jp
fs
and
mov
mov
mov
add
stos
cmp
repnz
sub
enter
loope
cs
push
loop
les
sub
mov
std
hlt
in
out
sub
jge
movmskps
mov
inc
loope
popf
js
cli
ret
rol
enter
sub
test
fwait
data16
add
out
dec
cmp
push
inc
in
jbe
push
xor
cli
mov
imul
or
inc
out
push
or
rolb
xchg
movsl
icebp
cmp
jmp
pop
les
sti
stos
cs
outsl
outsb
add
mov
push
or
test
and
fdivp
stc
xchg
mov
das
sub
mov
push
in
add
and
dec
not
push
fmul
popa
sub
cmp
sub
les
notl
sub
jne
jg
sub
and
xor
push
mov
push
sbb
addr16
pop
call
out
jmp
mov
cmp
ds
pop
in
sub
aam
pop
fcom
jns
cmp
jnp
adc
lahf
push
les
add
and
leave
ficomps
aad
lods
in
and
sub
out
nop
rcr
mov
out
mov
sbb
sub
mov
push
add
in
cmp
cmp
xor
push
mov
mov
mov
divl
dec
mov
sbb
pop
lods
test
xor
les
loopne
sub
adc
imul
sub
mov
push
lds
enter
sub
inc
leave
ret
push
push
mov
jo
stos
popa
sbb
inc
rorb
je
das
dec
or
push
sahf
push
fbstp
fmull
mov
dec
push
pop
adc
dec
add
shll
insb
push
arpl
loop
push
sub
mov
xorb
sub
xchg
pop
or
insb
xchg
into
adc
sbb
sbb
outsl
sbb
gs
dec
mov
cmpsl
movsb
fsubl
test
sub
mov
jno
push
fs
jle
test
test
or
pushl
pop
xchg
stos
int3
pop
dec
imulb
jg
jge
push
cmp
popf
jb
pop
mov
into
sub
das
jmp
test
pop
xor
fisttps
leave
sub
stos
addr16
jns
ret
inc
lret
fiadds
add
cmp
jmp
rcrb
out
adc
stos
mov
inc
sub
test
sbb
lds
loop
mov
mov
insl
stos
dec
jmp
clc
cld
xor
pushf
std
fisubrl
mov
mov
push
sti
fdivrs
mov
inc
mov
xchg
mov
adc
outsl
jns
mov
mov
aam
out
jbe
idivl
enter
cmp
loop
loop
mov
jmp
cli
lods
out
call
loope
test
negl
mov
mov
jg
mov
xorl
push
sub
dec
mov
bound
test
aam
sahf
xor
rcrl
jmp
clc
aam
push
sub
mov
xorl
lcall
sbb
xor
fldcw
jo
mov
iret
lret
cli
test
ret
ja
inc
movsb
inc
cmp
pop
or
jg
pop
or
sub
sbb
lods
ja
ds
loope
jle
leave
jns
dec
or
scas
sti
out
cmpsl
cmp
inc
cli
adc
lods
and
pop
pop
clc
dec
mull
xchg
fs
ret
out
dec
inc
or
mov
rolb
fidivrl
pop
rorl
jno
push
pushf
push
clc
xchg
xchg
imul
jo
lret
mov
insl
mov
call
ss
addr16
shl
jl
mov
sub
xchg
outsl
pop
inc
xchg
stos
scas
and
pop
push
movsb
sub
aaa
dec
mov
pop
lea
jne
les
out
sub
pop
iret
dec
push
sti
and
lea
and
mov
sub
popf
dec
out
dec
sub
sbb
int
sbb
mov
cltd
lods
out
xor
xor
push
mov
ljmp
adc
dec
es
mov
xchg
int
fbld
cwtl
scas
in
mov
repnz
sub
pop
mov
mov
xchg
pop
sbb
pop
lock
stos
movl
sub
mov
push
lahf
lock
aad
popa
sbb
test
push
test
ljmp
mov
outsb
xchg
andl
sub
mov
jns
sub
test
and
out
sub
mov
jecxz
gs
xchg
test
movb
add
scas
test
aas
xchg
sarl
add
pop
lahf
jmp
sub
insl
sub
sti
ds
orb
mov
jae
in
sub
jb
rorl
xor
xchg
cld
push
mov
adc
scas
cwtl
sbb
or
xchg
sub
cmpsl
sti
and
mov
es
jp
sub
pop
jle
mov
xchg
sub
xor
mov
fcmovb
clc
imul
out
lret
sub
and
push
fwait
jbe
sub
xchg
test
movsl
fisubs
cwtl
mov
add
ss
jl
mov
pop
push
mov
sub
nop
popa
xchg
cmp
ja
sub
xchg
leave
dec
or
mov
hlt
or
dec
fcmovb
loope
scas
fsubrs
cmpsl
rolb
xorb
gs
mov
into
sbb
push
sub
ret
cmp
stc
jb
sbb
std
xor
out
stos
into
xor
in
sbb
cmp
aas
mov
popf
adc
xor
and
push
pushf
jne
mov
cmpsb
inc
push
xchg
pusha
mov
pop
test
call
dec
inc
popa
pop
cmc
test
outsl
sahf
mov
std
fldcw
pop
popf
out
jmp
sub
jle
fisubrl
xor
push
inc
test
push
jge
xor
imulb
cmp
inc
std
push
push
popf
addl
cmp
xor
mov
xor
cmpsl
dec
mov
pushf
fisubrl
pop
xchg
std
mov
mov
dec
int
pop
adc
loope
cwtl
int3
cmpsl
sub
pop
sbb
dec
sub
adc
sub
adc
push
xor
sub
testl
mov
jl
pop
daa
or
sbb
mov
das
sub
sbb
sbb
insl
clc
out
sbb
mov
fcmovb
xchg
in
sub
dec
xchg
imul
ds
out
ficompl
addr16
and
aad
jmp
ffree
mov
enter
sub
ja
cmp
adc
les
sbb
jb
jge
push
pop
stos
test
lds
dec
lock
test
xor
ss
scas
movsb
mov
mov
stos
sub
gs
insb
add
sub
adc
call
sbb
sub
ds
lock
sub
pop
in
subl
jns
jecxz
sub
adc
ss
mov
imul
out
push
sbb
adc
dec
lret
add
ds
divl
dec
sti
lret
sub
dec
pop
repz
lock
and
roll
dec
inc
into
mov
arpl
lds
aam
sub
cld
xor
das
imul
jno
repz
sub
pop
sahf
xor
xlat
out
pop
imul
incl
hlt
ss
out
pop
mov
scas
adc
aaa
xchg
mov
sub
add
fnstenv
imul
enter
fistpl
ss
cmp
or
loope
test
cwtl
cwtl
insl
sub
clc
cld
int
cli
adc
sub
sub
pusha
or
fimull
in
movsl
sbb
ds
xor
push
sub
xlat
sub
or
mov
dec
movsl
outsb
scas
ja
sub
xchg
xchg
pushf
imul
sahf
sub
adc
in
sbb
mov
mov
in
mov
mov
push
sub
and
in
sub
bound
popf
sub
push
jp
mov
jbe
jb
subb
leave
or
cmp
lods
jmp
lods
mov
mov
adc
popa
xchg
dec
push
clc
cmp
push
jp
mov
xor
mov
sbb
push
neg
in
test
push
and
loopne
sub
xchg
shlb
lretw
jmp
xchg
lcall
sub
out
adc
push
pop
sarb
pop
pushf
jecxz
aad
xchg
sti
adc
clc
sub
mov
add
enter
mov
mov
lock
fisubl
enter
int3
imul
dec
cli
lds
ret
dec
scas
or
test
sub
aam
add
sub
fmuls
xchg
ljmp
xchg
loopne
jb
cmp
xor
sub
stos
into
mov
loopne
push
sub
iret
push
sbb
les
cmp
popa
das
out
dec
xchg
inc
jo
adc
leave
jl
mov
fisttpl
mov
push
nop
xlat
clc
add
mov
mov
hlt
jb
callw
gs
dec
sub
mov
or
and
js
iret
aas
in
data16
mov
shll
in
mov
repnz
gs
sbb
popa
mov
inc
sub
clc
xchg
push
cltd
cmp
rorb
imul
mov
jecxz
loopne
add
sub
cmp
aas
push
jge
and
mull
sbb
jns
cmp
test
xor
mov
movb
sub
mov
mov
mov
in
sub
pop
or
dec
sub
and
ret
sbb
jnp
ja
repnz
cli
adc
fstps
cmpsl
nop
sub
aaa
mov
sbb
jge
dec
leave
jo
add
mov
mov
ret
loopne
cmp
add
mov
in
pusha
or
mov
aad
pop
adc
fmull
dec
clc
jp
mov
dec
dec
shr
jge
mov
push
mov
aam
sub
out
stos
in
arpl
sub
dec
shlb
insl
or
rorl
dec
pop
mov
sub
mov
sub
inc
andb
es
inc
fldt
imulb
cmp
jns
out
sub
dec
jbe
dec
and
mov
add
mov
sub
loop
test
dec
aad
adc
xchg
clc
shll
cmc
sub
mov
jae
mov
fwait
jl
out
add
xchg
loop
inc
sarb
lea
cmp
sub
ret
xor
stos
sub
sub
inc
cmc
sbb
ja
ds
call
lods
add
stc
imul
jp
and
sarl
iret
adc
inc
sub
pushf
fisubrl
sub
add
pop
aad
cwtl
sub
and
dec
or
lcall
stc
ds
out
and
sub
test
pop
cmp
sbb
stos
mov
bound
and
jle
pushf
sub
pop
inc
popf
cmp
test
repz
add
mov
add
dec
stc
jbe
aaa
adc
add
movntps
sbb
fnstenv
add
inc
pop
daa
xchg
xchg
out
mov
pop
add
push
xor
es
scas
test
push
mov
cmpsb
dec
mov
outsl
xchg
insb
stos
adc
arpl
push
xchg
add
adc
add
add
stos
add
fistps
js
xchg
sub
hlt
sub
rclb
int3
or
or
in
inc
enter
addr16
cmp
aad
clc
call
pushf
or
sub
fldenv
popa
mov
addr16
mov
sub
cmp
pusha
ja
and
ljmp
xchg
stos
sbb
or
mov
add
mov
or
sub
push
dec
movsb
fidivs
and
jg
fucomip
outsb
sub
es
push
push
ds
xor
adc
fwait
daa
or
push
add
sub
pusha
clc
cmp
push
inc
dec
dec
xor
enter
pop
sub
cmp
jno
lods
pop
sbb
sub
mov
sub
cmp
int3
mov
jge
xor
xchg
sub
mov
or
ds
mov
fstpl
fdivrs
pop
lods
scas
fdiv
ds
xchg
pop
mov
push
pushf
in
mov
mov
and
sub
dec
shrl
insl
mov
sub
out
dec
add
push
mov
mov
mov
stos
mov
clc
int3
jo
mov
mov
pop
test
push
sbb
and
sbb
lcall
out
fsubrl
jo
jmp
pop
in
push
add
jmp
cli
mov
sbb
and
adcb
pushf
aam
cmpsl
enter
push
push
xlat
gs
jne
stc
mov
fcoml
cmp
ret
jecxz
enter
sti
pop
enter
mov
push
add
jno
clc
aam
mov
add
cmp
stos
jl
cwtl
xchg
xchg
push
lahf
cli
inc
or
push
enter
sub
adc
mov
loopne
pop
les
and
sahf
sbb
pop
aas
ficomps
cmp
mov
xchg
jmp
push
outsb
daa
pop
shll
stos
or
and
xchg
lahf
aas
mov
mov
sbb
add
xor
xchg
fdiv
xchg
pop
fisubl
jp
sbb
bound
inc
dec
jecxz
xchg
aaa
xchg
cmpsl
mov
das
loope
cmc
push
cmp
mov
pop
das
xor
pop
cmp
adc
pop
call
push
and
rcrl
cld
push
call
xchg
mov
int3
aad
push
shl
push
sub
lahf
js
mov
loopne
inc
jmp
cmp
pusha
or
push
mov
and
gs
pop
mov
mov
leave
jo
movsl
insl
push
push
mov
aam
int
xchg
mov
jnp
dec
push
scas
pop
in
les
push
or
pushf
add
imul
dec
cmpsl
cmpsl
jne
jecxz
aam
sbb
negl
in
data16
xor
in
mov
call
data16
pop
dec
lds
pop
add
aaa
mov
or
movsb
push
jmp
sti
mov
out
push
mov
icebp
dec
cmpsb
rcll
push
push
iret
outsb
fsubrp
xor
dec
cwtl
or
imul
popl
and
push
jp
fmulp
stc
lret
dec
cmp
stos
or
test
xor
scas
push
pop
cwtl
sub
fs
roll
jbe
lods
sub
and
mov
push
jmp
push
test
adc
cmp
dec
rcrb
sbbl
aas
push
jno
ud0
pop
xor
cmp
cmp
jne
repz
adc
addr16
je
lods
shlb
mov
sbb
cmp
repnz
sbb
mov
xchg
fs
jmp
sti
call
and
mov
movsb
cmp
inc
cwtl
xchg
scas
dec
dec
stos
dec
scas
push
mov
ficompl
lret
cs
stos
outsb
push
clc
sbb
mov
dec
fcomps
xlat
sub
ss
xchg
cmp
cmp
outsl
mov
jmp
ds
inc
pop
xlat
push
mov
jno
popl
add
retw
clc
addr16
cli
mov
stc
push
mov
loop
and
sub
or
cwtl
rorl
lds
push
insb
push
cli
lods
dec
aas
mov
bound
hlt
jns
sarb
xor
xor
lret
sub
mov
jge
ret
imul
and
fwait
sbb
mov
mov
jno
xchg
jne
rclb
clc
inc
xchg
nop
test
lds
fwait
sub
mov
scas
jnp
scas
push
sahf
jbe
dec
cmp
ret
aam
sbb
jge
leave
xor
adc
push
cmp
adc
sbb
lret
repnz
xchg
and
pop
dec
outsb
jb
fwait
and
push
shrl
mov
out
sbb
push
iret
xchg
jnp
sub
jae
vsubpd
lcall
int3
adc
movsb
out
imul
imul
pop
push
insb
test
xchg
ret
sub
sbb
or
out
and
mov
inc
fdivrs
pop
js
loope
pop
xlat
add
cli
popf
push
push
jecxz
inc
shr
lods
icebp
aas
xor
dec
add
repz
xor
xchg
rolb
out
gs
into
jmp
jmp
add
rcrl
dec
sbb
stos
pop
jge
xor
ljmp
dec
loop
mov
or
cli
push
sbb
movsb
sub
inc
jo
sbb
jmp
mov
in
mov
cmp
inc
sbb
out
and
bound
and
bound
mov
sarl
jp
loope
test
adc
xchg
std
push
push
nop
or
add
hlt
dec
push
mov
jle
es
or
cli
pop
mov
inc
xor
push
cli
cmc
dec
pop
insl
pop
fs
loope
sub
sub
xor
pop
test
sub
aad
mov
xor
addr16
cmp
roll
push
pop
mov
fisttpl
pusha
and
push
filds
and
xor
fwait
pop
add
ret
in
gs
xchg
jl
ret
push
lods
xor
test
ret
inc
add
cmpsl
xchg
sub
in
fst
out
rcr
fisubs
lcall
fstps
lds
rol
mov
loop
lcall
xchg
add
sti
aas
sub
les
pop
repz
aad
scas
jns
loop
das
cmp
data16
pop
xchg
or
push
clc
xchg
pusha
xchg
push
inc
push
cmp
pop
iret
scas
pop
imull
adc
xchg
mov
xchg
stos
xor
xor
push
jnp
sub
mull
hlt
imulb
fcomi
pop
clc
outsl
dec
lods
cltd
and
in
inc
pop
xor
fs
in
xor
call
fcmovb
ss
mov
push
ss
mov
ja
or
inc
xchg
push
int3
dec
call
scas
shll
add
add
xchg
test
cmp
popf
das
xchg
push
insl
pushf
or
mov
pop
nop
mov
addr16
aad
adc
add
jmp
pop
mov
loope
mov
mov
ret
dec
or
xor
or
cmp
xor
mov
sub
push
mov
mov
jmp
faddl
jne
sbb
lods
je
das
mov
add
stos
and
adc
jbe
ss
dec
xor
push
lea
pushf
push
push
ftst
inc
xor
imul
scas
ret
sbb
cmp
stos
sub
dec
popf
insb
inc
daa
cmp
imul
jne
fistps
jge
into
or
sub
fcomip
pop
mov
pusha
ficoms
lcall
scas
push
cmpsl
mov
std
inc
dec
addr16
mov
dec
lret
sub
jae
inc
sbb
cwtl
inc
xchg
xor
xchg
jnp
xchg
mov
data16
pop
ret
mov
cmp
subb
and
cmp
sbb
jae
loop
xchg
jo
scas
aad
lret
stos
push
mov
shll
js
push
sti
pop
or
les
mov
sbb
mov
sub
inc
push
xor
leave
jg
imul
cmp
lods
in
xor
mov
xchg
les
dec
or
mov
push
xor
push
cmp
xchg
and
fdivrs
add
fstps
out
push
jmp
jae
sti
fwait
cmp
scas
pop
dec
clts
pop
das
push
subl
push
jle
lahf
lds
imul
outsb
fnstcw
add
sbb
sti
or
clc
popf
xlat
repz
rol
cli
mov
lret
mov
mov
fimuls
push
daa
shr
push
cmp
pop
and
xchg
dec
cmp
mov
mov
cmp
inc
push
jmp
std
mov
repnz
jmp
or
and
mov
xchg
scas
aad
adc
sub
dec
mov
ds
pop
dec
lods
inc
push
lea
sub
mov
sub
push
mov
push
sbb
pusha
inc
fcmovnb
sub
cmpsl
ds
add
sub
test
add
cmp
in
imul
xlat
data16
aam
call
xor
sbb
notb
cmp
sub
lods
mov
stos
aam
outsl
inc
sbb
lret
inc
pusha
ficompl
sub
inc
pop
sahf
mov
xor
xchg
testb
or
cmpsb
add
popa
push
sub
mov
xchg
jge
mov
test
cltd
loope
or
dec
pop
cmp
pop
sub
clc
push
adc
jb
jne
aad
sbb
sub
sbbl
dec
loop
enter
push
pop
cld
add
shrb
add
and
xchg
jnp
pop
ss
mov
inc
sub
loope
rorl
mov
das
cmp
arpl
ret
imul
sub
scas
cltd
push
sub
sub
push
and
push
adc
ds
rolb
push
ss
fadds
xor
sahf
sub
sub
mov
push
fisubrs
sbbl
sbb
in
add
cmpsl
sub
pusha
pop
xor
jmp
sub
cmp
sub
mov
jae
jmp
sub
mov
int3
sub
inc
ret
cmc
lahf
out
pop
movb
enter
adcb
in
aas
sub
call
mov
mov
sub
outsl
out
push
pop
or
adc
daa
mov
cli
inc
stc
jbe
jecxz
xchg
in
xor
dec
xor
shrb
cmp
xlat
scas
cli
jns
add
pop
add
js
outsl
dec
or
add
mov
pop
mov
pop
xor
sub
inc
arpl
inc
jge
adc
pop
xor
inc
shr
out
or
roll
pop
test
cwtl
mov
rcrb
xlat
and
sub
imul
das
mov
mov
jl
jmp
jg
je,pn
cmp
out
sub
xchg
in
sub
fidivrl
fwait
mov
sub
shrb
cmc
dec
add
subb
adc
add
ffreep
movsb
sub
into
test
xor
call
lcall
sub
lods
or
shll
and
mov
sub
out
shr
add
inc
fsubs
inc
xchg
sub
dec
xor
sbb
jnp
sub
aam
jb
jle
les
push
sete
and
movsb
cmpsb
in
push
ret
adc
sub
jne
lret
xorb
call
lods
mov
and
mov
xor
nop
dec
adcb
xchg
daa
sub
jmp
or
cltd
dec
fwait
inc
sub
sub
xorb
push
outsb
inc
scas
sub
xchg
push
sub
jo
cmp
and
test
jbe
call
and
mov
shrb
cmp
pop
sub
notb
lods
insl
faddp
pop
in
rolb
in
sub
stos
mov
adc
and
inc
jbe
sub
xor
pop
lea
dec
sub
decb
nop
jg
pop
push
adc
push
sub
lock
cli
push
std
mov
imul
out
fs
sub
shlw
test
loop
test
sahf
sub
add
sbb
push
out
or
repnz
lock
sub
adc
clc
sub
inc
fildl
mov
add
sub
scas
fadds
sub
xlat
or
mov
inc
test
std
add
xchg
sub
sbb
ret
loope
jge
jbe
sbb
notb
pop
stos
xchg
sub
xchg
add
stc
or
mov
aas
test
popa
adc
xchg
jbe
inc
sub
push
js
cmp
std
daa
dec
lcall
test
xlat
fsubrs
in
xchg
mov
loop
sub
aam
and
andb
sub
loop
pushf
leave
arpl
and
daa
imul
repz
stc
pop
sub
loop
mov
mov
shlb
inc
ficompl
pop
sub
cmp
loop
jge
sub
fsubrl
mov
pop
xor
xchg
dec
push
cmpsb
fcom
push
adcb
inc
cmc
fistl
movsb
jg
scas
push
mov
rcrl
lds
sub
mov
repnz
fdivrs
sub
ss
adc
add
cli
pop
mov
sub
jecxz
imull
popf
push
mulb
fwait
shrl
aaa
icebp
ja
pop
ljmp
outsb
xchg
mov
lcall
stos
add
sub
pushf
imul
xor
mov
sub
in
cmp
fisubrs
sbb
shll
out
andl
into
arpl
sub
xchg
outsl
jae
adc
stos
cmp
add
les
dec
testl
nop
inc
fs
mov
iret
fisubrs
sbb
sbb
lret
cmpsb
out
pop
aaa
fbstp
push
jne
push
sub
sbb
push
cmp
jg
mov
mov
sbb
add
xor
cmpb
pop
arpl
ja
fstps
xchg
pop
jbe
mov
loope
push
cli
pusha
call
push
in
int
out
mov
cs
iret
sbb
sub
push
lods
mov
cmp
cmp
call
insl
add
mov
xor
jb
add
jno
enter
subb
cmp
pop
sbb
idivl
push
add
sbb
inc
pop
in
js
sub
jge
pop
psubd
mov
add
fcompl
out
test
ret
lret
sub
sbb
fistpll
inc
pop
xor
les
jo
adc
call
cltd
pop
or
scas
shr
sub
es
sub
and
hlt
mov
sub
and
aad
jmp
rcl
enter
inc
mov
lds
dec
rorb
sub
jnp
mov
lret
mov
push
cwtl
data16
pop
mov
je
outsb
inc
mov
xorb
and
sbb
enter
xor
xor
or
mov
inc
pusha
jo
rcrl
fwait
inc
jle
pop
lahf
fistpl
call
addr16
sbb
adc
shrl
jb
sub
mov
mov
sub
inc
push
sahf
and
jle
sbb
pop
sub
int3
jne
in
aaa
xor
repz
mov
mov
sbb
sbb
xlat
sub
loope
or
lods
hlt
movaps
push
popf
in
pop
jbe
sub
sbb
adc
leave
and
stc
dec
xchg
fsubrl
jecxz
and
sub
insl
push
movsb
aam
fisubrl
mov
es
or
fwait
dec
mov
into
jns
mov
movsb
data16
fidivrs
push
and
xor
push
imul
jge
aam
stos
add
jmp
out
test
js
mov
inc
sbb
sub
add
in
das
cmc
popl
cmp
lret
call
mov
repz
clc
push
in
insl
outsb
dec
and
jbe
enter
adc
addl
int
sti
sub
hlt
in
inc
xor
imul
and
sub
cs
pop
sbb
pop
std
cld
jp
stc
xchg
leave
insb
push
sub
jmp
mov
xor
outsb
sbb
and
stos
clc
and
mov
mov
in
sti
mov
xchg
add
sbb
vcvtps2pd
pop
mov
sub
sbb
stos
mov
xchg
fistpl
sahf
xor
aas
shll
mov
in
pop
rcll
mov
xor
and
xor
dec
pop
mov
jmp
dec
out
mov
popf
push
cmp
fisttpl
aam
sti
mov
in
out
mov
jle
or
and
lods
jmp
mov
or
ljmp
repz
fchs
cli
jno
mov
sahf
push
push
pop
outsl
dec
mov
dec
cmp
mov
cmp
cli
les
sub
mov
mov
jp
add
maskmovq
notl
jno
test
sbbl
add
aas
repnz
js
test
sbb
inc
jnp
stos
push
cmc
clc
pushf
inc
push
lods
popf
dec
imull
dec
sti
into
cmpsb
mov
dec
clc
xchg
cmpl
nop
cwtl
rcll
es
dec
and
jmp
pop
sub
pop
pop
clc
ja
lcall
xchg
jne
jbe
and
sbb
push
sub
scas
mov
pop
adc
scas
shrl
and
in
mov
jg
mov
fists
leave
out
sbb
adc
clc
test
or
enter
inc
pusha
sbb
imul
dec
shlb
adc
inc
dec
dec
int
imul
das
lods
cmc
clc
push
mov
xlat
push
mov
mov
cld
mov
jne
xchg
add
xor
push
lds
xchg
inc
or
xchg
or
aas
adc
in
xor
dec
sub
out
lcall
fcomi
inc
ds
push
gs
or
dec
push
dec
les
sub
jge
sub
orl
js
adc
loopne
xor
mov
les
mov
stos
xchg
mov
pusha
leave
jae
stos
add
sahf
pop
sub
jne
xchg
sub
xor
sarl
insb
push
jmp
loop
pop
sub
dec
xor
mov
cmp
adc
stos
cmp
mov
mov
mov
xchg
sub
add
jb
popa
dec
or
and
mov
cld
xor
test
sub
js
cmp
sub
hlt
ret
sub
mov
dec
in
add
cwtl
sub
js
mov
ror
sub
jg
mov
cltd
sbb
adc
rorl
daa
lea
mov
test
mov
stos
jae
stos
fsub
or
sub
pop
sbb
xchg
sub
repnz
mov
dec
inc
sub
dec
xor
test
mov
adc
sbb
ds
nop
ja
mov
sbb
negl
outsl
mov
push
and
xchg
fbld
ds
mov
loopne
repnz
mov
cmpsl
sub
out
dec
sub
xlat
out
push
xchg
stc
arpl
push
shll
add
sub
shrl
or
psubb
pushf
inc
movsl
push
mov
test
test
stos
ss
jmp
mov
pop
and
adc
idiv
cltd
icebp
sub
inc
or
pop
jb
xor
xchg
cmp
fisttpll
add
sub
inc
popa
mov
mov
push
test
mov
dec
out
les
invd
rcll
loop
push
inc
pop
subb
inc
shrl
enter
stc
inc
outsb
movb
pop
xchg
sbb
dec
pop
sub
xchg
fdivrl
popl
imull
xchg
sarl
mov
dec
dec
and
push
mov
fwait
jg
inc
shrl
ret
mov
sarb
and
push
in
sub
mov
sub
dec
push
sub
xor
mov
outsl
mov
les
sbb
jae
in
sub
cmp
test
ds
xchg
inc
movsl
je
add
push
xor
fwait
shl
mov
push
imul
stos
jg
sbb
sbb
sub
dec
into
lods
leave
cmp
jge
ret
sub
mov
stos
lret
push
enter
lods
jne
aad
nop
clc
dec
popa
fisubrs
sub
xor
idivb
clc
roll
jae
fstp
stos
adc
sub
ret
jae
or
stos
out
xchg
stc
mov
jbe
pusha
push
push
fdivs
xor
and
sub
sahf
cmp
dec
sbb
inc
xchg
call
mov
adc
and
mov
ficoml
inc
bnd
shrb
cmc
push
jb
pop
adc
mov
lret
imul
fwait
sub
jmp
push
pop
jno
mov
test
outsl
xor
popf
jmp
aas
sarl
les
mov
sbb
in
sub
inc
mov
subb
cmc
pop
push
shrb
mov
popa
xchg
cmp
stos
sub
pusha
mov
jecxz
sub
xor
cmp
outsb
xlat
sub
sbb
clc
loope
adc
mov
ret
pop
sub
mov
popa
call
stc
jbe
xchg
stos
mov
flds
inc
call
mov
clc
cltd
add
mov
sub
stc
out
vmovapd
icebp
xchg
outsl
pop
ljmp
call
stc
lret
enter
sub
add
cwtl
repz
and
movsb
daa
repnz
stos
lcall
incb
sti
ret
sub
or
lods
jmp
das
add
push
jmp
jnp
cwtl
sub
sub
jle
test
repnz
gs
or
adc
sarb
fdivrl
sub
pop
out
pop
mov
pop
xor
movl
mov
lods
rorl
imul
or
sub
loopne
cltd
fbld
cmpsl
cli
lds
sub
jne
or
call
lcall
popa
daa
inc
insl
sub
and
cli
inc
sub
dec
jno
pop
sub
hlt
push
sub
pop
add
lods
sub
enter
xor
sub
iret
roll
sub
nop
in
or
inc
mov
dec
je
lods
sti
or
xchg
test
sub
sub
xor
sub
cmp
sub
icebp
mov
imul
fisubl
adc
jl
cltd
or
popf
icebp
add
iret
cmc
jle
or
sub
pop
mov
and
das
ret
sub
mov
std
or
xchg
xchg
mov
aas
xor
test
inc
inc
out
mov
imul
orl
cmpsb
jle
sub
dec
fldt
xor
scas
mov
and
scas
xor
cmp
lods
sub
aaa
lret
inc
mov
adc
ds
and
mov
dec
cmc
aaa
arpl
pusha
inc
sub
xor
call
bnd
sub
fisttpll
mov
popa
sub
inc
add
sbb
xchg
dec
fwait
push
rorl
sub
adc
sub
and
and
sub
sahf
sub
lock
pop
push
fcoms
clc
sub
xor
or
xor
xchg
pop
movaps
call
cld
test
xor
adc
jb
loop
int
jecxz
aas
jl
push
addr16
sub
out
add
fimull
dec
push
addb
stos
leave
xor
mov
pop
nop
insl
sti
lods
sub
orb
imul
jns
ffreep
inc
fnstenv
sub
push
lcall
aaa
std
ja
sub
pop
pop
sub
loopne
mov
cmp
mov
inc
lcall
pushw
mov
sub
sub
andb
xchg
push
push
dec
data16
or
jb
stos
shrb
nop
xor
push
cld
shll
dec
sbb
adc
push
xchg
in
xor
pop
jg
push
mov
das
and
mov
cmp
and
xchg
mov
add
mov
aas
imul
mov
jnp
fs
cmp
add
sub
add
sbb
inc
loop
sar
mov
pop
adc
test
mov
into
sub
jl,pn
imul
arpl
aaa
sbb
mov
mov
leave
dec
adc
push
xchg
popa
jns
and
dec
sub
mov
xor
sub
jmp
jge
cld
dec
cmpsl
mov
mov
sbb
sub
gs
mov
push
outsl
icebp
out
ror
movsl
sub
cmpsb
insl
sbb
pop
pop
or
ret
bound
imul
js
push
sub
movsl
jae
adc
adcl
data16
test
les
icebp
fs
shrl
push
std
inc
and
sub
jb
fldcw
dec
mov
in
jns
adc
xchg
stos
pop
mov
ljmp
cmp
xchg
fwait
inc
cmpb
stos
or
sub
push
test
sbb
cwtl
lret
dec
sub
out
sub
scas
out
sahf
test
pop
les
jne
icebp
shrb
jnp
je
jmp
xchg
lock
stos
fstpt
dec
jecxz
dec
cmpsb
sahf
cld
dec
jo
enter
jno
jae
inc
jle
sub
insl
sbb
push
ret
sub
push
cmp
shrl
xor
outsb
cmp
mov
inc
dec
or
enter
sbb
outsl
je
sub
push
push
outsl
xor
popf
lretw
aaa
es
mov
std
call
sub
imul
cmp
bound
add
xor
repnz
mov
push
nop
or
add
jb
sar
dec
dec
mov
fisubs
sti
lret
leave
adc
jns
enter
inc
xlat
and
xchg
jb
push
add
mov
cwtl
fdivs
dec
and
or
sbb
imul
test
lods
lret
or
scas
cmp
add
sub
xchg
insl
mov
or
adc
ljmp
adc
xor
out
or
ss
sub
push
sub
outsl
sti
adc
mov
icebp
ds
push
mov
or
sub
lret
dec
push
push
pushf
fildll
xlat
inc
adc
inc
cli
mov
mov
inc
sub
int
addr16
sbb
jae
int
aam
stos
fucomi
adc
inc
jo
jo
jmp
cli
popa
pop
jg
add
mov
imul
push
movsb
clc
ds
cli
lods
testb
pop
loopne
lret
xchg
out
pushf
jge
testl
sub
cmp
das
cmpsb
pop
mov
mov
mov
xor
mov
add
ss
fstpt
mov
mov
mov
sti
fwait
sahf
jecxz
push
xchg
xchg
dec
jo
adc
lods
xchg
inc
fucomip
jge
call
leave
jg
cli
push
stos
loop
sub
sbb
adc
adc
nop
mov
fmul
fiaddl
and
stc
mov
inc
xrelease
sub
push
ficoms
gs
push
push
fsub
int3
pop
inc
dec
inc
adc
int3
repnz
sub
add
sub
leave
sbb
fs
sub
cmp
fcom
mov
stos
addb
push
jnp
mov
addr16
xchg
dec
adc
jle
clc
xlat
dec
mov
sbb
xor
cmp
dec
cli
dec
mov
push
adc
loope
scas
inc
dec
cmpsl
sti
and
idivb
mov
outsb
mov
sub
adc
jo
push
xchg
sti
mov
xlat
in
dec
mov
clc
insb
mov
cmp
pop
test
jne
pop
adc
xor
clc
hlt
pop
mov
ds
push
mov
cwtl
jmp
xor
sarl
add
in
inc
sti
sahf
adc
mov
pop
loope
or
sub
fstps
add
jle
arpl
divl
mov
push
les
mov
sbb
jnp
push
je
lret
sti
jl
dec
bound
lcall
xchg
mov
xor
xchg
jle
push
loopne
imul
test
inc
adc
push
xor
xor
add
fsqrt
out
in
test
aaa
test
movsl
clc
mul
mov
xor
xor
js
shrl
lock
adc
sub
addr16
imul
dec
xor
sub
ss
rcrl
movsl
sti
or
add
mov
cmpl
dec
xchg
addr16
and
sti
clc
jecxz
mov
lcall
in
mov
imul
call
mov
fs
xor
fmuls
cmp
bound
push
jg
cltd
int3
test
mov
sub
pop
ret
and
or
adc
inc
and
mov
dec
push
mov
jmp
jno
lret
inc
pop
mov
mov
imul
and
xchg
aas
cmp
sbb
cwtl
addr16
insl
lret
arpl
out
lret
lret
or
fxam
mov
push
loop
repnz
jb
cmpsb
scas
dec
rorl
addr16
jl
add
xchg
ret
shlb
js
push
lret
sbbl
push
cmp
mov
into
scas
imul
popf
fnstenv
add
add
pushf
cvtps2pd
xchg
jp
inc
addr16
pop
pop
dec
jns
pushf
mov
call
insl
mov
mov
push
fs
ret
xchg
sbb
in
sub
out
lcall
test
sti
jecxz
pusha
scas
imul
clc
insl
inc
xchg
lods
jg
jnp
pop
fldt
mov
mov
arpl
lret
dec
inc
arpl
mov
into
adc
and
xor
stos
clc
add
sub
inc
mov
les
mov
adcl
scas
cwtl
and
test
int3
jno
call
cli
icebp
repnz
mov
jmp
loope
stos
xor
movsb
in
ja
clc
sbb
and
mov
sar
add
xchg
clc
cmp
das
dec
xchg
call
push
push
dec
int3
mov
inc
and
jp
xor
mov
cmp
addr16
roll
push
loopne
sub
xor
addr16
js
fidivrl
jns
jmp
lds
cmpsb
pop
or
mov
mov
cmc
cli
cltd
loopne
stos
pushf
pusha
movsb
addr16
lret
add
ss
stos
lods
bound
xchg
sub
addr16
pusha
sbb
cmp
adc
pop
lret
ret
call
ljmp
xor
or
add
dec
push
icebp
stos
sbbb
mov
cmp
js
std
cld
std
rclb
out
dec
pop
push
xlat
mov
cmp
sti
out
xchg
push
out
inc
push
adc
xor
mov
mov
enter
iret
stc
cmp
dec
jbe
and
pop
push
subl
jbe
or
ret
in
imul
add
xchg
rcrl
mov
mov
jmp
jmp
es
mov
cmp
jb
mov
mov
adcb
xor
cmp
jnp
dec
gs
mov
loope
je
popa
clc
std
sub
popf
jno
push
mov
movsb
dec
ret
jmp
lock
jae
mov
sti
xor
enter
nop
jmp
repnz
sti
ffreep
outsl
jmp
mov
cmpb
jae
ret
in
daa
xchg
loopne
js
xor
adcl
mov
rcrb
mov
test
xchg
sub
lret
out
daa
rcrl
and
inc
leave
mov
out
push
inc
out
lods
jl
es
inc
sbb
dec
sbb
faddp
or
out
in
aaa
das
add
je
jp
push
xlat
pop
xor
dec
inc
cmpsb
cmp
cmp
mov
push
xor
popl
ret
add
jae
xchg
sub
inc
push
push
rolb
rolb
mov
sub
js
in
mov
or
inc
dec
inc
sbb
icebp
push
mov
repz
lret
cmp
dec
insl
mov
inc
out
mov
jmp
sbb
clc
int
cmp
push
jmp
in
add
fs
xchg
das
in
je
aad
sbb
sti
ret
jl
test
stos
inc
xchg
data16
mov
add
inc
inc
jb
lret
inc
lret
mov
out
sub
stos
lcall
mov
pusha
cwtl
in
push
sar
sbb
inc
jbe
mov
fcomps
dec
rol
movsb
aam
mov
mov
cli
add
and
clc
loopne
sub
jo
sub
cltd
adc
dec
loopne
dec
pop
sub
adc
pop
push
dec
out
push
sub
cmpb
mov
or
adc
adc
mov
pop
sub
add
xchg
xchg
sub
aas
pop
mov
lcall
sub
adc
aad
stos
lret
or
stos
insb
pop
out
enter
pinsrw
sub
push
dec
xchg
iret
xor
ds
int3
mov
imull
jl
jne
and
in
call
sub
adc
aad
mov
inc
fwait
or
mov
sub
scas
out
mov
ss
sbb
xchg
sub
jo
add
leave
sub
or
sub
xchg
outsl
jge
pop
sbb
mov
clc
lahf
sub
and
and
xchg
dec
cmc
outsb
adc
sub
or
js
jo
sbb
mov
or
inc
sub
scas
in
rcrl
cmp
les
jl
lods
add
xchg
xchg
inc
movsl
and
adc
dec
pop
adc
xchg
in
testl
int
popa
pushf
inc
jmp
xchg
mov
clc
movsl
stos
sub
push
sub
sbb
jo
inc
orl
jmp
sub
fisubrl
popa
sub
and
aam
inc
orl
fsubs
repnz
popf
ljmp
sub
and
add
sub
pusha
mov
outsb
popa
mov
enter
cmp
mov
sub
xor
cli
pop
sub
or
pusha
mov
sub
lahf
xchg
jb
sub
addr16
pop
sarb
lea
lahf
insb
mov
fsts
les
sbb
mov
jecxz
mov
and
or
pop
jae
xchg
and
and
inc
sub
dec
nop
mov
jb
cwtl
sbb
xor
xchg
mov
lcall
pop
cli
gs
int
push
sub
ss
sub
lods
mov
push
ret
popf
aam
dec
sub
stos
jp
sbb
lods
push
inc
loopne
sub
ds
mov
cmpsb
jo
popa
sbb
sub
ret
stos
xlat
mov
jb
in
es
lret
sub
fsubrl
movsb
xchg
xchg
ret
ficoms
call
or
dec
sub
out
cs
fisttpll
cbtw
inc
inc
std
sub
jle
xchg
into
idivb
test
mov
jae
sub
int3
sbb
pop
inc
jno
adc
gs
mov
inc
loope
pop
xchg
sub
pop
dec
adc
mov
cmp
test
and
mov
lret
xchg
fwait
push
movsb
dec
xor
sub
shrl
sub
mov
xor
bound
out
mov
popa
mov
jbe
mov
dec
and
dec
and
sub
mov
sub
clc
and
push
sub
and
cwtl
fwait
mov
stos
popf
loopne
lock
xor
push
xor
imul
clc
mov
insb
sub
push
ja
les
dec
sub
push
sub
xchg
lahf
fadds
jle
sub
pop
inc
cmp
xor
ficomps
mov
inc
sub
dec
mov
mov
rol
xor
mov
sub
dec
scas
outsl
cmp
pop
mov
jl
stos
rclb
push
mov
bound
fidivrl
add
xchg
addr16
data16
mov
jno
fstps
adcb
fcomps
xchg
jl
stos
add
xchg
sub
jb
imul
clc
inc
inc
ja
test
sub
sub
rorb
sub
jl
call
mov
addr16
movsb
popa
in
icebp
add
stc
lea
dec
add
sub
jnp
push
rep
iret
dec
ljmp
out
mov
xor
into
sub
or
stos
sub
imul
push
jbe
sub
cmpb
push
xor
cmc
nop
mov
aad
lret
mov
cmp
jle
call
imul
inc
in
scas
sbb
push
jnp
lea
fstl
ror
es
sti
cmp
xor
das
stos
fisubrs
push
imul
sbb
add
mov
and
loope
push
sar
or
and
and
mov
sti
jmp
xor
aad
mov
sub
jns
mov
cmpsl
jecxz,pn
jle
push
or
sbb
bound
xchg
int
in
jp
pop
pop
add
std
add
and
inc
addr16
cli
or
or
sub
xchg
adc
das
inc
xor
int3
sub
xchg
adcl
ficomps
xchg
dec
and
outsb
jae
cmp
sub
add
mov
fsubrs
mov
mov
dec
lret
sub
imul
push
mov
sbb
push
inc
clc
mov
jae
outsl
hlt
mov
or
mov
gs
shrb
mov
sub
shlb
dec
adc
cmp
divb
push
cld
shrl
stos
ja
and
std
clc
dec
mov
stc
mov
test
out
push
lahf
inc
push
orw
sub
push
jge
push
dec
cld
pop
imul
fldl2e
xchg
inc
js
add
push
cmp
jg
jnp
ds
mov
push
cmp
sub
add
test
sub
cmp
add
jo
imul
sub
ljmp
or
push
add
popf
inc
test
icebp
push
xor
sub
push
sub
or
xlat
cli
in
jmp
pop
cmp
int
aad
mov
inc
xchg
mov
ret
push
adc
lret
adc
jnp
jmp
sbbb
xchg
sub
and
into
and
gs
enter
clc
ja
sbb
movb
call
sub
inc
mov
fistl
loopne
sub
aam
imul
push
ljmp
imul
mov
mov
sub
into
xor
pop
xchg
push
or
jecxz
or
hlt
mov
cwtl
repnz
aam
mov
enter
mov
sub
sub
pop
ljmp
orb
lods
pop
aaa
push
cld
pop
sub
mov
inc
sub
pop
and
test
mov
jmp
xchg
jl
inc
sub
popf
sarb
add
fldcw
jg
mov
or
sub
jbe
push
bound
dec
xor
mov
mov
sahf
in
sub
fidivrl
add
test
movsl
add
mov
sub
jae
pop
sub
sub
jge
testl
subps
inc
leave
roll
jle
pop
lret
cmp
scas
dec
jp
push
jge
sbb
mov
ret
or
inc
adc
cmpsb
ror
pop
add
mov
sub
in
sti
pop
and
or
push
stos
jb
lea
arpl
xor
add
fidivl
icebp
sub
scas
and
jl
fmulp
call
aaa
repz
sub
fists
and
fldcw
dec
std
rclb
mov
lahf
dec
jecxz
cli
scas
je
loop
dec
out
add
lea
mov
bound
ret
shlb
jl
ror
sahf
dec
pop
inc
cld
pop
cmp
fists
dec
loope
je
jo
adc
lods
jmp
jmp
mov
sbb
sti
sub
mov
push
lret
cli
push
loope
out
ja
sar
shl
or
movsb
dec
out
add
enter
enter
pop
les
cmp
dec
push
jo
push
idivl
testl
lea
pop
fcomps
push
in
jmp
imul
sub
mov
and
sbb
xchg
std
mov
pop
stos
mov
ret
clc
cltd
ret
pop
push
cmp
or
jo
push
push
cli
dec
xor
or
sbb
dec
cmp
jns
rcrb
push
jb
pop
stos
sarl
clc
adc
out
lods
and
sahf
jae
insl
sub
outsb
sbb
or
push
xchg
xchg
push
lock
cmp
out
lods
cwtl
cmp
mov
dec
stos
test
inc
dec
push
inc
inc
inc
sub
cmp
call
or
sub
movsl
mov
jo
loop
mov
fcompl
adc
outsb
pop
loopne
or
inc
push
popa
and
addl
scas
ljmp
mov
or
mov
sub
mov
push
sbb
scas
sbb
cmp
jg
fistps
xor
icebp
mov
out
mov
cmp
scas
sahf
lock
dec
pop
dec
mov
outsb
mov
pop
shr
ss
loop
xchg
shl
sub
adcb
xor
dec
lret
jge
ret
jns
jle
addl
jle
jae
cmpsl
sub
mov
pop
mov
sbb
ret
sub
sti
and
mov
xchg
pop
dec
fdivl
scas
add
push
aas
xchg
fmul
rorl
jb
cmp
and
clc
iret
mov
loope
mov
in
aaa
les
dec
cwtl
shll
xchg
hlt
sub
cmc
jb
loope
xorl
add
dec
xchg
xlat
iret
pop
es
adc
sti
mov
pop
pop
mov
mulb
xchg
add
fs
jg
cmp
add
fucompp
in
inc
mov
shrb
and
stos
pop
shrb
or
push
jg
add
mov
popa
mov
pop
cli
sub
decl
mov
loope
sub
add
mov
sub
push
push
fs
mov
mov
ljmp
sti
outsb
push
loopne
pop
lret
push
push
sub
mov
mov
mov
dec
int3
aam
jb
jmp
stos
imul
pop
xchg
ret
jns,pt
popf
dec
push
mov
mov
sbb
out
sub
rcrb
pop
pop
inc
inc
hlt
mov
scas
push
and
add
push
les
jae
sub
inc
jnp
fs
les
inc
cmpsb
and
clc
rcrb
pop
les
repnz
xchg
cli
add
loopne
sub
cltd
pop
ret
aam
push
sub
imul
sub
or
outsl
xor
stc
push
lret
std
sarl
xor
sub
mov
jae
nop
mov
fmull
imul
pop
imul
ljmp
cmp
outsl
imul
inc
enter
ror
lcall
loope
dec
sub
inc
jb
cmp
xor
mov
andl
mov
pop
pop
mov
test
or
roll
xchg
lcall
adc
popf
dec
clc
and
cmpsl
ffreep
push
jo
jo
aas
pop
stc
push
xchg
iret
xor
out
sbb
or
mov
aas
mov
lock
mov
sti
divl
outsl
mov
ret
push
int
mov
dec
push
popf
cmp
es
jne
scas
inc
stos
xor
lahf
cmp
cmp
adc
fbld
sbbb
rcll
jns
shl
xor
xchg
sub
inc
addb
mov
les
daa
push
jp
mov
subb
sti
push
insl
or
jb
into
lea
inc
movl
or
popa
cmpsl
cwtl
fildl
leave
sahf
cmp
test
inc
push
mov
xchg
popl
push
mull
cmp
and
lods
stos
push
push
push
clc
and
mov
rol
ret
adc
sub
nop
mov
push
sahf
jo
push
and
add
dec
adc
jmp
push
popf
out
xlat
aad
nop
jmp
adc
int3
rcr
add
lds
dec
arpl
push
push
dec
je
mov
test
add
popa
call
mov
cmp
mov
dec
push
shlb
push
and
mov
or
cli
adcl
sub
cwtl
cli
dec
popl
xchg
mov
mov
mov
sti
mov
outsb
jae
pop
leave
mov
adc
pushf
pop
pop
mov
jo
ds
mov
stc
dec
inc
push
dec
cli
es
xor
mov
mov
push
inc
fsts
shlb
mov
fistps
adc
add
xor
out
dec
xchg
inc
add
mov
cmp
sbb
or
ret
sti
adc
fbstp
stos
mov
ss
dec
sbb
nop
jle
mov
sti
fsubrl
xchg
push
clc
push
orl
scas
lods
or
movsb
push
out
rclb
movsb
in
and
pusha
out
test
xchg
dec
mov
popa
insb
sahf
xor
adc
inc
push
pop
out
jns
xlat
xchg
inc
clc
push
push
xchg
adc
mov
in
aas
divl
test
fs
push
sub
movsb
mov
lods
cmp
test
and
cli
stos
outsl
js
xchg
imul
sar
jbe
subl
jmp
mov
jae
orb
xchg
call
lahf
push
add
cmp
add
pop
arpl
jns
outsb
adc
popa
clc
and
addb
shrb
cli
xchg
mov
or
loope
popf
out
sti
mov
add
dec
jle
cli
jg
adc
addr16
sti
xor
nop
sub
adc
sub
or
ret
fsubrl
ds
sub
pop
jo
sub
bound
clc
add
push
push
push
popa
rorb
dec
in
jmp
dec
sbb
jo
loope
arpl
clc
cltd
stos
lea
fcom
hlt
adc
cli
sbb
ja
sysexit
fucom
mov
bswap
sarb
lret
pushf
push
mov
pop
add
mov
pop
int3
jp
shr
in
xchg
and
sub
cmc
jge
mov
pushf
xchg
add
clc
pop
mov
xor
sbb
dec
mov
pop
clc
mov
mov
cli
pop
push
stos
jbe
adc
movlps
outsl
clc
out
pop
mov
xor
or
jae
mov
jle
mov
out
leave
mov
push
jbe
mov
cmp
adc
inc
xchg
nop
movsl
std
push
rcrb
leave
lret
outsb
fistps
sti
push
xchg
loope
fcomi
repnz
fistpll
sub
jns
lds
adc
scas
lret
stc
daa
loopne
lock
xchg
jp
xchg
movsb
neg
jge
arpl
dec
lea
xor
bnd
arpl
popf
push
jp
iret
push
jl
push
push
and
xor
imul
inc
inc
xor
mov
cmp
int3
inc
jg
aas
jo
lods
mov
repz
mov
stos
sar
xlat
and
jb
lods
mov
in
pop
inc
pop
cli
cmc
ret
xor
hlt
or
cmpsb
sti
add
adc
push
sub
or
dec
inc
push
lcall
ja
xor
in
cli
adc
in
add
sbb
sub
pop
mov
aam
in
pop
push
xor
rcll
sub
cli
dec
mov
into
aad
dec
inc
insb
xor
mov
add
cld
jnp
push
jb
cli
fs
xor
add
pop
outsb
ret
push
push
inc
sub
inc
dec
and
mov
stc
push
jne
cld
repnz
mov
jae
jns
inc
mov
loopne
xchg
daa
mov
cmpsl
daa
clc
jae
cltd
cmp
jns
mov
cmp
jae
mov
jb
sub
leave
mov
call
mov
mov
and
lahf
sbb
cltd
mov
jae
movsl
push
or
push
imul
cmpsl
sbb
jo
fnstenv
push
cmc
fisubrs
push
cmp
test
xor
jne
mov
adc
dec
add
repnz
adc
les
data16
cs
mov
movsl
mov
dec
outsl
mov
dec
mov
xchg
or
cmpsl
mov
and
jae
lods
in
aas
ds
lahf
adc
adc
sbb
jo
stos
xchg
sbb
fwait
dec
mov
lret
shlb
inc
into
mov
sub
movsl
jae
scas
movsb
jb
jge
lds
sbb
push
and
mov
dec
movsl
xchg
cmc
dec
pushf
mov
inc
movsl
mov
pop
add
lret
pop
sub
or
test
scas
repz
fildll
movsl
mov
inc
dec
jge
sbb
in
shl
call
movsl
fwait
xor
movsl
inc
repz
or
xchg
jae
cmpsl
dec
jb
jge
cmp
stos
mov
cmp
daa
divl
lahf
and
fwait
jp
movsl
daa
lcall
mulb
mov
out
dec
push
lods
out
iret
daa
xor
add
or
sub
pop
mov
mov
cs
jae
lahf
xor
push
mov
and
mov
mov
mov
jb
jge
cmp
mov
add
xor
es
movsl
fwait
push
jns
mov
push
mov
add
movsl
mov
mov
mov
dec
sarl
aad
popf
test
xor
and
inc
arpl
jae
into
dec
push
mov
test
mov
daa
aam
push
cmpsl
lahf
jb
jge
cmp
mov
dec
mov
pushf
dec
cld
stos
push
aad
mov
fisttpll
movsl
mov
dec
mov
mov
stos
fbstp
stc
clc
lea
addr16
mov
enter
mov
xchg
fimuls
cmpsl
ja
jb
lahf
add
cltd
ffreep
fwait
daa
mov
cmp
fdivs
mov
dec
jecxz
mov
mov
stos
and
add
call
es
lret
xor
jae
lods
push
jb
mov
mov
lock
xor
stos
inc
mov
insb
adc
and
das
adc
adc
add
or
enter
in
cmpsl
ds
mov
sub
js
push
mov
jne
fstps
js
movsb
sub
mov
arpl
lods
jbe
gs
dec
mov
jnp
push
mov
mov
add
inc
lds
nop
imul
or
xor
mov
xchg
xchg
stc
pop
popa
cmpsl
push
inc
jg
movsl
pusha
fwait
ja
es
push
mov
add
mov
dec
shlb
data16
xor
pop
fwait
cmp
mov
xchg
stos
jmp
daa
fdivl
mov
or
in
popa
fwait
dec
out
jae
movsl
in
pop
lret
mov
xor
cwtl
vhaddpd
andb
mov
roll
cmpsb
mov
fs
dec
mov
jg
pushf
sub
mov
cmpsl
sbb
mov
dec
mov
xchg
fs
pop
inc
pushf
subl
and
mov
cmp
mov
mov
arpl
dec
jl
sub
stos
mov
mov
mov
pop
iret
scas
inc
scas
dec
nop
push
and
mov
lods
lahf
popa
pop
sub
xchg
cltd
mov
add
xchg
movsl
daa
or
mov
jb
popa
dec
cmp
stos
stos
cltd
xchg
fwait
inc
xchg
movsl
cmpsl
mov
mov
shrb
mov
imulb
lods
cs
gs
push
fwait
incb
push
mov
or
xchg
dec
cmp
mov
mov
sbb
inc
mov
jae
ljmp
xchg
mov
mov
mov
lret
scas
xchg
test
adc
xchg
fcoml
dec
std
mov
pop
lahf
bound
or
mov
jae
jb
fwait
cmp
lock
pushw
push
xchg
jecxz
sbb
cmpsb
nop
inc
inc
enter
orb
movsl
pop
aaa
mov
inc
cli
mov
jmp
pop
mov
jp
rclb
cmpsl
jbe
and
jnp
mov
and
mov
pop
jecxz
ret
mov
out
push
inc
insl
xchg
pop
dec
jecxz
out
cmpsb
push
clc
ds
lods
push
mov
fildll
fcmovnbe
popa
cltd
inc
pop
in
test
sub
rclb
mov
sbb
test
mov
daa
into
jae
movsl
insb
cmp
das
jns
mov
mov
mov
inc
aaa
mov
repnz
and
test
pusha
add
movsl
xor
mov
leave
mov
jae
mov
sub
lret
pusha
into
inc
lahf
je
cmc
out
xchg
pop
cmp
push
cmpsb
mov
mov
adc
das
jb
mov
add
sar
xchg
push
jecxz
in
or
inc
pusha
scas
dec
outsl
test
movsb
push
mov
mov
dec
mov
jmp
lods
int3
lahf
rep
pusha
daa
and
cwtl
pop
push
lret
enter
inc
dec
fwait
mov
jp
shl
ret
fs
add
xor
cmpsl
jp
fcomps
inc
jmp
mov
pop
pop
lahf
daa
inc
jae
cltd
bnd
sub
movsl
push
mov
mov
mov
push
cmpsl
lods
lods
cmc
pop
fidivrl
ds
fwait
shll
xor
das
jnp
adc
sub
add
xchg
inc
mov
mov
xchg
aam
jnp
test
arpl
imul
add
movsl
out
stos
add
mov
mov
mov
jl
out
jecxz
add
inc
int
pusha
or
cli
scas
inc
cmp
or
inc
in
movl
cmp
outsb
cmpsl
daa
subb
mov
ret
cmp
fidivrs
inc
ret
xchg
add
push
jmp
cmpsl
or
jae
jb
jge
cmp
int
xchg
mov
cld
or
push
movsl
mov
jg
jecxz
fadd
jmp
xlat
pop
rorb
repz
cmp
dec
lods
xorb
jae
sub
sbb
mov
push
shlb
imul
movsl
cmpsl
and
mov
xlat
and
lcall
sahf
lret
hlt
adc
lret
lret
pop
repnz
mov
dec
dec
xchg
iret
fdivs
addr16
pop
xor
sub
lahf
inc
cltd
mov
nop
or
ret
mov
dec
push
inc
mov
add
mov
lods
add
shrl
add
insl
mov
rorb
mov
inc
pop
add
mov
dec
ja
jl
stc
mov
mov
sbb
mov
jb
ds
cltd
and
mov
fwait
out
and
ret
scas
xchg
push
cmpl
inc
mov
sub
push
xor
add
add
ret
fbld
cltd
lret
aad
lock
add
repnz
cltd
cmpsl
daa
iret
loop
das
mov
mov
js
add
sbbl
jo
jmp
xchg
mov
sub
jb
daa
daa
in
rcl
mov
push
les
lret
cmp
sub
cmp
dec
ljmp
pop
gs
jl
jae
mov
shll
test
cmp
mov
mov
inc
or
stos
jae
mov
aad
test
dec
lds
or
repz
adc
call
mov
sub
lret
push
cmc
cmp
pop
inc
xchg
fs
mov
sub
fistpll
pop
shrb
mov
and
test
insb
test
inc
pop
insb
mov
sub
lods
test
and
les
pop
pop
int
add
add
cmp
mulb
rcrl
xor
mov
popf
cmp
push
stos
push
in
or
bound
mov
pushf
xor
xor
stos
mov
push
hlt
test
push
ror
lea
mov
push
call
jns
xchg
mov
arpl
jle
pop
shl
pusha
pop
mov
cmp
xchg
push
pop
in
mov
or
cmpb
cwtl
cmp
pop
pop
push
sub
inc
js
aaa
movsl
mov
adc
rolb
add
add
loopne
test
xchg
insb
cmpsb
pop
and
sbb
clc
imul
cmp
call
dec
or
xchg
sbb
cs
movsl
mov
inc
jl
jmp
sub
jb
fiaddl
pop
mov
pusha
arpl
sub
aam
cli
xor
jno
inc
imul
popf
test
clc
jg
int
jae
scas
push
xorb
into
mov
mov
fwait
and
inc
or
dec
pop
mov
lea
call
pusha
lea
jne
lahf
mov
pusha
pusha
movw
pushf
lea
jmp
push
call
pop
in
test
pop
xchg
sbb
cmp
or
and
out
adc
adc
adc
icebp
insb
pop
mov
andb
push
inc
stc
gs
or
repnz
cmp
in
cli
sub
ret
imul
pop
sub
test
loopne
ds
jmp
pushf
pushl
popl
push
pushf
movb
lea
jmp
jmp
movw
lea
mov
push
not
pushf
mov
lea
jmp
test
aaa
or
mov
add
shl
mov
stc
clc
test
not
cmc
clc
clc
cmc
not
cmc
jae
pushf
test
and
pusha
mov
call
push
jmp
pushf
push
xchg
not
lea
jae
lea
push
movsbw
jp
push
push
mov
movzbl
call
dec
movsbw
mov
sar
shl
neg
dec
lea
dec
lea
movsbw
stc
ror
btr
xor
clc
lea
push
pushl
sub
push
pusha
pusha
lea
jmp
pusha
pusha
movb
mov
pushf
mov
pushl
pushf
lea
jmp
stc
sub
call
call
pusha
cmc
sub
bt
mov
add
call
cmp
mov
dec
ror
mov
test
cmp
stc
add
push
call
sub
push
mov
pushf
pushl
mov
mov
lea
jmp
mov
mov
jmp
pusha
jmp
call
pop
pop
dec
not
clc
ror
or
lea
movb
bt
pushf
sub
pusha
lea
jmp
call
rol
movzbl
and
mov
pusha
clc
cmc
call
push
push
mov
call
push
pushf
mov
call
pushf
jmp
pusha
pushf
pusha
mov
pushl
mov
jmp
movw
mov
pushf
lea
jmp
ror
test
cmp
clc
lea
test
cmc
call
pushf
pusha
sub
movb
jmp
ror
bswap
bsf
mov
test
cmc
call
cwtl
pushl
jmp
call
inc
call
pushf
call
rcl
pusha
cmc
ror
dec
bswap
movsbw
dec
clc
btr
ror
mov
inc
mov
btr
sub
rol
rcr
mov
mov
add
pusha
mov
push
lea
jmp
jmp
call
movb
movl
call
neg
pushf
mov
bt
shr
shl
add
not
push
mov
pusha
movb
mov
pushl
mov
push
lea
jmp
sub
push
bt
add
jmp
mov
pusha
mov
jmp
setl
neg
btc
xchg
mov
pusha
not
neg
mov
clc
add
pushf
mov
pushf
mov
mov
lea
jmp
mov
movsbw
call
decl
movw
jmp
jmp
sub
cltd
ror
clc
mov
cmc
and
mov
neg
not
rol
mov
push
call
sub
pushf
sub
call
call
jmp
pusha
pushl
popl
push
lea
jmp
pushf
popl
call
xor
movsbw
sbb
mov
shrd
mov
jmp
push
pushf
push
mov
pushf
pushf
mov
pushl
lea
jmp
mov
movb
pushf
push
push
lea
jmp
ror
ror
test
lea
test
lea
pushf
jmp
mov
not
bswap
mov
movzbw
mov
xchg
pushf
popl
bts
xchg
add
pushl
popl
shr
add
js
sbb
xor
push
shl
shl
mov
movsbw
bt
mov
pushf
neg
bsf
bsr
dec
btr
movsbw
lea
bt
ror
rcr
rol
pushf
call
push
mov
call
lahf
aad
mov
movzbw
jmp
jmp
pushf
jmp
and
shr
shl
pushf
mov
call
push
lea
mov
mov
mov
movb
movw
movb
pushl
ret
call
call
lea
bt
sub
push
pushl
pushf
lea
jmp
jmp
pushl
popl
movl
movw
movb
lea
jmp
dec
bt
pushf
add
jmp
movb
mov
pushf
lea
jmp
pushf
movb
jmp
call
or
dec
jmp
pushf
sub
jmp
pushf
pushf
popl
jmp
movsbl
mov
bswap
movsbw
pushf
popl
shrd
lea
pushl
bt
push
rcl
mov
movzbl
movzbw
sar
shr
neg
movzbl
mov
mov
dec
pusha
ror
sbb
call
pusha
mov
mov
pushf
pushf
lea
jmp
jmp
pushf
xchg
push
mov
lea
mov
bswap
pushl
lea
call
pushf
popl
movl
pushl
popl
movb
movb
mov
lea
jmp
pushl
cmp
pushl
popf
push
pushf
pushf
lea
jmp
jmp
add
pusha
mov
movb
pushf
lea
jmp
sub
pusha
lea
jmp
dec
movw
ror
test
push
lea
test
call
push
sbb
movsbw
bswap
mov
shl
call
rcr
movzbl
cmc
pushf
pusha
pushf
xor
movb
mov
movw
rol
call
cmc
sub
pushf
pushl
pushf
movb
lea
jmp
mov
add
pop
or
enter
ds
dec
add
sbb
clc
sbb
rcrb
add
add
dec
add
add
pop
or
aam
dec
add
or
outsl
push
dec
add
add
aam
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
or
pop
sti
dec
add
sbb
pop
and
icebp
or
dec
add
add
dec
add
sbb
cli
dec
add
dec
add
dec
add
and
dec
add
dec
add
testb
dec
add
sbb
and
or
adc
dec
add
push
dec
add
or
dec
add
add
dec
add
push
dec
add
and
dec
add
and
dec
add
dec
add
sbb
add
testb
dec
add
dec
add
and
in
or
cli
dec
add
dec
add
sub
adc
dec
add
dec
add
dec
add
add
dec
add
or
dec
add
testl
hlt
dec
add
dec
add
dec
add
dec
add
add
push
push
dec
add
or
push
add
add
dec
add
dec
add
dec
add
or
dec
add
add
add
dec
add
dec
add
or
dec
add
dec
add
stc
dec
add
dec
add
sti
dec
add
dec
add
pop
dec
add
dec
add
push
dec
add
dec
add
dec
add
dec
add
push
dec
add
sbb
add
add
add
push
dec
add
sbb
adc
dec
add
dec
add
sub
pop
sbb
push
add
add
dec
add
dec
add
add
dec
add
or
dec
add
dec
add
dec
add
add
dec
add
stc
dec
add
and
aam
dec
add
sbb
add
dec
add
dec
add
dec
add
dec
add
add
add
sti
dec
add
dec
add
dec
add
testl
and
dec
add
testl
and
dec
cmc
dec
add
dec
add
dec
add
dec
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
sub
enter
loopne
dec
add
dec
add
sbb
pop
sbb
add
sub
pop
sbb
add
testl
sub
enter
lock
dec
add
add
pop
sbb
in
or
jbe
dec
add
add
lock
xchg
or
add
testl
testl
or
mov
add
enter
outsl
push
dec
add
push
dec
add
dec
add
dec
add
push
dec
add
dec
add
testb
dec
add
push
dec
add
dec
add
add
add
and
cmovge
outsl
push
dec
add
or
push
dec
add
dec
add
and
rcrb
add
dec
add
add
dec
add
or
adc
dec
add
adc
dec
add
dec
add
adc
dec
add
add
clc
sub
pop
or
mov
pop
dec
add
or
mov
add
add
stc
dec
add
pop
dec
add
and
ds
dec
add
dec
add
adc
dec
add
push
dec
add
mov
add
pushf
mov
push
jmp
xor
push
cmp
push
not
cmp
cmc
pushf
bt
add
pushf
sub
jmp
pushl
popl
pushf
lea
jmp
bswap
pop
pushf
popl
movzbl
pushl
popl
movzbl
clc
neg
movl
shrd
mov
sub
neg
inc
dec
not
rcl
ror
lea
lea
jmp
pushl
popl
pushf
pushf
movl
pushf
lea
jmp
pushl
ror
bt
ror
not
lea
call
pushf
call
mov
jmp
not
mov
lea
jns
pushf
bswap
cmc
pushf
pushl
popl
shl
pushf
clc
movl
bswap
dec
xchg
mov
test
sbb
or
neg
dec
call
jmp
dec
pushf
pushl
bt
movw
ror
pushl
stc
sub
bt
sub
jge
stc
test
mov
jne
stc
sub
pusha
pusha
mov
jmp
lea
cmc
call
jmp
mov
pushf
jmp
rol
movsbl
ror
cmp
shl
movsbw
mov
pushf
cmp
movb
jmp
call
test
xor
pusha
bt
clc
sub
call
movl
jmp
movzbl
not
movzbw
add
btr
adc
bts
sub
adc
pushf
sar
neg
not
dec
bts
ror
add
test
mov
clc
add
movb
inc
pusha
pusha
call
cmc
add
pusha
push
mov
movw
lea
jmp
mov
mov
movb
movl
pushl
lea
jmp
push
movb
mov
call
movzbw
mov
daa
mov
pusha
jmp
mov
pushf
call
sub
push
pushf
pusha
push
lea
jmp
pushf
push
shl
jmp
pushf
ja
push
pusha
pushl
popl
pushf
mov
pushl
movb
lea
jmp
neg
neg
mov
cmp
mov
test
push
add
call
movb
mov
not
pushl
call
mov
call
call
bswap
mov
lea
push
pushf
popl
dec
pushl
popl
cmp
rol
or
movl
pushf
mov
pop
neg
jmp
mov
mov
movb
mov
lea
jmp
add
mov
jmp
movsbw
ror
aas
inc
mov
pusha
sub
jmp
mov
push
push
pushf
pusha
lea
jmp
xor
pusha
mov
adc
mov
bt
bt
stc
test
not
test
mov
push
not
cmc
pusha
clc
push
sub
movb
jmp
cmp
sub
push
push
lea
jmp
mov
jmp
cwtl
jmp
mov
pushf
popl
pushf
pushl
pushl
popl
movb
lea
jmp
mov
push
movb
mov
movl
jmp
movsbw
xchg
bswap
mov
pushl
xchg
mov
lea
pushf
popl
bt
pushl
popl
btc
add
movl
not
btc
rcl
mov
cmp
neg
bsf
bswap
lea
bswap
dec
pop
ror
ror
clc
rcr
lea
test
clc
sub
pushf
movb
lea
jmp
aam
pushf
bt
aaa
mov
or
lahf
stc
cmp
mov
pushf
test
bt
bt
sub
call
pushf
movl
movsbw
mov
movsbl
call
pushl
mov
pushf
pushl
pushf
pusha
lea
jmp
jmp
mov
pushf
pushl
mov
jmp
mov
pushl
pushl
call
stc
or
call
ror
mov
pusha
pusha
cmp
cmc
add
push
push
jmp
mov
movzbw
lea
bt
stc
sub
pusha
movb
lea
jmp
pushf
movsbw
call
xor
clc
pushf
test
sub
call
pushf
jmp
mov
call
call
sub
push
push
lea
jmp
not
pushf
daa
mov
and
mov
clc
pusha
add
pushf
pushf
mov
call
neg
bsr
adc
aam
mov
push
rcr
pusha
and
mov
jmp
lea
xchg
mov
push
bsr
mov
neg
or
mov
pushf
neg
call
pusha
lea
ja
pusha
pushf
sbb
call
pushl
mov
pushl
jmp
add
mov
lea
jg
pusha
pushf
popl
pusha
call
lea
lea
xchg
call
push
jmp
jmp
push
mov
push
mov
pushf
mov
mov
jmp
call
mov
jmp
bt
shrd
mov
mov
mov
mov
pushf
call
cmp
rcl
sar
mov
pushf
sub
test
xor
pusha
pusha
add
pushf
mov
cmp
jmp
pushf
movb
rol
pushl
test
mov
bt
add
pushf
pusha
mov
not
call
movb
movb
mov
movb
mov
lea
jmp
mov
pushl
pushf
pushf
push
lea
jmp
pusha
pushl
popl
pushl
movb
lea
jmp
clc
call
clc
pushf
cmc
jmp
push
jmp
push
mov
jmp
push
pushf
mov
push
pushf
movl
mov
lea
jmp
jmp
mov
mov
pop
call
push
pushf
mov
jmp
movzbw
dec
clc
push
lea
jo
bswap
ror
add
not
mov
test
jmp
mov
bt
pushl
sub
bt
call
div
call
pushl
popf
mov
movb
mov
mov
lea
jmp
pushl
popl
movw
mov
mov
mov
lea
jmp
mov
jmp
clc
jmp
pusha
mov
pushl
pushf
pushf
popl
pushl
mov
pushl
popl
push
pushl
mov
lea
jmp
jmp
pushf
popl
jmp
mov
pushf
push
pushl
ret
mov
push
lea
jmp
lea
ja
pusha
mov
pusha
call
jmp
mov
pushf
call
pushf
pushl
pushl
popl
push
push
push
push
lea
jmp
jmp
pusha
jmp
push
lea
jg
pushf
mov
pushl
mov
lea
jmp
pushf
sbb
adc
setb
neg
rcr
xor
pop
sbb
neg
inc
or
bts
pusha
and
dec
bsf
mov
pusha
clc
call
mov
movw
mov
pushl
popl
pushf
mov
push
pushf
lea
jmp
mov
pusha
pushf
mov
call
rcl
xchg
mov
shl
rol
bswap
mov
neg
mov
pop
inc
dec
pushf
ror
call
xchg
not
mov
jmp
stc
cmp
jmp
mov
jmp
lahf
pusha
pushf
mov
movsbw
lea
jne
mov
setle
mov
jmp
mov
xchg
pop
movsbw
movsbw
mov
mov
pushf
shrd
sub
pushl
clc
bsf
adc
push
bts
mov
shr
neg
dec
dec
movzbw
bts
ror
pusha
test
lea
stc
push
jmp
divl
push
pushf
mov
jmp
pushf
pusha
mov
pusha
call
pushf
pushl
mov
jmp
jmp
stc
btc
ror
inc
bsr
mov
call
add
rol
mov
bt
sub
jmp
daa
add
ror
not
mov
bt
sub
push
call
pushl
pusha
mul
pushf
mov
movw
pushf
pushf
mov
push
movb
pushf
call
ror
bsr
sub
bt
bsf
not
movzbw
movzbl
shl
shl
bt
btc
mov
stc
test
bt
mov
add
pushf
dec
mov
cmc
pushf
test
add
pusha
call
pushf
pushf
mov
mov
movw
lea
jmp
jmp
stc
shl
notl
sub
mov
bt
cmc
test
test
sub
cmp
and
jmp
movzbw
call
stc
sub
cmp
call
jmp
movzbl
mov
movzbl
mov
pusha
movsbw
mov
pushf
movl
call
mov
pushl
movsbw
mov
pushf
pushf
pushl
pushf
lea
jmp
push
mov
pusha
pusha
pushf
push
mov
movb
lea
ja
pusha
pushf
mov
pushf
pusha
call
and
bsr
mov
js
test
pusha
push
sub
bt
add
push
clc
clc
ror
jmp
call
add
push
mov
movb
push
lea
jmp
shl
call
mov
pushf
push
push
mov
mov
jmp
pushf
xchg
bswap
mov
pushl
pushl
lea
mov
mov
movsbl
mov
movw
lea
pushf
popl
dec
rcl
shl
pushl
rol
push
clc
rcr
ror
mov
pushf
dec
rcr
neg
bsf
dec
rcl
pop
jmp
shl
movzbl
test
sub
call
dec
bswap
dec
bt
lea
pushf
pop
ror
rol
rcl
clc
shrd
lea
test
pusha
clc
sub
pusha
lea
jmp
push
mov
mov
pushf
movb
lea
jmp
sub
neg
bswap
shl
movzbl
neg
call
add
add
add
call
pushl
popl
pusha
clc
ror
shr
movl
pusha
mov
jmp
movsbw
lea
jp
bswap
pushf
rcl
rcl
lea
shl
pushl
shr
dec
bsf
clc
push
sbb
bt
mov
test
not
rcr
neg
call
mov
lea
movzbw
mov
jmp
mov
bswap
xchg
call
lea
btr
shld
lea
mov
call
push
jmp
lea
jmp
pusha
jmp
mov
pushl
push
lea
jmp
pushf
popl
bswap
lea
jo
cld
push
movsbw
call
clc
mov
cmp
pushf
pushf
sub
pushf
add
call
shl
call
mov
pusha
pushl
popl
mov
pushf
lea
jmp
not
mov
call
movb
mov
mov
jmp
ror
test
call
jmp
mov
pusha
jmp
shl
setp
sets
sub
neg
pushf
stc
sar
xor
rol
neg
rcr
pushf
and
movsbw
mov
add
jg
test
sub
jno
push
mov
pusha
pushf
pushf
lea
jmp
mov
not
ror
call
push
and
xor
movzbl
pushl
call
lea
jge
mov
push
pusha
mov
push
pushl
pushf
pushl
lea
jmp
pusha
mov
mov
pushf
push
xchg
push
call
jmp
sub
push
lea
jmp
push
mov
pusha
push
call
adc
bt
bswap
mov
pushf
pusha
stc
add
movb
movb
lea
jmp
cmc
push
pushl
sub
jmp
shl
mov
shl
xor
bt
mov
clc
pushf
cmp
sub
movl
cmp
bt
cmp
shr
pusha
call
mov
call
xchg
movsbw
pop
pushf
popl
bsf
lea
cmp
xchg
pushl
popl
xadd
jmp
bswap
movsbw
dec
btr
lea
btc
ror
lea
bsr
call
pushf
mov
pushl
jmp
mov
pushf
jmp
jmp
bswap
inc
push
dec
jmp
pushf
rep
not
mov
dec
mov
stc
cmp
pushl
popf
movw
pushl
pushl
mov
lea
jmp
mov
pushl
lea
jmp
cmp
cmp
shr
pushf
jmp
pushl
movb
pushf
popl
pushf
push
pushl
popl
pushf
push
movb
lea
jmp
mov
movb
pushf
popl
pusha
pushl
popl
mov
pushf
pushf
push
lea
jmp
mov
call
movzbw
mov
xchg
setle
movzbw
xchg
xchg
pop
pushf
xchg
mov
pushl
xchg
movsbw
xchg
xchg
xchg
mov
movsbl
movw
pop
pushf
popl
clc
inc
bt
pushf
pushl
popl
sbb
xchg
bts
inc
movl
jmp
mov
pusha
mov
jmp
mov
mov
lea
jmp
call
mov
mov
pushf
mov
jmp
jmp
pushf
jmp
pushf
mov
push
lea
jmp
shl
neg
pop
movzbw
bswap
call
shr
pushf
movw
mov
jmp
pusha
mov
mov
call
lea
mov
pusha
pusha
cld
call
movb
bt
pusha
xor
push
pushl
push
pushf
inc
call
pushf
pushf
jmp
mov
jmp
pushf
pushf
mov
call
mov
call
call
jmp
mov
movl
pusha
mov
push
lea
jmp
bt
sub
pusha
pushf
movb
lea
jmp
pushf
mov
pusha
pushl
movl
push
lea
jmp
call
call
add
call
call
movzbw
xchg
pusha
mov
movsbw
pushf
popl
rcr
btr
pushl
popl
btc
movl
rcl
pop
bsf
sbb
mov
btr
neg
neg
pushf
bsr
bswap
dec
lea
ror
rol
sbb
lea
clc
cmc
pushf
sub
pusha
pusha
lea
jmp
call
pushl
mov
pusha
call
pushf
popl
pushf
jmp
mov
push
call
mov
mov
call
pusha
pushf
mov
mov
pushl
push
jmp
pusha
mov
mov
movl
mov
call
pushl
pushf
popl
push
pushf
pushl
popl
pushf
pushf
push
mov
lea
jmp
dec
mov
clc
cmp
jmp
pusha
call
pushl
movl
movl
pushl
popl
mov
pushf
movb
lea
jmp
jmp
mov
bswap
jmp
and
push
call
call
push
call
sub
jmp
jmp
pushf
mov
jmp
cmc
push
stc
ror
jmp
lea
lea
lea
mov
push
movzbw
xchg
mov
bswap
pushf
rcr
adc
movzbw
pushl
jmp
pushl
push
pushf
popl
pushf
movw
lea
jae
pushf
pushl
popl
mov
movb
pusha
lea
jmp
push
pushl
mov
mov
mov
pushf
mov
pushl
mov
call
call
seto
mov
pop
pop
mov
jmp
mov
bswap
mov
call
pushf
push
pushf
mov
jmp
shr
pushl
popl
xchg
movzbw
dec
movl
rcr
mov
shld
bsf
neg
not
dec
stc
clc
ror
ror
ror
neg
lea
clc
bt
sub
pusha
mov
lea
jmp
mov
pushf
pusha
pushf
lea
jmp
add
jmp
test
cmp
call
bswap
jmp
jmp
mov
pusha
push
jmp
mov
ror
rcr
not
neg
setp
pop
not
dec
sete
not
ror
xadd
cmc
lea
not
or
btc
bsf
sub
jne
pusha
movsbl
btr
lea
sub
pushf
shl
and
mov
sar
add
sub
or
mov
rcl
dec
movzbl
not
sub
btr
ror
movzbl
cmc
sub
rcl
btr
neg
call
sub
cmc
pushf
imul
pushf
mov
mov
mov
movb
call
xor
clc
cmp
not
cmp
add
stc
jmp
pusha
movl
rep
lea
pushf
mov
cmp
mov
cmp
call
not
xor
mov
shl
mov
push
stc
add
pushf
pushl
movb
lea
jmp
pushf
mov
push
jmp
sub
pushf
mov
push
lea
jmp
pushf
mov
pushf
jmp
xchg
adc
push
rcr
mov
shl
neg
shr
mov
call
dec
btc
movsbw
bts
ror
add
bswap
lea
clc
pushf
sub
pusha
movw
pushl
lea
jmp
cmp
sub
pusha
lea
jmp
bswap
mov
lea
movsbw
mov
lea
pushf
popl
sbb
bsr
mov
pushl
popl
cmp
btr
not
rcr
movl
rcl
call
cmp
pusha
sub
push
cmc
xor
push
cmc
add
jl
clc
add
bt
bt
stc
lea
jmp
push
mov
cmp
bt
sub
jmp
pushf
pusha
lea
cpuid
pushf
clc
clc
sub
movb
pushf
mov
pusha
mov
pushf
mov
pushl
mov
bswap
mov
movzbw
mov
mov
push
movw
movb
lea
jmp
call
push
pusha
pushf
popl
pushf
mov
jmp
movb
push
ror
stc
cmc
call
jmp
mov
movb
pushf
popl
pushf
jmp
call
mov
pusha
mov
pushf
mov
lea
bswap
pushf
mov
movzbw
call
std
cld
lea
jle
rep
bts
shr
bsr
btr
pop
shl
rcl
std
push
mov
clc
pushl
popf
push
pushf
mov
push
lea
jmp
pushf
mov
jmp
pushf
popl
pushf
call
mov
call
lea
pushf
mov
call
lea
jmp
call
mov
jmp
movw
pushf
popl
sbb
shrd
pushl
popl
rol
inc
xor
movl
and
jmp
shr
sub
ror
call
call
mov
jmp
pushf
popl
movl
std
pushf
mov
pusha
movzbw
jmp
movsbw
pushf
popl
cmp
dec
shl
pushl
popl
shl
inc
btr
movl
clc
rcr
rcr
bsf
mov
sbb
bt
jmp
jmp
pusha
mov
mov
pushf
movw
lea
jmp
pushf
mov
pushf
mov
mov
mov
jmp
push
call
call
lea
pushf
shld
call
jmp
call
push
jmp
pushf
sub
pusha
mov
pushl
pushf
pushf
pushf
lea
jmp
xchg
jmp
call
jmp
sub
pusha
push
lea
jmp
push
bt
sub
cmp
test
cmc
sub
jmp
jmp
call
add
cmp
pushf
bt
movb
pushl
popf
push
movb
lea
jmp
pusha
pushf
popl
movw
movb
pushl
popl
pushf
mov
lea
jmp
pushf
xchg
push
jmp
pusha
push
push
mov
pushf
push
jmp
mov
lea
je
push
pusha
pushl
mov
bswap
pusha
not
pop
mov
movw
not
xchg
bswap
movsbw
bswap
lea
mov
mov
call
mov
pushf
mov
pusha
mov
mov
jmp
sub
rdtsc
pusha
pusha
sub
call
mov
pusha
mov
lea
jmp
rep
bsf
mov
bt
test
mov
add
jno
pusha
pushl
popf
pusha
pushf
lea
jmp
jmp
sbb
adc
push
add
lea
cmp
cmp
push
cmp
lea
jp
pushf
lea
ja
aad
jmp
pusha
stc
sub
mov
mov
pushl
mov
push
mov
call
mov
push
pushf
pushf
pushf
popl
mov
pushl
popl
push
lea
jmp
shld
call
jmp
call
pushf
popl
call
pushf
xchg
pushf
push
call
jmp
inc
test
sub
jb
clc
xor
cmp
clc
cmc
sub
push
pushf
pushl
mov
mov
lea
jmp
push
mov
call
pushl
call
sar
sub
lahf
mov
and
pusha
mov
cmp
cmc
sbb
mov
clc
add
pusha
stc
jmp
neg
mov
stc
call
not
pusha
pushl
lea
jmp
pusha
pushf
pushf
mov
call
mov
cld
pushf
pop
lea
lea
call
cmc
bt
bt
stc
add
clc
lea
test
call
call
pushl
popl
stc
btr
btc
rcr
movl
pop
push
mov
and
rcr
sar
neg
bsr
dec
btr
call
xor
mov
bsf
movzbw
inc
test
mov
cmp
pusha
call
mov
pusha
movsbl
pushf
mov
jmp
pushf
call
mov
pushf
pushf
mov
lea
jmp
mov
pushf
movb
lea
jmp
clc
test
and
jmp
pushl
popl
pushf
movb
movb
lea
jmp
movzbl
pushf
popl
add
ror
pushl
popl
add
clc
sub
movl
call
pushf
popl
call
test
sub
push
pushl
lea
jmp
bts
aaa
shl
mov
pushf
sub
clc
add
pushf
call
push
pushl
popl
mov
pushf
lea
jmp
dec
adc
inc
shl
mov
cmc
dec
and
sbb
mov
call
lea
cpuid
bt
call
shrd
ror
mov
btc
cwtl
lea
bsf
sub
bsr
lea
sar
not
movzbl
and
bts
sub
pusha
not
mov
pusha
call
cld
movl
mov
pushf
mov
movb
pushf
cld
push
call
movzbw
pushf
clc
adc
shld
bt
pushl
bsr
sbb
push
pusha
xchg
or
rcl
mov
neg
test
lea
shrd
neg
call
setnp
inc
sub
daa
lea
or
push
sar
and
shrd
not
sub
not
mov
jmp
cld
std
std
xchg
pusha
pushf
not
mov
jmp
mov
mov
pop
pushf
popl
shl
xadd
pushl
popl
and
shl
xadd
pushf
movl
shl
shr
mov
adc
btc
inc
cmp
neg
lea
jmp
btr
mov
test
pushf
push
call
call
push
pusha
call
rcl
btr
test
movzww
jmp
call
call
jmp
lea
aas
not
lea
lea
jnp
sub
clc
bswap
sbb
bsr
lea
or
add
btc
and
and
sub
not
pusha
movzbw
movsbw
mov
jmp
pushf
stc
pushl
popf
mov
lea
jmp
mov
pushl
rep
bswap
neg
movsbw
mov
adc
movzbw
not
adc
mov
std
clc
cld
jmp
add
jmp
xchg
pushf
not
movsbw
mov
push
not
pushf
not
mov
call
bt
add
cmc
mov
cmc
sub
pushf
neg
push
pusha
dec
mov
pushf
movb
inc
cmc
clc
stc
add
stc
mov
clc
clc
sub
pushl
call
pusha
movw
mov
mov
push
movl
pushf
lea
jmp
bswap
movsbw
dec
not
rcr
ror
movsbl
stc
lea
call
sub
push
pushl
lea
jmp
movsbw
mov
push
movzbw
lahf
mov
pushf
call
pushf
mov
jmp
pushl
popl
pushf
pushf
push
pushf
lea
jmp
mov
pushf
mov
pusha
pushf
movb
mov
jmp
mov
push
call
call
push
movsbw
mov
cld
jb
cld
lea
pushf
jmp
mov
jmp
mov
mov
call
jnp
ror
mov
shl
mov
cmp
push
cmp
sub
pushf
shr
pushf
jmp
xor
mov
bts
shl
clc
mov
bswap
xadd
add
bsf
bt
stc
mov
bt
cmp
sub
mov
ror
inc
call
mov
call
pop
mov
call
bsf
sub
mov
ror
jmp
add
and
mov
mov
shl
cmc
not
adc
mov
pusha
test
add
mov
mov
pusha
pushf
movb
pushl
lea
jmp
pushl
popl
push
lea
jmp
call
xchg
not
push
movsbw
mov
not
mov
pop
xchg
pushf
movzbl
pusha
call
movb
mov
movw
pushl
ret
lea
neg
lea
lea
dec
cmc
rcl
ror
clc
cmp
test
lea
jmp
bt
sub
pusha
mov
movb
lea
jmp
shl
call
cmc
neg
shrd
mov
aas
xor
clc
pop
bts
cwtl
shl
shrd
pop
bswap
dec
jmp
jmp
shl
shl
mov
push
bt
add
pushf
push
mov
push
lea
jmp
movsbw
mov
pushf
push
not
mov
mov
jmp
mov
movzbl
neg
pop
neg
inc
dec
btr
lea
jo
ror
bsf
call
stc
pushl
popl
clc
jmp
call
jmp
stc
sub
pushf
pushf
pushf
lea
jmp
lea
jne
pushf
call
mov
pushf
mov
lea
not
movsbw
pop
pushf
popl
rcl
btc
ror
btr
pushl
popl
shld
bsr
movl
push
dec
shrd
rcr
mov
bsf
shld
add
neg
bsr
dec
push
ror
movsbl
lea
cmc
cmp
sub
pusha
pusha
lea
jmp
popf
push
pushf
lahf
call
not
movl
pushf
inc
call
pushf
popl
lea
jae
popl
pusha
lea
jmp
movb
pushf
shr
mov
jmp
mov
push
bswap
pop
pushf
popl
bsr
jmp
stc
push
pop
bsf
push
movsbw
movzbl
sar
bsr
mov
rcr
shld
neg
jmp
bt
xor
test
cbtw
bt
push
call
pushf
pushf
popl
call
lea
movsbw
not
mov
bswap
mov
push
idivl
mov
push
mov
pushf
pusha
mov
push
jmp
xor
jmp
push
pusha
mov
lea
jb
pushf
mov
push
push
call
lea
call
mov
pusha
pushf
call
cmp
mov
pushf
sub
push
jmp
movzbl
btr
sub
bswap
mov
cmp
shl
bts
inc
add
add
add
bt
bsf
xor
add
not
bsf
btr
mov
push
shl
bt
call
cld
pushf
movl
rep
not
shr
rol
bt
mov
bsf
sar
rcl
cmp
mov
jmp
pushl
xchg
pushl
mov
mov
push
mov
not
not
not
mov
push
pushf
mov
call
xor
mov
mov
cmc
sub
call
mov
lea
jge
push
pusha
pushf
popl
call
bswap
pusha
mov
mov
pop
xchg
movzbw
not
movsbw
bswap
mov
mov
movzbw
movzbl
pushf
popl
sub
movzbl
pushf
sar
pushl
popl
cmc
movl
ror
pusha
xchg
mov
movzbw
dec
shl
neg
call
cmc
cmc
sub
pusha
lea
jmp
mov
jmp
pushf
clc
pushl
popf
pusha
pushf
mov
lea
jmp
shl
cwtl
or
adc
mov
cmc
shr
mov
cmp
cmc
add
jmp
pusha
push
jmp
movb
mov
movb
pusha
call
jl
push
mov
pushf
pushf
pushf
pushf
mov
lea
jbe
push
pusha
push
pushl
push
xchg
not
push
mov
pushf
mov
push
pushf
pushf
mov
bswap
mov
xchg
pushf
popl
bt
pushf
call
movb
pushf
pusha
mov
jmp
movl
movzbl
shld
movsbl
or
mov
cmc
cmc
pop
neg
inc
pop
bswap
dec
bswap
ror
btc
btr
not
rcr
lea
test
cmc
mov
sub
push
pusha
push
lea
jmp
ror
clc
push
mov
push
mov
bt
movb
bt
stc
sub
stc
test
call
movzbw
dec
jmp
mov
push
push
movb
lea
jmp
cmc
test
xor
push
movw
call
pushf
mov
jmp
push
jmp
jmp
push
cld
bswap
lea
pusha
xchg
push
cld
pop
push
mov
cld
pushf
push
movb
cld
push
call
call
jmp
push
pusha
pushf
mov
push
lea
jmp
call
mov
pusha
call
add
add
add
and
inc
add
dec
add
add
add
sub
add
insl
add
cli
insl
add
sub
add
add
mov
add
outsb
add
outsl
add
mov
add
outsl
add
and
add
add
cltd
jo
add
jno
add
add
movsb
jno
add
jno
add
jb
add
add
mov
add
in
jb
add
add
mov
add
jae
add
jae
add
add
dec
inc
or
mov
jns
add
nop
or
