leave
dec
mov
add
icebp
aad
add
addl
inc
add
add
add
and
and
std
add
addl
inc
add
mov
lods
data16
lcall
ret
cmpsb
add
les
pop
out
sbb
xchg
add
add
and
sbb
ljmp
ds
or
add
and
sar
or
add
and
pop
push
std
insl
push
and
std
adc
add
and
test
mov
add
and
test
insb
add
test
add
add
in
out
sahf
leave
lcall
int
jns
out
scas
and
inc
inc
inc
xor
shr
sbb
cmc
push
add
add
push
and
bound
add
shrl
out
scas
xchg
inc
xchg
ds
inc
add
add
mov
dec
xchg
sbb
scas
xchg
ret
scas
sbb
and
ret
and
sar
or
add
dec
shrl
push
or
add
scas
sbb
scas
cs
pop
push
ffreep
stos
and
leave
in
add
add
hlt
ds
push
insl
push
or
add
sbb
and
scas
cs
pop
push
and
and
add
jmp
roll
push
or
add
sbb
push
inc
mov
and
in
inc
sahf
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
cmpl
icebp
and
push
add
add
push
insl
mov
add
add
icebp
loope
ret
dec
out
insl
mov
pop
mov
inc
add
std
sbb
add
std
cmc
or
add
pop
xor
add
std
stos
or
add
jns
inc
testl
ljmp
inc
add
add
and
icebp
or
add
icebp
sbb
pop
div
inc
add
push
add
add
sbb
out
inc
add
add
add
rorl
add
pushf
imul
or
add
out
imul
jns
fcomip
inc
add
scas
mov
add
add
add
add
and
cwtl
testl
xchg
sbb
ss
mov
xchg
rcl
mov
scas
lods
ss
sbb
ss
mov
xchg
rcl
mov
scas
lods
testl
imul
testl
rorl
mov
or
or
mov
xchg
mov
addl
testl
jns
insl
lahf
outsb
jns
and
lahf
dec
shl
sub
pop
xor
add
add
mov
loop
jns
pop
jns
lods
testl
inc
add
inc
testl
add
add
add
dec
std
add
add
mov
dec
mov
inc
add
dec
.byte
inc
cmpsl
push
mov
rep
cmp
into
push
sbb
into
push
sbb
imul
jg
sbb
sbb
insb
into
push
sbb
out
sbb
stos
sub
push
imul
xchg
sbb
push
into
push
sbb
test
add
push
sbb
js
sbb
imul
mov
out
cmpsl
push
cmp
push
sbb
sub
cmp
std
cmp
sbb
popf
add
mov
popa
add
pushf
inc
cli
outsb
mov
out
sbb
mov
mov
es
sub
test
push
fcomps
sbb
mov
sbb
xchg
sbb
cmp
xor
out
sub
test
fadds
cli
xor
dec
popf
push
jnp
push
sbb
cmp
mov
cmpl
add
add
pop
cmp
or
add
jne
add
pop
cmp
sbb
add
jo
pusha
adc
and
ss
cmp
fistl
je
inc
mov
add
inc
mov
add
sbb
imul
test
sbb
sbb
je
push
shrl
sbb
cmp
std
add
jge
push
inc
sbb
push
inc
sbb
xor
sbb
jmp
xchg
pusha
cld
lock
mov
lea
aaa
mov
add
sbb
loopne
mov
or
jno
loopne
mov
mov
sbb
out
pushf
xor
sbb
inc
cmc
pushf
xor
sbb
pushf
xor
fisubs
xchg
sbb
popa
jecxz
pushf
xor
sbb
xor
mov
jnp
sbb
rcr
mov
and
sbb
add
xor
sarl
fildl
pushf
xor
sbb
pushf
xor
sbb
sbb
fdivs
sbb
repz
or
es
cmp
push
cmp
dec
jmp
sbb
mov
lret
sub
push
aaa
add
or
mov
adc
xor
dec
popf
inc
mov
sti
js
add
mov
pushf
sub
inc
sbb
pop
push
mov
pushf
sub
lods
repz
fistps
out
stos
sbb
std
fadds
stos
lods
enter
pushf
sub
add
js
cmp
inc
pushf
xchg
insl
mov
add
popf
or
xchg
xchg
sbb
sbb
mov
cld
xchg
or
xchg
xchg
sbb
sbb
xchg
cmp
mov
repz
xchg
add
ds
popf
inc
mov
add
xor
jge
adc
into
push
sbbb
in
push
sbbb
push
xor
pushf
xor
pushf
push
cmpsb
pushf
inc
pop
pushf
inc
mov
sbbb
dec
pushf
and
sbb
cmc
sbbb
scas
sbb
sub
xor
rcrb
sbb
push
sbbb
into
push
sbbb
or
rcrb
sbb
push
sbbb
into
push
sbb
pop
sub
xor
rcrb
sbb
push
sbbb
es
cmp
xchg
sbb
xor
mov
sbb
test
add
sbb
add
xchg
dec
or
pushf
xor
add
jne
add
cmpsb
cmp
sbb
sbb
cmpsb
mov
inc
sbb
add
add
xor
cli
xor
xor
mov
inc
sbb
scas
mov
dec
addl
add
mov
inc
sbb
fadds
into
and
sbb
adc
out
dec
pushf
xor
repz
les
cmp
sbb
into
rcrl
sbb
mov
xor
and
sbb
inc
scas
cli
lods
pushf
inc
mov
fistl
sbb
or
rcrb
sbb
push
inc
sbb
jno
fistl
xor
sub
xor
insb
sbb
test
add
sbb
xor
into
shrl
sbb
xor
sbb
cmpsb
mov
sbb
scas
add
les
xchg
fsubrp
cmc
xchg
sbb
inc
scas
dec
cmp
xchg
lods
cli
push
cmp
xchg
addb
xchg
and
ret
sbb
push
xchg
xchg
into
and
inc
xor
or
mov
sbb
test
add
sbb
hlt
sbb
lods
sbb
sbb
xor
sbb
xor
les
cmpsb
cmp
xor
xor
xor
xor
xor
and
sbb
inc
scas
add
xchg
fadds
cli
pop
add
mov
xor
mov
xor
ficomps
scas
sbb
fisttpl
insb
sbb
add
cli
lods
cmp
sbb
jnp
mov
add
std
cmp
mov
add
sub
cmpl
inc
imul
add
xor
std
mov
std
sbb
inc
popa
add
mov
mov
fcoms
sub
icebp
mov
pop
fcomps
inc
xor
sbb
ds
sahf
add
mov
push
lods
xor
sub
pop
add
sbb
lods
and
sub
cld
add
add
cmp
jne
sbb
xchg
xor
jnp
inc
mov
add
xor
sbb
inc
sbb
push
sbb
sbbb
push
sbb
pop
xor
push
sbb
scas
sbb
cmpsb
mov
xor
sbb
into
push
negb
cmp
js
repz
add
push
nop
cmp
inc
cmp
inc
and
lods
andb
add
sbb
sbb
mov
pop
add
negl
pop
ret
add
leave
es
cwtl
gs
int
add
jge
out
test
pop
mov
scas
es
pop
js
inc
push
into
or
pop
mov
sub
add
cmp
jne
sbb
xchg
and
sbb
dec
popf
jnp
mov
add
add
aam
sbb
sbb
lods
adc
xchg
mov
cmp
xchg
sbb
pop
push
or
xchg
cmp
xchg
fldenv
push
aad
sub
pop
cmp
lods
inc
pop
add
pop
cwtl
arpl
into
sbb
xchg
add
sbb
movsl
or
movsl
xchg
and
push
add
dec
jnp
push
mov
add
xor
inc
xchg
add
sub
mov
mov
xchg
xor
inc
pop
add
sub
mov
imul
sbb
add
sub
mov
aas
popf
push
mov
add
add
xchg
mov
int
test
xor
sbb
rclb
push
xchg
sbb
add
xor
sbb
jne
add
mov
cli
lods
add
add
pop
mov
sbb
sub
xor
pop
sbb
sbb
pop
sbb
or
push
sbb
int
xchg
sbb
sbb
mov
sbb
add
pushf
xor
sbb
add
lods
adc
outsl
std
lods
inc
pop
pushf
xor
loopne
lods
cmpsb
pushf
inc
xchg
add
add
repz
stos
sahf
sbb
sbb
and
and
add
sbb
push
mov
out
cmp
xchg
push
cmp
push
cli
sbb
mov
mov
push
sbb
jne
add
push
sbb
sbb
push
cmp
mov
popf
jnp
mov
add
xchg
repz
cmp
es
popf
std
es
dec
add
push
cmpsl
cmpsl
add
sub
popf
std
xchg
popf
xchg
add
pop
es
popf
pop
pushf
push
xchg
mov
and
pop
sbb
push
sub
xchg
sbb
cmp
pop
pusha
sbb
cmpsl
sbb
js
sbb
mov
mov
rcrl
sbb
std
mov
sub
mov
mov
add
sbb
cmpsl
mov
and
into
mov
add
lds
cwtl
lret
sbb
inc
sbb
inc
mov
ja
out
xchg
les
sbb
mov
out
add
shlb
out
rcll
sbb
insb
sbb
add
sub
mov
sub
mov
xchg
sbb
push
sbb
sub
int
sbb
xor
push
sbb
sub
sbb
xor
sbb
fcomps
sbb
xor
push
rcrl
push
pushf
ret
pop
pushf
ret
xchg
pushf
ret
std
sbb
sub
sbb
sbb
int
sbb
sbb
pushf
xor
lods
pop
lds
sub
inc
std
sbb
add
mov
cmpsl
lods
testl
adc
sbb
add
les
es
sub
xchg
test
xchg
sbb
sarb
sbb
add
jne
add
les
and
lods
and
or
xchg
or
inc
jnp
adc
add
xchg
test
add
test
popf
jnp
mov
mov
push
repz
lea
test
inc
lods
and
push
sbb
add
add
add
inc
rolb
inc
pusha
mov
adc
mov
mov
sbb
mov
push
mov
mov
lods
add
sbb
xchg
sbb
sbb
sbb
add
icebp
imul
repz
jnp
mov
sub
xor
icebp
xor
add
or
add
xchg
add
lods
and
js
add
add
add
js
fldenv
std
sbb
leave
add
js
fnstenv
xor
xchg
fldenv
add
std
sbb
es
fcomps
push
sbb
mov
sbb
fcomps
sbb
sbb
add
xchg
sbb
sbb
sbb
sbb
push
mov
xchg
shr
sbb
pop
sbb
mov
xchg
sbb
sbb
mov
repz
lods
pop
add
xchg
pushf
icebp
pop
add
mov
pushf
icebp
push
pushf
call
xchg
pushf
popf
std
dec
popf
push
jnp
sbb
js
xchg
sbb
sbb
add
js
add
das
mov
inc
pop
pushf
inc
cmp
push
fs
xor
es
xchg
test
out
mov
add
repz
xchg
push
xchg
es
push
pop
es
repz
fldt
inc
std
inc
inc
or
out
sub
test
push
std
test
sbb
dec
jge
addr16
push
mov
xchg
rcrb
sbb
push
addr16
cmp
into
test
leave
pusha
cli
add
or
inc
or
sbb
sbb
lods
sbb
test
xor
cmp
std
pusha
jg
adc
inc
popf
cli
cmpb
jnp
mov
shlb
xor
add
out
sub
push
cmpsl
xorl
lods
xor
fnstsw
in
or
cmp
add
jno
jp
and
lods
pop
mov
iret
or
pop
mov
mov
scas
mov
or
cmp
dec
sub
cmp
xchg
mov
xchg
jg
sbb
mov
insb
nop
and
ja
jo
inc
insl
jl
xor
cmp
cwtl
push
cmc
cld
add
adc
insb
xchg
sub
and
lahf
cmp
js
imul
xchg
test
add
dec
dec
aas
mov
repz
ds
pusha
pop
test
push
imul
mov
test
adc
sbb
call
cmpl
pop
pop
inc
dec
cltd
imul
jno
aas
or
test
jne
cs
adc
pop
lock
sub
dec
cmpsl
es
and
popa
xchg
sbb
fcmovb
sahf
cmpsb
pop
repz
arpl
enter
push
clc
fistpl
adc
mov
fs
ljmp
sbb
or
fmuls
lcall
stc
int
cmp
and
out
push
lea
test
sbb
out
mov
mov
xlat
aas
push
lods
push
cld
mov
push
mov
mov
dec
sbb
sbbl
xrelease
repz
jb
fisubrl
dec
xor
aas
xor
sbb
rcl
and
jns
fistl
add
fcompl
icebp
repnz
fdivp
movsb
pop
sub
xor
push
cmp
test
out
xchg
fs
and
aaa
jmp
add
js
in
and
or
imul
outsb
or
stos
lods
push
xchg
daa
jbe
loopne
jno
dec
clc
subl
jle
xor
jp
or
mov
pop
sarb
cmpsl
dec
pushf
pop
pushf
in
push
sahf
lods
faddl
inc
test
into
cmp
mov
test
call
pop
push
push
ret
loop
mov
adc
lds
mov
int3
bound
mov
push
xor
insl
xchg
mov
data16
xchg
pusha
jae
hlt
into
push
pop
sbb
scas
scas
loopne
lcall
sahf
ret
ss
test
pop
push
mov
xor
jae
push
mov
mov
cmp
push
adc
jle
stos
bt
mov
dec
rcrl
pop
call
out
aas
ljmp
and
jnp
xchg
sbb
xchg
xlat
or
ja
imul
xorb
adc
out
or
test
inc
jbe
adc
or
out
inc
jle
dec
fdivrl
aas
jp
pushf
out
pop
outsl
inc
cmpl
xchg
gs
out
jecxz
xor
dec
xchg
fisttpl
mov
lcall
out
sub
pop
inc
stos
nop
and
in
lret
ret
mov
fisubl
ljmp
push
fs
mov
nop
fcomps
adc
lods
fwait
stos
dec
das
int
add
mov
ret
and
mov
adc
in
jl
and
pop
cmp
xchg
sub
fs
daa
cmpsb
cmp
cmp
sarb
xchg
or
cmp
fsub
jmp
fistpl
cs
push
xchg
fistl
out
rorb
add
push
and
mov
xlat
imul
stc
clc
sub
les
cmp
arpl
lds
test
push
jmp
mov
pop
sbb
xlat
sub
fisubs
mov
mov
adcl
decb
enter
into
repnz
dec
loop
jnp
cmp
sbb
fdivr
call
aaa
loopne
mov
and
xchg
push
call
mov
lock
pop
call
imul
dec
loope
out
pop
xor
outsb
cmp
push
and
pusha
repnz
sbb
out
add
xchg
mov
xchg
insb
push
insl
mov
push
cmp
and
cmp
sar
mov
and
setbe
ret
cmc
sarl
mov
jo
lahf
and
mov
imul
in
addr16
push
fidivl
pop
adc
mov
fwait
in
dec
inc
push
dec
mov
jo
lahf
and
int
mov
ds
pop
mov
and
orb
push
jne
xchg
outsb
ljmp
dec
les
inc
cli
or
movsb
jecxz
jno
lds
lds
dec
lds
out
cmpsl
addr16
push
xchg
je
sub
movsl
test
mov
sbb
mov
rorb
hlt
bswap
sti
rol
popf
ror
int
ret
jns
mov
inc
aad
out
and
inc
dec
xchg
cmpsb
movsb
lret
loopne
les
mov
sbb
bound
dec
mov
and
mov
and
dec
mov
cmpsl
xchg
mov
pop
jb
daa
hlt
mov
repnz
in
jb
pop
jp
mov
cld
xlat
fnstcw
adc
cmp
and
jge
aas
xor
mov
cmp
adc
mov
mov
lea
in
push
mov
cmpsb
in
gs
mov
shlb
sbb
mov
add
aaa
mov
pusha
cmp
outsb
jl
cmp
jns
inc
cmc
mov
inc
fcoms
shr
xchg
mov
dec
sub
movsl
push
dec
mov
nop
scas
sub
imull
add
mov
pop
xor
xchg
shll
push
add
rcl
xchg
shll
adc
mov
decl
sub
mov
std
cwtl
inc
mov
test
mov
xchg
std
inc
cld
pop
mov
clc
xor
pop
or
push
lcall
inc
insb
push
sarb
xchg
cmc
stos
lcall
mov
mull
mov
outsb
xchg
xor
mov
stc
mov
push
hlt
sub
pusha
repnz
mov
cmp
add
pop
jl
adc
xchg
popa
mov
cmp
sub
mov
ljmp
stos
and
shr
fildl
fmull
jo
dec
dec
pop
pop
adc
repz
in
or
jae
fidivrl
add
std
push
scas
and
divb
out
mov
fwait
dec
mov
fs
push
pop
rclb
xchg
inc
and
pop
sbb
daa
mulb
mov
pop
dec
mov
add
int
jbe
dec
fmull
sbb
sbb
mov
enter
mov
in
push
aam
insb
cmp
mov
pop
cmp
nop
ja
cmp
xchg
mov
dec
jno
sbb
rcrl
jg
stos
cwtl
mov
dec
popa
mov
mov
bound
push
jl
orb
pop
mov
dec
jne
fucom
sbb
pop
mov
scas
mov
data16
outsb
xor
push
lcall
sarb
stos
push
cmp
pop
insb
xor
mov
inc
movsl
pop
loope
pusha
cmp
push
sbb
into
fidivrs
push
cs
sub
xchg
movsl
hlt
add
and
pop
divb
leave
and
mov
jno
das
dec
push
call
jb
aas
dec
cmp
sub
adc
or
pop
inc
notb
mov
outsb
xchg
sub
insl
mov
mov
add
fcompl
sbb
sbb
add
jae
lock
out
xchg
popa
jle
pop
addb
xchg
jmp
jb
fiadds
std
xor
xor
add
dec
push
push
mov
xchg
jge
pusha
shll
call
mov
and
into
fildll
pop
jecxz
push
cmp
mov
insb
enter
pop
cli
repz
push
divl
dec
lods
insb
mov
mov
adc
test
mov
gs
lahf
lock
or
addr16
mov
mov
or
cmp
and
nop
mov
aaa
adc
outsb
clc
aad
in
jg
xor
adc
xor
testl
in
mov
scas
lock
jl
das
ja
and
mov
inc
std
push
and
adc
imul
sub
add
std
adc
test
data16
inc
or
ljmp
popa
inc
sti
mov
test
adc
sahf
popa
enter
mov
mov
ret
leave
nop
mov
jo
push
push
je
or
add
cmp
outsl
fnstenv
dec
out
insl
je
mov
inc
push
pop
mov
inc
inc
scas
loop
insb
in
test
stos
notb
test
or
cld
iret
inc
cwtl
bound
loop
test
js
pavgb
pop
sub
jae
mov
pop
jnp
add
add
mov
aad
mov
sbb
in
inc
in
clc
mov
add
fs
ss
dec
lods
sbb
jne
int3
rcr
aad
add
mov
aam
aas
shrb
pop
or
in
sti
push
and
out
aas
sub
lcall
lret
dec
aad
cmp
enter
cmp
int
movsl
mov
push
and
sbb
mov
mov
sarl
stos
add
pop
add
dec
fcmovne
mov
xorl
aam
push
mov
mov
out
push
sbb
sbb
sahf
lods
inc
xchg
data16
adc
pop
push
scas
mov
push
dec
sti
aam
fadd
and
into
movsb
ja
or
sbb
xorb
dec
cmpsl
xchg
lods
add
aad
repz
sbb
jl
xchg
in
push
jecxz
adc
addl
sbb
leave
or
xor
test
or
xchg
and
cltd
ljmp
rclb
sti
mov
cmp
mov
pop
pop
cli
loope
imul
xor
xchg
cmp
stos
sub
daa
pop
sbb
adc
cmpsl
loope
shr
repnz
mov
dec
test
add
repnz
sub
adc
jl
imul
or
adc
mov
data16
sbb
push
scas
daa
daa
or
and
cmp
xchg
rcll
cli
push
movsl
lret
cmp
and
sub
scas
repz
aad
cmp
sbb
add
sub
adc
mov
loope
pop
sub
addr16
sbb
cmpsb
neg
push
mov
idivb
in
jnp
icebp
je
sub
jl
scas
fmull
add
jmp
push
pop
stos
nop
das
lods
cld
out
out
or
jecxz
mull
lods
mov
mov
add
test
pop
insb
xor
jo
pop
push
push
cmp
das
ret
gs
mov
into
dec
jl
call
fadd
xor
es
add
cmp
lods
mov
imulb
sub
cwtl
fwait
enter
arpl
mov
ret
push
in
add
mov
rcll
mov
adc
pop
rorb
mov
leave
push
xchg
jecxz
test
mov
mov
xchg
mov
rcrb
cmp
ja
mulps
mov
in
je
cmp
nop
test
cmp
mov
fs
mov
push
mov
pusha
ds
stos
mov
push
cmp
sarb
or
leave
mov
mov
pop
lret
test
xchg
lcall
jle
inc
mov
adc
dec
hlt
push
sub
out
addb
mov
inc
mov
popf
dec
out
push
popf
push
aas
jg
pushf
jno
mov
mov
pop
insb
call
dec
adc
jo
js
jg
subl
and
mov
orl
add
sub
dec
dec
roll
pop
ss
in
out
getsec
sbb
clc
or
mov
ret
mov
push
push
mov
fsubl
xchg
mov
js
mov
repnz
adcl
cmp
pop
lds
and
mov
mov
push
aas
insl
fs
insl
xchg
fbstp
jb
dec
ja
sahf
bound
xchg
jecxz
daa
lock
mov
mov
shlb
mov
sub
jp
jecxz
rorl
pop
test
mov
xchg
idivb
dec
mov
jnp
lods
cmp
mov
popf
inc
stos
push
pop
xchg
outsb
in
aas
fwait
xchg
dec
aaa
inc
cmc
sub
pop
jae
jae
mov
mulb
loope
outsb
mov
cs
xlat
lret
dec
dec
or
in
lret
repnz
scas
mov
pop
jl
test
shll
mov
push
push
movsb
push
xlat
test
outsl
out
push
jae
les
mov
mov
sahf
pop
adc
test
dec
in
shufps
fdivl
lods
das
mov
shll
push
inc
aam
xchg
subb
xor
daa
jg
jo
pop
add
fsubs
fcomip
pushl
push
out
jp
xchg
and
cmpsb
jl
sub
jno
jb
cld
stc
les
inc
adc
aad
insl
cmpl
sbb
mov
push
xchg
or
pop
call
inc
push
icebp
lods
cld
and
inc
dec
cs
ss
in
movsl
sub
or
pop
mov
out
push
cli
add
xchg
adc
pop
mov
mov
cltd
pop
loop
xchg
or
sbb
fnstenv
mov
sahf
imul
repz
pop
mov
and
mov
pop
jg
mov
mov
leave
stc
pop
or
cmp
add
inc
les
push
push
mov
push
mov
lds
cmc
adc
test
loopne
test
mov
fnstsw
imul
dec
xorb
movsb
cmp
shl
or
icebp
int
adc
pop
jge
gs
ljmp
cmp
xchg
inc
aam
divl
mov
ljmp
fwait
inc
jmp
push
push
push
outsb
jmp
bound
out
adc
int3
scas
loopne
and
push
cmc
call
jle
xchg
mov
sbb
pop
sarb
adc
xchg
and
popf
ja
inc
outsl
mov
lcall
push
mov
aas
in
loopne
mov
push
mov
pop
popf
cs
jnp
mov
mov
es
insb
shl
dec
jns
adc
dec
das
andl
cwtl
inc
mov
push
test
repnz
icebp
fstpt
push
pusha
ss
mov
and
xchg
dec
sbb
sbb
sbb
sbb
in
subb
scas
fnstsw
aas
movsb
fs
mov
and
mov
mov
outsl
pop
out
sub
xchg
sbb
pop
adc
sahf
lods
out
test
jle
jae
sub
lret
ja
mov
insb
mov
testb
dec
cmp
fnstenv
aad
aam
adc
xchg
loope
push
push
sbb
pop
xchg
aam
and
stc
gs
cmp
popf
mov
push
outsb
mov
jno
inc
push
cmp
popf
cmp
jmp
jb
cltd
xlat
and
icebp
adc
fstpt
mov
lds
fidivs
xor
aam
xchg
lods
aam
sbb
lahf
adc
mov
jno
bound
xchg
insl
sub
fdivl
push
scas
pop
sub
cmp
in
jmp
lahf
imull
mov
or
pop
dec
leave
mov
cmp
stos
dec
ficompl
popa
out
daa
in
cmp
sbbb
das
loopne
and
negb
dec
pop
or
mov
mov
lahf
sbb
jb
push
xchg
repnz
stc
jbe
bound
lretw
pop
sub
leave
imul
fstpt
addl
mov
scas
mov
into
enter
xchg
lods
dec
pop
jno
inc
inc
rol
xchg
sti
sub
data16
iret
pop
add
push
sbb
dec
test
in
mov
call
jp
mov
pusha
jns
push
mov
out
bound
out
data16
mov
mov
xchg
notb
xor
cmp
ds
dec
add
and
lret
dec
push
or
ret
jns
sbb
into
dec
pop
xchg
adc
adc
out
stos
push
mov
in
cmpsb
lahf
std
in
add
pop
sub
xor
in
inc
movsl
sbb
add
lods
sub
and
dec
inc
mov
in
mov
mov
sub
aad
stos
ret
mov
dec
out
pop
adc
xchg
and
daa
aas
fmulp
repz
xor
fistps
rolb
jno
in
lret
out
stos
cmp
fs
ljmp
sbbb
xor
sti
mov
mov
push
cmp
daa
pop
adc
fcompl
jne
addr16
xchg
decb
stc
addr16
pop
mov
sbbl
outsb
jl
inc
xchg
and
pop
pop
lcall
packssdw
faddp
in
push
mov
xchg
xchg
jp
dec
arpl
scas
dec
inc
in
mov
xchg
mov
push
xlat
in
cmp
push
int3
daa
mov
cmpb
scas
jle
xor
dec
sti
scas
xor
sub
jg
cmpsb
adc
test
or
repz
outsl
inc
and
mov
mov
lea
sar
pop
repz
repnz
movsb
sub
dec
stos
fbstp
in
lret
pop
sub
mov
jl
push
jmp
test
out
mov
fisubl
lods
and
mov
sub
mov
inc
mov
fnstenv
push
jp
ss
scas
push
or
ss
cmp
sbbb
mov
xor
pop
mov
sub
leave
sarb
cmp
cmp
jmp
rclb
lods
loop
mov
scas
mov
jns
pop
cmpsb
scas
ficomps
mov
mov
mov
push
sbb
shrl
and
inc
scas
pop
sbb
push
push
dec
or
negb
and
mov
lahf
dec
cmpsl
sub
in
push
adc
stos
inc
fstl
jo
cmp
sbb
adc
lret
movsb
xchg
sub
dec
lcall
pop
mov
push
mov
idivb
inc
test
push
fistpl
cmpsb
pusha
inc
enter
lret
push
ret
lahf
push
xchg
push
cmp
jmp
fistpll
jno
fdivr
jp
cli
push
loope
xchg
xchg
div
add
sahf
outsl
lods
pop
and
mov
adc
jnp
pop
cmp
les
repz
push
mov
outsl
mov
aad
jbe
dec
lret
shlb
fdivrs
add
push
fistpll
hlt
imul
mov
push
ss
cltd
aas
and
lret
push
popf
mov
or
or
les
shlb
push
add
sbb
pop
addb
test
dec
enter
cmp
push
das
or
mov
push
or
or
imul
inc
cmpsb
jp
add
mov
cmp
iret
imul
fsts
imul
cmc
jbe
inc
adc
cld
pop
push
xor
push
out
jmp
test
dec
daa
outsb
pop
dec
fimuls
out
mov
sub
push
or
sbb
and
iret
push
xchg
pop
int
inc
xchg
gs
inc
int3
ja
inc
mov
cmp
sbb
ja
or
mov
lea
int
fldt
test
leave
movups
cmp
sbb
adc
mov
sbb
adc
es
and
ror
cmp
push
cmc
sti
mov
enter
dec
mov
push
jle
int
movsb
pop
mov
and
repz
pop
xchg
or
aad
arpl
push
xchg
xor
lret
adc
push
push
lret
mov
andl
jg
add
cwtl
inc
mov
mov
xchg
repz
jno
out
xor
fadds
out
out
ss
xor
pop
pop
in
inc
lea
and
andl
add
fld
fnstcw
stos
loop
dec
push
jmp
ret
sbb
xor
call
jns
lcall
shlb
pop
out
push
xchg
mov
or
push
test
lods
pop
fisttpl
push
fstl
sbb
pop
addr16
add
popa
scas
mov
lcall
sti
cmp
imul
subb
xchg
outsl
lret
dec
sti
rol
adc
inc
mov
in
bound
sbbb
cmpsl
andb
mov
out
mov
cli
lea
rcrb
repz
stos
sti
stc
xlat
push
cmp
mov
jnp
or
in
out
or
addr16
rorb
push
out
jp
fstpt
dec
mov
inc
and
clc
fs
ret
mov
je
jl
push
mov
xor
sbb
jne
divl
or
divl
jle
mov
cli
insb
mov
push
das
pop
add
push
rcr
adcb
sbb
mov
std
lret
dec
dec
je
bound
in
or
pop
sub
int
adc
roll
sti
and
xchg
pop
stc
pop
rolb
jae
sub
push
xchg
mov
add
xor
sbbb
sub
lret
sti
jns
cmp
push
dec
mov
pop
loope
loopne
faddl
sub
and
pusha
sub
jbe
push
cmp
stc
pushf
jmp
pushf
pop
xchg
arpl
rolb
in
xchg
mov
mov
inc
xchg
adc
arpl
and
iret
or
ss
popf
loope
shrb
sub
stos
adc
adc
or
add
sbb
adc
addr16
not
mov
xor
iret
scas
stos
das
fsubr
xor
xchg
push
cmp
orb
imul
mov
jmp
push
and
cmc
mov
add
sbb
xchg
insl
dec
pop
insl
cmpsl
addr16
and
pop
pop
pusha
repnz
mul
fimull
inc
add
xchg
mov
or
adc
sbb
iret
out
adc
je
mov
push
push
fwait
inc
push
sbb
out
pushf
int
and
pop
imul
loop
lcall
fcom
out
data16
inc
fidivrl
outsl
cmpsb
mov
mov
xchg
mov
mov
adc
mov
xor
and
aam
mov
push
mov
popl
stos
inc
or
popa
xchg
xor
rcrl
enter
push
fmul
shll
lods
stos
sub
mov
dec
icebp
mov
pop
daa
mov
jno
xor
rcr
es
fwait
push
fdivs
movl
xchg
inc
mov
cwtl
push
jg
stos
iret
or
rcll
aaa
mov
push
aam
push
sub
fwait
push
pop
es
cmp
add
push
mov
test
loop
mov
xor
mov
push
push
sub
add
pusha
test
add
mov
stos
sahf
sarb
es
insb
icebp
fwait
popf
nop
add
lods
sbbb
mov
fldenv
dec
sbb
insl
and
jnp
inc
mov
inc
fsubrl
fildl
xlat
pop
loope
orb
repz
rolb
stc
cmp
push
out
mov
addr16
and
loopne
enter
cmpsb
out
lcall
mov
lock
jp
bound
out
cli
fs
sub
aas
pop
adc
outsl
inc
or
jno
test
jg
shlb
xor
dec
pop
aaa
mov
shlb
ror
adc
decl
aad
push
test
mov
push
inc
push
arpl
push
movsb
shlb
test
add
std
xchg
fldl
xchg
repz
vcmpsd
cmpsb
cmc
enter
cmp
shl
mov
adc
mov
ds
push
dec
imul
push
mov
sbb
and
pop
sub
sub
push
ret
sub
add
dec
lahf
mov
push
popf
fstpt
inc
inc
xchg
cmc
clc
repnz
dec
sbb
mov
sub
fsubl
clc
scas
sub
fistpl
xchg
adc
add
into
jl
mov
xchg
lret
mov
inc
icebp
add
clc
les
jmp
jbe
test
add
mov
cmp
outsl
mov
insl
inc
cltd
bound
xchg
fs
fiadds
push
mov
lea
cmc
jns
sbb
movsb
pushf
scas
inc
mov
shlb
xor
aam
insl
add
int
jmp
popa
sbb
rep
shlb
jbe
mov
sahf
outsl
add
outsb
inc
mov
mov
jns
mov
jns
xor
jnp
sarb
shll
pushf
pop
jg
movsb
insl
arpl
aaa
test
lret
or
in
push
stc
call
dec
jo
mov
mov
cmpsl
adc
pushf
test
loope
jle
outsl
bound
inc
cmp
pop
mov
out
inc
inc
aam
push
les
mov
mov
inc
and
test
push
stos
pop
jle
ror
outsl
add
out
fimuls
mov
clc
inc
adc
jbe
lds
jbe
adc
cmp
xchg
cmp
add
dec
mov
sti
xchg
mov
out
add
sbbl
cmp
mov
faddp
orl
repz
mov
xorl
mov
jnp
scas
pop
sbb
imul
add
mov
xchg
ret
daa
add
mulps
aas
dec
int
dec
or
out
stos
xchg
inc
repz
clc
pop
ret
iret
std
insl
jb
and
push
xchg
enter
push
cmpsl
lods
sub
inc
sub
fsubrl
or
push
dec
jns
call
rep
xor
outsb
or
mov
dec
scas
fbstp
out
mov
mov
jb
push
scas
cwtl
testb
lret
dec
pmulhuw
inc
sbb
pushf
cwtl
mov
xor
or
popa
cwtl
jbe
cmp
js
bound
mov
icebp
pop
jno
inc
mov
and
mov
pop
fisubrs
jge
fldt
mov
pop
repz
fdivr
popf
pop
leave
fimull
sbb
xor
repz
mov
in
repz
xor
mov
mov
jb
fcompp
push
data16
xchg
scas
push
jmp
gs
in
cld
or
and
aam
dec
jb
inc
xchg
call
testb
jae
fisttpl
and
cmp
std
cmp
lea
push
inc
inc
jle
sahf
sub
mov
fisttps
xor
fidivs
and
sub
clc
scas
nop
out
pushf
test
fwait
fwait
dec
bnd
aad
xchg
mov
and
push
fwait
pop
orb
push
cmp
repz
shlb
enter
push
dec
dec
xchg
sbb
jg
xchg
movsl
mov
cwtl
das
repz
xor
cld
cmc
in
pop
popf
dec
xchg
ljmp
out
jnp
mov
push
mov
nop
out
cmp
ret
cli
xor
xchg
pop
in
sbb
or
xor
jb
push
xor
mov
add
cmp
xlat
jne
cmp
jmp
mov
mov
xchg
shlb
inc
xor
sub
out
jp
xchg
andb
je
adc
lock
inc
leave
sbbb
aam
cmpsl
adc
es
ljmp
cmpb
inc
xchg
jl
push
adc
loop
nop
mov
lcall
pop
setp
inc
sti
es
mov
sub
mov
js
pop
cli
sub
mov
push
inc
es
adc
outsb
jb
cltd
xchg
and
in
pop
cltd
jo
in
inc
cs
sub
jp
in
sbb
or
xchg
mov
pop
imul
testl
push
add
fisubl
mov
cmpsl
push
and
sbb
add
mov
jmp
xchg
mov
mov
inc
dec
aas
push
lods
iret
sbb
sub
push
and
cmp
jmp
cmc
sub
cmp
xor
or
movsb
xor
dec
add
sarl
inc
lods
mov
sub
push
ret
cmpsb
outsl
mov
adc
cmp
cld
ljmp
pop
inc
shll
mov
into
pop
subb
cmp
push
outsb
out
push
mov
jnp
js
or
push
sub
xor
rolb
push
out
inc
xchg
dec
imul
ret
fisttps
or
adcb
loop
or
call
lahf
data16
ja
mov
das
jmp
pop
xor
es
jge
sarb
pop
xchg
mov
dec
cmp
xor
xchg
pop
cmpl
xorb
movsl
div
popf
lock
in
xor
in
out
xor
inc
add
push
mov
add
or
mov
xchg
mov
mov
clc
nop
inc
ja
mov
cmp
lock
xor
dec
je
add
adc
and
in
xor
test
or
and
out
xchg
lods
inc
lcall
mov
add
out
aad
inc
push
push
inc
push
les
icebp
aaa
cmp
movsb
test
add
dec
push
dec
ds
mov
int
cld
push
fstl
jg
xchg
xchg
mov
lock
mov
cmp
mov
mov
cld
add
or
mov
sbbb
push
lock
and
out
loope
imull
mov
lods
adc
xchg
bound
inc
pushf
or
enter
dec
or
ret
cmp
inc
cmc
pop
xchg
aam
sub
inc
adc
imull
sbb
dec
mov
mov
das
int
mov
lods
push
mov
lahf
sbb
imul
sbb
jne
std
sub
inc
dec
add
xor
and
jg
inc
mov
or
push
inc
xchg
mov
cmp
stos
mov
mov
inc
fsts
dec
loopne
or
out
mov
sub
mov
add
dec
cmp
in
sarl
dec
sub
lcall
lret
inc
jnp
push
popa
jmp
push
nop
lea
and
mov
xor
pop
into
pop
lods
jecxz
fsubrs
clc
icebp
addb
mov
cli
fs
xor
aas
ljmp
test
add
dec
push
nop
testw
push
popa
addb
mov
xchg
inc
lods
enter
into
xor
xor
xchg
xor
out
cmp
movl
subl
jo
push
ljmp
adc
mov
or
enter
stc
rcrl
pop
gs
pop
int3
call
dec
mov
add
or
xor
outsb
inc
lods
hlt
mov
sbb
jmp
popa
aaa
mov
adcb
ds
pop
pop
cmp
imul
sbb
mov
push
sbb
lcall
enter
daa
adc
leave
idivb
mov
adc
pop
mov
pop
ja
mov
scas
pop
mov
or
push
or
mov
mov
xchg
insb
mov
push
jae
fdivr
dec
stos
pushf
sbb
mov
inc
or
inc
shr
into
insb
mov
scas
xchg
loopne
xchg
fwait
das
push
add
insl
sahf
imull
movb
inc
cmpsb
pop
xchg
sbb
movsb
mov
or
dec
mov
inc
rol
into
push
roll
clc
mov
lea
cwtl
mov
mov
push
dec
jb
xchg
jle
jle
xor
cli
call
repnz
cmp
fistpll
in
out
and
shlb
fildll
popa
xor
scas
cltd
std
mov
inc
out
ds
fdivrp
movsl
dec
inc
insb
xchg
pop
jp
andl
outsb
sub
inc
cmp
dec
and
add
mov
and
xchg
cmp
cld
ja
testb
gs
out
adc
shlb
jl
pop
sub
bound
lds
adc
pop
mov
xchg
jp
add
adc
hlt
jg
add
push
andb
xchg
pushf
inc
ja
lahf
arpl
fdivrp
cld
inc
jmp
push
push
jne
xor
hlt
push
cmpsl
scas
or
pop
mov
xlat
add
sub
mov
pop
lea
adc
inc
push
sar
inc
cmc
mov
sub
je
or
imul
adc
int3
shrl
hlt
ret
add
mov
testb
mov
xchg
dec
lods
leave
xchg
mov
aaa
pop
dec
in
ret
sub
pop
add
lea
ror
data16
loope
and
add
in
loopne
imul
repnz
jbe
int3
xchg
test
dec
mov
and
pushf
stos
in
dec
mov
add
std
outsl
add
jp
cmpsb
mov
push
testl
mov
add
mov
jo
loope
mov
xchg
inc
xchg
adc
or
sbb
call
xor
aad
jb
aaa
mov
push
cli
test
pop
sub
insb
cltd
mov
dec
fwait
das
stos
daa
cli
xlat
fwait
mov
addb
repz
pushf
jb
int
mov
lret
push
and
mov
mov
in
arpl
lock
jns
fistps
test
fcmovb
inc
sub
mov
and
imul
cmp
fs
jecxz
xchg
fisttpl
dec
cltd
jno
out
push
std
lea
dec
pusha
xorb
loopne
jge
push
sbb
enter
cld
test
add
sub
mov
rclb
lods
adc
mov
jle
js
addr16
repnz
dec
nop
adc
jp
jo
mov
shl
or
mov
xor
clc
into
dec
push
popa
cmp
or
or
push
cwtl
jbe
movsb
mov
inc
jnp
lods
decb
push
aas
xor
jno
into
xchg
repnz
add
out
mov
or
decb
jge
xorb
lcall
and
aam
push
adc
icebp
cs
loopne
push
je
in
test
repz
je
arpl
mov
jnp
pop
add
imul
movb
ds
in
dec
jb
ljmp
neg
jbe
xor
adcb
push
add
and
fsubrl
xlat
push
aaa
inc
aaa
inc
mov
aad
cmpl
clc
cs
mov
arpl
sub
pop
movsb
insl
leave
in
xor
std
add
lahf
bound
sbb
lods
bound
xchg
sub
test
stc
sbb
jmp
jnp
push
cld
fs
xor
adc
inc
mov
add
fidivl
out
sub
clc
mov
push
test
pop
xchg
adc
incb
test
mov
ret
loop
mov
inc
jmp
dec
push
mov
adc
or
lds
popf
lods
cmp
mov
mov
roll
in
jae
sbb
push
or
ret
mov
sub
adc
fs
call
pop
insl
aas
xchg
inc
out
pop
mov
adc
fmul
inc
mov
and
add
shll
jg
orl
jbe
jg
pop
sub
in
lret
lods
inc
ret
lods
and
icebp
xlat
rolb
mov
fsubrl
or
xorl
addr16
sti
inc
cmp
mov
jo
jo
outsl
ljmp
dec
imul
pusha
mov
mov
shrl
mov
dec
mov
mov
mov
into
jg
xchg
or
cmpsl
in
push
mov
sbb
add
sub
sub
inc
imul
xor
mov
into
sub
add
lcall
insb
das
push
jg
sub
mov
cmp
xchg
dec
inc
lret
cmc
fidivs
pushw
rclb
add
pusha
dec
adc
pop
int
mov
jp
push
adc
adc
pop
jp
jno
test
insb
imul
rolb
adc
push
test
adc
ret
or
or
and
out
pushf
add
nop
push
insb
mov
jae
adcb
jge
and
cmp
gs
jbe
cmp
xchg
inc
mov
mov
in
ljmp
cmc
xchg
shll
mov
sbb
std
or
xchg
mov
pop
mov
aas
push
test
test
aad
or
adc
inc
jle
sub
inc
je
fucomip
ss
clc
movsb
mov
fistl
cmp
inc
mov
ja
fcmovne
pop
movsl
imul
mov
add
sahf
mov
mov
sbb
ficompl
dec
das
jg
hlt
inc
sbb
inc
movsb
and
cmp
xchg
shll
insl
inc
sub
and
imul
pop
adcl
push
dec
pop
jbe
jge
daa
inc
push
dec
lods
wrmsr
inc
ds
inc
mov
push
inc
xchg
add
jp
mov
sti
push
lret
mov
out
sub
out
mov
jns
inc
dec
push
test
js
ret
jnp
test
sub
jl
sbbl
ja
fldcw
sahf
leave
mov
and
call
call
fistpll
fwait
ja
sub
bound
outsb
pusha
jle
cmpb
push
mov
sahf
pop
adc
xchg
mov
hlt
loope
incl
and
jnp
jbe
add
sub
andb
insl
and
daa
pop
pop
xor
aas
xlat
or
jae
xor
mov
lret
dec
in
scas
push
dec
or
push
addr16
mov
insl
arpl
pushf
inc
dec
add
pop
pop
repnz
inc
sti
jno
cmp
aam
sbb
add
sbb
std
jge
push
insb
mov
xchg
add
insb
lahf
loop
push
inc
xchg
xchg
inc
fpatan
push
push
cltd
inc
push
dec
fmul
pushf
mov
cltd
lds
mov
repz
xor
dec
jg
pop
test
lods
push
mov
cmpsb
das
scas
test
sub
loop
xchg
faddp
pop
mov
fldt
fscale
mov
out
mov
mov
sahf
fidivrl
jg
xor
mov
outsb
mov
outsl
xchg
xchg
pop
repz
shl
sti
jle
das
pop
lahf
gs
push
in
sub
add
enter
inc
int
mov
roll
dec
ds
lods
or
cwtl
jnp
js
jo
xlat
pop
sbb
test
jl
mov
sub
aad
jo
mov
stos
push
and
aaa
gs
insb
testl
fsubrl
cmp
imul
dec
pop
mov
test
rclb
cmp
dec
adc
mov
pop
loope
fsubrp
mov
push
mov
jb
jns
pop
das
xchg
out
cmp
cmp
cltd
lds
xor
je
insb
iret
sub
lahf
dec
mov
add
jge
aam
inc
imulb
sbb
cli
jbe
inc
xor
ret
aaa
lret
jbe
jnp
enter
fmull
or
imul
mov
push
mov
dec
sbbl
mov
xchg
jecxz
stos
in
das
and
mov
mov
and
mov
repnz
fstl
and
insl
cmpsb
shr
sbb
mov
xchg
jo
fstpl
add
in
cltd
mov
or
ret
add
inc
ljmp
aas
push
pop
div
pop
cmp
push
xchg
or
jno
or
mov
sub
gs
cmp
and
add
rorb
mov
cmpsb
mov
movsl
xchg
testl
addr16
leave
hlt
lods
ss
jns
leave
adc
daa
xor
and
dec
mov
xlat
inc
mov
mov
icebp
cmp
lret
cmp
jmp
and
out
scas
inc
jle
in
or
pop
es
or
lock
stos
js
pop
ret
mov
rcr
mov
lods
mov
push
stos
popf
mov
mov
cltd
in
and
mov
movsb
sbb
in
adc
cmpsb
insb
adc
pop
scas
mov
push
mov
cmp
jae
mov
rclb
pop
test
les
scas
daa
cs
jmp
loop
and
pusha
mov
jmp
cmpsb
jns
mov
mov
cmc
mov
cs
pop
jae
jo
mov
xor
cld
imul
xchg
mov
mov
push
repz
aas
test
test
xlat
dec
push
jns
fistpl
ds
popf
push
sub
sbb
dec
fst
xchg
fcmovnu
cmpsb
in
test
testl
fisttpl
cmp
popf
cmc
rcll
and
std
adc
es
mov
insl
loope
fdivrp
pop
xor
insl
jae
xor
pop
test
xor
cmpsb
hlt
ljmp
push
xor
gs
and
dec
sahf
inc
and
cltd
push
xchg
mov
pop
xchg
enter
jbe
adc
mov
push
adc
fdivp
aam
dec
fmuls
loop
clc
out
mov
call
dec
mov
sahf
sbb
gs
mov
rolb
push
xchg
mov
clc
adc
out
rcrb
push
int
fldenv
add
repz
out
nop
mov
in
fcmovu
int3
cli
dec
mov
inc
sub
adc
xchg
out
push
imul
sbb
loop
xor
add
popa
mov
xchg
inc
sahf
jmp
or
fistps
je
xchg
iret
mov
daa
mov
push
mov
sbb
popa
jle
out
pop
push
push
mov
ljmp
in
lahf
cmp
int
rorb
adc
lret
pop
fcomp
pop
sub
inc
cli
fstp
imul
adc
push
pop
xchg
fsubs
or
orb
sarl
pop
sub
inc
arpl
roll
lock
jl
mov
xor
dec
xchg
das
xlat
lea
mov
stos
test
ss
pop
or
enter
dec
cmp
lods
fisubrs
fcmovu
inc
push
movb
adc
pop
mov
cwtl
xchg
fldcw
ja
xchg
fildll
jns
jge
push
pushf
xor
add
stc
vmovntdq
bound
inc
pand
inc
xchg
ja
xchg
xchg
lcall
mov
mov
and
rorb
int3
push
loope
hlt
jb
pop
lcall
xchg
leave
mov
push
and
inc
repnz
pop
pop
xchg
in
mov
jge
fcmove
dec
inc
and
ficomps
aas
mov
inc
add
sbb
in
in
xor
fs
filds
cmpsl
xlat
cmp
inc
push
mov
or
dec
aad
push
mov
add
ljmp
stos
imul
lods
shlb
sub
mov
and
mov
mov
fcoml
test
stc
adc
fimuls
lret
sbb
push
lcall
xchg
dec
jg
dec
xor
sub
push
inc
sub
mov
bound
push
sbb
pop
icebp
cli
sbb
or
and
mov
ss
sbb
adc
sbb
pop
inc
adc
push
push
adc
mov
push
movsb
insl
or
mov
cmpsl
imul
push
imul
sbb
fimull
je
jmp
sbb
push
stos
and
add
jg
xor
and
jecxz
or
xchg
jnp
or
in
sbb
in
mov
ljmp
xor
jae
xchg
sub
inc
mov
std
dec
shll
aas
shll
xchg
mov
data16
push
jg
push
xor
add
xor
mov
fmull
aam
adc
sub
and
jns
mov
lret
scas
repz
jmp
dec
aam
addr16
int3
insl
popa
lea
imul
mov
pop
scas
adc
lahf
stc
scas
pop
call
xchg
insb
mov
dec
mov
in
xor
dec
jecxz
shll
xchg
jb
mov
movsl
rcr
jnp
cs
repz
pop
cld
mov
lds
and
ror
pop
xor
adc
test
sahf
mov
push
push
mov
pop
ror
and
and
subb
mov
cmp
imul
sub
fsubs
jmp
cmp
repz
xchg
shlb
or
bound
push
fcmove
sub
xor
das
and
inc
lock
or
cmp
repz
jno
mov
xor
add
add
std
mov
xor
adc
jp
rol
add
cs
xor
adc
push
add
sub
mov
mov
outsb
jno
addr16
test
testl
imul
or
jo
mull
inc
in
dec
mov
sbb
jb
call
mov
jno
clc
call
xchg
xor
jne
push
sbb
lock
imul
cmp
add
outsb
inc
push
cmp
je
ds
out
adc
push
jns
test
xchg
lds
int3
cmp
cmp
mov
test
inc
aad
clc
jb
push
add
test
pop
out
cmpsb
js
movsb
test
popa
xchg
in
outsl
mov
test
inc
pusha
xchg
xchg
mov
xchg
cs
shlb
inc
ret
cmc
add
stc
in
jl
fs
je
rcr
sbb
loopne
mov
test
xchg
push
and
int
add
jo
sbb
mov
cmp
or
fs
push
mov
xor
xchg
mov
gs
mov
ret
mov
push
rcrl
popf
dec
fimull
sbb
jecxz
adc
aad
pop
rol
insb
mov
hlt
sti
cmpsl
push
enter
sbb
xchg
sub
mov
sub
add
jno
sbb
scas
jno
cmc
data16
lcall
and
jmp
push
cs
cld
mov
inc
clc
shr
lret
dec
sbb
stc
push
jb
dec
in
pop
jmp
movsl
mov
sbb
leave
mov
pop
idivb
iret
lahf
arpl
test
mov
pop
orl
sbb
mov
es
lods
xor
push
xchg
lcall
in
dec
cmc
dec
jne
xchg
adc
inc
cltd
inc
je
adc
lahf
data16
jb
gs
add
insl
sbb
bound
bound
negb
les
inc
inc
sbb
sub
lret
sbb
dec
pop
xchg
mov
cli
jl
or
out
jge
and
clc
mov
and
jb
dec
mov
je
pop
aaa
fbld
mov
jb
xchg
jmp
imul
subb
mov
repnz
and
add
sub
xorl
stos
push
lock
pop
aam
xchg
stos
out
out
mov
shrb
pop
or
cmpsl
or
js
jb
cwtl
jg
push
into
popf
popa
jo
fcmovbe
cmpsb
mov
push
dec
inc
mov
pop
jbe
mov
or
imul
insl
inc
sbb
xorl
int
xchg
call
movsl
pop
test
push
and
repz
push
decl
or
out
mov
xchg
sbb
cld
xchg
mov
sti
cmp
fcomps
call
in
iret
loop
aas
test
daa
and
or
or
cmp
adc
mov
cwtl
imul
and
pop
inc
jae
loopne
mov
push
mov
inc
fistpl
repz
cmp
mov
aas
mov
das
in
jne
xchg
xchg
cmp
push
sbb
test
mov
shll
jb
int3
fiadds
push
mov
sbb
sub
mov
into
add
in
sahf
mov
push
adc
das
mov
mov
clc
inc
test
insb
movsb
addr16
leave
shrb
xchg
mov
into
stos
dec
mov
ss
iret
dec
sub
mov
mov
pop
pop
popa
stc
jne
sub
mov
fld
lock
adc
mov
xor
push
cmp
cmp
arpl
add
jp
mov
adc
bound
outsl
mov
or
pop
sbb
inc
fcomp
loope
lds
and
inc
push
popf
mov
lds
loopne
sub
sahf
xchg
mov
sbb
or
xor
xor
jecxz
cs
fmuls
movsb
lahf
jge
jnp
enter
pop
jb
mov
imul
push
bound
or
or
popf
sbb
cs
add
aaa
push
xchg
xor
scas
mov
xchg
jp
fisttpll
fdivrp
out
inc
xchg
jne
pop
jb
and
mov
sub
sub
scas
pop
push
cmp
jle
and
mov
push
aad
sub
push
sbb
sbb
dec
pop
mov
jo
ss
inc
inc
enter
cmp
xor
fistpl
lsl
repz
loope
jb
pusha
js
inc
add
sbb
jnp
popa
movsl
mov
aas
inc
dec
mov
fs
in
inc
popa
jg
imul
addr16
and
mov
aam
mov
cld
jnp
xchg
jg
lods
bound
mov
inc
and
add
sahf
es
test
and
sub
xor
mov
arpl
and
sbb
sbbl
add
mov
mov
xchg
std
jge
xchg
inc
cmp
pop
lock
inc
inc
xchg
int3
das
sub
imul
sub
test
xchg
sub
xchg
rcll
and
inc
ja
sub
inc
xor
mov
mov
dec
xcrypt-ecb
cmpsl
mov
stos
in
lock
iret
or
push
iret
mov
cmpl
jno
addl
outsb
and
dec
cmp
rolb
popf
out
ljmp
xor
xor
outsl
repz
xor
imul
roll
call
mov
adc
push
jo
cltd
dec
imul
mov
mov
call
dec
les
mov
sbb
mov
mov
aam
inc
cmc
adc
adc
mov
mov
lea
outsb
mov
std
frstor
pop
arpl
fiadds
add
call
or
jnp
test
pop
sub
hlt
push
hlt
test
and
rorl
in
adc
dec
jmp
sbb
sub
pop
sbbb
sub
xchg
cmp
jnp
repz
add
sti
push
es
gs
pusha
dec
jmp
and
hlt
test
popf
mov
sti
mov
mov
jmp
sbb
and
shr
and
fwait
mov
popa
push
inc
out
sub
xchg
hlt
mov
inc
sahf
xchg
loop
mov
mov
pop
and
ljmp
out
cwtl
test
xchg
pop
scas
mov
pop
sbb
or
xor
mov
inc
outsl
std
lea
lods
scas
xor
xor
xchg
or
shrb
jne
jb
mov
out
dec
bound
add
rcll
pop
pushl
jmp
loope
cmp
gs
push
xchg
enter
adc
js
sbb
xor
in
sbb
or
adc
xor
fwait
into
pop
repnz
jge
jne
in
aam
rorb
pop
and
arpl
in
in
push
push
jp
sahf
jmp
cli
mov
cmp
minps
sbb
call
fucomp
sbb
out
imul
push
fisubl
jle
mov
sub
scas
add
mov
pop
fbstp
push
xchg
xchg
jbe
jb
mov
cmp
daa
and
imul
xor
cmpl
sub
push
mov
cmp
clc
in
dec
in
rcr
pop
dec
pushf
mov
xchg
sub
adc
aad
gs
jmp
loopne
fcoml
sbb
jno
insb
arpl
out
sbb
fldcw
fwait
data16
mov
xchg
rcrb
xchg
fst
out
inc
aaa
pop
push
imul
in
pop
ds
lea
pop
stos
sti
andb
les
sub
and
jnp
aam
leave
adc
cwtl
mov
jecxz
pushf
xor
arpl
xor
fidivl
mov
adc
push
xor
icebp
fmuls
sbb
xchg
dec
sbb
in
insb
ss
xchg
pop
scas
push
iret
mov
not
mov
cltd
sub
add
and
leave
push
int3
fwait
mov
lea
pop
cmpsb
sbb
jbe
lods
mov
loopne
jmp
pop
ss
ret
mov
xor
popf
lods
mov
dec
xchg
fwait
lods
mov
push
sbb
pop
sbb
lock
push
les
cwtl
mov
aam
mov
hlt
popf
mov
xlat
mov
repnz
rorl
mov
jg
dec
enter
push
cmp
jno
mov
inc
jo
mov
sbb
adc
push
test
mov
cld
xor
adc
loopne
and
shlb
stos
cli
push
sub
adcl
push
cmp
jle
shrb
and
or
mov
and
sti
pop
xchg
xchg
icebp
xchg
dec
stos
mov
push
mov
test
jae
add
xor
adcb
or
cmc
dec
push
push
fcoms
test
test
add
cld
iret
push
hlt
fidivl
fwait
inc
add
adc
test
jne
pop
jne
or
jp
enter
lods
loopne
imul
fcompl
xor
aad
push
dec
popf
or
inc
jl
out
jne
mov
dec
cmpsb
hlt
jnp
repnz
dec
sbb
sub
aad
cmp
xor
sbb
mov
and
inc
subl
mov
cltd
mov
fisubrl
popa
mov
push
rol
outsb
cmp
sub
pop
pop
cwtl
xlat
test
push
stos
dec
and
fs
ds
shll
sub
dec
push
imul
lret
repz
inc
aaa
xchg
add
adc
hlt
sti
inc
mov
xchg
adc
pop
repnz
dec
bound
sti
je
sub
jecxz
enter
sub
mov
sbb
mov
and
lea
int3
inc
in
jg
fwait
inc
out
test
mov
fisubs
xor
mov
sbb
jbe
push
xchg
ljmp
ret
bound
pop
ss
lret
push
clc
arpl
mov
sbb
xchg
les
mov
jle
enter
xor
adc
push
pusha
cmp
scas
or
sub
mov
add
loop
mov
adc
pop
test
and
cmp
fwait
dec
xorb
xchg
adc
imul
inc
bswap
dec
or
fisubrl
cs
stos
aad
adc
or
xchg
pop
push
pop
loop
xchg
sbb
scas
bound
mov
mov
push
sub
fsts
fisttpll
jno
popf
jg
jno
push
popa
add
pushf
pop
shll
inc
and
mov
iret
cwtl
pop
cmp
outsb
shll
dec
lds
pop
test
sahf
aas
fs
add
cli
ret
xchg
adc
clc
inc
pop
sbb
mov
cwtl
outsb
lret
arpl
inc
add
or
cmpb
dec
in
xchg
mov
xchg
jge
push
and
shrb
mov
scas
sub
xchg
mov
lods
mov
lock
repnz
test
add
sbb
js
push
jbe
je
ret
push
cmp
push
xlat
dec
push
lret
inc
mov
jno
in
mov
mov
nop
outsl
push
ror
jecxz
subb
and
mov
and
lret
fwait
add
pop
push
das
int3
call
jecxz
out
sbb
out
sbb
sbb
and
xchg
mov
push
test
subb
push
mov
jnp
dec
int3
and
repnz
repz
dec
cltd
das
std
mov
xor
sub
jecxz
les
loopne
xchg
cmp
test
xlat
adc
mov
mov
adc
xor
xchg
orb
mov
aaa
out
add
aas
cmpb
jno
clc
lods
mov
test
lods
push
pop
dec
sahf
scas
sub
inc
pop
ja
mov
into
js,pn
mov
mov
pushf
xchg
cmc
dec
hlt
mov
int3
orb
stos
repz
inc
add
pop
and
adc
pop
mov
pushf
test
lock
les
cli
push
push
push
test
push
movsb
outsb
jp
push
push
sahf
and
jnp
cmpsl
out
pushf
adc
inc
in
fldenv
add
cld
fs
adc
push
mov
dec
int
pop
and
inc
or
mov
or
push
jp
mov
lock
loop
inc
sub
xchg
cmp
test
pop
int3
cmp
cli
sahf
cmp
sbb
mov
pop
or
pop
pop
pop
dec
pop
xchg
in
enter
pop
es
or
ret
ret
fcoms
sbb
mov
or
pop
push
in
shr
lea
xor
mov
jbe
xchg
ljmp
dec
and
int
add
mov
das
inc
cmp
mov
jle
pop
sbb
push
fnstenv
fists
loop
and
and
leave
sbb
aad
filds
lret
mov
push
sub
xchg
push
stos
fs
bound
sbb
and
pop
mov
inc
pushl
xchg
pop
mov
fmul
out
mov
push
mov
cmp
and
cmc
sbb
outsl
cld
push
aas
jnp
scas
mov
inc
jno
cmp
cmp
add
movsl
sub
add
pop
xchg
dec
inc
ss
cmp
js
roll
mov
xchg
lea
mov
or
or
loopne
ds
fiaddl
rol
or
dec
xor
out
es
jo
push
inc
mov
ljmp
mov
mov
in
addb
lea
outsl
xchg
repz
test
stos
push
test
popa
gs
push
ds
add
ret
fcmovne
fwait
push
mov
jae
sbb
sub
orb
loop
dec
xor
fildll
dec
jne
lds
imul
in
sub
dec
adc
sub
insb
or
inc
sbb
leave
daa
mov
mov
adc
cmp
jge
into
or
or
jbe
cmp
ds
mov
and
push
jmp
movsb
adc
jecxz
icebp
cwtl
pushf
mov
xlat
fs
lods
mov
jp
or
or
push
mov
loop
pop
rol
xor
shlb
in
push
or
test
pop
adcb
cwtl
pop
cmp
cmp
movsl
and
add
xor
pop
movsb
repz
mov
xlat
shl
add
int3
es
fcomps
xlat
sbb
mov
inc
adcb
ss
cmp
jno
jo
cmp
ja
jno
sbb
and
out
leave
cmp
and
cmp
xchg
dec
leave
adc
dec
jns
and
ljmp
in
jae
jmp
and
cmp
mov
mov
sbb
sbbl
fidivrs
loopne
sti
sub
cmpsl
mov
bound
and
lcall
xchg
mov
frstor
fadds
pop
test
inc
add
cwtl
insl
mov
andl
pop
fnstenv
sub
pop
xlat
add
mov
and
add
outsl
dec
ljmp
mov
rol
adc
lret
pop
xchg
jnp
and
leave
sbb
jg
xchg
mov
pop
xchg
in
les
arpl
divl
stos
xorb
test
mov
cmp
outsl
lods
xor
and
sarb
xchg
dec
dec
insl
addr16
lea
sbb
inc
insb
mov
ja
cmp
movsb
inc
cltd
pusha
mov
add
xlat
movsl
jl
or
sbb
mov
inc
push
xor
xchg
mov
in
fnclex
push
imul
pop
jno
adc
mov
jp
out
mov
and
mov
xor
pop
push
cmpsl
xchg
test
pop
sti
xchg
int3
out
mov
and
loop
loopne
loopne
lret
rcl
and
pop
xor
shrb
cmpsb
filds
xchg
push
dec
mov
mov
xor
and
sub
xchg
add
add
and
ret
data16
fisttpl
add
int
dec
mov
pop
pop
sbb
leave
add
or
flds
mov
es
outsl
or
lock
lods
psubusw
mov
out
dec
xchg
jns
xchg
xlat
add
sub
imul
shlb
scas
adc
sbb
jp
jg
stos
xlat
xchg
rcr
pop
test
adc
mov
cmp
sahf
mov
inc
ret
push
mov
insb
mov
adc
add
shrl
je
ret
pusha
xchg
push
xchg
repnz
fidivs
and
cmp
inc
xchg
div
aaa
inc
ja
mov
out
sub
or
sub
ljmp
clc
mov
cmp
repnz
rorl
adc
int
xor
push
mov
xchg
mov
sub
mov
mov
inc
js
pop
icebp
pop
cli
and
les
push
sbb
ss
lahf
jge
adc
cmpsb
repz
stos
jno
xchg
cmp
lods
pop
adc
negl
pop
nop
sti
scas
or
add
jnp
aam
cmpsb
dec
xchg
scas
adc
inc
rcll
or
notb
adc
jbe
inc
adc
rorb
popa
push
sbb
mov
xchg
aam
pushf
lahf
push
jne
imul
sbb
test
insl
iret
mov
sarb
testb
rcrb
add
arpl
jae
pop
pop
insl
jb
push
pop
inc
dec
xchg
sahf
loope
or
mov
imul
lds
stos
cwtl
fistps
mov
lret
pushw
push
dec
push
repz
data16
jmp
aad
loope
movsb
mov
pop
xchg
outsb
dec
inc
pop
popa
out
jecxz
adc
outsl
dec
mov
rcll
push
and
inc
scas
sbb
test
push
dec
ret
test
xor
int
imulb
bound
and
dec
sub
outsl
sbb
xchg
ja
dec
adc
popl
dec
add
rcrl
sub
cmp
or
enter
fcmovnu
mov
in
addl
stc
pop
out
push
icebp
pop
add
loope
loopne
popa
dec
daa
xchg
mov
mov
push
outsl
stos
mov
movsl
jns
mov
daa
imul
pop
imull
pop
test
xchg
dec
movntps
jae
add
mov
insl
cmpsb
test
leave
imul
into
inc
xor
mov
mov
pop
or
lret
inc
pop
gs
outsl
fistps
pop
lock
jmp
push
adc
vpmullw
es
das
insb
mov
in
arpl
dec
insl
and
push
cmp
xchg
je
fstl
xchg
negl
mov
cmp
xchg
leave
cld
ficomps
leave
loope
adc
sahf
add
push
repz
fcoms
ds
add
aad
pop
ds
adc
pop
pop
ja
pop
test
mov
dec
enter
pop
divl
xor
mov
cli
fbld
adc
and
fdivl
inc
es
inc
cmc
xchg
push
lock
bound
fldt
cmp
addl
or
adc
mov
or
mov
sbb
fadds
aaa
arpl
inc
dec
nop
mov
and
adc
into
sbb
push
cmp
mov
mov
test
imul
sbb
fistps
jnp
sub
dec
mov
clc
pop
sarb
mov
cmp
inc
pop
lock
jge
xchg
dec
ret
xchg
push
test
xchg
sbb
inc
test
and
enter
daa
mov
cmpsl
inc
addb
push
fs
pop
data16
lods
popa
adc
inc
or
push
nop
pop
jmp
je
clc
cmpsb
cmp
lret
dec
mov
es
jnp
push
add
aad
ret
xor
cmp
sbb
or
fbstp
das
push
rcll
mov
inc
lahf
mov
or
shrb
adc
mov
pop
xlat
add
leave
mov
sub
add
xchg
add
xor
es
pushf
jg
xchg
and
add
lahf
jle
stos
mov
dec
pushf
leave
pop
sub
sbb
insb
movsl
out
pop
sub
mov
leave
dec
je
ss
test
arpl
push
cmpsb
out
xchg
inc
jge
adc
dec
lret
rcl
in
insl
add
adc
xchg
mov
and
jecxz
les
push
pop
and
leave
fs
mov
mov
fwait
sbb
xor
jae
jecxz
aas
jae
or
push
daa
mov
pop
lcall
je
mov
jb
fwait
mov
out
shll
int3
mov
dec
in
lods
popa
jo
cwtl
jo
inc
mov
lcall
cmp
repz
sub
push
dec
and
mov
loope
sbb
xor
in
lods
dec
mov
imul
jb
jns
cwtl
sbb
lahf
add
push
jl
jne
arpl
mov
iret
mov
in
cltd
cmp
dec
push
push
sub
ret
test
or
pop
rcrl
test
add
arpl
aaa
stos
mov
add
xor
mov
mov
cmp
add
test
pop
xchg
aam
shlb
loop
pop
inc
gs
imull
xorl
nop
and
mov
mov
mov
dec
pop
pop
out
ja
fildl
loopne
jge
mov
inc
sbb
and
xchg
lret
or
loopne
ds
ret
movups
add
dec
aaa
mov
test
cvtps2pd
dec
jp
add
fbstp
cld
add
fildl
ret
jge
mov
cmp
or
mov
and
inc
xchg
jb
lahf
aas
lock
fcmove
inc
addl
mov
cmp
push
inc
idiv
or
mov
movsb
std
jne
cli
push
scas
mov
xchg
aad
xor
notl
xor
inc
aam
cld
and
out
movsl
bound
out
jge
sbb
xor
mov
nop
out
notb
xor
in
fists
pop
insb
outsl
push
into
daa
pop
loopne
lret
lret
xor
das
push
xchg
repnz
roll
adc
inc
sbb
jb
dec
dec
push
inc
daa
rorl
xor
adc
imul
and
or
jg
pop
or
std
loop
pop
cltd
icebp
sub
mov
inc
fidivrl
rolb
iret
xchg
jbe
adc
cmp
jg
mov
pop
jno
ret
mov
fwait
stos
insb
dec
dec
enter
mov
std
addr16
mov
jge
or
sti
mov
mov
dec
in
mov
adc
shr
pop
xlat
into
or
adc
cmp
shrl
into
mov
mov
pop
in
pushf
outsl
ret
lret
scas
jo
push
cmp
add
mov
mov
ljmp
fwait
adc
xchg
push
mov
xor
lock
sub
pushl
gs
fwait
xchg
mov
into
das
ss
test
je
push
mov
inc
stos
mov
xchg
push
adc
sahf
xchg
loope
cmp
inc
lods
cmpsb
inc
int3
je
pop
xchg
xchg
push
inc
jecxz
mov
imul
lds
lods
test
mov
cmp
mov
xor
pop
scas
fstpl
out
xor
xchg
outsb
sub
cmp
sbb
mov
fidivrl
scas
sbb
cmp
xchg
jo
xor
mov
xchg
push
sub
mov
inc
popf
out
mov
mov
cmp
push
xchg
and
arpl
js
jne
cmpsl
jns
adc
cmp
mov
inc
mov
enter
or
sbb
idivb
stc
lods
testl
add
mov
out
or
shrb
add
ss
xor
and
cmp
cwtl
ljmp
fbstp
lea
es
lret
inc
add
pop
or
push
mov
fcomp
adcb
int3
int
inc
dec
loope
xchg
dec
mov
xor
clc
sub
and
xchg
outsl
mov
cmp
dec
rcr
jmp
mov
push
mov
les
jno
mov
mov
fucom
sarb
test
rclb
cmpb
pop
into
mov
mov
add
clc
fbstp
loopne
fists
mov
lahf
mov
sbb
cmp
arpl
pop
sbbb
pop
add
push
push
fsubl
fisubs
aas
push
rcr
int3
mov
inc
push
insl
inc
cmc
mov
jno
sub
jo
dec
or
cmpl
cld
and
sbb
xor
int3
les
scas
xchg
xchg
mov
sub
in
andl
sbb
outsb
lock
push
xchg
mov
ds
xor
fidivrl
xchg
add
push
sbb
adc
dec
or
mov
mov
inc
mov
xor
hlt
fmuls
and
pop
cmp
sbb
outsl
or
inc
fistl
mov
jne
pop
leave
clc
pop
movsl
sub
das
sbb
dec
gs
nop
mul
pusha
cmp
xor
xor
lods
imul
movsb
pushl
outsb
cwtl
pushf
dec
test
das
pop
and
out
jmp
xchg
enter
push
jo
adc
mov
adc
mov
repnz
sub
inc
xlat
loop
mov
lcall
and
sbb
lret
adc
jl
dec
push
lock
data16
nop
xor
pop
inc
dec
xor
push
mov
and
scas
jg
cmp
nop
and
dec
les
ss
mov
push
mov
lds
sub
or
test
jnp
sbb
push
sub
shll
bound
mov
pop
pop
ret
in
pop
xor
nop
xchg
push
outsl
adc
rolb
shlb
fs
pusha
dec
imul
jo
inc
psrad
pop
es
sbb
jo
scas
add
lret
jecxz
scas
dec
stos
add
mov
inc
mul
mov
jl
inc
lret
inc
and
add
mov
iret
xor
cmp
rcrb
inc
imul
cmpb
stos
popa
filds
mov
inc
inc
cmpsb
sbb
cmp
icebp
ret
xchg
stc
data16
into
pop
enter
scas
arpl
test
xchg
push
mov
dec
aaa
imul
out
ds
loopne
jne
and
push
lahf
inc
imul
sahf
inc
mov
mov
test
bound
sub
xchg
inc
pop
andb
xchg
mov
lods
fstpl
and
or
mov
lahf
mov
jbe
mov
add
daa
imul
xor
cmp
fimull
jmp
in
mov
out
stc
jae
insb
push
push
bound
test
shlb
and
ret
xor
leave
mov
scas
lahf
rorl
cmp
pop
xor
pushf
addl
pop
pop
dec
adc
add
insb
les
addr16
push
mov
mov
jbe
popa
mov
loopne
in
js
mov
fisubs
mov
fcmovnb
flds
sub
fcmovbe
rsm
pop
or
add
sbb
outsb
mov
xchg
mov
fcmove
xchg
mov
test
dec
nop
adcl
and
cmp
movsb
rorl
mov
clc
push
test
pop
push
shrl
and
push
push
pop
or
adc
ds
add
mov
inc
out
into
fwait
insl
outsl
test
hlt
addb
enter
dec
out
mov
jle
dec
arpl
lret
cs
cld
mov
sbb
icebp
bound
stos
sbb
pop
adc
rorb
in
inc
mov
js
or
cmp
sub
sub
mov
push
push
jbe
cmc
dec
out
jle
and
jle
scas
add
adc
jmp
fidivrl
xor
jl
pop
outsl
adc
pusha
xchg
mov
data16
clc
nop
ljmp
fadd
xor
les
ds
daa
cmp
push
add
in
push
jb
pop
test
int3
mov
and
dec
dec
mov
pcmpgtd
dec
cmpsb
cmc
in
daa
pop
lds
sbb
adc
mov
sti
inc
test
into
pop
cli
movups
mov
shrl
out
enter
scas
push
hlt
and
jge
lret
sbb
inc
add
fcomps
pop
pop
sub
int
lea
divl
sbb
ljmp
push
dec
inc
push
mov
mov
pop
sub
or
imul
stos
jg
cmp
jne
mov
daa
mov
and
test
test
add
mov
inc
scas
mov
xor
pushf
and
xor
and
cmpsb
jecxz
adc
lock
adcl
stos
mov
out
orb
mov
nop
mov
jl
out
fcoml
ss
and
insl
out
add
adc
dec
push
add
inc
adcb
int
add
shrl
fs
stos
loopne
push
stc
imul
adc
iret
pop
xor
mov
outsb
decb
icebp
testl
mov
sub
ds
addr16
scas
mov
enter
push
xor
mov
cmc
jnp
je
incb
and
rcrl
jecxz
sbb
mov
loope
aam
pushf
test
pop
push
outsb
mov
and
sbb
cmp
pop
cmp
sbb
sub
fs
inc
ds
repz
cmpsb
fwait
add
pop
sub
fisttpl
mov
insl
cmp
mov
popa
mov
movq
fwait
mov
add
rclb
aas
pop
mov
mov
dec
mov
ret
adc
out
out
and
pop
test
adc
pop
cmpsb
pop
xor
mov
push
cmc
xor
mov
imul
and
mov
sub
fs
or
mov
ljmp
push
outsb
sahf
xchg
test
pop
adc
enter
xor
shll
out
int
int
cli
popa
mov
mov
push
adc
enter
shrb
jl
sti
leave
les
out
mov
mov
inc
lds
pop
mov
insb
pop
xchg
dec
ret
outsb
fcomip
jo
aam
shlb
jg
lret
inc
jne
sub
idivb
mov
fisttps
and
lcall
sub
movsb
lods
xlat
xor
fwait
xor
data16
add
xchg
jb
cpuid
inc
push
rorb
testl
movsl
call
je
push
inc
sub
lods
mov
push
inc
mov
adc
mov
js
mov
pop
inc
dec
out
test
loop
sti
insb
jl
mov
cmp
xlat
fnstcw
lock
push
sbb
xor
mov
sbb
jnp
xchg
push
jge
out
add
les
push
adc
lods
adc
lahf
rcr
inc
add
jns
shrl
in
cmpl
es
iret
js
xchg
fucomp
mov
add
popa
xor
lahf
lret
popf
jge
add
push
loopne
fsts
rcrl
xchg
out
cmp
and
dec
mov
cmp
adc
stos
das
jnp
inc
hlt
cmc
in
frstor
jecxz
xchg
push
or
pop
pusha
jne
out
jno
add
jne
or
adc
sahf
sub
arpl
shlb
push
test
pop
std
dec
ja
cltd
inc
lods
mov
mov
clc
test
xor
lea
cmp
mov
mov
dec
mov
push
test
out
cmc
sti
repnz
out
push
lds
jl
cmpl
cli
and
in
or
fnsave
in
dec
movsb
out
shlb
jg
mov
dec
pop
jo
cltd
std
lods
mov
out
nop
les
or
sbb
jae
mov
nop
cwtl
insb
mov
sti
jmp
jb
fldt
sbb
adc
int3
in
push
push
dec
mov
pop
add
ret
adc
xor
mov
test
loope
xchg
dec
or
xchg
pop
lcall
jmp
xor
repnz
call
pop
sbb
push
mov
repnz
xor
sub
out
jo
mov
pop
pop
mov
pushf
jecxz
mov
loope
fdivrp
sub
mov
xchg
sahf
inc
mov
lods
in
add
jbe
fwait
cmpsl
lret
mov
rolb
jo
lret
inc
add
andl
lock
scas
out
dec
sub
xor
cmp
iret
jno
loope
mov
mov
dec
or
mov
mov
imul
push
add
jns
cmpsl
movsl
out
and
das
lcall
andb
sbb
test
movsl
sbb
xor
je
sti
sbb
pop
cmpsl
lcall
sbb
fldt
add
dec
dec
cmp
inc
scas
lea
mov
arpl
cmpsl
dec
test
push
test
dec
decl
fmuls
cmc
sti
dec
mov
push
in
std
mov
inc
sbb
andb
add
sbb
jmp
mov
lods
idivb
fistl
inc
xor
sub
imul
mov
xor
bound
roll
clc
cmp
in
sbb
jle
add
jae
dec
in
sub
jbe
push
call
mov
stos
mov
ret
inc
jbe
push
push
cli
pusha
aam
jns
or
movsb
push
cmp
sbb
lahf
dec
jge
cli
sbb
in
xor
jg
sbb
ljmp
movsl
ja
fstps
xor
insb
jae
rcrb
out
jb
sub
imul
adc
mov
pop
jp
shll
lods
push
ja
and
cmpsl
mov
call
roll
stos
imul
add
cld
flds
push
lds
pop
scas
ds
fstpl
jnp
push
and
in
sub
xorl
insb
test
xchg
rcpps
pop
pop
stos
pushl
imul
leave
mov
xchg
enter
popf
adc
aam
or
adc
cli
dec
test
push
dec
add
xchg
push
mov
xchg
int3
push
pop
out
jecxz
sbb
sub
jnp
cmp
mov
pop
cli
mov
addr16
int3
ds
cltd
jae
mov
and
or
rorl
mov
push
cmpsb
sub
lods
mov
addr16
jbe
je
dec
cmc
mov
pop
dec
jbe
dec
mov
adc
adc
dec
jge
fiaddl
add
fwait
cmp
shrl
into
scas
jae
or
xchg
xorl
mov
pusha
shlb
pusha
mov
movsb
mov
in
jecxz
popa
or
mov
bnd
sbb
enter
jo
dec
cmp
outsl
repz
pushf
std
cli
out
xlat
jno
add
push
push
adc
popf
repnz
cwtl
mov
or
loope
xlat
cmpsl
adc
push
mov
mov
imul
daa
cs
pop
in
movsl
lock
inc
cmc
inc
xorb
mov
ret
int
lahf
mov
pusha
push
dec
je
add
stos
inc
jne
call
dec
cmpsb
cs
xor
add
lods
jle
adc
xabort
push
xlat
cmpsl
in
adcl
mov
repnz
in
das
nop
fcoml
fsubl
mov
inc
cltd
imul
add
sub
int3
into
mov
sub
push
push
test
out
mov
cwtl
loop
out
add
mov
into
pop
addr16
sbb
and
xchg
add
pop
shrl
fs
and
mov
sub
pop
scas
dec
imulb
sub
bound
push
out
outsb
mov
movsb
gs
push
shl
in
inc
pop
dec
stc
insb
shl
cwtl
mov
nop
adc
xchg
pushf
or
leave
add
or
sub
xchg
jge
pop
arpl
mov
mov
mov
fmul
movsl
and
notl
push
es
out
js
jle
out
movsb
mov
ret
bound
push
push
lret
std
jnp
push
int3
pop
lcall
insb
clc
outsb
push
jo
cmp
lea
sub
pop
xor
fstps
lahf
cmpsl
adc
or
or
add
mov
ds
push
insl
mov
loop
shlb
fbld
xor
ror
mov
dec
cmp
or
lds
jge
incl
ljmp
or
cld
lods
in
pop
jns
cmc
out
xor
push
lods
sub
push
daa
push
js
mov
in
js
inc
adc
aas
cmp
bnd
cli
jecxz
xchg
mov
xchg
scas
inc
inc
loopne
jg
pop
inc
pusha
xchg
icebp
daa
xchg
iret
push
cmp
mov
dec
sub
xor
lcall
movsb
xor
fs
jge
add
push
int
pop
mov
sbb
out
jo
cld
aaa
pop
shrb
mov
dec
out
dec
dec
sub
call
add
movsl
xchg
ljmp
das
mov
sub
mov
add
dec
in
add
pop
outsb
mov
lahf
sbb
xor
xlat
out
lds
cwtl
repnz
mov
sub
or
or
ss
lods
fisubrs
dec
jmp
lahf
test
out
movsb
push
cld
out
scas
out
je
pushf
add
jle
icebp
dec
adc
and
pop
push
adc
loop
mov
loopne
inc
push
pushf
call
rorl
cwtl
ret
xchg
popf
jbe
aas
sbbb
nop
mov
notb
pop
idivb
or
sub
and
pop
mov
mov
adc
data16
mov
leave
cmp
sbb
rcrl
adc
fisubs
sub
stc
and
mov
loope
add
sti
push
mov
cmp
dec
daa
daa
xor
insl
pop
ds
int3
mov
test
add
jae
ret
mov
add
xchg
call
mov
adc
jae
push
in
add
ljmp
push
fcomps
lret
cmc
sti
daa
or
in
pop
add
mov
adcl
inc
das
fucomip
fwait
ds
sbb
stc
pop
add
pop
and
pop
dec
push
push
imul
sub
scas
leave
jecxz
mov
lock
pop
sbb
sbb
outsl
mov
cmp
sbb
fs
or
mov
xlat
inc
into
push
or
test
xchg
nop
les
push
pop
mov
pop
xlat
xor
xchg
add
fisubrl
pop
mov
xchg
imull
pop
and
nop
scas
ss
cli
repnz
mov
int3
out
jmp
mov
cmpsb
pop
add
cmp
push
jbe
mulb
xor
inc
test
add
jg
daa
fildll
xor
xor
div
rolb
in
jp
out
adc
pop
outsb
inc
xchg
sub
mov
jmp
imul
xor
push
scas
push
mov
mov
in
pop
xchg
mov
mov
ret
mov
sbbb
out
xor
jle
ret
push
aas
add
repz
fwait
clc
mov
lret
std
pop
adc
jo
out
rorb
loopne
adc
ret
aam
sbb
push
mov
xor
xchg
mov
les
mov
sub
dec
jmp
dec
ret
pusha
mov
mov
and
js
mov
pop
inc
mov
xchg
cmpsb
pcmpeqb
hlt
push
dec
push
jl
adc
int
sub
leave
pop
std
pusha
inc
loop
sub
mov
inc
push
mov
xchg
xchg
stos
out
mov
xchg
rolb
mov
jns
iret
and
int3
xchg
xchg
leave
out
icebp
mov
call
xor
out
dec
push
pop
clc
dec
addb
dec
mov
dec
jmp
es
mov
or
inc
mov
ja
jo
xor
sbb
lahf
stos
sahf
sub
or
mov
xchg
imul
sbb
push
sbb
int3
adc
jbe
ret
pusha
aam
js
lcall
sub
call
out
jbe
movsb
xor
sub
xchg
jo
jno
push
es
xchg
ss
add
inc
push
sbb
insb
xor
adc
fwait
mov
xor
subl
adc
xchg
jl
mov
cmpsb
movsb
andb
push
lods
pop
or
sbb
les
jge
test
and
call
xchg
xchg
loopne
lods
mov
inc
pop
xchg
int3
jmp
in
lcall
shl
jnp
cmc
aam
movsl
test
in
push
push
mov
std
and
cmp
lods
loope
lods
xchg
repnz
lods
xchg
insl
out
pop
adc
lods
pusha
es
sub
daa
pop
xor
pop
sbb
std
xor
push
mov
cltd
repnz
enter
rolb
xor
out
out
or
jle
mov
in
js
jmp
cs
shrb
sub
or
out
in
mov
in
pop
adc
test
jbe
jmp
nop
push
mov
aam
pop
mov
add
dec
dec
fwait
sti
rcll
ljmp
out
cmp
mov
jmp
fwait
popa
push
cltd
xchg
out
pop
pushf
push
arpl
mov
movsb
mov
aaa
ss
sub
dec
or
fisubrl
push
push
call
mov
cmp
popf
mov
cmp
std
dec
xchg
pop
lahf
sub
lcall
sbb
adc
fcomp
cmpsl
imul
in
add
push
inc
and
mov
aas
ljmp
jp
add
rorb
mov
bound
dec
mov
inc
ds
mov
sub
les
or
xchg
adc
push
push
sahf
adc
jns
inc
test
jne
pusha
pop
mov
out
adc
xchg
xchg
shll
test
loop
inc
xchg
adc
lods
and
dec
sbb
inc
mov
icebp
je
inc
and
adc
sub
sub
or
sub
push
lods
add
aam
adc
xor
andl
mov
ret
push
xor
ret
mov
repz
fidivs
sub
fisttps
in
test
push
cmp
push
fimuls
jmp
cmp
repnz
jb
mov
jp
test
pushf
rcll
jmp
xor
inc
mov
jp
pop
push
push
pop
cmp
jecxz
adc
mov
loop
lds
pop
xor
loopne
and
cmp
jge
add
push
mov
sbb
movb
mov
xchg
jo
mov
or
sti
pop
sub
lahf
mov
and
pop
insb
outsb
xchg
orb
insl
jecxz
sbb
dec
and
pusha
add
adc
sbb
cmp
inc
mov
test
mov
les
pop
call
add
jo
jmp
mov
jno
sub
push
andb
dec
imul
fmul
stos
mov
sub
lods
xchg
testb
push
lcall
fsubr
fldenv
clc
jns
leave
xlat
cmc
jp
dec
repz
iret
into
arpl
les
inc
into
imul
adc
xchg
jmp
repnz
rorl
mov
mov
es
xchg
daa
leave
hlt
cmp
push
mov
incb
fimull
popa
shlb
fidivs
repz
scas
cltd
sub
enter
ss
mov
lods
pop
jns
das
insb
cmp
adc
push
clc
push
pop
cmp
jecxz
sbb
pop
dec
pop
and
sub
inc
sub
icebp
mov
scas
mov
pop
xor
fs
mov
mov
stos
lds
mov
dec
mov
sbb
mov
mov
inc
jge
mov
call
push
xchg
jl
push
inc
stc
loope
xchg
cmp
cmp
inc
in
push
aaa
or
pop
scas
icebp
jg
in
cmp
xor
scas
lock
mov
lds
mov
stc
add
sub
fcomps
subb
fcmovbe
jne
and
fbstp
push
mov
xchg
push
shl
cli
fsubrl
cmp
push
xlat
mov
nop
je
push
lret
fistl
faddl
lds
pop
rcl
enter
pop
push
xchg
ss
push
add
dec
ss
dec
mov
mov
dec
dec
mov
inc
pop
inc
push
mov
xchg
adc
add
or
mov
push
pop
cli
int
outsw
stc
fcompl
xor
aaa
and
push
sbb
mov
inc
aam
mov
addr16
icebp
push
fcomps
cld
or
sub
popa
pop
mov
lea
daa
xchg
dec
sub
jns
sub
ficoml
inc
cli
push
in
std
cmp
fcmovnbe
incb
ljmp
repnz
jecxz
fisubl
xor
and
inc
aas
out
jne
lret
out
sti
sub
jge
fistps
inc
gs
push
mov
jns
xchg
mov
popf
movsb
add
shll
sbb
adc
push
dec
sbb
cmc
outsl
in
sbb
sbb
shll
mov
cmp
push
sub
xchg
jg
in
jae
mov
mov
add
xchg
cli
jno
cltd
sarb
xor
mov
fisubl
loopne
mov
repnz
jb
sahf
mov
pop
mov
cld
add
fs
mov
jae
pop
mov
jmp
imul
and
mov
xor
aad
mov
dec
pop
mov
adc
gs
sub
lds
jmp
in
push
pop
cs
mov
mov
jne
and
clc
sarl
arpl
pop
insb
or
cmp
adc
inc
cmp
jo
and
and
in
jg
pusha
inc
clc
fdivrs
xchg
filds
adc
sub
pop
cmpsb
cmc
jns
cltd
xor
mov
js
push
or
std
sbb
and
fwait
add
sub
push
sbb
mov
jecxz
pop
fisubs
push
inc
or
cmp
jne
loopne
add
daa
in
cmpsl
cli
imul
dec
inc
call
cwtl
in
adc
jg
add
add
cmpsb
ljmp
jmp
jge
adc
mov
daa
pop
aad
shlb
mov
imul
xchg
fwait
mov
adc
add
dec
daa
push
xor
xchg
jmp
or
movsl
loopne
sbb
in
and
rorb
out
fwait
bound
jae
pushf
in
clc
xor
cmpsl
pop
cli
mov
push
gs
lahf
or
push
popa
sub
shlb
mov
mov
push
pandn
push
mov
xchg
mov
dec
mov
sarb
scas
and
mov
stc
or
stc
dec
daa
and
jne
push
cwtl
cmp
popa
pop
push
mov
daa
or
adc
sarb
xor
dec
mov
out
cmp
push
mov
add
sbb
adc
xor
lods
dec
mov
lcall
lods
ljmp
mov
ss
xlat
outsb
pop
shl
adcb
mov
mov
jnp
push
jne
neg
ret
mov
test
hlt
jno
aad
addr16
sbb
test
loopne
sahf
pop
enter
sub
xchg
cmpsb
lcall
mov
and
or
push
movsl
cmpl
push
pop
push
mov
mov
pop
dec
and
movsl
xor
jae
notl
inc
out
push
xor
popf
sbbl
lods
jns
lods
fldl
aas
sbb
test
inc
js
push
mov
aaa
out
mov
and
jno
orl
mov
out
movsb
ds
jg
js
jne
fidivl
add
fstp
mov
clc
xchg
mov
ds
mov
xchg
xor
xchg
in
xor
mov
mov
mov
imul
std
icebp
jp
enter
in
jge
ljmp
add
xchg
mov
faddl
lcall
mov
pop
push
js
call
in
pop
sbb
jne
sbbl
aaa
xchg
cltd
mov
icebp
jmp
lods
pop
movsl
out
les
or
in
bound
fst
pop
jl
test
and
rcr
out
out
test
sahf
pop
roll
or
fs
xchg
jl
test
insl
pop
jg
push
ljmp
fcompl
mov
icebp
rclb
pop
mov
popf
jo
inc
mov
adc
sti
aam
insl
sbb
push
sbb
int
push
mov
fdivp
adc
mov
in
pusha
dec
popf
in
imul
dec
arpl
mov
mov
ja
cmpsl
jmp
mov
mov
or
sarl
jl
ljmp
cmp
jp
sbb
popa
rorb
fadd
push
icebp
and
add
xchg
mull
clc
mov
sub
mov
cmc
mov
in
xchg
mov
rorb
lcall
pusha
fs
or
fcom
imul
js
stc
fnstsw
mov
stos
or
adc
or
mov
in
xchg
inc
fildll
enter
sar
mov
adc
sbb
lds
inc
jnp
fnsetpm(287
or
jl
jnp
mov
push
dec
jb
fwait
xchg
add
push
or
sub
lcall
mov
in
stos
inc
mov
ret
dec
movsb
or
mov
dec
push
out
pop
mov
jp
xchg
insb
fwait
in
lahf
fidivl
xchg
sbb
lods
sub
and
sahf
mov
mov
mov
xchg
mov
xor
lcall
jno
scas
out
jp
push
out
mov
nop
jge
jmp
gs
sub
pop
fcompl
popf
xrelease
cli
jl
mov
xchg
out
divb
adc
lods
xor
sbb
outsb
jb
xor
xchg
and
adc
cwtl
sub
decb
and
int3
or
mov
adc
xchg
push
and
pop
add
rcrl
mov
shlb
fstpt
cmp
lods
repnz
and
and
cmp
and
movsl
dec
cmpsl
lds
sti
jl
lret
adc
inc
mov
lcall
pop
pop
adc
rol
xor
push
jle
cltd
and
out
mov
xchg
lds
inc
push
add
push
movsl
imul
jne
sub
pop
iret
cmpsb
jp
pop
xor
sub
xlat
mov
roll
and
xchg
sub
sarl
pop
lret
mov
loope
mov
cmpb
and
push
push
icebp
icebp
pop
shr
mov
fs
sbb
aad
mov
jp
aaa
je
cmp
insl
mov
test
xchg
pop
mov
pop
outsb
iret
icebp
scas
fsubs
mov
inc
jns
mov
arpl
sbb
dec
pop
mov
je
test
pusha
or
add
pop
lcall
test
cmp
push
lock
shl
leave
sahf
cmp
das
test
mov
dec
jne
jle
add
xor
cmp
adc
stc
js
push
push
aaa
add
and
in
dec
inc
mov
pop
rcr
sub
mov
sbb
push
les
mov
std
lock
pop
mov
rorb
testl
xchg
pop
ret
movsl
in
movsb
cmp
cmp
mov
add
arpl
mov
ds
sti
addr16
sar
imul
test
rcrb
jns
sub
push
mov
repnz
stos
dec
cmpl
adc
inc
pop
test
xchg
cwtl
jb
nop
ja
js
mov
or
sti
add
in
call
mov
push
sbb
lea
lds
out
jle
lods
lea
rcl
xor
ret
scas
imul
mov
jae
fsubrs
or
dec
jecxz
ret
jle
sub
jmp
pushf
xlat
cmpsb
add
jne
scas
insl
shrl
cs
lock
xor
inc
xor
lods
jno
rolb
pop
mov
ds
fdivl
mov
pop
mov
rol
jne
iret
cli
mov
outsl
inc
push
mov
jo
testl
bound
jnp
inc
add
xor
adc
lret
dec
test
outsl
popa
dec
int3
nop
fwait
push
jnp
push
in
fidivs
movsl
adcl
xor
sbb
lret
push
scas
and
mov
push
out
stos
xchg
jl
inc
mov
jl
jecxz
out
movsb
xor
in
repz
aaa
pop
std
lcall
test
push
psrld
ficomps
and
inc
sbb
jnp
cli
mov
repnz
je
and
repz
fisubl
push
xchg
xor
pop
cmp
ja
insb
jae
ds
mov
jnp
xchg
sub
mov
mov
inc
pop
scas
xor
movsb
adc
and
jbe
sbb
sub
daa
add
sbb
push
xor
jle
sub
adcb
scas
and
pop
jge
sub
es
cmc
aad
inc
xor
mov
dec
sub
sub
adc
ss
std
mov
dec
movsb
addr16
das
fists
sub
lcall
out
orb
adc
sub
lahf
daa
enter
std
out
xchg
mov
rorb
sbb
adc
test
pusha
or
ss
xor
adcl
mov
jmp
mov
push
dec
mov
sub
js
outsb
push
scas
ljmp
mov
clc
mov
shr
sub
mov
add
push
rolb
mov
inc
loopne
and
and
test
add
and
fstpl
mov
bound
or
add
xchg
lret
arpl
jp
inc
pop
cltd
mov
lea
out
movsb
cmpsl
jp
es
cli
fdivs
mov
sbb
sbb
int
pop
out
cmp
adc
lods
pop
lcall
sub
mov
and
dec
je
inc
pop
xchg
insb
mov
cli
sbb
jo
push
inc
push
sub
jle
mov
xchg
arpl
ja
in
sbb
loopne
outsb
mov
aam
dec
jg
clc
out
sbb
mov
xor
xchg
cmp
push
cs
cmp
rorb
cmc
insb
sbb
lea
stos
dec
inc
clc
pop
xor
adc
cmp
xlat
outsb
mov
pop
inc
shrb
push
hlt
sub
std
mov
inc
fnstsw
dec
outsb
xchg
push
stos
sbb
fsubrs
cmovno
mov
pop
xlat
aaa
or
idiv
lret
add
push
xor
ret
mov
adc
pop
cld
outsb
sub
jl
and
cmpsb
fwait
sub
xchg
cmpl
and
pop
jae
xchg
push
jle
cmp
ret
pop
sub
pop
jecxz
inc
jmp
sub
or
jo
mov
sbbb
imul
popf
lret
mov
aam
inc
rcl
add
adc
jne
test
lret
push
add
ja
or
in
js
xchg
fwait
js
dec
push
cmpsb
mov
arpl
mov
lret
mov
lret
cs
cmp
mov
pusha
cli
adc
mov
jl
inc
sub
addr16
add
sbb
loope
mov
and
add
rcrl
mov
and
cmp
data16
lods
xchg
stos
and
es
mov
xchg
fwait
and
jb
dec
aas
das
xchg
data16
dec
icebp
fsts
outsl
mov
cmp
xchg
mov
sub
into
sub
pop
add
stos
xor
or
jg
cmp
jg
fisubrs
lea
incl
xchg
in
xchg
push
out
inc
pushf
mov
jecxz
mov
cmp
jb
pusha
cld
adc
jae
mov
dec
sbbb
jne
lock
sbb
int
mov
xchg
cmpl
lahf
xchg
cmpl
addr16
dec
cmpsl
cmpsl
enter
inc
hlt
or
movl
les
js
sti
or
scas
hlt
xor
or
lahf
pop
sbb
scas
nop
rorb
pusha
movsl
add
loopne
sbb
cltd
xchg
pop
out
push
adc
add
fildll
js
loop
xor
shlb
stos
lds
fistl
or
mov
push
xchg
inc
push
dec
pop
es
or
aaa
jo
sbb
cmp
xor
pop
ret
xorl
pop
es
mov
adc
pop
mov
repz
push
mov
push
mulb
or
xchg
sub
ds
lock
cmc
inc
xchg
adc
xor
inc
mov
mov
push
xchg
daa
cwtl
sbb
stos
xchg
pusha
and
inc
mov
repnz
lcall
push
sub
jmp
inc
std
jge
fwait
popf
cmc
cmp
shll
movsl
enter
je
add
scas
das
cmp
ret
ret
sub
pop
add
mov
aad
jno
xor
sbb
xor
out
cmpsb
dec
fmuls
ret
fcoml
cld
fdivrp
inc
push
outsl
mov
xor
fidivrs
stos
mov
and
out
add
lock
fidivrl
ds
pop
push
push
enter
call
fistps
test
pop
mov
subw
cmp
add
movsl
out
xor
shll
mov
bound
inc
out
mov
push
nop
dec
sbb
jg
cmp
jbe
loop
std
je
dec
inc
dec
push
leave
push
in
or
dec
loopne
popa
lcall
fucomp
mov
je
popa
cmp
aas
das
cmp
stos
jle
push
lret
sbb
and
int3
push
mov
adc
inc
cmp
imul
xchg
les
stc
jns
int
push
sbbl
ds
sub
out
push
xchg
enter
jl,pt
ss
or
enter
leave
aaa
pop
fcoms
inc
addr16
scas
xor
cmp
jle
idiv
xorl
pusha
xchg
popa
mov
dec
cmp
sub
stos
fidivs
pop
lret
out
sbb
cli
add
insb
fucomp
jne
xor
sar
adcl
test
lods
gs
lds
ret
sbb
xchg
sbb
dec
int3
sub
dec
sbb
in
stos
mov
cmp
in
or
es
aam
push
std
pop
dec
xchg
enter
or
mov
mov
mov
mov
cmp
fucomi
je
mov
xchg
jge
in
add
call
jne
lret
pop
cmp
loopne
mov
int
adc
dec
fildll
sub
fs
push
add
mov
ret
in
lock
movsb
push
movsb
adc
and
rorb
mov
test
das
mulb
test
add
out
and
push
sub
jnp
int
dec
pushf
insl
ret
popa
cli
push
aad
sub
jns
imul
xchg
loope
dec
imul
hlt
int3
or
jg
pop
lret
out
int3
aam
and
ljmp
addr16
pop
mov
out
xor
roll
sbb
pop
jmp
inc
pop
imul
dec
imul
mov
mov
inc
mov
in
cmp
cmp
jle
andb
rorb
into
push
mov
mov
mov
mov
add
jp
sub
push
push
popa
pop
dec
cli
xor
loope
jecxz
mov
into
sbb
add
or
das
add
and
into
or
push
notb
pop
mov
movsl
xor
adc
sub
ret
sub
adc
ljmp
jle
cli
dec
sbb
push
enter
adc
cmp
mov
mov
push
cmp
fistl
int
jno
sbb
and
jo
iret
mov
mov
call
aad
fmull
scas
mov
out
mov
mov
add
call
push
jae
movsb
fucomip
scas
sbb
push
push
jecxz
cld
lods
pop
push
cs
adc
sub
in
jnp
int
mov
es
dec
pop
lret
dec
call
cli
iret
sarb
rolb
fucom
repz
loopne
pop
fucomp
lret
cmpsl
push
push
push
pop
data16
loopne
sarl
mov
ret
sbb
je,pn
cmpsl
fsubp
mov
cltd
das
cmp
push
fs
add
lret
pop
test
arpl
cmc
gs
pop
subb
jb
mov
add
pop
shl
mov
icebp
push
xor
xor
rcr
and
jnp
pop
inc
inc
and
push
mov
stos
in
xor
roll
mov
gs
pop
xor
jbe
lods
xlat
int
lods
or
movsb
js
cmpsl
fstps
outsl
lret
dec
stc
movsb
insb
jge
pop
inc
cmc
ficomps
inc
mov
fs
mov
pop
jne
push
add
or
mov
fwait
xchg
jne
mov
push
push
fwait
shlb
mov
and
loop
add
mov
dec
lret
jbe
cmp
cltd
imul
sbb
out
cltd
cmp
popa
aam
mov
jo
dec
dec
jb
movsb
enter
movsl
lahf
push
shll
push
loopne
push
sub
pop
jle
dec
dec
xor
jno
jbe
js
and
jbe
dec
mov
std
aad
xchg
or
ja
add
loop
xchg
inc
inc
sub
sbb
enter
ficompl
cmc
call
jge
add
out
mov
inc
jae
push
cmp
mov
fwait
dec
mov
push
aad
dec
jo
daa
enter
sub
imul
lret
cmpsb
pop
or
pop
cmp
dec
test
push
adc
push
sarl
xor
cs
inc
movsl
mov
xor
xor
addb
pop
pop
jns,pt
imul
scas
add
cs
out
mov
sbb
cmp
bound
xchg
mov
mov
cmc
fs
ret
subb
push
xor
or
mov
mov
pusha
xor
fwait
inc
roll
dec
dec
clc
inc
or
lret
or
mov
fiadds
xor
mov
cmc
stc
cmpsl
jnp
ret
xor
lcall
fwait
dec
loop
cmpsb
push
sbb
adc
pop
imul
pop
add
arpl
dec
pop
push
fiadds
xchg
es
fimuls
stc
shlb
mov
cmp
cmpsb
dec
or
insb
pop
or
inc
jnp
jns
jle
rolb
int
pop
les
cmp
stos
mov
inc
js
ja
inc
aam
decl
roll
andps
cmp
inc
sub
sbb
sub
nop
aaa
mov
jle
push
rorl
pop
push
test
jno
std
jns
shll
push
pop
fsubrp
rolb
mov
out
jae
stos
or
inc
xchg
es
mov
cmp
fwait
push
cwtl
inc
bswap
push
or
out
dec
into
repz
pop
cmp
in
jnp
into
stos
mov
mov
xchg
das
ss
mov
call
sub
movsl
xchg
pop
inc
adcb
pusha
or
mov
dec
sub
popf
or
int3
push
mov
sub
les
aas
outsb
inc
lret
scas
inc
pop
icebp
cmp
or
or
cmpsb
pop
leave
adc
mov
test
cmpsb
dec
les
push
sub
mov
and
out
sub
aaa
pop
cmp
or
bound
mov
adc
sbb
xlat
inc
lret
ret
cltd
push
xchg
inc
popf
mov
jae
nop
sbb
testl
sarb
jmp
push
dec
mov
fldenv
in
cmp
movsb
mov
lods
sahf
rcll
xchg
mov
gs
das
jmp
push
pushf
sub
negb
jns
outsb
mov
scas
jg
shll
push
pusha
es
nopl
in
dec
adc
rorl
xchg
and
js
inc
lahf
fisubl
adc
cltd
jmp
jbe
push
xlat
cmp
roll
loopne
je
mov
jle
add
mov
lea
int3
jl
stos
iret
sbb
pop
xor
sbb
mov
jb
pop
pusha
ljmp
jno
jne
rorl
jmp
sbb
rolb
lock
and
sub
gs
cli
das
fwait
jb
or
and
das
xchg
mov
or
push
push
jno
push
mov
and
lods
sbb
out
popf
pop
add
or
loopne
rcrb
out
fistpll
mov
add
subl
push
cmp
jg
fisttpll
xchg
cld
dec
bound
in
xor
jmp
sbb
repnz
sti
cmpsl
std
idiv
dec
mov
dec
ds
xor
out
dec
pop
sti
jno,pn
adc
sub
pop
add
out
xor
jl
lods
rol
pop
shrb
dec
pop
fnstcw
pop
divl
out
sbb
cmp
xor
cmp
fisubs
and
cmpsb
sahf
jb
sbb
andb
sbb
mov
mov
das
mov
xchg
pushf
sbb
jae
add
stos
rclb
sub
cmpb
push
mov
inc
mov
adc
ret
add
mov
sti
in
fcmovb
xchg
cltd
lcall
and
and
loop
cmpb
dec
insb
xlat
mov
and
inc
sahf
repz
ret
loopne
scas
cs
outsb
daa
xchg
jmp
jnp
dec
sbbb
cmpsb
or
sti
or
sbb
inc
stc
lret
mov
add
lret
fs
int
sub
xchg
add
pop
mov
mov
mov
push
push
xchg
add
aam
gs
movsl
outsb
and
pop
and
mov
or
jb
mov
aas
sub
pop
call
adcl
lods
cmpb
movsb
cmpsl
aam
xor
lods
lds
adc
mov
or
mov
jg
leave
adc
in
sarb
aad
cs
sbb
pop
cmpw
stos
mov
dec
or
push
add
jg
jne
stos
jp
sub
add
dec
lods
ds
pop
nop
call
sti
clc
jecxz
jecxz
mov
inc
ja
jle
stos
pop
in
add
sbb
add
inc
cs
shll
add
gs
stos
stos
repnz
cltd
rol
sahf
push
dec
pop
adc
mov
mov
xchg
pushf
xchg
sub
xchg
adc
add
notl
mov
jnp
ljmp
test
lret
fwait
ret
aaa
test
lret
push
jne
mov
dec
cltd
test
mov
mov
jo
shll
or
jg
cmp
pop
shl
mov
xchg
push
xchg
sbb
aaa
scas
lcall
jmp
pushf
pop
clc
addb
mov
xchg
cmp
ds
add
rclb
adc
jp
mov
outsb
lret
sbb
mov
frstor
sub
sahf
pop
inc
test
mov
xor
fldt
out
sbb
mov
mov
xchg
cmp
jb
fisubrl
cs
inc
sub
mov
ret
adc
inc
inc
scas
dec
pusha
cmc
sti
xor
rorl
mov
sbb
mov
jecxz
ret
arpl
mov
mov
mov
scas
test
mov
std
loop
adc
inc
test
call
and
dec
mov
jle
inc
lret
add
push
push
or
ja
or
insl
xorb
or
mov
mov
sarl
les
and
mov
mov
pop
push
sub
loop
mov
sbb
xchg
loop
and
repz
in
adc
pop
in
loope
adc
fwait
insb
lcall
inc
scas
xor
repz
das
outsl
sub
test
icebp
mov
and
hlt
and
add
mov
in
sub
packssdw
push
je
mov
fnstsw
xor
mov
es
scas
fstps
push
cmc
jb
std
insb
fcom
in
pop
mov
dec
fs
movsl
add
sti
fldcw
int
pushf
sahf
sbb
negb
fcmovnb
sbb
xor
popf
or
pop
mov
lods
decb
add
ja
jge
cmp
adc
hlt
mov
pop
and
dec
inc
ja
dec
test
inc
fimuls
push
mov
rcll
jmp
sbb
push
mull
addl
outsl
test
js
sbb
mov
jb
enter
push
push
dec
jae
inc
push
or
cmc
cmpsb
cld
xchg
and
dec
aaa
outsl
jge
and
divl
leave
popa
stos
fyl2x
inc
mov
mov
inc
cmp
mov
sbb
sub
in
pop
nop
js
popf
cmp
mov
mov
adc
mov
or
aam
push
test
shlb
jmp
sub
xchg
mov
add
xor
jge
dec
out
sysenter
and
mov
xchg
xchg
mov
loop
idivl
outsl
jmp
dec
sbb
mov
xor
test
leave
mull
pop
mov
sub
aad
es
insl
push
outsl
adc
outsl
sbb
xchg
in
mov
cmp
pop
inc
and
fidivrs
fcmovb
loope
ret
inc
xor
mov
xchg
xchg
das
call
popf
mov
jle
pop
inc
jmp
rolb
or
fsubrp
pop
and
mov
cmp
sbbb
mov
mov
pushf
pop
cmp
mov
inc
adcl
sub
lock
sbb
xchg
mov
mov
cmp
movsl
rolb
cmpsl
cmc
adc
test
push
popa
inc
add
inc
mov
lea
in
jecxz
pop
fs
push
jl
pushf
inc
stos
jg
aaa
icebp
add
pop
sbb
negb
mov
or
jg
xchg
cs
pop
test
add
sub
fnstsw
shll
cmpsb
mov
loopne
loope
mov
cmpsb
cmp
sysexit
jp
ss
fidivl
dec
filds
jmp
mov
int
pop
mov
lock
or
push
push
inc
mov
adc
xchg
test
lods
fistpll
add
adc
stos
outsl
xor
mov
jnp
scas
lret
push
clc
dec
into
int3
testb
inc
popa
xor
in
std
ss
bound
incl
xchg
and
fiaddl
pop
sub
lds
outsb
jge
and
nop
aad
add
mov
or
sbb
aad
inc
mov
jno
gs
push
xor
outsl
movsb
ret
jge
bound
rcll
jecxz
sbbl
andb
or
sbb
mov
fsubs
dec
sub
xor
xchg
cli
jbe
dec
movsb
pusha
push
mov
jne
hlt
push
call
ret
pop
jmp
and
mov
xchg
jns
cmc
push
scas
sar
add
fs
addl
jns
and
push
xchg
aas
pop
pop
bound
xor
fucompp
rcll
pop
and
push
pop
dec
bound
pop
jbe
sbb
cli
sub
dec
repnz
ss
je
push
es
push
sti
les
out
aas
cmpb
mov
jmp
std
sub
bound
lret
xchg
and
loopne
dec
mov
fsubrl
adc
dec
int
and
test
dec
test
arpl
mov
jmp
mull
sbbb
outsb
push
mov
repnz
and
adc
stc
jno
arpl
and
cmp
pop
popa
mov
sbb
cwtl
sarl
addr16
pop
mov
jl
adc
lcall
popf
cmp
sub
mov
aaa
nop
cmp
icebp
cmp
inc
jae
adc
sti
and
mov
cmp
gs
lahf
and
aas
into
inc
enter
dec
dec
loope
mov
dec
shll
loopne
push
pop
push
je
mov
inc
add
push
push
rolb
jnp
daa
mov
push
pop
push
sar
xorl
cmc
scas
push
xchg
mov
jnp
xor
pop
inc
aad
xor
mov
inc
push
jns
mov
adc
add
pop
fmull
xchg
fbld
negb
test
push
loop
sub
or
shrb
lea
ficomps
lea
les
lret
mov
push
xchg
data16
cmp
pop
rclb
aaa
mov
push
push
in
jne
add
ret
ds
push
orl
jne
std
rcrl
scas
insb
sbb
push
adc
sub
popf
mov
jb
xchg
loopne
pop
sbb
push
fidivrs
sbb
jg
xor
lds
fistps
jp
cltd
test
push
test
rcl
lock
test
lods
pop
out
ljmp
sbb
pop
std
jmp
rclb
not
jle
setnp
inc
xor
dec
push
dec
cwtd
repnz
jns
mov
repz
mov
leave
stos
aad
insl
add
mov
int3
inc
mov
rclb
roll
push
into
and
or
rorb
aaa
xlat
inc
cmp
scas
mov
shl
pop
ss
pop
adc
shll
out
push
mov
inc
inc
fisubl
pop
mov
test
xchg
jae
xchg
addr16
outsl
loopne
fiaddl
lds
adc
movsb
loopne
scas
xchg
loopne
mov
sbb
push
repnz
cmp
pop
or
test
pusha
mov
pop
add
out
jno
sub
scas
imulb
test
jno
and
add
pop
jns
stc
sub
lea
inc
push
and
push
iret
icebp
jmp
dec
ret
xor
movsb
jbe
sub
or
in
push
or
insl
je
dec
cmp
and
hlt
inc
aam
bound
cmp
sbb
push
cld
ret
ffree
sub
inc
sbb
mov
pop
jp
jg
jbe
test
sub
lret
ret
mov
imul
fadds
xchg
mov
adc
add
inc
aad
fisttpll
jp
das
mov
push
mov
dec
enter
test
addr16
shrl
mov
ljmp
popf
dec
call
fnstsw
imul
and
sub
in
out
es
xchg
push
lea
add
sarb
dec
dec
in
mov
jb
mov
mov
dec
rolb
sub
es
sbb
stos
cmpb
xor
mov
xchg
jle
push
push
mov
daa
push
cmp
pop
jg
mov
ficoml
mov
lret
je
movsl
xlat
lcall
push
dec
cmp
je
cmpb
int3
cmp
push
stc
sub
das
mov
xchg
aad
clc
orb
cmp
jbe
adc
cld
jmp
or
sub
jb
lds
cld
aas
cld
pop
xlat
repz
xchg
mov
xor
inc
jecxz
test
jecxz
sbb
fisttpll
jno
inc
es
rcll
aam
jbe
ljmp
cmp
pop
xor
push
punpcklbw
xchg
cmpsb
mov
mov
pop
pop
testl
sub
mov
xchg
mov
pop
xchg
jl
jp
fs
jae
cmp
push
xor
jmp
cmp
and
movsb
aam
cs
ret
pop
and
pop
cmp
les
dec
xchg
push
jb
mov
mov
pop
xor
data16
cmp
mov
insb
jmp
testb
daa
cmp
outsl
jmp
jle
repnz
add
mov
cld
sbb
dec
sbb
push
hlt
and
out
sbb
push
ret
and
scas
push
test
mov
cmpb
pusha
out
cmp
jne
mov
fistpl
push
mov
movsl
jnp
enter
jo
mov
call
outsl
sbb
xchg
adc
jg
ret
mov
cli
xor
add
sbb
fstpt
ret
push
into
ds
mov
jnp
jp
adc
pop
nop
jns
mov
fldl
lret
mov
sub
xchg
and
pop
dec
loope
addl
mov
jbe
or
in
or
inc
mov
cmc
jg
and
or
pop
rcrb
add
dec
sub
mov
mov
sbb
mov
loop
mov
repz
lret
push
pop
ljmp
mov
push
fistps
in
out
xchg
outsb
rol
cmp
insl
adc
push
adc
add
loop
sbb
movsl
sbbb
push
mov
xchg
out
cli
mov
or
popa
rcll
lcall
sbb
or
dec
stos
inc
std
mov
sti
cld
dec
mov
push
fldt
das
fdivl
jns
jb
pop
push
sub
negl
insl
push
adc
out
aad
popf
inc
adc
popa
test
roll
mov
lds
adc
jge
jl
mov
dec
inc
or
jmp
dec
mov
aam
mov
xchg
inc
mov
or
and
inc
dec
xor
xadd
filds
cltd
sbb
outsb
jno
insb
lret
mov
shrb
xchg
popl
imul
cmpsb
cmp
xorb
jae
outsb
jp
andb
add
push
jg
jecxz
aam
int3
or
jge
cmp
movsb
sub
imul
mov
jns
mov
rolb
pop
lods
or
pop
shlb
cmpl
jg
arpl
enter
mov
pop
adc
fsts
sub
pop
pop
fcoml
xor
dec
pop
sub
adc
jbe
testl
adc
sub
sti
movntq
rcl
test
fiaddl
xchg
mov
aaa
movsb
fadd
stos
xor
nop
or
pop
shlb
fstl
xchg
rorb
and
xchg
jge
push
clc
dec
call
jl
pop
and
mov
movsb
cmp
dec
or
out
xchg
and
pop
push
or
jo
leave
push
dec
push
nop
lock
lock
dec
jbe
xchg
in
sub
pushf
sahf
idivb
hlt
or
xor
add
fidivl
lods
mov
test
xor
imul
push
ret
push
mov
mov
xchg
pushf
data16
lock
xchg
jp
jb
jl
push
sbb
icebp
push
mov
shll
insl
cmp
int3
pushf
lcall
push
cmp
inc
or
sahf
loop
nop
insb
adc
adc
adc
sbbl
fwait
push
cmpsl
push
ficompl
pusha
and
inc
or
mov
jb
add
add
sub
and
stos
cmp
push
push
mov
cmpsl
fistpl
aas
cmp
data16
loopne
cs
addr16
dec
aam
jp
lods
xchg
iret
fidivs
add
aad
cld
mov
jo
mov
cli
cmpsb
loop
or
and
ss
xchg
in
out
mov
je
mov
inc
cmp
push
push
cmpsl
out
leave
cs
dec
xchg
xchg
push
lret
dec
and
sbb
mov
jbe
sti
in
dec
jl
imul
push
stos
out
aaa
adc
scas
adc
jmp
mov
and
lret
sbb
dec
push
test
lahf
in
sub
mov
movsl
shlb
and
aad
jbe
sahf
jp
add
mov
sahf
xchg
cwtl
out
in
test
outsl
dec
adc
xchg
adc
inc
lcall
dec
test
dec
sub
fcompl
and
and
pop
dec
mov
mov
es
inc
dec
adc
adc
es
mov
in
add
mov
les
in
or
sub
xchg
mov
mov
movl
cli
cmpl
add
jns
adc
pop
jo
test
loopne
ficoms
movl
xor
cmc
test
testb
jb,pn
into
into
cwtl
pop
push
subb
xchg
cmpb
ja
out
xchg
scas
xchg
lods
fbstp
xchg
cwtl
mov
xchg
cmpsb
add
aas
pop
imul
mov
dec
push
loopne
das
cmp
cld
lahf
sub
jg
jmp
push
subb
jo
hlt
push
sub
mov
nop
repnz
mov
je
sub
push
mov
leave
dec
push
mov
jno
fistpll
push
push
inc
mov
pop
add
aas
push
out
movsl
ss
mov
pop
inc
xor
mov
sbb
pop
and
push
sub
lahf
push
dec
jne
data16
stc
xchg
cmpsl
sub
int
or
mov
out
movsb
icebp
ds
xchg
mov
pop
jae
add
mov
ja
mov
push
test
cltd
aaa
inc
jp
pop
cmp
in
xchg
or
add
cltd
lcall
subb
out
shlb
push
insb
lds
pop
xchg
out
xor
rclb
mov
test
jae
in
mov
jo
and
mov
scas
lea
and
xchg
mov
mov
push
dec
mov
inc
lea
dec
xor
cld
pop
enter
out
mov
jns
cwtl
inc
mov
push
xor
push
fsubrs
sub
push
popf
cmp
and
hlt
pop
loopne
cmp
lcall
dec
movsl
and
xor
out
testb
es
sarb
mov
mov
rcr
es
push
xchg
cwtl
push
mov
divb
mov
je
pop
pop
inc
fs
popa
in
lods
lret
in
push
jb
mov
pop
mov
xor
lret
adc
imul
push
jmp
imul
lret
movsb
lret
pop
scas
loopne
push
jo
sbb
push
dec
add
addr16
inc
mov
int3
lods
push
movsl
sub
sbb
and
sub
stos
dec
adc
jl
cmp
ljmp
and
pop
sub
mov
mov
jnp
cmp
movsb
jg
inc
mov
icebp
cmpsl
shrb
add
fcompl
mov
sbb
sub
sbb
int3
pop
adc
xchg
sti
pop
mov
popa
pop
out
mov
iret
cmpsb
pop
sub
sahf
inc
dec
sub
adc
clc
js
idivb
sti
adc
ljmp
sar
dec
push
sbb
js
and
lret
jg
jo
xchg
sbb
in
mov
mov
test
fwait
adc
ja
xchg
lds
stos
pop
addr16
sub
pop
call
xchg
mov
sbb
push
divb
jo
cmpl
xchg
fldenv
mov
iret
and
cmpsl
bound
mov
dec
adc
push
jb
xchg
ret
push
add
adc
shlb
out
je
bnd
outsb
mov
dec
scas
add
push
push
or
cld
fildll
jge
xchg
sarl
clc
mov
xor
dec
xor
or
mov
movsb
imul
pop
xchg
add
jnp
out
and
loopne
xchg
dec
jne
add
push
loop
insl
rcl
rcrl
dec
data16
mov
sbb
inc
rolb
inc
mov
adc
cli
jecxz
mov
mov
lds
lret
out
sub
cmp
cltd
push
call
out
jo
inc
adc
subb
dec
shll
xchg
cmp
mov
cmovns
cmpsb
pop
sbb
and
fmull
and
rorl
and
dec
lea
dec
xor
and
push
and
adc
mov
add
adc
xlat
bound
mov
or
adc
push
xchg
mov
movsb
inc
jp
cmp
fs
push
out
or
xor
fdivrl
rcrl
fbstp
xor
mov
out
cmp
cmp
inc
test
hlt
xor
sbb
push
dec
adcb
push
mov
shr
test
call
push
movsb
inc
mov
sub
xor
imul
jnp
xor
clc
stc
sti
inc
out
add
and
loopne
jno
sbb
or
jle
daa
inc
orb
xchg
in
mov
mov
or
adc
xchg
icebp
gs
cmpsl
and
out
cmp
add
and
sahf
repnz
or
shl
mov
fcom
or
aad
into
inc
fsubl
pop
pop
ds
stos
jbe
insl
es
adc
ja
cs
push
push
in
addr16
xor
fistpll
and
call
add
sahf
rorl
notl
mov
mov
sbb
aas
sti
enter
dec
adc
int3
mov
xor
insl
xchg
mov
addl
adc
inc
mov
push
jecxz
cmpsl
mov
pop
fstps
call
insl
sarl
mov
cmp
cli
xor
aaa
sbb
popf
fsts
xchg
cmp
test
or
fsubl
in
icebp
fstl
inc
fildll
cmpsb
decb
pop
adc
xchg
cld
dec
sbb
xchg
xor
sub
sub
aaa
push
cmp
mov
cmp
das
inc
lahf
das
movl
sub
mov
std
movsb
inc
push
out
push
pop
pusha
xchg
dec
pop
mov
xchg
dec
je
mov
ja
lcall
lcall
push
adc
push
mov
sub
inc
lret
lods
xchg
xor
mov
aas
cmp
push
jne
out
out
pop
jns
insb
mov
jecxz
fwait
lock
cmpsb
sub
js
xchg
pushf
mov
stos
faddp
sub
int3
sbb
inc
dec
xor
mov
test
das
jecxz
sbb
in
jmp
mov
es
or
jge
negl
lods
jnp
mov
ljmp
pop
xor
bound
addr16
lods
mov
push
inc
add
push
insl
popa
inc
mov
xlat
mov
addb
add
repz
push
jge
rcr
inc
lods
lods
fcmovne
popa
leave
adc
ja
mov
mov
cs
notb
lods
out
fnstsw
mov
stos
pop
xor
jg
fcmovb
sub
cmp
ja
orb
mov
jmp
cmp
mov
es
or
ljmp
pop
lcall
shl
mov
add
int
cmc
and
ret
mov
jecxz
xchg
popl
sbb
xor
addr16
in
loope
and
cmp
xor
jo
shrl
ljmp
push
mov
sbb
push
fdivr
rcl
daa
xor
in
mov
int3
out
mov
push
pop
and
ret
mov
dec
ret
xchg
nop
or
js
test
cmp
pop
test
sbb
sub
pop
jl
int
out
mov
dec
mov
mov
jbe
mov
and
loop
sahf
pop
push
adc
add
mov
dec
mulb
fldcw
hlt
clc
fdivrp
aad
aad
mov
sahf
dec
mov
pop
icebp
icebp
and
add
stos
inc
jno
mov
mov
ficompl
push
daa
push
cmc
adc
mov
es
or
adc
test
fcompl
jbe
scas
sti
pop
shll
adcl
xor
or
fmull
movsb
pop
xchg
mov
or
fistl
adcb
push
add
mov
mov
sbbl
scas
push
fcoml
sbb
jne
adcb
add
cmp
inc
xor
rorb
insb
xchg
jno
int
cmp
gs
ds
outsl
repz
sti
test
dec
push
dec
enter
fisubrs
and
jp
pop
addl
jle
push
ret
mov
test
mov
pop
pushf
testb
jb
pop
jle
js
cmp
negb
add
pop
xor
call
in
sti
data16
adc
jno
cltd
stos
ja
inc
ss
mov
cmpsb
push
std
mov
lods
or
addr16
js
mov
pop
imul
pop
popf
cmp
add
dec
repz
and
push
sub
xchg
sahf
sub
dec
dec
or
push
stc
nop
sub
mov
sti
in
dec
mov
dec
jno
stc
inc
inc
mov
enter
ret
in
loopne
push
cld
stos
xchg
pop
sbb
xor
adc
push
stc
or
cmpsl
ss
daa
ja
ds
xchg
fidivrl
push
shll
jg
addr16
cld
dec
jo
push
arpl
fs
sub
adc
icebp
xchg
jns
ss
push
or
add
jns
push
xchg
lods
iret
mov
sub
rcrb
ljmp
jecxz
icebp
movsb
jb
pop
fnstenv
mov
add
int
add
push
js
ret
and
inc
xchg
lret
clc
mov
mov
cltd
adc
leave
movsl
fidivrs
lods
mov
jmp
adc
cld
mov
test
sti
loopne
js
mov
test
pop
jo
sbb
lcall
mov
aaa
out
xchg
adc
iret
movsl
cmp
imul
shrb
xor
xchg
mov
ss
dec
or
push
in
repnz
push
add
out
xchg
push
inc
inc
stos
dec
pop
fcmovne
dec
cmp
jne
push
gs
cltd
andl
add
loopne
xorl
adc
lcall
mov
lahf
in
bound
xlat
dec
stc
dec
je
and
out
int3
pusha
push
push
out
popfw
in
jns
leave
jo
mov
clc
cltd
jns
aas
loopne
mov
lock
xlat
adc
mov
add
jbe
aad
into
cli
cmpsb
xchg
adc
sbb
sbb
rep
lcall
ja
int
pop
notb
cmpsl
addr16
outsl
loope
rcll
cltd
xchg
push
fmuls
ret
test
add
scas
scas
std
jecxz
xchg
call
mov
sub
jae
xchg
dec
xchg
dec
stos
cli
and
test
dec
xor
add
scas
mov
sahf
in
out
push
push
pop
cmp
cli
addl
lcall
mov
jbe
push
call
fidivs
mov
push
aam
loopne
lods
xchg
test
lret
jbe
or
mov
fstps
push
ffree
pushf
sub
call
dec
xor
jl
stos
pop
inc
xor
mov
jle
out
inc
mov
pop
mov
sub
inc
or
icebp
cmp
push
insl
sarl
and
adc
xchg
fst
dec
adc
xor
gs
jbe
sub
shlb
testl
inc
ficoms
lods
inc
cmp
push
adc
outsl
sub
mov
jp
addl
iret
aas
and
dec
pusha
and
insl
mov
pop
mov
xor
je
lds
add
push
fadd
sub
sti
pop
es
sbb
push
daa
xchg
repnz
xor
into
xchg
cld
scas
in
push
fnstcw
adc
mov
or
repz
cmp
lcall
and
add
jns
idivb
arpl
xchg
addr16
and
sub
cmp
lcall
xchg
imul
push
testl
lret
std
sahf
xchg
or
in
xor
and
cmp
mov
gs
cmpsl
ret
xlat
movsl
mov
ffreep
cs
or
aad
pop
loopne
pop
adc
cwtl
out
fnsave
imul
jbe
push
cltd
outsl
cli
mov
cli
test
js
pop
xchg
jo
dec
subl
jge
mov
dec
xchg
dec
mov
sub
adcb
imulb
mov
pop
pop
dec
cltd
cli
lods
dec
jno
mov
stc
xor
add
popa
xor
rcl
data16
push
popf
imul
test
xor
in
call
xor
add
into
add
js
mov
les
cmp
dec
ret
int
jnp
push
lea
jbe
jnp
sbb
mov
ret
popf
pop
cmp
icebp
adc
xchg
fcmovu
push
fistps
xchg
aam
ss
and
imul
mov
iret
mov
int3
sub
mov
nop
dec
sub
xor
aaa
push
arpl
dec
adc
dec
or
fadds
mov
inc
pushf
xchg
popf
lock
sub
cmc
testb
cmc
mov
sbb
ds
mov
jle
inc
xchg
and
rcr
and
sub
cli
pushf
mov
or
je
jp
imul
push
dec
mov
jo
fs
xor
pop
xchg
adc
pushf
js
mov
cli
push
push
movsb
dec
sahf
push
mov
pop
pop
insl
jne
or
rol
andl
ljmp
cwtl
lea
xchg
js
fsub
push
sub
mov
shll
js
pop
adc
iret
mov
push
out
mov
sahf
mov
dec
movsb
negb
data16
fcom
cwtl
lea
ljmp
or
push
xor
pusha
rclb
xchg
lds
ds
xor
or
pop
add
or
out
add
and
out
add
adc
in
jmp
push
arpl
push
fwait
pusha
and
aad
xor
push
xchg
mov
mov
add
push
xor
cmpsb
xchg
rcll
dec
inc
and
testl
stos
daa
xchg
mov
or
adc
icebp
or
xor
or
xchg
or
in
push
pop
cwtl
lcall
or
or
scas
lret
cmp
sub
lods
mov
mov
sbb
call
int
das
sub
btr
fcomps
fwait
sub
pushf
mov
xchg
xchg
sub
call
mov
adc
jbe
mov
mov
adc
inc
dec
aad
lahf
adc
lea
je
loop
jmp
adc
jne
jnp
repnz
sahf
in
sbb
jnp
jmp
xchg
loopne
lret
out
les
xor
lods
cmp
pop
push
test
in
adc
xor
cwtl
fwait
or
mov
outsb
mov
cmc
mov
test
stos
js
adc
outsl
adc
aam
push
push
mov
lock
bound
addb
xor
aaa
andl
cltd
pop
out
loop
mov
test
add
lock
frstor
or
pop
add
test
xchg
cltd
sub
loopne
push
sub
inc
stos
in
pop
inc
aam
mov
xchg
nop
fisubs
mov
mov
dec
and
test
icebp
sahf
sbb
in
in
insl
in
xorl
or
aad
pop
adc
cmp
jnp
mov
mov
hlt
lret
enter
add
mov
mov
sub
mov
js
fsts
mov
xor
sbb
rcrb
ret
scas
inc
leave
inc
lret
sbb
shl
mov
pop
xchg
pop
test
test
adc
xchg
daa
lahf
add
addr16
sbb
push
je
ja
outsb
adcl
cmp
popf
or
in
jmp
xor
aam
push
cmpsl
push
in
adc
xchg
vpshuflw
jecxz
in
cmp
adc
pop
or
mov
out
in
adc
sub
jbe
aaa
or
xchg
pop
push
ljmp
js
pop
aam
push
ret
cmp
xor
add
sbb
les
mov
mov
jge
adc
fnstenv
neg
jmp
push
out
dec
or
pop
mov
xchg
hlt
shrd
stc
mov
aad
imul
jae
clc
fistps
fistpl
lret
sub
mulb
pop
lds
mov
mov
adc
imul
sub
mov
push
nop
jne
mov
pushf
xchg
fisubrs
mulb
stos
inc
gs
test
int
push
sarb
scas
daa
shlb
imul
and
std
ja
add
push
inc
test
pop
shrb
mov
sub
push
dec
inc
jmp
push
jbe
icebp
sbb
mov
jb
pop
mov
lcall
fcoms
adc
push
sbb
and
xchg
leave
mov
icebp
xor
push
add
movsb
xlat
cmp
push
jp
mov
adc
ret
and
xchg
cmp
jecxz
sbb
ret
and
add
xor
in
or
push
mov
jge,pn
gs
lcall
jne
pop
and
push
push
imul
pop
lret
fldl
int3
sbb
jno
hlt
lahf
push
icebp
in
jo
fsubl
cmc
enter
push
lahf
mov
aaa
mov
data16
ds
in
xchg
mov
aam
and
jnp
xchg
das
pop
out
xor
jl
cwtl
cmpsb
xchg
test
imul
pop
mov
mov
ds
insl
add
shl
xchg
popf
inc
subb
xor
adc
iret
jle
mov
fwait
je
jnp
pop
popa
push
dec
xor
fs
jae
pop
sbb
inc
scas
dec
fs
xor
incl
cmp
in
xchg
jae
mov
shll
lods
sub
dec
fstpt
xor
or
fistl
add
xchg
ret
out
pop
inc
hlt
shr
iret
ds
leave
daa
and
test
into
lods
lcall
in
test
xor
aaa
and
cltd
std
ds
jg
sbb
popa
jno
mov
or
mov
rcll
les
jge
lcall
lret
mov
push
pop
xlat
out
lret
inc
nop
and
mov
xchg
popa
sbb
fdivrs
sbb
rcrb
xchg
out
jne
cs
js
cs
mov
icebp
adc
mov
ljmp
add
pop
jb
ret
ja
mov
xor
push
jle
push
movsb
movsl
jbe
aas
or
mov
add
mov
xchg
mov
sub
push
jg
ret
mov
dec
ss
inc
scas
inc
add
fs
mov
xor
mov
mov
addr16
stc
pop
jp
mov
xchg
mov
cmpsb
or
movsl
shrl
jl
adc
out
bound
mov
sbb
fs
mov
sub
sub
stc
adc
pushf
inc
dec
test
and
cmp
lods
xchg
push
and
dec
in
push
or
sarb
pop
out
xchg
xor
loop
test
into
mov
adc
loopne
hlt
push
sbb
cltd
cmp
dec
jge
in
ss
adc
leave
jle
mov
xor
xchg
dec
mov
flds
pop
aas
adc
pop
arpl
into
out
fildll
shrb
mov
icebp
mov
repz
sbbb
mov
pop
dec
mov
les
xchg
aaa
fmul
fwait
leave
xlat
add
dec
sbb
mov
jns
pop
and
cmp
sub
push
bound
clc
xor
pop
cmp
sub
in
jg
idivb
je
xchg
or
iret
mov
lret
test
or
and
lret
push
push
pop
cmp
std
pop
cld
fs
insb
je
cld
or
lods
inc
dec
xchg
loope
jnp
aas
jl
sub
mov
or
mov
fs
mov
imul
gs
pop
xchg
sub
mov
or
call
jbe
jnp
lds
add
fwait
pop
aam
mov
jns
pusha
test
aaa
and
es
imul
cmp
loop
call
cmp
ss
lds
popf
loopne
int
ja
mov
inc
xlat
shl
add
ja
xchg
ljmp
fwait
jge
add
dec
adc
jle
idivl
out
jl
lret
adc
rcr
xor
xchg
popf
push
jg
push
nop
push
xchg
mov
pop
sbb
push
jbe
xor
test
jno
mov
ljmp
mov
and
pop
lea
repz
xlat
shrl
mov
xor
in
mov
aam
inc
mov
mov
mov
dec
movb
and
imul
sarb
test
test
mov
cmpb
js
into
test
fwait
scas
imul
insl
sub
mov
add
iret
je
in
ds
add
shll
lret
and
jno
mov
and
sbb
loopne
enter
fldcw
test
scas
dec
and
into
add
pop
dec
das
int
cmp
ljmp
inc
xchg
jg
mov
add
jno
jmp
inc
imul
pushf
jmp
dec
jge
shlb
jp
xor
jecxz
cmp
jns
dec
ljmpw
push
std
imul
test
cli
scas
ret
add
pop
cltd
dec
mov
fnstenv
lret
mov
sub
and
clc
test
jmp
into
pop
jge
xchg
int3
scas
sbb
pop
fistl
adc
iret
stc
inc
xchg
cld
je
dec
mov
inc
inc
jge
inc
dec
mov
leave
jg
bound
mov
in
push
inc
stos
scas
ffree
mov
ja
cmp
je
xchg
cmp
adc
xchg
push
test
dec
test
and
pop
gs
xchg
ficoms
aad
pop
adc
push
les
and
push
jmp
mov
aaa
fists
inc
mov
push
int
clc
bound
loop
xor
not
les
cltd
mov
dec
lods
jno
adc
cmp
mov
arpl
sbb
ljmp
push
pusha
pop
testb
pushf
dec
test
loopne
push
out
imul
je
push
mov
pushf
pushf
xchg
enter
movb
out
cmp
adcb
lcall
pop
mov
dec
dec
inc
cld
adc
test
jns
movsb
das
repnz
cmc
or
fwait
iret
xor
xchg
mov
lods
aaa
cld
sti
inc
repz
je
jmp
cmp
jmp
out
std
jl
mov
dec
nop
mov
in
cmp
sub
mov
aas
stos
test
enter
mov
sub
mov
lock
addb
mov
shl
add
fidivrs
cmp
or
scas
sub
nop
bound
aaa
ja
insb
adc
mov
mov
clc
jp
adc
mov
xchg
mov
lcall
cmp
jno
mov
pop
or
in
ss
add
pop
pop
stc
loope
xlat
cmc
insb
mov
in
loopne
sarl
leave
and
scas
scas
lahf
xor
in
cmpb
pop
push
sbb
pusha
inc
push
test
mov
xorl
clc
mov
dec
pop
add
push
out
sub
mov
movsl
cmc
idivb
int3
and
xor
and
push
out
mov
lahf
out
movsl
add
or
push
pusha
mov
sbb
rclb
mov
sahf
add
insl
xchg
pop
mov
cmp
inc
mov
sub
fadds
jmp
out
jnp
add
test
scas
mov
inc
rol
daa
mov
cmc
xchg
or
loopne
sbb
incl
sbbb
fnsave
jecxz
movsb
mov
jmp
and
ljmp
dec
push
xchg
imull
int
clc
pop
hlt
or
sub
daa
imul
or
xchg
dec
neg
push
sarb
push
scas
and
cld
mov
sbb
sub
fldenv
mov
jl
add
or
adc
aam
int3
or
dec
lods
mov
mov
jne
mov
aas
rcrb
sbb
jo,pt
mov
call
ret
push
cwtl
add
ds
sbb
cltd
lods
loop
adc
xchg
jecxz
jle,pt
cmpsb
loopne
xchg
sbb
fidivrs
and
mov
push
add
sahf
ljmp
xor
ficompl
sar
jmp
sbb
xlat
lock
mov
je
inc
popa
mov
xchg
lock
jbe
mov
insl
nop
int3
add
loopne
push
hlt
add
cmpb
pusha
add
aam
in
stos
lods
dec
push
shll
pop
jmp
mov
xchg
mov
jo
out
add
into
lds
sahf
test
out
xchg
lock
orb
adc
push
sbb
xor
rorb
xor
test
and
cmp
jmp
jle
push
and
inc
sbb
mov
xor
test
in
mov
cwtl
fisttpl
dec
shrb
add
add
test
in
imul
push
dec
mov
arpl
pop
mov
xchg
jle
leave
cmp
hlt
add
test
or
inc
imul
xchg
gs
fcomip
and
or
sti
xlat
ficomps
aad
mov
pop
dec
push
push
mov
stos
into
enter
leave
icebp
data16
fldcw
sbb
mov
lock
out
jle
test
add
cmp
sbb
loope
xchg
mov
cmp
stos
fildll
cmpsl
fdivr
insb
lods
pop
pop
xor
mov
pop
mov
subb
sub
es
xchg
and
xchg
lea
jno
mov
je
dec
mov
lds
es
xor
sub
fs
push
stos
mov
shlb
and
fwait
mov
add
in
jmp
lret
test
inc
mov
dec
dec
in
cmp
dec
mov
adc
cwtl
cmpsb
fdivl
aad
dec
xchg
dec
ret
movsb
loopne
inc
pop
rcl
notl
pushf
scas
add
in
xor
and
cwtl
fldl
mov
inc
loopne
sub
cmpsl
add
int
pop
nop
into
push
add
test
ja
sub
inc
push
dec
mov
loope
les
xor
insb
push
ds
xchg
cmp
aas
les
sub
cmpsb
push
mov
mov
gs
in
xor
testb
xor
aad
orb
iret
movsl
push
mov
cmpsl
cmpsl
out
jae
push
loop
or
pop
mov
dec
bound
jns
repnz
ret
xor
ljmp
push
cmpsl
std
add
bound
jmp
mov
adc
in
and
lods
movsl
push
movsb
rcr
fistl
or
insl
mov
popa
cmp
push
pop
iret
xor
lock
mov
les
add
sub
dec
or
loopne
inc
js
pop
cmp
out
pop
mov
test
xchg
jecxz
sbb
sbb
movsb
test
add
lea
repz
mov
inc
jb
and
popa
pop
pushf
cmp
pop
pushf
xchg
cltd
lcall
aaa
adc
jmp
sub
pop
pop
pop
in
lea
ds
mov
add
sti
mov
shll
popa
icebp
pop
rolb
out
xlat
ljmp
movsb
ret
dec
sahf
popf
in
mov
and
in
enter
jne
shll
dec
adc
fdivrs
fcmovnbe
movsb
test
sub
push
dec
orl
fwait
sbb
filds
adc
jo
imul
xor
xchg
int3
xchg
adc
nop
insl
inc
sti
ss
aad
jno
mov
mov
pop
and
sub
loope
dec
cmp
add
inc
stc
lods
mov
js
or
decb
xchg
cmc
hlt
imul
pop
ret
insl
inc
insb
mov
dec
popa
xchg
or
sbb
xchg
inc
inc
mov
mulb
jae
adc
push
dec
repnz
jmp
int3
enter
in
mov
dec
in
push
mov
gs
inc
adc
testl
roll
dec
enter
jl
mov
or
stc
sub
jmp
aam
lods
jbe
dec
sbb
out
or
mov
imul
mov
aad
jb
jmp
or
mov
aam
lods
push
sub
negl
in
lock
cmp
or
pushw
mov
inc
mov
daa
or
sbb
or
das
mov
adc
mov
sbb
sbb
out
int3
int3
mov
sub
aas
rclb
sub
lock
ja
or
mov
jb
jne
push
or
stos
fdivl
pop
mov
mov
lret
inc
jl
push
add
adcl
or
aam
daa
pop
into
jbe
add
xor
push
mov
jl
rcrl
outsb
in
jle
mov
sbb
xchg
push
sub
fmul
es
out
in
pop
ja
loopne
xor
loope
lea
inc
fisubl
xchg
inc
cmp
daa
sbb
sbb
or
sub
mov
xchg
inc
cs
fs
fwait
orb
add
idivb
sbbb
nop
ss
inc
push
scas
shll
enter
cmp
push
mov
lret
mov
ret
les
jmp
pop
mov
add
popf
or
movsl
mov
mov
mov
dec
das
xor
lret
repz
or
pop
gs
lahf
inc
push
adc
call
shrl
es
xchg
jl
psllq
pop
push
into
jbe
mov
les
and
mov
xchg
add
cli
mov
dec
pusha
pop
adc
sbb
cmpsb
lret
sahf
dec
jnp
sbb
test
sbbl
dec
push
dec
das
das
fldcw
int
scas
imul
movsl
mov
inc
or
pop
cli
movl
and
dec
adc
mov
pushf
out
pop
or
add
popa
sti
fstl
cld
rol
pop
fldz
sti
pop
sub
xlat
or
mov
lods
loope
subl
mov
xchg
outsb
shlb
cltd
sub
xor
or
sti
xor
adc
mov
xlat
aaa
rolb
out
push
mov
stos
jl
lahf
jmp
sarb
jmp
adc
adc
sbb
js
dec
clc
mov
sub
out
pop
pop
push
dec
cs
mov
push
push
and
fistl
add
movsl
imul
aaa
push
push
dec
stc
into
or
sub
and
or
fwait
push
vrcpps
aas
in
jns
xor
or
arpl
movsl
mov
inc
push
repz
test
mov
jecxz
inc
sbb
popl
int
mov
or
push
inc
or
ret
ficoms
lret
ljmp
pop
jno
or
pop
subb
fbstp
cmova
xor
hlt
or
mov
cwtl
or
sbb
enter
and
ljmp
mov
jg
imul
cli
fimuls
pop
test
add
fldt
jb
mov
aad
into
adc
mov
sti
dec
pmaxub
adc
jo
push
inc
popf
aas
pop
push
and
mov
lret
sbb
push
add
movsl
sub
stos
pop
inc
mov
and
lcall
out
adc
inc
cltd
in
xchg
dec
mov
pop
fldcw
cmpsl
imul
cmp
je
lcall
adc
jl
popa
aaa
jg
sbbb
adc
jns
xlat
cltd
test
jne
xchg
cmp
xchg
es
xor
dec
inc
adc
xlat
je
or
mov
mov
je
and
sub
fcomp
je
jge
mov
sti
std
test
jmp
scas
mov
rol
fcoml
andl
dec
inc
inc
xchg
outsl
adc
push
push
cmpsl
mov
stos
stc
jo
fs
xchg
sbb
hlt
add
out
test
stc
adc
xor
mov
loope
mov
mov
fdivs
jnp
jbe
adc
lods
int
mov
sbb
adc
push
xchg
dec
add
lock
adc
es
adc
sbb
imull
xor
cmp
pop
inc
xor
jge
mov
loopne
inc
jae
test
mov
dec
xchg
adc
out
into
lahf
cmc
jp
fdivs
test
pop
xchg
icebp
enter
sbb
xor
ret
arpl
jl
shr
pop
push
addr16
fwait
lret
add
add
mov
jle
mov
add
pop
mov
dec
dec
cli
add
repnz
out
ret
test
jl
in
test
add
adc
xchg
pop
out
mov
pop
sahf
sbb
mov
icebp
mov
inc
push
dec
cmp
inc
aas
xor
mov
rcrb
dec
mov
adc
dec
cmp
lret
add
fcoml
mov
fcoms
in
xlat
les
je
mov
repz
ljmp
aam
aaa
arpl
decb
mov
sbb
stos
jl
loope
jle
lock
jecxz
cs
fwait
fwait
arpl
mov
fdivrl
test
sbb
sub
movsl
sub
popa
ljmp
pop
jno
push
fistps
arpl
and
fdivrp
out
inc
cmp
imul
dec
mov
inc
in
xchg
jns
lds
xchg
iret
lret
inc
les
aaa
es
mov
imul
nop
lods
stc
les
pop
sbb
test
popa
jne
imul
sub
cmpsb
mov
inc
dec
imul
rorl
faddl
xor
ja
sbb
aam
xchg
jns
pop
inc
pop
adc
out
and
sahf
add
pop
ftst
lahf
lea
jnp
pop
adc
jecxz
lret
push
mov
sarl
cmc
push
repnz
shl
sti
inc
jbe
cmp
ljmp
lret
inc
clc
out
cmp
inc
aaa
popa
xchg
lea
stc
sbb
sti
mov
mov
sbb
adc
aad
sub
and
adc
out
xchg
notb
mov
or
nop
lret
jge
mov
push
in
inc
shlb
dec
pop
xor
mov
jbe
or
in
dec
popf
aad
mov
or
loop
jne
pop
nop
dec
addr16
out
fnsave
test
insb
rcrl
mov
sub
jbe
rol
movb
lret
adc
sti
pop
mov
inc
pusha
out
pop
pop
sbbl
jb
adc
mov
or
loope
pop
pop
cli
testb
testb
sahf
cmpsl
pop
popf
push
adc
push
xchg
int3
lock
mov
mov
xchg
inc
inc
xchg
sbb
mov
jl
mulb
outsl
stc
push
jp
pop
pop
ret
jmp
test
inc
mov
pop
dec
cmp
xor
inc
lods
and
popf
in
aas
jbe
mov
cmp
les
cmc
ror
pusha
scas
insl
pop
repnz
mov
out
shl
int
mov
lret
lods
mov
sti
dec
xchg
movsb
sbb
xor
adc
mov
push
ljmp
clc
int
push
or
mov
outsl
or
or
int3
jmp
jle
pop
mov
jl
cmp
mov
mov
out
test
sub
sub
sub
data16
jp
aad
mov
sub
or
push
sarb
fsub
addb
inc
mov
orb
in
sti
int
std
xor
jg
test
mov
inc
sub
xlat
cmp
mov
push
sub
in
mov
sbb
repnz
pop
imul
dec
in
jmp
loopne
cltd
pop
fdivs
scas
ja
cltd
lea
ja
add
inc
test
sub
shll
fdivrl
sub
in
mov
rep
int3
push
mov
mov
movsb
mov
jb
andl
mov
sbb
mov
mov
sbb
popf
adc
loopne
roll
loopne
or
loop
fwait
adc
or
icebp
cmp
outsl
cltd
inc
fucomip
das
ja
push
daa
adc
or
lea
pop
rdmsr
iret
push
and
add
repz
xor
lods
dec
add
push
sbb
jmp
sub
es
fwait
daa
push
cmp
pop
and
jnp
cmp
mov
mov
add
lret
mov
jl
cwtl
popf
sub
jne
push
add
mov
adc
stos
push
std
fcmovne
out
pop
and
popa
or
cmpsb
xor
ficoml
decl
mov
outsl
adc
icebp
insb
clc
xor
inc
movsl
pop
nop
das
out
mov
jae
decl
lock
xlat
xchg
shrl
sub
mov
xor
insl
je
dec
cmp
mov
js
push
cmpsl
sbb
cltd
dec
add
stc
js
es
mov
out
mov
bound
in
loopne
adc
mov
loopne
aam
mov
js
mov
dec
cmp
push
test
mov
movsb
es
mov
rcr
test
cld
push
dec
ds
insl
outsb
nop
and
xchg
js
cmp
mov
mov
fsubrs
into
mov
ss
push
lds
mov
hlt
gs
add
xor
sbb
pmuludq
movsb
pusha
stos
sub
push
sub
cmp
rolb
dec
mov
mov
les
sti
mov
xchg
mov
lret
sub
xor
sub
xchg
rol
pop
dec
enter
inc
xor
mov
add
xchg
push
or
jo
lods
test
hlt
xchg
lods
mov
loop
xchg
dec
adcb
inc
and
das
loopne
mov
jbe
js
push
and
jbe
lods
ja
sbb
inc
popf
dec
mov
jmp
in
cmp
cmp
es
enter
mov
fldl
cmp
cmp
popf
scas
pop
xchg
out
shlb
into
mov
xchg
fs
jne
mov
fs
xchg
or
into
and
mov
mov
scas
mov
sti
sbb
inc
loope
andb
cld
mov
clc
jmp
lret
jo
mov
iret
mov
out
cmpsl
ret
nop
xchg
int3
test
cmp
xchg
jns
fisttpll
push
adc
cmp
push
leave
lret
adc
ss
cwtl
xor
cmpsb
adc
cld
out
or
scas
add
push
pop
pop
mov
sbb
pop
cwtl
loopne
fwait
jnp
cmc
xchg
icebp
or
rcrb
jmp
sbb
fstps
mov
adc
jb
stc
sub
in
add
xchg
test
add
popa
adc
das
or
sbb
sbb
pop
jmp
add
insl
es
inc
shlb
imul
mov
jb
call
aad
fdivrs
adc
pop
cmpsl
mov
mov
in
pop
fldt
pop
adc
jecxz
nop
rcrb
adc
call
mov
lret
push
xor
popa
pop
dec
les
push
call
loop
push
dec
inc
out
test
jo
fildll
adc
mov
cmp
push
mov
mov
cmc
sbb
lods
inc
stc
pop
sub
cmc
fucomip
lret
scas
push
adc
mull
jb
cmp
mov
mov
dec
daa
sub
jae
fistpll
mov
data16
cmpb
adc
jbe
mov
mov
mov
push
out
fwait
cld
cmp
cmpsb
or
sbb
cli
inc
sbb
rcr
xchg
xchg
mov
sub
outsl
pop
stos
loopne
pushf
dec
push
mov
or
pop
push
popf
xchg
inc
mov
lds
lahf
sbb
and
out
mov
lret
xchg
xchg
fsts
in
dec
jl
sbb
jnp
mov
jo
enter
ss
sbb
mov
pop
and
fcmovnb
pop
and
and
ffreep
push
or
mov
push
sbb
mov
fsubs
pop
xchg
into
mov
adc
cmp
pop
aam
test
push
jns
sub
popf
add
sbb
pop
sub
or
dec
lcall
inc
and
push
outsb
cmp
xorb
xor
pop
mov
fs
cmp
adc
lods
inc
xor
add
ret
in
or
stc
int
pop
or
lods
sub
gs
repz
arpl
adcl
inc
inc
mov
pop
in
inc
stos
and
xchg
out
and
or
popa
enterw
adc
adc
fildll
xchg
mov
mov
rcrb
sub
inc
or
xchg
lret
pop
inc
rcrb
repnz
xor
psubusw
mov
imul
bound
or
add
dec
or
clc
and
lahf
fildl
loopne
lock
stos
xor
movsb
jne
in
add
mov
lock
insl
test
sbb
dec
cmp
clc
xor
mov
inc
mov
addb
sub
push
je
push
sub
enter
inc
xor
mov
fs
xor
sub
shrl
sbb
push
negl
pop
pop
pusha
jp
idivl
sbb
scas
or
sub
andb
orl
push
add
pop
or
shrl
xor
repnz
cwtl
imul
fucomip
ss
cmp
sub
addl
testb
lods
inc
sbb
outsb
push
xchg
fwait
sub
mov
jae
and
push
movsl
into
shlb
cmp
mov
jo
add
adc
test
fildll
adc
and
into
sbbb
js,pt
jg
pop
hlt
cmc
sbb
pop
xchg
scas
xchg
ret
inc
mov
mov
pop
adc
ss
dec
xlat
jg
inc
mov
mov
mov
inc
adc
sub
daa
pop
add
cwtl
aad
sbb
mov
or
xchg
push
mov
pushf
xor
push
or
ljmp
adc
xchg
xchg
xchg
mov
xchg
xchg
orb
xchg
aaa
cltd
inc
xchg
pop
lock
js
or
adc
mov
sbb
and
adc
jmp
fisubrs
mov
pop
mov
cli
lea
sbb
divl
ja
pop
test
push
mov
add
aad
xlat
bound
in
sub
mov
dec
popa
aad
les
mov
in
jl
jge
or
scas
jb
sub
and
and
cmp
adc
inc
cld
stos
fdivrl
pop
push
pop
sahf
cltd
test
sbb
repz
lods
jns
dec
fistpll
lea
jns
pushf
pop
push
and
inc
imulb
dec
push
mov
pop
aam
cmp
jp
inc
inc
icebp
bound
jo
mov
movsb
push
sbb
jg
sti
mov
aad
aas
popf
mov
or
lret
dec
pop
repz
cmpsb
movsb
and
faddl
jmp
sbb
and
jo
flds
aas
jecxz
sbb
mov
addr16
xchg
or
sti
mov
and
daa
sbb
sub
xchg
inc
jbe
pop
xchg
xor
addr16
mov
repz
incl
inc
jg
pop
add
fldt
mov
jo
jecxz
mov
dec
cs
aaa
add
mov
sub
and
decb
jmp
jle
testl
adc
mul
mov
sbb
fs
xchg
outsb
filds
mov
dec
nop
imul
adc
sti
xlat
fs
andb
xor
add
cli
dec
xchg
add
movsl
fsub
cld
orb
in
adc
xchg
dec
xor
daa
in
jge
mov
inc
cmp
int3
outsl
push
iret
sbb
repnz
mov
add
xchg
shr
dec
rcrl
sub
mov
mov
test
cmp
xchg
lds
or
add
sub
or
dec
cmp
dec
fsubs
push
jbe
mov
aam
or
ljmp
dec
push
mov
mov
inc
or
or
aas
inc
mov
xchg
imul
mov
xchg
cld
xlat
mov
sub
ss
mov
sub
imul
and
stos
pop
test
mov
mov
les
cmp
decb
and
stc
ficompl
mov
inc
mov
mov
xor
ja
adc
or
dec
jle
test
aam
ja
mov
mov
mov
out
arpl
das
repnz
dec
aas
sahf
fcomps
mov
cmc
jg
push
and
fldt
pop
push
jp
js
pop
stos
mov
pop
sbb
pop
mov
pop
xlat
sbb
bnd
cld
lods
xor
cmpsl
xor
inc
sub
or
mov
adc
icebp
and
jecxz
clc
xlat
repz
and
and
ficoms
test
dec
pop
cwtl
pop
popl
mov
lahf
xchg
mov
je
jle
or
lret
push
jbe
lods
xlat
rcll
sub
dec
mov
shlb
stc
roll
in
mov
mov
mov
aad
cmp
ret
add
mov
inc
jns
ret
fucomp
xchg
jae
test
imul
out
pop
push
cmp
jo
mov
test
mov
scas
xlat
pusha
xor
sbb
test
scas
es
cmpsl
or
gs
popa
add
dec
popa
fidivl
mov
push
add
mov
pop
outsl
cmpsb
jne
mov
sbb
push
xchg
xchg
leave
xchg
inc
jb
mov
fmul
cmp
hlt
sub
xor
fistl
pop
or
fucomip
dec
lret
pop
scas
ja
jns
jmp
hlt
pop
sbb
cmp
push
lods
loope
inc
out
jb
inc
roll
jnp
ret
pop
cs
dec
push
mov
pop
xchg
stos
sub
scas
int3
std
cmpl
arpl
xor
jecxz
sbb
xchg
xor
jmp
shrb
push
push
nop
dec
sub
imul
dec
xchg
xor
pop
pop
xor
add
data16
jle
mov
jmp
cli
mov
int3
cmpl
xchg
cmp
cmpl
in
add
jo
mov
xor
cmpsl
or
lods
inc
shrb
pop
sub
repnz
into
and
in
gs
jle
mov
xor
push
subl
int3
stc
pop
pop
stos
movsl
gs
in
dec
cmp
shrb
movsb
sbb
inc
std
insb
or
mov
dec
bound
xchg
and
lret
shr
das
adc
outsb
inc
mov
sbb
jg
sbb
subb
adc
push
inc
mov
mov
jo
pmaddwd
loop
mov
pop
jns
orb
sbb
pop
sub
add
mov
es
jo
xchg
dec
or
add
aad
fimuls
pop
sbb
cmpsb
push
xchg
dec
add
xor
xchg
in
mov
lods
mov
sbb
js
inc
jbe
push
cmp
imul
sub
mov
xchg
in
jo
rolb
cmp
xor
dec
xor
inc
mov
repnz
imul
and
shlb
cli
js
and
arpl
stc
ljmp
movsb
add
push
out
and
gs
xchg
sub
popf
push
cmpsb
movsb
jae
sbb
jmp
inc
jb
into
idiv
outsb
in
push
dec
mov
fldcw
outsl
test
and
cld
pop
cmp
fdivr
outsl
and
sub
imul
xor
and
xchg
test
xchg
ffreep
and
pop
xor
lahf
fs
cmc
clc
cld
popf
test
insb
xchg
int
sbb
adc
mov
jno
xor
pop
out
test
scas
xchg
popa
movsb
dec
mov
xor
pop
push
fsub
out
out
dec
mov
scas
add
repz
dec
xor
mov
mov
dec
shrb
pop
push
xchg
mov
mov
inc
in
lcall
mov
mov
mov
das
mov
and
mov
addr16
daa
mov
fstpt
out
cmp
cmp
mov
adc
xchg
ret
mov
insl
pushf
cmpsl
sub
out
mov
mov
cmc
xorl
psrld
aaa
pop
and
jmp
dec
mov
pop
xchg
icebp
pop
sub
or
addr16
movsl
testb
mov
shlb
adc
je
dec
xchg
mov
hlt
sbb
andl
in
pop
movsb
xchg
add
adc
mov
imul
inc
adc
sahf
in
xchg
jle
jae
test
sbb
scas
shl
out
das
push
mov
sbbl
into
xor
rcll
mov
and
fisubrs
dec
inc
xchg
daa
pop
xor
sarl
loopne
jns,pt
jp
cmp
add
fisubs
testb
and
out
xchg
gs
les
fldenv
inc
adcb
dec
rcl
mov
mov
jae
mov
aad
xchg
xor
fnstcw
inc
jle
imul
popa
xor
xor
shl
repz
sbb
aas
or
xchg
mov
xlat
ret
lods
cmpsl
fdiv
pop
cmpsl
or
dec
je
or
das
cs
out
call
nop
lock
data16
cld
or
scas
or
inc
mov
jecxz
sub
in
or
loopne
fsubrs
dec
cmp
jbe
jg
pop
sbbl
mov
pop
jge
pop
out
cmpsb
pop
cli
adc
rcrl
or
pop
scas
push
mov
xor
cmovle
int3
rcl
inc
lea
xor
cmp
push
push
ljmp
iret
mov
das
add
xchg
jl
and
cmp
mov
xchg
pop
gs
mov
out
pop
lcall
popf
repnz
addr16
popf
in
push
xchg
mov
nop
pop
sti
mov
cmp
jne
testb
push
loope
mov
mov
out
cmp
fdivr
push
orb
mov
in
add
mov
dec
push
dec
jnp
pop
add
fistps
lods
mov
adc
sub
mov
pop
dec
mov
dec
aas
jnp
mov
sub
lods
cmp
jnp
mov
leave
push
jo
pop
bound
and
cmp
xchg
adc
lods
sub
mov
lds
shll
les
rcr
cli
inc
fs
mulb
imul
ss
loopne
fisubs
addl
dec
cmp
xchg
call
cmc
mov
and
dec
cmp
mov
cmp
adc
inc
enter
ficoms
inc
loope
popf
rcrl
inc
jp
in
xor
xchg
or
xchg
pop
xlat
sbb
stos
in
insl
arpl
jae
ds
lock
pop
pushf
enter
xchg
mov
bound
push
cld
pop
adc
sbb
xchg
nop
shrl
add
xchg
xchg
pusha
and
int3
fimull
inc
sbb
cmc
ds
jl
pop
jmp
das
outsl
ss
xchg
in
cltd
fcompl
pop
ret
adc
cmp
push
popf
add
xchg
xchg
push
mov
cmpsb
lea
mov
sub
add
subl
addl
xchg
orl
adc
fdivrl
adc
test
add
lds
sub
or
dec
pop
jg
pop
add
movsb
mov
hlt
mov
push
dec
pop
adc
xchg
or
mov
ds
in
fldcw
mov
dec
jns
icebp
mov
jmp
daa
sti
dec
lret
adc
pop
inc
out
jae
dec
shrl
cmp
cld
repz
jp
les
ret
pusha
jl
pop
bound
inc
fsubr
ljmp
fdivp
rol
xor
and
sub
addb
mov
es
xchg
push
imul
push
adc
add
fdiv
or
addr16
jae
pop
into
xor
or
sbb
cmp
xlat
dec
sub
insb
cmc
outsb
andl
xchg
mov
mov
data16
sbb
xchg
lods
or
dec
leave
cltd
mov
adc
fcompl
roll
sti
in
cmp
jp
lret
jnp
shr
popf
out
xor
lret
arpl
negb
movsl
rcrb
or
mov
gs
lea
xchg
hlt
mov
inc
rep
leave
adc
movsb
sub
notb
mov
inc
inc
insb
push
mull
push
mov
aam
mov
fbld
push
ja
test
rcrl
enter
mov
enter
pop
fwait
jo
mov
outsl
sbb
xchg
jbe
pop
lret
jg
sbb
and
mov
movsl
in
cmpsb
mov
cmp
xor
xor
pop
int3
dec
scas
mov
sub
xor
loope
loop
nop
adc
adc
out
pop
and
add
cmpsl
cmp
xchg
push
xchg
out
push
cmp
fiaddl
xor
mov
sahf
bound
mov
mov
rorl
into
out
fsubrl
push
es
shll
mov
jp
or
xchg
mov
test
pusha
inc
aaa
adc
aas
outsb
icebp
and
jge
pmulhw
outsb
jg
jb
cld
jge
subl
push
pop
leave
test
cmpsl
cwtl
aaa
jns
push
push
xchg
dec
ficoms
jmp
add
in
jmp
dec
pop
pop
loope
mov
mov
test
jl
lret
out
repnz
daa
fadd
call
es
inc
cmp
xchg
fistpll
shrl
iret
dec
or
out
fisttps
lea
jp
jb
sbb
mov
mov
test
cmpl
test
leave
jns
xor
pop
cmp
in
imul
dec
push
xchg
adc
jp
jmp
jp,pt
jb
les
xchg
pop
mov
test
arpl
cltd
insl
mov
mov
pop
iret
bound
xchg
sbb
clc
cwtl
mov
mov
sbb
scas
stos
jbe
jne
cmpsb
add
lds
outsb
xchg
fwait
dec
xchg
orl
test
leave
add
mov
mov
adc
in
sahf
xor
cwtl
dec
lods
fadd
out
addl
ja
mov
jmp
aas
mov
stos
jns
loopne
lods
jns
push
inc
adc
pop
out
popf
xchg
sti
mov
fsubrl
and
mov
jne
or
outsl
rolb
es
loopne
testl
mov
fidivs
pop
fildl
adc
and
jne
push
push
rorb
out
cmpsb
cmp
ficoml
pusha
xchg
xor
sbb
cmp
cli
mov
mov
ret
int
sub
out
mov
adcb
scas
sub
vphaddbq
sbb
loopne
jne
mov
cwtl
into
xchg
cmp
subl
dec
imul
and
push
push
scas
rol
jle
pop
jno
popf
imul
cmp
sbb
lahf
adc
mov
pop
das
ffree
or
xchg
rcrb
xchg
es
cmc
jno
mov
js
or
jge
jge
sub
and
repnz
dec
jb
fsts
inc
fdivrl
sti
cs
cmp
adc
bound
stc
pop
mov
das
jbe
mov
push
cltd
jge
and
insb
repz
out
insl
ljmp
scas
mov
int3
mov
dec
cli
loopne
lret
scas
icebp
mov
sbb
fbld
xor
lret
sub
mov
scas
pop
arpl
mov
xchg
cmpsb
mov
mov
mov
test
mov
aad
adc
popl
mov
out
orl
movsb
push
loopne
rorl
jge
lods
ss
xchg
push
pop
adc
sub
xor
mov
aam
enter
in
ret
and
push
sub
fcmovne
loop
scas
mov
test
sbb
mov
jne
ja
push
pop
stos
inc
xchg
jle
add
ret
xchg
lds
sub
add
xor
aas
divl
jbe
subl
dec
mov
out
rcl
mov
jne
mov
out
pop
or
dec
inc
and
int
xchg
pop
leave
js
jne
or
ja
cmc
adc
add
ja
repz
sbb
sarb
adc
fwait
jmp
xor
inc
lods
jl
int3
push
stos
cmp
adc
stc
push
mov
xchg
add
push
in
xchg
stos
xchg
mov
mov
sub
adc
loop
xor
lods
arpl
sbb
pop
jne
dec
lods
inc
bound
mov
jae
std
or
dec
push
fwait
sub
or
xor
sahf
hlt
les
imul
int3
sub
out
js
leave
fisttpl
mov
xchg
les
sbbl
or
lods
jle
pop
pusha
js
orl
repnz
inc
mov
rolb
inc
jns
ror
dec
clc
js
cmp
dec
jecxz
or
adc
pop
xchg
cmp
dec
sbb
dec
push
adc
pusha
mov
cmp
je
sbb
cmp
fcompl
adc
adc
and
js
loopne
jecxz
dec
mov
fldt
or
mov
jge
sbb
cmp
xlat
or
popa
mov
and
sbb
cmpb
in
cltd
adc
push
in
sbb
popa
mov
lods
out
and
sbb
jnp
pop
cld
out
lods
and
jns
jb
jecxz
lcall
push
xchg
xor
lret
sahf
pop
push
adc
test
dec
das
insb
mov
icebp
lods
inc
sub
xor
jp
imul
repnz
inc
xchg
xchg
or
outsl
roll
aam
stos
push
lods
sub
outsb
adc
andb
ljmp
cmp
cmp
scas
adc
je
out
mov
and
and
jno
in
sbb
sbb
ret
mov
in
inc
cmpsb
pop
out
push
cmp
shlb
adc
scas
adc
popf
mov
jo
mov
dec
sbb
jl
push
fidivrs
and
jbe
mov
sub
jae
and
jecxz
loopne
je
into
out
insl
cmp
push
push
pop
stc
adc
add
ficomps
dec
pop
fidivrs
xchg
sahf
inc
mov
xor
adc
adc
lods
gs
jmp
xor
pop
stos
into
lods
add
add
and
or
dec
mov
jmp
sti
imul
stos
std
jne
sarb
inc
aaa
sbbl
lahf
fcomp
add
out
adc
push
je
imul
sbb
mov
enter
adc
pop
adc
jo
aad
js
xchg
stos
je
dec
test
data16
jae
jge
jge
or
jno
push
inc
enter
jnp
xchg
ds
mov
mov
cmp
xchg
out
xor
cli
add
or
cmpb
and
bnd
add
add
add
jmp
add
push
pop
cmp
push
mov
add
test
mov
xor
mov
jmp
xor
dec
jno
jle
cmp
mov
push
pop
mov
pop
mov
cmp
mov
mov
cmp
mov
push
pop
xor
mov
pop
cmp
jmp
jno
lea
push
pop
xor
xor
not
ror
cmp
inc
cmp
push
pop
jnp
push
pop
ja
jp
jns
jmp
not
jne
ja
inc
xor
mov
cmp
jne
push
jmp
mov
mov
jge
sub
lea
lea
xor
jnp
jo
mov
push
pop
lea
test
sub
mov
jmp
jmp
jns
push
pop
cmp
cmp
lea
and
inc
jno
dec
sub
cmp
push
pop
mov
push
pop
mov
mov
js
push
pop
mov
mov
ja
mov
jne
cmp
mov
jmp
mov
push
pop
mov
mov
xor
add
mov
cmp
not
mov
jl
mov
mov
push
pop
je
cmp
jle
sub
xor
jnp
cmp
push
pop
cmp
not
dec
and
sub
push
pop
lea
mov
test
mov
inc
cmp
test
mov
xor
jmp
lea
push
pop
lea
mov
lea
push
pop
jp
sub
mov
mov
add
push
pop
lea
sub
mov
pop
push
pop
cmp
add
push
pop
xor
jne
cmp
push
pop
xor
push
pop
mov
jg
push
pop
mov
jmp
jg
sub
mov
mov
add
push
pop
ret
jmp
mov
mov
push
pop
mov
mov
push
pop
mov
push
pop
jne
and
sub
not
sub
mov
mov
add
test
dec
push
pop
push
pop
ja
add
test
mov
mov
not
mov
sub
sub
mov
mov
add
sub
cmp
push
pop
jge
jnp
not
call
mov
mov
push
pop
add
sub
push
pop
pop
cmp
sub
mov
mov
add
xor
not
cmp
jae
cmp
jmp
lea
push
pop
mov
test
xor
cmp
push
pop
test
cmp
push
pop
cmp
xor
mov
xor
jg
mov
lea
mov
jo
jp
sub
mov
mov
add
cmp
test
mov
sub
xor
inc
dec
xor
cmp
push
pop
xor
cmp
jmp
push
pop
add
cmp
push
pop
push
pop
push
pop
mov
dec
cmp
push
pop
mov
push
pop
push
pop
mov
not
mov
jmp
push
pop
push
mov
add
mov
dec
mov
dec
mov
push
pop
push
pop
xor
push
sub
mov
mov
add
cmp
lea
push
pop
sub
cmp
push
pop
push
jmp
push
pop
sub
mov
mov
add
xor
jmp
jae
push
pop
add
cmp
push
pop
mov
sub
cmp
mov
mov
jb
jmp
sub
cmp
add
jnp
test
add
xor
xor
xor
mov
push
mov
jmp
mov
mov
lahf
inc
call
addl
add
add
dec
jmp
add
add
in
jecxz
mov
sbb
bound
inc
inc
xchg
out
test
add
bound
push
inc
xchg
sti
xchg
pop
push
sbb
jge
add
add
mov
pop
add
jge
dec
ffreep
ret
dec
incl
add
mov
add
cmp
sbb
or
push
mov
or
cmp
sbb
adc
pop
movsl
add
lods
add
add
fldenv
add
add
incl
pop
pop
pop
sbb
out
inc
add
add
mov
add
faddl
add
mov
add
mov
out
sub
fs
add
out
mov
cli
sahf
adc
out
sbb
and
or
hlt
xlat
pop
in
mov
mov
sub
cltd
mov
test
incb
test
mov
and
jnp
fadds
fmull
rorb
or
and
jg
js
addl
push
push
cmp
sub
mov
fwait
ret
iret
test
push
movsl
mov
pop
sarl
sub
jl
xchg
xchg
mov
je
push
inc
imul
xchg
sbb
sub
xor
cs
mov
jecxz
shrb
mov
jp
call
fistpll
in
or
add
aaa
bound
xchg
jne
pop
or
fisttps
das
sub
pop
adc
dec
sub
jl
and
repz
sub
inc
test
jg
addb
add
or
fldt
pop
mov
fsubl
add
pop
xor
add
ja
hlt
test
jns
push
test
call
add
add
mov
sub
mov
bound
add
jns
in
add
add
jbe
mov
adc
or
je
andb
pop
add
add
pop
or
pop
incl
add
pop
add
push
mov
add
add
sbb
sub
or
add
dec
sub
and
add
jmp
mov
cmp
sub
test
shrb
mov
stos
das
sbb
sar
add
daa
adc
stos
fdivr
cmp
test
lds
or
and
dec
mov
pusha
dec
in
jnp
ljmp
mov
add
jmp
mov
pusha
xchg
int3
test
sub
jmp
ja
push
mov
jnp
ljmp
mov
or
jmp
mov
test
mov
sbb
jo
inc
mov
add
xor
ljmp
mov
adc
jmp
mov
mov
adc
jmp
add
pop
sbb
cmpsl
add
lods
test
ljmp
mov
orl
sbb
test
sub
mov
sbb
sub
inc
mov
lods
shlb
sbb
out
inc
mov
addl
sbb
test
sub
jmp
ja
inc
sbb
das
inc
fidivs
add
sbb
les
jmp
subl
lods
aam
lods
aam
ja
inc
sti
sar
add
push
sbb
ljmp
mov
push
pop
out
lcall
fdivs
mov
xchg
ljmp
cmp
jmp
pop
sub
inc
xchg
push
sbb
push
sbb
fsubs
jnp
ljmp
sub
andl
sbb
je
pop
ljmp
faddl
xchg
insb
add
add
add
add
add
jmp
test
jmp
inc
mov
mov
pop
inc
mov
sbb
mov
in
add
cld
add
mov
add
imul
sbb
test
inc
mov
sbb
jg
dec
add
xorl
pusha
sub
add
add
and
faddl
add
cld
popa
and
add
add
faddl
add
jo
add
jle
mov
add
add
add
add
jne
add
test
scas
in
push
addl
mov
sub
and
faddl
add
cld
popa
test
ljmp
sub
test
xor
sbb
jns
sbb
bound
sub
dec
in
mov
xchg
lock
or
mov
dec
xchg
pop
xchg
inc
mov
test
in
mov
mov
add
add
mov
jns
adc
loopne
call
sbb
push
incb
clc
mov
mov
inc
mov
pop
mov
jmp
lock
inc
jnp
ljmp
movsl
testb
ljmp
pop
pusha
test
test
inc
mov
mov
imul
mov
mov
dec
jmp
fdivs
mov
inc
mov
mov
ljmp
mov
mov
ljmp
add
sbb
test
ljmp
mov
aad
cwtl
ljmp
sub
add
mov
or
add
test
inc
mov
std
jae
ljmp
mov
mov
cmc
leave
xchg
sti
cmpsl
repnz
add
jl
jmp
clc
sub
jns
call
sbb
mov
cld
jge
or
testl
mov
add
cli
stos
jne
pop
adc
sbb
jmp
add
call
or
outsb
or
sub
mov
add
jg
add
sarb
or
outsb
imul
mov
add
push
ja
je
jmp
add
daa
jnp
mov
sbb
cli
daa
aaa
int
xlat
lods
xorl
xchg
ljmp
std
jae
ljmp
mov
mov
cmc
leave
xchg
add
ljmp
subl
mov
sbb
xchg
test
inc
mov
add
xlat
jae
pop
fisubl
jnp
mov
sbb
cli
daa
aaa
int
xlat
clc
mov
add
inc
leave
cmpb
mov
shlb
add
rolb
add
orl
jmp
cmpl
jg
cmp
jmp
ljmp
adc
nop
mov
sbb
aam
inc
mov
add
add
or
inc
mov
add
sub
jmp
add
test
std
jge
inc
mov
scas
cmpsl
dec
daa
das
ret
push
dec
test
adc
jns
test
int3
inc
test
lret
ja
jns
call
test
add
aas
cmp
xchg
add
sbb
mov
test
arpl
push
pusha
adc
sbb
add
mov
dec
push
scas
inc
mov
mov
gs
aad
jge
or
pusha
stos
push
scas
add
test
add
add
sbbl
std
insl
sbb
lods
movsb
lahf
xorl
ja
push
cmp
inc
add
jnp
mov
sbb
push
call
mov
pusha
mov
and
sub
sbb
movsb
jmp
push
mov
dec
inc
mov
jge
lods
add
std
test
std
mov
lods
add
std
test
std
mov
sbb
sbb
les
mov
in
sub
sub
add
sub
sub
xor
ret
adc
decl
add
pop
add
mov
add
ljmp
das
add
mov
add
incl
xor
add
xor
add
dec
xor
add
xor
add
xor
add
out
xor
add
inc
add
incl
add
add
jnp
add
pushl
add
mov
inc
add
jnp
add
nop
inc
add
imul
insb
add
add
mov
add
jmp
add
add
add
adc
add
es
add
ss
add
inc
das
add
pop
das
add
imul
add
add
das
add
cwtl
das
add
add
add
movsl
add
scas
add
mov
add
jmp
add
add
add
adc
add
es
add
ss
add
inc
das
add
pop
das
add
imul
add
add
das
add
cwtl
das
add
add
add
add
inc
imul
inc
outsl
insl
bound
gs
outsb
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
inc
jb
popa
je
inc
outsl
outsb
je
add
popa
je
dec
inc
push
add
add
gs
je
push
arpl
outsb
add
add
gs
je
push
outsl
insb
imul
or
inc
gs
gs
arpl
popa
jo
add
add
je
imul
inc
gs
gs
inc
js
outsb
je
outsl
imul
or
inc
gs
gs
dec
gs
imul
push
popa
je
insb
je
or
dec
popa
jns
jne
add
add
je
imul
push
gs
arpl
outsb
add
add
jb
popa
insb
imul
arpl
gs
gs
xor
cs
insb
add
das
add
push
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
add
add
ljmp
add
push
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
add
add
adc
inc
gs
popa
jae
inc
jb
outsl
jb
adc
inc
gs
jb
arpl
fs
jae
add
add
fs
imul
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
adc
popa
insb
inc
jb
add
add
popa
insb
push
gs
insb
insb
outsl
arpl
pop
add
je
jne
inc
bound
push
je
imul
push
imul
outsl
dec
jne
je
inc
jns
add
gs
xor
fs
insb
add
add
lret
add
xor
add
xor
add
xor
add
add
and
add
das
xor
add
xor
add
add
pop
xor
add
add
jp
add
mov
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sub
add
xor
add
add
add
xor
add
add
jnp
add
mov
add
popf
xor
add
xor
add
add
add
add
lret
add
xor
add
xor
add
xor
add
add
and
add
das
xor
add
xor
add
add
pop
xor
add
add
jp
add
mov
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sub
add
xor
add
add
add
xor
add
add
jnp
add
mov
add
popf
xor
add
xor
add
add
add
add
imul
add
add
arpl
insb
addr16
jne
je
outsb
add
add
gs
je
inc
imul
jb
insl
push
add
inc
jb
popa
je
push
imul
push
add
je
outsl
jns
imul
add
jo
je
push
popa
addr16
add
add
popa
bound
imul
add
fs
imul
add
fs
popa
imul
outsb
jne
inc
imul
gs
arpl
push
add
add
outsb
fs
imul
and
inc
gs
insb
addr16
je
insb
dec
inc
add
inc
insb
addr16
je
insl
add
add
je
gs
popa
addr16
add
add
je
jns
inc
outsl
insb
outsl
jb
sub
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
je
imul
add
je
imul
outsb
addr16
add
add
je
imul
arpl
add
je
imul
js
dec
outsb
addr16
push
add
insb
addr16
jne
je
outsb
inc
push
add
add
insb
insb
push
imul
dec
outsl
popa
fs
imul
add
fs
arpl
push
add
add
fs
je
imul
dec
gs
popa
addr16
outsl
js
add
add
jae
push
jne
je
gs
popa
add
add
outsb
fs
gs
popa
addr16
add
inc
outsl
arpl
add
add
je
imul
push
gs
imul
outsb
addr16
add
add
je
imul
js
push
add
add
outsl
ja
imul
add
outsb
jae
popa
je
dec
gs
popa
add
add
jo
imul
fs
jo
xor
cs
insb
add
xor
add
add
push
xor
add
add
jne
add
xchg
add
xor
add
xor
add
xor
add
add
add
xor
add
add
push
xor
add
add
jne
add
xchg
add
xor
add
xor
add
xor
add
add
add
inc
gs
jae
jb
popa
insl
gs
add
inc
insb
outsl
jae
dec
gs
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
push
gs
gs
gs
push
popa
insb
jne
push
add
push
gs
outsb
jne
dec
gs
js
add
push
gs
outsb
jne
push
popa
insb
jne
push
add
push
gs
jo
outsb
dec
gs
js
add
gs
jne
jb
dec
outsb
outsw
dec
gs
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
push
gs
gs
popa
insb
jne
inc
js
add
fs
insb
cs
insb
add
add
mov
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jbe
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
insl
cmp
add
add
cmpsb
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
ja
add
cmpl
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
outsl
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
inc
cmp
add
js
add
mov
add
sarl
add
cmp
add
and
add
aas
add
pop
add
outsl
add
mov
add
mov
add
int3
add
in
add
add
add
sbb
add
cmp
add
pop
aas
add
imul
add
cltd
aas
add
scas
aas
add
lds
add
jecxz
add
add
add
inc
add
cs
add
cmp
add
add
js
add
xchg
inc
add
lods
inc
add
mov
add
ret
add
inc
add
aam
add
fldl
add
inc
add
icebp
inc
add
sti
inc
add
add
inc
add
sbb
add
inc
add
cmp
add
add
add
add
mov
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jbe
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
insl
cmp
add
add
cmpsb
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
ja
add
cmpl
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
outsl
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
inc
cmp
add
js
add
mov
add
sarl
add
cmp
add
and
add
aas
add
pop
add
outsl
add
mov
add
mov
add
int3
add
in
add
add
add
sbb
add
cmp
add
pop
aas
add
imul
add
cltd
aas
add
scas
aas
add
lds
add
jecxz
add
add
add
inc
add
cs
add
cmp
add
add
js
add
xchg
inc
add
lods
inc
add
mov
add
ret
add
inc
add
aam
add
fldl
add
inc
add
icebp
inc
add
sti
inc
add
add
inc
add
sbb
add
inc
add
cmp
add
add
add
inc
bound
jb
popa
imul
outsb
je
dec
add
push
jb
outsb
je
dec
add
jo
imul
gs
insl
outsl
jbe
add
dec
je
fs
jae
push
jb
jbe
insb
gs
outsl
imul
dec
add
inc
insb
outsl
jae
add
dec
je
jb
popa
je
inc
jbe
outsb
je
dec
add
inc
jb
popa
je
inc
imul
inc
gs
popa
jns
js
arpl
imul
je
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
inc
imul
inc
imul
je
imul
je
jae
outsl
outsb
je
outsl
insb
inc
imul
dec
outsl
popa
fs
jb
jbe
jb
push
add
dec
jo
outsb
inc
imul
dec
jo
outsb
dec
gs
push
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
push
add
dec
jo
outsb
push
jns
bound
imul
bound
arpl
add
push
jne
jb
inc
je
jb
bound
gs
imul
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
push
add
dec
je
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
pop
add
push
jne
jb
push
jns
bound
imul
bound
arpl
add
push
jne
jb
push
jns
je
insl
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
dec
je
jne
jb
push
jns
je
insl
push
imul
je
jne
jb
push
popa
insb
jne
dec
gs
pusha
add
push
jne
jb
push
imul
gs
outsl
jb
add
dec
je
jne
jb
push
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
push
gs
fs
imul
push
gs
jbe
outsb
je
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
push
gs
push
inc
js
arpl
imul
add
dec
je
push
ja
push
jns
je
insl
add
dec
je
gs
imul
outsl
arpl
jae
push
gs
imul
jb
popa
add
dec
je
popa
imul
je
jo
gs
bound
arpl
push
dec
je
popa
imul
insb
gs
bound
arpl
add
push
jb
je
inc
imul
outsl
jb
add
push
je
inc
fs
arpl
jae
inc
insb
insb
outsl
ja
fs
arpl
outsb
add
insb
inc
fs
arpl
outsl
add
insb
inc
fs
jae
push
jb
jbe
insb
gs
push
je
inc
insb
insb
outsl
arpl
gs
gs
jo
jno
push
je
inc
outsb
jae
push
je
imul
imul
jb
outsb
add
push
je
inc
insb
gs
jb
imul
insb
inc
outsl
insl
jo
je
inc
jb
xor
add
je
inc
outsl
jo
push
imul
inc
jb
popa
je
inc
arpl
add
insb
inc
jb
popa
je
push
arpl
imul
imul
add
insb
inc
jb
popa
je
push
jae
jb
push
add
push
je
inc
arpl
jo
gs
inc
jne
data16
jns
push
je
inc
gs
gs
inc
insb
gs
outsb
je
outsb
gs
arpl
insb
add
push
je
inc
outsl
jae
popa
je
dec
popa
insl
gs
outsl
dec
je
popa
je
dec
popa
insl
gs
push
add
push
je
inc
outsb
jne
gs
je
inc
outsb
gs
arpl
insb
gs
imul
insb
popa
jns
outsb
add
push
je
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
jge
push
je
inc
imul
popa
add
push
je
inc
imul
imul
insb
inc
outsl
jb
popa
je
gs
popa
add
je
inc
jb
gs
gs
jo
addl
jb
gs
outsb
imul
jb
outsb
add
je
dec
outsb
imul
jb
outsb
add
je
dec
outsb
imul
inc
imul
push
je
dec
outsb
imul
inc
outsb
gs
arpl
insb
add
dec
outsb
imul
push
imul
dec
outsb
imul
gs
je
imul
je
dec
outsb
jae
jb
inc
insb
gs
outsb
je
outsb
gs
arpl
insb
add
dec
outsb
addr16
push
gs
imul
add
dec
outsb
addr16
push
arpl
imul
imul
add
insb
dec
outsb
addr16
push
imul
dec
outsl
arpl
push
imul
jae
gs
push
imul
je
dec
outsl
outsl
imul
insb
gs
outsb
je
outsb
gs
arpl
insb
add
dec
jne
je
inc
jns
gs
outsl
push
outsb
imul
mov
push
je
dec
gs
arpl
imul
je
popl
push
je
dec
outsl
jb
popa
insb
imul
gs
push
popa
jb
insl
jae
nop
add
insb
dec
jne
bound
dec
push
gs
imul
insb
dec
gs
push
outsl
push
outsb
imul
xchg
add
insb
push
jb
imul
arpl
gs
je
imul
je
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
arpl
add
insb
push
jne
jb
push
imul
insb
jne
jae
xchg
add
insb
push
popa
imul
jne
add
push
gs
imul
insb
push
gs
popa
arpl
arpl
imul
imul
add
insb
push
gs
jb
jne
push
arpl
imul
imul
add
insb
push
imul
add
push
jne
inc
jne
push
jns
imul
push
jns
je
insl
push
imul
arpl
push
imul
je
push
imul
fs
outsl
push
imul
je
push
imul
insl
gs
imul
add
insb
push
outsb
push
gs
js
gs
imul
gs
lahf
add
insb
push
outsb
imul
jb
outsb
addr16
outsl
inc
outsb
jae
push
je
imul
je
push
outsb
imul
dec
jne
je
inc
jns
gs
add
push
outsb
imul
dec
gs
dec
add
push
outsb
ja
outsb
add
push
jo
popa
jae
push
outsb
imul
jb
outsb
add
je
push
popa
insb
imul
jbe
push
arpl
imul
imul
add
insb
push
popa
insb
imul
je
inc
gs
jb
jo
outsl
jb
cmpsb
add
insb
push
jb
je
push
imul
insb
jne
add
imul
jae
jo
imul
ja
jae
insl
jo
stos
add
jae
jo
add
insb
outsb
add
arpl
add
insb
imul
insb
insb
insl
jne
add
insb
jb
insl
add
insb
insb
imul
push
add
jb
arpl
add
jae
arpl
add
insb
ja
add
jae
jo
add
gs
insb
xor
cs
insb
add
add
add
add
pusha
inc
add
add
add
mov
inc
jb
addr16
jne
jb
inc
imul
xor
cs
insb
add
inc
add
loopne
add
hlt
inc
add
add
inc
add
sub
inc
add
push
inc
add
imul
add
inc
add
loopne
add
hlt
inc
add
add
inc
add
sub
inc
add
push
inc
add
imul
add
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
mov
gs
jb
js
inc
insb
popa
outsb
imul
mov
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
mov
popa
jae
dec
gs
inc
jb
add
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
inc
insb
outsl
bound
inc
jb
insl
push
je
gs
insl
add
gs
jae
push
je
dec
gs
je
imul
inc
dec
push
dec
inc
add
imul
inc
push
dec
inc
xor
arpl
arpl
xor
fs
insb
add
add
add
add
add
add
outsl
jo
jb
jns
push
