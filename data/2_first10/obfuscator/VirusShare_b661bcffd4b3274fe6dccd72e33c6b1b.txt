mov
pop
lret
loop
fs
jl
in
push
dec
pop
push
xor
lds
push
aam
scas
mov
sub
push
adc
clc
jae
adc
and
or
cmc
sbb
gs
ret
into
adc
dec
nop
repnz
repz
popf
jg
out
inc
lcall
add
jp
add
test
ficompl
jecxz
xchg
dec
pop
loope
sbb
inc
arpl
ljmp
or
stc
sbb
jo
and
outsb
push
jecxz
rol
outsl
push
xorl
sub
out
xchg
js
fildl
inc
or
enter
ret
jmp
inc
sub
push
mov
sbb
sbbl
xchg
jae
jg
jge
imul
not
idivb
mov
clc
xlat
repnz
stos
scas
test
insb
mov
add
in
pop
subl
mov
dec
jge
adc
adc
push
push
add
lcall
inc
add
or
ss
jnp
lods
dec
movsl
push
out
mov
pushf
mov
das
mov
push
sbb
pop
addr16
lods
push
scas
pop
or
xchg
mov
sub
push
inc
loope
xchg
sub
xchg
dec
mov
add
jbe
outsb
daa
loope
hlt
sub
lret
cmp
cmp
and
stos
pop
add
fisttpl
cmp
nop
mov
lods
sub
gs
mov
add
aam
xor
enter
int3
push
mov
les
jmp
jp
dec
out
lds
or
xchg
cltd
iret
mov
and
ds
or
pop
inc
fists
xchg
out
push
lock
xchg
sub
add
cli
sub
into
std
cltd
mov
mov
inc
inc
push
xor
mov
icebp
sbb
add
dec
arpl
cld
xchg
push
sub
scas
mov
fsubs
and
and
fists
cmpsb
cmp
jo
inc
nop
mov
fisubs
out
daa
pop
pop
push
or
loop
push
popa
std
outsl
std
shlb
fnstsw
ljmp
repz
xor
cmp
mov
test
xchg
lock
decl
iret
pop
mov
fdivs
mov
shrb
push
add
xchg
test
test
iret
pop
mov
cwtl
jo
loop
cltd
je
cmpsl
cmpb
pop
rcr
not
push
and
sbb
xlat
and
xor
fwait
push
and
pop
pushf
pop
adc
inc
add
leave
or
movb
bt
imul
test
call
push
lock
std
std
test
or
cltd
mov
dec
movsb
sbb
daa
imul
push
pop
movsb
ss
and
dec
lea
sbb
subl
lret
loope
sub
test
dec
fwait
shll
add
inc
inc
ss
push
cmpsb
je
fdivrl
fiaddl
cmc
mov
roll
lea
jne
bswap
not
movb
setb
movzbl
setb
push
setp
lea
push
push
movl
movw
call
lea
jbe
adc
sub
or
mov
setb
call
jmp
add
cmp
movzwl
jmp
lea
je
bsr
sub
btc
aam
bts
mov
aam
mov
movzbl
shld
shr
bts
btr
rcr
mov
call
jmp
dec
call
movl
push
bswap
pop
push
lea
pushf
mov
push
movl
call
pushf
lea
je
clc
bt
cmp
pushf
lea
je
jp
test
pusha
pushf
cmp
mov
jmp
lcall
lret
aad
cmp
dec
clc
std
imul
ret
aas
push
inc
cmp
cmp
cmp
ljmp
dec
andb
pusha
jg
pop
jno
adc
dec
push
int3
cmpsl
adc
jns
add
int
xor
jno
subb
out
cmp
loope
add
xlat
xchg
call
sti
test
in
lcall
jbe
cwtl
lds
xchg
mov
xchg
je
adc
cmp
mov
cmpl
sarl
ret
jae
add
mov
aad
in
adc
out
fidivl
adc
loopne
jmp
mov
lret
ja
mov
adc
addr16
mov
mov
dec
mov
or
int3
jg
pop
or
or
push
leave
ret
add
pop
or
neg
or
mov
jne
stos
pop
lcall
pushf
ljmp
add
push
movsl
and
jne
sti
jnp
jno
cmp
mov
pop
push
cs
lcall
mov
adc
pop
test
pushf
push
adc
jae
andl
or
jle
repnz
test
jle
xchg
cmp
or
cwtl
shll
cmpsl
or
pop
dec
clc
cmpsb
sub
cmp
test
out
cmp
cmpsb
shrl
mov
cmpsl
popa
and
adc
lock
pusha
lahf
hlt
mov
dec
lods
push
and
jp
pslld
jecxz
jge
xchg
mov
sub
test
xor
ja
xor
mov
and
test
stos
push
xchg
into
mov
cmp
ja
insl
cmpsb
push
mov
leave
add
mov
or
shrd
pushf
mov
and
mov
or
rol
mov
clc
jmp
test
sub
push
pushf
call
rol
bt
test
stc
sub
pushl
call
pushl
popl
pushl
pushl
pushl
pushl
ret
xchg
pusha
seta
call
push
lea
mov
jmp
pusha
lea
jae
cmp
mov
ror
pusha
mov
stc
rcl
bsr
call
call
pushf
stos
pushf
pushf
pushl
pusha
lea
jmp
lcall
push
add
mov
jb
enter
dec
mov
mull
or
mov
push
add
push
popa
ljmp
popa
nop
xchg
out
aam
mov
insl
xor
movsl
dec
lods
pop
xchg
int3
and
push
xchg
mov
xor
pop
in
popa
cmp
icebp
push
add
nop
lock
mov
mov
pusha
in
or
pop
xchg
cmp
adc
inc
mov
out
in
fistpll
call
test
rol
sbb
adc
xchg
lock
dec
call
mov
in
mov
mov
mov
mov
ret
fnstcw
push
pop
and
and
test
insb
fdivrs
push
xchg
daa
jb
cli
test
jae
icebp
push
jge
jnp
jns
out
sub
notl
shr
add
sbb
jno
ret
jb
inc
jb
enter
lcall
push
xchg
roll
test
dec
jbe
pop
xor
push
mov
dec
dec
mov
cmpl
xorb
sbb
scas
pop
push
icebp
sarb
sar
xchg
add
test
test
mov
jae
pop
inc
cmpsb
jecxz
gs
mov
scas
pushf
imul
or
hlt
jno
lea
pusha
cld
icebp
pop
xor
or
mov
ljmp
cmp
push
sub
mov
sbb
shrl
lods
dec
mov
push
mov
pushf
dec
mov
mov
sub
and
sbb
add
je
outsl
fs
gs
imul
add
add
ds
lcall
push
push
pushl
ret
cmp
pushf
lea
jb
call
movl
pusha
jmp
call
fcmovu
push
mov
lahf
int3
mulb
sar
scas
pop
add
push
add
mov
jns
mov
loop
sahf
shll
xlat
faddl
aad
adc
sbb
and
pop
cltd
pop
sbb
push
or
add
rorl
inc
daa
lea
call
call
push
call
movl
call
out
pusha
mov
hlt
popf
inc
jne
int
stos
test
pop
mov
test
nop
mov
mov
aad
out
jo
dec
call
adc
xchg
mov
pop
mov
imul
shll
jp,pt
jns
jmp
shll
inc
jb
xorl
arpl
loopne
fcoms
push
bswap
mov
bound
stos
push
adc
push
in
add
pop
or
jmp
or
mov
xor
sbb
mulb
subl
mov
lahf
dec
jmp
das
outsl
stos
push
rorb
xlat
mov
xchg
xor
sub
subb
sbb
fucom
jnp
pusha
or
mov
sub
xor
xor
cmpsb
sti
movsb
test
icebp
stos
idiv
xor
sub
leave
push
lret
cmc
mov
fsubrp
sbb
outsb
and
loope
leave
inc
imulb
movsb
into
push
push
xor
pop
sbb
les
subb
pop
imul
sbb
push
mov
psubd
cltd
leave
mov
test
outsb
popa
xchg
mov
sbb
xchg
cmpsb
movb
out
inc
inc
mov
clc
and
inc
mov
xor
loop
loopne
xchg
push
sbb
jbe
rol
pusha
xadd
jmp
pushf
or
call
cmp
pushf
pushf
pusha
xor
sub
cmc
test
call
pusha
lea
jb
pushf
clc
test
jmp
mov
movzbw
call
pushl
pushl
popl
movb
pushl
ret
push
rol
movw
push
xor
movb
not
mov
pushf
push
pushf
dec
stc
cld
cmc
pushw
popfw
pushf
inc
movb
adc
mov
pushl
ret
inc
loope
mov
cltd
inc
cmc
lahf
dec
jge
rolb
xor
mov
push
daa
xchg
mov
stos
sbb
lods
mov
nop
sbb
addb
sub
cs
adc
pop
push
lods
cmpsb
push
call
cmp
jl
movsb
jmp
sbb
cli
in
inc
out
lret
mov
enter
test
in
sti
loopne
popl
lret
stc
cmc
mull
push
push
test
roll
insb
daa
out
shlb
sub
mov
mov
jmp
lea
mov
lea
push
pushl
mov
push
mov
bswap
not
call
jmp
push
lea
jne
cmp
dec
bts
lea
mov
clc
test
cmc
clc
add
test
call
ret
enter
in
test
sbb
ds
inc
inc
or
in
adc
enter
xor
adc
push
and
adc
and
cmp
push
pop
stos
sbb
mov
scas
push
cmpb
cmpsl
cld
stos
fsts
jb
out
scas
out
test
stos
mov
cmp
movb
push
pushf
mov
lea
jb
bt
push
test
pusha
cmp
jmp
jne
gs
xor
fs
insb
add
jecxz
add
cmp
cmpb
call
adc
arpl
jb
lret
push
add
data16
sbb
gs
ret
popfw
shlb
sub
mov
imul
out
adc
dec
pop
inc
jle
jne
outsl
stos
call
xchg
sbb
es
enter
push
stos
jmp
movl
push
pushf
movl
pushf
pushf
push
lea
jmp
push
movl
pushl
lea
jmp
test
cmc
pusha
mov
add
test
clc
cmp
jmp
sub
jg
clc
movzwl
ror
mov
bt
pushf
pushf
clc
add
mov
mov
jmp
xor
inc
mov
adc
jmp
nop
xchg
test
xchg
das
adc
cli
mov
sbb
cli
sub
ljmp
dec
jae
jne
pop
xor
and
fs
xchg
arpl
mov
pushf
inc
mov
iret
leave
je
push
add
pop
or
jb
pop
dec
and
divl
pop
mov
sti
and
xlat
add
sub
divb
ss
dec
cltd
lret
cmpl
stos
out
stc
stc
cmp
push
jmp
shrd
mov
jmp
pusha
pushf
jmp
jae
sub
push
xadd
mov
sub
mov
bt
cmp
call
lea
push
pushf
pusha
call
lea
imul
addr16
cmpsb
sub
inc
test
aaa
mov
mov
gs
movsl
clc
subb
lock
inc
aaa
int3
lcall
enter
out
pop
cli
pop
clc
les
in
and
sbb
xor
or
test
in
adc
js
adc
outsl
mov
add
xor
lods
repnz
sbb
test
mov
or
sub
decb
imul
movsl
sbb
sub
fwait
pop
sub
add
inc
cmc
mov
in
int3
xor
or
fucom
mov
mov
sbb
clc
inc
xchg
sub
clc
js
es
inc
aam
mov
sub
nop
and
aam
dec
and
mov
and
popf
dec
lods
loopne
loopne
mov
arpl
push
and
mov
repnz
loope
xorl
test
add
inc
out
cmc
rorl
neg
xchg
mov
or
in
sub
inc
pop
imul
pop
mov
jecxz
xchg
mulb
stc
insb
lret
mov
push
sub
insb
cmc
or
cmpsb
loopne
push
adc
dec
in
push
or
mov
add
xchg
inc
push
out
adc
xchg
sbb
inc
pop
out
xlat
and
push
int3
pop
sbb
stos
jo
shr
sub
int3
or
xlat
in
test
add
and
adc
xchg
jo
std
lock
call
cmpsb
xlat
in
xchg
add
rclb
fsubrl
gs
mov
aad
adc
mov
daa
adc
pop
fiaddl
rclb
in
xchg
test
movsl
stos
clc
inc
nop
out
push
out
adc
cmpsb
orl
jno
push
mov
ss
movsl
mov
dec
pusha
sarb
icebp
rolb
inc
jecxz
sti
cmp
dec
sbb
or
sub
mov
aaa
pop
iret
jbe
aam
cmpb
enter
mov
cli
fimuls
mov
inc
hlt
mov
fmull
mov
and
mov
iret
fdiv
mov
fcompl
jb
sbb
pop
cwtl
mov
sbb
and
ljmp
sti
enter
fistl
cmpsl
or
or
dec
outsl
mov
mov
pushf
insb
out
int3
out
addr16
fs
and
call
xchg
out
pop
push
pushf
test
aad
fistpl
sbb
outsb
negl
call
add
jbe
sahf
mov
fmuls
daa
in
dec
in
push
mov
adc
stos
sti
mov
data16
push
in
push
dec
xlat
or
mov
in
adc
xchg
gs
adc
xlat
in
push
pop
daa
out
cmpsb
cmpsb
jmp
jl
fstl
in
test
pop
lea
ljmp
adc
dec
mov
jle
push
js
pop
and
in
sbb
xchg
xlat
daa
ljmp
aad
push
push
jne
movsl
mov
and
pop
pop
out
rcl
ljmp
pusha
xchg
lods
push
addr16
out
xchg
add
or
dec
push
lods
sbb
daa
dec
mov
call
fucomi
aaa
xchg
call
jecxz
lret
rolb
cwtl
jl,pn
sub
jecxz
les
outsl
lock
mov
add
cmpsl
add
push
sub
cmp
fdivrs
or
repnz
xchg
in
mov
pusha
mov
mov
leave
xor
mov
addr16
mov
js
imulb
pusha
adc
sub
mov
mov
inc
lock
and
lock
fcomp
cmp
inc
xor
ja
jne
mov
mov
or
mov
es
cwtl
cmp
fcmovbe
mov
mov
aad
out
or
addr16
mul
addb
pop
lods
aad
pop
push
mov
and
es
call
dec
pop
call
mov
adc
push
pusha
xchg
sub
mov
mov
adc
orb
test
mov
mov
inc
push
in
daa
xlat
out
ljmp
mov
dec
push
in
jne
gs
rorb
mov
mov
mov
push
clc
push
in
inc
xlat
xor
ljmp
sbb
movsl
or
lret
mov
inc
nop
pop
pop
aaa
out
out
cmp
xchg
and
dec
cmp
out
mov
mov
call
mov
in
xchg
xlat
mov
inc
inc
fisttpl
inc
cmp
imulb
in
notb
test
sub
xchg
ljmp
fadd
call
test
push
nop
push
push
sub
fdivs
inc
jo
pop
out
add
mov
mov
mov
mov
dec
adc
mov
dec
adc
push
xchg
subl
pop
cmc
insb
inc
in
aad
mov
cmpsb
out
push
mov
call
call
push
call
out
call
and
dec
test
arpl
mov
call
insb
push
iret
movb
or
dec
es
adc
mov
jle
and
mov
dec
cmpsb
pop
dec
pop
aaa
sbb
or
dec
lods
pop
push
sbb
sbb
push
daa
dec
movsb
repz
out
test
push
out
dec
flds
xchg
push
mov
dec
not
cmpsb
mov
inc
mov
or
insb
dec
lock
cmc
mov
ljmp
sub
test
addr16
sub
lret
mov
mov
lods
data16
xchg
dec
call
shlb
call
cmp
push
aad
pop
dec
and
push
pmulhuw
jecxz
js
push
mov
jbe
mov
add
jecxz
aas
loop
ss
push
lds
lods
dec
pop
test
push
push
mov
mov
mov
in
daa
inc
pusha
not
or
jecxz
dec
cwtl
dec
xlat
fs
nop
cwtl
sub
mov
push
push
xchg
xchg
or
push
mov
in
push
xchg
fcoms
paddusb
jecxz
push
cmpsl
rcr
add
mov
inc
xchg
dec
nop
push
gs
pop
sbb
xchg
test
clc
inc
dec
mov
sbb
pop
add
and
pusha
pop
test
out
jo
inc
sbb
test
stos
dec
icebp
in
inc
nop
adc
je
mov
add
rcll
xlat
jae
ljmp
orl
adc
jecxz
mov
xchg
pop
ljmp
in
sub
mov
mov
or
out
mov
push
cmp
test
js
gs
xor
xchg
stos
fcomps
aaa
and
add
fidivrl
inc
dec
adc
or
mov
xlat
ret
inc
adcb
aas
dec
inc
je
nop
outsl
inc
or
push
aad
aad
rolb
inc
mov
int3
es
push
sbb
dec
jbe
add
xchg
sub
out
inc
jne
loop
divb
inc
hlt
fidivl
je
dec
mull
pop
das
inc
int3
pushf
movsl
test
cmp
sbb
mov
inc
cmc
jge
es
pop
cmp
lds
sbb
addr16
and
stos
lock
dec
dec
notl
push
dec
push
ret
out
push
ss
mov
fisttpl
xchg
cwtl
dec
pop
xorps
push
movsl
iret
test
mov
push
iret
lret
inc
dec
iret
sbb
mov
sarl
ficompl
dec
punpckhbw
push
cmpsb
push
mov
pop
out
cwtl
dec
inc
xlat
or
push
fimull
sbb
lret
ret
inc
js
pop
std
dec
push
cs
mov
and
imul
shl
jo
sar
ss
inc
and
gs
fcomp
jne
push
shrb
in
cwtl
outsb
imull
js
call
mov
int3
shufps
test
or
sbb
mov
aaa
adcl
sar
loop
aaa
int3
sti
add
ja
or
filds
jnp
int
mov
jp
fmul
iret
gs
add
lret
add
out
push
pop
out
inc
repz
sti
sar
into
xorl
mov
fwait
mov
cmpsl
mov
dec
inc
or
push
inc
pop
cmp
call
fwait
sub
jae
adc
add
out
or
paddsb
add
inc
and
dec
sub
das
sbb
rclb
sbb
mov
adc
roll
clc
dec
call
push
in
pop
movq
ja
adc
lods
push
cmpsb
xchg
push
cmp
sub
pop
dec
push
sbb
sahf
cmpsb
cmc
insb
xchg
lret
inc
push
dec
sbb
mov
lds
rol
inc
shrl
out
xchg
stos
test
ljmp
dec
test
imul
mov
pop
pop
stos
stos
xchg
mov
aad
aaa
lock
adc
dec
inc
imul
pop
pop
notl
cs
jo
daa
sti
pop
aad
xchg
adc
sbb
mul
jne
lods
jmp
test
xchg
cmp
dec
xor
adc
jmp
int
push
iret
pop
add
xchg
add
out
xchg
sbb
rol
addl
jg
dec
in
dec
out
push
mov
push
loop
xchg
adc
add
scas
out
dec
outsb
call
in
mov
add
jne
loop
imul
add
xchg
or
jg
xchg
lret
fcoms
sbb
aaa
js
daa
mov
mov
lahf
xchg
push
ffreep
out
or
inc
push
cld
mov
pop
pop
push
xchg
and
jg
or
xor
mov
dec
sub
pusha
es
push
push
not
xchg
sub
bound
inc
clc
in
xchg
cmp
mov
xchg
push
push
pop
adc
jg
lahf
rcll
dec
call
jmp
add
or
out
push
test
mov
push
dec
pop
pop
cmp
jo
pusha
pop
sbbb
sbb
jg
outsl
mov
cmpb
sub
rcl
adc
pop
fistps
ja
pushf
shrb
sub
fstpt
push
lock
call
adc
push
adc
int3
push
cmp
xor
mov
pop
je
or
mov
movsb
sbb
int3
sub
cmpl
pop
orl
ja
mov
test
dec
test
xchg
dec
sbb
dec
fstpt
js
test
test
in
out
cmpsl
movsl
imul
lahf
movntq
pop
aad
push
inc
jmp
mov
daa
mov
sub
mov
gs
jp
fistps
loopne
lret
mov
inc
fisubl
enter
ljmp
lcall
pop
xchg
inc
inc
jae
inc
mov
dec
cmp
ljmp
push
dec
sub
inc
repz
and
shll
mov
arpl
cs
test
sti
stc
push
dec
mov
das
lahf
xor
movsl
ret
pop
das
push
pop
add
hlt
lret
jp
imull
sub
aas
dec
cwtl
loopne
addr16
xchg
dec
cmc
in
divl
mov
lahf
xor
cmpsl
pushf
cmpsb
enter
out
bound
roll
mov
loop
jmp
and
sub
adc
add
sarb
add
jmp
dec
ret
mov
dec
sub
inc
aaa
lods
jmp
clc
inc
testl
into
xlat
call
mov
or
jg
call
or
cmpsl
jmp
nop
arpl
clc
push
adc
adc
xchg
lods
xlat
lods
xchg
mov
test
sbb
cvtpi2ps
or
call
dec
and
or
aad
sbb
xor
jmp
mov
adc
test
push
std
ja
add
js
jge
outsb
cwtl
rsm
sub
cmp
testl
nop
push
pop
addr16
mov
push
pop
pop
daa
dec
fdiv
inc
and
aaa
divb
fmuls
insb
cmp
xchg
inc
test
cmp
fwait
lock
pop
jbe
inc
js
sub
nop
mov
test
fbld
mov
xchg
pop
addl
jnp
xchg
sbb
adc
ja
xchg
lcall
divl
loop
dec
nop
jmp
inc
fisubl
out
pop
clc
push
push
mov
clc
push
sbb
int
addr16
out
out
mov
jl
push
call
inc
dec
push
xor
incb
dec
push
out
and
jge
or
ja
repnz
cwtl
cld
arpl
addr16
jb
pop
ret
mov
sysexit
sub
pop
stc
mov
add
test
mov
pop
dec
out
xchg
xchg
dec
cmp
xchg
daa
push
inc
enter
mov
jae
sahf
test
enter
dec
adc
ja
mov
mov
and
arpl
sbb
or
pop
iret
daa
fsubs
test
or
add
ja
lea
enter
pop
faddl
mov
or
jmp
push
xchg
mov
int3
imul
aad
sub
pop
stos
orb
sbb
add
outsl
adcl
or
push
clc
out
xor
xchg
scas
cli
fistl
xchg
dec
ljmp
or
inc
test
xchg
mov
out
sub
push
jnp
pop
pusha
and
jecxz
out
jbe
aaa
cs
dec
lret
sub
dec
aad
dec
dec
adc
mov
push
fcoml
push
loopne
lcall
lock
inc
mov
hlt
cmp
jbe
and
insl
iret
xchg
movsl
jmp
xor
inc
dec
lret
cmpsl
xchg
adc
out
and
sbb
sub
mov
ljmp
dec
es
rorb
mov
in
jae
add
lcall
test
mov
addr16
addr16
sub
jae
xor
daa
push
neg
push
sbb
mov
int3
xchg
add
ret
sbb
in
incl
xchg
pop
sarl
push
xchg
xchg
clc
xchg
adc
inc
sbb
push
push
insb
adc
jle
lods
enter
add
pop
inc
sbb
sbb
push
push
mov
cwtl
xchg
clc
mov
push
push
nop
pop
cmp
or
int3
arpl
icebp
shlb
enter
nop/reserved
jbe
or
stos
test
sbbb
notb
cmc
test
insl
lret
push
clc
sub
xor
cs
pushf
into
mov
pop
mov
or
addl
pop
pop
push
inc
js
xchg
out
jnp
cwtl
mov
mov
testl
out
jnp
mov
lods
rcpps
cmpsl
dec
dec
sub
imul
jg
jecxz
js
xchg
imul
xchg
inc
std
nop
cs
xlat
lock
sbbb
ds
shlb
add
lahf
iret
scas
mov
cs
cmpsl
jo
iret
shlb
push
mov
dec
ja
sbbb
cmp
mov
stos
mov
xchg
stc
mov
cwtl
or
or
or
xor
iret
mov
sbb
xchg
pusha
jg
or
repz
cld
das
mov
pusha
push
out
rol
rolb
inc
xchg
inc
cmpsl
lahf
xor
pop
out
sub
in
gs
adc
add
add
xchg
cmpsl
pusha
fsubr
cltd
jae
mov
pop
pop
rcr
shlb
mov
push
jg
add
imul
ss
sbb
lea
sub
mov
and
mov
jnp
ja
pop
ljmp
and
nop
ljmp
test
mov
aas
add
add
pushl
pop
dec
pusha
dec
push
fsub
stos
cmp
inc
fidivs
out
out
inc
outsl
test
sbb
in
test
pop
subb
test
arpl
pop
lret
cmpsl
and
xor
sarl
cmpsl
mov
dec
out
sub
scas
divl
push
xchg
fistps
clc
into
pop
jo
inc
repz
xchg
scas
xchg
xor
mov
out
jp
das
mov
cmp
lds
cmpsl
syscall
xchg
aad
std
test
lret
roll
sbb
pop
mov
xchg
jl
out
xchg
xor
adc
ja
jbe
mov
dec
xchg
xchg
fidivl
mov
jl
negl
sahf
test
addr16
push
in
repz
sbb
orb
pop
shl
adc
in
clc
jl
mov
xor
push
out
pop
pop
inc
gs
pop
repz
test
js
xlat
test
mov
scas
mov
mov
inc
stos
cmc
jmp
daa
in
in
xchg
cld
push
xlat
imul
pop
jo
cs
xchg
sub
cmpsb
mov
sti
mov
shlb
mov
inc
cmpsb
jl
pop
std
cwtl
xor
push
jae
iret
pop
add
stos
pop
lfs
dec
push
xchg
loopne
push
inc
xor
sahf
rclb
jne
pop
pop
lcall
inc
jnp
dec
xchg
mov
loope
pop
dec
jnp
inc
push
mov
xor
pop
arpl
outsl
out
jp
push
mov
ds
inc
jp
pushf
sbb
and
jae
and
push
sbb
push
mov
lahf
dec
mov
mov
js
add
movsb
out
dec
push
out
popaw
aam
sub
mov
fwait
sub
int
out
mov
mov
dec
mov
cmpsl
or
fcom
jge
pushf
mov
jo
out
mov
dec
icebp
or
icebp
pcmpeqd
testl
xchg
mov
mov
xchg
fsubrs
imul
test
fstp
js
insb
rcrb
call
mov
push
jmp
sub
dec
ja
call
cmpsl
adc
pop
cli
shrb
test
inc
xchg
fnstenv
test
mov
ds
push
xchg
push
insb
pop
push
mov
xlat
mov
lret
pop
cmc
lods
movsl
mov
test
sbb
arpl
jbe
jne
lea
xchg
out
sub
test
gs
dec
in
cmpsb
xchg
jo
movsl
cmc
imul
xchg
push
shrl
arpl
test
inc
push
xchg
mov
imul
cmc
mov
fcom
fdivs
xchg
cmc
lret
aad
xchg
mov
mov
aad
jo
push
cmc
lret
fnstenv
stos
out
out
jo
mov
ja
or
dec
push
in
lret
adc
out
gs
test
push
mov
mov
add
stos
stos
push
xchg
out
push
or
pop
in
test
push
notl
lret
fsts
or
add
ss
push
daa
aad
adc
push
mov
or
push
enter
lcall
insb
push
sub
jmp
call
loop
nop
mov
pop
or
mov
call
ror
adc
xlat
pop
add
lods
stos
call
sub
lock
lods
stos
or
fucom
mov
adc
lahf
repnz
or
push
out
popf
test
in
mov
mov
out
paddw
sub
inc
fwait
popf
jbe
out
inc
stos
xchg
mov
arpl
dec
aad
stos
adc
scas
dec
mov
lcall
lds
jle
jne
push
insl
mov
adc
xchg
dec
mov
call
popf
push
test
mov
loope
mov
lea
dec
lcall
fmul
inc
mov
and
dec
shl
lods
outsl
or
xchg
mov
inc
and
or
push
lods
xchg
leave
movsl
lahf
inc
inc
or
xchg
push
mov
mov
mov
js
data16
jg
shll
mov
call
xchg
xchg
mov
out
clc
popf
adc
pop
jp
or
push
stos
xchg
loope
cmpsb
sub
xchg
lods
mov
std
pop
pop
popf
cmc
imul
notb
test
push
aam
repnz
add
dec
xchg
pop
fs
adc
jne
pop
fadds
jecxz
mov
cld
loop
push
cmp
add
loop
aas
add
addb
bnd
into
test
call
cmp
mov
add
and
pop
xlat
push
out
sbb
loope
cmpsl
fadds
das
cli
mov
popf
xchg
je
xchg
push
enter
mov
into
clc
inc
or
dec
add
clc
pop
pusha
adcb
and
jg
sar
hlt
mov
cmc
push
add
fdiv
nop
jecxz
xchg
fsubs
outsb
call
xchg
imul
add
dec
out
repnz
mov
aas
repnz
in
ret
cmp
fdivr
xchg
mov
out
adc
les
jbe
loop
repnz
jp
sub
pop
in
mov
jle
shl
loop
les
mov
notl
xor
loop
adc
xchg
push
jecxz
xchg
mov
clc
xchg
cli
ret
lock
dec
incb
jp
mov
mov
repnz
ficoml
aas
loop
out
lahf
enter
clc
test
mov
jp
push
hlt
rol
jle
jbe
dec
in
mov
arpl
lret
rcl
xchg
fistl
and
add
pop
out
lods
test
mov
into
mov
mov
bound
andb
add
pushf
lock
mov
mov
adc
or
in
fsubr
ficomps
movsl
out
sub
fldt
inc
mov
inc
jmp
shrb
add
sbb
fdiv
fcoms
insb
inc
xlat
ret
fmull
pushf
popa
inc
pop
add
sti
inc
jbe
pop
jp
cmp
push
or
loop
mov
fcoml
fadd
pop
nop
aam
in
pusha
aad
fcoml
pop
in
loopne
les
xchg
fisubrl
xor
fnstcw
push
and
push
ljmp
repnz
sub
xchg
inc
movb
inc
sbb
mov
xchg
daa
aam
cmpsb
mov
in
das
and
push
xchg
aad
sbb
gs
xor
inc
inc
pop
lcall
sahf
lods
movsl
push
cli
pop
clc
daa
cli
dec
mov
out
int
fcmovnu
adc
stos
mov
shrb
pop
cld
push
dec
jae
icebp
mov
out
fsub
add
xchg
xor
je
out
mov
test
out
cmp
push
movsb
aam
fcoms
adc
sub
pop
out
mov
cmpsb
in
idivl
add
sbb
add
lock
js
faddl
sub
xor
test
push
push
push
add
inc
add
xchg
lods
repnz
test
jbe
dec
add
pushf
add
call
test
inc
scas
jns
in
nop
loope
std
pop
or
dec
inc
cwtl
rcl
test
dec
inc
cld
iret
mov
xor
lcall
les
fcoml
sahf
hlt
adc
jecxz
fsubrp
clc
xchg
incb
pushf
outsl
sbb
add
pop
push
leave
adc
mov
lods
loopne
fisubl
xlat
leave
mov
xchg
out
adcl
push
jbe
cmp
add
jb
rolb
loop
sbb
int
lods
xchg
adc
nop
loop
imul
mov
repnz
jnp
sub
dec
int3
jmp
xchg
and
repnz
lret
mov
mov
cs
nop
pop
adc
loopne
das
jp
push
js
pop
push
mov
push
gs
in
dec
lods
inc
loop
sbb
int
out
sbb
fldt
dec
mov
fsubr
or
sbb
pop
pop
mov
mov
sub
fidivs
inc
mov
pop
fdiv
fmuls
push
mov
repnz
in
cwtl
in
cmp
pop
insl
push
add
ljmp
sbb
mov
pop
sar
add
sub
mov
push
repnz
outsl
lods
pop
lahf
std
mov
mov
ljmp
test
sub
mov
xchg
mov
jb
loopne
out
add
je
xor
cmpsl
in
dec
mov
es
mov
and
inc
lock
ret
fucomp
xlat
adc
sahf
aaa
sbb
cli
ret
mov
sahf
adc
repnz
xchg
xchg
or
add
in
lcall
inc
out
pop
adc
mov
pop
sbbl
iret
test
lods
inc
xchg
mov
pop
mov
mov
pop
movsl
push
fcomps
add
xor
xor
scas
inc
xchg
sbb
dec
jecxz
sub
loop
aam
sbb
xchg
outsb
nop
lods
add
jle
hlt
clc
mov
cmp
xor
fdivrs
in
sbb
push
fsts
cmp
adc
mov
adc
fdivr
fnstcw
adc
or
dec
mov
dec
cmp
std
ret
mov
clc
cmpsb
mov
sub
mov
rolb
mov
fistl
mov
les
loop
xor
and
mov
out
and
cmp
ret
fmul
adc
mov
data16
clc
sub
xor
jmp
jl
repnz
mov
cmpsb
inc
push
pause
jae
scas
mov
jno
xor
xor
mov
fdivs
add
mov
fucomp
xchg
repnz
popa
dec
shlb
cli
test
push
add
fistl
ljmp
rclb
iret
movb
repnz
dec
push
add
pop
fmul
mov
loopne
push
pop
mov
mov
outsb
les
sbb
lods
mov
jo
xchg
in
inc
jbe
hlt
clc
cmpl
loope
insb
lods
pushf
jbe
data16
repnz
imul
loop
or
fisubrl
pop
jle
fsubs
clc
nop
ss
cmp
in
sub
cli
int3
push
pop
loop
fidivrl
fdivl
push
dec
jo
test
ljmp
jp
repnz
into
jp
lock
clc
add
mov
xor
nop
mov
lods
int3
xor
mov
js
mull
cwtl
mov
shll
jns
test
mov
je
into
mov
sbb
repnz
repnz
dec
inc
jp
sub
mov
sbb
fcomi
push
repnz
fcomps
aaa
sbb
mov
jb
lcall
jl
stos
fsubs
xacquire
mov
xchg
aam
gs
js
pop
pop
mov
rcrl
stos
lods
dec
out
adc
mov
das
lods
xchg
xchg
or
xor
jnp
xchg
jns
call
jno
xchg
clc
xchg
je
xchg
out
in
loopne
rclb
clc
add
fidivl
fdiv
push
lret
push
lods
or
ljmp
pop
repnz
lret
xchg
sub
ljmp
cmp
loop
dec
and
xchg
adcb
sub
fs
push
pushf
dec
cld
movsb
add
ljmp
mov
lds
vpshad
add
sbb
loopne
in
repnz
ficoml
push
xor
push
xchg
dec
enter
fdiv
leave
add
pop
repnz
mov
inc
leave
jle
shrb
lcall
fisttpl
jbe
xchg
mov
loop
jnp
repnz
ljmp
mov
xor
mov
lahf
adc
pop
fdivr
idivl
jp
jbe
push
or
clc
push
lcall
cli
pop
in
push
rcrl
xor
nop
add
adcl
aad
bnd
ss
nop
lcall
lods
jl
inc
xchg
sahf
push
gs
clc
dec
xchg
ret
pop
sbb
mov
arpl
pop
adc
sahf
sbb
sub
mov
xchg
fidivrl
cld
mov
clc
in
jl
jbe
adc
mov
pop
incb
fisubrl
stos
mov
sub
insl
jecxz
aad
push
int
mov
nop
add
and
nop
pushf
icebp
nop
inc
and
pushf
ja
test
in
or
ffree
inc
jae
mov
add
test
jecxz
in
repnz
push
ret
xchg
sti
mov
dec
rclb
mov
cld
into
cmp
enter
iret
add
add
push
mov
lahf
into
cwtl
and
fdivs
xchg
out
add
mov
mov
lods
inc
int
test
mov
jmp
clc
div
out
outsb
shrl
insl
pusha
fdiv
fs
dec
mov
nop
or
ljmp
and
test
rorl
xor
fsub
pushf
int3
loopne
nop
fadd
add
loope
call
ljmp
mov
int3
lcall
inc
fidivrs
mov
popf
int3
mov
icebp
fdivrl
out
xor
push
inc
add
ret
jle
icebp
xor
xor
sub
fiadds
iret
into
xchg
and
dec
cmpsb
nop
daa
mov
movsb
push
in
xchg
fnstsw
pop
mov
mov
push
dec
aad
lock
jg
cld
cmp
into
and
inc
xchg
mov
mov
mov
sbb
cld
roll
int
push
lcall
cmp
repnz
lahf
or
iret
push
lock
mov
fidivrs
pop
add
dec
repz
inc
fcomps
cwtl
lock
or
pushf
push
dec
lret
xlat
xchg
je
scas
cmpsl
imul
ja
hlt
sbb
repnz
fadd
repz
jb
jne
dec
call
xor
jge
lods
daa
jbe
push
fisttps
jle
sub
sbb
mov
pop
loop
ret
test
mov
les
sti
imul
ljmp
dec
fs
mov
lcall
notb
xchg
push
loope
jmp
enter
lcall
lods
int
int3
or
jmp
js
aam
inc
ljmp
in
je
jne
repnz
pushf
add
jle
cmpsb
mov
mov
int3
mov
cmpl
sub
xchg
repnz
ret
in
je
xchg
sbb
mov
leave
imul
cmpsl
lock
mov
lock
cmp
orb
aad
ret
mov
sub
push
xor
and
push
fsub
call
int3
mov
sbb
je
mov
sub
inc
in
sub
inc
push
lds
aaa
or
sbbb
rorb
push
rol
cmc
dec
ret
subb
inc
push
loop
ret
int3
loope
aam
test
into
in
ret
dec
push
call
or
ret
cmp
xor
mov
add
ret
test
in
dec
lods
and
rcl
xor
loope
push
sub
xchg
mov
add
fabs
or
adc
dec
int3
ret
inc
adc
dec
in
add
sub
pushf
ds
out
cmp
fistpl
leave
dec
in
inc
stos
mov
jle
cwtl
and
add
inc
insb
ret
inc
dec
push
lret
fs
and
dec
xor
push
push
mov
je
pop
sub
xchg
inc
lea
inc
cmc
cmp
test
mov
cmp
inc
mov
stos
mov
iret
and
nop
mov
adc
dec
push
iret
or
and
mov
push
dec
cmpsb
es
jns
stos
lcall
cmp
and
mov
aaa
aad
push
sbb
out
and
into
mov
xor
lahf
push
jo
mov
ljmp
stc
stos
inc
fcomps
leave
loop
and
jl
rol
icebp
pop
leave
cmp
mov
cmp
loope
add
dec
call
rcll
xlat
cmc
adcb
rorl
lret
int3
ret
test
in
int
inc
insl
insb
ret
mov
lods
mov
fst
mov
mov
out
and
add
dec
aad
sub
lret
pop
aam
mov
mov
das
xor
jecxz
fadd
adc
lods
sahf
mov
cmpb
mov
hlt
dec
in
fcomp
mov
fsubrs
and
xchg
mov
fstpt
push
mov
xchg
xor
aam
out
mov
rclb
and
xchg
aam
pop
testl
nop
inc
loope
pop
dec
dec
mov
and
test
icebp
cmp
mov
cmp
test
loopne
pusha
fimull
lds
iret
stos
iret
test
outsl
mov
loopne
cmc
sub
fcmovnu
aam
xchg
jle
in
test
jle
or
mov
jecxz
in
les
push
add
sti
mov
dec
mov
adc
lea
xchg
inc
in
push
pop
call
adc
loopne
test
fmul
nop
loope
mov
mov
fldenv
pop
cmp
xchg
cmpsl
inc
repnz
rcrb
mov
sub
mov
sub
push
dec
cltd
test
in
cmp
mov
sub
das
ja
or
push
mov
aam
mov
sub
pop
imul
scas
push
out
pop
add
and
aad
mov
mov
xchg
dec
cltd
ss
ja
cwtl
push
rcll
cltd
mov
les
rclb
data16
test
mov
or
std
cmpsl
or
add
pop
movsl
lret
std
call
shll
pushf
movsl
stos
mov
fstps
sbb
dec
add
ja
xchg
push
pop
test
dec
mov
pop
sub
sub
out
pop
dec
cltd
stc
insb
mov
xchg
or
mov
inc
jecxz
add
lea
inc
mov
cltd
jo
movsl
mov
push
fwait
xchg
ss
mov
test
cmp
xchg
sub
insb
jo
es
dec
pop
mov
call
pop
in
sub
sub
push
or
in
or
fistl
pop
adc
movsl
adc
add
fmul
js
mov
in
sbb
dec
fsubs
rcll
pop
mov
js
movsb
in
sbb
xor
ljmp
cwtl
lret
mov
in
and
mov
adc
xchg
adc
test
rorb
sub
into
call
loopne
repz
popa
mov
fists
scas
es
sub
fcomip
mov
mov
aad
loop
push
stc
call
cmpsb
or
fcomps
mov
test
clc
lea
aad
testb
jbe
data16
ss
xchg
js
xlat
into
gs
repz
cmpsl
or
mov
std
xchg
lret
sbbl
push
out
cmp
mov
das
arpl
jno
adc
notb
orb
js
sub
or
dec
jbe
push
pop
cmp
or
lds
push
xchg
pop
ja
pop
scas
dec
push
aas
pop
in
in
inc
lea
out
ja
sbb
hlt
or
pop
add
movsb
in
jnp
mov
add
lahf
xchg
shll
xor
rclb
pop
pop
pushf
arpl
cld
leave
addr16
ror
mov
inc
sarb
mov
fsubl
nop
scas
lahf
mov
out
fwait
lds
iret
lahf
fiaddl
insb
dec
cmpsl
ret
fbld
orb
push
int
in
adc
mov
sti
pop
inc
call
out
xor
aas
out
mov
jecxz
out
fimull
call
xlat
add
mov
xchg
inc
aam
js
push
mov
mov
nop
dec
lret
mov
enter
and
sub
jo
mov
cmp
iret
or
push
pop
and
out
pop
insb
and
jo
push
div
js
jl
pop
add
pop
addr16
and
aam
push
pop
jo
pusha
and
rcrb
dec
in
mov
in
insl
mov
je
loopne
cld
add
cwtl
pushf
fs
pop
movsb
fidivs
popa
in
jnp
dec
aam
in
xor
push
fsubrl
aam
jmp
out
inc
xchg
sub
fcom
or
loope
test
lds
cmp
mov
xorl
inc
mov
add
test
sbb
mov
dec
mov
mov
cmp
repnz
ds
and
add
or
bound
mov
mov
adc
cmp
mov
ljmp
add
in
lods
mov
into
scas
xlat
or
test
sub
cwtl
adc
aad
push
sub
mov
push
adc
push
mov
shrb
jmp
adc
push
pop
push
cs
std
lods
xchg
jp
roll
jbe
mov
mov
call
add
incl
in
adc
je
mov
sub
mov
out
std
jl
test
mov
insb
out
mov
in
gs
sbb
or
push
clts
push
std
mov
sbb
xchg
cwtl
ja
call
mov
daa
push
cmpsl
loopne
jns
in
adc
sbb
adc
test
mov
mov
xchg
lcall
mov
inc
push
add
fcoms
sub
mov
pop
push
sub
xchg
ja
mov
ja
mov
ja
push
aad
fsubs
imul
in
pop
pop
adc
imul
pop
lods
adc
sahf
call
sbb
push
jmp
cwtl
in
add
daa
pop
push
and
xchg
xor
push
stos
ja
push
aad
fsubs
push
xor
test
lcall
mov
mov
xchg
divl
out
fdiv
xchg
mov
xchg
clc
mov
hlt
pop
cmpsl
sbb
dec
outsl
mov
or
dec
in
push
test
inc
rolb
cld
cwtl
mov
in
std
mov
sbb
dec
hlt
rep
pop
lahf
sub
sahf
in
xchg
jbe
fcomip
lret
jae
pusha
pop
add
cld
sbb
xchg
in
in
xchg
mov
inc
fs
aas
push
shr
call
call
dec
ret
xor
sub
dec
in
push
dec
adc
dec
xor
cmp
clc
out
sahf
int3
cs
add
pop
jae
cmpsb
adc
out
int3
xchg
dec
mov
in
je
inc
add
xchg
sbb
mov
push
cmpsl
jle
movsb
insb
mov
int3
js
and
test
outsb
out
mov
xor
xchg
vmovhpd
out
int
shlb
push
aaa
and
sbb
fadd
xchg
ss
mov
lds
fsubrs
popf
pop
inc
movsl
les
xchg
inc
sub
cwtl
mov
iret
push
mov
pusha
imul
sub
mov
fwait
inc
push
je
inc
sarb
mov
inc
hlt
lds
mov
fadd
push
nop
mov
add
mov
aad
ret
mov
test
mov
out
out
or
test
push
popf
int3
sub
mov
fcomps
lcall
les
mov
inc
es
test
mov
xor
fs
int3
cmp
jmp
lret
fldenv
jbe
sti
dec
aam
and
das
aad
std
lds
cwtl
lea
test
inc
add
pusha
fcomps
fmuls
push
mov
inc
in
test
mov
cmc
jge
xchg
cmc
dec
mov
cmp
cwtl
xchg
pop
sub
mov
dec
pop
in
sub
int3
out
mov
ss
mov
mov
out
into
xchg
push
aas
xchg
inc
sbb
test
push
push
sbb
out
lahf
daa
adc
dec
lahf
shr
out
inc
lds
and
call
lcall
xchg
addr16
or
xchg
repnz
mov
cli
outsb
stc
mov
inc
adc
lock
addr16
or
pop
daa
cmp
mull
push
pop
out
dec
inc
scas
lret
ss
ret
fmull
int3
loopne
jmp
dec
clc
dec
not
es
out
aad
xchg
cs
sub
lahf
adc
lods
in
xchg
push
insl
mov
jl
fadd
ss
push
jl
daa
out
or
les
or
jne
aas
xor
fdivrl
push
xlat
lea
xor
dec
in
push
mov
sub
int
mov
sbb
test
sbb
repz
fldenv
aaa
lods
mov
inc
adc
mov
or
mov
mov
outsl
in
test
dec
fdivrs
push
aas
js
cmc
stos
sbb
data16
insb
aad
cmp
in
inc
xchg
xchg
cmpsl
int
test
cmpsl
mov
cmp
xlat
jmp
rclb
das
rcl
mov
popf
enter
cltd
or
repz
mov
je
xlat
out
jne
inc
xchg
or
xchg
mov
mov
movsl
or
dec
aad
sbb
mov
push
or
xchg
sbb
mov
negb
loop
lods
shrb
pop
adc
jb
cmpsl
bnd
fmull
cmc
mov
mov
mov
or
xchg
imul
inc
in
push
shl
mov
mov
xlat
mov
shll
addl
cltd
out
push
mov
test
xchg
cmpsb
into
ja
out
addl
cmpsb
push
or
scas
cli
add
sti
pop
mov
xchg
mov
test
cmpsl
jb
xchg
inc
mov
imul
jl
cmc
xchg
mov
mov
mov
or
test
xchg
mov
movsl
cmp
mov
cltd
dec
push
ja
out
pop
mov
scas
mov
sbb
xchg
sub
imul
xchg
fildl
pop
ja
test
xchg
movb
sub
lods
jmp
cmc
leave
push
fnstsw
ss
sahf
xchg
jl
sub
shl
pop
pop
mov
inc
inc
push
mov
mov
push
cltd
sub
ja
dec
cmp
fucom
jp
jbe
add
inc
xchg
jbe
mov
test
or
testl
rolb
std
out
pop
cltd
in
mov
mov
push
cmc
pop
dec
cmc
pusha
and
inc
inc
fbld
cwtl
mov
cmc
imul
and
rolb
in
or
popf
jne
pop
sbb
data16
mov
std
test
mov
push
in
ss
movsl
and
dec
pop
adc
into
inc
test
fidivl
add
std
movsl
sub
dec
jne
adc
xlat
incl
data16
jae
loop
rclb
pop
jo
in
sub
adc
call
in
inc
imulb
roll
add
push
lret
les
inc
inc
imul
outsb
mov
outsl
fdivrs
data16
int3
add
aad
jmp
in
in
test
sbb
xor
in
cmc
lock
pop
sbbl
enter
in
cwtl
xchg
xchg
jg
lret
ja
data16
fcom
ja
mov
in
push
mov
pop
xchg
gs
adc
mov
movsl
push
mov
xchg
mov
test
ljmp
rol
push
xchg
add
cmpsl
mov
jno
testb
les
movsb
movsl
mov
fdivs
mov
dec
lea
aaa
shlb
jb
pop
ja
sti
lds
das
sti
inc
aam
cmova
jp
mov
adc
xchg
leave
add
mov
mov
aad
mov
gs
shl
aad
in
leave
aam
cmpsb
inc
inc
test
fadds
push
jmp
xlat
clc
push
cmp
mov
sub
xor
mov
popf
dec
sahf
in
shl
mov
jbe
mov
pop
jmp
mov
daa
mov
test
xchg
es
test
ss
sub
clc
mov
push
fs
test
lahf
add
fsts
aad
in
cmp
xchg
or
pop
jns
jne
and
dec
sub
dec
mov
ss
fnstcw
mov
out
mov
add
push
push
clc
rolb
push
addr16
lahf
push
xchg
mov
cmpsb
cmp
cmpsb
fsubrl
xchg
push
in
cmpsb
data16
testl
pop
xchg
arpl
inc
add
pop
lcall
loop
aam
cwtl
lods
mov
sbb
fdiv
xchg
push
add
out
lds
dec
bnd
xor
push
sub
fstpl
dec
inc
dec
cmpsl
iret
push
xchg
repz
cmovne
out
push
in
push
in
or
mov
mov
in
int3
imul
mov
inc
xchg
jl
cmpsl
mov
test
cmpsl
mov
mov
mov
int3
sub
xchg
mov
dec
lea
aam
push
cmpsl
push
add
jne
jp
pop
insb
shlb
sub
mov
xchg
mov
jmp
add
leave
pop
stc
pop
js
dec
push
cmpsl
ss
jne,pn
inc
addr16
jmp
int3
pop
aad
cmpsb
js
test
fldpi
mov
add
pop
xchg
sub
mov
xchg
mov
lock
mov
enter
mov
dec
mov
out
sub
clc
lret
sub
xlat
push
push
inc
into
xchg
fwait
push
shl
lods
or
test
fcmovbe
jnp
cmc
out
adc
ror
sahf
xor
pop
xchg
test
sbbb
test
out
fs
and
mov
dec
loopne
xor
out
aam
dec
pop
inc
push
dec
imul
push
jnp
imul
sarb
jmp
mov
adc
mov
push
lds
stos
rclb
shrb
xor
dec
in
lcall
pop
dec
cmpsl
jl
sbb
or
push
repnz
sub
es
push
lret
int3
xor
push
testb
and
pop
sub
dec
aaa
out
mov
out
data16
movsl
dec
leave
mov
xchg
push
fadds
jbe
ss
js
xchg
testb
scas
enter
jbe
mov
jp
push
push
jmp
push
lea
daa
std
dec
xor
popf
jl
or
cmp
push
int3
iret
push
and
xchg
out
outsl
sub
mov
xchg
clc
push
les
sub
jp
mov
jmp
int
sub
pop
fsubrs
mov
or
xlat
lods
cmc
ljmp
jecxz
mov
leave
mov
lret
lds
lods
pop
mov
sbb
push
dec
sub
pop
lds
mov
gs
add
hlt
sahf
pusha
sbb
out
js
out
loop
or
test
lds
enter
rclb
pop
out
loop
movsl
sub
out
xchg
insb
cmp
xchg
add
out
lret
mov
rolb
sahf
inc
mov
mov
bound
test
pop
add
xor
in
call
out
addr16
scas
add
xchg
add
lahf
out
pop
mov
test
movsl
adc
xchg
addl
pop
out
mov
inc
clc
lods
cwtl
dec
mov
aad
push
push
fldenv
pop
test
pop
rorb
add
inc
test
repz
push
mov
ja
sub
xchg
clc
mov
jmp
xchg
inc
data16
xchg
imul
mov
pop
ja
clc
jecxz
lods
pop
cwtl
jnp
je
cmpsb
pop
mov
daa
add
sbb
mov
jmp
mov
xchg
shll
in
sbb
inc
fwait
test
jg
lds
pop
in
xor
add
xlat
push
adc
call
mov
inc
cmc
sbb
sub
jne
mov
add
fdivl
roll
xchg
test
mov
ja
dec
cmp
mov
call
mov
in
pop
daa
aaa
cwtl
dec
aad
fcomp
movsl
xor
aam
addb
stos
je
cltd
nop
jbe
pop
in
outsb
jne
cwtl
cltd
addr16
mov
mov
pop
icebp
or
cltd
out
add
mov
ljmp
push
pop
fcmovnb
lea
out
sub
mov
int3
pop
rorb
mov
jecxz
in
xor
and
cmp
out
mov
push
and
movsl
stos
xor
xchg
inc
pop
in
jb
sbb
and
lea
mov
pop
xlat
cmp
movsl
push
js
std
xlat
dec
test
imul
inc
jmp
fdivr
cli
mov
push
lret
gs
push
push
daa
mov
inc
test
ja
vmaxps
ds
imul
fcomps
pusha
xlat
and
jmp
int3
mov
jmp
hlt
loopne
mov
cmpsl
mov
fmul
sbb
xchg
pop
loop
push
pop
fwait
test
aaa
xchg
xchg
mov
test
cmpsb
mov
mov
pop
cmpsb
lea
int
cli
pop
xchg
leave
aam
and
push
insb
test
ss
aam
cwtl
iret
not
fsubs
mov
cwtl
add
mov
int
adc
jle
mov
sbb
mov
push
aam
push
adc
lods
inc
mov
loopne
lds
in
enter
or
xlat
jmp
cwtl
lods
test
sbb
out
xchg
jl
in
pop
mov
daa
pop
cmp
out
fwait
aad
fsubl
aam
add
shll
movsl
int3
into
movsl
jae
pop
jbe
iret
mov
movsl
dec
push
pop
icebp
jbe
stos
jno
jbe
insb
in
add
sarb
icebp
push
fildl
pop
push
xlat
call
dec
int3
mov
fs
xchg
dec
inc
cltd
mov
cltd
clc
pop
jno
movsl
and
aam
js
outsl
loop
xlat
mov
fsubs
push
daa
fcoms
xchg
imul
sub
mov
repz
pop
xchg
sub
cmpsl
mov
scas
lds
insl
nop
pop
dec
pop
sub
sbb
and
pushf
mov
data16
cmpsl
stc
bsr
xchg
in
mov
or
test
ljmp
xchg
rcrl
aam
push
pop
sti
mov
push
xchg
ss
mov
pop
dec
stos
es
sahf
sti
sub
add
push
mov
pop
aaa
mov
imul
cmpsb
jns
pop
stc
mov
nop
orl
jno
sahf
or
and
sbb
xchg
pop
js
dec
or
in
aaa
test
pop
mov
push
cmc
sarb
jne
xchg
incb
mov
out
stos
add
gs
popa
fimuls
insl
push
push
sti
and
fsubs
xchg
xchg
arpl
cmpsl
cmp
push
inc
into
fdiv
dec
mov
loopne
cmp
and
cmpsb
addr16
mov
inc
mov
repnz
and
xchg
push
jmp
and
ja
test
ret
lods
mov
push
in
mov
mov
fmull
adcl
test
es
fcomps
fldcw
clc
dec
test
fadd
in
ss
test
imul
add
mov
divb
dec
inc
sbb
mov
lds
mov
stc
push
mov
xchg
lret
add
aam
cli
add
mov
lods
sarb
mov
mov
cmp
into
testl
std
mov
xchg
cmc
mov
inc
bnd
xor
stc
mov
mov
inc
cmpsl
js
loope
icebp
adc
jl
push
pop
ja
mov
add
rcrb
lods
int3
inc
aad
jns
insl
xlat
and
repz
pop
pop
out
jb
xlat
sbbl
pop
stc
cwtl
int3
xchg
mov
cmpsl
fdivl
fcom
test
notl
push
popl
es
andb
out
xchg
test
pop
out
or
js
insb
pop
movsb
mov
aaa
mov
jbe
in
xor
aam
push
shrb
xor
lcall
sub
les
xor
js
pop
daa
stos
dec
or
js
pop
int
push
aad
xchg
push
js
mov
sbb
xchg
test
mov
dec
push
test
lds
out
fstps
pop
add
cwtl
int3
push
arpl
subl
stos
sub
sbb
sbb
leave
mov
mov
fadds
ja
or
imul
jmp
and
jmp
xchg
test
inc
rol
jae
jne
sub
or
cmp
push
xchg
push
inc
nop
int3
leave
in
fcomp
mov
outsl
inc
xchg
mov
fcoml
xchg
pop
mov
dec
push
das
pop
pop
int
mov
xchg
dec
and
cmpsl
call
inc
and
jno
or
movsl
inc
addr16
mov
je
or
xchg
sub
mov
cmp
mov
out
not
call
ret
mov
jbe
rclb
pop
or
sahf
addr16
jge
dec
test
call
xchg
and
push
andb
out
lds
aam
add
mov
repz
add
mov
aaa
mov
loope
call
jecxz
mov
push
ret
pop
subl
xor
lds
lock
ret
mov
and
cmp
mov
mov
push
xor
orb
xor
mov
mov
dec
lock
mov
push
mov
push
or
pop
loopne
sarl
sbbl
les
sbb
push
add
int3
imul
mov
ret
push
add
xor
dec
lds
pushf
push
std
call
ret
out
call
sub
test
ljmp
test
sub
popa
loop
add
mov
repz
inc
icebp
iret
mov
mov
in
fisttps
push
xchg
in
repz
and
cmpsl
xchg
sub
and
mov
ss
loope
icebp
dec
adc
mov
cmp
cmc
invd
jno
sub
push
ss
dec
pushf
inc
push
push
xor
inc
in
adc
xchg
call
sbb
out
into
in
jmp
jbe
hlt
cmpsb
fisttpl
add
pop
sub
push
xchg
lea
lods
lock
sbb
jne
sbbl
push
sub
and
cmc
int3
lcall
clc
cmc
addr16
movsl
repz
inc
cmc
popa
lcall
mov
jae
aad
in
inc
mov
push
add
pop
out
mov
bound
enter
inc
test
ss
add
leave
fnstenv
and
dec
out
mov
push
add
cmpsb
pusha
cwtl
mov
xchg
int
add
bound
mov
icebp
mov
ret
in
mov
daa
mov
in
mov
leave
popaw
mov
std
or
inc
pop
mov
and
mov
imul
xchg
in
xchg
mov
aaa
dec
mov
pop
cltd
dec
mov
adc
gs
adc
mov
js
testb
lods
inc
cmp
cmp
jb
iret
imul
inc
cmp
inc
imul
cltd
add
dec
xchg
test
fsub
in
add
cmpsl
jecxz,pt
fcmovne
add
nop
ss
movsb
test
fbld
inc
aad
rorb
call
mov
dec
inc
mov
or
or
aam
test
xlat
push
dec
mov
dec
mov
jmp
inc
cmpsb
sbb
gs
out
mov
nop
test
aad
lahf
pop
lods
fcoml
stos
jbe
and
gs
cmpsl
clc
cltd
addr16
pop
xor
popf
adc
mov
push
rcl
dec
mov
xlat
es
loop
adc
inc
add
fdivs
xchg
cmc
mov
xchg
sub
cmc
push
lcall
xchg
daa
les
out
shr
push
bound
xchg
inc
inc
inc
out
pop
dec
es
push
out
xchg
mull
and
fwait
repnz
aad
inc
out
scas
in
cmc
call
loopne
or
xchg
mov
pusha
mov
inc
sti
cltd
out
xchg
push
dec
shrb
aad
mov
mov
cmp
inc
push
fmuls
jmp
or
call
or
or
stc
pop
mov
out
inc
nop
inc
push
pop
ja
insb
int3
out
mov
movsl
fsubs
pop
ss
cmpsb
into
dec
in
cmpsl
xchg
frstor
xorb
dec
cld
mov
pop
sub
xchg
jo
sub
xor
out
in
hlt
cs
in
inc
mov
in
jbe
idivl
test
inc
or
into
add
cwtl
loopne
daa
pop
push
or
push
cmc
pop
fadd
divb
test
int
icebp
fmuls
xorl
xchg
mov
xchg
out
rcr
cmp
xchg
mov
fs
roll
push
notl
or
jnp
scas
or
ds
stos
sbb
imul
pop
xchg
xchg
cmpsb
gs
in
sub
daa
call
aaa
int
mov
jmp
aas
fnstcw
lcall
addl
scas
mov
push
push
enter
dec
push
rorb
sub
data16
adc
cld
dec
iretw
gs
div
int3
imul
mov
popf
fwait
xchg
cmpsb
mov
out
xor
and
outsb
fstps
pushfw
mov
add
arpl
insb
out
out
int3
adc
icebp
aas
mov
pop
pop
aam
xlat
sahf
jmp
sbb
call
adc
pop
mov
std
rcrb
add
movsl
mov
pop
mov
jmp
gs
popf
in
enter
push
scas
xchg
add
lret
push
repz
rcrb
lret
int3
inc
divl
fs
cwtl
dec
ret
or
mov
mov
fisubrl
out
dec
push
or
imul
inc
pusha
movsl
sub
cmp
imul
pop
imul
jns
sbb
es
sub
add
popf
loopne
jae
or
push
xchg
in
mov
imul
or
inc
cs
pop
and
pop
lods
jns
gs
out
jae
push
mov
dec
mov
pop
jg
or
ret
scas
enter
int3
jecxz
mov
sbb
push
sbb
mov
cmp
sbb
jbe
pop
aaa
out
mov
pop
rcr
out
mov
imul
shrl
cwtl
push
dec
es
dec
pop
push
adc
movsl
jg
imul
lds
fs
push
test
mov
push
sub
mov
jbe
fs
pop
jmp
das
mov
data16
incb
and
push
push
mov
xor
sub
cltd
dec
scas
xchg
xlat
test
gs
test
push
test
in
sub
sub
ret
dec
xchg
pop
in
insb
movb
hlt
mov
pop
and
mov
packuswb
aam
imul
aad
hlt
ja
pop
mov
in
adcl
mov
mov
cmc
call
pop
pop
enter
sahf
sbb
sub
inc
xchg
sbb
xchg
daa
jmp
cmpsw
add
fdivs
dec
rcr
xlat
jne
stc
mov
lret
aas
jmp
scas
movsl
mov
push
daa
lea
testl
push
in
mov
mov
into
in
fcoms
inc
add
mov
out
jne
mov
inc
or
mov
mov
popf
insl
scas
addr16
pop
ja
cltd
push
mov
pop
es
or
dec
test
dec
mov
jbe
push
ds
push
clc
test
js
xchg
aas
mov
jne
nop
cmpsl
mull
dec
fldenv
mov
test
inc
sahf
push
out
mov
and
icebp
xchg
scas
in
jp
pusha
mov
sbb
negl
sub
fdivl
jne
ljmp
push
clc
cmpsl
pop
xchg
add
orl
push
pop
push
repz
push
mov
movsb
in
cwtl
fwait
ja
mov
sbb
fidivl
pop
cwtl
cmp
jmp
ret
dec
movb
xchg
or
cltd
xchg
gs
mov
pop
or
lds
daa
cmpsb
rol
xchg
mov
ljmp
xchg
xchg
add
js
test
push
jp
test
pop
push
cmp
test
ret
jg
push
xchg
cmp
movhps
push
add
mov
jo
push
testl
nop
cmc
pop
mov
test
call
icebp
fmuls
nop
xlat
add
and
fdivrl
mov
mov
push
mov
out
fcoml
out
xchg
pusha
loopne
mov
xchg
push
pop
fs
mov
sub
pop
pop
inc
addr16
jl
pop
cld
and
out
push
inc
cmc
pop
push
xor
inc
lea
popf
aas
movsl
sti
inc
add
cmpsl
scas
imul
stos
testl
in
jle
mov
push
fdivrs
and
ss
cmpsb
imul
or
popf
pop
cwtl
nop
out
push
clc
jmp
mov
iret
mov
xlat
jbe
call
clc
scas
push
jne
sub
dec
mov
into
pop
test
lods
idivb
cmpsl
test
mov
or
aaa
mov
mov
fsubs
xor
xor
add
or
sbb
rclb
mov
adc
lcall
daa
or
add
mov
xchg
aaa
cltd
ret
or
adc
pushf
lods
testb
sbb
pop
xchg
out
pop
data16
fcomps
mov
popl
xchg
cs
stos
mov
add
loopne
aam
pop
fsubr
std
dec
testl
popf
sbb
jp
out
int
cwtl
rcrb
frstor
daa
add
dec
testb
sti
xchg
jecxz
int
add
movsl
ljmp
xlat
movsl
test
lret
jmp
arpl
aas
repz
and
test
and
mov
test
lret
jnp
imul
sub
js
jne
test
xchg
sub
cmp
xchg
xchg
lds
mov
cmpsb
xor
out
sub
pop
pop
dec
push
ljmp
out
mov
sub
inc
sub
sub
push
out
in
and
inc
sbb
lret
fildll
or
movsl
sub
xlat
fcmovnbe
dec
in
sbb
mov
push
and
xchg
fadd
ljmp
jl
adc
testl
inc
jmp
add
lds
lds
or
fwait
xchg
addb
sub
movsb
in
push
push
sahf
jnp
jne
shlb
inc
insb
sub
sub
filds
push
gs
sub
pop
enter
divl
pop
inc
pop
aad
mov
cwtl
inc
fmuls
cltd
lods
inc
push
in
sbb
aaa
lret
js
test
inc
int
pop
pop
inc
mov
fcmovnb
imul
push
jnp
inc
pushf
inc
in
in
in
mov
push
pop
insb
sub
jbe
fwait
sbb
adc
and
mov
enter
xchg
pop
cmpsb
lds
clc
mov
sbb
testb
in
dec
sti
test
sbb
out
adc
imulb
inc
mov
xchg
cmpsb
pop
jmp
mov
in
xchg
pushf
mov
insb
xchg
mov
test
cmpsl
jecxz
repnz
lret
dec
sbb
aaa
xor
movsb
jns
sub
pop
adc
or
xor
and
cmp
rol
xor
jge
push
cmc
fcoms
sub
push
add
nop
stc
loope
shlb
test
inc
mov
pop
in
loopne
daa
inc
scas
scas
in
lahf
nop
test
sub
cmpsl
mov
int3
or
aaa
aam
mov
loopne
push
dec
xor
std
enter
popa
test
aad
cld
push
int3
repz
add
insb
nop
mov
js
mov
and
stc
and
int3
ja
scas
or
and
aad
adc
call
lock
pop
or
shl
shl
sub
int3
fmull
clc
sub
mov
movsl
xchg
inc
test
imul
test
ss
mov
dec
lock
imul
pop
mov
fsubp
int3
ret
xor
loopne
mov
mov
dec
cmp
outsl
xchg
push
or
nop
mov
psubusw
out
cwtl
cli
loop
shll
push
in
jne
addr16
mov
call
dec
call
cmp
adc
lock
mov
xchg
sbb
out
mov
test
loopne
dec
and
cmc
nop
sbb
sub
insb
inc
int3
daa
out
inc
pushf
rolb
cmp
aam
imul
aam
push
insl
push
in
shl
push
pusha
inc
jno
ret
roll
xchg
out
addr16
bnd
jns
jmp
dec
inc
sar
shrl
dec
cltd
xchg
adc
jb
adc
call
cmp
decb
test
sub
cmpsl
test
sub
int3
shll
js
cld
inc
sub
add
mov
das
mov
dec
clc
adc
lret
sub
inc
scas
mov
call
int3
push
rclb
fchs
les
aad
ret
xchg
sbb
mov
push
pushf
aam
pusha
fmuls
pop
cmpsl
cwtl
in
jp
add
dec
mov
and
decb
mov
mov
cmp
gs
mov
xchg
push
or
adc
cwtl
mov
dec
or
push
pop
pushf
adc
bswap
mov
in
pop
mov
adc
sbb
dec
push
shlb
xchg
enter
int
pop
and
or
xchg
sbb
fbld
enter
aad
push
adc
cltd
pop
sbb
sahf
pop
push
fstpl
jecxz
arpl
loop
aam
loope
popa
and
sbb
ror
dec
or
fadds
fcomp
adc
mov
faddl
in
rorb
lock
pop
loopne
in
sbb
xchg
ficoml
movsb
loop
lock
pop
dec
shrb
rorb
lods
dec
mov
out
out
aam
xchg
mov
xchg
cmp
sub
jle
sub
fsubrs
cmp
sbb
cmp
sti
ds
repz
sbb
lods
cmp
scas
mov
push
pop
popf
xchg
dec
lods
mov
and
xor
enter
inc
or
lods
loope
push
inc
add
ret
idivl
ds
cltd
jnp
popf
dec
enter
mov
enter
jae
and
popa
enter
ret
pusha
outsb
jp
enter
inc
aam
jecxz
or
movsl
fs
jns
popa
dec
inc
aaa
lds
stos
andb
rclb
xchg
icebp
adc
pop
sub
ret
dec
sbb
xchg
arpl
adc
repz
and
ja
cmpsl
sub
or
add
clc
jmp
enter
sbb
xlat
enter
xor
cmp
nop
das
mov
push
enter
arpl
mov
sbb
loope
jmp
pop
mov
insl
sub
mov
inc
mov
jns
mov
jne
adc
cmpl
inc
mov
inc
dec
stos
cmpsl
push
pushf
adc
and
or
mov
cmp
out
mov
xor
in
gs
enter
adcb
add
add
mov
enter
sbb
jbe
mov
mov
addb
shll
bound
jl
jbe
xor
xchg
movsb
fbld
fwait
push
adcl
inc
mov
add
nop
sub
divl
or
enter
xlat
rcrl
std
dec
repz
pop
addb
adc
and
jl
dec
push
xlat
enter
jle
cli
xchg
inc
enter
movsl
sub
sub
or
ret
into
pop
mov
pop
or
enter
cmpb
aaa
sar
into
jmp
scas
aad
aam
test
std
addr16
pop
push
lret
in
enter
sbb
orb
movsb
addr16
xchg
enter
xchg
adc
aam
jl
mov
lret
and
mov
and
loope
xor
xchg
jecxz
cwtl
adc
int3
fmulp
add
mov
rcll
inc
mov
push
das
inc
out
inc
enter
je
or
sbbl
mov
cmp
scas
and
xchg
clc
inc
jge
push
mov
pop
add
scas
enter
sarb
adc
dec
pusha
fmulp
imul
mov
sub
enter
mov
mov
popf
addl
mov
enter
lods
and
fnstsw
popf
cli
inc
int
gs
sbb
repnz
cmp
push
mov
shlb
add
and
or
test
lea
enter
shll
pop
sbb
repnz
dec
rcll
insl
pop
enter
pushf
xchg
std
rolb
xor
jae
or
aam
adc
shrb
rorb
decb
cmpsb
push
std
and
call
inc
sbb
imul
popf
btc
sbb
or
clc
pop
dec
sub
jle
lahf
xor
enter
mov
jne
xor
jecxz
and
inc
sub
das
sti
cmp
divb
loope
pusha
je
clc
addr16
pop
fdivrl
mov
mov
shlb
sbb
in
add
jae
pop
lds
mov
jbe
into
aam
push
out
in
mov
xor
test
cmpl
push
enter
es
adcl
or
and
add
mov
pop
xchg
ds
cmp
pop
insl
push
lods
cs
and
fwait
pop
push
mov
test
stos
sub
jnp
cltd
xchg
mov
cs
outsb
fcompl
push
xchg
xor
jnp
insl
mov
rolb
enter
fisttpll
mov
enter
lods
mov
into
ret
daa
inc
jge
setne
mov
jns
fs
xchg
enter
xor
je
sub
pop
push
push
mov
inc
data16
enter
popf
cltd
incb
jns
mov
jp
xor
shrl
pop
lahf
jge
leave
enter
pop
cs
int
aad
stos
rol
xor
int
fstpl
mov
sub
mov
aas
in
mov
sub
mov
pop
enter
mov
jb
or
or
jmp
lods
jae
pop
cmc
mov
or
fldl
push
loop
enter
pop
cld
push
and
or
aaa
jle
jg
fs
pop
enter
in
int3
add
mov
insl
in
sbb
cmp
pusha
cmp
in
jbe
fildl
adc
stos
push
jae
xor
inc
cmp
insl
mov
mov
xchg
adc
sarl
in
jge
cld
push
add
enter
test
mov
cltd
sbb
enter
rcrl
push
push
enter
fsubr
xchg
push
sahf
sub
mov
fimuls
fldcw
inc
cmp
jbe
enter
imul
mov
push
fadds
xchg
shr
mov
insb
cltd
jae
jbe
shlb
inc
icebp
xchg
or
les
pop
enter
jno
shrl
enter
mov
cmpsl
ret
push
enter
inc
movsb
cltd
orl
in
jbe
enter
jg
popf
sahf
cmp
ss
lock
shrl
add
repnz
jne
loopne
loope
mov
inc
aam
jbe
add
test
adc
mov
mov
repz
xchg
ffreep
test
sbb
enter
jo
stc
rclb
push
inc
xchg
cli
aam
cmpsb
lds
out
enter
popa
ret
jmp
je
xor
fs
enter
adc
or
jbe
jae
call
js
sub
stos
push
enter
and
mov
enter
jge
or
jno
aad
ret
sbb
and
outsb
xchg
pop
lret
enter
sbb
clc
xor
sbb
mov
jmp
enter
xchg
push
mov
test
and
push
in
adc
and
pop
pop
and
mov
jbe
ret
enter
sub
int3
inc
in
or
cmpl
mov
int3
sub
jbe
mov
ret
dec
pop
test
or
inc
push
push
xchg
mov
in
int
or
rclb
inc
outsl
aam
cmp
inc
popa
push
int3
xchg
and
cmp
xchg
in
inc
fcmovnbe
cmp
mov
pop
loop
add
incl
and
xchg
ret
cmp
mov
jbe
inc
mov
ret
xchg
add
sub
sbb
dec
jmp
cld
sub
pop
adc
push
and
out
and
dec
mov
enter
lea
sub
test
inc
scas
test
sub
jecxz
push
add
sbb
jo
sbb
mov
add
jnp
shll
adc
test
push
shll
fsubrs
iret
jmp
fsubrs
stc
fnstenv
xchg
cmpsb
cli
shlb
ljmp
ret
and
fdivr
mov
pushf
xchg
rorb
pop
in
dec
sub
mov
lock
cld
nop
add
lock
cld
mov
aam
jnp
loop
pop
mov
loopne
addr16
lret
dec
stos
scas
hlt
jo
loopne
scas
test
sbb
sarl
dec
and
int3
sub
jg
ret
xchg
out
rol
push
fcomp
mov
push
mov
int3
outsl
adc
sarl
dec
aam
test
fs
mov
lahf
or
cli
mov
sbb
movsl
aas
loopne
dec
add
adcl
sbb
pop
inc
pop
or
jp
xchg
mov
inc
jecxz
pop
pop
xchg
pop
mov
test
orl
mov
mov
mov
inc
dec
addr16
fsubrl
in
in
cwtl
jmp
mov
in
pminub
sbb
cmp
int
lock
pushf
sbbl
sar
jecxz
xor
wbinvd
test
ret
jl
lock
nop
enter
arpl
dec
enter
sbb
add
cmp
arpl
pop
leave
loopne
ja
xor
mov
cs
daa
pop
jmp
out
sti
mul
and
je
movsb
dec
jl
in
lds
arpl
out
pop
movsb
fs
or
lea
xchg
or
add
lahf
add
add
hlt
dec
arpl
sbb
divb
lods
dec
loop
call
push
in
pop
and
adc
sbb
lock
andb
mov
push
addr16
pop
out
push
ret
add
adc
jge
cmpsl
cwtl
aas
push
int3
lods
clc
call
fldt
call
nop
test
imul
and
xorl
mov
xchg
stos
lods
pop
in
adc
push
push
xchg
sbb
mov
lods
in
les
mov
pop
xor
jg
orb
xor
push
push
jnp
cmp
pop
cmp
cmp
pop
cmpsl
cmp
das
sub
pop
sbb
dec
sbb
cmp
add
inc
cmp
push
push
nop
mov
test
rcrl
push
out
movlps
add
push
fs
inc
lock
xor
sysret
fnsave
dec
mov
push
mov
inc
lods
movsb
addr16
push
cmp
jae
cmpsl
sti
xchg
dec
add
in
push
inc
jl
adc
js
pop
cmovnp
xor
add
xchg
and
fs
push
pop
xor
jnp
pop
mov
xorb
jg
shlb
adc
mov
jl
inc
adc
jg
xchg
daa
daa
inc
push
fs
sub
imul
jge
xchg
jae
pop
adc
push
inc
imul
dec
dec
mov
inc
and
call
sub
or
pop
sbb
icebp
jl
out
jle
cmp
ret
pop
or
in
adc
dec
shll
xchg
adc
cmp
sbb
mov
and
faddl
xadd
inc
sbb
sub
fbld
and
pushf
sbb
add
push
adc
xchg
shll
xlat
xchg
fidivrs
jbe
or
adc
mov
push
lods
das
push
hlt
add
clc
xchg
dec
add
outsl
adc
xchg
ljmp
adc
mov
imul
sub
push
cwtl
ffreep
ds
ficomps
jmp
sbb
addr16
test
xor
negl
mov
inc
cmp
dec
dec
daa
sbb
adc
lods
out
inc
test
jl
stos
or
jecxz
cmpb
inc
adc
add
call
or
dec
jne
clc
pop
xlat
in
inc
lcall
xchg
mov
cmp
pop
out
adc
cmp
sti
add
push
sub
loop
dec
jo
cmp
fisubrs
push
push
sbb
ret
adc
repz
int
inc
mov
sub
jbe
push
fisubs
cvttps2pi
push
cmpsl
and
jp
pop
jmp
inc
mov
sbb
push
jge
jmp
pop
std
cmp
rcrl
mov
sti
adc
push
repz
inc
in
inc
xlat
leave
inc
push
loop
adc
pop
mov
pop
cmp
xchg
pop
add
pop
imul
pop
sbbb
movsb
stos
xchg
push
mov
jp
pop
jno
jl
loope
jg
push
ss
dec
mov
aam
pop
fmuls
fdivrl
mov
call
lock
call
mov
mov
jg
cmp
mov
inc
push
pop
sub
or
leave
in
adc
or
cld
dec
loopne
je
dec
cwtl
jbe
jae
aaa
les
hlt
inc
adc
sub
ret
lret
mov
adc
testb
adc
dec
add
enter
xchg
mov
push
enter
xlat
fs
push
adc
and
dec
test
pusha
shlb
lods
enter
fists
lahf
xchg
rcrb
adc
ficompl
popa
imul
enter
es
gs
jmp
imul
enter
jmp
enter
outsl
das
out
scas
outsb
fsubrs
in
lods
insl
sub
incl
cmp
jnp
lcall
loopne
adc
push
push
iret
pushf
dec
wbinvd
adc
pop
sbb
into
mov
dec
push
push
int
adc
rorb
cwtl
xchg
call
and
or
insb
xchg
add
cmp
xor
adc
mov
scas
and
pop
xchg
fildl
sub
xor
pushf
pop
jo
fwait
movsl
jb
fsubl
test
les
int3
stos
out
mov
sub
data16
adc
rcl
xor
lods
mov
sub
outsl
dec
adc
sarl
jnp
clc
jb
addr16
jne
enter
mov
enter
nop
int3
push
imul
jg
aam
adc
push
dec
enter
inc
inc
lods
rcrb
jg
push
addr16
sub
in
push
dec
mov
rorl
pop
mov
pusha
mov
jnp
push
mov
push
pop
in
pusha
call
lcall
and
test
sahf
enter
adc
das
inc
add
cmp
sbb
scas
xchg
jne
paddq
loope
push
movsl
mov
dec
sub
pop
push
je
sbb
cmp
movsb
or
cmpsl
xor
mov
icebp
ljmp
mov
into
mov
mov
xchg
xchg
pop
int3
sub
jb
adc
xchg
imul
sub
out
pop
outsb
jns
int3
jmp
loopne
jmp
push
adcb
inc
or
dec
nop
fsubs
cmp
cmp
mov
lea
add
lods
enter
clc
jmp
enter
inc
xorl
div
popf
repnz
cmc
pop
repz
in
cmp
pop
loope
fildll
rorb
enter
pop
xor
enter
xchg
addb
repnz
mov
lods
jg
faddl
inc
cmp
arpl
es
cmc
shl
add
push
jge
or
push
mov
or
cltd
stos
enter
push
or
call
loop
stos
push
shrl
and
or
test
jmp
das
push
inc
enter
scas
or
jno
push
out
and
in
in
and
fcomps
popf
enter
xor
push
jl
sbbl
enter
jb
mov
sub
sbb
jbe
jae
ror
enter
inc
ja
jns
enter
and
mul
enter
xor
inc
call
mov
arpl
and
xchg
cwtl
enter
sahf
jmp
enter
in
sub
xchg
add
rcrl
adc
add
pop
jp
lods
and
packsswb
adc
push
jl
enter
push
adc
enter
fisubl
xor
ret
lock
inc
rclb
pop
outsb
pop
leave
enter
aad
xor
loope
sub
rcrl
xchg
icebp
mov
mov
aam
adc
dec
push
add
movsb
fsts
mov
pushf
aas
dec
leave
adc
enter
add
jg
ss
cmp
enter
imul
mov
lahf
push
into
mov
hlt
cmpsl
xchg
sar
imul
sahf
cmp
sbbl
aaa
lods
adc
jmp
xor
fildll
adcb
pusha
inc
cli
fwait
inc
mov
adc
popa
dec
xchg
inc
jmp
mov
in
or
sbb
push
push
stc
sub
mov
enter
sub
push
incl
faddl
sbb
inc
cmp
inc
or
lds
dec
test
sub
inc
xor
mov
mov
stos
adc
pusha
adc
push
dec
cmp
pop
adc
shl
sub
sahf
das
fs
sbb
enter
add
imul
shrl
sahf
aas
out
adc
xor
push
jo
dec
sbb
and
push
rorb
enter
into
sub
inc
enter
cmp
and
in
mov
test
faddl
lret
add
sub
daa
enter
sbb
push
dec
cmp
pop
ret
or
rcrb
mov
fimuls
enter
xor
pusha
mov
aam
fldcw
mov
outsl
xor
inc
or
xor
lods
loop
cwtl
es
sahf
xor
mov
sub
sbb
std
rcrb
mov
mov
mov
cltd
jo
ret
test
sub
imul
mov
int3
popf
mov
daa
adc
jno
lods
int3
add
enter
sbb
enter
sbb
fiadds
inc
loope
loop
movsl
adc
orb
push
fsubs
sti
jnp
or
adc
mov
notb
mov
into
enter
xchg
or
es
fistl
popa
movsl
inc
push
cmp
dec
pop
gs
ds
adc
push
xor
repz
ret
divl
inc
mov
xchg
movb
dec
insb
mov
int3
xchg
pop
xchg
fmul
cmp
inc
mov
test
lods
push
orb
mov
mov
in
add
ljmp
inc
pop
popf
xchg
mov
loop
lock
add
and
mov
add
js
adc
enter
push
dec
cwtl
ret
negb
imul
pop
shlb
pusha
jb
icebp
inc
inc
enter
pop
cmp
add
xor
pop
jg
in
sub
inc
push
jecxz
add
enter
add
hlt
cli
pusha
enter
push
or
and
cmc
jo
inc
sub
mov
or
pop
pop
xor
aam
jo
dec
pop
daa
inc
imul
inc
jb
mov
js
mov
dec
test
pop
nop
push
xor
and
ret
pop
loop
scas
add
pop
mov
fs
mov
jne
sub
mov
cmpsl
sti
dec
push
daa
enter
push
adc
fwait
lahf
enter
mov
dec
test
aam
xchg
insb
xlat
shrb
push
push
int3
pop
jne
pop
or
xchg
gs
inc
push
sti
pop
sarl
mov
aad
int3
testb
adc
and
orl
enter
popf
sbb
push
push
xchg
enter
outsb
cli
adc
inc
xor
adc
iret
enter
icebp
aas
pusha
mov
mov
out
movsb
lea
inc
enter
mov
sbb
mov
adc
or
stos
push
shrb
pusha
lds
lret
add
dec
dec
sub
mov
pop
aad
mov
sub
mov
mov
in
cmp
outsb
jp
jo
jmp
enter
xor
xchg
cmp
pop
jle
hlt
push
out
enter
ret
sub
jg
test
push
adc
test
mov
xor
test
and
or
movsl
and
adc
movsb
scas
dec
rorb
sti
cs
mov
enter
push
scas
stos
xor
aam
lods
mov
mov
enter
pop
repnz
adc
jecxz
fisttpll
mov
enter
test
pop
in
mov
mov
cmp
sbb
in
popf
hlt
xor
xlat
into
mov
negl
enter
addr16
adc
sbb
push
and
js
pop
xchg
enter
or
test
and
je
pop
xchg
in
xchg
mov
and
aam
or
jmp
aaa
inc
mov
mov
inc
enter
inc
or
adc
imul
rcrb
enter
add
sub
or
dec
shr
and
mov
sub
int3
xchg
pop
push
jne
test
aam
xor
movb
sub
insb
enter
dec
ret
inc
and
call
cmpsb
mov
pop
mov
lea
jl
imul
mov
cmp
imul
adc
dec
lret
and
int3
ja
and
adc
loop
pop
in
cmpsl
inc
and
and
std
cmp
fcompl
mov
add
icebp
es
mov
sub
dec
jae
popa
fmuls
test
gs
enter
shrl
or
out
xor
andl
leave
dec
sbb
sbb
sub
out
add
mov
mov
int3
dec
ret
xor
mov
rcll
out
ds
xchg
popa
and
mov
push
fistl
push
dec
jle
inc
mov
aam
pop
adc
bound
jne
xor
js
jg
sub
mov
push
mov
mov
pop
inc
pop
lds
fs
lods
enter
pop
xchg
xchg
out
rcl
sub
jle
mov
mov
mov
push
scas
mov
enter
or
gs
movsl
jns
lock
enter
cmpsl
nop
in
jb
enter
adc
sarb
aaa
jae
sbb
das
sti
xlat
dec
pop
cmp
mov
fildll
mov
and
xchg
adc
loope
add
pop
mov
mov
mov
leave
sbb
mov
lods
push
push
dec
mov
dec
pop
pop
in
mov
out
sahf
jne
dec
lds
fs
fsubrs
push
out
enter
int3
sub
ret
push
inc
gs
ret
out
xchg
or
push
jl
hlt
enter
or
mov
es
outsl
ret
pushf
xchg
push
push
cmp
jae
add
mov
cli
es
popa
scas
das
enter
xchg
movsl
orl
mov
outsb
push
xchg
enter
popa
fnstcw
pop
dec
shlb
xchg
nop
fwait
jmp
enter
mov
scas
rorb
xor
enter
sbb
icebp
jecxz
enter
lret
jmp
into
in
call
fnsave
xchg
xor
add
movb
xor
sub
adc
inc
cltd
mov
in
test
inc
sub
add
xchg
test
mov
or
enter
adc
adc
or
jo
push
xchg
mov
enter
cld
dec
lock
dec
das
into
sbb
jne
push
enter
xlat
inc
out
add
inc
std
adcb
sbb
in
xor
loope
mov
insb
movsl
and
pop
push
mov
inc
mov
add
cld
jge
push
lock
ficoms
loope
add
mulb
mov
enter
scas
push
xor
stos
lahf
pop
push
mov
pop
mov
inc
out
inc
push
push
repz
push
lods
test
aam
mov
xchg
jne
inc
addr16
cld
loopne
inc
lds
mov
sbb
add
xchg
lds
cmp
mov
inc
shll
mov
enter
inc
push
lret
bound
scas
jl
sub
adc
enter
fdivrs
es
iret
fistpll
lds
cwtl
add
dec
fsts
pop
pop
and
jnp
inc
xor
enter
sbb
js
cmp
incl
pop
ret
rclb
or
cmpsb
pusha
ret
or
nop
jl
pop
aam
or
cmp
inc
pop
pusha
cmp
lahf
cmp
jp
ret
subb
jb
mov
add
cwtl
shll
xlat
inc
inc
mov
mov
js
push
and
xchg
mov
movsl
xor
jno
ret
adc
mov
cmpsl
or
fsub
enter
out
xchg
inc
int
lret
das
daa
into
inc
or
in
cmpsb
cmp
and
inc
push
sub
xchg
stc
xor
and
fimuls
jno
into
mov
jo
shrb
shrb
jge
mov
xchg
mov
in
ret
icebp
adcb
es
pop
add
enter
in
push
int3
mov
sub
jae
and
rorl
cmpsl
or
arpl
in
enter
push
dec
adc
xor
push
jbe
and
clc
ret
cmpsb
rcll
enter
jl
hlt
test
cmp
js
mov
enter
pop
ljmp
cli
xchg
ret
enter
or
push
scas
fcompl
test
xchg
enter
jno
andl
pop
sbb
psubsw
gs
and
push
cmc
ljmp
push
out
adc
dec
pop
addr16
sub
jp
sub
xor
in
push
lahf
pusha
and
sub
adc
cmp
fcmove
fwait
testb
addr16
inc
lods
test
dec
aam
nop
pusha
xor
or
enter
jno
arpl
lods
enter
push
scas
xchg
push
enter
mov
es
sub
lret
js
jno
js,pn
test
ret
mov
loopne
outsb
or
sahf
push
popf
xchg
sub
out
push
sub
xor
lea
jmp
lock
enter
xchg
sub
loope
ret
pop
outsl
enter
nop
js
jno
or
test
or
enter
popl
in
rcrl
jns
ja
adc
push
enter
cmp
sub
test
jmp
inc
push
adc
insl
and
cmpb
jle
jo
enter
fmulp
stos
pushl
sbb
insl
dec
leave
adc
jg
gs
arpl
jnp
daa
add
test
or
mov
and
mov
loope
sub
dec
subb
push
pop
ljmp
roll
cwtl
int3
xor
jge
xor
jge
rcrb
cmp
jge
dec
or
mov
jge
int
lds
jne
idivl
out
mov
inc
enter
xorb
sbb
xor
sub
pop
repnz
int3
sub
dec
les
faddp
aas
xlat
hlt
fdivs
or
sub
int3
fsubl
pop
add
enter
sub
mov
stos
xlat
inc
loope
pop
rol
lahf
sbb
pop
in
cmp
xor
mov
cmp
push
pop
add
inc
movb
add
jae
and
in
andl
test
scas
push
or
xlat
pop
mov
lds
mov
mov
sbb
push
ret
mov
xchg
loope
add
movsb
pop
ror
add
jg
pop
dec
add
pop
subb
cltd
outsl
enter
and
jo
mov
out
enter
adcb
adc
enter
sub
adc
ss
js
xor
sub
stos
enter
pop
mov
sbb
push
lcall
enter
sbb
nop
adc
ljmp
in
pop
fcmove
cmp
outsl
push
imul
inc
mov
cmpsb
nop
loope
sub
int
pop
jb
inc
and
push
enter
out
mov
stos
lahf
inc
jno
and
imul
and
imul
movsl
imul
inc
insl
cmp
xchg
xchg
mov
add
jmp
sub
lds
inc
or
ss
add
cli
inc
enter
sbb
mov
jns
icebp
lods
jbe
enter
push
push
xor
jae
pop
sbb
push
cmp
dec
jge
push
enter
inc
adc
ret
mov
jno
aad
call
arpl
sarl
inc
cmc
jmp
jecxz
jb
movsl
aad
dec
ret
sti
push
add
push
js
xor
and
fistl
cmp
ret
xchg
inc
test
roll
in
or
xor
inc
xchg
or
popf
icebp
xor
cmpsb
in
leave
xor
js
lds
sbb
or
xchg
push
dec
dec
xor
rcr
jecxz
insb
and
enter
or
mov
cmp
adcl
add
add
pop
clc
in
cwtl
ret
out
movl
xchg
cmpsb
cwtl
sbb
insl
rcrb
or
jb
inc
cmp
iret
ret
xor
jne
bound
test
and
adc
jae
cltd
add
ret
inc
xchg
adc
pop
mov
dec
ret
stos
mov
push
mov
iret
test
push
cmp
mov
and
add
sbb
pop
into
cmpb
mov
lea
addr16
shrl
lock
sub
stc
cmp
insb
enter
pushf
lea
cmp
cmc
ds
aad
pop
enter
cmp
inc
or
xchg
cli
aas
add
shll
cmpb
mov
jnp
aam
pop
call
jg
dec
push
and
enter
xor
leave
dec
pop
enter
and
cmp
icebp
enter
xor
jmp
enter
mov
cwtl
or
mov
inc
mov
adc
push
adc
enter
cmpsb
fsubrp
arpl
enter
fcoms
mov
xor
into
test
out
pop
mov
cmpsl
jge
enter
cmpb
xchg
clc
ja
enter
and
sbb
adc
sub
test
pop
push
enter
outsl
xor
shlb
enter
imulb
les
gs
lds
rcrb
mov
mov
mov
loopne
call
outsl
adc
stos
pop
out
dec
enter
loop
enter
and
add
sarb
in
pusha
ret
out
and
aas
div
stos
ss
mov
jp
sub
or
test
add
adc
pop
rcl
icebp
add
and
jns
lret
enter
lods
insl
clc
push
das
enter
or
shrl
jp
cli
jbe
lahf
or
fstpt
fdivs
outsl
cmp
data16
xor
mov
push
pop
jno
addl
mov
adc
or
test
test
xchg
in
rolb
lock
hlt
push
nop
cwtl
and
pop
sbb
adc
inc
aad
in
mov
scas
mov
sub
or
movb
sbb
rcrb
aam
call
pop
xchg
mov
pop
fwait
aam
call
outsl
adc
mov
sbb
mov
mov
push
test
aas
jp
ret
iret
dec
add
push
pop
fistpll
mov
test
sbb
aas
add
cmp
fsubs
adc
dec
inc
pop
lds
aad
out
push
js
int3
imul
ret
ret
adc
pusha
push
xor
cmp
mov
jo
pop
push
cld
in
mov
int3
push
push
js
push
mov
or
push
out
shlb
sub
int3
movsb
in
loopne
fcomps
sbb
les
mov
imul
fmuls
mov
pminub
dec
rorb
fadds
int3
nop
in
sub
xlat
hlt
push
int3
dec
and
mov
clc
lock
adc
aam
mov
add
loopne
or
int3
es
and
push
push
xor
adc
push
pop
aam
fmulp
lock
xor
nop
xchg
push
inc
or
add
es
cmc
dec
push
add
add
test
mov
fists
cld
shl
in
stos
mov
add
jmp
popf
sub
adc
mov
or
jp
dec
adc
fsubs
loopne
stos
int3
mov
rclb
in
mov
cmpsb
fisttps
lods
and
push
sbb
mov
imull
pop
in
jecxz
fsubl
push
ret
jmp
jecxz
adc
jp
pop
pop
std
out
sarb
gs
clc
rcll
rcr
pop
xor
out
sbb
xchg
xchg
test
and
hlt
pop
push
scas
repnz
insl
scas
rcrb
mov
gs
ret
xor
and
ret
int3
dec
fwait
call
xlat
or
cmp
adc
movsl
xchg
mov
pop
jge
in
mov
daa
push
ljmp
xchg
cmp
arpl
push
das
jo
addr16
cld
cmp
xor
inc
addr16
push
iret
insl
jg
iret
addr16
addr16
stos
addr16
test
mov
stos
data16
sbb
xorb
movsl
fwait
imul
xchg
test
scas
xadd
cmp
sub
lock
and
pop
stc
and
fmull
cmp
nop
mov
pop
fiadds
enter
cmc
pop
mov
fwait
aas
xor
int3
pop
fsubrl
outsb
sub
add
loopne
hlt
sarl
push
inc
push
dec
xchg
pushf
mov
addr16
sahf
fildl
clc
enter
stc
jecxz
pop
jo
dec
das
nop
fmul
enter
pop
call
es
cmp
add
pop
dec
xor
clc
push
and
mov
nop
test
jb
ljmp
sarb
or
xor
nop
call
fadds
loopne
push
xchg
movsb
fisubrs
es
ficoms
lods
out
ret
nop
pop
popf
js
mul
or
int
int
test
in
xchg
inc
and
sbb
fmul
pop
sarb
push
xchg
pushf
nop
js
sbb
jo
aam
xor
push
lods
hlt
test
mov
adc
pop
stos
xchg
xchg
xor
clc
dec
sti
sbb
mov
ret
xchg
lret
call
xor
ror
ljmp
lock
cmpsl
loopne
cmp
mov
subb
inc
or
mov
adc
jmp
sbb
in
pop
push
dec
call
int3
les
aam
daa
mov
push
cmpsl
mov
mov
test
lcall
sbb
jnp
jo
xchg
fs
pop
divb
fcompl
pop
js
ss
sarb
add
xchg
add
fidivrl
xchg
hlt
xor
out
leave
call
mov
and
pop
xchg
push
sbb
xchg
xchg
push
pop
rolb
xor
push
ret
popa
sbb
ja
arpl
pop
pop
mov
mov
js
push
push
adc
js
mov
lods
test
ja
in
push
xchg
movl
test
insb
dec
jbe
mov
push
xlat
push
decb
sbb
es
out
ss
rcrl
call
adc
inc
jb
pop
cmp
out
outsb
mov
stc
mov
sub
mov
xchg
sub
loopne
addr16
mov
dec
movsl
xlat
xchg
jmp
xlat
sbb
popf
in
mov
jb
sbb
clc
fsubp
in
sub
fsubp
jo
repz
call
ja
clc
cmpsl
sbb
subb
shl
fmuls
mov
fwait
adc
pop
pop
and
adc
mov
out
mov
loope
das
sahf
mov
cmc
cmp
lret
push
jne
addr16
push
jecxz
popf
ja
fs
cmp
negl
into
lock
loopne
rcll
fisubrl
loopne
test
pop
cmp
in
xchg
loop
filds
adc
and
negb
pop
add
call
pop
in
mov
notl
cmp
mov
lds
push
mov
xacquire
cmpsl
inc
in
mov
xchg
cmp
fcomps
adc
in
scas
jae
fcompl
ret
mov
push
nop
pop
fcoms
adc
jo
imul
arpl
call
fnsave
push
dec
scas
mov
popf
imul
jle
add
mov
cld
cwtl
addl
mov
iret
ljmp
loop
sbb
mov
push
call
call
repnz
call
or
mov
jl
pop
xor
call
push
fucomp
sbb
or
mov
and
dec
mov
sbbb
aad
mov
sbb
and
stos
mov
cmpsl
nop
xchg
pop
xchg
notl
sbb
nop
mov
xor
cwtl
push
inc
fwait
sbb
movsb
movsb
ficoml
pusha
jne
fucomp
mov
adc
lea
mov
pop
xchg
mov
shr
jne
cmpsb
jne
fdivs
dec
cwtl
dec
adc
test
mov
shl
call
mov
fcomps
add
cmp
inc
js
push
xchg
pop
ja
int
loopne
addr16
mov
sti
and
push
or
dec
cmpsl
std
clc
out
push
pop
outsl
inc
push
andl
stos
mov
dec
stos
push
cmpsb
adc
in
jno
cld
faddl
adc
pop
or
pop
sarl
xchg
pop
cmp
sub
jae
inc
fs
adc
xchg
mov
fsubl
mov
pop
sbb
push
lods
aad
jo
popf
dec
inc
arpl
pop
shl
daa
pop
add
sbb
jl
inc
pop
pop
ss
inc
outsb
rcrb
sub
in
inc
call
call
sub
pushf
repz
sub
pop
out
mov
mov
pusha
sbb
loopne
xchg
jae
insl
xor
sbb
sarb
xchg
nop
xchg
dec
and
ja
ljmp
mov
loop
push
or
sbb
cmp
xor
stos
push
push
addr16
movsl
and
stos
fsubrl
aam
jb
insl
mov
iret
popf
or
adc
xchg
pushf
mov
daa
scas
ret
and
sub
push
testl
mov
in
sub
mov
or
cmp
cmp
imul
aam
movsb
push
or
fs
negb
rcll
stos
mov
jnp
jnp
mov
xchg
dec
mov
adc
cwtl
mov
call
js
shrl
dec
hlt
mov
push
out
sbb
ljmp
mov
pop
jmp
sbb
push
cmp
addr16
fsubs
insb
push
std
pusha
xchg
xchg
cwtl
call
stos
xlat
jnp
mov
add
dec
cmc
insb
sbb
pop
loopne
mov
mov
jmp
mov
dec
lahf
dec
fistps
hlt
mov
adc
movsb
pop
cmp
shrl
sbb
mov
mov
leave
in
mov
mov
mov
insl
add
cmpsb
mov
int3
push
stc
inc
lea
idivb
dec
dec
into
push
xor
fs
cmp
mov
cs
arpl
inc
fdivrp
mov
loope
xor
ja
das
mov
pop
inc
jae
add
daa
pop
pop
xchg
xlat
push
inc
mov
push
flds
stos
dec
test
push
push
popl
push
cmp
pop
adc
jmp
dec
push
cmpsl
call
test
ficoml
jne
push
fsubs
sbb
stos
imul
jl
mov
sbb
cmp
or
adcl
xchg
push
test
cmc
iret
ja
or
mov
sub
mov
fsts
xlat
sahf
xchg
call
mov
lret
inc
rorb
xchg
aam
lock
xchg
jae
test
lods
adc
fsub
mov
mov
and
cmp
jp
sbb
nop
cmpsl
cld
mov
dec
push
into
mov
fsubrl
xchg
out
rcl
mov
jg
popa
jmp
pop
stos
push
push
sbb
jecxz
call
popa
cmp
mov
lods
sub
fmul
jp
outsl
lret
xor
outsb
jo
xchg
jg
or
insb
hlt
cmpsl
in
lods
xchg
stos
push
imull
mov
cmp
stos
test
lds
cmp
ja
pop
rorb
hlt
jecxz
daa
cli
jnp
sub
ss
cld
nop
divb
hlt
xchg
add
loop
mov
jne
stos
push
push
adc
push
out
fs
dec
push
jecxz
pop
into
stos
movsb
or
pop
mov
iret
lret
test
call
pop
mov
jns
rorb
shll
rcl
mov
ljmp
ljmp
jne
insb
arpl
dec
rcll
inc
xchg
sbb
out
mov
movsl
fnstcw
jg
mov
shlb
inc
pop
gs
pop
inc
imull
pop
incl
mov
cmp
push
fdiv
hlt
mov
aad
test
mov
mov
dec
push
push
or
cmpsl
jl
insb
jbe
iret
mov
pop
cmp
dec
fs
mov
addr16
mov
cmpsl
cltd
push
adc
inc
fbstp
sub
add
fcomip
in
stc
pop
adc
xor
aad
pop
jne
inc
test
adc
int
hlt
movups
jmp
pushaw
sbb
nop
loope
mov
fs
adc
lock
or
dec
sbb
xor
lret
jnp
sub
nop
jae
test
clc
aam
arpl
shrb
call
sub
adc
xchg
shlb
mov
insb
sub
scas
mov
push
mov
out
test
out
scas
decl
sti
call
jg
pop
rorl
dec
in
mov
xchg
aam
pop
xor
jne
cwtl
mov
gs
or
mov
mov
mov
imul
pop
jns
sti
popa
rolb
inc
xor
dec
fdivrs
cmp
orl
push
inc
mov
add
mov
push
cmpsl
cwtl
xlat
cld
popl
inc
add
cmpsl
addr16
mov
adc
clc
fs
add
and
outsb
push
iret
or
sbb
pop
int
gs
mov
jae
inc
nop
movsl
or
push
in
fcomp
mov
out
inc
sbb
negl
jnp
popl
inc
mov
int3
sub
cmp
sarb
movl
add
mov
negb
mov
dec
dec
jmp
mov
or
cmp
aad
mov
pushf
cld
subb
lods
push
mov
push
sbb
dec
js
test
sub
hlt
insb
nop
imul
loopne
mov
mov
dec
pushf
add
movsb
cmp
out
stos
lahf
test
push
mov
lock
arpl
mov
cwtl
mov
leave
push
rolb
cmc
in
add
mov
fdivs
sbb
fcomps
push
icebp
pop
mov
mov
movl
xchg
call
ja
jg
dec
inc
push
int3
repnz
jecxz
add
inc
out
js
mov
les
pop
out
add
xchg
data16
ror
or
int
jmp
fs
mov
xor
sahf
pop
out
lds
xor
in
cmp
call
pcmpgtb
in
idivl
xchg
stos
call
repnz
ja
ss
lock
add
es
mov
or
and
mov
nop
in
ret
nop
fs
js
jnp
out
leave
xchg
cmp
inc
test
shlb
aam
dec
aam
xchg
test
loopne
push
xor
or
xchg
pushf
loopne
iret
aam
lock
cmp
sbb
iret
xor
jl
pusha
fs
or
mov
js
lcall
jmp
lcall
push
jo
push
scas
scas
call
sbb
arpl
pusha
dec
lea
inc
cmp
pop
mov
aad
cwtl
cmpsb
out
inc
xor
xchg
adc
mov
imul
out
fsubs
hlt
mov
insb
faddl
lock
addr16
cwtl
ljmp
nop
es
test
jo
stos
mov
mov
xchg
addl
scas
dec
scas
lods
into
mov
push
dec
aas
mov
fisttps
push
testl
out
jle
arpl
cmp
jle
imul
dec
popa
je
movsb
out
outsb
push
pop
push
inc
out
test
push
sbb
das
call
pop
dec
or
nop
push
adc
fsubrl
dec
mov
fmul
pusha
daa
dec
ja
pop
iret
adc
sbb
mov
pushf
xchg
and
in
xlat
and
lahf
iret
and
sub
pop
mov
add
sub
in
or
lock
stos
loopne
mov
stos
xor
in
cmp
adc
fisubl
rcll
mov
imul
push
inc
dec
inc
sub
addr16
push
out
push
cmp
mov
loop
iret
out
mov
or
add
fsubs
out
xlat
call
cmp
cmp
nop
or
mov
sub
push
fsubs
gs
xor
into
jmp
jns
sahf
sbb
loopne
dec
mov
call
add
and
pushf
lods
push
jg
pusha
lahf
aam
mov
adc
stos
mov
cwtl
jae
cmpsl
vxorps
out
jp
mov
jmp
cmp
pop
mov
xchg
or
push
out
out
jl
pop
sub
push
sbb
inc
pop
mov
dec
fdiv
fcoml
xor
push
test
dec
mov
pop
adc
mov
aaa
loop
test
sbb
cmc
push
dec
pop
lcall
xor
cli
aam
mov
mov
into
xor
mov
or
popf
fldl
in
mov
cltd
jecxz
or
or
jg
mov
xor
xchg
adc
xchg
pop
xor
ja
fcoms
fnstenv
out
jl
div
sbb
pop
jecxz
sub
inc
jle
addr16
arpl
sub
arpl
cwtl
xlat
dec
and
dec
mov
mov
pop
mov
testl
sti
push
popf
inc
mov
cs
repz
psubsb
lods
cmp
mov
xchg
inc
fwait
adc
adc
jp
int
aad
arpl
daa
add
dec
sbb
xlat
mov
inc
or
xchg
stos
outsl
lret
sub
sbb
jecxz
xor
stc
das
mov
arpl
dec
aaa
inc
mov
mov
incb
pop
rcrl
sbb
ja
push
mov
fcmovb
rorl
fdivrs
xchg
jmp
loope
repz
pop
std
push
sub
std
or
cmp
pop
insb
stos
mov
test
nop
adc
js
mov
adc
push
iret
rorb
test
cmp
rcr
andb
fcompl
stos
cmp
iret
and
inc
push
out
faddl
cmp
mov
stos
je
cmp
or
into
pop
int3
xchg
cmp
psubsb
mov
rol
cmc
xor
outsb
loopne
push
imul
gs
push
mov
xchg
push
pop
xlat
xlat
sbb
cwtl
movsb
test
pop
ret
sar
lock
or
add
fwait
cmc
jge
fldt
add
insb
and
jmp
subb
push
jo
jnp
lahf
pop
imulb
mov
fdivrs
xchg
or
call
pop
push
sub
mov
mov
pop
pop
cwtl
shlb
pop
aaa
iret
in
ja
push
jnp
mov
jecxz
jl
sar
ffreep
jge
out
or
xchg
dec
ja
push
sbb
fldt
push
lret
xchg
or
dec
xor
clc
push
pop
dec
lcall
lcall
pop
iret
movsb
mov
mov
push
fldenv
jmp
adc
cli
dec
add
push
sbb
xchg
adc
aas
jg
xlat
rolb
lock
fwait
int
rol
sbb
fsqrt
shrb
pop
xchg
or
and
mov
dec
push
clc
adc
inc
xchg
hlt
sar
popf
decl
mov
loop
rcrb
movsb
xor
in
xor
mov
pop
push
sub
mov
adc
add
cmp
fcomps
pushl
add
add
mov
xor
flds
shr
jae
adc
xchg
sub
cltd
adc
fsubrl
daa
jno
dec
cwtl
outsb
test
lods
sub
ret
enter
cmp
jne
shr
xor
pop
jmp
mov
push
or
or
and
and
aad
rcl
je
leave
lods
iret
test
je
das
into
push
adc
mov
out
or
fmuls
cltd
xchg
shll
popf
add
or
mov
push
addl
nop
jno
xchg
xor
mov
out
pushf
sub
ret
add
pop
popl
and
inc
mov
push
pushf
pop
fcomip
test
sbb
xor
adc
jns
dec
jecxz
sub
das
sarb
aam
inc
loopne
leave
nop
push
dec
out
mov
lds
mov
rcrb
mov
sbb
loopne
fcmovb
ss
push
lods
mov
ret
popf
in
popa
std
in
adc
add
mov
loopne
iret
or
mov
and
or
xchg
in
add
xor
loope
shlb
clc
out
sbb
insl
test
aad
js
lock
dec
mov
lret
test
loop
push
push
fistps
fwait
inc
mov
mov
jmp
out
loopne
movsb
inc
jmp
shr
sbb
dec
pop
xor
dec
mov
push
pop
lret
fstpl
sbb
jge
dec
hlt
neg
pop
pop
sub
arpl
shlb
rorl
shrl
mov
xlat
hlt
dec
mov
fistl
and
dec
inc
mov
test
inc
lock
fucompp
xchg
pusha
push
clc
pop
aaa
jnp
icebp
push
add
jecxz
dec
xor
lock
aas
mov
hlt
jb
jecxz
popa
hlt
jo
sar
lock
clc
inc
sar
je
sbb
pop
lret
cld
push
pop
clc
je
inc
sub
lcall
outsb
push
push
mov
rorb
add
imul
notb
push
scas
hlt
push
pop
mov
xorb
lods
xor
lret
mov
jno
xchg
mov
mov
adc
imul
pop
push
push
mov
mov
lret
sub
lahf
xor
jns
jg
out
aas
test
pop
fsub
xchg
cld
pop
in
test
insl
xchg
fcoms
mov
cmc
dec
dec
sbb
jb
mov
push
lahf
inc
mov
mov
cmp
jl
aam
aad
in
test
mov
aad
out
in
cld
clc
fdivrs
movsb
add
or
and
jg
mov
fs
mov
stos
add
mov
jo
test
push
icebp
mov
dec
mov
mov
mov
dec
cmpsl
movsl
xchg
fidivrl
test
loop
pop
adc
mov
out
cmp
pushf
shrb
push
cli
das
xlat
out
fistpll
in
dec
push
mov
mov
fxch
sbb
pop
lock
xchg
cmp
push
popa
out
icebp
pop
add
mov
xlat
xor
mov
adcb
mov
in
test
mov
xchg
cmp
fwait
dec
loopne
hlt
mov
or
addr16
lahf
rorb
gs
rorl
mov
pop
mov
inc
push
or
out
mov
pop
dec
push
and
aaa
gs
fcmove
or
cmp
lret
js
loopne
or
mov
testb
mov
mov
push
aas
fcmovnb
jg
pop
ljmp
cmp
mov
or
test
xlat
xor
ret
xchg
inc
push
iret
shl
out
jmp
outsb
aam
push
frstor
inc
dec
fwait
or
icebp
xor
and
mov
push
and
sti
bound
mov
xor
dec
mov
shl
jbe
pop
or
or
cs
bound
faddl
sti
mov
iret
jl
xor
cmp
xor
arpl
cmpsb
testb
in
adc
sti
mov
add
gs
push
and
mov
inc
stc
movl
mov
xchg
ljmp
and
cmpsl
ret
jecxz
and
scas
inc
mov
cmp
jmp
cmp
addb
add
push
add
rclb
lods
daa
aam
dec
or
cmpsl
lock
xchg
jo
in
test
and
push
gs
push
movsl
nop
in
es
aad
andl
and
xor
xchg
into
pop
pop
lods
cmpsl
out
call
xchg
ljmp
js
mov
mov
jb
sbb
scas
inc
mov
cwtl
mov
test
jecxz
sbb
jne
mov
into
jmp
xor
fnstcw
fists
xor
xor
lods
filds
mov
sbb
cmp
xchg
and
aad
lods
push
ljmp
mov
je
int3
mov
test
jle
test
cmpsb
cmpsl
in
stos
rorl
iret
mov
mov
adc
or
ja
xor
jg
fisubl
cmp
sbbl
inc
inc
pop
into
aaa
sbb
cmp
jp
pop
xchg
sub
mov
xlat
jbe
fbstp
add
aas
hlt
adc
test
mov
or
cmp
cmc
dec
sbb
cmp
insb
inc
mov
and
xchg
testl
pushf
mov
mov
xor
cmp
ret
cmp
stos
fsub
fsubl
pop
loopne
fs
cmp
push
mov
je
addr16
loopne
or
fmuls
shlb
nop
mul
into
scas
xchg
lods
pushf
scas
xchg
inc
or
mov
pop
adc
xor
dec
inc
mov
dec
or
aad
xor
push
xor
test
and
cmp
clc
aas
xchg
test
mov
jne
cwtl
shll
fsubrp
pop
sub
and
or
aaa
rorl
and
push
jb
cmpsb
lock
xlat
shll
jb
loop
testb
aaa
sub
dec
xchg
inc
iret
xlat
dec
data16
neg
mov
dec
dec
movsb
aad
jo
cmpsl
sub
in
pop
mov
or
lock
aaa
aad
add
push
fwait
mov
and
clc
pop
xchg
imul
out
shl
nop
clc
and
adc
dec
pop
int3
jbe
xchg
adc
int
fs
pop
fistps
mov
add
xor
out
xor
fstp
into
add
out
add
dec
es
loop
call
fldt
add
loope
pop
nop
int
xchg
dec
or
dec
dec
nop
mov
test
dec
add
pop
rcrl
fbld
sbbb
mov
mov
notb
cwtl
shlb
cwtl
jmp
xchg
inc
test
mov
dec
add
mov
dec
cmpsb
insb
shr
push
bound
das
push
cmp
xchg
cwtl
ja
pop
aad
push
lahf
xchg
fsub
cmp
out
mov
pusha
pop
jo
cmp
fcompp
fidivrs
mov
xchg
pop
fcmovbe
aaa
iret
test
lods
push
xchg
in
xlat
daa
ja
lock
cwtl
sub
mov
cmpb
fildl
mov
push
test
hlt
xchg
je
push
and
adc
scas
mov
and
data16
imul
fwait
das
inc
in
arpl
bound
lahf
sbbl
jmp
add
mov
scas
adc
in
sbb
pusha
mov
cwtl
sbb
hlt
aad
mov
inc
push
lods
xchg
add
call
push
xchg
fadd
jae
outsb
mov
xor
dec
cmp
push
cmpsb
leave
mov
dec
xlat
mov
icebp
stos
mov
add
arpl
mov
notb
pop
outsl
mov
mov
outsl
mov
jge
es
mov
pop
xor
mov
out
fcomip
or
mov
cli
rorb
sbb
mov
xor
xchg
jnp
add
jmp
cmc
lea
xor
mov
cmp
mov
mov
sub
pushl
mov
lahf
scas
mov
mov
ja
push
test
hlt
and
adc
cmp
clc
push
les
mov
testl
mov
inc
and
xchg
mov
jl
or
decl
loopne
cmp
ljmp
jmp
push
mov
fsubrl
or
lahf
not
aad
dec
data16
daa
out
mov
push
test
sbb
movsl
xlat
cmpsb
ljmp
cmc
int3
stos
imul
and
aam
test
rorl
fcmovne
gs
pop
jo
xor
or
sahf
jge
dec
cmpsb
mov
nop
lahf
pop
call
push
add
cmp
mov
mov
in
cmpsl
xchg
cmp
pop
in
loope
push
inc
in
inc
out
stos
jg
movsb
nop
ficompl
out
mov
pop
push
imul
jae
fisttpl
pop
jle
inc
mov
fadds
test
ljmp
mov
gs
jmp
roll
lret
mov
pop
std
lock
icebp
cltd
or
leave
adc
aaa
ljmp
lret
movb
sarb
gs
sbb
jle
inc
inc
xor
cmp
pop
addr16
dec
int3
inc
ljmp
fstps
rclb
js
inc
mov
cmpsb
xor
test
xchg
adc
mov
aas
inc
test
xchg
pop
clc
dec
or
sbb
leave
add
int3
les
or
sub
clc
stc
push
bt
pushl
popl
test
cmp
mov
lea
ja
adc
ror
add
test
sub
movsbl
shl
clc
add
jmp
jmp
cmp
dec
sub
in
push
inc
jb
loop
jecxz
arpl
rcrb
andb
enter
adc
cltd
inc
jno
leave
jbe
into
or
data16
cmc
add
pushf
dec
add
in
or
push
gs
add
pop
dec
jns
jno
adc
cwtl
lcall
mov
sub
xor
stos
std
xchg
fisttpll
stc
mov
or
aad
addr16
xchg
js
mov
popf
repnz
push
adc
and
xchg
inc
xlat
add
je
mov
insb
sbb
js
aas
into
testl
xchg
call
sub
and
lds
inc
cwtl
ret
pusha
sbb
mov
pop
inc
cmpb
clc
push
push
mov
insl
inc
add
dec
xchg
or
sbb
jge
push
add
push
ds
mov
push
adc
inc
xchg
sbb
xchg
mov
in
ljmp
pop
into
sarl
adc
or
loope
sti
test
inc
sbbl
push
mov
cmpsb
shll
pop
hlt
jmp
mov
or
repnz
dec
or
cmp
push
lods
pusha
push
jp
mov
call
movl
jmp
mov
pop
pushf
pushf
pushf
pushl
ret
lea
je
jmp
pusha
pushf
movb
mov
movl
jmp
add
dec
cli
movsb
rcll
adc
dec
js
push
pop
fbld
leave
test
mull
sarl
flds
mov
or
addr16
shrl
jge
mov
in
sbb
xchg
push
adc
inc
test
fimull
fiaddl
pushf
lea
call
cmc
call
mov
lea
jmp
xchg
cmc
push
sbb
mov
sti
sub
add
pop
add
cmp
inc
loop
mov
aas
shl
pusha
jecxz
shlb
repnz
jecxz
pop
cwtl
sbb
test
push
jns
push
xchg
aam
int
movb
divb
jmp
xchg
inc
and
pop
mov
mov
lea
jbe
lahf
lea
push
movl
pusha
pushf
mov
mov
pushf
pusha
pushf
pushl
ret
add
adc
std
rolb
sub
aaa
out
or
cmp
xchg
push
mov
arpl
add
xor
arpl
jg
mov
and
test
sbb
rorl
test
sahf
repz
fistpl
mov
cli
pop
or
jl
push
subl
inc
xchg
add
dec
hlt
iret
popf
icebp
pushf
movsl
push
out
jbe
lret
jne
xor
ss
add
inc
cmc
xchg
xor
and
or
add
std
cmp
sub
jb
push
pusha
push
lea
jb
call
shll
test
sbb
sbb
jo
int3
jl
push
or
or
lahf
pop
pop
fisttps
cmpsb
sbb
push
cld
movsl
push
subl
pop
mov
ljmp
dec
mov
or
shll
xchg
fs
or
xor
shll
popa
arpl
in
adc
mov
jo
ljmp
cld
pop
or
sub
test
iret
daa
xchg
ljmp
mov
jmp
mull
ret
jno
ljmp
add
inc
jne
icebp
fimull
inc
and
aas
pusha
mov
call
pop
mov
mov
push
mov
or
add
pop
shrb
xor
lods
imul
pop
cwtl
jbe
out
mov
inc
mov
xor
lock
in
es
fistl
pushf
push
inc
push
std
lods
push
xchg
mov
ret
sub
movzbl
movsbw
mov
movzbw
jmp
stc
inc
pusha
xchg
xor
in
cmpsb
push
add
fiaddl
ds
jmp
mov
mov
imulb
xor
adc
adc
cmp
pop
test
fmull
cmp
jp
clc
and
sbb
xchg
rorl
int
enter
movl
pushf
movb
mov
push
lea
jmp
pushf
movb
call
pusha
movl
push
movl
mov
pushl
lea
jmp
add
bt
movw
cmc
call
mov
call
mov
pushf
jmp
mov
cmp
cmc
cmc
push
and
cmp
jmp
jmp
pushf
call
pushf
pushf
mov
pushl
push
mov
not
movsbl
movsbw
push
movl
call
mov
mov
movb
movw
pushf
pushl
ret
lea
jne
cwtl
shld
neg
bswap
sub
shr
movsbw
neg
cwtl
mov
neg
inc
add
rcr
cmp
push
shr
mov
clc
test
pushl
lea
je
call
lea
clc
mov
push
mov
pusha
cmc
repnz
jmp
pushf
push
movl
xchg
movzbl
jmp
pusha
pusha
call
xchg
call
mov
jmp
lea
ja
call
call
pusha
pushf
bt
cmp
add
jmp
imul
gs
xor
cs
insb
add
clc
pushf
cmp
call
pushf
pushf
cwtl
lea
lea
movw
lea
jae
pusha
mov
jmp
sahf
cmp
cwtl
enter
jae
push
jle
pop
add
popl
test
imul
push
add
hlt
add
pop
sbbl
out
xchg
fisttps
inc
mov
mov
or
jbe
out
stos
jmp
nop
into
push
stos
pop
adc
lock
pop
adc
dec
in
and
out
pop
dec
cli
and
or
dec
inc
jmp
cli
mov
mov
cs
je
mov
pop
sub
in
jne
xor
out
jae
jns
fiaddl
pop
scas
add
movsb
rcrb
lock
mov
sarb
pushf
aaa
ja
pop
imul
test
ja
js
push
jo
jge
ret
decl
mov
and
add
mov
jle
js
cmc
mov
add
aaa
and
andl
mov
lea
je
test
cmc
pushf
add
pushf
pusha
push
call
lea
ja
clc
sub
rcr
shl
add
and
call
jmp
cli
pushl
in
adc
jmp
ds
loope
aad
gs
mov
insb
sbb
mulb
cmc
and
mull
push
mov
movsl
pop
adcl
mov
popl
iret
jl
nop
mov
repz
scas
sbb
data16
xchg
es
mov
xlat
xorb
push
leave
into
cwtl
int
outsl
xchg
cmp
mov
cmpb
and
fwait
xlat
xchg
xor
jge
lret
pop
pushf
fadd
loop
mov
nop
cmp
mov
sub
xlat
lret
out
xchg
daa
in
in
lea
imul
and
mov
push
dec
cli
loop
in
sub
jns
push
mov
stos
add
push
sbb
enter
dec
jmp
cmp
popa
pop
test
inc
inc
xchg
mov
push
dec
stc
and
or
js
push
mov
cli
and
ds
mov
bound
push
or
mov
mov
test
cmc
push
movzwl
movsbw
sar
call
lea
jb
cmp
cmp
pusha
lea
jle
cmpb
pusha
jmp
lcall
and
in
lock
lret
lret
jp
outsl
pushf
fnstcw
or
lods
mov
inc
push
popf
movsl
in
xor
out
popf
dec
inc
pcmpeqw
fnsave
jns
and
insl
je
or
inc
lahf
add
aam
in
jmp
ret
jo
fistpl
dec
cli
cmc
subl
pop
mov
push
mov
dec
or
leave
jl
dec
mov
fcomps
cmpsl
xor
add
or
pushf
call
movl
movb
lea
jmp
lea
je
call
lea
ja
inc
pushf
inc
movb
inc
and
jmp
dec
mov
bt
pushf
call
sbb
hlt
xchg
mov
jns
jmp
or
jns
hlt
ret
jmp
jns
xchg
jns
hlt
and
fwait
jns
hlt
sbb
mov
sbbl
jns
jmp
sbb
mov
and
xchg
jns
ret
jmp
jns
ret
mov
or
jns
adc
pushf
push
pushl
popl
pushf
push
pushl
ret
jmp
pushl
popl
movw
movw
mov
pushl
ret
lea
call
je
pusha
movb
adc
jmp
jmp
add
add
sub
or
jmp
stc
or
pushf
lea
jne
bswap
rcl
sub
movzbw
mov
cmc
stc
or
call
repnz
pushf
pushf
pusha
lea
jne
cmp
movzbw
not
mov
shl
bsr
rcl
push
sub
adc
lea
add
pushf
jmp
call
sub
mov
jmp
inc
call
jmp
call
pop
cmpsl
sbb
sbb
lea
daa
rorl
imul
sbb
jno
mov
iret
mov
lds
jae
push
add
repnz
lahf
movsb
lret
loop
xchg
pop
jnp
stos
inc
in
mov
imul
lret
jns
lahf
in
push
push
pusha
imul
cltd
pop
xchg
push
mov
mov
mov
iret
mov
not
mov
pushl
mov
call
call
add
addb
add
movsl
sbb
add
pop
push
add
in
adc
add
sub
add
add
add
stos
leave
or
dec
clc
add
sub
sbb
mov
lea
movzbw
add
push
movl
movsbw
shl
mov
mov
stc
call
jmp
call
pushl
cmp
pushf
push
pushf
lea
jae
push
pushf
lea
jle
cmp
add
call
lea
call
call
lea
je
not
lea
pushf
movzwl
not
pop
bswap
lea
mov
bswap
movzbl
mov
pusha
lea
call
pusha
pushf
movl
lea
jne
call
lea
je
cmp
test
push
pushl
add
pusha
bt
test
cmp
push
lea
jb
pushf
bt
cmp
movw
mov
lea
jae
sar
cmc
mov
adc
rcl
inc
mov
setne
mov
jmp
call
in
sbb
fst
cld
or
lock
adc
xchg
pop
xor
lods
mov
outsb
popf
dec
cld
and
addr16
loope
popa
mov
dec
lahf
lret
push
aas
cmp
inc
das
fisttps
inc
and
mov
lret
jns
mov
fstpl
push
test
gs
lods
pop
pop
mov
je
sub
data16
das
cmp
pop
xor
push
jp
xchg
shr
push
push
cmp
neg
aas
imul
xchg
arpl
cmpsb
or
fistps
ficoml
sarb
into
dec
popf
cmpsb
sub
xchg
int
mov
jne
sbb
out
lret
imul
cmpsb
inc
push
daa
into
inc
stos
jb
xor
sbb
stos
push
mov
cltd
je
sub
pop
loope
mov
in
add
mov
outsl
sub
push
dec
clc
mov
jne
sub
push
sbbb
ret
jno
dec
jnp
jg
inc
cmpb
and
inc
pushf
clc
rol
ror
shr
shl
dec
xor
pushf
dec
mov
inc
not
push
call
call
movb
jmp
jmp
pushf
bt
cmp
stc
mov
call
inc
xchg
xadd
neg
add
mov
bt
or
xor
mov
pusha
mov
rcl
shld
mov
movb
sub
movw
rep
jmp
pusha
push
lea
jb
pusha
test
clc
movb
cmp
mov
lea
ja
cmc
call
lods
clc
cmc
push
jmp
pusha
movb
stc
cmp
movb
jmp
pushl
push
call
pushf
jmp
pushf
push
movw
lea
jne
shr
bsr
pusha
mov
pusha
bt
cmc
or
jmp
mov
in
xor
or
xchg
mov
sub
pop
xorb
sbb
adc
lods
pop
mov
jbe
cltd
cmc
xor
inc
mov
repnz
pop
mov
mov
subl
jmp
fs
jo
fistps
rorb
inc
cmpb
daa
mov
pushf
movl
pushf
pushl
popl
pushl
pushf
mov
movb
pushl
ret
pusha
shl
pushf
lea
je
jmp
push
movl
mov
pushf
lea
jmp
test
xchg
sbb
in
mov
mov
js
stc
xor
je
sbb
add
push
add
cmp
xchg
mov
and
sti
or
mov
add
mov
or
jae
jbe
mov
jmp
add
mov
mov
inc
push
add
add
imul
loope
push
mov
push
adc
movl
mov
cmp
fld
loope
shr
mov
cmp
cmp
jmp
stc
pushf
cmpb
pusha
call
pushl
push
lea
jb
pushf
cmp
push
pusha
pushf
push
lea
jae
btr
mov
dec
shld
rcl
mov
movsbw
push
mov
movb
bt
xor
pushf
repnz
pushf
lea
jmp
add
std
stos
xlat
xchg
cmp
mov
sahf
adc
lret
adc
jae
leave
repnz
mov
cmp
ret
mov
lea
inc
fmull
or
nop
mov
xchg
cmp
mov
pusha
pop
roll
mov
shll
sub
or
fisttpll
and
js
ljmp
js
test
or
xchg
inc
sti
xor
pop
je
sbb
jp
in
sub
das
loopne
cmp
jl
jno
xlat
add
pushf
arpl
hlt
jl
fsts
scas
fst
outsl
adc
int3
or
push
lds
frstor
rorb
in
dec
stc
roll
push
cmp
jl
fsts
outsl
and
jecxz
mov
test
aaa
iret
mov
mov
or
push
out
sub
xchg
and
outsb
sarl
stos
mov
mov
ja
stos
xchg
popa
dec
dec
movsl
cli
cmpsl
or
enter
dec
hlt
cld
push
mov
ret
stos
mov
jne
jbe
ja
mov
aad
push
xor
and
xchg
pushf
xchg
movsb
xor
popl
sub
std
push
das
lea
sbb
add
movsl
inc
cli
decl
or
or
sub
push
ficompl
pop
adc
xchg
dec
or
xchg
xchg
pop
or
mov
or
enter
add
push
push
jmp
ret
sub
bt
cmp
pushf
jmp
mov
lea
mov
call
movb
xchg
mov
pop
jmp
xor
cmp
repnz
pusha
pushf
push
mov
lea
jmp
push
stc
cmc
stc
or
call
cwtl
pusha
call
call
pop
dec
mov
push
bt
cmc
bt
cmp
push
movb
pusha
lea
jbe
sbb
mov
stc
call
not
test
add
bt
jmp
movw
lea
jne
mov
pusha
mov
setle
mov
pusha
mov
mov
pushl
lea
jmp
mov
pusha
lea
jmp
push
or
call
jmp
shlb
movsl
pop
sbb
fimuls
cmp
or
jb
gs
popa
stc
cld
test
inc
jae
adc
xchg
sbb
sbb
hlt
and
subl
and
ss
dec
xchg
dec
xor
loop
mov
call
jno
bound
pop
or
mov
inc
jmp
xchg
jb
dec
adc
mov
pop
sbb
dec
or
add
add
and
inc
movl
call
int3
push
sbb
hlt
push
lret
push
add
push
add
push
je
push
jg
jmp
clc
cmpl
aaa
fdivs
shr
or
push
out
add
mov
and
push
aam
arpl
fs
sbb
and
mov
xchg
fiaddl
js
jbe
int3
mov
push
inc
jle
jno
insb
cmpsl
out
mov
add
jae
mov
mov
pushl
test
movzwl
shld
shld
shld
mov
movl
add
test
test
mov
call
movb
mov
cmc
pushf
cmc
jmp
btc
cmp
rcr
mov
bt
clc
test
cmp
jmp
lea
je
movsbw
movsbw
mov
mov
movzbl
lea
lahf
push
jmp
mov
pusha
call
xor
jmp
mov
call
movsl
add
mov
sbb
and
add
incb
cmp
sbb
js
push
shll
addr16
mov
into
jp
inc
stc
int
push
cmp
pop
push
push
sti
cmp
cs
sub
xor
sub
das
ljmp
sbb
xchg
ret
int
mov
subl
cmp
cmp
push
xacquire
sub
add
shrb
or
mov
pop
out
es
xchg
cmpsl
cltd
js
mov
stc
dec
sti
pop
das
jnp
jbe
adc
les
sbb
cmp
outsb
lods
push
in
pushf
jg
subb
cmp
cmp
pushf
pushf
lea
ja
call
mov
in
sti
sub
scas
fisttpll
mov
adc
jmp
icebp
push
push
add
mov
jno
adc
jg
add
xor
xchg
jmp
ss
stos
pop
or
cli
sbb
repz
int3
or
add
jns
repnz
add
adc
nop
jns
xor
pushl
pushf
mov
pushl
ret
lea
call
ret
pop
aam
sbb
enter
jnp
cmp
stos
test
cmp
xchg
sub
cmp
and
lahf
iret
jp
gs
iret
stos
and
mov
xor
subb
pop
mov
and
mov
out
lcall
pushf
cmp
mov
pop
mov
sub
inc
adc
inc
test
sbb
shrl
mov
fs
inc
sbb
cmp
aaa
inc
jl,pn
inc
inc
push
add
bound
dec
push
add
dec
cld
cmp
fcompl
add
hlt
out
pop
xor
iret
cli
dec
sub
push
adc
test
std
notb
fadds
andb
shl
clc
not
mov
clc
test
cmp
mov
pushf
lea
jb
push
push
push
cmp
pusha
push
lea
ja
push
bt
cmc
add
cmp
or
pusha
pushl
push
jmp
lea
je
pushf
jmp
pusha
call
jmp
lea
ja
stc
pushf
imul
pushf
mov
lea
jmp
mov
lea
ja
pushf
movb
lea
jb
pusha
cmpb
pusha
lea
jne
shl
mov
clc
clc
call
pushl
lea
je
stc
mov
add
pusha
call
dec
call
pushf
mov
movl
call
pusha
stc
call
add
dec
sti
cmpsb
push
add
xchg
arpl
cmp
pop
xchg
pushf
inc
add
xor
mov
or
not
cmc
jo
xchg
int3
bound
push
jl
fidivrs
fldcw
xchg
into
xor
iret
jl
pop
xchg
aam
sbb
pop
lods
jb
fcmovu
iret
and
and
jbe
add
lcall
add
pop
xchg
mov
mov
aaa
mov
inc
xchg
rolb
outsl
pop
negb
ss
hlt
cwtl
divb
cmp
push
add
les
push
jg
sub
xor
leave
divl
mov
sub
mov
jmp
into
sub
lods
pop
inc
pushf
dec
cld
xlat
jne
cli
and
and
cmpsl
shrb
lahf
scas
add
daa
int
adc
jmp
imul
insb
shrl
mov
xchg
lret
and
sbb
jae
clc
es
out
js
jne
std
sub
outsb
popa
repz
xor
and
cmp
movsb
lods
pop
adc
lods
bound
jp
cmp
cli
xchg
sub
inc
cltd
mov
fildl
or
push
push
gs
lahf
leave
mov
out
lahf
pop
insl
pusha
ret
repz
xchg
iret
stc
dec
std
sub
enter
loop
push
xchg
inc
dec
jnp
cltd
sarl
mov
int3
jnp
imul
cmpsb
cltd
out
push
mov
jle
push
jno
cmc
and
pop
adc
or
ss
xor
mov
xchg
movsl
popf
dec
xchg
push
lea
jne
jns
stos
pushf
pusha
movb
lea
jmp
lea
je
pusha
lea
jmp
adc
in
or
or
lcall
mov
jnp
push
cmpb
cld
lods
add
popf
inc
xchg
push
or
outsl
push
test
ljmp
ret
inc
in
lods
insb
iret
stc
cmp
fistl
sub
mov
movsl
and
mov
cmp
std
push
subl
or
fisubrs
or
add
fs
cmp
jns
or
fistps
push
aad
int3
mov
add
jnp
mov
xchg
dec
les
push
xchg
dec
mov
lea
jne
stc
sub
btr
shr
mov
xor
add
mov
neg
add
neg
mov
js
bt
clc
pushf
test
mov
jmp
movl
lea
jne
and
bswap
adc
sar
mov
cmp
cmp
cmp
add
bt
movzwl
push
jmp
jmp
ja
dec
adc
in
imul
xchg
aad
addr16
daa
out
jnp
jmp
jns
and
mov
lret
cmc
pop
xorb
scas
fldl
cli
xor
sub
jecxz
pop
xchg
xchg
cmp
call
push
bt
add
pushf
pushf
lea
jne
mov
pushf
pushf
call
pushf
movb
adc
jmp
lcall
dec
repz
dec
mull
adc
loopne
jae
aad
fidivrl
mov
subb
out
dec
push
add
fnstcw
fcoms
je
loopne
ret
pop
or
int3
mov
mov
mov
movsb
das
or
aaa
xor
cmp
mov
movsl
ficoms
jp
inc
mov
cmc
push
xchg
push
add
xchg
out
cmpsl
arpl
fistps
inc
test
pop
adc
adc
xor
jmp
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
hlt
pusha
lea
jmp
stc
add
sub
pushf
clc
or
push
jmp
pusha
call
pushf
call
push
lea
jne
pusha
bt
mov
bt
jmp
pushf
movl
push
pusha
pushf
lea
jmp
pusha
lea
jae
jmp
lea
jae
bsr
mov
test
ror
mov
test
mov
call
lea
je
pusha
lea
jmp
pushf
cmp
pushf
or
call
lea
jne
inc
lea
mov
mov
dec
lea
sub
adc
mov
pushf
call
cmp
pusha
mov
lea
je
pusha
lea
jae
bt
cmp
push
lea
jae
test
cmp
pusha
pusha
lea
ja
not
jmp
movb
mov
adc
pushf
mov
push
lea
jae
jmp
cmpb
pushf
jmp
dec
lea
jbe
pushf
pusha
push
lea
call
call
push
repnz
sbb
fadds
mov
ret
cld
pop
mov
je
add
add
shlb
aad
arpl
jo
dec
es
out
roll
scas
push
adc
and
cli
push
jns
cltd
xor
add
cmp
cmp
mov
pop
sbb
cmpsl
dec
aas
in
cmpsl
loope
jge
cld
inc
pushf
call
movl
mov
pushl
popl
movb
pushl
ret
stc
or
jmp
call
pushf
pusha
lea
je
push
pushf
clc
cmp
call
mov
pushl
push
test
xor
test
pushl
repnz
jmp
call
pusha
movl
call
mov
pushf
setnp
pusha
jmp
lea
ja
jmp
loope
mov
sbb
daa
push
add
push
xor
or
leave
scas
adc
xlat
mov
mov
incb
mov
mov
mov
imul
lcall
in
mov
or
fs
lods
push
pop
movq
mov
dec
mull
sub
lret
cli
cmc
fiaddl
push
jno
outsl
sarb
popa
push
pop
sbb
adc
mov
decb
idiv
stc
xor
clc
repnz
movb
push
lea
jmp
pushf
test
call
cmp
in
mov
nop
cmp
xchg
mov
or
jno
or
fwait
push
or
xor
fisttps
cmpb
sub
shll
or
jne
pop
push
jmp
ret
inc
pop
xchg
arpl
hlt
ret
insb
xchg
jg
and
arpl
adc
je
xor
out
lcall
testb
adc
push
cli
pop
mov
aam
lds
jl
mov
xchg
mov
cmp
out
sbb
ss
sbb
dec
lods
add
xchg
out
sbb
sbb
xor
ret
fstps
push
xchg
dec
or
ja
jo
andl
or
jmp
rorb
in
sub
in
ds
sbb
test
aas
mov
gs
adc
leave
mov
fsubrs
int
outsl
pop
mov
and
xor
fcoml
inc
jl
ja
sbb
push
out
mov
mov
cli
movsl
push
subb
jp
and
dec
movsb
stc
sub
fnstcw
lret
mov
or
test
test
aaa
hlt
push
xorb
add
lods
jmp
jp
pop
push
add
shrb
ficomps
push
add
mulb
inc
add
std
mov
mov
mov
pusha
lea
je
push
push
lea
jmp
shr
pusha
jmp
stc
add
lea
add
adc
mov
call
movl
lea
je
test
cmp
call
pop
imulb
sbb
faddl
inc
popf
call
xor
inc
cmc
cli
push
push
jb
and
ret
out
fwait
inc
repz
lea
push
pop
pop
sub
dec
fisttps
mov
data16
sbb
movl
push
lods
fdivs
pop
cmc
inc
xchg
je
loope
push
xchg
insl
mov
jbe
or
sahf
mov
ljmp
xchg
fs
aad
lret
dec
mov
pop
pop
lcall
lahf
sub
ja
mov
leave
pop
or
xchg
mov
sahf
xchg
out
stos
jg
mov
adc
repz
in
inc
addl
jae
addr16
movsb
arpl
pop
jnp
out
lea
je
pushf
jmp
test
call
ljmp
sbb
jle
fcomp
int
cmp
imul
cmpsl
dec
clc
mov
cmp
xchg
push
test
adc
jmp
and
cmpsl
sub
insb
dec
aam
fisttpl
adc
pop
cmpsb
ja
stc
add
inc
cwtl
aam
push
in
hlt
popf
cmc
and
jp
les
hlt
push
lods
outsb
jb
lret
fstps
ret
out
lods
addr16
pop
xchg
push
dec
push
stos
pop
les
dec
xchg
repz
xlat
adc
push
in
popa
or
in
xorb
mov
fs
fdivrs
in
add
adc
negb
in
stos
add
pop
xor
sub
jp
fs
cmp
js
xor
icebp
xor
mov
push
popa
and
or
outsl
cmp
add
inc
and
lahf
add
movb
call
lea
jb
call
test
repnz
pushf
push
push
pushf
lea
jmp
lea
ja
pusha
cmc
imul
pushf
lea
jmp
lea
je
test
sub
cmc
pushf
pushf
cmp
call
lahf
setg
lea
pushf
call
lea
je
push
lea
movzbw
pushf
lea
not
lea
movzwl
push
pop
call
bts
xor
btr
sub
mov
call
or
jmp
jmp
lea
call
pushf
lea
jmp
lea
ja
push
push
jmp
or
lea
imul
out
sahf
dec
js
mov
in
mov
inc
andl
adc
jbe
imul
cmp
in
jl
pop
mov
or
in
jg
cmp
xor
out
loope
inc
pushf
lret
ja
cmc
jbe
inc
loop
adc
and
cmp
xor
das
out
lods
imul
in
mov
jg
call
test
sbb
js
aam
das
flds
loop
aas
fisttpl
addr16
rcll
jmp
test
rcll
mov
jge
mov
mov
movb
mov
lock
sbb
xor
mov
lahf
push
mov
and
dec
xchg
mov
dec
lahf
jo
pcmpgtb
cs
arpl
sub
aam
push
or
mov
or
ror
bt
clc
cmp
not
cmc
push
cmp
test
add
clc
clc
cmp
not
lea
push
setne
bswap
call
lea
je
jo
clc
stc
stc
add
stc
stc
pushf
stc
cmp
push
push
mov
lea
jb
call
repnz
mov
movb
lea
jmp
lea
jne
bswap
shl
mov
cmp
or
call
jmp
pushf
lea
jb
bt
cmp
jmp
push
pushf
mov
push
pushf
mov
pushl
ret
call
inc
mov
dec
cld
movsl
rolb
inc
ss
xlat
sub
mov
sti
stos
or
inc
ds
sbb
repnz
dec
mulb
lea
ret
xor
ja
dec
test
dec
test
test
mov
jb
aas
add
cmp
call
mov
push
sbb
pop
or
cmp
mov
jo
xor
fwait
arpl
add
iret
clc
movsl
sar
pop
mov
dec
jns
pop
mov
insb
outsb
push
mov
aas
out
lock
fs
dec
push
inc
cmpsb
into
lret
repz
in
fisubrl
fcmovbe
sub
sub
push
dec
inc
sbb
lcall
ret
icebp
jmp
cmp
movb
in
pushf
pop
hlt
sbb
dec
test
jno
jne
inc
mov
pop
mov
inc
orb
or
hlt
js
inc
sar
xchg
inc
xor
lea
mov
jnp
and
pop
push
xor
and
cltd
rclb
iret
or
mov
fcomi
jg
inc
mov
add
in
subb
jge
push
jge
pop
or
push
add
dec
sti
scas
cmpsl
push
add
shll
int
sub
mov
or
pop
add
stos
aam
inc
mov
xor
jb
bound
fcoms
int
inc
cmpb
dec
and
cwtl
jmp
movl
pushf
jmp
mov
pushf
jmp
mov
cmc
cmc
cmp
cmc
shl
jmp
xor
call
pusha
movl
inc
pushl
pushf
call
jmp
mov
sbb
mov
cmc
repnz
pusha
pusha
lea
jne
bswap
setg
movb
pusha
mov
not
lea
mov
lea
push
movw
call
push
pusha
jmp
pusha
mov
pushl
pusha
movl
pushf
mov
jmp
jp
mov
sbb
cld
sub
mov
xchg
loopne
dec
mov
mov
mov
repnz
stc
and
sti
sub
adc
inc
cmp
xor
sub
and
leave
jbe
lock
fs
jne
not
mov
pushf
pusha
movw
movb
lea
jmp
call
or
in
aas
imul
push
jno
lret
pop
cmp
ja
jl
or
mov
fmull
inc
jp
sti
push
sti
xor
mov
pop
je
into
mov
and
cmp
push
cmc
fbld
in
pop
mov
sub
xchg
cmp
inc
cltd
fwait
mov
mov
sbb
mov
popf
fbld
fisttpll
movsl
je
adc
mov
or
cmp
cmp
je
mov
dec
mulb
mov
push
arpl
xor
out
or
dec
xchg
mov
out
jecxz
jge
test
sub
xchg
add
in
xorl
jns
or
inc
out
fwait
out
adc
pop
in
jno
dec
repz
dec
cli
cmpsb
push
add
je
cmc
xor
jg
shl
xchg
cltd
pop
push
pop
sbb
bound
xchg
xor
ds
inc
inc
daa
mov
cmp
mov
fst
xchg
mov
cli
cmp
xor
imul
in
lret
lret
push
addb
fisubl
movsb
push
sub
lock
stos
push
subb
adc
popa
sub
call
ret
xorb
flds
rcll
mov
or
push
ljmp
ds
mov
or
jmp
jl
lods
mov
std
sub
stc
aaa
cmp
fs
cmc
iret
jg
mov
add
imul
dec
add
inc
mulb
ja
popf
shld
neg
btc
mov
test
jmp
sub
cmp
sbb
lods
pop
or
fmull
mov
or
cld
sub
mov
cmp
ds
dec
jbe
into
jl
loopne
mov
xor
cwtl
js
daa
or
sti
or
push
jl
mov
mov
imul
mov
cld
rcl
dec
out
loop
inc
push
jns
cmp
jno
icebp
and
cmp
jecxz
jae
cmpl
mov
into
mov
popa
mov
lock
in
daa
loope
pop
xchg
rorb
pop
popf
xchg
fsts
add
in
shr
inc
jbe
dec
hlt
pop
dec
sti
stos
push
xor
mov
jae
or
jmp
push
jg
sets
flds
xor
jo
jnp
pop
test
sbb
call
shlb
inc
add
inc
dec
fadds
scas
in
sub
sbb
sbb
bswap
test
push
cmp
in
mov
xchg
jno
and
aam
jge
add
lret
or
add
or
test
jb
repnz
add
adc
imul
inc
cmp
xchg
dec
mov
sahf
fs
xchg
mov
or
adc
out
and
cmp
pop
jb
and
jns
std
iret
pop
pop
sub
gs
subl
jl
sarb
ficoms
mov
cmpsl
lds
cmp
and
push
xchg
int3
mov
pop
adc
loopne
add
iret
or
cmp
push
lea
jae
xadd
mov
shr
rol
movsbl
mov
and
sbb
mov
stc
push
movl
xor
call
mov
bt
rcl
pushf
mov
inc
or
pushf
test
mov
pushf
neg
rcr
inc
sub
lea
push
push
pusha
pushf
lods
not
inc
dec
call
pushf
movb
pushl
popl
movb
pushl
ret
push
dec
jmp
cmp
pusha
lea
ja
call
call
movb
movb
movl
pushl
pushl
lea
jmp
push
movl
jmp
pushf
rep
not
pushf
jmp
pushl
call
xchg
xor
nop
aas
outsb
push
dec
mov
sbb
lods
idivl
and
xchg
into
and
ja
int3
jp
iret
jns
dec
sti
cmpsl
cli
int3
xor
inc
mov
aas
jp
jnp
mov
in
push
fcomps
mov
sub
sbb
mov
push
nop
push
or
mov
mov
in
in
cltd
jae
int
sti
out
xchg
push
mov
ret
adc
pop
adc
and
push
jge
nop
inc
imul
inc
inc
jns
nop
dec
cmp
jmp
fs
pop
imul
das
xchg
cmp
sub
ja
outsb
dec
pop
dec
mov
xor
jae
xor
sbb
imul
jnp
or
incl
insl
dec
pop
and
rolb
jecxz
bound
iret
popf
cmc
pop
test
xchg
inc
stos
push
mov
lret
inc
in
pop
push
adc
pop
inc
pop
cmc
mov
inc
jmp
push
orl
mov
movsb
int
inc
cmpsb
iret
cmp
cmpsl
push
repnz
jns
ss
fcompl
cltd
sbb
cmpsl
in
push
xor
xchg
pushf
movsb
shll
test
ss
bound
push
repnz
mov
dec
jle
addr16
outsb
xchg
cli
daa
push
mov
inc
add
call
jge
jb
pop
xchg
jbe
cmp
xchg
cmp
pushf
dec
je
sarl
jl
fucomip
jmp
and
outsb
call
lea
lcall
xor
addr16
arpl
inc
addl
testl
aas
std
out
jmp
inc
mov
xchg
adc
insb
lcall
outsl
sar
cmp
repnz
dec
jns
dec
js
rorb
and
dec
lcall
dec
add
jmp
jge
mov
stc
inc
jbe
cld
push
sahf
int
jmp
jge
in
clc
sahf
fstl
mov
sbb
push
inc
in
adc
jne
mov
stc
xor
pushf
int
in
jbe
push
add
fildl
call
lahf
push
scas
pop
or
cwtl
daa
adc
inc
jo
add
or
hlt
push
mov
fsubrp
xchg
push
scas
hlt
xchg
ret
ja
imul
xchg
add
mov
sub
mov
std
push
add
insb
sbb
repnz
jmp
push
dec
je
push
add
clc
xor
ljmp
nop
fisttpl
dec
mov
clc
pushf
add
pushl
call
rep
movsbw
movsbw
pop
call
movw
lea
jne
cwtl
lea
mov
pusha
lea
jmp
pushl
lea
push
movsbw
pop
not
mov
mov
lea
call
pushf
jmp
pushl
popl
push
pushl
pushl
pushl
ret
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
movsbw
mov
pusha
push
lea
call
ja
pusha
lea
jne
pusha
movsbw
mov
pusha
pushf
pushl
pushf
lea
jmp
pushf
push
pusha
jmp
adc
mov
lea
call
push
pusha
pushl
lea
jb
push
push
pushl
ret
pushw
popfw
mov
inc
call
movb
movl
mov
pushf
pusha
pushl
popl
movw
pushf
pushf
pushl
ret
call
movl
mov
lea
jmp
pushl
xchg
movzbw
pushl
popl
jmp
mov
call
sbb
fwait
ret
jmp
fstpt
and
xchg
hlt
and
fwait
jns
hlt
sbb
mov
sbbl
jns
jmp
sbb
mov
and
xchg
jns
ret
jmp
jns
ret
mov
or
jns
adc
cmc
add
jmp
incl
stc
sbb
insl
sbb
jle
push
ljmp
add
mov
pop
xor
add
dec
jno
clc
bound
jb
cld
daa
push
out
or
add
jns
dec
mov
addr16
pop
sti
inc
mov
js
sbb
negb
arpl
ret
or
mov
and
jle
inc
outsb
ret
jae
loop
ficomps
inc
add
stc
pop
or
loop
insl
cwtl
push
adc
xchg
jne
push
cwtl
not
mov
movzbw
push
movzbw
mov
movl
mov
lea
jmp
call
call
pushf
mov
mov
jmp
pushf
add
pusha
lea
jmp
add
dec
outsl
popa
fs
imul
add
add
fadds
push
or
jmp
pusha
pushf
movl
push
push
push
pushl
movl
push
pushf
push
lea
jmp
call
jmp
es
clc
sbb
or
arpl
je
cmp
xchg
inc
inc
jp
fistpl
push
add
repnz
add
mov
adc
mov
xchg
xchg
dec
push
lea
inc
add
mov
in
jmp
loopne
jmp
movsl
cmp
roll
jns
je
ret
lcall
xor
adc
pop
cwtl
in
pop
bound
pusha
rcl
cmp
cmpsb
push
jg
fimuls
mov
decb
xor
pop
in
and
jecxz
jns
mov
jecxz
xor
push
orb
call
icebp
and
jnp
out
and
lods
fwait
cmp
test
xor
mov
pop
test
xchg
jmp
sbb
jae
lret
fdivl
pop
cwtl
sub
mov
negl
in
sbb
jb
enter
pop
inc
xchg
rcrb
mov
add
sbb
cmp
push
das
pop
mov
mov
lods
fwait
xor
jne
cs
stos
and
cmp
lcall
push
jbe
jns
mov
int
ja
xchg
ret
jo
gs
pop
cmpsb
push
xorb
pusha
adc
fxch
cld
cmp
lret
test
and
mov
mov
dec
add
jl
je
int
mov
mov
mov
out
xchg
icebp
pop
add
pusha
cmpb
movw
movb
mov
lea
jne
sub
mov
cmp
pusha
pushl
add
pusha
cmc
movzwl
push
mov
pushf
test
clc
add
push
mov
call
pusha
pusha
movl
push
call
out
dec
negb
in
fs
cmp
mov
and
cld
cwtl
in
pop
mov
lcall
ljmp
popl
fs
loop
mov
jmp
pushf
pop
xchg
xor
cmp
jbe
pop
push
inc
les
pushf
movw
movb
lea
ja
pusha
push
movl
lea
jb
call
dec
mov
cmp
pusha
pushl
cmp
lea
js
pusha
mov
pusha
lea
jb
stc
call
pushf
pusha
mov
jmp
pusha
mov
mov
pushf
lea
jmp
pusha
jmp
btr
rcr
push
aaa
ror
bts
aaa
mov
shrd
bt
sub
btr
mov
pusha
mov
mov
pusha
bts
mov
bt
sbb
mov
shl
mov
setg
shl
pushl
bt
mov
push
pushf
bt
test
pushl
jmp
movl
push
pushl
popl
pushl
pushl
ret
pushl
popl
mov
pushl
ret
xchg
xchg
or
sbb
inc
jae
lret
cli
and
add
pop
or
pop
pop
dec
mov
cmpl
shll
sub
and
sub
mov
dec
cli
pop
roll
stos
mov
jne
push
and
push
add
jo
push
arpl
cmp
jmp
and
call
pushf
pusha
pushf
jmp
clc
test
call
cmp
bt
or
pusha
pushf
call
movzbw
bsr
inc
btc
mov
cmp
test
test
cmpb
push
pushl
call
not
call
lea
call
jnp
pusha
movb
pushf
mov
pushf
push
pushf
lea
jmp
call
pushf
lea
jae
inc
clc
shl
mov
rcl
mov
ror
shl
btr
mov
pushf
xor
test
jmp
cmp
mov
push
push
pusha
lea
jae
call
add
sbb
mov
mov
shl
sbb
addr16
jle
cld
flds
data16
movsl
in
jmp
daa
push
add
filds
mov
pop
dec
in
xor
cmp
mov
das
or
popa
push
test
imul
stos
fcoms
mov
cli
cmc
adc
std
pop
adc
push
adc
xchg
mov
push
xchg
push
or
mov
push
add
std
add
imul
movsbw
bswap
movsbw
mov
movw
pushf
push
movb
lea
jmp
test
push
sub
bt
cmp
clc
pushl
popl
test
mov
cmp
call
xor
pushf
push
jmp
imul
movb
pushl
stc
clc
add
movb
pusha
lea
jmp
movl
call
call
pushl
mov
or
lea
jbe
je
ror
bt
adc
call
stos
or
sahf
dec
icebp
lahf
dec
jnp
jmp
loopne
loopne
cwtl
cltd
fdivl
loope
sbb
inc
insb
pushf
enter
je
lock
lods
inc
insb
cltd
stc
lods
cmp
dec
dec
push
inc
jge
stc
sti
out
pop
and
addr16
cltd
fsubl
shrb
dec
cltd
add
loopne
pop
adc
arpl
ficomps
xchg
pop
repz
js
into
jle
xlat
test
repnz
inc
out
cmp
xchg
dec
cltd
xlat
sub
mov
xchg
repz
jecxz
stos
push
adc
pop
push
subb
into
das
fistpl
pop
mov
rclb
imul
test
rol
repz
add
jne
add
xor
dec
add
iret
enter
jo
add
pop
add
inc
lahf
dec
js
bound
js
es
push
cmp
in
hlt
mov
lret
test
jb
dec
add
push
mov
fstpl
lea
jbe
bswap
mov
not
add
setns
jmp
je
test
call
mov
movb
pushf
movb
pushl
ret
jmp
lods
lock
dec
push
xor
in
inc
xor
sbb
push
into
in
pop
in
xchg
stc
pop
mov
adc
jb
add
lods
sbb
int
add
jl
push
jge
xchg
mov
fadds
inc
sbb
out
mov
test
sahf
xchg
push
push
mov
lahf
jmp
adc
out
push
jbe
dec
mov
ds
int3
dec
inc
aad
bound
dec
in
fimuls
loope
repz
ret
in
scas
jge
mull
xor
dec
cmpxchg
pop
sub
inc
arpl
shr
nop
rcrl
or
cmp
repnz
and
std
mov
nop
pop
inc
mov
xor
mov
and
and
push
push
leave
fwait
adc
arpl
sbb
mov
xchg
dec
jnp
lds
scas
dec
in
xlat
and
mov
sub
pop
arpl
push
icebp
sbb
pop
push
mov
sbb
sbb
mov
jae
imul
inc
and
popl
adc
mov
out
hlt
pop
add
stos
sub
adc
xor
sbb
inc
icebp
push
add
pushf
aad
lret
push
inc
lcall
test
clc
mov
pushf
stc
shl
push
lea
je
jmp
pusha
pusha
push
movl
pushf
movl
movl
movb
pushf
pushf
lea
jmp
movzwl
movsbl
jmp
jmp
neg
pushf
jmp
mov
movsbw
movzbl
call
push
mov
call
jbe
dec
lock
mov
push
inc
out
fwait
movb
hlt
push
xchg
adc
fs
cmc
add
mov
stos
fs
mov
aad
scas
lods
popa
adc
out
push
sbbl
divl
dec
movsl
cli
movsl
stos
jmp
inc
jl
push
pop
hlt
fwait
loopne
pop
mull
push
adc
or
xchg
fstpl
in
test
pop
or
jecxz
shr
insl
ret
int3
fs
jl
clc
aaa
sarl
and
add
sub
jg
pop
xchg
fsubl
cwtl
push
arpl
inc
je
or
adc
shrl
mov
jne
subb
or
dec
je
insl
inc
lock
cmp
loopne
adc
roll
outsl
push
ret
test
jnp
stc
or
ret
shrl
jle
pop
xchg
mov
or
dec
hlt
xor
out
lret
xor
inc
insl
lret
jne
mov
ja
clc
add
xlat
repnz
sub
lods
cmp
cld
sub
jno
mov
fists
mov
cmpb
pop
pop
pop
mov
fistl
loop
dec
adc
lret
add
mov
fs
je
call
pusha
push
pushf
movl
push
call
pushf
pusha
call
adc
pusha
pushf
push
movw
lea
jmp
add
dec
outsl
arpl
inc
jb
gs
pushf
push
movl
push
pushf
pusha
movl
pusha
lea
jmp
mov
pusha
mov
mov
lea
pushf
xchg
cwtl
call
jmp
mov
pushf
mov
pushl
ret
inc
mov
lea
jmp
mov
lea
ja
adc
call
add
cmp
call
cmc
push
jmp
pusha
call
add
movw
test
pushf
pushf
call
rol
call
and
imul
sti
movsb
mov
ret
nop
sub
fistpl
mov
add
call
add
ljmp
mov
lcall
in
out
cmp
mov
repz
test
push
int3
mov
flds
cld
cmp
and
jne
cld
add
mov
in
jge
push
jle
fiaddl
mov
or
gs
lds
dec
loope
xchg
mov
mov
xor
out
sbb
adc
jle
hlt
push
add
add
jle
inc
jmp
push
rcll
sahf
xchg
test
mov
es
lea
inc
repnz
cld
push
add
sub
fdivrl
inc
xor
pop
testb
in
inc
jb
jae
pop
pushf
fcompl
fistl
sarl
fnstcw
lret
or
je
sbb
cmp
push
cli
test
add
fisttps
addr16
sbbl
jb
or
call
xchg
scas
fstl
adc
xor
lahf
fcoms
int3
or
mov
mov
xchg
fiaddl
push
mov
mov
lea
je
pusha
mov
call
jmp
lret
inc
in
sbb
jg
fmuls
mov
sbb
lock
ds
inc
cmp
pop
packsswb
xchg
shlb
clc
and
stos
out
sbb
pop
add
xchg
loope
pop
pop
push
push
push
in
mov
popa
fdivrs
cmpsb
pop
imul
pop
xor
pushl
inc
pushf
pushf
lea
jmp
sub
call
dec
ljmp
jns
iret
jg
aad
cmp
pop
pop
mov
stc
cmpsl
inc
jb
outsl
or
sbb
je
dec
jns
ret
nop
pop
add
je
mov
shrb
xor
call
pop
test
add
push
sbbl
fs
mov
sub
out
cwtl
push
gs
mov
aam
dec
mov
mov
sbb
pop
push
adc
fcmovnu
test
mov
cmp
js
xchg
sub
imul
repnz
mov
daa
jl
add
outsl
pop
enter
push
add
lahf
lods
add
loope
push
test
sub
in
dec
stc
sarl
in
test
inc
adcb
std
pop
and
fidivl
movsb
mov
cli
sub
push
push
cmpsb
push
xchg
dec
jg
jb
repnz
fistps
int
outsb
add
fsubrp
loopne
mov
jp
push
gs
fnstenv
add
xchg
rcr
adc
pop
mov
sbb
xchg
push
pop
push
cmpsb
iret
xlat
cmc
sub
xchg
push
cmpsl
push
movsb
cmpsl
or
out
fnstsw
mov
xor
inc
insl
lcall
loope
int3
inc
movsl
adc
push
push
dec
lahf
dec
sub
testb
mov
rcr
ret
es
jb
cwtl
cmp
enter
cmp
in
inc
icebp
pushf
xchg
rorl
int3
mov
add
insb
sub
and
enter
and
jo
clc
mov
bswap
pusha
sub
jbe
jle
mov
push
bt
cmp
push
pusha
jmp
push
lock
std
std
andl
shll
and
int3
int
popf
sub
pushf
mov
pop
mov
xor
xchg
outsl
in
popf
jge
mov
and
push
aam
pop
lds
in
cs
test
push
sub
mov
inc
xor
in
xchg
push
mov
addl
fdivs
jmp
adc
ret
cld
popl
jmp
cwtl
mov
push
pushf
jmp
lea
je
setbe
lea
movsbw
mov
movzwl
movzbw
lea
movzbw
pushf
call
mov
shr
clc
test
cmp
jmp
sub
in
and
subl
mov
adc
and
jmp
mov
push
cmp
loop
imul
jne
cmc
cmp
mov
es
pop
xchg
xchg
xchg
push
movl
lea
je
call
pop
cmc
push
sbb
pop
pop
xor
xchg
aas
jmp
lds
inc
outsl
popf
pop
push
das
sub
and
sub
iret
rcll
enter
stos
push
mov
stos
mov
xchg
sub
cmp
test
mov
rorl
push
or
addb
adc
rorl
lahf
lahf
setne
movl
bswap
lea
pushf
push
movl
jmp
pushl
jmp
or
pusha
jmp
mov
dec
jmp
call
mov
out
in
xor
mov
pusha
nop
mov
sbb
cmpb
or
test
xchg
pop
or
movsb
rcll
enter
xchg
xchg
jns
ja
ds
stos
std
test
lds
xchg
xor
ret
sbb
lods
jmp
ficomps
rorl
enter
sbb
jle
fs
jne
lea
not
call
popf
cpuid
nop
jmp
shl
push
jmp
pushf
jmp
cmpsb
stos
and
sbb
xchg
mov
lahf
dec
jbe
push
jle
ficoml
push
dec
aaa
imul
cmp
mov
jecxz
shlb
inc
in
mov
cld
shrl
sbb
xchg
das
test
xchg
fcompl
rcll
cmp
in
lods
dec
sti
inc
and
sbb
sbb
cmp
mov
bound
add
dec
js
xchg
loope
stc
jl
inc
jne
adc
sbb
sbb
jnp
pop
xchg
out
test
fstl
pcmpgtb
loope
popa
out
xor
add
stos
repz
jp
mov
push
js
outsb
nop
mov
cld
and
and
test
stos
aam
lods
dec
sub
push
push
and
aaa
je
outsl
lods
call
adc
pop
fstl
mov
je
or
lea
je
movzbl
jmp
dec
pusha
pushf
lea
jne
lea
mov
call
lea
jne
aam
bts
rcl
daa
sub
shl
shrd
daa
mov
cmc
add
rol
sbb
mov
jmp
pusha
lea
jb
pushf
push
pushl
ret
movw
pushf
adc
lea
pushf
pushl
ret
movzbw
push
movzbw
mov
lea
add
movsbw
not
sub
xor
bt
shr
push
rol
bswap
neg
pusha
mov
clc
aam
mov
aaa
aam
stc
btc
sub
lea
jo
lea
pusha
lea
jg
mov
push
xchg
lahf
push
movzbw
lea
call
movl
lea
jb
pusha
lea
je
push
cmp
pusha
push
pushl
mov
lea
je
test
pushf
cmp
pusha
jmp
cmc
or
pusha
pusha
lea
jne
shld
mov
jmp
inc
xchg
pop
in
in
jb
dec
jbe
push
sti
and
subb
mov
jl
or
push
xchg
jnp
hlt
repz
ss
cli
xchg
out
frstor
into
sti
adc
push
fdivrl
cmpsl
lcall
decb
loop
pusha
arpl
xchg
sets
daa
andb
jns
fcoml
mov
xchg
push
test
iret
pop
push
das
xor
mov
jo
testl
cmc
cli
into
sbb
xchg
lods
fsubrs
enter
cmp
ss
and
pop
ds
sbb
lea
je
pushf
cmc
pushf
cmp
call
movl
call
sub
test
clc
jmp
call
ja
mov
sbb
stc
mov
add
push
mov
or
push
mov
popf
dec
add
decl
ret
out
mov
test
push
jl
mov
subl
mov
mov
iret
dec
add
popf
adc
lea
adc
test
incl
cmp
mov
dec
test
stc
lahf
int3
xor
jge
adc
jae
imul
les
xor
data16
call
mov
push
cmpb
jmp
call
aad
out
sbb
and
mov
jecxz
cmp
and
mov
int
and
inc
push
shrb
push
aas
push
jb
icebp
sbb
je
mov
cmp
mov
rorl
dec
pop
push
jg
pushf
pop
gs
adc
out
pop
sbb
push
int3
or
pop
outsb
nop
scas
out
cwtl
pop
xchg
je
xchg
loop
in
in
cmp
pop
inc
outsb
pop
movl
mov
or
imul
out
lcall
xor
nop
pop
sbb
sbb
repnz
addb
sub
lds
movsb
or
adc
fadds
stos
fs
jmp
nopl
gs
and
fmull
in
dec
mov
orl
shl
cmc
lock
in
dec
negb
outsl
iret
jecxz
cmp
loope
and
jp
pop
mov
jge
iret
scas
jne
pop
pop
inc
movsl
push
xchg
imul
or
or
data16
pop
pop
dec
dec
push
add
mov
cli
movsl
dec
daa
and
jae
mov
xlat
sub
insl
sbb
adc
mov
in
in
push
jno
push
adc
or
dec
jno
stc
and
xor
sub
test
imul
sbb
imul
scas
pop
add
out
gs
lret
and
jnp
inc
ss
ret
scas
xlat
add
and
push
cld
mov
adc
push
in
insb
xlat
inc
faddl
lret
jp
popa
in
enter
mov
push
aas
stc
cmpsb
arpl
and
lret
jnp
es
jmp
dec
jne
push
add
jecxz
mov
in
fcoml
movsl
pop
xchg
sbb
adc
mov
movl
mov
lea
js
pushf
mov
movl
pusha
lea
jmp
add
inc
js
je
jb
arpl
jae
push
movzbw
setnp
lea
pusha
call
pop
pushf
call
jmp
cmc
imul
pushf
pushl
lea
jmp
pushf
xchg
xchg
sar
xchg
mov
xor
cmp
stc
push
shld
pushf
test
shld
xchg
bt
clc
push
shl
push
dec
push
bt
mov
adc
mov
and
mov
shld
test
ror
mov
cmp
or
jmp
pushf
lea
jg
jb
cmc
cmp
cmpb
pusha
lea
jne
bsf
shrd
ror
dec
mov
clc
pusha
add
cmp
pushf
jmp
movl
push
mov
movb
lea
jmp
movsb
test
mov
sahf
inc
mulb
rcl
mov
jb
cmp
cmpsb
rcrl
fimull
int
les
dec
shl
ds
fldenv
mov
inc
sar
aas
sub
std
xchg
adc
cmp
lret
repz
testl
js
fidivrl
rclb
fnsetpm(287
cmp
add
dec
jbe
xchg
in
and
fistpl
pop
xchg
rorb
mov
pop
pop
shll
in
sarb
sar
lods
insl
jnp
sub
mov
dec
mov
pop
into
push
in
lret
sti
test
jg
pop
add
in
mov
pusha
inc
pop
pop
adc
or
xchg
xchg
rclb
lret
cmp
rcr
test
mov
stos
jecxz
fsubrs
sbb
ljmp
nop
dec
mov
mov
jmp
jecxz
xor
std
mov
add
cmp
clc
cmp
call
add
in
sbb
sti
and
jle
fildl
mov
in
mov
mov
rcl
add
iret
cld
jg
shlb
aam
sbb
in
cmpsl
bnd
sbb
popa
fwait
pop
xchg
into
mov
jle
jns
ja
and
ret
lock
push
jle
mov
out
adc
add
cmpsb
push
pusha
sub
and
xchg
stc
jb
or
mov
push
sub
push
dec
imul
insb
add
test
push
xchg
mov
jecxz
add
iret
iret
icebp
add
jmp
sub
pop
lcall
fldt
shll
stos
mov
ret
mov
jnp
mov
test
xor
dec
dec
aad
push
bound
xor
mov
out
and
inc
mov
jecxz
mov
xor
mov
pop
sub
push
out
bound
rcrb
fwait
in
pop
xor
cmpsl
mov
mov
clc
mov
mov
nop
pop
inc
test
daa
push
std
loopne
mov
xor
leave
out
sub
push
into
lahf
adc
jecxz
imul
mov
adc
push
leave
sbb
fmul
sub
pop
arpl
pop
jmp
pop
setge
setb
pusha
movzbw
lea
pop
movzbw
mov
call
sti
xchg
or
sbb
add
or
in
ret
inc
aam
adc
lea
fs
fsub
mov
pop
lahf
std
test
cmp
mov
dec
scas
dec
push
cltd
bound
insb
or
cmp
pop
mov
aas
test
mov
sbb
dec
arpl
movsl
movsb
addl
sub
or
lcall
out
mov
in
gs
dec
mov
jl
js
divb
mov
stc
mov
mov
add
fmull
jecxz
aas
in
sub
pop
pop
fs
sbb
adc
mov
sbb
mov
in
push
repnz
and
or
in
bndstx
push
cmovnp
xor
ja
cmp
addb
add
ljmp
fidivrs
testl
jo
add
mov
seto
lea
setge
movl
pusha
bswap
bswap
lea
jmp
pushl
rol
cmp
jmp
inc
mov
dec
jns
iret
sub
pushf
hlt
dec
hlt
nop
fs
inc
push
mov
gs
jno
jp
push
pop
or
ret
add
fstl
ja
xor
mov
cltd
cmpsl
bound
add
xchg
and
pusha
push
xor
lds
sbb
sub
push
adc
or
inc
jp
icebp
stos
pushf
fidivrs
mov
sbb
and
cld
sub
xorl
in
imul
flds
mov
jae
dec
mull
lds
cmpsl
pop
fcompl
mov
add
cmc
dec
testb
add
push
jmp
or
mov
jp
mov
push
push
sbb
mov
aam
add
adc
mov
testl
adc
xchg
cmp
cmc
xor
popa
lahf
push
jg
jae
pushf
pushf
add
pushf
lea
jmp
lea
jne
jb
pusha
push
mov
mov
push
pusha
mov
call
xchg
pushl
not
mov
lea
lahf
lea
call
jmp
cmc
xchg
push
fistpl
in
in
sbb
mull
and
mov
cltd
cld
daa
ret
or
je
sarl
or
xor
jg
pop
xorl
cli
scas
cmc
and
jne
aam
inc
push
adc
shrl
or
xchg
dec
or
in
insl
sbb
or
jl
jnp
sub
adc
and
cli
add
xchg
shll
iret
mov
or
test
sbb
or
inc
divl
fistps
dec
in
mov
sbb
ret
and
jne
jmp
inc
loop
fistpl
in
icebp
and
ja
sar
stos
aam
test
rcrl
lret
rolb
push
into
jle
aaa
dec
mov
fwait
xchg
imul
adc
and
jns
shlb
lahf
repnz
add
inc
and
jno
into
push
xchg
shll
push
in
sar
xchg
je
stos
push
mov
lds
divl
or
pop
xchg
jle
dec
bt
bt
pushw
popfw
jmp
call
mov
adc
mov
bsf
pusha
mov
lea
xor
mov
pushf
mov
cmc
cmc
cmc
mov
sub
movb
pusha
bt
clc
not
push
movb
jmp
test
cmc
pusha
or
push
push
push
pushl
lea
je
movzbw
jmp
jmp
bt
cmp
test
pusha
call
mov
xchg
sbb
clc
and
add
push
sbb
push
cmpsl
push
or
xchg
shlb
jle
push
push
mov
or
mov
sbb
in
sub
mov
jne
loope
mov
scas
popf
aaa
cld
sbb
mov
out
std
mov
adc
imul
and
flds
push
xor
adc
push
jle
movsl
adc
xchg
aam
mov
cld
stos
test
cltd
les
sbb
call
arpl
adc
je
inc
xor
les
and
dec
mov
mov
jb
in
cmpsl
addr16
sbb
xchg
rcrb
into
xlat
cmp
popa
bswap
push
out
pushf
movl
lea
jae
bt
push
clc
sub
mov
pusha
movw
jmp
int
sbb
sbb
mull
push
stc
and
sub
xchg
into
adc
xchg
jecxz
scas
xchg
inc
add
fucom
stc
xor
mov
mov
int3
les
push
adc
lea
sbb
sbb
cli
cld
mov
es
xor
push
gs
inc
add
cmp
aaa
cmp
push
push
pop
movsl
insb
gs
loopne
mov
xchg
fistl
fsubl
and
clc
mov
data16
xchg
sub
xchg
inc
out
stos
push
ss
xchg
not
mov
push
icebp
fmuls
aaa
repnz
jl
ljmp
test
jnp
ffreep
je
outsl
cmp
xchg
movsl
mov
jl
cmc
nop
pop
mov
pop
sub
aaa
sub
mov
loop
fimuls
add
and
lcall
xchg
and
inc
movsb
push
add
addb
push
lahf
loope
pop
stos
inc
outsb
hlt
stc
dec
sti
mov
int
dec
in
pusha
adc
cmp
mov
cmpl
out
lahf
dec
add
mov
shr
push
das
test
pop
aad
fsubl
enter
and
test
dec
rcll
xchg
jmp
imul
outsb
xchg
test
xor
scas
dec
cmp
add
test
pop
mov
dec
or
and
addl
std
inc
mov
xor
daa
push
cmp
jbe
dec
dec
daa
xchg
lahf
dec
je
push
lods
fildl
les
xor
les
lea
xchg
or
xchg
mov
leave
cmp
or
je
int3
int3
ja
in
ds
add
lods
fimull
push
dec
ret
daa
rol
icebp
lea
push
fistpl
movl
xchg
or
cmp
fidivl
and
mov
arpl
mov
push
test
push
add
push
stos
mov
mov
push
lret
sar
mov
sub
pop
outsl
popf
mov
fnsave
dec
mov
adc
mov
cwtl
inc
rorb
imul
sbb
mov
int
xchg
inc
ljmp
decl
mov
jl
and
cs
mov
and
pushf
rorl
adc
imul
aad
popa
sbb
xor
leave
mov
sahf
mov
mov
test
push
mov
or
dec
push
and
jnp
sarb
push
daa
fdivrl
ljmp
mov
dec
cmp
inc
mov
xchg
imul
xchg
lods
jl
inc
cmp
out
sub
mov
or
mov
aad
mov
stos
out
cld
clc
add
push
cmp
scas
pop
jecxz
cmpsl
cmovo
mov
adc
adc
js
sub
xorl
mov
sub
out
lahf
push
sub
cmp
mov
pop
inc
in
cmpsb
stos
jecxz
sub
jmp
inc
lods
push
pop
sub
imul
xchg
or
mov
xor
push
inc
inc
movaps
ja
add
icebp
sub
loope
add
adcl
cmp
and
dec
mov
ljmp
mov
sbb
pusha
movups
subb
jmp
xor
inc
xchg
ret
dec
mov
shlb
pusha
popf
movsl
push
lret
ds
std
sub
xor
jg
pop
inc
mulb
cmp
fwait
inc
std
cmp
mov
pop
xor
sbb
xchg
in
clc
mov
xchg
cmp
xchg
push
jle
mov
out
std
mov
xchg
je
push
out
popf
es
add
mov
jmp
jmp
ja
push
mov
out
add
and
sub
push
add
dec
push
into
call
or
add
fiaddl
aaa
bound
sarb
enter
fsub
adc
push
sub
sub
mov
or
iret
jl
mov
mov
sbb
nop
dec
or
je
into
xor
mov
loopne
jge
add
push
sub
outsb
sarl
jp
divl
fstpl
std
rcrl
in
and
mull
lret
clc
es
xchg
push
mov
loopne
gs
push
push
adcl
mov
clc
mov
jg
pop
mov
push
pop
mov
mov
or
fwait
jecxz
aaa
bound
rorb
dec
push
inc
add
pop
mov
mov
sub
test
xor
inc
movsl
insb
xor
vandnpd
push
rolb
dec
lahf
dec
jl
rcll
sub
arpl
and
leave
movsb
insb
rclb
push
jbe
xchg
xchg
jno
xor
rclb
sbb
sbb
je
out
scas
push
adc
push
dec
mov
mov
js
adc
dec
ret
in
loopne
mov
push
incw
inc
dec
pop
dec
lods
pop
mov
xchg
inc
jae
dec
mulb
sbb
loop
jg
in
ljmp
js
jge
pop
fisubrs
add
data16
out
mov
sub
rcrb
in
push
add
pop
or
out
mov
jp
inc
dec
add
add
int3
clc
pop
fisubrs
cmp
adc
jns
add
inc
in
cmpsb
mov
out
cltd
xchg
xchg
add
cmp
sbb
hlt
nop
sbb
mov
jb
adc
inc
inc
jmp
jmp
lods
fsts
push
add
jno
dec
push
cld
xchg
mov
cmc
lahf
pop
pop
inc
mov
pop
sbb
jne
xor
inc
je
adc
dec
int3
mov
test
jle
jne
jmp
jg
pop
xchg
test
and
xchg
movzbw
lahf
movl
lahf
push
lea
push
jmp
mov
in
outsb
pushf
dec
mulb
stos
pop
adc
xor
aad
jo
lods
mov
stos
add
add
repnz
lods
insb
test
pop
pop
push
aam
jb
jae
fldl
push
mov
lea
seto
sete
pop
lea
lea
push
pusha
mov
push
movzbw
lea
setp
mov
jmp
mov
movzbw
call
pusha
push
pushf
lea
call
cmc
sub
push
call
movw
test
pushf
jmp
pushf
movl
pushl
pushl
pushf
lea
jmp
push
pushf
jmp
neg
shl
movsbw
bts
mov
cmp
and
bt
test
pusha
add
push
lea
jmp
call
pusha
lea
je
pushf
pushf
lea
jmp
adc
push
lea
jmp
ret
sbb
sbb
dec
sbbl
jmp
mov
jns
and
js
inc
and
jge
je
pusha
jmp
pushf
lea
ja
pushf
shl
sets
call
pop
cmc
push
sbb
test
or
xchg
shr
xor
cmp
gs
data16
mov
pop
shr
out
std
shrl
mov
sbb
push
ficompl
movb
divl
je
ret
inc
and
ss
push
call
lea
jne
ja
pushf
push
pushfw
popw
push
mov
pusha
call
pusha
pushf
pushfw
popw
pusha
mov
jmp
push
lea
jb
stc
cmp
clc
cmp
jmp
call
pushf
pushf
movl
pushf
push
movb
pushl
popl
pushl
pusha
push
pushl
ret
clc
bswap
rol
sar
mov
clc
cmp
bt
and
test
pusha
clc
cmp
add
lea
cmp
jmp
jmp
mov
in
xor
mov
fwait
leave
cmc
and
push
out
dec
push
fnsave
dec
test
sahf
sub
rcrb
test
or
into
cmpsb
and
mov
mov
jl
xchg
lcall
lcall
cmc
cs
push
fcoms
jl
add
sub
out
xchg
test
mov
sbb
adc
mov
inc
aaa
hlt
xor
jmp
or
out
iret
mov
in
mov
pushf
jae
inc
jae
lret
mov
push
pop
push
cld
notb
xchg
sbb
in
out
inc
test
aam
mov
test
xchg
lods
pop
scas
pop
add
cmp
mov
mov
and
mov
test
movl
add
into
push
into
sbb
push
std
sub
subb
cmp
rorb
repnz
cli
mov
sub
mov
and
push
movsl
dec
mov
push
movb
mov
ljmp
mov
inc
add
add
cld
pop
ror
sbb
adc
lahf
dec
jp
push
push
inc
je
imul
imul
ret
jg
dec
sahf
dec
fimuls
inc
add
and
lea
cmp
sub
insl
sbb
cmpb
and
push
mov
push
fstl
inc
cmpl
cwtl
inc
repnz
cli
sub
xchg
dec
xchg
xor
pop
sti
sub
fwait
mov
fwait
popf
nop
repz
out
lahf
dec
push
jge
dec
jle
xchg
mov
jmp
loopne
xlat
xchg
rclb
pop
jl
mov
movsl
pop
sahf
mov
sbb
inc
in
popf
enter
xchg
mov
mov
cmp
mov
xlat
sub
or
xchg
inc
jl
js
int3
jns
xlat
add
jg
mov
jmp
imul
inc
nop
int
pop
cmpl
cmp
mov
xchg
mov
out
test
cmpsb
icebp
movsb
outsl
frstor
outsl
lods
xlat
jae
int3
sbb
faddl
mov
or
adc
out
cwtl
cmpsb
mov
out
imul
repz
mov
leave
mulb
cltd
ds
mov
mov
divl
hlt
mov
lods
jmp
pushf
movl
movb
lea
jmp
cld
cwtl
or
scas
fmull
xor
sub
jp
das
daa
sub
mov
dec
repz
mov
xchg
cli
daa
pop
loop
inc
jo
rclb
cmp
xor
lret
mov
in
in
mov
and
cmpsb
push
jg
imul
jns
shrb
pop
dec
frstor
cmp
rcll
cmp
adc
dec
fs
les
roll
out
test
imul
and
cli
xchg
cmp
sahf
aaa
sti
add
xorl
adc
shrb
mov
repz
or
out
dec
jae
xlat
mov
out
sub
xchg
loope
and
scas
out
in
jae
popf
adc
insb
pop
stos
inc
in
jne
icebp
and
mov
shrb
pop
jecxz
call
ret
dec
fiadds
jnp
jecxz
frstor
cmp
shlb
lea
fdivrs
pop
xchg
push
mov
push
outsl
push
out
sub
shlb
pop
jg
inc
out
stos
out
fdivl
sti
pop
test
int3
or
lds
popf
gs
xchg
xor
loop
lret
inc
jns
fistpl
and
jmp
mov
jl
cmp
icebp
push
or
pop
mov
das
xchg
mov
dec
daa
cwtl
mov
xor
jge
data16
icebp
adc
leavew
repnz
fnstcw
xchg
fisubs
packsswb
xchg
or
bnd
das
mov
lret
loopne
inc
outsl
jge
cmp
sub
cwtl
jle
rcrl
in
fcompl
insb
shr
push
xchg
iret
mov
cmp
mov
or
jmp
movl
movsbw
lea
jmp
adc
pop
inc
insb
sbb
pop
leave
repnz
leave
mov
fnstsw
inc
movsl
in
pop
xor
ljmp
nopl
xchg
mov
jp
rcrl
pusha
sub
xchg
mov
mov
repnz
add
adc
jb
pop
sbb
shlb
testb
arpl
out
inc
jae
pop
xchg
rcll
ds
mov
add
lds
lahf
inc
inc
and
rcrl
cmp
and
push
pushf
push
pushf
lea
jmp
jmp
cld
leave
sbb
insl
sbb
repnz
lret
jmp
in
dec
js
lods
ror
inc
inc
lock
jno
sbb
jbe
aam
sub
add
call
movsb
int
fucomip
cmp
lods
scas
mov
imul
dec
cld
daa
bound
pop
pop
push
movsl
push
add
push
xor
das
lcall
cmp
sbb
fwait
dec
jb
pop
pop
dec
ja
adc
pop
mov
xchg
notb
flds
xor
mov
cmpsl
arpl
adc
fcoms
cmp
xchg
cwtl
mov
lea
movsbw
bswap
lea
mov
jmp
pushl
lea
je
test
pusha
add
cmc
cmp
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
push
jmp
add
sbb
scas
fiaddl
cmp
xchg
mulb
jno
dec
movsl
stc
jecxz
das
mov
xor
int
sub
mov
sbb
imul
push
mov
jbe
mov
jae
cwtl
test
cmp
outsl
dec
push
mov
push
xchg
inc
lods
or
mov
adc
roll
xor
shrl
imul
out
scas
cmp
jmp
ret
rorb
dec
dec
push
gs
ret
scas
sub
push
stos
xchg
inc
int
cmp
dec
cld
inc
sbb
or
xchg
loopne
iret
xlat
ficomps
cmp
sub
and
pop
push
hlt
mov
jp
pop
nop
xchg
stos
roll
mov
mov
xor
test
and
pop
jle
fmulp
pop
repnz
sub
xchg
je
inc
addr16
jmp
out
gs
in
aas
data16
push
lret
fldcw
sbb
sbb
lock
arpl
jecxz
daa
fwait
aaa
les
mov
xor
xor
cmc
ds
dec
mov
and
xchg
mov
mov
xchg
push
lea
pop
cli
dec
dec
sbb
push
in
cmp
mov
dec
dec
xrelease
stos
mov
insb
xchg
push
pop
jl
and
lret
pop
push
mov
pop
jg
fistpll
dec
and
jecxz
mov
imul
clc
fdivs
out
repz
aam
mov
daa
sahf
push
or
nop
aas
jns
jb
insb
stos
jecxz
pop
sbb
cmp
stos
mov
pop
mov
movb
lea
jmp
pushf
or
jmp
pushf
movl
pusha
movl
pushf
lea
jmp
add
test
clc
cmp
test
cmp
call
pop
mov
and
mulb
push
xorl
nop
mov
loopne
daa
mov
pop
pop
jmp
push
cmpsb
shrb
sti
mov
inc
sbb
sbb
nop
mov
inc
add
das
jne
clc
cmc
aas
imul
fdivrl
imul
xor
icebp
sub
dec
decb
xor
lea
jae
cmp
bt
bt
cmp
cmp
push
pusha
lea
ja
inc
inc
dec
not
inc
rcl
xchg
stc
mov
push
pusha
cmc
test
mov
jmp
and
push
inc
repz
stc
pop
in
fwait
pop
mov
jp
test
mov
xchg
mov
mov
test
stos
cld
into
cmc
adc
cmc
sub
inc
sbb
pop
add
inc
inc
cmp
lods
pop
loope
mov
or
enter
and
stos
cltd
dec
bound
ss
or
fsubp
rorl
mov
aad
push
mov
in
sbb
mov
inc
out
pop
xlat
pop
inc
xchg
lcall
pop
pop
sti
jl
dec
pop
jp
jle
xchg
push
nop
dec
mov
cmpl
adc
inc
push
call
pop
sti
jo
sbb
loope
cmp
mov
mov
and
cmpsl
inc
test
jl
and
addr16
lods
adc
test
imul
dec
sub
dec
out
div
mov
or
and
xor
insb
shrl
inc
in
cltd
pop
pop
mov
mov
sahf
mov
adc
push
testl
ja
scas
ljmp
and
push
inc
notb
push
stos
pop
mov
lahf
fcoms
sbb
fstl
mov
sbb
fimuls
mov
cmp
shrb
mov
xor
je
faddl
cs
inc
lret
xor
mov
cwtl
ret
sahf
sub
mov
int
push
fldenv
sti
sarl
adc
dec
inc
mov
pop
add
adc
insl
xchg
push
xchg
xchg
pop
jno
setl
lret
jg
jl
in
in
imul
add
xchg
dec
mov
xlat
fmull
iret
inc
mov
xlat
pop
mov
sbb
data16
pop
test
jo
cld
xchg
outsb
sbb
xlat
subl
or
xchg
fadds
es
mov
mov
mov
fs
ljmp
mov
mov
ret
insl
subl
add
movsb
xor
nop
dec
mov
or
movsb
cmpsb
cltd
out
cwtl
xor
sub
or
movsb
add
sbb
rolb
test
fstl
inc
xorl
in
sub
xor
sub
mov
or
inc
cmp
xlat
add
mov
inc
mov
adc
mov
jp
pusha
or
fdivrl
push
inc
aaa
add
and
das
mov
cmp
xor
test
or
or
inc
subb
stos
or
jo
sarl
xlat
dec
inc
xchg
notb
mov
insl
lods
jmp
nop
dec
or
sub
xchg
dec
cmp
and
and
jb
cmp
cmp
pusha
call
jmp
add
add
inc
add
pusha
lea
shl
ror
shr
lea
test
mov
jmp
lret
ret
iret
jl
push
subl
push
mov
jns
inc
ja
and
mov
sbbb
mov
sbbl
sbbb
jb
xchg
dec
mov
stc
ds
daa
xchg
lea
ja
out
sbb
aad
das
jne
sbb
mov
imul
xor
lret
insl
ret
pop
xchg
rorl
mov
push
pop
inc
cmp
jnp
ja
xor
mov
stc
push
pusha
mov
add
stc
cmp
bt
mov
pushl
cmp
test
cmc
test
call
movl
pusha
movl
pushf
mov
pushf
lea
jmp
movb
jmp
jmp
stos
rcrl
ljmp
daa
xlat
add
pop
subl
sahf
mov
sbb
xchg
in
outsl
jge
mov
inc
cmpsl
push
push
int3
stos
fisttpl
xchg
adc
mov
xchg
rclb
ret
jnp
sbb
popf
sbb
cs
pushl
push
rol
call
or
rcrl
push
jns
int3
mulb
mov
outsl
popf
cmp
xchg
into
movsb
pop
mov
pushw
inc
outsl
pushf
inc
jae
int
push
cmp
test
hlt
push
orb
ss
aaa
lcall
and
push
jns
add
sub
add
adc
lret
fldenv
dec
sarl
fimuls
cld
daa
sbb
es
mov
jmp
xchg
aam
je
iret
push
les
add
pop
cwtl
aad
dec
addb
dec
push
xlat
jg
mov
mov
les
in
or
call
pop
test
rcrl
adc
sbb
je
leave
xlat
lret
clc
dec
js
fidivs
int3
sub
adc
mov
jl
push
add
les
mov
pushf
pop
push
imul
mov
testl
adc
popa
sbb
or
pop
arpl
fstl
xchg
push
add
rcrb
inc
repnz
lret
jbe
push
add
pusha
bound
lret
fiaddl
sti
sub
jle
popf
dec
push
shll
shl
outsl
aas
pop
xor
es
fdivs
ja
fisttps
sbb
xor
mov
add
mov
rclb
outsb
sbb
mov
bound
repnz
add
loopne
and
lods
mov
ret
dec
das
pushf
mov
mov
bound
pop
mov
aad
repnz
jo
insl
xor
cmpl
ret
jo
xor
xor
and
out
jae
cmp
sub
ret
or
js
into
testl
mov
jg
or
sbb
cmpb
mov
scas
out
dec
add
jnp
not
add
or
add
xchg
inc
or
or
inc
add
xchg
push
rcr
das
or
add
inc
inc
subb
cmp
in
lock
push
sbb
fildl
cli
cld
push
test
jb
js
gs
scas
xchg
mov
xor
push
dec
clc
cmpsb
fs
stc
mov
aaa
cli
cmpsb
push
add
pushf
sub
sub
adc
and
rol
repnz
test
loope
aad
scas
cmp
dec
in
pop
or
jg
repnz
jmp
popa
fstpl
enter
mov
cmpsb
push
add
pop
add
mov
push
mov
mov
dec
in
mov
mov
pop
inc
insl
cwtl
ret
jge
negb
outsb
sbb
sub
xchg
roll
sub
das
inc
cmp
fisubs
inc
or
lock
dec
sarb
mov
cmp
inc
fmull
dec
add
aad
cs
cs
sub
mov
cmp
or
xchg
insl
push
push
inc
test
shrl
push
repnz
push
mov
movb
xchg
xor
cmp
jno
stos
and
stos
ljmp
and
aas
cltd
cmpsl
aad
xchg
sbb
push
and
fwait
xlat
xchg
iret
mov
mov
mov
add
adc
and
shr
inc
lock
xchg
push
mov
and
repnz
popf
scas
mov
adc
push
leave
mov
cmpsl
outsl
int3
cmp
cmpsl
ss
sub
shrl
ret
mov
clc
and
sbb
stos
ljmp
pop
sbb
lds
divb
jnp
ret
movsb
cltd
shll
push
pushf
or
pushl
pushf
lea
je
setl
setne
not
mov
not
mov
pushf
bswap
lea
jmp
sti
sub
rcr
in
or
lret
mov
int
in
in
inc
cs
int3
push
in
stc
dec
adc
xchg
imul
add
lsl
dec
jnp
push
jecxz
inc
adcl
dec
pop
add
loopne
cmpl
aam
add
cmp
lock
not
or
sub
cmpsl
fsub
inc
and
adc
shrl
mov
xchg
fdiv
int3
aam
mov
push
cwtl
inc
lret
xor
mov
cwtl
pop
nop
hlt
pop
mov
or
popf
in
mov
add
pop
mov
cltd
aam
iret
push
cld
adc
sbb
push
call
mov
je
push
pop
daa
aad
mov
stos
gs
movl
out
in
jle
pop
fmuls
out
rol
orb
mov
aad
sbb
inc
dec
ja
mov
jmp
sti
xchg
lahf
iret
addb
adc
push
int
int3
inc
popf
aam
xchg
push
movaps
test
or
push
aam
lods
dec
dec
mov
aam
sbb
inc
clc
rorb
adc
mov
or
stos
jmp
sub
and
pop
push
dec
rclb
call
cli
mov
out
or
mov
cld
loopne
or
xchg
call
lret
push
sahf
lcall
xchg
in
mov
testb
call
fisubrl
out
loopne
cs
lahf
test
je
mov
sub
cmp
and
sub
sub
leave
out
pop
ja
int3
in
push
jg
push
test
and
frstor
sbb
fisttpll
mov
push
or
lock
mov
or
jns
test
sahf
push
jae
add
std
loopne
cld
add
fdivr
inc
es
cmc
lahf
mov
loopne
in
xlat
subb
mov
loop
mov
in
dec
and
call
aaa
mov
inc
mov
push
loopne
adc
mov
in
push
adc
push
mov
xchg
adc
lods
add
pop
xor
shll
in
push
xlat
adc
dec
pop
xchg
in
push
push
adc
lods
dec
clc
jbe
shl
dec
ja
xor
adc
lods
js
or
shll
in
push
inc
and
push
push
adc
testb
in
fisubs
cwtl
lock
gs
das
aam
sub
shl
enter
sahf
sbb
sub
int3
adc
sub
syscall
imulb
ds
jns
add
imull
enter
mov
jb
add
repz
repnz
jmp
fnsave
cmpl
stos
pop
orl
lret
sub
xlat
mov
filds
xchg
cmc
cld
int3
enter
test
stc
mov
lods
pop
mov
push
mov
sbb
lcall
cwtl
jo
ret
ret
fildll
insb
xorb
pop
roll
jnp
dec
adc
push
lahf
fdivrs
lock
or
rorb
push
inc
fwait
clc
fmull
xchg
sub
pop
mov
in
fildl
xchg
pop
lea
push
enter
dec
add
and
adc
jo
inc
dec
sbb
cmp
add
call
in
clc
mov
push
xor
call
in
sbb
pop
ds
fsub
mov
sti
rol
nop
cmc
pop
insb
call
inc
pushf
mov
test
xchg
sub
adc
ja
dec
addr16
rcrb
aam
and
addr16
cwtl
dec
lods
jne
xchg
fmull
mov
call
in
sub
inc
or
dec
fdivs
in
imul
cmpsl
xchg
cwtl
test
clc
mov
iret
lock
or
mov
stos
lds
in
lods
pop
jle
sbb
cwtl
jmp
pop
std
in
xchg
out
inc
int3
mov
imul
xchg
repz
in
fnstenv
fwait
inc
lret
fmuls
in
cld
ret
xlat
mov
dec
outsl
xlat
xor
inc
out
xchg
inc
adc
pop
insb
cmc
imul
xlat
loopne
mov
jb
sbb
cmp
test
addr16
test
js
imulb
nop
insl
lret
cwtl
adc
loop
dec
loopne
cld
std
ja
in
dec
ljmp
addr16
clc
js
or
mov
dec
andb
inc
lcall
sub
rclb
fdivs
negl
or
out
in
fdivrs
in
xchg
out
test
mov
fimull
xchg
ja
rolb
enter
js
xchg
jo
fcomip
addr16
popa
xor
out
or
stc
stos
jge
bound
push
mov
pop
and
test
enter
inc
mov
inc
leave
je
rorb
sbb
xor
fildll
pop
aas
adc
sti
jg
dec
xor
lahf
mov
mov
mov
mov
iret
sub
sub
and
call
push
loopne
in
js
dec
push
in
test
sbb
testb
rolb
cvtpi2ps
ja
adc
notl
pop
push
jo
lds
fists
mov
hlt
rol
inc
addr16
push
es
add
mov
or
std
cwtl
in
divl
pop
rcrb
test
fsubr
push
mov
cmc
or
test
sub
adc
mov
adcb
jnp
pop
icebp
mov
aaa
in
dec
mov
leave
adc
or
mov
out
repnz
inc
test
jae
das
push
mov
sub
insb
push
stos
pop
cli
clc
les
fmull
faddl
std
inc
push
pop
dec
dec
movsl
pop
jg
cmpsb
fwait
mov
lret
daa
pop
sub
les
stos
aam
pop
ja
and
cwtl
daa
imul
add
mov
sbb
mov
ljmp
outsl
testl
cmpsb
iret
iret
pop
jecxz
pop
lods
rcrl
sbb
pop
mov
xchg
pop
sbb
dec
adc
popa
outsb
addr16
jnp
bound
aaa
jns
test
sbb
push
shll
insb
push
jae
and
xchg
cmc
mov
jno
adc
pop
add
push
ret
dec
pop
popa
lahf
adc
fs
add
inc
xor
adc
mov
data16
ss
sub
pushf
inc
inc
mov
adc
or
mov
out
cmpsb
push
xor
gs
ss
cwtl
repz
lods
mov
cmpsl
pop
divl
cmc
test
fwait
bnd
push
clc
addr16
push
xchg
pop
call
lahf
mov
fisttpl
add
xor
xchg
rol
fdiv
fwait
clc
shlb
movsl
mov
inc
test
cli
kortestw
lock
clc
ljmp
fcomip
cli
sti
xchg
fucomip
pop
or
inc
lods
dec
xor
pop
fsubr
cld
inc
inc
inc
data16
push
lret
in
popl
pop
outsl
int3
daa
lods
xchg
ss
out
test
andb
push
es
test
sub
movsl
mov
cwtl
rcrb
aad
mov
aas
push
sbb
fs
in
popl
imul
addr16
mov
lock
inc
mov
inc
mov
pop
mov
xlat
or
aas
xchg
push
cwtl
add
lret
cld
and
callw
div
mov
inc
int3
ljmp
mov
repnz
xchg
scas
mov
mov
cmc
adc
aad
loopne
out
push
inc
test
out
sbb
pop
xor
cmpsl
cmp
xchg
fimuls
movsb
out
pushf
xchg
sub
inc
adc
adc
jb
iret
or
out
cmp
jne
inc
les
xchg
mov
dec
xor
cwtl
cmp
mov
sub
test
mov
pop
mov
movsl
test
sub
sbb
sbbb
cmp
mov
mov
addr16
push
push
inc
dec
rolb
imul
mov
mov
ss
mov
xchg
sub
in
ljmp
mov
mov
inc
xchg
test
gs
in
jbe
hlt
pop
push
lret
mov
cmp
mov
iret
push
mov
xchg
imul
mov
and
jecxz
lds
lret
lods
subb
or
and
dec
mov
orb
js
xchg
repnz
out
xchg
lahf
out
repnz
mov
xchg
inc
adc
repnz
lock
hlt
push
repnz
movsl
scas
rcl
sbb
xchg
xchg
shr
and
pop
roll
mov
lcall
mov
cwtl
shlb
es
es
jp
mov
cmc
mov
in
psubusb
inc
cmp
pop
dec
mov
sbb
ja
call
not
outsl
rcrb
pop
dec
push
or
test
out
ss
test
cli
call
jns
adc
mov
out
mov
mov
mov
into
out
push
mov
cli
shr
sub
xlat
test
stos
mov
icebp
jle
and
adc
jno
orb
pop
imull
mov
dec
fsubr
fwait
movsl
pop
insb
ret
cmp
scas
insl
mov
addr16
iret
mov
cwtl
sbb
xchg
out
mov
pushf
lsl
cmp
insl
xchg
xor
sbb
push
daa
sub
xchg
lods
test
mov
stos
push
push
insl
xchg
pop
lock
ljmp
push
daa
mov
inc
out
lods
inc
lods
in
adc
call
out
cli
lcall
popf
mov
popf
not
pop
jbe
dec
iret
addr16
and
mov
out
cmpsb
cmp
int
addr16
dec
out
imul
push
mov
imull
ljmp
xchg
push
jle
jbe
xchg
das
adc
clc
xlat
call
in
jno
sti
outsl
sub
fisubrl
xlat
rorl
cmc
test
mov
and
mov
ja
jl
mov
pop
xchg
xchg
or
mov
lods
repnz
ja
xor
ds
mov
mov
ds
adc
jo
in
push
inc
aad
in
cmp
mov
mov
xchg
sbb
and
inc
and
cmp
shl
adc
xchg
or
or
dec
mov
dec
sub
loope
mov
movsb
movsl
insb
dec
xchg
push
push
test
sbb
sbb
push
cmp
pop
jmp
cmpsl
pop
addr16
fidivs
cmp
jecxz
sub
add
xchg
dec
pop
out
rcpps
sahf
sbb
cli
push
aam
jmp
sbb
aad
js
cmp
sub
in
pop
ljmp
jne
and
cwtl
xlat
push
scas
pop
movntq
out
decb
mov
dec
ljmp
xlat
popf
inc
ljmp
in
mov
push
in
mov
in
cmpsl
pop
lods
ljmp
xlat
dec
inc
in
push
mov
push
xlat
gs
call
sub
idivl
push
sbb
push
lods
imul
in
xlat
xchg
jae
dec
push
mov
es
int
lea
enter
push
add
lock
push
aas
outsl
mov
jg
mov
es
sub
repz
mov
pop
or
repz
das
lea
mov
pop
stc
dec
sub
std
push
mov
adc
out
adc
adc
and
and
xchg
xchg
out
les
cmp
mov
adc
call
repz
lret
push
dec
fs
pop
subl
fistps
jg
sub
popf
cli
add
cmp
iret
ja
push
dec
mov
into
int
movhps
dec
fmuls
or
pop
dec
push
jge
jne
test
adc
scas
push
pop
aaa
emms
or
push
jo
xchg
out
dec
pop
inc
xchg
jmp
push
xchg
push
call
sbb
imul
pop
dec
sub
xchg
punpcklwd
push
cltd
iret
xchg
dec
mov
mov
jnp
lea
cwtl
pop
daa
xlat
jecxz
idivb
pop
iret
int3
outsb
insl
push
outsb
icebp
xlat
and
push
cmpsl
loopne
add
xlat
mov
sbb
int3
pop
nop
mov
divb
sbb
inc
cmc
or
mov
ljmp
scas
js
and
loopne
das
test
shrl
sub
mov
fsub
mov
rorl
dec
out
mov
dec
push
shlb
mov
jl
lods
int3
pop
imul
xchg
leave
inc
mov
fldt
leave
pushl
dec
pop
cld
fildll
jo
cmp
mov
out
add
imul
adc
pop
push
jg
testl
and
adc
mov
mov
push
cwtl
call
cmpsl
and
arpl
pop
js
pop
add
sub
sbb
or
jmp
fstl
xchg
jp
out
dec
cmp
push
clc
ja
cmp
push
dec
dec
pop
push
test
adc
js
push
in
or
mov
or
sbb
lock
mov
xchg
pop
jns
cmp
mov
sub
push
cwtl
out
nop
std
arpl
xchg
sbb
sbbl
shrb
clc
insl
mov
or
add
push
jmp
sbb
and
xchg
cmp
lds
sti
dec
mov
shl
xchg
hlt
or
dec
and
fwait
aam
jnp
in
shl
xchg
shlb
mov
loopne
testl
pop
cli
pop
mov
inc
push
in
push
jge
in
icebp
xchg
push
aaa
movl
test
in
cwtl
loope
iret
fsubr
push
push
push
or
add
xchg
pop
add
mov
call
mov
cld
hlt
dec
jecxz
ret
pop
dec
mov
out
mov
mov
jge
mov
add
int3
sbb
sub
xor
inc
shl
in
mov
dec
ret
fcoms
in
inc
xor
popl
hlt
fbstp
push
ss
rcrl
inc
test
cmp
xor
and
push
lcall
mov
popa
enter
int
scas
sbb
leave
xor
rorl
aam
push
hlt
int3
faddl
rol
lock
out
xchg
rorb
cmpsl
jmp
and
mov
add
in
and
fneni(8087
fdivr
add
ss
fldl
stc
or
mull
test
push
cmpsb
idivl
mov
icebp
mov
outsl
inc
jp
int
shl
mov
and
mul
adc
test
jmp
call
arpl
es
mov
cmc
lods
pop
mov
inc
push
push
dec
xchg
divb
cli
push
insl
sub
int3
les
rorb
push
aad
test
into
out
cmp
lahf
ljmp
nop
push
out
xor
push
ljmp
mov
call
sbb
push
and
movsl
mov
push
push
xlat
data16
ljmp
inc
mov
push
inc
xlat
adc
add
push
push
xchg
xlat
ljmp
daa
mov
cmpsl
xlat
out
ljmp
fcomps
xchg
mov
push
jbe
inc
out
ljmp
testl
and
fstpl
out
out
lods
cmpsb
mov
out
es
mov
rcll
mov
test
or
xlat
out
ljmp
pop
mov
outsl
ljmp
fmuls
push
xor
out
ljmp
sahf
mov
xlat
test
adc
cwtl
pop
pop
out
mov
push
lahf
xlat
outsl
js
leave
mov
push
push
aad
or
in
dec
push
aaa
in
dec
ljmp
pop
mov
push
scas
xlat
jbe
leave
add
pop
int
push
mov
sahf
xlat
out
aas
ljmp
in
gs
mov
in
mov
push
outsb
xlat
xchg
into
ljmp
lcall
aad
pop
pop
lods
mov
ljmp
fisttps
test
roll
xchg
mov
mov
dec
push
xlat
aaa
test
or
mov
push
iret
xlat
sbb
mov
in
movsl
loope
insl
push
pop
xchg
pop
cmpsl
in
fisttps
nop
fsub
or
movsl
pop
cmc
out
mov
dec
xlat
xchg
fsubrp
pop
nop
push
pop
out
mov
push
mov
shll
movsb
and
xlat
mov
ljmp
decl
push
sbb
out
mov
push
dec
xlat
xchg
ljmp
xlat
mov
push
jo
rclb
rclb
xchg
out
mov
push
push
xlat
xchg
ljmp
fdivrs
cmp
jmp
pop
xchg
sub
sub
ljmp
iret
in
or
in
mov
insb
jne
in
lods
xlat
in
ljmp
adc
out
mov
test
in
push
int3
rorb
and
in
mov
push
dec
xlat
dec
xchg
ljmp
xlat
fdiv
ljmp
mov
pusha
in
xlat
loopne
ljmp
xchg
xchg
dec
cmpsb
into
std
stos
mov
mov
sbb
out
stos
adc
movsl
push
in
cs
out
push
mov
in
mov
ljmp
fsubrs
push
out
lahf
push
ljmp
push
mov
push
in
xlat
push
adc
push
out
mov
push
not
cmpsl
push
ljmp
data16
push
xlat
in
lods
ljmp
fsubrs
push
out
xlat
scas
outsl
ljmp
ds
push
mov
add
push
mov
sub
ljmp
enter
xor
cwtl
loopne
call
dec
adc
dec
mov
lods
pop
fsubl
add
cs
cmpsl
fs
xchg
loope
test
daa
shlb
rol
loopne
ljmp
test
mov
scas
mov
xchg
adc
js
pushf
dec
test
mov
cwtl
adc
clc
mov
loopne
pop
mov
mov
push
in
je
in
in
call
call
imul
mov
sub
aad
dec
push
pop
add
outsl
lock
lods
push
mov
cmpsb
notl
es
mov
inc
sahf
push
mov
nop
inc
call
adc
test
aad
cli
loop
orl
add
ficoml
ja
gs
cld
pop
test
jb
cmpsl
repnz
sub
push
test
aas
cwtl
inc
dec
cmp
mov
insb
adc
mov
mov
mov
std
aam
lds
cmc
shlb
sbb
imul
outsb
jmp
sub
add
push
ffreep
lods
pop
aam
stc
sbbb
in
imul
fwait
xchg
xor
into
cwtl
mov
fcomp
xchg
ljmp
xchg
outsl
sub
pop
sbbl
lds
push
add
sub
hlt
mov
lret
jbe
popf
push
sub
std
dec
inc
shrb
loopne
pop
mov
add
lea
or
mov
xchg
sub
mov
mov
stc
push
jb
adc
adc
jo
fdivrl
pop
movsb
push
mov
orl
fsubr
fists
aad
gs
pop
push
je
sbb
sbb
push
shrb
dec
push
adc
mov
jb
cmp
cmp
pop
jno
push
adc
aas
cmp
ja
insb
push
dec
xlat
sub
scas
call
xor
pop
out
into
int3
in
ret
sar
and
push
imul
incl
cmpsl
mov
and
xlat
and
imul
xlat
and
repnz
push
mov
cmp
lods
pop
mov
adc
xlat
inc
xor
aas
test
clc
cmp
stc
xchg
mov
cmovl
pop
clc
loopne
in
push
or
ffree
xor
shr
xchg
push
pause
loopne
push
fs
sbb
pop
mov
imul
sub
out
out
mov
int
push
loop
cs
sub
inc
adc
idiv
jmp
cmc
insb
mov
in
or
or
mov
ljmp
fisttpl
inc
outsb
enter
lret
ljmp
mov
and
int
fimull
lds
adc
push
sbb
sbb
push
push
and
sub
inc
jecxz
in
sub
push
inc
push
ret
aaa
movl
sbb
rorb
pop
dec
adc
lret
xor
aaa
repz
push
sahf
aaa
mov
push
ret
rorb
pop
loop
pop
or
in
sub
push
jns
dec
arpl
rcr
in
sub
push
push
push
outsb
aaa
dec
call
sub
push
inc
push
xchg
loope
mov
or
in
sub
mov
push
out
push
repz
testl
xchg
sub
pop
js
shl
in
xor
mov
xchg
orb
in
loop
inc
pop
mov
dec
push
push
aaa
pop
orb
arpl
jp
dec
mov
jecxz
jg
cvtps2pi
mov
dec
pop
sub
mov
inc
xchg
jnp
xor
sti
jecxz
test
xchg
add
mov
mov
les
data16
ret
sbbl
ja
push
shlb
inc
jg
lahf
dec
test
inc
jns
jmp
sub
sbb
jp
out
addr16
mov
mov
sbb
sbb
in
xchg
add
cmpsl
dec
jg
jg
insl
dec
cwtl
mov
fcoms
les
das
cmpsl
xchg
and
jg
adc
jmp
inc
push
mov
sub
test
and
xchg
insb
fisubrl
xchg
pop
ja
dec
hlt
cmp
xor
adc
ja
lahf
pop
iret
xlat
daa
cld
lcall
dec
lret
lods
mov
and
addr16
mov
sbb
out
push
outsl
movsl
jmp
test
jecxz
dec
shll
scas
adc
out
cmpsl
pop
adc
sub
test
insb
loopne
lahf
xchg
push
testl
mov
clc
lea
add
iret
pop
lea
icebp
mov
test
in
adc
imul
sbb
addr16
cmc
xchg
cmpsl
out
xchg
das
adc
push
or
gs
jge
int
sbb
mov
mov
mov
sub
shrb
mov
call
jecxz
imul
sarb
cmp
test
sub
mov
outsb
roll
int
jo
into
rcr
clc
lahf
mov
add
pop
loop
pushf
and
xor
inc
ror
cmp
xchg
mov
clc
inc
mov
outsl
mov
dec
shrb
pop
sbb
mov
and
push
filds
xor
nop
mov
mov
lea
add
xor
lahf
in
outsl
int3
push
mov
daa
inc
jno
fwait
bound
cmp
out
add
xchg
xchg
mov
lret
xor
pop
push
aad
cmp
and
lods
clc
fbld
in
xchg
mov
sarl
cmp
pop
fisttps
outsb
cmp
xchg
pop
jmp
fsubs
or
sbb
loope
inc
shl
loopne
je
repz
xchg
xlat
cmp
outsl
les
fldl
mov
ljmp
rorb
loopne
std
mov
out
jl
sub
inc
xchg
gs
cld
lcall
adc
or
dec
inc
fdivr
inc
lods
int3
mov
pop
arpl
mov
hlt
sbb
sbb
int3
mov
arpl
add
insb
fs
bound
inc
inc
imul
xor
clc
call
lret
adc
stos
lret
or
mov
loopne
cli
lret
repnz
movsl
mov
dec
clc
cwtl
nop
loopne
popf
xchg
rcl
jne
lock
cmp
fcmove
rcr
xlat
cmp
adc
mov
xchg
lods
ret
mov
rcrb
xchg
push
cmpsb
adc
fiadds
xchg
movsb
rolb
dec
and
filds
jmp
pushf
iret
hlt
call
clc
in
xchg
int
jecxz
dec
imul
je
cmp
popa
lods
lret
mov
ds
sub
push
clc
mov
cmp
aas
enter
clc
fsubr
mov
mov
pop
inc
xor
into
jg
mov
iret
push
dec
adc
ljmp
inc
inc
cli
scas
lret
std
xlat
mov
push
dec
sbb
pop
cwtl
es
sub
cmp
pop
data16
popf
lock
aad
xchg
lock
gs
pop
sub
repz
lock
pop
inc
imul
subl
shrl
dec
pushf
fcoms
jge
or
stc
pop
ljmp
cmpsb
mov
xor
pop
pop
inc
enter
pop
pop
call
sarb
or
mov
sti
jb
sbb
jno
push
decb
test
mov
mov
mov
adc
mov
jnp
pop
cli
sbb
ffree
loopne
gs
xchg
test
sbb
pushf
push
js
inc
sbb
cmp
push
jg
push
test
dec
nop
and
push
leave
dec
rcrb
jecxz
xchg
es
xchg
inc
fdivrs
and
int3
sub
pop
gs
and
ficoms
and
dec
addl
push
pushf
dec
fidivl
sub
fisttpl
add
xor
fcmovne
mov
imul
pusha
xor
pop
pop
xchg
push
and
xchg
mov
add
sarb
imul
clc
repnz
jl
arpl
mov
roll
jns
sti
xlat
pusha
mov
in
xor
out
test
lds
aad
andl
xor
sti
inc
test
clc
fucompp
sbb
sub
ja
push
ljmp
out
insb
pop
jmp
inc
dec
jbe
addl
jno
or
call
adc
lret
in
jmp
cmc
dec
test
adc
scas
or
ljmp
pop
or
add
scas
adc
cmpsl
cld
rclb
mov
pushf
mov
cmp
sarb
push
jb
aas
ds
loopne
lcall
loope
rcll
cmpsb
test
imul
cmp
push
mov
inc
cwtl
cmp
mov
imul
dec
dec
mov
out
inc
mov
iret
push
mov
add
jmp
ljmp
xlat
push
stos
xchg
cmpsb
into
pop
inc
xchg
pop
cltd
mov
je
int
out
les
fisttpll
cwtl
adc
cmpsl
sbb
jo
xchg
mov
int3
imul
push
aam
mov
adc
and
out
sahf
xor
cli
lret
aaa
push
rorb
mov
popf
jg
iret
outsb
push
mov
test
pushf
dec
idivb
lcall
js
in
cli
cli
jp
and
insb
jns
jle
mov
dec
clc
js
pop
pop
je
aas
xor
jle
aas
dec
aad
mov
adc
lret
mov
aas
fdivr
in
stos
pop
jmp
pop
mov
adc
xchg
jbe
mov
xchg
xchg
fidivrl
mov
test
add
dec
ja
int3
xor
sub
iret
clc
je
outsl
mulb
dec
push
add
jo
fadds
sti
fnstenv
pop
mov
in
outsl
dec
sahf
cmc
rcll
fildll
jno
mov
incl
dec
enter
and
iret
std
xchg
mov
sbb
inc
repz
mov
sub
mov
vpunpcklbw
mov
cmp
fsubrs
test
and
add
mov
inc
push
shrl
rcrl
sti
pop
jl
and
fadd
mov
lock
lret
nop
add
adc
loope
inc
mov
add
jnp
pop
dec
inc
ja
icebp
call
loop
sub
and
aaa
insl
dec
fdivrs
xchg
int
pop
mov
lds
pop
call
int
stos
test
mov
mov
shr
mov
outsl
pop
mov
xor
or
into
sbb
lock
cmp
sbb
xchg
fwait
add
out
lret
xor
clc
out
cmp
daa
cwtl
and
arpl
into
add
cmp
add
stos
repnz
pop
mov
mov
push
out
int3
mov
xor
pop
push
pop
add
gs
dec
fs
pusha
pop
xchg
pop
inc
xchg
aam
jno
pop
lret
call
rolb
xor
les
mov
mov
adc
fcoml
aas
out
mov
stos
movsb
mov
hlt
pop
xor
int3
xor
fisttps
push
mov
loope
js
dec
push
dec
mov
jno
inc
hlt
loopne
jbe
out
xchg
mov
mov
push
or
test
lret
dec
xchg
mov
lea
pop
cmpsl
xor
fsubs
ljmp
lock
or
mov
mov
sub
dec
pop
cli
xchg
fisubl
test
cld
cmp
imul
cli
xor
gs
mov
nop
xor
xlat
jge
jno
outsb
iret
out
movsb
loope
push
test
jl
pop
mov
rorb
cwtl
dec
loopne
shlb
jo
fidivl
sar
sti
pop
popa
xor
outsl
loopne
testl
mov
ja
mov
gs
leave
mov
in
stos
push
aad
loopne
lods
sbb
cmpsb
out
sbb
frstor
mov
adc
xchg
shll
dec
or
imul
repnz
mov
mov
jbe
dec
push
repnz
lods
push
pop
bound
xor
xchg
mov
xchg
push
fcoml
add
js
inc
out
pop
and
cwtl
pop
sbb
test
jnp
daa
rorl
dec
imul
stos
movsb
stos
jge
in
fnstenv
cmc
in
ss
andb
mov
lahf
mov
leave
rorb
sti
stos
stos
nop
mov
ds
call
inc
xchg
cmp
add
mov
mov
xchg
pushf
xor
dec
cld
fmul
xchg
mov
ljmp
pusha
cli
shlb
shlb
test
xor
lret
adc
loop
push
fidivrl
out
inc
lods
mov
inc
pop
sbb
fmul
xlat
out
xchg
iret
icebp
or
cld
repnz
sti
and
insb
insb
incl
fistpl
call
xor
nop
int3
push
and
loopne
test
cmp
jae
sub
ret
cwtl
xchg
test
hlt
and
sbb
in
or
or
movsl
or
hlt
pop
pusha
sub
orl
test
mov
cwtl
adc
cld
arpl
sbb
jge
dec
ret
cmpsb
jno
push
arpl
xchg
test
test
fsubs
addr16
push
aad
cmpsb
in
inc
cs
rclb
pop
stos
jo
push
ljmp
jmp
cmc
hlt
addr16
pusha
ljmp
ss
test
mov
mov
cwtl
sbb
and
add
shll
mov
sub
imul
or
adc
dec
iret
ds
dec
lret
or
sub
lock
fdivrp
xor
sbbb
arpl
mov
movsl
xchg
add
cmpsl
call
movsl
je
inc
or
jecxz
repnz
lock
or
sbb
adc
mov
leave
out
lret
cmp
out
push
xor
pusha
cmovg
or
sbb
cmp
and
dec
mov
sbb
scas
inc
insb
lods
int3
xchg
cwtl
push
xor
stos
pop
sub
cmpsl
loop
stc
xor
test
jg
jb
cli
pushf
imul
cwtl
mov
mov
sbbb
jbe
dec
sub
push
lahf
or
cmp
mov
inc
pop
inc
mov
out
push
fs
ret
outsl
sti
mov
cmp
mov
ret
push
jae
adc
push
mov
sbb
mov
pushf
xor
out
sbb
sub
push
or
imul
js
aad
cli
mov
jl
mov
mov
mov
fmulp
push
dec
mov
xor
pushf
cwtl
dec
mov
jecxz
lods
dec
insb
or
hlt
dec
and
popl
xchg
rolb
sbb
mov
pop
outsl
push
xchg
movsb
in
xor
jmp
sub
mov
lret
fsubr
mov
rclb
mov
mov
fwait
shlb
imul
aaa
popl
inc
xlat
shrb
dec
sbb
negl
call
loopne
iret
sti
xchg
xlat
dec
fidivrl
or
in
into
repz
xor
xchg
repnz
in
call
xor
dec
mov
aas
pop
call
shrb
loopne
xchg
gs
aam
mov
leave
clc
xorl
add
aas
pop
mov
add
mov
jge
add
cmp
push
mov
enter
push
movsl
add
sahf
push
int3
xor
xchg
loope
inc
mov
ss
test
add
push
es
in
shlb
and
add
test
cmp
fldt
jecxz
mov
push
pop
mov
es
jg
out
leave
push
jne
inc
push
aam
je
int
add
jge
cmpl
sub
xchg
imul
das
das
call
popf
fs
or
xchg
mull
cmp
push
imul
mov
out
test
inc
mov
stos
fwait
jne
sti
add
fcomi
scas
arpl
xchg
shlb
int3
insb
pop
in
std
ror
push
or
dec
flds
mov
push
mov
mov
fadds
pop
movsl
data16
loop
out
sti
add
fisubs
pop
movb
push
add
jecxz
leave
sahf
push
rcll
inc
inc
or
nop
dec
into
pop
sbb
xor
pop
jecxz
mov
mov
mov
lcall
in
mov
dec
ds
mov
aas
xor
sti
sar
movsl
shlb
lcall
jno
fmulp
push
jecxz
adc
je
shrb
call
dec
imul
outsl
adc
into
xchg
loop
je
punpckldq
dec
xchg
dec
rorl
int3
pop
loopne
pop
lret
movsl
out
dec
rcr
push
nop
outsb
push
int
out
xchg
std
fsubl
loopne
mov
sbb
rorl
and
in
in
inc
lods
outsb
and
sbb
aaa
dec
dec
cmc
mov
in
pop
ljmp
pop
lret
lret
xlat
mov
lods
shr
ljmp
loopne
mov
in
icebp
rcr
dec
mov
lods
hlt
push
in
dec
xlat
mov
in
ljmp
cmp
insl
pop
push
negl
lahf
mov
push
lret
or
mov
mov
int
fucom
lods
push
and
jmp
sub
js
nop
aam
pop
and
jo
adc
push
jae
sbb
push
sub
add
imul
and
pop
in
dec
mov
ds
inc
cmp
inc
fadds
xor
mov
mov
mov
xorl
mov
in
sbb
pushf
scas
mov
jns
xor
sub
or
lock
inc
scas
dec
aas
jnp
insb
pop
push
mov
xor
inc
cmpsl
out
inc
jp
pop
scas
fsubs
clc
adc
inc
out
imul
or
mov
cmp
ror
test
loope
cmp
dec
mov
clc
fwait
pop
into
jns
xchg
mov
pop
push
out
js
shll
mov
pop
shrl
lret
je
iret
loop
pop
pop
cmc
fistpl
lcall
out
dec
sub
test
dec
out
lcall
fnstcw
rcl
mov
cli
pop
gs
push
dec
ljmp
scas
roll
mov
push
xor
fld1
test
inc
cli
sbb
je
adc
xchg
dec
test
inc
icebp
cltd
repnz
clc
and
mov
dec
push
test
out
mov
es
clc
aaa
inc
mov
sbb
sub
test
ss
dec
sub
adc
pop
push
and
xor
lods
fisttpll
int3
es
nop
or
sarl
enter
mov
lea
sbb
dec
lcall
out
fcoms
ret
in
and
jl
aaa
mov
jne
sbb
loopne
add
addr16
cmp
out
dec
jb
scas
cli
add
cmc
dec
rcrl
xor
hlt
lock
fsubr
iret
divb
sbb
mov
scas
cmc
sub
in
pop
pop
jo
push
push
imul
dec
jp
jmp
pop
fdivrs
lds
and
dec
adc
pop
pop
clc
out
daa
and
cli
aaa
mov
aaa
stos
ljmp
rorb
and
in
mov
ljmp
mov
mov
pop
jno
cmp
lods
mov
pusha
pop
push
xchg
cmp
lret
cwtl
aam
mov
js
pop
xchg
sbb
test
mov
and
jp
lock
adc
cmp
cmp
lcall
ss
xchg
fidivl
fdivr
addr16
out
stos
push
clc
xchg
or
mov
movsb
repnz
fildll
imulb
shl
xor
lds
adc
jge
cmp
adcb
mov
adc
cmp
jns
insb
call
mov
pop
imul
sbb
pusha
and
or
jecxz
adc
cwtl
jno
and
aad
mov
repz
jmp
add
out
orl
jmp
cmp
jmp
int3
dec
call
jecxz
repz
fwait
push
and
xor
inc
inc
pop
shrb
cmpsb
fidivl
jecxz
xor
leave
pop
lret
adc
add
add
jge
pop
push
jecxz
jge
sbb
call
dec
imul
popf
into
xlat
outsl
pop
and
mov
orl
aas
icebp
enter
clc
adc
cmp
dec
pop
mov
dec
dec
push
mov
cmpb
lahf
cmp
sahf
sub
dec
push
nop
fdivs
jmp
dec
cmp
iret
xchg
aas
sbb
call
sub
popa
in
adc
aad
out
mov
in
adc
pusha
cmp
or
leave
jno
enter
xor
pop
mov
add
lods
shll
pop
jge
pushf
cli
incb
repz
imul
pop
jbe
out
dec
jl
xorl
leave
cmp
xorb
sbb
rorb
fsubp
mov
mov
lds
inc
hlt
or
lods
ja
mov
movsl
xchg
mov
leave
inc
lds
icebp
lock
push
jecxz
dec
test
or
icebp
cmp
iret
cli
xor
sbb
xchg
mov
sbb
cmp
mov
cltd
cmp
cmp
cmpl
dec
pop
int3
and
repnz
push
aaa
fs
fcmovne
push
repz
push
sbb
fcmovnbe
pop
cmpsb
xor
adc
gs
push
in
sub
push
hlt
jno
pop
in
mov
mov
aam
cli
cmp
jb
ror
push
mov
ret
mov
fadd
ds
push
test
cmp
pop
pop
icebp
jbe
aam
push
test
iret
dec
ret
dec
cs
aas
rorb
test
sub
pop
pop
jecxz
or
ljmp
rol
pop
out
pop
jno
icebp
xor
bound
push
add
xchg
lret
std
inc
ret
mov
lea
aad
xor
xor
pop
sub
call
clc
ljmp
test
cwtl
out
fimull
cwtl
or
movsl
xchg
xchg
pop
xor
gs
into
push
xchg
jecxz
ja
insl
lods
push
or
rcrb
dec
ret
cli
ret
sub
lret
loope
adc
xchg
pop
dec
in
xchg
sti
call
and
dec
mov
in
scas
mov
rcl
and
push
scas
sbb
push
jb
lods
lahf
mov
sbb
cwtl
clc
pop
sbb
pop
cwtl
bound
mov
cmp
sub
push
dec
dec
rcrl
clc
pop
mov
cmp
sbb
xchg
push
clc
push
and
or
mov
lock
pop
cwtl
jle
aad
pop
les
and
push
sub
jae
imul
mov
jmp
shl
ljmp
mov
inc
addr16
jno
fstps
stos
push
xchg
mov
push
shlb
xor
mov
insl
aaa
sbb
movsb
cmp
adc
or
xor
push
adc
aad
xor
shlb
sbb
sub
mov
dec
jmp
ljmp
adc
mov
gs
mov
out
pushf
clc
out
add
sub
fisubrl
fstl
push
or
test
aaa
cld
insb
mov
test
mov
mov
cmp
mov
xchg
aad
outsb
pop
mov
sbb
or
dec
in
out
pop
mov
push
cmc
mov
cwtl
xchg
nop
gs
xlat
cmpsb
out
dec
test
mov
jge
mov
lock
in
cld
xchg
dec
das
xchg
out
jbe
lcall
xchg
movsb
aas
jecxz
sbb
gs
mov
ja
xchg
sahf
mov
inc
pop
xor
mov
mov
mov
pop
out
push
cmp
xchg
push
dec
cld
ja
shr
pusha
shrl
movsb
nop
lahf
xchg
movsb
test
push
mov
push
decl
mov
into
jp
push
push
inc
adc
into
ror
pop
outsl
xchg
aam
push
arpl
mov
mov
fcomp
add
shr
xor
popf
fdivl
test
clc
repz
jmp
or
jmp
enter
sbb
cwtl
xchg
lcall
in
adc
call
in
jecxz
gs
addr16
sub
ljmp
mov
push
sbb
adc
inc
and
cld
cmpsl
or
sahf
icebp
push
dec
in
mov
sahf
in
jge
adc
int
and
cmp
xchg
inc
mov
ret
out
in
push
es
ds
adc
jbe
mov
pop
cwtl
mov
dec
movsb
sbb
inc
or
mov
mov
enter
out
mov
push
scas
loopne
mov
add
lds
mov
pusha
fdivs
add
adc
test
push
stos
shr
stos
jecxz
xlat
divl
scas
scas
adc
lods
dec
pushf
cmp
addr16
fnstenv
rorb
lahf
sub
jns
pop
imul
lcall
sbb
hlt
scas
frstor
cmpb
nop
scas
iret
decl
push
sbb
in
lret
cwtl
mov
in
xchg
cmc
sub
adc
push
sahf
jmp
lods
add
movsl
jno
mov
mov
call
insb
and
out
add
iret
adc
mov
add
out
gs
sub
xchg
pop
xor
mov
add
out
sbb
hlt
das
lods
xchg
imulb
mov
jge
fisttpll
nop
insl
ret
es
pusha
xlat
cmc
push
cmp
ljmp
test
scas
fs
cmc
mov
or
jg
rolb
sub
mov
mov
divw
lds
clc
out
jb
lahf
xchg
test
add
add
add
jle
insb
jmp
sub
dec
outsb
cmp
leave
rclb
iret
aas
decb
mov
jp
dec
outsl
stos
pop
dec
inc
jno
lahf
jl
aam
lock
leave
in
shrb
sbb
ljmp
fcomip
sub
xlat
cmp
out
sbb
sbb
aas
movsl
mov
xlat
xor
and
leave
in
ret
movsl
orb
lock
clc
xchg
dec
es
and
mov
out
sbb
nop
adc
stc
das
sub
lret
inc
loopne
lret
adc
loope
push
mov
fsubrs
adcl
mov
addr16
xor
cmpsl
cmp
outsl
push
sub
pop
add
into
pop
jg
rcll
cmp
mov
dec
sbb
adc
mov
stos
or
sbb
in
repz
andl
pop
xchg
or
cltd
and
ljmp
ret
push
dec
bound
cmpsb
jbe
inc
add
shll
add
cmp
aas
pop
mov
lcall
and
fidivs
push
push
in
push
out
fcomps
mov
aas
xchg
mov
push
adc
stos
mov
and
fstl
repz
dec
mov
in
bound
std
test
in
in
and
xor
push
mov
mov
xchg
or
mov
push
mov
test
inc
gs
ja
lret
hlt
lret
adc
mov
fisubs
lods
cli
add
test
sti
add
jge
push
ja
mov
sahf
call
loop
shll
sti
imul
inc
adc
mov
sbb
cmp
push
out
jmp
jmp
in
test
xchg
dec
out
mov
jno
pop
mov
sbb
push
add
mov
orb
xor
jo
das
js
inc
test
sub
dec
and
in
cmp
loope
addr16
or
je
loop
xor
aaa
pop
clc
push
pop
cwtl
mov
cltd
cmp
mov
mov
and
movsl
xor
mov
insl
dec
pop
dec
lcall
jmp
xchg
nop
enter
js
sbb
in
cmpl
xor
out
pop
int3
pop
aam
fstl
dec
dec
jp
test
leave
jne
clc
hlt
int
lret
pop
mov
aaa
dec
cmp
inc
loope
lret
leave
ljmp
cmp
mov
int
insl
das
lock
int3
scas
test
ret
pusha
push
loopne
cmpsb
pop
pop
jae
pop
ret
std
push
leave
push
loopne
test
jg
inc
jp
lret
mov
inc
mov
ljmp
sahf
inc
and
jo
ljmp
test
repz
mov
cli
mov
sub
into
mov
daa
inc
inc
fdivrp
mov
sbb
pop
fimuls
mov
clc
out
pushf
fisubl
adcl
mov
push
insl
push
xlat
mov
cli
inc
push
loope
mov
dec
dec
add
aam
test
scas
pushf
cld
adc
inc
xchg
or
cmp
nop
andb
push
adc
xlat
pop
sub
mov
popl
cmp
mov
shl
mov
push
push
cwtl
out
mov
shll
sbb
jp
in
add
cmpsb
outsb
daa
cli
adc
add
adc
mov
and
fstpt
pop
push
ss
in
movsl
add
or
jecxz
mov
jb
push
aaa
rclb
lock
add
mov
jl
ljmp
adc
mov
out
test
add
out
adc
jne
fcomps
in
lahf
iret
in
lea
push
cwtl
adc
lods
cld
xor
jecxz
cmp
jno
add
sbb
gs
lcall
adc
cmp
movsb
xlat
mov
loopne
push
sub
xchg
mov
pop
xchg
inc
or
daa
xchg
push
mov
adcl
mov
pop
jp
js
pop
sbb
negl
sub
xchg
sarl
in
push
sarl
mov
add
mov
aas
ret
shl
cli
out
pop
cmp
testl
mov
js
add
mov
mov
dec
mov
xlat
movsb
sub
push
out
movsb
mov
lret
nop
pop
pop
lock
jg
or
mov
arpl
adc
cld
pop
pop
dec
shlb
int3
lret
mov
jmp
jns
lods
arpl
jae
mov
fists
addb
pop
in
xor
cwtl
out
mov
pop
in
mov
jb
aad
cli
rcrl
xor
pop
xlat
cmpsl
or
pop
inc
push
add
scas
mov
xchg
adc
lods
push
leave
iret
push
dec
add
jmp
dec
ljmp
loopne
and
loope
out
sbb
repnz
mov
fstps
test
and
xor
jecxz
jae
js
dec
and
cwtl
fisubl
sbb
lcall
cwtl
es
add
add
or
lea
pop
dec
dec
pop
shr
cmp
fcomps
push
call
movsb
xchg
jmp
nop
pop
push
addr16
pop
mov
push
pop
roll
aad
and
xchg
mov
orl
pop
jge
jnp
mov
out
sbb
out
xlat
adc
test
out
aaa
je
pop
in
fs
mov
bound
mov
nop
sarb
mov
repnz
faddl
outsl
in
adcb
jae
aam
addr16
aaa
out
jbe
jne
push
stos
outsb
mov
mov
repz
fnstenv
cmp
xorl
loope
ljmp
dec
fmull
cwtl
mov
fcmovbe
sub
jb
out
xor
and
sub
ds
and
pop
xlat
adc
cmp
add
adc
outsl
inc
sub
leave
int3
mov
sub
xchg
sbb
push
andb
sbbb
stc
sub
roll
in
pop
test
in
ljmp
dec
cmpsl
lahf
aaa
rcrl
add
mov
add
ror
loopne
imul
rcrb
xchg
int3
mov
sub
xlat
inc
dec
repz
call
out
loopne
or
call
dec
loopne
mov
dec
jb
std
cwtl
rolb
rol
lods
ljmp
inc
mov
test
lods
pusha
pop
xchg
push
cmp
sbb
into
faddp
cmp
push
mov
out
repnz
xchg
xor
repz
pop
sbb
lret
sbb
cmp
xor
outsl
dec
aas
gs
jl
stos
out
inc
and
into
mov
xchg
popf
lods
fwait
push
pop
pop
lea
test
rep
xchg
mov
faddp
xchg
mov
aaa
out
movsb
mov
shrl
mov
mov
aaa
mov
fisttps
pop
xchg
jecxz
inc
aam
dec
int3
xor
loop
and
and
add
dec
fisubl
leave
ljmp
clc
imull
test
pop
ret
jno
mov
xchg
out
in
push
mov
fsubs
mov
rclb
ljmp
xorb
fistps
mov
or
insb
dec
adc
mov
dec
hlt
mov
int
in
dec
add
sub
push
mov
aaa
push
out
mov
push
fdiv
rcr
sub
cli
mov
pop
push
test
dec
in
pop
lods
movsl
push
sbb
mov
rcr
gs
rcl
test
push
push
incb
gs
or
insl
leave
pop
mov
or
btr
xchg
push
xchg
dec
xchg
repz
cmpsl
dec
sbb
push
popf
xchg
adc
gs
cwtl
cli
ljmp
rorb
out
int3
gs
hlt
xorb
stos
mov
es
push
es
mov
push
xchg
cmp
adc
shl
outsb
iret
adc
or
push
js
inc
xchg
cmc
dec
mov
sub
scas
ljmp
push
pop
jmp
mov
sahf
sub
aaa
pop
sub
shll
mov
pop
dec
out
clc
mov
mov
call
movsl
test
lret
cmp
fs
sub
ss
adcl
les
pop
call
sub
mov
xor
into
aam
xchg
int3
lret
outsl
in
addr16
fwait
mov
pop
adc
hlt
pop
rolb
stos
inc
dec
fisttpll
dec
iret
divb
imul
sbb
and
aaa
jo
add
js
mov
xor
flds
fdiv
js
inc
inc
gs
shr
adc
dec
mov
inc
loopne
js
adc
outsl
das
mov
pushf
ljmp
inc
xchg
or
enter
mov
jo
es
hlt
ljmp
insl
mov
xchg
shrb
pop
mov
jecxz
mov
outsl
sbb
nop
xchg
ljmp
and
lret
sbb
ficomps
mov
data16
xor
loopne,pt
ret
add
outsb
fs
in
ficompl
in
pop
cld
clc
cmp
add
cmp
lahf
in
fisubl
subl
out
push
not
mov
fxch
fwait
or
sbb
das
jmp
cmc
in
shlb
repnz
inc
jecxz
imul
jb
mov
cmp
cmp
pop
push
out
pop
mov
push
nop
jecxz
sti
in
cli
jl
idivb
les
out
js
mov
sti
sub
sub
cs
fwait
std
clc
pushf
imul
lea
arpl
imul
pop
sbb
add
aas
or
cmp
push
cmp
and
xor
sub
add
pop
testl
test
loopne
cli
mov
jno
dec
mov
jnp
in
nop
std
add
outsl
in
mov
jno
popf
shrb
xchg
jno
push
pop
fadds
jb
shrb
outsb
adc
jle
mul
xchg
adc
xchg
mov
aas
out
iret
lret
ret
sub
lahf
std
hlt
sar
movsb
imul
mov
inc
cmp
imul
nop
jno
icebp
out
out
add
push
inc
cwtl
imull
insb
rcrb
mov
push
xor
test
out
les
xor
adc
rcrl
sub
xlat
mov
sarb
lret
mov
movl
dec
cmp
sbb
push
popa
pop
cmp
cmovbe
lock
repnz
cmp
dec
lea
pushf
pop
loope
call
sbb
xchg
jae
repz
xchg
jbe
repnz
jl
outsl
gs
or
pop
pushf
pop
lods
mov
ljmp
mov
insb
stos
imul
dec
rorl
jl
jne
or
sbb
jno
outsb
out
xlat
faddl
cwtl
scas
sbb
stc
sub
int3
imul
movsl
shll
lahf
dec
test
icebp
jno
mov
inc
sub
ljmp
adc
xlat
es
sbb
inc
mov
xor
hlt
es
xchg
mov
leave
jmp
dec
cmp
bound
jnp
xlat
pop
jnp
pop
popl
jl
out
ret
pop
mov
repz
jge
mov
lea
mov
out
loop
pop
loope
test
xor
dec
jp
ljmp
mov
test
lock
xchg
adc
das
jmp
iret
mov
xchg
inc
mov
jne
js
hlt
stos
shlb
pop
cli
adc
addr16
ljmp
in
nop
mov
cld
js
lret
repnz
push
pop
or
pop
inc
xlat
gs
das
mov
push
fucomp
sbb
rclb
mov
push
pop
test
rcr
out
pusha
xchg
sbb
in
test
faddp
mov
ljmp
jmp
sub
xchg
das
sti
gs
aam
mov
aam
fsubrl
jne
jo
xchg
mov
add
or
inc
clc
xlat
shll
mov
sub
imull
dec
xchg
in
cmpsl
es
mov
test
xchg
dec
push
daa
mov
dec
insb
pushf
lcall
push
cmc
xlat
dec
cli
insb
xor
push
cwtl
add
test
ljmp
jecxz
sub
push
js
lock
or
sbb
test
fs
xchg
inc
dec
add
pusha
insl
mov
lds
adc
cmpsb
loopne
inc
push
dec
lods
outsb
in
adc
sub
ret
add
pop
mov
sbb
sub
cli
xlat
push
or
jno
js
hlt
pop
pop
cwtl
aad
jns
push
sub
loope
sub
rorl
sub
shr
xlat
movsl
push
iret
out
test
addr16
jmp
xchg
add
sub
mov
mov
add
inc
push
inc
call
out
call
cmp
test
cmpsb
fimuls
out
or
mov
in
roll
mov
or
pop
clc
les
pop
sub
pop
loopne
fsubs
test
pop
jbe
cmp
pminub
adc
pop
in
out
loopne
push
in
push
adc
es
out
call
dec
stos
dec
inc
dec
cmp
ljmp
mov
sub
pop
pop
mov
loope
ljmp
xchg
pop
pop
or
jo
js
stc
sbb
aaa
adc
mov
push
jo
out
mov
add
cmp
adc
or
jg
sbb
adc
mov
pusha
orb
dec
cwtl
je
js
or
pop
call
and
ljmp
rcll
mov
imul
dec
mov
sarb
in
and
shr
mov
add
test
and
push
test
filds
aaa
out
lds
mov
inc
es
loope
jmp
test
ret
sub
fsubr
xor
call
cmc
dec
pop
add
jmp
lahf
xchg
cli
fbld
and
sbb
imul
push
fs
aaa
jecxz
js
push
pop
or
xor
test
mov
cwtl
in
pop
fcom
lcall
neg
ficompl
getsec
lret
mov
push
pushl
cli
mov
clc
push
les
mov
clc
lcall
push
pop
mov
pop
dec
cmp
filds
ja
call
out
ljmp
xchg
xchg
adc
cwtl
iret
mov
dec
cmp
les
cmpsb
mov
js
fcomps
or
clc
pop
faddp
imul
test
pop
inc
adc
les
sub
mov
mov
sub
and
mov
movsb
bound
mov
cltd
cmp
sbb
gs
cli
sub
leave
nop
in
jne
sub
sti
cmp
cmpsb
pusha
popa
dec
aam
and
pop
daa
leave
gs
data16
pop
lock
mov
imul
dec
mov
push
hlt
sub
pop
incb
mov
scas
stos
sbb
pop
pop
pop
jb
push
fsubl
sbb
or
xor
data16
sbb
icebp
pushf
add
ds
int
pop
rol
ja
cmpsl
jge
repnz
test
fadd
sub
jbe
cmp
out
int3
shlb
arpl
inc
cmp
mov
outsl
mov
cmp
and
or
ret
stos
es
xor
jmp
mov
fnsave
test
or
mov
sbb
pop
in
aaa
sub
inc
lahf
mov
xor
sbb
sub
sti
lds
int3
mov
fcmovbe
daa
ja
lcall
pop
jns
pop
pushf
faddl
xchg
hlt
in
movl
pop
mov
faddl
fisttpl
push
sahf
sahf
xchg
adc
sub
add
test
pop
lret
cmp
xchg
outsl
add
push
mov
inc
mov
sub
jl
push
mov
loope
jno
rcll
test
mov
pushf
mov
lahf
jno
mov
leave
push
sbb
sub
popa
mov
dec
pop
int
mov
les
ffreep
lds
mov
add
into
stc
movl
fwait
jp
neg
or
mov
lods
dec
mov
fidivl
js
sti
adc
in
aam
and
pusha
xor
repz
mov
pop
fcoms
insl
in
aas
mov
out
pop
push
mov
pop
sti
pop
xor
aam
cmp
fcoml
mov
mov
ljmp
push
adc
movsb
push
add
inc
mov
inc
lahf
fmul
pop
repnz
aas
xlat
aad
lcall
loop
gs
mov
subb
lods
pop
push
call
inc
adc
ljmp
push
imul
jge
cmpsl
xor
add
sbb
or
aad
dec
test
or
shll
or
call
add
or
in
mov
sbb
ljmp
or
xchg
or
lahf
adc
and
addr16
xabort
add
push
pop
shl
dec
repz
daa
std
movsb
lret
mov
test
inc
insb
loope
xchg
lods
lds
rorb
mov
or
mov
addr16
sub
push
repnz
xor
lcall
inc
rol
in
clc
rcll
inc
add
mov
int3
cld
cli
jle
dec
cli
mov
xlat
adc
out
dec
rolb
icebp
faddl
adc
lret
jae
push
inc
divb
cmc
ljmp
lret
xchg
cli
adc
cmpsb
cli
loope
pop
xchg
popf
pop
add
test
dec
mov
cmpsl
xchg
sub
movsl
out
dec
xlat
lods
out
test
dec
fimuls
xchg
test
roll
mov
aad
or
pop
call
xchg
push
aad
pushf
in
mov
iret
mov
cltd
push
addr16
mov
pop
add
fsubr
mov
mov
decl
out
outsl
hlt
dec
mov
jmp
xor
xlat
xlat
cs
repnz
lret
gs
xor
fcompl
or
movb
cmp
pop
push
add
cmp
sub
loopne
mov
aas
mov
lret
outsl
mov
dec
test
mov
fs
fdivrl
add
inc
sub
cmp
aad
loopne
out
in
data16
dec
out
cmpsl
mov
xchg
inc
jne
into
imul
mov
les
fsubrs
das
pop
popa
push
aad
jl
jmp
sub
stos
es
fmuls
lds
nop
and
lahf
jmp
mov
loope
into
sarl
push
in
xchg
push
mov
lret
sub
dec
pop
cs
out
sub
fs
mov
push
xlat
das
xor
imul
outsl
pop
sub
rcrl
dec
push
jl
adc
into
fwait
pop
jae
cmp
imul
icebp
pop
fdivs
jg
sbb
xchg
in
stos
jo
or
dec
test
hlt
mov
push
sbb
xlat
and
inc
fucomp
orb
or
push
cs
push
mov
out
sbb
cmp
push
rol
pop
call
and
call
or
test
es
xchg
int3
rcr
mov
cmp
vmwrite
xlat
mov
rol
dec
inc
clc
pop
jno
lods
sbb
cwtl
ds
pop
int3
xchg
cwtl
and
jp
popa
in
sbb
ret
lahf
fcoms
movsb
xchg
out
xchg
add
popa
xchg
movsl
inc
hlt
jne
loopne
movsb
adc
movsl
call
cwtl
lods
test
rorb
push
pop
jecxz
ficompl
subl
jne
cmp
push
fnstcw
adc
out
pop
gs
pop
lea
fdivl
ds
inc
daa
dec
inc
decl
in
loopne
sub
stos
xlat
in
mov
fidivrl
popf
test
rcrl
xlat
xor
mov
pushf
add
jno
and
shrb
mov
adc
test
inc
movsl
jg
scas
dec
dec
sub
lea
xchg
cmp
lret
pop
addb
loope
popf
cmpsb
mov
test
cmpsl
xor
idivl
data16
mov
sbb
test
addr16
sbb
ss
xor
push
out
pushf
pop
pushf
addr16
insl
or
ljmp
dec
xchg
mov
jl
ret
repz
mov
mov
xchg
mov
jne
mov
pop
fisubs
loope
call
cmc
fisttps
xchg
movsb
sbb
mov
or
xchg
scas
xchg
xchg
mov
sbb
mov
call
xchg
mulb
mov
and
je
jne
mov
pop
scas
or
out
test
add
jge
test
loope
fstpt
xchg
mov
xchg
dec
sahf
clc
sub
icebp
sar
fcoms
test
scas
mov
mov
int3
mov
iret
insb
dec
mov
movsl
and
or
sahf
ficompl
outsl
fmuls
mov
mov
inc
sub
imul
outsl
fdivrl
arpl
in
sub
pop
js
test
mov
rcrb
jo
in
jecxz
xchg
mov
in
mov
cld
out
inc
xchg
push
jle
or
xchg
test
dec
mov
adc
adc
push
or
xlat
in
out
iret
pushf
mov
popf
movsb
bound
aas
cmp
cli
mov
outsb
loope
cld
or
clc
sbb
sub
js
lock
fdivl
add
sbb
add
call
lret
ja
repnz
lret
push
inc
jle
mov
adc
xchg
sub
rcrb
ds
jo
daa
enter
xor
cmp
mov
shl
adc
stos
cmp
cmp
pop
int3
fwait
mov
add
test
movsl
clc
clc
xor
jbe
mov
mov
subl
xchg
loopne
mov
pop
sti
add
xlat
xor
pusha
mov
mov
mov
cltd
xor
and
outsb
mov
mov
fwait
gs
test
fdivl
out
push
test
add
mov
aad
xor
cs
jg
mov
iret
cmp
scas
ficoms
fucomi
mov
and
inc
cmp
xchg
push
out
mov
aas
clc
outsl
popf
mov
add
je
xchg
push
iret
adc
xor
int
mov
es
sbb
jge
and
in
sub
aad
fxch
jne
xchg
push
outsb
cmpsl
ficomps
aaa
inc
imul
mov
sbb
sub
test
xor
mov
lds
aam
adc
adc
sub
icebp
xchg
dec
and
leave
aad
jno
insl
in
leave
out
ja
jl
imulb
mov
test
ss
adc
lcall
enter
mov
pop
lock
push
sahf
in
shll
in
nop
out
cli
lods
data16
cmp
mov
adc
pop
sbb
adc
inc
pop
sub
xlat
cli
loopne
xchg
ljmp
jb
fs
mov
jnp
aaa
clc
or
xchg
les
inc
xchg
iret
mov
cmp
stos
pop
lods
in
cmc
rolb
add
inc
pop
pand
addr16
aas
gs
popf
mov
enter
sbb
push
movsb
insb
xchg
out
and
add
lea
inc
aam
outsb
jmp
outsb
nop
mov
iret
xchg
call
test
sbb
jno
mov
fidivs
dec
lahf
repnz
xchg
flds
xchg
jg
or
mov
or
adc
jno
jl
xchg
pop
loope
gs
ja
cmp
call
andl
pop
xor
xchg
sbb
shlb
scas
filds
jmp
ss
mov
cli
ficoms
ror
or
aaa
jmp
sub
hlt
std
mov
fbld
aas
sbb
ljmp
sub
nop
pop
dec
clc
popf
fistl
mov
push
push
imul
out
outsb
push
mov
push
sbb
mov
or
cmpsb
cmc
xor
mov
in
mov
insb
dec
xor
int3
nop
jno
xchg
ds
out
sub
push
outsl
mov
cvttps2pi
cwtl
dec
sub
jns
stos
lret
aad
stos
cmpsl
or
xor
aaa
sub
mov
push
sub
aas
cmpsl
test
cli
pop
push
xchg
les
cmp
mov
and
push
and
sbb
clc
jns
dec
xchg
out
pop
pop
addr16
and
jae
xchg
test
jno
cmp
push
xlat
pop
push
and
shlb
or
xchg
inc
lahf
xchg
aam
clc
xor
aaa
mov
out
fildl
adc
fsqrt
push
ret
dec
xor
sbb
pop
mov
out
sub
lret
jno
sarb
jg
sub
fistps
push
add
sub
xchg
out
mov
mov
xchg
dec
jmp
xor
xchg
hlt
xor
imul
push
add
xor
loope
xchg
pushf
gs
xchg
cmpsb
inc
adc
dec
or
enter
xchg
cmc
out
xchg
dec
cwtl
lock
pop
inc
mov
test
cmp
clc
movsl
loop
cmp
pop
adc
into
cmc
int
dec
rcl
jno
xlat
rcrb
mov
movsl
pop
xor
loop
cmp
push
xchg
mov
dec
xor
pop
jl
cmp
leave
adc
or
mov
mov
jl
jle
jae,pn
in
sub
out
mov
pop
xor
clc
sbb
ljmp
mov
or
jnp
cmp
cmp
cld
pusha
push
aas
mov
lock
and
xor
ds
outsl
sarb
pushf
xchg
sbb
xchg
pop
jb
fs
nop
pop
dec
ljmp
xchg
mov
dec
sub
inc
cli
cmp
icebp
js
out
push
mov
xchg
xchg
clc
nop
jecxz
mov
add
and
or
push
xor
cwtl
sar
pop
xchg
iret
xchg
imul
fidivs
insb
movsl
rorl
adc
out
cwtl
bts
movsb
mov
roll
jg
aam
popa
inc
cmc
addr16
sub
dec
push
pop
fdivl
pop
xchg
into
cwtl
clc
jno
push
pop
call
inc
icebp
xchg
push
cwtl
les
ljmp
in
in
repz
sub
adc
mov
test
clc
rorb
out
data16
inc
sbb
mov
adc
movsb
and
jecxz
inc
xchg
pop
out
aaa
pop
mov
test
rcl
inc
pushl
adc
sub
pop
push
sbb
adc
in
icebp
ja
mov
into
fdivrl
out
imul
sub
sbb
mov
ja
cwtl
mov
mov
leave
testl
xor
and
imul
push
xchg
jno
adc
adc
mov
out
mov
andb
adc
mov
hlt
ret
cmp
xchg
mov
mov
fisubrl
stos
movsb
outsl
mov
dec
xchg
fwait
scas
jecxz
repnz
mov
repz
test
imul
rcr
ret
fndisi(8087
fcoml
add
mov
add
repnz
dec
test
push
ret
lahf
mov
xlat
fcomp
and
xor
sub
push
std
in
mov
aam
bnd
lea
mov
jno
adc
imul
loopne
pop
daa
mov
sti
shl
lds
outsl
fnstenv
mov
call
xlat
repnz
aam
mov
out
xorb
cmpsl
int3
gs
lds
push
lds
push
loopne
insl
sub
aad
movsl
push
pop
xor
jns
in
pusha
mov
inc
pop
fldt
jae,pt
mov
dec
jns
pop
sub
pop
cld
fiaddl
xor
xchg
ljmp
lock
mov
das
jl
cmp
hlt
xrelease
arpl
shll
fsubr
jns
stos
stc
fsubl
push
aad
hlt
mov
pushf
movb
js
pusha
loopne
ljmp
out
push
lret
int3
xchg
hlt
jge
add
std
xor
push
and
push
adc
xorb
sti
xchg
in
jmp
aam
xlat
out
stos
push
movsl
fisttpl
jo
aad
stc
es
cwtl
add
leave
fisubrl
movsb
jne
cmpsb
inc
stc
push
int3
in
mulb
testb
out
cwtl
aad
xchg
sti
cmp
call
and
shlb
loopne
hlt
ljmp
in
mov
lahf
xchg
lods
in
test
loop,pn
sbb
push
paddsw
adc
xchg
push
imul
cmp
push
jo
lret
idivl
pop
cmp
cmp
sub
adc
inc
lods
rcl
cwtl
jle
jmp
leave
jge
ss
push
je
mov
inc
sub
popw
scas
dec
divl
xchg
clc
and
frstor
push
push
ds
adc
pop
hlt
dec
inc
outsl
lea
sub
add
push
fisttpll
fldenv
jo
mov
ds
dec
test
out
aam
xchg
push
shlb
push
test
adc
clc
ss
pop
inc
lods
cmp
hlt
push
add
xor
into
stos
in
pop
fdiv
mov
dec
imul
cwtl
mov
xchg
out
jb
ja
xchg
mov
jo
dec
je
int3
shlb
mov
mov
cld
sbb
bound
pop
mov
test
idivl
ja
mov
pop
out
ret
mov
mov
adc
inc
inc
dec
push
sbb
test
inc
sbb
pusha
push
xor
pop
inc
movsl
jae
jns
mov
jne
jmp
jle
xor
xorps
xchg
or
int
xchg
cld
cmp
push
fs
lret
std
gs
push
imul
jo
sub
notb
mov
pop
pop
and
ss
mov
in
push
mov
sbb
pop
xor
pop
push
nop
ss
sbb
out
or
xchg
push
xchg
cmpsl
mov
mov
push
dec
test
mov
nop
lret
cli
mov
loopne
lds
sbb
and
aam
xor
outsb
mov
mov
push
push
xchg
cld
sbb
pushf
jbe
inc
cli
test
lock
lea
xchg
xchg
pop
mov
jecxz
in
pop
addr16
cli
push
mov
rorb
cmp
cmp
jb
sbb
mov
pushf
aad
iret
mul
xchg
push
rcl
mov
test
xlat
in
cmpsl
adc
aad
call
inc
movsb
fcoml
test
xchg
rorl
cmp
dec
mov
mov
dec
test
loopne
push
ficompl
out
cmc
iret
pop
adc
push
pushf
mov
mov
push
int
lods
test
es
clc
ss
or
call
mov
push
adc
dec
dec
pop
mov
clc
dec
stc
rolb
push
pop
lods
push
in
cwtl
and
sbb
mov
mov
fsubs
out
jb
adc
and
xlat
cld
jg
xchg
hlt
test
push
cmpxchg
cli
jb
dec
in
inc
lods
call
xchg
mov
imul
dec
push
push
lds
imul
repz
dec
sub
pop
mov
lock
cmpsl
fbld
jne
scas
inc
or
loopne
add
js
mov
xchg
lret
pop
add
stos
repnz
in
test
sarb
add
sub
loope
jecxz
or
repnz
movsl
scas
negl
hlt
outsl
shlb
inc
cld
sub
in
roll
push
ficoms
imull
leave
imul
jo
fdivl
pushf
out
cmpsb
iret
fdivrp
mov
inc
dec
in
sub
inc
or
inc
call
cmp
mov
flds
mov
xchg
aaa
mov
jns
or
cld
outsb
fsubrs
fcmovb
mov
jnp
addr16
adc
xor
lock
push
mov
xchg
push
adc
fsubrs
and
fcom
orl
cmp
stos
leave
fadds
rcl
popa
int3
jb
sarb
aad
adc
insl
inc
icebp
push
xchg
aaa
icebp
int
add
pop
xor
pop
icebp
outsl
xchg
mull
or
adc
mov
hlt
test
js
xchg
pop
rcrb
xlat
inc
test
or
push
into
jae
cltd
decb
mov
nop
rolb
leave
dec
mov
in
js
lods
repz
cmp
filds
xchg
push
test
inc
and
js
or
addr16
pop
iret
mov
mov
pop
lahf
mov
loopne
sbb
mov
sub
ljmp
sbb
scas
mov
aam
jno
and
fstpt
daa
int3
addr16
jp
push
dec
fsubrs
out
aam
push
jl
mov
xchg
aam
jle
inc
lcall
out
int
xchg
cltd
inc
fwait
call
sbb
lret
cli
mov
aas
mov
xor
mov
rcl
fcomps
in
xorl
loopne
xlat
lahf
aam
mov
gs
iret
jge
mov
ljmp
xor
cmpsl
fsub
add
mov
mov
mov
jg
in
popf
push
aas
cmpsl
cmp
inc
mov
jae
lret
and
cmp
sub
adc
sarl
rcll
cmpsl
dec
inc
mov
push
adc
mov
cmp
pop
dec
or
mov
out
movl
int
pop
cmp
push
lods
jl
aas
sbb
lret
cmp
fabs
add
loope
and
arpl
frstor
out
jne
lods
adcb
repnz
loopne
pop
test
cmp
gs
or
in
mov
mov
push
sub
dec
loopne
dec
inc
lahf
jmp
mov
adc
cmpsl
in
es
shll
repnz
outsl
add
arpl
test
push
dec
lds
subl
xor
frstpm(287
sub
lock
shl
outsb
sbb
scas
outsl
call
pop
sar
int3
mov
hlt
or
aam
sbb
jno
and
leave
xchg
dec
cwtl
xor
ja
sub
sub
add
pushf
cmp
mov
loopne
shrl
test
je
jp
stc
jmp
xchg
fstp
out
dec
ja
push
int
cs
movsl
mov
mov
movsl
push
repnz
and
cltd
imul
push
adc
push
seto
or
iret
add
fmul
jmp
data16
loopne
mov
push
mov
jns
clc
fmull
loopne
fcmove
pop
nop
mov
lahf
in
cwtl
mov
mov
mov
clc
clc
mov
xchg
mov
inc
xorb
or
adc
xchg
pop
xchg
inc
pop
test
imul
out
xchg
sub
jle
std
int
ljmp
repz
loopne
lock
fmull
fsubl
pop
jmp
jnp
clc
aaa
insb
cmpsl
aaa
push
and
adc
cmp
or
gs
mov
sub
cmp
fs
pop
out
pop
pop
push
int3
pop
rcrb
out
xlat
test
push
jno
cmp
je
mov
fsubrs
push
or
add
inc
ja
dec
mov
add
in
outsb
fsubl
gs
dec
mov
jns
and
sub
rorb
mov
into
jae
and
sub
dec
cld
jo
in
vunpcklps
pop
or
out
test
gs
xchg
dec
xchg
cmpsb
test
out
dec
mov
mov
dec
out
out
add
xchg
push
add
lock
or
andl
xlat
test
xchg
jo
loopne
sti
lcall
push
adc
pop
xor
lock
in
out
gs
fnsave
out
mov
scas
mov
pop
sbb
popa
into
aaa
push
jecxz
fcomi
fstpl
scas
xor
dec
loopne
out
fxch
or
cmpsb
sbb
inc
addr16
movsl
arpl
arpl
addl
xchg
jbe
in
pop
pop
lock
cli
xchg
pop
in
ja
inc
pop
insb
push
jmp
sub
sbb
ss
push
adc
out
lods
mov
sub
or
xlat
rcrl
mov
mov
xor
and
fimuls
push
aas
xchg
lcall
pop
sbb
dec
push
xchg
cwtl
in
loopne
dec
call
popf
pop
imul
cwtl
pop
shll
pop
testb
lcall
nop
mov
add
jbe
movsl
sbb
dec
add
addr16
xchg
int
cmpsb
mov
in
dec
lods
jg
aas
jl
dec
add
fwait
aad
outsl
in
shll
pop
cld
push
add
cwtl
ret
andl
xchg
jp
mov
mov
push
pop
add
insb
clc
jge
popa
icebp
jl
push
xlat
xor
mov
loop
fwait
test
mov
inc
xchg
and
out
push
out
ljmp
out
inc
stc
dec
mov
push
stc
popa
imul
xor
ljmp
xchg
scas
shlb
sahf
xor
or
loopne
cli
insl
sbb
xor
add
adc
ficoms
movsl
xchg
les
mov
stos
pop
xor
mov
push
add
in
mov
es
js
or
scas
mov
inc
negb
into
incl
mov
jmp
xchg
ds
sub
stos
xchg
fs
mov
mov
jl
movsb
fadds
add
call
gs
mov
jl
fs
in
cmpsl
inc
inc
or
adcl
inc
dec
mov
int3
sbb
gs
jecxz
cmp
push
loope
mov
cmp
aam
push
mov
mov
aad
mov
pop
aad
jl
std
test
xor
dec
jle
lock
or
add
push
mov
ficoms
sub
sbb
ret
jl
repnz
pop
ljmp
jno
xchg
mov
scas
inc
push
out
cmc
dec
mov
scas
inc
loope
inc
test
cmp
dec
popl
pop
fldt
clc
jae
push
in
in
push
sbb
int3
into
mov
xchg
cwtl
outsl
out
les
cmp
lods
fstpt
test
pop
add
inc
sbb
mov
pop
repnz
add
mov
push
jmp
sbb
test
pop
pop
jmp
mov
subl
gs
lcall
push
out
imul
rcrl
mov
jg
sbb
js
in
cmp
push
xchg
xchg
in
jle
add
inc
jecxz
pop
cmp
mov
aad
sub
data16
cmpsb
xchg
lahf
scas
jg
jge
loope
ja
jg
idiv
dec
mov
pop
leave
add
adc
cld
roll
sbb
and
add
cld
inc
push
add
push
fistps
pop
mov
addr16
pop
xchg
jnp
adc
inc
divl
or
cli
fistpl
stos
mov
adc
dec
mov
iret
movsl
xchg
xor
cli
jl
data16
sahf
push
jo
adc
rcrl
add
int3
xor
pop
adcb
dec
sbb
fildll
cli
or
clc
addr16
adc
sahf
inc
and
adc
fucomip
repz
nop
add
dec
cbtw
je
nop
stos
jl
outsb
sbb
and
add
pop
inc
pushl
xchg
adc
sbb
repz
push
xlat
pop
or
outsb
insb
inc
dec
mov
xchg
aad
movsl
and
fs
fdivs
stos
sub
adc
in
cli
mov
bnd
daa
loopne
in
ret
pop
xchg
fildll
xchg
lret
push
jne
xchg
xor
push
in
dec
ret
xchg
sbb
cmpsl
and
pusha
cmp
sub
pop
jbe
jmp
xor
lods
and
xor
out
xlat
in
inc
addb
mov
mov
dec
cmp
test
xor
mov
inc
push
fldenv
mov
out
adcb
mov
mov
push
fsubrs
cltd
mov
fwait
call
jl
das
ja
leave
imul
call
stos
pop
sub
out
or
nop
sub
fcoms
cld
out
xchg
mov
pop
mov
in
movsb
aas
add
lock
in
fdivs
mov
and
xchg
mov
cmpsl
hlt
sbb
lret
rcll
gs
inc
cmp
dec
addr16
inc
sub
pusha
pop
mov
daa
rcrl
mov
lods
or
rorl
test
inc
dec
rcl
dec
addr16
call
rcrl
clc
pop
pop
testb
mov
inc
push
mov
imul
jl
jno
movsl
repz
inc
ficoml
dec
sub
inc
fstpl
scas
lahf
rcr
outsb
add
and
mov
mov
adc
scas
xchg
loopne,pt
jbe
fs
mov
add
aad
adcl
sub
sahf
and
test
int3
call
inc
clc
adc
pop
fsub
faddp
push
xor
shlb
out
push
gs
int3
xor
fildl
data16
or
add
stc
test
cmp
push
xchg
js
pop
push
push
hlt
data16
imul
xor
addl
inc
cmp
outsl
mov
pmaxsw
cwtl
jg
aam
and
outsb
in
sub
pop
sbb
adc
pop
and
jle
dec
fwait
nop
jg
rorb
jg
pop
xchg
jne
jmp
orl
mov
js
add
or
fisubrs
clc
lods
mov
jecxz
movsb
pusha
xlat
lahf
pushf
divl
out
jle
and
les
imul
nop
jl
loope
and
inc
fsubs
or
add
shll
or
mov
push
pop
ret
lock
jp
sub
mov
sahf
in
int
mov
sub
dec
pop
dec
shll
xchg
sbb
lock
lea
loope
clc
fcoms
xchg
ds
in
or
and
push
mov
adc
mov
adc
lea
sbb
lock
clc
cmp
cltd
pusha
out
ljmp
inc
pushf
xchg
nop
mov
fs
sub
push
sbb
pop
mov
push
in
sarb
test
lret
outsl
adc
sahf
xlat
pop
xchg
inc
dec
lahf
xchg
jp
xchg
ljmp
in
dec
add
xchg
insb
mov
jl
cltd
sub
add
adc
and
mov
lahf
test
mov
pushf
inc
in
mov
push
mov
fldt
push
add
not
cmp
xchg
in
mov
test
mov
jecxz
aas
mov
sbb
and
nop
push
loop
test
adcb
inc
mov
adc
je
inc
jmp
pushf
cmp
mov
or
fcmovu
cwtl
movl
xchg
insb
sbb
hlt
cltd
aaa
mov
clc
int
mov
fbstp
imul
xchg
pop
xchg
fcmovbe
jo
pop
addr16
inc
mov
fsubs
push
repz
fwait
mov
stos
push
jae
inc
clc
xor
vaddps
xor
call
adcb
adc
test
mov
outsl
test
cli
pop
mov
loope
js
add
out
sti
testl
das
xchg
je
fdivrp
lcall
mov
sub
imul
adc
ljmp
mov
daa
insb
mov
xor
pop
sub
je
jp
idivb
fmul
xor
cmpsl
sub
mov
imul
ljmp
into
mov
ret
mov
xchg
or
sbb
outsl
out
ljmp
xlat
in
sar
ret
neg
push
ret
pop
ljmp
stos
mov
jmp
lods
ds
iret
scas
pop
das
shll
mov
sbb
sub
pop
push
pop
lcall
andb
fwait
insl
mov
into
pop
fnsave
cmp
clc
jl
scas
dec
pop
xor
pushf
and
movsb
add
cwtl
mov
stos
and
xor
pop
push
shr
test
cmpl
call
pop
into
pushf
xchg
sbb
pop
fildl
or
or
mov
fst
adc
imul
gs
rol
add
cmp
das
push
mov
pop
fcmovu
push
adc
lret
rclb
fdivp
jge
fwait
js
shlb
insb
or
sub
cmp
add
cmp
loopne
mov
out
jno
cmc
test
sarb
mov
jno
jl
xchg
sbb
jp
sahf
mov
mov
jno
cmpsl
push
dec
jle
inc
lret
loop
dec
rcrb
in
and
out
mov
sbb
sbb
push
push
jb
xchg
mov
inc
scas
fcmovne
adc
push
aad
nop
or
je
push
sbb
xor
push
dec
inc
call
daa
sub
movl
out
addr16
dec
pop
cmc
mov
add
lret
out
data16
out
dec
aam
mov
jno
or
pop
lock
add
and
sub
xchg
sbb
xchg
xchg
jmp
mull
push
movsb
scas
push
dec
pop
push
mov
in
mov
or
xchg
sbb
ljmp
push
les
push
dec
gs
loopne
imul
fisttpll
sbb
xlat
xchg
daa
clc
fs
xchg
sbb
pop
mov
loope
push
xor
jae
out
push
xchg
cmp
xchg
jge
sbb
mov
lahf
or
mov
jo
outsl
test
in
and
pop
or
lahf
sti
in
aas
dec
jg
addr16
aam
lret
mov
xor
sbb
movaps
rorl
fwait
int3
push
ljmp
ret
leave
dec
sub
out
xabort
gs
mov
popa
dec
pop
and
cwtl
xlat
scas
clc
fstps
push
add
and
bound
in
jnp
xlat
pop
lods
test
inc
inc
push
lods
pusha
pusha
xchg
mov
jg
sbb
in
in
stc
out
push
inc
adc
cs
out
mov
cs
inc
call
rclb
adc
aas
lcall
xor
out
aaa
scas
fisubs
rcrl
cli
test
mov
inc
sub
xchg
xchg
dec
loopne
mov
orl
mov
sbb
push
movsl
adc
sub
movsb
push
cwtl
out
sbbb
add
add
out
xchg
mov
inc
xchg
dec
mov
pop
loopne
or
mov
aam
data16
cli
mov
int
xlat
stos
dec
shlb
mov
xor
jo
in
pop
daa
push
mov
dec
in
cmpsb
je
and
jg
xor
xchg
sbb
xchg
jle
push
and
movb
sbb
inc
dec
inc
add
addr16
imul
leave
ror
ja
in
aam
test
pusha
clc
cwtl
les
loopne
pusha
stos
pop
clc
aaa
aaa
repz
mov
push
or
mulb
out
loopne
nop
lcall
mov
jo
xlat
push
mov
mov
mov
fs
sahf
test
push
repz
mov
fistps
cwtl
dec
call
bound
mov
sbb
cmovg
shrb
notb
dec
ljmp
aam
sub
adc
fidivrl
push
call
mov
mov
rol
sbb
sub
cld
pop
aam
xor
je
xchg
pop
xchg
push
cmp
mov
inc
add
dec
add
or
lock
add
xlat
cli
daa
cltd
aad
mov
push
xchg
jo
xchg
xchg
xchg
jnp
push
mov
jecxz
dec
or
or
jnp
cwtl
je
and
cmpsl
add
cmp
lcall
pusha
shrb
jno
in
mov
dec
sub
ret
arpl
imul
cmpsb
in
jl
addr16
gs
fidivs
mov
add
jne
ljmp
adc
dec
ret
int3
sbb
dec
dec
ret
or
gs
cmpsb
mov
popa
inc
imulb
xchg
ds
xchg
orb
imul
call
imul
cmp
mov
mov
mov
adc
clc
in
and
test
mov
testl
mov
clc
out
pop
pop
jmp
mov
cs
sbb
and
sbb
jne
fdivs
mov
cmp
sbbb
push
cmp
mov
inc
add
or
add
add
rorb
adc
xchg
and
ljmp
add
sub
adc
into
std
gs
in
lahf
mov
mov
mov
sub
lahf
loop
cli
cs
adc
mov
test
xchg
xchg
test
cli
pop
aaa
sbbl
jo
mov
addl
push
js
dec
subl
inc
ja
mov
adc
aaa
sti
xlat
xchg
push
mov
pop
lret
xchg
and
aas
add
pop
or
sahf
cmpl
sbb
push
daa
xchg
jecxz
pop
out
inc
sbb
xchg
in
mov
dec
fwait
aad
adc
rorl
shlb
inc
xchg
xchg
nop
int
pushf
nop
ljmp
mov
xor
pusha
xlat
insl
out
xlat
repz
fucomp
jbe
sub
jmp
testb
dec
or
fdiv
gs
and
xor
aaa
shll
cmp
push
in
adc
loop
xchg
int
rcrb
nop
jg
jg
fbld
ss
into
aas
icebp
popf
xor
mov
pop
shr
addr16
inc
adc
lock
push
insb
mov
ss
sbb
or
testw
pop
mov
ja
in
loope
cmp
push
mov
push
out
pop
mov
xchg
sub
mov
and
push
scas
leave
mov
jl
dec
jne
adc
ffree
jg
xchg
mov
mov
pop
mov
ljmp
roll
addr16
or
pushf
fiaddl
add
shrl
incl
cmp
xor
fsubs
pop
sub
push
sbb
xor
mov
mov
in
test
mov
push
and
jmp
addr16
int
fmull
cwtl
jae
push
dec
imul
or
add
jge
pop
xor
xchg
cmp
inc
in
adc
insb
mov
jne
stc
cli
xlat
pop
outsb
adc
push
or
mov
out
mov
hlt
xchg
dec
div
and
mov
dec
sbb
xchg
fcmovnu
gs
cltd
mov
outsl
and
testb
mov
mov
jge
mov
mov
sahf
adc
sub
aam
push
lods
lret
popf
fistl
cwtl
or
lods
es
fldl
and
popf
jge
pop
xchg
cs
cmp
orb
jp
jg
mov
cmpsl
inc
mov
cmp
sahf
lahf
adc
push
sub
nop
nop
add
mov
jp
jnp
daa
aas
loop
inc
xchg
push
inc
clc
shll
dec
rcrl
out
push
mov
ret
rol
cs
pushf
insb
dec
add
out
mov
int
out
sub
sub
sbb
outsl
in
pop
xchg
stos
fcomip
adc
or
jb
sub
fistl
mov
jp
cmpsl
sbb
add
rcll
and
cli
shl
int3
and
es
and
adc
js
fcomip
sbb
subb
mov
iret
jmp
mov
out
push
out
pop
xchg
movb
pop
loopne
inc
and
jp
cmp
imul
xor
dec
ficomps
iret
inc
xchg
pusha
stos
nop
push
outsl
dec
daa
and
or
xchg
aaa
inc
inc
in
jne
adc
stc
mov
jo
adc
cld
xchg
int3
js
das
out
loop
test
jle
rcrb
sbb
inc
mov
inc
jo
lret
rclb
mov
jg
push
xchg
inc
push
or
cwtl
icebp
sbb
lret
sbb
and
loopne
pusha
pop
call
call
xchg
jge
pop
les
rcrb
xor
icebp
test
adc
adcb
call
push
and
xor
aam
add
xchg
jno
pop
loopne
push
popa
outsl
dec
sbb
cmpsl
gs
mov
fcmovne
jg
or
lcall
fnstsw
adc
mov
ljmp
sub
mov
push
icebp
or
cmpsb
cmpsb
fists
clc
pop
loope
mov
push
iret
into
lret
ret
fstps
out
mov
int
xor
adc
lods
sub
lds
fmulp
movsl
cli
jecxz
xor
mov
daa
int3
insl
test
clc
dec
loopne
int3
cwtl
rcl
test
sbb
push
sub
subl
dec
aam
mov
in
shrb
in
or
cwtl
ficomps
pop
push
stos
mov
pop
or
add
mov
je
out
cltd
add
jb
outsb
push
imul
inc
jno
pushf
mov
push
or
daa
shl
xorl
cmp
pop
pop
andl
pop
pop
fdivrs
mov
outsl
pop
pushf
enter
cli
sbb
push
or
insl
push
and
jge
pushf
ffreep
push
mov
xchg
add
push
leave
rcrb
push
shld
adc
mov
mov
dec
mov
mov
xabort
ror
in
popl
lahf
leave
orb
adc
xchg
insl
rcr
inc
int3
xor
outsl
test
shrl
push
dec
jb
repz
sti
adc
push
fistpll
repnz
aam
cli
cmpsl
ds
fdiv
xor
lods
fbld
shr
jecxz
dec
loopne
inc
jle
test
pushl
cmp
mov
sbb
dec
xchg
cmpsb
ficomps
aas
js
push
cmp
outsb
and
and
in
pop
popf
test
nop
test
fcomip
sub
aaa
es
dec
mov
fsubp
cmp
adc
sbb
add
push
jl
mov
pop
rcll
call
xchg
xchg
cwtl
std
sbb
cmpsl
jbe
imul
xor
iret
divl
frstor
fistpll
sbb
mov
je
out
test
shll
sbb
cmp
mov
or
mov
pusha
mov
sub
das
cwtl
outsl
loopne
out
push
pop
pusha
pop
jb
je
pop
shl
iret
mov
ss
call
mov
add
adc
dec
repnz
das
out
jbe
mov
fisttps
stc
cmpsl
mov
jno
lcall
adcb
xor
mov
mov
mov
jg
or
rcll
sub
jmp
les
fsubs
stc
lahf
inc
out
cmp
jecxz
out
in
add
cmp
in
add
push
ljmp
sub
mov
iret
daa
cmpsl
or
add
nop
xlat
movsb
lahf
stos
mov
xchg
scas
stos
fildl
pop
xor
mov
mov
ljmp
movsb
movsl
inc
or
lock
mov
xor
pop
sbb
jno
xor
mov
gs
ficoms
jg
pop
je
dec
fisttpl
mov
movsl
adc
dec
rcrb
in
cmpsl
popf
xor
fs
js
sbb
idivb
mov
pop
cmc
add
lcall
sub
lret
and
cltd
pop
aas
cmp
mov
frstor
aad
mov
bnd
or
das
ss
in
jno
mov
and
shlb
test
je
mov
ficompl
xchg
int3
jb
fnstcw
lcall
sub
cmp
pop
std
adc
lcall
sbb
pop
loope
xor
aaa
push
inc
jno
pop
or
rclb
xchg
sbb
mov
jg
add
out
mov
bound
xchg
pushl
in
movsb
stos
push
ds
push
xor
jnp
movsb
addr16
fcmovbe
add
fldt
sbb
pop
push
fnstenv
fstpl
repnz
lods
xor
notb
push
clc
inc
movl
lea
test
ficoms
rol
jb
push
sbb
outsl
sbb
bound
mov
push
or
mov
inc
lods
sbb
push
aas
add
pop
xchg
fs
pop
or
adc
sbb
mov
add
aam
adc
mov
int
xor
jnp
fs
out
mov
sub
or
add
lods
inc
sbb
scas
clc
cli
into
jo
sahf
push
or
sbb
inc
pop
aas
std
sahf
lcall
popf
cs
pushl
clc
imul
dec
lret
xchg
sbb
pop
or
lret
fcomip
lods
push
out
rclb
fwait
jecxz
cmpsl
jp
xchg
fcmovnbe
mov
mov
cltd
jl
adc
jl
int3
pop
das
mov
xor
dec
in
xchg
xor
scas
mov
outsl
mov
mov
ljmp
push
sbb
jae
add
cmp
aam
test
fmul
cmp
push
and
int3
mov
sti
mov
push
imul
lea
add
out
mov
call
outsl
pop
cwtl
push
inc
mov
xor
fisubs
insb
mov
shrb
add
testl
cmp
mov
lock
test
scas
shlb
stc
inc
dec
mov
dec
inc
sub
repnz
xchg
push
sbb
inc
lcall
andl
mov
movsl
inc
mov
adc
cmp
or
or
inc
lcall
pop
jg
add
mov
das
mov
repz
cs
aad
stos
sti
lret
pop
jecxz
in
adc
pop
aam
ljmp
test
cmp
les
jae
shll
mov
add
rcrl
add
jmp
push
movsl
inc
pop
scas
fistl
repz
sbb
pop
lret
or
or
mov
stos
test
gs
jmp
sub
mov
inc
neg
call
mov
add
loopne
mov
mov
sahf
lahf
pop
data16
pop
gs
scas
xor
movsl
mov
sbb
xchg
sti
xchg
sarl
cmp
cli
push
aaa
push
fisubs
or
ds
push
mov
push
mov
jmp
jecxz
inc
fnstsw
xchg
cmc
pusha
pop
mov
dec
aad
xchg
mov
add
popf
inc
jnp
dec
and
imull
fbld
imul
in
xor
xchg
mov
js
dec
ds
mov
push
sbb
pop
in
fisubl
stos
fstpl
mov
cmp
clc
push
test
cli
cmp
ja
xchg
mul
pushf
and
or
cmp
gs
add
mov
inc
out
or
inc
lahf
jl
sti
loope
mov
sbb
jg
rcrl
jg
add
lahf
mov
iret
cmp
les
loop
ds
lret
fdivs
test
cmp
fildl
movsb
jmp
in
cld
jecxz
shl
or
pxor
jge
xor
pushf
sbb
inc
mov
imul
xchg
scas
icebp
mov
int
xor
mov
sub
sub
addr16
shrl
mov
push
mov
repz
sub
out
pop
mov
lahf
cs
mov
dec
test
inc
pop
inc
lods
fnstenv
inc
lods
loop
dec
sub
in
in
inc
out
not
push
movl
push
push
in
xchg
test
fadds
rcrb
into
pop
fdiv
cmc
push
pop
and
inc
loopne
mov
mov
jp
mov
or
push
in
in
repnz
sbb
cmpsb
nop
fistpl
test
ljmp
sarl
les
addl
aaa
ficompl
out
iret
pushf
leave
imul
aam
pop
push
mov
and
rorl
call
mov
cmp
xor
insb
in
std
cwtl
data16
mov
icebp
pop
xor
sar
adc
idivb
loop
mov
or
pushf
jns
je
pop
in
pop
cmp
xor
mov
sub
scas
cmpsl
sahf
dec
ljmp
add
jo
mov
add
enter
adc
mov
movsb
sarb
pop
pop
xor
or
xchg
push
stos
dec
xlat
and
fiaddl
push
or
mov
bound
pop
out
sbb
scas
in
jg
scas
mov
mov
adc
xchg
xchg
xchg
push
inc
in
lret
shll
lds
aad
ds
leave
imul
mov
out
cs
cmpsb
and
jo
fidivrs
roll
or
mov
sub
xchg
lock
mov
scas
out
out
inc
test
int3
lret
jb
int
lret
lahf
push
xor
jae
sbb
ja
lods
idiv
xchg
xor
test
into
push
inc
out
jge
xor
addr16
repz
push
lods
mov
int3
add
mov
pop
inc
in
loopne
in
pop
loopne
mov
icebp
notl
mov
sub
pop
and
xchg
icebp
push
mov
and
add
aam
ss
lcall
int3
inc
jae
mov
jno
repz
jne
ds
std
jge
insb
out
movb
int3
mov
aaa
bound
sub
popf
dec
call
ja
sbb
xor
mov
jmp
add
mov
test
adc
jl
aad
lret
push
jne
scas
pop
and
fsub
jno
shl
rcr
mov
xchg
ljmp
shlb
mov
loop
mov
adc
out
jle
cmp
cmp
mov
mov
imul
fdiv
loope
out
cmp
dec
test
mov
mulb
or
or
dec
aaa
imul
push
inc
ret
xor
pop
cmp
xor
add
jge
pop
fdiv
cmp
nop
xchg
sar
outsb
adc
sbb
push
sbb
add
xchg
lahf
sti
rcr
leave
outsl
lock
pop
cmp
add
xchg
adc
add
call
inc
fiadds
scas
test
cli
add
ror
mov
jle
inc
push
int3
repnz
mov
push
mov
pop
arpl
outsl
or
push
cli
inc
data16
pop
mov
mov
outsl
test
or
add
repz
sub
andl
xor
cltd
mov
push
popa
mov
pop
call
dec
fsubp
mov
inc
mov
imul
repz
xchg
lcall
aam
pushf
mov
dec
insb
lock
rolb
xchg
push
nop
push
sbb
ss
pop
cmp
add
or
icebp
sub
stos
and
xor
ljmp
out
iret
mov
jno
rol
data16
imul
xchg
mov
and
pop
lea
cld
clc
pop
lret
test
shlb
gs
dec
subl
xlat
pop
cwtl
and
ja
cwtl
mov
imul
jbe
cwtl
mov
sub
mov
dec
cmc
aad
cwtl
add
bound
lahf
xor
cmp
sarb
test
mov
mov
lahf
xchg
and
jbe
or
xor
jb
outsb
jmp
or
pop
pushf
ljmp
andb
rorl
sbb
test
nop
add
pop
popl
xchg
pop
pop
aaa
xor
xchg
aam
outsl
divl
push
cmp
cmpsb
xchg
cld
cmp
and
lret
mov
and
nop
cmp
loopne
into
cmpsl
stos
sub
int3
lret
fistpl
cmp
in
push
fstps
mov
pop
mov
notl
xor
dec
aad
mov
push
fdivrs
fdivs
sbb
dec
xchg
lcall
shll
mov
mov
ret
xchg
pop
fdivr
shl
call
jne
sahf
push
lds
aaa
pop
repnz
repz
mov
gs
jno
mov
mov
xchg
xor
and
into
cld
cmp
clc
dec
loope
sbb
in
mov
movsl
or
fldl
xor
sub
addr16
ss
cmc
arpl
hlt
arpl
loope
scas
push
push
and
frstor
add
sarb
and
pop
jb
and
pop
push
pop
outsb
lods
adc
lahf
pop
in
jno
push
adc
add
loope
or
outsb
mov
cwtl
int3
jno
jae
jle
lret
pop
lea
and
mov
xchg
pop
xor
fldl
pop
scas
mov
out
or
add
dec
mov
pop
fdivrp
xlat
and
lcall
mov
ljmp
and
mov
sti
ret
loop
test
jp
sbb
adc
pop
loopne
movsb
xlat
loopne
shr
iret
add
mov
jbe
fucomi
or
into
sbb
pop
in
jp
hlt
jbe
jecxz
dec
movsl
cmp
addr16
xchg
jp
xor
or
frstor
lret
push
sti
mov
push
loopne
sub
push
cld
push
inc
icebp
mov
sbb
clc
sbb
mov
cmp
cld
flds
je
icebp
xchg
bnd
decl
iret
jo
jecxz
inc
gs
int
or
icebp
jmp
mov
insl
in
int3
fs
daa
loop
or
inc
ljmp
dec
int3
dec
mov
cmp
shlb
xchg
mov
leave
xor
mov
xchg
or
les
fldt
mov
cwtl
and
pop
aas
inc
nop
and
dec
fwait
mov
cmp
xor
sbb
cli
inc
loopne
sub
mov
out
push
add
cwtl
ret
push
dec
lcall
imul
push
mov
test
leave
fmull
subl
push
push
sbb
cli
in
rclb
leave
idivl
scas
mov
mov
push
cmovle
sub
jmp
mov
pop
add
into
insl
add
in
mov
dec
inc
push
call
mov
rol
jne
clc
sub
hlt
lret
mov
aaa
leave
fldcw
mov
or
jmp
mov
rep
cmc
negb
in
in
testl
je
push
movsb
sub
mov
das
test
push
mov
pushf
cmpsb
jbe
cmp
aas
iret
popa
lret
les
fucompp
sahf
mov
adc
or
rorl
ljmp
add
xlat
inc
jno
xchg
jg
ss
and
push
inc
push
adc
out
mov
dec
das
or
clc
aam
push
je
imul
int3
lods
add
ljmp
aas
aaa
lds
sub
arpl
int
add
push
cmpsl
pop
fistpll
mov
push
sbb
sub
movsl
scas
clc
xchg
cmp
xor
mov
leave
adc
or
mov
in
cwtl
fwait
in
inc
movsb
dec
lods
popa
xchg
icebp
movsl
es
test
movl
sbb
out
leave
fs
mov
push
jo
loope
loop
pop
mov
pop
mov
xor
xor
cmp
nop
lahf
push
stc
into
in
loopne
jecxz
push
in
dec
xchg
sti
cmp
aas
mov
in
or
ljmp
inc
fmuls
mov
jp
xchg
clc
or
aaa
arpl
leave
fcom
out
ljmp
int
pop
xor
out
cmp
int
add
out
xor
outsb
test
aam
popf
in
sbb
push
rorl
add
call
push
xchg
adc
jne
aas
rol
mov
xchg
in
mov
out
shlb
in
clc
es
add
enter
call
xlat
imul
inc
push
jb
lret
es
sarl
int3
jg
rcl
cmpsl
mov
or
add
jbe
hlt
test
mov
lods
pop
adc
mov
and
xlat
pop
jbe
mov
pop
js
sub
jmp
adc
gs
out
mov
lahf
xor
push
gs
add
gs
hlt
fadds
mov
dec
or
in
loopne
jp
mov
js
dec
lahf
mov
sub
and
inc
decb
add
jne
inc
adc
adc
pushf
pop
lcall
les
aam
rorb
cmp
fldcw
cli
ficompl
mov
fmul
loopne
subl
inc
push
ror
stos
notb
roll
xchg
xchg
lea
sbb
pop
xchg
repnz
fsub
push
or
out
inc
xchg
add
es
mov
sub
fldcw
inc
aas
dec
repz
sub
outsl
xchg
or
out
iret
insb
mov
in
stos
out
rcll
stos
fldenv
xchg
sahf
jl
adc
call
test
enter
loopne
mov
out
adc
out
jmp
imul
mov
sub
mov
rolb
or
fbstp
out
adc
dec
mov
addl
push
aam
int3
ss
mov
sbb
lahf
add
aaa
lods
or
pop
test
shr
js
rclb
in
test
pop
repnz
mov
test
lret
mov
dec
mov
loop
push
cwtl
ljmp
stos
rcrb
aam
jne
pop
clc
xchg
movb
mov
je
inc
or
clc
ret
aaa
fstps
fucomip
mov
cmp
jo
mul
mov
aas
push
ja
iret
and
adc
adc
loope
fdivl
fcomps
lcall
outsl
cwtl
push
aas
cmc
inc
lcall
xor
movl
ljmp
outsl
ja
or
push
int3
sbb
xchg
ljmp
xchg
jmp
mov
and
adcl
mov
cli
daa
adc
inc
push
je
cwtl
out
ret
ds
mov
and
pop
sti
js
xchg
sarb
cli
cmc
fsubrp
in
or
mov
lret
enter
cmp
xor
lea
mov
mov
dec
stos
mov
mov
cld
mov
dec
ja
pop
int3
out
mov
mov
lcall
rorb
xor
jne
pop
dec
fimuls
jno
push
fiadds
ja
ficoml
jle
mov
lea
and
jmp
mov
int3
rcl
dec
test
nop
cmp
dec
xchg
mov
push
repnz
inc
sub
sahf
lret
dec
es
cmc
das
push
mov
lahf
xchg
and
aam
add
cmp
xchg
cwtl
jbe
push
clc
mov
clc
lret
mov
andl
lea
pop
lea
rorl
fs
lea
int
rorb
mov
cmc
sub
aaa
sbb
xor
jmp
cmp
aam
add
adc
push
cli
lahf
xchg
cs
repnz
lret
outsb
xor
int
fmuls
xor
fcompl
mov
push
pmulhuw
fs
fidivl
mov
insb
aad
or
jno
mov
mov
push
jo
mov
testl
loopne
loope
mov
mov
mov
sbb
sub
pop
popf
stos
cld
push
dec
mov
xchg
pushf
xchg
xchg
cld
mov
jo
cli
lods
test
lock
inc
mov
fimuls
pop
in
sar
dec
push
add
sub
fwait
cld
xor
xchg
pop
inc
cmp
in
gs
pop
data16
mov
es
pop
mov
sub
or
inc
fsubrl
push
xlat
or
movsb
movsl
or
pushf
testl
dec
cltd
stos
lods
test
mov
movl
lods
inc
mov
or
jl
daa
aam
dec
xor
test
and
push
push
mov
fdivs
sbb
add
mov
sub
sbb
in
leave
jge
fisttpll
dec
mov
inc
xchg
ds
stos
shr
daa
mov
ret
add
lods
fs
mov
shlb
dec
inc
mov
inc
push
fldlg2
sti
mov
outsb
ljmp
and
sbb
adc
jp
mov
and
fwait
push
rcrl
lock
adc
and
test
jl
mov
cwtl
cld
pusha
rcl
fstpl
leave
sbb
or
mov
in
xchg
pop
sub
aad
jne
dec
jb
mov
jns
pushf
es
out
xchg
clc
or
out
fcmovnbe
cmp
sar
xlat
jns
xor
ljmp
dec
or
add
shll
in
mov
pop
movsb
sbb
pop
mov
fistps
sbb
ret
nop
inc
cs
or
sbb
push
call
dec
push
fdivl
mov
pop
ror
jne
shrl
or
pusha
push
xchg
mov
xor
cli
js
dec
sarl
dec
mov
inc
outsb
mov
push
push
inc
dec
jge
dec
setl
sub
movb
cmp
loopne
push
out
jns
pop
mov
mov
fnsave
sbb
push
test
outsb
shlb
push
out
loop
mov
loopne
clc
fildl
outsb
repnz
test
push
gs
cltd
and
aas
not
sti
cwtl
stos
adc
mov
jb
fidivl
push
pop
push
test
pop
out
loop
cmpsl
sahf
and
fcoms
push
adc
out
cmp
popf
cmp
fs
insb
fucomi
call
negl
xchg
lcall
or
into
mov
push
pop
rorb
jae
push
mov
jo
popl
cwtl
incb
enter
dec
push
xor
icebp
cld
mov
mov
jmp
test
lds
in
cwtl
loope
cltd
mov
nop
cwtl
xor
les
dec
out
test
sub
sbb
out
call
outsl
scas
xchg
or
sti
scas
test
and
xor
sub
mov
cmp
in
iret
loop
ljmp
add
jno
mov
sbb
or
lcall
in
out
cmpsl
sub
enter
mov
dec
jno
roll
inc
inc
fimull
cmc
push
push
pop
add
pop
ja
ficoms
imul
loopne
fcomip
inc
shr
ljmp
lret
sbb
aad
and
in
out
test
adc
sub
xchg
lcall
dec
jmp
sbb
out
scas
inc
and
movsl
push
aad
add
pop
jo
cmp
stc
sbb
pushf
push
call
js
call
ljmp
dec
in
push
stos
test
filds
adc
and
or
push
push
fldt
ljmp
inc
cltd
in
dec
int3
mov
fnsave
dec
ret
call
mov
scas
in
sub
cmp
cmpsl
rcrb
sbb
fdiv
sbb
or
testl
push
dec
mov
jl
and
fwait
loop
mov
adc
test
sub
mov
stos
push
add
ljmp
mov
jmp
xlat
lock
fldl
leave
mov
xchg
cmp
push
dec
int
ret
mov
adc
cmp
pop
rol
sub
gs
xchg
mov
or
mov
ljmp
xchg
rcr
or
gs
ljmp
fwait
or
jg
push
das
jae
addr16
insl
pop
fxtract
test
call
mov
or
dec
adc
mov
pop
in
and
mov
iret
xchg
outsl
gs
mov
jmp
in
fwait
cli
mov
dec
cmp
inc
sub
ljmp
jle
add
sub
hlt
rcrb
jno
loopne
cs
or
lret
lret
fldcw
dec
cmp
inc
xlat
sbb
dec
cmp
fadd
sub
sub
sbb
jno
cmc
mov
imul
mov
cmc
mov
pop
pushf
mov
xchg
les
mov
sbbl
dec
scas
gs
mov
push
sbb
int3
outsl
loopne
addl
and
jne
fst
lods
adc
test
cmpsl
xor
mov
push
arpl
mov
inc
push
mov
xchg
in
bound
pop
adc
out
ds
adc
fidivrl
mov
pusha
mov
call
jle
mov
cmp
or
pushf
iret
ss
jecxz
test
nop
aad
aam
sbb
enter
out
cmp
fwait
dec
mov
clc
gs
xlat
out
jno
sbb
in
dec
fcoml
cmp
mov
jmp
test
xor
outsl
out
nop
add
ss
cld
int
mov
out
or
xchg
jle
in
je
mov
pop
and
xchg
fsts
sbb
xlat
nop
inc
rol
adc
mov
mov
movsl
pop
repz
sub
gs
aas
mov
sub
mov
fisttps
inc
jno
xor
mov
pop
cmpsl
int3
repnz
rcll
les
ljmp
lahf
mov
lret
test
mov
sbb
sarl
jne
insb
xchg
adc
and
arpl
xor
mov
fwait
sub
dec
out
mov
enter
jb
loope
mov
pop
lret
sbb
push
push
dec
je
jbe
xchg
aam
lea
sub
orb
scas
in
ret
sbb
sub
sub
clc
pop
mov
daa
popa
adc
mov
mov
adc
ficoml
das
in
and
rcrb
int
mov
in
iret
sub
in
or
xor
or
cltd
push
les
test
int3
mov
gs
cmp
repz
adc
test
mov
das
lods
sub
nop
lahf
mov
xchg
clc
add
cli
leave
loop
add
cltd
imulb
push
sbb
jbe
jmp
outsl
ljmp
pushf
inc
cmp
jecxz
movsb
orl
pushf
cmp
mov
fs
fistps
fstpl
jne
add
mov
fcompl
cmpsl
es
pop
fdiv
test
out
adc
shr
ror
out
jecxz
adc
shl
inc
cmc
out
mov
sub
ret
inc
cmp
adcl
mov
int3
or
mov
lret
mov
divl
xor
lret
out
sub
pusha
cli
sub
aam
stos
and
aam
clc
int
xor
and
test
in
out
or
lock
fbstp
inc
imul
les
daa
stos
mov
or
lcall
ja
cmc
mov
sbb
push
pusha
daa
xchg
xchg
call
pop
in
sub
pop
mov
xor
push
int
icebp
push
cli
dec
subb
mov
rcrb
je
in
sbb
lret
xchg
leave
xchg
hlt
cmpsb
dec
outsl
mov
push
push
and
call
test
inc
gs
repz
test
sbb
jno
icebp
int3
and
xchg
out
ficomps
mov
rolb
scas
adcl
xor
adc
shlb
sub
out
xlat
add
pop
mov
xchg
rcr
test
jg
jl
out
or
stos
mov
xor
add
test
jno
cmp
cmp
out
fsincos
repnz
mov
push
cld
and
fadds
xchg
dec
mov
test
and
shl
add
jnp
lock
pop
or
int
sbb
mov
cltd
push
mov
je
out
pop
mov
pop
test
cmp
lret
cmpsl
dec
push
in
shll
pusha
mov
mov
lret
add
and
into
out
stos
sbb
leave
push
mov
sbb
loope
add
adc
xchg
or
adc
adc
nop
inc
sub
add
cli
pop
pop
jg
mulb
mov
andb
mov
push
in
scas
lock
push
pop
inc
gs
xchg
dec
add
fstl
sbb
add
mov
mov
xor
ja
push
pushf
cmp
sub
ljmp
or
clc
xchg
adc
nop
jmp
mov
ret
and
bound
inc
lcall
mov
daa
mov
incb
pop
inc
mov
lods
inc
out
cmp
lea
bound
cmp
mov
dec
mov
aad
in
inc
popf
jnp
add
ret
bound
test
adc
lods
lret
mov
mov
popf
test
std
fcomi
xlat
and
out
mov
leave
shll
fists
and
jbe
iret
jb
insb
cwtl
or
rcll
lret
out
sbbl
pop
mov
jl
xchg
fsubs
icebp
push
out
xchg
xchg
call
ljmp
add
cltd
call
mov
cmc
adc
sub
xchg
xchg
dec
adc
call
inc
je
rcrl
jmp
adc
cmc
fistpl
mov
xlat
cltd
je
pop
pop
adc
add
cvtdq2ps
inc
repnz
and
nop
mov
pop
xchg
xchg
mov
add
and
dec
mov
cmp
pusha
add
xchg
nop
adc
xlat
dec
lahf
addr16
movsl
and
inc
hlt
gs
ljmp
pop
or
push
mov
mov
pushf
xor
mov
dec
xor
xlat
gs
outsl
pop
mov
out
in
jg
aad
xor
and
repnz
fisubs
xchg
fdivp
xchg
insb
or
mov
mov
sbb
push
in
ss
out
dec
insb
int3
outsl
jl
loope
xchg
adcb
xchg
clc
fsubl
inc
loopne
push
dec
pop
out
dec
add
movsb
sbb
movsl
imul
iret
clc
dec
cli
mov
or
sar
dec
dec
xchg
cli
fsts
xchg
xchg
xchg
push
lahf
cmpsl
mov
mov
add
pop
push
pop
bound
data16
fildl
jns
add
divl
daa
aaa
out
inc
xor
das
push
xchg
pushf
aam
cs
mov
dec
xchg
mov
pop
dec
xchg
int3
daa
xor
fucomi
push
leave
sbb
push
insb
mov
stos
je
inc
scas
rcrl
and
mov
sub
test
xchg
jecxz
sbb
subl
mov
andl
inc
inc
ljmp
idiv
mov
dec
loope
insb
aas
in
repz
push
mov
iret
lahf
arpl
in
xchg
gs
cmp
int3
xchg
bound
pusha
clc
mov
xor
test
xchg
repz
xor
jle
cmp
int3
push
aas
dec
pop
inc
aad
dec
mov
sub
mov
or
mov
jne
pop
dec
xor
test
push
sub
fidivrl
mov
and
cmp
test
push
lods
mov
xor
icebp
jae
or
mov
inc
jp
sub
dec
nop
or
out
mov
enter
adc
or
test
rcll
or
push
fcoms
mov
gs
hlt
add
jno
nop
pushf
xchg
jle
stos
pop
inc
in
loope
jbe
gs
jg
jle
mov
xor
adc
or
rcll
or
add
push
mov
test
repz
data16
out
inc
xchg
scas
fcoms
shrl
cmp
jg
ret
in
adc
inc
sub
into
adc
sub
pop
sbb
insb
inc
mov
call
adc
or
xchg
xor
sbb
xor
cmp
mov
es
divb
adc
imul
adc
pusha
jne
cmp
aam
xchg
xchg
fnsave
dec
sub
or
xadd
mov
test
dec
sarb
pushf
gs
adc
sarb
push
pop
das
addr16
sahf
xor
mov
xor
cmpsb
jle
sub
imul
call
fdivs
cld
push
cs
and
movl
sub
xlat
les
mov
in
ror
xchg
test
int
fwait
cmp
lea
xor
ror
in
mov
movsl
adc
adc
incl
mov
insl
fidivs
add
dec
daa
mov
int
mov
cltd
sub
or
das
or
loopne
sti
mov
lods
add
sar
loop
loopne
lret
rcll
jl
jge
pop
mov
in
shr
iret
movsl
adc
inc
add
shlb
cmp
xchg
mov
imul
sbb
aas
cwtl
cld
xor
adc
push
in
push
cmc
cmpsb
test
cmpsl
pop
pop
loopne
out
gs
loope
out
xchg
in
out
xchg
xchg
popa
push
lret
stos
nop
push
negl
je
int3
and
pop
call
mov
ljmp
add
jae
addr16
aam
shl
sub
cmpsl
out
in
gs
mov
mov
push
and
lea
inc
lds
sti
outsl
and
cli
push
pushf
addr16
je
mov
sub
sub
cmp
ret
sbb
cmp
inc
inc
das
fucomip
addr16
loopne
outsl
mov
dec
je
xor
and
dec
out
sahf
cmp
xlat
cmp
jne
mov
jbe
mov
xor
clc
rorb
fst
xchg
into
and
and
mov
test
xor
pusha
jle
pushf
inc
fcoms
into
out
pop
pusha
push
sti
inc
out
xor
mov
xchg
and
or
mov
sbb
movsl
jge
cwtl
jno
arpl
imul
xchg
push
sbb
mov
aad
das
xchg
fistl
dec
insl
addb
arpl
nop
fwait
adc
sub
stos
sub
lcall
stos
cli
lahf
add
pop
mov
cmp
sub
cwtl
xor
and
adc
xchg
xor
add
int3
test
sti
mov
and
lahf
sbb
lret
jno
jb
cmp
sti
call
pop
fmul
cs
imul
or
push
out
xlat
adcb
sub
xor
fists
xchg
ss
mov
std
fwait
gs
je
mov
dec
or
lods
loopne
fbstp
test
das
ljmp
mov
arpl
jge
dec
loopne
fldt
adc
or
aam
pop
insb
mov
mov
mov
sbb
test
mov
sbb
sti
cli
sbb
mov
leave
adc
lock
lods
ljmp
pop
sar
incl
aas
cwtl
mov
lret
clc
sbb
jecxz
rcr
lock
xor
out
pop
sbb
inc
mov
loope
test
lret
push
ds
xor
imul
lock
mov
push
mov
and
loop
jno
in
call
inc
lock
lock
xchg
and
or
push
in
fcoml
pop
lret
sub
sbb
imul
inc
push
cs
xchg
mov
and
mov
call
mov
inc
int
out
sub
and
xchg
mov
fwait
scas
pop
push
or
lahf
movsb
imul
mov
xlat
aaa
jle
imul
jno
fildll
in
mov
iret
xchg
sub
cltd
scas
arpl
sahf
xchg
outsb
aam
and
pop
push
es
mov
in
popf
loop
lds
sub
mov
inc
jl
es
sub
sbb
call
mov
cli
push
and
popf
test
out
push
call
inc
jb
xor
test
xlat
lds
jne
dec
subl
mov
and
test
out
ret
in
lret
fsubr
aam
lret
popa
mov
mov
test
fwait
sub
cmp
inc
mov
jno
inc
or
movsl
cmp
xlat
popa
outsb
hlt
mov
jle
cld
aam
neg
or
or
movsl
adc
aam
jle
cld
sub
jae
test
pop
add
loopne
sbb
adc
test
call
pop
rcrb
rorl
icebp
sbb
mov
insl
cwtl
pop
jmp
sbb
gs
cli
inc
lea
cmc
jo
loope
and
mov
loopne
pop
or
mov
js
fwait
sbbb
inc
fstpt
mov
jae
test
and
pop
aas
add
mov
popa
cmc
in
pop
or
imull
lcall
call
lret
mov
push
adc
adc
orl
mov
in
push
mov
dec
in
aam
xchg
add
pop
add
or
notl
in
xchg
test
dec
and
or
in
in
in
push
stos
aas
mov
pop
xchg
into
push
lods
or
push
mov
insb
jne
pop
adc
xor
jbe
mov
xchg
pop
mov
push
adc
loope
xchg
inc
adc
jo
lret
mov
imul
push
pop
fincstp
fwait
or
sub
test
insb
xchg
pop
cmp
daa
out
fsubr
mov
scas
push
mov
add
shr
clc
gs
or
jae
jp
cmpsl
lods
fwait
rcr
cwtl
loope
push
cmp
mov
mov
or
sti
dec
call
add
xor
inc
mov
repz
dec
sbb
xor
push
aaa
dec
sbb
push
fwait
std
xchg
sbb
shrl
push
sbb
dec
lahf
dec
jno
jo
out
incl
adc
pop
adc
lahf
dec
mov
xor
mov
or
call
mov
or
outsl
xchg
push
clc
and
inc
jno
mov
pusha
sub
iret
roll
ljmp
je
mov
out
cmp
iret
popa
add
lea
sub
cli
es
push
cld
int
dec
adc
out
addb
les
inc
test
jae
xchg
push
xchg
sub
clc
sub
mov
xchg
xchg
insl
add
xchg
out
add
jmp
dec
stos
xabort
fiaddl
idiv
out
mov
lcall
jmp
adc
jl
xchg
fidivs
out
jl
mov
in
mov
pop
fmulp
idiv
inc
rclb
clc
cmp
hlt
cmpsb
inc
decl
mov
ficompl
push
or
dec
mov
rorb
dec
fdiv
pop
cwtl
jge
jle
gs
lcall
inc
mov
sbbl
xchg
jg
sbb
in
stos
or
cmpsb
sub
xchg
sbb
in
std
mov
inc
fdivr
xchg
and
gs
ljmp
mov
xor
adc
xchg
add
ret
es
repz
movl
call
outsl
mov
cltd
push
filds
mov
outsl
dec
mov
int3
inc
jno
cmp
jb
test
pusha
das
sbb
cli
jl,pt
nop
sbb
insl
in
in
aad
mov
hlt
inc
sub
bound
mov
jg
jae
cmp
fs
lahf
in
push
bound
pop
pop
cmp
lret
js
add
sub
nop
sub
in
jmp
xor
stc
jp
mov
testl
mov
add
movsb
mov
inc
arpl
inc
stos
or
add
mov
mov
sub
mov
shrl
addr16
pop
xrelease
daa
popa
xchg
sub
je
loope
nop
mov
clc
or
dec
inc
rcr
inc
jmp
out
jns
push
mov
jle
jl
cld
pop
xchg
ja
dec
clc
pop
mov
xchg
call
pop
fldlg2
lods
sub
push
in
sarb
fdiv
and
xor
push
mov
mov
pop
repnz
test
xchg
xchg
sub
add
xchg
jno
sbb
xchg
mov
add
popf
aam
cmp
pop
adc
cli
sarl
inc
in
mov
push
pop
jecxz
and
pop
loope
rorl
adc
call
xor
sub
pop
aam
adc
mov
fcomi
iret
lods
mov
cwtl
xlat
mov
pop
pop
inc
pop
and
mov
cmp
pop
lret
js
jle
mov
aaa
daa
rcl
xor
xor
ljmp
les
and
mov
sarb
jne
mov
xor
or
stos
jno
popa
xor
mov
es
push
dec
fsubr
xlat
add
push
sbb
inc
aas
in
inc
out
cmpsb
stc
and
push
pop
lods
dec
dec
mov
sbb
daa
mov
cmpsb
pop
cmc
sub
in
push
stc
sub
call
jecxz
inc
popa
mov
dec
lds
stos
push
ljmp
arpl
jno
jbe
out
jp
and
dec
xor
aam
pop
cmp
dec
gs
or
adc
jge
test
dec
pop
jns
add
jbe
lods
inc
jns
stos
mov
in
das
sbb
pop
xor
jmp
ss
pcmpeqw
mov
pop
dec
mov
fs
movsb
les
pop
pop
push
mov
jle
leave
pop
lret
lods
xchg
mov
outsl
notb
mov
fadd
ljmp
xor
lret
mov
push
cmp
shlb
scas
mov
call
aam
pusha
dec
xlat
scas
jno
in
call
dec
jle
sahf
cs
and
or
inc
cmp
mov
and
out
shrb
test
sub
add
in
push
aad
inc
xor
fcmove
lahf
mov
shr
mov
mov
inc
sbb
xchg
pop
aas
push
dec
or
sti
jb
fdivs
cmp
out
lret
sub
test
rolb
popa
xchg
dec
je
in
mov
sbb
xor
test
add
rcll
push
lods
add
aaa
iret
push
inc
orl
mov
mov
rcrl
mov
cmp
pusha
and
cmp
push
mov
stos
sbb
mov
xor
or
fdivr
pushl
add
insb
or
cmp
xor
lcall
or
cmp
jbe
stos
imul
movsb
das
scas
add
out
cmp
or
lea
pusha
in
lds
sub
cmc
push
mov
jmp
and
pop
sahf
xchg
test
roll
sub
mov
out
aas
popa
nop
sti
and
mov
mov
movsb
jb
add
das
xchg
dec
add
xor
negl
in
add
jmp
out
repnz
addr16
pop
outsb
lods
push
hlt
push
push
fs
sbb
xor
xchg
nop
test
and
mov
xchg
pop
data16
mov
dec
jno
iret
lahf
cmp
lret
test
out
fwait
dec
inc
aas
ja
pop
pop
ficoms
lods
or
pop
lret
or
pop
mov
inc
ds
sub
ja
jo
arpl
sbb
scas
dec
cltd
mov
jo
lahf
mov
inc
or
call
test
dec
mov
int3
fcoms
jmp
pop
or
dec
mov
outsb
flds
gs
lret
xchg
jno
sub
mov
popl
out
xlat
xchg
mov
pop
xchg
sarl
js
jno
cs
mov
js
jmp
loopne
dec
mov
incl
in
popa
hlt
sbb
inc
sbb
xor
push
jecxz
cmpsb
outsl
fsts
mov
sbb
xlat
cmpsb
jg
cld
jb
mov
push
mov
lahf
push
das
push
adc
fmuls
mov
pop
ret
shr
or
gs
or
mov
pop
in
mov
push
jecxz
popf
fmull
dec
push
push
in
dec
push
aad
aaa
inc
or
stos
dec
cmpsb
in
dec
mov
aam
adc
int3
loopne
mov
in
pop
fildll
inc
pop
in
jmp
mov
fadd
xchg
push
sbb
lret
sbb
inc
pusha
sbb
push
loope
cwtl
or
lods
cld
sbb
in
dec
xchg
xor
nop
pop
lods
jnp
lock
fstpt
aad
in
shl
lret
bound
pushf
fwait
hlt
call
xchg
in
out
clc
lret
arpl
xchg
push
test
lods
push
mov
adc
lock
inc
mov
adc
pop
push
lret
ss
xlat
jo
cmpsl
inc
dec
iret
pusha
lock
cmc
or
in
mov
xchg
xlat
mov
cmp
in
sub
pop
cmpsl
call
push
out
or
int3
push
adc
sub
stos
xor
push
lret
aad
sub
pop
loopne
test
in
adc
cmpsl
xchg
sbb
notl
or
popl
jl
into
cmpsb
les
inc
scas
push
call
test
cmp
dec
cmp
leave
mov
cmpsl
cmp
gs
adc
out
stos
leave
call
add
test
mov
pop
popf
fbstp
aas
call
xchg
xchg
call
ret
cmp
jmp
add
in
je
xchg
call
push
andb
mov
aam
adc
lods
in
test
mov
jp
push
jge
cmpsb
inc
mov
cmpsl
mov
imul
jne
fcmovb
push
or
and
dec
jge
pushf
sarl
push
mov
mov
adc
dec
js
and
and
xchg
add
jae
xchg
mov
and
xchg
xor
ret
scas
cmc
in
jae
mov
in
pop
xchg
imulb
movl
jecxz
push
in
out
push
sbb
ja
adc
xchg
out
fs
pop
adc
leave
test
xor
or
dec
pop
lahf
xor
je
pop
cwtl
mov
mov
negl
pushl
xchg
pop
xor
pop
std
jb
mov
movb
sbb
sbb
gs
jns
clc
sbb
and
repz
mov
sub
sbb
movsb
or
inc
clc
sub
jbe
sbb
gs
mov
les
pop
fisttpll
insl
pushf
aad
js
jp
cwtl
and
and
xchg
lds
je
mov
mov
ljmp
dec
test
mov
lds
in
stos
xor
xor
pop
jns
cs
addb
lods
in
adcl
jmp
aam
mov
sub
stos
dec
pop
test
js
adc
loope
test
and
aam
subl
pop
pop
adc
leave
dec
clc
movsb
popa
jo
mov
mov
inc
xchg
pop
and
test
and
jg
es
cmp
popf
gs
clc
test
repnz
sahf
sbb
add
cmpsl
mov
in
ja
mov
adc
sbb
fadds
and
into
xor
mov
aaa
stc
arpl
dec
lods
mov
cmp
sbb
hlt
jl
pop
imul
jno
xor
stos
xor
sbb
insl
jae
add
stos
out
cmpsb
or
xchg
xlat
ljmp
in
aad
movsb
xor
repnz
add
cmp
add
cmp
nop
add
cmpsb
sub
rorb
dec
xlat
das
loope
ljmp
pop
mov
in
fistpl
test
jbe
adc
mov
pop
mov
adc
lock
mov
adc
xchg
arpl
jmp
inc
sub
ret
sbb
inc
gs
jns
mov
sbb
imul
sub
sub
pop
adc
mov
mov
repnz
jmp
out
cmpnltps
mov
js
inc
rcrl
jle
pop
outsl
data16
push
xchg
movsl
insb
mov
out
jno
scas
xchg
movsl
testl
aas
or
out
jl
mov
push
out
stos
aaa
inc
hlt
jne
xchg
ret
jbe
and
mov
gs
mov
dec
cmpsb
mov
aam
jo
mov
inc
imull
xchg
sbb
push
mov
cwtl
jno
push
out
cs
jnp
movb
or
stc
shlb
jae
dec
in
stos
dec
test
mov
mov
xchg
xlat
jno
xor
nop
cli
adc
cmp
in
fistl
mov
adc
mov
xchg
roll
xchg
xor
sbb
push
out
mulb
repz
int3
sub
rcrb
inc
sub
mov
mov
cmpsl
ret
pop
imul
cli
jp
scas
gs
inc
or
unpckhps
xlat
lahf
iret
inc
test
sbb
and
adcb
scas
ret
sbb
shrl
ljmp
push
push
loopne
jno
push
mov
dec
lea
sbb
addl
xchg
mov
stos
js
call
in
xlat
dec
lods
mov
leave
repnz
cmpsb
push
iret
dec
leave
and
les
in
inc
mov
icebp
xor
xchg
sbb
mov
nop
into
scas
cwtl
icebp
sbb
hlt
ret
cs
mov
cld
push
push
xor
movsb
push
cmc
pop
sub
pushf
mov
cmp
sbb
addb
test
pop
jo
inc
test
test
test
cmp
repz
xor
fs
cmp
mov
inc
sub
sub
cmp
mov
mov
cli
popf
nop
dec
aad
or
xor
push
test
or
ss
subb
sbb
stos
cmp
sbb
cmp
nop
ss
xchg
mov
int3
or
pop
loope
test
arpl
cmp
lods
inc
sbb
clc
gs
pop
xchg
jmp
lods
fwait
stos
aas
and
push
repz
pop
popf
ljmp
cli
aam
sub
mov
ss
cmc
fwait
incl
sbb
pop
mov
in
lret
adc
jb
xor
lret
xchg
xlat
and
lock
imul
pop
mov
imul
and
loope
dec
cmp
addr16
push
adc
push
fwait
lret
leave
rcll
negb
and
fwait
insl
scas
ds
cltd
popa
sahf
shll
dec
jl
push
push
sub
mov
xchg
pop
add
imul
mov
inc
scas
mov
jmp
xchg
ss
jp
aas
push
jecxz
sub
mov
sub
inc
loopne
mov
push
repz
nop
out
jno
daa
sub
adc
loopne
sub
pop
mov
test
adcb
in
jmp
sahf
in
cmpsb
lds
insl
push
push
aaa
sbb
push
pop
dec
shrb
out
movsb
push
sub
add
inc
cmp
lret
int3
mov
daa
pop
add
jle
jbe
mov
gs
and
xchg
inc
jbe
clc
sub
dec
cli
xchg
and
ret
fsubr
insb
xchg
push
inc
in
je
xor
xor
jmp
jns
aas
push
xlat
mov
loopne
xor
popf
enter
in
movsb
sub
test
int3
xchg
loop
sbb
jno
lahf
xchg
mov
in
dec
adcl
pop
pop
pushf
aas
int
xchg
cmp
mov
mov
movsl
into
xor
shlb
incl
int3
loopne
pop
test
cli
pusha
fdivrs
adc
sub
hlt
or
pop
inc
icebp
shrl
lods
jmp
ljmp
jg
mov
sbb
addr16
rcrl
imul
into
and
pop
xor
jmp
sti
pop
stos
cwtl
mov
jne
jle
cmp
adcb
gs
push
imul
sti
test
sbb
imul
lret
fistpl
dec
pusha
sub
mov
clc
pop
mov
mov
icebp
es
fists
cwtl
sbb
xchg
and
int3
ficompl
inc
insl
adc
out
jge
int
mov
out
inc
das
pop
sub
fcoml
inc
jne
test
push
mov
insb
int3
xor
jno
lea
clc
out
mov
lcall
jns
pop
or
xor
fimuls
test
mov
in
fmulp
loop
insb
sbb
cmp
mov
sbb
jb
test
dec
and
fisubrl
add
stos
pusha
xlat
or
imul
jmp
pop
or
xchg
subb
mov
aas
jp
jmp
lret
inc
ficoml
add
dec
cmpsl
dec
insb
or
jmp
std
lcall
pop
xchg
pusha
jnp
mov
sub
cmpsl
push
adc
lcall
cmp
fbld
ds
insb
push
add
mov
repnz
jle
arpl
jp
aam
or
popa
in
jb
cli
test
sahf
call
in
call
mov
or
insb
lock
scas
and
pop
ss
mov
jmp
dec
mov
mov
sub
in
dec
in
jno
icebp
ljmp
inc
insl
mov
mov
call
repz
and
cs
ss
pop
mov
aam
test
mov
sub
mov
call
xor
hlt
test
notb
push
sub
lret
pop
jae
shr
dec
sbb
xlat
or
movsl
lcall
dec
pushl
data16
sbb
mov
daa
xchg
adc
call
addr16
pop
lret
lret
xor
addr16
push
or
stos
in
outsl
cwtl
sub
or
mov
fisubrl
pop
mov
iret
cwtl
es
adc
pop
insb
sysret
xchg
or
loopne
xor
xchg
lods
mov
stc
pop
pop
in
lret
or
std
mov
xchg
or
std
mov
stc
lds
movsl
in
mov
es
mov
push
mov
sub
xor
lret
xorb
cmpsb
lret
in
jbe
stc
pop
pop
dec
adc
pushf
mov
push
mov
mov
stc
call
mov
lea
sub
ds
nop
out
stos
mov
jmp
mov
stos
sbb
js
xchg
repz
pop
lret
stos
ljmp
fisubl
test
xchg
call
dec
mov
call
out
mov
fisubs
dec
imul
cmp
mov
in
std
mov
dec
clc
leave
movsl
loopw
insb
mov
mov
xchg
pushf
and
lds
clc
outsb
dec
daa
pop
xlat
jmp
negb
movsl
xchg
adc
push
pop
pop
cmc
pop
cmc
dec
cs
xlat
in
mov
lcall
les
adc
cs
mov
mov
pop
xchg
in
inc
ja
insb
in
adc
cmp
data16
test
ljmp
mov
stos
mov
push
adc
adc
es
cltd
pop
and
es
arpl
lret
fdivs
sub
movsb
inc
les
shrl
inc
push
sarb
adc
adc
mov
imul
pop
nop
fldt
pop
add
dec
pop
lods
cmp
pop
dec
sbbl
sub
imul
and
xchg
jge
jne,pt
sahf
outsb
negb
push
cli
movl
shl
mov
xchg
test
pop
cmp
inc
dec
sub
jecxz
xor
adc
insl
jno
repnz
es
call
mov
lods
arpl
and
and
sbb
inc
push
shr
cmc
jb
mov
mov
cmp
inc
or
cmc
inc
nop
jmp
push
mov
shl
mov
bnd
pop
and
lock
leave
cld
fstps
outsb
sub
int
jne
dec
shr
mov
sbb
xor
mov
push
sub
sub
ds
push
lcall
leave
rorb
pop
pop
fdivrl
mov
mov
xlat
ja
jno
in
clc
sbb
xchg
push
sbb
shl
pop
aad
in
int3
sbb
ljmp
xchg
aas
inc
xchg
dec
aad
cmp
push
lret
lahf
cli
mov
call
js
sub
in
fists
imull
mov
mov
cmc
dec
inc
in
cli
dec
push
push
push
stos
in
lcall
ss
mov
jle
data16
lea
sub
mov
sub
es
or
dec
pop
sarb
sub
test
aad
decb
or
in
jns
dec
repnz
add
stos
test
inc
jbe
lret
sub
fucomp
mov
out
lea
stos
or
in
dec
cwtl
push
inc
xchg
mov
adc
or
push
in
das
sahf
inc
sub
stos
dec
in
mov
push
inc
jo
mov
in
inc
out
scas
inc
pop
clc
mov
inc
ss
lret
dec
imul
call
xlat
gs
daa
shlb
push
push
inc
mov
lret
repz
jg
cmc
test
lods
in
push
jp
mov
lret
ss
fstpl
inc
pop
out
ss
mov
mov
push
les
in
ljmp
imul
cmpsb
dec
sti
test
push
adc
in
iret
mov
cltd
sub
faddp
imul
sub
jbe
pop
mov
daa
scas
cmpsl
jae
mov
cli
loope
movsl
ret
mov
jle
inc
mov
in
push
pusha
ljmp
pop
inc
call
push
out
dec
ds
lahf
in
inc
ljmp
sarl
pop
add
or
dec
out
dec
stos
call
push
push
pop
xor
test
outsl
dec
ret
gs
push
push
pop
jle
data16
xlat
clc
outsl
jo
nop
mov
sarl
push
push
shrb
dec
movb
inc
xorb
rcrl
cmp
mov
lock
mov
adc
or
mov
test
add
lret
mov
sbb
jb
cwtl
je
leave
push
dec
aad
lret
dec
mov
scas
sub
jo
ds
mov
fstpl
loop
xchg
cli
adc
inc
jg
inc
je
sub
cli
xlat
rol
test
sub
mov
pop
aas
je
inc
insl
nop
xchg
mov
sti
lcall
sahf
leave
add
inc
shrl
pop
ffreep
ret
sub
adc
mov
mov
pop
fwait
mov
xor
push
mov
fs
gs
subb
incl
scas
std
fwait
add
xlat
adc
or
out
clc
icebp
mov
aam
and
sub
cs
cmovns
test
insb
int3
int
ss
pop
test
adc
fwait
jmp
pop
cmp
sbb
outsb
cmpsb
jb
jl
mov
pop
dec
sub
bound
insl
movsb
fdivrs
xor
pop
into
fdivrs
and
sub
or
mov
repnz
xor
sub
notl
xchg
repz
push
ljmp
jmp
lahf
push
ja
pop
push
sarl
add
js
xor
repnz
jno
stos
dec
fidivl
xchg
insb
call
cmpsb
pop
or
dec
sbb
push
movsb
repz
mov
xchg
jno
dec
lret
dec
testb
or
sbb
jb
dec
cli
push
notb
sub
out
int3
sbb
outsl
push
in
jge
cs
inc
xchg
sub
sbb
idivb
in
mov
iret
inc
mov
add
repnz
faddl
pop
aaa
dec
adcb
lds
repnz
cmp
adc
push
lods
jg
mov
lds
adc
in
scas
adc
cmp
lds
sub
shrl
sub
xlat
adc
push
sub
pop
push
pop
int
cmc
in
fistpl
imul
clc
aam
mov
adc
inc
mov
mov
les
mov
es
movsb
or
out
cld
sbb
das
nop
jp
aam
stos
sbbb
cmp
sub
add
popa
in
ljmp
pop
icebp
leave
dec
jne
dec
lds
mov
inc
push
clc
aaa
js
sub
lret
in
pushf
mov
adc
xchg
insb
mov
adc
cmc
insb
into
mov
shlb
or
pop
inc
mov
loopne
xor
push
inc
jmp
testl
out
test
add
xlat
push
adc
adc
int3
imul
stos
jns
movsl
in
cmpsb
gs
adc
imul
aam
es
or
inc
pop
push
in
add
arpl
cmpsb
pop
rol
cmp
clc
in
mov
cmpsb
dec
bound
ficomps
stos
sub
es
fwait
out
add
clc
or
jnp
and
sbb
icebp
jmp
cmc
or
in
lret
mov
jno
das
in
push
dec
popa
in
push
ljmp
ljmp
stos
or
in
mov
dec
inc
mov
mov
mov
lcall
adc
in
jg
dec
inc
mov
scas
cmpsb
mov
xchg
push
cmpsl
leave
imul
jle
hlt
xchg
inc
imul
and
scas
xchg
mov
pop
clc
mov
pop
mov
mov
test
ss
push
fsub
rcl
stos
adc
test
dec
pusha
dec
cld
mov
gs
aam
fsubp
movsb
push
icebp
outsb
lea
xchg
jne
inc
lds
in
sbb
jo
ljmp
mov
mov
mov
pop
mov
lahf
pop
inc
in
pop
mov
or
clc
movsb
push
xor
jge
mov
cwtl
sbb
xor
in
cmp
sarl
xlat
mov
cld
pop
cmp
test
sbb
movsl
pop
mov
mov
mov
sbb
out
pushf
imul
pop
inc
aam
mov
test
cwtl
fstps
push
je
xor
pop
outsb
insb
mov
jae
sub
das
cmp
icebp
aaa
mov
int3
mov
paddb
aam
dec
jo
pusha
sub
clc
dec
ljmp
psadbw
and
pop
mov
mov
scas
iret
ror
cmp
cmp
or
add
mov
insb
rcll
or
das
mov
mov
outsl
xchg
out
scas
inc
xlat
pop
fs
imul
int3
jmp
mov
imul
stos
jnp
outsl
shlb
mov
mov
stos
fs
xor
mov
test
sub
aam
imul
int3
in
je
xor
cmpsl
jmp
cmpsl
les
jne
scas
stos
adc
xchg
fdivrs
push
leave
call
stc
mov
pop
pop
jb
xchg
mov
sub
ret
and
test
scas
push
and
iret
scas
or
inc
ljmp
imul
mov
out
mov
hlt
jae
orl
loope
fwait
cs
cmp
subb
jno
outsl
jmp
aas
sbb
fmul
mov
jb
add
pop
addr16
movsb
add
sub
std
add
cmp
ljmp
pop
or
in
sbb
stos
stos
sti
and
test
in
add
xlat
and
in
xchg
push
mov
repnz
push
cli
mov
je
sub
mov
xchg
shlb
xlat
insb
mov
popf
adc
cmp
jle
xchg
adcl
jg
mov
inc
leave
pop
xchg
cwtl
test
loopne
stos
cmpsl
mov
pusha
aam
leave
xchg
js
shrb
jmp
mov
dec
fistl
pushf
rolb
xor
dec
mov
mov
xor
mov
gs
xchg
subb
sarl
icebp
adc
movsb
iret
out
int3
fs
cmc
sbb
hlt
gs
stc
cmp
sarl
or
mov
ficomps
ja
cmp
mov
and
push
mov
dec
sub
jno
lahf
les
out
mov
mull
mov
adc
in
lock
mov
test
mov
inc
cmp
sbb
sub
mov
cmp
lock
mov
xor
jecxz
pop
int3
out
add
cli
pop
and
or
jno
insb
shlb
call
sub
lea
sub
out
xor
loop
rclb
and
clc
dec
dec
out
and
ljmp
shrl
push
shll
lret
ret
in
xlat
adc
aaa
inc
adc
mov
push
arpl
pop
out
ljmp
cmpsb
cmc
in
sbb
sti
cmc
in
jge
rol
add
dec
mov
jae
call
lods
mov
in
pop
jnp
stos
call
dec
push
out
and
fistl
sbb
jne
or
pop
xchg
sub
dec
lret
rcrb
nop
outsl
xlat
or
cmc
sub
mov
push
cmp
xchg
pop
or
aaa
cltd
mov
pop
push
add
in
xlat
xchg
shll
mov
xor
sahf
test
sub
mov
in
pop
mov
push
shlb
mov
xlat
jmp
mov
push
addr16
mov
int3
cmc
or
in
mov
sbb
or
es
fucom
dec
lods
pop
push
popa
in
adc
lret
adc
in
push
mov
xorb
in
mov
adc
or
push
in
mov
pop
pop
dec
in
fucomi
xor
in
mov
in
ja
imul
stos
mov
in
lcall
pop
lret
inc
sub
aaa
in
or
dec
out
mov
mov
push
in
pop
imul
stc
in
dec
test
jg
push
xchg
call
lods
mov
or
mov
add
jns
call
out
cmc
and
xor
rcll
loopne
cmp
daa
sti
pop
js
daa
mov
ljmp
int3
and
int3
outsl
cli
dec
sbb
mov
int3
cmc
add
push
out
xor
xchg
fbstp
mov
or
outsb
dec
ss
daa
pop
sub
inc
in
out
dec
push
call
or
imul
dec
fsub
dec
lods
mov
mov
mov
lds
fisttps
fmulp
pop
dec
arpl
push
out
dec
xchg
inc
nop
daa
ds
cmpsl
fistpl
out
xchg
lods
push
out
dec
pop
push
icebp
pop
cmp
sbb
xchg
in
movb
dec
pop
cwtl
xchg
rorb
cmc
add
mov
sti
push
lock
jo
jns
cmp
aad
mov
push
les
dec
in
iret
cltd
cmp
stos
xchg
xor
dec
push
and
fists
sbb
cmpsl
sub
mov
mov
mov
cld
ficomps
ss
mov
adc
clc
cli
inc
cld
es
fsubr
sbb
mov
in
es
xchg
repnz
outsb
addb
cmpsb
mov
xchg
int
int
mov
push
cs
aaa
and
nop
sarl
fsubs
pop
loope
in
push
cmpsb
int3
dec
mov
push
fmulp
push
pop
push
inc
mov
in
int3
pop
lret
jmp
mov
testl
cmpsb
push
scas
lret
in
mov
test
mov
mov
xor
xlat
dec
mov
lds
pop
dec
xchg
in
mov
dec
dec
or
call
sub
test
jb
or
mov
push
test
addr16
sub
adc
sti
pop
inc
or
in
popa
pop
out
sbb
or
adc
ljmp
shr
inc
mov
lds
in
push
push
jp
adc
out
mov
dec
es
pop
mov
jb
xchg
arpl
call
call
lods
out
lcall
xor
imul
sbb
cmc
ret
mov
fidivrl
aaa
mov
cld
lds
inc
cmp
mov
mov
cmp
lock
les
lods
pop
repnz
lds
jns
popl
mov
inc
repnz
clc
fstps
cld
aad
jmp
mov
mov
ret
js
or
imul
mov
xchg
dec
dec
pop
ss
xor
fsubr
xlat
jno
jmp
inc
lcall
cmc
out
test
sbb
aam
stc
clc
enter
out
stos
shr
ret
cwtl
shll
dec
andl
push
mov
fst
cld
inc
iret
adc
add
pop
push
dec
pushf
mov
cmpsl
movsl
leave
inc
call
cmp
iret
insb
gs
scas
mov
cli
mov
push
push
into
test
mov
cmpsb
int3
hlt
push
in
inc
pushf
pop
clc
sbb
ja
call
mov
popl
adc
add
dec
ja
push
fneni(8087
sbb
mov
mov
dec
mov
xor
xor
inc
jmp
ljmp
jns
mov
hlt
push
dec
pop
add
pop
rcr
out
dec
push
fdivrs
or
push
ljmp
pop
pop
mov
jbe
scas
add
jne
dec
pop
mov
outsl
mov
movsl
inc
pop
sti
jl
lods
lds
sbb
daa
fldl2e
sbb
push
jbe
mov
and
repz
shr
lret
mov
adc
sub
xchg
and
sarb
leave
mov
lret
cmp
inc
lds
rorb
pop
js
outsb
into
fisubl
ret
in
aaa
mov
add
movsb
je
mov
fst
cmp
loope
es
movsl
xchg
ss
xchg
dec
cmc
ret
push
loope
jno
lahf
test
mov
inc
and
xchg
inc
out
sub
mov
or
push
repnz
and
aam
je
mov
cwtl
rol
test
lret
call
in
shll
popf
sar
xor
jge
lret
scas
out
mov
dec
popf
xchg
mov
std
fadds
call
cmp
loop
mov
cmc
inc
add
test
mov
roll
das
jae
push
int
fwait
pushl
jb
pop
rcll
jl
inc
add
mov
ss
pop
cmc
cli
mov
sbb
outsb
clc
cmp
ret
inc
stos
jl
pushf
jge
and
pop
repz
xchg
js
mov
mov
cmp
push
loop
mov
iret
pop
dec
xlat
lret
cmpsl
xchg
int
pop
js
movsb
imul
les
adc
mov
mov
cld
fistps
icebp
mov
out
and
mov
cmp
enter
sbb
in
repnz
dec
sbb
pop
push
sub
js
call
cmpsb
sysret
pop
push
add
ror
mov
daa
jg
sahf
lock
js
in
adc
adc
xchg
insb
xor
test
fisttpll
cwtl
adc
adc
les
sbb
je
scas
adc
stc
inc
lret
popa
leave
subps
adc
outsl
int3
out
adc
cmp
sub
subb
clc
push
fcoms
pop
mov
aam
mov
ret
mov
ljmp
cli
testl
mov
into
xor
sbb
push
testb
sbb
cli
xchg
popa
xchg
xor
jo
push
popa
push
hlt
shll
cmp
xchg
gs
push
add
rol
xchg
int
repnz
push
lahf
sbb
nop
leave
hlt
mov
jno
sub
pop
pushf
imul
aas
aas
in
lods
out
inc
cmp
movntq
out
hlt
movsl
jp
icebp
xchg
clc
push
cmp
lret
out
jmp
xchg
push
in
jae
movq
ja
adc
sti
xor
loope
add
lret
mov
dec
out
xchg
call
les
sbb
cmp
dec
cmp
add
aas
test
sub
jle
pusha
xchg
mov
nop
out
insl
test
stc
aam
test
pop
inc
shll
xor
ret
lcall
les
or
xchg
jl
mov
jl
or
gs
sbb
roll
push
mov
gs
add
and
pop
inc
push
jns
and
in
dec
cli
sub
xor
bnd
aam
and
repz
jno
inc
xlat
mov
or
sbb
sub
in
roll
mov
pop
pop
adc
mov
push
or
add
dec
xor
jo
inc
inc
ljmp
lea
repz
mov
cmc
xor
sub
cli
out
fmull
mov
xor
mov
jns
push
dec
test
mov
mov
pushf
shll
aaa
sub
mov
out
fidivl
mov
je
push
sbb
loopne
sub
push
lock
adc
push
std
jge
aad
movl
fs
fsts
add
stc
shlb
jns
stos
adc
push
icebp
ficomps
dec
xor
and
xor
xchg
cld
cmp
ror
jns
mov
aad
mov
jno
inc
mov
ljmp
loope
adc
adc
aam
div
mov
repnz
test
js
loopne
sub
fnstcw
xchg
push
mov
xchg
ja
sub
cwtl
fistpll
mov
adc
pop
mov
test
fdivl
nop
mov
sbbb
popa
into
fwait
int
mov
hlt
mov
pop
inc
stc
jae
mov
inc
pop
sub
sahf
out
lahf
jl
or
or
xorb
test
sub
test
xchg
dec
dec
xlat
and
clc
not
cmpsb
mov
or
sub
mov
push
push
and
inc
lret
in
mov
dec
es
dec
inc
mov
dec
out
adc
mov
rclb
pop
push
fdivrl
xchg
call
cmp
test
daa
fimuls
out
test
xchg
in
cmpsl
es
data16
xchg
push
shll
sub
add
sbb
xchg
jl
in
cwtl
loopne
mov
mov
insb
into
jecxz
add
lea
fsubp
addr16
sub
inc
mov
push
loop
jb
frstor
jmp
push
lret
and
add
cmp
mov
xchg
jo
mov
hlt
jl
ret
int
cltd
pop
rcr
in
movsb
gs
cmp
std
add
hlt
adc
iret
call
out
push
mov
in
insl
pop
inc
jmp
cmp
dec
pop
push
pop
fsubrs
mov
cli
imul
dec
into
js
mov
pop
out
or
add
sbb
push
data16
es
jno
sub
clc
jbe
iret
pop
pop
std
ret
mov
loope
jp
inc
divl
cmp
js
sub
cmp
lret
out
pushl
out
sbb
sub
repnz
cmp
cmp
cmp
push
and
mov
ret
sbb
mov
push
add
push
movsb
cmpsl
js
andl
pop
les
cli
and
shlb
arpl
in
out
ficoms
mov
mov
lea
mov
and
out
nop
les
iret
ljmp
insl
pop
mov
test
daa
test
inc
movsl
mov
mov
std
mov
push
lret
repnz
jno
cltd
xchg
sub
ljmp
and
xor
incl
pop
inc
jo
sub
inc
push
pushf
xor
hlt
pushf
aas
test
imul
xor
mov
call
cmp
and
cmpsb
je
sub
dec
icebp
aas
or
sub
scas
outsl
and
int3
rcrb
aam
hlt
mov
nop
dec
test
push
dec
xchg
ja
pop
or
mov
cld
ret
push
mov
pop
inc
shrb
sub
push
sbb
aas
jbe
xrelease
sub
or
adc
xor
xor
sub
cwtl
ja
ljmp
xor
in
cmp
or
loope
sub
xchg
loopne
test
mov
xor
xor
sbb
stc
call
inc
test
adc
lods
sub
jle
pop
sti
push
add
dec
jbe
push
lahf
std
dec
lods
xlat
aas
loopne
notl
js
sbb
mov
pop
pop
cmp
das
dec
cld
pop
out
xchg
popa
nop
js
in
gs
jb
and
xchg
mov
sbb
or
and
imul
sbb
jge
pushf
ljmp
fisttpll
negl
adc
pop
mov
mov
aam
ds
movsl
aam
fdivs
in
xor
xorl
pop
adc
pop
lods
sbb
jno
xor
xor
xchg
neg
fisubl
mov
aam
xchg
fsub
cmp
outsb
daa
inc
sbb
inc
dec
movsb
or
jns
mov
icebp
mov
mov
cmp
hlt
push
mov
xor
loop
mov
aaa
push
pop
call
xchg
shll
mov
stos
sti
pop
mov
and
nop
xchg
test
mov
in
inc
lods
mov
xchg
test
cli
imul
out
icebp
dec
call
and
cmp
sbb
clc
test
mov
push
mov
cmp
mov
cld
das
cmp
sub
mov
xchg
mov
mov
iret
bound
nop
or
clc
add
out
clc
and
clc
cmpsl
cmp
mov
incl
mov
dec
xor
push
mov
pop
gs
dec
aam
mov
dec
test
mov
mov
jb
mov
xchg
aad
inc
rclb
call
test
insb
ljmp
aas
dec
push
pop
cwtl
push
stos
test
movsb
xchg
daa
fdivs
stos
mov
fdivrl
xstore-rng
cmpsl
mov
inc
in
mov
inc
xor
push
repnz
and
push
andb
notb
fisubrl
adc
sbb
std
mov
or
stc
push
cmp
xor
lret
push
shll
outsl
int3
das
gs
mov
inc
aam
and
ret
mov
mov
inc
xor
pop
cmp
popa
jl
dec
xchg
mov
cwtl
fistps
rcrl
aaa
jl
and
dec
or
mov
adc
faddl
nop
nop
addr16
xlat
iret
ror
enter
nop
lret
xchg
lahf
ret
pop
sbb
and
add
cmp
sbb
call
cwtl
xor
test
imul
aam
sub
fisttps
sbb
hlt
dec
adc
mov
in
dec
sbb
aaa
out
das
xor
inc
lret
ret
sbb
pop
inc
push
jno
mov
dec
out
xchg
xchg
repnz
sbb
dec
xchg
mov
movsl
xor
inc
fs
out
jle
call
cli
xchg
or
mov
pop
je
rcrb
lcall
ljmp
clc
imul
cmp
xor
aad
les
jo
lods
mov
adc
pusha
lods
dec
int3
call
stos
jmp
fldcw
xor
xchg
dec
nop
int3
sbb
scas
xor
jbe
out
adc
arpl
call
ret
mov
or
std
lea
int
pop
dec
sbb
mov
insl
fdivs
les
mov
clc
xchg
xchg
jle
xor
push
nop
pop
pop
stos
adc
js
sarl
cmp
or
je
mov
mov
sti
lds
dec
sbb
nop
mov
stc
pusha
mov
adc
fneni(8087
pushf
jno
outsl
sar
dec
mov
movsb
push
jno
leave
inc
pop
cltd
dec
addr16
dec
pop
dec
mov
add
adc
lock
in
aad
inc
dec
gs
jno
pusha
aas
mov
mov
jg
jmp
jno
loope
adc
xlat
cli
or
ss
gs
mov
jne
ljmp
cmpsb
in
and
cld
inc
push
xlat
andb
psrlq
xor
pop
ljmp
out
or
clc
jbe
ret
xchg
pop
xchg
jecxz
cmp
push
and
outsl
int
cmp
outsl
rcrb
gs
imul
lock
fcompl
scas
cs
dec
scas
mov
clc
in
xor
sbb
xchg
outsb
aaa
out
lret
outsl
aam
pop
iret
add
add
repnz
loopne
inc
add
iret
inc
pop
xchg
cwtl
pop
sti
sub
cli
rorl
sbb
outsb
dec
cmp
fwait
stos
or
cmp
and
push
outsl
loopne
ljmp
addr16
pop
xchg
fwait
mov
stos
jnp
imul
je
out
repz
loopne
mov
xchg
adc
sbb
jl
mov
pop
mov
int
mov
loope
movsb
cli
fidivs
dec
jb
imul
mov
add
mov
xchg
in
idivb
cmp
add
mov
fwait
popf
lret
bts
into
std
jg
scas
out
cmpsl
mov
test
pop
push
cwtl
or
cmp
scas
push
lret
mov
int
dec
in
arpl
xor
mov
mov
xchg
incb
add
inc
sbb
out
adc
adc
test
test
jno
cli
fmuls
insb
das
lret
lods
addr16
and
xor
xchg
cmp
pop
shl
pop
pop
inc
push
repz
jno
inc
sub
pop
dec
stc
jne
aad
fsubs
insl
dec
cmp
notl
fimuls
lea
inc
push
mov
movsb
adc
cld
xor
out
idivl
aaa
sub
inc
out
and
leave
cmp
jne
out
fdivp
aam
inc
outsl
test
inc
cld
cli
and
mov
int3
rep
les
clc
and
or
sub
aam
dec
repz
pop
jns
pop
push
in
lds
pusha
mov
xor
bound
mov
insb
cli
or
pop
lahf
cmc
insl
fs
xchg
push
sub
imul
ficompl
fwait
xchg
pop
cltd
add
out
add
add
mov
push
or
hlt
mov
leave
cltd
std
iret
sbb
jno
and
cld
aaa
inc
lret
in
or
cmpsl
lahf
sub
lret
and
rcrl
gs
jp
adc
dec
jmp
add
insl
cmp
ljmp
cmp
add
and
and
mov
pop
cmpsl
out
fbstp
hlt
scas
push
scas
std
mov
loope
mov
pushf
mov
mov
xchg
jle
divl
jae
fwait
int3
data16
aaa
xlat
mov
xchg
jbe
add
pushf
adc
jl
aas
clc
jmp
inc
rcll
es
insl
loopne
jecxz
dec
push
aaa
adc
sbb
fsubrs
aad
sbb
jp
jo
xchg
jns
ret
mov
aaa
imul
rcrb
xor
mov
stc
out
mov
into
adc
dec
orl
repnz
hlt
pop
mov
mov
jns
lret
sub
test
inc
push
jecxz
rorl
pop
xlat
ret
in
out
fldcw
jecxz
rorb
cwtl
inc
pop
mov
shlb
les
mov
repnz
jmp
rorl
rcll
repz
shl
mov
call
fdivrs
dec
inc
js
lret
clc
int3
cwtl
cwtl
aad
push
mov
sbb
pop
shrb
cli
jo
inc
mov
test
xchg
cmpsb
sub
in
rcrl
mov
int3
divl
jl
orb
and
nop
push
aad
cmp
mov
dec
hlt
fidivrs
nop
in
sbb
push
dec
sub
test
xchg
xlat
repz
ja
lock
hlt
cld
sarb
scas
mov
ficoml
mov
push
ss
jge
data16
xorb
filds
xor
in
or
sbb
nop
dec
mov
cli
outsl
push
cmp
cmpsl
push
sub
in
mov
imul
adc
fwait
mov
es
imul
xchg
sub
cmp
test
sbb
xor
jbe
or
mov
push
hlt
xor
loopne
push
ffree
mov
mov
call
add
stc
and
cmp
pop
rorb
and
scas
mov
rcrl
xchg
test
mov
rolb
iret
xor
inc
arpl
imul
sub
sar
stc
and
imul
mov
lcall
xchg
xchg
sbb
hlt
add
pop
cmp
pop
inc
xchg
and
mov
mov
ljmp
xor
insl
adc
cltd
xchg
xchg
fcompl
pop
outsl
data16
cwtl
shrb
xor
lret
repnz
cmp
int3
sbbb
testl
xor
jg
lahf
test
insb
and
add
mov
jno
and
xlat
gs
sbb
das
adc
sbb
jns
shll
in
add
aam
scas
lahf
repnz
fwait
push
cmp
aam
test
sti
jne
call
ss
mov
test
push
aaa
jbe
mov
pop
sbb
xor
jbe
fwait
push
loopne
cmp
pop
nop
test
outsb
sub
or
mov
rcr
dec
fs
fst
mov
xor
fistps
mov
ss
adcl
call
mov
dec
fiaddl
sub
mov
out
xlat
faddl
adc
sub
push
cwtl
xchg
fwait
mov
jg
clc
xchg
jle
push
mov
shlb
loope
clc
lcall
aas
test
call
ret
out
jns
lock
data16
fmuls
outsb
cmp
xchg
nop
jo
sbb
outsb
out
and
xchg
and
jne
mov
adc
cli
dec
pop
aam
xor
aad
xor
cs
in
mov
inc
enter
ljmp
sub
push
mov
and
and
ficoms
push
ss
andb
mov
mov
push
add
cmpsb
mov
xor
push
andl
fiaddl
xchg
scas
gs
jecxz
aad
sahf
cs
add
je
test
stos
nop
xchg
fwait
cltd
in
data16
xor
jno
xchg
mov
es
in
pop
jle
xor
in
mov
mov
add
mov
aam
push
test
aas
out
inc
outsb
cwtl
loope
dec
push
aaa
sub
imul
inc
mov
rcrb
movsl
sbb
mov
dec
jge
mov
hlt
mov
dec
je
repnz
sbb
and
in
sub
jmp
in
mov
mov
pushf
nop
adc
fs
in
shlb
imul
test
imul
cwtl
mov
xchg
mov
rcrb
negb
movsb
fs
xchg
adc
sub
xchg
sbb
pop
bound
inc
nop
xor
mov
sbbb
inc
js
sbb
aad
or
cmp
jne
jns
jecxz
and
adc
jmp
xor
and
movl
orb
ljmp
cli
pop
orb
aas
xchg
dec
js
in
test
inc
out
cwtl
ljmp
jg
sub
or
popa
fsubrs
lahf
cmc
nop
mov
inc
jmp
sbb
orb
mov
mov
sti
adc
loopne
loopne
adcb
js
iret
lock
dec
dec
adcl
jmp
jns
pop
jg
sub
cmp
push
pop
das
je
mov
rcl
movsb
call
pop
add
mov
sbb
lods
mov
sbb
pop
mov
or
je
mov
push
sahf
xchg
fwait
pop
repz
aaa
xchg
mov
cmpb
repnz
or
movsl
xor
in
sbb
sub
rorl
or
push
fnstsw
cmp
cmp
lcall
loope
sahf
stc
dec
rorb
insl
outsl
push
shlb
push
cld
inc
xchg
mov
mov
cmc
dec
and
lock
mov
mov
fiaddl
les
dec
sbb
sbb
mov
or
cmp
xchg
adc
and
dec
xchg
xchg
insb
gs
imul
ret
pusha
sbb
xlat
sbb
push
inc
dec
dec
cmc
inc
xchg
insb
jmp
fstpt
add
fnstsw
mov
loopne
in
in
dec
sbb
nop
bnd
aaa
fs
xor
adc
xchg
orb
mov
pusha
jl
mov
mov
out
aad
xor
lods
xchg
inc
mov
bound
adc
mov
aad
cs
xchg
mov
fwait
jne
xor
push
pop
cmpsl
mov
xchg
and
mov
idivb
xor
je
flds
into
sbb
js
pop
xchg
cli
sahf
out
aad
push
jb
mov
leave
pop
lea
das
out
add
ret
loop
psraw
cmpsl
test
or
xchg
lock
daa
mov
pop
cmpsl
repnz
je
cwtl
push
mov
mov
dec
jge
neg
dec
mov
loopne
addl
dec
stos
pop
test
loopne
push
lods
add
or
aad
aam
ljmp
jb
or
ss
sbb
dec
clc
push
push
addr16
lret
nop
dec
hlt
test
xor
shrl
and
ret
ret
xchg
lcall
pushl
xor
fdivr
loop
dec
ss
dec
cmc
in
pusha
or
push
jmp
ficoml
fs
mov
iret
lock
les
arpl
sbb
sbb
sti
sbb
adc
mov
in
push
push
jl
push
adc
mov
gs
adc
test
xchg
xchg
loopne
idivb
jl
and
pushf
add
pusha
inc
mov
call
mov
icebp
dec
roll
mov
mov
and
push
mov
xor
pop
mov
pusha
pop
push
mov
cld
dec
ret
lods
add
sti
push
in
jmp
gs
bound
fldcw
cld
mov
rcrb
dec
pop
jmp
iret
xor
fcom
je
cmp
popf
dec
das
jmp
jae
mov
repnz
clc
pop
xchg
test
mov
inc
add
dec
adc
enter
sbb
sub
inc
adc
pop
pop
fs
push
cmpsb
loope
in
jmp
pop
int3
xchg
add
inc
pop
ret
dec
lahf
dec
rorl
int3
lods
in
adc
es
cli
push
jo
in
adc
les
cs
mov
push
cmc
mul
scas
xchg
cmp
gs
push
pushf
ljmp
mov
call
lock
outsb
test
incb
rorl
inc
ret
notb
add
push
mov
adc
ret
push
sub
lods
mov
mov
fs
push
gs
call
mov
out
out
pop
mov
daa
pop
mov
dec
movsb
fcmovbe
fadds
inc
dec
mov
enter
loope
daa
out
pop
push
xchg
orb
xlat
ljmp
dec
fadds
cmpsb
stc
lret
je
movsb
in
pop
and
lret
gs
movsl
inc
or
sbb
int3
in
jne
jno
gs
sbb
pop
dec
push
in
cli
cld
test
inc
int
inc
nop
mov
xor
out
mov
call
lahf
ds
jmp
pop
incl
xor
aaa
in
add
in
add
and
stc
addr16
aaa
xchg
nop
fcmovnu
nop
nop
pop
pushf
xchg
out
ret
stos
pop
and
inc
in
pop
call
mov
stos
sbb
addr16
or
ja
push
mov
hlt
sub
test
loope
sub
loopne
mov
bound
cld
push
fwait
fwait
addr16
push
mov
sbb
dec
ja
jns
cmp
ffreep
notl
jbe
cld
orl
dec
mov
jge
lods
jb
inc
scas
cs
fwait
pop
jae
adc
gs
shll
mov
add
das
aas
pusha
scas
ret
dec
ja
nop
xchg
adc
shll
lods
dec
dec
add
xor
aaa
pop
mov
fcmovb
adcb
mov
and
sahf
iret
ljmp
pop
pop
call
mov
insl
jp
pushf
pusha
mov
sbb
repz
dec
hlt
cmpsl
clc
pop
xchg
dec
shll
dec
into
js
fimuls
inc
shrb
icebp
dec
cmc
push
andb
xchg
inc
push
repnz
lea
sbb
pop
push
cmp
iret
mov
mov
shl
cwtl
test
jb
in
lds
sbb
retw
cli
enter
sbb
fisubs
lods
lcall
jl
adc
shl
sbb
push
mov
or
loope
cmp
push
push
popa
repz
dec
xlat
iret
fists
and
add
movl
mov
jl
mov
aam
hlt
adc
sbb
insb
lret
pusha
aam
sub
xchg
lock
ror
inc
pop
hlt
xor
adc
sub
int3
xor
sqrtps
xchg
or
call
pusha
sbb
ds
jle
mov
data16
iret
push
test
sub
popf
pop
xor
jle
cmp
shll
mov
in
pop
inc
pusha
fldl
mov
sti
push
mov
pushf
lods
loope
push
call
and
sbb
add
aaa
ret
nop
push
dec
xorb
sub
je
cwtl
mov
sub
mov
call
mov
or
cwtl
ret
jnp
fmuls
fmulp
sub
dec
es
or
stos
fbstp
jg
lock
dec
outsl
and
lods
sbb
cmp
insl
popf
sub
cmpsl
jmp
cwtl
dec
pop
cs
jmp
jnp
dec
sub
pop
sub
sub
adc
insb
inc
rcrb
pop
pop
add
jg
adc
push
adc
xor
or
gs
cmp
push
fdivs
pusha
sbb
outsl
test
adc
mov
in
cld
mov
ror
loope
and
sar
insl
push
es
add
out
insb
lahf
xchg
cmp
pop
ljmp
dec
arpl
lods
ffreep
xchg
in
shlb
and
mov
jmp
cmpsl
movsl
in
gs
aad
aas
test
jmp
test
lock
fdiv
ljmp
or
sub
and
and
fcmovnb
xor
fs
jle
inc
aas
dec
xor
das
cwtl
sub
lods
mov
xor
inc
loopne
adc
jecxz
cmp
push
pop
mov
cltd
stos
fsubrs
jae
leave
aaa
iret
jp
imul
clc
dec
pop
push
xor
hlt
outsl
adc
gs
xchg
rcr
sbb
leave
jbe
jmp
inc
push
rcll
andb
adc
cld
andb
push
les
add
pop
cwtl
cltd
cmpsb
dec
jae
iret
cmp
xor
dec
jecxz
pop
push
jp
dec
pushf
rorl
lcall
inc
hlt
imul
lret
adc
jne
pop
filds
push
push
mov
xor
or
and
sub
xlat
leave
loop
inc
mov
in
pop
adc
out
push
dec
scas
rcrl
ret
fadd
aad
outsl
cli
imul
inc
shll
add
lods
inc
call
sbb
jns
je
dec
clc
pop
and
es
mov
lret
mov
dec
lods
lods
mov
dec
xor
xor
popf
cld
das
dec
dec
rorb
dec
push
and
fsubr
addr16
mov
lods
rcrb
cld
cmp
das
or
mov
xchg
pushf
pop
lret
in
sub
imul
mov
dec
or
mov
fsubr
cld
push
hlt
mov
rclb
jo
rcl
cld
ljmp
cmp
inc
out
mov
cwtl
lds
testb
mov
out
lret
imul
mov
fsubr
fiadds
jg
sahf
fsubrp
loopne
imul
jo
fsubrl
sarl
sti
fcomps
mov
fsubrs
add
sub
push
rcr
xor
ja
sub
in
add
cmp
in
hlt
repnz
cld
mov
inc
in
bound
pop
xchg
cmp
fcoml
out
or
mov
test
cmp
aam
test
idivl
jno
pop
test
or
mov
jb
int3
into
imul
ja
js
ljmp
xchg
sub
fs
in
pop
add
call
negl
xchg
xlat
nop
js
rcrb
dec
ret
inc
aaa
ljmp
push
dec
and
or
rcll
orl
ret
pop
stos
jl
mov
xor
mov
sar
rorl
cld
xor
in
iret
rcl
mov
popf
lods
inc
add
insw
cld
jmp
repz
jl
loope
xor
mov
push
cmp
mov
das
cld
adc
enter
sbb
sbb
xchg
and
lret
pop
ret
jns
cmp
jge
les
loopne
dec
in
xor
loope
inc
push
xor
ss
mov
out
add
pop
and
xor
loopne
stos
mov
inc
repnz
sti
fcoms
mov
subb
pusha
adc
scas
testl
pop
inc
scas
push
in
stos
and
mov
cmp
fistps
dec
sbb
mov
mov
movsl
jo
pop
mov
fs
push
jbe
fidivrl
push
lea
jno
mov
mov
sub
push
es
dec
mov
js
xchg
sahf
data16
jbe
and
lret
out
xchg
pop
pop
sbb
push
adc
jmp
inc
insl
cmpsb
ret
mov
add
inc
xchg
sub
nop
push
add
dec
push
mov
cwtl
sbb
dec
sub
cmpsb
ret
cwtl
pop
dec
cmp
cmp
jl
test
rclb
sub
and
cwtl
pop
jge
push
pushf
gs
push
sbb
xor
jp
test
mov
rcrb
out
pop
cmp
inc
or
pop
xchg
scas
dec
jno
movsl
inc
ja
nop
mov
mov
test
fstpl
pop
push
adc
mov
popf
lods
je
xchg
add
outsl
mov
call
imulb
popf
inc
in
notl
cwtl
dec
mov
mov
in
inc
rol
mov
mov
leave
mov
ret
lock
fdivrl
or
cld
lret
hlt
out
iret
pop
fsub
test
cwtl
inc
hlt
xchg
pop
int3
mov
ret
inc
loope
inc
mov
adc
add
dec
cmp
and
cmp
jne
cmp
repz
int
movhps
push
pop
rol
mov
pop
xor
test
pop
addr16
mov
pop
sbb
scas
push
cli
xor
shll
loopne
fdivs
lret
sub
or
pop
pop
push
add
shr
push
daa
ret
aad
out
push
mov
mov
inc
push
call
push
or
int
sti
shrl
aam
das
xlat
imull
iret
repz
nop
fcmove
jge
scas
sbb
ret
test
pop
push
dec
xchg
adc
scas
movsb
into
jno
inc
popf
push
rcll
pusha
gs
and
add
aam
sti
cmc
mov
mov
aas
ret
je
jb
roll
xor
push
cmp
push
pop
mov
arpl
dec
jbe
dec
popf
jge
jl
aas
loope
sub
pop
jae
add
or
dec
sub
jmp
dec
mov
aad
clc
mov
cli
pop
mov
fwait
push
and
nop
push
in
gs
xorb
lahf
jno
jo
ja
cwtl
cmp
test
ljmp
sub
cmp
xlat
out
repnz
lock
pop
ss
clc
int3
mov
jns
mov
ror
dec
inc
nop
mov
pop
fcompl
sbbb
jne
dec
shrl
dec
or
cmp
test
adc
out
scas
pop
mov
inc
mov
xchg
mov
es
and
test
clc
lret
xor
pop
repz
add
std
popf
and
iret
outsl
rorb
cmpsl
loope
push
dec
xchg
xor
mov
dec
lcall
xchg
and
xchg
ja
iret
repz
add
or
pop
lret
and
aaa
ljmp
ds
out
lret
jne
add
xor
inc
or
mov
popf
add
hlt
jb
in
int
jo
bnd
test
outsb
pop
sub
jo
xor
push
jno
ljmp
jge
out
int
cmp
lret
pop
sbb
jno
movsb
xor
in
add
call
stc
movsb
gs
in
dec
cmpl
pop
out
lret
cmp
add
xchg
mov
cltd
xchg
adc
adc
movsb
push
es
repz
sub
push
xchg
outsl
add
icebp
movsl
dec
cmpsl
movb
in
sbb
shl
popa
add
push
frstpm(287
push
and
push
int3
push
mov
xlat
cmp
push
pop
cmp
xchg
push
mov
mov
adc
ret
arpl
inc
nop
leave
outsl
in
shrb
jo
lcall
out
or
lods
jmp
cmp
inc
or
in
rcr
addr16
mov
or
add
mov
push
fcomps
stos
or
push
out
hlt
sahf
or
int3
jmp
aaa
fs
dec
push
dec
mov
clc
xchg
shrb
pop
shlb
test
cli
fiadds
xchg
mov
stos
int3
cmc
gs
les
ds
cmp
sub
test
adc
subl
xor
xchg
mov
inc
stos
inc
ljmp
mov
rorb
call
pop
lea
dec
adc
mov
push
test
int3
hlt
aaa
pusha
mov
push
inc
sbbb
ja
pop
sub
cmpsb
mov
data16
cmpsb
jecxz
sub
mov
push
into
aam
sbb
dec
mov
xchg
dec
lds
div
jno
push
jno
xchg
dec
or
jno
xor
int
mov
mov
push
testl
icebp
mov
mull
add
jno
push
xchg
xchg
inc
add
sub
or
aas
jp
and
add
in
push
pop
push
cwtl
dec
xchg
pop
push
int3
sub
filds
or
test
cs
push
ljmp
xor
fcoms
jo
lret
aad
repz
xlat
mov
cwtl
outsl
hlt
stos
ja
adc
mov
sub
fwait
mov
cmp
nop
jmp
xchg
stos
repz
jae
sbb
and
mov
aad
adc
sbb
nop
inc
and
ja
push
movsb
xor
push
cmpsb
push
ja
jno
push
movsl
jne
aaa
out
stos
es
test
mov
clc
int3
loopne
and
jne
and
aaa
fs
sub
clc
es
jmp
sbb
push
shlb
and
imul
jle
lret
ret
aam
cli
into
scas
leave
dec
rorb
jb
mov
jno
push
stc
xchg
cmp
out
ljmp
sbb
add
hlt
push
loope
iret
adc
sub
or
fbld
lcall
pop
sbb
lds
je
pop
mov
fs
jne
outsl
out
movsb
leave
in
push
sbb
into
cmc
pushf
inc
mov
int3
cmp
in
jg
repz
xchg
sub
orb
sub
faddl
push
add
jg
mov
orl
pop
lcall
add
xchg
test
push
mov
shlb
ljmp
xlat
movsb
ljmp
pop
xlat
call
lcall
cwtl
xlat
mov
filds
and
push
into
push
out
stos
sbb
inc
and
ss
cs
pop
xor
out
shl
xchg
loopne
push
mov
rcl
js
loop
jne
xorb
imulb
scas
pop
rcll
in
xor
inc
pop
pop
push
cld
mov
xchg
xchg
mov
xchg
push
mov
pop
sub
xchg
jo
fistps
andl
leave
xchg
aad
gs
jle
ret
xchg
adc
std
lods
imul
stos
push
shl
lret
sbb
mov
mov
fwait
dec
cmp
cli
cmp
ljmp
sub
sbb
mov
cwtl
jl
and
cld
fisttps
push
sbb
mov
ret
inc
sub
int3
adc
sti
and
out
mov
sbb
shll
in
xchg
inc
addr16
ja
stos
jle
jbe
inc
pop
test
outsb
pop
sub
dec
fs
call
dec
test
clc
xlat
int3
cmp
aad
in
cmp
sbb
lcall
iret
std
fmull
pop
push
sarl
push
jl
push
lcall
enter
ljmp
cmp
shll
mov
fildl
test
fisttps
push
aas
cmp
mov
adc
jp
sbb
cli
or
nop
sbb
repz
inc
add
mov
mov
pop
ljmp
xchg
push
pop
nop
lahf
leave
sahf
test
in
xchg
mov
dec
xchg
inc
out
iret
les
ljmp
jmp
mov
xchg
shll
loopne
negb
ja
sbb
pop
and
mov
jmp
mov
ficompl
in
mov
notb
out
fs
nop
sub
call
mov
loopne
int
pop
push
adc
aad
adc
jp
lret
add
sarb
mov
out
cmp
out
fwait
xchg
ret
push
and
gs
movsl
cmp
sub
and
push
pop
fidivl
sbb
and
in
and
imul
pop
xor
int3
pop
push
jbe
out
dec
xchg
adcl
aas
out
ja
add
sub
into
jne
repz
je
int
paddsb
scas
xor
popf
out
mov
or
push
les
mov
xchg
imul
or
cmp
fwait
push
sub
cwtl
jo
dec
xchg
test
dec
in
cmp
inc
dec
aaa
sub
xchg
jecxz
add
push
xchg
sub
cmp
sub
add
xchg
sbb
das
insl
jl
int3
rcl
jg
js
insl
leave
mov
out
mov
cmp
out
fsubp
xrelease
mov
inc
mov
push
cmp
sbb
scas
out
rcrb
jl
popa
hlt
repz
int3
or
mov
adcl
xchg
add
mov
jbe
call
add
pop
mov
in
fcoml
arpl
mov
push
push
ljmp
test
push
clc
cwtl
out
fisttps
nop
cmpsb
adc
out
hlt
addr16
lret
scas
test
in
pop
loop
push
push
pop
sub
mov
inc
les
shlb
mov
inc
test
inc
pop
cmp
jne
mov
in
mov
lret
sbb
shl
xor
push
add
lea
pop
iret
inc
lock
xchg
fmull
pop
daa
pmaxub
xchg
fcomps
dec
xlat
iret
bnd
shr
lret
inc
jb
smsw
loop
mov
ret
sub
xor
or
cmp
fsubrs
aam
cmc
repz
mov
push
test
out
incb
mov
repz
pop
movsl
nop
negb
xchg
sbb
jne
movsb
jmp
mov
jae
add
ret
adc
mov
or
jmp
fcmovnbe
cli
ficompl
sahf
xor
jae
out
mov
mov
mov
stc
fld
inc
pop
xchg
fmuls
pop
push
notb
adc
test
fldcw
ljmp
popf
iret
aad
std
orl
dec
fsubrs
xor
xchg
lcall
pop
aaa
inc
xchg
add
mov
push
dec
jne
adc
ficompl
int3
mov
add
cmp
imul
es
addr16
adc
sbb
inc
out
dec
push
aas
push
adc
shlb
mov
xchg
and
ljmp
rcl
cmp
mov
sub
push
cwtl
xlat
fsubs
xor
jo
loopne
sbb
push
popf
ljmp
nop
loop
sti
int
pop
rcr
add
mov
mov
or
lret
inc
push
sbb
and
cwtl
call
push
pushf
in
cmpsl
and
clc
iret
mov
inc
enter
mov
lret
mov
pop
mov
out
cli
or
mov
notb
xchg
loopne
mov
andl
aam
repnz
cmp
sbbb
pop
cwtl
icebp
sbb
push
daa
cmp
mov
xlat
adc
sub
push
ljmp
or
cmp
faddl
cli
mov
pop
or
sti
mov
dec
aad
xchg
das
xchg
cld
or
pop
pop
movsl
pop
sbb
cmp
mov
mov
sub
fdivr
fisubl
sub
and
pop
lds
sbb
sbb
ret
loope
cmc
iret
inc
pop
cld
les
ja
sbb
shrl
and
addr16
xor
or
mov
xchg
xor
cmp
xchg
dec
xchg
dec
es
ja
and
in
pop
mov
mov
cmpsb
jl
xchg
mov
push
inc
mov
jmp
outsb
in
fsubrs
mov
pop
dec
lock
push
jge
push
push
test
hlt
cs
pop
in
fistpl
xchg
push
mov
pop
jbe
arpl
loopne
outsb
dec
cltd
sbb
sub
loope
loopne
subl
pop
push
jecxz
fsubs
pop
ret
into
push
repz
sub
and
jle
mov
adc
push
cmp
cmp
rorl
shll
fbld
push
xchg
bswap
fs
test
ljmp
mov
mov
fwait
sub
jne
mov
sub
xchg
movzwl
test
xchg
sbb
adc
xchg
cmpsb
jb
sbb
gs
add
mov
xlat
mov
jbe
mov
xchg
addr16
or
nop
shr
xchg
pop
insl
stc
pop
outsl
add
outsl
and
xlat
pusha
pop
gs
test
lret
mov
stos
lahf
fidivl
mov
cmp
xchg
fs
push
xor
mov
stos
ljmp
inc
add
mov
in
mov
repnz
cmp
aam
in
je
stos
and
call
idiv
into
mov
scas
scas
int
in
dec
test
or
lret
mov
jmp
outsl
sbb
dec
and
shll
adc
mov
in
sub
vcvtdq2pd
xor
js
lcall
adc
push
fcoml
jg
xor
loop
fwait
sbb
mov
jmp
xor
push
bound
sti
xchg
ljmp
hlt
ja
pop
int
pushf
or
aas
ds
out
stos
xor
or
clc
or
clc
mov
call
out
ret
sub
mov
pop
inc
xor
ljmp
mov
add
in
call
sub
outsb
lcall
dec
mov
or
inc
cmp
loope
movsl
addr16
scas
enterw
mov
hlt
jno
fwait
or
mov
or
inc
loope
test
xchg
inc
fs
pop
cmpsl
push
int3
outsl
rolb
jo
xchg
clc
daa
loopne
lret
loopne
js
pop
pop
cmp
adc
insb
and
ja
lea
mov
into
scas
push
or
xchg
inc
nop
les
imul
sahf
xor
sub
pop
sbb
add
xor
mov
in
xchg
fcomip
pop
xchg
jae
das
jns
jmp
pop
sub
hlt
sub
aad
inc
test
ret
sahf
testb
call
daa
sbbl
pop
dec
inc
pushf
js
outsb
inc
push
dec
inc
pusha
cwtl
scas
jno
data16
cmc
push
fldt
fwait
mov
insb
mulb
movsl
mov
pop
jae
sbb
in
mov
dec
out
xchg
add
fwait
or
pop
hlt
jne
xlat
enter
sarl
jmp
popf
sub
jae
mov
repz
out
mov
test
test
pop
xor
xchg
test
mov
pop
pop
aaa
mov
int
mov
fwait
adc
into
and
lcall
pop
cwtl
jg
jb
repnz
movsl
fwait
xor
sti
in
push
dec
and
lret
out
sub
jge
iret
gs
inc
push
mov
xchg
sbb
sbb
fidivrs
xchg
xchg
add
sti
incl
dec
cmp
xor
pop
jne
test
clc
cmc
jl
push
add
imul
in
push
adc
imul
dec
cmc
xchg
call
fwait
adc
pop
lret
sub
pushf
scas
clc
aas
iret
shr
cmp
aam
je
rclb
xor
decb
cwtl
insl
push
cmpsb
fs
fwait
cmpsb
mov
and
fdivrl
into
in
mov
rol
pushf
loope
rcr
pop
jl
xchg
dec
stos
mov
fs
call
push
outsb
mov
in
jp
cwtl
cmp
mov
sti
pop
cmpsl
fs
adc
sub
imul
jno
out
or
lock
or
adc
jmp
pop
xor
jo
out
sub
mov
hlt
mov
mov
ret
sahf
clc
push
cmp
jne
cld
gs
ret
into
daa
in
mov
xchg
sti
test
nop
sub
mov
sbb
pushf
loopne
cmpsb
insb
xlat
dec
jge
or
or
clc
mov
adc
fmulp
push
xor
bound
sbb
xchg
cmp
scas
shrb
or
mov
jae
int3
loopne
lret
decl
nop
es
add
cmpsb
cmp
aam
test
dec
fisttpl
loop
pop
dec
pop
outsl
xor
jle
jmp
xchg
int3
pop
aam
inc
mov
sub
pop
mov
insb
mov
or
add
int3
int
mov
rcl
aam
fcompl
xor
dec
int
mov
xchg
sbb
insb
pop
add
in
pop
hlt
mov
call
adc
mov
or
push
lahf
xorb
inc
mov
repnz
mov
mov
and
lret
je
rcl
mov
jl
ja
in
jmp
fmuls
adc
and
sub
jle
cld
xor
pusha
lods
je
mov
popf
nop
sub
add
sbbl
ja
ja
xchg
jno
je
sbb
push
xchg
ja
pop
fistpll
pop
je
hlt
cli
iret
fdivs
fidivrl
aaa
out
add
dec
daa
or
subl
insb
andl
or
daa
repz
jl
arpl
sbb
loope
sbb
bound
lods
insb
aaa
xchg
inc
or
xor
and
and
push
xchg
in
and
xchg
in
cmp
stc
mov
gs
scas
shlb
pmaxub
cld
nop
pop
pop
in
in
imul
fs
daa
pop
sbb
fcmovnbe
imul
sbb
jbe
mov
pushf
shrb
int
lret
fmull
rcll
mov
negl
lret
xor
rcrb
jmp
or
cwtl
pop
je
test
xor
xor
sbb
push
xor
imul
pop
leave
js
idivb
stos
jno
nop
pop
push
dec
insl
pusha
or
push
fcmovu
mov
imul
movsb
add
add
jne
pop
into
cwtl
mov
js
daa
dec
mov
imul
pusha
mov
loop
jno
pop
inc
repnz
pop
cmp
sbb
in
add
lret
movsb
cmp
mov
pop
movsb
subb
pop
sbb
mov
jns
cmpb
pop
or
add
or
fmull
imul
mov
xorl
mov
cmp
imul
jmp
and
push
gs
out
int3
lock
mov
lahf
fists
loopne
add
inc
push
inc
mov
mov
scas
jno
nop
mov
pushf
mov
sbb
lret
xchg
ficoms
aaa
clc
sbb
into
leave
dec
imul
pop
push
ret
lcall
jbe
pop
push
lock
fmul
cmp
cmp
pop
inc
fadds
test
sub
aam
repz
rcrl
fnsave
add
mov
pop
pop
nop
mov
mov
addr16
mov
out
mov
aad
cmp
pop
push
mov
push
outsl
shl
rolb
jecxz
js
fbstp
push
adc
xchg
adc
mov
xchg
ss
inc
pop
cmpsl
jecxz
mov
mov
or
shl
int
mov
aam
or
fcmovnb
fbld
movsb
icebp
sbb
loopne
sub
ds
dec
add
pop
sbb
ja
adc
xchg
rclb
es
xlat
notl
shr
dec
mov
mov
xchg
inc
inc
mov
sbb
adcb
xor
adc
ljmp
in
mov
cs
out
in
hlt
sbb
cld
dec
test
push
and
bound
pop
or
pop
rolb
mov
cwtl
jbe
and
dec
in
mov
stos
xor
and
lds
sub
pop
push
lea
aas
mov
iret
mov
btr
xchg
insl
stos
nop
add
movsb
sbb
imul
jecxz
cli
dec
data16
test
mov
loopne
jno
cmp
xchg
in
mov
inc
fbstp
lahf
lock
popf
mov
hlt
add
dec
mov
loopne
out
fwait
adc
aam
int
ljmp
push
repnz
dec
jl
xchg
insb
jno
mov
push
and
test
lock
pop
pop
mov
lahf
sub
dec
mov
outsb
lcall
jo
lret
fstpl
cmp
cmc
mov
or
ret
or
dec
pop
xor
dec
iret
dec
je
adc
bound
fcomip
sub
outsl
xchg
fmul
fdiv
sbb
inc
imul
jge
pop
test
gs
cmp
idivb
test
cmp
jecxz
jae
cmp
je
jge
es
inc
or
mov
loope
outsl
iret
mov
add
stc
jnp
in
lea
icebp
je
dec
fs
js
adcl
xchg
stc
cmc
mov
and
repz
mov
es
push
addl
sbb
dec
jmp
clc
loop
sbb
outsl
ljmp
jp
dec
fsubl
into
sti
mov
ret
and
xchg
pop
and
test
push
lods
mov
xchg
cmc
add
xchg
jecxz
and
sub
mov
inc
inc
pop
mov
dec
outsl
pop
pop
push
inc
push
jl
mov
sub
lahf
mov
fdivs
lret
icebp
dec
test
adc
mov
rol
sub
scas
and
dec
xor
movsl
jo
mov
xrelease
xchg
add
aad
rorw
das
dec
out
mov
iret
pop
push
pop
bound
nop
enter
sbb
out
fsubl
fld
inc
mov
sbbb
add
aam
adc
jecxz
aaa
adc
pop
cmp
shr
nop
sub
mov
sar
stos
dec
xrelease
insb
mov
test
jae
inc
jle
push
sbbb
lret
pusha
arpl
and
inc
test
fldenv
push
sbb
mov
and
ss
adc
and
sub
lods
test
dec
inc
mov
aam
inc
sub
out
test
in
mov
sub
stos
or
in
lea
cmp
jno
ss
adc
lret
mov
adc
out
inc
or
stos
or
in
loop
rcll
data16
aad
imul
or
in
inc
jp
sub
jl
dec
and
lret
pushf
rcll
in
push
je
pop
sub
div
xor
fdivl
popa
sub
dec
push
inc
fldcw
rclb
in
mov
mov
xchg
dec
enter
cli
cmpsb
xchg
lret
mov
lret
inc
jns
test
in
jmp
cmc
jb
push
arpl
mov
pop
cli
mov
xchg
ja
orl
sbb
cs
adc
add
jbe
adcl
mov
mov
xor
mov
xor
pusha
hlt
js
rorb
push
out
rorl
std
scas
call
sub
lock
ss
gs
dec
pop
cmc
or
dec
or
lcall
adc
xor
dec
jo
pop
mov
insb
push
add
sub
or
mov
pop
pop
popf
shrl
adc
outsl
in
pop
push
and
pop
enter
jmp
push
pop
cmpsl
xor
stos
in
pop
stos
inc
mov
cmc
mov
cmpsl
adc
mov
test
stc
xchg
rcrb
in
or
ficomps
push
mov
xchg
lcall
mov
jns
dec
sub
lret
or
dec
push
in
in
ret
test
in
cmp
pushf
stos
stos
add
loope
lahf
or
jg
xchg
sub
add
xor
fldl
pop
or
sub
mov
daa
dec
es
fdivl
fsub
notl
or
into
aad
pusha
jnp
sbb
test
jmp
outsl
cmc
or
in
adc
shr
sti
nop
fisubrl
jl
rorl
pop
mov
push
pop
in
add
xor
rolb
stos
push
test
push
mov
pop
ret
inc
xchg
xchg
ja
or
test
dec
loop
call
or
ret
test
jne
dec
xlat
or
mov
adc
mov
pop
dec
add
in
rcrb
popa
test
sub
push
or
fldlg2
pusha
pop
push
cwtl
les
call
inc
cmpsl
shlb
iret
hlt
scas
aam
mov
mov
xlat
out
push
xchg
or
rcll
fmull
into
stos
cmpsl
gs
es
cmp
shl
lds
lcall
lret
pop
cmp
ja
sahf
push
movb
inc
jo
in
sub
or
data16
xlat
rol
ret
out
mov
dec
int
and
fimuls
out
push
dec
inc
cmpsb
test
fimuls
fs
data16
jl
lock
mov
pushf
jmp
shlb
and
jg
sarb
data16
pop
xor
int3
or
gs
xor
mov
add
cmp
clc
pushf
cld
mov
roll
mov
lea
sbb
arpl
iret
add
jp
or
fsubl
or
into
test
adc
test
lods
jmp
fwait
sub
push
jp
mov
add
dec
xor
es
in
inc
in
dec
dec
testl
bound
adc
push
jae
out
out
dec
adc
stos
xor
sbb
mov
das
push
out
push
inc
or
js
js
filds
mov
push
pop
les
mov
push
pop
add
dec
std
js
sub
jnp
xchg
and
xlat
mov
adc
xchg
out
sbb
cmp
lahf
pop
pop
add
pop
pop
jp
cmp
shll
xor
lcall
push
adc
mov
mov
mov
push
arpl
mov
xor
in
mov
pop
repnz
dec
and
jmp
xor
add
sti
out
and
mov
repnz
movl
or
fstpl
je
sbb
lcall
loopne
or
mov
stos
pop
add
xor
loopne
stos
cli
jmp
xchg
pop
cmp
je
lret
push
cmpsl
jecxz
xor
xchg
in
rorl
push
pushf
test
sub
test
shll
xchg
or
mov
dec
mov
or
push
mov
addr16
testb
push
fistps
and
gs
scas
outsb
pusha
xchg
pusha
sub
jle
push
mov
movsl
mov
mov
lods
repz
mull
mov
add
sbb
lock
aaa
pop
lret
xlat
sbb
xchg
gs
add
mov
or
cmpb
mov
mov
mov
in
shr
frstor
xchg
shr
sbb
mov
adc
mov
and
mov
negb
sub
dec
cmp
je
or
je
mov
sti
hlt
xor
je
xchg
int
adc
js
pop
repz
imul
inc
mov
and
cs
fwait
xchg
jmp
cmp
mov
push
in
mov
pop
sarl
leave
out
jecxz
popa
pop
xor
jns
add
dec
mov
insl
fidivrs
mov
xor
test
movsb
xlat
out
in
aas
sbb
add
dec
jg
cs
mov
js
fadds
dec
push
out
lcall
loopne
int3
pop
ret
cld
in
in
out
xchg
lock
pop
xor
call
inc
rol
out
addr16
ja
cmpsb
fisubrl
mov
pop
adc
dec
push
shl
jecxz
or
clc
mov
enter
in
gs
cmp
sahf
lock
mov
xchg
flds
inc
ljmp
decl
arpl
shrl
sti
lock
lea
test
sub
outsl
stos
shl
sbb
mov
add
outsl
add
mov
lock
out
and
sarb
inc
rclb
fadd
add
repz
into
loopne
pop
gs
pop
mov
rolb
notb
ja
insb
out
cmpsl
and
data16
outsb
cmp
mov
negb
mov
hlt
nop
xor
mov
and
adc
cwtl
sbb
test
pusha
cmpsl
fisttps
or
xchg
call
in
inc
sahf
add
aad
pop
int3
push
mov
push
or
mov
nop
addr16
loope
sub
and
mov
in
xor
pop
xlat
dec
sbb
jp
inc
dec
mov
cld
aam
les
jl
es
sbb
insb
mov
clc
xlat
mov
sbb
inc
cmpsl
mov
mov
mov
xorl
rcrl
lods
ljmp
xchg
jp
and
inc
ds
int3
stos
inc
dec
in
mov
mov
leave
xchg
adc
xor
xor
je
jnp
sbb
ret
cmc
add
imul
fisubrl
nop
xor
push
and
push
mov
xor
enter
rolb
mull
cwtl
mov
fwait
xchg
imul
jae
div
mov
sub
sub
test
fdivrs
repz
std
out
shll
test
shll
adc
popf
shlb
mov
mov
jns
outsb
push
dec
fdivr
insl
hlt
jnp
dec
ret
cmp
add
inc
jle
xchg
mov
nop
test
fs
jl
xchg
in
xchg
cltd
xchg
sub
cmp
test
in
cs
fldenv
or
call
mov
or
adc
lcall
dec
lret
shl
scas
push
jg
sub
cmp
imull
cmp
cwtl
sahf
pop
push
fadd
ljmp
pop
ss
das
mov
sbb
or
add
xchg
add
nop
mov
pop
int
push
mull
xorb
push
fildl
aad
ljmp
push
mov
shlb
aaa
jg
xor
in
cmp
push
push
bound
cltd
jno
cmp
test
mov
push
aaa
outsb
add
insb
sarl
push
popf
sub
sbb
cmpsl
push
or
xchg
or
fsubrs
sub
pop
mov
filds
pusha
sbb
sub
pop
inc
cli
mov
jg
int
test
sbb
clc
xor
movsl
add
js
outsb
test
je
sarl
ljmp
fnsave
out
fisubrl
lret
or
iret
add
leave
stos
cmp
xchg
pop
inc
jmp
ja
je
push
dec
cmp
sub
push
adc
add
lock
pop
cli
xchg
hlt
aam
repnz
mov
ljmp
int
xchg
mov
je
mov
jne
sbb
jbe
test
gs
aad
dec
sbb
xorb
movsl
pusha
cmp
xor
jo
sub
inc
xchg
movsb
xor
leave
jne
mov
ret
lea
add
or
cmp
xchg
imul
and
dec
shl
xchg
out
xchg
xchg
adc
adc
outsl
stos
ret
icebp
lret
push
clc
mov
mov
ret
inc
adc
cs
xchg
push
and
cs
add
add
jbe
repnz
lret
sbb
enter
in
push
cltd
cmpl
dec
fsqrt
jbe
mov
iret
and
push
rcr
repz
int
mov
add
pop
lcall
mov
pop
mov
push
aam
addr16
mov
cli
ret
sbb
cmpsb
pop
lahf
pusha
pop
and
xchg
in
add
ret
neg
fstpt
cltd
popf
shll
mov
mov
in
daa
loopne
pop
in
out
xlat
mov
ds
xchg
outsl
je
stos
mov
cmp
push
sbb
ljmp
loop
movsbl
fst
mov
lea
push
jo
sbb
int
es
push
push
xor
aaa
or
xor
push
sub
sub
addl
fldt
hlt
fstp
sbb
out
xchg
dec
mov
xor
mov
mov
adc
cwtl
scas
jl
addr16
shrb
out
jmp
lret
mov
pop
lahf
cmp
adc
xor
in
notl
mov
mov
sarb
cmc
adc
cmc
lcall
daa
cmp
mul
or
adc
xor
sahf
xlat
popa
cmp
addr16
dec
mov
shlb
jecxz
or
mov
cwtl
inc
mov
fisubl
xlat
pop
mull
pop
push
movb
in
in
popf
cmp
mov
test
xor
fcmovne
loop
xchg
mov
mov
xchg
cmp
cmp
test
cmc
cmpsl
roll
jl
lds
cmc
mov
push
pop
je
frstor
xor
jmp
leave
ljmp
mov
je
cli
mov
ljmp
dec
and
jns
jo
cmp
mov
loope
adc
je
xor
or
jns
out
repnz
inc
ja
aad
cwtl
adc
jb
or
mov
push
xor
pop
cwtl
xchg
adc
test
rclb
fnstcw
lds
rclb
imul
or
dec
mov
inc
imul
insb
push
or
dec
inc
or
push
lcall
out
adc
mov
jns
into
mov
xchg
ret
fs
fmul
adc
sub
loopne
sbb
xchg
inc
rcrl
mov
lret
loope
pop
mov
push
mov
xor
js
aad
or
leave
inc
dec
ret
iret
jno
sbb
mov
jle
xchg
add
jno
and
push
repnz
mov
ret
mov
ljmp
dec
icebp
repz
sbb
xchg
and
aas
cmp
call
jp
lock
pop
dec
cmp
repz
int
sbb
lahf
gs
ficompl
insb
sbb
mov
bound
mov
les
xlat
lret
jmp
inc
jle
cltd
cmc
jp
into
movsl
mov
push
jne
mov
jl
loopne
and
test
ja
lret
push
xchg
cmp
mov
loope
xlat
mov
xchg
mov
and
jo
cwtl
fadds
repz
pop
inc
xchg
repnz
repnz
clc
cmp
inc
stos
push
add
xchg
sub
jmp
mov
push
roll
cmp
xor
mov
bound
out
jb
cmp
ss
ficompl
pop
jno
ret
and
pop
cmc
dec
ljmp
jns
xchg
iret
push
cld
gs
negl
push
pop
xor
pop
inc
cmp
sub
sti
xor
daa
aad
ss
outsl
stc
in
ror
adc
mov
or
xlat
les
addl
mov
adc
mov
pop
imul
decb
movsl
lock
mov
jno
push
lret
arpl
push
clc
mov
sub
shlb
icebp
lock
push
cmp
shl
scas
outsb
or
mov
fcomps
cwtl
in
out
dec
xor
jb
mov
jae
cwtl
or
cmc
ficoml
lds
iret
testb
mov
pop
or
jno
push
ret
jnp
jg
inc
mov
out
es
adc
ss
adc
inc
push
or
fsubrl
stc
pop
jg
xchg
ret
adc
es
jl
test
xorl
lahf
aam
and
or
out
cmp
inc
gs
sahf
jp
inc
jp
mov
add
inc
test
sbb
jp
loopne
and
xlat
in
movsl
or
es
dec
pop
cld
jo
mov
loop
clc
out
idivb
inc
push
inc
mov
fs
sti
and
pop
lea
pop
fstps
nop
cmp
xchg
sar
ja
adc
sbb
xchg
pushf
adc
jns
lods
jg
in
push
les
or
xchg
frstor
mov
in
sarl
in
cli
lret
inc
std
dec
mov
int
call
inc
lret
bound
loope
lret
pop
push
sub
nop
or
icebp
pop
out
enter
xchg
dec
sub
xchg
gs
mov
jo
sahf
clc
xorb
mov
inc
lret
lret
xor
jge
or
adc
pop
pop
sub
data16
cmp
test
arpl
and
xchg
push
jp
sub
adcb
es
daa
mov
outsl
aad
mov
repnz
stc
hlt
pandn
xchg
push
lea
fistpl
icebp
and
imul
push
lret
bnd
pop
mov
daa
data16
call
inc
xor
das
sbb
out
data16
insb
fdivs
mov
das
ljmp
movsb
cmpsl
adc
imul
imul
cmp
in
sbb
adc
push
jmp
imul
cli
xchg
cmp
popa
xlat
lods
xor
jb
cmp
aad
mov
addr16
xchg
jnp,pt
jo
xchg
jl
inc
inc
repnz
int3
test
loopne
js
xor
pushf
dec
movb
sarb
es
fisttpll
lods
jmp
fs
nop
rcrl
pop
add
scas
lcall
push
data16
hlt
adc
fistpll
addr16
dec
lahf
test
es
xchg
inc
inc
pushf
rorl
andb
sahf
es
fs
rorb
in
pop
mov
fcmove
push
out
gs
repz
les
mov
pushf
es
ljmp
in
inc
in
push
fcompl
push
jl
fwait
push
fcmove
movsl
les
xchg
jne
inc
and
incb
push
in
dec
add
out
in
fistl
andl
lods
scas
scas
test
nop
sbb
xchg
cmovp
jne
insb
lods
enter
sti
mov
dec
decl
mov
imul
mov
rclb
jge
or
int
les
cmpb
cmc
push
addr16
inc
cwtl
in
imul
cwtl
je
dec
hlt
xor
push
cmp
mov
cmpsb
inc
lcall
mov
pop
pop
sub
pop
push
sub
mov
push
push
stos
leave
imul
jb
push
inc
inc
ret
sarb
out
aas
xchg
test
int
aas
mov
out
gs
xchg
subb
rolb
lods
xchg
pop
jno
mov
outsb
mov
and
or
andb
xor
and
push
push
dec
fucom
mov
or
fcmovb
mov
jecxz
mov
lods
lret
xor
lret
cwtl
mov
and
jp
mov
aam
loopne
repnz
lcall
jge
aam
cmc
push
jl
fiaddl
lods
popf
mov
add
clc
gs
out
arpl
bound
lods
push
sub
sahf
push
dec
sahf
icebp
jmp
and
lret
jns
movsb
cmc
xor
sbb
stc
mov
sub
add
dec
rorb
std
xchg
gs
orb
mov
pusha
xchg
lock
aam
test
sbb
xlat
shlb
lahf
jb
xor
dec
dec
or
jae
gs
cmpsb
pop
fildl
xchg
mov
icebp
add
sub
sti
imul
ror
mov
in
mov
sub
fwait
xor
testl
testb
jbe
nop
mov
divb
gs
dec
lret
pop
lods
mov
inc
push
cwtl
xor
add
mov
xor
fisubrs
pop
mov
aaa
sbb
or
out
push
in
mov
daa
int3
mov
push
cmp
mov
cmpsb
std
add
cwtl
popf
or
call
mov
mov
dec
fmull
and
xchg
cli
movsb
sarb
cmp
leave
pop
pop
pop
sub
mov
xor
add
sbb
mov
cmc
xchg
cmpsl
insb
mov
jmp
pop
or
ret
pop
pop
and
inc
testl
loopne
cli
fidivl
scas
popf
xchg
jecxz
out
sbb
pop
sbbl
movsb
pop
or
jno
in
jmp
mov
sbb
fistps
fmull
arpl
dec
xor
jmp
inc
push
mov
jo
addr16
mov
cmp
dec
lahf
fprem
add
adc
xlat
outsl
cmpsb
xchg
adc
pop
insl
push
push
in
pushf
in
sub
jno
mov
out
out
insl
fmull
sbb
sahf
pop
inc
dec
jmp
lret
pop
hlt
sbb
xchg
aad
pop
or
pop
data16
push
jne
pop
inc
mov
jge
lds
scas
push
mov
mov
outsl
test
lcall
sarb
adc
mov
push
push
ret
mov
loop
cmc
cmp
in
call
ret
inc
cmovae
ficoml
sbb
test
in
test
fsin
mov
xchg
push
loopne
and
jg
push
pop
popf
push
les
fcmovnu
jg
dec
push
inc
sarl
scas
aad
aaa
int3
jno
sar
mov
leave
movsb
sbb
cmpsb
dec
mov
lret
dec
aaa
jge
dec
mov
push
xor
ds
dec
inc
cmp
xlat
xor
mov
test
pop
adc
popa
xchg
dec
push
out
add
mov
mov
movsl
dec
dec
nop
jnp
adc
lock
movsl
mov
mov
and
data16
sub
xchg
xor
fbld
jno
adc
pop
cmp
inc
mov
jne
data16
cmp
dec
hlt
jmp
aad
fdivr
fildl
daa
mov
ret
fcompl
sub
push
adc
fs
cwtl
test
and
pop
xchg
jl
sbb
repz
aas
or
out
xchg
xchg
ror
cmp
clc
cli
sub
xchg
gs
jecxz
pop
pop
call
xlat
cmp
dec
xchg
incl
clc
icebp
in
cwtl
inc
fimull
das
sahf
pop
rol
sbb
fcomp
out
and
inc
or
daa
pop
ds
pop
mov
mov
dec
lea
sahf
int
es
or
fsubrl
add
shrl
mov
jge
aaa
sub
mov
xorl
xchg
jbe
call
pushf
mov
sbb
sbb
aam
in
movsl
mov
orb
int3
sbb
out
xor
mov
rolb
cmp
xchg
je
lods
xlat
loopne
lods
nop
xor
mov
mov
mov
andb
mov
in
lahf
jno
mov
or
or
pop
jp
and
out
xchg
adc
xlat
imull
loope
gs
push
or
or
pcmpeqb
sbb
clc
fidivs
lret
pop
outsl
cli
clc
sahf
pop
leave
sub
mov
mov
xchg
je
loope
pop
sti
add
jno
cmpsb
cld
sbb
dec
into
outsl
xchg
je
mov
adc
cmc
or
jae
pop
call
sub
cltd
das
xchg
popa
push
adc
div
inc
call
sbb
inc
test
vaddsd
fstp
fadd
pop
popa
aas
xchg
rcrl
aad
scas
push
sbb
pusha
cli
imul
add
mov
popa
pop
sbb
cmp
or
aam
jp
popf
les
or
lret
stos
inc
ret
push
repnz
cmp
jmp
jnp
sub
sar
dec
fdivrl
jb
int3
add
into
mov
les
dec
sbb
shr
mov
orl
xchg
mov
orb
inc
repnz
rcrb
jne
inc
fadd
fsubrs
jecxz
pop
add
xchg
in
mov
movsb
fsubr
jecxz
cs
test
into
sbb
movsl
jne
adc
fcomps
push
fists
clc
cmp
faddl
or
pop
aad
xor
mov
ljmp
test
loopne
fsubs
pop
sub
pop
aad
xchg
pusha
out
pop
xchg
dec
sbb
sub
sarl
mov
mov
psrad
std
aam
pop
mov
dec
in
adc
pop
test
ja
dec
test
inc
int3
cld
sti
ret
adc
gs
int3
jo
pop
adc
push
cmp
mov
add
rclb
movsb
ljmp
aad
aas
or
push
add
cltd
push
call
test
ljmp
fcoms
and
inc
cmp
int
push
cmp
mov
mov
ds
call
xchg
dec
movsl
and
or
leave
outsl
push
rol
mov
xor
or
or
or
ljmp
pop
xchg
test
add
test
mov
dec
ds
push
mov
out
cmp
cmp
mov
cld
and
dec
xchg
paddsw
lcall
inc
nop
jno
inc
dec
adc
jbe
xor
ljmp
lds
adc
cmp
lds
jmp
lret
dec
das
mov
jb
or
cmpsl
mov
xchg
cs
shl
imul
sbb
aas
rolb
and
sub
fs
icebp
or
sub
sahf
jecxz
lcall
mov
aaa
mov
xchg
dec
test
push
adc
pop
aad
cmp
or
cmp
pop
fadd
aam
pop
movsl
test
nop
imul
mov
jmp
ljmp
pop
cli
neg
pop
mov
jnp
dec
ja
jne
pop
dec
pop
das
int3
push
imul
jp
pop
repz
movsb
mov
in
push
aaa
pop
xor
getsec
push
jmp
lahf
and
cmp
push
lods
sbb
or
xchg
fcomps
gs
repz
pop
jno
mov
mov
shlb
push
mov
in
std
lock
out
inc
adc
ja
outsb
and
outsl
cmp
dec
lcall
pop
cmpsl
cmp
mov
jbe
fisttps
add
rcl
pusha
lock
fiaddl
sbb
test
add
loope
sub
xlat
dec
cmp
gs
dec
gs
adc
mov
movsb
rclb
clc
ret
jo
iret
out
rcl
dec
dec
push
je
aaa
dec
inc
fs
mov
cmpsb
adc
sub
movsl
xlat
in
mov
push
jle
scas
sbb
cld
cwtl
lret
pop
sbb
add
lahf
scas
clc
xchg
repnz
fsubp
in
mov
int3
test
fs
add
pop
addr16
lock
sarl
cld
insb
xchg
and
fdivs
sub
out
test
mov
daa
inc
repz
jg
aaa
mov
push
mov
jno,pn
push
movsl
jl
lock
jno
and
ret
iret
mov
insb
cmp
xlat
bound
xlat
outsl
mov
popf
mov
pushf
out
mov
icebp
push
icebp
or
cmp
fcom
xchg
xor
adcb
jno
mov
int
call
cli
mov
nop
data16
pop
pop
xor
xchg
iret
and
pop
nop
lret
lcall
adc
xchg
xlat
notb
aam
decl
js
pop
mov
fisttps
jmp
gs
xchg
mov
xor
aad
mov
xchg
add
movsl
jg
lcall
adc
mov
jno
mov
cmpb
or
cs
adc
call
movsl
shlb
push
add
icebp
decb
mov
ja
mov
or
daa
mov
sbb
pop
fs
movsb
js
push
rorb
dec
mov
filds
mov
jmp
test
push
mov
imul
pop
inc
mov
xlat
push
pop
lret
mov
jecxz
push
sbb
pop
cli
shll
or
iret
mov
stos
in
or
mov
sub
cs
fwait
xor
testl
daa
scas
cmp
and
in
xor
dec
push
js
mov
loopne
or
sbb
arpl
xchg
test
mov
test
call
push
and
fidivl
mov
clc
sbb
jbe
fwait
pop
imul
inc
into
testb
negb
sbb
and
mov
mov
push
cmp
fsts
into
insl
icebp
cmp
and
js
outsb
xchg
cmpsl
aad
jno
push
jo
inc
gs
repnz
mov
pop
aam
jnp
add
les
out
in
xor
fs
icebp
lds
dec
xchg
data16
inc
push
shr
lret
pop
es
push
mov
mov
add
dec
mov
aad
out
aaa
icebp
push
call
es
stc
and
nop
sbb
cmp
lret
jae
cmp
ds
jne
pop
lock
lahf
mov
cmp
lds
and
push
in
test
sbb
mov
out
dec
outsl
js
sbbb
or
fwait
push
addr16
dec
stc
stc
inc
xorb
adc
clc
mov
dec
inc
xlat
jae
xchg
dec
mov
data16
popf
cld
hlt
mov
xchg
repnz
pop
ret
mov
jmp
xor
test
push
jmp
repz
ret
xorl
or
scas
mov
sub
aad
ficomps
xchg
adc
sahf
sub
fcomps
mov
call
in
hlt
add
sti
clc
mov
push
sub
push
dec
outsb
add
call
mov
ljmp
adc
xchg
jns
loop
mov
adc
movsb
jle
insb
je
xchg
add
mov
out
mov
jo
xor
sbb
cmp
sbb
lret
mov
dec
push
cmpsl
test
sahf
ljmp
push
lahf
outsb
test
scas
cwtl
test
xchg
or
mov
inc
jl
add
cmp
decb
ds
xchg
push
inc
int3
ficoml
fldt
xor
into
aad
xor
push
pop
movsl
adc
nop
xchg
sbb
mov
fistps
arpl
repz
and
call
mov
inc
mov
imul
lret
xor
mov
cmp
mov
dec
adc
cmp
in
cmp
xchg
cltd
jp
inc
mov
aam
imul
rolw
fs
cmp
mov
or
and
push
bound
cmp
test
push
jecxz
fmul
xchg
jns
pop
lock
mov
call
mov
lcall
repnz
loop
in
xor
sbb
mov
push
enter
mov
and
xchg
popf
sahf
xor
xchg
xlat
or
lcall
ds
xchg
es
jno
cmpxchg
adc
pop
cld
xorb
fisubs
test
bound
lea
daa
ljmp
cwtl
xchg
roll
mov
xor
mov
fcompl
cwtl
mov
add
cwtl
outsl
shl
in
test
clc
cmpsl
dec
aam
loopne
jns
bound
gs
rorb
sbb
xor
int
stos
mov
notb
dec
repz
je
dec
inc
inc
inc
sbb
gs
mov
lret
divb
cmp
pusha
shrb
lea
mov
imul
pop
mov
shlb
jne,pt
and
mov
push
fsubs
mov
adc
push
push
inc
sbb
xchg
jmp
aas
sbb
imul
pop
clc
inc
mov
or
or
adc
jle
ljmp
stc
sub
outsb
cwtl
pop
cmc
pusha
clc
nop
xor
les
gs
sbb
pop
mov
aas
test
negl
push
mov
popa
cwtl
xchg
xchg
stos
dec
cs
inc
cwtl
or
shll
cmp
out
nop
aam
sahf
imul
xor
adc
addr16
cs
aad
pop
lahf
rorb
sub
popa
cmp
stos
mov
mov
bound
xchg
pop
out
mov
loopne
scas
jno
cmp
sbb
xchg
push
jp
mov
mov
mov
mov
outsl
inc
gs
dec
cmp
add
push
sub
ljmp
pusha
aas
inc
and
cmpsb
adc
movsb
clc
movsl
mov
jo
cmpsb
mov
rclb
inc
xorb
jle
aam
push
or
and
adc
push
mov
stos
mov
sarl
inc
xlat
lods
sbb
push
cmp
in
dec
mov
mov
and
xor
pop
xchg
cwtl
push
xor
jb
push
pop
aad
add
fdivrs
jl
cwtl
and
xlat
inc
mov
cmp
out
pop
scas
pusha
dec
jb
xchg
js
lret
mov
dec
pop
or
adc
leave
dec
inc
mov
ja
push
repnz
shrl
jle
cmpsb
add
and
pop
movl
xchg
adc
lea
js
call
es
aam
or
es
push
movsl
push
jbe
push
mov
push
mov
mov
lahf
jb
adc
or
push
in
das
lcall
jno
jo
add
in
inc
adc
in
insb
mov
dec
jo
fistpl
jo
in
cmc
mov
in
mov
push
xchg
aad
push
in
and
lods
out
lret
sub
push
cwtl
pop
push
out
es
sti
push
js
lahf
xchg
mov
fnstenv
in
push
pop
mov
sub
out
xchg
pop
lcall
jl
sarb
mov
jne
movl
dec
lods
cmpsb
push
in
xor
jo
in
mov
mov
xor
cmp
aas
popa
or
mov
adc
jmp
fdivrs
inc
lcall
and
mov
push
out
call
out
mov
test
jo
in
sbb
mov
inc
dec
int
cmp
push
lret
cwtl
push
in
cmpsb
lret
jns
or
scas
repnz
movl
adc
xlat
adc
cmpsl
pop
xchg
dec
push
sub
sahf
or
gs
in
adc
data16
stos
push
loopne
dec
pop
and
adc
xchg
push
clc
std
fisttpll
and
sbb
xor
in
mov
jnp
mov
gs
inc
cmpsb
and
push
or
int
adc
adc
sbb
addl
mov
jp
mov
insb
scas
in
fs
cmp
lods
inc
adc
dec
pop
cwtl
in
add
test
mov
or
lret
mov
dec
rorb
lahf
in
dec
cmc
leave
movsl
sub
in
jne
pop
imull
aad
adc
data16
or
xor
xchg
les
mov
ds
sbb
or
or
test
dec
dec
xchg
xchg
pushaw
add
xchg
int3
nop
xchg
jle
out
sub
test
loop
cmpsb
dec
fmuls
clc
int3
ja
xchg
mov
or
add
push
leave
clc
lcall
stos
push
xchg
or
or
gs
xor
pop
and
push
inc
int3
int3
push
mov
fs
jmp
mov
mov
ljmp
cmp
stc
push
or
xlat
mov
in
mov
push
insb
in
dec
xor
scas
in
loopne
lods
pop
dec
in
imulb
mov
fsub
in
call
mov
int3
enter
mov
mov
mov
xlat
lcall
cmpb
cmp
xor
mov
jmp
es
test
icebp
out
pop
dec
fs
out
aas
lcall
sbb
xor
aaa
jne
icebp
cmp
sbb
push
lcall
out
daa
in
xchg
mov
in
inc
add
rorl
sbb
fcmovb
cmp
lds
push
adc
cwtl
push
mov
pop
inc
and
xlat
dec
arpl
aad
arpl
orl
aas
idivb
lods
sub
addl
iret
mov
pushf
gs
aad
in
add
and
out
mov
dec
lods
addr16
es
xchg
cltd
inc
loopne
addr16
lcall
jo
jle
aas
addr16
cmp
fstl
test
call
lods
into
mov
into
or
outsl
int
loope
mov
mov
shlb
ret
adc
mov
push
imulb
xchg
cmp
test
ljmp
fwait
out
jne
ss
xchg
rorb
xchg
mov
in
lods
inc
dec
cmp
sbbb
adc
fbld
idivb
and
aas
fiadds
mov
test
rorl
sar
rolb
int
push
hlt
cwtl
dec
cmp
jnp
pusha
dec
or
push
fcomps
lods
xchg
fcomps
mov
jecxz
add
pop
push
mov
aad
into
push
jno
out
push
xchg
and
fsub
push
stos
mov
cmp
jns
sbb
setge
je
aam
out
add
pop
push
add
jmp
popf
mov
jae
cmp
dec
sbb
stc
add
adc
and
or
fdivp
sbb
adc
and
fbstp
push
mov
mov
fdivs
shl
ljmp
sub
dec
xor
dec
loop
popa
mov
push
stos
fdiv
and
out
mov
sub
repnz
inc
jo
mov
pop
xor
inc
jae
xchg
stos
or
out
add
jne
push
loopne
mov
push
call
sbb
jge
lret
shll
or
add
sub
andl
sar
lods
mov
push
cwtl
sar
xor
mov
mov
enter
mov
dec
sub
ss
fsubs
jne
lea
dec
jo
adc
in
iret
dec
call
rcl
hlt
std
push
movsl
bound
out
cmp
pusha
jno
rorb
in
or
push
stc
idivl
js
mov
xorb
mov
cmp
in
popf
cmp
incl
and
jl
ljmp
pushf
jnp
push
mov
jl
notl
cs
jecxz
jp
add
push
dec
fdivrl
mov
lea
pop
cld
xchg
and
inc
inc
sbb
and
pop
xchg
cmp
repz
pop
stos
jg
or
insl
push
jmp
push
jno
cmp
push
rclb
testl
cmpsl
bswap
mov
in
fmuls
jo
xchg
push
roll
push
loop
pop
pop
divl
dec
xchg
mov
stos
xorb
push
sub
fsubs
cli
mov
cli
ljmp
aam
pop
pop
inc
sbb
pop
cmpl
lock
lock
in
sti
hlt
sbb
addr16
xchg
add
aas
sbb
int
mov
decl
or
xchg
xlat
clc
insl
pop
cli
data16
mov
xchg
or
idivb
mul
test
mov
push
lcall
push
pop
cmpsl
mov
popa
adc
decb
test
insb
cmp
dec
cli
scas
scas
sub
test
icebp
push
out
outsb
paddb
adc
add
call
fcomp
adc
pop
cs
xchg
sbb
out
dec
scas
lcallw
outsb
hlt
in
add
in
scas
sbb
pop
call
jb
push
add
ljmp
ljmp
lret
adc
pop
stos
xchg
push
js
lahf
clc
push
sarl
pop
lahf
push
mov
sbb
jo
and
stc
jmp
out
push
cmc
sbb
movsb
insl
xor
mov
inc
add
mov
jmp
sub
cmpsb
push
sbb
adc
push
out
push
mov
dec
xor
mov
mov
lods
insl
into
and
ret
or
leave
push
loop
mov
test
push
iret
icebp
adc
mov
xor
mov
xor
outsb
xorl
jb
sbb
jbe
and
inc
hlt
pop
push
or
clc
pushf
add
rcl
cltd
mov
cmp
icebp
cmp
adc
adc
ror
addl
add
mov
sbb
xor
mov
mov
adc
addr16
sub
in
pop
sbb
lock
fsubp
ljmp
fimull
mov
std
adc
jp
push
data16
rorb
into
test
hlt
xor
fsubrl
fstpt
pop
cmp
add
xchg
scas
icebp
gs
push
inc
pop
or
add
rorl
iret
mov
mov
mov
ljmp
data16
add
mov
mov
sub
imul
jae
pop
in
mov
sub
ljmp
and
dec
mov
iret
and
pop
lret
pop
imul
mov
fistps
cld
mov
sub
xchg
xchg
cmpsl
pop
jno
xchg
test
pop
lods
cld
fcompl
xlat
movsb
call
movsl
or
pop
out
xchg
test
lods
and
push
push
pop
jns
xor
cmp
imul
fsts
add
adc
pop
cmp
xchg
add
mov
in
test
pshufw
xchg
xlat
add
pusha
mov
lcall
add
imul
loop
sbb
movsb
shlb
nop
mov
jnp
dec
fldt
imul
inc
mov
out
nop
lds
mov
insb
je,pt
mov
loopne
addb
aam
and
test
hlt
nop
and
repnz
mov
out
jle
pop
imul
cmp
cmp
inc
shl
xor
or
push
insb
xchg
gs
lcall
push
test
cwtl
bound
test
pop
mov
sbb
in
xchg
cld
sub
cmp
and
jbe
insb
aam
popf
xchg
popf
loopne
cmp
loop
ja
jno
cli
in
daa
pushf
sbb
hlt
mov
clc
scas
or
jmp
incl
das
cmp
push
xor
fwait
test
push
mov
test
adc
out
shr
jmp
mov
insb
sbb
pop
add
add
out
jp
fs
fsubl
lret
ret
out
push
mov
movsb
mov
xchg
xor
fisubl
push
in
cltd
inc
jp
cmpsl
cmpsb
fcomi
mov
cmp
and
movsb
lret
aad
lcall
jmp
adc
fcmovb
fs
je
inc
push
xchg
shrl
or
lcall
jecxz
jmp
fs
das
or
rcrb
test
mov
in
add
popf
rcll
loopne
ljmp
sbb
mov
outsb
in
fdivrl
sbb
leave
ljmp
dec
data16
push
add
fwait
out
call
call
mov
push
sbb
repz
mov
inc
mov
xor
rcll
mov
push
xchg
sbbb
xchg
jmp
loopne
imul
mov
and
mov
test
ljmp
xchg
rcl
outsb
xor
test
xchg
out
data16
or
fcoml
sub
mov
inc
push
and
clc
pop
cli
out
push
push
or
js
addr16
jg
xor
and
mov
cmp
add
fdivl
out
or
in
fcomps
loopne
cmp
mov
push
or
xor
leave
out
test
bound
les
sbb
loopne
stos
and
repnz
daa
icebp
imul
into
pop
clc
dec
jb
fdivl
stos
gs
push
enter
movsb
loope,pn
inc
jmp
imul
push
and
add
ficompl
cmp
xchg
ljmp
mov
jbe
enter
pop
mov
pop
mov
xchg
gs
shlb
xor
mov
push
xor
and
orb
das
dec
ja
addr16
adc
cld
lods
mov
push
xor
dec
je
out
push
popf
mov
sub
and
pop
cmp
cmp
jae
jo
sub
mov
push
xor
or
pop
sbb
outsl
add
sarl
mov
gs
arpl
mov
aas
hlt
xor
hlt
mov
clc
sbb
pop
xlat
shlb
outsl
cmp
xchg
sbb
pusha
sar
mov
test
mov
movsb
leave
ret
scas
je
mov
out
js
leave
insl
and
aad
rcrb
dec
cmp
sbb
int3
iret
lahf
cmp
push
clc
dec
call
jecxz
push
push
addr16
mov
shlb
sbb
ljmp
cmpsb
push
negl
fcom
pop
inc
inc
lret
inc
xor
xchg
cmovp
sbb
push
cwtl
mov
sbb
sbb
and
push
repz
outsl
in
stos
rolb
cmpsb
fnsave
sub
push
xor
push
jmp
cwtl
addr16
sub
xchg
lock
shl
mov
mov
sub
out
and
sbb
gs
inc
in
loope
add
loopne
aam
movb
gs
daa
in
shl
pop
jle
gs
cmc
xor
sbb
sub
xchg
ds
jmp
pop
test
dec
push
mov
xchg
adc
fdivs
jno
mov
xchg
mov
loopne
add
mov
je
out
pop
xchg
pushf
dec
mov
cmp
sbb
pop
jae
push
fwait
cld
add
leave
sbb
insl
in
xlat
icebp
insl
stc
mov
cmc
sti
xchg
cmpsb
mov
mov
xor
sub
movl
aad
xchg
insl
and
adc
pop
dec
fisubs
or
hlt
ret
shrl
gs
nop
or
cmp
in
inc
out
mov
mov
nop
ljmp
sbb
cli
pop
jmp
lret
or
fadds
not
add
sbb
clc
lods
jmp
leave
pop
sbb
in
lock
mov
aas
jns
sbb
push
dec
mov
cmp
push
jge
loopne
mov
jge
les
pop
je
int3
dec
mov
sbb
jae
xchg
out
cmp
dec
fisubs
ljmp
fwait
jne
not
or
hlt
lods
dec
jmp
aaa
into
mov
push
cwtl
dec
ds
iret
xchg
in
jp
scas
xor
mov
add
dec
fbstp
popf
mov
dec
and
jb
jmp
gs
mov
insl
mov
xor
xchg
push
xchg
sbb
adc
adc
ret
adc
std
jae
insl
stos
hlt
mov
mov
rcll
aad
sub
lahf
icebp
call
stos
mov
nop
mov
pop
jecxz
jno
mov
and
mov
negl
shlb
ja
xchg
fucomi
loope
mov
pop
pop
jl
mov
and
daa
add
insb
jo
cwtl
dec
and
and
and
int3
or
push
mov
push
mov
stc
jno
sub
test
adcl
add
mov
inc
xchg
rcrb
push
sub
movsl
xor
jae,pn
test
jmp
sbb
or
pop
jmp
dec
pop
jo
add
sbb
xor
insb
inc
shlb
inc
pop
mov
arpl
adc
sbb
ret
orb
cmc
js
call
outsl
pop
aam
mov
gs
fcmovnb
push
lods
ficoml
pop
sbb
pop
dec
cli
adc
adc
pop
fsubrl
popa
sbb
adc
outsl
lahf
mov
test
mov
mov
push
out
stos
ret
mov
push
jmp
stos
clc
push
xchg
cwtl
mov
pushw
mov
jnp
jae
push
sbb
rcrb
out
shlb
gs
mov
out
xchg
mov
inc
je
mov
test
in
xlat
ret
push
aam
mov
popf
pop
int3
jb
sbb
mov
incl
shrb
aad
xlat
out
les
push
jp
mov
daa
imul
fdivs
stos
jg
xor
adc
jbe
bound
nop
repnz
cmp
cmp
or
clc
push
mov
and
push
scas
sbb
pop
fimull
cmp
mov
mov
fsubp
pop
lods
nop
ficompl
sbb
cmp
dec
adcl
or
cmc
xchg
lahf
cmpsb
insb
and
imul
cmp
push
sarb
aam
jno
or
add
sbb
imul
test
leave
mov
pop
jae
mov
jmp
int3
sbb
mov
sbb
test
gs
dec
mov
ljmp
lock
xor
pop
dec
mov
test
popl
negb
mov
pop
leave
les
and
stos
jnp
stos
push
lock
test
mov
mov
loopne
sbb
int3
mov
dec
and
xchg
xchg
sbb
mov
xchg
call
or
insl
cmp
clc
lea
aaa
mov
fidivs
lods
add
dec
mov
mov
in
aam
insb
sbb
loope
or
adc
lret
dec
dec
cltd
adc
mov
sti
push
je
inc
lahf
add
iret
imul
mov
iret
imul
sbb
int3
aaa
out
testl
inc
addr16
mov
nop
sub
insb
lahf
mov
xchg
lods
or
rolb
cmp
mov
in
fbstp
pop
cmp
sub
test
loop
jmp
outsl
lods
lds
mov
xlat
mov
rorb
cwtl
gs
lahf
insl
or
mov
mov
scas
cli
iret
cwtl
leave
xchg
xlat
xchg
jecxz
mov
iret
pop
sbb
fisubrl
pop
jl
clc
test
int3
lret
inc
das
push
icebp
daa
inc
lea
add
and
test
clc
ds
repnz
or
xor
btr
mov
into
push
push
insl
mov
cmp
movsb
nop
movsl
pop
scas
les
insb
push
mov
push
mov
mov
cmp
push
jg
xchg
fadd
lock
imul
scas
mov
or
mov
mov
in
lods
clc
fcoms
fists
cld
or
mov
sub
lret
or
and
xchg
dec
test
ja
mov
out
lods
mov
imul
or
mov
push
in
xor
xlat
in
pushf
clc
pop
in
pop
out
mov
or
in
fistpl
add
push
dec
or
aas
mov
mov
in
mov
mov
adc
or
push
in
adc
jmp
int
pop
jg
add
inc
adc
sub
push
add
test
jns
and
xor
sub
adc
mov
in
or
lret
jmp
aad
sub
ss
or
pushf
imul
mov
xor
out
pushf
cli
ret
hlt
scas
test
call
sbb
xlat
cmp
mov
insl
das
adc
inc
imul
lea
mov
dec
les
call
sub
movsl
cwtl
hlt
iret
scas
in
jnp
stos
cmp
pop
push
addr16
sub
test
mov
popa
xchg
call
idivl
mov
in
mov
push
daa
add
add
add
inc
mov
test
mov
addr16
pop
mov
pop
scas
iret
and
mov
sub
xor
loopne
stos
addr16
inc
out
je
clc
cwtl
sub
jno
loope
or
cmpsb
lods
in
dec
and
push
mov
iret
in
push
testb
shr
mov
pop
in
and
div
stos
int
in
mov
pop
stc
or
in
pop
test
pop
pop
mov
push
mov
xchg
add
into
daa
in
scas
ret
rolb
sub
in
inc
call
out
out
out
dec
imull
xchg
test
movsl
iret
in
cmpsl
in
mov
or
inc
clc
push
shl
mov
mov
andb
jecxz
or
decb
dec
loopne
int
and
cltd
es
push
mov
mov
int
sub
xchg
push
sub
cwtl
clc
mov
mov
sahf
decl
ror
mov
ficompl
dec
inc
pushf
es
lahf
mov
xor
inc
aam
mov
nop
frstor
hlt
and
ds
sub
mov
in
push
loope
cld
xchg
rorb
pop
mov
out
push
xchg
mov
add
sub
mov
mov
gs
dec
xchg
push
sub
pop
pop
pop
mov
cmpsb
push
movsb
mov
jmp
stos
or
sub
lds
inc
add
xchg
aam
pop
lahf
xchg
xor
enter
repnz
xchg
int
sub
movsl
ljmp
push
lahf
add
out
add
sbb
jl
push
push
xor
xor
clc
pop
adc
call
hlt
cli
sbb
mov
mov
shlb
jg
lcall
in
push
cmp
xrelease
hlt
mov
mov
add
fbld
in
out
xchg
and
jne
movsb
and
imul
scas
inc
data16
cmc
xor
lret
lods
ret
mov
push
push
repnz
push
mov
test
aaa
dec
xor
clc
dec
cmp
jmp
mov
pop
mov
pop
push
loopne
mov
mov
mov
fnstcw
dec
cmp
outsb
and
cmp
push
add
push
fsts
xchg
fldenv
xchg
int3
addr16
mov
fbstp
iret
dec
adc
add
push
loopne
das
cli
mov
pushf
mov
movsl
push
repz
pop
push
loope
jno
imul
es
xchg
in
xlat
mov
xchg
bound
iret
jg
jns
fists
sub
add
movsl
je
xor
mov
ficompl
repnz
or
adc
lods
mov
adc
pop
sub
pusha
test
fildl
dec
dec
out
bound
out
fs
in
leave
jmp
cmp
mov
jns
mov
out
sub
sbb
and
push
xor
xor
sarl
fcmovnu
ljmp
in
mov
sbb
ret
js
loop
sub
or
out
cli
pop
dec
aad
mov
nop
call
mov
inc
push
data16
inc
mov
cwtl
mov
les
jnp
arpl
or
loopne
popf
mov
int3
outsl
js
xor
xor
pop
mov
fldenv
popf
inc
pmuludq
mov
int3
xchg
and
xor
addb
loop
testb
lret
ds
clc
dec
mov
mov
fisubrs
je
or
or
fwait
cmpsb
cs
out
mov
lcall
and
scas
scas
pushf
je
xor
je
imul
iret
nop
addr16
mov
loop
ljmp
adc
fcomps
lods
lcall
pop
jg
repnz
movsb
pop
pop
fldl
dec
add
clc
cmp
jb
dec
add
shll
add
and
cmpsb
lea
fiaddl
imul
cmpsl
push
loop
rolb
mov
in
jne
rcr
ret
test
test
movsb
mov
cld
jmp
jle
dec
out
cmp
fiadds
push
jbe
push
nop
cmp
test
and
xchg
sub
or
push
aad
mov
sbb
je
lock
pop
mov
sbb
add
or
nop
push
sbb
pop
jl
push
hlt
mov
lock
movsl
in
ds
mov
jmp
jmp
mov
xchg
pop
or
pop
sbb
je
lods
icebp
mov
nop
clc
popf
pushf
cmp
sub
sbb
jo
pop
mov
sahf
mov
jl
mov
mov
sbb
or
cli
ja
test
cmp
dec
xchg
and
adc
sbb
add
sub
ret
cmpsb
test
mov
mov
mov
sub
and
jno
xchg
dec
outsb
rcr
or
fsubs
mov
jo
ljmp
in
imul
les
mov
js
int3
xchg
lret
sbb
sub
cmp
cmp
cltd
and
dec
sub
and
icebp
test
xor
inc
cltd
sub
dec
xchg
idivb
loop,pn
test
int3
fisubl
xor
rcr
dec
repnz
cmp
insl
imul
repz
gs
sbbl
push
mov
xor
pop
mov
loopne
scas
mov
dec
out
fs
jno
test
mov
mov
sbb
pop
subb
shlb
shr
xchg
lret
aaa
lret
es
xor
cmp
cld
jecxz
dec
lcall
mov
es
imul
nop
mov
test
xchg
test
dec
xor
push
mov
pop
or
xlat
pop
adc
push
jae
mov
jo
mov
cmp
rolb
cmp
mov
insb
addr16
mov
mov
mov
and
cmp
test
inc
movsb
ljmp
gs
mov
mov
mov
cs
mov
movsl
inc
dec
insb
dec
in
iret
into
pushf
imul
add
fistpll
adc
test
sbb
ljmp
int3
imul
dec
mov
pop
das
adc
sub
cwtl
adc
dec
repz
mov
outsl
insb
in
fldt
pop
add
sub
orb
pop
sahf
inc
enter
aaa
out
nop
jle
imul
arpl
adc
call
outsb
arpl
gs
and
sbbl
and
call
mov
hlt
sub
loope
movsl
push
or
aam
xor
push
mov
jle
mov
add
cs
mov
mov
subb
push
repnz
fdivr
sbb
jo
imul
jno
push
mov
aas
pop
dec
push
mov
or
negl
aaa
cmp
fidivs
sbb
xchg
flds
popa
in
fistl
push
adc
push
add
test
jmp
ja
mov
mov
dec
xchg
hlt
in
rcrb
or
mov
cmpb
das
pop
fcomps
mov
jo
dec
or
cmc
cmc
push
or
sti
imul
test
jbe
mov
cmp
sahf
in
xchg
ret
addb
decb
addr16
mov
lahf
pop
mov
addr16
scas
dec
outsb
and
scas
rcll
dec
fisubrl
mov
ljmp
insl
out
mov
push
sub
aas
sub
aas
sarl
test
mov
push
mov
scas
push
mov
fdivrp
jmp
mov
or
stos
cld
enter
mov
pusha
out
jb
xchg
sahf
mov
sti
ja
fdiv
and
inc
insl
pop
cmp
pusha
jmp
mov
sarb
inc
mov
imul
repnz
cwtl
repnz
test
cli
pop
mov
jo
and
out
mov
pop
add
fldt
xchg
cltd
or
in
or
out
mov
pushf
xor
fsubrs
hlt
mov
aaa
out
cmc
cmp
or
leave
pop
mov
mov
fldenv
or
mov
mov
js
mov
insb
pop
mov
sti
addr16
adc
xor
push
mov
push
repnz
cwtl
lret
loopne
mov
push
stc
lahf
mov
xor
inc
iret
pushf
push
lret
cmp
rcr
imul
jmp
fbstp
push
inc
xchg
cmp
pusha
mov
adc
mov
stc
cmp
in
mov
orb
inc
cmp
sub
fmuls
dec
pop
in
mov
cmp
js
fldl
push
xor
push
sbb
fists
cmp
sbb
loope
push
ret
mov
add
out
pop
xchg
aas
movsb
shlb
adc
push
jg
and
jno
lods
xchg
lock
lret
xor
mov
int
xchg
lret
mov
nop
out
xchg
pushf
mov
mov
push
cmpsl
in
cld
ljmp
push
mov
push
lcall
orb
sbb
mov
sub
aad
dec
pop
inc
mov
outsl
pop
inc
mov
gs
dec
movsb
js
push
jbe
xchg
dec
lret
leave
pop
repnz
xor
and
cmpsb
push
push
mov
adc
sbb
pop
inc
mov
mov
test
jo
lcall
ret
mov
cmp
hlt
fisubs
int3
mov
mov
cmp
and
je
lods
and
out
sbb
clc
push
nop
jp
pop
xor
insl
stos
or
in
dec
int3
mov
sub
nop
jno
mov
rolb
clc
or
mov
dec
loop
shl
mov
dec
jle
sub
lods
cld
outsl
jne
xor
movsb
aam
jmp
aaa
mov
pop
test
pop
fwait
xor
lret
jge
outsb
jns
jne
out
jg
daa
pop
sti
adc
pop
push
data16
call
out
and
and
inc
lret
pop
aas
int
scas
sub
pop
cmp
outsl
jmp
idivl
sti
add
fidivs
nop
fcoms
cmp
insb
and
jne
sub
mov
cmp
xchg
gs
in
cwtl
xor
cmp
repz
scas
inc
into
lret
jns
je
sbb
xor
enter
lock
xor
sub
inc
xchg
add
adc
mov
push
aam
adc
jns
sub
and
dec
pop
adc
mov
sbb
xchg
adc
shlb
mov
insl
in
mov
je
gs
es
mov
in
xchg
fsubrp
inc
ret
xor
hlt
xchg
rorl
jg
inc
cmp
mov
pop
and
lods
mov
xchg
clc
int
jae
xor
rorb
push
xor
xor
xchg
pop
popf
inc
imul
xlat
adc
ss
mov
inc
jno
cmpsl
aas
test
pop
js
lahf
pop
or
xor
mov
cs
or
or
xchg
dec
mov
and
xor
jbe
clc
push
stos
shll
in
negb
int3
ret
les
mov
ret
pop
fmulp
div
jmp
mov
push
iret
repnz
mov
iret
test
in
repz
int
mov
mov
jge
dec
xchg
imul
add
rsqrtps
pop
les
lret
xchg
push
lret
ret
add
push
mov
lods
imul
push
lea
pop
mov
adc
iret
push
fwait
icebp
stc
xchg
pop
repnz
xchg
out
lds
dec
xchg
cmpsb
cs
clc
lods
aam
fdivl
xchg
ret
je
cmp
push
loope
das
jle
mov
mov
mov
mov
jle
imul
mov
sub
cmp
push
in
arpl
push
rcr
fs
daa
mov
xchg
rol
push
jne
repz
pop
mov
sahf
mov
inc
mov
cmpsl
xchg
mov
outsb
into
cli
jo
test
shrb
clc
sbb
int
mov
insb
jae
movsb
xchg
call
push
jecxz
xor
scas
jnp
jns
popf
mov
push
clc
adcb
push
stos
and
aaa
fsubr
idivb
lret
lea
test
xor
mov
mov
xchg
sbb
pop
lret
movsb
in
inc
divb
mov
lods
cli
fimull
js
adc
sbb
push
pop
add
pop
dec
shrb
inc
lods
jne
mov
push
call
add
mov
cld
pop
mov
lock
aaa
sbb
mov
push
mov
sub
out
push
inc
int3
rolb
cmp
ret
jmp
jmp
dec
or
out
pop
rorb
inc
jecxz
addr16
cmp
icebp
gs
cmp
js
aad
dec
pusha
mov
rorl
out
jle
rclb
js
inc
sub
mov
fidivrl
sbb
xor
lods
in
clc
out
sahf
sub
jno
mov
insb
rclb
movb
jmp
pop
cmp
mov
inc
out
pushf
or
jp
fnstcw
sbb
inc
add
je
mov
pop
xchg
clc
mov
imul
sub
jbe
mov
gs
hlt
sbbl
mov
ret
mov
call
pop
fs
pop
push
xchg
por
popa
inc
dec
stos
pop
movsb
lret
and
xchg
xor
repnz
scas
and
clc
push
imul
pop
call
add
in
fcmovbe
or
data16
sar
mov
stos
out
push
xor
cmpsl
scas
les
incl
fmull
xchg
rcll
sbb
pop
mov
dec
scas
mov
xchg
iret
xchg
sbb
xchg
test
call
jecxz
aad
aaa
js
ljmp
mov
mov
dec
fdivr
inc
aas
dec
push
rep
cld
xlat
inc
xor
or
push
push
insb
dec
and
jbe
repnz
sbb
xchg
test
add
push
out
mov
test
pop
jge
int
lret
lock
add
sub
rorb
fdivrs
sub
mov
fiaddl
or
sbb
and
mov
cmp
lea
jge
inc
shlb
fidivrl
je
jns
inc
es
jg
push
adc
jae
call
imul
push
loopne
iret
jl
and
stos
std
add
pop
mov
mov
pop
cmpsl
dec
bnd
fldt
les
mov
sub
fidivl
in
xchg
pop
push
dec
aas
xchg
pop
or
xor
mov
bound
jp
dec
iret
dec
repnz
in
cmp
jmp
in
clc
push
jbe
divl
cmp
pop
je
inc
sbb
mov
loopne
int
jbe
out
stos
pushf
mov
pop
fisubrs
aad
push
pop
lcall
xchg
fbstp
inc
fcom
ficoms
cwtl
mov
sahf
movsb
or
push
dec
insl
test
mov
cli
jb
inc
sbb
imul
into
xor
jg
adc
mov
pop
outsl
mov
addr16
stc
jno
xorb
imul
mov
nop
or
mov
or
cli
rcrl
sbb
in
ljmp
dec
leave
insl
in
xchg
pop
dec
cmp
inc
imul
insb
or
out
sbb
lahf
das
and
in
sbb
fsub
mov
sub
jno
mov
push
mov
sub
aam
not
lods
xor
scas
jae
test
xor
jp
mov
repnz
fsubrs
inc
xor
test
std
jge
aas
xor
scas
sbb
mov
jmp
jl
shrb
les
pop
xchg
addr16
jne
mov
nop
sbb
adc
push
insb
mov
stc
sahf
gs
mov
dec
jge
sbb
data16
iret
cs
push
cltd
fnstcw
push
mov
push
std
ljmp
aas
in
sub
hlt
mov
push
divb
fsubr
icebp
mov
mov
ret
inc
bound
sbb
andb
xchg
fsubr
dec
xchg
fwait
dec
xchg
inc
lcall
nop
pop
push
cli
fiaddl
pop
pop
pop
jmp
ljmp
loopne
gs
cmp
je
lds
aas
and
add
addr16
pop
inc
imul
push
dec
jl
not
sub
mov
xchg
xchg
sbb
cs
xchg
jo
mov
clc
push
jmp
add
fnstsw
cmpsb
out
inc
movl
push
outsb
idivl
push
fcomps
mov
enter
mov
fiadds
push
insb
cmc
mov
mov
push
sbb
jge
mov
mov
sbb
push
mul
sbb
sbb
fistpl
mov
mov
push
adc
clc
mov
divb
add
xchg
iret
cs
addb
test
push
or
add
test
hlt
in
dec
add
and
scas
adc
mov
ret
dec
je
or
clc
jns
fcom
sarb
iret
shrb
in
cwtl
mov
cmp
call
aam
roll
or
add
sbb
add
mov
mov
mov
xchg
cmpsb
daa
xchg
loopne
gs
xchg
jp
test
jg
cmp
js
les
cmp
sbb
lret
int3
das
test
mov
and
sub
popl
movb
dec
cmpsb
add
sub
out
xchg
sub
jecxz
push
call
push
xchg
dec
nop
or
dec
mov
adc
repnz
lods
movsb
popf
sbbb
push
cmp
call
xchg
pop
mov
pop
rolb
pop
add
cli
push
lock
mov
cli
out
mov
add
scas
inc
and
enter
lret
aaa
push
inc
adc
movsl
fwait
and
mov
gs
jecxz
fcompl
stos
rcr
iret
cmp
adc
lret
hlt
xor
std
dec
mulb
jo
or
out
loope
or
pop
bnd
int
jbe
xchg
mov
mov
aaa
jns
lret
pusha
imul
and
cmp
outsl
nop
cwtl
loopne
loope
adc
scas
lock
dec
mov
xor
mov
jge
dec
nop
sahf
rcll
movsb
stos
jne
movsl
nop
mov
dec
push
lock
in
ret
jns
pop
clc
inc
inc
fdivl
sbb
push
jo
cwtl
jno
lret
inc
jno
enter
icebp
pop
mov
inc
cwtl
mov
pushf
rcrb
test
pop
mov
mov
and
jp
lods
scas
in
pop
pop
xchg
lret
repz
jge
inc
jp
jmp
sbb
push
testb
out
add
cmc
js
movsb
xor
ds
outsb
push
int3
push
mov
mov
xorb
push
cmpsb
push
cmp
js
movsb
or
jge
and
mov
repnz
sub
adc
test
pop
ror
xchg
push
rol
out
imul
xor
lock
mov
in
sar
mov
jne
pop
int
sbb
imul
in
jge
mov
cld
cmp
adc
aaa
push
cwtl
out
rorb
inc
cmp
ljmp
sbb
cmp
xchg
mov
ds
lahf
repnz
rclb
movsb
xchg
jb
sub
aas
aaa
call
add
pop
shlb
gs
adc
outsl
cmpsb
fwait
sub
or
jae
cmp
cmp
fcom
mov
pop
in
xchg
jecxz
cli
cmpsl
enter
pusha
sub
lock
stos
fwait
xchg
stos
pushf
or
xchg
pop
test
sar
les
cmpsb
pusha
sub
pop
rep
sub
pop
inc
fld
fsubr
mov
cmp
mov
fsts
sbb
mov
pop
ljmp
nop
sbb
int3
cmp
sarl
in
or
mov
jne
dec
scas
jne
in
cmp
dec
jnp
daa
mov
lods
jnp
pop
in
cmp
jno
push
mov
jecxz
xchg
in
pop
mov
hlt
loopne
ret
int3
add
sub
aas
xor
ja
xchg
jmp
jo
xchg
pop
lock
icebp
inc
arpl
lahf
mov
ljmp
xchg
sbb
stc
lds
in
sti
pop
inc
inc
mov
daa
mov
pusha
cli
dec
mov
fistpll
ljmp
pop
nop
in
loope
pusha
iret
stc
sub
gs
inc
push
sbb
sub
repz
lahf
cli
push
mov
notb
adc
out
out
jno
adc
inc
fsubrs
gs
add
inc
inc
out
jmp
sbb
aad
sub
aas
jge
in
ret
add
pop
jecxz
inc
aas
push
mov
mov
call
pop
cltd
dec
dec
in
xlat
add
aas
clc
mov
xchg
sahf
lods
test
push
nop
cmp
shl
imul
cmp
cmc
cmp
out
in
mov
cmp
fwait
test
xchg
sbb
lcall
push
in
or
out
aaa
pop
and
clc
lea
dec
jp
pop
push
scas
out
pop
cmc
test
sub
pop
push
dec
push
ss
fstl
mov
imul
in
add
je
add
ss
imul
dec
mov
sbb
cwtl
dec
call
movsb
mov
xor
scas
pop
jne
shrb
pop
stos
imul
or
les
dec
dec
pushw
push
call
cmpsl
mov
adc
mov
les
dec
movw
xchg
test
xchg
dec
sub
clc
fsubl
or
imul
fisubrl
fldenv
pop
push
and
mov
xchg
lods
lds
mov
inc
movb
movb
push
repnz
pop
cwtl
aad
fildll
lock
pop
jecxz
jmp
lcall
push
movsl
popf
xlat
inc
loop
xor
add
gs
add
loopne
jo
push
push
mov
pop
mov
sub
mov
aam
in
dec
shrl
push
iret
out
xor
subl
aaa
sbb
jno
lock
dec
cmpsl
in
mov
sti
into
cmp
jo
cmc
mov
in
xchg
or
xlat
movsl
jns
adc
sbb
sub
push
ljmp
xchg
mov
es
scas
in
lock
mov
test
pushf
lret
fldt
pop
inc
fcom
mov
push
stos
test
cmp
lret
lods
adc
cli
in
stos
mov
mov
sub
xlat
cmpsl
inc
ljmp
push
scas
mov
sub
jo
call
mov
or
in
insl
call
sub
dec
imul
outsl
insb
mov
sbb
mov
inc
xor
test
pop
dec
stc
in
mov
stos
sarl
mov
adc
sldt
dec
stos
pop
ljmp
ljmp
iret
cs
cltd
jbe
call
nop
fdivr
push
clc
cmp
in
lahf
stos
dec
sub
and
in
and
stos
and
lret
fbld
push
in
scas
pop
sub
mov
clc
ja
imul
stos
dec
xchg
in
mov
test
push
or
pop
xor
mov
mov
lret
in
push
out
scas
jg
and
insb
mov
sub
mov
ss
lods
mov
dec
xchg
in
cmp
ljmp
movsl
pusha
cmpsb
push
adc
sbb
mov
clc
or
cmc
mov
es
inc
mov
movsl
fs
sarb
out
test
sub
daa
mov
fs
sub
cwtl
inc
stos
inc
or
xchg
mov
dec
test
lahf
pop
call
in
dec
push
sub
out
out
xchg
mov
dec
iret
rorb
daa
iret
push
or
mov
xchg
insb
or
lds
movsl
movsb
sub
stos
mov
pop
xchg
mov
mov
sub
sub
call
mov
mov
lods
xorb
out
mov
iret
sbb
xor
mov
xor
in
pop
pop
lods
loop
xlat
xchg
lea
dec
leave
in
push
sub
out
stos
int3
lods
cmp
in
rclb
in
std
adc
mov
shrb
xchg
lods
push
or
leave
ljmp
lret
fsubs
stos
test
in
dec
sub
xlat
adc
or
jmp
stos
sub
lods
inc
stos
mov
in
and
stos
mov
and
insb
test
sub
in
adc
dec
mov
fldt
inc
adc
mov
xchg
pop
jmp
stos
lret
inc
stos
in
scas
lods
dec
cwtl
mov
cmc
lahf
dec
lret
div
in
jo
dec
add
and
daa
ret
test
jo
in
repz
mov
call
jl
pop
mov
gs
push
clc
test
aam
ljmp
aam
divb
enter
adc
or
cmpsl
inc
incl
jp
add
push
lret
insl
pop
mov
jbe
jl
xchg
pop
jae
data16
fcomp
cmp
daa
imul
cltd
push
aam
xchg
movsb
sarl
pusha
sbb
ret
call
mov
cmpsb
daa
cltd
aaa
dec
out
ja
ret
aad
adc
xor
push
cmp
inc
xchg
ss
cmp
imul
pop
mov
inc
and
pushf
cwtl
dec
mov
pushf
jmp
fstpt
add
mov
inc
incb
outsb
xchg
push
jmp
movsb
in
xchg
mov
cmp
iret
fidivrl
jg
mov
outsl
push
mul
lret
push
push
lahf
pop
pushf
mov
ret
jno
aaa
push
dec
xor
xchg
xor
out
insl
js
or
sub
xchg
movsb
nop
mov
lea
cmp
and
sub
clc
cmp
dec
cmp
call
out
mull
dec
xchg
out
test
cmpsl
call
sbb
in
addr16
imull
fsub
sbb
cmp
iret
andb
and
out
shl
push
gs
popa
int
xor
push
movsl
cmp
dec
call
sbb
dec
in
pop
dec
adc
leave
fwait
mov
cmp
std
xchg
push
test
call
sbb
dec
dec
inc
aam
cmp
lock
jp
mov
les
notb
fiaddl
cmp
aas
pop
or
out
test
sbb
ss
jl
movsl
mov
fwait
or
gs
leave
popf
loope
inc
mov
cmpb
iret
frstor
fwait
jmp
mov
negl
cmp
jle
repz
sub
shll
ljmp
push
mov
je
mov
outsl
int3
xchg
xor
in
dec
movsb
mov
jnp
cmp
or
dec
ljmp
aam
adc
lahf
popa
cld
lods
call
cmp
jbe
adc
push
or
dec
add
call
mov
push
out
mov
sub
mov
cld
cltd
test
addr16
xchg
scas
call
jge
fcmovnb
push
nop
mov
clc
data16
rcrb
in
ds
cmp
nop
cmpsl
sbb
rcrl
leave
xchg
addr16
gs
cmp
mov
scas
push
xchg
aam
dec
notb
mov
xchg
ja
dec
lcall
int
sti
loopne
lock
call
clc
addr16
mov
test
or
mov
in
xchg
mov
or
inc
xor
mov
sbb
add
sub
gs
lods
mov
push
jne
gs
dec
mov
cld
mov
outsb
mov
or
test
dec
lret
xchg
ficoml
xchg
sarl
fsubr
loopne
add
cmp
mov
mov
push
mov
mov
aaa
cld
add
arpl
push
mov
push
xchg
cmp
scas
sub
dec
stos
aaa
test
xchg
push
mov
sub
add
cmp
ficomps
jl
lahf
ljmp
pop
in
sbb
xchg
xchg
fiaddl
lret
insl
mov
dec
add
jb
mov
adc
xchg
mov
cmc
pusha
notb
mov
outsl
mov
pop
pop
mov
pusha
sub
mov
gs
hlt
cmp
adcb
cltd
sbb
xchg
sub
into
inc
das
stos
or
test
in
cli
pop
inc
sarb
inc
mov
imul
out
fmul
jno
repnz
xor
pop
sbb
ljmp
call
movsb
gs
loope
loopne
adc
dec
in
repnz
xchg
ljmp
pop
push
ret
push
fsubrl
cmp
lods
lock
cltd
incl
jo
xchg
adc
mov
pop
sub
mov
test
mov
dec
xor
mov
test
popa
scas
ret
and
adc
nop
leave
lret
cmp
and
cwtl
mov
cmp
in
mov
lock
test
iret
and
mov
add
out
mov
cld
cli
mov
dec
rorl
movsl
mov
or
cmp
bound
pusha
hlt
push
xor
nop
out
stos
ret
repnz
pop
hlt
mov
jmp
rorb
leave
cmpsb
xchg
lret
adc
inc
mov
in
mov
call
into
scas
inc
xor
jp
pop
xor
cmp
pop
pop
cmp
js
or
outsl
push
jl
repz
test
add
repnz
xchg
inc
push
mov
mov
pop
ljmp
push
sub
push
ret
adc
movsl
cmp
clc
aaa
and
mov
xchg
jae
cmp
pop
mov
out
cmp
fidivrs
call
test
shrl
insb
cld
mov
sbb
pop
sti
not
xor
push
xchg
mov
and
rorl
lods
fsubr
push
outsl
push
sub
movsb
cmp
scas
xor
pop
sbb
pushf
and
daa
pop
outsb
in
stos
clc
sbb
jmp
loope
dec
sbb
fcoms
ret
sbb
hlt
cmp
mov
shl
shr
fcomp
mov
popf
or
test
xorl
shr
incb
xlat
jno
sar
repz
mov
js
push
mov
ljmp
mov
mov
pop
dec
mov
outsl
cs
fs
rcr
iret
test
insb
movsb
mov
pop
ljmp
inc
out
adc
mov
pop
push
addr16
fistpll
mov
mov
pop
in
repnz
les
xchg
jmp
out
call
mov
add
mov
cmp
pop
jp
push
cli
stc
sti
add
mov
lea
jl
mov
dec
js
push
sbb
sub
iret
push
lret
cwtl
dec
dec
sub
stos
rcr
fimuls
lret
and
cmpsb
stos
or
and
sahf
repz
stos
addr16
mov
sub
aad
pop
sti
insl
iret
in
push
mov
add
fsubrl
outsb
xlat
daa
mov
xor
das
add
push
jno
xchg
inc
pop
cwtl
push
xor
ljmp
sbb
mov
and
mov
mov
out
mov
insb
sbb
out
pushf
push
sbb
pusha
mov
fsub
or
xchg
repnz
xlat
clc
fld
pop
dec
gs
movsb
pop
nop
xor
in
hlt
pusha
pop
mov
cli
mov
shr
ss
mov
stos
jnp
sub
ljmp
sbb
movsb
popa
jno
js
push
xor
xchg
mov
push
push
xlat
clc
and
in
ljmp
adc
xlat
divl
dec
cmpsl
xchg
push
push
clc
insl
push
andl
inc
aas
in
xchg
js
repnz
and
xor
jb
jecxz
test
adc
dec
gs
sub
aam
stc
cmp
cmp
push
shrl
arpl
adc
cmp
int3
and
popa
push
mov
sub
scas
xor
adc
jmp
fnstsw
and
ret
cmpsb
push
shl
pop
add
mov
push
inc
cmp
in
ret
jno
jge
mov
cmp
mov
push
and
push
mov
mov
fstps
pop
test
mov
jo
clc
sub
arpl
xor
dec
sub
rclb
dec
push
inc
xchg
push
xchg
sub
call
dec
inc
loopne
lret
data16
rorb
ljmp
daa
cli
mov
int3
push
sbb
cli
push
pop
dec
cltd
lcall
adcb
xor
stos
outsb
mov
int3
cwtl
xor
jb
xchg
dec
ds
add
popa
dec
in
lods
inc
mov
xchg
mov
loope
add
int3
ljmp
lret
daa
aam
xlat
push
test
pop
xchg
fld
cmp
movaps
imull
ljmp
sbb
push
push
xchg
sbb
push
aad
jecxz
pop
jecxz
dec
mov
pop
or
mov
push
sbb
or
adc
sbb
push
sbb
aaa
push
lods
test
fists
xor
push
inc
rorb
and
mov
sub
pop
out
xor
fdivrs
add
sbb
adc
and
pop
xchg
fnstsw
or
rorb
xchg
xchg
mov
dec
xor
sti
mov
push
inc
jge
call
and
sbbl
insb
movsl
mov
mov
mov
roll
ja
sbb
sbb
push
js
adc
call
int3
push
in
cwtl
pop
popa
ss
mov
mov
test
movsb
clc
fcmovne
in
mov
inc
es
test
ret
pop
rol
xchg
ret
dec
rorl
add
pop
test
test
test
and
push
es
addb
out
dec
and
xlat
aam
cld
pop
push
or
lret
rcrb
ret
xor
mov
mov
sbb
lock
loope
test
dec
ljmp
pop
test
mov
dec
mov
fcompl
cs
push
xor
out
mov
cmp
shr
gs
inc
cmp
pop
sbb
pop
std
mov
movsb
leave
repnz
in
mov
mov
aam
or
out
mov
xchg
lock
or
and
jp
shlb
jmp
std
mov
push
rcrl
inc
in
aaa
dec
sarb
push
and
jmp
shl
xchg
add
pushf
xor
hlt
orb
and
lahf
nop
sub
and
pop
add
add
inc
lds
push
xchg
nop
setge
mov
xchg
xchg
dec
mov
mov
xchg
dec
movsb
test
lea
je
inc
addr16
pop
inc
lods
xor
mov
shlb
int3
ljmp
nop
pop
pusha
lock
cmp
arpl
icebp
sub
push
push
mov
mov
mov
inc
data16
lcall
mov
gs
cltd
daa
fmuls
mov
ds
add
cmc
mov
push
test
std
repnz
jb
cld
pand
out
adc
jo
imul
push
cs
hlt
sarl
or
sbb
cmc
jmp
das
test
and
decb
and
lock
aam
and
pop
imul
cs
hlt
adc
push
sbb
sarl
dec
xor
dec
fistpll
pop
stos
mov
mov
not
imul
adc
sbb
ficoms
add
popf
cmp
dec
sub
dec
lret
dec
xlat
pop
cli
scas
out
xlat
sbb
cmpsl
aam
cli
jmp
jecxz
add
xor
leave
outsb
mov
inc
call
fxtract
sub
xchg
clc
pop
mov
imul
fdiv
fildll
adc
add
pop
imul
shlb
data16
outsl
pop
ja,pn
mov
lock
adc
cwtl
xlat
dec
fisubl
ljmp
jecxz
shr
mov
dec
test
fdivr
out
mov
inc
test
hlt
fnsave
and
inc
inc
inc
ret
and
int3
xchg
lcall
test
imul
cmp
es
inc
aam
fs
sahf
cmp
mov
fwait
call
cmp
and
jns
xor
addr16
arpl
cmp
fld
xchg
push
stos
and
sbb
sbb
adc
out
cmc
cmpl
jmp
pop
jl
push
daa
enter
sub
and
cmp
adc
test
mov
ret
jno
js
outsl
adc
jp
jl
mov
push
mov
insl
rcrl
int3
sub
mov
dec
in
ret
pop
iret
inc
cltd
sahf
xor
int
dec
cmp
mov
and
lods
jno
push
mov
imul
lret
pop
xchg
xor
aaa
in
ret
into
pop
in
sahf
mov
test
call
mov
mov
aaa
int
cmc
in
and
sarb
inc
loope
jmp
fcom
ja
push
push
dec
fisubs
fs
xchg
outsl
aam
std
cltd
out
repnz
mov
clc
sbb
shr
lods
test
mov
loop
cmp
sbb
shlb
cmp
fdivs
push
xchg
aaa
clc
fwait
jne
loope
movsb
or
or
stos
pusha
and
fwait
or
call
dec
adc
sti
cmp
inc
loope
jno
xchg
js
xchg
mov
dec
cmp
cmp
fisttpl
sbb
dec
jo
push
add
dec
dec
scas
mov
pop
push
lret
add
ljmp
inc
xchg
aaa
dec
aaa
jno
jmp
mov
imul
repnz
in
pop
mov
sub
cwtl
cmp
mov
fst
xchg
add
pop
stc
push
popf
pop
loop
inc
in
push
inc
insb
cmp
mov
clc
jns
imul
ljmp
outsl
jbe
es
inc
push
inc
cmpsb
repz
scas
push
neg
jmp
cmc
lret
jb
dec
jno
cmc
in
cld
dec
dec
mov
insb
xchg
ja
in
and
or
in
jnp
popw
adc
dec
sub
fildll
stos
fmull
and
mov
popa
jns
or
xor
mov
inc
mov
adc
or
push
in
xchg
mov
dec
jb
in
sbb
adc
cli
in
mov
pop
mov
in
sub
jg
or
lret
addl
xchg
lods
mov
xchg
or
xchg
or
jecxz
lret
data16
push
sbbl
insb
cmc
lret
cmp
and
or
std
or
or
adc
call
and
mov
cmp
or
mov
mov
xlat
fwait
clc
cmp
scas
js
jbe
pusha
arpl
jge
fisttpl
dec
dec
mov
test
test
mov
push
push
mov
scas
dec
jg
lods
push
es
ret
mov
or
movsb
xchg
test
cmp
dec
mov
or
push
dec
stos
ljmp
in
cmp
mov
cmp
sbb
xchg
dec
repz
in
idivl
or
mov
and
movsb
gs
ds
test
cmp
ret
inc
dec
pop
jnp
lret
xor
xchg
ljmp
loopne
pusha
mov
or
iret
ljmp
and
cmpl
movsl
ds
out
cmp
ret
popa
lds
inc
addr16
ret
clc
mov
fldcw
outsl
negb
ljmp
mov
sub
data16
hlt
in
push
fcoms
repnz
push
lds
in
rcrb
lahf
cwtl
jns
mov
cwtl
cmp
xchg
stos
mov
xchg
loopne
pop
dec
aam
push
inc
add
fs
push
dec
xor
pop
xor
dec
call
push
movsb
call
sub
inc
or
pushf
sbb
sbb
push
or
insl
gs
push
cmpb
jb
xor
xor
lock
push
mov
flds
aad
es
dec
add
into
sub
in
mov
cltd
outsb
call
cmp
in
call
arpl
add
pop
xor
loopne
int
adc
mov
cmpl
ja
pop
dec
jecxz
call
mov
out
mov
mov
pop
push
out
sbbl
mov
out
imul
loopne
call
and
aas
aaa
in
and
outsb
loopne
fsubl
xor
and
mov
int
sub
scas
mov
enter
and
ss
aas
shl
pop
movsb
fldcw
popa
popf
cmp
mov
lahf
mov
mov
xor
mov
out
fwait
mov
js
jg
lahf
sti
lahf
movsl
test
lcall
test
mov
pusha
outsl
test
imul
adc
jno
dec
flds
clc
sbb
pop
cmc
lods
xchg
das
stos
add
push
seto
mov
adc
mov
jl
pop
mov
push
in
jl
inc
lahf
sub
push
mov
dec
push
mov
jae
push
adc
mov
nop
xchg
hlt
sub
cmp
pop
push
repz
lcall
xor
mov
out
pop
shrb
repnz
andl
xchg
dec
or
gs
cwtl
sbb
add
sub
pop
aam
sbb
sub
pop
lods
lods
clc
je
out
mov
adc
lret
push
pop
fisttps
repnz
je
mov
sti
dec
adc
icebp
scas
cmc
ljmp
pop
test
push
inc
pusha
pop
test
mov
outsb
xchg
movsb
gs
aam
and
xor
cmp
lcallw
add
adc
lret
movsb
ljmp
repnz
leave
add
jb
aam
sbbl
jbe
ror
clc
cmp
lahf
imul
nop
or
xor
xor
sti
call
fmuls
xor
cmp
popf
rol
jmp
imul
mov
xlat
int3
push
push
adc
aad
add
inc
or
insb
mov
out
and
inc
mov
imul
sbb
pop
inc
ss
push
xchg
cwtl
xchg
and
inc
dec
test
lcall
sahf
or
in
sbb
in
push
test
aas
outsb
mov
jle
jp
add
cli
stos
cmpsl
das
cmp
out
imul
hlt
insl
loopne
jg
and
pop
or
out
xchg
and
jbe
add
out
mov
cli
repnz
lret
fidivs
sbb
xor
aam
dec
outsl
scas
push
movsb
cmp
popf
repnz
fadds
mov
sub
dec
sti
push
jnp
xor
and
pop
sub
mov
xchg
leave
dec
in
out
popf
jb
xchg
dec
pop
fwait
or
push
lock
push
add
inc
nop
add
mov
mov
lret
push
lret
in
xchg
push
xchg
and
ss
cmp
xchg
aad
adc
test
jnp
call
xchg
mov
mov
cmp
xor
xor
cmp
xor
fildll
mov
lds
inc
sbb
mov
popf
jnp
call
push
lods
lock
stc
sbb
lret
stc
sbb
out
mov
sub
cwtl
repz
es
mov
mov
mov
iret
xchg
jp
sbb
mov
push
cmp
cmp
add
scas
cwtl
movb
movsl
sti
and
mov
cmpsl
daa
in
mov
insl
push
sub
sub
xchg
sarb
xchg
dec
sbb
call
xchg
pop
add
xchg
addr16
mov
pop
addr16
dec
cmp
cmove
fmull
test
loopne
incl
aaa
loopne
pop
lret
mov
out
cmpsb
stos
xor
imul
rcrl
and
mov
and
leave
sbbb
and
aad
xchg
dec
fildl
popa
shlb
xchg
nop
adc
int
cmp
das
push
cwtl
adc
pushf
pop
pop
sbb
xor
cmp
mov
inc
sub
cwtl
mov
jge
mov
sbb
repnz
clc
cmp
sbb
cmp
sarb
add
rcrl
inc
and
xchg
pop
ljmp
inc
leave
lret
push
leave
shlb
jmp
shll
outsb
je
jp
movsl
test
lahf
sub
test
inc
fidivrl
mov
xchg
or
test
ljmp
gs
nop
sarb
call
and
aam
stos
sbb
cltd
hlt
push
getsec
jmp
push
mov
dec
jecxz
in
jmp
imull
pop
aam
lahf
push
dec
mov
in
push
xor
mov
push
mov
sarb
cmp
imul
push
mov
mov
mov
out
in
xorb
mov
dec
lock
mov
sbb
loopne
sbb
imul
xor
cltd
cld
lahf
aas
pop
xor
pop
push
cwtl
loopne
cld
clc
movb
mov
pop
xchg
cmpsb
sub
jbe
orl
sbb
jg
cs
pop
inc
jecxz
daa
add
movsb
xlat
pop
dec
rcl
pop
in
sar
or
xchg
sbb
push
fcomps
xchg
pushf
mov
xchg
pop
int3
sbb
pop
lock
fdiv
fildl
lret
xlat
cltd
adc
adc
mov
addr16
shll
mov
out
xchg
add
inc
lret
push
pop
jbe
mov
pop
mov
sub
sbb
movsl
cltd
stos
leave
xchg
addr16
aam
int
sub
addr16
out
inc
bound
jge
and
dec
add
cli
dec
aad
test
pop
sar
jbe
int3
xchg
xor
or
jno
sub
lret
js
cmpsl
outsl
popa
rorl
pushl
xchg
xchg
test
xor
jle
xor
stos
int3
mov
andl
call
push
pushf
stos
mulb
test
pushf
or
fistpll
mov
cwtl
cwtl
mov
loop
push
xchg
cwtl
in
pop
inc
xchg
push
sbb
rorb
and
cmp
inc
cmpsb
ja
cmp
leave
out
ljmp
outsb
div
stos
cwtl
xor
xor
adc
mov
jae
push
dec
cmpsb
pop
xor
pop
fadds
loopne
inc
pop
iret
sub
in
xchg
shl
notb
scas
pushf
shrb
shrb
pop
leave
dec
data16
sar
push
pop
pusha
cmp
out
loop
pop
cmp
add
fsub
and
out
stos
jne
push
adc
aaa
in
out
popa
std
imul
dec
rorb
xor
jle
repz
cmp
les
pop
xchg
sbb
push
pop
jecxz
cwtl
and
dec
mov
cld
cmp
pop
lods
test
push
pop
gs
mov
and
sub
xchg
sbb
repz
ja
ss
scas
jnp
pop
mov
lret
scas
push
ss
cwtl
and
iret
and
push
inc
inc
fistps
and
push
push
cmp
in
daa
dec
or
pop
popa
mov
movsb
enter
arpl
push
lcall
pushf
xchg
clc
pop
shl
dec
fldt
xor
xchg
loopne
jne
cmpsl
sub
xchg
nop
lret
aas
xor
sbb
cmp
popa
cmpsb
test
cwtl
mov
mov
in
icebp
out
xchg
lea
aad
jmp
outsl
shrb
push
stos
cmp
mov
sbb
and
mov
push
sub
mov
pop
adcl
fmuls
adc
or
add
dec
push
mov
ret
push
roll
push
inc
pop
add
mov
dec
ja
fiaddl
fbstp
push
lods
pop
repnz
push
fisubrl
xchg
xor
cmp
inc
xor
shll
inc
inc
pop
sub
cs
xchg
pop
das
out
test
xchg
cmp
mov
push
pop
cmpsb
add
movsl
call
nop
mov
mov
repz
nop
call
fnsave
data16
jne
pop
rcrb
pop
mov
pop
call
pop
dec
mov
jmp
and
pushf
dec
pop
pusha
dec
cmp
inc
test
repnz
fidivs
sub
ljmp
cmp
sub
test
in
pop
js
aaa
fs
push
out
push
cmpsl
jmp
mov
dec
jbe
fucomi
sub
inc
xor
lret
xchg
lds
es
jg
mov
ja
test
mov
adc
push
das
loopne
push
cmpsl
out
lods
mull
scas
xor
aam
clc
and
or
rorb
mov
stc
gs
adc
add
sbb
dec
shll
add
fcomip
mov
and
mov
addr16
adc
in
push
jge
push
mov
push
aaa
mov
test
inc
loop
sub
fimuls
ja
cmp
sarl
sar
jecxz
rorb
jle
andl
cmp
inc
rorb
fdiv
mov
stos
or
jg
outsb
pop
jl
mov
ret
lcall
jg
lods
jne
out
mov
xor
sub
sub
ret
xchg
icebp
ss
sarl
push
xor
sub
ror
push
icebp
xor
aam
outsb
sbb
call
pop
sbb
out
push
out
sbb
pop
mov
sarb
negl
cmp
clc
add
cmp
insb
dec
iret
cwtl
mov
hlt
jo
cltd
push
and
sub
bound
inc
mov
insl
out
out
sbb
test
cmpsl
push
mov
data16
cs
xchg
fmull
sbb
loopne
pushf
popf
lcall
lret
test
push
adc
popl
rol
fcmovnbe
dec
cmpsb
aam
dec
test
sbb
jecxz
dec
test
mov
pop
scas
jl
push
xor
xchg
lds
in
mov
mov
les
xchg
xchg
fisubl
cmpsb
int
xlat
adc
data16
inc
mov
lret
lock
gs
xchg
dec
repnz
fldt
mov
ja
nop
ljmp
je
popf
es
push
ret
push
and
inc
jno
pop
icebp
call
xchg
push
fs
sbb
ja
mov
aad
sub
jbe
dec
pusha
mov
mov
push
jl
mov
out
xor
adc
sub
push
inc
aas
mov
icebp
ds
fldenv
fsub
cwtl
je
xchg
and
rcl
mov
jns
stos
mov
cwtl
aam
xchg
call
idivl
shlb
mov
cld
mov
inc
hlt
mov
mov
mov
cmp
into
test
in
jmp
cli
mov
insb
in
out
cmpsl
addr16
call
test
in
mov
test
jle
imul
cwtl
mov
xor
and
dec
add
sbb
sub
xchg
int
fcomi
mov
jno
stos
jl
xor
repnz
in
dec
lret
sub
je
dec
xchg
imul
xchg
mov
daa
repz
adc
xchg
inc
mov
mov
loopne
pop
testl
mov
call
inc
add
movl
daa
int3
pop
add
shlb
xlat
mov
mov
pop
cwtl
rcl
int
cmp
cmp
adc
pusha
shlb
pusha
and
pop
push
jno
shrl
call
jo
and
xchg
pop
out
mov
adc
push
mov
pop
sub
clc
pushf
fldcw
adc
sub
fs
xchg
pop
push
mov
cmpsl
ss
in
mov
scas
xchg
inc
rcll
nop
sub
scas
out
push
aam
loope
test
sbb
inc
adc
sbb
insl
rclb
fcoml
or
jns
ret
pop
xchg
mov
insb
adc
bound
mov
rolb
shrl
addr16
daa
jmp
pop
lds
cmp
adc
add
cmpsb
dec
std
or
adc
repnz
rclb
das
in
ret
sub
testb
pop
mov
pop
sbbl
xor
leave
pop
mov
ficomps
and
cltd
jae
inc
aam
pop
jnp
pop
out
lods
scas
xlat
xchg
call
test
cwtl
add
imul
lock
xchg
push
dec
out
jbe
out
or
repz
rolb
stos
xor
clc
sbb
mov
jmp
scas
cli
jbe
xchg
sbb
cltd
jo
dec
arpl
sbb
sub
loop
ljmp
cmpsb
jle
cld
mov
das
adcb
lret
mov
cmp
mov
incl
fwait
sbb
aas
mov
pop
jno
mov
nop
int
aad
pop
ljmp
insb
leave
mov
aas
addr16
lock
aaa
xor
sti
and
pop
or
cli
pop
and
dec
inc
fdiv
scas
jno
shld
sarb
push
dec
cwtl
hlt
pop
ljmp
xor
mov
pop
ret
xor
rcrb
jb
cmp
scas
cmpsl
rcll
fisubl
xchg
lret
push
and
pop
cmp
rclb
into
call
adc
leave
mov
hlt
jne
cmpsl
lea
ficoml
out
mov
jmp
pop
cmp
cmp
xchg
ds
dec
gs
cmp
mov
push
pop
cs
mov
std
mov
test
scas
dec
push
aad
mov
in
push
sub
inc
les
sub
mov
cmp
mov
dec
cmp
int3
div
and
call
dec
or
mov
cmp
pop
xor
test
mov
xchg
and
shr
nop
pop
pop
pop
jns
aas
push
pop
clc
fsubr
daa
ljmp
fdivs
repz
popa
adc
mov
ljmp
dec
shrb
test
je
jecxz
test
xor
arpl
in
push
add
jns
mov
imul
or
pushf
add
push
inc
xor
lea
les
jl
push
mov
mov
jl
sub
repnz
ficoml
test
bound
jmp
rorl
cmp
push
outsl
mov
dec
xor
fucomp
dec
xchg
sbb
in
xchg
push
sbb
pop
sarb
adc
mov
dec
xchg
rorl
aam
jne
inc
mov
jmp
and
iret
popa
add
add
stos
xchg
gs
cmpsb
or
rcrb
sub
fcomps
inc
pop
fistps
xchg
scas
es
lods
sub
sub
push
or
mov
jmp
jnp
cmp
ffreep
xrelease
cmp
cwtl
mov
aaa
sbb
pop
cmovs
sub
subl
lods
cmp
out
daa
orl
mov
cli
mov
lcall
cwtl
fcomps
cmp
addr16
xchg
cmp
sbb
lahf
mov
push
iret
cli
lcall
fisttpl
mov
rorl
xchg
aaa
dec
dec
in
nop
inc
mov
out
fldt
lea
xlat
pop
adc
sub
call
xchg
test
int3
enter
mov
mov
xor
test
test
into
outsl
negl
aaa
pop
imul
or
fs
mov
or
lcall
xor
xchg
add
sbb
xor
ret
ss
mov
inc
mov
je
in
sub
stos
clc
pop
push
sbb
sbb
lret
jb
call
addr16
cmp
xor
adc
mov
inc
add
lcall
lahf
repnz
movsb
dec
pop
sbb
orb
cmc
mov
mov
lret
test
pop
inc
jae
adc
push
push
cmp
int
add
test
jg
clc
push
sti
mov
cs
insb
xor
ret
cs
dec
testl
jecxz
test
push
outsl
shlb
push
stos
jo
pop
sarb
pop
jb
add
cmc
fcoms
and
fsub
add
movsl
push
rcrb
xchg
xchg
in
mov
xchg
stos
addr16
out
ss
push
imul
push
inc
lods
pop
clc
xchg
pop
sbb
in
mov
cmpsb
test
mov
and
pop
shlb
call
dec
pop
imul
test
orl
movb
nop
js
movsb
jb
inc
nop
adc
mov
test
testb
cmp
popf
add
adc
jno
shr
mov
add
leave
dec
inc
fimull
xchg
or
or
and
sbb
cmpl
outsl
fcomps
scas
hlt
cmp
mov
inc
inc
ljmp
jno
mov
add
inc
out
xlat
fdivrp
and
adc
popf
sbb
adc
vunpcklps
jmp
in
push
mov
jmp
adc
rclb
shll
push
xor
ret
js
dec
jno
jp
rorl
add
ja
fdivrs
divb
rcrl
dec
pop
fxch
inc
mov
pop
xchg
mov
xchg
nop
loope
pusha
cmp
mov
inc
mov
mov
xchg
data16
pop
cmpsl
clc
mov
test
shll
sbb
or
mov
adc
pop
mov
repnz
dec
mov
test
cli
fcom
cmc
loopne
xor
jl
lret
sub
inc
mov
scas
pop
mov
cs
lds
cmpsb
out
mov
hlt
pushf
bound
or
add
aaa
mov
nop
xor
cmpsb
xchg
repnz
in
gs
repz
or
fs
scas
xor
js
jo
sbb
shrl
movsb
mov
dec
daa
sbb
fdivl
outsb
lret
cmp
cld
jbe
ror
xor
in
repnz
pop
nop
ret
dec
cwtl
es
push
or
out
out
push
jno
dec
and
fcoml
pushf
repnz
sbb
das
sub
sbb
pop
inc
jne
jl
sub
or
gs
sbb
nop
out
mov
xor
jns
and
test
dec
dec
xor
pop
das
mov
fs
push
jno
ficoml
int3
ret
aam
int3
pop
lret
mov
push
fcmovbe
into
ljmp
out
xchg
repnz
rcll
lret
xor
inc
fdivl
mov
ret
cld
or
das
aad
cli
cmp
fs
stos
imul
jo
sub
jg
out
inc
push
out
xor
into
aad
jmp
adc
sbb
in
inc
out
shlb
xchg
jge
sub
xchg
scas
data16
in
lret
jl
xor
xor
add
mov
or
imul
fcoms
addr16
lock
xchg
gs
adc
sub
add
orb
out
jp
outsb
vpaddsb
fdiv
lret
cmp
ja
pop
sbb
shr
adc
fwait
mov
jmp
or
insb
testb
jp
lea
aam
mov
fsubl
jae
ljmp
int
jae
add
sub
ret
addr16
xor
movsl
test
jecxz
call
mov
sbb
outsb
cltd
jne
push
xor
inc
les
or
bound
popf
fwait
movl
clc
jo
jnp
push
jmp
filds
std
jl
in
aaa
insb
mov
test
shrb
xchg
inc
xchg
push
dec
mov
xchg
fildl
lcall
int3
sarb
add
xchg
les
sbb
dec
push
cmp
mov
loopne
dec
sub
sbb
fs
mov
leave
outsl
lock
sbb
hlt
pop
test
mov
les
xchg
test
mov
lret
pop
push
dec
cmp
sub
shrb
int3
sbb
imul
xchg
jecxz
in
aas
or
leave
mov
ret
mov
pop
inc
mov
cli
adc
mov
mov
mov
sub
pop
out
in
pop
out
ljmp
in
fistps
arpl
inc
pop
outsl
adc
sub
push
out
leave
mov
outsb
rclb
jl
xlat
sbb
pop
cli
jecxz
mov
je
push
nop
fcomp
adc
lcall
add
mov
mov
or
std
jne
push
lahf
cli
or
pop
mov
xchg
in
pop
insb
mov
mov
add
xchg
inc
push
and
cwtl
scas
cmpsl
push
roll
sbb
pop
lcall
xchg
add
pop
adc
or
push
pop
cli
inc
add
xchg
lahf
push
js
lahf
loope
and
fistps
addr16
scas
negb
mov
xor
add
push
inc
jbe
mov
xchg
in
pop
pusha
in
mov
mov
xor
popa
sub
or
fstpl
sub
mov
dec
bnd
mov
mov
xorl
push
and
sub
out
pop
dec
aad
mov
push
cmpsl
test
aaa
cwtl
and
and
in
in
sbb
xchg
cmpsb
mov
xor
dec
push
cmp
xchg
test
movsb
inc
xor
aaa
fs
out
dec
pop
push
test
leave
jmp
dec
rolb
outsl
bound
lea
and
mov
daa
neg
mov
cmpsb
int3
mul
jmp
add
div
lret
fists
pusha
jno
mov
ret
add
insl
fdiv
out
aas
xor
les
mov
sub
sti
dec
pop
addr16
adc
xchg
or
sub
jb
sbb
jae
out
cmp
ret
gs
pop
xchg
and
adc
dec
mov
leave
inc
pop
adc
cld
data16
xchg
or
call
and
xor
push
xchg
sahf
jg
scas
adc
popl
add
xchg
mov
icebp
and
add
xchg
xchg
mov
insl
pop
mov
push
popf
jno
fs
call
push
lds
mov
mov
loop
aas
repz
cwtl
cmp
aaa
insb
xlat
jnp
pop
add
and
cld
icebp
dec
jle
lea
scas
fwait
orl
loope
cmp
inc
sbb
fs
ds
or
dec
outsl
push
aam
inc
or
xor
dec
and
call
xor
es
or
and
ds
add
bound
xlat
insb
gs
dec
nop
mov
adc
inc
mov
pop
mov
fsubs
repnz
push
xchg
pop
repz
aad
and
movsb
clc
ss
mov
cmp
loop
adc
mov
pop
or
pushf
mov
js
add
test
in
es
pop
push
xchg
jbe
adc
adc
out
mov
mov
ljmp
test
sbb
dec
mov
rcl
int3
push
pop
push
mov
pop
mov
xchg
cmp
in
cmpsl
push
xchg
dec
pop
repz
lods
gs
adc
fsubs
mov
xchg
adc
dec
rcl
test
int
popa
cmp
lods
loope
ds
jae
fldt
fisubl
adc
cmp
in
push
jecxz
out
jno
inc
subb
data16
mov
push
or
and
and
lock
ljmp
sbb
cmp
push
nop
push
fs
pop
js
mov
aad
sbb
and
fs
pop
mov
mov
aam
idivb
mov
sub
lock
stos
push
divb
jo
cld
or
icebp
add
out
xchg
lret
cmp
inc
add
stos
and
cwtl
adc
fs
cmp
out
cmp
mov
les
in
in
pop
inc
push
iret
gs
test
sarb
fldcw
iret
test
xchg
loope
les
call
adc
btc
ficomps
leave
xor
mov
mov
adc
inc
js
xchg
sub
sub
aaa
mov
lahf
clc
cmp
mov
fstpt
cwtl
push
adc
cwtl
xchg
xchg
mov
xchg
cmp
xor
test
dec
sub
pop
and
out
clc
mulb
in
divl
lcall
push
sub
xor
stos
fdivrs
or
add
clc
xor
call
nop
xchg
rcll
xor
dec
xchg
xor
out
in
mov
push
stos
adc
jno
idiv
leave
pop
aam
push
xlat
mov
cmpsb
or
pop
jecxz
cmp
jno
inc
mulb
mov
push
fidivs
sbb
das
cwtl
mov
jmp
pop
loope
add
das
pop
add
cli
sbb
test
daa
mov
daa
cmp
movsl
push
mov
jecxz
jle
daa
mov
sbb
push
lret
jae
mov
mov
and
mov
mov
pop
sbb
scas
or
sub
psllq
ljmp
fadds
shlb
aam
mov
dec
aad
pop
or
shr
mov
clc
mov
xor
outsl
aaa
cltd
test
scas
pop
xlat
mov
cs
rclb
jl
mov
cli
push
stc
lahf
imul
and
or
into
xchg
sub
shlb
scas
in
andl
cmpsb
out
and
inc
adc
out
dec
or
jle
push
jo
push
or
fmul
jmp
sbb
mov
xchg
daa
mov
xor
dec
add
lret
clc
mov
push
xchg
jo
mov
int3
push
add
lcall
test
out
sbb
out
jno
add
insl
arpl
mov
lods
push
add
cmpsl
mov
mov
mov
sub
mov
sbb
lods
jne
dec
xchg
cli
dec
mov
mov
sbb
shrb
mov
xchg
addr16
mov
adc
and
fldl
jne
adc
add
pop
add
inc
add
mov
into
or
in
jge
cmp
sub
aaa
jno
pop
lcall
das
hlt
mov
sarl
jl
movsl
imul
push
push
shrl
xor
mov
xchg
add
xchg
cli
mov
into
popa
cmpsb
shrb
filds
or
xchg
sti
add
out
rcrb
sbb
lahf
sub
mov
fldenv
les
out
mov
sahf
pop
cmp
and
test
mov
clc
mov
dec
xchg
aas
or
lcall
clc
dec
lret
pop
fadds
in
adc
test
sarb
push
lock
addr16
push
pop
dec
cmp
mov
xchg
add
push
pop
lahf
lcall
xchg
jae
jo
mov
sub
std
mov
addb
mull
pop
push
ret
push
cli
adc
call
shlb
xchg
inc
mov
inc
in
push
pop
inc
dec
lea
data16
repz
mov
jae
stos
neg
fists
sbb
lcall
or
add
mov
lods
loope
and
xchg
mov
lods
int3
dec
js
jp
xor
push
out
aam
aas
test
orl
out
rorb
cwtl
sarb
pop
xlat
iret
les
add
cld
dec
jnp
fsub
inc
mov
inc
imul
data16
dec
pop
jns
sub
mov
sub
xchg
pop
inc
mov
ljmp
cmp
xchg
repnz
jl
mull
lock
loopne
test
inc
adc
cwtl
jne
add
es
push
xor
out
mov
xchg
nop
xor
mov
add
incl
push
enter
outsl
popa
pop
mov
cwtl
lods
popf
ret
xchg
mov
push
or
lods
clc
pusha
push
lcall
rol
add
pop
mov
push
insl
jno
add
stos
rcll
push
or
cmp
mov
pop
lods
jno
add
push
jno
push
fcoms
jae
cwtl
cli
inc
pop
xchg
xor
or
jecxz
repnz
aaa
fstps
sbbl
pop
inc
dec
nop
repnz
gs
cmc
int3
cli
sbb
jne
lods
fcomps
sarb
xor
movsb
cwtl
adc
xlat
mov
lea
leave
dec
sbb
sbb
in
out
jb
dec
push
inc
pop
xor
mov
cmp
inc
dec
and
pop
add
or
inc
add
pop
hlt
lahf
jge
pop
jno
sub
push
cli
loop
dec
bound
stos
cmpl
add
loope
lret
call
outsl
ljmp
aam
mov
aam
cld
ljmp
lahf
sbb
aas
popf
sbb
test
clc
fs
mov
adc
cwtl
stos
and
lcall
into
and
inc
add
sub
sarb
fwait
pop
and
add
loop
mov
cmp
bound
dec
adc
aaa
mov
int3
add
sar
jne
fs
sub
dec
addr16
scas
mov
push
xchg
movsb
xor
lea
aam
shrb
mov
test
stos
pop
mov
lcall
mov
cld
adc
pusha
jno
movsl
inc
xchg
mov
dec
cli
mov
cmp
gs
mov
xor
insl
sbb
hlt
and
int
gs
jne
shl
dec
ja
popf
icebp
mov
and
inc
aad
shll
xchg
jne
mov
pop
scas
sti
fwait
scas
outsl
dec
mov
mov
lock
jg
gs
pop
stc
je
adc
xor
push
mov
xchg
out
lea
push
dec
outsl
push
dec
add
stc
mov
lcall
outsl
cs
daa
imul
data16
inc
aaa
setp
fimuls
push
pop
and
push
mov
mov
inc
loope
fs
sbb
push
ss
jecxz
adc
xchg
icebp
mov
cmp
pop
mov
sbb
into
repnz
fists
dec
aaa
addr16
out
imul
pop
pushf
push
ja
adc
dec
push
dec
int3
xchg
jle
out
fistpl
adcb
scas
inc
int3
fildl
adc
movsb
sti
cwtl
or
xchg
imul
fildll
adc
fistpll
fwait
xor
dec
clc
cwtl
jecxz
or
mov
test
or
call
pop
push
adcl
and
into
loope
out
aaa
lods
das
ret
mov
and
out
mov
cmp
out
push
clc
aam
in
xchg
addr16
pop
mov
push
lret
mov
mov
inc
fidivl
nop
xor
out
aaa
push
xor
dec
push
sbb
dec
and
lret
sub
pop
in
sub
repz
inc
rorb
sbb
mov
or
mov
mov
int
sbb
xchg
aas
mov
jecxz
sarb
out
sub
pop
test
sbb
xlat
int3
imul
jno
xor
cli
pop
adc
fs
mov
mov
dec
popa
cmp
sub
out
add
dec
int
hlt
cmp
loopne
adc
int
sahf
xor
pop
pop
xchg
sub
and
fidivrl
inc
mov
mov
mov
cli
fbstp
sbb
adc
sbb
sub
add
fdiv
outsb
cmp
jp
pop
pop
in
jbe
jl
push
dec
mov
xor
sub
inc
xchg
xchg
and
and
fstp
ljmp
sbb
hlt
divb
dec
std
mov
mov
mov
cmp
lea
mov
mov
mov
fisttpll
add
inc
xchg
cmp
test
aam
fwait
inc
and
clc
test
dec
out
cld
fsubrs
iret
outsb
lahf
in
ret
add
insb
jl
ja
mov
outsb
xor
mov
mov
outsl
push
add
push
and
std
or
pop
add
lret
sub
flds
or
incl
adc
pop
xchg
in
xchg
adc
sarb
cltd
outsl
sbb
mov
or
sub
jne
fistps
dec
xchg
jno
repnz
out
jae
xor
pop
imul
mov
add
mov
fildll
dec
js
push
pop
and
sbb
mov
addl
movsb
adc
rcrb
jmp
fimull
sub
push
lahf
inc
repnz
push
inc
adc
xor
xchg
leave
mov
sub
mov
test
adc
sbb
gs
jb
ret
dec
push
and
dec
lock
jo
add
xor
inc
xchg
inc
jno
mov
movsl
icebp
adc
push
or
aaa
lods
push
test
or
imul
dec
sbb
movsl
mov
ret
stos
pop
xor
fisttps
inc
xlat
arpl
cwtl
arpl
sub
pushl
xchg
mov
pusha
lcall
xchg
jbe
adc
jno
pop
repz
or
scas
xchg
sbb
xor
aaa
pop
dec
or
insl
dec
imul
mov
aad
adc
imul
ljmp
lods
int
hlt
movsb
xor
div
scas
das
cmp
jmp
mov
iret
pop
aam
and
inc
cwtl
js
rclb
mov
and
cs
ds
popl
shl
les
or
mov
adc
ror
lods
inc
sbb
rcll
lret
mov
mov
pop
pusha
negb
ds
mov
jg
in
notl
fcmovb
mov
jl
int3
mov
inc
or
idivw
jno
int3
bt
sub
dec
lret
scas
imul
mov
sbb
hlt
ljmp
sub
pop
fadd
out
into
dec
movsl
lret
adcb
mov
pop
ja
aad
divb
pusha
dec
repz
stos
xor
push
xor
mov
sbb
scas
ret
les
mov
sbb
stos
clc
int
ss
cmpsb
jge
cmp
hlt
push
mov
movsb
shl
fadds
xchg
pinsrw
dec
pop
xlat
xchg
out
pusha
rorl
insl
push
sbb
je
out
or
push
out
lahf
lods
mov
and
rcrl
and
inc
insl
int3
push
clc
or
lock
pop
jbe
pop
adc
aaa
ficompl
repz
mov
xchg
add
gs
aaa
pushf
jmp
loop
mov
bnd
jo
cmp
out
pop
neg
add
aad
xor
inc
clc
icebp
mov
sbb
dec
outsb
rcrl
stos
in
out
stos
pop
add
pop
sahf
shlb
cmpsb
je
insl
mov
push
hlt
adc
ret
ss
out
mov
add
pop
ret
sahf
mov
add
dec
in
int3
insb
sbb
lcall
cmp
mov
xor
stos
add
sbb
pushf
into
iret
test
je
add
mov
popf
mov
adc
jno
inc
mov
ljmp
mov
and
insl
xchg
adc
dec
cwtl
in
cmp
es
sub
xlat
movsl
aam
leave
xchg
aad
jbe
in
mov
out
es
mov
jl
out
sbbb
inc
pop
pop
jmp
xchg
mov
pop
mov
into
clc
cwtl
xchg
roll
cmp
mov
out
push
sarl
mov
iret
rol
repz
addr16
cmp
xorl
xchg
dec
notb
sbbb
addr16
mov
gs
es
xchg
add
jg
dec
push
int
test
mov
sbb
pop
sbb
into
mov
in
inc
stos
and
push
daa
cmp
xchg
leave
leave
sti
testb
hlt
sub
dec
sbb
pop
dec
clc
cmpsl
or
mov
add
sub
sbb
inc
nop
dec
and
fisubl
mov
sub
dec
pop
repnz
incl
lahf
adc
pop
cmpsl
mul
div
mov
nop
popf
idivb
add
sbb
and
pop
add
sbb
lret
inc
xchg
mov
push
sbb
movsl
test
jae
in
sbb
lock
add
mov
dec
or
sbbb
in
ds
mov
push
gs
add
lcall
pop
sbb
or
jb
subb
das
stos
xchg
ljmpw
cmp
xor
jmp
imul
gs
push
ss
push
aas
cmpb
repz
pop
jo
nop
sarl
xchg
mov
shlb
xchg
xchg
pop
sti
test
mov
xchg
ljmp
mov
notl
pop
aam
ja
sbbl
sub
xchg
sbb
mov
shr
and
loopne
aaa
popf
nop
loop
push
mov
pop
and
sbb
dec
test
inc
fwait
ljmp
inc
in
xor
xor
inc
ljmp
mov
nop
outsl
aam
das
mov
repnz
xor
int
mov
ljmp
cmp
dec
add
test
push
sar
and
fwait
inc
or
mov
ds
mov
cmp
lods
adc
mov
test
daa
lahf
lret
push
roll
fdivrl
loop
fisubrs
aaa
mov
sbb
push
mov
jl
sbb
repz
cmp
push
insl
cmp
xchg
pushl
roll
ficoml
push
push
insl
cmp
or
je
and
fst
xchg
cli
in
repz
loope
scas
out
pop
sbb
mov
fmulp
addr16
bound
out
mov
out
mov
and
fcomip
pop
push
in
push
pop
outsb
inc
hlt
in
pop
les
xchg
div
aad
loop
xor
dec
jge
mov
fwait
and
xchg
xchg
lcall
in
stos
fsubr
cld
lret
rclb
loop
mov
lods
mov
push
in
mov
out
mov
sbb
out
push
adc
sti
push
cmp
pusha
xchg
pop
in
ficoml
jmp
sbb
adc
mov
out
rcrb
in
dec
daa
xchg
dec
rcl
cli
orl
sbb
xchg
call
mov
in
jmp
sub
mov
cli
xor
inc
mov
sub
jecxz
sbb
movsb
mov
lret
lds
inc
jbe
nop
aam
xchg
or
adc
cwtl
data16
cmp
gs
push
out
stos
sarb
scas
jno
and
push
gs
cmpsb
xchg
test
pop
movsl
and
aaa
rcrb
cmp
addr16
aaa
or
bound
insb
gs
js
lock
adcl
js
mov
xlat
test
add
lahf
mov
sbb
dec
out
aaa
xchg
dec
xor
leave
xchg
mov
sbb
mov
xchg
mov
movsb
ljmp
xor
sub
cmpl
inc
push
pop
lea
mov
xor
mov
push
cmp
gs
fs
xor
sbb
cld
mov
out
dec
cmp
rclb
mov
mov
xchg
lea
mov
and
mov
fs
loopne
pop
popa
xor
mov
into
jmp
or
in
push
decb
or
stos
repnz
in
push
test
or
adc
gs
cwtl
es
int3
cs
add
push
ss
xchg
adc
call
xor
fs
dec
xchg
aas
sbb
sub
cli
dec
pop
repz
dec
push
insl
sub
out
shll
dec
mov
mov
cld
loopne
mov
loope
or
clc
mov
and
sub
ret
push
xlat
jno
cltd
es
mov
lret
daa
xchg
popa
out
cli
lock
pusha
or
xchg
int
cmpsl
je
pop
ljmp
out
shlb
es
inc
mov
pop
jne
addr16
fdivs
jns
mov
xchg
mov
jae
xchg
loopne
jne
add
shr
mov
push
jge
push
push
adc
mov
int3
inc
pusha
cwtl
pop
xor
inc
sub
lea
frstor
inc
mov
cmp
inc
cld
xchg
loopne
dec
data16
sub
repnz
loope
popf
fidivl
push
cmpsb
test
mov
add
dec
sbb
pop
nop
sub
pusha
adc
pop
les
jmp
movsb
cmpsl
mov
loope
out
add
mov
sahf
aam
pop
out
in
jne
clc
jmp
nop
jecxz
pushf
pop
iret
mov
xlat
lcall
cmpsl
sub
andb
cs
or
imul
mov
mov
into
sahf
call
orb
in
fisubrl
sub
cmc
nop
imul
xchg
xchg
sbb
xor
cli
mov
enter
push
repnz
aam
fs
and
mov
pop
gs
cmp
jno
sub
pop
sub
xlat
xchg
inc
cwtl
pop
adc
mov
sbb
into
sbb
mov
inc
pop
push
sbb
inc
test
cli
push
ror
lock
int
add
cmp
xor
mov
icebp
and
mov
sti
and
repz
nop
icebp
sbb
xchg
cs
aam
mov
repz
lods
mov
and
imul
popf
pop
data16
xor
mov
pusha
xchg
inc
jmp
push
sbb
or
sub
jne
in
rcrb
sub
and
rcrb
sbb
popf
fs
nop
pop
clc
sub
pop
cmp
mov
daa
dec
or
jno
and
push
test
add
mov
sbb
xor
sub
pop
add
pop
jmp
xchg
js
mov
stos
and
jmp
xor
cwtl
or
test
cld
inc
push
add
and
push
mov
xchg
clc
test
out
sbb
xor
lea
sbb
sbb
movsb
xlat
out
mov
dec
sbb
sub
mov
cld
je
mov
jbe
int
repnz
rcrb
mov
xchg
cmp
and
sub
jmp
pushf
lock
sub
rcll
dec
sete
out
dec
or
mov
arpl
pushf
stos
out
addr16
mov
sbb
push
das
ss
leave
scas
loop
xor
or
mov
dec
addr16
xchg
pushf
add
push
jo
jne
add
and
push
push
lret
mov
sub
cmp
xor
imul
xor
clc
xor
int
repz
popf
nop
scas
jge
xchg
pop
fdivs
and
paddb
pop
fldl
mov
outsl
mov
js
outsl
push
loope
pop
lahf
xchg
leave
pop
add
in
cwtl
fstps
pop
pop
adc
pop
xor
sahf
mov
loop
addr16
push
fs
adc
inc
push
mov
push
cmp
aaa
orb
inc
nop
dec
gs
aas
pushf
call
jge
and
cli
movsb
add
fwait
inc
cs
call
in
mov
mov
clc
jl
clc
jmp
jbe
and
mov
adc
sub
pop
sti
movsb
sub
xchg
int3
test
dec
in
cmp
iret
inc
xchg
sbb
insl
sbb
mov
inc
shll
ss
jmp
outsl
or
repz
out
sti
pop
ret
cli
dec
stos
rorb
mov
aas
in
loopne
xor
ret
in
loop
fidivrs
cmp
mov
push
fs
pop
ror
aam
fadd
loopne
bnd
jmp
mov
test
jno
iret
mov
lret
leave
push
pushl
pop
fsubs
sbb
cwtl
push
jg
inc
pop
xor
lret
jle
push
clc
je
out
cmp
xchg
loope
sbb
lods
xchg
flds
stos
dec
scas
testl
loopne
mov
mov
ror
jno
aas
enter
es
inc
xor
cwtl
cli
iret
clc
jl
leave
add
push
adc
inc
mov
jmp
pop
lock
pusha
mov
ss
cmp
xor
stc
mov
rcll
push
gs
pop
mov
dec
pop
ljmp
push
push
jo
xor
fs
mov
xchg
icebp
cwtl
inc
xchg
call
push
fildll
mov
dec
inc
imul
in
mov
xchg
in
test
in
in
ljmp
mov
and
or
jae
sarb
es
inc
jmp
or
cmp
push
adc
cmc
rolb
xchg
pop
xchg
add
std
mov
jo
pop
pop
pop
movsb
dec
scas
outsl
add
jae
mov
fwait
xchg
inc
jmp
inc
mov
mov
jecxz
mov
fucomip
cmpsl
shlb
addr16
inc
push
shrb
test
sti
mov
sbb
clc
sub
mov
add
pop
dec
loop
xchg
mov
mov
int3
shll
and
dec
xchg
push
shl
loope
loope
aam
pop
ljmp
mov
mov
cli
mov
cli
xchg
jb
dec
pop
mov
cmpsl
aad
aam
jge
sub
mov
ljmp
test
outsb
pushf
iret
es
mov
nop
adc
int
xor
gs
jmp
pushf
imul
fadd
aam
mov
sub
mov
mov
mov
xor
jecxz
xchg
insl
push
xor
out
mov
sub
adc
sbb
cmp
inc
aad
hlt
andl
aam
pop
int3
mov
mov
mov
lods
fcomip
addr16
mov
ss
sbb
sbb
xor
inc
test
sub
xlat
divl
mov
movsl
pop
pop
ds
cmc
cwtl
aaa
out
aaa
push
pop
es
xchg
pop
mov
lcall
mulb
nop
mov
xor
movsb
faddl
testl
or
xor
aad
fwait
bound
out
fs
push
sub
pop
pusha
scas
sbb
pop
lods
pop
or
xor
scas
dec
repnz
and
pop
cmp
xor
pop
xor
movsl
je
test
cwtl
sbb
push
inc
xor
stos
inc
scas
xor
mov
mov
xor
cwtl
adc
and
mov
gs
add
sahf
push
icebp
push
repz
addr16
jp
dec
fcomps
xlat
mov
push
neg
cmpl
dec
inc
hlt
or
fs
cmpsl
and
lret
xchg
cmp
and
inc
int3
pop
jo
push
mov
fnsave
js
iret
addr16
clc
std
sub
xor
push
lds
frstpm(287
cmp
lret
push
xor
dec
cltd
call
imul
sbb
inc
rcl
mov
push
xor
jp
pop
mov
push
loope
and
movsb
cli
xor
ds
mov
ret
xchg
repnz
in
fnstsw
pop
xchg
loopne
pop
fsts
dec
inc
and
dec
aam
push
inc
cld
mov
xchg
test
std
test
lret
mov
cmp
jle
xor
pop
and
push
rorb
inc
loope
pushaw
push
incb
pop
sub
xchg
in
pop
push
add
mov
pop
jo
loop
inc
mov
lods
jns
fwait
cmpsb
les
xor
mov
jbe
adc
pop
jns
ret
aaa
xor
xchg
jae
into
mov
lods
fwait
stos
dec
sub
push
mov
mov
sub
pushf
mov
rorl
sub
jmp
pop
js
test
lods
push
cwtl
inc
xchg
xchg
pop
cmpsb
cmp
nop
aad
xchg
insb
les
mov
mov
movsl
out
dec
bound
add
ret
call
outsl
icebp
mov
mov
cli
incl
cmp
ret
mov
fs
arpl
sahf
call
lds
lcall
push
or
leave
hlt
gs
jae
or
sbb
pop
cld
rolb
orps
pop
pop
adc
out
dec
pushf
and
jne
test
mov
jg
xor
shlb
cmpsl
inc
mov
pop
xor
leave
mov
cltd
outsb
stos
xchg
push
dec
outsl
fmuls
cmpsl
test
mov
test
mov
cmp
aad
push
stos
lock
inc
int3
icebp
sbb
ljmp
nop
mov
dec
jg
xchg
imul
loopne
and
clc
js
or
cmp
rorb
shll
rorb
xchg
push
mov
bnd
clc
push
adc
pop
mov
or
add
xor
dec
js
sub
sub
mov
into
pop
cmp
push
clc
inc
nop
fcoms
adc
scas
out
jecxz
adc
roll
aad
sub
xor
test
cmp
push
loopne
pop
clc
sbb
and
in
pop
lcall
mov
cmp
mov
pop
push
or
cmpsl
mov
xchg
sub
dec
ret
pop
mov
xchg
adc
inc
mov
clc
push
mov
pop
insb
sub
data16
pop
cmc
aad
loopne
cmp
incb
outsl
addl
in
mov
or
imul
and
out
xchg
int3
imul
scas
xchg
jmp
jle
ret
cmpsb
jp
jle
sbb
ja
prefetcht0
dec
incl
iret
add
mov
or
lret
imul
pop
hlt
aam
pop
sub
ja
jge
xlat
test
or
and
testb
xchg
jbe
mov
dec
xchg
lds
repz
imull
adc
cmp
add
mov
pop
inc
test
test
mov
repz
dec
pushf
ss
dec
cmpsl
mov
repz
fidivrl
pop
add
lock
xchg
push
pop
pop
mov
test
and
cmc
xchg
jmp
test
mov
fcmovnb
push
mov
outsb
filds
ljmp
mov
jne
aaa
aas
outsl
scas
data16
andl
push
or
and
pushl
push
or
cmpsl
pop
cmp
cli
daa
pop
add
out
mov
shl
clc
sub
fbstp
in
lret
mov
rcr
sub
pop
or
ljmp
mov
fstpt
push
repnz
outsl
and
out
ljmp
add
loopne
repz
add
cmp
mov
lock
shrl
xor
popf
jnp
push
mov
test
inc
jae
jne
in
mov
int3
pop
mov
xchg
sbb
test
or
inc
lret
stc
pop
adc
inc
jmp
cmpsb
add
popf
mov
mov
std
cmpsb
nop
adc
mov
repz
xchg
inc
xor
cld
out
lahf
rclb
iret
pop
cmp
cmc
sahf
insb
mov
xor
jle
fdivr
andl
xor
dec
fadd
jne
test
jbe
mov
inc
and
sahf
cmp
aad
inc
pop
mov
lret
loopne
jmp
mov
or
push
jp,pn
movsl
stc
mov
lea
xor
jne
loopne
pop
notl
pop
pop
lea
inc
jnp
fwait
std
jge
mov
mov
pop
imul
stos
fs
mov
repnz
mov
or
popa
mov
sub
scas
mov
xor
leave
gs
inc
xchg
hlt
rolb
in
arpl
pop
xchg
dec
cs
cli
insl
push
cmp
loopne
fsubrs
pop
adc
movsb
into
xor
pop
push
adc
aad
test
xor
stc
clc
push
rorb
and
mov
sbb
lods
sti
mov
add
loopne
fldenv
sbb
sub
movsl
aas
sub
hlt
loopne
std
inc
imul
clc
movsb
jecxz
mov
gs
xchg
fidivl
sbb
jp
mov
cmpsl
hlt
cmp
mov
sti
hlt
loop
push
shll
jge
dec
push
repnz
sub
imul
mov
notl
dec
cmp
test
adc
xchg
dec
mov
fbstp
out
adc
lea
std
push
ljmp
in
add
and
fbld
leave
loopnew
clc
dec
call
aam
dec
sub
lret
inc
or
pushf
data16
xor
xchg
adc
add
outsl
mov
pushf
pop
nop
pop
fcoml
loopne
dec
decl
inc
mov
je
aam
adc
push
pop
aaa
push
jo
mov
imul
shrb
xchg
sbb
int3
jl
sub
in
or
inc
fdivrp
xchg
xlat
mov
sub
or
les
mov
and
jae
xchg
inc
push
in
cmpsl
inc
cltd
jecxz
and
aam
stos
mov
dec
lods
loop
jp
mov
mov
ja
push
mov
jecxz
ret
jb
fistpl
and
mov
popf
cmp
cmp
sbb
das
sub
jecxz
pop
arpl
mov
xchg
xchg
push
lock
insb
in
push
mov
aaa
fmul
cmpsl
call
adc
addr16
pop
iret
inc
jne
mov
hlt
in
and
test
testb
or
pop
mov
dec
ret
lahf
repz
xchg
xor
mov
fstp
lcall
add
jno
outsl
fldcw
fiadds
pop
fsubrp
ljmp
iret
or
pop
mov
icebp
scas
xor
sbb
gs
fadds
xchg
add
dec
inc
lahf
inc
shrb
ret
push
mov
jb
ss
fdivs
pop
cld
add
out
aam
adc
jmp
or
dec
mov
pop
lcall
inc
jecxz
push
int3
divb
dec
dec
inc
or
push
jl
lahf
iret
cwtl
call
mov
test
mov
adc
xor
ljmp
rolb
xor
or
sahf
ret
cmc
push
xchg
lea
hlt
xlat
data16
cmp
rcl
aas
daa
imul
or
sub
jmp
push
add
rcll
mov
call
hlt
rcll
cwtl
insl
sbb
data16
fcomp
or
rcrb
mov
inc
mov
xor
push
dec
test
cwtl
loope
cwtl
fucomip
push
notb
sbb
jge
pop
push
mov
movl
push
xchg
adc
or
rorb
je
cmp
dec
test
fsubrs
out
fistl
cwtl
mov
lahf
xor
pop
xchg
in
push
lcall
xchg
push
int3
mov
aam
dec
int
push
sbb
jo
mov
cli
xchg
test
push
adcl
inc
mov
mov
xor
push
xor
inc
inc
test
in
test
jecxz
cmp
push
call
or
add
sub
pop
test
push
dec
clc
nop
pusha
test
jns
jmp
fidivrs
sbb
cmp
shrb
push
xlat
push
mov
repz
lds
jno
popf
mov
mov
push
stc
pop
push
fstpl
aad
in
test
pop
and
mov
cmpsl
xor
out
mov
jecxz
push
es
outsb
mov
rcr
xchg
push
adc
jne
or
jno
imul
inc
cwtl
sbb
pop
and
outsb
popa
lret
push
add
cmp
xchg
cmp
and
into
add
adc
adc
aas
repz
lcall
fwait
sub
shll
push
cli
jmp
push
test
sub
jno
push
clc
xor
test
jno
sbb
push
inc
xor
pusha
mov
mov
dec
push
pop
xor
stos
sahf
xchg
mov
out
test
dec
and
neg
call
fmull
inc
sbb
sbb
int3
mov
out
jns
das
out
lret
mov
movsb
mov
jle
ljmp
lods
cmp
stc
cmpsb
sbb
xchg
xor
fcmovnu
pushf
xchg
add
xchg
fnstenv
mov
mov
cmc
pop
pop
hlt
data16
pushf
jg
jae
lret
cmp
push
mov
es
jne
repz
loopne
mov
aas
mov
push
popf
into
inc
ja
sti
add
sub
out
fimull
into
iret
jno
mov
test
ss
xchg
leave
pop
lock
mov
out
cwtl
fnsetpm(287
je
or
jo
pop
sbb
lcall
mov
inc
xchg
imul
out
data16
enter
fstpt
insl
lds
fnsetpm(287
jne
repnz
sbb
data16
cmpsl
xor
nop
sbb
cli
shlb
sub
mov
int3
gs
sbb
dec
call
addr16
mov
inc
mov
fidivrl
ficoml
pop
repnz
adc
or
xchg
fadds
out
dec
inc
mov
dec
inc
aad
clc
jge
jns
sti
and
jo
cwtl
les
mov
mov
divb
into
xorl
jns
xchg
rcr
cli
insb
stc
dec
jl
push
aas
push
add
bound
iret
test
fbstp
pop
cmpsb
testl
adc
mov
dec
pushf
test
imul
cmpsl
fidivl
sbb
xlat
arpl
rorl
arpl
aam
out
mov
xor
pop
add
gs
push
stc
dec
cmp
andl
xchg
dec
dec
cmp
or
imul
and
popf
and
sub
leave
sahf
jg
sub
pop
xchg
pmulhw
add
lret
mov
mov
xor
cmpsl
cwtl
adc
ret
hlt
or
or
jo
xchg
stos
call
lcall
cwtl
xlat
jae
pushf
imul
mov
push
mov
xor
aas
sub
add
out
int3
repz
dec
sarb
xchg
jl
lock
cli
aad
stos
dec
and
and
iret
cmpsl
fidivl
rcrl
push
imul
ds
shrb
sarb
les
mov
mov
jns
add
cmpsl
mov
leave
xor
int
es
pop
mov
xor
mov
daa
mov
add
or
popf
ret
out
add
dec
cli
ret
adc
aas
add
into
cmpsb
aas
sbb
and
inc
jno
pop
mov
arpl
fadds
or
in
imul
es
or
enter
std
data16
push
jo
mov
inc
in
inc
add
addr16
lahf
daa
adc
negb
pop
insl
stos
and
pop
mov
inc
or
cmp
in
sub
dec
fadd
stos
rep
ljmp
and
mov
lret
cmp
pop
mov
das
fildll
hlt
js
sbb
lds
mov
outsb
mov
dec
sub
push
shlb
movsb
push
mov
repz
rcr
and
mov
jno
xchg
dec
hlt
ret
out
jb
xlat
cwtl
mov
mov
pop
inc
and
push
in
mov
in
ss
fidivrl
cmpsl
mov
test
cmp
shr
cmp
loope
mov
fadd
cmp
rcl
cmc
fiadds
iret
add
sub
xchg
inc
push
aad
add
movsb
in
repnz
xchg
mov
aam
icebp
lock
jbe
filds
icebp
mov
lds
cmp
dec
sarb
mov
loope
jo
inc
aas
neg
in
sub
dec
js
das
ret
push
jmp
dec
jmp
xorl
mov
popf
lret
ljmp
sbb
sub
fcomip
adc
xor
inc
fwait
gs
out
xchg
je
xchg
mov
inc
pop
ljmp
cli
clc
mov
cmc
inc
jne
push
mov
dec
nop
insb
fdiv
cld
rcrl
movsb
mov
cmpsl
sbb
cltd
scas
pop
sbb
xchg
int
imul
xchg
xlat
jle
std
aas
adc
mov
out
sbb
nop
mov
test
mov
xor
call
add
rcl
loop
mov
fs
sub
lods
and
cltd
sbb
xor
int
pop
xor
test
cli
fisttpll
mov
jbe
and
mov
push
sub
push
sbb
dec
mov
cmpsb
or
jp
test
or
mov
popf
add
xor
jo
mov
dec
dec
mov
cmpl
mov
sub
or
std
cli
pop
cltd
mov
jns
mov
mov
pop
cmp
mov
inc
push
cld
hlt
dec
push
shrb
mov
push
call
dec
pop
stos
and
push
scas
or
nop
decl
mull
pop
mov
cmc
cmp
lahf
inc
das
gs
dec
into
loopne
addb
or
pop
repz
int3
mov
leave
mov
xchg
jmp
test
lret
mov
sarb
dec
das
idiv
ss
nop
nop
xchg
call
fs
fnsave
ror
and
movsb
push
mov
dec
repnz
xchg
imull
push
jecxz
mov
sub
inc
lds
push
fldenv
or
pop
or
enter
sarl
repz
inc
jne
inc
aas
pop
repz
int3
inc
or
add
sub
mov
sbb
outsb
push
mov
adc
sub
pop
test
fstpt
mov
rep
pop
clc
mov
xor
xlat
mov
pop
in
jmp
mov
nop
xor
and
inc
adcb
sub
pop
test
jno
int3
sbb
aaa
ss
out
enter
out
cmp
mov
cltd
xchg
mov
mov
jecxz
stc
sti
jo
push
pop
into
clc
xlat
ja
sbbb
and
xor
add
mov
mov
addr16
lret
fmuls
repz
nop
inc
aam
cmpsb
or
or
call
and
mov
int3
mov
aad
jno
jle
ds
cmp
mov
and
push
lock
sti
push
int3
pop
add
xchg
daa
sbb
and
dec
sbb
fdivl
inc
or
js
dec
es
xchg
gs
sub
lea
xchg
aas
pop
xor
cmp
jo
test
cmp
sti
push
mov
or
lahf
push
add
fsubrl
push
aad
xchg
cmpsl
rcr
adc
ss
mov
loope
cmc
or
out
sar
jno
lahf
inc
pop
cwtl
outsb
imul
inc
gs
and
into
mov
rclb
pop
cmpsl
inc
sbb
mov
faddl
mov
lds
add
ret
cmp
in
addb
pop
cli
adc
pushf
inc
sub
ljmp
pop
mov
push
jge
stos
push
das
mov
sbb
jl
loope,pn
sub
jecxz
aas
xchg
flds
insl
xchg
mov
xor
inc
mov
cmp
or
xlat
pop
mov
lea
lea
in
outsl
and
add
aam
sti
xor
nop
and
fs
lret
cld
xchg
lret
orl
xchg
outsl
jnp
test
add
inc
dec
mov
push
mov
mull
xor
jne,pt
xchg
xor
mov
cmp
and
push
push
pop
rcr
lods
push
add
lds
out
sub
mov
xchg
cmpsl
mov
pop
xlat
jl
jmp
inc
sahf
jbe
out
les
cmc
mov
ret
adc
dec
push
xor
rcrl
in
lret
negb
stc
mov
lock
mov
push
lds
movsb
roll
xor
or
test
mov
ret
roll
mov
dec
insl
roll
mov
into
pop
addr16
mov
sub
repnz
aam
xchg
lods
pushf
fsubrs
ljmp
clc
cmp
pop
mov
xchg
pop
repz
xchg
mov
add
in
clc
jno
cld
cwtl
jne
inc
sbb
sbb
clc
clc
es
loopne
mov
repz
and
push
clc
movsb
lds
cmp
pop
push
sarb
scas
daa
xchg
insb
and
jecxz
lcall
inc
lea
pop
pop
fcomip
ret
adc
and
cmp
lods
and
pop
roll
jbe
lea
int
adc
or
pop
pushf
pop
in
out
xchg
ja
and
lds
xchg
pop
and
mov
push
inc
adc
lcall
fisttpl
fnstsw
fisubrl
iret
out
fdivrl
mov
cmp
call
repz
push
add
imul
aam
mov
mov
or
bound
mov
sti
lcall
or
jge
stos
cmp
call
sbb
hlt
mov
mov
cmp
call
sbb
pop
jmp
mov
jne
cmp
mov
or
in
rol
aad
xchg
sub
cmc
out
xchg
pop
int3
cmp
adc
pop
cld
mov
xor
jns
mov
push
jbe
out
mov
push
mov
fisubrl
ret
mov
cmp
movsb
ret
inc
call
sub
pushf
popa
scas
jmp
cltd
das
or
xor
ljmp
adc
pop
jp
in
hlt
iret
orb
stos
mov
cmp
cmp
or
mov
mov
out
testb
sbb
inc
mov
movsl
xchg
mov
mov
adc
test
mov
push
ret
lods
imul
jle
loop
push
movsl
nop
out
pop
push
pop
adc
leave
ss
mov
loope
cmpsl
mov
fs
mov
je
pop
dec
push
inc
xor
lock
lock
xchg
cmpb
mov
sahf
icebp
cmp
mov
rol
aam
int
out
lret
xchg
jns
dec
inc
mov
je
lcall
fcmovnu
add
push
arpl
mov
xchg
in
test
cli
clc
out
data16
arpl
pop
scas
faddl
fdivs
pop
push
leave
fs
cmp
push
fistps
push
xor
sarl
aad
mov
push
hlt
ret
cmp
inc
cmpl
pop
clc
dec
xchg
adc
mov
push
icebp
xor
sbb
sbb
int3
test
mov
pop
std
pop
sub
lea
ret
sbb
movsb
sbb
cld
cmp
pop
mov
movsb
sarb
js
outsb
lea
sbb
aam
push
in
sub
fsubrl
add
cltd
mov
repz
scas
test
push
pop
clc
test
lods
sti
and
push
xchg
mov
xchg
lods
xchg
mov
popf
mov
jg
adc
fs
lea
mov
faddl
std
and
dec
jp
gs
pop
mov
pop
mov
mov
mov
hlt
test
test
mov
jno
lret
inc
iret
sub
les
or
call
add
add
xchg
push
mov
mov
mov
orb
mov
jmp
psrad
out
mov
arpl
mull
test
loop
scas
das
cltd
dec
pop
iret
popf
jo
xor
popa
xor
das
addr16
jmp
cld
jmp
es
movsb
lds
jecxz
cwtl
sbb
in
out
mov
ljmp
testb
cmp
push
lret
roll
push
inc
cmp
add
pop
sbb
pop
push
shrl
fcmovne
aad
test
fcomi
jp
hlt
add
fistpl
out
sbb
xchg
ficoml
movsl
adc
sbb
sbbl
orl
add
adc
dec
clc
stc
sbb
divl
xchg
push
mov
inc
test
cmp
sub
out
out
stos
cmp
mull
xchg
and
xorl
xchg
int
dec
inc
lea
mov
ljmp
clc
pushf
sub
mov
pop
out
stos
or
xor
xchg
xchg
mov
jle
mov
jno
lahf
movsb
repnz
shl
xchg
mov
aam
loope
cwtl
lcall
int
hlt
xor
add
das
sub
clc
mov
jno
rcrb
mov
or
jecxz
push
pop
mov
push
add
xor
xor
in
xor
push
cmp
outsb
xor
nop
out
or
push
fnstsw
loopne
mov
add
or
pop
popa
ret
and
cmp
jns
xchg
jno
or
ror
inc
push
shrb
xor
movsl
test
mov
jne
inc
sub
xchg
mov
push
mov
cltd
push
out
jnp
stos
dec
add
sti
jg
movsl
inc
insb
dec
cs
or
jns
loopne
mull
push
test
cltd
adcb
pop
push
ficompl
lret
push
fisttpll
push
jae
aaa
nop
cmp
out
jmp
cmp
fs
cmpsl
or
mov
fimull
rolb
cld
push
pop
daa
pop
cltd
lods
dec
mov
push
cwtl
mov
out
test
dec
outsl
nop
mov
inc
fucomp
ss
test
xor
mov
repz
mov
xchg
xchg
dec
inc
sti
es
dec
adc
or
xchg
les
jo
dec
jmp
push
and
xor
xchg
dec
mov
mov
mov
loop
jle
hlt
xor
cmp
mov
sbb
dec
rol
jmp
jg
sti
pop
xor
data16
out
jecxz
cmp
pusha
shll
inc
xor
outsl
mov
fs
adc
mov
scas
in
in
sbb
jl
pop
inc
iret
jmp
and
or
adc
testb
cmpsl
and
pop
out
fsubrs
nop
add
sarl
push
ljmp
mov
ficoml
jo
cmpsb
int3
neg
cwtl
add
ja
xor
jae
xchg
cld
pop
lock
dec
mov
movsl
repz
outsb
jne
xchg
cmp
xchg
addr16
add
pop
jno
fcompl
in
popa
pop
scas
test
mov
push
test
dec
pop
je
cmp
xor
cmp
iret
dec
sub
add
lods
xchg
cs
xchg
xlat
push
cmpl
stos
out
pusha
push
lods
xor
mov
rcrl
xchg
into
mov
mov
mov
popa
aam
nop
pop
sbb
inc
imull
and
aam
jg
sub
fsubr
movsl
and
jle
ja
cwtl
nop
cmp
mov
dec
sub
xlat
dec
jno
lea
mov
cmp
xor
pop
in
inc
fisubl
sbb
cmp
ljmp
pop
dec
cmp
jl
push
sub
inc
dec
clc
fmul
adc
sbb
fcomps
int3
dec
call
push
pop
mov
pushf
pop
int
mov
sbb
mov
xor
aam
aam
aas
rcll
sbb
aas
popf
sarb
or
jl
addr16
test
sbb
dec
aas
sub
loopne
leave
icebp
push
les
push
cli
aas
and
inc
in
aaa
into
fdivs
loopne
popa
out
lods
push
cwtl
inc
mov
ss
mov
dec
xor
mov
es
lret
rcrl
push
mov
fcomps
xlat
loop
fisubrl
out
loope
mov
popf
push
push
cwtl
fisubrl
xchg
and
in
mov
xlat
pop
fisubs
in
add
and
jae
sbb
add
fadds
jl
xor
call
sbb
cmp
out
pop
mov
jmp
es
cmp
shll
or
out
jo
stos
ror
idivb
and
push
es
add
gs
inc
mov
out
mov
mov
cmc
lea
std
jmp
xor
xchg
cs
sbb
leave
jg
sarl
xchg
es
push
xchg
mov
data16
mov
or
in
notb
sub
int
lods
lret
sub
test
add
or
xchg
lret
test
mov
mov
cmc
mov
xchg
shlb
jbe
and
cld
adc
sbb
loop
xor
aaa
insb
sub
inc
inc
xchg
into
jmp
push
jecxz
imul
push
pop
pop
imul
mov
ja
lods
fadd
jmp
cmp
out
lods
out
ss
or
sbb
jmp
or
in
js
dec
pop
dec
fildl
xorb
sbb
gs
adc
mov
jle
nop
imul
mov
cwtl
inc
pop
lods
xchg
divw
push
testb
bnd
mov
mov
lds
mov
in
das
sbb
xor
aas
xchg
mov
or
pushl
jg
sahf
outsb
in
repz
fs
mov
loop
mov
dec
xor
xchg
fwait
clc
data16
test
pusha
mov
rcrb
cmp
or
pop
sbb
int3
push
cwtl
push
xor
xor
sbb
sahf
lods
mov
lret
mov
pop
sbb
mov
out
adc
mov
daa
fcmovnu
repnz
shll
in
pop
nop
sahf
pop
mov
adcb
fistpll
cld
fs
adc
mov
push
lods
mov
out
pop
xchg
daa
and
mov
mov
sbb
lahf
and
mov
lret
dec
and
mov
in
jne
xchg
mov
rol
ja
mov
popa
cltd
aad
mov
jle
test
xchg
mov
sub
loope
cltd
cmc
push
imul
or
lret
jno
sbb
dec
jo
fcmovne
cmp
push
mov
push
pop
lret
das
xchg
inc
enter
dec
mov
sti
outsl
stc
sahf
aas
dec
and
dec
cwtl
sbb
mov
lea
divb
mov
sub
and
jge
mov
bound
push
push
dec
lock
push
sbb
fwait
sub
xchg
jne
fidivl
mov
sbb
out
outsb
testl
adc
outsb
mov
xchg
xchg
push
clc
push
in
fs
sbb
mov
pop
mov
arpl
push
pop
push
dec
mov
mov
das
inc
pop
push
dec
sbb
mov
in
sti
pop
cld
fidivl
push
or
mov
mov
mov
pop
adc
dec
mov
popf
inc
nop
mov
and
fbld
inc
xchg
dec
imul
mov
pop
cwtl
push
rol
dec
mov
mov
inc
mov
mov
div
xlat
movsl
sbb
in
push
scas
adc
push
mov
lods
fwait
jns
call
imul
fmuls
lds
add
and
xorb
mov
mov
xor
insl
adc
inc
cli
mov
dec
popa
mov
gs
mov
adc
xchg
xlat
test
mov
xor
into
sbb
add
pop
fwait
stos
push
loopne
js
clc
rcll
cmp
or
add
addr16
gs
in
jb
xchg
xchg
dec
dec
push
ret
sbb
lret
push
push
lock
jnp
imul
or
outsl
nop
sbbb
ss
pop
sbb
cmp
sub
jg
aam
paddsb
add
cld
in
adc
add
in
adc
xlat
test
cmpsb
pop
lret
leave
sbbl
and
mov
mov
icebp
fldt
fwait
xor
out
aam
xchg
and
dec
mov
xchg
push
insl
or
mov
push
adc
in
lods
push
xor
cmp
mov
and
mov
loopne
pop
js
movsl
repz
negl
mov
ljmp
mov
adc
aad
nop
jge
cmc
mov
pop
daa
ja
sub
pop
xchg
nop
pushl
loope
rcl
sbb
xor
loopne
daa
repz
out
jns
icebp
in
or
loope
jno
mov
jne
pop
rcrl
dec
mov
cld
jno
addr16
aas
clc
les
inc
mov
aad
jbe
push
cmp
sub
out
sub
mov
movsl
add
inc
fs
sub
xlat
aas
add
out
ficomps
stc
lods
insb
scas
pop
dec
push
call
faddl
clc
addr16
addl
cmp
mov
jo
xor
lcall
mov
sarl
test
jb
jae
leave
shl
sti
shlb
inc
adc
mov
cmp
and
into
fidivrl
jl
lret
xor
mov
repz
adc
popl
push
push
in
loopne
push
pxor
in
ss
dec
scas
mov
xchg
in
jbe
pusha
aad
xor
add
call
sti
push
fwait
pop
xorl
aas
call
sub
lods
mov
sub
je
push
pushf
ss
out
out
stos
mov
hlt
addr16
fdivl
and
cmpsl
cli
xchg
mov
out
bound
js
fmul
les
adc
stos
rcl
imul
xchg
loope
adc
ret
sbb
pop
jle
cmpsb
popf
mov
mov
fiaddl
adc
lds
pop
and
and
shr
fwait
and
fdivr
jmp
outsl
mov
adc
jnp
adc
xor
psubb
in
push
fdivrp
mov
loop
xchg
cltd
xchg
mov
push
rclb
add
xchg
ss
nop
cld
out
iret
fmull
loop
lret
push
stos
adc
les
jmp
nop
mov
jp
gs
fisubrl
add
mov
adc
pop
outsl
push
fistl
add
into
ja
xchg
and
fadd
pop
mov
dec
in
xchg
jno
mov
inc
imul
aas
divb
repz
int
mov
pop
and
gs
jns
fidivs
in
sti
jns
sbb
ret
jno
js
mov
or
shl
mov
outsl
mov
sub
sub
jp
mov
push
push
cmp
nop
sbb
mov
xchg
outsb
stc
js
pop
out
shl
cmpsl
mov
push
lods
call
add
mov
lcall
mov
add
out
sti
sbb
test
mov
xchg
cmpsb
push
jl
push
fisttps
fucomi
inc
sbb
gs
addr16
test
scas
into
xchg
hlt
daa
scas
fmuls
or
xchg
mov
negl
fildll
movsl
jb
hlt
and
shlb
pop
loope
test
cwtl
in
repnz
stc
je
dec
mov
xchg
cwtl
int3
fists
jg
sub
jne
mov
in
jbe
push
xlat
xorb
popa
movsl
addl
mov
mov
dec
cmpsl
mov
push
xor
ljmp
cs
adc
rcr
cmp
out
call
mov
ficoml
rcl
push
aam
mov
mov
and
xor
nop
test
das
shr
sub
std
xchg
xchg
aaa
jns
push
outsb
or
imul
orb
out
lods
cltd
pusha
dec
bound
push
xchg
xor
daa
nop
cmpsl
testl
gs
cmp
mov
mov
out
cmp
jmp
adc
aas
fsubrl
jnp
loop
fnsave
mov
jmp
jl
in
comiss
pop
mov
xchg
clc
gs
sahf
aam
in
call
or
imul
data16
xchg
inc
mov
roll
imul
xchg
add
cmp
mov
in
bound
push
imul
lds
movsl
and
cltd
fdecstp
in
lret
cmc
mov
pop
hlt
data16
out
mov
mov
pop
fisttpl
adc
repz
mov
mov
nop
pop
mov
mov
and
pop
or
shl
je
sub
sahf
cli
clc
xor
inc
pushl
sub
sub
std
in
jae
mov
mull
lahf
popa
or
shll
mov
xor
push
pop
inc
push
cmp
and
adc
dec
mov
mov
mov
xchg
and
jl
sub
movsb
pop
fdivrs
ljmp
fsubr
jbe
les
or
addr16
scas
inc
out
xchg
cmc
jb
add
or
or
mov
cmp
dec
out
into
pop
sub
aas
mov
lds
push
sub
adc
cmpsl
addb
jo
jns
sti
xchg
in
ja
adc
push
add
cmpsb
repnz
inc
out
adc
std
adc
ds
rorl
inc
mov
repz
insb
test
pop
inc
repz
ljmp
xor
stos
cmp
xor
jae
jp
jnp
orl
lret
mov
pop
test
dec
inc
mov
cltd
fs
out
push
pop
sbb
xor
inc
arpl
push
ljmp
call
jne
mov
out
dec
mov
mov
sub
test
push
sarb
stos
mov
sbb
pushf
xor
sbb
in
mov
fildl
bound
sarb
lahf
lea
shl
pusha
jno
ja
sub
push
mov
mov
lret
mov
adc
sub
mov
inc
outsl
jmp
add
dec
pop
jl
inc
and
mov
fsubl
sub
and
repnz
jno
sbb
pop
popf
jl
cmp
cmpsl
aam
repnz
loop
cmp
push
nop
mov
jno
aad
cwtl
sbb
lret
shrb
sub
or
nop
push
cmp
les
fcomp
and
mov
ret
add
mov
lret
nop
mov
xchg
das
incl
inc
jns
into
lahf
push
pop
popf
pushf
shrb
pop
int3
subb
jle
dec
sub
cmp
mov
and
cmp
out
xor
dec
mov
mov
cmp
sbb
and
xor
out
nop
sub
sbb
test
pop
push
or
dec
cmpsl
add
jbe
add
ja
repnz
inc
mov
fwait
aad
lahf
ja
mov
into
xchg
pop
push
hlt
cmpl
dec
negb
inc
sbb
in
mov
gs
jno
push
mov
sbb
push
add
mov
cli
jp
lret
push
jno
mov
dec
fistl
test
leave
movsl
pop
imul
ds
add
sbb
cmp
test
data16
call
pop
jns
jne
mov
xor
or
mov
mul
ret
punpcklwd
adc
sahf
cmp
push
cmpsb
iret
and
sbb
inc
in
xchg
cli
fidivl
jecxz
jmp
into
fsubl
clc
testb
mov
mov
add
pop
aam
xor
dec
xor
in
mov
repnz
into
pusha
mov
cmpsb
xlat
mov
pop
clc
insl
int
dec
cmp
repnz
mul
nop
addr16
rorl
js
std
lods
sbb
aad
xchg
mov
into
cmp
sbb
ret
jmp
add
and
loope
addb
mov
sbb
jl
mov
mov
into
cmpsl
jg
outsl
push
fs
movsb
movsl
lea
xlat
int
pop
mov
mov
add
xchg
xchg
sbb
bound
test
insl
jns
aas
jp
or
sarl
inc
sub
insb
jnp
inc
shl
mov
pop
pop
xlat
sbb
and
call
adc
fildl
cmc
insb
inc
frstor
addr16
int3
nop
gs
data16
test
sub
jo
mov
aad
call
daa
and
inc
dec
neg
jl
adc
lret
dec
cwtl
cwtl
les
adc
nop
andl
add
push
jno
pop
pop
sar
call
fidivrs
outsl
cmp
out
sahf
adc
pushf
imul
pop
xchg
mov
jb
pop
sahf
pop
cmp
js
push
push
sub
call
jo
cmp
cli
mov
jge
adc
mov
mov
cmpsb
dec
mov
cmp
mov
subb
shll
imulb
mov
hlt
xchg
gs
inc
add
mov
icebp
insb
gs
movsb
inc
jno
repnz
pop
pop
cmp
xchg
popf
sub
call
or
out
das
push
push
add
test
orl
xchg
scas
ljmp
or
test
movsb
or
xorl
lock
sbb
mov
test
cltd
adc
sub
out
das
and
cwtl
out
out
lcall
addr16
test
mov
movsb
sbb
dec
pop
sbb
out
lods
sub
dec
dec
pop
or
xchg
pop
imul
jp
out
cld
clc
shlb
out
out
fildl
frstor
cmpsl
notb
into
scas
mov
xchg
xchg
rolb
insb
mov
mov
push
repnz
mov
dec
or
inc
call
or
mov
inc
es
les
and
arpl
addr16
jno
and
jns
dec
out
testl
adc
pop
push
inc
repz
shll
in
pop
add
pop
loopne
mov
inc
insb
inc
jecxz
and
inc
mov
int
popa
jle
or
pusha
mov
cmpsb
xor
leave
lcall
pop
pop
int3
mov
add
inc
push
out
movsl
sub
pusha
add
dec
ja
arpl
cmp
inc
inc
out
pushf
hlt
pop
sub
dec
in
mov
cmp
sti
nop
sub
xchg
push
test
inc
xchg
fists
gs
clc
mov
mov
repz
clc
jnp
sahf
xlat
sbb
mov
pop
fsubrl
js
xor
in
dec
mov
fdiv
fmul
fstpt
mov
insl
sub
xchg
fistpll
add
inc
call
mov
imul
iret
call
pop
fisubs
mov
pop
xor
jnp
shlb
inc
sti
jne
data16
mov
cwtl
jge
push
fisttpll
aas
or
pop
push
cmpsb
pusha
jmp
add
iret
iret
xchg
xchg
pop
rcl
push
ja
ret
jmp
mov
imul
fistpl
gs
nop
clc
and
sbb
inc
xlat
xchg
push
lock
cmp
jbe
mov
pop
into
call
lcall
stos
add
pop
jo
repz
jno
test
ljmp
adc
int
stos
mov
sub
mov
mov
imul
inc
in
aaa
jmp
es
mov
js
cwtl
out
movl
xchg
clc
add
mov
mov
in
sbb
xchg
out
lds
mov
mov
loopne
aaa
cmpsl
hlt
xor
adc
add
mov
pop
adc
aas
inc
cmpsb
dec
xchg
mov
aad
push
test
test
pop
xchg
sub
mov
add
jp
cltd
mov
mov
fadd
ljmp
clc
xchg
xchg
jle
cmc
mov
mov
xchg
iret
imul
xchg
inc
out
inc
pop
fld
in
addr16
lods
nop
push
pusha
cli
and
outsb
pop
leave
pop
js
add
jp
ljmp
scas
push
mov
movsl
xchg
mov
lods
dec
cmpsl
ljmp
gs
inc
insl
jns
ds
aam
push
js
or
pushf
push
loop
dec
loopne
pop
jno
xor
call
popa
scas
inc
pop
cmp
xor
mov
pushf
int3
or
xor
movsl
aaa
lret
pushf
cs
insl
dec
loop
test
and
push
fcmovb
ficomps
mov
loopne
mov
and
lcall
mov
adc
cmpl
mov
mov
fldenv
sub
mov
aam
les
adc
and
push
jbe
cmc
movsl
test
pop
sub
dec
adc
xor
pop
sub
cmpsb
aaa
lret
xchg
js
repz
sahf
aas
cmp
cli
fwait
mov
test
nop
negl
push
lock
ret
daa
test
and
in
lcall
call
test
pop
repnz
mov
push
es
mov
jb
mov
lahf
and
or
xor
movsb
and
fmuls
out
mov
mov
jne
lahf
repz
aaa
and
xchg
jb
and
xchg
fistl
xchg
lret
stos
stos
lock
inc
aam
sub
xchg
out
pop
int
mov
sbb
out
mov
push
add
inc
outsb
mov
call
into
push
pop
test
test
std
inc
leave
pop
sbb
pusha
int3
test
inc
mov
ljmp
push
jno
dec
xlat
test
subl
js
loope
aam
aaa
in
and
out
bnd
inc
ja
push
out
dec
in
mov
mov
out
shlb
int3
cmp
or
loopne
inc
int3
push
and
xchg
lcall
lock
insb
or
int3
lock
mov
gs
xchg
mov
je
dec
das
or
das
mov
add
dec
stos
stc
adc
incl
xor
sub
xchg
loope
movsl
xchg
gs
jmp
cmp
push
mov
jg
dec
loop
ss
dec
fwait
jmp
and
dec
outsb
outsl
ficoml
pop
dec
sub
in
mov
push
xchg
loopne
jb
movsl
push
cmpsb
mov
and
cmp
xchg
cmpsl
cmp
mov
inc
xchg
pop
jo
adc
jno
int3
int
inc
mov
jnp
xchg
pop
push
and
fsubrs
nop
cld
mov
mov
xor
and
sbb
adc
orb
lret
jo
push
adc
js
push
jecxz
or
add
mov
cmp
jb
cltd
lods
jnp
aas
imul
arpl
into
mov
pop
inc
add
popf
lcall
jl
iret
das
push
xchg
test
xor
sbb
dec
fisubl
push
loop
outsl
sub
cmp
and
fldt
xor
popa
popf
cli
js
cmp
cmp
jo
insl
jmp
mov
aas
cld
bnd
repz
and
gs
mov
mov
jbe
ret
mov
pop
mov
clc
scas
les
aam
fldenv
gs
iret
popf
out
aam
or
in
jmp
dec
call
mov
jno
testl
icebp
jl
lret
test
lcall
sbb
sub
mov
sbb
test
pop
or
ljmp
jge
in
xchg
aad
push
jle
pop
mov
pop
add
or
ljmp
mov
pop
push
sub
xchg
bound
daa
xor
add
into
mov
hlt
dec
jb
sbb
movsb
sbb
add
mov
add
repnz
cwtl
mov
pop
and
test
imul
outsl
mov
inc
dec
pop
jmp
mov
je
push
jae
lret
jae
rcrl
inc
or
bound
stos
push
pusha
push
push
inc
test
iret
mov
push
mov
out
jno
inc
std
cmp
add
mov
dec
mov
jae
mov
ljmp
and
out
fstl
pop
inc
xor
rcrb
fwait
push
mov
xor
mov
dec
repnz
mov
popf
inc
mov
into
notb
test
xor
ds
movsl
xchg
dec
mov
out
loopne
mov
add
movsb
cli
sbbl
jno
ja
push
push
addr16
push
mov
xchg
mov
pop
imul
xchg
inc
rcrb
pusha
call
sub
pop
mov
xor
sub
jno
mov
out
xchg
xor
mov
into
mov
mov
dec
nop
int
gs
xchg
xchg
push
ljmp
xor
inc
lahf
shl
fdiv
std
je
addr16
push
adc
repz
pop
xchg
jle
into
mov
xor
into
test
mov
fimull
test
gs
pop
push
repz
push
mov
lds
jne
cmp
cmp
int3
lock
clc
xchg
mov
or
shrl
lcall
inc
hlt
push
inc
int3
lret
add
icebp
mov
aas
mov
lahf
push
faddl
pop
pop
mov
aaa
pop
cmp
sarl
adc
mov
lret
mov
push
loope
adc
movsl
in
aaa
mov
cmp
push
rol
jmp
js
push
lahf
clc
je
leave
out
aas
fcoms
xchg
lret
int3
test
loopne
aam
xchg
orl
inc
or
cmc
mov
adc
push
ss
mov
inc
mov
wbinvd
sbb
das
inc
lcall
dec
int3
cmpsb
and
jns
xor
repz
inc
clc
lcall
hlt
int3
aas
xchg
or
and
pop
jge
shl
jbe
into
rol
aas
outsl
stc
test
popw
inc
fs
pop
insb
pop
sbb
xor
and
daa
sbb
cmp
fdivl
adc
dec
iret
sbb
mov
out
pop
jb
ret
pop
push
sbb
pushf
fldenv
jns
sbb
addr16
mov
es
jno
int
mov
imul
test
in
inc
xor
stos
dec
ss
inc
mov
mov
dec
fwait
mov
fsubrs
inc
or
test
mov
jmp
and
lret
addb
imul
sub
repz
shrb
adcl
fsubp
mov
push
out
scas
out
aad
and
sbb
push
mov
push
rcl
fcomi
adc
or
or
ljmp
inc
lds
sbb
data16
push
jno
test
push
mov
sbb
push
mov
hlt
loopne
mov
aas
fstps
out
repnz
push
sbb
js
sbb
xlat
je
in
rclb
mov
add
sbb
call
dec
roll
enter
mov
mov
pop
mov
push
loop
xchg
cmp
dec
loopne
pop
scas
daa
cli
sub
sahf
daa
daa
test
and
inc
push
push
jp
sbb
adc
rcrl
mov
lcall
cmpsb
mov
in
mov
mov
dec
push
mov
fidivl
mov
icebp
nop
nop
adc
mov
push
jmp
mov
sub
test
jae
xchg
lcall
add
fs
repz
addr16
out
gs
mov
mov
outsb
outsl
lret
xchg
and
clc
cli
cmp
adc
xor
cmp
fdivp
sarl
fsts
hlt
xchg
fisttps
or
sbb
cwtl
dec
dec
or
sbb
sbb
add
cld
fcmovb
stos
ficomps
jae
and
repnz
xchg
jo
fs
bound
inc
xor
inc
mov
pop
pop
mov
mov
std
out
ja
jo
aad
mov
loope
pop
mov
fidivrl
pusha
dec
dec
rorl
cmpsb
and
pop
inc
cli
cwtl
jnp
mov
pop
inc
mov
sub
in
icebp
xchg
jo
sub
mov
dec
nop
test
inc
in
mov
cltd
daa
xor
loop
sar
ss
sbb
dec
cli
sub
int3
imul
push
push
sbb
movsl
cld
pusha
and
call
mov
outsl
dec
mov
movsb
push
ds
daa
cwtl
push
movsb
mov
dec
jecxz
in
in
add
repz
flds
sbb
pop
daa
por
stos
lcall
mov
pop
testl
xor
push
lcall
sti
push
xchg
imul
insb
loop
mov
push
dec
push
push
jns
xchg
pop
pop
push
xor
bound
and
or
ss
lret
xchg
push
dec
sub
scas
pop
add
aam
sbb
and
push
mov
cwtl
jmp
imulb
dec
scas
popf
xlat
out
xor
dec
test
adc
pusha
xchg
aam
ret
inc
and
jo
push
in
sub
pushf
pop
xchg
push
jb
fs
out
inc
mov
fs
or
dec
push
and
cmc
mov
out
insb
mov
jmp
jge
movsl
xchg
mov
scas
sbb
adc
sbb
inc
leave
add
cs
das
push
js
cli
faddl
stos
dec
pushf
cli
dec
aaa
mov
call
daa
cmpsb
outsl
out
ret
shll
imul
add
inc
pop
shll
dec
push
lret
aaa
mov
push
fwait
jne
aam
add
mov
repz
repnz
addr16
jno
mov
out
push
fiaddl
dec
fsubl
jge
cmp
das
mov
push
aas
add
negb
xor
mov
fadd
rcll
sbb
dec
and
vmovntps
mov
into
push
add
stos
scas
fcmovnu
cmp
lea
mov
sub
mov
xor
sub
mov
add
mov
mov
xchg
mov
in
lds
and
sub
xor
faddp
lret
pushf
xor
addr16
push
sub
nop
cmp
jo
jmp
adcb
ss
stos
mov
mov
jmp
push
and
xor
hlt
cmpsl
aam
popf
push
xchg
and
jl
fistpll
cmp
jo
xor
movsl
int
and
cld
ds
jo
sub
int
jno
fwait
pop
inc
dec
add
int3
je
pushf
mov
daa
outsl
int3
out
loopne
jecxz
mov
repz
stos
pop
rcrl
cmp
aas
iret
or
shr
and
xor
cmp
pop
ds
nop
jl
shlb
pop
scas
mov
inc
or
add
adc
xor
fldcw
xorl
cmp
sbb
ss
push
xor
pop
cmp
xchg
mov
shlb
popf
enter
imul
jb
fsub
lock
add
lret
xchg
pusha
test
das
mov
dec
mov
mov
rorl
mov
imull
sub
and
jl
add
dec
std
shl
mov
dec
push
insb
lret
outsl
cld
cmpsl
rol
adc
push
out
mov
jle
and
add
add
xor
pop
test
fdiv
inc
loopne
mov
sbb
sbb
mov
jmp
sbb
xchg
repnz
xchg
stc
or
call
mov
imulb
mov
mov
fistps
out
sub
push
pop
fistps
jmp
lods
jnp
pop
imul
xchg
push
push
lods
out
cmc
sub
lods
adc
clc
fucomi
in
jmp
mov
adc
in
shlb
adc
mov
add
pop
mov
in
or
test
xlat
cmpsb
pop
push
mov
out
or
das
dec
inc
and
mov
ja
or
jl
inc
call
jg
xchg
pop
lea
jg
adc
out
mov
iret
movsb
jmp
iret
add
into
push
nop
loopne
in
xlat
mov
cmc
or
in
jge
das
sub
lret
push
dec
in
rorl
fisttps
imul
fucomp
out
lret
test
sahf
pop
movsl
ffree
mov
push
sub
mov
cmp
cmpsl
test
lods
in
push
ljmp
mov
and
push
stos
or
in
fstpl
dec
ret
popf
test
in
stos
call
out
dec
jmp
ret
ljmp
popf
sub
inc
insl
out
daa
rcll
in
cltd
cmp
sarb
aam
dec
test
sbb
mov
repnz
push
pop
and
or
or
xchg
xchg
cmp
or
xchg
movsb
jno
mov
mov
ljmp
mov
or
and
pop
mov
xlat
outsl
or
shr
shr
xchg
push
sbb
fsubr
mov
mov
and
out
loop
inc
mov
add
lahf
lods
mov
cmpsb
adc
imul
pop
aam
pop
jnp
mov
call
lret
mov
or
pop
call
out
pop
lods
xchg
in
aas
xchg
cld
adc
dec
pop
je
es
pop
leave
cmpsb
int3
aad
pusha
mov
cwtl
scas
adc
sahf
dec
jmp
fwait
data16
aad
pop
add
rcr
loopne
lods
call
fldl
dec
dec
jecxz
xchg
mov
mov
xchg
lods
sbb
mov
mov
ss
add
and
mov
lods
in
xlat
push
or
imul
xchg
testb
push
cmc
or
in
fucomp
arpl
lret
push
test
hlt
inc
pop
xchg
push
adc
daa
adc
rolb
aas
into
aaa
mov
xchg
insl
jo
push
sub
nop
or
into
outsl
call
and
aad
jp
adc
add
andl
mov
mov
bound
cli
movsl
leave
gs
lock
lahf
mov
insl
cltd
inc
cmp
jno
test
insl
lock
cmc
fcomps
push
push
pop
and
rorb
dec
leave
call
cmp
push
sti
inc
mov
inc
test
outsl
fdivr
gs
test
add
les
push
inc
mov
add
test
mov
insb
cli
lds
in
push
xor
ljmp
lcall
jne
and
fdivl
ret
push
in
out
leave
arpl
pop
push
frstor
mov
loope
hlt
out
dec
fdivr
out
addr16
into
fcompl
movsb
out
les
mov
jnp
mov
mov
clc
fisttps
inc
jbe
fistps
cld
repz
out
lods
xchg
out
add
inc
or
push
cli
pop
ret
jnp
gs
fld
inc
int3
stos
sub
mov
and
jle
in
out
sbbl
in
xchg
jno
mov
shrl
iret
and
xchg
mov
inc
add
test
jno
cmp
repnz
mov
and
xlat
std
jno
push
sarl
xchg
xor
mov
push
arpl
jle
imul
and
testl
fbstp
insb
pop
les
shlb
popf
mov
cld
inc
mov
push
jb
cmp
stos
mov
and
add
sub
mov
mov
mov
shll
test
add
pop
inc
sbb
add
shlb
xor
nopl
dec
iret
mov
xor
mov
add
out
cmp
adc
cmpsb
inc
ret
clc
int3
sbb
lcall
aaa
xchg
add
shrb
cmpsl
jno
pop
mov
in
orl
sbb
lret
imul
sbb
clc
inc
aad
cmc
idiv
or
mov
and
gs
mov
and
lret
inc
int
mov
jmp
pop
fcomps
jno
push
add
push
jb
iret
repz
in
inc
xor
and
ret
sbb
nop
cmp
rorl
mov
aad
mov
mov
push
push
lods
repz
movsl
and
add
daa
mov
jl
fstl
xor
xor
rclb
out
sub
xor
sub
test
push
mov
inc
fsubr
xchg
xor
xchg
out
insb
mov
aas
xchg
xchg
loopne
add
sbb
jmp
xor
mov
jmp
jmp
decl
cmp
test
les
daa
cmp
mov
pop
cmp
call
and
mov
sbb
dec
pop
bound
dec
bound
dec
sbb
add
mov
lret
sub
jmp
decb
sub
shl
aas
stc
scas
add
jb
leave
fadd
sbb
xchg
cmpsl
in
ljmp
ret
jl
xor
adc
mov
push
sub
jbe
movsb
cmp
scas
in
jmp
nop
xchg
cmp
int
fistpl
dec
incl
xchg
aad
mov
leave
out
sub
lea
xlat
add
in
xchg
sub
hlt
sti
hlt
scas
push
mov
jb
out
lods
out
ficomps
in
in
mov
push
enter
fwait
and
ds
fistl
inc
lret
out
or
cmc
mov
xor
lcall
loope
cmp
cltd
push
idiv
mov
iret
mov
test
mov
addr16
cmp
xor
iret
in
xchg
testl
and
sbb
add
inc
cmp
jb
push
add
scas
clc
sub
in
test
adc
cmpsb
xor
mov
and
jb
fwait
sbb
test
jo
push
inc
mov
mov
jns
adc
mov
mov
fstp
divb
rcrl
adc
sub
xchg
mov
into
scas
das
pop
pop
cmp
dec
pop
repz
sbb
push
loop
jge
pop
mov
mov
dec
cltd
mov
bnd
xchg
shl
sbb
sbb
mov
mov
jae
pop
mov
pop
loop
lcall
repnz
mov
je
adc
clc
rep
adc
out
mov
xor
mov
insb
dec
jae
sub
sbb
xchg
jno
jmp
dec
adc
fcomp
mov
and
xor
clc
push
aas
jae
push
ret
mov
outsb
push
daa
xlat
repnz
insb
pop
dec
sbbb
fists
pop
clc
nop
scas
jle
sbb
ja
lods
fisttps
fsub
out
push
ffreep
rorl
movsl
leave
jno
loopne
lods
pop
rcrl
dec
movsb
out
lods
leave
sbb
movl
pop
mov
int3
mov
mov
jno
push
in
sbb
jno
inc
sub
sbbl
addl
pop
add
xor
hlt
xchg
mov
xchg
in
out
add
in
inc
sub
scas
movsl
sahf
lret
pop
xchg
mov
jecxz
jp
xor
pop
loop
lret
xchg
xorl
xchg
cmp
aad
outsl
sbb
repz
xchg
push
add
inc
pop
or
and
push
cwtl
cmp
sub
repnz
js
hlt
sbb
jae
stos
pop
dec
dec
jno
mov
adc
leave
xchg
push
hlt
scas
das
pop
jbe
fwait
sub
ror
fwait
push
icebp
ds
rolb
sbb
cmp
movsl
xor
je
cmp
into
xor
jne
mov
push
pop
decl
cmp
cmp
jmp
sbb
cmp
jmp
and
push
sbb
data16
pop
fstl
jg
dec
push
cmp
test
pop
push
notl
subl
mov
cmp
mov
xlat
fildl
mov
repz
cli
data16
mov
xor
cmp
xor
inc
pop
jecxz
lret
xchg
fisubl
cmp
das
fwait
cmp
outsl
fdivl
pushf
out
fidivl
inc
addr16
mov
add
jno
sahf
jl
mov
stos
icebp
cwtl
jg
and
out
hlt
pop
data16
addr16
fiaddl
push
aaa
clc
xchg
sbb
mov
pop
imul
loope
lcall
leave
in
dec
js
rorb
and
movsb
call
mov
fstl
cmpsl
ret
adc
cli
inc
fldt
out
mov
add
repz
fdivrs
adc
in
movsl
lret
pop
jne
movl
cmp
call
mov
es
mov
cmc
gs
adc
adcl
test
xchg
or
and
ficoml
aam
jo
call
out
je
pusha
das
fstps
add
clc
test
sbb
ljmp
pop
mov
sub
lea
lods
sbb
and
in
pop
js
sarb
xchg
inc
mov
test
insb
bound
jl
in
push
push
fs
push
mov
lods
stos
pushf
call
rcr
dec
xchg
gs
lods
xchg
push
pushf
push
sub
sbb
xchg
sahf
pop
adc
call
sbb
mov
sbb
test
cmp
sbb
scas
shr
xor
clc
shrb
ret
or
jmp
mov
or
pop
insb
sbb
jmp
or
cwtl
xchg
ss
xchg
sbb
mov
testl
pop
inc
fildll
jmp
aam
clc
std
int
fwait
cmp
pop
lret
dec
insl
rcr
pop
nop
add
mov
outsb
and
adc
shl
in
into
pop
dec
nop
push
cmpl
ljmp
mov
jmp
jo
loop
and
mov
dec
daa
mov
mov
into
sbb
xchg
push
addr16
fs
aam
repnz
hlt
push
nop
mov
das
test
or
movsb
cwtl
insb
dec
cli
out
ds
mov
mov
dec
pop
aaa
hlt
andb
negl
adc
rcrl
mov
jae
call
mov
loopne
fsubs
jmp
jo
pop
jl
incb
mov
or
adc
gs
ljmp
mov
shlb
sbb
test
repnz
sbb
bound
dec
loope
mov
sub
mov
test
jge
xchg
stos
cmpl
push
movsl
xchg
jle
mov
jns
dec
fsubp
jae
push
cmpl
loop
imul
xor
xchg
xor
xchg
inc
iret
aaa
mov
fwait
and
mov
dec
xchg
jne
inc
xor
push
mov
jbe
jbe
repnz
in
lahf
gs
dec
mov
cmp
out
cltd
pop
lahf
rorl
test
les
mov
loop
ljmp
sbb
aas
xchg
add
arpl
into
or
sbb
push
mov
sbbb
repz
mov
ds
pusha
out
test
gs
sub
inc
sbb
movsl
lahf
and
sub
mov
push
aas
stos
out
or
fs
loop
jne
ja
in
sub
orb
fwait
pop
loop
mov
fsubl
and
and
in
iret
loope
divb
push
das
mov
data16
or
shr
pop
pop
cmp
loope
inc
sbb
sub
dec
popf
sarb
std
adc
sbb
mov
in
in
jo
popa
inc
adc
mov
aaa
subb
pop
pop
pushf
xor
stos
xchg
aad
cld
pop
lock
sub
cmpsl
cs
jmp
sbb
mov
mov
push
pop
mov
bound
and
xchg
mov
jmp
jne
std
sahf
add
cmp
lods
aam
xor
lret
stos
js
pop
or
cmp
shlb
das
mov
sub
imul
add
pusha
sub
dec
movsb
xorb
ret
inc
cmpsb
in
fistps
xchg
jmp
bound
jb
addb
mov
fsubs
jns
xchg
stos
lods
incl
jno
bound
mov
fwait
inc
sbb
lahf
hlt
int
mov
sbb
mov
out
not
daa
ret
rcrl
repz
clc
loopne
test
imull
cmp
mov
nop
mov
movl
fsub
adc
into
ret
mov
daa
std
filds
cmpsb
pop
and
aam
sbb
rolb
outsl
sub
and
sub
pop
inc
add
and
vshufpd
sarb
lods
mov
aam
loop
mov
and
or
pop
fldt
dec
mov
pusha
repz
sahf
cmp
jne
test
imulb
pushl
mov
inc
arpl
push
jge
gs
aaa
dec
aad
fistpll
inc
popa
inc
in
dec
mov
or
fimuls
lahf
push
stos
and
pop
lahf
cmp
push
movsl
lcall
mov
pop
xchg
inc
add
cmp
aaa
sahf
pop
int3
cmp
xchg
xlat
ljmp
lret
jno
mov
push
movsb
lcall
fildll
lock
andl
mov
xchg
mov
cs
adc
inc
sbb
cmp
aam
mov
sbb
jmp
mov
jno
je
popa
jp
insl
push
outsl
and
adc
xor
sahf
mov
std
dec
xor
lea
cmpsl
popa
mov
push
add
or
or
cwtl
dec
bound
dec
sbb
push
cmc
repz
mov
mov
loope
imul
jbe
mov
inc
aam
fimull
imul
pop
nop
ficoms
inc
clc
mov
imul
xchg
cld
mov
add
sbb
xor
leave
xchg
jae
cmp
fstl
arpl
out
pusha
aad
dec
daa
insb
mov
sub
ds
jl
sbbl
jnp
mov
out
or
xor
lock
xchg
test
xor
insb
jmp
addl
xchg
fstp
cmp
xor
mov
xchg
hlt
jno
mov
xchg
mov
lret
push
inc
ficompl
dec
cmp
and
in
call
inc
adc
mov
ss
push
lcall
aam
sub
add
adc
repnz
sahf
kortestw
cmc
fs
jno
mov
xchg
mov
call
jge
repnz
and
aad
and
stc
mov
lret
push
mov
dec
pop
or
add
and
in
cmp
xchg
xor
mov
xchg
fidivrl
xchg
and
scas
mov
aas
mov
mov
ss
clc
scas
ljmp
invd
mov
cmp
cmp
pusha
xchg
dec
adc
test
cmp
lods
jecxz
shrl
sub
mov
xor
test
xchg
push
mov
adc
notl
xchg
clc
sub
in
pop
fwait
or
mov
daa
lods
fisubl
gs
movsl
das
cwtl
mov
in
pop
aas
inc
fnsave
stos
jne
xchg
cld
cwtl
mov
jo
fnstsw
xlat
or
xchg
mov
test
cs
lahf
pop
imul
in
push
repz
adc
fistps
pusha
aad
sarb
xchg
movsb
sub
insl
xchg
sbb
sbb
push
mulb
faddl
mov
aas
popf
mov
fisttpl
pop
call
fstpt
les
sbb
sub
xchg
lret
push
add
syscall
movsl
incb
mov
cmp
cmpl
out
lret
xchg
and
sub
iret
inc
shll
iret
outsl
inc
push
repnz
movsl
mov
test
in
call
lret
rol
mov
aaa
adc
mov
jno
add
lret
cmp
pusha
sbb
ja
bound
cmc
sahf
add
mov
lock
lahf
push
idiv
cli
push
pop
lds
cmp
cwtl
add
out
fmull
pop
mov
ljmp
pushf
rcr
pop
cmp
mov
les
ret
xchg
mov
jbe
insl
sbb
popf
in
mov
jb
push
ds
out
cmp
fildll
jecxz
xor
jae
vpshaq
hlt
dec
bound
dec
inc
addr16
mov
xor
fldcw
popf
jecxz
xchg
faddl
fisttpl
sub
adc
sbb
arpl
xchg
inc
dec
mov
xchg
jne
mov
sbb
push
xor
xchg
pushf
jle
outsb
xor
push
dec
add
sbb
jno
jmp
push
xor
adc
push
lcall
mov
stos
xchg
fstpt
movsl
pusha
hlt
push
sti
inc
ljmp
mov
xor
add
cwtl
and
outsb
fildl
xlat
mov
mov
ror
rcr
test
cmc
sub
imull
aaa
test
jmp
dec
lcall
addb
dec
daa
mov
dec
fmuls
incl
pop
lods
aad
add
out
inc
mov
jecxz
push
shll
ficoml
test
xchg
push
enter
je
aas
dec
pop
rorl
insb
adc
adc
loopne
scas
jecxz
mov
inc
dec
push
mov
mov
push
iret
sbb
sti
add
das
out
pop
in
xchg
push
mov
int3
aas
push
ret
hlt
mov
outsb
dec
repnz
pop
outsl
mov
inc
js
rcl
lods
mov
jecxz
jb
xlat
out
pop
mov
adc
add
mov
popf
out
jnp
xchg
nop
lahf
dec
aaa
lret
pop
mov
out
cmp
aad
out
and
sub
fsin
pop
lods
cmp
xor
mov
mov
js
imul
pop
mov
jecxz
outsb
loopne
leave
incl
sub
js
out
mov
into
mov
xlat
dec
js
fisubs
mov
push
and
jl
xchg
out
cmp
adc
nop
pop
jo
pop
sbb
xchg
movsb
loope
shll
hlt
or
add
icebp
pusha
out
hlt
mov
iret
sbb
idivb
rep
add
outsb
push
daa
adc
pop
pop
xor
add
lret
pop
jno
or
cltd
repnz
push
iret
movq
jo
fsqrt
sti
mov
std
lock
hlt
aam
shlb
adc
jno
popf
vpsrlw
fidivl
fs
imul
pop
mov
push
push
mov
push
dec
dec
in
xor
push
xorl
mov
xor
repnz
and
les
pop
xor
mov
xchg
repnz
cmp
ret
xchg
rcrl
lods
mov
push
jo
add
nop
loop
jno
outsb
inc
cmc
dec
fistps
in
clc
les
mov
xchg
xchg
mov
pop
imul
inc
pop
mov
dec
inc
jmp
fs
roll
push
xchg
outsb
ljmp
or
xchg
stos
outsl
xor
lahf
rcrl
cmpl
xor
fsubr
repnz
not
popf
lcall
movsl
outsb
lret
inc
das
push
ss
sarl
add
insl
inc
cmc
arpl
xchg
mov
xor
dec
inc
ret
mov
and
repnz
mov
pop
ss
fldt
dec
fs
movsl
add
push
aaa
mov
fidivl
test
jb
cli
jo
scas
cmp
loope
sub
xor
aad
cmp
jge
mov
mov
or
mov
imulb
cmp
jg
testl
jmp
adc
mov
hlt
gs
xchg
xlat
mov
out
lods
faddl
push
shrb
mov
cli
faddp
int
adc
adc
jae,pt
cwtl
insl
cmpsb
pop
add
movsb
movd
bound
jge
mov
out
jne
mov
je
bound
cmpsb
mov
mov
jge
scas
scas
jne
push
scas
jle
lret
das
and
gs
cmpsl
mov
aaa
out
cmpsb
insb
nop
add
in
sbb
pop
sti
dec
iret
xchg
pop
ret
jmp
and
cmp
rclb
cmp
scas
mov
cmpsl
js
sub
jge
out
clc
les
in
and
jg
jecxz
push
shlb
or
pop
shll
mov
call
push
rorl
push
repz
test
out
fs
inc
jge
imul
inc
lahf
push
insl
adc
jle
popa
movsl
or
or
jl
mov
lcall
mov
and
cmp
push
lods
nop
mov
add
xchg
jne
or
out
loope
inc
aaa
sbb
fs
pop
fs
sub
mov
inc
out
pushf
fistpll
xorb
adc
test
pop
sar
pop
push
les
jno
mov
mov
cmpsw
mov
and
cmc
jmp
xchg
and
scas
jo
cld
idivl
sub
lods
inc
popa
push
out
clc
cmc
call
outsb
pop
cmp
and
inc
and
out
cmpsb
mulb
gs
lock
and
outsl
adcl
mov
adc
and
sbb
sub
shlb
fcompl
push
jmp
movsl
xor
faddl
mov
pop
je
push
cli
mov
lret
and
mov
inc
xchg
mov
mov
int
rep
push
cmp
loop
jb
mov
add
sbb
cld
sti
scas
xchg
sub
cmp
cli
je
inc
mov
cld
mov
dec
insb
iret
icebp
adc
ret
clc
test
mov
sbb
inc
adc
cmc
inc
push
push
sub
ljmp
mov
ss
shll
xchg
adc
neg
mov
test
in
xchg
jne
dec
mov
push
out
call
imul
adc
dec
lahf
shlb
test
imul
dec
xchg
inc
mov
xor
pop
add
jecxz
iret
cwtl
push
jl
insl
xchg
add
hlt
inc
in
ljmp
clc
jp
xchg
dec
js
cld
frstor
cmpsl
nop
xchg
xor
test
cmp
out
shr
nop
xor
pop
inc
call
cld
xor
cmpsl
dec
push
sbb
fsubrl
subl
or
cmp
sbb
jge
iret
jbe
mov
pop
sbb
pop
and
mov
mov
mov
and
testb
sub
cmpsl
and
sahf
jge
fidivl
mov
pop
sarb
shll
int3
les
dec
mov
rorl
fdivs
ds
xor
pop
mov
add
dec
push
pop
sbb
cmc
jb
pop
mov
cmp
test
mov
test
int3
pop
inc
insb
jno
fsubs
add
decl
rcrl
fwait
ja
inc
push
add
xlat
insb
add
adc
std
jg
adc
jle
icebp
je
and
xor
jl
aam
fdivs
fwait
and
inc
mov
sub
xor
int
mov
xor
jb
cmc
das
add
fistl
jle
add
push
jg
pop
lds
push
sub
lods
fistl
shlb
fadds
addb
inc
ljmp
jbe
pop
push
push
subb
sahf
sub
push
cmp
int
inc
sub
sbb
into
test
insl
cwtl
cmp
repnz
aad
iret
sbb
adc
add
mov
pop
jbe
fistps
repnz
mov
mov
push
xchg
and
dec
jb
mov
imull
pop
popf
fsubs
popa
xor
test
xor
xchg
inc
rorl
adc
jp
cld
mov
inc
xchg
xchg
adc
cmp
jmp
sbb
imul
xchg
xchg
and
sbb
lea
adc
cli
imul
and
and
daa
cs
lret
jmp
ds
or
xchg
mov
in
ljmp
gs
xor
inc
cmpsb
pop
xor
sbb
shlb
cmc
aad
lods
pop
dec
jl
mov
adc
ret
out
inc
mov
les
inc
xchg
xchg
xchg
call
sub
data16
loopne
test
gs
jns
fwait
aaa
outsb
call
xchg
imul
push
repnz
xor
nop
jle
adc
and
ljmp
or
jecxz
lahf
fistl
aaa
aas
xor
sarb
pop
repnz
push
xchg
mov
sub
xor
ljmp
inc
push
aam
inc
daa
mov
mov
in
mov
ljmp
fmull
je
jl
lcall
lods
adc
sbb
pusha
jno
sub
fisttpl
lock
and
xchg
mov
pop
loop
and
add
fucomp
xchg
or
movl
pushw
sahf
push
sub
mov
push
xchg
lcall
push
dec
xchg
ret
shlb
rcrb
cmp
jle
popf
int
add
push
xchg
jne
in
push
into
push
inc
pop
adc
mov
repz
mov
xor
shlb
xor
inc
test
mov
ljmp
sbb
jmp
lock
sub
in
push
fucomp
ret
lcall
push
aam
out
insl
lret
aam
cmpsl
mov
loope
cs
nop
repnz
xchg
pop
testl
fwait
pop
out
xor
aaa
inc
orb
mov
mov
push
xor
jae
fs
subb
inc
pop
jmp
jmp
adc
xorl
test
loopne
and
mov
cltd
mov
sub
xchg
mov
ljmp
xchg
outsb
stc
pusha
jo
out
cmp
lds
imul
or
jno
add
pop
cli
sbb
push
loope
insl
ficoms
cmp
inc
fnstenv
xor
les
dec
rcl
loope
addr16
hlt
cmp
mov
out
adc
push
out
jb
sub
hlt
push
cmp
nop
or
popa
ljmp
ficoms
add
or
cmp
addr16
mov
mov
testl
int
push
xor
push
cmc
mov
push
cmp
mov
lret
in
sbb
in
js
icebp
xchg
out
fisttpll
push
inc
mov
out
es
out
jp
js
popf
jae
int
sbb
ja
xchg
repnz
repz
clc
inc
mov
fwait
out
clc
pop
add
mov
add
fdivr
imul
pop
add
mov
sub
pop
hlt
clc
jmp
pop
push
in
nop
sbb
adc
flds
jp
repnz
ja
sbb
lcall
sarb
xor
push
lret
xor
adc
in
xchg
xor
sbb
mov
xchg
fwait
xchg
jne
scas
loope
lods
xchg
mov
and
aas
jl
shlb
pop
add
cmp
mov
or
and
lret
adc
xor
lods
pop
icebp
or
sbb
cmpsl
mov
mov
aas
cmp
imul
data16
xchg
adc
movsl
xchg
fcmovnu
sub
or
sahf
and
stos
adc
cmp
push
lcall
movl
dec
pop
outsb
imul
stc
popf
stc
cmp
or
mov
ret
ss
mov
les
add
fadds
das
gs
aad
mov
cli
fwait
jl
push
add
xchg
cmp
push
lea
idivb
mov
insb
push
adc
xchg
bound
inc
xchg
jno
xchg
pop
subl
xor
cltd
into
dec
data16
ja
loopne
mov
lock
ss
sub
xchg
shrb
int3
jae
xchg
cmpsl
mov
mov
mov
lahf
pop
pop
fldcw
fadds
shr
addl
je
aad
jmp
les
push
aam
dec
repnz
js
orb
xchg
in
out
sahf
fwait
push
movsb
sbb
test
and
enter
aam
ret
or
scas
clc
shr
mov
jnp
stos
es
int3
push
and
mov
and
sub
shr
sbb
in
push
aas
xchg
cltd
ljmp
push
lcall
outsl
nop
xchg
pop
ljmp
inc
and
iret
xor
loop
mov
test
sub
push
je
into
mov
mov
mov
and
in
push
cli
jne
adcb
dec
repnz
into
mov
aas
dec
mov
inc
cmp
sbb
mov
sbb
add
mov
sahf
rcr
xor
insb
adc
mov
xchg
mov
xchg
push
fiadds
popf
xchg
jb
pop
dec
popf
int3
rcll
stos
cli
repz
and
jmp
jno
test
inc
lods
cmp
int
test
sbb
das
cmpsl
push
ja
rolb
shl
fisubl
sbb
adc
test
repnz
std
mov
sbb
imul
ljmp
stos
outsb
fstpt
call
mov
jo
repnz
and
pop
push
lahf
push
add
and
inc
out
in
fwait
mov
sub
dec
adc
pop
sbb
hlt
mov
cltd
pcmpeqw
cwtl
xchg
inc
loop
rcrb
sbb
adc
fs
insl
sbb
cmp
pop
sbb
adc
cwtl
cmpsl
test
mov
xchg
or
push
ret
and
mov
mov
add
nop
jb
mov
iret
ror
cs
and
xlat
dec
mov
paddb
inc
adc
int
push
mov
in
popa
adc
add
in
call
mov
add
aad
ss
dec
and
push
xor
stos
push
ret
mov
out
stos
les
inc
mov
push
inc
add
cmpsb
int3
lock
test
aam
out
loopne
std
push
jl
not
int
js
stos
cmp
movsb
and
movsl
test
push
dec
xor
orb
mov
lret
in
mov
cmp
mov
push
rorb
jo
xchg
movsb
adc
rcrb
in
and
andl
push
or
stos
shlb
push
lods
and
add
in
rorl
in
stos
cwtl
clc
lock
test
clc
fiaddl
mov
shl
stos
dec
clc
mov
rorl
pop
adc
movsb
dec
push
xchg
shrb
push
mov
icebp
scas
add
and
leave
gs
push
mov
into
aad
inc
adc
movb
lret
inc
out
mov
mov
cmp
dec
loope
dec
divb
pop
adc
cmp
xor
jae
jg
movsl
sub
popa
bound
and
mov
lahf
lret
fcoml
arpl
cmc
pop
xor
adc
and
fidivrs
vmovd
movsb
mov
pop
mov
mov
adc
pusha
sub
xchg
div
mov
call
sub
test
jmp
adc
xor
or
pusha
shl
add
mov
mov
lods
cmp
sub
mov
xchg
add
push
pop
mov
rorl
das
fistpl
mov
imul
les
dec
dec
dec
xchg
mov
pop
sti
push
mov
inc
std
icebp
nop
inc
adcl
and
sahf
out
push
dec
icebp
cltd
mov
leave
gs
xor
rcrl
not
mov
les
repz
xor
mov
mov
js
std
pop
outsl
fdiv
mov
xchg
pusha
movsl
aam
xchg
xor
aaa
test
gs
movsl
sub
pop
in
cmp
mov
xor
pop
xchg
or
mov
cli
xlat
mov
sub
sti
mov
cmpsb
and
andb
and
jle
inc
mov
sarb
leave
out
cwtl
xchg
jae
xchg
jecxz
or
popf
ret
rolb
xchg
pushf
ud1
xor
jne
xchg
sti
xchg
add
insl
dec
mov
shrl
lret
push
clc
dec
dec
push
sbb
adc
in
dec
dec
jg
mov
inc
gs
xor
popa
adc
sub
in
and
iret
jo
lretw
mov
xchg
scas
out
jl
data16
rolb
pop
dec
jo
pop
test
sub
fwait
jmp
mov
les
stos
sar
cwtl
out
call
jmp
aam
push
jl
movsl
aas
out
lods
mov
repnz
les
lea
push
mov
negb
sbb
or
ret
adc
sbb
mov
not
out
sub
mov
adcl
push
mov
pusha
xchg
fldt
add
xlat
js
push
jmp
data16
daa
xor
sahf
fnsave
repnz
jb
cli
daa
inc
adc
in
out
fisubrl
aaa
movsb
rclb
mov
pop
js
aaa
mulb
cltd
jmp
mov
iret
lcall
sbb
jle
jb
fidivrs
int
mov
pop
mov
lret
cmp
rcll
test
sbb
test
rcr
cwtl
xor
mov
gs
xchg
icebp
pop
ljmpw
das
mov
push
mov
aaa
fs
test
ret
lea
and
repz
xchg
rcrb
in
or
lret
repnz
mov
mov
repz
in
out
roll
inc
in
je
enter
dec
fs
adc
rcl
and
out
jg
repnz
inc
xchg
cmp
push
push
sub
sarb
mov
bound
mov
jmp
adc
cmp
in
cmp
push
mov
jae
aaa
jp
jae
pop
pop
movsl
ret
pushl
add
cmp
nop
sbb
xor
ljmp
xchg
jge
push
shlb
xchg
sti
add
mov
xor
out
out
sub
cmp
jge
add
xor
jae
leave
add
insl
iret
pop
jo
mov
xchg
je
pop
dec
lret
out
shrb
cmpsl
cli
jecxz
or
mov
scas
jns
out
sbb
push
mov
push
dec
inc
mov
push
repnz
cmp
jmp
xchg
jl
mov
rcl
or
inc
in
dec
or
xor
jo
and
dec
scas
out
stos
inc
jae
jmp
cmp
dec
iret
in
sbb
and
inc
jp
nop
pop
movsb
xor
shlb
adc
shrl
pop
dec
adc
imul
out
push
std
mov
mov
roll
jl
aaa
mov
cltd
flds
pop
push
sbb
cmpsl
fsubl
lds
mov
mov
mov
push
xchg
sbb
inc
xchg
out
mov
push
jbe
loopne
pop
add
sbb
stos
in
mov
xchg
gs
mov
mov
adc
mov
out
ficoml
add
dec
jno
popa
xchg
push
arpl
imul
sbb
mov
ljmp
jmp
mov
fsubrs
add
sbb
jo
int3
enter
rolb
out
fprem1
xor
popf
jb
add
mov
inc
clc
loope
lcall
pop
inc
pop
add
movsl
repz
mov
dec
in
pop
sub
in
xor
mov
es
adc
mov
inc
push
xchg
and
sub
fwait
rcl
sub
push
test
clc
push
std
push
jl
out
imul
push
adc
jno
in
scas
ficoms
xchg
popa
dec
negb
aaa
and
add
xor
scas
inc
negb
stc
xor
roll
jmp
cmp
mov
cmc
xor
xor
jl
mov
cmp
filds
out
mov
bound
int
xchg
xor
imul
es
push
mov
push
mov
jg
xchg
sbb
dec
push
adcb
nop
vpor
push
pop
xchg
cmp
mov
sbb
mov
inc
cmp
aad
icebp
xor
push
cmp
clc
aaa
sub
ja
jae
popa
push
out
xor
xchg
add
test
insl
sub
mov
inc
ja
sti
fs
push
imul
pushf
sbb
push
sahf
je
in
add
fidivl
fsubl
int3
inc
mov
dec
pusha
mov
mov
in
xor
xor
fisttps
dec
mov
stos
sub
fs
mov
gs
repz
add
mov
imul
out
int3
fsubrl
mov
mov
jle
dec
in
icebp
sbb
pop
scas
cltd
sti
mov
in
add
arpl
in
xchg
push
cmp
nop
push
roll
push
subl
mov
sub
loope
leave
ljmp
xor
dec
loop
leave
jecxz
lods
aaa
cmp
jb
fwait
dec
cld
fmull
int3
aas
ss
pop
and
nop
int
mov
pop
xor
sbb
fsubs
mov
dec
inc
icebp
mov
lods
cs
xchg
nop
jb
out
inc
es
adc
dec
mov
add
mov
imulb
pushf
out
mov
fwait
dec
in
lods
imul
fs
mov
xor
ljmp
gs
outsl
fsubl
inc
test
mov
xchg
push
scas
xchg
mov
imul
aas
loope
pop
nop
xor
dec
loope
test
push
mov
mov
push
pop
xchg
sahf
int
push
mov
or
fdivrp
out
pop
aaa
mov
cmp
add
pop
clc
mov
mov
lahf
push
orb
mov
fbstp
inc
pop
mov
xchg
loope
xor
pop
cmp
mov
mov
repnz
mov
movsl
mov
aaa
cmp
rorl
sbb
outsl
out
mov
addr16
fdivs
out
fxch
xchg
fadds
outsb
in
ds
nop
mov
pop
mov
loop
mov
outsl
jae
mov
mov
inc
enter
rcrb
adc
stos
or
ljmp
movsl
insb
mov
sbb
fildl
jbe
lea
jl
add
stc
sub
xor
fimuls
popl
xor
sahf
cs
test
xor
insl
or
jbe
call
js
mull
lret
adc
lea
push
outsl
xchg
push
mov
sub
call
cmp
jmp
imul
scas
addr16
cs
and
insl
pop
dec
ret
rolb
mov
popa
leave
clc
cltd
in
cmpsb
shl
mov
aaa
push
xchg
test
lock
xor
in
add
imul
scas
mov
push
jg
and
fcomi
iret
stos
mov
jmp
pop
call
shll
xor
fwait
jo
jl
pop
xor
cwtl
in
jno
lcall
cmp
movsb
out
fnsave
adc
data16
outsl
push
adc
ljmp
dec
orl
call
jecxz
and
das
pop
insl
and
cmp
insb
pop
xchg
pop
and
xchg
daa
cs
cmp
nop
and
movsl
sbb
lahf
inc
movsb
scas
adc
mov
hlt
sub
fs
add
ds
xchg
xor
and
lods
fistl
jl
int
mov
dec
pop
xchg
xchg
jg
cmp
les
sar
mov
adc
push
test
aam
arpl
xchg
insb
dec
sti
sbb
cwtl
dec
hlt
xchg
lock
test
jmp
jmp
add
jne
nop
xor
fcomip
ficoml
xchg
mov
dec
adcb
movsl
mov
fs
mov
outsb
in
ret
iret
fldcw
cmp
in
or
xlat
xchg
and
jae
pop
mov
decb
dec
sub
clc
inc
fdivr
ret
outsb
xlat
xor
movsl
mov
dec
jg
clc
xchg
hlt
pop
xlat
xchg
repz
add
lds
sahf
nop
mov
es
cwtl
fimuls
jmp
pop
in
test
fisubrs
push
loop
insb
sbb
in
int3
rolb
lahf
clc
cmp
fs
dec
mov
jecxz
lock
js
sub
cmpsl
jno
adc
mov
mov
imul
push
mov
mov
dec
or
mov
je
ror
pushf
or
shlb
fbstp
jmp
sbb
aam
sbb
fdivs
mov
in
xor
jb
in
fsubrs
sbb
in
cmpsb
out
dec
insb
les
cli
lcall
popf
stos
mov
mov
mov
or
sbb
mov
pop
aas
ljmp
test
xor
repnz
or
rolb
js
ljmp
insl
cwtl
xlat
jecxz
push
cmp
adc
jmp
xchg
sbb
icebp
test
push
adc
call
lods
sub
or
es
mov
pushf
sub
add
sbb
and
popf
push
lcall
inc
out
pop
repz
negb
mov
jmp
mov
xchg
ss
bound
pop
mov
dec
jl
iret
jne
or
mov
cltd
mov
sbb
clc
test
int3
cmpsb
test
cmp
xor
xchg
sbb
ja
ss
scas
mov
sahf
pop
rorl
js
out
je
pop
je
int
cmp
in
dec
inc
mov
lods
out
mov
test
mov
lock
sbb
xor
or
lock
jb
cmp
mov
leave
out
sbb
mov
aam
jl
pop
inc
int
mov
ror
xchg
jl
cmc
cltd
pop
cld
out
std
out
mov
push
fs
and
imul
ss
cmp
cmp
push
sub
push
jmp
lods
aas
ss
sbb
andb
xchg
cmpsb
pop
ljmp
and
xor
cmp
aam
xchg
clc
ret
or
jecxz
pop
ja
scas
mov
xchg
jmp
ja
aaa
mov
adcl
jmp
repnz
jo
mov
push
test
xor
aaa
xchg
sbb
push
je,pt
mov
and
sbb
ret
and
mov
shlb
cwtl
and
gs
lret
aad
and
pushf
nop
rcll
rorb
sbb
cs
or
dec
dec
mov
push
ljmp
sbb
push
in
xor
cmp
fsubl
xchg
and
rcr
bound
xchg
mov
and
push
mov
push
loopne
gs
lahf
add
incb
sarl
mov
pop
cld
cmp
jle
int
push
bound
adc
or
sub
mov
adc
cltd
andl
xchg
repnz
into
inc
mov
cmc
rcll
sub
mov
mov
or
xor
jnp
xchg
nop
daa
test
push
push
dec
xchg
push
pop
xor
cmp
call
aas
dec
pop
insb
add
pop
fdiv
aam
mov
test
hlt
pop
dec
cmp
inc
mov
mov
test
mov
mov
ljmp
sbb
xchg
lret
rorb
mov
mov
adc
loopne
aam
jmp
shl
fcoml
or
dec
lahf
clc
sti
pop
sar
and
jecxz
push
out
rcrb
fistpl
leave
in
gs
ret
adc
aas
int3
aam
adc
notl
or
inc
or
cmp
jl
push
sbb
mov
dec
or
cwtl
pop
sbbb
cmp
jo
imul
mov
aad
and
ffree
sub
clc
out
mov
fs
rcl
sub
adc
in
scas
mov
out
xor
lahf
and
popa
or
add
rorb
or
fdivrs
test
orl
mov
sbb
inc
mov
mov
add
lahf
jno
clc
adc
leave
xchg
cs
inc
push
jne
add
pop
adc
xor
les
pop
sbb
std
xchg
in
mov
ljmp
mov
mov
mov
lret
xchg
ret
int
push
into
xchg
arpl
mov
add
movsb
push
add
int3
sti
inc
mov
bound
and
push
je
lret
out
les
in
cmpsb
mov
out
mov
push
and
dec
push
mov
movsb
jne
ret
xchg
shrl
pushf
xlat
outsl
mov
add
mov
repnz
mov
bound
dec
cmp
lock
aas
das
cmp
mov
dec
adc
neg
sahf
mov
jecxz
xor
dec
fmul
mov
dec
xchg
sub
sub
js
cmp
dec
sub
pop
fdivr
sub
jns
pushf
jle
dec
push
in
sarb
rcll
out
cwtl
mov
dec
gs
xchg
cmp
sub
lcall
dec
jne
inc
aas
adc
pop
rcrb
cwtl
add
imul
adc
mov
faddp
inc
icebp
cmp
aaa
test
stc
cmpsl
lock
call
fisubs
shr
aaa
inc
insl
inc
clc
bound
repz
mov
popa
jae
out
aas
dec
mov
xor
xchg
loop
out
mov
dec
xchg
pop
xchg
add
fldcw
mov
dec
mov
stc
das
mov
nop
jmp
test
jmp
pop
popf
fistps
das
insl
out
cltd
mov
inc
xor
and
mov
cmp
sub
lds
xchg
cmpb
or
cmp
xor
mov
sbb
test
add
mov
cmp
test
shl
sbbl
push
in
hlt
sbb
mov
jne
xlat
lret
fldt
mov
insb
sub
dec
btc
mov
cld
ret
ljmp
hlt
xchg
leave
sbb
clc
int3
fwait
aas
xor
dec
cmp
repz
xchg
inc
call
mov
dec
nop
neg
cwtl
in
shlb
push
lea
cmp
sarb
lret
jg
ja
jmp
popaw
cli
fbstp
shrl
sbb
test
int
aas
push
sbb
into
cltd
xor
mov
sbb
mov
sbb
and
mov
lret
insb
xchg
xor
inc
shlb
nop
mov
cmp
in
jl
loop
adc
mov
push
fiadds
loope
or
add
aam
sbb
aaa
les
add
and
push
or
xchg
flds
sbb
rcr
mov
test
xchg
repnz
mov
hlt
xchg
adc
nop
loopne
sbb
add
test
mov
rclb
lret
push
dec
pop
lahf
push
and
and
push
mov
push
mov
or
insl
ds
mov
mov
or
mov
mov
fadds
push
mov
aad
out
ret
jl
ja
mov
and
lcall
dec
into
or
mov
add
cs
inc
pop
idivb
in
into
dec
sar
out
xor
dec
repnz
popf
ss
call
inc
push
rolb
call
lock
movsb
mov
imull
in
xchg
iret
add
jmp
mov
fldcw
int
je
fnstsw
in
adc
movsl
shl
push
icebp
out
loop
pop
cmp
imul
and
push
dec
cs
fnstenv
in
addr16
mov
inc
and
int3
mov
std
mov
xor
cmpsb
daa
mov
xlat
imul
mov
xchg
test
mov
push
jb
inc
sub
pushf
mov
mov
fiadds
test
add
mov
loopne
inc
cmp
mov
and
in
cmp
out
out
xlat
dec
mov
inc
fucomp
not
lds
pop
or
inc
clc
mov
xchg
shrl
mov
aad
mov
push
popa
add
ljmp
cmc
pop
push
sbb
mov
jnp
test
out
pushf
gs
mov
aas
pop
mov
in
shll
jo
cwtl
sahf
cs
idivl
xor
xchg
fistl
call
cmp
insl
insb
insl
bound
stc
sar
ds
xchg
xor
shlb
push
insb
icebp
scas
inc
xlat
movsl
add
or
cli
fsubp
push
push
stos
sub
sub
insb
pop
push
inc
dec
mov
daa
rcl
aaa
adc
lods
clc
out
shl
dec
xchg
cs
lahf
pusha
xor
lahf
jg
das
ljmp
dec
int3
repz
sbbb
enter
or
and
cmp
clc
adcb
loopne
idivb
jns
or
int3
inc
repz
mov
ffreep
inc
int
test
xchg
popa
xchg
xor
insl
push
cwtl
in
inc
cld
ficoml
and
test
xchg
gs
call
fists
sub
insb
push
clc
test
clc
daa
clc
call
xor
xchg
cwtl
or
and
mov
and
mov
data16
jle
jmp
or
pop
pop
ja
jmp
insl
pop
cmpl
or
dec
imul
mov
mov
add
xchg
inc
out
cmp
sub
push
cmp
mov
enter
fs
in
gs
cmp
jl
lea
xor
test
mov
push
mov
and
xchg
movsb
xlat
addr16
pop
fstpt
mov
jmp
into
loopne
int
jle
pop
ljmp
dec
je
mov
ljmp
jo
cmp
pusha
jmp
dec
aam
pop
popa
leave
lock
pop
jp
rol
lret
adc
xor
je
in
or
arpl
mov
sub
sub
mov
mov
push
aaa
adc
insl
int3
ljmp
adc
icebp
mov
jo
xchg
xchg
lds
js
iret
dec
mov
aad
nop
leave
lock
pusha
aaa
outsb
repz
test
insl
sub
adc
lods
test
aam
hlt
pop
mov
outsb
inc
call
in
cltd
int
cmc
sbb
test
mov
lret
je
in
imul
mov
int3
lret
data16
dec
dec
or
in
adc
pop
adc
sbb
mov
cli
shl
sub
lods
lods
shll
xor
mov
fidivl
stc
subl
insl
mov
xchg
fwait
sahf
call
cmp
or
and
dec
repz
inc
incb
sti
insb
xchg
scas
jno
movsl
out
ficomps
ljmp
sbb
negl
into
es
cmp
fcomi
jg
rcll
jg
divb
or
mov
xchg
adc
xor
pop
push
js
mov
mov
xchg
adc
jmp
cs
and
mov
and
rclb
adc
mov
push
ret
jp
dec
inc
xor
out
and
repnz
sub
filds
cmp
test
orl
in
push
pop
iret
jo
xlat
ss
dec
stos
mov
call
mov
inc
sti
jns
fildll
xchg
inc
pushf
out
roll
cmp
cwtl
imul
fcompl
hlt
mov
xor
add
shrb
pop
popf
xchg
pushf
cli
mov
cmp
sbb
xchg
in
pushf
mov
xor
mov
lret
adc
inc
cli
mov
mov
ja
adc
add
lods
adc
mov
cli
fxch
out
scas
sahf
or
lods
fwait
out
lahf
cmpsb
inc
mov
repnz
orl
dec
imul
shl
cmp
push
push
outsb
cwtl
clc
in
push
adc
push
adc
adc
add
scas
leave
addr16
ret
imul
jl
into
cmp
fwait
je
mov
stos
mov
int3
pop
adc
in
aaa
xchg
lock
mov
fists
das
dec
bsf
push
cwtl
out
push
cmpsl
mov
lea
and
add
loope
inc
cld
cmp
inc
cli
repz
in
je
pop
fidivrl
sub
ljmp
jg
sbb
stos
dec
add
ret
adc
mov
push
lods
dec
dec
addb
jmp
int3
sbb
add
test
dec
aas
dec
or
inc
inc
cmp
std
int3
mov
shlb
lock
and
mov
aad
and
mov
out
pop
mov
iret
jecxz
outsl
hlt
and
mov
jecxz
inc
mov
clc
pop
loopne
xchg
aam
je
mov
lahf
in
nop
pop
mov
add
outsl
sbb
test
push
pop
sub
push
add
add
jae
xchg
je
or
gs
sub
cmpsb
dec
stos
inc
push
fisubl
lret
dec
stc
jno
dec
hlt
mov
push
sub
cmp
cmc
call
and
imul
mov
inc
mov
fimull
mov
imul
ds
clc
mov
inc
adc
aaa
and
cwtl
cmp
lcall
cmpsb
mov
cli
mov
movsb
mov
add
popf
mov
push
push
xor
ret
ret
aam
inc
loopne
nop
xchg
jno
inc
repz
imul
mov
test
mov
ljmp
mov
sbbb
clc
pop
fcmovnbe
hlt
xchg
push
out
arpl
add
sarb
jl
dec
out
mov
imul
cmp
int
fwait
and
imul
mov
in
xchg
cmp
out
test
inc
fs
sub
mov
lret
out
loop
leave
ficoms
dec
dec
fwait
pop
or
dec
shl
pop
fdivr
mov
mov
mov
cwtl
fucom
out
pop
addr16
sub
inc
adc
aam
ljmp
aam
fwait
addr16
xchg
cmp
stc
push
dec
sbbb
push
dec
dec
fs
rolb
test
js
xor
or
dec
call
mov
and
lret
mov
inc
push
orb
mov
push
cwtl
xor
jmp
out
lahf
addl
inc
fs
lret
pop
push
imul
sub
and
mov
sub
addb
dec
shlb
xorb
xor
pop
insl
ljmp
xor
mov
int3
mov
testb
or
xlat
lahf
gs
xchg
mov
inc
sub
js
mov
adc
xor
inc
fisubrl
aaa
sub
in
xchg
pop
fdivrl
scas
and
mov
cmp
push
aad
mov
dec
loope
xchg
gs
jno
sbb
ds
dec
add
dec
jmp
call
pushf
or
xor
sbb
jle
xlat
repnz
push
mov
mov
dec
ja
fucom
lret
xchg
pop
arpl
mov
fisubl
xor
inc
scas
ret
jb
mov
pop
hlt
repnz
mov
dec
imul
pop
inc
push
out
xchg
add
jmp
test
mov
jecxz
sub
mov
out
pop
sbb
mov
movsl
sbb
dec
and
ret
mov
mov
push
sbb
jl
clc
lods
lahf
adcl
sbb
lcall
movsl
xchg
gs
clc
pop
cmp
xor
ljmp
xchg
inc
jae
mov
ficompl
mov
inc
out
mov
xor
lea
pusha
fisttpl
cltd
xlat
jae
cmp
and
lods
jp
testb
xor
fiadds
pop
into
into
or
cwtl
mov
aas
scas
outsl
shrb
pop
aad
mov
jge
push
xchg
mov
pop
xlat
iret
bound
pop
call
cmp
imul
mov
xchg
int
filds
cmp
cmpsl
pushf
cld
sbb
filds
gs
ret
lods
nop
xor
push
cmp
fnsave
push
pop
nop
dec
lods
pusha
lcall
test
imul
mov
xor
lea
ja
mov
jecxz
call
in
jge
cmp
lret
and
sub
inc
xchg
jle
stos
mov
cmp
xor
mov
gs
inc
jae
std
pop
popf
xchg
adcl
out
mov
ss
inc
xchg
sti
sub
je
xchg
jge
sbb
incl
sbb
and
imul
in
loopne
scas
mov
loopne
aam
gs
xor
pop
and
iret
cwtl
aaa
loopne
dec
shll
sub
xchg
andb
mov
icebp
cmp
int3
imul
adc
in
outsl
mov
sbb
insb
lea
sub
stos
std
add
adc
aad
xor
lds
mov
push
js
fistps
pushf
sti
jmp
in
push
cmp
nop
gs
shll
outsl
arpl
je
jecxz
pop
in
lret
add
pop
add
repz
inc
lds
xlat
mov
add
jp
fistpll
add
stos
pop
pop
jno
sbb
cmpsb
pop
pop
pop
test
rorl
andl
ja
lahf
inc
xchg
icebp
xor
addb
dec
clc
popf
ja
sbb
shrl
scas
fs
addb
in
xor
inc
mov
mov
shr
lahf
sbb
call
and
ss
jbe
xchg
insl
mov
sbb
ljmp
adc
ret
mov
lret
in
sahf
sbb
dec
cmpsl
xor
aaa
adc
mov
pushf
cmp
inc
xor
test
cli
jl
and
lret
sti
cmp
jae
xchg
and
ficomps
scas
xchg
or
cltd
ds
gs
jp
xlat
push
lcall
ret
clc
les
sub
rcll
cli
dec
jmp
iret
mov
dec
xchg
inc
push
add
xchg
and
xchg
fnstenv
addr16
dec
mov
xchg
outsl
xor
cmp
mov
xchg
xchg
pushf
out
or
in
dec
sbbl
lahf
pop
pop
sbb
mov
clc
xchg
mov
out
ds
jmp
out
jg
pushf
mov
sar
add
pop
add
add
jg
sbb
mov
push
inc
es
mov
dec
mov
sbb
loopne
int3
lret
cmp
add
test
in
out
gs
sbb
clc
mov
lea
fidivrl
push
xchg
ficoms
int3
stos
adc
lock
xlat
cmp
loopne
fcoms
cli
inc
xor
pop
sbb
cmp
rorb
xchg
int3
int3
adc
shll
repnz
out
sbb
push
pop
dec
sbb
add
or
test
addr16
call
xchg
lret
icebp
roll
adc
fcomp
int
mov
int
push
mov
scas
mov
pop
dec
aad
sub
in
cmc
dec
clc
call
xchg
mov
rcll
xlat
adc
xor
mov
sbb
lock
mov
insl
mov
add
inc
insl
pop
idivl
jno
mov
push
add
pop
divl
fs
and
sbb
cmp
xchg
shrb
pusha
sbb
out
inc
sub
dec
test
push
jno
inc
pop
mov
lods
nop
sbb
fmuls
leave
pushf
pop
mov
arpl
mov
ret
jns
cmp
jae
insb
cltd
cli
or
orl
pop
incb
loopne
idivb
sbb
scas
in
jnp
movsl
lods
adc
ficoml
mov
dec
cld
repnz
aaa
fwait
out
scas
aas
dec
adc
add
xchg
add
cli
fchs
out
fstpt
inc
int3
xor
xchg
xchg
ret
ljmp
cmp
rclb
insb
jne
nop
mov
mov
fdivr
mov
lret
mov
xchg
add
xor
sarl
rclb
int3
ljmp
pop
fisubl
add
shll
ljmp
test
fstl
and
shll
sub
data16
js
inc
sub
mov
xchg
sub
popf
test
cli
adc
pslld
mov
or
hlt
ljmp
nop
xlat
pop
mov
icebp
push
adc
out
iret
lret
loopne
cli
pushl
repz
shlb
jno
es
cld
xor
and
lret
and
and
inc
out
addr16
or
out
push
xor
mov
mov
mov
sbb
in
shll
inc
repz
out
jle
imul
cli
adc
jge
shrl
and
pop
adc
xchg
inc
lss
fadd
pop
mov
test
inc
movsl
mov
add
ficompl
mov
mov
lret
pop
prefetch
pushf
pop
rorl
rol
mov
push
dec
cmpsl
dec
rcr
inc
pop
dec
inc
ds
ret
outsb
mov
mov
icebp
mov
cmc
mov
stos
pushf
jo
nop
fstp
inc
pop
add
shlb
mov
sbb
fcoml
adc
fwait
jb
mov
push
mov
and
nop
jle
adc
pop
movsl
xchg
inc
jae
push
std
mov
clc
sbb
push
clc
out
pop
sub
jb
fs
inc
cmc
jmp
pop
mov
loop
stos
icebp
dec
das
in
or
imul
jne
test
xor
lea
jbe
inc
push
push
call
cwtl
rcll
iret
pop
js
pusha
fldcw
jge
and
xor
sub
mov
push
out
insl
stc
bound
push
lahf
jecxz
cmpsb
pushf
in
fs
jne
push
fsts
adc
nop
pop
jge
imul
and
and
rolb
push
repnz
mov
sbb
mov
cmp
je
push
imul
xchg
bound
jo
push
xor
clc
adc
fsts
clc
in
sub
movsl
xlat
adc
in
sbb
lret
mov
jne
jo
pop
cmp
scas
dec
xchg
xor
pop
scas
push
mov
repnz
iret
mov
loop
mov
test
movnti
imul
and
sbb
inc
dec
mov
inc
test
mov
hlt
inc
jbe
iret
xor
test
das
adc
rcrl
and
pop
cwtl
push
mov
push
mov
out
mov
push
hlt
xorb
fistpl
and
fcomp
lahf
add
shll
jne
mov
fistl
push
add
adc
addl
inc
jbe
xor
fs
int
jbe
cs
pop
pop
fs
xchg
sub
mov
or
test
mov
push
cmpsb
adc
fildl
pop
comiss
f2xm1
adc
clc
mov
stc
movsb
mov
lret
aaa
push
jns
adc
out
lahf
xchg
ret
jmp
and
test
cmp
pop
add
in
loopne
fists
xchg
inc
test
xchg
jbe
lcall
insb
cwtl
push
jl
mov
xchg
mov
xor
nop
and
or
stos
loop
rorb
inc
ljmp
adc
sbb
mov
mov
mov
push
mov
pop
ret
out
rcll
outsl
call
lret
mov
push
sbb
cmp
add
js
shrl
out
lret
push
fcoml
cltd
ja
out
mov
and
lahf
and
and
or
jl
ljmp
push
shll
xchg
pop
push
or
cmpsb
cmp
test
js
andb
stc
fisubs
mov
ret
popa
ret
iret
gs
push
stc
push
cmp
gs
xor
lret
or
dec
jle
xorl
inc
outsl
pop
add
iret
and
jne
ret
inc
xchg
mov
jmp
cs
fwait
outsb
xchg
jle
xchg
mov
jmp
jp
movl
add
fsubs
cmpsl
sub
adcb
dec
test
insb
sub
push
dec
mov
xchg
push
pop
sub
or
cmp
xor
shrb
sbb
dec
sbb
sub
ljmp
inc
cmp
lea
iret
ret
fs
je
mov
xor
insl
mov
loope
pop
adc
notl
adc
loope
inc
pop
pushf
mov
jmp
pop
out
dec
fs
inc
ljmp
mov
lods
add
mov
cwtl
push
insl
and
push
cmp
out
imul
jmp
mov
clc
jge
adc
push
fiadds
stos
cmp
cmp
pop
rcll
lds
inc
xlat
aad
sub
bsf
pushf
cmc
mov
jg
inc
xchg
insl
ljmp
xor
adc
mov
pop
fcoml
ds
push
lds
xchg
xchg
sbbl
sbb
sbb
rcrb
dec
mov
lods
add
ret
mov
and
push
push
outsl
aam
fs
pushf
lret
inc
mull
sbb
fwait
mov
dec
repz
or
add
into
and
sbb
sub
mov
xor
mov
pop
bt
ficoms
js
fwait
mov
call
mov
out
jle
pop
in
pop
jns
xor
pop
cmp
fsts
and
imul
popf
sbb
sbb
sub
outsl
out
sub
into
xor
test
out
shl
or
outsl
fmuls
dec
dec
lret
pushl
repnz
push
add
and
or
jg
mov
xorl
jecxz
call
add
dec
shlb
repnz
sbb
cwtl
mov
mov
stos
repnz
adc
into
loope
ljmp
pop
push
cld
out
xor
es
cli
sbb
iret
cli
das
xchg
jb
out
jp
mov
shl
xchg
cs
inc
mov
sahf
and
bound
mov
stos
xlat
negl
sti
mov
cmp
xchg
jbe
sub
xchg
pop
xchg
leave
pop
addr16
fucomp
gs
jecxz
mov
push
sbb
shl
gs
mov
mov
orb
enter
js
mov
xchg
in
jle
mov
shl
ror
add
das
or
mov
jl
jo
pop
or
out
jbe
nop
in
sub
xrelease
imul
pushf
rcll
pop
iret
iret
mov
xor
lahf
cmp
fsubl
popf
mov
mov
sets
pop
sub
push
mov
lret
in
test
shrb
fucomi
inc
test
or
mov
mov
out
add
cs
jp
ja
aad
insl
jb
jne
mov
xor
lds
dec
dec
gs
addr16
or
mov
es
out
pop
pop
nop
jle
pushf
pop
fstps
mov
out
xchg
dec
push
stos
pop
cmp
fld
jg
xchg
jge
stc
out
add
fs
ror
inc
imul
int3
loope
fdiv
ret
adc
jmp
outsb
je
dec
mov
shr
stc
rcrl
dec
or
imul
mov
dec
out
dec
pop
push
ret
in
cmpsb
icebp
sbb
cmp
add
xchg
mov
dec
cs
rcl
aaa
pop
cwtl
mov
inc
add
cmpsb
js
fwait
inc
movsb
xor
test
cmc
jb
add
test
stos
out
add
rolb
outsb
jge
xchg
mov
jnp
popf
js
fsubs
gs
adc
pushf
or
jae
ljmp
push
daa
adc
dec
mov
stc
push
jle
fs
mov
or
arpl
rclb
add
aaa
add
pop
nop
dec
test
bound
push
outsl
jo
ljmp
xchg
lret
call
int3
mov
dec
xchg
dec
call
push
and
rcll
push
test
cmpsl
push
xor
add
ret
push
mov
dec
call
pop
xor
push
gs
icebp
ds
repz
cmp
cwtl
push
cwtl
jle
out
insl
push
ficoms
imul
mov
faddl
pop
adc
out
mov
mov
xchg
cs
xchg
jns
xor
mov
leave
sub
inc
and
xchg
xor
dec
xchg
sub
mov
or
sbb
jmp
jl
jno
jo
sbb
inc
aad
mov
in
ficoml
dec
int
jg
inc
or
ja
lock
fwait
sbb
iret
sub
jge
cmpsl
testl
mov
sub
or
sbb
addb
iret
cmp
mov
add
je
addr16
and
add
int3
xorb
xchg
jp
jge
or
addr16
rcll
or
aaa
dec
cmp
cwtl
mov
jb
add
movsl
test
rolb
ljmp
push
jne
fiadds
mov
sub
movsl
cmp
test
push
xchg
push
out
imul
fwait
out
clc
repz
rcrb
add
sub
adc
jo
jb
adc
stos
clc
int3
cli
or
cmpsl
mov
lcall
lock
push
fs
inc
dec
sub
jno
xchg
push
jns
xchg
loop
es
rolb
test
dec
lret
fs
pop
cmc
mov
sub
iret
mov
mov
add
out
cmp
or
bound
inc
cmp
insb
mov
fidivrs
icebp
outsl
cmpsb
pop
fcmovnu
pop
cmpsl
jp,pn
mov
pop
paddd
mov
je
cmp
mov
inc
mov
or
jne
shll
call
call
outsl
cmp
sbb
shl
sahf
fadds
adcl
test
rcl
idivb
jecxz
mov
xor
jns
aaa
outsl
in
push
ret
mov
fiadds
je
loop
mov
and
fmull
sbb
out
imul
stos
enter
mov
sbb
sbb
dec
sub
inc
adcb
xlat
mov
es
les
sarb
aas
mov
into
imul
xor
cs
movsb
or
xor
cmp
sbbb
movsb
aam
mov
push
xor
pop
lods
insb
xor
pushf
cmp
call
in
repnz
mov
and
call
xor
hlt
int
imul
jne
mov
fcomip
xchg
das
loopne
rorl
call
cwtl
jno
lret
cs
fsubrs
stos
out
mov
inc
mov
mov
addr16
xor
cmpsl
push
cwtl
mov
sahf
push
mov
pop
sbb
xchg
cmp
sub
push
mov
jns
das
xchg
pop
mov
pop
add
sbb
or
mov
out
jb
call
jge
fsubr
jno
push
fistl
and
out
or
mov
inc
xor
hlt
xor
sub
mov
in
movsl
push
mov
sbbl
loopne
cltd
xor
aaa
xlat
int3
dec
cmp
lock
jbe
cmc
fsub
ljmp
aas
and
mov
arpl
jg
lods
add
ret
int3
sbb
insl
cmp
and
rorl
rolb
lods
adc
cltd
jmp
inc
adcb
mov
cmp
into
dec
mov
movb
mov
jge
cmp
pop
js
mov
mov
mul
outsl
movsb
repnz
movsl
lea
sub
out
mov
notl
xor
jmp
imul
iret
jecxz
or
lahf
sub
andl
aam
imul
hlt
out
fldenv
or
jmp
stc
dec
jno
sub
subb
out
pop
and
out
stos
jmp
xlat
mov
jno
dec
sbb
add
cmp
jo
or
mov
lahf
mov
push
dec
pushf
int
dec
cmp
fists
mov
mov
or
das
ljmp
ja
sbb
push
push
jnp
hlt
pop
aam
test
inc
xchg
or
pop
out
push
add
dec
inc
jbe
leave
gs
xor
pop
mov
cmpsb
fs
int3
xor
je
addr16
out
mov
pop
inc
xor
std
cmpsl
inc
cs
pop
push
movsl
lahf
cmp
ds
inc
test
cli
cmp
xor
sahf
adc
scas
jp
jmp
ljmp
xchg
dec
jae
mov
ja
inc
jmp
movsb
cli
mov
icebp
mov
xlat
sub
push
dec
test
int3
xor
push
or
negl
fildl
jp
mov
xor
add
mov
notb
or
cwtl
mov
cwtl
xchg
add
dec
call
pop
dec
clc
xchg
push
push
movsl
mov
pop
cmp
dec
mov
cwtl
jo
rcl
lret
push
movsl
mov
mov
je
lret
sbb
inc
mov
jne
sbb
and
adc
cmp
fwait
scas
jo
mov
push
inc
gs
iret
fdivrl
les
jo,pt
jge
fistl
and
push
mov
adc
xor
andl
int3
mov
scas
xor
dec
add
cwtl
nop
sub
xor
ljmp
dec
xor
mov
jmp
xchg
mov
int
xor
pop
andl
add
jmp
mov
out
add
cmp
out
xor
test
sbb
mov
sbb
ds
xchg
adc
jbe
out
xchg
out
mov
ret
sub
inc
shll
cwtl
in
je
push
jmp
cltd
aad
add
fwait
or
xchg
lock
cld
mov
pop
push
test
fiadds
ljmp
movsl
dec
test
push
into
fiaddl
cltd
pop
xchg
inc
daa
xchg
mov
adc
xchg
mov
sub
mov
cmpl
sbb
ret
adc
cwtl
cli
xor
inc
adc
mov
add
in
adc
ficoms
xor
cmp
xor
or
inc
push
jnp
pop
sahf
hlt
cld
push
aas
rcl
mov
cmp
addr16
cmp
inc
test
lret
movsl
sub
sarl
icebp
cmpsb
mov
dec
cwtl
into
lcall
dec
mov
out
in
pushf
in
dec
cwtl
shll
test
cmpb
xchg
sbb
test
or
pop
sub
push
mov
repz
and
mov
insl
jne
jmp
pop
pushf
clc
pusha
test
inc
fnsave
mov
push
in
dec
sbb
jle
sahf
loop
and
fbld
mov
imul
cwtl
jno
sub
clc
xchg
jns
sbb
ljmp
cli
iret
dec
dec
in
into
push
jp
mov
pop
sub
out
jl
mov
dec
cmc
cwtl
mov
jne
cmp
and
popf
adc
fisubrs
mov
xchg
mov
pushf
and
iretw
mov
insb
popa
cmpsl
adc
xor
pushf
lcall
cmp
mov
ret
movsb
loope
gs
out
std
or
out
in
sub
shrb
xor
sbb
xchg
jb
mov
ficomps
adc
out
or
rclb
sub
inc
call
mov
adc
pop
test
and
test
xor
stos
in
push
insb
xor
mov
data16
paddsb
sbbb
cmp
jb
push
xchg
in
cmp
repz
loopne
cld
jp
addr16
call
ja
in
clc
lret
insb
neg
fucomip
push
xchg
jmp
xchg
rcll
rclb
ss
sbb
insl
in
aas
sbb
cmpsb
push
push
aam
sbb
adc
or
test
cs
idivb
inc
or
and
out
add
aaa
inc
nop
adc
mov
or
mov
push
xchg
scas
test
or
in
mov
mov
or
xchg
sbb
lods
in
das
push
int
dec
sub
inc
cmc
out
call
shlb
aam
adc
in
es
mov
or
scas
mov
div
daa
add
call
adc
push
or
push
in
xchg
dec
push
push
dec
addr16
jl
mov
mov
xchg
mov
int3
mov
mov
and
fadd
imul
mov
call
test
gs
in
loope
cmp
fldt
cld
sbb
add
jo
pop
inc
push
xor
fldt
push
dec
fcoms
int
in
push
bound
pushf
hlt
push
call
shl
xchg
in
out
clc
mov
push
arpl
mov
sub
outsb
sub
stos
imul
add
jno
push
mov
adc
dec
clc
dec
add
shr
mull
inc
mov
iret
test
psubsb
adc
dec
xor
xchg
in
mov
mov
aam
pop
in
xchg
cmp
out
es
fisubrl
sub
xchg
jb
dec
lock
push
fdiv
subl
fmuls
lods
aad
mov
in
clc
pop
loopne
sub
in
adc
cmpsl
adc
sbb
adc
mov
xchg
jb
es
sub
daa
push
sar
cmc
insb
push
in
subb
xchg
dec
stos
out
xchg
icebp
xchg
push
pop
lods
push
mov
dec
cmp
cltd
pop
pop
mov
push
lds
cmp
shrl
out
inc
sbbb
je
jle
ss
call
add
imul
push
xchg
jmp
jmp
pop
test
pop
aas
push
xchg
push
sub
call
ret
cmp
jmp
mov
out
mov
call
add
data16
loop
call
lods
in
mov
sub
push
dec
jge
daa
cltd
mov
or
imul
into
in
mov
mov
int
fisubs
in
xlat
cmpsb
ljmp
dec
inc
dec
jmp
push
jle
gs
push
cmp
mov
inc
ljmp
and
mov
adc
xchg
orb
dec
or
mov
cmp
sbb
sar
or
mov
call
les
pop
adc
fwait
adc
pop
es
lret
icebp
or
xchg
dec
orb
inc
xchg
js
push
jno
rclb
adc
cs
test
fsts
xchg
push
call
out
adc
leave
or
dec
insb
dec
call
sub
adc
in
xlat
adc
cmc
ljmp
fcomp
data16
call
imul
push
out
dec
lds
pop
outsb
aas
leave
in
or
repz
mul
call
ljmp
cwtl
mov
sbb
in
cmpsl
mov
testl
stos
dec
cmc
out
in
loope
ljmp
idivb
gs
mov
data16
push
mov
jle
push
ficomps
imul
pop
clc
test
test
insb
in
adc
cltd
stos
stos
insl
in
in
stos
jo
xor
aaa
rcrb
testl
repz
adc
nop
sub
int
subb
inc
adc
push
dec
dec
inc
mov
xor
mov
cmpsl
scas
xor
adc
iret
jg
test
push
addr16
dec
cmp
movsl
mov
push
xchg
loopne,pt
movaps
movsl
mov
repnz
sbb
push
push
loopne
shl
nop
mov
rcr
jge
push
inc
dec
int3
sahf
cli
push
or
test
jg
lahf
fldt
mov
insl
test
out
pop
xchg
jmp
jno
add
xchg
xor
xor
addr16
outsl
xor
mov
mov
in
xlat
xlat
dec
movsl
out
adc
sar
clc
iret
and
int3
mov
out
cmp
inc
dec
pop
push
sbb
jb
dec
idivl
mov
xor
xor
xchg
jle
stos
mov
rcl
and
push
aam
aad
cmp
pop
jnp
mov
mov
fstps
jnp
mov
into
cmp
shl
lahf
mov
call
add
xchg
iret
push
lds
mov
inc
shll
inc
cmp
dec
iret
push
sarb
es
pop
xchg
xor
mov
or
repnz
xchg
movsl
popf
test
cli
dec
cmp
push
mov
mov
enter
les
add
jmp
hlt
je
in
xor
cmp
fs
xchg
std
mov
jne
scas
xchg
out
jb
lcall
sbb
push
push
jno
adc
imul
jne
push
ljmp
in
rorb
jge
and
popl
dec
push
aam
test
popa
pop
adc
mov
ret
mov
and
mov
stos
mov
add
sbb
loop
and
leave
sbb
or
mov
pop
insb
and
rcrb
inc
ret
cmp
jns
xor
lahf
rol
test
mov
leave
fwait
push
outsl
clc
popl
xor
std
push
mov
sbb
mov
gs
clc
xor
dec
jmp
pushf
lcall
adc
adc
sub
loope
jb
and
test
std
sarw
xor
and
ret
divb
cmp
sti
mov
outsb
insb
loopne
movsb
aaa
ljmp
lods
das
push
xor
call
inc
or
dec
mov
test
cmp
mov
and
clc
lea
out
das
testl
mov
loop
cmp
aas
push
stos
and
adc
out
stos
mov
out
add
cmp
popa
aad
dec
xchg
mov
nop
xor
rcr
xor
jmp
push
add
mov
jle
jb
ret
mov
sub
dec
int
xchg
sbb
insl
xor
xlat
cmpsl
dec
sbb
outsl
mov
push
inc
mov
xchg
in
test
lea
fsubr
lret
ljmp
test
daa
fsubr
out
inc
call
mov
subb
fstl
nop
jmp
aad
inc
dec
lock
sbb
sbb
add
mov
addr16
cltd
popf
xor
ljmp
rorl
int3
rcrb
cmp
in
fistps
add
sub
ss
jno
and
test
fdivrl
add
hlt
inc
pop
dec
ja
iret
sub
rcr
mov
pop
push
insl
stos
hlt
aas
int3
aas
outsl
aam
lds
rep
push
mov
cli
cmp
cmpsl
fdivrl
fcomps
in
pop
cmp
add
arpl
mov
lock
lock
mov
pop
dec
cltd
add
test
int3
inc
nop
ds
addl
orl
mov
inc
leave
out
iret
mov
out
inc
aad
popl
jmp
push
xchg
mov
jnp
push
js
sahf
in
cwtl
jmp
addb
loope
push
xor
in
pop
in
pop
sub
adc
sbb
clc
mov
sbb
sub
dec
repz
lods
out
sbb
push
dec
cmc
and
pop
xchg
add
stc
lahf
lret
into
pop
gs
scas
inc
sti
sbb
mov
gs
sbb
mov
test
test
xchg
into
bound
sbb
stc
in
and
out
xchg
call
jp
cltd
mov
adc
pushf
js
sub
rorl
fwait
dec
into
push
clc
repnz
dec
cmpl
and
clc
mov
inc
jg
add
in
add
cmp
ja
test
inc
xchg
jmp
jmp
ljmp
jmp
mov
adc
jno
or
inc
mov
test
subb
dec
hlt
sbb
add
aad
push
mov
scas
push
nop
fwait
xchg
xchg
shlb
cmc
scas
pop
inc
jle
cwtl
and
and
adc
push
dec
push
fisttps
cmp
push
mov
sub
push
jg
das
jno
sbb
xor
fs
fcmovnb
or
adc
pop
out
push
lahf
add
scas
outsl
out
sbb
mull
push
sti
lcall
movl
and
jb
jge
inc
sub
ljmpw
lret
cmp
es
mov
dec
gs
popf
push
and
and
sbb
jbe
repnz
int3
icebp
sub
jns
outsl
clc
hlt
stos
stos
and
xchg
mov
jnp
inc
out
lahf
ds
jecxz
or
cmp
hlt
arpl
mov
mov
jmp
fmuls
pushf
mov
movsb
cltd
int
sub
xchg
dec
test
imul
hlt
shlb
hlt
popa
xchg
repnz
fildl
xor
test
cld
in
xchg
fists
mov
gs
add
and
push
rcrb
testl
aas
mov
jae
cmp
or
jp
mov
int
jno
fwait
pop
loope
and
aad
cmp
xor
pop
test
cmp
mov
outsl
stc
lods
daa
call
mov
xor
test
xchg
mov
in
pop
repz
ljmp
dec
rorb
aam
dec
cmpsl
xchg
addr16
dec
push
idivb
in
mov
inc
shrl
sub
cmp
nop
fisubrl
stc
mov
add
xor
jmp
ja
aam
push
imul
gs
sbb
dec
or
and
lret
adc
mov
adc
mov
dec
js
in
inc
pop
cmpsl
cmc
lods
cli
andl
lcall
addr16
mov
mov
and
xor
and
jo
gs
cmpsl
mov
lcall
call
andl
and
addr16
jo
pop
hlt
aad
pop
dec
enter
pop
movsb
lcall
stos
pop
pop
xchg
outsb
pop
les
push
inc
xchg
inc
lods
in
sbb
mov
out
lcall
xor
outsl
lea
and
fst
call
lret
stos
cmp
out
jno
bound
jns
adc
in
je
dec
sbb
xor
mov
ret
stos
gs
mov
xor
fadd
outsl
arpl
imul
into
and
adc
mov
mov
and
sbb
and
call
xor
xchg
sbb
adc
fcmovu
pushf
rorb
pop
ror
fbstp
dec
mov
loopne
adc
mov
lret
mov
movsb
inc
xchg
mov
pop
sbb
repz
pop
stos
mov
mov
xor
rcrb
stos
in
lcall
xor
xor
int
imul
sbb
dec
xchg
clc
and
xchg
push
lcall
into
shlb
mov
outsb
adc
sti
andb
pusha
enter
test
xor
jo
in
adc
xchg
dec
out
icebp
out
movsb
xor
push
test
push
leave
imul
sub
dec
test
rcr
and
aad
mov
mov
xchg
sahf
addr16
icebp
sbbb
and
xchg
inc
pop
addr16
imul
aad
sub
cs
mov
out
imul
mov
sub
sub
pushf
icebp
clc
imul
cmovbe
xchg
dec
movsb
cwtl
cld
jne
mov
lret
test
popa
add
aam
lahf
je
addr16
xorl
out
adc
inc
mov
movsb
ror
addr16
stos
mov
mov
lods
adcl
xchg
or
fnstsw
xchg
mov
jle
repnz
outsb
icebp
mov
mov
cld
ljmp
cli
xchg
popf
movsl
fistpl
mov
aas
xor
sbb
xchg
xor
jle
ds
dec
mov
mov
fldl
inc
out
in
nop
lods
mov
mov
xlat
cmp
out
js
mov
hlt
mov
sbb
movsb
mov
inc
cmp
dec
dec
in
xchg
jbe
stos
cli
lahf
jns,pn
inc
ljmp
adc
aam
or
jbe
popa
pushf
les
or
call
adc
aam
divb
fildll
mov
pop
gs
sub
lock
dec
jne
and
xor
sub
ja
pop
mov
mov
fdiv
mov
add
xor
fs
inc
or
fistl
cld
ret
out
in
int3
mov
or
adc
pop
cmp
dec
jge
mov
xor
mov
xor
adc
hlt
push
lret
scas
stos
dec
cmpsb
sbb
inc
cwtl
jecxz
xor
int
negb
jg
lock
sbb
jge
ja
iret
cmp
js
outsb
adc
arpl
push
adc
or
push
ret
dec
lahf
jo
clc
add
push
cmp
mov
out
dec
pop
aam
addl
push
push
lods
cli
clc
rcll
outsl
dec
inc
fldt
cli
inc
add
movsl
xchg
mov
lahf
mov
scas
xlat
or
jmp
mov
gs
lcall
xor
push
mov
gs
in
in
or
add
xchg
xlat
sbb
pop
or
jae
mov
mov
gs
lcall
pop
negb
out
gs
push
cs
js
push
or
inc
xchg
jne
popf
add
into
jne
test
lret
out
push
jle
xlat
mov
leave
lods
jl
sbb
dec
add
mov
jo
pop
pop
jnp
push
insl
cmp
out
adc
xchg
shr
jmp
and
xchg
rcll
cmp
xlat
lcall
outsl
push
add
xchg
sbb
shl
or
pushf
lods
push
hlt
xchg
and
xchg
mov
dec
inc
popf
in
cmp
popa
stc
pusha
arpl
cltd
dec
fiadds
inc
scas
mov
cwtl
add
scas
lods
jl
mov
xchg
mov
inc
lahf
jp
cmpsl
mov
ja
push
mov
insb
out
mov
jae
loopne
mov
stos
sbb
xchg
jge
ds
nop
rorl
add
mov
fmulp
nop
push
clc
clc
inc
in
mov
outsl
pop
and
sub
es
sub
xor
and
jmp
fnstcw
sahf
jmp
push
mulb
push
jp
test
addr16
movsb
dec
adc
cmpsb
mov
stos
int3
mov
mov
in
repz
jmp
fisttpll
pop
cwtl
lahf
popf
pop
addr16
fadds
jmp
aad
lret
push
and
adc
adc
test
cwtl
sbb
xlat
popf
leave
adc
call
insb
ds
cmp
mov
imul
jp
clc
pop
inc
outsl
loopne
sbb
fistl
jg
xor
push
arpl
scas
imul
shl
rorb
xor
stos
gs
and
aad
out
call
lret
repnz
push
int3
mov
in
test
mov
leave
sbb
adc
pop
mov
jno
sbbb
mov
xlat
and
clc
mov
xchg
dec
mov
fwait
adc
pop
cld
ficoml
pop
and
mov
ja
mov
mov
adc
jge
inc
sbb
dec
push
push
aaa
int
outsb
lret
je
pop
outsl
loopne
aad
cs
xor
call
bound
inc
in
lods
sub
aam
inc
add
cwtl
mov
ljmp
rcl
aad
rcrb
sbb
fwait
movsb
cmp
popa
inc
push
mov
fucom
lcall
or
push
mov
lahf
push
cmp
inc
das
sub
mov
cmp
cmp
push
cmc
jl
adc
fistl
lds
adc
jecxz
int3
cmp
mov
subl
sarl
mov
pop
outsl
jle
add
push
pop
loopne
mov
fmul
test
loop
mov
repnz
mov
mov
xor
imul
subl
rorl
cmp
repnz
dec
mov
ds
add
scas
cmp
je
sub
rcrb
insb
outsl
call
lock
dec
adc
pop
sarb
xchg
jge
mov
cmp
mov
les
fdivrs
popf
mov
cwtl
mov
mull
cwtl
sbb
jmp
cwtl
iret
hlt
or
sub
pop
cmp
cmp
sub
mov
jmp
pop
add
mov
sbb
add
test
jl
push
sbb
int3
xchg
addr16
mov
xchg
dec
jo
pop
mov
and
xor
cmp
popf
andl
es
int3
lret
fimuls
adcb
sbb
mov
jne
xchg
mov
xor
stc
nop
jns
mov
aam
emms
inc
xlat
inc
dec
arpl
cmp
adc
sti
and
mov
lcall
rclb
mov
popf
xor
sarb
ss
xchg
xchg
sub
movsb
mov
nop
leave
ret
push
sub
aam
pop
xlat
dec
lcall
lcall
mov
negb
lods
outsl
in
mov
in
lea
outsb
jbe
enter
xor
ds
bound
mov
sbb
xor
fstpl
xchg
inc
ud1
ret
fiadds
data16
aam
inc
leave
addr16
mov
pop
das
push
and
and
xchg
rcll
xchg
add
inc
test
std
out
mov
xor
pop
cld
out
aaa
inc
mov
shl
test
test
xchg
pop
cmp
mov
pop
shlb
xchg
shll
mov
test
bound
lods
in
cwtl
xchg
test
jle
test
push
loopne
or
in
gs
sbb
jg
fldenv
cltd
std
pop
jp
xchg
arpl
shrl
gs
iret
mov
xor
cwtl
push
lock
mov
pop
or
mov
hlt
out
xchg
push
popf
cs
nop
repnz
leave
add
jns
pop
repz
or
and
lock
gs
dec
repz
mov
pop
mov
xor
mov
fcomps
insl
pop
xchg
lea
push
das
incl
xchg
xchg
fwait
jbe
loope
mov
fdivs
jl
int3
aas
inc
mov
mov
adc
lea
mov
imulb
mov
push
mov
shr
cmp
mov
data16
in
pop
rol
sbb
repnz
pop
sub
imul
daa
inc
inc
jmp
pusha
insb
outsl
fdivr
ljmp
adc
test
sbb
inc
flds
out
xchg
lds
cmpsb
jo
mov
test
mov
jg
pop
sbb
push
stos
lds
push
push
xor
or
xor
and
adcl
imul
xorl
cmpsb
stos
mov
insl
clc
and
mov
mov
in
scas
repnz
movsl
gs
dec
shll
adc
lret
int3
notb
bound
add
gs
aad
sub
mov
loopne
fstpt
addr16
int3
nop
xor
dec
pop
jge
shl
je
lahf
js
mov
mov
or
or
leave
out
gs
in
or
pop
lock
dec
ja
xchg
fbstp
push
out
dec
ljmp
sti
xchg
sub
mov
and
es
data16
jbe
filds
subl
mov
outsb
ret
jp
scas
rcll
test
jmp
pop
mov
repz
jns
ret
xor
mov
rolb
lds
loope
es
sbb
mov
sbb
fmuls
bound
lds
imul
lods
cmp
jbe
mov
push
push
xor
dec
jno
xor
pop
lcall
fisttpl
lea
or
lret
pop
xchg
mov
mov
jo
lcall
repz
xchg
shl
mov
icebp
push
loope
in
mov
roll
jecxz
mov
rcl
or
pop
repz
sub
and
xlat
xchg
fsubr
sahf
fistpl
into
mov
cmp
xor
push
dec
es
pop
filds
push
mov
aaa
xchg
push
mov
fidivrl
and
outsl
inc
dec
insl
mov
inc
in
fcomps
adc
inc
or
xchg
shr
or
sbb
iret
and
cli
add
inc
xor
test
inc
push
es
cmp
xchg
mov
in
mov
sbb
adc
clc
sbb
and
xor
fistl
fwait
je
jge
repz
xor
mov
out
push
and
fcoms
cmp
addr16
jmp
pop
adc
jl
mov
hlt
loop
popa
je
sbb
lahf
ja
mov
adc
sub
dec
fistpll
xchg
int
xchg
stc
shll
mov
fadd
dec
enter
xor
cmpsb
push
xchg
sub
cmp
incl
sti
adc
notb
mov
sbb
xchg
pop
fiaddl
or
jns
lret
andb
push
push
mov
mov
int
call
jmp
imul
jne
jb
sbb
push
cmp
push
dec
loopne
fisttpl
dec
adc
daa
jae
or
ljmp
adc
aam
shll
das
push
leave
push
call
popf
decb
dec
fisttps
mov
sahf
nop
xlat
hlt
cmpsl
les
push
mov
dec
scas
mov
mov
xchg
lock
cwtl
ficoml
push
cwtl
mov
pop
fwait
scas
movsl
pop
xchg
fstpt
xor
test
test
aas
fnstenv
jge
dec
outsl
or
pop
inc
jo
inc
rcrb
jbe
jmp
je
sub
scas
aas
out
jnp
daa
pop
dec
pushf
ret
outsl
adc
xor
mov
ret
fcomps
or
dec
jl
pop
icebp
cmp
dec
dec
sub
cwtl
jae
inc
and
mov
lcall
push
test
icebp
inc
out
cmpsl
and
loop
push
movsb
sbb
adc
rorb
cmc
or
rcll
mov
xchg
cmpsb
btcl
loopne
push
ljmp
jae
pop
mov
dec
mov
out
xchg
adc
push
dec
cli
aad
imulb
das
jo
sbb
cmp
repz
push
or
dec
dec
pop
test
leave
sbb
pop
pop
mov
pushf
repnz
scas
filds
adc
xchg
xlat
rcrb
in
dec
pop
push
sbb
jmp
popa
jo
xchg
and
mov
mov
fldenv
aas
cmp
loope
sub
lcall
xor
cwtl
out
and
std
nop
cmpsb
push
xor
lret
mov
test
iret
add
ss
cwtl
das
push
xchg
inc
psubsw
ja
ljmp
cmpsb
cmp
cld
jno
in
iret
gs
test
and
fdivs
add
cmp
dec
clc
jne
faddp
adc
push
sbb
popf
cmp
inc
xor
mov
in
xor
mov
xor
mov
inc
clc
mov
daa
sbb
xchg
adc
inc
jmp
sub
pop
cltd
or
pop
inc
jmp
or
aas
rolb
nop
cli
inc
aad
enter
lret
rol
cwtl
xor
pop
aaa
fadds
ret
inc
xor
xchg
rcll
addr16
addr16
and
and
sub
addr16
push
fdivr
push
mov
nop
dec
mov
ljmp
sahf
out
lods
loop
jnp
or
xor
mov
std
xchg
outsb
adc
xchg
jp
mov
repnz
fcmovnu
pop
out
xor
cld
push
setae
jecxz
pop
mov
std
stos
inc
sub
enter
daa
cmp
sub
and
cwtl
pop
leave
xchg
jmp
push
test
mov
cmp
inc
dec
loope
push
pop
in
mov
in
cwtl
pop
adc
aad
jbe
repz
xchg
sub
sub
int3
aad
mov
dec
sbb
insb
fiadds
xor
and
and
lods
push
movsb
js
fisttpl
jnp
add
lea
nop
in
les
test
insb
leave
leave
stos
push
test
out
inc
cmovp
test
stc
movsl
loopne
cwtl
xchg
in
cmpsl
ljmp
sbb
lods
and
or
out
pop
add
cmpsl
fcoms
stos
movsb
mov
scas
lea
push
stos
mov
fucomip
aam
mov
repz
dec
mov
shll
sahf
dec
fs
pop
xor
fildll
ja
sbb
jge
mov
push
into
nop
dec
mov
leave
int3
xor
in
roll
and
adc
imul
push
iret
scas
loope
daa
mov
xor
sbb
xchg
push
lret
add
add
popf
mov
pop
and
mov
lcall
frstor
add
adc
add
dec
jp
add
movsl
xchg
or
add
jge
lret
mov
enter
cs
das
xlat
mov
cmp
adc
cmp
push
andl
or
jb
icebp
jl
pushf
test
fmuls
rolb
push
negl
data16
add
cs
cld
sub
ja
int3
leave
arpl
insl
fdivrs
aaa
mov
or
cmp
ror
lahf
loope
repnz
pushf
add
insb
pop
aas
mov
xchg
int
stos
lret
fcmovbe
out
add
fwait
pop
fcmovne
mov
adc
push
test
aaa
imul
adc
sub
lea
dec
cwtl
pop
jno
and
out
dec
icebp
dec
pop
addr16
add
sub
addr16
in
mov
jno
sub
loopne
clc
mov
jecxz
cmp
scas
or
jle
inc
repnz
push
ror
popa
shlb
in
lea
test
aas
loopne
mov
add
ja
repnz
pusha
push
pop
jne
push
xlat
fadd
fistl
add
push
int
push
test
dec
jp
aam
imulb
in
and
outsl
push
call
in
mov
aaa
out
fisttpll
clc
clc
repnz
mov
and
clc
dec
and
ljmp
ljmp
and
int
pushf
daa
cmp
cli
xchg
lret
fisubrl
das
push
jmp
movsl
pop
pusha
lret
fisubl
xchg
add
das
lret
and
sahf
test
pop
imul
adc
sub
dec
lods
jg
repnz
cmc
xor
iret
and
xlat
ret
iret
cmp
out
stos
test
mov
fs
daa
xor
xlat
push
in
dec
es
stos
jle
xchg
adc
call
sub
outsb
sbb
nop
fwait
mov
mov
stos
lea
adc
addr16
lcall
mov
fimull
mov
push
jne
dec
lods
xor
mov
mov
iret
lret
out
push
adc
and
fwait
inc
or
pop
jne
cmpsb
ss
pop
test
mov
push
loope
test
lret
jo
repnz
cld
mov
leave
icebp
fwait
mov
dec
repz
pop
fidivrl
pop
repnz
out
push
sbb
movsl
rorl
push
les
das
out
mov
mov
pop
clc
aam
mov
add
xchg
lods
pop
pop
cld
rcr
push
aam
loopne
adc
lock
xor
test
out
mov
add
int
leave
imul
out
shlb
ret
roll
xchg
cli
pop
cmp
mov
andl
movl
mov
outsl
faddl
fists
push
aad
js
dec
and
mov
and
dec
jbe
loope
es
cmp
mov
fcompl
sbb
xlat
push
outsl
dec
jae
add
aad
jb
inc
push
ljmp
test
mov
mov
jne
scas
mov
inc
mov
sub
in
mov
into
gs
push
xchg
aaa
inc
mov
mov
pop
mov
out
testl
cmp
push
xchg
hlt
aam
and
push
js
iret
add
jp
out
add
push
push
push
dec
and
aad
lock
clc
jne
in
insl
bound
out
stc
mov
ljmp
call
sahf
mov
scas
fwait
dec
leave
xchg
mov
jl
lods
pop
mov
cwtl
stos
or
clc
push
fdivs
out
cmpsl
aaa
movsb
scas
cwtl
sbb
out
inc
jle
shll
in
mov
and
fdivl
jbe
gs
dec
cltd
mov
int
jp
sbb
sub
lret
inc
adc
cli
adc
fs
shlb
std
movsl
push
aaa
hlt
adc
pop
jae
hlt
xabort
into
mov
xchg
xor
iret
cmp
mov
push
mov
movsl
inc
insl
pop
cmp
fwait
add
test
adc
add
mov
and
mov
add
mov
and
aam
into
arpl
fwait
sub
lea
loopne
movsl
rcrb
fwait
test
popf
cwtl
clc
push
pop
jne
lcall
add
push
push
mov
loop
adc
add
out
jns
gs
cbtw
adc
arpl
test
sbb
call
pop
in
int3
mov
lcall
nop
cld
or
in
test
inc
stos
test
neg
push
push
jmp
push
dec
div
enter
sarb
test
test
add
lock
jae
nop
nop
mov
cmp
js
pop
enter
test
mov
ror
loope
mov
into
shlb
lods
fisubs
nop
mov
mov
inc
push
ja
mov
add
aam
sub
jne
es
inc
outsb
je
popf
imul
mov
clc
mov
fidivs
cmp
xchg
inc
ljmp
add
or
int3
mov
mov
rclb
test
mov
cs
mov
test
mov
xchg
aas
sarl
sbb
inc
push
pop
lret
dec
mov
dec
test
add
cmp
jecxz
call
inc
adc
movsl
inc
in
add
movsl
test
aas
bnd
iret
clc
es
mov
lea
or
adc
cwtl
mov
xchg
cwtl
fstps
cwtl
stc
xchg
rcll
mov
sub
sbb
out
fsubl
jge
setnp
jns
adc
in
loop
test
cmp
hlt
mov
faddl
jl
inc
addr16
push
or
and
inc
clc
cwtl
test
nop
jno
das
pusha
dec
pop
cmpsb
mov
nop
div
or
xor
leave
pop
mov
sbb
in
and
in
xchg
mov
dec
repz
std
jb
mov
sti
clc
adc
pushf
shlb
clc
cmp
adc
or
inc
lcall
out
std
add
mov
decb
mov
pop
cli
jmp
xlat
lcall
fs
test
lock
call
xlat
adc
cmp
fwait
xor
mov
jo
ja
in
pop
scas
jle
push
stos
rol
icebp
test
xor
aam
test
fisubl
jae
add
pop
cmp
std
movsb
sbb
mov
or
mov
ja
add
jno
adc
mov
cmpsb
xchg
pop
mov
xor
repnz
enter
rorl
nop
rcrb
icebp
mov
cmpsl
je
mov
mov
ja
lods
icebp
mov
push
loopne
negl
sub
cmp
xchg
cmp
push
push
inc
imul
fstpt
mov
dec
loop
sub
mov
lock
rcll
pop
shr
xor
adc
ljmp
repnz
lahf
pop
div
sbb
inc
imul
stos
cmc
add
aaa
out
adcl
cmp
xchg
clc
cs
aam
movsl
daa
xchg
sbb
inc
aas
dec
add
mov
pop
xchg
xchg
sti
in
inc
fmulp
pop
jo
lahf
push
mov
jge
jae
mov
jg
sub
push
js
xor
jmp
xchg
lret
pop
xor
js
push
cwtl
into
dec
push
lock
cwtl
fisttpl
mov
mov
pop
adc
int
data16
lock
movl
js
xchg
int3
decl
lahf
mov
jmp
mulb
dec
jae
push
ja
jae
adc
in
pop
inc
jmp
js
pop
mov
loopne
adc
cmp
jno
add
pusha
repnz
movsb
jbe
pusha
popa
repnz
nop
push
xchg
xchg
nop
rcr
xchg
adc
push
in
dec
jne,pt
mov
sub
repz
pop
xchg
dec
add
sbb
test
pop
inc
mov
ds
pop
push
in
out
imul
xchg
mov
sub
dec
movsl
or
add
test
loope
in
pop
outsl
hlt
or
bound
jno
jo
mov
cmpb
cli
call
daa
jle
imul
ret
rorb
retw
mov
es
out
add
outsl
stos
aas
movsb
xor
aam
ret
lock
cmpsl
mov
scas
dec
nop
in
in
sbb
xor
std
push
push
inc
fists
cwtl
sbbb
cmp
pop
mov
iret
ror
hlt
jno
mov
daa
xchg
jmp
jne
or
add
inc
aad
dec
cltd
aad
sbb
adc
jmp
or
or
mov
das
or
sar
inc
xor
shr
loope
frstor
lds
add
xor
movsb
xchg
dec
leave
ljmp
add
in
pop
outsl
pop
jl
cld
mov
pusha
mov
push
mov
and
aam
filds
xchg
jg
xor
push
nop
push
or
loopne
inc
xor
mov
sbb
jb
sbb
outsl
out
cvtps2pd
cld
lcall
mov
inc
add
out
xlat
dec
jno
inc
outsb
insb
int3
xlat
jo
neg
scas
rorb
js
dec
test
fsubrl
and
sub
ret
je
mov
in
or
jle
mov
jecxz
pop
pop
orl
aaa
out
sbb
mov
xor
cmp
inc
add
in
push
out
loop
dec
mov
add
loop
mov
jb
ret
repz
mov
call
jne
pop
cmc
mov
lds
aad
mov
xor
fsub
gs
xchg
sub
lret
cmp
dec
stos
pop
xor
xor
loopne
imul
xchg
loopne,pt
jnp
pop
cmp
les
and
sarl
pop
in
cmpsb
sarb
jb
ss
in
pop
mov
and
outsl
data16
sub
sti
lds
jle
les
aad
js
or
inc
jne
and
test
lahf
popf
jecxz
enter
add
addr16
xlat
clc
sti
aad
aam
std
xchg
mov
jecxz
or
lret
shlb
pop
aam
jecxz
in
mov
mov
mov
mov
es
in
scas
xchg
lret
sbb
jecxz
dec
jne
dec
mov
lock
push
clc
cmc
mov
nop
jne
test
icebp
inc
sub
pop
lcall
rcll
mov
out
movsb
roll
das
inc
cli
call
rcl
sarb
xor
fistpll
mov
adc
mov
pushf
iret
mov
jns
mov
stos
xor
xor
lods
mov
fs
jmp
fstp
cmpl
out
jecxz
test
cmp
cmpsl
loop
xor
pop
jge
push
xor
insb
mov
dec
xor
call
filds
cmpsb
add
cld
out
pop
stos
inc
jp
mov
nop
mov
cmp
jge
call
fldl
xor
adc
xchg
and
push
dec
popf
push
push
sbb
gs
je
dec
call
push
add
adc
cmc
mov
mov
jp
mov
adc
mov
addr16
mov
repnz
dec
push
mov
iret
xchg
xchg
inc
filds
out
addr16
mov
sbb
repnz
rcrb
adc
cmp
cli
stos
adc
add
adc
cli
inc
outsl
push
mov
cmp
inc
xchg
jno
popfw
pop
adc
lret
cwtl
pop
nop
outsl
push
daa
andb
sbb
paddusw
mov
jbe
gs
in
cs
pushf
repz
jp
out
mov
sub
fisubrl
jge
mov
sti
mov
cmp
cwtl
clc
xor
lret
movsb
shl
fsubr
cli
mov
xchg
sub
add
cwtl
dec
xchg
pusha
in
repnz
in
jmp
cli
inc
call
ljmp
js
loop
jbe
add
or
xchg
out
push
xchg
in
cmpsl
sub
mov
cmp
xchg
xor
aas
int3
lahf
leave
add
mov
mov
sub
xor
ss
gs
adc
cmp
xorb
mov
and
fisubs
add
inc
cmc
in
aad
test
int
dec
ja
dec
mov
popf
xchg
mov
push
out
inc
mov
adcl
adc
add
sub
sub
xchg
cmp
xor
xor
xor
test
hlt
mov
and
shll
jecxz
cmp
sub
clc
inc
push
leave
pop
je
in
xchg
ret
mov
out
clc
mov
mov
mov
jae
das
lock
ret
push
pop
mov
cmp
xchg
add
test
push
or
aas
lock
cmp
and
fldcw
lods
pusha
push
addr16
inc
jno
and
push
test
xchg
mov
in
fildl
or
in
mov
test
cmp
jb
sbb
sbb
fimull
jbe
lds
push
divl
xchg
adc
push
and
rcrb
lret
xchg
adc
mov
iret
xor
int
add
ficomps
adc
mov
iret
mov
ss
jo
xor
inc
stos
rclb
sub
int3
test
jno
mov
jb
lcall
out
xchg
jmp
jmp
xchg
cmpsl
shl
jbe
icebp
dec
mov
loope
mov
ficompl
mov
inc
in
and
push
push
xchg
ljmp
xor
cwtl
call
call
nop
sbb
arpl
mov
mov
pop
push
dec
ffreep
fldcw
rorl
or
fdiv
mov
cltd
push
xor
rcll
dec
test
out
loope
gs
femms
and
add
or
or
in
sub
jl
aas
cmp
std
xchg
fsubrs
fbstp
sarb
out
xor
into
jg
dec
mov
mov
mov
scas
jge
inc
xchg
xor
sbbl
ds
cmpsl
int
mov
iret
or
ret
hlt
call
mov
xchg
sub
xor
outsb
aaa
in
andl
pop
repz
mov
scas
leave
mov
ret
pop
mov
lcall
jle
add
lcall
mov
xchg
push
mov
add
sbb
cmp
ret
js
js
arpl
cwtl
std
xchg
xchg
pusha
data16
mov
das
mov
mov
ret
bnd
xor
sti
rclb
subl
and
cld
aam
cs
lahf
and
xor
sbb
movsl
stc
xchg
and
inc
sti
int
xchg
push
cli
cmp
in
ret
xchg
aaa
fcoml
xchg
dec
xor
jge
out
xchg
mov
mov
fbstp
jae
repnz
out
xor
lea
jnp
xorb
push
cmp
out
sbb
push
sub
mov
lret
stos
mov
lock
mov
adc
mov
xlat
cs
arpl
lret
mov
mov
out
pop
out
sub
aaa
mov
xor
inc
xor
fs
sahf
ja
hlt
out
push
jne
jle
js
cltd
in
xchg
movsl
push
test
jnp
insl
mov
xchg
lea
mov
in
stos
dec
xchg
cmp
clc
ja
ficoml
dec
push
xchg
je
outsl
inc
aam
cmp
scas
nop
sbb
adc
test
mov
jne
rclb
mov
rcrb
ret
mov
and
outsb
popf
mov
jae
adc
push
push
xchg
movsb
jne
or
xor
aas
mov
xor
test
lcall
call
enter
dec
xor
jmp
int
dec
int3
cld
sbb
pop
pop
dec
mov
sbb
cmpsl
add
js,pn
push
mov
ficomps
leave
dec
add
outsb
repnz
adc
jb
mov
mov
rolb
bound
jecxz
mov
enter
adc
mov
pusha
or
push
lahf
mov
and
adc
lret
lods
jae
xor
mov
mov
aad
movsl
cmpsl
lcall
pop
and
pop
adc
xor
pop
outsl
and
inc
rcrl
lods
sub
pop
fwait
adc
xor
sbb
pop
jno
cmpsl
mov
xchg
pop
daa
iret
call
dec
or
in
rcrb
call
and
daa
mov
xchg
dec
xor
or
sub
mov
daa
movsl
inc
in
call
fcmove
jae
decb
dec
outsb
das
ljmp
sub
sbb
in
inc
xchg
pop
cmpsl
xchg
adc
dec
or
or
sbb
in
pushf
cs
nop
jnp
or
mov
dec
insl
push
jo
in
out
in
daa
jle
call
lcall
popf
add
push
divl
cmp
rol
call
push
fimuls
add
fidivl
int3
add
mov
call
jns
cmp
sahf
xor
pop
pop
fcompl
and
push
jl
jmp
dec
pushf
insb
lods
sbb
pushl
push
push
fcoml
loopnew
or
into
out
imul
std
sbb
fwait
cmp
push
fisubl
mov
clc
int3
sbb
fcmovnb
xor
cmpsl
inc
cwtl
or
jp
mov
xchg
cs
add
xchg
and
xchg
sbb
bnd
xchg
out
and
push
mov
lcall
out
bound
data16
in
mov
into
mov
dec
jbe
popf
ja
icebp
pop
mov
test
shll
jne
sbb
sbb
cli
cmp
pop
mov
gs
push
cmp
sahf
aas
and
cmpsb
sbb
sub
mov
aam
and
addr16
push
jecxz
cmp
pop
clc
test
outsb
pop
ljmp
repz
dec
insb
popf
pop
jmp
test
sbb
jp
out
add
lods
mov
sti
xchg
cld
jbe
popf
arpl
add
mov
adc
cmp
dec
imull
sub
jb
bnd
mov
cmp
and
jl
pop
mov
jge
jge
push
mov
jecxz
jnp
data16
in
scas
and
jg
lahf
mov
add
pop
add
arpl
cli
and
push
xor
mov
lock
das
fadds
mov
adc
lret
movsl
insb
filds
or
mov
sbb
mov
lret
mov
idivb
gs
xchg
imul
jmp
fidivrs
in
xchg
gs
or
jno
jae
outsb
sbb
call
or
xlat
xchg
shlb
les
xchg
jb
enter
fistps
pop
int3
gs
sahf
pushf
mov
scas
fcmovnb
aaa
jl
sub
stos
xchg
imul
vxorpd
or
test
aam
out
ror
sbb
add
out
aam
pop
mov
xchg
adc
dec
mov
in
ds
sub
mov
imul
iret
es
outsl
push
cmp
dec
cs
cmp
xor
insb
cmp
inc
xor
xchg
mov
mov
adc
xor
sub
fsubs
jl
mov
mov
addr16
es
jns
ljmp
leave
mov
mov
mov
mov
scas
iret
add
dec
call
dec
les
pop
cmpsl
xchg
test
xchg
into
addr16
jmp
mov
in
movsb
pop
xor
mov
es
dec
outsl
shll
js
std
mov
xor
dec
add
lahf
lret
nop
int3
jno
iret
mov
pusha
mov
bnd
pop
rorl
shll
ret
push
jno
jno
popa
xor
ljmp
das
pop
loop
mov
mov
gs
xor
pop
ficompl
in
ss
cmc
test
and
cltd
les
iret
pop
decl
subb
inc
fmul
mov
xor
rcrb
inc
cld
test
cwtl
ret
xor
aad
pop
stc
mov
mov
in
fcomps
lret
mov
es
xchg
ljmp
and
jno
shrb
mov
loop
ss
or
rol
cmpsl
mov
push
js
xchg
pop
aaa
pop
inc
icebp
bound
inc
in
loopne
call
and
mov
push
mov
jbe
jp
sahf
dec
aad
lock
pop
aad
lret
sub
leave
test
test
inc
fbld
cmc
in
mov
and
sub
lock
cmpsl
dec
pop
jge
shlb
int3
jo
scas
aaa
xchg
enter
and
jne
aad
fsubs
xchg
je
adcl
add
cwtl
or
lds
es
adc
cmp
lods
fwait
aaa
sub
jp
fs
bound
sub
jp
pop
daa
mov
add
sbb
out
int
cwtl
mov
xchg
and
icebp
pop
mov
dec
insb
mov
jge
out
cmp
iret
dec
mov
add
shlb
mov
and
mov
sub
ret
mov
jnp
shlb
jmp
lock
loopne
aam
fistpl
jns
daa
cmp
lds
sub
in
aaa
aas
les
lcall
fs
je
push
lock
sub
loop
jno
ss
insb
mov
adc
mov
cmp
fcmovbe
js
call
mov
fstps
xbegin
cld
dec
addr16
xchg
stc
fdivrs
pop
js
mov
mov
nop
mov
push
cmpb
pop
adc
fsubl
cs
mov
mov
cmpsl
popa
sbb
arpl
pop
ss
inc
imul
add
xchg
and
jb
sbb
outsb
dec
shlb
nop
nop
fwait
dec
sub
mov
lock
mov
loop
mov
ljmp
out
aam
hlt
outsb
out
xchg
stos
aad
dec
fistps
and
hlt
cwtl
sub
cmp
jno
lock
and
jecxz
and
xchg
test
dec
mov
je
addl
imul
mov
inc
cmp
or
cli
pop
inc
hlt
test
mov
pop
xchg
xchg
fdivl
dec
push
mov
lahf
gs
pop
hlt
pop
mov
fiaddl
dec
arpl
sub
mov
outsl
pop
adc
pop
loop
cmpl
call
cwtl
add
fdiv
xor
push
orl
cmp
fstl
loopne
adc
cld
les
inc
push
movsb
cmpb
dec
call
test
iret
xor
jo
fisttpll
rorl
iret
das
pop
mov
mull
es
aaa
push
xor
add
in
and
insb
inc
imul
pop
xchg
xor
push
fmul
lret
jo
adc
rcl
lock
jmp
pslld
cmp
ds
and
cmp
adc
loope
imul
lahf
enter
sbb
stc
arpl
sub
scas
sbb
test
cmp
sub
lds
sbb
cmp
or
imul
dec
sbb
xlat
je
pop
rclb
cwtl
ljmp
sbb
cmp
xlat
fdivr
loope
dec
lock
ljmp
adc
dec
or
aam
out
xlat
int3
or
out
xchg
ljmp
xchg
cwtl
mov
hlt
mov
jno
or
test
push
jmp
pop
cmp
clc
push
fsubrs
sub
mov
lcall
push
mov
inc
mov
dec
in
sub
xchg
push
and
scas
xor
lock
jle
jne
fidivrl
jmp
pop
popa
lret
pop
and
out
rorb
cli
mov
fs
lret
pop
cmpsb
and
adc
push
xchg
push
idivb
sub
gs
repz
xchg
sbb
add
shrb
mov
ret
dec
ja
xorb
inc
add
xlat
mov
fs
adc
das
in
xor
fdivl
sbb
mov
in
or
shl
mov
jo
sub
data16
leave
outsl
int3
out
inc
dec
mov
icebp
sbbl
mov
mov
dec
cmp
push
pop
lahf
mov
xlat
pusha
jno
mov
mov
rorb
in
mov
or
loope
pop
mov
add
pop
xor
push
mov
jo
mov
dec
push
and
in
pop
jge
xchg
mov
jmp
gs
out
in
lret
faddl
mov
ja
in
rclb
or
xor
aad
mov
negl
jb
fs
iret
sbb
dec
mov
loopne
mov
fdivrl
adc
jo
inc
jle
sub
ficomps
pop
addr16
in
inc
repnz
xchg
rol
test
mov
fistps
push
fimull
ljmp
fs
popf
xchg
mov
xor
xchg
fidivs
xchg
imulb
fwait
dec
ret
dec
adc
daa
push
mov
cmp
lcall
imul
jnp
mov
mov
xchg
or
push
call
sbb
icebp
push
dec
clc
adc
outsl
jp
in
jmp
cmp
push
pushf
fcoms
add
hlt
jmp
xchg
mov
jns
mov
adc
sub
dec
test
test
scas
subb
std
xchg
mov
push
sbb
sbb
fisubl
aad
insw
dec
sub
scas
loop
cmp
mov
aaa
xor
imul
cltd
test
dec
shrl
in
xchg
pop
jl
in
popf
rcll
xchg
push
shr
arpl
sbb
pop
xchg
xor
xchg
add
test
dec
pushl
movsb
gs
sbb
adc
pop
dec
mov
sub
or
mov
push
call
xlat
mov
je
ja
and
xor
lock
mov
adcl
jle
roll
fwait
clc
xchg
mov
pusha
mov
mov
mov
test
pop
dec
push
cltd
xor
imul
xchg
cs
cmp
pop
adc
ljmp
cli
add
jo
test
lahf
jno
mov
mov
gs
bnd
sub
arpl
adc
mov
xor
mov
cmp
or
jecxz
jno
adcb
movb
push
lret
xor
mov
pusha
cmc
lret
jmp
repnz
mov
and
xchg
popa
mov
jb
cmpsl
outsl
ljmp
cmp
stos
jno
pop
jmp
xchg
add
in
dec
xchg
addr16
push
andl
aaa
push
pusha
in
int
ret
repz
call
mov
shlb
xchg
cmpsb
ficompl
in
aas
or
fs
mov
jmp
lcall
inc
sti
stos
out
cli
mov
inc
int3
ss
lahf
jbe
push
call
mov
mov
and
pop
les
add
pop
mov
mov
jmp
xchg
dec
sbbl
xchg
push
xor
fistps
fs
imul
adc
sub
testb
xchg
js
stos
gs
test
ds
push
lods
push
call
mov
mov
xchg
jecxz
add
sahf
push
insl
daa
mov
inc
inc
bound
repz
call
adc
in
mov
xchg
mov
scas
mov
hlt
and
push
in
xchg
cmpl
push
lret
sbb
lcall
data16
jle
xlat
push
pop
sub
mov
imul
add
call
xchg
pop
pop
adc
mov
or
push
pop
mov
aad
shrl
movsb
sbb
jns
scas
dec
mov
dec
dec
shll
pop
mov
fists
test
mov
dec
pushl
fmul
mov
es
push
mov
and
loop
rcrl
mov
and
je
and
pop
sbbl
jns
xor
fstps
ja
xchg
adc
push
dec
and
jne
inc
repnz
test
add
movsb
addr16
sbb
dec
cli
pushf
outsl
sbb
test
jne
sbb
ljmp
mov
outsl
fs
pop
cs
push
mov
nop
mov
js
test
pusha
jbe
add
cmp
into
mov
and
and
inc
insl
lahf
loope
mov
pop
imul
movsb
xor
xor
out
les
js
aaa
sti
dec
xchg
xchg
clc
test
push
or
ljmp
dec
stos
fdivrs
cwtl
rorb
adc
icebp
push
xlat
jmp
sbb
clc
xor
mov
fsubl
int
inc
xor
inc
and
dec
out
je
mov
stc
push
js
sarb
cmp
xor
push
add
jne
iret
xor
push
ljmp
xor
xchg
cli
hlt
das
call
dec
jmp
fcompl
mov
cmp
outsl
mov
orb
fldcw
stos
mov
inc
jecxz
jl
push
arpl
cwtl
pop
movsl
xchg
lea
iret
ljmp
rclb
bound
jae
mov
dec
iret
popf
inc
cmp
hlt
mov
lock
xlat
cmpb
mov
or
dec
ja
inc
xchg
pop
xchg
jmp
push
xor
out
sub
ret
dec
int
jno
call
adc
push
mov
fidivl
sub
je
adc
inc
add
int3
mov
mov
or
aas
sub
cld
lcall
mov
mov
sbb
cmp
icebp
loop
gs
add
ljmp
addr16
pushf
sahf
scas
aas
pop
imulb
add
push
inc
mov
scas
fildl
push
mov
jne
lods
jmp
xor
xlat
ret
outsl
cmp
mov
cmp
ja
sbb
in
nop
sbb
and
mov
ret
lcall
jl
inc
xor
out
and
fwait
cltd
jecxz
fs
jno
push
imul
in
and
xchg
xor
cwtl
js
dec
mov
pop
fs
fmull
jo
lret
call
aas
dec
mov
xlat
outsl
test
mov
pop
rolb
and
xchg
jl
mov
pop
aad
adc
dec
dec
fcom
mov
popa
call
mov
xor
cwtl
popf
jmp
call
mov
xchg
and
xchg
pop
ret
sub
pop
push
xchg
in
mov
ret
mov
out
andl
std
mov
mov
ljmp
ds
and
cwtl
add
rorb
cmc
mov
pop
dec
inc
scas
fiaddl
or
sti
imulb
xor
out
hlt
in
rolb
xchg
stos
mov
loopne
dec
popa
test
mov
sbb
jo
mov
jecxz
ljmp
test
xchg
test
dec
gs
xchg
push
out
in
mov
ljmp
test
pop
mov
lret
pop
aas
punpckldq
pop
cmp
loop
mov
das
or
mov
out
xor
lea
mov
gs
jne
daa
idiv
and
add
loope
jno
les
cmc
mov
xor
and
push
mov
out
lods
movl
mov
lock
test
enter
ss
rcrl
addr16
incl
movsl
fistpll
sub
or
ljmp
mov
mov
fsubl
adc
outsb
bswap
cmp
addb
xchg
add
mov
or
clc
int3
mov
fsub
push
dec
sub
cmp
cli
inc
dec
rolb
push
jo
mov
pusha
inc
add
pop
mov
jnp
dec
ds
jl
loopne
scas
push
lahf
push
and
inc
fbld
into
out
pop
lods
jne
dec
xor
mov
pop
in
aas
lret
cli
loop
aaa
lret
cwtl
dec
cmc
in
xor
mov
es
mov
cltd
mov
pop
cmp
gs
dec
loope
mov
ds
shlb
lahf
xor
jno
mov
out
xchg
mov
push
cwtl
fmuls
fimull
xchg
push
mov
fs
loopne
fistpll
inc
les
aam
add
cwtl
fmuls
loopne
inc
nop
mov
nop
cwtl
out
insl
addr16
push
std
mov
inc
fchs
xor
or
add
push
mov
push
notl
aam
lds
adc
add
and
aad
fldenv
pop
lock
xlat
adc
addr16
adc
push
adc
leave
or
out
cmpsl
sti
shlb
scas
mov
jb
js
or
fcoms
rolb
xor
roll
cmp
cmp
mov
orps
aam
lea
sbb
iret
dec
dec
cmc
xchg
mov
cmp
mov
pop
pop
adc
stc
cmc
jae
nop
mov
in
int3
inc
fists
std
push
xchg
hlt
pop
mov
popf
adc
icebp
jbe
rep
dec
add
fcmovb
cmp
adc
xor
call
test
rolb
xchg
add
and
leave
in
mov
xor
pop
add
mov
inc
dec
mov
and
lea
dec
dec
pop
add
ss
out
les
movsl
outsl
mov
movsl
xchg
push
clc
sbb
out
mov
dec
or
mov
fidivl
sti
and
iret
movsb
cs
cli
shll
pop
mov
rclb
incl
mov
mov
dec
push
mov
repnz
aas
iret
fadds
dec
and
nop
movsb
shl
daa
push
pop
inc
aad
ja
cli
lods
test
and
cmp
mov
movsl
jne
in
call
pushf
lcall
sub
or
out
ret
sbb
dec
pop
jecxz
xor
in
movsb
jne
sbb
add
push
in
cmp
xchg
pop
mov
rcr
inc
in
push
call
iret
jae
mov
mov
rcr
incl
mov
into
inc
xchg
aas
cmp
xchg
and
fs
pop
arpl
aad
into
into
mov
dec
cld
adc
in
sbb
mov
iret
ds
lods
rcrl
movsl
add
jp
or
inc
imul
inc
fistpl
sub
xlat
xchg
pop
xor
mov
xlat
ja
mov
mov
dec
scas
ljmp
xor
outsb
lcall
push
mov
in
negl
test
leave
aad
aad
fadds
cmpsl
imull
xchg
loop
popf
add
push
aam
fcoml
lahf
outsl
test
mov
mov
loopne
shl
icebp
icebp
xor
daa
popa
cmp
push
nop
mov
jbe
or
xor
aaa
gs
xlat
fs
dec
push
xor
inc
push
dec
inc
shr
mov
mov
stos
rolb
ret
loope
mov
imul
xlat
mov
push
mov
les
xchg
mov
out
gs
fmuls
jbe
sub
inc
dec
inc
dec
inc
adc
sahf
iret
push
fildll
clc
call
add
pop
rolb
int
sarb
xchg
lret
push
lahf
dec
cmp
jmp
push
mov
adc
fmuls
xchg
data16
sbb
push
pop
call
pop
daa
repnz
jp
fs
outsb
adc
mov
and
in
in
lock
jns
nop
shll
or
lds
scas
clc
ljmp
cwtl
push
cld
stos
xorl
leave
lahf
addr16
xor
sbb
mov
out
adc
hlt
dec
cmpsl
test
pop
les
xchg
xor
lahf
nop
xchg
fcoms
iret
test
out
repnz
rcrb
data16
loop
outsl
fisubrs
jbe
je
fwait
push
mov
sbb
cmpsb
mov
flds
lods
movsb
cmp
xchg
ficomps
movsl
jno
lock
in
push
pop
addl
loopne
stos
inc
mov
int
popa
jl
jo
repz
fdivrl
mov
lods
outsl
ror
mov
sub
cmp
jo
ficomps
js
push
sbb
test
dec
dec
bound
xor
push
pop
fwait
out
movb
repz
fisubrs
mov
in
pop
xlat
pop
cmp
insl
pop
or
jnp
sbb
cli
out
pusha
push
int3
lds
movsb
pop
and
inc
xchg
out
mov
std
push
in
and
lods
and
and
push
test
push
aas
imul
loopne
cld
or
mov
inc
cmpb
push
mov
mov
loop
rorb
imul
gs
dec
push
or
cmp
adc
fs
mov
pop
xchg
adc
mov
fdivrl
rol
nop
mov
inc
int
mov
xor
dec
int3
and
push
call
aad
lds
sbb
sub
push
xlat
adc
rolb
in
push
jb
gs
adc
jmp
rorb
aam
dec
mov
stos
adc
mov
xchg
jno
sbb
insl
sbb
pop
mov
push
mov
insl
sbb
mov
sub
dec
xor
xchg
xor
inc
jp
push
fs
jge
stos
lea
xchg
mov
xor
test
or
dec
mov
dec
scas
inc
fbld
cmp
xchg
pop
pop
js
out
adc
adc
ret
mov
mov
sahf
ficoml
xor
fnsave
outsl
inc
fcoms
std
fisubrs
cld
fsubr
ret
inc
inc
roll
inc
les
in
mov
stos
andb
mov
mov
frstor
sub
incl
pop
pop
inc
jg
andb
lea
or
mov
aas
xchg
cmpsl
int3
jno
es
leave
mov
mov
scas
inc
add
out
pop
cmp
outsb
and
sti
or
sub
xchg
pop
cmpsb
xor
pop
jmp
or
ret
in
imul
gs
jbe
repz
or
add
mov
in
gs
sbb
out
mov
mov
mov
dec
aad
pop
mov
jmp
or
xor
dec
xchg
imul
jnp
sub
movsb
xor
xor
test
clc
mov
pusha
pop
inc
fldenv
mov
pop
jo
stos
fcompl
lcall
fsub
aaa
push
das
sbb
add
xchg
inc
xchg
iret
decl
out
xchg
aad
lock
adc
sub
test
dec
dec
popf
sbb
fsubs
loopne
data16
in
inc
jecxz
and
inc
jmp
test
out
pop
push
xchg
or
sub
push
repz
cmpsb
repz
mov
mov
xor
inc
movsb
negl
cwtl
mov
xor
or
insl
movsl
mov
aam
mov
pop
inc
data16
cs
and
mov
stc
stos
and
xchg
jno
incb
push
mov
ret
outsb
push
imul
sti
mov
or
lds
xchg
cmp
aad
lods
push
or
aad
add
ret
call
fdivs
mov
pop
mov
rcl
gs
inc
mov
fsubr
sub
and
dec
add
sbb
mov
rolb
xor
dec
mov
sub
pslld
jmp
dec
push
shrl
pop
test
stos
mov
mov
fwait
movsl
xchg
clc
cmc
xchg
test
loop
pop
outsb
es
mov
xor
jbe
stos
aaa
out
xchg
inc
ja
xchg
adc
and
test
gs
mov
mov
dec
cmp
xor
jo
xor
push
faddl
call
dec
cwtl
mov
sti
fstpt
fadd
adc
cmpsl
je
js
xor
or
and
cmp
repnz
out
sbb
inc
push
mov
insl
sub
mov
cmpsl
xchg
in
loopne
mov
pop
jae
scas
xchg
add
add
pop
sub
pop
xchg
fisubrl
sub
test
xchg
mov
or
lret
cmpsb
mov
sarl
adc
mov
adc
cmpsl
out
sbb
fimuls
jp
mov
addr16
rol
mov
loope
cmp
push
mov
cmpsb
xchg
shlb
lods
repz
sbb
mov
sarl
test
mov
out
cmp
jge
inc
or
cmp
js
rcr
int3
fiadds
ss
xchg
inc
and
sbb
clc
push
cmp
fidivl
filds
add
mov
adc
mov
call
jo
mov
shrb
add
sti
test
loope
add
mov
in
int3
test
fnstcw
ficompl
sbb
sub
das
xor
insb
je
fisttpll
jbe
cwtl
pop
rol
mov
clc
pop
dec
lock
out
push
dec
rorb
adc
sub
push
out
in
or
aam
xor
adc
lds
ret
lods
mov
cwtl
mov
push
xchg
fbstp
inc
adc
decb
fildl
xchg
fisttpll
out
add
lock
sbb
sahf
test
call
shrb
iret
xchg
xor
fldt
jbe
int3
das
mov
sbb
xchg
call
dec
cmc
ss
sbb
push
xchg
sti
mov
pop
xor
sbb
dec
in
out
aad
cli
xlat
cmp
xor
add
fsubrl
pop
jae
es
gs
addr16
out
fwait
xchg
cwtl
jns
cmpsb
es
sar
out
imul
xchg
pop
jne
mov
pop
xchg
push
aam
push
lea
mov
into
into
repnz
fistpll
xchg
push
jecxz
std
push
int
jbe
das
fwait
gs
jae
xchg
loopne
dec
loopne
fmulp
rclb
pop
jmp
sbb
stos
inc
out
divb
xchg
pop
mov
mov
loope
pop
js
mov
inc
out
ret
sbb
cwtl
adc
int
sub
outsb
imul
nop
aaa
inc
mov
in
mov
cmp
push
cwtl
jg
out
inc
mov
imul
dec
xchg
nop
shll
mov
in
sub
lret
leave
lret
xchg
and
inc
and
xchg
icebp
jbe
out
pop
mov
fmuls
mov
nop
jge
stos
mov
add
mov
sub
or
aas
push
fucompp
fildl
mov
negb
mov
mov
mov
test
imul
mov
imul
mov
xchg
sbb
fdivr
rolb
cwtl
fisttpl
data16
shl
shl
pop
ja
out
add
popl
and
and
lock
ret
mov
sbb
hlt
pop
add
jo
and
xor
push
in
push
out
push
xlat
lock
and
add
push
or
xchg
jl
jecxz
jbe
test
sub
lods
imulb
or
mov
mov
gs
loopne
fbld
sarb
add
pop
pop
cmp
bound
outsl
and
mov
mov
ljmp
pop
add
stos
pop
test
sub
ja
adc
addl
push
leave
clc
out
xor
in
je
sbb
lods
leave
out
xchg
mov
mov
lock
ljmp
cmpsl
pop
jbe
push
push
and
lods
dec
xchg
jno
push
jge
sub
in
hlt
push
sarl
adc
shll
incl
push
and
mov
sbb
fiaddl
out
out
int3
mov
clc
subb
add
add
cmp
repz
cwtl
lock
mov
xchg
test
mov
in
aam
lcall
fistps
cmpsl
das
xor
fimull
lret
push
aas
iret
iret
mov
in
xlat
gs
inc
mov
in
inc
insl
or
pop
sbb
roll
mov
sbb
out
clc
sbbb
shrb
ljmp
dec
mov
xchg
lods
inc
cs
and
in
or
je
test
mov
pop
clc
push
pop
jl
rcrb
nop
inc
je
repz
xor
fiaddl
mov
adc
mov
ss
mov
dec
es
pusha
push
inc
add
js
cli
push
movsl
mov
xchg
mov
or
mov
cmp
fcomps
sub
jmp
aaa
xchg
mov
push
mov
and
jns
ret
dec
pop
fs
aaa
out
enter
inc
fdivl
inc
xchg
pusha
aad
into
clc
dec
iret
jno
lahf
xchg
pop
cs
fisubrl
addr16
in
pop
and
cmp
mov
lcall
cli
and
mov
or
movsl
repnz
mov
aam
dec
test
mov
xchg
xchg
xlat
popa
push
add
cwtl
sar
test
fistps
data16
call
or
pusha
aam
jne
out
popa
negb
test
cmp
je
out
in
xchg
xor
or
jecxz
jb
adc
inc
push
loopne
test
in
leave
cli
xlat
sub
fsub
xor
mov
into
jo
jae
ret
daa
sahf
or
dec
xchg
nop
push
dec
iret
adc
add
aam
cmp
mov
xlat
nop
or
repnz
add
push
movsb
xchg
add
mov
std
sbb
add
fdivs
insl
pop
cmc
ja
out
rcrb
daa
test
inc
jbe
lahf
imul
mov
sub
iret
add
rolb
js
xor
cli
sub
js
out
lret
mov
add
lahf
dec
addr16
sub
push
sbbl
fs
pushf
cwtl
mov
stc
in
xor
adc
inc
cmp
mov
sbb
push
sub
jo
je
out
in
mov
cs
add
or
cmp
mov
outsl
fdivrl
push
insl
mov
inc
test
mul
cltd
jmp
sahf
dec
iret
ds
jo
inc
xchg
jle
aad
fimuls
stos
adc
jae
loopne
jo
xchg
stc
test
sahf
cs
int
pop
jge
jl
incb
lods
sub
push
je
out
jnp
pop
sub
or
mov
pop
imul
in
xor
jp
adc
sti
sbb
pusha
cmp
mov
mov
insb
in
fdivl
nop
sub
lahf
xchg
fs
daa
in
out
mov
xchg
fstp
stos
pushf
out
adcl
fisttpll
cmp
xchg
push
or
push
pop
inc
cwtl
rolb
aas
fistl
adc
icebp
loope
out
sub
in
inc
adc
sbb
mov
jmp
sub
addr16
movsl
into
sbb
cwtl
repnz
clc
xchg
push
cmpsb
adc
fistpll
clc
add
cwtl
data16
fcompl
mov
adc
repz
mov
sub
jne
add
mov
dec
stc
das
jae
je
cmp
add
movl
mov
ret
jns
xor
lret
or
outsl
sub
lock
pop
push
clc
inc
jge
sub
into
mov
arpl
loope
lret
in
mov
aaa
rorb
mov
ljmp
dec
outsb
fsts
push
vpsraw
inc
mov
or
push
les
test
add
popf
pushf
mov
or
lahf
cmp
lea
out
xor
scas
sahf
adc
ret
bound
imul
or
dec
int3
subb
aam
pop
jae
push
cmp
mov
xor
pop
test
xchg
daa
push
pop
imul
jecxz
bound
mov
xor
mov
int
clc
sub
nop
out
shrl
call
pop
sbb
test
xor
xchg
adc
dec
imul
mov
mov
repnz
mov
xlat
mov
and
call
mov
sbb
cmp
pushf
cli
jl
sbb
test
out
push
insl
jmp
test
in
stos
lret
stc
mov
js
jae
pop
lea
cmc
mov
int
push
sbb
pop
call
cld
push
rorl
mov
and
mov
je
leave
mov
clc
insb
push
mov
hlt
es
mov
adc
fs
fwait
imul
loope
jmp
sub
repz
push
imul
in
cwtl
popa
lock
push
sbb
cmpsb
in
inc
add
out
aas
mov
mov
xchg
mov
push
mov
nop
jo
int3
adc
popf
test
xchg
mov
aas
hlt
gs
gs
lret
jae
bnd
jmp
jp
in
sub
jl
pop
adc
clc
jecxz
mov
xor
pop
cwtl
pop
xor
sarl
fcomp
sbb
mov
pop
mov
or
rcr
push
or
dec
lock
xchg
mov
add
push
sbb
stos
sub
loopne
mov
daa
lods
lahf
mov
call
push
cmpb
and
push
test
fldt
movsb
repz
push
xchg
addr16
cli
out
inc
pop
jo
stc
or
daa
repnz
xchg
repz
popf
insb
stos
pop
jmp
clc
jl
sbb
sub
jno
push
test
mov
pusha
jl
in
rcl
inc
in
pop
dec
mov
in
ret
pop
arpl
sarb
lock
pop
inc
or
push
leave
jmp
fwait
insb
mov
aaa
out
mov
inc
pusha
xor
loopne
popf
push
cld
adc
xor
scas
and
sbb
sub
in
inc
nop
daa
and
sbb
xchg
pop
jle
imul
imul
in
les
xchg
shl
shll
fcoms
or
aas
xchg
xor
loope
scas
into
or
rorb
push
dec
mov
dec
daa
shlb
out
mov
lock
xor
sbb
mov
push
jmp
leave
ds
ja
stos
xchg
mov
rolb
cmc
pop
cmp
jno
imul
lods
shl
mov
xchg
dec
lret
mov
inc
sbb
mov
jl
push
xchg
ret
daa
cmp
out
xor
test
push
and
lcall
mov
mov
lahf
test
call
jle
cmp
mov
cmc
int
push
inc
stos
int3
push
sti
or
push
dec
in
fcompl
jno
addr16
scas
jne
test
jnp
pop
sub
adc
or
xchg
repnz
in
pop
leave
mov
fs
sub
xchg
iret
push
popa
sar
fsub
or
jne
aam
ljmp
push
cmpsb
xchg
mov
test
pop
sub
xchg
xchg
xor
out
imul
adc
orl
xchg
adc
pop
or
adc
sbb
mov
xor
or
dec
inc
stc
out
sbb
ret
iret
add
or
jae
aad
mov
cmp
roll
or
pop
mov
icebp
sar
inc
push
mov
jecxz
rcl
pop
xlat
adc
dec
mov
sub
in
test
in
je
add
lods
stos
adc
movsl
cld
movsb
insb
shlb
sub
inc
pop
test
sbbb
mov
sbb
cltd
pop
fdivl
out
and
cmp
jmp
int3
push
cmpsl
lds
push
ja
pop
jmp
divl
movsb
bound
fadds
inc
mov
loopne
fcompl
mov
sbbl
popa
sub
mov
int3
in
push
ja
jle
xchg
adc
iret
mov
xor
cmpsl
rorb
sahf
push
js
and
mov
cld
stos
pop
mov
cwtl
ds
jp
push
enter
rcrb
cmpsb
push
outsl
aad
test
ljmp
call
daa
sub
inc
iret
inc
cmpsl
and
lahf
xchg
loopne
pop
jo
mull
xchg
mov
push
imull
cmp
aas
mov
jecxz
mov
inc
pusha
dec
mov
test
pushf
out
jno
or
push
jns
cmc
push
and
xchg
adc
icebp
sub
dec
mov
arpl
mov
popf
pop
int3
pop
fsubs
ret
cmp
xor
fildl
lods
cmpsb
xlat
mov
loop
shl
mov
mov
or
mov
add
jle
push
sub
pop
fiaddl
jbe
mov
das
push
fcmovnu
mov
je
icebp
mov
or
xor
push
std
lcall
not
aam
gs
inc
or
mov
test
sbb
loop
test
sub
in
ja,pt
sarb
sub
cwtl
add
and
fs
sbb
sub
notl
push
out
cmp
xor
inc
and
aas
into
lret
ljmp
cltd
and
pop
mov
fmull
mov
inc
and
outsb
sbb
pop
dec
sti
rolb
ja
mov
cmc
test
hlt
pop
gs
lds
and
cmp
dec
aad
add
inc
repz
lock
jle
cmpsl
leave
rclb
mov
xor
inc
cwtl
test
inc
les
pop
jp
push
lods
xchg
data16
lahf
push
push
inc
fs
rcl
jno
mov
mov
gs
out
imul
sbb
or
add
xor
out
fs
out
jns
adc
int
pop
mov
xchg
adc
mull
pop
test
lret
push
mov
sahf
sbb
lret
xor
mov
inc
add
or
adc
les
dec
add
lock
mov
stos
std
mov
add
std
fmull
fbstp
pop
or
movntq
mov
ds
push
out
or
mov
mul
outsb
aam
push
xchg
adc
jecxz
repnz
and
repz
and
hlt
aas
cli
test
adc
mov
cmp
jmp
or
nop
imul
inc
sbb
fsubrl
fcmovnu
fbstp
sbb
jmp
xchg
sbb
or
sbb
and
jl
cld
ret
mov
sbb
cmp
mov
pop
lahf
mov
mov
inc
mov
sbb
xor
aaa
mov
test
ds
mov
or
push
lock
mov
jg
stos
cmp
pop
mov
xchg
orb
mov
test
pop
pcmpeqd
jmp
pushf
xorb
lds
cmp
icebp
or
outsl
in
and
xor
mov
add
idivl
jecxz
add
sub
mov
xchg
test
inc
out
pop
test
or
jbe
inc
adc
sarl
stos
fdivs
xor
data16
int
in
xchg
mov
pusha
adc
sbbb
pop
es
clc
mov
addr16
lret
dec
outsl
xchg
add
add
mov
gs
fcmove
lock
out
sbb
out
rclb
push
jp
lds
xor
pop
adcl
dec
jge
shrl
mov
add
cld
jo
adc
sub
loop
lea
clc
jmp
mov
inc
pop
mov
xchg
and
add
cmp
addr16
mov
xor
out
setp
mov
rorl
idivl
push
mov
or
int3
pop
sbb
iret
test
push
repnz
into
inc
fisttps
outsb
mov
cs
cld
adc
int3
fcmovne
call
data16
gs
mov
xchg
leavew
mull
mov
push
gs
aad
pop
out
lret
dec
rcrb
mov
lcall
nop
into
cwtl
aas
sub
movsb
cmp
in
push
nop
cmp
fdivs
mov
fildll
pushf
mov
andnps
scas
push
fnstcw
cwtl
adc
iret
jb
mov
repz
fsts
mov
aaa
mov
imul
leave
xor
out
fdivl
icebp
repnz
jns
xor
sbb
xchg
jbe
add
mov
mov
xor
clc
jo
pop
add
out
ret
in
in
out
les
in
sbb
and
sub
sub
lahf
mov
lods
lret
push
gs
test
in
daa
shl
xor
gs
add
gs
test
xor
and
clc
mov
aas
insl
scas
ljmp
sub
test
mov
push
dec
outsl
scas
testb
xor
inc
iret
fcomip
ret
jo
fsubp
cmp
adc
pop
ss
jo
and
test
lret
out
cs
push
outsb
dec
divl
cld
imull
cmp
inc
mov
mov
lahf
aad
insl
hlt
xchg
mov
add
and
adc
jb
aaa
mov
mov
loopne
pop
dec
mov
call
jbe
push
xchg
mov
and
sub
push
ret
cmp
mov
mov
js
cmp
mov
mov
cmpsb
sbb
int
xor
sbb
cmpsl
xor
push
xor
and
adc
int
shr
bound
in
xchg
xor
sub
orl
or
sbb
adc
add
cwtl
lods
js
or
outsl
sbb
cmp
xor
pop
nop
movsl
push
push
dec
pop
lcall
pop
add
imul
cwtl
mov
js
cwtl
int
pop
fnsave
aaa
pop
out
scas
jne
insb
fcompl
aad
or
div
fucompp
mov
ret
mov
loopne
out
mov
mov
mov
lcall
je
push
mov
call
and
xor
xlat
out
call
sub
or
sbb
pop
ljmp
dec
in
int3
pop
xchg
inc
xchg
adc
loopne
sub
push
pop
push
mov
mov
idivb
loope
daa
insl
outsl
inc
outsl
or
jne
into
clc
incl
push
adc
jp
or
jb
iret
aad
fwait
pop
inc
push
add
push
and
push
push
aaa
cli
cs
and
jmp
fidivs
mov
adc
pop
pop
int3
add
addb
sti
mov
mov
xchg
sub
dec
or
cmovl
fs
dec
mov
xor
push
xchg
mov
jo
or
mov
in
push
push
stos
xchg
jge
call
mov
cwtl
xor
es
clc
lahf
cmp
mov
call
clc
xor
push
mov
inc
mov
push
inc
adc
mov
mov
call
lea
and
jns
sub
divb
icebp
or
dec
sbbb
add
mov
hlt
icebp
and
mov
dec
sub
aaa
cmpl
addr16
jge
imul
in
sahf
fwait
mov
ret
sbb
jne
ret
xchg
mov
or
inc
popf
xor
test
mov
pop
rorl
inc
loopne
add
inc
shrb
shr
sarl
adc
call
add
dec
inc
pop
in
push
lahf
dec
shlb
gs
lods
sbb
dec
or
imul
xor
xchg
pop
sub
mov
test
mov
clc
mov
pop
cmpsb
clc
push
adc
clc
gs
add
add
in
xor
cmp
sub
aaa
mov
mov
bound
xor
cmpsb
aaa
xchg
jecxz
mov
imul
sahf
lock
sbbb
cmp
mov
fistpl
nop
xchg
mov
push
push
mov
cltd
idivb
and
lcall
jno
mov
xlat
int
ret
push
fwait
cwtl
adc
std
outsl
mov
push
add
pop
mov
call
leave
mov
adc
gs
icebp
inc
mov
xchg
pop
fldenv
push
mov
js
cmp
mov
add
lea
mov
xor
test
lahf
xchg
movsb
inc
out
xchg
xor
sbb
mov
add
inc
inc
cmpsl
pop
or
lret
pop
outsl
mov
cmp
xor
pop
mov
iret
add
ss
xor
test
lock
mov
inc
cmc
adc
xchg
mov
lret
ret
idivb
test
dec
mov
call
inc
shl
push
sub
clc
push
and
mov
mov
maxps
jp
xlat
sub
lret
lods
je
jb,pn
inc
mov
inc
xlat
in
cmp
cmc
pop
sub
sbb
addb
nop
rcrb
ss
out
sub
sti
mov
imul
xor
adc
movsl
daa
out
cmc
cmp
inc
push
inc
shll
lods
pushf
insb
leave
mov
xchg
jae
jno
cltd
mov
mov
push
add
mov
fisubl
dec
and
imul
sbb
out
push
imul
je
pop
xor
ljmp
dec
test
mov
bound
mov
add
out
lret
jmp
adc
jbe
sbb
cwtl
sti
sbb
popf
pop
mov
inc
xchg
push
in
dec
pushf
pop
xchg
in
lods
jg
inc
pop
push
sub
jle
cmc
loope
pop
mov
mov
xchg
out
inc
inc
cmc
sbb
int
repnz
sarl
jno
repnz
mov
repz
xchg
negb
scas
aam
mov
mov
lahf
sub
push
jge
adc
hlt
fmuls
xchg
jb
outsl
or
xchg
addl
shrb
hlt
in
or
cmpsb
les
lea
jb
js
xorl
xchg
adc
and
ret
call
stos
arpl
loopne
js
xchg
ja
fildl
int3
xor
jmp
data16
adc
leave
mov
out
pop
inc
sub
std
xchg
xlat
pushaw
in
fcoms
xchg
push
test
jo
xchg
insb
xchg
notb
cmp
lret
inc
mov
and
and
je
ficomps
mov
push
add
lcall
testb
jne
mov
test
add
fcoms
pop
inc
push
push
ja
rcll
pushl
out
mov
adc
not
mov
mov
out
or
pop
lret
in
xchg
call
mov
repz
push
sub
add
mov
mov
out
pop
push
in
push
push
mov
out
cmp
pop
fistl
mov
add
adc
dec
mov
mov
rep
dec
sbb
imul
loope
pop
inc
lods
cmp
test
lock
xchg
push
ss
add
cmpl
aas
aad
jne
adc
std
mov
ljmp
jo
inc
pop
push
add
push
lods
out
imul
mov
sahf
rcll
stc
aad
dec
adc
and
adc
cmp
rorl
xor
mov
call
pop
mov
iret
sub
inc
pop
cltd
lahf
xchg
stos
adc
fwait
inc
popl
pusha
into
pop
inc
insb
fnstcw
addr16
xchg
mov
aaa
adc
test
cmpsl
push
inc
in
gs
mov
xor
in
fucomip
mov
ret
lahf
push
scas
dec
daa
movsl
jl
sbb
fcmovb
xor
and
pusha
flds
cli
pop
into
xlat
pop
rolb
mov
xchg
aaa
pushf
sbb
mov
ja
in
pop
mov
stos
pop
cld
xchg
pop
xchg
pop
das
xchg
inc
or
movsb
stos
or
dec
in
mov
xchg
add
in
sbb
sub
xchg
ljmp
lcall
adc
daa
shll
sub
sbb
fbld
pusha
push
cwtl
xor
add
mov
int3
ljmp
adc
pop
roll
shrb
cmp
adc
icebp
stos
mov
adc
test
in
cmp
loop
and
mov
loope
xor
aas
inc
test
dec
iret
outsl
loopne
add
sbb
ds
and
adc
fcoms
jmp
sub
inc
inc
push
mov
mov
mov
cmp
outsb
cld
dec
int
iret
in
les
insb
rorl
stos
aam
sub
mov
xchg
loope
cmp
mov
aam
push
imul
repnz
rorb
adc
xor
push
cmp
pop
lret
lcall
pop
gs
and
xchg
inc
xchg
push
ror
fsub
ljmp
mov
sub
xor
imul
xchg
gs
jle
or
jge
xor
push
sti
mov
xor
ja
add
mov
fadds
je
rorb
gs
jno
mov
ljmp
int
pop
cmc
push
add
movsl
sub
in
ret
out
jne
inc
pop
xor
dec
scas
jmp
mov
mov
xchg
in
aas
and
repz
gs
nop
sub
cmp
out
cltd
adc
jmp
add
clc
cmp
ret
dec
lahf
aas
dec
cli
mov
fistl
mov
gs
lret
je
fxch
sbb
ljmp
lods
push
movhps
sar
shl
mov
dec
cmp
pop
in
clc
xor
pop
sub
inc
out
mov
hlt
cwtl
cwtl
add
repnz
lea
add
nop
rclb
mov
fisubrl
cmp
cmp
jecxz
jg
mov
shlb
ljmp
pushf
in
aas
jl
mov
mov
push
push
cs
in
inc
mov
dec
shlb
sbb
ss
and
cmp
xor
ljmp
xchg
inc
sub
mov
js
stos
lahf
mov
push
xor
ret
mov
aaa
mov
jno
dec
nop
cli
xor
in
shlb
push
push
roll
inc
add
inc
pop
inc
adc
int3
push
loopne
ret
mov
clc
mov
lret
in
out
cmp
mov
btc
dec
sbb
les
aad
mov
cmp
fs
cmc
and
jnp
inc
rcrl
xchg
repnz
rorl
ds
rorb
cwtl
lret
push
int3
test
adc
in
aad
mov
dec
lcall
loope
lods
inc
inc
loopne
add
push
mov
shl
xchg
jmp
mov
lret
gs
or
pop
or
jl
or
insl
or
rcl
lock
and
sbb
call
push
pop
push
movhps
loopne
adc
js
dec
pop
sbb
and
shl
movl
xchg
xor
xchg
push
lcall
mov
into
int3
pop
mov
inc
dec
inc
push
sti
inc
notl
inc
xchg
mov
ljmp
repz
cmp
les
mov
and
pushf
fisubs
pop
mov
lahf
and
sbb
pushf
addr16
and
xchg
out
push
stc
mov
shl
movsb
imul
insb
add
cmp
aas
push
enter
out
fs
in
lret
loop
sbb
movsb
jb
mov
repnz
imulb
xchg
insb
xor
scas
push
pop
aaa
rcrb
jbe
dec
pop
rep
nop
pop
xor
pop
mov
jecxz
adc
movsb
les
jb
adc
push
imul
divb
imul
imul
push
jl
icebp
xlat
lock
inc
cmc
mov
sub
xchg
cmc
out
add
jo
mov
xchg
inc
mov
cli
adcl
mov
push
sbb
scas
insb
cmp
hlt
out
cs
lret
insl
inc
mov
out
rolb
push
mov
cmc
fcoml
hlt
imul
jp
add
in
loopne
sbb
xchg
fs
jb
call
add
add
dec
outsb
lods
add
pop
sbb
in
mov
mov
xchg
push
add
out
shll
gs
xor
in
xlat
adc
ljmp
lods
out
sbbb
add
lret
add
sti
push
aas
popa
outsb
lods
call
popf
movsb
sbb
insb
aaa
popa
or
or
out
add
dec
lods
cmpsb
pusha
dec
clc
popf
and
imul
imul
inc
sub
cwtl
aam
in
xor
push
out
out
cmp
imul
cli
imul
xor
adc
pop
or
mov
imul
outsl
sbb
lods
push
cmp
daa
imul
out
dec
addr16
insb
popf
divl
mov
mov
push
inc
imul
outsb
out
mov
add
push
jmp
pop
iret
aad
mov
or
xchg
imul
daa
imul
out
xchg
mov
aam
mov
ljmp
xchg
out
push
in
inc
mov
ljmp
mov
hlt
lahf
les
adc
mov
xor
in
imul
cmp
mov
mov
mov
repnz
cltd
iret
in
out
cld
aam
cmp
pop
sbb
jle
sbb
insb
lock
flds
xchg
or
sub
xchg
test
out
pop
push
bound
dec
mov
hlt
insb
out
and
repz
or
jb
jl
fsubrs
mov
xchg
mov
int
hlt
adc
hlt
sbb
imul
gs
rcll
inc
loopne
cmp
int
sbb
mov
out
rcrl
push
pop
xor
jmp
mov
and
out
cwtl
jecxz
mov
or
mov
into
cld
and
or
xor
or
xor
aad
xchg
repz
inc
das
sti
pop
mov
nop
push
xor
mov
push
push
out
insb
dec
xchg
ret
gs
dec
imul
xor
add
cmc
xor
cmp
mov
jns
popa
dec
data16
and
sub
mov
popf
push
inc
push
cltd
in
fwait
xor
shl
push
xchg
jno
test
sbb
lock
cmp
add
fldcw
inc
mov
out
xbegin
dec
mov
pushf
ret
push
shl
mov
xchg
rorl
xor
add
push
cmp
jge
cs
jmp
pusha
shl
push
xchg
lea
gs
push
push
jbe
out
cmp
das
mov
movsl
imul
in
imul
adc
mov
addr16
inc
test
out
push
call
mov
addr16
xchg
xor
push
adc
ja
pop
repnz
test
push
addr16
aad
xlat
cli
out
mov
pop
out
hlt
imul
addl
int3
ljmp
movsl
mov
aas
mov
lods
push
mov
lock
daa
inc
push
cmc
push
sub
lcall
xchg
xchg
into
adc
mov
jns
clc
or
xchg
out
jg
sti
fstpl
fdivrp
shlb
lcall
in
ljmp
dec
cwtl
lret
pop
jle
sbb
nop
sbb
imul
fimull
ljmp
adc
outsl
add
out
in
fwait
mov
out
push
fs
mov
in
imul
mov
dec
mov
xchg
out
lock
movsb
repnz
xor
mov
inc
adc
mull
shrb
pop
pop
fs
insl
push
lret
mov
in
adc
add
in
push
cmp
call
imul
scas
pop
xchg
rcrb
aas
xor
scas
out
cmp
xchg
lcall
rcrb
movsl
push
xor
in
data16
sbb
add
sbb
push
es
inc
jnp
jnp
mov
outsl
mov
push
imul
mov
in
in
sub
xor
jae
in
les
gs
adcl
sbb
clc
ret
sbb
inc
xor
bound
mov
outsl
lock
cwtl
push
fadd
sbb
out
push
ds
xchg
je
movl
sub
mov
mov
cmpsb
jp
push
loopne
pusha
dec
in
mov
out
shr
movsl
out
xor
adc
outsl
mov
dec
fists
xor
das
out
sbb
and
ljmp
add
loopne
adc
xor
jb
mov
mov
jmp
notl
push
mov
or
adc
push
push
xchg
mov
sub
mov
add
sbb
shl
aam
subb
out
divb
adc
adc
ljmp
call
rcl
jl
jle
add
pop
dec
inc
mov
jg
adc
add
or
adc
jne
sub
cmp
pop
lods
sbb
test
jae
and
cli
repz
inc
mov
xor
cs
dec
xchg
aam
sbb
inc
lods
imul
pop
lcall
int3
xor
push
imul
and
mov
stos
cmc
xchg
fs
stc
out
fisttpl
dec
in
cmp
lret
nop
mov
push
dec
imul
addb
mov
movl
out
mov
cli
fwait
mov
sbb
mov
mov
mov
and
notb
sbb
in
mov
rclb
xlat
jo
jae
clc
in
push
pand
fisubs
pop
pop
ja
dec
adc
scas
dec
mov
pop
cmc
fnstsw
add
adc
xor
in
inc
imul
pop
or
rcrb
jge
cwtl
fisubrs
pop
bound
xor
mov
hlt
inc
jno
pop
gs
sarl
cmp
imul
inc
xor
faddl
and
imul
mov
clc
mov
imul
dec
into
jno
mov
mov
sub
shlb
pop
sbb
push
xchg
dec
push
test
mov
mov
daa
mov
ror
push
imull
fisttpl
pushf
xchg
mov
xchg
mov
stos
hlt
cmp
mov
mov
ret
insl
jecxz
and
test
loop
sub
data16
daa
dec
mov
dec
xchg
push
fsub
dec
pop
push
sub
adc
xor
fisttpll
iret
inc
sbb
and
in
and
or
loopne
pop
jne
outsl
or
lds
pop
nop
xchg
jno
ds
mov
leave
push
or
push
lods
in
xlat
add
dec
lods
andl
mov
pop
inc
jno
and
pop
and
mov
jmp
repz
mov
dec
add
xor
inc
in
fcomps
inc
cmpsb
icebp
jmp
roll
push
int
fildl
sbb
xchg
sbb
cld
inc
and
stos
sbb
aas
pop
gs
call
xor
mov
jbe
mov
repnz
push
jbe
stc
pop
sbb
sahf
ss
shrb
mov
jbe
in
out
jo
add
jecxz
aas
shl
jb
sbb
push
cmp
sub
imul
test
imul
js
pop
scas
stos
mov
in
jecxz
dec
es
or
sub
lcall
push
or
in
pop
ljmp
orb
int
sub
xchg
jb
cmp
xor
mov
push
in
sub
scas
and
fisubrl
push
cli
repnz
jbe
ficompl
cmpsb
add
leave
mov
insb
fwait
hlt
sub
add
mov
push
dec
jl
lock
cmp
aaa
cwtl
pop
cmp
push
dec
lea
aad
jns
lea
adc
xor
add
les
inc
mov
and
push
fsub
lahf
push
ret
mov
les
xchg
push
test
inc
outsl
imul
pushf
pop
push
insb
sub
xor
add
jns
dec
adc
outsl
xchg
push
ljmp
jge
clc
addr16
nop
scas
xor
inc
imul
lds
dec
xor
mov
paddq
push
repnz
cli
clc
fdiv
leave
shl
mov
dec
cmp
add
imul
out
sub
jl
inc
push
mov
xor
jae
aaa
shrl
jmp
xor
fbstp
in
fwait
add
sbb
xor
xchg
pop
mov
into
cmp
mov
popf
jp
mov
mov
imul
lods
cmp
lcall
sbb
enter
lret
xchg
sbb
lcall
xchg
adc
outsb
fnstenv
jmp
leave
mov
cmpsb
add
mov
sub
add
adc
jmp
addr16
xchg
shrb
lret
cmp
sbb
jne
in
mov
dec
sbb
imul
outsl
loopne
fsubs
cltd
shll
xchg
dec
out
mov
cli
pop
sbb
xorb
mov
or
data16
mov
lock
and
lahf
cli
addl
gs
jo
arpl
inc
daa
imul
nop
lock
js
adc
clc
mov
or
int3
inc
adc
mov
xchg
lods
hlt
mov
mov
cld
lea
jb
sub
sbb
arpl
cmp
cmp
fimull
add
pushf
cmp
dec
loopne
mov
or
in
sub
sub
js
pop
dec
cs
mov
push
inc
cli
lods
jne
cwtl
xchg
daa
clc
and
movsb
and
cwtl
pop
sub
sub
lret
movsb
test
mov
push
fmull
fs
sbb
pop
ret
clc
in
pop
adc
test
or
push
addr16
fidivl
in
idivb
add
neg
mov
jp
dec
and
cwtl
insl
sub
imul
xchg
pushf
dec
pop
fbld
xchg
xchg
mov
scas
aad
cmp
mov
sub
sarb
cwtl
mov
jbe
outsb
push
inc
xchg
jbe
cmp
jp
cmpsl
imul
dec
in
les
adc
push
out
mov
loope
imul
jnp
scas
cmp
inc
bound
cs
xchg
les
inc
in
cwtl
mov
sbb
fnstsw
and
pop
aaa
mov
scas
test
add
pop
push
clc
aad
pop
xchg
jl
rcrl
or
cltd
lock
jl
les
mov
xor
repz
xchg
dec
xchg
adc
in
sbb
jns
fs
or
ret
mov
and
xor
mov
shrb
lret
sbb
in
dec
lea
ljmp
div
mov
cmpsb
popf
xlat
cmp
loopne
xchg
gs
cmp
dec
mov
xor
aad
iret
ds
adc
in
rcrl
lcall
mov
jmp
pop
fdivs
aaa
mov
pop
lahf
loopne
fdivrl
adc
filds
mov
rcll
fsubs
mov
into
xchg
insl
sahf
lea
mov
ljmp
arpl
pop
imul
cmpsl
pop
mov
lods
outsl
push
pop
sub
cld
sbb
repnz
add
rcll
adc
jns
clc
cmp
test
jae
std
mov
adc
push
mov
push
dec
hlt
test
mov
vandps
cmp
dec
sbb
xchg
lds
and
jns
test
loopne
xor
push
cmc
or
call
push
xchg
incb
inc
xor
popf
dec
add
push
xchg
pop
add
mov
fidivrl
aad
jne
rorl
faddl
repz
xor
pop
sub
pop
sub
lret
and
add
fcom
data16
xchg
cwtl
xchg
xor
push
lock
js
mov
pop
filds
xor
es
sarb
push
and
cmpsb
addl
imul
mov
lea
inc
cmp
mov
jle
gs
xchg
pop
cs
aaa
or
ficoms
sahf
xlat
movsb
mov
aad
xchg
lahf
push
mov
inc
leave
addb
xor
movsb
scas
in
iret
fcoml
sub
out
mov
lahf
insb
pop
aas
jle
imul
fiaddl
ja
pop
dec
test
xor
xchg
dec
mov
jl
movsb
cmpsl
mov
xchg
pop
lods
in
popa
sub
mov
adc
add
mov
xchg
je
scas
loope
xchg
hlt
int
xchg
adc
or
push
imul
out
movsb
aad
sti
mov
xchg
dec
lock
sub
adc
add
imul
ja
in
fidivrs
cmpb
ja
mov
push
xchg
and
xchg
insb
test
xchg
fiadds
test
fcmovnu
add
adc
push
mov
pop
insb
mov
outsl
dec
lock
leave
jge
adc
int3
ljmp
movsl
mov
mov
add
add
hlt
mov
stos
pop
push
ljmp
mov
push
repz
imul
aas
mov
dec
cs
pop
xchg
cli
fwait
in
push
sahf
push
repnz
xchg
xchg
icebp
jno
fsub
call
adc
add
movl
mov
out
xchg
mov
mov
test
sti
adc
mov
jne
mov
call
sub
jle
mov
lret
cmp
sbb
sbb
cmp
bound
cli
jmp
lods
pop
add
lods
fildll
push
add
xchg
pop
dec
mov
nop
lds
fdivrs
push
xchg
pop
jo
push
adc
mov
pop
mov
movsl
xchg
loope
iret
lahf
xchg
hlt
xchg
call
scas
addr16
cli
iret
push
sbb
lret
push
mov
dec
xor
cwtl
addr16
pushf
cs
aad
mov
inc
mov
movsb
leave
fistps
cmpsl
xchg
out
popf
fstps
movsl
les
push
or
insl
mov
ljmp
and
xor
push
mov
mov
fdivrs
xchg
push
das
rcll
push
mov
dec
int
mov
ret
mul
jne
push
dec
jmp
jp
mov
loopne
jge
out
mov
and
push
testl
mov
and
nop
dec
mov
mov
mov
in
pop
pop
xor
dec
iret
out
pop
pop
mov
loopne
mov
mov
out
lahf
enter
sub
mov
mov
fcomip
xchg
and
les
in
movsl
add
xlat
in
mov
inc
mov
test
pop
gs
sbb
mov
jmp
popf
cmpsb
push
xchg
fists
repnz
mov
pop
call
cmp
scas
popf
mov
inc
and
mov
dec
pop
xchg
cmp
cmp
xor
jg
andb
dec
adc
movb
lahf
mov
xchg
add
aad
push
add
jno
movsl
and
lcall
jo
mov
pop
lret
cs
pop
inc
outsl
out
mov
fwait
cmp
js
pop
rorb
orl
jl
dec
in
push
sbb
imul
or
xor
cli
mov
or
xor
xor
pop
mov
imulb
inc
xor
push
and
stos
adc
pushf
repnz
int3
push
sbb
scas
cmpb
fcompl
imul
lcall
mov
sbb
loopne
ja
std
loop
fistps
xor
sub
pushf
mov
es
imul
mov
sub
xlat
mov
sub
sbb
shll
sub
fsubrs
pop
lcall
mov
aaa
aaa
add
sub
ljmp
dec
sub
lret
or
and
mov
nop
lock
add
xor
jno
fs
cmp
dec
pushf
popf
pushf
nop
inc
aam
repnz
jl
pop
mov
hlt
pusha
int
sub
push
nop
out
jmp
xor
ljmp
lods
gs
std
stos
aaa
dec
aaa
cmp
gs
inc
xor
mov
gs
outsl
fcoms
lahf
fstpl
push
push
out
mov
mov
xchg
pop
sbb
lock
add
mov
inc
fimull
insb
mov
xlat
sbb
mov
mov
dec
add
jne
pop
gs
mov
jne
dec
mov
fiaddl
cmp
cmp
ljmp
pop
mov
fsubrs
cmp
push
jb
sub
pushf
sub
dec
push
mov
pop
cmp
movsl
hlt
lea
add
cmp
push
imul
mov
in
or
and
mov
xor
sbb
fnstenv
loopne
clc
sub
dec
pop
push
inc
pop
add
loopne
cmpsb
push
lahf
gs
push
cs
add
lods
sbb
push
inc
xchg
cld
push
jo
dec
sub
xchg
lea
mov
add
inc
jmp
jae
xchg
push
gs
in
out
movsb
and
cwtl
sub
add
ror
iret
clc
xor
pop
test
lahf
sub
jno
mov
mov
push
pop
js
shl
xchg
lods
jp
mov
mov
lock
in
divb
mov
int
sbb
jo
or
mov
hlt
repnz
mov
lock
loopne
cwtl
jmp
icebp
into
adc
adc
out
lret
pusha
sub
sub
insl
lods
adc
outsl
mov
aam
call
or
lods
jno
jb
cmp
adc
data16
aas
fstpt
fnstcw
fsubrp
push
mov
cmp
mov
and
jle
lock
cld
push
push
add
mov
jo
cli
inc
dec
mov
mov
mov
out
xor
data16
mov
out
pop
pushf
xchg
data16
xlat
lods
push
cwtl
mov
sbb
inc
push
push
leave
jno
sub
inc
sbb
data16
lds
pushf
add
shll
cmpsl
pop
xchg
push
mov
pop
jo
fs
cmc
sahf
dec
adc
pop
mov
xchg
scas
cwtl
jno
xorl
cmc
ds
jns
mov
xchg
push
test
xlat
imul
mov
jl
mov
and
mov
add
and
lahf
jecxz
cmp
addb
lea
adcl
in
push
push
add
jmp
xchg
in
mov
add
hlt
imul
xchg
xchg
out
adc
cltd
mov
sub
or
jns
cmp
xchg
mov
xchg
adc
sbb
dec
pop
xlat
rclb
xchg
mov
push
push
jl
inc
setp
sbb
or
jp
sbb
mov
aas
js
clc
imul
inc
int3
loopne
adc
lea
xor
jge
ljmp
clc
adc
je
push
sti
daa
pop
gs
adc
jmp
pop
inc
or
pop
fildl
pop
clc
ds
mov
and
or
jl
fistl
dec
jb
mov
jg
add
and
shl
pop
pop
mov
shlb
into
dec
mov
aaa
call
out
add
sbb
in
adc
xor
fs
movsb
aad
xor
inc
inc
xchg
jb
out
ljmp
cmp
jb
pushf
pop
mov
aaa
enter
outsl
fsubrs
sub
test
fcmovb
rorb
mov
mov
xchg
clc
sbb
pop
pop
sbb
sub
inc
push
cmp
push
fdivr
mov
daa
jno
test
inc
jne
jne
in
sbb
xor
ret
dec
jo
mov
cli
xchg
push
stos
sti
pusha
push
mov
push
fucomi
cli
aas
push
cli
cwtl
shrb
inc
add
and
js
mov
and
loope
lret
insb
addr16
loop
cmp
fwait
push
cmp
pop
lret
inc
jmp
xchg
mov
or
or
ss
inc
sub
insl
movsl
dec
jae
add
inc
fistpl
xor
stos
popf
bound
aad
push
mov
sub
xor
shlb
dec
in
dec
int
xchg
jp
mov
fwait
call
sub
rcr
bound
out
and
nop
bound
roll
inc
in
out
sub
xor
dec
adc
and
mov
dec
les
sub
ficoml
mov
xchg
bound
push
clc
push
xor
push
loop
imul
movsb
jno
xlat
push
cmp
jo
mov
xor
shlb
fiadds
xchg
hlt
cmp
push
mov
pop
sarl
scas
jne
jne
mov
sbb
idivl
daa
icebp
out
aam
push
loope
loopne
add
xchg
and
push
push
fxam
xchg
mov
push
push
mov
sbb
jbe
dec
push
pop
cmp
sub
pop
pop
push
jbe
jne
mov
xchg
aad
adc
imul
fwait
scas
mov
push
repz
aas
add
daa
mov
imul
lret
mov
sub
and
insb
rorb
cmp
add
decb
sahf
add
inc
test
mov
or
cmp
sbb
imul
xchg
out
outsl
imul
lahf
stc
scas
repz
notb
and
inc
out
cwtl
push
push
ss
push
inc
pop
push
repz
xor
js
xlat
push
fildll
test
xlat
jge
fs
xchg
xchg
xchg
mov
lods
mov
subb
into
xchg
fcmovbe
call
sbb
push
daa
out
scas
aaa
shll
dec
pop
cmp
pop
cmpb
cmc
mov
xchg
inc
pusha
shlb
pop
push
pop
iret
lret
insb
in
sti
cmc
jmp
repz
enter
jmp
and
ret
dec
shl
mov
mov
pop
pop
int
cmpsl
cmpsl
out
mov
sahf
jmp
xor
pop
inc
jg
jl
cmp
and
xor
push
mov
mov
push
push
pop
fisubrs
cmp
sub
shl
es
jecxz
fwait
adc
fwait
pop
xchg
inc
push
and
jne
jnp
xchg
lahf
clc
cli
push
xchg
or
xlat
out
cld
push
mov
and
lahf
push
iret
call
push
pop
cmc
fimuls
leave
mov
sbb
in
mov
sbb
imul
out
adc
xchg
xor
imul
xchg
sahf
sub
movsl
adcl
push
fnstenv
push
mov
pushf
jno
pop
xlat
or
arpl
sbb
jle
sbb
out
jge
push
or
fiadds
xchg
mov
xchg
adc
ljmp
xchg
aad
testb
sbbb
mov
cli
push
cmpsl
test
sbb
jecxz
xor
dec
data16
sbbl
shll
push
push
sbb
sbb
xor
btcl
lods
lret
aam
jae
or
call
inc
mov
pop
fldenv
sbb
daa
frstor
data16
mov
pop
mov
jle
add
fbld
and
adc
in
mov
xchg
sti
rcrl
xor
pop
pushf
cmp
xlat
es
inc
aad
push
inc
cmpb
mov
in
cmp
xor
subb
cwtl
out
and
sbb
pop
rolb
das
xchg
cmp
xchg
stos
insl
int
shr
xor
mov
xor
in
or
mov
fstpt
jle
xor
xor
pop
mov
ret
popf
hlt
pop
mov
loop
clc
into
ljmp
jl
dec
jecxz
cli
adc
sub
div
iret
jecxz
xchg
insl
in
dec
sub
mov
cmpsb
in
inc
sbb
jne
mov
gs
xchg
rorl
fsub
ficoml
lret
fstps
shlb
sbb
dec
stc
push
pop
ret
mov
hlt
push
dec
push
out
xchg
push
aam
out
imul
test
jne
or
jmp
lea
movsl
mov
jecxz
in
aas
loop
mov
sarb
sub
ljmp
andb
xorl
ss
int3
stos
mov
fistpll
lods
cmc
dec
cmp
lock
pop
mov
sbb
sahf
mov
jne
xchg
shrb
cltd
xchg
hlt
in
mov
ret
pop
in
adcb
adc
push
inc
repz
in
loopew
cmpsb
in
scas
mov
loop
in
shrl
lret
adc
xchg
subb
add
repz
xchg
jg
bound
adcb
cli
cs
inc
out
adc
ljmp
in
insl
mov
ljmp
push
test
mov
jle
arpl
scas
popf
inc
popf
es
dec
xor
lcall
gs
adc
cmpsb
js
add
mov
stos
scas
fadds
and
xchg
inc
mov
inc
push
pop
sbb
shlb
and
pop
dec
push
shll
inc
or
mov
pop
ljmp
shll
incb
int3
sbb
ss
mov
cmp
adc
addr16
mov
nop
mov
jbe
cmovs
shll
std
lret
gs
cmpsl
sbb
rorb
cwtl
ficoms
subl
mov
in
jae
or
adc
insl
dec
xchg
cmp
mov
lock
jns
pop
loopne
test
hlt
mov
pop
lock
pop
jmp
cmpsb
mov
jo
mov
jns
mov
adc
cld
clc
movl
and
push
push
adc
xchg
and
xor
mov
mov
std
sbb
push
out
iret
jbe
icebp
jg
jb
aaa
ja
push
outsb
jb
push
xchg
mov
jo
imul
inc
in
add
or
xchg
add
into
out
out
ficomps
data16
lret
xlat
dec
test
and
fsts
orl
leave
imul
lret
test
imul
pop
xchg
inc
lods
sbbl
stos
or
hlt
int
lea
sarl
xchg
out
and
scas
xlat
movsl
shl
das
into
loop
das
fs
adc
pop
pop
test
aaa
pop
loop
jmp
dec
mov
mov
test
bound
inc
cli
mov
in
ficomps
sbb
add
fst
pusha
add
pop
mov
stos
jno
cltd
xor
mov
adc
xlat
sti
lret
mov
add
jno
mov
lret
xor
mov
nop
lret
jo
movsl
imul
ret
sbb
cmc
ret
insl
fucomi
and
fwait
sub
push
xchg
je
xchg
out
cmp
aad
pop
pop
xlat
jmp
cwtl
daa
xchg
dec
lret
inc
xchg
imul
jno
or
rorb
imul
arpl
mov
xchg
out
rcrl
call
stos
aas
mov
test
call
sbb
mov
mulb
or
dec
sub
fadds
test
test
jbe
mov
dec
aad
push
push
repnz
adc
push
fbld
cld
mov
add
fs
sarb
popa
xchg
shrl
hlt
cwtl
shr
cld
cmp
jnp
mov
xchg
push
je
pop
fisubs
lahf
dec
fwait
sahf
lret
clc
pop
loopne
adcl
mov
xchg
mov
mov
push
or
test
jle
arpl
xchg
adc
push
ficoms
cwtl
aaa
mov
adc
jo
sbb
adc
push
cmp
fcomp
js
aad
xor
fisubrl
mov
lea
add
sbb
into
adc
aad
pop
call
cmp
mov
pop
cmp
fwait
mov
imul
cmp
xlat
fisttpll
pop
mov
addl
inc
aad
shlb
inc
mov
fucomp
stos
pop
cltd
bound
push
lock
subl
inc
dec
adc
pop
nop
rcr
dec
xchg
ds
repz
adc
cmp
pop
jae
xchg
imul
movsl
mov
std
icebp
mov
jo
jp
imul
sub
inc
call
sbb
push
fs
mov
out
xchg
stc
inc
fstpt
dec
cwtl
imul
pushf
mov
dec
xchg
dec
xorb
push
pushf
jbe
rcrl
dec
lea
popa
jae
push
cmpsb
xor
inc
pop
imul
bound
xchg
push
icebp
mov
outsl
into
aad
push
mov
dec
imul
test
imul
insb
sub
sub
lea
fisubrl
mov
mov
insl
inc
mov
push
das
sub
leave
outsl
aam
ljmp
in
mov
mov
out
imul
fst
stos
or
xor
ret
aam
cmp
nop
test
pop
pushf
pop
or
scas
rolb
xchg
mov
mov
add
pop
faddl
sarl
filds
mov
imul
xlat
cmpsl
imul
lahf
aaa
lock
pop
ss
xchg
adc
jge
vlddqu
push
push
add
pop
loope
pop
call
shlb
imul
mov
cli
adc
loopne
fnstcw
sub
sahf
sbb
and
xor
xchg
ljmp
in
pusha
mov
pop
xor
das
pop
mov
push
cwtl
call
pop
das
lock
fbstp
dec
out
jg
sub
icebp
loopne
sub
gs
mov
or
fcomip
loopne
sub
lock
in
push
repz
daa
mov
lcall
out
xor
pop
lret
and
or
sub
adc
adcb
clc
out
call
adc
xor
add
add
pop
push
xadd
filds
add
in
lea
add
jne
and
test
jne
in
push
mov
mov
pop
xchg
xor
mov
jecxz
adc
xchg
rorb
push
mov
jmp
cs
sahf
mov
loope
mov
xor
aad
cwtl
add
mov
sti
xorb
xchg
shlb
clc
sub
loopne
pop
and
and
jg
aad
nop
pop
clc
sbb
call
or
jg
push
addb
jo
xchg
pusha
push
push
pop
jmp
fdivr
mov
into
xchg
xchg
xor
repnz
sbb
testb
fwait
sub
xchg
jne
stc
imul
sub
aas
xor
movsb
push
xchg
jae
cwtl
xchg
rclb
loopne
xor
push
loope
add
jmp
repz
jnp
sbb
mov
into
gs
imul
je
dec
inc
add
mov
std
iret
clc
cmpsl
pop
lods
dec
or
mov
test
pop
cmovae
jp
daa
push
xchg
pushf
movsb
cwtl
ficompl
fdiv
mov
jmp
sbb
das
jecxz
cmp
jo
push
inc
imul
and
lret
fbld
cli
adc
orl
scas
xor
inc
or
lret
pop
xor
in
sub
mov
cld
ficoml
add
xor
or
dec
mov
fwait
cmp
mov
sbb
sbb
stc
cmp
cmpsb
mov
inc
dec
push
gs
dec
dec
adc
call
testb
std
adc
fcomp
rcl
sbb
cwtl
push
pop
xor
rcrb
insb
dec
pop
repnz
jbe
inc
lea
mov
leave
lock
test
nop
pop
popa
rorl
int
sub
pop
push
int
push
sahf
xchg
mov
xor
push
xchg
adc
mov
popa
movsl
mov
push
push
add
xlat
inc
fwait
push
jmp
inc
test
push
dec
loop
inc
sbb
mov
adc
ljmp
jbe
repnz
fistpll
aam
push
push
mov
into
add
in
dec
incl
ja
dec
icebp
lods
orl
cmp
adc
sbb
dec
scas
cmp
add
stos
mov
mov
mov
fbstp
ja
inc
mov
inc
inc
pop
adc
xor
xor
add
sbb
dec
xor
jo
add
cmp
je
fs
mov
ret
pop
add
sbb
xor
hlt
in
add
mov
adc
push
stc
pushf
pop
insl
test
ljmp
xor
mov
repz
jne
call
jp
rorb
cmpsl
adc
add
sbb
repnz
test
cli
add
imul
sti
ljmp
jl
and
xor
jae
repnz
xlat
sub
lea
jnp
mov
inc
adc
add
sub
push
jbe
in
adc
push
xor
int
add
lock
mov
repz
imul
xor
cmp
jmp
cwtl
and
shll
push
or
out
jle
cld
into
pop
fidivs
fmuls
sbb
xor
sbb
xchg
das
popa
in
jnp
jne
and
cmp
lret
das
jp
fneni(8087
xor
fcomp
push
stc
push
aaa
fwait
mov
ret
insl
push
pop
and
mov
movsl
add
inc
andb
aad
add
and
testb
cli
xchg
clc
jo
sbb
int3
adc
pop
dec
neg
test
ljmp
or
xor
xor
xor
xchg
scas
inc
inc
xor
aad
xchg
pop
and
out
sbb
and
push
bound
jl
cmp
pop
inc
or
mov
cmp
jle
ret
iret
jl
mov
clc
and
or
or
out
pop
xlat
data16
mov
test
insl
adc
jo
adc
dec
aam
mov
mov
pop
or
ficompl
loopne
fildl
or
outsl
pop
inc
push
mov
sub
adc
cmp
leave
add
cmc
aaa
roll
mov
icebp
jmp
clc
xorl
jne
or
movsl
shll
loop
or
cwtl
xchg
lret
cltd
dec
sti
cwtl
insb
jne
scas
dec
rclb
mov
adc
xor
fsubs
insb
sub
insl
jl
repnz
dec
sbb
sbb
push
out
push
and
and
dec
xchg
in
out
out
int3
ds
mov
scas
sub
xor
cmp
or
not
mov
and
adc
movsl
icebp
add
sub
adc
bound
pop
jmp
mov
add
imul
stos
add
scas
push
mov
mov
aad
and
subl
int
andl
push
pop
push
mov
jle
jbe
daa
pop
pop
mov
out
xchg
xchg
jb
cwtl
es
movsb
xor
or
ror
je
mov
cltd
imul
lahf
add
push
scas
aam
repnz
cmp
add
shlb
sub
xchg
mov
lods
push
pusha
lret
mov
sub
int3
dec
adc
lahf
cmpl
dec
jns
data16
xlat
inc
sub
nop
sub
aaa
nop
lea
into
sub
push
sbb
mov
lock
mov
shll
nop
or
popf
and
jbe
loopne
xor
jp
cmpsb
lret
cwtl
push
in
dec
aad
fldt
fcmovnbe
outsl
test
jno
xor
flds
into
in
sbb
xchg
addr16
addr16
jno
roll
cmp
imul
arpl
jno
test
lock
sbb
stc
mov
stos
shr
jb
scas
sarb
jns
xchg
hlt
xor
pop
push
adc
repnz
push
push
adcb
dec
mov
cmp
stos
leave
jno
fistpl
iret
or
sbb
ja
clc
jecxz
imul
shr
adc
insb
jecxz
pop
popa
add
mov
jge
lret
pop
pop
arpl
cmpsl
addr16
xchg
inc
cmpsb
xor
aas
lods
in
js
lret
cli
or
loopne
lret
cmp
push
dec
cld
lods
lods
dec
lods
xchg
decl
push
fstps
imul
sub
add
rorl
decl
dec
movsb
adc
outsl
les
imul
push
fsubs
mov
imul
push
iret
sub
pop
pop
add
and
sbb
add
cwtl
mov
jae
jl
data16
xchg
add
cwtl
negb
mov
aas
mov
and
mov
rorl
imul
daa
and
mov
pop
nop
jg
repz
loop
push
xchg
mov
or
adc
fsubrs
dec
out
movsl
movsb
jno
inc
das
out
mov
loope
add
adc
add
cmp
call
mov
fdiv
in
mov
jno
aaa
mov
adc
jae
push
mov
xorl
cli
add
inc
mov
xor
pop
aam
les
cmp
push
xor
xchg
lret
lea
jle
xor
iret
mov
xchg
xchg
test
inc
int
push
or
mov
nop
xchg
xor
push
xchg
xor
test
insl
cmpsb
ds
xchg
scas
into
gs
mov
adc
inc
pop
xchg
jb
mov
stos
shrb
xchg
ret
adcl
fnstcw
cmp
jg
aad
mov
cli
inc
add
fsubrs
mov
mov
inc
test
repz
push
fisubrs
arpl
mov
jno
mov
movsb
gs
movsl
imul
movsl
or
pop
mov
cmp
xchg
pop
pusha
pop
adc
add
adc
les
std
or
push
inc
xchg
dec
sar
ljmp
in
xchg
clc
aad
inc
push
enter
cmc
out
mov
loope
pushl
jne
dec
loope
fwait
scas
cmpsl
mov
xchg
out
pop
jge
je
or
shlb
sub
aad
or
xchg
dec
or
vmaxsd
inc
mov
add
in
test
and
pop
sbb
add
int
or
xchg
outsl
add
cmp
mov
sub
and
sub
cmp
jo
add
mov
addr16
int3
notl
sahf
xchg
test
stc
xor
mov
jae
or
rol
cld
nop
shlb
or
push
sbb
jno
xor
and
inc
scas
popa
xchg
in
adc
jne,pn
div
mov
iret
mov
aad
stos
cwtl
inc
aas
test
test
roll
mov
adc
sbb
pop
int3
jo
pop
sbb
notl
lahf
stos
pop
adc
add
mov
push
dec
pop
sub
or
xor
nop
xchg
lret
addr16
pushl
cmp
cmp
shr
add
xchg
mov
dec
cmp
jae
jb
out
data16
push
xchg
in
adc
out
addr16
xorl
pop
mov
sti
fisubs
addr16
dec
fstps
rol
mov
aam
push
mov
rcr
mov
cwtl
sub
nop
or
test
fildl
mov
iret
out
inc
stos
pop
sbb
push
push
cmpsb
sub
hlt
lret
xor
xchg
int
mov
pop
aaa
lea
pop
mov
outsl
inc
hlt
aas
cmp
out
adc
or
out
sarb
pop
jo
insb
or
dec
jecxz
data16
adc
fldl
adc
cmp
xchg
jno
int
arpl
pop
push
sub
add
and
pop
aaa
insl
scas
push
cltd
repnz
mov
dec
mov
insl
inc
out
add
jno
mov
out
mov
into
jecxz
ljmp
mov
hlt
jbe
or
movsb
adc
jmp
push
movl
hlt
fistl
cld
pop
and
shr
aam
or
test
adc
xor
jl
lahf
mov
mov
push
inc
repnz
mov
mov
mov
cmp
add
repnz
and
xor
insl
push
inc
mov
cld
jmp
sbb
pop
bound
inc
movsl
repz
mov
xchg
shrl
inc
mov
pop
xchg
lock
ljmp
mov
mov
push
xadd
fimuls
jbe
dec
imul
int3
push
jmp
sbb
push
int3
ja
mov
jge
pop
rcrb
hlt
add
mov
sub
push
cwtl
inc
hlt
gs
je
jae
fsubl
hlt
imul
daa
push
or
pop
pop
sbb
sahf
stos
xchg
sub
ljmp
dec
sar
or
xchg
and
add
dec
aaa
test
jecxz
push
repnz
kmovb
enter
dec
out
aad
and
cltd
xchg
jle
mov
test
lds
add
pop
rcll
jmp
movsl
aas
xchg
fcmovbe
inc
sub
xchg
aad
xchg
inc
mov
xchg
jbe
shll
movsb
xchg
aaa
stc
rcll
dec
cmc
nop
inc
je
repz
push
lods
gs
push
lret
mov
adc
cmp
mov
ljmp
int
rcrl
shlb
jg
rcrb
in
push
icebp
mov
rcll
les
mov
or
mov
aaa
shl
sti
push
xorl
insb
or
mov
or
outsb
cmp
cmp
dec
xchg
dec
cld
or
adc
inc
mov
lods
or
and
loopne
push
mov
mov
dec
xor
popa
cmp
ret
push
rolb
cmp
adc
or
div
cmp
roll
xor
fcmovb
jno
fldl
xchg
lods
mov
xor
xor
imul
inc
pusha
bound
hlt
cli
stos
sbb
jge
mov
push
xor
mov
jl
aaa
jl
mov
stos
pushf
loop
mov
cwtl
lret
xor
pop
dec
cwtl
iret
mov
mov
fisubrs
test
mov
test
fwait
mov
sub
push
add
xchg
gs
mov
sub
mov
xor
lret
gs
xor
dec
dec
iret
in
std
int3
in
mov
mov
lods
mov
xor
push
dec
mov
aaa
xchg
adc
sar
faddl
out
push
add
inc
mov
sbb
or
xor
xchg
inc
dec
lea
xchg
fldl2t
mov
xor
movsb
stos
cmc
push
ljmp
imul
movsb
lret
sbb
mov
rcl
pusha
push
cmp
pusha
xor
dec
out
jle
sub
out
popf
nop
clc
aad
out
cli
pusha
repz
pop
jl
ljmp
loopne
cli
pop
imul
push
dec
into
cmp
mov
call
in
fimuls
addr16
jl
or
ljmp
or
and
scas
pop
and
add
jbe
std
testb
or
sbb
iret
addb
xor
inc
clc
punpckhdq
mov
mov
popf
mov
adc
stc
or
adc
mulb
ret
push
cmp
clc
int
mov
pop
jne
mov
mov
add
pop
mov
imull
push
shr
mov
sub
dec
cmp
fldl
xchg
repnz
mov
iret
cmp
push
stos
dec
push
xor
inc
in
mov
test
shrl
mov
movsl
fdivs
mov
mov
clc
into
ljmp
sub
sbb
pop
jbe
inc
test
dec
or
push
push
or
insb
lahf
fists
out
cmp
ret
fwait
add
out
cli
repz
ds
nop
add
jl
mov
xchg
xchg
xchg
dec
inc
imul
sbb
flds
imul
xchg
pop
dec
push
mov
mov
js
mov
dec
xchg
push
cmp
loopne
loopne
into
sbb
dec
ja,pt
mov
or
fwait
inc
pop
dec
stos
rorl
sub
inc
dec
jnp
mov
lahf
scas
bound
fucomip
and
or
mov
or
mov
lret
dec
mov
ds
out
mov
xchg
xchg
xchg
mov
dec
fistpl
rcrb
adc
enter
scas
fdiv
pusha
inc
call
xchg
xchg
sti
push
cmp
dec
fisubrs
mov
fidivl
fadd
call
clc
xchg
mov
test
out
xchg
lea
lret
xchg
xor
jg
test
mov
mov
pop
out
stos
fcompl
mov
loopne
dec
jecxz
jo
mov
mov
int
dec
mov
jecxz
idiv
dec
mov
inc
icebp
cmpsl
popf
xchg
fsubrl
push
bound
gs
push
and
or
and
insl
imul
add
push
out
aad
push
dec
sbb
lock
je
hlt
jecxz
xchg
in
lcall
imul
xchg
xchg
push
out
xor
mov
mov
arpl
xchg
xor
mov
mov
sbb
push
xchg
daa
mov
out
and
fdivrl
or
inc
mov
fadds
hlt
lods
mov
ret
push
lahf
in
add
fs
xor
cld
mov
dec
call
gs
pop
pop
xor
dec
fsubs
in
ret
jmp
sbb
cwtl
adc
inc
mov
fsubr
or
test
popf
out
xchg
fs
mov
addr16
pop
add
adc
xor
dec
jno
out
jmp
lahf
andl
push
adc
xchg
add
aam
add
xchg
sbb
scas
xor
in
jge
push
dec
and
dec
mov
inc
mov
dec
mov
dec
dec
mov
data16
stos
mov
mov
in
cmp
test
xchg
aaa
xchg
push
hlt
insb
stc
push
movsb
stos
loopne
sub
cmc
xor
mov
or
adc
pop
xchg
test
pop
fldt
xor
int
rorl
sbb
daa
jae
mov
mov
pop
roll
pop
addr16
sbb
dec
shll
mov
lock
mov
je
inc
mov
dec
and
flds
js
xchg
dec
push
aam
mov
icebp
xchg
popf
cmpsl
ret
push
jne
mov
cmp
pop
lahf
cmp
push
jecxz
lods
cmpsb
repnz
xchg
cli
test
subl
insl
dec
inc
idivl
js
mov
dec
or
lahf
jg
jecxz
ljmp
faddl
sarb
cli
fisubs
sbb
mov
pushl
dec
inc
bound
movsb
sti
clc
mov
out
jno
lret
pop
jnp
and
data16
add
sub
lret
dec
dec
mov
pushf
sub
rorb
adc
push
inc
movsl
imul
sub
pop
divb
add
mov
ret
dec
clc
dec
inc
mov
iret
add
lods
add
fiaddl
insb
into
push
fidivrl
cmpsl
mov
pop
inc
lock
xchg
or
xlat
in
mulb
jmp
lea
adc
mov
mov
iret
repz
xchg
jl
pushf
out
xchg
shl
clc
sub
sub
cli
faddp
insb
setbe
cmpb
inc
or
adc
int3
xor
repz
shlb
out
rcl
add
cwtl
lahf
cmp
aas
aad
stos
call
sbb
push
icebp
test
dec
out
sub
lds
dec
mov
cmpsl
inc
pop
sarb
ja
jbe
push
adc
xlat
push
xor
stc
dec
mov
lods
gs
mov
lret
std
pop
add
or
push
sarb
push
std
addl
sbb
lret
testb
fs
test
xor
sti
mov
leave
mov
in
adc
add
es
inc
cmp
fisttpll
pushf
mov
out
popa
add
mov
mov
in
pop
mov
dec
jl
and
mov
data16
push
mov
or
sub
push
lods
das
jno
call
out
xchg
lock
dec
fisubrl
int
into
hlt
ja
cmp
lret
push
aas
dec
jecxz
roll
push
jecxz
inc
or
push
imul
fiadds
call
aam
in
aaa
add
jbe
xchg
or
lcall
mov
dec
jge
cmc
fcoml
mov
shl
pop
pop
pop
sub
lret
imul
daa
insl
ret
bnd
cli
pop
xor
mov
gs
aaa
xchg
addl
xor
push
add
arpl
pop
mov
mov
stos
dec
mov
mov
mov
es
mov
and
add
test
out
outsl
adc
fsub
pushf
push
add
dec
pop
jge
xchg
xchg
jle
shrb
sbb
int3
pop
stc
loop
xor
ljmp
test
nop
push
or
std
or
pop
push
dec
xlat
lret
dec
lods
jnp
jae
fldenv
pusha
pop
shlb
cmp
fwait
test
gs
xor
aam
bnd
cwtl
pop
adc
adc
sti
add
xorb
sbb
dec
mov
add
add
or
pushf
xchg
push
inc
mov
pushf
pop
movsb
test
dec
ds
sbb
loopne
icebp
int3
out
xchg
jge
pop
sbb
xor
sahf
pop
mov
pushf
inc
mov
sti
xchg
and
movnti
ret
ret
jno
ret
test
mov
fwait
jg
mov
daa
sub
jne
movsb
add
out
inc
add
mov
xchg
cli
add
or
subl
aad
into
shr
fists
iret
mov
jns
push
leave
jne
push
and
mov
iret
ljmp
fistl
xchg
int
stos
call
xor
andl
inc
inc
and
pop
popf
lock
arpl
test
pop
cmp
mov
aaa
dec
mov
not
jmp
jl
pop
test
iret
cmp
aas
rcll
ljmp
cmp
sbb
inc
stos
jle
imul
mov
pusha
add
outsb
xor
loop
or
cmp
das
les
push
cli
out
fidivl
ja
adc
xor
imul
mov
xchg
das
cmp
cmp
cmp
mov
xchg
nop
je
sbb
push
imul
xor
out
call
mov
fxch
jno
int
sub
pop
cmp
jge
sub
sub
nop
cmp
scas
inc
lcall
ss
sub
je
xchg
fs
leave
dec
gs
sub
cmp
test
fiaddl
out
mov
imul
mov
jne
adc
mov
icebp
mov
xchg
lcall
fidivs
adc
call
imul
stc
push
xor
xor
in
sbb
aaa
cmp
gs
subb
add
cwtl
jns
mov
and
cmp
sbb
repz
sbb
mov
lahf
aaa
hlt
jo
fisttps
xor
pop
call
pop
pop
ljmp
xchg
fs
sub
inc
bound
and
mov
lret
mov
cwtl
leave
sbb
jge
jb
mov
outsb
pop
xchg
cwtl
out
sub
mov
cmp
lods
out
add
add
inc
add
jo
arpl
cmpsl
in
inc
inc
cmp
or
sub
loop
lds
hlt
mov
cmpsl
mov
cld
stos
imul
pushf
lods
mov
je
repnz
lahf
out
in
jne
dec
jmp
adc
iret
mov
test
mov
mov
adc
aaa
pushfw
mov
jecxz
push
and
lret
testl
jbe
jecxz
out
xchg
xchg
daa
mov
mov
dec
aam
mov
dec
jge
and
push
fistl
xchg
inc
push
xchg
in
xor
push
loopne
sub
loopne
fldt
mov
push
push
aad
mov
mov
push
loopne
shll
add
xor
mov
fiaddl
ss
or
add
mov
repnz
push
cmc
cmpsb
aad
shlb
repnz
xor
xchg
sub
sbb
lret
mov
cmp
fidivs
push
in
fdivr
or
xor
or
sub
or
xchg
inc
sub
fistpl
pop
clc
jb
push
loop
xlat
cltd
lcall
mov
fstp
jnp
ret
sbb
ljmp
xlat
int
lret
aam
rcll
cli
xor
jne
mov
test
imul
push
sbb
popa
rolb
mov
and
mov
cli
add
insb
imul
ret
clc
loopne
dec
mov
mov
sarl
jo
mov
lods
ret
jmp
jbe
inc
repnz
jnp
ljmp
sub
cmp
sub
scas
lahf
and
jnp
add
aad
adc
adc
lods
imul
inc
arpl
fcomp
insl
mov
decl
cli
add
jno
test
jecxz
test
xor
fwait
in
push
cwtl
jecxz
mov
pop
xchg
dec
neg
movsb
out
aad
addr16
or
push
cmp
shl
xchg
sub
gs
aam
jnp
clc
out
fsubrp
pop
test
addl
sbb
inc
cmp
dec
in
mov
es
fwait
dec
add
aad
fdivrs
xor
scas
mov
jecxz
fsubl
dec
inc
cmp
fists
ss
repnz
pop
xor
xorl
push
cmp
mov
lret
push
addr16
stc
xchg
add
orl
call
mov
lahf
push
js
jne
pushf
xchg
pushf
sti
push
jne
jne
js
lret
xchg
jbe
jecxz
mov
jmp
iret
aaa
mov
mov
mov
push
push
lret
lea
mov
fdivl
push
cmp
test
dec
cmovl
xor
mov
cmpsl
push
cmc
pandn
js
nop
cmp
call
decb
mov
fs
mov
cli
or
jb
dec
mov
rclb
add
xchg
adc
call
bound
mov
in
jbe
mov
js
sub
pop
jno
sbb
sbb
inc
add
sub
sarl
and
xchg
jl
std
call
cmp
sub
jns
f2xm1
gs
mov
or
jmp
movsb
lret
inc
or
fucom
ljmp
shl
call
popa
sbb
shll
fisubl
cld
imul
jp
fcmovu
cmc
or
test
rclb
sub
mov
cmp
push
out
jne
in
out
dec
ret
push
xlat
jo
cli
push
push
sbb
mov
sub
push
mov
mov
mov
dec
xchg
mov
jbe
movsl
test
fwait
es
int3
or
std
xchg
mov
movb
push
and
xor
sbb
adc
gs
into
pop
sahf
sbbl
jno
xorb
mov
xchg
imul
clc
or
iret
mov
cmp
aam
adc
popf
pop
shll
mov
adc
mov
mov
mov
ror
subl
imul
xchg
movsb
je
push
inc
cmpsl
xchg
addl
and
out
iret
or
cwtl
lcall
hlt
sbb
mov
sahf
adc
test
adc
test
mov
das
mov
les
sub
lods
pop
stos
lock
mov
mov
sub
fisubl
jle
inc
inc
mov
outsb
cmp
and
sbbl
repz
sbb
or
outsl
dec
xor
xor
cld
call
push
in
outsb
lea
push
out
jae
imul
movl
bound
cli
push
imul
fcmovnbe
fwait
ljmp
subb
jmp
dec
and
push
add
out
mov
and
xchg
testl
inc
cmpsl
incb
es
jmp
cmp
aad
jb
pusha
stc
cmpsb
mov
push
out
jno
lahf
pop
push
mov
push
xchg
cmc
pop
repz
inc
mov
pop
xlat
sub
in
inc
sub
data16
mov
and
sub
nop
hlt
cmp
mov
fists
stc
mov
xchg
pushf
ljmp
orb
ret
inc
or
movsl
pop
xchg
stos
decl
add
jo
shrl
ja
jbe
call
push
xchg
mov
push
push
cmp
or
fs
jns
xor
jne
or
outsl
jne
push
inc
mov
fstps
fmuls
repz
hlt
popa
mov
leave
mov
mov
fsincos
or
pop
jae
mov
sub
test
nop
jnp
adc
adc
and
sbb
add
int3
jo
mov
sub
gs
imul
or
xchg
in
insb
mov
mov
daa
xlat
mov
clc
pop
adc
movsb
fwait
push
dec
push
or
sbb
or
dec
add
mov
cmpsb
pop
cmp
dec
nop
mov
fdivrs
xchg
jg
mov
ss
add
jp
test
ljmp
jbe
jg
sbb
movsl
leave
imul
imul
repz
in
cltd
stc
mov
jo
xor
mov
es
aas
lret
imul
out
call
popa
cli
ficomps
loope
xchg
cmc
mov
jb
in
addr16
push
push
pop
fwait
out
fcomip
pop
mov
inc
rorb
mov
int
sbb
lock
mov
mov
mov
cmc
dec
xchg
lret
loop
test
gs
mov
loop
jecxz
sub
lret
fnstsw
add
loopne
pop
push
jp
adc
fidivrs
mov
jae
aad
xchg
jbe
iret
inc
xchg
cmpsb
add
and
loopne
mov
xlat
in
xchg
loopne,pt
repz
sbb
insb
adc
cli
sbb
inc
push
lret
inc
addr16
dec
repnz
cmp
mov
or
les
clc
xchg
jmp
push
test
clc
xorb
dec
and
fwait
sub
test
mov
xchg
loopne
andb
mov
ret
je
mov
lret
jb
aaa
lods
jne
fwait
mov
andl
jp
mov
push
rolb
and
loopne
jo
inc
cmpsl
movsl
mov
jmp
and
dec
lock
xor
cmc
pop
pop
rclb
in
xor
adc
fisubs
or
popa
pop
push
test
sub
lret
xor
dec
pop
cmp
xchg
movl
mov
and
jnp
and
and
je
dec
mov
mov
sub
pop
insb
mov
and
gs
xchg
filds
mov
cltd
shll
je
mov
cli
cs
mov
jge
repz
negl
neg
nop
push
cs
add
jnp
mov
push
sbb
in
sbb
lcall
or
xor
aas
in
gs
dec
mov
xchg
pusha
sub
xor
and
sbb
outsl
lea
push
js
dec
mov
shll
aad
filds
cmp
xor
iret
cmp
mov
popf
dec
fisttpl
fisttps
hlt
cmp
mov
inc
icebp
lret
out
push
lds
jmp
cwtl
mov
repz
dec
mov
cmp
add
das
test
movsl
add
cli
fistpl
into
hlt
xor
enter
pop
adc
ja
cmpsb
out
ds
fucompp
clc
xchg
addr16
int
pop
xchg
stc
out
movb
sub
inc
test
sbb
mov
aaa
jno
stos
pop
sahf
in
les
inc
mov
cmpsl
inc
fsubrs
cld
sarl
or
inc
xchg
adc
imul
fs
test
ljmp
and
pop
push
adc
loopne
mov
mov
fcmove
add
xor
sub
nop
adc
hlt
cli
mov
fsubs
out
pop
dec
xchg
dec
test
shlb
fcmovu
push
pop
scas
dec
das
jp
mov
int3
pop
clc
xor
or
dec
jge
out
push
xchg
cli
imul
inc
mov
insb
hlt
pop
es
out
mov
pushf
rcll
daa
pop
aaa
jno
xor
into
sbb
rcr
pusha
aam
das
test
aad
mov
mov
mov
divl
int
les
sarl
fisubl
mov
adc
ja
mov
out
stos
data16
out
mov
data16
call
pushf
div
fimull
dec
inc
daa
pop
xor
pop
repnz
dec
fdivrl
push
call
or
ret
fisubrs
dec
cmpsb
mov
mov
les
insb
popf
xor
lahf
mov
imul
test
mov
out
mov
rcr
inc
bound
xchg
shlb
add
jg
lea
aaa
nop
mov
pop
jg
lods
repnz
es
out
test
fcomip
jecxz
fwait
sbb
popa
icebp
aaa
add
and
pop
pusha
lods
pop
jae
rol
push
ss
cmpsb
add
aad
inc
popf
movsl
push
push
js
test
shll
xchg
cwtl
jno
add
pusha
bound
inc
outsb
adc
adc
jns
or
loope
jno
push
mov
ja
nop
inc
cli
pop
add
jl
and
test
aam
subl
test
pop
in
nop
repnz
xchg
cmc
mov
mov
popf
dec
lret
xor
xchg
sbb
push
clc
push
fs
mov
movsw
push
jae
mov
jmp
lea
dec
call
mov
into
addr16
lahf
cltd
addr16
pop
dec
pop
pusha
int
mov
mov
rclb
lret
jmp
stos
xchg
adc
imul
pusha
push
lods
sub
test
mov
clc
lods
or
gs
xchg
hlt
nop
frstor
pop
cmp
repnz
fcom
pushf
je
or
out
xchg
test
push
shl
xor
pop
mov
lea
dec
imul
hlt
and
dec
lock
lret
push
mov
mov
pop
rorl
out
push
or
mov
out
xchg
sub
iret
icebp
loope
clc
pop
fsubs
mov
cmc
das
push
add
cmp
repz
test
push
fiaddl
int3
scas
cmp
dec
out
int3
mov
hlt
mov
and
cmpsl
scas
divb
out
push
lret
jns
test
xchg
rcl
dec
out
lock
push
test
push
iret
push
addr16
mov
fcoml
lret
push
and
lret
std
pushf
mov
xor
dec
mov
mov
int
shll
dec
cmpsb
fwait
jns
lret
in
mov
in
push
inc
mov
rorb
sahf
nop
or
push
pop
enter
xchg
testb
out
outsl
mov
mov
push
iretw
repnz
orb
inc
inc
popa
inc
ja
dec
repnz
inc
negb
fsubrs
popf
pop
adc
mov
and
fsubrs
pop
fisttps
mov
bswap
lock
dec
or
lcall
nop
gs
push
out
pop
loopne
pushf
sbb
pop
andl
xchg
in
es
out
push
mov
in
jno
hlt
andl
sbb
add
ficoml
negb
mov
push
cmc
mov
add
fisttpl
clc
jecxz
gs
aad
push
or
imul
repz
insl
sarb
push
cli
cmp
mov
fldenv
imul
sbb
hlt
outsl
shlb
in
cwtl
push
jbe
and
or
jbe
cmpsl
inc
push
push
xchg
leave
fisubrl
fisttps
stos
add
loop
jge
sbb
jns
add
cld
hlt
and
add
fs
popf
lods
lcall
pop
ds
mov
lahf
push
mov
scas
mov
pop
xchg
rorb
push
fstps
call
imul
push
repz
int3
ljmp
jecxz
ret
mov
stos
out
dec
mov
inc
mov
scas
mov
stc
cmc
cmpsl
dec
imul
xchg
sub
fadd
clc
xor
inc
mov
bound
lds
cmpsl
xor
out
xchg
in
cld
pop
js
shll
out
jg
rcrb
xchg
add
popf
cmp
call
cwtl
das
pop
mov
test
or
hlt
sbb
mov
pushf
fdivs
and
loope
fldt
inc
lea
xor
cmc
cmp
int3
and
iret
nop
fistpl
es
mov
mov
cli
or
das
faddl
int3
fdivrs
and
aad
ss
mov
test
int3
imul
cmpsb
adc
pushf
gs
pusha
mov
sbb
shrl
adc
sub
pop
cmp
xor
mov
and
mov
push
adc
dec
pop
pusha
ljmp
out
nop
js
lods
sbb
stos
sbb
testl
sbb
or
and
repz
and
enter
xor
ljmp
cmp
je
xor
out
rcrl
xchg
xor
ret
aas
cwtl
mov
fs
fdiv
int
das
jmp
sbb
cli
repz
sbb
inc
cmp
push
and
mov
addr16
lea
dec
pop
icebp
add
lahf
nop
push
rorb
hlt
popf
aaa
aam
adc
mov
nop
jo
cmc
cmc
adc
mull
test
mov
aas
adc
adc
imul
or
xchg
loopne
mov
shrb
in
jae
dec
js
mov
or
mov
je
loope
adc
out
push
mov
jmp
out
dec
cs
in
push
mov
adc
out
mov
xor
out
sub
pop
in
cwtl
adcb
xchg
rclb
push
ja
lahf
test
cmpsl
and
mov
fwait
cmp
popa
repnz
dec
cmp
jnp
push
cmp
mov
aas
pop
imul
xlat
fs
inc
inc
shlb
push
movsl
aas
pop
cmp
mov
sarb
push
cmp
sub
fdivr
cli
fwait
shl
fisttps
popl
jp
xchg
lock
mov
iret
xchg
jp
aas
sbb
adc
cwtl
pop
inc
cld
mov
cmp
dec
pop
pop
cmp
xor
icebp
push
cmp
test
roll
incl
out
fadds
pop
dec
jp
imull
push
fcmovbe
cwtl
pop
sbb
add
inc
jl
fistpl
push
push
or
push
movsl
call
shll
xchg
andb
jge
stc
shrb
nop
mov
test
out
cltd
adc
out
popf
pop
jbe
inc
dec
mov
enter
cmp
push
out
mov
adc
jne
cmpsb
push
jg
es
into
imul
dec
stos
mov
pop
mov
test
xor
push
adc
mov
mov
rclb
xchg
mov
aas
sbb
mov
call
xlat
jmp
pop
es
fdivs
xlat
lods
mov
cmpsl
cmp
inc
lret
or
xchg
jecxz
xchg
imul
fdivl
xchg
lea
nop
sbb
pushf
cmp
jmp
imul
mov
sbb
pop
pop
add
inc
sub
sarb
gs
arpl
push
icebp
dec
pop
loope
daa
cld
push
sub
cmp
mov
sbbb
or
stos
cwtl
test
xchg
pushf
and
xchg
pushf
loopne
in
or
and
xchg
fmul
ljmp
dec
adc
cmpsl
jl
mov
mov
rorl
add
loope
or
gs
scas
inc
mov
stc
imul
xchg
insb
enter
and
sbb
imul
addr16
dec
cmp
das
adc
xor
xchg
scas
hlt
out
aaa
adc
pop
out
sbb
das
repz
scas
lret
sbb
fimuls
xor
inc
insl
mov
adc
jle
or
xor
sub
or
outsl
mov
fsubs
pop
pop
cwtl
loop
in
mov
xor
imul
dec
push
cmp
cmp
push
cmp
arpl
fwait
in
loop
out
pop
pop
or
lods
out
jge
jo
arpl
int3
adc
call
add
inc
nop
sbb
push
int3
cwtl
mov
dec
insb
adc
mov
lret
call
sti
mov
xchg
hlt
jno
mov
xchg
aad
test
repnz
mov
push
pop
push
or
out
jno
add
dec
jp
mov
popa
lock
jmp
dec
loopne
push
sbb
sbb
aam
dec
cs
xchg
out
or
aas
adc
lahf
fsubr
mov
inc
out
inc
repnz
cwtl
jno
push
lahf
push
jae
pushf
dec
aad
das
pusha
inc
sbb
sub
xor
ljmp
jle
sarb
scas
imul
add
stos
mov
fs
jecxz
inc
cmpsl
cmp
nop
fidivl
mov
mov
add
xor
sarl
arpl
fisubrs
dec
inc
ret
xor
ficoms
mov
xchg
push
outsb
xor
inc
ljmp
sahf
xchg
ret
xor
out
mov
push
xchg
loopne
sub
aas
push
push
mov
cmp
fldt
test
jp
xor
dec
inc
and
fiadds
cli
fdivs
push
addl
jno
mov
and
add
mov
imull
ret
xor
call
fistl
push
stc
mull
inc
out
lock
sub
pop
jb
or
enter
in
arpl
push
jge
push
xlat
shlb
lret
imul
and
xor
imul
pop
stos
mov
shlb
lret
and
add
in
test
jge
sbb
call
in
aas
cwtl
add
push
cmp
rorl
fdivrl
cli
imul
testb
lods
xor
mov
jbe
into
aas
push
mov
es
lea
popa
arpl
add
call
inc
test
pop
jns
inc
test
pop
pop
cmp
xchg
mov
push
inc
scas
dec
cmp
fnsave
testb
mov
test
push
inc
imul
ret
outsl
cmpsb
sbb
add
mov
and
pop
xchg
cld
cmp
ljmp
xlat
std
ds
and
jbe
es
adc
mov
xor
pop
add
jle
sbb
popa
mov
mov
cwtl
jno
push
xor
jns
out
mov
daa
dec
jg
add
push
mov
jp
or
lea
fsubp
ds
xchg
loopne
and
addb
and
inc
aam
test
mov
mov
rcll
rcll
je
test
pop
mov
or
dec
mov
pop
cmpsb
int3
add
dec
aaa
add
push
dec
cmp
cli
xlat
inc
and
int3
cmp
cmp
xchg
adc
movl
hlt
mov
daa
dec
mov
lea
ljmp
dec
in
jmp
adc
repnz
into
or
pusha
jl
push
out
hlt
repnz
cli
mov
mov
dec
rcll
lret
mov
pop
cltd
or
lds
xlat
mov
xchg
add
popa
insb
in
daa
cmpsl
lahf
dec
and
mov
xchg
or
and
push
sub
add
mov
dec
test
xchg
daa
dec
pop
iret
ficompl
mov
mov
repz
fstpl
jo
xor
les
pusha
xor
push
decb
and
repnz
rcr
fsubs
push
add
aam
imul
in
lret
xchg
inc
rcr
or
mov
lahf
gs
ret
mov
mull
fwait
insb
sbb
outsb
jae
fisttps
test
xchg
lods
bound
loopne
aaa
xchg
pop
aad
jb
jge
push
imul
loop
iret
cli
and
loopne
pop
inc
inc
ljmp
pop
les
push
aaa
cwtl
lea
mov
fcoml
xchg
je
push
shll
dec
sbb
xor
cmp
xor
in
mov
out
push
stos
pop
ljmp
push
popa
lods
jae
aad
pop
mov
lock
xchg
shl
pop
cli
mov
loope
popf
push
ds
pop
imul
mov
or
out
jg
je
pushf
ja
dec
xchg
sahf
out
cli
xlat
dec
lods
lret
jb
dec
mov
jmp
push
inc
jns
std
cmp
pop
dec
lds
xor
push
dec
sub
lret
jae
test
pop
std
xor
dec
push
adc
aam
mov
pop
mov
mov
imul
mov
or
and
mov
imul
mov
dec
pop
push
add
aaa
cltd
sbb
shl
lea
adc
loope
inc
fistl
and
cli
lahf
cs
push
cld
mov
pop
pop
nop
das
dec
push
testl
push
xlat
in
sbb
imul
sub
fsubrl
imul
adc
ja
sbb
ljmp
dec
loope
jo
mov
push
mov
loopne
pop
shlb
xor
scas
aaa
pop
adc
jbe
mov
xchg
or
or
call
mov
nop
dec
int3
cmp
inc
inc
xchg
push
mov
mov
int3
cmp
xchg
insl
add
popa
je
mov
test
mov
pushf
rolb
push
call
cld
gs
mov
ror
or
inc
imul
iret
mov
test
add
push
aaa
addr16
int3
lea
add
push
mov
push
cmp
lret
out
or
ljmp
out
outsl
mov
lods
aaa
jl
out
aam
sbb
or
mov
inc
aam
inc
sti
pop
outsb
mov
lahf
daa
push
cli
fwait
test
adc
xchg
ja
imul
or
xchg
sti
rclb
push
aas
dec
pop
push
mov
outsb
or
mov
adc
int
lods
imul
jae
push
inc
push
in
pusha
mov
sbbb
outsl
daa
cmp
xor
mov
xchg
aaa
fldenv
pop
inc
push
sbb
xchg
push
mov
xchg
call
loopne
fsubs
and
ss
inc
test
mov
test
push
mov
sbb
add
jle
outsb
jge
stos
mov
add
cli
inc
xchg
ficomps
add
mov
cld
xor
out
pusha
or
test
mov
clc
pop
fincstp
callw
sub
test
pop
insb
lret
sbb
mov
jo
or
push
ja
push
jmp
mov
mov
sub
jl
xor
pop
push
mov
lret
push
int3
lret
call
inc
cli
sbb
push
mov
jbe
adc
sbb
mov
test
and
movsl
and
jo
sub
stc
push
inc
fisubrs
test
and
cld
ret
ljmp
fstps
les
jne
mov
xor
ljmp
pop
or
movaps
sti
push
mov
xchg
test
dec
and
filds
jo
sbb
notl
loop
cli
inc
or
jo
inc
sbb
dec
idivl
aad
sbb
pop
sbb
cld
push
lods
repnz
dec
shll
xor
fsub
scas
sbb
xor
ljmp
into
mov
pushf
mov
int
sti
imul
xchg
jmp
push
cmp
mov
test
ret
fsubrs
adc
test
add
push
or
sbb
pop
mov
rolb
jns
dec
call
fiaddl
push
outsb
pop
out
xchg
sub
pop
imul
xlat
mov
push
xor
add
xor
inc
iret
dec
fwait
xor
mov
sub
in
out
mov
mov
test
lret
push
xor
int3
out
mov
and
pop
jecxz
cmp
ja
inc
shlb
cwtl
xor
add
pop
xor
adcl
ret
inc
mov
fsubrp
decl
jle
out
cld
out
sbb
cld
loopne
adc
sbb
adc
adc
pop
mov
xor
popf
or
and
lcall
out
call
lret
rep
in
push
fistpll
insb
repnz
mov
addr16
xchg
mov
test
inc
inc
mov
mov
sarl
fsubs
enter
imul
sar
cmpsb
pop
mov
test
lock
mov
lock
testl
leave
mov
sub
lahf
sti
lret
mov
movntq
out
or
je
mov
fcompl
rclb
in
outsb
inc
jmp
test
add
mov
xor
sub
xchg
imul
insb
push
or
mov
ss
pop
xchg
cmc
cmp
fsubrl
outsb
adc
jo
adc
fwait
pushf
cmpsl
sub
fcompl
inc
loop
cmpsl
mov
clc
adc
add
xchg
xor
int3
mov
xor
push
data16
jbe
in
in
mov
nop
outsl
aam
push
int
inc
xchg
imul
jg
arpl
out
into
leave
in
call
mov
scas
mov
mov
mov
push
sbb
xchg
pop
fistl
or
dec
mov
add
fstpl
mov
repnz
dec
xor
xchg
add
push
gs
and
cwtl
and
popl
lcall
lret
inc
xor
mov
fwait
xor
jle
gs
xchg
pop
hlt
iret
push
in
sub
test
mov
mov
test
pop
jno
xorl
int3
popf
jno
pop
sub
out
pop
lahf
cld
and
cmp
pop
dec
dec
hlt
ljmp
mov
cwtl
in
add
adc
push
xor
sub
mov
scas
lods
dec
adc
imul
jne
idivb
cld
cmp
jns
add
sub
bnd
xlat
xchg
vmaxpd
xlat
stos
mov
mov
pushf
sarb
push
sub
incl
adc
sub
mov
or
filds
mov
xchg
or
jmp
pop
inc
cwtl
mov
ret
imul
sti
call
and
mov
test
loopne
sub
cld
fbld
vmwrite
insb
pop
mov
or
cld
lea
mov
sarl
mov
mov
hlt
xchg
and
push
fcmovu
test
nop
outsl
fsubl
sbb
daa
jae
iret
jnp
and
ret
lahf
dec
pop
sbb
pushf
in
ret
out
call
inc
pushf
xchg
sti
and
dec
pushf
xchg
rcr
aaa
pop
xor
push
jmp
imul
xchg
cmpb
inc
push
add
sub
fsubrs
jno
addr16
jl
push
push
scas
loope
pop
popf
fsubr
and
ds
push
mov
push
add
out
add
bound
adc
gs
aam
mov
sbb
mov
clc
and
shl
call
dec
test
sbb
outsl
and
push
sbb
ljmp
push
nop
mov
imul
out
push
imul
int3
fs
gs
lods
mov
add
and
imul
ja
mov
xor
test
scas
hlt
mov
ret
cwtl
pop
cld
push
jo
xchg
fwait
xchg
mov
test
pop
xor
mov
mov
or
push
dec
xor
out
fildl
fmul
sub
pop
int3
xor
adc
add
sbb
fmull
cltd
lds
ds
aam
mov
iret
icebp
call
and
mov
jo
loopne
xor
insb
xor
adc
ret
sub
enter
ljmp
lock
lret
into
cmovns
xor
rep
fimuls
aaa
inc
daa
xchg
push
jle
ljmp
in
sub
sbb
mov
dec
jg
dec
leave
sub
rolb
cli
cwtl
les
fcomps
xor
ljmp
out
not
rcr
out
pop
test
xchg
inc
jno
jle
inc
dec
cwtl
lcall
aam
imul
inc
xlat
lea
dec
xor
and
cmpsb
xor
mov
inc
call
adcb
addr16
mov
int3
mov
sub
jmp
das
movsb
stos
test
repnz
iret
jo
lods
aaa
cmp
out
call
test
fsubl
mov
mov
in
movsb
fcomp
pop
loopne
ffreep
sub
lahf
xchg
imul
sbb
test
js
repnz
test
fldl
hlt
xlat
jnp
jl
gs
mov
out
dec
dec
mov
and
cmp
jo
add
sub
xor
and
icebp
fsub
push
imulb
jne
int3
xchg
sarb
stc
pop
cmp
push
jecxz
push
imul
lret
imulb
cli
aam
sbb
push
mov
lcall
test
pushf
and
jp
or
movsl
loope
mov
outsb
xlat
leave
push
loop
and
fsubrl
and
pop
dec
out
insb
stos
loopne
aad
push
mov
xchg
nop
sbb
imul
test
fmuls
sti
ds
lock
pop
movl
cs
cli
rorb
gs
pop
pop
xchg
jne
jbe
push
add
push
cli
cwtl
pop
movsl
cli
pop
fcmovnbe
inc
and
loopne
test
iret
push
xchg
arpl
inc
pop
test
sarb
mov
sub
dec
cmp
idivl
mov
xchg
pushf
aaa
dec
push
jae
roll
rcrb
jg
out
call
hlt
dec
rcrl
mov
and
shll
adc
pop
lds
xchg
in
packssdw
adc
cmpsb
xchg
and
dec
fldenv
jle
and
and
mov
cmp
dec
clc
add
add
mov
mov
cmc
outsb
mov
out
xor
in
xor
mov
inc
mov
jo
xlat
xchg
mov
pop
jge
push
mov
loopne
gs
lods
inc
call
add
insl
add
cmp
scas
ja
jns
dec
inc
testb
lock
xchg
mov
mov
out
fsubrs
test
dec
rcrl
dec
clc
push
mov
mov
fwait
enter
std
lret
addr16
mov
lahf
dec
mov
cmp
pop
and
rolb
add
push
dec
mov
repnz
js
push
xchg
in
sbb
cs
pop
jge
aam
call
or
adc
inc
sub
fcomps
mov
xchg
ss
sbb
lret
jb
adc
out
cld
and
dec
loope
mov
push
cmovs
in
nop
dec
xchg
aam
jle
icebp
call
leave
jns
cmp
mov
in
pop
leave
jg
cmp
arpl
push
imul
adc
out
mov
lods
xchg
ljmp
xchg
js
push
repz
outsb
loopne
xchg
cli
lret
xchg
mov
or
cs
insb
or
lods
and
and
cmp
add
aam
popa
clc
mov
and
loope
cmp
negl
sub
or
dec
pop
add
fmul
inc
clc
addr16
std
mov
add
pop
or
sbb
jmp
aas
adc
jecxz
movsl
and
cmp
ffree
adc
int3
mov
adc
or
call
inc
sub
fimull
dec
stos
jl
pop
fcoms
add
sub
ficomps
call
stos
fdivr
out
fisubrl
je
add
lods
fldl
cli
idivl
pop
nop
sub
mov
mov
mov
dec
shlb
pop
nop
fsubs
in
adc
nop
out
loopne
out
dec
test
dec
cli
pop
fistpll
add
sbb
lret
iret
js
xor
int
pop
cwtl
push
sbb
ljmp
js
mov
xor
add
xchg
sbb
lods
sarb
ds
jb
mov
in
mov
ffreep
inc
adc
je
test
push
add
notl
lea
stos
cs
test
lock
lods
adc
nop
into
jle
outsl
inc
push
rcll
mov
in
imulb
out
cwtl
push
int
fisubl
ds
cmp
test
jecxz
mov
fbstp
xor
xchg
jge
cmpsb
fsub
cwtl
lret
andb
imul
or
aad
rclb
xchg
add
test
int
shlb
js
xlat
cwtl
in
jle
insb
roll
xchg
data16
and
or
cmpsb
jp
or
jo
sbb
clc
faddl
mov
jne
mov
stos
xlat
loope
push
out
imul
inc
mov
mov
lret
cld
jnp
lret
nop
lret
aas
inc
je
test
decb
jmp
fmull
inc
insl
sbb
cmp
xor
cmp
fisubs
pop
imul
inc
dec
shl
push
les
jg
repnz
ficomps
mov
movsl
sub
leave
lods
hlt
gs
cs
xchg
addr16
mov
add
inc
ss
repnz
iret
cmp
int
xchg
mov
inc
std
xchg
iret
push
pop
inc
setl
dec
call
in
incl
xor
jle
iret
clc
call
mov
stos
dec
addr16
cwtl
dec
out
movsl
fiaddl
adc
pusha
mov
push
addr16
pop
push
pop
out
push
data16
outsl
fsubl
push
xor
daa
leave
xchg
imul
mov
out
out
nop
push
xchg
pop
loopne
xor
je
cmpsl
in
push
pop
push
ja
shll
push
cmpsb
test
mov
stos
incl
sub
fisubs
adc
test
or
xchg
imul
add
in
push
lahf
inc
aas
or
lock
js
lock
mov
repz
sbb
imul
dec
out
pop
stc
mov
in
xchg
std
clc
and
pop
fsubrp
fsubrs
mov
adc
xchg
fstpl
mov
into
sbb
jecxz
aam
stos
sbb
dec
in
das
fs
mov
addr16
shr
ficoml
pop
shlb
add
push
pushf
pop
in
mov
lds
xchg
pushf
sbb
dec
push
xchg
jne
incl
sbb
xor
cwtl
test
sub
fdivs
pushf
sar
aaa
ljmp
pushf
test
sub
mov
dec
xor
pop
pop
and
mov
push
js
lock
mov
sbb
aad
sbb
push
xor
mov
cwtl
cli
fiaddl
xacquire
pushf
out
cmp
repz
loop
movsb
aas
sub
add
sbb
call
repnz
fs
pop
ret
insl
iret
test
lea
movsl
les
mov
aaa
mov
and
pop
out
sbb
dec
mov
push
mov
cmpsl
push
aad
imul
jno
outsl
xchg
pusha
in
mov
adcl
outsl
into
xchg
sub
bound
cmpsl
in
out
mov
stos
sub
push
xchg
int
push
inc
inc
int3
inc
loopne
dec
jb
push
and
xchg
cmpsb
syscall
outsb
gs
test
adc
incl
sbb
in
mov
bound
repnz
test
mov
out
iret
call
pusha
shll
push
jbe
sub
add
push
cmp
mov
shll
xchg
dec
jle
xor
pop
sub
in
loop
pop
lods
jo
jecxz
jne
aad
sbbb
inc
push
jno
sbb
test
jle
push
es
push
sub
repz
ficompl
hlt
pusha
ljmp
jl
push
sub
in
pop
cmp
rorl
pop
movsb
fmuls
xchg
test
lret
push
mov
push
fimull
xor
dec
dec
mov
js
outsl
popf
mov
loope
js
or
sbb
add
out
out
or
and
lcall
das
xchg
in
xchg
jno
cltd
push
stc
fstpt
dec
movsb
shr
shll
sar
pop
sub
data16
cmp
cli
lods
adc
push
repz
imul
test
inc
mov
or
imul
lret
out
nop
insb
aas
fmuls
mov
hlt
imul
movsl
divb
out
cmpsl
daa
mov
imul
call
inc
and
mov
repz
ret
js
lret
push
out
mov
adc
lds
push
sbb
nop
xor
pop
int3
lret
xor
aaa
popa
sub
sub
pop
pushf
call
push
jo
jno
aas
push
and
mov
or
repz
and
pop
xchg
cmp
pop
and
sti
fwait
clc
aam
inc
xchg
mov
inc
pop
cmp
mov
xor
cmp
or
testl
push
rcrl
mov
aad
ret
test
divb
popf
mov
fcomip
faddl
pop
mov
xchg
cwtl
mov
push
dec
xor
push
add
je
mov
test
in
shl
call
lds
fxtract
and
in
xchg
lods
sbb
loope
fmuls
dec
dec
cmp
leave
cmp
cmc
mov
loopne
into
in
iret
repz
pop
mov
mov
dec
mov
loopne
mov
divl
repnz
xchg
vcvtss2si
mov
jmp
lahf
or
sbb
and
mov
or
js
push
xor
ljmp
nop
jecxz
sbb
fxch
imul
lds
cmovle
pusha
pop
cmp
mov
xor
inc
jmp
sub
fmulp
aad
sbb
lcall
addr16
rcrl
jnp
lods
daa
xchg
loop
test
dec
outsl
push
orb
pop
mov
push
gs
sahf
stos
imul
mov
pop
lds
jns
cs
mov
xchg
in
pop
jnp
add
stos
adc
fwait
cwtl
fisubs
adc
cmpsb
es
jno
cltd
fnstsw
fwait
or
xor
ficomps
inc
cmp
mov
dec
call
adc
add
xchg
scas
mov
cs
lret
orl
outsl
add
sbb
test
pop
xchg
jmp
call
fsubrl
nop
xchg
dec
xlat
fcomp
xor
cmp
sub
test
es
add
repz
insb
test
sbb
iret
lcall
mov
mov
fcoms
mov
mov
pop
xacquire
mov
cmpsb
dec
fst
cmpsl
pop
cmp
lahf
inc
or
push
out
push
loop
es
je
push
lock
adc
test
cmpsl
and
add
mov
stos
or
pop
and
or
sbb
testl
int3
mov
int3
pop
sbbl
mov
jp
adc
xchg
icebp
sub
or
sub
xchg
lock
sbb
movsb
test
mov
pop
mov
mov
adc
nop
out
pop
out
mov
or
jno
mov
outsl
aam
repnz
lods
js
fimull
loop
dec
jo
inc
test
push
mov
ljmp
ror
and
jno
sbb
mov
xor
sbb
xlat
adcl
imul
movsb
stos
mov
imul
das
arpl
mov
mov
mov
and
out
xor
push
cli
fisubl
int3
mov
cli
jmp
push
xorb
into
push
xchg
and
rcll
in
test
sahf
out
test
out
xchg
adc
loop
or
lock
xchg
in
jb
icebp
mov
into
nop
add
pop
sar
out
repnz
jecxz
inc
aam
das
lret
and
lds
ljmp
sti
jbe
push
mov
pop
dec
push
cwtl
xchg
shrb
jp
gs
stos
ljmp
sub
and
test
inc
in
fst
and
daa
pop
pop
stc
imul
or
lods
outsl
cld
ret
popa
and
sbb
inc
or
imul
lock
cmc
shrl
movsb
loopne
jecxz
dec
out
imul
mov
lds
aad
in
int3
scas
mov
sbb
xchg
movsb
mov
cld
test
nop
inc
push
shlb
and
mov
test
les
xchg
sahf
mov
rol
sbb
push
xchg
add
cmp
jb
imul
clc
push
push
loopne
sub
rorb
fadds
cmp
in
or
push
pop
mov
outsl
in
repnz
dec
fs
or
push
inc
pop
xorl
push
push
aad
add
addb
pop
dec
fs
sub
mov
repz
jne
mov
cwtl
xchg
out
mov
outsb
fdiv
push
in
call
lret
cwtl
lahf
sti
nop
xchg
mov
test
cmpsl
testb
lahf
and
aas
aam
mov
mov
gs
lret
sar
dec
xlat
adc
jns
fstps
nop
fwait
dec
call
pop
mov
ret
ret
xor
pop
push
mov
nop
xor
mov
daa
pop
out
sub
in
cmp
sub
es
in
fisttpl
xchg
fsubrs
pop
lods
or
lock
mov
imul
dec
sahf
inc
xchg
fadds
fisttps
gs
js
stos
pop
or
sbb
jbe
shlb
or
mov
cmp
xor
les
orl
and
into
inc
xchg
jbe
mov
mov
sub
mov
sbb
jmp
in
adc
lods
cmpsl
mov
outsb
mov
imul
inc
lahf
xor
adc
push
fcomps
xchg
mov
sbb
fcmovnu
dec
mov
pop
addr16
ljmp
xlat
pop
mov
adc
cmp
adc
ficompl
inc
pop
push
jnp
pop
sub
dec
push
mov
jnp,pt
mov
cmp
inc
and
dec
xchg
adc
pop
add
push
call
shrb
iret
mov
iret
ficoml
fiaddl
jmp
mov
cld
js
call
fdivrl
lret
sbb
je
mov
pop
jge
dec
dec
cmp
stos
and
mov
insb
daa
cmp
out
lret
int
leave
jmp
aam
jno
jo
xchg
mov
testb
and
sbb
and
push
insl
daa
inc
imul
cmp
clc
shl
fwait
or
in
xor
inc
xchg
jne
test
cmp
in
pop
mov
out
xchg
xchg
cmp
mov
mov
fisttpl
sbb
fistl
xchg
mov
es
dec
clc
pushf
lahf
inc
cs
gs
nop
mov
pop
xor
jbe
lret
test
or
dec
pop
fwait
call
mov
cmp
ss
fcoml
mov
cmp
push
cwtl
xchg
push
lahf
daa
xchg
rolb
mov
aam
dec
jmp
xchg
fldl
aas
cmpsl
dec
mov
dec
mov
or
adc
mov
jno
jae
sbb
dec
mov
sub
xchg
ret
push
js
lods
es
clc
call
push
outsl
aam
test
ljmp
data16
decl
adc
xor
sbb
add
mov
jg
hlt
fcom
mov
insw
stos
roll
outsl
add
and
repnz
mov
es
js
imul
insl
loopne
push
lock
push
pop
adc
pop
jne
clc
sub
add
cli
sbb
sbb
je
cmp
jne
test
push
pop
xchg
pop
add
mov
aam
push
int
adc
push
lods
into
lahf
mov
lret
gs
cld
into
notb
in
aam
leave
sub
push
cli
fadds
stos
imul
cmp
aaa
and
shrl
imul
fcomps
leave
mov
pop
rorl
pushl
clc
jle
mov
call
xlat
mov
sub
pushf
sub
sub
jmp
and
cs
xchg
or
loop
rolb
out
xchg
dec
std
fisubrs
lea
pop
int
rorb
add
pop
mov
pop
sub
ds
dec
clc
xlat
xchg
adc
inc
sbb
gs
and
inc
daa
xor
inc
xchg
sbb
stc
push
xor
xchg
rep
or
jmp
xor
cmp
aas
rolb
lret
xchg
adc
sbb
lods
push
pop
mov
je
ljmp
xchg
jno
push
mov
insb
xchg
mov
fdivr
cmp
test
pop
xlat
mov
imulb
pop
lock
add
gs
shlb
xchg
adc
aaa
outsb
sub
fsubl
icebp
mov
cmc
mov
pusha
clc
loope
pop
leave
jg
popf
or
add
test
popf
push
fs
rorb
rcl
pop
mov
movsb
clc
fxch
aam
mov
xor
adc
mov
push
add
movsl
scas
in
adc
nop
fsts
xchg
and
mov
cmp
mov
or
jo
xor
adc
ds
inc
cld
mov
pusha
aam
lcall
push
sarb
sbb
lods
jge
fdiv
jp
jo
mov
xchg
es
and
notb
sti
mov
lcall
inc
imul
xor
sbb
out
inc
leave
mov
pop
bound
lret
cmpl
pop
pop
add
pop
mov
or
inc
xchg
mov
lea
dec
push
mov
imul
mov
js
fadd
push
jno
loop
jne
into
xchg
pop
dec
dec
mov
cmp
sub
jl
or
std
add
mov
ficompl
in
or
cmp
nop
divl
in
in
sub
repz
add
mov
sub
pusha
or
sbb
outsl
incb
and
and
or
js
pushf
leave
addb
cmp
js
mov
push
pushf
pushf
mov
lahf
fidivrs
ljmp
cmp
jae
addr16
mov
lahf
or
shlb
in
scas
and
cmp
mov
sub
jecxz
mov
cmpsb
sbb
xchg
es
lcall
leave
mov
or
jle
sub
jbe
lret
rcrb
xchg
hlt
mov
mov
jge
imul
sbb
ja
fldenv
mov
imul
shrl
cmpsl
inc
jnp
pusha
int
imul
scas
loope
bswap
pop
sbb
sbb
push
test
cltd
mov
lock
out
das
mov
ljmp
or
push
pushf
cmp
mov
add
pushf
imul
and
inc
call
int
mov
cmp
push
shll
fsts
clc
stos
aas
add
stos
or
test
cmp
xor
mov
aam
and
cmpl
out
outsl
shlb
adc
cld
imul
sub
jae
or
and
or
or
dec
orl
loope
push
out
xchg
cmp
inc
mov
fadds
out
adc
dec
fwait
sbb
bound
push
sti
sub
sub
daa
lret
out
shl
xchg
imul
dec
mov
push
repz
scas
adc
out
lock
pop
or
add
das
push
sub
in
pushf
cmp
jno
in
in
repnz
xchg
jo
shl
leave
push
adc
jno
icebp
aam
insl
cmp
in
pop
pop
adc
mov
jnp
sub
mov
test
dec
add
dec
int
xchg
dec
dec
inc
fdivr
aaa
xor
sub
into
or
daa
mov
or
and
repz
jb
daa
in
aam
push
rorl
test
mov
fbstp
aam
movsl
stc
pop
or
std
js
adc
mov
orb
psrlw
cmp
jecxz
sti
call
adc
mov
cmpsl
outsb
cmpsb
fcoml
push
in
sbb
dec
fnsave
stc
xorb
cmc
call
and
sbb
xchg
push
movsl
aad
dec
cmp
iret
sub
lahf
shrb
not
lcall
lret
xchg
xchg
add
and
sub
iret
aaa
mov
xchg
js
xchg
and
dec
jp
inc
inc
fisubrl
push
loope
mov
je
mov
mov
insl
fcomps
jmp
jnp
sbb
leave
out
aaa
ret
jo
gs
aas
mov
inc
je
cltd
mov
outsl
xlat
jmp
sbb
xchg
xchg
rcr
add
rcr
xor
pop
inc
sbb
loopne
sbb
cmpsl
imul
cli
mov
sub
mov
pusha
sbb
fs
jmp
mov
sub
stos
push
cmp
adc
sahf
push
pop
pop
jle
jmp
or
cwtl
fsubrl
jp
iret
das
cltd
loopne
mov
ja
sbb
or
push
mull
mov
shrb
dec
adc
aaa
out
or
xchg
push
push
sbb
dec
cmpsb
jg
jl
lock
xor
insb
mov
push
fisttps
cmp
cli
cwtl
dec
xchg
aam
int
sbb
mov
pop
outsl
dec
stos
stos
and
or
or
daa
xor
in
inc
push
fisubrl
cmpsb
shlb
inc
into
gs
gs
fiadds
insb
loope
mov
push
push
shr
xor
movsb
pop
in
cmp
sahf
adc
dec
gs
push
sub
fidivrs
pusha
nop
adc
push
outsl
push
mov
pop
out
repnz
cwtl
xchg
or
cs
cmpsl
loopne
jg
jns
pop
aam
rorb
lea
lock
dec
setl
shl
inc
push
out
xlat
jge
mov
pop
call
in
mov
and
aas
inc
loop
shrl
loop
pop
push
cmp
imul
fsubrp
pop
mov
rclb
shrl
addr16
adc
mov
jl
dec
xor
cmp
fcomps
mov
sbb
dec
mov
push
addr16
rcr
push
mov
mov
and
repz
mov
addr16
sub
cmp
and
repz
inc
pop
mov
cli
or
das
and
ja
cmp
aad
xchg
aaa
mull
ljmp
out
gs
or
jno
je
inc
mov
in
cmp
sbb
mov
add
fidivrl
push
inc
xchg
mov
rolb
cmp
xchg
js
inc
call
xor
aas
lods
ljmp
inc
int
cli
sbb
dec
imul
jno
lods
pop
or
mov
push
push
inc
mov
adc
adc
leave
inc
mov
vmread
and
cmp
sbb
sub
into
mov
mov
mov
mov
mov
xchg
fdivl
stos
filds
sbb
cld
cli
adc
shlb
jae
cwtl
sub
xorl
jge
adc
adc
adc
mov
mov
das
mov
insl
testb
repnz
cld
imul
lds
lds
stos
stos
rorl
shlb
and
in
or
mov
dec
clc
std
repnz
into
rorb
fsubrl
aad
mov
add
in
sub
bound
mov
mov
mov
pop
cwtl
mov
push
lds
jl,pt
outsl
jae
popl
aam
xchg
loope
aaa
sarb
add
aas
xchg
and
mov
xlat
cmp
xor
mov
lret
push
cmp
rolb
mov
stos
lahf
lret
in
sub
push
push
sti
fwait
and
inc
inc
mov
mov
sbb
into
push
dec
sarb
push
mov
sbb
mov
xchg
and
cmp
jno
mov
push
mov
pushl
mov
out
push
push
pushf
xchg
loope
repnz
jb
pop
es
jo
in
lods
adc
xchg
bound
scas
in
iret
pusha
repnz
lahf
lret
ljmp
rcr
ss
sbb
lahf
leave
mov
cmp
and
jne
out
mov
adc
fimull
lret
ds
dec
imull
add
pop
popf
iret
dec
xchg
stos
lods
inc
inc
cwtl
jb
push
scas
add
inc
jne
aam
loopne
pop
mov
add
inc
popl
xor
inc
pop
xchg
ret
test
add
sub
or
shlb
aaa
mov
mov
ljmp
mov
push
and
cmc
fs
pop
sti
mov
in
je
shll
loopne
mov
in
inc
leave
push
and
in
cmpsl
nop
call
fists
pushf
les
aaa
jne
mov
imul
mov
or
and
das
ljmp
ljmp
add
loope
fwait
push
add
repnz
xchg
add
xchg
fcoms
aas
mov
mov
sbb
adc
int
testl
repz
cmp
add
imul
xor
jge
or
add
in
xchg
rolb
pop
jno
popa
or
call
lahf
jmp
aaa
adc
xchg
insb
jb
shll
mov
cmp
sub
popa
bound
pop
push
rol
pop
stos
add
call
ret
and
lods
and
cwtl
pop
or
int
dec
mov
aas
popl
cmpsl
sub
jge
dec
je
jb
pop
ret
in
insl
pusha
dec
rorl
leave
cmpsb
mov
mov
jecxz
insb
std
cmp
shlb
out
shlb
pop
ljmp
push
mov
sbb
lret
nop
xchg
out
je
push
scas
int3
sar
test
imul
fdivr
test
sub
rcrb
inc
mov
jmp
sbbl
push
movsb
mov
xchg
test
or
scas
js
add
lret
push
ljmp
insl
mov
sbb
popf
mov
enter
dec
pop
mov
lcall
inc
rorb
out
sub
sbb
pop
sub
pop
pop
rcrl
mov
mov
or
dec
test
push
xchg
repz
ret
jb
fcomp
push
js
add
repnz
divl
jecxz
push
lret
mov
lahf
imul
sbb
xor
dec
dec
or
and
leave
pop
dec
out
mov
movsb
fcmovb
inc
push
xor
mov
int3
mov
mov
in
ds
pop
adc
sub
sbb
mov
add
mov
enter
lcall
lret
fisubrl
mov
dec
jmp
ss
pop
adc
test
loopne
jns
push
xor
loop
pop
loop
mov
mov
cld
adc
push
sub
xchg
fldt
xor
push
pop
dec
inc
adc
dec
sub
xor
jae
ja
lret
test
cmp
xor
int
dec
sar
xchg
mov
sbb
fnsave
nop
xchg
mov
dec
cmpsb
inc
adc
imul
xor
dec
mov
dec
scas
fcom
mov
xchg
mov
dec
sbb
ljmp
sbbb
cmpsb
mov
push
xor
fidivs
mov
repnz
out
imul
sti
dec
sub
mov
fdivl
addb
jmp
dec
je
nop
xchg
lock
sbb
mov
std
fists
push
mov
jmp
in
xchg
jae
xlat
movsb
or
movsb
dec
ss
jo
pop
fisubs
jns
iret
jbe
loope
iret
jae
mov
mov
dec
mov
cmc
sub
ret
data16
imul
push
faddp
insb
test
das
cld
rcl
jb
aas
sbb
ficomps
ret
mov
sarb
and
jno
xchg
daa
dec
push
gs
jne
push
push
rcl
std
ljmp
sub
jbe
and
xor
in
cmpsb
mov
sub
leave
inc
mov
test
mov
xor
mov
mov
test
movsb
in
popa
cmp
dec
aam
inc
cwtl
ret
loopne
cmpsl
cld
jmp
icebp
pop
pop
aaa
repnz
aad
jno
or
pop
xchg
cli
pushl
mov
addr16
xlat
ret
imul
xor
popfw
pop
out
out
xchg
fdivrs
leave
popa
out
inc
leave
push
pop
clc
pop
nop
add
xor
push
jb
nop
lock
inc
movsb
inc
aad
lret
lret
lock
movl
add
imul
pop
cmp
cwtl
imul
mov
out
xor
mov
and
xchg
xchg
and
pop
pushf
loop
jmp
or
pop
out
add
fistps
inc
fdivrs
sahf
stos
ds
xchg
shr
fwait
mov
add
push
adc
mov
inc
xchg
test
add
mov
pop
mov
xchg
jecxz
aam
xor
ret
loopne
bnd
sbb
xchg
pop
cmpsl
sarb
mov
scas
add
push
nop
and
xchg
push
inc
pushf
add
ja
xor
jmp
adcl
dec
jle
in
pop
je
sar
fstpt
cwtl
xchg
shlb
fsubrl
pop
je
add
test
ja
lods
cmp
adc
pop
clc
xchg
leave
mov
testl
repnz
adc
mov
pushf
pop
lret
inc
rorl
xchg
call
jge
stos
outsl
gs
ja,pt
xchg
lock
dec
xor
mov
loopne
xchg
rcll
adc
push
and
addb
add
sub
ror
clc
shrb
mov
fidivrs
loopne
lret
mov
shlb
sub
lahf
divl
lret
rclb
push
jno
xchg
mov
fistl
sub
and
inc
cmp
and
mov
inc
ljmp
and
cwtl
sti
aam
mov
ret
in
rol
daa
mov
jbe
or
shrb
fisubrs
ffree
popf
push
or
insl
fisubrl
daa
call
jl
jo
xchg
jae
pop
call
imul
leave
in
out
mov
jnp
xor
fisttpll
and
rol
aaa
lret
mov
mov
xchg
jno
insb
incl
add
pop
inc
dec
mov
ret
rclb
out
mov
mov
jl
push
out
sub
jmp
addr16
add
adc
ret
xchg
add
andl
jecxz
insb
loopne
sbb
in
push
mov
dec
dec
aam
sbb
and
jecxz
in
cmp
lret
cwtl
test
push
test
aas
or
sbb
iret
inc
xchg
daa
mov
xchg
inc
push
test
js
mov
dec
ss
dec
pop
or
xor
imul
lcall
rcl
mov
push
loope
mov
pop
fistpl
push
addl
xchg
gs
lcall
xchg
outsb
insb
out
xchg
push
push
jbe
dec
popf
test
xor
nop
xchg
pop
add
jo
inc
pop
sub
mov
jae
mov
outsl
sbb
xor
and
rcr
pop
fistps
push
pushf
popa
mov
dec
cmpsb
push
negb
xor
xorl
pop
int
adc
mov
lahf
popa
mov
insb
loope
mov
movsb
outsl
fsub
cmpl
jb
add
mov
and
cmpb
jle
loopne
pop
aas
hlt
popf
push
jl
loopne
cmp
xchg
mov
mov
or
enter
call
into
sub
xchg
cli
jae
out
or
out
clc
jp
insb
mov
imul
test
call
inc
mov
push
mov
bound
mov
xor
int3
ljmp
ss
and
and
jo
push
and
sbb
cmc
inc
ljmp
xchg
inc
test
ficompl
xchg
inc
hlt
imul
xor
mov
shll
add
insl
popf
stc
dec
repz
je
mov
lret
into
push
int
sub
js
inc
pusha
adc
in
enter
gs
dec
mov
loopne
mov
stos
add
in
fimull
test
into
ljmp
or
bound
ja
cwtl
sub
jmp
or
add
adc
cmc
sub
into
or
fldl
bound
lock
in
out
inc
imul
mov
nop
xchg
pop
movsl
push
andb
pop
mov
insl
and
xchg
sarl
push
shlb
xor
fwait
pushf
fstp
lock
movsb
add
cwtl
and
sbb
pop
mulb
mov
cmpsb
ss
push
imul
pusha
aad
pop
jge
roll
xlat
or
add
push
adc
scas
push
idivl
repnz
out
cmp
rorl
xor
in
mov
addb
sahf
or
les
mov
out
or
jecxz
repnz
jae
test
adc
sti
in
cmpsb
pop
add
jmp
mov
lods
jb
lcall
sbb
hlt
in
adc
cli
decb
add
dec
mov
bound
and
nop
push
push
xor
jge
sub
loopne
add
push
imul
aas
xchg
mov
repz
lods
adc
fisttpl
mov
pop
push
lcall
lcall
lret
jo
mov
cwtl
mov
hlt
jl
ljmp
pop
add
jmp
testl
pop
and
sub
ljmp
or
xchg
enter
mov
mov
jbe
mov
cwtl
pop
clc
add
test
jecxz
pop
push
in
jbe
arpl
loope
aad
clc
icebp
push
sbb
xchg
fidivs
cs
xchg
cwtl
and
pop
andl
out
les
ret
lock
cwtl
sarl
sbb
xor
jle
sub
jecxz
imul
pop
pop
mov
fs
pop
es
xchg
and
add
dec
idiv
into
fisubl
es
je
stos
push
pop
mov
cmp
dec
ret
xchg
xchg
xchg
mov
dec
or
xor
cmc
or
dec
or
mov
xlat
es
cmpsb
in
cmp
inc
cltd
repnz
dec
iret
sbb
rcl
jle
jge
aad
test
sub
and
lds
int
ljmp
cmp
mov
push
or
dec
sbb
rclb
lods
sub
adc
out
jbe
lods
xor
loopne
mov
mov
leave
adc
shlb
mov
leave
js
imul
js
or
dec
jle
and
mov
pop
lea
push
shll
and
and
das
add
cltd
cli
cmp
lret
lahf
push
cwtl
mov
mov
cmp
int3
data16
scas
lahf
dec
cmp
pop
into
cmp
xor
jbe
or
imul
imul
repz
xchg
int
mov
cmp
je
fiaddl
push
fmul
xlat
inc
xor
xchg
in
xchg
lret
mov
add
sbb
push
sahf
xor
gs
adcb
lock
push
imul
jp
in
movsl
mov
int
out
mov
add
cmpsb
mov
pop
test
aas
gs
scas
mov
sub
lds
lcall
inc
lock
cmp
dec
out
pop
insl
jmp
mov
xchg
push
pop
popa
push
cmc
or
mulb
and
inc
pushf
pop
jno
push
mov
mov
out
add
andl
jg
pusha
xor
in
xor
es
hlt
mov
pop
mov
imul
pop
adc
mov
cmp
repz
pop
add
jne
popf
xchg
push
ds
out
add
xorl
jae
cmpl
mov
bnd
cli
jmp
mov
xchg
imul
popa
add
push
push
inc
push
int
ret
sbb
gs
push
pop
and
jae
test
imul
push
aaa
add
cmp
int3
pusha
xchg
or
cmp
sbb
hlt
in
dec
rcrb
jmp
mov
out
adc
mov
inc
xchg
lea
sbb
push
out
sti
iret
push
pushf
in
ljmp
push
imul
clc
add
jno
push
ret
movsl
sub
hlt
sbb
pop
test
sub
sar
fadds
popa
movsb
xor
and
sbb
mov
add
insl
ret
insl
pop
gs
lods
int
imul
add
mov
dec
jge
jb
dec
repz
in
cmp
jge
mov
mov
out
aam
shlb
push
adc
decb
decl
ret
js
aaa
cmc
pop
lret
cmp
xor
or
add
mov
or
in
lods
sbb
nop
aam
scas
cmc
repnz
push
dec
adc
imul
mov
add
leave
push
jo
sub
push
cmp
sar
jo
int3
mov
stc
pop
outsl
sbb
push
fisubl
cmp
in
cmp
mov
cmc
mov
sub
add
neg
daa
pop
mov
mov
sbb
loop
rcrl
and
imul
pop
scas
add
je
hlt
test
inc
sahf
inc
lahf
pop
mov
loopne
imul
inc
lods
js
cmp
xor
pop
inc
cmp
test
fildll
inc
mov
lea
call
test
xchg
sub
rcll
in
or
add
adc
sbb
and
sbb
clc
out
push
pop
mov
sarl
add
push
mov
sub
xor
push
push
daa
mov
fimull
xor
in
push
xlat
jp
ret
mov
sahf
ljmp
repnz
dec
mov
lods
aas
mov
scas
and
popa
popa
xor
dec
aas
call
sub
mov
jl
loopne
popf
sarb
sbb
cmp
xchg
and
cwtl
stos
in
popa
jmp
cmp
sub
fwait
cmp
or
xchg
es
and
sbb
repnz
mov
mov
and
mov
outsb
pop
jl
and
inc
loopne
sbbb
sbb
or
mov
mov
or
xchg
outsl
nop
pushf
mov
daa
pop
mov
pop
loop
or
xor
sbb
rcll
pop
in
cmp
insb
aas
cmp
int3
ret
and
test
in
add
shlb
mov
imulb
stos
data16
inc
out
popf
xor
adc
add
push
mov
push
dec
aaa
inc
xor
sbb
or
scas
addl
xor
in
xlat
imul
fdivs
test
pop
cmp
dec
or
test
or
push
movsl
out
je
mov
pop
push
jecxz
push
ret
or
mov
add
les
push
filds
repnz
mov
scas
fdivrp
lock
iret
pop
sbb
push
mov
in
pop
out
and
das
lcall
push
subb
fisubl
lcall
jb
lcall
jg
rcrb
jmp
mov
sbb
cmp
nop
or
data16
sbb
in
movl
jecxz
xchg
arpl
ds
xlat
jo
cmp
push
insl
call
or
lea
mov
data16
mov
and
mov
scas
repnz
xchg
fdivrs
pop
out
fdivrl
cmp
xor
int
and
adc
mov
or
in
adc
xchg
out
mov
xchg
lock
fildl
xchg
dec
clc
jno
cmp
rolb
xor
xor
or
lcall
ss
sbb
mov
test
out
push
out
leave
mov
xlat
lods
push
dec
repz
cmpsb
scas
xchg
cld
out
clc
pusha
lock
push
jecxz
sbb
inc
imul
mov
dec
cli
fsub
iret
cwtl
xchg
push
jmp
movsl
cmp
jo
sub
xchg
cld
js
rolb
pusha
mov
addr16
push
pop
lret
movsl
cmp
mov
out
out
data16
push
aad
cld
dec
push
ret
adc
ljmp
mov
inc
pop
leave
and
add
leave
repnz
xchg
inc
xor
xor
jne
jo
lds
out
or
ja
je
mov
fstl
xchg
scas
movsl
outsl
aaa
inc
fsubl
fiaddl
call
test
jbe
sbb
filds
xchg
stos
push
shl
pusha
adc
loop
mov
and
xlat
cmpsl
inc
jp
mov
je
gs
mov
shlb
mov
xlat
push
imul
push
jne
inc
fistps
xchg
push
loop
fsubrs
mov
mov
cli
popa
fisubrs
push
popf
test
pop
inc
add
orl
xchg
lahf
scas
aam
ljmp
cmp
mov
adc
hlt
out
xchg
es
pusha
sbb
or
into
ss
mov
mov
ja
fmuls
enter
imul
int3
fldt
mov
inc
mov
mov
je
xor
dec
xchg
mov
pushfw
sarl
hlt
mov
aad
sbb
fcoml
mov
push
push
testb
mov
out
insb
addr16
cs
mov
mov
mov
jmp
xchg
lret
pop
scas
lcall
cmp
cmp
aas
push
jp
aas
mov
add
sub
mov
jne
or
testb
aas
and
add
add
rorb
sub
shl
mov
cmp
les
stos
xbegin
imul
fs
sub
dec
xchg
push
mov
fildl
js
lahf
leave
jmp
pusha
sahf
ficoms
jp
insb
sbb
pushf
gs
hlt
arpl
ret
and
and
adc
insb
mov
push
dec
adc
sbb
fimull
test
aam
jmp
call
js
ss
je
out
xor
xor
shlb
pop
fdiv
mov
mov
mov
aas
cwtl
in
adc
jne
outsl
mov
fsubrl
jno
ds
ljmp
jmp
sbb
aam
inc
mov
popf
mov
jmp
cli
ljmp
jl
cmp
inc
and
ljmp
push
cmp
mov
xor
movsb
jne
int
pop
sarl
mov
xchg
orb
loopne
sti
jne
fadds
je
mov
push
mov
sbb
rcll
sub
adc
adc
lds
dec
sbb
mov
fmull
or
es
rorl
aaa
and
sub
jnp
adc
es
repz
add
sbb
inc
cmp
mov
mov
aad
pop
fucomi
leave
cmp
decl
mov
jmp
filds
enter
mov
fsubrs
data16
or
fidivrs
dec
mov
stos
imul
mov
push
pop
aam
sbb
and
xor
push
aam
fcmovbe
cmc
push
sbb
mov
das
repnz
pushf
mov
xor
clc
les
dec
mov
mov
insb
sarb
mov
sub
pop
mov
lods
ret
jmp
and
xlat
push
imul
pop
or
ret
cmp
cwtl
pop
mov
mov
repz
push
movl
mov
leave
loopne
jl
rclb
push
fs
jbe
lahf
push
outsl
xchg
jle
outsb
loopne
pop
or
inc
pusha
insl
xchg
arpl
cli
cmp
or
arpl
stos
jecxz
push
mov
mov
xor
ljmp
xchg
cwtl
or
lret
jp
xor
sysenter
repz
push
mov
sbb
movsl
pop
inc
inc
sub
push
xor
adc
sbb
jno
in
lock
push
stos
cmp
sarb
out
test
and
push
adc
sub
xor
and
mov
test
in
pop
lcall
dec
fisttps
mov
clc
mov
push
cmpsl
cmp
out
and
sub
sti
xor
stos
mov
inc
mov
icebp
je
pusha
push
cmpsb
xor
ja
cmc
cwtl
push
push
lahf
sahf
stos
or
sar
ljmp
nop
fcoms
lcall
call
dec
jp
and
lods
std
rclb
or
sbb
hlt
xchg
dec
add
pop
pop
mov
loopne
push
inc
test
insb
outsl
fs
inc
imul
pop
orb
dec
rol
push
cld
inc
mov
hlt
xlat
ret
repnz
in
mov
into
and
lea
mov
lock
jno
jno
mov
mov
inc
xor
das
mov
dec
mov
or
clc
xchg
inc
mov
packssdw
js
fadds
dec
fsubrl
cmpsl
arpl
mov
inc
scas
cmovnp
gs
out
ljmp
mov
faddl
mov
repz
cld
xor
scas
ret
push
jns
test
cwtl
cmp
and
push
jo
add
sub
clc
sbb
out
xchg
mov
imul
cli
loopne
fnstcw
dec
je
test
add
ljmp
xchg
out
outsb
leave
lahf
imul
pusha
dec
and
inc
adc
repz
pop
arpl
out
mov
sub
dec
pop
mov
rcll
mov
mov
or
fmull
insl
addb
dec
fwait
divl
mov
pop
cld
lds
pop
push
inc
test
jno
in
imul
test
push
mov
gs
or
add
or
divl
lret
mov
and
scas
stc
add
mov
pop
jl
xorl
nop
xor
leave
mov
xor
shr
imul
inc
out
jl
enter
cltd
push
pop
mov
or
rcl
xchg
idivl
leave
push
xchg
add
pop
test
dec
scas
negl
cli
ds
or
cmpsb
and
sub
rolb
cmp
or
xchg
fsubrs
jmp
mov
jl
in
out
push
dec
js
nop
push
add
out
js
mov
dec
popf
out
je
fbld
dec
into
mul
xchg
dec
pop
imul
mov
notl
bound
xchg
mov
or
rol
imul
cmp
inc
daa
lcall
je
fdivr
out
mov
ljmp
add
mov
pusha
mov
push
or
or
int
add
popa
int3
adc
and
sarb
pop
lods
sub
rorb
ljmp
lcall
cmp
inc
cld
jae
jmp
out
inc
cmp
dec
shr
mov
int
pop
in
lret
pop
je
mov
jle
arpl
test
aas
inc
pop
mov
push
ret
cmc
xlat
paddw
repz
dec
xchg
ficoms
xor
outsl
mov
clc
mov
pushf
loopne
out
inc
xchg
and
or
jl
icebp
mov
adc
stc
out
or
xchg
pop
fdivl
popf
mov
lods
arpl
pop
dec
out
mov
pop
sti
ja
jmp
push
mov
fsubrs
cmpsl
sbb
xchg
stos
dec
test
xor
stos
cltd
int
bound
mov
jns
xchg
fs
out
vpand
dec
ret
jno
adc
stc
push
xchg
pop
xchg
mov
hlt
mov
dec
push
pop
pop
fbstp
cwtl
or
adc
mov
add
das
lret
loopne
add
imul
bound
ljmp
add
imul
cmp
and
xchg
xor
cwtl
in
jno
adc
dec
sti
mov
jo
add
and
inc
mov
pop
mov
lahf
mov
mov
mov
push
jb
out
dec
lcall
mov
daa
nop
adc
insl
mov
ja
and
mov
mov
cmp
or
push
shlb
and
pop
in
adc
in
imul
pop
nop
dec
ret
sub
ret
jnp
mov
mov
dec
lds
cmpsl
lods
add
loopne
xchg
push
mov
iret
push
fs
pop
gs
sub
xor
sbb
xchg
or
push
sbb
in
jmp
cmpsb
pop
stos
repnz
in
rcll
stos
int
sti
fxch
adc
cli
mov
mov
into
dec
imul
test
xor
bt
rolb
or
xor
jbe
cmpsb
out
and
jno
push
mov
cmc
adc
jmp
inc
ljmp
es
cmp
mov
push
push
aad
dec
repnz
jns
lret
jo
mov
and
pop
dec
xchg
das
xor
jns
lret
mov
dec
add
pop
xchg
mov
scas
stos
sub
insl
mov
in
call
adc
cmp
shrb
jle
loope
out
jmp
hlt
repz
xor
mov
mov
lret
pop
xchg
bound
imul
xor
ss
es
scas
dec
lea
andl
push
loopne
push
mov
jmp
out
adc
inc
add
push
shll
xor
lea
clc
push
mov
pop
sbb
jl
xor
cwtl
icebp
testl
jecxz
sub
xor
push
pop
push
add
adc
ret
add
xor
and
sahf
push
pop
clc
push
aam
adc
aam
mov
pusha
cmp
cmp
and
mov
gs
fadds
stc
xchg
mov
cmpsb
jne
icebp
cwtl
inc
scas
xor
jle
cwtl
xor
aam
js
je
dec
jae
enterw
movsw
inc
mov
movsb
test
dec
mov
pop
test
loopne
add
popf
push
sbb
int
rcl
jnp
dec
cmp
inc
push
push
fldt
inc
mov
mov
fwait
cwtl
sub
in
sbb
loope
mov
fwait
ljmp
inc
dec
cs
movsb
cli
rorl
adc
ja
out
jae
jno
mov
mov
in
daa
lret
cwtl
pop
aam
fstpt
sbb
mov
lret
addr16
push
push
clc
fimuls
xchg
mov
loopne
sbb
inc
mov
aam
rcl
imul
xchg
push
push
pusha
mov
push
lcall
popa
or
sub
aam
inc
cmpsb
dec
lahf
insb
jae
jns
arpl
stos
test
int3
sub
lock
and
rcrb
dec
sub
jno
sub
and
xchg
mov
outsb
ret
mov
and
imul
mov
fnstenv
stos
repz
lret
aam
or
or
xchg
popf
or
jbe
adc
inc
lret
inc
push
rorb
loopne
pop
mov
ds
cld
jp
dec
add
mov
aam
lock
shrb
mov
test
add
xor
pop
pushf
cmpsb
jmp
pop
notl
xchg
dec
ret
mov
dec
adc
mov
jl
in
mov
pop
mov
cmp
call
mov
sbb
rclb
es
stc
cli
jno
popf
nop
es
imul
loopne
fidivrl
hlt
add
cmp
in
lock
imul
mov
lcall
outsl
jmp
test
out
aas
mov
cmp
clc
into
imul
leave
bound
clc
das
mov
adc
mov
repnz
aas
ror
pop
mov
and
xor
mov
ss
dec
push
dec
push
repnz
inc
mov
and
stos
repnz
addr16
cmovno
out
sbb
adc
xchg
ss
imul
push
fdivl
scas
sub
pop
insb
std
lock
fsubl
and
shll
out
ret
ficoml
add
lds
cld
sub
mov
lahf
mov
sub
mov
add
mov
int
mov
sbbl
and
orl
int3
mov
sbb
sarb
leave
test
xor
aaa
sahf
xchg
jnp
enter
mov
out
mov
cmc
scas
mov
mov
nop
neg
adc
adc
rcrb
sub
pop
xchg
fs
or
and
test
sbb
xor
popl
sbb
lea
fsub
add
in
mov
loopne
adc
leave
fadds
xchg
xor
dec
pop
call
inc
mov
jg
xchg
aas
lahf
mov
call
int
lcall
or
add
push
cmp
or
into
addr16
imul
fidivs
movsb
shlb
sbb
mov
out
push
lock
or
jecxz
and
mov
shrl
aas
xchg
testl
dec
and
dec
int
loop
push
and
ljmp
add
popf
nop
ror
outsb
cs
mov
inc
dec
mov
test
mov
out
loop
pop
adc
adc
mov
xchg
mull
sub
repz
and
sbb
sarb
mov
outsl
or
mov
xor
adc
push
aaa
int
rcr
js
jmp
or
inc
iret
or
out
out
daa
push
les
cwtl
addb
shlb
xchg
push
jns
aad
and
adc
xor
and
stos
sarl
inc
popf
and
es
je
jbe
push
inc
xchg
dec
sub
aaa
sub
dec
in
ss
cmpsl
pop
dec
inc
sbb
data16
bnd
sbb
push
jb
or
rcrl
push
mov
sbbl
mov
add
xchg
xchg
sbb
cwtl
mov
push
sub
rclb
lods
add
aaa
lret
rclb
jo
sbb
stos
xchg
mov
mov
cli
mov
sbb
stos
add
xchg
pusha
pop
in
lret
mov
nop
mov
jo
mov
fst
cmp
xchg
out
pop
pop
cmp
outsb
cmpb
scas
loop
insb
out
es
sbb
lret
les
lret
sbb
pop
aaa
add
inc
lock
movsl
dec
jmp
addr16
pop
arpl
pop
xor
sbb
xchg
test
sub
ljmp
inc
xor
mov
push
add
ss
pushf
xchg
insb
aas
outsb
pop
insb
ss
out
jmp
cmpsb
inc
and
cmp
mov
fbld
mov
inc
push
ss
outsl
add
fbstp
ljmp
aas
scas
sti
push
sarb
aam
lret
push
jp
adc
sahf
das
nop
xchg
les
xchg
push
sbb
dec
lret
test
pop
clc
xchg
push
xor
mov
mov
jne
jmp
push
mov
lds
adc
clc
js
das
mov
cli
jmp
loope
shlb
sar
cwtl
mov
cmp
gs
fbld
clc
or
shll
jmp
call
jo
mov
shl
xchg
mov
jmp
test
shlb
test
test
outsl
pop
call
add
mov
clc
mov
stos
mov
shlb
in
in
xchg
or
fadds
mov
mov
cmc
mov
out
sub
sbb
fildll
cmp
in
nop
push
aam
adc
mov
ss
push
sub
int
mov
nop
icebp
add
cli
ss
push
adc
adc
movsl
mov
idiv
movsl
adc
cwtl
cs
xchg
je
das
cmp
fistl
inc
into
xlat
out
imul
mov
xor
cmp
mov
dec
mov
fisttps
xlat
mov
jno
cld
dec
cmpsl
imul
push
aam
and
neg
dec
mov
adc
pushf
cld
popa
mov
in
aam
cmp
inc
push
mov
cwtl
push
jp
mov
fimull
dec
push
mov
push
jb
aam
fcoms
hlt
dec
dec
jecxz
pop
movl
nop
xor
movsb
pop
pop
lock
loop
adc
movsb
loope
pushf
repnz
sarb
out
lock
in
push
xorl
sbb
ja
in
sub
pop
std
lock
cmp
movsb
test
mov
cmpsb
jo
cmp
dec
inc
rcll
jno
pop
sub
xchg
test
imull
inc
fistpl
shrb
mov
gs
add
pop
fimull
and
xchg
add
dec
ljmp
mov
imul
cmpl
loop
sbb
out
fiadds
lcall
adc
sub
ret
lret
andb
stos
mov
lock
loopne
xlat
mov
jmp
gs
sbb
mov
dec
sbb
push
pop
ds
pop
pop
mov
mov
inc
mov
orl
sbb
and
mov
xchg
cmpl
dec
sbb
jp
mov
mov
mov
outsl
inc
and
cmp
xchg
loop
inc
gs
jge
daa
pop
stos
icebp
dec
fdivp
iret
cmp
jbe
clc
ja
shlb
out
cli
cli
fsubp
push
stc
aad
shr
sarb
mov
pop
mov
loope,pn
scas
add
test
rcl
loope
xor
pop
or
mov
in
jno
mov
mov
leave
push
pop
test
sbb
dec
inc
lods
cmp
and
movsl
and
xchg
adc
sub
aas
in
icebp
cmp
dec
push
and
xor
inc
or
pop
aam
mov
loope
lods
mov
sbbl
aad
jne
adc
leave
or
popf
push
mov
out
sub
daa
outsb
out
inc
cmp
sub
lahf
cmc
cwtl
ficoml
xor
xchg
mov
dec
mov
in
pop
ljmp
dec
inc
push
test
and
xchg
xlat
dec
jbe
jno
fucomip
call
jo
add
sub
fisttpl
xlat
nop
jbe
push
icebp
lret
bound
je
mov
inc
lahf
and
xchg
sti
icebp
nop
xchg
xor
imul
mov
loopne
repnz
adc
outsl
fcoms
cmpsl
pop
popa
bound
xchg
mov
xor
xchg
inc
lods
mov
ret
or
xchg
xor
out
xchg
lahf
dec
mov
fs
dec
cmp
ss
jns
andl
lcall
test
adc
xchg
push
rcrl
inc
dec
push
dec
or
iret
mov
xchg
cmp
add
aas
repz
notb
fmull
nop
add
xchg
pop
mov
testb
mov
adc
in
in
and
pop
inc
lcall
xchg
in
or
les
clc
pop
pop
loopne
dec
int3
mov
add
cmp
sar
mov
xchg
mov
jg
mov
gs
cmp
imul
ffree
sbb
mov
xchg
pop
flds
pop
imul
rorl
xor
hlt
call
mov
cwtl
fwait
add
or
mov
test
and
out
jno
dec
mov
sbb
dec
jno
mov
inc
popa
nop
cmpsb
xchg
cmpsl
mov
rorl
cwtl
outsl
add
sti
xor
mov
arpl
add
cmp
hlt
addr16
adc
out
iret
xlat
mov
pop
dec
stos
add
inc
insb
sbb
rcll
int3
dec
pop
pushf
and
xlat
repz
cmp
jge
das
xor
pop
xlat
sub
push
sub
out
scas
mov
popa
imul
xchg
dec
push
jmp
sti
fstpt
lcall
das
cmpsb
sahf
dec
imul
aad
mov
scas
xor
mov
bound
mov
mov
mov
loopne
add
rcrb
mov
or
pop
jl
fcmove
xchg
mov
sbb
icebp
stos
cmpsb
xchg
adcl
ret
or
inc
imul
xorb
sub
repnz
push
dec
mov
sbbb
sarl
lods
rep
jl
jge
cmp
push
sbbl
call
mov
popa
outsl
scas
cmp
sti
les
dec
aad
push
decb
mov
in
jo
cs
jb
dec
pop
mov
mov
dec
mov
das
and
mov
in
pusha
push
fistl
js
inc
mov
in
dec
push
sub
pop
dec
pop
xchg
dec
add
fidivrl
inc
pcmpgtb
dec
pop
mov
adc
inc
dec
dec
push
jp
inc
shl
pop
adc
fstl
pop
ret
pop
or
push
inc
jl
cwtl
mov
xor
decl
lods
call
hlt
lcall
lahf
dec
in
pop
pop
mov
inc
repz
pop
imul
xchg
and
dec
mov
lods
out
inc
iret
push
mov
inc
or
clc
mov
pop
dec
and
sub
aad
addb
std
adc
push
cwtl
insb
imul
xchg
mov
mov
cmp
movsl
repnz
cmp
lahf
jp
pop
dec
pop
push
and
in
pop
push
sub
ljmp
clc
sbbl
jne
in
inc
sub
xchg
xor
xlat
hlt
out
jp
xor
dec
xor
jbe
sbb
sbb
sar
mov
push
cmp
int3
sahf
xor
sub
push
and
add
xchg
mov
ljmp
sahf
sub
cwtl
jno
fldl
imul
js
iret
into
in
inc
rcl
add
addr16
sahf
fs
nop
cmp
call
add
cwtl
add
cmc
fcoms
mov
push
pop
mov
std
cli
popa
mov
iret
sti
mov
pop
dec
push
push
cwtl
imul
sbb
out
dec
xor
jmp
lods
sub
xchg
push
jge
jecxz
call
cmp
fstpt
xchg
add
or
inc
adcb
adc
cmp
add
cmp
push
in
cmp
test
mov
xchg
dec
jle
mov
out
dec
enter
aam
dec
mulb
mov
ret
jmp
in
xor
cmp
aad
cmc
loopne
and
pop
into
mov
mov
pop
out
add
aas
sarb
jns
xchg
jmp
psrlw
jbe
cltd
out
daa
jp
add
call
outsl
sbb
push
lcall
ret
jne
imul
int
add
sub
push
imul
shrl
insb
inc
xor
sub
mov
jp
xchg
inc
mov
mov
add
sbb
notb
add
mov
cmp
cmp
pop
in
mov
cwtl
mov
inc
jl
xchg
mov
ds
test
pop
sub
insb
cmpsb
mov
gs
xchg
jns
push
sub
xchg
and
push
nop
in
cmpsl
cmp
subb
cmp
xchg
mov
dec
inc
inc
ret
lds
pusha
mov
xchg
pop
int
push
xor
imul
pop
cmp
lods
sub
and
call
mov
insb
inc
adc
scas
out
cmp
mov
nop
icebp
sbb
test
jns
into
push
jno
nop
sbbl
add
movsb
mov
lahf
aas
sub
cli
jo
in
sub
mov
addr16
clc
xchg
push
out
aam
sub
outsb
push
adc
insb
pop
pop
dec
lret
pushf
fsubrs
add
adc
push
nop
pushf
enter
mov
ja
movsb
rclb
mov
jno
into
pop
repz
in
pop
xor
ljmp
int3
lret
mov
imul
jmp
xor
out
jnp
imul
lcall
mov
into
out
addr16
lock
lcall
test
ret
mov
sbb
rorl
fsubrs
jmp
jnp
jo
add
jo
mov
es
lret
pop
stc
jg
jo
cmp
je
lret
jno
push
mov
imul
xchg
xchg
xorl
fcompl
add
cmpsl
divl
or
jge
sub
push
jge
push
fidivrl
call
add
aaa
pop
and
dec
xchg
xchg
call
cmp
cltd
push
inc
or
ja
repnz
mov
shll
jns
je
data16
into
ja
mov
cmp
jbe
sub
jecxz
dec
mov
nop
fwait
pop
in
and
imul
aad
jnp
lahf
pushf
sbb
cli
jmp
mov
out
sub
mov
mov
fs
dec
shll
pusha
xor
in
sub
dec
sbb
aas
leave
mov
enter
scas
jl
mov
pop
inc
stos
push
mov
inc
cmp
imul
cmp
daa
mov
mov
mov
mov
and
lcall
scas
xchg
push
fs
mov
sti
js
pop
jg
cmp
insb
lock
repz
cld
jbe
arpl
std
push
pop
icebp
ds
adc
ljmp
add
hlt
lods
xchg
add
jb
add
pop
and
xchg
pop
hlt
lcall
pusha
insb
lods
xchg
cld
repnz
fcomps
ds
or
outsl
in
jae
sbbl
shll
mov
inc
jae
imul
adc
fcom
repnz
scas
pop
daa
mov
repnz
pushf
js
fwait
and
nop
and
push
cld
clc
sub
mov
loopne
cli
fidivs
dec
inc
inc
mov
ja
inc
aad
notl
imul
mov
mov
cmp
je
divl
shll
mov
mov
mov
imul
cli
or
js
addr16
mov
aad
mov
xchg
insl
nop
pop
arpl
fdivr
in
mov
pop
pushf
outsl
or
cmpsl
push
fadds
lahf
jae
add
dec
ljmp
jnp
sbb
mulb
xchg
rcrb
lret
xor
dec
negb
int
popl
aas
cmpsl
adc
jmp
lahf
xchg
frstor
or
das
xchg
loope
sar
sub
fs
stos
xchg
dec
inc
lret
jmp
fwait
mov
or
repnz
pusha
mov
adc
xchg
mov
lods
mov
mov
mov
jae
pop
mov
movsl
test
mov
test
repnz
xchg
gs
sbb
cmp
arpl
das
fisttpl
ljmp
cli
xor
aam
lret
and
ret
sub
jecxz
pop
add
mov
ljmp
mov
xor
push
add
and
mov
out
cmp
arpl
xchg
cmp
push
dec
test
ret
loope
loopne
inc
adc
add
mov
pushf
jo
mov
out
mov
fwait
jne
pusha
lds
imul
ror
ljmp
push
fmul
mov
xchg
movb
call
xor
test
push
decb
cld
ljmp
xchg
mov
shrb
push
push
cmp
rcrl
outsl
rcl
cs
sub
rcll
arpl
push
fsubrs
or
push
lods
movsb
mov
cwtl
mov
push
xchg
sbb
cli
clc
xor
fiadds
ljmp
xor
jo
xor
lret
pusha
jae
aam
mov
fucomi
jecxz
jmp
lcall
clc
out
mov
pop
or
fldcw
jecxz
adc
adc
dec
imul
icebp
fisttps
mov
pop
cmc
ret
test
repz
push
sbb
or
out
xor
int
lcall
or
out
sub
cwtl
in
fcom
add
mov
imul
dec
in
and
push
jo
fsubr
mov
pop
xchg
push
rclb
mov
test
inc
in
pcmpeqb
arpl
imul
dec
mov
out
fwait
hlt
je
mov
sbb
sbb
pop
dec
cmp
mov
mov
call
pop
mov
adc
test
lret
adc
push
les
pusha
sbb
imul
fcoms
xor
sbb
fbstp
inc
cmpsb
xlat
imul
cwtl
call
add
mov
imul
insb
cwtl
jecxz
xchg
jmp
lock
lret
cmp
sbbb
cmp
and
insb
imul
arpl
movsl
dec
cmpsb
icebp
mov
in
js
xlat
scas
xor
test
call
mov
repnz
leave
add
addr16
pop
xor
int
add
pushf
repnz
lcall
test
mov
xchg
jp
into
fstl
add
xchg
js
push
mov
fmull
insb
ss
ret
jmp
push
xor
scas
std
push
imul
mov
out
and
xchg
int3
test
mov
repnz
lret
xchg
clc
cli
xor
sub
adc
adc
and
cmp
xchg
in
imul
or
fcmovne
repz
lea
cmp
jbe
stc
negl
pop
mov
mov
cmpsl
js
call
shrb
mov
fbstp
mov
fchs
push
xor
popf
cwtl
imul
add
dec
hlt
repnz
jp
xchg
lock
xor
pop
jecxz
or
push
and
out
and
adc
add
sub
rcll
call
ds
ret
lods
cmpsb
adc
cmp
mov
insl
jb
sti
xor
test
sub
xchg
shlb
adcb
mov
jae
sar
mov
and
int3
mov
pop
mov
imul
scas
mov
aas
nop
rcll
jp
dec
clc
imul
mov
rclb
movl
gs
sti
push
xor
test
adc
inc
repz
ljmp
js
cwtl
jge
aas
push
loop
fwait
xor
sub
mov
popf
push
cli
fidivs
xor
mov
imul
lret
inc
lret
push
pop
xchg
lret
mov
iret
testl
lea
ljmp
test
fwait
xchg
das
add
jle
cwtl
push
jne
mov
ds
ljmp
dec
push
insl
inc
loopne
iret
imull
dec
rcrb
js
addr16
push
leave
push
gs
mov
addr16
shll
pop
in
fstpt
push
pop
or
fcoml
test
cmp
lock
adc
mov
pop
mov
jb
mov
dec
rolb
das
inc
push
sbb
movsl
into
lcall
popf
mov
add
cwtl
ret
loopne
and
push
add
push
rcll
jno
imull
ret
aaa
xlat
inc
out
push
int3
stos
dec
sbb
outsl
adc
mov
out
mov
inc
in
jl
test
fimuls
jecxz
xchg
lret
nop
adc
call
arpl
imul
push
arpl
enter
xchg
and
jp
pop
and
jge
mov
outsl
mov
ja
fwait
add
inc
lock
push
cli
and
inc
test
xor
ljmp
fmull
je
daa
xchg
in
mov
out
inc
int3
mov
imul
rclb
xor
jmp
cltd
sbb
scas
nop
sub
jno
mov
repz
pop
dec
xchg
jne
xchg
test
cs
jle
mov
imul
xor
pop
adc
mov
inc
or
js
jecxz
jle
shlb
aad
pop
sub
clc
sarb
cmp
shr
clc
ret
mov
adc
pop
lcall
xlat
xlat
shl
mov
sub
loop
pushfw
call
imul
push
adc
pop
dec
and
mov
mov
and
cmpsb
fisttps
add
lds
xchg
mov
and
sbb
sbb
orb
mov
scas
push
pushf
idivl
ret
es
movsl
jge
pop
cmp
jbe
mov
out
xchg
fs
je
sbb
xorb
nop
fcom
popa
shlb
cli
jecxz
out
add
iret
cmpsl
mov
push
push
sub
shr
rcll
loopne
fdiv
and
outsb
stos
mov
xchg
imul
add
out
idivl
xchg
push
fucomip
cmp
sbb
adc
out
dec
xchg
jo
cld
cs
jmp
lods
in
call
cmc
hlt
loopne
cmp
pop
je
call
xchg
mov
ret
notl
gs
jmp
cmp
orb
push
imul
adc
mov
std
insb
imul
pop
jmp
rcl
cli
jbe,pt
aad
std
in
and
ss
frstor
fildll
fcmove
out
cmp
sbb
movsb
cmovl
push
sbb
test
dec
mov
aas
test
sbb
ja
push
xor
push
aad
mov
push
and
mov
jb
mov
inc
dec
jns
adc
push
es
jno
pop
pop
cmpsl
xor
mov
pushw
shl
out
enter
pop
xchg
mov
imul
icebp
inc
or
jle
add
je
inc
ret
clc
inc
mov
bound
or
loopne
xchg
test
push
ljmp
sbb
adc
fistpl
in
enter
stc
out
nop
add
jmp
int3
sub
or
push
pop
fnstsw
les
repz
int
and
ljmp
xchg
push
clc
out
add
cld
jnp
mov
int3
pushl
popl
mov
sub
cli
xor
insb
mov
insb
push
imul
mov
imul
shlb
fistl
push
and
sbb
cld
fimull
or
jbe
out
push
pushf
cwtl
dec
cmpsb
or
imul
andb
test
loopne
popa
pusha
pop
lcall
pop
in
movsb
imul
in
loopnew
ljmp
cld
test
into
add
add
mov
rcr
add
mov
gs
shll
xchg
out
sbb
std
xchg
sbb
mov
sbb
cmp
imul
inc
dec
or
addr16
sbb
xchg
clc
dec
pop
mov
lds
mov
mov
mov
lods
ret
scas
out
hlt
shrb
add
dec
xchg
jle
clc
mov
mov
ja
add
hlt
add
ds
mov
push
test
jne
pop
adc
xchg
dec
push
inc
fbstp
jno
xchg
mov
clc
cmpsl
xchg
mov
lds
aad
in
mov
loopne
mov
jne
dec
sub
ret
gs
xor
imul
popf
push
dec
fmuls
aas
sub
push
mov
pusha
jecxz
mov
mov
xchg
xlat
inc
stc
imul
mov
push
fistpl
imul
xlat
xchg
rolb
cwtl
shld
pop
je
xor
test
test
inc
xchg
jbe
inc
and
push
fdivs
aad
sbb
jo
sahf
adc
sti
cld
add
sbb
xchg
arpl
sub
pop
cmp
pop
cmp
mov
mov
lret
dec
fcompl
dec
cmc
stc
inc
les
aaa
inc
jl
rcl
mov
lock
test
fdivs
shlb
leave
test
imul
fbstp
sarb
rcrl
in
movsb
xchg
cli
push
inc
repz
in
test
xchg
cmp
in
mov
mov
lds
and
dec
xor
mov
shr
mov
scas
xor
xchg
out
fisubl
iret
cltd
push
lods
cld
mov
insb
pop
cmp
add
pop
mov
inc
pushf
cli
dec
cs
mov
xor
fimull
inc
cmpsb
aam
popf
jmp
fsubr
pop
aam
les
out
jl
cmp
xchg
scas
cmp
inc
dec
imul
aas
out
test
mov
movsb
xor
lret
scas
or
lahf
jecxz
shl
mov
mov
push
inc
fwait
pop
pop
mov
mov
aas
adc
sub
repz
imul
mov
xchg
xor
pusha
add
push
sub
mov
psubusw
pop
push
mov
pop
andl
lock
addr16
fisubl
xchg
mov
mov
sub
mulb
lea
mov
fdivrs
leave
or
sbb
adc
push
cmp
mov
pop
lret
sbb
repnz
cmp
sarl
adc
dec
inc
mov
outsl
sbb
outsl
cld
jbe
ret
dec
pushw
test
cli
aas
imul
sub
call
int3
and
outsl
test
es
mov
adc
test
push
andl
push
fstpt
sar
daa
jl
negb
adc
or
fmul
pop
fiaddl
movsl
int
dec
pop
lods
push
and
xor
in
inc
popa
test
pop
int3
mov
jnp
sbb
xchg
jle
nop
aam
repnz
sbb
lock
xor
add
pop
shrb
shlb
inc
in
and
addb
lods
stos
inc
fs
aas
out
xchg
aas
sub
cmp
cmp
push
mov
aas
je
pop
pop
jg
lock
notl
or
loopne
aam
mov
fsubrl
push
pop
inc
in
ss
out
xchg
jne
mov
inc
aaa
insb
fldl
imul
xchg
fcmovb
sub
cwtl
fiadds
xlat
inc
js
lea
sbb
mov
aam
int
add
call
xor
adc
sub
mov
fwait
add
repnz
cmp
dec
ja
mov
in
jmp
pop
stos
mov
mov
lcall
jo
jae
out
in
mov
push
cmp
iret
cmp
jns
das
lods
pop
pop
pusha
lock
dec
in
out
inc
push
xchg
adcl
dec
shll
icebp
cmp
pop
xchg
inc
jne
mov
repnz
and
adc
adc
pop
add
sbb
pusha
aam
ja
inc
ret
mov
js
ficomps
mov
shr
movsb
add
ror
hlt
xchg
sub
cmp
fcomps
mov
movsl
stc
fsubl
fmuls
jno
hlt
hlt
je
data16
cmp
and
push
dec
das
sbb
in
dec
lods
xchg
jno
mov
mov
cld
or
sahf
fstpt
inc
ja
jge
mov
js
cwtl
or
leave
je
jns
js
mov
xorl
adc
mov
aaa
out
mov
insl
outsl
aam
cli
fdivrs
xchg
sbb
or
icebp
push
dec
scas
data16
mov
mov
sbb
mov
fnsave
adc
cmp
xor
in
filds
leave
aaa
jmp
nop
xchg
out
loop
lea
cwtl
xor
int3
roll
cmc
cmp
mov
fucom
scas
mov
arpl
movsl
call
lods
or
aas
adc
push
repnz
pop
mov
pop
pop
js
es
xor
int3
pop
pop
inc
inc
loopne
xor
jo
pushf
int3
push
mov
out
add
pushf
or
fidivl
fsubl
lods
hlt
int
aas
insl
mov
xchg
leave
lock
jmp
mov
inc
cld
or
mov
fistps
shl
ljmp
stc
adc
xchg
add
test
fs
mov
imul
out
dec
adc
xchg
in
imul
dec
adc
dec
in
or
dec
in
sbb
cli
and
mov
ja
adc
bound
icebp
xchg
cmpsb
cwtl
scas
sub
out
int
fstp
sbbb
out
xchg
stos
xchg
pop
das
adc
inc
shrb
push
outsb
aas
mulb
in
pop
adc
jmp
xchg
fdivp
and
sbb
xor
pop
in
sbb
test
add
test
sbb
pop
movsl
insb
pop
cld
sub
inc
cli
mov
nop
testb
mov
cmpsl
cltd
and
addr16
jno
mov
sarl
negl
scas
mov
fucomi
sahf
addr16
adc
repnz
pop
sbb
popl
mov
mov
cli
addr16
xlat
mov
das
dec
jmp
ss
push
jo
jp
xlat
and
cmp
ss
fcomps
cwtl
out
out
test
mov
cmp
mov
mov
sbb
stos
sti
add
mov
js
mov
int
icebp
mov
dec
repnz
pop
mov
mov
mov
fmul
mov
fsubs
inc
shlb
mov
mov
ljmp
cwtl
sub
jecxz
mov
js
in
test
cmp
ja
out
xor
and
int3
mov
push
daa
mov
jbe
adc
ljmp
xchg
popa
xchg
testl
xor
insb
out
es
scas
jle
mov
add
xor
xlat
addb
lahf
cmc
negb
icebp
push
loopne
idivb
mov
adc
dec
gs
hlt
dec
pop
fsubrl
nop
into
jle
inc
test
dec
aam
int3
sub
aad
cltd
shll
dec
test
aaa
and
mov
rcrb
jo
mov
sub
xlat
mov
inc
cmc
mov
jb
mov
and
inc
out
hlt
jno
sbb
out
lcall
or
pop
cmp
cltd
push
hlt
dec
repnz
push
cmp
arpl
cmp
or
sahf
sub
lcall
lds
leave
sbb
and
out
sub
push
imul
loope
xchg
mov
cmp
push
ret
cmp
mov
mov
jmp
sbb
loopne
jne
mov
movsl
lock
rcl
mov
push
pop
fs
call
ja
mov
push
or
push
gs
fisubrs
jns
cmp
cmp
adc
mov
cmpsl
in
sub
stos
mov
loope
cld
aaa
clc
dec
subl
mov
xor
fs
mov
pop
test
call
rcll
jae,pt
xchg
pushf
cmc
int3
xchg
jp
pop
and
test
lds
movsb
imul
push
mov
mov
push
dec
jmp
fsubl
xchg
scas
lret
lods
shll
add
mov
movsl
cwtl
clc
imul
cmp
out
jle
sub
dec
sbb
cmp
in
repz
sar
push
pop
sti
cmp
jae
lcall
xchg
movsl
xchg
dec
inc
gs
cmp
mov
inc
xlat
ja
xor
hlt
mov
jno
mov
xlat
cwtl
rclb
test
sbb
push
xor
add
je
jg
xchg
movsb
or
sub
mov
mov
aad
outsb
out
xlat
push
jne
imul
loop
dec
or
mov
stos
out
dec
outsb
fmull
inc
test
pushf
sub
test
call
dec
addr16
xor
push
xchg
test
out
test
into
les
mov
addr16
imul
je
test
pop
movsl
decb
call
jmp
in
mov
int
hlt
shl
and
pop
xchg
jge
aad
inc
mov
aaa
lods
or
lcall
xchg
in
jp
cmp
xchg
mov
mov
xchg
stc
icebp
lods
ret
ret
cmp
xor
cmp
mov
and
sub
pop
mov
lock
test
and
movsl
cmp
outsl
lock
leave
mov
mov
ret
faddp
mov
int3
pushf
xchg
cmp
jns
adc
out
sub
scas
rcll
incl
std
js
mov
test
xchg
les
inc
sbb
pop
aad
scas
xorl
xor
cwtl
dec
pop
stc
mov
mov
cmp
rolb
xchg
mov
mov
in
push
lahf
dec
cmp
push
and
cli
cmpl
mov
push
rcr
in
fdivrp
outsb
mov
dec
push
xchg
adc
cwtl
test
int3
xchg
test
jb
iret
movl
pop
test
jecxz,pn
mov
iret
test
out
shll
pop
or
scas
js
imul
out
in
iret
js
xlat
iret
fmuls
and
xor
add
xchg
mov
mov
push
adc
out
dec
imul
shl
fidivl
pop
pop
sbb
das
sub
insb
push
push
rcrl
popf
cltd
repnz
cmp
adc
mov
lods
dec
fs
push
mov
pop
out
push
ds
jae
test
xor
jb
test
shll
inc
test
or
psubsw
sub
jo
repnz
xchg
adc
pushf
std
popa
imul
mov
pop
aas
daa
mov
shrl
imul
inc
cmpsb
xlat
xlat
push
sub
mov
xchg
into
mov
inc
inc
scas
cli
cmp
adc
inc
lcall
sub
mov
sbb
lret
inc
xchg
pushf
sub
test
lahf
lcall
pop
inc
in
lret
test
jl
sub
mov
imul
fisttpl
in
dec
aam
in
adc
mov
fsts
movsb
cmp
fisttpll
pop
add
mov
ficomps
jae
fdivs
fsubr
sub
jns
aam
js
call
out
clc
sbb
lret
or
dec
sub
stos
jo
lahf
ret
adc
push
dec
fisttpl
lods
mov
fmulp
cwtl
js
jno
push
shlb
xor
in
adc
pusha
cmpsb
mov
aaa
push
rorl
mov
pop
push
test
mov
icebp
push
mov
int3
pop
cmp
xchg
xchg
push
xorb
rorb
in
movsb
mov
out
ljmp
cwtl
mov
clc
pop
leave
cmp
mov
or
fstpt
xchg
and
ljmp
iret
test
mov
pop
test
xor
xlat
xchg
imul
xchg
test
xor
in
xchg
jmp
in
int3
or
out
fbstp
ljmp
dec
jge
mov
aam
inc
mov
sub
dec
test
push
sar
stos
stos
out
xchg
sub
cmp
out
mov
jmp
repnz
leave
push
cmp
xor
push
subb
fidivrs
xor
sti
ljmp
xor
pusha
repnz
mov
cmp
sub
call
out
fcom
leave
sbb
xor
shlb
je
mov
or
inc
lods
mov
xchg
gs
add
mov
adc
sub
add
mov
or
aaa
xchg
imul
out
clc
cmp
lret
cwtl
inc
test
ja
std
xchg
sarb
mov
adc
inc
xchg
in
repnz
cmc
dec
pop
cld
mov
fisubs
outsl
xor
cmp
enter
adc
and
lock
lods
shr
dec
fcoms
sbb
in
lods
lahf
xor
xor
repnz
pop
out
push
aaa
imul
jno
fsubl
pop
xlat
fisttpl
lds
stc
pop
dec
rcrl
mov
jl
leave
jno
mov
test
cmp
jae
dec
enter
pmaddwd
mov
dec
pushf
rcrl
inc
push
aam
neg
out
icebp
outsb
inc
rcl
jge
cmp
sub
ss
or
mov
pop
mov
dec
mov
lds
dec
adc
add
pop
movsl
out
je
fisubl
push
rcrb
dec
movsb
pushf
cmp
out
push
cwtl
add
adc
outsl
mov
scas
outsl
aam
ffree
or
in
clc
dec
movsb
sub
hlt
pushf
cmc
nop
jge
in
mov
lret
aam
mov
fbld
sbb
sub
loop
sarl
mov
mov
int3
push
imul
insl
sbb
jmp
mov
inc
clc
fldl
pusha
ljmp
fs
in
add
cmc
cli
mov
adc
hlt
sub
pop
pop
dec
in
out
sub
loopne
scas
pop
je
pop
inc
cltd
push
scas
mov
inc
mov
sub
xchg
stc
cmp
setns
aad
pop
notb
sub
mov
push
mov
dec
in
aaa
sub
cli
mov
out
fistl
out
leave
test
jle
sbb
pop
add
out
repz
bound
int
cli
or
test
ljmp
pop
lods
es
arpl
outsl
cmp
scas
dec
rcr
rcrb
xchg
js
xchg
out
mov
or
dec
jo
jl
push
mov
hlt
hlt
add
clc
and
push
js
mov
int3
pop
dec
int3
xor
imul
add
xor
std
dec
adc
dec
cmp
push
jp
call
hlt
aaa
and
inc
movsl
push
popa
dec
and
push
sbb
imul
rclb
dec
xchg
cmp
push
inc
sbb
xor
fidivrl
and
js
push
pop
pop
mov
sahf
sbb
test
sti
outsl
js
xchg
mov
jae
inc
out
ljmp
es
bound
mov
mov
dec
call
inc
fadd
stos
mov
mov
pop
mov
test
fldl
lret
sub
std
xchg
fbld
orb
mov
repnz
xchg
xchg
adc
add
imul
repnz
int
fwait
imul
add
xchg
rclb
inc
imul
data16
sbb
imul
aas
lods
pop
inc
dec
mov
rcrb
loope
je
xchg
jno
xchg
sub
adc
pop
fcmovu
js
xchg
clc
xchg
iret
int
inc
xchg
inc
leave
mov
add
imul
icebp
subb
jmp
rorl
mov
addr16
jmp
jno
dec
and
inc
cmp
push
and
leave
jle
dec
int3
pop
cld
sub
roll
test
inc
mov
adc
push
pop
lcall
jmp
xor
bound
repnz
je
xor
imul
repz
pop
pop
loopne
les
es
jg
pop
test
in
mov
mov
test
jbe
aas
or
cmpl
sbb
cwtl
repnz
push
fisubrl
xchg
rolb
xor
inc
fcmovne
xor
clc
stos
test
lea
mov
mov
cmp
jbe
test
test
push
ficoml
mov
sbb
imul
out
test
push
shrb
std
clc
adc
pop
aas
test
sti
imul
fisubs
outsl
aam
xor
or
cwtl
fwait
imul
sbb
sti
shlb
outsl
xor
loopne
dec
ret
ljmp
repz
cmp
add
pop
mov
adc
dec
push
in
mov
fwait
cld
imul
mov
inc
cld
filds
popf
push
xchg
pusha
cwtl
pushf
sub
dec
and
leave
filds
lahf
fisttpl
inc
sub
rclb
adc
movsb
mov
xchg
jge
adc
das
xchg
mov
jne
insb
mov
js
dec
cwtl
lcall
loope
jl
mov
fcomps
addr16
mov
imul
int
rolb
dec
adc
sbb
loop
test
cltd
sbb
cmc
arpl
mov
stos
mov
movsb
mov
or
arpl
push
or
pop
hlt
test
add
jb
cmp
pop
pop
jo
out
add
xor
add
mov
xor
imul
bswap
mov
mov
notb
ret
push
lret
or
sahf
mov
jmp
cmp
dec
mov
pop
sbb
shrb
out
inc
notb
push
hlt
or
xlat
jmp
mov
xlat
push
cld
test
xor
shl
aam
mov
xchg
out
ja
mov
sub
push
fdivl
inc
mov
clc
pop
ret
out
js
push
lock
imul
jno
cmp
push
xchg
mov
pop
ja
lret
xor
sarb
pop
dec
insb
int3
push
or
imul
or
lcall
mov
test
test
out
mov
js
mov
sub
jp
ja
push
popl
jg
aas
push
jl
insb
or
cli
mov
add
outsl
sbb
jge
pop
cwtl
pop
pusha
jg
pushw
sbb
je
dec
pop
mov
clc
inc
icebp
adcl
push
fwait
mov
rcrb
dec
in
cwtl
loopne
dec
adc
jo
xor
insb
pusha
sub
faddl
outsl
sub
pop
pop
test
jno
nop
sar
push
lock
sbb
dec
pop
dec
dec
fucomip
dec
pushf
sub
cmpsl
push
push
mov
imul
mov
mov
lcall
sbb
jp
cli
cmpb
das
inc
ljmp
mov
imul
mov
mov
fidivl
aad
daa
push
into
and
in
jl
pop
cltd
xchg
pusha
mov
fiaddl
mov
sbb
mov
js
shl
sbb
jne
ret
cmp
jecxz
mov
mov
call
xchg
mov
hlt
repz
jno
stc
sar
out
fcmovnbe
je
and
js
ljmp
mov
cmpsl
fs
cmc
ss
outsl
jns
lock
scas
sti
xchg
loopne
ja
inc
aad
call
fiadds
jnp
loope
movsb
repnz
jb
xlat
jp
push
add
xor
imul
sahf
cmpsb
inc
dec
pop
jg
dec
int3
cmp
sbb
push
mov
hlt
pop
pop
inc
pop
ljmp
test
sub
lock
in
or
xor
adc
xor
lock
pusha
sbb
pushf
gs
cwtl
pop
push
rclb
xor
ja
notl
mov
or
aam
clc
dec
loopne
out
sub
gs
add
add
cmpsb
mov
iret
in
jae
push
repnz
test
lahf
inc
out
shr
gs
jo
sahf
in
fadds
jmp
xchg
inc
pop
inc
cs
out
in
sbb
les
sti
fnsave
and
leave
in
loope
sub
and
cmpsb
fcoms
sub
add
lret
mov
pop
rcrb
xor
fdivp
mov
mov
xchg
adc
aam
push
imul
inc
lock
inc
push
xchg
xchg
cmpsb
and
je
mov
dec
imul
adc
adc
jne
repz
imul
adc
pop
xchg
sbb
or
and
mov
dec
jge
dec
daa
xor
jle
das
pop
push
loop
daa
mov
mov
cmc
inc
mov
in
and
push
xchg
jae
mov
push
daa
test
push
popf
pop
aas
aam
jbe
call
and
test
in
xrelease
nop
loope
sub
rcr
ja
negb
das
inc
sarb
frstor
rorb
test
sub
aad
sub
dec
jno
fs
out
loopne
sbb
lock
pushf
out
push
lock
push
jge
mov
pop
mov
adc
push
and
orl
aaa
adc
inc
stos
xchg
push
pop
das
push
inc
das
stos
cmp
sbb
cmp
adcl
push
cmp
mov
imul
mov
dec
movsb
ret
mov
push
pop
in
cmp
std
push
or
pop
das
inc
inc
das
jo
into
mov
mov
ror
test
lea
push
pop
lea
xor
xor
and
or
dec
adc
out
fcomps
add
adc
fidivl
iret
push
adc
mov
outsl
cwtl
jl
fisubrs
and
or
mov
add
mov
mul
xchg
dec
cmpb
movsb
rep
not
gs
dec
cmc
imul
bound
push
add
add
xlat
lock
repnz
xchg
sub
add
movsb
sbb
stos
int3
mov
je
jmp
iret
aad
inc
jle
int3
repnz
dec
push
imul
mov
notl
es
call
cmp
pop
arpl
inc
fistl
ss
sbb
int
mov
dec
mov
jbe
fwait
clc
cmp
cmp
clc
out
xchg
scas
jne
pushf
cmpsb
pop
mov
sbb
movsl
or
jecxz
loope
lcall
inc
xchg
jbe
fstpl
icebp
add
aaa
je
xchg
in
fwait
cwtl
xor
cmp
xlat
pop
data16
mov
fsubp
iret
dec
and
lret
stos
lahf
fs
mov
xchg
enter
xchg
mov
lret
pop
mov
push
inc
call
jl
ret
and
xchg
cmp
jle
xchg
mov
lock
jp
mov
xlat
jne
test
fs
mov
ror
data16
in
xchg
gs
push
dec
imul
add
nop
aas
lret
push
xchg
inc
or
sbb
adcb
lock
dec
call
fcmovbe
cmp
mov
movsl
mov
hlt
fdivs
mov
mov
iret
jecxz
nop
sub
sbb
or
jb
fists
loopne
addr16
in
adc
mov
stc
fwait
fsts
jl
xchg
xlat
sub
pop
and
gs
in
xor
pop
push
aaa
adc
sbb
xchg
pop
cwtl
jg
and
movsl
imul
imul
inc
sti
mov
clc
cmp
scas
add
cli
xlat
cltd
pop
dec
mov
aam
add
out
dec
mov
insb
inc
add
mov
mov
es
dec
cs
dec
sub
out
mov
pop
jle
loop
lock
outsb
ror
xor
lret
lods
jno
dec
pushf
pop
push
pop
sbb
mov
sub
adc
mov
scas
jnp
sub
sbb
jl
or
int
dec
adc
js
cmpsl
pop
lahf
xor
repnz
mov
pop
les
lret
inc
cmc
lahf
aaa
jne
inc
or
ret
out
aad
hlt
mov
mov
mov
mov
push
out
stos
and
iret
in
lock
push
inc
out
xchg
in
rcrb
sub
cs
mov
in
loopne
imul
bound
roll
pop
shlb
pushf
sub
imul
int
shr
aas
cmpsl
int
je
inc
xor
dec
call
or
xchg
xchg
fcmovnu
push
movsb
sbb
adc
lcall
mov
data16
fcmovnu
lock
jmp
add
dec
xor
dec
stc
je
lods
test
outsl
fistpl
fcomp
dec
fildll
push
mov
dec
push
adc
fiadds
pop
mov
lahf
jmp
inc
xor
out
fcmovb
stos
pop
dec
out
fdiv
jns
out
nop
mov
inc
call
js
rcll
push
mov
adc
inc
xchg
out
call
iret
inc
mul
int3
or
ss
push
xchg
fimull
and
dec
data16
push
add
adc
xor
lahf
push
loopne
xor
je
call
sbb
push
rcr
xchg
cmp
push
sbb
mov
pop
leave
add
fisttps
je
xchg
test
stos
fsubp
push
push
mov
xchg
dec
sub
scas
in
popa
scas
cmp
xchg
pop
hlt
jne
std
std
mov
ljmp
iret
shrb
fsubrs
xor
xor
stc
mov
adc
fsubs
mov
ret
push
ss
call
repnz
insb
rorb
sbb
pop
sahf
sub
fs
sbb
sub
fwait
jmp
mov
mov
subl
cli
mov
and
jae
mov
leave
adc
shrl
bound
setno
movsb
mov
imul
icebp
add
xchg
push
mov
idivb
cld
loope
out
pop
scas
cmpl
inc
xor
int
out
repz
in
leave
dec
sbb
mov
shlb
cwtl
xor
and
fincstp
pop
pushf
pop
loopne
sbb
cld
mov
pop
rolb
in
repz
mov
ficompl
push
in
adc
call
mov
jp
daa
mov
push
mov
icebp
movsb
nop
out
lock
lret
clc
cli
out
push
iret
imul
fcomp
fwait
sbb
xorl
pop
and
or
xchg
jo
pop
jle
adc
aam
xlat
fdivrs
rclb
imul
or
pop
lods
inc
loope
loopne
cli
das
dec
push
jl
rcll
test
imulb
mov
push
lcall
push
mov
mov
ss
sbb
ror
adc
ror
je
xchg
and
shrl
repz
cli
and
out
nop
test
loopne
fcompl
xor
xchg
out
xlat
mov
jne
or
repnz
add
push
popf
mov
cmc
xlat
out
ret
clc
insb
dec
xlat
mov
loopne
pop
mov
insl
add
and
scas
fisubl
sbb
dec
jge
enter
les
push
shrb
lds
mov
in
jno
xchg
mov
jne
push
or
movb
cwtl
out
cmp
sti
clc
stos
out
pop
sbb
orb
fs
pushf
repnz
cmp
js
or
dec
mov
aas
ja
xor
fidivrs
lock
pop
loop
loop
lret
test
adc
push
sub
and
adc
negl
pop
mov
dec
subb
pop
cmc
cmpsl
sti
cmc
fimuls
test
fwait
mov
xchg
adc
sarb
imul
in
cmc
clc
out
and
addr16
push
loope
rcrl
adc
dec
aaa
mov
sub
mov
jecxz
mov
push
mov
jl
repnz
adc
loopne
and
and
inc
jb
clc
sbb
aas
dec
mov
and
inc
inc
cli
enter
lea
test
xor
push
ljmp
aaa
popa
das
mov
mov
cmp
mov
cmp
cmp
stos
xor
inc
subl
push
aam
xor
add
sar
mov
mov
add
mov
mov
mov
iret
roll
mov
mov
aad
test
into
dec
inc
lret
mov
pop
dec
movsl
shrb
fistps
jle
sub
test
dec
or
lods
inc
adc
and
fsts
mov
test
call
sub
mov
pop
fs
rclb
icebp
sbb
pop
add
imul
aaa
pop
mov
jle
ljmp
into
or
xchg
es
jo
or
clc
imul
or
sbb
jle
sbb
sub
cmp
xchg
pop
shl
shrl
add
xlat
arpl
ljmp
jmp
jno
pop
dec
addr16
inc
inc
lods
ror
notb
adc
iret
add
mov
mov
aad
jno
int
rcll
nop
adc
shufps
jg
xchg
arpl
sub
xchg
mov
cli
fwait
pop
mov
in
pop
pop
in
jmp
jne
sub
repz
pop
push
outsb
push
lods
adc
cmp
or
inc
push
icebp
adc
inc
fcomps
pop
call
push
ret
mov
gs
aam
add
aad
inc
arpl
lods
mov
int3
mov
pop
loope
addr16
adc
ja
bound
mov
fistpll
insb
lods
stc
movl
add
jns
in
or
dec
gs
sbb
dec
push
pushf
jp
test
inc
sub
fadd
mov
sarb
imul
mov
lret
jb
dec
mov
sarb
sbb
xchg
xor
clc
test
clc
lahf
push
xchg
lods
in
dec
or
popa
mov
sahf
adcb
out
sub
mov
inc
mov
imull
dec
mul
lock
mov
pop
repnz
call
inc
repz
pop
jmp
mov
push
mov
movsb
mul
adc
dec
add
mov
sbb
and
inc
pop
fadd
add
clc
test
shlb
shlb
bnd
jno
dec
in
pop
imul
imul
lret
int3
fwait
lret
dec
xor
jns
ss
sbb
in
and
pop
hlt
add
xchg
test
xchg
xchg
testl
mov
insw
push
sub
lahf
mov
xchg
pop
out
add
aam
xchg
mov
sub
imul
int3
fmuls
pop
mov
jecxz
jb
outsl
mov
bound
pop
call
xorl
pop
add
pop
fldcw
adc
inc
in
sub
ja
push
aas
imul
fdiv
and
sbb
xchg
pop
addb
iret
ror
jo
jecxz
das
pop
aas
sti
jno
fs
jge
xchg
xchg
aaa
push
icebp
mov
sarl
cmpsl
mov
xchg
jb
mov
sub
pop
testb
push
jo
out
adc
sbb
push
xchg
test
pop
lret
pusha
xchg
rorl
adc
xor
clc
lret
rorb
or
fsts
push
in
loopne
enter
jmp
or
lock
fsubrl
xor
iret
push
imul
mov
loope
mov
clc
imul
push
pop
ljmp
pop
insb
jno
lods
sbb
mov
imul
mov
push
imul
xchg
in
mov
jb
cmpsl
pop
pop
lods
out
mov
xor
cmpsl
icebp
cld
shrb
nop
ljmp
push
jo
mov
lret
movl
pop
dec
inc
sbb
add
into
and
and
sbb
xor
inc
push
cmpsl
out
aaa
xchg
hlt
loop
xchg
mov
push
adc
pop
inc
imul
out
repnz
xchg
mov
push
cmp
add
out
inc
dec
fs
mov
nop
dec
sarl
and
pop
mov
push
pop
iret
cli
into
or
insl
nop
sti
dec
push
cmp
mov
je
mov
pop
mov
lea
dec
imul
xchg
jge
imul
gs
xor
cmp
outsb
push
mov
nop
push
cmp
push
cmp
out
push
or
imul
sub
shr
pop
jmp
int3
add
xadd
xchg
add
outsb
xchg
and
aaa
lock
cmpsl
push
push
mov
push
pop
movsb
mov
sub
out
jmp
cmp
call
js
nop
sbb
lods
testl
jnp
push
lret
adc
jle
mov
jno
sbb
mov
int3
xor
subl
outsl
mov
xchg
test
pushl
insb
fidivl
jp
cs
shl
cli
sbb
aam
imul
gs
jne
lds
in
out
inc
lcall
xorps
ficoml
fwait
pusha
push
movsb
lret
push
pop
loope
lret
das
movsb
outsl
cwtl
jl
dec
cmpsb
xlat
sti
mov
faddl
dec
inc
or
push
adc
sbb
push
stos
aad
ljmp
inc
fcomps
lret
imul
adcb
cld
je
out
fs
pop
out
xchg
mov
stos
mov
xchg
insl
jg
lcall
xchg
loopne
or
jae
mov
pop
mov
pop
int3
loop
sarb
mov
mov
jle
aad
fdivs
insb
setno
pop
cwtl
imul
pcmpgtb
popf
aam
std
pop
pusha
dec
pushf
sbb
mov
cmp
add
ljmp
cmc
sbb
data16
fidivl
sub
dec
hlt
fcmovnbe
sti
fsub
sahf
sarb
andl
or
inc
nop
dec
mov
out
xchg
aam
dec
xchg
push
es
dec
push
mov
xchg
fwait
mul
stos
roll
sbb
cmp
daa
lods
xchg
es
inc
shl
popf
fisttpl
pop
add
out
xlat
inc
ljmp
sbb
or
xlat
sarb
push
mov
dec
fisubrl
xlat
pop
jge
mov
ret
in
orl
out
ljmp
dec
jl
mov
pusha
lret
ret
and
cwtl
mov
add
or
push
dec
cwtl
cmp
push
nop
arpl
imul
jne
mov
push
insl
je
sbb
rcll
stos
jmp
int
mov
ja
inc
icebp
ss
imul
adc
stc
jns
push
outsl
scas
rol
xor
shlb
push
cmp
loope
cmovne
scas
pop
ljmp
mov
iret
xor
mov
nop
mov
xor
inc
sub
int3
push
mov
mov
imul
out
or
push
or
iret
mov
imul
loop
out
gs
dec
lret
push
or
push
rclb
out
push
scas
imul
call
push
je
xor
ja
mov
into
call
mov
sbb
mov
fs
adc
into
decb
xchg
cli
push
jbe
inc
and
mov
cmpsl
adc
push
dec
cmpsb
and
cld
and
jg
pop
xchg
sub
push
xchg
rcrb
xor
je
pusha
leave
and
imul
fnstsw
lock
and
mov
icebp
cmpsl
shrb
add
jmp
cld
clc
push
aam
shrb
cmp
mov
cld
fisubrl
hlt
aam
cmc
jge
mov
lods
inc
ljmp
pop
movsb
push
pushf
adc
out
dec
fsub
inc
movsl
cltd
repz
add
mov
movl
xchg
out
shll
and
push
xlat
movsb
sbb
pop
push
mov
lret
movsb
xor
shll
jp
mov
in
inc
mov
xrelease
xor
xor
xor
fcomps
sub
lea
pop
hlt
aad
sub
jecxz
ffreep
inc
add
sub
xchg
pop
cmp
jp
mov
push
mov
repz
mov
les
xorl
scas
stos
push
scas
insb
inc
in
loope
pop
mov
and
hlt
bound
push
pushf
loopne
rcr
int3
pop
mov
inc
lret
fs
lea
jle
sbb
clc
push
clc
mov
scas
and
pop
pop
rorb
lods
xchg
xchg
outsl
mov
lcall
movsl
out
jl
popf
lods
cmc
sbb
xchg
call
mov
imull
sbb
sub
adc
and
shlb
scas
test
int
movsl
add
add
mov
scas
and
test
test
sbb
mov
insb
pop
movsb
pop
sarb
out
and
js
into
sub
shl
and
idivl
pop
ret
out
lret
fs
adc
imul
mov
pop
stos
fdivr
mov
sbb
sub
inc
divl
dec
into
in
int3
dec
aad
movsb
inc
inc
xchg
loop
test
jno
dec
je
lock
fwait
addr16
imul
pop
iret
int
mov
lret
je
mov
andb
inc
in
lods
jmp
dec
sti
cmp
test
scas
test
mov
push
dec
push
push
ja
xchg
mov
pop
fsubrs
push
add
nop
adc
cmp
loop
imul
mov
push
mov
jl
call
mov
and
dec
test
inc
jle
rol
push
ljmp
cmp
mov
and
jno
dec
and
lds
xchg
fimull
mov
or
lret
rcl
dec
mov
insb
je
fists
test
nop
clc
gs
rcll
sbb
pop
mov
inc
dec
leave
mov
repz
icebp
mov
mov
int3
cmp
movsb
push
xor
mov
pop
loopne
and
into
pop
push
push
inc
je
dec
pop
jp
mov
dec
or
inc
xor
daa
stos
mov
test
pushf
jecxz
cwtl
cmp
sub
xchg
push
add
fldl
idiv
int
jno
mov
insl
sub
aad
jmp
test
mov
or
jbe
ret
xor
arpl
xchg
scas
pop
xchg
cmp
pusha
jns
je
mov
rclb
push
data16
lds
leave
adc
ljmp
das
addr16
sub
rcrl
mov
sub
xchg
dec
jl
pop
xchg
testb
mov
mov
repz
dec
lcall
rorl
test
dec
fld
bound
divb
lcall
sub
clc
rcll
mov
pop
call
ljmp
movd
and
or
rorl
nop
pop
lods
sahf
cwtl
outsb
xchg
sub
push
repnz
jmp
and
into
push
xchg
mov
push
mov
mov
add
xor
dec
lret
popa
mov
pop
mov
loopne
pop
mov
inc
mov
aam
imul
fcomip
stos
jbe
int
mov
and
push
leave
cli
inc
push
sbbl
call
mov
test
dec
pop
and
xor
es
mov
mov
add
imul
in
gs
adc
jecxz
call
inc
sbb
repz
mov
xor
push
pop
dec
pop
adc
mov
dec
mov
repz
xor
mov
call
cwtl
test
jge
dec
ljmp
xor
sbb
jecxz
int3
mov
je
xchg
shlb
rcrb
nop
inc
out
sbb
rcrl
xlat
push
lret
gs
lock
mov
repnz
xchg
inc
loope
sti
aas
neg
xlat
nop
xor
adc
shll
mov
mov
sahf
sub
sarb
repz
jno
rcrb
cmpsb
push
and
dec
stos
out
call
mov
clc
push
into
mov
rclb
cli
cmp
cmpsl
je
aam
mov
shr
inc
ds
sti
dec
xor
dec
in
or
enter
leave
jmp
pop
add
mov
ljmp
pop
addb
push
sbb
in
loope
test
in
int
rcll
movsl
sub
mov
xor
jl
jno
sub
nop
imul
aam
int
pop
cmpsb
pop
mov
adc
lds
imul
push
fcoms
test
imul
orb
test
adc
lcall
aas
xor
mov
imul
in
bnd
test
lcall
stc
iret
test
stos
add
mov
mov
fcomps
pop
inc
in
stos
cmp
in
loopne
jne
inc
mov
add
fwait
sar
mov
es
outsb
out
inc
leave
xchg
call
mov
je
cmp
mov
fdiv
in
test
sbb
int3
ficompl
shll
int
out
sub
stc
cwtl
ficoms
js
das
add
shrb
outsl
in
dec
xchg
call
stos
cld
ds
mov
outsb
loopne
pop
lret
jne
mov
inc
fs
mov
mov
or
div
lods
jmp
bound
ljmp
leave
cltd
inc
add
push
xchg
push
idivl
je
stos
lods
outsb
mov
cmp
pop
push
mov
leave
dec
jmp
mov
ljmp
fisttpl
scas
pushf
jge
and
je
ret
lea
inc
lock
stos
stos
lock
mov
imul
cmpsb
sbb
mov
ss
subb
pop
lcall
or
cli
add
int
lret
cmp
subl
cli
xor
lret
sbb
lahf
iret
and
shlb
mov
out
push
int
repnz
lcall
push
sarb
outsl
mov
lret
pop
je
testb
and
pop
shr
dec
push
imull
jbe
xorl
pop
sub
jle
cmp
sub
jns
jo
je
popl
roll
repz
jl
lds
adc
aad
loopne
popf
adc
ret
mov
nop
push
sbb
loopne
roll
leave
mov
dec
test
push
repnz
out
xchg
pop
lret
xlat
xchg
and
les
sti
inc
xchg
ljmp
jmp
sahf
lcall
cmc
int
mov
clc
daa
mov
fisubs
movsb
shl
add
push
adc
mov
sbb
mov
lods
int3
pop
ljmp
out
pop
testl
lcall
mov
pop
outsl
int
pop
lds
imul
int3
jl
xor
loopne
lret
gs
pop
call
fsubp
sub
mov
cmc
aam
rolb
jb
lret
gs
xor
inc
sarb
pop
out
or
cltd
ret
xor
cli
sub
je
aaa
or
xlat
pop
sub
and
mov
call
cmpsb
mov
lods
sbb
inc
inc
jne
or
mov
cwtl
dec
std
add
add
mov
and
cli
shl
dec
push
and
imul
sbb
scas
sbb
insb
cmp
sti
out
or
fsubl
xor
loop
adc
dec
js
cmp
fistps
sbb
mov
mov
hlt
and
inc
popf
cs
rcrl
stos
in
mov
xchg
sti
ja
cs
lods
jmp
int3
aaa
or
or
ljmp
js
sub
mov
fisttps
orb
imul
add
js
xchg
lahf
dec
stc
and
jl
adc
cli
dec
rorb
jae
stos
pop
clc
gs
mov
popf
repnz
xor
cmp
ss
imul
cmpsl
lds
mov
cmc
pop
out
fwait
bound
mov
out
and
mov
mov
mov
fildll
adc
jmp
dec
pop
jo
fs
daa
jbe
adc
pushf
pop
cmp
aad
rcll
test
pop
mov
sbb
adc
pop
xchg
call
xchg
ss
push
ds
xor
dec
repnz
mov
aam
or
leave
adc
dec
mov
add
pop
adc
and
in
sub
inc
xchg
js
mov
jbe
adc
fcmovne
adc
jmp
mov
cli
sbb
insl
pop
jp
sbb
loop
jbe
jbe
lahf
lea
call
call
es
fs
cs
ljmp
lahf
cmp
nop
sub
stc
movsb
outsl
jno
adc
cmc
cmp
fwait
aam
addr16
cmc
nop
lahf
push
ds
dec
pop
xor
int3
and
jl
pop
call
push
lahf
lret
add
call
lret
nop
sub
pop
in
outsl
mov
rcr
xlat
jbe
cwtl
fiaddl
es
mov
lret
inc
data16
mov
adc
push
movl
mov
divl
loopne
xchg
je
pop
insl
enter
aam
push
pop
ja
add
aad
sbb
fldenv
outsb
pop
fwait
stos
leave
out
mov
jne
dec
andl
push
jl
add
cld
xor
in
jl
sti
in
fidivrs
xchg
mov
sub
into
xor
inc
je
loopne
jecxz
sahf
inc
push
lcall
jns
fadd
xlat
jge
inc
test
jo
shr
lds
pop
lret
fsubs
add
test
fldt
daa
cmpsl
push
shr
pop
jno
jmp
xchg
and
into
xlat
cmp
lds
xchg
imul
lods
push
jo
int
xlat
loope
repz
xchg
jno
jmp
ljmp
fs
mov
lcall
shll
scas
daa
cmp
jle
inc
mov
add
stos
call
icebp
clc
mov
lds
sbb
es
inc
icebp
mov
adc
mov
mov
sbbb
adc
add
cmp
hlt
fimuls
lods
dec
aaa
xchg
push
fdivrs
data16
and
les
xor
sbb
clc
cwtl
inc
nop
pushf
xchg
inc
int
fwait
ret
push
xchg
aam
xchg
les
cmpsb
add
xchg
mov
pause
aam
xor
xor
ds
inc
sub
xor
test
sub
addb
sbb
and
sahf
dec
je
rorb
adc
or
or
idiv
aam
ret
push
jbe
sar
cmc
sbb
lahf
enter
sbb
lahf
add
xlat
dec
and
jnp
xchg
inc
aam
mov
fcoml
aam
push
mov
pop
imul
pop
popa
cmp
push
int
or
or
sub
and
adc
mov
aas
lock
ss
jecxz
call
push
clc
mov
add
xchg
dec
cmp
pop
pop
mov
test
stos
xlat
jne
push
mov
mov
in
bound
ljmp
in
stos
xchg
cwtl
adc
mov
out
push
mov
es
out
pop
xchg
sbb
and
fisubrl
pop
int3
out
xchg
jl
scas
add
outsb
test
mov
sbb
mov
aad
cmp
mov
fildll
adc
dec
jno
push
lods
jbe
out
ljmp
xor
fidivrl
jge
push
mov
outsl
dec
mov
mov
xchg
clc
cld
ss
incl
stc
cmp
pop
leave
in
cltd
test
cmpsl
clc
je
pop
mov
and
imul
aam
out
imul
jg
movsl
sbb
outsb
and
pop
fucomi
jo
pushfw
mov
out
rclb
clc
xor
ljmp
dec
sub
shl
xor
mov
jbe
mov
loop
mov
sarb
das
cmpsb
daa
jae
sbb
insl
inc
loopne
fsubs
or
mov
daa
cmp
adc
mov
pop
rcl
adc
jg
shll
fcom
mov
cmc
fldl
jno
push
fistps
std
mov
loop
dec
idiv
sbbb
je
push
xchg
ret
loopne
mov
sbb
add
jmp
sbb
adc
xor
mov
test
icebp
rcl
lahf
repz
or
scas
bound
adc
ljmp
nop
movsl
fsubrp
push
rol
shlb
dec
mov
cltd
push
inc
int
fdiv
push
mov
xor
xor
adc
lock
in
push
fstl
iret
inc
cwtl
cwtl
in
cs
test
xor
aas
loopne
lods
inc
mov
lock
jle
iret
movsb
repz
test
lock
mov
imul
pop
hlt
push
call
push
clc
sbb
cmp
ljmp
dec
stos
imul
xor
aaa
pop
sub
jne
pop
sub
pop
lock
jmp
push
sar
cltd
or
pop
sbb
inc
jno
sar
pop
xchg
xchg
inc
xlat
inc
push
repnz
sbb
stc
bound
xchg
pop
sub
sub
add
out
gs
jmp
mov
das
sbb
imul
or
add
ljmp
pop
pushf
cmp
out
jmp
xchg
test
test
jno
pop
ss
jl
xorl
movsb
mov
dec
orl
push
cld
xor
fistl
xchg
sbb
mov
xor
clc
mov
insb
mov
nop
inc
gs
dec
xor
pop
pop
jp
clc
movsb
add
cmpsb
or
ja
cmp
in
adc
lea
sbb
mov
mov
and
fcmovne
mov
loopne
pop
in
aas
clc
in
dec
push
int
cli
mov
jo
sub
ror
scas
aas
pop
aaa
jne
outsb
cmp
movsb
loopne
aaa
fisubrl
sub
sbb
iret
iret
mov
xchg
and
stos
mov
add
mov
iret
or
into
jo
mov
cmp
insb
xchg
adc
pop
cmp
push
push
mov
lcall
and
imul
aad
dec
sarl
xchg
mov
cmp
jl
pop
sbb
mov
je
pop
imul
insl
testb
or
add
sbb
or
sarl
mov
cmpb
mov
lea
fwait
pop
out
rcr
aad
cmpsl
mov
repnz
aas
or
addl
stc
lds
jne
inc
out
lea
mov
shll
gs
mov
jge
mov
dec
push
loop
xchg
mov
mov
mov
repz
rcl
adc
adcb
daa
lret
test
scas
mov
xchg
xor
xchg
mov
rclb
cmp
cmpsl
lret
nop
jns
xchg
movsb
mov
inc
or
jb
popf
orl
pop
or
movsb
xchg
jae
stc
pop
push
lods
jge
adc
mov
xor
arpl
pop
lods
inc
out
in
out
loopne
jge
mov
and
nop
mov
mov
xor
xor
cli
sub
lock
lds
cmp
loopne
xor
add
rcrb
insl
push
lahf
cmpsl
xchg
xor
int3
push
cs
pop
insb
add
sub
xor
xchg
or
mov
mov
pop
or
mov
cmp
and
xor
mov
pushf
sbb
jne
sbb
pop
cli
sub
je
mov
adc
xor
jne
inc
data16
lret
sar
jmp
xchg
push
pop
test
add
js
cmp
fsubl
xchg
adc
popf
sub
addb
mov
jne
jg
gs
or
xchg
add
fs
cmc
iret
sbbl
imul
sbb
insb
cli
mov
push
mov
pop
loope
mov
add
fsubrl
jb
add
fsubrs
mov
pop
sub
mov
shlb
push
lahf
faddl
cld
lcall
repz
push
push
pop
call
or
imul
xor
iret
out
scas
test
call
lds
inc
pop
mov
pop
pop
adc
jb
fmuls
in
inc
pushf
pop
adc
outsl
mov
lods
ds
fmuls
popa
jno
fdivl
outsb
or
lods
shr
or
clc
mov
fimull
aad
sub
mov
xchg
addr16
out
das
int3
inc
pop
mov
xchg
test
jns
pop
push
aam
mov
mov
and
insl
mov
pushf
sbb
pop
je
in
sub
test
xchg
inc
idivb
cmp
inc
jl
jle
dec
push
orl
nop
adcl
mov
cmc
push
add
mov
sub
out
js
out
lds
xchg
lahf
mov
lea
mov
lods
dec
inc
lds
mov
pop
xchg
in
cmc
daa
rclb
mov
sub
cmp
mov
or
lods
adc
das
push
les
mov
repnz
pusha
jmp
bound
subb
aam
pop
test
clc
mull
nop
inc
fs
je
xchg
lods
insb
dec
cmp
movups
nop
sahf
popl
out
jecxz
jno
sub
lock
and
sbb
adc
cmp
jns
test
stos
imul
mov
mov
and
stos
orb
pusha
loope
xchg
je
sbb
movsb
pop
jo
push
adc
lret
imul
mov
xlat
call
push
test
scas
sub
xchg
loopnew
cmp
aaa
clc
in
mov
xorw
add
lret
push
dec
aam
ljmp
sbb
out
jl
test
shl
mov
lods
dec
lock
stos
adc
loopne
push
in
cli
cmp
lock
push
fldcw
mov
dec
lods
add
mov
in
pop
aam
gs
fdivrs
ds
xor
hlt
cmpsl
imul
and
cmpb
rcrl
fistpl
fildll
js
mov
mov
pop
mov
xlat
push
mov
mov
or
xchg
sbb
leave
dec
sbb
sub
sbb
add
inc
pop
outsl
in
loop
inc
xor
cmp
or
adcb
aam
test
jns
mov
add
cmp
rcll
aas
orl
clc
fisttpll
pop
fsubs
push
mov
push
repnz
fnstsw
adc
and
xchg
and
addr16
pop
imul
aam
mov
push
push
fisubl
xchg
mov
imul
sub
lds
out
mov
sarl
int
pop
mov
test
fmull
movb
inc
aam
adc
or
push
pop
add
mov
cmp
clc
fsqrt
addr16
repz
pop
pop
js
inc
ja
mov
cmc
adc
lcall
sbb
in
aaa
push
testb
fidivl
add
lea
cmpsl
mov
ljmp
lret
lea
insb
push
push
cmpsl
das
cmpsb
push
lods
mov
jae
pushf
fcomip
and
imul
out
test
add
push
in
mov
clc
jmp
sbb
sbb
lret
pop
out
outsl
rclb
push
scas
dec
sbb
jae
ret
jae
pushf
jl
jb
stc
jge
jne
mov
lock
clc
mov
dec
sbb
jno
jbe
fldenv
aam
dec
sub
mov
cmc
sti
pusha
aaa
aas
call
repz
mov
shlb
fs
int
mov
rol
inc
mov
outsl
out
cmp
dec
adc
lcall
shlb
sahf
cld
repnz
stos
fcomps
rorl
movsl
jl
push
push
xor
fmulp
rol
ret
adc
lret
jns
scas
push
mov
and
mov
scas
gs
xchg
mov
and
cmc
pop
outsl
dec
add
jno
scas
pop
ljmp
jmp
clc
sahf
lret
stc
inc
sbb
or
adcl
lods
inc
push
hlt
xor
push
and
iret
sti
add
xchg
push
test
xchg
inc
jle
aas
or
mov
push
or
push
imul
inc
decb
sbb
mov
test
hlt
cwtl
shlb
dec
lret
aas
inc
sar
cmp
ret
dec
add
shll
sub
sti
or
repnz
xchg
rcr
clc
add
mov
lret
xor
dec
mov
js
cmpsb
xchg
dec
dec
js
popf
out
or
mov
push
pop
lret
bnd
lds
inc
or
mov
jp
aad
mov
cmpsb
jb
jmp
leave
add
test
xor
pop
pop
mov
ljmp
pop
mov
mov
aam
dec
imul
iret
test
xor
js
and
test
aas
test
sahf
fistps
mov
xor
gs
cwtl
lock
add
out
dec
movsl
aaa
lahf
rolb
pop
test
mov
xchg
outsl
xchg
insb
cltd
scas
es
mov
jmp
xlat
xchg
push
insl
repz
and
leave
pop
sub
cmp
mov
pop
mov
push
sub
xchg
xor
hlt
mov
cmpsl
jae
mov
push
fsub
popf
pop
add
jo
fnstenv
call
jns
decl
adc
pushl
movl
aam
scas
mov
gs
add
pop
cltd
in
dec
mov
xchg
add
imul
jo
xor
mov
mov
xor
loope
call
cmpsb
daa
sbbb
mov
inc
inc
test
lock
movsb
in
ror
xchg
cwtl
xchg
add
aaa
sbb
mov
dec
lea
mov
aad
mov
sbb
movsl
inc
test
xchg
mov
add
cmp
sbb
cmpl
pop
sub
call
sub
dec
fdiv
movsl
pop
and
push
cmp
hlt
sti
push
fsub
aam
lahf
mov
std
loopne
lcall
add
rcl
and
cs
xchg
sbb
jo
mov
ret
mov
sbb
xchg
in
add
dec
fcmovnbe
icebp
clc
mov
mov
test
mov
inc
les
jecxz
xor
add
xor
xlat
test
outsl
pusha
cmp
pop
mov
shl
and
xchg
inc
or
push
cmp
mov
mov
or
sub
clc
sarl
sbb
lret
xor
pop
cld
aas
fdivl
adcl
je
inc
aam
in
and
ljmp
aas
loopne
dec
jno
jb
cmc
mov
xchg
pop
add
imul
xchg
mov
aas
inc
xor
push
pusha
mov
dec
adc
fwait
adc
jno
div
lods
out
mov
jge
cmp
adc
adc
sbb
dec
pushf
sarl
cld
jge
int
outsl
mov
mov
jnp
add
movsb
shl
ss
mov
sbbl
adc
fistpl
repnz
xor
dec
cld
push
ds
in
in
daa
scas
hlt
and
mov
inc
pusha
mov
xorl
js
mov
xchg
movsl
sahf
dec
imul
jb
mov
gs
push
rcr
pusha
cmpsl
add
test
loope
dec
subb
hlt
add
pop
out
hlt
jecxz
push
cmp
shlb
mov
rcrb
mov
int3
mov
mov
les
dec
test
shr
outsb
idivb
lret
push
aam
pop
divl
js
sahf
jl
sub
jle
jbe
inc
imul
in
stc
or
xchg
dec
jae
test
movsb
imul
add
mov
pushf
movsb
mov
jne
clc
imul
rorb
pop
jg
repnz
dec
jno
push
icebp
test
gs
mov
or
popf
pop
xacquire
pop
mov
mov
in
jae
into
stos
mov
in
cmp
add
adc
jmp
adc
sbb
mov
xchg
cmpsb
lods
aad
in
jne
aam
int3
imul
shlb
int
xchg
or
popa
sbb
in
leave
cmc
pop
cmp
pop
sub
xchg
pop
addr16
repz
popf
jge
add
pop
cli
out
pop
xorl
mov
mov
out
xchg
push
sbb
hlt
shrb
mov
ja
cltd
push
in
push
jmp
addb
movsb
pop
lea
rorb
addl
call
mov
in
push
jl
cs
or
bound
jecxz
loop
repnz
pop
xchg
dec
mov
sbb
inc
jae
mov
mov
out
addl
xchg
nop
icebp
mov
cltd
push
mov
add
pop
cmpsl
enter
addr16
pop
xlat
xor
gs
lock
test
outsl
push
mov
gs
sbb
and
jle
ds
push
addr16
cmp
hlt
xchg
jecxz
sbb
xchg
in
mov
lcall
out
sub
pop
lret
adc
pop
sbb
stc
test
testl
movsb
cmpl
lods
push
lahf
repz
movsb
std
or
lods
pop
outsl
rorb
sbb
shll
addr16
mov
jg
imul
fmuls
pop
sbb
mov
cmp
inc
jo
movsb
jge
fsubl
outsl
push
in
xchg
dec
push
mov
adc
ret
imul
mov
inc
scas
dec
dec
mov
movsb
pop
fisttps
lret
and
xchg
int
imul
adc
or
bnd
sub
int3
xor
cltd
adc
aam
inc
adc
adc
or
and
addr16
in
add
lock
bound
aad
push
xchg
mov
jno
out
shl
fcomps
ds
outsb
lret
icebp
cmp
mov
sbb
sub
lea
lods
imul
and
bound
add
xchg
aad
cli
cmp
sub
lods
add
in
insb
loope
leave
add
and
in
imull
push
add
jno
push
jbe
icebp
es
adc
addl
sbb
int
aam
mov
push
outsl
dec
sub
mov
loop
rcr
repnz
fdivl
ja
xchg
int
push
sarl
lock
out
movsl
cmp
ljmp
inc
ja
popf
cmp
sti
ror
cli
cwtl
mov
xchg
fcompl
dec
in
stos
mov
inc
and
cltd
jb
xor
enter
ja
sbb
xchg
adc
mov
push
push
add
ffree
sbb
push
ljmp
and
and
call
fucomp
fsubrs
push
and
mov
fcoms
rcll
addr16
lods
jge
cmp
jmp
jno
test
and
or
loopne
mov
test
int
cmp
lahf
pop
int3
fsubrl
and
inc
js
jne
call
pop
popa
dec
sbb
repnz
fwait
iret
bound
adc
sub
mov
mov
fwait
es
xchg
mov
sub
mov
sbb
dec
mov
sbb
stos
or
inc
cs
aas
inc
jbe
pop
jae
mov
xor
repnz
pop
andl
fwait
xlat
xchg
rcl
addr16
fcomps
lahf
dec
test
sbb
xorl
lahf
xchg
addr16
mov
mov
push
jl
mov
adc
andl
mov
repnz
or
iret
sti
sbb
jbe
stos
push
aad
mov
fcom
pusha
pop
out
sub
daa
mov
clc
fsubrs
insb
pop
jl
push
outsl
jns
out
rcll
push
and
int3
pop
loop
nop
sub
dec
notb
pop
test
insl
mov
jno
pop
jmp
out
ljmp
xchg
mov
pop
fistpl
jbe
adcl
adc
cli
je
cmp
mov
jae
movsl
cmp
das
add
arpl
mov
fdivrs
gs
xor
xchg
pop
xchg
lret
xchg
cmp
jno
daa
inc
es
cmpsb
pop
sbb
aad
dec
mov
jmp
lahf
sub
and
fwait
in
das
dec
aas
mov
rcl
lods
and
bound
jo
sub
ljmp
fadds
ljmp
and
fdivr
add
in
dec
jno
out
push
popa
pop
add
outsl
imul
mov
cltd
dec
mov
or
cmc
out
push
mov
dec
jle
dec
push
jnp
ljmp
flds
addr16
fs
pop
mov
mov
fldt
loop
movsb
mov
ljmp
fdivrp
pop
pop
lock
mov
ds
and
fsts
xchg
inc
mov
mov
jns
xchg
xchg
fmulp
xlat
adc
mov
insb
and
push
dec
shll
test
fisubrl
out
and
xor
insb
xchg
in
push
out
push
in
dec
movsb
dec
fneni(8087
mov
in
mov
in
add
xlat
dec
jnp
cs
nop
push
cmp
fucomip
mov
je
cmp
cmpl
fdivrl
int3
popa
sti
xchg
roll
xorb
jecxz
pop
mov
mov
rorb
xor
ja
roll
add
push
ljmp
mov
adc
orl
push
cs
rorb
stos
setae
pop
fdivs
mov
lcall
jmp
pop
and
push
sbb
sub
icebp
dec
or
pop
lds
jp
lret
lret
loope
test
orb
shlb
mov
xchg
leave
inc
ret
rcrb
shl
in
sub
rolb
sub
faddp
jecxz
in
sub
push
push
xchg
cli
mov
popa
lret
add
cmp
cmp
orb
ffreep
arpl
mov
call
test
movl
or
test
or
push
and
mov
push
repz
test
test
jmp
inc
or
gs
or
jne
jge
pop
fs
jb
mov
gs
in
lock
add
iret
insl
jo
cli
bound
aaa
or
ja
jp
lcall
pop
ret
mov
fs
adc
orl
inc
sub
int3
cmpsl
fdivr
test
xlat
push
pushf
iret
aad
mov
loopne
push
push
shl
ja
imul
into
mov
sti
inc
imul
lods
addr16
push
imul
out
inc
dec
push
xchg
insb
pop
adc
push
in
ljmp
cmpl
mov
lock
mov
repz
ja
call
or
ss
call
popa
call
xchg
ss
dec
test
fcomp
repz
push
repz
adc
lds
sub
cmp
shlb
jl
out
clc
adc
in
lcall
out
mov
push
pushf
xlat
inc
es
push
dec
mul
dec
lret
adcl
mov
push
mov
push
into
in
ljmp
xor
scas
dec
movsb
jmp
cmp
call
in
mov
adc
in
dec
xor
xlat
jl
ljmp
sub
sub
call
fsubrl
mov
test
in
inc
out
cmpsb
fisttpll
rorl
adc
inc
and
stos
sub
xlat
sahf
sub
mov
cmpsl
add
into
call
sbb
popf
mov
inc
iret
sbb
dec
add
out
ja
dec
pop
imul
cld
pop
faddl
leave
jg
std
pop
das
adc
dec
adc
push
dec
cld
arpl
cwtl
mov
dec
arpl
iret
push
daa
iret
push
in
inc
fiaddl
lock
lds
sbb
mov
in
das
push
repz
lret
sbb
dec
call
imull
push
lret
addr16
rorb
mov
dec
mov
mov
cwtl
sub
sub
lret
lods
out
sub
or
xchg
cmp
or
or
dec
scas
es
push
int3
mov
mov
test
test
jl
mov
into
pop
sbb
inc
cmpsl
lea
int
and
test
sti
enter
fisttps
pmaxsw
add
mov
xlat
mov
out
int3
into
sbb
dec
mov
outsb
arpl
push
sub
cmp
roll
push
and
or
out
mov
cmp
in
call
out
add
sbb
inc
mov
es
rcrl
pop
repnz
jne
loop
in
rcl
lcall
pop
mov
imul
mov
es
fsubrs
adc
or
test
or
lahf
ss
jle
arpl
and
int
dec
ret
test
imul
adc
in
sahf
mov
jne
mov
test
out
inc
test
lahf
pop
test
in
cmp
icebp
dec
adc
and
mov
sub
mov
adc
dec
call
sbb
rclb
call
inc
vmovhps
aam
dec
jnp
mov
jge
cmp
jg
adc
gs
xchg
dec
cmp
mov
xor
gs
jp
sahf
shl
dec
pop
fidivrs
sub
mov
or
cmpsl
out
loop
mov
push
sub
mov
out
jnp
cmp
dec
mov
mov
sub
fs
or
sub
mov
mov
mov
fidivrl
mov
push
dec
into
mov
jecxz
lds
loopne
orl
push
mov
xor
push
mov
and
pop
nop
rcr
inc
push
outsl
push
nop
mov
je
movl
push
cs
push
mov
leave
sbb
orb
mov
lds
dec
or
movsl
add
fadds
orl
lret
adc
inc
in
inc
xor
add
lock
movsb
inc
jecxz
in
and
mov
mov
pop
fists
jbe
pop
repnz
pop
dec
jae
inc
adc
fs
sub
mov
js
or
push
addr16
in
mov
adc
push
sbb
mov
stos
mov
clc
jo
rol
aas
stc
in
mov
cmpsb
adc
dec
mov
mov
ja
aad
cmp
fsubrs
sub
sub
outsl
adc
stos
mov
in
sub
mov
out
xchg
les
pusha
pop
push
in
mov
psubsb
out
adc
xor
out
mov
pop
call
std
push
sub
xchg
test
in
push
mov
pop
inc
dec
negl
test
cmp
in
das
push
out
jmp
in
xlat
lds
mov
mov
call
lret
out
daa
or
sub
mov
inc
push
xor
dec
hlt
cmc
test
sub
out
not
adc
scas
adc
cli
xchg
dec
add
imul
lock
sbb
sub
dec
arpl
pop
push
jecxz
adc
jg
in
aad
fdivl
xchg
in
xor
les
push
int3
add
cwtl
in
mov
mov
pop
or
jg
pop
imul
xchg
adc
cld
inc
lock
push
jmp
in
test
jmp
rol
cmp
lret
pusha
nop
xchg
sub
dec
dec
ja
pop
add
std
jne
mov
jmp
shrb
mov
ja
aaa
lock
addr16
adc
popf
pop
out
sub
ja
and
jae
cmp
or
pop
push
cli
push
sbb
pop
sbb
loope
pop
imul
pop
mov
popa
push
mov
dec
inc
xor
daa
cs
push
in
mov
or
add
adc
and
push
and
in
js
sub
mov
mov
cmpsl
rcrb
inc
aaa
jnp
ja
pop
addr16
dec
xchg
or
in
es
lret
loopne
ljmp
into
andl
iret
ret
and
or
push
xchg
fwait
push
iret
jp
icebp
movsl
xlat
mov
mov
adc
js
pop
int
inc
jg
sarb
add
sbb
outsl
pop
fs
pop
sti
sbbb
sbb
je
sti
dec
fcomps
fldl
movsb
pop
fildl
cltd
pop
xor
adc
cmp
dec
dec
test
lods
and
in
testl
pop
lods
xchg
add
in
cbtw
mov
jne
sub
or
push
aas
cmp
dec
test
sete
bound
je
pop
out
push
push
xchg
jle
cmpsl
push
gs
mov
lods
into
mov
mov
mov
adc
adc
test
int
loop
push
push
popa
mov
ret
cmpsb
xlat
push
bound
adc
dec
inc
cmpsb
and
push
sub
ja
shrl
insl
nop
pop
lock
nop
rcrl
jmp
mov
sub
xchg
ja
cli
roll
shl
roll
lahf
jns
jno
das
insl
lret
loope
inc
xchg
and
xlat
pusha
imul
stos
pop
mov
mov
xchg
or
nop
jge
into
mov
fisttpl
iret
mov
adc
shr
xlat
pushf
fcomp
jae
scas
push
dec
out
call
push
cmpsl
cmpsl
data16
enter
icebp
mov
jle,pn
mov
cwtl
pop
movaps
ret
xchg
sub
adc
subl
and
adc
fsubl
dec
mov
mov
and
pop
cwtl
add
addr16
fidivrl
out
inc
inc
jl
xlat
call
imul
popf
ljmp
jmp
sti
fcmovne
and
or
jnp
imul
in
ljmp
xlat
std
out
ljmp
orb
ljmp
xchg
enter
hlt
mov
popa
movsl
repz
jp
sahf
push
mov
push
add
aam
dec
push
mov
jecxz
clc
test
lret
sbb
sbb
cmp
jmp
xor
inc
sti
rcrl
sbb
test
insl
mov
mov
xchg
mov
xchg
dec
repnz
mov
xor
aad
xchg
dec
out
adc
sti
jnp
pop
add
cmpsl
jmp
xlat
enter
mov
jle
adc
repz
or
xchg
mov
sub
clc
cmp
iret
adc
and
push
or
pop
movsb
xor
fcoml
dec
mov
in
in
mov
lock
mov
pop
adc
addr16
mov
ljmp
aaa
xchg
into
mov
mov
mov
ds
in
xor
cmp
mov
dec
imul
or
popa
cmp
fsubs
pop
movsl
cmp
jp
inc
repnz
jmp
mov
mov
adc
or
rcl
sbb
outsl
mov
ljmp
lods
js
pusha
jmp
inc
xchg
popa
jae
adc
ror
mov
push
dec
lahf
aas
les
or
dec
ljmp
mov
mov
aas
xchg
sub
jno
sbb
ljmp
sub
inc
cld
negl
mov
ror
cmp
mov
dec
mov
jle
shrb
ret
xor
mov
xchg
jmp
jo
fcoms
and
xchg
sar
mov
xor
std
push
sbb
ds
mov
shll
stos
mov
sub
mov
sahf
and
pop
sbb
les
call
inc
outsl
js
xchg
movsl
xchg
in
repnz
or
mov
cwtl
pop
and
sub
inc
xchg
sbb
cmp
mov
loope
jno
sbb
iret
test
pop
popf
adc
jne
jno
sbb
mov
into
jae
push
pusha
xchg
outsl
jl
in
xor
lret
shll
cmp
jge
ret
aad
xor
mov
push
cmp
or
dec
sar
xlat
into
in
jge
cmp
ret
mov
sub
push
in
push
fisttpll
sub
test
lahf
icebp
clc
ror
fs
push
hlt
xchg
ds
fnsave
cli
fwait
clc
movl
pop
dec
repz
lods
mov
jle
mov
aam
sub
jecxz
fstl
shlb
cmp
and
clc
imul
sub
addr16
and
jno
xor
xchg
inc
sub
and
fs
xor
out
dec
loop
mov
add
inc
xor
sbbl
inc
jae
cmp
les
js
shrb
and
negb
fnstsw
and
cmp
outsl
aam
fiadds
push
xlat
test
pop
cli
sub
mov
and
insl
push
aas
rclb
or
ret
loope
cli
movsl
js,pt
gs
add
shr
std
pop
in
cmpl
xchg
call
rcr
nop
adc
inc
mov
pop
fcmovne
idiv
jo
cmp
nop
mov
jmp
mov
xor
aaa
pop
loopne
cli
pop
sarl
dec
add
insl
repnz
fidivl
out
loopne
jno
jmp
or
dec
cmp
cwtl
leave
ds
push
and
cwtl
mov
dec
loopne
enter
gs
jmp
dec
js
fsubrs
sub
mov
gs
lock
shl
inc
push
orl
mov
pop
cli
aas
mov
adc
mov
lahf
ljmp
xchg
pop
inc
ds
rolb
mov
popa
sbb
andl
cwtl
sub
adc
mov
push
or
xchg
cwtl
gs
shlb
js
mov
call
das
mov
cmp
mov
subb
pop
in
popf
sub
add
mov
sub
sti
jecxz
inc
adc
repnz
aaa
icebp
and
test
lret
add
mov
lea
int3
sbb
loopne
out
or
xchg
rol
add
mov
lock
insb
ret
mull
lods
cmp
pop
hlt
mov
xor
leave
cmp
push
pop
pushf
mov
mov
mov
mov
adc
pop
mov
les
cmpsb
gs
pop
xor
insb
ja
sub
xchg
sbb
imul
movsl
pop
shr
mov
aas
nop
pop
adc
mov
jge
jmp
dec
cwtl
iret
cli
call
int3
sbb
paddusw
imul
mov
xor
inc
xor
gs
nop
cmpsl
xor
xor
and
les
xchg
xchg
outsb
out
pushf
xchg
mov
jecxz
ror
xor
xor
mov
add
mov
sbb
test
in
pop
bound
xchg
bnd
pop
adc
std
sub
add
shll
cmpsb
lea
movl
shlb
notl
ljmp
xchg
sub
mov
jno
or
dec
cmp
dec
mov
and
loopne
cmp
je
lahf
cltd
mov
mov
cmc
mov
sarl
test
aam
jg
rclb
jl
clc
mov
mov
out
xor
idivl
mov
push
scas
cmc
ljmp
in
mov
fdivl
or
mov
ja
ret
mov
fsubs
incb
int3
mov
pushf
out
mov
pop
filds
sub
int
mov
mov
jbe
mov
sbb
in
mov
push
subl
imul
xchg
dec
inc
push
jns
insl
xchg
adc
dec
xor
rolb
mov
mov
or
mov
push
push
and
or
xor
fmul
mov
xor
mov
hlt
in
mov
cwtl
pop
and
and
cmp
aad
repz
test
cmpsl
cli
and
or
push
jno
fcom
inc
push
jns
icebp
mov
and
lret
ret
mov
xchg
cmp
les
aaa
or
cs
pop
bound
test
adc
push
push
push
daa
add
or
data16
gs
mov
xlat
push
dec
test
jo
jno
lods
outsb
push
sub
fisttpl
shll
pop
bnd
mov
dec
sbb
cmp
pop
and
in
add
mov
and
scas
sbb
test
mov
dec
stos
ja
mov
incl
fsubrl
xor
icebp
addr16
sub
lods
das
jmp
sbbl
cmp
sbb
cmp
jge
andl
cli
in
jae
cld
out
rcrl
inc
or
dec
mov
xor
js
or
jmp
repnz
in
sub
int3
in
fnstsw
push
push
js
dec
cld
cmp
sbb
dec
sbb
aad
es
aad
and
aam
aad
push
rorl
mov
aaa
adc
inc
inc
xor
aaa
and
push
push
in
xlat
es
jl
cmp
aad
in
imul
fadds
int
adc
adc
je
call
pop
iret
add
into
pop
mov
jns
and
aam
push
jp
xor
or
add
cmp
inc
dec
add
shll
shlb
cmp
das
adc
repz
jno
jp
sbb
cli
adc
cmp
sub
or
xor
aad
cwtl
lods
cld
daa
dec
imul
sub
jl
movsl
call
xlat
cmc
iret
mov
or
mov
negl
fiadds
les
jecxz
test
js
cli
jne
gs
call
push
or
lock
outsb
imul
out
xor
test
sahf
pop
cwtl
pop
test
inc
cli
dec
cmp
push
and
loopne
sub
popf
fists
dec
lret
cmp
test
push
jle
in
jb
out
out
xchg
pop
cmp
lock
xchg
mov
and
sub
pop
pop
sub
shlb
movsb
pop
nop
inc
test
mov
hlt
rcrb
pop
int
imul
outsb
insb
in
adc
push
inc
xchg
inc
outsl
fwait
insb
ret
push
mov
lods
aad
out
jl
fidivrl
rcr
aaa
mov
fdivr
pop
js
test
js
add
or
pop
xorl
or
rol
es
test
lds
gs
loopne
sub
mov
repz
loope
lcall
xchg
jmp
mov
xor
pop
pop
insb
adc
add
fisttpll
mov
pop
sbb
bswap
jp
pushl
fs
pop
inc
hlt
gs
sub
lcall
xchg
sub
sbb
cltd
addr16
popf
fcmove
lods
lret
cwtl
or
push
jl
stc
mov
xchg
add
sub
icebp
test
scas
adc
ror
pop
mov
xlat
mov
test
sti
lea
sbb
jg
xor
mov
rep
adc
pop
int3
test
out
icebp
fdivrl
sub
mov
xchg
stc
pushw
pop
subl
imul
mov
cwtl
leave
aaa
jb
adc
xchg
mov
mov
xchg
int
cmc
cltd
das
or
pop
push
push
fnstenv
lret
repz
mov
sub
xchg
sbb
and
shr
pop
push
hlt
jecxz
fcmovnbe
mov
jbe
iret
loope
out
dec
mov
aad
ret
fldl
imul
lock
adc
cwtl
insb
cmpsl
adc
mov
mov
neg
xchg
cli
push
mov
dec
pop
push
iret
clc
push
mov
dec
int
cwtl
pusha
dec
sub
insb
pop
and
jbe
mov
or
loope
xchg
sbb
xor
test
mov
dec
add
cmp
jp
jmp
iret
movsb
xchg
sub
sete
dec
lea
repnz
outsb
sbb
hlt
fadd
inc
outsb
popf
dec
dec
fistps
test
jg
mov
xor
mov
xor
pop
insl
sbb
jp
mov
pop
cmp
xchg
iret
je
xchg
out
jecxz
jecxz
lock
cmp
aad
mov
mov
mov
mov
xor
lock
aas
ror
gs
adc
pop
rclb
dec
pop
mov
adc
pop
pop
pop
in
pop
xchg
mov
jecxz
scas
adc
or
xchg
fstpt
fisttps
popf
jo
xchg
ljmp
test
inc
iret
xor
jbe
movsb
es
mov
xor
sbb
in
incb
mov
sub
sar
call
cmp
iret
mov
xor
push
push
cmp
shr
push
movsl
mov
dec
cmp
data16
xchg
cmp
add
call
cmp
outsl
dec
jb
pop
fistl
js
aad
bsf
jo
add
aas
adc
mov
dec
sub
repnz
stos
cwtl
div
inc
test
nop
xor
loopne
dec
outsb
or
test
scas
fimull
xor
ret
jbe
iret
aaa
dec
adc
cmpsl
ret
lds
imul
js
pop
push
test
push
or
and
aad
mov
xor
and
out
ss
fistl
fnsave
int
aas
dec
cli
test
dec
aas
xor
loopne
and
std
das
cmpsb
repz
mov
cli
cs
stos
xor
lahf
ljmp
cltd
adc
push
cwtl
call
aas
shrl
xchg
outsb
push
mov
sbb
fisttpl
ret
popa
in
insl
loop
in
fwait
xchg
jmp
or
out
mov
adc
xchg
sub
mov
test
mov
jecxz
sbb
jmp
add
push
sub
sti
mull
mov
movsl
sarl
in
and
cmp
pop
fs
xchg
insl
ljmp
scas
jb
and
push
gs
dec
jbe
adc
and
push
nop
inc
push
in
xchg
xor
lret
call
cli
incb
lret
hlt
cwtl
cmp
iret
aam
daa
pop
inc
jp
cmp
xchg
jb
shrl
js
mov
call
repz
addl
push
loopne
mov
aad
fisttps
test
insb
in
xlat
call
jp
jecxz
sub
sub
xchg
icebp
insb
out
iret
sbb
mov
cmp
dec
xchg
ret
movsl
ljmp
sub
cmp
loope
jmp
subl
ja
cli
sub
in
jno
gs
insl
or
in
dec
push
lret
shrb
jns
jmp
stos
push
rcrb
push
cmc
repz
pushf
sahf
fabs
fsubr
adc
pop
sbb
repnz
add
popf
cmp
js
inc
cs
xor
sbb
pop
push
jo
inc
mov
lock
cmpsb
lock
sub
pop
adc
sub
call
shrb
fcmovb
or
and
cmpb
jae,pt
loop
hlt
sbb
lahf
cmp
push
sbb
sbb
repnz
jl
sbb
sub
pop
mov
scas
xor
push
mov
test
mov
push
insl
outsl
popa
aad
adc
cmc
mov
leave
jge
test
imul
push
sub
aas
in
push
cmp
sub
jno
push
lahf
xchg
push
call
cwtl
test
lock
gs
add
in
jp
inc
mov
rclb
xor
mov
sub
decl
das
adcl
lock
js
hlt
movsl
aas
call
aam
lock
gs
push
cld
jl
xchg
mov
fistpll
mov
jg
mov
mov
aad
movsb
clc
lock
xor
mov
mov
cli
fnstenv
leave
out
cmp
xor
das
fs
pop
nop
push
or
push
xchg
loope
aas
clc
xchg
mov
sbb
sbb
pushf
pop
shl
xor
xor
dec
push
sar
aas
lods
ss
lret
cli
xchg
sbb
out
test
xor
clc
aaa
popa
pop
mov
ret
das
mov
sarl
ljmp
mov
clc
xchg
ja
lret
iret
fisubrl
pop
push
lock
push
push
ljmp
out
mov
mov
fsub
je
pop
imul
and
in
call
outsl
in
fidivs
test
pushf
stos
repnz
mov
mov
cmpsl
xchg
in
ret
dec
sub
mov
pop
imul
loopne
ds
jmp
fldt
ret
test
idivb
cmp
movsl
popl
les
cmpsl
cwtl
insb
mov
pusha
cmpsl
in
sub
adc
lret
pop
sub
xchg
ljmp
jno
fistl
cmp
out
push
pop
adc
push
and
in
xchg
test
pop
mov
push
mov
add
aas
cmpsb
iret
icebp
mov
out
inc
or
clc
mov
add
loopne
stos
test
cmp
push
xchg
dec
push
pop
adc
or
add
or
stos
push
push
sbb
stos
fnstsw
mov
lret
insl
in
sbb
sti
add
fwait
add
movsl
xor
adc
push
or
mov
jne
and
cmp
mov
jge
loopne
aad
pop
pop
outsl
ds
push
jle
repz
cmpsl
jmp
mov
push
xor
jbe
xchg
mov
add
jne
stos
sub
pop
or
dec
test
sub
fistps
pop
pop
inc
xchg
nop
in
cmc
xchg
mov
mov
and
mov
push
test
inc
cmp
lea
lea
fwait
xchg
cld
mov
int3
lods
pop
mov
cmp
dec
scas
in
imul
cmc
adc
push
dec
iret
push
xor
mov
sub
mov
cli
and
sbb
in
and
mov
cmpsb
sub
pop
or
cwtl
test
jle,pn
fsubr
movl
cmp
sub
imul
inc
out
popa
dec
loopne
cwtl
mov
lock
scas
mov
push
in
mov
push
xlat
out
lret
aad
xchg
inc
cld
out
mov
jbe
fbld
out
mov
mov
mov
int3
scas
push
test
imul
dec
sub
std
inc
shl
insb
in
icebp
in
xor
push
inc
jecxz
cld
push
adc
movhps
cmp
ds
loop
ljmp
fimull
shrb
out
adc
in
dec
cli
faddp
loopne
mov
add
lcall
lret
mov
js
dec
int3
aaa
movsb
sar
jne
or
addr16
aaa
mov
xchg
sbb
jns
lret
xor
out
loopne
fistps
in
lods
xchg
push
jle
out
jg
jne
ficoml
sub
inc
imul
testb
mov
dec
and
idivl
in
out
sbb
out
sub
xor
fimull
sbb
xor
and
insb
mov
pop
iret
push
and
fsubl
mov
lods
lret
pop
je
mov
mov
mov
leave
andl
pop
test
movsb
es
jmp
mov
and
addr16
mov
dec
push
mov
mov
dec
std
cmp
push
aad
pop
out
test
rorb
out
mov
aas
stos
cmp
fnsave
xchg
ret
cmp
test
test
lea
pop
cmpsb
pop
xchg
out
faddl
pop
lahf
icebp
sub
push
cmp
sbb
rclb
adc
rorb
ljmp
lahf
js
adc
adc
aad
fiadds
xchg
cltd
push
xchg
sbb
outsb
ss
ret
sbb
add
aaa
and
jp
xchg
jmp
cli
mov
and
cmp
push
pusha
adc
mov
test
adc
gs
push
into
fcomps
je
add
out
rorl
cmpsb
xchg
into
movl
aad
cmove
xchg
jmp
adc
insb
fsubr
xor
lahf
dec
andb
aad
mov
mov
add
push
push
or
pop
lcall
sub
mov
xchg
bound
in
cwtl
sbb
je
dec
iret
js
inc
and
shlb
aam
mov
xchg
sub
pop
dec
test
outsl
pushf
in
gs
or
stos
fiaddl
mov
xlat
in
cmp
jno
pop
out
jo
sub
lret
dec
cmp
push
xor
mov
xchg
and
cmp
inc
out
push
cmp
inc
jge
lahf
push
jnp
dec
xchg
and
pop
adc
bound
outsb
push
cwtl
pop
dec
lcall
add
rcl
out
test
inc
or
and
dec
xor
into
xchg
loopne
mov
cmpsl
inc
cmp
xor
repnz
add
jns
loopne
mov
sub
cmp
clc
dec
mov
and
jne
outsl
movsb
cmpsb
sbb
call
fimull
cld
shl
jmp
jbe
cmp
jb
fcoml
mov
push
in
mov
push
loope
mov
mov
rcll
ss
xchg
mov
add
xlat
inc
imull
pop
movsl
dec
sub
cmpsl
lock
push
lret
lods
sbb
mov
or
fnstsw
sub
dec
pushf
movsb
cld
ud0
pop
dec
dec
movsb
xchg
jno
add
push
push
repz
or
add
lods
jmp
test
mov
movsb
mov
push
test
sarb
clc
out
scas
sbb
jno
mov
dec
push
repnz
data16
sbb
sub
xor
push
mov
fnsave
mov
lcall
mov
pop
cmpsl
mov
mov
mov
push
pop
lret
jbe
cmp
pop
xchg
mov
cli
cmpl
adc
add
mov
mov
cmp
jecxz
jmp
xor
out
daa
mov
stos
adc
insl
push
pop
or
and
mov
das
sbb
pop
fiaddl
rolb
subl
pop
insb
fiadds
nop
and
fmuls
dec
mov
mov
xlat
nop
js
fimull
xchg
adc
dec
iret
and
mov
sub
xor
mov
xor
out
mov
jl
repnz
mov
push
adc
pop
sahf
xchg
xlat
cwtl
fstl
ret
jns
jl
test
fcoml
cli
and
loopne
in
xlat
pop
fbstp
cmp
ljmp
gs
or
or
cli
sbbb
sbb
pop
xchg
ret
clc
mov
icebp
pop
adc
popf
stc
bound
push
je
inc
int3
mov
insb
add
inc
shlb
call
ss
pop
push
mov
sbb
int3
adc
imul
pop
test
test
pop
ret
or
and
sub
adcl
cmpsl
mov
mov
outsl
test
loopne
mov
xlat
scas
pusha
push
lret
fisubs
lcall
add
mov
mov
cli
xchg
mov
xchg
push
xor
les
es
xorw
inc
xor
scas
pop
fimull
stos
rclb
lock
in
add
add
rclb
test
jmp
pop
test
mov
dec
andb
leave
mov
in
mull
inc
xlat
push
ja
stos
movsl
xchg
sbb
dec
pop
je
jns
xchg
xchg
clc
nop
ljmp
fadds
movsl
in
call
arpl
test
sbb
lret
push
clc
gs
sarl
loopne
mov
into
mov
std
sbb
test
add
mov
adc
push
movsb
pop
sahf
push
mov
sbb
and
adc
int3
mov
push
mov
dec
cwtl
stos
ljmp
adc
mov
inc
xor
movsl
leave
mov
jno
fwait
mov
push
mov
pop
and
pop
addr16
sub
mov
sbb
imul
mull
xchg
cli
xor
adc
fcmovnb
les
loop
sbb
and
xchg
fcomi
mov
inc
xchg
addr16
dec
hlt
add
sysexit
lret
xor
and
adc
clc
out
mov
test
xchg
mul
or
ret
fmull
arpl
decb
loope
je
fs
fldcw
pop
cmpsl
negb
mov
cmp
xor
aas
mov
iret
ret
sahf
fsubl
cmpb
int3
sbb
call
and
je
xor
fcoml
push
clc
popf
imul
xor
jb
loope
dec
inc
out
fisttps
push
mov
out
out
icebp
jge
mov
ret
dec
pop
mov
add
mov
aas
aam
decb
dec
in
aam
aas
in
imul
lods
je
cwtl
sbb
or
test
out
cli
xchg
stos
into
mov
loop,pt
imul
lock
roll
daa
iret
sub
outsb
add
and
sbb
out
push
aam
xchg
jmp
imul
pop
ljmp
shll
outsb
leave
cli
pop
notl
mov
push
cwtl
and
push
jl
fadd
ret
jo
test
fmulp
nop
rol
mov
cltd
xor
imul
jmp
xchg
out
inc
cmp
dec
jae
push
push
push
stos
clc
mov
addr16
mov
call
aas
jno
test
imul
out
loope
adc
xchg
and
call
jle
shrb
xchg
je
adc
lods
adc
push
pusha
int
fbstp
mov
sub
movsl
in
push
rolb
ss
add
inc
ljmp
cwtl
jg
add
loop
xchg
subl
insl
sub
outsl
cmc
mov
incl
lock
lock
lods
cmp
or
fwait
push
fcoms
sbb
loopne
lcall
int3
out
aaa
cwtl
es
push
fwait
jne
pop
and
pusha
jnp
fcmovnbe
jp
stos
addr16
mov
clc
push
iret
repz
loope
mov
or
nop
js
push
mov
insb
mov
popf
mov
repnz
fnsave
out
sub
push
lock
lds
or
test
roll
xchg
mov
cmpsl
push
call
push
clc
into
daa
or
push
sarl
roll
pushl
clc
addr16
fcoms
ljmp
sbb
clc
sbb
mov
xor
pop
fadds
insb
pop
aad
movsl
push
cmpsl
mov
lret
popf
jl
pop
jmp
push
fldl2e
loope
jne
inc
adc
lcall
clc
fcoms
scas
imul
test
and
cmp
int
stos
mov
xor
pop
gs
and
pop
fs
xchg
cs
push
add
mov
pusha
in
clc
sbb
pop
xor
xor
mov
add
mov
std
sbb
in
mov
repnz
push
mov
inc
test
stos
cmp
dec
xor
std
add
idivb
adc
stos
xchg
pop
imul
test
ss
movsl
jmp
mov
jmp
sbb
jmp
andb
shl
mov
scas
in
decl
decl
fcomps
sub
fwait
mov
push
xchg
mov
sahf
adc
mov
out
lcall
insb
cmpsl
int3
mov
pushf
jecxz
cmpsb
and
and
je
lock
loop
test
xchg
jl
pushf
xchg
mov
insb
push
cwtl
mov
sub
imul
sub
lock
push
movsl
out
fwait
xchg
data16
subl
mov
xchg
addb
popf
imul
pop
insl
xchg
lock
inc
mov
dec
movsl
xor
dec
inc
in
out
and
adcl
cmpsb
mov
push
add
rolb
pop
nop
and
ja
faddl
fcoml
mov
test
in
je
leave
fidivs
fistpll
and
xchg
xchg
lahf
jge
push
es
adc
into
test
or
fs
push
or
lock
inc
and
push
mov
xchg
xor
gs
sub
movsl
cmp
jbe
dec
push
je
fwait
std
mov
jmp
enter
mov
dec
xor
xchg
inc
mov
jb
and
mov
xchg
clc
mov
es
shll
inc
pop
sbb
divb
push
sub
sbb
xor
sar
mov
cmp
rcl
imul
out
scas
je
xchg
dec
sbb
mov
out
das
jo
shll
dec
in
xlat
mov
dec
loop
mov
mov
dec
inc
lcall
lods
xor
shlb
repz
inc
cld
scas
jl
mov
stos
mov
in
out
sbb
inc
pop
sub
jecxz
push
test
popf
inc
push
add
sub
fistpll
sahf
lock
popf
popa
data16
jge
mov
xor
mov
mov
push
rorl
inc
cli
out
cmp
xchg
mov
jb
cwtl
testb
xchg
ljmp
add
insb
lcall
out
data16
aad
or
mov
mov
or
inc
xor
sub
xchg
rcrl
xchg
push
stos
jae
aam
out
mov
or
mov
push
movsb
push
fsubs
lret
or
pop
out
push
jnp
subb
rcll
push
jne
insl
push
inc
xchg
push
js
cmc
cmp
push
int
sbb
std
int
and
mov
loopne
adc
test
imul
subb
aas
jne
or
mov
cmpl
hlt
push
jo
movl
mov
mov
out
loopne
shl
xor
stos
fstpl
cld
mov
dec
inc
sub
call
dec
daa
sub
call
aad
add
shrl
mov
cmp
cld
mov
aad
pop
pop
xor
out
ret
aas
loop
inc
mov
out
scas
fnstcw
sub
jg
xor
adc
sbb
mov
fists
std
popa
inc
cmpsb
out
mov
icebp
push
loope
pop
push
jl
cwtl
xor
out
mull
into
push
pushf
cmp
cmp
push
pop
jne
out
mov
repz
sbb
xor
cli
bound
pop
and
pop
adc
or
movsb
xchg
loope
fwait
pop
js
inc
cli
xchg
cmp
scas
sub
and
popa
ja
push
pop
and
dec
adc
cwtl
mov
pop
xchg
ljmp
cld
mov
mov
loopne
xor
mov
sub
push
mov
leave
adc
lcall
push
xor
fucomp
rolb
fwait
test
sar
adc
scas
inc
dec
inc
sub
insb
cmp
test
xchg
sar
inc
sub
movsl
ljmp
in
cmp
cmp
jne
pop
adc
xchg
and
sbb
mov
xor
push
repnz
stc
addr16
cld
push
cltd
mov
mov
out
sahf
das
dec
cli
adc
push
int
xor
dec
fcoms
mov
xchg
test
call
adc
mov
xchg
mov
in
cwtl
pop
dec
mov
lret
out
in
and
shlb
gs
xlat
test
mov
cmc
adc
jae
into
and
sub
addb
leave
xor
shlb
ds
sahf
push
cmp
jg
sub
and
push
incl
sahf
je
popf
or
repz
xor
and
xchg
push
cmc
jmp
adc
ljmp
or
xchg
mov
loope
cmp
pop
xor
into
mov
jl
rcrl
inc
test
sub
mov
shlb
sbb
lahf
pushf
insl
divl
gs
and
sub
ja
andb
cmp
idivl
mov
lahf
hlt
sub
lahf
fstpt
imul
ljmp
loope
mov
pop
stos
clc
mov
repz
dec
shrb
and
out
aaa
xor
in
jne
iret
out
in
repz
lea
mov
aad
mov
dec
rcrl
addl
es
push
cwtl
stc
jno
jmp
push
jbe
fisttps
mov
mov
nop
cmp
arpl
imul
xchg
or
cmpsb
xchg
test
dec
mov
test
hlt
mov
iret
inc
out
pop
xor
popf
cli
push
ds
outsl
add
and
pop
nop
rolb
or
sub
mov
jno
jb
aam
xor
inc
stos
mov
loopne
push
dec
loop
and
lahf
mov
mov
mov
scas
lods
hlt
lds
push
sub
inc
sbb
sub
stos
inc
cmp
push
rorb
cmp
scas
lcall
test
mov
xchg
pop
or
hlt
test
xor
inc
pop
jne
mov
pop
outsl
fsub
test
cmp
xchg
test
clc
into
cmp
mov
mov
xor
inc
out
adc
push
out
fsubs
jmp
insl
sbb
je
sahf
mov
imull
mov
xchg
sbb
jmp
sbb
jmp
and
cwtl
inc
mov
lcall
xor
sbb
out
xchg
mov
notl
pop
xor
ds
test
stos
js
loopne
out
and
out
arpl
pop
mov
and
loopne
xchg
rcl
xlat
push
rorl
shll
jle
out
mov
dec
mov
imul
jo
push
in
sbb
xor
lock
mov
in
in
mov
pop
dec
jno
stos
pop
xchg
mov
das
lret
jge
es
outsl
loopne
add
jp
call
inc
or
xor
mov
jmp
push
mov
mov
pop
jnp
stos
sbb
jmp
jb
xor
xchg
rorl
in
inc
pop
je
mov
mov
xor
call
mov
or
adc
jl
sahf
dec
or
fisttpl
cmp
xor
cmp
gs
xchg
pop
mov
gs
xchg
sahf
push
xlat
mov
add
subb
jnp
daa
ss
sbbl
adc
sub
push
cwtl
lods
dec
mov
jecxz
xchg
dec
jecxz
mov
xchg
fiaddl
cmp
hlt
dec
addr16
adc
lea
dec
popa
xlat
push
das
js
fidivrl
jecxz
out
mov
testl
out
or
pop
inc
psrad
lock
xchg
sub
outsb
inc
push
int
shr
shlb
or
loop
inc
cld
dec
sbb
adc
nop
pop
mov
arpl
pop
loop
lret
cmpsl
jmp
jecxz
mov
cmpsl
stos
mov
js
in
add
cmp
gs
call
test
adc
pop
cwtl
mov
jns
xor
repz
jmp
repz
sbb
cltd
out
or
sub
fsubl
adcb
rcl
adc
push
push
mov
jle
or
cmpsb
inc
push
cmp
jb
das
pxor
cmp
sub
out
adc
and
jae
gs
xor
cmpsl
mov
movsl
jg
mov
mov
sar
es
pop
stos
dec
add
and
inc
xchg
aam
pop
sub
mov
movb
sub
fldpi
rcrl
inc
xchg
mov
and
and
and
shll
jns
popf
mov
mov
mov
adc
dec
jbe
imul
fcmovb
sub
mov
xor
xor
adc
xchg
in
or
test
mov
xor
out
fnclex
je
cmp
inc
push
and
cmp
cwtl
mov
cmpsl
sar
pop
mov
cmp
fsubrs
cld
in
cmc
jb
les
xchg
push
divb
faddl
add
and
loopne
lahf
xchg
imul
pop
cmp
mov
scas
inc
adc
jecxz
add
jb
sti
into
ja
pop
mov
pop
xchg
pop
sbb
dec
pop
fdivrl
fisubrs
mov
mov
jno
rcl
aad
sub
mov
mov
mov
ss
mov
sub
pusha
hlt
push
inc
add
dec
pushf
xor
mov
js
dec
cmpsl
bswap
cmc
nop
jp
pop
add
dec
sub
cmp
negb
arpl
add
xlat
test
pop
pop
push
repz
sbb
sub
jp
mov
xchg
dec
jge
aas
xchg
ja
ljmp
int3
and
out
inc
mov
jmp
jge
jle
inc
fcomps
hlt
and
xchg
pop
imul
mov
into
add
mov
stc
adc
xchg
lret
fnstenv
movsl
xchg
or
dec
rcll
ljmp
xor
sbb
jmp
enterw
gs
or
mov
inc
cli
fucomip
addr16
icebp
out
out
pop
add
xor
inc
ljmp
mov
movsl
ds
pop
adcl
icebp
lods
stc
cmp
das
nop
jnp
or
out
insb
jge
cmp
out
xchg
pop
jo
fists
adc
sti
fistps
test
cmp
or
fisubs
jge
and
mov
pop
andb
push
and
sub
in
clc
pop
mov
inc
stos
jno
fnstcw
mov
int3
mov
xchg
xchg
cmp
into
int3
dec
icebp
gs
pop
sub
mov
pusha
sub
sub
push
aaa
jmp
xor
out
adc
cmc
insb
aaa
xchg
je
dec
jmp
rcr
mov
mov
cmp
shl
push
inc
or
jne
xor
adc
in
out
loope
nop
mov
ficomps
outsb
push
dec
stos
sti
andl
cvtps2pd
mov
inc
loopne
mov
imul
jge
fstpt
pop
pop
or
cmp
push
sbb
xchg
sbb
fs
xor
scas
push
pop
test
nop
fwait
adc
cmp
test
xchg
lods
sbb
jbe
jo
xor
imul
fmul
ret
or
pushf
movl
pop
test
shl
push
mov
or
lret
jo
mov
call
ss
mov
adc
out
xor
in
sub
mov
xor
mov
jecxz
pop
mov
shl
test
dec
fistl
hlt
lock
aad
cmp
movsb
lock
sub
test
jae
shrb
movsb
daa
test
popf
pop
shlb
sub
xor
loop
sub
mov
pop
cmc
add
xchg
mov
test
insl
push
dec
aam
xchg
pop
in
dec
inc
ret
lods
leave
xchg
fdiv
mov
lock
xor
mov
out
dec
inc
ret
inc
icebp
pop
lcall
xchg
or
stos
dec
loopne
mov
sub
cs
stos
loope
in
ss
aas
pop
outsl
int3
loop
sti
loope
jne
cwtl
insl
dec
push
cli
pusha
ljmp
sbb
test
xchg
stos
mov
push
into
lods
mov
addr16
dec
lock
arpl
sarb
arpl
cmp
iret
out
push
lock
sahf
js
das
cmp
fucom
daa
stos
xchg
xchg
imul
xchg
adc
mov
dec
js
fimull
lret
cld
call
arpl
popf
or
pop
or
adc
push
add
fmul
mov
pop
in
pop
cld
or
mov
std
add
into
rcrl
or
or
cwtl
rcrl
out
out
push
lds
ljmp
fcomip
jecxz
lods
mov
pusha
idivl
mov
shrb
ss
add
dec
clc
dec
daa
fmul
or
call
fwait
pop
mov
gs
int3
mov
test
out
ja
dec
cmp
and
gs
aaa
inc
popf
gs
nop
addr16
insb
xor
sbb
out
xchg
ds
pop
enter
lret
popf
movsb
in
loope
scas
cld
fcoml
scas
sbb
pushl
pop
addr16
lret
stc
jb
ss
inc
sub
sbb
sub
jbe
pop
ret
cmp
stos
out
cli
cmp
ja
xchg
cwtl
dec
mov
pop
aas
aaa
pop
push
fadd
pop
and
pusha
test
mov
push
push
mov
xchg
outsl
out
sub
lret
mov
jge
call
dec
jmp
pop
xor
add
fisubrl
imul
aad
and
inc
push
hlt
sub
out
out
xor
pop
or
lock
dec
lock
xor
mov
sub
sub
dec
daa
test
lret
stos
sub
mov
push
repz
cmpsb
test
mov
scas
push
mov
and
gs
out
insl
call
clc
mov
jmp
test
inc
sub
loopne
repz
out
push
dec
pop
xchg
mov
push
inc
int
gs
dec
sbb
ret
adc
sub
mov
imul
cmpsl
out
outsl
mov
repnz
fsubr
aaa
xchg
add
leave
xchg
cmp
add
jno
adc
pushf
and
andl
repz
dec
mov
clc
or
ffree
movsl
sarl
fucom
mov
cmpsb
call
movsl
xchg
ss
mov
out
fnstenv
lds
jmp
pop
aam
dec
ja
inc
rol
lret
jge
icebp
push
andb
push
ja
clc
fmul
or
pop
inc
mov
inc
out
clc
sbb
cmp
imull
out
dec
adcl
jp
xor
sbb
sbb
ret
push
pop
ja
movsb
call
sub
iret
lock
mov
push
pushf
popf
shlb
mov
add
jl
aam
addb
ficoms
mov
dec
in
outsb
repz
mov
cwtl
call
mov
xor
call
arpl
xchg
mov
loop
sti
fcom
fsts
sbb
addr16
out
pop
add
ja
fdivrs
push
dec
iret
jmp
adcl
cli
cwtl
and
ja
repnz
mov
cmpsb
es
xchg
xlat
sub
repnz
and
pop
in
lods
ljmp
lock
icebp
gs
lcall
mov
sti
jb
scas
outsb
push
in
adc
push
fucomip
out
pop
mov
insb
mov
cmp
jne
int3
les
ja
mov
push
sbb
outsl
ja
inc
dec
fnstenv
xor
dec
xchg
and
sub
popf
lods
inc
adc
pop
cmp
xor
sti
leave
adc
outsl
xor
test
test
imul
inc
in
test
out
idiv
xchg
xor
mov
rcll
movsb
mov
lcall
fildl
add
in
xor
xchg
insl
push
inc
xlat
fisubrl
mov
sbb
xor
addl
in
and
mov
mov
ret
adc
or
xchg
adc
bound
loope
addb
popf
mov
insl
loope
cs
lahf
adc
mov
add
mov
or
rcrb
sbbb
mov
sbb
mov
jnp
lock
int3
sub
sbb
cmp
popf
outsb
push
xchg
cmc
jmp
xchg
gs
pop
add
mov
cmp
xor
xchg
sbb
xchg
aaa
shlb
adc
das
jae
sub
out
movsb
es
or
inc
out
jno
pop
push
lods
cwtl
add
adc
mov
sbbl
adc
shll
in
xor
mov
mov
push
pushl
jl
ret
dec
sbb
int3
inc
std
dec
lret
jne
aaa
decl
inc
sahf
dec
cmpsl
mov
ret
push
clc
push
xor
popf
cmp
aad
xchg
in
jno
rorb
add
loope
dec
mov
out
iret
mov
xchg
dec
jb
lds
dec
divl
jg
popa
into
mov
xor
outsb
cmc
addr16
push
filds
add
sub
jb
mov
loopne
rolb
idivl
add
pop
pop
push
cmpsl
movb
std
mov
movsb
mov
push
in
dec
or
xor
popf
mov
push
push
mov
lds
gs
jo
xchg
jno
decl
and
aad
mov
and
cli
fbld
ljmp
out
gs
idivb
push
mov
call
out
in
rcr
cmpsl
mov
repnz
fsts
push
fistl
iret
push
pop
gs
imul
jl
mov
fsubr
lcall
xchg
push
jle
movsb
call
push
pop
idivl
fiaddl
dec
push
mov
addr16
xor
xchg
shlb
mov
push
and
pop
and
fs
shrl
mov
inc
add
inc
xor
pusha
mov
inc
xchg
sub
gs
sbb
in
fsubs
jnp
adc
std
fidivrl
or
mov
mov
outsl
dec
shl
es
shrl
or
inc
outsl
sbb
fsubl
sbb
xchg
push
dec
sti
mov
dec
jecxz
insl
xchg
pop
xor
repz
pop
mov
aam
test
xchg
pop
sbb
pop
mov
call
shl
or
sahf
add
out
das
mov
mov
xor
loope
out
inc
jecxz
mov
cs
jge
lret
sub
push
sbb
rcrl
imul
and
je
lock
sub
hlt
push
inc
mov
insb
mov
pusha
jmp
es
ja
mov
sbb
mov
pop
clc
add
add
fistl
aam
jp
xchg
stos
daa
mov
imul
imul
and
dec
mov
sti
pop
xchg
inc
repz
xchg
nop
repz
push
lock
pushf
cwtl
mov
aad
xchg
push
or
insb
add
jo
mov
ret
mov
out
js
lcall
xchg
dec
mov
lock
mov
shll
mov
xchg
hlt
mov
xlat
movsl
cs
mov
mov
push
inc
mov
mov
pusha
push
push
mov
mov
iret
or
mov
cs
cmp
inc
jmp
mov
jns
jns
into
fcompl
movsb
outsl
js
or
int3
cwtl
xchg
gs
inc
add
test
es
lahf
lret
jae
xor
fld
and
rclb
inc
sbb
movsl
test
xlat
js
xlat
fldcw
ljmp
mov
aam
outsl
fcompl
bnd
sub
lods
aam
loopne
loopne
ret
testl
xchg
sub
push
fmuls
daa
cmp
mov
xchg
and
adc
xlat
xor
cwtl
jge
sar
mov
xorl
in
fildll
or
sub
int3
sub
ljmp
push
negb
mov
push
and
in
jns
mov
jno
xor
adc
add
ljmp
pop
sbb
lcall
inc
std
fcompl
sub
dec
js
ss
xor
sbb
repnz
js
test
stos
cli
jne
andb
push
or
pop
sbb
push
clc
cmp
mov
repnz
aas
jmp
fsubr
pop
enter
cwtl
dec
es
test
push
scas
in
imul
into
aad
scas
lock
lcall
fiaddl
leave
cltd
mov
fimull
pop
lock
push
js
incb
test
lock
mov
popa
notl
js
iret
xchg
adc
in
mov
stos
pushl
shrb
mov
dec
push
push
xor
sub
rcrb
loop
ljmp
sti
jp
sub
xchg
and
out
jp
cmc
stos
inc
iret
xor
xor
faddl
jbe
push
repnz
inc
xor
push
lret
lds
sti
lods
scas
pop
stc
xchg
cmp
xchg
mov
jno
sub
mov
jge
mov
aad
sub
outsl
push
leave
cmc
cmp
sarl
add
xor
mov
cwtl
or
xor
mov
pusha
xchg
shl
stos
bnd
sub
pop
lcall
xchg
xor
and
hlt
cmp
flds
hlt
lahf
cltd
push
popf
call
pop
arpl
fisubl
push
sub
nop
shlb
pop
mov
fnstsw
mul
inc
mov
jb
and
repz
lods
jmp
and
pop
xchg
fs
mov
xor
and
imul
mov
in
xor
inc
pop
je
lret
mov
sbb
rcll
and
push
or
pop
rorb
cmp
fsub
hlt
inc
lret
fstpt
and
xor
sbb
mov
push
jl
test
mov
inc
mov
movsl
pop
ret
push
lret
pop
sbb
negb
jge
jno
and
push
gs
mov
out
adc
pop
test
adc
imul
jo
mov
insl
mov
stc
jecxz
jmp
outsl
aam
iret
cmp
or
adc
cmp
xchg
pop
jl
aaa
icebp
out
in
sti
lock
mov
add
push
lahf
dec
xchg
sbb
mov
adc
mov
dec
mov
xlat
mov
lahf
xchg
lahf
insb
out
sub
pop
lods
sbb
call
roll
dec
sub
movsl
or
xchg
sbb
loopne
call
and
mov
push
dec
pop
nop
lret
xor
mov
or
inc
shrl
ret
push
lods
scas
mov
jne
movsb
fdivp
call
inc
pusha
push
cmp
and
jbe
in
out
inc
mov
xlat
adc
es
data16
cld
mov
outsl
rcr
push
inc
xchg
push
rcrl
push
pop
push
adc
adc
fidivrs
jmp
and
fcom
lret
sub
ss
out
mov
lds
int
aad
leave
mov
adc
fidivl
mov
inc
mov
out
mov
pop
fisubl
in
cmc
mov
sahf
fisttpll
paddusw
sbb
xor
out
dec
movsl
push
lock
add
in
adc
repnz
test
js
scas
cld
leave
clc
push
int3
cwtl
xchg
imul
xor
sti
add
and
scas
es
pop
xor
loop
cltd
je
hlt
or
clc
je
hlt
sbb
in
fnsave
clc
mov
fisttpll
addb
inc
add
aaa
xchg
icebp
adc
in
sub
in
test
inc
out
mov
pop
pop
and
pop
fidivs
cmpsl
dec
mov
cmp
xchg
scas
push
mov
je
add
dec
jg
jg
dec
pop
cmp
mov
pop
fsub
adc
roll
dec
fucom
cld
or
mov
jmp
cli
sub
sbb
lcall
mov
sub
and
fcomi
clc
fadd
cwtl
and
sub
xchg
xchg
inc
addr16
das
stos
out
fs
mov
add
push
dec
rcr
push
adc
cmpsl
pop
inc
adc
mov
iret
andl
jle
jnp
push
jp
sahf
xchg
aas
scas
adcl
add
dec
xchg
je
dec
mov
fsubrs
outsl
nop
sbb
pop
inc
insb
in
sbb
out
adc
pop
push
js
cmp
push
sahf
gs
in
pop
mov
jb
ljmp
push
mov
sti
sbb
adc
sub
stos
xor
aaa
mov
std
adc
add
and
scas
dec
pop
sbb
outsl
in
fdivrp
cmp
and
clc
cmp
outsl
sbb
sbb
mov
pop
dec
test
sub
out
clc
ror
call
inc
bound
jae
je
pop
outsb
aas
leave
test
imul
loopne
rcrl
lods
xor
aaa
popa
sbb
popf
out
pop
cli
ret
in
jecxz
and
xor
adc
shlb
cld
ljmp
lahf
pop
inc
iret
pop
repnz
adc
jne
and
pop
pop
xor
xchg
ror
mov
notb
negl
repnz
pop
gs
sub
les
test
in
in
cli
xlat
or
aad
sbb
leave
mov
out
push
and
mov
cli
cmp
mov
or
aam
add
je
xor
push
test
cli
inc
test
imul
mulb
jle
mov
sahf
push
push
stos
loopne
imul
jno
aas
mov
push
inc
fcmovnu
xchg
add
mov
inc
pusha
pop
in
call
xor
ret
testb
testb
xor
pop
nop
mov
repz
lock
sub
hlt
push
dec
pop
flds
jo
pop
imul
mov
dec
cmpsl
jmp
in
pop
pop
add
lock
stos
and
lods
lret
leave
xor
mov
add
sub
stc
lock
add
xchg
fistl
out
addr16
jecxz
shll
fistps
pop
pop
or
xchg
cmc
jl
mov
mov
mov
jp
pop
test
push
imul
mov
incb
into
dec
sub
std
xchg
mov
aam
lock
sbb
xlat
stc
adc
pop
xor
xchg
mov
lock
lock
push
loope
sub
mov
stos
mov
push
adc
pushf
repnz
stos
fwait
mov
lock
inc
in
insl
insl
cwtl
xor
mul
test
mov
std
adc
test
jbe
cmp
iret
push
push
popf
add
pop
push
sub
leave
inc
out
add
mov
jecxz
inc
addr16
add
push
sbb
push
sbb
aad
jno
lods
jne
test
out
loopne
das
in
std
push
mov
cld
in
adc
daa
mov
clc
adc
clc
mov
pop
in
test
test
mov
movsl
cmp
aam
push
stos
push
lea
pop
mov
inc
mov
xchg
push
aad
cmp
fbstp
lea
mov
cmp
fucom
inc
sbb
fdivs
jne
jp
ljmp
mov
mov
cmpsl
les
imul
rorl
das
gs
jmp
popf
aas
rcrb
testb
add
in
and
pop
jb
mov
mov
lock
imul
jmp
dec
stos
aad
xchg
cmp
push
out
xor
in
ficompl
nopl
mov
pop
xchg
add
push
popf
inc
int
out
out
inc
imul
cld
repz
daa
mov
cmpsb
xor
mov
dec
out
in
nop
ja
and
hlt
lds
mov
std
sbb
cmp
stos
ret
pop
ja
iret
mov
xchg
ss
popf
loopne
aas
cmp
fstl
sub
add
pop
cmp
lds
aas
inc
cli
nop
js
insl
je
mov
xchg
pop
push
xor
or
sub
fistps
add
adc
or
xor
add
repnz
jg
mov
ljmp
add
xchg
cmp
jl
mov
push
push
sbb
lahf
dec
xlat
mov
xchg
xchg
lahf
xchg
cmp
popf
jb
xchg
lock
loopne
xchg
pop
sqrtps
es
sub
mov
sbb
xchg
fsubrs
dec
bnd
mov
btr
call
cmp
sar
fcmovnbe
adc
js
sub
daa
enter
imulb
pop
mov
pop
mov
lock
xor
push
pop
mov
add
je
lock
mov
mov
adc
mov
xchg
test
xchg
mov
stos
jle
iret
repz
pop
xchg
mov
mov
mov
mov
xlat
pushf
pcmpeqd
or
aam
xor
xchg
mov
inc
cwtl
xor
call
cld
push
lcall
or
outsl
or
filds
out
popf
js,pt
scas
mov
adc
mov
ds
out
leave
pop
push
jae
sub
pop
xor
adc
repnz
jo
mov
or
movsb
mov
adc
loopne
jmp
xor
mov
sbb
pop
cmp
jbe
nop
lods
nop
idiv
mov
nop
xlat
iret
fcmovnbe
iret
in
mov
out
out
outsl
jl
ljmp
test
pop
int3
jne
sub
xor
or
cld
arpl
xchg
and
push
push
iret
sub
sub
lret
hlt
push
stos
pop
in
or
arpl
mov
lock
fcoml
pop
int
sbb
lock
and
xor
notl
pushf
movsb
sub
out
jmp
cwtl
push
or
rcll
dec
mov
lock
js
out
pop
jle
push
cld
dec
inc
sbb
pop
dec
mov
dec
sub
jecxz
dec
jbe
dec
dec
mov
jecxz
dec
push
mov
ja
mov
inc
xor
out
and
stc
sbb
mov
cwtl
and
in
mov
push
fs
mov
aam
ret
pop
cmp
xchg
add
fcmovne
call
fistps
lds
call
scas
cmpsl
add
movl
shrb
sub
mov
loopne
pop
repz
nop
jl
fs
cmc
jcxz
aad
and
out
mov
fistps
and
sub
daa
ds
xchg
mov
xor
add
repnz
test
repz
fdivp
je
sub
xor
call
mov
incb
loopne
into
and
js
and
rcrb
xlat
ret
jmp
cltd
dec
imul
xor
add
xchg
mov
adc
cmp
xchg
push
cmp
mov
and
outsb
pop
icebp
aaa
pushf
mov
adc
hlt
sbb
call
adc
arpl
xchg
repz
adc
xchg
lahf
cmp
gs
cmp
stos
aaa
cmp
fmuls
xor
dec
rcr
repnz
lret
dec
xchg
mov
movsl
fsubs
mov
xchg
xchg
and
cmp
iret
subb
inc
xchg
push
out
inc
jno
xlat
push
lock
iret
xor
xlat
lock
clc
jl
xor
xlat
lock
jge
cwtl
and
cmp
cwtl
lock
adc
je
push
xchg
adc
out
mov
mov
dec
jbe
rorl
jecxz
dec
push
mov
repnz
mov
addl
cmp
dec
in
fwait
jp
sarl
test
cld
dec
jge
test
xchg
cmc
testl
push
inc
adc
mov
add
cld
fcmovnbe
xor
xchg
sub
jns
xor
dec
fildll
mov
sub
aas
sbb
movsl
mov
xchg
or
inc
adc
fld
clc
rcl
scas
cmp
pushf
jl
mov
pop
mov
xor
sbbl
imul
aad
sub
clc
outsl
xchg
in
rolb
std
push
pop
gs
in
xchg
inc
test
cmp
out
push
das
inc
outsb
push
xchg
bound
js
scas
or
adc
jae
cmp
sbb
stos
shlb
push
xchg
jbe
mov
movsb
mov
dec
push
adc
nop
leave
add
adc
lods
aaa
and
cs
mov
adc
and
sahf
mov
je
fnstenv
ds
dec
dec
cmpsb
or
add
popa
out
bound
js
push
outsb
push
mov
cli
adc
aad
idivb
push
cmp
cs
or
mov
cmp
rcll
das
and
in
outsb
lods
mov
lods
les
nop
ret
pusha
pop
iret
xor
sti
sbb
inc
pop
std
call
in
sbb
xchg
popa
in
lret
data16
inc
xor
mov
and
negb
lcall
bound
out
xor
pop
insl
jp
out
jge
outsl
test
cmpb
mov
pop
inc
jg
in
mov
pop
ss
pop
jo
jmp
jp
mov
mov
push
dec
mov
ss
pop
adc
lock
gs
and
lock
mov
mov
mov
or
adc
cmpsb
std
lock
mov
and
mov
imul
jp
mov
jbe
or
dec
icebp
adc
cmpsl
sarb
push
and
add
loope
sub
push
pop
jle
enter
xchg
xchg
mov
lahf
cmp
repnz
add
and
fwait
mov
cmp
scas
rcl
and
dec
test
sub
lea
pop
mov
lahf
cwtl
mov
gs
push
jmp
movsl
inc
movsl
xor
mov
xchg
and
enter
gs
xlat
lcall
insb
pop
mov
rol
addr16
ds
pop
mov
jae
fbld
ds
xor
xor
fwait
mov
cmpsl
loope
push
aad
mov
xor
addr16
mov
es
xchg
mulps
fmuls
mov
jecxz
lret
inc
add
mov
jecxz
icebp
xchg
outsl
mov
mov
pop
je
out
ficoms
sbb
lcall
xchg
jne
into
inc
push
sub
pusha
aaa
out
push
sbb
xchg
loopne
inc
jmp
and
shl
mov
subl
push
or
mov
jmp
negb
fucomi
pop
nop
outsb
or
rolb
jmp
jg
mov
ljmp
fimull
pop
push
iret
cmp
xchg
push
test
xor
lahf
testl
jl
xor
fdivs
jl
add
push
jle
sub
int3
adc
mov
sub
fsts
add
mov
xor
mov
mov
leave
in
sub
nop
jae
push
pushf
out
lret
sub
nop
ljmp
cwtl
sub
mov
mov
xchg
or
pop
into
int
shlb
pop
lcall
mov
xlat
xchg
stos
jl
cwtl
fwait
mov
lods
mov
roll
in
add
pop
mov
aad
ret
fsts
sub
scas
fildl
xchg
lcall
out
aaa
push
xchg
aad
ret
dec
pop
adc
cmp
lret
inc
addr16
cmp
inc
sub
fnsave
insb
push
outsl
mov
in
mov
add
pusha
enter
lret
inc
add
mov
mov
nop
sbb
fisubl
pop
mov
jno
shl
inc
gs
orl
in
scas
ret
mov
xchg
imul
rep
ss
push
xchg
pop
out
orb
inc
xchg
fisubrs
and
xchg
push
sti
cmp
daa
fdivrs
sbb
fucomi
out
and
fucomi
jno
adc
cwtl
add
aad
gs
lret
jne
xlat
das
mov
push
arpl
scas
call
mov
mov
pusha
lock
arpl
sub
mov
insb
out
add
lcall
xor
hlt
inc
arpl
pop
int3
or
adc
icebp
jp
aas
scas
xchg
adc
test
fwait
call
and
out
xor
sbb
push
insb
repnz
jnp
or
ret
int3
mov
mov
sub
idiv
test
jmp
xchg
sbb
fbstp
adc
xchg
repnz
xchg
inc
test
lcall
mov
add
loope
cwtl
inc
test
sub
push
sub
pusha
aaa
push
jno
mov
sbb
lcall
jl
adc
mov
into
dec
jl
aam
nop
adc
mov
repnz
mov
and
cli
dec
test
add
addb
insl
inc
dec
cmp
mov
leave
lahf
push
fwait
inc
aam
stos
xor
mov
push
outsl
fsubrs
cmp
push
cld
shr
shrb
addr16
fildll
or
nop
dec
mov
sub
out
xor
dec
es
roll
fadds
fildl
int3
hlt
sbb
or
aam
fistpll
pop
shrb
pop
sub
xor
lcall
movsb
jp
ds
sahf
mov
mov
outsb
lods
pop
insb
testb
sbb
sbb
aam
dec
fldl
mov
mov
shlb
push
mov
aas
mov
repnz
sbb
leave
call
adc
add
mov
outsl
std
cmpsb
jmp
in
sbb
test
loope
cmp
lcall
mov
dec
jb
push
ds
inc
loopne
sahf
rcll
inc
dec
movsl
mov
mov
mov
mov
push
mov
icebp
test
in
add
ljmp
mov
cmp
dec
inc
adc
pop
ljmp
mov
fdivr
or
xchg
pop
xchg
cmp
xchg
mov
cmp
aad
int
ljmp
cmp
insb
jmp
call
cwtl
dec
adc
pop
cwtl
mov
clc
dec
fisubl
dec
sarb
out
jmp
sub
test
imul
cwtl
xlat
dec
in
arpl
ret
aad
cmp
inc
pop
icebp
ds
dec
jp
jo
xor
int3
cli
call
sub
push
outsb
repnz
mov
cli
pop
scas
leave
repz
mov
loope
das
int3
imul
jno
loop
sbb
aaa
jecxz
shlb
into
push
out
xchg
xchg
pop
push
sub
sbb
dec
test
sbb
mov
xor
pop
jno
call
jmp
insb
in
stc
cwtl
and
sbb
and
mov
mov
pop
sub
sarb
mov
sti
cld
lea
pop
hlt
lock
ljmp
divl
js
lea
gs
ljmp
mov
or
mov
jmp
push
jmp
pop
lds
dec
notb
mov
mov
dec
data16
push
or
mov
adc
ljmp
iret
xchg
lds
ljmp
mov
cmp
jp
cwtl
push
push
movsb
into
dec
loop
adc
fwait
sti
mov
push
sahf
int3
jl
push
dec
cs
sub
cli
sub
mov
lods
shlb
sbb
iret
adc
inc
and
repz
imul
bound
push
into
jnp
cmc
add
cmp
aad
xor
cmp
stos
aam
sub
cmpsb
gs
lahf
out
repnz
aas
xchg
je
addr16
or
jecxz
mov
sub
or
mov
jo
cmp
fistps
jno
jne
div
loopne
sbb
out
mov
les
jae
cmp
subb
insb
jae
aad
adc
lea
dec
mov
dec
divb
sbb
push
pop
leave
imul
dec
xchg
sbb
out
jg
call
negb
push
imul
xlat
fbld
dec
adc
mov
insb
xor
popa
jnp
fsubr
cli
out
cmp
jmp
outsb
sub
xor
push
lods
outsl
movsb
movsl
test
jno
inc
arpl
pop
xchg
popf
cmpsb
mov
add
popf
inc
sub
add
xchg
incb
jmp
call
jae
add
cwtl
mov
fsub
push
les
or
rclb
ss
popf
movsl
inc
mov
cmp
leave
rclb
and
sbb
mov
aaa
cmpsl
and
in
fisubrl
mov
dec
stos
movsl
mov
add
dec
ljmp
movsl
faddl
fldl2e
and
out
popf
push
push
mov
mov
jno
mov
sbb
test
xchg
mov
jge
jo
cli
inc
loope
cmp
scas
cld
inc
push
sbb
dec
jne
mov
dec
jo
jno
or
cmpsl
ret
ss
out
into
xchg
mov
mov
jge
xchg
or
adc
xchg
add
out
pxor
push
xor
fldl
adc
mov
outsl
mov
fucomi
adc
xor
and
and
xor
sbb
outsl
pop
ds
mov
add
insb
jg
stc
hlt
call
lds
movsb
adc
mov
xchg
mov
dec
add
xor
xor
push
ljmp
insb
sub
dec
out
sbb
cmp
add
scas
out
mov
and
add
stos
adc
call
add
inc
js
mov
adc
lea
aaa
gs
repnz
imulb
jmp
mov
mov
or
xchg
or
fs
sti
mov
into
in
in
mov
int3
push
lret
lods
mov
scas
inc
xchg
dec
dec
addr16
lods
mov
es
jno
stc
movsl
fwait
jle
or
jnp
or
sub
sub
push
sbb
xor
lods
das
sbb
int
jg
push
dec
aad
hlt
push
out
add
in
sub
sbb
jbe
subl
adc
cld
push
sbb
sarb
movsl
mov
add
pop
cmpb
imul
lcall
clc
mov
mov
adc
push
lock
fcmovne
push
inc
dec
xlat
cmpsl
add
ja
lods
push
vmread
outsb
xchg
xlat
test
scas
stos
addr16
mov
push
outsl
dec
addr16
hlt
push
ja
jne
clc
mov
push
call
fiaddl
sub
dec
xor
dec
mov
aad
jl
mov
insb
aaa
jg
mov
out
mov
mov
fnstenv
iret
out
inc
push
cmc
push
push
pushf
mov
cwtl
lods
and
std
ljmp
imul
mov
stos
les
ja
push
fldt
mov
dec
shr
in
cli
call
leave
cld
mov
dec
les
fldt
xchg
cmp
and
adc
xchg
out
sbbl
cmp
push
in
flds
loope
push
mov
shl
mov
mov
push
out
mov
fsubrs
dec
and
and
or
shlb
xchg
testb
lret
cmpsl
test
test
xchg
outsb
push
mov
gs
lds
jo
inc
aad
call
adcb
inc
lret
mov
add
or
mov
movl
addr16
in
fwait
mov
movsl
mov
xor
ja
test
sub
fistpll
cmc
push
pop
int3
orl
push
js
xchg
js
movsb
jo
pop
aad
call
adcb
ss
ja
fimull
divl
ret
pushf
cmp
mov
add
mov
mov
sbb
jns
pop
jl
rcll
jle
mov
pushf
add
push
mov
dec
xor
cmp
int3
pcmpgtw
lock
push
mov
ret
sbb
int3
pop
sub
je
sub
sti
sti
mov
sbb
movsl
sub
fimull
roll
cmc
fsts
dec
push
cwtl
dec
aad
sbb
iret
push
out
or
lock
es
push
fisubrl
or
outsl
stos
cmp
push
mov
outsl
es
inc
ret
jl
jmp
je
in
mov
dec
dec
mov
dec
out
jp
fwait
imul
inc
or
fsub
loope
dec
into
repnz
xor
mov
es
fstps
cwtl
shll
lea
xor
rcll
dec
insb
sub
cmpsl
xchg
pop
not
aas
and
fisubrs
movsb
iret
int3
cld
test
cmp
mov
inc
push
adc
testb
and
aam
adc
popa
add
mov
lock
outsl
imul
int3
aaa
lock
imul
cltd
xlat
jp
call
out
test
xchg
imul
cs
mov
cmpb
push
inc
and
sub
andb
pop
lret
imul
leave
ret
cwtl
lods
lcall
jecxz
adc
dec
push
clc
shr
pop
mov
out
jg
testl
mov
pop
imul
punpckhwd
jg
aas
mov
pop
imul
imul
das
imul
aas
sti
call
aad
sbb
lock
popa
dec
addl
push
cli
rolb
jns
daa
fs
cmp
inc
mov
enter
xor
test
cmp
lods
sbb
cmpsl
xchg
ja
incb
adc
mov
fstl
ljmp
add
ja
xlat
test
orl
jl
nop
or
insb
xchg
inc
inc
loope
imul
lock
pop
nop
or
fcmovne
sbb
inc
push
sub
imul
dec
mov
cmp
add
or
repnz
movsb
rolb
pop
jae
gs
jmp
adc
push
add
jecxz
arpl
loopne
and
adc
repnz
pop
cld
mov
sbb
ret
popf
xchg
cmp
stc
sbb
push
neg
fisubrl
dec
adc
mov
push
je
in
jp
pop
sub
pop
insb
push
sbb
push
je
inc
xlat
rclb
cwtl
filds
iret
fwait
xor
pop
dec
adc
daa
aam
iret
push
out
aad
dec
pushf
push
je
sub
and
movsb
mov
leave
cwtl
popa
cmp
in
jo
in
test
test
xchg
insb
sbb
mov
add
mov
arpl
arpl
mov
test
fimull
mov
cmp
hlt
cmp
push
mov
in
aad
js
fbstp
dec
pop
or
hlt
push
add
push
push
mov
iret
out
push
fldcw
cmp
xor
sub
inc
dec
in
jmp
movsb
dec
cmp
mov
push
cmp
adc
push
push
inc
mov
push
mov
inc
xor
rol
iret
imul
inc
pop
or
lods
sub
mov
stos
sbb
push
pop
pop
push
mov
notb
mov
lahf
das
insb
mov
insl
push
in
jbe
stc
ffreep
push
sbb
dec
movsb
add
iret
fistps
mov
andl
pop
je
push
mov
xor
inc
lcall
xor
das
inc
adc
mov
dec
lahf
dec
loope
mov
ljmp
int3
xor
call
out
les
test
in
cmpsl
aad
dec
data16
add
dec
mov
cwtl
hlt
dec
jbe
aaa
daa
push
xchg
adc
mov
pop
push
out
adc
push
jno
dec
jo
or
jae
cli
sub
test
jg
jl
out
cs
mov
gs
jle
shll
mov
cmpsl
adc
xor
mov
xchg
cmp
mov
rol
jge
sbb
mov
test
shlb
fimuls
out
loope
jg
dec
xor
sbb
mov
and
ds
daa
mov
sbb
out
add
cmp
shl
xlat
mov
cwtl
xchg
xlat
mov
dec
gs
cmpsl
sub
repnz
jecxz
push
stos
cmpsl
sti
cwtl
sub
sub
loopne
ret
jae
jp
test
in
lock
aad
sbb
push
repz
outsl
push
mov
lret
imul
adc
push
repnz
push
xchg
sub
imul
fwait
dec
cld
repnz
add
mov
add
push
inc
outsl
movlps
cwtl
sub
or
mov
cmc
sbb
xor
mull
aaa
movsb
or
popa
sub
push
roll
xchg
jbe
fcomip
iret
mov
lods
in
xchg
push
es
call
hlt
addr16
jbe
cmp
sarb
mov
inc
in
push
xchg
xorl
call
inc
mov
add
aad
push
xchg
xchg
ds
repz
fcoml
sbb
cmp
jmp
ret
add
lea
inc
pop
je
add
loopne
lcall
fcomps
clc
mov
cmp
addr16
addr16
sub
inc
repz
mov
push
cwtl
jg
sti
out
xchg
dec
test
cmp
arpl
cmpsb
xor
push
and
sub
or
adc
mov
dec
mov
in
dec
jo
gs
ljmp
cs
mov
cs
sub
hlt
mov
int3
aad
rcrb
sbb
or
mov
pop
into
imul
std
addr16
xor
testl
in
lret
xchg
jo
inc
xchg
in
mov
in
lods
fwait
lods
call
sti
pminsw
addr16
dec
mov
lods
rcll
sbb
stc
jl
les
push
jo
mov
pop
hlt
mov
mov
xchg
fs
cmpsb
fsubrp
fstpt
lods
and
int3
dec
dec
mov
mov
fisubs
cmp
and
cmp
xlat
nop
cmpsl
cmp
cwtl
push
pop
aam
cltd
jae
pop
call
push
pop
mov
sbb
sahf
js
fwait
sub
int
xchg
xor
mov
int3
push
dec
xchg
adc
mov
jge
int
sub
imul
notl
jmp
js
ljmp
mov
mov
adc
xchg
out
mov
ss
mov
fcom
jno
inc
repnz
xor
lret
andl
sti
cmp
inc
push
test
testb
add
pop
adc
jne
scas
or
call
cld
jb
movsl
hlt
fildll
xchg
rcll
fnstenv
js
mov
cmpsl
push
sub
icebp
lcall
xchg
xchg
leave
inc
add
imul
mov
mov
out
test
scas
push
movsl
pop
add
in
xor
dec
loopne
movl
sub
add
jae
outsl
fisubl
jb
loope
push
jecxz
push
rcll
insl
mov
adc
andb
inc
add
dec
add
cmpsb
push
push
push
push
xlat
mov
dec
data16
xchg
dec
int3
or
in
mov
aaa
pushf
xor
dec
inc
and
pop
push
jge
mov
xlat
push
test
push
inc
repz
ja
mov
mov
lcall
cli
xor
lahf
jp
push
mov
push
in
fbld
mov
mov
rorl
or
cwtl
add
aas
mov
aad
add
xchg
cmpsb
negb
push
or
rclb
or
in
sbbb
and
inc
pop
xor
adc
adc
loopne
rcll
in
mov
and
insb
dec
scas
xchg
pop
xor
jo
rcrl
xchg
mov
mov
adc
push
ds
mov
cmc
sti
pop
xchg
adc
cwtl
lods
jno
mov
adc
lods
movsb
lock
xor
popf
xlat
jno
addb
xchg
outsb
mov
cmp
pop
aam
xchg
push
test
dec
pusha
adc
sbb
repnz
xor
xlat
inc
js
incl
insl
mov
loopne
incl
inc
rcll
xor
xchg
jmp
out
sbb
and
imul
fistpl
jl
out
lods
pop
push
jno
jno
fcmovne
jne
in
inc
pop
mov
xlat
jns
jmp
fnstenv
mov
or
mov
inc
movsb
jmp
dec
inc
push
pop
cmpsl
xchg
test
push
ret
xchg
push
nop
xchg
cwtl
scas
inc
lret
mov
pop
mov
test
cwtl
mov
fwait
mov
pop
inc
call
pop
loop
mov
gs
pop
imul
lea
pop
sbb
add
in
test
addr16
imul
gs
cmpsl
inc
addr16
out
int3
sbb
xchg
out
test
insb
mov
movsb
stc
pop
cld
mov
lea
pop
ja
adcl
in
lret
add
or
adcl
imul
dec
fldcw
sets
cwtl
iret
and
shrl
inc
mov
fmuls
gs
insl
jmp
cmp
les
fisubl
outsb
jae
outsl
out
xor
sarb
outsl
outsl
push
mov
or
and
mov
or
mov
imul
gs
cmp
or
jb
aaa
cmc
fidivrl
push
inc
sub
hlt
sub
push
mov
and
sub
mov
xchg
out
ja
xchg
sahf
nop
ja
loop
xchg
sbb
mov
jno
cld
jl
ret
idiv
shl
shll
sub
test
int
fwait
mov
inc
mov
xchg
fwait
outsl
fcoms
push
xlat
add
push
lods
dec
and
sbb
mov
jmp
mov
and
inc
iret
jae
aad
mov
mov
jl
xor
jo
ja
sbb
imul
ds
jmp
and
leave
mov
clc
xchg
inc
cmp
inc
dec
ljmp
push
sub
nop
test
hlt
sarb
add
nop
ja
sub
in
or
cmp
andb
sub
int3
in
sub
mov
int
mov
mov
inc
jge
mov
call
ss
out
test
mov
mov
inc
xor
push
adc
movsb
clc
testb
nop
adc
shll
cmp
mov
xchg
mov
addr16
shr
daa
sbbl
aam
pop
roll
push
out
pop
jbe
call
jo
shrl
push
leave
lahf
gs
call
lret
out
and
sub
mov
push
cmpsl
xchg
cmpsl
sbb
jb
push
add
incb
inc
insb
sti
xchg
xor
xlat
testb
icebp
gs
mov
adc
fisubrs
mov
test
out
shl
pop
pop
mov
jmp
pop
push
dec
pop
imul
mov
add
jno
add
jo
mov
mov
rclb
push
xchg
frstor
popa
lcall
mov
cmp
inc
sbb
pop
call
and
inc
push
aaa
or
or
cwtl
in
int
pop
xchg
sahf
sarb
pop
lcall
bound
sub
shr
and
call
in
xchg
ds
cmp
sbb
mov
jg
cmp
xchg
cmpsl
insb
fldt
movsl
call
push
clc
das
cmp
cmc
mov
je
out
or
gs
sub
imulb
idiv
test
add
ret
nop
arpl
mov
int
mov
inc
jecxz
fs
mov
pop
xlat
cmpsb
sub
jl
sarl
jae
push
and
xchg
aam
push
sub
cld
sub
jne
in
inc
in
sub
pop
ljmp
cwtl
sub
fistps
js
cmpsl
push
and
int3
std
push
arpl
js
imul
ficomps
outsl
mov
imul
inc
mov
sbb
cli
out
pop
xor
sub
fdivr
fbstp
mov
lea
inc
outsb
fcompl
cmp
jno
jmp
mov
stc
mov
xor
mov
xor
insl
aam
add
fcmovne
ja
or
aas
pop
fs
out
sbb
add
int
je
into
sbb
loopne
cwtl
dec
jno
iret
orl
jnp
cwtl
out
rcll
xchg
outsl
mov
faddp
fwait
mov
push
int3
in
sub
add
lret
icebp
push
dec
aad
or
pop
mov
cmp
iret
decb
shr
shrl
push
mov
fwait
inc
mov
mov
ret
jl
push
aam
mov
movsl
ljmp
movsb
lret
and
xchg
out
push
dec
cld
rorl
fdiv
lock
lock
fcoml
test
xchg
int3
xor
imul
cld
xchg
cmp
ja
out
addr16
xchg
push
push
hlt
in
dec
xchg
imul
lock
cwtl
push
lret
add
rcl
dec
cmp
mov
aad
arpl
mov
std
or
insl
or
adc
inc
pop
mov
jmp
popf
in
fstpl
pop
inc
mov
rcrl
imul
aad
lret
das
cmp
in
sub
roll
movb
ds
scas
inc
and
pop
fdivr
or
xchg
xor
popf
in
or
mov
mov
inc
or
push
push
mov
adc
mov
and
and
ss
add
fisubrs
test
mov
xchg
test
pusha
adc
sub
dec
in
and
repz
int
push
push
xor
mov
push
int3
xchg
cwtl
push
push
dec
sahf
and
js
pop
lcall
mov
gs
loop
push
push
push
mov
or
cmc
push
mov
addb
test
aad
in
ficompl
incl
pop
ss
outsl
dec
pusha
mov
sbbl
xlat
sarl
pop
jle
mov
iret
adc
js
add
dec
jbe
add
push
sbb
pop
out
push
out
jl
push
gs
fstps
movsb
icebp
lock
dec
stc
in
mov
or
mov
ss
fmul
cmp
pop
popf
jb
sub
or
test
repz
fcmovnb
sbb
mov
mov
fildl
xlat
cmc
push
push
fimull
inc
push
scas
fsubrs
in
mov
cmpsl
lock
mov
xlat
es
mov
and
lret
lods
iret
mov
push
push
xor
mov
or
dec
xchg
lods
jne
adc
fimull
push
jbe
aad
mov
xlat
test
cmpsb
sub
aas
push
ss
inc
ficoml
in
pop
repnz
std
popf
mov
xchg
pop
sbb
mov
mov
cmp
lock
dec
fistpll
iret
inc
rcll
and
stc
into
mov
fadds
mov
fsubr
fdivrs
jmp
xchg
pusha
mov
out
loopne
inc
mov
jle
fstpl
jmp
jo
xchg
cld
filds
testl
stos
dec
push
test
fisubl
cld
push
and
aad
adc
mov
gs
fisubl
dec
test
mov
push
test
and
adc
int3
push
xchg
mov
out
mov
lods
dec
sub
xlat
cmp
cmpsl
mov
or
iret
add
fstl
addr16
das
push
outsb
cwtl
iret
add
movsb
gs
pop
adc
aas
dec
pop
push
pop
dec
cmp
int
jmp
cwtl
add
mov
sbb
jns
mov
popf
xchg
ss
fiaddl
sub
sub
pop
and
roll
cmp
pop
push
scas
push
popf
lret
cmp
mov
lods
xchg
push
out
nop
lds
insb
pop
nop
test
fwait
jno
scas
iret
mov
cmp
fwait
cwtl
test
test
les
repz
or
dec
push
cmp
lods
les
xchg
addr16
push
xor
dec
xlat
jne
adc
dec
clc
aam
stos
fnstsw
push
shl
in
jecxz
call
ror
out
xlat
dec
cmp
cmc
xlat
push
cmp
lahf
pop
test
xchg
jbe
adc
lret
pop
push
lds
dec
outsb
inc
sarb
cmp
jl
mov
imul
and
cmp
int3
ret
push
roll
push
and
aaa
pushf
adc
inc
push
dec
ret
pop
jo
in
jae
jl
inc
mov
in
lret
cmpsl
fdivs
jno
sub
mov
or
xor
cmp
inc
aas
in
mov
dec
xchg
push
jmp
pop
in
mov
sbb
pop
gs
add
inc
repz
cmp
shll
mov
dec
sub
inc
addr16
add
call
lcall
sbb
shll
inc
fstl
sbb
adc
jns
mov
call
into
pop
pop
iret
test
ficompl
jg
sub
in
push
inc
outsb
gs
mov
aad
and
push
dec
push
xor
and
addr16
jno
sub
and
xchg
ljmp
pop
cli
xchg
cmp
jae
add
ja
aam
imul
aam
lds
test
nop
ljmp
fisubl
shl
loop
dec
push
xlat
std
fldt
mov
fimuls
xor
movb
push
fisttpll
jns
lock
jno
flds
imull
popa
sub
test
cmpsl
pop
fs
int
adc
dec
or
aas
sarb
pop
cmp
push
out
cmp
lods
repnz
and
dec
cltd
jb
mov
sbb
xor
sbb
add
push
or
mov
mov
ret
add
aas
and
mov
inc
addr16
jmp
jbe
mov
in
loopne
jl
lock
loop
int3
cmpsb
jecxz
mov
cmp
inc
xor
xchg
jb
add
push
xlat
pop
cmp
int3
hlt
dec
jl
pop
call
mov
lods
fstpt
add
ja
and
lret
xchg
adc
dec
inc
sub
clc
mov
xor
stos
fmuls
push
call
jae
movsb
ret
pop
loope
add
lock
cltd
cwtl
decl
xchg
lret
imul
testl
xlat
je
sub
lahf
pop
mov
sub
imul
sarb
iret
mov
add
push
aad
divb
call
mov
push
mov
xchg
ljmp
mov
sbb
sub
inc
xor
rol
out
es
mulb
inc
fidivrs
out
leave
aad
iret
xchg
dec
xor
call
mov
fmuls
cltd
stos
jae
int3
shl
adc
aad
sbb
jne
cmpsb
adcb
pushf
cmp
mov
in
mov
inc
push
into
addr16
mov
shl
and
aas
decl
movsl
pop
add
loope
inc
fcoml
ss
mov
mov
loope
mov
push
adc
adcl
cmp
cmc
sub
in
popf
or
sbb
lcall
push
push
xlat
mov
out
mov
jno
aad
jbe
arpl
pop
mov
pop
stos
dec
jbe
mov
sbb
mov
add
add
insb
iret
or
sbb
repz
pop
jae
sub
mov
test
jl
cmpsl
lds
nop
in
jle
test
js
nop
jbe
adc
cmc
sub
xor
test
xchg
rol
push
out
inc
mov
out
pop
and
fmuls
roll
push
scas
stos
outsl
xor
iret
mov
dec
mov
pop
lods
and
push
imul
fstpt
jbe
mov
fildll
out
clc
outsb
dec
push
test
add
aad
push
test
ficoml
nop
lods
jo
rcll
dec
test
push
std
and
test
inc
cwtl
shll
push
test
dec
mov
and
fmulp
and
sbb
call
fstpt
aas
lcall
movsl
loopne
add
adc
mov
cmpl
mov
inc
sub
mov
mov
nop
gs
add
in
mov
mov
std
dec
push
aam
cmp
or
out
push
mov
jecxz
xor
icebp
loope
pop
ss
and
lds
or
pop
cld
clc
test
out
mov
xchg
cld
es
add
je
sbb
mov
lcall
push
out
mov
mov
push
dec
xchg
cwtl
filds
mov
movsl
dec
push
cwtl
out
test
push
pop
dec
mov
jmp
scas
jl
leave
push
pusha
xor
xor
sub
iret
jecxz
fldl
lret
inc
cmpb
and
dec
xlat
mov
add
gs
cwtl
or
das
cmp
cs
repnz
xchg
sub
icebp
sahf
sbb
mov
mov
jno
xchg
xor
xchg
pushl
mov
inc
dec
xchg
mov
mov
adcb
mov
fsub
test
aad
test
scas
xor
orb
xor
call
xchg
sub
lahf
stos
gs
pushf
push
js
cmc
mov
mov
jmp
aaa
push
ficompl
push
addb
orb
sarl
cli
sub
or
clc
mov
int3
out
in
xlat
sarb
int
shll
jl
lea
movsb
pop
cmp
cmp
ret
pop
fists
xor
dec
test
lret
sub
pop
jo
aas
aas
jno
in
mov
pushf
sub
inc
subb
xor
repnz
shrl
pop
ds
lret
into
bound
cmp
mov
jno
sub
or
adc
pop
or
ljmp
push
in
sti
clc
xchg
enter
icebp
ret
pop
jecxz
sub
shlb
push
movsb
fimuls
dec
jnp
in
cmp
mov
mov
imul
mov
shll
push
aad
pop
in
or
out
aas
aam
cli
lret
cmp
loop
jbe
aad
xchg
daa
push
cmpsl
sar
dec
fsubl
les
in
out
mov
mov
nop
cmpsl
insb
enter
lea
ja
mov
daa
imul
insb
add
mov
dec
orb
mov
adc
jg
and
ficomps
arpl
lds
dec
stos
jne
mov
xor
add
push
pop
adc
ljmp
sub
pop
xor
add
xchg
push
cltd
repz
sahf
lods
cmp
cmp
push
or
mov
leave
fs
push
in
imul
cmp
push
aas
push
jmp
cmc
xchg
push
rcll
fucomi
ja
xchg
loop
xor
jecxz
in
setns
cmpsb
or
dec
push
int
cmp
out
or
jne
push
dec
mov
add
ds
ret
mov
loop
mov
push
out
xlat
adc
es
push
orb
xchg
out
in
or
es
out
cwtl
push
cwtl
xchg
lods
test
arpl
les
xchg
xchg
inc
addr16
or
outsl
push
outsl
cmpsb
mov
cmp
fwait
cli
aas
or
insl
xor
cmc
fcomp
push
loope
xchg
inc
or
cld
je
jb
in
adc
push
loopne
push
gs
jae
sbb
jnp
test
pop
add
rcrb
leave
mov
out
stc
ja
xor
pusha
pop
lock
lret
mov
js
adc
fimull
pop
aaa
mov
mov
imul
mov
out
incl
adc
aas
js
xor
push
scas
push
notl
push
inc
xchg
pushf
mov
iret
jmp
sub
dec
mov
sub
mov
fistl
pop
into
addr16
mov
and
cmpsb
scas
adc
repnz
xor
mov
push
dec
out
lahf
sahf
pop
pop
stos
cmp
jo
in
jl
xlat
in
mov
sub
jecxz
icebp
push
inc
out
pusha
inc
iret
sbb
sbb
adc
fmull
test
fdivrl
int3
cmp
ds
addr16
cmp
icebp
mov
cmpsl
in
ljmp
adc
push
aas
loopne
mov
cmpb
into
enter
xchg
cwtl
and
add
mov
xor
mov
lret
push
jecxz
pusha
idivl
imul
mov
das
xor
stos
insl
lock
cmpsl
mov
lea
or
xchg
mov
add
cwtl
xlat
movl
jo
decb
test
mov
in
test
mov
loop
xor
dec
insb
cli
repnz
pop
shrb
movsl
sbb
jno
jmp
and
add
mov
stos
add
xor
in
inc
pushf
fstenv
test
jbe
insl
lock
js
mov
ljmp
push
fcomps
leave
jno
add
outsb
or
sbb
gs
xchg
or
inc
mov
mov
aas
iret
cmpsb
lea
sbb
mov
loope
test
jb
std
dec
in
cmp
mov
rclb
mov
inc
scas
xlat
sbb
cmp
or
rol
xor
aas
fsub
outsl
ljmp
jno
clc
hlt
mov
aaa
or
lock
push
gs
pop
je
mov
mov
mov
popf
sbb
imul
mov
xlat
and
stc
push
jl
sbb
xchg
cmp
jmp
js
push
pop
out
fcmovne
cld
imul
push
outsl
push
jl
or
addl
xchg
jae
int3
xor
cltd
test
scas
add
xlat
lds
fs
shll
jmp
rcrl
jb
mov
and
aaa
fiaddl
jne
ljmp
and
faddl
add
xor
ljmp
and
cs
scas
xchg
xchg
out
sbb
into
mov
sbb
popf
dec
dec
push
rcr
add
jb
cmp
xchg
les
xlat
loopne
loopne
add
jmp
out
shl
mov
nop
inc
dec
icebp
gs
xor
lret
sub
jp
push
jg
lea
fadds
inc
gs
mov
fs
cltd
lcall
testl
je
dec
movsl
pop
fs
cmp
xchg
push
popf
in
iret
repnz
pop
jo
movsl
push
addr16
ret
add
in
icebp
mov
ds
cmp
sub
dec
or
pushf
sub
add
imul
nop
dec
push
rol
test
fdivl
push
sbb
mov
je
inc
ret
ljmp
dec
js
aaa
test
mov
xchg
dec
jmp
inc
pop
movsb
test
roll
outsb
test
leave
mov
and
cld
dec
stos
cwtl
jl
daa
pop
mov
insb
sbb
cmc
iret
dec
in
push
add
sbb
lcall
jo
xchg
clc
cmc
mov
mov
cli
push
inc
cmc
push
mov
cltd
adc
cmp
test
xchg
scas
rcl
in
mov
pop
dec
or
cmp
fimull
cmp
mov
cmp
add
lods
jnp
dec
inc
push
push
lcall
cmp
mov
lods
scas
jmp
jecxz
xchg
pop
push
xlat
popw
cmpsl
pushf
push
in
or
cmpsl
cmpsb
mov
test
lods
gs
cld
cs
imul
rcrb
ss
adc
jp
inc
mov
in
popf
pop
pushf
int3
fiaddl
mov
jno
sub
xchg
pop
fs
iret
inc
xor
xchg
loop
adc
cwtl
cli
adc
cmp
stos
xchg
add
das
lret
andl
ss
mov
not
jp
stos
and
movsb
gs
jg
or
ficoml
sbb
or
add
sub
loope
lock
push
ss
imul
xlat
inc
test
stos
outsl
adc
lcall
and
mov
stc
push
jecxz
out
mov
or
shl
mov
xchg
mov
sbb
or
mov
call
and
sbb
icebp
ror
mov
xchg
mov
pop
stc
cmp
push
es
out
mov
mov
test
leave
cmpsl
jbe
fidivl
outsl
sarb
sbb
iret
pop
stc
insl
cmp
fcom
push
scas
sub
add
fildll
daa
xchg
dec
push
dec
add
jb
xchg
jno
notb
sub
dec
mov
cmp
mov
in
rolb
test
sbb
mov
insb
add
lcall
and
out
outsb
pop
pusha
pushf
pop
hlt
frstor
out
arpl
fisubrs
ret
imul
push
mov
fdivrs
sbb
inc
test
out
in
das
lea
dec
cs
ds
inc
push
les
mov
or
sbb
jp
jl
mov
sbb
inc
mov
xor
fdivr
or
jmp
jae
cltd
scas
jge
cmp
fwait
vmwrite
das
imul
cld
or
pop
icebp
aas
jl
ds
sbb
add
scas
push
inc
mov
xchg
pop
cmp
dec
mov
push
aad
mov
movsb
dec
or
ret
fbld
xchg
rol
xlat
mov
bound
mov
add
add
test
adc
push
push
clc
xchg
or
sub
loopne
sbb
repnz
mov
int3
lea
mov
mov
js
mov
out
xor
sbb
add
mov
ret
cmp
int
loope
cmp
insb
faddl
stos
lock
test
mov
xchg
clc
jno
inc
xor
sbb
adc
ret
push
xor
push
idiv
mov
cld
xchg
mov
iret
and
jecxz
dec
movsb
movsl
or
outsl
fstl
sub
mov
push
sub
repz
cwtl
data16
nop
push
jno
aas
xchg
pop
lahf
int3
subb
rorl
xor
lock
pop
div
mov
imul
ficoml
sbb
pop
fisttps
push
gs
cltd
divb
lods
imul
ja
ljmp
inc
xchg
out
push
add
loopne
sahf
popf
push
push
jbe
data16
cwtl
incb
mov
dec
lds
push
pop
cmc
pop
mov
push
nop
mov
mov
out
and
xchg
cmpsb
test
ret
repnz
adc
xchg
jge
arpl
fstp
cmp
movsb
lock
mov
nop
push
outsb
jae
lods
loop
mov
adcb
ss
lret
xlat
add
mov
dec
mov
mov
push
lcall
shlb
adcl
push
cwtl
addl
repz
jo
add
xchg
push
ja
inc
dec
lds
cmc
cmp
adc
push
mov
push
pop
dec
loope
push
mov
xlat
push
dec
mov
adc
jl
xor
jno
xchg
movsl
cmp
sbb
inc
movzbl
iret
imul
hlt
mov
test
xchg
lcall
shll
insb
mov
push
hlt
jb
lods
push
jle
out
or
cmpsb
push
xchg
mov
mov
gs
mov
aas
lahf
xchg
jno
dec
fsubs
cltd
adc
test
xchg
mov
in
adc
jmp
mov
shr
inc
fmull
pop
pop
dec
cli
xlat
dec
insb
dec
xchg
mov
clc
insb
imul
mov
test
mov
jmp
aaa
sub
clc
or
pushf
push
lods
push
rolb
add
lret
mov
or
mov
je
nop
jbe
ret
stos
add
aad
ja
out
fwait
or
es
lcall
popa
xchg
sub
sbb
jo
xor
into
inc
popl
es
or
dec
lea
dec
mov
jbe
and
out
ret
jg
iret
cmp
movsl
lret
pushf
js
out
mov
out
dec
cmp
popf
cmp
rorb
lock
dec
mov
hlt
inc
aam
jb
ljmp
lret
in
hlt
in
lds
cwtl
sbb
mov
cmp
repnz
cwtl
lcall
std
repz
adc
xlat
cltd
sub
popf
jge
sub
pop
imul
mov
out
out
ljmp
scas
aad
adc
test
mov
sub
mov
add
xlat
fmulp
add
or
test
test
sub
in
std
add
push
ss
cmpb
and
xchg
xchg
push
lahf
push
fdivrl
test
mov
mov
and
nop
clc
rcrl
nop
clc
andl
das
int3
fiaddl
push
ss
inc
test
pop
shlb
sbb
or
insb
lods
cmpl
pop
jne
cmp
lret
mov
cmpsb
sub
clc
sub
neg
insl
ja
pop
sbb
and
inc
into
lods
ret
imul
adc
imul
cmp
dec
pusha
push
popl
push
sahf
sub
dec
leave
ret
pop
cwtl
jl
std
cld
out
adc
adc
pop
xor
fldl
push
fisubs
scas
dec
sti
and
push
imul
add
inc
jne
test
aas
in
dec
cwtl
lret
adc
subb
jno
cltd
lock
mov
clc
jecxz
inc
sub
pop
popa
aas
mov
pop
test
cmp
pusha
xor
dec
add
call
pop
aad
addr16
out
hlt
iret
jl
test
add
adc
adc
add
push
gs
cmp
loope
ret
add
lods
je
in
cmp
nop
sbb
or
je
mov
in
and
cmpsb
cmpsl
fisttpll
dec
pop
jne
repz
sub
rolb
dec
outsl
cmp
hlt
jno
dec
inc
pop
push
xchg
fcomps
inc
jno
jno
inc
dec
outsb
call
add
insb
pop
add
aaa
mov
dec
mov
pop
sbb
fidivrs
enter
xchg
push
test
sub
inc
mov
sub
test
adc
popa
push
mov
aad
ds
push
out
repnz
xchg
pop
clc
test
xchg
xchg
push
and
out
push
in
push
adc
xor
xlat
push
pop
nop
cltd
push
fbld
cmpsl
jp
xchg
clc
sub
call
in
lods
ja
nop
loopne
add
mov
lcall
or
and
sbb
add
xchg
imul
or
or
mov
test
inc
mov
push
add
outsl
inc
push
movsl
mov
ret
sub
fwait
push
into
mov
and
sub
fdivs
sub
xorl
xchg
loopne
mov
stc
xchg
inc
pushf
sbb
xchg
dec
xchg
mov
clc
cmpsl
push
es
fiadds
mov
into
js
cmp
xchg
cmp
in
xchg
ja
jle
das
in
mov
int
icebp
mov
jns
cld
mov
out
test
out
incb
orl
jne
or
gs
loop
test
rcrl
insb
dec
cmpsb
in
xchg
stos
xor
or
in
jge
add
mov
jle
pushf
push
jle
jbe
pop
add
mov
imul
mov
inc
push
lret
in
test
add
pushf
cs
pusha
fnsave
and
psrld
mov
or
mov
dec
nop
dec
loopne
movsb
push
je
adc
jne
int
addr16
fs
xchg
xchg
sbb
dec
mov
pop
or
loopne
ljmp
mov
pushf
call
push
inc
cmovs
pop
inc
dec
fcomps
sub
xchg
dec
test
rorl
cmp
movsl
leave
lret
lcall
in
pop
outsl
imul
mov
jno
sbb
sub
jge
lcall
int
loopne
inc
js
insb
push
push
out
mov
push
cwtl
xchg
data16
mov
loopne
jnp
cmp
sub
mov
les
imul
mov
leave
movsl
sbb
cmp
push
jb
fs
out
lahf
loop
out
pop
dec
pop
lret
cli
add
push
dec
fsts
sub
mov
addr16
addl
pop
shrl
sub
dec
pop
xor
je
data16
cmp
test
mov
arpl
add
jl
push
sub
mov
shlb
pop
mov
push
addr16
fcom
dec
out
mov
xchg
lret
ret
adc
sub
add
xor
cmc
repz
mov
movsl
sub
mov
fcmovb
push
xor
adc
and
sarl
movsl
cmc
imul
mov
negl
jg
imul
mov
mov
cwtl
push
sbb
pushf
xlat
adc
push
jo
and
dec
vmovaps
xlat
sbb
mov
fidivs
and
sub
jo
nop
inc
lret
add
mov
cli
xchg
aaa
insb
lret
imul
adc
pop
out
add
and
xchg
mov
addr16
fwait
xchg
notb
and
mov
popf
pop
andb
push
jnp
icebp
and
inc
dec
pop
aad
xor
or
pusha
pop
xor
out
and
mov
ficompl
xor
jle
scas
mov
stos
sti
add
ja
mov
or
push
iret
shll
lret
xlat
mov
mov
cmp
push
repz
shl
adc
add
cmp
repz
subb
sbb
imul
or
jo
test
jbe
int
gs
int3
repz
mov
push
adc
fmull
or
sbb
mov
shrb
cltd
in
inc
fstpt
push
ficomps
pop
or
in
dec
repz
push
out
xorb
add
loopne
jne
and
fidivl
scas
dec
stos
adc
daa
outsb
mov
mov
xor
xor
jmp
lods
hlt
mov
add
sub
cmp
aaa
cmp
xor
idivb
cwtl
je
xchg
and
aam
test
loop
pushl
or
neg
dec
cwtl
jno
shrl
sub
pop
pop
movsl
rcll
jle
nop
ficompl
add
rcrb
repz
rorb
std
and
shrb
fists
push
stos
jp
scas
pop
inc
movsb
les
in
sarl
sub
mov
push
inc
fisttpll
xchg
bound
jb
mov
push
in
sub
inc
lcall
xchg
and
cmp
iret
push
add
inc
and
mov
int
cmc
lahf
leave
inc
leave
push
insb
movsb
imul
adc
es
xchg
insb
addr16
aad
cmp
mov
aaa
lret
inc
sbb
push
fldcw
or
push
push
ret
cli
popa
fsubs
jg
jp
cwtl
dec
jmp
mov
repz
cmc
jmp
es
notb
ljmp
cmp
lds
sub
mov
addr16
sarb
sub
and
aad
mov
mov
lret
ret
push
jecxz
sub
insb
shrl
mov
mov
cli
lahf
xor
sti
push
out
int
lods
mov
mov
inc
out
pop
jnp
pop
scas
es
push
cmp
dec
stos
ss
push
shrl
pop
fcoms
mov
pop
xchg
mov
das
inc
pop
loope
ja
fimull
cmc
jbe
sbb
dec
in
xor
xchg
aad
insl
cmp
pop
xchg
sbb
aas
pop
mov
mov
sbb
push
cmp
out
push
xor
scas
sub
xor
pop
test
lcall
pop
add
lods
gs
add
xor
jns
mov
push
ja
fimull
movsl
js
jecxz
test
jge
ja
push
sbb
adc
xor
ja
lret
cmc
cltd
cmpl
lahf
loopne
xor
cwtl
dec
dec
pop
sub
add
xchg
xchg
jbe
jp
pusha
xchg
lahf
mov
push
popf
cmp
dec
sahf
fistps
test
push
mov
jb
pop
xor
adcb
cs
dec
orb
imul
sbb
sub
inc
xlat
jb
mov
fdivl
dec
and
and
cmp
out
ss
cld
jmp
movsb
repnz
jne
aad
fdivs
adc
xchg
scas
dec
or
sbb
adc
inc
xchg
data16
jne
push
cwtl
mov
roll
pop
ljmp
sub
mov
sahf
push
xor
push
fwait
sub
pushf
out
push
daa
mov
cli
xlat
out
aam
popf
lock
mov
mov
mov
orl
rcr
add
out
xor
data16
add
jecxz
or
mov
fcomps
xchg
movsb
shll
xor
sahf
push
cmovae
adc
mov
mov
lcall
xchg
shrl
int
mov
mov
iret
arpl
xchg
and
xor
aaa
loop
cmp
mov
mov
pop
sar
pop
xor
and
mov
stos
mov
pushf
lock
mov
xor
aam
ljmp
dec
jo
insb
sbb
jl
insl
mov
xor
out
fwait
jge
jmp
lret
push
xlat
outsl
sti
rolb
xchg
jb
rorl
stos
call
dec
sub
test
mov
pop
mov
jnp
ret
add
add
dec
xlat
or
xor
gs
push
pop
cmp
fistpll
repz
push
sbb
shrl
mov
push
xchg
mov
out
pushf
jno
mov
and
sub
cwtl
jge
out
xor
xchg
mov
mov
idivl
cwtl
nop
mov
nop
mul
push
adc
cmp
dec
gs
adcl
ja
pop
mov
add
idivl
dec
xchg
mov
mov
int3
xchg
repnz
shl
xor
push
jno
pop
and
out
xchg
test
sub
mov
dec
daa
xchg
sub
cmp
inc
sbb
mov
adc
repnz
gs
imul
es
xlat
nop
repnz
sbb
and
stc
fldcw
mov
push
fld1
push
fcom
fistpll
mov
ljmp
js
or
jl
sahf
daa
fbstp
repz
push
daa
iret
fdivrl
mov
aad
pop
cs
pop
sub
inc
aas
repz
mov
jnp
push
pop
imul
xor
mov
iret
mov
ss
cwtl
cmpsb
repz
lret
out
stos
test
sahf
pop
dec
sub
push
xor
adc
pop
mov
mov
mov
data16
xchg
sbb
lret
jg
add
fs
dec
jno
xchg
mov
or
mov
mov
push
aad
divl
int
aam
fs
xchg
decb
adc
out
jno
mov
mov
inc
push
adc
inc
pushf
and
and
mov
xchg
test
add
mov
je
ja
loop
add
mov
into
test
sub
add
je
into
dec
xchg
dec
or
jno
lods
or
push
xchg
sbb
test
xor
add
pop
repz
iret
movsl
sbb
addl
jecxz
out
push
mov
adc
mov
add
adc
es
xchg
cmp
shl
mov
addr16
lea
xchg
xchg
clc
xor
aaa
aaa
stos
and
add
ss
sbb
fnstcw
lahf
adc
or
fsts
push
sub
or
cli
sbb
jo
mov
add
cmp
dec
je
sub
cmpsl
in
jl
push
movsl
mov
adc
add
mov
jno
sub
out
out
fistl
rorb
jecxz
fldcw
xor
xchg
mov
loopne
or
test
rcl
xlat
adc
push
out
mov
fdiv
cmc
or
xrelease
jne
xchg
sub
push
push
out
xchg
dec
add
push
pop
int3
scas
cmp
insl
aad
jecxz
out
test
int3
es
dec
adcl
mov
movsl
or
in
xchg
iret
jl
das
xor
cmpsb
push
mov
jns
mov
push
mov
outsl
out
fidivrs
jns
shll
int3
out
aad
jl
sbb
pop
sub
icebp
mov
scas
dec
add
out
cmpl
xor
dec
mov
cmp
pop
mov
add
fs
fs
stos
dec
aam
and
dec
or
fdivs
int
jno
and
add
xchg
fwait
lret
sub
xlat
mov
mov
or
fbld
insb
mov
lahf
xchg
sbb
fwait
ljmp
jo
shrb
push
loop
jl
add
sub
fwait
imul
out
rorb
mov
fisubs
outsb
jl
divps
cwtl
es
or
sub
dec
and
inc
inc
dec
add
sbb
xlat
outsl
adc
hlt
clc
lret
data16
add
lock
in
js
jecxz
lcall
add
aas
call
mov
popf
in
xor
mov
xor
cmp
mov
xorb
mov
xor
mov
xlat
xchg
out
inc
jb
inc
out
and
jbe
pop
popa
adc
xacquire
pushf
std
dec
rcl
add
sub
add
sub
aad
cmp
adc
jl
ret
and
aad
jo
into
and
dec
aaa
fidivl
sbb
cmp
bnd
mov
xor
insb
mov
mov
and
mov
adc
icebp
jno
ds
daa
fs
repnz
call
dec
sbb
int
fwait
dec
repnz
add
sti
std
or
xchg
jno
fists
pop
ret
cmpsl
xchg
xchg
add
movsb
stos
cs
jp
jno
jb
adc
dec
nop
ljmp
dec
dec
pop
xor
test
push
dec
jo
jo
in
lahf
cmp
scas
popf
mov
pop
inc
xor
and
xchg
fldt
jo
sub
pop
dec
hlt
icebp
push
xchg
push
movhps
adc
clc
loop
sbb
insl
ss
mov
pop
mov
out
in
mov
movsb
xor
rorb
test
movsb
sub
mov
xlat
lret
sub
rorl
push
xchg
mov
rcl
mov
in
sub
mov
pop
jbe
decb
aam
lret
imul
jmp
int
lods
jnp
shlb
insl
stos
and
out
add
into
cmp
ljmp
cmp
out
adc
push
mov
or
adc
in
push
pop
roll
repz
sbb
push
mov
roll
cmp
int3
mov
out
mov
call
sub
mov
push
pop
or
and
movsl
repnz
or
xchg
dec
push
in
xor
adc
jge
pop
fisubl
jge
cs
insl
nop
iret
xor
movl
test
pop
jmp
cmpsl
mov
xor
fbld
aad
js
xlat
imul
pop
sub
fisubl
in
xchg
loopne
dec
test
negl
call
std
xor
push
pop
fistpll
xor
mov
insb
xchg
out
mov
push
out
repz
xchg
sub
jb
or
out
push
outsb
inc
cwtl
push
cs
gs
or
sub
pusha
mov
ss
aas
dec
pop
adc
or
call
jbe
out
push
in
lret
lock
sbb
shl
repnz
fwait
jne
mov
cmpsl
lea
jecxz
mov
in
xor
push
clc
arpl
inc
xchg
sub
push
test
lock
jb
imul
mov
dec
mov
adc
lahf
jns
lea
and
hlt
add
and
mov
rorl
adc
cmc
scas
call
sbb
push
lods
jmp
ffree
sbb
loopne
testl
daa
arpl
mov
xchg
arpl
gs
jg
fwait
mov
cmp
test
aas
sbb
cmpsl
lock
add
out
mov
idiv
aam
jne
das
fmull
pop
sbb
subl
dec
aaa
in
sbb
sub
popf
adc
push
mov
pop
and
jge
sbb
shlb
stos
and
inc
jno
sbb
clc
es
or
cmp
sub
out
sub
mov
jg
add
xor
fistpl
xchg
hlt
jb
subb
out
lret
inc
addr16
jae
mov
adc
cmp
pushl
dec
call
cmc
pop
outsl
jmp
test
cmp
xchg
push
add
insb
mov
jl
add
mull
aad
imul
cwtl
inc
pop
repz
add
ljmp
in
xor
pop
movsb
pop
sub
movsl
outsb
js
jmp
or
or
add
clc
fcomi
sbb
fcompl
les
adc
push
jno
in
popf
scas
fsub
lret
enter
or
adc
movsb
lock
inc
adc
lock
leave
or
in
stos
pushf
int3
xor
xor
add
dec
cli
dec
inc
inc
shlb
mov
nop
insb
dec
clc
ss
mov
sbb
add
jecxz
lock
outsb
push
fildl
dec
mov
mov
jle
iret
lret
lcall
mov
rorl
add
insb
cmc
cwtl
xchg
and
or
mov
imul
idivb
cli
fs
cmp
mov
icebp
dec
dec
shl
loopne
lods
mov
fisubs
cld
imul
fs
inc
sub
lds
movsb
add
call
dec
mov
or
outsb
jmp
repz
adc
hlt
add
cltd
fcoml
repnz
sub
and
lock
pusha
add
js
xchg
outsl
inc
push
mov
add
and
in
mov
pop
adc
fistpll
insl
jl
jo
jns
inc
das
adc
aam
xchg
xchg
xchg
ds
rorb
leave
stos
in
pushf
push
aam
sbb
cltd
das
mov
sbbb
ss
dec
lea
incl
daa
in
data16
js
arpl
fs
lock
lret
xchg
rorl
in
int
addr16
fmuls
mov
lcall
pushl
out
jae
out
xchg
mov
ficoml
mov
jle
dec
xor
push
xor
sbb
es
jl
xchg
jl
xor
xchg
repz
dec
adc
pushf
int3
or
ret
fs
inc
nop
xor
mov
lcall
out
out
or
inc
jecxz
lea
mov
mov
sub
adc
mov
ret
cld
call
hlt
jecxz
mov
push
xor
cmpsl
in
xor
mov
scas
xor
add
push
xor
icebp
xchg
pop
inc
imul
mov
ljmp
loope
aaa
jae
dec
jge
or
mov
ret
jge
inc
sbb
push
popa
push
mov
adc
and
pop
and
xor
gs
mov
stos
lds
outsl
sub
dec
lds
mov
out
xchg
mov
adc
pop
inc
jb
mov
xchg
movsl
add
ffree
popf
addr16
movsb
xchg
pop
repz
or
mov
inc
adc
mov
movsl
movsb
rcrl
mov
sub
inc
frstor
out
sbb
fucomi
mov
insl
sub
call
and
cld
dec
subb
inc
mov
adc
fnstenv
mov
shlb
cmpsb
jne
test
push
xchg
movsl
lret
aad
adc
pop
out
jno
lcall
or
movsb
lahf
mov
sub
jo
adc
lock
jg
cmp
dec
mov
mov
in
clc
mov
mov
mov
add
repnz
lahf
sbb
adc
push
cmp
jns
cmc
and
xor
sarl
cli
xchg
sbb
out
jmp
or
jmp
test
ss
pushf
aaa
cli
outsb
call
iret
xor
pcmpgtw
push
push
cmpsl
jnp
in
ss
mov
outsl
xchg
stos
stos
mov
xchg
xor
mov
mulb
bound
out
loope
pop
movsb
testl
sbb
add
jnp
movsb
lods
fisttpll
ja
cmc
xchg
in
mov
xchg
testb
xchg
js
cmpsb
mov
or
jne
mov
mov
in
dec
std
jmp
cmp
push
mov
je
pop
jmp
push
xor
pop
fdivl
dec
gs
mov
ss
test
adc
imul
popf
mov
rcrl
outsl
ss
aaa
add
push
cmp
mov
xchg
movsb
js
sub
or
in
rcrb
clc
in
ss
inc
mov
jns
and
cmc
fmuls
sti
repnz
loop
out
call
bound
xchg
ljmp
adc
xchg
repnz
xor
dec
out
pusha
inc
dec
xchg
out
add
pop
aaa
enter
fbstp
sub
mov
in
pushf
xor
aas
mov
mov
movsl
sbb
out
mov
add
dec
sub
pop
mov
xchg
cli
movsl
test
fidivrl
xchg
jecxz
shr
xlat
test
push
in
test
repnz
out
jne
out
loopne
cmp
adc
iret
xor
push
xchg
mov
xchg
pop
lods
push
test
inc
scas
jne
push
xor
mov
or
repz
pop
add
dec
xor
or
mov
sub
int3
add
aam
adc
aad
xor
repz
insl
aas
jne
add
cmc
or
mov
ljmp
imul
dec
idiv
xor
mov
dec
pop
adc
fdivs
jno
push
js
shlb
dec
test
xor
stos
dec
ss
out
jo
xor
out
jge
mov
mov
add
xor
imul
fcomps
push
jmp
or
imul
in
sub
pop
cmp
jecxz
jle
mov
and
mov
pop
add
imul
cmpsb
insb
and
jmp
imul
nop
xchg
bound
or
lahf
sub
out
xchg
or
xor
xchg
mov
xchg
cmc
scas
mov
mov
inc
jne
outsb
sub
vunpckhps
sbb
lret
cli
sarl
addr16
rcrl
xor
idivl
dec
jmp
sub
nop
mov
aas
movsb
xor
lcall
out
hlt
lea
and
sahf
pop
and
adc
dec
dec
out
mov
sub
pusha
lahf
ds
cld
pop
cltd
ljmp
sahf
dec
nop
cmp
into
test
xchg
pop
call
adcb
mov
outsl
hlt
scas
inc
imul
icebp
fs
scas
aaa
push
mov
sub
mov
scas
insb
xor
pop
aas
adcl
roll
jbe
out
pop
out
addr16
mov
int3
repnz
fsubl
je
cld
add
add
mov
sti
xor
les
js
cwtl
sbb
mov
jno
jecxz
pop
lea
and
lahf
test
addr16
daa
lcall
inc
jns
mov
mov
cmpsl
mov
and
mov
jg
lcall
dec
aas
popf
mov
repnz
mov
popa
aam
int3
sbb
test
test
dec
inc
stos
adc
js
mov
call
xor
fsubrl
call
fnstsw
es
mov
insl
loopne
dec
aam
hlt
lock
adc
xor
inc
mov
ret
call
pop
shl
shlb
cmp
push
loopne
dec
mov
inc
mov
inc
fsubl
ret
and
ror
dec
push
xchg
inc
in
jg
xlat
and
loopne
insl
lock
push
cmp
xchg
out
stos
adc
hlt
testl
pusha
je
insb
mov
and
adc
jge
pop
add
sub
loopne
mov
les
bound
in
fnsave
jo
sbbb
and
pushf
orb
pop
xchg
jo
sub
adcl
mov
pop
das
sbb
xor
iret
mov
dec
and
out
imul
hlt
xchg
fwait
out
mov
push
mov
out
jb
push
lcall
xchg
insl
jge
bnd
mov
ljmp
xlat
mov
add
icebp
in
push
ret
fstp
pop
fcoms
push
clc
pop
xchg
mov
push
and
pop
xlat
cmp
fsubrs
fs
data16
ret
mov
xchg
gs
aas
cmp
ja
test
test
jg
fwait
sbb
mov
mov
in
mov
add
test
call
test
mov
adc
xlat
push
mov
mov
mov
and
cld
and
mov
cmpsb
mov
mov
js
sub
gs
nop
cli
ficoml
bound
icebp
fidivl
cmp
enter
clc
imul
fdivrl
or
mov
and
xchg
mov
gs
mov
xor
jge
add
add
inc
jecxz
jp
mov
call
sub
mov
sub
aaa
cmpsl
mov
lahf
pop
mov
mov
ss
adc
addl
pop
add
pop
jne
add
arpl
fistl
sbb
cmc
inc
jmp
ljmp
sub
divb
add
lcall
mov
gs
out
push
stos
icebp
mov
ds
cs
push
fwait
mov
int3
jecxz
iret
mov
mov
repnz
shlb
mov
repnz
adc
div
out
jnp
stos
insb
mov
mov
aaa
sub
pop
je
xchg
in
lds
stos
jl
push
mov
xchg
mov
cmp
sbb
push
jmp
and
lods
icebp
xor
adc
mov
daa
mov
cwtl
fstpt
into
cs
and
aad
push
test
aam
mov
push
arpl
aas
fadd
fcoml
mov
add
add
pop
imul
shl
mov
mov
xchg
push
fnstenv
mov
and
cmp
in
repz
test
in
sub
or
cmp
jb
add
xor
mulb
mov
push
imul
mov
dec
sub
imulb
jno
jns
push
nop
or
int
fisubrl
mov
dec
or
fwait
add
mov
aad
out
mov
ret
sar
icebp
pushf
shl
push
sub
daa
cmc
mov
push
fisubrs
imul
inc
stc
adc
popa
imul
insb
or
ljmp
aas
sub
or
sub
mov
xchg
cmp
inc
cs
mov
mov
jmp
mov
loop
add
and
pop
ja
sub
jae
cmp
in
scas
movsl
call
outsl
cwtl
insl
add
mov
es
jb
jge
fnsave
inc
out
in
out
jno
inc
mov
lods
dec
call
in
lcall
lret
mov
and
mov
mov
add
push
aaa
fcmovne
shl
ret
pop
sbb
fwait
and
pop
or
add
xor
inc
aaa
out
in
icebp
jnp
aad
mov
nop
es
dec
jecxz
test
sbb
push
xchg
sbb
in
xchg
mov
insl
out
popa
sbb
mov
iret
mov
jae
clc
movsb
nop
int3
jb
pop
mov
xlat
jne
xor
insl
mov
insb
sub
or
pop
sti
xchg
xchg
cmp
leave
lock
call
aam
out
gs
aas
xchg
das
bnd
mov
or
repz
pop
jne
xor
adc
jbe
jno
negb
cld
inc
mov
sar
adc
in
add
add
cmp
gs
lret
dec
dec
jg
or
adc
lea
or
or
jmp
in
push
out
jno
test
add
test
dec
mov
mov
add
lock
mov
fildl
add
push
add
xchg
les
lods
xlat
push
cld
pop
cwtl
lods
iret
push
mov
cmp
std
mov
dec
mov
adc
inc
xchg
js
cmp
mov
adc
xchg
jno
mov
mov
or
adc
or
jl
pop
fcmovnb
xchg
lea
test
add
out
push
xchg
xlat
push
int
xchg
test
inc
push
or
dec
add
dec
dec
jmp
mov
pop
lods
sub
movsl
mov
imul
movsb
int3
mov
rcrl
pop
in
add
faddl
cmp
in
rcrb
inc
sub
iret
ret
mov
sub
repz
mov
shr
ret
rcrl
mov
sub
adc
jns
out
cmp
fdivs
insl
sub
imul
jnp
cs
push
in
jno
stos
out
mov
test
in
mov
pop
jg
loopne
jl
imul
out
xor
shll
xchg
jbe
or
rcr
out
movsl
lcall
dec
xchg
and
fisttpl
call
adc
sbb
cmpsb
cmp
and
fisttpl
mov
dec
dec
push
mov
and
lods
and
in
dec
or
mov
es
test
es
repnz
in
sub
xor
rcr
xchg
sbb
cli
pmaxub
mov
and
cmp
sbb
adc
iret
ret
pop
scas
add
jecxz
ret
push
mov
aas
js
rolb
adc
ss
jo
cmp
adc
icebp
mov
lret
mov
test
stos
call
lock
popf
fcmove
aaa
or
sub
es
insb
addr16
push
inc
jmp
xlat
jno
ja
aaa
xor
pop
pushf
mov
and
imul
outsb
cmpsl
das
pop
mov
xlat
inc
dec
mov
pop
lcall
das
loop
test
hlt
cwtl
mov
cmp
fcmovu
lds
mov
xlat
je
outsl
push
xchg
and
mov
push
pop
pop
outsl
xchg
adc
test
xor
cmp
xchg
mov
das
and
dec
adc
movsl
ds
jo
stos
pushf
jne
lock
cltd
bound
jge
out
mov
out
aas
hlt
gs
test
fwait
cmp
in
mov
fdivr
cmpsl
loopne
subb
pop
das
imul
add
mov
test
mov
dec
gs
xor
bound
mov
jbe
cmc
sbb
aaa
cmp
movsb
fcomi
inc
lret
push
xor
jno
jge
or
mov
push
in
ja
pop
or
lcall
mov
out
ljmp
add
and
js
divb
shl
dec
and
mov
sub
mov
xchg
mov
adc
lods
lret
sub
or
lods
outsl
mov
stos
lcall
or
fcompl
add
jmp
pop
roll
xchg
add
and
adc
sahf
add
mov
mov
and
sub
mov
lock
pop
jne
xor
fcoml
xchg
insl
insb
sbb
and
lahf
les
mov
cld
and
pop
push
dec
movsb
xor
dec
in
mov
mov
push
xor
jne
stos
xchg
dec
out
int3
hlt
mov
into
cmp
add
lahf
xchg
rclb
dec
shlb
sub
push
jb
ror
push
sub
out
mov
ja
sbbl
les
subb
incb
xchg
stos
and
add
sub
in
ja
jne
mov
out
fiadds
pop
lods
add
ret
pusha
daa
push
sbb
imull
xlat
add
push
data16
js
sar
mov
insb
push
cmpsb
sub
sbb
xchg
ret
inc
xchg
jl
icebp
stc
mov
dec
cmpsl
stos
mov
inc
adc
push
sbb
stos
imul
orb
test
mov
aaa
add
xor
mov
bound
addr16
dec
test
stos
add
lock
sar
fiadds
lahf
dec
inc
push
pusha
or
jl
daa
xchg
ficoml
or
scas
mov
jnp
lods
mov
shl
out
mov
imul
mov
push
xor
dec
mov
shll
mov
ret
mov
loope
in
aas
clc
into
nop
mov
ds
stos
adc
in
call
imul
mov
movsb
mov
adc
dec
xor
lret
pop
xlat
mov
or
push
cmp
sbb
repnz
fmuls
sbb
and
mov
insb
xchg
fstpt
add
lcall
sbb
sbb
shll
dec
jne,pt
cmp
inc
shlb
push
nop
mov
call
orb
inc
mov
dec
aas
daa
xlat
or
push
xor
xchg
loope
sahf
aam
or
or
sbbl
xor
and
dec
cli
scas
fsubl
outsl
sti
cmp
pusha
addl
xlat
push
pop
or
hlt
out
sub
pushf
push
push
inc
xchg
outsl
cmp
ljmp
gs
jo
push
pop
mov
fbstp
dec
cmpsl
fwait
mov
cli
xchg
out
mov
iret
out
and
into
std
gs
ret
cmp
rorl
iret
pusha
sub
mov
and
jae
adc
hlt
jp
sub
ljmp
jl
cltd
mov
xlat
jo
lcall
cmc
xor
fisubl
xor
cmp
icebp
gs
incb
push
fcoml
cmp
jno
push
sbb
sbb
xchg
jmp
jnp
movsb
and
push
out
inc
movsl
inc
mov
cwtl
push
aas
push
or
out
pop
adc
xor
mov
fldl
in
jb
leave
rcll
orb
jp
add
fs
fst
fstpt
ss
pop
sbb
xchg
outsb
out
push
mov
push
or
adc
pushf
jle
sbb
inc
fcoml
imul
addb
or
pop
test
lods
sbb
outsb
loopne
dec
mov
lods
xlat
div
mov
pop
mov
jecxz
daa
int
add
xchg
lea
stos
rorb
movsl
shrb
mov
lret
fwait
repz
out
ss
lock
jne
xchg
xor
xlat
cmp
mov
xchg
xchg
sbb
ret
aad
sub
push
and
cltd
mov
ljmp
xchg
inc
cmp
fnstsw
pop
movsb
push
cmp
xchg
icebp
out
out
ficoml
std
ss
mov
gs
mov
into
fstpl
mov
cmp
mov
adc
jae
push
mov
test
dec
pop
cs
sbb
insb
lea
mov
addr16
lds
imul
cmp
or
jmp
xchg
xchg
bndldx
jne
stc
pop
fcmovnbe
les
dec
jl
jge
fcomps
dec
pop
gs
lret
dec
mov
imul
dec
movsb
fmuls
adc
shlb
push
pop
fdivrs
fldl
icebp
and
cmpb
nop
out
jmp
push
pop
xor
and
jge
nop
shrb
jmp
stos
inc
shll
sbb
les
mov
xor
xor
sub
mov
adc
das
out
je
out
jne
std
sti
mov
out
pop
fldt
ret
pop
mov
out
out
aad
mov
ss
loop
pop
fimuls
mov
and
in
lock
pop
pop
ficoms
daa
sbb
push
je
push
sbb
and
lock
cwtl
addr16
lock
fiadds
ret
pop
xchg
mov
subb
jne
call
push
in
imul
lret
mov
jae
push
xor
cmp
repnz
mov
dec
ss
fstpl
imul
push
out
add
in
test
aad
jp
sbb
aad
mov
ret
int
pushf
int3
adc
jb
push
xor
xchg
xchg
jle
add
add
jo
push
ret
ljmp
sbb
orb
push
push
repz
test
fwait
lahf
pop
lds
xor
adc
adc
nop
mov
orb
jecxz
push
mov
or
shrb
cmp
mov
gs
mov
dec
cmp
mov
and
ljmp
pop
sub
jnp
add
xchg
sarl
adc
test
or
push
xor
call
bound
pop
out
xchg
add
adc
mov
out
lahf
rcll
mov
sahf
inc
mov
mov
movl
out
xchg
xchg
jb
jmp
cwtl
jnp
jl
and
pop
lock
xchg
sub
aad
ljmp
xchg
cmp
addr16
adc
mov
scas
xor
stc
mov
push
add
insb
add
in
mov
pop
mov
in
fbld
dec
je
mov
cmp
add
xor
xor
cs
loope
sub
jae
outsb
inc
xchg
and
int
add
in
mov
mov
or
sub
test
sbb
mov
mov
adc
or
or
daa
iret
dec
push
or
jne
js
into
lods
adc
dec
pushf
divl
adc
xchg
test
movsl
gs
jae
in
in
mov
dec
xchg
inc
mov
dec
lods
sbb
mov
lea
inc
jb
scas
lret
test
gs
ret
jae
repz
sub
loopne
call
dec
ss
mov
imul
lods
arpl
inc
sbb
adc
mov
mov
mov
xchg
mov
and
push
repz
mov
ss
fwait
push
push
push
and
inc
xor
xor
inc
or
fsubs
shll
dec
push
cmp
xchg
and
cmp
mov
mov
pop
sbb
xchg
std
dec
sbb
or
je
and
sti
fs
aam
cmp
pushf
xor
jecxz
mov
negl
stc
adc
into
cmp
sbb
mov
je
sbb
ds
mov
popa
or
fs
or
pop
xchg
adcl
out
cwtl
sahf
mov
add
xchg
add
fisubs
jbe
movsl
pop
pop
ror
sbb
push
negb
cmp
fwait
imul
iret
mov
dec
loop
loopne
scas
add
cmp
sti
mov
push
push
xchg
xchg
xor
inc
jbe
lahf
arpl
in
sub
aas
mov
int3
and
outsb
sbb
ljmp
sub
fidivl
mov
je
push
insb
mov
inc
mov
pop
fcmovnbe
add
mov
stos
jnp
test
ror
fisubrs
movl
addr16
les
cmp
stos
sbb
pop
sti
push
cmc
pop
out
cmp
mov
out
pop
sbb
xlat
and
mov
pop
into
adc
jnp
outsl
push
add
jb
shlb
imul
cmp
xor
sbb
cmp
inc
inc
or
les
repnz
mov
sbb
adcb
cmp
hlt
xlat
jmp
fisubs
jp
xchg
push
loope
sbb
mov
out
pop
arpl
int3
pop
mov
mov
mov
popa
mov
ss
sahf
dec
es
add
sub
and
mov
rol
das
out
arpl
add
sub
sbb
aaa
pop
or
in
push
lahf
mov
mov
loopne
push
mov
mov
inc
inc
cmp
lds
mov
loop
cmp
lods
xor
lods
mov
aad
cmp
xchg
scas
pop
lods
cmp
inc
cmp
aam
dec
int
pop
mov
add
cmp
test
imull
mov
scas
mov
das
mov
movsl
push
gs
xor
stos
inc
xchg
nop
jbe
or
pop
lods
daa
or
jae
mov
outsl
movsb
mov
clc
test
adc
aad
nop
in
mov
jge
push
cmpsl
std
adc
out
adc
jecxz
and
push
jbe
push
pushl
shrb
stos
dec
sbb
xchg
and
rcl
fucompp
pop
call
aam
sbb
inc
cld
arpl
mov
popf
fcomps
mov
test
jnp
arpl
push
mov
adc
arpl
inc
pop
aaa
iret
int
sbb
adc
dec
mov
into
fisttpl
xchg
xor
sar
jns
rclb
pop
xor
insl
insl
je
mov
mov
lret
scas
pmulhw
push
test
push
pop
psrlq
lret
cwtl
cmp
out
je
rcr
sub
inc
sub
sahf
mov
pop
in
gs
xor
test
xlat
sub
fistpl
sub
ja
bound
jno
jle
repnz
lods
dec
xor
jae
add
ljmp
nop
mov
lcall
dec
and
xor
jae
adcb
into
popf
pop
lds
bound
pop
xor
mov
test
mov
shlb
movsl
sbb
cli
cmpsl
loope
push
lret
lods
mov
loopne
gs
push
pop
and
add
bound
insb
scas
adc
pop
jmp
dec
fs
pop
pop
ss
mov
pop
fsub
aas
in
or
fildl
clc
and
mov
jmp
popf
scas
mov
hlt
in
sub
mov
movsbl
mov
outsl
testl
jl
ret
mov
cmp
lods
test
pop
fucomip
and
frstor
mov
stc
jmp
xchg
sub
jno
jecxz
push
sub
push
xchg
nop
sub
push
jmp
xchg
loop
cli
rcrb
lret
outsb
dec
jmp
xchg
lea
stc
lahf
aas
push
sbb
mov
dec
add
lods
out
ficoms
repz
scas
mov
xor
in
insb
es
mov
fbld
fucom
dec
and
mov
stos
xchg
ljmp
dec
jnp
jno
pop
clc
lret
jb
inc
fmull
and
jae
outsb
inc
cmpb
mov
and
pop
in
cwtl
cwtl
in
lds
add
jno
insl
nop
loopne
xchg
gs
xchg
rcll
inc
cmp
addr16
push
push
scas
sub
iret
xchg
fiaddl
jmp
outsl
sarl
scas
jno
sbb
rcll
jmp
push
negb
mov
or
pop
cwtl
aam
scas
out
sbb
jecxz
jp
push
gs
mov
sbbb
cmp
popf
pop
xor
jno
jae
jne
fs
sub
std
outsl
fdiv
fcomip
jno
mov
cmp
sub
mov
sub
rcl
and
and
mov
hlt
jmp
xchg
push
call
sub
scas
push
sbb
roll
push
mov
and
test
out
mov
mov
out
xlat
hlt
push
lock
call
loopne
fsubs
adc
sub
adc
lock
notb
inc
test
mov
mov
insl
hlt
stc
mov
in
das
mov
cmp
mov
cwtl
repnz
lret
mov
addr16
dec
cmp
jo
pop
sahf
xchg
mov
dec
mov
insl
clc
sbb
sub
pop
je
arpl
lcall
mov
je
lcall
mov
xchg
pop
movl
loope
int3
lahf
lods
or
and
pop
smsw
push
xor
movl
pop
mov
xor
scas
and
sub
pop
adc
fwait
out
pop
mov
ljmp
scas
mov
adc
mov
inc
mov
into
inc
add
sub
mov
scas
test
rcl
imul
cmpsb
xlat
pushf
lds
xchg
shr
popf
xlat
and
inc
push
push
jge
xor
pop
push
in
jo
cli
iret
fdivs
dec
jg
xchg
cmpsb
pushf
dec
test
addr16
stos
sti
test
inc
push
add
mov
pushf
int
dec
iret
mov
clc
sub
cld
fs
adc
inc
mov
ret
dec
mov
sbbb
idivb
xlat
ret
gs
mov
mov
sti
pop
mov
mov
xchg
fcmove
push
rolb
xor
xor
lahf
mov
out
cwtl
test
sbb
dec
shlb
shll
aas
inc
dec
push
inc
mov
dec
rclb
div
addr16
push
fimull
pushf
or
pop
or
cltd
stc
in
loop
and
cwtl
push
jp
push
jbe
ss
cmp
int3
es
ja
in
xor
mov
insl
pop
xlat
push
mov
pusha
mov
roll
dec
jne
in
movsb
mov
or
cld
leave
adc
test
push
pop
or
ret
push
test
daa
push
call
mov
add
inc
scas
xchg
cmp
int
xchg
pushf
mov
mov
mov
xchg
je
mov
out
lret
mov
test
or
aaa
mov
aaa
out
lret
lods
pop
push
addr16
cwtl
inc
cwtl
hlt
xor
loope
mov
push
mov
sbb
pop
testb
jl
shl
nop
push
mov
pop
rclb
out
js
mov
jbe
jns
mov
push
jb
iret
addr16
add
in
pop
ds
xchg
mov
sub
rcll
inc
es
sub
aaa
sub
scas
dec
cli
shl
push
addr16
repz
pop
ret
popf
int
sbb
jecxz
loop
or
and
fisttpl
outsl
rclb
push
mov
out
add
pushf
out
mov
push
push
sub
xor
in
js
push
cmp
pop
jo
daa
jle
out
sub
xchg
rep
mov
lcall
xor
xor
dec
push
test
and
dec
jb
xlat
out
out
mov
dec
out
aaa
out
inc
adc
push
mov
imul
shrb
push
loopne
dec
push
jmp
mov
aas
xlat
arpl
or
js
sub
fidivrs
lret
cld
add
mov
pop
lret
leave
fadds
mov
mov
mov
sti
lret
js
pop
mov
push
cwtl
dec
push
sti
or
call
add
push
pop
fs
cwtl
pop
outsl
xor
stos
mov
mov
cmp
add
mov
cmp
mov
insb
mov
sbb
inc
in
sahf
fst
ss
nop
cmpsl
pop
cmp
sbb
lcall
gs
aaa
call
pushf
sbb
inc
imul
outsb
adc
iret
cmpb
cli
jns
bound
and
popf
ds
sahf
gs
in
imul
lret
sbbb
cwtl
or
mov
je
scas
sbb
sub
sbb
pop
sbb
pop
sbb
push
insb
pushf
mov
mov
adc
push
sbb
sub
ror
insb
pop
xchg
cmp
mov
aaa
out
cmc
stos
jmp
jle
jl
xor
clc
adcl
cwtl
testl
adc
xor
je
mov
mov
dec
mov
mov
xchg
inc
push
pop
fistps
xchg
inc
or
or
and
pop
xchg
push
shl
in
ss
sub
xor
insb
inc
xor
push
jns
jns
sbbl
icebp
mov
xor
dec
mov
cmp
push
lret
iret
mov
fstl
push
adc
mov
cmp
pop
mov
ljmp
loope
sbb
and
in
and
mov
mov
bound
outsl
sbb
adc
mov
pop
fldl
adc
pop
fmull
loop
negl
mov
ret
out
or
dec
ljmp
pusha
xor
sbb
push
cli
mov
inc
out
aad
dec
shlb
fbld
xchg
test
hlt
dec
aas
xlat
jbe
mov
pop
lcall
mov
mov
ficomps
dec
dec
lahf
rcrl
fmuls
and
fistps
test
push
cwtl
sub
nop
sbb
mov
xchg
and
ret
fs
xchg
push
xor
add
daa
mov
push
jno
insb
mov
and
call
pusha
std
push
int3
fldl
pusha
lcall
icebp
scas
mul
add
pusha
mov
sub
sbb
jl
in
xchg
cmp
pop
xchg
outsb
jle
add
movsl
and
mov
xchg
aas
scas
jmp
neg
cmpsb
lock
rclb
fiaddl
jmp
gs
testl
shrl
cltd
xchg
and
lods
push
sub
and
xlat
rcr
mov
jno
jo
pop
xor
lds
adc
shll
jecxz
dec
jp
mov
and
or
sbb
cld
push
push
stc
cwtl
dec
dec
hlt
fnsave
adc
sbb
arpl
jne
gs
add
enter
int3
addr16
sbbb
adc
lods
movsl
cld
mov
dec
add
push
out
jo
cmovne
xchg
push
jnp
pusha
nop
pop
stos
movsl
mov
adc
fisttps
pushf
mov
ljmp
dec
imul
dec
push
fdiv
test
mov
movsl
jp
mov
ljmp
hlt
sub
jno
mov
sbb
ja
ret
outsl
rclb
xchg
adc
pop
cmp
sub
sub
pop
jp
jecxz
jmp
out
push
mov
jle
inc
push
mov
inc
jbe
and
and
sub
out
in
adc
cmp
inc
fistl
loope
sbb
inc
in
movsl
pop
mov
mov
sub
mov
fisttps
jbe
pop
data16
stos
inc
leave
adc
out
push
lods
xchg
adc
gs
jge
addl
pop
imul
mov
push
pop
repz
loope
xchg
cmp
xchg
mov
dec
iret
mov
push
xchg
xchg
add
or
xor
pop
lahf
and
sbb
lods
int
cmp
daa
cmovne
cmp
dec
cmp
orl
push
imul
pop
lret
pop
clc
adc
mov
mov
mov
add
mov
insl
mov
xorb
fcmovbe
pop
add
or
add
cwtl
fmuls
data16
xlat
ficoml
ja
fimull
push
cld
jo
lock
pop
mov
scas
imul
pop
lahf
cltd
data16
in
test
mov
dec
jmp
cwtl
ret
mov
pop
mov
add
sbb
outsb
push
and
jmp
sub
outsl
call
fwait
xor
lret
push
movsb
mov
adc
jl
mov
inc
gs
pop
dec
stos
dec
repz
jo
and
add
pop
dec
mov
rol
mov
xchg
icebp
jle
xor
stos
leave
ret
addr16
or
icebp
aaa
fadds
mov
adc
push
ljmp
lahf
inc
mov
jmp
mov
xor
out
sbbb
pusha
rcll
pop
ss
and
out
pop
mov
repz
xchg
pop
and
jle
daa
aad
sbb
fnstcw
cwtl
pop
pop
mov
inc
xor
aaa
das
stc
outsl
pop
aam
add
push
out
aaa
out
addr16
cmpsl
jmp
leave
dec
je
in
fmuls
push
fbstp
lcall
xchg
or
cwtl
push
outsb
xchg
imul
jmp
and
sbb
out
push
aas
call
mull
cmpsb
cmpsb
repz
sarb
mov
rolb
dec
repnz
fdivrs
inc
push
mov
aam
call
jge
imul
in
lea
jmp
int3
inc
mov
jo
mov
dec
js
jbe
or
out
push
fimull
sbb
stos
cmp
push
cmpsb
rcrb
ret
fxch
shll
aam
mov
pop
in
pop
lret
shlb
push
call
cwtl
pop
adc
imul
popf
and
pop
arpl
ficompl
movsb
popa
dec
test
test
push
or
shll
popf
jp
das
fs
les
mov
jl
fsubrs
mov
repnz
mov
sub
int
fadds
sub
js
movsb
jne
mov
jmp
sbb
pop
cwtl
mov
xor
imul
movsb
das
adc
sub
shrl
shlb
mov
sahf
adc
out
mov
pop
imul
and
pop
lock
int3
push
clc
pop
cmp
daa
or
and
faddl
and
push
fmul
adc
fdivs
shlb
xchg
leave
jno
sbb
fsts
push
faddl
jecxz
nop
mov
in
nop
xor
pushf
xlat
int3
mov
dec
clc
add
mov
andl
mov
jb
push
pop
jmp
mov
movsb
pop
iret
outsl
int3
fcompl
out
sub
gs
fcmovne
xchg
mov
mov
jecxz
add
mov
insb
popf
aad
ljmp
sub
divb
mov
imul
sub
into
fnstenv
xor
mov
fs
xlat
mov
clc
aaa
cmpsb
jle
xlat
adc
into
repnz
clc
xchg
adc
mov
xchg
xchg
pop
mov
jne
in
fsubs
pop
mov
or
pop
sbb
push
adc
rorb
in
mov
inc
lock
pop
mov
mov
cmp
xchg
jg
hlt
and
out
mov
mov
js
into
mov
dec
fs
les
je
test
in
int
hlt
fs
pop
jmp
dec
dec
ret
daa
sbb
outsb
pop
or
mov
cmp
icebp
insb
cmp
lahf
gs
lret
cmp
mov
cmp
arpl
lcall
inc
pop
mov
inc
cmp
push
inc
xchg
dec
cwtl
mov
mov
mov
test
sahf
or
xor
sbb
dec
xlat
xchg
imul
clc
xor
mov
xchg
pop
sbb
sub
mov
xchg
fcoms
nop
in
dec
pop
sbb
xor
lea
pop
mov
push
aaa
mov
xor
mov
loope
imulb
mov
sub
mov
inc
shl
or
leave
inc
cmp
fsubs
jnp
in
repz
aad
or
out
inc
mov
leave
adc
adc
out
xchg
sub
popa
fcom
push
mov
pop
pop
xchg
pop
lock
adc
pop
cwtd
mov
pop
mov
in
out
dec
fldt
lahf
ret
mov
jecxz
gs
push
out
sarl
cmp
mov
dec
jge
les
test
xor
mov
jl
out
jno,pn
pop
lods
out
jno
lods
jmp
jno
lods
xchg
popf
aad
mov
ljmp
xor
fsts
cld
mov
cmp
cld
jg
fcoms
inc
jo
inc
cli
fbstp
push
fcos
aaa
mov
sbb
lcall
shl
adc
jb
test
xchg
xchg
cmp
push
jmp
mov
test
fs
sbb
daa
pop
adc
add
iret
mov
ja
jno
mov
xor
mov
jne
leave
mov
jbe
call
negl
lock
dec
fimull
push
dec
sub
dec
gs
iret
scas
in
popa
js
in
js
fimull
jbe
mov
sbb
jecxz
xor
mov
and
or
dec
out
sub
cwtl
cmp
je
lock
dec
mov
lahf
dec
lock
cwtl
xchg
popf
lock
push
inc
js
out
push
jecxz
dec
into
push
scas
pop
or
mov
xor
cwtl
mov
out
loope
xchg
cwtl
dec
jmp
mov
xchg
jnp
or
call
or
aad
cli
jg
ljmp
or
out
rorb
imul
aad
dec
sbb
sbb
lock
sbb
leave
add
inc
inc
les
in
sub
repnz
push
lret
xchg
adc
ret
enter
and
js
push
cmp
es
int3
or
mov
jno
repnz
mov
add
and
sub
ds
lahf
dec
fsubl
xor
mov
divb
push
mov
mov
push
jne
movb
adc
sub
push
cmpsb
fwait
call
pop
pop
mov
je
cwtl
xchg
cltd
movsl
nop
seta
sbb
out
ljmp
jnp
inc
jmp
scas
xor
fiaddl
push
loop
sti
jmp
xchg
imul
out
xchg
fnstsw
push
add
cbtw
lcall
xchg
or
das
lods
ss
cmp
loopne
lahf
shlb
pop
cmp
mov
mov
sbb
push
loopne
addb
push
lds
movsl
dec
pop
sbb
fsubr
pop
sbb
jno
shlb
test
pop
pop
mov
xlat
mov
mov
sbb
es
jae
ds
jno
adc
and
pop
mov
in
dec
lock
filds
rclb
mov
rorl
inc
xchg
int
icebp
dec
sub
cli
std
inc
push
pop
pop
xchg
jecxz
test
clc
mov
mov
ja
dec
shr
shll
hlt
sub
outsl
lcall
inc
in
mov
push
clc
je
cmp
adcb
cmp
mull
ljmp
cmp
mov
xchg
xchg
nop
jno
dec
lcall
add
incl
adc
mov
pop
jne
add
mov
fwait
sbb
and
lea
xchg
imul
clc
addr16
inc
stos
add
xchg
shlb
mov
push
xor
pop
mov
in
aas
mov
push
xlat
mov
xchg
ret
mov
ljmp
int3
iret
jbe
inc
cltd
inc
pop
test
and
mov
xchg
inc
fdivrs
insb
mov
loope
inc
mov
mov
or
insl
fcoml
sbb
cmp
xchg
sbb
loopne
int3
mov
mov
mov
ret
aaa
ffreep
in
out
cmp
dec
push
xor
test
mov
mov
popf
dec
js
mov
sub
fstl
test
icebp
scas
rorb
or
pop
cmp
sahf
int3
xchg
call
mov
lods
jo
mov
lods
fcoms
out
xchg
push
jo
and
clc
lds
test
jb
pushw
mov
test
xor
xchg
cmp
jl
lahf
push
out
fimuls
call
push
mov
mov
mov
xchg
out
mov
loope
mov
dec
cmpb
gs
frstpm(287
and
rep
pop
mov
imul
mov
jne
inc
dec
fs
clc
movsl
dec
hlt
dec
pushf
in
add
dec
stos
mov
push
xchg
mov
push
dec
int
es
outsb
mov
xchg
xchg
ret
hlt
xchg
xchg
sbb
mov
out
scas
leave
jb
stos
inc
cwtl
ljmp
ja
rcrl
lods
and
or
inc
imul
call
insb
enter
aad
pushf
jno
and
fnstenv
add
and
dec
xchg
add
leave
repnz
pop
or
adc
jmp
jle
ljmp
aaa
cmpsl
pop
cmp
aad
jmp
repnz
jg
nop
sub
cmp
push
cmc
xor
cmc
sbbb
jg
scas
cmpsl
ljmp
iret
pushf
pop
lea
lret
mov
mov
loopne
test
fwait
cwtl
repnz
jecxz
dec
sti
mov
out
stc
es
jo
xchg
jo
fdivl
lcall
jae
idiv
aam
jmp
repz
imul
shlb
aaa
out
or
fs
iret
xor
dec
and
inc
dec
clc
fs
pop
fcom
in
cli
and
insb
push
add
lahf
test
adc
nop
and
mov
xchg
fdivs
pop
jge
dec
daa
or
or
lret
adc
mov
dec
sbb
out
movsb
jne
cmp
and
adc
xchg
adc
xchg
nop
xor
xor
popf
jle
int3
dec
or
fidivrl
lea
xchg
in
cli
and
dec
movsl
cmp
pop
pop
adc
lock
pop
mov
fistps
lahf
and
movsl
cld
lret
pop
sahf
xchg
shll
inc
pusha
test
ss
repz
int3
xor
jmp
fucomi
jge
add
mov
jle
sbbb
gs
test
addr16
jne
cmp
in
cmp
mov
in
out
scas
ret
call
outsb
outsl
fs
es
cmp
sub
fucomip
push
mov
cs
outsl
cmp
jae
mov
and
cmp
into
adc
int
push
out
push
scas
xor
fcomip
xor
in
dec
cmp
pop
xor
inc
mov
adc
push
mov
fidivs
adc
popf
pop
iret
mov
add
push
mov
xchg
jno
sbb
lret
push
pop
ja
mov
mov
fisttps
sub
cmc
test
loopne
lret
pop
fwait
aas
push
jmp
or
ljmp
insb
xor
lcall
sub
addr16
xor
or
xlat
mov
mov
or
test
mov
int3
sbb
xor
and
cmp
inc
movsb
gs
scas
add
and
adc
outsb
cmp
dec
add
cmpb
cmp
cli
aas
jne
sub
inc
mov
call
int3
jl
mov
out
xchg
sar
mov
push
jp
icebp
and
fsubrl
sbb
add
mov
mov
fadd
pop
aad
je
adc
pop
cmp
hlt
xchg
call
xchg
je
mov
and
push
inc
imul
rorb
fwait
cmp
sti
xchg
test
dec
xchg
add
test
and
and
mov
mov
dec
gs
or
loopne
aas
lods
pop
repz
fistps
jmp
ljmp
mov
jl
mov
inc
in
sti
mov
xchg
inc
and
mov
lret
mov
repnz
aaa
xlat
add
jnp
pusha
cmp
fdivs
insl
repz
xchg
pop
pop
lea
dec
inc
js
pop
sti
sbbl
movsl
jo
in
imul
shlb
xor
movsl
fiaddl
or
jmp
fsubs
lock
pop
mov
lret
pop
pop
jle
repnz
movsl
push
loop
mov
scas
cs
xchg
inc
ds
jp
cmc
fs
lods
add
pop
jo
clc
mov
ret
daa
daa
adc
int
dec
out
mov
subb
push
cmp
mov
push
sbb
int
adc
jmp
xchg
xlat
je
cmp
mov
pusha
inc
cmp
in
imul
pushf
pop
fcomp
mov
loopne
xchg
or
add
stos
mov
clc
inc
mov
push
imul
jne
iret
cwtl
nop
cmp
and
sahf
push
push
pop
mov
mov
push
adcl
mov
mov
pop
in
gs
in
pop
outsl
rcll
hlt
lds
jp
mov
cmp
dec
daa
or
cmp
dec
sbb
psubsb
add
fimuls
das
movsb
mov
outsl
test
or
leave
cmpb
adc
add
mov
push
lds
insl
addr16
adc
sbb
mov
subb
cmp
xchg
mov
dec
mov
in
out
pop
xchg
dec
push
outsl
dec
rclb
mov
xchg
push
add
xor
xchg
push
add
sbb
mov
arpl
hlt
mov
xchg
pushf
and
in
sub
movsb
pop
js
repz
gs
ljmp
out
pop
mov
call
and
pusha
repnz
adc
adc
sbb
dec
scas
stos
add
ljmp
mov
ficoml
loopne
rol
call
repnz
mov
cltd
jge
add
sahf
lock
std
mov
fs
loope
sub
out
stos
in
in
lret
repz
sbb
lcall
fidivrl
inc
fwait
inc
xchg
in
cmp
add
add
mov
add
push
gs
stc
leave
mov
cmc
xchg
add
js
sbb
sbb
ret
dec
jecxz
push
mov
mov
mov
in
clc
mov
and
pop
out
add
cmp
pop
in
sub
lods
stc
fldcw
xchg
fnstcw
ljmp
mov
das
loope
loopne
out
rcrl
mov
outsl
xchg
loop
pop
test
ret
cmp
mov
add
pop
fmulp
int3
test
hlt
test
pop
cld
xchg
mov
jecxz
data16
xchg
mov
repz
sbbl
or
addr16
push
add
in
jmp
mov
cmp
sub
test
in
popa
mul
adc
inc
cmpsb
std
gs
push
xchg
fbld
insb
mov
fcmovnb
jge
sbb
sub
inc
in
sbb
lahf
push
fsubl
xchg
adc
mov
pop
repnz
mov
gs
xchg
cmpsb
sub
mov
pop
xchg
call
cli
int3
clc
lods
mov
mov
jno
jbe
mov
hlt
xchg
mov
outsl
icebp
es
js
sbb
adc
clc
pop
mov
mov
xor
in
aas
js
insl
fsubs
rcrb
pop
roll
js
lea
aam
mov
pop
dec
pop
mov
xor
adcl
mov
mov
sub
jno
sahf
or
xchg
cmp
aam
mov
inc
js
push
fstl
call
shlb
inc
sub
pusha
movups
mull
sub
lret
jno
adc
jns
fdivrs
testl
test
xchg
fwait
popl
mov
rol
jmp
shlb
pop
push
sbb
outsl
push
aam
in
pop
sarb
sbb
or
dec
dec
out
rcl
xchg
mov
adc
js
adc
dec
inc
dec
cwtl
sbb
push
cmp
lock
loope
mov
enter
imul
jl
adc
mov
je
inc
test
movsl
cli
adc
fldl
into
fsub
loopne
or
xor
ljmp
push
or
sub
sub
js
cwtl
clc
sbb
test
mov
inc
loope
xchg
push
das
push
sarl
push
sub
xchg
mov
or
push
ja
sbb
pop
xchg
or
jno
mov
add
xchg
loopne
xor
in
in
sar
adc
stos
add
xlat
sbb
roll
insb
stos
lcall
mov
outsl
jl
mov
ljmp
push
dec
jmp
mov
test
add
dec
aam
dec
aas
mov
pop
pop
pop
xor
mov
lret
push
movsl
fidivs
xorb
sbb
std
inc
idiv
por
es
sahf
xor
mov
dec
jmp
lock
aam
xor
xlat
xor
aas
out
in
rcrb
inc
jo
mov
mov
mov
adc
xchg
scas
mov
lret
test
das
mov
mov
fmuls
test
mov
dec
mov
lcall
lahf
ljmp
or
mov
and
cwtl
in
mov
in
pop
neg
dec
cmp
cmp
jno
js
addr16
gs
push
aas
xchg
mov
jmp
push
aaa
add
and
sub
mov
aas
sub
mov
in
mov
sub
cld
test
and
aad
in
xchg
ret
ljmp
icebp
bound
mov
daa
inc
incl
shlb
aaa
sbb
jne
out
push
outsb
jl
ret
jne
fidivl
mov
sbb
mov
lahf
cmp
dec
jle
dec
test
ljmp
ljmp
inc
dec
in
cwtl
gs
push
divl
movaps
mov
lret
fsub
add
test
mov
out
es
ss
scas
xchg
gs
cltd
mov
xlat
movsl
jno
inc
nop
xchg
repz
mov
fcomps
sarb
add
int
fdivs
lahf
jb
in
push
mov
ja
xor
sbb
pop
outsl
lock
xlat
movsl
jge
push
vpand
xor
gs
lods
cmp
mov
lock
jbe
mov
int3
dec
pushf
jmp
pop
mov
or
xchg
ss
mov
mov
push
lcall
xlat
xchg
sete
pushf
mov
das
sbb
xchg
into
xchg
inc
push
inc
fcmovb
jmp
data16
fcmove
jb
pop
gs
jae
sbb
cmp
add
xlat
or
and
ret
xchg
mov
in
in
mov
pushf
lret
dec
push
iret
inc
sub
in
push
outsl
add
in
jge
into
xchg
jmp
mov
xor
or
mov
xor
xchg
mov
jb
cmp
pop
sbb
and
jae
out
hlt
jecxz
xchg
pop
push
insl
xor
fisttpll
and
pusha
dec
sbb
cmova
rorl
mov
daa
mov
into
dec
js
inc
lret
out
rolb
ljmp
and
lret
and
xlat
in
lods
jmp
lods
movsb
jecxz
jno
lcall
cmp
pop
adc
in
fwait
push
inc
inc
pop
rolb
pop
dec
and
inc
shlb
test
je
push
mov
mov
pusha
inc
lret
fisubs
push
es
xchg
imul
gs
dec
mov
ljmp
scas
adc
sbb
or
adc
jmp
mov
jecxz
loop
call
outsl
clc
data16
pause
loope
in
cwtl
lret
adc
outsl
adc
loopne
cmc
loope
xor
add
xor
mov
test
jmp
test
repnz
mov
out
cmc
pop
lds
and
shll
lcall
push
add
mov
ja
xchg
jp
xchg
dec
insb
pop
add
push
lea
pop
insl
mov
lret
jae
lea
daa
int3
xor
inc
gs
mov
add
inc
cmpsl
pusha
inc
inc
adc
mov
mov
bound
dec
inc
fwait
sub
aaa
and
fwait
adc
mov
lods
int
cs
xchg
outsl
mov
cmc
jne
xchg
shrl
loopne
pop
clc
pop
push
jno
shrl
dec
repz
sbb
xor
divb
xor
ud0
pop
jno
outsl
ljmp
jmp
dec
aaa
mov
call
pop
out
stos
push
sub
cmp
sub
xor
jl
in
decl
xchg
xchg
push
in
adc
sbb
cmp
js
mov
push
shrb
dec
outsb
cmc
push
int3
lcall
or
call
push
je
sub
xchg
mov
xchg
xchg
mov
ds
into
cli
out
push
cld
sbb
push
lock
andl
lret
inc
mov
ljmp
ret
cmp
scas
xor
popa
mov
add
aaa
mov
cmpsb
jmp
cltd
xor
out
fs
add
jne
push
mov
mov
push
lods
fs
daa
stos
daa
int3
jno
xor
mov
rorb
pop
in
daa
xor
inc
inc
stos
add
loop
push
cwtl
lret
fiadds
sbb
cmp
inc
cwtl
decb
test
aam
fmull
dec
mov
gs
lock
je
fidivrs
shll
jmp
mov
ss
outsl
std
mul
f2xm1
ds
jns
shlb
lret
cmp
jo
inc
mov
hlt
or
jecxz
inc
ja
pusha
es
rol
push
lods
xor
jno
jge
dec
in
sti
pop
mov
out
insl
lret
std
pop
push
test
pop
lods
cmpsb
inc
mov
cmp
push
jbe
iret
js
add
xchg
jno
or
es
cld
jg
ljmp
and
mov
cmp
adc
lock
mov
sbb
xor
xor
daa
adc
cld
addr16
ficompl
jl
nop
lods
sahf
inc
repz
or
xchg
jne
imul
pop
lds
xlat
lea
movsl
ret
jno
jne
insb
xchg
sahf
lret
jmp
addr16
mov
pushf
movsb
loope
sub
jb
mov
sbb
pop
es
and
xor
repz
test
xchg
adc
and
dec
aaa
leave
cmp
add
push
sbb
or
or
addr16
test
repz
js
push
mov
pop
mov
mov
shl
add
mov
sbb
shrb
icebp
daa
add
outsl
out
push
scas
pushf
cli
inc
xchg
jmp
repnz
push
mov
ljmp
das
mov
push
popf
mov
or
pop
push
mov
sbb
stos
jl
mov
mov
rcrl
adc
sbb
cli
ds
in
ljmp
xor
mov
push
xchg
shll
sbb
jle
ljmp
jo
jno
sbb
sub
dec
xchg
mov
xchg
pop
lret
pop
rorb
hlt
subl
mov
inc
fstps
popa
lock
mov
xchg
sub
jp
push
push
mov
lock
lcall
pop
and
push
pop
dec
inc
push
sub
nop
cli
hlt
int3
push
cwtl
ret
cmc
mov
sub
jns
mov
jmp
dec
sub
repnz
xlat
cwtl
test
test
les
adc
jb
shlb
in
xorb
xchg
test
clc
movsl
cli
cmpsl
rorb
xchg
sarb
xchg
bound
das
andl
stos
inc
lret
pop
insb
add
cmp
xor
pop
xchg
pop
dec
cwtl
push
ljmp
mov
jmp
inc
xchg
cmpsb
mov
pop
cmp
cmc
lahf
in
xchg
push
and
cmp
aaa
aad
repz
inc
mov
mov
mov
push
pushf
dec
sub
movsb
aad
outsl
mov
cmp
fcoml
xlat
stos
aad
enter
sbb
adc
fistpl
mov
push
stos
pop
dec
mov
rcrl
icebp
out
xchg
pusha
inc
imul
icebp
leave
adc
xchg
out
shl
jb
inc
dec
cmp
jl
pop
imul
sub
les
ss
mov
mov
fistpl
and
jo
iret
lea
lock
sbb
cmp
sbb
iret
push
cmpb
ds
push
scas
daa
je
push
lods
dec
movsl
test
adc
and
or
shrb
pop
mov
fdivs
sar
dec
xchg
xor
sub
notb
dec
adc
jle
cli
arpl
mov
stos
dec
shlb
mov
fcomps
int
aam
subb
fisttpll
cmp
xlat
add
xor
stos
mov
inc
adc
dec
jecxz
push
outsl
jp
ds
mov
rorl
bound
imul
fs
jb
xlat
in
mov
imull
add
pop
push
add
xor
or
pushl
inc
in
popf
iret
xor
rcl
xor
es
mov
mov
insl
add
in
xor
xchg
cmc
jmp
cmp
xorb
sbb
repz
mov
loop
movsb
push
test
nop
inc
xor
int3
aas
fwait
push
aas
mov
or
jno
dec
std
and
fcoms
jnp
fwait
jecxz
sub
xor
pop
cmpl
imul
hlt
aad
in
les
or
dec
lea
cld
movsb
jge
in
repz
xor
cmp
inc
sbb
arpl
test
xor
popa
push
lret
mov
dec
push
cmpsl
mov
dec
cmp
dec
adc
or
into
or
cli
cmpl
sti
imul
push
nop
cs
xor
sub
mov
ja
fwait
adc
pop
ret
pushf
out
mov
jmp
enter
push
inc
sbb
xchg
cs
imul
sbb
mov
lcall
jno
test
movsb
adc
loopne
mov
fs
pusha
in
mov
inc
loop
test
call
test
test
imul
cmp
sbb
xchg
aaa
loop
and
adc
lea
leave
cli
push
adc
jle
movsb
push
outsb
shll
sbb
test
jb
push
ret
xchg
push
fstpl
cmp
lea
jecxz
js
inc
js
pop
cmpsl
jle
imul
mov
pop
fwait
adc
dec
lods
mov
adc
vunpckhps
mov
jno
inc
lret
pop
cmp
adc
inc
stos
subb
add
pop
jb
mov
pop
setl
or
cmp
dec
test
rcrl
stc
stos
ljmp
and
int
push
aam
sub
add
out
mov
push
cli
adcb
xchg
xchg
adc
mov
movsl
jecxz
mov
push
je
jno
push
jnp
iret
cwtl
test
sarb
test
shrb
scas
fs
idivl
cwtl
xor
aaa
sbb
insl
cmp
insb
mov
stc
dec
cmpsb
lret
int
sub
js
shrb
aam
inc
cs
xor
mov
jo
sub
mov
adc
test
incl
cs
lock
cmp
pop
cmp
sbb
and
jno
push
cld
push
lock
fs
xchg
fmuls
cmp
ret
xchg
mov
mov
jp
mov
enter
cmp
ret
or
lods
rcr
sbb
test
mov
xor
int
imull
call
inc
insl
clc
jecxz
or
mov
imul
pop
cmp
adc
xlat
jne
gs
arpl
inc
add
repz
int3
inc
mov
pop
push
xchg
cmp
sahf
xchg
lcall
shrb
aam
sarb
and
cmpsb
imul
std
lcall
gs
bound
sub
roll
inc
fs
adc
xor
jbe
inc
sub
xor
sahf
and
pop
jo
dec
jecxz
aad
aam
aam
nop
mov
nop
jno
jb
aam
loop
xor
movsb
loopne
sbb
clc
insb
mov
inc
cld
into
arpl
mov
cmp
mov
je
dec
push
lret
sub
push
pop
push
inc
pushf
cmc
add
xchg
add
push
jno
mov
scas
adc
xchg
jns
lock
cwtl
dec
mov
sbb
jb
lds
movsb
cmpsl
nop
dec
outsl
mov
mov
push
ljmp
cmpsb
in
cmpsl
cwtl
lret
popa
mov
pop
adc
push
mov
out
cltd
cmp
mov
data16
fadds
mov
mov
cwtl
mov
pop
test
xchg
add
movsb
ss
xchg
or
mov
rcrb
mov
lahf
repz
add
movsl
cmp
jbe
dec
and
mov
mov
and
imul
outsl
cmpsl
out
fdivl
jl
nop
stos
mov
cwtl
push
in
mov
xor
in
ret
cwtl
pusha
push
clc
and
push
xchg
inc
fs
ret
test
push
movsl
cld
cmc
jmp
adc
dec
loopne
movl
rclb
test
pop
add
in
inc
add
cmp
jb
aam
xor
iret
cmp
mov
fsubrl
cmp
sbb
nop
and
and
test
jne
dec
movsl
int3
lahf
stc
nop
push
inc
imul
stos
das
nop
sarl
jns
jmp
mov
or
xchg
or
sub
mov
pop
xchg
mov
clc
xchg
pop
inc
push
outsl
pop
test
in
lea
cmpl
xor
jp
mov
or
jmp
mov
dec
in
in
xor
rcr
pop
lahf
cmc
and
out
std
pushf
mov
mov
stc
aaa
ret
or
scas
lock
into
push
jno
mov
jne
shlb
das
lods
in
mov
sub
xchg
jp
mov
sbb
sbb
repnz
pop
outsl
popf
scas
and
fsts
rclb
xchg
and
addr16
ljmp
jns
jmp
pop
or
xlat
mov
aas
sub
test
jnp
js
jno
nop
add
stos
popl
xor
fcomps
lock
xchg
inc
mov
and
mov
cmp
lret
mov
pop
xorl
add
pop
aaa
in
cmc
or
loopne
shll
lods
call
jp
mov
sbb
jb
push
pop
xchg
cli
add
jne
inc
or
add
cmp
xor
dec
ja
jge
inc
mov
add
sub
pop
icebp
data16
addr16
sbb
mov
dec
rclb
in
shlb
adc
popa
mov
hlt
ficoml
push
cld
pop
add
inc
jns
mov
cs
aam
js
mov
ja
cmpsb
ret
cmp
jp
sbb
pop
imul
mov
es
movsb
nop
js
aas
aam
pop
adc
daa
mov
cld
or
in
and
shlb
lock
fadds
jmp
lret
sub
pop
mov
xchg
xchg
into
sub
imul
pop
out
sbb
dec
mov
mov
aad
mov
mov
cmpsb
mov
lods
lret
fisubrs
ds
xor
pop
cmp
imul
fnsave
mov
mov
hlt
and
jg
shr
aam
xlat
fimull
and
push
fcomps
lret
test
mov
aam
cli
fdivs
scas
pop
cwtl
fucomp
jb
pop
daa
fistpll
enter
inc
repnz
push
std
inc
xchg
mov
sahf
aaa
aas
es
ret
jne
fucom
mov
mov
cmc
clc
lret
vaddsubps
jmp
rolb
mov
lret
jb
lea
inc
cwtl
mov
jl
test
sub
cs
xor
push
call
pop
sbb
movb
jno
sbb
pop
xchg
scas
aaa
cmp
ljmp
jnp
sbb
inc
push
xchg
lock
shr
leave
imul
test
movsl
mov
pop
lock
clc
add
inc
out
jb
add
jns
sub
rclb
pusha
repnz
and
jb
xchg
lcall
loop
and
mov
bound
fbstp
dec
out
mov
push
push
nop
ljmp
push
dec
mov
sahf
xchg
in
out
sub
lret
inc
ror
sub
shlb
jecxz
cwtl
xchg
lods
or
xor
fstps
lock
or
xchg
decl
lock
ret
test
iret
push
inc
or
mov
mov
jns
pop
sbb
add
mov
push
out
jb
jb
mov
mov
jno
lea
sbb
or
push
jo
xchg
sbb
inc
push
in
iret
and
pop
repz
push
test
je
xchg
hlt
push
int
adc
or
xor
and
outsb
fbstp
sbb
mov
and
in
adc
out
cltd
inc
lds
push
mov
repnz
cmpsl
mov
repz
mov
cmp
adc
dec
dec
in
push
xchg
cmp
pop
out
std
int
pop
sub
in
arpl
es
imull
pusha
xor
fildll
inc
cmpsb
popf
sbb
fimull
inc
mov
fnstenv
ret
imul
fdivrs
lahf
std
aam
fists
les
jecxz
xchg
and
jnp
insb
adc
out
xlat
test
adcb
xchg
jno
cmp
nop
sub
outsb
je
push
lahf
repz
push
lcall
popf
push
jmp
lock
sbbb
add
mov
mov
or
mov
lahf
mov
cmpsl
mov
aad
xlat
nop
mov
popf
insb
sub
and
fldt
mov
xchg
cmp
test
movsb
push
pop
scas
add
jp
out
or
xor
repz
xchg
or
mov
sub
mov
fwait
sbb
push
inc
cltd
push
add
aaa
mov
movsb
xor
out
ja
fcmovnu
xlat
popf
mov
or
pop
fistpl
test
inc
je
loopne
pusha
xchg
mov
push
aas
daa
cld
pop
shlb
and
test
cli
scas
add
sub
jecxz
in
repnz
cltd
fnstcw
scas
pop
loopne
and
lea
sbb
ljmp
movl
xor
or
scas
dec
rcl
xchg
icebp
je
mov
push
xchg
cli
aas
mov
popf
cs
adc
jmp
aas
xchg
in
add
cmpsl
std
gs
je
mov
jl
ret
mov
jno
cmp
push
inc
subl
cld
sbb
xor
sbb
psubusb
stos
cmp
aas
xchg
sub
adc
sub
xchg
xor
xchg
gs
jg
sbbb
in
movsl
pusha
es
fistpl
bound
stc
jecxz
hlt
mov
and
and
sub
sub
or
incb
nop
dec
lahf
rolb
cmpsl
fwait
xchg
cmpsl
mov
pop
push
mov
push
nop
jge
xchg
fistps
add
adc
iret
adc
jne
addl
pop
sbb
sbb
adc
jnp
fwait
lahf
xor
mov
ljmp
icebp
aas
add
inc
jmp
sub
dec
jo
sbb
pop
loop
je
jmp
push
pop
int
xchg
cmp
xor
jno
in
xor
pop
inc
pop
outsb
inc
push
stc
filds
adc
idiv
or
mulb
sbb
fidivrl
stc
inc
and
nop
fdivs
jbe
scas
jge
sbb
push
mov
pop
mov
jmp
xchg
cltd
xor
xchg
clc
in
lock
out
sub
pop
pop
jl
in
xor
inc
mov
shrb
lea
jmp
repz
xchg
mov
roll
jmp
pop
mov
lods
js
xor
cmp
dec
xchg
pop
mov
jle
dec
in
cmp
fbstp
cmpsl
pop
mov
imul
cltd
in
hlt
jo
jge
fs
add
push
es
out
xor
pop
gs
js
popf
fcomp
and
stos
pop
pop
sub
outsl
faddl
lcall
ret
fsubl
inc
lret
popf
mov
cmp
dec
cld
mov
pop
dec
mov
rclb
outsl
loopne
mov
and
lret
aaa
and
push
fmuls
sbb
in
aaa
mov
ret
notl
outsb
paddb
aad
out
out
out
lahf
adcb
std
cwtl
lret
dec
add
popa
dec
out
clc
or
add
mov
aam
bound
jns
xorl
shl
or
insl
out
sub
aad
ds
mov
es
adc
test
loop
inc
int
mov
or
out
mov
lea
mov
dec
stos
cmp
mov
dec
jns
jmp
imul
push
jl
adc
es
flds
pushf
gs
fbstp
in
mov
into
sahf
xchg
mov
mov
or
add
in
dec
clc
and
ljmp
xchg
roll
add
fwait
aad
sub
aas
lds
or
aad
sub
dec
add
cltd
iret
inc
fadds
mov
cld
shrb
jl
mov
cmpsl
arpl
jl
std
lret
or
je
pop
jl
push
cmpsl
inc
push
clc
inc
jl
cmp
imul
aaa
cmp
inc
or
adc
pushf
aam
cmp
ds
gs
mov
repnz
adc
cs
leave
push
pop
xchg
xchg
rorl
pusha
movsb
add
imul
push
shlb
icebp
popl
jb
push
and
and
and
pushf
loop
dec
push
sbb
and
call
and
add
or
out
call
mov
jno
mov
test
xchg
sub
stos
mov
pop
xchg
cmp
add
incb
cmp
mov
dec
fildll
xor
sbb
aas
xchg
pop
ljmp
es
loopne
inc
inc
insb
cld
stc
xor
jns
in
mul
decb
mov
fcomip
js
hlt
dec
gs
mov
repz
addr16
imul
jae
test
fdivrp
gs
sbb
pop
shrb
mov
sbb
jmp
sbb
aaa
xor
jno
pop
jno
xor
sbb
mov
and
push
add
cli
int
adc
int3
dec
movsl
add
je
jnp
in
cwtl
inc
push
mov
notb
xchg
push
mov
xchg
addr16
out
adc
cmp
rcrl
aaa
shl
repz
lcall
xchg
je
testb
push
shl
in
fstpt
or
sub
cmpsb
inc
fcoms
outsl
sbb
jmp
mov
ret
aam
dec
cltd
xchg
dec
xor
imul
js
js
mov
sub
scas
and
sbb
das
mov
sbb
push
pop
dec
adc
in
sbb
or
rcrl
mov
mov
aas
xchg
nop
mov
out
lret
repz
jb
push
cmp
dec
pop
cmp
jo
call
xchg
or
jbe
lock
inc
in
push
inc
mov
sti
in
and
and
out
or
mov
mov
jmp
filds
call
cmp
inc
shrl
xor
pop
jbe
sub
xchg
cmp
outsl
orl
mull
jl
dec
sahf
sub
fnstsw
lret
cwtl
pop
daa
loopne
sbb
sbb
push
cmp
loope
sbb
leave
gs
and
pusha
push
pop
inc
in
push
fdivr
fists
test
neg
imul
rcrl
outsb
or
jno
scas
repz
inc
pop
dec
lock
stos
mov
mov
in
push
dec
push
out
lds
xor
clc
nop
mov
cli
jl
call
inc
mov
adc
mov
xlat
sub
lahf
gs
xchg
pusha
orb
popf
xchg
lock
xor
mov
rclb
fdivrs
jmp
outsl
fidivrs
pop
ret
in
stos
lahf
dec
mov
jl
negb
call
ffree
cwtl
mov
nop
or
int3
fisubs
sub
and
add
mov
mov
push
adcl
sbb
jbe
out
sbb
jb
pop
leave
xchg
dec
pop
imul
repz
jo
aaa
lcall
movsl
iret
int
pop
lods
movb
js
pop
or
cmp
push
mov
icebp
push
nop
loopne
lods
shrl
jae
adc
push
and
jne
inc
xchg
in
mov
call
stos
sub
sbb
add
cld
cwtl
out
sbb
je
loope
enter
shl
leave
pop
mov
adc
insb
mov
int3
sar
in
call
mov
xchg
nop
sub
dec
in
enter
out
pop
out
aad
lahf
cmp
and
jl
and
inc
rcr
sbb
rclb
call
ss
hlt
cli
fwait
enter
gs
cmpb
push
mov
inc
xchg
mov
pusha
fadd
lret
lea
mov
test
pushl
fs
push
lods
rcrb
in
call
xchg
sarb
loop
mov
and
call
fildl
clc
iret
xchg
aad
sub
mov
loopne
repz
pop
add
orb
adc
or
jecxz
pop
rcl
pop
xchg
mov
aam
jno
mov
jp
or
push
int3
sbb
and
ljmp
nop
lahf
jbe
lahf
fmuls
sub
mov
ja
out
dec
xchg
pop
sub
jle
push
clc
gs
add
inc
xchg
arpl
mov
mov
in
movsl
fisttps
cmp
mov
movsb
inc
sub
xchg
and
mov
and
ja
or
add
clc
xor
idiv
xchg
das
mov
mov
gs
loopne
fadd
sbb
lock
sbb
cmp
adc
in
push
and
push
push
xchg
mov
and
push
ja
pop
mov
and
dec
mov
mov
pop
test
sti
dec
mov
leave
jno
stos
mov
jecxz
push
rcl
and
or
mov
and
mov
or
nop
jle
push
int
arpl
fdivl
jmp
push
lret
pop
sbb
add
insb
int3
test
dec
loope
push
jbe
pop
faddl
cwtl
mov
lock
leave
mov
xchg
ljmp
test
cwtl
int
xlat
and
dec
cs
lock
fdivrs
or
rcrb
add
xor
clc
jae
mov
inc
in
ffreep
push
orb
mov
mov
test
test
cli
cmpsl
out
cwtl
adc
dec
jp
mov
movsb
sub
or
stos
push
je
mov
in
out
aad
ficompl
fstps
loopne
sahf
insl
cmp
and
pusha
lret
int
inc
decl
mov
subl
jns
sub
insl
aas
pop
fucom
cmp
push
pop
mov
imul
mov
or
js
sub
dec
repz
inc
lcall
outsl
xchg
je
xchg
jbe
mov
stos
mov
ljmp
ds
or
test
je
jbe
fstp
or
xor
aaa
popa
cli
jl
fimull
inc
pusha
xchg
jno
mov
in
ljmp
mov
inc
cmp
dec
mov
fimull
aaa
sub
leave
mov
int
aaa
add
push
add
mov
or
lret
ljmp
mov
push
test
cmpsb
mov
test
inc
xchg
sbb
cmp
std
test
mov
jmp
cs
xor
test
clc
jne
into
sbb
pop
popf
repz
adc
sbb
imul
inc
into
fisubl
pop
mulb
xchg
frstor
cmp
cmp
xchg
scas
mov
jle
sbb
outsl
movsl
cmpsl
jp
in
nop
adc
icebp
rcrl
iret
repz
repz
in
fisubl
repnz
in
add
inc
jno
sahf
mov
leave
adc
mov
ret
add
jno
xor
loope
push
pop
sub
sbb
in
imul
and
repz
int
cmp
js
add
adc
sub
jb
inc
xchg
push
std
loope
mov
jne
mov
mov
inc
cs
je
adc
and
ljmp
pop
nop
pusha
push
lods
inc
sbb
xlat
inc
mov
aam
adc
fmul
lock
fs
stos
cmc
int
add
iret
mov
sub
mov
mov
jbe
out
movsl
lret
adc
nop
add
testl
mov
inc
cld
repz
dec
dec
xor
shrl
stos
out
testl
pcmpgtb
add
jecxz
adc
xchg
push
shr
or
psrad
clc
sub
mov
loop
clc
xor
test
sbb
roll
jnp
mov
jecxz
mov
add
adc
mov
je
pop
popf
icebp
in
dec
nop
call
inc
jg
lock
jo
adc
fistl
mov
scas
cwtl
jle
pop
add
xlat
push
and
xchg
push
xlat
cmpsb
sbb
xchg
sub
clc
push
pop
adc
pop
mov
aaa
xchg
lea
fcoml
fs
clc
jno
jnp
sbb
int
loop
xchg
inc
clc
mov
dec
out
mov
cmp
dec
cltd
jae
mov
add
jb
test
les
loop
hlt
std
push
cmp
dec
inc
lds
xchg
cld
pop
test
pop
mov
inc
test
pop
lret
int3
rcrl
cwtl
cmp
push
rcrl
shll
cmp
cmp
sbb
and
mov
and
call
fldenv
les
outsl
xchg
lods
dec
shr
xchg
ret
jno
addr16
inc
gs
sbb
repz
js
cwtl
es
add
xor
out
les
iret
xor
test
pusha
jno
xchg
pop
cwtl
dec
sbb
mov
jp
repnz
cld
xchg
cmpb
jmp
imul
xchg
mov
inc
rcl
ret
in
sbb
dec
negl
mov
loopne
sarb
lahf
xchg
mov
je
out
hlt
add
mov
cwtl
orl
jns
inc
cmp
lock
dec
in
lock
xlat
int3
add
ret
dec
pushf
mov
sbb
sbb
aas
cmp
js
mov
jg
inc
lcall
push
or
sbb
mov
sbb
dec
ret
mov
ret
mov
or
cmp
gs
mov
loopne
xor
lds
mov
imul
ficoml
push
ss
mov
pop
add
int3
test
push
sbb
add
dec
cmc
lret
adc
mov
nop
xchg
cltd
push
rcrl
and
outsl
jo
icebp
xchg
loopne
dec
mov
mov
adc
dec
cli
xlat
dec
fwait
fwait
add
lea
cmp
lahf
mov
and
pop
lahf
jmp
aad
fdivrs
mov
xchg
cmp
pop
dec
repnz
std
pop
cmp
sbb
lds
cwtl
mov
mov
inc
mov
lret
gs
jno
divl
jl
ret
scas
adc
push
leave
xchg
mov
adc
inc
cld
repnz
cmp
mov
jle
cli
in
inc
inc
cmp
lods
loop
shl
das
fldcw
rcl
clc
mov
mov
push
ja
cli
adc
sbb
fsts
push
xor
sub
jo
push
jmp
jl
lcall
gs
pop
adc
or
mov
cmc
inc
pop
popa
xchg
xor
mov
cmpsb
and
jno
xchg
fsubr
shll
fsubs
cmp
out
cmc
out
movsl
int3
shlb
sarb
in
es
leave
aam
push
adc
jmp
xor
push
and
adc
call
lds
cmpsl
cmpsl
xor
pop
iret
pusha
ljmp
push
and
xchg
mov
sbb
sbb
das
and
jge
shr
jno
test
aam
out
sahf
loopne
push
call
jb
sbb
iret
xor
imul
mov
movsb
mov
aam
add
jb
sbb
adc
stos
jmp
lahf
lods
out
mov
rcrb
cs
ret
int
call
or
outsb
hlt
mov
nop
hlt
aaa
push
insb
arpl
call
push
pop
lods
cmp
jmp
call
push
xor
mov
or
ficomps
lods
loope
sbb
mov
hlt
or
add
add
aam
xor
fstpt
mov
ror
sbb
sub
add
mov
jno
mov
mov
xor
movsl
mov
repnz
fdivp
cli
xor
in
sbb
mov
xchg
jo
std
outsl
pushf
iret
push
mov
insb
adc
out
addl
lcall
aas
ljmp
nop
movsb
xchg
mov
sub
add
hlt
int
gs
push
xor
jns
fwait
loopne
inc
push
and
imul
ret
push
push
and
jno
mov
add
push
loopne
pusha
in
mov
test
jns
mov
stos
filds
test
clc
call
popa
leave
inc
ficompl
xchg
sbb
pop
outsl
and
insl
dec
mov
call
adc
xlat
mov
xchg
mov
dec
in
aad
pusha
dec
add
insb
sub
push
mov
out
cmp
xor
and
push
and
inc
scas
adc
or
sbb
pop
cwtl
push
movsl
lds
rclb
inc
and
fcmovnu
pusha
sub
ljmp
add
fs
shrb
xorb
push
addr16
aam
lock
les
cs
scas
lods
sub
jg
rolb
adc
adc
mov
mov
arpl
jo
jb
mov
xchg
xchg
es
call
sbb
shll
stc
sub
movsl
cwtl
push
or
shlb
xchg
mov
and
push
mov
jmp
cmp
je
dec
mov
lret
dec
cs
mov
adc
mov
dec
lock
mov
cmp
ljmp
cmp
pop
mov
fadds
sub
stos
in
daa
lret
sbb
mov
push
arpl
mov
pop
pop
xchg
jno
and
xchg
outsb
mov
dec
fldl
sub
dec
fwait
sbb
adc
mov
xchg
xchg
movsl
lahf
stc
ljmp
pop
aas
arpl
scas
add
notl
movsl
stos
inc
lahf
ffree
mov
sbb
pop
mov
xchg
or
mov
xchg
and
xchg
hlt
cmp
out
aaa
fwait
pop
mov
lret
pusha
xlat
fdivrs
iret
mov
adc
mov
dec
jbe
cmp
pop
clc
and
das
test
or
mov
fldlg2
gs
adc
shl
mov
int
cmp
sub
xor
in
inc
lea
cmpsb
lock
cwtl
xor
dec
xchg
stc
orb
add
mov
mov
fidivrs
hlt
out
imul
xchg
dec
xchg
mov
mov
xchg
xchg
sahf
icebp
pop
cmp
pop
les
fimuls
cmp
mov
mov
dec
adc
push
sub
fld
imul
out
out
inc
cmp
xor
in
adc
aam
ds
add
aam
fnsave
cmp
adc
les
call
sahf
push
aas
xor
sub
push
int
xor
outsl
mov
repz
fldt
insl
mov
mov
mov
ja
sti
push
xchg
jl
mov
repnz
mov
mov
dec
hlt
les
rorb
and
jns
jo
addr16
mov
jo
jb
sbb
pop
jnp
sbb
add
nopl
push
ficoms
inc
popa
cltd
ss
repnz
pop
inc
jle
mov
int
xchg
mov
iret
lret
int3
mov
cli
fcoms
xor
or
aam
sub
jo
xchg
cmp
push
cmp
inc
inc
bound
cmp
xor
dec
mov
sub
fistps
push
inc
test
in
movsl
rolb
call
jne
push
out
jno
pop
cld
sbb
mov
inc
ljmp
adc
std
cmp
cmp
imul
cli
cmp
int3
jno
in
rcr
dec
loopne
xbegin
cwtl
inc
mov
icebp
mov
rcr
test
stc
jno
bndstx
es
lahf
mov
fs
jl
je
fwait
lds
subl
cmc
dec
xor
call
ja
cmp
mov
ljmp
sbb
arpl
hlt
and
or
bound
or
cmpsl
dec
fwait
das
ljmp
inc
or
movsb
call
mov
test
sub
outsb
notb
popf
sbb
cli
xchg
lock
push
jno
push
sahf
mov
mov
ljmp
outsb
insl
loop
arpl
sub
push
out
and
mov
dec
jae
sahf
jae
lcall
cmp
pop
addr16
jo
rcl
mov
push
test
mov
test
cwtl
in
leave
dec
or
xchg
test
sub
xchg
fs
inc
pop
mov
aam
cld
sti
pop
or
incb
in
scas
mov
rolb
or
inc
aaa
push
xor
pusha
pop
add
shll
mov
int
inc
jno
mov
sub
push
push
leave
out
aad
int3
pop
pop
shrb
lock
adc
jmp
cmc
cmp
insb
dec
inc
lock
inc
cwtl
mov
and
dec
dec
cmp
xchg
rcll
nop
insb
sbb
mov
or
pop
pop
cmp
mov
mov
emms
adc
jne
lock
mov
shl
fwait
inc
scas
stc
int3
neg
sub
fnsave
pop
jno
mov
xchg
outsl
rolb
test
aaa
mov
jno
shll
fldt
mov
js
daa
dec
cmpsb
push
sbb
in
pop
shll
push
lods
in
or
or
outsl
fsubrl
pop
into
scas
cwtl
mov
xchg
push
in
test
add
push
mov
scas
fldt
jae
cltd
dec
insl
andl
pop
pop
into
add
jno
pop
pop
add
xchg
shll
adc
in
add
sub
je
ret
sbb
cs
sub
repz
imul
xchg
adc
out
and
jge
mov
add
mov
mov
cmp
xor
jne
fcomps
leave
pop
leave
inc
and
repz
xchg
cmp
mov
mov
movsb
sbb
lock
cmpsb
mov
xor
fs
cmpsl
push
sbb
hlt
jge
mov
inc
gs
or
andl
cmp
add
sub
xchg
in
in
loopne
nop
pop
flds
push
loop
sub
out
test
test
sbb
negb
xchg
lods
cli
pop
pop
pushf
push
adc
xchg
cmpsl
and
jbe
fnstsw
frstor
mov
push
cmpsb
lcall
fstl
cwtl
loope
lds
sub
popf
test
test
adc
lahf
js
xor
jno
out
cld
mov
lods
xor
adc
aad
scas
sbb
lods
mov
lea
fistpll
filds
add
mov
xchg
in
gs
stos
xor
call
xchg
mov
mov
cmp
mov
outsb
cmp
into
leave
rorb
pushf
push
mov
add
in
stos
test
movb
add
stos
adc
ret
add
mov
pop
aam
inc
push
and
in
jg
sti
cwtl
dec
and
mov
and
ds
jg
push
pop
mov
pop
jg
shlb
pandn
rcll
cmp
lea
inc
movsl
out
in
call
int
daa
mov
fs
mov
clc
cltd
xchg
fdivrl
movsl
imul
cmp
andb
rcrb
inc
cs
subl
bswap
shrl
imul
cmp
cmp
addb
dec
xchg
fidivrs
outsl
pop
pusha
popf
mov
cltd
mov
sub
lea
adc
repnz
inc
addr16
jp
and
cmp
add
out
xor
les
mov
rolb
nop
mov
xchg
fsubrs
mov
mov
xchg
sbb
fscale
pop
xlat
test
imul
leave
test
or
lcall
movsb
xor
in
mov
dec
orb
xor
xor
fdivl
mov
sub
mov
mov
rorl
adcl
xchg
aas
dec
adc
mov
cmp
in
out
cld
mov
add
pop
cmc
daa
mov
lods
lret
outsb
cmp
add
mov
cmpsl
pop
iret
pop
gs
mov
mov
fs
aaa
test
jecxz
into
nop
or
pushf
call
jp
call
mov
push
pop
in
jo
pushf
pop
xor
ror
jge
push
addr16
out
lock
hlt
mov
pop
sbb
xor
dec
fldt
call
mov
insl
scas
aas
adc
cmpsb
jmp
call
pop
cmp
ljmp
lea
or
dec
and
in
lea
aaa
ret
clc
dec
gs
inc
dec
call
iret
fldln2
mov
pop
push
sub
jecxz
ss
leave
outsb
xor
lea
mov
xchg
daa
in
push
icebp
push
psubq
mov
xchg
cli
inc
lret
mov
sbb
cmp
xchg
rolb
cwtl
add
mov
mov
xor
mov
jge
mov
push
add
mov
iret
ret
out
pop
adc
lea
sbb
jo
inc
mov
mov
push
pop
push
cmpsl
pop
ja
hlt
mov
inc
lea
inc
jle
jmp
xchg
add
mov
ret
repz
scas
mov
jmp
mov
push
pop
cmp
sahf
adc
daa
xchg
mov
out
stos
cwtl
or
test
jg
add
stos
jne
push
push
fdivl
fsubl
push
cs
dec
popf
in
ret
repz
jb
jae
pop
add
pop
add
sbbl
dec
mov
out
sub
adc
dec
cmp
popf
xor
and
out
ret
pop
jl
push
nop
dec
lds
mov
jmp
fcom
ret
mul
adc
call
int3
mov
sub
mov
xchg
adc
test
imul
add
mov
push
mov
cmpl
push
sbb
jae
pop
add
fcoms
xor
js
mov
lcall
sti
clc
scas
fsubs
fmuls
xlat
stos
rclb
push
lahf
push
and
dec
xchg
cmp
das
repz
ljmp
shll
lods
cld
sub
push
mov
dec
jecxz
in
das
push
cmpsb
adc
movsl
lret
call
lret
or
mov
sbb
jle
scas
lods
lods
xor
add
jb
mov
lahf
gs
xlat
pop
cmp
repz
mov
arpl
mov
and
scas
inc
xor
shll
inc
aam
out
in
sbb
sahf
add
addr16
call
daa
rcrl
mov
mov
shl
add
pop
push
fwait
into
sbb
cwtl
and
adc
sub
dec
pop
dec
ljmp
xor
pop
mov
xlat
negb
aad
sbb
lret
inc
jmp
imul
loop
adc
ljmp
adc
fucomi
mov
movl
add
mov
xlat
mov
sahf
out
out
push
cmp
out
and
scas
out
fildll
daa
fwait
lss
xchg
mov
pushf
jl
frstor
adc
add
bound
pop
cmp
gs
in
cltd
aad
push
mov
gs
in
adc
lret
jns
jecxz
cmp
inc
int
mov
loop
pop
or
pushf
xchg
mov
adc
sub
fidivl
pop
lock
jno
mov
out
inc
push
push
sbb
test
das
mov
stos
push
xor
dec
insb
mov
movsb
dec
jp
xchg
outsl
fsubrl
cmc
mov
or
adc
std
adc
mov
pop
sbb
int3
outsl
ljmp
in
sbb
loopne
and
xchg
mov
cmp
ljmp
inc
out
lock
lret
lcall
movsb
mov
addb
mov
js
gs
or
dec
cwtl
mov
mov
stos
xor
push
cld
aaa
mov
fcomp
push
pop
mov
fbld
scas
cld
out
mov
jge
imul
fmul
mov
xor
jle
fiadds
cmp
js
add
or
and
inc
popa
ljmp
adc
inc
sahf
mov
jae
addr16
lret
push
cmp
call
fildll
push
xor
push
lahf
ds
inc
mov
test
sub
js
iret
inc
cld
insb
mov
xor
pop
pop
mov
negl
nop
jl
fdivp
and
and
js
adc
repnz
fnstcw
test
or
fucom
inc
in
push
add
ret
sub
mov
jge
dec
int
jl
xchg
adc
shlb
ss
pop
xor
pusha
ret
pop
xorb
popf
test
lods
icebp
fdivl
push
repnz
pop
jle
adc
jl
ret
add
jmp
mov
rcrl
mov
and
mov
mov
popa
in
sbb
call
mov
fwait
pop
or
inc
adc
movsb
add
dec
lret
xor
xchg
add
inc
fs
lock
mov
cmc
inc
xor
dec
clc
adc
add
jmp
push
lcall
lret
out
and
mov
push
scas
mov
sub
aad
jp
dec
test
pop
push
jge
fmuls
mov
mov
in
test
jns
lds
mov
pop
mov
mov
inc
or
call
mov
cli
andl
rol
std
jae
or
into
mov
ja
jle
sub
jg
jecxz
shll
std
cmp
push
xchg
sarb
pusha
call
dec
lcall
and
cmp
and
hlt
call
nop
fcompl
loopne
loope
xchg
push
nop
add
stc
adc
dec
pusha
jns
mov
pop
push
mov
call
sub
pop
lcall
jo
subb
jl
pop
les
pop
insb
cld
xchg
cmc
into
xchg
and
push
xor
adc
or
lods
lods
dec
movsb
in
aam
add
jne
fadds
les
outsl
test
aaa
mov
sub
test
cmp
fs
add
mov
fcoms
mov
jp
pop
xor
gs
notb
sti
out
inc
outsb
cmpsl
mov
sbb
adc
sub
push
es
sahf
jne
fsubr
pop
sbb
test
inc
ja
mov
adc
xor
iret
cmp
imul
js
xchg
inc
sub
jmp
mov
cmp
lds
rorb
add
cs
js
xor
xlat
je
jbe
scas
cmpsl
clc
in
xchg
mov
das
lahf
repz
cmp
mov
cmpsb
loope
gs
sbb
lods
stc
inc
imul
xor
pop
pushl
push
outsl
xor
bound
std
fisubrs
out
jae
xchg
sbb
xchg
push
ljmp
cltd
stos
cmpsb
mov
or
xor
jns
xor
push
shll
sub
xor
nop
call
pop
loope
push
mov
push
lods
das
mov
loopne
arpl
inc
aaa
mov
repz
mull
mov
mov
jne
cwtl
rcll
hlt
gs
mov
scas
shll
std
dec
mov
push
cld
rcll
mov
fdivrs
int
push
mov
mov
inc
xchg
mov
repnz
std
mov
mov
rol
sub
fistpl
mov
push
inc
cmp
gs
cmpsl
xchg
xor
sub
fnstsw
leave
sbb
sbb
or
dec
sahf
aam
outsl
mov
repz
ja
mov
adc
insb
cmp
cmpsl
fsubl
lret
lcall
or
push
cwtl
rcl
inc
ret
shlb
jge
aaa
mov
push
pop
or
outsb
bound
jmp
or
cmp
rcr
jno
insl
adc
adc
cmp
in
mov
xor
aas
lock
cmpsl
and
fs
pop
lcall
out
stc
daa
punpckhbw
popa
movsl
pop
inc
and
push
cmp
push
push
mov
mov
mov
mov
mov
int
jecxz
stc
adc
out
jno
cmc
jne
xchg
xor
scas
shll
fistps
ds
out
mov
jge
adc
cmpsl
xchg
shll
xorl
mov
in
pop
dec
js
cmp
out
iret
pop
xor
push
out
cmp
mov
dec
sbb
je
lock
test
dec
jmp
cmp
ja
cmp
inc
pop
addr16
ficoms
jle
xchg
divb
pop
imul
ds
fnstsw
mov
pop
push
repz
lcall
xor
fnstenv
clc
sub
leave
or
cs
test
data16
mov
les
xor
mov
add
mov
dec
leave
in
mov
nop
imul
test
mov
jmp
lds
aas
or
les
gs
cli
fbld
test
jno
lds
jg
shl
jecxz
push
inc
or
mov
fdivs
jo
push
xchg
ds
adc
sub
sbb
sub
sarb
fucomp
pop
ret
pop
push
jmp
adc
cmp
mov
pop
lds
sub
fildll
ljmp
mov
add
and
cmpsl
push
aaa
mov
sar
rclb
inc
xor
fs
sub
mov
in
bnd
lds
xchg
movsl
frstpm(287
pushf
clc
mov
mov
jne
faddl
shl
lcall
xlat
push
sub
aas
fwait
test
mov
jp
inc
and
cs
mov
or
mov
gs
lcall
into
mov
push
stc
add
fs
push
imull
pop
pop
pop
cmp
push
rorb
push
mov
push
xchg
pop
sbb
push
mov
sti
mov
fsubr
sbb
arpl
cmp
pop
aam
adc
inc
or
xchg
mov
idiv
xchg
inc
leave
mov
mov
sbb
loope
push
adc
es
imul
es
les
mov
sbb
push
shrl
and
mul
xlat
call
mov
or
iret
arpl
into
test
pop
pusha
and
push
xchg
cmp
adc
cli
or
mov
push
ret
and
fildll
inc
adc
nop
push
cs
jne
mov
xor
xlat
jne
iret
add
jb
xor
dec
or
mov
mov
pop
mull
test
call
pop
xchg
test
divl
xchg
cli
out
push
ljmp
cwtl
cmp
cmp
fistpll
imul
aas
aam
mov
or
lods
jle
adc
push
in
int3
out
imul
push
fucomip
punpcklwd
xlat
fwait
ljmp
cmpsb
add
out
jmp
lahf
xor
and
std
jne
arpl
iret
nop
lret
mov
cmp
mov
xchg
fwait
xor
daa
ret
mov
cwtl
negl
adc
jmp
xor
ret
mov
hlt
lds
push
stos
xor
xor
lock
push
push
iret
mov
aam
stos
push
stc
outsb
fnsave
push
jecxz
mov
push
xchg
xchg
lea
test
xor
push
hlt
repnz
fwait
and
dec
jb
ljmp
mov
stos
in
add
scas
repz
ss
jle
cli
adc
mov
lock
out
sbb
pop
ja
xadd
fs
popf
icebp
xchg
pop
add
xchg
push
sbb
xchg
fs
dec
pop
mov
mov
adc
in
adc
adc
int3
cmp
xchg
imul
mov
xchg
std
or
sti
mov
fstpl
cmc
jo
jne
push
xor
nop
xorb
stos
sbb
cltd
jle
and
cwtl
mov
mov
in
sbb
hlt
movsb
repnz
xchg
bound
jmp
lods
mov
inc
mov
dec
punpckhbw
fidivrl
push
out
daa
inc
and
ds
sti
xlat
push
inc
insb
aas
sarb
xchg
or
fadds
aam
out
cmpsl
shlb
out
add
roll
lods
sbb
add
push
lret
adc
sbb
sub
push
pushf
lret
push
cld
adc
cmp
lods
test
add
xor
hlt
jbe
stos
testb
or
dec
stc
loope
bound
pop
rol
mov
adc
xorl
shlb
lds
les
add
jne
test
fidivl
idivb
sbb
sbb
scas
iret
sbb
cmp
pop
fwait
cs
xchg
fisttpl
dec
in
pushf
cmp
jns
lret
push
shlb
sbb
lock
lock
lret
out
faddp
or
ret
out
out
mov
leave
sub
mov
movb
jl
cwtl
int
cmpsl
aad
push
mov
cmpsl
mov
dec
loope
jbe
push
push
lret
mov
xchg
mov
lcall
sbb
and
test
pusha
sub
jnp
xchg
lret
dec
out
xor
nop
add
outsb
in
gs
cwtl
lock
shrl
insl
out
es
imul
fdivr
test
dec
lds
dec
or
cwtl
mov
xor
pop
push
addr16
mov
and
pop
movsl
mov
in
gs
dec
add
lret
xrelease
in
mov
add
fsubrl
and
jo
pop
aam
cmc
out
mov
and
sti
or
shlb
xor
and
sub
jb
mov
mov
dec
fists
cmp
gs
mov
dec
or
sub
or
sar
inc
cwtl
setle
outsl
dec
and
or
movsl
mov
faddl
xor
pusha
call
into
push
out
mov
shlb
mov
test
cmpsl
les
dec
std
aad
shl
insb
fmul
sub
lgs
jecxz
clc
loope
or
cmp
adc
in
out
push
lahf
dec
outsl
test
int
sbb
lods
imul
push
push
jbe
mov
xchg
imul
jecxz
dec
jmp
add
add
cmp
dec
iret
sbb
pop
mov
jbe
test
pushf
rcl
or
scas
and
mov
cs
jmp
fs
mov
add
ja
jae
or
pop
test
mov
shlb
lea
xor
ret
pop
lods
cmp
lahf
mov
int
sbb
cmpsl
int
pop
clc
ror
pop
pop
xorb
mov
ljmp
ljmp
xchg
int3
cmp
mov
subb
lret
rcll
xlat
xor
xor
ljmp
jae
xchg
mov
jbe
nop
mov
sti
add
jb
mov
fisttpl
push
outsl
xlat
adc
xor
dec
mulb
imul
inc
fistpl
pop
imulb
loopne
pop
adc
cmp
push
or
adc
cmp
inc
mov
iret
sbb
add
pop
xlat
andb
popa
and
clc
sub
out
xor
dec
ds
adc
sbb
jno
lret
push
outsl
out
std
cmp
lods
xlat
mov
aaa
jne
inc
pop
mov
aad
clc
rcrl
xor
dec
push
inc
mov
or
outsl
pop
xchg
mov
push
out
jnp
ljmp
pop
lahf
and
sub
leave
gs
repz
fmuls
pusha
out
mov
test
mov
xchg
scas
jge
gs
cmp
pusha
pop
shlb
and
cld
into
or
imul
mov
ss
push
or
out
mov
test
fimull
into
in
sar
adc
push
test
fmull
and
out
out
testb
cli
sub
test
mov
outsl
xor
loopne
nop
clc
lret
loopne
pop
leave
mov
push
mov
cmp
int3
cmpsl
rcl
mov
rorl
movsl
loopne
add
inc
mov
mov
mov
gs
jne
add
xchg
dec
cltd
mov
dec
or
addr16
hlt
dec
jne
or
in
les
icebp
sbb
mov
pushl
mov
sub
das
in
jmp
fstpt
ret
inc
pusha
wbinvd
in
clc
jns
pop
stc
mov
adcl
fimuls
mov
push
dec
push
lret
and
pop
push
lea
add
adc
sbb
xchg
push
out
jb
daa
push
clc
imul
mov
sbb
push
pop
jl
xchg
test
es
xor
jbe
aam
test
dec
clc
sub
mov
pop
fildl
mov
scas
mov
cmp
shrl
xor
mov
adcl
daa
dec
lods
xchg
jecxz
mov
or
push
shrl
or
outsl
xlat
push
mov
insb
and
cmp
adc
adcb
xlat
or
xor
pushfw
fsubr
aam
add
out
dec
jg
fnstenv
jl
sub
cli
notl
mov
jmp
xchg
push
mov
repz
cmp
jmp
shll
cmpsb
hlt
add
mov
pop
and
gs
jbe
dec
fidivs
add
jp
mov
pop
pop
addr16
outsb
repz
xchg
sub
xchg
data16
sbb
inc
scas
xor
cmp
pop
dec
mov
ljmp
mov
arpl
ret
xchg
loope
test
or
test
repnz
dec
rol
mov
cwtl
fildl
mov
dec
mov
rolb
popf
dec
sbb
repnz
mov
aam
add
fcomps
iret
out
jl
loopne
repz
add
ljmp
iret
mov
add
clc
ds
jno
hlt
sarb
pop
mov
lret
andl
add
fdivrs
push
out
dec
cmc
sub
hlt
pop
out
push
add
gs
push
jo
cmpsl
sar
test
xchg
les
addr16
jo
popf
outsl
dec
gs
mulb
add
rorl
cwtl
xchg
mov
call
and
mov
jmp
sub
add
out
fmull
test
xlat
movsb
sahf
fs
xchg
pop
xchg
sbb
pop
movsb
ljmp
mov
lahf
outsb
lcall
xchg
repz
mov
xor
out
loopne
out
jecxz
dec
push
cmpsb
push
jno
push
test
jmp
test
mov
inc
pop
je
test
push
test
cwtl
and
out
addb
iret
sbb
je
mov
decl
call
push
inc
out
lds
les
ret
aam
pop
add
mov
int3
dec
lret
mov
mov
inc
xor
int
out
les
imul
nop
sbb
daa
add
lock
in
lock
lret
dec
test
jno
mov
dec
fdivrp
adc
cld
sub
dec
xchg
rcll
lret
stos
xor
mov
loopne
dec
stc
add
cmpsb
testb
jnp,pt
clc
sub
mov
dec
pop
xor
push
rcll
mov
jge
and
imul
push
lock
cmp
mov
pop
loop
mov
xor
mov
jecxz
push
fdiv
int
test
mov
and
dec
cli
js
movnti
rolb
cltd
sti
shll
pop
data16
or
int3
into
jge
imul
pusha
adc
negb
int
mov
gs
jae
test
std
les
cld
jo
popf
sub
cld
xchg
gs
int
mov
xor
and
jecxz
sbb
fistl
cwtl
lds
mov
outsb
xchg
mov
in
gs
add
fildll
push
ljmp
inc
movsl
pop
sub
jne
mov
pop
js
mov
mov
mov
in
dec
sbb
hlt
xchg
cmpsb
mov
fsub
repnz
or
out
adc
cmp
sub
jmp
and
test
nop
mov
outsl
dec
fwait
mov
insl
push
xchg
in
inc
fstpl
ljmp
sbb
xchg
addr16
out
cmp
pop
push
stc
xor
adc
out
test
push
add
dec
mov
mov
push
repnz
push
sub
add
sbb
and
stos
adc
or
lahf
jmp
inc
stos
cwtl
pop
int3
mov
les
mov
push
adc
sarl
je
and
mov
fwait
sbb
pop
cmp
test
aam
fistps
outsb
fstpt
sarl
out
xlat
movsb
cmpsb
pushf
mov
mov
stos
gs
movb
insb
dec
inc
xlat
or
inc
je
stos
mov
jo
push
sbb
sbb
repnz
mov
sbb
jnp
push
mov
movsb
hlt
push
call
jg
push
pop
mov
stos
in
int
shlb
inc
push
dec
arpl
or
out
int3
popf
lret
adc
inc
scas
fdiv
leave
push
mov
dec
inc
or
xchg
out
aaa
pop
clc
imull
pop
adcl
das
xchg
xchg
movsl
sbb
inc
and
rcrb
stos
mov
clc
sbb
dec
xchg
fst
out
ds
mov
int3
mov
sbb
jmp
scas
int
dec
adc
fisttpll
dec
fnsave
mov
or
and
mov
inc
loopne
loopne
fdivrs
sahf
xchg
int3
jl
mov
push
in
cld
movsb
out
mov
or
pop
jg
adc
lods
pop
cmp
mov
jns
sub
push
adc
imul
push
jbe
adc
in
fmuls
nop
mov
adc
sbb
cld
lds
mov
push
sub
mov
out
cld
xchg
lret
xor
adc
aad
iret
out
imul
out
xor
xchg
repnz
or
or
lahf
xchg
mov
jo
ret
insl
mov
popf
popa
sub
out
and
popl
hlt
add
int
ljmp
cli
lahf
clc
xlat
pop
mov
push
lods
leave
aam
mov
jl
mov
gs
lahf
sbb
out
mov
pop
int
inc
sbb
es
sti
loope
and
xchg
test
lret
and
gs
inc
mov
test
ss
setl
call
cld
mov
clc
sbb
inc
sub
in
fs
or
sub
xchg
mov
jb
dec
xchg
cltd
pop
mov
shrl
insb
cltd
ficompl
push
sub
rol
lods
mov
pusha
xchg
xchg
mov
sub
ret
aad
cmpb
mov
inc
call
pop
stos
jecxz
or
and
movsb
test
mov
add
jg
mov
push
mov
xchg
fcoms
pop
lret
mov
lret
mov
nop
push
fistpll
dec
xor
pop
mov
or
popf
and
outsl
jne
adc
xchg
adc
sbb
xor
dec
and
lods
jg
inc
aad
or
addl
das
adc
aas
stc
es
nop
mov
mov
push
pushf
xchg
or
rclb
mov
sbb
mov
cmp
out
in
jmp
gs
scas
js
imul
jmp
aam
in
js
xchg
mov
cmc
testb
mov
sub
fs
mov
inc
mov
pop
push
add
gs
cltd
in
jg
cmpsb
fucomp
mov
nop
lret
jnp
imul
pop
cmpsl
rorb
inc
lahf
xchg
add
lret
ljmp
stos
ret
xlat
adcb
ljmp
and
out
fidivrs
pop
xsavec
xchg
jle
movsl
mov
jo
adcb
dec
mov
sbb
add
dec
ljmp
cmp
jl
mov
mov
mov
cmp
lock
dec
imul
mov
int
cmpsb
lods
sbb
inc
mov
jmp
iret
dec
out
pop
push
repnz
loop
cld
into
rcll
loopne
xchg
sub
pop
pushf
sbb
mov
daa
into
movsb
cmp
gs
outsb
fbld
arpl
sub
push
lahf
pop
dec
jae
mov
or
xlat
mov
fisttps
addr16
loop
test
jae
fstl
sub
outsl
pusha
repz
add
dec
push
test
add
sbb
dec
cmp
mov
cmpsl
mov
inc
stos
das
xchg
inc
sbb
movups
pushf
aad
cmp
ljmp
pop
inc
imul
xchg
sbb
outsb
in
pop
ljmp
cwtl
fadds
hlt
sarb
or
dec
pop
cwtl
jno
add
xor
aas
dec
adc
jle
adc
adc
xlat
frstor
add
lods
in
mov
mov
cmc
xchg
or
repnz
or
mov
sahf
inc
cmpl
jne
shlb
lods
stos
and
aas
fists
or
int3
fdivs
mov
mov
cmp
outsl
test
cli
adcb
mov
in
test
cmp
loop
mov
fadd
and
loopne
fldcw
push
sub
sub
sbb
fs
test
adc
mov
jmp
out
gs
scas
fwait
call
and
divb
in
loopne
sarl
leave
dec
call
fmul
add
add
in
push
mov
repz
push
insb
jl
mov
jle
mov
sub
lea
mov
lcall
pop
lds
pop
pop
inc
aas
jle
imul
mov
std
jo
je
push
mov
stos
lods
add
rcll
push
in
adcb
adc
push
or
jmp
adc
popa
jae
and
push
push
loop
mov
test
out
pop
jae
jns
icebp
pop
xchg
fdivrl
xchg
into
xor
mov
lds
pop
jecxz
ficoms
xchg
in
ljmp
in
cmp
adc
movsb
imul
dec
pop
xchg
adc
js
dec
add
add
mov
cmp
mov
pop
mov
repnz
test
pop
clc
popf
idivl
inc
add
notl
inc
daa
test
cli
xchg
fsubs
insb
mov
loopne
jae
push
shl
mov
xor
ljmp
push
imul
fs
lret
cmp
lock
inc
aam
add
sub
or
out
sbb
out
sti
out
adc
loop
dec
push
popa
dec
nop
in
adc
je
pusha
add
lret
pop
out
cmc
adc
xor
loopne
pusha
icebp
jmp
xchg
fdivrl
es
clc
jae
fmul
sub
rcll
in
xchg
add
mov
mov
out
bound
inc
cmp
xchg
int3
loopne
and
fbld
ror
aad
sbb
insl
cmpsb
sarl
dec
cli
repz
xchg
mov
imul
dec
test
lods
pop
xchg
loopne
decl
dec
movsl
leave
xor
repnz
aam
mov
xchg
rcr
pop
rolb
test
hlt
aam
adcb
loope
sbb
idivl
xor
loope
int
and
repz
pop
out
shrb
mulb
fs
lea
cwtl
clc
mov
dec
mov
cmp
mov
js
addr16
je
push
push
sbb
in
stos
adc
and
hlt
out
mov
js
add
nop
fsubl
daa
push
fdivl
ret
shl
hlt
mov
lret
mov
nop
sbb
add
sti
in
js
inc
fwait
movsl
lea
cmc
jmp
xorb
add
test
out
cltd
add
test
xor
cli
xchg
cwtl
xchg
in
push
sarl
dec
out
cwtl
mov
jo
pusha
popf
dec
maxps
add
les
out
sbb
mov
insl
pop
jecxz
sti
jg
daa
call
sub
sub
and
sbb
pop
mov
fstps
aaa
daa
stos
fisubs
jp
js
add
das
aas
dec
jp
dec
cmp
dec
out
xor
push
call
xchg
test
dec
test
mov
mov
out
fwait
xor
fsubl
lret
mov
mov
push
mov
call
add
cmp
scas
mov
add
dec
cli
mov
adc
lea
jmp
idivl
xor
xchg
push
mov
push
lret
sbb
lret
sub
cmp
mov
subl
mov
loopne
lock
in
inc
cmp
in
call
or
pushf
mov
fidivl
add
cmp
cwtl
js
xchg
and
aas
or
out
push
movsl
jne
in
xor
mov
cs
movsl
mov
cld
or
adcl
gs
nop
push
push
mov
pop
push
or
pop
lock
xchg
sbb
loopne
and
xlat
adc
pushf
dec
rolb
je
lock
lods
cmp
xchg
inc
push
fistl
leave
pop
add
mov
inc
xchg
clc
xbegin
push
xchg
bound
insl
notb
gs
mov
jns
aaa
push
xchg
mov
pop
pop
and
lret
add
sti
pushf
mov
dec
push
test
cld
fadds
int
and
call
cld
cli
pop
cmp
xchg
cmc
push
cmp
in
shll
fisttpll
negl
fstpl
xor
add
cmc
int
in
pushf
mov
push
aaa
les
js
in
dec
mov
out
jmp
dec
lock
ljmp
gs
mov
lret
into
in
adc
dec
inc
aad
xlat
addr16
add
cmp
mov
idiv
sub
sbb
jmp
adc
lahf
sbbl
mov
movsl
xchg
mov
gs
adc
fistps
les
inc
sbb
pusha
mov
and
jecxz
xchg
test
or
out
cmp
mov
jg
outsl
fmuls
ljmp
jo
mov
xor
aam
cwtl
shll
fs
mov
pop
dec
jae
sbb
xchg
fsubrs
jle
outsl
adc
add
pop
mov
ljmp
aad
xor
rorl
imulb
cmpsl
sbb
push
clc
adcb
cmp
call
jmp
adc
sub
lcall
insl
iret
dec
mov
adc
lea
xchg
fadds
shl
movsl
cmc
enter
pop
fcomps
clc
jl
lahf
push
xor
mov
shll
pop
sub
pop
cmp
mov
notb
sub
mov
jle
in
gs
pop
pop
mov
int3
repnz
lret
mov
in
adc
adc
and
sbb
dec
sub
push
inc
sbb
lock
mov
pop
mov
icebp
sbb
mov
cmp
je
andb
outsl
sbb
sbb
or
lods
ja
dec
pop
ficoml
into
dec
push
lahf
sbb
gs
and
outsb
mov
outsl
mov
push
popl
ret
pop
cmc
arpl
push
scas
sub
inc
push
in
dec
xchg
stos
pushl
and
into
fistpl
push
test
lea
fisttpll
imul
mov
mov
pop
jl
and
repnz
stos
outsb
ret
pop
dec
lahf
lea
mov
imul
xor
movsb
out
shrb
loop
lahf
fnstcw
push
xor
mov
fcompl
push
loopne
leave
jb
xor
lcall
cmp
imul
push
xchg
sbb
in
sub
daa
mov
xlat
and
das
and
jmp
sbb
shlb
iret
push
pop
cmp
pushf
lods
js
and
movsb
lahf
decb
jmp
dec
and
cmpsb
adc
test
cmp
xor
fucom
rolb
movsb
pop
clc
rclb
addr16
ljmp
xor
dec
sti
jnp
push
pop
insl
push
push
sub
mov
cmp
adc
xchg
and
inc
dec
in
dec
cmp
ret
xor
pop
fs
jl
and
jmp
jnp
push
xchg
icebp
fwait
cwtl
stos
cmpsl
add
pop
sub
mov
test
mov
int
cld
lods
fists
addr16
sbb
mov
pop
lods
leave
cld
call
xor
fs
mov
xor
and
aas
cld
or
pop
mov
int
aaa
insb
sahf
cmp
and
mov
movsl
and
cwtl
add
lret
xchg
loope
or
cli
dec
add
pop
jl
mov
int3
xor
dec
int3
ljmp
fcoml
pop
xor
fiadds
jmp
lahf
push
test
xchg
mov
jbe
scas
inc
mov
xor
not
test
xchg
mov
stos
mov
xchg
ss
fidivl
lods
rcll
adc
add
mov
hlt
leave
icebp
pop
int3
shrb
test
in
mov
repnz
addb
mov
in
roll
dec
mov
xchg
cwtl
add
nop
addr16
sar
sub
data16
xchg
iret
test
decl
je
adc
add
pop
ds
lock
stc
adc
out
sbbb
repz
sbb
pushl
jbe
dec
loopne
xchg
xchg
popf
pusha
pop
adc
addr16
xchg
and
mov
inc
int
nop
dec
push
cmpsl
sub
rcll
dec
lock
adc
popf
push
hlt
xchg
rcl
adcb
dec
gs
call
pop
rcr
aas
xor
outsl
ds
xchg
aad
xchg
aas
mov
push
pop
or
shl
in
inc
xchg
in
push
push
jmp
aas
pop
imul
jns
dec
xchg
jle
xor
cmc
aas
bound
or
jnp
popf
test
sbb
inc
pop
inc
outsl
inc
adc
xchg
mov
and
ljmp
sub
mov
xlat
sbb
dec
xchg
test
adc
or
int
cmp
inc
sub
aaa
jb
pop
jae
fwait
call
ds
addr16
xlat
lods
xchg
and
jecxz
rcrb
shll
hlt
and
push
jge
pop
adc
ljmp
data16
hlt
imul
das
jae
xchg
ret
out
sbb
arpl
inc
imul
rorl
sar
cmp
fwait
cli
or
dec
xor
bound
adc
paddq
test
scas
mov
fwait
testb
pop
pop
sbb
imul
mov
jle
and
sbb
fidivl
sbb
and
stos
pop
xchg
push
cltd
lock
add
adc
xor
xor
js
xchg
mov
daa
and
jecxz
sbb
xchg
jp
inc
pop
mov
cmp
jmp
mov
popf
sti
aad
push
mov
xchg
or
inc
add
mov
enter
jns
or
jmp
ljmp
aad
mov
jp
push
insb
xchg
or
sbb
mov
clc
ljmp
int
mov
pop
mov
dec
fsubr
dec
and
cwtl
xchg
andb
ret
cltd
fcoms
dec
xchg
rcl
movsl
xchg
out
scas
inc
dec
push
gs
xor
adc
movsl
aad
push
fcoms
inc
mov
pusha
add
xor
pushf
sbb
call
cmpsl
ss
mov
and
lret
addr16
pop
data16
sbb
mov
or
int
inc
cmp
mov
lods
jmp
call
cmpb
gs
scas
or
adc
movsb
xchg
dec
gs
dec
and
repz
les
sbb
jbe
repnz
mov
xchg
loopne
jb
call
mov
xchg
xchg
jne
aas
mov
jmp
scas
repnz
xchg
shlb
xchg
pmulhw
mov
in
stos
jno
stc
insb
cwtl
mov
cli
lea
dec
sbb
test
xor
sub
mov
mov
aaa
lock
scas
insb
jl
add
jg
imul
mov
xchg
fs
das
adc
mov
adc
mov
inc
jg
jbe
pop
xchg
fisubrl
lock
nop
xor
ret
and
push
test
repz
jp
dec
rcr
add
inc
das
iret
xchg
xor
adc
mov
mov
sbb
sbb
cld
andps
xchg
mov
sub
cmpsb
aaa
mov
setl
je
push
fwait
out
mov
lods
xchg
pushf
fcomps
hlt
add
incl
push
pop
or
push
cmc
or
add
popf
fbstp
nop
dec
outsl
push
push
repz
mov
movsb
gs
dec
std
aaa
sub
leave
call
mov
fidivrs
xchg
arpl
and
jmp
dec
adc
daa
lea
popf
pop
nop
mov
sub
in
adc
fs
loope
and
outsl
and
mov
pop
icebp
lea
adc
je
aas
js
add
ljmp
test
add
repz
aad
mov
cmc
inc
nop
sub
ret
in
cmpsl
fstpt
push
inc
scas
and
int
negl
jp
add
stos
jb
rcl
nop
xor
sbb
cld
imul
in
ljmp
cmp
mov
jne
dec
sbb
sahf
addr16
mov
adc
xlat
sbb
int3
and
sub
fisubs
mov
xor
cld
repnz
inc
xchg
shl
mov
and
iret
gs
das
mov
jo
jle
sbb
pusha
mov
fcoms
mov
add
adc
push
xchg
mov
jle
ja
cmc
ja
push
inc
cmpsl
int3
add
mov
insb
jg
mov
fwait
clc
cmp
lock
jl
cwtl
and
icebp
cmpsb
data16
jno
fldenv
xor
xchg
mov
xlat
cmp
aaa
add
mov
test
adc
js
subl
call
dec
jne
mov
mov
xor
jge
in
ret
mov
sbb
cmpsb
add
sbb
push
push
jnp
popa
out
mov
jno
ret
pop
ja
ljmp
test
divl
lods
mov
arpl
xchg
dec
cltd
mov
mov
jecxz
fs
rcrb
adc
or
xchg
xor
jg
jg
nop
repnz
push
mov
rolb
add
jne
insb
xor
fistps
in
dec
mov
add
and
out
xlat
enter
icebp
pop
iret
das
jmp
call
movd
push
xchg
mov
and
lock
xor
fiadds
cs
pushf
add
mov
push
outsb
mov
adc
fdivrs
mov
mov
ds
mov
out
sbb
cmp
inc
fwait
sbb
mov
pop
push
cmc
clc
gs
imul
repz
push
fdivs
rcl
xorl
out
jle
fcoml
aaa
clc
cmp
je
mov
jne
in
pop
jae
fcmovu
xchg
jmp
xor
or
dec
pop
mov
pop
fbld
cld
sub
dec
shrb
stos
mov
push
pop
mov
pushf
mov
xlat
outsb
adc
aam
push
mov
mov
mov
dec
out
call
mov
insb
ficomps
push
pop
cli
sub
decl
xor
loope
cmp
dec
not
cs
lret
loop
pop
cmpsl
mov
loop
mov
mov
clc
test
mov
mov
les
and
cmp
in
xor
adc
xchg
mov
mov
cmpsl
and
pop
pop
dec
cs
jmp
pop
loope
cmpsl
mov
jmp
loop
adc
ljmp
je
aas
push
cmpsb
sub
pop
in
addr16
lea
gs
cmpsl
push
sbb
call
fadds
cmp
imul
insl
jl
or
xor
push
clc
nop
sahf
lret
dec
add
push
repz
mov
xchg
xchg
fdivr
adc
lds
cmp
std
sti
ds
mov
addr16
ss
inc
fs
cmp
cmpsl
clc
rcr
pop
test
out
sti
repnz
dec
sub
mov
js
pop
cs
push
imul
pop
jl
out
outsl
sub
sbb
mov
pop
std
mov
sbb
jne
ja
scas
lock
pop
sub
push
pop
lods
xlat
add
xchg
adc
or
ret
es
lods
out
push
test
xchg
push
and
and
inc
mov
push
gs
ds
ja
or
data16
dec
movsl
addr16
xchg
inc
inc
fcmove
cmp
mov
lret
inc
mov
mov
loope
ds
aas
iret
dec
dec
icebp
and
pop
pop
or
shll
jle
mov
lret
mov
bound
mov
add
shr
and
pop
addr16
clc
pop
les
sub
stos
inc
xor
add
popf
negb
mov
adc
and
xchg
rcll
adc
mov
sbb
mov
test
sbb
mov
aam
ds
sar
int3
cmp
jmp
out
fs
jb
xchg
adc
adc
aad
in
gs
pop
fisttpll
jae
pop
xchg
nop
mov
std
sbb
clc
inc
daa
addr16
xor
pop
gs
fiadds
xchg
js
loopne
sbb
mov
in
insl
sbb
and
and
arpl
or
mov
jg
nop
push
or
dec
jns
sub
fcoms
push
lret
call
and
shrl
xchg
and
fcomps
testb
jge
cmpsb
rolb
mov
and
jp
jne
pop
int3
popf
fmul
sbb
fcmovb
insl
cmp
jo
cwtl
sar
aam
mov
idivl
out
sub
sub
mov
cmp
pop
sbb
mov
adc
scas
sbb
mov
rclb
out
aaa
sbb
cli
xlat
mov
inc
cmpps
orb
cmp
fs
cmc
dec
mov
out
jmp
xor
add
in
lret
push
rcll
js
mov
cmp
mov
xor
cli
pop
mov
xor
sbb
xchg
pop
gs
addr16
sbb
aaa
fmuls
data16
pop
mov
outsl
ficoms
in
shlb
imul
int3
idivb
loope
lret
rolb
cmp
loop
mov
in
leave
sbb
mov
jb
pop
lahf
into
xor
and
push
bound
lock
pop
repz
rorl
mov
mov
out
and
js
repz
fwait
mov
pop
add
sbb
ss
add
jnp
push
aad
jecxz
cmpsl
pop
pushf
jmp
subl
test
or
mov
lock
xor
scas
xor
jne
pop
les
inc
cltd
pop
pop
push
aad
mov
dec
rorb
jno
xor
aaa
mov
push
jl
notl
add
hlt
shlb
test
lock
jl
dec
aaa
loopne
mov
adc
mov
or
out
mov
and
xor
or
cli
aas
cs
enter
fildl
js
ljmp
push
mov
test
stos
jae
daa
xchg
pop
push
rclb
pop
adc
and
or
sub
adc
es
je
cmp
nop
jne
push
xor
in
clc
lahf
nop
aaa
jae
scas
xchg
in
jmp
pop
xchg
aad
aaa
or
or
pop
pop
mov
jo
in
sbb
call
pop
xchg
or
data16
dec
push
shr
pop
add
lea
sub
xlat
mov
push
push
stc
jl
aaa
cmp
cltd
xor
add
dec
loope
pusha
stos
sbb
push
movsl
or
sbb
shlb
out
clc
lods
sub
or
push
clc
into
cmp
pushl
sbb
shrl
dec
loopne
data16
sub
xchg
cmc
adc
mov
not
jbe
push
js
movsl
dec
mov
sbb
jmp
ret
gs
adc
dec
cmpsb
leave
lret
inc
or
add
sub
sbbb
aam
addr16
and
add
pop
fidivl
sub
scas
push
inc
jne
cmpsb
cmp
jo
loop
int3
lods
mov
jl
sahf
shlb
xor
fstpt
scas
rclb
cwtl
fstpt
out
jg
pop
push
xor
clc
dec
adc
ret
inc
test
bound
lahf
hlt
fldt
dec
std
xor
and
iret
pop
sbb
cmp
sbb
into
popf
in
pop
add
mov
mov
cmp
jno
pop
pop
cmp
cmp
push
scas
xor
add
pop
mov
xchg
int3
call
adc
outsb
andb
mov
sbb
fbld
and
repnz
push
aam
pop
adc
dec
fwait
rcrl
aam
std
leave
inc
mov
pop
push
xor
sar
bound
fcmovnb
cwtl
pop
jmp
push
mov
cmpsb
into
and
pop
adc
xchg
int3
in
into
add
test
jecxz
outsl
mov
mov
and
mov
mov
call
cmpsb
mov
es
xchg
cwtl
jmp
dec
pop
rclb
sbb
fldenv
jno
mov
ljmp
mov
cmp
dec
cli
fidivrs
push
lock
mov
fldl
int
mov
int3
push
fistpll
xchg
pop
or
sbb
cmp
add
or
andl
lcall
imul
push
mov
add
sar
rclb
mov
loop
cltd
pop
movsb
add
daa
pop
lahf
in
and
adc
loopw
sbb
lock
iret
dec
xor
ljmp
mov
mov
cli
jno
pop
dec
xchg
sub
iret
js
jo
jl
xor
outsl
pop
cmp
sbb
pop
mov
imul
inc
dec
in
aas
pop
push
or
xchg
inc
ljmp
and
or
lret
ret
xchg
imul
shrl
daa
daa
psraw
push
and
mov
or
cmp
mov
hlt
mov
mov
cltd
shlb
lds
cwtl
xchg
dec
pop
mov
push
cmp
sbb
shl
pop
rcr
jecxz
mov
xor
dec
jae
outsl
mov
cmp
pop
jle
stos
cmpsb
out
mov
in
nop
jno
cmc
rol
out
mov
lahf
sbb
push
gs
adc
push
cmp
inc
imul
jecxz
fisttpl
jns
mov
mov
divl
shlb
test
adc
cmp
add
mov
jbe
imul
lret
test
pop
test
cmpsb
mov
das
es
add
in
inc
mov
test
cs
aas
xchg
push
dec
mov
dec
repz
cmp
das
add
jne
inc
rclb
and
and
push
mov
outsl
shl
sub
arpl
cmp
sahf
into
ret
xchg
mov
shll
shlb
mov
shl
in
sbb
push
insb
mov
xchg
je
push
lcall
scas
aaa
inc
mov
dec
sahf
jne
and
add
mov
push
xchg
addr16
sbb
les
push
mov
jne
inc
dec
jg
hlt
inc
pop
hlt
dec
xchg
in
cmpsb
lret
xchg
mov
adc
adc
loopne
push
daa
inc
mov
icebp
inc
loop
test
cmpsl
fdivs
loopne
clc
sub
jo
jne
in
in
cmp
aaa
push
lret
sub
inc
or
inc
dec
addr16
xor
jnp
xor
ljmp
test
mov
dec
xchg
iret
xor
xchg
cmpb
mov
add
jge
dec
jl
mov
xor
add
dec
fidivrl
fimull
or
adc
addr16
pop
xchg
popa
sbb
loopne
mov
ret
or
mov
mov
and
pop
je
push
movsb
push
ss
aam
shrl
mov
outsl
or
or
in
pop
out
les
stos
pop
jl
nop
jns
enter
aam
inc
int3
cs
sti
and
popf
or
mov
ljmp
icebp
outsl
jno
loopne
outsb
mov
xchg
cmp
xlat
loop,pn
push
mov
inc
sar
shl
pop
adc
push
insb
dec
sbb
and
loop
test
sub
out
cwtl
les
mov
xor
shl
loopne
repz
mov
out
pop
mov
push
imul
shl
in
outsl
adc
cmp
xchg
and
scas
dec
negl
lcall
pop
jl
in
int
les
mov
push
outsl
push
pusha
fdiv
mov
push
xbegin
inc
push
in
data16
loopne
movsl
jo
mov
fnstenv
fnstenv
addr16
mov
inc
add
fsubl
jl
scas
outsl
xor
xchg
gs
adc
lea
fcom
test
mov
cli
hlt
mov
xor
imul
cmp
iret
pusha
hlt
lahf
gs
in
xchg
sbb
sbb
sbb
gs
mov
xchg
pop
sar
insb
mov
adc
arpl
sub
xchg
mov
push
stos
jl
push
leave
pop
pop
cwtl
push
push
shll
and
in
ret
and
aam
add
and
leave
nop
outsl
add
mov
cli
filds
dec
pop
and
push
addr16
popa
in
iret
lahf
ret
rorb
mov
mov
popa
mov
mov
jne
scas
lahf
out
imul
mov
shl
rorl
clc
ret
cmp
test
nop
adc
jb
pop
adc
rcrl
aad
cwtl
pop
and
popf
into
bound
mov
sub
push
jle
xor
dec
adc
and
gs
push
add
outsl
insb
lea
dec
dec
adc
and
cmc
cmp
popf
or
or
inc
movsl
sbb
mov
sbb
pop
int
push
push
or
test
xchg
jmp
out
in
in
stc
jo
mov
shrb
cmp
sub
fisttps
sbb
dec
in
jne
mov
push
lods
fcmovnu
lret
out
mov
shrb
adc
sahf
loope
rol
bound
pop
insb
aad
sbb
and
pop
dec
mov
outsb
or
mov
jae
mov
cmp
gs
mov
aas
push
cmp
mov
mov
or
out
neg
jmp
test
mov
out
clc
bound
push
pop
sub
add
testl
roll
or
clc
sbb
lods
in
pusha
lret
dec
xor
pusha
mov
push
cmpsb
push
dec
mov
divl
push
rcl
lds
out
mov
lea
dec
sbb
addr16
push
rcll
fwait
stos
adc
inc
lret
push
mov
mov
lahf
cmp
iret
ljmpw
jmp
das
and
or
adc
xchg
cmp
xchg
lret
jo
push
or
ss
movsl
and
insb
lret
lods
jnp
shlb
mov
gs
or
clc
dec
mov
es
dec
mov
cmc
push
xor
xor
jmp
clc
lret
xchg
sub
fwait
popf
xlat
jecxz
lock
mov
xor
pop
sbbb
repnz
adc
cwtl
fildl
pop
mov
imul
sub
adc
cli
ljmp
iret
ror
dec
lret
sub
hlt
cmp
sahf
xlat
mov
rclb
jns
lret
add
imul
out
jmp
test
fwait
cwtl
scas
lret
rol
lds
lret
hlt
test
xchg
mov
push
imul
repnz
ljmp
adc
inc
notb
jecxz
mov
cmc
cli
rcll
xchg
lret
js
nop
adc
daa
pop
lret
and
jg
push
ficoml
jmp
and
shlb
cmp
fstpt
sub
gs
das
je
xchg
xchg
rcr
pcmpeqw
cmp
push
inc
paddq
xchg
pop
xor
mov
pop
gs
mov
cld
xchg
xor
rcrl
dec
dec
xchg
pop
dec
leave
pop
call
xchg
sbb
out
imul
je
fucomi
ds
sbb
shlb
std
sbb
ror
and
xchg
pop
mov
and
in
aaa
xchg
or
shrb
fcmovb
and
cmp
fwait
pop
xor
xchg
pop
jl
aad
ja
lret
fucomi
clc
cmp
or
push
lock
inc
mov
addl
jo
sbb
push
les
in
cmp
push
dec
cmpsb
sbb
push
mov
xor
inc
aam
nop
iret
lahf
inc
jns
lret
loop
mov
in
pop
aas
std
lock
sub
mov
mov
pop
mov
jle
push
aam
xchg
inc
enter
xchg
add
aad
fs
cmpsb
movsl
les
pop
loop
loopne
pushf
pop
add
fsubrs
rcrb
inc
ret
mov
les
imul
into
dec
pop
mov
fisubrs
stc
int
je
lock
xbegin
mov
pop
jo
pushf
pop
mov
sbb
push
pushf
outsl
mov
push
ficompl
pop
aam
divb
dec
pop
fcompl
sbb
fs
out
dec
push
dec
imul
cmpsb
and
out
mov
inc
sub
mov
js
or
add
pop
test
aad
adc
loope
imul
pop
sbb
mov
or
clc
popf
fcmovnu
loopne
fdivs
in
js
mov
push
jmp
andl
repz
sti
rclb
unpcklps
mov
pop
push
js
inc
sub
mov
jle
xchg
mov
push
xchg
fwait
and
out
or
xor
xor
pop
adc
movsb
imul
loop
pop
cmp
test
repz
jno
outsl
mull
sub
arpl
jne
into
or
or
ljmp
cli
inc
pop
addr16
clc
xchg
pop
push
xrelease
jl
cmc
insb
repz
in
lret
mov
les
shlb
in
or
mov
jne
pop
gs
in
les
in
adc
sub
mov
insb
inc
jne
out
call
mov
lods
lods
add
insb
sahf
mov
jle
scas
daa
push
push
sti
add
popa
pusha
ds
lods
cmp
dec
jae
dec
inc
out
addr16
mov
or
jecxz
push
fdivl
stos
mov
xchg
dec
mov
in
mov
stos
cmp
daa
rcl
test
cmp
mov
gs
gs
sub
mov
xchg
jmp
pop
jnp
test
add
cmp
int3
xlat
pop
in
sub
cli
push
xchg
sbb
fldenv
dec
jns
pop
mov
jle
frstor
ss
pop
pop
out
push
adc
cmp
sahf
xor
cltd
or
fidivl
mov
popf
inc
fucomp
mov
and
or
pop
hlt
mov
ljmp
push
mov
mov
movsb
and
pop
push
add
jns
fucompp
mov
dec
pop
leave
push
add
mov
xor
cmc
mov
movsl
mov
es
jbe
push
pop
cmp
fisttps
add
push
lret
rcrl
sub
out
xchg
or
adc
push
out
jno
data16
mov
ljmp
xchg
and
pop
lock
push
das
in
aas
les
cmp
mov
insb
scas
test
inc
das
adc
in
outsl
loopne
movsl
imul
in
stos
mov
cmpsl
popf
and
aad
lock
or
push
xchg
or
ja
call
xchg
xchg
aas
push
outsl
shr
inc
add
testb
xor
cmp
mov
cli
mov
jcxz
mov
fisubs
add
mov
out
scas
call
sub
xor
in
jne
movsl
jecxz
dec
sub
inc
mov
int3
rcrb
push
lcall
mov
js
stos
xlat
xor
add
xchg
in
stos
sub
mov
jnp
js
xor
push
mov
cmp
jbe
or
hlt
in
mov
hlt
lret
in
iret
sbb
out
out
data16
jbe
rorb
mov
aam
cld
test
int3
pusha
shlb
ljmp
cld
cmp
stos
je
jg
mov
sbb
scas
ljmp
jo
sbb
outsl
in
sbb
aad
shrb
hlt
clc
dec
lahf
rorl
pop
imul
ja
lea
xlat
fildl
sarb
addr16
fidivrs
and
movsb
cmp
or
pop
in
imull
ficoms
jo
cwtl
push
inc
icebp
enter
push
movsb
xor
mov
insl
mov
ljmp
jb
cmp
mov
mov
mov
mov
and
ficompl
aam
inc
dec
sbb
adc
jmp
hlt
stos
pushf
cmp
pop
in
in
test
mov
data16
and
rclb
pusha
fsubr
ds
push
mov
cmpsb
outsb
mov
adcb
loopne
xlat
in
lret
dec
popf
and
out
hlt
in
out
nop
int3
xchg
lock
loop
into
int3
shlb
out
data16
in
mov
aas
inc
imul
xchg
fidivrs
dec
xlat
repnz
incl
je
shll
stos
push
nop
mov
jbe
sub
adc
jl
jge
cmp
aaa
loopne
out
int
add
xchg
loop
fdivrl
add
call
pop
loop
sbb
push
add
push
cmpsb
push
js
lock
aas
ljmp
rclb
lcall
lret
fnstcw
js
fisubs
cmp
into
scas
adc
and
pop
lock
incl
rclb
dec
sahf
js
pop
mov
iret
int3
xchg
movsb
icebp
ret
dec
jbe,pt
imul
mulb
decb
dec
xchg
dec
stc
push
es
pop
inc
mov
xchg
dec
js
clc
jb
mov
imul
mov
int3
cmc
int
test
xor
test
mov
and
sti
test
cmp
mov
pop
sbb
scas
lret
adc
test
out
add
in
xchg
shlb
jae
lahf
fistps
and
xor
scas
lds
ljmp
pop
test
sub
outsl
popa
ljmp
aaa
xchg
xor
sub
and
lahf
mov
dec
shlb
pop
or
mov
add
mov
pop
mov
add
fs
lret
rol
fsubl
dec
lret
aam
bound
mov
hlt
leave
pop
std
testl
cmpsl
pmuludq
pop
xlat
add
xor
aam
lahf
push
rcrb
mov
dec
int3
pop
xor
mov
add
cmp
mov
cli
iret
inc
insb
js
lods
xchg
push
dec
ja
test
push
add
sub
lret
dec
xor
dec
xchg
push
out
push
sub
insl
mov
xchg
sub
fwait
movsl
cwtl
sbb
lahf
jbe
cmp
fs
xor
lret
push
pushf
pop
adc
int
sub
push
or
clc
inc
rolb
mov
pop
outsl
sbb
addr16
or
inc
adc
imul
aad
imul
xchg
das
rcl
dec
inc
test
jno
aaa
aaa
and
pop
xchg
mov
out
xchg
cwtl
popf
push
mov
lods
or
es
add
and
in
cmp
push
mov
xchg
int3
adc
pop
lret
into
daa
jl
dec
cmpsb
in
push
xor
mov
jge
loopne
ljmp
testb
imul
sub
and
mov
mov
dec
es
call
cld
mov
in
xchg
movsl
lcall
out
mov
addr16
xchg
or
sub
dec
fisubl
inc
cmp
push
pop
shll
rcrb
cmp
out
jbe
or
sbb
data16
daa
into
push
imul
inc
mov
data16
adc
cld
cmp
fstpt
and
xor
mov
dec
cmpsl
adc
iret
in
or
lret
add
jo
xor
fmul
xchg
jns
into
xchg
sub
pop
pop
adc
and
out
mov
dec
cmc
add
leave
insl
rcl
adc
loopne
add
call
cmp
aam
repnz
adc
rorb
sub
outsl
in
stos
and
pop
or
sbb
test
fists
fmuls
dec
push
sbb
mov
xor
stos
jmp
push
jno
jmp
push
xor
cld
push
sbb
or
lods
test
call
push
pusha
shr
jbe
ljmp
scas
sbb
cwtl
push
adc
sbb
xchg
pop
imul
lea
pop
lahf
xor
aas
loopne
negb
dec
fcmovnu
call
sbb
bts
adc
push
aaa
xchg
outsl
hlt
in
ja
gs
lds
push
fmull
rol
xor
bound
dec
pop
aam
scas
xchg
pusha
or
imul
jbe
sbb
cs
xchg
mov
testl
gs
loop
lret
das
add
out
movsb
cmp
fcomps
mov
pushf
fistpll
mov
lock
mov
lahf
fdivs
fimuls
inc
dec
push
les
mov
out
mov
js
adc
mov
xchg
pushf
test
je
push
pop
testb
add
test
out
addr16
mov
iret
jae
data16
nop
xor
xchg
pop
test
lahf
stos
shlb
pop
testb
cmp
mov
mov
enter
cwtl
push
ljmp
pop
xchg
cmpsb
mov
xor
nop
pop
out
lea
xor
sbb
rclb
mov
rcr
sbb
pop
cmpsb
shr
ss
mov
test
pusha
mov
or
pop
add
inc
add
stos
add
jmp
xor
addr16
mov
dec
aas
cwtl
insl
fimull
repnz
xchg
cwtl
shrb
in
dec
jo
inc
push
ret
xlat
cmp
sbb
fidivrs
sti
lret
or
scas
shrl
fcompl
xchg
hlt
mov
sbb
and
lods
lds
mov
xchg
pop
jo
push
test
clc
clc
shll
sbb
les
xchg
ljmp
daa
push
mov
aaa
insb
out
dec
lods
fdivr
mov
cld
dec
dec
fistl
cmp
mov
jmp
xor
fucomip
nop
adc
xchg
imul
dec
loopne
cwtl
sbb
and
in
loopne
xor
or
adc
xchg
xchg
cli
mov
cld
mov
or
loope
xchg
clc
out
dec
imul
and
lods
cwtl
and
or
or
iret
mov
pushl
cmp
js
xlat
and
insl
call
sarb
int
ror
iret
jno
xchg
mov
lret
cmpsl
leave
jne
std
push
imul
pop
dec
dec
and
sub
shlb
lret
lds
mov
mov
inc
xchg
push
out
in
cmp
pusha
sti
hlt
xchg
iret
inc
stc
xor
dec
incl
filds
shlb
mov
lods
mov
mov
mov
and
clc
jo
fimuls
adc
jne
jge
rolb
pop
sbb
insb
xchg
sub
test
dec
mov
mov
xor
fwait
call
iret
sub
test
mov
es
sub
dec
nop
call
mov
mov
gs
imull
mov
inc
push
into
stos
xor
adcb
sub
hlt
imul
out
jmp
xchg
out
pop
test
icebp
mov
data16
adc
sub
sbb
aad
dec
xchg
aad
dec
movsb
imul
inc
fs
pop
mov
fmuls
xchg
pop
out
out
dec
call
push
mov
stos
xlat
dec
jge
rclb
pop
call
mov
jno
cmpsb
fidivrl
ljmp
xor
sub
shlb
call
in
pushf
test
jecxz
test
rcr
pop
in
call
clc
jmp
add
shrb
and
dec
inc
jl
call
xchg
mov
xchg
repnz
rorl
repnz
mov
mov
sub
test
sub
fstpt
shrb
pushf
repz
fcoml
jb
mov
aam
popf
pushf
cmp
add
mov
movsb
mov
jl
js
adc
out
fs
repnz
mov
clc
test
pop
int3
lahf
les
test
jo
and
loope
and
mov
lahf
pop
loope
fisttpll
xchg
out
out
movsl
loopne
call
test
ja
lea
mov
rcrb
insl
mov
xor
out
mov
cltd
pop
test
clc
dec
xlat
push
xchg
js
sahf
lods
fnsetpm(287
push
stos
jmp
clc
adc
jecxz
adc
or
jg
dec
loope
and
adc
iret
jbe
je
mov
sbb
test
xchg
fildl
or
leave
ret
test
mov
jmp
lret
test
iret
cwtl
lods
lods
cld
cwtl
sti
movsb
loopne
and
lcall
jecxz
outsl
mov
push
mov
inc
sub
ljmp
imul
add
adc
fmuls
mov
dec
push
sahf
inc
mov
fs
lahf
jl
pop
mov
stos
mov
mov
decl
sub
iret
data16
repnz
sahf
lds
ds
mov
call
dec
sub
les
and
fs
cwtl
fistpll
arpl
pusha
xor
mov
mov
icebp
mov
loopne
push
cli
fcmovu
popf
rorb
cmp
clc
pushf
sub
call
adc
popf
popf
das
out
movsb
mov
mov
push
jbe
cmpsb
out
mov
hlt
in
lcall
dec
lahf
testl
gs
cltd
xchg
push
jl
or
mov
jns
mov
rorl
addr16
test
shlb
xchg
insb
add
jmp
cmp
sbb
mov
mov
sbb
and
jne
fsubr
es
rcr
call
roll
and
xor
out
and
in
adc
xor
adc
clc
dec
xorb
mov
rorb
mov
repz
test
mov
rolb
or
mov
std
and
popf
notb
test
lods
mov
loope
add
sub
ss
push
and
out
das
lret
xor
paddusb
xchg
vandnps
xchg
mov
lods
adcb
inc
dec
repnz
nop
aas
dec
add
and
inc
icebp
int
mov
pop
xor
ss
loopne
vpshufhw
and
inc
push
rclb
loope
mul
cli
call
ja
dec
pop
js
mov
sub
in
jbe
iret
aaa
out
mov
fcmovnbe
jo
and
cld
inc
mov
repnz
ljmp
fnstcw
les
mov
cmp
sbb
lret
ss
inc
addr16
dec
stos
pop
mov
sar
jge
and
aad
xor
ds
sbb
inc
xchg
ljmp
gs
test
pop
lahf
jne
sub
mov
shr
lds
test
cmp
test
jmp
cmp
xor
mov
clc
push
movsb
jmp
in
mov
dec
and
push
call
ret
leave
lcall
fcoms
test
jb
mov
cmp
dec
and
mov
pop
leave
sub
push
dec
mov
adc
inc
sub
xchg
dec
add
in
and
xchg
mov
rcrb
test
xor
stos
or
push
xor
add
out
out
je
sub
push
sarl
addr16
js
push
ljmp
adc
pop
push
ljmp
shr
cs
es
sbb
xlat
pop
mov
pop
je
xor
push
fstpl
sub
int3
sbb
sbb
push
dec
xchg
ret
in
out
add
inc
jle
scas
cli
out
dec
ficompl
pop
repz
in
mov
shlb
mov
mov
jno
std
int3
outsb
mov
xchg
jae
or
adc
pop
lret
mov
dec
notb
push
pop
mov
fadd
test
or
test
push
outsl
in
jge
pop
lcall
and
cmpsl
xchg
mov
in
dec
clc
and
lret
or
jae
cmc
xchg
and
sti
jne
ficompl
shll
lods
loopne
and
and
pop
test
lods
push
je
fs
dec
xchg
xchg
pop
push
sub
push
insb
out
sbb
js
add
in
aas
jae
add
adc
mov
pusha
test
adc
mov
push
mov
mov
xchg
and
es
and
push
ret
cmp
aas
lock
nop
xchg
cmp
xor
aaa
lcall
cld
movsl
test
xor
pop
test
testb
fstps
test
adc
lds
sbb
inc
xchg
mov
ficoml
jne
in
es
sbb
mov
scas
inc
fsubl
jle
add
mov
fildl
and
out
mov
bound
mov
mov
dec
ljmp
pop
movsl
das
out
push
and
dec
push
jl
push
sub
movsl
cmp
in
pop
jge
inc
rorb
cmp
add
cmp
xchg
jns
pop
dec
rcll
cli
mov
adc
adc
adc
inc
shlb
or
dec
and
sbb
nop
sarl
in
push
inc
push
lea
frstor
rcrb
sbb
add
push
push
jb
int
xchg
or
pop
sub
rclb
cmpsb
clc
push
lret
cmp
mov
inc
pop
mov
mov
ret
mov
loopne
cmc
rep
jge
dec
shl
mov
fdivr
dec
adc
jecxz
mov
hlt
gs
nop
ret
test
pop
push
push
cltd
cmp
mov
daa
lods
pop
push
pushf
cwtl
mov
push
sbb
dec
iret
push
sahf
into
or
lock
xchg
out
lods
pop
add
dec
icebp
mov
lret
gs
mov
and
add
mov
inc
adc
out
xchg
adc
push
mov
out
roll
pushf
out
pop
add
push
cmc
and
inc
icebp
out
stos
dec
jle
faddl
mov
hlt
push
push
mov
cli
lahf
jle
ss
push
pushf
repnz
mov
aaa
xor
mov
mov
pop
push
in
clc
lahf
aam
fwait
test
ja
fsubrs
add
in
je
sti
cwtl
push
mov
test
and
push
gs
dec
xchg
add
int3
pop
sahf
addr16
aam
fwait
xlat
lock
shlb
jae
xor
sar
iret
inc
dec
arpl
out
mov
popa
dec
inc
fisttpll
adc
aam
out
lods
data16
mov
jno
mov
xchg
push
jno
gs
int3
jno
adcl
lods
jno
pop
push
or
nop
lahf
idivl
cmp
xor
ret
in
inc
push
icebp
cwtl
xchg
xchg
xchg
pop
outsl
inc
stos
push
jae
dec
xlat
jnp
xor
sahf
scas
inc
adc
jo
je
xchg
and
mov
in
lret
xchg
daa
decb
mov
pop
mov
das
ljmp
pop
sub
xchg
jno
ja
xor
mov
cmc
test
xchg
mov
push
xor
jae
push
fisubrs
shlb
lds
sbb
in
lock
jb
out
movsl
xorb
lcall
imul
mov
aam
insl
stc
and
jl
mov
mov
xchg
fcmovne
outsl
lret
dec
push
stos
rclb
scas
mov
cmpsb
adc
sbbb
repz
xchg
aad
stc
sbbl
add
sub
aam
das
loopne
dec
rcll
xchg
mov
stc
adc
inc
mov
stc
or
jne
mov
je
sub
jl
imul
ficoml
test
fcmovnu
lret
pop
lahf
in
cmp
mov
mov
pop
les
pop
sbb
push
dec
pop
push
js
data16
out
pop
sbb
xchg
mov
dec
divb
repnz
imul
xchg
sbb
div
outsl
sbb
pop
mov
pop
lock
mov
or
inc
mov
rolb
test
pop
clc
sahf
jmp
test
xchg
fistpll
aas
loopne
dec
test
cwtl
adc
add
xor
leave
pcmpeqd
mov
push
xchg
jg
cld
and
mov
xchg
aaa
cmpsb
in
idiv
dec
nop
outsl
push
stc
stos
icebp
xchg
adc
lds
movsb
or
dec
jmp
jmp
mov
fnstsw
xchg
addl
flds
cmc
jbe
jl
hlt
insb
int3
mov
repnz
stos
iret
mov
imul
push
outsl
test
aaa
sub
outsl
mov
imul
and
sti
cmp
or
je
add
cmp
imul
js
mov
xchg
pop
mov
xor
iret
push
lods
or
mov
inc
add
mov
call
and
repz
pop
aas
push
sbb
or
jmp
lock
movsl
mov
add
pop
nop
sbbb
sub
shlb
or
push
jmp
nop
mov
popf
imul
mov
scas
jmp
xchg
dec
int
clc
ficoml
inc
sbb
cmp
js
add
lret
xor
mov
adc
repz
xor
cld
mov
dec
push
xchg
rcr
out
dec
xchg
iret
pushf
imulb
xchg
decl
mov
lock
addl
in
shll
sub
inc
pop
filds
es
cli
sub
cmpsl
mov
cmp
daa
and
jno
clc
jge
loope
out
jo
pop
nop
lods
cmp
or
or
loopne
les
mov
and
scas
lods
sub
and
movsb
mov
mov
xor
dec
lock
sub
or
aas
mov
xor
rcl
out
jno
out
mov
lods
xlat
fisttpll
shl
adc
jecxz
ljmp
dec
call
xchg
repnz
jnp
or
dec
into
aaa
mov
inc
cmpsl
dec
or
mov
das
or
shrb
dec
adc
sub
sbb
cmp
xchg
sub
sbb
pop
test
iret
lods
das
leave
mov
xchg
mov
nop
adc
push
sahf
add
pop
dec
adc
inc
jmp
ret
repz
or
sbb
test
ds
mov
and
xchg
adc
imul
mov
mov
inc
insb
mov
mov
shrb
jl
or
and
mov
mov
call
outsl
push
inc
jl
aam
and
xor
aaa
or
outsb
push
imull
inc
test
pop
loopne
cld
adc
xchg
loopne
dec
jge
xor
addr16
jns
addr16
bound
negl
push
dec
xor
adc
pop
aad
ret
notb
inc
pop
push
or
mov
push
or
sub
mov
pop
add
jmp
and
mov
xchg
sub
xor
or
pop
mov
imul
fbld
fisttps
movsb
dec
outsb
pop
in
pop
cmpl
int
movb
adc
xor
fidivs
scas
mov
pushf
add
js
ljmp
ljmp
jno
mov
pop
movsb
and
dec
xchg
ljmp
push
movsb
aad
lock
lods
sahf
ret
xlat
mov
xor
fsubp
pop
rolb
jnp
imul
int
lds
js
push
adc
loope
sbb
sti
in
push
int
mov
fisttpll
fdivr
ss
push
xchg
adc
stos
call
dec
sbb
mov
in
cmp
pusha
loope
addr16
dec
hlt
lds
xor
pop
add
ret
ss
dec
in
andl
loopne
inc
push
outsl
clc
jo
repnz
and
daa
xchg
ljmp
inc
sub
sbb
xchg
cltd
lcall
in
adc
inc
mov
je
push
or
mov
mov
push
fidivrs
inc
aas
sbb
push
sbb
lahf
sub
data16
mov
pop
out
push
scas
dec
inc
pop
lcall
cltd
jbe
fnstsw
outsb
cmp
loope
xchg
test
sub
xchg
push
adc
cmp
jmp
aad
filds
out
adc
in
mov
sbb
out
add
clc
pushf
nop
mov
or
pop
aam
iret
lahf
clc
shrb
ret
fcmovnb
fisttpll
ret
scas
mulb
jecxz
je
test
or
cwtl
jge
ljmp
mov
mov
xchg
push
out
pop
stos
xchg
push
xor
lret
jo
lcall
dec
bnd
pop
push
insl
repnz
lds
and
mov
cli
imul
mov
mov
pop
repz
movsb
stos
pop
imul
jo
test
mov
mov
imul
mov
push
cmp
mov
orl
rclb
push
or
cmp
sahf
mov
cmp
mov
fidivs
dec
or
mov
inc
sbb
adc
xchg
or
das
ror
icebp
push
test
dec
sbb
mov
cmpsl
jno
int
inc
adc
mov
xchg
xchg
push
xchg
or
dec
repnz
xlat
xlat
in
fcomip
rcl
sub
testl
dec
sahf
out
pop
outsl
in
das
cmp
mov
ss
inc
lcall
dec
push
outsl
es
cwtl
insl
int3
mov
outsb
insb
iret
push
mov
mov
incb
sub
sbb
adc
and
shlb
and
xchg
ljmp
pop
dec
mov
out
jecxz
sub
repnz
inc
inc
xor
lods
dec
movsb
sub
dec
mov
stos
popa
push
loopne
lock
hlt
mov
gs
cltd
inc
cwtl
add
mov
xchg
ror
fs
pop
mov
cli
adcb
mov
loopne
push
add
inc
sub
fadd
cmp
mov
ljmp
out
pop
or
clc
daa
dec
mov
aaa
add
int
cmp
mov
out
xchg
pop
call
loopne
cwtl
mov
movsl
jp
aaa
call
lcall
inc
ljmp
ret
cmc
and
or
in
test
into
lret
mov
jo
lahf
inc
mov
mov
or
hlt
and
cmp
adc
and
add
ljmp
mov
inc
mov
cbtw
push
clc
cs
jp
or
push
rcr
loopne
or
pop
call
ljmp
int3
adc
fsub
clc
and
cmp
mov
pop
push
aas
pop
or
xor
mov
movsl
imul
js
add
cltd
repnz
sub
sbb
or
enter
inc
repz
xchg
fucomip
test
arpl
and
pop
adc
fcmovnb
sub
sub
loopne
shll
xor
sbb
cs
adc
xchg
je
xchg
shr
xor
mov
cmpl
pop
cld
adc
mov
stos
xchg
mov
notl
es
or
and
mov
jle
pushf
xor
mov
fs
xor
loopne
xor
lcall
xchg
fdiv
xchg
movhps
xor
mov
pop
call
ljmp
cmp
in
sub
ds
mov
in
mov
ds
mov
push
cmovle
jmp
xchg
je
cwtl
mov
lea
cmp
je
popf
pop
mov
imul
fs
mov
outsl
dec
aaa
scas
xchg
mov
icebp
movsb
add
push
test
mov
xchg
pop
push
test
aam
ds
dec
ja
inc
pop
mov
mov
mov
cmpsb
mov
aam
stos
mov
sbb
int3
fld
push
mov
test
or
pop
jne
ljmp
or
xor
sbb
data16
pop
lock
nop
mov
xchg
or
or
sbb
inc
out
je
add
rcll
dec
movsb
repnz
xor
jae
lret
loop
jno
je
in
aam
or
in
cli
pop
adc
or
ljmp
outsl
sbb
aam
mov
xlat
in
ljmp
mov
pusha
sar
out
mov
call
aad
mov
mov
xor
inc
call
inc
xor
push
loop
bnd
in
nop
adcb
test
push
lock
jno
fwait
mov
push
cwtl
js
mov
insb
fsts
mov
nop
dec
add
hlt
imul
popa
or
cld
fs
push
rol
inc
sub
nop
mov
mov
inc
stos
xor
adcb
or
lea
out
mov
popa
ds
pop
push
aam
mov
fwait
loop
hlt
cmp
testl
push
and
cli
rol
mov
xchg
cwtl
int
mov
out
adc
fistl
test
mov
adc
xor
movsb
repz
fdiv
call
bound
push
fsubrs
lcall
pop
mov
inc
popa
mov
inc
xchg
mov
push
addr16
es
dec
loopne
imul
push
mov
adc
jp
out
out
pop
aad
xor
jl
rclb
sbb
lock
gs
mov
ljmp
in
cmc
adc
out
ds
pop
sub
out
aad
xchg
repnz
call
insb
xchg
nop
out
inc
jp
xchg
ja
rcr
out
jbe
notb
gs
scas
out
or
iret
fadds
es
hlt
mov
jp
stc
stos
js
bt
lcall
mov
xchg
sbb
insl
repz
pop
mov
jb
jns
imul
divb
cmpb
inc
sub
aam
stos
mov
inc
pop
and
xchg
sahf
out
call
mov
movsl
push
adc
dec
popf
aaa
xchg
cmp
lahf
pop
jle
fwait
bound
add
divb
sarb
sub
sub
call
xchg
add
or
pop
xlat
inc
sub
push
clc
xchg
int
sti
out
dec
aad
adc
loopne
or
das
out
inc
cli
xor
jecxz
loopne
jmp
clc
cli
lret
nop
negb
inc
adc
clc
adc
fcomps
cmp
rcll
jno
jbe
push
mov
push
xchg
xchg
push
jecxz
sti
xchg
aaa
cld
adc
xchg
jmp
dec
bound
dec
test
fwait
add
rcrl
pop
popa
ret
sbb
bound
adc
mov
or
inc
lods
dec
ljmp
aad
pop
mov
fidivrl
int3
mov
xchg
in
jmp
mov
in
sub
inc
xchg
xchg
dec
std
pop
lods
xchg
mov
lock
ljmp
es
decl
pop
adc
out
ljmp
mov
inc
sbbb
jno
adc
cltd
dec
gs
and
push
repz
mov
aad
mov
jl
mov
push
lcall
sbb
fs
dec
cmp
sbb
mov
mov
dec
jecxz
insb
or
xchg
mov
les
inc
sbb
clc
sbb
cld
dec
push
call
push
mov
adc
popa
jae
jnp
addr16
pop
loope
ljmp
leave
jns
rolb
add
pop
pop
test
fwait
lahf
imul
mov
jg
sub
sub
push
cld
mov
nop
addr16
sbb
stc
hlt
and
jge
xchg
imul
mov
imul
sbb
adc
mov
dec
clc
out
imul
pop
cwtl
cs
jle
push
inc
insl
dec
push
push
es
cld
pushf
jbe
and
mov
inc
gs
mov
cmp
xorl
repz
leave
sbb
mov
or
and
inc
adc
pushf
or
jo
push
inc
and
pop
shlb
in
aaa
mov
mov
aad
ret
push
clc
mov
int
shrb
mov
scas
xchg
mov
xchg
and
mov
int
mov
dec
loope
pop
add
push
jl
and
daa
jne
push
dec
sub
xor
rorb
sub
mov
repnz
lahf
xchg
imul
xor
out
mov
sbb
in
jmp
lret
int
dec
int3
popa
shr
push
in
jmp
sbb
mov
mov
inc
mov
mov
sbb
sub
es
xchg
xchg
mov
push
mov
mov
jns
add
mov
inc
cmp
xchg
test
adc
pop
nop
jne
and
and
sahf
jns
xor
bound
fisttps
adc
inc
push
ret
fistpll
idivb
lods
sub
daa
add
mov
add
mov
aam
jbe
dec
rcll
imul
js
stos
cmc
mov
pop
xor
or
nop
xor
xchg
mov
sub
mov
lods
push
mov
outsb
repnz
mov
pop
cmp
or
xor
aam
xor
dec
mov
adc
cwtl
cwtl
daa
mov
inc
imul
scas
or
out
inc
inc
adc
mov
ss
dec
jb
aaa
mov
aad
cmp
jl
xor
sub
out
int3
xchg
sub
stos
jmp
cli
mov
je
push
dec
call
pushf
es
fstps
jbe
mov
mov
cld
sahf
jne
jl
or
cs
aaa
in
fxch
sbb
mov
lret
hlt
fisttps
pusha
push
dec
cmpsl
sub
xchg
pop
jb
gs
repz
movl
mov
add
fisubs
in
dec
notl
pushf
push
ret
imul
add
fadds
sbb
imul
dec
cwtl
fcoms
add
sbb
out
sbb
cli
inc
insb
imul
ds
mov
repz
out
xchg
fistpll
les
shll
mov
pop
jo
dec
and
ficoms
push
mov
sub
mov
out
pop
cmp
cwtl
sub
xchg
add
in
push
imull
mov
ficomps
dec
xchg
shlb
je
testb
out
mov
mov
dec
jae
ret
mov
cwtl
fmuls
mov
pop
movsb
scas
mov
dec
popa
mov
aad
jne,pn
call
nop
in
shlb
addr16
pushf
imul
mov
icebp
orb
adc
mov
dec
push
cmpsb
sub
fbstp
sub
fucomip
mov
add
popa
lahf
orb
mov
push
cmpsl
aad
and
test
adc
add
mov
in
out
fwait
pop
fimull
mov
sub
shlb
insl
dec
fs
mov
stos
push
movsl
outsb
sub
ja
sahf
fisttps
pop
sbb
sub
clc
fcom
jecxz
lods
pop
shrl
pop
pusha
mov
cmp
push
add
icebp
stos
ret
jmp
fbstp
jnp
stos
push
repnz
xor
inc
mov
jno
mov
sbb
sarb
jno
mov
cmp
sbb
sub
insl
scas
mov
xchg
or
dec
cmpsb
mov
mov
dec
xchg
dec
cld
and
mov
movsl
mov
sbb
cmpsl
ljmp
jmp
xchg
daa
dec
js
jmp
inc
ss
repnz
or
pop
push
add
loopne
cmp
push
pavgb
dec
mov
sbb
ret
jo
bound
push
movsl
jo
pop
lods
pop
xchg
adc
jne
loopne
jge
lock
or
push
test
jno
mov
xchg
or
pop
push
cs
xchg
sahf
jge
or
insb
out
aam
incb
xchg
cld
adc
xor
mov
int
out
jnp
out
fdivrl
movsb
lahf
pop
lret
les
aad
push
out
iret
push
inc
xchg
push
jg
iret
gs
or
jle
fs
inc
mov
out
pop
pop
xor
and
add
push
mov
fistl
mov
imul
and
fs
inc
xchg
sub
cmp
cwtl
imul
cmpsl
cwtl
cwtl
gs
movsb
imul
movsl
sbbl
out
sbb
mov
or
push
xchg
gs
jmp
mov
insl
inc
sbb
push
pop
xor
ja
xchg
add
add
test
and
jmp
xchg
mov
call
dec
dec
adc
push
into
pop
xor
and
mov
sub
add
sub
dec
sbb
cmp
ficoml
gs
dec
lret
int
outsl
in
dec
in
hlt
pop
and
inc
push
push
jmp
in
jge
clc
push
imul
jecxz
lds
cwtl
push
dec
add
test
call
int3
ret
clc
jno
sbb
insl
stc
xor
cmc
aam
pop
and
sub
clc
outsl
pop
jl
rclb
pop
test
fildll
in
push
repnz
leave
outsl
lea
mov
aaa
js
nop
xchg
add
pop
ret
pop
popa
int
or
imul
xor
hlt
push
push
mov
cmovge
mov
xchg
int
jno
dec
lods
and
lock
out
cwtl
mov
mov
mov
outsl
nop
iret
jb
popa
mov
add
lahf
inc
cmp
inc
les
lcall
ja
outsb
lods
les
pop
mov
push
cld
test
outsb
loop
pop
and
xor
pop
cmc
rorb
xor
sbb
ljmp
mov
xor
iret
lret
dec
cmc
cmpsl
outsl
push
mov
mov
mov
jb
fdivl
pop
vpsubq
adc
gs
or
and
dec
mov
test
adc
arpl
loop
mov
xchg
dec
ss
rclb
pop
xchg
xchg
add
hlt
cmp
cmpl
loopne
or
ficompl
mov
push
rol
dec
or
lock
jo
cmp
adc
in
adcb
sub
flds
clc
inc
inc
xchg
mov
mov
mov
sbb
sbb
sub
mov
sbb
mov
cmp
mov
inc
hlt
repz
sbb
cmp
pop
sub
fmul
pop
cmp
das
sub
jmp
adc
in
and
sysret
dec
insb
loopne
cmp
nop
adcl
mov
imul
cmp
add
mov
out
add
pop
outsb
jne
pop
jns
movsb
xor
iret
insl
and
ret
push
imul
or
out
xchg
inc
aam
fbstp
sbb
dec
mov
mov
pop
sar
pop
sub
jae
in
fst
and
xchg
fadds
insl
ja
jae
rolb
pop
jne
out
jb
add
aam
movb
push
out
xchg
push
mov
xchg
pop
pop
cmp
int
mov
cs
mov
and
stos
out
movsb
adc
nop
arpl
mov
jl
xchg
add
lahf
cwtl
jl
fistps
jbe
add
lcall
mov
push
mov
out
shl
push
add
lods
push
sbb
push
loope
mov
cli
out
outsb
mov
call
push
xor
ljmp
out
in
pop
loopne
out
loop
push
push
mov
xchg
xchg
imul
push
test
xchg
push
jbe
fdivp
dec
mov
pop
fmuls
je
xorb
fcoml
push
int
iret
out
xor
sbb
adc
cwtl
lret
adc
mov
test
out
call
sbb
in
in
out
add
adc
push
mov
cld
mov
dec
inc
mov
mov
sbb
fistpl
mov
push
mov
pop
lock
jno
stos
xabort
jecxz
xchg
jno
push
mov
mov
or
cmpsb
inc
insl
cmpb
cwtl
xchg
adc
lods
mov
mov
adc
int
rol
out
aad
adc
leave
in
cmp
ljmp
mull
xor
dec
jecxz
fists
sub
xchg
sbb
lods
lahf
icebp
nop
sbb
leave
jae
dec
dec
mov
shrb
sahf
rolb
push
loopne
test
sub
out
cmp
or
dec
test
data16
fmul
xchg
outsb
pusha
pop
xor
jo
stos
fsubrs
jle
loopne
fistps
mov
jno
xor
scas
test
sbb
lods
shll
out
ret
nop
jno
insl
notb
sub
mov
cmp
mov
cs
sub
pop
popf
pop
mulb
jmp
and
ds
lods
cmc
mov
xor
loopne
jmp
and
sbb
in
dec
mov
jg
bound
repz
mov
in
je
lret
imulb
push
ljmp
sbb
dec
mov
mov
inc
lahf
cmp
mov
repz
cwtl
cwtl
lret
aas
lods
xor
cwtl
int3
mov
pop
xor
stos
sbb
repnz
mov
in
xor
push
adc
lcall
sbb
mov
stos
sahf
das
ds
aas
movsl
movsb
or
xor
aam
sbb
mov
sbb
iret
jmp
ret
cmc
cmp
xchg
lahf
mov
jmp
xor
add
mov
loop
xchg
xchg
mov
loopne
xchg
shrd
pop
dec
mov
lods
pop
les
sbb
ret
rcrb
fistps
in
js
cmp
clc
clc
push
pop
and
test
push
sub
jne
out
adc
dec
mov
mov
subb
shll
sti
push
pusha
lods
pop
adc
int3
loop
lods
shlb
pop
jbe
test
cmpb
gs
mov
xlat
inc
jle
aas
jns
out
pop
dec
outsl
jnp
push
fcom
jno
cwtl
mov
hlt
test
mov
insl
pop
jno
push
add
push
jge
shlb
push
insl
pusha
push
pop
push
in
nop
gs
jmp
sub
xchg
mov
add
or
in
in
rolb
imul
lock
es
jge
and
and
adc
mov
cli
jecxz
xchg
loopne
sub
mov
cmp
sarl
cwtl
lahf
ljmp
pop
pop
push
mov
sbb
push
mov
push
in
mov
insb
xor
push
fbstp
cmpsb
adc
movl
ljmp
pop
push
repnz
jg
mov
sub
cltd
push
clc
inc
adc
test
fnstsw
push
lcall
scas
jae
rol
cmp
sti
adc
enter
aas
aam
add
in
das
pop
std
push
test
cmpsl
push
inc
enter
in
cmp
test
imull
in
adc
test
gs
jo,pt
mov
pop
dec
fs
popl
xchg
push
sbb
gs
in
inc
daa
ss
jle
push
sub
dec
jo
sub
sarl
aad
es
mov
lds
lret
add
dec
inc
lret
add
nop
jne
rcl
mov
les
in
addr16
cmp
gs
cmp
and
mov
or
sbb
stos
mov
pushf
or
pop
sbb
or
xchg
sub
iret
xor
pop
sub
ljmp
loop
cmp
mov
es
mov
jge
js
ds
pushf
adc
icebp
adc
popf
push
xchg
js
lahf
je
lds
jmp
push
dec
sub
mov
clc
aas
sti
jno
rclb
clc
fstl
lock
dec
pop
rorl
push
add
push
jnp
dec
sub
jno
nop
data16
pop
test
push
scas
outsl
sub
icebp
lret
push
cmc
adc
rcll
leave
icebp
dec
mov
mov
insb
adc
in
je
pop
and
loopne
imul
pop
andl
aam
dec
cmp
pop
and
sahf
rclb
sbb
clc
pusha
adc
paddusb
sbb
aad
invd
sub
xchg
shr
sahf
cmp
xchg
rcr
cmp
push
pop
test
or
dec
dec
test
outsl
test
xchg
mov
movsb
inc
in
je
ret
data16
insb
mov
xchg
lds
fs
mov
mov
lret
push
shl
pop
cmc
loopne
mov
imul
stc
inc
xor
jo
es
in
adc
xor
mov
repnz
jne
pop
popf
pop
add
add
dec
test
and
jmp
mov
sub
mov
cmp
sub
sbb
cmp
ds
test
mov
pop
test
movsl
mov
xlat
test
out
sbb
sub
and
ja
clc
clc
je
andl
icebp
xor
dec
mov
xchg
cmp
pop
push
inc
addr16
es
aad
rcl
inc
popf
out
js
push
sbb
cmp
push
cs
iret
je
mov
push
dec
movsl
sti
test
test
jg
jecxz
ror
cld
dec
test
iret
xorl
cmc
pop
in
ret
sbb
mov
out
sub
insb
shlb
pop
jne
jmp
and
adc
push
cmp
imul
sbb
cmp
inc
test
ss
lea
ja
lret
or
inc
out
jmp
xor
test
aas
int
daa
mov
mov
cmpsl
push
or
shr
add
mov
mov
sbb
addb
inc
xchg
cwtl
daa
push
xchg
jo
dec
push
adc
inc
repnz
sbb
xchg
sub
or
cmpsl
fwait
dec
in
adc
sub
sbb
xchg
cs
pop
fwait
push
subb
jmp
pusha
mov
aaa
icebp
cli
adc
xor
popa
rcrb
dec
jb
call
aad
jb
sbb
out
mov
lret
cmp
dec
jg
inc
sub
lods
mov
sbb
inc
add
mov
xchg
insl
dec
dec
inc
jne
pushf
mov
pop
lahf
cmp
lcall
sbb
dec
sbb
cltd
or
pushf
xorl
adc
arpl
cmp
lods
mov
es
aam
int3
sbb
mov
xor
scas
into
inc
aad
pushf
push
mov
jb
jl
cmp
lret
pop
or
jge
xor
sub
in
aam
rcll
data16
icebp
clc
movsl
sub
push
push
fwait
js
jns
outsb
repnz
aaa
mov
push
popa
idivb
roll
in
addr16
in
sbb
in
push
xlat
loopne
adc
scas
push
adc
push
fidivl
pushl
cld
cs
sbb
scas
icebp
cltd
ljmp
xchg
rolb
cli
shrl
es
loope
out
loope
xchg
imul
rcll
mov
pushf
mov
mov
mov
fisttps
xchg
ljmp
es
cmp
mov
sarb
dec
pusha
inc
js
lds
and
lea
lret
int3
movsb
aad
pop
std
mov
inc
lcall
into
mov
loopne
in
push
mov
sbb
rolb
mov
adc
xor
and
sbb
cmp
decl
vmovups
mov
clc
jmp
jo
rolb
fstl
cwtl
mov
mov
into
out
mov
fs
into
mov
xchg
cmc
jg
ret
push
inc
jl
push
push
incb
push
mov
pop
pop
lahf
movb
insl
mov
loopne
inc
add
les
test
add
repnz
or
out
cwtl
out
sub
lods
sbb
sahf
sub
xor
aaa
or
stos
cmpsb
push
mov
fdivr
inc
adc
dec
repnz
jno
movb
sbb
dec
pop
push
push
hlt
call
test
lret
and
dec
lods
lea
scas
nop
imul
popf
rcl
cmp
and
fwait
ja
cld
shl
xchg
int3
pop
in
and
rorb
fmull
pop
fidivs
pop
call
pop
mov
jge
mov
sbb
inc
dec
pushf
out
jne
fnstenv
inc
jbe
mov
xor
mov
mov
sarb
into
jo
aaa
inc
int
int
push
jo
cmp
mov
mov
xchg
fadds
xor
sbb
and
negb
sbb
fwait
in
adc
jno
lcall
mov
xor
hlt
xchg
mov
dec
jbe
or
out
pop
jle
div
cmpsb
clc
xor
gs
in
int3
hlt
imul
pop
xchg
jno
popa
aad
nop
mov
nop
fmul
push
cli
dec
mov
adc
mov
repz
nop
ret
mov
cwtl
jmp
jb
cmp
push
out
lods
std
cmp
hlt
xchg
repnz
pusha
push
xor
js
nop
mov
inc
xor
add
and
int
int3
andb
aaa
xchg
cmpsl
sub
mov
jbe
jecxz
xor
sub
call
push
dec
sti
xor
call
pop
fwait
push
push
jno
mov
dec
push
add
or
xor
adc
or
mov
int3
jp
fwait
pop
add
mov
bnd
mov
inc
imul
inc
fs
adc
mov
inc
sub
rcrl
mov
rcrl
imul
fimull
push
and
addr16
js
pop
flds
cwtl
jge
out
xor
scas
cwtl
not
pusha
mov
fistl
pop
mov
into
push
lods
pop
mov
das
add
call
call
pop
inc
data16
subb
pop
mov
pop
leave
movsb
fcoms
mov
pop
pop
mov
cmpsl
iret
shlb
adc
aad
arpl
inc
inc
mov
insb
cli
repnz
sbb
push
inc
adc
insb
xchg
in
imul
add
or
aaa
pop
test
or
xor
movhps
adc
js
mov
fildl
out
dec
xlat
shr
xchg
int3
out
mov
inc
jne
xchg
xchg
sbb
sbb
in
imul
arpl
loopne
jg
ljmpw
mov
shlb
decl
xor
out
xor
fstpl
popa
mov
imul
lret
iret
pop
xchg
rolb
iret
std
mov
xor
mov
xor
jae
or
mov
sbb
nop
mov
popf
fcmovu
stc
cmp
mov
cwtl
pop
xlat
loopne
out
adc
ret
xchg
lahf
add
adc
hlt
clc
nop
cmp
imul
in
and
sarb
add
mov
cltd
mov
add
pop
repz
sti
adc
mov
dec
or
inc
xchg
ret
out
mov
shll
out
push
sub
pop
mov
dec
xchg
mov
lock
fs
fimull
int
pop
fmuls
insb
cli
adc
jge
cmc
dec
dec
xchg
xor
mov
mov
movsb
lock
inc
jo
xchg
dec
ljmp
shlb
mov
xor
hlt
int
out
sbb
push
dec
fst
mov
les
enter
xchg
or
dec
je
jb
nop
aas
push
cmp
test
loope
pop
xor
jge
sub
sbb
sbb
sbb
rcll
stos
and
dec
dec
xlat
fstl
adc
mov
mov
pop
and
in
dec
pminsw
jg
dec
lock
xor
out
mov
imul
je
fdiv
in
pop
js
scas
into
xor
jp
xchg
sarb
pop
and
pusha
repz
xchg
aas
dec
pop
mov
or
insb
int
sub
and
pop
cmp
out
pop
test
imul
xor
xchg
shll
loopne
sub
jmp
ljmp
fidivl
xchg
jle
mov
xchg
inc
jo
je
and
xlat
xchg
xchg
push
xor
and
or
dec
fcmovnbe
lret
pusha
lods
sub
lock
imul
mov
xchg
mov
loopne
jmp
call
cmpsl
pop
and
out
sub
inc
nop
sbbb
push
mov
mov
push
repnz
cmp
sub
addr16
push
mov
addr16
cld
lahf
les
scas
outsb
pop
pushf
ds
icebp
js
cli
jecxz
nop
gs
insl
lretw
scas
pop
movsl
add
gs
mov
inc
int
sub
popf
clc
push
aad
ret
ljmp
mov
stos
xor
cmp
stc
pop
cmp
lods
lret
in
call
jmp
aam
xchg
pop
addr16
cmpsb
imul
fildll
add
inc
stos
push
out
fmulp
cli
aas
mov
dec
pushf
notl
imull
jmp
inc
adc
ffree
iret
add
inc
cld
call
fsubr
pop
push
cmp
cmp
cmpsb
pop
mov
push
out
scas
imul
xchg
push
ljmp
gs
imul
pop
pop
hlt
xchg
push
xor
cmovge
dec
jp
xor
xchg
mov
cmp
lahf
mov
loop
and
add
shl
mov
test
aaa
and
mov
bound
xchg
stos
repnz
fcoms
out
xlat
mov
xchg
inc
mov
aam
or
movsl
and
loope
push
out
es
pop
cmpsl
jle
ret
outsl
dec
jno
incb
mov
outsb
cmp
xchg
inc
insb
jmp
lds
orl
shlb
push
sub
ret
inc
jbe
cmp
out
insb
fdivrl
adc
insb
sub
stos
xor
jmp
orb
inc
and
sbb
adc
popa
cs
dec
out
fcmove
pop
fsubrl
xlat
aam
data16
sbb
hlt
in
mov
je
xchg
out
es
out
in
leave
sarb
pop
bound
fs
jge
scas
sbb
mov
movsl
pop
leave
addr16
lea
insl
test
jns
sub
pushf
mov
xorl
dec
inc
jle
or
xor
sbb
xor
enter
data16
mov
pop
xlat
je
push
jo
loope
pop
xchg
adc
pop
rcrb
sarb
pop
jl
sub
nop
test
fcoml
insb
nop
repnz
inc
aad
mov
shl
mov
out
and
out
gs
mov
push
and
and
mov
sbb
fdivp
lock
ss
sahf
lret
add
cmc
sub
and
cld
mov
adc
xor
cmp
adc
aam
int3
add
cli
and
cld
mov
test
loope
mov
or
mov
movsl
call
lea
cs
xchg
pop
and
pop
adc
push
aam
push
and
pushf
imul
ret
dec
lock
push
gs
adc
adc
pop
fimull
cmc
sub
mov
jecxz
mov
sub
outsb
push
out
in
shrl
push
push
xchg
leave
push
repz
dec
leave
mov
jno
pop
aad
repnz
push
add
scas
jno
pop
lods
or
pop
fdivrl
mov
mov
inc
lock
movsb
loope
jnp
pop
pop
xor
adc
jns
push
inc
in
sbb
les
mov
and
dec
dec
pop
inc
sub
jle
pop
xchg
sti
jmp
pop
out
mov
xor
in
and
mov
adc
mov
sbb
insl
xlat
lahf
arpl
loopne
rolb
loopne
repz
xchg
push
cmp
mov
pop
in
mov
xchg
sbb
sarb
es
mov
nop
mov
mov
add
and
fildl
mov
aam
lock
out
mov
xor
lods
cld
out
inc
scas
and
push
cmp
jno
nop
push
in
xchg
sbb
xchg
fiaddl
push
mov
in
jns
inc
mov
repnz
jecxz
iret
adc
xchg
sbb
leave
iret
cmpsb
mov
ret
xchg
cmpsl
stos
rep
lahf
sahf
jmp
iret
dec
inc
pop
stos
mov
mov
lahf
cmp
jge
je
movsb
inc
xor
rol
les
leave
into
in
in
sbb
sti
cmc
popf
pop
mov
out
pop
sub
push
out
dec
in
rorl
jmp
shrb
dec
jne
jo
frstor
inc
inc
dec
lea
lods
jns
bound
scas
mov
clc
mov
subb
mov
lock
xor
jne
lret
je
or
testb
mov
mov
mov
cwtl
dec
les
hlt
les
mov
mov
sarb
or
lret
cwtl
pop
mov
call
xor
xchg
xor
mov
nop
fmul
push
xchg
pop
xor
adc
xlat
std
xor
sub
test
mov
sahf
inc
sub
dec
je
mov
dec
push
pop
inc
das
mov
lods
jp
out
loopne
imul
pop
cmp
xchg
or
adc
out
cmp
mov
mov
repz
cli
fnstenv
adc
pop
nop
in
imul
push
pop
or
adc
lods
imul
push
ljmp
add
cmp
push
loope
je
sub
xchg
mov
insl
sbb
sbb
adc
int
mov
mov
ret
out
adc
push
push
ss
fcmovb
cmc
shr
movsl
not
orb
in
fsubrs
adc
mov
xchg
jmp
in
mov
push
and
insb
pop
xchg
add
mov
dec
jo
je
loop
mov
inc
mov
imul
mov
mov
repz
insl
mov
sub
cmpsb
adc
sbb
je
daa
sbb
pop
cmpsl
inc
in
fiadds
pop
cmp
jecxz
iret
ret
and
cmp
imul
mov
fcmovb
stc
sarb
sbb
test
add
pop
imul
cmpsl
addr16
sub
mov
xor
mov
or
popa
sub
inc
imul
push
mov
push
jmp
adc
cmp
lcall
icebp
stos
out
out
pop
mov
movl
mov
mov
fildl
aam
je
inc
in
es
mov
aaa
jmp
adc
shll
xor
aas
out
ljmp
xchg
outsl
shr
sbb
xchg
mov
pop
ljmp
inc
jo
add
cmp
ret
loopne
shrl
xchg
repnz
xchg
mov
xor
pop
shrl
cwtl
out
dec
aad
test
cli
fsubs
cmc
xchg
push
into
into
xchg
repz
outsb
inc
popa
fcompl
sbb
sbb
in
ss
sbb
mov
sahf
icebp
imul
sub
and
shrb
jl
out
add
mov
stc
out
or
adc
pop
push
pop
pushf
insb
jge
sbb
xor
pusha
std
dec
dec
dec
jmp
in
mov
cs
aam
mov
icebp
push
pop
sbb
or
jno
rcrb
sub
sti
push
mov
xor
iret
leave
mov
jb
sbb
pop
xchg
fs
in
sarb
aaa
daa
xchg
das
xor
add
jno
daa
xchg
out
jbe
in
dec
sbb
lods
fstpl
push
mov
je
add
fnstenv
popa
push
push
inc
repnz
mov
in
into
aad
mov
mov
stos
pop
inc
adc
gs
push
dec
or
addl
mov
clc
sbb
outsb
cmpsb
out
repz
dec
jle
pop
int3
mov
in
jl
daa
cmpsb
sub
lahf
mov
cmp
jb
mov
sub
ror
mov
pop
in
fadds
sub
lds
int3
jno
jo
jecxz
pop
mov
aaa
mov
arpl
pop
call
repnz
jge
pop
inc
idivl
xchg
out
xlat
mov
insl
insb
pop
cli
aas
jno
scas
nop
sbb
fimull
in
cld
sbbb
push
hlt
xlat
loopne
ljmp
ficoms
repnz
imul
jno
add
inc
in
jbe
bound
mov
xchg
shlb
adc
aam
sahf
push
fcoml
xor
xchg
stc
pop
vpmacsdql
lahf
xor
jno
test
lock
cld
sub
add
mov
or
dec
nop
lock
cld
je
fcmovnb
lret
test
movsb
jno
sarb
inc
repz
fimuls
ja
inc
es
call
and
pusha
insl
test
lods
lahf
inc
push
or
xor
sub
test
xorb
stc
xor
and
gs
lock
fists
in
shrl
inc
mov
lahf
push
outsb
js
repnz
or
inc
adc
sbb
xchg
repz
pop
dec
adc
push
and
pop
lret
adc
lret
jae
and
movsb
aam
sti
add
inc
and
fsubr
pop
xor
pop
movb
dec
loope
or
adc
nop
jne
clc
mov
mov
fs
dec
add
pop
push
scas
sub
mov
dec
decl
pop
in
aas
or
movsb
mov
inc
or
call
pop
nop
aam
adc
roll
movsl
aaa
xchg
and
mov
cmp
je
inc
test
sub
stos
call
test
mov
fsubrs
test
and
xchg
clc
xlat
int3
aas
dec
ljmp
cmpsl
mov
cmp
dec
inc
loopne
jmp
das
nop
leave
aaa
dec
xor
dec
clc
add
ss
repz
push
mov
ret
push
ljmp
push
rcr
mov
stc
iret
or
adc
loopne
js
add
xchg
and
or
rolb
mov
fmuls
fmull
movsb
sub
addr16
ds
clc
pop
in
jno
jmp
ret
sub
sub
shl
sub
and
out
mov
xor
push
jg
lcall
jmp
fs
sub
lods
rcrb
in
fcomps
mov
xor
cwtl
xor
pop
call
adc
leave
popf
sbb
xor
xchg
decl
call
paddusb
adc
test
imul
adc
lahf
lock
in
lock
in
mov
mul
sub
pop
add
jge
pop
pop
nop
loopne
stos
test
mov
out
ret
sbb
sbb
imull
add
in
ljmp
and
mov
shl
nop
pusha
sbb
repz
pop
rclb
cmp
shlb
insb
sub
pop
inc
dec
test
xchg
es
lahf
js
cmp
imul
adcb
mov
lock
mov
ja
imul
fs
mov
and
nop
xchg
dec
fs
add
xor
and
xor
mov
and
mov
jge
popa
out
sub
loope
mov
lret
cli
fidivl
dec
push
icebp
adc
xor
lock
add
mov
sub
add
pop
mov
out
shrl
push
movntq
adc
add
xchg
mov
or
clc
ja
or
movl
xchg
out
scas
fdiv
mov
notb
cmp
addr16
sub
rolb
mov
inc
insl
testl
mov
call
lods
out
clc
xlat
jo
inc
imull
dec
mov
out
push
sub
leave
mov
int
sahf
out
repnz
push
xchg
pop
jge
mov
mov
push
out
sbb
push
shrb
outsl
xor
pop
daa
mov
js
add
push
mov
hlt
fmull
jb
push
rcll
add
push
leave
mov
jns
mov
mov
xor
hlt
mov
xchg
aaa
inc
pop
or
sbb
stc
loop
inc
add
jne
push
in
or
aaa
inc
dec
outsl
jne
inc
xlat
aad
out
push
mov
or
outsl
mov
sbb
xlat
call
pop
jno
lock
mov
call
mov
add
out
or
add
fmul
dec
mov
test
ds
lcall
ficompl
repz
shlb
cli
aas
test
xchg
mov
xchg
add
pop
pop
scas
pop
lret
mov
sbb
jp
pushf
hlt
rcrb
jno
fwait
aas
inc
push
arpl
push
mov
fs
clc
mov
xchg
xlat
push
sub
jno
or
aad
jno
mov
jo
dec
mov
cwtl
in
bound
jmp
dec
repnz
xor
aam
mov
daa
xor
mov
cmp
fimuls
mov
cld
and
hlt
mov
xchg
xchg
aaa
fildl
out
loopne
jb
in
adc
mov
add
lods
cmp
pushf
int
mov
lea
jno
dec
in
cmp
xorb
push
inc
jno
mov
fwait
inc
fwait
stc
sbb
sahf
sub
add
test
sbb
ljmp
sbbl
add
jne
bound
shr
mov
sbb
scas
xlat
mov
jne
cs
cmp
dec
jle
lea
sbb
mov
and
sbb
cs
and
pop
fsubs
dec
out
mov
lods
sbb
adc
mov
jle
xchg
sbb
jmp
jns
pusha
push
xacquire
jmp
and
dec
mov
dec
ret
mov
mov
gs
loopne
xchg
test
or
dec
and
sti
mov
loopne
jmp
pop
jbe
mov
cmc
lahf
add
fcomi
dec
inc
add
sub
movsl
in
sub
mov
testl
inc
sbb
movsl
xor
int
push
fsubrs
and
ja
cmp
stos
mov
jno
xor
dec
pop
aas
sbb
xor
or
aam
loope
mov
or
push
mov
orb
das
out
scas
sbb
and
xchg
mov
cwtl
and
jno
test
mov
mov
ljmp
repz
or
aas
push
jecxz
aad
mov
push
lret
mov
clc
add
popa
mov
add
mov
and
xchg
push
cmc
xor
sbb
rorl
cmp
inc
mov
pusha
xchg
test
inc
ljmp
jbe
clc
fsubs
cmp
dec
cmp
inc
aad
pop
data16
xor
and
push
xor
pop
inc
fsubrl
repz
roll
adc
xchg
nop
inc
cmp
or
xchg
mov
pop
pop
test
fbstp
mov
hlt
xor
stos
int
dec
loopne
sub
mov
mov
xchg
out
jmp
add
movsb
outsb
add
call
sbbl
mov
or
pop
xchg
dec
scas
test
mov
jbe
or
sbb
push
inc
cmp
mov
adc
xchg
lahf
fbstp
lock
mov
jmp
orb
jb
cli
outsl
out
insb
mov
out
fs
inc
push
out
dec
xchg
add
sub
fsubl
lret
nop
je
sub
je
xchg
xchg
xor
dec
inc
outsl
xor
fsubs
mov
mov
mov
pop
fidivrl
sbb
pop
fsubr
xlat
loopne
adc
mov
mov
movsl
inc
xchg
out
gs
fsubr
mov
xchg
xchg
xchg
jp
pop
sbb
lock
or
int3
cmp
mov
loopne
pop
xor
cmp
lcall
incl
mov
push
arpl
jno
sub
sub
scas
outsl
and
ret
pop
push
rep
scas
cmp
aam
sbb
popa
jmp
xchg
aad
fdivrl
dec
outsb
mov
sbb
dec
outsl
pop
add
aas
and
cmp
imul
movsl
leave
imulb
and
xor
pop
and
scas
cld
pop
pop
sbb
adc
leave
xchg
add
xchg
lds
push
lcall
pop
mov
push
mov
or
popf
dec
mov
bsr
ficoms
pop
sub
push
data16
enter
jl
fdivs
cmp
int3
rolb
mov
push
adc
test
pop
outsl
test
push
and
inc
outsb
lahf
cmp
mov
insb
ja
stos
in
mov
jo
mov
mov
loopne
sub
sbb
mov
mov
aaa
lret
mov
cmp
xor
inc
mov
call
jg
andl
jl
xchg
mov
stos
cwtl
sbb
mov
xchg
or
pop
sti
insl
loope
sbb
lahf
inc
and
push
js
adc
es
gs
insb
pusha
jns
sbb
adc
or
jno
repnz
cmpsl
out
lahf
in
cmp
xchg
xchg
sahf
dec
pop
lds
mov
adc
pop
cld
pop
add
mov
jno
pop
je
mov
adc
xor
pop
aad
lret
xor
inc
xor
pop
mov
push
nop
into
cmc
push
ljmp
mov
je
add
xchg
out
mov
pop
jle
jno
jg
push
imulb
jno
lcall
imul
and
lods
out
jl
out
xor
adc
sub
test
jno
data16
lds
and
loop
insb
cmp
dec
fmul
loopne
loop
or
pop
sbb
cmp
push
test
dec
loop
pushf
sub
inc
cmp
jo
outsb
cmp
stc
sbb
fisttpll
in
lock
and
adc
push
imul
mov
pop
fadd
add
in
outsb
adc
xorb
pop
push
or
call
in
fcmovu
cli
test
sub
cmpsb
jp
movsb
int3
add
push
ljmp
insb
push
cmp
mov
fcmove
sbb
fisubrs
pop
ss
add
xlat
dec
call
fnstsw
sub
addr16
xor
push
fsubr
push
and
data16
loope
mov
js
fisttpl
testl
movsb
mov
scas
test
pop
sub
lock
mov
hlt
xorb
xchg
scas
jb
ss
adc
imul
movsl
cwtl
lahf
imul
mov
fs
inc
data16
ss
inc
cmp
push
jp
lahf
xchg
mov
mov
ss
insl
adc
pop
jae
jge
cmp
cmp
xchg
scas
sbb
repnz
push
pop
pop
mov
nop
out
mov
test
xchg
or
push
mov
push
inc
xchg
int3
pushf
mov
adc
sub
mov
addr16
xlat
jg
test
add
sub
push
pop
shll
mov
mov
and
aas
mov
sub
pop
pop
xchg
sbb
repz
and
jno
loop
cld
rolb
dec
pop
xor
sub
pushf
add
int3
fnsave
sbb
ljmp
mov
dec
into
jle
xlat
inc
xor
sbb
rol
pop
or
sbb
int3
mov
js
sbb
stos
or
sub
jnp
push
aas
mov
xor
repz
es
lcall
inc
fidivs
pop
scas
in
cmp
cmp
add
inc
jmp
mov
xor
inc
out
jo
jg
and
jp
mov
out
push
push
test
in
hlt
and
ds
adc
ss
push
icebp
std
add
imul
arpl
cld
cmpsl
push
adc
or
stos
clc
dec
pop
loopne
cld
cmpsl
imul
in
cmp
aaa
mov
js
and
add
fcom
in
fwait
pop
ficoms
aaa
call
inc
popf
inc
push
fs
lret
push
iret
or
dec
mov
or
ljmp
test
cmc
int3
jbe
mov
dec
jp
leave
gs
cli
xchg
std
sub
rcrb
aas
jmp
ficoml
dec
xchg
sub
adc
mov
xor
xor
leave
repz
xchg
dec
cmp
jns
pop
and
fsubl
inc
mov
daa
iret
js
pop
int
in
adc
rolb
sbb
sbb
int3
movsl
out
stos
and
hlt
ds
inc
add
xlat
or
out
cmp
stc
mov
cmpsb
or
mov
stc
clc
fcomps
insl
adc
pop
jae
dec
sub
push
dec
je
pushf
xchg
jno
les
xor
sbb
cmp
mov
sti
int3
mov
in
lret
popf
lods
add
gs
mov
adc
lahf
lods
push
mov
push
cs
ss
pop
insb
daa
mov
xchg
in
cld
xchg
xchg
xchg
cmpsl
into
icebp
stos
mov
mov
inc
sub
jmp
pop
jno
clc
std
pop
mov
mul
xchg
popa
out
mov
sub
outsl
sub
xorl
mov
dec
in
add
aad
xrelease
fwait
das
inc
mov
push
jae
sub
jnp
mov
pushf
aam
or
aad
int3
jp
icebp
inc
jp
mov
fiaddl
int3
flds
ljmp
xor
jnp
pop
and
in
mov
mov
xchg
push
out
out
fnclex
int
fimull
push
out
sub
mov
pushf
mov
mov
in
es
mov
xor
imul
leave
es
mov
int
lods
dec
das
sar
fwait
pop
add
outsl
out
sub
loopne
cld
test
cs
fwait
lds
xor
xor
push
lcall
cmp
sub
shlb
cmpsl
pop
cwtl
clc
insb
fcoml
outsl
daa
pop
stos
inc
xchg
pop
and
negb
ljmp
dec
adc
mov
les
mov
cmp
iret
dec
sahf
pop
lds
mov
jecxz
inc
lcall
inc
in
repz
icebp
xchg
xor
inc
out
ljmp
int
testb
in
aas
sar
daa
leave
dec
sbb
or
mov
out
add
fiaddl
adcl
sub
insl
pop
inc
add
fsubs
dec
mov
js
gs
mull
call
mov
sarl
jo
cmpsb
sbb
imul
movsb
xchg
rorb
out
jno
dec
jmp
adc
ja
clc
int3
imul
and
dec
push
pop
fwait
mov
adcb
inc
inc
sbb
jecxz
dec
inc
jo
sbb
test
pop
and
repz
cld
shrb
lock
pop
lock
inc
iret
popa
cmp
das
xchg
pop
mov
inc
dec
repz
xor
add
addl
mov
sbb
imul
xchg
mov
jne
cmp
mov
clc
jno
pusha
xor
out
pop
mov
aaa
pop
pop
push
or
and
xchg
pusha
push
repnz
xor
or
xor
or
int3
adc
mov
add
fwait
sbb
cmpb
cwtl
bound
fsubrs
repnz
pop
jbe
xchg
in
mov
aas
xchg
inc
xor
push
aas
out
lea
pushl
dec
add
loope
test
jno
jmp
jbe
adc
dec
mov
jno
cmp
fadds
inc
jp
pop
nop
cmp
imul
cmc
mov
cmp
pop
pop
shlb
jge
push
mov
fsubs
push
cmpsl
and
adc
xchg
pop
add
push
fsubs
xchg
pop
inc
xor
xchg
sti
cmp
lods
lahf
fs
lret
xchg
mov
lock
lcall
adc
addr16
dec
fs
adc
loope
test
push
cmpsl
cmp
pop
cmpb
xor
aam
sub
cmpsb
xchg
dec
push
sbb
data16
mov
call
movsb
iret
mov
xor
aam
xor
pop
aaa
sub
aad
jo
dec
test
aad
imul
dec
icebp
outsb
xor
mov
cmp
sbb
push
int
pop
xor
popf
cmp
sbb
aas
xor
call
adc
or
and
idivl
stos
sbb
pushf
loop
lods
test
loopne
aas
pop
sbb
mov
pop
outsb
in
inc
adc
outsl
xor
xchg
test
push
test
fsts
jno
sbb
popf
pop
js
push
es
lret
lods
mov
sub
outsb
testl
push
lahf
sbb
push
in
xor
lods
sub
sub
ljmp
sub
add
xor
and
or
xchg
cmc
repnz
xchg
icebp
xchg
mov
adc
dec
sub
das
pop
pop
mov
push
outsl
in
push
jecxz
dec
and
mov
adc
push
push
inc
jl
fdivr
jne
sbb
js
fadds
push
aad
and
nop
cmp
xchg
push
mov
dec
push
xchg
fiaddl
lcall
xor
int
add
cltd
push
xchg
push
fisubl
xchg
test
push
ljmp
cwtl
mov
fdivr
daa
sbb
jmp
cmp
int
mov
in
pop
cltd
bsf
xor
es
nop
ds
inc
cwtl
fcoml
cwtl
push
push
lock
std
addl
xchg
or
xor
mov
rcrl
cmp
into
mov
sti
movsl
push
std
ds
push
sub
lret
ror
out
mov
sub
mov
sub
lret
andl
jno
sti
int
cmp
cmp
xchg
cli
mov
movsb
clc
lret
loopne
gs
pop
xchg
lret
pop
cmpsl
dec
xor
mov
inc
xchg
lock
hlt
mov
push
push
mov
call
fldenv
pop
cmpsl
clc
add
fldenv
push
push
mov
jno
das
mov
shlb
xchg
mov
repz
call
sub
dec
lock
dec
cli
xlat
aam
imul
push
int3
movsl
mov
sbb
cmp
pop
adc
and
adc
mov
xchg
movsl
sub
lret
jae
ljmp
fldenv
mov
add
mov
out
pop
jbe
fldt
movsb
scas
inc
sbb
divl
mov
shlb
pusha
jl
out
and
je
inc
dec
in
std
stc
in
cmp
jno
hlt
loop
aam
aaa
pop
mov
dec
sub
in
rolb
push
xchg
test
jmp
inc
aaa
xor
and
jno
test
pop
ljmp
mov
mov
push
mul
xchg
sbb
and
add
xchg
sub
mov
rcrb
into
lret
in
push
add
sub
or
pmulhw
fwait
push
add
sub
lret
and
dec
enter
gs
imull
jecxz
add
andb
pop
sbb
pop
aas
cli
sti
scas
testb
lret
cmc
push
push
es
inc
jo
mov
pop
or
pop
icebp
repz
mov
dec
xor
notb
je
sub
cltd
add
sbb
es
mov
mov
jno
sbb
or
aas
hlt
sub
and
inc
test
cli
push
fldenv
inc
movsl
mov
mov
cmpsl
pop
xor
leave
fs
mov
fimull
jp
dec
bound
int
fsubr
shl
push
xor
pop
repnz
jp
push
pop
dec
lahf
sahf
js
push
xor
mov
pop
int
gs
dec
addr16
xchg
jnp
sbb
dec
fnstsw
rcl
lret
mov
out
pushf
sti
mov
insl
push
ljmp
sub
loop
add
mov
push
ss
lret
arpl
cmc
mov
jmp
cmp
fs
xchg
and
jns
and
inc
lods
xchg
jl
stos
test
incl
dec
mov
imul
loope
lea
inc
fucom
and
in
test
jno
imul
hlt
mov
sub
aaa
mov
sub
inc
fs
ljmp
lea
xchg
or
fstl
and
inc
and
pop
mov
into
inc
stc
xchg
jg
pop
lahf
imul
pop
inc
push
cmp
in
bndstx
clc
push
ljmp
dec
dec
in
mov
push
aam
pop
mov
add
adc
mov
out
push
incl
sbb
cld
jmp
sbb
sti
jno
notb
lahf
loopne
les
test
repnz
test
ljmp
fisttpll
pusha
adc
or
das
cs
scas
add
and
push
add
sub
mov
sbbl
xor
loope
jmp
cld
mov
test
sbb
xchg
and
pop
test
and
bnd
xor
add
lahf
xor
xchg
fdivl
dec
add
push
mov
clc
enter
and
sub
and
add
xor
addb
sub
fidivrl
in
out
or
pop
sub
xlat
and
cmp
mov
push
leave
inc
push
xchg
sub
daa
xor
xor
aas
jmp
dec
iret
fadds
add
mov
leave
jle
nop
outsl
loopne
arpl
addr16
aam
sahf
dec
inc
xchg
jmp
or
push
je
cmp
mov
push
xor
int
nop
orl
lods
fadds
jno
ljmp
mov
ljmp
imul
add
jge
sbb
inc
and
out
in
jb
int
xchg
push
sbb
mov
pop
nop
les
pusha
lea
jnp
sub
mov
cwtl
mov
sub
mov
push
stos
adc
aas
into
mov
mov
mov
enter
ljmp
mov
xlat
gs
jge
push
fcomi
add
sarb
lret
cmpsl
xchg
cli
cwtl
call
xchg
mov
mov
adc
fldz
mov
xor
lds
in
add
mov
pop
fisubrs
push
sub
adc
fdiv
lods
dec
push
in
mov
lods
inc
lcall
mov
add
xchg
fsubl
xchg
shlb
pop
pop
mov
xlat
addr16
pop
rcll
aas
xchg
xlat
adc
sbb
aam
cmp
push
mov
lcall
test
imul
fwait
aas
inc
pop
dec
int
neg
int
jae
xchg
clc
mov
xchg
lock
call
push
dec
aam
stos
mov
add
ja
cmp
mov
in
rcrl
das
push
xchg
pusha
jb
arpl
mov
out
cld
dec
nop
ljmp
sub
test
mov
cwtl
mov
pop
fs
fwait
xchg
pop
push
lret
mov
mov
aaa
aas
iret
icebp
sub
daa
rcrl
mov
push
fmuls
push
bound
mov
add
gs
aas
or
or
xor
fs
or
jmp
dec
pop
movswl
add
notl
lea
ds
cs
dec
lcall
push
xchg
fsubl
mov
xor
pop
adc
mov
push
adc
jbe
nop
mov
adc
mov
out
cwtl
popf
xchg
les
test
xor
lret
inc
std
subb
dec
push
daa
or
xchg
push
out
es
ret
clc
cmc
test
sbb
pop
dec
test
loopne
movsl
push
arpl
mov
jle
push
xlat
in
and
gs
sbb
lock
es
sbb
in
sbb
jmp
repz
jge
in
xor
and
and
pop
ffree
push
aad
xchg
lret
fnstenv
pop
xchg
push
ffree
cli
mov
xchg
test
std
mov
adc
adc
jp
out
mov
pop
in
lret
inc
mov
pop
pop
jno
sbb
clc
xor
add
test
mov
outsb
cmp
push
call
jae
or
scas
jmp
mov
mov
mov
xchg
pop
mov
cmp
mov
dec
sbb
in
xchg
decl
sbb
outsb
mov
jno
sub
int
mov
xrelease
pop
in
pop
gs
es
jo
rclb
daa
xor
daa
fcomps
xor
pop
mov
in
adc
push
fisubl
adc
adc
js
cwtl
rcr
sahf
dec
imul
js
mov
jnp
cmp
jp
and
inc
mov
jmp
shlb
lahf
mov
add
movsb
repz
lret
mov
jl
xchg
push
test
jle
cmp
adc
cmp
add
pop
daa
mov
jb
hlt
out
ret
or
push
inc
pop
xchg
pop
ljmp
aaa
pop
inc
les
and
aam
xor
inc
aas
add
xlat
fld
scas
int3
subl
xor
cmpsl
sbb
sbb
cmpsb
cmp
pop
popf
add
sar
mov
out
fwait
and
and
into
fcomps
mov
call
inc
inc
fists
repz
ss
cs
push
cmpsl
dec
cmp
sub
fs
test
in
jp
jmp
inc
xor
ds
sub
jae
mov
bound
fmuls
addr16
dec
pop
call
iret
shl
mov
cs
add
cmc
xchg
push
out
push
inc
out
nop
test
in
xchg
je
add
mov
inc
xlat
out
fisubl
cmp
or
cmp
lret
push
insl
mov
push
insb
or
and
call
fidivrl
push
aaa
jp
xlat
add
and
ds
cmpsl
clc
sti
and
fwait
stc
sub
mov
inc
aas
mov
rcl
rorb
stos
pop
and
je
leave
jae
out
gs
lea
inc
adc
mov
fs
mov
mov
pusha
icebp
in
cmp
imul
pop
nop
xor
push
fadds
in
jecxz
daa
sub
out
aas
pop
pop
or
inc
lods
icebp
aas
mov
jmp
mov
and
jno
sbb
push
repnz
in
je
cli
bound
jne
push
push
outsb
xchg
lret
push
push
pop
leave
test
sub
inc
popf
push
gs
jns
xlat
insb
mov
dec
adc
clc
lret
dec
mov
mov
jb
sbb
into
mov
pop
lret
call
into
test
into
mov
xlat
add
stos
call
mov
shll
lea
xchg
cs
inc
int3
je
adc
or
xchg
jne
xchg
mov
je
mov
mov
daa
or
imul
inc
mov
cli
sbb
xor
test
pop
call
cmpsb
int3
or
mov
jno
insl
bound
in
xor
stos
in
aam
sub
pushl
flds
jge
cltd
fimull
jmp
adcl
lret
dec
dec
pop
lods
pop
sub
cmp
lahf
dec
test
lret
jno
xchg
xor
mov
in
xchg
push
ljmp
push
pop
adc
dec
xchg
test
inc
mov
stos
cli
adc
cmp
sbb
lahf
aas
or
pushl
jno
out
cwtl
pop
jecxz
jo
or
test
je
and
aaa
mov
and
je
xchg
aam
xor
jg
xor
les
sarl
dec
test
rcr
sbb
xor
mov
push
test
call
gs
push
ss
mov
lret
sarb
pop
lret
cmp
sub
xchg
jp
clc
mov
jecxz
into
aaa
jne
sub
and
adc
jo
add
std
pop
and
nop
sbb
cmpsb
pushf
lcall
loopne
es
repz
out
or
adc
das
pop
sbb
in
test
push
aas
jge
shll
lea
or
je
int3
sahf
cwtl
loopne
dec
mov
call
jmp
pop
sti
lods
movsb
mov
add
leave
fnstenv
or
loopne
sbb
ret
push
dec
push
das
gs
testl
shll
clc
leave
sti
mov
dec
or
pop
imul
xlat
ret
nop
push
lahf
aaa
scas
push
imull
stc
fistpll
adc
mov
xor
insb
scas
outsb
movsl
pop
aam
gs
add
lahf
and
loope
nop
aaa
push
push
add
mov
or
jle
and
arpl
int
jno
jne
dec
xor
inc
es
leave
sbb
and
push
jecxz
xchg
mov
jne
pusha
fs
out
mov
insb
enter
pop
sar
add
loope
fdivrl
adc
xchg
fcoms
outsb
dec
movsl
xchg
push
shrb
pop
in
cli
jecxz
xchg
bound
in
xor
lods
cwtl
mov
sahf
fmul
mov
hlt
jl
and
jmp
imul
add
lret
sub
out
mov
sub
add
nop
and
pop
jmp
sub
cmp
add
outsb
add
xlat
cli
sbb
and
imul
cmp
in
xchg
jp
cmpl
sbb
dec
aam
insl
mov
test
mov
or
decl
fwait
ja
daa
fstpl
cmc
aaa
loope
sub
dec
add
aad
insb
fdivrs
jmp
cmpsb
mov
jne
insl
xchg
lcall
loopne
xchg
xchg
mov
test
inc
sbb
jno
stos
in
pop
bound
mov
sbb
jne
repz
cs
in
insb
sbbb
shll
cli
aam
ljmp
addr16
out
mov
mov
mov
out
adc
push
cmp
in
jl
sub
xchg
out
push
cmp
push
out
shlb
or
mov
cmc
cmp
shl
out
lods
pop
fadds
das
sbb
xchg
push
push
jge
stos
cmp
pop
fnsave
insb
jle
in
mov
mov
movsb
xchg
dec
xor
bsf
jae
mov
inc
dec
push
and
call
add
int
arpl
ljmp
adc
mov
dec
cmp
jmp
mov
in
dec
fcomps
outsb
push
scas
mov
pop
xchg
mov
jge
pop
iret
fsubr
or
sbb
aas
pop
loope
int3
out
cmp
lret
inc
and
pop
add
hlt
xor
mov
xchg
lods
movsb
sub
in
xchg
mov
push
cmp
xchg
in
movsb
inc
sub
pop
dec
bound
les
mov
xor
daa
push
lahf
dec
pop
mov
pusha
xor
mov
push
jbe
dec
dec
and
sub
xlat
loopne
pop
lea
push
fs
ret
scas
push
mov
or
dec
lods
addr16
cmc
test
nop
clc
pop
sub
sbb
adc
xlat
xor
jle
adc
sbb
rol
jne
andl
cmp
push
pop
iret
in
xor
and
sbb
fdivrs
jne
lods
std
mov
das
fwait
inc
pop
ljmp
cli
iret
das
fcom
jno
ret
mov
shrb
outsl
xchg
test
roll
sahf
repnz
out
je
mov
iret
test
dec
xor
int
shrb
je
mov
imul
mov
add
mov
jl
xor
sub
push
mov
mov
mov
je
mov
imulb
idivb
shll
xor
out
push
cmp
dec
ja
mov
addl
fsubs
test
fs
stos
pop
call
pop
lret
out
adc
jb
bound
jmp
mov
lcall
std
fld
sub
xchg
mov
mov
inc
lods
mov
ss
jae
jno
inc
mov
jge
push
stos
mov
out
loop
scas
adc
push
sbb
mov
into
inc
loope
nop
jmp
aam
cmp
jmp
sub
stos
call
pop
sbb
rclb
mov
fstps
in
sbb
les
add
fsubl
cmp
cltd
or
pop
jl
cld
sbb
adc
popa
or
movsl
mov
imul
xlat
mov
jp
mov
les
mov
dec
inc
push
hlt
fidivl
into
test
jo
loopne
inc
int3
adc
call
adc
lock
out
adc
mov
faddl
pusha
je
enter
into
mov
push
xchg
add
pop
add
imul
xchg
rclb
out
test
gs
mov
mov
std
shlb
inc
int3
pop
outsl
fcoml
jbe
inc
leave
add
pop
jae
aas
sbb
cmp
in
xor
imul
mov
lock
xchg
faddl
add
cmpsl
and
out
push
xchg
cmp
aas
add
fs
mov
fistpll
adc
ret
pop
out
mov
push
call
mov
sbb
jle
mov
push
mov
mov
pop
or
outsb
test
clc
push
or
loope
sub
lock
adc
mov
pop
sbb
push
push
xchg
sbb
stc
lds
les
out
aas
int
test
adc
ret
les
aad
scas
and
sbb
fadd
pop
ljmp
movsl
sbb
xor
lods
add
je
loope
and
adc
dec
and
mov
and
adc
mov
filds
cmp
cmp
test
mov
mov
xor
aas
sbb
les
pop
test
mov
mov
out
xor
movsl
dec
lods
xor
mov
jo
inc
push
stos
adc
pop
mov
jge
scas
jmp
mov
inc
shlb
leave
inc
andw
ljmp
jle
adc
cld
sbb
dec
xchg
push
shr
lahf
xchg
push
cmpl
int3
cmp
mov
xchg
xchg
mov
out
add
pusha
scas
sub
mov
hlt
shl
int
jmp
sbb
cmp
fwait
lds
ss
out
icebp
dec
lods
fcoms
add
mov
cmc
repz
dec
push
sbb
xor
lods
pop
sti
stos
pushf
adc
mov
test
movsl
test
add
mov
pushw
sbb
dec
ljmp
outsl
mov
mov
cmpsl
sub
cmp
repnz
jmp
mov
jae
ljmp
sahf
inc
lahf
add
aas
xlat
gs
pop
ficoms
in
es
idivl
ror
pop
jecxz
push
fadd
jno
xlat
shll
flds
pop
lea
ffreep
inc
mov
mul
cmp
fmul
aas
aas
pushf
sti
xor
cmp
pop
push
push
adc
call
fisttpl
jno
adc
adc
mov
push
aas
sbb
rorl
cmp
dec
mov
adc
hlt
shl
push
movsl
xchg
lcall
dec
fistpll
andl
pushf
push
cmp
jno
inc
pop
add
and
scas
clc
mov
lcall
sub
sub
imul
in
cmp
push
dec
int3
jo
add
lret
xchg
out
mov
cmp
lods
and
cmpsb
sub
sbb
gs
pop
or
mov
dec
repz
int3
leave
mov
faddl
push
ljmp
xor
adc
clc
sub
aas
les
mov
into
jmp
xchg
dec
insl
pop
inc
orb
lods
dec
mov
dec
rorb
jle
pusha
push
in
sbb
imul
shrb
lea
jecxz
pop
adc
dec
xchg
and
aam
mov
cs
and
sbb
add
mov
loopne
dec
std
push
and
fisubl
push
fnstenv
sub
dec
and
pop
lcall
pop
cmp
mov
aad
hlt
fstps
and
mov
add
mov
inc
out
adc
cli
popf
push
mov
imul
aad
add
push
testl
cmpsb
jno
xlat
repnz
mov
pop
sbb
ljmp
lds
sub
repz
add
pusha
cmpsl
les
sub
adc
lret
and
insb
push
cs
inc
inc
nop
leave
cwtl
or
jae
aam
xor
addr16
scas
icebp
sbb
ljmp
shl
mov
movsb
mov
sub
jmp
push
pop
call
inc
gs
inc
dec
fisubrl
push
loopne
jecxz
test
xor
cwtl
stos
xor
fdiv
lahf
movsb
add
nop
outsl
jbe
or
cltd
fmull
jne
outsl
sbbb
dec
insb
pop
jo
inc
and
mov
cli
repnz
stos
adc
dec
aas
fisttps
pop
icebp
add
sahf
cs
insl
pop
aas
shr
cwtl
pop
push
movsl
jno
gs
imul
mov
pop
loop
mov
stos
inc
cwtl
cmc
push
inc
fcmovnb
repnz
cmp
xchg
push
leave
fisubrl
and
aaa
in
sbb
roll
aas
xchg
ljmp
mov
lods
push
add
call
stos
xor
push
xchg
and
ljmp
cld
push
clc
gs
dec
daa
sub
jb
in
sbb
in
daa
ljmp
inc
push
and
xorl
jecxz
test
sbb
cwtl
mov
and
out
mov
scas
or
call
mov
aas
and
lret
je
xor
scas
pop
xchg
out
mov
test
pop
and
mov
pop
push
push
les
mov
fisubrl
iret
bound
and
sub
xchg
push
xchg
mov
pop
ds
loop
pop
arpl
sahf
dec
xchg
pushf
andl
or
xchg
gs
dec
add
push
je
nop
mov
dec
push
insl
inc
test
inc
mov
hlt
push
lds
xor
add
stos
cmpsl
fs
cmp
sbb
repnz
xchg
hlt
cwtl
cmp
pop
pop
addr16
sub
out
ja
decb
add
and
add
and
mov
rolb
push
and
fbld
stos
ja
nop
ja
xor
mov
jl
mov
jmp
in
jle
xchg
jne
mov
lcall
in
add
scas
imul
mov
ja
outsl
cmpsl
or
pop
dec
xchg
add
pop
pusha
and
jl
xchg
and
or
dec
xor
pop
inc
loop
or
repnz
push
rcll
push
out
xchg
stos
jno
and
push
or
xchg
cmpsb
xchg
mov
gs
mull
imul
mov
jbe
cmp
loope
jns
mov
cld
into
scas
hlt
pop
ja
addr16
fiaddl
fcoms
ja
xlat
fidivl
push
xchg
lahf
sbb
sub
gs
sub
js
mov
call
pop
inc
out
inc
lcall
cwtl
jp
pop
push
mov
js
xchg
xor
xor
in
addr16
jb
mov
icebp
xor
mov
mov
mov
aas
es
inc
add
and
pop
fists
adcl
int
sbb
loop
addr16
movsl
pop
or
rol
sub
lret
je
loopne
and
xor
pop
jp
push
jne
lret
sub
push
test
fucomi
inc
fcomps
mov
mov
cmp
add
add
je
popf
push
inc
addr16
and
mov
loopne
faddl
xchg
jl
sbb
dec
test
jmp
pushf
jne
mov
into
push
out
insb
inc
or
push
sahf
test
cmc
loop
sbb
dec
or
dec
fwait
mov
pop
sbb
lcall
lods
in
aaa
mov
fdivp
lcall
xor
pop
push
imul
hlt
sbb
fcoml
mov
sti
xchg
and
cmpb
jnp
sbb
icebp
jne
test
mov
add
addr16
aad
fwait
xor
pop
int3
inc
imul
pop
pop
ret
leave
mov
cli
loopne,pt
pop
add
mov
je
shrb
lcall
fidivs
jmp
outsb
mov
xchg
mov
imul
cmp
dec
in
add
mov
shrl
xchg
in
fadds
pop
lcall
addr16
roll
mov
sahf
xor
lret
jmp
add
scas
arpl
out
push
lret
push
dec
mov
cmpsl
aad
cmovle
cmp
je
mov
fs
jp
test
test
ljmp
jno
sub
in
aas
push
scas
or
jmp
fsubs
add
jo
pop
jae
aam
mov
out
test
popa
mov
mov
data16
in
cmp
xchg
cltd
shrl
out
inc
jle
xchg
cmc
insl
and
test
pop
adcl
xchg
jmp
jl
inc
xchg
fs
add
addl
mov
lods
adc
fcomps
xchg
mov
mov
clc
in
in
insl
shll
adc
jmp
adc
xchg
cmp
int
mov
insb
dec
fsubs
scas
add
les
repnz
mov
andl
nop
sbb
push
es
movsl
das
cmc
inc
repnz
scas
cmpsb
into
cmc
je
aad
mov
push
jbe
sti
les
cli
aam
push
lods
test
and
pop
sahf
div
mov
lods
inc
dec
inc
cmp
je
xchg
cmp
add
pushl
das
mov
sub
pop
ja
mov
nop
dec
jo
fwait
mov
es
mov
es
in
push
adc
xor
inc
sbb
call
dec
and
add
sbb
ss
jne
xchg
movsl
cmp
push
mov
lret
imul
cmc
lret
sub
mov
test
jb
push
mov
mov
cld
add
mov
pop
ret
aas
mov
jl
fwait
mov
fcoml
mov
clc
mov
cmp
stos
nop
cmp
and
sub
out
cmpsb
stc
pusha
stc
push
outsl
pushl
test
mov
sbb
test
pop
int3
popf
ja
shll
jo
lock
aas
push
adc
inc
mov
loope
dec
cltd
arpl
mov
loop
movsl
or
aaa
pop
das
sbb
push
flds
and
dec
xchg
mov
jo
xor
push
xchg
test
jg
sbb
out
jo
dec
adc
mov
idivb
out
mov
xor
cs
and
sub
inc
xchg
pop
and
loopne
xor
aaa
xor
jecxz
xor
pop
repz
mov
jns
sub
ret
stc
pop
into
enter
pop
mov
jae
loop
orl
ss
sbb
mov
imul
sub
mov
sbb
out
pop
mov
lock
mov
stos
ficompl
aaa
repz
and
je
push
xor
aam
push
jne
call
pop
lds
iret
pop
iret
aam
icebp
out
jne
movsl
rcll
aam
inc
fdivr
cmp
inc
mov
xchg
gs
mov
imul
xor
adcl
mov
aas
in
xchg
imul
cmp
push
cwtl
gs
mov
jg
mov
xor
out
adcl
dec
mov
in
ret
dec
scas
jmp
ljmp
leave
inc
ljmp
pop
xchg
jmp
sub
and
mov
js
gs
mov
rep
inc
cmp
test
aam
insl
add
pop
mov
cmpsb
imul
xchg
mov
pop
iret
stos
movsl
cwtl
push
dec
out
jge
ljmp
inc
add
in
outsl
insb
mov
cmp
xor
or
orl
outsl
sub
test
push
xchg
jo
fmul
sbbb
sbb
xchg
outsl
sbb
addr16
fs
dec
jo
sarb
cmp
fisubl
dec
pop
dec
pushf
loope
lahf
into
movsb
shlb
test
shll
mov
sub
and
stos
icebp
jmp
pop
mov
mov
ret
sub
scas
or
mov
icebp
mov
mov
movsb
mov
mulb
in
jno
mov
sbb
add
ret
sub
xor
adc
mov
je
xor
and
adc
and
mulb
jne
sbb
and
hlt
call
adc
repnz
xor
dec
or
xchg
cmpsl
clc
je
sub
fsubrs
inc
fsubrs
jo
fcomps
mov
jp
iret
fs
pop
in
pop
movsb
inc
sub
hlt
sub
je
pop
iret
and
jge
push
and
mov
rorl
ror
xor
add
lods
dec
out
xor
pop
cmc
out
add
rcr
into
inc
fisubrs
push
mov
push
add
jmp
mov
inc
push
rcr
push
lcall
and
into
outsl
test
aas
fwait
inc
jmp
jp
js
inc
xlat
test
xchg
dec
mov
iret
into
shr
jnp
dec
lods
pop
pop
aad
pop
mov
les
push
cmp
ficomps
int3
jb
js
je
sub
sbb
mov
mov
sbb
ss
lea
or
test
lahf
or
xchg
jnp
mov
movsl
outsl
push
je
mov
xchg
int3
cmp
pushf
jae
xchg
inc
in
xlat
adc
and
and
cmpsl
dec
cmp
push
lock
lock
sub
movsb
xor
pop
xor
loopne
insl
push
repz
sbb
outsb
push
fs
pop
jno
sub
lea
movsl
icebp
dec
pop
mov
or
jbe
pop
cs
and
add
and
sbb
cmp
pop
cmp
or
cmc
inc
pop
testb
out
dec
xchg
loopne
lods
mov
and
dec
in
push
fucomi
outsb
or
lcall
addr16
jno
es
in
int3
or
stos
xor
pop
mov
or
pop
fwait
in
test
mov
out
cmp
cmp
inc
sbb
gs
dec
push
mov
fsubl
outsl
push
add
add
push
aaa
cli
or
jecxz
pop
xchg
ret
inc
mov
xchg
and
hlt
xor
cmp
xor
into
cmp
xchg
add
out
push
test
mov
jno
mov
xor
into
shr
stos
ds
lods
cmc
xchg
add
clc
add
dec
sarl
inc
xchg
sub
js
lock
xchg
mov
les
hlt
out
jno
fwait
adcl
int
sti
jae
cmp
bound
jge
hlt
and
rolb
es
out
mov
push
sub
adc
icebp
cli
cmpsl
subl
mov
sub
fcoms
hlt
das
mov
inc
or
int
sbb
paddusb
shr
jo
hlt
mov
in
push
negl
and
outsb
fisubrs
xchg
cwtl
test
sub
shl
push
mov
jmp
lds
movsl
push
or
and
int
cmp
nop
cli
jl
sub
in
leave
aaa
mov
dec
pop
into
pusha
sarl
fmull
sbb
mov
push
sbb
ja
pushl
jae
fadd
loopne
test
fbld
xchg
shlb
or
xchg
xchg
test
movsb
aam
jne
sub
cmpsl
pop
sahf
jg
out
inc
mul
call
je
lock
mov
pop
xchg
js
cmc
sbb
repz
andb
jmp
mov
cmp
jno
out
push
mov
push
cmpsl
inc
jl
sub
add
push
aam
ss
jne
or
cltd
dec
jae
out
div
mov
iret
jbe
jo
pop
push
aas
mov
xchg
test
sbb
mov
jle
idiv
dec
cmp
imul
pop
jno
inc
insl
mov
pop
mov
jno
fdiv
xor
fisttpll
push
cwtl
cli
repz
and
add
xchg
lods
inc
pop
dec
adc
pop
xchg
pop
sub
xor
repnz
mov
push
jle
out
cmc
dec
xor
pusha
inc
dec
fnstsw
adc
or
pop
cmp
dec
jno
xchg
mov
in
xor
mov
call
push
dec
mov
fsubr
dec
fcoml
aas
hlt
mov
cld
mov
dec
call
scas
jno
gs
jno
xor
in
popa
xchg
ret
push
dec
mov
bound
scas
and
jmp
push
add
fmuls
std
roll
in
loopne
pop
in
and
mov
inc
add
dec
cwtl
dec
mov
cmpsb
push
add
xchg
call
gs
push
mov
lret
mov
add
repz
jo
subl
out
jns
inc
rep
outsb
pop
flds
mov
dec
or
fadds
xor
sbb
mov
mov
mov
shll
repnz
mov
out
fwait
aad
call
jp
add
sti
sbb
repz
cmp
dec
jl
iret
ja
addl
stos
push
test
push
fldt
imul
sub
jo
dec
mov
mov
repz
cmc
sarb
xchg
out
mov
pop
push
sahf
outsl
pop
inc
add
es
stc
inc
stos
mov
ljmp
rcl
xor
loope
loopne
das
aas
mov
cmp
dec
push
cmpsb
test
cltd
jae
jne
and
test
hlt
fistl
cmpsl
lret
cli
inc
sbb
xchg
icebp
insl
sub
iret
mov
dec
movsb
cmpsb
cmp
or
cmp
push
sarb
xlat
mov
stc
add
movsl
and
out
xor
pop
sub
loopne
int3
in
loope
add
pop
mov
test
and
out
adc
arpl
lret
xor
sti
das
adc
clc
mov
mov
aam
sbb
cmp
setp
add
ljmp
bound
lods
jno
xor
or
sbb
inc
or
jl
iret
jns
pop
sub
jg
cmp
mov
insl
sub
loop
mov
nop
popa
test
out
pop
cli
call
outsb
lcall
ljmp
outsl
ljmp
cld
pushl
leave
jmp
lds
inc
or
cld
outsl
mov
scas
pop
or
adc
xor
inc
adc
xor
iret
pop
call
iret
inc
dec
fisttpl
fstenv
scas
jbe
cmp
pop
mov
pusha
imul
xchg
pop
test
fdivs
sub
mov
dec
insb
sbb
xchg
mov
cmp
iret
pop
addr16
pushf
adc
lea
pop
in
sbb
sub
pop
and
imul
hlt
or
cwtl
dec
js
and
jle
mov
dec
mov
mov
and
cmp
insb
cmp
fldenv
mov
int
xchg
in
aas
out
fdivrl
iret
jg
ja
rcr
shl
xchg
int
jp
sahf
pop
pop
je
adc
add
adc
mov
inc
sbb
dec
aam
call
inc
in
das
xlat
mov
jmp
ret
jno
or
mov
lret
scas
mov
pop
js
sahf
test
lahf
and
scas
mov
xor
jae
push
pop
hlt
pop
mov
mov
rorl
movsl
and
mov
aam
iret
sbb
mov
pop
xchg
adc
iret
nop
push
or
addr16
fcom
mov
sub
xchg
repnz
pusha
lahf
sub
bound
jge
sbb
mov
pop
mov
outsb
push
jg
jge
data16
fldl
pop
xor
xchg
in
jb
fs
scas
scas
jbe
sub
cwtl
pop
sbb
outsl
sbb
jecxz
pusha
jmp
clc
stos
sti
mov
std
mov
adc
mov
dec
sub
addr16
add
mov
imul
hlt
cmpsb
sub
dec
aam
test
mov
inc
pop
pop
in
repz
jp
jae
add
dec
jno
inc
sbb
cltd
mov
pusha
push
int
les
mov
pushl
rol
push
popf
dec
add
test
xor
mov
dec
pop
js
mov
xchg
sti
aad
xchg
movsl
cli
nop
mov
push
jl
or
mov
fwait
or
clc
sub
sbb
xchg
jg
add
or
xor
test
aam
mov
nop
cmp
pop
push
xor
mov
call
push
movsl
shll
rcr
dec
imul
cmp
fs
sti
cmc
or
lahf
fcmovne
sub
pusha
adc
test
add
mov
mov
pop
pop
sbb
dec
aam
rolb
ret
sub
daa
inc
lret
je
mov
xchg
mov
imul
insb
loope
outsl
stos
jne
outsl
int
aad
rorl
adc
mov
call
iret
dec
push
call
movsb
or
ret
xor
ficompl
sbb
lret
lock
add
jmp
imulb
and
fwait
add
aaa
sbb
in
add
hlt
mov
hlt
xchg
call
fwait
mov
pop
mov
push
aas
data16
out
adc
and
mov
sbb
xchg
out
or
adc
inc
adc
sbb
aaa
shrb
test
inc
cmp
push
sub
mov
repz
inc
mov
cmp
sub
es
fidivrs
fwait
mov
add
pop
mov
mov
xor
and
push
lahf
jne
bound
repnz
xor
and
mov
sbb
mov
addr16
pushf
push
mov
cmp
sahf
js
out
pop
daa
in
mov
jbe
xchg
jno
mov
mov
mov
jbe
add
or
test
xlat
movsb
cmpsb
cmp
mov
nop
movsb
leave
lahf
aas
xlat
cmp
pusha
sti
movsb
imul
or
daa
cmc
xor
popf
mov
aam
sbb
mov
pop
aam
je
lret
xor
daa
loope
and
pop
shlb
inc
xchg
mov
pop
nop
shll
xor
sub
repz
insb
lret
movsb
adc
jmp
pushf
lcall
mov
cmpsl
pop
jge
jo
or
pop
and
in
xchg
xchg
mov
mov
popa
push
leave
fldenv
or
lds
in
aad
mov
xchg
mov
imul
xchg
movsb
sbb
and
pushf
ljmp
sub
lcall
mov
jl
sbb
nop
jb,pt
push
test
adc
cmpsl
pop
and
push
andb
in
clc
ror
and
lahf
mov
cmp
fwait
mov
mov
mov
cmpsb
mov
adc
mov
xchg
lods
aad
mov
daa
mov
push
clc
call
fsts
mov
ret
mov
mov
fadd
mov
pop
subl
ljmp
mov
push
outsb
pop
xor
pop
es
fdivl
cld
jae
dec
mov
movsb
or
and
sbb
lret
mov
nop
in
pop
mov
pop
in
sbb
inc
pushf
cli
fimuls
inc
pusha
lock
dec
cmpsl
leave
cli
lock
jmp
sbb
adc
fsubs
xor
adc
rcrl
cli
aam
mov
push
mov
shrb
cwtl
rol
and
mov
lahf
cs
cmp
mov
xor
aas
add
lret
add
jl
imul
cmp
aas
xchg
rcll
or
xor
xorb
cmp
or
mov
jl
stos
popf
mov
mov
std
hlt
lcall
incb
stos
jl
inc
push
xchg
jae
add
jl
mov
xchg
fdivr
call
or
pop
sbb
xchg
notl
pusha
bound
xlat
inc
push
cmp
scas
ds
sub
mov
push
pop
jl
in
mov
mov
out
xchg
pop
or
call
or
clc
jmp
nop
ljmp
or
push
fnstcw
notl
xor
lret
lcall
jbe
pop
iret
popw
mov
aaa
incl
dec
jecxz
mov
scas
jno
lahf
imul
sub
loope
adc
ljmp
lock
test
rol
ljmp
xchg
fcompl
sar
mov
mov
inc
jle
movsb
xor
scas
in
jmp
xor
andl
xor
sti
push
stc
aad
fidivrl
jmp
cmovne
imul
test
in
mov
ljmp
jge
enter
xor
dec
pop
jnp
scas
sarb
cli
ds
mov
fwait
in
outsb
pop
daa
notb
iret
xchg
arpl
in
sarl
jo
pop
repnz
or
pop
jle
loope
and
and
xor
mov
adc
mov
inc
dec
fucom
das
fs
pop
xchg
push
out
test
mov
mov
iret
xchg
xchg
push
inc
cmpsb
out
dec
jle
shl
sbb
pop
push
dec
jle
rcrb
fs
sbb
inc
add
pusha
cld
fsubrs
cmp
xchg
xchg
mov
xchg
pop
cli
fsubrs
push
mov
push
mov
xchg
add
outsb
loop
loopne
add
push
sbb
das
shlb
xlat
stos
sbb
add
jb
adcb
add
or
mov
int
loop
pop
push
lods
mov
pop
mov
out
hlt
fdivs
mov
xchg
in
repz
imul
jne
mov
jbe
in
pop
mov
test
push
mov
in
jle
jg
sti
add
mov
rorb
sbb
adc
cs
mov
pop
inc
int
gs
cmp
pop
jmp
movsb
inc
dec
mov
push
dec
xlat
ret
dec
push
mov
hlt
pop
mov
xlat
test
inc
push
mov
lret
mov
pop
sub
mov
popf
adc
bound
aad
cmp
xchg
dec
cmp
pop
jno
cmp
js
sarl
inc
add
shrb
mov
dec
xor
xchg
cli
daa
es
std
adc
neg
clc
xchg
xchg
fbld
shr
insl
aad
jge
cs
mov
jno
xor
mov
sub
jne
xchg
push
xlat
jmp
pop
pop
inc
int
inc
xchg
jp
mov
sub
pop
es
xorl
and
push
lock
xchg
jbe
dec
pop
lret
rol
adc
call
jl
sub
inc
adc
jnp
les
push
call
mov
xor
repz
imul
cmc
pop
dec
mov
mov
notl
out
mov
mov
ss
mov
ret
out
adc
push
xchg
mov
call
jno
leave
in
nop
cmp
sbb
mov
jmp
mov
data16
in
push
xchg
mov
ljmp
add
xchg
ds
imul
xor
xlat
adc
shll
mov
shrl
pop
inc
dec
xlat
sub
push
loope
dec
pop
xor
popa
lock
add
bound
repnz
ljmp
sub
cmpsl
jno
mulb
repnz
push
stos
je
lret
ds
lds
lods
mov
push
xchg
in
movsb
repnz
lcall
add
pushf
fmul
fsubrs
add
push
out
sbb
das
repnz
std
mov
add
inc
inc
mov
cmp
cmp
push
xchg
xor
sbb
mov
sbb
jmp
sub
cmp
mov
sbb
out
fs
lret
jno
mov
test
mov
pop
lcall
js
dec
nop
sub
mov
xlat
adc
test
mov
dec
adc
or
pop
cmc
or
inc
daa
mov
lea
lahf
dec
bound
xchg
fcoms
mov
cmc
xor
push
clc
fwait
test
jne
aas
cmp
int
nop
or
xor
pusha
push
cmp
add
leave
pushl
arpl
pop
or
scas
and
jl
xchg
mov
cmp
cwtl
and
jle
push
shr
jp
enter
pop
jb
fiadds
iret
sub
jge
add
pushf
xchg
xchg
loope
cmp
popf
shl
out
iret
mov
fldenv
cltd
test
cli
fimull
mov
out
add
ds
inc
ret
adc
xor
lea
sbb
imul
or
pop
jnp
cmp
gs
xor
xor
sbb
fidivs
inc
loop
xchg
lock
add
test
fdivp
mov
clc
cld
xchg
je
int
pop
sbb
inc
insl
cli
mov
push
int
xchg
mov
dec
push
and
addb
sahf
inc
adc
mov
push
notb
lret
ljmp
fsubrs
sbbl
data16
sahf
inc
cmp
scas
outsb
push
mov
jae
pop
xchg
mov
inc
or
nop
cmp
sub
out
push
lock
xchg
nop
addr16
in
test
mov
adc
xlat
pop
pop
and
mov
popa
or
add
call
add
xchg
push
into
cmpsl
xor
addr16
dec
das
scas
daa
xchg
dec
inc
mov
fwait
call
dec
repnz
mov
out
pop
pop
popa
fsubrl
push
repnz
xchg
xchg
lock
pop
mov
int3
cmp
clc
daa
cmpsl
repnz
xlat
scas
jge
out
push
lret
out
mov
inc
jmp
dec
pop
les
fnstsw
rclb
sub
mov
xlat
add
int3
cmpsl
dec
pop
push
pop
cmc
pushf
adc
clc
outsl
mov
fucomip
xor
imul
sarl
dec
add
jno
repz
sub
lret
movsb
xchg
mov
xchg
sbb
aas
cld
lret
dec
out
jmp
ffreep
insl
push
sbb
dec
stc
xor
out
fstps
xlat
cld
mov
mov
sub
pop
lret
pop
mov
stos
push
ds
repnz
fwait
xor
cmp
lahf
or
jmp
push
pop
ds
jg
jbe
insb
nop
and
repz
aaa
push
popl
sti
ljmp
cld
je
adc
xor
pop
mov
pop
xchg
pop
mulb
mov
dec
mov
ja
pushf
pop
dec
movsl
add
pushf
pop
fwait
test
adc
sub
inc
stos
lods
adc
inc
inc
cmp
pop
out
int3
bound
nop
mov
repz
mov
cltd
push
leave
and
mov
xchg
xchg
jo
xchg
mov
xchg
mov
call
es
pop
in
int
sub
mov
hlt
sbb
cmpsb
mov
aas
les
loop
paddusb
pop
inc
shlb
lock
cmp
in
pop
lret
xchg
mov
dec
mov
lea
push
or
push
orl
dec
imul
fs
cmpsl
jae
sub
ljmp
lahf
sbb
daa
pop
mov
xchg
fstl
js
aam
push
test
pop
dec
cs
push
out
popa
shll
lods
cmp
bswap
sub
insb
sub
ljmp
pop
nop
out
sarb
call
jno
jge
fildl
xorps
mov
out
pop
popa
iret
sbb
test
gs
and
ja
ficoml
dec
xchg
mov
push
sbb
pop
mov
sbb
pop
and
clc
sub
push
orb
test
pushf
stos
jbe
in
daa
nop
jno
adc
fdivrs
sbb
mov
lret
xor
jle
jnp
ljmp
out
or
aas
xchg
repnz
leave
std
sbb
mov
jbe
lods
add
xchg
cli
fs
mov
clc
outsb
xor
mov
cmp
iret
call
int
mov
mov
notl
scas
and
sbb
cld
inc
cli
fsub
js
dec
cmp
pusha
dec
xor
cmp
lea
aas
ja
push
adc
cmp
push
dec
xor
mov
pop
mov
sbb
scas
sarb
push
outsb
cmp
lcall
fcompl
fsubl
notl
mov
les
imul
sbb
sub
push
xchg
movsb
jne
scas
sbb
xchg
jl
movsl
pop
std
jno
shr
mov
mov
fsubs
je
pushl
aaa
adc
sub
aaa
popf
mov
inc
jmp
pusha
lds
push
sub
lret
mov
inc
jbe
lcall
mov
xlat
mov
push
rolb
gs
decb
test
aaa
test
loopne
mov
pop
pushf
rorb
cs
je
rorl
pop
int
mov
sti
sub
xchg
xchg
jbe
and
xor
sbb
aam
jne
in
hlt
mov
cmp
insb
int3
pop
gs
pop
jns
rol
movl
das
in
cmp
fmuls
cmp
leave
pop
mov
stc
push
enter
lods
pusha
pushl
mov
add
imul
jg
pop
dec
je
ljmp
adc
repz
pushf
sahf
and
xor
xlat
js
sbb
insl
fsubl
loope
aam
inc
jb
shlb
rorl
xor
popf
into
fwait
pop
cmp
cmc
adc
mov
xchg
dec
adc
mov
loopne
pop
pop
lahf
or
sub
xchg
cwtl
cmp
dec
int3
inc
dec
fcomps
movsl
lcall
add
fcom
xchg
nop
out
pop
inc
pushf
sti
lock
imul
inc
loopne
adc
jb
cld
addr16
dec
shll
icebp
or
std
pop
je
gs
sahf
jae
inc
filds
push
je
ret
push
push
mov
scas
in
xor
cltd
mov
dec
ror
jg
or
add
xchg
mov
cmp
dec
lahf
scas
imul
xchg
push
stos
ja
imul
mov
out
sbb
ret
cltd
dec
fidivrl
int
fdivrl
sbb
xchg
push
push
sbb
stc
fimull
mov
data16
and
cmp
xchg
outsb
push
and
or
sub
cmp
out
leave
jle
mov
xor
cwtl
out
daa
repnz
cmp
inc
cmp
dec
orl
gs
mov
xor
dec
test
daa
outsb
rcrl
sub
mov
gs
movsl
lahf
ljmp
addr16
imul
mov
adc
lock
xor
divl
lret
push
sbb
dec
in
sbb
les
addl
sub
push
out
add
stc
sbb
jecxz
dec
out
and
push
xor
rclb
test
sub
xchg
or
adc
sbb
leave
jnp
in
lcall
and
jno
aaa
mov
rolb
loopne
jle
jae
sahf
jmp
or
lea
fcoml
in
outsl
fsubl
pop
insb
jno
mov
call
scas
dec
pusha
mov
xchg
push
in
lret
ljmp
add
sub
lahf
fcompl
and
ret
aaa
aam
ret
push
inc
dec
out
je
dec
xchg
pop
or
mov
jp,pt
fldt
adc
mov
and
mov
scas
faddp
or
jbe
in
mov
and
addb
cmp
nop
movsl
sub
test
and
mov
mov
mov
or
in
test
sbb
sarb
lahf
movsb
int3
add
aam
or
lret
and
imul
dec
shr
int
xor
rep
xchg
or
push
loope
sub
sbb
pop
sbb
and
inc
gs
mov
adc
mov
xchg
sub
out
pop
rolb
push
lock
nop
pop
orl
pop
xor
data16
int
xor
lods
xor
mov
fidivrl
push
hlt
jge
ret
jne
inc
std
mov
mov
mov
add
xchg
insb
lahf
sti
mov
jne
pushf
sbb
aam
fists
push
xor
fsubrp
out
mov
jge
sbb
clc
mov
das
cltd
into
and
les
dec
xchg
sub
mov
and
mov
mov
repnz
add
dec
ret
hlt
pop
test
das
les
cwtl
fstpl
fdiv
in
adc
push
pop
call
add
add
jb
mov
jl
fdivrl
pop
hlt
xchg
aaa
es
mov
mov
jne
out
mov
xor
outsb
fimuls
lods
mov
shr
mov
mov
dec
push
fs
sub
xor
adc
dec
data16
sbb
inc
and
call
js,pn
lret
incb
and
xchg
sub
sbb
call
pop
test
mov
cltd
das
inc
out
pop
fmul
divl
mov
bound
stos
jp
adc
dec
mov
popf
jmp
shl
mov
leave
and
mov
fistps
cmp
and
sbb
jmp
gs
mov
ja
adc
clc
xlat
mov
mov
xor
jecxz
and
xlat
mov
xlat
in
movl
dec
hlt
clc
lret
xchg
pop
cmpb
ss
lret
test
xorl
das
shlb
imul
mov
ljmp
pop
xchg
in
sub
cli
cwtl
mov
in
mov
rcl
cli
xchg
jbe
mov
fimuls
xchg
aad
sbb
fsubrp
cs
cwtl
push
mov
add
aaa
mov
in
cmc
adc
pop
daa
xor
jo
sub
push
push
sbb
repnz
pop
push
aam
nop
data16
dec
xchg
ret
stos
mov
mov
aad
lods
add
loopne
test
pop
lret
sub
insl
fs
xor
mov
inc
cmpsb
test
cmp
cli
xchg
add
inc
jmp
xchg
jno
divb
dec
pop
sbb
aaa
ror
les
movl
mov
pop
stos
cwtl
xchg
xor
pop
data16
pushf
mov
or
push
int
dec
repz
dec
adc
cld
ljmp
xchg
fnstcw
shlb
test
lock
cmpsl
sbb
je
dec
xbegin
in
fimull
clc
sub
repz
sub
fs
inc
jb
cmp
jne
mov
fiaddl
pushf
iret
jmp
sbb
sub
popf
pop
mov
inc
cmp
mov
cmp
sbb
int3
push
sbb
sub
jb
and
je
lock
divb
cs
out
and
sbb
sub
imul
xchg
out
sbb
add
rcrb
adc
mov
mov
jb
sub
xchg
jg
xchg
add
js
fldl
pop
stos
movsl
xlat
or
adc
rol
jne
loop
pusha
sti
xchg
push
add
ficompl
daa
lock
repnz
mov
push
xor
inc
loope
addr16
pop
dec
mov
fcoms
dec
jo
test
push
cmp
fcompl
jnp
and
dec
lock
repz
mov
xrstor
out
and
clc
leave
pop
cwtl
xor
adc
clc
sbb
mov
aaa
shrl
test
int
out
and
xchg
je
lahf
mov
aaa
ret
out
pop
sub
aas
int3
cmc
fnsave
faddp
mov
inc
rolb
test
dec
and
insb
fsubrp
gs
stos
jmp
mov
nop
sti
andl
jb
ja
dec
sbb
jmp
pop
add
xor
cmp
sub
out
sub
fidivrs
mov
ss
test
jmp
lea
divl
in
xchg
int
or
and
dec
mov
mov
dec
fsubrl
aam
sub
enter
cmp
cld
mov
ljmp
lds
dec
scas
or
clc
test
dec
push
adc
xor
aad
sti
sbb
sub
notl
ljmp
popa
cld
cmp
sbb
mov
movsl
es
and
sbb
inc
sub
xchg
jo
jb
leave
popa
daa
mov
pop
pushl
inc
mov
cltd
pop
lahf
jl
mov
adc
fbstp
fwait
in
and
sbb
pop
aas
movsb
hlt
data16
into
daa
filds
adc
dec
mov
mov
xlat
xchg
pushf
push
push
xor
add
cmp
out
or
popf
inc
sub
push
pop
sub
aam
iret
shlb
ljmp
jne
dec
dec
push
int
loopne
outsb
fisubrs
sarb
or
aas
in
aam
push
setno
aaa
cmp
cmpsb
inc
xor
pushf
mov
jns
sbb
and
out
jge
inc
cmp
lret
inc
adc
addb
imull
test
lods
test
test
scas
call
and
xchg
int
iret
xor
xchg
in
push
out
lret
ss
cmpsb
mov
pop
movsb
in
data16
pop
fsubs
dec
xchg
cld
sub
mov
sbb
add
dec
cmp
mov
push
xchg
cmpsb
sub
scas
add
dec
cmp
sub
lock
mov
aam
ja
add
daa
push
inc
cltd
loop
mov
or
jp
dec
ljmp
jno
hlt
mov
test
mov
shlb
scas
lods
cmpb
loopne
inc
mov
adc
or
add
in
add
addl
cmc
in
mov
je
ds
icebp
movsb
std
jbe
push
push
nop
fwait
mov
test
incl
les
xor
orl
std
pop
or
sbb
int
sub
sbb
cld
repz
sarl
inc
adc
mov
sbb
sti
pop
mov
push
pmaddwd
xchg
dec
test
mov
repz
leave
pminub
dec
xchg
scas
jg
fwait
adc
out
insb
jbe
aas
imul
push
add
in
xchg
jecxz
lcall
stc
sbb
adc
adc
cwtl
lods
cmp
or
enter
add
xchg
aad
pop
mov
outsb
inc
test
cmp
lock
mov
cmp
cmp
push
and
je
mov
fisubl
fcoms
pop
pusha
xor
cli
into
mov
pop
pop
xchg
mov
mov
mov
out
mov
or
mov
cmp
jnp
je
mov
add
in
jae
arpl
into
out
fcoms
cmp
sub
pop
jle
and
cmp
icebp
add
fimull
sbb
das
fdivrs
mov
clc
mov
mov
sub
push
jg
cmpsb
and
mov
jnp
adc
jns
pop
repz
je
push
mov
mov
rcrb
aas
push
sbb
scas
int3
dec
xchg
clc
shl
dec
jno
ret
inc
fisubrl
loope
mov
cltd
and
sub
ret
ss
pop
outsb
paddusb
test
out
or
ret
aad
push
xor
dec
or
pusha
orl
fld1
dec
scas
mov
mov
pop
dec
adc
xchg
xchg
lret
cvttps2pi
cld
je
test
dec
and
flds
in
xor
fcmove
jno
int
pop
pop
mov
cmc
sarb
inc
mov
mov
cmp
pop
pop
jp
fwait
xchg
in
jle
into
sarl
fdivrl
imulb
bound
mov
adc
add
test
lods
mov
jb
push
sahf
bswap
adcl
cmp
shlb
out
bnd
leave
lods
loope
mov
xlat
mov
jp
mov
flds
xchg
xor
pop
hlt
jle
into
adc
push
out
pushl
mov
cmp
xchg
adc
inc
lret
sahf
mov
shlb
sbb
adc
shll
dec
mov
iret
or
push
insb
icebp
pop
addr16
cmpsl
repnz
pop
inc
sahf
adc
js
dec
scas
aas
js
in
pop
clc
rcrl
imull
orl
xchg
shll
add
aam
cmp
test
push
es
mov
not
fucompp
and
out
hlt
or
xchg
mov
not
fsubs
and
data16
xlat
pop
fidivl
mov
pop
daa
fs
cmp
cwtl
mov
dec
shll
sub
lods
int3
jecxz
gs
sub
xlat
push
dec
sbb
scas
pop
repnz
ss
cmp
cmp
sbb
test
popl
adc
pop
and
xchg
rcrl
push
jecxz
dec
scas
fs
fwait
dec
jl
icebp
pop
inc
mov
pop
scas
andl
insb
test
jl
call
xchg
mov
add
out
insb
pop
push
push
ret
fdivr
fsub
lahf
xor
xchg
cmp
lahf
lods
add
sub
addl
adc
sbb
pop
divb
fildl
out
in
mov
mov
jbe
mov
fiadds
es
les
cmc
int3
js
aad
sub
nop
mov
or
int
push
fistpll
jbe
je
adc
pushf
rcll
add
mov
fdivl
push
sbb
xchg
and
ret
lods
xor
mov
add
out
inc
dec
shl
add
or
std
push
sub
adc
push
clc
xchg
adc
pop
jne
push
mov
imul
cmp
leave
sbb
cmp
gs
das
out
call
sarl
add
xor
mov
cwtl
pop
mov
cli
xor
pop
jecxz
mov
cwtl
mov
rcl
dec
movsl
dec
pop
nop
mov
mov
pop
inc
fwait
xor
mov
or
mov
pushl
pop
xchg
or
loopne
fcompl
clc
sbb
aas
cmpsl
push
mov
orl
sbb
xor
loope
cmc
mov
sbb
stos
cmc
mov
xlat
int
lcall
aas
dec
btc
xchg
popl
int3
dec
sbb
add
or
sub
cmc
or
sub
inc
pusha
mov
stos
pop
movsl
push
push
inc
in
adc
and
test
pop
push
orl
jmp
fistl
aad
jge
bound
mov
and
and
mov
int
xchg
lods
pop
aas
out
fwait
xor
movsl
mov
scas
push
mov
sub
mov
adc
gs
xchg
cmp
dec
push
incl
pop
cwtl
mov
mov
sbb
cmpsb
imul
or
iret
andl
fsubrl
imul
lcall
push
dec
stos
int3
push
insb
out
out
mov
xchg
icebp
sbb
inc
and
das
pop
out
out
mov
jb
rcr
loopne
fimull
and
adc
pop
aas
cmp
pusha
sbb
das
leave
adc
rolb
add
mov
aaa
jo
ret
mov
dec
jae
out
lods
out
mov
loope
inc
scas
mov
iret
xor
cmp
xlat
das
sarl
fwait
cmp
fwait
movsb
inc
loope
dec
jno
repnz
jmp
add
loope
je
lds
xor
fmuls
adc
jmp
inc
test
ljmp
out
adc
in
call
fld
in
clc
pop
jno
loop
fildl
add
mov
cmpsb
nop
cltd
mov
jmp
loopne
call
jne
mov
cmp
fcmovbe
aad
pop
aas
out
mov
jns
xor
bound
and
push
xchg
jp
cld
xchg
and
jbe
call
mov
dec
xchg
icebp
jmp
hlt
push
pop
mov
clc
dec
jmp
or
fcmove
imul
sub
sbbl
test
cmp
jle
loop
pop
cmpl
jno
pop
xlat
pop
dec
mov
js
test
cmc
cli
filds
push
push
mov
fldl
lcall
shlb
mov
movsl
inc
movsb
addr16
fstl
jo
xchg
cmp
ret
popf
bnd
jmp
lods
inc
test
mov
jae
mov
push
popa
fwait
lret
jno
and
pop
inc
jno
movb
shlb
or
pop
adc
and
mov
jg
faddl
ss
dec
fwait
js
in
mov
mov
mov
int3
aaa
mov
lods
xchg
and
nop
sbbl
ret
mov
push
stos
push
jbe
mov
push
xchg
dec
dec
call
pop
icebp
in
nop
inc
dec
add
pop
pop
nop
aam
loopne
xor
fcoms
out
imul
or
jno
dec
lcall
or
dec
mov
push
sub
fwait
out
xchg
mov
cwtl
daa
loopne
shll
jo
pop
mov
inc
shrb
clc
sbb
call
or
lods
and
mov
lcall
pop
sbb
or
aas
sub
sbb
xor
test
add
xor
add
sbb
sbb
les
and
test
call
mov
popa
in
pop
mov
push
pop
aas
xchg
jbe
sbb
inc
call
pop
in
in
lahf
mov
mov
shrb
daa
test
loop
cld
pop
or
out
aam
sbb
ja
xchg
ss
js
fldcw
in
mov
jle
mov
out
in
mov
lea
aas
and
xchg
add
fdivs
inc
cld
inc
add
les
aas
movsl
and
ss
loop
cwtl
push
mov
cld
pop
push
clc
or
cli
insl
loopne
sahf
jmp
xchg
lods
fistps
hlt
test
dec
sub
decl
out
das
jp
lods
pop
push
cltd
fs
jmp
push
clc
xchg
cmp
lret
js
or
int3
call
dec
fmuls
jae
std
lret
imul
or
lret
push
dec
loop
outsl
mov
xchg
test
dec
fildll
cmc
test
mov
sub
pop
and
sbb
xor
mov
gs
movsl
ds
add
and
outsl
xchg
pop
adc
les
cmpsb
ljmp
jge
nop
jne
adc
sub
xchg
lods
inc
push
cmp
cmpsb
pop
cmp
cli
sbb
pop
les
shll
outsl
and
test
in
sub
jo
xor
adc
adc
cmp
inc
or
inc
imul
pop
push
cmpsl
mulb
adc
daa
in
fsubr
ljmp
sbb
not
hlt
mov
push
sti
ljmp
xchg
pop
jge
out
aad
xchg
bnd
xchg
push
roll
fldenv
rcrb
xlat
mov
mov
xlat
dec
daa
cmpl
jo
gs
popf
lret
inc
adc
mov
ljmp
lds
fcmovnbe
call
mov
lock
pop
aam
lret
adc
and
in
jnp
lods
push
or
push
inc
adc
adc
xor
lea
xchg
lret
cwtl
jns
sub
xchg
mov
imul
mov
sti
or
jmp
hlt
outsl
dec
xor
movsl
sbb
mov
popf
mov
mov
cmp
pop
mov
push
pop
in
repnz
mov
fbld
shlb
les
jo
out
add
dec
push
pop
dec
xor
or
les
dec
mov
icebp
cmp
lea
cmp
xchg
sub
call
sub
adc
sbbb
fwait
ljmp
cmc
shr
mov
cmpsl
frstor
xchg
popf
mov
sbb
data16
aam
inc
push
rclb
pop
xchg
mov
push
mov
aam
fists
fidivrs
dec
stos
or
mov
jo
out
xor
add
pop
mov
cli
fcmovb
xchg
xchg
mov
outsl
insb
pop
or
or
or
nop
pop
shl
pop
push
call
jmp
cmp
add
cltd
pop
mov
lock
addr16
inc
xchg
add
iret
fdivrl
div
sbb
in
jo
xchg
lahf
sub
test
lods
pop
popf
mov
mov
daa
leave
xchg
cwtl
xor
xchg
pusha
shrb
fstpt
cmp
lods
dec
ss
lret
testl
mov
inc
test
push
mov
sbb
div
cmc
call
mov
scas
add
mov
pop
fs
imul
pop
dec
gs
gs
arpl
sub
mov
jp
lea
je
dec
mov
jl
cmp
dec
lcall
cmpb
movsb
dec
push
inc
mov
repnz
dec
xchg
imul
out
in
mov
mov
pop
fsub
mov
loope
repz
dec
in
xchg
cmp
sub
or
ja
mov
sub
sti
mov
pusha
and
pop
int3
sbb
lret
adc
xor
xlat
inc
inc
jae
push
ret
and
dec
aam
loope
stos
cwtl
add
jo
add
ret
lret
jno
xor
jge
popa
arpl
outsl
in
stos
fcoms
mov
cli
dec
mov
xchg
xchg
dec
addr16
pop
jo
loopne
aam
gs
mov
fidivrl
rcl
or
adc
lods
push
in
jecxz
lahf
xchg
mov
rclb
mov
popf
xchg
lahf
mov
aas
push
jb
sub
push
bound
nop
rol
inc
leave
push
or
insl
mov
fadds
repz
call
mov
dec
inc
or
call
sbb
in
aam
lods
adc
std
sbb
xor
jge
pop
mov
sub
jo
xchg
push
push
push
xchg
call
xor
dec
ljmp
mov
xchg
shlb
les
xchg
mov
add
xchg
inc
stos
loopne
lret
dec
sbb
movsl
cmp
jbe
mov
popa
lods
je
mov
or
test
repnz
lea
or
sbb
das
fcmovb
xchg
call
shll
fwait
test
dec
push
lods
cwtl
cmp
shlb
push
mov
mov
jno
je
add
sub
jo
sbb
mov
aas
xlat
pop
inc
sbb
das
sbb
iret
add
pop
mov
outsl
sbb
inc
scas
sbb
add
pop
fsub
mov
dec
jno
inc
xor
mov
fucomi
dec
sbb
repz
sub
cli
mov
ds
aad
jge
leave
scas
push
jbe
mov
shlb
leave
mov
sub
ret
xchg
stos
xchg
fcomi
jo
adc
rol
movzwl
or
in
mov
shrb
adc
int3
mov
xchg
scas
sub
lock
clc
fdivr
cli
lret
inc
mov
mov
std
paddb
mov
jbe
clc
push
rolb
push
dec
push
mov
cmp
fiaddl
lds
cwtl
pop
xlat
je
hlt
inc
adc
mov
jnp
jo
lds
mov
xor
pushl
aad
jmp
sahf
sbb
adc
mov
dec
inc
push
pop
add
lret
jl
int3
dec
mov
idivl
push
mov
aas
push
insb
dec
loopne
test
jge
mov
cmp
aam
pop
jno
sahf
sub
xor
fldl2t
and
mov
movsl
into
cmp
inc
movsb
cmpsl
ret
mov
cmp
loopne
xlat
mov
pop
cltd
iret
jno
adc
or
outsl
jbe
push
or
stos
sub
mov
lahf
mov
sbb
sbb
bound
sbb
mov
lret
jl
rcrb
sbb
pop
rcrb
lret
aaa
jnp
cmp
mov
es
stos
xchg
lods
dec
imul
rcrw
or
mov
fwait
adc
xor
xacquire
pop
test
mov
inc
pop
add
aad
int3
jmp
sbb
bound
ljmp
mov
adc
andl
pop
scas
gs
xor
mov
push
ljmp
out
imul
dec
stos
or
adc
sub
fmull
je
jns
das
fstpt
out
and
fmull
jp
jl
xchg
stos
sti
pop
cmp
mov
daa
adc
mov
xchg
xor
aas
fdivs
hlt
int
sbbb
in
inc
outsl
xor
dec
lea
into
movl
cmp
nop
mov
mov
cmpsl
pusha
or
inc
mov
cmp
xlat
inc
jno
popw
xchg
addl
and
repz
pop
mov
mov
and
pop
dec
cmp
jp
mov
jl
outsb
sbb
xor
jecxz
inc
dec
or
sbb
push
mov
and
pop
pop
pop
mov
scas
xor
pop
mov
ds
jp
cld
rcrb
popf
dec
lock
jl
sub
fcomp
mov
lahf
dec
fsts
mov
jo
ret
cltd
dec
iret
in
cmp
lret
das
mov
sub
cs
fisubl
lahf
mov
pop
or
and
xchg
repnz
jmp
mov
test
cmp
sbb
adc
sarl
add
and
push
mov
je
orl
add
dec
imul
jo
je
xor
xlat
mov
xor
js
gs
test
xor
arpl
out
aam
inc
int3
inc
pop
cld
add
cmp
cmp
ja
push
dec
jne
mov
subl
imul
xchg
push
out
loopne
inc
mov
fcoml
or
cmp
inc
mov
vprotq
push
xor
hlt
jl
rolb
imul
cs
mov
decl
push
ret
dec
lret
das
nop
fldcw
xchg
out
rol
ret
and
ja
xchg
insb
cmp
int3
out
leave
mov
in
and
lret
repnz
pop
inc
cmpsl
and
faddl
sub
push
or
fcomps
add
aam
pusha
movsl
repnz
inc
out
leave
sbb
pop
mov
xor
jle
sarb
dec
pop
aad
cmp
in
xchg
in
aas
scas
jno
out
icebp
inc
insb
jne
xchg
inc
mov
lcall
dec
sar
aaa
dec
push
incb
cltd
mov
add
dec
dec
movsl
add
int
add
mov
cld
xor
adc
adc
inc
lret
jno
daa
adc
leave
pop
ret
aam
aaa
mov
mov
mov
push
pop
mov
bound
cmp
je
ljmp
sbbl
pop
inc
push
lahf
popf
push
mov
pop
xor
mov
test
pusha
aam
mov
push
mov
inc
test
cli
sbb
cmpsl
int3
movsl
cmpsl
push
insb
mov
insb
bound
fistl
jmp
test
gs
les
sti
inc
popf
call
inc
in
inc
and
mov
pop
leave
push
shlb
sti
les
xchg
data16
and
sbb
sbb
cmpsl
xor
jo
and
pop
adc
aaa
rorl
js
mov
loop
jp
lock
aam
enter
sbb
push
dec
mov
sbb
int
jmp
out
in
repz
jl
push
fucomp
out
jle
add
xchg
push
mov
repz
mov
cmp
lea
mov
leave
mov
aas
rol
push
cmpsl
cmp
cmp
aad
xor
mov
testb
icebp
xorl
push
lcall
movsl
shlb
ficompl
js
jae
jns
mov
adc
cmp
mov
mov
pop
dec
inc
roll
imul
lret
fistl
in
cli
cmp
push
push
aas
mov
cmp
aaa
sbb
sbb
cmp
inc
ljmp
iret
in
sub
fdivr
sbb
js
or
xchg
push
icebp
ffree
mov
sub
clc
int
add
fisubl
sbb
add
mov
iret
cltd
xorl
in
lcall
les
ss
pusha
lock
pop
popa
inc
cmc
andb
stos
pop
negl
rcrl
int
popa
sbb
sbb
and
into
ret
je
xor
repnz
sbb
jmp
test
fcoml
shr
jae
pop
mov
ret
ja
xchg
sahf
in
iret
repnz
lods
xor
add
ss
in
pusha
leave
xor
in
aam
jo
push
sbb
inc
pop
or
cmp
xor
shrl
popf
add
mov
mov
xlat
sbb
shll
movsl
cmp
rcl
adc
xchg
test
mov
ds
jno
aas
test
sub
push
cmp
mov
xchg
icebp
sbb
mov
loope
ljmp
mov
dec
inc
sbb
and
sub
icebp
aas
or
pop
or
lcall
aad
xrelease
cmpsl
fwait
xchg
aas
mov
test
out
pop
lahf
ret
mov
mov
cmpsb
xchg
loopne
adc
push
cmc
fs
mov
lret
xchg
xor
lahf
xor
mov
lock
cwtl
xor
mov
in
mov
ret
jl
clc
stc
iret
call
jle
icebp
movsl
sbb
mov
ss
add
xacquire
fldl
cmp
cld
pop
sar
mov
imul
and
push
inc
clc
jecxz
cmpsl
pxor
loope
cmpsb
loope
jl
sbb
mov
xchg
out
loope
imul
xchg
xchg
mov
nop
inc
xchg
test
stos
dec
nop
mov
out
push
xchg
xor
cmc
es
cmp
xor
les
nop
stos
xchg
notl
sbb
popf
out
xor
and
int3
mov
xor
cmpsl
sub
dec
ret
lds
out
int
gs
mov
test
aaa
add
or
and
jno
dec
mov
popf
mov
xor
adc
cmc
push
aad
iret
push
cld
hlt
mov
mov
push
clc
pop
movsb
fdivs
inc
das
inc
jmp
iret
dec
cmp
out
cmpsl
into
lock
mov
ret
xchg
rol
icebp
pop
loopne
aas
in
jmp
les
ret
jmp
into
gs
pop
and
out
xor
pop
pushf
xor
mov
in
mov
and
push
mov
sbb
pop
imul
cs
fists
xchg
dec
jo
mov
icebp
inc
mov
mov
and
ljmp
cmp
xchg
push
hlt
sbb
mov
push
jmp
xor
push
ret
and
xchg
jecxz
lcall
inc
xchg
in
sbb
loop
sahf
push
push
lret
pop
jbe
arpl
jns
mov
fmull
shrl
adc
into
lds
fildll
lahf
mov
add
outsb
ljmp
adc
gs
jno
add
inc
lock
dec
pusha
inc
dec
imul
imul
or
fimull
mov
push
ret
pop
push
pop
mov
fidivrl
test
mov
inc
push
or
pop
in
mov
cmpsl
es
clc
je
cmc
mull
out
mov
iret
xchg
fwait
mov
jns
icebp
lret
jg
pop
jo
adc
movsb
sbb
or
xchg
pushf
ljmp
inc
andl
out
mov
ja
pop
lcall
cvtps2pd
test
cmp
mov
push
or
bnd
sti
mov
lahf
jg
daa
dec
test
outsb
xchg
dec
sbb
repnz
outsl
ljmp
xor
adc
nop
aam
and
fs
and
dec
gs
es
leave
fildll
outsl
fsubr
mov
stos
xor
mov
in
mov
mov
pop
jne
test
dec
mov
sbb
pop
movsl
mov
mov
sbb
ficoml
mov
or
loope
push
decb
xor
jl
mov
add
dec
adc
iret
loop
pop
cmp
push
mov
scas
push
xchg
adc
xchg
cmpsb
fcmovu
data16
cmpsl
hlt
loopne
mov
jae
jno
xchg
ret
loop
leave
adc
sahf
out
sbb
clc
cwtl
fadd
and
mov
mov
insl
add
addr16
dec
sbb
mov
imul
pop
mov
lret
lahf
and
in
xlat
je
mov
pop
ljmp
adc
pop
push
lret
fsubs
call
insb
sub
clc
mov
addr16
ja
les
jno
push
mov
idiv
call
clc
test
cmpsl
add
sub
sub
ret
loop
std
jo
jmp
inc
imul
fsubs
outsb
xchg
fisubl
ficoms
cmp
addr16
gs
in
fisttps
adc
inc
rolb
sbb
gs
out
xchg
fwait
aad
lahf
iret
mov
sbb
sbb
xchg
ja
scas
jle
es
mov
sbb
test
fldenv
cmp
aas
push
dec
dec
jl
pop
not
ljmp
cld
addr16
xor
and
and
ljmp
fs
popf
add
sub
mov
cwtl
and
xchg
clc
add
dec
or
jno
aaa
outsl
data16
mov
push
push
loop
roll
inc
in
add
ucomiss
mov
pop
jge
das
lret
pop
jg
das
out
xchg
daa
sbb
imul
jne
adc
out
xchg
mov
cwtl
repnz
pop
xchg
cmp
scas
insl
inc
lods
outsl
mov
push
jecxz
sbb
and
loope
je
lcall
xlat
call
cmp
shrb
out
iret
sub
and
cmpb
cs
dec
cmp
int3
fisubs
iret
xchg
fstps
aad
add
enter
cld
addb
out
fiadds
or
std
mov
cmp
pop
inc
push
mov
adc
shr
sar
mov
and
mov
xchg
cmp
adc
movsb
add
or
push
add
lret
hlt
pop
dec
or
push
hlt
mov
mov
out
cld
dec
sub
push
push
xor
inc
pop
dec
int
ficoml
cmp
sub
pushf
in
xchg
lcall
iret
add
ret
aaa
out
fnsave
outsl
test
loopne
pusha
mov
jl
push
xchg
mov
mov
out
inc
mov
lea
insb
les
mov
push
jae
mov
in
and
outsl
or
sbb
jno
pop
mov
push
jge
outsb
shrb
repnz
jl
inc
and
lcall
fistpl
jnp
push
fucomp
xlat
push
addr16
call
xchg
or
shll
loopne
mov
and
pop
clc
int3
repnz
out
jo
idivl
fisubrl
jns
lds
push
mov
push
daa
mov
xchg
imul
mov
and
push
out
xchg
sub
in
add
bound
cmp
lds
pop
fisttpl
sbb
mov
fcoms
insb
fidivrl
mov
clc
mov
mulb
movsb
dec
jle
push
mov
push
fs
rorl
insb
imul
loop
sarb
divl
sbb
lret
dec
and
dec
mov
flds
mov
mov
inc
add
lcall
addr16
lahf
movb
gs
jmp
or
add
mov
mov
or
inc
movsb
xchg
sbb
int3
imul
and
push
add
xor
inc
scas
mov
leave
or
ficomps
pcmpgtb
aam
cli
mov
fdiv
rcll
nop
sbb
adc
nop
es
mov
stos
testb
test
sub
jge
shl
aam
fs
fwait
pop
sbb
aam
or
dec
arpl
dec
fs
imul
test
scas
sub
movsl
mov
lahf
ret
pushf
mov
push
outsb
movsb
jge
fsubr
mov
sub
mov
mov
lahf
dec
jmp
or
ja
arpl
adc
xchg
xchg
out
jno
repz
add
neg
push
rclb
xchg
pusha
push
test
jl
sub
insb
aaa
fs
sbb
bnd
insb
add
jb
scas
gs
jae
roll
imul
mov
mov
icebp
loopne
pop
lcall
loop
sti
cli
movsb
push
sahf
mov
xchg
sbb
js
xchg
sahf
xchg
cwtl
adc
push
add
jbe
fcompl
add
jmp
sub
in
add
cli
ficompl
xrelease
xchg
leave
xacquire
mov
rorb
loop
cmpsl
arpl
cli
jmp
pusha
mov
mov
gs
fcmove
mov
xchg
lods
int
pop
mov
mov
cld
add
pop
mov
jo
mov
mov
mov
sub
loopne
add
xchg
xchg
mov
add
cmpsl
mov
lods
lods
mov
push
dec
in
or
iret
fiadds
push
mov
sar
aad
mov
test
jge
push
mov
cmc
repnz
mov
dec
movsb
sbb
aas
push
pop
push
xor
dec
les
xchg
inc
jns
stos
push
push
dec
mov
sti
push
cwtl
mov
in
shlb
lret
add
loope
dec
lods
out
fistl
sbb
fisubs
push
mov
out
xchg
push
nop
mov
add
jg
lret
fadds
imul
xor
xchg
jno
lock
or
fdivr
sub
ss
clc
pop
clc
cwtl
imul
cltd
out
push
add
jg
fs
mov
mov
fdivrs
xchg
adc
mov
aad
and
repnz
scas
sti
je
xor
dec
imul
fldcw
in
mov
clc
out
nop
hlt
xchg
push
mov
iret
inc
mov
mov
int3
rorl
xor
push
mov
jne
sbb
aam
lock
dec
fsubrs
in
sahf
cwtl
cmc
cmp
ret
xlat
inc
arpl
sbb
dec
les
or
dec
dec
addr16
out
lcall
fs
fs
test
inc
les
xchg
scas
or
pop
imul
sub
and
mov
fcoms
stos
add
mov
sub
cmp
pop
pusha
mov
sti
jl
leave
aaa
mov
or
sub
xchg
aaa
pop
sbb
out
repnz
fidivs
push
mov
inc
fwait
dec
dec
pop
and
mov
jae
mov
mov
cmp
add
jmp
pop
popa
pop
mov
inc
pop
sbb
adc
jb
clc
pop
sarb
dec
loopne
xor
out
mov
mov
xlat
xchg
pop
call
add
cs
lret
mov
sbb
xor
or
mov
xchg
push
mov
xchg
repnz
mov
test
ljmp
add
call
mov
decb
xchg
jl
hlt
sbb
xchg
outsl
call
lret
jb
push
outsb
cli
int
fistpll
mov
sbb
adc
sbb
adc
adc
jle
pop
sti
push
repnz
clc
cmc
das
push
nop
es
test
mov
and
pop
gs
dec
and
outsl
or
inc
push
jnp
mov
movsl
ficoms
jge
inc
js
in
scas
dec
xlat
cmp
lret
pop
cmp
stc
rcrl
xor
cmp
inc
mov
iret
and
mov
sub
mov
push
sub
pop
xor
cmp
jge
add
movd
adc
aaa
movsb
int3
jo
popa
rolb
aam
iret
jno
mov
dec
ljmp
repnz
inc
lods
ja
ret
fcmovnbe
push
loopne
cmc
mov
lods
push
movsb
dec
adc
dec
xlat
jno
xchg
call
cmpsb
pop
sbbb
mov
int
sub
ret
cmp
xchg
ja
sbb
fcom
jmp
jle
test
test
rclb
mov
movsb
lahf
mov
sbb
adc
push
adc
daa
in
adc
inc
rorb
sub
daa
or
sub
add
push
shlb
xor
mov
and
mov
xchg
adc
jge
add
jns
push
jecxz
mov
sub
add
xchg
cmp
jnp
mov
pop
xchg
dec
sub
cltd
mov
in
jb
jmp
push
cmp
jo
mov
push
lods
mov
push
adc
in
jl
fistps
shrb
clc
fwait
jne
add
xchg
jp
ds
push
inc
add
cmpsl
shr
xchg
leave
add
and
xor
ret
pop
fdivs
les
aaa
ljmp
sub
cli
push
pop
out
sbb
push
add
mov
xchg
inc
xlat
shlb
push
inc
movsb
xor
inc
xchg
int
push
cli
fcomp
jmp
mov
repnz
mov
into
add
iret
jne
jb
cmp
push
mov
pop
bswap
sbb
jae
xchg
shll
in
bound
push
mov
in
fwait
jno
adc
pop
adc
push
dec
pop
fs
js
pusha
lret
sub
pop
mov
fimuls
hlt
xor
mov
out
ljmp
or
lods
test
push
adc
lcall
adc
and
dec
xchg
js
out
mov
test
out
dec
or
out
add
sub
cmp
add
adcl
dec
mov
push
fadds
cmp
daa
and
mov
movsl
cmp
add
xchg
outsb
xor
out
in
jb
fstl
fidivrl
std
jle
xchg
out
xor
fimuls
mov
xor
fsubl
repnz
cmp
in
pop
out
jns
loopne
xchg
out
iret
rorb
cmc
insb
pop
cli
mov
xor
xor
mov
mov
jg
dec
adc
dec
mov
push
fisttpl
fs
xlat
or
lea
mov
ficompl
mov
add
pop
mul
mov
push
adc
outsb
idiv
jae
fs
sub
push
aaa
lea
stos
sbb
dec
and
add
adc
call
enter
leave
jge
jge
int3
sub
ja
sbb
sarb
add
or
ljmp
nop
cmpsb
call
mov
call
mov
aaa
iret
mov
mov
jnp
xor
cmpsb
aaa
xor
cmc
mov
mov
nop
pop
leavew
and
mov
aaa
sub
jno
xchg
xor
inc
xchg
mov
loop
push
test
stc
mov
inc
rcl
or
xchg
pop
xor
mov
insb
nop
aas
add
jle
fdiv
leave
jno
xor
fistps
mov
mov
inc
mov
jo
add
mov
dec
adc
mov
es
jle
gs
popa
sbb
les
mov
sbb
daa
pop
cmp
ja
jb
jb
out
movsl
xchg
xor
pop
aaa
cmpsl
cli
stos
int3
pop
call
std
dec
lret
scas
and
xchg
mov
jle
xlat
call
out
sbb
cltd
cmp
int3
adc
inc
pop
ret
pushf
xchg
inc
data16
xor
cmp
adc
push
cwtl
scas
and
jae,pn
dec
in
xchg
pop
jmp
lcall
mov
aaa
jg
ret
iret
inc
or
shrb
in
aas
mov
add
ror
sub
jmp
insl
aad
ret
repnz
ror
xor
cmpsb
iret
nop
cwtl
xor
xchg
aaa
adc
cmp
or
int3
out
xor
in
ret
ljmp
in
dec
in
add
jl
in
aas
add
out
push
lahf
push
scas
sub
jbe
xchg
gs
sub
fistl
xor
push
add
sub
addr16
push
and
in
mov
xchg
dec
sbb
repz
or
mov
aaa
xchg
movsb
gs
cmpb
jo
imul
cmp
movsb
or
xor
frstor
mov
xor
adc
and
rep
repz
js
pop
push
pop
idivl
mov
sub
cmpl
cmp
xor
insb
mov
insl
cmp
or
jle
mov
popf
sub
xchg
dec
adc
dec
add
mov
mov
sbb
mov
les
xchg
into
loopne
gs
scas
shr
mov
rcrb
pop
adc
and
pop
and
xchg
shlb
add
imul
test
sbb
repz
xlat
mov
outsl
test
push
sbb
addb
dec
sarb
test
test
xor
insb
xor
mov
fidivrl
push
mov
insb
and
gs
xchg
lods
add
xchg
mov
mov
cmp
aas
jp
add
sub
mov
pop
mov
stos
stos
pop
sbb
adc
fdivrs
jle
aaa
xchg
call
scas
test
dec
fmuls
sub
cbtw
aas
pusha
lret
sub
or
mov
popf
adcb
test
das
mov
sub
aam
cmp
mov
lcall
gs
mov
sbb
test
and
pop
test
dec
out
aad
jns
fnsave
movsb
in
sti
push
xlat
out
fs
xor
mov
outsb
sbb
add
test
cmp
in
aam
jno
loope
xlat
movsl
add
jbe
ljmp
pop
jbe
imul
inc
xor
cmove
inc
mov
dec
add
sub
inc
xor
add
jno
xor
sub
imul
cli
sti
adc
fdivrs
inc
mov
fsubrl
rorb
xchg
sahf
xor
mov
hlt
ret
movl
add
loopne
xchg
xor
divb
mov
adc
xor
sahf
pop
popf
incl
filds
xchg
test
dec
decl
idivb
cmp
mov
test
dec
adc
gs
mov
cs
ror
lret
ds
sarl
sub
aas
pop
imul
sub
cmpsb
stc
and
cwtl
loopne
adc
xor
mov
inc
cmp
movsl
xchg
fwait
pop
push
aam
lock
fsub
sub
mov
fimuls
sub
cwtl
jecxz
int
out
sub
repz
repnz
xchg
repz
sub
cwtl
out
jb
out
pop
pop
xchg
cld
sahf
sahf
push
adc
shll
test
iret
lcall
push
scas
dec
mov
mov
inc
and
gs
push
pop
inc
clc
clc
ljmp
call
xor
pop
jne
je
test
lahf
cwtl
xlat
shr
hlt
or
and
or
jne
push
sbb
cmpsl
loope
mov
stos
pop
mov
shll
mov
sbb
mov
mov
dec
cmpsl
loop
ror
xchg
rcrb
mov
adcl
sub
int
xchg
fildl
call
shrb
mov
cwtl
fs
xchg
jne
ret
movsb
data16
mov
stos
lock
add
sub
inc
xchg
or
mov
xchg
inc
mov
out
int3
loope
sub
xor
ljmp
cmp
mov
out
mov
in
lret
call
sbbb
out
cltd
mov
xor
int
jne
dec
adc
lock
sbb
jb
pushf
pop
lahf
mov
dec
adc
mov
data16
daa
rclb
orl
popa
add
sbb
stc
das
scas
sub
jl
sbb
call
push
js
lea
popf
addb
stos
fmull
fwait
iret
daa
fcoms
outsb
dec
mov
mov
cmp
xchg
dec
push
test
test
jno
xchg
insl
sub
adc
push
sub
pop
cld
out
decl
sub
sbb
pop
or
or
xor
lods
clc
dec
sbb
xlat
pop
movb
int3
jns
addr16
cmpsl
out
xor
xor
jecxz
adc
call
shll
insb
and
mov
sbb
jecxz
add
sahf
int
dec
sbb
es
lret
add
xchg
lods
clc
lods
dec
iret
daa
call
sbb
push
aad
sub
push
add
aas
jns
push
clc
ficomps
out
dec
xchg
push
xchg
nop
cmp
jmp
movsl
repnz
and
mov
mov
xchg
mov
add
push
ret
inc
sti
mov
inc
loop
movsl
ja
in
loopne
mov
out
fs
cmp
int
test
jno
mov
sub
cmp
pop
and
sub
mov
and
mov
call
std
cmp
cwtl
or
pushf
jecxz
das
lea
cmp
sub
xlat
nop
inc
nop
hlt
mov
cltd
xchg
add
inc
mov
cmp
pusha
add
rolb
fdivl
adc
pusha
in
sti
ret
mov
add
push
inc
sarb
push
bound
xchg
sbb
sbb
pop
add
xchg
adc
and
je
pusha
dec
shlb
dec
push
inc
xor
xor
emms
jle
enter
pop
mov
sub
adc
lea
mov
aam
notl
xchg
lods
clc
rcrl
movsl
dec
mov
stc
cmp
les
ja
ds
xor
aas
xor
xlat
test
mov
xchg
lcall
in
mov
sbb
loopne
cmpxchg
dec
lret
xor
aaa
fnsave
ja
cli
mov
in
mov
push
cmp
dec
cmp
insb
mov
jl
mov
fidivrl
sti
call
aas
das
nop
orl
ss
scas
pop
nop
aam
xor
pushf
xor
dec
adc
jl
xchg
dec
dec
fildll
iret
mov
in
es
xor
xchg
out
sar
mov
xchg
sub
leave
fistl
es
repz
push
jmp
cs
lahf
dec
dec
std
test
xchg
repz
push
mov
out
stc
jle
bound
jbe
fs
ljmp
add
fsubrs
pop
xor
inc
outsl
fs
cwtl
xchg
and
out
int
ret
sub
subb
pop
mov
lods
aaa
sbb
mov
xchg
jnp
lret
add
push
or
adc
add
inc
sub
jnp
or
out
insl
fs
xchg
insb
pop
and
hlt
and
jmp
jp
sahf
xlat
cld
pop
cmpsb
insl
cmp
cmp
rep
stc
paddb
sub
or
gs
xchg
xchg
push
dec
xchg
sbb
and
shll
aas
pop
mov
push
mov
lcall
mov
std
fwait
aad
out
dec
cmp
fidivs
sub
flds
xor
cmp
pop
lcall
cli
mov
dec
call
dec
sub
pop
addr16
in
pop
out
push
rcll
aam
stos
push
iret
rcrb
and
das
dec
dec
lcallw
dec
jo
cmp
mov
mov
test
xor
fucomip
jge
rcrl
shlb
sbb
clc
into
clc
add
repz
idivb
jl
insb
mov
aad
mov
imul
in
out
and
sub
jo
cwtl
int3
inc
insb
sbb
icebp
cmp
jo
lock
push
adc
push
ror
add
push
fisubs
lahf
cmpsl
push
xlat
shl
out
lret
call
lods
in
test
aam
test
call
mov
pop
es
scas
les
mov
rcr
jl
sahf
mov
ljmp
fsubrl
cmp
pop
call
jecxz
cli
mov
xchg
sub
sbb
push
std
and
ds
sbb
dec
out
je
or
inc
scas
and
adc
ja
shrb
pop
gs
adc
lods
add
mov
pop
int3
aam
insb
fcomp
mov
ss
jo
sarl
fwait
inc
sub
add
outsb
lock
push
sbb
cmpl
sub
aas
jmp
push
jnp
add
lods
inc
pop
sbb
ret
jae
pop
inc
push
adc
jmp
add
hlt
xor
and
fidivrs
sbb
mov
ss
jno
js
popf
loop
push
and
xchg
insl
xacquire
mov
outsl
outsl
xchg
and
inc
xor
adcb
mulb
negl
mov
dec
sub
stc
inc
xor
lahf
mov
xchg
inc
bound
sbb
cltd
iret
stos
je
imul
or
add
call
aam
shlb
sbb
pop
cmp
fmull
xor
and
insl
in
xor
inc
scas
xor
cmpsl
jo
xchg
ljmp
mov
xchg
fwait
add
test
and
or
insb
mov
push
outsb
out
movsl
rep
shlb
cmpsl
scas
out
imul
insb
jno
add
int
pop
inc
in
int3
sti
adc
inc
int
scas
fstps
pop
jmp
iret
cmp
scas
jmp
sbb
in
loope
pop
loopne
rcll
dec
or
cwtl
pop
in
mov
jle
daa
outsl
test
out
mov
in
mov
sbb
shll
ss
ljmp
int3
cwtl
push
iret
cmp
outsl
sub
fistpll
fucompp
pop
push
xchg
fsubrs
aam
cmc
cmp
out
test
xchg
mov
lods
lahf
adc
imul
cmp
push
cltd
jnp
sub
nop
sbb
aaa
pushf
je
cli
sbb
and
sub
sti
call
mov
mov
dec
ficoml
inc
icebp
clc
aad
and
cmpsb
loopne
std
and
mov
loop
jae
push
xor
cwtl
addr16
fs
cmp
ds
fs
inc
ja
ss
cld
xchg
in
sub
push
mov
popf
rep
mov
inc
es
xor
mov
lea
fbstp
pop
shl
push
sub
les
or
jmp
loopne
xchg
hlt
jl
rolb
addl
jns
leave
or
outsb
adc
push
icebp
aad
icebp
aam
mov
jno
roll
push
mov
ror
aam
ljmp
mov
xchg
mov
adc
sbb
cmp
fcomi
mov
mov
mov
mov
in
pop
inc
jle
outsb
aad
xor
push
lahf
and
cmp
cmp
adc
packuswb
and
sbb
mov
in
xchg
js
inc
xchg
push
xchg
lret
add
xchg
divb
cwtl
xchg
rcr
ds
ret
into
inc
int3
xchg
xchg
sub
sbb
jl
push
pop
out
inc
jne
fnsave
jae
nop
inc
mov
pop
shlb
repz
out
inc
pop
leave
push
and
insl
aad
pop
push
push
shll
xor
jmp
cs
sti
lods
sti
cmp
mull
push
sbb
repz
cltd
sub
outsl
bound
mov
cmp
addl
stos
pop
orb
pop
fidivs
xor
mov
fmul
jl
cmp
xchg
outsl
sarb
aad
mov
mov
add
das
jae
lcall
out
addl
out
xchg
fidivl
lahf
jne
ljmp
push
jle
xchg
mov
mov
ret
dec
mov
xchg
sub
sbb
fwait
call
fisubrs
sbb
inc
outsb
and
xlat
sbb
cltd
ffree
ja
loopne
nop
or
lods
insl
shrl
mov
mov
fsin
sbb
loopne
or
mov
adc
out
or
xchg
leave
jno
mov
dec
call
xchg
cwtl
loopne
pop
fstl
lock
cmpsl
ljmp
cwtl
pop
sbb
mov
inc
shlb
out
js
test
and
xor
lock
lret
clc
fadds
loope
fs
loopne
fdivr
sbb
out
xchg
insl
das
push
push
aas
inc
pop
repnz
sahf
cwtl
lret
nop
xor
sub
fistpl
push
test
insl
push
out
add
fildll
and
add
enter
jno
or
sbb
jmp
xor
testl
mov
push
scas
xchg
adc
xorb
mov
adc
adc
xchg
fisttps
jb
pop
or
mov
push
pop
pop
insb
jmp
push
sahf
mov
imul
add
pushf
adc
addr16
aam
lock
out
ja
ja
adc
dec
cmp
js
push
test
mov
call
nop
jne
cwtl
int
imul
or
cmp
stc
jo
cmpsb
lahf
jl
mov
cmp
push
loope
mov
jg
insl
subl
fcomps
fwait
ja
rcll
addr16
stos
push
push
adc
movsl
xor
pop
inc
add
pushf
cmp
pop
in
stc
out
dec
lcall
dec
aaa
pop
add
sub
les
sbb
bound
test
pop
out
jno
hlt
sub
jmp
lahf
pop
addr16
sbb
out
mov
clc
in
sub
ret
lea
lock
hlt
iret
test
dec
xor
and
das
xlat
jb
fcoml
jo
aam
cld
add
pop
in
rorl
cwtl
dec
loopne
ljmp
or
sbb
insb
arpl
fisttpl
cmp
push
insb
into
xchg
test
xchg
mov
sub
not
add
push
push
int
mov
sbb
loopne
insb
iret
pop
pusha
jl
cmpsl
and
push
inc
jmp
sub
call
jl
cli
aam
xor
test
notw
mov
xchg
inc
movsl
or
stos
sub
rcr
push
cmp
ds
push
lahf
pop
out
mov
aam
xchg
call
test
mov
sub
test
add
pop
loope
mov
loopne
outsb
rorb
iret
scas
add
push
sbb
ljmp
repz
mov
in
jno
out
xor
popl
lock
test
data16
mov
imul
call
dec
lcall
hlt
ficompl
sahf
or
fsubs
sub
imul
lcall
and
clc
scas
mov
mov
mov
cld
aad
test
pop
push
dec
popf
mov
lods
addr16
repz
sbbb
mov
movsl
cwtl
mov
movsb
dec
data16
mov
sub
add
push
dec
ret
xchg
or
sub
xchg
ds
fisubrs
loope
dec
mov
arpl
pop
push
sbb
xchg
push
and
aam
hlt
pushf
outsl
cwtl
mov
loop
dec
fildl
sbb
fmuls
jl
add
mov
sti
cmp
xchg
mov
fs
cli
test
cwtl
mov
add
inc
or
nop
loope
stc
pop
dec
sbb
cmp
or
lahf
mov
mov
test
jbe
test
es
mov
inc
scas
mov
hlt
scas
shl
loopne
cs
sbb
int3
sar
nop
or
adc
aam
dec
xor
pop
jg
inc
mov
pop
arpl
cld
fadds
outsl
fsubl
repz
cmp
xor
aam
mov
lock
mov
loop
mull
cmp
pop
fs
test
xor
jnp
adc
adc
cmp
scas
or
enter
sub
into
jmp
pushf
shr
fldcw
pop
nop
mov
je
test
bound
push
out
call
xchg
adc
mov
push
adc
dec
push
mov
cwtl
imul
outsb
or
rorb
dec
mov
or
stc
ret
movsb
sti
xchg
xor
arpl
sbb
dec
and
inc
cmpsl
fimull
adc
in
leave
pop
push
ret
cmp
testb
cmp
pushf
jno
in
insb
or
dec
inc
mov
inc
call
gs
dec
adc
dec
pop
adc
cli
pop
ja
adc
es
cmp
sar
xor
push
imul
ljmp
sarl
call
push
and
xchg
add
scas
jle
js
scas
lahf
inc
xor
sbb
push
sbb
xor
cmp
pop
cmp
or
clc
jb
shr
lds
mov
jle
or
cltd
push
sub
adc
mov
or
scas
xor
xorl
add
movsb
mov
test
adc
cmp
xchg
dec
inc
shrl
clc
repnz
cmp
pop
lahf
pushl
gs
pushw
sub
loopne
xchg
and
jmp
pop
ret
lcall
cmpsl
int3
leave
mov
jo
jmp
fsubl
jno
dec
fdivrl
jp
jae
rorl
cs
or
jo
shl
cwtl
pop
sub
and
inc
fisubl
shr
movsb
test
dec
xor
mov
int3
xchg
test
pop
inc
sarl
stos
roll
loopne
adc
push
pop
mov
xchg
fcmovnb
out
shr
inc
imull
sti
and
push
or
aaa
jmp
lock
jl
mov
sub
mov
mov
inc
mov
es
test
pushaw
mov
rorb
fiaddl
inc
mov
cmp
aas
mov
or
and
imul
jo
push
sub
pushl
and
jl
aad
xchg
testl
es
sbb
sbbb
pop
js
mov
or
sbb
cs
mov
sub
int
scas
pop
cltd
sub
sahf
sarb
jbe
fldenv
mov
fs
jge
fs
mov
adc
cltd
sbb
adc
jp
pop
lret
inc
sub
mov
gs
sub
jmp
or
adc
cwtl
mov
les
call
cmp
mov
pop
mov
mov
cmp
mov
mov
jbe
sub
cwtl
lahf
fistpl
loope
pop
fidivs
les
push
imul
xchg
mov
push
test
dec
xchg
push
sahf
in
mov
jo
and
mov
cli
fwait
pusha
repnz
popa
pop
or
mov
jae
add
or
out
in
mov
imul
les
fcmovu
rorb
and
and
movsl
pusha
fmuls
dec
incl
inc
gs
mov
pop
adc
mov
aaa
mov
sub
arpl
ror
mov
push
rcl
xchg
cwtl
shrl
lods
pop
jnp
cmpl
jne
fbstp
popl
ljmp
cmp
xor
sarl
cli
jecxz
cmp
cli
aas
add
scas
incl
test
pusha
lahf
movsl
cmpsb
sub
adc
test
es
and
xchg
testl
add
xchg
aas
mov
insl
jmp
inc
jno
xchg
mov
xchg
stos
sbb
sbb
lret
lret
ret
cmpsl
push
pop
pushl
xrelease
inc
nop
rorl
scas
mov
in
sub
and
pop
call
mov
mov
jno
fwait
push
test
lock
or
in
push
xor
jb
lds
mov
mov
cld
test
je
shll
jno
faddl
pop
ljmp
ret
xor
adc
adc
ds
ss
push
arpl
jno
cmpsb
outsl
loopne
pop
repz
movsb
adc
arpl
lock
cmp
dec
sbb
outsl
cmp
jns
pusha
sarl
adc
mov
pushf
push
outsl
test
call
cmp
rcr
inc
jae
in
push
aaa
and
adc
xor
mov
loopne
rcrb
cmpsl
shlb
cmpsl
inc
les
vmaxss
rorl
insl
jno
std
sub
insb
cmp
frstor
movsl
xor
ret
loop
jno
mov
mov
cwtl
xchg
daa
jmp
dec
xor
inc
aas
lea
sbb
jl
cld
cmp
cli
sub
and
insb
mul
sub
xchg
push
rol
out
rcr
imul
or
std
not
aas
sub
mov
lea
lahf
pop
mov
loopne
lds
test
imul
sbb
out
push
jmp
call
mov
insl
les
and
sarl
jl
inc
loopne
iret
ret
sbb
fucomi
lea
pushf
mov
pop
loop
xchg
fcoml
loopne
pop
cmpsl
shll
mov
lods
icebp
clc
nop
mulb
ljmp
out
lret
loop
imul
test
cmpsb
lods
ret
shlb
arpl
clc
cmp
int
aam
xor
mov
outsl
fcoml
mov
xor
test
inc
xchg
dec
jne
pop
mov
adc
jb
dec
jg
mov
out
dec
inc
and
hlt
inc
cmpsl
jnp
aam
rol
adc
scas
xor
mov
push
mulb
inc
mov
inc
dec
out
shl
sbb
paddw
sahf
repnz
pushl
enter
les
sarl
call
jge
push
mov
cld
cmpsl
push
mov
add
rorl
je
ljmp
aam
ficompl
dec
fdivrl
push
sbb
lret
cmp
pushf
aad
sub
and
aaa
sbb
stc
int3
mov
lods
jo
push
pop
mov
sbb
or
jge
hlt
jp
mov
out
cmp
cmpsb
dec
and
fmuls
dec
sbb
jbe
jno
shrb
cmpsl
pop
cmp
clc
lcall
je
dec
xor
push
pusha
sbb
mov
mov
dec
lods
sarb
sub
shrb
mov
jne
jl
rcr
nop
mov
gs
add
ret
aam
loope
pop
sub
ds
xor
jp
stos
dec
addl
lahf
cmp
or
dec
mov
mov
stos
stc
sub
lahf
and
mov
orps
in
or
push
adc
mov
xor
xor
data16
std
inc
lods
lahf
mov
enter
xor
ljmp
out
xor
nop
xlat
call
sub
push
inc
int
lret
imul
lock
mov
das
jle
sahf
dec
je
and
push
xor
jae
in
icebp
pusha
std
push
or
fdivs
push
or
dec
mov
movsb
and
gs
xchg
out
sub
sub
js
fmulp
iret
in
push
jmp
sub
pop
mov
jp
mov
test
xchg
lret
gs
adc
jmp
pop
filds
mov
mov
pop
lock
out
cld
loope
fucomi
push
mov
mov
nop
xor
ds
scas
dec
push
arpl
in
shlb
inc
cmc
cmp
aam
xchg
and
adc
stos
fcompl
or
leave
inc
xchg
sbb
sbb
or
lcall
push
cltd
gs
jno
movsl
and
xor
mov
fs
push
and
and
sahf
test
sahf
jbe
fs
dec
sbb
data16
insb
mov
lds
cmp
mov
pop
push
pop
xchg
dec
inc
mov
lock
in
mov
mov
mov
mov
lahf
sub
mov
add
test
in
jno
and
xchg
and
inc
gs
pop
inc
xchg
jg
pusha
xor
inc
pop
mov
rol
repz
sbb
jns
mov
xchg
xchg
les
andb
add
and
xor
mov
add
fisubrs
daa
test
push
and
lret
xor
pop
shr
int3
arpl
mov
into
adc
shlb
pop
ret
pop
rorl
push
out
add
jno
mov
push
jae
mov
mov
pop
nop
lods
shll
orb
cmp
jmp
mov
pop
add
movsb
cmp
mov
orl
mov
orl
xor
aas
test
and
dec
ret
and
push
push
xor
or
sbbl
loopne
push
ja
pop
je
xlat
sub
mov
dec
jnp
in
loope
repnz
cmpsl
scas
dec
mov
into
adc
ljmp
popf
subb
repnz
outsl
mov
pop
in
or
fildl
inc
lret
sub
ficoml
lahf
sub
lret
xor
adc
fwait
cwtl
pusha
adc
xor
subb
cmp
ret
or
ljmp
xchg
mov
jl
pop
cmp
imul
push
dec
lret
mov
shlb
sub
xchg
xchg
mov
mov
inc
jl
aad
jbe,pt
icebp
rol
int3
pop
aam
xor
stos
sete
sub
xor
mov
je
push
lods
inc
clc
addr16
xchg
dec
ja
in
mov
pop
mov
add
subb
ljmp
outsl
push
add
in
pop
pop
iret
mov
jbe
pop
or
aam
cwtl
test
xchg
pushf
je
pop
iret
pop
lret
loope
pop
ficompl
mov
lods
int3
cmc
rolb
mov
fidivs
pop
xor
scas
jge
int3
sbb
inc
into
and
fimuls
mov
call
cli
xor
inc
inc
imul
add
rol
inc
stos
xor
inc
nop
arpl
cmp
dec
dec
jecxz
lret
jno
cmp
add
loop
push
emms
pop
hlt
ljmp
lahf
addr16
test
leave
hlt
pop
fistpl
dec
pushf
jnp
cmp
lds
xor
loope
scas
gs
loopne
call
mov
iret
mov
call
aad
sub
je
popl
ror
xchg
aas
test
aas
mov
mov
sbb
jns
lcall
aad
add
shrb
fs
cmp
mov
cli
jne
fdivl
mov
push
call
out
jo
sbb
lods
xor
data16
pop
cmp
xchg
stos
loop
lods
cmp
aad
add
and
loope
fbstp
lret
or
mov
dec
push
movsb
cmc
leave
insl
test
sub
aaa
shlb
js
mov
lds
adc
sbb
shll
pop
dec
sbb
nop
pop
dec
xlat
scas
add
xchg
lret
or
push
push
loopne
leave
pop
bswap
pop
call
ljmp
test
xor
or
clc
out
sbb
dec
xlat
pop
call
std
loopne
dec
jae
mov
mov
dec
ds
inc
lahf
xlat
inc
pusha
push
arpl
test
clc
cmpsl
rclb
cmp
in
mov
push
mov
mov
xor
xchg
or
mov
stos
jecxz
imul
je
cmpsb
xchg
xchg
cmp
jb
int
jne
popf
rcpps
jne
jge
pop
jo
in
in
stos
add
or
aas
js
sti
push
jae
loopne
in
lahf
sbb
xchg
mov
sub
xor
out
mov
int3
andps
dec
cmp
ljmp
lahf
hlt
cmpsb
outsl
fsubl
pop
rcrb
xor
xor
sub
pusha
cmp
nop
ficoml
add
call
mov
data16
jmp
cltd
in
and
addr16
cmpsb
xchg
add
mov
push
inc
rcrl
call
loopne
nop
mov
imul
xor
mull
pop
jbe
mov
jecxz
imul
jecxz
fmul
mov
out
mov
mov
inc
lock
movsl
lret
lret
iret
call
cmp
pop
push
mov
pop
push
jp
data16
cmpsl
imul
xchg
and
push
lds
xchg
cmp
int3
mov
xor
add
and
in
cmp
gs
scas
mov
jne
fxch
xor
clc
dec
adc
decb
fs
cwtl
fcoml
pop
adc
mov
adc
lods
mov
fisubl
mov
rorl
arpl
push
or
test
mov
scas
lahf
and
popa
neg
imul
jecxz
insb
pushf
lahf
daa
je
js
pop
xor
sbb
loopne
call
nop
mov
and
cmpl
es
scas
pop
dec
add
and
mov
mov
jmp
cmp
les
outsl
cmpsl
fstl
and
icebp
push
adc
or
sti
cmpsl
adc
add
popf
or
jecxz
jl
rcl
push
clc
shrb
icebp
cmp
push
mov
push
call
and
xor
in
stos
jge
addr16
cmc
cld
cwtl
dec
repz
jbe
mov
mov
fildll
scas
mov
sub
pop
movsl
xor
adc
xchg
addr16
mov
mov
sahf
sub
mov
pop
into
xchg
mov
loop
fs
shll
popf
xor
sub
imul
mov
cmp
adc
xlat
cmp
daa
cmpsl
js
mov
fs
aam
mov
ret
pop
out
dec
in
xchg
pop
cld
adc
aas
mov
cmp
adc
das
in
sbb
les
mov
cmp
or
push
fsubrp
addr16
xchg
sbb
ljmp
inc
xor
sub
cltd
aas
insl
xchg
mov
insb
xchg
jl
xor
fdivs
mov
push
fsqrt
cmp
dec
outsl
mov
rolb
clc
dec
pop
insl
fs
fstl
mov
mov
add
jmp
pop
cld
lea
or
push
mov
ficompl
add
test
mov
ret
and
scas
xor
cltd
cmp
je
xor
pop
lock
cmp
mov
inc
outsl
dec
jns
push
hlt
data16
dec
cmpsl
sub
gs
scas
test
mov
dec
pop
shr
int3
movsl
cli
dec
jl
pop
movsb
fcmovnbe
pop
enter
lock
ret
pushf
cmp
xor
dec
xor
add
cmpsl
inc
inc
es
inc
sub
cmp
mov
insb
lock
xlat
scas
mov
push
inc
add
subb
push
xchg
sbb
dec
xor
lods
mov
or
out
or
out
loopne
mov
push
inc
push
subl
add
cmp
adc
rcr
cmp
pop
dec
and
int
aam
xchg
sbb
pop
int
loopne
pop
and
xchg
iret
inc
test
push
mov
outsl
cwtl
hlt
push
cs
jmp
into
lcall
adc
pop
pop
xor
out
xor
ljmp
lahf
adc
cmpsl
js
addr16
sub
in
cld
xor
mov
jp
mov
jne
les
das
mov
pop
shrb
int
adc
dec
jne
xchg
sbbb
loop
mov
inc
test
inc
cmp
lds
jns
sbb
dec
repz
popl
iret
je
push
dec
movsl
je
out
dec
js
push
addr16
xlat
jne
xchg
mov
jne
ljmp
xor
xchg
add
adc
xchg
pop
gs
in
out
sbb
inc
subl
lods
and
mov
lret
pop
lret
push
orb
adc
test
aam
dec
adc
lahf
pop
ljmp
push
int3
fidivs
jb
popf
dec
jo
sub
sbb
mov
jmp
xchg
in
daa
pop
xchg
adc
mov
pop
gs
sub
pushl
jecxz
adc
daa
outsl
xchg
push
xchg
cmp
clc
loopne
xor
cmp
insb
fnclex
inc
pop
pop
lods
aam
mov
add
testb
xor
dec
ljmp
xor
mov
loopne
es
sub
inc
jmp
inc
imul
fstpt
or
in
jnp
and
jmp
popf
mov
mov
scas
fisubrs
out
sub
jg
or
inc
orl
add
popa
xor
iret
mov
xlat
iret
je
cmpsl
jno
and
lcall
dec
xchg
jmp
scas
je
mov
sahf
outsb
loope
test
push
mov
pop
xor
jo
jne
cmpsb
sbb
pop
and
jmp
adc
es
outsl
js
inc
testl
and
or
mov
sbb
pop
adc
dec
dec
aam
cli
adc
mov
icebp
mov
aad
pop
loop
cltd
cs
fwait
adc
dec
fistpll
lods
mov
inc
ss
mov
add
dec
nop
cmp
nop
scas
pop
fisubs
and
clc
or
xor
sti
sbb
push
daa
mov
adc
add
sbb
or
es
xor
ffree
loop
push
mov
xchg
sbb
out
flds
movsb
lds
testb
hlt
mov
pop
cltd
cs
rolb
jae
sub
outsb
fistpl
in
jmp
aas
mov
fdivrs
and
mov
cwtl
lock
daa
and
sub
lock
xorb
stos
dec
cmp
or
inc
es
xchg
adc
ja
jne
cmp
xchg
popa
mov
hlt
mov
dec
icebp
xchg
and
test
push
fadds
cmc
out
stos
mov
roll
cmp
popf
sbb
fcmovu
je
inc
mov
clc
ljmp
dec
iret
repnz
negl
push
add
cli
hlt
xchg
mov
shr
lret
adc
lret
in
xchg
inc
pushf
les
in
das
cmp
pop
push
sbb
cmp
repz
add
push
ljmp
jb
mov
mov
push
mov
inc
addr16
or
jecxz
xchg
pop
decl
repz
nop
nop
inc
fdivrl
repnz
scas
xchg
fmulp
loope
sti
dec
cltd
clc
pop
nop
shrb
jge
cmp
leave
pushf
rcrb
fs
pop
imull
mov
repz
in
ljmp
push
jo
jecxz
aaa
popf
fbstp
movsl
mov
add
mov
repnz
pop
adc
rcll
loopne
std
xor
sbb
xchg
xchg
jb
mov
aam
jmp
cmp
sbb
mov
dec
ret
mov
fisubs
xlat
cld
pop
inc
fldt
add
lahf
sub
es
lods
ret
rclb
xor
sbb
insl
push
mov
iret
es
into
loopne
pop
fwait
rcll
sub
cmp
fadds
arpl
xor
add
xlat
adc
fdivrl
jbe
dec
and
jecxz
lret
test
pusha
jno
mov
mov
addr16
adc
mov
cltd
imul
xor
test
aaa
sarb
and
popf
jp
lock
movsl
lcall
sarl
sbb
inc
lods
mov
insl
mov
mov
loope
cmp
ljmp
loope
fwait
jo
mov
test
sbb
push
pusha
out
arpl
xor
sbbl
mov
sti
fwait
cmp
stos
mov
xchg
fucomip
dec
mov
sub
pop
xor
cmp
mov
lahf
insl
icebp
mov
jmp
dec
cli
mov
cwtl
add
out
jmp
fucomp
add
xlat
ffree
imul
lret
cmp
jg
out
int
cmp
mov
loopne
aad
test
add
sbb
mov
push
fdivs
or
sti
sbbb
dec
ljmp
cmc
sub
mov
fbstp
xor
adc
sti
mov
jl
insb
and
inc
xlat
mov
out
mov
mov
cmc
nop
jbe
stos
pop
fucomip
sbb
pusha
jmp
in
mov
mov
mov
inc
clc
cmc
mov
jle
xor
add
insb
jno
and
ds
xor
addr16
aad
dec
ret
add
in
aas
xchg
jl
xor
lahf
inc
lcall
std
pop
lock
cmp
jo
jno
test
aas
lret
sbb
push
mov
push
out
imul
cwtl
push
in
jecxz
fidivl
call
sbb
mov
loope
movsb
fwait
add
movsb
cltd
out
xlat
imul
xchg
mov
inc
or
mov
jo
pop
fstl
sbb
adc
push
xchg
cmpsl
lret
aad
popa
in
dec
push
push
cmpsl
adc
pop
dec
cmpsl
rorl
mov
cmp
cli
insb
inc
das
gs
ret
sbb
out
gs
xchg
xor
xor
push
out
ret
lret
scas
push
inc
xor
outsb
jmp
mov
and
mov
push
or
jnp
or
pop
mov
repnz
mov
in
leave
addr16
push
xor
jbe
cmpb
add
fs
mov
int3
xchg
daa
sub
repnz
mov
lock
out
mov
dec
push
into
xchg
hlt
push
mov
sub
dec
in
pop
xlat
movsb
es
push
push
in
mov
mov
mov
push
inc
fisubl
aaa
imul
in
mov
mov
xor
addr16
xlat
test
out
fisubs
testl
xchg
lods
int3
js
mov
daa
scas
jge
add
xlat
movsl
adc
icebp
test
xor
push
xchg
roll
push
push
ds
addr16
xor
mov
jo
ljmp
adc
arpl
add
imul
pusha
pop
ret
dec
mov
ret
lahf
adc
in
sahf
jns
cmp
mov
and
lods
dec
mov
mov
jne
jae
dec
dec
lods
ja
fidivl
adc
and
xchg
adc
xor
mov
inc
pop
out
add
push
in
jno
aas
js
mov
cli
cmp
outsl
aad
repz
ror
xchg
out
insb
mov
nop
push
in
pop
fistpll
mov
out
pop
or
clc
cmpl
fwait
insl
mov
sub
add
pop
sahf
ds
leave
negl
jg
jb
insl
or
cmpsb
and
adc
or
aaa
cli
dec
fwait
cwtl
popa
das
jne
out
xchg
jbe
mov
fcompl
mov
lds
cmpsb
sahf
mov
js
aaa
test
push
pop
sub
jno
imul
test
dec
pop
adc
sbb
imul
mov
stos
xchg
dec
dec
sub
sbb
or
in
in
or
int
pop
sub
imul
sbb
push
cli
inc
dec
jbe
xchg
enter
js
loopne
mov
lret
mov
gs
je
mov
out
mov
dec
lcall
and
jle
or
hlt
pop
lods
imul
mov
mov
cmp
loope
lods
clc
pop
cmp
xor
add
repz
xchg
xchg
mov
cld
mov
cmp
test
cld
mov
scas
rcl
jge
loopne
dec
pop
gs
add
gs
mov
xor
lret
mov
adc
in
mov
pop
arpl
pop
into
test
mov
out
cmp
int3
shr
fisubs
push
test
lods
pop
cld
dec
push
pop
pushf
das
mov
nop
pushf
aas
pop
mov
movsb
ret
mov
out
cld
call
aam
icebp
xchg
fsubrs
repnz
lahf
jb
mov
sub
push
in
inc
jmp
data16
pusha
cltd
sub
add
js
mov
nop
popa
mov
push
call
stc
or
inc
jle
and
xor
inc
fiaddl
mov
mov
fildl
sbb
pop
mov
and
sbb
cmp
rcrb
sti
in
lahf
hlt
cwtl
pand
fmulp
lock
add
mov
pop
pop
or
xlat
xor
test
xchg
in
push
dec
mov
add
pop
jno
inc
cwtl
push
ljmp
negb
out
jge
fdivrl
mov
cmp
jno,pt
cmp
nop
lret
and
cmp
shr
call
jo
aas
pusha
xchg
pop
mov
inc
test
mov
inc
and
orb
xor
daa
and
xchg
xor
leave
inc
sbb
xlat
mov
mov
jmp
mov
test
dec
hlt
inc
adc
adc
out
push
fcomp
push
cmpsl
sbb
inc
dec
or
mov
push
add
jnp
outsl
mov
sbb
repnz
loope
test
add
mov
cmpsb
mov
mov
or
test
ror
nop
shrb
push
add
rclb
sub
jno
inc
dec
lods
cmp
cmp
xchg
xor
mov
inc
push
mov
mov
sbb
mov
aad
lock
nop
inc
mov
push
into
test
fisubl
addr16
xchg
fdivs
insl
push
mov
xor
mov
xchg
iret
lcall
ficoml
xor
movsb
mov
mov
cltd
jp
mov
js
fcoms
fwait
mov
incl
notb
imulb
out
xchg
ret
mov
inc
out
cltd
push
test
xchg
lret
out
fistps
jns
xchg
rcrl
pop
scas
ret
aam
or
test
outsl
jne
out
mov
pop
push
mov
and
dec
cwtl
mov
in
popf
icebp
xchg
or
movsl
js
outsl
pop
or
stos
xchg
dec
add
das
scas
cltd
push
hlt
int3
pop
adc
dec
sbb
jb
imul
sub
lods
dec
test
sub
std
lret
mov
aaa
jbe
inc
mov
push
xor
fs
sbb
jmp
xor
pop
mov
add
icebp
lret
leave
mov
outsl
dec
push
dec
js
lds
les
daa
fiadds
faddl
js
addr16
repz
sahf
cli
adc
dec
jo
sub
cmpb
jae
pop
push
out
xchg
mov
cmp
aas
and
out
imul
mov
and
xchg
mov
jmp
cwtl
movsl
jmp
sbb
add
inc
jno
push
push
mov
stc
pusha
xchg
mov
inc
dec
movl
mov
pop
movsl
icebp
in
fisubrl
in
cs
dec
fwait
sub
and
bound
nop
mov
nop
sub
aad
add
push
loopne
gs
or
xor
dec
hlt
jecxz
xor
xor
mov
cmp
mov
add
sub
mov
ret
mov
fs
jge
pop
xchg
bound
call
mov
mov
mov
pop
xchg
das
out
test
addr16
aas
push
jb
andl
aas
xchg
and
sub
test
and
ret
rcrb
rclb
ljmp
lds
ljmp
xlat
lahf
jne,pt
in
xchg
push
push
movl
inc
sub
pusha
dec
movsb
sarb
inc
xchg
xchg
and
adc
je
pop
xor
test
mov
jb
pop
hlt
xor
add
fsubl
sbb
push
inc
cli
fs
mov
dec
sub
stos
cli
repz
pop
push
cwtl
pusha
aam
rcrb
cmc
js
lcall
repnz
inc
scas
and
out
filds
push
addl
push
cmp
imul
outsl
push
out
dec
pop
mov
cmpsl
xor
imul
or
andb
dec
xor
popf
adc
ja
ljmp
popa
ss
ds
out
xor
mov
inc
cli
xlat
lock
mov
ror
jecxz
js
test
jmp
xor
pop
lock
push
cmp
in
jno
aad
push
and
or
jne
xor
push
ljmp
movsb
sub
fmuls
cld
inc
jno
lock
inc
roll
nop
xchg
jnp
sbb
mov
mov
mov
mov
cmp
add
leave
test
sbb
pop
shlb
pop
mov
lock
int
gs
pop
inc
xor
jnp
add
addr16
jno
ss
pop
js
xlat
test
adc
add
lods
mov
js
mov
arpl
or
rcrb
mov
sahf
outsb
mov
adc
movsl
scas
fldenv
fidivrl
pusha
fidivrs
filds
fsubrs
mov
jbe
cmpb
mov
push
mov
addr16
push
mov
adc
pop
push
negl
into
mov
pop
mov
xchg
mov
mov
pushf
cli
bound
jo
out
push
sub
pop
jae
arpl
stc
push
jmp
insb
mov
cli
je
test
test
sub
leave
xor
adc
adc
cwtl
cmp
cld
cmpsb
gs
xor
jecxz
pop
dec
imul
gs
fcomip
ja
loop
insl
sbb
pop
and
cli
clc
push
cltd
push
and
mov
iret
cmp
gs
mov
and
mov
sub
pop
adc
rclb
push
mov
cmc
sub
dec
jno
sub
jge
xchg
mov
movl
inc
ljmp
add
fidivrs
pop
fiaddl
cmp
jns
test
mov
int
sbb
xchg
sub
int
jle
or
stc
mov
enter
add
add
or
mov
inc
pop
inc
repnz
rcrl
lock
push
fmull
sti
sbb
jo
in
cmp
xlat
or
arpl
mov
test
mov
clc
out
mov
sub
sub
cmp
aas
or
lock
jp
mov
or
xor
mov
and
ljmp
cwtl
cmpps
test
adc
aaa
jmp
dec
stos
sbb
mov
xchg
negl
sbb
lods
xchg
ret
cmp
fucompp
out
xor
xor
ret
je
cmp
leave
test
cs
mov
in
sub
mov
ds
mov
add
les
jg
lea
ds
mov
imul
mov
lods
add
adc
leave
ficoml
add
push
stos
and
aam
mov
pusha
cld
mov
sahf
xor
adc
add
test
xlat
cmp
ja
fwait
aad
xchg
mov
fwait
mov
das
jns
loop
loop
mov
pop
xchg
push
pushf
aam
nop
mov
jg
flds
dec
sbb
or
jnp
xor
mov
cmpsb
shr
mov
add
push
push
andl
fistl
xor
pushf
repnz
mov
je
cmp
xor
cmpsb
mov
js
insl
sub
and
ljmp
out
dec
sub
mov
test
pop
out
mov
dec
repnz
cmp
mov
pop
cmp
fistl
lea
xlat
sbb
in
insb
or
pop
mov
sub
dec
data16
adc
cmpsl
cmp
fcomip
xor
jne
pop
xchg
mov
push
sub
jg
or
divb
cmp
lods
cwtl
add
jl
inc
adc
loopne
int
cltd
sub
mov
call
sub
fistpl
and
mov
and
out
clc
incl
jne
and
sub
jecxz
xor
stc
ret
xor
mov
hlt
sti
xchg
push
test
stc
es
adc
cmp
mov
lcall
imul
sbbb
mov
pop
movsb
cltd
mov
adc
jne
insl
mov
loop
repz
add
mov
push
jne
sarl
shlb
loop
xchg
adc
push
xor
xchg
stos
push
mov
sub
mov
mov
je
pop
fimuls
arpl
mov
insb
sub
fstpl
fdivl
jl
cmp
fdivrs
push
divl
out
repnz
shlb
outsl
imul
fndisi(8087
xchg
loopne
lock
fadds
push
pushf
sub
jno
mov
sub
pop
and
push
adc
mov
hlt
add
lock
frstor
mov
push
mov
out
lea
nop
pop
in
adc
jae
gs
pushf
and
test
sbb
adc
outsl
mov
lock
mov
dec
cmp
xchg
aas
lahf
mov
xchg
xchg
sbb
dec
fsts
out
jmp
adc
pusha
gs
sahf
mov
nop
enter
rcl
shlb
and
shl
cmpsw
call
sub
leave
push
popf
sbb
xchg
jb
sbb
cmp
mov
outsl
mov
pop
dec
js
out
xchg
es
call
push
fs
inc
cmp
mov
dec
ljmp
callw
and
sbb
int
std
scas
fcom
movsb
sub
xchg
adc
lcall
sub
dec
mov
gs
xchg
dec
test
sbb
jg
pushf
sarb
sub
jmp
scas
or
lahf
ja
mov
fisttpl
sbb
bound
cmp
aaa
xor
cmpsl
sbb
scas
sbb
call
repz
dec
inc
jbe
into
pusha
shlb
cwtl
inc
loopne
adc
push
inc
shl
mov
dec
jno
add
mov
push
dec
fisubl
pop
je
or
lock
ret
jp
fs
sub
aad
hlt
pop
jne
pushl
adc
cmpsl
les
pop
hlt
rol
xchg
fistpl
dec
sub
leave
ds
jg
and
mov
mov
xchg
aam
test
sub
imulb
jmp
es
lcall
xchg
clc
loopne
cmp
iretw
rcll
and
clc
ss
aad
jae
aam
jmp
addl
pop
jmp
sbb
jl
xchg
jo
std
outsl
cwtl
xchg
icebp
in
rcl
icebp
orl
dec
xor
subl
mov
test
aam
lret
out
les
adc
xlat
pop
int
in
or
add
xchg
pop
sbb
jae
inc
jmp
fcom
mov
into
sub
mov
nop
sbbb
sbb
push
js
mov
and
push
adc
es
sub
mov
cltd
adc
gs
jmp
cmp
xchg
jmp
add
cmp
mov
addl
es
icebp
insl
jmp
sbb
jl
lahf
mov
scas
push
cmp
xor
leave
jno
adc
jmp
fmull
loope
insb
jae
inc
lret
cwtl
lds
add
mov
lret
mov
cli
lock
mov
lods
and
sub
out
fdivrs
aaa
adc
mov
in
movsl
mov
je
xchg
xlat
sub
push
cltd
mov
xchg
out
movsl
clc
mov
cli
jg
jb
repz
inc
jecxz
and
xor
aam
cltd
jmp
gs
mov
loopne
repnz
ret
shrl
aas
push
subl
dec
in
cwtl
xchg
testb
fimull
dec
lret
cwtl
pushf
xchg
or
pusha
sbb
pop
xchg
adc
fmulp
push
imul
gs
push
ljmp
into
mov
inc
or
into
pop
jbe
fdivs
ret
sbb
pop
les
mov
xchg
and
rclb
pop
je
sbb
pmulhw
int
push
jle
ds
test
push
divb
dec
add
sub
add
xor
cmp
std
xchg
fbld
adc
bound
test
mov
mov
fbstp
pop
or
sub
fwait
pop
jmp
fcmovbe
aam
cs
push
out
xor
cmp
cmpsb
xchg
sub
mov
cmp
add
nop
push
jge
loopne
mov
ret
mov
xor
mov
sbb
dec
xorb
js
sbb
cltd
int3
shrb
xchg
mov
sbb
mov
xchg
fildl
dec
aam
dec
rcrl
sub
push
popf
push
pusha
repz
adc
xchg
hlt
fists
jmp
movsb
push
mov
sbb
data16
gs
mov
lret
mov
imul
xor
daa
inc
outsl
iret
popa
and
test
pop
mov
jle
int3
fdivs
or
bound
xor
sub
dec
and
cmp
fsubp
jae
push
movb
mov
mov
mov
fucomip
cmp
rol
movsb
loopne
lods
jne
pop
jp
lcall
or
adc
inc
adc
sti
subl
popa
cli
daa
lea
inc
mov
add
fcmovne
ljmp
dec
jno
push
aaa
mov
ljmp
xchg
add
std
mov
lret
jmp
mov
es
push
mov
adc
cmp
mov
push
int3
lds
jb
rolb
sbb
push
cmc
out
push
inc
add
lds
add
cmpsl
movsb
aam
inc
leave
pop
aam
incl
mov
loopne
xor
out
xchg
cmp
call
repnz
insb
scas
jne
jmp
mov
add
mov
pop
xor
jno
ret
pop
xchg
sub
mov
lret
xor
and
cmp
das
int
and
out
enter
sub
xorl
iret
test
lock
icebp
sbb
push
fldcw
pop
adc
repnz
jo
mov
call
jae
mov
sbb
inc
jl
pop
cmp
sub
xor
fadds
adc
jno
mov
jecxz
xchg
clc
lret
lahf
adc
shl
shll
clc
decl
aad
xchg
hlt
ss
les
lret
adc
pop
pop
daa
jge
jge
xchg
push
jl
adc
in
dec
mov
enter
sub
mov
push
add
mov
in
lods
dec
fwait
cli
test
push
jle
mov
loopw
xchg
sub
imul
shll
dec
add
rol
xor
sub
sub
push
leave
mov
out
xorl
in
xor
int3
sti
adc
lods
jno
push
pop
aas
pop
je
pop
push
mov
mov
cmp
adc
jno
fstp
xchg
in
pop
imull
popa
dec
lock
inc
enter
call
aad
fildl
or
outsl
or
test
and
push
ror
sbb
int3
pop
iret
lods
in
jmp
gs
jp
pop
cmp
sub
push
jne
cmpsl
pusha
in
cmp
in
js
and
lret
adc
in
push
mov
gs
mov
pop
mov
jb
movsl
nop
es
mov
out
mov
cltd
je
xchg
xor
mov
imull
dec
jne
or
sbb
pop
xchg
movsb
movsb
push
ss
or
ja
je
loope
lahf
mov
inc
dec
aam
gs
mov
adc
pushf
mov
mov
mov
and
in
rcll
jnp
push
nop
mov
push
push
xchg
lret
test
jg
sub
cmp
ret
push
pop
in
xchg
mov
push
jmp
mov
xor
mov
mov
js
shll
inc
adc
mov
shll
inc
test
ljmp
ret
mov
fadds
dec
jo
xor
clc
orl
lahf
jno
fwait
out
pop
mov
insl
sbb
xlat
movhps
repnz
xorl
stos
pop
out
mov
out
push
repz
jno
mov
ljmp
scas
cli
xchg
les
xchg
outsl
fsubrs
xchg
xchg
add
jg
rcl
int3
loop
pop
pop
fisttpll
add
pop
mov
jne
scas
jle
sbb
and
add
xchg
mov
sbb
pop
cmp
cwtl
popf
int
sbb
into
jmp
or
adc
sub
pop
pop
sub
repz
out
sahf
nop
cwtl
call
xchg
sbb
sub
pop
pop
mov
icebp
mov
inc
adc
push
loopne
std
call
jb
rcll
mov
xlat
mov
mov
cmc
sarl
mov
cmp
xor
pop
push
or
pushf
popf
hlt
dec
inc
push
xorl
gs
jbe
xchg
inc
adc
scas
mov
pop
mov
jl
dec
adc
incl
and
jne
xchg
mov
push
or
add
push
cmp
aad
inc
mov
fdivs
mov
cmp
add
test
xchg
out
add
imul
jl
aas
and
pop
in
sbb
ja
out
fbstp
jle
jl
and
mov
push
outsb
scas
aas
mov
dec
mov
pusha
mov
xlat
add
das
adc
inc
pusha
lock
or
mov
dec
test
mov
pop
repz
xchg
fcmovne
pop
push
mov
les
fwait
dec
jno
andb
jmp
rcr
jno
jl
cmp
test
fldenv
inc
pop
into
je
cmp
ss
loop
push
push
mov
pusha
adc
loopne
pop
jo
jmp
nop
imul
jmp
xchg
xchg
cmp
nop
enter
pop
std
push
pop
push
xor
call
mov
inc
fmuls
mov
jno
movsl
icebp
mov
movsb
jnp
lcall
ja
ret
jne
pop
push
ret
fucomi
addr16
jno
repnz
or
movsl
outsl
jmp
addr16
in
xchg
xchg
pop
sbb
xchg
cmpsl
and
out
shlb
les
movsl
add
sub
inc
jl
stos
cld
lods
pop
in
adc
xor
fdivs
add
jmp
mov
and
xor
fdiv
cmp
inc
out
ror
add
adc
pop
lret
mov
ja
pop
shlb
add
dec
and
les
out
mov
je
cli
movsb
or
xor
mov
mov
adc
pop
aas
lods
sub
cwtl
cmp
push
lcall
shlb
test
and
clc
cli
add
sbb
mov
mov
pop
int
es
popf
xor
test
jnp
fcomi
xchg
ljmp
jo
aaa
jle
fwait
ljmp
add
scas
sahf
pop
cmp
imul
aad
fisttpl
jl
xlat
cld
mov
test
fwait
lea
xchg
mov
int
xor
hlt
mov
out
fwait
pop
xchg
sbb
sbb
xor
push
mov
mov
loopne
and
push
in
icebp
dec
repz
push
pop
das
jnp
adc
mov
or
dec
pop
out
mov
fisubrl
mov
pop
in
add
xchg
dec
cli
outsb
dec
aaa
das
dec
and
mov
out
outsl
hlt
sub
xchg
ja
insb
iret
cmp
dec
xchg
mov
test
dec
push
imul
imul
cmpsb
dec
pop
test
xchg
dec
mov
das
jo
sub
xor
sbb
outsl
inc
scas
bt
xchg
xchg
xor
bnd
mov
fs
out
cli
and
lds
mov
sbb
outsb
sbb
push
data16
inc
nop
inc
rcll
dec
inc
repnz
in
sbb
push
sub
daa
test
fiaddl
xchg
jb
fdivrp
cmpsb
pusha
xchg
adc
push
pusha
jmp
fistl
ljmp
cmp
push
adc
flds
xchg
jmp
xchg
in
in
adc
mov
mov
xchg
out
sub
popf
arpl
gs
sbb
cmpsb
subl
insb
fiadds
sti
mov
mul
dec
dec
xchg
mov
sbb
clc
or
jmp
fisttpll
test
add
nop
pop
pushf
cmp
int3
fildl
in
pop
xchg
mov
popf
daa
std
cld
xchg
fmull
cwtl
mov
inc
stos
movb
add
nop
popf
imul
leave
mov
jge
divl
xlat
mov
and
inc
sub
xor
adcb
mov
nop
pop
clc
out
loopne
imul
aad
iret
scas
pop
fwait
inc
pop
xchg
jbe
xor
scas
mov
pusha
mov
iret
pop
dec
fsubs
xor
cld
lret
xor
jmp
push
int
ds
cld
das
addl
and
push
inc
mov
inc
jl
cmp
sbb
dec
fdivl
dec
cmp
xchg
xchg
inc
repnz
imul
cmpsl
jg
dec
push
pop
mov
sbbl
cmp
pop
jmp
mov
pushf
loope
out
cmpsl
repz
cwtl
nop
ljmp
mov
add
imul
sub
mov
fcomps
xor
jge
pop
gs
andb
in
pop
ret
push
push
or
mov
sub
hlt
pop
movsb
lret
xchg
loop
out
test
fldenv
inc
xchg
pushf
cmp
ss
pop
in
mov
leave
fistpl
das
loopne
mov
cli
inc
push
mov
xchg
sbb
jmp
push
sbb
pop
jle
adc
mov
leave
fisubs
sub
fisttps
and
xchg
or
add
sub
aad
and
fldt
nop
and
and
clc
out
xor
dec
in
jne
cmpb
xor
mov
push
je
mov
cmp
fstp
mov
xchg
inc
movsb
add
repnz
xchg
out
mov
adc
cwtl
sbb
scas
or
rorl
inc
pusha
sbb
xor
mov
mov
adc
xor
in
push
xchg
dec
movsb
ljmp
frstor
cld
cmp
ficoms
clc
pusha
add
jp
outsl
cwtl
add
mov
cltd
fsubrs
inc
gs
imul
cmp
add
adc
cwtl
mov
lock
pop
fbstp
stc
mov
out
arpl
mov
mov
mov
jne
or
or
fstpt
lods
aad
mov
into
test
stc
jmp
inc
test
ja
clc
sub
mov
jge
push
loop
pop
hlt
push
dec
lret
jno
or
in
jecxz
pop
repnz
sub
clc
cmp
shlb
and
icebp
nop
aam
imul
ljmp
inc
inc
je
std
or
jmp
call
rcrb
xchg
adc
push
or
fs
dec
fadds
jl
pop
add
sub
cmp
in
cmp
hlt
sbb
lds
mov
push
movb
mov
jno
call
pop
xchg
fcompl
dec
jno
cmpsl
pushf
shr
push
mov
push
inc
add
jbe
mov
dec
cmp
dec
test
mov
pop
sub
test
dec
pop
mov
repz
push
sub
fdivrl
ret
fwait
cwtl
xor
cwtl
pop
cmp
notb
xchg
mov
clc
mov
mov
mov
sti
cwtl
mov
adc
shlb
adc
mov
ffree
jg
movsb
test
mov
or
mov
shlb
addr16
addr16
gs
mov
pop
xchg
or
push
in
fistpl
rol
push
je
mov
inc
insl
cwtl
cmp
push
outsb
fs
out
mov
xlat
xor
add
mov
push
or
inc
push
adc
dec
std
add
adc
xchg
ja
pushf
out
clc
mov
icebp
out
mov
or
ljmp
data16
out
pop
stos
sbb
test
pusha
repnz
lret
inc
icebp
cltd
fcom
addl
daa
cmpsl
fcomps
sbb
pop
insl
add
jae
out
insb
and
adc
imul
cmp
pop
insl
or
mov
cmp
xor
ja
jno
sbb
icebp
or
outsl
add
popf
dec
aad
add
jb
inc
mov
adc
lahf
dec
ret
andb
pop
add
jae
and
add
xlat
int
data16
xor
nop
fcom
in
jmp
jno
je
push
outsl
call
xchg
pusha
xor
in
mov
sub
cmp
cmp
rolb
movsl
cmp
call
lahf
mov
sub
jo
les
mov
or
or
pop
cwtl
aaa
mov
les
jge
xor
clc
push
lret
popf
popf
insb
shr
push
idiv
test
lcall
dec
and
les
shl
cwtl
inc
imul
js
mov
sbb
mov
out
les
repz
out
js
xor
ljmp
jg
lods
je
loopne
add
mov
mov
aas
adcl
mov
jne,pn
aad
movsl
insl
dec
out
push
jne
cli
es
shll
and
jo
bound
mov
sub
sbb
sbb
mov
or
fbstp
sbb
pop
movb
fcmovnu
sarb
daa
mov
mov
clc
icebp
fbstp
mov
mov
push
js
sub
fcom
jno
xchg
mov
outsl
adc
or
sub
aam
mov
aas
dec
in
pop
cmp
cmpsl
sbb
xchg
movsl
mov
and
icebp
push
jle
jmp
sahf
lock
dec
xor
pop
cwtl
aam
pop
loop
jnp
xchg
and
test
add
xchg
cld
adc
cmp
xchg
xchg
les
mov
pop
xchg
jecxz
setg
mov
cli
loop
push
pusha
sub
xchg
rcr
dec
pop
jno
push
mov
mov
mov
int
ficoms
sub
mov
fs
addb
inc
pop
cmp
lds
addr16
testb
pop
sub
das
cmp
mov
xor
and
fimuls
fadd
gs
data16
aad
mov
ret
add
push
popf
cmp
stc
ljmp
cmp
sti
xchg
je
enter
ficoml
jo
add
fdivrl
push
popf
out
ds
lcall
je
xor
cmp
cli
fdivrp
movsb
xor
mov
mov
and
repnz
pop
js
test
popf
rol
xchg
dec
les
dec
scas
ret
dec
lret
les
inc
cmpsb
popa
sub
jmp
cmp
xchg
xor
dec
popa
lcall
out
jp
adcl
and
jbe
ljmp
jne
jge
std
incl
pop
in
aas
sub
xor
shrb
pop
pop
adc
add
jmp
ss
mov
out
les
mov
call
shr
inc
dec
mov
dec
pop
insb
xor
jne
inc
push
lret
add
cmc
imul
jecxz
sub
orl
mov
gs
xor
stos
xor
lcall
inc
lods
inc
add
daa
mov
pop
inc
jmp
nop
dec
cmc
cwtl
xchg
jle
rcrb
stc
adc
into
mov
iret
pop
adc
xchg
fdivrp
jo
sbb
add
push
arpl
cs
mov
dec
cmpl
add
cmp
and
mov
daa
dec
ret
and
cs
test
dec
and
xchg
sub
nop
out
in
fdivl
adc
cmp
and
rcl
sub
dec
mov
daa
adc
out
sub
jae
add
push
mov
rcll
xchg
test
push
push
lods
jl
mov
push
dec
jg
mov
stc
aam
sub
push
adc
sub
and
push
jno
aas
add
cmpsb
call
push
cwtl
fsub
mov
mov
rcrl
repz
adc
test
aam
mov
sahf
addr16
insb
pop
dec
aad
imul
imul
pop
cwtl
loopne
mov
mov
add
je
mov
out
in
cltd
dec
loop
cmp
add
insl
and
mov
mov
mov
pop
mov
mov
fdivrl
daa
cmp
inc
xchg
faddp
mov
dec
hlt
or
cmp
xchg
testb
movups
daa
fs
jb
lcall
ficomps
sbb
mov
lcall
gs
shrb
cwtl
fistpll
xor
xor
cmp
fsubp
int3
sbb
lahf
loope
jo
mov
nop
stc
lea
or
xor
xor
sahf
in
mov
jno
push
in
or
call
inc
insb
jbe
push
inc
cmp
dec
js
sub
clc
iret
popf
addr16
loopne
xor
cmpsl
dec
ljmp
sahf
xchg
test
sub
into
inc
lahf
cmp
lds
push
xchg
or
addr16
push
cmpsb
gs
cli
jbe,pt
pop
pop
adc
repz
lods
push
daa
iret
repz
xor
lcall
ds
xorl
xor
mov
xchg
movsb
push
imul
aad
ret
sbb
nop
repnz
xchg
cld
int
mov
push
loopne
in
dec
sub
in
add
push
repz
in
test
sti
gs
mov
cmp
mov
addr16
out
hlt
insb
mov
lock
and
sub
clc
and
pop
repz
push
jl
mov
nop
adc
mov
popl
aad
out
outsb
es
imul
mov
imul
pusha
add
icebp
rorl
xchg
gs
fwait
xchg
pusha
cs
pop
jmp
push
jp
cmp
adc
mov
iret
subl
rcrb
cmp
out
pop
popf
and
push
or
popf
sbb
sub
ret
ror
mov
xchg
mov
pop
outsl
loopne
sbb
xchg
cwtl
clc
cmp
lret
insl
lret
ret
lock
movsl
push
clc
push
clc
jno
lock
xchg
cmp
jmp
cmp
pop
rolb
dec
mov
mov
mov
adc
into
pop
call
adc
rclb
dec
imul
cmp
inc
mov
mov
jl
adcl
repnz
enter
nop
lahf
and
sbb
callw
mov
xchg
cs
ret
movsl
pushf
hlt
fwait
cli
out
mov
jae
imul
mov
clc
clc
rorl
cwtl
iret
rorb
das
mov
dec
push
ror
and
jo
fdivrl
xor
jo
in
test
fwait
in
sbb
and
aaa
nop
pop
repnz
clc
dec
popa
ja
repz
je
dec
stos
cmpb
push
mov
lods
lret
xor
das
xor
sub
push
outsl
lock
loop
mov
in
push
faddl
clc
lock
mov
faddl
fsubrs
iret
lock
hlt
fsub
adc
lock
call
cwtl
jmp
lret
call
and
test
sahf
inc
xor
fdiv
xchg
fwait
cmc
arpl
inc
shlb
repnz
push
inc
cmp
rcll
xchg
push
mov
mov
push
mov
xor
les
daa
out
mov
scas
dec
mov
mov
aam
lcall
jmp
xor
shrl
cltd
dec
push
dec
dec
cmp
sub
lds
push
pop
aas
xchg
fs
mov
mov
cmp
into
hlt
fdivr
ds
mov
jp
mov
rcrb
jo
xor
fcoms
inc
sbb
fcoms
hlt
dec
movsb
sbb
xchg
add
jne
idiv
out
xor
mov
push
lret
adc
sbb
repnz
sub
cmc
lahf
test
imul
pop
ret
lock
ficoms
pop
movsl
add
and
pop
jmp
aam
lock
sub
in
out
dec
ljmp
dec
xchg
jle
into
mov
in
add
int
or
dec
xor
push
cmp
adc
sub
xlat
nop
cli
mov
xor
mov
jns
mov
inc
test
mov
jg
jge
je
idivl
mov
and
js
mov
call
or
aaa
dec
cli
jecxz
pop
xor
in
mov
insl
mov
cmp
js
das
fidivrl
fistl
hlt
test
add
cmpsl
and
fdiv
xchg
aam
cmpsb
push
bound
aas
add
pop
mov
mov
fimuls
rcrl
mov
and
lock
cli
jae
mov
lea
sahf
imul
jp,pt
fcoms
fdivrp
incl
nop
mov
dec
pusha
bound
aad
xor
push
leave
popf
test
cmp
lds
mov
add
outsb
hlt
repz
mov
shrl
jne
call
jbe
dec
clc
inc
mov
add
das
xchg
pop
aad
pop
idivb
pop
addl
addl
clc
repz
or
fadds
dec
test
xchg
or
insb
jne
shrl
popf
out
xchg
jne
rcr
dec
pop
lods
jg
pop
nop
sub
aaa
in
pop
orl
jno
ret
and
push
call
or
sub
in
cmp
xchg
sti
gs
push
add
adc
add
xchg
into
gs
mov
lock
filds
aam
ss
jle
stos
js
outsl
jmp
xchg
cmp
aas
sbb
ljmp
xchg
mov
stos
sub
nop
movsl
lahf
push
gs
repnz
cli
add
movsl
xchg
outsb
jbe
test
clc
push
push
shlb
jbe
pop
adc
repz
xor
cmp
iret
inc
fwait
mov
sti
jp
lret
incl
pushl
cmpb
cmpsl
movsb
out
jne
popf
es
push
es
sbb
adc
outsl
lock
mov
fwait
clc
out
into
jne
out
cwtl
add
pop
pushf
sbb
xlat
jno
adc
jmp
inc
jne
icebp
cld
and
rorl
mov
int
pop
outsb
pushf
pop
in
add
sti
test
aad
out
fldcw
dec
dec
int
imul
ss
andb
sbb
ficomps
mov
inc
pop
shll
out
inc
enter
cli
mov
xchg
jns
dec
testb
int3
mov
mov
sub
pop
or
add
fsubrs
xor
ja
ljmp
fldenv
and
push
mov
sbb
repz
push
dec
add
lret
mov
cmp
sbb
and
sbb
aad
adc
aas
sub
mov
popl
test
enter
aaa
jl
jmp
mov
pop
inc
xlat
movsb
cmp
ljmp
xor
pop
aaa
fmuls
push
dec
lods
cmp
mov
sti
out
outsl
inc
aam
scas
leave
fs
js
icebp
aad
mov
mov
dec
sub
call
mov
in
pop
xor
inc
dec
cmpl
pop
call
fcomps
cwtl
mov
popf
push
cmpsb
adc
and
mov
ss
add
and
fadds
js
add
loope
pop
sbb
je
or
imul
out
repnz
xor
dec
xchg
xchg
xchg
int
or
sub
xor
in
mov
lods
xlat
in
mov
fcmovbe
inc
repnz
sub
mov
shrb
inc
cmpsb
call
stos
stos
jp
daa
fidivrl
lea
dec
sub
push
pop
pushf
push
ljmp
mov
mov
shrb
cmp
inc
xchg
xchg
xor
add
lock
inc
call
dec
push
movsb
dec
dec
nop
mov
sub
push
mov
aad
js
fs
dec
dec
pop
jmp
rclb
mov
xchg
push
jae
pop
mov
stc
cmova
lock
inc
movsb
xchg
pop
test
rcrb
adc
jmp
sub
mov
and
aam
pop
dec
dec
sbb
xor
sbb
sbb
fidivrl
xor
negl
sub
mov
jno
jno
test
outsl
in
ret
adc
repz
xchg
sbb
lods
into
pop
fdivl
pop
adc
lock
lahf
in
loopne
push
repnz
adc
nop
xor
cmp
sti
out
sbb
lock
xchg
cmp
dec
test
mov
iret
nop
lret
cmp
lahf
movsb
nop
les
xor
loopne
pop
ljmp
es
shll
mov
gs
imul
leave
scas
inc
xor
gs
incb
mov
lret
das
les
mov
jmp
popf
shll
int
into
js
lds
adc
rcl
in
sub
sbb
shr
mov
out
or
jns
dec
je
test
and
les
mulb
xchg
mull
sar
sub
imul
push
cmp
adc
imull
pop
mov
inc
shlb
cmovae
push
repnz
out
out
adc
scas
pushf
jmp
adcb
sbb
push
scas
dec
adc
jl
out
cmp
mov
icebp
std
aad
outsb
sub
cli
loope
mov
cld
daa
ljmp
stos
fnstcw
subl
xor
xor
or
aas
lcall
mov
and
push
or
pop
push
jl
mov
jecxz
ja,pt
adcb
cli
test
adc
dec
cmpl
inc
filds
mov
xchg
sub
pop
mov
stos
dec
divb
or
jo
sbb
cmc
pushf
and
lret
cmp
push
xchg
movsl
or
aaa
cmp
mov
test
dec
xchg
push
insl
xor
jo
out
sbb
mov
arpl
sbb
mov
arpl
xchg
sbb
sub
arpl
pop
lods
dec
aas
and
imul
dec
sbb
mov
dec
sub
xchg
incl
mov
sarb
sub
cmp
sbb
sti
and
xchg
xor
inc
movsl
push
mov
push
jmp
xchg
xchg
xchg
mov
out
loopne
jp
imul
mov
shrl
fmull
xor
sbb
call
test
adc
lret
push
and
sub
shlb
add
xor
sbb
mov
cwtl
xor
push
inc
xchg
cmp
insl
mov
loop
ljmp
mov
inc
cwtl
xor
push
cmpsb
lcall
dec
ljmp
add
iret
inc
fsub
cmpsb
shrl
push
pop
cmp
int3
mov
sbb
push
push
lods
out
mov
fadds
aad
pusha
sbb
shrb
outsb
lds
adc
sbb
ds
ljmp
jnp
jg
imul
mov
sub
add
push
test
mulb
fwait
cmc
stos
nop
gs
xor
sbb
jl
stos
outsl
pop
cmp
int
adc
inc
xor
xchg
test
repnz
mov
rorb
ja
ror
push
inc
fwait
mov
add
jle
lock
lret
repnz
aam
push
mov
xchg
push
jge
out
xchg
pop
dec
push
fadds
xchg
inc
adc
or
mov
jno
lock
fnstenv
out
push
and
sbb
cmpsl
leave
insl
mov
add
mov
out
sbb
mov
sub
mov
or
add
pop
rorl
add
dec
mov
push
adc
js
xor
mov
add
sbb
pop
les
push
cmp
lock
mov
ds
pop
out
test
pop
cmp
mov
mov
out
pop
dec
pop
std
in
sti
test
mov
repz
loop
pop
cltd
and
iret
pop
aas
push
or
cs
mov
xor
xchg
mov
aas
int3
fwait
rep
add
aad
lret
bndstx
shl
fldt
loopne
mov
inc
gs
sbb
cmp
mov
ljmp
jno
in
std
mov
push
pop
dec
push
flds
imul
inc
xor
ret
in
aaa
or
iret
xchg
stos
lods
out
clc
pop
cmp
out
dec
ljmp
negb
cwtl
mov
inc
mov
lods
mov
xchg
dec
gs
je
inc
imul
int3
lock
sbb
lret
gs
and
add
in
movsl
in
sti
push
cltd
loop
mov
fstp
mov
lret
test
mov
push
shlb
nop
gs
lds
xchg
xor
mov
pop
mov
push
dec
rolb
test
fsts
push
lods
mov
adc
sarl
aas
aam
repz
push
sub
sbb
xchg
xchg
stos
xor
inc
sub
mov
jmp
xchg
mov
dec
jb
test
aas
jae
mov
stc
stos
mov
test
inc
adc
push
sbb
outsb
pop
rcrb
xor
stc
dec
jae
xchg
fidivrl
sbb
insl
xlat
test
scas
cld
aam
jbe
hlt
sbb
fidivrl
cwtl
lret
icebp
mov
xor
mov
sbb
decb
pusha
aad
addr16
xor
loope
fstpl
mov
xchg
packuswb
stos
push
pop
push
hlt
pop
in
xchg
fisubl
mov
lods
add
jmp
mov
sub
pop
rclb
lock
and
pop
insb
xchg
call
and
cmp
test
repz
jle
iret
add
xchg
push
xchg
in
lea
pop
lahf
mov
push
mov
clc
ljmp
sub
ret
xchg
out
xchg
pushf
sbb
test
pop
and
scas
adcb
jo
call
jo
imul
push
inc
cmp
jne
inc
nop
test
xchg
jo
lea
sub
stc
jno
ret
idivb
pop
dec
gs
addr16
push
mov
sub
aad
pop
jmp
dec
jo
or
jmp
movsl
out
mov
dec
fs
movsl
arpl
mov
pop
ss
orl
pop
sbb
out
cmp
rclb
xchg
or
fldenv
push
mov
mov
or
test
aad
add
lret
push
in
into
xor
imul
psllw
mov
addr16
dec
sub
repnz
lcall
insb
cwtl
jge
mov
int
add
pop
sbb
jbe
bound
jp
mov
cwtl
das
mov
pop
out
pop
das
xor
and
xlat
or
push
inc
insb
addr16
fs
mov
cwtl
xchg
push
mov
shlb
aaa
pushf
push
insb
pushl
shlb
xchg
adc
adcl
lock
and
js
mov
mov
jno
mov
sbb
cs
pop
ds
adc
mov
int
call
xor
xchg
mov
xor
pop
lahf
je
imul
and
jl
stc
cltd
out
mov
insb
mov
jb
fs
lods
cs
lea
mov
call
je
jb
imul
mov
sub
xor
pop
lret
out
jg
gs
sti
sub
jle
xor
adc
xchg
adc
push
push
rcrl
hlt
test
sbb
shlb
in
cli
std
sub
je
mov
loopne
ja
outsl
dec
jmp
dec
int
push
adc
sbb
loope
dec
dec
fdivp
out
inc
fs
jl
xchg
lock
ja
stos
imul
mov
pop
mov
xor
lock
lcall
orb
outsb
xor
mov
bound
iret
pop
insb
inc
loopne
call
hlt
sub
popf
test
mov
push
mov
aad
cmp
jns
andb
dec
push
add
pop
add
cld
je
fmull
test
test
lret
sbb
lcall
mov
icebp
dec
clc
mov
mov
and
push
fcoms
divb
xchg
repnz
cmp
pop
xchg
stc
imul
cwtl
insb
mov
addr16
cltd
les
mov
adc
sti
add
mov
sbb
hlt
je
es
fwait
nop
dec
inc
mov
cld
sbb
pop
xor
pop
inc
sar
xchg
loopne
jmp
cwtl
aas
pop
push
movsb
push
jmp
jecxz,pn
pop
scas
jecxz
bound
call
xchg
mov
and
fstpt
pop
fwait
xchg
add
dec
dec
inc
jmp
cld
push
push
cld
outsl
add
ljmp
into
adc
xor
call
movsl
push
out
fisttpl
mov
sahf
hlt
out
lret
cwtl
stc
outsl
call
clc
cmp
sbb
add
out
push
out
dec
nop
lret
nop
xchg
inc
call
adc
roll
fdivl
push
pop
jp
cs
test
sbb
dec
data16
loopne
xchg
mov
jmp
mov
inc
pop
mov
jbe
mov
dec
fsubr
mov
stos
pushf
xchg
mov
mov
in
sarl
stos
leave
inc
mov
adcl
pop
loopne
loopne
pushf
or
pop
mov
movsb
fdivr
push
nop
push
push
call
sub
pusha
cli
push
lods
pop
xchg
jmp
add
sub
xor
inc
inc
add
add
jle
inc
mov
push
addr16
fsubs
nop
in
xlat
in
cmpsl
sbb
mov
xchg
ljmp
fisttpl
adc
mov
clc
xor
push
hlt
loop
xlat
lahf
adc
idivl
add
push
add
lahf
arpl
pushf
jecxz
fs
frstor
and
out
mov
push
test
inc
daa
ljmp
pop
sbb
fisttps
out
push
in
xor
push
xor
lods
out
mov
push
outsb
xlat
mov
ljmp
sbb
fsubs
movsl
nop
in
push
out
mov
pop
ljmp
adc
mov
xchg
out
mov
push
jbe
mov
addr16
cmpsl
out
mov
push
push
xlat
cwtl
and
xchg
nop
aad
jbe
inc
mov
push
das
xlat
jg
ljmp
dec
mov
push
in
xlat
fldl
ljmp
or
clc
in
es
rolb
es
insb
mov
test
or
in
out
scas
push
pand
int3
int3
pop
fldcw
nop
jle
mov
push
xlat
sbb
ljmp
out
scas
push
outsl
xlat
daa
fsubrp
sahf
nop
pop
ss
mov
adc
cwtl
pop
ljmp
outsl
stos
js
stos
mov
pop
aad
or
xchg
in
push
aaa
mov
dec
push
cmp
out
inc
ljmp
jbe
xor
push
xlat
xchg
int
push
nop
dec
pop
sahf
out
mov
push
mov
int
in
xlat
gs
in
nop
push
pop
outsb
out
mov
push
inc
push
pop
negb
xlat
pop
lods
repnz
outsb
mov
lahf
ljmp
test
add
mov
adc
out
stos
test
mov
out
mov
mov
movsl
loope
insl
pop
pop
out
pop
ss
cmpsl
in
fists
nop
mov
mov
movsl
cmc
ljmp
xchg
mov
push
pop
xlat
push
or
out
out
rorl
pop
dec
out
mov
push
jg
pop
scas
ljmp
push
dec
sbb
ljmp
xchg
mov
sub
out
mov
cmp
push
xchg
ljmp
xchg
pop
inc
sarl
cmp
jmp
dec
xchg
sub
sub
movsl
push
aad
int3
xor
lods
or
mov
insb
push
jne
lods
out
mov
push
lretw
mul
mov
lods
ljmp
xchg
mov
int3
dec
ljmp
nop
in
pop
jmp
push
xchg
xlat
lcall
push
lock
pop
lods
clc
notl
hlt
ljmp
xlat
in
shr
mov
push
ret
je
cmpsb
clc
into
std
mov
in
mov
sbb
xlat
fcoms
movsl
ljmp
mov
mov
pop
push
mov
in
xlat
cmpsb
ljmp
push
mov
test
pusha
and
out
lahf
pop
push
out
mov
push
mov
in
nop
push
pop
adc
push
xlat
cmpb
notl
pop
mov
push
sahf
xlat
pushw
ljmp
mov
test
js
ljmp
aaa
mov
in
mov
add
push
stos
mov
pop
xlat
out
inc
int3
aam
int3
jmp
imul
dec
ja
das
pop
adc
setl
mov
add
xchg
mov
pop
cmpsb
sarb
cmovno
mull
dec
arpl
sub
into
int3
out
int
cli
nop
mov
shlb
addr16
xchg
add
sbb
mov
sub
dec
enter
jae
jmp
addb
sub
push
inc
adcb
test
ds
push
mov
mov
int3
jecxz
incb
adc
push
jo
mov
and
mov
cmc
pop
shlb
mov
into
fldcw
or
mov
sub
lret
inc
xchg
aaa
inc
loop
daa
outsl
add
mov
arpl
ror
add
rcrb
xchg
and
xor
int3
add
incl
popf
pushf
push
das
sub
sbb
cmp
pop
sahf
cmpsl
sti
in
lahf
int
jp
ds
fwait
dec
push
sahf
fistps
inc
xlat
dec
leave
data16
and
pop
scas
cmp
sbb
sti
testl
dec
cmpsb
movl
jmp
out
mov
xchg
add
js
add
jb
push
imul
dec
pop
dec
fimull
mov
push
add
adc
psllq
iret
test
mov
sbb
jl
negb
mov
pop
cli
dec
stos
shll
sbb
xlat
push
xor
sarl
mov
push
mov
lret
mov
pop
adc
out
push
dec
mov
fisttpl
jle
cmp
negb
sub
rorb
iret
mov
ljmp
into
cmp
mov
cmp
loop
into
xlat
iret
rcll
mov
jmp
sahf
clc
aad
mov
test
sti
push
pop
loope
jg
mov
icebp
jmp
or
testb
push
js
mov
inc
mov
aad
in
outsb
mov
or
jno
pusha
stos
pop
pop
add
addl
pusha
and
rcrl
or
xchg
cmp
test
repz
xchg
xchg
push
adc
push
inc
sub
clc
fidivrs
shr
inc
push
out
fidivl
out
shr
mov
sbb
jo
push
lret
fs
into
xchg
sub
fsubrl
sarb
push
adc
mov
push
sbb
clc
sbbb
aad
in
push
stos
cwtl
cmp
mov
lock
mov
push
test
popl
fstpl
sub
sub
add
leave
sub
push
adc
xor
mov
lahf
mov
mov
and
iret
dec
pop
fnsave
pop
push
push
lods
shlb
xchg
popf
push
shl
pop
xchg
cwtl
mov
pushf
xchg
sahf
adc
jecxz
insb
scas
add
stos
mov
fs
arpl
dec
inc
outsl
addb
xor
mov
push
orl
dec
rol
add
push
ljmp
cmpsl
aad
cmpsb
rcrb
cwtl
fldt
in
mov
push
xchg
pusha
ss
pop
imul
or
xchg
push
pop
into
sarl
pop
push
jnp
shl
inc
adc
lods
shrl
dec
xchg
pop
icebp
pop
popa
add
mov
sub
out
dec
aam
not
jmp
mov
push
sahf
fcmovnb
int3
mov
and
adc
or
xchg
rorb
jnp
push
sbb
dec
sahf
pusha
mov
or
jle
popa
lods
imul
bnd
dec
pop
pop
sub
jnp
mov
iret
jmp
pop
addl
pop
fmulp
push
xchg
orl
ds
mov
and
mov
mov
cld
jmp
cli
cmc
fneni(8087
pop
shlb
addps
or
ljmp
and
or
and
ret
daa
jae
push
lods
repz
or
lea
jnp
clc
insb
jle
lret
push
jb
data16
fistl
stc
rclb
adc
mov
imul
rorb
clc
sub
shr
out
cmp
test
jmp
repz
fwait
push
mov
adc
pop
out
jae
popf
ss
sbb
cmp
leave
mov
jle
test
mov
shll
aam
adc
push
sbb
jmp
iret
mov
lds
cmpsb
aam
adc
stos
stc
leave
mov
iret
ljmp
jge
js
mov
negl
xor
nop
mov
ss
nop
mov
scas
xlat
rcl
arpl
jp
sbb
bound
dec
adc
sbb
pop
pop
pop
test
cmp
mov
push
stos
xchg
fcmovnbe
xchg
inc
xchg
jbe
pushf
ja
or
int3
clc
insb
pop
pop
fisttps
div
jg
les
in
lret
ret
adc
pusha
push
in
mov
jo
movsl
mov
push
sub
pop
out
xor
dec
repz
negb
cli
inc
push
stos
test
fs
and
ss
push
data16
mov
jnp
popa
cmpsb
test
cmovl
jge
call
sub
out
notl
or
mov
xchg
push
pop
jmp
mov
cmpsl
out
lret
je
int3
and
cltd
insl
jnp
dec
aaa
lock
idiv
jg
sbb
inc
cmpsl
incb
ljmp
xor
cli
push
push
dec
xchg
fdivr
push
inc
xchg
mov
pushf
out
xchg
pop
and
cmpsl
stc
cwtl
movsb
hlt
int3
jnp
repz
xchg
cmp
mov
hlt
push
loopne
push
in
xlat
pop
arpl
or
shrl
mov
push
repnz
mov
and
movsb
cmp
jns
adc
dec
xchg
scas
out
xlat
popa
fcoms
mov
into
adc
sub
pop
leave
sbb
mov
ljmp
fucomi
xchg
outsb
push
stos
xchg
adc
fdivrs
rorb
sbb
adc
roll
xchg
inc
addr16
push
gs
push
add
xchg
adc
out
cmpsl
aad
pop
ja
dec
xchg
sti
lock
xchg
sahf
sti
mov
outsl
ss
lahf
or
cmp
aam
sahf
shrb
ror
ret
add
mov
es
xchg
dec
jno
pop
mov
popa
jmp
add
push
jl
addr16
mov
ret
imul
mov
out
out
xchg
mov
out
into
xchg
js
gs
nop
add
inc
inc
jne
push
insb
enter
ficoms
adcb
je
cwtl
fwait
sbb
mov
data16
sbb
cli
mov
imul
in
push
les
pop
js
scas
inc
cmp
mov
xchg
add
dec
in
js
push
pop
daa
push
imul
int
ss
ret
test
cwtl
jge
jmp
push
popa
mov
dec
fs
xchg
ljmp
inc
push
negl
xlat
imul
xchg
and
cmp
mov
xchg
enter
xchg
js
pop
jle
repnz
imul
push
pop
in
movsb
add
jae
pop
pop
xchg
repz
pop
pop
sti
pop
push
sbb
mov
pop
js
dec
sbb
repz
rolb
outsl
mov
pop
and
push
pop
pop
pusha
or
mov
sbb
add
jge
test
les
or
adc
pusha
shrl
lea
inc
sbb
aad
mov
lahf
add
push
in
test
cmp
mov
push
mov
int
shrb
test
cmpsl
out
mov
out
or
in
insb
push
cli
int3
leave
fs
xchg
xchg
push
insb
mov
rcl
xchg
cmp
push
inc
loopne
negl
pop
push
shlb
fistps
xchg
dec
pop
adc
pop
pop
sbb
push
push
inc
inc
sti
dec
fisttpll
fwait
int
xor
xlat
test
arpl
jl
mulb
nop
adc
jmp
push
dec
jnp
cmc
movsb
push
jl
out
sub
in
mov
ds
subl
pop
mov
decl
xchg
push
fsubrs
pop
mov
dec
in
and
pop
into
jp
es
in
test
stos
out
test
ljmp
push
shll
pop
push
xor
push
jnp,pt
lock
lods
mov
js
cmp
pop
imul
add
clc
mov
sub
sub
or
sbb
push
dec
push
jl
mov
data16
shlb
mov
scas
sti
in
push
movsl
adc
pusha
fldt
cmp
xchg
jnp
insb
mov
cmpsl
ljmp
push
pop
pop
imul
daa
std
mov
mov
pop
xor
fildl
jnp
ss
sub
lret
pop
clc
cwtl
cmpsl
pop
inc
test
leave
mov
lret
cwtl
pop
imul
call
push
iret
cwtl
out
mov
xor
add
mov
test
js
mov
ds
mov
mov
push
mov
mov
out
jmp
push
repz
mov
mov
sub
adcb
mov
xchg
xchg
ljmp
dec
dec
and
lahf
lahf
sbb
stos
pop
jl
lahf
push
shr
push
fadds
ss
sub
jbe
notl
ja
mov
out
mull
xchg
jp
addr16
out
pop
mov
push
cmp
in
sub
icebp
push
rcll
push
cli
jge
xchg
pusha
ficoms
dec
or
pop
mov
xchg
nop
push
pop
mov
js
xor
pop
xchg
fadds
insl
sti
dec
gs
out
lea
lret
cli
les
lret
in
out
jg,pt
push
movups
cwtl
sub
addl
shlb
xchg
jp
les
xchg
mov
out
mov
iret
sub
and
int
out
iret
jno
mov
out
insb
lods
mov
mov
sub
and
lret
cmp
int3
lret
pushf
sbbl
call
jae
imul
mov
mov
out
arpl
testb
jl
or
gs
sarb
push
mov
jecxz
shlb
ja
mov
push
repnz
call
adc
dec
push
mov
lods
insb
rorb
mov
jmp
inc
orl
pushf
outsb
mov
sub
xchg
repz
pop
pop
sbb
pusha
fnsave
push
jmp
jecxz
lahf
pop
das
ret
sar
push
push
sbb
outsb
jmp
out
lcall
jo
or
and
push
lret
cmp
pop
scas
pop
mov
stos
cwtl
out
cmpsb
pop
aad
sbb
cmp
jnp
sbb
jecxz
in
lret
xchg
jge
jmp
ret
and
fidivs
outsl
jp
jge
dec
sbb
sub
fistl
or
loop
nop
pop
dec
pop
adc
out
pop
push
xchg
imul
dec
sbb
push
frstor
negl
xchg
push
addr16
mov
addr16
mov
pushf
hlt
cmp
xchg
cmp
dec
lahf
adc
pause
gs
shlb
mov
inc
aad
pop
cmp
adc
std
inc
sub
mov
adc
in
mov
repnz
int3
cltd
ljmp
rcrb
cmc
pop
lahf
lahf
lds
push
cmpsb
inc
stos
out
push
ss
pop
in
int3
dec
sbb
sub
addr16
fcmovbe
sub
adc
in
pop
jbe
cwtl
call
test
ja
mov
mov
es
and
or
insb
or
push
movsl
neg
out
pop
cmpsb
add
lock
inc
mov
cmpsl
rclb
jae
push
out
adc
test
sub
gs
and
sub
in
push
push
stos
or
adc
scas
push
movsl
pop
add
fwait
aaa
daa
inc
test
mov
sub
mov
mov
sub
ljmp
cmc
addr16
in
or
test
gs
mov
out
sbbb
cld
shrb
mov
mov
je
sub
mov
mov
mov
clc
mull
xor
or
imul
push
cmpsb
out
xchg
dec
dec
aam
clc
fistl
push
cmpsb
and
push
and
lahf
push
sub
sub
or
lcall
stos
and
lret
test
test
dec
fdivs
test
or
lret
or
clc
scas
mov
es
in
mov
out
mov
inc
lcall
dec
out
push
lret
addr16
push
mov
test
repz
xchg
lds
pusha
push
sub
sub
inc
xchg
xor
push
rorb
scas
sub
call
or
pop
or
mov
test
lret
push
aaa
in
dec
arpl
out
dec
test
xchg
dec
cmpsb
int
sbb
clc
pop
in
cli
fsubrs
mov
mov
cmp
or
rcl
jne
dec
or
inc
mov
mov
add
or
ret
fsubrs
daa
out
daa
fistl
divb
cwtl
push
inc
or
test
loope
xchg
repz
rorb
xchg
lret
pop
inc
sbb
in
rcl
mul
ds
icebp
mov
shl
xchg
dec
sbb
fsubrl
in
clc
test
push
cvtps2pd
inc
dec
or
test
cmp
lret
push
dec
push
or
leave
pop
push
xchg
cmp
jbe
mov
mov
inc
in
loope
sub
xchg
in
incb
ja
push
inc
pusha
add
cmp
in
xchg
or
dec
test
mov
call
cwtl
call
jne
mov
dec
or
gs
test
pop
xchg
inc
call
xchg
cwtl
callw
push
sub
out
xchg
pop
test
cmpsl
dec
popf
test
pop
out
push
push
test
shr
inc
stos
dec
test
fbld
in
gs
sub
add
movsl
out
push
test
and
jecxz
push
pop
mov
or
jecxz
push
out
push
in
jge
mov
les
sub
push
jne
mov
lods
push
popf
dec
insb
cmpsl
add
cwtl
popf
push
enter
dec
out
adc
xchg
or
out
sub
clc
dec
call
pop
dec
cmp
push
rcr
aam
mov
pushf
pop
or
dec
cmp
clc
push
push
xlat
fadds
pop
cwtl
dec
clc
push
dec
rcl
shr
addr16
pop
pop
int3
out
xchg
push
test
pop
xchg
jo
inc
scas
xchg
iret
mov
lret
neg
xchg
divb
jge
mov
stos
gs
inc
cmp
dec
in
jp
lcall
xlat
movsl
test
push
cltd
dec
insl
cmp
inc
pop
scas
mov
cs
pop
test
pop
mov
in
mov
push
call
xor
dec
pop
dec
add
xchg
dec
mov
push
adc
cwtl
fwait
dec
inc
xchg
sti
lret
sub
mov
jl
shrl
mov
add
pop
call
push
mov
testb
popa
out
or
dec
iret
sub
sbb
out
pop
mov
pop
add
inc
shl
jp
inc
sarl
nop
call
ljmp
and
fmull
aaa
int3
test
push
inc
rorb
dec
push
dec
push
sub
mov
xchg
call
test
sti
aaa
inc
lcall
inc
mov
fld1
dec
aad
call
cmp
add
outsb
outsb
push
test
jbe
pop
rclb
pop
test
jp
pushf
sub
int3
and
inc
int3
inc
out
dec
inc
scas
sbb
mov
aam
fwait
push
mov
xchg
dec
pop
pop
out
mov
mov
add
les
aaa
push
dec
outsb
pop
loopne
jno
push
setnp
fsub
vdivps
xlat
mov
in
mov
in
sub
mov
mov
xchg
dec
jns
into
sub
dec
testl
lret
xor
cmpsb
dec
leave
push
shrd
cmp
sbb
test
orl
pop
daa
fbstp
lock
std
lds
outsl
call
movsl
mov
aas
pop
xchg
jne
bnd
mov
hlt
cwtl
dec
cwtl
adc
stc
pushf
push
fs
push
mov
lahf
int3
pop
push
mov
call
xchg
imull
in
jg
sub
ja
push
fs
fildll
and
push
ret
jp
xor
cltd
push
or
fcmovnu
iret
pop
pop
pop
pop
pop
jg
cmpsl
je
dec
stos
mov
mov
rcrl
int3
sub
sub
push
insb
jae
pop
iret
sti
call
xchg
fisubrl
ds
or
loopne
fcompl
mov
paddsb
es
lcall
adc
pushf
fwait
imul
scas
dec
test
test
push
xor
sub
jmp
mov
nop
pop
imul
dec
arpl
out
test
pop
pop
sahf
test
inc
dec
int3
pop
in
divb
fistpl
xchg
mov
arpl
stos
sbb
pop
pop
sub
lock
jnp
adc
adc
push
insb
loopw
test
out
in
imul
jae,pn
xchg
rorb
aas
lcall
cmp
fisttpl
in
xchg
ffreep
jmp
mov
sbb
inc
in
ljmp
pusha
inc
fcomps
jl
cmp
int3
xchg
into
push
mov
xchg
dec
xchg
or
pop
addr16
push
addr16
dec
pop
jg
xchg
pop
insl
mov
aaa
gs
cmp
into
sub
pop
xchg
fwait
add
and
pop
cld
sbb
push
push
adc
pop
sub
pop
lahf
dec
rorb
inc
push
dec
leave
rcll
in
sbb
daa
jp
xchg
lahf
mov
push
nop
sbb
adc
test
int
int3
lcall
pop
jle
pop
or
leave
ja
lahf
out
push
lods
jg
sbb
imul
daa
addl
jne
ror
xchg
sahf
xlat
xchg
fcomp
int3
cmpsb
test
je
test
daa
mov
pop
adc
lock
dec
int3
add
insb
data16
mov
mov
sbb
je
fsubl
xchg
xchg
mull
stos
xchg
call
out
inc
jl
mov
pop
call
rcl
sahf
clc
sub
cmp
scas
dec
pop
push
sbb
xchg
scas
or
test
aam
or
fsub
loopne
mov
lahf
and
fcoml
shrl
sti
adc
addr16
jp
rorb
add
mov
daa
push
loope
in
or
into
clc
arpl
notl
out
pop
mov
xlat
add
inc
fwait
aas
std
test
inc
shl
mov
lret
repz
push
call
push
repnz
pushf
cmpsl
insl
mov
xchg
xor
xchg
imul
push
sub
pop
in
pop
clc
pop
popf
cwtl
pop
out
out
mov
shll
js
lahf
stos
xchg
mov
lods
mov
add
mov
gs
mov
jae
gs
stos
lret
adc
mov
addr16
lods
jnp
das
and
pusha
mov
sahf
mov
lret
aaa
push
negl
sar
sub
outsl
mov
mov
std
fcomip
imul
in
fnstsw
stos
das
jmp
cmpsl
inc
rcrb
movsl
ja
pop
or
dec
call
push
or
mov
mov
cmpsl
inc
or
sub
nop
loopne
mov
negl
aam
push
in
test
push
andb
push
dec
and
push
xchg
into
ud0
arpl
sbb
mov
push
xlat
push
jg
mov
fs
xchg
subl
decl
pusha
lahf
or
nop
and
and
dec
out
jg
jno
stos
cmp
push
jecxz
fs
enter
dec
adc
mov
test
xchg
push
nop
sbb
fucomp
push
push
mov
jmp
push
scas
push
adc
dec
jmp
rcrl
mov
out
out
punpckldq
dec
inc
ja
call
daa
ret
call
pop
andl
jne
mov
imul
mov
mov
dec
inc
jne
cmp
dec
ret
loop
daa
pop
ja
push
and
jb
fidivs
ss
cmpsl
or
mov
jl
cmp
daa
in
icebp
xchg
divl
sub
lds
sti
xchg
sbb
movb
xchg
icebp
or
movsb
dec
stos
daa
or
hlt
fldenv
test
cmpsl
dec
mov
in
sahf
push
lds
add
cmpsb
mov
dec
or
rcrb
or
mov
and
lret
inc
arpl
fcoms
stos
test
cmp
push
cmpsb
es
ljmp
dec
add
mov
xchg
fisubrl
mov
xchg
inc
xchg
clc
mov
insb
out
data16
leave
mov
dec
insb
cld
cmpsb
dec
push
xchg
push
mov
or
push
jbe
push
data16
fisttps
pop
outsl
push
xchg
orb
xchg
dec
fisubl
pop
fildl
mov
inc
pop
fildl
pop
adc
inc
push
pop
test
mov
push
fadds
cmpsl
clc
cmp
lds
test
movsl
adc
in
or
arpl
or
inc
subb
test
adc
stos
cmpsl
in
sti
cmc
lods
outsb
jo
mov
addr16
fisttps
inc
mov
pushf
sbb
pop
pop
sub
inc
mov
mov
jmp
in
test
addb
nop
call
pop
imul
out
out
cmpsb
dec
cmpsb
xchg
jp
es
add
jle
mov
test
xchg
out
or
or
mov
push
inc
out
pop
mov
push
js
sbb
push
and
pop
or
sub
jl
sbb
ret
in
in
push
daa
fdivrs
cmpsb
and
notl
lcall
pop
mov
test
sbb
lret
cmp
pop
add
lret
mov
mov
jl
nop
xchg
ja
data16
push
call
dec
mov
xchg
push
push
incl
cmp
xor
push
mov
cltd
inc
xor
cmp
cld
jl
mov
mov
popa
ret
imul
dec
and
cmpsl
or
js
fnstsw
mov
daa
insl
sbb
mov
push
push
mov
dec
push
xchg
stc
lods
test
mov
sbb
inc
clc
movl
cmp
push
jnp
mov
fistl
rol
add
arpl
sbb
daa
clc
stos
lahf
fisttpl
ljmp
std
pop
push
push
or
dec
xchg
mov
cmp
iret
jge
add
out
mov
das
jle
lds
imull
stos
ss
out
divb
cmp
xchg
call
sub
jae
vpcmov
adc
pop
push
cwtl
fs
popa
mov
test
das
and
jo
sub
jl
mov
imul
mov
daa
dec
outsb
cwtl
jl
jnp
pushf
jns
inc
push
mov
pop
mov
cwtl
movsb
mov
insb
aas
bound
shrl
lcall
push
cli
and
rorl
out
aas
jecxz
aas
jp
add
aad
orl
sbb
jmp
sub
rolb
mov
in
inc
add
clc
push
imul
cwtl
mov
ficoml
test
push
mov
mov
fstpl
inc
push
pop
stos
jbe
dec
push
cmp
xor
divl
in
push
sar
inc
fstpt
push
sbb
xchg
inc
pop
cli
cwtl
cmpsb
xchg
fimuls
movsl
lahf
cli
test
mov
aam
mov
add
and
adc
or
aam
scas
mov
adc
push
add
sub
daa
pop
sbb
stc
pop
cwtl
lret
lahf
jmp
dec
addr16
pop
jae
inc
mov
dec
cmpsl
daa
jl
shl
cmp
and
push
mov
jae
mov
test
clc
mov
lahf
test
pop
js
movups
jb
inc
nop
inc
in
addr16
mov
imul
xchg
dec
mov
mov
xchg
push
sbb
ror
in
mov
inc
jg
in
sub
jge
push
add
or
jns
pushf
aam
lcall
or
pop
sahf
jne
fs
sbbb
pop
rclb
xchg
push
xchg
mov
xorb
push
xchg
cld
fs
out
and
and
test
lret
jbe
jnp
imul
inc
adc
sbb
out
push
mov
test
cltd
lcall
ror
lods
in
mov
fs
call
inc
jmp
xchg
pop
dec
push
test
ds
repz
pop
jnp
daa
es
out
sub
aad
sub
pop
jne
test
repz
subl
aaa
inc
out
icebp
es
sub
movsl
or
inc
test
push
test
cmpsl
sbb
gs
mov
mov
xlat
xor
sub
lret
stos
adc
mov
movsb
sbb
pop
outsb
out
add
inc
mov
xchg
xchg
xchg
std
push
es
addl
std
nop
lods
or
cwtl
push
out
push
shr
push
mov
daa
sets
sub
jecxz
inc
push
call
and
mov
mov
in
out
xchg
cmpsb
or
mov
xchg
daa
push
xchg
daa
or
cmpsl
lds
imull
nop
addr16
stos
icebp
sub
jl
dec
jne
movsb
shlb
movsb
test
test
add
add
xchg
adc
mov
inc
jge
std
jl
in
aam
dec
fdiv
lods
loop
in
sbbl
mov
sub
mov
xlat
aam
lcall
jbe
add
test
rcrl
mov
xchg
js
iret
xchg
lods
xchg
jecxz
out
add
dec
fcoml
rcr
call
inc
cmpsl
aam
add
aad
mov
push
inc
xlat
mov
ljmp
dec
mov
aam
xchg
push
mov
pop
nop
mov
testl
cmc
out
mov
push
xlat
es
ljmp
call
fdivl
mov
loopne
cwtl
in
in
clc
xor
fldenv
ljmp
dec
mov
mov
cwtl
mov
nop
sti
fcom
test
sub
testl
call
stos
stos
aaa
ja
test
xchg
jne
pop
push
mov
or
call
shrb
mul
mov
insb
nop
mov
xchg
pop
jecxz
je
inc
xchg
std
dec
in
push
test
pushf
clc
add
pop
pmullw
sub
jge
aad
jnp
push
fdivrs
orl
dec
xchg
rcl
xor
scas
nop
daa
pop
mov
adc
lcall
lahf
xor
pop
inc
xchg
mov
jno
dec
ficomps
mov
int3
add
out
loope
subl
push
xchg
int3
fsubr
lds
clc
push
out
fadds
out
mov
cmpsl
psubsb
or
test
mov
addr16
bnd
pop
cmp
in
in
in
lcall
mov
or
mov
mov
out
mov
out
mov
push
sub
test
ljmp
cmp
test
rcrb
out
mov
mov
in
inc
addb
daa
lea
adc
out
mov
push
cld
xlat
movsl
add
add
in
cmpsb
loope
out
sub
nop
addr16
cwtl
inc
dec
cli
pop
mov
in
pop
stos
push
mov
in
cmp
inc
xlat
and
lock
mov
push
xchg
xlat
cmpsl
test
int3
pop
ljmp
inc
mov
test
cwtl
nop
gs
pushf
xor
mov
out
mov
push
mov
inc
xchg
ljmp
pop
mov
push
movsl
ljmp
call
dec
push
das
xlat
sub
ljmp
enter
adc
add
or
cmpsb
dec
or
mov
inc
ljmp
mov
call
mov
cmpsl
nop
je
pop
out
mov
push
lret
xlat
inc
shlb
ljmp
mov
pop
movl
rorb
pop
jecxz
out
xlat
inc
ljmp
xchg
test
pop
jmp
add
test
xlat
dec
mov
sub
xchg
mov
xchg
xor
lahf
mov
push
mov
inc
nop
stos
pop
and
inc
xlat
mov
ljmp
cmpsl
mov
out
inc
nop
inc
pop
dec
out
mov
test
push
gs
mov
jae
out
ja
inc
out
mov
push
jg
xchg
ljmp
jp
add
lret
dec
pop
pop
out
mov
push
xchg
daa
addr16
cmpsb
xlat
xor
ljmp
inc
mov
push
and
mov
or
mov
call
out
mov
push
out
pusha
pop
inc
mov
fldenv
out
jns
push
das
out
out
test
addr16
cwtl
shrb
test
outsl
mov
push
jae
out
ljmp
jo
push
sahf
push
xchg
ljmp
mov
add
pushf
xlat
mov
sub
out
mov
addr16
xchg
xor
mov
jbe
lret
fsubrs
pushf
rcl
xor
gs
and
or
shrl
or
xor
ret
dec
out
cmpsb
test
data16
shll
and
shll
and
dec
test
xchg
sub
push
out
dec
cmpsl
sub
in
aas
shl
or
xor
xor
ret
dec
and
aad
ret
dec
push
out
shll
daa
xor
ret
dec
sub
test
sub
shll
out
aas
shrl
sub
xor
ret
dec
daa
sub
test
cmpsb
aas
shll
es
rcl
movsl
inc
xchg
and
inc
mov
sub
dec
out
cmpsl
test
addr16
shll
or
xor
ret
aas
loop
movsl
ret
dec
sub
inc
dec
test
push
shl
or
xor
ret
dec
cmpsb
sub
in
aas
cmp
or
mov
push
out
push
cmpsl
ret
dec
sub
test
out
shll
cmp
gs
and
and
ret
dec
sub
out
in
aas
shll
daa
inc
xchg
xor
ret
dec
xor
gs
and
or
shrl
or
xor
ret
dec
out
cmpsb
test
data16
shll
and
shll
and
dec
test
xchg
sub
push
out
dec
cmpsl
sub
in
aas
shl
or
xor
xor
ret
dec
and
aad
ret
push
push
hlt
cmpsl
adc
sbb
dec
sbb
cli
pop
in
jp
call
jp
call
push
sub
or
fucom
stos
movl
mov
test
mov
add
data16
or
mov
dec
mov
int3
nop
in
mov
dec
es
mov
in
mov
int3
mov
popf
xor
lock
fsubrs
mov
int3
fiadds
lret
fiaddl
test
aaa
add
push
pop
int
loop
and
xchg
add
jecxz
fidivl
and
dec
pop
ret
cmp
push
inc
fcmovu
in
mov
mov
rcr
inc
sbb
fsubrs
out
rol
adc
sbb
jl
dec
push
int3
sub
scas
xchg
mov
cwtl
fdivrl
sar
sti
inc
lods
pop
dec
repz
cwtl
addr16
insb
cmovs
das
test
dec
jmp
fwait
dec
dec
cli
pushf
pop
or
pusha
out
out
pop
sub
sti
dec
inc
aam
xchg
inc
out
scas
inc
pushf
test
dec
push
sub
inc
int
xor
int3
pop
test
lret
mov
insb
xchg
or
xlat
fcompl
mov
jmp
loop
clc
negl
movq
aas
xchg
aaa
mov
ja
test
loop
ss
mov
es
test
sahf
daa
imulb
inc
test
pushf
mov
dec
adc
or
inc
xchg
inc
adc
mov
ja
dec
test
rol
shlb
iret
jne
popf
cltd
insb
enter
sub
rcl
mov
stos
jne
push
pop
xchg
add
dec
scas
stos
insl
or
jmp
fadds
mov
mov
dec
add
add
lds
inc
insb
dec
decl
dec
xchg
adc
cwtl
mov
shlb
mov
aad
aad
cltd
lock
cmpsl
in
movb
call
or
rclb
dec
mulb
js
aad
xor
leave
test
inc
push
test
xor
rcl
inc
nop
lock
aad
push
call
out
ror
cmpsl
pop
mov
dec
into
xchg
xlat
adc
dec
sahf
dec
gs
mov
aad
xlat
lock
pop
cmpsl
inc
test
push
xchg
insb
pop
xchg
mov
push
test
out
pop
cwtl
out
or
jae
repnz
push
inc
fsubrs
xchg
sbb
xchg
inc
xlat
div
scas
cmpsl
push
lcall
push
dec
xor
into
lcall
mov
jp
jecxz
ljmp
xchg
imul
in
xchg
pop
push
dec
out
dec
out
in
shll
dec
dec
scas
test
cmpsb
ss
loop
xchg
cwtl
or
ss
sahf
mov
xlat
lcall
insb
mov
dec
inc
fisttps
push
in
push
add
outsl
rclb
out
inc
cs
dec
pop
aam
mov
mov
int3
dec
inc
or
lds
mov
test
daa
xchg
lret
lock
outsb
hlt
mov
xor
jp
idivb
call
push
sub
or
es
add
mov
add
xlat
xchg
push
loop
and
ja
filds
aad
stos
daa
cmpsl
dec
lods
inc
inc
fdivrs
stos
js
sbb
add
inc
pop
iret
pop
lock
xlat
add
pusha
inc
popf
clc
sbbl
lods
mov
add
stos
inc
cwtl
push
inc
lret
int
pop
push
sbb
jb
xlat
pop
lcall
sbb
jecxz
dec
in
stos
jg
add
dec
mov
push
jge
add
loopne
adc
jg
imul
cmp
sbb
xchg
push
mov
inc
insb
sub
stos
hlt
xchg
sub
adc
mov
fsubrl
rcl
leave
call
lret
imul
dec
sbb
mov
pop
xchg
mov
cli
push
xor
iret
dec
xchg
dec
inc
pushf
pop
push
pop
pusha
xor
cwtl
cltd
mov
push
xchg
arpl
test
mov
sub
push
push
scas
out
mov
mov
pop
cmp
jg
out
aas
mov
in
pop
test
mov
into
scas
cmp
mov
lcall
pop
ja
mov
pop
ja
mov
pop
pusha
pop
inc
sbb
lret
je
mov
mov
dec
in
xchg
push
pop
adc
rorb
jae
xchg
aad
jmp
push
iret
imul
das
pop
mov
cmp
into
nop
jo
push
cmp
push
sbb
insb
cmp
pop
pop
outsb
daa
adc
sbb
mov
dec
lret
xchg
stos
out
push
je
and
sarl
push
fsubrs
adc
imul
popl
test
nop
dec
sbb
sbb
es
adc
or
push
pop
push
lods
push
xchg
dec
xchg
lods
cld
arpl
xor
aas
aaa
adc
push
mov
jns
mov
imul
das
syscall
dec
fists
mov
pusha
mov
push
push
pop
xor
xchg
and
jbe
xchg
push
scas
lahf
xchg
mov
xchg
lods
aas
mov
fisubrs
cs
ja
ja
popf
stos
add
stos
shlb
and
jmp
push
lea
shl
fldt
nop
fmul
jecxz
jae
scas
push
pusha
xchg
out
jge
and
mov
int
sbb
jbe
orl
sbb
es
pop
and
jnp
dec
jmp
ss
push
mov
or
jbe
mov
dec
std
adc
and
addr16
mov
test
jp
adc
ljmp
int3
test
dec
dec
mov
cld
fmuls
outsb
mov
dec
in
push
ja
xchg
rol
dec
jp
call
rclb
in
lock
aam
call
dec
xchg
fxtract
and
fbld
in
daa
mov
mov
sahf
int3
lods
mov
mov
in
ds
sub
mov
pop
subb
sub
into
pop
in
inc
pop
pop
xchg
push
loope
dec
int3
and
mov
cwtl
xchg
les
mov
repz
dec
ja
cmc
lock
pop
into
cld
mov
jmp
mov
call
cwtl
lret
pop
shlb
xor
pop
jl
inc
xchg
pop
stc
dec
inc
testl
mov
sub
sub
mov
push
mov
leave
adc
mov
mov
jne
lret
mov
aam
addr16
mov
ja
dec
test
xchg
xlat
movsb
repz
jb
sahf
mov
jp
int3
out
daa
cmp
mov
and
or
inc
test
add
mov
stc
dec
ret
xchg
push
in
inc
inc
rolb
inc
fadds
pop
pop
out
daa
push
dec
sbb
test
stc
daa
inc
js
xchg
mov
addr16
loopne
fsubrs
nopl
leave
fdivs
test
shrl
ficoml
cmp
add
and
rolb
pop
loop
add
ss
fisubl
in
lock
rcl
lret
in
xor
addr16
pop
int3
xchg
cmp
dec
sbb
stos
call
mov
not
cld
arpl
jmp
pop
sbb
leave
js
shrb
jbe
loope
dec
push
pop
fwait
sbbl
shrb
xchg
stc
xchg
pop
out
std
fs
xor
addr16
xchg
xchg
mov
addl
jge
jg
xor
fcomp
fmull
push
lret
mov
es
bnd
xchg
jne
hlt
cmpb
xor
mov
aaa
push
inc
jmp
xor
jo
or
pusha
cmp
inc
mov
dec
inc
xchg
jmp
mov
mov
push
lds
call
inc
in
jecxz
dec
push
sub
mov
shr
xor
sub
test
push
pop
pushl
cli
int3
repz
cmpsl
das
sti
pop
jmp
mov
mov
loopne
das
movsl
cmp
mov
push
xchg
stc
out
mov
test
test
cs
inc
pop
jnp
movsb
add
int3
sub
in
xor
xchg
cmpsb
gs
sub
push
mov
inc
pop
repnz
jne
cli
push
mov
lahf
ja
pop
mov
and
rorl
das
mov
mov
xchg
sbb
jg
cmpsl
pop
insl
out
adc
lahf
mov
mov
ret
xchg
xchg
ss
pop
pop
sub
mov
lods
test
add
cmp
pop
sub
cmpsl
pop
data16
and
jns
sub
pop
mov
and
push
ja
loop
lds
xlat
or
mov
push
add
add
out
popf
fisubl
stc
add
out
push
jns
out
lea
adc
pop
mov
rcrb
cli
push
cmp
scas
ret
push
daa
loop
xchg
ljmp
sbb
and
ret
mov
mov
leave
fimull
scas
mov
mov
xchg
push
jae
push
cmp
iret
pop
sbb
mov
lret
push
int3
es
xchg
call
fmuls
out
sub
xlat
mov
test
mov
push
test
loop
call
add
push
adcb
inc
cltd
push
int3
in
popf
pop
add
pop
mov
pushf
call
mov
sub
lds
fstps
psubusb
pop
or
dec
mul
test
je
push
push
aam
out
jg
shrl
and
sub
popf
call
pop
in
imul
loop
pop
mov
inc
push
dec
loope
data16
pop
and
js
dec
xchg
jne
xchg
iret
cli
in
loopne,pn
cs
inc
sbb
addr16
hlt
inc
in
add
xchg
pop
test
or
lods
sbb
cld
lods
mov
cld
negb
xor
testb
or
sbb
into
call
ret
ret
testl
xchg
sarl
rorb
imul
push
subl
jmp
mov
xor
or
pop
mov
call
cmpsl
daa
sbb
sub
add
mov
sub
adc
shll
into
mov
dec
and
hlt
or
xchg
mov
sbb
icebp
out
jnp,pt
inc
int3
repnz
push
mov
push
fdivs
xchg
dec
aas
clc
outsb
sti
mov
stc
pushf
xchg
sbb
sub
adc
pushf
repz
in
hlt
sub
pop
mov
lcall
jl
call
cmp
sub
cmp
push
lods
scas
movsb
addr16
add
adc
scas
movsb
sub
jmp
dec
mov
inc
int3
add
mov
mov
mov
cmp
mov
dec
pop
scas
cmp
popf
or
push
jns
int3
push
xorps
push
mov
repz
mov
mov
dec
ret
mov
jmp
daa
out
call
popl
lds
ret
inc
repz
push
outsb
jecxz
push
cmp
jno
out
repz
clc
bound
cli
es
stos
and
sub
call
aam
out
in
and
mov
fmull
int3
test
and
sub
inc
test
fwait
aaa
out
jb
cmp
pop
and
push
and
xchg
cmp
cli
int3
aad
push
xlat
into
jp
idivl
cmp
inc
das
fsubrs
imul
push
fsub
pop
ja
aaa
mov
pop
mov
adc
inc
and
ja
imul
ret
ret
fsubr
das
push
pop
daa
in
or
mov
int3
mov
ret
in
dec
cwtl
stos
aam
in
test
out
mov
xor
dec
shlb
std
mov
out
pop
movsb
lods
loopne
in
fdivrs
mov
inc
dec
jp
call
pop
in
cmpl
mov
clc
push
into
xlat
add
fmul
pop
lods
rcr
test
enter
ret
outsb
fdivr
clc
push
xchg
out
fcomps
scas
and
aam
rolb
popf
call
mov
lds
clc
iret
push
out
addr16
test
in
aad
movsb
sbb
mov
dec
fdivr
out
rorb
pusha
lds
int
mov
mov
mov
inc
popf
lahf
call
dec
sub
cmpsl
pusha
sbb
xlat
xchg
lret
sbb
and
dec
fcoms
iret
sub
sbb
cmp
mov
loopne
fadd
dec
aam
out
in
cmp
inc
push
in
movsb
xlat
and
out
xor
loopne
ljmp
pop
pop
fdiv
mov
xchg
fadds
add
ret
push
out
fcom
mov
in
ret
movsb
and
gs
mulb
dec
int3
or
test
in
pop
fsubr
rclb
pop
dec
dec
test
dec
adc
and
stos
inc
in
andb
mov
mov
int3
sub
mov
sub
push
push
push
rcrb
loopne
xchg
negl
jp
pop
loope
cmc
out
xor
push
stos
inc
jg
push
out
adc
adc
add
inc
jl
rclb
fwait
mov
lock
insl
addr16
or
xor
ss
inc
movl
push
stos
enter
loopne
dec
aas
push
sbb
inc
xor
cmp
mov
sbb
cmp
out
push
lock
xorb
jg
sbbb
test
or
jbe
cltd
pop
mov
or
aaa
adc
and
push
cld
lock
std
lahf
sarb
insl
dec
adc
test
js
jo
or
ljmp
sbb
insb
lods
dec
dec
mov
lea
adc
jae
into
call
pop
clc
add
mov
adc
inc
gs
mov
inc
daa
in
test
lock
out
cmp
enter
mov
push
xchg
fiadds
clc
inc
xchg
call
not
addr16
ds
repnz
in
arpl
popa
pop
xor
clc
enter
xlat
dec
pop
nop
cmp
lret
mov
loop
and
adc
dec
xchg
xchg
lock
dec
decb
incb
cmpsl
jo
mov
jae
push
cmpsl
sahf
fdivrp
cltd
cld
dec
stos
js
sub
shr
mov
stos
push
in
mov
scas
inc
pop
mov
lods
push
cld
call
sub
push
in
xor
scas
clc
sti
add
insb
out
popa
push
push
in
mov
call
xor
dec
ljmp
nop
sbb
shlb
jno
cld
shlb
cld
cli
fneni(8087
mov
fistl
fsubrp
nop
in
out
fldl
lret
add
sub
mov
scas
push
lock
xor
mov
aaa
mov
sub
ret
or
lret
stc
outsb
xor
imul
push
mov
sahf
mov
rcl
fldt
popf
push
mov
mov
fwait
xor
lods
jae
xchg
xlat
loop
dec
dec
inc
addr16
notb
lret
out
xchg
mov
clc
adc
test
hlt
pop
outsb
fucom
dec
push
outsl
sbb
mov
jmp
and
push
clc
stc
jle
and
xchg
xchg
pop
cli
scas
and
lret
cmpsb
pop
pusha
ja
lret
mov
xchg
stc
out
jg
fiadds
dec
pop
push
fsubl
or
xchg
and
scas
ljmp
cmp
xchg
or
pop
xchg
jne
xchg
xlat
into
inc
dec
push
clc
div
test
inc
and
icebp
loopne
sbb
inc
xlat
or
add
jae
push
push
pop
rcrb
test
ficoms
fsubrs
mov
adc
pop
xor
test
test
jge
lods
pop
jecxz
lock
addr16
wrmsr
pop
pop
jbe
inc
test
in
addr16
xor
ret
jg
inc
xlat
push
cwtd
loopne
mov
incl
sub
pop
pop
xchg
inc
add
pop
pop
or
out
mov
xchg
pop
jbe
repnz
into
push
inc
pop
adc
pop
lret
pop
adc
addr16
cmp
adc
mov
push
nop
call
xchg
and
push
jo
cwtl
test
sub
push
test
cwtl
xchg
inc
lock
int
add
and
mov
cwtl
inc
ljmp
in
cwtl
cli
add
dec
or
faddl
lods
xchg
into
arpl
mov
or
clc
lods
fcompl
stos
fcomp
cld
fimuls
orl
test
test
stos
ljmp
push
ljmp
cwtl
sub
in
xlat
add
call
loopne
xchg
cwtl
xor
aaa
pop
dec
push
fcomps
mov
lods
in
jg
outsb
sub
mov
jnp
call
pop
adc
imul
xchg
aaa
jne
fs
call
das
inc
and
mov
dec
call
or
pinsrw
xlat
loopne
add
cwtl
adc
call
pop
pop
cmp
ljmp
adc
out
lahf
fldl
call
fcoml
mov
aam
pop
adc
in
sbb
mov
mov
ljmp
fisubrs
lock
stos
aam
sub
in
call
dec
lea
xor
push
call
lds
xor
in
pop
mov
stos
push
pop
push
call
orl
xor
aas
cs
lock
push
aaa
jle
push
pop
int
call
addr16
lret
lea
jo
cmpsb
mov
cmpsb
mov
dec
mov
xchg
dec
shrb
pop
push
jne
out
sbbb
push
shr
loopne
xlat
mov
fsubl
iret
sahf
add
cld
dec
sahf
out
int
fcoms
push
test
adc
sub
xlat
pop
lea
jecxz
fsubrs
out
scas
lock
iret
in
jge
je
push
push
pop
push
insl
adc
incb
cmpl
cmpsl
movsl
in
in
mov
pop
and
xlat
sub
scas
addr16
mov
jle
mov
in
jecxz
push
pop
test
cli
icebp
loop
rol
loopne
and
xchg
xor
or
xchg
in
push
jne
push
mov
loopne
mov
cltd
or
aam
jecxz
gs
jmp
fadds
dec
lods
lds
pop
jo
push
mov
clc
dec
add
push
inc
loop
js
lock
fldenv
xchg
dec
fidivl
sbb
mov
gs
mov
mov
jbe
mov
call
xchg
jmp
call
loop
sub
inc
in
mov
xchg
fsubl
inc
dec
sbb
dec
aam
movsb
mov
jmp
xchg
push
cmp
fnstsw
js
mov
vmulss
add
cld
mov
add
js
mov
mov
in
ret
out
addr16
ja
fcomps
mov
push
inc
sub
sub
push
ja
movsb
push
push
jmp
nop
insb
lea
inc
xchg
cmp
insl
adc
sar
dec
push
fadds
pop
cmc
out
cmpsl
and
call
push
roll
lock
out
lods
in
imul
pop
ja
sub
cmp
fwait
lahf
aad
sbb
lcall
loopne
hlt
cwtl
push
data16
or
mov
inc
add
int
mov
popa
out
dec
repnz
lea
test
sub
xchg
out
pop
call
cs
mov
js
mov
test
orl
out
loopne
fdivs
rclb
aas
outsb
popf
ror
cmpsl
repz
jnp
xchg
pop
push
cmpsb
mov
call
fcomps
lret
xchg
adc
lock
cltd
cwtl
pop
cmpsb
xlat
loopne
mov
xchg
stos
dec
fcoms
out
or
orb
mov
xchg
loopne
push
ds
xlat
add
push
aaa
aaa
or
cs
lods
fwait
scas
iret
call
and
nop
mov
adc
lock
scas
lods
xchg
dec
mov
pop
add
aas
sbb
lock
lcall
push
lock
dec
bswap
scas
add
pop
fdivs
call
inc
lods
lock
push
jbe
outsb
jbe
mov
shl
mov
test
ja
push
ret
sub
xor
aaa
shrl
push
mov
sbb
lcall
pop
popa
xchg
add
pop
adcl
adc
stos
in
and
mov
stc
cld
lock
lret
inc
fwait
xchg
data16
fdivp
out
call
lret
dec
jns
adc
mov
push
jo
mov
mov
aam
jns
mov
cltd
scas
lds
and
sbb
xor
shlb
call
adc
or
cmp
cwtl
sahf
cmp
inc
popf
xor
lock
negb
pop
adc
mov
shrl
push
in
jl
movsb
xor
jnp
negb
add
cmpsb
fiadds
daa
ds
hlt
insl
xor
xlat
push
pop
mov
rcl
loopne
mov
mov
nop
or
push
mov
mov
push
lea
clc
shll
stos
in
cmp
lds
rorl
mov
sbb
lods
dec
lock
pop
jo
xchg
out
push
iret
shlb
push
out
sti
xor
loop
mov
lcall
dec
mov
roll
ret
push
lea
int
mov
mov
lcall
adc
jbe
in
sar
xor
daa
je
jge
lds
jnp
out
pop
scas
jmp
into
fcomps
test
movsb
dec
xor
std
xchg
fwait
outsb
icebp
das
pop
fmuls
test
in
call
inc
xchg
ret
mov
add
int
xchg
add
gs
pop
call
jo
cwtl
imul
mov
pushf
mov
pop
inc
out
hlt
push
std
rorb
clc
jo
xchg
test
push
pop
shll
cmp
gs
inc
mov
fsubrl
push
popf
add
add
fwait
out
push
xchg
dec
pop
clc
cs
pop
shlb
loopne
cltd
movl
add
adc
call
negb
xchg
push
mov
xchg
inc
dec
xlat
pusha
pop
jg
push
ror
loopne
mov
das
cmp
pop
pop
xor
shll
mov
xchg
jo
ljmp
mov
ds
je
adc
add
arpl
ret
rorb
adc
xor
mov
xor
push
icebp
sahf
sarl
push
jle
mov
je
mov
mov
adc
out
mov
inc
adc
in
addr16
cmp
test
pop
fsubrs
insb
lock
pop
dec
lods
xchg
lods
mov
in
rcrb
test
inc
adc
loopne
dec
mov
out
dec
les
pop
lock
stc
call
and
das
loopne
ret
pop
repz
aaa
add
pop
jmp
mov
subl
lahf
imul
mov
loopne
mov
jbe
shrb
nop
shl
shlb
pop
pop
cwtl
aad
xchg
outsl
aaa
imul
call
nop
pushf
adc
mov
iret
fsubrs
adc
jbe
pop
lahf
cli
xchg
mov
call
xor
jecxz
addr16
mov
addr16
push
pop
push
and
or
call
xchg
lods
in
daa
outsl
lock
add
incl
pop
outsb
dec
cmpsl
sub
add
jno
cmc
in
adc
mov
pop
int
movsb
addr16
pop
insb
test
aad
inc
add
mov
inc
mull
jp
cmpsl
rol
outsl
gs
hlt
clc
sbb
push
dec
and
test
dec
fstps
andl
outsb
push
in
das
ror
add
jl
lods
xchg
popl
xor
js
pop
mov
pop
fdivrl
add
pop
daa
out
cmp
adc
add
rclb
pop
add
addl
push
ds
lock
sbb
insb
or
stos
add
or
mov
cwtl
repz
lea
sub
add
data16
cmc
cli
fmuls
sub
test
pop
cmpsl
call
nop
pop
add
test
enter
into
int
sub
push
daa
jge
add
xchg
xchg
clc
cli
push
fmuls
mov
adc
push
lea
or
mov
rolb
adc
lahf
inc
movsb
mov
loop
andl
iret
loopne
in
scas
inc
pop
adc
inc
push
leave
and
cwtl
pop
lods
mov
pop
nop
push
push
jle
cmpsl
mov
xlat
nop
bound
stos
jbe
cmp
in
repz
xor
sti
popf
xor
jmp
bound
divb
aad
bound
cwtl
xchg
movsl
jmp
xor
in
lock
das
test
xchg
loopne
pop
mov
mov
popf
sahf
lock
cmp
xor
scas
test
jbe
testb
sti
and
jp
out
xchg
test
push
loope
dec
into
mov
stos
mov
xchg
sbb
xlat
test
repz
add
mov
pop
cwtl
xorb
xchg
shll
fists
movsl
add
not
sbb
add
push
iret
int
aas
add
push
pop
fistps
iret
cmpsl
fs
loopne
test
push
push
sbb
push
xchg
add
ret
clc
outsb
mov
and
ja
scas
arpl
or
pushf
out
inc
jae
hlt
adc
test
repz
mov
sbb
ficoml
jne
mov
inc
fbstp
push
cltd
fisttps
cmp
insb
push
fwait
jg
repz
cmp
stc
bound
mov
add
push
dec
cmc
lods
push
fsubs
or
xchg
pop
sbb
test
pop
dec
xchg
sahf
fwait
cmp
clc
jo
fistpll
or
adc
and
fdivr
and
xchg
mov
dec
sti
pop
push
xor
inc
push
fadd
mov
cmp
out
fldt
out
adc
add
mov
and
xchg
lods
mov
aas
sbb
addl
pop
add
cwtl
std
daa
mov
aam
inc
jle
daa
imul
cmp
test
mov
mov
push
aam
or
mov
cmp
es
pop
cld
push
fs
test
loopne
push
add
mov
push
js
cmpsb
push
push
test
pushl
xchg
push
cmp
andl
mov
inc
sub
xor
shr
mov
sub
add
jmp
jo
dec
mov
lock
add
mov
mov
sub
xor
ss
cmp
lret
push
xlat
pop
add
mov
lcall
call
adc
ficoms
ret
into
call
fisttps
loopne
movb
lds
stos
push
faddp
fwait
xchg
mov
aas
bound
xchg
jae
lahf
clc
sub
push
dec
mov
push
aas
mov
xchg
sbb
lock
sbb
js
mov
push
in
nop
rcl
mov
stos
sub
lret
out
lock
or
mov
pop
sub
xchg
clc
inc
fcomps
xchg
lahf
inc
xchg
inc
xchg
movzbl
lods
pushf
jmp
sar
jmp
dec
stc
cld
fildll
fadds
cmp
sahf
jl
mov
outsb
cmc
and
outsl
sbb
cs
sub
popa
sbb
fstpl
jecxz
mov
pop
pop
or
in
sub
call
imull
test
and
mov
jg
enter
cmp
cmp
jbe
or
imul
mov
dec
and
fiadds
push
jl
movsl
pop
adc
sub
fcoml
bound
pushf
movsl
add
add
test
add
pushl
call
mov
std
stc
orl
std
pusha
imul
mov
int
cmp
mov
insl
jo
int
int3
adc
shl
ja
mov
xor
fisttpl
movsl
nop
arpl
ss
in
ljmp
xor
inc
popf
jo
pop
in
insb
lods
pushf
outsl
pmulhuw
iret
in
in
fadds
push
pop
and
cmpb
or
ljmp
sub
lock
push
pop
push
push
stos
push
add
add
pop
scas
aad
aad
adc
add
ret
mov
or
xchg
aad
fmul
xlat
jmp
lahf
mov
pop
sub
push
sub
ja
xchg
in
fcoms
sti
xchg
filds
mov
ret
mov
adc
aam
dec
xchg
je
inc
or
ret
cmpsb
add
xlat
int3
sbb
or
in
js
xchg
lret
in
dec
aam
xlat
negl
push
fsubr
daa
out
out
loopne
push
mov
in
ja
test
xor
cmpsb
pop
xor
aad
push
add
es
push
mov
cld
shlb
mov
fcoms
out
out
test
xlat
cmc
or
mov
nop
rol
push
pop
xchg
fsub
out
out
cwtl
mov
mov
inc
xlat
mov
lret
xchg
push
sub
lods
push
push
xlat
in
mov
ljmp
push
dec
mov
out
mov
rclb
mov
movl
nop
test
dec
fsubs
push
mov
mov
push
not
add
out
pop
lret
push
push
out
fdivs
mov
mov
inc
dec
fsubrs
cmc
out
jo
xchg
nop
and
vaddsd
out
cwtl
aam
jne
jne
test
addr16
fdivl
shrb
push
jg
imul
mov
dec
cmpsl
shl
xchg
jb
mov
xchg
fnclex
inc
dec
out
js
push
sub
callw
mov
or
inc
mov
push
dec
in
xor
es
mov
and
sbb
sbb
enter
lea
out
in
push
pop
push
mov
mov
in
int3
testl
mov
in
rclb
xor
and
loopne
out
idiv
push
sbb
jae
call
inc
in
cmp
push
fcoms
addr16
push
dec
rcrb
invd
pushf
std
and
fcomp
pop
insb
fdivs
mov
in
cmpsl
cmp
fnstenv
jne
sub
ficoml
pcmpgtd
mov
outsb
xchg
in
call
cmc
cmp
leave
je
sub
mov
ja
jne
xchg
push
push
int
inc
mov
call
int
arpl
mov
push
mov
inc
mov
xlat
aam
mov
cmpsb
or
push
test
xlat
test
lret
and
imul
in
ja
push
js
das
leave
rcll
cmpsb
cwtl
hlt
int3
xchg
in
push
xor
out
adc
pop
leave
add
cld
jmp
das
scas
sysexit
mov
data16
and
lret
push
cmp
cld
in
aad
shrb
push
frstpm(287
adc
add
inc
push
mov
cmp
sub
fsubs
mov
jecxz
mov
push
mov
lahf
out
push
xchg
shrb
fldenv
lds
mov
cmpsl
cmpsb
repnz
jo
nop
fadds
xacquire
sub
notl
out
and
out
mov
movsb
dec
aad
insb
clc
mov
stc
mov
leave
lea
push
sbb
rolb
and
in
ljmp
es
jmp
div
push
data16
sbb
out
ret
std
or
daa
pop
push
pop
pushf
push
cmc
fs
lock
fcoml
add
mov
sahf
call
push
pop
push
mov
ja
adc
ret
in
xchg
js
dec
in
sbb
movsb
push
xlat
aam
in
fisubrl
mov
sbb
fistpl
fstpt
xlat
sbbl
add
ds
mov
gs
leave
in
addr16
pop
in
lods
pop
push
fldt
cmpsb
in
in
ficoml
out
mov
mov
out
xor
and
and
aam
xchg
jo
push
cs
fucomip
in
lahf
xchg
out
push
test
mov
cs
cmpsl
gs
mov
out
inc
xchg
pop
sub
push
and
or
mov
es
jecxz
push
lds
and
lea
mov
daa
sub
nop
pop
andb
jbe
dec
cmpsl
add
dec
adc
arpl
inc
aam
and
in
cs
adc
xor
jecxz
ss
rcr
out
mov
push
aad
mov
inc
call
imull
dec
xchg
cmpsl
sti
add
mov
inc
in
testl
subb
or
push
negl
push
leave
lea
stos
push
inc
test
pop
in
out
mov
mov
in
pop
push
dec
cwtl
insb
addr16
pop
add
inc
out
fcom
cmpsl
out
cs
in
aas
fnstenv
out
pop
dec
ret
push
pop
fimuls
mov
xchg
ret
xchg
sbb
addr16
and
call
fimull
mov
pop
test
inc
in
push
fmuls
movsb
mov
in
or
mov
in
insb
call
movsl
in
aaa
push
aas
dec
clc
push
xchg
mov
jae
jmp
mov
movsb
imul
xchg
xchg
xor
call
hlt
fld1
fsubrs
xor
xchg
gs
dec
call
push
in
nop
addr16
xchg
push
push
xor
test
adc
movsb
push
mov
inc
call
ret
in
push
dec
lds
or
pushf
call
call
dec
filds
pop
in
addr16
cwtl
bound
mov
inc
lcall
aaa
ficoms
push
repz
push
data16
pop
iret
or
notl
fnsetpm(287
lea
in
push
pop
ja
lahf
mov
mov
test
xlat
addr16
push
ret
psllw
in
loop
push
ss
xchg
push
push
push
ret
cmpsl
sbbb
cmp
out
pop
aad
push
pop
fisubs
push
push
out
and
ss
fcoml
xchg
mov
sbb
imul
mull
ret
cmp
and
add
push
and
pop
fisubl
addr16
aaa
mov
loopne
in
notl
jmp
jmp
lds
adc
push
insb
sbb
xchg
push
lds
inc
mov
ljmp
push
and
jbe
cmpsb
and
insb
out
mov
cwtl
mov
leave
je
sub
xchg
addr16
mov
dec
fcompl
js
sub
jecxz
shlb
cmp
pop
mulb
aad
mov
cmp
push
es
push
pop
push
xlat
xchg
push
pop
div
mov
addr16
ja
ficoml
mov
cmc
pop
push
xlat
ss
lret
and
ss
lds
push
fimull
gs
mov
data16
dec
mov
inc
cmpb
aad
in
ss
mov
imul
movsb
mov
in
push
mov
xchg
in
iret
push
push
cwtl
gs
sub
pop
notl
ljmp
in
shll
sbb
movb
xchg
sub
int
xchg
notl
xlat
lret
hlt
dec
inc
stos
push
out
icebp
mov
cmp
fistl
daa
loopne
clc
push
mov
ret
out
mov
out
cmc
or
adc
push
aad
add
cmc
add
fistl
pop
aaa
nop
in
daa
push
shrb
adc
into
mov
push
push
lds
inc
sub
mov
fmulp
pop
ret
jmp
mov
movsl
pop
push
push
fsubr
mov
push
ljmp
xor
pop
stos
push
xchg
nop
incb
mov
cs
in
notl
out
cs
jbe
inc
mov
mov
out
pop
push
pop
clc
mov
leave
mov
push
sti
lret
inc
cmc
pop
pop
lods
push
repnz
pop
pop
in
mull
aas
pop
leave
lcall
fadds
movsl
loopne
xchg
movsb
out
in
push
adc
push
add
add
dec
or
mov
ds
in
cmc
and
or
insb
xchg
faddl
adc
inc
psadbw
mov
daa
push
mov
push
mov
test
bound
mov
in
push
dec
cwtl
insb
data16
in
insb
add
push
out
in
aad
out
cs
in
aas
notl
aaa
jecxz
insb
push
xchg
out
xchg
out
test
inc
mov
cmp
pop
xchg
mov
in
fwait
into
fs
aaa
in
cmpsl
push
and
pop
inc
je
insb
lahf
push
fs
test
dec
xchg
push
pop
mov
push
inc
imul
or
push
push
and
pop
push
je
sub
ffree
je
push
lds
xchg
ja
push
mov
call
lds
adc
notb
fisttpl
lea
lds
in
scas
push
out
xchg
cmpsl
fadd
push
pushf
pop
in
mov
shll
mov
gs
dec
out
adc
sahf
test
inc
cli
mov
js
xor
sub
ja
shr
call
js
sub
push
xor
js
push
gs
jecxz,pn
adcb
pop
push
mov
fiaddl
stos
push
testl
fcmovnb
pop
inc
add
in
mov
dec
xchg
inc
in
dec
inc
stos
inc
jp
into
in
idivl
daa
and
mov
leave
lea
sub
inc
add
in
fdecstp
ret
push
pop
fiadds
push
push
xor
aad
add
or
xchg
aas
addb
sbb
repz
out
adcl
repnz
pushf
dec
pushf
push
push
testl
test
mov
shl
shlb
xor
ja
mov
xchg
mov
pop
imul
mov
out
in
int
hlt
or
out
rcrb
out
push
sub
xchg
not
jp
cmpsb
adc
add
cwtl
push
or
imul
nop
test
adc
insb
xlat
in
mov
xchg
cmc
jo
imul
mov
xchg
ja
movsl
sub
cmpsl
mov
jp
call
ss
outsl
insb
cmpsl
lods
in
jmp
adc
data16
jp
mov
out
in
jae
jmp
push
pop
call
push
lds
and
js
outsb
sub
mov
mov
out
mov
aas
dec
clc
xchg
pop
jnp
push
loopne
xor
push
decb
clc
fcmovne
lea
lock
in
mov
dec
clc
inc
sub
stos
add
push
data16
movsb
addr16
notb
dec
adc
sbb
pop
add
sub
fimull
lock
clc
negb
mov
leave
imul
aas
pop
or
add
cmp
clc
add
iret
in
lret
mov
leave
in
adc
mov
out
inc
call
ret
in
gs
pop
inc
orb
pop
mov
lret
arpl
mov
nop
mov
aad
loope
jmp
cmc
or
xlat
in
sub
std
or
in
vmovhlps
aaa
sbb
cmc
aaa
inc
ss
xchg
xlat
data16
mov
lea
sti
dec
cmp
or
cmpl
push
mov
mov
push
push
mov
or
mov
mov
sub
mov
add
xchg
bswap
inc
push
cmpsl
rorb
aad
mov
addl
popl
or
push
lahf
dec
test
neg
call
push
pop
movsl
out
sub
or
inc
push
daa
add
mov
int3
xchg
shlb
test
loopne
mov
push
mov
in
xchg
aaa
ja
inc
lcall
out
lcall
sahf
test
cmpsb
pop
test
mov
daa
jecxz
flds
push
test
inc
jecxz
push
scas
jge
pop
in
ret
rorb
pop
pop
test
test
dec
jp
jecxz,pn
dec
dec
xchg
hlt
or
inc
push
mov
mov
mov
in
sub
popa
and
cld
aad
aaa
jbe
popf
movsl
lcall
addr16
insl
aaa
pop
out
fsub
jno
movsl
pop
test
jne
cmp
test
inc
orl
fmuls
arpl
push
addr16
push
testl
ljmp
je
test
xchg
lahf
push
mov
push
test
and
mov
mov
jecxz
aad
xchg
dec
inc
inc
lea
push
test
jne
ljmp
in
jb
push
mov
rorb
fcompl
rorb
mov
test
aaa
adc
movsl
out
xchg
iret
xlat
mov
or
out
and
nop
adc
pop
addr16
sbb
xlat
push
orb
andb
lods
add
dec
inc
gs
in
fcmovb
mov
add
cli
bound
xlat
inc
es
mov
adcl
jp
ljmp
nop
mov
repnz
or
in
mov
iret
dec
cmpsl
mov
sub
pop
pop
out
and
nop
fildl
cmp
je
test
mov
test
idivl
push
xchg
sub
je
test
cwtl
shlb
daa
out
adc
push
mov
out
mull
push
lahf
sti
test
push
mov
push
decl
dec
hlt
lods
inc
lahf
subl
xchg
mov
inc
fstps
dec
es
mov
test
dec
mov
push
xor
repnz
push
fisttpll
xchg
test
aad
scas
cmc
lahf
fwait
test
test
pop
lahf
push
test
testb
js
loop
fcmovnb
out
out
test
xchg
cmp
ja
es
pop
pop
xor
mov
orb
pusha
ss
in
fs
jbe
and
cmp
push
divb
push
pop
out
mov
addr16
pop
in
xchg
test
inc
nop
mov
xchg
test
int3
test
addr16
fadds
mov
out
aaa
xor
or
adc
dec
push
test
movsb
mov
push
xor
jo
xchg
lcall
adc
push
push
test
nop
xchg
cmp
mov
test
out
inc
push
or
or
fbld
in
mov
push
int3
inc
gs
roll
mov
repnz
jb
adc
fwait
insb
sbb
in
xor
int3
sub
int3
mov
add
stos
fcom
int3
in
mov
jmp
aam
fnstenv
lahf
in
mov
mov
mov
clc
addr16
out
cld
mov
daa
movsl
jp
out
test
test
mov
and
cwtl
add
mov
xchg
movsb
or
out
xchg
sub
add
mov
sarb
push
push
movl
mov
cmpsb
dec
daa
inc
jecxz
push
pop
cli
add
mov
pop
dec
out
rorb
xchg
sbb
push
fsubrs
ja
xchg
jecxz
lds
aad
pop
js
push
cmp
dec
inc
lock
push
or
int3
pop
clc
and
pop
fdivr
mov
or
insb
call
in
pop
pop
lock
hlt
loop
clc
or
in
test
insb
mov
nop
js
xchg
loop
cwtl
or
in
sub
mov
daa
mov
clc
xchg
jmp
call
or
in
push
out
push
repz
insb
pop
pop
pop
pop
js
pusha
loop
fs
in
sub
js
jl
and
add
or
or
adc
stos
adc
clc
dec
sbb
lock
out
mov
movsl
adc
push
add
adc
subb
mov
xchg
sbb
jmp
pop
daa
mov
dec
dec
mov
xchg
inc
dec
test
push
pop
shll
push
jmp
in
inc
cmpsb
stos
out
mov
jno
dec
and
test
sub
cmp
test
xchg
ljmp
mov
in
insb
push
mov
dec
call
xchg
push
dec
js
lret
ljmp
dec
xor
pop
stos
insb
push
dec
mov
push
dec
lods
sub
clc
testl
push
roll
pop
mov
lret
lods
daa
jbe
test
test
stos
lret
xlat
mov
cmpsl
test
sub
aad
insb
push
sub
mov
push
ffreep
mov
mov
mov
in
push
in
push
es
jb
adc
aaa
dec
adc
cmpsb
sub
or
inc
mov
out
xchg
xchg
insb
xchg
dec
call
data16
or
cmpsb
cmpsl
lods
xchg
jne
lret
jmp
push
stos
sub
ja
in
lds
out
xchg
inc
ljmp
jge
cld
cmp
in
xor
addr16
call
sub
or
in
sti
xchg
roll
xchg
push
leave
test
imul
pop
pop
cld
sub
int3
hlt
jmp
iret
xlat
dec
pop
in
cmp
call
lock
pop
push
nop
sub
fildll
mov
pop
aaa
inc
test
push
or
mov
cwtl
sub
pop
iret
add
push
pop
cmc
xchg
pop
sub
mov
add
cmp
out
pushf
sub
out
les
xchg
ds
cmpsb
call
inc
sbb
adc
shrl
dec
into
mov
inc
sbb
outsb
xchg
mov
arpl
mov
test
jns
orl
pop
inc
jo
jns
inc
push
xchg
gs
lds
mov
fcmovnbe
lds
mov
add
stos
push
mov
sbb
sbbl
int
fcoml
cmp
lret
repz
cwtl
daa
fdivl
mov
pop
fucomp
inc
mov
add
fildll
dec
int
loopne
gs
xchg
dec
dec
ds
outsb
mov
pop
loopne
addb
mov
push
inc
jle
lret
xor
cwtl
data16
cwtl
cmp
pop
ja
dec
test
stc
lahf
jmp
xchg
aad
sbb
and
pop
xchg
sbb
mov
pushf
sub
xchg
mov
and
mov
test
cmp
out
out
fdiv
pop
das
pop
xchg
push
stos
dec
movsl
inc
mov
jbe
popa
sub
xchg
and
xchg
sub
push
gs
jbe
nop
xor
js
mov
lods
cwtl
sub
out
shrl
and
inc
or
insb
out
xabort
int
pushf
push
cwtl
xor
sub
mov
notb
mov
jmp
ljmp
in
insb
pop
mov
add
int3
nop
imull
insl
add
push
inc
loopne
lods
pop
pop
xchg
push
inc
pop
cwtl
clc
sub
xchg
popf
push
xchg
cmp
loop
movsb
or
insb
sbb
or
fmuls
jo
and
popa
ficoms
sub
pushf
xchg
jmp
or
push
sub
js
cmpsb
inc
insb
test
xchg
mov
lock
mov
mov
and
adc
xchg
ficoms
loopne
insb
jbe
xchg
xorl
outsb
fs
xchg
sbb
xchg
fmul
xlat
mov
pop
fcompl
movsb
out
push
pop
iret
popa
jecxz
scas
dec
pop
sub
push
loopne
cmp
pushf
sub
push
cwtl
stos
add
xchg
lcall
push
test
cmpsb
jne
arpl
adc
aaa
pushf
cwtl
mov
add
pop
inc
pushf
pop
mov
pop
out
pop
inc
fisubl
sarl
in
push
imul
hlt
data16
jg
outsl
pop
imull
out
data16
lahf
movsb
xlat
mov
in
inc
dec
jecxz
negl
sbb
cmc
in
adc
stos
pop
cwtl
dec
xchg
movsb
punpckhbw
stos
inc
mov
cmp
test
inc
pop
mov
decl
fcoms
lods
fcomi
pusha
je
jmp
add
push
jno
insb
das
xchg
insb
add
sub
negb
js
icebp
rol
iret
cmp
xchg
xchg
mov
fdivs
stc
lret
sub
inc
cs
or
ds
cltd
fsubrs
clts
into
arpl
outsl
pop
cmp
mov
dec
fwait
cmp
or
ss
pop
fiaddl
xor
xchg
dec
out
and
push
jnp
in
mov
stc
inc
adc
mov
and
sub
add
jmp
shl
mov
loope
push
inc
sbb
cli
mov
mov
dec
ljmp
out
and
rclb
fdivrs
jmp
lcall
dec
pop
add
loop
movsb
out
ss
mov
mov
ret
lahf
xor
js
fwait
or
loopne
stos
mov
fsubr
push
in
dec
jbe
je
add
push
or
insb
das
out
fbstp
movsb
push
sbb
jmp
pushf
in
out
dec
js
xchg
sbb
movsb
push
jp
sub
fsubrl
std
cwtl
cmp
mov
es
cmp
mov
inc
push
sbb
xor
or
push
cwtl
aad
leave
clc
push
ret
or
dec
lcall
call
fcoml
inc
js
mov
xchg
pop
inc
in
loope
adc
ljmp
lret
rcl
mull
or
and
gs
daa
int
xor
movsb
cs
insb
jnp
adc
pop
inc
xor
popl
xchg
jbe
push
movsb
dec
out
pusha
dec
fwait
inc
jmp
mov
xchg
pushfw
fidivl
js
or
inc
out
call
lods
xchg
inc
cmp
push
xchg
sub
xor
push
xchg
jl
imul
aad
movsl
fs
call
xchg
fldenv
scas
sub
sbb
rol
mov
cmovb
pop
xchg
or
imul
sub
sub
js
sti
insb
push
int
cmc
repz
mov
dec
mov
lock
mov
xchg
pushl
push
jmp
jo
iret
or
dec
mov
je
dec
testl
push
sub
cwtl
ss
lock
jmp
xchg
inc
inc
mov
xor
ss
jmp
push
roll
or
push
pop
pop
aam
mov
push
es
out
fmull
orb
cwtl
cmp
lcall
loopne
and
fidivs
jmp
xchg
stos
mov
cmp
dec
movsb
jmp
test
push
pop
dec
cmc
hlt
lret
setae
pop
out
mov
sub
dec
cmp
out
xchg
push
mov
cmpsl
xor
push
mov
call
stos
pushf
in
mov
mov
inc
shrb
ja
dec
mov
arpl
pop
iret
sbb
adc
xlat
push
test
or
repz
out
aam
pop
ja
mov
add
int3
and
lret
push
adc
push
xlat
testl
push
clc
repz
daa
inc
cmp
inc
cwtl
orl
pop
pop
push
cwtl
mulb
nop
lret
inc
dec
jg
notl
call
sbb
inc
fwait
jg
dec
testb
or
push
je
cwtl
repz
mov
cld
or
push
push
xchg
xchg
push
mov
and
adc
or
xor
add
sbb
xchg
or
add
outsb
cwtl
lods
push
aad
aas
int
shll
push
repz
jmp
lock
gs
cld
jno
insb
std
movsl
repnz
pop
or
sub
fcomps
dec
lock
fdiv
or
dec
cwtl
fldt
gs
test
iret
cwtl
cmc
jbe
cmpsl
inc
xor
push
fucomi
sbb
iret
or
or
mov
aad
int3
fwait
pop
stos
ds
js
int3
hlt
or
into
bswap
fmuls
aad
out
sbb
ljmp
or
or
mov
sbb
testl
or
mov
or
aaa
insb
xchg
callw
cld
rcrl
mov
pop
jo
xor
clc
fistps
pop
mov
xchg
xor
push
push
insb
int
dec
mov
cwtl
movb
out
enter
xchg
or
xchg
inc
gs
pop
or
xchg
femms
dec
js
pop
lret
or
imul
repz
mov
push
lea
or
mov
push
in
adc
sbbl
xor
pop
shrb
clc
data16
out
sti
sbb
out
mov
or
ja
jnp
push
daa
lcall
insb
push
dec
data16
out
push
fstpt
mov
imul
fcomp
cmp
cwtl
adc
andb
mov
mov
or
mov
sahf
test
mov
and
out
cwtl
cmp
pushf
call
clc
mov
cmp
hlt
les
aad
cwtl
push
iret
hlt
test
in
aam
and
dec
ljmp
insb
call
js
fcmovnu
pop
cmc
js
xchg
mov
jecxz
lock
testl
sub
push
add
push
test
pop
in
clc
je
shr
nop
sub
xabort
rcll
inc
inc
ljmp
mov
cmp
mov
or
pop
dec
mov
add
cmp
rol
mov
add
jecxz
adc
orl
clc
in
or
inc
in
sti
imul
clc
aaa
addr16
notb
lahf
loop
imul
mov
sbb
hlt
call
scas
xchg
subb
dec
xchg
push
mov
or
mov
jg
das
js
lret
xor
imul
mov
pushl
gs
mov
jp
push
xchg
test
imul
hlt
into
fwait
pop
fsub
jae
negl
push
pop
mov
cmp
gs
fwait
adc
cmp
iret
cmp
repz
dec
repz
mov
pop
sub
icebp
pop
pop
idiv
cwtl
jae
iret
dec
call
cmc
cwtl
mov
pop
daa
pop
sub
int3
jg
arpl
xchg
inc
pop
dec
icebp
loopne
cmp
call
arpl
mov
lods
fisttpl
iret
sub
sub
inc
mov
mov
lcall
push
xchg
xchg
push
gs
imul
jmp
fimull
or
stos
push
sbb
xor
ljmp
fwait
pop
imul
mov
xchg
cmp
mull
push
sbb
xchg
dec
testl
sbb
popa
push
push
adc
push
mov
call
or
lea
push
ljmp
outsl
jnp
gs
fsubs
lcall
mov
mov
subb
pop
loop
data16
sbb
xchg
rolb
lea
repz
dec
nop
testb
iret
dec
mov
adc
jg
cmc
mov
fldt
shll
lret
cmc
push
mov
nop
insb
jbe
mov
sti
pop
notl
cmc
pop
out
daa
pushf
push
xor
test
icebp
jg
sub
pop
out
adc
inc
gs
out
mov
mov
pop
pop
dec
sti
pop
fwait
pop
sbbl
dec
aad
outsb
sub
mov
shll
test
and
push
out
and
sub
enter
mov
cld
in
mov
mov
insl
dec
mov
lods
jne
push
aad
jnp
jl
fadd
mov
aad
adc
pop
call
adc
aaa
dec
out
push
aad
pop
sahf
into
test
rolb
nop
jmp
sub
mov
sbb
fcomip
sub
pushf
jmp
js
imul
in
in
subl
cwtl
pop
xchg
cmp
mov
xchg
insb
pop
and
scas
inc
lret
jae
dec
cmpsl
stos
mov
cld
into
daa
insl
mov
xchg
aad
fstpt
je
mov
sbb
repnz
mov
or
inc
xchg
pop
stc
pop
mov
addr16
mov
sub
xchg
xorb
dec
aam
mov
insb
and
mov
mov
xchg
push
jo
cmp
push
cbtw
or
les
push
pop
and
into
mov
or
mov
fwait
mov
aad
nop
push
xchg
sbb
xchg
xlat
shlb
add
addr16
pop
jmp
fstl
push
stos
dec
push
sbb
ret
addr16
stos
hlt
scas
jbe
cbtw
mov
or
or
push
xor
imul
hlt
xchg
mov
data16
inc
pop
flds
lcall
insb
and
mov
clc
rcll
xchg
mov
jp
mov
aam
and
dec
rorb
xchg
sbb
lods
call
scas
shrb
xchg
cld
xchg
pop
jo
adc
pop
pop
mov
or
daa
test
rcrl
jl
test
ficoml
sub
rorb
xchg
mov
test
cmp
adc
inc
push
aam
sbb
roll
lcall
push
push
sbb
xor
mov
call
xchg
addb
dec
dec
xor
push
mov
jg
testl
scas
mov
sbb
into
lds
mov
sub
repz
dec
and
addr16
rolb
adc
add
mov
xchg
add
inc
push
jl
fsubrs
out
in
test
push
cld
mov
add
call
dec
inc
idivl
jae
movsb
add
mov
cmp
enter
lret
out
fs
pushf
pusha
daa
inc
jnp
fiaddl
and
rcrl
nop
xchg
aad
mov
mov
fimull
push
dec
pop
gs
sbb
test
jmp
out
mov
daa
add
out
test
movsl
bts
push
clc
sub
or
pusha
sbb
mov
out
sbb
mov
int
fwait
mov
addr16
mov
mov
mov
cmpsb
rep
pop
push
sti
dec
jle
xchg
lock
push
in
iret
xchg
ficoml
xchg
addr16
mov
inc
or
in
movsl
xor
dec
push
hlt
lret
push
xlat
dec
imul
aaa
into
mov
test
adc
push
jo
mov
or
dec
orb
not
test
jg
out
mov
mov
insb
mov
mov
cmp
or
push
jae
cmp
cmpsb
clc
or
movsl
mov
push
lret
lret
adc
push
push
sti
add
fwait
std
mov
ja
fisttpll
add
sbb
add
mov
iret
mov
sub
push
cli
xchg
test
cmc
cwtl
mov
or
shrb
push
sbb
cmp
or
ja
out
ja
pop
adc
xchg
testb
popa
adc
enter
popf
adc
test
test
test
pushf
or
xchg
xchg
xchg
icebp
ljmp
cwtl
dec
dec
pop
aad
lods
dec
push
aaa
jmp
test
xchg
shrb
adcb
es
inc
sbb
stos
imul
into
test
and
or
cld
inc
aaa
or
pop
std
nop
pop
dec
or
test
fidivrl
mov
sbb
loopne
xchg
mov
dec
cmp
lret
js
aad
adc
xlat
js
out
inc
fidivrl
mov
inc
mov
mov
cwtl
add
cmp
js
dec
add
negl
inc
pop
btrl
movsb
rcrb
rcl
nop
jne
pop
push
fiadds
push
push
enter
dec
jle
bound
xor
lds
dec
popw
pushf
stc
stos
ret
or
inc
push
inc
addr16
test
sub
xchg
mov
sbb
cld
push
int3
sbb
mov
inc
xor
fcomps
in
pusha
xchg
inc
js
flds
push
outsl
ret
loopne
fidivs
cmpsl
inc
cwtl
fs
ja
ljmp
outsl
iret
mov
cmpsb
bound
insl
div
pop
mov
pop
out
je
xorb
dec
dec
ret
fwait
je
pop
sub
xchg
data16
scas
rcrb
test
xchg
pushl
mov
push
out
test
pop
mov
stos
jne
sahf
out
sub
fcompp
mov
mov
push
adc
ja
mov
lds
adc
test
xor
imull
movsl
test
sahf
imulb
pop
loopne
mov
push
and
out
lods
insb
fadds
pop
dec
push
lods
mov
lods
aad
ret
cwtl
lret
cwtl
add
mov
pop
mov
leave
dec
add
out
adc
jle
enter
inc
or
sbb
adc
mov
jne
push
stc
or
addr16
xchg
cmpsl
lods
scas
insb
adc
jecxz
sub
inc
clc
or
sub
leave
xchg
mov
addr16
out
popf
cmp
nop
shl
or
shrb
setge
testl
pop
xchg
jo
add
test
mov
rorl
out
mov
out
jns
scas
insb
leave
int3
test
dec
sub
pop
in
fbld
insb
add
aam
notl
mov
scas
mov
inc
dec
inc
adc
ret
jl
or
push
jo
sahf
stos
stos
inc
cwtl
mov
jg
push
fmull
nop
out
test
dec
pop
enter
imul
sbb
adc
scas
or
rolb
mov
dec
mov
pop
fadds
jmp
mov
and
or
mov
fiadds
pusha
jne
cwtl
iret
xchg
xor
pop
ljmp
fimull
cmp
testl
std
pop
dec
push
xchg
mov
mov
mov
cld
or
jmp
sahf
bnd
es
mov
push
push
aad
sub
std
pop
mov
pop
movsl
scas
es
cmpsb
pop
shll
xchg
mov
mov
ja
xchg
inc
jmp
xlat
mov
aad
xchg
ja
xchg
xor
in
mov
imul
mov
fimull
lods
adcl
test
iret
add
addr16
push
aaa
xchg
inc
ljmp
mov
iret
std
xchg
lcall
enter
mov
movl
inc
pop
je
psrlq
dec
mov
inc
xchg
movsb
or
sub
out
rclb
rcr
in
push
add
and
mov
nop
mov
hlt
inc
dec
iret
lods
xor
lcall
iret
adc
lret
scas
nop
cwtl
dec
testl
push
mov
mov
popf
push
into
cli
out
dec
insb
out
dec
add
xlat
addr16
call
loope
push
movsb
or
jb
fcmovbe
sub
adc
xlat
mov
push
pop
mov
testl
and
lods
fwait
push
sbb
inc
scas
js
test
stos
inc
mull
mov
ss
dec
dec
dec
clc
push
xchg
lahf
sub
dec
or
pop
aad
sbb
inc
addr16
mov
hlt
or
lock
in
mov
in
rcr
ds
fsubs
push
packssdw
scas
pusha
push
stos
cmpsb
add
fidivrl
movsb
inc
sub
fucomp
mov
mov
loopne
repnz
push
add
ss
add
inc
pop
xchg
pop
mov
mov
sahf
lret
xchg
pop
daa
clc
gs
repnz
call
and
push
aad
dec
and
sbb
mov
idiv
mov
sub
pop
mov
mov
push
adc
ud0
or
push
xchg
call
nop
imul
div
sbb
out
mov
ficoms
cmpsl
call
inc
iret
mov
pop
xchg
mov
pop
imul
rcrl
xchg
nop
sbb
adc
dec
and
lcall
sub
inc
adc
repz
pop
sbb
jmp
mov
test
xchg
test
fldenv
hlt
push
push
ljmp
pop
xorl
xlat
pop
ss
xor
inc
mov
insb
nop
or
mov
xchg
test
data16
rcrl
mov
pop
test
out
or
out
or
bound
cld
or
loopne
lea
inc
lods
dec
sarb
xlat
and
pop
aas
jbe
test
ja
in
rorl
inc
add
test
leave
lock
dec
mull
test
xchg
xlat
pop
jmp
jg
pop
pop
cwtl
push
dec
xchg
xchg
dec
imul
add
jne
pop
test
xor
rcrb
xlat
out
test
jns
cwtl
cmpsb
dec
loopne
xor
pushl
xlat
cwtl
add
std
xchg
pop
fdivrs
push
outsb
lahf
inc
inc
ja
cwtl
xlat
push
push
cmpsl
sbbb
sbb
dec
les
or
repz
mull
vorpd
in
jne
cmpsb
xlat
add
adc
out
nop
dec
inc
insb
mov
js
pop
ss
aam
sub
sarb
lahf
call
xor
aad
jmp
stos
push
jp
sub
push
cmpsb
ja
out
xchg
dec
inc
addr16
lcall
jle
pop
pop
pop
pop
adc
rcl
or
out
fcmovnbe
fbstp
inc
inc
adc
sbb
insb
cmpsb
push
in
sti
dec
pop
addr16
movsl
mov
bound
cmpsl
pushf
pop
mov
adc
push
pop
lds
mov
push
push
pop
pop
gs
adc
js
in
pop
xchg
call
movsl
or
bound
sahf
add
ljmp
outsb
mov
mov
out
push
sarb
xlat
call
and
pop
xlat
js
xchg
shrl
iret
mov
mov
or
xor
push
jo
xchg
inc
ljmp
cwtl
insb
mov
add
test
pop
and
inc
mov
or
pop
xchg
jbe
fstps
setae
in
adc
xchg
aas
pop
outsb
mov
and
sub
or
dec
test
mov
or
adc
push
or
mov
iret
inc
adc
mov
xchg
nop
or
and
and
idiv
inc
xchg
cmp
in
out
or
mov
pop
sub
xchg
outsl
pop
mov
dec
mov
dec
or
push
pop
stos
idivb
cmpsl
sbb
lock
cwtl
push
cmp
dec
pusha
mov
dec
rorb
pusha
mov
imul
fcoms
imul
xchg
xlat
cmpl
mov
jle
xchg
in
push
scas
or
pop
adc
in
test
mov
mov
mov
sub
jo
inc
cmpsl
pushf
or
dec
rclb
inc
in
jbe
xchg
jmp
push
dec
clc
pushf
into
xchg
addr16
mov
inc
dec
cmc
mov
shll
cmp
movsb
mov
fmuls
aad
dec
mulb
inc
out
xchg
or
push
out
xor
lret
sbb
cmp
out
jp
sbb
movsl
cld
mov
cmp
insb
pop
xchg
sbb
push
test
mov
into
aaa
test
xor
push
mov
call
push
dec
out
test
mov
dec
sub
pushf
dec
imull
loop
mov
push
adc
in
adc
xchg
inc
fs
mov
inc
push
push
ja
adc
sub
xor
sbb
int3
mov
nop
cmc
cli
push
or
dec
add
mov
or
orl
or
mov
sbb
or
mov
insb
xchg
inc
xor
sub
and
cmp
jle
mov
movsl
cld
mov
inc
in
mov
jo
xchg
add
cmp
push
repnz
sub
push
or
pop
or
inc
sbb
sub
aam
inc
stos
and
pop
push
cmp
xor
je
nop
dec
movsb
adc
or
hlt
in
sub
pop
push
push
lcall
lock
pusha
hlt
push
sbb
test
out
xor
call
mov
fs
or
push
mov
xlat
push
mov
mov
mov
mov
mov
in
std
fstpl
lret
fcomps
fisttpll
or
pop
inc
xchg
jb
iret
sbb
mov
mov
cwtl
mov
js
mov
mov
mov
push
push
je
and
in
in
mov
sbb
lahf
pop
mov
sub
jne
lret
xchg
insl
dec
sahf
dec
inc
sbb
lock
iret
jbe
xchg
pusha
mov
je
aad
cld
lods
lods
mov
fimull
xchg
test
cltd
daa
les
lds
out
lock
push
inc
jo
sbb
in
ljmp
cmp
sbb
sti
pop
aad
int3
mov
dec
insb
sbb
data16
mov
repnz
fstpt
pop
fadds
mov
add
pop
xchg
xchg
or
pop
sbb
hlt
test
jge
xchg
xchg
adc
cltd
aad
or
push
dec
aam
mov
iret
lds
mov
adc
fldt
movsb
aas
mov
cwtl
inc
rolb
rorb
xchg
js
iret
mov
jb
xchg
sub
adc
xchg
stc
loope
pop
add
test
cwtl
ss
iret
out
testl
jmp
lea
cmpsl
fs
xlat
jb
pop
mov
dec
addr16
call
test
push
jae
cmc
pop
movb
jecxz
mov
jmp
xor
ds
xor
adc
pop
stos
cmc
int3
mov
or
cmc
sub
orl
data16
iret
mov
push
ja
aaa
dec
dec
cwtl
xchg
mov
ja
xor
test
dec
ds
out
outsl
dec
test
or
jl
inc
push
data16
daa
push
xor
push
pop
test
scas
test
push
dec
mov
andb
mov
aad
das
mov
mov
call
test
test
sti
aad
pop
nop
xchg
pop
lods
cmpsb
ss
pop
pop
push
daa
xor
sbb
lds
cmpb
pop
imul
adc
stos
push
movsb
test
adc
pop
or
mov
mov
add
pop
cwtl
xlat
mov
out
and
xchg
pop
insl
add
lods
hlt
test
push
push
sbb
xchg
fisubrs
fwait
insb
pop
pop
sub
push
insl
lret
sbb
adc
dec
or
and
xchg
xor
mov
mov
enter
add
idivl
lea
pop
dec
cwtl
out
subl
adc
into
daa
push
ljmp
test
clc
or
lods
insb
mov
inc
cwtl
xchg
cld
mov
cmp
push
inc
imul
and
xor
jmp
mull
pushf
in
stos
push
insb
mov
push
pop
frstor
nop
add
and
stos
push
addr16
clc
js
sbb
mov
aas
jp
out
aad
lret
and
pop
js
movsb
pop
pop
push
filds
lret
dec
test
mov
sbb
mov
push
lds
je
pop
mov
scas
mov
mov
mull
rcrl
in
xchg
popa
nop
mov
inc
add
jne
mov
stos
mov
xchg
or
call
mov
push
mov
push
pusha
ret
sbb
adc
test
xchg
sub
rcll
jp
mov
rorb
addr16
hlt
sbb
xchg
call
insb
popf
pop
pushf
dec
js
or
test
imul
pop
scas
adc
daa
xchg
iret
std
data16
jbe
or
xor
daa
aad
xlat
adc
test
and
js
ret
jbe
push
out
ljmp
and
fwait
xchg
testl
addb
xchg
adc
popf
cli
test
pushl
push
pop
pop
notl
not
cwtl
push
lret
mov
sbb
movsl
mov
pusha
ljmp
dec
data16
cwtl
daa
push
out
imul
jl
int3
cmpsl
out
das
push
mov
mov
ror
addr16
sbb
sbb
addr16
mov
fistpl
xchg
inc
sub
hlt
xchg
je
push
add
cs
and
lret
xor
mov
test
lds
shrl
out
or
movsl
test
adc
sub
lret
xor
mov
add
mov
mov
rclb
sbb
mov
mov
mov
hlt
push
out
dec
lock
pop
hlt
stos
xchg
dec
lods
lods
pop
fs
lret
jae
hlt
dec
cmp
sub
pop
and
pop
in
test
test
mov
xor
test
add
push
jmp
adc
cmpsb
rorb
sub
pusha
xor
iret
jno,pt
sub
call
gs
cltd
adc
sub
xchg
aaa
out
jge
pop
fmuls
data16
jno
cwtl
aad
sub
or
mov
shrb
out
add
xchg
cmpsl
outsl
insb
jl
fistpl
mov
movsl
insb
mov
out
cwtl
mov
inc
push
scas
inc
pop
sbb
shll
test
outsl
mov
pop
mov
inc
js
xchg
xchg
data16
mov
cmp
fdivrl
jl
clc
lds
inc
or
test
sub
iret
pop
sahf
in
in
data16
in
test
out
or
mov
cmp
pop
dec
xor
es
iret
cmpl
sub
inc
pushf
test
fs
insb
mov
inc
or
sub
sbb
inc
or
pushf
fstps
fwait
addr16
xlat
or
mov
add
call
imul
push
movl
lods
sub
sbb
push
sbb
mov
or
or
or
in
jbe
test
mov
push
or
mov
cmc
cli
adc
ret
int3
test
cmp
test
sub
xor
add
outsb
mov
ret
addr16
cli
insb
pop
adc
mov
das
stos
mov
xchg
leave
pop
mov
adc
mov
or
pushf
enter
sti
dec
adc
mov
jne
dec
push
inc
dec
ja
insb
ja
mov
adc
in
loop
cmp
inc
imul
and
divb
mov
xlat
lock
lretw
push
das
xor
inc
jbe
cwtl
xchg
orb
xchg
cmp
xchg
scas
cli
xchg
inc
inc
daa
in
iret
pop
pop
sbb
ja
pop
mov
cmp
xlat
andl
lods
sbb
out
dec
mov
or
insb
sbb
xchg
out
dec
push
push
inc
push
enter
xlat
xchg
rorl
mov
mov
fimuls
xchg
cld
dec
push
in
popw
pop
call
push
pop
cmc
jo
int3
clc
push
lock
imul
lock
sbb
sub
add
fsub
or
push
push
sbb
cwtl
adc
leave
insb
hlt
ja
leave
add
and
inc
out
or
xchg
sub
xor
repz
mov
fidivl
jl
inc
sub
adc
es
pushf
lret
push
pop
in
inc
repnz
lds
stos
mov
add
lds
aad
mov
into
mov
push
imul
dec
dec
scas
sub
imul
aaa
decl
dec
jp
fstpt
mov
jl
pop
jecxz
dec
pop
dec
adc
or
mov
test
xchg
sbb
xchg
aad
inc
popa
imul
pop
jl
cmp
in
add
testl
movsb
mov
or
call
xchg
flds
rolb
faddl
sahf
lods
rorb
push
xor
hlt
movsb
fcomip
je
fwait
jg
inc
sub
push
xchg
aad
lret
push
in
out
lock
aad
clc
xor
out
rorb
mov
dec
in
fwait
xlat
repz
or
dec
repnz
jae
and
jnp
cmp
mov
test
movsb
or
xor
cmp
sub
fs
cwtl
out
shrl
push
iret
jl
or
je
xchg
js
loop
dec
adc
sub
imul
pop
sub
jmp
nop
or
flds
xchg
xchg
imul
rorl
and
cwtl
lret
xchg
or
outsl
sbb
subb
xchg
mov
mov
in
pop
and
outsl
dec
or
loope
xor
jl
iret
lret
rcrb
xlat
jne
test
lahf
ljmp
popf
divl
iret
mov
inc
sbb
mov
dec
sbb
or
jmp
dec
lret
xor
xchg
xchg
xchg
lcall
out
push
dec
cli
dec
daa
ret
pop
pop
push
pop
push
mov
pop
add
inc
or
dec
xchg
fidivrs
adc
jno
rol
and
jecxz
xchg
xchg
insb
sub
add
roll
andb
cmpsl
in
mov
inc
in
sub
orb
add
jnp
dec
push
xor
push
imul
fistl
add
adcb
fs
dec
add
add
dec
cld
dec
aas
xor
push
inc
jl
adc
mov
sbb
push
pop
inc
pop
inc
arpl
push
orb
adc
mov
out
cmp
fisubl
in
aad
stc
push
or
rcrb
cmp
lahf
popa
std
and
mov
ds
fsubs
mov
out
dec
notl
add
mov
daa
pop
addr16
bound
nop
fisubl
loopne
imulb
xchg
imul
jbe
dec
lods
pop
rolb
cwtl
xor
mov
out
cmp
lea
lods
dec
je
pop
xchg
fldcw
repz
lds
cltd
vmwrite
std
sar
add
shlb
jbe
sub
mov
sbb
push
dec
lds
lret
pop
lret
adc
pop
and
jmp
or
push
call
fwait
js
adc
scas
sbb
xchg
nop
dec
gs
mov
test
repz
out
mov
dec
dec
cs
dec
push
sub
cmpsl
out
outsl
mov
fistpl
xlat
add
adc
push
mov
pusha
jmp
iret
aad
out
add
lcall
nop
lcall
cwtl
mov
adc
insb
pusha
push
lods
xchg
jo
js
mov
push
pop
sub
rcl
pushf
mov
lods
mov
pushf
out
pushf
mov
lods
scas
adc
out
xchg
sub
iret
pop
in
fs
pop
fidivl
mov
mov
jmp
repz
imul
movsb
or
add
pop
jmp
pusha
or
xor
inc
cld
push
add
icebp
jo
or
fstl
outsl
xchg
rclb
addr16
rep
out
mov
aas
ja
repz
pop
call
mov
ljmp
or
lods
notl
pop
into
sub
pop
stos
lret
cmc
jecxz
sti
dec
test
mov
pop
xor
pop
jp
xchg
jge
lods
fisubrs
test
mov
jmp
push
add
push
iret
lods
mov
jnp
sub
imul
xchg
xchg
dec
xchg
pop
sub
cmp
xor
into
mov
divl
sbb
cmp
push
js
movsb
dec
sbbb
out
pushf
es
ljmp
imul
cmpl
sbb
lds
ret
imul
out
pop
mov
test
sub
cs
dec
dec
xchg
jnp
mov
daa
jb
outsb
push
insb
jb
in
pop
in
fwait
in
data16
push
adc
in
pop
addr16
cmc
orb
stos
xchg
js
rcrl
stos
dec
jmp
jns
or
rcll
xchg
sbb
dec
das
imul
push
cwtl
mov
mov
cwtl
dec
in
arpl
sub
dec
push
mov
mov
test
adc
pop
dec
imul
lods
ljmp
push
rorl
inc
rorl
xchg
adc
fwait
rorb
ret
mov
ret
shrl
imul
in
lods
adc
mov
lcall
fldl
stc
in
inc
adc
das
pop
mov
adc
pop
xchg
jns
inc
icebp
int
fsts
mov
mov
shrl
ficoms
out
and
hlt
stc
dec
add
stos
dec
pop
push
or
std
jmp
stos
notb
mov
mov
push
and
adc
out
sbb
dec
pop
test
sbb
jo
add
adc
scas
sub
inc
aad
cmp
mov
test
xchg
or
es
push
xor
jno
jecxz
jnp
mov
sbb
dec
mov
mov
fdivs
push
ss
jne
out
repz
insb
mov
es
nop
pop
push
dec
xor
nopl
mul
lcall
fildl
cwtl
daa
ret
pop
lea
pop
and
push
data16
or
xor
pop
in
repz
mov
lds
popf
cmp
adc
cltd
and
in
sahf
push
fcmovnbe
xor
jl
lret
iret
xchg
pop
pop
adc
sti
sbb
mov
adc
insl
pop
or
rol
pop
pop
pop
jne
arpl
fstpt
js
lea
mov
xlat
mov
jg
add
and
sbb
xchg
insb
andb
fdivr
jbe
ret
dec
cmp
push
sbb
imul
mov
mov
push
and
xchg
pop
jb
mov
mov
mov
push
sbb
add
sub
dec
aas
in
dec
mov
pop
mov
scas
int
mov
jnp
std
push
pop
mov
jae
cli
aaa
test
inc
jmp
jl
mov
or
mov
jae
push
jmp
cwtl
mov
mov
mov
mov
and
mov
dec
mov
movsb
int
fld
dec
mov
pushf
pop
or
addr16
xchg
pop
pop
cs
aaa
pop
pop
lea
lret
mov
jecxz
jmp
jecxz
cmp
jne
mov
push
mov
mov
cs
xchg
rolb
cmp
lcall
xor
mov
push
jb
nop
stos
xchg
int
fnstcw
fisubrl
push
add
nop
and
and
outsb
sbb
movntq
out
arpl
cmpsl
jnp
xor
fistl
xlat
jb
and
fwait
vmread
fs
pop
jmp
std
dec
sti
js
leave
ja
pop
xchg
xor
inc
jg
popf
and
sbb
dec
jg
mov
das
push
int
cli
cmp
cmp
jb
mov
pop
subl
or
push
jg
mov
and
inc
jnp
ret
orb
sbb
test
mov
out
mov
mov
xor
jnp
dec
mov
clc
pop
jecxz
and
test
pop
add
xchg
into
les
cmpsb
daa
add
in
test
sti
sub
push
mov
sub
scas
sbb
mov
insb
mov
mov
and
les
push
jmp
and
sbb
aaa
outsl
aad
and
xchg
roll
scas
cmpsl
xchg
outsb
adc
or
sub
push
add
pop
sub
les
fucomip
push
lcall
mov
pop
push
inc
mov
mov
test
cmp
stc
andb
mov
fcomps
stos
jnp
fbld
call
pop
sbbb
cmp
testl
xchg
push
sub
mov
sbb
mov
or
into
xchg
mov
jg
cmp
or
sbb
sbb
andl
mov
cmp
cwtl
dec
cmp
sysenter
add
cmp
insb
mov
stos
aas
xchg
lret
test
jl
in
nop
pop
cwtl
push
hlt
stos
xlat
js
xchg
fs
out
paddb
pop
cmp
repz
imul
ds
into
shrb
push
and
sbbl
adc
xchg
add
outsl
dec
mov
lods
ljmp
or
cmpsb
out
or
jo
jmp
call
mov
add
mov
fs
mov
or
sbb
sub
inc
pop
xchg
cmp
stc
orb
mov
push
mov
adcb
jecxz
push
mov
stos
pop
fwait
dec
cwtl
jbe
stos
dec
and
sbb
dec
fldl
jnp
jp
pushf
imul
idivl
negl
push
push
pop
xor
aaa
push
incb
out
popf
aad
ds
mov
dec
add
out
mov
roll
push
pop
add
lods
push
xor
out
ljmp
adc
mov
fs
das
pop
sub
push
mov
sbb
pusha
lcall
sbb
push
stos
imul
mov
jmp
mov
repz
cmp
xchg
xor
fs
ljmp
in
jo
inc
incl
mov
inc
push
sub
xor
mov
fiadds
mov
mov
clc
out
test
sub
int
arpl
icebp
dec
in
mov
ljmp
mov
sahf
movsl
xor
jb
ja
lcall
out
and
ds
lret
mov
lret
lret
inc
jae
jnp
subps
jmp
scas
out
int
jl
jnp
fs
fwait
cld
ja
fistpl
insb
adc
mov
popf
pop
push
iret
mov
in
out
cwtl
pop
loop
push
in
ds
call
mov
aad
xor
call
idiv
push
jbe
stos
mov
stos
mov
int
mov
out
addr16
push
pop
call
lods
xor
pop
ret
pop
add
adc
out
adc
daa
push
pop
pusha
mov
movsb
inc
sub
mov
xlat
jb
adc
push
sarb
addr16
adc
sub
xor
cmp
sahf
test
inc
add
ja
ljmp
test
push
push
push
das
lea
aaa
sahf
je
push
hlt
sub
sahf
sbb
cltd
mov
cmp
sbb
sbb
mov
push
push
cli
pop
insb
sub
mov
pop
jo
xchg
addr16
nop
cmpsb
mov
cmp
push
xchg
lret
inc
pop
in
out
sub
mov
pop
push
fldenv
movsb
adc
mov
ja
xchg
mov
jno
xchg
movsl
mov
inc
out
ss
dec
jae
xchg
repnz
pop
lods
adc
in
mov
sbb
lret
test
or
and
pop
fbld
cltd
test
divl
push
inc
jnp
ret
jl
daa
sbb
pop
insb
mov
jg
mulb
xchg
sub
mov
dec
orb
gs
shr
push
loopne
sbb
pusha
mov
negl
mov
dec
in
jmp
cld
xchg
push
jnp
xorl
imul
add
scas
jo
fists
mov
cs
or
mov
mov
movsb
mov
jnp
sub
test
dec
dec
rorl
movsl
dec
out
fwait
push
cmp
cmp
xchg
stc
lea
std
jmp
adcb
jae
imul
xor
out
pop
xchg
jl
push
scas
push
in
out
sbb
mov
rcll
adc
jbe
pop
pop
and
adc
shlb
cs
addb
cmp
ss
and
cmpsb
pop
cmc
adc
dec
jb
mov
je
int
cwtl
out
testl
adcb
and
imul
and
out
xlat
mov
inc
xchg
push
outsb
into
push
pusha
in
movsl
stos
enter
mov
mov
xor
shrl
jns
xchg
adc
jge
sub
push
dec
mov
mov
xorl
sub
mov
mov
jp
out
nop
jbe
push
dec
mov
mov
lret
xchg
outsb
mov
pop
inc
popf
shl
and
iret
lret
call
iret
sub
xor
cmp
add
sti
push
mov
pushf
pop
xor
lcall
test
push
mov
jmp
mov
xor
pop
bound
iret
xlat
adc
cmp
xchg
dec
jp
popf
adcl
addl
aaa
mov
or
push
mov
adc
cltd
add
adc
jmp
out
mov
pushf
nop
les
lods
jo
or
push
adc
out
push
adc
mov
shll
cwtl
mov
mov
pop
mov
xor
and
and
dec
std
cmp
xchg
inc
xchg
sub
add
mov
xchg
mov
lock
pop
popf
icebp
xchg
push
jno
cmp
or
mov
mov
aaa
cmp
fistl
pushf
shr
sbbl
test
shrb
xchg
test
push
aas
pop
pop
les
adc
pop
cli
ret
mov
ret
push
mov
fistpl
push
cmp
sub
sbb
inc
jnp
mov
cmp
adc
fcomip
dec
mov
sub
mov
mov
ret
push
cmpl
pop
out
push
insb
out
arpl
repnz
push
sbb
test
sbb
pop
flds
mov
dec
jp
sub
mov
test
jmp
fstl
inc
push
mov
jmp
repz
scas
sub
push
jb
fstps
pop
jle
nop
scas
cmp
xchg
ljmp
xchg
xchg
sbb
arpl
arpl
in
cltd
push
in
ljmp
les
jo
test
insb
push
pop
mov
cwtl
xchg
mov
push
jmp
stos
mov
ljmp
out
movsb
xlat
jmp
test
lahf
imul
test
jl
inc
stos
out
cmp
ljmp
mov
popf
in
jne
out
mov
add
rcrl
pop
mov
push
jge
dec
xor
mov
out
push
out
dec
xlat
mov
data16
stc
fs
mov
test
icebp
test
mov
or
cmc
dec
dec
ret
mov
es
add
xchg
sahf
mov
adc
pop
and
dec
imul
stc
push
dec
daa
jmp
add
dec
and
and
movsb
push
mov
or
outsl
inc
out
je
js
pop
mov
test
inc
mov
jle
ljmp
pop
add
push
mov
xchg
inc
add
adc
jl
adc
icebp
sub
cltd
pop
outsb
adc
int3
push
arpl
popa
mov
xor
iret
pushf
lods
push
mov
pop
repz
sub
xchg
icebp
mov
sub
js
cmpsb
pop
xchg
sti
lods
dec
sti
mov
inc
xor
pop
cmc
in
imul
mov
mov
jmp
imul
out
ljmp
imul
inc
jo
mov
out
add
sbb
loop
and
fisttpll
aad
bound
and
push
xlat
ss
xchg
add
and
lea
xor
repz
mov
push
push
xchg
enter
pusha
xchg
xchg
dec
lea
leave
adc
jbe
and
cli
popa
aaa
dec
sbb
add
push
cwtl
mov
je
out
sbbb
sbb
push
mov
icebp
push
lods
jno
pop
out
xchg
push
sbb
jle
dec
test
jge
dec
jecxz
test
mov
sub
cltd
dec
pop
mov
lea
or
sahf
jne
xor
jl
arpl
pop
mov
or
in
mov
clc
mov
gs
repz
cmc
hlt
mov
mov
lcall
aad
icebp
push
subl
mov
adc
shl
insl
aaa
sbb
stos
jge
mov
push
hlt
mov
shll
sbb
dec
pop
mov
ja,pt
push
jl
cmp
nop
mov
xchg
ret
bound
stos
xor
nop
and
nop
mov
mov
sbb
cmpsl
rcll
sub
js
xchg
outsb
push
sub
test
sbb
pop
adc
call
and
and
sub
dec
sahf
pop
inc
pop
xchg
mov
cltd
push
mov
sahf
xlat
dec
dec
ljmp
icebp
or
sarb
movsb
add
std
dec
inc
and
push
sub
adcb
push
scas
push
xchg
xor
cli
lcall
lods
inc
jbe
lahf
and
xor
insl
pop
mov
dec
popf
sarl
lea
sub
pop
loopne
mov
sub
mov
mov
jmp
xorb
stos
xchg
mov
adc
rolb
cwtl
push
push
adcl
mov
pop
je
in
push
jb
cwtl
insb
cld
imul
pop
xor
daa
mov
jbe
xchg
adc
pop
sbb
outsb
mov
add
xor
sub
xchg
xor
fnclex
pop
and
cmp
in
dec
and
mov
setl
inc
movsl
rolb
pop
sub
bnd
stos
cmpsb
out
xor
test
xor
cwtl
and
jmp
mov
movsl
or
jg
out
fldt
ds
repnz
cmc
fwait
jbe
sub
clc
sub
aad
adc
push
sbb
fcomip
test
push
mov
mov
or
cmp
out
in
cmpb
imul
lret
jnp
add
jp
xchg
lret
sub
clc
lods
jb
jnp
mov
das
mov
pop
mov
inc
pop
sbb
cmpb
and
jns
sub
jg
inc
test
pop
xor
cmp
pop
mov
test
mov
inc
negb
cwtl
cld
test
and
jmp
or
mov
in
or
inc
dec
ret
scas
lods
and
pop
mov
je
mov
push
adc
jl
dec
jbe
sub
nop
xchg
insl
insb
adc
dec
adc
mov
mov
xor
negl
nop
pop
add
adc
dec
sahf
clc
cmp
test
mov
dec
lcall
das
in
xor
cwtl
pop
fdivrl
scas
jmpw
adc
scas
loope
pop
pop
stc
pop
inc
in
imul
dec
push
pusha
repz
lahf
push
pop
sub
rcrl
in
mov
jb
add
fidivrl
pop
cmpb
test
cmp
scas
pop
js
and
js
push
xor
test
mov
mov
setne
aaa
sub
push
lods
mov
dec
shrl
push
movsb
sbb
push
adc
mov
popf
mov
pop
je
dec
push
push
call
sbb
bound
mov
xchg
mov
adc
bnd
outsl
xchg
out
mov
test
addr16
push
sahf
pop
call
pop
sub
cmp
xchg
push
cmp
cwtl
cmp
mov
daa
test
lcall
xchg
and
out
mov
pusha
daa
scas
jbe
xor
cmp
pop
sbb
sub
andl
pop
scas
push
cmc
and
push
jns
xchg
iret
pop
add
rcrl
add
xchg
dec
into
jmp
into
xchg
jno
arpl
xor
incb
mov
xchg
test
jae
mov
es
push
mov
ja
sbb
and
out
xchg
pop
push
xchg
aaa
lea
adc
pop
into
push
pop
movsl
dec
adc
mov
mov
std
xchg
inc
jge
adc
push
jecxz
mov
dec
push
shll
dec
dec
inc
stos
mov
sub
repz
aad
push
inc
mov
xchg
flds
clc
ljmp
insb
in
sub
mov
xchg
xchg
sbb
pop
xchg
xor
pop
inc
xor
je
cmp
push
lods
fnstcw
ds
mov
inc
pop
sbbl
sahf
jp
lods
fadds
lea
push
lahf
push
push
aas
jmp
cmp
and
movsl
bound
outsb
jnp
jo
pop
pop
negb
push
seto
enter
jb
pop
xor
and
js
fstps
les
repz
outsl
jnp
sub
sbbb
pop
fimuls
das
and
sub
outsb
cmp
aas
sbb
addr16
add
jg
lock
fmuls
jmp
cmc
aaa
lcall
loopne
push
inc
sub
shrl
out
sbb
lahf
repnz
iret
adc
lea
cltd
adc
jb
imul
inc
mov
popf
sbb
das
je
inc
sbb
sub
fsubl
mov
jns
test
pop
ja
xor
pop
push
or
test
adc
sbb
daa
mov
fisubl
or
dec
daa
pop
scas
sub
aaa
adc
adc
mov
xor
je
pop
js
imul
subb
mov
add
and
pop
mov
mov
push
inc
jns
cmp
aaa
adc
mov
std
mov
sub
icebp
sbb
stos
mov
pop
scas
mov
mov
add
jp
jbe
js
nop
jmp
inc
push
add
jl
movsl
xlat
insl
pushf
addr16
fistl
repz
add
pop
ffree
mov
sub
aad
mov
addb
push
aam
xor
xor
push
scas
adc
push
imul
outsl
mov
aaa
push
out
aas
scas
add
lcall
pushf
mov
sub
int
push
popf
repz
push
sub
aas
mov
jmp
pop
sbb
sahf
dec
sti
addr16
inc
fwait
mov
addr16
inc
mov
popa
mov
ljmp
ja
push
lock
out
or
fisttpll
in
mov
fnstenv
repnz
push
lods
cmp
cs
push
dec
adcb
sub
xorl
jbe
mov
mov
sub
or
xchg
pop
popf
addr16
call
push
sbb
dec
jecxz
cmp
or
push
xlat
lcall
lahf
or
scas
jns
movsl
in
outsb
repz
bound
mov
out
fcmovu
pop
jns
xchg
repz
push
nop
mov
cmp
sub
aas
pop
inc
or
jnp
pop
ret
jmp
inc
push
cmp
ja
lcall
sub
jae
nop
push
xchg
push
push
notl
push
jae
outsb
jl
xor
scas
xor
pop
mov
jl
hlt
sub
in
xchg
adc
lea
cmp
xor
jl
adc
stos
push
out
cmpsl
sahf
and
lcall
add
lret
pop
ljmp
repz
rorb
add
jg
sti
gs
or
push
mov
cmpsb
aas
push
rorl
adc
ret
add
in
push
cmp
jge
les
test
push
pop
in
pmuludq
arpl
mov
pop
push
jo
mov
ljmp
cmp
lea
popa
sbb
ljmp
ja
or
adc
hlt
scas
dec
inc
ljmp
dec
sub
jl,pt
cmpb
scas
mov
push
lcall
push
push
sbb
mov
pop
aas
test
xor
jl
xchg
ss
inc
pop
jmp
idiv
cmpb
xchg
sbb
out
jg
xor
sbb
push
imul
sub
adc
adc
xor
mov
mov
fsubrp
mov
in
subl
mov
pusha
sbb
test
pop
xchg
jnp
mov
and
sbb
fiaddl
ret
je
sub
mov
inc
fs
decl
pop
pushf
pop
xor
jae
mov
xchg
cmp
ror
imul
in
xchg
dec
jne
push
push
mov
xchg
aas
pop
adc
lcall
js
push
cmp
fs
and
cltd
mov
inc
orl
jg
clc
mov
mov
addb
push
push
jno
jne
test
sub
mov
mov
das
xor
xchg
xor
or
pop
mov
inc
ret
or
jp
xor
in
add
scas
cmp
xchg
test
lcall
adc
sub
push
xchg
dec
je
pop
mull
inc
add
mov
or
scas
xor
sbb
out
rclb
push
add
xchg
icebp
addl
mov
mov
imul
int
je
clc
adc
xchg
sbb
divb
scas
xor
push
insb
aad
or
aaa
add
adcb
iret
adc
and
push
jl
xchg
push
lcall
gs
jge
xchg
adc
push
sbb
sub
push
inc
mov
jl
dec
push
adc
mov
ljmp
sub
xor
lret
push
movsl
xorps
and
dec
sub
pop
jno
or
sub
cmc
pop
insl
sub
hlt
mov
rclb
mov
jo
or
and
dec
jmp
push
jecxz
pop
cmp
ja
xor
pop
fsubs
bt
stos
shlb
lock
dec
div
data16
add
or
call
mov
mov
cmpsb
dec
jae
xor
rorl
add
div
daa
xchg
sbb
adc
add
jg
psubb
jp
jae
ljmp
mov
add
mov
mov
mov
mov
js
lods
inc
test
ss
icebp
mov
cmp
mov
push
pop
js
sub
stos
xor
sub
push
imul
pop
sub
ret
sbb
repz
mov
popf
cltd
jns
pop
pop
or
sub
out
mov
mov
jp
mov
pushw
jp
aad
mov
xchg
add
mov
add
clc
fildll
xorb
adc
inc
push
mov
jg
add
push
jb
gs
jno
imul
add
push
cmp
lahf
jo
xchg
cmp
imul
sbbb
mov
pop
sbb
push
or
mov
or
out
xor
fs
dec
adcl
gs
mov
mov
lods
adc
in
xchg
dec
in
push
jl
jae
popf
adc
mov
xlat
dec
and
mov
jmp
aam
inc
sbb
cmpsb
pop
mov
xchg
in
outsb
sahf
nop
fdivrs
xchg
mov
pushl
mov
sub
sub
push
lock
or
xchg
push
jl
js
mov
xor
test
addb
dec
shrd
cmp
and
or
in
jl
iret
fs
mov
mov
pop
mov
add
or
pop
jl
mov
push
aas
cmp
lods
jne
lea
mov
sti
xor
ret
jl
ja
jbe
mov
icebp
xchg
scas
lods
mov
popf
stos
xor
or
cmp
sbb
mov
push
mov
les
lcall
scas
pop
das
ljmp
adc
std
pop
ja
mov
add
inc
jl
xchg
or
dec
outsl
mov
js
stos
ljmp
xchg
cmp
push
mull
negb
addb
std
or
mov
aaa
shll
popf
icebp
adc
imul
mov
inc
add
outsl
cs
push
ret
add
push
cwtl
insb
sub
mov
sub
fs
cmpsb
pop
pop
cltd
cmp
ret
repz
inc
sub
mov
lds
pop
daa
add
push
or
testb
push
arpl
mov
and
jmp
dec
call
stos
jbe
and
loope
lahf
std
push
sbb
pop
mov
data16
lcall
cmp
push
jg
movsb
and
jg
aaa
cli
das
add
xchg
test
xchg
icebp
sbb
inc
aas
mov
insb
inc
inc
push
call
stos
xor
xchg
mov
add
repz
add
insb
mov
jmp
mov
out
push
adcb
sbb
ss
orl
sbb
repz
ja
fs
ja
js
adc
pushf
gs
lcall
sub
sbb
rorl
mov
clc
js
movb
loop
int3
sub
push
mov
pop
adc
mov
loope
call
addr16
aad
movntq
cwtl
cld
mov
cmpsl
call
lods
sub
testl
call
cmp
data16
mov
mov
push
loopne
mov
inc
vaddsubpd
stos
call
push
inc
adc
les
test
int3
test
fisubs
in
pop
dec
call
call
out
inc
iret
neg
or
testl
out
pop
fwait
jle
xchg
dec
call
cmpsl
in
dec
cmpsl
rorb
imull
out
cld
enter
test
fsubrs
mov
mul
lds
sub
movsl
mov
pcmpgtw
and
hlt
mov
shl
es
test
pop
insb
pop
add
cwtl
push
dec
sub
push
call
add
push
testb
stos
sub
out
mov
out
pop
inc
or
mov
push
and
in
mov
aad
cmovne
pop
mov
push
push
sbb
imull
mov
xchg
out
sub
nop
xor
test
pop
xchg
mul
pop
push
out
out
stc
mov
xchg
adc
sub
jecxz
push
pop
xchg
in
in
pop
movsl
adc
inc
sub
mov
in
int3
sub
mov
mov
dec
add
or
jmp
enter
xlat
mov
mov
sub
sub
pop
adc
leave
lods
test
pop
sub
movsb
out
mov
es
or
sub
test
xchg
inc
test
fistl
jge
fsub
js
aad
or
aad
push
sub
cmpsl
adc
dec
push
test
cmpsl
sub
inc
pop
call
daa
mov
out
xchg
inc
sub
int3
mul
push
push
es
int3
fxam
adc
out
fistpll
in
and
call
test
xchg
adc
sub
mov
movsb
cmpsl
loopne
pmulhw
mov
or
mov
ja
aad
setns
push
push
inc
push
cwtl
lds
dec
or
mov
gs
push
arpl
in
enter
pop
mul
test
dec
out
int3
aad
movaps
out
testb
xchg
xchg
jns
push
inc
mov
sub
test
pop
push
mov
fs
inc
push
pop
es
out
in
mov
mul
pop
jecxz
mov
insb
out
jge
call
call
push
lret
xchg
push
sub
xchg
jo
out
sub
xchg
inc
test
addr16
pop
stos
mov
mov
mov
divb
dec
mov
std
sbb
stos
aam
mov
cmp
lods
fcoms
lcall
sbb
clc
mov
cwtl
out
out
mov
ss
repnz
leave
xchg
lcall
mov
mov
lods
lock
xchg
hlt
dec
pop
xchg
in
out
cld
or
mov
mov
aam
sub
xchg
fdivrs
sahf
lcall
xchg
pop
dec
add
inc
fdivrs
xlat
js
jo
fdivs
mov
fcomps
test
xchg
rcrb
adc
cmpsl
jmp
cmpsb
inc
in
mov
pop
cwtl
daa
lds
mov
out
mov
sub
add
loopne
fcompl
out
lcall
pop
testl
mov
cld
xor
cmc
aaa
scas
mov
cmp
push
in
push
xchg
out
cmc
push
or
int3
dec
mov
xlat
test
out
mov
daa
sbb
dec
dec
daa
mov
jbe
or
ja
int3
in
fdivrl
lcall
fsubrl
add
inc
mov
push
mov
aaa
mov
push
jbe
inc
mov
ljmp
xchg
dec
jb
xchg
shl
notb
out
xchg
mov
clc
mov
push
ljmp
sub
mov
in
lock
xlat
pop
loop
xor
jo
push
xlat
xchg
out
xchg
push
fwait
roll
fwait
push
fdivrs
pop
lahf
out
sub
xlat
mov
loopne
dec
xlat
cmpsl
inc
loop
cmpsl
in
mov
out
xchg
or
aas
ljmp
push
in
add
in
push
lock
pop
mov
call
fcomip
inc
dec
xlat
mov
in
mov
out
xchg
or
aas
ljmp
push
add
mov
shll
in
push
test
pop
dec
out
sub
mov
mov
dec
shll
jmp
shr
mov
xlat
fsub
ljmp
lock
push
clc
xlat
cld
add
test
push
push
in
daa
out
mov
push
xlat
in
ljmp
in
sub
out
mov
push
mov
push
or
aad
pop
inc
push
inc
lcall
int3
pop
shlb
push
stos
es
inc
pushf
adc
cmpsl
mov
sti
push
pop
ljmp
aas
nop
add
dec
sub
push
mov
data16
xor
movsb
fmuls
addr16
call
movsl
mov
ja
mov
ja
fcomps
or
fcomps
fstp
or
cmp
fcoml
mov
daa
and
out
daa
and
sub
push
ja
pop
push
je
xor
mov
mov
dec
aaa
rcl
add
aas
ljmp
test
lea
enter
jbe
push
clc
pop
mov
es
iret
iret
inc
push
call
or
daa
fcmovnbe
leave
cwtl
add
xor
push
dec
movsl
push
fisubrl
push
mov
imull
fisubrs
in
or
push
xchg
sub
js
out
out
es
ljmp
jo
jmp
in
xlat
pop
imul
inc
nop
es
xchg
xorl
add
mov
insb
in
push
repnz
pushf
aad
ret
push
cli
imull
cli
inc
push
sub
popl
fdivs
fisttps
xor
fcompl
aad
mov
into
mov
mov
dec
xchg
jbe
repnz
in
adc
rorb
pop
in
xchg
mov
xchg
or
loop
mov
fsubs
in
xlat
push
pop
aas
mov
mov
sarl
push
loopne
ret
rol
in
push
in
shl
push
out
sub
clc
call
ljmp
push
dec
orb
lock
push
pop
jne
push
fcomip
in
cs
movsb
add
clc
adc
mov
dec
inc
mov
test
dec
mov
lods
add
rcl
push
test
mov
push
push
mov
repnz
xlat
pop
test
push
mov
mov
mov
into
aad
push
nop
push
mov
mov
ja
repnz
out
sub
xchg
pop
out
lods
loop
xchg
in
mov
mov
pushf
push
mov
dec
notl
adc
pop
cmp
test
movsb
xlat
xchg
loop
movsb
in
test
push
or
pop
repnz
out
sub
clc
mov
mov
dec
cwtl
mov
mov
mov
mov
mov
out
sub
pop
ljmp
in
xlat
in
xchg
mov
mov
aad
adc
push
lea
cmp
push
std
pushw
jae
call
dec
je
dec
mov
in
cwtl
pop
pushf
out
mov
ljmp
rorb
push
ljmp
nop
inc
pusha
fcoms
push
mov
add
daa
mov
or
xchg
push
mov
ljmp
push
mov
ss
xor
in
out
inc
lods
push
in
in
gs
and
adc
jg
push
lds
push
sub
in
out
mov
movsl
ja
sbb
xchg
jnp
arpl
pop
lcall
daa
push
or
out
mov
movsb
sub
push
dec
push
xor
stos
roll
scas
cmpsb
loop
scas
xor
loop
pop
and
cmpsl
nop
ja
aaa
inc
loop
pop
lret
xchg
pop
mov
and
and
inc
dec
daa
pop
aad
pop
dec
popa
daa
pop
sub
cmc
push
stos
inc
xchg
aad
push
in
mov
and
push
stos
xchg
mov
xor
mov
dec
inc
pop
aaa
cmp
xor
cmc
xor
lea
cwtl
cld
in
cmp
cmc
xlat
xchg
xor
xchg
mov
and
out
dec
inc
xor
lds
fcomp
add
push
out
clc
int3
cmp
lods
clc
nop
pop
js
aam
xlat
mov
jecxz
xchg
sub
aam
cmp
in
dec
fcom
jp
imul
sub
fcoml
aas
mov
adc
inc
sub
fdivl
sbb
test
insb
sbb
lcall
sub
jle
mov
add
bound
mov
jl
or
inc
ljmp
je
daa
lcall
add
push
daa
or
js
in
cmp
stos
out
js
clc
mov
push
push
inc
mov
dec
iret
lods
out
clc
cmp
idivb
jp
imul
jo
daa
roll
push
dec
push
clc
mov
fcoml
add
cmp
in
add
adc
push
cmp
cwtl
movsl
lcall
mov
test
pop
rcr
loop
xchg
push
ljmp
cwtl
je
daa
xchg
mov
in
inc
add
in
addr16
xchg
rorb
mov
cwtl
jle
xchg
ja
xchg
jp
pop
fcomp
loop
lcall
mov
or
fimull
pushf
mov
mov
dec
movsb
mov
mov
cmpsb
push
pop
movntq
pop
movsb
add
fbld
out
mov
adc
inc
jecxz
dec
aaa
add
push
mov
add
fbld
ljmp
mov
jecxz
xchg
daa
mov
daa
lahf
mov
or
mov
xchg
mov
test
jle
iret
shl
pop
mov
fdivrs
add
sub
jne
cmp
dec
mov
dec
sahf
outsb
add
js
xor
dec
hlt
dec
inc
lcall
push
stos
push
clc
push
jb
add
mov
push
or
iret
push
in
pop
push
add
mov
cmpsl
mov
xchg
nop
push
push
cmp
cwtl
dec
lcall
push
push
push
xchg
je
cmp
test
mov
cmp
push
cmp
addr16
add
push
test
or
xor
push
stos
push
js
cmp
push
pushf
insb
cmp
lds
jp
fcomps
inc
iret
jo
aad
jo
xchg
or
js
nop
je
xchg
push
or
push
js
inc
cwtl
cmc
add
and
xchg
push
push
cwtl
mov
add
fs
xchg
out
add
aas
out
sub
mov
push
movsl
lods
xorb
fldt
lcall
mov
xor
jle
mov
daa
lahf
or
or
adc
push
push
push
daa
adc
pop
es
jle
iret
inc
in
stos
gs
adc
gs
jne
sbb
lret
push
aad
mov
mov
add
cmp
push
adc
lcall
xchg
stos
and
pop
out
out
sub
adc
lods
rcrb
shlb
cmp
iret
nop
fadd
sub
int3
push
loopne
in
call
lock
hlt
mov
in
push
cld
cmp
jecxz
push
test
loopne
lods
pop
out
mov
movsl
inc
cmpsb
ret
mov
jecxz
push
xchg
mov
xlat
rorb
test
xchg
jecxz
dec
mov
clc
lods
or
mov
push
test
push
mov
or
push
push
cmpsb
or
add
dec
out
jecxz
push
push
xlat
aad
ljmp
xchg
mov
in
push
jne
and
push
push
imul
push
pop
mov
mov
cmpsb
xchg
clc
mov
dec
cmc
xor
xchg
aad
jne
push
aam
mov
test
add
sbb
adc
ljmp
call
push
gs
pop
in
xlat
inc
mov
cmc
nop
xor
ja
mulb
test
fdiv
inc
lods
mov
in
xlat
adc
mov
push
cmpsl
or
es
sub
sbb
out
js
xchg
mov
cwtl
insl
mov
bound
cwtl
stos
add
mov
add
pop
mov
xchg
jmp
pop
mov
aam
test
push
mov
xor
call
adc
aam
or
adc
fsubs
fstp
ss
push
imul
out
push
dec
fmuls
out
out
cmpsl
lea
xchg
in
lods
gs
push
fdivrl
fcoml
jecxz
in
mov
push
loopne
push
pop
push
aaa
push
cli
sub
leave
in
pop
mov
sbb
inc
sbb
cwtl
push
iret
call
xchg
aad
and
xchg
cwtl
daa
adcl
shl
adc
dec
clc
push
xchg
mov
in
test
xchg
test
out
push
cmp
xlat
aad
out
mov
lock
aaa
movsl
ljmp
mov
cwtl
hlt
lods
lea
lea
xchg
mov
jne
push
mov
pop
mov
cmp
xchg
fistpl
xlat
in
clc
pop
fistpll
gs
call
fdivr
js
sbb
ljmp
xor
xor
dec
ja
mov
pop
push
push
xlat
push
dec
ljmp
mov
jmp
mov
pop
sbb
out
xlat
jbe
lds
push
pop
in
xchg
xchg
mov
mov
sbb
pop
movsl
lds
mov
aad
push
in
or
ja
add
movsl
or
mov
pusha
ljmp
mov
pushf
cmp
aaa
cmpsl
adc
xchg
pop
pop
pop
ja
ljmp
inc
out
jmp
xor
invd
push
mov
in
out
out
mov
in
es
mov
insb
loop
jne
lcall
in
xchg
movsl
adc
inc
in
fsub
sub
sbb
jl
mov
mov
cmp
cmc
push
push
sbb
xlat
dec
xchg
xor
or
js
mov
push
mov
jecxz
lahf
dec
pop
in
in
mov
xlat
pop
cld
cmpb
and
xor
ss
mov
inc
xlat
fbld
cmc
mov
popa
push
js
inc
or
fsts
je
out
inc
scas
sti
inc
cwtl
push
xlat
int3
jl
in
call
out
inc
push
cmp
aad
xchg
ljmp
inc
cmp
jbe
push
pushl
mov
pop
ds
dec
daa
dec
mov
mov
sbb
clc
xchg
fadd
outsl
push
scas
mov
shr
mov
add
dec
inc
dec
mov
adc
sub
imul
or
jne
jmp
hlt
scas
and
aaa
add
jnp
push
add
js
rclb
sbb
adc
mov
out
daa
sar
push
int
pop
jmp
dec
dec
popf
out
fsubl
clc
add
out
mov
scas
and
xlat
shll
out
popf
out
fsubl
add
cmp
daa
sahf
adc
test
pmaxub
aad
inc
jecxz
dec
ja
stos
out
daa
pushf
mov
cmp
daa
xchg
jecxz
out
push
xchg
fiaddl
mov
push
ja
pushf
clc
fucomp
mov
fnsave
mov
push
pop
adc
xchg
clc
loope
mov
cmp
insb
in
inc
jl
loope
es
daa
mov
sub
test
aaa
add
sbb
mov
add
in
test
mov
push
popf
mov
fdivr
jne
bound
sahf
push
adc
cmc
push
sub
rcll
dec
push
fsub
xchg
push
addr16
in
push
movsl
or
dec
test
jecxz
push
mov
test
pop
data16
and
adc
push
in
push
lea
push
mov
mov
xchg
cmc
out
call
xlat
ss
pop
nop
jbe
gs
mov
aaa
mov
bound
icebp
aaa
mov
icebp
cs
fcoms
cmc
or
sahf
push
dec
stc
pop
xchg
js
stc
and
mov
std
out
inc
push
mov
push
and
push
push
jne
test
stos
lock
xlat
nop
inc
pop
daa
adcl
xor
test
xchg
ss
push
test
cmp
out
xor
dec
mov
jbe
or
push
sub
das
add
aad
ret
push
mov
and
mov
adc
xchg
mov
fucomp
push
sub
ja
mov
lods
cmc
in
out
jo
loopne
out
add
push
cmp
dec
cmp
mov
je
insl
xchg
push
int
push
mov
lods
inc
cmp
jp
mov
jno
cmpsb
cmp
jl
push
mov
cmp
inc
cmpsb
outsl
cmc
daa
loopne
xlat
sbb
dec
es
push
mov
push
clc
sbb
js
lods
jne
icebp
xchg
ljmp
aaa
ficomps
js
cmp
sub
jns
cmpb
push
js
ficomps
mov
out
inc
pop
jge
inc
cwtl
test
mov
lods
mov
inc
push
mov
clc
mov
in
lods
mov
mov
add
pop
loop
jmp
mov
push
fdivrs
out
add
mov
dec
mov
mov
mov
popf
push
mov
xlat
or
sbb
push
mov
dec
cmp
push
mov
out
aaa
cmp
mov
sti
push
mov
push
in
aaa
lcall
mov
pop
mov
cmp
jle
inc
cmp
mov
inc
cmp
add
push
aad
out
test
test
add
es
push
cmp
sbb
sbb
dec
imul
daa
lea
mov
mov
dec
jbe
aaa
int
pop
mov
adc
fcoml
push
push
call
out
sub
mov
dec
push
push
lock
inc
cmp
dec
in
push
push
add
out
stos
push
cld
in
mov
push
dec
and
and
pop
fiaddl
and
test
or
pop
mov
orb
sub
mov
mov
pop
clc
out
jne
pusha
fiaddl
sub
hlt
or
movsl
repz
ss
push
in
je
dec
and
cmc
ds
push
lock
jo
aad
insb
and
jle
test
mov
jo
cmp
js
lcall
push
movl
mov
in
inc
cmp
mov
call
stos
add
insb
movsl
push
xchg
in
mov
fcomps
into
cmpsl
lock
pushf
add
ss
or
xchg
adc
mov
adc
out
daa
adc
dec
push
lcall
mov
fsubs
adc
and
das
fcoms
es
push
jp
jmp
call
out
and
jle
xchg
lock
inc
out
mov
mov
or
push
test
push
and
mov
inc
pop
or
mov
push
fcoms
mov
sysexit
xor
pop
push
xlat
in
inc
xchg
fmuls
rcrb
fcomps
inc
push
push
out
push
cmp
ja
push
lds
frstor
xlat
jne
mov
adc
inc
push
addr16
neg
xlat
int3
xor
inc
or
add
mov
or
mov
int3
xor
in
jmp
test
sbb
ror
cmp
out
inc
sbb
xor
cmp
pop
mov
es
or
jb
clc
jb
aad
sbb
dec
or
int3
int3
fldcw
rcrb
shll
push
es
fiaddl
xchg
push
pop
lods
in
mov
lock
mov
push
hlt
das
or
psubd
out
cmp
int3
xlat
dec
and
or
int3
cwtl
ror
aaa
fsubrs
add
push
sub
add
xchg
pop
sub
mov
in
mov
aas
sbb
cmpsb
addr16
test
mov
es
jecxz
mov
mov
sub
aaa
ljmp
jbe
pop
cmp
es
ficoml
add
cmp
je
cmp
testb
aad
inc
pusha
add
mov
xchg
add
in
mov
push
jle
cmp
out
fadds
cltd
mov
cmp
nop
daa
push
dec
cmc
mov
in
pushf
sub
adc
dec
mov
pop
push
clc
in
daa
sub
js
mov
pusha
cmp
not
aaa
call
jb
test
test
mov
out
pop
fmulp
lods
or
aaa
lcall
push
jl
fildl
loop
jmp
out
mov
icebp
ljmp
out
cmp
push
lcall
je
ljmp
out
cmp
lcall
ljmp
out
cmp
lea
es
push
inc
push
aaa
adc
inc
mov
scas
fs
xchg
inc
jle
out
inc
mov
dec
sub
js
test
mov
out
pop
dec
sub
sub
cmp
dec
sub
sub
cmp
xlat
push
add
sub
cmp
out
or
push
jmp
cwtl
addr16
cmpsl
fs
lea
lcall
in
mov
shlb
adc
mov
push
js
daa
dec
mov
adc
pop
std
lds
js
daa
je
cmp
add
jl
js
or
push
popa
xorb
test
test
dec
sarl
push
dec
test
in
test
lcall
fs
sbb
in
sub
inc
test
rcl
cmpl
dec
xchg
sub
pop
jns
je
cmp
out
inc
popf
push
sub
xlat
cmp
jo
rcr
mov
sub
pop
lds
ret
test
imul
pop
fsubs
push
fcoms
pop
xchg
add
arpl
mov
mov
xchg
dec
fsubr
xlat
cmpsl
lcall
dec
lcall
push
add
pushf
dec
sahf
and
sbb
inc
ret
push
lcall
call
cmpsb
and
lret
jnp
dec
mov
push
stos
subb
push
cwtl
pop
or
out
aam
sbb
and
push
push
push
inc
mov
cmp
call
fiadds
and
push
sbb
dec
mov
sub
aaa
mov
mov
push
mov
aaa
outsb
sub
hlt
or
mov
sbb
es
inc
pop
jecxz
sarl
push
sub
inc
ret
inc
and
and
sub
cmp
pop
mov
push
or
mov
cmp
dec
cmp
xchg
and
xchg
and
or
bound
pop
mov
test
push
fcomps
fsubr
jg
sahf
aaa
les
js
insl
sbb
mov
inc
and
push
cvtps2pi
xchg
push
xchg
mov
scas
xchg
stc
jne
lea
dec
ficompl
xchg
dec
cmp
rorl
inc
imul
push
inc
cmp
js
jge
mov
cmp
add
movsw
push
xchg
sub
push
dec
add
push
mov
sbb
testl
fs
mov
add
gs
and
test
or
pop
test
push
jmp
mov
nop
aad
bound
imull
mov
mov
add
jbe
adc
out
insb
mov
mov
test
sub
mov
xor
repz
adc
push
xor
add
test
xor
out
imul
pop
mov
in
bound
js
xchg
hlt
xchg
adc
je
cwtl
dec
popa
fdivl
inc
aad
mov
pushf
xchg
cmp
xor
test
lds
inc
inc
xor
test
xchg
gs
lea
sbb
mov
rcrb
fmuls
test
aas
dec
lods
jg
inc
bound
xchg
dec
repz
mov
pop
push
jle
xchg
lea
cmp
call
fcompl
add
data16
je
data16
push
out
cmpsl
cmp
xchg
lea
push
in
mov
pop
call
adc
and
cwtl
mov
call
add
neg
lret
movsb
push
and
and
dec
pop
mov
xlat
and
mov
cmp
sub
stos
popa
mov
push
sub
sub
cwtl
lods
fdivr
xor
mov
cmp
xor
xor
jle
xchg
add
xchg
jmp
out
sbb
mov
movsl
cmp
out
mov
add
xchg
mov
xchg
mov
sbb
push
cmp
test
mov
aaa
outsb
mov
aaa
mov
aam
daa
lods
fwait
push
fcoms
les
jbe
xlat
scas
push
mov
dec
cmpsb
insb
xor
pushw
push
sub
jbe
inc
jge
and
enter
out
movsl
out
push
rcl
int3
and
dec
stos
out
push
pop
push
dec
loopne
out
xchg
loope
imul
jp
pop
mov
inc
bound
mov
out
test
sub
pop
mov
sub
bound
out
mov
fdivs
add
out
push
aaa
xlat
loopne
pop
xchg
jbe
movsl
adc
movsl
aad
out
cmp
and
mov
insb
call
mov
shr
or
push
jne
call
and
or
cld
loop
add
js
add
cmpsb
pop
xchg
push
aaa
inc
ror
dec
mov
xchg
mov
mov
push
nop
rcl
lods
dec
cmp
div
push
pop
pop
cwtl
or
jl
add
sub
push
cwtl
test
push
cwtl
test
push
pop
pinsrw
in
xlat
push
es
call
outsb
cmp
in
xor
test
movsb
pop
sub
data16
addr16
sbb
jns
cmp
add
test
addr16
test
sub
sbb
add
std
pop
enter
mov
jp
dec
cwtl
dec
out
divb
sbb
push
aaa
enter
and
data16
je
push
add
enter
je
push
and
mov
ds
fstpt
popf
add
int
xchg
add
into
xor
cmp
push
add
out
add
cmp
add
cmp
inc
mov
cmp
je
xor
sarl
push
jae,pt
dec
xchg
pop
dec
mov
sub
lds
je
enter
je
cmp
push
cwtl
ds
dec
mov
cwtl
lds
cmp
add
enter
ret
add
enter
pusha
and
and
lea
mov
je
stc
push
mov
and
lea
mov
ds
pop
and
clc
jp
push
enter
in
lea
enter
movb
push
enter
icebp
insb
push
aaa
enter
mov
popf
out
inc
mov
outsl
out
sbb
cmpsl
clc
mov
test
enter
movsb
mov
cmp
pop
sbb
xchg
imul
sub
mov
je
fdiv
jecxz
mov
dec
inc
cwtl
je
cmpsb
insb
push
sub
mov
daa
cmp
test
insl
xorb
fisttps
imul
cmp
shl
jo
ficomps
fsubs
jne
jl
js
push
dec
cmp
out
or
data16
mov
addr16
pop
daa
iret
xchg
std
push
test
sub
or
pop
es
xchg
push
hlt
xchg
js
push
cmp
cmp
push
xchg
aad
sbb
and
js
inc
xchg
lcall
jae
orl
jo
cmc
out
mov
pusha
aaa
mov
cmp
push
xorb
xor
mov
push
jne
mov
sbbb
idivb
push
push
inc
cmp
fsts
neg
push
aaa
js
lcall
push
lods
inc
cmp
jmp
cli
sbb
cli
inc
ja
sub
js
sub
add
cs
pop
ljmp
imul
aaa
mov
hlt
mov
sbb
cmp
cwtl
test
repnz
cmp
and
mov
mov
cmp
gs
sbb
js
test
sbb
arpl
stos
gs
and
fwait
xor
jg
mov
sub
add
mov
mov
sbb
js
jecxz
add
fsubrs
fsubr
mov
mov
cmp
aaa
es
inc
aam
stc
pop
mov
mov
dec
sbbb
mov
flds
push
out
pop
addr16
lods
xchg
xchg
sarl
inc
push
mov
dec
sbb
pop
mov
cwtl
out
cmp
aaa
mov
jae
aaa
pop
rol
shll
mov
push
std
xchg
mov
cmp
push
fidivrs
cmp
scas
xor
xor
sbb
sbb
cmp
cmp
add
inc
dec
imul
sub
cmp
jo
sbb
stos
es
jo
inc
push
je
add
or
pop
push
mov
outsl
jnp
hlt
ja
jl
and
orb
xlat
pop
mul
jp
push
pop
or
mov
in
or
xlat
or
loop
dec
jbe
jne
in
or
push
je
adc
out
push
push
mov
push
push
cmc
sbb
aaa
pop
push
push
cmc
and
pop
push
push
adc
or
push
push
aad
jl
ss
movsl
ljmp
pop
xchg
out
jp
push
jecxz
push
sub
imulb
sub
push
or
xor
push
xor
call
push
cmp
test
stos
cmp
cmp
js
push
pop
fdivs
in
test
aas
pop
mov
fcoms
mov
ret
out
inc
dec
pop
js
mov
aad
pop
adc
imul
lahf
pop
fcomp
lcall
sbb
xor
addr16
je
push
cmp
adc
xchg
out
mov
scas
mov
aam
cmp
daa
bound
test
cmp
sub
adc
out
in
das
mov
sub
mov
lret
mov
lahf
cmp
lret
jp
sbb
cmp
jo
dec
mov
iret
in
mov
cmp
rcl
add
mov
loop
jmp
mov
pop
rorl
cwtl
inc
mov
mov
inc
cmp
in
xor
sbb
xlat
sbb
or
in
iret
xchg
jmp
cwtl
daa
fadd
adc
xchg
push
inc
cmp
sbb
mov
aad
jnp
push
ja
xchg
stos
fisttps
rcrb
cwtl
push
sub
loop
fsubr
sbb
and
jecxz
lahf
lret
cmp
movsl
cmpsb
mov
in
mov
gs
inc
cmp
ja
xchg
cmpsl
out
sbb
push
data16
xchg
inc
jb
das
jns
add
ja
and
and
push
shlb
jb
jmp
ds
or
icebp
repnz
or
xchg
push
cmp
cwtl
mov
dec
cmp
ret
mov
mov
gs
test
sub
or
cmp
xchg
imul
jns
xorb
xor
xchg
repz
pop
push
xchg
cwtl
push
jbe
iret
or
cmp
jbe
push
mov
mull
pop
ja
fs
pop
jnp
inc
notl
cmp
or
cmp
mov
rcl
and
sub
or
jae
out
fs
es
pusha
jp
imul
lods
xor
fincstp
in
call
out
mov
push
cmpsl
push
jo
mov
sub
insb
cmp
je
sub
lret
clc
sbbl
out
cmpl
dec
js
cmc
adc
jp
aad
xchg
fdivrl
test
jl
push
or
mov
iret
scas
cmp
pop
movsl
mov
gs
mov
fistl
adc
into
cwtl
lahf
idivl
iret
add
movsl
push
add
pushf
mov
mov
jecxz
inc
or
or
pmulhuw
mov
inc
lods
or
or
mov
add
daa
invd
filds
rcrl
mov
and
xchg
pop
fiaddl
dec
call
sbb
dec
jne
adc
cmp
sbb
add
fisubs
pop
hlt
dec
and
adc
cmp
xlat
and
and
loop
inc
icebp
loop
pushf
clc
add
daa
das
fsubl
and
cmp
daa
out
mov
outsl
daa
xor
xlat
out
jecxz
out
dec
inc
or
iret
xor
fmul
push
sub
cmp
xlat
xor
call
ljmp
jl
mov
cmp
mov
movsl
out
push
lds
je
mov
repnz
call
inc
jns
sbb
out
popf
js
movsl
pop
idivl
mov
dec
sub
loop
daa
add
jbe
mov
popf
aaa
mov
call
mov
fisttps
out
and
inc
pop
fsubrs
aaa
lds
in
mov
sub
sahf
push
cmc
pop
or
push
xchg
out
mov
mul
aad
pop
aam
sub
mov
mov
aad
mov
push
pop
add
cmp
push
inc
in
test
fcmovb
outsl
push
xchg
sub
and
out
loope
mov
fwait
in
mov
cmp
cmpsl
mov
xor
imul
lods
fcompl
in
cmp
or
mov
mov
push
negl
call
or
xor
sbb
in
jbe
stos
sbb
scas
mov
dec
mov
scas
sbb
pop
pop
pop
scas
jae
scas
xorl
sbb
inc
and
xor
mov
icebp
clc
out
mov
pop
test
add
stos
clc
or
pop
pop
fmulp
ret
mov
mov
push
sbb
hlt
int3
inc
popf
clc
mov
inc
mov
xlat
in
addr16
add
add
push
aaa
out
iret
and
add
add
and
aad
js
test
in
inc
xchg
or
push
nop
mov
lods
xchg
das
mov
imul
outsl
dec
sbb
pop
mov
mov
in
out
mov
inc
sub
adc
add
aaa
test
adc
in
push
jb
jg
out
rorl
nop
pop
mov
cli
call
cmpsb
push
xchg
dec
cmpsl
fdivrl
dec
movsb
xchg
inc
xor
cmp
ret
mov
and
dec
mov
scas
data16
stos
mov
in
fists
pop
jecxz
repnz
popf
mov
adc
stos
inc
adc
jno
data16
fists
jecxz
mov
iret
sbb
push
sbb
out
pop
mov
insb
sbb
xchg
push
dec
pop
je
lcall
iret
sbb
pop
sbb
mov
pop
sbbb
mov
daa
mov
arpl
iret
xchg
aad
sbb
cmpsb
inc
ja
cmpsb
mov
iret
adc
enter
mov
push
pop
imul
xchg
cmp
mov
add
out
cwtl
adc
mov
jmp
dec
outsl
aaa
call
mov
aaa
inc
stos
pop
mov
ja
jae
div
pop
adc
out
inc
cmp
cmp
xchg
push
ja
push
ja
ja
inc
repnz
adc
out
cmp
sub
jle
jnp
and
ja
xchg
adc
out
inc
cmp
mov
push
lahf
jmp
addr16
scas
adc
in
addr16
pop
xchg
pop
add
cmp
pop
test
sub
push
pop
popw
repz
data16
push
mov
push
sbb
mov
js
cmp
jg
dec
mov
imul
cwtl
add
jmp
mov
pop
dec
xchg
cmp
pop
lods
jnp
xchg
sbb
mov
pop
add
daa
out
stos
aaa
cld
sub
inc
iret
adc
daa
test
cmp
xchg
fisubrl
cmp
repnz
sbb
mov
cmp
sbb
mov
repz
pop
daa
iret
cmpsb
popf
les
lcall
lcall
add
aad
adc
icebp
ljmp
mov
sub
cmp
out
cmp
adc
js
daa
pop
addr16
lods
inc
cmp
adc
sbb
sub
movsl
jns
das
inc
ja
out
cmp
rolb
out
repz
and
movsb
in
and
push
inc
cmp
xchg
dec
insb
mov
mov
adc
and
adc
xlat
push
inc
cmp
std
xchg
hlt
in
adc
mov
mov
push
fcomps
add
in
je
cmp
mov
cmp
or
sub
int
mov
out
cmp
dec
inc
sbb
ret
dec
cmp
sub
imul
adc
insl
in
or
je
sti
cmp
repnz
out
insb
das
cmp
xorb
inc
cmp
jb
or
negb
stos
daa
push
hlt
repz
or
cmp
daa
das
cmp
xorb
cli
pop
push
ja
cli
xchg
xchg
gs
cmp
mov
hlt
lret
fcomps
addr16
icebp
popf
cmpsb
inc
imul
xchg
sub
test
lods
jecxz
push
nop
cmp
insb
xchg
adc
mov
xchg
sub
mov
dec
add
xor
fsubrs
mov
sub
dec
call
movsl
bound
ss
push
mov
mov
jmp
push
daa
mov
mov
in
es
mov
pop
push
jmp
pop
fdivl
ljmp
cmpsb
cmpps
and
or
mov
lods
and
divb
mov
and
and
and
mov
sbb
lret
push
push
lret
gs
insb
push
push
cmpsb
js
and
in
cmpsl
bound
in
xchg
fsts
fld
clc
push
fst
inc
lods
dec
inc
inc
test
or
sbbl
loope
std
js
in
push
lcall
push
js
in
xchg
or
push
in
pop
pop
mov
mov
push
movsl
jmp
or
sbb
fiaddl
xchg
mov
ja
loop
test
loop
ja
out
mov
pop
out
ja
ljmp
nop
gs
or
repnz
push
xor
out
xor
xorb
push
pop
out
lds
xchg
xchg
push
repnz
xchg
outsl
out
addb
adcl
push
xchg
mov
mov
jbe
lds
push
mov
mov
ret
inc
push
xchg
dec
clc
xchg
xchg
ret
push
lcall
sub
jne
inc
out
xlat
mov
mov
push
pop
xchg
test
test
sub
xchg
fdivrl
adcl
notb
out
xchg
lods
loopne
sub
sub
push
dec
pop
inc
cmp
daa
xlat
xchg
js
sbb
mul
cwtl
test
sub
sub
test
out
mov
and
daa
fcoml
in
cmp
push
outsb
or
test
add
xor
testb
push
outsb
or
adc
cmp
ds
inc
shl
mov
push
daa
jmp
mov
divb
aaa
add
nop
jb
testl
xchg
divl
lcall
add
xchg
dec
in
aas
testb
cwtl
cmpsb
fadd
sub
ss
dec
mull
aaa
sbb
pop
inc
add
aad
xchg
idivb
cmp
mul
dec
out
mov
sub
cmp
dec
cmp
mov
mov
cwtl
adc
jecxz
sarl
push
xor
out
je
cmp
inc
mov
add
mov
push
sub
or
pop
sub
pop
mov
loop
icebp
mov
mov
rolb
cmp
push
pop
mov
or
mov
fsubr
xchg
push
xchg
push
call
hlt
dec
negb
push
xor
data16
dec
add
rolb
mul
pop
lcall
add
lahf
dec
cmp
and
mov
mov
bound
cwtl
or
inc
push
outsb
adc
inc
sahf
xor
xor
aaa
in
mov
push
sub
dec
enter
inc
jnp
push
add
jns
shll
push
jne
cwtl
mov
xor
lret
mov
lea
push
outsb
fcomps
xor
dec
cmp
and
daa
adc
setnp
adc
imul
jae
cwtl
jl
data16
shl
pop
cwtl
jp
popw
inc
shl
pop
or
scas
push
fwait
jns
mov
sub
out
add
adc
push
inc
cwtl
lcall
and
movsl
pop
mov
gs
es
ja
sub
adc
jnp
outsl
std
xlat
icebp
jle
push
mov
jle
aad
xor
xlat
test
sub
xlat
in
stos
add
data16
inc
add
jmp
sbb
cmp
push
push
push
push
or
popf
jbe
jns
cmp
xchg
lahf
xlat
sub
jg
dec
repnz
mov
iret
xor
cmp
mov
mov
mov
dec
clc
mov
xchg
push
sub
das
dec
cmp
xor
pushl
ja
inc
mov
idiv
push
test
add
cwtl
sbb
jp
adc
out
or
jo
xchg
mov
pop
icebp
sub
xchg
mov
push
cli
imul
inc
xchg
cwtl
int3
sbb
fadds
ss
push
in
sbb
rol
mov
sbb
mov
dec
sahf
push
jne
es
ficomps
dec
push
or
sbb
pusha
iret
daa
push
pop
cmc
mov
and
inc
fldenv
cmp
dec
xor
rcr
out
int3
fcmovne
add
sti
dec
xlat
mov
int
orb
hlt
dec
or
lahf
cmp
xchg
in
push
sub
mov
pop
in
stos
sub
fistpll
gs
mov
hlt
aaa
jmp
and
xchg
je
cmp
sbb
iret
out
in
push
repz
pop
out
xor
iret
aad
rep
out
out
jp
gs
mov
hlt
das
sti
push
ss
in
push
mov
sti
fiaddl
mov
push
xchg
lods
cmp
ljmp
cmp
lcall
xchg
int3
xchg
nop
lods
lds
lret
loopne
push
js
mov
lahf
xchg
or
js
int
lret
fmuls
xchg
mov
xchg
push
icebp
out
cmp
pop
loopne
cmp
ja
push
xchg
and
xchg
addr16
or
dec
lahf
mov
push
xchg
sub
lahf
mov
mov
push
mov
insb
fwait
cmp
push
push
stos
adc
cwtl
loopne
out
cmpsl
iret
stos
mov
ss
mov
xchg
clc
mov
cmp
mov
cmp
fcomi
add
xchg
xlat
xchg
sbb
movsl
push
xchg
fwait
cmp
dec
mov
cmp
xchg
roll
push
mov
rorb
or
sub
push
xchg
fnstenv
or
mov
flds
pop
fadds
push
movsl
push
add
push
mov
sub
fadd
adc
cmc
pop
push
fcoms
cmp
push
jno
movsl
add
jno
ss
cmpsb
stos
pop
push
in
ss
lds
mov
xor
mov
xchg
fsubs
xchg
fsubs
xchg
fcom
cmpsb
insb
sub
fistpll
dec
notl
pop
aam
jecxz
mov
cmp
push
in
cmpsb
scas
xchg
add
aaa
js
test
push
or
inc
in
daa
sbb
dec
js
xlat
addr16
ljmp
pop
xchg
out
out
nop
mov
push
xlat
lds
pop
outsl
ss
jne
push
inc
ljmp
mov
ss
sub
hlt
in
mov
cmpsl
daa
sbb
xchg
push
dec
in
push
cmp
mov
xchg
cmp
test
sub
cld
pop
lds
mov
fsts
movsb
xor
or
xor
mov
ss
loopne
out
loopne
cmp
xchg
add
ds
cmp
pop
sarl
add
or
or
lock
dec
push
leave
or
or
cld
das
std
inc
icebp
int
or
scas
inc
dec
ja
xchg
adc
sbb
add
scas
adc
clc
test
sub
mov
mov
pop
mov
idivl
leave
sarl
inc
push
cmpsl
aad
lahf
imul
js
jno
push
js
data16
add
stos
push
push
movsl
push
cmpsb
mov
or
in
cmpsb
add
xchg
test
xchg
pop
jmp
pop
pop
mov
aad
lods
push
lahf
test
loop
stc
fsubrl
mov
out
lahf
mov
pop
aad
out
aam
fldpi
xor
data16
add
cmp
push
jbe
and
pop
jno
notb
fstpl
mov
and
div
loope
inc
mov
loope
push
push
in
orb
je
enter
inc
sub
repz
inc
mov
mov
xor
mov
mov
adc
outsb
xorb
sbb
out
inc
cmp
jb
out
in
pushf
mov
stos
cmp
xor
out
cmp
mov
fwait
mov
out
sub
xor
jp
imul
pop
aaa
aaa
push
cmc
mov
pop
xchg
cmp
cmp
out
pop
mov
repnz
es
cmpsl
cmp
fs
stc
fdivrl
jbe
std
and
stc
push
test
mov
and
inc
ja
mov
cmp
test
fmuls
test
test
add
test
out
mov
stos
cmpsl
scas
mov
or
jbe
sar
sbb
call
in
ss
test
scas
or
sbb
xchg
gs
jmp
inc
in
scas
mov
aaa
lcall
sbb
xchg
cltd
adc
xchg
mov
inc
cmp
out
addr16
push
xchg
dec
popf
mov
popf
push
sub
push
out
lods
xchg
sub
or
lea
mov
cwtl
es
fwait
hlt
mov
push
mov
movsl
or
pop
cmp
aaa
add
jecxz
sub
cmpsb
push
mov
and
mov
xor
lret
pop
inc
mov
testl
adc
je
push
cmp
sub
test
xor
cwtl
sarl
push
je,pn
mov
cwtl
mov
cwtl
inc
jo
mov
inc
andl
or
leave
mov
lcall
lea
jns
cmp
pop
divl
push
test
out
xchg
out
pop
xchg
and
and
inc
fmuls
pop
ds
cwtl
cmp
sahf
jns
lea
cmc
clc
pop
fcoms
jl
addr16
pop
insb
aad
fdivrs
jno
cs
mov
push
pop
insl
push
or
daa
push
ljmp
push
mov
mov
inc
test
out
pop
aaa
adc
lods
xchg
test
cmp
gs
xlat
inc
aad
aaa
mov
xchg
mov
dec
dec
mov
inc
ret
test
mov
in
lcall
jae
test
add
mov
daa
inc
mov
push
jmp
pop
jnp
xchg
imul
xchg
cmp
cmpsl
out
inc
mov
push
in
mov
and
ret
inc
or
rcl
push
inc
add
push
jne
in
call
inc
mov
lods
inc
cmp
add
dec
sbb
xchg
pop
xchg
lcall
fsubr
inc
dec
dec
xchg
sbb
xchg
push
inc
cmp
push
mov
or
jo
out
incb
cmp
ja
out
out
inc
dec
push
push
cmp
and
sarl
pop
aad
push
es
fidivs
pop
lcall
aaa
lcall
xlat
add
lcall
aaa
outsb
cmp
test
push
sbb
data16
and
es
push
popw
loop
stc
or
dec
pushw
rcrb
mov
fistpll
jmp
inc
sbb
xchg
inc
cltd
arpl
cmp
mov
movsl
jno
mov
or
mov
or
jmp
cmp
xchg
mov
adc
fs
das
popf
call
push
aad
int
and
in
aaa
mov
in
jne
call
and
gs
call
pop
add
add
mov
es
and
jbe
jg
call
mov
and
scas
push
xlat
fdivs
adc
adc
push
sub
data16
push
mov
push
cmp
test
and
data16
sbb
sbb
push
push
pushw
inc
cmp
xor
mov
imul
push
cmp
das
mov
mov
fnstenv
test
inc
mov
stc
fdivl
call
out
push
pushw
inc
cmp
add
fisubs
fldenv
cmp
clc
bound
inc
les
push
int3
js
mov
sbb
sub
jne
call
fcomps
lds
cmpsb
cmp
inc
adc
hlt
aaa
sarb
jnp
xor
push
jg
xchg
icebp
jg
arpl
push
add
xchg
sbb
ss
xlat
pop
xchg
mov
jmp
in
xlat
xchg
ja
pop
hlt
lcall
mov
or
or
pop
daa
aad
and
nop
call
je
in
pop
movups
cmc
mov
cmp
or
outsb
or
mov
adc
xor
or
data16
daa
mov
imul
jecxz
push
inc
cmp
nop
or
inc
xchg
in
pop
inc
lcall
in
xlat
add
test
out
pop
pushf
or
or
dec
sbb
ja
pop
pop
ss
fadds
xchg
or
mov
adc
jbe
or
inc
cmp
or
stos
mov
js
jbe
fdivl
dec
inc
in
cmc
clc
jg
in
mov
mov
mov
cmpsl
mov
test
xchg
pop
inc
jge
cs
inc
imul
fcoms
sub
mov
div
xorb
data16
push
les
mov
sub
pop
sub
fimull
inc
mov
fldt
mov
mov
fs
enter
das
movzbl
das
xor
or
xchg
mov
xor
call
aaa
xor
aaa
gs
call
popa
in
mov
mov
dec
cmp
adc
push
sub
add
xchg
jmp
push
ret
xchg
push
push
divl
movb
lahf
popf
push
not
cmp
aaa
push
lock
lret
push
jbe
inc
pop
or
xchg
or
je
dec
cmp
cwtl
nop
pop
xchg
repz
adc
js
mov
sti
ss
xchg
push
mov
pop
divl
rcrb
arpl
mov
iret
call
jnp
xchg
xchg
js
in
stos
jbe
lods
fcompl
lds
fcomp
mov
mov
mov
and
scas
push
sub
adc
lret
jl
insb
push
jae
inc
dec
in
faddl
test
fmull
push
or
nop
clc
sahf
push
and
push
mov
xlat
gs
in
daa
inc
testb
ss
xchg
or
and
dec
sahf
mov
dec
xchg
and
push
notb
ss
pop
ljmp
mov
inc
aam
dec
lahf
dec
hlt
sbb
cmp
hlt
imul
xchg
lcall
cmp
clc
daa
push
idivl
push
inc
cmp
mov
fwait
mov
je
cmp
adc
addr16
pop
loop
icebp
mov
mov
push
out
add
push
aaa
jl
xor
sarl
pop
or
mov
mov
cmc
push
inc
cmp
mov
mov
mov
dec
sub
aad
ss
outsb
daa
in
mov
addr16
add
inc
cmp
gs
outsb
push
nop
push
fcoms
nop
or
dec
shll
xor
sarl
pop
or
out
or
lods
rcrb
add
cmp
sub
repz
adc
mov
imul
fdivl
xchg
dec
pushf
insb
and
cmc
sbb
lods
mov
push
xchg
adc
mov
aaa
repz
jne
dec
mov
cwtl
call
lds
pop
jecxz
sarl
dec
test
and
push
add
mov
cmp
inc
mov
cmp
xor
insl
xacquire
cmp
addb
jbe
test
ja
inc
test
in
sarb
xor
pusha
xor
fmul
mov
add
aaa
ljmp
sbb
push
jbe
cmp
xchg
lods
jge
ss
sub
ss
inc
cmp
jp
push
jge
ss
sbb
or
pop
test
pop
mov
xchg
push
push
lods
pusha
clc
mov
mov
aaa
sbb
sub
or
mov
xchg
shr
pop
or
inc
shll
shrl
cmp
xchg
mov
mov
cwtl
cmp
cmp
cmpsb
lods
inc
jecxz
pop
adc
cwtl
mov
ds
je
mov
movsb
ret
adc
cmp
movsl
lcall
push
add
xor
and
pop
push
sbb
ss
mov
mov
inc
push
out
rcl
sub
sub
pop
negb
mov
jmp
test
push
push
in
in
shrl
shr
fsubs
cmp
nop
mov
mov
pop
daa
in
xchg
push
push
mov
lock
sbb
out
sbb
push
inc
sbb
dec
sbb
int
sbb
int
sbb
call
push
sbb
push
push
sbb
dec
push
sbb
push
sbb
mov
pop
sbb
sub
sbb
int
sbb
aad
ja
fmulp
int3
pusha
out
stos
mov
fcomps
dec
sbb
pop
fs
jnp
bound
xlat
add
cmpsb
lahf
iret
lock
push
lock
hlt
stos
js
hlt
cli
sub
hlt
dec
or
shll
cld
fiaddl
push
add
fidivrs
cmp
notb
and
cmp
or
jbe
cmp
lods
imul
inc
push
enter
movsl
jecxz
adc
xchg
cmp
cwtl
mov
dec
mov
hlt
or
mov
das
popf
inc
mov
xor
xchg
xchg
mov
xlat
mov
or
cwtl
outsl
cmpsb
or
mov
push
mov
xchg
push
fs
mov
out
mov
arpl
mov
inc
cmpsb
xlat
xlat
push
xor
cmc
sarl
pop
jge
push
adc
movl
adc
jns
cmp
inc
mov
cmpl
roll
cmc
test
sub
cmpsl
and
lahf
test
jmp
jecxz
cmp
mov
mov
mov
cmp
mov
inc
jns
imul
ret
mov
mov
popl
lea
mov
bound
or
fsub
pushf
sub
fisttps
add
and
cmpsl
xlat
dec
fsubs
add
add
jmp
or
js
ja
lds
cmp
imul
mov
popa
call
rol
jecxz
ljmp
lods
inc
cmp
mov
jae
inc
xchg
jne
push
fistps
inc
filds
jne
add
addr16
inc
pop
in
and
imul
cmc
xchg
xlat
xor
test
push
inc
aaa
mov
scas
cltd
or
mov
hlt
in
pop
stos
pop
sub
out
sub
imul
out
push
int3
xor
cmp
adc
ja
jae
aas
push
xchg
cmp
fadds
and
push
jb
inc
jmp
mov
out
aad
movsl
sub
inc
mov
and
pushw
sbb
cwtl
outsl
push
clc
xchg
push
xchg
aad
in
push
add
enter
fistl
scas
aad
mov
mov
lahf
mov
mov
cmp
pop
divb
jmp
mov
arpl
in
aaa
mov
sub
nop
lds
cmp
sub
aad
jle
mov
mull
pushf
xchg
dec
dec
call
mov
or
xor
lock
fsub
cmp
xor
insb
sti
inc
pushf
jae
dec
sti
and
repz
push
mov
call
pop
cmp
pushl
push
clc
jl
and
fisttpl
es
mov
ljmp
subl
mov
mov
cmp
in
dec
in
cltd
sub
lods
sbb
test
cmp
xchg
xchg
aad
test
jl
aad
add
iret
mov
cmp
cwtl
call
fistl
cmp
lds
ja
mov
sarl
out
mov
and
test
shll
pop
jns
stc
out
adc
dec
mull
xor
dec
inc
or
fwait
lods
xchg
mov
movsl
lret
cwtl
fdivrs
daa
xchg
and
popfw
xor
sbb
or
jge
xchg
pop
gs
xor
jne
xor
and
mov
js
cwtl
cmp
mov
push
pop
dec
inc
dec
mov
lods
das
sbb
push
cmp
cwtl
mov
test
je
jnp
sti
push
push
cmp
sbb
sbb
jb
and
lahf
mov
jnp
pop
push
sbb
cmp
pop
or
test
and
mov
ja
mov
cmp
fcoms
fdivs
lret
pop
fdivr
xchg
stos
push
out
or
aam
pusha
fcmovb
scas
fdivrs
cmp
sub
not
cmp
and
push
mov
cmp
stos
je
cmp
push
jo
cmp
js
daa
mov
daa
push
out
jae
movsl
imul
lret
add
inc
or
ficomps
mov
jnp
pop
insb
inc
inc
xlat
add
pop
xor
pop
inc
or
jmp
cmp
jbe
or
das
xor
ja
xor
bound
inc
aas
xchg
cwtl
fcoms
jmp
sbb
outsl
mov
sub
and
lea
inc
hlt
dec
fdivrs
and
hlt
fadds
out
or
sub
lods
inc
xchg
inc
xchg
call
fsubrs
cmp
mov
jae
enter
mov
mov
jmp
mov
ret
mov
mov
pop
insb
cmp
sub
ja
push
fidivrs
popf
notl
dec
dec
and
hlt
cwtl
mov
push
xchg
js
inc
and
addr16
push
not
inc
mov
lods
sbb
push
out
pop
imul
js
jp
pop
cmp
cmc
dec
imull
je
mov
push
ss
imul
xchg
push
mov
imul
cltd
add
xchg
mov
cmp
push
fidivrs
cmp
scas
sbb
cmpb
mov
mov
pusha
int3
jl
inc
popa
pop
mov
xchg
xchg
repnz
xchg
xchg
cmp
fsubrl
clc
je
mov
sbb
mov
lcall
sbb
push
int3
lds
aam
sub
stos
pop
in
inc
loopne
mov
push
sub
in
add
mov
push
and
notl
nop
jne
iret
cmp
idiv
pushf
jp
int3
fiadds
call
aam
in
ret
pop
xchg
push
lds
jns
fiaddl
movl
movl
aam
maskmovq
aam
in
mov
sub
int3
sbb
push
pop
int3
and
jmp
in
leave
push
sub
lcall
add
in
rclb
in
loop
aam
nop
in
rorb
int3
je
and
out
mov
fld1
out
int3
movb
pop
in
and
addr16
aad
test
mov
jae
out
sti
in
loopne
in
pop
dec
pop
jg
adc
pop
inc
cmovne
pop
and
nop
xchg
loopne
imul
push
in
into
imul
inc
xor
mov
ljmp
out
push
rol
rcr
cmp
fisubl
sub
clc
dec
loop
jl
je
xchg
cmc
cmp
ja
lock
arpl
push
add
cmp
js
push
mov
fwait
mov
mov
xchg
repz
adc
stos
sbbl
xlat
mov
divl
cld
push
jle
cmpsb
xchg
xchg
dec
xchg
jmp
fisubl
ljmp
xor
loop
sub
clc
pop
shrb
inc
sahf
pop
dec
xlat
ja
add
rorb
pusha
push
leave
pop
xchg
jnp
cmc
push
sub
mov
jl
mov
clc
out
call
xor
clc
ficompl
or
out
and
push
das
adc
shll
pop
imul
shl
cmp
dec
jmp
dec
lea
arpl
xchg
push
add
js
mov
je
insb
pushf
xchg
fimull
jae
push
pop
sub
imull
cwtl
nop
out
push
movsb
testl
jp
pushw
push
push
xchg
mov
xchg
imul
test
and
add
sbb
inc
jo
pop
mov
daa
leave
pop
lahf
es
fists
insb
inc
lret
test
sbb
loopne
xchg
xchg
outsl
daa
scas
mov
std
insb
test
daa
fucom
xlat
push
in
pop
xor
test
aad
cmp
pop
cmpsb
outsl
or
pop
cmp
psubb
iret
pop
inc
mov
and
popa
sub
dec
mov
pop
sub
fdivl
cmc
sub
les
adc
push
and
rcl
int3
outsb
ret
test
push
or
sub
jmp
out
fadds
push
or
in
out
leave
push
jl
push
in
out
sbb
sub
not
in
addl
pop
testl
fildl
dec
pop
sub
adc
outsb
xor
xchg
test
dec
lds
iret
push
xchg
xor
mov
xchg
add
stos
xchg
lahf
gs
pop
xchg
and
lret
sti
pop
pop
fcompl
adc
int
fcmovnbe
pop
inc
mov
mov
imul
jecxz
fs
mov
inc
add
test
push
aas
cmp
imull
xchg
in
mov
movsl
adc
fisubrl
sub
jne
mov
testl
inc
and
xchg
xchg
aad
cmc
xor
xchg
fistps
dec
mov
or
sti
aad
xchg
sub
js
aad
aam
mul
xlat
sahf
sbb
loopne
mov
sbb
loopne
xor
and
repnz
or
cwtl
push
inc
std
fcomip
sbb
pop
mov
jo
pop
push
daa
inc
jae
out
in
cmpsl
and
push
xchg
aad
stos
pop
dec
negl
adc
push
shrb
or
mov
cwtl
ja
push
daa
inc
sbb
pop
gs
push
pop
cwtl
out
in
push
fidivs
dec
pop
sahf
pop
push
imul
aam
push
or
inc
mov
jne
jg
ss
pop
sbb
mov
stos
mov
testb
mov
mov
xchg
in
adc
movsl
dec
xchg
xchg
xchg
push
push
xor
scas
stos
xlat
jnp
lock
test
push
jo
sahf
call
lock
xchg
call
pop
add
fucomip
lret
repz
iret
xchg
pusha
dec
mov
or
repz
mov
mov
sub
xchg
xchg
dec
test
mov
sbb
js
sbb
pop
dec
stos
mov
jbe
jle
iret
mov
das
pop
sbb
xchg
push
daa
sbb
popl
lods
mov
in
xchg
stos
ja
arpl
insl
push
jnp
or
repz
ja
and
adc
pop
pop
scas
push
push
dec
daa
mov
aad
cmc
aaa
ja
xlat
mov
cmpsl
int
test
mov
push
cmc
cmpsb
fsubrp
lret
mov
negl
pop
stos
mov
sub
push
pusha
imul
hlt
shlb
inc
jl
mov
aad
mov
push
adc
popa
clc
iret
jmp
xlat
adc
rorl
dec
gs
jmp
repz
es
leave
js
ja
pusha
into
add
mov
pop
pop
adcb
aad
push
ds
jae
movsl
aad
pushl
mov
push
loopne
xlat
pop
or
add
push
jbe,pn
aaa
loop
jl
pop
rorl
fildl
mov
aaa
pop
adc
roll
cwtl
add
jne
pop
popf
push
cmp
xchg
imul
dec
out
int3
pop
pop
iret
out
js
xchg
andl
iret
xchg
std
mov
mov
mov
push
push
mov
mov
frstor
xchg
pop
jmp
mov
jecxz
push
sub
sub
test
stos
push
pop
push
adc
cmp
test
push
mov
inc
xchg
dec
cmpsb
pop
push
sti
nop
push
xor
inc
push
stos
imulb
addl
js
push
int3
or
mov
cwtl
int3
add
out
aad
push
out
adc
adc
fwait
xchg
out
pop
imulb
jl
js
or
mov
or
mov
ljmp
std
lret
in
js
push
or
sahf
imul
mov
sub
test
mov
call
xor
add
and
rcrl
inc
lahf
sahf
or
mov
sahf
mov
nop
andb
pop
stos
jle
stos
and
sti
jp
vpmacsdql
xchg
scas
pop
in
cs
ljmp
pop
lods
xlat
fs
mov
arpl
push
pop
scas
mov
xor
cmpsb
mov
lret
fadd
or
int3
hlt
repnz
pop
pop
fists
mov
inc
mov
sub
jo
pop
push
andb
add
inc
xlat
incb
push
xchg
je
mov
add
push
repz
mov
fsubp
mov
and
push
lahf
push
stos
stc
sti
lea
gs
mov
pusha
xor
insb
fidivrl
sub
push
into
mov
ret
aad
mov
aaa
push
mov
or
mov
daa
xor
int3
mov
sub
adc
pushf
aaa
js
fsubp
jne
sbb
pushf
aaa
js
fsubp
insl
pusha
rorl
pusha
daa
jmp
sub
mov
push
scas
jp
int
pop
test
ret
jge
dec
lock
lea
xlat
shll
ss
mov
sub
fwait
push
fdivs
jae
push
cmp
push
mov
sub
rcl
inc
mov
push
movzwl
out
lea
sarl
jmp
adc
inc
xchg
andl
mov
mov
push
sub
pop
jle
iret
cmpb
dec
push
mov
clc
cmp
mov
cmpsb
push
mov
loopne
int3
test
pop
fistl
ja
std
loop
sbb
add
daa
imul
add
cmp
sub
xchg
jbe
iret
dec
cmp
pop
in
inc
mov
je
or
clc
mov
pop
repz
push
adc
es
inc
repz
mov
xchg
lea
xlat
leave
test
movl
pusha
lock
add
inc
popa
sub
mov
clc
fs
add
imul
mov
repz
test
loop
imul
std
cmpsl
pusha
cs
and
dec
daa
imul
cli
mov
in
das
mov
lods
adc
js
jne
stos
imul
jne
popw
mov
and
cmp
movsl
fiaddl
push
cmpsb
jmp
jo
imul
stos
mov
sub
jae
aaa
dec
mov
sub
pop
bound
out
cmp
sbb
xchg
dec
out
pusha
add
scas
call
in
jbe
push
pop
outsb
mov
mov
in
andl
mov
loop
mov
pop
and
stos
pop
mov
fadds
push
xchg
addl
sbb
jnp
or
movsl
cmpsb
sahf
inc
xlat
and
adcb
in
cmc
insb
xor
mov
lret
push
sub
stc
in
ss
fdivs
mov
cmp
sbb
ret
insb
xchg
xchg
sahf
xchg
lods
mov
adc
or
aaa
push
aas
jo
pop
and
mov
mov
adc
sahf
dec
add
data16
xchg
push
xchg
inc
leave
ljmp
xchg
rcrl
push
out
mov
mov
int3
xchg
pop
lds
push
decb
int3
and
mov
jae
popf
fistps
jmp
add
pop
lock
nop
mov
xchg
mov
pop
push
filds
mov
jns
mov
dec
movsl
sbb
push
test
lahf
js
adc
jmp
or
in
cli
xchg
xor
outsl
aad
jl
aam
pop
shrb
into
psubusw
push
pop
push
adc
mov
adc
dec
ljmp
push
push
adc
in
push
pop
jle
icebp
pop
pop
mov
mov
aam
mov
lock
nop
inc
adc
or
mov
aad
sysret
inc
push
fdivl
jl
jns
xchg
pusha
popw
sub
call
loopne
je
out
lods
movl
mov
push
cwtl
stos
data16
lods
xchg
pop
imul
adc
test
ret
xchg
stos
xchg
pop
inc
fwait
xchg
divb
push
cmc
inc
push
push
mov
inc
pushf
xchg
ja
push
fimuls
mov
add
cwtl
inc
repnz
pop
mov
notl
add
adc
push
into
lock
clc
xor
xchg
mov
lock
xchg
aas
jl
fcomps
pop
cmp
decl
clc
aad
push
in
jg
seto
pusha
in
or
mov
push
insb
int3
push
inc
out
mov
movsb
popf
call
test
push
and
scas
push
inc
orl
dec
sub
not
rorb
decb
out
repz
lahf
sbb
xchg
mov
inc
xchg
jl
xchg
adc
push
int3
mov
outsl
out
addr16
and
mov
lahf
add
push
xlat
sub
das
and
scas
mov
js
lea
lcall
sub
repz
call
jae
es
pop
daa
das
jge
jecxz
push
add
arpl
fdivr
andl
and
stos
test
sub
cmc
pop
pop
jo
or
pop
adcl
add
dec
xor
negb
xchg
into
jns
mov
leave
inc
mov
scas
call
mov
imul
add
dec
cmp
xchg
fcmovne
sub
subb
dec
test
nop
rol
sub
ja,pt
roll
out
mov
lock
adc
sub
aam
push
xchg
popa
mov
pop
rcll
dec
rclb
mov
dec
inc
mov
mov
sbb
je
test
ds
or
push
mov
mov
movsb
dec
iret
push
mov
sbb
ss
ljmp
pop
ja
das
fsubp
push
repz
pop
adc
shll
and
push
push
pop
div
popa
push
test
add
incl
mov
adc
pop
sub
jg
lods
xchg
dec
xor
cwtl
push
jne
inc
jne
shll
mov
loopne
lret
shrl
mov
loopne
jns
in
mov
push
mov
je,pn
std
push
mulb
pop
jp
pop
fwait
or
adc
aaa
out
pop
pop
sub
fwait
sbb
aaa
mov
add
cmpsl
aad
int3
xor
jmp
push
push
xchg
push
jbe
push
and
repz
mov
nop
jbe
pop
testw
mov
cwtl
data16
mov
push
mov
fdivl
clc
mov
mov
jne
push
inc
test
lock
cmp
mov
scas
in
push
add
arpl
addb
jl
ljmp
in
mov
shlb
sbb
fsts
xorb
xor
es
pop
mov
lds
push
inc
cwtl
std
cmp
in
sub
pusha
sbb
out
ja
xor
push
pop
adc
mov
adc
inc
jecxz
out
dec
or
fcmovnb
aad
ds
push
xchg
aaa
pop
test
mov
or
and
imul
or
cmc
jne
ja
sub
inc
fcomp
push
xchg
or
je
fsubr
sub
loop
xor
inc
pop
mov
test
fcmovbe
pop
nop
or
lcall
mov
pop
mov
inc
aas
in
inc
adc
jmp
movsl
sbb
or
or
pop
xchg
out
push
icebp
or
push
sub
fwait
jge
pop
stos
cmpsl
mov
adc
in
test
xor
mulb
mov
xchg
aas
push
cmp
cwtl
ficompl
iret
ljmp
inc
xor
out
out
movaps
pop
fildll
push
dec
or
lock
imul
fbstp
sbb
mov
pop
sti
push
jae
xchg
test
jp
xchg
aas
and
daa
scas
sbbb
xor
fadds
and
add
addr16
xchg
xchg
sbb
enter
or
imul
xchg
jp
test
push
pusha
xor
sub
xchg
push
ss
ret
mov
sub
sbb
enter
mov
xor
mov
sub
xchg
push
sub
mov
push
lahf
dec
inc
fistpl
cmc
out
sahf
lea
ja
fcoms
inc
rolb
and
les
xchg
mov
hlt
test
xor
jl
inc
inc
xchg
orb
adc
and
daa
fcompl
fdivl
jp
pop
jo
ret
fcoms
out
and
dec
mov
xchg
nop
xor
es
nop
add
mov
rorl
cmp
dec
mov
pop
adc
cmp
rcr
insb
test
inc
adc
ret
or
inc
push
mov
shll
ret
cltd
xchg
test
push
aaa
mov
fimuls
aas
cmp
test
jp
xor
aam
jle
xor
mov
nop
lret
data16
adc
sahf
xor
or
test
mov
dec
dec
inc
mov
insl
jl
jo
call
mov
add
mov
pop
add
lcall
mov
mov
notl
lea
adc
push
js
and
xchg
add
lock
out
test
pop
imull
in
and
cwtl
into
mov
lds
jo
nop
xor
lds
mov
mov
jp
push
mov
popf
shll
mov
pop
push
into
mulb
inc
out
mov
pop
pop
xchg
mov
adc
and
xchg
dec
jnp
adc
int3
dec
mov
mov
sub
cmp
aas
sub
xchg
bsr
test
dec
push
scas
pop
adc
dec
xchg
sbb
mov
cli
scas
push
dec
addr16
push
mov
out
pop
or
pop
inc
or
dec
add
mov
addr16
jo
incb
and
sbb
fwait
jg
stos
jg
jnp
mov
js
int
dec
sub
psubq
xchg
fdivp
add
inc
jl
rcrb
loopne
xorb
cmp
insl
testl
pop
iret
fistps
mov
jmp
shrb
push
addr16
sub
dec
adc
jnp
push
sbbb
aad
jmp
jmp
js
sbb
push
adc
pop
mov
push
and
fwait
outsl
pop
mov
mov
notl
aaa
or
adc
orb
sbb
jle
outsl
js
ds
lds
jmp
test
mov
jae
fisubrs
pop
sub
mov
dec
mov
xchg
lret
push
inc
push
dec
das
or
jmp
xlat
sub
mov
cmp
pop
inc
fisubrl
mov
lcall
sahf
adc
dec
mov
pop
jbe
push
in
outsl
cmp
into
mov
incb
mov
mov
push
sets
mov
sti
aaa
mov
mov
mov
jnp
test
dec
mov
pavgw
insb
mov
pop
shlb
fcom
sbb
std
filds
jp
jle
mov
shrb
js
jb
jnp
mov
imul
jne
pop
pop
and
push
fstl
cwtl
insb
pushfw
lds
sbb
insb
in
int
inc
mov
pop
pusha
and
inc
loopne
xor
dec
jmp
pop
call
cmpsb
push
clc
adc
decb
pop
gs
push
dec
ss
stc
or
mov
sbb
int
out
xor
sahf
xchg
lods
das
jl
stos
pop
or
fadds
ja
dec
pushf
popf
push
aaa
bound
xchg
outsb
jl
cmpsl
xlat
arpl
adc
sti
daa
fmuls
push
xchg
or
loope
push
in
push
lahf
das
jnp
pop
pop
rcrb
sbb
insl
icebp
sahf
jo
lds
clc
popf
insb
push
in
imul
pushf
pop
sbb
cvttps2pi
dec
repz
mov
inc
pop
mov
jmp
pusha
add
outsb
iret
xchg
push
xor
js
push
gs
fwait
mov
jb
ja
stos
pop
jo
pop
stos
push
push
pop
push
mov
push
jne
and
add
add
lretw
fs
dec
pusha
sahf
insb
pop
cmp
testb
out
pop
iret
and
or
adc
rol
lret
inc
decl
sub
mov
ret
icebp
sahf
inc
sub
mov
fidivl
pop
mov
mov
jo
fs
pop
xchg
aaa
ficoml
f2xm1
or
imul
icebp
xchg
xor
xor
xchg
in
pop
arpl
pop
iret
stos
pop
pop
pop
pop
cmpsb
mov
in
pop
sub
xchg
popf
mov
lods
mov
mov
std
jb
aaa
dec
push
lcall
push
push
xchg
ljmp
arpl
inc
dec
sub
in
sub
mov
push
mov
test
sbb
inc
fbstp
cmp
stos
pop
in
pop
aas
scas
mov
mov
insb
loopne
lahf
adc
add
sub
mov
scas
pop
test
adc
data16
in
xchg
out
push
cmp
nop
imul
insb
jge
mov
popl
dec
jo
ss
jmp
jo
mov
jmp
adc
jne
adc
push
fildll
movlps
out
outsl
fisubs
cmpsl
insb
xchg
stos
cmc
cmp
add
jge
add
sub
jmp
out
dec
outsl
xor
mov
std
lea
scas
or
pop
aaa
adc
aas
testb
mov
xor
mov
pushf
xchg
repz
cmp
cwtl
push
out
movsl
dec
push
xchg
pop
aaa
pop
and
jmp
andl
cmp
pop
out
adcl
xchg
xchg
cmp
ror
inc
mov
ss
mov
jmp
das
lea
daa
lods
xor
push
out
mov
rorl
cs
pop
jmp
pop
mov
xlat
pop
outsb
test
push
jmp
clc
inc
paddd
cwtl
iret
sahf
test
insb
pop
push
mov
pop
pushf
xchg
outsb
dec
mov
js
out
sub
pop
into
jmp
jmp
sub
inc
mov
inc
mov
pop
punpcklbw
inc
push
pop
fistpl
push
sbb
out
inc
jo
pop
mov
add
cmp
mov
icebp
mov
lock
inc
imul
popl
pop
fbld
and
xor
test
pop
out
mov
pushl
ljmp
test
inc
add
iret
pop
aaa
and
mov
sub
mov
xchg
lret
sbb
mov
jecxz
movsb
push
cmp
cmp
lea
mov
or
icebp
cwtl
iret
into
jle
shr
outsl
mov
arpl
and
inc
sub
sbb
inc
mov
ljmp
test
addr16
cmpsl
imul
mov
sub
addr16
mov
xchg
adc
xchg
mov
dec
xor
cmp
iret
sbb
fcoms
addr16
or
jl
inc
dec
in
or
xor
out
jb
jmp
pusha
xorb
aaa
sub
pop
shl
js
inc
jl
aad
call
jmp
mov
adc
stc
mov
inc
insl
mov
adc
jle
jl
sbb
icebp
test
and
push
bound
mov
out
push
les
inc
adc
mov
vpmacsdqh
aas
insb
scas
xlat
pop
jb
in
shr
outsl
imul
or
and
negb
aas
dec
adc
arpl
dec
rcr
fisttps
out
adc
xor
pop
inc
or
sbb
mov
rolb
rorb
mov
mov
ljmp
xor
mov
jmp
sub
push
sbb
outsl
mov
pfacc
setl
mov
mov
popa
cmc
xchg
aas
sub
shlb
test
fistpl
xchg
sub
push
pop
mul
imul
mov
pop
dec
in
mov
xor
pop
push
xor
mov
mov
mov
repz
test
dec
mov
cmpsb
pop
setp
out
adc
ret
int3
xchg
push
push
out
xchg
mov
push
mov
fistps
jmp
sub
nop
sbb
cmp
pop
movsl
xchg
or
aas
pop
jl
xchg
jo
xchg
in
test
es
ss
mov
jl
adc
xchg
das
out
call
jbe
stos
add
push
clc
data16
repz
mov
cmpsb
adc
mov
inc
pushf
enter
push
inc
jp
mov
bound
mov
pop
sbb
push
rorb
into
jmp
adc
mov
sub
mov
insl
dec
cmpsl
scas
cwtl
push
xor
jo
jmp
or
jl
sete
stos
jo,pn
gs
push
cmp
imul
pop
scas
push
pop
dec
ds
aas
pop
imul
nop
iret
jmp
pop
mov
out
push
sbbb
jecxz
xlat
out
mov
lcall
push
xlat
dec
cs
popf
cltd
and
pop
xchg
std
jne
hlt
pop
cwtl
pusha
out
int
or
aad
mov
push
pop
into
pop
adc
xchg
mov
arpl
inc
xchg
adcb
pop
push
out
aad
icebp
mov
xchg
out
inc
pop
imul
pop
dec
jle
cwtl
test
dec
inc
xor
cld
sbb
mov
xlat
lcall
je
sbb
lods
cld
mov
popf
mov
cs
das
xor
scas
xorl
mov
imul
addr16
in
sahf
push
fisttpll
mov
out
push
fisttpl
scas
jg
insb
mov
inc
ja
mov
xor
aas
pop
insl
adc
mov
sbb
push
jl
cwtl
dec
xor
jb
in
add
rorl
mov
adc
mov
das
scas
mov
fiaddl
push
lea
adc
sbb
test
iret
fistl
lock
cwtl
mov
inc
std
xor
sbb
addr16
add
or
andb
es
inc
rclb
dec
push
pop
jo
xchg
imul
cltd
mov
pusha
push
xchg
sub
push
push
pop
sub
pshufw
mov
ds
in
mov
pushf
mov
and
fpatan
in
mov
jge
out
mov
fwait
mov
xor
ret
andl
adcl
cmp
daa
xchg
dec
sbbl
outsb
cmp
aaa
idivl
xorb
xchg
ljmp
mov
mov
mov
push
jp
sub
jo
mov
call
push
inc
sbb
cwtl
out
dec
sub
add
sub
jl
mov
jecxz
xor
roll
jp
xchg
pop
inc
iret
iret
xchg
outsb
pop
sbb
cmp
sbb
xlat
jne
sub
sub
repnz
xor
adc
lcall
test
xorl
mov
les
or
pusha
push
lcall
push
cwtl
cmp
mov
jbe
lcall
ss
or
out
pop
mov
repz
popf
xorb
mov
mov
imul
push
subb
sbb
int
stos
xorb
jne
stos
cmpsl
mov
nop
mov
add
inc
ss
data16
push
pop
pop
fucomip
and
pop
sbb
test
cmp
insb
lock
scas
je
jmp
repz
sub
push
int
mov
lds
push
stos
mov
pop
jl
add
xlat
cmp
push
xor
mov
xchg
lcall
lahf
and
sbb
push
aas
loopne
xlat
outsl
test
shlb
push
sub
incb
icebp
mov
mov
xor
mov
push
call
push
xor
push
xor
xchg
pusha
mov
mov
push
pop
sbb
out
cld
dec
stos
fwait
cmpb
jl
lods
shrb
and
out
inc
icebp
test
and
mov
test
jo
icebp
xchg
sbb
xor
insb
xchg
xchg
mov
fsubrs
test
jle
in
push
dec
repz
roll
cli
push
fists
xchg
out
pop
xchg
filds
mov
sub
fs
push
in
jecxz
fdiv
stc
lock
iret
das
mov
scas
mov
jo
fcmovnb
repz
ds
sub
in
clc
or
lea
rcrb
out
ljmp
pop
test
or
gs
or
out
int
push
push
push
js
add
mov
cwtl
sbb
jbe
push
pop
cwtl
jge
std
add
mov
icebp
cmp
aam
sbb
jne
fsubrs
adc
jb
pushf
call
jl
or
adc
mov
pop
aad
cmp
xor
push
jae
jbe
das
pop
addr16
call
jbe
add
fsubs
adc
fistl
xor
comiss
xchg
sub
sbb
and
jmp
xchg
notl
out
mov
mov
mov
mov
mov
sbb
mov
mov
xchg
push
and
pop
sub
fisubs
mov
pop
jns
jo
out
out
sub
xor
pop
out
imul
xchg
mov
gs
add
jge
push
fidivs
pop
mov
sysexit
push
aas
sbbb
jl
jg
or
or
repz
inc
sahf
es
sbb
and
add
fwait
mov
mov
jo
dec
sbb
mov
adc
imull
cmp
and
xor
xor
stos
and
pop
jbe
ffreep
push
ja
sub
and
push
push
jo
dec
and
mov
scas
pushf
jg
mov
je
popf
push
lea
jo
jbe
scas
cmp
setno
push
pop
pop
cmp
jmp
mov
gs
jns
ljmp
pop
xchg
imul
pusha
cmp
adc
lea
aad
sahf
rolb
lcall
cmp
push
lock
ja
push
dec
sahf
testb
sub
insl
xchg
js
iret
xchg
or
mov
sbb
out
cltd
xor
mov
scas
inc
call
insl
mov
ss
inc
jmp
mov
imul
jge
push
inc
or
mov
scas
stos
daa
testl
scas
test
mov
lcall
add
movsb
int
test
test
push
cmovns
fldenv
mov
sub
jge
mov
push
xchg
xchg
xor
lea
mov
test
xor
das
push
js
push
jo
imul
mulb
xchg
adc
ljmp
daa
push
push
inc
es
rcrl
mov
lcall
sbb
mov
enter
jmp
sub
jmp
mov
ret
xchg
mov
sahf
bound
sbbb
stos
xchg
mov
js
add
testl
setae
adc
sahf
push
push
adc
cmc
push
cmp
or
nop
adc
jb
iret
sbb
std
sub
mov
add
sbb
movntps
push
pop
sub
jle
mov
push
cmp
mov
sbb
daa
add
jg
call
jl
pushf
push
add
jmp
add
mov
in
dec
filds
adc
pop
push
xorb
cltd
aad
add
ret
jns
fbstp
cmc
in
ja
mov
fs
jnp
jo
out
mov
icebp
push
cmc
push
xchg
push
das
jge
rcrl
cmp
mov
je
inc
cmp
inc
scas
dec
pop
mov
movsb
sahf
pop
iret
shll
ret
fsub
xor
sbb
ja
dec
imul
sbb
pop
xchg
xor
add
test
dec
lcall
pop
fwait
xor
je
scas
jnp
or
pop
jae
dec
dec
mov
sbb
jns
pop
mov
jae
outsb
lcall
xchg
adc
jbe
cmp
scas
cmp
inc
test
jl
adc
pop
dec
dec
insl
jge
add
dec
xchg
cmp
mov
pop
pop
xor
cmp
test
pop
jne
cmpl
sub
aad
xchg
mov
sahf
xchg
imul
push
add
push
mov
jmp
call
lahf
sarb
scas
sbb
fistpll
mov
iret
out
dec
pop
and
psllq
pop
mov
mov
push
aas
lock
sbb
jg
push
imull
xchg
cmc
cmp
call
jne
das
loop
cmp
sbb
push
xchg
mov
les
jp
loope
add
xchg
fistl
push
wbinvd
addr16
enter
xor
lods
adc
add
lock
dec
jno
inc
jae
popf
jno
ds
inc
fdivl
imul
jecxz
out
in
in
mov
hlt
jno
add
cmp
add
aaa
lea
adc
mov
je
fs
shlb
loopne
fwait
jg
mov
incb
iret
and
lcall
add
push
repnz
repz
xchg
dec
sbb
popa
call
pusha
dec
jne
mov
pop
pop
jmp
cmp
popf
subb
xor
int
sub
lea
push
adc
dec
btc
insb
push
xchg
dec
lcall
xchg
insb
jl
jmp
push
mov
xorl
or
sbb
rcrl
pushf
aas
fs
sub
push
outsl
sub
pop
lcall
sbb
cmp
cmp
div
xchg
lea
mov
xchg
push
xor
ss
xor
test
sub
push
push
shl
into
xchg
push
iret
or
or
add
dec
outsb
push
mov
mov
in
push
or
sti
add
jns
jo
xor
sbb
arpl
repz
call
rclb
pop
out
movsl
mov
push
aas
incl
jle
and
mov
out
das
lods
ficomps
jbe
fs
mov
xchg
inc
imul
sub
fistps
inc
cmp
adc
nop
pop
xchg
out
dec
push
add
and
icebp
pop
mov
cmp
xor
loopne
jge
mov
test
jnp
scas
pop
inc
lahf
xchg
mov
jle
sbb
mov
mov
fwait
inc
test
dec
sbb
xchg
aad
sub
fwait
addr16
fwait
mov
jmp
lods
jle
sahf
pop
cmp
pop
std
icebp
loope
imul
inc
dec
mov
mov
ss
mov
das
and
movd
cmp
lea
lahf
mov
and
scas
fwait
test
ss
les
in
cmp
push
xchg
ss
and
sbb
push
cmpps
aas
in
imul
mov
sbb
mov
sbb
lcall
cmpsb
jp
mov
ds
mov
lahf
add
mov
enter
push
scas
popa
cwtl
mov
mov
cs
fistl
pop
outsb
pop
jle
ja
jno
mov
mov
mov
inc
jo
mov
push
add
lods
int
push
gs
sub
add
pop
test
sub
mov
lcall
sahf
push
jge
insl
jl
or
xchg
mov
mov
cmpb
mov
mov
lods
cmp
and
inc
pop
fs
adc
xlat
dec
dec
xor
xor
in
fwait
dec
jnp
dec
pusha
mov
inc
add
mov
xchg
mov
inc
jo
xorl
rcr
imul
mov
es
cmp
adc
rcr
add
xlat
sbb
xchg
jl
neg
scas
ja
cs
xchg
nop
xchg
into
dec
popf
lea
sbb
sbb
mov
jo
and
insb
sbb
sbb
js
jmp
sti
sub
pop
jno
fadds
js
cwtl
lea
or
adc
push
aas
ds
in
daa
inc
stos
xlat
add
in
dec
push
sub
fs
gs
pop
fldenv
or
std
jp
inc
mov
cmp
scas
iret
mov
imul
xor
push
push
pop
cmp
jbe
jp
jae
out
daa
add
dec
sub
jp
jno
xchg
push
jle
add
sub
cmc
jp
mov
jecxz
xchg
pop
xor
in
lahf
popf
or
jo
pop
push
pop
xchg
cmp
add
add
or
scas
movsb
xchg
sar
imul
fcomps
test
stos
test
subps
pop
or
mov
test
adc
and
test
cmpsl
xor
fists
inc
js
sub
add
mov
fisttpl
sbbl
std
ds
xor
dec
scas
sub
jmp
push
test
or
pop
add
andl
push
xchg
outsb
mov
mov
jne
inc
pop
cmp
enter
or
dec
sub
sbb
sbb
dec
lods
fiaddl
xchg
jb
out
xchg
mov
bound
xor
xchg
imul
add
jmp
cmp
push
lock
or
imul
outsl
mov
xor
or
roll
movsb
ucomiss
std
or
cmp
ret
mov
mov
lahf
ret
fcoml
pop
mov
or
into
out
mov
dec
aas
push
inc
sahf
sub
in
iret
out
mov
outsb
icebp
fsubrp
sub
fbstp
mov
lahf
lcall
push
adc
or
into
jmp
pop
js
mov
pop
movsl
pop
or
dec
jns
gs
into
mov
mov
repnz
jae
xor
inc
or
mov
add
mov
ret
imul
jns
xchg
mov
cmp
dec
xchg
ret
imul
into
lcall
cs
push
dec
xchg
sbb
repz
cmc
jbe
mov
sub
inc
adc
cwtl
mov
mov
jno
jle
mov
ss
bound
js
xchg
scas
add
and
fisubrl
mov
dec
in
nop
lds
daa
pusha
mov
gs
cmp
popf
dec
fs
xchg
inc
add
rorl
push
add
aad
cld
and
repz
lods
ss
xchg
jle
adc
push
sub
enter
rclb
push
repz
dec
jae
sbb
aad
cs
xchg
dec
mov
out
mov
rcrl
mov
in
aad
adc
testl
call
es
sub
outsl
dec
xor
lahf
mov
outsl
fcomps
push
outsb
out
cmpsl
out
jl
int
popa
shlb
imul
gs
sbb
push
dec
insl
setno
push
inc
jle
cs
jno
outsl
bound
mov
mov
mov
mov
or
outsl
xor
inc
xorl
sbb
clc
xor
les
xchg
jbe
push
pop
pop
lahf
std
setnp
jae
pop
xor
repnz
jle
cmp
inc
scas
mov
xchg
xchg
jmp
xor
inc
bound
js
popf
decl
ja
push
adc
test
fsubl
inc
mov
scas
jg
jp
and
in
mov
scas
ret
pop
sub
or
jo
popf
jg
mov
or
push
sub
mov
jle
es
jb
cmp
aaa
push
cmp
xchg
xchg
ja
pop
aad
repz
dec
or
sub
iret
jmp
cmp
pop
pop
xchg
mov
add
push
push
cld
and
sub
fstpl
lock
jecxz
pop
pop
stos
add
ds
inc
cmp
lahf
int
pop
push
das
cmp
fidivl
adc
mov
dec
xorl
scas
dec
mov
stos
cs
mov
repz
movsb
or
sbb
sarl
or
add
bound
xchg
push
cwtl
or
mov
je
pushl
das
insl
scas
lods
cmp
dec
lea
mov
mov
mov
out
stos
call
jne
cmp
and
mov
lds
ljmp
sub
shlb
lahf
int
lcall
stos
cmpsl
icebp
stos
pop
pop
pop
push
mov
gs
cmpb
jae
ja
sbb
iret
lods
or
sub
pop
push
ds
pop
mov
mov
sbb
repnz
stos
fcoms
lcall
cmc
aaa
lcall
icebp
enter
lea
aad
iret
pusha
fwait
jno
xchg
scas
pop
int
sub
cwtl
aas
xor
adc
popf
jmp
fisttpl
cmp
repz
inc
sub
test
inc
dec
cs
lret
jnp
sub
sbb
xchg
cmp
push
addr16
fwait
aad
xor
sub
clc
fstpt
sub
jo
push
xchg
mov
sbb
or
ret
in
jg
fildll
inc
jl
push
sbb
enter
sub
bound
pop
lahf
insl
fildll
jo
addr16
pop
sub
dec
mov
arpl
shrb
popf
adc
popf
push
jbe
inc
fldt
sbb
scas
insl
stos
loopne
mov
xor
jbe
insl
or
incb
iret
pusha
pop
xchg
ja
scas
mov
lea
sbb
mov
mov
pusha
pop
aas
mov
xor
cwtl
es
ja
pop
push
add
mov
roll
cs
scas
je
ficoms
pop
pop
decl
cmp
xchg
les
adc
les
data16
scas
pop
pop
aas
sub
ret
test
cltd
xchg
dec
fucomi
adc
addr16
aad
repnz
pop
popl
dec
fldcw
adcb
push
xchg
ss
insb
mov
mov
lahf
xchg
push
jmp
mov
pushf
ds
cmp
inc
add
sub
xchg
sbb
bound
imul
inc
nop
jo
or
mov
lea
das
mov
sbb
mov
bound
das
and
call
scas
sbb
pop
out
cmp
lods
movsb
dec
xor
jae
out
jmp
repnz
mov
or
mov
adc
adc
or
test
fistl
jp
mov
lcall
incl
cmp
push
and
jge
jbe
mov
fnsave
lea
mov
in
inc
mov
xchg
aaa
cmpl
cmpsb
cs
pop
pop
sub
push
jp
mov
push
test
ds
mull
pop
clc
mov
xchg
jno
fildll
mov
popa
ljmp
push
push
cmpsl
cmp
iret
mov
dec
mov
ret
repz
xchg
jecxz
mov
push
dec
xchg
fbstp
ljmp
in
and
outsb
push
arpl
and
xchg
popf
mov
cmp
jno
xor
push
ret
mov
and
mov
lahf
insl
inc
lea
mov
out
shrl
or
and
sahf
mov
sub
inc
cmp
das
popa
push
mov
cmpsl
insl
push
sub
pusha
add
rcll
mov
cmp
sbb
jns
xchg
mov
adc
orl
cmp
jbe
xchg
loopne
or
jmp
iret
cmp
icebp
scas
sbb
lods
xchg
outsb
std
push
lret
loope
jmp
pop
lods
cmp
xchg
cmp
add
bound
js
cmp
test
jo
xchg
out
sbb
add
lea
xor
or
sub
push
roll
dec
addl
cmp
and
mov
mov
sbb
jmp
and
inc
andb
jnp
mov
mov
outsl
pop
cmp
dec
inc
jno
movsb
fisubrs
bound
out
jle
add
jno
fs
mov
sbb
jecxz
lea
rclb
push
cmp
in
enter
xchg
add
bndldx
jno
jns
xor
fs
mov
sbb
pop
movsb
aas
xchg
sbb
popf
inc
mov
jmp
mov
lcall
jae
xchg
mov
mov
xor
adc
rcrl
lods
pop
adc
test
sti
aas
pop
xchg
sbb
lock
sub
pop
movl
pop
mov
ret
push
jno
ds
pop
inc
fildl
gs
jg
cmp
dec
xchg
mov
stos
xor
cwtl
mov
lock
jnp
scas
out
push
push
jmp
flds
scas
les
push
sbb
aas
mov
stos
inc
les
iret
pop
dec
mov
lcall
mov
push
pop
push
in
pop
out
xchg
fwait
mov
les
add
popf
das
cmpsb
pop
push
scas
cltd
scas
xlat
js,pt
fildl
andb
pop
push
out
mov
cmp
out
imull
dec
insl
add
jo
push
pop
mov
sub
xor
or
mov
mov
inc
gs
sbbb
gs
inc
pop
daa
mov
push
cmpsl
mov
lahf
repz
xchg
dec
or
call
out
pushf
mov
inc
xor
nop
fdivl
add
out
sti
jbe
sbb
bound
and
xor
rcrl
xlat
fst
cmc
stos
into
ss
push
add
sbb
sub
addb
ljmp
mov
pop
push
pop
add
fcomi
cmp
in
jae
mov
adc
xchg
jne
mov
mov
mov
lea
xchg
test
adc
fsin
or
in
scas
pop
xor
push
inc
push
dec
pop
jg
inc
pop
xorb
sbb
pushw
divb
inc
mov
std
inc
es
cwtl
dec
js
add
jge
js
push
sti
lret
jle
out
popf
or
orb
js
mov
aas
pop
mov
push
jmp
mov
push
jae
rorb
outsl
fsts
add
cmp
adc
cs
idivb
jl
pop
lods
xchg
mov
int3
or
cmp
xchg
fisttps
jo
add
inc
shll
call
icebp
repnz
pop
cs
cmp
aas
and
sahf
scas
or
inc
sub
lea
and
lahf
mov
adc
and
xor
dec
jae
loopne
das
jmp
out
mov
pop
sti
and
insw
pushl
mov
gs
push
in
cmc
out
xor
imul
push
mov
jl
jl
das
mov
out
sub
ret
sub
push
jg
out
xor
xor
mov
iret
out
inc
scas
cwtl
test
js
loopne
add
mov
movsl
dec
cmp
out
cmovae
pop
sysexit
sub
sbb
xor
push
push
cmpsl
mov
cmpl
les
xchg
outsb
add
icebp
pop
and
push
pop
and
into
adc
jle
and
fstpt
inc
pop
fwait
push
lock
inc
mov
add
or
imul
mov
bound
sub
push
jb
cmpsl
xchg
push
add
push
mov
clc
or
or
jge
ja
or
mov
test
or
jae
out
push
testl
mov
gs
jmp
push
sub
sbb
add
sahf
es
jp
or
or
mov
and
es
cmc
cmc
addr16
outsb
mov
pop
lcall
mov
pop
xor
fldenv
jge
and
dec
sub
sahf
jno
arpl
add
cmp
insb
mov
and
and
aaa
mov
sbb
pop
test
xchg
cs
aaa
adc
orl
loope
imul
bound
pop
push
gs
pop
cld
lcall
xchg
xchg
lcall
sub
lea
jae
in
sbb
mov
xor
inc
mov
outsb
add
aaa
fisttps
ret
jmp
clc
sub
and
push
dec
lock
aad
adc
mov
mov
sbb
xor
push
adc
jle
cs
mov
sbb
jb
adc
out
push
xchg
or
das
popa
inc
stos
sub
int
xorl
mov
lea
dec
xchg
leave
in
cmp
mov
xchg
out
jle
out
sub
std
pop
jecxz
sahf
jmp
imul
xor
push
dec
push
movb
fidivrs
cltd
inc
xchg
push
jae
mov
and
jo
cmp
inc
mov
sti
mov
ds
jecxz
mov
ljmp
jae
push
mov
push
es
xor
repz
lods
arpl
push
jmp
xchg
inc
fisubrl
repz
sbb
jne
push
mov
lock
fs
call
clc
push
push
aad
sbb
adc
imul
xchg
fcoms
pop
scas
rorb
mov
sahf
adc
repnz
imul
dec
fs
out
cmp
jmp
mov
insl
jp
ret
or
sbb
or
cmpsb
push
insl
inc
push
jno
movsb
mov
jmp
pop
push
add
addl
mov
cmp
mov
xchg
sub
push
enter
in
xchg
repz
repz
pop
cmp
cwtl
sbb
lods
sub
or
lea
ret
jae
xchg
mov
jb
mov
mov
and
shlb
mov
aas
adc
xlat
and
sub
jmp
dec
sbb
test
xor
mov
fisttpl
imul
mov
jg
mov
adcl
xchg
jecxz
imulb
pop
cmp
ljmp
fldenv
pop
inc
xor
xor
or
fldenv
daa
mov
out
jo
adc
sbb
fistpl
pusha
test
js
lea
and
pop
xor
popf
push
pop
hlt
mov
orb
cmpb
ret
repnz
inc
sbb
test
fisubrl
mov
adcl
sub
adc
sahf
jnp
pop
out
jl
lea
mov
jp
inc
jp
xor
icebp
inc
sbb
fwait
mov
sbb
adc
scas
cmc
xchg
and
adc
pop
add
out
movsl
jle
cs
lahf
push
pop
xor
jo
andb
movsb
out
lcall
sbb
xor
cmp
push
scas
sbb
mov
imul
addr16
mov
mov
mov
pop
movsb
sub
in
ret
adc
mov
aaa
fistpll
in
in
movsb
xchg
inc
gs
dec
dec
jnp
mov
inc
jp
movsb
das
repz
test
test
push
cmp
je
ss
mov
and
cmp
orl
mov
das
loope
add
mov
imul
cmp
mov
imul
add
lcall
pop
push
int
mov
filds
inc
out
pop
jnp
fisttps
and
mov
push
pop
dec
iret
aas
inc
adc
test
push
jecxz
xor
push
push
sahf
jbe
cmp
dec
ljmp
adc
scas
ret
mov
pushf
idivb
jo
stos
rcrb
xor
cmc
dec
pop
and
out
pop
adc
outsb
push
push
rolb
xor
imul
xchg
popf
mov
adc
and
push
mov
push
dec
jle
fidivrs
ja
scas
sub
stos
ss
push
xor
ljmp
dec
scas
cmp
mov
inc
scas
dec
mov
cli
push
mov
icebp
push
mov
adc
pop
xlat
ja
mov
rcll
div
sbbb
mov
mov
loop
aad
outsb
mov
cs
pop
lret
mov
outsb
jle
jns
dec
aaa
int3
mov
mov
pop
dec
sahf
and
out
in
jno
xchg
loopne
push
insb
add
call
adc
insb
cmp
pop
in
repz
cs
inc
pop
dec
int3
or
je
add
je
shlb
popf
ljmp
adc
loop
in
push
push
test
ja
hlt
mov
add
jg
xchg
push
dec
mov
fnstcw
movsb
add
mov
cwtl
mov
ljmp
dec
mov
mov
sub
dec
xchg
xchg
jle
into
xor
ds
pop
fildl
mov
nopl
repz
sub
mov
pop
sbb
mov
inc
nop
iret
int3
imul
loopne
adc
rclb
shr
cmp
lcall
push
aaa
into
jo
popf
dec
pop
xor
clc
mov
dec
scas
clc
test
scas
cs
arpl
xchg
cli
outsl
sbb
out
out
sub
pop
xchg
insb
pop
or
xchg
pusha
sbb
jbe
push
insb
xchg
hlt
sahf
scas
push
mov
or
add
fists
add
sbb
jl
mov
mov
jns
add
outsl
mov
cmp
fs
js
mov
fadds
mov
es
mov
das
in
mov
lea
clc
add
js
test
pop
mov
push
push
loopne
pop
filds
xchg
and
nop
mov
cs
daa
mov
ss
adc
sbb
push
fs
mov
xchg
repnz
pop
adc
lods
ficoms
clc
adc
lods
pop
fcomps
loopne
test
and
cwtl
sub
fcmovb
clc
sub
xor
mov
daa
xor
ret
aas
loop
repnz
cmpb
aas
mov
aas
push
aas
bound
jb
add
adc
and
xor
sarl
aas
loope
icebp
aas
cmpl
mov
inc
aas
push
cs
inc
mov
les
mov
push
xor
andb
push
inc
shll
sub
push
dec
gs
std
lret
cmpsb
xor
cmp
push
test
push
sbb
jns
rol
xchg
xlat
push
out
notl
xchg
xchg
adc
adc
adc
add
push
add
sahf
xor
jbe
push
xor
ss
movsb
sub
mov
xchg
fldenv
pop
inc
mov
cmpsb
lret
psllw
mov
sub
jle
ds
rcl
sbb
xchg
mov
push
add
jne
sub
mov
cmp
inc
or
sbb
sub
cmp
lret
ret
fcmovnb
jmp
sti
ret
mov
fwait
ret
stos
ret
mov
ret
imul
ret
or
sbb
sub
cmp
lret
ret
ljmp
ret
stos
ret
mov
ret
push
jp
or
mov
xchg
repz
arpl
mulb
loope
dec
cld
cmp
jecxz
fs
jecxz
arpl
icebp
xchg
or
push
fisubrl
dec
add
sub
add
sbb
xchg
and
xchg
aas
jne
add
and
xor
cmp
inc
cld
call
lret
inc
jae
xor
pusha
pop
jecxz
addr16
ja
pop
aaa
pop
aas
daa
aas
aaa
aas
aas
imul
loop
xchg
js
andl
arpl
adc
in
inc
pand
addr16
jp
clc
in
out
sub
mov
mov
jbe
or
adcl
cmpsb
jne
add
shrb
add
sub
sub
lret
xor
adc
rol
inc
sbb
int
jmp
inc
push
ret
gs
jle
in
jmp
in
and
call
bound
add
test
pop
scas
and
fsubr
call
xchg
jle
inc
xor
add
cmp
cmp
xchg
pop
push
pop
adc
shl
xchg
addb
hlt
push
mov
add
std
aas
xor
int
jmp
aas
mov
adc
sub
incl
jo
sbb
daa
shl
call
pusha
jmp
pop
sbb
xor
iret
loope
popa
xchg
popa
mov
popa
aaa
popa
shrb
jecxz
popa
inc
popa
pop
popa
jp
push
popa
xor
popa
jmp
pop
mov
or
mov
cs
std
inc
popf
inc
mov
out
idivb
and
data16
jbe
push
aas
es
ss
lds
aad
in
cmc
aas
test
xchg
aas
movsl
aas
mov
inc
aas
gs
jne
add
aas
xor
pop
call
das
cwtl
aaa
test
mov
aas
push
xchg
sub
xor
out
divl
cmpsl
xor
push
cmp
ja
pop
xor
aaa
xor
out
divb
mov
dec
orps
push
xor
ss
in
cmc
mov
aas
movsl
out
ficoms
adc
and
sbb
xchg
call
rcrl
adc
pop
adc
or
sbb
sub
cmp
adc
adc
adc
adc
adc
ja
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jbe
push
adc
adc
adc
adc
add
jmp
ret
ds
sub
xchg
mov
adc
adc
stc
adc
adc
push
test
shlb
das
inc
aaa
popa
out
add
xor
decl
pusha
cmpl
ror
sub
sub
sub
and
lret
sub
sub
pshufw
les
ds
xor
scas
aad
out
xchg
xchg
aas
cmpsb
sti
mov
ret
push
ret
retw
jbe
push
ret
push
ret
es
ss
ret
in
cmc
ret
test
xchg
ret
movsl
ret
mov
inc
ret
push
ret
gs
jne
add
pop
sub
fdivs
call
cmp
inc
test
mov
push
js
jp
ss
xchg
pop
pusha
pop
sti
daa
scas
das
sbb
fnstsw
popf
aas
xor
pushl
xorl
add
cmpl
test
fmuls
mov
scas
mov
inc
sti
pop
outsl
out
ret
cltd
ret
dec
ret
jge
xor
int3
or
lcall
gs
xor
scas
push
inc
push
fidivrs
loop
fnstcw
mov
adc
mov
xor
aad
stc
adcl
andl
aam
clc
xchg
pushf
push
mov
xchg
and
adc
adc
adc
movups
sbb
jo
imul
sub
pop
sub
aas
sbb
xchg
sbb
pop
pop
mov
cs
add
stc
movsl
shll
inc
loopne
sub
gs
xchg
dec
xor
cmp
mov
dec
and
fists
jg
dec
push
add
push
push
jbe
call
je
iret
push
jecxz
ja
and
mov
imul
dec
in
adc
jmp
pop
dec
js
adc
dec
inc
dec
aas
aas
mov
pop
xchg
pop
inc
lret
xor
daa
gs
cli
add
dec
xor
lods
xor
adc
movsl
mov
sbb
and
popa
and
outsb
jecxz
dec
test
mov
test
or
insl
inc
rol
inc
xlat
inc
out
testl
mov
inc
adcl
pop
adcl
sub
sub
sub
sub
sub
sub
jbe
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
jne
add
popa
cwtl
bound
popa
pop
popa
push
popa
sbb
popa
cmp
popa
xlat
popa
out
notl
adc
or
popa
out
mulb
pop
xchg
mov
cmp
mov
mov
mov
xlat
mov
mov
dec
fs
xlat
jl
mov
xchg
add
dec
adc
add
aad
icebp
aas
lea
test
aas
jge
sbb
xor
mov
jo
pop
rolb
xor
xor
pop
mov
mov
in
inc
xor
dec
orl
push
and
and
adc
jmp
mov
imul
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
daa
xor
mov
repz
test
mov
inc
adcl
jle
xchg
mov
or
sub
sub
sbb
inc
xor
jne
ret
adc
pop
sub
fsubs
in
jo
cwtl
inc
test
mov
push
sbb
popa
cmp
push
xlat
xchg
and
adc
imul
sub
addr16
dec
iret
mov
sbb
rorb
jnp
sbb
cmp
fsts
lea
in
pop
mov
and
push
inc
dec
jne
scas
clc
jmp
push
xor
xor
cmp
pop
mov
scas
inc
lds
pop
xor
push
adc
cmpsl
cmp
js
das
xor
mov
lahf
sub
imul
cmp
ret
xchg
ret
mov
in
faddl
inc
ja
ret
add
repz
rolb
fadd
xchg
gs
testb
inc
mov
inc
inc
push
xchg
data16
addb
fistpll
es
ss
lds
xor
cs
lock
mov
repnz
jmp
xor
pop
cmp
pop
rcl
fisttps
xor
fcompl
fwait
xchg
jle
push
add
push
jnp
daa
shl
decb
or
insl
aas
or
and
mov
mov
inc
add
sbb
dec
cmp
xchg
adc
les
aad
aas
cmpsb
aas
mov
inc
aas
push
aas
data16
jbe
push
aas
push
aas
es
ss
lds
mov
adc
xchg
jmp
call
inc
int
jmp
pop
sub
sub
sub
adc
mov
mov
arpl
mov
or
push
jne
xor
scas
and
jg
sub
in
sub
sub
add
sti
xor
cmp
pushf
cmp
xchg
push
roll
xchg
inc
push
jbe
push
xor
xor
js
add
sub
mov
subl
popa
js
or
aas
aas
xlat
aas
out
xchg
xchg
aas
cmpsl
scas
mov
mov
pop
ret
jge
pop
mov
or
adc
sub
inc
fs
hlt
push
int3
das
mov
jmp
pop
adc
loopne
out
clc
add
or
xchg
adc
push
sub
adc
sbb
into
cmp
inc
xchg
and
scas
cwtl
in
daa
or
fidivs
cli
aas
sahf
aas
inc
aas
bound
lea
inc
mov
fwait
pushf
mov
jmp
and
dec
incb
daa
test
andl
int
sub
insl
int
push
or
sub
repz
ds
mov
es
pushf
push
mov
add
das
out
into
mov
xor
fs
jecxz
arpl
iret
push
xor
pop
add
mov
sahf
insl
nop
rcrb
pop
mov
movsl
movl
sub
xchg
inc
adc
push
adc
or
jmp
sbb
mull
popa
daa
popa
aas
popa
out
ds
push
cld
xchg
fistps
fwait
daa
das
das
bound
cmp
in
cmpsl
pop
repnz
js
or
sub
adc
xorl
test
or
popa
push
roll
push
xor
cmc
stos
pop
inc
loop
or
aas
popa
sahf
popa
inc
popa
and
push
insl
xchg
jne
mov
rolb
mov
punpcklwd
popa
leave
pop
loope
std
lods
adc
pop
daa
ss
sbb
mov
adc
pop
iret
dec
jecxz
dec
cmpl
loopne
add
cwtl
mov
orb
or
pop
scas
xor
addb
inc
xchg
inc
mov
sub
mov
add
xor
jmp
js
ret
mov
push
dec
popa
bound
popa
cmp
pop
lea
add
push
add
fbstp
repz
cli
ljmp
mov
shlb
or
out
pop
loop
rcrb
add
sub
inc
pop
movl
outsb
mov
adc
push
mov
push
jecxz
or
out
dec
notl
aas
in
cmc
in
daa
xchg
leave
out
mov
inc
sub
sub
add
xor
cmp
arpl
loop
bound
dec
sub
sub
mov
dec
cmp
inc
inc
ret
add
mov
int
dec
mov
or
test
xorb
rcr
xor
mov
int
daa
sbb
data16
jbe
push
test
mov
aad
in
cmc
addl
sub
add
xor
xor
jmp
ds
inc
jbe
push
inc
loopne
xor
cmp
scas
cmp
cmp
das
inc
push
add
sbb
divb
cmpsb
inc
mov
inc
xchg
push
into
push
sub
or
loop
dec
add
pusha
jmp
test
pop
xchg
aam
clc
fistl
lea
popa
adc
dec
orb
jp
int3
adc
in
pop
mov
outsl
repz
dec
push
mov
mov
repz
push
adcl
add
movsb
mov
pop
add
inc
pusha
movsb
push
subl
pop
mov
pop
mov
test
xchg
lea
scas
mov
shlb
fsubs
mov
cwtl
aaa
test
mov
push
jmp
cmp
push
sub
sub
push
sub
ja
pop
sbb
daa
xor
inc
out
testb
xchg
inc
cmpsb
inc
mov
inc
inc
push
inc
inc
jbe
push
inc
push
inc
es
ss
lds
inc
in
cmc
inc
test
mov
loop
gs
jne
add
xor
push
call
cmpsl
test
aaa
mov
orb
pop
mov
xlat
icebp
out
pop
xchg
popa
cmpsl
push
mov
lds
in
pop
pop
pop
xchg
jg
or
sub
pop
pop
xchg
xor
inc
out
push
in
mov
dec
out
sub
sub
sub
sub
sub
sub
mov
inc
xor
add
mov
sub
mov
lcall
jo
push
dec
test
scas
mov
xlat
xor
leave
lock
jmp
add
loop
pop
popa
jne
or
fs
ficompl
popa
dec
push
pop
inc
aad
xor
mov
test
xchg
aas
xchg
ret
mov
inc
aas
push
aas
pushl
dec
daa
jmp
pushw
popf
mov
mov
jmp
jmp
or
enter
push
das
push
out
xchg
ret
fmull
adc
or
cmp
or
sahf
out
sub
clc
add
pusha
ja
imul
aad
sahf
in
xchg
push
mov
ds
sbb
jbe
aad
in
cmc
js
ret
xchg
add
loop
push
push
gs
test
inc
xor
mov
mov
test
mov
inc
push
mov
inc
mov
in
out
xchg
popa
cmpsl
popa
mov
inc
popa
push
popa
addr16
ja
pop
popa
pop
popa
daa
popa
aaa
popa
popa
popa
out
notb
lods
fs
mov
ljmp
mov
dec
das
fs
add
testl
rcrb
jge
es
mov
test
movsl
xor
push
inc
movsl
jne
add
mov
mov
mov
test
idiv
mov
push
leave
sub
mov
fs
in
mulb
push
xchg
and
inc
jl
fcmovnu
jecxz
push
cmc
and
jle
sub
push
sub
in
add
loop
rol
fdivs
out
mov
cwtl
xchg
test
pop
xor
or
xchg
sub
popa
xlat
popa
out
notl
gs
cmpsl
ret
mov
inc
js
popf
inc
ja
pop
inc
pop
inc
daa
inc
movb
out
testb
xchg
inc
cmpsb
inc
mov
inc
xchg
push
inc
lahf
jbe
push
sbb
push
es
ss
lds
ret
in
cmc
in
movsl
pop
mov
aas
push
xor
add
sub
aam
or
push
call
or
adc
pop
adc
js
shl
sbb
cmpsl
sarb
aas
aas
xlat
aas
out
not
call
mov
inc
inc
push
sahf
rorl
daa
or
inc
in
cmc
add
xor
push
xor
add
inc
xor
mov
push
cwtl
sbb
cmpsb
mov
xor
hlt
jne
inc
sub
ret
xlat
lret
or
cmpsl
sub
andl
pop
andl
and
jmp
mov
inc
rolb
adc
push
or
lds
inc
in
cmc
inc
test
inc
movsl
inc
mov
inc
inc
push
inc
gs
jne
add
mov
or
inc
push
ljmp
arpl
loop
bound
push
es
icebp
add
fadds
popa
gs
add
sbb
decl
sub
loope
icebp
inc
fildll
sub
pop
lcall
push
in
aas
sahf
lds
ds
jae
pop
in
out
cs
cmpsb
leave
and
ja
push
pop
adc
fidivrl
js
daa
push
dec
pop
ljmp
inc
jbe
sahf
cmp
or
pop
fcomp
faddl
out
shr
inc
cmc
xchg
add
pusha
test
xchg
sti
adc
decb
xor
xor
mov
icebp
xor
xor
mov
daa
xor
cmp
dec
adcl
mov
or
ret
ret
ret
mov
aas
push
mov
pop
popf
dec
xchg
add
inc
ss
xor
rcr
decl
inc
cmp
das
xchg
addr16
outsb
in
adc
dec
jg
cmp
dec
fs
scas
jo
sub
xchg
inc
sub
pop
pop
leave
pop
shrl
sub
add
push
cmp
xchg
arpl
adc
daa
fcoms
xor
lret
mov
rcrb
push
pop
jge
sarl
xchg
ljmp
and
inc
in
ret
nop
fs
andb
dec
fs
cmpsb
and
popa
fldenv
push
test
adc
mov
sub
imul
fs
inc
and
and
iret
sub
orb
xor
adcb
cmpsl
pop
shll
pop
js
jnp
pushl
adc
or
push
xlat
jle
inc
stos
int
js
adc
sahf
or
in
add
jo
sbbb
ret
xor
mov
xchg
xor
inc
sbb
jae
popa
arpl
sbb
or
sub
jp
push
adc
out
add
fsubs
sbb
popa
and
mov
aas
aas
mov
pop
aaa
sub
jl
loop
push
fidivl
rcr
divl
add
adc
sahf
cmp
jge
adc
out
bound
xor
in
adcl
rcll
cmp
inc
sbb
xor
sbbb
in
lock
xchg
ret
aas
filds
test
jge
sub
sub
addr16
pop
xor
es
push
aas
push
aas
insl
mov
or
pop
xchg
add
in
xchg
push
in
sub
pushf
push
rolb
jg
jnp
mov
mov
pop
mov
ficoml
movb
sub
push
icebp
sub
loope
std
popa
cltd
popa
inc
popa
imul
xor
lret
xchg
xchg
fldt
js
jmp
sbb
or
loop
mov
pop
loop
fabs
cltd
popa
mov
adc
seto
jbe
cmp
shrb
es
out
pop
aas
mov
fsubl
mov
dec
push
adc
fwait
or
das
mov
mov
xchg
adc
test
imul
push
xchg
sub
imul
ljmp
xchg
and
jmp
dec
and
cmp
andb
testb
icebp
xor
push
xor
data16
xchg
jo
cmovl
je
scas
sub
lret
sub
xchg
xor
loopne
sub
jg
call
lahf
inc
push
in
lock
movsl
inc
inc
inc
test
adc
xor
and
xor
sub
cltd
rorl
mov
int
push
icebp
mov
decl
mov
inc
cmp
push
movsb
or
or
leave
push
gs
bndldx
leave
pop
lods
movsb
notb
fldl
dec
sub
stos
xor
xor
pop
es
push
inc
push
add
inc
popf
xchg
pop
addl
icebp
fadds
cmc
xchg
sbb
push
repnz
addr16
push
test
push
xchg
decl
and
dec
repnz
pop
xchg
inc
mov
nop
push
ss
add
fisubrl
sbbb
in
adc
jle
dec
loop
test
testb
daa
punpckldq
into
loope
pop
iret
es
xor
add
xchg
vpsllq
stc
ret
sbb
mov
pop
pushl
test
cmpb
mov
repnz
jle
inc
out
adc
jbe
aam
dec
mov
mov
and
scas
inc
push
movsl
shl
and
add
pop
out
cmp
aas
and
push
mov
pop
push
repnz
cmp
cmp
jl
dec
lods
push
ret
test
ljmp
add
cmp
add
loop
mov
jno
fdivrs
les
cwtl
aas
into
add
inc
add
movsb
imul
enter
ds
mov
sbb
mov
xchg
xor
push
fdivl
xchg
nop
outsb
rcr
test
sbb
and
movsl
xchg
or
dec
xor
popf
xchg
cmp
imul
cmp
inc
mov
pop
mov
push
nop
negb
inc
sub
push
cmp
daa
push
aaa
push
data16
inc
lret
add
and
fsubs
lea
sahf
lahf
push
sub
jp
xor
pop
arpl
mov
ja
add
int
leave
ja
jo
sub
xchg
push
xchg
adc
inc
add
loop
and
pop
movsb
outsb
test
fs
adc
ret
sub
es
cmpsl
fistpll
xor
int
jg
cmpsl
jge
lods
mov
nop
push
xchg
rolb
inc
ss
fcom
arpl
xor
push
inc
inc
pop
dec
xor
pop
test
scas
mov
xor
fs
out
fidivs
push
mov
inc
push
add
or
cmp
cmp
push
aad
movl
jo
xchg
decl
mov
sbb
pop
scas
outsl
sti
mov
pusha
ret
fistpll
push
shrb
lret
js
sub
and
cmp
adc
and
out
orl
ljmp
out
scas
mov
ljmp
push
lea
pop
nop
xchg
jne
sub
xor
mov
aas
ficoms
adc
call
push
xor
xchg
aas
jns
jbe
rcl
xchg
adc
inc
xor
push
push
mov
jle
stc
xchg
xchg
inc
mov
inc
in
xor
fs
jecxz
push
dec
and
mov
mov
adc
ficoms
scas
or
add
scas
cmp
xor
dec
mov
inc
mov
add
push
lods
mov
pop
mov
pop
in
into
xchg
inc
jp
dec
adc
rol
and
call
xlat
into
insl
cmp
xor
and
pop
inc
fidivl
xchg
int
ds
xor
enter
nop
xchg
and
push
call
cwtl
sbb
cmpsl
gs
xor
add
ljmp
aad
push
dec
test
mov
push
sub
mov
js
xor
out
add
pop
repz
test
out
test
adc
mov
imul
add
test
cmc
rorl
cmpsb
jbe
add
mov
ret
lcall
into
xchg
mov
and
fadd
test
fs
ds
mov
sub
repz
dec
push
mov
nop
call
scas
xor
incl
pop
cmpsl
lcall
jbe
cmp
ja
xchg
test
mov
aaa
std
xchg
mov
pop
lods
xchg
cli
nop
out
xchg
push
dec
testb
stos
decb
out
scas
mov
push
sub
jo
jae
out
jae
out
jo
lea
jno
mov
pop
sub
fwait
nop
in
jbe
repz
int
and
test
test
test
mov
xchg
sahf
gs
or
rcll
stc
mov
in
enter
inc
and
dec
fsubl
jne
xchg
inc
lahf
cmpsb
or
push
rolb
in
jne
daa
in
shl
out
inc
shlb
call
xor
add
in
xchg
mov
movnti
ret
das
pop
lret
subb
das
hlt
imull
fistpll
or
jnp
adc
add
ret
push
lcall
lret
mov
inc
into
dec
jo
out
nop
jg
mov
es
mov
jns
add
fsubr
fldcw
repz
mov
rolb
fs
and
int
andl
leave
and
andb
int
jl
loop
xlat
loop
push
push
jno
das
cmp
xor
pop
sahf
dec
pushl
imul
xchg
mov
inc
inc
daa
stos
jne
add
cmpsl
lds
add
add
mov
dec
lret
sbb
push
inc
insl
push
mov
idivb
lret
imul
adc
jp
in
call
lock
sahf
lods
popf
out
bound
imul
bound
fwait
mov
sub
mov
cmovge
imul
pop
dec
xchg
cmp
xor
fs
xchg
inc
cmpsl
pop
and
xchg
fcmove
das
outsb
test
jmp
mov
sbb
js
xor
popa
ret
add
jmp
adc
addr16
imul
ja
adc
or
pop
inc
enter
mov
rorb
push
mov
sub
roll
dec
and
sub
adc
push
dec
inc
movsl
clc
mov
mov
repnz
mov
adc
or
jl
sbb
dec
test
dec
or
pop
mov
push
mull
pop
push
xchg
jge
xor
xor
in
lock
sbb
jo
sub
inc
add
nop
cs
add
dec
push
pop
lret
nop
fdivrl
insl
xchg
inc
lds
sbb
cmp
adc
fcos
das
or
push
push
ficoml
dec
sarl
loope
pop
xor
stos
movsb
out
fs
dec
out
push
add
xor
sbb
xor
dec
imul
loop
jp
loope
sbb
cmpsb
rorl
test
fmul
add
adc
sub
lods
mov
jecxz
jae
mov
pop
or
add
xor
clc
jae
lock
cmpsl
les
pop
inc
jle
fwait
pop
xor
popf
xor
cwtl
mov
mov
push
pop
pop
or
test
shr
test
push
mov
mov
in
mov
jle
pop
cmp
loop
ret
lods
fs
popf
gs
xchg
into
push
int3
add
rcr
mov
dec
movsb
imul
fdivl
dec
jl
sub
push
inc
cmp
jecxz
mov
xor
cli
push
ret
movsl
ret
inc
ret
pop
ret
jns
fsub
push
xchg
jecxz
pop
dec
or
in
sub
pop
fiaddl
cs
sub
pop
mov
fildll
orb
pop
sub
inc
mov
cmp
std
mov
sbb
imul
lock
aaa
pop
insl
dec
pop
leave
daa
les
pop
inc
mov
mov
sbb
and
mov
int
adc
push
int
imul
or
into
inc
daa
scas
mov
jb
loope
mov
mov
lds
out
call
das
mov
das
xchg
lods
mov
sar
jo
cmp
jg
sbb
cwtl
pop
cmc
mov
add
lret
cmpsb
cmp
add
cmpsl
fdivrs
out
sbbl
fwait
xchg
pop
sbb
outsb
pushl
int3
negl
aas
add
dec
mov
jle
push
pop
daa
inc
decl
sti
sbb
push
dec
les
mov
dec
xor
aaa
jmp
jge
mov
das
test
repz
insl
sub
cmpsb
int3
sub
sarl
pop
push
dec
aas
imul
aas
or
leave
push
fisubrl
cs
std
fnsave
or
fisubl
xor
jg
out
sbb
loopne
popa
push
pop
dec
pop
cmp
inc
je
sub
sub
adc
xor
inc
scas
jp
lret
pusha
mov
call
in
jecxz
jne
ret
mov
rolb
lea
insl
ljmp
test
daa
test
daa
jle
cwtl
roll
inc
or
add
mov
cmp
insl
iret
inc
push
mov
nop
push
int
test
mov
popf
dec
aad
dec
loope
in
adc
mov
mov
andl
push
cmp
pop
loope
xlat
pop
clc
pop
test
mov
movsb
movups
movsb
sub
sbb
cmp
dec
into
xchg
mov
sub
cmp
in
push
dec
cmp
dec
xor
stos
mov
cmp
or
xor
shlb
dec
and
push
lods
cli
add
pop
jne
rol
xchg
orb
lret
pop
ds
push
add
push
inc
mov
push
out
insl
in
mov
jo
out
shll
hlt
sahf
into
bound
loop
add
iret
fstpt
pop
inc
test
sbb
mov
pop
rolb
and
ret
mov
push
mov
into
mov
jl
pop
sub
lahf
xor
aaa
sub
push
push
sbb
cs
call
popf
mov
cli
jmp
faddl
add
stos
subl
ficompl
xchg
int
jmp
outsb
jmp
sub
adc
in
fsubl
and
hlt
int
pop
inc
stc
loope
and
fs
sbbl
inc
sub
xchg
ljmp
leave
xor
sbb
outsl
and
cmp
add
leave
lea
mov
pop
push
ja
popf
add
stos
rclb
iret
mov
mov
mov
call
pop
cmp
and
inc
mov
sub
aam
xor
mov
das
mov
mov
mov
imul
dec
jmp
ret
psrad
xchg
loop
pusha
or
pop
sub
xchg
testl
push
in
sbb
and
and
xor
xor
lock
pop
dec
jne
mov
push
fcmovnbe
inc
pop
adc
call
xor
pop
pop
jl
in
cs
fnsave
jl
and
xchg
mov
xor
stos
pop
popf
cmp
testb
in
xchg
test
inc
jns
call
stc
icebp
sub
js
cmpsb
push
mov
or
mov
shlb
adc
fisttpll
mov
mov
shl
push
adc
rcrb
mov
sbb
loopne
sbb
fwait
mov
cmpsl
shrb
clc
cmpsb
jmp
lds
in
inc
rcll
xchg
pop
xor
shll
cmp
mov
in
add
fcompl
xchg
ja
daa
and
cmpb
addb
ljmp
mov
push
inc
shl
lcall
push
add
xor
leave
inc
repz
sub
das
fs
lret
push
xorb
push
mov
mov
mov
test
popa
fsubrl
dec
repz
lds
aam
pop
into
xor
daa
mov
into
inc
cmp
test
mov
pop
inc
loope
fs
inc
test
xchg
or
cs
mov
mov
adc
xchg
pop
inc
notl
cwtl
mov
dec
push
jle
add
jo
cmp
repz
add
cmc
mov
add
or
xchg
fdivs
push
cs
jle
push
aas
nop
aam
pushf
inc
push
out
jne
add
in
jb
push
shrb
mov
scas
push
push
mov
fsubrl
add
in
adc
bound
dec
mov
cmp
lcall
inc
xchg
mov
es
push
out
pusha
lock
imul
adc
out
dec
pop
dec
dec
xchg
and
test
aas
inc
mov
fwait
int
and
lret
cmc
dec
xor
inc
and
xchg
mov
pop
add
and
rcr
sub
ds
adc
xchg
pop
xor
js
push
in
lahf
pop
mov
jg
and
scas
movsb
pusha
inc
ret
inc
jg
insl
and
mov
aaa
dec
inc
or
repnz
xor
xor
gs
loop
bound
jne
lahf
mov
shrb
ret
cmp
into
push
mov
std
sarl
adc
sbb
lock
xor
add
hlt
cmp
jmp
shlb
jle
fstl
push
cmp
xchg
pusha
shlb
and
pop
pop
hlt
xchg
or
and
lar
shrl
adc
lret
jp
cmp
pop
lcall
push
sub
xchg
dec
mov
out
icebp
mov
jns
xor
out
icebp
out
jns
inc
pop
popf
cmp
ss
subl
jecxz
push
dec
les
aam
push
shrb
and
push
out
jmp
lea
hlt
dec
push
std
sbb
mov
mov
inc
mov
fnstenv
mov
fiadds
mov
cmpsl
das
xor
and
lcall
add
repz
out
imul
mov
hlt
dec
or
add
lds
movb
stos
in
mul
add
int
repnz
int3
outsb
insb
cmp
jbe
pop
push
inc
xchg
pop
negl
dec
mov
hlt
je
inc
push
les
dec
js
lods
aam
add
jg
into
dec
mov
sub
pop
sbb
jle
pop
es
mov
mov
dec
cmpsb
inc
xlat
xchg
jl
jle
lods
push
pop
sub
adc
into
js
imul
jge
pop
sbb
ljmp
lret
xchg
mov
and
mulb
xchg
push
sbb
test
nop
aas
push
xlat
js
adc
xor
mov
mov
inc
xor
rcll
inc
sub
scas
pusha
sti
addr16
xchg
adc
xchg
xor
push
add
fimull
add
fmull
sahf
jl
clc
inc
es
or
repz
jp
mov
scas
and
inc
nop
xor
aas
sub
aaa
pop
dec
mov
rcr
mov
je
in
xchg
pop
mov
sub
imul
xchg
pusha
sbbb
test
hlt
adc
mov
ret
imul
adc
mov
push
daa
add
xor
inc
out
mov
dec
fs
int3
jnp
adc
sub
pop
mov
stos
xchg
push
lea
mov
xchg
push
xchg
arpl
sbb
dec
nop
mov
stos
mov
jmp
lods
addr16
fcompl
add
sbb
mov
repz
add
mov
aad
and
mov
add
pop
clc
mov
negb
or
test
cs
mov
xor
mov
ss
ljmp
test
and
ret
mov
fcoml
test
sti
cs
sub
mov
es
movsl
dec
lret
push
es
in
aaa
or
leave
cmpsl
jne
sbb
push
rcll
aaa
pop
loop
sahf
pop
repz
shll
lds
js
movsb
loop
mov
sub
test
pop
sbb
xor
jl
xor
pop
ds
ret
adc
sbb
lods
dec
dec
sbb
in
push
out
repz
jg
stos
jg
je
fistpll
fwait
jl
outsl
xchg
cmc
mov
leave
loop
cmp
inc
ja
rcll
and
iret
scas
out
hlt
cmp
int
jecxz
loopne
shlb
add
inc
faddp
int
add
sti
xor
xor
push
sarb
push
bound
sbb
es
jne
fs
xchg
into
or
sub
or
or
jb
aas
pop
inc
in
adc
test
ljmp
dec
pop
mov
mov
daa
out
adc
cs
leave
xor
mov
or
add
pop
sahf
or
jo
sahf
push
imul
jecxz
scas
stos
pop
mov
fildl
fwait
add
xor
push
jae
push
lahf
cmp
xor
stos
test
hlt
int
lahf
push
or
add
ljmp
fnstsw
push
fimull
sub
lods
stc
adc
jle
pop
cmp
adc
pop
stos
imul
jb
test
dec
outsb
decl
int
cmp
xlat
pop
adc
js
mov
inc
out
bound
lods
push
add
das
js
es
cltd
jmp
add
andb
mov
cld
sub
inc
nop
sub
xchg
push
dec
jecxz
js
push
cs
mov
push
out
push
cmp
call
push
ret
sbb
test
sti
test
repz
and
ret
roll
ds
inc
aam
int3
or
xchg
loope
das
xchg
sub
sti
and
test
add
mov
outsl
rclb
jmp
in
repnz
test
sbb
dec
xchg
je
cmp
in
jae
mov
push
lcall
sub
rolb
adc
vpminsw
mov
pop
in
adc
adc
fs
orl
fs
sbb
rclb
inc
fsubs
pop
pop
mov
dec
dec
pop
clc
pop
xor
sbb
ret
xchg
lea
xchg
fdivr
data16
das
pop
mov
in
inc
lods
jmp
pop
test
and
loope
ss
fs
push
mov
in
idivl
or
into
cmp
push
adc
sbb
push
pop
xchg
in
inc
icebp
movsb
xchg
out
movsl
mov
mov
mov
aaa
pusha
jmp
mov
rol
inc
push
int
ret
jge
fcompl
outsl
sbb
jne
mov
xchg
adc
cmpsl
xchg
jle
fmuls
icebp
mov
shll
jl
rolb
adc
push
ret
add
outsl
cmpsl
pop
ror
xchg
stos
sbb
inc
in
jg
pop
faddp
push
fstpl
pop
test
insl
clc
cs
pop
adc
push
dec
mov
in
adc
xlat
lods
idivl
js
and
shrb
cmp
jmp
movb
sub
test
xchg
xor
loop
or
jno
std
enter
adc
sbb
imul
push
cld
and
xchg
inc
dec
adc
jle
inc
mov
push
cmpb
cmpsl
or
push
out
sub
xor
pop
test
or
out
mov
push
gs
fsubr
sbb
inc
loopne
push
xchg
mov
mov
mov
loope
lock
shr
pop
in
cmp
rorb
ret
sbbb
loope
fiaddl
xor
inc
ljmp
dec
add
int
movsl
lods
mov
push
outsl
push
mov
xchg
sarl
push
sub
xchg
mov
and
mov
xorb
loopne
mov
and
inc
ja
pop
or
aas
or
push
mov
not
pop
adcl
sub
sub
add
xchg
fsubrp
lcall
fisubl
push
xorb
mov
inc
mov
inc
xchg
or
inc
outsl
movsb
or
mov
xchg
adc
mov
xchg
out
addr16
xchg
jmp
jne
jmp
lds
aaa
out
inc
mov
fnstsw
inc
fwait
jmp
addb
aaa
mov
mov
cwtl
push
jo
dec
in
adc
sbb
pop
mov
sub
sbb
xor
xor
scas
mov
int
lret
testl
pop
fsubs
fucomi
xor
mov
jbe
dec
jl
lret
jne
sbb
pop
mov
xchg
repnz
pop
lds
fisubs
data16
sub
movsb
cwtl
addr16
aas
sahf
test
push
pop
xor
mov
mov
cmpsl
repnz
bound
bound
and
ffree
push
sub
push
aad
stos
mov
push
scas
mov
inc
sarb
sbb
data16
adc
dec
xchg
orl
xchg
dec
in
sub
gs
js
jo
and
adc
xor
inc
gs
jns
mov
cmpsb
or
cs
mov
cmp
push
out
popf
lahf
jl
xchg
sbb
lock
dec
or
pop
inc
xor
inc
leave
mov
add
and
popf
lds
sbb
cmp
add
inc
mov
pop
hlt
jns
cmp
sub
jge
push
inc
insl
int
mov
int
in
jmp
js
cmp
inc
aas
jo
and
test
or
rep
jbe
in
xchg
mov
popf
xchg
lcall
sti
xchg
ljmp
inc
push
xlat
xchg
dec
pop
or
push
movsb
ja
xor
add
leave
xor
aas
lock
adc
gs
xchg
mov
sbb
mov
xlat
inc
cmpsl
inc
js
cmp
sarl
loop
mov
jno
lds
xchg
sbb
mov
leave
lds
push
in
sbb
inc
aad
push
mov
shrb
inc
pop
jne
mov
lods
mov
cs
sub
pop
clc
adc
push
pop
scas
xchg
inc
sbb
or
inc
xchg
adc
cmc
xchg
addb
roll
lock
and
sub
test
aaa
in
jo
dec
jo
test
cltd
js
adc
xor
or
adc
jge
into
sti
imul
cmp
lds
nop
mov
mov
push
inc
fsubrs
enter
mov
cs
push
popf
jmp
enter
dec
cmpsl
mov
leave
test
in
and
rcll
jnp
aas
ret
push
mov
insl
out
adc
scas
jb
outsb
nop
imul
xlat
loopne
inc
aas
pop
mov
push
popf
xor
mov
or
pop
repnz
xchg
push
pop
ror
popa
or
bound
sbb
adc
mov
lods
inc
lret
das
arpl
in
repz
add
lea
hlt
pop
xor
test
pop
daa
pop
jl
mov
rcl
and
popf
out
mov
dec
lods
ds
mov
daa
inc
das
sub
mov
jg
ret
hlt
out
add
inc
out
inc
negl
add
and
sub
mov
popaw
mov
call
faddl
ss
xchg
xor
in
ret
sub
push
mov
int3
roll
imul
cmpsl
dec
das
sub
int
lods
fsubp
jl
sub
lock
add
popf
jge
int
movsb
jmp
cmp
inc
adc
sub
mov
out
movsl
dec
leave
add
ret
ficompl
jo
add
jmp
js
sbb
loop
cmpsb
daa
int
test
pushf
adc
sbb
nop
jl
sub
add
ror
insl
aad
jbe
sub
lods
outsl
test
and
into
cltd
dec
cwtl
sub
outsl
int
xchg
cltd
mov
in
imul
cmp
lret
xor
jecxz
push
outsb
add
push
mov
jmp
jecxz
out
xchg
shr
lahf
xchg
cli
push
mov
int3
xchg
ljmp
xor
inc
add
add
out
pop
dec
mov
add
aas
movsb
fiaddl
push
xor
and
sub
mov
nop
xorb
xchg
dec
jae
std
movsb
js
jns
aaa
inc
cmc
jno
add
xchg
push
cmovle
inc
mov
xor
fadd
jle
in
mov
lds
mov
stos
movsb
ds
and
adc
repz
scas
int
xchg
sbb
frstor
push
sbb
sbb
cld
jl
xchg
test
out
mov
xor
pop
mov
and
adc
shlb
test
inc
mov
cmpsb
ror
push
int
hlt
push
pop
xchg
inc
pop
jae
xor
add
lret
subb
ss
movsb
dec
into
inc
hlt
sbb
and
repnz
push
mov
add
movl
jo
scas
aam
in
mov
jne
aad
fwait
pop
push
dec
or
ret
xor
loopne
mov
int
sahf
mov
mov
dec
pop
mov
arpl
cmovo
add
pushl
push
pop
xchg
jge
in
inc
mov
and
jbe
fidivl
ss
jl
loop
and
js
mov
add
test
test
aad
and
xchg
pop
mov
shlb
push
pop
sub
ds
leave
jbe
add
leave
aaa
fldl
jl
mov
test
xchg
fsub
pop
ss
add
fmuls
sbb
fsubrp
daa
pusha
mov
xchg
rorb
jo
mov
pop
int
inc
out
mov
push
jmp
in
push
mov
cmp
jl
ljmp
push
adc
and
push
add
ljmp
mov
xchg
jmp
scas
mov
mov
rcl
inc
jle
decb
andb
das
push
pop
movsl
xchg
scas
pop
shlb
scas
mov
in
xchg
mov
dec
xor
icebp
adc
inc
fmuls
mov
jge
ja
dec
in
add
xor
xor
pusha
mov
push
or
sbb
std
in
hlt
pop
cmp
sub
add
sub
into
jp
ret
out
mov
dec
pop
add
sub
insb
add
push
jle
dec
aaa
arpl
test
push
pop
es
aas
xlat
insl
int
adc
cltd
fs
sbb
addr16
mov
inc
inc
out
mov
mov
push
cmp
dec
push
and
xchg
xchg
sub
sub
fs
jge
add
mov
adc
nop
inc
gs
daa
lahf
aaa
fistpll
xor
mov
mov
dec
aas
popf
mov
dec
pusha
jne
xchg
mov
mov
nop
sbb
add
ret
pusha
jg
jg
icebp
test
sahf
movsb
mov
mov
das
movsb
roll
in
pop
sub
sbb
int
outsl
into
xchg
add
pusha
mov
fcmovu
cmp
xchg
xchg
cmp
ret
pop
lret
rolb
aas
inc
pushf
mov
inc
adc
sub
cmpsl
pop
mov
int
adc
inc
test
rcr
mov
pop
xor
pop
mov
inc
sbb
popf
inc
int3
nop
sbb
incb
xchg
icebp
in
out
push
cltd
jb
in
arpl
lea
or
testl
fdivs
daa
mov
add
and
enter
xor
clc
push
mov
out
pop
das
lcall
pop
and
mov
cmp
jle
mov
ss
pop
mull
bound
or
mov
in
adcb
mov
dec
mov
lds
ds
ret
xchg
mov
data16
xor
xchg
andl
fcompl
push
shrb
loopne
lock
and
mov
sarb
andl
scas
aaa
jge
out
add
test
movb
pop
mov
popa
int
or
adc
xor
hlt
sbb
cmpsl
movhps
nop
and
js
mov
daa
insl
out
xchg
rcl
add
dec
movsl
std
repz
shll
or
pop
xor
aad
rol
fdivs
daa
cmp
negb
enter
fdivrs
inc
mov
jo
jmp
lahf
pop
icebp
stos
pop
je
scas
daa
data16
fcomps
xchg
aas
push
jg
xor
clc
mov
and
and
lcall
mov
sub
xor
cmovo
mov
push
clc
lahf
fsub
repz
lahf
xchg
jg
push
and
std
and
push
dec
fnstsw
mov
test
ljmp
xor
and
cmc
mov
xor
xchg
ret
xchg
dec
aaa
pop
or
sahf
lds
push
sub
iret
mov
cltd
xor
fcomp
jecxz
stos
mov
rcrl
lea
pop
loopne
fists
jns
int
imul
sahf
cltd
pop
push
mov
adc
scas
int
add
ficoml
pop
jg
xchg
aas
out
subl
pop
leave
push
pushf
sub
jmp
in
jno
lods
xchg
rclb
dec
imul
fdivl
jne
and
clc
or
pop
into
mov
pop
sub
dec
lahf
dec
push
xchg
sbb
mulb
sub
jmp
fxch
cmpsl
mov
out
sub
jl
lret
adc
jmp
lret
inc
dec
jo
stos
jnp
xor
cmp
mov
fsubrl
mov
xchg
push
stos
gs
push
xchg
sbb
sahf
jbe
pop
add
pusha
clc
xlat
hlt
outsb
lds
or
pop
cmp
test
or
push
jmp
lds
ss
jno
pop
sbb
push
dec
data16
jne
xchg
inc
insb
loope
jnp
popf
rorb
imul
in
int3
or
push
mov
push
xor
gs
cmp
pop
mul
mov
into
push
cmpsb
imul
or
rclb
movb
ja
adc
jecxz
fstpt
data16
addb
push
cs
out
mov
repz
jl
outsb
xchg
rolb
xlat
xchg
ja
and
mov
jbe
subb
movsl
outsb
repz
sub
ror
stc
or
pop
sub
add
inc
ror
inc
int
lock
sbb
add
mov
mov
out
push
add
xchg
aad
repz
sub
xor
js
in
dec
push
dec
mov
loopne
popa
pusha
shr
loop
xor
cmp
imul
mov
aaa
aaa
movsb
out
inc
aam
movsb
xchg
mov
rcrb
iret
in
xor
cmp
xchg
dec
dec
nop
jl
cmpsl
dec
shrl
pop
cmc
aad
push
adc
pop
adc
icebp
or
or
add
leave
push
mov
movsb
daa
inc
cwtl
mov
push
test
mov
ficompl
out
pop
or
popl
das
jno
clc
sub
aaa
xchg
ljmp
test
shlb
mov
mov
push
mov
inc
pop
idivl
mov
das
into
inc
sub
mov
das
rsm
mov
into
movsl
sahf
mov
movsl
stc
dec
lods
jmp
sbb
mov
cli
into
adc
xchg
ffree
and
inc
jle
movb
cmp
fsubrs
jbe
xor
mov
inc
xor
xchg
and
jne
lea
lock
pop
sub
lret
push
das
mov
hlt
fadd
aam
movsl
xor
jl
imul
xor
fs
lret
imull
or
push
fildl
insb
dec
dec
or
shl
jns
pop
pop
xchg
mov
testb
adc
outsl
aas
sub
push
inc
add
cmp
mov
sbb
inc
sub
mov
xor
arpl
mov
inc
add
sub
jns
hlt
test
scas
pop
mov
shlb
iret
xor
add
test
mov
mov
dec
adc
test
outsb
scas
lcall
lock
pop
cmc
hlt
adc
dec
ds
pop
pop
in
loop
ret
xlat
fstpt
and
dec
adc
hlt
scas
cmc
dec
in
jo
xor
out
scas
imul
cltd
push
sbb
pop
mov
add
lds
pop
clc
orl
sbbl
or
cmp
out
mull
dec
cmpsl
inc
sub
test
test
pop
push
xor
xchg
lcall
in
cmc
leave
or
in
xchg
inc
pop
xchg
nop
gs
add
jmp
scas
sarb
scas
aas
mov
inc
lcall
sub
mov
shrd
pushf
and
mov
inc
imul
sub
sub
test
je
jmp
fiaddl
dec
inc
adc
dec
mov
lods
push
jge
movsl
decl
push
jb
and
adc
repz
xchg
add
orl
jp
jns
in
scas
lea
push
xor
pop
repz
cmp
ja
aas
jl
aas
xor
sub
cmp
bound
addl
das
mov
bound
das
out
idivb
push
sarb
pop
push
subl
stos
es
push
sbb
push
std
fsub
call
mov
mov
mov
imul
loope
dec
mov
hlt
or
sbb
xor
fimull
js
ljmp
sub
xchg
mov
mov
mov
test
add
dec
dec
popf
daa
sbb
dec
lods
in
jmp
lret
fcomps
into
cmpl
push
out
pop
gs
in
arpl
push
xor
sahf
rcr
add
inc
mov
lcall
repnz
pop
sbb
mov
dec
insl
xor
or
fisubl
jbe
shl
sub
mov
sub
xchg
xchg
sbbb
lret
push
inc
test
jmp
nop
jbe
jl
xlat
stos
cmpsb
xchg
mov
mov
push
mov
jne
rclb
xor
int
insl
sbb
sub
inc
lods
sub
into
xlat
mov
fdiv
cmp
inc
dec
inc
xchg
pop
shr
or
call
fidivrl
push
dec
inc
sub
mov
push
xchg
mov
and
mov
push
add
arpl
jle
push
in
test
daa
pop
xchg
sbb
sub
xor
push
daa
inc
pop
nop
pop
seto
or
loop
int
cmpsl
ret
imul
mov
icebp
dec
ret
lea
idiv
xchg
insb
test
out
adc
mov
sub
pop
mov
bound
xor
mov
call
sarb
sub
fs
int3
cmp
cli
aas
add
push
into
push
idiv
mov
out
movsb
push
cmpsb
mov
mov
repnz
mov
adc
bound
push
fidivl
negl
sub
hlt
sti
xor
cmp
imul
repz
and
push
xlat
and
aaa
ljmp
mov
inc
nop
xchg
push
cmpsl
fldenv
jg
lods
ja
sub
fs
inc
mov
or
mov
sahf
popf
into
in
push
pop
idiv
jne
jl
loop
scas
fisubl
pop
loop
scas
lcall
imul
fwait
gs
repnz
in
leave
jg
pop
jo
dec
pop
cmp
lea
jmp
pop
fmul
aaa
pop
xchg
js
dec
pop
pop
pop
aaa
inc
fstpl
lret
xchg
sub
push
je
cmp
dec
pop
mov
test
push
push
movsb
je
out
into
dec
adc
dec
or
lahf
sbb
cmpsl
je
jmp
ljmp
push
add
std
insl
imul
repz
mov
ss
lods
inc
cmpsl
jecxz
adc
pop
add
insb
mov
fldenv
and
adc
ret
leave
idivl
pop
inc
cs
jmp
fisubs
movsl
js
push
cmp
fnclex
mov
test
mov
adc
call
mov
dec
inc
push
xor
jbe
mov
or
test
push
adc
imulb
sbb
mov
icebp
xor
dec
lods
repnz
pop
xchg
xor
hlt
cmp
inc
xlat
test
fadds
data16
loopne
daa
xchg
in
add
es
push
mov
jne
pop
cmpl
mov
sbb
repnz
mov
fcmovu
ljmp
dec
add
jmp
xchg
xlat
into
push
rcr
stc
xchg
jns
int
addl
inc
push
int
subb
push
data16
and
fcomps
shlb
es
xchg
nop
stos
inc
loopne
lcall
outsb
popf
pusha
mov
ljmp
das
subl
lock
fdivrl
stc
test
repz
jge
cmp
sub
mov
pop
stc
sbb
scas
push
xor
orb
xchg
es
cmc
test
lret
out
fwait
inc
in
fstl
test
les
pushf
add
cmp
xor
sbb
rorb
push
jns
push
fsubrp
dec
in
xchg
add
or
xorl
xlat
jg
cs
xchg
jl
repz
mov
out
add
shlb
mov
mov
mov
cmpsb
aaa
adc
push
adc
dec
push
jne
add
add
out
das
and
cmp
xlat
adc
call
push
and
fs
xor
cmp
fildl
push
pop
test
shll
sahf
push
insl
push
mov
mov
movsl
xlat
sbb
imul
repz
clc
cmpl
push
fimuls
cli
test
push
xchg
pop
in
push
je
mov
lea
hlt
notl
test
pop
pop
jmp
inc
xor
pusha
or
mov
push
add
das
sarb
sub
or
and
test
rolb
mov
cmc
mov
pop
daa
dec
mov
pop
jo
push
daa
arpl
test
fyl2x
test
cmp
jbe
inc
xchg
mov
sbb
testb
sbb
pop
or
inc
sbb
gs
mov
jl
in
imul
xor
fs
pop
xlat
add
in
test
repz
sub
in
cmp
add
test
push
xchg
jo
dec
std
dec
ja
imul
aas
mov
fmul
stos
divl
clc
adc
gs
rcrb
and
pop
gs
loop
xor
fbstp
movl
sbb
jl
fidivl
push
adc
data16
add
jmp
mov
in
sbb
scas
ret
xor
pop
loope
icebp
xor
cmp
mov
shrb
int
pusha
mov
das
aas
imul
shl
rorb
mov
dec
clc
cltd
addb
mov
add
pop
inc
xor
test
shll
mull
jle
mov
push
fmul
mov
nop
xlat
add
xorb
dec
testl
insl
imul
add
sbb
es
adc
fsubrl
sbb
test
stc
push
daa
mov
clc
push
jle
fimull
ss
in
loopne
lahf
pop
cmc
cmc
inc
and
xor
xor
les
arpl
cmpsb
lds
shlb
jo
cmp
loopne
mov
data16
lcall
push
mov
scas
xchg
mov
mov
test
es
xchg
inc
sbb
pop
insl
lock
or
adc
add
hlt
in
scas
out
mov
inc
pop
aas
mov
movsb
mov
jg
or
lods
pop
shrb
sbb
or
and
subb
hlt
and
and
scas
jmp
add
cmp
shll
xchg
popf
imul
mov
and
push
jmp
test
mov
mov
pop
stos
or
sub
lahf
lret
add
pop
jb
das
cmpsl
sub
iret
pop
outsb
jo
xchg
mov
pop
leave
adc
mov
pop
in
gs
and
clc
jns
out
out
fisttps
sub
lret
movsl
pop
js
xor
jl
lret
test
push
xchg
arpl
out
sbbl
jb
rcll
in
xchg
inc
lcall
out
fsts
xor
mov
into
cmc
shlb
out
test
lret
aas
add
jne
push
bsf
mov
jne
xor
sbb
xor
leave
mov
insl
push
mov
dec
add
nop
or
mov
nop
pop
shl
inc
pop
lock
inc
inc
jne
mov
jecxz
sti
mov
sub
push
fs
pop
xor
cmp
pop
pop
jl
xchg
mov
or
das
xchg
push
pop
test
scas
pop
jecxz
inc
pop
inc
lcall
pop
xchg
cmc
jbe
int3
mov
jge
cs
les
fsubs
sbb
jge
jne
add
cmc
sub
xchg
mov
movsb
dec
fldenv
negl
inc
sub
mov
dec
fidivrl
dec
xor
and
push
mov
or
xchg
adc
outsl
gs
es
mov
add
push
add
cmpsl
and
push
mull
inc
dec
test
jbe
das
rcrb
jle
orl
dec
jbe
ss
pop
or
sbb
push
xor
sbb
js
add
repz
mov
adc
in
cwtl
pop
adc
jmp
ret
inc
incl
fsubrs
xor
out
sub
movsl
ljmpw
andb
leave
mov
js
jl
dec
push
loop
or
fists
xor
xchg
xchg
push
jle
cwtl
int
add
pop
shlb
mov
push
sub
int3
inc
rcrl
ss
cmp
push
xor
rcrb
or
cmc
pop
push
xor
out
jl
dec
out
in
daa
es
xchg
int3
ss
inc
xor
scas
popf
test
setl
xchg
cmc
xchg
pop
repz
iret
push
leave
test
jne
lcall
jns
jo
aad
scas
repz
in
ja
xchg
inc
outsb
int
push
add
pusha
into
cmpsl
sbb
add
jmp
xchg
dec
fs
cmp
fsubs
test
js
cmpsb
addl
movsb
push
pop
or
out
mov
adc
insb
mov
and
loop
adc
arpl
jg
push
mov
into
sub
mov
cmp
pop
sub
mov
flds
daa
in
mov
inc
nop
insb
ds
test
mov
jne
inc
xchg
and
cmp
jbe
lea
sbb
lret
scas
fs
mov
mov
mov
or
mov
gs
and
cmovnp
jle
loop
icebp
mov
mov
inc
push
mov
sbb
jmp
pop
pop
in
fdivrs
aam
add
ljmp
jne
pop
sub
in
jle
movsl
jl
cmpsl
sbb
xchg
cmpsl
add
in
scas
cmpsl
mov
popf
cmpb
in
in
arpl
int
rorl
mov
sub
xchg
pop
mov
aas
fwait
cmp
and
pusha
and
push
sub
add
cs
out
xchg
push
sahf
cmp
mov
in
testb
test
mov
int
mov
add
xchg
mov
mov
inc
dec
int
or
add
push
ret
mov
mov
in
push
cli
leave
lock
aas
push
in
push
test
fs
push
lret
ljmp
push
and
shrl
push
xchg
push
imul
mov
addl
pop
lcall
testb
mov
sub
xor
jg
js
cmp
sarb
and
imul
sbb
bound
mov
in
cld
cmp
outsl
and
ficoml
dec
incb
addr16
inc
pop
add
or
add
mov
sub
aad
aas
into
aas
mov
dec
orl
ja
aaa
scas
js
nop
xchg
jbe
sbb
and
pop
lret
xchg
sub
dec
cmpsb
adc
lcall
sti
inc
aas
pop
push
push
add
xlat
push
fdivrs
push
lahf
add
out
lret
das
and
push
addr16
pop
into
mov
and
mov
dec
icebp
imul
inc
loop
outsl
arpl
jge
in
lret
jmp
ljmp
scas
mov
inc
jecxz
pusha
sub
inc
push
xchg
pushl
cmp
cmpsb
out
inc
int
jp
mov
leave
inc
dec
mov
xchg
pop
inc
sbb
in
dec
or
xor
push
fildl
xor
js
dec
xchg
push
shrb
xor
scas
int
push
and
pop
cmp
into
xchg
ret
daa
int
ljmp
lods
pop
push
push
add
push
out
mov
adc
out
movsb
inc
sub
push
jne
shrl
lock
xchg
decb
pop
and
leave
push
int
mov
xchg
inc
loop
punpckldq
loope
pop
sub
nop
add
xchg
das
sahf
sarl
lea
fidivrs
sub
aaa
gs
pop
mov
in
outsb
divb
fdivl
add
pop
into
sub
and
fs
pop
dec
xchg
stos
or
pop
xchg
sub
dec
xchg
push
pop
ret
mov
into
xor
repnz
leave
mov
pop
mov
data16
in
or
dec
ja
outsl
in
out
inc
aad
cmp
push
out
mov
int
mov
mov
pop
xchg
enter
insl
cmp
stos
sub
pop
dec
xchg
hlt
es
jg
or
pop
dec
jbe
outsb
ret
pop
shlb
fnstsw
clc
cld
and
dec
loop
in
out
pop
add
add
inc
dec
jbe
pop
dec
pop
sahf
daa
mov
jmp
pop
sbb
int
aas
jl
lret
and
daa
xor
pop
out
mov
sub
mov
into
mov
movsb
lcall
sbb
in
push
fdivrs
testb
gs
fs
dec
pop
addl
nop
xor
std
pop
sahf
cmp
in
adc
fdivs
mov
mov
add
push
repz
pushl
repnz
leave
dec
cmp
push
in
fistpl
add
xlat
movsl
lcall
xor
shlb
or
jns
ret
inc
pop
push
add
popf
scas
xchg
sbb
inc
in
ljmp
pop
sbb
mov
add
push
imul
add
testl
push
jmp
sub
aad
mov
dec
sbb
xor
sub
pop
sub
das
out
mov
int
sbb
gs
fdiv
inc
push
gs
cs
stos
mov
xor
inc
mov
test
imul
test
cwtl
out
fs
dec
jne
stc
or
ffreep
xchg
shl
xor
out
incl
aam
test
jne
push
dec
dec
adc
add
add
pop
cmp
adc
jmp
cwtl
stos
subb
pop
adc
roll
int
xchg
clc
pop
rcll
add
dec
scas
mov
dec
pop
repnz
insb
push
les
outsb
aad
outsb
into
xchg
lea
xchg
fwait
mov
inc
xor
or
sbb
push
gs
divl
mov
dec
lcall
mov
and
in
adc
inc
andl
aaa
mov
test
inc
hlt
outsl
fs
dec
xchg
scas
mov
jne
add
popf
inc
adc
in
ret
lods
ret
es
dec
xchg
call
ljmp
idivl
xor
pop
gs
inc
popf
les
outsl
in
sub
mov
gs
repz
inc
aad
ds
xchg
xchg
push
divl
mov
fisubs
mov
pushf
stos
shlb
in
add
es
out
in
cld
xor
and
shrb
inc
add
dec
out
cmpsb
lods
mov
and
inc
add
ret
mov
scas
lds
adc
mov
faddl
insl
sbb
dec
jl
dec
fidivrl
xor
call
cmpsl
sbb
sbb
sub
sbb
call
repnz
fstp
out
xor
and
les
inc
into
outsb
mov
incl
inc
mov
mov
fdivl
cmp
subl
inc
cmpsb
movsl
out
sahf
sti
into
scas
lods
xchg
aaa
and
xor
cmp
pop
pop
out
adc
dec
gs
in
cmpsb
push
push
push
inc
test
sbb
test
in
jge
call
fsubl
into
leave
xchg
jg
adc
test
aas
mov
int
jo
xor
outsb
incl
dec
pop
pop
out
ret
iret
cmp
inc
jo
testb
outsl
into
outsl
push
das
fs
out
add
lret
sahf
mov
test
gs
out
inc
push
testl
xlat
pusha
push
popf
out
lret
pop
out
xor
and
dec
sarb
fsubs
scas
lahf
cs
pusha
and
fcomps
jb
inc
cltd
xchg
aaa
push
inc
jno
or
outsl
pop
add
and
leave
cs
sbb
ss
pop
leave
mov
add
inc
ljmp
push
push
or
jae
pop
outsb
inc
pop
cmp
ret
call
xor
in
inc
pop
or
aaa
cmp
mov
dec
outsl
out
xchg
add
lock
mov
sahf
push
ss
cmp
fs
push
mov
pop
test
popf
jmp
jl
mov
inc
xor
dec
js
movsb
mov
clc
pop
jno
dec
fmull
inc
add
push
inc
repz
addr16
inc
adc
test
cmp
dec
mov
outsb
add
push
in
cmpsl
test
sbb
stc
xor
clc
rol
push
dec
or
int
loopne
xchg
je
mov
inc
inc
sbb
adc
addr16
push
aas
and
add
fs
in
gs
jb
in
ret
jno
mov
test
int
cmp
cwtl
gs
add
cmpsl
push
add
mov
adc
mov
pop
xchg
call
cs
pop
push
aaa
inc
inc
sub
out
test
sub
daa
add
xor
mov
or
das
fdivrl
test
ljmp
dec
dec
pop
inc
dec
dec
outsb
aas
test
and
jns
movsl
test
and
jns
add
out
pop
test
jmp
call
dec
idivl
pop
pop
mov
pop
inc
dec
push
pop
ljmp
loope
jb
cmc
pop
movsl
pop
dec
out
fs
lds
pop
loopne
mov
mov
mov
inc
in
clc
and
movsl
add
push
fsubrl
xor
inc
xchg
add
daa
adc
ret
add
mov
push
das
fcos
popf
hlt
pop
lods
dec
out
xor
stos
and
pusha
sub
hlt
xchg
fsubs
sub
aas
outsl
inc
out
xchg
inc
inc
mov
fadds
fs
pop
leave
addr16
ret
popa
ret
or
jmp
leave
scas
push
sbb
lods
xchg
jo
sub
mov
popf
out
pop
mov
into
add
repnz
pop
mov
inc
mov
ficoml
xor
jp
push
inc
mov
xor
and
jno
aaa
and
lods
out
push
hlt
fisubs
fiadds
movsb
test
movsb
shrl
push
sub
punpckhbw
call
mov
dec
sub
xor
push
aam
and
fsub
lods
cmp
into
mov
movsb
mov
push
mov
fstl
cmp
inc
addr16
lret
pop
aas
sub
xor
dec
mov
jge
rolb
jle
and
cmp
fistl
outsl
inc
mulb
aas
jle
xor
jmp
add
add
stos
test
mov
mov
pop
pop
jl
shlb
cmp
int
ljmp
ret
and
lods
lea
cmp
lock
aaa
inc
xchg
in
rcrb
add
pop
or
add
jne
push
pop
lretw
int
adc
sbb
or
cmp
int3
add
inc
xor
cmp
fs
dec
sub
push
int
pop
enter
nop
jl
fsubs
and
lods
and
sbb
ds
in
xlat
mov
push
inc
sbb
jp
hlt
jle
test
xchg
stos
pop
inc
xor
orb
rcr
mov
xorb
xchg
push
data16
int3
push
mov
mov
sub
in
cmpl
das
xor
adc
leave
dec
push
pshufw
js
dec
fmul
mov
ja
cmp
aaa
orb
in
adc
xchg
mov
sbb
and
shlb
lret
call
xchg
pop
mov
add
mov
dec
push
pop
sub
shrb
lock
ret
mov
int
mov
in
inc
into
xor
add
lock
xor
mov
out
mov
rcr
stc
rorl
test
popf
mov
aam
pop
jl
leave
push
pop
pop
cmp
mov
mov
pusha
inc
add
push
test
push
notl
cmpsl
cmpsb
aad
nop
in
out
sub
xchg
test
inc
js
cs
dec
rcl
xchg
dec
adc
shr
int
outsl
fwait
scas
loopne
loope
mov
ss
and
xchg
repz
scas
mov
jo
adc
hlt
add
shlb
add
daa
push
repz
sarb
movsb
cmp
add
mov
xchg
shlb
repnz
ss
clc
call
js
ret
pop
or
jmp
test
xchg
jle
lahf
orl
cwtl
pop
fs
jb
ss
nop
jbe
pusha
xor
add
shl
or
xchg
pop
mov
adc
cmp
imul
addr16
es
mov
gs
add
in
mov
fs
dec
xchg
mov
test
cmp
mov
hlt
xor
sbb
int
test
ficoml
out
jo
jmp
push
lahf
push
ss
dec
rolb
ret
push
jle
xchg
pushw
test
insb
roll
repz
xor
rolb
push
pop
es
pop
pop
jp
ss
ret
scas
sub
jo
cmpsb
out
xor
and
fisubrl
mov
rcrb
cmp
mov
lds
insb
addr16
sub
fs
sbb
std
movsl
bndldx
lret
rcrb
nop
lods
repz
mov
add
shr
and
pop
js
sub
mov
aas
push
push
nop
push
hlt
nop
int
scas
decl
nop
aaa
mov
mov
push
ret
jmp
inc
iret
lock
scas
jae
cmpsl
mov
cmpsl
or
daa
xor
xor
jle
push
jbe
mov
xor
push
mov
xor
lahf
movsb
mov
mov
fistpl
pop
push
into
inc
in
nop
popf
int
aam
push
mov
mov
mov
cs
sbb
test
notb
mov
xchg
push
or
mov
clc
push
or
adc
fwait
mov
in
mov
add
xchg
ss
mov
xchg
in
enter
in
aaa
push
xchg
pop
xlat
lock
or
int3
adc
mov
aas
sub
mov
in
inc
lar
mov
mov
mov
mov
not
push
ja
fucomip
andl
icebp
mov
xchg
xlat
xchg
xchg
jl
cmp
lods
dec
xchg
dec
nop
xchg
lods
mov
sub
push
daa
xor
jle
test
stos
and
mov
pop
and
gs
jo
fiadds
push
jne
add
in
lods
mov
mov
xor
mov
mov
fsubs
adc
in
int
pop
mov
add
in
das
popa
mov
push
pop
lea
mov
xchg
aaa
xchg
fsubs
inc
into
into
sbb
adc
mov
dec
jne
add
leave
jge
xor
dec
push
mov
int
loope
dec
lcall
outsb
pop
lahf
lahf
mov
dec
add
mov
push
inc
mov
dec
aas
pop
es
cmp
in
test
pop
int
and
mov
es
lahf
scas
inc
mov
add
xchg
cmp
test
push
push
pop
or
xor
cmp
loop
pop
inc
jbe
add
xchg
jmp
xchg
ret
les
js
add
pusha
loopne
aas
fs
lret
scas
int
mov
aam
in
jge
mov
fs
cmpb
imul
mov
into
call
inc
int
bound
xchg
xchg
insl
pop
inc
rol
ss
out
xchg
leave
mov
pop
inc
rcrl
sub
pop
sbb
inc
pop
cld
and
xchg
lock
and
aas
pushl
into
xor
cmp
and
xchg
and
cmp
scas
inc
gs
and
jg
int
push
push
lcall
jl
xchg
shl
inc
les
leave
out
ret
test
jle
mov
push
movsl
mov
popa
jmp
push
fs
fsub
or
mov
mov
imull
pop
orl
fcomps
xchg
sub
cmp
or
loopne
enter
in
cmp
inc
loop
out
cmp
push
push
movsl
jl
sub
into
or
mov
fstl
mov
movsb
xchg
nop
jl
in
push
in
movl
or
pop
pop
push
pop
mov
xor
or
add
fwait
es
pop
cmp
dec
pop
xor
int
inc
cmpsl
clc
mov
sbb
stos
addr16
inc
mov
mov
push
dec
inc
xchg
pop
dec
add
ja
sub
ja
jne
fildll
mov
repnz
inc
mov
pop
sahf
cwtl
jne
xor
repnz
je
loopne
loope
mov
mov
iret
nop
add
dec
pop
js
hlt
inc
pop
iret
pop
inc
jae
sub
lret
jo
daa
push
jmp
xor
inc
int
out
mov
shlb
push
fcoms
inc
sbb
mulb
dec
xchg
pop
mov
or
mov
mov
add
fistpl
sbb
fldenv
js
sbb
iret
enter
rclb
sahf
movsb
push
int
test
pop
or
or
jle
push
outsl
pushf
sbb
sbb
cwtl
xor
or
push
xchg
inc
cmp
xor
mov
or
test
jbe
ljmp
xchg
out
mov
xchg
adc
jl
dec
es
dec
and
cli
hlt
jmp
mov
mov
ficoms
addr16
test
cmp
pop
and
sbbb
jl
fidivl
mov
inc
cltd
nop
adc
arpl
inc
pop
sahf
out
jne
lds
ret
jns
push
cmp
push
fsubp
in
inc
jo
xor
adc
push
notb
cmp
jl
incl
movsl
imul
insl
nop
add
into
and
sbb
adc
mov
dec
add
shrb
outsb
or
ret
mulb
dec
or
into
std
or
clc
mov
fistps
push
jo
rorb
xor
xor
jl
loop
xchg
leave
xor
daa
pshufw
clc
cmp
repz
daa
xchg
xchg
and
ret
in
cmp
hlt
sahf
or
pop
mov
loopne
push
jmp
jg
mov
xor
xchg
in
xchg
fstps
out
out
jae
inc
fsubrp
push
in
test
scas
jl
mov
dec
and
test
dec
cmp
xchg
pop
cwtl
je
dec
out
push
setbe
mov
pop
ljmp
push
inc
and
xor
out
imul
movsl
or
out
loopne
sbb
das
call
cmp
lcall
mov
test
out
mov
mov
hlt
rclb
jecxz
pop
icebp
jns
movsb
add
cmpsb
iret
jne
push
xchg
xor
add
lret
xor
hlt
adc
dec
mov
movsb
lret
and
ds
sub
das
enter
outsl
inc
in
lea
cmp
imul
lds
hlt
aas
push
xchg
fstp
add
aas
mov
cmp
xchg
neg
pop
jb
xchg
frstor
adc
std
push
lea
call
insl
lea
xchg
rcrb
loopne
lock
adcl
pusha
cmp
jmp
test
jmp
incl
into
out
scas
bound
inc
pop
xor
stos
push
mov
mov
filds
rcrb
insl
mov
lock
testl
mov
popf
sub
out
jl
fmul
xchg
push
das
cld
lcall
dec
in
mov
mov
pop
sahf
outsl
movsb
rcr
call
in
sub
cltd
lret
and
jg
lahf
out
pop
lcall
negb
mov
dec
addr16
mov
es
add
in
and
imul
cli
mov
out
ret
or
sub
jmp
and
xorb
scas
inc
aas
cmc
push
out
cwtl
dec
sbb
push
addl
ss
nop
sub
add
loop
xor
lea
sbb
mov
sub
in
fstl
mov
pop
pop
out
loopne
in
push
mov
into
cmp
cmpsb
arpl
mov
movb
ss
xchg
hlt
ret
push
movsl
into
mov
dec
pop
movsl
es
popf
push
add
daa
mov
xlat
into
push
cmpsl
cs
scas
int
std
cmpsl
es
jne
js
add
fsubrp
scas
and
jbe,pt
jl
dec
rorb
ja
inc
pop
xchg
scas
add
fmull
aaa
pop
xchg
into
cwtl
in
pop
das
xor
and
inc
push
mov
add
cmp
fildl
pop
into
ret
test
repnz
sub
gs
js
add
dec
call
pusha
pushf
adc
fcmove
loopne
mov
push
adc
mov
mov
jl
pop
fcmovbe
or
mov
ret
pop
out
mov
push
js
sub
inc
lock
inc
and
idivb
imul
test
push
pusha
inc
dec
xchg
pop
mov
dec
mov
inc
pop
push
mov
mov
in
mov
cmpsl
js
in
mov
mov
shlb
xchg
cmp
in
or
inc
or
push
xlat
push
push
fs
fdivr
mov
lcall
mov
scas
sahf
das
or
test
cmp
int3
add
orl
sbb
pop
test
add
xlat
pop
gs
cmp
inc
or
sub
pop
and
sahf
cmp
add
sbb
ret
scas
out
int
push
jmp
add
push
dec
mov
adc
pop
xchg
adc
push
xchg
int
lahf
enter
inc
jl
dec
jg
xlat
lea
fwait
shll
or
dec
cmp
jbe
jl
pop
iret
je
mov
int
imul
inc
ljmp
xchg
add
cmp
in
ja
mov
fs
inc
repnz
inc
imul
add
xchg
dec
xchg
je
lods
in
outsb
stos
test
das
in
jle
mov
pop
incl
push
mov
incl
cmp
and
cwtl
and
jmp
bound
fidivl
pop
pop
jl
out
into
cmp
shll
out
pop
lods
mov
adc
lcall
pop
mov
data16
or
pop
xchg
and
inc
mov
int3
jne
and
jo
lds
in
aas
daa
xor
sub
mov
nop
xor
notl
jecxz
or
cmp
imul
lock
fstpt
push
push
addr16
iret
pushf
int3
cmc
jl
fsubr
mov
jae
xchg
mov
cmp
jne
mov
bound
inc
jbe
add
fisubrl
jne
fs
insl
cli
add
sbb
sub
aas
in
sbb
mov
outsl
push
call
pop
dec
nop
jae
pop
add
cmpsl
popf
sti
jge
scas
push
or
rcl
cli
inc
les
sbb
mov
push
xchg
push
negb
mov
leave
in
add
in
int3
and
dec
xor
or
pusha
adc
push
inc
mov
mov
xchg
sbb
inc
sbb
add
xlat
insl
dec
and
call
xchg
data16
fadds
cmp
hlt
enter
leave
cs
jns
add
pusha
rcll
fisubl
es
addl
movsb
mov
leave
xchg
pop
fsubrl
sub
jecxz
fmull
inc
add
outsl
pusha
sub
xor
pop
or
aad
je
pushl
pop
fs
lret
into
mov
out
sub
in
cmc
inc
mov
movsb
cmp
test
mov
sub
dec
cwtl
fs
cmpsb
jmp
mov
inc
daa
in
cmp
push
rorl
test
in
jns
push
mov
inc
push
jo
push
out
xchg
addb
cs
vpunpcklbw
xchg
xchg
ja
rcrb
inc
mov
shrb
int
mov
cmpsb
sbb
sbb
mov
add
jo
sbb
adc
mov
mov
push
test
adc
jl
stos
rclb
into
aaa
mov
add
push
xchg
sub
test
test
out
fincstp
jb
ja
outsl
fistl
ljmp
out
std
mov
mov
and
xlat
jbe
push
js
mov
sub
shrl
jmp
add
pop
push
xchg
test
jne
mov
in
or
adcb
cmp
xchg
dec
ret
aad
cmc
xchg
frstor
pop
cmpsl
daa
scas
xlat
dec
mov
out
jno
dec
jne
sbb
mov
aaa
ljmp
ja
push
fadds
and
push
cmovne
or
and
mov
out
xlat
dec
test
cmc
sarb
scas
call
mov
loope
pop
cmpsl
outsb
push
push
pop
outsl
pop
ret
cmpsb
pop
data16
push
mov
and
aas
mov
gs
dec
mov
sbb
enter
imul
ja
call
idivb
jbe
pop
jbe
jle
xor
xchg
sahf
mov
push
jne
subb
faddl
mov
jbe
rcl
and
xchg
add
gs
pop
or
or
divb
dec
jo
andb
mov
mov
cli
and
jge
add
push
push
xchg
pop
cmc
mov
pop
sahf
imul
jne
scas
mov
lahf
ret
or
jg
xchg
imull
pop
out
cmp
xlat
mov
xor
gs
ljmp
jecxz
je
lahf
jne
hlt
inc
dec
icebp
insb
sbb
pop
mov
push
push
jno
push
sarb
clc
repz
add
or
push
insl
cltd
push
pop
jle
jle
sub
adc
cs
sti
push
mov
mov
out
dec
lea
mull
xchg
movsl
sbb
dec
inc
dec
sahf
ficoms
and
pop
xlat
test
mov
jb
rorb
push
pop
xchg
lea
test
aad
hlt
xor
jno
shl
js
mov
xchg
sub
test
or
ss
push
scas
fsubr
rclb
enter
out
sbb
xchg
jge
pop
fsubrs
cwtl
xchg
gs
pop
sbb
mov
aas
push
sbb
fmuls
out
mov
push
xchg
xlat
push
pop
ljmp
adc
xor
mov
daa
mov
adc
ja
push
dec
repz
enter
mov
hlt
shlb
rorb
mul
in
jo
out
and
cld
int3
in
inc
shlb
sub
inc
orl
clc
loopne
xchg
mov
fdivr
xchg
aas
arpl
je
int3
fdivr
into
and
movsl
inc
stos
sub
mov
test
aam
enter
shrb
mov
xorl
add
std
into
xchg
or
mov
or
pusha
dec
aas
imul
cwtl
sub
ss
aam
out
lods
lea
testb
adc
lret
or
repz
sahf
ror
mov
loopne
cmp
lahf
pop
packssdw
dec
xchg
in
adc
arpl
cmp
jae
movsb
or
xchg
add
js
jmp
push
andb
insb
or
cwtl
push
xor
jnp
ds
pop
dec
addl
sbbb
push
loope
popl
mov
or
or
incl
adc
loope
xchg
stos
add
shll
ja
pushw
dec
or
push
push
cld
or
movsb
cld
jo
inc
adc
xchg
int3
scas
cmp
inc
mov
repnz
adc
sbbl
leave
mov
lret
xchg
xchg
rcl
lret
daa
ljmp
dec
in
addr16
js
ret
or
push
enter
cld
mov
sbb
adc
add
in
adc
cmp
mov
scas
sub
popa
sbb
vsubss
cmpsl
mov
int3
outsl
daa
icebp
or
aas
jb
mov
dec
mov
imul
test
xchg
cltd
push
add
cmc
cwtl
and
cs
out
imul
stos
aas
dec
mov
fidivrs
mov
cltd
xor
fsubrs
shlb
xchg
aam
dec
enter
xor
mov
push
cmc
xchg
adc
or
push
hlt
daa
mov
enter
dec
stos
add
int3
push
ljmp
adc
xor
cmp
sbb
inc
pop
enter
jo
movsb
std
pop
enter
imul
addb
lcall
enter
in
mov
cmp
adc
push
enter
cs
out
enter
rorl
xchg
in
xchg
mov
ret
cmp
fwait
and
mov
ss
shr
aam
adc
mov
gs
enter
add
subl
aad
rorl
test
adc
jge
call
adc
fxch
and
inc
inc
mov
lock
xor
sub
adc
add
inc
inc
add
xlat
addr16
addb
xor
and
and
pop
xor
ss
push
pop
pop
dec
pop
push
shlb
adc
cmp
push
pop
in
pusha
test
or
shr
mov
dec
pusha
loop
ror
aam
mov
mov
mov
mov
xor
fs
cwtl
sub
daa
insb
enter
push
aam
cli
gs
enter
mov
loope
add
sbb
imul
xor
push
xchg
jl
aam
test
pop
push
xchg
jns
sahf
xor
mov
pop
gs
enter
fimull
stos
mov
xchg
mul
mov
jo
mov
or
push
add
sti
push
cwtl
rolb
loope
int
cmpsl
enter
and
add
push
dec
inc
ljmp
ss
pop
sbb
xor
ret
and
enter
iret
scas
das
pop
xor
cmp
push
jbe
cmp
daa
in
mov
aad
adc
jo
xor
ret
loop
cwtl
mov
enter
add
cmp
aam
ds
int3
outsb
addl
or
nop
pushf
sub
dec
enter
fdivs
ror
idivl
inc
xchg
daa
loopne
pop
cmp
adc
repz
lret
cmc
sbb
loopne
call
in
inc
orb
mov
pop
ficomps
out
xchg
inc
pop
and
xchg
lcall
es
ds
pop
lcall
xlat
dec
hlt
dec
jns
jge
gs
hlt
inc
or
and
add
cmpsb
fs
mov
or
fwait
lock
aam
cwtl
hlt
pushf
mov
sarb
loopne
enter
push
inc
js
lods
int3
sbb
adc
jno
ss
fcmove
push
jns
or
aaa
das
dec
mov
addr16
xor
stos
add
shll
mov
push
dec
adc
mov
add
icebp
enter
xchg
insb
mov
pop
xchg
mov
mov
push
adc
loope
cmp
gs
std
push
jle
enter
push
cmp
lock
mov
push
shrb
add
cmp
mov
jne
lcall
insb
cmpsb
in
push
ret
roll
pop
sub
nop
arpl
or
jmp
lsl
push
mov
mov
mov
pushf
jp
sbb
test
imul
dec
or
cwtl
test
pop
ljmp
sub
mov
xlat
adc
mov
adc
test
mov
push
cmp
pop
pop
xor
enter
inc
mov
insl
dec
push
pop
inc
and
push
and
mov
mov
enter
iret
push
sub
enter
lods
or
mov
adc
jae
das
dec
push
popf
mov
int3
mov
aad
jl
or
test
js
clc
sbb
popa
lock
sub
enter
ror
push
test
xor
into
aaa
enter
and
imul
call
push
mov
push
cmpsb
push
jne
cmpsl
ret
fcompl
mov
bound
enter
mov
rcrl
loop
jne
add
mov
add
pop
dec
enter
imul
nop
enter
les
lock
mov
mov
lods
sbb
lcall
mov
movzwl
in
ss
add
loopne
jmp
push
inc
std
pop
pop
jmp
shll
scas
enter
mov
imul
push
mov
cwtl
push
in
inc
icebp
dec
jmp
and
or
lcall
test
sbb
rcrb
and
mov
fmull
xor
or
enter
in
add
scas
push
xchg
imul
outsb
mov
enter
mov
outsl
xor
imul
test
test
scas
dec
inc
insl
dec
xor
outsb
enter
and
jl
pop
mov
test
and
jmp
jbe
jg
adc
cmp
movsb
and
cld
mov
loope
popa
aad
xor
mov
mov
or
inc
aam
push
mov
or
pop
jmp
xchg
push
add
les
aas
mov
js
das
dec
and
pop
inc
enter
leave
lea
out
inc
test
nop
data16
mov
mov
dec
xchg
mov
enter
sub
and
lock
notb
fwait
pop
pop
mov
xor
loop
sbb
lea
mov
not
mov
stos
add
mov
movsl
scas
ds
shld
call
popf
faddp
rclb
ret
pop
pop
hlt
mov
test
insl
mov
cld
call
adc
addr16
pop
pop
mov
in
lret
pop
push
jnp
push
scas
out
xchg
cli
popa
rep
sub
popa
ficoml
dec
loope
mov
xor
orl
cmp
mov
dec
pushf
xchg
movsl
inc
icebp
add
enter
mov
adc
add
push
sti
inc
negb
add
in
sbb
inc
dec
mov
jne
aas
enter
mov
cmpsl
mov
sub
lds
push
divb
jecxz
sbb
jg
int
clc
adc
icebp
xchg
aam
out
pusha
ret
sbb
sbbb
mov
jp
add
jp
inc
stc
dec
iret
dec
enter
test
xchg
stos
fcmovne
jecxz
push
push
xchg
xor
mov
andl
test
xor
loop
push
out
sti
and
sbb
inc
cld
xor
add
loope
cmp
xchg
mov
ss
mov
inc
enter
jo
scas
stos
enter
lock
xor
pop
and
mov
enter
add
ret
cmpsb
xchg
cmc
popa
cmp
adcb
add
and
das
jae
add
dec
add
inc
cmpsb
in
cwtl
or
fistps
lds
add
pop
leave
aam
dec
call
pop
add
or
push
mov
ficomps
pushf
clc
mov
add
insb
mov
mov
stc
adc
enter
cmp
pop
in
sbbb
lods
or
cwtl
rorb
hlt
shl
pop
fiaddl
roll
jo
xchg
jmp
shl
popa
jp
push
stc
inc
ret
shl
dec
jle
imulb
push
mov
cmp
sub
dec
fldt
stos
sub
enter
sti
mov
sub
enter
inc
sub
aam
and
roll
fidivl
mov
call
xchg
xchg
lds
lret
mov
aad
xchg
js
mov
xchg
enter
dec
sbbb
dec
enter
pop
lcall
dec
mov
ss
sub
enter
jmp
mov
inc
xchg
jp
sti
inc
push
add
cmp
out
mov
inc
cmp
jge
lds
sbb
adc
xchg
jo
movsl
mov
addb
sub
xchg
out
sahf
lret
enter
das
push
jecxz
dec
adc
lds
les
out
repnz
gs
loop
sarb
mov
or
adc
das
or
fsubrp
int3
xor
mov
mov
xchg
outsl
add
stc
push
and
lock
in
ror
int3
sbb
sbb
cmpsl
cmp
sahf
into
jno
sbb
sub
ds
dec
jmp
adc
xchg
mov
xorl
outsb
stos
cmp
enter
je
hlt
test
enter
idiv
int
xor
mov
repz
stos
enter
subl
cmc
mov
jge
int
add
dec
and
xchg
inc
in
sahf
enter
cmp
enter
gs
adc
pop
aam
hlt
cmp
mov
cmp
jbe
mov
pushf
xchg
pop
dec
enter
aam
mov
inc
imul
mov
fwait
shlb
dec
mov
iret
xchg
es
icebp
or
pushf
jecxz
lods
pop
inc
push
lea
outsl
mov
pop
fadd
xor
adc
ficompl
test
repz
negb
enter
loope
cld
imul
imul
roll
mov
imul
enter
add
sbb
aam
mov
fisubs
cmp
jne
aam
loop
addr16
pop
sbb
mov
xchg
sbb
hlt
pop
xchg
enter
mov
push
enter
push
jle
mov
loop
insb
int
push
dec
push
fcoms
movsb
mov
in
dec
pop
push
orl
mov
lahf
out
jb
inc
fcom
adc
jns
fs
xor
sub
xchg
cmc
ja
cmpb
xchg
pop
jae
fbld
sbb
add
cmp
sbb
xchg
sbb
cmp
add
test
enter
pop
popa
sbb
mov
stos
push
mov
xor
mov
int3
popa
arpl
in
loope
mov
std
enter
stc
mov
push
adc
adc
cmp
pop
mov
enter
fwait
pop
mov
lcall
out
ljmp
fwait
enter
aad
push
push
add
rcll
out
mov
ja
enter
scas
add
ds
enter
xor
jns
std
enter
push
dec
adc
enter
int3
pop
je
cmpsl
enter
ja
cmp
es
cld
les
or
inc
jmp
add
fmulp
push
nop
mov
lahf
add
dec
insl
enter
repz
jb
test
mov
sub
jecxz
mov
xor
test
idiv
cmp
sub
mov
jle
xor
add
addr16
jno
in
xor
or
fsubrs
push
push
mov
mov
pop
cmp
lret
lods
mov
rcl
or
popf
lock
call
jae
and
push
pushf
or
fmuls
lds
enter
xor
lahf
mulb
faddl
jp
outsl
js
clc
enter
scas
inc
sbb
adc
rcrl
jg
aaa
xchg
adc
dec
push
dec
sub
and
loope
pop
dec
xchg
push
inc
cld
dec
fadds
enter
lcall
fsubrl
outsl
inc
adc
sub
pop
and
mov
in
nop
aam
scas
add
test
jge
dec
hlt
adc
xchg
pusha
lea
pop
enter
adc
inc
inc
enter
xlat
xchg
lea
enter
lods
shl
mov
int
mov
dec
enter
shlb
mov
popa
add
ja
into
clc
xor
enter
fwait
adc
mov
and
into
push
js
xchg
xchg
sub
leave
bndstx
mov
mov
enter
cwtl
xchg
je
enter
and
sbb
loop
cs
gs
sub
enter
sub
mov
dec
jl
pop
movsl
mov
sub
clc
sub
cmp
sbb
xchg
jne
in
ljmp
nop
mov
enter
or
mov
cmpsl
mov
gs
enter
pop
popf
dec
into
shl
test
cmp
or
sub
fs
push
adc
mov
stos
or
cld
in
in
cwtl
mov
test
adc
loopne
sub
xchg
cmp
lea
enter
out
shlb
sub
hlt
imul
fmul
insb
add
scas
cmpsb
adc
loopne
mov
int3
andb
dec
jp
sbb
dec
lods
fists
dec
fst
inc
pop
cld
movsb
lds
mov
int
test
fsubrs
xchg
lretw
sbbb
jg
aam
sahf
flds
ja
push
or
enter
mov
ret
sahf
jnp
bound
into
enter
in
sub
test
andl
add
movsl
test
in
aam
push
shrl
and
std
mov
mov
add
jb
fistps
pusha
dec
enter
inc
cli
cmp
enter
imull
mov
lret
aad
loope
in
sbb
sbb
pop
jb
mull
mov
test
test
mov
push
popf
add
daa
ljmp
or
les
aam
mov
data16
pop
aam
jns
inc
cltd
pop
es
ja
sub
daa
xchg
int3
les
enter
add
add
aam
add
add
add
add
add
add
add
sbb
add
add
add
add
enter
xor
aaa
mov
jnp
push
mov
ja
repz
xchg
lret
jg
shll
cmp
pop
or
cwtl
repnz
or
stos
inc
and
sbb
mov
dec
inc
push
psubd
cmp
push
das
paddsb
dec
int3
fmull
mov
inc
mov
mov
xchg
repnz
sbb
cmp
scas
popa
mov
dec
cs
add
xor
mov
test
lret
dec
push
xchg
fs
lahf
dec
jno
aad
ljmp
jmp
xor
xchg
pop
mov
or
pop
pop
stc
mov
pop
cld
sahf
jnp
rcrb
rcrl
jle
xor
pop
rcll
pusha
jp
mov
add
mov
pop
mov
les
cmc
push
xchg
cmp
and
dec
adcb
add
inc
jle
ss
in
es
dec
ljmp
icebp
cwtl
sub
jle
aas
insb
mov
mov
push
cmc
jecxz
das
jb
scas
sub
loope
push
pop
testb
cwtl
jmp
inc
xchg
mov
enter
movsb
cmp
lds
loop
ret
aam
cmp
daa
loop
lret
sbb
xchg
iret
popf
xor
jl
hlt
fxam
fmul
push
sub
adcb
mov
out
cmp
in
lret
das
xchg
cs
or
sbb
fmul
ss
mov
dec
stos
mov
push
inc
incl
das
subl
xchg
pop
stos
imul
out
dec
insl
or
sbb
mov
xchg
mov
inc
shlb
push
and
mov
mov
in
jg
sbb
pop
scas
push
ja
std
fdivrs
jb
out
cmp
xorl
jmp
in
loopne
enter
mov
arpl
andb
sti
popf
pop
rcrb
cld
add
mov
sahf
lret
push
repz
shl
mov
leave
test
or
and
or
inc
lods
test
pop
and
xchg
pop
mov
out
sub
pusha
xor
int
inc
rcl
shlb
mov
mov
cmp
insl
pop
cld
call
pop
xchg
cwtd
dec
xor
jecxz
pop
xor
mov
mov
jecxz
mov
cld
std
lcall
mov
ja
cmp
mov
pop
mov
sub
or
or
mov
mov
icebp
daa
and
fucom
push
adc
mov
xor
jmp
cmp
nop
cltd
xchg
sbb
xor
cmp
push
shrb
repnz
ret
aad
mov
lods
and
push
push
loope
xor
push
scas
shrl
sbb
mov
pop
fdivrs
js
cld
hlt
data16
loope
pop
fdivrs
adc
jecxz
stos
inc
add
pop
jb
sti
lea
mov
daa
mov
pop
popa
cmpl
je
out
in
decl
xchg
push
sbb
mov
js
mov
or
fisubrs
nop
fisttpl
inc
imul
mov
mov
lahf
lock
rorl
and
push
pop
adc
cld
sbb
push
call
fldl
inc
sub
pop
mov
dec
xchg
dec
lock
pusha
scas
test
out
pop
scas
cmp
lret
ds
inc
or
sbb
xchg
mov
push
push
fprem
push
in
sub
in
and
cli
mov
test
push
mov
add
add
cwtl
out
jl
in
xor
popa
lods
cmp
xor
lods
sbbb
shrb
lcallw
jae
inc
mov
out
addl
test
arpl
pop
jb
push
sbb
xor
loopne
sub
in
popa
dec
xchg
mov
jnp
int
sbb
in
enter
mov
arpl
fstps
in
loopne
dec
lds
push
mov
ficoms
bound
in
testb
or
lds
xor
jecxz
loop
lea
aam
adc
fisttpl
jns
es
sbb
dec
push
lods
pop
mov
movl
pop
into
in
and
loop
pop
sub
movsl
dec
add
cld
xchg
inc
adc
aam
in
mov
inc
fcmovu
repz
xchg
mov
cs
aad
inc
dec
adc
xor
sbb
pop
stc
push
pop
mov
xor
addr16
cmpsl
adc
cli
or
dec
mov
and
in
dec
stos
pushf
sub
jbe
test
jo
xchg
xlat
adc
mov
xor
xchg
pop
mov
cmp
pop
out
movsb
dec
cmp
sbb
jnp
mov
jb
shl
push
outsl
lock
out
std
test
scas
ss
lret
imul
jle
push
sbb
and
dec
daa
or
lods
or
inc
push
jo
insb
sbb
sbb
bound
or
push
cmp
cmp
pop
sub
test
xchg
mov
sub
cmpsb
fwait
fs
adc
test
out
xor
xchg
fcmove
cli
arpl
repnz
xor
lahf
inc
faddl
xor
pop
rorb
cld
mov
push
insl
push
xchg
jb
mov
fs
jns
jmp
mov
push
cmpsl
ds
xlat
and
cmc
and
mov
mov
outsb
xchg
cmpsl
push
int
push
xchg
outsl
mul
das
jb
popf
xchg
shlb
mov
xchg
xor
cmovge
out
mov
cwtl
adc
push
lahf
mov
hlt
popa
and
or
jmp
dec
mov
xor
imul
lea
inc
xchg
add
xor
insl
pop
inc
add
mov
or
jo
or
xchg
mov
adc
std
cmp
xor
aam
jle
jnp
mov
pop
pop
xchg
test
scas
repz
out
mov
das
out
add
loop
or
sahf
fs
ficomps
mov
test
mov
adc
xchg
adcb
jge
sbb
pop
and
xor
pop
sub
xchg
pop
out
dec
test
sbb
push
aam
xchg
adcl
xchg
pop
repnz
dec
leave
dec
xor
ja
stos
push
fstps
cmc
mov
inc
fldt
je
lds
jle
jne
pop
mov
push
sarb
mov
outsl
lret
fcompl
rorl
sbb
jge
and
cltd
scas
int
fwait
sub
dec
in
or
push
and
in
xchg
cmpsb
fbstp
cmp
in
add
mov
mov
xor
pop
test
pop
orl
mov
icebp
and
test
call
mov
cmpb
mov
addr16
cmp
add
in
jbe
push
xor
mov
push
stos
push
clc
int3
scas
pmaxsw
pushf
mov
loop
ss
lea
roll
adc
cvtps2dq
outsb
mov
xchg
adc
mov
lret
inc
dec
mov
xchg
mov
les
and
add
cmp
js
ret
adc
cmpl
xchg
add
popa
xchg
js
pop
xchg
repnz
cmp
jne
pop
xor
and
cwtl
test
xor
xchg
xor
popa
inc
cmp
orb
adc
jl
inc
xchg
pop
pop
sbb
data16
jnp
xchg
cmp
aam
inc
stos
sub
outsl
dec
xchg
ss
sar
movsb
xor
add
fcompp
cs
stos
imul
enter
xchg
pop
sub
shlb
pusha
cmpsl
sbb
pushf
mov
mov
xchg
outsb
inc
inc
rol
jmp
imul
mov
stos
es
mov
std
xlat
ss
mov
data16
mov
mov
xor
inc
and
jo
je
int3
in
insb
push
int
inc
push
gs
int
dec
addl
fcmovne
mov
mov
fwait
dec
or
mov
in
sti
loop
cwtl
lea
jno
shrb
sahf
xchg
in
loop
movsl
cld
scas
movsb
scas
stos
inc
pop
cmp
jne
cmp
insl
imul
loope
jno
data16
sarb
int
add
pop
stos
mov
mov
jg
shll
stos
test
out
pop
ja
jp
enter
stc
cmp
push
pop
test
mov
sahf
shll
xchg
bound
mov
push
or
in
adc
push
repz
lahf
aaa
push
mov
xchg
push
sbb
into
mov
nop
cmp
sub
mov
inc
mov
inc
test
icebp
mov
sub
test
icebp
sbb
je
push
dec
adc
shrl
xchg
push
push
test
pusha
mov
push
mov
ret
xor
std
adc
add
int3
mov
pusha
leave
movsb
das
add
out
scas
pop
add
into
push
fcmovnb
das
xchg
xor
and
dec
dec
jo
push
mov
pop
ret
push
adc
inc
sub
ret
adc
ja
ds
jle
sub
dec
jecxz
divb
mov
sbb
arpl
lds
push
inc
les
lods
cli
lods
aaa
inc
cmp
rcr
xor
loop
pop
dec
sbb
loop
sub
mov
add
xor
cmp
lock
push
push
mov
xor
fildl
fimull
push
adc
xchg
std
imul
ja
js
cmpsb
inc
pop
into
data16
lods
inc
outsl
out
pop
popa
dec
jns
aaa
aaa
outsl
js
scas
cmp
push
sub
adcb
jecxz
xor
push
les
arpl
loope
cmp
fnstenv
cmp
or
movsl
imul
jge
jmp
lahf
lea
flds
pop
sbb
scas
sub
xor
rorl
mov
arpl
cmpsl
pop
and
int3
pushf
test
dec
and
lods
cmc
xchg
addr16
addr16
sbb
enter
inc
mov
adc
xor
orl
das
fs
add
mov
mov
out
mov
shl
enter
add
push
movb
not
jmp
rcl
mov
pusha
cmpb
call
lea
jne
call
lcall
inc
jae
int3
stc
sub
std
sub
add
fisubrl
mov
jne
or
or
xchg
movb
push
xor
int3
xchg
sarl
in
inc
or
add
push
subl
inc
insl
xchg
inc
icebp
push
pop
xchg
push
push
xchg
out
xchg
push
push
dec
sahf
leave
mov
fwait
cmpsb
mov
add
lret
decb
inc
xchg
ret
lret
mov
xor
pop
sbb
jge
lcall
mov
inc
pusha
or
mov
fs
fistpl
sub
pusha
mulb
jl
adc
in
out
popf
lret
fnstcw
lock
in
es
push
outsb
subb
adc
push
inc
insb
cwtl
push
adc
or
xchg
out
sbb
fstpl
mov
or
cwtl
fwait
mov
mov
xchg
jne
xchg
adc
scas
pop
xchg
call
sub
pop
mov
fstpl
inc
add
dec
push
or
cmpsl
in
scas
test
cs
xchg
iret
mov
add
cld
mov
mov
rolb
pop
cmpl
not
mov
push
mov
push
setbe
lods
cmc
pushl
bt
neg
stc
cmp
clc
test
add
bt
lea
jno
ror
test
stc
call
add
dec
gs
popa
addr16
outsl
js
add
add
nop
pusha
test
call
lea
call
pushf
pushf
mov
pushf
lea
jne
bswap
bswap
sete
mov
push
movl
mov
lea
jmp
pusha
lea
ja
jmp
lahf
cmp
dec
js
dec
ja
aam
adc
das
push
popa
nop
or
mov
dec
sti
test
xchg
and
test
pop
xor
dec
rcll
rclb
pop
sbb
sbb
sqrtps
sub
fcompl
rorl
cmpsl
pop
mov
fstl
push
adc
in
insb
fwait
dec
jne
dec
jbe
repnz
sbbb
push
popa
pinsrw
movsb
test
push
pop
mov
xchg
shr
shrl
dec
clc
sahf
cli
xor
cmpb
push
adc
push
inc
fidivs
pop
lods
icebp
addb
test
loop
fwait
inc
stos
pop
aas
insb
pop
ret
repnz
arpl
sbb
mov
inc
addb
popa
adc
roll
mov
aam
ret
outsb
fwait
pop
sbb
call
add
pusha
mov
neg
dec
add
bsf
bsr
movl
not
dec
mov
cmp
cmp
movw
lea
jbe
cmp
sub
shrd
stc
jmp
insb
mov
adc
in
dec
jne
dec
jns
push
sub
xchg
fnsave
aad
push
out
popl
test
and
jge
push
ftst
xor
bnd
sti
fsubp
shrl
shrl
daa
sbb
rcll
inc
add
lods
call
push
cwtl
inc
push
lods
lret
mov
pop
sahf
push
xchg
cmp
mov
insl
xchg
or
out
dec
cld
jp
incb
or
inc
xrelease
inc
cmp
int
jo
mov
cmpsb
out
mov
mov
push
les
bound
test
andl
hlt
int3
sti
push
sti
scas
pop
insb
and
mov
mov
adc
mov
pushf
cmpsl
lods
jle
mov
fcomip
mov
stc
cmpsb
sti
test
adc
push
sar
lock
jmp
out
in
and
jl
call
and
pop
jae
pushf
pusha
pusha
jmp
pushf
lea
je
call
push
lea
je
shld
rcl
add
shld
sub
test
bts
shr
or
pusha
and
bsf
mov
clc
shrd
not
pusha
add
mov
shrd
add
btr
jmp
sub
mov
out
pop
ret
xchg
jno
aad
mov
inc
std
test
mov
mov
mov
in
sub
and
xchg
iret
imul
mov
int3
roll
adc
test
or
loop
cmp
push
sub
scas
mov
sub
incb
jnp
adc
loopne
or
pop
or
in
mov
sub
mov
add
inc
int3
sub
bound
push
imul
cmc
xchg
or
pushf
push
data16
orl
inc
jg
sbb
je
lods
pop
in
jl
xor
shl
mov
jb
pop
push
inc
ret
xorl
fs
jnp
fs
adc
push
popf
fmull
loopne
fwait
xchg
imul
pop
cli
jbe
mov
xor
out
rcr
adc
xchg
adc
cltd
xor
shrb
lock
dec
inc
and
movsbl
lahf
cmp
ljmp
push
and
ja
sub
or
jmp
mov
ja
push
xor
inc
daa
cmc
ss
xchg
clc
sub
shrb
inc
push
in
mov
and
cmpsl
mov
sbb
inc
xchg
enter
out
aaa
out
sub
pop
repnz
lock
sub
fisttpll
movsl
or
sti
leave
jne
aaa
sub
sub
push
mov
cmp
jae
in
aaa
ljmp
and
inc
shr
call
neg
cmp
jmp
jmp
jmp
push
pushf
call
jmp
movw
lea
jl
pushf
lea
jne
movsbl
pushf
movzbw
movb
call
pushf
lea
ja
ror
add
sub
bsf
push
lea
add
dec
movsbw
mov
rcl
mov
clc
bt
repnz
pusha
call
int3
push
dec
cld
roll
lods
pop
add
popa
mov
jnp
xchg
daa
push
mov
mov
mov
pushf
out
jle
data16
pop
mov
dec
arpl
movsl
cli
sub
xor
and
out
xor
xor
mov
mov
inc
lahf
jl
lret
add
out
sub
movsb
loopne
loopne
aam
setl
xchg
add
test
movsbl
call
jmp
add
addb
add
movsl
sbb
add
pop
push
add
in
adc
add
sub
xchg
xor
lds
dec
stc
mov
jg
fnstenv
arpl
pop
mov
dec
stc
mov
inc
insl
mov
cmpsl
sar
pop
je
dec
sub
inc
fistpll
or
xor
pop
cltd
or
scas
sbb
outsb
pop
lea
cmp
dec
or
xchg
rcl
fisttpl
imul
adc
mov
cmp
pop
loopne
test
clc
jne
mov
xchg
mov
sub
push
xchg
aam
aam
out
mov
mov
and
call
and
or
in
mull
add
pop
test
fwait
mov
loop
mov
ss
inc
xchg
jl
daa
call
xchg
das
pop
jge
cmp
sub
jle
inc
and
fnstcw
stos
pop
jecxz
hlt
aaa
and
or
xchg
mov
fwait
out
aad
subb
pushf
adc
mov
cs
sub
daa
loope
pop
xchg
imulb
clc
test
pushf
lahf
hlt
stc
outsb
or
in
fisttpll
xor
mov
and
cmc
xor
repnz
xchg
fdivrl
push
dec
lret
lock
push
mov
add
into
stos
xor
adc
push
jns
jns
push
push
rclb
dec
mov
inc
jl
divb
int
sbb
dec
or
and
jno
dec
cmc
mov
daa
xchg
clc
cmpsb
inc
adc
imul
ss
std
jne
scas
adc
cmp
adc
lock
pusha
adc
xchg
xor
leave
loop
push
jbe
pop
jae
cli
nop
inc
mov
les
cmc
pusha
aam
fstpl
dec
or
shr
bound
leave
push
inc
cmpb
mov
fs
into
pop
lock
cmp
adc
lods
fldl
jecxz
mov
sub
and
push
add
xor
pop
leave
in
rcrl
ret
ficomps
outsl
lcall
mov
imul
xchg
push
stos
cmp
adc
mov
mov
out
pop
sti
scas
cmp
addb
push
pushl
popl
not
setg
mov
lahf
bswap
movl
movsbw
pop
pusha
cwtl
lea
jmp
pushf
cmpb
push
jmp
pushf
cmp
pop
shrb
jae
adc
and
mov
in
inc
mov
mov
xchg
shlb
mull
into
or
hlt
roll
stos
xlat
xchg
xor
inc
jae
repz
dec
cmp
int
pop
or
rcrb
mov
or
adc
out
sbb
loop
cmp
loop
repnz
sub
sub
aas
mov
in
xchg
adc
mov
jg
inc
xchg
inc
test
adc
aaa
lds
lcall
das
push
cld
push
cmpb
popf
inc
fwait
dec
jp
negb
das
push
sbb
fldcw
pop
xchg
shlb
push
mov
nop
push
push
jb
leave
add
inc
insb
xchg
cmp
jle
jp
push
pop
or
jmp
push
in
fdivl
push
rorl
mov
jle
mov
mov
inc
jae
cmp
pop
sub
and
jo
dec
loop
int
push
xor
divb
xor
arpl
pop
sbb
push
out
mov
fs
lds
fs
call
jmp
lea
jne
cwtl
movzbl
sub
bt
mov
pushf
add
stc
ror
mov
clc
pushf
clc
pushf
test
pusha
lea
je
cmc
sub
pusha
jmp
in
call
call
sub
call
pushf
not
stc
cmc
jmp
jmp
lea
jne
bswap
mov
cmp
add
bt
cmp
pusha
stc
movzwl
test
shl
btc
bswap
mov
cmc
bt
jmp
jmp
inc
dec
mov
fimuls
insb
cltd
inc
add
nop
jbe
xor
and
stos
pop
xchg
fildl
inc
fstl
mov
lahf
pop
pop
dec
mov
call
imul
clc
lcall
into
loopne
lods
adc
out
dec
addr16
push
cwtl
inc
mov
dec
push
pop
mov
in
call
mov
pop
mov
test
out
popf
pop
stc
sbb
xchg
clc
cmpsb
aam
push
lea
ret
mov
mov
sub
jns
mov
cmp
pushf
adc
mov
movb
pushl
ret
je
clc
clc
cmp
push
pushl
ret
not
pushf
movb
call
pusha
push
call
pushf
movb
lea
call
push
pushf
call
pusha
movb
call
dec
xchg
or
adc
dec
cmc
movsl
iret
sti
sub
xchg
pop
cltd
fwait
mov
mov
xor
insb
aad
pop
pop
movsl
inc
testb
data16
cmp
cld
int
daa
xchg
enter
cmp
cli
int3
std
jns
cmp
sub
sbb
push
ret
fildll
push
xlat
mov
sar
lods
shlb
xor
inc
out
lcall
mov
out
xchg
daa
outsb
pop
add
fucomi
orb
and
loope
dec
pop
inc
cli
mov
scas
insb
movsl
and
lock
test
call
adc
add
movsl
aad
cmp
rdpmc
mov
lahf
cmp
push
push
cmp
repz
jl
push
jle
repnz
mov
enter
push
or
push
dec
scas
sbb
sti
xchg
push
dec
jnp
or
sti
xchg
jb
push
cmp
movsl
dec
pop
add
xchg
sarl
xor
xor
popa
pop
pop
imull
stc
cmpsb
loope
scas
pushf
call
neg
cmp
cmc
stc
add
pushf
bt
pushf
ror
push
not
cmp
add
cmc
jmp
lea
je
dec
neg
xchg
mov
mov
movzbl
sbb
add
bswap
lea
bswap
mov
jmp
str
push
jmp
push
pushf
adc
pop
xchg
fimuls
iret
inc
mov
lcall
repz
cli
daa
push
mov
cmpsl
mov
mov
pop
dec
mov
imul
pop
imul
jb
push
pop
mov
out
cmp
xor
lret
or
lock
mov
and
jmp
add
mov
or
cmp
dec
mov
sbb
lods
and
xor
daa
daa
jmp
insb
cwtl
inc
jb
inc
repz
stc
cmpsb
arpl
xorl
scas
psadbw
add
sti
xor
xor
popa
sbb
das
jecxz
fucomp
xorb
test
jb
add
pusha
jmp
jmp
setne
seto
lods
pusha
pushf
dec
cmc
pushf
rol
pushf
stc
xor
pushl
mov
jmp
and
cmc
pushf
mov
ror
movsbl
bsf
mov
ror
pusha
shr
add
rol
cmc
pushf
shr
cmp
test
bsf
ror
mov
xor
add
push
call
add
xorl
mov
aas
xchg
rol
inc
add
popa
or
cmp
sbb
sbb
mov
pop
mov
lret
mov
add
sti
aaa
cmc
xor
xor
movsb
push
adc
in
popf
dec
je
push
sti
daa
push
cmpsl
push
test
icebp
push
jg
testl
repz
ja
fnstsw
fdivrl
in
frstor
test
mov
dec
pop
dec
mov
mov
inc
sbb
pop
dec
js
clc
pop
mov
jl
shll
cmp
mov
jb
push
sub
jg
mov
ja
lcall
xor
rolb
cmp
xor
push
or
aaa
cmc
mov
add
je
ret
popf
movl
movl
pusha
movb
lea
jmp
test
xchg
add
in
xor
lea
cmpsl
xlat
fnstenv
xchg
inc
fsubrl
mov
push
outsb
divb
fs
lcall
jne
insl
sub
sbb
movsl
mov
aam
mov
pushl
test
clc
add
bt
mov
push
stc
pushf
test
call
push
lea
call
call
jmp
pushf
call
dec
clc
pushf
jmp
popf
rdtsc
nop
call
mov
push
mov
lea
jmp
test
push
rol
bt
pushf
mov
cmp
stc
pushf
mov
sub
call
inc
fists
in
jne
dec
jb
into
jl
outsl
fwait
xlat
sub
repz
nop
scas
movsl
pop
push
inc
inc
int
add
dec
movsb
sarl
add
pusha
sbb
aam
dec
xchg
mov
nop
cmp
pop
test
lea
xor
pop
mov
xlat
adc
adc
std
dec
cld
aaa
jb
imul
adc
push
stc
push
add
xor
stos
fcoms
imul
in
fsts
xlat
mov
pop
lock
add
mov
mov
pop
pop
ja
mov
dec
cmp
pop
cmp
jb
push
adc
xor
pushf
out
inc
adc
add
lcall
out
ds
xchg
call
and
inc
ffree
pushf
adc
jno
loope
test
enter
insl
sbb
outsb
pop
jp
or
out
push
jnp
loopne
pop
sbb
push
adc
add
out
adc
sbb
lea
jne
cmc
movsbw
sbb
mov
stc
cmp
or
push
lea
je
push
bswap
lea
bswap
movzwl
lea
bswap
pop
mov
lea
pushf
mov
call
call
push
jnp
adc
in
pushf
dec
jne
dec
jl
fiaddl
push
mov
and
fcmove
and
outsb
mov
scas
gs
jmp
lds
aas
push
push
nop
dec
mov
pop
sar
jne
lret
jle
add
push
cmpb
dec
mov
call
call
pop
movsbw
mov
jmp
test
pop
add
in
cmc
mov
jg
cmp
or
fs
aad
pop
or
out
test
mov
or
loope
lret
shr
popl
and
pop
stos
dec
int3
subps
fwait
pop
ss
adc
adc
aam
cli
scas
cmpsl
dec
sbb
add
or
and
test
inc
lahf
lret
arpl
fistpll
jle
pop
push
fiadds
xchg
rorb
ret
jb
in
test
and
jle
xchg
xor
jmp
push
add
stc
cmp
jmp
pushf
lea
jne
push
pop
setbe
seta
mov
push
push
lea
jmp
mov
lea
pusha
jmp
bt
repnz
push
lea
jne
cmp
neg
xchg
stc
mov
shl
sub
test
shld
btc
movsbl
mov
pusha
push
test
sub
test
pushl
popl
push
pushl
cmp
jmp
dec
jmp
xchg
ret
inc
jae
int
es
add
insb
fwait
cmp
and
pop
push
imul
adc
xchg
rorl
movl
jmp
cmpsb
aam
push
data16
aas
ret
shrl
add
sbb
lds
xor
loope
outsl
popf
lahf
xchg
out
ret
pop
add
sbb
pusha
push
sbb
mov
push
fmull
mov
test
xor
out
loop
mov
dec
scas
fucom
mov
and
idivl
icebp
pop
pop
sbb
into
or
mov
fs
xlat
xchg
sarl
decl
in
cmp
les
enter
jae
iret
stos
sbb
add
loope
stc
lcall
xor
aad
adc
inc
mov
clc
mov
das
outsl
lods
gs
mov
jmp
sbb
mov
pop
call
cmp
jmp
mov
ret
std
adc
add
fimull
ljmp
jmp
aad
repnz
in
test
xor
mov
adc
fs
or
inc
cli
mov
gs
lock
adc
das
fadds
gs
popf
subb
dec
notb
pusha
insb
aad
adc
sub
add
push
into
jnp
adc
xchg
cmc
xchg
das
mov
xor
jb
jle
xor
lcall
xor
adc
daa
pop
xchg
push
xor
add
inc
jnp
mov
movaps
subl
mov
push
outsb
pop
xor
push
pop
pop
push
push
movsl
shll
dec
jnp
je
repz
sbb
mov
cmp
idiv
test
pushf
cmp
add
pushf
push
pushf
lea
je
pusha
add
movw
pushf
push
lea
jmp
and
daa
sar
test
mov
pop
or
xlat
das
test
xor
pop
sbb
push
or
icebp
dec
sarb
push
cmp
adc
ja
sbb
lods
in
adc
cmovl
mov
int
push
xchg
scas
in
stos
cmp
pop
mov
sarl
jne
outsl
scas
outsb
sub
sbb
sbb
push
fsubrs
mov
mov
sar
shl
shld
mov
add
sar
stc
pusha
shl
movl
xor
shl
ror
mov
stc
pushl
cmp
call
pushl
jmp
ror
pushf
jmp
out
mov
sti
adc
repz
std
sub
add
cmp
mov
sub
or
mov
arpl
stos
adc
int
fisttps
jecxz
pop
adc
jbe
test
fstpl
add
dec
incl
sbbb
add
adc
jecxz
cmp
sbb
es
cld
cmpsb
loope
rcrl
leave
sub
xor
or
or
stos
lret
stos
inc
insl
notb
out
add
lcall
xor
pop
adc
cmc
scas
imul
popf
mov
lea
out
sub
sbb
inc
addb
aas
repnz
icebp
sbb
mov
cmc
idiv
pusha
lea
pushf
movl
push
mov
pushf
pushl
ret
push
pusha
mov
pushf
jmp
data16
adc
call
ret
shll
repz
int3
add
inc
pusha
nop
dec
out
push
push
aaa
loop
addr16
ret
jae
dec
je
into
or
fldcw
lret
fisubs
pop
mov
jecxz
ret
or
test
enter
xor
mov
popf
bound
and
cltd
stc
out
outsb
mov
stos
sbb
icebp
lea
cmp
aas
xorb
frstor
mov
lock
mov
mov
in
jns
push
add
or
pop
out
or
mov
cmp
hlt
nop
sbb
inc
lds
in
adc
idivb
dec
fildll
sti
and
out
mov
test
inc
outsl
jmp
popl
fs
pop
test
sbb
xchg
push
data16
cs
sbb
incl
or
pop
aam
lret
add
jg
into
repnz
or
pop
imull
in
ljmp
add
jecxz
ds
mov
pop
insb
aad
dec
ljmp
add
cs
mov
out
pop
stos
scas
in
push
or
cli
sbb
arpl
cli
out
inc
mov
in
call
call
xchg
adc
cmpsl
lahf
xor
cmc
lahf
decl
inc
xchg
inc
flds
mov
add
or
pop
add
adc
lock
pop
cmp
pop
xchg
push
push
jmp
lret
add
lea
popa
lea
cmp
int
dec
test
ljmp
xor
jg
push
jecxz
pop
cltd
fstps
aam
insl
and
loop
lock
adc
add
mov
loop
mov
pop
or
xchg
mov
out
push
lods
pop
xorl
int3
cld
xchg
jmp
xor
adc
dec
or
push
add
fsubr
mov
je
fidivrl
sub
in
cltd
inc
add
dec
add
cltd
inc
out
notb
mov
imul
mov
sahf
xchg
xchg
adc
cmp
shrl
inc
inc
lock
sahf
and
jno
dec
mov
fwait
in
and
xor
jae
iret
mov
hlt
mov
mov
jecxz
sahf
ficompl
imul
and
xor
lcall
jne
les
lea
icebp
push
jmp
mov
in
in
mov
sahf
leave
clc
and
js
jno
pop
sbb
xchg
cltd
inc
xlat
inc
ss
pop
sti
dec
mov
daa
cltd
je
xor
mov
aaa
nop
pop
xchg
add
dec
loope
es
xchg
lds
daa
pop
cmp
cmpsb
ret
icebp
add
jo
loope
mov
sti
xchg
imul
and
add
push
jb
test
xchg
inc
jnp
jp
hlt
mov
daa
arpl
sarb
pop
sbb
stc
or
pushf
movl
pushf
movb
lea
jne
rcl
shrd
clc
mov
test
pusha
or
call
test
call
pusha
pushf
call
jmp
movsbl
not
lahf
mov
lea
cwtl
movl
pushf
pushl
lea
push
push
movl
jmp
mov
cmp
cmp
test
mov
lea
je
call
xchg
call
or
mov
ljmp
stc
in
sbb
pop
mov
int3
jns
gs
xor
out
mov
cs
fwait
movsl
es
or
ja
fcompl
xchg
push
lea
cmp
call
cmp
pushl
lea
jae
test
cmp
call
mov
movb
pushf
push
mov
cwtl
mov
mov
jmp
add
adc
add
add
add
adc
add
adc
add
add
add
add
sbb
add
ret
js
sbb
add
add
ds
idiv
cmc
cmp
cwtl
pop
not
lea
movsbw
jmp
xchg
call
mov
pushf
pushf
lea
jmp
pushf
pop
lea
call
pusha
imul
sub
pushf
test
add
pusha
lea
jmp
call
cmp
pusha
call
jno
mov
pusha
pushf
mov
mov
pusha
push
cwtl
movl
jmp
mov
vmovupd
ss
cmp
inc
out
push
int
and
mov
test
stos
push
or
pop
mov
lds
in
subb
or
aad
sbb
jp
and
mov
push
jmp
leave
lds
mov
nop
cmp
jp
or
jno
lcall
mov
je
jb
jo
rorl
into
or
inc
cmpb
lods
fimull
sub
adc
pop
xchg
xchg
cmp
mov
xor
add
leave
lock
out
xor
clc
movsl
push
add
ret
loope
les
shrb
sub
lret
int
adc
fisubrl
pop
addb
mov
xor
pop
mov
aad
jmp
push
push
inc
loopne
fmull
xchg
stos
lock
mov
adc
std
sub
push
push
pop
mov
dec
ds
jae
filds
or
pushf
xor
dec
insl
pop
gs
pop
sbb
xlat
xchg
dec
test
cmp
mov
xchg
int
movl
push
lea
jmp
call
lea
jl
not
call
push
call
not
jmp
pusha
lea
jb
test
stc
cmp
pusha
jmp
pushf
push
mov
bswap
not
movsbw
lea
call
lahf
ljmp
sub
jg
fimull
add
notl
sbb
xor
lea
test
lea
mov
adcb
popa
mov
mov
push
jns
sahf
fs
loopne
mov
sub
cs
cld
insb
shr
mov
sub
adc
and
adc
cmp
cmc
add
int
enter
scas
pop
shll
xchg
iret
or
cmpb
jnp
bound
pusha
movsbl
mov
push
pushf
pushf
lea
jmp
ror
mov
cmc
jmp
call
add
mov
jmp
pushl
popl
mov
push
pushl
ret
int3
popf
pushf
mov
call
lods
imull
in
push
mov
add
add
or
cmp
jno
enter
clc
test
test
pop
mov
dec
push
add
dec
into
xor
and
xor
lcall
push
pop
or
sarb
push
mov
jnp
push
popa
imul
mov
out
scas
mov
push
out
sbb
clc
rcrl
or
stos
sbb
stos
push
xor
sub
cli
xchg
sub
fbstp
test
out
push
cmpb
pop
mov
sbb
sbb
sbb
test
cli
dec
js
add
test
pop
sbb
dec
clc
aam
mov
inc
test
or
cmp
jl
jne
out
leavew
repnz
push
inc
outsl
sarl
cmp
pop
sub
add
ljmp
sbb
pusha
mov
dec
mov
inc
cmpb
mov
push
rorl
sub
mul
or
icebp
adc
sbb
jnp
push
add
xchg
push
mov
jge
push
insb
aad
test
insl
push
loope
xor
js
dec
stc
movsl
jge
test
sahf
pop
xor
pusha
sbb
sub
jo
dec
stos
stc
or
jl
pop
mov
or
cmp
ss
lock
or
scas
mov
imul
xor
mov
push
pop
or
adc
mov
xor
fs
sbb
jo
loop
pusha
negb
pop
sbb
cmp
jbe
pusha
add
call
push
lea
jae
clc
sub
call
mov
pushf
mov
pushf
lea
jmp
movl
push
movl
pusha
pusha
pushf
push
lea
jmp
and
movsl
dec
clc
and
std
lods
pop
add
mull
nop
pusha
out
cmp
out
les
sarb
add
imul
jl
ss
cmpsb
mov
int
outsb
fwait
ja
jecxz
pushf
pop
sbb
fsubs
sti
and
push
aas
fldt
inc
data16
mov
out
daa
jl
outsb
and
or
out
dec
jnp
cmc
pop
xchg
icebp
mov
jbe
pop
addr16
in
push
add
aaa
repnz
insl
sub
out
pop
lret
xor
add
jbe
dec
jl
push
add
int
mov
add
xor
xchg
jle
leave
movsb
rorl
xchg
stc
and
jmp
stos
stos
aam
xor
in
push
jnp
loop
push
xchg
aad
dec
or
add
aad
adc
inc
fsubrs
in
pop
push
xor
mov
mov
sbb
dec
jp
aas
or
dec
and
insl
aam
push
mov
imul
push
mov
add
adc
add
std
cmp
xor
lods
imul
sub
and
cmp
mov
push
clc
pushf
mov
cmp
clc
pusha
test
pushf
lea
je
stc
add
test
call
pusha
movl
push
lea
jmp
push
mov
lock
pusha
mov
inc
sti
std
push
mov
mov
mov
or
xor
inc
lock
dec
stc
mov
aas
hlt
mov
cmc
scas
imul
pop
mov
inc
add
mov
xor
je
ja
or
adc
rclb
rorb
daa
ficoml
push
or
aam
lock
mov
xchg
mov
fdivl
fdivrl
mov
mov
or
lods
adc
mov
push
shrl
enter
cmpps
call
arpl
in
xchg
push
adc
data16
in
sbb
stos
push
pop
xchg
adc
roll
sub
cmp
sbb
clc
and
daa
push
xchg
hlt
xor
xor
jo
mov
add
xlat
add
pop
xchg
push
bswap
push
inc
pop
adc
les
je
pushf
stc
movw
sub
cmp
mov
bt
cmc
cmp
pusha
jmp
notl
jns
rolb
stos
pop
pop
aaa
out
addr16
in
fsts
gs
sub
arpl
adc
outsb
das
mov
pop
lret
cld
in
rcr
std
mov
adc
aas
mov
lea
dec
les
jae
jb
test
and
adc
dec
je
cs
cmp
pop
add
fldl
daa
es
sbb
or
fcompl
inc
aas
jl
lret
aad
sub
imul
and
push
fldcw
idiv
pushf
movb
pushf
lea
je
call
movl
call
bt
bt
mov
xchg
sar
add
not
inc
shr
pusha
neg
mov
neg
ror
cmp
shl
add
movsbw
jmp
lea
jae
pushf
mov
inc
not
inc
inc
push
mov
mov
lea
push
mov
pushf
lea
call
call
lea
ja
cmc
call
pusha
pushl
popl
pusha
pushf
movb
pushl
ret
pusha
test
call
call
movzwl
rcl
dec
and
mov
push
add
jmp
lea
xchg
mov
pop
movzwl
bswap
lea
bswap
call
inc
movzbw
neg
call
lea
lea
jmp
pusha
call
cmp
jg
push
sub
add
pop
lcall
addb
cmpsl
cmp
imul
sahf
fistl
add
jnp
jl
and
scas
sarl
imul
mov
gs
or
cmp
in
sub
fidivrs
inc
fsubrs
in
mov
mov
push
mov
lea
jmp
call
inc
fstl
adc
ret
out
lcall
push
subb
sbbb
xchg
mov
lret
mov
adc
dec
mov
pop
push
popa
inc
lea
lcall
jo
insl
push
in
into
pop
pop
or
mov
int
mov
shrl
cmp
into
mov
add
xor
pop
pop
pushl
popl
pusha
mov
movzbl
setg
movl
mov
movsbw
movzbw
not
lea
pushf
jmp
mov
in
pop
jo
dec
ja
fucomi
fdivrl
jmp
jb
lods
out
add
into
xchg
mov
shr
int3
ja
int
and
divb
xchg
int
into
push
xor
outsb
mov
outsb
into
rorb
shll
mov
pushf
pop
xchg
push
lret
mov
cmpb
jb
out
aam
mov
test
aas
mov
mov
or
cli
fcos
pushl
ret
pusha
not
dec
inc
sub
sub
xchg
bsf
shr
mov
sbb
bt
mov
cmp
pushf
add
jp
push
push
mov
cmp
sub
pusha
pusha
movb
jmp
out
imul
adc
jmp
repz
cmpsb
push
imul
lea
cld
pop
inc
movsb
mov
popf
in
sub
cmp
xchg
inc
in
cltd
outsl
sub
mov
ret
push
and
cli
aam
mov
stos
pop
cwtl
sti
stos
test
cmpsl
push
in
sub
jne
int3
or
icebp
push
xchg
jl
cmc
popa
bswap
push
or
push
adc
sarb
insb
stos
in
ficomps
arpl
mov
xchg
dec
xor
loope
jmp
fs
jb
pusha
push
mov
pushf
pushl
ret
call
jmp
lea
jae
push
pusha
lea
jmp
mov
in
dec
sti
sub
add
fimuls
dec
insb
aad
es
and
test
mov
pop
mov
out
daa
sbb
pop
in
jns
pop
xor
mov
inc
fwait
pop
cmc
test
mov
mov
mov
xor
cmpsb
in
in
add
enter
cwtl
call
loopne
push
lds
cltd
je
xchg
mov
xchg
inc
repnz
or
rcrb
jns
lods
aam
mov
or
out
in
fistpl
rorb
cwtl
dec
mov
mov
lea
pop
mov
lea
jnp
push
pushf
pushf
lea
call
pushf
jmp
inc
loope
ljmp
test
popa
jecxz
cmp
dec
lea
push
dec
in
scas
dec
stc
push
dec
shlb
mov
pop
add
and
inc
or
sbb
rorb
enter
mov
adc
dec
cmc
pusha
mov
pushf
add
call
xchg
mov
pushf
xchg
mov
mov
pusha
pushf
mov
bswap
push
mov
pushf
pushf
movb
mov
jmp
test
bt
xor
push
lea
jae
inc
pushf
jmp
sbb
hlt
sub
shll
stos
xchg
sbb
hlt
cmp
stos
insl
sbb
hlt
popa
loope,pt
dec
inc
sbb
je
jge
or
jg
jne
mov
xchg
cmp
lret
sbb
hlt
cmp
popa
push
rcrl
sub
iret
call
gs
dec
je
aas
cmp
movsb
popa
sbb
je
cmp
out
push
sub
dec
je
cmp
jne
sbb
je
cmp
jne
push
sbb
je
cmp
push
pop
sbb
je
cmp
loopne
mov
dec
hlt
sarb
mov
pusha
sbb
hlt
fwait
cmp
lods
sub
insl
les
insl
repnz
hlt
or
xor
hlt
les
mov
xchg
mov
lods
xchg
dec
hlt
fnstsw
div
pusha
cwtl
sbb
je
cmp
pop
cmp
xchg
dec
je
cmp
lret
dec
je
fistl
rcrl
or
cmc
fs
arpl
dec
je
cmp
lcall
je
cmp
aas
and
hlt
xor
xchg
out
mov
xchg
dec
je
cmp
adcl
in
cmp
sbb
hlt
out
xchg
and
xchg
dec
je
cmp
push
outsl
xchg
dec
hlt
stc
cmp
push
lret
cmp
sub
sbb
hlt
add
js
mov
xchg
dec
hlt
push
cmp
gs
xchg
dec
je
aas
adc
movsl
sbb
hlt
in
cmp
add
test
clc
push
jp
sbb
je
cmp
js
negb
hlt
out
pop
dec
jg
fwait
mov
cmp
sbb
sbb
hlt
out
xchg
out
xchg
aas
sbb
je
cmp
pushf
and
mov
bt
jmp
pushf
pusha
call
notl
jns
push
xorb
mov
dec
ljmp
in
and
test
push
into
js
aam
pop
out
jge
vmovmskps
add
cld
and
push
jg
jb
repnz
arpl
xlat
iret
xor
and
mov
out
mov
lret
mov
shlb
aad
mov
cmp
faddl
xor
sbb
test
adc
clc
cmc
jno
mov
dec
sahf
enter
leave
add
cld
mov
jmp
out
sahf
xor
pushf
pop
out
add
pushf
pop
mov
mov
lea
push
mov
setae
pusha
lods
test
pushf
pushf
neg
cmp
pushf
add
stc
bt
mov
ror
movb
not
jmp
push
mov
and
push
subl
dec
outsb
popf
stc
inc
cmc
scas
push
cmp
dec
push
add
sbb
jl
xchg
ss
and
inc
push
jl
jno
jae
mov
mov
mov
call
iret
clc
mov
aad
cmp
movsb
rcll
inc
mov
and
jecxz
fbstp
fcomps
or
or
call
mov
stos
icebp
test
daa
xor
aad
mov
mov
fimuls
xor
testb
bound
jae,pn
sbb
pop
lods
add
lea
fstpl
push
adc
int3
mov
arpl
repz
jno
aad
jle
lea
je
cmp
cmp
jmp
pushl
movl
jmp
bt
test
test
sub
cmp
pushf
cmp
pusha
lea
jae
push
pushf
pushf
mov
lea
jmp
shl
sbb
rol
mov
stc
call
test
xchg
neg
rcl
sub
mov
jmp
lea
jne
btr
xor
rol
movzbl
add
mov
inc
add
sbb
mov
clc
clc
cmc
pusha
test
mov
lea
je
pushf
cmc
clc
pushf
sub
stc
cmp
call
jmp
lea
call
call
mov
mov
lea
ja
jmp
movb
mov
not
pusha
pushf
pushf
mov
dec
cmc
test
cmp
cmc
shr
jmp
lea
pusha
pushl
movl
pusha
pushl
popl
push
push
pushf
pushl
ret
pushfw
popw
inc
pusha
mov
push
pushf
jmp
jge
mov
adc
int
test
jg
fisttpll
testb
call
addb
and
mull
jnp
imul
mov
loop
and
sub
repnz
bound
cwtl
inc
fnstsw
and
lds
dec
lods
pop
pop
lds
jbe
outsb
sub
pop
pop
fidivl
xchg
pop
icebp
add
adc
adc
push
add
adc
inc
add
add
add
add
test
add
add
add
cmp
adc
stos
fadds
xchg
aas
ljmp
cmp
push
enter
cmp
add
rcl
sbb
jno
pop
jp
add
push
xorl
outsb
incb
daa
jg
pop
add
mov
push
jbe
push
lea
inc
push
ja
inc
repnz
ja
in
fistl
push
xchg
dec
or
cmp
jae
mov
mov
xor
pushf
clc
pushl
repnz
movb
push
pushl
lea
jmp
movw
movl
push
jmp
lea
jbe
shr
mov
cmp
btr
add
rcl
push
mov
bts
not
sub
bts
add
shl
movl
setbe
lea
mov
add
cmp
test
cmp
pushf
pushf
pusha
lea
jbe
xor
sub
inc
mov
test
mov
add
lea
call
jmp
mov
test
cmp
push
pushf
pusha
lea
jae
xor
mov
xor
mov
sub
shld
movsbw
inc
mov
pusha
pusha
jmp
mov
call
pushf
mov
lea
je
movzbl
pusha
pusha
mov
not
cwtl
lea
call
xchg
sar
or
mov
xchg
add
cmc
shr
clc
not
push
or
mov
clc
shr
bswap
bsf
add
call
jmp
popf
std
jb
adc
jecxz
mov
xchg
movb
fwait
dec
out
insb
mov
dec
clc
xchg
mov
sbb
sbb
insl
sbb
and
and
rcr
movsb
fs
idiv
inc
nop
fistl
loopne
cmp
in
push
pop
rclb
cmp
xor
lods
out
stc
cmp
mov
clc
decl
stos
sti
stc
mov
pusha
cmc
cmpb
pusha
push
call
push
push
dec
push
cmp
shl
pusha
seto
call
jmp
lea
jmp
movsbl
movzbw
movl
cwtl
pusha
jmp
pushf
not
pushl
popl
pushf
cwtl
mov
bswap
movl
call
lea
je
movzbw
jmp
add
inc
pusha
sbb
shr
sub
bt
shr
adc
dec
shl
mov
sub
or
add
movsbw
cmp
add
lea
push
inc
mov
mov
call
pushf
push
lea
call
call
movl
lahf
movsbw
lea
call
les
fists
in
jae
sarb
aad
das
fadds
das
pop
or
test
add
aas
xchg
jge
and
jecxz
push
mov
xor
dec
xor
cmp
popf
pop
fwait
push
xchg
rorl
pop
pop
sbb
cmp
mov
leave
loopne,pt
in
faddl
mov
mov
bound
cmp
xchg
inc
ljmp
sbb
mov
mov
mov
jae
cmp
hlt
stc
jp
adc
imulb
jmp
adc
and
dec
sbb
lcall
test
pusha
pusha
pushl
pushf
lea
jmp
lea
jne
cwtl
movsbw
mov
pusha
pushf
mov
lea
jmp
shl
jns
mov
fcmovne
out
pop
mov
push
gs
imul
cs
hlt
vpaddusb
and
addl
enter
jp
lea
das
cmp
stos
and
cmp
push
sub
add
cwtl
sub
lahf
subb
lret
push
mov
jo
iret
ds
ljmp
enter
inc
pop
ficomps
or
pop
or
orb
lods
fadd
add
imul
pop
cwtl
fcmovnb
sbb
clc
adc
pop
addl
jge
or
out
mull
out
push
jmp
rorb
test
lret
xchg
imul
mov
push
aas
pop
adc
imul
mov
fbstp
or
in
push
test
fmull
ljmp
pop
jge
imul
push
add
dec
xor
in
test
add
scas
fwait
enter
ficompl
cli
bound
scas
fldl2e
aam
dec
and
mov
notl
or
addr16
enter
push
cmpsl
cmp
mov
call
adc
mov
xor
int3
cmp
fmul
adc
rolb
imul
fistpl
lock
inc
test
mov
jne
rcrb
mov
push
clc
loop
push
mov
lea
ljmp
inc
loop
mov
ficomps
imul
mov
iret
cmpsl
cld
adc
loop
sub
das
cmp
ja
pop
daa
xor
mov
cwtl
mov
imul
xor
ffreep
fcoms
leave
fstp
xchg
pop
cmp
mov
and
adc
aam
sbb
or
add
imul
inc
jl
add
sarb
test
dec
sbb
cld
insb
shll
fwait
mov
jbe
pusha
mov
test
bound
xchg
ror
sub
fnstenv
mov
xor
push
in
enter
inc
lea
es
jmp
mov
pop
dec
rcl
dec
add
xchg
nop
push
or
in
jno
sahf
loop
dec
js
jb
lret
cmp
xchg
ds
popa
xchg
stc
push
mul
dec
push
fldl
xchg
inc
dec
data16
loope
clc
aam
cmc
es
enter
xchg
lret
mov
mov
adcl
and
popa
cli
scas
mov
adc
inc
push
test
popa
pop
pop
jmp
shl
and
push
push
icebp
sbb
aam
mov
inc
lock
out
ffreep
sbb
push
int3
mov
test
das
xchg
loop
in
xchg
aad
xchg
ror
cmp
leave
sub
dec
fstp
lds
in
inc
mov
hlt
mov
dec
mov
addr16
test
out
xor
rorl
lcall
sbb
mov
sti
xchg
dec
mov
insl
in
push
mov
sub
push
nop
and
mov
mov
lret
xchg
aam
dec
fwait
iret
orl
cmpsl
mov
loope
sbb
pop
enter
dec
out
lds
jb
lods
insl
jo
movsl
jb
mov
imul
push
outsb
enter
roll
jns
xchg
inc
inc
mov
push
lea
dec
cbtw
jle
pop
cmpsb
sub
pop
adc
fisubs
aam
push
jae
cli
outsb
inc
xor
cmc
ds
sbb
test
inc
mov
mov
test
mov
pop
cmc
xor
push
rol
insb
leave
addr16
in
or
sub
xlat
stos
into
imul
call
jno
pop
test
jle
xchg
pop
pop
movsb
nop
sub
fmul
push
shrb
xchg
sub
aad
testb
push
out
or
inc
cmp
xor
and
inc
addr16
adc
loope
dec
faddl
pop
aas
add
test
insb
xor
xor
mov
lret
ss
adc
js
lcall
or
push
ret
test
dec
fidivrs
mov
push
fwait
mov
ljmp
add
pop
dec
sub
lods
dec
add
and
add
js
cld
or
push
movb
popf
flds
clc
dec
cli
mov
cld
mov
cltd
adc
pusha
or
std
out
mov
jge
sub
dec
lahf
lret
movl
xchg
lret
pusha
xchg
sti
pop
mov
xor
sbb
jo
add
inc
xchg
int3
pop
pop
xchg
or
ffree
pop
jne
mov
cmp
mul
shll
push
test
imull
dec
vshufps
out
sub
popf
aam
inc
fisubrs
or
mov
enter
and
cmp
dec
mov
scas
or
mov
gs
sbb
leave
ficompl
pop
cwtl
xchg
push
jo
mov
mov
fdivrs
pop
popa
shll
inc
sub
stos
dec
js
xlat
bound
pop
cmpsb
pop
cs
lea
xchg
xchg
out
cld
ja
ja
shlb
mov
gs
mov
lock
adc
xor
sbb
cwtl
lock
mov
dec
rolb
cld
fildll
lcall
dec
gs
adc
int
loop
xor
adc
decb
imul
and
pop
movsb
jns
shlb
inc
scas
dec
out
aaa
call
mov
mov
cmpsb
stos
js
aas
push
cwtl
lret
inc
getsec
xchg
ficoml
fsubrs
aaa
lds
mov
mov
xchg
xor
mov
inc
cmpsl
pop
aas
arpl
jo
sub
clc
cmp
sti
sbb
and
xor
mov
inc
scas
out
mov
push
repnz
pop
xchg
clc
mov
mov
mov
mov
out
shll
subb
mov
sub
jmp
xchg
pop
pop
push
les
xchg
cmp
in
push
lret
jb,pt
sbb
sub
fisubs
lahf
xchg
mov
sbb
pop
jmp
and
bound
jecxz
lock
lock
mov
pop
fsubrl
and
adc
cwtl
fwait
sbb
cmpsb
shl
xchg
cltd
and
mov
or
mov
fdivrl
cltd
into
ljmp
shl
inc
add
leave
or
out
jne
imul
daa
fmuls
mov
lahf
das
fcoml
out
js
cmp
add
push
mov
jge
add
push
sub
cwtl
fptan
mov
cmp
stos
inc
cltd
xchg
fsub
mov
out
shrl
mov
jns
test
mov
imul
insl
ljmp
leave
mov
imul
aam
sbb
push
inc
gs
sub
loopne
lea
dec
andl
jmp
sub
pop
bound
mov
cmp
filds
sub
sub
add
cmp
sbb
and
std
lret
add
sahf
cmp
sbb
mov
std
imul
mov
mov
push
leave
popf
shlb
sub
jmp
pop
mov
cmpsb
or
test
stos
jp
sub
imul
pop
js
subb
pop
jb
call
rorb
dec
idivb
imulb
in
in
test
fisttps
and
pop
cmpsl
fdivl
jmp
repnz
test
fidivs
mov
mov
sub
lock
nop
imul
cltd
mov
mov
lahf
adc
out
jg
enter
sbb
xchg
push
sub
mov
mov
sahf
outsl
lcall
pop
hlt
vaddsubpd
jno
pop
addb
lret
out
fdivs
jo
or
imul
js
ret
inc
xchg
in
mov
in
mov
or
adc
and
mov
mov
and
nop
cmp
insb
xchg
mov
mul
or
jbe
hlt
or
push
imul
mov
or
loop
mov
mov
mov
cmp
dec
insb
xchg
pusha
fwait
insb
mov
call
bound
rorb
les
inc
das
xchg
sbb
dec
sbb
leave
cmpsl
rolb
mov
fld1
lds
adc
out
pop
pop
ljmp
imul
incl
push
push
jge
adc
or
add
out
movsb
adc
xor
out
dec
bnd
lock
mov
or
int3
rclb
lret
fwait
clc
push
ss
pop
xor
in
sub
mov
inc
negb
in
call
ffreep
rcrb
lea
aas
gs
shrb
lock
rcr
cmpsl
mov
jne
aad
add
xlat
mov
std
push
cmpsb
divl
pop
add
fisttps
test
add
pop
cwtl
in
sbb
sub
pop
xor
popf
mov
jp
cmp
adc
pushf
loopne
mov
xchg
dec
out
fdiv
call
push
cmpsl
jge
idivl
pop
int3
gs
nop
pop
cmp
movsb
push
mov
push
sbb
imul
out
xor
ja
inc
arpl
sub
call
or
jae
sbb
dec
push
inc
clc
mov
lcall
out
nop
sbb
xor
imul
mov
clc
and
and
cld
fdivl
insl
imul
stos
dec
fsubr
call
mov
cmp
pop
push
jmp
and
clc
cmp
gs
popa
in
lret
sub
and
add
and
scas
fistl
and
daa
xchg
js
or
aad
sub
test
mov
sbb
popa
in
insl
std
inc
lds
in
lods
out
mov
ljmp
in
fimull
jp
out
cmpsl
sbb
lds
imul
mov
sbb
int
out
mov
ret
testl
js
pop
pop
inc
mov
clc
mov
dec
in
cmp
xchg
adc
lds
addr16
in
hlt
pop
stos
cmp
mov
xchg
imul
testl
sub
mov
or
pop
iret
pusha
push
pop
pop
xlat
push
mov
adc
xlat
test
sbb
xchg
aaa
push
int3
dec
shlb
adc
nop
cmpsb
fsubs
xchg
repz
mov
inc
addr16
out
pop
iret
push
testl
in
xchg
aas
js
mov
fldl2t
xchg
fcmovnu
xchg
sbb
fdiv
or
jg
int
and
push
push
xchg
iret
inc
lret
stos
mov
addr16
sti
ror
and
push
lds
fldenv
mov
dec
orl
and
xchg
dec
test
gs
loope
inc
mov
popf
pminsw
les
out
hlt
dec
scas
test
mov
fisubl
popf
loop
push
test
stos
mov
sbb
cmp
fnstcw
or
xor
cltd
push
push
mov
rcrb
in
daa
and
mov
sbb
iret
insb
aad
dec
or
sbb
pop
iret
imul
leave
sbb
jb
sti
ret
out
cmpsl
push
dec
clc
pop
loope
dec
aaa
and
repz
dec
dec
sbb
inc
pop
xchg
push
shl
jns,pn
push
jnp
js
imull
xchg
jbe
push
jno
fisubrl
mov
ljmp
xchg
aam
jne
iret
ja
out
aam
add
jmp
push
das
push
cmpsb
xchg
shr
mov
inc
jmp
cmp
data16
xchg
pop
mov
mov
or
or
xchg
fdiv
add
mov
inc
repz
repz
sub
in
and
hlt
repnz
in
push
cmp
push
pop
push
pavgb
out
lcall
or
adc
test
and
outsl
lret
andb
pop
dec
fs
in
dec
dec
inc
add
loopne
aad
rorb
out
xchg
int3
mov
jg
jnp
inc
and
mov
inc
or
sbb
std
fisubrl
std
rcll
cmp
nop
jge
pop
lsl
fcompl
inc
lahf
bound
push
fs
inc
dec
loopne
push
sbb
dec
xor
cs
jnp
push
cwtl
mov
int3
xchg
ljmp
sub
pop
xchg
inc
finit
adc
fsubrs
outsb
add
xor
out
jno
lret
fldcw
inc
sbb
add
sarb
sbb
mov
mov
xchg
int
cmp
mov
scas
dec
cmpsl
into
das
in
push
mov
jmp
xchg
ja
call
rcrl
imul
adc
rclb
test
outsb
enter
add
dec
in
jno
aaa
add
pop
addr16
movsb
jbe
das
int3
lahf
gs
push
test
cwtl
mov
and
bound
sti
mov
outsl
sub
inc
repz
dec
or
ror
mov
cmpsl
cmp
aaa
stc
into
clc
lcall
gs
push
and
in
in
aad
in
test
ret
inc
dec
or
and
in
sbb
mov
fwait
leave
outsl
imul
or
add
sub
sbb
adc
ja
xchg
xlat
add
push
add
or
subl
sahf
inc
pop
xchg
adc
push
fimull
jge
das
test
pop
and
test
fdiv
enter
ljmp
jns
or
mov
int3
pop
dec
dec
ss
fsubs
lret
ljmp
insl
adc
hlt
mov
popf
cmp
test
jo
decl
test
xchg
dec
addl
inc
insl
dec
in
or
in
loop
sub
movsl
add
fdivs
insl
cmp
dec
sub
sbb
xchg
cmp
lds
lret
test
fwait
adcb
gs
mov
call
adc
inc
loope
cmpsl
pop
cmpsb
cmpsb
dec
xchg
jmp
int
call
dec
movb
push
xor
inc
dec
or
into
es
push
imul
pcmpeqw
pop
popf
pop
push
sti
xor
add
mov
loopne
push
cmp
test
dec
sbb
push
add
cld
js
popa
mov
dec
sub
nop
gs
ss
ljmp
add
enter
addr16
fadds
mov
sub
xchg
jmp
imul
test
inc
stos
out
out
push
push
mov
fadd
in
mov
jp
push
mov
mov
gs
insl
stos
cmp
jo
sti
stc
and
or
jmp
movsb
pop
jo
fsubs
dec
pop
mov
test
shl
adc
movsl
mov
push
push
jmp
test
push
or
mov
call
test
setbe
mov
mov
in
int3
xchg
loopne
or
cwtl
in
cli
enter
gs
lds
mov
pop
fcmovnb
enter
xor
cmp
push
mov
xchg
push
ljmp
jnp
jmp
dec
jo
adc
fisubl
ja
leave
out
xorb
sbb
jne
or
adc
pop
cmpsb
adc
mov
scas
adc
dec
mov
outsl
rorb
in
orl
imul
pusha
out
fs
jecxz
push
test
jmp
xor
gs
ds
inc
lds
mov
jge
jmp
mov
sub
xchg
out
test
outsl
aaa
ret
test
cld
daa
mov
ds
testl
pop
and
in
iret
xor
faddl
sub
sub
setno
sbb
xlat
sbb
imul
lret
daa
js
inc
mov
daa
in
gs
repnz
add
mov
loop
inc
aam
fsubl
shl
xor
and
mov
fstps
and
lret
adc
dec
inc
stos
lds
push
insb
xchg
push
push
cmp
jo
adc
test
mov
mov
addr16
sbb
repz
cltd
inc
fstpt
mov
mov
mull
cmp
inc
pop
pop
mov
fidivrl
xlat
add
xchg
jmp
cmpsl
cltd
lea
or
insl
sbb
jge
imul
mov
add
les
cmpsl
cli
int3
jle
sbb
xchg
rcr
ljmp
mov
fs
in
and
data16
lret
pop
ret
insb
in
enter
sub
or
pop
mov
mov
sbb
addr16
lods
outsl
stos
popa
int3
sahf
inc
sahf
mov
dec
mov
in
pop
dec
mov
pop
addr16
mov
data16
cmp
mov
pop
xor
cwtl
add
or
sub
mulb
movsl
adc
loopne
or
adc
add
or
mov
ds
push
mov
push
and
out
sub
mov
xchg
and
addr16
fidivrs
xchg
lret
test
test
repz
daa
or
and
shrb
xchg
mov
ljmp
xchg
mov
xlat
bound
adc
dec
addr16
jge
mov
nop
add
fsubrl
outsb
rolb
xchg
out
cmp
imul
insl
xlat
addr16
mov
cli
xchg
mov
icebp
dec
add
clc
inc
gs
push
xchg
cmp
in
sahf
pop
sub
fsqrt
clc
lcall
test
imul
aam
int
js
and
and
sbb
insb
xchg
push
test
add
imul
fs
sbb
jecxz
arpl
ss
jae
mov
xchg
pushf
push
test
loop
and
test
pop
inc
dec
ss
cmc
fiadds
test
fidivl
mov
dec
mov
jbe
mov
bound
cmp
sbb
sbb
scas
push
mov
fisubrs
and
sbb
dec
inc
sbb
or
imul
iret
movsl
scas
mov
out
lods
lcall
in
xchg
vpmadcsswd
dec
or
push
call
mov
outsl
into
xchg
cmp
fimuls
and
outsl
sbb
ljmp
mov
xor
cmpsb
and
or
mov
rclb
mov
in
fistps
cmp
sub
data16
insb
mov
pop
xchg
cmpsl
out
sub
fsub
xor
inc
mov
xchg
sbb
pop
xchg
pushf
dec
and
pop
inc
and
pop
dec
sub
sub
imul
hlt
mov
out
dec
inc
addr16
pop
sahf
mov
or
nop
dec
iret
xchg
mov
mov
jne
fstpt
popa
jmp
repz
orl
roll
adc
xchg
push
es
mov
inc
into
in
pop
dec
imul
mov
cmc
scas
mov
insb
push
or
mov
data16
dec
ficompl
sub
adc
sbb
push
shrl
mov
into
mov
cmp
jl
add
inc
cmpsl
movsl
lock
dec
cli
pusha
pop
xor
cmp
orl
imul
fs
sub
clc
fwait
insb
icebp
push
cmp
xchg
xlat
xchg
mov
stos
dec
inc
in
shr
shrl
cmp
leave
dec
fdivs
pop
mov
icebp
xchg
out
jmp
rcrb
push
fs
rep
into
add
insb
push
out
fsubs
xor
jne
or
pop
int
or
std
sbb
imul
loop
inc
sar
jns
scas
or
add
loope
lret
push
jns
pop
sub
cmp
aas
cmovs
jmp
xchg
data16
and
sarl
repnz
mov
mov
lret
cmp
mulb
lcall
adcl
addr16
mov
jnp
mov
cs
test
ljmp
jle
mov
lcall
or
and
fnstsw
mov
in
stc
sbb
mov
loopne
aad
fxch
sarb
sub
pop
movnti
test
mov
or
lea
pop
imul
xchg
xchg
test
xchg
and
adc
or
aaa
dec
rorb
call
sahf
adc
inc
out
pop
into
mov
mov
inc
mov
scas
xchg
popf
cmc
addr16
in
gs
loopne
jne
dec
lods
orl
inc
and
fadds
adc
in
sarb
imul
loopne
cmp
and
shlb
jmp
sbb
push
scas
lret
inc
cmp
mov
bound
mov
lahf
dec
push
lea
gs
mov
cwtl
push
push
xorb
lds
bound
or
mov
push
cmpsb
mov
xchg
ret
ljmp
or
shr
iret
xchg
hlt
mov
dec
fcmove
or
leave
adc
or
call
in
push
out
lret
mov
push
pop
insb
xor
lods
or
insl
dec
out
inc
inc
pop
and
jo
mov
cmpsl
mov
mov
xchg
xor
loope
dec
fsubl
out
dec
lock
rcrb
mov
sub
inc
icebp
add
gs
cwtl
adc
in
xchg
out
mov
shrb
cmp
xor
stos
std
sbb
popf
sbb
shufps
mov
fmuls
fwait
cmp
mov
mov
imul
sub
lret
cld
dec
or
call
in
mov
and
sub
lret
push
push
mov
add
or
imul
pop
lcall
inc
cli
push
mov
rol
xchg
jmp
mov
scas
push
push
push
xchg
clc
out
movsb
outsb
movsb
mov
stc
sahf
int3
cwtl
cwtl
mov
in
mov
jp
fidivl
in
addr16
aad
push
stc
imul
xor
mov
insb
jbe
test
mov
adc
jp
lods
cmpsb
or
inc
pop
rclb
cmp
test
int
leave
mov
mov
scas
shrd
ja
lock
xchg
mov
and
push
push
mov
fld
jne
in
mov
iret
mov
test
pushf
dec
cmc
inc
ljmp
dec
loop
test
sbb
daa
pop
dec
mov
sbb
pop
cmp
mov
mov
imul
cmpl
mov
fsubp
mov
dec
xchg
inc
xchg
jecxz
and
add
lea
sbb
xchg
loopne
clc
lret
inc
aam
dec
imul
pop
lods
jns
xor
jbe
fiaddl
cmp
and
nop
lret
movsl
lods
nop
lcall
xchg
sub
jno
out
ss
nop
jb
sbb
push
xchg
add
push
insl
arpl
test
push
mov
pusha
aad
cmpl
and
add
push
jg
inc
jl
jmp
push
testb
or
mov
jmp
cmp
fldl
fsubrs
js
mov
inc
push
lret
aaa
stc
test
cmpsb
push
data16
xchg
lods
rolb
add
or
test
jo
out
sub
mov
pusha
fadds
in
mov
adcl
cmpb
push
xor
loopne
sub
push
ja
cmp
out
nop
js
movntps
pop
sub
imul
imul
xchg
jl
sbb
cli
fsubs
xchg
cmp
sahf
push
adc
gs
movsl
imul
popa
adc
mov
test
pop
adc
mov
xchg
addr16
mov
repz
mov
fimull
dec
pop
xchg
fisttpl
pop
fucomi
rorb
cwtl
xor
decl
sbb
xor
dec
mov
in
add
aas
call
int
mov
sbb
psubb
inc
shl
pop
mov
jg
into
and
ret
repz
add
jmp
mov
adcl
jecxz
jae
xchg
lret
int3
fcompl
addr16
cwtl
inc
push
mov
dec
push
sahf
sub
out
mov
icebp
orb
js
dec
in
sub
dec
iret
mov
pop
int3
pop
sbb
mov
lret
cltd
jo
fsubrs
gs
dec
mov
hlt
mov
icebp
dec
inc
sbb
mov
movsb
lret
mov
dec
dec
adc
jg
jo
fsubrl
hlt
xor
mov
sbb
leave
loop
fdivrp
sub
popf
movsb
fbstp
push
pop
adc
and
jbe
push
cmpsl
cmp
dec
inc
iret
dec
push
add
jmp
test
jno
dec
mov
pop
push
mov
sbb
inc
jnp
sti
xchg
sbb
int
ljmp
lea
cwtl
dec
inc
xchg
mov
sub
mov
aas
xchg
aaa
ret
or
sbb
inc
add
push
push
pop
rcrl
jns
icebp
xchg
loopne
insl
jae
ja
cmp
sub
lret
clc
sub
pop
sub
insl
lcall
pop
push
jb
scas
rcll
jno
xchg
dec
outsl
mov
ss
sub
cmp
sub
lcall
dec
mov
movsb
push
sahf
fstps
jmp
call
repz
sbb
pushl
jl
push
lea
outsb
or
sub
int3
jge
jb
pop
retw
push
lahf
jo
dec
imul
inc
addr16
sub
pop
adc
bound
mov
xchg
mov
hlt
mov
inc
out
divb
movsb
gs
lods
fsubp
adc
in
jmp
ja
and
test
stc
lds
mov
sub
and
and
inc
loopne
hlt
fcompl
cmc
cmp
gs
mov
sbb
fisubs
inc
or
push
pop
sbb
outsl
mov
roll
xchg
add
repz
mov
inc
out
addr16
push
mov
arpl
shlb
add
xor
pop
push
dec
jecxz
aas
arpl
gs
or
push
ja
nop
and
cld
push
arpl
inc
or
addr16
into
in
xchg
gs
mov
enter
ljmp
mov
movsb
fwait
push
mov
clc
lret
push
arpl
int
es
shlb
add
and
pop
shrb
push
mov
jb
test
test
adc
mov
push
xchg
lret
inc
cwtl
fiaddl
imul
adc
jo
push
cs
mov
xchg
lret
sbb
jnp
push
xchg
ljmp
pop
sbb
mov
jg
cld
in
shr
pop
mov
mov
fmul
pop
cmc
and
lock
sub
mov
lret
js
imul
inc
fcmove
xchg
and
test
ljmp
fsub
or
out
pop
movl
sbb
jno
dec
shrb
in
fwait
lods
sub
ret
sbb
sub
or
lds
cmp
shll
fwait
mov
inc
push
add
mov
or
in
inc
and
movsl
inc
sbb
mov
out
jge
cli
pop
test
bound
pusha
and
stos
in
and
sbb
daa
push
mov
xor
lret
fdivl
xor
jle
lret
jp
pop
mov
imul
sti
cmp
xor
jbe
mov
test
repnz
inc
xchg
outsl
xchg
pop
inc
sahf
pop
iret
outsl
lahf
mov
test
rcrb
mov
stos
lret
lret
lcall
or
xchg
lcall
sbb
fistpll
fistl
pusha
mov
mov
and
int3
out
mov
cmp
dec
dec
lret
inc
ljmp
add
ror
aad
xchg
roll
flds
jns
ljmp
pop
xchg
enter
cltd
mov
jne
push
sub
repz
fwait
mov
adc
nop
js
cmpl
xchg
and
push
mov
cli
push
out
xor
gs
sub
out
mov
lret
insb
lds
insl
jl
nop
pop
fmull
mov
mov
lods
or
syscall
sbbb
scas
movsl
xchg
xor
push
inc
in
jbe
sarb
sub
sbb
adc
test
decl
push
adcl
jg
in
jmp
enter
js
cmc
imul
negl
bound
stos
pop
or
sahf
nop
imul
mull
addl
adc
add
mov
ret
cmp
pop
cld
icebp
rolb
inc
or
jns,pt
gs
mov
add
lods
mov
inc
into
out
dec
and
cli
js
fisubrl
std
clc
lcall
sub
pop
ljmp
cltd
xchg
jo
xor
sub
gs
adc
mov
stos
push
jp
sbb
sub
inc
enter
mov
cmp
xchg
enter
jmp
scas
test
jecxz
loop
mov
cmpsb
out
repnz
stc
stos
imul
andb
shrb
test
insl
push
divps
cs
lea
and
leave
gs
sbb
push
push
lock
das
cmp
out
cmpsb
test
mov
shl
xor
dec
xchg
sub
xor
xlat
fwait
dec
and
jmp
sub
insb
inc
imull
js
aad
adc
nop
ljmp
push
xlat
arpl
sub
sbb
fwait
pop
popa
xchg
dec
lock
shr
inc
push
in
out
or
and
sbb
adcb
insl
shll
out
sub
iret
xor
inc
out
push
in
mov
sbb
push
sub
lds
jbe
lods
add
pop
mov
out
ror
or
enter
mov
ss
xor
loope
gs
jmp
and
test
fidivrl
xlat
xchg
lret
and
rcrb
dec
stc
hlt
aad
out
testl
mov
mov
out
mov
cltd
out
xlat
cmp
ficoms
pop
out
and
aaa
imul
or
pop
ja
out
iret
mov
push
pop
lret
jae
ret
push
jns
dec
imulb
mov
fsubrs
pop
outsb
push
mov
jns
xchg
cmpb
adc
fucompp
mov
out
jbe
xor
gs
pop
jmp
sarb
fsub
imul
mulb
ja
incb
jl
sahf
push
mov
add
push
rorl
enter
sub
mov
sbb
cmp
mov
jl
fsubrs
or
data16
js
outsl
or
mov
push
xchg
dec
scas
inc
push
mov
pop
push
in
xchg
pop
scas
movsb
out
add
leave
sbb
xchg
push
jmp
fidivl
addr16
je
sbb
iret
out
arpl
insb
and
sub
sub
dec
je
add
cmp
jecxz
lahf
gs
cmpsl
xor
sub
call
push
fdivrs
arpl
imul
or
rcrb
pop
cmp
add
in
scas
cmpsl
adc
test
sub
xchg
cld
icebp
inc
push
movsl
adc
xchg
fs
shlb
cltd
add
in
inc
inc
xchg
sbb
mov
out
sbb
flds
imul
or
test
adc
lea
std
imul
outsl
xchg
push
fbld
mov
sbb
pushf
jo
divb
stc
int3
dec
enter
xor
ss
fstps
cwtl
insl
inc
jge
inc
addr16
je
test
fistpll
gs
push
inc
push
pop
subl
adc
imul
gs
jp
rorl
call
sti
adc
out
sbb
dec
xchg
xor
js
mov
movsb
and
mov
insb
dec
or
xor
mov
movsb
js
inc
xchg
fiadds
mov
fsubr
and
pop
daa
rcl
gs
lret
and
inc
test
or
daa
loopw
lods
xchg
sar
fsubrs
or
aaa
xchg
mov
mov
stos
pop
add
and
into
pop
gs
test
push
push
repnz
mov
shlb
cld
cwtl
xor
hlt
adc
push
push
icebp
stos
jecxz
hlt
mov
inc
push
dec
mov
mov
dec
adc
fs
pop
daa
cwtl
xchg
sahf
jb
lods
into
outsb
jg
and
cwtl
inc
inc
jnp
push
mov
in
mov
dec
push
scas
repz
or
xchg
int3
out
or
sub
sub
and
mov
repz
cmp
out
adc
popf
movsl
push
adcb
std
xchg
jl
jbe
pusha
pop
inc
out
imul
dec
jnp
incl
inc
pop
push
and
lcall
dec
rolb
sub
pop
rorl
hlt
mov
mov
jecxz
test
into
mov
sub
popf
scas
jmp
pop
cld
shrl
mov
inc
fimull
mov
idivb
data16
and
push
xchg
mov
inc
out
xor
xchg
imulb
and
ss
xor
aam
mov
push
incl
fistpl
mov
lock
inc
pop
jp
fildll
xchg
out
decb
ret
xchg
jmp
xor
lret
or
and
call
rcl
jne
test
xorl
adc
addr16
fdivl
xor
movsl
inc
xor
mov
insl
pushf
in
into
push
xchg
lcall
js
hlt
lcall
addr16
sbb
inc
sqrtps
xchg
xorb
ja
ds
in
mov
cmc
mov
leave
jl
pop
and
mov
push
xchg
xchg
cmp
ss
addr16
mov
repnz
loopne
insb
lds
and
mov
subb
int3
scas
sub
dec
jo
fldcw
pop
icebp
leave
inc
jg
popa
or
fidivl
pop
sub
push
and
js
dec
inc
jne
lods
aam
les
in
in
sub
push
call
sub
xor
xchg
ljmp
int
mov
xlat
bound
in
mov
sub
daa
inc
mov
sub
mov
xlat
inc
sub
imul
lret
mov
ljmp
lods
jg
sub
xchg
sbb
imul
in
mov
cmp
pop
fsubs
lret
cmpsb
jbe
or
test
call
dec
lods
imulb
lods
xchg
dec
push
popa
in
ljmp
jmp
dec
and
lds
or
xchg
mov
inc
inc
nop
call
cwtl
or
popf
fmull
mov
mulb
and
dec
rep
lret
pop
mov
stc
sub
fs
cmc
xchg
jle
mov
xchg
call
xchg
ret
push
jb
int3
out
pushf
int3
push
jle
mov
fstps
fisubl
mov
fdivp
imul
out
inc
sbb
mov
jno
jb
cmp
les
jp
scas
shr
gs
inc
xchg
jp
dec
pop
push
iret
idivb
fcmovnbe
push
testl
or
imul
and
or
js
inc
lret
mov
xlat
insb
aas
out
lods
or
and
cld
bswap
xchg
sub
mov
mov
pusha
jmp
jle
stc
enter
mull
sbb
mov
jae
or
leave
mov
int
xchg
xor
lea
call
fs
movsb
xchg
fprem1
push
jl
xor
fildll
fsubp
inc
xlat
jne
dec
xchg
dec
jp
jl
pop
add
fcoms
cwtl
push
mov
loope
and
insl
mov
test
pushf
pushf
incl
xchg
filds
stos
cmp
lahf
adc
mov
cwtl
rorl
sub
add
xchg
jo
sbb
repz
ss
pop
push
fildll
ljmp
mov
imul
loopne
jo
jns
and
adc
adc
roll
inc
test
mov
scas
push
aad
adc
sbb
fwait
add
jbe
jmp
loop
rcrb
in
xchg
nop
inc
xchg
ret
out
inc
pop
add
or
cmp
or
or
jb
lods
fs
movsl
sbb
pop
sbb
ljmp
pop
mov
sub
jmp
and
stc
fimull
mov
aaa
adc
clc
addr16
test
mov
repnz
in
jmp
std
stos
shl
xchg
xor
inc
jmp
push
clc
movl
cmp
mov
push
or
xor
subb
mov
sbbb
popf
push
jae
add
addr16
jg
xchg
push
fdivr
sub
mov
xchg
or
xchg
mov
fs
dec
xchg
mov
adc
leave
mov
flds
dec
in
mov
sub
jle
dec
int3
imul
into
and
mov
call
pushf
movsb
cmpsl
push
nop
inc
ret
repnz
mov
int
adc
gs
pminsw
sub
call
dec
mov
xchg
fxch
cli
jbe
pop
aas
add
inc
pusha
repz
ds
inc
out
adc
inc
add
push
xchg
aaa
cli
add
inc
inc
test
addr16
aam
lds
in
adc
inc
sbb
addr16
or
lea
or
push
push
mov
in
int3
add
mov
push
aad
lahf
in
mov
dec
sbbb
mov
adc
and
bound
leave
xchg
dec
addr16
out
insl
ljmp
cli
xchg
jge
or
cmp
lods
out
cmp
xlat
sbb
sub
add
pop
lds
imul
and
and
nop
ret
nop
and
iret
xchg
mov
inc
stos
mov
cmp
jb
inc
call
inc
fsubs
lea
xlat
pop
in
dec
in
pusha
adc
cmp
mov
int3
jge
addr16
xor
push
push
dec
sub
adc
aaa
inc
add
mov
lret
leave
pop
mov
mov
dec
push
mov
cld
orb
repz
gs
in
xchg
sbb
lret
push
lea
jge
lock
mov
sub
rorl
test
mov
jo
and
xchg
pop
xchg
mov
and
add
and
pop
cmpsl
enter
test
or
fcmovne
mov
mov
imul
fisttps
push
adc
inc
adc
out
int3
jg
pavgb
das
in
mov
cmp
insb
imul
and
fxtract
mov
or
repnz
pop
push
movsb
push
or
dec
and
mov
mov
gs
aad
movsl
jp
xchg
jecxz
push
jg
mov
imul
push
insl
jo
call
mov
dec
push
nop
aam
lds
xor
in
or
imul
inc
pmullw
pop
jno
aas
sub
ret
sahf
push
clc
ljmp
fistpll
nop
cmpb
ja
mov
cmp
shll
lds
sub
mull
push
lahf
or
xchg
jp
jle
out
in
push
or
mov
xchg
add
ja
addr16
mov
sahf
repnz
lcall
gs
subl
fldl
gs
add
mov
js
outsl
addl
inc
mov
mov
nop
imul
inc
call
into
leave
in
cltd
mov
xchg
lret
sbbl
push
mov
or
popa
or
aam
addr16
js
js
ljmp
repz
push
xor
or
hlt
mov
cli
clc
stc
push
js
or
push
testl
dec
push
call
mov
xchg
jl
sbb
adc
xchg
xor
sbb
jbe
cmpsb
xchg
std
push
jmp
xchg
adc
jae
pop
xor
daa
xchg
imul
iret
xor
inc
inc
ja
das
cmp
mov
js
gs
mov
xlat
test
out
jo
mov
sahf
push
das
fsubr
mov
jne
daa
ret
gs
out
test
test
mov
pop
or
ds
dec
dec
fwait
in
fildll
dec
cmpb
add
aad
lea
mov
lcall
dec
lret
incl
cmp
sub
xor
in
sbb
ficompl
mov
sub
sbb
mov
jl
jno
out
sbb
pop
sub
out
mov
out
inc
dec
popf
call
out
and
in
add
and
push
pop
sub
ljmp
push
call
out
push
mov
insl
or
cmp
mov
sub
mov
xchg
fcom
aad
std
test
mov
test
imul
mov
inc
push
lea
or
iret
xor
inc
cli
cwtl
stc
sbb
add
addr16
cmp
mov
and
popf
dec
sarb
inc
mov
ljmp
sub
jmp
xor
inc
mov
fnstenv
out
out
inc
inc
lret
add
inc
pop
pop
pop
lahf
push
imul
dec
push
fnstsw
inc
mov
pushl
into
popf
imul
push
clc
popf
mov
in
and
stos
out
repz
xchg
aad
loopne
out
gs
popa
cmp
mov
and
push
push
inc
jge
dec
movsb
push
and
push
imul
arpl
pop
gs
rorb
popf
dec
test
push
fstl
js
test
xor
shl
addr16
test
cld
in
test
mov
push
cs
in
inc
gs
bound
pusha
js
dec
gs
add
loopne
test
cltd
mov
xchg
shrl
int3
cmp
ljmp
sbb
xchg
cwtl
pusha
xor
subb
inc
hlt
push
jmp
or
inc
arpl
inc
and
pop
fs
iret
call
sub
mov
push
jbe
imul
add
sub
das
add
pop
inc
mov
std
push
mov
mov
out
in
pop
gs
mov
cmp
loope
pop
ret
jmp
test
or
mov
int
int
popa
std
gs
mov
rclb
jg
add
data16
mov
pop
push
int3
mov
repz
dec
popf
adc
cmp
mov
scas
and
pop
dec
push
mov
mov
xchg
scas
mov
and
inc
push
cmp
dec
and
insl
mov
and
inc
inc
fxch
movsl
sahf
xchg
or
jp
enter
enter
ret
and
lahf
sub
cld
mov
cld
js
cmp
ficoml
jno
push
clc
xchg
test
dec
sub
jns
int
sub
test
lds
xchg
lret
idivl
aad
ljmp
pop
gs
add
aam
lods
mov
in
std
scas
sbb
test
pop
jmp
lods
and
loop
mov
andl
add
inc
andl
nop
adc
lcall
xchg
xchg
sbb
out
sub
mov
pop
fdivrs
inc
fimuls
shrb
sbb
aas
cli
ficoml
ljmp
and
or
lret
inc
mov
sbb
ret
or
clc
cmp
imul
ret
mov
mov
pop
leave
push
xchg
xchg
mov
xor
cmpsb
lahf
cmp
push
pusha
mov
loopne
hlt
into
aas
inc
pop
insb
push
jb
lret
cld
sub
es
mov
pusha
aaa
or
gs
or
cmp
daa
sbb
or
outsb
pop
js
jecxz
loopne
sub
adc
cmp
cmp
pop
clc
data16
add
sbb
mov
pop
loopne
add
loopne
lret
inc
ret
jl
jbe
jne
cwtl
inc
pushf
push
sarb
gs
mov
mov
loope
sbb
mov
sbb
push
dec
sub
sbb
xor
addr16
and
adc
mov
and
mov
pop
xor
cmp
out
cltd
ss
pop
pop
jns
or
hlt
stc
gs
daa
push
mov
cmpsb
xchg
test
or
mov
mov
aam
inc
push
push
mov
add
in
cs
pop
mov
lret
add
pushf
faddp
ja
xchg
ds
enter
imul
cs
leave
push
bound
mov
mov
fwait
test
xor
fs
xchg
rclb
add
mov
lcall
or
mov
test
leave
ds
addr16
jno
mov
sti
xor
stos
adc
fsubrs
lods
cmp
push
push
shlb
aaa
adc
cs
xchg
and
stos
popf
ljmp
mov
out
xchg
inc
adc
shlb
pusha
pop
neg
or
pusha
scas
test
adc
fstpt
popf
es
stos
jp
sbb
and
or
or
stc
and
lock
lds
sbb
imul
ja
je
pushf
aaa
cld
test
in
xchg
test
ret
cmp
das
bound
leave
fs
stc
mov
nop
out
or
call
ljmp
int3
imull
pop
cmp
addr16
xchg
fs
call
and
push
dec
sahf
dec
in
daa
push
sub
push
xor
inc
dec
test
aad
push
jnp
cmpsb
dec
xchg
test
inc
cli
lea
mov
mov
and
sub
jmp
lods
pop
cmc
int
iret
inc
xchg
sub
sbbl
push
xchg
adc
shrl
push
adc
cltd
cli
jecxz
ja
mov
hlt
hlt
lret
add
jae
into
mov
inc
mov
cmp
or
cmp
jbe
dec
inc
sbb
cmp
clc
in
jg
jne
in
mov
lods
mov
jo
stos
rclb
fistl
shrl
mov
cmp
mov
mov
mov
dec
lods
xchg
cltd
in
imul
jb
xchg
pop
jl
dec
dec
dec
pop
mov
adc
xor
cmpsb
gs
ljmp
sbb
ljmp
inc
cmp
out
inc
sbbb
dec
imul
popf
jle
in
in
popf
call
test
addr16
cli
pop
clc
jle
mov
mov
xor
dec
jnp
inc
sbb
into
mov
clc
test
inc
push
mov
aad
cmp
inc
pop
sub
inc
and
out
aad
adcb
xor
mov
pop
inc
movsb
jecxz
data16
mov
fisubl
cmpsl
adc
xchg
in
sbb
arpl
sbb
jle
in
subb
pushf
decb
and
hlt
lret
aas
push
xlat
and
jno
ja
dec
mov
inc
jo
mov
xchg
xchg
cli
cmp
enter
leave
sub
adc
cltd
ja
sbb
push
pop
inc
jmp
xchg
popf
in
imul
cmpsl
daa
add
sub
xor
pop
add
pushf
loop
insl
adc
sti
jp
jno
sarb
add
fdivrs
sbb
xchg
sbb
dec
cmc
jbe
push
push
sub
mov
test
or
fldcw
push
gs
lds
aam
loopne
push
jns
sub
pop
pop
movsl
rcll
mov
clc
aad
loop
data16
mov
popf
mov
or
cli
js
mov
xor
ljmp
xchg
dec
jle
enter
add
push
mov
enter
imul
pushf
mov
push
or
and
or
test
loop
popf
xor
sti
out
scas
int3
xchg
inc
js
mov
lea
add
xchg
fildl
ss
insl
jecxz
adc
cmp
int
std
aam
push
shr
pop
xchg
insl
ss
xchg
rorl
in
push
sbb
test
add
in
lahf
sbb
xlat
mov
sub
mov
dec
cwtl
aad
fcomps
xchg
sub
cmp
mov
xor
ljmp
cmc
inc
stos
shll
aad
hlt
sub
xor
dec
dec
jmp
pop
xchg
add
scas
lods
ret
lods
adc
cltd
mov
out
add
dec
movsb
sahf
mov
iret
insl
xchg
int3
lds
je
test
sub
mov
lret
push
mov
popf
inc
pop
pop
sbb
enter
xchg
addb
mov
push
fidivrs
xchg
mov
jmp
sarl
adc
je
mov
add
in
test
in
xchg
cmp
mov
xchg
mov
adc
pop
dec
dec
jl
adc
sahf
test
push
popf
orb
mov
sub
pusha
push
dec
adc
and
sbb
orl
in
ficoml
sub
and
inc
stos
adc
test
cmp
inc
lds
sub
popf
test
repnz
sub
fiadds
or
shr
test
mov
call
test
out
pop
push
ljmp
lea
inc
mov
inc
jb
mov
movsb
aas
int
cmpsb
in
repz
js
inc
scas
jmp
cltd
mov
jbe
lret
fsts
mov
push
sub
cmp
dec
mov
sub
cmpsl
mov
inc
jns
sbb
pushf
lods
pop
aaa
adcb
jge
adcl
mov
push
or
xchg
mov
arpl
jg
add
in
and
add
sbb
cli
jp
jno
inc
insl
mov
js
cld
lret
jb
or
mov
fmull
push
adc
sub
mov
das
inc
xchg
mov
mov
adc
leave
lea
das
and
aad
loopne
mov
lock
in
lahf
shrb
mov
adc
sub
int3
inc
addr16
sub
movsb
fnstsw
test
push
push
or
sahf
mov
ds
mov
stos
jp
popa
lds
or
jmp
sub
push
scas
outsl
mov
mov
mov
in
inc
push
popa
nop
stos
repz
test
fdivrs
ljmp
repnz
jle
cs
sub
sub
imul
sbb
das
inc
mov
popa
inc
adc
ljmp
mov
jno
orl
xor
push
test
rcrl
int
cmp
loopne
adc
jge
fwait
or
out
jne,pt
fisubrs
pop
int
or
std
add
addr16
adc
inc
imul
enter
out
shlb
fists
or
adc
ja
mov
cmpsl
or
or
aam
ljmp
hlt
adc
stos
lcall
in
sub
cli
fcompl
popa
and
ret
aas
repz
loope
rcrb
call
mov
rol
mov
mov
sub
inc
cmp
imul
dec
ror
test
inc
pushf
nop
sub
jp
repz
inc
sub
lcall
bound
insl
fstp
sbb
arpl
scas
pop
or
insl
lahf
addr16
pop
inc
das
push
pop
fstpl
repz
or
push
scas
and
mov
and
in
sbb
inc
cmp
inc
push
mov
or
gs
mov
push
arpl
call
jbe
stos
test
or
mov
xchg
dec
cmc
dec
push
call
ljmp
push
fisttpll
mov
test
icebp
mov
xchg
dec
imul
daa
dec
inc
cmc
push
addl
in
xor
push
sub
or
ds
mov
add
out
dec
sub
dec
jl
ja
inc
sbb
pop
add
mov
mov
insl
pushf
popf
fcoml
xchg
gs
imul
test
stos
ret
lea
in
lds
cmp
push
dec
mov
jp
cltd
imul
pop
push
dec
mov
or
sbb
stos
addr16
mov
out
pause
dec
lret
scas
sbb
cmc
fst
daa
imul
cmpsb
mov
and
fnstenv
dec
notb
sub
mov
dec
xor
xchg
hlt
mov
cmp
mov
adc
mov
aam
cmp
jne
int
xor
fisttpll
daa
xchg
out
push
xor
in
add
mov
push
pop
out
push
xor
adc
aaa
mov
sub
packuswb
outsl
xchg
mov
xor
pop
dec
dec
out
movsb
mov
inc
in
push
scas
mov
scas
dec
in
imul
loopne
les
xchg
mov
jns
xor
pop
cmp
pop
dec
cmp
push
or
mov
in
jp
mov
ss
pop
jl
mov
and
int3
jns
mov
pop
gs
lods
mov
js
jne
sti
dec
jno
mov
std
sub
mov
pusha
mov
stc
lret
lods
test
imul
sub
repz
xor
jle
aad
xor
mov
and
cmp
inc
repz
push
fst
xchg
int
lcall
lds
pop
out
ss
cli
jecxz
imul
leave
into
add
pop
sbb
popf
mov
clc
hlt
mov
bound
sub
test
and
lock
sub
mov
testb
scas
sbb
js
push
mov
jnp
jnp
mov
jge
or
lods
cmpsb
daa
lea
fdivrl
hlt
movsb
xor
push
and
nop
fs
data16
jae
pushf
inc
data16
pop
cmp
mov
ds
ljmp
into
scas
test
inc
sbb
pop
popf
jnp
jg
inc
imul
adc
rcr
or
push
sbb
pop
mov
int
test
and
jle
push
jae
xchg
xlat
fstpl
nop
xchg
and
daa
mov
fisubs
rolb
jg
sahf
loopne
jge
iret
cli
in
outsl
icebp
test
dec
adc
push
and
stc
ljmp
mov
in
hlt
repnz
or
js
outsb
jmp
pop
pop
mov
cltd
inc
sub
scas
mov
xchg
dec
dec
cmp
push
clc
gs
lcall
lods
xor
lret
pop
sbb
or
mov
sub
lea
ljmp
jns
mov
ss
imul
in
in
ds
arpl
pop
mov
push
call
aas
xchg
out
inc
mov
adc
test
sub
xor
call
call
in
es
pusha
imul
repnz
lret
push
mov
mov
lahf
push
int3
idivl
int3
sbb
lock
mov
mov
xchg
leave
cwtl
das
arpl
mov
int
xchg
daa
cwtl
stos
cli
movl
dec
sti
movsl
in
aaa
dec
out
clc
sbb
push
iret
in
dec
jne
xchg
test
ret
and
daa
jb
int3
mov
gs
lds
icebp
daa
dec
divl
inc
sbb
pop
inc
dec
clc
cmpsl
xchg
pop
and
into
pop
into
test
fisttps
adc
pushf
mov
test
cwtl
add
inc
fidivs
cmp
adc
mov
dec
int3
pusha
pop
mov
addr16
int
ja
lock
divb
out
xchg
sahf
lds
fists
xchg
je
mov
xlat
mov
test
clc
data16
imul
enter
push
aad
push
imul
xchg
add
xchg
xchg
lahf
cmp
daa
and
dec
arpl
lock
test
enter
sbb
push
clc
mov
fstpt
push
dec
cwtl
inc
mov
js
fcomps
sbb
push
push
xchg
in
push
mov
movsl
jbe
je
repnz
stos
cmp
test
pop
fmuls
xchg
movsb
or
movsb
stos
js
pop
dec
mov
scas
imul
cltd
in
mov
daa
pop
inc
jbe
into
and
cmpsb
cwtl
xchg
jbe
lds
pop
enter
ss
addr16
mov
jbe
testl
adc
xchg
into
xchg
out
sbb
pop
cmpsb
push
divb
cmpsb
je
out
push
lock
enter
sbb
mov
jge
xchg
mov
in
xor
inc
xor
pop
inc
call
sub
and
jp
dec
pop
sbb
cmp
xchg
cmp
mov
mov
xor
cmp
sbb
mov
push
sbb
test
mov
gs
xor
imul
in
sub
aam
leave
in
movsb
negb
and
fwait
inc
imul
mov
cmc
jbe
call
jmp
movntq
out
or
mov
imul
mov
cmc
addr16
mov
icebp
and
push
pop
out
out
jbe
sbb
xchg
xchg
push
pop
insb
aas
adc
das
add
jl
sbb
jg
sbb
ret
std
jne
daa
dec
mov
inc
inc
mov
gs
imul
and
std
fs
sbb
xchg
mov
nop
dec
scas
jae
fldt
jo
daa
clc
jns
mov
call
xchg
mov
test
sub
push
arpl
cmp
push
mov
out
and
xor
lret
in
pop
jmp
mov
je
addr16
pop
push
inc
xchg
sbb
cmp
pop
jp
test
ret
imul
fidivl
pop
fildl
jno
pop
jl
fwait
in
cmp
in
fisttpl
aad
rcr
push
jmp
lea
notb
add
mov
inc
mov
test
jno
jb
cld
and
repz
mov
cld
aaa
shrl
test
jge
mov
imul
push
mov
fisubs
ljmp
add
pop
xor
mov
dec
fiaddl
rcrl
xor
and
nop
push
xchg
fmuls
aaa
cltd
das
pop
into
shrb
jo
sub
push
aas
xor
lcall
test
cwtl
test
sbb
lods
push
or
push
fbstp
pushf
imul
jge
scas
xchg
or
lahf
aam
rol
mov
add
aad
inc
pop
in
or
dec
or
sub
ds
inc
cmp
out
test
mov
repz
jns
rcr
cmpsb
test
andl
in
int
es
negl
or
mov
sub
sub
xlat
test
and
adc
push
xchg
mov
repz
or
addr16
notb
leave
jb
incb
add
pop
jmp
inc
pusha
mov
dec
pop
pop
mov
mov
lahf
mov
std
or
ja
subl
inc
or
pusha
adc
in
lcall
xchg
out
test
mov
add
mov
or
push
add
mov
push
repz
out
pusha
jmp
dec
push
pop
jae
addr16
mov
repz
sbb
data16
pop
test
xor
sbb
mulb
aaa
mov
movsb
pop
mov
xchg
icebp
sbb
gs
sub
xchg
xor
add
stc
je
mov
add
or
xor
xchg
scas
push
enter
adc
or
sub
lods
mov
mov
inc
outsb
lcall
test
popf
xchg
or
adc
cmpsl
cmp
inc
cmpsl
mov
mov
xchg
ja
hlt
adc
and
cmpsb
pusha
ljmp
jbe
icebp
into
loopne
test
dec
xchg
and
sub
loope
adcl
mov
loope
cmc
xchg
ret
xchg
nop
in
pop
rol
in
cmp
pop
sbb
add
std
popf
and
xchg
mul
inc
cli
into
andb
add
mov
outsb
fistpl
sahf
ljmp
or
cmp
mov
js
repnz
jae
fimull
xchg
frstor
jno
and
repz
jmp
lea
xchg
xor
sbb
addr16
jno
jae
andb
subb
xchg
dec
xchg
push
sarb
jmp
cld
pop
fsts
je
leave
pop
mov
sbb
and
test
pop
stc
fs
shr
ljmp
cmpsl
or
fstpt
sub
nop
aad
out
int
sahf
repnz
fisubrl
sub
out
xor
arpl
mov
dec
sarb
mov
ss
sahf
ret
sbb
fadd
xor
pop
imul
das
test
shrl
inc
hlt
imull
aaa
dec
ds
xlat
out
pop
aad
dec
and
pop
lcall
mov
stos
aas
or
fdivs
data16
sub
inc
and
mov
roll
int3
gs
imul
lret
mov
es
inc
ss
leave
pusha
in
in
jle
inc
mov
push
pop
fcoms
addr16
mov
shlb
or
dec
rcrl
cmp
ja
mov
mov
fidivrs
enter
mov
push
xor
jne
adc
ljmp
inc
pusha
mov
mov
dec
add
pop
mov
ljmp
ficoml
push
jmp
rcrb
sahf
and
and
int
cmp
daa
das
vpmaddwd
adc
pop
lret
and
mov
aad
cmp
ds
push
jge
cmpsb
cmp
push
imul
ja
jmp
lods
iret
stc
outsl
roll
imul
push
int3
cmpsb
fstps
arpl
mov
jae
push
cmp
pop
movsl
mov
sahf
xor
fnstenv
push
cltd
fsubl
in
shlb
jl
mov
push
iret
push
adc
push
add
in
xchg
mov
imul
lock
dec
lea
sub
push
or
hlt
lahf
gs
and
cli
dec
orb
ret
sbb
dec
xchg
adc
stos
shl
cmp
ds
mov
jp
push
inc
push
test
nop
stc
dec
fwait
push
daa
imul
cli
lea
cmc
imul
pop
int3
lea
int
add
lcall
inc
sbb
test
and
fcompl
scas
xchg
fsubs
pushl
sbb
jne
lds
movsb
rolb
or
outsb
add
xor
js
pop
push
push
test
inc
mov
popa
cld
outsl
cltd
push
lret
mov
jno
push
pop
mov
push
dec
adc
mov
add
xlat
push
mov
jge
sub
fstl
clc
in
xchg
pop
or
cmc
test
pop
push
vpunpckhqdq
gs
shlb
insl
mov
lds
pop
lcall
dec
sbb
xlat
lcall
or
scas
mov
xor
mov
jmp
clc
nop
clc
sub
xor
rorl
dec
pop
mov
jno
lret
notl
xchg
xchg
outsl
or
and
daa
xchg
leave
stc
sarb
xor
jne
mov
jns
faddp
jmp
sbb
ret
out
add
lea
xor
pop
lahf
cmp
fisubrs
push
pop
inc
mov
orb
popf
aaa
and
mov
xchg
int3
ja
gs
sub
movsb
idivl
lods
push
mov
xchg
mov
orb
jge
ljmp
out
sbb
pop
rorl
jns
int3
sub
lods
sub
pop
leave
mov
nop
mov
adc
jp
in
sub
cmp
push
outsl
or
mov
hlt
enter
test
icebp
imul
and
add
decb
js
add
sbb
addr16
jo
xor
sub
sbb
cmp
push
and
or
jmp
pop
inc
push
std
xchg
popl
push
cs
jmp
cs
add
icebp
jb
jbe
dec
mov
inc
pop
sub
add
pop
mov
jne
test
mov
shll
and
in
gs
out
sarb
jns
jno
fnstenv
andb
subl
xchg
push
adc
mov
fadds
pop
div
adc
insl
leave
cmpsb
call
addr16
lahf
cmpb
das
add
clc
es
gs
ret
imul
mov
negb
and
cld
pop
mov
aaa
mov
jns
inc
adc
jne
das
cmp
dec
mov
and
push
xor
outsb
cmc
leave
shlb
out
out
mov
inc
imul
add
lock
push
pop
int3
push
in
in
lea
dec
mov
mov
xchg
xchg
in
adc
arpl
negl
leave
add
inc
lea
jae
aaa
and
shrl
sti
pop
cwtl
filds
imul
clc
adc
or
in
insl
in
xor
sub
jmp
std
dec
adc
dec
pop
out
push
push
cli
dec
in
adc
jo
push
mov
aad
cmp
outsl
in
dec
scas
mov
fwait
adc
push
push
shr
inc
inc
inc
bt
orb
add
mov
pop
mov
cs
sub
adc
and
push
dec
jo
stc
sub
pop
fnstcw
cmp
cmp
stos
lahf
xor
stos
pop
jnp
dec
add
out
cmp
and
std
ds
out
sub
dec
jae
xchg
mov
jge
pop
dec
push
mov
addr16
cmp
adc
sbb
jne
repz
cmp
in
pop
int
fcomip
or
dec
fsts
xchg
andb
scas
fldt
xchg
js
outsb
lcall
xorl
xor
or
dec
add
andl
mov
stos
dec
cmc
inc
nop
repz
out
push
mov
mov
gs
xchg
out
adc
mov
xchg
pop
imul
clc
xchg
or
ds
xchg
test
aam
ret
clc
lret
pop
mov
add
int3
xchg
sbb
push
add
test
sbb
les
dec
inc
in
cltd
inc
xor
mov
mov
lea
fisubrl
sbb
mov
add
scas
inc
and
hlt
xor
jg
inc
lods
enter
xchg
loope
xchg
sub
lahf
pop
push
divl
or
fists
hlt
mov
movsl
rcr
int3
push
xchg
xchg
loop
icebp
xchg
dec
addr16
adc
es
lcall
sbb
mov
rcl
outsl
xchg
xor
nop
mov
test
mov
iret
pop
cmp
mov
push
xor
movsl
test
das
loop
pop
or
inc
cs
mov
jns
cltd
push
pop
pop
sbb
int3
jno
jns
lods
or
addr16
leave
mov
cmp
xchg
movsl
xor
mov
dec
mov
gs
adc
hlt
test
push
inc
adc
mov
or
mov
fcomps
stos
shl
push
dec
ficompl
leave
mov
movsb
addr16
fidivs
cmpsb
adc
pop
jo
loope
jg
dec
out
inc
mov
sbb
mov
andb
sbb
popf
stc
push
cwtl
xorl
sbb
popf
mov
in
imul
in
test
test
lods
jo
loopne
and
push
and
xor
int
or
lea
leave
adc
sbb
lret
inc
repnz
cmp
sbb
scas
in
sub
sbb
push
imul
pop
xchg
dec
loop
push
push
gs
cld
data16
insl
mov
mov
stos
inc
sub
cmp
and
test
sub
ja
andb
push
lock
xchg
and
outsl
or
inc
push
movl
fwait
in
aam
test
test
int
and
sbb
lods
inc
shrl
mov
xchg
xor
scas
inc
and
xor
adc
lcall
mov
sbb
ds
and
lea
add
or
aas
adc
int
idivl
lods
nop
sbb
dec
roll
adc
pop
nop
push
add
leave
pop
outsb
xchg
sub
pop
shr
imul
push
cmc
xor
lds
sub
pop
cmc
hlt
fsubr
mov
and
inc
mov
cmp
or
in
sub
cmpsl
cmp
push
jo
cmp
mov
adc
jg
out
mov
lock
in
test
adc
sub
sbb
mov
mov
dec
cmpsb
ss
xchg
rsm
mov
lret
sbb
and
scas
shlb
push
inc
scas
scas
pop
or
add
lds
js
movsl
int3
lds
into
inc
mov
gs
addr16
sahf
stos
jae
test
sub
pop
add
mov
loope
mov
in
scas
mov
hlt
rol
lret
push
mov
xor
push
cmpsl
cld
imul
jbe
clc
dec
dec
and
test
mov
aas
js
stc
lahf
ljmp
inc
stos
and
out
or
das
ljmp
push
xchg
fstl
xchg
fsts
nop
sub
mov
mov
push
std
scas
cmpsb
inc
or
nop
mov
sub
push
ret
xchg
jbe
inc
clc
adc
fstps
fchs
mov
ja
jmp
nop
movsb
mov
mov
aas
sub
mov
ljmp
fmuls
mov
jns
ljmp
bound
inc
or
in
movb
out
mov
pusha
push
pop
mov
dec
imul
xor
lcall
sub
dec
lock
pop
iret
pop
ljmp
dec
inc
inc
pop
pop
xchg
outsl
mov
orl
sub
addr16
out
pushf
dec
push
xchg
hlt
imul
xchg
xchg
xor
pop
fldl
or
dec
jge
mov
lods
push
mov
push
clc
sub
test
imul
inc
sub
daa
sub
push
sbb
fiaddl
mov
xchg
jge
mov
test
add
jge
sahf
lcall
xchg
divl
fs
and
add
idiv
frstor
mov
sbb
mov
mov
push
sbb
mov
cmp
mov
mov
out
scas
rclb
sub
aaa
add
and
ja
fisubs
cmp
xor
mov
dec
fwait
imul
mov
lcall
jmp
jns
pop
fs
mov
dec
movsb
cmp
xor
fisubrl
or
orl
sbb
jae
movb
ljmp
sub
fwait
jge
imul
clc
xchg
cli
cwtl
fwait
mov
ret
mov
fsub
mov
push
imul
or
sub
test
insl
adc
aaa
mov
scas
sbb
mov
xchg
mov
int
mov
lret
and
ret
adc
loope
xor
xchg
sbb
out
mov
imul
sti
cs
mov
mov
mov
scas
aas
adc
test
cmp
lds
mov
jb
imul
push
mov
mov
sub
dec
mov
divl
adc
sti
mov
inc
jecxz
cmp
xor
aam
mov
inc
je
fbstp
add
add
mov
imul
push
out
cmp
and
scas
and
fstpl
mov
pop
loopne
xchg
imul
ja
jae
cwtl
xor
ficompl
or
test
nop
test
add
dec
nop
jmp
sbb
fwait
push
out
fs
mov
rorb
cmpl
loope
dec
sbb
outsl
dec
iret
ljmp
adc
add
ret
mov
jge
mov
stos
cwtl
jae
mov
push
imul
and
lods
jecxz
imul
daa
jo
jl
dec
inc
or
out
cmpsb
out
repz
inc
call
fildl
and
mov
mov
inc
gs
repz
adc
cbtw
sahf
in
xchg
mov
imul
call
mov
popl
or
mov
dec
inc
jae
mov
gs
movsb
mov
xor
mov
sbb
adc
jb
push
test
imul
sbb
mov
jp
lcall
scas
push
add
imul
in
int3
rcr
hlt
push
push
cwtl
lcall
sub
and
mov
sbb
pop
out
inc
in
nop
imul
je
mov
mov
xchg
fcompl
std
pop
ret
addr16
imul
pop
mov
mull
pmulhw
std
xchg
xor
das
xor
sbb
in
jmp
mov
add
sahf
pcmpgtw
adc
out
loop
jne
imul
or
dec
xchg
sub
ljmp
mov
push
mov
pop
pop
mov
gs
mov
xchg
int
stos
sub
cmp
fsubrl
pop
jno
pop
jo
sbb
push
hlt
sbb
lea
mov
into
jno
shll
fcomps
lock
xchg
andl
hlt
nop
inc
sub
test
lahf
push
rcll
xchg
hlt
js
repz
or
push
add
xchg
push
repnz
sub
xchg
push
lret
daa
shlb
mov
push
dec
mov
and
xor
mov
xor
stos
je
mov
mov
dec
ljmp
inc
push
shll
xchg
andl
mov
lret
das
mov
repnz
ja
inc
cmp
leave
nop
gs
scas
lds
fdivrs
push
rcr
sbb
mov
fisubl
inc
pop
push
push
outsb
cwtl
mov
ljmp
mov
push
in
jl
mov
xchg
xor
cld
int
xchg
lea
lds
pop
cltd
sbb
addr16
add
lods
leave
test
mov
into
xor
push
and
dec
test
sbb
out
xchg
es
mov
pop
mov
dec
or
cs
pop
dec
sbb
pop
cmpsb
enter
lea
xchg
jg
sbb
lahf
std
enter
lret
nop
xchg
test
mov
out
aaa
lcall
xchg
fnstcw
adc
fcompl
sbb
imul
or
push
cmp
inc
pop
mov
in
retw
xchg
mov
add
and
xchg
and
sub
int3
push
hlt
inc
pop
xlat
out
cmp
lods
test
hlt
out
push
hlt
cli
ljmp
stos
jg
push
mov
lcall
adc
add
ljmp
xor
das
add
adc
push
pushf
adc
mov
ja
mov
popf
xchg
leave
std
out
mov
or
fs
sub
outsb
sbb
movsb
fstpt
flds
or
jp
les
mov
lock
inc
aas
dec
and
inc
imul
inc
hlt
sahf
mov
movsb
adc
or
jne
sbb
xchg
or
ss
and
cwtl
gs
out
push
mov
jnp
push
sbb
mov
cmp
pushf
out
push
jb
insl
int3
dec
push
gs
dec
scas
dec
test
adc
add
in
jp
cmpsl
imul
js
movsb
fxch
sbb
cltd
or
sahf
fs
in
jo
daa
jae
xchg
sbb
in
mov
jecxz
cmp
movsb
push
push
stos
jb
int3
gs
mov
das
rolb
jl
mov
cmp
sti
add
repnz
dec
mov
adc
fs
mov
mov
sbb
bound
mov
adc
scas
push
xor
xchg
push
mov
fwait
pop
cmp
cmp
in
lds
jo
ljmp
mov
dec
inc
push
andb
sbb
add
or
pop
pusha
out
cmpsb
int3
mulb
add
dec
and
hlt
fs
gs
mov
sbb
movsl
dec
dec
or
lods
sti
inc
jae
cmp
imul
cltd
cmp
outsl
cmp
sbb
shl
stos
stos
push
dec
xor
mov
cmp
jg
inc
jno
adc
dec
fistl
xor
dec
sub
mov
and
cli
push
dec
lock
stos
xchg
mov
int
andl
notb
movsl
fsubs
pop
adc
ljmp
adc
dec
rolb
ret
xchg
gs
pop
or
sbb
jae
and
xchg
adc
inc
sbb
iret
or
cmpsl
inc
clc
pop
testl
nop
push
int
sub
addr16
xor
xchg
xchg
xlat
sbb
ret
dec
mov
imul
add
shlb
pop
iret
rcl
nop
jne
mov
or
sub
outsl
jmp
and
inc
pop
mov
adc
sub
mov
mov
fwait
js
imul
and
xchg
jo
sbb
imul
xor
xor
pop
leave
ret
pop
cmp
xchg
pop
xchg
gs
jmp
push
loop
push
sarl
fwait
stos
jle
adc
adc
mov
mov
into
xor
mov
pop
pop
sbb
sbb
xchg
sbb
hlt
sub
xchg
push
inc
pop
outsb
arpl
xor
push
scas
sub
aam
negb
mov
mov
xchg
xchg
lcall
pop
sbb
inc
out
xor
dec
lret
movl
aad
pop
add
mov
es
movsl
jns
pop
jmp
out
push
insl
ret
jns
std
aam
adc
pop
adcl
xchg
scas
adc
and
hlt
pop
test
repz
imul
lcall
mov
sarb
xchg
pushf
inc
sub
sbb
push
xchg
lahf
xchg
cld
or
mov
sbb
rcll
inc
inc
movl
xlat
add
lret
dec
imul
sub
hlt
jge
rolb
mov
out
mov
loope
mov
mov
imul
pop
das
lahf
lcall
mov
cmpsl
in
repz
ret
xchg
shll
mov
sbb
mov
sub
lea
mov
or
sub
mov
std
mov
arpl
and
xchg
mov
mov
out
and
hlt
inc
lock
xchg
fiaddl
dec
push
sub
or
mov
imul
push
ret
sbb
push
mov
add
xor
inc
cmpsb
adc
xchg
adc
ljmp
in
mov
jle
mov
or
add
inc
nop
dec
push
mov
lea
cmp
push
pop
movsb
inc
mov
fsubrs
ret
mov
dec
hlt
adc
xorb
stos
lea
cld
int3
add
sbb
xchg
cltd
scas
jg
mov
mov
movl
cmp
jmp
fiadds
fcmovb
imul
mov
stc
mov
ficoml
inc
jl
and
fadd
ljmp
mov
or
addr16
mov
call
or
jno
fsub
mov
ljmp
sbb
call
jno
or
cwtl
pop
pop
cmp
jle
mov
mov
in
in
std
in
bnd
hlt
loop
mov
leave
mov
data16
lds
push
xchg
js
fidivs
test
mov
fldt
xchg
in
push
and
inc
mov
inc
push
decb
xor
mov
jbe
jne
test
xor
out
lret
lds
cmp
or
and
into
into
into
push
enter
gs
and
xchg
aaa
dec
add
addr16
xor
dec
fdivrp
fiaddl
and
ds
out
scas
jo
mov
xchg
iret
mull
scas
inc
loope
ret
xor
sahf
pusha
int
xchg
mov
scas
lret
gs
push
ret
mov
data16
imul
js
xchg
xor
cmpsb
add
popa
jno
negl
pop
mov
mov
xchg
aam
iret
cmp
addr16
repnz
out
fdivl
das
jo
jle
xchg
mov
pop
push
daa
xor
mov
xchg
in
lea
pop
pop
std
mov
jne
dec
aas
sbb
addr16
push
pop
mov
dec
in
sbb
pop
inc
pop
cltd
insb
leave
jae
push
push
xchg
jns
mov
arpl
push
addb
adcl
jl
or
gs
mov
xchg
lcall
lret
dec
hlt
xor
stos
adc
pushf
nop
push
es
bound
jl
mov
aad
in
in
lods
call
sub
inc
mov
nop
and
shlb
and
add
in
mov
inc
pop
mov
testb
fidivrs
gs
jp
mov
add
mov
jl
inc
data16
idivl
add
fwait
lock
pop
addr16
aas
pop
lahf
or
cmp
push
xor
mov
lcall
in
lea
insb
jg
fdivrl
mov
negb
ds
call
stos
dec
testl
decl
adc
sbb
lds
jno
cmp
mov
test
xchg
push
inc
mov
jo
enter
gs
dec
mov
mov
hlt
call
push
insl
in
mov
popa
inc
push
out
loopne
hlt
test
into
mov
mov
pop
inc
outsb
sbb
roll
lds
insb
jmp
fidivl
rcr
sbb
dec
dec
lret
int3
or
xchg
addr16
pop
hlt
pop
fidivs
pusha
and
pop
pop
ds
and
jle
inc
mov
addb
testl
imul
imul
dec
pushf
das
call
sbb
leave
fld
jecxz
gs
ljmp
jp
jg
in
test
cmpsl
push
xor
mov
in
cli
stos
dec
fiadds
fsubl
mov
sub
ficoms
arpl
dec
jmp
test
sub
push
xor
cmp
gs
loop
push
ss
adc
and
scas
jb
jp
outsb
test
stos
jae
incl
imul
popf
repz
add
mov
mov
arpl
mov
rcl
lds
loope
mov
scas
dec
push
mov
lods
push
or
cmp
inc
js
sub
hlt
fld
xor
or
and
pop
out
push
fmuls
xchg
shlb
divb
mov
or
out
mov
aam
int3
movsl
pop
fildll
inc
rcrb
rclb
push
aam
lods
leave
add
sti
jnp
inc
jne
aad
sbb
mov
mov
mov
inc
inc
mov
fwait
ljmp
int3
sub
sbb
push
xchg
leave
aas
sbb
fwait
jbe
test
jge
and
ds
addr16
mov
mov
mov
adc
and
jne
scas
mov
gs
aaa
cwtl
imul
pop
enter
test
or
mov
push
lahf
lahf
adc
jae
mov
dec
int
pop
cwtl
inc
subl
int3
lret
xor
lods
add
ret
cmc
mov
cs
cli
js
mov
sub
ds
sbb
out
mov
inc
pop
repz
out
fwait
sbb
mov
fmul
or
mov
add
mov
movsl
sbb
mov
sti
mov
rcr
wbinvd
repz
dec
nop
out
scas
cltd
imulb
dec
imul
jne
iret
or
push
fwait
out
es
mov
std
fdivl
test
mov
add
scas
cltd
and
out
pop
add
stos
add
add
mov
mov
enter
cmc
cltd
jge
out
cmpsl
xchg
loop
adc
mov
in
es
cltd
lds
rcll
enter
sbb
mov
enter
mov
adc
lock
and
repnz
dec
ficoms
adc
lods
cmp
mov
ficompl
sti
ret
cwtl
sub
mov
xchg
insl
jmp
mov
xchg
sbbb
inc
xlat
jmp
lahf
fstps
jl
pop
jbe
mov
and
push
pop
insl
enter
inc
inc
gs
pop
jo
lahf
sub
out
jnp
imul
fmull
xchg
pop
sahf
addr16
data16
push
test
mov
inc
aaa
ja
cmp
inc
add
or
imul
gs
sub
sbb
add
pop
sti
or
dec
js
xlat
adc
jbe
inc
jmp
arpl
xchg
adc
cmpsb
orb
cmp
mov
mov
test
sbb
fisttps
add
inc
lds
cmp
in
cmp
cltd
repz
and
dec
xorl
cmp
lock
int3
stc
jbe
std
or
sbb
popf
inc
mov
jno
jge
bound
lods
idivl
adc
mov
lods
sbb
jns
lock
insl
cli
push
xchg
sub
lret
loope
in
pop
rorl
push
cmp
jbe
clc
jmp
gs
jg
or
jmp
test
icebp
inc
cmp
sub
ja
add
pop
test
mov
lahf
and
inc
mov
sbb
outsl
popa
xor
inc
ss
pusha
loope
xorb
dec
adc
mov
aam
pop
push
cs
add
mov
aad
inc
mov
hlt
inc
mov
nop
daa
cwtl
mov
sbb
add
lock
mulb
jl
pushf
xchg
cmp
inc
cmc
andb
xchg
pop
subl
test
ljmp
repnz
jbe
cmp
pop
hlt
test
insl
iret
call
mov
loopne
sbb
dec
test
ret
sbb
jg
xchg
test
pop
inc
lret
inc
jns
int3
das
xor
cmp
jmp
cmpsl
adc
inc
in
sbb
call
mov
aad
out
fsubrs
faddl
sbb
jmp
dec
movsl
dec
mov
mov
stos
mov
inc
call
cmpsl
daa
pusha
out
fmuls
cld
push
push
lods
push
call
outsl
or
daa
push
scas
les
ss
cwtl
sub
mov
out
lock
fdivrs
mov
gs
xlat
xlat
adc
mov
xchg
stc
mov
aad
add
pop
test
and
fwait
call
dec
jbe
out
mov
mov
dec
movsb
inc
xlat
cwtl
cmpsb
cmp
out
xchg
test
or
xorl
xlat
fsubrp
jmp
js
xchg
dec
mov
pop
lds
lods
dec
out
sti
xchg
jb
xor
sbb
pop
dec
or
jbe
test
movb
fldt
mov
in
jbe
xlat
dec
fsubp
and
xchg
fadds
or
clc
jno
mov
ret
push
call
outsb
pop
sub
add
test
data16
jbe
dec
inc
adc
push
adc
in
inc
mov
jo
xlat
in
clc
pop
fsubr
pushf
enter
idiv
cltd
xchg
mov
insb
cmpsl
pushf
enter
xchg
outsl
xor
daa
jbe
test
xchg
sbb
es
daa
push
cwtl
out
clc
dec
lea
sbb
xchg
test
xchg
cwtl
mov
out
movsl
dec
xchg
imull
xchg
jbe
dec
add
in
and
scas
push
enter
hlt
ljmp
in
push
dec
repnz
or
movsb
sub
jl
cmp
sub
xchg
es
and
inc
sti
sub
ret
pop
adc
leave
out
cld
int
cmpsb
lods
shr
xchg
jecxz
sub
xchg
lock
popl
mov
or
or
fldcw
fdivp
rclb
fs
scas
or
outsl
mov
sbb
out
daa
mov
movsl
sbb
lret
sbb
dec
mov
stos
aad
sub
xor
test
inc
nop
test
xchg
into
pop
push
dec
incl
and
hlt
lock
mov
sub
mov
fwait
dec
jb
into
stc
push
out
and
mov
or
mov
sbb
test
push
fldenv
sarb
and
adc
hlt
out
sti
pop
inc
push
jg
repnz
cli
iret
into
aam
nop
loopne
fwait
imulb
cmp
rcl
jb
movsl
repnz
sbb
test
pop
ljmp
dec
loop
cmpsb
enter
or
stos
out
scas
in
iret
gs
add
cltd
jnp
scas
inc
sbb
inc
repz
cmp
sub
clc
adc
insl
pop
inc
push
mov
mov
pop
inc
nop
imul
adc
aaa
push
and
mov
shrb
xor
mov
mov
mov
hlt
mov
sub
pop
nop
imul
push
outsb
sub
inc
scas
add
aad
imul
xchg
lods
add
clc
or
mov
ljmp
mov
test
pushl
and
scas
ljmp
mov
xor
aad
popa
in
cmp
mulb
inc
stos
jmp
daa
int3
mov
cmp
add
jo
insl
cmpsb
scas
int
popf
mov
xchg
movsb
loope
mov
jns
lcall
lret
dec
cmpsl
cltd
xor
mov
mov
pop
mov
sbb
push
push
ret
in
mov
popa
add
loopne
std
leave
lea
call
fwait
xchg
and
jmp
push
stc
inc
xor
mov
jl
das
push
sbb
sbb
cltd
repz
xchg
jno
les
mov
jmp
add
rcll
lret
push
jbe
jb
call
imul
fstl
lcall
inc
scas
ret
adc
pop
lahf
inc
pushf
and
call
add
pop
ss
cmpsb
inc
mov
inc
bound
gs
scas
xor
fwait
xor
in
loopne
aad
push
pop
ficoml
testl
mov
mov
jl
aas
push
dec
int3
gs
sub
cmp
out
pop
shrl
dec
jne
sahf
ficompl
cwtl
gs
orl
sub
repnz
sub
cld
in
or
push
jl
scas
inc
inc
mov
cmp
test
mov
lds
adc
add
pop
xor
fwait
mov
adc
xchg
mov
and
les
movsl
in
ret
sub
bnd
std
and
xchg
sub
pop
in
fnstenv
cmovs
rcl
sbb
adc
outsb
shrb
insb
imul
sub
lret
mov
sub
inc
dec
fs
leave
lahf
inc
rcr
or
out
loopne
xchg
cmp
fs
daa
add
xchg
xor
xor
sub
push
out
ds
inc
xlat
sbb
jl
inc
scas
outsl
push
xchg
fcmovb
es
sbb
pushf
in
nop
jl
jns
mov
and
xor
loope
inc
out
jae
jmp
mov
sbb
clc
xor
std
fs
into
movsb
int
jnp
push
int
imul
mov
sub
jne
dec
sub
ljmp
negl
in
lcall
mov
sahf
enter
test
add
xchg
mov
xchg
gs
xlat
and
inc
int3
pop
loop
sub
xchg
and
inc
mov
cltd
ss
fadds
js
sbb
mov
mov
inc
xchg
hlt
fsubrl
jge
mov
inc
mov
int
jge
sbb
jnp
jae
cli
mov
mov
xchg
push
jne
fisubs
shr
push
cmp
popf
mov
into
xlat
js
or
xor
push
lret
mov
add
aad
scas
adc
or
dec
out
push
push
lcall
mov
in
push
inc
repz
pop
orb
gs
add
imul
jns
xchg
and
addr16
cmp
xchg
lea
fistl
out
and
or
jp
jl
inc
in
fs
xor
outsl
icebp
xlat
sbb
mov
pop
jg
aad
addr16
cmp
sbb
lret
mov
hlt
dec
pop
stc
jbe
add
push
scas
sub
fidivl
and
and
repnz
int3
lahf
scas
xor
add
cmp
std
inc
xchg
mov
fwait
xchg
jo
out
pusha
inc
in
daa
pop
xchg
call
add
xor
inc
gs
dec
mov
addr16
pop
pop
xchg
fstl
addb
mov
and
sbb
cmp
cmc
sbb
pop
cmp
idivb
pop
mov
aas
imul
mov
aad
xchg
test
or
dec
pop
insb
rcrl
sbb
rol
data16
test
dec
lods
andb
dec
jo
mov
or
xor
jo
inc
cmp
insl
push
lcall
mov
push
or
push
sarl
inc
pop
sbb
cmp
ljmp
dec
out
fcomp
fwait
loop
psllq
cli
add
and
pop
lock
lea
ljmp
int3
jb
or
bound
and
lods
cmp
outsb
dec
jb
outsb
pop
dec
je
sub
cmpsb
mov
mov
mov
out
mov
cmc
sahf
int3
subl
mov
xor
mov
orl
dec
mov
fs
pop
jle
cmc
jnp
out
iret
cli
orl
mov
inc
ds
addr16
sub
data16
aaa
xchg
fsubs
xchg
xchg
pop
fsub
pop
dec
dec
stos
xor
jmp
in
insl
repz
icebp
sub
sbb
sub
mov
sti
ss
inc
mov
mov
sub
cld
imul
cmp
sub
mov
insl
dec
xchg
sub
std
outsl
vpmulhuw
loopne
jne
imul
mov
sbb
or
pop
into
iret
in
sbb
movsb
cs
gs
and
out
jmp
in
dec
mov
test
sub
repnz
leave
cmp
daa
sbb
dec
ss
inc
pop
in
rcll
rcrb
popa
in
lds
pop
xchg
cmpsb
or
daa
push
and
mov
in
rcrb
sub
adc
sub
pop
das
lcall
add
pop
jg
pop
xor
fstpt
xor
adc
pop
xor
das
aam
xchg
leave
jbe
hlt
and
xor
and
test
push
mov
cmp
sub
addl
test
pop
imul
rcrb
clc
sbb
inc
loopne
arpl
nop
dec
add
dec
push
adc
inc
movsb
xchg
leave
lock
mov
into
sub
call
pop
out
insl
lcall
cmpsl
jns
arpl
add
clc
xlat
fnstsw
fs
sub
insb
scas
mov
mov
inc
pop
lock
mov
push
mov
loope
and
add
test
enter
mov
mov
es
cltd
leave
pop
test
jge
push
ret
ret
hlt
gs
flds
lock
adc
int
inc
push
sub
lea
lds
repnz
test
nop
stos
xor
aaa
dec
in
fisubl
mov
add
jae
xor
mov
js
addr16
sbbb
push
test
lock
mov
jp
lret
jae
enter
mov
cwtl
cli
lret
adc
data16
and
mov
cmp
jle
dec
outsl
movlps
jno
sbb
aaa
cmp
lret
imul
clc
arpl
rcrb
pop
test
mov
lds
test
mov
cltd
mov
ficompl
pop
and
xchg
movl
dec
push
loopne
test
fcompl
jb
imul
rorl
cmpsb
add
lret
push
rorb
scas
mov
adc
lret
shll
sbb
mov
daa
push
out
sub
cltd
cwtl
pop
test
push
dec
test
mov
in
jne
xor
call
sub
test
push
call
sbb
jg
mov
orb
pop
decb
mov
jns
dec
pop
cltd
jmp
test
fld
jecxz
shl
mov
ret
lret
adc
cmpsl
adc
mov
pusha
sbb
mov
loopne
fcomps
jge
xchg
das
pop
leave
jae
ror
mov
or
mov
mov
mov
lret
jmp
sub
int3
lods
inc
int3
ljmp
test
lcall
dec
test
push
call
dec
and
std
sbb
pop
mov
std
lods
test
nop
pop
adc
jecxz
pop
pushf
pop
inc
test
ja
dec
pop
call
clc
jmp
push
cmpsb
cmpsb
sbb
out
cmpsb
or
fdivs
ja
xchg
inc
pop
daa
daa
div
pop
in
push
insb
out
inc
sub
fsubs
pop
cwtl
jle
dec
ficoml
push
pop
xlat
gs
cltd
enter
stos
es
out
popf
mov
sbb
test
push
shlb
dec
loop
mov
call
sub
notl
movsl
push
pop
pop
xor
xlat
mov
out
or
lock
in
pop
push
adc
test
daa
in
pop
dec
test
sub
cmpsb
adc
mov
inc
adc
fbld
push
out
xchg
in
mov
mov
mov
xchg
jbe
push
fucomi
pop
dec
pop
ja
stos
inc
xlat
fcomps
mov
clc
scas
in
fbld
test
js
inc
outsl
xchg
in
je
pop
xchg
push
push
pop
xlat
insb
xchg
aaa
dec
call
pop
fsubr
adc
push
mov
push
lods
push
mov
in
xlat
lods
inc
imul
inc
lcall
xchg
jp
mov
js
mov
test
add
das
stc
push
jl
sbb
idivl
std
mov
jl
or
mov
jno
push
test
std
mov
and
add
sbb
jns
push
gs
xor
pushf
cmp
insl
orl
mov
aas
loope
scas
inc
dec
movsl
sbb
fcomps
js
sub
movb
mov
fstl
xchg
adc
scas
in
push
stc
pop
xor
and
lock
imul
mov
test
sbb
lret
not
mov
push
dec
clc
les
jns
push
inc
add
push
pop
rorb
pop
inc
pop
in
mov
mov
inc
rorl
dec
adc
xchg
add
jecxz
or
sub
sub
roll
lea
push
pop
aaa
jle
pop
jae
dec
lret
jae
outsl
dec
dec
jbe
clc
push
rolb
mov
jno
clc
push
imul
xlat
cs
cmp
movsl
rcr
mov
push
mov
repnz
aad
xchg
lea
daa
push
enter
sbb
fs
sbb
arpl
movsl
fsubrl
data16
testl
out
fwait
packsswb
lret
xor
lea
xchg
mov
mov
jle
addr16
mov
push
jp
xor
movsb
lret
shll
frstor
imul
mov
lcall
scas
repnz
xchg
addr16
es
imul
faddl
stos
lret
leave
or
lds
pop
mov
int
mov
pop
sub
popa
mov
sub
gs
pop
test
or
sbb
sub
fsubrs
fnsave
aad
imul
rclb
movsl
and
test
aas
addr16
cwtl
jl
inc
add
movsb
adc
or
stos
lahf
fucomp
clc
mov
sbb
sbb
in
cmpl
cmc
aam
das
rcrb
sub
pop
inc
and
lcall
popf
jb
add
cmp
jne
pop
mov
in
pushf
mov
clc
gs
popf
popa
test
mov
fsubrs
jb
in
or
pop
hlt
push
mulb
lods
test
xorb
ss
sbb
pop
sbb
in
addr16
mov
inc
scas
out
jns
lea
dec
xchg
addr16
mov
outsb
shlb
or
lahf
loope
frstor
pusha
mov
sbb
out
inc
xchg
imul
fisubrs
inc
pop
mov
jp
call
inc
test
xor
int3
dec
push
dec
test
call
pushf
iret
push
fsubrs
cmp
adc
call
sub
out
iret
and
mov
inc
call
adc
dec
sub
xchg
shl
sub
dec
es
pop
push
sbb
adc
stos
gs
out
pop
out
call
filds
xchg
iret
lods
lds
fwait
nop
xlat
sti
dec
cwtl
mov
pop
dec
js
jmp
xchg
lock
adc
out
hlt
dec
lcall
mov
ficoms
out
mov
cmpsl
cmc
rcll
mov
and
call
shlb
testb
addr16
push
xchg
insb
imul
push
cmpsl
cmpsb
xchg
fbstp
fidivrs
lods
cmp
lods
fildl
sub
push
mull
mul
xchg
jbe
into
gs
pop
outsb
notl
jnp
in
mov
aaa
adc
icebp
add
xor
data16
inc
cmpsl
push
aaa
filds
pop
lods
into
data16
xchg
jbe
cwtl
mov
dec
adc
jmp
cwtl
fsubr
cwtl
negb
push
out
into
shr
pop
lret
test
call
cwtl
movb
rcrb
in
xlat
jb
cmpsb
sbb
cwtl
pushf
js
xchg
nop
test
es
jmp
fdivr
mov
cmpsl
xchg
inc
iret
push
scas
testw
filds
out
inc
xor
xchg
dec
jbe
clc
add
stos
dec
push
iret
es
into
sbb
out
iret
mov
negl
dec
cmp
out
js
mov
stos
ja
pop
pop
inc
mov
mov
pop
int
addb
insl
fcmovnb
push
cmp
lahf
xchg
cmp
lea
inc
out
sbb
adc
or
inc
sub
add
xchg
mov
xchg
mov
pop
insb
fsubl
cvtps2pi
cmpsb
mov
imul
out
push
pop
mov
lods
imul
fsubr
gs
or
inc
mov
movsl
mov
and
aaa
sub
out
inc
gs
movsb
int3
jge
das
ficoml
leave
ds
jb
ljmp
rclb
push
mov
imul
aad
adc
mov
inc
sub
cmp
jae
les
movsl
mov
pop
ljmp
notl
test
imul
sub
fdivrs
aas
hlt
gs
stos
imul
lret
jl
out
das
repnz
jb
repnz
fdivl
pop
inc
test
sbb
fs
leave
sbb
jae
add
hlt
imul
in
je
lahf
pop
mov
sahf
pop
inc
mov
jbe
sbb
cmp
dec
jno
cmpsl
push
leave
call
jg
in
cltd
int
mov
sbb
test
popa
push
insb
ds
lds
shl
leave
mov
lret
es
xchg
pop
sub
and
sub
lods
xchg
sbb
mov
cmp
stos
call
fcom
imul
and
and
push
les
sub
dec
sub
aad
and
cmp
dec
jno
adc
imul
mov
dec
into
inc
or
mov
pop
cwtl
cmpsb
gs
xchg
cmpb
popf
mov
orb
jmp
pop
adc
xlat
repnz
sar
and
jl
xor
xchg
fcoml
push
push
lcall
lcall
push
rorl
fdivrp
xchg
pusha
push
mov
mov
jb
xchg
dec
xchg
out
fnstenv
stos
adc
and
push
pop
xchg
inc
push
ds
int
call
test
lcall
add
xchg
mov
mov
pop
jge
cmp
push
and
xchg
addr16
adc
nop
mov
push
cmc
fcmovb
xchg
addr16
jl
inc
repz
push
xchg
ss
leave
push
addr16
outsl
lds
rclb
cmp
pop
push
inc
sbb
xchg
pop
jno
clc
xchg
add
cld
xchg
je
loopne
fsubs
sub
in
fisubs
hlt
out
mov
fisttps
not
movsb
movb
cmp
imul
mov
loopne
mov
pop
lds
aas
cmp
fwait
mov
inc
jg
mov
test
dec
lods
xchg
fmull
sub
inc
fisubrs
lret
jmp
and
jno
aad
icebp
imul
dec
ja
lret
xor
imulb
imul
lret
popa
add
ret
push
mov
sub
cmp
sbb
mov
or
out
xor
lcall
sar
jbe
add
mov
fwait
pop
loop
loop
jmp
icebp
insb
std
into
cs
push
sbb
data16
lds
imul
hlt
aam
pop
lret
mov
sbb
cwtl
add
in
shl
xchg
xor
pand
test
inc
repnz
adc
mov
mov
inc
push
mov
sbb
fidivs
aaa
jl
lods
gs
jbe
inc
in
leave
and
sbb
repz
fmulp
xlat
rcrb
cmp
pop
dec
movsl
mov
cmpsb
cmp
fidivl
hlt
and
gs
push
ljmp
addr16
push
fisubrs
popf
out
call
or
mov
hlt
mov
xor
inc
addr16
push
xor
leave
or
push
ret
stos
pusha
inc
cmp
cmp
push
dec
ljmp
mov
in
loopne
mov
push
dec
in
aam
push
sub
fwait
sub
loop
mov
int
jo
mov
test
int
popa
push
imul
push
test
push
cmp
ja
adc
adc
iret
mov
sub
cli
xchg
cmp
mov
in
sti
lahf
jecxz
fwait
mov
test
iret
jmp
add
out
lods
xor
mov
in
jmp
out
or
xor
in
movsl
lods
iret
lea
dec
aam
mov
pop
jl
mov
pop
xor
pop
mov
mov
xor
sbb
xchg
rcr
mov
mov
mov
testl
push
rcrl
mov
stc
mov
pop
jg
imul
cmp
movsl
push
xchg
mov
sbb
in
adc
sub
mov
sbb
push
pop
xor
pop
nop
push
push
cmp
mov
es
or
xor
divb
out
test
ret
jecxz
cmc
jo
xor
cmp
aam
mov
pop
scas
xor
jno
push
push
lock
mov
ljmp
xchg
inc
cmpsl
sub
mov
cltd
gs
inc
pop
aas
mov
cmp
adc
lds
adc
daa
xchg
jbe
jl
mov
xchg
xor
cmc
push
cltd
imul
xchg
jecxz
shrb
in
cmp
lret
sbb
mov
cmp
es
out
jmp
sbb
dec
mov
aas
xchg
mul
cli
xchg
loop
popf
fsubr
mov
push
jo
std
cmp
jae
fs
mov
jle
push
imul
pushf
dec
mov
inc
and
imul
shrd
lret
addb
jno
xchg
sbb
lret
mov
mov
xor
fadds
mov
pusha
mov
push
xor
inc
nop
gs
sbb
ljmp
sbb
les
insl
mov
inc
adc
shl
int3
sarb
lea
push
test
nop
insb
test
mov
aaa
enter
shlb
mov
clc
gs
mov
cltd
cmc
sub
pop
mov
das
ja
cmc
fwait
shlb
sub
lock
aaa
sbb
jle
mov
push
cmp
cld
jge
fsts
repz
lds
jae
inc
stos
fmuls
mov
lret
and
push
mov
call
call
mov
mov
movsb
adc
scas
repnz
cmpsl
sbb
xchg
lods
dec
xor
call
loopne
or
loopne
jg
dec
and
insb
dec
push
dec
pop
or
sbb
dec
out
fistps
out
lock
push
clc
out
call
cmp
call
pop
xchg
or
fadds
call
popl
test
dec
mov
sbb
mov
lods
imulb
adcb
daa
stos
call
mov
cld
sarb
movsl
mov
nop
xor
inc
dec
cmpsb
jbe
je
lret
adc
in
jb
mov
into
testb
dec
mov
or
test
imull
dec
fcomps
gs
and
int
mov
out
push
xchg
scas
add
addr16
mov
in
or
push
negb
pusha
xchg
dec
mov
cmpsl
mov
test
xchg
call
xchg
mov
dec
adc
jmp
fadds
out
stc
lods
sarb
xchg
sahf
mov
xchg
mov
mulb
dec
sub
dec
xchg
xchg
xchg
fisttps
lret
pushaw
xchg
push
sbb
es
pop
call
ficoms
xor
mov
xchg
xchg
inc
iret
mov
movsl
pop
mov
cmpsb
dec
inc
pop
mov
push
outsl
dec
aad
addr16
push
push
divb
insb
in
dec
pop
imull
dec
cwtl
out
inc
pop
cwtl
dec
jbe
dec
cmc
xchg
daa
lahf
dec
data16
fsubrs
xor
call
in
cwtl
xlat
test
xchg
xchg
pop
testb
fcoms
push
stc
dec
pusha
push
mov
lock
lret
inc
stos
fcoms
inc
add
mov
call
cmp
sbb
cmp
fs
hlt
nop
jecxz
out
xchg
pop
inc
jne
lret
dec
ret
out
out
iret
lds
int
leave
fwait
addr16
imul
test
inc
loop
stos
adc
add
add
mov
sbb
cwtl
inc
mov
mov
pop
addr16
pop
lds
clc
mov
in
stos
mov
push
cmpsb
scas
movsb
xchg
sbb
divb
push
add
mov
or
pop
in
dec
jl
scas
jp
dec
mov
xchg
imul
add
in
sub
xchg
mov
cmc
aaa
arpl
outsl
mulb
xor
inc
sub
pop
sahf
add
xor
mov
or
dec
insl
ret
sub
imul
aaa
add
icebp
sbb
mov
and
mov
mov
add
sbb
jle
mov
gs
push
xchg
cld
subb
addr16
mov
into
or
push
sub
data16
addr16
or
inc
cmc
ficompl
fwait
sub
imul
or
and
loopne
mov
lret
mov
xchg
int
cmc
add
push
nop
sahf
and
lret
xor
mov
add
hlt
add
lea
adc
add
test
cmp
dec
inc
cmp
adc
push
outsl
mov
dec
and
push
adc
insl
repz
fcoml
xor
lahf
jle
cmpsl
fcomps
cli
jns
pop
cmp
lret
mov
out
sbb
imull
add
test
fsub
cmp
repz
lods
add
test
pushf
sbb
dec
imul
enter
mov
lods
pop
lcall
mov
push
push
lods
mov
xchg
sti
cmp
xchg
in
leave
std
in
popf
std
cli
inc
and
xlat
in
mov
iret
in
stos
inc
dec
lret
hlt
xchg
xor
dec
bound
sub
add
cwtl
lcall
mov
int
mov
sbb
pop
adc
faddp
push
test
xchg
pop
inc
mov
dec
cmp
mov
jb
mov
mov
addr16
fsubr
xchg
mov
xchg
addr16
xchg
push
pop
xchg
xor
xchg
int3
adc
fsubrs
stc
xchg
cmpb
or
push
cltd
cwtl
aaa
push
fmull
notl
and
imulb
pop
mov
fistpl
inc
mov
aad
es
mov
and
in
sbb
mov
lret
mov
jb
stos
dec
xchg
push
pop
cld
incb
jmp
add
pop
mov
pop
shlb
xchg
outsb
add
dec
pop
add
lock
rolb
lds
test
mov
sbb
cmpsb
jo
fcompl
sub
fsubl
adc
pop
fadd
lods
mov
cmc
enter
nop
imul
ficompl
adc
or
loopne
dec
sti
imul
shr
inc
lock
rcrb
int3
into
and
xor
or
sub
in
mov
in
movsl
movsl
xchg
je
vaddsubps
leave
and
pop
je
sub
jnp
js
mov
dec
sub
push
lds
ds
outsb
jmp
inc
push
sti
andb
pusha
dec
inc
dec
leave
and
mov
inc
cmp
aad
inc
stos
lds
add
cwtl
cmc
mov
mov
test
jns
test
sub
scas
jle
int
inc
pop
gs
pop
or
imul
inc
jns
movsb
xchg
insb
xchg
nop
into
add
cltd
lock
nop
cmp
mov
orb
gs
fucomi
pop
push
push
and
and
mov
jle
mov
cmp
xchg
add
cmpsb
aad
ljmp
mov
sbb
mov
mov
out
loopne
std
popa
mov
push
or
lock
lds
call
int3
mov
pop
xchg
mov
jge
pop
ds
test
fcomi
std
pop
cmpsb
int3
dec
inc
dec
pop
dec
shl
xchg
mov
push
mov
movsl
and
mov
insl
sti
lret
cli
es
aas
pop
repnz
lea
mov
lds
cli
inc
cmovp
cmp
outsb
mov
sarb
mov
mov
xchg
jo
stos
std
push
test
sahf
adcl
shlb
arpl
cwtl
nop
imul
rorb
inc
push
jmp
ja
jne
push
adc
dec
xchg
inc
inc
cltd
adc
mov
xor
faddl
mov
call
jge
mov
and
mov
dec
test
jno
lahf
mov
mov
call
das
js
jg
jl
int3
push
or
mov
mov
jae
in
test
dec
push
or
jo
out
gs
cmpsl
inc
out
mov
push
cmp
call
testb
cwtl
test
addr16
rorl
imul
sub
js
mov
fucomp
dec
xchg
test
lcall
push
cmpsb
lock
cmpsb
dec
out
cmpsl
push
push
std
xchg
xor
xor
mov
movsl
add
dec
or
and
aad
test
ror
inc
lret
mov
adc
push
lahf
xchg
iret
cmpsb
mov
add
imul
daa
call
pop
mov
mov
push
stc
test
push
lock
cmpsl
mov
call
jnp
out
or
mov
inc
push
push
fs
sbb
pop
out
sbb
daa
jmp
adc
clc
inc
dec
dec
loope
xor
xchg
push
dec
fsubs
xor
enter
push
test
adc
cmp
insb
in
ss
cmpsl
in
out
push
pop
or
push
or
call
pusha
test
add
imul
lahf
and
data16
test
push
movsl
ljmp
push
sub
fadds
xchg
push
lahf
lretw
jne
and
lret
mov
pop
lret
xchg
lods
and
in
or
xchg
es
xchg
fsubr
mov
out
rol
xchg
mov
mov
cltd
mov
mov
pusha
out
cmc
in
cmpsl
fucomi
push
push
pop
out
in
xchg
testb
mov
fcmovb
push
in
cmc
stc
es
xchg
mov
in
clc
dec
addr16
pop
push
and
mov
in
and
mov
add
ss
hlt
clc
mov
imul
movsb
int
daa
ds
ljmp
inc
out
std
lea
lods
sahf
mov
sub
inc
mov
inc
imul
lods
in
inc
push
push
std
leave
fs
cwtl
into
inc
xchg
add
scas
gs
mov
imul
xchg
je
xchg
pop
pop
out
sub
sahf
rclb
jle
rolb
pop
sahf
aas
xlat
fsubrs
mov
repnz
add
xchg
popa
rclb
cmp
inc
adc
js
mov
push
mov
sbb
cmp
jb
lahf
jp
jmp
sbb
test
cmpsb
gs
mov
mov
repz
fs
xchg
xchg
xchg
and
daa
hlt
lods
push
lds
leave
shlb
xchg
cmp
mov
test
push
xlat
mov
sub
dec
sub
shrb
push
int3
sbb
or
bound
pop
add
imul
jmp
shrl
push
sub
data16
jae
fdivs
mov
cmp
cmp
add
push
adc
fiaddl
pop
xlat
adc
mov
mov
xchg
in
pop
into
xchg
aas
bound
push
rorb
sahf
movsb
faddl
mov
mov
add
dec
and
lcall
fildll
call
insl
shll
push
imul
sub
xlat
inc
jns
in
ds
jno
jg
add
xchg
cmpsb
add
cmp
fnstcw
aas
jno
out
add
fs
push
xchg
xchg
clc
jb
in
mov
imul
jae
xor
mov
xchg
addr16
imul
mov
add
jmp
or
lds
inc
jns
imul
gs
scas
dec
dec
int
imul
mov
jno
or
push
or
data16
outsl
pop
fsubs
dec
and
ljmp
mov
xchg
xchg
push
sbb
data16
push
push
mov
push
adc
sub
cld
out
pop
sub
mov
sub
sbb
jmp
fisubl
mov
popf
sbb
push
cmp
and
sti
fmul
push
sub
sub
scas
jns
xor
jl
xchg
outsl
test
cs
cld
inc
cmp
or
arpl
insb
mov
nopl
mov
adc
addr16
xor
cmc
mov
inc
js
pushw
xchg
out
aaa
mov
inc
loopne
gs
loop
push
enter
inc
lds
outsb
cmpsb
rorl
lods
lods
xchg
lahf
nop
ljmp
fdivrl
in
sbb
cs
in
or
sbb
jl
add
and
sbb
aam
addr16
pop
imul
fsubrs
or
add
and
lds
in
adc
mov
aad
mov
xor
adc
mov
jge
lret
add
ret
outsl
sub
ljmp
enter
sbb
xlat
jbe
inc
in
gs
jno
and
xchg
cmpsl
mov
mov
test
lea
jbe
mov
cmp
and
jne
popa
bound
sub
sbb
sbb
push
dec
pop
sub
stos
jo
adc
hlt
test
push
aad
jmp
daa
cmpsl
test
jns
fwait
out
mov
inc
addb
and
inc
or
xor
outsb
lock
cltd
dec
push
gs
cmp
adc
xchg
dec
aad
mov
sub
test
ds
inc
call
jnp
movsl
fsub
test
add
and
or
xor
or
fildl
dec
test
imul
cmp
or
stos
mov
and
add
sti
outsb
stos
lcall
pop
mov
jge,pn
adc
xchg
fisttpl
push
test
clc
mov
gs
mov
out
ss
mov
fdiv
adc
les
pop
mull
stos
mov
cmp
stos
cwtl
and
xchg
and
lret
stos
dec
movsl
cmp
mov
xor
aam
test
xor
push
xchg
imul
cmp
add
fiadds
and
or
mov
sub
fsubl
jmp
inc
push
adc
or
mov
int3
addr16
pop
jecxz
sbb
dec
jb
pusha
js
fadd
fdivrl
or
mov
je
jl
int
dec
push
in
fcompl
shl
mov
push
lock
repz
in
mov
int
xchg
add
xor
jecxz
std
mov
je
pop
xchg
dec
fsubrs
pop
push
rorb
incb
mov
test
pop
orb
mov
mull
dec
sbb
dec
jge
lds
leave
sbb
fsts
mov
pop
cs
cmp
dec
ficoml
mov
rcll
pop
scas
in
add
or
repz
movsl
cmp
cltd
and
outsl
jg
xlat
imul
iret
nop
mov
out
in
xor
out
gs
in
call
call
int
mov
dec
jno
out
ljmp
movsl
add
aad
dec
xchg
scas
rol
and
daa
ret
sub
scas
aad
add
jbe
loope
in
aad
cmp
mov
cwtl
stc
test
enter
mov
test
out
cltd
imul
cmpsb
push
leave
xchg
lcall
push
jle
dec
ret
movsl
nop
jo
mov
mov
and
test
sub
or
imul
pop
mov
pop
and
in
lea
xchg
xchg
inc
gs
imul
jmp
mov
sbb
out
cmpsb
out
xlat
aad
sbb
pusha
xchg
cltd
cmpsb
sbb
cmp
and
cld
iret
adc
adc
dec
out
and
andl
fsubs
ret
ds
loop
adc
stos
sbb
push
mov
call
test
xchg
icebp
push
pop
mov
push
jl
repz
xchg
cmp
mov
push
mov
sahf
inc
inc
mull
int
mov
xor
adc
sub
push
insl
insb
ljmp
int
mov
mov
lds
sar
dec
imul
sub
mov
xchg
pop
stos
cli
cmp
imul
mov
aad
movsl
xor
repz
push
out
clc
xchg
inc
inc
test
inc
push
jl
mov
lods
jge
sub
xchg
pop
aas
aam
fdivrs
mov
fbstp
dec
mov
enter
add
mov
dec
cmp
xchg
gs
jnp
mov
jp
addr16
inc
mulb
sti
pushf
lcall
mov
or
ficoms
jg
push
mov
adc
pop
push
mov
in
test
mov
xor
and
mov
rolb
shll
test
test
fimull
adc
push
add
ds
sbb
ljmp
or
sbb
push
pop
mov
push
fstpt
inc
testb
xchg
mov
fsubs
clc
shll
fucomip
xchg
pop
sbb
lock
push
mov
les
cmpsl
lret
pop
adcb
cpuid
xchg
mov
jmp
xorb
sub
and
push
push
xor
push
popa
sbb
mov
xor
addr16
fidivrs
lods
adc
jg
aam
dec
and
lock
jge
inc
sbb
sbb
inc
imul
stc
adc
and
or
pop
lds
mov
cmp
sub
test
sti
add
and
xor
xchg
xor
push
pusha
push
aas
enter
jle
add
lea
sub
cmpsb
push
jns
lds
xchg
inc
xchg
cmpsb
adc
push
data16
cs
leave
and
lods
mov
cmc
pop
pop
adc
push
addr16
and
or
out
testl
shll
daa
in
cmpsb
std
out
iret
xchg
mov
jecxz
or
hlt
add
add
popa
add
cmp
cmp
cmp
dec
cmp
std
pushf
sub
xor
test
test
jne
sbb
fcompl
xchg
test
cmpsb
fsubl
shrb
pop
js
aad
xchg
push
aam
add
lahf
je
scas
sbb
imul
addr16
lods
dec
adc
ja
jo
sub
or
sbb
clc
lock
popa
enter
xchg
test
sbb
xchg
pop
pop
cmc
cmp
and
fnsave
mov
inc
hlt
mov
inc
xchg
test
xchg
leave
int
leave
xchg
rcl
sub
js
sarl
or
fs
pop
sub
imul
inc
movsl
into
cmp
int3
cmpl
lds
aam
ljmp
clc
sbb
lock
gs
arpl
fadd
in
incb
add
gs
dec
pusha
shlb
mov
aas
mov
xchg
pop
movsb
sub
xlat
cmpsl
lds
in
ljmp
lea
mov
imul
rolb
sbb
add
fwait
pop
clc
out
imul
jmp
stos
jp
xchg
out
lock
dec
add
fbld
push
xchg
dec
test
or
repnz
inc
sbb
mov
sbb
add
loop
mov
and
mov
push
rcrb
rcrl
mov
push
xor
dec
pop
push
pop
and
gs
sbbb
or
popf
push
cmc
push
test
popa
fsubrl
mov
in
sub
sarb
sub
and
and
rcll
in
or
mov
call
aas
xchg
popf
iret
dec
gs
pusha
push
fisubrl
arpl
mov
mov
cmp
push
gs
test
ljmp
cmc
psubusb
leave
sbb
into
jae
sub
or
test
push
std
mov
fimull
dec
sarb
lods
dec
aam
jmp
dec
fcomps
add
pop
fisttps
adc
outsb
xchg
enter
add
mov
mov
lods
mov
xor
fdivrl
sub
mov
sbb
sub
cmp
and
mov
call
adc
push
push
in
gs
dec
dec
xchg
lcall
imul
or
test
inc
xchg
push
int3
xchg
pop
mov
lea
jo
xlat
cmp
ljmp
mov
inc
mov
cltd
pop
jmp
or
sub
rcrb
int3
jecxz
sbb
pop
xor
jne
xchg
push
inc
jg
dec
push
mov
clc
xchg
cmp
int3
mov
jns
xor
mov
rcll
std
js
fdivr
js
mov
out
jp
pop
lcall
sub
xor
ret
cld
xchg
gs
cmp
nop
scas
lahf
adc
divb
jmp
shlb
pause
xchg
movsb
jmp
push
ret
dec
ljmp
xor
pusha
idivb
ljmp
add
cmp
fsubs
mov
dec
iret
push
nop
and
fdivp
repnz
popa
push
stos
mov
sbb
int3
sahf
xchg
sub
fisubs
xchg
mov
xlat
mov
or
jmp
lods
lret
mov
mov
pop
pop
dec
fst
cmp
data16
movsb
jge
or
add
cmp
add
mov
inc
inc
sbb
and
es
jmp
insl
movsb
sub
and
mov
dec
sbb
add
fxch
mov
mov
mov
jle
jns
int
imul
loop
cmp
ljmp
push
jns
inc
mov
neg
sbb
mov
jmp
jmp
in
jno
cmp
clc
fs
mov
sbb
xor
call
ss
rcrb
sub
add
dec
mov
cld
mov
mov
cpuid
dec
dec
add
ja
nop
jne
mov
imul
je
cmp
pop
lcall
and
addr16
xchg
sti
push
pop
inc
out
adc
call
or
in
lea
fsubr
push
cmp
repz
int3
or
jb
rolb
pop
mov
push
aas
inc
fstpt
cmc
and
mov
cmpsl
cmp
in
lret
mov
dec
or
xchg
xchg
cltd
inc
sub
insl
cmpsb
sarl
insb
decl
mov
es
xchg
pop
movsb
pusha
xor
in
xor
sahf
jae
mov
push
pop
popf
andl
movsl
std
push
aam
lds
inc
test
popf
xor
insl
sub
pusha
mov
sub
cmp
in
negb
hlt
pop
inc
pop
fdivs
sbb
sub
stc
rorb
test
bound
rcrl
sub
cmpl
lds
lret
fwait
push
push
sbb
shl
xchg
addr16
jo
cmp
dec
jne
mov
mov
rorl
movb
lcall
hlt
jle
or
dec
loop
xorl
mov
or
fsubs
clc
cltd
fildll
sbb
les
push
jmp
pop
xor
dec
xor
xor
fstpl
in
xchg
cmc
pop
sbb
mov
sub
xor
push
sub
imul
and
pop
push
mov
push
imul
push
cli
dec
bound
pop
ret
xorb
outsl
fidivrl
ret
push
add
loopne
hlt
iret
shll
movsl
fmull
imul
push
mov
out
sbb
insb
xchg
dec
add
dec
imul
push
xor
inc
cmp
mov
xor
cmp
sbb
into
stos
mov
in
mov
sahf
sbb
xchg
mov
xor
xor
or
mov
bound
shll
lods
dec
and
in
fs
push
in
test
imul
test
mov
int
hlt
xchg
mov
aaa
imul
xchg
data16
lock
std
imul
jmp
dec
and
sub
hlt
gs
or
or
mov
mov
mov
in
inc
imul
out
cmc
or
adc
or
cmp
icebp
data16
cmpsb
nopl
stos
or
jno
or
adcl
in
mov
test
push
fidivrs
jne
movsl
push
xor
test
mov
test
mov
or
fmulp
cmpsl
cmpb
mov
xor
rclb
mov
sub
ja
adc
inc
xchg
inc
gs
ss
jbe
cmpsb
inc
adc
adc
iret
hlt
xor
and
pusha
mov
clc
imul
xchg
imul
dec
repz
add
ret
push
inc
pop
add
test
fs
ljmp
cmp
shll
test
inc
leave
cmp
insl
fs
fwait
push
loope
sub
fisubrl
insb
loope
imul
icebp
xchg
or
push
movl
mov
xchg
gs
lea
jmp
shrb
pop
nop
lods
sarb
or
jb
inc
pop
xor
mov
push
jne
sbb
lds
loopne
and
mov
cmpl
jo
mov
in
add
xchg
pop
mov
movsl
dec
adcb
pop
add
dec
lods
xor
int3
adc
cmpsb
dec
lret
or
aad
mulb
mov
mull
hlt
push
dec
add
testl
add
xchg
mov
xlat
mulb
mov
ds
lds
insl
in
mov
dec
cmp
dec
stc
and
cmp
imul
cmp
cmpsb
dec
sbb
and
push
inc
dec
int3
shll
das
hlt
cmp
inc
stos
sahf
lret
cmp
dec
xchg
sbb
mov
xor
scas
shrb
mov
enter
mov
data16
xchg
inc
mov
or
mov
outsl
push
aad
ficompl
jno
jae
sub
test
out
pop
and
sbb
push
scas
xor
inc
xor
add
pop
ds
iret
test
mov
popf
and
fadds
fs
js
xor
out
xor
clc
icebp
push
addr16
addb
adc
or
jl
out
mov
sbb
pop
fsubrl
jmp
cmp
jle
ret
jp
mov
cwtl
mov
lods
sub
add
mov
loopne
repz
leave
out
je
xchg
fcompl
out
add
mov
dec
jne
stos
sub
mov
mov
pop
aaa
cld
sub
fwait
aad
xchg
es
std
inc
adc
or
das
mov
pop
cli
jnp
loopne
gs
pop
int
mov
jecxz
pop
dec
fwait
outsl
leave
mov
add
cmp
fcmovne
or
mov
orl
outsl
in
gs
cmp
pop
mov
test
loopne
gs
popaw
pop
call
rorb
aad
test
or
mull
mov
push
mov
subl
lahf
push
xor
ja
and
pop
stc
push
loop
out
lea
pushf
repnz
clc
xchg
jp
pop
nop
pop
loope
enter
jle
repnz
push
rcrb
xor
and
and
cmp
outsl
sahf
add
test
into
ret
subl
push
add
push
out
pop
or
in
xor
jae
jmp
int3
sbb
cmp
in
xchg
pop
int3
push
addr16
addl
jle
and
insl
repz
into
and
xor
pop
mov
movsl
mov
sbb
mov
sub
scas
jl
sub
xlat
push
js
jl
bnd
cld
mov
dec
sti
in
mov
in
rol
sbb
mov
push
popa
inc
cmp
rorl
insl
pop
inc
les
lds
fidivl
jmp
adc
cmpl
add
hlt
xchg
pop
js
bswap
in
mov
sahf
jge
enter
loope
sbb
xchg
and
add
ljmp
mov
arpl
mov
jecxz
cmp
leave
fwait
push
das
adc
mov
ret
push
je
xorb
cmpsb
push
gs
cli
sub
leave
xchg
imul
ljmp
mov
mov
xorl
cwtl
mov
cmp
out
cmpsl
mov
aad
xchg
jle
jnp
push
sub
lods
mov
jmp
mov
jp
adc
in
add
mov
push
mov
xchg
sbb
xchg
mov
or
js
mov
into
xchg
cmpsb
jae
test
cmp
dec
dec
aas
and
rclb
sub
insl
cmp
xchg
nop
dec
or
sub
gs
iret
les
imul
out
cmp
push
cmpl
movsl
push
stos
sbb
and
lds
pop
push
fld
out
ljmp
jb
sub
mov
in
cmp
sbb
test
jns
pop
movsl
add
jae
repz
test
repnz
pop
int
inc
rcrb
inc
and
into
xor
aam
rolb
and
nop
icebp
xor
mulb
xchg
pop
ljmp
mov
push
mov
int
xchg
int3
pop
fld
or
add
outsl
leave
push
cld
inc
adc
sbb
sbb
enter
aas
sbb
rorl
xchg
sti
and
dec
outsb
cmpsb
insb
cmp
or
scas
data16
cmc
mov
add
sbb
arpl
xlat
aas
fcomps
out
cmp
and
dec
or
push
adc
int
jl
out
out
jl
mov
xchg
repnz
cs
int
lea
jge
in
inc
pop
push
js
fmuls
mov
and
dec
scas
bound
testl
fs
or
jmp
in
clc
push
xor
loopne
mov
xor
stos
push
test
icebp
stos
mov
fmulp
add
or
dec
iret
jge
gs
loop
add
or
mov
xor
push
pusha
inc
cmc
mov
or
cmp
and
cs
adcl
lea
gs
mov
lret
mov
mulb
inc
dec
cmc
outsl
sbb
repz
xchg
outsl
enter
sub
sub
mov
mov
jg
lret
je
nop
repnz
lret
movsb
dec
imul
outsl
xchg
in
mov
xchg
jbe
push
ret
and
xchg
or
jb
mov
xor
xchg
xor
roll
xchg
imul
adc
inc
lea
cmpl
sahf
subb
arpl
les
mov
mov
xchg
test
cmc
out
adc
call
jmp
mov
jno
pop
inc
jecxz
fwait
int3
add
cmp
arpl
xchg
clc
in
inc
sub
push
rclb
pop
mov
mov
cmpsl
js
push
cmp
xor
add
addr16
mov
cmpsb
les
pop
add
gs
in
in
and
sbb
mov
out
gs
or
or
lods
xchg
std
andb
mov
enter
lock
sbb
mov
leave
call
sbb
ljmp
ja
ja
mov
lahf
xor
dec
dec
fdivl
stos
dec
loopne
cmc
cmp
and
jo
popf
jg
mov
stc
mov
cmp
or
js
inc
sub
adc
inc
mov
in
push
repz
adc
sbbb
push
xor
in
cmp
mov
cmp
test
and
call
jbe
mov
icebp
mov
outsl
adc
or
cli
clc
pop
mov
fimuls
mov
adc
lock
ss
sbb
sbb
pop
movsb
cwtl
pop
enter
inc
popf
mov
jmp
cltd
aam
test
leave
mov
ljmp
ljmp
in
dec
lds
xchg
and
popa
call
mov
mov
cmp
mov
jo
cmp
push
rorb
lea
push
enter
enter
andb
push
jno
push
clc
test
push
call
enter
mov
loop
lea
call
cmc
scas
sbb
dec
inc
dec
ss
icebp
fwait
in
daa
adc
lods
push
cmp
push
mov
aad
jne
loop
or
cltd
xlat
sti
fs
pop
mov
push
inc
sub
bound
sbb
sbb
fcomps
scas
das
in
adc
mov
ds
mov
out
and
pushf
scas
hlt
and
add
call
cli
shl
dec
jne
cwtl
xor
dec
sbb
mov
dec
popa
sub
popa
insb
xchg
mov
cwtl
shrl
pop
inc
clc
add
test
push
pop
inc
testl
lcall
mov
push
mov
addr16
sbb
fwait
dec
mov
mov
int
in
loopne
aad
sbb
aaa
aaa
mov
xor
fidivrl
test
cmp
dec
pop
out
stos
jnp
lea
xchg
dec
inc
and
loopne
ds
mov
mov
enter
sbb
es
andl
adc
or
lds
mov
jg
pop
in
sub
mov
sti
mov
mov
cld
stos
dec
in
out
inc
ja
scas
lods
lret
jmp
and
lret
cmc
pop
rorl
push
jbe
enter
cmc
pop
out
jg
fld
xor
mull
movsb
gs
rcl
cmp
push
test
pop
andl
mov
in
jg
xor
dec
mov
mov
rol
cmp
inc
mov
sub
or
inc
andl
cmp
push
loope
inc
ficomps
js
mov
sbb
cltd
enter
cmp
jmp
hlt
sbb
sahf
popa
out
lds
mov
pop
inc
ds
inc
cmp
movsl
leave
pop
loope
or
mov
cli
push
outsl
test
rorb
sub
pushf
lret
gs
xor
scas
scas
fwait
fs
mov
inc
subb
cmc
ficoml
xor
lock
stc
in
sbb
scas
lds
xchg
gs
cld
fwait
jno
insb
push
ret
lea
int3
jbe
mov
ljmp
gs
mov
in
int3
sub
pop
inc
mov
repnz
push
data16
gs
int3
mov
sbb
mov
std
out
sbb
jp
popf
fildl
hlt
xchg
xchg
int
mov
in
cmp
ficoms
mov
out
mov
mov
sti
loop
inc
push
fnstenv
lds
sub
call
jmp
xchg
je
xor
movsb
imul
mov
or
sahf
sub
inc
xchg
hlt
pop
fdivrs
inc
out
sub
lods
lret
mov
cwtl
je
movsb
push
xor
add
rorb
imul
cld
add
leave
cmp
pusha
aad
add
xchg
mov
outsb
xchg
ss
lret
sub
dec
xlat
out
out
xlat
dec
sti
imull
scas
mov
pop
imul
shrl
mov
test
xor
cmp
or
sub
mov
mul
inc
xchg
mov
and
flds
lret
cwtl
lahf
imul
mov
iret
dec
in
insb
in
stos
sar
shl
fisttps
push
aad
jbe,pt
lock
pop
push
mov
add
cmp
cli
cmp
popf
gs
dec
mov
inc
mov
or
sub
xchg
add
in
add
pop
pop
loopne
mov
js
xchg
lahf
xlat
inc
loope
add
rcrl
repnz
sub
xchg
sub
pusha
sbb
jl
add
xadd
addb
lcall
das
and
ljmp
mov
jne
les
mov
inc
mov
lods
ficoml
pop
es
xchg
insl
data16
int3
lcall
shlb
add
mov
mov
in
or
pop
aam
lods
cmp
test
fimull
orb
jbe
neg
pusha
fcomi
add
cli
bound
in
fildl
out
stos
call
mov
ja
rolb
and
mov
gs
nop
imul
and
mov
movsb
jp
dec
push
movsb
in
push
repz
pop
or
and
loopne
and
sub
stos
sub
das
pop
loopne
push
pop
cmpsb
stc
movsb
or
rorb
fwait
insb
clc
in
loope
call
and
jge
mov
push
mov
fstp
xchg
gs
pop
pop
push
lods
aad
dec
inc
dec
lock
in
pop
lret
jge
mov
sub
ret
or
hlt
clc
jle
cmpsb
xchg
xchg
nop
imul
jae
or
mov
into
iret
push
mull
imul
sahf
sbb
aad
inc
and
xchg
into
shl
mov
adc
cmp
cmp
movsl
jl
pop
int
cmp
push
repnz
in
cmp
jge
in
ret
rcrb
sbb
xchg
rorb
or
mov
iret
jg
lock
leave
lcall
js
lods
sbb
popf
sub
sbbl
jle
mov
push
fxch
outsb
incb
inc
testl
lret
pop
fdivl
jno
dec
jb
xor
gs
dec
int3
stc
out
mov
or
nop
mov
test
sti
push
jno
sbb
stos
mov
cmp
mov
adc
jne
mov
nop
lds
lahf
clc
cli
pop
std
lret
or
inc
add
mov
imul
inc
jmp
sbb
sub
notl
nop
movsl
push
add
testl
dec
pop
or
fisttps
stos
push
imull
mov
hlt
pop
fs
les
inc
jo
sub
orb
lock
cmp
fdivrs
jmp
subb
bound
pop
push
xchg
stc
bound
mov
xor
shrl
fisubrs
fadd
lock
xchg
ljmp
pusha
cmp
sbb
mov
jle
pop
cltd
xchg
loopne
adc
lds
pusha
ja
test
scas
test
mov
mov
rcll
adcb
into
clc
imul
xor
fildll
fdivrs
cmp
adc
subl
mov
mov
cmp
sub
aaa
pop
push
scas
adc
mov
mov
mov
xchg
mov
fcomi
movsl
push
mov
sbb
adc
imul
push
in
or
adc
lcall
inc
sub
call
out
cmp
dec
xor
call
add
cli
jg
xchg
nop
mov
sti
xor
mov
and
pop
push
ds
loope
repz
push
test
push
cwtl
nop
faddl
cmc
push
mov
ret
fmul
cmp
pop
outsl
jno
adc
adc
cmp
xor
cld
rorb
add
xor
dec
mov
pop
xchg
fsubs
push
into
dec
sarl
pop
sub
jb
inc
nop
std
negb
stos
fs
jge
aam
leave
inc
in
push
gs
addl
ss
adc
mov
sahf
xor
dec
fs
cltd
cmp
pop
add
cmpsb
dec
and
in
xchg
inc
mov
cmp
cmp
jb
jns
loop
std
pop
cwtl
fcoms
loopne
call
inc
push
insl
shlb
imul
add
push
or
out
and
test
sub
addr16
ficoml
rorl
out
addr16
leave
or
sbb
pop
aam
insl
and
push
jge
or
cmp
jmp
adc
sbb
stos
cld
dec
ss
call
mov
and
push
in
ja
out
lds
gs
push
pop
sub
or
into
addr16
arpl
out
sbb
scas
in
xlat
pop
lea
adc
out
addr16
mov
dec
cmp
sbb
sahf
insl
test
inc
dec
pop
cmp
add
push
and
inc
inc
and
jno
mov
out
lahf
push
addr16
stc
mov
stc
dec
imul
adc
xchg
add
shl
xchg
mov
ljmp
imul
aas
in
gs
adc
xchg
ss
xchg
adc
mov
mov
dec
fsubl
add
icebp
in
cmp
movb
adc
mov
mov
or
mov
adcb
call
xchg
jge
sub
fnstenv
cmpl
mov
fstp
xor
leave
jge
sub
dec
push
mov
adc
inc
jp
add
push
inc
xchg
movsl
insl
movsb
add
dec
daa
push
nop
cmpsb
popfw
adc
sub
dec
mov
movsl
inc
mov
cltd
ret
enter
fwait
popa
aas
repz
outsb
pop
roll
gs
fnstsw
loope
lcall
mov
mov
add
pop
aad
movsb
call
mov
or
pop
lret
dec
xor
or
mov
jp
xchg
bound
mov
push
lea
sbb
inc
lock
pop
lret
hlt
cmp
pop
stos
ljmp
ror
pop
cmpsb
scas
stc
lcall
nop
mov
mov
shl
xchg
and
nop
pop
leave
xchg
sub
cmpsl
dec
sub
aas
test
or
cs
mov
cmc
mov
pop
or
popf
xchg
mov
push
ja
jle
imul
dec
jl
dec
sbb
ret
repz
lahf
or
insl
aaa
mov
in
mov
or
incb
jnp
dec
out
push
sbb
fadds
addb
pop
pop
dec
add
fisubl
push
js
jb
xor
popa
adc
sbb
ds
and
shll
mov
cli
ja
mov
sti
add
mov
inc
inc
push
adcb
dec
popf
nop
jae
dec
sub
out
mov
inc
lret
bound
jnp
jp
clc
push
insb
pop
push
or
push
cmp
jbe
inc
int3
popf
mov
mov
loope
test
cli
lret
mov
mov
xchg
gs
push
sub
xor
cmpsb
lret
sbb
ret
xchg
loope
jp
imul
fldenv
aad
xchg
scas
cmc
aas
sbb
loope
lcall
xchg
sti
inc
je
jl
stc
xchg
and
cltd
jb
add
sub
lock
leave
out
inc
sub
cli
pushf
fdivrl
test
into
add
rorb
xor
cmp
mov
rorb
nop
lods
test
fs
loope
out
popf
lret
int
aad
push
ljmp
jecxz
lea
push
or
in
fmul
sub
xor
lods
sub
int
sub
lods
stc
in
xchg
mov
inc
out
insl
sbb
dec
mov
fmul
subb
fists
mov
inc
mov
fisttps
cmpsl
or
outsl
xor
frstor
sbb
pop
pop
xor
outsl
gs
mov
fiaddl
jg
pop
imul
cmp
clc
addr16
jne
pop
sti
test
or
into
dec
xchg
out
pop
xchg
and
dec
sub
loope
xchg
hlt
mov
adc
gs
xchg
movsl
sahf
lcall
jb
pop
test
nop
pop
push
jl
xchg
cmp
jae
orl
sbb
pop
addr16
adc
mov
jmp
sub
sbb
push
fisubrs
daa
sub
jns
out
jae
inc
cmpsb
sub
push
into
mov
jne
add
cmc
out
mov
and
fstl
repnz
dec
jge
mov
mov
mov
cmp
push
mov
jl
jae
sbb
sub
xor
inc
inc
mov
sbb
adc
shlb
gs
addr16
cltd
cmp
mov
movsb
cwtl
lea
stos
xor
lods
sbb
scas
push
mov
out
leave
lds
testl
mov
shlb
nop
or
repnz
lret
mov
divb
scas
dec
testl
and
fs
mov
xchg
xor
add
in
int
lods
out
lret
inc
cmp
push
pop
nop
jbe
iret
int3
movsb
call
push
dec
cmpsb
or
sub
mov
jne
mov
lcall
jae
lock
ret
out
loopne
les
mov
fwait
dec
mov
sahf
mov
vphadduwq
mov
rcl
sbb
mov
int
lahf
fwait
pop
pop
fwait
or
inc
cli
or
sub
inc
addr16
aaa
pop
out
vxorps
leave
sbb
pop
sub
notl
cmp
dec
shrl
mov
jg
rcl
in
jmp
test
lods
push
inc
dec
mov
shlb
mov
gs
mov
mov
cmp
into
icebp
sbb
jo
test
xorb
xchg
out
inc
scas
cmp
or
mov
pop
inc
adc
pushf
rcrl
mov
push
rcll
mov
inc
loope
push
shr
aam
addr16
inc
push
data16
sbb
fildll
out
mov
dec
cmp
outsb
int3
sub
andl
jecxz
test
stos
push
into
dec
dec
jge,pn
pop
pop
sub
add
fwait
push
loope
lds
int
inc
cmp
push
popa
int
clc
mov
mov
push
imul
dec
xchg
aam
cmpsb
pop
mov
imul
addr16
cltd
push
stos
out
not
dec
and
pushf
stc
xor
stc
fs
push
gs
pop
dec
adc
pop
push
dec
cwtl
xor
xchg
repz
xor
mov
aad
lea
out
pop
pop
ss
mulb
dec
pusha
dec
dec
movsb
in
clc
cmp
lret
add
outsb
movsl
addr16
int3
insb
add
dec
popf
in
popf
dec
xchg
jmp
adc
xor
sub
mov
subb
mov
adc
push
inc
fcoml
cltd
or
popf
inc
mull
cld
push
repz
je
data16
leave
mov
test
popa
sbb
push
test
jns
mov
sbb
or
jbe
and
jb
mov
cmp
inc
mov
fyl2x
in
enter
xchg
fcomps
cli
popa
int
add
movsb
mov
addr16
incb
ret
push
sarb
das
loope,pt
in
dec
mov
lret
sbb
or
jmp
xchg
cmpsb
sbb
fwait
ss
imul
mov
and
mov
xchg
xor
push
dec
dec
jecxz
fldcw
stos
shll
std
scas
cmpsl
mov
iret
cmp
xchg
data16
imul
pop
mov
mov
lea
adc
fidivrl
or
repz
insl
test
pop
hlt
pusha
push
loop
mov
sbb
pop
pop
in
cmp
inc
shrl
pop
lret
add
mov
jns
dec
jge
mov
loop
mov
cwtl
add
lret
lods
push
xor
mov
iret
mov
pop
imul
gs
stos
rcrl
fidivrl
jmp
rol
cmp
mov
rorl
or
dec
inc
hlt
fwait
in
xchg
xchg
mov
adc
or
sbb
dec
les
sbb
cmp
icebp
xlat
lahf
dec
sbb
imul
push
lock
sbb
push
pop
pusha
mov
jb
inc
test
sbb
es
inc
jmp
sbb
mov
nop
ljmp
aaa
outsb
loop
lcall
sbb
fwait
mov
mov
inc
mov
scas
scas
and
cmp
push
xlat
push
mov
popf
sub
dec
out
je
je
fnstcw
sub
enter
leave
and
dec
pop
inc
jmp
lret
add
jp
insb
fs
sbb
cltd
fucomip
mov
sbb
xor
mov
std
mov
sub
lods
mov
insl
and
js
andb
movsb
pop
pop
inc
sahf
push
pop
mov
dec
fldt
xchg
ja
fidivs
call
sbb
mov
fwait
test
push
adc
mov
pop
in
sub
pop
out
das
pushl
cwtl
push
sbb
lds
cmpsl
fcoml
lods
xor
dec
or
cli
clc
jo
pushf
flds
fcmovne
subl
test
sarb
fadds
mov
roll
lret
dec
xor
movsb
pop
pop
cmc
ds
cmpsl
sbb
sub
or
in
or
add
out
fcomps
mov
inc
lock
addr16
aas
or
test
sti
cwtl
xchg
lods
outsb
enter
ljmp
add
jmp
imul
inc
enter
lret
in
test
pop
xor
inc
push
jl,pt
mov
insb
clc
and
sahf
gs
call
mov
fimull
and
pop
loope
sbb
adc
lds
pop
xor
mov
sub
jmp
pop
addr16
lds
dec
mov
add
jae
sbb
push
push
hlt
cli
pop
or
xor
out
mov
ljmp
xchg
fwait
gs
mov
das
cmp
in
test
mov
ss
dec
gs
dec
sbb
hlt
pop
imul
imul
addr16
xchg
push
push
lahf
mov
dec
pop
movsb
dec
lret
push
stos
pop
and
pop
fildll
or
dec
imul
sub
fmul
addr16
push
jae
lcall
fs
test
dec
ja
xchg
cmp
imul
loop
xchg
push
outsb
nop
mov
popa
xchg
nop
dec
lds
lcall
xchg
xchg
push
ljmp
dec
mov
popa
fcmovu
jge
cltd
and
mov
cmp
push
hlt
cmp
cmp
xchg
mov
sbb
sub
out
dec
cmp
sbb
mov
enter
addr16
xchg
pop
subb
dec
out
out
add
sbb
jbe
mov
fidivl
adc
insb
orb
xchg
xchg
inc
lahf
sub
sbb
insl
rclb
test
xchg
int
adc
shlb
sub
je
out
popa
mov
in
leave
pop
call
add
vphsubwd
stc
push
and
test
inc
ja
jbe
int
pop
add
pusha
test
jp
out
lds
fwait
xor
icebp
mov
lahf
fistps
cmp
call
fwait
addr16
out
cmp
mov
cs
jmp
fsubl
adc
pop
lahf
jno
lea
imul
int
imulb
es
xchg
xchg
mov
imul
ds
cli
enter
cltd
movsb
add
aam
out
dec
scas
pop
rcll
inc
xchg
stc
frstor
inc
insl
dec
sbb
dec
cmpsb
cwtl
and
ficompl
cs
mov
gs
addr16
xchg
in
mov
jnp
sbb
cltd
cld
adc
imul
and
out
and
ret
lcall
xor
xor
in
mov
pusha
movl
call
and
adc
mov
push
aas
cmp
shll
sub
push
ror
adc
mov
test
ficomps
inc
std
sub
or
add
sub
test
adc
int
aaa
dec
add
jae
push
fiadds
mov
movsb
inc
lods
or
lea
in
pop
sub
test
js
pusha
inc
dec
int3
lret
imul
lea
ret
sub
xchg
mov
fwait
xor
or
les
pop
test
test
inc
jg
and
add
xlat
or
loopne
imul
sub
mov
pop
mov
pop
xchg
adc
test
and
jno
mov
pop
mov
test
in
scas
push
imul
stos
shll
aad
ret
jne
int
adc
dec
push
or
mov
test
mov
xchg
jno
mov
add
xchg
jl
scas
push
insb
jbe
inc
inc
loop
je
movl
add
negl
lcall
inc
jno
sahf
and
and
sub
lret
addr16
push
lcall
push
scas
nop
cs
sahf
mov
call
sahf
fwait
push
inc
inc
mov
fs
and
cmpsl
sbb
xchg
mov
je
iret
repnz
nop
pop
cmp
cli
fdivrl
sbb
rorl
cmp
enter
or
and
adc
pop
or
popf
inc
pop
lret
push
lahf
sbb
xchg
xor
rclb
lahf
gs
fs
sbb
stos
fwait
mov
sub
fsubs
pop
dec
xchg
jne
lret
inc
ljmp
push
shr
mov
imul
in
pop
stos
arpl
cmpsl
pop
cld
mov
push
push
cmpl
sbb
jae
inc
stos
and
in
cld
cmp
das
std
ror
in
pop
push
out
aaa
xchg
std
aad
dec
gs
inc
pop
mov
cmp
xchg
aaa
xchg
sub
inc
call
push
mov
mov
mov
test
rcrb
sbb
cmp
mov
shlb
mov
dec
mov
mov
push
fwait
or
scas
js
cwtl
sahf
int3
sbb
pop
add
mov
xchg
mov
pop
mov
sahf
insl
dec
jmp
imul
sahf
sbb
push
imul
adc
les
movsb
jae
adc
cs
mov
xor
inc
mov
fs
add
adc
sarb
notb
cmp
nop
add
xchg
jno
pop
insb
cmp
or
cltd
add
mov
fistpl
movsl
lock
xchg
popa
imul
inc
clc
gs
and
std
out
mov
dec
sub
mov
inc
jecxz
mov
jae
int3
push
xlat
jp
cmp
mov
or
xor
mov
xlat
into
mov
jns
imul
ffreep
mov
push
pushl
out
in
fldcw
add
push
add
sar
data16
xchg
mov
xacquire
sub
mov
push
mov
push
mov
je
pop
mov
loope
in
add
inc
jecxz
inc
or
xchg
ret
in
loop
gs
lret
mov
leave
mov
inc
push
js
test
js
ljmp
cmpsb
jp
nop
rcrl
je
out
inc
push
and
mov
stos
fwait
and
pop
inc
cld
inc
fs
stos
rorb
mov
mov
mov
xor
push
mov
pop
inc
out
inc
dec
inc
adc
out
xor
inc
xor
hlt
lock
pop
mov
add
sbb
imul
pusha
dec
lods
lret
test
adc
je
in
cmp
xchg
loop
loopne
xor
pop
lret
gs
push
mov
dec
push
cmp
cmp
aad
bound
pop
dec
xchg
cmp
hlt
adc
and
sub
sub
and
mov
je
cmp
add
sub
dec
pop
mov
dec
cmc
add
cmp
mov
dec
repnz
cmpsb
sub
adcl
ss
pop
daa
xchg
inc
cmpsb
mov
repz
mov
inc
adc
pop
enter
jnp
add
mov
cli
mov
sbb
inc
mov
leave
mov
lock
push
mov
mov
jmp
rclb
out
imul
push
add
lods
sahf
mov
sti
enter
idivl
mov
jmp
in
gs
jl
mov
or
addb
ljmp
lods
cmp
in
decb
xchg
pop
jae
in
aad
dec
dec
inc
repnz
repz
xor
jmp
int3
push
jns
movsl
xor
sbb
pushf
imul
scas
sbb
or
xorl
pop
aad
fldt
xchg
inc
in
sar
or
or
pop
sti
lods
mov
cmp
mov
addr16
push
push
imul
sar
and
add
aam
cmp
pop
gs
jns
movl
in
adc
test
dec
pop
xor
push
mov
cmp
mov
sbb
dec
scas
imul
push
loop
inc
mov
dec
pop
in
inc
cwtl
ja
mov
or
mov
jp
sahf
sti
pop
iret
mov
xchg
xchg
jmp
mov
fs
dec
fwait
repz
mov
push
xchg
xchg
lea
xor
cs
int3
lcall
mov
dec
shl
inc
cs
mov
jecxz
rcr
mov
sub
loop
dec
hlt
mov
test
inc
xchg
and
jp
ficoml
xchg
or
mov
ja
out
rorb
das
inc
mov
sub
add
fisubs
dec
sub
adc
lods
or
mov
popf
lcall
jle
sbb
lret
loope
inc
movb
mov
ds
cmp
push
int
jb
mov
mov
inc
fldenv
jne
inc
push
xchg
jb
sub
in
test
lcall
mov
or
xlat
outsl
testl
rcll
sub
push
pop
out
fsubrl
sub
pop
enter
sub
and
pop
out
std
push
jne
xor
dec
cwtl
dec
pop
insb
rcll
iret
mov
outsl
test
leave
dec
ss
popf
imul
xchg
push
jmp
xchg
ljmp
dec
cmp
addr16
fdivrs
sub
mov
aaa
out
xchg
mov
cmpsl
fwait
xchg
fs
pop
ljmp
mov
add
stos
mov
lea
xor
push
inc
fwait
mov
cmp
repz
xchg
pop
mov
leave
cltd
rorb
cli
orb
fstl
fsubl
outsb
fisubs
in
out
clc
insb
and
or
mov
dec
inc
xor
repnz
inc
xchg
lds
push
mov
pop
mov
imul
pop
into
lea
pop
mov
xor
cmp
xchg
cmp
mov
push
cmpsl
add
fstl
test
fsubrp
xchg
shlb
repz
or
fwait
push
out
lahf
imul
and
lret
push
mov
addl
clc
cmp
stc
in
dec
mov
sbb
std
add
inc
sar
js
in
lods
hlt
push
nop
inc
cmp
xor
femms
add
js
aad
xchg
cmp
dec
mov
push
lcall
and
fisttpll
decl
pop
mov
popf
pop
adc
sbb
xor
gs
and
xchg
cmp
addr16
andb
aam
sub
jge
mulb
adc
jge
push
lret
jo
sub
cmp
inc
mov
xchg
add
mov
mov
push
mov
sbb
movsb
or
mov
sbb
add
cmp
jbe
xchg
inc
inc
cwtl
rorl
dec
test
or
gs
cwtl
push
push
scas
loop
dec
sahf
lock
aam
jl
mov
mov
aad
push
mov
lcall
hlt
js
mov
sub
sub
mov
mov
imul
int3
push
xchg
je
ret
dec
sbb
aaa
incl
jmp
pop
das
ja
cmp
add
out
js
fwait
loop
imul
push
shl
push
dec
aam
subl
sub
fldl
mov
pop
xor
nop
ljmp
xor
jp
xchg
imul
or
sahf
orl
scas
or
test
mov
jl
mov
jne
inc
aad
aaa
lcall
lea
outsl
stos
inc
push
xchg
cmpsb
jbe
xchg
shll
lock
ret
sbb
shlb
test
sbb
sbb
xchg
sbb
add
out
imul
cmp
jl
sub
fistpl
imul
out
gs
cmc
add
add
sub
insl
enter
mov
xor
out
sti
cmpb
scas
scas
push
pop
xchg
nop
imul
jmp
xor
inc
adc
icebp
jmp
cmpsb
sbb
push
mov
sarl
int
cmp
and
or
rcl
addr16
pop
hlt
out
imul
mov
pushf
mov
and
and
shll
pop
nop
pusha
test
lcall
xor
fiaddl
mov
lret
add
dec
sbb
mov
rorl
adc
leave
popf
dec
mov
jge
mov
sbb
push
ret
repz
out
dec
test
adc
das
xor
jecxz
cltd
sbbb
loopne
inc
scas
cmc
lock
sub
and
mov
dec
imul
jnp
mov
or
rcrl
mov
fisubs
roll
addr16
and
into
popf
and
lods
sub
or
jne
fdivrs
mov
sti
lcall
outsl
cmp
jl
loop
xor
sbb
rol
imul
xchg
dec
or
sub
das
push
adc
push
cmp
inc
cmp
mov
add
addr16
popa
sub
jg
mov
lret
movsb
lea
int
popf
xchg
push
test
fsts
and
lcall
ret
xor
andb
out
shll
sbb
ret
movb
pop
pop
ret
sarb
test
dec
pop
imul
fdivr
mov
pushf
xacquire
sub
out
and
data16
clc
imul
jge
xchg
cmp
cwtl
sahf
mov
in
xor
mov
mov
adc
cmp
pop
jecxz
lea
sub
add
into
xlat
addr16
jbe
push
pop
xor
int
js
cmp
icebp
cs
pop
loope
inc
pmulhuw
pop
mov
xor
lret
gs
test
sub
addb
in
dec
out
mov
das
clc
fwait
xlat
seto
mov
addr16
jb
imul
xchg
pop
mov
push
shl
jp
mov
sub
dec
int
icebp
jno
fildll
jmp
rorb
xchg
int3
cmpsb
dec
mov
adc
cmp
gs
fisttps
sbb
fdivl
and
jno
pop
mov
mov
nop
cwtl
jno
lods
jle
lretw
push
fstpt
imul
mov
and
pop
pop
add
lock
cwtl
inc
xchg
jge
lcall
das
sbb
jge
push
inc
pop
hlt
push
gs
add
jae
mov
sbb
cmpl
jnp
int3
call
pop
dec
jmp
push
js
push
push
inc
into
inc
insl
test
cs
int3
js
imul
cs
insl
aam
inc
or
nop
gs
xchg
dec
sbb
xchg
sub
out
or
movsb
stos
push
fsubrs
and
xchg
movsl
mov
adc
fdivrs
and
xor
cli
lds
insb
mov
imul
mov
mov
push
inc
orb
inc
push
sahf
fmulp
je
icebp
pop
and
adc
movsl
int3
xchg
jge
cmp
in
cmp
loop
sub
in
test
ds
lods
xchg
push
imul
pushf
jl
shlb
push
sub
in
and
inc
hlt
lds
jne
inc
sbb
test
fcoms
out
rol
addr16
mov
iret
or
add
or
and
adc
lcall
dec
pop
ror
mov
xchg
fdivrl
lret
jns
gs
dec
push
repz
pop
mov
cmc
sbb
pop
into
cmp
loop
inc
push
lret
or
mov
push
in
cmp
lods
mov
inc
mull
scas
inc
xchg
xchg
lods
sbb
dec
loopne
sub
pop
arpl
std
or
cmc
xchg
lea
xorl
push
loope
and
hlt
sbb
std
jbe
cwtl
sbb
push
aas
hlt
dec
mov
and
jnp
ret
gs
inc
notl
inc
nop
jmp
adc
mov
dec
sbb
sub
mov
jae
cmp
add
jae
int3
fwait
gs
out
fldl
movsl
lret
jno
mov
dec
repz
mov
mov
lods
mov
mov
data16
enter
cltd
or
ljmp
add
push
xor
stos
xchg
sti
repnz
stos
outsl
fcomi
pop
and
lret
jo
sbb
pusha
dec
sbbb
lods
xlat
js
xor
add
sub
sbb
sahf
dec
js
pop
insb
lds
cmp
lods
out
push
cmp
fstl
mov
mov
xlat
sbb
cld
in
lds
bswap
sbb
in
cwtl
adc
insl
or
fcmovnb
push
and
les
sub
jl
push
lds
push
hlt
ljmp
popf
push
scas
shlb
xchg
out
int3
in
adc
push
xor
cli
sub
inc
add
pusha
movsb
aad
daa
addl
pop
xchg
mov
inc
shrb
fwait
rcrl
sub
ret
or
and
or
mul
das
mov
je
cmp
addr16
lahf
scas
inc
cs
jae
cmp
push
jae
xor
imul
sbb
fsts
es
mov
mov
mov
and
fidivrs
pop
or
jne
pop
adc
xor
imul
imull
or
clc
dec
inc
shll
lods
lret
in
orl
xchg
aam
mov
mov
hlt
out
repnz
pop
rcl
or
xchg
aas
ficoms
xlat
pop
sbb
xchg
ja
sub
int
div
xlat
sbb
push
add
loopne
or
dec
loopne
ljmp
mov
dec
or
xlat
jae
mov
cmp
fbld
push
out
gs
push
xchg
mov
xor
int
lds
add
lds
mov
add
xchg
lods
cwtl
movsb
lds
in
clc
fisttps
pop
int
gs
mov
ja
call
mov
add
loopne
into
pop
sub
lods
cmp
inc
ret
repz
add
jb
lcall
fs
into
imul
adc
or
nop
scas
jns
adc
sti
jmp
and
cmp
movsb
and
pop
cli
push
movsl
roll
mov
ror
bnd
mov
lds
xchg
dec
decb
enter
fldenv
sahf
push
pushf
fsubl
sub
jl
nop
jl
push
mov
add
inc
inc
push
in
in
jb
mov
and
das
fcomps
xor
arpl
dec
test
shlb
test
cmp
adc
in
cmc
xchg
and
push
popf
mov
dec
inc
mov
ffree
addr16
outsb
faddl
in
add
xor
xchg
adc
out
pop
mov
insl
cmp
xchg
dec
iret
gs
ret
std
jmp
aaa
imul
fsubrs
cmp
in
popf
jl
sbb
je
popf
nop
cmc
push
sbb
cmpsb
and
rcr
add
mov
sbb
mov
nop
imul
dec
mov
lods
sub
fcmovne
add
in
test
sbb
mov
xor
bound
emms
push
push
shrb
inc
ret
mov
adc
in
jns
lods
ret
push
xlat
jno
xchg
popa
ss
cmpl
fisubrl
and
and
sub
stos
scas
sub
dec
call
mov
xchg
out
xor
sub
or
dec
shll
fwait
aas
test
hlt
push
int3
mov
sub
ja
sahf
dec
adcl
cmc
xchg
addr16
aaa
mov
pop
mov
mov
fucomip
out
xchg
test
lret
sbb
insb
icebp
mov
mov
inc
shl
cmp
stc
adcl
pop
mov
adcb
push
mov
jl
and
pop
adc
mov
jmp
pop
shr
xchg
daa
push
dec
sahf
cwtl
lea
ss
std
pop
icebp
cmp
inc
xor
cmpsl
sub
add
mov
and
lahf
test
cmp
gs
pop
or
sub
lods
pop
mov
and
popa
fisubs
and
inc
repz
push
xor
in
xor
imul
dec
cwtl
mov
loopne
or
sbb
vpaddq
jp
out
test
rcl
mov
int
or
mov
cmp
lock
hlt
sub
mov
test
pop
pop
inc
repz
out
jbe
dec
nop
or
pop
test
adc
cmpsl
and
ror
add
fbstp
mov
sub
sbb
lods
lock
repz
mov
or
rolb
jmp
movsl
adc
fsubp
sbb
imul
cmp
fistl
loope
fdivrl
jle
mov
jbe
call
std
addr16
int3
xchg
pop
mov
sbb
out
iret
rcrb
rcll
loope
sub
nop
inc
lock
testb
push
lret
fmulp
and
push
int3
dec
test
rcl
mov
pop
mov
or
xor
adc
push
ficoms
cmp
sarb
enter
roll
stos
jl
fildl
jno
popf
jmp
imul
in
fisubrl
lret
leave
std
rcrb
xor
jne
push
inc
adc
cli
cmp
rclb
jl
mov
inc
mov
ror
enter
mov
adc
jl
and
jns
rep
repnz
shrb
roll
pop
out
mov
add
xchg
hlt
shl
into
leave
stos
dec
aas
leave
mov
test
fwait
jbe
push
insl
xchg
outsb
imul
xchg
scas
push
cmp
insb
xchg
gs
inc
pop
sub
mov
outsb
inc
fsubs
rcrb
fst
jno
rclb
mov
sub
or
testb
fimull
in
mov
subl
mov
sub
xchg
jae
testl
mov
gs
inc
out
lret
and
in
jmp
push
push
sub
sub
addr16
jns
out
gs
xchg
add
decl
loopne
pop
cld
pop
mov
mov
data16
or
jbe
dec
mov
int3
pusha
ljmp
pop
test
jl
shlb
mov
fwait
test
mov
gs
aaa
xor
push
rolb
movsl
sbb
test
dec
pop
cmp
in
sub
flds
fistl
cmpsb
jo
jno
mov
lahf
xchg
add
shll
cld
pop
mov
add
jno
xchg
xchg
jge
pop
dec
jno
ss
fidivl
sbb
pop
push
xor
cmc
add
hlt
dec
push
mov
cltd
repz
sub
xchg
std
sahf
out
ret
jbe
scas
rorl
imul
mov
in
lds
loop
iret
sbb
or
cltd
push
dec
xchg
sbb
aas
jmp
pop
push
jbe
xor
icebp
pop
jno
jb
push
shlb
xor
hlt
gs
lods
mov
aam
vpaddusb
sub
or
imul
nop
add
mov
jmp
cmp
fcompl
cmp
adc
mov
in
cmp
in
int3
aam
out
scas
inc
xorb
call
ss
adc
int3
rcrb
sbb
mov
fdiv
es
gs
and
or
call
in
imul
cmc
repnz
shrb
rorb
loop
hlt
xchg
xchg
mov
sbb
jns
xor
fisubl
pop
xchg
imul
hlt
ss
leave
sbb
jns
jnp
xchg
sbb
adc
ljmp
jno
sub
xor
dec
shl
inc
sbb
mov
xor
pop
cwtl
test
mov
add
cmc
mov
inc
fdivrs
loope
jl
test
enter
out
movsb
mov
test
lds
xor
outsb
rclb
cmpb
push
call
int3
fidivrs
cmc
shlb
pushf
jl
jnp
std
pop
sub
gs
inc
mov
inc
outsl
fsubr
inc
lods
popf
push
jmp
lea
dec
andl
and
mov
aas
add
inc
js
xor
add
dec
inc
test
jge
push
push
mov
dec
idivb
or
jle
jmp
insb
mov
ljmp
cmpsb
frstor
push
mov
push
ret
rorb
mov
loop
fcom
xchg
sbb
mov
mov
aaa
sbb
xor
repz
in
out
scas
push
xchg
mov
cs
int3
and
inc
inc
cmp
test
mov
push
in
inc
cmp
inc
mov
cs
mov
add
mov
jne
ss
in
push
lahf
cltd
aad
mov
jmp
push
fistpll
int
dec
in
in
cmc
inc
sti
inc
ljmp
xchg
int3
inc
pop
ds
call
fs
pusha
pop
inc
mov
push
pop
inc
cltd
jb
and
lods
jo
pop
in
imul
adc
cmc
sahf
addr16
insb
xchg
mov
mov
sarl
lods
lea
mov
loop
inc
mov
jl
pop
leave
js
outsl
adc
popa
gs
and
inc
sub
and
or
rorb
daa
int3
gs
fildl
test
mov
subl
aam
lds
insl
movsb
inc
adc
pushf
cld
inc
jno
adc
mov
outsl
lahf
mov
dec
mov
icebp
add
loopne
sbb
push
decl
jne
or
ljmp
ss
loopne
pop
adc
mov
cwtl
mov
out
inc
std
jns
xchg
dec
dec
cs
jecxz
cmc
jmp
test
jmp
mov
sub
cmpsb
xor
adc
repz
push
imul
sbb
les
mov
lcall
and
gs
fisubl
mov
pop
test
cmpsb
xchg
jp
sahf
cli
or
addl
or
outsl
out
fst
in
pop
ret
cltd
int3
filds
inc
push
fcoml
stos
or
pop
test
frstor
add
dec
cmp
cmp
sub
adc
xchg
xchg
xor
add
scas
inc
sub
aaa
int3
into
sub
int3
fcomp
mov
inc
lcall
adc
cmp
addr16
mov
lods
test
mov
fidivrl
push
popf
push
outsb
push
adc
test
xlat
sbb
sub
ja
filds
xchg
push
mov
cmpsb
pop
sbbb
push
cli
fs
movsl
aas
pop
fs
cmp
movsb
add
cmc
jno
pop
sub
xchg
mov
mov
into
mov
mov
andb
scas
jo
lret
push
fsubl
sbb
negb
outsl
lret
pop
jge
lea
mov
iret
dec
sbb
push
push
or
gs
inc
add
insl
push
inc
sub
imull
js
rcl
cs
lea
mov
lcall
inc
ret
cmpsb
lahf
xchg
xchg
test
push
mov
or
je
fadd
into
pop
in
push
dec
out
push
xchg
addr16
in
mov
and
loope
xlat
insb
jb
jb
mov
mov
ljmp
loop
adc
into
cmpsl
je
push
push
movsl
fdivs
gs
push
or
shr
push
mov
push
jns
aam
jno
and
pop
in
adc
xor
push
test
into
jl
or
int3
jae
pop
clc
jmp
lahf
or
jl,pt
push
in
xchg
int
add
jp
lds
sbb
mov
hlt
int
sbb
pop
lea
in
fiaddl
dec
jb
lds
mov
repnz
outsb
sub
add
divb
fdivr
es
lds
mov
sbb
fadd
pop
imul
push
test
jns
pop
leave
orl
sub
aad
loope
test
ljmp
push
clc
jo
addr16
call
repz
adc
ljmp
push
mov
jo
lcall
lea
rclb
aad
jbe
rcrl
imul
lods
and
sub
not
clc
and
mov
pop
or
vaddsubpd
push
pop
stos
and
mov
imul
gs
movl
sub
lods
or
loop
push
xlat
mov
xchg
xchg
sarb
cld
xor
and
insl
mov
mov
xor
push
in
mov
je
vprotq
sbb
movl
out
dec
repnz
cwtl
sti
cld
cmp
in
sbb
clc
jge
int3
das
gs
sbb
andl
arpl
jmp
cmp
notl
hlt
gs
cmc
dec
mov
test
xor
repz
int3
ljmp
xlat
mov
pop
add
out
in
addr16
lods
ljmp
insl
mov
add
in
fiaddl
xchg
fisttps
out
cwtl
or
movsb
test
inc
setns
jecxz
sub
mov
in
bound
sub
adc
xor
enter
lcall
xor
addr16
ret
sub
pop
and
iret
clc
fmulp
cmp
or
negb
dec
sub
ret
or
mov
mov
xchg
inc
fidivs
js
cmp
sbb
push
scas
int3
test
scas
out
sub
icebp
and
and
jg
xor
sahf
adc
insl
mov
xlat
sarb
iret
sbb
xchg
xchg
leave
mov
or
or
jmp
push
shlw
sub
xor
push
mov
cmpsb
test
scas
gs
pop
xchg
fwait
mov
in
pop
or
cmpb
sub
mov
cld
cmpsb
push
and
mov
test
std
les
ds
fs
aad
scas
and
insb
loope
sub
rorb
jae
cmp
fisttpl
dec
mov
mov
dec
mov
pop
push
imul
es
dec
call
xor
sbb
aaa
or
pop
dec
pop
dec
into
out
addr16
lea
pusha
jns
jnp
pop
add
cli
sbb
push
aad
aaa
jp
cli
jecxz
mov
push
insl
sub
out
pop
push
lcall
inc
adc
ljmp
mov
push
jb
sbb
fistpl
xchg
lods
and
fildl
imul
mov
sbb
outsb
inc
xchg
bound
mov
fistps
sub
sub
aam
jmp
mov
sbbb
rolb
scas
jg
mov
stos
rolb
pop
jne
into
mov
mov
mov
loope
mov
lret
repnz
cmpsb
iret
fwait
or
pushf
in
inc
cmp
cld
movsl
leave
inc
mov
mov
xor
cmpsb
mov
nop
imul
cltd
fimuls
inc
xchg
je
inc
gs
mov
and
pusha
fs
and
fs
test
out
loop
adc
lods
fidivl
cmp
mov
pop
inc
and
js
xchg
fistps
in
stos
jae
jecxz
fists
jo
in
mov
sbb
mov
clc
sub
scas
mov
push
or
cmp
test
push
xor
in
gs
test
xchg
movsl
sub
cmpsb
jmp
or
jae
neg
cltd
adc
fcomps
ja
add
out
add
jge
cs
pop
xchg
mov
into
repz
cmp
nop
pop
xor
cmp
mov
mov
je
das
lods
mov
mov
int3
cmp
out
movsl
xor
cmpl
or
mov
imul
lea
cltd
dec
out
and
js
xor
loopne
or
popa
inc
pop
int3
add
sub
sbb
bound
addr16
daa
mov
cmp
loope
pushw
mov
iret
faddl
lea
rolb
lcall
xor
cmc
into
fsubrs
pop
pop
fsubrl
jne
cmp
js
sub
rcrl
adc
mov
mov
ficoms
mov
ljmp
sub
loope
pop
push
fs
mov
cs
enter
ljmp
add
out
loopne
les
adc
std
xchg
out
inc
lcall
js
lea
mov
or
daa
fadds
addr16
push
movsb
mov
xchg
push
hlt
popa
sub
arpl
aad
imul
jl
dec
pop
inc
adc
add
cmp
repz
adc
adc
fs
movsl
mov
jb
int3
mov
aas
popf
imul
push
fiaddl
add
cmpsb
fdivrl
stos
inc
fs
fadd
cmp
ljmp
in
shll
int3
pause
repnz
test
push
leave
and
push
lock
int3
cli
xor
dec
sbb
inc
xchg
cmpsb
mov
or
sub
mov
mov
mov
cmp
rorl
sub
in
imul
fs
fsubs
push
push
push
sahf
fldt
add
sbb
jne
js
gs
fiaddl
repz
sbb
dec
adc
cmp
inc
mov
jo
push
flds
fisttpll
lret
fisttps
jl
mov
jns
roll
push
jno
out
gs
inc
je
cmp
push
mov
pop
or
iret
xchg
das
xlat
fiaddl
nop
and
fnstsw
fists
or
mov
fdivs
cmp
lahf
jb
test
pop
and
cmp
mov
pop
mov
push
lret
or
sub
rcrl
jle
mov
inc
push
inc
gs
into
int
ljmp
cmp
imul
stos
lahf
mov
jge
and
mov
pop
pop
movsl
mov
mov
xlat
jecxz
cmp
dec
push
bound
pop
shrb
push
sub
mov
rorl
leave
jmp
bound
int
xchg
mov
xchg
or
xchg
jp
dec
sbb
cmp
jns
pop
xchg
mov
cld
sbb
mov
test
push
and
mov
out
dec
pop
and
inc
inc
add
lret
movsl
or
cwtl
movsb
xor
mov
movsb
js
arpl
cmc
xchg
add
jmp
aad
mov
pop
mov
sub
hlt
int
out
scas
insl
fs
aam
add
insl
movntq
xchg
cltd
xchg
inc
add
mov
das
andl
mov
movsb
push
xor
xor
ljmp
dec
sub
or
int3
in
jmp
lret
jl
and
insl
mov
jmp
mov
vpaddq
test
sub
xchg
fwait
enter
imul
push
push
dec
mov
pusha
lret
inc
sbb
cwtl
push
or
sbbb
fs
fwait
mov
sti
outsb
xor
add
test
push
jmp
ds
mov
lea
es
into
aas
or
xchg
mov
movsl
outsb
xchg
gs
pop
sub
xor
sub
pop
sbb
mov
xor
add
cwtl
cmpsb
xchg
jno
mov
sub
inc
mov
xor
pop
xchg
xlat
mov
arpl
pop
adcl
push
pop
hlt
sbb
xchg
jge
cmp
pop
inc
jge
lahf
frstor
sahf
mov
fstpt
in
sbb
jge
gs
mov
fisubl
enter
popf
pop
cmpsb
lods
sub
and
int
sbb
int3
imul
ret
es
fidivrs
mov
mov
adc
nop
or
xchg
adc
outsb
dec
in
xchg
aas
mov
addr16
repnz
pop
loop
or
filds
push
cmpsb
lds
xchg
insb
mov
and
or
das
sub
mov
mov
xchg
test
js
jge
xor
ja
fiaddl
dec
jo
inc
add
xchg
popa
lock
cmc
add
stc
and
movsb
imul
push
call
popf
das
dec
pop
fldenv
sahf
mov
dec
sbb
out
and
test
push
mov
imul
cmp
in
adc
aad
test
cmp
ss
dec
repz
loope
addr16
lahf
dec
outsl
mov
gs
xchg
xor
ffreep
rolb
sub
mov
mov
xchg
flds
jle
ds
mov
jb
xlat
fs
lahf
vorps
in
push
mov
xchg
add
aas
jno
push
faddl
jle
sub
jmp
inc
cmp
mov
mov
push
push
xchg
xchg
repz
add
jmp
adc
call
xor
and
inc
pop
or
repnz
mov
and
test
stos
push
gs
inc
rorb
mov
nop
addr16
aam
icebp
adc
stos
or
add
xchg
mov
imul
lahf
ja,pt
mov
cmp
repz
xchg
add
sub
xlat
add
xchg
insl
inc
pop
inc
int
scas
sbb
sub
fisttpll
inc
jg
fs
imull
inc
xlat
pushf
popf
in
dec
or
sar
push
in
insl
fistpll
int3
dec
adc
cli
sbb
push
pop
and
insb
rcrl
sbb
xchg
scas
lods
add
out
sbb
sub
subb
out
pusha
shlb
cmc
sub
add
fucomp
mov
cmc
jp
lea
lcall
jl
repz
add
mov
pop
mov
scas
xchg
imul
fcoml
push
test
or
test
xchg
or
mov
movsb
out
cmc
lret
cwtl
fwait
mov
aaa
in
adc
pop
jge
add
fsubr
mull
leave
in
leave
insl
loopne
test
sub
into
xor
fsubl
jns
ljmp
aad
add
inc
push
hlt
std
fsubl
add
cli
inc
inc
test
sbb
xchg
lds
xor
inc
call
add
into
dec
loope
rcr
aas
jo
cld
rcrl
pop
into
mov
gs
add
or
movaps
mov
in
test
repnz
xchg
and
shlb
xchg
cmp
pop
and
aad
repz
stos
xor
xor
hlt
inc
inc
hlt
add
mov
pop
jg
add
imul
sub
lods
hlt
mov
mov
mov
mov
into
mov
pop
inc
adc
pop
pop
sbb
outsl
xchg
pop
cltd
fsubr
std
cs
adc
adc
cmp
es
sbb
nop
scas
sbb
xchg
dec
imul
call
jg
gs
lcall
imul
sub
sarb
lods
add
into
xchg
push
cs
pop
repz
leave
add
ds
in
cs
fstl
jge
pop
sbbb
jns
jl
test
xchg
lock
and
cltd
sbb
dec
movsb
loop
leave
inc
push
cmp
shrb
xchg
push
leave
adc
fwait
mov
aad
loop
popf
movsl
or
iret
jnp
sub
mov
fs
je
push
pop
pop
jg
shlb
cmpsb
pop
xor
cmp
fcoml
xchg
lahf
inc
movsb
aas
jp
mov
push
les
cmp
nop
cltd
inc
xor
imul
dec
inc
pop
fs
je
lock
aad
stos
sbb
jecxz
int3
dec
and
popa
imul
sbb
mov
jmp
roll
mov
imul
std
rcll
jne
or
lahf
aaa
out
js
sahf
fsts
inc
inc
jns
mov
fcmovnbe
dec
dec
fs
dec
int3
mov
repnz
mov
sub
addr16
stos
jns
pop
js
in
int
xchg
call
or
addr16
jl
push
jbe
scas
cmp
xchg
mov
or
mov
iret
sub
out
jbe
sub
or
sub
push
cmp
lret
negb
adc
mov
das
fs
scas
and
fidivrl
jmp
sti
jns
or
sbb
popa
hlt
xchg
mov
mov
xchg
xorb
mov
adc
icebp
mov
adc
negl
je
jg
lock
push
mov
jns
adc
adc
insl
frstor
es
fs
in
cmpsb
pop
test
shlb
in
popf
sbb
in
mov
mov
mov
lcall
jno
loop
pop
push
notl
push
add
push
xchg
rorl
ja
mov
dec
negl
jo
mov
sub
insl
movb
popf
in
gs
mov
pop
mov
sub
mov
dec
imul
dec
std
xor
fwait
mov
insl
push
mov
mov
inc
xchg
adc
fcoml
pop
mov
daa
mov
pusha
icebp
fcoml
lcall
mov
cmp
xor
fsubrs
fnstcw
fisubl
fdivp
loope
movsl
gs
gs
xor
adc
inc
cmpsb
cli
out
pop
xchg
mov
xchg
pop
sarl
ss
daa
enter
leave
lds
flds
xchg
cmp
leave
add
stos
cmp
lea
mov
xor
or
cmp
mov
lcall
popa
fdivrl
ds
mov
adc
mov
out
gs
pushl
imul
or
gs
add
imul
push
fisttpl
cmpsb
mov
sahf
into
testb
xchg
mov
dec
scas
dec
loopne
push
jnp
dec
ret
stos
or
jae
test
fstpl
dec
mov
out
int3
cwtl
mov
push
scas
ljmp
sub
push
imul
add
test
sbb
lds
push
je
fucomp
pop
pop
xchg
jns
mov
rcrl
sbb
cltd
andl
add
andl
or
cmp
int
imul
and
movsb
mov
inc
inc
test
dec
sbb
cmp
xchg
jmp
lahf
mov
pop
fcmove
cs
push
lods
fstp
pushf
push
xchg
leave
mov
mov
push
push
scas
jno
mov
mov
cmp
hlt
clc
loop
cmpsb
mov
cli
jmp
in
imul
and
rorb
cmpsb
cmp
clc
gs
push
push
imul
sub
imulb
shll
mov
popa
inc
out
nop
mov
pop
movsb
out
push
add
pop
cmp
test
xchg
jp
notl
aas
and
adc
outsb
mov
out
sub
sti
repnz
test
int3
addr16
add
sub
add
fwait
jge
push
shrb
add
outsl
sbb
iret
imul
lret
cmp
xchg
movsb
repnz
lds
hlt
dec
ss
jp
mov
mov
imul
hlt
dec
mov
dec
test
test
lret
mov
mov
ret
pop
dec
xor
cmp
or
jne
mov
cmpsb
fbstp
xchg
ficompl
mov
xor
shrl
sbb
cmp
mov
push
push
pop
in
sub
fildl
jl
sbb
lahf
push
aad
mov
aas
mov
mov
aad
jge
pop
shlb
add
inc
lret
and
add
fs
xchg
lret
lods
addr16
and
inc
cmp
xor
cwtl
inc
sub
out
and
inc
sub
push
mov
test
pop
test
pop
movsl
hlt
lret
xchg
jecxz
sub
lcall
jmp
sahf
push
lock
mov
fsubrs
mov
and
push
int
repnz
mov
imul
mov
call
push
loope
sub
adc
cmp
lret
movsb
mov
inc
leave
insl
lea
sub
rcl
pop
mov
lea
push
cmpsl
scas
xor
jbe
loopne
test
hlt
sub
cmp
into
push
adc
mov
inc
mov
sub
shrb
aas
jns
inc
hlt
push
dec
mov
test
inc
and
mov
imul
mov
fcomps
outsb
mov
bnd
ret
xor
push
inc
sub
pushf
int3
jae
sti
fmull
inc
and
lock
adc
bound
push
ret
push
dec
das
inc
xchg
mov
push
sub
or
and
nop
add
cli
push
push
daa
pop
lods
popf
add
js
or
lods
les
jb
ss
dec
adc
ret
sbb
mov
cmp
inc
mov
jl
pop
and
jns
sub
cs
mov
xor
mov
sub
sub
int3
and
js
inc
lret
mov
dec
mov
xorl
scas
and
imul
scas
fdivl
fdivs
fisttpll
fs
jp
test
daa
addr16
lcall
arpl
push
add
dec
adc
xchg
xchg
cmp
mov
rclb
mov
aad
cmp
mov
imul
adc
inc
jl
mov
std
out
ficoms
inc
cmpsl
push
sbbb
mov
std
pop
outsl
js
cli
push
and
insb
xor
in
pop
pushf
stos
mov
adcb
orb
pop
js
leave
mov
sub
imul
mov
push
jns
pop
pop
adcl
movsb
sbb
leave
dec
cmp
loopne
adc
popa
shlb
and
popf
push
dec
out
add
int
xchg
gs
xlat
push
add
xor
or
or
imul
stos
mov
inc
aas
xchg
fcmovbe
push
push
cmp
gs
cmp
xor
push
and
cli
adc
insb
sub
push
or
ljmp
pop
rcll
notb
mov
push
andl
gs
aaa
mov
jo
repnz
cmpsb
sahf
es
jmp
test
mov
rcr
loopne
or
jo
mov
push
inc
ret
or
push
xor
cmpsb
jbe
mov
xchg
clc
push
or
inc
nop
imul
aad
mull
inc
push
addr16
fnstsw
add
mov
sbb
add
push
das
mov
movsl
or
and
cs
push
xchg
sbb
dec
jmp
adc
int
jle
js
fadds
xchg
repz
sbb
lock
sub
test
lcall
mov
inc
aaa
cltd
push
ds
cli
xor
popf
popa
stc
icebp
jmp
adc
inc
mov
faddl
test
cld
das
stos
push
movsb
dec
aaa
punpckhdq
leave
clc
jmp
jns
cmp
inc
insl
in
mov
adc
cmc
push
test
scas
mov
pushf
cmpsl
mov
pop
ret
adc
xor
cltd
ror
int3
dec
cmp
test
cmpsl
mov
in
fadds
fldl2t
orb
in
mov
inc
inc
out
ds
lock
call
inc
icebp
call
rcrb
dec
clc
loop
call
das
bound
mov
xchg
pop
xlat
out
push
loopne
out
adc
mov
test
sub
jp
and
cld
out
dec
addr16
out
dec
sub
jmp
inc
ljmp
push
gs
cmpsl
or
test
push
xchg
iret
addr16
push
lret
callw
jle
mov
lods
cmc
int3
out
push
inc
call
xchg
mov
out
mov
fcompl
pusha
pop
push
shll
jo
fidivs
sbb
insb
ds
pop
xchg
pop
loopne
data16
stos
cld
in
out
dec
imul
push
add
call
addr16
add
cmp
xchg
jo
out
sub
out
sti
dec
mov
xor
out
outsb
scas
push
or
pop
shrb
pop
xchg
jbe
test
and
scas
out
stos
fdivr
pushf
xchg
xchg
sbb
cwtl
aad
xlat
xchg
cwtl
pop
pushf
or
xchg
iret
fmuls
leave
jne
push
mov
pusha
enter
js
call
dec
call
sbb
push
push
xchg
test
call
inc
addr16
sti
stos
cmpsl
dec
data16
pop
ja
and
xchg
dec
out
pop
scas
daa
nop
test
mov
jmp
mov
js
out
enter
mov
and
mov
testl
iret
mull
out
mov
lahf
inc
dec
addr16
pop
out
arpl
xrelease
scas
pop
scas
test
inc
ss
into
fsubrs
popf
nop
int3
add
mov
mov
mov
dec
sub
rclb
mov
dec
inc
cltd
into
jge
and
inc
cs
ljmp
sbb
daa
sbb
pop
icebp
lahf
xlat
fs
in
mov
push
dec
int
and
shl
ja
adc
cmp
fcoml
xor
adc
inc
aad
fstl
cmp
push
cmp
repz
dec
orb
not
ret
jecxz
cmp
divb
addr16
xor
imul
dec
and
cmp
scas
in
out
sbb
cmpsb
mov
out
addb
jg
xchg
jg
popf
sbb
dec
xchg
push
mov
cmp
rorl
dec
loopne
inc
lret
push
mov
andb
adc
and
in
sub
sub
arpl
xchg
sbb
gs
xor
ror
mov
ljmp
cmp
aaa
mov
call
adc
gs
aas
mov
dec
fidivrl
aas
jbe
xchg
xor
orl
gs
dec
xor
cmp
dec
inc
aaa
daa
and
test
ret
roll
and
cmpsb
and
cmp
scas
and
cs
ljmp
gs
sub
mov
xor
jge
jl
mov
sbb
sbb
lods
sbb
or
push
cmpsb
enter
fdivs
mov
gs
into
lret
push
mov
mov
lods
pop
dec
addr16
and
fs
mov
cmpsb
mov
jno
cmp
cmp
stos
adc
inc
mov
xlat
test
push
outsl
dec
mov
or
lds
aaa
nop
call
jge
jl
cwtl
inc
dec
daa
les
adc
loop
fdivr
gs
mov
lahf
xchg
inc
fs
add
xchg
jo
lret
cmp
mov
dec
popl
sub
adc
jb
mov
xor
pop
bound
aas
push
pop
push
xor
push
mulb
adc
mov
xchg
fsubr
jb
xchg
lahf
add
add
or
xchg
aam
dec
sahf
mov
out
inc
pop
iret
adc
jno
and
call
imul
cltd
mov
sbb
mov
dec
and
mov
out
inc
dec
nop
xor
stos
stc
inc
and
xchg
in
aad
dec
push
and
mov
gs
jb
adc
outsb
jmp
add
sub
pop
ret
mov
js
mov
sbb
dec
cmpb
xchg
cmpsb
dec
cwtl
arpl
sub
pop
lock
mov
lea
sbb
inc
repnz
sub
or
loop
sbb
pop
pop
mov
xchg
or
dec
xor
add
int3
ret
xchg
sub
int
jbe
mov
inc
rcrl
lcall
es
sbb
mov
lret
movsl
pop
adc
inc
insb
gs
mov
mulb
mov
daa
loop
xor
lret
adc
push
sub
inc
test
mov
imul
nop
mov
mov
cmp
js
jle
jbe
inc
daa
rorl
je
cmp
pop
or
and
mov
jb
dec
int3
cmp
fadds
gs
fsubs
add
scas
insl
arpl
hlt
cmp
pop
jne
xchg
popf
les
cmpsb
and
in
jl
and
fmull
addr16
rcll
dec
mov
inc
inc
sub
aad
pop
lret
mov
dec
mov
fidivs
fists
xrelease
xchg
addl
mov
test
clc
addr16
lock
nop
inc
stc
sub
hlt
cmp
or
sbb
addb
repnz
outsb
sbb
jmp
jmp
hlt
cmp
test
sbb
shrl
in
insl
stos
dec
icebp
or
test
lods
xchg
sub
lock
mov
movsl
dec
lret
in
ss
shlb
pop
out
xor
cmpsb
adc
jo
xchg
aam
je
movsl
imul
mov
xor
pop
lock
pop
mov
out
adc
es
jge
or
push
scas
out
pop
lcall
cmp
ss
insl
pusha
and
jmp
dec
jmp
cmp
xor
lret
andb
inc
cmp
ja
push
xchg
xchg
imul
add
mov
sbb
mov
in
stc
xlat
cwtl
scas
aaa
xchg
sbb
xchg
jne
pop
int
loop
or
pop
mov
push
in
sub
inc
push
cs
mov
mov
adc
jmp
add
cmp
xchg
mov
les
scas
icebp
out
adc
pop
lret
popf
sbb
ret
inc
out
lret
adc
aad
rcll
sbb
mov
mov
sub
sub
lcall
mov
dec
mov
test
mov
iret
in
mov
loopne
out
dec
jl
jecxz
xor
xchg
lds
cmp
ficomps
rorl
jmp
push
mov
add
les
pop
enter
outsb
mov
outsl
ficoml
addr16
or
repnz
or
push
insl
imul
shlb
xchg
dec
inc
jp
sub
ret
into
addr16
or
insb
scas
mov
rolb
out
vmovaps
cmp
sub
mov
push
inc
push
sbb
jge
dec
leave
int
xchg
decb
ljmp
xor
or
lcall
ficomps
clc
fwait
shr
jb
cld
hlt
pushf
sub
mov
pop
jne
sarl
int
or
pop
mov
fwait
lcall
ret
sbb
mov
lea
repz
lods
push
jmp
inc
das
mov
jmp
push
adc
and
sbb
sub
js
pop
push
push
movsb
cmp
jb
aad
dec
cmc
adc
hlt
jbe
daa
shll
mov
lds
rorl
imul
out
or
lock
fs
adc
ret
lret
loopne
stc
subb
lahf
inc
repz
dec
mov
cmp
rorl
jo
xor
movsl
in
test
cmc
gs
icebp
sbb
leave
hlt
int
aaa
mov
sbb
jnp
and
push
or
cwtl
mov
jmp
call
les
mov
in
sarl
imul
lret
mov
ss
fnstsw
or
add
das
sub
jns
in
cmp
imul
cld
pop
movsl
minps
int3
inc
imul
sbb
es
movsb
sub
sbb
fisttpl
sub
xlat
xchg
lds
xchg
xchg
push
pop
inc
ljmp
loop
orb
mov
mov
popf
cmp
mov
lea
test
fwait
stos
mov
jge
mov
sub
pop
sub
xchg
pop
loopne
test
add
rcl
sbb
fsubrp
cmp
test
leave
jne
xchg
outsb
sbb
into
inc
out
mov
imul
test
aad
push
mov
xor
or
sbb
aam
leave
in
hlt
or
mov
mov
enter
imul
lret
adc
push
aas
dec
or
add
addr16
roll
or
in
adc
sahf
add
popa
out
sar
les
fistl
ss
mov
ds
push
or
push
lret
mov
inc
loopne
inc
xlat
push
sbb
xchg
lock
lret
push
adc
jo
lret
sbb
arpl
pop
pop
sbb
sbb
loope
imul
adc
jnp
out
pop
stos
cltd
in
fwait
int
aaa
stos
loop
dec
loopw
hlt
and
jbe
hlt
fiaddl
out
enter
inc
in
das
sub
loop
mov
fs
fadds
stos
sub
cmc
fldl2e
dec
pop
rcl
and
cltd
jbe
in
xlat
and
adc
xchg
add
xchg
out
add
adc
loopne
add
insl
out
push
xchg
in
lods
or
xor
enter
das
shr
aad
or
ss
cmp
add
mov
pop
add
in
xchg
and
cmpsb
sbb
dec
testl
in
cmp
inc
mov
repnz
push
cmpsl
lea
pushf
or
pop
sbb
dec
imul
xchg
lret
nop
es
pop
dec
mov
add
nop
and
mov
push
pop
cmp
nop
inc
inc
sub
push
into
xchg
push
mov
in
cmp
pop
dec
sub
ror
mov
pop
andb
stos
add
lds
add
or
xchg
cmp
jbe
insl
dec
insb
arpl
xchg
sub
push
xchg
test
insl
xchg
dec
int3
xchg
lock
pop
sbb
nop
mov
scas
jns
mov
jg
fidivrl
cli
movsl
xchg
aas
cltd
xchg
jno
add
push
cmp
out
ljmp
or
shlb
loope
fld1
popf
call
fsubrl
mov
cmp
dec
cmp
in
gs
leave
push
int3
lods
inc
cmpsl
outsl
mov
push
xchg
fxch
xchg
mov
clc
into
les
nop
flds
push
cwtl
ss
jne
pop
jns
mov
lcall
sbb
xchg
adc
fimull
and
cltd
dec
xchg
xchg
stos
in
adc
inc
test
addr16
sbb
jp
std
mov
dec
sbb
bound
xchg
and
sub
nop
sbb
mov
imul
sub
das
mov
xor
ss
mov
jl
fwait
imul
vshufps
push
inc
sbb
mov
xchg
pop
popa
gs
inc
in
in
in
pop
sti
insl
mov
xchg
dec
push
mov
or
aad
pop
fsubs
dec
cli
lret
nop
and
fdivl
orl
and
imul
fdivrs
call
loop
push
pop
shlb
push
fsubrs
les
push
insl
push
sub
push
push
fistpl
push
cmp
outsl
cmp
push
add
outsb
and
int
jb
rcl
pop
lock
f2xm1
lock
test
or
mov
sbb
ja
mov
jae
cmp
dec
orl
adc
lods
xchg
add
jno
xchg
fs
int
xor
lcall
jo
imulb
mov
aad
test
mov
or
outsl
addr16
hlt
sub
jno
xor
rcl
mov
and
jl
inc
jne
mov
in
add
js
jbe
loopne
adc
lods
mov
jmp
cltd
movsb
stos
fcoms
nop
aad
sahf
push
test
cld
push
dec
mov
mov
cmpsb
into
jo
loop
in
mov
cmp
aas
popl
imul
inc
dec
in
dec
into
inc
sahf
ja
sbb
sbb
jne
fists
insl
and
out
out
lds
clc
sbb
nop
ror
ror
jne
sbb
inc
ds
out
mov
aam
stos
xchg
loope
pop
cmp
out
push
outsl
jmp
push
or
fstp
addr16
paddb
jge
mov
nop
jg
hlt
mov
or
stos
shlb
mov
aas
mov
test
sbb
jbe
mov
pop
imul
adc
push
push
mov
cmp
outsl
ret
jmp
gs
push
cmc
jge
sub
cwtl
adc
and
mov
xchg
mov
lret
daa
ret
jmp
cmp
out
js
lds
repnz
fstpl
xchg
int3
pop
imul
in
lods
hlt
daa
mov
adc
stc
aad
loopne
fisubl
insl
loope
pop
or
enter
out
lea
test
dec
dec
in
gs
dec
mov
dec
ljmp
sub
inc
add
sbb
aaa
sbb
mov
push
xor
test
fwait
mov
cltd
cwtl
pop
mov
push
test
xchg
and
pop
shrl
xlat
xchg
cmp
nop
mov
add
shlb
mov
jno
xlat
xchg
push
xchg
cltd
inc
in
call
lock
shrb
jl
adc
mov
pop
mov
andb
divb
push
cmpsb
or
mov
mov
cli
fdivp
dec
out
push
push
inc
xor
mov
ljmp
cmc
lods
imul
stos
pop
in
xchg
outsl
andl
mov
int
sahf
test
inc
test
lds
lods
ret
pop
scas
sub
push
lds
fisubs
out
mov
cltd
adc
call
jl
fmul
fistpl
inc
iret
inc
jb,pt
mov
pop
inc
out
mov
adc
xchg
push
sub
cli
mov
mov
xchg
out
adc
mov
push
xlat
jne
lret
pop
cmp
mull
jo
xchg
mov
jmp
mov
inc
lds
mov
xorl
neg
addr16
pop
movsb
push
jle
insl
pusha
jnp
loope
dec
jae
or
jae
jp
das
push
scas
push
sub
cltd
push
pop
js
hlt
flds
jmp
mov
subb
lea
pop
adc
fldcw
out
in
in
imul
mov
dec
inc
fdivr
imul
dec
fs
inc
jecxz
pushf
push
popa
mov
mov
repnz
sub
or
loope
pop
xchg
xchg
clc
stc
dec
std
inc
mov
gs
sbb
push
pop
xlat
dec
jbe
int3
and
rorl
cmp
jecxz
push
decl
jl
push
imul
xchg
out
loop
xchg
mov
negl
je
mov
test
cmpsl
push
lock
cmp
sub
mov
mov
daa
fs
and
pop
stos
cmpsl
pop
in
push
xor
ljmp
sub
xor
enter
scas
dec
sbb
dec
hlt
lcall
loope
pop
mov
adc
and
testl
repnz
push
mov
mov
cmp
jl
testl
icebp
repnz
orl
fsubrs
dec
mov
mov
cwtl
dec
add
fiaddl
xchg
pop
fs
pop
push
cmpsl
inc
jo
mov
cli
fildll
and
gs
mov
js
xchg
in
add
pop
sub
xor
clc
cmp
cmp
push
sti
lds
cmpsb
mov
nop
loope
sbb
aas
adc
lock
sbb
insb
movsl
jl
mov
sbb
dec
repz
popf
inc
jmp
lcall
and
push
cmp
int
xor
into
push
sbb
sub
inc
xor
sub
xor
push
or
mov
add
lods
jl
cmp
pop
sub
xchg
adcl
lret
jmp
arpl
addr16
pop
loop
lds
or
sbb
test
mov
lods
aad
jne
js
push
std
outsl
xchg
inc
cld
mov
jp
movsb
inc
and
or
popa
mov
sbb
pop
into
push
int3
or
fldcw
inc
mov
mov
test
sbb
jecxz
aas
jb
insl
in
sub
pop
or
cmp
or
push
aas
lcall
lret
clc
shrb
push
pop
fcmovb
xor
loope
cmp
loope
test
and
mulb
lret
arpl
mov
sbb
mov
into
cmp
insl
pop
call
nop
in
mov
mov
push
ljmp
push
in
xchg
imulb
ds
sub
mov
sarl
xchg
add
faddp
or
ja
test
stos
dec
aad
dec
add
mov
xor
mov
jae
repz
sub
int3
jnp
stc
lcall
add
lea
fwait
nop
sbb
mov
xchg
mov
in
stc
decb
xchg
or
sbb
or
cmp
sbb
sbb
dec
jecxz
insl
cmp
push
sub
cltd
pop
mov
out
xchg
xchg
jle
push
ljmp
das
ss
out
jne
aad
pop
xchg
mov
fcoms
lcall
aad
in
mov
cli
sbb
mov
mov
fs
data16
push
outsl
out
iret
push
cmp
arpl
pop
sub
dec
shll
cmp
push
and
inc
xchg
es
lret
add
fwait
imull
insb
fwait
mov
call
mov
or
dec
inc
lods
int
xchg
mov
dec
adc
fs
jbe
adcb
into
jmp
pop
sub
push
cltd
cmp
or
ljmp
stos
xor
lea
leave
gs
inc
or
add
pop
fstp
in
andl
popf
loopne
mov
mov
mov
int3
cmpsl
lods
lds
push
adc
mov
scas
pop
cs
dec
fcmovnbe
test
sahf
test
sbb
or
or
fnstenv
cmp
fwait
out
mov
jl
sbb
cwtl
dec
int
sub
in
dec
jno
lock
shr
adcb
mov
add
pop
fsubr
mov
ror
mov
jns
lea
ficompl
fnop
push
daa
jo
or
test
sub
cwtl
fwait
into
jns
dec
pop
aam
cld
test
sti
mov
enter
pop
cmp
push
mov
movb
lds
outsl
fmul
shlb
pop
and
js
cmp
xchg
mov
xchg
enter
int
aad
loop
mov
imul
jge
push
mov
inc
addr16
add
mov
fs
rclb
fisubs
outsl
nop
pop
xor
insb
xor
out
xor
inc
mov
jnp
and
jae
lds
rclb
das
gs
ss
decl
add
push
fisubrs
add
ss
mov
add
enter
mov
inc
jo
lret
fcoml
sub
or
in
cmp
fildl
dec
mov
fcompl
fs
aas
mov
outsb
cmpsb
daa
push
push
xor
cltd
jecxz
cmpb
lcall
xlat
xchg
inc
push
mov
leave
addr16
pusha
push
dec
cld
push
xchg
inc
jbe
mov
mov
ret
and
inc
mov
ret
fs
fcoms
addr16
mov
stc
arpl
xor
lea
sbb
lods
jno
lods
add
mov
mov
xor
movsb
lea
mov
fcompl
add
dec
gs
out
and
je
dec
push
imul
test
call
lahf
lret
xor
fs
mov
add
aam
cld
jp
fs
sbb
push
shll
push
mov
jne
mov
pop
mov
fs
jo
jmp
pop
hlt
loop
mov
out
pusha
mov
mov
aaa
jo
mov
popf
cli
movsl
test
inc
inc
es
xor
int3
aad
mov
call
in
les
jp
aam
inc
movsl
dec
std
shlb
addr16
and
mov
aaa
mov
mov
and
rclb
mov
js
in
addb
push
pusha
push
xchg
inc
cmp
pusha
dec
jne
xor
pop
cwtl
pop
out
imul
mov
or
je
pop
scas
cmp
into
sbb
mov
shll
push
pop
cs
push
lock
jp
out
inc
fimull
and
jl
insb
int
rcrl
lds
sbbl
addr16
sbb
fnstenv
jo
cmp
xchg
mov
cmp
gs
inc
xchg
mov
sub
mov
and
add
cmp
jp
orb
jae
pop
push
in
push
inc
mov
or
idivl
in
or
hlt
pop
sub
test
or
sbb
faddl
js
sub
cmp
cltd
gs
mov
sbb
push
insb
int3
gs
hlt
addb
cmp
icebp
fs
cmp
sbb
push
adc
push
xor
int
lods
fldlg2
loopne
xor
push
mov
cmpsb
scas
xchg
or
movsb
test
lret
fldenv
js
push
gs
adc
xchg
xchg
repnz
mov
ja
repz
nop
imul
fwait
jae
in
xchg
sub
mov
fcmovne
dec
cmpb
push
lods
les
popf
pop
neg
or
ljmp
inc
xchg
xchg
repnz
xchg
adc
pop
test
pop
mov
fmull
or
pop
and
js
mov
cmp
out
es
int
lcall
gs
or
or
push
push
sbb
mov
adc
cmp
insl
mov
pop
stos
fucomip
call
fwait
scas
pop
jnp
inc
push
in
std
bound
and
insb
mov
or
test
mov
adc
fildll
jbe
cld
xor
lret
dec
xor
mov
mov
loope
mov
sbb
shlb
cmp
cmp
or
movb
ret
mov
mov
fwait
ljmp
push
add
je
mov
sbb
adc
xlat
pop
out
mov
test
pop
dec
inc
js
inc
std
lcall
leave
cmp
and
pop
fsubl
add
cmp
add
adc
sub
bound
mov
push
pop
cmp
jno
jge
and
pop
xor
gs
pop
push
or
jl
test
pushl
add
aad
int
iret
lods
mov
mov
pop
jmp
xchg
into
jmp
fsts
xchg
push
insb
iret
add
movsb
or
loopne
fdivrp
dec
add
jb
add
push
lods
dec
jl
fwait
test
pop
mov
negl
dec
imul
movsl
sub
jp
movsb
shl
int3
sub
push
push
mov
repnz
xor
lds
mov
jmp
pop
add
or
in
pop
cmp
test
scas
mov
push
das
lock
out
test
lds
adc
mov
inc
ja
movb
lds
lea
imul
mov
repnz
add
loop
xabort
push
mov
or
data16
repnz
pop
in
xchg
inc
sbb
xor
nop
and
push
xor
popf
repnz
jns
cmp
mov
aas
pop
xor
mov
mov
pushf
sbb
pop
out
mov
mov
hlt
pop
sub
repnz
aaa
xor
dec
int
mov
fsubl
sub
rcl
stos
fsubrs
mov
sbb
imul
jmp
imul
loope
mov
leave
mov
imul
jle
data16
pop
cli
psubsb
imul
lahf
inc
push
loopne
and
jnp
and
pusha
stos
aaa
push
js
shlb
sbbl
push
and
movsb
cmp
mov
or
xchg
lods
mov
add
lods
in
push
inc
rcl
mov
ret
loopne
adcl
loope
cld
mov
sbb
in
jno
in
and
hlt
pop
and
shrb
xlat
ljmp
and
push
cmp
jno
into
mov
sub
push
or
int3
adc
rclb
andb
fidivl
jle
push
enter
scas
xor
sub
lret
gs
bound
add
pop
jae
iret
mov
cs
add
xor
mov
lahf
jmp
inc
sub
pop
negl
xor
mov
xchg
mov
and
push
pop
call
imul
lret
int
fwait
mov
ss
ja
aas
jl
pop
add
das
xor
or
add
stos
pop
bound
jb
xor
insb
lds
push
imul
mov
xchg
mov
mov
or
sbb
decl
fdivs
sbb
xchg
aam
dec
push
jl
xor
xchg
mov
mov
mov
mov
push
aas
addr16
jne
lret
add
add
mov
sarl
fnstsw
mov
xchg
dec
mov
push
xor
fdivs
mov
and
cmp
outsb
std
call
push
adc
sub
call
pop
inc
add
aaa
aas
aad
jle
fdivs
shlb
les
add
mov
jae
xchg
fs
pop
insl
inc
clc
jns
aaa
out
stc
loop
sti
and
lock
out
les
sbb
dec
mov
adc
call
dec
test
call
inc
mov
cmc
xchg
mov
jmp
lret
daa
out
test
lods
lret
out
ss
sbb
dec
fcomp
adc
and
pop
fld1
dec
dec
pop
in
sub
scas
in
mov
xrelease
jg
fsubs
imulb
jno
test
xchg
data16
std
sub
xchg
hlt
lret
in
sbb
mov
dec
adc
gs
and
out
js
adc
pop
xlat
mov
xchg
push
out
fstp
sti
test
xlat
in
test
es
push
adc
cwtl
and
fs
mov
outsl
push
sbb
xchg
mov
push
jo
es
cwtl
dec
mov
call
je
push
notb
movsl
fucomi
push
jmp
dec
cmpsb
in
pop
xchg
stc
cmpsl
pusha
pop
cmpsl
es
xchg
adc
mov
movsl
int
dec
testl
xor
pop
js
sbb
dec
lds
fcmovb
sbb
push
xchg
pushf
in
xchg
mov
call
out
lahf
xlat
fildl
and
into
fsubr
sub
jmp
dec
stos
push
fcoml
inc
xchg
gs
movsl
jp
push
add
pop
inc
in
je
sbb
pop
push
out
mov
pop
mov
lds
fdivrs
push
dec
mov
addr16
pop
repz
xchg
add
sti
gs
sbb
mov
sbb
xchg
or
push
jns
lret
repnz
dec
in
sub
xchg
xchg
ds
gs
dec
xchg
inc
push
jp
leave
push
loop
cltd
pop
xor
mov
jl
hlt
inc
out
ljmp
and
mov
shrb
sbb
imul
adc
and
rolb
sahf
into
in
in
cmp
ds
imul
mov
and
dec
mov
jecxz
dec
pop
mov
mov
loop
cmc
lea
imul
mov
pop
inc
int3
and
ljmp
repz
rcrl
pop
insb
rolb
mov
dec
xchg
jmp
dec
in
mov
push
mov
add
or
ret
sub
lcall
pushf
mov
sbb
imul
or
push
stos
mov
mov
xchg
cmc
test
inc
or
iret
into
jbe
fucom
push
mulb
mov
leave
jge,pn
repnz
cmp
enter
divl
xor
and
mov
xchg
xchg
cmp
push
int
call
test
inc
std
pop
mov
addr16
adc
pop
lcall
in
sbb
cmp
pop
and
push
jle
test
les
add
inc
rcll
gs
jno
add
inc
push
hlt
test
test
mov
push
nop
inc
pop
ss
aam
adc
imul
jp
dec
pop
push
lcall
inc
fsubl
xchg
push
mov
mov
fs
fadd
xchg
sub
mov
lock
in
jge
jo
xchg
test
cmp
sub
test
aam
sbb
repz
sub
movsl
test
mov
loop
jb
inc
rol
stos
cli
clc
sbb
sbb
mov
pop
lods
sub
and
or
rolb
ds
cmp
shll
inc
cmp
mov
les
jge
mov
inc
push
scas
out
adc
sbb
xor
pop
mov
xchg
xor
or
rol
lds
loope
sbb
std
mov
fnsave
sbb
adc
or
movsl
pusha
loop
es
stos
hlt
sub
or
loopne
or
dec
dec
ret
fadd
ret
cmp
sbb
cmc
loope
xchg
gs
subl
outsb
clc
imul
push
aad
jp
outsb
sbb
iret
fcompl
leave
aad
nop
in
ret
imul
movsb
addr16
dec
les
jb
loop
out
or
mov
xor
pop
or
lock
inc
sub
push
pop
test
xchg
sub
ljmp
or
ljmp
loop
adc
inc
inc
jge
les
pusha
inc
aad
inc
popl
cmp
inc
jno
mov
fnstenv
cmp
or
mov
ljmp
adc
sti
inc
mov
fs
out
fistps
or
stos
mov
insl
or
adc
push
jno
inc
aas
sub
sbbl
xor
popf
stos
sbb
push
cmp
mov
dec
pop
pop
sub
jno
es
ljmp
aaa
ret
gs
fs
mov
push
aam
call
inc
insl
cmp
fmul
pop
fnstsw
clc
orb
dec
psubsb
sarb
cmp
or
out
dec
shl
rorb
xchg
adc
cmp
push
call
lret
mov
daa
mov
lock
dec
into
call
push
ja
mov
mul
jecxz
pop
pushf
in
cmp
inc
jb
xchg
bound
pop
xor
jge
out
pop
jmp
fadds
clc
jne
or
sbb
call
cwtl
and
push
mov
dec
adc
xchg
in
add
or
lods
shl
lea
dec
pop
or
shl
push
mov
dec
clc
dec
sbb
or
push
into
sub
clc
outsl
mov
movsl
out
xchg
xchg
movsb
nop
cld
rcrb
addr16
sahf
ljmp
mov
push
nop
adcb
xchg
xlat
mov
mov
js
aam
add
aaa
pop
dec
daa
nop
pop
call
dec
js
xchg
xchg
and
bound
out
enter
sub
fldt
pop
xlat
in
mov
push
mov
call
movl
test
add
imul
es
in
inc
and
scas
push
out
push
clc
stc
push
out
pushf
pusha
dec
in
insb
xor
dec
inc
xchg
clc
sbb
pop
push
pushf
xchg
push
xchg
movsl
lret
lods
xchg
dec
dec
push
pusha
xlat
push
xchg
into
push
idivl
ja
and
call
or
pusha
aad
test
addr16
inc
out
ss
pop
sti
imul
pop
pop
push
stc
test
pop
fcomps
mulb
xchg
pop
cltd
es
mov
push
inc
pusha
movsl
daa
call
mov
repz
add
mov
add
push
push
xchg
sub
inc
cmp
mov
aaa
fwait
pop
decl
jo
dec
push
dec
or
loop
xchg
std
sbb
or
call
shrl
ss
fcmovbe
in
fnstcw
insl
popa
pop
lods
out
or
or
cld
mov
andb
mov
fistps
fdivrs
in
fcmovbe
cmpsb
dec
int3
loope
or
jo
rcr
jb
scas
jne
addr16
mov
in
sub
push
push
lock
mov
outsb
sub
lret
addr16
xchg
xchg
push
add
test
push
fadds
add
into
cs
mov
mov
sub
adc
js
jp
jo
or
mov
jge
in
imul
cltd
stc
aam
xchg
and
add
ret
and
shrb
rcr
arpl
cltd
sbb
push
test
loope
imul
inc
lcall
out
pushf
jmp
add
xor
push
cwtl
pop
jns
stos
xor
lea
push
gs
dec
fsubs
push
sub
lds
xor
mov
adc
imul
movsl
and
gs
push
shlb
dec
pusha
ror
push
cmpsl
ss
cs
or
fnsave
mov
mov
mov
dec
mov
js
jl
jg
aad
xchg
fsubrl
xchg
gs
aas
cmp
adc
push
lods
shrb
push
jbe
gs
xchg
imul
insl
ret
ret
mov
inc
inc
iret
stos
cwtl
adc
cmpl
push
test
hlt
fucomp
rcl
pop
cs
push
lea
xor
cmp
fwait
xchg
or
cmp
faddl
in
mov
dec
outsl
xor
fcom
inc
mov
jmp
or
mov
inc
push
idiv
cltd
cwtl
repz
mov
sti
and
jp
cmp
lds
mov
ror
sub
jle
popl
xchg
out
in
pop
ja
insl
gs
pop
inc
mov
push
inc
and
cmp
sbb
arpl
sub
lcall
bound
movsb
mov
sti
xchg
sub
xor
out
jno
pop
xchg
jmp
fwait
lea
jg
push
out
xor
inc
fsubs
repnz
loop
gs
addr16
add
mov
mov
stos
dec
mov
sti
xchg
and
lea
call
xchg
outsb
hlt
sbb
xchg
scas
rcr
insl
sbb
mov
int
in
lcall
pop
lret
sarl
fcomps
fcmovnbe
call
adc
lret
inc
jo
es
movsb
scas
lea
js
dec
xor
shrb
push
mov
hlt
push
lret
popf
and
xor
sbb
or
insl
jmp
cmpsb
and
pusha
repz
neg
pop
jbe
cmp
lock
stos
jns
shrl
pusha
rcll
popa
popf
ret
stc
mov
mov
mov
or
push
mov
out
mov
dec
popf
adc
and
lods
inc
mov
inc
daa
aam
stos
repnz
lods
std
aad
jae
jge
sti
sub
sub
mov
clc
push
pop
jle
xchg
jle
cmpsl
mov
mov
icebp
enter
adc
mov
mov
loope
ficompl
ret
imulb
inc
andl
mov
rolb
imul
dec
mov
lcall
or
test
arpl
loope
aad
add
and
dec
test
or
jo
mov
pop
sbb
ficomps
mov
out
mov
insl
movb
mov
hlt
cmp
cs
xor
enter
mov
mov
inc
addr16
into
sbb
mov
mov
fcmovb
xor
mov
add
js
iret
push
xor
cmp
sub
add
inc
xlat
sbb
pop
lret
lods
ret
dec
jns
sub
push
shl
das
aaa
and
mov
addr16
lods
xor
cmp
mov
pxor
cmpl
je,pt
pop
outsl
inc
jns
enter
sti
pop
sub
repnz
adc
lret
nop
adc
movsl
inc
leave
in
cmp
mov
jne
push
scas
mov
lret
scas
je
movsl
sub
adc
call
test
and
add
xchg
and
dec
scas
inc
cli
push
jg
pop
jb
and
aad
out
out
cmp
test
les
lahf
sub
mov
cmpsb
lea
insl
push
lods
negl
loopne
cmpsl
data16
enter
and
dec
sahf
and
ret
cmp
iret
push
in
dec
mov
cmp
jbe
hlt
sbb
mov
jp
cmpsl
inc
mov
or
addr16
or
cltd
pop
sar
aam
popf
gs
lds
sub
mov
mov
xchg
jbe
mov
call
jno
scas
sub
xchg
notb
cmp
fldl
sbb
fwait
clc
mov
sti
xchg
push
cltd
repz
jb
xor
daa
mov
clc
outsl
mov
loopne
cmp
mov
out
cltd
and
cmp
in
jnp
sbb
lods
push
push
in
adc
xchg
dec
cmp
xchg
frstor
xor
daa
rorb
mov
ror
cs
adc
dec
mov
int
in
bound
jmp
xchg
cmp
mov
inc
scas
mov
add
xlat
popw
add
mov
into
lahf
gs
repz
lea
add
dec
xlat
push
std
mov
out
fstl
imul
cmc
xor
push
mov
lock
and
sub
loop
hlt
push
mov
mov
or
jl
sti
repnz
dec
out
iret
out
mov
ljmp
out
xor
pop
imul
xor
xchg
leave
mov
loope
sub
lea
inc
xor
adc
jbe
dec
cmpsb
int3
and
enter
imul
push
and
dec
adc
xchg
cmp
add
or
aas
cmpsb
inc
jmp
mov
xor
in
ss
mov
push
jecxz
pop
int3
ret
mov
push
lahf
ljmp
xlat
dec
xlat
pop
xlat
push
xchg
fnsave
push
add
cmp
xor
cmp
out
mov
mov
pop
add
fisubl
jmp
mov
inc
jg
int3
push
lahf
imul
rolb
and
cmpsl
test
cmp
dec
movsb
sbb
sbb
in
dec
mov
imul
into
mov
push
int3
fsubr
dec
pop
imul
and
addr16
es
push
jp
or
lock
rcrl
push
jno
aam
xor
xlat
divb
xchg
sub
out
xor
das
in
fdivl
repz
loope
aam
dec
dec
iret
pop
shrl
fistpl
jns
rcl
xchg
mov
scas
pop
in
out
gs
jmp
sbb
incl
jg
and
adc
sbb
shll
push
add
leave
mov
negb
pop
aaa
gs
xchg
aaa
out
sub
push
pop
sub
scas
dec
fists
gs
lret
mov
cmp
idivb
and
xchg
addl
add
es
outsb
pop
dec
test
ret
cmp
leave
sbb
test
push
outsl
dec
gs
inc
in
push
jns
mov
cmp
inc
push
addr16
lods
push
inc
push
pop
mov
xchg
fwait
xchg
inc
xchg
jns
mov
xchg
sub
dec
imul
adc
notl
aad
lcall
icebp
dec
fiaddl
or
enter
ret
push
sbb
stos
jne
adcl
loopne
mov
sahf
shrb
mov
sbb
adc
cmpsb
lods
imul
mov
xchg
lret
cmp
div
sub
xlat
bswap
sub
inc
dec
imul
jbe
imul
mov
mov
sbb
xchg
movsb
push
out
mov
sub
nop
imul
push
mov
sbbl
mov
in
jecxz
ljmp
ljmp
imul
xchg
testl
dec
fwait
dec
rorl
negl
sbb
ss
sub
add
sbb
orl
fidivrs
test
jne
daa
lds
and
in
fwait
xor
fs
xchg
lods
shrb
movsl
shll
jl
xchg
cltd
mov
ljmp
aas
nop
ds
jb
scas
into
jecxz
dec
fwait
mov
ja
out
inc
mov
leave
and
pusha
pop
fiaddl
lret
cmp
add
mov
xchg
repz
xor
push
xor
push
mov
jge
mov
mov
cld
leave
in
aam
mov
xor
mov
or
gs
xor
adc
dec
hlt
cli
insl
mov
push
das
push
ljmp
add
repnz
xchg
aad
test
jge
sub
ljmp
outsl
loopne
out
rorl
pop
xchg
dec
stc
mov
xchg
jge
sub
pop
mov
test
int3
jbe
xchg
stc
in
push
sub
in
xchg
rcr
or
mov
cli
test
aaa
in
inc
or
sarb
imul
ficoms
scas
jmp
lock
and
cmc
sub
inc
hlt
cmc
lds
shlb
fbld
jmp
fwait
jae
jg
test
xchg
dec
sub
pusha
xchg
adc
aad
sub
push
mov
imul
push
ss
gs
ss
call
inc
pop
lahf
stc
jb
in
xor
mov
cmp
lea
push
cmp
push
adc
insl
cli
fisttpl
hlt
gs
outsb
push
lret
xchg
int
pop
add
sub
sub
xor
gs
sti
jne
mov
std
adc
sbb
imul
or
push
in
xor
test
pop
leave
hlt
rcl
in
pop
ljmp
mov
push
std
sti
fsubr
lock
push
fwait
jle
int3
cli
sbb
pop
cmp
in
leave
sbbb
xchg
insb
ja
sbb
jns
sbb
cmp
push
cltd
loopne
cltd
sti
insl
shll
sub
shr
sti
cmp
xlat
xor
inc
call
ljmp
int3
out
jge
ljmp
mov
gs
test
inc
popa
mov
imul
xor
leave
jge
pop
ds
fmul
fstps
inc
scas
and
mov
iret
lret
mov
outsl
inc
cwtl
pop
add
cmp
loop
pop
shl
and
or
cmp
ret
push
dec
mov
sarl
mov
push
and
and
shll
sub
dec
dec
loopne
sti
fxch
push
add
mov
jp
cmp
lods
sub
mov
int
addr16
stc
lret
mov
loop
mov
mov
dec
lea
cmp
sbb
addr16
in
cli
aas
enter
ds
xchg
mov
dec
mov
sbb
pushf
test
mov
insl
mov
inc
scas
shll
inc
lret
leave
daa
mov
mov
scas
mov
clc
js
inc
mov
sbb
mov
aas
ret
or
int3
lds
imul
cli
shlb
insb
mov
mov
aad
jl
negb
mov
adc
push
pop
stos
movsb
xor
in
sbb
mov
add
pop
or
sbbb
jns
or
call
cltd
inc
push
xchg
in
dec
stos
imul
add
pop
out
mov
inc
cmp
lcall
cmc
mov
subl
dec
xchg
jae
dec
fisttps
cltd
lods
cmp
clc
repnz
jae
xchg
xchg
adc
inc
mov
outsl
scas
jecxz
in
add
adc
and
pop
sbb
pop
pusha
inc
repz
fwait
std
xchg
sbb
out
addr16
lahf
imul
mov
pop
push
pop
imul
hlt
cmp
jl
or
test
dec
outsb
xchg
or
jmp
dec
scas
adc
rcr
leave
dec
scas
pop
fsubl
movl
pop
lret
fildl
gs
repz
xchg
imul
and
mov
rcpps
out
test
push
into
sub
out
clc
lods
imul
call
cwtl
and
cwtl
test
nop
sub
test
lret
test
jne
daa
loope
sub
dec
adc
mov
pop
test
je
test
mov
xchg
cmp
call
popf
jb
leave
fs
out
dec
or
cmp
lahf
ja
xchg
xlat
push
insb
test
push
fwait
in
lds
testb
test
jo
push
clc
movsl
sub
mov
cmc
dec
leave
out
sbb
aad
inc
xchg
loopne
mov
inc
in
mull
outsb
test
mov
shlb
mov
iret
imul
in
mov
shrb
mov
mov
mov
mov
in
fdivs
push
add
insl
dec
outsb
call
adc
xchg
inc
xor
jb
gs
inc
lock
lods
xor
pop
fistpll
out
nop
mov
dec
adc
iret
or
lods
xchg
testl
xchg
jbe
insb
mov
jo
pushf
cmp
adc
call
je
dec
ss
dec
stos
aad
mov
test
pop
outsb
push
jbe
inc
rorb
sub
xchg
xchg
sub
jo
call
imul
outsl
sub
imull
pop
push
stc
addr16
push
lea
leave
mov
cmp
out
cmpsb
push
sbb
push
out
out
test
pop
jbe
out
pop
jo
addr16
mov
movsl
stos
dec
inc
cmp
mov
enter
mov
push
pop
push
stos
xchg
and
addr16
dec
push
in
cwtl
addr16
divl
into
jne
outsb
fcom
push
pop
repnz
or
mov
into
cwtl
pop
push
out
or
push
or
scas
out
test
call
mov
fwait
jle
clc
das
lock
enter
insl
pop
jg
lahf
out
stos
int3
sub
in
test
addr16
mov
gs
mov
dec
in
inc
lds
sbb
jg
xlat
into
scas
movsl
cmp
lahf
mov
insl
adc
data16
shll
loopne
and
mov
fs
dec
add
fcmovbe
in
iret
or
test
pop
hlt
pop
adc
adc
jo
mov
das
fldt
addr16
enter
mov
dec
pop
jae
xchg
push
inc
notl
add
mov
stos
xchg
js
adc
and
test
dec
mov
push
and
out
xor
pop
adc
adc
inc
loopne
or
sti
lret
fnstenv
cmp
dec
rcl
lock
jae
mov
mov
xor
sbb
push
hlt
out
lret
gs
mov
pop
ficoml
mov
jle
pop
cmp
loopne
mov
dec
sub
cmp
xchg
mov
out
push
mov
mov
nop
mov
add
cmp
dec
xor
dec
sbb
pushf
shlb
out
das
outsl
xchg
out
push
sbbl
add
mov
es
imul
insb
mov
mov
popf
jae
and
cmp
aaa
popl
xor
ret
jmp
push
lcall
add
imul
std
in
inc
xor
sub
mov
push
shlb
inc
xor
fsubr
lahf
sub
jno
inc
mov
loopne
out
mov
hlt
dec
or
mov
cltd
jle
push
xor
jmp
pushf
loop
fdivp
mov
or
or
aas
mov
dec
adc
insb
sub
jne
addr16
das
lret
or
out
es
fisubrs
sub
xchg
into
push
cmp
xchg
in
mov
or
jmp
inc
jne
ret
mov
pushf
mov
and
mov
imul
dec
mov
inc
into
adc
mov
push
aaa
mov
enter
cli
cwtl
sti
sahf
fsubl
dec
pusha
xchg
lea
inc
sbb
cmc
inc
push
cmc
push
pop
popf
in
pop
ss
mov
pop
mov
in
nop
add
add
xchg
adc
xor
cmp
popa
inc
push
adc
cmp
adc
sbb
lea
or
mov
lds
sbb
sbb
push
pushf
cs
dec
cltd
call
in
dec
jb
sbb
ljmp
cmp
in
test
adc
mov
adc
jmp
sub
and
sub
loope
push
xchg
lcall
ja
jo
es
fwait
mov
xor
xchg
imulb
and
push
xor
scas
imul
mov
imul
sbb
mov
mov
push
cmpsl
and
lea
scas
push
enter
push
adc
inc
mov
in
xchg
xor
mov
inc
jae
mov
cs
mov
mov
xor
jle
popf
pop
mov
arpl
and
xchg
xor
adc
les
mov
inc
jne
clc
ds
inc
inc
ss
cmp
xor
jns
jg
mov
aas
push
repz
pop
ror
js
xchg
push
lods
add
sbb
sub
xchg
or
fbstp
stos
ss
pop
movsb
out
popa
cli
cmp
cltd
or
push
adc
xchg
cli
clc
pop
in
outsl
data16
add
incb
pop
leave
dec
rclb
ret
leave
cs
repnz
sub
lea
sub
fdivl
mov
cmp
mov
xchg
inc
mov
pop
insb
sbb
ret
sahf
mov
jns
imul
jmp
repz
or
jbe
push
xor
addr16
ljmp
mov
js
les
test
push
inc
xchg
mov
sbb
ret
mov
xchg
inc
insb
mov
mov
xchg
out
pop
in
into
imull
out
imull
hlt
sub
popl
push
out
scas
mov
imul
jp
imul
mov
dec
jns
push
sbb
insb
xlat
ret
xchg
jns
mov
call
mov
xchg
xchg
mov
mov
int3
jns
imul
gs
pop
xor
cwtl
fwait
sbb
mov
notb
popl
cmp
pop
jnp
cmpsb
xor
sub
jge
mov
cmp
into
mov
scas
in
out
fstl
fiadds
lahf
lods
lret
pop
scas
dec
lds
mov
faddl
mov
cli
cmp
cli
cmp
repz
or
push
xor
lahf
xchg
push
aad
push
jmp
sub
mov
inc
inc
fisttpll
test
add
adc
adc
rcrl
mov
stos
stos
repnz
scas
jbe
lock
mov
sahf
pop
testb
mov
or
stos
xchg
mov
and
xor
adc
gs
sbb
movsb
cmp
add
insl
out
dec
pop
sbb
inc
gs
mov
jp
xchg
fidivs
imul
lods
and
xor
mov
sbb
gs
push
dec
adc
imul
xchg
movsb
jbe
outsb
mov
mov
roll
loopne
mov
cs
mov
push
mov
cs
popf
sbb
imul
decl
clc
xor
loopne
mov
cmc
xchg
repz
ljmp
mov
lds
or
aad
sbb
cmp
xor
xor
mov
pop
xchg
shrl
mov
dec
add
xchg
test
mov
sub
mov
and
pop
hlt
jmp
lea
test
in
cmpsl
hlt
jmp
in
xchg
xor
ret
mov
mov
xchg
in
jl
mov
or
call
dec
xchg
xchg
rcl
lock
xchg
repz
ja
sbb
pop
jmp
in
pushw
filds
out
test
shrb
sbb
mov
mov
push
cmp
push
addr16
push
xchg
push
cmp
aam
or
jle
pop
dec
or
jp
push
movntps
lret
mov
lahf
testl
in
es
and
mov
orb
sub
daa
sub
fcomps
inc
into
cmp
mov
push
stos
jae
inc
les
in
repz
jb
adc
sbb
rcrb
jge
arpl
fwait
call
push
shlb
fldenv
mov
sub
ss
scas
test
leave
or
dec
ret
into
xchg
sbb
pop
loop
dec
scas
scas
aas
call
pop
lods
inc
cmp
stos
push
sbb
xor
inc
nop
enter
cltd
and
cwtl
idivl
sub
fdivrl
inc
sahf
nop
cmc
bound
push
lcall
pop
std
adc
mov
insl
mov
jle,pt
jae
or
scas
cmp
cwtl
fadd
ds
decb
addr16
fsubl
push
rorb
leave
jle
xchg
dec
xchg
in
pop
es
mov
mov
jne
mov
push
mov
push
xchg
and
sbbl
dec
out
fs
dec
ljmp
dec
xchg
pcmpgtw
pop
pop
cmp
sbb
rcr
mov
cs
and
ss
enter
cmp
push
orl
sti
jne
mov
jmp
inc
push
cmp
daa
cld
and
add
cmc
pop
outsb
inc
sbb
mov
stc
jmp
pop
lret
cld
stos
fidivrl
cmp
xchg
test
mov
push
loope
movsb
inc
sub
cmp
movsb
xchg
popa
adc
das
push
pop
mov
in
jbe
or
data16
stc
rorl
cmc
into
sbb
adc
repz
sub
jb
xchg
paddsw
je
rcrl
sub
scas
adc
repz
mov
xor
in
jecxz
testb
pushf
clc
fdivrs
push
leave
add
pop
in
jl
hlt
test
mov
call
and
lock
in
pop
sbb
adcb
push
loopne
mov
inc
lds
add
fmulp
fcomps
mov
jle
push
int
sub
inc
cmpsl
adc
cmovne
int
pop
mov
fbld
and
xchg
in
xor
xchg
leave
imul
cltd
pop
fdivrs
dec
pop
and
loopne
adc
lds
xchg
aaa
into
mov
xchg
test
fwait
or
shrb
insl
hlt
pop
push
es
push
push
add
push
in
call
inc
xchg
repz
in
xor
imul
imul
and
sbb
lahf
adc
les
push
shlb
dec
loop
inc
pop
xor
in
mov
mov
mov
jne
in
mov
int3
mov
pop
imul
push
int3
insl
adc
jmp
mov
addl
inc
stc
sub
mov
jl
xor
loop
push
ret
aam
addr16
xchg
sub
or
cmp
and
xor
push
fnstsw
xor
or
fdivrl
mov
inc
sub
xchg
fsubs
popl
or
push
aad
gs
push
sub
xchg
jle
mov
das
and
shrl
push
and
mov
or
fisubrs
lcall
add
testb
stos
mov
xor
in
push
or
inc
or
pop
add
iret
jg
push
xor
jb
adc
inc
mov
rorb
mov
shll
xlat
aad
daa
add
cli
push
mov
push
andl
call
xorl
inc
pop
dec
cmp
cmpsb
je
pusha
or
jle
daa
xchg
fidivl
pop
cmp
leave
jge
into
xchg
ljmp
movsb
xor
scas
mov
icebp
jge
iret
lret
xchg
or
daa
das
inc
inc
adc
mov
nop
je
add
mov
into
xlat
or
mov
dec
mov
aaa
cmc
inc
addr16
ret
xchg
cmp
xor
pop
sbbl
adc
jp
and
iret
out
jne
repz
fcmove
mov
adc
hlt
in
popf
imul
popf
jecxz
or
jb
sub
xchg
adc
pop
push
inc
daa
in
jl
xchg
lret
inc
mov
divl
ljmp
int3
dec
push
add
sarb
cwtl
mov
mov
fisubrs
jbe
pop
incl
ljmp
dec
into
xlat
xchg
jb
or
mov
hlt
repz
pop
je
mov
inc
xchg
mov
add
mov
out
xchg
shll
inc
sub
xchg
inc
jle
mov
dec
cmp
xchg
or
xchg
mov
pop
ja
ljmp
mov
dec
rorl
movl
push
fsubs
jmp
loop
and
jne
fcompl
xchg
adc
mov
lods
outsl
les
and
sahf
xchg
aad
mov
pop
gs
or
inc
mov
jae
testb
movsb
lea
and
inc
sub
pop
push
fsubl
add
cmp
lods
inc
test
in
fs
jno
bound
sar
sub
pop
xor
shl
xchg
inc
or
in
orl
addl
iret
in
imul
in
inc
sub
mov
imul
test
jp
lods
mov
inc
sbb
jmp
pop
call
jb
and
out
cmp
cmp
cwtl
add
push
movsb
lock
pop
int
fwait
pop
sub
or
xor
xchg
adc
dec
xchg
mov
lods
jg
out
imul
pop
in
mov
lahf
addr16
inc
shlb
scas
imul
pop
sub
int
shrl
arpl
das
into
in
sub
xchg
jecxz
mov
in
fst
cmp
push
ljmp
mov
or
out
sbb
imul
stc
xchg
mov
sbb
pop
insb
mov
dec
leave
lds
mov
or
lcall
lret
mov
pop
pop
jl
sarb
inc
pop
mulb
push
outsb
and
loopne
cmp
fwait
psubq
pop
loopne
outsb
hlt
pop
mov
mov
sbbb
cmpsb
in
repz
repnz
lret
push
inc
adc
jmp
fs
xchg
jmp
cmovb
loopne
jne
mov
jmp
sub
pusha
test
lret
outsb
shr
mov
mov
dec
js
jge
js
inc
cwtl
gs
fadd
pop
int3
sbb
fucomi
inc
call
popf
leave
icebp
mov
mov
push
lret
mov
push
jg
into
movsb
hlt
fsubs
sub
nop
lds
and
insb
mov
mov
and
imul
addr16
lea
or
pop
fmuls
mov
inc
mov
insl
inc
in
imul
fiaddl
das
adc
and
outsb
popf
dec
in
cli
cmp
add
lcall
loopne
xchg
add
pop
pop
pop
add
lahf
insl
push
pop
aam
add
movsb
test
xor
push
addr16
pop
mov
pop
loopne
shl
das
push
inc
sbb
outsb
mov
push
adc
push
mov
shlb
adc
addr16
cwtl
in
fstpl
or
push
push
or
mov
shr
fisttpll
cmp
dec
outsb
out
pusha
ret
jmp
xor
out
jecxz
pop
pop
xchg
mov
mov
mov
xor
pop
jg
jno
jmp
rorl
icebp
adc
pop
xchg
loope
aam
leave
icebp
pusha
mov
dec
fisubrl
mov
sub
ljmp
imul
ss
pop
sbb
in
lret
fistps
ss
stos
loope
fld
pop
leave
inc
pop
imul
subl
cmp
dec
mov
cli
enter
add
imul
hlt
mov
dec
dec
and
rcll
mov
sbb
stc
sahf
fsubrs
sbb
fcos
mov
imul
jns
xor
or
adc
push
jno
mov
aam
dec
rcll
lea
pop
jno
inc
mov
es
inc
jns
cmpsl
adc
lock
fldenv
jmp
cwtl
into
cltd
push
subb
push
or
nop
dec
les
cltd
jg
cs
sub
sub
push
in
sbb
pop
xchg
mov
or
loope
pop
pop
pushf
dec
xor
test
andb
mov
push
dec
or
sub
or
mov
cmp
pop
dec
add
inc
iret
jb
pop
divl
push
jge
sbb
cltd
dec
bound
lea
sahf
fstl
divl
cmp
push
leave
in
stos
sub
inc
or
and
jge
lcall
imul
dec
cmpsb
js
xor
scas
or
mov
xchg
gs
fisubrl
ja
orl
jmp
xchg
mov
cmp
lret
sarb
jle
in
aad
push
repnz
lea
in
sbb
insl
xchg
stos
lds
test
xchg
repnz
ffreep
push
aad
push
mov
lock
mov
push
in
in
call
ret
pushf
stos
pusha
imul
dec
lcall
jne
lds
std
xchg
sub
andl
add
mov
mov
enter
fsubl
insb
fs
and
xchg
xchg
xor
out
push
imul
or
mov
nop
rcll
cmp
xchg
mov
jl
push
gs
hlt
movl
sahf
adc
sub
add
faddl
cmovne
std
imul
cmp
hlt
mov
cltd
leave
popf
aam
jge
add
mov
sub
andb
push
ret
scas
inc
pop
xchg
testl
bswap
xor
dec
into
cltd
cwtl
repz
imul
or
ret
inc
stos
mov
sbb
or
imul
scas
es
mov
sbb
xchg
popa
push
jmp
push
push
mov
pop
out
mov
fwait
daa
xor
popl
or
cmp
mov
sbb
nop
gs
xchg
add
sbb
gs
xchg
mov
cwtl
call
pop
int3
sbb
mov
aad
ffree
fdivl
imul
call
dec
leave
flds
repnz
mov
fsubs
rolb
xchg
gs
mov
and
fwait
inc
jle
mov
fsubrl
jnp
pop
mov
imul
fcoml
or
and
jle
fstl
hlt
push
gs
mov
xchg
imul
mov
jp
push
jns
sti
and
inc
pop
icebp
cmp
push
lcall
push
das
in
sbb
out
sub
mov
pop
adc
inc
je
gs
outsl
xchg
xor
std
xchg
jnp
jmp
sbb
and
mov
ret
sub
and
dec
int3
lock
lds
mov
add
mov
mov
mov
mov
lods
dec
shrw
outsl
xchg
push
test
clc
pop
out
and
jp
xchg
mov
push
in
push
and
add
pop
cmp
or
xchg
in
test
pop
dec
push
dec
or
xchg
fnstsw
orl
xchg
jecxz
lret
push
jno
and
or
xor
inc
sbb
outsb
cmp
lds
imul
or
inc
shlb
cmp
iret
sar
mov
es
cmp
shr
push
rep
lret
push
xor
push
pop
push
divb
xchg
lcall
lods
mov
push
pop
lahf
lods
repnz
stos
mov
push
cmp
pop
repnz
mov
add
clc
imul
or
cmp
push
adc
ja
scas
or
in
in
fdiv
mov
mov
jns
sarl
xchg
in
add
movsl
leave
and
nop
test
xor
xchg
push
rolb
cmp
sar
inc
inc
sub
xchg
ja
inc
dec
in
jbe
inc
out
dec
mov
fdivl
push
add
mov
jbe
lock
jp
xchg
push
lret
add
in
call
add
or
or
push
inc
dec
lods
add
mov
popf
pop
imul
push
fsubrs
jmp
push
test
fdiv
inc
pop
push
dec
movsl
cli
mov
push
xor
and
add
inc
adc
dec
imul
add
add
dec
pop
js
sbb
aam
cmpsl
and
sarb
shlb
nop
sub
mov
mov
aad
cmp
xor
fdivr
jb
push
stc
mov
mov
test
ja
in
clc
xchg
pop
pop
out
addr16
xor
pop
test
pop
rorb
aam
cwtl
icebp
xchg
inc
je
in
xlat
cmp
movsb
ja
inc
nop
call
mov
inc
mov
es
jns
mov
xor
xor
and
and
xchg
in
jo
jp
in
into
xchg
movsl
jl
outsl
in
cmp
or
insb
add
cld
cwtl
pslld
dec
adc
dec
xorb
mov
xor
fdivr
push
inc
sub
pop
out
mov
jge
xchg
mov
aad
jae
leave
adc
lods
and
insl
inc
push
hlt
test
lahf
add
test
dec
out
jmp
or
sub
cwtl
adc
push
adc
in
cmpsl
dec
push
dec
push
pop
stos
sahf
lret
lret
push
push
int
insl
and
jg
and
rcr
adc
loope
add
out
xchg
xchg
sarb
mov
xchg
jmp
cltd
dec
push
cld
jecxz
mov
lcall
inc
iret
in
shll
inc
jno
push
or
es
bound
movsb
mov
ja
test
data16
shrl
es
pop
enter
decl
mov
pop
arpl
xchg
les
mov
arpl
xchg
lock
jbe
or
lahf
int3
shlb
sbb
xor
aam
imulb
in
adc
pop
scas
nop
xor
lret
pusha
jmp
aas
sti
iret
pop
jl
lock
dec
outsb
pop
or
cwtl
mov
mov
out
nop
frstor
fiadds
inc
leave
fisttpll
fidivs
fdiv
dec
push
pusha
sub
stos
mov
test
cmp
dec
aad
test
hlt
out
mov
hlt
or
aam
push
mov
lds
sub
adcb
stc
mov
cmp
pop
popf
xor
jns
loop
sahf
fucom
xchg
lahf
xchg
sub
lds
call
loope
in
xchg
mov
sarb
mov
inc
in
adc
or
je
mov
lods
gs
push
fcoms
or
xchg
mov
fsubs
lret
or
or
lock
in
dec
lcall
mov
or
dec
mov
cltd
imul
icebp
inc
and
or
mov
addr16
loop
adc
jne
fsubrl
test
ljmp
mov
sahf
fsubs
out
xchg
mov
push
mov
insl
push
dec
enter
fdivs
test
push
lods
loope
jbe
xchg
outsb
mov
push
xchg
inc
pop
pop
lds
xchg
hlt
adc
xchg
nop
and
fdivrl
fisttpll
xor
stos
rclb
inc
lock
push
loop
cmpsb
in
lods
xchg
inc
out
test
lds
xchg
in
test
pushf
mov
or
clc
es
mov
lock
inc
loope
xchg
mov
shl
ds
movsb
lret
xchg
es
cmp
mov
aam
cmp
lret
xor
jp
js
push
mov
stos
dec
test
sub
sbb
and
movsb
fsubs
mov
xchg
xchg
cs
jnp
sbb
andl
movl
and
loope
shr
lret
lahf
int
aad
roll
dec
cmpsl
dec
mov
lret
rorb
test
push
and
jb
daa
nop
insl
cmp
leave
push
ret
inc
or
mov
in
jg
lods
gs
xchg
xchg
js
fs
jne
loop
testb
and
jae
mov
lea
inc
or
cwtl
fistps
add
add
xor
fld
test
xchg
dec
sarb
rorl
lds
add
inc
fmull
orb
icebp
in
in
or
xor
les
ret
mov
pop
rorb
leavew
mov
add
push
loop
and
pop
or
push
insl
aam
or
push
es
insl
call
in
xchg
mov
add
or
fst
push
xchg
add
cmpsb
scas
sub
mov
test
mov
sub
push
fidivs
cmpsl
addr16
insl
sub
sti
pop
test
mov
test
xor
push
ret
scas
out
sub
pop
xorb
arpl
mov
in
jae
les
cs
in
pop
jle
sub
popf
lods
pop
ja
xor
add
das
cmpsl
subb
fmul
jae
addb
and
in
jl
push
mov
loop
xchg
xchg
pop
aas
mov
xchg
or
dec
pop
loop
xchg
xchg
out
xchg
outsl
add
out
or
inc
sbb
nop
mov
in
xchg
add
lcall
out
mov
movsl
loop
sub
sbb
inc
mov
ficompl
movsl
rcrb
inc
mov
es
xorl
jns
cmpsb
sub
ss
xlat
stos
shlb
adc
add
mov
sbb
loopne
xor
nop
jp
mov
and
fmull
ja
push
je
fs
push
jb
jmp
cmp
imul
lods
xorb
jae
add
test
add
pop
test
lret
ficompl
into
out
int
imul
push
add
out
mov
dec
sub
lea
test
hlt
push
xchg
lret
xchg
pop
push
pop
sbb
ret
add
dec
lods
push
inc
aaa
sub
pushf
test
movsl
nop
clc
dec
pop
stc
push
dec
cmp
into
ds
call
jle
in
push
lods
inc
sahf
mov
dec
adc
je
shl
in
push
push
cmp
nop
cmp
test
insb
xor
mov
aas
lret
add
cmp
in
cmp
loopne
loopne
out
push
and
mov
mov
clc
xlat
mov
lods
pusha
mov
aas
push
js
pushf
mov
sbb
xorl
and
fcmovu
jnp
xor
mov
cmp
push
clc
add
dec
push
lret
and
loopne
dec
or
les
push
inc
cmpsl
sbb
or
xor
loop
lods
decl
dec
fstpl
and
and
push
add
xchg
inc
xor
jnp
and
aas
jmp
rorl
dec
scas
xor
hlt
pusha
mov
and
out
scas
pop
jnp
dec
aas
test
and
rorb
fists
lret
into
nop
fcoms
fmul
sub
sti
mov
loop
ds
scas
lea
lods
xchg
mov
dec
mov
xchg
pusha
nop
iret
aad
test
pop
dec
xor
xchg
cwtl
scas
inc
stc
mov
and
inc
roll
shrb
cld
loop
jmp
test
and
jmp
cmp
out
push
test
shlb
sub
push
adc
dec
shlb
mov
aas
loope
xchg
add
xchg
arpl
movsb
bound
sti
or
stos
frstor
cmp
loopne
xor
ret
test
or
sbb
stos
xor
mov
jb
xchg
andl
adcl
das
cmc
inc
mov
add
sbb
inc
movsl
sub
xchg
mov
outsl
clc
push
xor
mov
xchg
cwtl
leave
sub
cmpsl
jecxz
pop
clc
or
loope
call
or
icebp
aas
sbbb
orl
scas
inc
inc
dec
jecxz
push
lahf
pop
addr16
pop
out
ret
clc
xchg
mov
js
mov
mov
push
stos
out
outsl
xchg
cwtl
lret
test
testl
pop
lock
ljmp
hlt
inc
add
sbb
fisubl
push
dec
adc
cmp
fst
aam
xchg
fiaddl
cmp
and
dec
loopne
inc
jne
add
mov
sub
test
repz
mov
clc
push
adc
and
push
int3
cmp
jecxz
out
pop
mov
jp
repz
and
cld
rorb
cmp
arpl
out
dec
adc
int3
or
inc
inc
aad
and
aam
cmp
pop
aas
dec
movsb
ljmp
loopne
cmp
cld
sbb
inc
es
fadd
pushf
push
ret
clc
loopne
insb
push
mov
xchg
cmp
aam
jmp
add
fstpt
test
xor
emms
jge
cmp
adc
addb
subl
insb
xor
xchg
mov
movsl
push
dec
jns
in
push
jo
sub
loopne
add
xlat
push
ja
icebp
fdivrs
rcll
jne
mov
insb
xor
mov
fwait
inc
inc
mov
aas
movsb
shl
jo
inc
add
movsl
mov
dec
out
add
test
rol
and
lock
into
xchg
mov
nop
loopne
ja
mov
jl
movsl
dec
mov
rcr
add
shlb
mov
or
pop
push
fstps
fadds
rcrb
pop
or
fisttpll
sub
int3
xor
lret
xchg
aaa
arpl
test
and
mov
lds
loop
push
loopne
testb
aaa
push
daa
insl
addl
in
int
and
rcrb
addr16
add
dec
ja
outsl
lods
or
gs
pop
ljmp
test
movsl
out
mov
test
dec
clc
popa
cmpsl
mov
and
gs
jecxz
sti
inc
notl
dec
push
outsl
and
add
mov
mov
jns
sbb
shll
es
dec
jecxz
adc
or
es
sub
cmc
xchg
insl
cli
mov
testb
or
fsub
int3
xor
insb
xor
faddl
jl
addl
cmp
jmp
xchg
sbb
add
call
dec
test
js
nop
in
testl
rcrl
ds
movsb
std
enter
les
dec
cmp
and
test
dec
xor
pushf
dec
leave
jno
and
and
mov
lcall
testb
notb
jnp
dec
sub
mov
movsb
test
repz
out
or
hlt
pop
neg
test
rorb
sbb
rclb
out
fsub
jb
repz
rclb
cli
push
inc
js
aas
ds
add
fs
or
mov
aas
or
pop
push
cwtl
push
loop,pt
movsb
gs
clc
mov
insl
iret
ret
mov
leave
out
cmp
insl
scas
stos
cmp
sub
test
mov
mov
cmc
insl
dec
scas
movsb
pusha
jno
scas
clc
push
pop
and
mov
outsb
loop
js
ss
xor
mov
lods
shlb
rcll
xchg
insl
insl
pop
and
dec
aaa
mov
cmp
iret
in
dec
loopne
lret
je
cli
mov
jnp
xchg
out
inc
ja
loopne
jae
hlt
dec
or
pusha
loopne
add
js
es
fsubrl
adc
xchg
xchg
pop
jg
fisttpll
xchg
pop
lahf
xor
pop
mov
test
fwait
out
cmc
cmpsl
cmp
test
stos
nop
repz
push
mov
xor
fs
lods
sti
icebp
jbe
je
scas
cli
dec
out
movsl
cwtl
add
mov
lock
adc
fdivrl
jge
stos
push
push
xor
fs
sarb
adc
dec
inc
push
adc
xor
inc
jmp
dec
jb
inc
sbb
add
out
add
leave
mov
push
into
out
and
jge
negl
test
out
lahf
adc
xlat
fstl
mov
mov
adc
insl
adc
enter
and
js
jg
xchg
push
adc
nop
jae
inc
lods
sarb
subl
xchg
out
es
adc
push
push
or
xchg
mov
or
pop
pop
aas
inc
mov
loopne
push
xchg
and
movsl
sub
jno
cmp
and
sub
jb
xor
test
nop
arpl
js
cmp
lods
pusha
add
jno
and
stos
and
inc
out
mov
lret
sbb
inc
inc
rorl
xchg
loopne
rcrl
and
mov
lret
dec
daa
xchg
cs
clc
mov
fucom
xchg
int3
aad
clc
test
mov
dec
lret
cmpsb
shlb
inc
lret
xchg
inc
jecxz
xlat
push
int3
mov
and
inc
and
adc
lods
sub
decl
aad
pop
mov
pop
movsl
xor
insl
fistl
cmp
xchg
ret
popa
aas
push
testl
orl
nop
jp
sub
loop
shlb
inc
orb
sub
cwtl
mov
loopne
sahf
mov
xchg
or
stos
es
sub
int3
test
and
cmp
or
clc
cmpsl
pop
out
sbb
xchg
clc
imull
sub
inc
lret
inc
pop
sub
fildl
icebp
pop
pusha
shrl
mov
pusha
xor
pop
test
and
mov
fnstcw
or
jae
idiv
fadd
xor
sbb
push
dec
pop
inc
ret
lods
add
inc
dec
fnstcw
push
push
aaa
xchg
lret
dec
or
movsl
mov
aad
add
scas
mov
movsl
inc
mov
movsl
inc
test
int3
and
test
fsubl
cmpsl
xchg
or
outsb
aas
jge
cmp
dec
ja
or
cltd
iret
push
cmp
pop
rorb
sub
pop
add
insl
testl
shll
xchg
jno
stc
rcrb
in
push
jp
mov
ja
fcomps
adc
or
xlat
icebp
in
jg
cmpsb
dec
aam
xor
adc
jbe
out
daa
sub
cmp
shrb
dec
xlat
inc
adc
inc
push
scas
or
bound
cmp
inc
jb
scas
or
fnsave
add
sub
js
insb
out
loop
add
leave
dec
xchg
aas
mov
int
ret
inc
in
xchg
mov
add
mov
xor
jne
mov
xchg
and
es
mov
push
nop
mov
int
dec
or
loop
cmpsb
mov
mov
pop
mov
scas
push
inc
shlb
insl
adc
sti
out
leave
nop
mov
or
int
jns
xchg
inc
shrl
pop
addr16
cmp
lds
ret
adc
paddusw
in
and
push
mov
mov
clc
fdivr
dec
dec
pop
jo
ljmp
sub
das
mov
pop
nop
jbe
test
out
dec
mov
xchg
stc
testl
mov
add
add
pop
loopne
sub
push
nop
push
mov
shlb
mov
cbtw
movsl
in
cmpsl
jb
fsubp
addr16
pop
hlt
incl
xchg
mov
or
mov
sub
loopne
push
loope
cmp
roll
test
dec
mov
adcb
pop
add
mov
and
call
or
xchg
scas
notb
and
pusha
leave
mov
mov
pop
rorb
sub
ss
out
dec
aaa
inc
push
jbe
int
add
adc
push
lea
and
movsb
shlb
jg
sbb
scas
subl
sub
adc
cmp
cmpsl
cmp
push
clc
push
leave
push
mov
or
out
mov
jmp
dec
dec
call
test
xchg
test
pop
push
lods
sub
shrb
xchg
dec
jbe
xchg
dec
mov
incb
xor
stos
ffree
scas
dec
push
fwait
test
dec
push
std
imul
in
shl
dec
fstpl
inc
mov
adc
mov
packuswb
mov
lahf
ja
ja
insl
inc
jae
inc
lret
add
outsl
mov
cmp
adc
out
xchg
add
clc
lcall
mov
jmp
clc
sti
jecxz
jge
push
repz
mov
mov
out
dec
int
leave
fst
lret
jae
dec
bound
dec
mov
sbbb
mov
and
jle
pop
add
icebp
test
scas
sbb
dec
rcrl
and
mov
insl
sub
dec
into
mov
pushf
loop
xor
add
subl
mov
adc
dec
ss
mov
push
jno
divl
xchg
mov
aam
add
hlt
xor
push
cmp
fsubrs
jmp
mov
fldenv
sub
in
xor
mov
mov
cwtl
les
loopne
popf
xchg
lock
loop
nop
jp
frstor
lahf
inc
jmp
sarb
jmp
xchg
fdiv
jp
dec
cwtl
outsb
jbe
mov
cmp
cmc
dec
loop
xchg
fnstcw
fimull
mov
lock
sahf
repnz
or
xchg
lds
xor
cmp
jo
cmp
xor
nop
cmp
pop
fdivp
and
es
pop
enter
pusha
sub
sub
mov
mov
sbb
jmp
mov
dec
mov
subb
enter
and
adc
inc
dec
pop
out
scas
lods
lcall
jae
sbb
cmp
adc
jb
push
dec
pop
test
sub
les
hlt
mov
jne
sub
in
mov
in
popa
push
aas
outsb
add
fs
or
cli
xor
pushf
loop
int3
dec
inc
xlat
mov
pop
int3
inc
lock
stc
xor
movups
enter
xchg
pop
inc
jle
cmp
dec
mov
mov
or
mov
popf
ds
enter
imulb
push
sbb
push
enter
test
inc
xchg
int3
and
test
push
xchg
lret
dec
std
popa
xchg
cwtl
mov
in
push
lea
enter
inc
jmp
pop
add
mov
inc
add
ljmp
fs
es
or
ja
pop
enter
pusha
addr16
pop
lock
push
mov
mov
stos
push
es
xchg
outsb
pusha
enter
xchg
fwait
pop
lds
aaa
repz
xor
test
ret
outsb
sbb
mov
jmp
std
pusha
adc
adc
hlt
push
add
sbb
enter
stos
fiaddl
lods
push
push
pusha
lods
pop
test
xor
sub
mov
test
jnp
and
adc
mov
pusha
xor
lods
xchg
insl
mov
inc
add
loopne
adc
int3
xchg
scas
mov
rorl
sub
or
pop
mov
pop
enter
pop
test
dec
in
and
xor
inc
cld
lea
int3
je
sub
mov
outsb
lds
add
enter
jno
add
enter
outsl
jmp
add
aam
daa
lock
mov
jns
mov
jno
rolb
push
mov
pop
xchg
sbb
xchg
lcall
loopne
ljmp
dec
push
enter
fbstp
outsl
enter
sbb
xor
mov
xchg
mov
pop
mov
insl
ss
and
adc
popa
push
es
lods
adc
stos
inc
jmp
inc
and
call
pusha
pop
adc
test
mov
lcall
pop
sbb
fildl
sbb
cltd
lcall
rcll
push
inc
lds
mov
adc
cwtl
lcall
les
sbb
mov
fcomip
push
test
jecxz
rcrl
stc
aas
dec
clc
push
inc
xchg
ret
int3
imul
cmpsb
inc
int3
loopne
mov
add
enter
outsb
loop
add
adc
dec
popa
enter
call
js
push
inc
and
js
sbb
test
or
mov
into
nop
loopne
enter
lea
pop
enter
test
add
arpl
push
xor
fstl
jle
popa
cwtl
push
das
int3
cmpl
std
test
in
int3
cmp
mov
sti
into
ss
enter
sarb
movsb
les
notb
popa
es
sti
imulb
fnstcw
rolb
aam
seta
jge
mov
pop
dec
enter
push
or
push
jb
enterw
adc
mov
mov
push
pop
enter
out
stos
call
xchg
sahf
in
cmpsb
int
inc
jno
push
mov
outsb
shlb
pop
pushf
jle
shl
lahf
idivb
js
jno
xchg
sub
ljmp
xor
inc
sti
pop
aaa
je
or
sub
enter
jge
popa
or
mov
repnz
pop
jl
inc
mov
fildl
mov
mov
out
xchg
imul
cltd
mov
pop
roll
lods
hlt
lret
test
movsl
adc
sbb
xor
idiv
xchg
mov
test
in
add
ret
inc
adc
push
mov
cmp
inc
dec
xchg
fldl
dec
add
mov
imul
and
sbb
nop
repz
outsb
out
negb
test
add
mov
xchg
gs
jnp
lret
mov
rcrl
fincstp
imul
and
ds
shrb
sub
push
add
jae
mov
gs
test
pop
enter
cli
js
mov
clc
mov
sbb
ljmp
stos
inc
sbb
xor
fs
cmp
xor
xchg
add
mov
fldt
loop
push
mov
jo
or
lods
mov
push
gs
adc
test
mov
loope
fmuls
imul
js
in
call
xor
or
bound
and
dec
add
sub
mov
aad
inc
cmp
aad
lds
cmpsb
sbb
add
int
daa
jg
in
mov
dec
cwtl
test
mov
mov
mov
jge
sbb
mov
insb
mov
xor
out
or
test
js
jnp
mov
mov
lds
xor
int
mov
fstps
and
mov
hlt
push
mov
cwtl
popf
mov
shrl
jecxz
push
mov
aaa
shlb
adc
xchg
in
test
js
and
mov
or
mov
pop
or
subl
insl
or
jb
cltd
jbe
gs
je
test
xchg
pop
aam
add
lods
ret
inc
dec
dec
xchg
ret
addr16
movsb
dec
lods
xchg
jno
or
jp
mov
lock
cmpsl
scas
into
add
sbb
loopne
or
clc
mov
pop
fwait
cmp
pushf
mov
mov
mov
into
aas
sbb
popa
add
add
es
push
int
gs
out
cmpb
xor
call
out
sti
mov
lods
cmp
xchg
gs
or
inc
lods
jno
insb
mov
hlt
lret
adc
int
in
adc
adc
mov
push
dec
dec
movsl
mov
sbb
out
fisubrs
lock
cmp
iret
sub
aam
es
test
in
add
daa
cwtl
enter
push
sub
jp
rolb
clc
and
nop
xor
adc
push
xchg
sbbb
pop
pop
add
shl
mov
adc
enter
clc
cwtl
fldcw
mov
lret
mov
lcall
inc
or
dec
std
mov
int3
mov
popf
push
stc
ror
dec
sub
insb
enter
mov
enter
push
sub
mov
push
rcrl
xchg
push
in
mov
arpl
ja
shrl
or
pop
xchg
lahf
sahf
add
fisttps
fsubs
or
leave
fsubp
xor
outsl
outsb
inc
adc
cmp
sub
scas
inc
cmpsb
pop
add
movsb
pop
scas
and
push
or
stc
jl
inc
mov
pop
xchg
out
js
sub
cmpl
dec
std
inc
lods
push
gs
cmpsb
sbb
lahf
jb
test
incl
enter
stos
jp
es
sbb
leave
jae
xchg
and
dec
enter
sahf
enter
and
sbb
pop
mov
daa
mov
test
subl
in
mov
xchg
fstpt
loop
fnstcw
int
in
std
mov
sahf
sub
push
int3
jle
cld
adc
mov
inc
aaa
fiaddl
rol
aam
enter
insl
out
test
adc
sub
cmp
js
xor
pop
aaa
loope
fcomps
push
jbe
incb
scas
cmp
jns
xor
enter
repz
xor
xchg
cmp
lcall
ljmp
xor
pop
cli
push
or
std
in
enter
fsubrp
das
mov
xlat
jns
fsubrl
enter
fistl
jbe
cmp
inc
std
and
fs
insl
dec
je
jmp
jae
pop
jg
nop
stos
out
daa
into
enter
pop
xchg
lahf
jo
enter
push
mov
sbb
xor
mov
dec
lds
ja
pusha
adc
int
add
mov
mov
mov
pop
out
jb
or
in
into
addr16
enter
mov
int3
jbe
xchg
mov
leave
sahf
cmc
jle
enter
test
jmp
cltd
cmp
push
enter
and
divl
mov
int3
dec
mov
nop
mov
inc
xor
aam
xor
mov
enter
inc
jnp
stos
push
enter
jb
jge
lds
adc
cmp
mov
arpl
xchg
fisttps
test
and
mov
das
mov
dec
xchg
and
in
or
inc
jle
imul
pushf
enter
movsb
ja
shll
push
sarb
inc
add
sub
out
mov
aas
cmp
popa
loopne
rolb
jne
fs
xor
test
leave
rclb
push
push
je
adc
push
aaa
nop
enter
jns
xchg
repz
jl
cmp
lret
imul
inc
mov
negb
in
and
adc
add
mov
enter
divb
mov
jl
pusha
es
cmp
lret
enter
lods
and
sbb
or
xlat
fmull
xor
mov
enter
dec
lock
jns
mov
or
nop
dec
daa
enter
outsb
xor
or
lds
mov
jl
add
mov
push
inc
jp
sbb
stc
mov
sub
lahf
in
mov
mov
into
ss
int3
inc
mov
jg
icebp
jne
xor
mov
cmp
dec
push
lds
mov
pop
ficomps
aas
aaa
movsl
gs
sub
or
pop
fucomip
sub
xor
hlt
sub
cmpsb
xchg
enter
xchg
ret
lret
stos
enter
sub
js
enter
xchg
inc
sub
pusha
jno
mov
push
addr16
std
jo
jno
enter
ljmp
inc
xchg
add
and
lret
sub
jnp
inc
rcrb
xchg
fwait
hlt
out
mov
pop
mov
enter
cmc
lret
inc
lock
pop
movsl
push
ret
ja
pushf
enter
cmp
jge
enter
sub
mov
jne
sub
js
pop
call
cmp
mov
add
pop
outsl
jae
mov
bound
adc
xor
sub
xor
ret
nop
dec
in
cld
sub
mov
pop
push
test
or
ret
pusha
popa
hlt
enter
sahf
mov
inc
lods
int3
addb
cmc
mov
test
mov
es
test
jmp
sub
outsl
sub
push
int
aas
in
sub
cwtl
test
dec
pusha
jge
dec
in
popa
lret
inc
jae
cld
cmpsb
push
rclb
jnp
adc
movsb
fs
pop
cmp
jmp
in
push
cmp
int
and
fcoms
jo
fld
repnz
mov
push
cwtl
xchg
pop
push
enter
stc
call
mov
sub
lahf
inc
cmp
in
in
imul
push
mov
inc
in
in
push
and
data16
dec
repz
lret
adc
jne
inc
push
xor
das
push
jb
xor
in
popa
push
enter
int3
fstl
insl
mov
mov
sub
pop
dec
enter
or
add
enter
sbb
and
sub
pop
pushf
xchg
mov
or
mov
adc
leave
mov
xchg
mov
inc
cmc
push
push
iret
arpl
cmp
lds
inc
fcomps
enter
ljmp
mov
sbb
das
sbb
push
js
mov
ja
sub
pop
mov
test
cli
sub
mov
imul
sbb
pop
rorl
in
lods
xchg
inc
nop
pop
cli
sub
loop
enter
push
ret
cmp
fdivs
shll
fldln2
int3
imul
or
pop
mov
cld
push
leave
jmp
xor
sbb
adc
mov
in
pop
out
mov
sub
sbb
enter
sbb
iret
pop
ror
cmpsl
out
pop
xchg
push
push
nop
jne
ret
inc
xor
or
js
xchg
enter
fsubrl
or
or
inc
hlt
js
cli
in
pop
jmp
xchg
mov
or
int
adc
ret
lea
sub
mov
or
arpl
enter
lcall
jp
pusha
mov
pop
dec
xchg
in
in
pop
or
inc
sbb
les
enter
jo
cmp
ret
or
lods
lahf
pop
loopne
or
rclb
in
inc
daa
dec
xor
test
mov
testb
push
adc
push
or
enter
mov
enter
xor
pop
add
mov
daa
enter
outsb
cmp
sub
mov
push
in
xchg
cmpsl
jns
and
inc
add
add
pusha
add
mov
pop
xchg
push
in
sbb
cltd
enter
lds
pop
enter
lahf
pushf
push
cmp
xor
add
gs
repnz
and
test
cmp
outsb
fistpll
mov
fwait
sub
fdiv
loopne
push
xlat
imul
or
xor
pop
mov
xchg
enter
add
test
enter
std
sbb
and
adc
test
faddl
fisubrs
cmpl
out
in
sbb
mull
jge
pop
sub
adc
pop
into
cmp
fcoml
cmpsb
in
insl
inc
mov
push
gs
enter
add
push
arpl
sub
mov
pop
int3
dec
pop
orb
fdivrl
push
shlb
xchg
mov
cmpl
test
sbbb
pop
pop
lcall
clc
sti
mov
insl
xor
dec
add
stc
and
push
rcl
bound
push
or
xor
ss
lds
xchg
inc
mov
cs
push
sub
ror
cmp
inc
sub
jecxz
xchg
xchg
fdivrs
xchg
nop
gs
mov
jg
scas
xor
push
jl
mov
sub
xchg
sub
and
das
stos
aas
adc
es
movsl
aad
shrl
sbb
mov
or
popf
enter
scas
inc
subb
out
or
jo
enter
mov
int3
push
sbb
mov
inc
xor
inc
push
cld
mov
leave
out
in
mov
out
push
add
adc
fdivrp
jb
adc
outsl
mov
inc
enter
repnz
out
int3
imul
aad
mov
test
cmpsb
shl
les
arpl
lock
inc
in
ficompl
jo
pop
test
in
pop
cwtl
push
js
pushf
enter
add
int3
lret
pop
outsb
jnp
dec
mov
into
and
pop
inc
out
adc
mov
and
ds
inc
int
xchg
inc
enter
in
fdiv
int3
push
mov
mov
mov
xor
enter
out
cmc
addr16
int
dec
shrl
sbb
aam
xor
int
add
in
enter
cld
data16
dec
mov
testb
inc
repz
rol
arpl
sbb
add
sub
or
mov
xchg
fcompl
pop
xor
test
lret
addr16
inc
adc
shl
mov
cltd
and
xor
jg
fstpl
fs
or
and
pop
push
dec
popf
cltd
or
inc
cli
pop
insb
enter
sbb
pop
hlt
mov
icebp
dec
jo
cmpsl
ljmp
out
mov
push
adc
lcall
cltd
cmp
or
sub
or
and
sub
clc
aad
jns
inc
cwtl
sbb
dec
aam
cmp
sbb
in
faddl
sbb
jle
mov
lahf
cli
rcr
adc
aad
add
mov
shlb
adc
into
cli
ljmp
insl
movsl
movsb
rol
adc
cld
sub
fidivrs
aaa
pushf
enter
jo
push
aam
dec
add
sub
in
clc
sbb
sbb
xchg
stc
sub
jle
clc
imul
mov
imul
cmpsb
mov
sub
push
popa
pop
imul
adc
mov
push
sub
das
sub
arpl
or
mov
lods
lods
hlt
decb
shlb
cmp
xlat
sub
cwtl
push
leave
inc
xchg
add
mov
and
cmpsb
imul
add
dec
xchg
fsubrs
jnp
loop
ret
dec
aad
inc
stos
inc
loop
addr16
popf
orl
sub
fisttpll
cwtl
imul
daa
mov
inc
push
scas
xchg
ljmp
push
gs
cmpsl
adc
lahf
mov
fwait
test
imul
jle
fldl
addr16
js
mov
mov
test
xchg
push
fimull
xor
xchg
jge
mov
push
mov
loop
imul
mov
aaa
add
cmp
repz
mov
mov
xor
outsb
cmpsl
mov
addr16
dec
mov
cwtl
aam
and
lcall
loope
fmuls
and
test
lds
dec
rolb
mov
push
and
cli
sub
pop
xor
xor
mov
test
insb
xchg
cmp
lea
mov
inc
mov
ja
enter
insl
and
insb
sar
inc
xor
test
xor
mov
inc
pop
push
pop
cmp
or
or
push
enter
je
or
out
mov
jb
ja
mov
adc
inc
cmpsb
or
dec
enter
inc
decl
push
enter
push
mov
seta
cwtl
pop
inc
jp
fabs
cs
inc
mov
das
pop
in
sbb
cmp
outsb
in
sub
lret
lds
add
dec
xor
cwtl
imul
jg
xchg
out
imul
mov
push
test
cli
outsb
fsubl
xor
loop
mul
fcomps
out
push
aam
cmp
fs
add
in
cvtpi2ps
mov
pop
aas
out
movsl
add
js
jp
imul
gs
imul
add
imul
neg
cwtl
add
fcoml
iret
std
and
fnstsw
popa
hlt
mov
and
mov
adc
out
gs
dec
pop
repnz
mov
cmpsb
adc
add
inc
xchg
cmp
in
in
xchg
rcr
xchg
xchg
adc
jge
mov
xor
bound
lea
inc
inc
int
dec
orb
jge
inc
in
sbb
push
pop
jle
out
sar
mov
jmp
adc
dec
lret
addr16
xorb
xchg
je
xchg
push
orb
stc
and
push
fwait
lret
gs
mov
mov
push
jo
jns
adc
in
mov
and
push
cmp
sbb
aaa
pop
push
in
mov
lds
xchg
mov
or
jb
movsb
cwtl
mov
insl
scas
rolb
enter
aas
adc
gs
mov
sub
outsl
inc
jl
mov
fld1
jnp
iret
mov
testb
and
rorb
enter
push
adc
xchg
clc
out
and
mov
fisttpl
aam
cs
arpl
push
shll
jb
mov
ja
out
dec
test
cwtl
pop
add
enter
in
add
push
enter
sub
fs
sub
callw
lret
sub
in
out
in
pop
inc
push
fisttpl
andb
mov
popl
pop
cmp
loope
jle
cmp
adc
fcmovne
pusha
mov
aad
enter
pop
mov
repnz
jb
xor
test
pop
lea
enter
push
mov
and
in
push
xchg
dec
fucomi
enter
das
int3
xchg
pop
add
enter
inc
xrelease
push
jp
movsl
leave
enter
test
enter
in
stos
mov
sub
mov
pop
or
nop
popf
subl
pop
in
push
repz
sub
fmul
in
mov
fiaddl
test
cld
sahf
sbb
outsb
shrb
in
lret
xchg
aam
jmp
in
into
push
push
pop
test
mov
and
mov
cld
sub
inc
call
mov
adc
mov
nop
enter
mov
enter
ja
mov
mov
sub
xlat
ljmp
inc
add
jb
mov
popa
insl
imul
andb
push
outsl
xor
inc
stc
cmp
sbb
sbb
push
mov
and
clc
xor
shrb
out
xchg
lret
sarl
lcall
repnz
iret
shlb
jecxz
call
cmpsb
sbb
sahf
shl
dec
test
iret
gs
popf
inc
bound
inc
mov
lock
pusha
stos
jg
test
mov
enter
popf
loope
arpl
imul
cmp
sbb
movsb
sub
popf
clc
and
enter
out
mov
ss
mov
mov
pop
enter
aas
pop
cmp
fcoml
push
xchg
fadd
lds
inc
sbb
inc
imul
lods
enter
outsb
jbe
enter
inc
pop
adc
xchg
aas
mov
xchg
bound
push
rcll
dec
jne
ss
pop
and
stc
shlb
cli
or
aad
pop
jmp
bound
adc
pop
je
pop
adc
mov
fsubl
dec
fcom
sub
loop
jmp
inc
mov
jnp
aas
addr16
add
scas
data16
inc
inc
ret
icebp
enter
lahf
dec
lods
in
outsl
mov
inc
mov
int3
cmp
pushf
test
jl
cmc
js
insl
mov
or
xor
enter
mov
aam
add
adc
ror
xchg
add
pop
pushl
dec
and
enter
arpl
mov
enter
mov
das
and
enter
xor
xor
cmp
and
int
in
movsb
and
xor
clc
fistpl
cltd
add
lods
fadd
das
cld
mov
jns
enterw
mov
and
sbb
push
dec
adc
es
and
mov
cmpsb
add
in
shr
loopne
leave
mov
push
cmc
je
cmpsb
or
sub
xchg
pop
xlat
daa
arpl
sub
add
inc
sub
fwait
enter
insb
xchg
mov
mov
in
outsb
lahf
xchg
aaa
enter
loop
cmp
dec
mov
sbb
sub
jbe
insb
daa
sar
subb
lret
add
dec
in
out
daa
int3
sub
jg
mov
xor
pop
jnp
fmull
clc
cmp
xlat
cmp
into
enter
jne
arpl
mov
aas
inc
enter
add
sub
adc
ficoms
adc
loope
inc
add
mov
mov
subb
std
enter
out
and
in
inc
insl
sub
test
xorb
shl
jecxz
popa
sbb
enter
xor
lcall
lods
sahf
sub
shl
lcall
aam
push
and
mov
cmpsl
jo
test
in
push
mov
pop
enter
mov
insb
enter
jl
mov
and
or
pop
xchg
mov
out
mov
lds
aaa
jecxz
dec
pop
lret
ljmp
push
pop
aam
dec
nop
scas
xchg
mov
aaa
jbe
cmc
and
int3
ljmp
lds
sub
enter
sbb
rcr
in
popa
lcall
xchg
mov
lds
sub
push
rorb
inc
xchg
addb
das
ret
push
bound
pop
sbb
sarb
mov
xor
jg
mov
push
divl
add
out
pop
sbb
cmp
dec
add
push
shlb
sahf
enter
repnz
or
int3
pop
lea
pop
mov
out
movsb
mov
pop
mov
cltd
push
cmp
or
mov
int
pop
ror
jo
movsb
xchg
xchg
aam
inc
and
pushf
push
lcall
push
cmp
or
cmc
push
enter
mov
loop
sbb
adc
push
xor
nop
pop
mov
js
mov
movsl
mov
mov
adc
cwtl
enter
lret
sbb
sbb
nop
and
aad
push
add
repz
int3
mov
std
xor
sub
dec
and
es
sbb
popf
sub
in
lock
mov
pop
fnstcw
mov
enter
jge
cmp
sub
cltd
dec
inc
and
cmp
cld
push
push
jmp
sbb
js
je
jmp
call
cmp
cmp
mov
insl
pop
enter
mov
mov
loopne
mov
enter
addb
outsl
sahf
mov
jmp
ja
mov
fadds
arpl
cmp
lods
fisubl
std
mov
add
mov
enter
cli
xor
mov
lcall
xlat
enter
xor
roll
adc
fidivs
popf
lret
xor
or
inc
mov
test
lds
inc
ror
add
scas
xchg
jecxz
and
mov
push
fmuls
enter
jl
mov
xchg
popa
int3
and
mov
aaa
les
and
enter
jns
verw
lea
lds
xchg
jbe
fsubr
cli
jno
mov
dec
cmp
xchg
ljmp
das
xorl
rorl
test
addr16
mov
cmp
fiadds
es
push
shlb
xchg
lods
cmp
cli
fsubl
sarl
repz
out
imul
pop
ss
push
dec
mov
push
mov
cld
int3
mov
notb
lret
mov
sub
notl
test
and
mov
pop
clc
xor
cmpsl
mov
inc
ljmp
fwait
add
out
dec
xchg
mov
scas
aam
adc
and
jnp
adc
jl
inc
jb
mov
jnp,pn
push
scas
cs
fbld
sarb
stos
pop
ja
int
sbb
dec
notb
mov
imul
scas
xor
imul
gs
jo
neg
scas
jb
pop
mov
int3
cmp
sbb
cmpsb
inc
nop
sarl
es
xchg
ljmp
xor
test
jg
or
or
inc
mov
jecxz
jmp
mov
sub
adc
das
push
aaa
inc
sub
push
pop
adc
cmp
sub
sub
jo
popa
pop
push
and
data16
push
jb
pop
enter
iret
add
int3
stos
loopne
test
nop
aas
enter
es
cmp
in
xchg
and
jno
and
or
push
mov
jne
pop
push
enter
push
xchg
test
sbb
out
mov
outsb
movsl
aam
unpckhps
adc
lcall
xchg
cmpsb
dec
out
int3
fs
bound
nop
cmp
cmc
xor
enter
shll
mov
out
enter
lahf
out
in
aas
fadds
lods
inc
out
push
push
lret
stos
add
add
jne
dec
bound
push
sub
sbb
adc
out
and
enter
in
movsl
pusha
enter
or
mov
and
pop
enter
xchg
fs
jns
add
xchg
xor
lds
pop
jne
enter
into
mov
jmp
sti
sbb
mov
faddl
and
sbb
enter
popfw
pushf
sub
test
push
jno
enter
mov
or
push
fwait
cmc
xor
push
enter
ss
sbb
nop
xchg
data16
xor
push
scas
in
xlat
icebp
xorl
and
xchg
add
pushf
cwtl
push
mov
imul
pop
enter
mov
in
or
adc
jo
sub
jne
adc
mov
push
xor
mov
rorl
pop
inc
sbb
inc
jne
add
sub
movsb
sub
mov
cmpsl
lods
call
dec
sbb
aas
push
repz
jge
fiaddl
enter
push
js
add
pop
pop
add
pop
lods
in
es
sub
add
jecxz
pop
mov
andl
adc
or
jp
test
or
frstor
dec
je
pop
enter
sub
and
sahf
push
push
sbb
insl
ror
xchg
cmp
dec
icebp
mov
enter
lea
test
xor
xor
js
pop
xchg
xlat
jecxz
and
cmc
enter
mov
enter
or
inc
sbb
int3
push
or
add
mov
loop
repz
mov
xchg
fmulp
sbb
out
jo
xor
dec
pop
dec
mov
inc
jnp
fistps
mov
movsb
jbe
data16
repnz
enter
pop
cltd
ss
pop
enter
int
je
popf
enter
lahf
pop
mov
mov
ljmp
mov
lods
and
ret
jae
imul
nop
enter
subl
lea
fstl
inc
add
outsl
rorb
mov
mov
ror
iret
or
pop
jmp
cmp
shl
jae
pop
aas
xor
push
xchg
sub
mov
adc
leave
mov
loopne
in
stc
inc
mov
adc
or
enter
cmc
xor
sub
imul
into
or
mov
test
ret
enter
mov
or
enter
mov
pop
adc
test
sub
cs
cld
or
mov
lret
pop
nop
call
enter
lcall
mov
outsb
ficomps
fstpl
nop
enter
dec
pop
mov
insl
enter
xor
outsl
mov
inc
push
ror
cmp
xor
subl
cwtl
or
jg
push
enter
in
inc
decl
mov
addr16
out
into
int
cmp
jp
cs
mov
inc
or
nop
mov
pushf
inc
cs
lcall
cltd
inc
aaa
mov
mov
aad
mov
mov
fldcw
lahf
and
xchg
pop
aam
dec
xchg
mov
sub
inc
and
jae
mov
mov
fsubrs
outsl
mov
add
lock
mov
fs
push
stos
inc
leave
cmp
inc
in
mov
lds
popa
add
xchg
repnz
mov
out
ljmp
and
ja
lea
add
test
movsl
sbb
gs
mov
imul
mov
leave
mov
in
dec
popf
fwait
mov
arpl
add
les
ss
inc
dec
imul
or
mov
repz
push
and
inc
sarl
out
cld
jns
pop
xor
sbb
xchg
jle
jb
scas
cmp
jno
cmp
xor
sbb
xor
divl
ficomps
into
inc
in
xchg
nop
push
add
aad
outsl
jb
cs
scas
mov
push
pusha
lods
imul
push
sbb
push
fwait
xchg
and
in
mov
sub
jp
mov
call
setae
adc
test
cmpsl
cmpsl
push
test
data16
and
xchg
nop
xchg
call
cmc
les
sahf
lret
jmp
in
inc
orl
fwait
inc
std
sub
call
lds
xor
and
pop
adc
pop
cmp
stos
fwait
je
fucom
mov
enter
int3
jl
lret
out
pop
xchg
xor
cmpsb
cmc
mov
or
xchg
test
sub
mov
test
jmp
mov
aam
mov
jns
loopne
movsl
xchg
or
fs
out
pop
cmp
test
push
push
xchg
lods
and
cwtl
fistpll
movsw
xchg
xor
sbb
movsl
dec
adc
add
sub
jno
mov
insl
push
enter
jae
ds
sbb
repnz
aam
out
dec
push
out
xchg
lret
add
in
pop
sub
ficomps
or
jbe
xor
in
pop
lret
or
orb
fists
cmp
test
mov
add
cmp
out
cwtl
sub
mov
mov
lods
xchg
addr16
dec
stos
push
pop
xchg
fcomps
clc
cmpsl
push
fsubs
xor
dec
clc
js
fcoms
daa
fnsave
or
aaa
dec
addr16
movsl
data16
push
and
lds
mov
dec
mov
xchg
into
das
cmp
arpl
jno
jmp
xor
push
inc
aaa
shrb
pop
fistpll
lahf
sbb
test
enter
jmp
js
inc
lahf
into
dec
out
pop
int3
pop
mov
xchg
add
out
gs
mov
pusha
pusha
ds
xchg
loop
pusha
imul
pop
and
outsl
push
testb
lcall
push
push
lea
and
xor
sbb
insl
or
iret
mov
sbbb
push
decb
insl
sbb
clc
dec
or
into
scas
pop
mov
adc
mov
xor
and
fs
pusha
adc
and
fildll
pmaddwd
lods
out
js
jl
or
cmp
mov
aad
loop
clc
fxch
inc
and
movsb
push
mov
xchg
sub
and
mov
imul
gs
aam
xchg
fdivrs
mov
aam
xor
inc
pop
sbb
gs
push
stos
xor
mov
iret
fcomps
test
xchg
fwait
cmp
mov
adc
pop
xor
int3
test
sub
pop
jecxz
outsb
into
sbb
add
and
aaa
enter
pop
xchg
stos
cmpsl
mov
inc
xchg
xor
test
inc
jne
cmpsl
idivb
dec
mov
pushl
pop
out
mov
shll
sahf
out
cmp
mov
xchg
shl
imul
sbb
jge
fadd
ja
xor
fwait
mov
cmpsl
stc
sbb
fmuls
insb
or
es
scas
cwtl
test
dec
insb
rcr
int
sbb
inc
icebp
mov
and
popf
mov
add
cmp
repz
or
inc
repnz
jo
adc
aam
mov
jno
adc
mov
or
sbb
push
mov
jbe
inc
fdivrs
mov
xchg
int3
aam
cltd
dec
push
ljmp
cmp
cmp
loop
jl
mov
xor
scas
xor
cmp
movsl
push
or
lahf
insb
test
cwtl
int
out
scas
mov
mov
mov
xor
mov
xchg
repz
and
in
jbe
sub
xchg
test
jecxz
pusha
popa
and
cltd
jo
add
mov
xchg
xchg
jns
scas
inc
imul
xchg
int
gs
and
inc
mov
ljmp
sbb
sbb
out
inc
mov
push
imul
xor
adc
or
adc
fcomps
push
test
movb
inc
add
mov
fst
sub
je
inc
mov
in
dec
out
roll
mov
roll
push
in
and
movsb
lret
movsb
jge
in
adc
and
mov
popa
jns
adcb
setns
jb
fwait
enter
mov
out
mov
cld
jg
mov
enter
fldt
jmp
aad
cmp
sbb
outsl
aam
data16
test
and
adc
lcall
in
sub
sbb
das
or
pop
cmpsb
aam
mov
ret
jns
push
inc
stos
lcall
fcom
or
jmp
out
add
int3
fisubl
popa
divb
scas
and
sahf
pop
lret
in
fnclex
xor
add
js
sbb
pusha
xchg
out
fiaddl
add
push
fs
out
cs
jle
out
xchg
into
mov
imul
push
mov
gs
or
add
filds
call
arpl
insb
push
jge
cli
mov
inc
push
fwait
into
loop
mov
addr16
das
lea
pop
fmull
adc
mov
cltd
xchg
or
adc
and
inc
scas
pop
movsb
mov
mov
pop
push
jp
lret
loopne
pop
ja
pop
push
add
imul
push
scas
loop
jmp
dec
repnz
fadds
pop
pop
jecxz
aaa
bswap
insl
cmp
int
into
xbegin
lret
push
lcall
clc
arpl
in
lret
cwtl
js
imul
daa
ljmp
inc
and
mov
inc
movl
lcallw
enter
sbb
cmpsl
sbb
adc
mov
lds
push
xchg
addr16
push
adc
mov
adc
lods
out
sbb
xchg
sub
in
sub
in
insl
imull
call
push
clc
in
pop
push
movsb
and
cld
loope
daa
or
movsl
outsl
addb
mov
mov
imul
mov
cmpsl
sub
mov
lret
fstl
push
aas
xchg
imul
jmp
or
loop
addr16
pushf
or
pop
loop
divb
sbb
out
sub
popf
fdiv
in
in
leave
add
inc
int
mov
enter
mov
rcll
adc
and
inc
pop
jns
test
ds
jae
xchg
push
inc
enter
cmpsb
addr16
aad
sub
xorb
jbe
add
mov
and
std
mov
inc
push
in
adc
rclb
popf
lcall
cmpsb
push
fsubs
scas
enter
adc
aas
lret
mov
movsb
mov
ror
ja
xchg
mov
xchg
ret
aaa
out
enter
in
bound
enter
loopne
fsts
ret
jbe
test
adc
das
cmc
push
adc
dec
insl
sbb
add
jmp
sar
daa
cwtl
lods
leave
push
sub
add
sub
and
mov
or
cmp
push
and
adc
mov
add
xlat
xor
inc
adc
mov
lret
and
pop
mov
inc
xchg
and
mov
push
cmpsb
int
inc
out
mov
add
arpl
stos
nop
mov
sbb
out
movb
xor
stos
pop
dec
incl
push
xchg
mov
sub
pop
pushf
cmpsl
xchg
enter
scas
jbe
mov
mov
rolb
lahf
inc
adc
rcr
add
sbb
push
enter
cmp
jno
mov
out
jg
movsb
mov
dec
mov
and
aas
sysenter
neg
loopne
loope
jp
push
lret
mov
push
adc
idivb
daa
sub
es
out
test
bound
mov
mov
loopne
enter
cmp
int
mov
out
adc
lret
pop
jnp
pop
fst
aam
gs
lock
fdivs
or
and
enter
lret
inc
sub
fistps
or
flds
mov
clc
bound
enter
inc
mov
lods
pop
dec
dec
addr16
jmp
lahf
fld
jge
ljmp
sbb
sti
pop
dec
int3
cmp
xchg
xchg
fists
int3
mov
outsb
xor
adc
mov
subl
aam
mov
scas
int
pop
mull
ret
mov
imul
int3
loope
iret
sbb
mov
imul
lret
xchg
mov
es
gs
push
xchg
mov
nop
aam
ss
pop
lcall
enter
xchg
and
outsl
mov
mov
mov
push
mov
fistpl
in
mov
shlb
test
jne
mov
mov
dec
roll
xchg
xchg
mov
push
mov
pop
iret
jns
or
jge
outsl
out
adc
movsb
arpl
pushf
xor
and
cmc
int
call
shlb
loop
addr16
push
enter
dec
xor
shr
fld
mov
lods
sbb
jg
lds
xor
xor
pop
mov
es
xchg
add
or
mov
xchg
lret
stos
enter
pop
fistps
shl
loopne
inc
mov
jle
mov
xchg
aas
xchg
mov
mulb
mov
push
or
int
pop
enter
jmp
pop
jae
out
dec
popa
movsb
addr16
les
cmpsb
pusha
inc
out
imul
add
dec
mov
pushf
enter
and
sub
enter
jle
aam
cmc
fcoms
dec
pop
pop
fwait
movsb
xor
dec
enter
mov
or
mov
mov
popa
out
enter
int
inc
enter
ror
in
sti
mov
dec
test
loop
mov
testl
jae
mov
cmpsl
aad
xchg
inc
inc
jl
xchg
inc
lahf
popa
aad
jp
xchg
lods
out
out
push
dec
xchg
cltd
fisubs
loop
fsubs
into
mov
mov
lods
jp
dec
outsl
std
js
xchg
mov
fmull
or
movsb
movsl
pop
int3
fld
push
ja
cmc
xchg
sbb
je
lahf
and
jmp
cmovne
int3
pop
mov
mov
stos
xchg
pop
or
popa
pop
shlb
shll
enter
add
xchg
ss
push
sahf
fsubrs
ret
xchg
int3
cwtl
loope
sarl
xchg
dec
outsl
jo
aad
in
push
sahf
xchg
push
cltd
xorb
or
popa
nop
pushf
cmc
ss
fisttps
jg
lods
enter
std
lret
out
cltd
mov
lds
fiaddl
pop
jge
enter
out
ret
rcrb
adc
fdivrl
addl
xchg
popf
inc
popa
jecxz
ror
adc
sahf
jmp
jne
iret
negb
cmp
jb
jmp
loope
addr16
fcmovu
inc
xchg
shr
mov
ret
adc
push
enter
jge
aam
std
sub
xchg
rcl
sbb
adc
shlb
fs
cmpsb
je
or
fwait
push
int3
icebp
mov
add
or
xor
mov
sub
dec
adc
push
addr16
jg
aam
loope
les
inc
enter
lcall
inc
stos
dec
jge
in
push
jmp
and
rclb
pop
enter
lock
pop
mov
push
inc
or
push
push
shlb
ret
in
jo
pop
in
mov
enter
push
lods
cli
out
xchg
fs
enter
outsb
enter
imul
in
fcmovnbe
cltd
cmpsl
pop
roll
cli
outsb
scas
loop
xor
nop
out
call
push
jno
add
push
and
test
xchg
lods
dec
popa
in
into
xor
mov
push
push
stos
adc
mov
rolb
out
loope
adc
aas
decb
int3
and
push
inc
ret
mov
xor
jge
inc
fcompl
xchg
and
in
jnp
cmp
pop
out
enter
arpl
subl
push
testb
lcall
test
enter
add
movsl
frstor
loopne
popa
loope
rcl
fnstenv
stos
popf
mov
loopne
jb
cmp
jns
adc
cld
arpl
push
mov
int3
xor
pop
or
pcmpgtd
add
sar
sbb
cmp
test
xorl
jbe
mov
dec
mov
call
repz
pop
pushf
and
enter
bound
pop
fcomps
jae
in
jmp
nop
mov
lret
dec
int3
stc
js
enter
mov
insl
ret
ds
gs
call
outsb
in
mov
lds
dec
xchg
enter
idivl
cld
cmp
push
enter
cmp
jnp
cmp
testb
loope
cmp
movsl
mov
pop
mov
mov
nop
mov
jge
sbb
xorb
lret
pushf
out
push
cmc
and
add
stos
push
leave
lods
int3
nop
adc
dec
call
dec
sub
shrl
enter
jns
and
or
dec
mov
pop
pop
pop
out
nop
das
int3
or
or
xchg
push
push
dec
popa
test
enter
adc
ja
je
add
movsl
daa
filds
enter
cmc
shr
fnstenv
xchg
jmp
pop
cld
pop
mov
nop
sub
push
lods
add
loope
lods
pushf
loop
or
jne
sub
mov
in
loop
pop
lret
int3
jg
mov
and
add
inc
and
stos
mov
imul
dec
cmp
jl
mov
popa
sti
ja
into
dec
or
xchg
mov
fists
xchg
faddp
mov
fistl
nop
in
mov
mov
push
pop
enter
mov
out
sarl
cld
mov
int3
cli
je
pop
pop
mov
enter
int3
out
stc
bound
ret
dec
nop
mov
call
and
push
dec
rorb
rcll
inc
out
adc
movsl
pusha
addr16
rorl
aam
sub
jl
nop
pop
sub
test
cmp
stc
pop
leave
in
rolb
xor
xabort
sbb
push
and
movsl
enter
mov
mov
sub
lds
lods
mov
jbe
xchg
mov
ss
and
sbb
out
stos
adc
lcall
fcomps
pop
lret
inc
dec
mov
mov
movsl
sub
enter
in
imul
loope
lret
sub
dec
push
nop
enter
push
into
daa
sub
out
loope
repz
or
mov
jns
imulb
push
loope
gs
nop
shlb
out
push
mov
and
aam
xchg
rolb
dec
mov
call
enter
out
cmp
and
push
imul
enter
dec
cmpl
int3
aam
sbb
jno
inc
and
enter
push
inc
push
push
cmc
fsubr
je
negb
xchg
nop
sub
push
enter
cld
lcall
mov
mov
ror
cwtl
ja
bnd
xchg
pop
cltd
out
mov
and
jbe
xchg
sub
inc
imul
cmp
stos
movsl
xor
mov
xchg
jl
es
shll
jb
xchg
mov
addr16
enter
cltd
stos
lea
add
movsb
inc
scas
outsl
add
lret
xchg
sub
enter
mov
fwait
daa
shlb
push
fsubs
ret
and
inc
inc
aam
scas
pop
test
js
sahf
xchg
mov
insl
cmp
inc
mov
addl
and
stos
repnz
and
movsb
adc
ret
xor
ret
je
js
and
aam
call
nop
in
das
out
mov
rcll
push
std
call
jge
imul
out
adc
jns
sub
dec
test
ds
dec
loope
popa
push
sbb
stos
inc
out
pop
shlb
shlb
stc
imul
shr
mov
add
enter
shl
bound
add
in
ret
add
add
enter
xchg
pop
std
jo
enter
stc
dec
mov
out
xlat
mov
popf
jmp
leave
and
fcompl
pop
and
cmp
jg
aad
fcoml
nop
outsb
in
dec
mov
pop
lods
sub
or
cwtl
notb
mov
sbb
xchg
dec
xchg
test
mov
inc
enter
ret
adc
in
std
push
push
ficomps
inc
cmp
es
or
loope
gs
jmp
nop
in
shrl
xor
sbb
mov
aam
dec
cmc
mov
adc
test
cmp
jl
cmp
dec
imul
out
call
or
invd
sbb
rorb
movsl
and
xchg
adc
int3
imulb
popf
adc
in
jg
gs
xchg
sub
mov
mov
pop
hlt
icebp
pop
sub
sub
enter
jge
adc
cmpsb
pop
int3
test
stos
xchg
js
enter
dec
sub
cmc
rclb
inc
jmp
sub
jne
and
sahf
enter
cltd
mov
out
xchg
cli
out
int3
xor
mov
test
push
inc
cmpsl
mov
mov
nop
push
xchg
mov
dec
mov
loopne
mov
or
add
mov
sub
ja
mov
sti
push
in
or
mov
test
and
jnp
pop
jge
int3
mov
mov
test
xchg
out
cmp
push
jg
testl
xchg
add
gs
pushf
int3
outsb
jmp
dec
cld
xchg
adc
sti
sbb
sub
dec
jo
mov
psubsw
gs
adc
or
in
sbb
jmp
loop
xor
pusha
cmp
dec
pop
out
or
fstpl
test
jmp
setb
sub
movsb
xor
cmp
pop
push
or
fisubs
sub
xchg
sub
inc
mov
sarb
int3
dec
xlat
push
add
sbb
sbb
sub
js
dec
aam
and
sub
push
fldenv
pop
cmp
xchg
in
faddl
cmpsb
andl
push
or
and
sub
loope
inc
rcr
cmp
sub
loopne
pop
mov
or
in
sbb
jae
lods
sub
shrl
dec
xor
fsubrs
adc
push
xor
mov
xchg
or
in
cmp
imul
push
mov
sbb
sub
push
cmp
jbe
flds
ret
aad
pop
fmuls
or
loop
lcall
aaa
gs
inc
test
andl
in
xor
lds
inc
mov
imul
and
in
xor
cmp
cmp
jmp
add
or
lcall
bound
sbb
sbb
and
pop
mov
lahf
push
dec
ja
cwtl
inc
sbb
test
andl
inc
xor
nop
or
sbb
sub
sbb
cwtl
inc
push
sub
in
mov
enter
adc
or
int3
or
or
stos
mov
cmp
xor
sarb
xchg
sbb
xchg
push
enter
inc
push
test
jle
in
inc
push
xchg
or
adc
sub
sbb
pop
pop
inc
cmpsb
loopne
dec
inc
cmc
and
add
sub
insb
and
adc
dec
xor
push
dec
nop
cmp
cs
rorl
aam
and
xor
xchg
mov
xchg
inc
push
aaa
in
or
adc
sub
add
xor
cmp
insb
pop
xlat
lds
aam
inc
push
fwait
lods
and
mov
push
xor
ljmp
test
xchg
lret
push
imull
sub
or
sub
and
data16
add
push
je
dec
lcall
in
stos
and
push
add
sub
lahf
int3
jle,pt
enter
cli
push
shl
xor
dec
push
or
push
mov
ror
xor
sub
bsf
push
inc
call
lea
pop
jmp
fidivl
push
pmulhuw
fiaddl
pop
imul
and
add
dec
shr
add
sti
push
jns
test
pusha
push
cmp
adc
out
ds
cmp
jo
and
fsts
scas
cmc
mov
sbb
rcl
push
cmp
cmp
not
setg
bswap
lea
not
seto
mov
call
btr
xchg
neg
shl
sub
push
mov
mov
pop
not
mov
movsbw
movzbw
xchg
pusha
mov
lea
bswap
mov
pushl
pushf
pushl
mov
lea
bswap
pop
pushf
push
push
pushf
pushl
ret
mov
jmp
bt
call
lea
call
push
jmp
push
mov
movl
pushf
pushf
pushf
lea
jmp
add
mov
and
adc
dec
and
mov
cmc
jmp
jmp
btr
mov
adc
inc
add
pushl
jmp
mov
push
mov
mov
pushf
popl
call
push
jmp
jmp
jmp
push
pusha
mov
push
pushl
lea
jmp
repz
popl
push
mov
jmp
rep
sub
mov
movsbw
and
mov
stc
cmp
mov
pushl
popf
pushf
mov
lea
jmp
pushf
pusha
mov
pushf
lea
jmp
pushl
call
aad
shrd
mov
mov
rol
sbb
clc
xor
mov
bt
stc
bt
add
call
cmp
sub
cmp
shl
pusha
pushf
call
push
mov
pushf
push
push
pushf
popl
mov
pushf
pushl
popl
pusha
mov
lea
jmp
sar
btc
btc
mov
lahf
sub
mov
jmp
pushf
pusha
jmp
pushf
push
jmp
mov
clc
test
bt
sub
pushf
cmp
call
pop
mov
call
mov
sub
pushl
stc
pusha
pushf
ror
mov
cmp
bt
add
test
neg
clc
jmp
cmp
pushf
pusha
jmp
lea
ja
rcr
das
shld
aam
mov
aaa
bswap
lahf
lea
adc
rol
daa
sub
pusha
adc
lea
dec
and
neg
shld
ror
sub
movzbl
bswap
mov
push
pushf
popl
pushf
call
adc
das
mov
mov
rol
mov
bt
cmp
stc
not
pushf
movb
mov
not
stc
test
cmc
bt
and
pusha
push
mov
pushf
call
mov
call
cmpl
jmp
movb
pushf
popl
jmp
jmp
jmp
pushf
mov
push
pushf
mov
lea
jmp
add
clc
clc
mov
jmp
setnp
mov
ror
cmp
stc
sub
setp
call
pushf
mov
call
cmc
btc
neg
rol
mov
stc
add
pushf
push
pushf
push
lea
jmp
or
mov
xor
xor
ror
ror
mov
jmp
push
call
jmp
sub
bt
cmp
shr
push
pushf
call
push
mov
pushf
mov
jmp
cmp
sub
cmp
shr
jmp
lea
jne
pusha
xor
jmp
stc
neg
pusha
cmp
call
sub
pushf
pushl
call
xor
cmp
cmp
mov
bt
cmp
stc
sub
pushl
inc
pushf
call
neg
call
mov
push
pushf
lea
jmp
mov
pushf
mov
mov
mov
lea
jmp
clc
mov
add
clc
shrd
movzbw
xor
dec
rol
pusha
sub
shl
rcr
bswap
inc
xor
sar
dec
sub
cmc
neg
bt
xor
ror
mov
jmp
decl
jmp
call
pushf
pushl
popl
mov
movw
mov
push
lea
jmp
add
mov
cmc
btc
mov
cmc
add
pushf
pusha
mov
pushf
movb
movw
lea
jmp
call
push
movzbw
mov
not
pusha
mov
pushf
lea
cpuid
pusha
pushl
pusha
sub
call
test
mov
call
lea
je
push
pushf
mov
jmp
jae
pusha
mov
movb
pushf
pushf
popl
push
pushl
popl
pushf
movw
movb
movw
lea
jmp
mov
pushl
pushl
jmp
dec
not
sbb
bts
mov
rol
shl
pushf
add
add
setnp
pusha
jmp
shl
mov
shrd
bsr
cmc
mov
pushf
push
cmc
push
add
pushl
movb
mov
pushf
pushf
pusha
lea
jmp
push
pushl
mov
movw
lea
jmp
rcl
mov
cmp
mov
jmp
jmp
rcl
rcl
clc
mov
clc
cmc
bt
stc
xor
pushf
bt
mov
pushf
sub
sub
jns
cmp
cmc
cmc
xor
pushf
cmc
call
pushf
pushl
popl
movl
pushf
lea
jmp
call
pushl
popl
pushl
push
pushl
movb
lea
jmp
sub
test
mov
test
cmp
pusha
add
push
pushf
mov
lea
jmp
inc
cmc
pusha
rcl
movzbl
lea
jge
push
sub
cmp
jmp
jmp
call
aam
shld
inc
mov
daa
test
neg
pop
rol
pop
setno
rcl
bts
mov
pop
shl
pop
neg
pop
sub
shl
pop
sbb
rcr
cld
pop
add
movzbw
popf
setle
push
mov
mov
pusha
mov
movsbw
push
mov
push
push
pushf
mov
pushl
ret
sub
call
test
shl
call
pusha
pushf
pushf
mov
jmp
sub
movb
pusha
div
jmp
add
call
mov
pushl
pushl
push
pushf
popl
mov
pushf
call
jmp
pushl
popl
pushl
pushf
movb
pushl
lea
jmp
shl
call
pushl
mov
movb
mov
movb
pushf
pushf
lea
jmp
sbb
sar
aas
ror
mov
cmc
stc
test
add
test
cmc
clc
call
jmp
test
aas
das
lea
jmp
mov
pushf
mov
call
ror
bswap
ror
mov
cmc
push
jmp
pusha
lea
jp
push
mov
pushf
call
xor
bts
shl
mov
not
add
bt
sub
shld
or
pushf
adc
mov
jmp
mov
jmp
not
movsbw
pushf
mov
movb
movb
lea
pushl
jmp
sar
pushf
shl
mov
rol
mov
pusha
bt
test
cmp
sub
mov
push
push
shr
call
pushl
call
shrd
mov
call
call
mov
push
lea
jb
pusha
pushf
divl
call
lea
xchg
mov
cmc
not
mov
jmp
test
jmp
ror
cmc
add
bt
neg
clc
cmc
sub
test
pushl
call
cwtl
rcr
aas
cmp
mov
pushf
movb
test
clc
sub
pusha
push
movb
push
mov
mov
pushf
pushf
movb
lea
jmp
pushf
mov
call
bsf
neg
adc
mov
push
mov
test
test
add
movb
pushf
pushl
pusha
lea
jmp
mov
jmp
jmp
stc
cmp
add
push
movb
jmp
push
pushf
popl
jmp
test
rcr
mov
clc
shr
mov
test
cmp
push
not
cmp
cmp
not
cmp
cmc
pusha
mov
sub
mov
and
pusha
mov
pushf
pushf
pushf
popl
pushf
pushl
popl
mov
lea
jmp
add
add
jmp
jmp
pushf
mov
jmp
pusha
pushf
popl
pusha
call
jmp
bswap
mov
pusha
mov
jmp
movzbw
rol
clc
not
sub
xor
add
neg
xor
pushf
sar
and
test
mov
stc
sub
pushf
mov
pushf
lea
jmp
call
push
mov
pushf
pushf
popl
call
push
call
shl
add
and
add
push
jmp
pushf
jmp
jl
pushf
jmp
mov
pushl
pusha
lea
jmp
bt
btc
ror
rol
cmp
adc
add
shld
add
jmp
or
lea
sar
mov
movsbl
add
not
bts
mov
call
pusha
jmp
push
jmp
pushf
pushl
popl
pushf
pushl
push
pushl
lea
jmp
jmp
pushl
mov
pushf
call
repz
popl
lea
jno
pushf
movb
mov
pusha
lea
jmp
test
clc
bswap
cmc
cmc
bt
cmc
add
mov
stc
bt
sub
jmp
pushl
pushf
pusha
mov
pushf
pushf
lea
jmp
lea
jae
push
mov
pushf
mov
push
pushf
pushf
pushf
repz
popl
pusha
jmp
pushl
mov
mov
pushf
lea
jmp
neg
jmp
pushl
popl
pushf
pushf
lea
jmp
movzbw
mov
stc
stc
cmp
add
pusha
pusha
pushf
mov
lea
jmp
mov
call
call
mov
pushf
jmp
call
mov
call
push
mov
mov
jmp
jmp
cmp
sub
call
mov
movw
pusha
push
pushf
lea
jmp
not
mov
test
pusha
xor
mov
call
call
cmp
pushf
clc
add
cmc
neg
pusha
bt
clc
sub
stc
clc
sub
call
call
movb
jmp
pushf
mov
mov
push
movb
lea
jmp
aad
mov
btc
push
mov
bt
test
mov
cmc
add
test
shrd
jmp
call
shld
mov
mov
cmc
inc
call
pusha
jmp
pushf
call
xchg
call
mov
movb
pushf
pushf
pushf
lea
jmp
call
neg
lea
jge
xadd
mov
setb
adc
jne
bt
add
pusha
push
mov
not
mov
pusha
lea
jl
pushf
mov
pushf
pushf
lea
jmp
mov
pushf
mov
jmp
jmp
pushf
pushl
pushf
mov
mov
pushf
call
call
mov
mov
pushf
mov
pushf
pushf
popl
mov
pushl
popl
pushf
pushf
pushl
lea
jmp
sub
pushf
push
call
pushf
pushf
repz
popl
push
movb
pushf
mov
movw
pushf
push
push
lea
jmp
call
pushf
mov
mov
jmp
btr
bts
stc
dec
mov
stc
pusha
stc
sub
pusha
stc
bt
add
mov
pushf
popl
call
pushf
jmp
jns
mov
pushf
add
pusha
pusha
pushf
pushl
lea
jmp
pushf
pushl
popl
mov
lea
jmp
btc
movw
rcl
rol
btr
dec
rcl
not
and
stc
sete
xor
inc
shrd
and
inc
not
neg
bswap
mov
test
mov
stc
call
bswap
call
pusha
mov
pusha
mov
mov
pushf
pushf
repz
popl
mov
mov
pushl
lea
jmp
call
lea
jle
pusha
pushl
mov
pusha
jmp
mov
jmp
push
pusha
movb
pusha
jmp
pushf
popl
movb
pushl
popl
push
pushf
mov
push
lea
jmp
pushf
mov
mov
pushf
repz
popl
mov
pushl
push
mov
pushl
pushl
push
pushf
lea
jmp
movw
add
pusha
mov
push
push
pushf
pushf
lea
jmp
pushf
mov
test
cmp
stc
sub
jmp
xor
bts
pushf
xor
bts
rol
btc
pusha
cmc
neg
add
adc
xor
rcl
xor
movzbw
not
mov
bswap
inc
test
mov
stc
add
movb
pushl
pushf
jmp
ror
cmp
bt
stc
add
movb
neg
mov
call
bswap
sar
btc
dec
mov
push
cmc
clc
add
pusha
movb
lea
jmp
pusha
pusha
pushl
popl
pushf
movw
push
lea
jmp
lea
jp
push
pusha
movb
repz
popl
call
jmp
jmp
mov
mov
movw
pusha
lea
jmp
cmp
cmp
sub
pushl
pushl
cmc
lea
jnp
cbtw
cmc
cmc
stc
pushf
cwtl
test
stc
mov
sub
push
pushf
mov
pushf
movb
lea
jmp
pusha
mov
pusha
pushf
call
pushf
call
push
not
mov
rcr
not
mov
stc
stc
add
pushl
mov
mov
mov
pushf
pusha
pushf
lea
jmp
xor
push
bt
rol
jmp
pushf
pusha
mov
movl
repz
popl
mov
mov
pushf
mov
movb
lea
jmp
push
pusha
mov
std
not
pop
movzbw
mov
pushf
lea
mov
lea
call
movb
pushl
mov
push
push
lea
jmp
mov
pusha
movb
lea
jmp
cmc
jmp
cmc
cmc
pushl
popl
stc
pusha
pusha
add
cld
cmp
stc
pushf
pushl
popf
pushf
pushf
mov
mov
lea
jmp
mov
mov
mov
lea
ja
pusha
pushl
pushf
popl
lea
je
push
push
pushl
popl
pushf
pushl
pushf
pushl
lea
jmp
push
sub
jl
cmp
sub
clc
cmc
je
sub
clc
ror
cmp
add
pusha
mov
neg
stc
clc
stc
sub
pusha
movw
cmc
sub
jmp
jmp
mov
mov
movb
movb
lea
jmp
call
mov
jmp
call
mov
pushf
push
lea
jmp
push
call
jmp
call
push
push
repz
popl
pushf
pushf
pushl
mov
pushl
lea
jmp
bt
push
jmp
mov
repz
popl
movb
pushf
mov
mov
push
movw
pushf
lea
jmp
call
mov
call
call
pusha
pushf
inc
call
pushf
mov
push
lea
jmp
pusha
pushf
mov
mov
pushf
mov
movl
lea
jmp
mov
pushf
lea
jmp
pusha
ror
bts
mov
push
clc
test
add
pushf
pushf
lea
jmp
mov
call
push
inc
call
mov
call
jmp
jmp
push
lea
jne
call
call
push
mov
movb
push
mov
lea
jmp
push
neg
bt
mov
xor
cmp
pusha
cmc
test
mov
push
test
sub
call
pusha
mov
pusha
pushl
mov
pushf
movb
push
pushf
lea
jmp
xchg
pop
mov
pushl
pushl
pushf
std
cld
jmp
pushf
call
call
test
test
or
cmp
clc
xor
movw
jmp
jmp
mov
jmp
call
pushf
popl
pushl
push
mov
pushl
popl
pushf
pushf
lea
jmp
pusha
mov
push
mov
pushf
mov
jmp
push
pusha
mov
push
pushl
pushf
pushf
mov
jmp
repz
popl
pusha
mov
mov
pusha
pushf
pushf
lea
jmp
xor
test
xor
cmp
pushf
call
mov
jmp
pusha
mov
pusha
pushl
pushf
mov
jmp
mov
repz
popl
movl
push
mov
pushf
push
push
lea
jmp
mov
mov
push
lea
jmp
mov
pushf
jmp
jmp
jmp
aaa
not
aam
bt
mov
or
push
movzbw
mov
mov
rcl
sets
mov
cmc
bt
add
clc
stc
shld
pushf
jmp
btc
das
mov
test
push
shl
adc
mov
cmc
clc
clc
cmp
sub
clc
clc
shl
pusha
push
jmp
pushl
mov
pushl
pushf
push
movl
lea
jmp
sub
jmp
mov
aad
movzww
call
mov
pusha
pushf
mov
mov
pushf
lea
jmp
jmp
shl
jmp
call
jmp
pushf
mov
pushf
mov
jmp
pushf
mov
pushf
mov
pusha
mov
pushf
call
pushf
pushf
popl
push
pushl
popl
push
pushl
push
lea
jmp
rdtsc
xchg
not
cltd
mov
push
movsbw
sets
jmp
push
mov
pushf
lea
jmp
movzbw
ror
cmp
sbb
mov
cmp
add
pusha
pusha
pushf
push
lea
jmp
mov
pusha
pushl
movb
repz
popl
call
call
pushf
mov
pushf
call
jmp
call
call
jmp
not
push
xchg
repz
setg
clc
push
movzbw
bts
shrd
add
push
shr
rcr
push
mov
lea
and
push
shl
not
push
bt
jle
pushl
bsf
clc
push
mov
inc
test
movsbw
mov
inc
cmp
sub
rcl
mov
neg
xchg
rcl
neg
movzbw
sub
rcr
mov
or
rcl
sub
clc
shl
mov
or
bsr
btr
mov
xchg
add
rol
shl
mov
bsr
movzbw
sub
rcl
setb
btr
pusha
add
lea
pop
dec
not
movzbw
not
not
pushf
pushf
pop
dec
sub
stc
jmp
clc
jmp
mov
pushf
movl
call
call
lea
mov
mov
bt
test
test
add
pushf
movb
call
call
movzbw
movsbl
mov
jmp
pop
xor
add
pusha
pushl
mov
pushf
dec
mov
not
pushf
dec
sar
add
test
xor
adc
inc
movzbl
add
clc
mov
bt
cmc
mov
jmp
call
rcr
shr
movzww
pushf
mov
mov
clc
xor
pusha
call
dec
sbb
and
mov
movsbl
mov
call
mov
push
pushf
pushf
pushf
pushl
ret
call
clc
sub
stc
ror
call
movb
pushl
popl
pushf
pushf
movb
lea
jmp
jmp
mov
push
movw
movw
lea
jmp
pushl
popl
pusha
pushf
lea
jmp
jmp
lea
jne
bswap
neg
rol
ror
xorb
pusha
mov
push
push
mov
lea
jmp
mov
push
movb
mov
pushf
lea
jmp
btr
pusha
mov
test
pushl
clc
cmp
add
pushf
pushf
pushl
lea
jmp
jmp
mov
mul
pusha
pushf
mov
push
jmp
mov
btc
movzbw
movzbw
sub
btc
call
mov
mov
pushl
push
movb
lea
jmp
lahf
mov
pusha
jmp
mov
movb
pusha
mov
jmp
neg
cmc
push
bt
call
mov
pushf
lea
jmp
cmp
sub
pushf
pushf
pushf
pushl
mov
push
lea
jmp
pusha
stc
pushl
sar
mov
pusha
bt
dec
mov
pushf
stc
clc
stc
add
pushf
jmp
add
pusha
ror
pushf
push
add
jmp
mov
pushf
pushf
pusha
mov
push
mov
pushf
push
call
call
stc
stc
sub
cmc
ror
stc
cmc
pushf
call
clc
sub
jmp
jmp
mov
pushf
lea
jmp
and
pusha
notl
sar
aad
bswap
sub
mov
test
stc
sub
call
pushf
repz
popl
push
call
cmp
test
push
sub
mov
mov
mov
lea
jmp
pusha
test
test
cbtw
bt
mov
pusha
cwtl
cmc
sub
call
sub
stc
cmc
pusha
add
mov
pusha
pushf
popl
push
movb
pushf
pushl
popl
pushf
movb
mov
movb
lea
jmp
aad
bt
mov
stc
test
neg
sar
mov
sbb
adc
cmc
mov
clc
pushf
jmp
cwtl
push
mov
push
pusha
mov
mov
pushf
lea
jnp
mov
pushf
push
pushl
lea
jmp
movl
call
pushf
mov
push
push
pushf
movb
lea
jmp
pushf
mov
jmp
cmp
rdtsc
bt
sub
call
mov
movl
mov
push
push
repz
popl
call
mov
mov
lea
jmp
pushf
mov
pushf
pusha
mov
pushf
push
jmp
call
lea
jo
pusha
mov
pushf
pushf
lea
jmp
mov
lea
jne
mov
push
pushf
lea
jmp
jmp
lea
jne
bswap
bswap
neg
mov
cmc
cmp
and
clc
test
cmp
jmp
pusha
mov
push
call
push
pushf
jmp
push
push
mov
movw
mov
pushf
push
mov
pushf
push
repz
popl
jmp
mov
jmp
lea
jge
pusha
pushl
mov
jmp
lea
jne
rol
pusha
xorb
lea
bswap
pop
pusha
pushl
lea
jmp
mov
movw
pushf
popl
pusha
jmp
pusha
cwtl
stc
add
test
stc
call
movb
pushl
popl
pushf
pushl
lea
jmp
pusha
pushf
mov
jmp
pushf
pushl
popl
pushf
movw
pushf
lea
jmp
pushl
mov
mov
movw
push
pushf
lea
jmp
mov
push
movl
mov
pushl
ret
movb
mov
pusha
movb
lea
jmp
add
mov
mov
pushf
push
pushf
pushl
ret
pushf
mov
push
pusha
call
movb
mov
pushf
pushf
pushf
pushf
lea
jmp
push
mov
call
xor
cmp
pushf
stc
xor
cmc
pushf
test
push
sub
jmp
pusha
mov
jmp
mov
pushf
lea
jmp
call
pushf
pushf
mov
push
pushf
pushl
lea
jmp
pushl
lea
je
push
stc
call
pushf
movb
call
pushf
jmp
cmp
shr
jmp
pusha
mov
pushl
mov
pusha
jmp
add
pusha
movb
lea
jp
mov
pushf
pushl
pushl
push
lea
jmp
push
add
push
pushf
pushf
popl
jmp
pusha
bts
mov
cmp
add
movb
push
lea
jmp
pusha
push
call
pusha
jmp
pushf
pusha
lea
jnp
push
mov
jmp
clc
clc
test
test
sub
bt
pusha
push
call
add
pushf
mov
pusha
pusha
jmp
jmp
jmp
mov
mov
push
movb
pushf
popl
pushf
pushf
jmp
sub
neg
sar
not
mov
push
jmp
shrd
stc
dec
mov
bt
pusha
pusha
sub
pushf
pushf
lea
jp
mov
pusha
mov
push
movw
lea
jmp
mov
pushl
movl
pushf
movb
lea
jmp
call
pushf
call
mov
pushf
call
mov
call
pushf
push
pusha
pushl
popl
pushl
mov
push
movl
lea
jmp
pusha
push
divl
call
pushl
pushf
mov
push
lea
jmp
call
xchg
mov
and
cmp
call
call
pushl
mov
movb
pushf
push
pushf
lea
jmp
push
xor
call
movw
call
lea
jnp
push
lea
jne
pushf
push
call
jmp
call
pushf
mov
repz
popl
jmp
mov
movb
lea
jne
or
rcl
or
inc
mov
push
and
movl
test
pushf
cmp
call
pushl
bt
add
pushf
push
lea
jmp
add
jge
pop
stos
adc
pop
stos
dec
add
cld
add
mov
add
add
pop
add
lahf
add
inc
add
push
add
stc
add
pushf
add
into
add
sub
pop
pushf
jge
pop
fwait
pop
add
adc
add
add
sbb
pop
mov
mov
pop
mov
add
inc
add
push
add
jns
pop
stos
into
add
outsl
add
inc
add
cld
add
mov
pop
mov
xlat
add
sbb
pop
lahf
dec
add
lahf
add
out
pop
mov
inc
add
out
pop
xchg
xchg
add
inc
add
test
pop
mov
fildl
pop
cwtl
out
add
adc
add
mov
add
add
stc
add
bound
pop
mov
jmp
pop
lods
cwtl
add
filds
pop
fwait
test
pop
scas
push
add
outsl
add
loopne
pop
cltd
filds
pop
mov
add
or
pop
mov
or
pop
mov
or
pop
mov
or
pop
mov
faddl
pop
mov
add
pop
add
jns
pop
scas
push
add
jbe
pop
popf
icebp
add
inc
add
add
add
add
add
add
add
add
add
xlat
add
mov
pop
xchg
xchg
add
mov
pop
lods
loopne
pop
mov
add
bound
pop
lods
inc
add
fildl
pop
pushf
jge
pop
scas
jmp
pop
scas
cmp
pop
popf
mov
pop
lods
push
add
cld
add
inc
add
and
add
xchg
add
jns
pop
mov
mov
pop
fwait
test
pop
lods
mov
pop
lahf
dec
add
cmp
pop
mov
cmp
pop
mov
outsl
add
push
add
addl
pop
cwtl
out
add
mov
pop
stos
lahf
add
mov
add
sub
pop
mov
mov
add
jbe
pop
lahf
cld
add
adc
pop
mov
mov
pop
mov
add
jns
pop
lahf
cld
add
push
add
jns
pop
lcall
pop
popf
bound
pop
lods
add
movsb
add
push
add
mov
pop
xchg
xchg
add
ret
add
fildl
pop
lcall
pop
lahf
cld
add
test
pop
lahf
cld
add
fildl
pop
scas
xchg
add
addb
sahf
inc
add
bound
pop
popf
mov
pop
mov
xchg
add
push
add
mov
pop
fwait
pop
add
pop
add
pop
add
into
add
push
add
jge
pop
lods
addb
lahf
xlat
add
out
pop
mov
add
push
add
jecxz
pop
xchg
xchg
add
loopne
pop
mov
add
xlat
add
mov
pop
popf
icebp
add
bound
pop
scas
push
add
cwtl
add
jbe
pop
mov
jecxz
pop
mov
lahf
add
filds
pop
mov
or
pop
mov
or
pop
mov
or
pop
mov
or
pop
xchg
push
add
mov
pop
scas
push
add
mov
pop
mov
push
add
push
add
cwtl
add
add
add
add
add
add
add
add
add
add
adc
pop
mov
loopne
pop
cwtl
out
add
sbb
pop
test
push
add
adc
pop
mov
add
movsb
add
mov
pop
popf
bound
pop
mov
xchg
add
inc
add
faddl
pop
lahf
jbe
pop
lods
cwtl
add
bound
pop
scas
jmp
pop
sahf
jns
pop
mov
inc
add
bound
pop
mov
add
add
cwtl
add
stc
add
push
add
cmp
pop
mov
push
add
and
add
mov
add
push
add
push
jmp
mov
pushf
pushl
pushl
lea
jmp
mov
lea
jns
push
pushl
mov
pusha
pushf
lea
jmp
repz
popl
jmp
push
jmp
repz
popl
call
push
mov
pushf
mov
movw
repz
popl
pushf
mov
pusha
movw
push
pushl
lea
jmp
neg
stc
push
xor
cmc
mov
jmp
jmp
xor
mov
pushf
pushf
movb
ror
jmp
lea
shr
btc
shld
pushl
dec
inc
push
shld
ror
mov
and
stc
bsr
push
sub
add
test
xor
shl
neg
lea
sar
shr
adc
sub
xadd
pushl
clc
lea
adc
cmp
clc
movzbw
sub
call
movb
pushf
mov
pushf
lea
jmp
pushf
mov
pushf
movb
repz
popl
call
push
pusha
mov
push
jmp
pushf
mov
mov
mov
pushl
lea
jmp
mov
mov
push
pushl
mov
lea
jmp
neg
inc
add
inc
rcr
or
sub
bt
sub
add
inc
movzbl
pusha
mov
mov
cmp
or
call
repz
popl
movl
mov
mov
mov
lea
jmp
push
call
mov
call
clc
clc
sub
stc
clc
pushf
sub
lea
jns
pusha
mov
push
push
push
movb
lea
jmp
pushf
mov
pusha
call
xor
stc
stc
xchg
pushl
cmc
movw
mov
stc
sub
pushf
jmp
add
sar
movzbl
cmp
dec
movw
mov
pushf
cmc
clc
bswap
pushf
stc
push
jmp
call
and
push
push
pushl
pushf
popl
movl
call
repz
popl
movb
push
call
btc
neg
shr
shld
mov
pushf
add
movb
pusha
pushf
lea
jmp
push
add
call
push
pushf
push
mov
push
mov
inc
clc
stc
push
jmp
