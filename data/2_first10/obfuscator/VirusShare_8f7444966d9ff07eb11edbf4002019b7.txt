mov
in
sub
sbb
adc
mov
sub
incl
push
add
mov
add
add
jmp
add
testb
add
xchg
aas
stos
sub
jg
push
push
pushl
lea
push
push
push
clc
push
clc
mov
push
pusha
add
leave
ret
add
add
sub
add
sbb
push
cli
sub
add
call
sub
inc
add
decl
jne
leave
ret
sub
sbb
pop
mov
cld
push
dec
je
sbb
incb
lea
push
push
dec
in
push
or
push
arpl
or
or
jg
mov
sub
dec
addr16
outsb
ss
or
mov
in
imul
inc
pop
sub
sub
in
dec
adc
or
ret
arpl
add
jo
push
mov
push
push
push
gs
in
test
fisttpll
js
push
dec
ljmp
add
add
inc
and
add
fsubrs
push
push
push
push
mov
gs
pop
ss
push
push
jno
dec
and
pusha
negl
sbb
mov
push
hlt
lock
mov
loopne
insb
cmp
xor
push
call
push
push
jbe
add
push
loope
sub
loopne
imul
popa
push
cmp
lcall
push
pop
add
insb
inc
gs
jb
cmp
mov
mov
imul
mov
out
mov
lods
fcmovnb
jbe
push
dec
insb
or
push
leave
call
mov
iret
in
add
lcall
mov
fnsave
dec
inc
sti
inc
data16
loope
cld
call
test
push
cmc
outsb
pop
js
arpl
dec
stc
imul
xor
cmpl
adc
sbb
popa
call
cli
inc
and
sbb
xor
in
add
fsubr
cmpsb
push
aad
cld
add
shll
mov
hlt
mov
out
add
stc
nop
and
xor
aam
push
or
push
xor
push
outsl
mov
sub
or
add
add
mov
loope
pop
inc
js
inc
jbe
or
lock
in
cmpsb
fisttpl
cmp
xor
push
cmpsl
in
arpl
dec
inc
pop
dec
xor
xor
bound
int3
sbb
call
sub
add
push
sub
mov
push
push
imul
jno
cmc
add
sub
mov
sub
jb
jg
xchg
clc
fs
xlat
hlt
push
popl
pop
inc
aaa
sub
insl
clc
mov
pop
xor
inc
xchg
inc
aaa
outsb
mov
xchg
jno
cltd
out
inc
add
mov
ss
sbb
mov
je
fildl
imul
jbe
cmpl
sbb
dec
push
insb
addl
iret
mov
sub
add
dec
mov
fcomps
add
sub
inc
mov
cmp
add
rcr
mov
lahf
push
lea
outsl
popa
js
sub
loope
nop
in
call
icebp
pop
dec
sub
or
scas
popf
sub
into
outsb
jbe
add
cmc
push
mov
inc
adc
sub
dec
insb
mov
outsl
cld
inc
sub
shrb
je
bnd
imul
cmc
jp
imul
dec
repz
mov
mov
fs
mov
inc
xor
dec
dec
inc
stos
push
or
fisubs
mov
push
int3
pop
clc
outsb
pop
dec
push
push
das
repz
gs
arpl
aad
xchg
lret
lret
sub
add
jb
insb
sbbb
dec
push
lock
add
cmp
xor
das
sarb
js
add
sbb
push
adc
jmp
xchg
pop
push
xor
xlat
lea
clc
mov
inc
push
bound
mov
mov
sbb
mov
in
sub
repz
pop
xchg
paddusw
add
add
cs
pop
js
cs
cld
out
add
aas
cmp
movsb
mov
incl
dec
div
sbb
xchg
cltd
jecxz
test
mov
sti
repnz
stc
mov
out
xchg
mov
or
bound
cs
cld
add
fstpt
mov
push
in
xor
jg
add
jae
stos
mov
push
add
test
insb
repnz
push
imull
repnz
pop
xor
mov
clc
fisubl
ficoms
jbe
push
ret
add
and
movsb
xchg
addb
xchg
mov
testb
push
mov
cmp
add
mov
out
shl
test
add
inc
lods
add
imul
xor
stos
push
and
add
in
jns
ja
ljmp
add
pop
clc
outsb
jb
and
add
cmp
lret
aam
add
iret
test
pop
xchg
ja
test
jp
gs
ss
fs
add
shrb
out
add
and
das
mov
pop
pop
cmpsb
in
add
xchg
jmp
out
sar
ds
lret
add
pop
inc
jg
in
lret
in
jl
jns
jle
loop
mov
pop
push
lret
pop
add
push
push
cmc
scas
add
into
outsl
jl
add
add
and
mov
sub
stos
sti
push
test
cmp
popw
insb
popa
push
inc
and
test
fmull
add
arpl
dec
add
fadds
xchg
jno
jbe
vmovupd
out
sub
into
xchg
xor
mov
in
push
xor
pop
jl
or
xchg
ss
pop
pop
jno
mov
out
add
or
mov
gs
pop
lods
addr16
enter
mov
mov
cmp
sti
inc
pop
jo
sub
cmpsb
and
sbb
cli
adc
test
iret
add
push
cmp
das
push
out
rcr
adc
or
xor
popa
jb
add
mov
vmovmskps
pusha
bound
push
pop
inc
mov
sub
jns
or
mov
leave
push
push
jle
das
scas
add
add
stos
xor
dec
outsb
lods
dec
in
loope
sbb
mov
cld
xchg
pop
sbb
xchg
in
pop
add
xor
inc
jp
mov
sahf
pop
leave
or
stos
data16
gs
into
icebp
nop
xor
mov
lea
fadds
adc
xor
jge
je
inc
jo
jge
xor
je
jns
insl
adc
inc
push
movsb
ds
insb
cmp
xchg
add
push
or
pop
xchg
add
adc
cmp
pop
out
mov
dec
fstpl
cld
jge
cmp
lahf
add
cltd
in
sub
cmp
test
divl
cmp
jb
adcb
in
mov
mov
enter
imul
cwtl
lret
pop
fidivs
mov
lret
push
pop
sbb
ds
xchg
mov
imul
popf
inc
jb
les
add
pop
nop
jae
loope
cmp
orb
mov
mov
mov
popf
cmpsl
leave
mov
mov
fcomip
mov
and
cmp
and
inc
outsl
test
ja
std
test
or
or
out
popa
adc
jbe
cs
push
add
test
popl
es
xor
push
jbe,pt
test
mov
aas
xchg
add
fldt
iret
mov
push
sbb
jmp
mov
in
in
sbb
outsl
mov
fdivrs
inc
icebp
in
out
mov
jp
cmp
aaa
stos
push
adc
lahf
scas
daa
inc
cs
fildl
jmp
sti
into
inc
shll
jae
ret
iret
cmp
mul
shl
inc
sbb
mov
int
cmp
hlt
add
lods
push
loope
xor
shll
mov
pop
add
mov
and
or
int3
add
adcl
outsb
inc
mov
or
aas
mov
mov
shl
dec
loope
clc
faddl
push
inc
and
lahf
mov
pop
mov
and
ljmp
call
insl
pop
daa
lods
shlb
in
rcr
pop
pop
mov
cmp
pop
cmpb
ds
cmp
aaa
cmc
std
xor
into
cmp
mov
sub
xor
add
pop
imul
test
lret
lods
add
sbbb
imull
repnz
test
push
inc
fsubl
out
jecxz
mov
dec
in
jb
in
ss
adc
and
test
mov
or
inc
xchg
or
pop
or
movsb
setge
jnp
add
roll
cmp
xchg
pop
lea
mov
sbb
jno
add
push
or
out
ret
cltd
cmp
adc
jbe
and
bound
cwtl
aam
popf
add
aad
xchg
es
jmp
outsl
inc
mov
lcall
clc
adc
sub
mov
adcb
mov
imul
sub
adc
es
out
mov
lea
imul
lock
pop
lret
mov
jne
repnz
xor
fldl
ret
imul
inc
loopne
xor
inc
mov
rol
rclb
lock
sbb
cmp
stc
cmpsl
push
inc
sahf
je
das
lret
cmpl
and
jae
adc
gs
aam
xlat
testb
in
inc
cmpb
ret
es
sahf
add
add
int3
jbe
or
fdivr
mov
nop
add
add
sti
push
sbb
sbb
inc
cwtl
repnz
add
adc
fists
in
push
outsb
fisttpll
subl
sbb
inc
xor
insl
stc
repnz
jecxz
cmpsl
adc
mov
inc
ret
negb
out
lods
ficoml
insl
or
mov
xchg
aaa
push
shrl
orb
in
jmp
cltd
gs
push
cmpsb
bound
lcall
ret
sub
inc
lea
mov
mov
cltd
jmp
adc
out
out
xchg
sets
adc
inc
xor
or
leave
imul
js
jecxz
rcrl
jmp
xor
hlt
popf
inc
xchg
inc
dec
sbb
mov
jbe
jmp
mov
mov
addr16
push
inc
sub
aas
daa
sbb
cmc
add
insb
sbb
aad
add
aam
add
je
aam
shll
mov
outsl
imul
in
add
xchg
popa
pop
insl
xor
mov
fldcw
call
repnz
pop
push
test
cmpsl
and
xchg
xchg
mov
pop
and
idivl
nop
inc
shll
push
lahf
pop
sub
adc
aam
inc
mov
js
fs
pop
stos
adc
mov
ret
rolb
popf
pushf
cmp
scas
or
mov
into
xchg
fimuls
mov
inc
mov
iret
sbb
out
jne
nop
out
add
lods
add
adc
and
push
orl
std
insl
inc
repz
cld
mov
xchg
or
fwait
jp
iret
or
ss
push
iret
push
into
pusha
sub
dec
cmc
jne
jp
aas
and
jnp
cmp
mov
cwtl
mov
subl
cli
jmp
mov
xchg
jo
loopw
std
and
pop
sbb
iret
sbb
pop
jb
pop
fnop
dec
mov
cmp
cmp
adc
adc
sbb
or
int
fwait
inc
or
loop
xor
xor
pop
pop
mov
fstps
and
dec
sbb
cltd
in
stos
repz
xchg
pop
dec
dec
pop
add
pop
lock
push
dec
int3
stos
mov
or
cmc
rcrb
test
push
and
stc
push
inc
jo
push
aad
ss
clc
shl
pop
ljmp
sbb
mov
mov
call
xor
mov
xor
inc
add
cmp
sbb
movl
dec
das
fwait
jbe
sahf
xor
pop
ret
add
add
aam
shll
shrb
or
popa
xchg
es
shrl
or
out
ss
mov
and
inc
mov
sbb
out
ja
or
push
jmp
test
les
sub
das
adc
pop
fwait
lret
mov
loopne
andl
add
mov
cmp
popf
dec
pop
push
in
mov
push
cmpsb
insl
ffree
loopne
mov
jb
rcr
add
jmp
cmp
leave
shl
test
adc
cmp
push
jmp
scas
leave
hlt
dec
inc
lods
imul
pop
cmp
rorl
sbb
shlb
das
jo
ret
stc
lret
cmp
rolb
xor
cmpsb
cmp
pusha
daa
clc
mov
test
in
cli
aad
lret
cmpl
jl
push
xchg
xor
pushf
icebp
and
adc
jp
dec
or
jae
mov
pop
cmp
fdivs
cmpsb
add
mov
lock
pop
xchg
mov
dec
daa
fisubl
es
xchg
call
lahf
mov
jns
push
lock
fadds
mulb
and
fsts
test
inc
inc
roll
orb
fmuls
xor
or
adc
dec
popf
rclb
movsb
push
xlat
sub
movl
inc
mov
icebp
adcl
es
pop
in
and
fidivs
mov
inc
sbb
sub
add
faddl
clc
add
fst
xchg
leave
push
flds
push
iret
xchg
clc
inc
popa
cs
fimull
iret
jecxz
loopne
insb
dec
sub
adc
xor
lahf
xor
adc
imul
das
and
push
enter
xchg
mov
cmpsl
xor
fsubr
in
add
add
push
daa
xchg
fcmovnu
cmp
in
cmp
sbb
lea
inc
push
xchg
fidivrs
out
sub
mov
sub
push
outsb
cli
mov
jno
or
lret
dec
dec
jp
mov
jbe
sub
xor
gs
sbb
bound
nop
cmpsl
xchg
dec
int3
jb
bnd
leave
daa
mov
hlt
pop
inc
outsl
aaa
loope
mov
jno
and
test
and
mov
das
sub
shll
mov
fistpll
mov
dec
pop
fimuls
hlt
aad
fstl
insl
pop
negl
fwait
jnp,pn
jno
mov
std
sti
pop
je
call
jp
add
loopne
jmp
fisttps
add
enter
push
call
insl
adc
sbb
xchg
mov
rcl
data16
or
pop
mov
cmc
cwtl
cwtl
pop
dec
std
mov
sbb
dec
dec
sbbl
xchg
mov
ficomps
sbb
push
ret
adc
push
pushf
into
loopne
cli
sbb
je
adcl
stos
xchg
dec
lahf
xor
lcall
and
js
inc
out
cmp
fidivrs
rclb
cwtl
cmp
notl
enter
sub
cmp
cmpsl
cmc
stos
test
sub
outsb
cmp
shll
cltd
pop
mov
adc
les
nop
jne
icebp
es
and
and
rcr
das
pop
xor
les
gs
and
cld
adc
lret
pop
shlb
psadbw
pop
shlb
cmpb
fdiv
xchg
cmpl
mov
adc
sub
outsl
and
adcb
cmp
inc
xlat
or
sub
mov
jne
es
cmp
insl
jno
cmpsl
xchg
fcmovnbe
push
or
dec
ret
jp
imul
or
test
ds
js
sarl
jp
loope
dec
mov
in
inc
ror
cld
dec
repnz
sbb
mov
lret
cmp
add
add
jae
ss
cmpsl
add
sub
je
rcrb
ds
cmp
sub
int3
test
mov
dec
xchg
sbb
cmp
dec
push
fwait
std
cmp
mov
cmc
or
xor
and
or
dec
xor
sbb
inc
loop
out
pop
sbb
push
loopne
cmp
or
xor
inc
movsb
hlt
addb
stos
int
data16
jg
bound
cmpsb
mov
or
jae
mov
xchg
sub
dec
in
test
iret
xor
aad
mov
or
jmp
icebp
xor
daa
fistpl
inc
imul
mov
and
jg
out
sub
repnz
xchg
mov
jbe
ja
imul
daa
cltd
and
pop
jecxz
sub
in
mov
inc
mov
push
xchg
mov
mov
mov
cmp
ret
mov
fsubrs
pop
xchg
test
dec
movsl
mov
repnz
cmpb
movsl
or
loop
pop
xchg
pop
pop
mov
mov
jo
xchg
inc
fidivrl
popa
cmp
xor
xchg
cmpxchg
in
popa
ss
pop
inc
jnp
shll
jbe
push
in
je
mov
aaa
push
mov
jmp
stc
pop
ror
test
push
shrb
test
jbe
rcrb
sub
jl
adc
push
mov
mov
lock
gs
pop
cmp
mov
in
lcall
sub
xchg
cmc
cmpsb
xor
fwait
mov
cld
adc
xchg
js
jb
std
cmp
fnstenv
dec
xor
jl
xor
mov
xchg
popf
dec
insb
jle
repz
je
movsb
scas
int
adc
and
in
cld
addb
sub
insb
fadds
std
sbb
fisubrl
lock
nop
xor
andb
loopne
repz
stos
popa
push
sub
inc
mov
mov
inc
cmp
das
cmc
jmp
ficoml
adc
ss
xchg
and
test
bnd
mov
mov
sub
or
inc
adc
arpl
aad
incl
push
bnd
cwtl
out
aaa
inc
jecxz
rcr
pop
icebp
je
cli
or
xor
jb
das
or
mov
repnz
adc
mov
mov
leave
outsl
adc
or
dec
lret
adc
xchg
mov
cmpl
pusha
scas
sbb
jne
xorl
mov
sbb
mov
call
ja
jb
mov
ljmp
pop
rcll
sarb
les
inc
mov
ds
cmp
pop
push
mov
aad
gs
xchg
rclb
cwtl
add
cmp
cltd
std
cs
ja
pop
jge
lret
rorb
ret
push
scas
out
or
dec
push
cmpsb
nop
push
aam
fists
mov
pop
popf
xor
loope
inc
inc
push
andb
dec
pop
cmc
add
add
fidivrl
cld
mov
inc
push
sub
cli
sub
lret
pop
xorb
cmc
popf
or
xchg
fcompl
in
les
fidivrs
sbb
cmpsl
rcll
iret
inc
rclb
jle
adc
push
xor
es
sbb
ret
arpl
push
push
sbb
fs
pusha
nop
aad
and
mov
and
jmp
aaa
adcb
jmp
add
mov
fs
push
push
mov
sar
mov
and
push
ret
sbb
mov
pop
pop
add
push
rorb
sub
movsb
out
jmp
fs
mov
sub
outsb
inc
fwait
cmpl
lea
xor
sbb
push
xchg
clc
les
mov
xorl
addl
cmp
push
inc
xor
leave
jbe
bound
push
mov
or
lea
sahf
jge
sar
ss
dec
xchg
inc
xor
jp
jo
subl
mov
das
inc
or
mov
sub
sbbb
and
or
cltd
inc
lret
jmp
fadds
add
jp
mov
test
in
sub
inc
jne
stos
insb
in
aaa
mov
stos
cmp
pop
mov
mov
icebp
mov
push
push
cmp
les
mov
xchg
outsb
adc
cmp
outsb
test
mov
hlt
scas
mov
in
ret
data16
mov
pop
add
ret
mov
mov
push
mov
clc
adc
bound
jae
mov
test
data16
fs
in
and
xchg
pop
xor
mov
dec
out
dec
loopne
test
push
mov
ds
sub
repz
lock
sbb
int
mov
and
xchg
aam
scas
mov
arpl
jb
add
std
xor
leave
test
sub
pop
movsl
xchg
xor
mov
psllw
lahf
adc
lds
movsb
jae
roll
paddd
nop
cmp
enter
insl
cmp
scas
xor
lods
add
inc
add
sub
or
xchg
cmp
pop
popf
or
rolb
mulb
rorb
cmp
test
faddp
adc
sub
mov
test
loope
xchg
bound
xor
dec
je
into
mov
pop
mov
je
xlat
imulb
lret
sbbb
mov
lahf
inc
addr16
icebp
and
nop
xchg
outsl
pop
pusha
aam
test
jo
std
jmp
dec
aas
shll
ljmp
lret
pop
pusha
push
jg
and
sub
jmp
lock
inc
cmp
cmp
dec
addl
daa
popf
mov
scas
xor
popf
jmp
xchg
xor
les
inc
dec
pusha
jl
jmp
jge
xlat
pop
lahf
or
inc
out
and
popa
and
ds
push
adc
enter
dec
repnz
adc
push
push
pushf
test
pop
or
insl
ror
mov
es
inc
sbb
je
sub
xchg
ret
fldt
sahf
cwtl
frstor
stos
and
mov
adc
lods
sbb
ja
cli
push
js
arpl
sbb
xchg
adc
aas
pop
pop
or
fiadds
cmp
dec
inc
sbb
fcmovnb
mov
outsl
push
pop
stos
xchg
mov
pop
andl
test
lds
or
or
mov
push
push
cmp
in
push
into
mov
cmpsl
in
or
mov
insl
sbb
sbb
cmp
inc
sahf
out
cmc
je
js
loopne
clc
pop
sbb
insl
inc
icebp
call
fxch
fcmovnbe
ret
pop
aas
xchg
outsb
fnstenv
mov
pop
mov
imul
flds
ret
mov
mov
dec
xchg
lds
hlt
sbb
rcrb
lahf
movsl
test
mov
add
and
cmpl
lea
mov
push
aaa
cmc
pop
and
mov
add
std
call
pop
adc
fdivrs
xchg
emms
aad
or
xor
sub
ds
rcr
add
pop
add
iret
das
push
into
das
in
or
insb
xchg
sbb
xchg
mov
mov
sarl
add
in
jl
push
ret
and
fcmove
push
mov
pop
cltd
into
pop
cld
subl
iret
nop
inc
cs
and
adc
test
negb
or
repnz
ret
mov
into
test
sub
aaa
xor
sub
or
push
lcall
dec
ss
add
and
xor
xor
xchg
pop
push
lahf
fdivp
xlat
jae
xchg
stos
cwtl
pop
movsb
dec
jecxz
movsl
outsb
and
add
in
push
inc
aas
jl
mov
dec
adc
xor
idivl
push
pop
push
jecxz
test
sti
mov
mov
sarl
add
scas
dec
xorb
pop
sahf
sbb
xor
mov
hlt
scas
pop
out
outsb
and
add
in
bound
and
cld
pop
mov
mov
andl
adc
mov
xchg
lock
xor
out
fmull
outsl
mov
xchg
inc
or
mov
movsb
sbb
add
mov
pop
xlat
push
jbe
ror
sahf
out
ljmp
pop
mov
adc
sub
push
shrb
repnz
outsb
xor
mov
or
loope
lret
push
lcall
cwtl
aad
inc
filds
push
inc
gs
js
daa
pop
mov
mov
fldt
pusha
jp
pop
cmpsl
xchg
bound
sbb
sub
rcrb
daa
movl
jb
scas
icebp
xor
add
cmp
loopne
aaa
xor
mov
and
popa
jp
mov
cmp
aam
or
andl
xchg
in
pushf
cmp
int3
loopne
stos
pop
fstps
icebp
add
push
inc
dec
movsb
fcmovnu
addr16
sbb
sbb
push
lret
mov
xor
mov
aad
dec
int
sbb
ret
test
pop
popa
arpl
or
je
fildl
scas
dec
inc
mov
mov
sbb
shl
stos
sbb
and
aaa
jle
and
adc
fimull
inc
jle
das
leave
insb
pop
out
fildll
js
push
jo
cli
nop
add
push
mulb
gs
sbb
pop
out
sti
in
push
xorl
xchg
fistl
jo
mov
cmpsb
inc
mov
popa
and
cmp
std
sti
test
in
sub
cld
push
addr16
fwait
mull
scas
push
push
rorl
shrl
aad
or
lock
scas
leave
xchg
dec
sbb
adc
adc
push
mov
mov
fcmovnbe
icebp
sub
xchg
pop
sub
or
xor
adc
popa
jecxz
push
pop
cmp
loop
rcll
xchg
xchg
push
and
cmp
sbb
aaa
in
cwtl
inc
int3
into
lds
and
icebp
neg
icebp
cmovg
leave
dec
inc
mov
inc
jbe
aas
cmp
and
stc
dec
or
add
pop
pop
popa
rolb
and
stos
fidivrl
stc
cmp
les
add
lods
dec
inc
mov
add
clc
push
outsl
scas
sbb
jbe
mov
xor
stos
push
push
cli
bound
lods
mov
add
rorb
adcb
out
idivl
mov
rol
pop
or
mov
pop
jle
jge
adc
pop
icebp
dec
mov
fcmovnb
daa
mov
rorl
pop
xchg
pop
and
subl
push
sbb
call
cwtl
out
xchg
xor
adc
outsl
dec
jmp
pushf
dec
test
dec
pop
mov
xchg
je
cmp
sar
sub
jae
push
adc
or
fiadds
pop
icebp
mov
cmp
out
stc
push
mov
jo
shll
sub
data16
xorl
scas
and
cmp
fnsave
dec
jp
sub
mov
sbb
clc
or
add
outsl
pop
adc
divb
in
test
ret
test
inc
repz
sahf
push
and
adc
iret
movsl
mov
or
sbb
js
mov
xchg
cld
add
pop
adc
das
jge
rorb
nop
std
loope
mov
sti
xchg
mov
cs
out
test
sbb
mov
cmp
xchg
scas
inc
pusha
add
les
push
sub
mov
in
inc
and
movsb
cld
xlat
rorb
push
sub
fisubs
mov
sbb
data16
adc
cld
inc
movsl
pop
inc
mov
mov
adcb
jne
aaa
adc
pop
inc
ja
nop
fnsave
ret
pop
not
xchg
or
jp
sbb
jg
pop
push
sub
adc
cmp
enter
daa
jno
jecxz
mov
cmp
cmpsl
adc
aad
aam
push
adc
cmp
jb
inc
jbe
clc
jp
adc
scas
outsl
cs
insb
and
add
cmp
cmc
add
sbb
orl
add
add
outsl
scas
je
mov
push
and
jmp
mov
xor
jmp
outsb
fmuls
inc
out
mov
jmp
rclb
dec
cltd
or
mov
pop
jae
pop
push
push
or
xor
sbb
mov
cmpsb
jns
push
sbb
orl
call
insb
aam
cwtl
cld
test
cwtl
inc
sub
pop
xorb
dec
cs
adc
adcl
xchg
sub
out
ret
push
shl
outsl
xchg
xor
leave
jb
cld
flds
roll
and
cmp
inc
push
push
loop
inc
xor
dec
sub
xorl
pop
cmp
mov
jg
mov
stos
pop
lret
leave
leave
pop
scas
out
stos
mov
inc
ret
xlat
mov
mov
mov
cld
xchg
scas
pop
mov
popf
daa
js
pushf
and
sub
jmp
fwait
outsl
outsl
lock
fwait
mov
or
and
cmpb
push
popl
mov
movsb
jp
adc
sbb
pop
add
sbbl
or
adc
xchg
fldenv
cmp
xchg
or
cmp
data16
jecxz
xor
xchg
ja
notb
sbb
outsb
jmp
sub
mov
clc
fldcw
ret
lods
dec
or
sbb
push
addb
mov
sub
cld
push
aad
pop
or
inc
mov
mov
or
adcb
clc
mov
or
lds
mov
sbb
pop
test
imul
xchg
mov
popa
and
repnz
mov
dec
jg
out
push
in
testb
loop
inc
stos
iret
sbb
cmp
imul
mov
inc
xor
rclb
and
and
mov
dec
push
pushf
push
fistpl
jg
sub
loopne
push
push
xchg
sbb
and
inc
ljmp
xchg
hlt
xorl
xor
mov
dec
or
jl
xchg
push
pop
stos
mov
arpl
and
data16
jo
sub
mov
in
loop
push
scas
xor
mov
repnz
bound
movsb
cmpsb
mov
mov
jbe
push
ret
mov
push
xchg
pushf
and
clc
shl
jmp
inc
adc
mov
lds
and
imul
jp
or
pusha
cli
lret
pop
lret
in
push
lea
outsl
dec
lods
cltd
xchg
fisubrs
sbb
adc
add
ds
mov
sub
inc
test
push
in
mov
add
rol
add
sub
pop
dec
sub
pop
mov
aas
mov
popa
sti
sar
stc
pop
lea
cmp
dec
xor
cld
pop
push
sbb
add
mov
iret
outsl
push
cli
arpl
xchg
add
fildll
jae
sub
inc
xor
add
lahf
adc
mov
and
in
adc
xor
loopne
lods
lahf
into
mov
aad
jl
enter
addr16
sbb
stos
aas
push
mov
fcompl
mov
ja
fstps
scas
jecxz
cltd
outsb
inc
and
mov
sub
js
adc
arpl
or
shr
cmp
sahf
jmp
lods
std
cmpsb
cmp
sub
popf
and
clc
fbstp
sbb
jnp
mov
lcall
fnstcw
xor
ret
inc
sbb
xchg
inc
repz
fstpt
insl
mov
xor
cmpsb
xlat
mov
iret
mov
mov
in
iret
push
repz
daa
mov
jo
or
sahf
loope
push
inc
leave
scas
ret
outsl
rorb
cmpsl
aas
lcall
cmc
add
add
rcll
sbbl
add
jno
mov
outsl
sbb
lcall
in
inc
stc
fsubrp
fisubs
inc
jge
mov
sbbl
es
xchg
push
aas
jne
cmp
lcall
loope
cmp
subb
sub
pop
push
mov
add
lods
loope
sub
loopne
adc
mov
repz
mov
push
loop
data16
movsb
sbb
daa
dec
data16
and
cld
inc
je
scas
mov
test
mov
add
int
aad
and
pop
insb
mov
imul
xchg
sbb
jno
lret
nop
loop
jl
push
pop
xchg
inc
aam
ret
sub
lahf
je
xchg
push
jge
mov
std
xor
xchg
loop
iret
and
pusha
xchg
aaa
jbe
imul
mov
and
cmp
jns
outsl
cmp
xor
xorb
fs
xor
out
mov
lret
arpl
jmp
cmpsb
sbb
inc
xor
and
xor
pop
and
call
xchg
rolb
ds
sarb
subl
mov
rolb
lcall
inc
xchg
cmpsl
fimuls
mov
out
clc
mov
and
add
jb
imul
inc
and
cmpsl
xorb
aas
lret
dec
xor
dec
addb
inc
jg
cmp
scas
sub
aaa
push
nop
jmp
pop
push
jo
iret
mov
mov
pop
sbb
dec
jb
add
clc
negl
das
scas
jno
push
or
sbb
jns
mov
lahf
mov
jo
xchg
or
dec
shll
fs
imul
clc
xorb
mov
mov
icebp
roll
jno
int3
sbb
and
iret
push
in
pop
mov
sbb
jle
mov
pop
jne
ret
and
pop
jge
xchg
adc
jecxz
mov
jnp
enter
pushf
call
in
or
loopne
addl
push
lahf
popa
dec
test
add
dec
cld
xor
rol
lea
dec
jg
inc
ss
push
data16
jns
das
je
dec
rorl
cmp
dec
sbb
xor
jnp,pt
add
mov
out
jmp
push
das
cmp
or
imul
sub
fcoml
or
test
jno
add
cmp
xchg
in
jp
and
adc
jle
aas
cmpsl
inc
pop
std
push
xchg
sti
sub
testl
fwait
imul
dec
inc
push
adc
or
xor
inc
int3
cltd
adc
aad
add
lea
js
shlb
and
add
lret
fiaddl
xor
outsl
dec
mov
ds
pop
addr16
push
and
out
movb
adc
mov
adc
scas
xchg
or
es
scas
jae
jo
aas
jecxz
cmp
xor
test
pop
or
subb
sbbl
cwtl
imul
rcll
stos
push
inc
stos
sbb
push
xor
mov
fcmovnu
subb
and
mov
adc
push
sbb
dec
outsb
jmp
bound
cld
mov
fldlg2
xchg
faddl
or
fs
xlat
in
pushf
xlat
insl
fsubl
pop
push
push
add
cmp
incb
aaa
sub
out
inc
loop
push
sbb
jmp
pop
loopne
xor
std
sbb
outsb
rorb
cmp
or
cmc
jmp
addb
add
add
pop
and
mov
or
ljmp
test
sbbl
scas
and
jp
push
xor
mov
orb
xorl
loope
loope
pop
fadds
negb
mov
pushl
mov
loopne
call
pusha
jo
dec
aad
orb
add
sbb
dec
jne
inc
popa
add
mov
dec
cmp
fdivr
shl
mov
or
sub
cmp
dec
pushf
jnp
sbb
mov
outsb
test
push
mov
or
add
rorb
in
push
add
movsl
sub
dec
bound
incl
jb
add
dec
adc
inc
adc
add
filds
push
add
test
pop
cmc
jbe
fs
xor
sti
outsl
ret
dec
sbb
dec
mov
into
mov
fnstsw
lcall
xorb
sub
mov
add
dec
jg
cs
push
icebp
fiaddl
popa
popa
inc
jae
pop
dec
push
popa
cmp
or
and
pop
pop
inc
cld
ja
hlt
push
push
push
push
jo
push
push
inc
pop
pop
call
add
dec
inc
pop
sub
adc
in
js
les
movl
xor
xor
mov
aaa
sahf
pop
aaa
lods
or
inc
mov
add
movsl
xor
les
cwtl
outsl
mov
call
mov
mov
pop
fldcw
insl
enter
in
mov
ljmp
andl
je
jo
push
inc
mov
push
inc
in
pop
movsb
xorb
rcr
repz
pop
pop
cmp
aas
inc
incl
push
lods
push
imul
inc
into
push
adc
inc
out
push
inc
ja
jbe
fs
loopne
mov
xor
gs
cmp
add
sub
dec
and
std
nop
cld
push
adc
pusha
push
cmpl
sub
adc
loope
loop
mov
ds
jl
xor
or
insb
jne
mov
pop
push
ja
fsubrl
add
repz
mov
sub
jmp
outsl
pop
fidivl
mov
push
xor
test
fisttpl
clc
xchg
push
outsl
insl
lret
test
fs
dec
ja
mov
lods
pop
sub
mov
or
mov
mov
movsl
cld
jmp
add
push
cmpsb
aaa
or
lds
ss
pop
pop
les
inc
hlt
clc
push
fsubrs
imul
adc
imul
jo
adc
adc
and
sub
sahf
dec
dec
imul
xor
inc
bound
sti
push
push
inc
add
js
clc
popf
add
aaa
push
jae
mov
xchg
dec
xchg
dec
mov
cmp
ja
push
scas
adc
sahf
lea
in
xor
loop
lock
cmp
cmpsb
jbe
shlb
loopne
imul
dec
jo
adc
lea
push
sub
inc
int3
cmp
mov
insl
push
push
mov
outsl
jbe
movsl
dec
push
ret
sub
adc
mov
mov
add
and
push
jno
pop
fsubrl
mov
mov
inc
mov
xor
pushf
in
sub
lea
gs
adc
cmc
mov
test
shr
jb
inc
addr16
sub
mov
cmp
jne
sub
push
jae
loopne
roll
aaa
aaa
add
push
xchg
out
and
outsl
insl
jbe
and
das
je
dec
inc
pop
dec
pop
or
les
btc
inc
cmp
pop
das
add
jmp
in
out
jno
inc
lock
add
movsb
sahf
not
std
add
je
dec
push
dec
jmp
pop
pusha
xchg
push
xor
push
xor
stc
pusha
sbb
mov
lock
cs
ret
sbb
pop
pop
addl
cmp
fs
xor
jg
add
cmp
js
dec
mov
int
pop
call
fst
mov
dec
mov
and
hlt
lods
or
lea
sbb
sbb
es
push
fildl
pop
fsts
cli
add
sub
sub
mov
loopne
sbb
jmp
dec
dec
hlt
push
mov
ss
add
pop
mov
fs
popa
outsb
hlt
or
inc
jo
outsb
inc
add
fs
sahf
add
js
push
pop
and
fs
xor
xor
outsb
sti
pop
pop
out
push
shl
push
dec
push
jns
jl
and
in
xor
xor
xor
pop
setne
xlat
push
outsb
dec
lods
incl
add
jne
fsts
ljmp
subb
clc
adc
jne
leave
testl
mov
loopne
cmp
pop
insb
xchg
add
mov
pushf
pop
nop
mov
test
xor
push
adc
xor
mov
lods
jo
rcrb
repnz
pop
add
sti
or
add
outsl
push
fcmovu
addr16
imul
jle
fldl
adc
lret
orb
outsb
mov
ds
mov
mov
mov
cmpsl
add
stos
xchg
loopne
pop
scas
mov
jb
call
mov
or
pop
mov
mov
adc
dec
cmp
subb
or
bound
test
mov
sub
add
dec
inc
testl
ja
pop
les
test
jle
bound
ret
cmpsb
jp
or
sbb
and
inc
jne
push
stc
mov
popf
data16
sub
arpl
repz
cmp
fstpl
or
xchg
cmpsl
leave
sub
or
xor
insb
pop
rolb
sbb
nop
sub
jnp
jb
loop
jne
and
testb
aas
push
or
pusha
push
imul
mov
iret
movntsd
rol
dec
icebp
outsb
rorb
icebp
sbb
adc
fidivl
xchg
outsb
inc
test
imull
movsl
fsubs
mov
int
cmpb
jecxz
pop
cld
mov
lret
push
push
add
cmp
insl
aam
xor
jecxz
fistpll
jo
hlt
and
das
mov
xchg
loop
fcompl
add
dec
xchg
inc
gs
andb
enter
mov
adc
test
pop
incb
mov
push
push
push
popa
xchg
lcall
fmul
test
dec
add
add
jmp
or
xchg
dec
icebp
mov
rcrl
mov
xor
mov
mov
xchg
push
jns
jne
outsb
ss
xor
aam
cmp
sub
in
and
push
clc
js
cld
mov
rol
add
vpaddw
lock
or
fstpt
mov
bound
in
jns
add
sub
pop
es
cmp
or
lods
addl
push
in
int
fisubs
rcll
and
or
daa
dec
mov
dec
aam
xchg
daa
movsl
inc
pop
in
scas
jle
fnsave
sbb
dec
jg
das
cmc
sti
iret
iret
xchg
and
mov
mov
xchg
mov
xor
sbb
cmp
inc
fstp
push
int
pop
lods
call
pop
js
push
jns
insb
add
sbb
xor
mov
fwait
mov
mov
cltd
push
push
mov
adc
fsub
imul
pop
xor
push
cmpsb
mov
lods
sub
outsl
adc
imul
adc
cmpsb
mov
dec
jle
dec
fildl
mov
and
outsl
jmp
in
call
test
or
adc
sub
add
fcmove
movsb
insb
lds
mov
sub
push
jb
adc
xchg
push
insl
out
mov
and
dec
sbb
mov
jge
inc
test
bound
les
rolb
jbe
jecxz
lahf
dec
push
push
or
adcb
jno
mov
inc
xchg
pop
addr16
add
mov
inc
xor
push
movsl
ror
mov
adc
pop
lods
xchg
pop
push
lods
mov
rolb
loopne
jbe
sub
pop
sahf
adc
lods
stos
mov
cmp
xchg
push
and
add
faddl
pop
push
fidivs
mov
or
xlat
sub
out
push
sub
cmpsb
stc
pop
or
cltd
test
pop
rorl
clc
ret
lods
inc
adc
fwait
mov
roll
ss
stos
hlt
xor
out
std
adc
mov
jmp
sub
fldln2
sbb
pop
pop
mov
jl
sub
imul
push
sahf
les
das
sbb
hlt
mov
lods
sbb
scas
out
rorb
out
cmpsb
or
fidivrs
or
cli
sbb
fnstenv
ds
or
clc
adc
or
pop
mov
xchg
dec
aas
mov
pop
pop
xchg
sti
pop
icebp
mov
push
xchg
in
test
in
test
pop
popf
subb
mov
ljmp
cmp
adc
cmp
mov
popf
addb
test
adc
aaa
rorl
ror
cld
dec
js
inc
mov
mov
push
sbb
jmp
jno
ffree
xchg
dec
sarl
push
sarl
nop
dec
adc
and
cmp
push
mov
sahf
call
or
fistl
pushf
pop
push
and
dec
notl
inc
jmp
pop
or
add
lods
cmp
sub
cmp
mov
popf
iret
push
cltd
lock
scas
fiadds
pop
xchg
rcrl
aaa
sbb
or
hlt
mov
in
arpl
pop
loop
orl
adc
push
divl
and
imul
mov
daa
sub
xchg
scas
in
adcb
sbb
test
gs
xlat
pop
out
mov
jl
mov
xchg
test
sbb
jle
jg
outsb
jg
mov
lds
std
shrl
sahf
call
sbbb
xchg
loopne
ret
outsl
mov
adc
or
mov
pop
add
daa
xchg
lret
mov
jne
imul
inc
mov
xchg
mov
mov
insb
or
mov
scas
xchg
or
notb
dec
pop
push
lahf
jg
insb
pop
fisttpl
and
xchg
out
inc
popf
and
sub
push
xor
mov
fwait
sbb
insb
mov
add
xor
dec
xchg
jmp
mov
mov
push
ret
dec
out
jbe
scas
loopne
push
dec
aaa
mov
je
insl
aaa
and
inc
int3
fimull
imull
ret
push
loopne
sbb
ret
loope
decb
cltd
xchg
incl
loop
dec
dec
loope
ret
lcall
mov
jg
mov
add
sbb
addr16
push
cmpsl
sub
adc
sub
pusha
jmp
shll
jmp
cld
adc
add
or
adc
add
loopne
loope
push
cmpsl
inc
adc
mov
xlat
fsubl
push
mov
pop
sub
xchg
sbb
and
cs
mov
inc
xchg
rclb
push
cli
cmp
jmp
dec
dec
mov
xchg
xchg
sbb
jge
mov
xchg
or
nop
add
add
mov
sbb
mov
lahf
push
cmp
daa
mov
aad
jne
test
pop
sub
out
cmpxchg
push
dec
mov
sbb
repz
push
int
mov
inc
cmpsl
adc
in
dec
lds
das
stos
into
xchg
push
jg
or
mov
inc
stos
enter
sbb
adc
popa
dec
pop
pop
mov
adc
push
sub
xor
insb
or
lods
mov
or
out
inc
add
cmp
inc
sbb
pop
dec
sub
and
ret
xchg
inc
negl
adc
pop
inc
imul
pop
shl
mov
aam
pop
iret
cmp
xor
fadd
jne
rolb
xchg
inc
cmp
jno
sbb
fdivs
pop
repz
dec
jge
and
in
cmp
mov
cld
jbe
and
mov
cmp
aam
mov
mov
les
and
insb
ffree
fisttpl
xchg
jp
dec
inc
popf
loope
mov
jg
add
into
leave
mov
lret
cmp
jl
mov
nop
cwtl
mul
bnd
inc
mov
jl
flds
push
sub
jno
lock
adc
rolb
fidivs
xchg
pxor
or
mov
add
ds
and
push
add
fs
jns
loope
les
pop
testl
ja
xchg
add
fs
sub
shlb
pop
jo
ja
sbb
test
sub
and
xor
jnp
cmp
adc
sbb
negl
mov
mov
push
xor
loopne
cmp
dec
nop
adc
sbb
outsl
lds
jg
sub
xchg
rolb
sub
les
cs
lock
dec
lsl
inc
cmp
jle
inc
loope
push
cmp
cmovl
fdivrl
dec
add
inc
adc
in
sti
cmc
cmp
or
and
push
or
cltd
scas
stos
mov
inc
icebp
xor
jb
das
jmp
push
xlat
outsl
fwait
int
insb
or
out
lret
aaa
mov
inc
iret
outsb
add
cmp
and
inc
pop
jne
es
adc
push
jo
fsubl
int
push
push
cmc
cmpsb
mov
aaa
cmp
mov
ja
in
jle
xchg
std
add
ret
xchg
les
rorb
jo
roll
cli
lds
add
aam
sub
in
rorl
add
popa
xchg
jge
xor
aad
pop
outsl
outsl
outsb
mov
xchg
or
mov
scas
fiadds
dec
push
aad
pop
popa
sahf
cmp
fwait
xchg
ret
mov
lods
and
cmp
mov
cmp
in
push
pusha
js
jle
add
outsb
jl
sarb
fidivrl
dec
mov
ss
test
mov
mov
aaa
xchg
test
or
shlb
cmp
arpl
jl
fcmovnb
or
std
call
adc
js
stos
push
mov
mov
ficoml
or
dec
fbld
ja
push
xchg
xchg
inc
sub
pusha
push
call
aas
lea
mov
mov
jle
jge
xor
outsl
outsl
mov
mov
ret
inc
or
mov
cmp
fdivrs
mov
incl
lahf
sbb
inc
dec
bound
sub
jmp
outsb
or
in
mov
cltd
aaa
jo
jbe
lea
cmpl
xchg
shr
pop
adc
test
push
and
repnz
push
xlat
sbb
xchg
nop
fsubr
push
aaa
shrb
jl
gs
mov
mov
jb
in
sbb
cmp
mov
orl
cwtl
mov
in
call
mov
dec
and
xchg
ljmp
inc
add
or
pop
enter
pop
xor
inc
jmp
mov
js
push
sbb
sbb
fiadds
shll
cltd
sbb
pop
out
repz
sbb
mov
xchg
repz
or
roll
in
nop
push
pop
add
add
and
mov
mov
ja
add
mov
fdivs
inc
pushf
rcrl
cmc
daa
andl
jmp
push
mov
pop
iret
rolb
stc
mov
dec
fincstp
mov
xor
cmpsl
out
std
add
inc
pop
xor
loopne
je
int
insl
loop
xchg
popa
mov
dec
inc
add
cli
out
rsm
pop
jl
mov
pop
and
cmp
xchg
mov
sbb
inc
adc
addl
sub
dec
xchg
mov
or
fisttpl
js
mov
cld
lret
arpl
ret
aam
dec
adc
cmp
inc
push
xchg
jl
loopne
add
push
sbb
mov
in
cli
or
and
and
or
icebp
mov
sbb
push
cmp
fidivs
sar
push
mov
je
stc
gs
movb
xchg
or
add
jp
jbe
outsl
sub
fists
and
test
lea
mov
rcrb
aaa
lahf
popa
sbbl
and
shll
or
fistpl
or
sub
mul
inc
and
add
or
inc
mov
fstp
std
stos
jge
xorl
xor
mov
out
enter
sub
jae
pop
outsl
cld
or
pop
xor
sub
xchg
pushf
dec
mov
aad
subb
mov
das
lcall
mov
push
push
cmp
lcall
clc
orl
loopne
mov
sbb
cmp
xor
cmp
mov
cld
cmp
or
add
mov
lods
rcl
movsl
outsb
stos
push
jne
pop
push
inc
dec
or
mov
push
adc
fnstsw
scas
cmp
xor
xchg
andb
outsl
mov
jno
dec
dec
mov
das
push
test
or
mov
div
in
int
jmp
xchg
mov
in
mov
loopne
aam
sub
xlat
leave
and
mov
push
shrb
adc
mov
sbb
inc
ss
orl
and
jmp
cmp
inc
cmp
repnz
pop
mov
push
dec
lea
mulb
inc
adc
ljmp
pop
stos
es
outsl
lahf
jp
outsb
mov
mov
sbb
xorb
or
push
add
hlt
cs
push
imul
divb
es
pop
in
or
ds
adc
sar
adc
jb
popa
test
paddw
rcll
add
xchg
cmp
pop
iret
adc
mov
lods
cwtl
xor
lcall
insb
xor
aas
sub
loope
sub
je
movsb
rcl
xor
jmp
push
repz
loope
data16
pop
mov
imul
sbb
or
xor
loope
push
into
sub
xor
cltd
mov
leave
loop
je
js
pop
jbe
cli
pop
jp
cmp
fdivrs
xor
outsl
outsl
fisttpll
test
dec
adc
push
adcb
out
sub
arpl
stos
sbb
mov
sub
sbb
out
xorb
nop
add
out
imull
and
hlt
out
adc
adc
cmp
sbb
iret
shl
in
in
out
lret
push
loope
fcmovb
sbb
divl
gs
sub
es
ficoms
cmp
or
aam
push
lods
cmp
leave
hlt
imul
xor
and
xor
push
addl
bound
dec
leave
decb
dec
pusha
pop
iret
leave
adc
ds
pop
pop
mov
pop
fcompl
mov
add
or
and
push
fwait
mov
sub
or
test
or
cmp
add
adc
mov
inc
mov
or
push
popa
lds
adc
nop
orl
repz
repnz
insl
sub
orb
mov
call
mov
jmp
jbe
xchg
cmp
add
inc
push
push
insb
loopne
loope
out
dec
aam
ljmp
lds
xor
jb
pop
mov
add
xor
mov
lcall
push
inc
mov
pusha
pop
sti
xchg
dec
pcmpeqd
xchg
dec
aad
dec
or
xlat
mov
pop
sbb
xchg
mov
push
sbb
cmpsl
inc
mov
imul
pushf
or
adc
fwait
popa
lods
jmp
mov
icebp
sub
outsl
in
dec
out
adc
adc
mov
push
imul
hlt
test
push
xlat
push
push
pop
les
dec
ret
jecxz
dec
flds
ds
mov
add
jne
ljmp
stos
or
or
sbb
cltd
lock
fcomip
enter
lds
sub
movsl
mov
mov
incl
and
add
fsubr
dec
mov
add
inc
xchg
mov
push
leave
sar
movsb
push
jmp
mov
in
add
lret
les
daa
cli
xchg
and
nop
push
pop
add
mov
addr16
call
repz
add
int3
xor
out
sub
jb
test
dec
mov
fdivs
ficoms
xor
mov
push
add
rclb
add
loop
fstpl
and
loopne
inc
shlb
inc
mov
fwait
es
je
mov
push
mov
sbb
iret
mov
push
bts
jge
out
fs
shr
icebp
enter
jnp
or
sbb
xor
push
dec
sbb
imul
pop
mov
push
mov
inc
cs
sbb
adc
popa
movsl
test
mov
fistpll
dec
test
repnz
psubsb
mov
ljmp
jbe
ret
popa
mov
jo
mov
xchg
sbb
sti
mov
xlat
faddp
push
and
test
cmp
outsb
jp
add
xchg
dec
insb
gs
faddl
or
insl
ja
mov
mov
and
sahf
mov
mov
jns
fs
pop
icebp
mov
sti
mov
cs
inc
jge
rclb
sub
mov
mov
and
lds
call
ret
je
push
repz
js
fnsave
lock
pop
jns
xchg
mov
ds
iret
fadd
pop
mov
and
test
or
inc
jg
add
fcomi
aad
hlt
jl
dec
fucomi
mov
mov
ret
xchg
lret
xor
shlb
add
pop
and
mov
dec
rclb
dec
adc
cmp
test
adc
rcrl
std
and
cli
push
pop
stos
int3
push
push
leave
lahf
popa
jae
push
imulb
cltd
jmp
fbld
in
pop
mov
xor
cmp
mov
je
mov
cwtl
popl
sbbl
aam
mov
out
movsb
inc
enter
ja
sub
insb
mov
pushf
movsl
or
bound
imul
test
push
cmp
pop
outsl
in
adc
call
sub
mov
iret
sub
add
das
call
sahf
cmpb
adc
addr16
loopne
inc
or
aas
or
shlb
mov
test
and
ror
sub
rcr
xchg
mov
stc
inc
xchg
lcall
incl
cmp
xchg
loopne
cltd
pop
orb
mov
xchg
push
sub
mov
fadds
or
lock
daa
ljmp
cmp
dec
scas
xchg
or
cld
shlb
out
ret
data16
xor
ss
mov
imul
jg
cli
shlb
dec
inc
mov
and
push
sahf
or
fcoms
lock
inc
test
lea
jle
shrb
mov
mov
pop
lret
pop
cli
sbb
pop
jp
nop
stos
rorl
je
stos
loope
test
movsl
pop
lock
inc
out
push
daa
mov
jbe
pop
pop
fsubrp
lahf
loop
insl
dec
inc
add
dec
ret
mov
ret
test
notb
jecxz
mov
repz
xor
outsl
mov
pop
into
cmp
inc
nop
insl
xchg
daa
mov
outsl
push
add
dec
data16
outsb
call
das
push
and
aam
out
push
and
or
sbbl
ret
test
mov
inc
cli
int
addr16
cmp
arpl
xchg
in
int3
scas
jp
mov
aad
mov
jmp
shlb
or
xchg
fs
out
ret
ja
cli
jae
or
ret
pushf
and
jbe
xor
pop
out
pop
rcll
lahf
jle
sbb
imul
lock
mov
es
push
mov
pushf
mov
cli
dec
addr16
dec
fnstsw
lds
mov
mov
outsb
outsl
jb
adc
loope
fiadds
sbb
shll
scas
or
cmp
inc
pop
dec
scas
test
xchg
or
and
or
test
cmp
fimuls
shlb
gs
testb
dec
xchg
ficomps
inc
mov
aaa
dec
loopne
rorb
sub
mov
xchg
inc
aaa
dec
jg
cld
dec
jns
cmp
xor
bound
inc
cmpsb
cld
push
aad
sbb
addb
leave
jb
push
sbb
std
adc
in
shr
ss
mov
mov
ss
cs
cltd
mov
jne
pop
outsb
push
je
dec
in
test
lds
xchg
js
mov
icebp
imul
inc
pop
pop
stos
and
scas
loop
js
jbe
sub
cwtl
aad
hlt
and
cmp
in
pop
out
mov
jmp
stos
pop
stos
addr16
movsb
sbb
out
mov
notl
fwait
pop
xor
mov
jge
or
mov
jne
orl
xchg
mov
imul
clc
pop
aam
ss
add
lock
lahf
pop
sub
lcall
in
ja
sbb
sbb
loop
pop
mov
sbbl
lret
ds
and
lods
iret
mov
mov
mov
pop
je
jmp
shrb
xchg
fneni(8087
loop
lcall
dec
fwait
subb
mov
ja
lret
jle
push
in
fistpl
incl
jnp
dec
pop
std
daa
add
lock
cli
add
mov
xchg
push
icebp
pop
mov
jp
xchg
or
subl
xchg
jecxz
nopl
lahf
dec
lret
jbe
lahf
mov
dec
jp
adc
jb
cld
mov
or
and
nop
add
inc
gs
xor
push
addr16
xchg
cli
aaa
leave
es
xor
loopne
sub
ds
mov
xor
outsl
fnstsw
mov
mov
shrl
les
and
cmpsb
cmpsl
es
fsts
push
loopne
lea
and
dec
std
ja
mov
mov
adc
jecxz
jno,pt
lea
pop
das
dec
inc
jne
mov
unpckhps
clc
pop
pop
jle
loop
or
jge
cwtl
sub
ror
lods
aas
outsb
mov
and
js
cld
sbb
test
inc
mov
rol
xor
or
clc
leave
aam
cs
insl
xor
ja
pop
stos
xchg
xor
mov
popf
adc
jmp
or
aas
lret
fidivs
or
cmp
jle
lods
jl
enter
sub
mov
mov
add
jnp
xchg
cs
jb
adc
push
add
sahf
data16
xchg
out
jle
mov
arpl
iret
insl
icebp
pop
and
inc
push
push
jle
and
pop
mov
jb
mov
push
pop
or
add
icebp
push
sbb
sbbb
testb
mov
popa
inc
cmp
jns
fsub
pop
js
and
test
orb
andw
std
mov
pop
mov
mov
push
dec
icebp
inc
ffree
les
adc
ljmp
push
ret
test
mov
jg
pop
movsl
fisttpl
inc
mov
cmp
fidivl
xchg
in
inc
iret
or
in
push
sbb
lret
rclb
mov
push
mov
stos
xor
sub
pop
lea
xchg
popa
loopne
mov
jp
test
dec
or
or
pop
dec
imul
call
arpl
movsl
in
xor
inc
inc
push
movsb
test
jmp
in
or
sti
fidivl
and
cwtl
jg
js
mov
sbbl
lods
lods
ljmp
pop
cwtl
outsb
jno
pop
mov
mov
scas
shrb
mov
pushf
push
psubsb
pop
std
add
push
mov
test
roll
and
xchg
test
push
shrb
out
cltd
ss
mov
fwait
popf
out
sbb
movsb
rcl
or
loopne,pt
mov
xchg
cli
jg
dec
push
in
stos
popa
into
mov
mov
rorb
insl
xchg
adc
mov
xor
iret
xchg
movsl
sbb
lret
dec
insb
pusha
push
les
sub
lock
jno
push
fists
outsb
call
mov
cli
xor
ret
mov
mov
pop
or
sub
loop
pop
add
pop
cwtl
data16
lock
mov
test
lock
adc
loopne
push
pop
sbb
inc
sbb
call
jne
jl
lods
dec
mov
adc
jecxz
decl
pop
adcb
mov
cmp
sbb
jp
inc
sub
cmp
rolb
out
sbb
mov
cmp
fldt
add
decb
mov
inc
pop
xchg
test
bound
jb
out
data16
movsl
nop
pushf
mov
outsb
vmovd
jp
pop
or
fwait
out
clc
pop
adc
fstps
imul
loopne
adc
rolb
in
jmp
insl
lds
jb
lds
stos
arpl
aaa
sub
mov
sahf
loopne
jb
pop
aam
jae
outsl
mov
aam
aam
push
xor
out
xchg
mov
mov
testb
cmp
xor
cmp
sahf
ret
mov
js
sti
sarb
xchg
cmc
jno
adc
sti
sbb
push
into
popa
push
jle
push
loopne
or
xchg
push
loope
inc
mov
adc
jne
repz
and
into
push
jg
push
sbb
jne
dec
lea
out
mov
popf
mov
loope
dec
mov
xchg
push
push
mov
push
sbbl
mov
sub
scas
add
mov
mov
popf
and
sarl
fisubrl
pop
arpl
pop
pop
pop
xor
cs
pop
hlt
shll
push
arpl
adc
xchg
dec
mov
lds
or
rcrl
mov
pop
ss
fistpl
xchg
js
cs
sbb
mov
and
push
in
clc
mov
jbe
and
and
aad
jne
je
scas
pmuludq
cld
popa
ss
daa
cltd
push
arpl
sahf
cli
push
test
and
and
cmp
in
ljmp
xchg
sub
xchg
ljmp
imul
mov
scas
ss
push
repnz
jmp
mov
jbe
lcall
shlb
aam
xor
mov
test
shlb
xchg
shrb
loope
out
add
or
adc
dec
jns
sub
ss
xchg
lods
fwait
mov
mov
rcll
insb
xor
xchg
pop
or
xchg
sbbl
pop
mov
jnp
jge
add
mov
dec
adc
aas
fadds
std
inc
das
adc
fcmove
lds
push
sbb
sbb
mov
sti
xchg
add
lea
adc
mov
fcomi
or
xor
imul
jl
and
xor
and
shl
insb
add
aam
fldl
ret
fwait
dec
or
int3
lock
xchg
sahf
loopne
pushf
dec
outsl
add
and
inc
mov
aaa
xchg
add
aas
push
jno
pop
leave
insl
and
in
je
push
push
adc
sub
sbb
sbb
stos
out
rcr
stos
xor
adc
test
iret
cmp
xor
popa
pop
testl
jle
clc
lods
fucomi
std
cmp
lret
pusha
pop
addl
adc
mov
decl
mov
mov
add
test
sbb
out
mov
cwtl
in
lret
cmpsl
sub
cld
add
mov
sbb
divb
mov
notb
mov
push
sub
fnstsw
shrl
shrb
loope
fcomps
push
add
xor
test
shlb
test
or
cmp
mov
adc
std
imul
pop
cmp
cmp
fnstsw
inc
xlat
xchg
and
cmp
sbb
pop
dec
aad
out
push
xchg
sub
out
mov
dec
dec
loope
push
sub
rorl
outsb
repz
sbb
jnp
sbb
roll
mov
hlt
addr16
add
cmpsb
pop
push
pop
dec
inc
sub
fsubrl
sbbb
adc
ret
or
xor
out
scas
mov
xchg
jmp
test
loopne
push
mov
xchg
or
push
div
dec
mov
cmp
sbb
jp
or
fs
nop
mov
popa
das
scas
roll
cmp
hlt
arpl
cld
repnz
scas
sub
std
and
inc
insb
sbb
loopne
mov
lret
jle
test
outsl
loope
data16
test
es
js
pop
setne
gs
insb
inc
pop
stos
out
push
shll
xor
xor
imul
jno
add
inc
pop
addr16
rcrb
dec
xchg
or
leave
cmp
mov
xlat
dec
push
pop
imul
add
cmpsb
movsb
mov
mov
and
or
jb
cli
lcall
sbbl
jmp
call
mov
out
stc
add
outsb
in
rcll
les
aas
push
mov
pop
pushf
daa
mov
out
dec
lret
out
clc
fstps
adc
sub
shll
or
mov
pop
std
pop
js
pop
jp
push
mov
mov
sub
pop
les
gs
out
sbbl
xchg
fcomps
or
bound
push
andl
mov
mov
mov
ds
nop
rcrb
sbb
push
repz
push
repz
dec
orl
add
mov
incl
incb
add
mov
push
aas
ljmp
int
scas
ja
pop
push
test
mov
loopne
cmp
add
ficoml
hlt
pusha
inc
hlt
push
jge
xlat
mov
jecxz
mov
sub
jbe
enter
ja
jbe
or
mov
lds
or
dec
test
loop
lods
insl
adc
insl
or
lea
push
std
popf
and
mov
sti
cwtl
movb
fdivrl
inc
je
rclb
mov
sbb
icebp
popa
pop
push
jne
dec
out
mov
mov
cld
lods
add
inc
daa
das
sbb
sbb
test
scas
jo
adc
add
shll
lds
add
pop
cli
dec
testb
sbb
ja
ljmp
adc
xchg
xor
cmp
dec
mov
push
icebp
subl
and
xchg
icebp
jnp
cltd
lods
lcall
test
je
cs
push
jb
jmp
loopne
movsb
pop
nop
lret
les
mov
push
mov
sahf
aam
mov
movsb
inc
int3
outsb
insb
clc
xor
xor
ret
cmc
pop
xchg
out
enter
or
inc
test
cmpb
mov
lea
cmc
or
xor
das
rcrb
std
or
in
xorl
aaa
hlt
jbe
xlat
sahf
leave
fnstenv
loopne
or
in
call
cld
add
inc
xchg
inc
dec
push
popa
shlb
push
xchg
mov
movaps
fldl
or
lret
roll
call
mov
add
mov
ret
pop
mov
std
and
negl
mov
subl
or
les
addb
into
or
mov
loop
punpcklbw
insl
pusha
daa
xor
add
mov
jge
adc
test
dec
std
mov
outsb
adc
andl
fucom
or
fwait
ret
adc
shrl
adc
aaa
call
pop
sahf
inc
jmp
aas
and
loopne
jnp
adc
jle
and
inc
cmpsb
cli
decl
pop
or
xor
and
icebp
dec
mov
mov
sbb
ljmp
stc
or
repz
leave
popf
push
hlt
cwtl
repz
lret
jge
roll
cmp
hlt
in
cmpsb
fs
jp
shl
shll
mov
xorl
push
dec
loopne
cmp
cmpsb
mov
or
adc
or
and
mov
jbe
jnp
enter
xor
in
pusha
push
xor
sbb
and
cmp
or
repz
dec
or
mov
jbe
mov
fisubs
sub
adc
adc
sahf
aad
mov
push
sub
fcomi
mov
xor
xor
mov
xor
mov
cs
cmpsl
decl
xchg
outsl
test
cs
daa
call
cmpsb
outsl
repz
mov
mov
mov
push
add
mov
pop
data16
ja
insl
andb
enter
cmp
aas
and
xchg
loop
fisubrs
jnp
push
test
stc
adc
sbb
aaa
mov
enter
je
js
cmpsl
xchg
test
aam
sub
arpl
push
cld
das
jl
es
aad
loop
rclb
adc
jge
pop
fiadds
mov
sbb
lods
addr16
xor
mov
mov
mov
stc
popl
mov
call
mov
movsl
lcall
test
jmp
outsb
and
mov
adc
fildl
mov
dec
outsl
cli
cmpsb
xchg
mov
mov
mov
jne
sbb
dec
adc
and
roll
es
add
mov
int3
mov
push
scas
and
pop
xchg
mov
or
negl
in
and
push
lock
mov
das
je
arpl
fdivs
fsubrl
stc
arpl
mov
or
or
pop
mov
outsb
mov
ret
push
je
mov
test
cmp
mov
push
out
inc
mov
xchg
outsl
fwait
pop
clc
jo
mov
fmull
or
not
popf
es
push
test
mov
iret
imul
sbb
scas
lret
mov
jbe
mov
add
movsl
adc
xchg
ss
adc
mov
fisubrl
ja
add
pop
shlb
outsl
or
inc
outsl
je
push
dec
cmpl
cmp
icebp
sbb
loopne
add
dec
dec
sub
fidivrl
sbb
test
push
and
sbb
sbb
bound
sbb
jb
dec
pop
js
dec
outsl
pop
pop
mov
mov
xchg
pop
fsubr
and
aad
mov
push
rcrb
popa
cs
test
mov
hlt
pushf
push
pushf
fcoms
adc
fsubp
scas
roll
and
xor
or
dec
mov
pop
roll
mov
sti
fistl
jnp
cmp
data16
jl
and
inc
fiadds
fcompl
in
and
xchg
scas
neg
push
je
loop
adc
xchg
cmp
jae
mov
frstor
in
push
jmp
stos
imul
xchg
addr16
rolb
js
loop
mov
fistpll
lea
mov
enter
cltd
mov
loope
add
jno
add
loop
popl
push
fwait
mov
sbb
jns
and
clc
loopne
outsb
aam
divl
out
pop
stos
pop
lret
pop
cli
ret
mov
sbb
ret
addr16
loopne
fwait
inc
pop
lock
das
mov
mov
mov
cli
jne
scas
fimull
lret
push
insl
lahf
pop
add
mov
les
and
fcomp
mov
imul
add
loop
xorb
add
repz
fucom
out
push
mov
mov
movsb
pop
mov
push
mov
push
addw
addr16
dec
pop
mov
pop
mov
jecxz
outsb
jbe
mov
dec
and
pop
xor
lcall
or
mov
lods
sub
in
push
shl
pop
movsl
popf
aas
hlt
decb
adc
sbb
lcall
imul
cli
xchg
scas
rcl
jecxz
lret
mov
outsb
pop
subb
jecxz
jmp
mov
pop
mov
sub
mov
fcmovu
mov
mov
mov
mov
aaa
jg
push
jl
sub
lods
mov
cmovne
sbb
cli
pop
sahf
jb
imul
push
je
sbb
orl
mov
icebp
jle
gs
and
leave
jno
aaa
roll
pop
je
adc
add
jnp
dec
pop
fsubl
inc
stc
stc
pop
xor
loope
or
loop
jo
xchg
inc
pop
mov
pop
dec
mov
mov
mov
sar
enter
and
lock
cs
aam
mov
pop
xchg
gs
push
das
mov
outsl
push
cmpsb
mov
push
cmp
sub
sub
out
repz
adc
inc
or
mov
push
xchg
dec
mov
in
cltd
arpl
notb
inc
es
pop
inc
mov
sbb
add
lods
sti
data16
xchg
dec
lret
fiaddl
mov
sbb
mov
sahf
mov
js
cmp
ds
stos
xchg
push
mov
pop
add
mov
stos
inc
jg
jmp
mov
sti
inc
cmp
lock
stos
in
jp
fdivrl
loope
fstl
dec
js
mov
lret
jne
cs
dec
cmpsb
fstpt
inc
jg
repz
and
inc
inc
add
mov
jge
lret
hlt
hlt
mov
fistl
sub
fildl
filds
outsl
sbb
dec
shrl
std
inc
mov
aaa
fcmovu
push
inc
mov
and
mov
mov
dec
fdivrl
and
dec
lcall
jmp
rorl
inc
mov
mov
add
dec
sbb
leave
fsubl
adc
xor
js
adc
xchg
sbb
lret
mov
imul
in
outsl
lock
push
aad
inc
ss
jl
clc
or
mov
test
mov
mov
mov
insb
mov
sbb
andl
jg
dec
push
sub
sub
mov
sti
jns
sbb
sub
stos
dec
popf
add
jb
xchg
xor
out
test
and
test
mov
cmpb
jmp
ret
xchg
xor
xchg
mov
jne
lcall
mov
test
loop
std
sbb
push
xor
or
push
sbb
push
add
pop
mov
in
fcomps
jnp
pop
jne
lds
xorb
stos
dec
sub
push
push
rcll
ljmp
cwtl
and
cs
xor
add
pop
les
outsl
mov
jno
jle
xorl
jno
fwait
clc
ljmp
sub
rcrb
js
ss
loop
mull
aaa
and
sub
das
adc
mov
in
and
and
jbe
mov
and
out
outsl
popf
aad
inc
jne
cltd
mov
add
fidivs
pop
dec
xlat
rorl
and
test
aas
hlt
ja
jae
sbb
add
outsl
sbb
aad
sbb
or
repz
adcl
inc
push
mov
push
outsl
pop
and
mov
push
pop
in
jns
sahf
sbb
mov
pop
in
ret
mov
mov
fldl
out
dec
xor
in
sub
push
xchg
add
test
roll
pushf
dec
jp
add
ret
jno
daa
sti
jl
mov
inc
clc
pop
mov
out
sbb
push
incl
sbb
fldcw
adc
sbb
or
or
dec
and
bound
inc
jecxz
sub
mov
aad
jg
pop
dec
sahf
fidivrs
test
in
fs
jbe
pop
sarb
push
icebp
jmp
lods
xchg
test
stc
lret
daa
in
mov
mov
cmp
dec
lock
mov
mov
out
movsb
fdiv
ret
int
pop
repz
xchg
adc
sbb
mov
in
mov
arpl
rclb
inc
xchg
push
mov
test
xor
js
sti
loop
or
jge
xor
jbe
aaa
stos
pop
outsl
in
lahf
sub
aas
adc
clc
lock
adc
push
mov
ds
js
insb
adc
jno
inc
jle
pop
push
and
mov
mov
gs
lret
fadds
adc
xlat
sbb
xchg
cmc
subb
out
stos
shrl
jl
fsubrp
shlb
aad
or
pushw
adc
add
cmpsb
pop
daa
bound
cmpsb
or
xor
xorl
leave
dec
fs
sub
sub
js
cmp
cmpsb
lahf
sbb
xchg
jno
pop
mov
xor
xchg
sahf
push
cld
mov
mov
sti
idivl
ss
ja
mov
loope
lahf
fcompl
aaa
jns
adc
lea
daa
ljmp
push
mov
mov
cld
inc
aas
pop
adcl
push
ljmp
dec
insb
pop
adc
fstp
adc
cld
jnp
flds
add
ja,pt
popa
loop
mov
or
scas
sub
hlt
ret
and
insb
adc
inc
mov
inc
scas
das
cld
pop
hlt
and
inc
sub
push
imul
loopne
cli
mov
ficompl
xchg
mov
sub
and
xorl
test
sub
mov
test
and
inc
stos
outsl
pop
adc
outsl
xor
jl
outsl
int
xor
mov
cld
dec
ja
jo
add
ret
paddd
mov
push
mov
hlt
gs
jbe
xor
mov
mov
pop
jp
jecxz
add
insb
jg
xor
xor
dec
adc
daa
lcall
xor
cmp
or
mov
stos
movsl
enter
data16
enter
xlat
cli
out
das
sbb
dec
pop
leave
cmp
das
mov
mov
xchg
iret
jge
mov
adc
sarb
nop
or
enter
pop
mov
dec
push
mov
lds
pop
mov
in
outsl
add
add
mov
loopne
add
repz
cwtl
lea
jnp
jo
nop
lock
mov
call
pop
dec
jne
adc
sub
stc
push
shlb
popa
cmp
mov
push
enter
dec
aaa
pop
clc
inc
dec
leave
jecxz
sub
jp
ja
dec
ret
adc
mov
pop
fsubrs
xor
scas
popa
mov
mov
pop
cli
mov
xchg
shll
call
out
pop
or
pop
les
add
mov
mov
imul
mov
push
fcomi
xchg
dec
popf
jecxz
xor
nop
movb
shrb
sbb
mov
jae
aas
test
push
insl
loope
mov
loopne
movsb
or
mov
push
dec
xchg
inc
pop
sbbb
sahf
in
mov
dec
and
mov
aas
push
pop
pop
les
add
clc
hlt
pop
jbe
xchg
rcrb
jmp
xchg
repnz
sbb
mov
cmpsl
leave
cmp
adcl
clc
fwait
add
pop
or
or
xor
unpcklps
clc
filds
dec
loopne
mov
ret
and
fiadds
push
sbb
in
cmp
fwait
cmp
xor
or
hlt
cmp
push
xchg
icebp
adc
sbb
pop
mov
push
jb
and
fidivl
push
pushf
mov
sbb
or
daa
and
adc
mov
add
or
bnd
and
je
pop
push
sub
cmp
and
xchg
insb
out
cmp
fcomps
loop
mov
test
mov
jnp
add
in
lds
cwtl
ret
inc
or
mov
or
pop
out
outsb
shll
push
in
aam
pushl
mov
mov
in
and
jp
adc
test
cltd
ds
adc
or
scas
dec
aas
cmpsl
movsb
notb
push
fucomi
push
add
rorb
imulb
sbb
xor
adc
in
les
es
dec
and
mov
cmp
mov
push
sbb
dec
rclb
outsb
jg
sbb
add
adc
lods
adc
mov
repnz
movsb
push
imul
xor
mov
add
xchg
add
mov
dec
xor
jg
or
mov
popf
lcall
repz
cltd
cs
xor
cli
mov
repnz
outsl
mov
lea
adc
mov
aaa
sbb
dec
popa
or
lods
adc
pop
aad
mov
adc
out
cmp
jl
mov
lods
dec
loopne
dec
pushl
xchg
in
movsl
aaa
cli
mov
das
jp
mov
adc
ljmp
cli
adc
dec
idivl
jnp
or
stos
aad
popf
dec
push
jg
ret
add
lods
mov
mov
nop
lahf
xor
pop
xor
xlat
add
mov
out
and
insw
mov
aam
mov
call
and
shl
inc
test
push
and
testl
and
push
sub
xchg
sbb
mov
adc
shrl
lret
mov
hlt
cmp
out
adc
push
mov
push
pop
into
enter
or
mov
xor
xlat
add
repz
add
dec
and
dec
push
xchg
aaa
mov
insl
inc
mov
cmp
mov
loopne
sarl
out
jb
sub
fisttps
out
pusha
sti
in
ret
out
dec
and
inc
lcall
inc
pop
inc
das
sub
test
test
notl
andl
mov
cmc
lods
xchg
dec
dec
clc
xchg
sbb
inc
sbb
sub
pop
ljmp
sti
jp
stc
cs
jmp
popf
xlat
fdiv
nop
xor
push
pusha
xchg
pop
mov
xor
inc
or
fsub
in
adc
scas
jp
into
xchg
push
enter
je
add
mov
insl
loope
jecxz
xchg
mov
xchg
xchg
mov
push
mov
cmp
mov
lret
and
cmp
dec
add
xlat
les
push
sbb
fldt
jmp
jns
xchg
mov
mov
add
cmp
out
aaa
mov
shl
pop
mov
xchg
pop
mov
or
sbb
hlt
mov
or
xor
pop
subb
ljmp
inc
jo
mov
mov
arpl
pusha
es
fs
cmp
mov
fsubl
xchg
std
aaa
push
addb
mov
or
mov
loopne
lea
add
ss
jae
jmp
fiadds
loop
or
out
mov
sub
lahf
outsl
insb
fwait
ss
push
jmp
rolb
shlb
outsl
mov
or
inc
test
sbb
cltd
push
test
pop
mov
mov
cmp
sub
popa
cs
mov
call
lods
adcl
cmpsb
lea
add
hlt
dec
fstps
cmp
aam
scas
out
out
mov
mov
repnz
dec
aad
mov
xchg
cmp
push
jo
testb
aad
inc
dec
fcomps
add
xor
and
sub
xlat
mov
rcl
lahf
test
push
outsb
sub
sbb
adc
dec
dec
push
adc
push
xor
icebp
arpl
sbb
mov
add
aad
out
mov
lods
psllq
cmc
jg
sar
mov
add
or
stc
mov
idivl
loop
xlat
mov
jle
stc
push
in
insl
arpl
inc
or
insl
dec
movsl
shlb
aaa
insl
jg
jbe
cmpsb
mov
lret
cli
jp
adc
pop
clc
jne
clc
sbb
loope
xor
rorl
dec
mov
xor
jno
mov
out
mov
fimuls
aaa
jno
or
sub
jge
insl
sbb
cmpsb
into
imul
or
mov
jecxz
loop
jge
orl
xchg
out
pop
clc
fldt
jbe
push
and
add
popa
addl
mov
mov
xorb
mull
sti
mov
aaa
mov
push
into
push
mov
mov
lret
sub
pop
inc
and
sub
and
add
and
pop
pop
add
add
add
fs
cmovo
addr16
and
or
push
xlat
sbb
test
into
fs
fistl
add
pop
mov
mov
sub
jle
xor
xor
ljmp
sahf
test
test
dec
inc
fistpll
lea
js
loopne
mov
inc
insl
loop
mov
and
mov
shrl
daa
dec
repnz
adc
outsb
add
bound
inc
push
pop
or
add
lar
rcrb
movsb
hlt
or
imul
adc
sbb
add
mov
shrb
jnp
lcall
add
pop
add
push
mov
xor
push
mov
ds
xor
push
leave
inc
mov
xor
add
sbb
xor
mov
jno
lock
scas
test
mov
jp
fcmovnbe
sub
in
push
loop
adc
pop
fcoms
jecxz
mov
add
mov
test
shlb
aad
lahf
push
mov
icebp
mov
andl
in
xor
cmp
lods
clc
pop
sub
mov
xchg
mov
or
push
push
adc
jb
and
pop
push
sub
pusha
dec
lea
dec
or
aam
enter
mov
mov
test
pop
xor
rolb
daa
push
mov
icebp
leave
cmp
xchg
sbb
mov
arpl
shrl
rol
lods
push
pop
push
fisubrs
out
cli
rolb
hlt
add
inc
jo
in
cmc
int
and
inc
mov
sub
ret
inc
scas
rol
fs
mov
out
lret
ret
ffree
pop
adc
jg
xchg
arpl
push
mov
call
movsl
scas
pop
pop
jae
leave
cmc
mov
std
mov
icebp
jp
and
imul
das
cmp
enter
ret
mov
gs
int
and
push
pop
rcrb
fistpll
adc
jno
cmp
das
jle
add
sbb
iret
int3
add
sbb
sub
and
dec
or
sub
and
add
mov
rorb
xchg
sbb
jb
sub
out
notb
dec
jo
jmp
lock
adc
and
jg
lods
mov
aad
mov
int3
adc
lods
aaa
mov
fistl
mov
xor
cs
push
sarb
dec
sbb
xchg
aaa
cli
ficompl
or
or
dec
fs
push
cmp
pop
aam
fdivrp
loopne
lret
xchg
push
dec
outsb
and
pop
movl
add
jp
stos
icebp
out
test
fiadds
fcmove
sub
push
mov
lea
dec
pushf
sub
pop
jmp
cmp
fsubrs
and
js
enter
push
lea
and
out
cmp
or
leave
inc
mov
das
int3
jnp
outsl
mov
push
dec
outsl
cli
icebp
inc
js
scas
in
push
cmp
mov
mov
or
or
add
mov
fildl
sbb
or
sbb
xor
sbb
inc
inc
cmpb
pop
fcoml
outsl
push
or
insb
fs
popa
mov
xor
sbb
int3
test
mov
mov
inc
jnp
cmpsl
mov
ja
jmp
cmp
cmpsl
lods
add
mov
call
fcmovnb
inc
outsb
fs
cmp
popa
ja
ds
cmp
push
shll
aad
jne
adc
daa
nop
pop
les
popf
mov
sub
add
xlat
jg
dec
cmp
mov
sahf
cmp
inc
adc
mov
loopne
and
aaa
adc
ret
repz
lahf
jns
mov
mov
dec
das
popf
add
and
jg
cmp
sarb
inc
cmpsl
mov
mov
sub
daa
jb
push
inc
push
dec
mov
dec
loope
popa
mov
stc
sbb
mov
jns
or
add
push
fabs
int
sbb
lret
add
jg
or
and
sub
cs
dec
or
mov
mov
inc
mov
mov
adc
cmpsl
int3
aam
test
movsl
xchg
ficoml
cld
xchg
aam
clc
mov
fsubrp
inc
dec
adc
pushf
lock
jbe
add
adc
sub
xchg
aad
std
push
mov
mov
out
mov
jg
sbb
mov
add
mov
jl
add
les
sub
or
mov
scas
sub
out
xor
fistpl
fwait
scas
stos
sbb
push
mov
sub
in
pop
pop
popf
scas
outsb
lea
rolb
outsb
movsb
pop
mov
add
insb
mov
pop
mov
pop
mov
push
mov
or
test
add
inc
xchg
pop
repz
mov
mov
cmpsl
lret
adc
dec
jns
or
sub
ficompl
and
xlat
xchg
shll
sub
pop
mov
aad
je
mov
cmpsl
sbb
lock
pop
cmp
shll
dec
mov
ss
stos
rcr
push
pop
repnz
mov
cmp
push
movsl
fdivs
stos
nop
lods
out
cwtl
jg
jp
mov
rcrl
push
dec
fsub
jmp
or
push
cmpsl
pop
popa
push
or
mov
dec
dec
vaddsd
les
mov
mov
cmc
sbb
mov
out
xchg
xorb
jg
ret
in
and
push
cmpsb
in
test
adc
scas
dec
push
adc
shlb
cmpsb
scas
sub
nop
mov
test
inc
cltd
lods
aas
and
sbb
repz
pusha
sti
jno
sbb
fiadds
jbe
ljmp
loop
mov
inc
jnp
jo
push
pop
jle
push
cli
mov
jns
xchg
sub
je
push
arpl
fidivrs
inc
pop
xor
jmp
out
push
and
dec
jg
adc
push
xor
sub
add
pushl
lret
ja
movsl
xor
and
pusha
incl
adc
shl
lea
jl
push
ficompl
push
js
aaa
pop
mov
mov
shrl
cmp
sbb
sti
pop
fs
jmp
mov
outsb
mov
mov
dec
shlb
clc
insl
xlat
xorb
mov
mov
call
and
push
inc
sbb
mov
mov
xor
add
push
insl
jmp
push
jge
fstpl
adc
pop
fdivrl
aam
cs
rcll
inc
mov
mov
mov
mov
lahf
add
inc
pop
xchg
popa
jns
insl
add
div
mov
insl
hlt
and
outsb
xchg
aam
popa
mov
sub
inc
ja
xchg
arpl
pop
shll
jg
mov
mov
int
mov
inc
lock
add
loope
push
stos
jecxz
push
les
push
das
sbb
in
pop
test
cmpsl
lret
adc
xlat
rcl
divb
hlt
cmp
bound
add
sbb
fisttps
imul
cmpsl
dec
outsb
stos
dec
push
sbb
mov
mov
adc
cmc
pop
arpl
jmp
cmpsb
fildll
hlt
mov
cmpsb
movsl
nop
mov
mov
xchg
daa
dec
add
lret
ret
add
aaa
shlb
inc
mov
inc
add
aaa
lret
loop
mov
test
push
fidivrs
and
andl
mov
sub
pop
jg
mov
sti
mov
xchg
xor
js
pop
pop
and
outsl
jnp
lods
insl
inc
sbb
push
mov
dec
shll
rorb
ret
mov
call
cltd
fimull
ret
cmp
cmc
add
and
jge
mov
scas
cwtl
ss
out
movsl
repnz
in
decl
mov
repnz
pusha
popa
mov
push
cmp
xor
dec
push
jge
clts
jae
dec
sbb
divb
sub
mov
scas
pop
or
clc
addr16
sub
outsl
sub
mov
cltd
mov
jle
mov
push
xchg
xchg
push
add
push
mov
jns
jecxz
mov
pop
add
sar
adc
mov
pop
cs
inc
push
gs
mov
adc
sub
outsb
lods
push
fistpll
fldl
in
mov
jb
test
fwait
aas
xchg
mov
nop
popa
mov
stos
fimuls
dec
mov
fdivl
mov
or
add
js
es
jl
cli
cmp
jae
or
es
push
adc
or
pop
mov
loop
cmc
mov
lds
xor
data16
mov
mov
push
lds
pop
pop
or
enter
filds
lcall
repnz
imul
movsl
clc
fldt
jbe
in
sbb
fsts
test
cli
subl
dec
push
cwtl
xor
pop
mov
lea
enter
ret
mov
fcoml
pop
fcmovbe
mov
sbb
xchg
test
pop
xor
decb
cmp
and
fcomps
cmc
push
xchg
leave
sub
pop
das
cmp
dec
dec
pop
jae
and
js
dec
loop
call
sbb
push
dec
mov
mov
cmpsl
insb
xchg
out
shll
jmp
mov
xor
or
dec
mov
test
jnp
and
pop
xlat
test
das
shll
mov
dec
mov
mov
mov
popf
jle
xchg
das
mov
mov
xchg
add
fs
sub
mov
add
sub
sti
lahf
stos
std
push
je
pop
dec
fwait
lea
or
outsl
adc
decl
jne
or
mov
jbe
pop
dec
icebp
je
std
test
lock
out
sarb
pusha
lret
push
add
fstpt
lock
call
pop
add
mov
divb
dec
out
cmp
les
js
stos
pop
ljmp
cli
jle
push
mov
jbe
in
dec
aaa
sbb
sub
repnz
jg
push
cltd
xor
cmc
adc
outsl
sbb
add
pop
pop
or
sub
rorl
adc
adc
mov
insb
imulb
fsubs
cmpsb
xchg
dec
int3
push
scas
aas
mov
sbb
xchg
mov
sub
xchg
add
cs
rcl
lods
hlt
mov
loope
fdivs
mov
xor
loopne
add
or
pop
sbbb
jne
enter
sub
jo,pt
rorl
data16
mov
adc
sahf
push
mov
sbb
push
xor
test
test
movsl
mov
mov
adc
lahf
pop
or
fidivs
mov
xor
add
mov
cmp
push
fistps
adc
inc
pushf
xchg
xor
aam
dec
pop
add
ror
cld
pop
scas
and
push
fimuls
ficompl
test
mov
sub
jmp
test
sbb
jmp
xlat
hlt
dec
outsl
std
fisubrs
or
dec
jge
jbe
xlat
add
jb
sarl
sti
dec
push
popa
filds
adc
insb
pop
rolb
and
push
loop
push
leave
sbb
cmpsb
aaa
lock
andb
fwait
std
pop
cmp
into
neg
adc
add
fimuls
inc
mov
aam
jmp
add
mov
jecxz
and
cmp
lahf
jns
aam
pop
lahf
orb
sub
daa
add
push
jb
jp
hlt
push
testl
aam
mov
cld
shrl
sarb
lea
cmpsl
je
ss
mov
stos
inc
popa
or
test
leave
or
push
push
mov
or
cli
out
cmpsb
sbb
adc
das
fwait
sub
stos
inc
mov
mov
icebp
fs
or
in
mov
or
mov
and
sub
fwait
jb
rcrl
xor
adcl
fdivrs
or
mov
xor
das
mov
loopne
mov
mov
jg
mov
rol
push
inc
adc
fcompl
and
icebp
outsb
in
jb
pushl
outsl
lret
jbe
pop
int3
xchg
sbb
pusha
xlat
sub
pop
add
pop
jmp
clc
scas
bound
shlb
sbb
inc
or
cmp
fmul
ja
test
adc
adc
or
in
inc
mov
adc
adc
inc
shll
and
insl
mov
add
das
loopne
and
mov
adc
subl
mov
dec
out
cmp
xchg
sbb
jo
shr
out
in
pop
lds
imull
dec
sub
pop
dec
xchg
xor
lret
mov
loopne
je
jecxz
sub
fs
popa
jmp
dec
in
aaa
fcmovnbe
jp
out
push
jg
mov
xchg
testb
dec
pop
jmp
xchg
mov
xor
iret
jmp
push
movsl
mov
adc
sahf
stos
loope
or
ret
in
pop
xorb
push
xchg
test
push
sub
shll
lcall
mov
imul
mov
std
add
sbb
mov
jg
popf
dec
mov
add
outsl
adc
add
cld
call
shll
xchg
in
outsl
out
sub
dec
mov
add
push
ret
ret
xchg
pop
imul
je
nop
push
jg
insb
aas
out
mov
jp
imul
fiadds
cmp
mov
subb
push
dec
mov
jo
decl
shl
testl
ret
rorl
inc
out
sbb
xchg
jle
ret
fstpl
push
testl
pusha
int
in
and
or
inc
leave
jmp
jae
shl
inc
mov
cmp
push
sti
xchg
jnp
aas
jle
fadd
sub
add
movsl
pushf
push
cmp
cld
add
mov
lret
int3
lret
repnz
dec
outsb
or
shrb
xchg
cmp
mov
cmp
sbb
arpl
mov
insl
push
push
dec
and
insb
xchg
pop
jno
add
addr16
cmp
cmp
popa
dec
ret
stos
outsl
insl
outsl
sbb
and
or
inc
mov
addr16
dec
cmp
pop
push
jle
enter
push
pop
xor
in
pop
dec
mov
leave
pop
push
push
cmp
aaa
xor
jge
sbb
dec
add
adc
mov
inc
ja
jl
pushf
xor
dec
mov
nop
jb
inc
mov
mov
jecxz
mov
mov
test
insb
ja
adc
cwtl
push
shll
je
sti
fistpl
insb
xor
outsb
arpl
mov
lods
adcb
or
cltd
daa
mov
push
in
data16
pushf
mov
mov
jge
cltd
mov
fwait
ja
aaa
fisubrl
mov
jmp
mov
jp
mov
mov
call
popf
pop
into
outsb
pop
lods
orb
adc
leave
sbb
fistpl
lods
cmp
mov
arpl
lcall
shl
rorb
pop
fcmovnu
lods
pop
push
sbb
lahf
out
push
decb
insb
jne
mov
xchg
or
adc
add
sar
jmp
mov
sbbb
pop
inc
fucomi
xlat
out
inc
sub
and
rorl
jl
push
push
jmp
mov
outsl
std
or
lods
add
fnsave
icebp
fsub
mov
aam
mov
mov
ja
divl
or
xchg
and
mov
inc
pop
mov
aas
out
nop
inc
nop
pop
scas
ss
rclb
adc
sub
add
and
fbstp
and
xor
stc
mov
fistl
add
dec
in
mov
std
das
add
addr16
pop
xchg
xchg
in
mov
clc
lret
xchg
push
into
mov
insl
enter
mov
sbb
popf
push
lea
leave
mov
adc
pop
xor
or
push
aad
fwait
sbb
xlat
aaa
mov
testb
cs
dec
aaa
mov
mov
jp
jp
mov
dec
aaa
pop
xor
bound
cmp
jg
loop
jns
pop
les
add
dec
cltd
fcmovnu
push
jle
roll
hlt
sub
js
fdivp
push
sbb
dec
popa
cwtl
jge
cld
lods
rclb
and
sbb
cmp
xor
push
xor
leave
inc
cmpsb
jp
mov
push
sbb
movsb
in
in
pop
or
ret
dec
push
mov
fs
xchg
fs
push
fcomi
fisttpll
lret
outsb
xlat
pop
sbb
jg
mov
and
pusha
rcr
push
add
stos
mov
pop
inc
add
mov
adc
jecxz
mov
cld
vpcomuw
loop
lock
mov
mov
or
mov
sti
in
mov
xchg
sub
xabort
inc
icebp
sti
xor
sarb
inc
jl
std
insb
fistl
gs
adc
mov
mov
lods
push
outsl
xor
stc
outsl
fcoml
mov
test
insl
ljmp
ja
push
aas
orb
call
mov
into
mov
push
sub
outsb
jmp
imul
movsl
xchg
cwtl
jecxz
push
dec
mov
sbb
inc
mov
jnp
fdivp
pop
pop
pushf
pop
and
pop
loopne
subb
es
pop
sbb
lea
fidivrs
mov
aam
lret
cmpsl
mov
subb
fs
pusha
outsb
je
or
xchg
cmp
adc
cmp
test
sahf
push
push
pusha
jnp
ffreep
aas
jecxz
mulb
add
push
orl
sub
sub
add
mov
js
adc
jbe
push
ja
mov
and
xchg
cli
push
mov
call
mov
mov
mov
hlt
loope
inc
dec
fisttpl
lret
stc
cmpl
push
scas
jmp
jl
jno
jne
loop
adc
add
xchg
and
fs
das
add
adc
or
sub
push
mov
jle
ss
loopne
or
mov
jb
or
mov
xchg
cmpsl
neg
rol
mov
shr
xchg
sub
outsb
inc
orb
push
pop
addr16
xlat
les
fisubrs
or
fs
sub
pop
push
and
int
sbb
mov
adc
adc
dec
dec
add
je
or
xor
mov
adc
jo
sbb
cmc
repnz
bound
add
call
cmc
and
jae
dec
ffreep
fildll
icebp
lds
cli
adc
std
ljmp
movsl
enter
pusha
cmp
dec
outsb
enter
lock
out
movsb
mov
or
mov
jge
sbb
ret
mov
bound
xor
and
cmc
imul
pushf
jmp
xchg
push
push
incb
stos
cmpsb
sahf
cmp
fsubrp
or
jle
inc
leave
or
mov
insl
fidivl
negl
int3
stos
mov
xchg
push
in
lods
mov
jp
insl
ret
xor
mov
add
cli
add
in
sub
stos
mov
shr
jle
arpl
inc
movsl
mov
or
cmp
aad
mov
mov
push
pop
sar
fisttps
dec
les
adc
inc
fists
inc
sub
ret
aaa
scas
in
aaa
cmpsl
pushl
and
scas
aam
mov
js
jecxz
movsl
cmpsl
push
bound
lods
jae
or
lea
add
jne
mov
sub
jno
arpl
loope
cli
outsl
imul
jno
add
test
fcompl
mov
add
in
and
sub
not
jl
jae
insb
mov
test
jne
mov
cmp
ret
jl
pusha
xor
mov
mov
movl
lret
loop
fisttps
sbb
dec
xchg
mov
lock
adc
ret
mov
cmpsl
das
shr
sbb
stos
hlt
xchg
mov
outsb
pop
lock
sbbl
test
jge
out
bound
ss
in
imul
mov
pop
rolb
pop
mov
insb
outsl
std
mov
cld
repz
leave
xor
inc
testl
sbb
or
jae
mov
push
sahf
push
incl
fimull
add
mov
mov
push
mov
repnz
loope
in
mov
gs
orb
jg
push
mov
sub
jo
frstor
ret
cltd
mov
pop
into
pop
lods
sti
in
dec
push
push
pushf
push
pop
pop
scas
pushf
psrlq
ljmp
mov
orl
dec
ss
or
addr16
ljmp
mov
gs
aas
sti
pop
outsl
fsubrs
loop
add
movsb
gs
ficompl
sbb
mov
loope
orb
add
inc
and
gs
xor
adcb
mov
iret
cmpsb
or
or
jo
xchg
inc
stos
xchg
std
out
faddl
jb
daa
push
mov
mov
jbe
mov
into
cltd
adc
mov
pushaw
in
jno
ret
and
mov
in
mov
add
push
push
in
icebp
incb
pop
jle
jmp
push
mov
in
adc
ds
mov
add
jl
mov
add
mov
aam
cld
aam
mov
int
das
lds
mov
test
sub
aaa
fistps
sbb
sbb
fisubrl
mov
push
js
inc
loopne
repz
jo
loope
push
jo
popa
mov
aad
das
mov
negl
sbb
ret
jmp
lods
inc
push
nop
scas
or
push
roll
lret
call
xchg
xchg
outsb
outsl
adc
xlat
or
adc
rcl
fiadds
int
enter
hlt
clc
stos
mov
sbb
or
enter
lods
dec
test
mov
sbbb
sub
test
into
lret
aas
aad
ljmp
jmp
push
inc
je
test
sbb
mov
push
push
scas
pop
and
push
leave
aam
mov
or
bound
pop
loopne
push
xor
hlt
test
xlat
lahf
subb
mov
lret
push
jle
or
mov
insb
pop
sarl
test
mov
inc
inc
and
repz
aam
pop
jo
rcrl
push
xor
push
adc
test
dec
cs
dec
fwait
mov
xchg
mov
scas
ss
in
fsubrs
outsb
aad
stos
jb,pn
popa
ret
push
xlat
push
pop
mov
mov
loope
das
pop
sbb
stc
int
fsubl
fcoml
pop
stos
mov
or
pop
lret
xchg
std
mov
mov
out
outsl
and
enter
jae
sbb
jmp
mov
dec
movsb
xlat
inc
push
push
cmc
in
les
shlb
dec
mov
or
cwtl
mov
add
mov
sub
imul
mov
ss
stos
mov
js
push
ss
and
push
xchg
cmp
lock
aad
inc
dec
clc
and
push
mov
mov
push
loop
sub
mov
inc
jl
daa
in
stos
or
js
mov
pop
in
jmp
mov
or
sti
and
and
xchg
push
lds
andb
test
and
mov
insb
inc
mov
xchg
mov
sbb
mov
sub
jp
adc
aaa
ficoml
xor
pop
fmuls
add
xchg
xor
mov
xorb
cmp
sbb
adc
and
fwait
loopne
adc
dec
popa
popa
adc
ljmp
pushf
pop
cld
ret
cmpsb
mov
test
mov
pop
xlat
lods
mov
movsl
das
mov
sbb
mov
jp
sbb
xor
subl
mov
sar
add
pop
sbb
xor
sub
rcrl
mov
call
popf
outsl
sub
pop
movsl
mov
inc
pop
push
mov
xor
mov
add
js
or
fcompp
push
or
call
pop
jle
xor
adcb
and
les
mov
outsl
ja
ds
sub
lods
or
syscall
adc
out
jecxz
scas
outsl
outsl
in
out
sbb
icebp
xor
jmp
push
xor
repnz
outsb
loope
imulb
int3
insl
pop
mov
rolb
jmp
lea
arpl
andl
cwtl
dec
jle
jl
lods
push
inc
jp
xorb
imul
inc
push
or
not
fldt
mov
mov
mov
sub
mov
dec
orb
sbb
nop
sbb
sete
or
mov
fistpll
js
lret
pop
and
inc
cltd
pop
and
add
shlb
incl
fwait
and
mov
in
aaa
js
add
jmp
inc
outsl
or
int
rcll
mov
aaa
ljmp
test
ss
fisttpl
inc
inc
gs
mov
mov
sbb
imul
lea
mov
rcr
pop
jns
jge
jl,pn
outsb
or
mov
mov
mov
sub
cmp
xchg
or
sbb
cmp
loopne
shlb
fstpt
clc
loopne
in
fldl
mov
pop
mov
xchg
cs
xchg
or
add
dec
jmp
js
mov
subl
das
push
jge
push
dec
out
ret
rorl
cli
jge
sbb
adc
stc
inc
aaa
mov
push
adc
mov
cmpsl
sub
push
push
jle
fcomp
pop
loopne
sbb
push
mov
mov
das
sub
push
rcrb
inc
xchg
add
rol
mov
and
shll
push
loopne
mov
leave
push
cwtl
mov
hlt
lods
add
outsb
add
cmp
mov
std
test
push
mov
sub
add
hlt
aaa
mov
push
mov
mov
arpl
insl
sub
adc
and
xor
dec
movsl
loopne
popa
outsl
adc
adc
pop
mov
mov
push
nop
jbe
sti
mov
bound
jecxz
repnz
xor
jmp
cs
ljmp
mov
jb
pop
icebp
and
data16
lds
xchg
xchg
fwait
dec
mov
pop
clc
pop
pusha
aaa
lcall
or
bound
mov
push
pop
leave
rorb
add
dec
cmp
es
std
fistpll
mov
nop
imul
and
adc
lds
js
xor
sti
mov
loopne
divb
test
int3
jbe
clc
aas
push
dec
adc
shrb
shlb
lret
push
or
push
push
jbe
jne
aaa
mov
outsl
and
inc
std
fcmovnu
shll
sbb
add
add
cmc
pop
jp
adc
out
mov
dec
rcrl
adc
or
jp
ds
jns
or
push
jno
pop
xorb
pushf
mov
jle
dec
dec
adc
enter
fistps
js
fcompl
xchg
sbb
mov
mov
insb
inc
inc
mov
das
jg
movsb
push
lea
out
adc
and
dec
cltd
push
ret
add
or
jp
push
fwait
popa
inc
shr
jno
xor
cs
pop
ffreep
cmp
mov
cli
cmp
pop
mov
stos
jbe
push
push
movsb
push
jmp
fstl
sub
shrl
inc
or
mov
outsl
xlat
pop
pop
pop
add
inc
ret
rorl
push
outsl
xchg
add
cs
aad
mov
cmc
cmp
imul
dec
enter
mov
outsb
mov
and
shlb
pop
adc
into
mov
outsl
mov
insl
push
fcomps
insl
loope
push
xchg
jl
std
pop
int3
jnp
sbb
scas
repz
in
add
add
sbb
aas
lods
mov
lahf
xchg
icebp
test
lock
mov
insb
das
lock
cmp
repz
add
insl
sbb
cmc
inc
inc
pop
push
push
xchg
mov
imul
aam
test
sahf
or
or
pop
dec
movsw
mov
mov
fdivs
les
adc
adc
jb
jl
movsl
aas
pusha
jmp
jns
mov
dec
fnstcw
ljmp
cmp
aaa
sub
mov
mov
mov
push
cwtl
cmpsb
repnz
inc
add
mov
xor
insl
mov
xsha1
cmpsb
lret
test
push
lret
imul
push
add
outsl
cmpsb
add
mov
push
in
jg
fisttpl
inc
rcr
sbb
mov
xchg
cltd
sub
mov
or
sbb
mov
mov
sbb
xor
addl
test
mov
sbb
pop
cmp
sub
and
rcr
dec
outsl
int3
scas
repnz
cld
adc
fdivrl
in
outsl
aas
hlt
xorb
inc
pop
sbb
mov
cwtl
aaa
push
js
icebp
jmp
or
decb
adc
aam
scas
or
mov
push
mov
cmp
push
jp
push
jg
mov
adc
inc
jnp
pop
subl
add
xchg
pop
loope
add
daa
mov
jg
inc
call
bound
jmp
dec
mov
mov
jns
or
stc
in
aad
lcall
add
pop
adc
nop
cld
inc
shrb
mov
sbb
pusha
push
or
and
mov
shrl
mov
or
xchg
or
jo
push
test
icebp
push
hlt
divb
jnp
js
xchg
cmp
jle
adc
stos
sub
add
and
aam
sbb
cmpsb
mov
xor
pushl
adc
fiaddl
mov
push
xor
popf
jmp
xchg
fiaddl
and
imul
sub
jo
rcrl
mov
daa
jmp
pop
insl
push
out
lds
mov
ret
rolb
jns
cs
cli
pop
gs
lret
int3
rorb
pusha
xlat
adc
and
es
and
jge
test
roll
cs
inc
pop
mov
xlat
and
gs
outsl
xor
pusha
outsl
jne
xchg
fs
sub
pop
mov
cli
jp
daa
ja
stos
icebp
test
mov
sbb
repnz
mov
fimull
dec
dec
cmp
jl
ss
mov
xor
xor
push
xor
outsb
mov
pop
add
sub
gs
lret
fst
sbb
into
lret
stos
xchg
pop
sti
sbb
push
emms
inc
push
xchg
mov
int
cmc
bound
outsb
push
push
aad
jbe
inc
aad
or
loopne
insl
and
xlat
mov
or
adc
cmp
popa
mov
dec
mov
push
fcoml
adc
mov
mov
shll
test
xchg
and
addr16
jg
test
push
mov
jmp
repz
outsb
jno
fisubl
stos
js
mov
shl
inc
cld
aam
nop
mov
jne
mov
lret
inc
lock
rol
ret
out
rcr
xor
popa
je
lcall
ja
inc
sub
dec
inc
sub
adc
imul
cmpsb
insb
xchg
jmp
fadd
pusha
insl
stc
sbb
sub
jns
add
je
jno
adc
adc
rclb
push
mov
jae
dec
inc
clc
inc
pop
push
push
jmp
adc
xor
lea
cmp
addr16
or
fcmovb
lods
cmc
adc
cmp
sbb
cmp
cmp
rcrb
icebp
outsl
fucom
inc
mov
jne
push
divl
cmp
jae
call
mov
adc
neg
jp
stos
dec
push
inc
movsl
jno
mov
incb
adc
adc
movsb
sub
or
mov
in
add
pop
and
xchg
pushf
mov
sbb
mov
addb
fsubrl
int
or
sti
loope
sub
sahf
sti
iret
lods
xchg
fs
or
pop
or
rep
std
shlb
mov
or
cmp
lds
fists
xor
outsl
mov
das
movsb
mov
add
cli
adc
mov
and
sarb
lea
loopne
mov
mov
push
shll
sti
sub
mov
pusha
ret
ja
sarb
add
and
dec
data16
push
test
stc
ss
pop
pop
xor
fucomi
loopne
lea
test
mov
jbe
mov
add
sub
mov
xor
mov
into
stos
mov
cmp
ljmp
push
fmull
outsl
mov
call
fstpl
testl
inc
mov
mov
add
jle
xor
dec
mov
lods
xchg
dec
aas
movsl
test
add
es
rclb
sahf
add
adc
inc
sbbb
mov
ficompl
adc
and
fwait
fidivrl
push
xor
outsl
adc
push
cli
mov
mov
inc
mov
jg
bound
or
inc
mov
mov
cld
mov
adc
es
mov
out
daa
add
fidivrl
popf
push
or
icebp
ret
cli
lret
jae
jl
jg
fcoms
pop
or
sub
inc
shll
mov
sarl
jp
cmp
pop
movsb
pusha
dec
sbb
jg
idivl
nop
adc
pop
xchg
lock
mov
sbb
lock
mov
or
mov
push
or
jo
es
into
fs
mov
popw
cltd
out
pop
jns
mov
loop
cmp
or
imul
or
jo
insb
xchg
xor
fnstcw
fdivl
xor
xchg
jnp
cmp
mov
in
mov
loopne
sbb
jmp
ss
stos
adcl
pop
add
fwait
mov
addr16
lock
dec
lock
cmp
mov
inc
dec
aas
mov
or
dec
aad
pop
test
jl
push
adc
int
rcr
pop
xor
repz
sbb
sub
loop
loopne
xor
dec
mov
nop
xchg
xchg
inc
stos
inc
xchg
sub
jae
js
ret
push
dec
cmp
jg
es
icebp
jne
push
andb
leave
cmp
adc
add
fsubs
mov
jns
das
ss
in
dec
sbb
loop
in
xchg
faddp
or
popa
insl
sub
test
aas
in
arpl
or
sbb
fidivrs
popa
cmp
push
and
out
cmpsb
sbbl
push
out
push
mov
mov
add
cs
neg
dec
fbstp
cwtl
and
popa
cmp
sar
mov
insl
out
pop
xor
mov
dec
mov
daa
ret
ljmp
mov
shlb
sbb
sub
cwtl
and
dec
into
fistpll
andl
inc
inc
repz
push
ret
xchg
mov
sbb
fwait
cmc
aaa
mov
or
mov
push
add
addl
gs
push
inc
test
mov
jg
push
push
call
mulps
sbb
repnz
das
jge
outsb
adc
jne
lods
xchg
xchg
mov
rorb
scas
cmp
shll
paddw
sbb
insb
jl
test
mov
hlt
arpl
lods
sbb
cmp
rorl
pop
rol
add
lock
pop
pop
mov
outsb
jmp
icebp
std
and
daa
push
add
andl
or
inc
xchg
sarl
sbb
xor
sbb
or
cmp
xlat
shl
pop
sbbb
fsts
dec
inc
les
les
cmpsb
enter
mov
jb
loope
push
adc
mov
daa
cwtl
cwtl
adc
out
dec
and
jg
scas
mov
cmpsl
icebp
es
nop
push
outsl
add
jb
and
dec
or
sbb
push
or
js
jge
mov
pushf
popa
mov
cmpsb
lcall
jg
outsb
aam
daa
push
popl
cmpl
pop
mov
stos
addl
sbb
lds
add
lahf
mov
ror
mov
mov
call
dec
ret
ds
mov
add
pop
mov
nop
iret
sub
mov
mov
sub
mov
mov
xchg
dec
aas
ret
cltd
push
in
push
mov
fstpl
xor
aam
fsubp
jae
ficomps
jl
insl
fdivl
lcall
insb
push
and
jle
jge
aaa
jge
jnp
je
jle
stos
fstps
pop
jmp
add
mov
sbb
and
cmp
or
jne
nop
cs
dec
push
xor
test
orl
repnz
outsb
pop
mov
test
mov
jae
pusha
push
movb
rcl
cs
pop
sbb
cld
aaa
ss
inc
cmp
sub
insb
test
or
adc
dec
jecxz
add
adc
and
dec
add
insl
or
test
cs
sarl
ffreep
inc
decl
fmull
enter
sub
fnsave
dec
das
pop
cmp
sbb
shll
int3
fidivl
mov
pop
mov
push
dec
lods
jno
mov
and
and
test
loop
or
scas
or
jle
js
jno
mov
mov
xor
roll
jl
sbb
inc
pop
sarl
adc
and
fildl
cmc
push
popf
add
mov
xchg
inc
inc
push
pop
mov
mov
jecxz
push
jp
cwtl
cmp
or
sub
enter
je
fsubl
jbe
insl
adc
inc
or
shlb
sub
dec
dec
mov
outsl
sbb
dec
mov
bound
fs
rorb
lock
mov
or
mov
sub
jp
orl
out
mov
dec
jmp
testl
sub
insb
or
lcall
jb
inc
fbstp
push
out
rcrl
test
inc
or
or
sub
xchg
and
lods
jbe
ja
jnp
hlt
mov
xchg
inc
xchg
nop
insb
and
and
in
pop
sub
cli
filds
fildll
adc
xchg
es
outsb
push
in
mov
out
mov
das
adc
xor
sub
pop
and
subb
mov
fnsave
adc
sbbb
or
sub
test
les
inc
daa
in
mov
fimull
mov
in
xor
or
sub
mov
cld
aad
je
inc
pop
mov
rclb
jl
sbb
mov
dec
sub
mov
mov
mov
pop
sub
mov
push
loop
enter
dec
pop
inc
rcrl
jbe
mov
lea
jnp
lcall
lds
push
push
mov
or
pop
adc
sbb
cmp
xchg
jg
sbb
repnz
loopne
and
xor
push
and
iret
xchg
push
repnz
sub
mov
jp
ljmp
out
sbb
pop
lret
jno
pop
shll
and
imulb
cmpsl
add
icebp
jp
popa
adc
sbb
les
cli
xchg
and
sbb
into
cld
and
jo
dec
insb
adc
push
mov
lret
rcrl
test
push
xor
mov
lahf
sbb
lock
or
mov
adc
out
in
int3
jb
sbb
sbb
push
mov
call
rclb
mov
test
pop
insl
xor
fidivs
sub
insb
push
add
sbb
xchg
bound
xchg
jae
pop
jp
push
xchg
clc
jl
xchg
rep
push
fisttpl
int
adc
add
jne
mov
sbb
xchg
insb
bswap
lods
mov
bound
insb
lcall
lds
fidivs
pop
jl
cmc
inc
aad
imul
inc
test
ljmp
pop
pop
or
push
nop
sbb
cmpsl
jmp
ja
sub
push
pop
add
jno
push
outsb
je
inc
rcrb
push
mov
stos
arpl
test
mov
hlt
adc
push
xchg
xor
push
les
push
aam
dec
das
daa
fisttps
inc
pop
insl
dec
cmp
push
mov
or
xchg
iret
or
inc
fildl
push
dec
lcall
ljmp
jnp
mov
xchg
xchg
xlat
adc
rcl
incb
fstl
adcb
fsub
daa
mov
out
mov
fisttpl
pop
ss
sbb
cmp
lcall
xchg
test
mov
mov
mov
mov
push
in
xchg
dec
clc
ljmp
xor
fcmove
inc
xor
pushf
dec
mov
pop
aam
mov
and
ja
movsb
cmp
sbb
std
push
xor
and
xchg
or
push
mov
push
inc
sbb
fs
jl
imul
add
inc
das
stc
cli
pop
mov
xor
jno
hlt
sub
fdivp
push
xor
arpl
and
jl
add
loope
rclb
imul
pop
popf
sbb
das
sahf
les
fdivrs
out
sbb
rcl
mov
mov
cli
insl
loope
mov
lret
sub
mov
aaa
test
orb
mov
nop
sub
sarl
mov
fmull
lret
orb
push
mov
cs
cmp
xor
es
addb
outsb
xor
fcomi
out
inc
sub
dec
lds
jb
ja
fisttpl
adc
je
subb
fisttpll
outsl
cltd
shll
and
lret
daa
sub
inc
in
ja
out
rcr
and
push
pop
mov
lea
lea
mov
rcr
jle
rol
enter
sub
jmp
jp
js
fcmovnu
iret
or
sbb
ss
leave
pop
mov
test
sti
pop
lahf
push
and
and
loop
and
lea
loopne
pop
loop
pop
stos
add
in
cwtl
pop
push
jg
scas
test
stos
push
mov
addl
jl
mov
ljmp
cwtl
andb
jo
pop
push
into
scas
sbb
dec
inc
out
cmpsl
mov
data16
sbb
lret
push
adc
pop
dec
inc
enter
mov
das
mov
jae
add
adc
scas
push
orb
add
aam
js
inc
or
mov
or
xor
sbb
movsb
pop
fistps
mov
push
push
cmpsb
mov
pop
ret
cmp
shl
mov
pop
rorl
and
fs
rcr
pop
mov
daa
pop
aaa
jo
pop
sbbb
loope
addb
push
hlt
fninit
and
adc
adc
jo
mov
enter
mov
out
rcl
or
xchg
add
ja
cmpsl
mov
adcb
rcll
xchg
jle
movsb
add
xor
in
sub
xchg
fwait
stos
outsl
adc
imul
dec
jo
push
fistl
sbb
sub
add
push
mov
push
xchg
dec
mov
repnz
push
insl
fisubl
mov
mov
xor
les
movsb
inc
fldt
les
inc
lds
xor
adc
lret
insb
and
insl
xor
jg
mov
icebp
sbb
jecxz
cmp
xor
fisubrs
adc
xor
pusha
sbb
paddb
cmc
jp
jnp
or
mov
loopne
aaa
jp
push
loopne
push
push
mov
outsb
jo
shlb
jbe
stc
jno
adc
test
dec
mov
shrl
subl
adc
pop
jb
jl
out
sub
push
mov
xor
fdivr
incl
movsb
or
add
cld
xchg
js
or
imul
pop
mov
inc
push
push
adc
aaa
inc
mov
dec
test
fs
out
cmpsb
mov
and
adc
in
fsubs
mov
ret
or
aad
outsb
jl
mov
adc
cmpsl
mov
and
enter
adc
push
sbb
mov
push
daa
enter
jno
jns
js
les
pop
jae
mov
lock
mov
or
or
dec
fisttpll
scas
mov
pop
arpl
shrb
ret
dec
pop
andl
ret
lret
pop
mov
sti
fcomi
and
pop
mov
fistpll
inc
push
jle
lret
pop
add
adc
cli
ret
or
outsb
add
mov
das
out
pop
rorl
pop
loopne
jbe
lahf
incl
adc
or
or
mov
push
mov
push
pop
push
inc
aam
inc
scas
pop
inc
sub
push
pusha
sbb
push
cmp
test
jae
test
pop
pop
jmp
fistpl
sbb
pop
add
scas
sub
aas
inc
js
push
mov
jp
jno
and
mov
mov
add
pop
pop
shll
mov
or
xchg
xchg
out
xchg
movsl
repnz
mov
shlb
or
cld
sbb
pop
je
ljmp
outsl
mov
imul
lods
cmp
mov
push
jno
xorl
adc
xchg
inc
scas
add
pusha
popa
push
lds
sti
mov
xchg
mov
jne
inc
or
mov
loop
decl
addr16
or
inc
mov
mov
mov
xor
out
and
xchg
push
add
push
icebp
fbld
mov
pop
xchg
add
negb
mov
jb
mov
lahf
in
or
rorb
std
push
call
gs
lret
inc
mov
cwtl
or
mov
call
leave
push
call
xor
inc
jno
pop
jg
clc
aas
push
std
push
xor
jbe
loopne
test
orl
ret
dec
lods
fists
fstp
dec
jecxz
addb
or
mov
xchg
pop
pop
mov
mov
lcall
outsb
fadd
movsl
jo
test
lds
fiadds
push
negb
jo
aas
enter
xchg
xorl
mov
loopne
cmp
test
mov
je
cmpsb
icebp
out
out
cs
stc
nop
int3
mov
jbe
xchg
arpl
lock
xchg
add
aam
inc
jbe
pop
pop
out
jae
push
sub
lret
sbb
insb
push
loopne
jmp
rcll
mov
push
and
mov
adc
cmp
outsl
jecxz
xor
sub
sub
pop
aas
popa
pushf
mov
sbb
sub
daa
lods
aad
inc
in
adc
mov
xchg
cmp
or
loop
inc
add
adc
icebp
jnp
in
stos
add
movb
cld
dec
push
sub
push
add
nop
aaa
pushf
sub
pop
jo
movsl
xor
mov
jl
push
dec
jns
push
jecxz
subb
pusha
mov
pop
insb
insb
mov
push
scas
inc
andl
inc
mov
sbb
fldenv
je
rol
in
mov
jp
and
test
out
fnstcw
sub
cmp
js
sub
les
mov
jno
fistps
mov
adc
lock
push
outsb
xor
pop
loopne
dec
add
push
rclb
mov
push
cld
out
dec
lds
jmp
shrl
hlt
andb
cmp
test
jl
cwtl
sub
cmc
faddl
pop
les
adc
add
cli
jb
inc
lahf
add
shlb
mov
int3
mov
dec
push
enter
xor
push
inc
repz
fsubrs
ret
xchg
sbb
pop
push
xor
lods
mov
fwait
mov
mov
xchg
adcb
jns
adc
arpl
inc
cmc
push
mov
push
add
int
sub
cltd
pop
xchg
mov
adcb
scas
mov
push
or
test
mov
inc
cmc
and
fistpll
push
xlat
cmpb
pop
popa
add
push
mov
add
mov
rorl
loopne
dec
xchg
sbb
dec
xchg
and
inc
sbb
mov
mov
das
rorl
test
mov
mov
sbb
inc
push
add
adc
out
mov
aaa
or
dec
rorl
dec
jne
in
sahf
mov
xchg
add
sub
push
subb
push
push
stos
mov
pushf
pusha
inc
fistpll
inc
test
push
and
mov
or
pushl
and
out
and
or
or
mov
mov
test
push
adc
xchg
mov
sbb
or
jle
inc
add
loop
push
xchg
jbe
inc
sbb
ret
rcr
sbb
inc
nop
pop
mov
or
xor
test
lret
insl
lea
cmp
jge
lret
sub
pop
dec
daa
fstpt
jp
mov
push
xchg
add
jmp
in
mov
mov
and
out
cli
enter
mov
das
jg
shll
xchg
daa
or
in
aaa
loop
jmp
pop
mov
adc
stos
cltd
hlt
jge
jbe
lret
notl
fnstcw
sbb
mov
outsl
decl
roll
movsb
xor
inc
outsl
sbb
pop
in
and
mov
mov
stos
cs
adcl
add
or
sbb
repnz
or
lret
jne
loope
das
cmpsl
jecxz
or
clc
testb
and
and
inc
add
lea
sahf
add
hlt
inc
inc
cld
push
icebp
push
mov
mov
mov
imul
sub
sbb
adc
fsts
and
lret
or
daa
adc
jge
int
add
add
cmp
dec
nop
jl
aaa
mov
cmp
mov
xor
and
jmp
inc
sbb
and
sub
jne
sahf
movb
inc
fcmovnb
fildll
xor
insl
push
sub
jns
cmp
mov
xchg
mov
jg
subb
adc
push
jp
imul
pop
mov
mov
sti
and
data16
and
adc
dec
and
imul
push
xchg
test
pop
inc
or
cld
mov
fnsave
aam
ror
imul
sub
dec
inc
es
dec
shl
sbb
push
mov
ret
mov
sbb
mov
fdivrs
ds
les
lcall
dec
push
fwait
lret
cs
aaa
dec
pushf
xchg
je
cs
or
lods
jge
ret
adc
hlt
sbb
push
enter
mov
mov
inc
ret
cmp
outsl
push
fcompl
lret
xchg
rep
ret
int3
cmpsb
push
ret
aam
sbb
arpl
fs
xchg
imul
push
int3
and
js
outsb
insb
in
pop
mov
mov
rclb
sbb
imul
mov
mov
lea
stos
push
icebp
inc
mov
mov
shr
mov
push
pop
mov
adc
mov
mov
dec
and
hlt
sbb
pop
mov
sbb
adc
push
in
sbb
dec
mov
loopne
shlb
sbb
push
jg
call
mov
andps
mov
mov
movsl
xor
and
test
inc
add
or
dec
pop
or
mov
jo
aam
inc
mov
mov
adc
arpl
pushf
push
mov
inc
sahf
mov
jne
lahf
loopne
es
insb
es
outsb
mov
inc
imul
mov
inc
fstpl
cmpsl
fsubrl
adc
jb
hlt
scas
add
ja
mov
pusha
add
and
ds
mov
cmp
xchg
mov
sub
or
ret
ljmp
leave
adc
icebp
mov
mov
mov
or
xchg
test
xor
lea
hlt
lock
push
sub
or
and
ficompl
popa
xchg
cmc
in
std
dec
adc
stos
xchg
stos
mov
xor
mov
sar
in
fldcw
mov
hlt
pop
mov
aas
jmp
cmp
xor
test
sub
stos
add
jno
pop
fsubrs
icebp
pop
pusha
dec
xor
push
je
mov
out
jmp
mov
add
dec
nop
cmp
scas
testb
xor
testl
adc
jno
add
add
stos
shrl
fnsave
jo
daa
ret
mov
xchg
stos
xchg
jne
mov
rcrl
mov
out
and
push
xor
inc
inc
pushl
lahf
push
adc
or
js
xchg
or
sbb
pop
jle
sbb
test
jge
mov
pop
call
or
dec
push
add
mov
dec
or
loopne
xchg
mov
sub
outsl
stos
mov
out
mov
inc
fsubrs
fwait
subb
std
arpl
icebp
lret
imul
inc
jbe
or
mov
ret
cmp
adc
mov
pushf
dec
pop
dec
test
loopne
adc
aaa
mov
cmpsb
add
inc
inc
lret
mov
inc
ret
lods
push
push
std
and
lcall
mov
imulb
jle
enter
mov
icebp
gs
mov
test
sbb
cmc
mov
mov
jbe
mov
pop
popa
imul
jae
out
stos
movb
out
test
adc
jns
mov
vpand
test
mov
rorb
pop
ficoml
arpl
pop
cltd
sbb
or
push
xor
sahf
decb
ja
mov
xchg
test
test
jbe
jg
sarb
jb
cmp
stos
stc
mov
inc
jb
xor
out
inc
jp
inc
push
ljmp
mov
leave
push
rolb
mov
and
and
inc
insl
daa
cmp
pop
push
popa
or
adc
cmc
cs
mov
lret
pop
pop
and
sub
push
aaa
mov
sbb
mov
insl
mov
ljmp
lcall
daa
xchg
jne
andb
jmp
dec
mov
movsb
enter
cmp
fists
lock
orb
xchg
pop
repnz
pop
in
add
or
dec
push
call
add
pop
cmp
ss
jecxz
add
fadd
mov
fs
mov
imul
sti
xor
xchg
dec
mov
push
pop
jae
cmpb
movsl
fcmovu
or
dec
or
cmpsb
ss
inc
sti
jmp
pop
jle
stos
xor
dec
push
or
cmpsl
dec
xchg
cmp
pop
inc
mov
js
lret
cwtl
push
add
pop
mov
pop
loope
mov
fistpl
mov
pop
mov
out
rorb
test
je
mov
lahf
dec
push
sbb
push
sub
pop
and
or
rcrb
and
push
mov
std
xchg
push
push
cmpsl
call
lds
mov
pop
and
bndldx
cwtl
mov
mov
adc
cmpsb
xchg
xchg
cmc
lods
test
mov
pop
xchg
xor
mov
cmpsl
xchg
sub
js
sub
ja
insl
dec
loop
mov
loopne
daa
jno
xchg
push
leave
cmpsb
lock
fwait
clc
xchg
jecxz
popl
je
test
mov
mov
jp
repnz
mov
add
and
xchg
push
xor
stos
cmp
add
ss
xchg
mov
scas
adc
xchg
lock
rclb
xchg
sarb
mov
sahf
mov
mov
incb
iret
gs
and
jle
mov
mov
or
xchg
push
cmp
add
rcll
shr
lea
xor
cmpb
filds
test
gs
dec
push
jne
adc
push
test
cld
cmp
adc
dec
pop
dec
std
in
push
fistps
cs
push
or
mov
adc
std
or
testb
push
roll
dec
sbb
aam
loopne
xchg
lods
adc
cmpb
insl
addr16
mov
dec
push
mov
jno
ret
test
loop
call
pushf
insb
mov
in
das
jbe
jae
cmp
or
sub
ds
adc
xor
nop
es
lods
bound
js
in
jbe
cli
lea
adc
xchg
or
loop
rclb
aaa
jle
sub
fldt
adc
addr16
mov
xor
out
lea
fdiv
cmpsb
test
movsl
xor
sahf
adc
pop
xchg
nop
imul
sti
xchg
aas
data16
mov
fistl
xor
test
inc
pop
mov
addr16
loop
xchg
scas
orl
test
lods
je
mov
sbb
xchg
loopne
adcb
push
and
cwtl
add
sti
or
lods
mov
inc
enter
cmp
jecxz
test
mov
mov
in
ljmp
fadds
out
in
inc
pop
mov
add
into
rcll
jne
xor
inc
adc
adc
or
or
icebp
pop
xor
xor
push
jo
sub
push
mov
scas
xchg
das
push
outsl
sbb
cmp
jbe
mov
aam
mov
cltd
dec
sub
mov
mov
cltd
push
xchg
sbb
push
in
out
push
or
aaa
ss
and
mov
jmp
gs
adc
xchg
jmp
sti
mov
push
or
rcrl
int
cwtl
shrl
scas
frstor
and
mov
dec
jns
dec
jp
dec
popf
adc
hlt
call
in
pop
mov
nop
jp,pt
out
iret
test
ja
inc
push
mov
lods
call
rolb
mov
cmp
mov
cs
adcl
push
loopne
and
cmp
aam
in
lcall
arpl
cmc
lock
add
dec
push
stos
inc
in
and
into
add
cmp
and
jecxz
insl
mov
xor
inc
cmp
inc
sub
inc
push
lds
push
add
dec
adc
dec
cmp
repz
mov
dec
sbb
sub
es
mov
lods
dec
sahf
adc
xor
add
push
inc
fcmovnbe
fbld
dec
push
hlt
push
and
adc
pop
and
mov
sti
ret
inc
int
sbb
xchg
bound
ss
fucomip
lods
lcall
pop
insl
and
push
xchg
pop
dec
pop
mov
cmp
jp
xor
fmull
out
push
xor
push
mov
fstps
pushf
cmc
inc
cmp
fwait
mov
sub
push
and
push
adcl
sub
push
sarb
pop
and
std
push
ret
popf
mov
or
pop
lods
jge
mov
push
std
jle
repnz
cld
js
xlat
mov
cmc
pushl
addr16
decl
fldl
js
xor
int3
adc
ja
inc
inc
mov
xchg
das
mov
add
xor
mov
rcrl
clc
inc
pop
int
mov
xchg
fsubs
loop
arpl
add
mov
ja
cmp
addr16
mov
loopne
pop
and
cmp
ret
xchg
mov
hlt
mov
mov
int3
fistl
ret
roll
ds
xlat
lods
cmc
iret
mov
push
inc
test
cmp
call
jge
in
das
inc
lcall
mov
jno
jp
dec
ret
stos
pop
jg
lahf
push
xchg
jecxz
lea
xchg
pop
ficomps
mov
les
pop
adc
lock
lods
mov
mov
lods
fs
mov
sbb
jp
inc
cmp
in
sub
pop
incl
scas
jle
daa
shll
test
pop
pushf
dec
in
add
cmpb
jg
call
pop
mov
mov
mov
bound
nop
test
incl
xor
sbb
add
mov
ljmp
cmp
jnp
lahf
jo
fcmovnu
jo
aad
mov
and
push
call
mov
sti
cs
jne
pop
arpl
fmuls
lods
andb
inc
add
outsl
mov
or
rcl
imul
test
hlt
push
push
mov
pop
roll
push
andl
aam
jae
inc
or
imul
in
or
mov
lret
xor
dec
sbb
mov
pusha
cmpsl
cs
inc
sub
test
dec
loopne
test
in
adc
mov
insb
pop
outsl
das
les
inc
pop
jae
into
add
xchg
lods
das
fimuls
nop
test
push
outsl
lods
imul
push
pop
lds
lret
mov
jbe
js
inc
add
cmp
lea
shrb
jecxz
push
movups
in
pop
xor
jp
push
dec
mov
jae
cmp
dec
jne
mov
and
mov
std
push
imul
ds
sti
fbld
or
adc
mov
and
inc
aad
cwtl
shrl
test
outsb
shr
sub
xchg
inc
das
dec
inc
lods
outsb
hlt
test
push
stos
push
and
mov
push
pusha
mov
jmp
nop
push
adc
aas
bound
dec
bound
outsl
std
bound
or
and
movsl
insl
sbb
mov
add
scas
je
cmpsl
fs
fcmovnu
incl
or
inc
add
jmp
dec
aaa
pop
jbe
rcr
mov
xor
dec
mov
mov
mov
hlt
stos
push
sub
cld
add
ljmp
xchg
mov
cwtl
sbb
aaa
pop
ljmp
dec
lea
outsb
shlb
sbb
mov
adc
or
or
loopne
mov
add
inc
insb
clc
inc
push
fwait
push
pop
in
mov
rcr
push
or
and
test
or
rorb
add
test
xlat
ss
dec
loope
xchg
sub
cmp
imul
adc
mov
fisttpl
jne
push
mov
test
in
xchg
pop
cwtl
inc
imul
push
out
stos
fildll
inc
out
dec
enter
or
sbb
dec
rcl
sbb
adc
jns
cs
lcall
xchg
test
lds
jo
ret
sub
inc
push
or
mov
add
sbb
add
xchg
push
je
mov
out
sahf
mov
pushl
jns
movsb
inc
xchg
gs
repnz
pop
add
jge
sbb
in
shr
add
js
sub
sub
push
mov
aaa
test
test
es
lods
add
or
cmp
push
pop
outsb
mov
ds
xchg
stos
pop
test
adc
jmp
sub
xchg
insb
outsb
mov
push
xchg
data16
outsb
sub
xor
xchg
leave
sarl
daa
push
lcall
pop
shlb
add
dec
test
inc
jg
shll
dec
cwtl
push
lcall
cmpsb
mov
add
push
popa
dec
dec
andb
incb
sbb
test
sbb
lahf
dec
or
lahf
or
aaa
stos
mov
mov
cmp
push
popa
movsb
mov
imul
pop
out
pusha
sbb
aas
pusha
pop
cs
rclb
xchg
or
aad
jo
scas
imul
fcoml
xchg
or
add
loop
ret
loopne
dec
test
mov
ljmp
xorb
add
scas
adc
cmp
bound
mov
pop
inc
gs
jle
or
pop
inc
or
or
sbb
outsl
mov
mov
pop
aam
test
sbb
push
fidivrs
fldcw
clc
inc
icebp
decb
jle
jno
fsubrl
les
sti
sbb
test
fwait
sub
shrb
add
adc
xor
test
fstpt
inc
movsb
mov
insl
jecxz
insb
add
adcl
test
pop
jle
imul
push
test
aaa
xor
add
or
cmc
das
xchg
test
test
shlb
stos
add
mov
add
cmp
mov
and
push
mov
andb
adc
xor
pop
mov
stc
insb
scas
mov
insb
or
lods
aad
flds
sti
ljmp
pop
sbb
sub
imul
pop
xchg
sbb
in
mov
stos
test
loope
sub
xchg
push
scas
das
dec
loopne
and
or
mov
movsl
fisttpl
pop
rcrb
out
xor
ret
das
ja
mov
in
into
jae
incl
nop
int3
inc
in
std
mov
dec
lock
or
dec
sub
ss
add
mov
mov
push
mov
imul
cltd
add
add
les
mov
adc
imul
push
or
pop
cmpsl
mov
mov
dec
adc
mov
leave
ss
gs
jle
jp
add
xchg
mov
jb
and
movsb
cmp
out
mov
or
mov
mov
roll
out
loop
inc
mov
inc
das
inc
jns
ljmp
mov
aas
add
sub
in
bnd
fisttpll
movsb
mov
adc
jb
add
xlat
cs
or
pop
jle
mulb
jbe
call
cmpb
inc
std
repnz
jle
pop
call
enter
mov
adc
mov
icebp
outsl
mov
repnz
dec
test
ret
lds
imul
jecxz
and
stos
jae
push
insl
xchg
fistpll
or
imul
je
lcall
cmp
loope
je
mov
shll
pop
sbb
das
push
push
push
lcall
add
inc
sub
pop
push
test
or
mov
push
je
jle
addr16
daa
mov
sbb
xorl
je
int3
sarb
in
clc
mov
movl
sub
inc
push
lea
shrb
loop
or
imul
pop
cli
dec
out
sub
push
lea
pusha
in
pop
sub
jg
les
repz
push
enter
push
xchg
mov
in
or
loop
mov
jl
xchg
jmp
add
lahf
dec
inc
mov
sub
or
add
xor
lods
sub
movsl
sub
fidivl
ljmp
xor
xor
lock
call
or
faddl
sub
cs
push
mov
add
adc
rolb
xchg
cmpsb
or
jg
push
and
jge
add
cmp
daa
push
mov
sbb
lock
push
pop
pop
loope
enter
iret
sub
and
mov
inc
inc
xor
rcr
test
cs
pop
aaa
nop
xchg
xchg
loopne,pn
inc
or
cld
inc
mov
dec
mov
sbb
push
add
outsl
movsl
add
pop
inc
mov
outsb
add
push
xlat
mov
js
fstpt
push
inc
add
add
sub
rcll
lock
pop
data16
out
fdivl
mov
push
std
call
adc
subb
push
cmp
xchg
or
notl
test
das
xor
jne
jno
inc
push
sub
pop
or
mov
xchg
or
mov
mov
mov
inc
or
or
fwait
adc
out
les
ret
cmp
ja
add
jbe
jnp
addb
loop
das
cmp
dec
add
mov
push
fisttpl
fbstp
and
popa
ret
cmp
cmp
mov
jnp
jnp
adc
std
scas
sbb
mov
aad
dec
ljmp
movsl
ret
mov
pop
sub
jno
pop
inc
dec
clc
ss
fisubs
popf
adcb
insb
std
push
out
fstl
and
and
or
rclb
fwait
in
mov
mov
fdiv
aaa
mov
jp
fs
mov
inc
insb
sub
ds
cmp
sbb
icebp
aad
cmovl
repnz
in
pop
lret
push
adc
cmc
gs
ret
inc
clc
or
cmpb
and
xlat
rol
imul
loope
add
xchg
lahf
lock
sbb
mov
mov
loope
mov
mov
pop
dec
js
adc
iret
push
cli
adc
mov
les
push
outsl
test
mov
pushf
or
call
add
mov
jecxz
iret
jns
lock
outsl
fisubs
stos
or
addr16
stos
enter
fucomip
ljmp
cwtl
jbe
mov
xchg
xchg
pop
in
shr
inc
cwtl
je
sbb
sahf
js
push
les
stos
adc
dec
sbb
outsb
cld
mov
push
fcoms
cs
add
jnp
xchg
shrb
inc
cmp
sbb
ret
mov
ds
adc
fcoms
pop
clc
jb
mov
add
jecxz
mov
dec
mov
mov
mov
xlat
pushf
and
cmp
incl
inc
ret
or
add
clc
imul
mov
adc
out
pop
fimuls
mov
popa
add
jne
cmp
icebp
sbb
cmp
icebp
inc
jle
scas
dec
dec
rorl
add
out
dec
mov
lea
adcb
add
fidivrs
add
add
mov
aam
addb
adc
cli
dec
leave
mov
test
lcall
lcall
dec
dec
jl
in
adc
mov
outsl
jle
nop
roll
shll
aad
cmp
adcl
or
ror
out
xchg
repz
test
and
xchg
pop
jecxz
pop
mov
xchg
pushf
mov
andl
rcrb
sbb
dec
adc
jae
mov
and
cmpsl
repnz
sub
dec
pop
lock
inc
add
inc
das
hlt
push
mov
jl
adc
pop
or
js
std
mov
pop
push
jbe
out
ss
lods
lahf
inc
mov
jle
lahf
popf
test
vpsllw
in
pop
sbb
push
mov
mov
cwtl
pop
sbb
ja
enter
clc
mov
sub
mov
mov
jnp
mov
aam
xchg
and
lods
mov
mov
adc
jge
mov
in
fidivl
les
mov
jg
cmp
push
inc
adcl
sbb
jne
mov
enter
loop
xchg
cmp
loop
push
inc
pop
cltd
mov
pop
int3
adc
fprem
lods
jecxz
testb
sub
jmp
mov
cld
not
xchg
hlt
and
adc
imul
lds
or
cmovne
mov
cmpsl
ret
cmc
sbb
jo
icebp
cmp
addr16
push
mov
std
or
orb
and
mov
std
aaa
cmpsb
lret
leave
stc
fdivl
out
mov
jl
iret
fistpll
stc
mov
pop
and
mov
xchg
sub
push
jb
movsl
nop
sarb
fneni(8087
sub
add
sbb
imul
sbb
scas
int
fdivrs
or
das
add
inc
inc
ret
jge
sub
mov
aam
pminsw
pop
out
push
sub
fisttpll
lahf
jae
pop
cmpb
das
lock
inc
loope
ljmp
pusha
out
test
mov
pop
or
mov
mov
pop
and
lock
xorl
dec
popa
xchg
dec
add
dec
sbb
ret
int
rcrl
lahf
lods
cmp
fdiv
add
cli
sub
std
scas
testb
push
dec
lock
push
push
xor
push
jno
jp
roll
dec
cmc
mov
je
leave
jle
push
jne
mov
mov
dec
jns
pop
sub
mov
jne
outsl
outsl
jno
jmp
dec
data16
sahf
add
std
ljmp
or
sbb
dec
pop
lcall
adc
lcall
outsl
rcr
orl
mov
sbbb
iret
jnp
adc
data16
inc
sbb
mov
add
cwtl
jo
push
or
in
push
stos
sub
fisubrl
dec
mov
xor
or
ficoms
sub
lcall
adc
ja
sbb
xchg
xchg
cs
fistpll
pop
mov
mov
repz
std
negb
xor
xchg
bound
mov
or
sbb
and
mov
loop
add
mov
call
lea
pop
inc
xacquire
loopne
enter
mov
ficoms
jns
jl
or
icebp
push
dec
or
scas
mov
xor
mov
xchg
enter
pop
sub
idiv
adc
sbb
pop
adc
shll
fdivs
scas
ficompl
int3
aam
add
inc
pop
push
ljmp
pushf
and
add
cwtl
int3
repnz
sbb
lret
insl
iret
inc
testl
in
mov
mov
pop
xor
jb
xor
jmp
jae
or
xchg
push
fs
dec
inc
mov
lret
andl
push
add
rorb
push
mov
pop
and
mov
stos
mov
mov
inc
jo
ljmp
xchg
jle
xor
mov
inc
out
adc
test
xchg
test
dec
and
inc
cld
or
stos
into
sarl
ffree
das
xchg
lods
jae
fsubl
sar
push
mov
hlt
pop
dec
hlt
adc
call
and
stc
cmp
das
push
lcall
push
or
xchg
out
inc
fucomp
inc
aam
mov
ss
pusha
cmp
xchg
outsb
faddl
fistps
out
cli
aaa
sub
pop
insb
dec
les
add
es
lea
js
jle
rcl
popa
repz
sub
idivb
insb
dec
loope
sub
jl
fcomps
add
xor
add
outsl
outsl
clc
cs
es
in
push
in
aas
aad
fcomip
andb
cli
mov
push
enter
rcr
inc
push
adc
mov
iret
mov
in
int3
into
adc
cld
push
jle
push
add
sub
imul
clc
jbe
xchg
add
sbb
jp
ret
or
inc
push
pushf
inc
sub
xor
mov
jle
andb
movsb
add
dec
icebp
les
loopne
in
dec
push
add
pop
pop
push
aad
test
dec
rorb
xor
nop
in
jp
pop
fisubs
adc
movsl
pop
andl
ljmp
frstpm(287
xlat
sub
xorps
pop
jle
push
andb
in
adc
negb
clc
sar
mov
lret
sbb
add
jp
inc
fs
fs
mov
pusha
xor
aas
stc
inc
dec
lock
mov
repnz
push
jge
mov
ljmp
mov
test
aas
and
and
or
loopne
dec
push
les
in
sbb
shr
test
nop
out
xchg
aaa
aad
add
add
add
dec
inc
in
adc
xor
arpl
pop
or
movsl
pop
push
adc
jp
cs
jb
out
data16
sub
sub
ret
mov
adc
rorb
push
mov
add
push
mov
int3
leave
inc
lods
pop
subb
in
adc
or
ljmp
xlat
enter
push
pop
jns
add
in
std
sbb
jno
xchg
enter
lods
inc
cmpsl
and
cld
adc
xchg
test
notb
cltd
test
mov
lods
sub
imul
mov
jo
sbb
push
rcrb
mov
jg
lcall
xchg
in
mov
loopne
sti
mov
dec
pop
jmp
movsl
jns
mov
xchg
fists
cld
pop
insl
cmp
test
movsl
ja
icebp
test
jmp
jecxz
pop
or
testb
inc
pop
inc
ja
cmpsl
not
loopne
notl
pushf
daa
cmpl
push
add
sti
fstpl
push
lds
fisubrl
push
in
xchg
or
js
nop
push
hlt
data16
adc
adc
pop
insb
pop
loop
mov
xchg
sub
fisubrl
enter
int
inc
movzwl
out
sar
cli
das
aad
in
movsl
sub
xchg
sbb
and
add
push
mov
xor
sbbb
jno
sub
mov
popf
imul
sub
leave
icebp
push
sbb
movsb
nop
push
cld
xor
or
sbbb
push
sahf
lods
mov
fdivrs
push
xor
dec
filds
cld
nop
or
sbb
lods
add
cmc
mov
pop
test
and
push
mov
fnstcw
loopne
dec
scas
cwtl
fdiv
pop
inc
mov
sbb
sar
pop
add
stc
sub
and
sti
stos
ret
repnz
mov
mov
js
and
fwait
or
pop
insl
pop
mov
push
es
add
add
enter
lcall
pusha
push
pop
jnp
subb
sbb
fistps
sbb
sbb
and
push
xlat
stos
call
push
sub
hlt
and
movsl
dec
loopne
repnz
mov
inc
ficoml
and
andb
mov
mov
js
loope
fistl
cmc
mov
notl
loop
dec
xor
jmp
xchg
loopne
sarb
lret
test
jecxz
cmp
mov
inc
push
push
jnp
loop
cli
inc
inc
hlt
dec
rorb
inc
or
iret
xchg
nop
outsb
test
shll
dec
lahf
imul
push
and
lcall
cmp
pop
xor
ds
mov
inc
xchg
inc
test
in
adc
in
std
push
cmc
sub
or
cmpl
stos
mov
cmp
xor
push
int3
fisubs
adc
xorl
in
paddd
out
lret
dec
rorb
ljmp
xor
or
jo
popa
lock
xorb
push
push
ja
push
nop
push
cmp
mov
fldl
call
into
bound
inc
mov
pop
mov
push
xor
or
ljmp
dec
cltd
add
scas
sub
xchg
mov
mov
insb
pop
mov
scas
outsb
sub
inc
lock
jno
or
out
pop
pop
jnp
mov
adc
jae,pt
aad
mov
and
int3
mov
dec
lea
enter
jnp
push
shl
xorb
cmp
hlt
sub
jmp
jg
mov
pop
or
mov
mov
mov
ret
push
lock
adc
sti
fsubl
outsl
adc
mov
adc
cmp
dec
dec
sbb
push
and
fbstp
pop
loopne
shl
dec
add
test
or
out
or
xchg
xchg
shlb
test
add
add
pop
sbb
adc
push
mov
jmp
mov
sbb
add
xchg
pop
dec
and
inc
enter
nop
push
xchg
shlb
cwtl
daa
pop
pop
jb
mov
mov
mov
das
sub
inc
setno
dec
fldt
arpl
insl
jge
inc
mov
in
test
jp
mov
cs
cmc
push
cmpsl
loope
movsl
adc
cwtl
rcr
push
pop
dec
push
or
pop
dec
inc
orb
int3
xor
btr
push
fs
fsubs
add
stos
inc
pop
pop
icebp
hlt
lods
xor
or
inc
mov
sub
lods
add
or
jbe
sub
xor
clc
aaa
std
orl
aaa
dec
cmp
in
push
xchg
shr
call
or
or
dec
rol
ja
xchg
push
dec
filds
test
push
xchg
lods
push
orb
fsubrp
ss
mov
cmp
stos
and
cltd
out
cmp
mov
incl
pop
adc
cwtl
jae
cmp
sbb
mov
dec
xchg
dec
mov
lahf
shl
add
lcall
out
pop
test
xor
inc
or
lods
xchg
mov
mov
into
lcall
das
sub
scas
xchg
inc
fsubrl
in
fadd
dec
pop
outsb
sub
das
push
pop
sahf
add
das
mov
mov
inc
ffree
imul
nop
inc
hlt
jno
loopne
ja
nop
mov
push
cmp
push
dec
cmp
and
jmp
sbb
pop
lea
push
cwtl
mov
clc
and
and
icebp
clc
mov
dec
ja
push
xchg
scas
ret
cmp
push
inc
jae
lahf
into
rolb
imul
lret
inc
add
sub
inc
test
xadd
aaa
fdivrp
lods
lahf
pop
or
pop
jecxz
pop
pop
push
push
dec
mov
test
iret
das
mov
inc
jge
push
sbbl
aam
incl
mov
roll
cli
adc
scas
inc
addb
push
decl
adc
cmp
xor
lock
sti
xchg
cmc
sub
lcall
mov
mov
sahf
push
daa
sub
and
addr16
jns
adc
je
cmpsb
add
push
jo
sbb
pop
je
sbb
push
mov
lods
sarb
adc
mov
inc
push
rclb
scas
pusha
dec
xchg
mov
jmp
pusha
dec
fwait
sub
pushl
lcall
popa
ss
mov
decl
add
cmpsb
mov
xchg
fistpl
mov
aam
or
pop
sbb
push
xchg
scas
shlb
xchg
or
cmp
pop
out
mov
mov
fbld
rolb
jo
or
clc
test
cs
inc
aad
xchg
xchg
into
arpl
xlat
pop
dec
sub
lods
mov
test
mov
pushf
aad
cli
shrl
dec
sahf
inc
cwtl
adc
cwtl
jge
test
insb
lods
repnz
sub
lock
jns
fidivrl
lea
mov
imul
dec
mov
fwait
loope
mov
jne
adcb
lcall
jbe
mov
adc
xchg
cmp
cld
outsl
das
mov
les
mov
bound
call
js
std
insb
mov
push
inc
shll
inc
mov
loope
into
inc
imul
orl
mov
fstpl
xor
call
pop
addl
push
mov
int
or
sbb
pushf
pop
das
shlb
pop
repz
out
movsb
out
hlt
mov
inc
add
pop
pop
add
push
add
mov
dec
sub
aam
push
xor
xor
sbbl
ror
push
sub
push
sub
cmpsl
sub
arpl
fs
push
and
fldt
cmp
mov
mov
ret
cmpsl
dec
out
push
xor
jge
mov
inc
inc
imulb
push
ss
jnp
sbb
cld
xor
pop
stc
addr16
lock
add
arpl
cld
mov
loopne
insb
or
enter
scas
lea
mov
subb
add
cs
and
jo
lea
cltd
xor
pop
pop
push
in
xchg
pop
lcall
shrb
sbb
mov
stos
adc
mov
sbb
stos
dec
cltd
hlt
add
fs
clc
ret
push
pop
jo
mov
addr16
daa
inc
jno
ret
insb
inc
addr16
add
sbb
out
test
mov
mov
loop
sbb
pop
clc
sub
insl
out
mov
mov
pop
in
das
mov
mov
jns
aad
add
sub
fwait
bound
ss
mov
pop
sub
loop
dec
jmp
inc
jge
test
nop
xor
jg
xchg
mov
push
ljmp
and
sti
int3
in
testb
xor
outsl
aad
int
outsl
add
hlt
outsb
mov
loop
pop
lea
or
cmc
fists
inc
test
cltd
test
inc
push
inc
std
push
push
into
cmp
lock
and
jg
fiadds
inc
and
in
mov
push
fists
outsb
inc
xchg
mov
mov
fadds
sub
lods
xor
rclb
popf
nop
push
push
lock
mov
popf
jp
sub
ja
sub
and
jmp
daa
mov
push
mov
lcall
mov
or
inc
mov
xchg
push
jge
xor
outsb
xor
icebp
ret
imul
adc
adc
fwait
and
in
outsl
sbb
and
daa
sub
dec
sarl
insl
in
jl
mov
jecxz
push
or
xchg
or
dec
stc
inc
push
inc
xor
hlt
lret
jp
inc
fstpt
adc
daa
hlt
inc
rcrl
xchg
dec
mov
or
mov
push
or
ljmp
test
lea
dec
and
sbb
jb
or
dec
push
jbe
jnp
hlt
xchg
loopne
call
mov
rcrl
lock
outsl
push
lea
mov
adcl
xchg
dec
or
lock
xchg
add
imul
lahf
cmp
or
mov
adcl
sbb
mov
push
xor
clc
ljmp
adc
aaa
fdivrs
dec
or
adc
shlb
in
in
push
add
pmulhw
mov
jg
lods
jp
lds
int
fnstcw
adc
outsb
mov
fs
ret
into
xchg
movsl
jmp
push
inc
mov
xor
pop
dec
inc
xchg
jmp
push
aam
aad
pop
icebp
cmc
xor
rolb
movsl
xor
or
push
mov
aas
add
ret
imull
ret
loope
xlat
inc
inc
repnz
pop
fistpl
js
or
jno
daa
mov
in
incb
push
loop
cmp
mov
xor
jmp
mov
pop
adc
stc
ret
aam
rorb
inc
ret
pop
mov
push
aam
sbb
or
pop
aam
test
push
sub
movsl
mov
in
inc
lock
push
jecxz
mov
lock
notb
adc
hlt
ja
and
jg
mov
aaa
fcomp
adc
inc
ds
sub
testl
jne
cltd
or
ret
pusha
sub
or
pop
pop
adc
jbe
xchg
fsubrs
hlt
lret
cld
or
scas
cmp
xchg
dec
inc
iret
jmp
scas
or
inc
push
add
cmp
inc
aas
xor
pop
data16
fisubrs
insl
scas
stos
int
stos
ror
insb
in
jl
mov
cmc
mov
adc
cmp
mov
pop
mov
sub
incl
xor
dec
cmp
sbb
adc
add
xchg
sub
lcall
mov
inc
leave
aad
ror
dec
aad
dec
inc
into
popa
lcall
push
inc
iret
adc
arpl
and
fisubs
mov
add
jle
imul
call
in
pop
xor
movsb
mov
or
js
incl
add
fsub
pop
std
sub
ds
lds
jp
sub
sub
mov
push
enter
sbb
cmc
cmp
mov
xchg
pop
jnp
mov
push
and
aas
sbb
add
jle
call
or
inc
mov
sbb
insb
in
push
scas
xchg
frstor
xchg
sub
sbb
fsubrl
push
dec
pushf
mulb
fcomi
mov
push
fdivrl
jecxz
lods
mov
inc
xor
cmp
push
dec
cmp
or
data16
fucomi
jp
mov
mov
push
pop
andl
mov
and
sbb
jne
mov
enter
into
inc
sub
mov
aaa
sub
cld
mov
and
lret
pop
mov
jecxz
enter
xchg
and
in
fistl
jbe
sarl
hlt
test
jb
xchg
dec
or
xchg
ljmp
add
dec
add
cmp
dec
add
mov
rclb
inc
lret
mov
push
jg
jecxz
jg
hlt
fcoml
dec
aad
mov
pop
nop
je
adc
outsb
mov
cmova
outsl
loope
jl
sbb
push
scas
mov
push
ja
mov
inc
xorl
sbb
shlb
ljmp
sbb
loop
aaa
and
pop
out
sbb
xorl
jae
arpl
inc
jbe
pop
enter
inc
mov
aaa
and
popa
outsl
mov
lock
and
movsb
adc
jb
and
js
jns
jo
and
dec
movsl
dec
mov
mov
push
xchg
fsubrs
out
sbb
into
or
fucomp
scas
in
loope
repnz
xchg
pusha
sub
mov
out
jo
inc
outsb
sbb
js
test
test
ss
sub
out
jp
cli
mov
arpl
ja
gs
cld
icebp
aaa
pop
les
cmp
mov
inc
add
cmp
das
test
inc
out
daa
jne
or
push
add
xchg
push
push
and
decl
das
nop
pop
add
adc
mov
in
outsl
jl
sti
shlb
or
rorl
mov
call
test
rclb
lea
cwtl
push
das
and
mov
xor
jle
rcr
ret
cmp
xor
stos
add
add
push
icebp
sub
push
idivl
dec
lret
or
test
fsubrl
add
dec
jo
lock
rcrl
sahf
imul
mov
stos
es
add
out
mov
add
inc
cmc
jmp
xchg
ret
mov
je
mov
jnp
lret
xor
sbb
mov
mov
xchg
mov
or
cmpsb
jb
sub
out
subb
adcl
outsb
push
mov
dec
jg
jmp
xchg
test
movsl
dec
pop
add
jns
push
repnz
cmp
movsb
in
lret
or
adc
jg
fcmovnu
push
ret
mov
gs
popf
lods
sbb
mov
lock
mov
test
pop
mov
int3
mov
sbb
outsb
fildll
add
ljmp
mov
push
insb
mov
pop
and
daa
in
inc
dec
ljmp
push
adc
leave
jae
jmp
or
mov
mov
jecxz
out
mov
das
insl
loope
insb
mov
add
mov
adc
push
push
jecxz
incb
mov
ljmp
and
shlb
std
scas
mov
or
and
jb
adcb
outsl
mov
into
mov
fcoms
pop
jg
rcrb
xchg
ret
xchg
and
mov
mov
jp
add
jnp
call
lds
ja
sub
aaa
pop
push
xchg
lret
or
loop
cmc
pop
inc
push
pop
jecxz
xlat
push
mov
add
mov
dec
pop
decl
popf
cli
mov
add
jp
rcr
or
idivl
dec
clc
sub
dec
fistl
sar
sub
arpl
call
mov
pop
push
aaa
lock
sahf
push
mov
mov
js
sbb
les
jl
lahf
sar
fcomip
push
cli
mov
mov
and
shl
addr16
or
test
jnp
push
out
pusha
scas
das
push
shlb
lea
negl
sbb
jmp
xchg
adc
mov
mov
ss
inc
fstpt
add
or
add
inc
mov
test
sub
dec
int
and
mov
mov
outsl
call
sub
mov
stc
lods
push
sub
inc
inc
mov
inc
imul
jmp
cmovs
icebp
clc
aad
push
pop
hlt
adc
pop
lds
fwait
test
jge
movzwl
sbb
dec
mov
xchg
xor
lea
push
mov
and
cmp
test
dec
loop
jae
icebp
das
push
mov
inc
pop
pop
lea
sub
ret
cwtl
cltd
push
test
mov
sahf
or
dec
inc
push
call
mov
popa
das
sub
mov
add
and
xchg
ljmp
das
cld
sti
loop
pop
pusha
push
adc
dec
adc
out
cmpsb
inc
adc
fucomip
test
or
jb
lahf
jg
sbb
and
inc
sub
decl
insl
jge
gs
lret
int
or
outsb
loopne
lret
cmp
fidivrs
ljmp
call
mov
xorl
mov
scas
push
jo
and
scas
jp
std
test
xor
xor
sub
lea
xor
jbe
mov
outsl
fists
add
es
in
insb
iret
xchg
mov
scas
enter
adc
dec
push
call
add
test
adc
mov
imull
ffreep
aad
fs
push
aaa
xlat
hlt
or
or
pop
pop
pop
sbb
mov
mov
push
aad
subb
test
fists
scas
xlat
add
jno
mov
push
and
inc
jge
push
leave
jle
aad
and
cmpsb
clc
adc
ss
inc
jnp
test
ljmp
mov
nop
mov
xchg
xor
ret
clc
scas
pop
fistpl
ret
or
popa
mov
shlb
fisttps
int3
leave
stos
lods
clc
filds
pushf
inc
xor
fistps
add
je
jbe
sti
lret
stos
movsl
xchg
push
or
jns
insb
inc
mov
adc
test
jnp
rorb
shrb
jmp
stos
and
push
jbe
mov
sub
push
fxch
mov
and
xchg
mov
mov
push
mov
sub
adc
xor
jmp
imul
dec
sub
sbb
or
jmp
mov
push
dec
inc
test
adc
into
mov
sti
cmpsb
in
rclb
fldt
in
sub
stos
roll
push
fcoml
ljmp
mov
pop
shl
int3
gs
cmc
scas
or
pop
addr16
arpl
jp
loope
inc
jp
fwait
jp
ss
inc
mov
or
mov
arpl
mov
iret
mov
sahf
mov
mov
icebp
movb
loope
cwtl
cmpsl
lock
cmp
in
aas
pop
popf
js
adc
faddl
mov
jge
jg
mov
adc
call
mov
push
fs
mov
jbe
ds
jbe
adc
jp
sub
inc
lock
fistpll
fsubrs
jl
insl
ret
inc
imul
incb
cmp
add
mov
int
in
sarb
adc
and
test
sbb
mov
lods
icebp
adc
das
imulb
mov
dec
sub
jo
add
push
inc
mov
xchg
dec
shll
fistpl
or
xchg
popa
mov
jbe
inc
or
shrb
out
push
adc
lret
hlt
sbb
sti
jb
repz
aaa
ret
vmovaps
dec
pop
ret
out
insb
popa
rolb
mov
cmp
clc
andb
xchg
xchg
stos
sbb
ss
cmp
fisttps
or
or
es
and
fidivl
xor
mov
xchg
enter
fcomps
inc
and
pop
mov
bnd
adc
in
mov
adc
mov
xchg
xchg
in
xor
mov
ja
outsl
ret
jne
or
mov
mov
enter
popf
pop
repz
and
pop
push
push
cltd
mov
sub
insl
cltd
lock
fldl
mov
lods
xchg
loop
sbb
jb
sub
inc
and
test
mov
insl
sub
call
std
jmp
inc
push
add
mov
or
add
mov
cmpsb
mov
test
cmp
and
out
es
dec
push
or
xor
sbb
cli
mulb
xor
ja
adc
push
pop
mov
dec
push
jp
adc
adc
cli
ret
pop
xor
hlt
pop
pop
push
shrb
je
pop
xchg
add
sbb
lahf
sub
jmp
push
into
inc
fs
inc
jg
xchg
dec
xor
fwait
jno
icebp
add
out
dec
dec
rcl
push
push
pop
sub
cmc
xchg
dec
aaa
inc
dec
inc
sub
cmp
movsl
sbb
jo
in
and
jmp
std
dec
icebp
pop
psubusw
imulb
jne
push
dec
xchg
call
mov
in
les
and
leave
js
dec
bound
jo
jmp
jnp
mov
jle
rcrl
cltd
stos
dec
jg
add
ficomps
xchg
test
out
lcall
and
je
mov
push
pop
cmp
push
or
fdiv
fldcw
cmp
dec
and
xchg
push
push
cmpsl
loope
popf
and
fsubp
ljmp
lods
ljmp
mov
sti
add
sbb
or
test
into
xor
xchg
insl
icebp
mov
mov
cs
jae
into
add
mov
repz
xchg
sub
in
in
sbb
ljmp
mov
pop
cli
jmp
std
push
pop
test
mov
data16
imulb
faddl
adc
jmp
or
push
mov
mov
sub
adc
ljmp
sub
sahf
test
pop
mov
and
fnstcw
inc
ja
xchg
inc
bound
iret
inc
hlt
rolb
mov
filds
fists
inc
std
fisttps
cld
subb
mov
in
pop
mov
aad
mov
andl
out
clc
sbb
xchg
lds
in
add
and
in
ret
jne
inc
inc
mov
lods
add
pop
xchg
mov
pop
lods
leave
addr16
pop
pop
or
call
mov
hlt
test
dec
fdivl
ljmp
cld
lea
icebp
mov
shll
mov
mov
push
sub
add
test
aaa
call
xchg
mov
jne
aaa
clc
or
mov
mov
inc
adc
popa
lds
or
mov
and
repz
push
decl
addl
push
insl
loope
inc
lods
jle
mov
xor
outsl
mov
xchg
imul
outsl
loopne
mov
or
add
das
jmp
hlt
iret
mov
clc
cli
pusha
add
ret
ret
repz
push
lahf
mov
scas
fstps
inc
enter
adc
rcr
aaa
clc
cmpsl
sub
rorb
lahf
gs
clc
mov
mov
add
pop
imul
inc
in
inc
add
lock
test
or
test
jo
jecxz
push
clc
dec
hlt
fistpll
mov
cmp
ja
mov
mov
cmp
adc
jmp
or
pop
aam
adc
fwait
and
mov
jnp
dec
mov
inc
sbb
insb
das
push
lea
das
dec
into
subl
sbb
push
and
in
cmovae
fadds
cwtl
add
xchg
sbb
movsl
xchg
mov
or
test
fwait
ret
mov
and
jle
jp
inc
mov
std
enter
mov
or
cltd
and
scas
mov
push
jg
or
mov
xor
pusha
or
imul
les
mov
inc
and
outsl
mov
popf
pop
sub
add
sbb
inc
xchg
mov
mov
xchg
aad
cwtl
pop
add
cmp
arpl
dec
xchg
xchg
jl
push
mov
push
and
dec
jl
jmp
add
dec
test
fisubs
pop
lret
cs
xchg
call
cs
popfw
fdivrp
inc
sbb
pop
clc
pop
inc
stos
cs
cltd
push
mov
adc
insl
hlt
addr16
rorl
adc
xchg
insl
test
jb
lret
ficoms
add
or
pop
and
or
shlb
jmp
orb
fimull
mov
daa
xchg
push
dec
cmp
jmp
pushf
sbb
adc
cmp
or
das
outsl
push
sbb
pop
fisttpl
das
jecxz
fwait
int3
addr16
ds
cmc
mov
shlb
pop
in
add
out
pushf
movsb
cmp
mov
add
fidivs
test
sbb
fildll
mov
sub
jns
pop
add
je
cmpsb
lahf
jmp
xor
pop
mov
lcall
jno
mov
lods
dec
mov
xchg
lock
and
cmp
arpl
dec
sub
add
pop
fisttpll
xor
bound
push
test
xchg
lret
bnd
int3
in
int
lods
jne
or
rclb
stos
mov
mov
outsb
push
jne
nop
es
or
or
cs
pushf
cmp
rcrl
push
aaa
sbb
fcompl
insb
pop
jmp
lret
jg
and
rolb
sbbl
mov
andb
jbe
jo
sub
push
arpl
sbb
or
xor
sub
mov
add
popa
cmp
or
cld
cmp
inc
ret
popa
test
fstpt
xchg
or
add
add
lods
sbb
out
lret
push
and
je
push
mov
dec
xor
push
popf
xchg
jg
test
push
cmpsb
mov
inc
xchg
cli
mov
sbbb
setl
adc
mov
ja
addb
cmp
fcoms
repz
mov
sbb
lock
push
inc
jge
push
adc
icebp
outsb
sub
mov
mov
push
ljmp
mov
xchg
and
outsb
and
xor
mov
push
sbb
dec
jbe
das
dec
ss
mov
mov
in
push
sbb
mov
sub
add
sbb
inc
dec
fucomi
das
cld
in
lea
out
ljmp
mov
or
add
pop
mov
xchg
test
sbbb
lods
sub
movsb
sti
cmpsb
test
add
repz
fidivrl
jp
andl
sbb
xor
xchg
xor
add
mov
data16
adc
aas
jmp
jg
call
cli
sar
rorb
add
xlat
incl
mov
push
jmp
js
dec
adc
pop
push
adc
mov
sub
dec
imul
test
rcr
add
loope
dec
shrl
sbb
sub
push
loope
and
bound
mov
outsl
add
jp
call
adc
or
test
xchg
rorb
jno
pop
or
dec
bound
inc
add
cli
pop
stos
icebp
pushf
mov
adc
dec
jge
popf
ret
inc
jp
in
andb
lcall
lock
test
pop
mov
add
call
jo
adc
cmp
daa
mov
clc
xchg
add
mov
int
inc
dec
cltd
dec
xor
pop
pop
iret
mov
xlat
sahf
enter
inc
cmpsb
dec
das
mov
jno
pop
loop
bound
xchg
aad
call
inc
add
shll
outsl
stc
jg
outsl
shl
movsl
and
xchg
leave
pop
mov
add
clc
xor
outsl
insl
push
mov
and
mov
ret
or
pushl
cmc
ljmp
stos
iret
and
arpl
lahf
call
sbb
add
ljmp
sbb
sahf
sub
push
sti
jmp
test
ret
mulb
pop
hlt
out
push
or
xchg
mov
xchg
inc
cld
add
pop
andl
sbb
dec
hlt
and
push
adc
add
dec
aaa
je
sub
movsb
mov
scas
add
and
outsl
jp
popa
mov
dec
iret
and
add
sarb
mov
inc
jmp
mov
pop
mov
decb
sbbb
es
jae
pop
push
ret
nop
add
loopne
stc
outsl
arpl
adc
xor
push
jl
shl
sbb
ja
call
push
or
shl
insl
xchg
mov
cli
call
stc
dec
lea
lea
push
outsl
ljmp
sub
int3
mov
fucom
jecxz
ret
pop
mov
rcl
mov
scas
pop
jecxz
in
push
fsubl
push
out
notb
outsl
mov
jne
fucomip
jg
ss
cwtl
mov
test
lret
add
mov
fidivrl
mov
or
mov
aam
fcmovne
nop
inc
mov
repnz
xor
fsubr
jecxz
pop
or
fsubrl
mov
xor
int3
mov
or
dec
add
movsb
call
inc
std
mov
sbb
and
inc
cmc
dec
mov
das
jl
mov
pushf
rol
cmp
nop
or
cmp
or
push
subb
jb
adc
jp
ss
outsb
fisubrl
mov
out
pop
adc
fwait
mov
add
lcall
or
add
lret
xchg
mov
pop
fdivrp
movb
sbb
sbb
scas
pop
pop
adc
jge
test
mov
mov
in
sbb
cmc
repnz
in
jp
mov
ret
mov
dec
out
insl
mov
std
pop
leave
lret
xor
pop
subb
adc
int
xor
test
push
sub
pop
js
mov
or
add
or
jp
mov
and
mov
dec
fwait
adc
mov
outsl
.byte
xchg
.byte
push
mov
in
sub
sbb
adc
mov
sub
incl
push
add
mov
add
add
jmp
add
testb
add
xchg
aas
stos
sub
jg
push
push
pushl
lea
push
push
push
clc
push
clc
mov
push
pusha
add
leave
ret
add
add
sub
add
sbb
push
cli
sub
add
call
sub
inc
add
decl
jne
leave
ret
sub
sbb
pop
mov
cld
push
dec
je
sbb
incb
lea
push
push
dec
in
push
or
push
arpl
or
or
jg
mov
sub
dec
addr16
outsb
ss
or
mov
in
imul
inc
pop
sub
sub
in
dec
adc
or
ret
arpl
add
jo
push
mov
push
push
push
gs
in
test
fisttpll
js
push
dec
ljmp
add
add
inc
and
add
fsubrs
push
push
push
push
mov
gs
pop
ss
push
push
jno
dec
and
pusha
negl
sbb
mov
push
hlt
lock
mov
loopne
insb
cmp
xor
push
call
push
push
jbe
add
push
loope
sub
loopne
imul
popa
push
cmp
lcall
push
pop
add
insb
inc
gs
jb
cmp
mov
mov
imul
mov
out
mov
lods
fcmovnb
jbe
push
dec
insb
or
push
leave
call
mov
iret
in
add
lcall
mov
fnsave
dec
inc
sti
inc
data16
loope
cld
call
test
push
cmc
outsb
pop
js
arpl
dec
stc
imul
xor
cmpl
adc
sbb
popa
call
cli
inc
and
sbb
xor
in
add
fsubr
cmpsb
push
aad
cld
add
shll
mov
hlt
mov
out
add
stc
nop
and
xor
aam
push
or
push
xor
push
outsl
mov
sub
or
add
add
mov
loope
pop
inc
js
inc
jbe
or
lock
in
cmpsb
fisttpl
cmp
xor
push
cmpsl
in
arpl
dec
inc
pop
dec
xor
xor
bound
int3
sbb
call
sub
add
push
sub
mov
push
push
imul
jno
cmc
add
sub
mov
sub
jb
jg
xchg
clc
fs
xlat
hlt
push
popl
pop
inc
aaa
sub
insl
clc
mov
pop
xor
inc
xchg
inc
aaa
outsb
mov
xchg
jno
cltd
out
inc
add
mov
ss
sbb
mov
je
fildl
imul
jbe
cmpl
sbb
dec
push
insb
addl
iret
mov
sub
add
dec
mov
fcomps
add
sub
inc
mov
cmp
add
rcr
mov
lahf
push
lea
outsl
popa
js
sub
loope
nop
in
call
icebp
pop
dec
sub
or
scas
popf
sub
into
outsb
jbe
add
cmc
push
mov
inc
adc
sub
dec
insb
mov
outsl
cld
inc
sub
shrb
je
bnd
imul
cmc
jp
imul
dec
repz
mov
mov
fs
mov
inc
xor
dec
dec
inc
stos
push
or
fisubs
mov
push
int3
pop
clc
outsb
pop
dec
push
push
das
repz
gs
arpl
aad
xchg
lret
lret
sub
add
jb
insb
sbbb
dec
push
lock
add
cmp
xor
das
sarb
js
add
sbb
push
adc
jmp
xchg
pop
push
xor
xlat
lea
clc
mov
inc
push
bound
mov
mov
sbb
mov
in
sub
repz
pop
xchg
paddusw
add
add
cs
pop
js
cs
cld
out
add
aas
cmp
movsb
mov
incl
dec
div
sbb
xchg
cltd
jecxz
test
mov
sti
repnz
stc
mov
out
xchg
mov
or
bound
cs
cld
add
fstpt
mov
push
in
xor
jg
add
jae
stos
mov
push
add
test
insb
repnz
push
imull
repnz
pop
xor
mov
clc
fisubl
ficoms
jbe
push
ret
add
and
movsb
xchg
addb
xchg
mov
testb
push
mov
cmp
add
mov
out
shl
test
add
inc
lods
add
imul
xor
stos
push
and
add
in
jns
ja
ljmp
add
pop
clc
outsb
jb
and
add
cmp
lret
aam
add
iret
test
pop
xchg
ja
test
jp
gs
ss
fs
add
shrb
out
add
and
das
mov
pop
pop
cmpsb
in
add
xchg
jmp
out
sar
ds
lret
add
pop
inc
jg
in
lret
in
jl
jns
jle
loop
mov
pop
push
lret
pop
add
push
push
cmc
scas
add
into
outsl
jl
add
add
and
mov
sub
stos
sti
push
test
cmp
popw
insb
popa
push
inc
and
test
fmull
add
arpl
dec
add
fadds
xchg
jno
jbe
vmovupd
out
sub
into
xchg
xor
mov
in
push
xor
pop
jl
or
xchg
ss
pop
pop
jno
mov
out
add
or
mov
gs
pop
lods
addr16
enter
mov
mov
cmp
sti
inc
pop
jo
sub
cmpsb
and
sbb
cli
adc
test
iret
add
push
cmp
das
push
out
rcr
adc
or
xor
popa
jb
add
mov
vmovmskps
pusha
bound
push
pop
inc
mov
sub
jns
or
mov
leave
push
push
jle
das
scas
add
add
stos
xor
dec
outsb
lods
dec
in
loope
sbb
mov
cld
xchg
pop
sbb
xchg
in
pop
add
xor
inc
jp
mov
sahf
pop
leave
or
stos
data16
gs
into
icebp
nop
xor
mov
lea
fadds
adc
xor
jge
je
inc
jo
jge
xor
je
jns
insl
adc
inc
push
movsb
ds
insb
cmp
xchg
add
push
or
pop
xchg
add
adc
cmp
pop
out
mov
dec
fstpl
cld
jge
cmp
lahf
add
cltd
in
sub
cmp
test
divl
cmp
jb
adcb
in
mov
mov
enter
imul
cwtl
lret
pop
fidivs
mov
lret
push
pop
sbb
ds
xchg
mov
imul
popf
inc
jb
les
add
pop
nop
jae
loope
cmp
orb
mov
mov
mov
popf
cmpsl
leave
mov
mov
fcomip
mov
and
cmp
and
inc
outsl
test
ja
std
test
or
or
out
popa
adc
jbe
cs
push
add
test
popl
es
xor
push
jbe,pt
test
mov
aas
xchg
add
fldt
iret
mov
push
sbb
jmp
mov
in
in
sbb
outsl
mov
fdivrs
inc
icebp
in
out
mov
jp
cmp
aaa
stos
push
adc
lahf
scas
daa
inc
cs
fildl
jmp
sti
into
inc
shll
jae
ret
iret
cmp
mul
shl
inc
sbb
mov
int
cmp
hlt
add
lods
push
loope
xor
shll
mov
pop
add
mov
and
or
int3
add
adcl
outsb
inc
mov
or
aas
mov
mov
shl
dec
loope
clc
faddl
push
inc
and
lahf
mov
pop
mov
and
ljmp
call
insl
pop
daa
lods
shlb
in
rcr
pop
pop
mov
cmp
pop
cmpb
ds
cmp
aaa
cmc
std
xor
into
cmp
mov
sub
xor
add
pop
imul
test
lret
lods
add
sbbb
imull
repnz
test
push
inc
fsubl
out
jecxz
mov
dec
in
jb
in
ss
adc
and
test
mov
or
inc
xchg
or
pop
or
movsb
setge
jnp
add
roll
cmp
xchg
pop
lea
mov
sbb
jno
add
push
or
out
ret
cltd
cmp
adc
jbe
and
bound
cwtl
aam
popf
add
aad
xchg
es
jmp
outsl
inc
mov
lcall
clc
adc
sub
mov
adcb
mov
imul
sub
adc
es
out
mov
lea
imul
lock
pop
lret
mov
jne
repnz
xor
fldl
ret
imul
inc
loopne
xor
inc
mov
rol
rclb
lock
sbb
cmp
stc
cmpsl
push
inc
sahf
je
das
lret
cmpl
and
jae
adc
gs
aam
xlat
testb
in
inc
cmpb
ret
es
sahf
add
add
int3
jbe
or
fdivr
mov
nop
add
add
sti
push
sbb
sbb
inc
cwtl
repnz
add
adc
fists
in
push
outsb
fisttpll
subl
sbb
inc
xor
insl
stc
repnz
jecxz
cmpsl
adc
mov
inc
ret
negb
out
lods
ficoml
insl
or
mov
xchg
aaa
push
shrl
orb
in
jmp
cltd
gs
push
cmpsb
bound
lcall
ret
sub
inc
lea
mov
mov
cltd
jmp
adc
out
out
xchg
sets
adc
inc
xor
or
leave
imul
js
jecxz
rcrl
jmp
xor
hlt
popf
inc
xchg
inc
dec
sbb
mov
jbe
jmp
mov
mov
addr16
push
inc
sub
aas
daa
sbb
cmc
add
insb
sbb
aad
add
aam
add
je
aam
shll
mov
outsl
imul
in
add
xchg
popa
pop
insl
xor
mov
fldcw
call
repnz
pop
push
test
cmpsl
and
xchg
xchg
mov
pop
and
idivl
nop
inc
shll
push
lahf
pop
sub
adc
aam
inc
mov
js
fs
pop
stos
adc
mov
ret
rolb
popf
pushf
cmp
scas
or
mov
into
xchg
fimuls
mov
inc
mov
iret
sbb
out
jne
nop
out
add
lods
add
adc
and
push
orl
std
insl
inc
repz
cld
mov
xchg
or
fwait
jp
iret
or
ss
push
iret
push
into
pusha
sub
dec
cmc
jne
jp
aas
and
jnp
cmp
mov
cwtl
mov
subl
cli
jmp
mov
xchg
jo
loopw
std
and
pop
sbb
iret
sbb
pop
jb
pop
fnop
dec
mov
cmp
cmp
adc
adc
sbb
or
int
fwait
inc
or
loop
xor
xor
pop
pop
mov
fstps
and
dec
sbb
cltd
in
stos
repz
xchg
pop
dec
dec
pop
add
pop
lock
push
dec
int3
stos
mov
or
cmc
rcrb
test
push
and
stc
push
inc
jo
push
aad
ss
clc
shl
pop
ljmp
sbb
mov
mov
call
xor
mov
xor
inc
add
cmp
sbb
movl
dec
das
fwait
jbe
sahf
xor
pop
ret
add
add
aam
shll
shrb
or
popa
xchg
es
shrl
or
out
ss
mov
and
inc
mov
sbb
out
ja
or
push
jmp
test
les
sub
das
adc
pop
fwait
lret
mov
loopne
andl
add
mov
cmp
popf
dec
pop
push
in
mov
push
cmpsb
insl
ffree
loopne
mov
jb
rcr
add
jmp
cmp
leave
shl
test
adc
cmp
push
jmp
scas
leave
hlt
dec
inc
lods
imul
pop
cmp
rorl
sbb
shlb
das
jo
ret
stc
lret
cmp
rolb
xor
cmpsb
cmp
pusha
daa
clc
mov
test
in
cli
aad
lret
cmpl
jl
push
xchg
xor
pushf
icebp
and
adc
jp
dec
or
jae
mov
pop
cmp
fdivs
cmpsb
add
mov
lock
pop
xchg
mov
dec
daa
fisubl
es
xchg
call
lahf
mov
jns
push
lock
fadds
mulb
and
fsts
test
inc
inc
roll
orb
fmuls
xor
or
adc
dec
popf
rclb
movsb
push
xlat
sub
movl
inc
mov
icebp
adcl
es
pop
in
and
fidivs
mov
inc
sbb
sub
add
faddl
clc
add
fst
xchg
leave
push
flds
push
iret
xchg
clc
inc
popa
cs
fimull
iret
jecxz
loopne
insb
dec
sub
adc
xor
lahf
xor
adc
imul
das
and
push
enter
xchg
mov
cmpsl
xor
fsubr
in
add
add
push
daa
xchg
fcmovnu
cmp
in
cmp
sbb
lea
inc
push
xchg
fidivrs
out
sub
mov
sub
push
outsb
cli
mov
jno
or
lret
dec
dec
jp
mov
jbe
sub
xor
gs
sbb
bound
nop
cmpsl
xchg
dec
int3
jb
bnd
leave
daa
mov
hlt
pop
inc
outsl
aaa
loope
mov
jno
and
test
and
mov
das
sub
shll
mov
fistpll
mov
dec
pop
fimuls
hlt
aad
fstl
insl
pop
negl
fwait
jnp,pn
jno
mov
std
sti
pop
je
call
jp
add
loopne
jmp
fisttps
add
enter
push
call
insl
adc
sbb
xchg
mov
rcl
data16
or
pop
mov
cmc
cwtl
cwtl
pop
dec
std
mov
sbb
dec
dec
sbbl
xchg
mov
ficomps
sbb
push
ret
adc
push
pushf
into
loopne
cli
sbb
je
adcl
stos
xchg
dec
lahf
xor
lcall
and
js
inc
out
cmp
fidivrs
rclb
cwtl
cmp
notl
enter
sub
cmp
cmpsl
cmc
stos
test
sub
outsb
cmp
shll
cltd
pop
mov
adc
les
nop
jne
icebp
es
and
and
rcr
das
pop
xor
les
gs
and
cld
adc
lret
pop
shlb
psadbw
pop
shlb
cmpb
fdiv
xchg
cmpl
mov
adc
sub
outsl
and
adcb
cmp
inc
xlat
or
sub
mov
jne
es
cmp
insl
jno
cmpsl
xchg
fcmovnbe
push
or
dec
ret
jp
imul
or
test
ds
js
sarl
jp
loope
dec
mov
in
inc
ror
cld
dec
repnz
sbb
mov
lret
cmp
add
add
jae
ss
cmpsl
add
sub
je
rcrb
ds
cmp
sub
int3
test
mov
dec
xchg
sbb
cmp
dec
push
fwait
std
cmp
mov
cmc
or
xor
and
or
dec
xor
sbb
inc
loop
out
pop
sbb
push
loopne
cmp
or
xor
inc
movsb
hlt
addb
stos
int
data16
jg
bound
cmpsb
mov
or
jae
mov
xchg
sub
dec
in
test
iret
xor
aad
mov
or
jmp
icebp
xor
daa
fistpl
inc
imul
mov
and
jg
out
sub
repnz
xchg
mov
jbe
ja
imul
daa
cltd
and
pop
jecxz
sub
in
mov
inc
mov
push
xchg
mov
mov
mov
cmp
ret
mov
fsubrs
pop
xchg
test
dec
movsl
mov
repnz
cmpb
movsl
or
loop
pop
xchg
pop
pop
mov
mov
jo
xchg
inc
fidivrl
popa
cmp
xor
xchg
cmpxchg
in
popa
ss
pop
inc
jnp
shll
jbe
push
in
je
mov
aaa
push
mov
jmp
stc
pop
ror
test
push
shrb
test
jbe
rcrb
sub
jl
adc
push
mov
mov
lock
gs
pop
cmp
mov
in
lcall
sub
xchg
cmc
cmpsb
xor
fwait
mov
cld
adc
xchg
js
jb
std
cmp
fnstenv
dec
xor
jl
xor
mov
xchg
popf
dec
insb
jle
repz
je
movsb
scas
int
adc
and
in
cld
addb
sub
insb
fadds
std
sbb
fisubrl
lock
nop
xor
andb
loopne
repz
stos
popa
push
sub
inc
mov
mov
inc
cmp
das
cmc
jmp
ficoml
adc
ss
xchg
and
test
bnd
mov
mov
sub
or
inc
adc
arpl
aad
incl
push
bnd
cwtl
out
aaa
inc
jecxz
rcr
pop
icebp
je
cli
or
xor
jb
das
or
mov
repnz
adc
mov
mov
leave
outsl
adc
or
dec
lret
adc
xchg
mov
cmpl
pusha
scas
sbb
jne
xorl
mov
sbb
mov
call
ja
jb
mov
ljmp
pop
rcll
sarb
les
inc
mov
ds
cmp
pop
push
mov
aad
gs
xchg
rclb
cwtl
add
cmp
cltd
std
cs
ja
pop
jge
lret
rorb
ret
push
scas
out
or
dec
push
cmpsb
nop
push
aam
fists
mov
pop
popf
xor
loope
inc
inc
push
andb
dec
pop
cmc
add
add
fidivrl
cld
mov
inc
push
sub
cli
sub
lret
pop
xorb
cmc
popf
or
xchg
fcompl
in
les
fidivrs
sbb
cmpsl
rcll
iret
inc
rclb
jle
adc
push
xor
es
sbb
ret
arpl
push
push
sbb
fs
pusha
nop
aad
and
mov
and
jmp
aaa
adcb
jmp
add
mov
fs
push
push
mov
sar
mov
and
push
ret
sbb
mov
pop
pop
add
push
rorb
sub
movsb
out
jmp
fs
mov
sub
outsb
inc
fwait
cmpl
lea
xor
sbb
push
xchg
clc
les
mov
xorl
addl
cmp
push
inc
xor
leave
jbe
bound
push
mov
or
lea
sahf
jge
sar
ss
dec
xchg
inc
xor
jp
jo
subl
mov
das
inc
or
mov
sub
sbbb
and
or
cltd
inc
lret
jmp
fadds
add
jp
mov
test
in
sub
inc
jne
stos
insb
in
aaa
mov
stos
cmp
pop
mov
mov
icebp
mov
push
push
cmp
les
mov
xchg
outsb
adc
cmp
outsb
test
mov
hlt
scas
mov
in
ret
data16
mov
pop
add
ret
mov
mov
push
mov
clc
adc
bound
jae
mov
test
data16
fs
in
and
xchg
pop
xor
mov
dec
out
dec
loopne
test
push
mov
ds
sub
repz
lock
sbb
int
mov
and
xchg
aam
scas
mov
arpl
jb
add
std
xor
leave
test
sub
pop
movsl
xchg
xor
mov
psllw
lahf
adc
lds
movsb
jae
roll
paddd
nop
cmp
enter
insl
cmp
scas
xor
lods
add
inc
add
sub
or
xchg
cmp
pop
popf
or
rolb
mulb
rorb
cmp
test
faddp
adc
sub
mov
test
loope
xchg
bound
xor
dec
je
into
mov
pop
mov
je
xlat
imulb
lret
sbbb
mov
lahf
inc
addr16
icebp
and
nop
xchg
outsl
pop
pusha
aam
test
jo
std
jmp
dec
aas
shll
ljmp
lret
pop
pusha
push
jg
and
sub
jmp
lock
inc
cmp
cmp
dec
addl
daa
popf
mov
scas
xor
popf
jmp
xchg
xor
les
inc
dec
pusha
jl
jmp
jge
xlat
pop
lahf
or
inc
out
and
popa
and
ds
push
adc
enter
dec
repnz
adc
push
push
pushf
test
pop
or
insl
ror
mov
es
inc
sbb
je
sub
xchg
ret
fldt
sahf
cwtl
frstor
stos
and
mov
adc
lods
sbb
ja
cli
push
js
arpl
sbb
xchg
adc
aas
pop
pop
or
fiadds
cmp
dec
inc
sbb
fcmovnb
mov
outsl
push
pop
stos
xchg
mov
pop
andl
test
lds
or
or
mov
push
push
cmp
in
push
into
mov
cmpsl
in
or
mov
insl
sbb
sbb
cmp
inc
sahf
out
cmc
je
js
loopne
clc
pop
sbb
insl
inc
icebp
call
fxch
fcmovnbe
ret
pop
aas
xchg
outsb
fnstenv
mov
pop
mov
imul
flds
ret
mov
mov
dec
xchg
lds
hlt
sbb
rcrb
lahf
movsl
test
mov
add
and
cmpl
lea
mov
push
aaa
cmc
pop
and
mov
add
std
call
pop
adc
fdivrs
xchg
emms
aad
or
xor
sub
ds
rcr
add
pop
add
iret
das
push
into
das
in
or
insb
xchg
sbb
xchg
mov
mov
sarl
add
in
jl
push
ret
and
fcmove
push
mov
pop
cltd
into
pop
cld
subl
iret
nop
inc
cs
and
adc
test
negb
or
repnz
ret
mov
into
test
sub
aaa
xor
sub
or
push
lcall
dec
ss
add
and
xor
xor
xchg
pop
push
lahf
fdivp
xlat
jae
xchg
stos
cwtl
pop
movsb
dec
jecxz
movsl
outsb
and
add
in
push
inc
aas
jl
mov
dec
adc
xor
idivl
push
pop
push
jecxz
test
sti
mov
mov
sarl
add
scas
dec
xorb
pop
sahf
sbb
xor
mov
hlt
scas
pop
out
outsb
and
add
in
bound
and
cld
pop
mov
mov
andl
adc
mov
xchg
lock
xor
out
fmull
outsl
mov
xchg
inc
or
mov
movsb
sbb
add
mov
pop
xlat
push
jbe
ror
sahf
out
ljmp
pop
mov
adc
sub
push
shrb
repnz
outsb
xor
mov
or
loope
lret
push
lcall
cwtl
aad
inc
filds
push
inc
gs
js
daa
pop
mov
mov
fldt
pusha
jp
pop
cmpsl
xchg
bound
sbb
sub
rcrb
daa
movl
jb
scas
icebp
xor
add
cmp
loopne
aaa
xor
mov
and
popa
jp
mov
cmp
aam
or
andl
xchg
in
pushf
cmp
int3
loopne
stos
pop
fstps
icebp
add
push
inc
dec
movsb
fcmovnu
addr16
sbb
sbb
push
lret
mov
xor
mov
aad
dec
int
sbb
ret
test
pop
popa
arpl
or
je
fildl
scas
dec
inc
mov
mov
sbb
shl
stos
sbb
and
aaa
jle
and
adc
fimull
inc
jle
das
leave
insb
pop
out
fildll
js
push
jo
cli
nop
add
push
mulb
gs
sbb
pop
out
sti
in
push
xorl
xchg
fistl
jo
mov
cmpsb
inc
mov
popa
and
cmp
std
sti
test
in
sub
cld
push
addr16
fwait
mull
scas
push
push
rorl
shrl
aad
or
lock
scas
leave
xchg
dec
sbb
adc
adc
push
mov
mov
fcmovnbe
icebp
sub
xchg
pop
sub
or
xor
adc
popa
jecxz
push
pop
cmp
loop
rcll
xchg
xchg
push
and
cmp
sbb
aaa
in
cwtl
inc
int3
into
lds
and
icebp
neg
icebp
cmovg
leave
dec
inc
mov
inc
jbe
aas
cmp
and
stc
dec
or
add
pop
pop
popa
rolb
and
stos
fidivrl
stc
cmp
les
add
lods
dec
inc
mov
add
clc
push
outsl
scas
sbb
jbe
mov
xor
stos
push
push
cli
bound
lods
mov
add
rorb
adcb
out
idivl
mov
rol
pop
or
mov
pop
jle
jge
adc
pop
icebp
dec
mov
fcmovnb
daa
mov
rorl
pop
xchg
pop
and
subl
push
sbb
call
cwtl
out
xchg
xor
adc
outsl
dec
jmp
pushf
dec
test
dec
pop
mov
xchg
je
cmp
sar
sub
jae
push
adc
or
fiadds
pop
icebp
mov
cmp
out
stc
push
mov
jo
shll
sub
data16
xorl
scas
and
cmp
fnsave
dec
jp
sub
mov
sbb
clc
or
add
outsl
pop
adc
divb
in
test
ret
test
inc
repz
sahf
push
and
adc
iret
movsl
mov
or
sbb
js
mov
xchg
cld
add
pop
adc
das
jge
rorb
nop
std
loope
mov
sti
xchg
mov
cs
out
test
sbb
mov
cmp
xchg
scas
inc
pusha
add
les
push
sub
mov
in
inc
and
movsb
cld
xlat
rorb
push
sub
fisubs
mov
sbb
data16
adc
cld
inc
movsl
pop
inc
mov
mov
adcb
jne
aaa
adc
pop
inc
ja
nop
fnsave
ret
pop
not
xchg
or
jp
sbb
jg
pop
push
sub
adc
cmp
enter
daa
jno
jecxz
mov
cmp
cmpsl
adc
aad
aam
push
adc
cmp
jb
inc
jbe
clc
jp
adc
scas
outsl
cs
insb
and
add
cmp
cmc
add
sbb
orl
add
add
outsl
scas
je
mov
push
and
jmp
mov
xor
jmp
outsb
fmuls
inc
out
mov
jmp
rclb
dec
cltd
or
mov
pop
jae
pop
push
push
or
xor
sbb
mov
cmpsb
jns
push
sbb
orl
call
insb
aam
cwtl
cld
test
cwtl
inc
sub
pop
xorb
dec
cs
adc
adcl
xchg
sub
out
ret
push
shl
outsl
xchg
xor
leave
jb
cld
flds
roll
and
cmp
inc
push
push
loop
inc
xor
dec
sub
xorl
pop
cmp
mov
jg
mov
stos
pop
lret
leave
leave
pop
scas
out
stos
mov
inc
ret
xlat
mov
mov
mov
cld
xchg
scas
pop
mov
popf
daa
js
pushf
and
sub
jmp
fwait
outsl
outsl
lock
fwait
mov
or
and
cmpb
push
popl
mov
movsb
jp
adc
sbb
pop
add
sbbl
or
adc
xchg
fldenv
cmp
xchg
or
cmp
data16
jecxz
xor
xchg
ja
notb
sbb
outsb
jmp
sub
mov
clc
fldcw
ret
lods
dec
or
sbb
push
addb
mov
sub
cld
push
aad
pop
or
inc
mov
mov
or
adcb
clc
mov
or
lds
mov
sbb
pop
test
imul
xchg
mov
popa
and
repnz
mov
dec
jg
out
push
in
testb
loop
inc
stos
iret
sbb
cmp
imul
mov
inc
xor
rclb
and
and
mov
dec
push
pushf
push
fistpl
jg
sub
loopne
push
push
xchg
sbb
and
inc
ljmp
xchg
hlt
xorl
xor
mov
dec
or
jl
xchg
push
pop
stos
mov
arpl
and
data16
jo
sub
mov
in
loop
push
scas
xor
mov
repnz
bound
movsb
cmpsb
mov
mov
jbe
push
ret
mov
push
xchg
pushf
and
clc
shl
jmp
inc
adc
mov
lds
and
imul
jp
or
pusha
cli
lret
pop
lret
in
push
lea
outsl
dec
lods
cltd
xchg
fisubrs
sbb
adc
add
ds
mov
sub
inc
test
push
in
mov
add
rol
add
sub
pop
dec
sub
pop
mov
aas
mov
popa
sti
sar
stc
pop
lea
cmp
dec
xor
cld
pop
push
sbb
add
mov
iret
outsl
push
cli
arpl
xchg
add
fildll
jae
sub
inc
xor
add
lahf
adc
mov
and
in
adc
xor
loopne
lods
lahf
into
mov
aad
jl
enter
addr16
sbb
stos
aas
push
mov
fcompl
mov
ja
fstps
scas
jecxz
cltd
outsb
inc
and
mov
sub
js
adc
arpl
or
shr
cmp
sahf
jmp
lods
std
cmpsb
cmp
sub
popf
and
clc
fbstp
sbb
jnp
mov
lcall
fnstcw
xor
ret
inc
sbb
xchg
inc
repz
fstpt
insl
mov
xor
cmpsb
xlat
mov
iret
mov
mov
in
iret
push
repz
daa
mov
jo
or
sahf
loope
push
inc
leave
scas
ret
outsl
rorb
cmpsl
aas
lcall
cmc
add
add
rcll
sbbl
add
jno
mov
outsl
sbb
lcall
in
inc
stc
fsubrp
fisubs
inc
jge
mov
sbbl
es
xchg
push
aas
jne
cmp
lcall
loope
cmp
subb
sub
pop
push
mov
add
lods
loope
sub
loopne
adc
mov
repz
mov
push
loop
data16
movsb
sbb
daa
dec
data16
and
cld
inc
je
scas
mov
test
mov
add
int
aad
and
pop
insb
mov
imul
xchg
sbb
jno
lret
nop
loop
jl
push
pop
xchg
inc
aam
ret
sub
lahf
je
xchg
push
jge
mov
std
xor
xchg
loop
iret
and
pusha
xchg
aaa
jbe
imul
mov
and
cmp
jns
outsl
cmp
xor
xorb
fs
xor
out
mov
lret
arpl
jmp
cmpsb
sbb
inc
xor
and
xor
pop
and
call
xchg
rolb
ds
sarb
subl
mov
rolb
lcall
inc
xchg
cmpsl
fimuls
mov
out
clc
mov
and
add
jb
imul
inc
and
cmpsl
xorb
aas
lret
dec
xor
dec
addb
inc
jg
cmp
scas
sub
aaa
push
nop
jmp
pop
push
jo
iret
mov
mov
pop
sbb
dec
jb
add
clc
negl
das
scas
jno
push
or
sbb
jns
mov
lahf
mov
jo
xchg
or
dec
shll
fs
imul
clc
xorb
mov
mov
icebp
roll
jno
int3
sbb
and
iret
push
in
pop
mov
sbb
jle
mov
pop
jne
ret
and
pop
jge
xchg
adc
jecxz
mov
jnp
enter
pushf
call
in
or
loopne
addl
push
lahf
popa
dec
test
add
dec
cld
xor
rol
lea
dec
jg
inc
ss
push
data16
jns
das
je
dec
rorl
cmp
dec
sbb
xor
jnp,pt
add
mov
out
jmp
push
das
cmp
or
imul
sub
fcoml
or
test
jno
add
cmp
xchg
in
jp
and
adc
jle
aas
cmpsl
inc
pop
std
push
xchg
sti
sub
testl
fwait
imul
dec
inc
push
adc
or
xor
inc
int3
cltd
adc
aad
add
lea
js
shlb
and
add
lret
fiaddl
xor
outsl
dec
mov
ds
pop
addr16
push
and
out
movb
adc
mov
adc
scas
xchg
or
es
scas
jae
jo
aas
jecxz
cmp
xor
test
pop
or
subb
sbbl
cwtl
imul
rcll
stos
push
inc
stos
sbb
push
xor
mov
fcmovnu
subb
and
mov
adc
push
sbb
dec
outsb
jmp
bound
cld
mov
fldlg2
xchg
faddl
or
fs
xlat
in
pushf
xlat
insl
fsubl
pop
push
push
add
cmp
incb
aaa
sub
out
inc
loop
push
sbb
jmp
pop
loopne
xor
std
sbb
outsb
rorb
cmp
or
cmc
jmp
addb
add
add
pop
and
mov
or
ljmp
test
sbbl
scas
and
jp
push
xor
mov
orb
xorl
loope
loope
pop
fadds
negb
mov
pushl
mov
loopne
call
pusha
jo
dec
aad
orb
add
sbb
dec
jne
inc
popa
add
mov
dec
cmp
fdivr
shl
mov
or
sub
cmp
dec
pushf
jnp
sbb
mov
outsb
test
push
mov
or
add
rorb
in
push
add
movsl
sub
dec
bound
incl
jb
add
dec
adc
inc
adc
add
filds
push
add
test
pop
cmc
jbe
fs
xor
sti
outsl
ret
dec
sbb
dec
mov
into
mov
fnstsw
lcall
xorb
sub
mov
add
dec
jg
cs
push
icebp
fiaddl
popa
popa
inc
jae
pop
dec
push
popa
cmp
or
and
pop
pop
inc
cld
ja
hlt
push
push
push
push
jo
push
push
inc
pop
pop
call
add
dec
inc
pop
sub
adc
in
js
les
movl
xor
xor
mov
aaa
sahf
pop
aaa
lods
or
inc
mov
add
movsl
xor
les
cwtl
outsl
mov
call
mov
mov
pop
fldcw
insl
enter
in
mov
ljmp
andl
je
jo
push
inc
mov
push
inc
in
pop
movsb
xorb
rcr
repz
pop
pop
cmp
aas
inc
incl
push
lods
push
imul
inc
into
push
adc
inc
out
push
inc
ja
jbe
fs
loopne
mov
xor
gs
cmp
add
sub
dec
and
std
nop
cld
push
adc
pusha
push
cmpl
sub
adc
loope
loop
mov
ds
jl
xor
or
insb
jne
mov
pop
push
ja
fsubrl
add
repz
mov
sub
jmp
outsl
pop
fidivl
mov
push
xor
test
fisttpl
clc
xchg
push
outsl
insl
lret
test
fs
dec
ja
mov
lods
pop
sub
mov
or
mov
mov
movsl
cld
jmp
add
push
cmpsb
aaa
or
lds
ss
pop
pop
les
inc
hlt
clc
push
fsubrs
imul
adc
imul
jo
adc
adc
and
sub
sahf
dec
dec
imul
xor
inc
bound
sti
push
push
inc
add
js
clc
popf
add
aaa
push
jae
mov
xchg
dec
xchg
dec
mov
cmp
ja
push
scas
adc
sahf
lea
in
xor
loop
lock
cmp
cmpsb
jbe
shlb
loopne
imul
dec
jo
adc
lea
push
sub
inc
int3
cmp
mov
insl
push
push
mov
outsl
jbe
movsl
dec
push
ret
sub
adc
mov
mov
add
and
push
jno
pop
fsubrl
mov
mov
inc
mov
xor
pushf
in
sub
lea
gs
adc
cmc
mov
test
shr
jb
inc
addr16
sub
mov
cmp
jne
sub
push
jae
loopne
roll
aaa
aaa
add
push
xchg
out
and
outsl
insl
jbe
and
das
je
dec
inc
pop
dec
pop
or
les
btc
inc
cmp
pop
das
add
jmp
in
out
jno
inc
lock
add
movsb
sahf
not
std
add
je
dec
push
dec
jmp
pop
pusha
xchg
push
xor
push
xor
stc
pusha
sbb
mov
lock
cs
ret
sbb
pop
pop
addl
cmp
fs
xor
jg
add
cmp
js
dec
mov
int
pop
call
fst
mov
dec
mov
and
hlt
lods
or
lea
sbb
sbb
es
push
fildl
pop
fsts
cli
add
sub
sub
mov
loopne
sbb
jmp
dec
dec
hlt
push
mov
ss
add
pop
mov
fs
popa
outsb
hlt
or
inc
jo
outsb
inc
add
fs
sahf
add
js
push
pop
and
fs
xor
xor
outsb
sti
pop
pop
out
push
shl
push
dec
push
jns
jl
and
in
xor
xor
xor
pop
setne
xlat
push
outsb
dec
lods
incl
add
jne
fsts
ljmp
subb
clc
adc
jne
leave
testl
mov
loopne
cmp
pop
insb
xchg
add
mov
pushf
pop
nop
mov
test
xor
push
adc
xor
mov
lods
jo
rcrb
repnz
pop
add
sti
or
add
outsl
push
fcmovu
addr16
imul
jle
fldl
adc
lret
orb
outsb
mov
ds
mov
mov
mov
cmpsl
add
stos
xchg
loopne
pop
scas
mov
jb
call
mov
or
pop
mov
mov
adc
dec
cmp
subb
or
bound
test
mov
sub
add
dec
inc
testl
ja
pop
les
test
jle
bound
ret
cmpsb
jp
or
sbb
and
inc
jne
push
stc
mov
popf
data16
sub
arpl
repz
cmp
fstpl
or
xchg
cmpsl
leave
sub
or
xor
insb
pop
rolb
sbb
nop
sub
jnp
jb
loop
jne
and
testb
aas
push
or
pusha
push
imul
mov
iret
movntsd
rol
dec
icebp
outsb
rorb
icebp
sbb
adc
fidivl
xchg
outsb
inc
test
imull
movsl
fsubs
mov
int
cmpb
jecxz
pop
cld
mov
lret
push
push
add
cmp
insl
aam
xor
jecxz
fistpll
jo
hlt
and
das
mov
xchg
loop
fcompl
add
dec
xchg
inc
gs
andb
enter
mov
adc
test
pop
incb
mov
push
push
push
popa
xchg
lcall
fmul
test
dec
add
add
jmp
or
xchg
dec
icebp
mov
rcrl
mov
xor
mov
mov
xchg
push
jns
jne
outsb
ss
xor
aam
cmp
sub
in
and
push
clc
js
cld
mov
rol
add
vpaddw
lock
or
fstpt
mov
bound
in
jns
add
sub
pop
es
cmp
or
lods
addl
push
in
int
fisubs
rcll
and
or
daa
dec
mov
dec
aam
xchg
daa
movsl
inc
pop
in
scas
jle
fnsave
sbb
dec
jg
das
cmc
sti
iret
iret
xchg
and
mov
mov
xchg
mov
xor
sbb
cmp
inc
fstp
push
int
pop
lods
call
pop
js
push
jns
insb
add
sbb
xor
mov
fwait
mov
mov
cltd
push
push
mov
adc
fsub
imul
pop
xor
push
cmpsb
mov
lods
sub
outsl
adc
imul
adc
cmpsb
mov
dec
jle
dec
fildl
mov
and
outsl
jmp
in
call
test
or
adc
sub
add
fcmove
movsb
insb
lds
mov
sub
push
jb
adc
xchg
push
insl
out
mov
and
dec
sbb
mov
jge
inc
test
bound
les
rolb
jbe
jecxz
lahf
dec
push
push
or
adcb
jno
mov
inc
xchg
pop
addr16
add
mov
inc
xor
push
movsl
ror
mov
adc
pop
lods
xchg
pop
push
lods
mov
rolb
loopne
jbe
sub
pop
sahf
adc
lods
stos
mov
cmp
xchg
push
and
add
faddl
pop
push
fidivs
mov
or
xlat
sub
out
push
sub
cmpsb
stc
pop
or
cltd
test
pop
rorl
clc
ret
lods
inc
adc
fwait
mov
roll
ss
stos
hlt
xor
out
std
adc
mov
jmp
sub
fldln2
sbb
pop
pop
mov
jl
sub
imul
push
sahf
les
das
sbb
hlt
mov
lods
sbb
scas
out
rorb
out
cmpsb
or
fidivrs
or
cli
sbb
fnstenv
ds
or
clc
adc
or
pop
mov
xchg
dec
aas
mov
pop
pop
xchg
sti
pop
icebp
mov
push
xchg
in
test
in
test
pop
popf
subb
mov
ljmp
cmp
adc
cmp
mov
popf
addb
test
adc
aaa
rorl
ror
cld
dec
js
inc
mov
mov
push
sbb
jmp
jno
ffree
xchg
dec
sarl
push
sarl
nop
dec
adc
and
cmp
push
mov
sahf
call
or
fistl
pushf
pop
push
and
dec
notl
inc
jmp
pop
or
add
lods
cmp
sub
cmp
mov
popf
iret
push
cltd
lock
scas
fiadds
pop
xchg
rcrl
aaa
sbb
or
hlt
mov
in
arpl
pop
loop
orl
adc
push
divl
and
imul
mov
daa
sub
xchg
scas
in
adcb
sbb
test
gs
xlat
pop
out
mov
jl
mov
xchg
test
sbb
jle
jg
outsb
jg
mov
lds
std
shrl
sahf
call
sbbb
xchg
loopne
ret
outsl
mov
adc
or
mov
pop
add
daa
xchg
lret
mov
jne
imul
inc
mov
xchg
mov
mov
insb
or
mov
scas
xchg
or
notb
dec
pop
push
lahf
jg
insb
pop
fisttpl
and
xchg
out
inc
popf
and
sub
push
xor
mov
fwait
sbb
insb
mov
add
xor
dec
xchg
jmp
mov
mov
push
ret
dec
out
jbe
scas
loopne
push
dec
aaa
mov
je
insl
aaa
and
inc
int3
fimull
imull
ret
push
loopne
sbb
ret
loope
decb
cltd
xchg
incl
loop
dec
dec
loope
ret
lcall
mov
jg
mov
add
sbb
addr16
push
cmpsl
sub
adc
sub
pusha
jmp
shll
jmp
cld
adc
add
or
adc
add
loopne
loope
push
cmpsl
inc
adc
mov
xlat
fsubl
push
mov
pop
sub
xchg
sbb
and
cs
mov
inc
xchg
rclb
push
cli
cmp
jmp
dec
dec
mov
xchg
xchg
sbb
jge
mov
xchg
or
nop
add
add
mov
sbb
mov
lahf
push
cmp
daa
mov
aad
jne
test
pop
sub
out
cmpxchg
push
dec
mov
sbb
repz
push
int
mov
inc
cmpsl
adc
in
dec
lds
das
stos
into
xchg
push
jg
or
mov
inc
stos
enter
sbb
adc
popa
dec
pop
pop
mov
adc
push
sub
xor
insb
or
lods
mov
or
out
inc
add
cmp
inc
sbb
pop
dec
sub
and
ret
xchg
inc
negl
adc
pop
inc
imul
pop
shl
mov
aam
pop
iret
cmp
xor
fadd
jne
rolb
xchg
inc
cmp
jno
sbb
fdivs
pop
repz
dec
jge
and
in
cmp
mov
cld
jbe
and
mov
cmp
aam
mov
mov
les
and
insb
ffree
fisttpl
xchg
jp
dec
inc
popf
loope
mov
jg
add
into
leave
mov
lret
cmp
jl
mov
nop
cwtl
mul
bnd
inc
mov
jl
flds
push
sub
jno
lock
adc
rolb
fidivs
xchg
pxor
or
mov
add
ds
and
push
add
fs
jns
loope
les
pop
testl
ja
xchg
add
fs
sub
shlb
pop
jo
ja
sbb
test
sub
and
xor
jnp
cmp
adc
sbb
negl
mov
mov
push
xor
loopne
cmp
dec
nop
adc
sbb
outsl
lds
jg
sub
xchg
rolb
sub
les
cs
lock
dec
lsl
inc
cmp
jle
inc
loope
push
cmp
cmovl
fdivrl
dec
add
inc
adc
in
sti
cmc
cmp
or
and
push
or
cltd
scas
stos
mov
inc
icebp
xor
jb
das
jmp
push
xlat
outsl
fwait
int
insb
or
out
lret
aaa
mov
inc
iret
outsb
add
cmp
and
inc
pop
jne
es
adc
push
jo
fsubl
int
push
push
cmc
cmpsb
mov
aaa
cmp
mov
ja
in
jle
xchg
std
add
ret
xchg
les
rorb
jo
roll
cli
lds
add
aam
sub
in
rorl
add
popa
xchg
jge
xor
aad
pop
outsl
outsl
outsb
mov
xchg
or
mov
scas
fiadds
dec
push
aad
pop
popa
sahf
cmp
fwait
xchg
ret
mov
lods
and
cmp
mov
cmp
in
push
pusha
js
jle
add
outsb
jl
sarb
fidivrl
dec
mov
ss
test
mov
mov
aaa
xchg
test
or
shlb
cmp
arpl
jl
fcmovnb
or
std
call
adc
js
stos
push
mov
mov
ficoml
or
dec
fbld
ja
push
xchg
xchg
inc
sub
pusha
push
call
aas
lea
mov
mov
jle
jge
xor
outsl
outsl
mov
mov
ret
inc
or
mov
cmp
fdivrs
mov
incl
lahf
sbb
inc
dec
bound
sub
jmp
outsb
or
in
mov
cltd
aaa
jo
jbe
lea
cmpl
xchg
shr
pop
adc
test
push
and
repnz
push
xlat
sbb
xchg
nop
fsubr
push
aaa
shrb
jl
gs
mov
mov
jb
in
sbb
cmp
mov
orl
cwtl
mov
in
call
mov
dec
and
xchg
ljmp
inc
add
or
pop
enter
pop
xor
inc
jmp
mov
js
push
sbb
sbb
fiadds
shll
cltd
sbb
pop
out
repz
sbb
mov
xchg
repz
or
roll
in
nop
push
pop
add
add
and
mov
mov
ja
add
mov
fdivs
inc
pushf
rcrl
cmc
daa
andl
jmp
push
mov
pop
iret
rolb
stc
mov
dec
fincstp
mov
xor
cmpsl
out
std
add
inc
pop
xor
loopne
je
int
insl
loop
xchg
popa
mov
dec
inc
add
cli
out
rsm
pop
jl
mov
pop
and
cmp
xchg
mov
sbb
inc
adc
addl
sub
dec
xchg
mov
or
fisttpl
js
mov
cld
lret
arpl
ret
aam
dec
adc
cmp
inc
push
xchg
jl
loopne
add
push
sbb
mov
in
cli
or
and
and
or
icebp
mov
sbb
push
cmp
fidivs
sar
push
mov
je
stc
gs
movb
xchg
or
add
jp
jbe
outsl
sub
fists
and
test
lea
mov
rcrb
aaa
lahf
popa
sbbl
and
shll
or
fistpl
or
sub
mul
inc
and
add
or
inc
mov
fstp
std
stos
jge
xorl
xor
mov
out
enter
sub
jae
pop
outsl
cld
or
pop
xor
sub
xchg
pushf
dec
mov
aad
subb
mov
das
lcall
mov
push
push
cmp
lcall
clc
orl
loopne
mov
sbb
cmp
xor
cmp
mov
cld
cmp
or
add
mov
lods
rcl
movsl
outsb
stos
push
jne
pop
push
inc
dec
or
mov
push
adc
fnstsw
scas
cmp
xor
xchg
andb
outsl
mov
jno
dec
dec
mov
das
push
test
or
mov
div
in
int
jmp
xchg
mov
in
mov
loopne
aam
sub
xlat
leave
and
mov
push
shrb
adc
mov
sbb
inc
ss
orl
and
jmp
cmp
inc
cmp
repnz
pop
mov
push
dec
lea
mulb
inc
adc
ljmp
pop
stos
es
outsl
lahf
jp
outsb
mov
mov
sbb
xorb
or
push
add
hlt
cs
push
imul
divb
es
pop
in
or
ds
adc
sar
adc
jb
popa
test
paddw
rcll
add
xchg
cmp
pop
iret
adc
mov
lods
cwtl
xor
lcall
insb
xor
aas
sub
loope
sub
je
movsb
rcl
xor
jmp
push
repz
loope
data16
pop
mov
imul
sbb
or
xor
loope
push
into
sub
xor
cltd
mov
leave
loop
je
js
pop
jbe
cli
pop
jp
cmp
fdivrs
xor
outsl
outsl
fisttpll
test
dec
adc
push
adcb
out
sub
arpl
stos
sbb
mov
sub
sbb
out
xorb
nop
add
out
imull
and
hlt
out
adc
adc
cmp
sbb
iret
shl
in
in
out
lret
push
loope
fcmovb
sbb
divl
gs
sub
es
ficoms
cmp
or
aam
push
lods
cmp
leave
hlt
imul
xor
and
xor
push
addl
bound
dec
leave
decb
dec
pusha
pop
iret
leave
adc
ds
pop
pop
mov
pop
fcompl
mov
add
or
and
push
fwait
mov
sub
or
test
or
cmp
add
adc
mov
inc
mov
or
push
popa
lds
adc
nop
orl
repz
repnz
insl
sub
orb
mov
call
mov
jmp
jbe
xchg
cmp
add
inc
push
push
insb
loopne
loope
out
dec
aam
ljmp
lds
xor
jb
pop
mov
add
xor
mov
lcall
push
inc
mov
pusha
pop
sti
xchg
dec
pcmpeqd
xchg
dec
aad
dec
or
xlat
mov
pop
sbb
xchg
mov
push
sbb
cmpsl
inc
mov
imul
pushf
or
adc
fwait
popa
lods
jmp
mov
icebp
sub
outsl
in
dec
out
adc
adc
mov
push
imul
hlt
test
push
xlat
push
push
pop
les
dec
ret
jecxz
dec
flds
ds
mov
add
jne
ljmp
stos
or
or
sbb
cltd
lock
fcomip
enter
lds
sub
movsl
mov
mov
incl
and
add
fsubr
dec
mov
add
inc
xchg
mov
push
leave
sar
movsb
push
jmp
mov
in
add
lret
les
daa
cli
xchg
and
nop
push
pop
add
mov
addr16
call
repz
add
int3
xor
out
sub
jb
test
dec
mov
fdivs
ficoms
xor
mov
push
add
rclb
add
loop
fstpl
and
loopne
inc
shlb
inc
mov
fwait
es
je
mov
push
mov
sbb
iret
mov
push
bts
jge
out
fs
shr
icebp
enter
jnp
or
sbb
xor
push
dec
sbb
imul
pop
mov
push
mov
inc
cs
sbb
adc
popa
movsl
test
mov
fistpll
dec
test
repnz
psubsb
mov
ljmp
jbe
ret
popa
mov
jo
mov
xchg
sbb
sti
mov
xlat
faddp
push
and
test
cmp
outsb
jp
add
xchg
dec
insb
gs
faddl
or
insl
ja
mov
mov
and
sahf
mov
mov
jns
fs
pop
icebp
mov
sti
mov
cs
inc
jge
rclb
sub
mov
mov
and
lds
call
ret
je
push
repz
js
fnsave
lock
pop
jns
xchg
mov
ds
iret
fadd
pop
mov
and
test
or
inc
jg
add
fcomi
aad
hlt
jl
dec
fucomi
mov
mov
ret
xchg
lret
xor
shlb
add
pop
and
mov
dec
rclb
dec
adc
cmp
test
adc
rcrl
std
and
cli
push
pop
stos
int3
push
push
leave
lahf
popa
jae
push
imulb
cltd
jmp
fbld
in
pop
mov
xor
cmp
mov
je
mov
cwtl
popl
sbbl
aam
mov
out
movsb
inc
enter
ja
sub
insb
mov
pushf
movsl
or
bound
imul
test
push
cmp
pop
outsl
in
adc
call
sub
mov
iret
sub
add
das
call
sahf
cmpb
adc
addr16
loopne
inc
or
aas
or
shlb
mov
test
and
ror
sub
rcr
xchg
mov
stc
inc
xchg
lcall
incl
cmp
xchg
loopne
cltd
pop
orb
mov
xchg
push
sub
mov
fadds
or
lock
daa
ljmp
cmp
dec
scas
xchg
or
cld
shlb
out
ret
data16
xor
ss
mov
imul
jg
cli
shlb
dec
inc
mov
and
push
sahf
or
fcoms
lock
inc
test
lea
jle
shrb
mov
mov
pop
lret
pop
cli
sbb
pop
jp
nop
stos
rorl
je
stos
loope
test
movsl
pop
lock
inc
out
push
daa
mov
jbe
pop
pop
fsubrp
lahf
loop
insl
dec
inc
add
dec
ret
mov
ret
test
notb
jecxz
mov
repz
xor
outsl
mov
pop
into
cmp
inc
nop
insl
xchg
daa
mov
outsl
push
add
dec
data16
outsb
call
das
push
and
aam
out
push
and
or
sbbl
ret
test
mov
inc
cli
int
addr16
cmp
arpl
xchg
in
int3
scas
jp
mov
aad
mov
jmp
shlb
or
xchg
fs
out
ret
ja
cli
jae
or
ret
pushf
and
jbe
xor
pop
out
pop
rcll
lahf
jle
sbb
imul
lock
mov
es
push
mov
pushf
mov
cli
dec
addr16
dec
fnstsw
lds
mov
mov
outsb
outsl
jb
adc
loope
fiadds
sbb
shll
scas
or
cmp
inc
pop
dec
scas
test
xchg
or
and
or
test
cmp
fimuls
shlb
gs
testb
dec
xchg
ficomps
inc
mov
aaa
dec
loopne
rorb
sub
mov
xchg
inc
aaa
dec
jg
cld
dec
jns
cmp
xor
bound
inc
cmpsb
cld
push
aad
sbb
addb
leave
jb
push
sbb
std
adc
in
shr
ss
mov
mov
ss
cs
cltd
mov
jne
pop
outsb
push
je
dec
in
test
lds
xchg
js
mov
icebp
imul
inc
pop
pop
stos
and
scas
loop
js
jbe
sub
cwtl
aad
hlt
and
cmp
in
pop
out
mov
jmp
stos
pop
stos
addr16
movsb
sbb
out
mov
notl
fwait
pop
xor
mov
jge
or
mov
jne
orl
xchg
mov
imul
clc
pop
aam
ss
add
lock
lahf
pop
sub
lcall
in
ja
sbb
sbb
loop
pop
mov
sbbl
lret
ds
and
lods
iret
mov
mov
mov
pop
je
jmp
shrb
xchg
fneni(8087
loop
lcall
dec
fwait
subb
mov
ja
lret
jle
push
in
fistpl
incl
jnp
dec
pop
std
daa
add
lock
cli
add
mov
xchg
push
icebp
pop
mov
jp
xchg
or
subl
xchg
jecxz
nopl
lahf
dec
lret
jbe
lahf
mov
dec
jp
adc
jb
cld
mov
or
and
nop
add
inc
gs
xor
push
addr16
xchg
cli
aaa
leave
es
xor
loopne
sub
ds
mov
xor
outsl
fnstsw
mov
mov
shrl
les
and
cmpsb
cmpsl
es
fsts
push
loopne
lea
and
dec
std
ja
mov
mov
adc
jecxz
jno,pt
lea
pop
das
dec
inc
jne
mov
unpckhps
clc
pop
pop
jle
loop
or
jge
cwtl
sub
ror
lods
aas
outsb
mov
and
js
cld
sbb
test
inc
mov
rol
xor
or
clc
leave
aam
cs
insl
xor
ja
pop
stos
xchg
xor
mov
popf
adc
jmp
or
aas
lret
fidivs
or
cmp
jle
lods
jl
enter
sub
mov
mov
add
jnp
xchg
cs
jb
adc
push
add
sahf
data16
xchg
out
jle
mov
arpl
iret
insl
icebp
pop
and
inc
push
push
jle
and
pop
mov
jb
mov
push
pop
or
add
icebp
push
sbb
sbbb
testb
mov
popa
inc
cmp
jns
fsub
pop
js
and
test
orb
andw
std
mov
pop
mov
mov
push
dec
icebp
inc
ffree
les
adc
ljmp
push
ret
test
mov
jg
pop
movsl
fisttpl
inc
mov
cmp
fidivl
xchg
in
inc
iret
or
in
push
sbb
lret
rclb
mov
push
mov
stos
xor
sub
pop
lea
xchg
popa
loopne
mov
jp
test
dec
or
or
pop
dec
imul
call
arpl
movsl
in
xor
inc
inc
push
movsb
test
jmp
in
or
sti
fidivl
and
cwtl
jg
js
mov
sbbl
lods
lods
ljmp
pop
cwtl
outsb
jno
pop
mov
mov
scas
shrb
mov
pushf
push
psubsb
pop
std
add
push
mov
test
roll
and
xchg
test
push
shrb
out
cltd
ss
mov
fwait
popf
out
sbb
movsb
rcl
or
loopne,pt
mov
xchg
cli
jg
dec
push
in
stos
popa
into
mov
mov
rorb
insl
xchg
adc
mov
xor
iret
xchg
movsl
sbb
lret
dec
insb
pusha
push
les
sub
lock
jno
push
fists
outsb
call
mov
cli
xor
ret
mov
mov
pop
or
sub
loop
pop
add
pop
cwtl
data16
lock
mov
test
lock
adc
loopne
push
pop
sbb
inc
sbb
call
jne
jl
lods
dec
mov
adc
jecxz
decl
pop
adcb
mov
cmp
sbb
jp
inc
sub
cmp
rolb
out
sbb
mov
cmp
fldt
add
decb
mov
inc
pop
xchg
test
bound
jb
out
data16
movsl
nop
pushf
mov
outsb
vmovd
jp
pop
or
fwait
out
clc
pop
adc
fstps
imul
loopne
adc
rolb
in
jmp
insl
lds
jb
lds
stos
arpl
aaa
sub
mov
sahf
loopne
jb
pop
aam
jae
outsl
mov
aam
aam
push
xor
out
xchg
mov
mov
testb
cmp
xor
cmp
sahf
ret
mov
js
sti
sarb
xchg
cmc
jno
adc
sti
sbb
push
into
popa
push
jle
push
loopne
or
xchg
push
loope
inc
mov
adc
jne
repz
and
into
push
jg
push
sbb
jne
dec
lea
out
mov
popf
mov
loope
dec
mov
xchg
push
push
mov
push
sbbl
mov
sub
scas
add
mov
mov
popf
and
sarl
fisubrl
pop
arpl
pop
pop
pop
xor
cs
pop
hlt
shll
push
arpl
adc
xchg
dec
mov
lds
or
rcrl
mov
pop
ss
fistpl
xchg
js
cs
sbb
mov
and
push
in
clc
mov
jbe
and
and
aad
jne
je
scas
pmuludq
cld
popa
ss
daa
cltd
push
arpl
sahf
cli
push
test
and
and
cmp
in
ljmp
xchg
sub
xchg
ljmp
imul
mov
scas
ss
push
repnz
jmp
mov
jbe
lcall
shlb
aam
xor
mov
test
shlb
xchg
shrb
loope
out
add
or
adc
dec
jns
sub
ss
xchg
lods
fwait
mov
mov
rcll
insb
xor
xchg
pop
or
xchg
sbbl
pop
mov
jnp
jge
add
mov
dec
adc
aas
fadds
std
inc
das
adc
fcmove
lds
push
sbb
sbb
mov
sti
xchg
add
lea
adc
mov
fcomi
or
xor
imul
jl
and
xor
and
shl
insb
add
aam
fldl
ret
fwait
dec
or
int3
lock
xchg
sahf
loopne
pushf
dec
outsl
add
and
inc
mov
aaa
xchg
add
aas
push
jno
pop
leave
insl
and
in
je
push
push
adc
sub
sbb
sbb
stos
out
rcr
stos
xor
adc
test
iret
cmp
xor
popa
pop
testl
jle
clc
lods
fucomi
std
cmp
lret
pusha
pop
addl
adc
mov
decl
mov
mov
add
test
sbb
out
mov
cwtl
in
lret
cmpsl
sub
cld
add
mov
sbb
divb
mov
notb
mov
push
sub
fnstsw
shrl
shrb
loope
fcomps
push
add
xor
test
shlb
test
or
cmp
mov
adc
std
imul
pop
cmp
cmp
fnstsw
inc
xlat
xchg
and
cmp
sbb
pop
dec
aad
out
push
xchg
sub
out
mov
dec
dec
loope
push
sub
rorl
outsb
repz
sbb
jnp
sbb
roll
mov
hlt
addr16
add
cmpsb
pop
push
pop
dec
inc
sub
fsubrl
sbbb
adc
ret
or
xor
out
scas
mov
xchg
jmp
test
loopne
push
mov
xchg
or
push
div
dec
mov
cmp
sbb
jp
or
fs
nop
mov
popa
das
scas
roll
cmp
hlt
arpl
cld
repnz
scas
sub
std
and
inc
insb
sbb
loopne
mov
lret
jle
test
outsl
loope
data16
test
es
js
pop
setne
gs
insb
inc
pop
stos
out
push
shll
xor
xor
imul
jno
add
inc
pop
addr16
rcrb
dec
xchg
or
leave
cmp
mov
xlat
dec
push
pop
imul
add
cmpsb
movsb
mov
mov
and
or
jb
cli
lcall
sbbl
jmp
call
mov
out
stc
add
outsb
in
rcll
les
aas
push
mov
pop
pushf
daa
mov
out
dec
lret
out
clc
fstps
adc
sub
shll
or
mov
pop
std
pop
js
pop
jp
push
mov
mov
sub
pop
les
gs
out
sbbl
xchg
fcomps
or
bound
push
andl
mov
mov
mov
ds
nop
rcrb
sbb
push
repz
push
repz
dec
orl
add
mov
incl
incb
add
mov
push
aas
ljmp
int
scas
ja
pop
push
test
mov
loopne
cmp
add
ficoml
hlt
pusha
inc
hlt
push
jge
xlat
mov
jecxz
mov
sub
jbe
enter
ja
jbe
or
mov
lds
or
dec
test
loop
lods
insl
adc
insl
or
lea
push
std
popf
and
mov
sti
cwtl
movb
fdivrl
inc
je
rclb
mov
sbb
icebp
popa
pop
push
jne
dec
out
mov
mov
cld
lods
add
inc
daa
das
sbb
sbb
test
scas
jo
adc
add
shll
lds
add
pop
cli
dec
testb
sbb
ja
ljmp
adc
xchg
xor
cmp
dec
mov
push
icebp
subl
and
xchg
icebp
jnp
cltd
lods
lcall
test
je
cs
push
jb
jmp
loopne
movsb
pop
nop
lret
les
mov
push
mov
sahf
aam
mov
movsb
inc
int3
outsb
insb
clc
xor
xor
ret
cmc
pop
xchg
out
enter
or
inc
test
cmpb
mov
lea
cmc
or
xor
das
rcrb
std
or
in
xorl
aaa
hlt
jbe
xlat
sahf
leave
fnstenv
loopne
or
in
call
cld
add
inc
xchg
inc
dec
push
popa
shlb
push
xchg
mov
movaps
fldl
or
lret
roll
call
mov
add
mov
ret
pop
mov
std
and
negl
mov
subl
or
les
addb
into
or
mov
loop
punpcklbw
insl
pusha
daa
xor
add
mov
jge
adc
test
dec
std
mov
outsb
adc
andl
fucom
or
fwait
ret
adc
shrl
adc
aaa
call
pop
sahf
inc
jmp
aas
and
loopne
jnp
adc
jle
and
inc
cmpsb
cli
decl
pop
or
xor
and
icebp
dec
mov
mov
sbb
ljmp
stc
or
repz
leave
popf
push
hlt
cwtl
repz
lret
jge
roll
cmp
hlt
in
cmpsb
fs
jp
shl
shll
mov
xorl
push
dec
loopne
cmp
cmpsb
mov
or
adc
or
and
mov
jbe
jnp
enter
xor
in
pusha
push
xor
sbb
and
cmp
or
repz
dec
or
mov
jbe
mov
fisubs
sub
adc
adc
sahf
aad
mov
push
sub
fcomi
mov
xor
xor
mov
xor
mov
cs
cmpsl
decl
xchg
outsl
test
cs
daa
call
cmpsb
outsl
repz
mov
mov
mov
push
add
mov
pop
data16
ja
insl
andb
enter
cmp
aas
and
xchg
loop
fisubrs
jnp
push
test
stc
adc
sbb
aaa
mov
enter
je
js
cmpsl
xchg
test
aam
sub
arpl
push
cld
das
jl
es
aad
loop
rclb
adc
jge
pop
fiadds
mov
sbb
lods
addr16
xor
mov
mov
mov
stc
popl
mov
call
mov
movsl
lcall
test
jmp
outsb
and
mov
adc
fildl
mov
dec
outsl
cli
cmpsb
xchg
mov
mov
mov
jne
sbb
dec
adc
and
roll
es
add
mov
int3
mov
push
scas
and
pop
xchg
mov
or
negl
in
and
push
lock
mov
das
je
arpl
fdivs
fsubrl
stc
arpl
mov
or
or
pop
mov
outsb
mov
ret
push
je
mov
test
cmp
mov
push
out
inc
mov
xchg
outsl
fwait
pop
clc
jo
mov
fmull
or
not
popf
es
push
test
mov
iret
imul
sbb
scas
lret
mov
jbe
mov
add
movsl
adc
xchg
ss
adc
mov
fisubrl
ja
add
pop
shlb
outsl
or
inc
outsl
je
push
dec
cmpl
cmp
icebp
sbb
loopne
add
dec
dec
sub
fidivrl
sbb
test
push
and
sbb
sbb
bound
sbb
jb
dec
pop
js
dec
outsl
pop
pop
mov
mov
xchg
pop
fsubr
and
aad
mov
push
rcrb
popa
cs
test
mov
hlt
pushf
push
pushf
fcoms
adc
fsubp
scas
roll
and
xor
or
dec
mov
pop
roll
mov
sti
fistl
jnp
cmp
data16
jl
and
inc
fiadds
fcompl
in
and
xchg
scas
neg
push
je
loop
adc
xchg
cmp
jae
mov
frstor
in
push
jmp
stos
imul
xchg
addr16
rolb
js
loop
mov
fistpll
lea
mov
enter
cltd
mov
loope
add
jno
add
loop
popl
push
fwait
mov
sbb
jns
and
clc
loopne
outsb
aam
divl
out
pop
stos
pop
lret
pop
cli
ret
mov
sbb
ret
addr16
loopne
fwait
inc
pop
lock
das
mov
mov
mov
cli
jne
scas
fimull
lret
push
insl
lahf
pop
add
mov
les
and
fcomp
mov
imul
add
loop
xorb
add
repz
fucom
out
push
mov
mov
movsb
pop
mov
push
mov
push
addw
addr16
dec
pop
mov
pop
mov
jecxz
outsb
jbe
mov
dec
and
pop
xor
lcall
or
mov
lods
sub
in
push
shl
pop
movsl
popf
aas
hlt
decb
adc
sbb
lcall
imul
cli
xchg
scas
rcl
jecxz
lret
mov
outsb
pop
subb
jecxz
jmp
mov
pop
mov
sub
mov
fcmovu
mov
mov
mov
mov
aaa
jg
push
jl
sub
lods
mov
cmovne
sbb
cli
pop
sahf
jb
imul
push
je
sbb
orl
mov
icebp
jle
gs
and
leave
jno
aaa
roll
pop
je
adc
add
jnp
dec
pop
fsubl
inc
stc
stc
pop
xor
loope
or
loop
jo
xchg
inc
pop
mov
pop
dec
mov
mov
mov
sar
enter
and
lock
cs
aam
mov
pop
xchg
gs
push
das
mov
outsl
push
cmpsb
mov
push
cmp
sub
sub
out
repz
adc
inc
or
mov
push
xchg
dec
mov
in
cltd
arpl
notb
inc
es
pop
inc
mov
sbb
add
lods
sti
data16
xchg
dec
lret
fiaddl
mov
sbb
mov
sahf
mov
js
cmp
ds
stos
xchg
push
mov
pop
add
mov
stos
inc
jg
jmp
mov
sti
inc
cmp
lock
stos
in
jp
fdivrl
loope
fstl
dec
js
mov
lret
jne
cs
dec
cmpsb
fstpt
inc
jg
repz
and
inc
inc
add
mov
jge
lret
hlt
hlt
mov
fistl
sub
fildl
filds
outsl
sbb
dec
shrl
std
inc
mov
aaa
fcmovu
push
inc
mov
and
mov
mov
dec
fdivrl
and
dec
lcall
jmp
rorl
inc
mov
mov
add
dec
sbb
leave
fsubl
adc
xor
js
adc
xchg
sbb
lret
mov
imul
in
outsl
lock
push
aad
inc
ss
jl
clc
or
mov
test
mov
mov
mov
insb
mov
sbb
andl
jg
dec
push
sub
sub
mov
sti
jns
sbb
sub
stos
dec
popf
add
jb
xchg
xor
out
test
and
test
mov
cmpb
jmp
ret
xchg
xor
xchg
mov
jne
lcall
mov
test
loop
std
sbb
push
xor
or
push
sbb
push
add
pop
mov
in
fcomps
jnp
pop
jne
lds
xorb
stos
dec
sub
push
push
rcll
ljmp
cwtl
and
cs
xor
add
pop
les
outsl
mov
jno
jle
xorl
jno
fwait
clc
ljmp
sub
rcrb
js
ss
loop
mull
aaa
and
sub
das
adc
mov
in
and
and
jbe
mov
and
out
outsl
popf
aad
inc
jne
cltd
mov
add
fidivs
pop
dec
xlat
rorl
and
test
aas
hlt
ja
jae
sbb
add
outsl
sbb
aad
sbb
or
repz
adcl
inc
push
mov
push
outsl
pop
and
mov
push
pop
in
jns
sahf
sbb
mov
pop
in
ret
mov
mov
fldl
out
dec
xor
in
sub
push
xchg
add
test
roll
pushf
dec
jp
add
ret
jno
daa
sti
jl
mov
inc
clc
pop
mov
out
sbb
push
incl
sbb
fldcw
adc
sbb
or
or
dec
and
bound
inc
jecxz
sub
mov
aad
jg
pop
dec
sahf
fidivrs
test
in
fs
jbe
pop
sarb
push
icebp
jmp
lods
xchg
test
stc
lret
daa
in
mov
mov
cmp
dec
lock
mov
mov
out
movsb
fdiv
ret
int
pop
repz
xchg
adc
sbb
mov
in
mov
arpl
rclb
inc
xchg
push
mov
test
xor
js
sti
loop
or
jge
xor
jbe
aaa
stos
pop
outsl
in
lahf
sub
aas
adc
clc
lock
adc
push
mov
ds
js
insb
adc
jno
inc
jle
pop
push
and
mov
mov
gs
lret
fadds
adc
xlat
sbb
xchg
cmc
subb
out
stos
shrl
jl
fsubrp
shlb
aad
or
pushw
adc
add
cmpsb
pop
daa
bound
cmpsb
or
xor
xorl
leave
dec
fs
sub
sub
js
cmp
cmpsb
lahf
sbb
xchg
jno
pop
mov
xor
xchg
sahf
push
cld
mov
mov
sti
idivl
ss
ja
mov
loope
lahf
fcompl
aaa
jns
adc
lea
daa
ljmp
push
mov
mov
cld
inc
aas
pop
adcl
push
ljmp
dec
insb
pop
adc
fstp
adc
cld
jnp
flds
add
ja,pt
popa
loop
mov
or
scas
sub
hlt
ret
and
insb
adc
inc
mov
inc
scas
das
cld
pop
hlt
and
inc
sub
push
imul
loopne
cli
mov
ficompl
xchg
mov
sub
and
xorl
test
sub
mov
test
and
inc
stos
outsl
pop
adc
outsl
xor
jl
outsl
int
xor
mov
cld
dec
ja
jo
add
ret
paddd
mov
push
mov
hlt
gs
jbe
xor
mov
mov
pop
jp
jecxz
add
insb
jg
xor
xor
dec
adc
daa
lcall
xor
cmp
or
mov
stos
movsl
enter
data16
enter
xlat
cli
out
das
sbb
dec
pop
leave
cmp
das
mov
mov
xchg
iret
jge
mov
adc
sarb
nop
or
enter
pop
mov
dec
push
mov
lds
pop
mov
in
outsl
add
add
mov
loopne
add
repz
cwtl
lea
jnp
jo
nop
lock
mov
call
pop
dec
jne
adc
sub
stc
push
shlb
popa
cmp
mov
push
enter
dec
aaa
pop
clc
inc
dec
leave
jecxz
sub
jp
ja
dec
ret
adc
mov
pop
fsubrs
xor
scas
popa
mov
mov
pop
cli
mov
xchg
shll
call
out
pop
or
pop
les
add
mov
mov
imul
mov
push
fcomi
xchg
dec
popf
jecxz
xor
nop
movb
shrb
sbb
mov
jae
aas
test
push
insl
loope
mov
loopne
movsb
or
mov
push
dec
xchg
inc
pop
sbbb
sahf
in
mov
dec
and
mov
aas
push
pop
pop
les
add
clc
hlt
pop
jbe
xchg
rcrb
jmp
xchg
repnz
sbb
mov
cmpsl
leave
cmp
adcl
clc
fwait
add
pop
or
or
xor
unpcklps
clc
filds
dec
loopne
mov
ret
and
fiadds
push
sbb
in
cmp
fwait
cmp
xor
or
hlt
cmp
push
xchg
icebp
adc
sbb
pop
mov
push
jb
and
fidivl
push
pushf
mov
sbb
or
daa
and
adc
mov
add
or
bnd
and
je
pop
push
sub
cmp
and
xchg
insb
out
cmp
fcomps
loop
mov
test
mov
jnp
add
in
lds
cwtl
ret
inc
or
mov
or
pop
out
outsb
shll
push
in
aam
pushl
mov
mov
in
and
jp
adc
test
cltd
ds
adc
or
scas
dec
aas
cmpsl
movsb
notb
push
fucomi
push
add
rorb
imulb
sbb
xor
adc
in
les
es
dec
and
mov
cmp
mov
push
sbb
dec
rclb
outsb
jg
sbb
add
adc
lods
adc
mov
repnz
movsb
push
imul
xor
mov
add
xchg
add
mov
dec
xor
jg
or
mov
popf
lcall
repz
cltd
cs
xor
cli
mov
repnz
outsl
mov
lea
adc
mov
aaa
sbb
dec
popa
or
lods
adc
pop
aad
mov
adc
out
cmp
jl
mov
lods
dec
loopne
dec
pushl
xchg
in
movsl
aaa
cli
mov
das
jp
mov
adc
ljmp
cli
adc
dec
idivl
jnp
or
stos
aad
popf
dec
push
jg
ret
add
lods
mov
mov
nop
lahf
xor
pop
xor
xlat
add
mov
out
and
insw
mov
aam
mov
call
and
shl
inc
test
push
and
testl
and
push
sub
xchg
sbb
mov
adc
shrl
lret
mov
hlt
cmp
out
adc
push
mov
push
pop
into
enter
or
mov
xor
xlat
add
repz
add
dec
and
dec
push
xchg
aaa
mov
insl
inc
mov
cmp
mov
loopne
sarl
out
jb
sub
fisttps
out
pusha
sti
in
ret
out
dec
and
inc
lcall
inc
pop
inc
das
sub
test
test
notl
andl
mov
cmc
lods
xchg
dec
dec
clc
xchg
sbb
inc
sbb
sub
pop
ljmp
sti
jp
stc
cs
jmp
popf
xlat
fdiv
nop
xor
push
pusha
xchg
pop
mov
xor
inc
or
fsub
in
adc
scas
jp
into
xchg
push
enter
je
add
mov
insl
loope
jecxz
xchg
mov
xchg
xchg
mov
push
mov
cmp
mov
lret
and
cmp
dec
add
xlat
les
push
sbb
fldt
jmp
jns
xchg
mov
mov
add
cmp
out
aaa
mov
shl
pop
mov
xchg
pop
mov
or
sbb
hlt
mov
or
xor
pop
subb
ljmp
inc
jo
mov
mov
arpl
pusha
es
fs
cmp
mov
fsubl
xchg
std
aaa
push
addb
mov
or
mov
loopne
lea
add
ss
jae
jmp
fiadds
loop
or
out
mov
sub
lahf
outsl
insb
fwait
ss
push
jmp
rolb
shlb
outsl
mov
or
inc
test
sbb
cltd
push
test
pop
mov
mov
cmp
sub
popa
cs
mov
call
lods
adcl
cmpsb
lea
add
hlt
dec
fstps
cmp
aam
scas
out
out
mov
mov
repnz
dec
aad
mov
xchg
cmp
push
jo
testb
aad
inc
dec
fcomps
add
xor
and
sub
xlat
mov
rcl
lahf
test
push
outsb
sub
sbb
adc
dec
dec
push
adc
push
xor
icebp
arpl
sbb
mov
add
aad
out
mov
lods
psllq
cmc
jg
sar
mov
add
or
stc
mov
idivl
loop
xlat
mov
jle
stc
push
in
insl
arpl
inc
or
insl
dec
movsl
shlb
aaa
insl
jg
jbe
cmpsb
mov
lret
cli
jp
adc
pop
clc
jne
clc
sbb
loope
xor
rorl
dec
mov
xor
jno
mov
out
mov
fimuls
aaa
jno
or
sub
jge
insl
sbb
cmpsb
into
imul
or
mov
jecxz
loop
jge
orl
xchg
out
pop
clc
fldt
jbe
push
and
add
popa
addl
mov
mov
xorb
mull
sti
mov
aaa
mov
push
into
push
mov
mov
lret
sub
pop
inc
and
sub
and
add
and
pop
pop
add
add
add
fs
cmovo
addr16
and
or
push
xlat
sbb
test
into
fs
fistl
add
pop
mov
mov
sub
jle
xor
xor
ljmp
sahf
test
test
dec
inc
fistpll
lea
js
loopne
mov
inc
insl
loop
mov
and
mov
shrl
daa
dec
repnz
adc
outsb
add
bound
inc
push
pop
or
add
lar
rcrb
movsb
hlt
or
imul
adc
sbb
add
mov
shrb
jnp
lcall
add
pop
add
push
mov
xor
push
mov
ds
xor
push
leave
inc
mov
xor
add
sbb
xor
mov
jno
lock
scas
test
mov
jp
fcmovnbe
sub
in
push
loop
adc
pop
fcoms
jecxz
mov
add
mov
test
shlb
aad
lahf
push
mov
icebp
mov
andl
in
xor
cmp
lods
clc
pop
sub
mov
xchg
mov
or
push
push
adc
jb
and
pop
push
sub
pusha
dec
lea
dec
or
aam
enter
mov
mov
test
pop
xor
rolb
daa
push
mov
icebp
leave
cmp
xchg
sbb
mov
arpl
shrl
rol
lods
push
pop
push
fisubrs
out
cli
rolb
hlt
add
inc
jo
in
cmc
int
and
inc
mov
sub
ret
inc
scas
rol
fs
mov
out
lret
ret
ffree
pop
adc
jg
xchg
arpl
push
mov
call
movsl
scas
pop
pop
jae
leave
cmc
mov
std
mov
icebp
jp
and
imul
das
cmp
enter
ret
mov
gs
int
and
push
pop
rcrb
fistpll
adc
jno
cmp
das
jle
add
sbb
iret
int3
add
sbb
sub
and
dec
or
sub
and
add
mov
rorb
xchg
sbb
jb
sub
out
notb
dec
jo
jmp
lock
adc
and
jg
lods
mov
aad
mov
int3
adc
lods
aaa
mov
fistl
mov
xor
cs
push
sarb
dec
sbb
xchg
aaa
cli
ficompl
or
or
dec
fs
push
cmp
pop
aam
fdivrp
loopne
lret
xchg
push
dec
outsb
and
pop
movl
add
jp
stos
icebp
out
test
fiadds
fcmove
sub
push
mov
lea
dec
pushf
sub
pop
jmp
cmp
fsubrs
and
js
enter
push
lea
and
out
cmp
or
leave
inc
mov
das
int3
jnp
outsl
mov
push
dec
outsl
cli
icebp
inc
js
scas
in
push
cmp
mov
mov
or
or
add
mov
fildl
sbb
or
sbb
xor
sbb
inc
inc
cmpb
pop
fcoml
outsl
push
or
insb
fs
popa
mov
xor
sbb
int3
test
mov
mov
inc
jnp
cmpsl
mov
ja
jmp
cmp
cmpsl
lods
add
mov
call
fcmovnb
inc
outsb
fs
cmp
popa
ja
ds
cmp
push
shll
aad
jne
adc
daa
nop
pop
les
popf
mov
sub
add
xlat
jg
dec
cmp
mov
sahf
cmp
inc
adc
mov
loopne
and
aaa
adc
ret
repz
lahf
jns
mov
mov
dec
das
popf
add
and
jg
cmp
sarb
inc
cmpsl
mov
mov
sub
daa
jb
push
inc
push
dec
mov
dec
loope
popa
mov
stc
sbb
mov
jns
or
add
push
fabs
int
sbb
lret
add
jg
or
and
sub
cs
dec
or
mov
mov
inc
mov
mov
adc
cmpsl
int3
aam
test
movsl
xchg
ficoml
cld
xchg
aam
clc
mov
fsubrp
inc
dec
adc
pushf
lock
jbe
add
adc
sub
xchg
aad
std
push
mov
mov
out
mov
jg
sbb
mov
add
mov
jl
add
les
sub
or
mov
scas
sub
out
xor
fistpl
fwait
scas
stos
sbb
push
mov
sub
in
pop
pop
popf
scas
outsb
lea
rolb
outsb
movsb
pop
mov
add
insb
mov
pop
mov
pop
mov
push
mov
or
test
add
inc
xchg
pop
repz
mov
mov
cmpsl
lret
adc
dec
jns
or
sub
ficompl
and
xlat
xchg
shll
sub
pop
mov
aad
je
mov
cmpsl
sbb
lock
pop
cmp
shll
dec
mov
ss
stos
rcr
push
pop
repnz
mov
cmp
push
movsl
fdivs
stos
nop
lods
out
cwtl
jg
jp
mov
rcrl
push
dec
fsub
jmp
or
push
cmpsl
pop
popa
push
or
mov
dec
dec
vaddsd
les
mov
mov
cmc
sbb
mov
out
xchg
xorb
jg
ret
in
and
push
cmpsb
in
test
adc
scas
dec
push
adc
shlb
cmpsb
scas
sub
nop
mov
test
inc
cltd
lods
aas
and
sbb
repz
pusha
sti
jno
sbb
fiadds
jbe
ljmp
loop
mov
inc
jnp
jo
push
pop
jle
push
cli
mov
jns
xchg
sub
je
push
arpl
fidivrs
inc
pop
xor
jmp
out
push
and
dec
jg
adc
push
xor
sub
add
pushl
lret
ja
movsl
xor
and
pusha
incl
adc
shl
lea
jl
push
ficompl
push
js
aaa
pop
mov
mov
shrl
cmp
sbb
sti
pop
fs
jmp
mov
outsb
mov
mov
dec
shlb
clc
insl
xlat
xorb
mov
mov
call
and
push
inc
sbb
mov
mov
xor
add
push
insl
jmp
push
jge
fstpl
adc
pop
fdivrl
aam
cs
rcll
inc
mov
mov
mov
mov
lahf
add
inc
pop
xchg
popa
jns
insl
add
div
mov
insl
hlt
and
outsb
xchg
aam
popa
mov
sub
inc
ja
xchg
arpl
pop
shll
jg
mov
mov
int
mov
inc
lock
add
loope
push
stos
jecxz
push
les
push
das
sbb
in
pop
test
cmpsl
lret
adc
xlat
rcl
divb
hlt
cmp
bound
add
sbb
fisttps
imul
cmpsl
dec
outsb
stos
dec
push
sbb
mov
mov
adc
cmc
pop
arpl
jmp
cmpsb
fildll
hlt
mov
cmpsb
movsl
nop
mov
mov
xchg
daa
dec
add
lret
ret
add
aaa
shlb
inc
mov
inc
add
aaa
lret
loop
mov
test
push
fidivrs
and
andl
mov
sub
pop
jg
mov
sti
mov
xchg
xor
js
pop
pop
and
outsl
jnp
lods
insl
inc
sbb
push
mov
dec
shll
rorb
ret
mov
call
cltd
fimull
ret
cmp
cmc
add
and
jge
mov
scas
cwtl
ss
out
movsl
repnz
in
decl
mov
repnz
pusha
popa
mov
push
cmp
xor
dec
push
jge
clts
jae
dec
sbb
divb
sub
mov
scas
pop
or
clc
addr16
sub
outsl
sub
mov
cltd
mov
jle
mov
push
xchg
xchg
push
add
push
mov
jns
jecxz
mov
pop
add
sar
adc
mov
pop
cs
inc
push
gs
mov
adc
sub
outsb
lods
push
fistpll
fldl
in
mov
jb
test
fwait
aas
xchg
mov
nop
popa
mov
stos
fimuls
dec
mov
fdivl
mov
or
add
js
es
jl
cli
cmp
jae
or
es
push
adc
or
pop
mov
loop
cmc
mov
lds
xor
data16
mov
mov
push
lds
pop
pop
or
enter
filds
lcall
repnz
imul
movsl
clc
fldt
jbe
in
sbb
fsts
test
cli
subl
dec
push
cwtl
xor
pop
mov
lea
enter
ret
mov
fcoml
pop
fcmovbe
mov
sbb
xchg
test
pop
xor
decb
cmp
and
fcomps
cmc
push
xchg
leave
sub
pop
das
cmp
dec
dec
pop
jae
and
js
dec
loop
call
sbb
push
dec
mov
mov
cmpsl
insb
xchg
out
shll
jmp
mov
xor
or
dec
mov
test
jnp
and
pop
xlat
test
das
shll
mov
dec
mov
mov
mov
popf
jle
xchg
das
mov
mov
xchg
add
fs
sub
mov
add
sub
sti
lahf
stos
std
push
je
pop
dec
fwait
lea
or
outsl
adc
decl
jne
or
mov
jbe
pop
dec
icebp
je
std
test
lock
out
sarb
pusha
lret
push
add
fstpt
lock
call
pop
add
mov
divb
dec
out
cmp
les
js
stos
pop
ljmp
cli
jle
push
mov
jbe
in
dec
aaa
sbb
sub
repnz
jg
push
cltd
xor
cmc
adc
outsl
sbb
add
pop
pop
or
sub
rorl
adc
adc
mov
insb
imulb
fsubs
cmpsb
xchg
dec
int3
push
scas
aas
mov
sbb
xchg
mov
sub
xchg
add
cs
rcl
lods
hlt
mov
loope
fdivs
mov
xor
loopne
add
or
pop
sbbb
jne
enter
sub
jo,pt
rorl
data16
mov
adc
sahf
push
mov
sbb
push
xor
test
test
movsl
mov
mov
adc
lahf
pop
or
fidivs
mov
xor
add
mov
cmp
push
fistps
adc
inc
pushf
xchg
xor
aam
dec
pop
add
ror
cld
pop
scas
and
push
fimuls
ficompl
test
mov
sub
jmp
test
sbb
jmp
xlat
hlt
dec
outsl
std
fisubrs
or
dec
jge
jbe
xlat
add
jb
sarl
sti
dec
push
popa
filds
adc
insb
pop
rolb
and
push
loop
push
leave
sbb
cmpsb
aaa
lock
andb
fwait
std
pop
cmp
into
neg
adc
add
fimuls
inc
mov
aam
jmp
add
mov
jecxz
and
cmp
lahf
jns
aam
pop
lahf
orb
sub
daa
add
push
jb
jp
hlt
push
testl
aam
mov
cld
shrl
sarb
lea
cmpsl
je
ss
mov
stos
inc
popa
or
test
leave
or
push
push
mov
or
cli
out
cmpsb
sbb
adc
das
fwait
sub
stos
inc
mov
mov
icebp
fs
or
in
mov
or
mov
and
sub
fwait
jb
rcrl
xor
adcl
fdivrs
or
mov
xor
das
mov
loopne
mov
mov
jg
mov
rol
push
inc
adc
fcompl
and
icebp
outsb
in
jb
pushl
outsl
lret
jbe
pop
int3
xchg
sbb
pusha
xlat
sub
pop
add
pop
jmp
clc
scas
bound
shlb
sbb
inc
or
cmp
fmul
ja
test
adc
adc
or
in
inc
mov
adc
adc
inc
shll
and
insl
mov
add
das
loopne
and
mov
adc
subl
mov
dec
out
cmp
xchg
sbb
jo
shr
out
in
pop
lds
imull
dec
sub
pop
dec
xchg
xor
lret
mov
loopne
je
jecxz
sub
fs
popa
jmp
dec
in
aaa
fcmovnbe
jp
out
push
jg
mov
xchg
testb
dec
pop
jmp
xchg
mov
xor
iret
jmp
push
movsl
mov
adc
sahf
stos
loope
or
ret
in
pop
xorb
push
xchg
test
push
sub
shll
lcall
mov
imul
mov
std
add
sbb
mov
jg
popf
dec
mov
add
outsl
adc
add
cld
call
shll
xchg
in
outsl
out
sub
dec
mov
add
push
ret
ret
xchg
pop
imul
je
nop
push
jg
insb
aas
out
mov
jp
imul
fiadds
cmp
mov
subb
push
dec
mov
jo
decl
shl
testl
ret
rorl
inc
out
sbb
xchg
jle
ret
fstpl
push
testl
pusha
int
in
and
or
inc
leave
jmp
jae
shl
inc
mov
cmp
push
sti
xchg
jnp
aas
jle
fadd
sub
add
movsl
pushf
push
cmp
cld
add
mov
lret
int3
lret
repnz
dec
outsb
or
shrb
xchg
cmp
mov
cmp
sbb
arpl
mov
insl
push
push
dec
and
insb
xchg
pop
jno
add
addr16
cmp
cmp
popa
dec
ret
stos
outsl
insl
outsl
sbb
and
or
inc
mov
addr16
dec
cmp
pop
push
jle
enter
push
pop
xor
in
pop
dec
mov
leave
pop
push
push
cmp
aaa
xor
jge
sbb
dec
add
adc
mov
inc
ja
jl
pushf
xor
dec
mov
nop
jb
inc
mov
mov
jecxz
mov
mov
test
insb
ja
adc
cwtl
push
shll
je
sti
fistpl
insb
xor
outsb
arpl
mov
lods
adcb
or
cltd
daa
mov
push
in
data16
pushf
mov
mov
jge
cltd
mov
fwait
ja
aaa
fisubrl
mov
jmp
mov
jp
mov
mov
call
popf
pop
into
outsb
pop
lods
orb
adc
leave
sbb
fistpl
lods
cmp
mov
arpl
lcall
shl
rorb
pop
fcmovnu
lods
pop
push
sbb
lahf
out
push
decb
insb
jne
mov
xchg
or
adc
add
sar
jmp
mov
sbbb
pop
inc
fucomi
xlat
out
inc
sub
and
rorl
jl
push
push
jmp
mov
outsl
std
or
lods
add
fnsave
icebp
fsub
mov
aam
mov
mov
ja
divl
or
xchg
and
mov
inc
pop
mov
aas
out
nop
inc
nop
pop
scas
ss
rclb
adc
sub
add
and
fbstp
and
xor
stc
mov
fistl
add
dec
in
mov
std
das
add
addr16
pop
xchg
xchg
in
mov
clc
lret
xchg
push
into
mov
insl
enter
mov
sbb
popf
push
lea
leave
mov
adc
pop
xor
or
push
aad
fwait
sbb
xlat
aaa
mov
testb
cs
dec
aaa
mov
mov
jp
jp
mov
dec
aaa
pop
xor
bound
cmp
jg
loop
jns
pop
les
add
dec
cltd
fcmovnu
push
jle
roll
hlt
sub
js
fdivp
push
sbb
dec
popa
cwtl
jge
cld
lods
rclb
and
sbb
cmp
xor
push
xor
leave
inc
cmpsb
jp
mov
push
sbb
movsb
in
in
pop
or
ret
dec
push
mov
fs
xchg
fs
push
fcomi
fisttpll
lret
outsb
xlat
pop
sbb
jg
mov
and
pusha
rcr
push
add
stos
mov
pop
inc
add
mov
adc
jecxz
mov
cld
vpcomuw
loop
lock
mov
mov
or
mov
sti
in
mov
xchg
sub
xabort
inc
icebp
sti
xor
sarb
inc
jl
std
insb
fistl
gs
adc
mov
mov
lods
push
outsl
xor
stc
outsl
fcoml
mov
test
insl
ljmp
ja
push
aas
orb
call
mov
into
mov
push
sub
outsb
jmp
imul
movsl
xchg
cwtl
jecxz
push
dec
mov
sbb
inc
mov
jnp
fdivp
pop
pop
pushf
pop
and
pop
loopne
subb
es
pop
sbb
lea
fidivrs
mov
aam
lret
cmpsl
mov
subb
fs
pusha
outsb
je
or
xchg
cmp
adc
cmp
test
sahf
push
push
pusha
jnp
ffreep
aas
jecxz
mulb
add
push
orl
sub
sub
add
mov
js
adc
jbe
push
ja
mov
and
xchg
cli
push
mov
call
mov
mov
mov
hlt
loope
inc
dec
fisttpl
lret
stc
cmpl
push
scas
jmp
jl
jno
jne
loop
adc
add
xchg
and
fs
das
add
adc
or
sub
push
mov
jle
ss
loopne
or
mov
jb
or
mov
xchg
cmpsl
neg
rol
mov
shr
xchg
sub
outsb
inc
orb
push
pop
addr16
xlat
les
fisubrs
or
fs
sub
pop
push
and
int
sbb
mov
adc
adc
dec
dec
add
je
or
xor
mov
adc
jo
sbb
cmc
repnz
bound
add
call
cmc
and
jae
dec
ffreep
fildll
icebp
lds
cli
adc
std
ljmp
movsl
enter
pusha
cmp
dec
outsb
enter
lock
out
movsb
mov
or
mov
jge
sbb
ret
mov
bound
xor
and
cmc
imul
pushf
jmp
xchg
push
push
incb
stos
cmpsb
sahf
cmp
fsubrp
or
jle
inc
leave
or
mov
insl
fidivl
negl
int3
stos
mov
xchg
push
in
lods
mov
jp
insl
ret
xor
mov
add
cli
add
in
sub
stos
mov
shr
jle
arpl
inc
movsl
mov
or
cmp
aad
mov
mov
push
pop
sar
fisttps
dec
les
adc
inc
fists
inc
sub
ret
aaa
scas
in
aaa
cmpsl
pushl
and
scas
aam
mov
js
jecxz
movsl
cmpsl
push
bound
lods
jae
or
lea
add
jne
mov
sub
jno
arpl
loope
cli
outsl
imul
jno
add
test
fcompl
mov
add
in
and
sub
not
jl
jae
insb
mov
test
jne
mov
cmp
ret
jl
pusha
xor
mov
mov
movl
lret
loop
fisttps
sbb
dec
xchg
mov
lock
adc
ret
mov
cmpsl
das
shr
sbb
stos
hlt
xchg
mov
outsb
pop
lock
sbbl
test
jge
out
bound
ss
in
imul
mov
pop
rolb
pop
mov
insb
outsl
std
mov
cld
repz
leave
xor
inc
testl
sbb
or
jae
mov
push
sahf
push
incl
fimull
add
mov
mov
push
mov
repnz
loope
in
mov
gs
orb
jg
push
mov
sub
jo
frstor
ret
cltd
mov
pop
into
pop
lods
sti
in
dec
push
push
pushf
push
pop
pop
scas
pushf
psrlq
ljmp
mov
orl
dec
ss
or
addr16
ljmp
mov
gs
aas
sti
pop
outsl
fsubrs
loop
add
movsb
gs
ficompl
sbb
mov
loope
orb
add
inc
and
gs
xor
adcb
mov
iret
cmpsb
or
or
jo
xchg
inc
stos
xchg
std
out
faddl
jb
daa
push
mov
mov
jbe
mov
into
cltd
adc
mov
pushaw
in
jno
ret
and
mov
in
mov
add
push
push
in
icebp
incb
pop
jle
jmp
push
mov
in
adc
ds
mov
add
jl
mov
add
mov
aam
cld
aam
mov
int
das
lds
mov
test
sub
aaa
fistps
sbb
sbb
fisubrl
mov
push
js
inc
loopne
repz
jo
loope
push
jo
popa
mov
aad
das
mov
negl
sbb
ret
jmp
lods
inc
push
nop
scas
or
push
roll
lret
call
xchg
xchg
outsb
outsl
adc
xlat
or
adc
rcl
fiadds
int
enter
hlt
clc
stos
mov
sbb
or
enter
lods
dec
test
mov
sbbb
sub
test
into
lret
aas
aad
ljmp
jmp
push
inc
je
test
sbb
mov
push
push
scas
pop
and
push
leave
aam
mov
or
bound
pop
loopne
push
xor
hlt
test
xlat
lahf
subb
mov
lret
push
jle
or
mov
insb
pop
sarl
test
mov
inc
inc
and
repz
aam
pop
jo
rcrl
push
xor
push
adc
test
dec
cs
dec
fwait
mov
xchg
mov
scas
ss
in
fsubrs
outsb
aad
stos
jb,pn
popa
ret
push
xlat
push
pop
mov
mov
loope
das
pop
sbb
stc
int
fsubl
fcoml
pop
stos
mov
or
pop
lret
xchg
std
mov
mov
out
outsl
and
enter
jae
sbb
jmp
mov
dec
movsb
xlat
inc
push
push
cmc
in
les
shlb
dec
mov
or
cwtl
mov
add
mov
sub
imul
mov
ss
stos
mov
js
push
ss
and
push
xchg
cmp
lock
aad
inc
dec
clc
and
push
mov
mov
push
loop
sub
mov
inc
jl
daa
in
stos
or
js
mov
pop
in
jmp
mov
or
sti
and
and
xchg
push
lds
andb
test
and
mov
insb
inc
mov
xchg
mov
sbb
mov
sub
jp
adc
aaa
ficoml
xor
pop
fmuls
add
xchg
xor
mov
xorb
cmp
sbb
adc
and
fwait
loopne
adc
dec
popa
popa
adc
ljmp
pushf
pop
cld
ret
cmpsb
mov
test
mov
pop
xlat
lods
mov
movsl
das
mov
sbb
mov
jp
sbb
xor
subl
mov
sar
add
pop
sbb
xor
sub
rcrl
mov
call
popf
outsl
sub
pop
movsl
mov
inc
pop
push
mov
xor
mov
add
js
or
fcompp
push
or
call
pop
jle
xor
adcb
and
les
mov
outsl
ja
ds
sub
lods
or
syscall
adc
out
jecxz
scas
outsl
outsl
in
out
sbb
icebp
xor
jmp
push
xor
repnz
outsb
loope
imulb
int3
insl
pop
mov
rolb
jmp
lea
arpl
andl
cwtl
dec
jle
jl
lods
push
inc
jp
xorb
imul
inc
push
or
not
fldt
mov
mov
mov
sub
mov
dec
orb
sbb
nop
sbb
sete
or
mov
fistpll
js
lret
pop
and
inc
cltd
pop
and
add
shlb
incl
fwait
and
mov
in
aaa
js
add
jmp
inc
outsl
or
int
rcll
mov
aaa
ljmp
test
ss
fisttpl
inc
inc
gs
mov
mov
sbb
imul
lea
mov
rcr
pop
jns
jge
jl,pn
outsb
or
mov
mov
mov
sub
cmp
xchg
or
sbb
cmp
loopne
shlb
fstpt
clc
loopne
in
fldl
mov
pop
mov
xchg
cs
xchg
or
add
dec
jmp
js
mov
subl
das
push
jge
push
dec
out
ret
rorl
cli
jge
sbb
adc
stc
inc
aaa
mov
push
adc
mov
cmpsl
sub
push
push
jle
fcomp
pop
loopne
sbb
push
mov
mov
das
sub
push
rcrb
inc
xchg
add
rol
mov
and
shll
push
loopne
mov
leave
push
cwtl
mov
hlt
lods
add
outsb
add
cmp
mov
std
test
push
mov
sub
add
hlt
aaa
mov
push
mov
mov
arpl
insl
sub
adc
and
xor
dec
movsl
loopne
popa
outsl
adc
adc
pop
mov
mov
push
nop
jbe
sti
mov
bound
jecxz
repnz
xor
jmp
cs
ljmp
mov
jb
pop
icebp
and
data16
lds
xchg
xchg
fwait
dec
mov
pop
clc
pop
pusha
aaa
lcall
or
bound
mov
push
pop
leave
rorb
add
dec
cmp
es
std
fistpll
mov
nop
imul
and
adc
lds
js
xor
sti
mov
loopne
divb
test
int3
jbe
clc
aas
push
dec
adc
shrb
shlb
lret
push
or
push
push
jbe
jne
aaa
mov
outsl
and
inc
std
fcmovnu
shll
sbb
add
add
cmc
pop
jp
adc
out
mov
dec
rcrl
adc
or
jp
ds
jns
or
push
jno
pop
xorb
pushf
mov
jle
dec
dec
adc
enter
fistps
js
fcompl
xchg
sbb
mov
mov
insb
inc
inc
mov
das
jg
movsb
push
lea
out
adc
and
dec
cltd
push
ret
add
or
jp
push
fwait
popa
inc
shr
jno
xor
cs
pop
ffreep
cmp
mov
cli
cmp
pop
mov
stos
jbe
push
push
movsb
push
jmp
fstl
sub
shrl
inc
or
mov
outsl
xlat
pop
pop
pop
add
inc
ret
rorl
push
outsl
xchg
add
cs
aad
mov
cmc
cmp
imul
dec
enter
mov
outsb
mov
and
shlb
pop
adc
into
mov
outsl
mov
insl
push
fcomps
insl
loope
push
xchg
jl
std
pop
int3
jnp
sbb
scas
repz
in
add
add
sbb
aas
lods
mov
lahf
xchg
icebp
test
lock
mov
insb
das
lock
cmp
repz
add
insl
sbb
cmc
inc
inc
pop
push
push
xchg
mov
imul
aam
test
sahf
or
or
pop
dec
movsw
mov
mov
fdivs
les
adc
adc
jb
jl
movsl
aas
pusha
jmp
jns
mov
dec
fnstcw
ljmp
cmp
aaa
sub
mov
mov
mov
push
cwtl
cmpsb
repnz
inc
add
mov
xor
insl
mov
xsha1
cmpsb
lret
test
push
lret
imul
push
add
outsl
cmpsb
add
mov
push
in
jg
fisttpl
inc
rcr
sbb
mov
xchg
cltd
sub
mov
or
sbb
mov
mov
sbb
xor
addl
test
mov
sbb
pop
cmp
sub
and
rcr
dec
outsl
int3
scas
repnz
cld
adc
fdivrl
in
outsl
aas
hlt
xorb
inc
pop
sbb
mov
cwtl
aaa
push
js
icebp
jmp
or
decb
adc
aam
scas
or
mov
push
mov
cmp
push
jp
push
jg
mov
adc
inc
jnp
pop
subl
add
xchg
pop
loope
add
daa
mov
jg
inc
call
bound
jmp
dec
mov
mov
jns
or
stc
in
aad
lcall
add
pop
adc
nop
cld
inc
shrb
mov
sbb
pusha
push
or
and
mov
shrl
mov
or
xchg
or
jo
push
test
icebp
push
hlt
divb
jnp
js
xchg
cmp
jle
adc
stos
sub
add
and
aam
sbb
cmpsb
mov
xor
pushl
adc
fiaddl
mov
push
xor
popf
jmp
xchg
fiaddl
and
imul
sub
jo
rcrl
mov
daa
jmp
pop
insl
push
out
lds
mov
ret
rolb
jns
cs
cli
pop
gs
lret
int3
rorb
pusha
xlat
adc
and
es
and
jge
test
roll
cs
inc
pop
mov
xlat
and
gs
outsl
xor
pusha
outsl
jne
xchg
fs
sub
pop
mov
cli
jp
daa
ja
stos
icebp
test
mov
sbb
repnz
mov
fimull
dec
dec
cmp
jl
ss
mov
xor
xor
push
xor
outsb
mov
pop
add
sub
gs
lret
fst
sbb
into
lret
stos
xchg
pop
sti
sbb
push
emms
inc
push
xchg
mov
int
cmc
bound
outsb
push
push
aad
jbe
inc
aad
or
loopne
insl
and
xlat
mov
or
adc
cmp
popa
mov
dec
mov
push
fcoml
adc
mov
mov
shll
test
xchg
and
addr16
jg
test
push
mov
jmp
repz
outsb
jno
fisubl
stos
js
mov
shl
inc
cld
aam
nop
mov
jne
mov
lret
inc
lock
rol
ret
out
rcr
xor
popa
je
lcall
ja
inc
sub
dec
inc
sub
adc
imul
cmpsb
insb
xchg
jmp
fadd
pusha
insl
stc
sbb
sub
jns
add
je
jno
adc
adc
rclb
push
mov
jae
dec
inc
clc
inc
pop
push
push
jmp
adc
xor
lea
cmp
addr16
or
fcmovb
lods
cmc
adc
cmp
sbb
cmp
cmp
rcrb
icebp
outsl
fucom
inc
mov
jne
push
divl
cmp
jae
call
mov
adc
neg
jp
stos
dec
push
inc
movsl
jno
mov
incb
adc
adc
movsb
sub
or
mov
in
add
pop
and
xchg
pushf
mov
sbb
mov
addb
fsubrl
int
or
sti
loope
sub
sahf
sti
iret
lods
xchg
fs
or
pop
or
rep
std
shlb
mov
or
cmp
lds
fists
xor
outsl
mov
das
movsb
mov
add
cli
adc
mov
and
sarb
lea
loopne
mov
mov
push
shll
sti
sub
mov
pusha
ret
ja
sarb
add
and
dec
data16
push
test
stc
ss
pop
pop
xor
fucomi
loopne
lea
test
mov
jbe
mov
add
sub
mov
xor
mov
into
stos
mov
cmp
ljmp
push
fmull
outsl
mov
call
fstpl
testl
inc
mov
mov
add
jle
xor
dec
mov
lods
xchg
dec
aas
movsl
test
add
es
rclb
sahf
add
adc
inc
sbbb
mov
ficompl
adc
and
fwait
fidivrl
push
xor
outsl
adc
push
cli
mov
mov
inc
mov
jg
bound
or
inc
mov
mov
cld
mov
adc
es
mov
out
daa
add
fidivrl
popf
push
or
icebp
ret
cli
lret
jae
jl
jg
fcoms
pop
or
sub
inc
shll
mov
sarl
jp
cmp
pop
movsb
pusha
dec
sbb
jg
idivl
nop
adc
pop
xchg
lock
mov
sbb
lock
mov
or
mov
push
or
jo
es
into
fs
mov
popw
cltd
out
pop
jns
mov
loop
cmp
or
imul
or
jo
insb
xchg
xor
fnstcw
fdivl
xor
xchg
jnp
cmp
mov
in
mov
loopne
sbb
jmp
ss
stos
adcl
pop
add
fwait
mov
addr16
lock
dec
lock
cmp
mov
inc
dec
aas
mov
or
dec
aad
pop
test
jl
push
adc
int
rcr
pop
xor
repz
sbb
sub
loop
loopne
xor
dec
mov
nop
xchg
xchg
inc
stos
inc
xchg
sub
jae
js
ret
push
dec
cmp
jg
es
icebp
jne
push
andb
leave
cmp
adc
add
fsubs
mov
jns
das
ss
in
dec
sbb
loop
in
xchg
faddp
or
popa
insl
sub
test
aas
in
arpl
or
sbb
fidivrs
popa
cmp
push
and
out
cmpsb
sbbl
push
out
push
mov
mov
add
cs
neg
dec
fbstp
cwtl
and
popa
cmp
sar
mov
insl
out
pop
xor
mov
dec
mov
daa
ret
ljmp
mov
shlb
sbb
sub
cwtl
and
dec
into
fistpll
andl
inc
inc
repz
push
ret
xchg
mov
sbb
fwait
cmc
aaa
mov
or
mov
push
add
addl
gs
push
inc
test
mov
jg
push
push
call
mulps
sbb
repnz
das
jge
outsb
adc
jne
lods
xchg
xchg
mov
rorb
scas
cmp
shll
paddw
sbb
insb
jl
test
mov
hlt
arpl
lods
sbb
cmp
rorl
pop
rol
add
lock
pop
pop
mov
outsb
jmp
icebp
std
and
daa
push
add
andl
or
inc
xchg
sarl
sbb
xor
sbb
or
cmp
xlat
shl
pop
sbbb
fsts
dec
inc
les
les
cmpsb
enter
mov
jb
loope
push
adc
mov
daa
cwtl
cwtl
adc
out
dec
and
jg
scas
mov
cmpsl
icebp
es
nop
push
outsl
add
jb
and
dec
or
sbb
push
or
js
jge
mov
pushf
popa
mov
cmpsb
lcall
jg
outsb
aam
daa
push
popl
cmpl
pop
mov
stos
addl
sbb
lds
add
lahf
mov
ror
mov
mov
call
dec
ret
ds
mov
add
pop
mov
nop
iret
sub
mov
mov
sub
mov
mov
xchg
dec
aas
ret
cltd
push
in
push
mov
fstpl
xor
aam
fsubp
jae
ficomps
jl
insl
fdivl
lcall
insb
push
and
jle
jge
aaa
jge
jnp
je
jle
stos
fstps
pop
jmp
add
mov
sbb
and
cmp
or
jne
nop
cs
dec
push
xor
test
orl
repnz
outsb
pop
mov
test
mov
jae
pusha
push
movb
rcl
cs
pop
sbb
cld
aaa
ss
inc
cmp
sub
insb
test
or
adc
dec
jecxz
add
adc
and
dec
add
insl
or
test
cs
sarl
ffreep
inc
decl
fmull
enter
sub
fnsave
dec
das
pop
cmp
sbb
shll
int3
fidivl
mov
pop
mov
push
dec
lods
jno
mov
and
and
test
loop
or
scas
or
jle
js
jno
mov
mov
xor
roll
jl
sbb
inc
pop
sarl
adc
and
fildl
cmc
push
popf
add
mov
xchg
inc
inc
push
pop
mov
mov
jecxz
push
jp
cwtl
cmp
or
sub
enter
je
fsubl
jbe
insl
adc
inc
or
shlb
sub
dec
dec
mov
outsl
sbb
dec
mov
bound
fs
rorb
lock
mov
or
mov
sub
jp
orl
out
mov
dec
jmp
testl
sub
insb
or
lcall
jb
inc
fbstp
push
out
rcrl
test
inc
or
or
sub
xchg
and
lods
jbe
ja
jnp
hlt
mov
xchg
inc
xchg
nop
insb
and
and
in
pop
sub
cli
filds
fildll
adc
xchg
es
outsb
push
in
mov
out
mov
das
adc
xor
sub
pop
and
subb
mov
fnsave
adc
sbbb
or
sub
test
les
inc
daa
in
mov
fimull
mov
in
xor
or
sub
mov
cld
aad
je
inc
pop
mov
rclb
jl
sbb
mov
dec
sub
mov
mov
mov
pop
sub
mov
push
loop
enter
dec
pop
inc
rcrl
jbe
mov
lea
jnp
lcall
lds
push
push
mov
or
pop
adc
sbb
cmp
xchg
jg
sbb
repnz
loopne
and
xor
push
and
iret
xchg
push
repnz
sub
mov
jp
ljmp
out
sbb
pop
lret
jno
pop
shll
and
imulb
cmpsl
add
icebp
jp
popa
adc
sbb
les
cli
xchg
and
sbb
into
cld
and
jo
dec
insb
adc
push
mov
lret
rcrl
test
push
xor
mov
lahf
sbb
lock
or
mov
adc
out
in
int3
jb
sbb
sbb
push
mov
call
rclb
mov
test
pop
insl
xor
fidivs
sub
insb
push
add
sbb
xchg
bound
xchg
jae
pop
jp
push
xchg
clc
jl
xchg
rep
push
fisttpl
int
adc
add
jne
mov
sbb
xchg
insb
bswap
lods
mov
bound
insb
lcall
lds
fidivs
pop
jl
cmc
inc
aad
imul
inc
test
ljmp
pop
pop
or
push
nop
sbb
cmpsl
jmp
ja
sub
push
pop
add
jno
push
outsb
je
inc
rcrb
push
mov
stos
arpl
test
mov
hlt
adc
push
xchg
xor
push
les
push
aam
dec
das
daa
fisttps
inc
pop
insl
dec
cmp
push
mov
or
xchg
iret
or
inc
fildl
push
dec
lcall
ljmp
jnp
mov
xchg
xchg
xlat
adc
rcl
incb
fstl
adcb
fsub
daa
mov
out
mov
fisttpl
pop
ss
sbb
cmp
lcall
xchg
test
mov
mov
mov
mov
push
in
xchg
dec
clc
ljmp
xor
fcmove
inc
xor
pushf
dec
mov
pop
aam
mov
and
ja
movsb
cmp
sbb
std
push
xor
and
xchg
or
push
mov
push
inc
sbb
fs
jl
imul
add
inc
das
stc
cli
pop
mov
xor
jno
hlt
sub
fdivp
push
xor
arpl
and
jl
add
loope
rclb
imul
pop
popf
sbb
das
sahf
les
fdivrs
out
sbb
rcl
mov
mov
cli
insl
loope
mov
lret
sub
mov
aaa
test
orb
mov
nop
sub
sarl
mov
fmull
lret
orb
push
mov
cs
cmp
xor
es
addb
outsb
xor
fcomi
out
inc
sub
dec
lds
jb
ja
fisttpl
adc
je
subb
fisttpll
outsl
cltd
shll
and
lret
daa
sub
inc
in
ja
out
rcr
and
push
pop
mov
lea
lea
mov
rcr
jle
rol
enter
sub
jmp
jp
js
fcmovnu
iret
or
sbb
ss
leave
pop
mov
test
sti
pop
lahf
push
and
and
loop
and
lea
loopne
pop
loop
pop
stos
add
in
cwtl
pop
push
jg
scas
test
stos
push
mov
addl
jl
mov
ljmp
cwtl
andb
jo
pop
push
into
scas
sbb
dec
inc
out
cmpsl
mov
data16
sbb
lret
push
adc
pop
dec
inc
enter
mov
das
mov
jae
add
adc
scas
push
orb
add
aam
js
inc
or
mov
or
xor
sbb
movsb
pop
fistps
mov
push
push
cmpsb
mov
pop
ret
cmp
shl
mov
pop
rorl
and
fs
rcr
pop
mov
daa
pop
aaa
jo
pop
sbbb
loope
addb
push
hlt
fninit
and
adc
adc
jo
mov
enter
mov
out
rcl
or
xchg
add
ja
cmpsl
mov
adcb
rcll
xchg
jle
movsb
add
xor
in
sub
xchg
fwait
stos
outsl
adc
imul
dec
jo
push
fistl
sbb
sub
add
push
mov
push
xchg
dec
mov
repnz
push
insl
fisubl
mov
mov
xor
les
movsb
inc
fldt
les
inc
lds
xor
adc
lret
insb
and
insl
xor
jg
mov
icebp
sbb
jecxz
cmp
xor
fisubrs
adc
xor
pusha
sbb
paddb
cmc
jp
jnp
or
mov
loopne
aaa
jp
push
loopne
push
push
mov
outsb
jo
shlb
jbe
stc
jno
adc
test
dec
mov
shrl
subl
adc
pop
jb
jl
out
sub
push
mov
xor
fdivr
incl
movsb
or
add
cld
xchg
js
or
imul
pop
mov
inc
push
push
adc
aaa
inc
mov
dec
test
fs
out
cmpsb
mov
and
adc
in
fsubs
mov
ret
or
aad
outsb
jl
mov
adc
cmpsl
mov
and
enter
adc
push
sbb
mov
push
daa
enter
jno
jns
js
les
pop
jae
mov
lock
mov
or
or
dec
fisttpll
scas
mov
pop
arpl
shrb
ret
dec
pop
andl
ret
lret
pop
mov
sti
fcomi
and
pop
mov
fistpll
inc
push
jle
lret
pop
add
adc
cli
ret
or
outsb
add
mov
das
out
pop
rorl
pop
loopne
jbe
lahf
incl
adc
or
or
mov
push
mov
push
pop
push
inc
aam
inc
scas
pop
inc
sub
push
pusha
sbb
push
cmp
test
jae
test
pop
pop
jmp
fistpl
sbb
pop
add
scas
sub
aas
inc
js
push
mov
jp
jno
and
mov
mov
add
pop
pop
shll
mov
or
xchg
xchg
out
xchg
movsl
repnz
mov
shlb
or
cld
sbb
pop
je
ljmp
outsl
mov
imul
lods
cmp
mov
push
jno
xorl
adc
xchg
inc
scas
add
pusha
popa
push
lds
sti
mov
xchg
mov
jne
inc
or
mov
loop
decl
addr16
or
inc
mov
mov
mov
xor
out
and
xchg
push
add
push
icebp
fbld
mov
pop
xchg
add
negb
mov
jb
mov
lahf
in
or
rorb
std
push
call
gs
lret
inc
mov
cwtl
or
mov
call
leave
push
call
xor
inc
jno
pop
jg
clc
aas
push
std
push
xor
jbe
loopne
test
orl
ret
dec
lods
fists
fstp
dec
jecxz
addb
or
mov
xchg
pop
pop
mov
mov
lcall
outsb
fadd
movsl
jo
test
lds
fiadds
push
negb
jo
aas
enter
xchg
xorl
mov
loopne
cmp
test
mov
je
cmpsb
icebp
out
out
cs
stc
nop
int3
mov
jbe
xchg
arpl
lock
xchg
add
aam
inc
jbe
pop
pop
out
jae
push
sub
lret
sbb
insb
push
loopne
jmp
rcll
mov
push
and
mov
adc
cmp
outsl
jecxz
xor
sub
sub
pop
aas
popa
pushf
mov
sbb
sub
daa
lods
aad
inc
in
adc
mov
xchg
cmp
or
loop
inc
add
adc
icebp
jnp
in
stos
add
movb
cld
dec
push
sub
push
add
nop
aaa
pushf
sub
pop
jo
movsl
xor
mov
jl
push
dec
jns
push
jecxz
subb
pusha
mov
pop
insb
insb
mov
push
scas
inc
andl
inc
mov
sbb
fldenv
je
rol
in
mov
jp
and
test
out
fnstcw
sub
cmp
js
sub
les
mov
jno
fistps
mov
adc
lock
push
outsb
xor
pop
loopne
dec
add
push
rclb
mov
push
cld
out
dec
lds
jmp
shrl
hlt
andb
cmp
test
jl
cwtl
sub
cmc
faddl
pop
les
adc
add
cli
jb
inc
lahf
add
shlb
mov
int3
mov
dec
push
enter
xor
push
inc
repz
fsubrs
ret
xchg
sbb
pop
push
xor
lods
mov
fwait
mov
mov
xchg
adcb
jns
adc
arpl
inc
cmc
push
mov
push
add
int
sub
cltd
pop
xchg
mov
adcb
scas
mov
push
or
test
mov
inc
cmc
and
fistpll
push
xlat
cmpb
pop
popa
add
push
mov
add
mov
rorl
loopne
dec
xchg
sbb
dec
xchg
and
inc
sbb
mov
mov
das
rorl
test
mov
mov
sbb
inc
push
add
adc
out
mov
aaa
or
dec
rorl
dec
jne
in
sahf
mov
xchg
add
sub
push
subb
push
push
stos
mov
pushf
pusha
inc
fistpll
inc
test
push
and
mov
or
pushl
and
out
and
or
or
mov
mov
test
push
adc
xchg
mov
sbb
or
jle
inc
add
loop
push
xchg
jbe
inc
sbb
ret
rcr
sbb
inc
nop
pop
mov
or
xor
test
lret
insl
lea
cmp
jge
lret
sub
pop
dec
daa
fstpt
jp
mov
push
xchg
add
jmp
in
mov
mov
and
out
cli
enter
mov
das
jg
shll
xchg
daa
or
in
aaa
loop
jmp
pop
mov
adc
stos
cltd
hlt
jge
jbe
lret
notl
fnstcw
sbb
mov
outsl
decl
roll
movsb
xor
inc
outsl
sbb
pop
in
and
mov
mov
stos
cs
adcl
add
or
sbb
repnz
or
lret
jne
loope
das
cmpsl
jecxz
or
clc
testb
and
and
inc
add
lea
sahf
add
hlt
inc
inc
cld
push
icebp
push
mov
mov
mov
imul
sub
sbb
adc
fsts
and
lret
or
daa
adc
jge
int
add
add
cmp
dec
nop
jl
aaa
mov
cmp
mov
xor
and
jmp
inc
sbb
and
sub
jne
sahf
movb
inc
fcmovnb
fildll
xor
insl
push
sub
jns
cmp
mov
xchg
mov
jg
subb
adc
push
jp
imul
pop
mov
mov
sti
and
data16
and
adc
dec
and
imul
push
xchg
test
pop
inc
or
cld
mov
fnsave
aam
ror
imul
sub
dec
inc
es
dec
shl
sbb
push
mov
ret
mov
sbb
mov
fdivrs
ds
les
lcall
dec
push
fwait
lret
cs
aaa
dec
pushf
xchg
je
cs
or
lods
jge
ret
adc
hlt
sbb
push
enter
mov
mov
inc
ret
cmp
outsl
push
fcompl
lret
xchg
rep
ret
int3
cmpsb
push
ret
aam
sbb
arpl
fs
xchg
imul
push
int3
and
js
outsb
insb
in
pop
mov
mov
rclb
sbb
imul
mov
mov
lea
stos
push
icebp
inc
mov
mov
shr
mov
push
pop
mov
adc
mov
mov
dec
and
hlt
sbb
pop
mov
sbb
adc
push
in
sbb
dec
mov
loopne
shlb
sbb
push
jg
call
mov
andps
mov
mov
movsl
xor
and
test
inc
add
or
dec
pop
or
mov
jo
aam
inc
mov
mov
adc
arpl
pushf
push
mov
inc
sahf
mov
jne
lahf
loopne
es
insb
es
outsb
mov
inc
imul
mov
inc
fstpl
cmpsl
fsubrl
adc
jb
hlt
scas
add
ja
mov
pusha
add
and
ds
mov
cmp
xchg
mov
sub
or
ret
ljmp
leave
adc
icebp
mov
mov
mov
or
xchg
test
xor
lea
hlt
lock
push
sub
or
and
ficompl
popa
xchg
cmc
in
std
dec
adc
stos
xchg
stos
mov
xor
mov
sar
in
fldcw
mov
hlt
pop
mov
aas
jmp
cmp
xor
test
sub
stos
add
jno
pop
fsubrs
icebp
pop
pusha
dec
xor
push
je
mov
out
jmp
mov
add
dec
nop
cmp
scas
testb
xor
testl
adc
jno
add
add
stos
shrl
fnsave
jo
daa
ret
mov
xchg
stos
xchg
jne
mov
rcrl
mov
out
and
push
xor
inc
inc
pushl
lahf
push
adc
or
js
xchg
or
sbb
pop
jle
sbb
test
jge
mov
pop
call
or
dec
push
add
mov
dec
or
loopne
xchg
mov
sub
outsl
stos
mov
out
mov
inc
fsubrs
fwait
subb
std
arpl
icebp
lret
imul
inc
jbe
or
mov
ret
cmp
adc
mov
pushf
dec
pop
dec
test
loopne
adc
aaa
mov
cmpsb
add
inc
inc
lret
mov
inc
ret
lods
push
push
std
and
lcall
mov
imulb
jle
enter
mov
icebp
gs
mov
test
sbb
cmc
mov
mov
jbe
mov
pop
popa
imul
jae
out
stos
movb
out
test
adc
jns
mov
vpand
test
mov
rorb
pop
ficoml
arpl
pop
cltd
sbb
or
push
xor
sahf
decb
ja
mov
xchg
test
test
jbe
jg
sarb
jb
cmp
stos
stc
mov
inc
jb
xor
out
inc
jp
inc
push
ljmp
mov
leave
push
rolb
mov
and
and
inc
insl
daa
cmp
pop
push
popa
or
adc
cmc
cs
mov
lret
pop
pop
and
sub
push
aaa
mov
sbb
mov
insl
mov
ljmp
lcall
daa
xchg
jne
andb
jmp
dec
mov
movsb
enter
cmp
fists
lock
orb
xchg
pop
repnz
pop
in
add
or
dec
push
call
add
pop
cmp
ss
jecxz
add
fadd
mov
fs
mov
imul
sti
xor
xchg
dec
mov
push
pop
jae
cmpb
movsl
fcmovu
or
dec
or
cmpsb
ss
inc
sti
jmp
pop
jle
stos
xor
dec
push
or
cmpsl
dec
xchg
cmp
pop
inc
mov
js
lret
cwtl
push
add
pop
mov
pop
loope
mov
fistpl
mov
pop
mov
out
rorb
test
je
mov
lahf
dec
push
sbb
push
sub
pop
and
or
rcrb
and
push
mov
std
xchg
push
push
cmpsl
call
lds
mov
pop
and
bndldx
cwtl
mov
mov
adc
cmpsb
xchg
xchg
cmc
lods
test
mov
pop
xchg
xor
mov
cmpsl
xchg
sub
js
sub
ja
insl
dec
loop
mov
loopne
daa
jno
xchg
push
leave
cmpsb
lock
fwait
clc
xchg
jecxz
popl
je
test
mov
mov
jp
repnz
mov
add
and
xchg
push
xor
stos
cmp
add
ss
xchg
mov
scas
adc
xchg
lock
rclb
xchg
sarb
mov
sahf
mov
mov
incb
iret
gs
and
jle
mov
mov
or
xchg
push
cmp
add
rcll
shr
lea
xor
cmpb
filds
test
gs
dec
push
jne
adc
push
test
cld
cmp
adc
dec
pop
dec
std
in
push
fistps
cs
push
or
mov
adc
std
or
testb
push
roll
dec
sbb
aam
loopne
xchg
lods
adc
cmpb
insl
addr16
mov
dec
push
mov
jno
ret
test
loop
call
pushf
insb
mov
in
das
jbe
jae
cmp
or
sub
ds
adc
xor
nop
es
lods
bound
js
in
jbe
cli
lea
adc
xchg
or
loop
rclb
aaa
jle
sub
fldt
adc
addr16
mov
xor
out
lea
fdiv
cmpsb
test
movsl
xor
sahf
adc
pop
xchg
nop
imul
sti
xchg
aas
data16
mov
fistl
xor
test
inc
pop
mov
addr16
loop
xchg
scas
orl
test
lods
je
mov
sbb
xchg
loopne
adcb
push
and
cwtl
add
sti
or
lods
mov
inc
enter
cmp
jecxz
test
mov
mov
in
ljmp
fadds
out
in
inc
pop
mov
add
into
rcll
jne
xor
inc
adc
adc
or
or
icebp
pop
xor
xor
push
jo
sub
push
mov
scas
xchg
das
push
outsl
sbb
cmp
jbe
mov
aam
mov
cltd
dec
sub
mov
mov
cltd
push
xchg
sbb
push
in
out
push
or
aaa
ss
and
mov
jmp
gs
adc
xchg
jmp
sti
mov
push
or
rcrl
int
cwtl
shrl
scas
frstor
and
mov
dec
jns
dec
jp
dec
popf
adc
hlt
call
in
pop
mov
nop
jp,pt
out
iret
test
ja
inc
push
mov
lods
call
rolb
mov
cmp
mov
cs
adcl
push
loopne
and
cmp
aam
in
lcall
arpl
cmc
lock
add
dec
push
stos
inc
in
and
into
add
cmp
and
jecxz
insl
mov
xor
inc
cmp
inc
sub
inc
push
lds
push
add
dec
adc
dec
cmp
repz
mov
dec
sbb
sub
es
mov
lods
dec
sahf
adc
xor
add
push
inc
fcmovnbe
fbld
dec
push
hlt
push
and
adc
pop
and
mov
sti
ret
inc
int
sbb
xchg
bound
ss
fucomip
lods
lcall
pop
insl
and
push
xchg
pop
dec
pop
mov
cmp
jp
xor
fmull
out
push
xor
push
mov
fstps
pushf
cmc
inc
cmp
fwait
mov
sub
push
and
push
adcl
sub
push
sarb
pop
and
std
push
ret
popf
mov
or
pop
lods
jge
mov
push
std
jle
repnz
cld
js
xlat
mov
cmc
pushl
addr16
decl
fldl
js
xor
int3
adc
ja
inc
inc
mov
xchg
das
mov
add
xor
mov
rcrl
clc
inc
pop
int
mov
xchg
fsubs
loop
arpl
add
mov
ja
cmp
addr16
mov
loopne
pop
and
cmp
ret
xchg
mov
hlt
mov
mov
int3
fistl
ret
roll
ds
xlat
lods
cmc
iret
mov
push
inc
test
cmp
call
jge
in
das
inc
lcall
mov
jno
jp
dec
ret
stos
pop
jg
lahf
push
xchg
jecxz
lea
xchg
pop
ficomps
mov
les
pop
adc
lock
lods
mov
mov
lods
fs
mov
sbb
jp
inc
cmp
in
sub
pop
incl
scas
jle
daa
shll
test
pop
pushf
dec
in
add
cmpb
jg
call
pop
mov
mov
mov
bound
nop
test
incl
xor
sbb
add
mov
ljmp
cmp
jnp
lahf
jo
fcmovnu
jo
aad
mov
and
push
call
mov
sti
cs
jne
pop
arpl
fmuls
lods
andb
inc
add
outsl
mov
or
rcl
imul
test
hlt
push
push
mov
pop
roll
push
andl
aam
jae
inc
or
imul
in
or
mov
lret
xor
dec
sbb
mov
pusha
cmpsl
cs
inc
sub
test
dec
loopne
test
in
adc
mov
insb
pop
outsl
das
les
inc
pop
jae
into
add
xchg
lods
das
fimuls
nop
test
push
outsl
lods
imul
push
pop
lds
lret
mov
jbe
js
inc
add
cmp
lea
shrb
jecxz
push
movups
in
pop
xor
jp
push
dec
mov
jae
cmp
dec
jne
mov
and
mov
std
push
imul
ds
sti
fbld
or
adc
mov
and
inc
aad
cwtl
shrl
test
outsb
shr
sub
xchg
inc
das
dec
inc
lods
outsb
hlt
test
push
stos
push
and
mov
push
pusha
mov
jmp
nop
push
adc
aas
bound
dec
bound
outsl
std
bound
or
and
movsl
insl
sbb
mov
add
scas
je
cmpsl
fs
fcmovnu
incl
or
inc
add
jmp
dec
aaa
pop
jbe
rcr
mov
xor
dec
mov
mov
mov
hlt
stos
push
sub
cld
add
ljmp
xchg
mov
cwtl
sbb
aaa
pop
ljmp
dec
lea
outsb
shlb
sbb
mov
adc
or
or
loopne
mov
add
inc
insb
clc
inc
push
fwait
push
pop
in
mov
rcr
push
or
and
test
or
rorb
add
test
xlat
ss
dec
loope
xchg
sub
cmp
imul
adc
mov
fisttpl
jne
push
mov
test
in
xchg
pop
cwtl
inc
imul
push
out
stos
fildll
inc
out
dec
enter
or
sbb
dec
rcl
sbb
adc
jns
cs
lcall
xchg
test
lds
jo
ret
sub
inc
push
or
mov
add
sbb
add
xchg
push
je
mov
out
sahf
mov
pushl
jns
movsb
inc
xchg
gs
repnz
pop
add
jge
sbb
in
shr
add
js
sub
sub
push
mov
aaa
test
test
es
lods
add
or
cmp
push
pop
outsb
mov
ds
xchg
stos
pop
test
adc
jmp
sub
xchg
insb
outsb
mov
push
xchg
data16
outsb
sub
xor
xchg
leave
sarl
daa
push
lcall
pop
shlb
add
dec
test
inc
jg
shll
dec
cwtl
push
lcall
cmpsb
mov
add
push
popa
dec
dec
andb
incb
sbb
test
sbb
lahf
dec
or
lahf
or
aaa
stos
mov
mov
cmp
push
popa
movsb
mov
imul
pop
out
pusha
sbb
aas
pusha
pop
cs
rclb
xchg
or
aad
jo
scas
imul
fcoml
xchg
or
add
loop
ret
loopne
dec
test
mov
ljmp
xorb
add
scas
adc
cmp
bound
mov
pop
inc
gs
jle
or
pop
inc
or
or
sbb
outsl
mov
mov
pop
aam
test
sbb
push
fidivrs
fldcw
clc
inc
icebp
decb
jle
jno
fsubrl
les
sti
sbb
test
fwait
sub
shrb
add
adc
xor
test
fstpt
inc
movsb
mov
insl
jecxz
insb
add
adcl
test
pop
jle
imul
push
test
aaa
xor
add
or
cmc
das
xchg
test
test
shlb
stos
add
mov
add
cmp
mov
and
push
mov
andb
adc
xor
pop
mov
stc
insb
scas
mov
insb
or
lods
aad
flds
sti
ljmp
pop
sbb
sub
imul
pop
xchg
sbb
in
mov
stos
test
loope
sub
xchg
push
scas
das
dec
loopne
and
or
mov
movsl
fisttpl
pop
rcrb
out
xor
ret
das
ja
mov
in
into
jae
incl
nop
int3
inc
in
std
mov
dec
lock
or
dec
sub
ss
add
mov
mov
push
mov
imul
cltd
add
add
les
mov
adc
imul
push
or
pop
cmpsl
mov
mov
dec
adc
mov
leave
ss
gs
jle
jp
add
xchg
mov
jb
and
movsb
cmp
out
mov
or
mov
mov
roll
out
loop
inc
mov
inc
das
inc
jns
ljmp
mov
aas
add
sub
in
bnd
fisttpll
movsb
mov
adc
jb
add
xlat
cs
or
pop
jle
mulb
jbe
call
cmpb
inc
std
repnz
jle
pop
call
enter
mov
adc
mov
icebp
outsl
mov
repnz
dec
test
ret
lds
imul
jecxz
and
stos
jae
push
insl
xchg
fistpll
or
imul
je
lcall
cmp
loope
je
mov
shll
pop
sbb
das
push
push
push
lcall
add
inc
sub
pop
push
test
or
mov
push
je
jle
addr16
daa
mov
sbb
xorl
je
int3
sarb
in
clc
mov
movl
sub
inc
push
lea
shrb
loop
or
imul
pop
cli
dec
out
sub
push
lea
pusha
in
pop
sub
jg
les
repz
push
enter
push
xchg
mov
in
or
loop
mov
jl
xchg
jmp
add
lahf
dec
inc
mov
sub
or
add
xor
lods
sub
movsl
sub
fidivl
ljmp
xor
xor
lock
call
or
faddl
sub
cs
push
mov
add
adc
rolb
xchg
cmpsb
or
jg
push
and
jge
add
cmp
daa
push
mov
sbb
lock
push
pop
pop
loope
enter
iret
sub
and
mov
inc
inc
xor
rcr
test
cs
pop
aaa
nop
xchg
xchg
loopne,pn
inc
or
cld
inc
mov
dec
mov
sbb
push
add
outsl
movsl
add
pop
inc
mov
outsb
add
push
xlat
mov
js
fstpt
push
inc
add
add
sub
rcll
lock
pop
data16
out
fdivl
mov
push
std
call
adc
subb
push
cmp
xchg
or
notl
test
das
xor
jne
jno
inc
push
sub
pop
or
mov
xchg
or
mov
mov
mov
inc
or
or
fwait
adc
out
les
ret
cmp
ja
add
jbe
jnp
addb
loop
das
cmp
dec
add
mov
push
fisttpl
fbstp
and
popa
ret
cmp
cmp
mov
jnp
jnp
adc
std
scas
sbb
mov
aad
dec
ljmp
movsl
ret
mov
pop
sub
jno
pop
inc
dec
clc
ss
fisubs
popf
adcb
insb
std
push
out
fstl
and
and
or
rclb
fwait
in
mov
mov
fdiv
aaa
mov
jp
fs
mov
inc
insb
sub
ds
cmp
sbb
icebp
aad
cmovl
repnz
in
pop
lret
push
adc
cmc
gs
ret
inc
clc
or
cmpb
and
xlat
rol
imul
loope
add
xchg
lahf
lock
sbb
mov
mov
loope
mov
mov
pop
dec
js
adc
iret
push
cli
adc
mov
les
push
outsl
test
mov
pushf
or
call
add
mov
jecxz
iret
jns
lock
outsl
fisubs
stos
or
addr16
stos
enter
fucomip
ljmp
cwtl
jbe
mov
xchg
xchg
pop
in
shr
inc
cwtl
je
sbb
sahf
js
push
les
stos
adc
dec
sbb
outsb
cld
mov
push
fcoms
cs
add
jnp
xchg
shrb
inc
cmp
sbb
ret
mov
ds
adc
fcoms
pop
clc
jb
mov
add
jecxz
mov
dec
mov
mov
mov
xlat
pushf
and
cmp
incl
inc
ret
or
add
clc
imul
mov
adc
out
pop
fimuls
mov
popa
add
jne
cmp
icebp
sbb
cmp
icebp
inc
jle
scas
dec
dec
rorl
add
out
dec
mov
lea
adcb
add
fidivrs
add
add
mov
aam
addb
adc
cli
dec
leave
mov
test
lcall
lcall
dec
dec
jl
in
adc
mov
outsl
jle
nop
roll
shll
aad
cmp
adcl
or
ror
out
xchg
repz
test
and
xchg
pop
jecxz
pop
mov
xchg
pushf
mov
andl
rcrb
sbb
dec
adc
jae
mov
and
cmpsl
repnz
sub
dec
pop
lock
inc
add
inc
das
hlt
push
mov
jl
adc
pop
or
js
std
mov
pop
push
jbe
out
ss
lods
lahf
inc
mov
jle
lahf
popf
test
vpsllw
in
pop
sbb
push
mov
mov
cwtl
pop
sbb
ja
enter
clc
mov
sub
mov
mov
jnp
mov
aam
xchg
and
lods
mov
mov
adc
jge
mov
in
fidivl
les
mov
jg
cmp
push
inc
adcl
sbb
jne
mov
enter
loop
xchg
cmp
loop
push
inc
pop
cltd
mov
pop
int3
adc
fprem
lods
jecxz
testb
sub
jmp
mov
cld
not
xchg
hlt
and
adc
imul
lds
or
cmovne
mov
cmpsl
ret
cmc
sbb
jo
icebp
cmp
addr16
push
mov
std
or
orb
and
mov
std
aaa
cmpsb
lret
leave
stc
fdivl
out
mov
jl
iret
fistpll
stc
mov
pop
and
mov
xchg
sub
push
jb
movsl
nop
sarb
fneni(8087
sub
add
sbb
imul
sbb
scas
int
fdivrs
or
das
add
inc
inc
ret
jge
sub
mov
aam
pminsw
pop
out
push
sub
fisttpll
lahf
jae
pop
cmpb
das
lock
inc
loope
ljmp
pusha
out
test
mov
pop
or
mov
mov
pop
and
lock
xorl
dec
popa
xchg
dec
add
dec
sbb
ret
int
rcrl
lahf
lods
cmp
fdiv
add
cli
sub
std
scas
testb
push
dec
lock
push
push
xor
push
jno
jp
roll
dec
cmc
mov
je
leave
jle
push
jne
mov
mov
dec
jns
pop
sub
mov
jne
outsl
outsl
jno
jmp
dec
data16
sahf
add
std
ljmp
or
sbb
dec
pop
lcall
adc
lcall
outsl
rcr
orl
mov
sbbb
iret
jnp
adc
data16
inc
sbb
mov
add
cwtl
jo
push
or
in
push
stos
sub
fisubrl
dec
mov
xor
or
ficoms
sub
lcall
adc
ja
sbb
xchg
xchg
cs
fistpll
pop
mov
mov
repz
std
negb
xor
xchg
bound
mov
or
sbb
and
mov
loop
add
mov
call
lea
pop
inc
xacquire
loopne
enter
mov
ficoms
jns
jl
or
icebp
push
dec
or
scas
mov
xor
mov
xchg
enter
pop
sub
idiv
adc
sbb
pop
adc
shll
fdivs
scas
ficompl
int3
aam
add
inc
pop
push
ljmp
pushf
and
add
cwtl
int3
repnz
sbb
lret
insl
iret
inc
testl
in
mov
mov
pop
xor
jb
xor
jmp
jae
or
xchg
push
fs
dec
inc
mov
lret
andl
push
add
rorb
push
mov
pop
and
mov
stos
mov
mov
inc
jo
ljmp
xchg
jle
xor
mov
inc
out
adc
test
xchg
test
dec
and
inc
cld
or
stos
into
sarl
ffree
das
xchg
lods
jae
fsubl
sar
push
mov
hlt
pop
dec
hlt
adc
call
and
stc
cmp
das
push
lcall
push
or
xchg
out
inc
fucomp
inc
aam
mov
ss
pusha
cmp
xchg
outsb
faddl
fistps
out
cli
aaa
sub
pop
insb
dec
les
add
es
lea
js
jle
rcl
popa
repz
sub
idivb
insb
dec
loope
sub
jl
fcomps
add
xor
add
outsl
outsl
clc
cs
es
in
push
in
aas
aad
fcomip
andb
cli
mov
push
enter
rcr
inc
push
adc
mov
iret
mov
in
int3
into
adc
cld
push
jle
push
add
sub
imul
clc
jbe
xchg
add
sbb
jp
ret
or
inc
push
pushf
inc
sub
xor
mov
jle
andb
movsb
add
dec
icebp
les
loopne
in
dec
push
add
pop
pop
push
aad
test
dec
rorb
xor
nop
in
jp
pop
fisubs
adc
movsl
pop
andl
ljmp
frstpm(287
xlat
sub
xorps
pop
jle
push
andb
in
adc
negb
clc
sar
mov
lret
sbb
add
jp
inc
fs
fs
mov
pusha
xor
aas
stc
inc
dec
lock
mov
repnz
push
jge
mov
ljmp
mov
test
aas
and
and
or
loopne
dec
push
les
in
sbb
shr
test
nop
out
xchg
aaa
aad
add
add
add
dec
inc
in
adc
xor
arpl
pop
or
movsl
pop
push
adc
jp
cs
jb
out
data16
sub
sub
ret
mov
adc
rorb
push
mov
add
push
mov
int3
leave
inc
lods
pop
subb
in
adc
or
ljmp
xlat
enter
push
pop
jns
add
in
std
sbb
jno
xchg
enter
lods
inc
cmpsl
and
cld
adc
xchg
test
notb
cltd
test
mov
lods
sub
imul
mov
jo
sbb
push
rcrb
mov
jg
lcall
xchg
in
mov
loopne
sti
mov
dec
pop
jmp
movsl
jns
mov
xchg
fists
cld
pop
insl
cmp
test
movsl
ja
icebp
test
jmp
jecxz
pop
or
testb
inc
pop
inc
ja
cmpsl
not
loopne
notl
pushf
daa
cmpl
push
add
sti
fstpl
push
lds
fisubrl
push
in
xchg
or
js
nop
push
hlt
data16
adc
adc
pop
insb
pop
loop
mov
xchg
sub
fisubrl
enter
int
inc
movzwl
out
sar
cli
das
aad
in
movsl
sub
xchg
sbb
and
add
push
mov
xor
sbbb
jno
sub
mov
popf
imul
sub
leave
icebp
push
sbb
movsb
nop
push
cld
xor
or
sbbb
push
sahf
lods
mov
fdivrs
push
xor
dec
filds
cld
nop
or
sbb
lods
add
cmc
mov
pop
test
and
push
mov
fnstcw
loopne
dec
scas
cwtl
fdiv
pop
inc
mov
sbb
sar
pop
add
stc
sub
and
sti
stos
ret
repnz
mov
mov
js
and
fwait
or
pop
insl
pop
mov
push
es
add
add
enter
lcall
pusha
push
pop
jnp
subb
sbb
fistps
sbb
sbb
and
push
xlat
stos
call
push
sub
hlt
and
movsl
dec
loopne
repnz
mov
inc
ficoml
and
andb
mov
mov
js
loope
fistl
cmc
mov
notl
loop
dec
xor
jmp
xchg
loopne
sarb
lret
test
jecxz
cmp
mov
inc
push
push
jnp
loop
cli
inc
inc
hlt
dec
rorb
inc
or
iret
xchg
nop
outsb
test
shll
dec
lahf
imul
push
and
lcall
cmp
pop
xor
ds
mov
inc
xchg
inc
test
in
adc
in
std
push
cmc
sub
or
cmpl
stos
mov
cmp
xor
push
int3
fisubs
adc
xorl
in
paddd
out
lret
dec
rorb
ljmp
xor
or
jo
popa
lock
xorb
push
push
ja
push
nop
push
cmp
mov
fldl
call
into
bound
inc
mov
pop
mov
push
xor
or
ljmp
dec
cltd
add
scas
sub
xchg
mov
mov
insb
pop
mov
scas
outsb
sub
inc
lock
jno
or
out
pop
pop
jnp
mov
adc
jae,pt
aad
mov
and
int3
mov
dec
lea
enter
jnp
push
shl
xorb
cmp
hlt
sub
jmp
jg
mov
pop
or
mov
mov
mov
ret
push
lock
adc
sti
fsubl
outsl
adc
mov
adc
cmp
dec
dec
sbb
push
and
fbstp
pop
loopne
shl
dec
add
test
or
out
or
xchg
xchg
shlb
test
add
add
pop
sbb
adc
push
mov
jmp
mov
sbb
add
xchg
pop
dec
and
inc
enter
nop
push
xchg
shlb
cwtl
daa
pop
pop
jb
mov
mov
mov
das
sub
inc
setno
dec
fldt
arpl
insl
jge
inc
mov
in
test
jp
mov
cs
cmc
push
cmpsl
loope
movsl
adc
cwtl
rcr
push
pop
dec
push
or
pop
dec
inc
orb
int3
xor
btr
push
fs
fsubs
add
stos
inc
pop
pop
icebp
hlt
lods
xor
or
inc
mov
sub
lods
add
or
jbe
sub
xor
clc
aaa
std
orl
aaa
dec
cmp
in
push
xchg
shr
call
or
or
dec
rol
ja
xchg
push
dec
filds
test
push
xchg
lods
push
orb
fsubrp
ss
mov
cmp
stos
and
cltd
out
cmp
mov
incl
pop
adc
cwtl
jae
cmp
sbb
mov
dec
xchg
dec
mov
lahf
shl
add
lcall
out
pop
test
xor
inc
or
lods
xchg
mov
mov
into
lcall
das
sub
scas
xchg
inc
fsubrl
in
fadd
dec
pop
outsb
sub
das
push
pop
sahf
add
das
mov
mov
inc
ffree
imul
nop
inc
hlt
jno
loopne
ja
nop
mov
push
cmp
push
dec
cmp
and
jmp
sbb
pop
lea
push
cwtl
mov
clc
and
and
icebp
clc
mov
dec
ja
push
xchg
scas
ret
cmp
push
inc
jae
lahf
into
rolb
imul
lret
inc
add
sub
inc
test
xadd
aaa
fdivrp
lods
lahf
pop
or
pop
jecxz
pop
pop
push
push
dec
mov
test
iret
das
mov
inc
jge
push
sbbl
aam
incl
mov
roll
cli
adc
scas
inc
addb
push
decl
adc
cmp
xor
lock
sti
xchg
cmc
sub
lcall
mov
mov
sahf
push
daa
sub
and
addr16
jns
adc
je
cmpsb
add
push
jo
sbb
pop
je
sbb
push
mov
lods
sarb
adc
mov
inc
push
rclb
scas
pusha
dec
xchg
mov
jmp
pusha
dec
fwait
sub
pushl
lcall
popa
ss
mov
decl
add
cmpsb
mov
xchg
fistpl
mov
aam
or
pop
sbb
push
xchg
scas
shlb
xchg
or
cmp
pop
out
mov
mov
fbld
rolb
jo
or
clc
test
cs
inc
aad
xchg
xchg
into
arpl
xlat
pop
dec
sub
lods
mov
test
mov
pushf
aad
cli
shrl
dec
sahf
inc
cwtl
adc
cwtl
jge
test
insb
lods
repnz
sub
lock
jns
fidivrl
lea
mov
imul
dec
mov
fwait
loope
mov
jne
adcb
lcall
jbe
mov
adc
xchg
cmp
cld
outsl
das
mov
les
mov
bound
call
js
std
insb
mov
push
inc
shll
inc
mov
loope
into
inc
imul
orl
mov
fstpl
xor
call
pop
addl
push
mov
int
or
sbb
pushf
pop
das
shlb
pop
repz
out
movsb
out
hlt
mov
inc
add
pop
pop
add
push
add
mov
dec
sub
aam
push
xor
xor
sbbl
ror
push
sub
push
sub
cmpsl
sub
arpl
fs
push
and
fldt
cmp
mov
mov
ret
cmpsl
dec
out
push
xor
jge
mov
inc
inc
imulb
push
ss
jnp
sbb
cld
xor
pop
stc
addr16
lock
add
arpl
cld
mov
loopne
insb
or
enter
scas
lea
mov
subb
add
cs
and
jo
lea
cltd
xor
pop
pop
push
in
xchg
pop
lcall
shrb
sbb
mov
stos
adc
mov
sbb
stos
dec
cltd
hlt
add
fs
clc
ret
push
pop
jo
mov
addr16
daa
inc
jno
ret
insb
inc
addr16
add
sbb
out
test
mov
mov
loop
sbb
pop
clc
sub
insl
out
mov
mov
pop
in
das
mov
mov
jns
aad
add
sub
fwait
bound
ss
mov
pop
sub
loop
dec
jmp
inc
jge
test
nop
xor
jg
xchg
mov
push
ljmp
and
sti
int3
in
testb
xor
outsl
aad
int
outsl
add
hlt
outsb
mov
loop
pop
lea
or
cmc
fists
inc
test
cltd
test
inc
push
inc
std
push
push
into
cmp
lock
and
jg
fiadds
inc
and
in
mov
push
fists
outsb
inc
xchg
mov
mov
fadds
sub
lods
xor
rclb
popf
nop
push
push
lock
mov
popf
jp
sub
ja
sub
and
jmp
daa
mov
push
mov
lcall
mov
or
inc
mov
xchg
push
jge
xor
outsb
xor
icebp
ret
imul
adc
adc
fwait
and
in
outsl
sbb
and
daa
sub
dec
sarl
insl
in
jl
mov
jecxz
push
or
xchg
or
dec
stc
inc
push
inc
xor
hlt
lret
jp
inc
fstpt
adc
daa
hlt
inc
rcrl
xchg
dec
mov
or
mov
push
or
ljmp
test
lea
dec
and
sbb
jb
or
dec
push
jbe
jnp
hlt
xchg
loopne
call
mov
rcrl
lock
outsl
push
lea
mov
adcl
xchg
dec
or
lock
xchg
add
imul
lahf
cmp
or
mov
adcl
sbb
mov
push
xor
clc
ljmp
adc
aaa
fdivrs
dec
or
adc
shlb
in
in
push
add
pmulhw
mov
jg
lods
jp
lds
int
fnstcw
adc
outsb
mov
fs
ret
into
xchg
movsl
jmp
push
inc
mov
xor
pop
dec
inc
xchg
jmp
push
aam
aad
pop
icebp
cmc
xor
rolb
movsl
xor
or
push
mov
aas
add
ret
imull
ret
loope
xlat
inc
inc
repnz
pop
fistpl
js
or
jno
daa
mov
in
incb
push
loop
cmp
mov
xor
jmp
mov
pop
adc
stc
ret
aam
rorb
inc
ret
pop
mov
push
aam
sbb
or
pop
aam
test
push
sub
movsl
mov
in
inc
lock
push
jecxz
mov
lock
notb
adc
hlt
ja
and
jg
mov
aaa
fcomp
adc
inc
ds
sub
testl
jne
cltd
or
ret
pusha
sub
or
pop
pop
adc
jbe
xchg
fsubrs
hlt
lret
cld
or
scas
cmp
xchg
dec
inc
iret
jmp
scas
or
inc
push
add
cmp
inc
aas
xor
pop
data16
fisubrs
insl
scas
stos
int
stos
ror
insb
in
jl
mov
cmc
mov
adc
cmp
mov
pop
mov
sub
incl
xor
dec
cmp
sbb
adc
add
xchg
sub
lcall
mov
inc
leave
aad
ror
dec
aad
dec
inc
into
popa
lcall
push
inc
iret
adc
arpl
and
fisubs
mov
add
jle
imul
call
in
pop
xor
movsb
mov
or
js
incl
add
fsub
pop
std
sub
ds
lds
jp
sub
sub
mov
push
enter
sbb
cmc
cmp
mov
xchg
pop
jnp
mov
push
and
aas
sbb
add
jle
call
or
inc
mov
sbb
insb
in
push
scas
xchg
frstor
xchg
sub
sbb
fsubrl
push
dec
pushf
mulb
fcomi
mov
push
fdivrl
jecxz
lods
mov
inc
xor
cmp
push
dec
cmp
or
data16
fucomi
jp
mov
mov
push
pop
andl
mov
and
sbb
jne
mov
enter
into
inc
sub
mov
aaa
sub
cld
mov
and
lret
pop
mov
jecxz
enter
xchg
and
in
fistl
jbe
sarl
hlt
test
jb
xchg
dec
or
xchg
ljmp
add
dec
add
cmp
dec
add
mov
rclb
inc
lret
mov
push
jg
jecxz
jg
hlt
fcoml
dec
aad
mov
pop
nop
je
adc
outsb
mov
cmova
outsl
loope
jl
sbb
push
scas
mov
push
ja
mov
inc
xorl
sbb
shlb
ljmp
sbb
loop
aaa
and
pop
out
sbb
xorl
jae
arpl
inc
jbe
pop
enter
inc
mov
aaa
and
popa
outsl
mov
lock
and
movsb
adc
jb
and
js
jns
jo
and
dec
movsl
dec
mov
mov
push
xchg
fsubrs
out
sbb
into
or
fucomp
scas
in
loope
repnz
xchg
pusha
sub
mov
out
jo
inc
outsb
sbb
js
test
test
ss
sub
out
jp
cli
mov
arpl
ja
gs
cld
icebp
aaa
pop
les
cmp
mov
inc
add
cmp
das
test
inc
out
daa
jne
or
push
add
xchg
push
push
and
decl
das
nop
pop
add
adc
mov
in
outsl
jl
sti
shlb
or
rorl
mov
call
test
rclb
lea
cwtl
push
das
and
mov
xor
jle
rcr
ret
cmp
xor
stos
add
add
push
icebp
sub
push
idivl
dec
lret
or
test
fsubrl
add
dec
jo
lock
rcrl
sahf
imul
mov
stos
es
add
out
mov
add
inc
cmc
jmp
xchg
ret
mov
je
mov
jnp
lret
xor
sbb
mov
mov
xchg
mov
or
cmpsb
jb
sub
out
subb
adcl
outsb
push
mov
dec
jg
jmp
xchg
test
movsl
dec
pop
add
jns
push
repnz
cmp
movsb
in
lret
or
adc
jg
fcmovnu
push
ret
mov
gs
popf
lods
sbb
mov
lock
mov
test
pop
mov
int3
mov
sbb
outsb
fildll
add
ljmp
mov
push
insb
mov
pop
and
daa
in
inc
dec
ljmp
push
adc
leave
jae
jmp
or
mov
mov
jecxz
out
mov
das
insl
loope
insb
mov
add
mov
adc
push
push
jecxz
incb
mov
ljmp
and
shlb
std
scas
mov
or
and
jb
adcb
outsl
mov
into
mov
fcoms
pop
jg
rcrb
xchg
ret
xchg
and
mov
mov
jp
add
jnp
call
lds
ja
sub
aaa
pop
push
xchg
lret
or
loop
cmc
pop
inc
push
pop
jecxz
xlat
push
mov
add
mov
dec
pop
decl
popf
cli
mov
add
jp
rcr
or
idivl
dec
clc
sub
dec
fistl
sar
sub
arpl
call
mov
pop
push
aaa
lock
sahf
push
mov
mov
js
sbb
les
jl
lahf
sar
fcomip
push
cli
mov
mov
and
shl
addr16
or
test
jnp
push
out
pusha
scas
das
push
shlb
lea
negl
sbb
jmp
xchg
adc
mov
mov
ss
inc
fstpt
add
or
add
inc
mov
test
sub
dec
int
and
mov
mov
outsl
call
sub
mov
stc
lods
push
sub
inc
inc
mov
inc
imul
jmp
cmovs
icebp
clc
aad
push
pop
hlt
adc
pop
lds
fwait
test
jge
movzwl
sbb
dec
mov
xchg
xor
lea
push
mov
and
cmp
test
dec
loop
jae
icebp
das
push
mov
inc
pop
pop
lea
sub
ret
cwtl
cltd
push
test
mov
sahf
or
dec
inc
push
call
mov
popa
das
sub
mov
add
and
xchg
ljmp
das
cld
sti
loop
pop
pusha
push
adc
dec
adc
out
cmpsb
inc
adc
fucomip
test
or
jb
lahf
jg
sbb
and
inc
sub
decl
insl
jge
gs
lret
int
or
outsb
loopne
lret
cmp
fidivrs
ljmp
call
mov
xorl
mov
scas
push
jo
and
scas
jp
std
test
xor
xor
sub
lea
xor
jbe
mov
outsl
fists
add
es
in
insb
iret
xchg
mov
scas
enter
adc
dec
push
call
add
test
adc
mov
imull
ffreep
aad
fs
push
aaa
xlat
hlt
or
or
pop
pop
pop
sbb
mov
mov
push
aad
subb
test
fists
scas
xlat
add
jno
mov
push
and
inc
jge
push
leave
jle
aad
and
cmpsb
clc
adc
ss
inc
jnp
test
ljmp
mov
nop
mov
xchg
xor
ret
clc
scas
pop
fistpl
ret
or
popa
mov
shlb
fisttps
int3
leave
stos
lods
clc
filds
pushf
inc
xor
fistps
add
je
jbe
sti
lret
stos
movsl
xchg
push
or
jns
insb
inc
mov
adc
test
jnp
rorb
shrb
jmp
stos
and
push
jbe
mov
sub
push
fxch
mov
and
xchg
mov
mov
push
mov
sub
adc
xor
jmp
imul
dec
sub
sbb
or
jmp
mov
push
dec
inc
test
adc
into
mov
sti
cmpsb
in
rclb
fldt
in
sub
stos
roll
push
fcoml
ljmp
mov
pop
shl
int3
gs
cmc
scas
or
pop
addr16
arpl
jp
loope
inc
jp
fwait
jp
ss
inc
mov
or
mov
arpl
mov
iret
mov
sahf
mov
mov
icebp
movb
loope
cwtl
cmpsl
lock
cmp
in
aas
pop
popf
js
adc
faddl
mov
jge
jg
mov
adc
call
mov
push
fs
mov
jbe
ds
jbe
adc
jp
sub
inc
lock
fistpll
fsubrs
jl
insl
ret
inc
imul
incb
cmp
add
mov
int
in
sarb
adc
and
test
sbb
mov
lods
icebp
adc
das
imulb
mov
dec
sub
jo
add
push
inc
mov
xchg
dec
shll
fistpl
or
xchg
popa
mov
jbe
inc
or
shrb
out
push
adc
lret
hlt
sbb
sti
jb
repz
aaa
ret
vmovaps
dec
pop
ret
out
insb
popa
rolb
mov
cmp
clc
andb
xchg
xchg
stos
sbb
ss
cmp
fisttps
or
or
es
and
fidivl
xor
mov
xchg
enter
fcomps
inc
and
pop
mov
bnd
adc
in
mov
adc
mov
xchg
xchg
in
xor
mov
ja
outsl
ret
jne
or
mov
mov
enter
popf
pop
repz
and
pop
push
push
cltd
mov
sub
insl
cltd
lock
fldl
mov
lods
xchg
loop
sbb
jb
sub
inc
and
test
mov
insl
sub
call
std
jmp
inc
push
add
mov
or
add
mov
cmpsb
mov
test
cmp
and
out
es
dec
push
or
xor
sbb
cli
mulb
xor
ja
adc
push
pop
mov
dec
push
jp
adc
adc
cli
ret
pop
xor
hlt
pop
pop
push
shrb
je
pop
xchg
add
sbb
lahf
sub
jmp
push
into
inc
fs
inc
jg
xchg
dec
xor
fwait
jno
icebp
add
out
dec
dec
rcl
push
push
pop
sub
cmc
xchg
dec
aaa
inc
dec
inc
sub
cmp
movsl
sbb
jo
in
and
jmp
std
dec
icebp
pop
psubusw
imulb
jne
push
dec
xchg
call
mov
in
les
and
leave
js
dec
bound
jo
jmp
jnp
mov
jle
rcrl
cltd
stos
dec
jg
add
ficomps
xchg
test
out
lcall
and
je
mov
push
pop
cmp
push
or
fdiv
fldcw
cmp
dec
and
xchg
push
push
cmpsl
loope
popf
and
fsubp
ljmp
lods
ljmp
mov
sti
add
sbb
or
test
into
xor
xchg
insl
icebp
mov
mov
cs
jae
into
add
mov
repz
xchg
sub
in
in
sbb
ljmp
mov
pop
cli
jmp
std
push
pop
test
mov
data16
imulb
faddl
adc
jmp
or
push
mov
mov
sub
adc
ljmp
sub
sahf
test
pop
mov
and
fnstcw
inc
ja
xchg
inc
bound
iret
inc
hlt
rolb
mov
filds
fists
inc
std
fisttps
cld
subb
mov
in
pop
mov
aad
mov
andl
out
clc
sbb
xchg
lds
in
add
and
in
ret
jne
inc
inc
mov
lods
add
pop
xchg
mov
pop
lods
leave
addr16
pop
pop
or
call
mov
hlt
test
dec
fdivl
ljmp
cld
lea
icebp
mov
shll
mov
mov
push
sub
add
test
aaa
call
xchg
mov
jne
aaa
clc
or
mov
mov
inc
adc
popa
lds
or
mov
and
repz
push
decl
addl
push
insl
loope
inc
lods
jle
mov
xor
outsl
mov
xchg
imul
outsl
loopne
mov
or
add
das
jmp
hlt
iret
mov
clc
cli
pusha
add
ret
ret
repz
push
lahf
mov
scas
fstps
inc
enter
adc
rcr
aaa
clc
cmpsl
sub
rorb
lahf
gs
clc
mov
mov
add
pop
imul
inc
in
inc
add
lock
test
or
test
jo
jecxz
push
clc
dec
hlt
fistpll
mov
cmp
ja
mov
mov
cmp
adc
jmp
or
pop
aam
adc
fwait
and
mov
jnp
dec
mov
inc
sbb
insb
das
push
lea
das
dec
into
subl
sbb
push
and
in
cmovae
fadds
cwtl
add
xchg
sbb
movsl
xchg
mov
or
test
fwait
ret
mov
and
jle
jp
inc
mov
std
enter
mov
or
cltd
and
scas
mov
push
jg
or
mov
xor
pusha
or
imul
les
mov
inc
and
outsl
mov
popf
pop
sub
add
sbb
inc
xchg
mov
mov
xchg
aad
cwtl
pop
add
cmp
arpl
dec
xchg
xchg
jl
push
mov
push
and
dec
jl
jmp
add
dec
test
fisubs
pop
lret
cs
xchg
call
cs
popfw
fdivrp
inc
sbb
pop
clc
pop
inc
stos
cs
cltd
push
mov
adc
insl
hlt
addr16
rorl
adc
xchg
insl
test
jb
lret
ficoms
add
or
pop
and
or
shlb
jmp
orb
fimull
mov
daa
xchg
push
dec
cmp
jmp
pushf
sbb
adc
cmp
or
das
outsl
push
sbb
pop
fisttpl
das
jecxz
fwait
int3
addr16
ds
cmc
mov
shlb
pop
in
add
out
pushf
movsb
cmp
mov
add
fidivs
test
sbb
fildll
mov
sub
jns
pop
add
je
cmpsb
lahf
jmp
xor
pop
mov
lcall
jno
mov
lods
dec
mov
xchg
lock
and
cmp
arpl
dec
sub
add
pop
fisttpll
xor
bound
push
test
xchg
lret
bnd
int3
in
int
lods
jne
or
rclb
stos
mov
mov
outsb
push
jne
nop
es
or
or
cs
pushf
cmp
rcrl
push
aaa
sbb
fcompl
insb
pop
jmp
lret
jg
and
rolb
sbbl
mov
andb
jbe
jo
sub
push
arpl
sbb
or
xor
sub
mov
add
popa
cmp
or
cld
cmp
inc
ret
popa
test
fstpt
xchg
or
add
add
lods
sbb
out
lret
push
and
je
push
mov
dec
xor
push
popf
xchg
jg
test
push
cmpsb
mov
inc
xchg
cli
mov
sbbb
setl
adc
mov
ja
addb
cmp
fcoms
repz
mov
sbb
lock
push
inc
jge
push
adc
icebp
outsb
sub
mov
mov
push
ljmp
mov
xchg
and
outsb
and
xor
mov
push
sbb
dec
jbe
das
dec
ss
mov
mov
in
push
sbb
mov
sub
add
sbb
inc
dec
fucomi
das
cld
in
lea
out
ljmp
mov
or
add
pop
mov
xchg
test
sbbb
lods
sub
movsb
sti
cmpsb
test
add
repz
fidivrl
jp
andl
sbb
xor
xchg
xor
add
mov
data16
adc
aas
jmp
jg
call
cli
sar
rorb
add
xlat
incl
mov
push
jmp
js
dec
adc
pop
push
adc
mov
sub
dec
imul
test
rcr
add
loope
dec
shrl
sbb
sub
push
loope
and
bound
mov
outsl
add
jp
call
adc
or
test
xchg
rorb
jno
pop
or
dec
bound
inc
add
cli
pop
stos
icebp
pushf
mov
adc
dec
jge
popf
ret
inc
jp
in
andb
lcall
lock
test
pop
mov
add
call
jo
adc
cmp
daa
mov
clc
xchg
add
mov
int
inc
dec
cltd
dec
xor
pop
pop
iret
mov
xlat
sahf
enter
inc
cmpsb
dec
das
mov
jno
pop
loop
bound
xchg
aad
call
inc
add
shll
outsl
stc
jg
outsl
shl
movsl
and
xchg
leave
pop
mov
add
clc
xor
outsl
insl
push
mov
and
mov
ret
or
pushl
cmc
ljmp
stos
iret
and
arpl
lahf
call
sbb
add
ljmp
sbb
sahf
sub
push
sti
jmp
test
ret
mulb
pop
hlt
out
push
or
xchg
mov
xchg
inc
cld
add
pop
andl
sbb
dec
hlt
and
push
adc
add
dec
aaa
je
sub
movsb
mov
scas
add
and
outsl
jp
popa
mov
dec
iret
and
add
sarb
mov
inc
jmp
mov
pop
mov
decb
sbbb
es
jae
pop
push
ret
nop
add
loopne
stc
outsl
arpl
adc
xor
push
jl
shl
sbb
ja
call
push
or
shl
insl
xchg
mov
cli
call
stc
dec
lea
lea
push
outsl
ljmp
sub
int3
mov
fucom
jecxz
ret
pop
mov
rcl
mov
scas
pop
jecxz
in
push
fsubl
push
out
notb
outsl
mov
jne
fucomip
jg
ss
cwtl
mov
test
lret
add
mov
fidivrl
mov
or
mov
aam
fcmovne
nop
inc
mov
repnz
xor
fsubr
jecxz
pop
or
fsubrl
mov
xor
int3
mov
or
dec
add
movsb
call
inc
std
mov
sbb
and
inc
cmc
dec
mov
das
jl
mov
pushf
rol
cmp
nop
or
cmp
or
push
subb
jb
adc
jp
ss
outsb
fisubrl
mov
out
pop
adc
fwait
mov
add
lcall
or
add
lret
xchg
mov
pop
fdivrp
movb
sbb
sbb
scas
pop
pop
adc
jge
test
mov
mov
in
sbb
cmc
repnz
in
jp
mov
ret
mov
dec
out
insl
mov
std
pop
leave
lret
xor
pop
subb
adc
int
xor
test
push
sub
pop
js
mov
or
add
or
jp
mov
and
mov
dec
fwait
adc
mov
outsl
adc
in
sub
mov
ja
pop
addb
insb
out
push
int
ret
push
pop
stos
jge
lea
add
roll
or
xor
inc
mov
insl
mov
ret
sti
pop
adc
push
outsl
outsb
push
cmp
je
push
push
fs
push
mov
ljmp
push
adc
test
scas
jge
xchg
jo
mov
or
imul
aaa
xchg
lds
xchg
xchg
push
inc
dec
ljmp
xchg
xchg
out
adc
fiadds
test
xchg
call
dec
inc
ljmp
dec
sub
pop
or
jle
or
cltd
add
push
fists
inc
cmp
fisubl
jno
outsl
xchg
pop
inc
cli
icebp
lea
adc
in
adcb
jb
push
and
jno
add
push
pop
and
test
daa
mov
in
cli
in
in
outsb
mov
jns
adc
pop
test
inc
xchg
or
ds
ret
mov
pop
xor
fistps
cwtl
imul
pop
inc
rorl
test
idiv
fistps
insb
push
cmp
into
xlat
test
mov
out
jns
mov
push
xor
sub
fistpl
mov
add
pop
fbld
hlt
adc
cmp
xchg
and
lcall
mov
mov
mov
jno
mov
dec
in
nop
iret
icebp
orl
ja
jb
movsl
faddl
jl
add
ljmp
jnp
lock
cmpsb
xchg
lds
sbb
pop
cmp
test
cmpb
pop
adc
in
sub
orl
mov
mov
aam
push
dec
sbb
mov
pop
dec
fwait
adc
ljmp
adc
hlt
movsl
cwtl
mov
mov
pushf
in
loope
fiaddl
lds
add
div
pop
jnp
out
add
ret
mov
jno
pop
add
jmp
imull
sbb
mov
leave
push
mov
mov
push
mov
pop
xor
mov
adcl
fs
or
inc
out
icebp
adc
xor
pop
scas
cwtl
push
add
jg
dec
movsb
mov
mov
xor
ret
add
incl
in
shll
subb
popa
dec
ret
push
jne
mov
mov
mov
imul
add
ljmp
xor
filds
xchg
loope
adc
orl
lcall
pop
jle
cmpl
fscale
add
xlat
sar
popf
ret
ret
push
mov
fstps
xor
push
ficoms
cmp
gs
out
mov
loop
outsl
inc
pop
mov
andl
leave
pop
jecxz
add
imul
mov
add
jns
cwtl
clc
xchg
add
call
nop
sbb
and
mov
orb
push
lds
or
sub
jecxz
mov
ss
push
cmpb
ret
in
sti
dec
inc
push
les
xor
adc
xchg
pop
fistps
ret
pop
or
adc
cmp
notb
test
test
xor
ja
cltd
add
sarl
push
or
inc
mov
das
lock
mov
xchg
insl
jb
roll
mov
mov
int3
stos
dec
addl
test
xor
xor
aam
aas
pop
inc
adc
pop
es
mov
subb
clc
pop
cmc
das
adc
out
sub
mov
or
add
lods
pop
inc
push
and
xor
adc
mov
cmc
dec
mov
push
fcomps
bound
xchg
jbe
pop
fsubrl
mov
add
push
xchg
adc
and
xor
mov
sub
mov
stos
xor
add
sub
std
xchg
or
xor
stos
sahf
adc
les
not
push
mov
inc
cmc
outsl
mov
add
js
mov
repnz
add
insl
jg
mov
cld
push
or
jp
or
aam
mov
ja
jmp
mulb
xchg
xorb
inc
or
sbb
add
or
push
inc
sbb
inc
pop
leave
testb
inc
mov
mov
push
pushl
sbb
fsubs
and
rol
xchg
scas
or
pusha
and
lock
adc
adc
fbld
and
mov
adc
movsl
loopne
mov
out
or
dec
inc
das
outsl
gs
sti
add
arpl
out
pop
adc
fiadds
add
or
addr16
filds
orb
cmpl
add
sub
pop
dec
sub
ljmp
inc
sub
xor
out
pusha
add
adc
ds
adc
iret
jne
sarb
mov
cmpl
loopne
sti
lcall
push
lds
inc
xchg
fisubrl
ljmp
lcall
int3
ss
pusha
xchg
dec
jge
test
js
shrb
out
stos
ffreep
test
in
xlat
xlat
sbb
fadds
sbb
push
scas
push
jecxz
dec
invd
push
test
call
les
and
mov
pop
dec
test
sbb
in
int
mov
and
rolb
sbb
dec
xchg
push
dec
or
cmp
sub
mov
call
pushf
das
cld
test
in
test
in
inc
orb
lods
stc
push
popa
adc
push
je
or
fwait
mov
movsl
in
fwait
add
std
int3
pop
mov
pop
add
iret
ja
movd
repnz
jne
flds
imul
xorl
xchg
inc
jnp
jle
and
cwtl
cli
sub
out
or
mov
psrlq
lods
lret
fsubl
jbe
in
jle
mov
loop
fimuls
je
fwait
je
fbstp
dec
sti
push
cmc
jne
sub
mov
mov
and
cmp
enter
xor
scas
addr16
pop
ret
cli
arpl
pusha
push
cmp
imul
pop
mov
inc
add
arpl
dec
or
mov
lea
pop
cmp
add
sub
std
jae
out
into
xor
or
mov
nop
mov
iret
push
pop
mov
in
mov
in
sub
repz
mov
fistpl
icebp
fildll
ja
jno
cmp
add
lds
add
mov
sbb
sbb
xchg
mov
mov
jp
das
repz
xchg
cmpsb
gs
jg
mov
bound
xorl
jmp
jno
outsb
or
pop
mov
push
and
push
lock
inc
or
js
aam
push
outsl
ja
sbbb
jbe
add
test
adc
dec
iret
andb
sar
test
sbb
test
into
mov
clc
sbb
nop
mov
cltd
fistpll
fs
xor
dec
cmpl
xor
pop
test
outsb
push
add
jmp
push
xor
gs
inc
sbb
adc
pop
mov
lea
jbe
push
or
mov
cmc
cmp
jg
gs
dec
push
lret
lods
fnstcw
and
adc
jbe
cli
test
mov
cltd
rorl
icebp
fcomi
xchg
std
lods
and
mov
call
sbb
jae
xor
inc
stos
lock
push
dec
dec
mov
testb
mov
dec
repz
stos
sti
mov
adc
loopne
xor
andl
andl
pop
mov
or
in
push
insb
call
xorb
mov
push
inc
negb
adc
stos
cltd
mov
xchg
movsl
sbb
cmp
orb
inc
adc
pop
add
leave
les
push
int3
call
mov
les
inc
sub
jp
sub
aaa
mov
addb
pop
fistpll
xchg
cmpb
mov
adc
lods
mov
or
push
or
shlb
jl
lods
cld
sbb
std
popa
sbb
dec
mov
sbb
xchg
inc
mov
arpl
mov
mov
mov
jmp
stc
shlb
leave
inc
test
fdivl
or
mov
mov
pop
rolb
pop
mov
jbe
js
add
mov
cmpsb
inc
loopne
movsb
stos
ljmp
add
cmpsb
ds
mov
dec
lcall
jnp
repz
clc
sbb
xchg
jne
imul
packsswb
popf
loope
mov
cld
or
mov
sub
mov
testb
pop
sti
mov
mov
adcb
inc
push
adc
or
pandn
es
rolb
inc
inc
mov
loop
dec
jge
cmp
sub
leave
xor
cli
test
lcall
lea
in
jg
jnp
sbb
loopne
movsb
pop
push
mov
sarl
push
out
imul
pop
out
or
add
sbb
insb
push
jle
xchg
push
js
lahf
xchg
dec
aam
call
jmp
xor
lods
test
xor
push
mov
cs
xor
sub
aaa
sub
jb
call
jl
lds
jp
push
jge
lcall
mov
mov
shl
fwait
out
loope
nop
add
xor
shlb
enter
outsb
imul
mov
push
and
outsl
dec
sbb
pushl
xchg
bound
adc
adc
add
jecxz
enter
sti
or
aam
add
lea
inc
push
jbe
aaa
loop
sbb
push
mov
push
push
mov
adc
neg
ss
push
stos
ret
out
testb
pop
lds
push
mov
xchg
je
imul
add
sbb
gs
add
jb
push
pop
loopne
pop
mov
cld
fdivs
mov
into
mov
mov
xor
inc
shrb
push
ljmp
imulb
dec
aas
jne
in
pusha
mov
mov
inc
dec
lea
sub
xchg
call
add
xchg
mov
add
pop
mov
fisubrl
std
add
jmp
xchg
mov
adcl
cmp
jmp
popf
fstp
adc
call
fstpt
je
push
sbb
jle
aam
lret
add
rclb
dec
push
jg
outsl
jge
add
mov
pop
mov
les
outsl
mov
adc
iret
popl
test
sti
push
xchg
ficoms
loop
rcrl
adc
je
dec
aaa
jle
mov
cltd
jmp
pusha
push
ds
fistpll
inc
dec
mov
daa
mov
std
dec
outsb
pusha
add
in
adc
rorb
push
mov
sbb
mov
das
xchg
cmp
adc
lds
out
xchg
sub
leave
adc
pop
xchg
and
icebp
and
xor
fs
in
shll
insb
movsl
push
cmp
xchg
jns
sub
aad
ja
add
add
imul
sbb
sub
mov
jecxz
jp
mov
cmp
mov
cli
decl
loop
jl
movb
fmulp
sub
push
hlt
or
jg
push
jb
aad
push
lods
and
add
call
xchg
pop
jne
rol
cld
in
imul
mov
mov
movsb
sti
cmp
in
mov
and
add
sbb
jmp
jmp
repnz
js
push
les
fstpt
adc
jge
inc
cmp
adc
sbb
and
lock
aaa
stos
adc
mov
loope
hlt
js
popa
insb
aam
adc
or
mov
add
mov
testb
outsb
push
sub
mov
jg
test
and
push
lds
inc
stos
std
pop
jp
xchg
and
stos
adc
or
pusha
xor
lods
das
fnstsw
scas
pop
jb
fwait
hlt
xchg
or
or
cwtl
mov
push
fnsave
add
jo
je
mov
xor
jmp
dec
sub
xchg
flds
ss
and
andb
fistpl
clc
push
cld
imul
sbb
xchg
orb
aaa
mov
jo
pop
roll
in
outsl
xchg
dec
movsl
pop
xchg
pop
inc
lods
movsl
add
cmpsb
mov
lret
push
arpl
pop
and
sti
cli
xchg
cs
jb
xchg
sub
std
dec
and
js
adc
js
movb
in
jg
mov
addl
inc
and
fs
sub
mov
mov
outsb
cld
sbb
js
arpl
sub
fsubrs
cmp
lock
fcompl
dec
pop
notb
push
push
or
out
jp
jbe
adc
dec
gs
out
push
add
ljmp
iret
ficoml
cltd
clc
pop
sahf
jns
xor
mov
mov
xchg
stos
xchg
inc
cmpsb
unpckhps
xchg
sti
test
mov
das
or
and
xor
insl
mov
jo
call
inc
in
mov
sbb
aaa
repz
mov
jl
jl
test
jmp
pop
inc
notb
repz
jno
out
xor
mov
push
enter
sub
std
leave
push
and
idivl
push
mov
dec
in
mov
pop
repz
lock
mov
movsb
mov
mov
mov
js
pop
xchg
mov
ss
inc
jnp
adcl
aad
jl
inc
push
and
fucomp
decb
push
mov
and
add
and
xchg
adc
ss
cmp
mov
pop
mov
nop
insl
or
pushf
mov
xor
xchg
mov
or
sbb
shlb
ja
sahf
rcll
push
push
cli
adc
cli
xchg
ds
subb
inc
outsl
sbb
or
push
jno
add
loop
outsl
test
pop
dec
outsb
cld
sbb
push
pop
enter
es
cli
sahf
sub
jns
loop
stos
aad
test
insl
mov
lds
inc
dec
rorw
inc
ret
fcoml
dec
add
out
rolb
pop
xor
sbb
pop
add
cmc
fs
jmp
fbstp
xchg
je
gs
xchg
inc
pop
inc
out
pop
sar
rclb
sub
push
adc
pop
pop
xor
nop
inc
xorl
aam
frstor
aad
mov
lcall
xchg
mov
pop
aas
outsl
jnp
push
test
adc
xor
sub
pop
lock
int3
cmp
jne
xor
push
icebp
lds
pop
xchg
addb
lock
inc
cmp
jg
inc
shr
pop
scas
repz
and
call
ret
out
icebp
pop
pusha
sub
mov
aad
arpl
out
push
add
cli
pushl
aaa
pop
outsl
add
enter
xor
dec
into
pop
clc
fwait
cli
push
das
arpl
imul
push
sbbb
mov
inc
jns
or
jg
inc
cld
sub
jmp
mov
dec
or
jae
gs
mov
cmpsl
enter
and
push
pop
cli
mov
jl
divb
add
pop
rolb
push
pop
outsb
das
inc
mov
adc
pushf
ret
or
cmc
ret
sti
cmpsl
loop
push
xchg
leave
push
jg
cld
inc
cmp
in
pop
fmuls
pop
push
popf
mov
icebp
add
jne
jg
dec
test
mov
aas
add
or
ja
sbb
fbld
enter
pop
stos
es
out
xor
push
lahf
cmp
add
sbb
mov
pop
stos
or
in
xchg
jge
or
aaa
jns
jp
jg
in
xchg
rorl
jle
das
mov
pop
pop
pop
xchg
jmp
and
stc
rol
cmp
ret
loope
hlt
pop
xchg
dec
xchg
rol
xor
fucomp
or
jle
mov
outsl
outsl
fildll
or
mov
int3
repz
in
call
shrb
cmp
lods
mov
imul
pop
adc
xchg
movsl
das
inc
pushf
shll
lret
mov
pop
movsb
lock
les
test
and
pop
or
pop
adc
cs
push
push
out
adc
fdivr
pushf
ja
sbb
jg
sbb
add
jbe
pop
sbb
push
jg
pop
test
jp
cli
and
push
pop
xchg
push
insb
cmpb
xchg
sub
test
jmp
shll
fcmovnbe
sbb
fnsave
cmp
cmpsb
inc
lea
cmpsb
call
cmpsb
sbb
jnp
sub
lods
nop
and
call
cmpl
out
mov
and
xor
rorl
mov
outsb
mov
insl
xchg
xor
mov
push
inc
mov
push
jle
aaa
outsb
loopne
or
push
mov
mov
in
push
and
add
and
xor
shll
mov
mov
or
inc
popa
and
pop
push
out
sarl
pop
loopne
lcall
aaa
stos
push
adc
or
or
stos
or
cmp
inc
dec
pop
xor
push
mov
sti
push
sbbl
icebp
lea
cmp
push
xor
or
jb
and
stc
test
pop
mov
insl
mov
jnp
iret
pop
test
add
pop
xor
or
mov
mov
mov
loope
mov
or
insl
loopne
scas
xchg
setns
cmc
in
test
sbb
movsl
repnz
call
push
jecxz
adc
outsb
shrb
loopne
int3
psrld
andl
insl
jno
subb
inc
mov
cmc
pop
call
mov
jecxz
pop
ljmp
jo
pop
push
fdivrl
das
mov
mov
shlb
xchg
pop
outsb
clc
std
fxch
incb
adc
nop
mov
dec
mov
xchg
mov
push
inc
dec
fildll
hlt
scas
mov
in
out
test
rcll
jmp
mov
push
shll
dec
dec
adc
push
mov
mov
das
aam
fnsave
sub
cmc
sbb
test
adc
clc
mov
dec
rorl
sbb
push
ret
jg
std
fadds
das
orb
ljmp
mov
mov
movsl
mov
xchg
outsl
add
inc
leave
cltd
imul
daa
xchg
clc
in
and
dec
sub
dec
jl,pn
fsubrp
and
icebp
inc
or
cmp
push
add
fiaddl
dec
insl
dec
add
mov
jnp
jg
sbb
sub
add
int
and
je
inc
xorb
int
outsl
push
pop
int
adc
scas
loope
mov
js
adc
pop
rolb
mov
push
rorb
data16
sub
mov
cmpsb
lods
pusha
inc
adc
push
lea
mov
fwait
outsl
popf
mov
xchg
jnp
xchg
or
pop
rolb
es
mov
dec
ret
inc
mov
repz
std
mov
lahf
popf
mov
scas
pop
aas
cli
sub
jmp
xor
rcll
fdivr
loop
mov
rorl
mov
sarl
and
je
xchg
orl
inc
sbb
out
pusha
pop
in
js
jg
or
cmp
fadd
test
test
insl
adc
pop
lahf
mov
inc
fisttpl
push
int3
addl
incb
movl
addb
and
mov
je
in
gs
mov
jne
leave
inc
jl
arpl
out
ljmp
xor
jl
out
and
sar
sbb
arpl
roll
test
sbb
sahf
mov
imul
hlt
int
push
cmp
imul
pop
shlb
mov
movsl
inc
cltd
shl
cmpl
outsl
sub
mov
pop
pop
mov
addr16
nop
in
fiaddl
or
inc
rcll
dec
push
xchg
sar
stos
push
lret
pop
xchg
sub
or
mov
in
mov
jecxz
gs
mov
sahf
jb
inc
push
arpl
je
and
mov
cmpsl
jl
inc
pop
jle
test
fstpl
xchg
xor
loop
call
bnd
mov
lahf
inc
inc
cmpsl
mov
outsl
or
testl
jns
cpuid
lea
mov
jbe
pop
pop
fists
subl
add
in
cli
test
mov
push
push
pushf
in
and
add
ret
push
fadds
and
inc
sub
pop
push
je
add
pop
lods
and
jb
dec
xor
clc
lods
jg
sbb
cmp
dec
arpl
pusha
or
outsb
outsb
pop
jno
push
add
rcrl
cs
xor
out
jb
icebp
movsl
call
adc
into
pusha
sub
lret
jns
cmp
aas
mov
mov
enter
xor
outsl
pop
mov
mov
cmp
pusha
push
loop
push
xor
roll
jo
je
icebp
das
push
adc
mov
jnp
adc
push
sbb
dec
jae
js
mov
aaa
aad
mov
and
movsl
inc
and
or
lret
mov
int
dec
xchg
xlat
adc
adc
fldz
mov
mov
cld
and
cmc
xchg
imul
inc
data16
mov
dec
pop
pop
sti
dec
dec
sub
cs
stos
dec
cmp
mov
mov
push
push
or
lahf
jae
mov
stc
aaa
jno
in
gs
adc
fstl
test
mov
pusha
out
incl
loopne
cmc
out
scas
inc
jl
mov
adc
sub
pop
addb
pusha
jnp
mov
push
imul
and
mov
in
pop
and
and
scas
adcl
out
hlt
xchg
shlb
sbb
push
jb
in
sbb
cli
lea
mov
push
mov
inc
outsl
sub
adc
es
cwtl
sub
movsl
mov
sub
pop
adc
cs
jmp
xor
stos
and
add
cmpb
sub
push
icebp
fisttps
shlb
out
sbb
push
mov
mov
mov
xchg
jle
int3
cmp
in
mov
sbb
inc
push
test
fistl
cmp
inc
jbe
loopne
cmp
dec
inc
dec
or
inc
push
adc
test
xchg
bound
repnz
cmp
jbe
cmp
mov
sti
lods
inc
sti
rorb
and
fbld
fisttps
push
xor
cs
adc
dec
jb
js
sbb
or
dec
iret
dec
into
sub
sti
and
mov
into
adcb
ljmp
push
into
scas
int3
xor
test
mov
out
xor
fbld
jmp
outsl
outsl
loop
in
arpl
clc
sbb
and
cmpsl
pop
sysenter
test
mov
daa
mov
xchg
adc
insb
pop
icebp
xor
lds
aam
mov
mov
sub
cs
lock
sub
outsl
mov
mov
push
inc
sub
loop
adcb
loope
popa
or
imul
push
dec
shll
cwtl
sbb
scas
movsl
xlat
push
clc
sbb
cli
add
sbb
add
inc
adc
or
mov
jno
and
xchg
stos
pop
fisttpll
or
push
sub
mov
pop
pusha
lahf
and
lcall
addl
cwtl
ret
adc
aam
or
nop
mov
mov
mov
jmp
les
xchg
mov
repnz
ljmp
adc
sub
push
in
sbb
or
mov
mov
push
icebp
mov
mov
adc
lea
mov
stos
lret
sub
pop
sbb
outsl
mov
pop
sti
orl
insb
xchg
fcoml
pop
fcomp
dec
inc
dec
mov
in
sbb
mov
push
inc
les
mov
adc
sahf
and
call
xchg
arpl
xorl
out
mov
lods
orb
into
popa
adc
dec
or
xchg
sarb
dec
cmp
cmp
test
addb
xchg
xor
mov
mov
bnd
movsl
lea
cmp
shlb
mov
pop
sarb
push
in
aaa
and
mov
shll
scas
leave
test
inc
mov
outsl
incl
mov
adc
push
pop
sub
aaa
add
or
or
jp
aad
in
add
leave
pop
lret
insl
mov
and
add
std
dec
dec
adcb
jo
xor
sbb
lds
or
test
cs
add
inc
int3
pop
adc
dec
aad
fsubs
push
aas
mov
cmp
mull
add
xor
pop
pop
push
mov
add
dec
adc
mov
and
lock
dec
int
mov
add
adc
push
outsb
outsl
insl
lods
sbb
and
mov
mov
repz
sarb
popf
xorb
mov
fildll
xor
pop
pop
xchg
movsl
jb
icebp
mov
in
mov
add
cli
and
fcompl
jmp
adc
hlt
pop
pop
and
in
shlb
mov
fs
ret
repz
xor
movd
or
and
xor
jmp
mov
repnz
or
inc
fs
movsl
sub
sub
addl
es
xor
sti
mov
push
mov
cmp
test
jno
cltd
cmp
in
outsl
ljmp
cmp
aas
add
pop
mov
sbb
fwait
rclb
outsb
shll
xor
mov
loop
push
adcb
xor
mov
cld
jle
int3
daa
pop
mov
insl
push
or
xchg
ret
popf
ror
lods
mov
push
fadds
lds
pop
dec
js
or
std
gs
sbb
fdivrl
jp
xchg
inc
sbb
sbb
lods
mov
pusha
pop
fwait
pop
dec
add
push
or
sbb
clc
addl
fnsave
test
fsts
divb
ss
dec
dec
add
xor
aaa
pop
outsl
std
dec
pop
pop
adc
in
dec
jmp
insb
and
pop
sub
test
push
jno
sub
push
xor
fstp
push
mov
inc
inc
cmp
cmp
lea
inc
push
ja
fwait
push
je
adc
sbb
out
andb
ljmp
jecxz
add
dec
add
sarb
out
xchg
cwtl
add
outsb
pop
in
or
das
mov
dec
mov
dec
push
cmpsb
mov
loopne
inc
jmp
and
cs
xchg
out
push
sub
push
out
andl
lods
int
cld
inc
push
add
add
mov
inc
loope
pop
and
add
push
cmp
inc
adc
sar
inc
sbb
fisttpl
sub
dec
cmpsb
inc
inc
jno
mov
in
lret
cmp
lcall
sti
into
dec
out
sub
cmp
mov
int
fsubl
push
xchg
adc
pop
clc
rorb
mov
lea
and
hlt
fistpll
pop
mov
mov
rolb
outsb
stos
shr
push
cwtl
sub
lods
in
push
sub
stos
rcr
pop
sub
ret
jno
sahf
dec
mov
fidivrs
dec
adc
fimull
sub
push
mov
aaa
or
lret
adc
loopne
xlat
insl
subb
lods
cmp
cs
sti
or
sub
faddl
in
test
leave
jo
cld
mov
jne
lcall
cmp
adc
pop
cli
mov
imul
adc
mov
jmp
mov
adc
jnp
mov
hlt
adc
push
call
inc
or
cmp
stos
mov
ljmp
jle
movsl
outsl
outsl
mov
test
sti
pop
dec
push
pop
fnsave
mov
test
or
xchg
pop
pop
xchg
cmp
das
shlb
stc
sub
xchg
pop
stos
enter
add
aam
sub
xor
xchg
sbb
jno
notb
test
add
outsb
lock
pop
negb
cmc
adc
mov
outsl
pop
jle
nop
hlt
scas
je
into
roll
xchg
ss
ficoms
fdivr
fucomip
push
jle
xchg
cs
pop
xor
mov
cmp
pop
pop
clc
push
sub
mov
rcrb
outsl
dec
decl
je
outsl
xchg
into
jbe
push
test
adc
inc
je
stos
mov
mov
inc
jno
add
iret
jns
cmp
int
cld
cltd
call
outsl
pop
add
jl
lods
pushf
inc
clc
jo
push
and
sub
repz
xor
dec
pop
loopne
lock
mov
jbe
mov
test
in
jecxz
pop
xor
jo
fildll
shll
stos
pop
mov
std
std
mov
cmc
push
inc
cmc
enter
push
sbb
mov
out
xor
mov
shrb
xor
lea
inc
aad
fs
movsb
sub
loop
cmpsl
es
cs
and
arpl
mov
dec
add
pushl
pusha
dec
sub
push
inc
inc
and
mov
test
out
loopne
sarb
dec
in
mov
jmp
shl
call
fists
insb
mov
jle
add
mov
mov
aaa
push
adc
or
mov
repz
push
lock
in
or
jbe
inc
and
sbb
mov
adc
outsb
enter
outsl
and
inc
insb
xchg
jno
jae
pop
cs
cld
pop
xchg
jo
scas
faddl
inc
sbb
int3
mov
sub
mov
mov
sbb
out
jno
push
xor
mov
imul
lea
aad
dec
mull
clc
ss
movsl
jbe
cli
or
and
mov
icebp
rclb
mov
jp
lods
mov
sbb
xchg
imul
xlat
xchg
inc
andb
xchg
jmp
inc
mov
add
sub
subb
out
je
lret
arpl
sub
test
movsb
xor
inc
xor
and
add
push
pushl
ficoms
and
push
sub
rorl
cmp
loope
lcall
sti
push
sti
xchg
jns
or
sub
jno
dec
mov
je
test
xor
loop
and
repz
iret
or
sub
and
aaa
mov
lods
gs
pop
jb
xor
sti
add
call
xor
sbb
sub
mov
pop
dec
test
das
xor
fcomip
rolb
mov
es
inc
cmpsl
and
mov
hlt
shll
testb
rcrl
xchg
nop
sbb
or
push
dec
mov
shll
adc
and
fbld
stos
push
or
mov
xchg
loop
test
cmc
mov
loope
or
xchg
inc
push
testb
ss
clc
inc
out
pop
pop
cmp
jmp
adc
stos
stc
fisubrl
inc
push
jmp
jae
add
add
out
mov
js
enter
xchg
dec
push
xor
movsb
mov
sbb
call
pop
shll
add
adc
adc
insl
sub
pop
sub
orl
add
pop
sub
stos
push
js
mov
sti
pop
xorb
sahf
inc
mov
jmp
adc
cmp
fidivrs
ret
addr16
sbb
das
aas
mov
or
scas
call
data16
shlb
out
jge
adc
rolb
mov
aaa
push
cmp
push
outsb
das
clc
adc
aam
pop
mov
push
and
pop
or
and
loopne
rcll
adc
cmp
push
pop
lcall
add
cld
push
or
arpl
or
sbb
push
jb
dec
dec
jle
cwtl
sub
sub
insl
add
ljmp
mov
dec
ljmp
outsb
inc
dec
fwait
nop
cwtl
jnp
test
shrl
test
pop
sbb
fbld
inc
sar
pop
dec
lds
push
adc
inc
push
push
lods
push
push
xchg
xchg
pop
bound
insl
xchg
out
or
std
mov
and
rcrb
mov
idivb
add
mov
ljmp
sub
add
call
inc
mov
sbb
arpl
sub
test
adc
sub
cs
or
push
loop
jg
outsb
fbld
xchg
adcl
sahf
sbb
lea
pop
in
rcrl
test
and
push
scas
sbb
sahf
fs
shr
jp
mov
movsl
jg
loop
rolb
xor
mov
pop
mov
ljmp
jns
lahf
inc
xor
movb
out
jp
inc
xor
cmovo
stc
pop
in
loopne
roll
inc
arpl
push
rcrb
mov
dec
es
sub
inc
ud0
aaa
adc
decl
sar
dec
test
in
xchg
sarl
dec
inc
dec
push
sbb
xor
mov
daa
xor
insl
dec
pop
pop
xchg
testb
sahf
dec
lock
outsl
ficomps
add
hlt
inc
out
insl
les
push
adc
sbb
icebp
push
orl
fs
cs
clc
mov
aam
jecxz
inc
push
xor
and
mov
stos
or
mov
rol
jl
adc
inc
jle
incl
mov
sbb
imul
aad
sub
mov
addb
sub
stos
icebp
mov
cli
xor
mov
mov
stos
clc
outsb
iret
mov
mov
dec
stos
dec
inc
addr16
mov
icebp
or
into
mov
push
popa
pop
inc
gs
insl
add
push
call
or
or
xchg
mulb
mov
xlat
or
mov
out
repnz
imul
xchg
ret
ljmp
add
mov
nop
shlb
ficoms
pop
push
sbb
je
in
icebp
inc
inc
mov
pop
insb
mov
fistl
std
es
repnz
cld
push
mov
pushf
inc
pop
and
push
dec
xor
pop
xchg
push
xorl
xchg
pop
xor
cmc
cs
cmp
ljmp
filds
adc
cmp
xor
in
outsl
pop
outsb
adc
inc
aaa
dec
sub
movsb
bsf
cmc
mov
xorl
xchg
bound
dec
dec
inc
mov
ret
decl
insb
icebp
data16
pop
mov
out
imul
add
sahf
mov
push
hlt
test
or
sbb
notb
outsl
mov
push
mov
test
lods
or
leave
dec
bound
scas
mov
mov
ds
push
push
daa
inc
xchg
add
repnz
push
sbb
ja
adc
aad
push
mov
dec
hlt
jbe
stc
adc
add
sub
stos
mov
cmpsl
push
enter
xchg
pushf
mov
data16
addb
clc
out
cmp
xor
or
cmc
push
and
rcrl
cld
in
insl
mov
mov
jns
pop
sub
mov
cmp
inc
jbe
pop
mov
mov
push
mov
push
mov
push
repz
ret
fdivp
std
fwait
enter
xchg
mov
adc
mov
incl
xchg
cs
or
fldenv
mov
test
push
scas
and
inc
mov
and
and
rcr
xchg
or
cld
test
cmpsb
xchg
lock
out
mov
mov
cmp
and
fnstenv
jge
adc
dec
xor
pop
xchg
pop
sbb
outsl
jecxz
xor
in
and
jmp
mov
adc
popa
enter
mov
add
pop
sarb
movsl
inc
das
xchg
mov
outsb
insl
je
mov
mov
sub
imul
pop
inc
popf
je
in
pop
push
jecxz
dec
repnz
mov
jnp
loopne
jle
sub
je
movsl
cmp
push
pop
loop
rcl
pop
imul
ret
push
insl
roll
or
cmp
lret
cmpb
mov
repz
or
jg
mov
stos
dec
or
in
xchg
ffree
rcrl
mov
jo
pop
mov
inc
lret
orl
cmp
ljmp
inc
addb
mov
mov
fisubrl
fnstsw
mov
push
mov
lret
adc
insb
mov
into
daa
lds
es
xchg
inc
cld
call
lds
adc
sti
mov
test
mov
mov
out
dec
cmpsb
push
mov
call
das
add
mov
and
incl
test
dec
push
inc
push
cmp
lcall
das
call
push
cltd
dec
and
int
sahf
pop
aam
mov
push
filds
push
xchg
ficoml
pop
or
dec
mov
filds
clc
mov
andb
dec
or
ljmp
mov
mov
push
ficompl
test
mov
inc
mov
cli
testb
bound
mov
mov
pop
xchg
xchg
or
loop
mov
push
aaa
cmp
push
mov
add
jno
mov
je
jmp
and
xor
outsb
push
fwait
mov
mov
add
mov
xor
and
push
stos
dec
add
push
movsb
fiaddl
jp
dec
orb
adc
mov
aaa
mov
and
shrl
pop
ljmp
mov
mov
aaa
dec
mov
dec
cwtl
fsubl
sub
enter
sub
ret
mov
pushf
rcl
or
pop
fsub
jg
fnstsw
push
sub
sbb
xlat
inc
mov
mov
lock
aad
inc
xor
cs
iret
mov
and
pop
lcall
cmp
push
ja
mov
mov
rcrb
inc
xchg
daa
push
pop
fidivrl
fs
lcall
and
imul
pop
jg
dec
lds
movsl
ret
nop
std
add
dec
mov
sub
jl
mov
or
adc
stos
loopne
rcr
fdiv
inc
lret
jmp
subl
xchg
pop
sti
faddl
inc
ror
test
pop
aad
ljmp
or
in
roll
push
sub
fs
ret
test
lods
outsl
jl
mov
dec
neg
pop
jp
hlt
lea
add
mov
xchg
inc
sbb
lret
loop
ss
dec
push
sti
adc
push
stos
push
sbbb
out
mov
mov
js
jg
xchg
fs
mov
pushf
pusha
jp
ds
das
insb
rorl
or
lret
in
jmp
or
cmp
xchg
psubd
lods
jle
daa
jp
ret
aad
scas
xchg
xor
push
fbld
testl
lahf
addr16
movsl
ja
and
cmc
mov
enter
pop
into
adc
mov
daa
out
cwtl
xchg
fs
loope
mov
mov
sbb
jmp
clc
mov
loope
repz
xor
dec
inc
fists
inc
xor
cli
test
rcll
jo
push
pop
inc
xor
loopne
shlb
sub
fisttps
movsb
xchg
jb
das
xor
in
movsb
mov
sub
push
or
aad
lret
out
addr16
mov
inc
mov
aam
outsl
mov
pop
sbb
sbb
int
stos
xchg
popa
imul
sbb
add
and
pop
sbb
fldt
sarl
add
nop
loopne
pop
cmpb
es
out
rolb
test
or
in
stos
mov
out
sub
filds
mov
xor
sbb
mov
adc
add
lahf
and
ret
push
push
mov
jge
cmpsb
dec
aam
or
mov
outsl
das
aam
fs
sub
rcl
adc
out
mov
or
dec
pop
jae
xor
fldcw
mov
gs
sbb
lcall
aaa
and
sub
inc
fsubl
add
sub
out
mov
jge
push
cmp
aaa
pushl
imul
call
pop
or
cmpsb
sub
jg
dec
jbe
idiv
and
std
stos
cli
mov
cmp
mov
les
out
gs
cmp
mov
leave
dec
mov
loope
pop
test
icebp
and
xor
jle
xor
jbe
sbb
jmp
jle
pop
and
sbb
jle
cli
mov
cli
add
cmp
inc
insb
lahf
cwtl
mov
jl
pop
and
enter
xchg
jne
and
pop
cld
imul
sbbb
lahf
cmp
call
adc
mov
out
or
inc
rorl
add
fsts
add
ffreep
lods
fstpl
mov
lcall
mov
clc
sbb
loope
fbld
outsl
icebp
add
imul
fldcw
mov
jl
xchg
mov
scas
jae
dec
enter
incl
test
loop
lcall
xchg
andb
dec
push
cmc
call
das
xor
sbbb
lods
jge
mov
mov
inc
or
repnz
sbb
movsb
sbb
mov
leave
push
mov
pushf
andb
sub
filds
sbb
cmp
mov
fcomp
mov
call
push
push
subl
cltd
mov
test
mov
xchg
in
push
ret
ret
popa
mov
push
mov
sub
mov
pop
out
xor
lret
add
mov
fsubrs
loop
aaa
test
das
outsb
push
push
std
outsl
mov
dec
jo
fadd
sub
out
mov
leave
jnp
cwtl
or
add
mov
dec
pop
pop
imul
ljmp
add
mov
mov
rolb
daa
gs
lds
inc
push
pop
cmp
jg
je
fisttpl
cmp
add
mov
mov
pop
ret
and
pop
lahf
cld
or
rol
adc
sbb
fxch
pop
aas
leave
pop
mov
in
gs
cld
push
ret
mov
je
decl
es
fcom
je
cmpsl
mov
adc
movsb
lret
push
lret
das
cld
movsl
dec
enter
sbb
xlat
push
inc
aad
sbb
xchg
pop
clc
mov
clc
outsl
mov
lds
test
jmp
lock
sbb
dec
sbb
loop
mov
fistpl
loopne
and
dec
daa
cmp
lock
dec
add
add
mov
jg
pop
or
test
cmpsl
ja
push
mov
popa
shll
imul
pop
pop
pop
mov
data16
sub
sbb
inc
mov
and
mov
mov
jne
mov
cs
add
cmpsl
stos
mov
in
lret
pop
push
xlat
sub
std
movsl
call
js
into
movsl
cmpsl
push
shrl
mov
popa
mov
pop
sahf
popa
pop
mov
cli
int
sbb
adc
lea
popf
in
xchg
loopne
ds
push
std
or
mov
cmp
xchg
xor
outsl
les
jae
loope
lret
adc
stos
add
popa
push
test
push
xor
add
cli
movsb
fsubs
cmp
ret
xchg
sub
stc
aam
adc
ljmp
adc
pop
cli
push
in
xor
sbb
shrb
sbb
pop
sbb
iret
add
push
sub
andb
or
outsb
sub
jge
mov
outsl
outsl
shlb
std
stos
sti
mov
cmp
mov
js
test
and
push
subb
aaa
loop
push
das
ja
dec
add
jecxz
sbb
stos
lods
rcll
xor
adc
push
or
cmc
test
cmp
pop
jns
dec
pusha
nop
push
fstpl
pop
ljmp
add
push
in
mov
mov
int
mov
outsb
lods
xor
dec
adc
and
sbbl
stos
rclb
fldcw
mov
xor
test
movsb
outsl
jo
fldt
cld
aaa
xor
aaa
adc
jmp
mov
aad
cmp
sbb
in
dec
pop
aaa
add
repz
push
push
xchg
push
hlt
dec
pop
add
fistps
roll
push
mov
jnp
lret
inc
ret
dec
ljmp
push
pop
sbb
out
mov
imul
jmp
inc
stos
jnp
pop
call
and
lahf
lods
repnz
push
ja
hlt
ja,pn
mov
add
outsl
cld
or
insb
cmp
je
sahf
nop
add
ficompl
scas
dec
ljmp
fldl
clc
movsl
add
popf
loopne,pt
aad
int
call
ret
jmp
mov
es
call
jae
cwtl
sbb
adc
inc
or
test
fistl
jl
inc
sbb
adc
test
jmp
jmp
out
sub
test
fisttpll
push
aad
add
outsl
mov
imul
xor
daa
and
lods
lock
sub
add
aam
adc
or
lea
test
push
or
call
scas
lret
sub
pop
sbb
ss
mov
arpl
xor
jl
pushf
stos
dec
inc
mov
test
repz
arpl
sar
inc
jae
in
inc
rorb
cmp
inc
test
outsl
xacquire
decl
testb
hlt
jge
xor
pop
sahf
jns
cmp
pusha
add
insb
int
pop
fildl
pop
mov
mov
test
mov
lds
shll
test
pop
mov
das
sbb
movsb
mov
je
sub
in
jmp
inc
mov
clc
sbb
pop
push
and
xor
les
sub
push
decl
push
sub
pop
or
lret
lods
aaa
call
mov
sbb
or
mov
pop
aad
jle
mov
sbb
add
pusha
inc
xor
push
ljmp
orb
adc
mov
loopne
in
idiv
push
das
aad
sahf
dec
sub
clc
in
jns
outsl
cmc
fists
mov
inc
or
inc
sub
nop
mov
inc
lcall
loopne
pop
lret
iret
test
jbe
rorl
scas
inc
mov
fcoml
push
dec
in
cli
repnz
int3
dec
std
mov
test
xchg
and
out
loope
pop
and
lods
inc
jp
fstp
xchg
and
xor
subl
mov
cmpb
cmpsb
je
jb
mov
or
add
cmc
psubb
mov
cwtl
adc
sarb
cmp
push
dec
lods
dec
mov
fistps
adc
inc
xor
cltd
test
lods
cwtl
xchg
push
outsl
ja
stos
mov
mov
pop
incb
jne
lcall
mov
sti
idivb
push
push
icebp
stc
cmc
xor
mov
pop
sub
push
addr16
ja
les
and
sub
mov
or
divl
cmpsb
or
arpl
fisttpl
cwtl
add
push
xchg
mov
outsl
mov
cwtl
arpl
xor
out
mov
std
xchg
pop
pop
ja
test
mov
testl
je
inc
cs
mov
pushl
push
andb
xchg
fbld
dec
and
jg
test
jmp
and
mov
add
out
pushf
or
popa
or
aam
cmp
pop
dec
mov
ss
ljmp
idivl
ljmp
lock
incl
mov
leave
lret
or
dec
xchg
or
push
sub
cmp
push
pop
dec
mov
adc
sub
add
push
xchg
mov
push
scas
icebp
jbe
pop
mov
xchg
inc
xchg
sbb
sub
and
jle
insb
sbb
ljmp
decl
add
aas
xorb
cmp
cld
imul
pop
xor
mov
or
jmp
or
in
xchg
cld
sbbl
inc
push
call
jbe
cmc
cmpsb
ja
lods
xchg
fs
stos
mov
sub
push
mov
dec
mov
ljmp
jbe
dec
lock
mov
cmp
inc
adc
lds
mov
sar
cmp
mov
scas
popa
cmp
cmp
mov
std
mov
adc
aad
popf
lcall
rcl
dec
xor
cld
inc
test
mov
dec
out
push
adc
arpl
or
mov
fisubl
cmpsl
push
jnp
orb
aaa
add
insl
outsl
mov
rorb
ss
cwtl
outsl
and
ja
subb
mov
insb
inc
addr16
adc
dec
imul
jns
test
mov
je
inc
dec
cld
add
push
stos
add
or
inc
mov
adc
mov
lea
xor
lret
call
xchg
fisubl
je
icebp
or
enter
aaa
push
push
push
hlt
addb
add
incl
sbbb
inc
add
outsl
clc
ljmp
stc
sbb
sub
push
inc
sbb
sub
sbb
add
inc
jmp
jbe
shrl
push
loopne
test
jb
je
dec
out
xchg
aaa
push
push
adc
push
adc
sbb
push
pusha
sub
sbb
outsb
push
jecxz
jo
clc
cwtl
cmp
in
pop
imul
std
mov
pusha
or
in
pop
inc
adc
xchg
xor
rol
jl
add
repnz
bound
push
orl
or
push
clc
mov
or
dec
les
push
inc
clc
gs
pop
scas
push
xor
and
dec
sub
mov
jb
je
add
mov
add
dec
or
and
cmpb
insb
sbb
pop
mov
loope
popl
add
inc
call
ret
add
adc
pop
pop
sub
add
in
addr16
or
xor
pop
aam
out
inc
adc
lahf
fdivrp
int
inc
arpl
gs
push
movsb
ljmp
xor
ss
movsb
mov
scas
iret
xor
rcl
es
dec
pop
xchg
mov
inc
rclb
xchg
inc
add
add
sbb
es
out
push
test
pop
mov
bt
in
add
loope
orl
aaa
insl
ffreep
push
shll
dec
push
inc
cmp
hlt
fdivrs
mov
dec
mov
pop
lds
push
or
out
xor
push
hlt
inc
arpl
jecxz
xor
cltd
push
arpl
fs
loope
shrb
push
je
push
dec
mov
jae
and
add
add
cmp
cmp
mov
dec
adc
push
dec
loopne
or
popa
push
ja
push
and
imul
pop
pop
inc
xor
xor
movsl
push
inc
jl
call
pop
sahf
xor
repz
add
into
dec
xor
mov
loopne
push
jnp
push
js
dec
sub
sbb
xchg
inc
int
mov
push
inc
test
cs
cltd
xor
mov
js
sbb
push
jne
xor
adc
lret
dec
adc
add
adc
inc
mov
jne
push
sub
inc
inc
and
xor
sub
and
idivl
mov
push
test
adc
add
std
outsl
das
icebp
sbb
add
add
dec
outsb
test
dec
mov
sub
or
jmp
cmp
sbb
pop
ja
add
clc
sbb
fistl
adc
mov
mov
daa
ret
and
out
cld
std
sub
js
push
outsl
inc
ja
or
mov
add
pusha
lods
rcll
sarl
inc
dec
mov
mov
add
gs
cmp
inc
movsb
dec
rcl
sub
aad
jbe
push
dec
add
and
push
pushf
lods
add
sub
mov
movsl
dec
inc
stc
pop
and
push
add
roll
dec
inc
arpl
sbb
cmp
dec
pop
inc
mov
xchg
dec
dec
add
push
jo
xor
rolb
lods
adc
xor
mov
sbb
in
loop
sub
mov
jl
adc
sub
inc
push
out
outsb
cmp
cmp
xor
outsl
subl
inc
shl
or
push
cmp
jmp
sub
andl
mov
pop
sub
inc
xchg
push
mov
xor
arpl
fildl
cmpsl
ljmp
outsb
jae
js
push
and
push
shl
movsl
dec
adc
gs
and
lock
mov
pop
roll
push
push
or
jmp
pop
add
mov
sub
add
subb
inc
xor
pop
dec
jo
movl
add
mov
pop
js
jbe
cmc
ja
dec
xor
add
sbb
sub
insb
xchg
and
fistpll
cmp
dec
pushl
in
add
add
sbb
sub
mov
mov
push
push
clc
repnz
push
movsb
pop
cmp
or
mov
pop
jo
mov
mov
adc
fxam
or
jae
rcrb
add
lds
cli
push
xor
sbb
and
sub
orb
jns
roll
outsl
fistpll
jns
sbb
pop
inc
adc
pop
sbb
dec
ja
outsb
push
pop
sub
mov
cmp
jb
mov
sub
ret
mov
ret
sbb
mov
xchg
loopne
mov
test
ftst
cli
dec
aaa
pop
push
hlt
push
add
ds
insb
rcrl
std
popf
jns
push
push
cmp
push
sub
cmp
sti
scas
add
outsl
dec
push
dec
sbb
data16
sub
cmpl
out
pop
sub
mov
or
push
and
push
xchg
or
add
cmp
mov
es
jo
push
mov
push
out
mov
stos
push
sbb
call
xor
pop
pop
sbb
pop
dec
xchg
jbe
out
jne
arpl
in
or
add
sahf
mov
jge
outsl
outsl
pop
jo
dec
psllw
dec
mov
sbb
push
inc
je
jo
mov
fnstcw
adc
xchg
ljmp
repz
enter
add
loopne
push
push
add
jnp
jmp
xchg
scas
decl
in
inc
outsl
push
data16
les
jno
cmp
adc
pop
loopne
cmp
jp
dec
mov
push
xor
fstpl
push
pop
add
mov
fistpll
ret
clc
fistpll
ljmp
dec
fldt
jg
loop
arpl
jmp
push
inc
push
dec
mov
lock
jmp
adc
inc
push
cwtl
ljmp
test
aaa
push
mov
bound
adc
mov
addl
mov
sub
adc
daa
sbb
cltd
add
lcall
jle
push
out
mov
gs
shr
xor
jno
jp
movsl
cmp
movl
pop
lods
fsts
adc
sub
cld
xchg
sub
sbb
sub
mov
shl
sbb
dec
lock
jb
or
arpl
jo
push
fisubrs
in
int
mov
movsb
push
and
aas
lock
inc
fwait
enter
leave
push
xchg
insl
push
scas
sub
subl
cmp
das
mov
push
push
ja
js
inc
dec
loop
and
pop
adc
push
outsl
clc
loope
xor
dec
mov
ja
xor
jb
pop
jg
xchg
bound
mov
xor
popa
stos
js
neg
fnsave
inc
jge
dec
xor
sbb
mov
dec
cmp
push
cmp
mov
add
inc
mov
adc
in
out
jo
sbb
and
inc
sbb
cs
scas
sti
cmp
pusha
adc
pop
popa
gs
jo
inc
sub
sbb
das
jae
dec
je
fisttpll
adcb
inc
test
lods
sub
push
cmpl
in
and
or
or
cmp
jle
or
jne
ja
lock
push
sti
xor
popa
xor
cwtl
test
push
xor
push
push
mov
adc
inc
xchg
orl
mov
mov
test
xor
sahf
push
jne
insb
push
inc
or
out
shlb
decb
pushf
cli
out
hlt
test
mov
loopne
pop
cli
pop
insb
repz
mov
push
popa
adc
or
inc
dec
andl
call
icebp
mov
mov
xor
movsl
or
out
adc
call
fisttpl
test
incl
inc
dec
jae
addl
inc
or
add
rolb
mov
stos
clc
cwtl
cli
inc
popf
dec
xor
ss
or
pop
dec
xor
ss
sbb
dec
lcall
inc
sub
dec
push
das
sbb
mov
out
add
fsts
fisubrs
fnstenv
or
sbb
mov
push
inc
dec
xchg
or
mov
mov
mov
inc
bound
stc
adc
sbb
fcoms
mov
add
dec
je
jae
lahf
inc
lahf
fidivs
push
gs
add
scas
push
push
arpl
out
in
fs
mov
dec
stc
dec
jmp
dec
adc
mov
xchg
mov
or
aam
rcrb
push
pop
dec
pop
cmp
jp
sub
jae
push
fs
push
call
and
orl
loopne
insb
ss
sub
stos
mov
xchg
pop
aam
pusha
inc
cmp
repnz
rcll
fiadds
lret
xor
or
xchg
push
pop
iret
push
push
es
adc
in
aas
push
fcoms
add
add
add
adc
inc
pop
and
add
dec
xchg
fistps
or
in
test
cmp
outsl
mov
push
inc
popf
shl
aaa
adc
iret
sti
out
lcall
dec
cs
add
push
mov
fnstsw
pop
sbb
xor
in
outsl
into
cld
mov
inc
push
add
jg
fstl
idivl
push
inc
mov
add
and
xchg
inc
push
jo
mov
push
sahf
jae
mov
aam
mov
mov
shlb
jmp
add
popl
out
cmp
loopne
dec
pusha
jb
int3
adc
sbb
es
outsb
ja
sti
push
adc
sbb
adc
scas
lds
test
or
inc
jp
and
out
out
pop
and
ret
push
lock
iret
pop
push
into
mov
fdivl
jmp
adc
push
bound
mov
das
cld
out
add
imul
mov
out
ss
add
xchg
scas
setge
lock
mov
ja
outsb
lods
pop
adc
insb
int3
fsubrl
ds
adc
in
dec
cwtl
sbbl
mov
xchg
mov
lret
inc
out
jl
push
mov
in
pop
and
loopne
mov
xor
sti
loopne
out
xchg
xor
inc
rorb
popf
sti
incb
pop
jne
enter
subb
pushf
loop
testl
cltd
mov
cs
mov
mov
lahf
sbb
add
icebp
loopne
in
jge
mov
lock
es
lret
rcl
idivl
cs
addl
add
pop
cmp
push
pmaddwd
outsl
insl
pusha
dec
jle
call
std
in
and
jp
jmp
jl
jmp
bound
pop
shr
add
dec
jno
icebp
pop
jp
std
lods
decb
sub
mov
jle
popa
sbb
mov
call
or
dec
daa
cltd
out
into
push
and
jmp
popf
sub
jne
jno
adc
adc
leave
xchg
mov
ret
cmpsl
lcall
enter
out
xchg
and
push
stos
add
sar
or
xlat
clc
lidtl
xchg
dec
adcl
xor
test
fadd
fstpt
inc
addr16
out
mov
sbb
ljmp
mov
add
mov
inc
cmc
push
add
sar
mov
adc
xchg
sbb
sub
mov
jg
fucomi
jecxz
inc
enter
imull
lods
dec
inc
test
out
mov
ss
jb
or
mov
cmp
mov
sub
sbb
xorb
arpl
jmp
leave
xor
jg
adc
push
scas
add
dec
push
mov
je
push
call
fsubl
js
xor
into
std
mov
ficoml
jbe
pop
popa
dec
xchg
push
pushf
push
ja
pop
sti
arpl
mov
jno
loope
xor
cmp
mov
jg
cmpsl
cmc
imul
adc
mov
add
incb
mov
cmpsb
popf
mov
lods
das
sbb
lahf
jo
push
pop
loopne
cmpsl
mov
or
mov
rol
cmp
ja
lret
push
fistpll
xchg
push
sub
cmpsb
roll
push
testl
lea
lret
flds
add
pop
clc
sbb
jmp
pop
popf
push
push
and
imul
loope
out
lret
or
lret
icebp
xchg
pop
movsl
jae
or
dec
sub
or
repz
cmp
cmp
pop
xchg
icebp
pushf
sbb
into
ret
inc
mov
and
popf
ja
sub
or
jb
jnp
scas
push
adc
lods
out
or
adc
pop
sbb
pushl
incl
aad
popf
rcrb
jo
push
fdivr
xchg
sti
push
stc
pop
in
sahf
add
xchg
mov
jp
shrl
push
movsb
out
neg
jae
push
aas
das
jge
mov
sti
ja
ljmp
and
loopne
add
cmpsl
pop
jge
fistps
mov
cmpsl
int
sub
adcb
incl
inc
dec
jnp
push
jg
sub
hlt
inc
sti
pop
out
sbb
mov
out
fcomi
adc
int3
aas
out
push
jg
sbb
loopne
dec
sbbb
cltd
sub
fcomps
add
and
sti
sti
fstpl
stc
sub
dec
cmp
jge
and
notl
add
outsl
out
fistpll
push
adc
mov
mov
xchg
pushf
sti
mov
aas
sarl
add
je
aas
mov
popf
jae
push
insl
adc
or
repz
into
scas
inc
mov
clc
icebp
mov
push
stc
enter
ljmp
pop
sbbl
xor
clc
mov
inc
test
clc
mov
lock
out
cmp
loopne
lds
test
or
inc
jecxz
sar
nop
mov
xchg
or
jne
stos
cwtl
dec
pop
mov
pop
in
lahf
xchg
pushf
inc
pop
add
adc
sbb
sub
adc
repz
jecxz
pop
xchg
js
out
sub
leave
cmp
in
jmp
cmp
adc
cs
cmpsb
aas
cmp
dec
xor
test
pusha
push
jo
divb
push
cmp
lods
icebp
insl
js
pop
pop
ljmp
imul
mov
ja
fisubs
sub
das
jns
inc
mov
push
push
xor
and
xor
mov
pop
pop
rcrl
mov
ss
out
popa
cmp
call
jne
cwtl
dec
adc
loope
neg
push
mov
push
aas
int
mov
mov
push
or
es
inc
std
fistps
int3
pushf
repnz
daa
lret
js
aam
loope
loop,pt
imul
pop
xchg
pop
mov
daa
xchg
inc
adc
mov
pop
sbb
idiv
xchg
lret
outsl
push
dec
lock
std
incl
pop
sbb
jge
mov
mov
imul
and
stc
shlb
stos
sub
pop
pushl
ja
insl
orl
jb
inc
lods
popf
notrack
std
mov
in
sahf
addr16
bound
pusha
push
lods
mov
pop
insb
or
cmp
inc
mov
loopne
mov
cld
pop
fisubs
jl
in
mov
mov
dec
push
test
lock
call
jecxz
inc
popa
mov
xchg
movsl
jg
pop
loop
hlt
rcrb
das
push
mov
loope
idiv
nop
push
shl
jge
fdivrs
arpl
clc
fbstp
push
lret
pop
xchg
cli
pop
sti
xchg
adc
lret
lock
idivl
cmpsb
daa
and
les
pushw
jmp
clc
hlt
and
je
add
mov
xor
inc
lahf
pop
je
cmp
pop
out
push
in
inc
pop
and
xor
fs
adc
jb
lock
or
adc
sub
js
dec
loopne
fistl
and
xchg
sub
push
lret
je
je
sub
jnp
and
ffreep
cli
pop
ss
mov
add
out
sub
in
mov
adc
cmp
sub
rorb
cmp
pop
and
lods
ret
aas
xchg
cs
rcrb
xchg
mov
bound
xchg
popf
and
lock
sti
fistl
sbb
leave
daa
ss
out
sbb
sti
hlt
add
mov
aas
shlb
outsb
jecxz
iret
cmpl
pusha
push
dec
es
inc
sbb
call
xorb
and
fldl
stc
sub
lahf
std
mov
out
dec
loope
push
js
cmp
movsl
cmpsb
push
add
gs
das
mov
mov
pop
adc
xchg
mov
adc
fdiv
mov
jno
xor
pop
stos
sbb
repnz
fildl
xor
out
jo
inc
into
add
and
test
mov
or
mov
sbb
cmp
cmp
outsl
fnstenv
mov
jnp
add
cld
inc
cwtl
jmp
test
sbb
push
sub
mov
or
pop
insb
sahf
and
adc
fcompl
jb
pop
out
fists
je
stos
nop
leave
fwait
pop
inc
addr16
pop
mov
push
cltd
jge
lret
insb
in
mov
sub
aas
push
mov
fbstp
es
fildl
sbb
dec
in
adc
pop
push
mov
insl
mov
push
jmp
pushf
jmp
jnp
sub
xchg
div
fsubrp
adc
jg
outsb
or
sbb
sti
out
std
roll
inc
mov
test
sbb
mov
mov
inc
xchg
cmpsl
fisttps
add
cwtl
in
flds
inc
stos
arpl
inc
dec
std
out
lock
lock
or
fiaddl
sbb
lret
inc
enter
into
iret
mov
sbb
add
rcr
arpl
movsl
pushf
add
hlt
cmp
idivl
clc
dec
pop
jne
scas
mov
stc
negb
cld
in
jge
sahf
cmp
cmp
sbb
push
cmp
aam
out
lcall
push
dec
int3
cwtl
dec
mov
mov
in
aad
mov
jmp
cwtl
out
out
pop
popf
and
int
mov
fidivrl
cld
in
pop
push
jge
mov
inc
add
xor
jmp
dec
or
leave
int
sbb
sub
jl
sti
xchg
mov
mov
mov
lcall
push
inc
and
push
push
push
cs
std
sbb
outsb
dec
test
outsl
push
and
out
shr
outsl
test
enter
addl
sbb
push
loope
rclb
xchg
or
rcr
lods
aas
out
sub
fs
outsl
jne
divb
mov
jo
xchg
sti
ja
inc
push
jae
pop
fimuls
lods
out
aam
mov
hlt
mov
adc
cmpsb
sahf
cmpsb
cmp
es
ret
out
in
mov
mov
mov
pop
push
pushl
es
add
shrb
lahf
ja
sbb
dec
jge
and
cmp
mov
sti
pop
push
repz
out
add
dec
clc
incl
imul
adc
jbe
les
idivl
push
out
out
fistpll
and
cmp
fnstcw
loope
loop
into
pop
pusha
jno
vpaddw
outsb
mov
pop
in
sbb
mov
dec
lret
ja
push
mov
xlat
pushf
rol
lods
jle
fiadds
pop
mov
cli
dec
out
dec
or
adc
add
fstpt
fsubr
cmp
aaa
xchg
mov
dec
or
movsb
jle
jecxz
push
fbld
mov
sbb
cmp
add
xchg
test
out
call
je
and
in
xor
movhlps
lods
lea
loopne
dec
out
xor
mov
xorl
insb
jecxz
dec
jae
loope
int3
inc
jnp
or
mov
xor
mov
movsb
push
cmp
pop
add
jb
mov
mov
mov
out
xchg
jb
dec
aaa
rorb
loope
dec
shrl
push
pop
inc
out
out
jne
out
sti
pop
jg
std
out
test
aam
inc
push
mov
ret
into
sti
mov
int
pusha
test
jle
fdivrs
sbb
js
ret
mov
xchg
mov
push
and
pop
jno
push
fiadds
pop
inc
and
push
sti
in
add
call
jns
sub
ret
jno
fistpll
xor
imull
push
pop
call
imul
mov
sahf
stos
cmp
dec
xor
and
mov
cmpsl
insl
insb
test
adc
es
pop
or
aas
or
mov
testl
push
push
mov
aad
adc
das
pop
mov
pop
test
xchg
inc
cli
jo
rorb
xlat
add
sub
ds
inc
xor
inc
gs
fninit
jg
or
filds
jle
inc
js
pop
mov
mov
jae
loopne
and
test
daa
sub
mov
add
xchg
xor
scas
aaa
sarb
pop
xchg
push
cmp
dec
loopne
sub
mov
fcomps
stc
lret
mov
pop
popa
push
push
outsl
adc
pop
into
pop
into
loope
fnstsw
gs
or
inc
jno
mov
icebp
sbb
into
dec
ficompl
out
mov
inc
pop
jno
call
pop
je
sahf
jl
jl
ja
lcall
nop
cmp
add
inc
test
mov
sub
movsb
lcall
in
cmp
call
repz
pop
push
insb
mov
adc
call
mov
push
sbb
clc
add
movsl
cs
aas
incl
adc
fdivs
insl
cmp
push
mov
mov
hlt
aas
push
insb
jb
xlat
inc
incl
jmp
mov
sbb
mov
arpl
push
outsl
mov
jb
adc
orb
push
cld
aas
mov
add
ret
aas
jo
jmp
cmpb
inc
push
stos
mov
cli
cs
nop
jecxz
int
je
icebp
arpl
xlat
std
jmp
adc
add
cmpsl
sahf
pop
jge
stos
out
pusha
jo
ljmp
clc
into
jl
andb
lods
mov
out
test
ret
stc
lea
lods
ja
pop
cmpb
call
icebp
out
adc
int
gs
js
negb
add
sti
icebp
push
mov
fwait
cmc
mov
xchg
add
rclb
daa
pop
inc
mov
xchg
cltd
std
jl
cmpsl
jb
fistpll
add
jmp
push
cwtl
je
pop
data16
and
and
pop
idivb
addr16
es
scas
jns
or
push
mov
daa
sbb
aas
fidivrs
jp
rcll
cmp
push
mov
in
push
shll
pop
add
je
mov
sbb
xchg
xor
js
sahf
int3
imul
test
out
jg
fucomip
cwtl
fisubrl
insb
jae
insb
mov
jecxz
outsb
xor
or
rcrb
orl
or
push
outsl
repz
iret
lret
int
xlat
jg
dec
push
fdivr
js
sbb
int
xlat
cmp
add
mov
aas
add
pop
and
cmp
mov
sti
mov
das
arpl
das
pop
popf
mov
mov
dec
sbb
out
sbb
pop
or
sarl
fcomp
es
inc
mov
call
xchg
adcb
mov
in
stos
imul
fstl
cmp
ja
sarb
lods
movsl
mov
out
mov
pop
add
fdiv
outsl
mov
mov
sbb
repz
in
add
push
jle
aas
idivb
pop
xlat
pop
leave
cld
cltd
add
sub
push
daa
and
movb
mov
dec
mov
sub
pop
fbstp
and
pusha
jle
cmc
movsl
cmc
pusha
decl
sub
outsb
and
aas
inc
stos
adc
jecxz
push
adc
lds
adc
clc
and
mov
es
and
add
cmp
cmc
or
jecxz
mov
mul
push
and
push
add
adc
aad
pop
cld
jl
imul
pop
decl
pop
fistpll
lcall
aaa
daa
call
jmp
pop
add
stos
dec
aaa
lds
xor
fcomps
addr16
adc
xchg
pop
xchg
and
jmp
jbe
subl
dec
std
ljmp
mov
mov
push
add
jnp
dec
cltd
xchg
dec
xor
dec
xor
and
ja
mull
push
stos
jp
mov
addr16
shr
dec
sarb
inc
cltd
stos
scas
das
inc
pop
clc
ja
sahf
minps
sub
ss
ja
call
lea
mov
cmp
mov
mov
or
push
cltd
sti
daa
fidivrs
add
sti
aaa
jle
cmp
sbb
jge
mov
cmpsl
js
inc
xor
insl
negl
pushf
je
nop
inc
scas
call
jp
push
xchg
out
ret
out
or
outsb
inc
decl
cmpsl
out
arpl
lock
shll
cmpl
repz
pusha
mov
pop
test
decl
push
sub
rol
js
inc
inc
loop
pop
push
jg
jns
cld
repnz
ja
pop
in
or
jb
sbb
inc
adc
jno
scas
adc
fdivrl
cltd
inc
loope
repnz
and
push
repz
and
clc
std
aas
jmp
cmpsl
fisttpl
pop
sbb
iret
int
mov
idiv
loope
ds
jns
nop
sahf
mov
int3
call
sar
mov
mov
mov
sub
fbld
leave
sub
push
aaa
xor
pop
call
inc
jb
xor
aad
lcall
mov
sub
xor
inc
lock
or
test
lock
ret
pop
push
cld
xchg
and
xlat
or
sub
pop
jge
xor
mov
mov
cs
andl
push
addb
gs
sbb
and
inc
cmp
daa
clc
dec
les
pushl
rcrb
mov
in
popa
or
mov
loop
inc
mov
movsb
movsb
fs
lock
push
mov
call
add
loope
stos
add
pop
sti
xchg
add
loop
fdivrl
inc
push
add
push
pop
icebp
popf
imul
out
shl
icebp
js
incl
mov
rorb
imul
pushl
mov
dec
mov
imul
ja
xchg
jle
repnz
pop
ja
jg
jns
ja
lahf
stc
jmp
hlt
xchg
loop
repz
ret
imul
cmp
adc
lcall
cmp
pop
cmp
and
mov
ret
addl
xor
fdivrs
pop
aas
cmp
pop
jnp
jae
jb
movsl
add
negb
out
push
pop
cmp
jl
cmpsb
xor
fstl
sbb
sub
psrlq
stos
inc
std
cmp
std
lahf
jp
and
or
pop
inc
jns
mov
repnz
aas
rcrl
adc
pop
and
addr16
ljmp
ret
push
add
cmp
xor
adc
mov
fisttps
aam
xchg
mov
xchg
ja
sti
idivb
cli
arpl
mov
mov
cld
pop
inc
add
insl
sbb
nop
fstl
lea
cmpsl
lret
pop
fistpll
adc
xor
jp
shrl
lods
testb
leave
jae
xor
stc
inc
and
ja
or
out
std
out
es
mov
iret
add
and
xor
mov
fiaddl
int
mov
sarb
push
push
clc
mov
stos
xchg
lods
stc
sbb
mov
pop
adc
fdivr
imul
inc
cmp
sub
xor
xchg
pushf
clc
cmp
hlt
outsl
loop
mov
mov
ss
ja
push
and
enter
push
movsb
mov
ja
clc
mov
enter
jp
fmuls
loop
mov
or
xor
leave
cmc
std
pop
adc
add
push
xorl
test
sub
fbstp
scas
pushl
mov
dec
movsl
icebp
sbb
out
call
xchg
sti
outsl
sbb
push
stc
negb
rcl
fchs
ja
sub
dec
push
push
sbbb
dec
mov
scas
aad
xchg
and
mov
lahf
hlt
das
fbstp
in
arpl
sarl
sbb
cmp
mov
ja
xor
jg
mov
aas
pop
mov
leave
xchg
cld
or
pushl
xchg
scas
mov
inc
arpl
xchg
cli
repnz
sub
add
and
mov
je
aaa
popf
in
sahf
mov
pop
xor
pop
jb
test
dec
fbld
sbb
cmp
jp
mov
lds
lcall
hlt
aas
in
cmp
jae
push
cwtl
jmp
rcl
incl
mov
stos
jmp
inc
sbb
clc
ja
loopew
cltd
loopne
mov
stos
jo
inc
std
addr16
or
pusha
xchg
sbbb
outsl
adcb
or
ret
int
loope
outsl
and
imul
fistps
frstor
lock
daa
add
dec
or
cli
jg
clc
repnz
daa
cli
nop
cltd
cmp
add
add
dec
lahf
mov
loope
lock
jp
ret
cmpsl
add
mov
nop
fildll
sub
cmc
lcall
mov
sub
or
mov
pop
std
mov
aas
lea
mov
cli
mov
xor
mov
jmp
xchg
sti
mov
test
jns
jmp
mov
js
jp
pop
notb
jne
icebp
jg
adc
cmp
mov
out
sub
es
movsl
nop
mov
cmp
inc
inc
jl
cmp
js
and
and
or
mov
ljmp
es
fs
mov
mov
mov
in
ja
ret
repz
inc
sbb
aas
cmp
jae
xchg
jnp
sub
push
sti
xchg
loop
es
outsl
test
stos
into
mov
movsb
ja
clc
xchg
and
loopne
add
sub
movsb
inc
cld
xchg
jl
out
loopne
sbb
loopw
pop
in
cmp
xchg
mov
lahf
retw
dec
fnstcw
sbb
call
inc
dec
pop
cltd
pop
hlt
clc
lea
mov
xchg
xor
jne
mov
jae
cmp
cli
xchg
aas
jle
jg
or
inc
lock
adc
or
clc
aas
call
cli
lods
std
sbb
ja
mov
mov
cli
lcall
mov
pop
adc
stc
out
xchg
and
xchg
cli
pop
ret
cmpsl
sbb
inc
mov
aad
fildll
push
gs
or
std
shrb
adc
jnp
cli
jg
lcall
push
jne
mov
inc
out
lret
in
in
out
popa
cli
iret
lods
daa
sub
mov
out
lret
ret
out
mov
jne
outsb
pop
add
push
jg
or
sbb
lea
ljmp
sti
push
mov
jmp
mov
lods
mov
push
out
jno
inc
or
mov
mov
cmp
or
adc
jle
leave
jne
xchg
subl
es
insl
popa
push
xlat
sub
xor
mov
test
and
dec
sahf
fiadds
pop
mov
lods
js
pop
sub
mov
fcoms
mov
imull
cmp
shrb
out
mov
sarb
sub
test
mov
out
xor
icebp
lret
lcall
inc
cli
test
dec
lret
inc
push
clc
cli
cmp
ja
sbbb
movsb
call
cli
and
and
sahf
jl
test
fisttps
daa
cmp
xchg
sbbb
lods
jp
in
std
mov
jnp
mov
mov
cltd
dec
push
movsb
pusha
das
xor
outsl
jp
fidivs
sbb
mov
sti
xlat
jg
dec
test
dec
jl
mov
shl
clc
aas
shl
popa
sub
jle
sbb
std
vmovdqu
ret
std
pop
cmp
test
fs
lods
movsb
jle
push
dec
mov
xchg
cld
pop
adc
pop
enter
loope
movsb
pop
sub
ficompl
fwait
xor
les
ljmp
pop
mov
inc
xor
scas
lahf
mov
jecxz
pop
subl
pop
add
cld
ss
mov
mov
mov
shl
mov
xor
sti
iret
std
in
sbb
flds
into
xchg
inc
xchg
mov
cld
lahf
cmc
pusha
jbe
mov
or
xchg
mov
bound
mov
mov
add
psubd
out
je
icebp
and
aas
les
loopne
bound
mov
frstor
cmp
inc
push
cmp
sub
sub
call
or
xchg
adc
fcmovu
pusha
inc
ljmp
jg
jmp
fwait
mov
stos
adc
test
or
ljmp
inc
sbb
lods
cli
loope
inc
scas
sub
pop
or
adc
lds
mov
test
xlat
pushf
clc
ret
popa
nop
and
idiv
out
cs
push
push
cltd
mov
jecxz
sti
jg
mov
fnstenv
pop
notl
daa
jo
jo
cmc
mov
mov
test
lods
push
mov
hlt
loopne
pop
sub
pop
adc
cmp
mov
cwtl
lds
lds
es
cmp
dec
test
pop
push
es
repz
inc
data16
push
pop
cld
dec
jg
add
ret
pusha
sbb
imul
inc
cmp
in
addr16
lea
clc
out
std
scas
sub
sbb
push
test
aas
neg
add
loop
loop
pusha
mov
pop
cmp
xchg
xor
mov
cmp
inc
iret
add
jmp
add
push
fsubrs
test
jo
push
mov
movsb
fidivrs
mov
aad
jge
out
aaa
mov
int3
and
stc
stos
and
aad
mov
jle
arpl
jns
call
rcll
cli
loopne
out
push
mov
scas
xchg
mov
fdivrp
add
mov
cmp
out
popa
jmp
gs
in
hlt
dec
jle
fsts
mov
sti
addr16
mov
adc
jg
jl
call
aaa
testl
push
mov
sub
mov
cmp
pop
adc
sbb
jmp
cmc
in
scas
mov
icebp
jne
cli
psubb
std
sub
pop
xchg
xchg
sub
push
push
jl
dec
jae
mov
leave
jo
xor
lock
inc
es
out
jae
pop
cmc
xor
pop
into
or
inc
jge
sbb
ja
mov
pop
les
sub
and
cmp
mov
jl
xchg
pop
pop
jl
clc
cmp
fs
mov
out
int
sti
decl
or
out
out
shll
data16
mov
push
call
cli
test
dec
loopne
mov
leave
pusha
sbb
or
jg
mov
lcall
addr16
and
push
sub
adc
ds
jb
test
loop
call
mov
push
mov
lret
and
imul
call
add
hlt
cmp
je
jae
inc
push
pop
inc
int3
adc
adc
push
push
cmpb
insb
pop
lss
mov
popf
jle
movsl
push
mov
lds
cmp
call
mov
jge
and
out
sbb
stos
ljmp
rcll
pop
data16
ftst
pop
cmc
jecxz
ss
mov
jnp
inc
pop
xchg
sub
mov
iret
cs
inc
punpckhbw
test
jge
inc
add
ja
add
decl
ret
shrl
xchg
mov
out
out
rorb
mov
loopne
jp
sbb
popa
jge
stos
movsl
add
or
popl
xor
and
ret
inc
mov
icebp
out
test
inc
push
leave
xlat
inc
lock
icebp
or
inc
int
pushf
inc
jg
jg
fdiv
pop
out
cmp
xor
inc
ret
xchg
sbb
pop
in
pop
lock
fidivl
fdivrp
xchg
imul
mov
faddl
mov
jno
mov
imul
sub
mov
xor
mov
sahf
and
out
scas
add
daa
mov
cmpsl
pop
ljmp
cmp
std
pop
sarb
fucom
mov
out
mov
es
jb
push
and
jbe
inc
add
and
bnd
mov
inc
xor
inc
or
inc
jmp
les
pop
sub
scas
push
mov
mov
sub
xor
xlat
ljmp
inc
testb
outsl
or
mov
int
xchg
sub
in
movsl
aam
and
pop
sarb
pop
push
jl
pop
or
popf
xor
xor
es
int
movsb
aam
push
xor
decb
stos
jp
or
lret
sub
add
pop
imul
mov
push
hlt
jg
or
dec
dec
mov
jnp
adc
insb
outsb
das
movsl
jmp
negb
mov
push
cwtl
stc
pop
push
ja
out
fidivs
xacquire
scas
jbe
jmp
sub
mov
pop
inc
movsb
mov
cli
lahf
les
enter
xchg
daa
sti
test
test
pop
push
xchg
loop
adc
test
pop
cmp
push
test
in
pop
loopne
cli
dec
fwait
pop
mov
lods
es
ret
jmp
adc
hlt
testb
dec
in
add
xchg
cld
in
or
pop
arpl
mov
iret
mov
shrl
les
iret
fistpl
pop
dec
cltd
jp
ljmp
movsl
cmp
add
dec
sub
mov
jnp
push
fildl
xor
lock
stc
push
push
fisttpll
stos
push
cli
xchg
std
scas
pusha
xchg
pop
adc
adc
inc
or
jg
pop
adc
outsb
sarb
adc
aas
push
std
sub
lret
xchg
mov
dec
adc
lods
inc
lods
popa
mov
lock
decb
pop
cmp
adc
stos
xor
mov
mov
and
ss
lret
iret
cs
jecxz
mov
dec
push
jg
add
and
hlt
and
cli
mov
sarl
cmp
sbb
fwait
out
shlb
sarb
inc
dec
sbb
inc
pop
mov
and
jge
add
inc
lods
scas
dec
daa
and
xor
jl
fcmovnb
jns
push
jle
fistpll
adc
xor
mov
movsb
adc
xor
incl
lahf
jl
cmc
fbstp
orl
xchg
js
stos
sbb
call
lock
pushf
roll
push
dec
fcomi
jns
lea
jge
call
add
inc
std
das
inc
cli
dec
jb
mov
fs
decb
les
jns
int
lods
sub
test
dec
jg
push
test
fwait
pop
cmpsb
pop
xor
cmp
pop
mov
sbb
es
pop
loope
jnp
mov
enter
in
and
arpl
xchg
or
pop
je
fucomip
and
ja
out
or
xor
xor
mov
xchg
sub
sub
and
loop
test
mov
repz
popl
cld
jecxz
mov
cltd
push
adc
mov
push
inc
inc
jbe
mov
and
mov
xchg
sti
out
sbb
sbb
push
movsl
add
or
jmp
and
sbb
roll
xchg
jle
jle
lret
mov
or
rorb
shl
sarl
shlb
xchg
int
outsl
scas
hlt
or
push
xor
ds
xchg
int
clc
aas
rcl
push
dec
pop
add
xor
enter
outsl
and
std
mov
das
scas
aad
arpl
lret
sbb
je
js
data16
outsb
sbb
cmp
fbld
add
loope
mulb
sub
push
dec
cli
pop
dec
out
out
dec
sbb
cmpsb
cmp
call
xor
and
rcrl
mov
mov
bound
insl
pop
sub
sti
jmp
int3
addb
in
sahf
fwait
mov
push
mov
test
sti
nop
out
xchg
test
xor
mov
dec
sub
mov
clc
out
jo
add
add
jns
ja
aaa
xor
ds
jbe
pop
adc
and
scas
lret
data16
mov
mov
lcall
shll
mov
mov
sub
bound
gs
sub
outsb
test
sbb
call
fwait
and
cld
sbb
aad
push
out
cmc
jg
insl
xchg
cmp
mov
mov
mov
dec
mov
repnz
sbb
ja
pushf
pushl
mov
adc
pop
movsb
mov
dec
stc
mov
dec
not
xorl
rolb
pop
sarb
pop
dec
mov
insb
mov
std
push
in
push
xor
aas
add
cmp
inc
or
and
cmp
fidivrl
test
mov
ljmp
shr
xchg
mov
fisubl
or
dec
incb
lret
inc
xor
cli
out
es
pop
and
fwait
jbe
aas
dec
imul
sub
adcl
xchg
rcrl
lods
decb
fildl
or
icebp
ljmp
dec
lods
cmp
cwtl
xor
cld
jmp
std
adc
fstpl
xor
sub
int
fsub
pop
pop
and
pop
pop
arpl
std
mov
mov
ja
jne
out
jbe
imul
stos
jmp
or
aam
pop
sbb
iret
rcrb
mov
and
add
sarb
in
mov
ja
inc
push
mov
pop
mov
sbb
aam
mov
sub
pop
shlb
add
sti
sbb
loopne
mov
add
sub
adc
xchg
lret
std
dec
decl
adc
mov
inc
sti
add
js
into
jl
test
movsl
mov
js
fadds
cs
adc
loope
push
std
out
dec
dec
dec
jle
push
ret
pop
daa
not
mov
fnstsw
shrl
jecxz
insl
icebp
imul
sub
ret
lret
pop
and
loopne
iret
pop
or
mov
cli
sbb
xor
push
mov
sahf
push
pop
shlb
jmp
add
packssdw
popf
sti
jg
pusha
popa
xchg
sbb
dec
imul
pavgb
mov
cmp
sti
pop
jae
clc
mull
xchg
or
adcb
dec
adc
inc
iret
or
inc
jp
int
add
out
enter
ja
inc
aad
fwait
test
addl
in
mov
push
add
stos
int3
test
cs
adc
sbb
sbb
lock
sti
les
lock
std
jb
dec
jl
out
cmp
xor
jecxz
sub
cmp
mov
in
cld
and
mov
add
jl
push
bound
and
inc
pop
sar
jo
xlat
mov
jle
xchg
or
call
sahf
daa
sub
lcall
shl
das
cmp
mov
push
and
xchg
out
fdivl
jns
xchg
jno
stos
or
lcall
adc
lret
lcall
xchg
mov
cld
cli
mov
xor
cmp
xor
lods
sub
mov
lcall
in
cmp
out
jae
jle
mov
push
dec
cmp
aas
or
inc
mov
jnp
cmpsb
sub
mov
xor
add
dec
fisttpl
ljmp
pop
mov
mov
ret
push
cs
lock
pop
clc
mov
push
cli
data16
outsl
pusha
mov
xchg
dec
lea
cmp
out
mov
pop
clc
and
clc
ja
mov
sarl
xor
push
cs
push
decl
ja
xor
pop
mov
jo
shl
popl
mov
outsb
mov
pavgb
mov
int3
int3
ret
or
inc
push
popf
call
orl
out
dec
dec
fcom
pop
dec
arpl
jp
ljmp
add
pop
pushf
xor
xchg
cld
lods
or
das
mov
sti
ffreep
push
cwtl
mov
cltd
mov
sbb
mov
ja
imull
push
data16
enter
sbbl
add
add
popa
pop
lcall
cltd
aas
cld
call
adc
cmp
mov
jnp
mov
push
dec
xor
leave
dec
inc
ret
add
xorl
add
les
in
pushl
sbb
shrb
lret
hlt
jle
push
adcl
rolb
cmp
iret
or
aad
arpl
cld
sbb
aad
and
mov
movsl
dec
mov
scas
inc
pop
mov
aam
jbe
andl
dec
push
push
xor
int3
mov
clc
fistl
lds
push
rorb
push
sbb
pop
jno
jb
das
jp
ja
add
mov
sbb
inc
mov
mov
das
mov
out
or
xor
and
lret
call
test
daa
sub
out
mov
aas
jo
xchg
jae
adc
and
mov
pusha
bound
sbb
orb
test
sbb
stos
lahf
repz
jb
loope
idiv
ja
ja
dec
cmp
xchg
pushl
jge
je
int3
imull
popa
mov
xchg
aam
lret
insb
rclb
sbb
cli
iret
std
inc
js
aad
and
hlt
inc
xor
add
aas
dec
cmpsb
stos
lahf
mov
cmp
add
ret
mov
data16
sub
and
mov
std
mov
mov
mov
add
leave
push
repnz
cmp
xor
dec
sub
add
cmp
and
jae
xchg
ds
ret
aas
mov
cmpsl
and
push
mov
pop
sti
out
cld
test
dec
pop
adc
lret
cmc
fists
aas
push
lock
das
pop
mov
jle
mov
and
pop
mov
filds
flds
dec
inc
or
mov
repz
mov
jnp
lcall
bound
and
cmc
and
and
aam
testl
fcom
bound
pop
sbb
jl
jbe
loop
shlb
vmaxpd
mov
cld
jmp
sub
out
or
je
mov
push
arpl
add
sub
xlat
jge
push
jmp
xor
adc
popl
ret
test
repnz
sbb
and
sbb
lods
out
ljmp
aas
sti
mov
iret
sti
leave
add
loopne
loop
mov
and
jmp
sti
sti
fucom
incl
stos
cmpsb
js
mov
addr16
or
aas
mov
jo
sub
push
xchg
fiadds
adc
mov
adc
ds
push
pop
jmp
sub
shll
mov
and
inc
std
cld
xchg
push
cld
jecxz
test
aam
js
cmpsb
adc
movl
subb
sbb
inc
or
adc
xlat
xchg
std
xchg
jns
xchg
fwait
pop
popa
frstor
shlb
mov
jg
or
inc
clc
testl
dec
sarb
or
push
fdivr
ds
sub
or
icebp
dec
jno
call
shr
cmp
or
hlt
xor
clc
outsb
push
mov
jl
xchg
push
cltd
xor
jp
idivl
scas
pop
mov
lds
push
jne
outsb
or
mov
dec
cmp
enter
js
xchg
mov
dec
filds
push
sbb
push
out
lret
and
push
gs
adc
jl
ja
push
call
add
push
mov
call
jmp
sub
add
rolb
mov
sti
iret
loopne
mov
in
loope
inc
cmpl
call
sub
fdiv
int3
aad
add
cmp
fiadds
in
mov
fsub
xchg
stos
mov
add
imul
repnz
fsts
int3
mov
lods
mov
mov
mov
jmp
pop
pushf
jle
fiadds
mov
clc
jg
lock
test
xor
inc
jnp
push
or
arpl
in
mov
push
inc
xor
stc
leave
pop
mov
fnstsw
out
add
sub
or
xchg
data16
and
jbe
jmp
jne
fnstsw
scas
popf
out
sub
xchg
mov
push
xor
sbb
and
lcall
push
jmp
test
pop
das
idiv
xchg
hlt
add
xchg
cmp
or
add
mov
test
decl
subl
lods
add
inc
imul
mov
notb
mov
daa
mov
mov
idiv
jmp
xchg
and
or
push
xor
test
std
ret
loope
lock
fwait
mov
sub
pop
inc
mov
xor
jg
jmp
fcompl
and
loopne
push
sahf
sti
pusha
push
xchg
or
pop
int3
inc
adc
inc
lock
adc
and
stos
inc
fbld
pop
loopne
push
mov
ret
rcr
cmc
test
lods
ret
or
jnp
jo
inc
aad
mov
push
or
lret
adc
push
imul
sbb
xor
dec
xchg
push
lea
arpl
cmp
aas
add
or
sbb
lcall
aam
jg
ljmp
sub
sbb
or
jo
mov
cmp
dec
movsb
sub
xchg
in
cwtl
aas
daa
decl
cmp
rolb
aas
insl
inc
hlt
loope
aaa
lahf
adc
movl
push
jmp
stos
insb
mov
out
data16
shl
scas
rolb
hlt
adc
jno
mov
mov
jns
sub
cmovbe
out
outsb
mov
mov
adc
mov
lahf
mov
repnz
and
push
pop
dec
call
or
xchg
mov
mov
clc
subb
xor
icebp
popl
std
jno
lods
add
stc
cmp
loope
out
push
inc
pop
lahf
sbb
out
movb
cs
jb
pop
jo
aaa
jecxz
push
cmp
xchg
movsl
cmp
dec
and
cld
mov
and
sarb
add
pop
sar
push
mov
jb
cld
ret
sahf
nop
enter
insl
mov
inc
in
cmp
xchg
lds
jb
aas
mov
adc
rol
sub
insb
mov
pop
out
pop
clc
jmp
and
cld
jnp
xchg
sbb
or
inc
inc
out
inc
loope
xor
inc
mov
les
ljmp
jmp
sub
xor
dec
loope
fstpl
mov
ja
inc
mov
popf
sti
arpl
fstps
stos
mov
xchg
nop
in
add
pop
imul
or
pop
sub
enter
or
pslld
pop
xchg
clc
pop
lret
in
mov
jbe
jbe
push
add
out
mov
cmc
jge
dec
outsl
shll
fimuls
inc
jne
add
arpl
bound
pop
pop
xor
outsb
testb
sarb
jg
decb
xorl
lods
dec
inc
popf
ret
xchg
inc
stos
sub
test
fidivs
incl
dec
ja
or
jmp
sarb
cmp
mov
in
out
add
or
lret
xor
out
lods
add
pushf
xchg
addl
enter
jbe
sbb
push
push
dec
jno
insb
shrb
add
cwtl
negb
jne
movb
mov
xor
sarl
rcr
xchg
loope
ds
in
xor
pushl
out
ljmp
mov
lods
fstps
cmp
pop
sti
push
sub
xor
dec
jg
test
addr16
mov
in
lods
mov
leave
mov
mov
xor
add
cmpsb
icebp
pop
xchg
mov
push
iret
push
mov
jne
or
pop
or
aas
notl
mov
scas
and
call
adc
pop
clc
aas
xchg
stos
mov
mov
imul
loopne
popf
xchg
aaa
lds
inc
sub
mov
iret
std
lahf
push
mov
mov
and
popa
int
aaa
imul
mov
leave
jge
in
mov
not
call
dec
push
pop
shll
mov
loopne
dec
pop
jg
clc
inc
adc
ficoms
rcr
lds
mov
adc
loope
jp
test
or
pop
mov
dec
jge
mov
mov
loopne
xchg
add
addl
sti
cmp
imulb
sahf
mov
push
add
rorl
adc
jmp
int3
lcall
mov
sar
sarb
adc
inc
pop
pop
add
dec
ljmp
push
outsb
inc
cs
jl
jno
in
decb
out
jmp
jg
push
hlt
pop
sbb
icebp
mov
adc
aas
les
ret
push
mov
insb
iret
out
aas
push
cmpsl
dec
fsts
inc
mov
repnz
and
decl
add
add
add
mov
pop
adc
push
orb
jp
data16
mov
jmp
push
aas
repnz
pop
ficomps
scas
adcl
mov
jbe
cli
call
mov
sti
add
pop
xorl
and
pushf
xchg
fstl
fcmovbe
jae
mov
add
jno
ret
cmp
adc
mov
nopl
xchg
adc
inc
and
pop
leave
arpl
aam
ljmp
add
pop
push
sbb
sub
std
idiv
out
sub
sbb
cld
lods
shll
testl
int
mov
into
in
mov
mov
xchg
jg
aad
and
xor
lds
addl
sti
aas
pushf
xor
pop
jne
fldenv
dec
aas
movsb
cmp
popf
repnz
ret
cs
test
shrd
dec
xchg
pop
or
pop
daa
lea
addr16
decl
pop
ret
popfw
xor
das
insb
push
mov
xchg
and
inc
flds
cmc
pop
idivl
cwtl
scas
stos
sub
mov
push
mov
dec
ret
addr16
inc
dec
nop
jg
cmp
inc
clc
movups
movsl
adc
in
sub
xlat
loope
shrb
enter
mov
cld
or
or
push
inc
rclb
mov
dec
mov
xlat
ss
inc
in
fs
ja
stos
push
scas
push
call
jecxz
out
sub
inc
jp
ret
jmp
xchg
xor
mov
cmpl
fildll
out
add
repz
pop
int3
loopne
pop
testl
pop
aaa
ja
lock
jle
adc
dec
pop
arpl
cmpsb
xor
stos
in
insb
outsl
xchg
test
push
mov
pop
clc
cmp
std
idiv
aas
rclb
xor
in
sbb
cld
pop
int
inc
data16
loopne
jecxz
rol
jmp
popf
sahf
push
outsb
mov
and
cmp
jg
test
adcb
int3
sbb
and
mov
lods
loope
and
push
push
aad
aas
out
mov
cmp
sub
pop
and
push
aas
leave
testl
jns
mov
out
std
sub
push
fnclex
cwtl
loope
wbinvd
xchg
fsubl
movsl
or
lcall
cmpsl
dec
and
or
lea
lods
adc
push
and
andb
fwait
mov
cmpl
mov
sbb
or
fsubrl
adc
dec
xchg
xchg
ret
decl
push
sub
jb
hlt
xor
push
fistpll
enter
dec
sbb
fs
pop
scas
scas
mov
push
sub
icebp
lahf
stos
clc
or
add
loop
lea
add
jecxz
dec
jle
call
les
push
dec
in
adc
pop
dec
mov
mov
cli
daa
add
shl
inc
stos
outsl
hlt
adc
xchg
adcl
clc
jns
xchg
jnp
cmp
jge
je
in
rcl
out
icebp
pop
fisttpl
add
jl
fs
xchg
decb
and
add
jmp
lds
sbbb
dec
cwtl
dec
pop
dec
sar
mov
out
cmc
test
dec
fidivrs
mov
mov
adc
pushf
xchg
ljmp
push
add
xor
lcall
mov
sbb
or
sti
icebp
jg
jns
xor
cltd
adc
sub
fistpll
cli
mov
dec
adc
daa
lock
cmpsl
sub
dec
cmc
or
out
std
inc
js
mov
push
insb
adc
ffreep
mov
ret
mov
push
push
das
inc
cld
pushl
xchg
test
popa
inc
dec
xor
ret
shlb
dec
imul
sub
aad
pusha
mov
fdivs
push
jmp
sbb
xchg
movsb
add
pusha
clc
add
fmuls
sub
cld
or
push
adcl
rcll
insl
icebp
add
jno
hlt
lods
js
cld
mov
clc
xchg
loopne
push
pushf
cmp
lret
aad
adc
dec
sarb
mov
addr16
jae
dec
xchg
push
scas
call
rcll
or
sub
clc
out
icebp
loop
pop
std
or
pusha
inc
repnz
ljmp
les
shl
movsl
dec
fstpt
pop
cmp
mov
ds
movsb
decb
test
dec
stc
pop
imul
in
xchg
pop
in
daa
jl
andb
sub
or
add
inc
js
and
aas
jg
mov
fdivrp
pop
cld
aas
popa
aad
adc
testb
adc
stos
dec
jmp
arpl
hlt
cmpsl
jp
pop
fcompl
adc
pop
sub
jo
fisubrs
push
mov
ljmp
mov
filds
and
rolb
mov
scas
mov
addr16
mov
add
ja
sbb
int3
add
sub
enter
and
aas
inc
in
js
mov
and
sahf
jp
imul
adc
js
push
mov
popf
mov
leave
aas
pop
imul
out
or
out
es
lods
xchg
cmpb
xor
mov
loopne
nop
sbb
sti
aas
les
and
lds
inc
sbb
mov
ja
out
sarb
jno
mov
mov
mov
pop
jg
push
aad
pop
rorl
and
jle
sub
mov
ss
mov
and
jge
add
ja
or
or
xchg
fdivrs
shl
jbe
inc
mov
lock
xchg
push
scas
in
add
mov
repz
sub
addr16
mov
gs
es
jg
clc
add
ja
xchg
ud1
mov
test
and
mov
mulb
mov
test
sbb
arpl
mov
push
and
rcr
jg
pusha
aas
ficomps
adc
popf
in
testl
imul
mov
icebp
mov
xchg
mov
sbb
lret
push
pop
dec
fildll
mov
pop
loope
aaa
call
js
xorl
hlt
mov
ja
push
pusha
dec
lea
out
push
stc
adc
jle
xchg
push
jnp
add
push
sti
pop
enter
sub
inc
popf
dec
out
ds
add
pushf
out
aad
neg
inc
mov
iret
fsubl
fcmovnbe
scas
fnstcw
lods
jg
cmpsl
in
pop
dec
push
roll
add
fucom
test
inc
outsl
out
jle
test
pop
push
cmc
jns
push
mov
fisubs
stos
and
mov
adc
pop
imul
daa
adc
mov
dec
cmp
sbb
adc
in
testl
cmp
and
push
jb
loopne
in
pop
mov
mov
push
add
es
dec
xchg
mov
adc
call
mov
mov
mov
ret
rcl
cmp
add
scas
cld
pop
cli
xlat
pop
mov
movsl
enter
mov
cmp
add
aad
adc
shlb
out
cmp
popa
repnz
push
jecxz
stos
mov
call
push
gs
in
addr16
inc
add
add
icebp
lahf
les
add
add
and
mov
mov
je
dec
imulb
dec
aad
mov
mov
lcall
sub
adc
and
inc
mov
push
subl
jg
mov
or
das
rclb
mov
nop
lret
loopne
sub
fdivrs
sbb
fisttps
wrmsr
jl
push
and
cmp
incb
cmp
out
test
or
mull
shll
call
cmp
decb
lret
dec
outsl
lret
scas
fucom
out
outsl
add
jl
jbe
push
sti
lahf
mov
data16
push
jne
xchg
nop
cltd
sahf
push
mov
ret
pop
xor
mov
out
pop
loop
out
shll
dec
cld
push
into
mov
hlt
jg
ja
pop
dec
jae
cli
adc
movsb
push
pusha
in
out
push
cld
iret
mov
xchg
jo
fneni(8087
inc
mov
insb
mov
cli
ljmp
and
cmp
bt
out
lods
mov
mov
jb
jl
call
mov
or
ror
dec
mov
fsubrs
mov
fisubl
pop
call
lock
es
add
dec
lock
inc
outsb
leave
repnz
cmp
and
cmc
cmp
inc
push
daa
jmp
mov
rorb
jg
jg
insb
jle
shll
add
cmp
dec
lcall
sahf
xor
aaa
sbb
sbb
fidivs
push
inc
xor
std
daa
inc
fistpll
or
cmp
testl
mov
inc
rorl
mov
std
sti
fwait
pop
aas
or
fistpl
lea
sahf
xchg
lods
cmpb
and
in
and
and
jg
jnp
mov
jmp
ficompl
xchg
xorl
sahf
out
adc
pop
cmp
insl
pop
add
mov
stos
test
decl
decl
mov
xor
addl
hlt
jmp
jnp
pop
xor
int
adc
push
sub
push
push
std
loope
pop
out
jge
push
rclb
je
pop
idivl
fcomps
or
movsb
push
add
mov
fldenv
movsl
andl
aas
addr16
loop
imul
fiadds
js
xchg
hlt
shl
lahf
out
js
xor
inc
fs
jae
mov
xchg
ja
iret
rorb
push
jp
pop
or
mov
cmp
imul
jno
inc
sub
movsb
lcall
and
adc
and
mov
scas
sub
cli
or
jmp
mov
pop
cmc
inc
std
inc
jmp
fdivp
dec
cmp
mov
cmpsl
dec
mov
sti
out
cmc
aas
dec
btc
inc
mov
jg
out
pop
cmp
cld
sbb
mov
xor
out
mov
xor
mov
mov
cmp
dec
sbb
fdivrp
adc
sahf
addr16
shrb
ss
js
pop
sbbl
test
icebp
pop
pop
adc
push
iret
insl
adc
jo
ss
sti
push
add
loop
push
jmp
sbb
aas
faddp
es
cli
bound
lret
int
mov
mov
pop
in
lock
adc
lahf
inc
mov
push
insb
inc
pop
subl
ret
test
popa
in
outsl
inc
pop
mov
ljmp
mov
mov
popa
mov
cmpsb
xor
call
cmc
call
lods
mov
add
jmp
sarb
mov
shrl
xor
int3
dec
jae
or
icebp
jl
dec
jle
xchg
jg
pop
int
popf
inc
ret
repnz
idiv
mov
jg
xchg
shll
dec
mov
jo
xchg
addl
adc
xchg
into
cmp
shr
jecxz
aam
sbb
inc
push
mov
aaa
or
rclb
pusha
xlat
inc
sar
and
jg
popl
pushl
cmp
and
lahf
inc
push
add
mov
js
frstor
mov
pop
mov
in
hlt
mov
jl
movsb
pop
pop
xlat
dec
mov
cli
aas
pop
xlat
fidivrs
aam
lods
jne
ljmp
dec
sbb
movsb
mov
outsl
mov
jae
hlt
ret
sti
into
jge
call
dec
aaa
pushf
xchg
push
out
std
lret
cwtl
xchg
sub
inc
outsl
jp
decl
cld
inc
pop
lods
fmull
mov
adc
es
incb
xchg
adc
push
icebp
or
sar
mov
inc
loopne
and
push
fsubl
pop
dec
pushf
xlat
rcr
sub
bound
aas
sbb
sbb
loop
addr16
jecxz
test
icebp
jne
ret
mov
clc
pop
push
mov
mov
mov
cli
xor
push
inc
mov
int
push
loop
mov
dec
sti
sbb
dec
mov
cltd
sbb
sahf
ljmp
test
aaa
jmp
dec
xor
push
jmp
adc
mov
mov
jmp
adc
push
icebp
fs
outsb
xor
adcb
or
bound
fiadds
enter
std
in
aas
loopne
add
jb
lods
stc
lea
movsb
loopne
push
mov
xor
pop
mov
lds
mov
xor
rclb
js
mov
ljmp
lods
out
sbb
xor
call
hlt
add
inc
cmc
xchg
in
js
push
aas
imul
dec
ret
int
fwait
jmp
cmpsb
mov
adc
xor
icebp
arpl
push
or
lea
jmp
cmp
sbb
xchg
dec
inc
ja
test
ret
ret
aaa
adc
pop
dec
add
insl
imul
std
test
jmp
call
ljmp
cmp
fidivl
stos
addr16
std
jg
lsl
or
and
scas
ret
sbb
outsb
add
mov
inc
xor
repnz
mov
mov
jbe
shl
dec
ret
sarl
ret
jmp
sbb
lahf
leave
scas
rorl
pop
pop
cmpsl
sbb
enter
jmp
push
js
test
std
adc
mov
std
iret
std
cmp
jno
mov
fadds
inc
sarl
mov
xchg
jb
inc
fidivrs
ds
xor
icebp
or
cs
aas
hlt
xchg
sub
jmp
sarl
and
mov
in
aad
sti
aas
ret
rcll
insl
jmp
push
mov
in
leave
hlt
outsb
aad
loopne
or
add
adc
or
loop
loope
ljmp
addr16
ret
lock
inc
and
mov
jns
adc
ljmp
stos
add
dec
xor
scas
mov
dec
shlb
fsubrs
cmp
and
push
aas
adc
cmp
or
popl
in
inc
or
ds
mov
xor
pop
dec
daa
movsl
inc
mov
cmp
push
outsb
xorb
addl
xchg
nop
mov
dec
call
jecxz
cmp
lret
push
jnp
aas
sub
stos
insl
and
negl
pop
pop
shrl
cmp
arpl
jmp
rcrl
sbb
jg
mov
xchg
inc
inc
out
out
pop
pop
mov
jmp
inc
and
pop
cld
jg
jg
aaa
mov
xchg
or
mov
lcall
jg
xor
std
mov
addr16
inc
inc
rcrl
fsubr
mov
ljmp
cwtl
in
clc
fistl
fildll
pop
dec
pop
mov
into
std
punpckldq
insl
jnp
lods
popl
mov
cmc
fadd
pop
lods
push
mov
shll
pop
into
push
stc
dec
incl
lahf
fdivr
iret
inc
into
in
out
mov
adc
push
push
xchg
stc
loopne
aaa
sti
fistps
jae
xchg
xor
std
or
jp
mov
sti
pop
push
pop
mov
clc
or
es
or
jg
sbb
inc
fcomps
and
popf
insl
call
lcall
insb
dec
clc
jp
jmp
sarl
out
ja
jbe
push
xchg
sbb
cmp
push
cli
scas
arpl
add
xchg
add
xor
xchg
stc
xor
stos
dec
add
sbb
clc
push
adc
dec
hlt
lock
or
les
cmp
dec
mov
mov
cmpsl
fnstenv
dec
pop
sbb
cmp
lret
fdivrl
pop
in
sub
or
mov
fucom
out
stos
mov
stos
out
cmp
dec
dec
mov
or
adc
mov
jns
jle
incl
lahf
popf
sub
sahf
push
addr16
frstor
decl
xchg
xchg
sahf
pop
xor
or
cmc
cli
insl
push
pop
and
adc
mov
pop
sbb
mov
add
imul
loope
cmp
dec
inc
mov
mov
pop
add
push
mov
xor
in
dec
lds
aas
aam
pop
scas
sbb
adc
idivl
inc
jmp
bound
mov
sub
incl
es
xchg
fcmovu
fs
imul
mov
rclb
xchg
cli
xchg
lock
hlt
clc
aas
or
jmp
inc
xor
jnp
aad
adc
or
nop
es
jnp
call
fidivrl
test
mov
cmp
hlt
shrl
decl
stos
mov
popa
add
lds
enter
pop
mov
adc
insl
lahf
adc
jmp
out
mov
fwait
mov
insl
inc
imul
sarb
ret
push
pushf
int
popa
ljmp
inc
push
ficompl
jp
imul
in
mov
movsb
adc
push
jg
jp
cli
inc
cmc
mov
cmp
add
lock
xlat
jecxz
xchg
jae
pop
xchg
adc
icebp
loope
enter
add
add
icebp
movsb
insl
xchg
aas
xor
cmpl
mov
mov
lods
cmp
cmp
pop
push
adc
cmp
xor
movsl
pop
pop
push
sub
cmp
decb
in
ss
jg
jb
adc
jnp
fwait
mov
test
loope
neg
and
jle
push
fiadds
mov
mov
mov
insl
inc
js
lds
inc
lahf
loope
rorl
loope
test
lcall
mov
jg
mov
clc
xor
mov
push
and
adcl
gs
out
pop
lods
cli
aas
mov
adc
rorl
xor
jl
sbb
or
clc
fcompl
sbbb
test
aas
mov
loop
jno
das
sarl
fisttps
sub
ljmp
nop
test
ret
das
xor
sub
mov
pop
aaa
out
sub
xchg
cmp
mov
hlt
pop
test
shlb
mov
iret
shll
lock
cmpsl
les
sub
clc
xor
xrelease
or
movsl
adc
xor
xchg
cmp
fwait
xor
shr
jecxz
into
out
subb
adc
inc
xchg
jp
loope
stos
push
pop
jb
jae
or
adc
mov
lock
cmp
and
cmp
pop
inc
test
cwtl
popa
cld
pop
sarb
push
mov
jl
orl
adc
shrb
dec
adc
or
jnp
idiv
call
fidivrs
and
dec
cs
out
fisubrs
vpslld
mov
cld
or
rorl
fistpl
or
mov
sti
pop
js
pop
mov
lret
xor
mov
imulb
lcall
jge
mov
inc
decb
lcall
cli
mov
scas
loop
adc
and
ljmp
imul
cmp
push
ljmp
xchg
out
in
xchg
mov
clc
rorl
es
daa
cmpsl
aas
sbb
inc
loopne
loope
movsl
fs
mov
stos
mov
mov
aad
jae
shrb
outsl
scas
xor
push
loopne
lds
lea
xchg
gs
push
jle
sahf
cmp
adc
mov
adc
inc
mov
jmp
dec
ss
clc
out
inc
scas
mov
ja
in
fwait
lods
rol
mov
dec
inc
jg
mov
add
jge
jnp
and
add
inc
xor
out
dec
fistps
mov
pop
jge
jmp
adc
mov
nop
js
pushf
inc
adc
roll
out
fiadds
mov
insb
outsb
jbe
out
and
call
clc
jmp
inc
push
sub
xor
lock
xchg
push
notb
out
popf
push
call
mov
jecxz
or
pop
and
daa
mov
jns
int
cmp
add
arpl
or
lcall
jae
loop
lcall
pop
xlat
lea
xor
lcall
jg
mov
cmp
cwtl
out
in
xchg
xchg
inc
rol
dec
or
test
js
fld
inc
loope
mov
imul
or
loopne
stos
icebp
cmp
fidivs
mov
and
negb
jl
jmp
loope
xchg
in
pop
cltd
ds
xor
rorl
flds
test
jg
push
call
faddl
stos
cld
fs
out
inc
icebp
push
xor
mov
es
fxch
inc
or
push
dec
cmp
sbb
adc
fistpl
or
negl
mov
inc
scas
mov
aad
les
out
aas
pop
sarl
lcall
pop
inc
push
push
dec
aas
pop
push
shlb
loope
jb
faddl
xor
mov
fdivs
into
testb
pop
scas
clc
xchg
sarl
clc
jo
out
lds
push
pop
sbb
dec
xchg
or
sarl
push
les
push
or
adc
jg
clc
mov
in
xor
mov
and
mov
or
push
test
ja
cld
mov
arpl
rclb
sub
mov
push
cmpsb
aaa
subl
sub
adc
loope
ficomps
adc
pop
push
mov
btr
xor
dec
inc
sbb
mov
das
xor
push
outsb
data16
int3
pop
sbb
cs
arpl
insb
aad
xchg
addr16
mov
sbb
push
push
cmpsb
jae
daa
stc
inc
push
cli
loopne,pn
popa
lods
add
jb
mov
andl
adc
ja
mov
sbb
push
repz
loope
mov
lods
xchg
fmull
cmp
iret
mov
push
adc
shl
dec
inc
adc
push
cmp
enter
mov
rcrl
xchg
adc
mov
sub
imul
stc
sbb
lods
jbe
pop
jae
test
out
cmpsl
hlt
fcos
mov
in
stc
and
ja
out
rcr
out
mov
sbb
sarb
in
add
fwait
lds
add
adc
mov
push
icebp
out
jmp
mov
fildl
xchg
xlat
inc
lods
sub
xlat
popa
test
adc
and
enter
sti
out
mov
or
sbb
dec
xlat
mov
ret
stos
cmc
orl
loope
xchg
out
inc
ret
xchg
jge
pop
call
popa
lahf
pop
je
or
pop
ljmp
repnz
pop
sbb
jns
cli
enter
push
loope
fsubrp
dec
or
addr16
in
sarb
jg
cli
aas
int3
scas
mov
inc
test
pop
lcall
lods
sar
dec
popf
loopne
xchg
or
icebp
lcall
jae
inc
or
cmc
mov
out
pop
fidivrs
imul
fcmovb
insl
inc
es
sbb
stos
mov
cmc
sbb
sbb
aas
mov
cmc
mov
cmp
and
cli
bound
sti
out
adc
sub
push
cmpsl
incl
and
das
pop
rcll
sti
jg
jb
push
lea
aas
cmp
jae
mov
loopne
loope
sub
mov
clc
cmp
cld
or
lods
imul
stos
xchg
jle
cld
mov
cs
outsb
outsl
inc
shll
mov
clc
cmp
fstl
xor
dec
mov
jbe
dec
push
inc
xor
mov
xchg
stos
mov
sub
dec
aas
jbe
filds
stos
pop
ds
lods
aam
scas
scas
mov
daa
add
aaa
jmp
cmp
pop
mov
fidivrs
lock
or
or
adc
fidivrs
mov
decb
xor
mov
fadd
jno
inc
pop
jno
cmp
cld
imull
sub
sbb
add
dec
loopne
pushf
fs
icebp
lods
inc
cmpl
mov
int3
outsl
mov
add
les
lock
add
jbe
in
xchg
cmp
or
push
push
inc
xchg
dec
test
nop
out
lods
pop
pop
adc
inc
fdivrp
pusha
das
add
cs
lock
int
fidivl
pop
ja
mov
jp
mov
test
push
aaa
popa
mov
sti
daa
std
jmp
imul
push
sbb
jnp
test
ror
shl
lret
jmp
dec
test
incl
add
cmp
jnp
loope
aas
aad
add
imull
jno
jb
fs
cltd
jecxz
sbb
roll
stc
ds
icebp
cmp
mov
dec
mull
adc
cld
mov
repz
lcall
dec
std
aas
dec
idivb
or
push
scas
inc
push
add
out
xchg
idiv
ffreep
es
xor
push
sub
aas
jecxz
stos
in
xchg
push
sub
push
adc
lahf
jbe
dec
mov
call
movl
pop
push
push
push
clc
pop
out
mov
scas
jns
sarl
icebp
pop
pop
out
adc
dec
adc
push
stos
mov
mov
add
arpl
sbb
mov
add
push
cli
and
das
jne
js
lcall
adc
jb
std
sub
sti
ret
imul
fisubrs
xlat
js
cs
rcrl
adc
shll
push
std
aas
imul
lock
inc
lods
adc
lret
xor
outsb
cmp
or
icebp
sbb
cli
pop
dec
std
jmp
in
rol
or
push
fcmovnbe
sub
jmp
lock
and
xchg
inc
adc
mov
cmpsl
fmull
push
iret
xor
xchg
insb
xchg
sti
pop
jmp
je
push
pushf
out
xor
out
addb
stos
pop
push
lock
imul
sub
jg
or
lret
out
fisubs
xchg
jp
mov
mov
in
jno
dec
mov
mov
daa
add
dec
adc
scas
sbb
pop
adc
lods
adc
mov
ss
or
add
mov
bound
push
push
add
inc
aam
in
push
test
xchg
adc
xor
fs
xchg
cmp
lcall
push
add
test
ret
and
mov
add
repnz
push
inc
sbb
outsl
sti
out
or
gs
jo
add
and
out
push
jns
add
call
push
sub
xor
dec
roll
fisttpl
and
and
inc
push
xchg
cmc
xchg
fildl
clc
inc
pop
push
dec
lock
push
push
add
pop
mov
add
adc
rorb
xchg
stc
adc
inc
dec
js
cli
add
add
or
or
push
add
fs
push
pop
aad
add
mov
fmuls
mov
test
mov
push
sahf
pop
add
negl
out
jnp
xor
mov
or
dec
imul
mov
push
jne
in
inc
cmpb
into
gs
leave
lock
cli
xor
push
out
mov
sub
lcall
movsl
xor
inc
mov
adc
sbb
les
jb
inc
cmc
cmp
enter
mov
jbe,pn
pop
mov
cmp
leave
ret
jmp
js
aad
xor
dec
dec
or
jns
push
push
push
push
test
call
cltd
insl
out
inc
or
clc
inc
aaa
push
push
push
mov
push
mov
stos
jb
lods
sub
mov
mov
stos
mov
dec
addr16
imul
into
jecxz
sub
cmp
mov
aad
call
ljmp
mov
lock
mov
decl
add
popa
test
ja
test
xor
cmp
je
dec
les
inc
dec
je
adc
inc
stos
test
nop
xor
pop
xchg
je
ljmp
dec
push
adc
inc
sbb
push
shlb
inc
push
add
adc
mov
enter
stos
test
clc
inc
jne
or
inc
aad
sbb
inc
jo
nop
outsl
lds
ja
push
fs
add
xchg
push
lock
push
dec
mov
pop
stos
push
cmp
ss
repnz
cmp
push
cmp
or
push
out
js
add
popa
aaa
dec
push
jge
popf
jae
dec
cltd
cld
arpl
aas
inc
or
imul
mov
mov
in
test
cmp
cli
push
mov
push
inc
push
inc
sbb
testl
adc
mov
and
pop
or
lret
push
enter
or
imul
sbb
int
jecxz
insl
jno
subb
xchg
sbb
daa
or
sbb
add
in
bound
dec
sub
jo
xorl
out
adc
gs
je
out
add
imul
sbb
shl
or
dec
inc
sub
icebp
pop
jmp
sbb
lock
test
push
js
cmp
fs
loopne
add
rcrb
push
outsb
push
ss
or
and
mov
dec
dec
insb
sub
and
inc
rclb
loop
jns
inc
push
imul
notl
call
add
data16
pop
rcr
in
shll
into
add
jge
movlps
sbb
sbb
jno
inc
gs
jecxz
icebp
ja
pop
add
out
mov
pop
push
clc
add
repnz
dec
jne
or
jo
mov
add
je
adc
pop
movsb
add
test
jg
sub
mov
pop
std
mov
in
outsl
cmp
cmpsl
ret
dec
dec
inc
xor
sti
jns
dec
out
inc
push
ja
adc
dec
jne
dec
outsb
pusha
sbb
bound
jne,pn
js
add
loope
add
mov
dec
imul
sbb
ljmp
loopne
fistpll
sub
mov
pop
sub
stos
aam
mov
adc
mov
pushf
mov
aas
inc
xor
push
push
orl
js
sbb
add
sbb
adc
mov
sbb
add
pusha
test
push
dec
ficomps
add
movl
add
pop
cmp
add
add
shlb
cli
pop
sbb
push
xor
jae
pop
loopne
rolb
or
pop
adc
mov
pop
push
outsl
xchg
jns
xor
push
mov
push
ss
pop
sub
add
rorb
rorb
xchg
mov
xchg
jmp
lcall
jne
cs
aad
add
xor
add
mov
sub
test
addr16
push
add
inc
rolb
loopne
add
aad
lock
dec
push
imul
push
dec
mov
xor
jb
js
in
rolb
call
stos
scas
sarb
fidivrs
add
xor
inc
or
movsl
decl
in
ljmp
fistps
roll
push
insb
js
out
mov
incl
je
mov
inc
and
mov
sub
stos
gs
push
imul
cmp
cmpsb
push
add
lret
inc
mov
andl
out
addr16
ret
repz
mov
fcmovnu
mov
jb
js
add
dec
and
add
aaa
add
lret
mov
arpl
les
inc
pop
push
inc
mov
sarl
insb
movsl
mov
adc
and
shlb
lods
push
dec
aam
pop
lea
jnp
push
inc
in
insl
dec
pop
cmpsl
pop
dec
ficoms
push
js
sbb
cltd
or
sbb
mov
jno
int3
sub
popa
inc
sar
sti
fnstsw
add
sbb
dec
inc
dec
or
repnz
cmp
jg
mov
lock
insb
push
sbb
rorl
mov
bound
icebp
jbe
lret
adc
out
xor
ficoms
daa
cmpsb
dec
xor
lods
sbb
mov
mov
mov
dec
push
mov
das
jle
inc
cmp
cmpsl
mov
dec
popa
add
and
mov
push
dec
inc
pop
mov
jne
test
jmp
sarl
pusha
imul
inc
rorl
push
lret
mov
push
push
push
fdivrs
dec
pop
dec
push
and
inc
rcr
mov
jg
jo
push
dec
inc
dec
and
xlat
mov
inc
push
sbb
ja
pop
outsb
loop
push
dec
push
ret
mov
jne
or
xchg
rolb
mov
sub
lock
adc
sub
push
dec
je
jl
xlat
test
push
adc
cmp
jl
mov
imull
jecxz
jno
ret
inc
inc
dec
mov
in
out
add
dec
imul
xor
dec
cmp
adc
push
push
inc
loope
js
in
push
fdivl
inc
inc
inc
mov
dec
inc
jmp
push
fs
int3
outsl
sub
ss
je
data16
mov
loopne
js
sub
add
cmp
in
inc
push
jbe
cmp
ja
pop
fildll
adc
inc
push
movsl
arpl
adc
mov
std
jo
ja
inc
cld
pushf
push
sub
xchg
sub
push
rcrb
push
pop
dec
jae
or
and
sahf
notl
js
jb
jmp
pusha
sub
xor
pop
xor
cmp
xorl
jo
add
dec
cltd
pop
jge
sub
pop
sbb
inc
add
popa
push
stos
fisttpl
inc
out
dec
scas
sub
mov
adc
inc
jnp
xchg
adcl
call
push
push
cmp
shll
loopne
push
popa
inc
lret
ficoml
or
stos
ret
or
repnz
dec
jmp
les
sbb
fistl
arpl
add
test
xor
jae
inc
and
add
xor
cmp
xchg
jp
mov
jne
mov
add
rcrb
dec
leave
mov
outsb
adc
sub
out
xor
and
repnz
repnz
out
push
push
push
sbb
mov
shrb
inc
xchg
mov
adc
pusha
xorb
lret
ss
inc
or
dec
loop
or
fiadds
inc
iret
and
add
mov
dec
pop
loopne
stc
add
mov
sbb
inc
outsb
mov
mov
in
cmp
jne
jno
push
xor
dec
call
or
jmp
call
adc
jo
lods
adc
cs
in
dec
rorb
imul
loopne
imul
add
sub
inc
push
aaa
testl
jb
push
xchg
pop
fs
std
add
push
inc
sub
add
lods
dec
jno
loop
and
scas
mov
shlb
mov
imul
mov
cmp
loopne
cld
outsl
push
cli
sub
mov
adc
pop
inc
mov
inc
fnstsw
sbb
xor
mov
enter
clc
dec
popa
jmp
ret
mov
push
sbb
add
lock
pop
mov
adc
push
adc
std
inc
or
out
xor
js
dec
push
add
inc
add
hlt
and
push
mov
jne
arpl
adc
ret
cmpsl
adc
mov
in
dec
push
mov
aam
or
data16
es
cmp
push
outsl
mov
push
jae
outsl
jbe
push
les
je
inc
push
xlat
addr16
push
and
dec
jg
push
xchg
push
addl
adc
mov
mov
negb
sbb
loopne
xchg
movsb
fildl
outsl
aam
popa
inc
push
push
in
enter
scas
outsb
bound
xor
pop
stos
jb
push
js
ret
sahf
push
lds
cmpsb
dec
loope
xlat
addr16
jae
mov
mov
or
pop
or
and
inc
xchg
and
popl
push
loop
nop
mov
test
lret
lea
es
dec
insb
loopne
outsb
add
insl
cmp
das
xchg
jno
dec
bnd
xchg
jbe
jbe
push
sub
push
stc
or
rolb
inc
pop
sub
push
shll
sti
fcoms
and
rcrb
jns
xor
jge
leave
test
xchg
sub
mov
das
div
cld
test
and
jne
repnz
shl
jp,pn
mov
insl
push
add
cmpsl
aas
cmc
sub
push
add
aam
dec
push
jns
push
daa
xor
shlb
js
icebp
clc
xchg
test
scas
iret
push
jnp
pop
scas
js
shll
cmp
inc
and
mov
sbb
sub
fcompl
xchg
and
sbb
leave
mov
xchg
and
fsub
inc
cmp
add
out
data16
cwtl
adc
push
jne
aaa
add
push
pop
and
lods
dec
ret
dec
inc
sub
test
or
aaa
je
and
loopne
or
or
loope
popf
das
into
mov
gs
sub
inc
jns
sbb
call
lock
add
push
mov
jmp
gs
repnz
fstl
push
sbb
test
sbb
add
inc
adc
mov
insl
push
push
ds
bound
dec
xor
sbb
push
pop
popa
xor
fld
jmp
sahf
in
clc
roll
into
jl
bound
push
leave
bound
lret
dec
scas
faddp
fs
or
inc
add
cmp
dec
mov
dec
jo
dec
int
mov
lock
jno
cli
or
pop
sti
jae
loop
jg
adc
inc
xor
je
mov
mov
xor
pusha
or
cmp
dec
jo
jp
popa
jl
pop
aam
dec
mov
std
test
push
insl
inc
add
call
and
jns
jae
bnd
cli
pushl
insb
lahf
xchg
sbb
and
pusha
stos
inc
inc
inc
inc
and
and
inc
inc
mov
push
sub
push
mov
mov
inc
jns
add
and
inc
sub
test
inc
adc
sbb
lods
mov
inc
or
inc
or
push
sbb
adc
adc
pop
mov
inc
and
in
orb
or
imul
adc
mov
insl
jns
insl
and
dec
cmp
mov
xorb
lret
inc
dec
add
sbb
mov
lods
ja
dec
add
add
pop
out
mov
adc
or
fwait
and
mov
jp
adc
and
adc
test
cmp
imul
add
xor
xlat
pop
push
push
cmpsb
and
fsubrl
addb
mov
pop
mov
inc
fsubl
outsb
push
imul
xorb
xlat
mov
or
mov
add
sub
pop
imul
pop
mov
xor
imul
dec
xorl
aaa
or
add
mov
pop
fwait
cmp
push
testb
pop
xorb
or
imul
xchg
lods
mov
adcl
push
or
jae
xlat
mov
jecxz
ja
pop
jmp
pop
jae
inc
xlat
sbb
ss
adc
das
jb
inc
mov
cmp
push
push
subb
adc
xchg
push
int
adc
add
or
mov
and
mov
je
or
imul
test
idiv
lods
xor
gs
gs
xor
cs
insb
inc
test
sbb
fbld
lret
cmc
xor
and
or
fisttps
pop
cmpsb
loopne
lods
mov
or
inc
rorl
cld
add
rclb
aaa
xor
imul
jae
dec
gs
outsl
jb
adc
outsl
incl
outsb
jae
insb
gs
push
push
outsb
insb
push
imul
inc
js
div
fisttps
popa
xor
jae
push
push
gs
mov
imul
push
popa
jb
sbb
or
adc
cs
enter
push
imul
or
outsb
je
divb
outsb
jbe
jnp
push
inc
fildl
bound
adc
pcmpgtb
arpl
inc
jne
mov
mov
inc
sbb
jne
dec
subl
insl
in
aas
and
insb
xor
fcmovnu
mov
daa
sub
jne
push
je
outsb
addr16
dec
outsl
mov
jne
in
gs
and
push
jae
pop
popa
sti
jbe
push
insb
fisubl
inc
popa
jbe
mov
je
sbb
mov
dec
outsl
or
mov
pop
dec
imul
out
or
cmovns
adc
das
test
fs
es
push
addb
imul
iret
inc
fstpl
inc
inc
cs
imul
adc
cltd
mov
mov
lods
dec
es
jl
stos
inc
outsl
outsl
ret
jbe
mov
mov
gs
sbb
push
popa
popf
mov
adc
jae
je
outsb
outsw
adc
push
jb
popa
cmp
sbb
mov
push
xor
mov
mov
adc
adc
jae
inc
rcrb
sub
popf
dec
push
gs
xchg
gs
lock
insl
ljmp
sbb
push
jo
ret
jne
arpl
ret
sub
sbb
loope
arpl
jb
jne
jne
insb
push
add
repnz
imul
fwait
xor
aas
lock
pop
push
inc
jbe
div
sbb
inc
adc
sub
jmpw
imul
mov
inc
xchg
pop
mov
arpl
inc
es
js
insb
das
push
inc
adc
pop
push
mov
outsl
adc
daa
shrb
pushf
int
mov
je
jb
ret
jmp
outsb
arpl
dec
push
dec
pop
push
dec
dec
inc
dec
inc
inc
pop
inc
push
out
test
arpl
xchg
pop
push
dec
test
daa
test
fwait
xor
inc
insb
addr16
ds
sahf
jo
mov
mov
jo
mov
into
adc
ja
push
rcll
ja
and
push
jne
arpl
xchg
xchg
jecxz
push
cmp
rorb
shrb
ret
jae
pusha
ror
shlb
sub
imul
push
imul
outsl
jb
addr16
push
std
imul
pop
mov
pop
andl
jno
inc
pop
gs
and
pop
inc
dec
inc
or
jle
insl
dec
bound
jae
mov
inc
inc
push
mov
jge
insl
bound
outsb
stos
neg
insb
pop
sbb
je
scas
lea
adc
jae
push
pop
inc
das
popa
mov
sub
jbe
mov
fs
jae
xor
jb
loopne
mov
inc
jp
ret
pop
jecxz
mov
sbb
dec
adc
mov
int3
rcrl
mov
mul
jbe
inc
ret
mov
push
cwtl
in
xor
mov
lcall
add
jge
mov
mov
push
add
xor
arpl
push
sbb
es
xor
xlat
arpl
js
fs
push
rcrb
sbb
imul
xor
arpl
mov
add
orb
jp
ss
or
push
dec
cltd
or
outsb
jno
adc
insl
pcmpeqd
sub
xor
icebp
adc
outsb
shrb
popa
sbb
js
or
fadds
orl
xor
mov
mov
sbb
jb
icebp
js
orl
add
or
fsubrl
rcr
aad
aaa
data16
jb
ret
lods
inc
adc
mov
jne
or
jb
fstps
cwtl
jb
mov
outsb
or
push
cwtl
subb
add
dec
mov
dec
outsl
je
mov
sub
add
push
int
jnp
dec
in
dec
loop
mov
adc
add
and
pop
sti
push
push
pop
arpl
push
inc
cli
xor
pop
add
loopne
jae
es
repnz
adcl
mov
pop
rorb
jo
adc
popa
into
sub
inc
pusha
xchg
jo
adc
mov
jae
dec
sbb
push
pop
dec
dec
dec
inc
push
push
mov
jp
lds
adc
mov
jecxz
dec
movsb
add
dec
xorw
xor
sbb
push
dec
xor
test
push
adc
test
addr16
push
push
inc
in
xchg
dec
jnp
imul
outsl
ljmp
adc
push
test
jo
subb
push
outsb
push
and
lret
adc
lcall
pop
aaa
addr16
xor
adc
sub
jbe
push
adc
mov
lahf
xor
inc
stos
movsl
mov
sub
inc
xorl
insl
or
lcall
mov
push
jo
push
pop
cmp
sahf
imul
ja
flds
mov
or
sbb
dec
sbb
mov
out
adc
pop
mov
fsubrl
je
imul
or
sub
xchg
mov
or
fwait
cmp
int3
fwait
or
mov
ds
stos
adc
fs
mov
sbb
imul
cs
fcmovnb
js
jno
fiaddl
inc
out
xor
pop
and
cmp
dec
iret
xchg
fs
lahf
mov
add
add
add
addr16
push
or
and
imul
inc
or
cmp
add
jnp,pt
adc
sub
push
sub
fcmove
pop
mov
push
add
mov
jo
jmp
mov
push
fst
movsl
or
add
fmull
int
jb
push
adc
adc
pop
inc
add
sbb
lock
mov
test
stos
or
push
sbb
es
sbb
add
loopne
pop
mov
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
