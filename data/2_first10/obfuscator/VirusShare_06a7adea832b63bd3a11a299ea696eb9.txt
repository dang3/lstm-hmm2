decl
or
mov
add
adc
adc
add
mov
add
ljmp
cmp
add
add
je
mov
mov
idiv
mov
dec
rolb
and
adc
and
add
adc
pop
sti
pushl
push
or
and
test
add
inc
nop
add
adc
xorb
rorl
dec
sbb
das
and
jmp
call
or
je
adcl
adc
or
add
orl
idiv
mov
orb
cmp
je
mov
in
incl
ret
mov
pushf
mov
add
mov
ret
dec
into
loope
js
cmp
add
xor
aam
or
add
mov
insl
sti
out
add
insb
add
jbe
cmpsl
add
fistpll
rolb
pop
add
inc
add
add
add
or
mov
outsb
add
dec
dec
fisubrs
xchg
add
push
mov
cmp
push
testb
subb
jg
cltd
lea
stos
sti
addb
push
pop
sti
add
add
add
cmp
int
mov
add
sbb
roll
repz
popl
test
pop
add
add
test
lret
add
add
and
lock
mov
popa
roll
insb
mov
lds
pop
pop
sub
push
lret
out
pop
mov
shrb
fst
xor
sbb
pop
xchg
das
outsl
into
sub
xlat
std
mov
js
sarb
cmp
pop
ja
cmp
in
push
mov
add
pop
inc
or
bound
jo
sbb
andl
and
mov
xchg
cmp
adc
cs
add
xor
cmp
xlat
add
cld
jle
jns
out
jp
pop
sbb
add
lcall
push
add
pop
jle
cld
add
push
pop
int
rolb
hlt
add
addr16
adc
popa
loopne
or
inc
test
fst
shll
fwait
imul
imul
pop
sub
dec
sub
popa
pop
mov
stc
or
mov
add
add
aaa
filds
inc
inc
clc
verw
sub
sbb
nop
test
sahf
jg
dec
add
jb
add
dec
adc
decl
pop
mov
test
xlat
dec
mov
adc
or
add
icebp
outsl
enter
scas
add
adc
adc
rorb
jo
popaw
ret
xchg
inc
push
jp
icebp
test
insb
and
fdiv
ja
inc
push
jnp
dec
cmpb
insb
lret
test
cmp
in
ret
inc
loope
fldt
add
dec
cmp
cwtl
mov
dec
mov
add
mov
push
scas
mov
test
and
je
xchg
orb
lcall
push
inc
add
sbb
and
mov
faddl
out
dec
mov
push
movsb
add
inc
js
or
sti
into
add
jecxz
jne
add
mov
out
jbe
or
sub
xchg
sahf
adc
jo
or
idivl
push
lea
and
pop
cs
out
in
push
jb
fstps
inc
or
add
ret
xor
lea
sbb
cld
inc
pop
pop
mov
into
sub
pop
addr16
imul
cmp
faddl
mov
clc
xlat
sbb
cmp
inc
push
or
lcall
adc
jg
in
fcmovb
add
add
daa
ret
arpl
xor
sub
int
in
add
inc
adc
cs
cmp
mov
sub
sbb
push
adc
sbb
add
push
sbb
call
sbb
mov
mov
mov
cmpsb
paddusb
ds
call
inc
lods
shlb
pop
inc
lret
fistpll
lahf
dec
mov
outsl
ljmp
inc
dec
xchg
sub
xorl
int
fldl
add
je
lock
je
adc
jecxz
and
test
sti
sbb
mov
lcall
mov
and
ret
nop
int3
leave
lcall
fistps
sbb
or
scas
leave
mov
stc
addl
inc
sbb
lcall
push
into
mov
lahf
xchg
jb
push
scas
fcom
in
jmp
out
xchg
out
loopne
xchg
mov
or
mov
lcall
mov
mov
sarb
cmp
pop
mov
xlat
pop
outsb
lret
pushl
rol
dec
out
fdivr
sahf
pop
sti
call
xchg
decb
leave
popf
out
js
mov
rorl
jp
xor
cmp
sahf
mov
fcoml
rclb
pop
add
rcrl
add
pop
or
movsl
rclb
adc
inc
cs
ret
loop
mov
mov
inc
jb
scas
mov
pop
xor
and
imul
or
dec
fldl
fstl
sar
mov
es
in
add
icebp
xor
fmul
sub
cmp
sbb
cli
cmpsb
insl
inc
push
pusha
push
xchg
mov
cmc
aaa
jb
mov
push
push
mov
sbb
xor
jno
jb
scas
pop
movsb
xchg
pop
xchg
or
and
and
negl
pusha
xchg
lods
ljmp
jg
rcl
clc
outsl
add
lcall
jg
dec
adc
test
jge
pop
arpl
stc
adc
repnz
sbb
inc
jmp
cwtl
ret
or
jmp
inc
mov
clc
jne
shl
ljmp
test
or
in
sti
movsb
clc
xchg
push
or
sbb
push
incl
push
lods
pusha
jmp
adc
mov
jl
pop
mov
pop
pop
idivl
fldl
mov
insl
mov
ret
jp
mov
fsts
pusha
ja
insl
or
popf
addl
test
sbb
xchg
or
jne
int3
pop
sarl
out
lahf
or
lods
subl
filds
fs
insb
and
lods
or
adc
aam
mov
stc
push
or
or
mov
notl
pop
dec
jmp
push
mov
addr16
movsl
sbb
aaa
pop
subl
cmp
loop
ret
xlat
jg
cs
js
pop
pop
sub
mov
push
cmp
dec
xchg
icebp
lds
sahf
cmp
pop
data16
rolb
iret
dec
cs
movsl
in
pushl
mov
leave
add
cmp
shlb
inc
ljmp
das
std
xor
sbb
lret
mov
inc
addr16
mov
das
aas
pop
xor
xchg
popa
stc
test
cs
cmp
loop
push
sti
ret
xchg
or
sub
dec
pop
dec
aad
add
ss
xchg
jle
mov
pop
mov
push
stc
arpl
add
mov
std
add
aam
add
cmp
mov
ss
mov
fsave
popa
dec
mov
cmp
jne
out
add
push
inc
add
and
fisubl
mov
sub
outsl
sbb
orb
adc
pop
jge
imul
cmp
push
xchg
mov
in
out
push
in
sub
je
es
call
in
inc
test
mov
push
fsubl
mov
mov
push
adcl
outsl
lcall
push
cmp
fsubs
movsb
outsb
cmpsl
mov
in
jnp
rcrl
xchg
xchg
icebp
sbb
inc
inc
jae
fdivr
gs
outsl
arpl
sbb
ja
aas
ficomps
std
fisubrl
negl
pop
inc
jecxz
mov
adc
pop
hlt
xchg
jp
mov
sbb
ret
push
cmp
cmpsb
cs
aam
je
in
dec
daa
fucomip
xor
flds
jge
sbb
add
rcrb
das
int3
mov
sbb
mov
mov
xchg
push
mov
ds
cs
loop
xor
sbb
sbb
or
push
xchg
mull
fsubs
adc
aam
ljmp
fstpt
lock
or
popa
fdiv
and
or
lahf
and
xor
cmp
xchg
in
lods
fwait
jb
add
ficoml
leave
shlb
inc
xor
jne
ret
xchg
pusha
sub
and
mov
ds
div
sbb
xchg
inc
add
stos
add
call
adc
adc
push
mov
test
jbe
test
sub
xchg
jo
jl
mov
mov
mov
test
sub
sub
mov
xchg
jmp
push
sahf
data16
insl
fdivl
or
add
sub
jb
xchg
mov
pop
and
sbb
mov
movsb
fs
push
xchg
mov
lock
mov
xor
nop
jecxz
mov
dec
pop
mov
andb
incl
mov
or
xchg
cs
inc
cwtl
pushf
add
outsb
cld
sub
mov
mov
scas
out
pop
push
test
outsl
inc
adc
inc
mov
or
outsb
xchg
adc
jl
leave
addr16
or
shl
xor
and
xchg
mov
cmp
daa
cmpsb
xchg
sbb
push
ret
push
fisttpl
outsl
mov
fsubr
pushf
mov
bound
xchg
outsb
outsb
imul
pop
insl
outsb
cmp
mov
pop
lea
gs
jg
lcall
lcall
in
fsubl
mov
xchg
fdivp
add
jl
gs
mov
mov
jmp
ljmp
mov
sahf
sub
ja
aam
xorb
xchg
lea
pop
imul
iret
imul
jge
jbe
jmp
pop
cwtl
jns
int
jp
icebp
addl
cmp
negb
aam
mov
jne
jnp
fs
les
mov
stc
loope
and
testb
mov
xchg
mov
or
jp
insl
mov
jl
and
sub
in
frstor
cmp
iret
fisttpl
xchg
adc
xor
mov
inc
clc
fdiv
popa
dec
movl
dec
addl
scas
std
push
pop
js
inc
mov
cmpsb
lea
iret
and
test
sti
fmull
inc
lods
insl
and
mov
and
mov
sbbb
outsb
ss
pop
js
insb
addl
mov
arpl
mov
into
js
or
std
aam
popa
aaa
loope
push
daa
push
mov
xlat
jmp
mulb
push
inc
mov
lahf
dec
cld
fidivs
pusha
xchg
sbb
dec
imul
sbb
cld
loop
or
sub
xchg
outsb
pop
dec
pop
ljmp
jne,pn
rclb
inc
sub
xlat
push
insb
add
push
test
and
es
jb
add
push
pushf
dec
fisttpl
divl
inc
gs
fs
add
sbb
sbb
mov
out
mov
or
add
push
loop
fwait
or
jo
add
inc
sbb
icebp
pushf
jecxz
lcall
fmuls
push
mov
sti
arpl
sbb
xor
xor
sbbl
test
add
adc
je
mov
shl
gs
add
mov
or
xor
in
inc
outsb
mov
pop
xorb
sub
mov
pop
xor
fucom
pop
insl
xor
icebp
call
test
sub
dec
cmp
add
cmp
jg
clc
mov
xchg
pop
fs
sub
xchg
lods
imul
mov
popf
mov
lcall
cmc
fs
fwait
mov
xchg
lock
lret
fldt
cwtl
bound
pop
test
push
popf
xor
popa
or
rorb
push
out
sarl
aaa
out
and
mov
cmp
inc
mov
adc
xor
mov
jg
lds
nop
fiaddl
pop
cwtl
icebp
mov
insb
arpl
in
sub
ror
leave
pop
ficompl
insb
testl
clc
adc
jbe
out
or
and
xor
cmp
les
pop
xchg
addr16
mov
cld
adc
mov
cmp
in
sbb
xchg
push
push
adc
jbe
sub
loope
movsb
jmp
cmp
les
xchg
mov
mov
bound
out
add
pop
or
cmp
pop
xor
sub
cmpsl
stos
lret
lods
out
cmp
jo
sbb
scas
mov
inc
push
pop
mov
cmp
ret
cmp
dec
push
mov
icebp
cmp
xor
xchg
inc
ja
fldt
shll
insb
mov
or
enter
pop
nop
adc
movsb
cmc
push
sub
push
es
and
pop
and
mulb
pop
fadds
mov
aaa
pushf
xor
mov
sub
movb
in
call
dec
adc
sbb
pop
lret
jg
cs
lock
push
push
xchg
loop
mov
cmp
int
xchg
roll
jge
push
cmp
negl
add
mov
add
mov
mov
test
lret
clc
fdivrl
jecxz
ret
test
cmp
in
cmp
inc
lods
sbb
bnd
divb
fstps
andb
arpl
outsb
mov
mov
mov
mov
mov
pop
push
jg
inc
rcrl
scas
push
mov
shlb
loope
push
mov
pop
sub
sub
sbbl
jl
sub
mov
out
push
push
shlb
push
dec
ss
shll
fisttpll
or
push
mov
mov
rcl
fsubrl
jp
push
rolb
pop
dec
cmc
sahf
cmp
rcr
xchg
sub
loopne
rorl
dec
std
sahf
and
icebp
lods
mov
jge
or
or
xchg
pusha
inc
sti
push
sub
arpl
in
fdivr
mov
fbstp
testl
push
adc
jae
inc
mov
or
sbb
xchg
outsl
sub
int3
outsl
jge
adc
xchg
mov
ret
xor
jecxz
lret
pop
mov
or
rcr
dec
aad
mov
sub
push
int3
int
std
js
pusha
rorb
jmp
push
push
add
pop
sub
dec
mov
sbb
sbb
aam
js
inc
pop
ja
les
outsb
xchg
mov
xchg
push
mov
lock
loope
jns
out
test
mov
mov
test
jmp
imul
popf
ss
cmpb
xchg
ja
stos
fs
repnz
mov
pusha
push
mov
mov
mov
out
lahf
mov
cli
mov
mov
jp
mov
int3
xor
ret
and
mov
lods
stc
lock
jp
mov
mov
sub
xor
jnp
rorl
jo
pop
or
adc
mov
loop
iret
adc
mov
dec
xor
hlt
testb
sbb
inc
sub
lcall
pop
fcoms
xorps
jo
xlat
mov
add
mov
sub
test
cmc
inc
xchg
push
inc
push
andl
mov
dec
or
ret
cmp
sub
fidivrl
push
inc
push
and
std
insl
pop
sub
bound
mov
mov
imul
fcoms
jg
enter
or
sti
pop
cwtl
mov
mov
insl
or
or
dec
sbb
lret
ljmp
lea
jno
sub
jae
add
or
pop
push
shl
incl
fucomi
stc
aad
mov
mov
hlt
outsb
inc
jge
cmp
rol
jmp
and
imul
fldt
es
repz
cmp
xlat
fnstsw
lods
clc
and
mov
mov
and
jge
cmp
mov
xchg
out
imul
aas
ret
sub
cmpsb
pop
ret
jp
jp
pop
cmp
les
xchg
loopne
jo
push
ret
push
adc
shufps
shrl
rorl
inc
xor
js
xchg
xor
out
ret
jge,pn
loope
and
and
adc
sti
dec
fs
dec
rcll
cs
add
ret
or
dec
xor
xchg
cmp
add
mov
sbb
mov
jno
pop
es
repz
movsb
pop
sarb
mov
lret
mov
js
outsb
xchg
popa
push
mov
push
stos
rclb
push
jmp
std
mov
dec
dec
push
lds
loope,pn
das
in
ljmp
pop
and
mov
mov
adc
jecxz
jns
or
insl
mov
xchg
repz
sbb
dec
xlat
lods
dec
pop
das
xor
sahf
inc
sub
lods
adc
mov
adc
std
popf
mov
mov
in
push
ja
sti
cli
and
or
jmp
pop
clc
push
cmp
std
push
sbb
lods
pop
mov
in
or
insb
lods
sti
mov
daa
je
mov
rcr
jmp
dec
scas
movsl
pxor
js
mov
in
shll
int
mov
lds
fcomi
roll
pop
cmp
and
cltd
repz
imul
sbb
adc
aad
icebp
mov
icebp
sub
pop
xchg
dec
or
push
pop
mov
mov
movsl
ret
mov
lcall
cwtl
pop
cmp
inc
mov
add
sbb
imul
sub
mov
pop
jge
fbstp
inc
in
pop
mov
fucomip
daa
jmp
add
repnz
sub
fs
cmp
pop
xchg
fs
pop
clc
ljmp
pop
xchg
lret
dec
iret
push
psubsw
jb
ljmp
adc
sub
mov
orb
subl
lea
in
adc
outsb
jb
xchg
mov
hlt
test
cld
das
cmc
and
or
les
sbb
pop
mov
xchg
out
add
jb
and
test
ss
inc
fmul
and
adc
sub
popf
ret
stos
inc
push
aaa
jle
sub
sbb
cmp
sti
add
loop
int
pop
sbb
in
jmp
add
cld
shll
jnp
loopne
sahf
push
xchg
rcrl
iretw
sub
test
xor
jno
fldenv
cmp
mov
mov
lret
jne
shrb
inc
cltd
xchg
pop
push
xlat
push
mov
dec
leave
pop
shll
sbb
inc
sub
add
xor
insb
mov
test
inc
cmp
js
mov
jp
dec
sbb
lock
push
stos
jmp
lock
mov
fistps
scas
sbbl
add
or
jo
and
mov
cmp
lock
push
pop
xor
mov
jns
mov
mov
imul
sbb
adc
dec
cmp
and
addb
jle
lods
aad
adc
pop
aaa
mov
jb
je
stos
icebp
xchg
pminsw
xchg
cltd
mov
pop
sbb
xor
sbb
mov
lods
jge
enter
jge
mov
and
pop
sti
push
popf
or
jbe
pop
add
int3
fmull
xor
or
mov
call
daa
dec
pop
lcall
sti
out
sbb
xor
push
xor
jle
scas
push
lcall
testb
shr
loop
dec
scas
jb
xchg
popf
lods
jbe
mov
mov
adc
js
cmp
xchg
mov
mov
cmpsb
into
leave
or
ret
dec
fcompl
jl
sbb
sahf
xchg
sbb
pop
mov
sbb
cmp
loope
pop
inc
push
mulb
inc
pop
int3
enter
jbe
outsl
sub
in
inc
push
mov
je
sbb
jmp
xor
xor
ljmp
jb
sub
jp
in
sub
jle
sbb
cld
incl
frstor
in
hlt
sahf
nop
push
xor
xor
mov
xchg
sbb
mov
outsb
test
pop
pop
cmp
inc
test
sbb
xor
ljmp
ret
repnz
shrl
insb
call
sub
arpl
mov
jecxz
in
pop
fsubrs
jae
nop
jae
mov
inc
sbb
dec
clc
adc
push
sahf
stos
mov
sbb
add
pusha
popl
in
or
adc
sti
adc
int3
lock
mov
add
mov
lods
clc
mov
and
xor
mov
movsb
dec
gs
mov
outsb
mov
or
clc
ret
adc
into
jo
push
test
loop
xor
sarb
sbb
pop
inc
xchg
hlt
push
jns
mov
xchg
cmp
and
xlat
mov
fnstsw
jl
mov
test
js
cmp
stos
into
mov
sbb
push
xor
xor
std
lods
push
jbe
sbb
imul
jle
push
insb
mov
leave
add
cmpsl
xchg
shll
dec
cmp
mov
popa
jecxz
push
sysenter
addr16
inc
je
push
out
nop
sbb
xor
jp
jo
out
pop
test
je
sub
fmuls
aam
jg
mov
sub
xchg
xor
xchg
mov
in
mov
js
sbb
inc
in
sbb
ds
cmp
push
push
es
mov
fbstp
sbbb
fcompl
mov
call
sahf
push
add
or
mov
sbb
jecxz
and
enter
xlat
and
and
cmpsl
inc
ja
pop
out
scas
daa
roll
outsl
xor
test
xor
xlat
fiadds
pop
sub
dec
pop
jno
inc
repz
in
sub
cmp
xchg
push
loope
ss
mov
jl
xchg
aaa
pop
add
dec
lds
testl
shl
sub
imul
fsubrl
push
mov
shlb
mov
cmp
mov
and
sbb
les
and
hlt
add
sbb
cmpsl
xchg
push
push
or
xor
lret
rcll
sub
jmp
mov
jbe
mov
cld
std
jl
pop
loope
gs
push
mov
add
inc
loopne
out
loope
dec
jne
adc
incl
stc
jle
pop
or
xchg
xchg
sub
leave
add
mov
imul
inc
sbb
or
jle
mov
repz
dec
ret
sbb
xor
sub
shll
dec
pop
test
mov
inc
or
lret
xorb
adc
inc
cmpsl
loop
pop
repnz
mov
pop
testl
in
icebp
lock
adc
test
mov
es
mov
out
jmp
inc
fdiv
loop
and
std
dec
xor
pushf
sub
add
cmp
cmp
cmp
sbb
cmp
dec
cltd
dec
mov
inc
divb
pusha
jecxz
push
jecxz
repz
lock
sub
mov
jns
test
sbb
icebp
cs
cmp
jmp
jge
mov
sbb
sbb
repnz
out
add
paddsb
mov
arpl
xchg
inc
cmp
pop
dec
sbb
call
inc
add
ret
ficompl
sarl
mov
xchg
jg
scas
inc
roll
jns
xchg
decl
pop
mov
mov
in
in
xor
hlt
test
inc
push
lea
mov
push
xor
xor
cmpsl
pop
daa
out
or
dec
pop
adc
jo
test
push
sub
andl
bound
inc
inc
and
popa
iret
pop
dec
imul
je
sbb
push
fildl
fcom
adc
orl
push
ret
xor
jg
or
jbe
cmpsl
push
push
xor
loope
mov
iret
ret
or
cmp
xchg
adc
inc
shlb
or
mov
cmp
and
arpl
scas
jmp
sub
imul
stos
cmc
popf
fiadds
in
lds
popa
dec
mov
or
lock
scas
sti
sub
sbb
adc
xchg
sbb
insl
push
push
mov
inc
sarb
push
mov
sub
or
std
pop
packsswb
push
mov
fdivs
pop
shlb
daa
inc
fwait
loopne
dec
sti
sbb
idivb
push
mov
movsl
mov
mov
hlt
push
pop
lret
add
fsubs
loopne
loopne
sbb
jo
out
sbb
outsb
xchg
shll
int3
shlb
filds
mov
negb
cmp
sbb
cmp
invd
xor
bound
pushf
jge
mov
or
and
or
test
and
je
and
ror
xchg
and
fdivrs
jg
nop
mov
mov
pusha
test
add
add
rolb
jmp
pop
push
and
mov
push
setnp
mov
rcrl
jne
sub
pop
jg
lcall
int3
leave
clc
imul
add
cmpsl
mul
ret
fsubl
or
out
add
lret
adc
loop
add
adc
fdiv
test
push
mov
inc
out
cmpsb
in
sbb
dec
stc
fidivl
fwait
outsl
cmp
loope
aaa
pop
ret
mov
cmp
test
xchg
cmp
cmp
in
adc
mov
loope
inc
leave
sub
mov
xchg
lods
jbe
call
and
cli
in
rorl
cwtl
outsl
dec
sub
xchg
imul
pusha
iret
mov
cmpsb
sbb
jns
stc
push
lahf
mov
popa
pop
dec
and
and
outsl
jmp
mov
add
fdivrl
or
cmp
pop
mov
aas
add
adcb
dec
dec
das
inc
add
sbb
mov
je
pusha
scas
push
lock
jo
repz
xlat
mov
dec
and
push
mov
mov
sub
dec
xor
insl
repz
push
jno
push
push
pop
test
str
mov
into
out
ljmp
pop
fdivrs
xor
mov
stos
pop
lock
dec
lcall
push
mov
mov
push
mov
loope
jle
jb
iret
shrb
pop
cli
roll
adc
dec
dec
cmp
xchg
or
lahf
mov
dec
or
mov
movsl
rcrb
pop
lods
das
popf
inc
hlt
push
fs
push
loopne
popa
fndisi(8087
mov
cmpsl
daa
mov
mov
pop
push
mov
mov
adc
mov
les
lds
andb
mov
jl
jbe
or
jo
push
nop
cmpsb
xchg
lock
or
sbb
stos
hlt
hlt
addl
dec
xor
jno
push
xlat
ss
cmpb
mov
xchg
ja
ret
outsl
fwait
scas
cmp
lods
add
mov
leave
mov
xchg
test
add
sub
rcr
cmpsl
fdivrs
mov
mov
sbb
sbb
outsl
dec
add
mov
lahf
adc
add
and
js
ljmp
mov
mov
xchg
int
pop
mov
fsubrl
push
cmpl
pop
pop
add
sti
mov
mov
add
mov
cwtl
inc
adc
inc
pop
out
or
adc
divb
cmp
adc
cmp
enter
sbb
bound
cmp
std
mov
lahf
push
add
xor
push
push
and
mov
out
insb
add
stc
adcl
ljmp
inc
mov
inc
into
or
pop
push
pushf
xchg
xor
jecxz
mov
mov
popa
fidivl
stos
outsb
outsl
lcall
lcall
jle
sub
add
or
in
stos
pop
xchg
scas
or
pusha
add
dec
cmp
xchg
test
rcl
mov
cwtl
dec
lahf
xchg
add
out
jbe
outsb
lds
minps
lods
pxor
mov
insb
iret
jmp
out
jb
inc
scas
mov
pop
push
out
in
pop
push
mov
loope
mov
stc
mov
pop
fcomi
adc
jbe
in
sbbl
ja
mov
xchg
repz
and
mov
lea
popf
mov
or
dec
setge
cmpsb
mov
shll
push
outsl
mov
and
add
sar
xlat
push
or
int3
pop
jo
ret
sub
stos
push
and
outsb
das
sbb
pop
fmuls
push
test
cmp
mov
int
loop
pop
sbb
and
sbb
subl
orl
cmpsl
in
popa
mov
mov
psubd
push
mov
xchg
and
insb
push
jno
arpl
jnp
mov
int3
adc
loopne
jg
orb
pop
pause
ljmp
xor
clc
mov
lret
xor
mov
xor
rcll
xchg
fs
inc
pop
xchg
dec
shlb
jmp
imul
shrb
ja
pop
shl
add
iret
les
inc
je
mov
cmp
rorl
scas
mov
and
ffree
js
jno
sahf
dec
jle
int3
faddp
mov
cmp
test
bound
fadds
dec
pop
sub
or
inc
test
call
lahf
test
sahf
mov
fsts
and
inc
and
sub
iret
out
out
rcll
int3
sahf
mov
test
add
rclb
pop
fstl
outsl
fucomi
sbb
shrb
push
or
pop
mov
cmpsb
add
inc
psrlq
sbb
xchg
rcrb
or
daa
imul
roll
and
aas
inc
xchg
xor
pop
inc
fdivrl
mov
sbbb
push
dec
sahf
add
push
inc
inc
sub
fistl
xchg
pushf
xchg
lret
out
cmp
movsb
outsb
pusha
and
sub
mov
add
cmp
or
cld
lcall
stos
das
push
out
rolb
add
dec
daa
ss
and
add
sub
mov
xor
xchg
nop
jne
cmpsb
loopne
cld
inc
dec
les
dec
push
mov
inc
test
icebp
sub
test
jg
mov
aas
add
scas
in
fldl
inc
mov
mov
dec
lret
loop
dec
mov
insl
orb
mov
fst
incl
or
lods
sbb
ds
sub
dec
shlb
pop
sub
mov
aam
es
mov
adc
cs
cwtl
jo
pop
daa
dec
mov
jne
les
aas
sub
popf
addb
xchg
popa
lods
lods
iret
pop
insb
add
sti
dec
push
ret
mov
pop
dec
pusha
add
pop
paddsw
jmp
pop
add
dec
fisttpll
and
and
dec
rcr
or
mov
mov
jmp
pusha
repnz
std
shrb
xchg
xor
fldcw
mov
and
inc
and
inc
out
bound
mov
aam
jp
xor
add
or
and
rolb
js
clc
nop
dec
iret
inc
jmp
in
test
cmpsl
test
ja
push
dec
stos
push
sbb
jg
in
jno
jle
aaa
rorb
pop
aad
nop
mov
mov
pop
add
push
pop
pop
sub
je
mov
add
jmp
inc
xchg
pop
mov
sub
pop
mov
scas
divb
mov
je
pop
adc
popa
xchg
or
clc
cltd
sahf
mov
mov
xlat
bound
adc
and
enter
mov
adc
es
sbb
sbb
and
dec
lds
add
dec
loopne
mov
sub
cmp
stc
in
mov
or
in
adc
loop
add
sbb
pushf
or
jne
cs
inc
je
jecxz
sub
jle
lds
sub
xlat
lock
pop
es
sub
mov
aad
lcall
add
movsl
imul
mov
cs
xchg
into
xor
daa
aam
sub
xchg
and
iret
push
fimuls
imul
inc
shll
cmp
ja
loop
addr16
mov
sub
or
or
sub
or
add
leave
cmp
fs
push
cmpsl
ret
pop
push
cld
sbb
cmp
cmp
and
je
inc
fists
aam
mov
xchg
sahf
addb
pop
test
adc
call
hlt
push
push
bound
xchg
jmp
xchg
pop
xor
jo
push
popa
mov
jl
cmp
stc
xchg
jg
aaa
cmp
adcb
shrl
or
add
stos
stos
in
out
addr16
in
mov
arpl
cmp
sub
sub
js
stc
mov
dec
aam
ja
mov
fists
enter
test
popa
and
lods
bound
movl
aad
cmp
hlt
xchg
mov
push
adcl
jbe
xchg
cmpsb
xor
adc
pop
mov
pop
jo
in
cmp
xchg
inc
mov
mov
movb
movsb
sbb
cmp
sahf
xor
movsl
loopne
jp
cld
adc
mov
std
sbb
fidivs
xlat
sub
mov
cmp
mov
push
out
mov
stc
jg
inc
or
mov
gs
js
cltd
mov
dec
insl
mov
pop
mov
mov
inc
mov
shlb
fs
sbb
in
mov
ficoml
sarl
stc
fwait
shll
ss
inc
mov
pusha
push
icebp
sarl
sub
ljmp
push
inc
out
fldt
mov
pop
push
movq
pop
sbb
cld
leave
mov
or
insl
mov
inc
sbb
lea
sub
popa
adc
rcrl
push
inc
push
push
cs
adc
add
adc
push
mov
dec
pop
or
fisubrs
orl
sbb
mov
sub
mov
insb
scas
push
imul
fcomps
mov
loope
scas
outsb
mov
dec
inc
arpl
fistpl
push
cmp
test
dec
icebp
sarb
adc
test
aas
sub
mov
lods
movsl
cmpsb
xchg
test
mov
je
inc
les
push
cmp
dec
test
sub
sahf
call
xor
mov
nop
push
les
dec
rcrb
cld
outsl
xor
xchg
aam
out
xor
std
and
std
int3
scas
mov
icebp
adc
dec
aaa
out
pusha
jae
or
mov
pushf
int3
cmp
nop
test
mov
jge
push
sarb
adc
insl
pop
dec
mov
or
add
mov
insl
fisttpll
pop
punpckhbw
mov
in
mov
ds
inc
xor
lods
add
jecxz
sbb
pop
or
pusha
cltd
fidivrl
rclb
pop
add
sbb
movsl
lods
es
outsb
push
ret
sbb
cmpsb
push
outsb
hlt
idivb
jl
push
loopne
cli
outsl
cmc
jb
dec
fdivrl
test
fdivl
int3
sbb
adc
imul
pop
insb
in
cmp
lahf
cld
push
lret
inc
addr16
repz
xchg
iret
pop
cmc
fcomip
add
mov
inc
cmp
xlat
lret
add
hlt
out
fsts
sbb
insl
or
cmp
insb
dec
insb
jb
repz
test
jne
pop
leave
je
sbbl
sar
pop
jg
pop
out
stos
xchg
fbld
inc
data16
or
loopne
sbb
pop
and
loopne
jnp
dec
push
mov
add
push
xor
and
insb
addl
scas
daa
jns
jmp
mov
push
fdivrp
add
test
mov
and
dec
add
shlb
imul
jno
adc
push
mov
aaa
jecxz
mov
and
int
mov
xor
fiaddl
push
stos
cmp
cmp
outsl
ds
push
in
add
push
out
mov
jo
sub
mov
dec
test
jo
fwait
cmpsb
fcoms
popl
and
mov
dec
add
cmp
std
test
addr16
sub
das
jge
aad
in
push
dec
push
dec
addr16
cld
mov
lfs
shrl
test
pop
jbe
test
gs
pop
gs
jge
jb
fbld
cli
and
inc
add
sbb
fdivrs
and
lods
ljmp
push
push
fsubs
gs
sub
sbb
sbb
fistpl
inc
jne
sub
and
adc
pop
sbb
push
mov
pop
inc
sbb
rorl
fimuls
push
daa
test
sub
jmp
pop
aad
lret
stos
mov
pushl
sbb
test
mov
out
and
jne
lds
pusha
push
inc
xchg
jno
es
or
mov
adc
jp
mov
mov
inc
sub
shll
sbb
mov
shlb
data16
pop
inc
das
leave
fnstcw
sar
mov
push
push
push
inc
push
ds
std
xchg
ljmp
in
bound
sbbb
pop
fisubs
mov
cmp
loope
jo
outsb
or
fdivs
cmp
orb
jmp
pop
jbe
mov
push
jle
lret
inc
add
flds
and
sbb
mov
fisubs
insl
movups
ret
cmp
clc
add
in
shrb
bound
add
or
pusha
lahf
xor
jmp
lods
add
mov
adc
int
bound
call
mov
cmp
movsl
push
rorb
lcall
fnsave
and
or
bound
push
jne
jae
shrl
int
jns
loopne
sub
cmp
shlb
lods
add
jnp
scas
outsl
mov
mov
pop
scas
mov
cmp
dec
mov
xchg
xchg
dec
fistpl
push
or
sahf
add
scas
xchg
stos
sbb
mov
stos
dec
adc
and
cs
pop
int3
mov
mov
movsb
push
bound
and
stos
orb
in
pop
mov
sti
dec
ss
rcrb
xchg
sahf
or
clc
sub
scas
rcrl
loopne
jmp
int3
ljmp
adc
xchg
jae
ljmp
adc
cld
mov
jg
aaa
popf
loope
les
imul
or
push
cld
xor
mov
hlt
adc
adc
rol
mov
jno
out
or
xchg
and
adcl
js
movsl
fcompl
mov
adc
pop
cmp
sub
cmp
dec
lock
push
mov
stc
dec
roll
call
aam
movsb
mov
dec
mov
inc
aas
adc
leave
sahf
in
lea
add
push
loop
fldl
sub
fwait
mov
ficompl
neg
pop
mov
sbb
sahf
aaa
cmp
jns
and
sub
mov
data16
mov
mov
ret
cs
mov
xchg
test
lcall
mov
test
pop
xor
and
je
mov
cmpb
nop
insb
mov
push
cmc
decl
xor
sbb
loopne
push
pop
int3
or
shlb
inc
das
out
dec
lock
mov
xor
ja
je
sbb
add
mov
push
sbb
pop
rcr
inc
mulb
adc
sbb
mov
cmp
mov
call
mov
push
lret
sti
cmc
add
sbb
ds
fidivrl
add
js
pop
popf
out
xor
dec
mov
frstor
fcomi
jbe
xor
lods
test
iret
movsb
pusha
movsb
in
mov
jo
scas
pop
es
std
cmpb
lods
mov
push
nop
loopne
ss
dec
xchg
fimuls
xchg
aas
test
dec
xor
sub
push
xchg
sbb
jl
jg
jbe
roll
xchg
daa
out
inc
mov
sub
clc
int
out
mov
adc
add
jmp
insl
add
or
adc
mov
sub
cmp
adc
add
dec
add
cmp
fcmovu
mov
inc
movl
inc
gs
push
xor
jb
and
mov
out
cmp
js
mov
push
inc
jge
mov
fwait
inc
in
sub
or
std
test
insl
mov
jns
out
push
push
negb
add
outsl
jmp
stc
sbb
lock
pop
sahf
fwait
sahf
mov
push
mov
arpl
sbb
out
inc
mov
in
push
cltd
adc
sub
or
mov
inc
andb
sbb
shlb
xlat
shrl
cs
cmp
addb
out
push
fsubs
bound
repnz
out
pusha
cmp
mov
sub
push
leave
je
and
shl
xor
dec
dec
clc
mov
in
testl
mov
ja
pop
pop
or
ljmp
call
iret
movsb
mov
mov
outsb
loope
xlat
fwait
shr
dec
cld
ficompl
add
adcb
pop
notl
outsb
je
mov
pop
mov
xor
mov
cmovb
mov
rcll
std
les
je
out
lds
cld
pusha
js
adc
lods
ss
popf
movsb
arpl
xchg
rorl
jbe
inc
xlat
test
jb
sbb
js
stos
jmp
add
sub
sbb
sbb
mov
jb
push
push
xabort
mov
imul
inc
sahf
pop
pop
in
dec
mov
test
cltd
mov
jecxz
jg
or
push
cmp
jne
orl
sbb
leave
ja
pop
out
or
mov
and
lock
les
mov
dec
sub
nop
std
add
dec
aad
mov
je
loopne
or
lea
inc
lock
loopne
adc
cmpsl
jg
adc
movsb
stc
pop
and
nop
sbb
push
daa
and
inc
in
adc
add
loopne
adc
repnz
jg
int
imul
xor
push
test
and
xor
sbb
dec
iret
mov
xchg
mov
mov
push
inc
sub
test
popf
adc
xor
mov
aam
mov
or
jnp
setl
mov
stos
aaa
insb
pop
data16
dec
inc
mov
dec
xchg
mov
outsl
test
mulb
mov
andb
insb
scas
fnstenv
testb
decl
div
andb
int3
mov
mov
dec
fwait
or
add
pushf
je
xchg
xchg
mov
pop
sbb
mov
ret
scas
cmpsb
mov
mov
fs
add
cmpsb
cmpsl
mov
inc
pusha
mov
cmp
jno
mulb
loope
bound
addr16
loop
cli
out
xor
mov
movsb
aas
sbb
lret
inc
add
cmpsl
pop
or
icebp
jb
dec
mov
pop
adc
or
jle
mov
jle
jo
sbb
fsubs
movsl
mov
sbb
sti
out
loopne
inc
sbbw
cmp
sub
ret
aam
sub
lahf
push
and
xchg
sbb
sub
push
aam
mov
push
jmp
add
lret
loopne
scas
pushf
out
movsl
pop
mov
add
mov
shl
xchg
incl
lods
adc
cltd
hlt
mov
add
push
sbb
jbe
mov
jo
ja
jbe
fistl
pop
sub
lods
mov
ss
aad
aaa
xlat
jbe
add
aaa
push
test
faddl
ja
or
mov
fistl
push
cmpl
adc
loope
sbbl
sub
mov
gs
push
out
adc
loopne
data16
push
outsb
movsl
fmull
cmc
stc
out
in
or
std
sub
or
push
xor
dec
insl
outsl
mov
scas
jbe
or
push
adc
fisttps
sahf
and
dec
sub
imul
arpl
add
dec
fsubl
jno
addr16
out
add
jg
out
pop
pop
push
jle
add
adc
fdivr
mov
rclb
in
cmp
cltd
jmp
mov
dec
xchg
es
aad
xchg
adc
sbb
repnz
pop
mov
mov
bound
mov
sbb
fisubl
orb
or
lcall
ror
incl
or
cli
dec
or
in
test
dec
cmp
sbb
shlb
sub
adc
and
or
mov
test
dec
inc
sbb
cs
jae
and
push
in
ret
mov
add
xchg
scas
cmp
dec
imul
jl
das
cld
in
rorb
les
sub
pop
clc
adc
leave
sub
mov
scas
dec
clc
outsl
into
mov
push
fcmovnbe
test
sbb
lock
lock
repnz
or
in
fwait
sbb
das
xlat
xchg
push
dec
aad
cmc
mov
push
add
pop
fwait
test
imul
test
cmpsb
push
cmp
xor
inc
cld
popf
in
cmp
in
push
jge
rclb
push
aas
add
sub
jecxz
add
lea
imull
jne
addr16
cmpsb
cmpsl
lcall
xchg
decb
popa
sbb
inc
sub
mov
push
xchg
jne
rol
pop
insb
adc
push
mov
fcoms
int3
jb
jnp
xchg
js
adc
or
cmpsb
iret
add
stc
sub
sbb
cs
mov
test
pop
leave
add
imull
fwait
push
movsb
out
push
mov
lret
mulb
movsl
call
jnp
inc
imul
push
mov
xor
xor
sub
jmp
push
fs
hlt
fs
call
movsb
inc
mov
adc
mov
or
xchg
insl
add
mov
cmpsb
jmp
sub
xchg
jl
xchg
sti
mov
add
push
ret
push
movsl
ljmp
or
seto
fs
mov
xor
fbstp
or
lock
or
jle
ss
pop
dec
lcall
loope
pop
pop
mov
mov
bswap
sub
fnstsw
gs
cmc
lahf
push
cmp
bound
sarb
or
lahf
add
ds
or
sti
shl
testl
sub
fcmovnb
ljmp
imul
clc
roll
jb
cmpl
pop
adc
sbb
lahf
mov
xchg
cmp
jmp
nop
and
xorb
lock
pop
xor
lret
mov
xchg
arpl
lret
pop
loope
and
fistpl
mov
shrl
sbb
loop
mov
mov
mov
mov
cmp
and
pop
idiv
mov
pushf
mov
push
add
mov
rorl
push
fnstenv
clc
rcr
cmp
xchg
movb
filds
enter
sbb
inc
sub
sub
cmp
xchg
and
jp
lods
mov
dec
sbb
push
rol
js
out
jp
imul
mov
insl
lods
pop
pop
adcb
mov
or
lahf
mov
mov
pusha
not
out
or
repz
sti
fbstp
prefetcht1
jl
ficoms
and
cli
add
int3
xor
mov
xchg
aaa
scas
xchg
test
fdiv
stos
icebp
aas
je
sbb
push
lret
mov
cmpsb
or
xchg
sbb
loope
jmp
jmp
pop
mov
inc
push
inc
out
jbe
repz
sarl
inc
cs
cmp
ret
and
andl
test
jbe
mov
xchg
jbe
scas
ffree
inc
add
sub
cmp
add
and
jnp
loopne
std
add
or
cmp
scas
divl
mov
sti
aas
into
inc
fwait
bound
imul
cmpsl
inc
cltd
and
mov
add
jecxz
mov
fxtract
ret
dec
aad
mov
dec
jl
mov
cmp
pop
call
aad
push
adc
jns
sub
outsl
inc
push
or
push
xchg
jge
sbb
and
enter
clc
mov
add
out
fists
push
or
mov
mov
pop
stos
jae
mov
rcll
outsl
ljmp
repz
dec
xchg
mov
cs
or
and
divb
cltd
mov
inc
outsl
loop
rorl
and
lret
fdiv
pop
movb
sub
pop
std
enter
pop
mov
adc
jno
std
dec
cmp
xchg
mov
add
mov
ljmp
xor
mov
and
inc
into
or
xor
sub
lods
out
ljmp
mov
test
aam
ljmp
enter
cmp
mov
or
mov
roll
decl
dec
mov
rclb
mov
cli
outsl
cmp
cmp
dec
icebp
gs
es
test
xor
jmp
cli
sbb
pop
leave
xchg
subb
sbb
mov
prefetcht1
sbb
add
xor
fidivrs
mov
jmp
bound
mov
mov
test
rcll
cmpsl
mov
js
pop
pop
frstor
mov
inc
push
push
popa
mov
jbe
decl
lahf
mov
cmp
dec
mov
insb
loopne
pop
ret
or
xor
movsl
mov
sub
push
out
das
jbe
loope
shl
inc
sahf
aam
bound
jmp
lret
xchg
out
xor
andl
mov
or
mov
pop
sar
popf
add
and
xchg
roll
sub
loop
adc
push
push
mov
sub
inc
roll
xor
and
out
loopne
or
inc
in
test
or
or
mov
scas
int3
je
xchg
clc
add
xlat
push
int3
clc
pop
inc
add
xchg
cmp
hlt
ss
pop
bound
aaa
or
cs
mov
or
sub
and
jno
loope
fdivr
sbb
sub
dec
adc
xor
push
mov
adc
pop
in
or
jbe
inc
sahf
sub
cli
mov
xor
insb
add
ss
mov
loop
test
out
aad
je
loopne
inc
and
mov
call
insl
rcl
push
lea
jmp
and
mov
movsl
pop
jge
push
xlat
xor
mov
shlb
mov
insb
xchg
hlt
call
ret
or
sbb
out
push
jle
xchg
nop
mov
aas
leave
fdivrl
nop
sub
mov
test
sbbb
fdivl
sbb
inc
jg
mov
or
addb
arpl
clc
das
and
cmp
inc
clc
aad
inc
loope
xor
dec
out
cmp
iret
mov
popa
adc
jmp
adc
stc
pop
push
in
rorl
and
js
xchg
xor
hlt
das
xchg
mov
movsb
add
push
dec
sti
or
xlat
inc
insl
push
mov
push
loope
xchg
pop
es
mov
cmc
jne
mov
mov
mov
lea
push
into
mov
ret
inc
sbb
push
rcll
xchg
sbb
jp
sub
mov
sub
loop
sarb
inc
outsb
in
add
rol
decl
lock
pop
xchg
xchg
pop
or
rcll
mov
jb
rorb
cmp
mov
push
cmp
mov
or
test
imul
mov
push
dec
jge
inc
sti
clc
nop
mov
aam
lock
test
inc
xchg
xchg
mov
and
sub
lcall
fidivs
ret
sbb
xor
cmpsb
das
bound
adc
xor
mov
and
sbb
mov
sbb
js
pop
pop
cs
jle
dec
hlt
mov
jno
xchg
jno
lock
out
dec
jb
jecxz,pt
aam
mov
nop
mov
punpckhwd
xchg
mov
out
dec
cs
pop
cmc
cltd
ljmp
ds
and
mov
out
inc
call
int3
adc
das
aaa
rcrb
lcall
std
scas
mov
mov
cmp
lcall
lds
push
mov
push
sub
push
negb
adc
je
sarl
jb
leave
dec
fstpt
ja
dec
add
bound
dec
add
decb
cmpsb
adc
test
je
outsb
iret
mov
fcomps
fidivrs
pusha
in
cmc
inc
rcrb
or
cmp
adc
mov
xorl
inc
cmp
insb
das
push
inc
mov
mov
cwtl
add
aad
lods
popa
in
sbb
lcall
pushl
idiv
inc
xor
xlat
shlb
loop
fists
repz
iret
test
dec
inc
and
add
jb
lea
pusha
jge
jo
sub
in
ljmp
xchg
mov
push
bound
push
ds
test
cmp
imul
scas
mov
mov
and
push
dec
inc
js
and
or
stos
cmc
sbb
leave
jle
and
insb
insb
roll
pop
scas
mov
lods
mov
inc
push
adc
mov
out
push
out
inc
xlat
dec
fldt
jg
xchg
repz
rol
in
stos
push
inc
dec
jno
ds
shl
jge
dec
rolb
shll
ja
dec
popf
ret
iret
mov
andl
xchg
jp
insl
inc
stc
pusha
mov
cmc
mov
ret
test
outsl
addr16
movsl
cmp
loopne
jns
inc
add
shll
xor
mov
pop
lds
test
push
loope
dec
fsubl
stos
mov
fsubrs
mov
inc
push
mov
loope
sub
shr
mov
aas
and
add
int3
test
pop
or
lods
cmp
mov
push
pop
stos
xchg
insb
cmpb
and
clc
ror
push
sbb
je
insl
jno
test
icebp
mov
aaa
arpl
icebp
shll
wbinvd
mov
xor
mov
jb
clc
inc
lock
xor
push
sbb
dec
in
push
fsubp
cs
shrb
out
out
mov
lods
sub
cmp
push
lea
xchg
sub
jo
dec
pusha
int3
xchg
push
sbb
xor
dec
push
cli
inc
movsb
ret
jle
sub
xor
iret
adc
aad
inc
out
or
mov
xchg
inc
fs
mov
lret
insl
movsb
subl
add
fistl
scas
xchg
std
mov
mov
xchg
jno
pop
test
call
nop
repnz
jno
ljmp
movsl
je
cmp
and
js
mov
pop
mov
icebp
fiadds
or
imull
inc
out
and
cwtl
and
dec
jl
lea
push
repnz
mov
imul
outsl
xchg
add
insl
pop
movsl
or
scas
mov
mov
icebp
or
lahf
andb
xorb
sbbb
add
hlt
push
cld
int3
loopw
xchg
pop
test
negb
add
ljmp
sbbb
rcrb
xchg
movsb
and
std
imul
jo
repz
arpl
bound
aam
outsb
lcall
sub
ljmp
stos
out
jno
sbb
testb
or
pushf
sbb
ret
call
les
sbb
push
lretw
mov
outsl
pop
js
out
mov
mov
xchg
pop
push
call
test
jmp
and
cmp
imul
into
mov
test
insb
sar
stc
add
das
fcompl
sahf
add
mov
mov
sbb
xchg
das
icebp
testb
pop
add
lock
or
lods
sbb
insb
inc
push
or
sub
dec
rcll
loop
int3
mov
in
lcall
decl
aam
and
mov
fbld
in
dec
outsl
ja
sub
mov
das
dec
or
repnz
cmc
xchg
adc
loope
sub
sbb
scas
fcmovnu
lret
push
and
mov
loopne
mov
iret
push
push
sbb
fldt
mov
and
icebp
jg
outsl
push
push
adc
clc
leave
cmpsl
push
lods
cmpsb
sub
loop
loopne
jecxz
adc
push
inc
and
mov
sub
xlat
shld
and
enter
std
mov
fdivs
sarb
jne
push
stos
es
in
and
in
gs
mov
daa
leave
ret
roll
pushf
push
jp
push
mov
fimull
cmp
rcrl
orl
mov
sarl
and
or
xor
and
sub
inc
xor
fdivl
popf
mov
lahf
adc
xlat
lahf
mov
gs
int3
mov
jecxz
aam
fisubrs
data16
jbe
dec
ds
stos
lahf
xchg
jae
hlt
test
sub
sahf
sahf
insl
cmp
popf
setno
das
cld
pop
ret
fs
fwait
ret
xchg
xchg
in
or
fcoml
jne
int3
add
xor
insb
lahf
test
sti
lds
cmpl
mov
fs
mov
out
push
fdivrs
divl
dec
subl
orb
cwtl
loop
mov
into
and
sbb
mov
inc
inc
mov
mov
fistpll
and
and
xchg
mov
mov
movsl
cli
test
and
xor
push
je
je
cmp
and
pop
mov
inc
dec
push
int3
xor
sub
ss
mov
jo
and
sub
fldt
push
ja
or
adc
lahf
stos
pop
sbb
push
cmp
dec
and
popa
sti
test
je
out
sbb
stos
insl
popa
jmp
push
sub
mov
ja
cmc
mov
and
cmc
data16
xor
jns
sbb
test
scas
inc
push
addl
jbe
test
add
rclb
lfs
jecxz
pop
and
sahf
dec
sub
mov
mov
in
pop
xor
push
andl
xor
pop
pushf
cmp
mov
stos
jecxz
push
push
bnd
push
fldt
cmp
fnsave
mov
mov
xor
xchg
aaa
xor
aaa
sbb
or
scas
xchg
jmp
sbb
pop
mov
fidivrl
jne
mov
ds
cmp
jbe
pop
imul
mov
xor
aas
fstpl
mov
bsr
sub
and
jl
lds
push
add
jl
inc
pop
pop
push
icebp
mov
mov
das
ss
cmp
xchg
call
or
adc
leave
dec
pop
push
outsb
shrl
or
jbe
hlt
ljmp
xchg
mov
push
jb
mov
test
sbb
pop
mov
mov
inc
inc
push
jo
mov
mov
inc
lret
jmp
pop
push
mov
mov
movsl
dec
lds
imul
ret
inc
sbb
js
test
xchg
lods
inc
cltd
xor
shrb
leave
pop
loopne
sbbl
fstpl
lds
outsl
sub
in
pop
jno
popf
scas
add
fildl
xor
test
dec
mov
xchg
std
ret
adc
jbe
adc
and
pop
lahf
int3
mov
mov
pop
add
jle
jle
inc
mov
jne
adc
cltd
sbb
mov
or
or
bound
xor
ficoml
sbb
adcl
arpl
or
hlt
jmp
lret
push
js
scas
int
fldenv
and
add
mov
sti
bound
flds
das
cld
jmp
or
rol
insl
pop
xor
dec
dec
xorl
jle
sahf
push
insb
insb
shrl
jmp
mov
fdivrl
cmc
out
cmpl
aas
rcll
leave
fs
incl
in
sbbl
xchg
stos
sbbl
mov
and
and
and
adc
inc
nop
cmp
mulb
jbe
jmp
stc
jno
cld
jg
sbb
shll
or
and
call
repnz
aad
dec
aas
lcall
add
data16
xor
jae
xor
adcl
mov
mov
and
and
jl
sbb
mov
xchg
arpl
push
insw
pop
add
xchg
add
or
addl
inc
cwtl
loope
in
ret
xchg
inc
test
lcall
pop
clc
leave
mov
xor
sub
inc
inc
push
pop
mull
lock
mov
notb
fisubl
movl
insl
jecxz
cmp
mov
mov
lds
mov
repnz
sbb
dec
pop
pop
push
cmpsb
pop
inc
stos
clc
testl
repz
jae
in
push
xor
push
mov
xchg
push
and
test
lods
popa
repz
test
lahf
inc
out
fs
sbb
mov
or
movb
sbb
sbb
dec
mov
pop
push
das
mov
inc
daa
pop
mov
pop
pop
outsb
or
js
mov
mov
inc
push
cs
xor
fstpt
cld
fldt
pop
push
inc
push
pusha
mov
gs
push
gs
in
aas
pushf
enter
sarl
sbb
pushf
dec
mov
in
stc
mov
mov
mov
call
pop
jne
loop
push
sub
or
sarl
jecxz
sti
sahf
out
daa
lahf
nop
jne
out
xchg
inc
mov
pop
aaa
sbb
or
push
imul
xchg
adcb
jb
mov
add
aas
xor
adc
jg
fbld
sbb
or
sub
shrb
push
inc
out
mov
insb
inc
pushf
fcomps
jns
sub
ret
sub
out
sbb
mov
jb
xor
in
test
ret
pop
out
test
push
call
xor
sub
push
mov
inc
mov
sbb
pop
pusha
arpl
mov
xor
mov
cld
sub
xor
lock
in
mov
sbb
cmp
sbb
cwtl
inc
inc
mov
xchg
lods
push
jl
add
int
sahf
xchg
push
gs
push
out
imul
xor
pusha
adc
scas
lods
adc
push
push
insl
sub
push
shlb
or
loop
scas
pusha
add
dec
mov
scas
mov
scas
fistpll
mov
std
fnsave
jo
xchg
aad
pop
lea
lods
in
sahf
int3
or
and
rol
idivb
mov
repnz
mov
sbb
scas
push
pop
jp
arpl
orb
pop
lods
xor
aas
shll
pop
lock
jo
arpl
inc
rcrb
mov
mov
in
sub
call
jne
push
sub
dec
shll
arpl
mov
add
mov
clc
sbb
cmp
movsb
mov
inc
jmp
push
xchg
orb
add
aas
rcrl
test
mov
mov
and
xchg
inc
insl
or
dec
pop
xacquire
add
sarl
bound
int
cld
inc
mov
sbb
mov
add
dec
mov
rorl
sub
ret
inc
daa
sarl
and
cmc
fisttps
jbe
outsb
push
sarl
sbb
ret
mov
dec
cs
movl
call
push
add
dec
loop
mov
in
jge
sbb
inc
jae
call
sub
add
fsubr
hlt
xor
sbb
mov
push
es
pop
mov
dec
xchg
sbb
mov
loopne,pn
fstp
jmp
jbe
orb
mov
fmuls
je
out
and
and
mov
pop
mov
jmp
fists
pop
and
adc
add
stos
cmp
ret
add
test
in
push
popa
ljmp
push
mov
and
mov
sbb
repz
mov
int3
jle
sub
or
cmp
adc
aas
sar
sti
scas
mov
xchg
xchg
incl
jg
cmp
cwtl
inc
out
insb
test
aaa
test
inc
pop
jecxz
inc
je
pop
ljmp
sub
aad
jno
mov
xorb
jae
into
dec
sub
cld
pop
in
dec
repz
aam
mov
mov
cltd
dec
adc
xor
stc
mov
adcb
pop
icebp
jp
xchg
jl
adc
call
inc
push
dec
push
inc
mov
pop
push
mov
xor
hlt
sub
xor
pop
cmpl
sub
loope
ds
xchg
movsl
mov
test
or
mov
fisubl
fucom
lods
sarl
aas
pop
push
sbb
mul
xor
xor
sbb
popa
sbb
adc
adc
stos
js
cmp
add
cwtl
int
xor
inc
add
xchg
shrl
mov
and
icebp
jns
je
jo
ret
mov
dec
or
das
movsb
loope
sbb
adc
mov
cmp
add
cld
dec
xchg
xchg
mov
cmp
push
lret
jmp
xor
rorl
shrb
out
stos
mov
inc
jo
sub
push
push
push
fdivl
lret
sub
aas
inc
sbb
push
movsl
sub
lds
fstpt
pop
jge
test
sbb
ss
pushl
jle
push
jns
stc
std
fimull
jbe
and
enter
sub
mov
dec
outsl
pusha
cmp
pop
faddl
outsl
mov
and
push
dec
sbb
lods
movsl
notl
sub
or
outsb
fcmovne
inc
popa
popf
dec
jbe
ficomps
push
mov
popf
in
add
cmp
fcmovbe
jg
jno
and
mov
mov
sbb
dec
pop
xor
ja
loopne
mov
cmp
sti
call
rorb
cmp
inc
shr
fiadds
fisttps
test
sbb
loopne
sbb
xor
sub
ja
cli
sub
fildl
xchg
sub
pop
jno
mov
les
idiv
pop
pop
xlat
insl
mov
cmp
push
in
sahf
push
clc
movl
or
mov
mov
fs
push
jo
popf
adc
mov
fs
or
addl
ljmp
sbb
pusha
cmc
sbb
pop
sbb
jo
cli
cltd
les
inc
loopne
stos
dec
insb
fildl
xlat
xor
cmp
mov
mov
mov
aad
xchg
rorl
jnp
and
outsl
jge
jle
stos
cmp
mov
xor
ja
test
pop
insl
std
fnsave
and
jno
sahf
jmp
dec
mov
outsb
push
push
mov
in
or
xor
and
sbb
into
das
xchg
or
xor
push
out
cli
or
add
shlb
aam
sbb
cmp
ds
test
sub
dec
clc
mov
mov
popf
loopne
jp
ret
aaa
inc
push
jle
and
sti
negl
pop
cmp
sub
clc
jne
ss
adc
dec
jp
popa
popa
loop
pop
lock
push
popf
sbb
mov
inc
push
mov
xlat
adc
jle
mov
div
outsl
inc
and
js
int
push
scas
loope
inc
pusha
push
inc
movsb
dec
adc
mov
xor
dec
fchs
out
mov
pop
mov
fwait
loop
aam
xchg
jo
add
mov
push
pop
push
cmp
jmp
dec
aaa
and
stos
or
pushf
aad
sbb
push
call
shll
call
outsl
fwait
mov
outsb
mov
cmpsb
js
dec
cld
lcall
lods
push
sbb
mov
cmp
mov
sub
xor
pop
jbe
inc
mov
cmpsb
mov
sbb
mov
lcall
leave
pop
fisubl
pop
sub
mov
andb
adc
xor
dec
xor
xor
gs
inc
inc
insl
in
sbb
gs
outsl
sbb
test
cmp
add
aas
cmp
adc
pop
adc
jecxz
fisubrl
xor
xor
sbb
cli
aad
jmp
jbe
into
addb
mov
stos
xchg
sarl
mov
sub
or
loopne
in
lea
in
xlat
int
pop
push
cmpsl
lea
mov
xchg
loopne
shrl
add
fidivl
mov
jo
xchg
in
fwait
mov
imul
add
push
sbb
xchg
mov
adc
lea
add
sub
xchg
or
add
mov
ficoml
adc
daa
or
scas
sub
pop
jo
scas
aad
test
or
in
nop
mov
loope
popf
cmp
sub
cmc
loope
dec
mov
inc
loopne
mov
stos
mov
test
pop
pop
fadd
std
lods
cmp
mov
sbb
pop
hlt
jmp
pop
inc
pop
in
mov
int3
dec
mov
pop
dec
sarl
sub
call
xor
das
fwait
dec
loop
jo
jo
out
adc
add
js
lea
and
add
sar
insl
add
insl
mov
add
push
mov
fidivl
loope
adc
push
andl
scas
jl
jo
daa
arpl
outsl
xor
dec
dec
es
rcrl
clc
jbe
cs
inc
loope
mov
fcmovnu
xchg
mov
adc
orb
rcl
lahf
add
mov
sbb
lea
pushf
orb
cmp
mov
fbstp
rolb
xor
xor
leave
daa
loop
addl
mov
outsb
mov
push
adc
push
or
es
push
xchg
daa
pop
cmp
add
cmpsl
clc
test
xchg
ret
scas
movsl
imul
incl
mov
sub
mov
mov
mov
adc
ret
sbbl
mov
fstl
aam
fwait
inc
dec
je
dec
add
sbb
lea
in
mov
push
dec
sbb
add
jbe
mov
inc
ret
add
gs
icebp
push
and
cmp
lret
xchg
cli
adc
push
mov
and
iret
mov
cmp
shll
testl
imull
lcall
mov
repnz
add
popa
pushf
adc
xchg
cmpb
push
out
or
data16
xchg
jp
movsl
addr16
loope
add
push
sti
cmpb
xchg
mov
adc
cmp
jne
inc
jmp
fisttpl
cwtl
fcoms
test
pop
mov
pop
pusha
add
push
pop
cld
frstor
aam
lretw
outsl
pusha
arpl
and
orb
push
cmp
or
dec
pop
pop
call
adcl
mov
mov
repz
or
sub
mov
fisttps
inc
inc
add
adc
add
frstor
loope
test
xor
and
push
mov
push
jl
stos
sbb
xor
popl
in
or
push
push
mov
lahf
xor
xor
push
ja
cmp
or
loopne
lcall
jmp
testb
lock
xor
fisubrl
jb
lods
cmp
inc
and
cmp
sbb
sti
xor
out
push
xor
push
dec
sbb
fldt
add
cld
lea
lahf
fildl
jbe
daa
stc
push
test
sub
data16
dec
pusha
cmc
call
imul
std
bound
les
mov
jns
fadd
xor
or
mov
push
rcr
repnz
loopne
sbb
ljmp
inc
push
je
out
cmp
sbb
adc
xorb
pop
int3
test
xchg
stos
mov
cmp
push
xadd
cmc
xchg
lahf
jmp
lds
ficompl
adc
out
rorb
mov
mov
pop
and
shll
mov
inc
xlat
ret
sbb
out
xor
bound
or
pusha
daa
int
popf
mov
adc
nop
test
dec
adc
pop
xchg
xor
push
ljmp
sbb
lods
mov
mov
outsl
jb
mov
test
loopne
mov
fldl
repnz
jl
or
test
cmp
cmp
int
loop
inc
sbb
sbb
imul
push
andb
mov
sahf
cmp
insb
mov
mov
popf
dec
push
cmc
pop
fsubrs
or
mov
cmp
mov
xchg
fs
dec
subl
int3
cmpb
lret
ss
pop
in
pop
xlat
insl
repz
pop
pusha
sbb
xor
lock
jmp
idivb
aam
dec
inc
push
jns
push
mov
lods
jmp
mov
push
cmpsb
sub
adc
sbb
nop
stos
sub
jmp
jge
jmp
jmp
ds
ret
jle
test
pushaw
push
dec
pushf
or
inc
cmp
xchg
sbb
pop
or
into
xchg
push
xchg
or
out
add
fstps
test
daa
gs
sub
rcrb
idivl
mov
jo
ret
je
outsb
or
pop
sub
das
stos
push
cmp
dec
rcrb
loope
ljmp
sbb
cli
pusha
mov
addl
popf
add
xor
inc
xlat
hlt
xchg
out
xlat
jge
mov
mov
adc
pop
popl
inc
popa
aas
add
jle
or
cld
pop
cwtl
cmpsb
test
jno
mov
push
cmc
insl
in
mov
ficoms
inc
adc
and
dec
jne
lahf
stos
mov
lds
cmc
mov
bound
out
ljmp
and
cltd
repz
mov
shr
nop
ljmp
cmp
and
jp
mov
xchg
xor
push
pushf
xor
mov
inc
loop
jl
in
mov
push
cmp
nop
subb
orb
in
push
hlt
cs
add
push
mov
pop
or
sub
adc
jg
lods
out
push
leave
xchg
cmp
pop
js
dec
fcmovnb
imul
lea
shld
test
lret
sub
push
sub
dec
xchg
pop
inc
add
push
pop
lock
cltd
daa
jno
out
cmp
fisttpll
xchg
addr16
mov
aas
push
je
lds
lsl
mov
jne
jno
iret
movsb
aam
pushf
mov
int
into
mov
shlb
or
inc
dec
add
push
mov
or
or
nop
pushf
aas
pusha
mov
add
push
in
lds
repnz
iret
push
cmc
add
push
sbb
rclb
dec
push
cwtl
xor
mov
push
pop
movsb
loopne
and
aaa
dec
cmpsl
sub
clc
pop
mov
imul
and
cmp
insl
in
nop
xor
and
mov
or
bound
cld
sbb
add
out
addl
les
sub
fwait
dec
pop
loop
lods
and
inc
test
xchg
sbb
sbb
or
arpl
pop
xor
add
cmc
inc
jne
adc
sarl
mov
jp
loope
icebp
test
outsb
lcall
notb
flds
cld
lcall
mov
out
and
or
fcoms
test
rcrb
out
adc
xchg
shl
push
cmpsl
xchg
cltd
sahf
xchg
sar
loop
cmp
jno
loopne
shll
dec
sub
mov
pop
mov
negl
pusha
cs
test
loopne
xchg
pusha
movsb
add
sarb
push
adc
iret
sub
lahf
lods
inc
test
orb
jmp
sbb
in
sub
in
jle
cmc
shll
sbb
cmp
popa
inc
push
push
imul
push
jl
jge
mov
push
xchg
lock
insb
mov
cmp
cli
and
xchg
push
fisubrl
or
mov
cmpsb
lods
cmp
pusha
in
bound
xchg
push
aad
inc
hlt
and
jae
inc
jge
adc
fisttpll
aas
push
int
push
fdivrs
mov
pushf
iret
sbb
filds
dec
add
sbb
je
jnp
mov
testb
call
ffreep
or
loopne
idivl
pop
out
adc
movsb
loop
jge
in
push
and
outsl
stos
jne
jp
les
inc
xchg
pushf
out
stc
jg
pushf
jle
cmp
sub
jmp
pop
xor
out
sbb
push
fwait
ljmp
mov
sbb
add
jl
pusha
mov
inc
inc
or
pop
cmp
icebp
sbb
hlt
mov
add
std
pop
jecxz
sbb
or
sub
xor
xchg
mov
mov
daa
repnz
pushf
sahf
dec
xchg
jne
ja
stos
pop
ljmp
popa
push
rorb
aad
mov
add
mov
imul
inc
loop
inc
std
jmp
mov
gs
mov
jg
xorl
sub
push
jnp
push
jb
add
lods
mov
loope
adcl
and
popf
dec
into
fldcw
jbe
fmuls
sbb
mov
ret
jge
fildl
push
push
mov
mov
incb
adc
pop
scas
imul
push
adc
sbb
mov
mov
mov
je
clc
and
sub
mov
push
in
push
ret
add
xchg
and
insb
sub
cmp
in
xchg
or
icebp
mov
xchg
or
popf
fists
flds
push
xor
clc
repnz
cld
das
xchg
push
xlat
push
mov
cmp
test
cmp
fadds
movsb
and
incl
das
push
jmp
and
dec
add
clc
call
sbb
push
data16
dec
pop
add
daa
js
rcrl
pop
sub
fldl
dec
je
pop
fildll
outsb
cmp
and
jg
lahf
rcrl
sbb
sbb
aad
daa
faddl
sub
push
movsb
add
add
push
test
loope
push
xchg
inc
cld
popa
in
jmp
xor
mov
mov
clc
sbb
mov
stos
and
scas
jb
movsl
jnp
xor
fwait
das
mov
leave
or
mov
lcall
popa
push
add
xchg
iret
push
xchg
jg
pusha
mov
test
fwait
xchg
cwtl
push
and
jne
movsl
daa
push
xchg
sar
icebp
imul
xchg
push
das
es
sti
inc
mov
or
cmp
adc
or
xchg
dec
sar
mov
les
les
or
mov
xor
and
mov
call
fldl
cli
test
stc
pop
cld
shr
loopne
adc
add
aaa
lea
mov
in
dec
mov
adcl
fldenv
mov
cmpsb
inc
mov
fcmovnb
test
in
roll
mov
lea
xchg
and
add
lea
movsl
and
or
pop
movsb
arpl
or
ss
movsl
in
xor
and
pop
add
jg
jle
sub
push
jmp
test
sbb
sub
pusha
push
ficoml
mov
insl
inc
mov
pop
rclb
pop
fbstp
inc
mov
aaa
push
loope
fwait
mov
clc
les
sbb
sbb
fwait
jp
lock
sti
xor
mov
or
enter
lcall
stc
adc
stos
adc
icebp
xchg
sub
dec
stos
loope
push
mov
push
mov
mov
test
fwait
sahf
fimuls
inc
sarb
jns
fwait
xlat
test
pop
cmpsl
jne
sbb
loopne
lahf
dec
dec
xchg
cs
xor
mov
je
add
sbb
mov
mov
mov
xchg
pop
mov
mov
inc
scas
scas
pop
mov
mov
loopne
or
fs
sahf
cmp
pop
cmp
add
dec
test
fdivrs
aas
std
mov
rcl
mov
jp
insl
test
adc
pop
shll
fisttpll
push
fiadds
mov
jno
cltd
xchg
sub
pop
xlat
add
shl
xchg
rorb
cmp
pop
ror
fmulp
movsl
stos
mov
out
repz
xor
arpl
pushf
repnz
xlat
or
mov
jle
fdivl
movsl
mov
mov
shlb
or
adc
fadds
outsl
dec
mov
pop
outsb
out
xchg
mov
mov
loopne
out
stos
std
aaa
dec
sub
add
jmp
insb
lock
xchg
dec
add
scas
fcmovnbe
pop
mov
aaa
and
in
inc
mov
jg
and
adc
mov
sub
jne
and
ret
cmpl
test
clc
mov
mov
mov
sub
fcomi
imul
ret
pop
test
push
ljmp
mov
icebp
cmp
cltd
adc
cmp
dec
icebp
js
popa
sub
out
sahf
push
mov
xchg
lea
lock
pop
icebp
outsb
mov
ljmp
xor
subl
jmp
mov
sbbb
adc
mov
push
ljmp
dec
adc
stos
mov
cld
cmp
das
test
pop
xchg
stos
mov
add
mov
or
scas
movsb
sub
sbb
or
div
pop
js
jmp
xchg
mov
aam
mov
jge
js
jl
pop
xchg
ret
mov
add
ss
in
push
ss
subl
or
mov
clc
mov
mov
sbb
fsubl
imul
imul
lcall
mov
imul
pop
js
jo
mov
int3
pop
mov
cmp
cmp
ret
mov
dec
ficoml
mov
xchg
add
addb
je
mov
xlat
fwait
ja
adc
sbb
or
cmpsl
in
dec
mov
fidivrs
ret
dec
sbb
ljmp
fistpll
sbb
je
movsb
pop
fucomi
xchg
andl
jg
push
push
push
mov
lea
fcmovnu
inc
xchg
adc
popf
ds
repnz
push
addr16
mov
mov
sub
inc
or
popa
stos
ficompl
and
jge
mov
push
or
js
xor
cmpsb
xchg
sti
pop
call
dec
dec
and
pop
xor
call
popa
les
xchg
ss
adc
jmp
dec
les
xchg
pop
jb
push
xchg
cld
or
jg
adc
push
test
rolb
cmp
shrb
test
inc
outsb
aad
sub
push
push
sti
adcl
or
fbstp
or
fsubrs
or
adc
mov
into
test
add
or
mov
inc
out
dec
sti
scas
loop
scas
aaa
mov
xor
sbb
fistl
jne
mov
push
add
fwait
mov
mov
mov
test
xor
mov
fmuls
mov
incl
mov
iret
xchg
leave
fdivl
hlt
outsl
call
inc
cmp
pop
push
and
xor
mov
int
ror
ja
lods
adc
sbb
fsubs
and
iret
xchg
adc
inc
cli
mov
lea
push
pop
in
jae
in
and
stos
ljmp
mov
adc
jbe
addl
dec
sbb
jns
dec
mov
cmp
cld
add
adc
mov
loope
mov
enter
clc
mov
mov
jmp
stc
or
mov
mov
mov
xchg
dec
outsl
imul
adc
mov
leave
xchg
cmpsl
mov
fisttpl
push
imul
stc
mov
fwait
adc
sahf
push
adc
cmp
ret
rolb
cmp
test
xchg
inc
and
cmpb
test
cmp
ljmp
outsl
mov
filds
rolb
shll
lock
lcall
enter
les
dec
add
mov
dec
mov
leave
ret
repnz
mov
sub
inc
push
rolb
jae
add
mov
scas
rcrl
ret
push
pushl
lea
cmp
outsb
negl
mov
push
sub
dec
jg
dec
inc
out
jbe
cmp
insb
inc
outsl
fbstp
dec
popa
jb
add
jae
inc
nop
mov
or
mov
in
mov
xor
push
ljmp
inc
adcb
jbe
add
ss
add
pusha
cmpsb
icebp
push
mov
test
inc
add
add
cmp
push
push
inc
jb
lahf
addr16
push
mov
outsl
ja
mov
inc
pop
imul
dec
fs
enter
fisubl
xor
xor
and
adc
or
je
add
adcl
add
ds
ficoms
and
imul
test
pop
fwait
mov
add
and
pandn
jmp
rcrb
loop
fnstenv
dec
pop
dec
push
mov
fildll
add
pop
jne
inc
push
dec
sbb
add
mov
scas
lock
jne
push
lret
pop
fisubl
fadds
sbb
cmp
fcmovne
cmc
mov
gs
jno
fstpl
jg
sub
inc
movb
insl
mov
je
cmp
add
cld
jge
cld
and
ret
insl
inc
fimull
pop
mov
imul
rclb
lea
hlt
dec
je
inc
push
pop
dec
xchg
in
stc
ja
mov
mov
ret
jb
imul
popa
dec
js
clc
movb
pop
lret
mov
enter
jae
xchg
xchg
daa
push
jb
mov
or
dec
es
mov
insl
pop
lods
mov
inc
sbb
add
jo
ffreep
fwait
sti
call
mov
popa
dec
out
sti
shl
neg
mov
sub
xorb
xor
decb
pop
xor
dec
ret
sbb
inc
and
jbe
stos
inc
inc
pop
insb
outsb
mov
lret
aas
xorb
mov
sbb
add
popa
push
inc
and
lret
dec
addr16
dec
inc
jmp
je
ja
fidivrs
dec
js
dec
inc
call
pop
cmp
mov
jne
fisttpl
inc
ja
mov
push
dec
jne
in
ret
repz
adc
outsl
mov
inc
ss
cwtl
add
lea
ljmp
mov
rcr
icebp
inc
imul
sbb
inc
dec
mov
lods
fadds
xchg
enter
mov
inc
test
mov
mov
pop
sub
adc
xlat
imul
sbb
add
jno
insl
sub
leave
out
adc
popf
add
push
xor
jmp
cmp
je
mov
dec
addr16
movsb
sbb
pop
sub
jbe
sub
rcr
in
outsl
mov
gs
outsl
mov
pop
push
pop
imul
push
loop
jno
fldlg2
pop
popa
imul
xchg
and
inc
push
lods
ret
inc
sub
ljmp
lea
or
inc
fdivp
in
in
push
addb
cli
jmp
lret
mov
les
inc
sbb
outsl
inc
cmp
or
fisubrs
cmp
icebp
push
jmp
lock
or
xchg
push
mov
mov
popa
dec
mov
xchg
push
push
pop
scas
out
pop
dec
lcall
sub
lds
push
jecxz
ss
outsl
cmp
fs
dec
push
inc
jns
inc
cmp
push
add
jge
mov
sti
ret
mov
fwait
xchg
inc
jns
dec
fs
mov
in
push
shll
jae
addr16
xchg
xchg
imul
pop
repnz
clc
jecxz
int
or
call
xchg
imul
ss
dec
popf
mov
outsb
push
add
mov
adc
sarl
xor
push
pop
xlat
jne
inc
out
push
fs
shll
or
pop
xchg
lahf
aad
cld
add
add
js
push
jle
js
jbe
xchg
cmc
push
mov
inc
push
or
sbb
ljmp
outsl
dec
mov
mov
push
ja
addps
jp
mov
push
insb
outsb
mov
jno
xor
aad
fistps
dec
jae
push
in
inc
dec
sub
pop
js
insl
push
mov
xor
popf
cmc
divb
cmpsl
icebp
inc
push
imul
pop
call
inc
cmp
fsubrl
mov
dec
push
insb
jge
popf
js
pop
aam
incb
clc
xlat
xor
sahf
xchg
fwait
stos
push
xor
xlat
loopne
fs
cs
lret
roll
ret
pusha
jmp
dec
or
jae
xchg
sbb
aas
sbb
js
inc
xorb
xchg
or
mov
dec
sub
dec
fistpll
push
mov
pop
aaa
inc
dec
addr16
in
data16
pop
cli
dec
jp
or
cmpsl
mov
into
int3
ds
loopne
sti
testb
inc
inc
ja
xor
dec
inc
jo
sbb
pushf
jmp
add
bound
xlat
lds
adc
fmuls
sbb
pop
push
scas
out
mov
outsl
inc
inc
inc
inc
cwtl
jae
adc
cli
out
test
cmpsb
insl
ds
mov
ret
mov
inc
cltd
popa
ss
dec
insb
jne
jle
push
pop
xchg
xor
dec
pop
push
outsl
data16
fidivs
xor
ds
push
dec
push
or
rclb
jo
sbb
jbe
decb
mov
pop
addr16
bound
fdivl
mov
push
fmul
out
outsb
mov
inc
mov
xor
pop
add
clc
add
push
xor
out
mov
fildl
sahf
dec
insl
clc
adc
mov
call
clc
js
adc
add
ret
mov
in
pop
mov
inc
scas
lock
push
filds
repnz
sub
xorl
cmp
xchg
fildll
cmp
ja
in
cli
sub
clc
test
sbb
shlb
cli
dec
or
push
inc
and
or
jns
mov
pusha
addl
fstl
loope
jae
dec
xlat
shrl
insb
data16
push
adc
dec
cmc
fwait
cld
push
sahf
jl
pop
or
mov
aaa
outsb
insb
jl
jmp
dec
js
addl
ret
dec
mov
arpl
inc
repnz
outsl
push
mov
sub
xor
push
mov
imul
mov
cli
jbe
push
pop
jo
adc
cmp
jne
out
data16
jbe
jbe
fistpll
repnz
orl
dec
aaa
jne
lock
jg
jmp
push
push
dec
dec
out
mov
fwait
js
jp
sahf
cmp
jne
negl
outsb
pop
push
inc
mov
cmp
inc
add
mov
mov
inc
xor
inc
dec
push
je
sbb
out
dec
je
in
jbe
jmp
xor
js
dec
and
leave
ja
rcl
sub
sub
push
jle
xchg
mov
js
ret
or
ss
fbstp
mov
inc
pop
push
or
es
ds
jle
or
comiss
adc
xchg
mov
outsl
push
mov
out
js
jne
dec
mov
jge
sub
xor
dec
push
sbb
insl
insb
gs
leave
shrb
lret
inc
test
popf
shr
jne
add
push
hlt
xchg
outsl
sbb
push
sti
xor
test
sbb
arpl
lock
jmp
dec
dec
loop
adc
pop
mov
push
inc
push
in
in
fistps
repz
or
push
push
inc
sarb
pop
mov
add
mov
rcl
cld
pop
add
mov
loopne
ja
mov
cld
jmp
lea
add
push
add
jbe
js
pop
pop
jge
add
mov
push
inc
push
jbe
mov
and
dec
push
push
cmpsb
dec
dec
lret
movsl
movsl
testb
inc
push
inc
push
mov
sbb
outsl
ret
fistps
mov
cmpsb
sub
pushf
movsb
and
or
jmp
push
dec
inc
ret
mov
jne
data16
jp
add
fimuls
mov
fwait
and
outsb
insb
mov
inc
pop
repz
movsb
inc
mov
mov
dec
in
ja
inc
sarl
jo
ret
push
xchg
xchg
jecxz
adc
jbe
jmp
push
mov
ja
aam
xor
cmc
pop
cmp
inc
xor
divl
xor
dec
arpl
push
xor
fcmovnb
insl
mov
push
push
dec
push
mov
out
jae
jb
lahf
jno
pop
ret
inc
xor
inc
xchg
rolb
out
ja
ja
and
es
fidivs
add
aaa
mov
xchg
xlat
cmp
or
jns
pop
lret
cld
out
fisttps
inc
test
add
mov
adc
fiaddl
cmpsl
inc
adc
sbb
nop
test
xor
add
sbb
push
xor
xchg
fimuls
popa
popa
dec
xchg
subl
cwtl
jmp
fmull
js
inc
push
je
stos
push
xchg
les
lea
xchg
mov
sar
xchg
ret
or
punpckhbw
or
push
mov
iret
scas
out
push
push
inc
mov
inc
sbb
aaa
pushf
and
stos
mov
jb,pt
push
shlb
and
ds
pop
sub
notl
lret
inc
ja
jbe
stos
xchg
sub
ja
idivl
je
dec
dec
inc
push
fiaddl
push
xchg
adc
push
jp
jae
call
dec
xor
push
push
fs
mov
inc
mov
test
outsl
ljmp
push
xlat
ds
pushf
dec
inc
push
jae
js
in
jmp
popa
in
imul
lds
dec
lret
out
jl
jge
loopne
test
stc
fildl
outsl
imul
mov
xor
shlb
movsb
add
lock
fidivs
pop
ja
jbe
push
js
lahf
outsb
in
sahf
sbb
mov
lods
int
and
ds
dec
jo
dec
addr16
clc
mov
sub
cli
ficoml
dec
jno
testl
sbb
jbe
push
inc
aaa
or
icebp
shlb
fisubl
and
xchg
jb
pop
test
fcomip
lds
xchg
fsts
addr16
pop
cltd
lods
mov
movsl
pusha
inc
jne
xchg
aas
lock
repnz
pop
nop
push
mov
xor
adc
push
lods
dec
mov
pusha
test
loopne
outsl
gs
int
mov
data16
jbe
stos
outsl
ss
push
insl
mov
or
mov
inc
mov
push
jp
imul
adc
and
sub
jecxz
sbb
xor
mov
cld
mov
inc
push
popa
push
push
insl
fiaddl
adc
xchg
js
imul
push
pop
mov
xor
push
mov
lea
lahf
aad
lcall
ret
ljmp
sub
or
lods
cwtl
cli
or
je
sahf
movsb
add
arpl
pushl
sbb
test
cmp
pop
xorb
pop
lea
clc
mov
adc
push
leave
out
inc
xor
repz
cld
popa
push
addr16
mov
outsl
dec
cmpsb
mov
outsb
inc
push
jbe
inc
mov
int
dec
mov
mov
pop
cmp
bnd
pop
pop
jne
dec
aaa
mov
cwtl
std
into
xchg
jl
lahf
in
sub
jae
mov
push
jmp
inc
addr16
shl
mov
sti
jb
dec
je
dec
dec
sub
inc
pop
xor
data16
iret
movsl
orl
das
add
leave
ret
add
test
fsubs
call
outsl
test
in
les
sub
sbb
dec
xor
idivb
pop
popa
cmp
add
xor
aam
cmp
das
jne
bound
xor
push
dec
xlat
cmp
push
pop
adcb
shl
dec
cmp
inc
idivb
pushf
dec
adc
xchg
aam
aad
pop
js
hlt
push
push
std
jbe
jns
mov
cmpb
xor
adc
xor
inc
aas
mov
movsb
and
push
insb
sub
mov
insb
je
repnz
push
out
mov
lock
push
sub
lahf
daa
mov
sub
inc
push
jmp
jbe
lds
shr
jge
inc
sub
fcoml
loopne
xor
popa
jbe
cmpsb
fiadds
rcr
js
inc
insl
inc
add
pop
lock
fs
push
lret
xor
call
inc
jbe
ret
inc
xchg
sub
shrb
outsl
dec
shl
dec
fistps
mov
imull
dec
push
imul
mov
xor
jge
push
push
push
jae
sbb
add
cmp
dec
call
dec
push
rol
xor
lds
test
aaa
mov
mov
mov
ret
jo
xor
lock
nop
mov
push
inc
addr16
out
mov
xor
dec
inc
mov
push
dec
push
aas
jp
cmp
cmpsl
cwtl
into
inc
pushf
jmp
mov
pop
je
pop
push
fwait
aaa
xchg
inc
dec
ja
fs
mov
rcll
sub
jle
mov
mov
imul
push
ljmp
mov
push
or
cli
cmp
lcall
dec
enter
dec
inc
jge
jle
xchg
ret
jo
sahf
jb
push
outsl
jo
jbe
outsl
sbb
js
js
xor
call
sbb
jae
jbe
lods
pop
jae
pop
jns
stos
pop
mov
dec
out
xor
add
pop
inc
orb
add
or
mov
xchg
stos
cltd
push
sub
jbe
movsl
iret
inc
mov
add
fnstenv
fidivrs
push
pop
xchg
push
push
push
xchg
scas
ret
inc
iret
inc
inc
sbb
repnz
inc
data16
xchg
jb
adc
mov
sbb
jno
and
fcmovnbe
push
pop
sub
adc
or
call
mov
call
ret
sar
scas
push
pushf
fadd
and
pop
stos
subps
loope
imul
lock
inc
popf
mov
lret
es
cmpsb
clc
shll
xchg
dec
shll
xor
out
inc
arpl
out
movsl
xor
sbbl
mov
fsub
adc
imul
mov
arpl
sub
lds
in
cmp
inc
mov
xchg
xor
xor
fisubs
fwait
jp
fwait
pop
jns
xchg
pop
hlt
mov
out
arpl
jmp
xor
push
mov
sub
xor
fs
pop
mov
mov
inc
inc
add
xchg
jp
or
nop
cmc
pushf
iret
push
cmp
and
es
fimull
enter
ds
fmul
jo
dec
mov
jl
add
and
push
xor
or
icebp
push
jo
adc
stc
lret
mov
dec
cmp
ja
les
xorl
es
push
mov
test
xor
inc
and
mov
int
cmp
jbe
add
repz
into
shl
inc
dec
inc
mov
xchg
ds
shll
hlt
mov
inc
xorl
cmp
push
push
out
hlt
fsts
test
push
icebp
notl
fsubs
lock
clc
outsl
test
decl
test
inc
out
mov
std
jae
arpl
test
pushf
ss
push
dec
mov
dec
insl
rcr
rcrb
inc
arpl
dec
push
aas
xor
iret
adc
ljmp
mov
loope
test
bound
ret
cmp
cli
insl
cli
inc
push
jb
dec
adcl
nopl
mov
inc
inc
sbb
insl
xchg
mov
rcrl
add
out
dec
push
test
cs
movsb
pusha
sub
add
mov
mov
xlat
jbe
push
mov
mov
ret
xchg
loop
sbb
popf
jo
das
fstps
lret
scas
push
js
jmp
sbb
xchg
adc
loopne
shrb
int3
inc
outsl
jb
inc
icebp
int
push
insl
sarb
dec
jns
sub
or
ja
mov
inc
imul
pop
clc
out
movsl
rclb
dec
bound
shrl
push
inc
jae
jbe
cltd
push
pop
dec
sbb
push
push
adc
enter
repnz
jne
push
scas
mov
mov
arpl
push
sub
and
push
test
sub
testb
or
clc
js
xchg
shl
push
push
cmp
gs
js
lods
ret
and
cwtl
push
fisubl
into
push
loopne
pop
sub
out
push
push
mov
aas
mov
mov
push
xchg
stos
or
loop
jne
lock
clc
ret
add
sub
insb
ja
push
xlat
push
sub
std
push
mov
jbe
inc
inc
cmpsb
dec
lods
mov
xchg
inc
add
mov
mov
xchg
test
xor
push
xor
fists
mov
xchg
mov
inc
cmp
ss
addl
inc
movsb
stos
in
jmp
cmp
xor
jne
scas
in
loopne
dec
shll
dec
mov
mov
scas
or
insb
push
push
jae
enter
bnd
mov
jne
inc
pop
repnz
rolb
jge
imull
mov
sahf
ss
dec
push
nop
mov
imul
mov
jns
int3
pop
insb
sub
das
jecxz
addb
cs
mov
pop
aad
sbb
sbb
shufps
stc
dec
push
adc
cmp
lcall
mov
outsl
push
and
dec
pop
sbbl
xchg
idivl
imul
call
jae
fsubrs
rcrb
ds
sbb
fmulp
sbb
fnsave
inc
dec
xchg
add
shrl
fldl
aaa
and
mov
lods
mov
inc
xchg
adc
jbe
in
ss
shrl
pushf
repz
dec
push
test
inc
jmp
cs
or
push
enter
clc
sub
or
dec
push
and
or
xchg
sbb
cli
cmpsl
fistps
add
cmp
test
lock
ljmp
je
ss
sub
dec
lea
pop
mov
ja
cmp
cmp
mov
dec
dec
xor
cli
pop
insb
stos
lret
push
lret
fisttps
mov
push
movsl
mov
pop
push
dec
loopne
mov
repz
jne
and
adc
sub
mul
imul
mov
js
jne
lods
dec
push
ss
adcb
mov
roll
push
pop
xor
xchg
xchg
subl
aas
sarl
push
movsl
movsb
fisttpll
xor
std
loope
push
sbb
inc
loopne
mov
incb
xchg
dec
push
stos
jle
jmp
dec
loope
inc
xchg
adc
sbb
ret
xor
popa
mov
or
jp
clc
dec
outsb
rclb
out
inc
popf
daa
jg
or
push
jns
shl
cli
sub
cmpsl
push
push
fsubs
lock
call
push
int3
cmp
fdivrp
test
repz
mov
pushf
ljmp
ja
xor
inc
push
cli
add
inc
imul
xchg
jnp
rcrb
clc
nop
jnp
dec
jo
in
pop
sbb
repz
inc
push
dec
inc
lea
adc
ljmp
inc
xor
dec
push
inc
add
out
xchg
push
jo
dec
mov
mov
cmpsl
inc
xchg
sahf
push
pop
mov
in
js
dec
push
or
push
inc
enter
pop
and
jo
xor
fwait
mov
scas
dec
fwait
xchg
iret
dec
pop
jp
xchg
jb
inc
inc
xchg
ret
dec
cmp
push
fnstenv
lock
sbb
imul
inc
out
xor
stc
fsubrl
data16
insb
push
or
popf
push
dec
loopne
pop
jbe
or
call
push
rolb
jnp
arpl
out
push
imul
popa
inc
stos
push
add
or
mov
nop
sbb
mov
mov
push
mov
movsb
adc
dec
pop
fmuls
pop
push
push
jle
and
push
shll
leave
and
and
lret
inc
jl
sub
push
outsb
inc
ljmp
push
jnp
cmp
imul
and
push
popf
mov
in
xchg
stos
inc
addl
jmp
push
dec
xor
call
call
pop
jl
push
cmp
ljmp
jbe
fs
pop
inc
push
xor
ret
shlb
ss
sub
arpl
or
test
rolb
ret
fcompl
pop
or
jecxz
xchg
mov
xor
test
fs
jne
andl
aas
jge
jb
test
outsb
ss
dec
rorb
pop
mov
aaa
pop
push
pop
add
sub
add
mov
cmp
cld
ja
pop
insb
pop
add
je
repz
xor
jbe
and
mov
xorl
xchg
aaa
dec
jg
out
ss
into
or
fdiv
xchg
dec
dec
popf
cltd
xor
fcmove
inc
sub
inc
adc
inc
loope
push
jbe
outsb
inc
data16
arpl
arpl
popa
ljmp
repnz
insb
gs
lgs
inc
push
push
ss
xor
push
mov
xor
sbb
push
inc
ds
loopne
sbb
dec
and
jge
sub
stc
jmp
fstl
mov
outsl
xchg
pusha
xchg
dec
dec
dec
or
push
mov
cmp
add
fs
push
outsb
adc
movhps
out
push
cmp
sti
iret
ret
adc
iret
mov
xor
fwait
cmpsb
loopne
push
ds
inc
das
add
shll
fbstp
shrb
mov
fdivrp
dec
mov
movsl
ds
incl
arpl
or
ficoml
dec
ja
pop
rolb
dec
xor
js
ljmp
das
movl
jb
jl
lahf
add
mov
pop
mov
movsl
jl
clc
jle
je
inc
xor
pop
dec
gs
fldt
xor
pop
mov
pop
xlat
test
dec
jns
mov
jno
imul
iret
dec
int3
call
loop
shlb
jne
xchg
fsubrl
cmp
mov
mov
sub
dec
inc
xchg
mov
xchg
xor
jae
ja
inc
add
push
dec
mov
cmc
push
dec
xor
fistpl
sbb
ds
push
push
xor
or
imul
push
aaa
bound
pop
addl
lahf
jno
cmp
mov
js
stos
roll
and
call
inc
adc
pop
aad
mov
xor
ficoml
or
inc
gs
test
mov
cmp
inc
pop
xchg
lock
lret
ds
lahf
mov
push
dec
pop
mov
std
test
cmp
pop
add
and
push
mov
push
pop
mov
imul
dec
add
shr
lea
cli
dec
fcompl
ret
dec
push
mov
push
clc
in
inc
adc
ret
pop
jae
imul
mov
stos
lret
dec
xor
test
sbb
nop
pop
lea
or
push
ficomps
push
pop
inc
stos
outsb
push
jae
mov
pop
add
fidivrs
push
jbe
fisubl
dec
addr16
or
gs
ret
dec
inc
gs
inc
add
sub
ljmp
data16
jne
add
xchg
and
out
mov
pop
dec
or
out
jo
and
loopne
cmp
xor
xor
cltd
shlb
push
imul
add
cli
or
mov
adc
lock
inc
enter
cmc
push
lea
shl
mov
dec
dec
dec
jae
mov
dec
inc
dec
dec
test
adc
add
mov
mov
lret
sub
or
and
mov
adc
add
incl
int3
adc
cmp
mov
mov
sbb
gs
testl
push
inc
fucomp
cmpsl
popa
adc
sbb
sbb
ret
mov
and
adc
insl
or
sbb
mov
sub
inc
mov
rorl
aas
mov
mov
les
insl
imul
insb
pop
pop
add
xchg
cmpb
jns
add
sub
push
call
dec
sti
imul
add
fcomi
xor
mov
outsb
pop
push
add
xchg
mov
lcall
mov
das
xchg
je
arpl
add
jne
bound
jb
dec
fistpl
mov
stos
add
or
fisttpl
scas
gs
push
rcrl
sub
or
xchg
push
sbbl
mov
gs
adc
pop
mov
add
daa
add
cmp
jecxz
adc
xchg
push
add
test
pop
jg
ja
mov
pop
and
push
add
ja
es
subb
add
dec
and
aam
out
pop
orl
push
pop
adc
addr16
mov
and
jae
mov
pop
pop
test
push
push
mov
fwait
pop
adc
out
inc
add
mov
mov
xlat
icebp
fwait
push
and
inc
ss
pusha
xor
push
push
leave
stos
aas
inc
cwtl
add
push
push
and
loope
inc
sbb
iret
aaa
mov
push
add
xor
add
or
cmp
dec
mov
push
dec
mov
lret
xchg
das
inc
add
jle
fcomp
sub
add
push
cmpl
shlb
outsl
and
adc
pop
ret
xchg
rcrl
mov
mov
jmp
mov
movsl
mov
jle
jg
mov
jne
stos
adc
jmp
or
rclb
insl
xchg
outsb
cmp
sarb
insl
pop
cmp
sub
add
lea
dec
sbbb
inc
insl
mov
xchg
popa
lcall
mov
out
or
sub
imul
cmp
mov
and
pusha
xchg
and
inc
fs
popf
mov
xchg
jmp
sub
movsb
dec
cmp
cmp
scas
add
int3
xor
adc
add
and
adc
lea
fsubrs
xchg
xchg
je
jl
out
jge
xchg
cltd
out
inc
sahf
jg
lret
stos
std
push
lods
jmp
rolb
pop
pushl
push
push
jno
push
jbe
or
daa
jg
sub
iret
ss
xor
jmp
sub
or
testb
cmp
push
lods
add
mov
mov
adc
pop
call
xor
leave
and
xor
inc
jp
xlat
pop
jp
xor
add
jb,pn
decl
clc
cmp
and
pop
cwtl
add
or
stos
cwtl
mov
jo
sbb
sar
jmp
jle
pop
xchg
xor
bnd
jns
in
inc
lcall
cli
push
xchg
imul
incl
pop
mov
ljmp
mov
jg
pop
pusha
sub
shrb
nopl
outsb
lahf
push
mov
jmp
adc
xchg
out
inc
pushf
ljmp
data16
pop
scas
add
add
data16
lcall
mov
out
fmul
and
cmp
ret
fnsave
in
int3
iret
in
int
pushl
in
hlt
dec
mov
je
xchg
pop
pop
mov
inc
repz
decl
shll
shrl
imul
ss
in
xchg
shll
stos
in
inc
fisttpl
das
mov
sti
push
add
pushf
ljmp
test
jl
lds
lret
insb
jl
sub
mov
jg
xchg
adc
js
inc
xchg
sbb
mov
in
add
movb
adc
mov
ret
insl
mov
call
aam
fidivrs
dec
int3
test
jg
push
fidivrs
jge
shr
xchg
add
or
dec
andl
add
mov
fdivl
jae
cmp
in
xchg
rorl
out
inc
pushf
mov
jo
jecxz
adc
jnp
ret
mov
out
jmp
jle
addr16
movsb
test
decl
xchg
or
nop
out
jle
mov
jle
clc
call
add
lock
fimuls
mov
ret
sbb
fdivr
jmp
or
jecxz
int
insb
in
orb
stos
nop
xchg
jg
loope
and
dec
mov
test
mov
popa
mov
pop
inc
sbb
pop
mov
iret
and
test
push
jle
iret
into
in
pop
sbb
push
testl
push
pop
dec
test
int
sbbb
pop
sahf
ror
ret
ret
adc
sbb
jecxz
xchg
call
fwait
icebp
cwtl
mov
je
in
call
call
mov
pusha
cmp
clc
push
test
mov
sar
lcall
adc
test
and
jae
ljmp
xor
or
cmpsb
cld
push
cld
jg
ljmp
pop
mov
dec
and
adc
stos
adc
and
addr16
xchg
ljmp
jle
sub
gs
cmp
adc
lcall
mov
pop
nop
pop
mov
popa
adc
lret
das
cld
lods
xchg
jp
pop
ja
into
mov
xor
bound
stc
push
sti
sub
repnz
and
outsl
movsl
cld
cmp
and
mov
icebp
mov
xor
es
adc
mov
nop
iret
sbb
pop
mov
push
or
ljmp
add
sbb
stc
xchg
adc
int
call
dec
jg
adc
aas
cmp
xchg
fcomip
xorl
call
inc
dec
cmp
mov
mov
push
sub
js
sbb
and
in
xchg
rcrl
ret
popf
add
cmc
add
out
into
add
push
inc
popa
dec
psubw
rcll
jle
idiv
sbb
mov
cld
push
lcall
jmp
call
in
lock
jmp
lret
mov
movsb
jnp
outsb
lods
pop
or
jmp
test
inc
rorl
inc
mov
cld
in
fisubs
mov
popf
mov
sbb
and
mov
dec
pcmpeqd
adc
inc
je
je
xchg
jmp
repnz
cmc
ljmp
xchg
decl
or
dec
mov
adc
adc
pop
jno
pop
test
subl
test
xor
jmp
lods
das
call
test
cmc
lods
xchg
pop
xchg
scas
mov
jno
daa
ja
movsl
and
mov
pop
mov
mov
fdiv
out
pusha
mov
push
and
mov
decl
and
xchg
pusha
testl
jne
and
lahf
ror
lods
mov
pop
sub
lods
call
sbb
xor
jle
push
test
sbb
cmc
or
insb
mov
and
adc
xchg
das
mov
mov
inc
addr16
repz
mov
outsb
ret
aaa
nop
cmp
cld
push
scas
sbb
popa
mov
imul
pop
jo
scas
ficoms
nop
adc
sub
xor
repnz
mov
cmpb
and
xor
dec
cmp
daa
push
repnz
jnp
sahf
xchg
imul
mov
out
pushl
and
addb
shlb
into
in
inc
jg
pop
mov
push
stos
add
out
jp
or
movsl
push
jnp
pusha
jmp
sbb
mov
pop
or
repz
aaa
fbstp
xor
xchg
aam
hlt
dec
mov
jl
shrl
xchg
sahf
mov
mov
adc
repnz
outsb
jp
pop
mov
hlt
movsl
cmpsl
fildll
mov
or
and
shlb
xor
js
loope
lahf
pop
sub
pop
test
mov
cmp
adc
popw
jg
loope
mov
push
xor
addr16
xor
mov
loope
mov
rcr
cmpsl
xor
add
or
cld
shlb
mov
cli
dec
ret
sbb
aas
and
fidivrs
cmpsb
mov
test
in
aas
fsubs
rolb
xorl
inc
dec
adc
outsl
shlb
and
push
mov
fisubrs
jbe
cltd
or
dec
pop
jbe
movsb
pop
cs
sbb
out
inc
push
inc
or
sar
cmpsl
out
scas
add
push
insl
xor
enter
pop
ds
and
adc
cld
ffreep
sbb
sbb
in
sub
lea
jle
dec
outsl
nop
inc
fmull
popa
mov
movsl
xchg
adc
and
jl
loope
rcll
rcr
sarb
mov
cmp
sub
pop
inc
sbb
out
nop
movsb
daa
fcoms
mov
and
mov
and
movsb
nop
cltd
data16
lahf
je
ds
rdpmc
dec
dec
dec
rclb
ret
in
subl
and
sub
pop
pop
stc
xor
mov
xchg
sbb
mov
divl
pop
cs
stos
add
and
push
cs
fstl
ret
add
fdivrl
nop
adc
xor
xor
in
and
xor
sub
jmp
idiv
repz
or
cmc
mov
dec
and
mov
adc
test
adc
ja
cmp
mov
in
mov
movsl
push
cs
icebp
jg
les
sub
dec
imul
dec
test
mov
mov
ret
sbbl
hlt
dec
cmp
cltd
mov
hlt
xor
adc
insb
lods
mov
push
fcoms
hlt
fisubrs
sbb
push
cld
fbld
xchg
shr
nop
icebp
dec
mov
outsl
movsb
pop
and
pop
aas
adc
pop
xor
adc
push
pop
in
fsubs
repz
xor
fnstenv
gs
das
mov
jg
clc
aaa
mov
push
adc
cmp
data16
and
xor
in
inc
sbb
daa
push
out
mov
ffree
out
loop
push
jle
test
and
lahf
fisttpll
mov
rcrb
jb
jno
inc
loope
test
adc
mov
insb
lret
ret
ror
push
jmp
mov
mov
mov
les
andb
loope
dec
je
addb
loop
sti
cmc
cmp
jle
subb
loop
mov
mov
pusha
dec
jecxz
push
adc
pop
jp
aas
fnstsw
in
lods
aad
dec
lret
int
mov
pop
decb
in
cmpsb
call
cmp
mov
mov
add
push
rol
subl
adc
lcall
xor
mov
fs
mov
jo
out
xor
iret
jge
pop
les
push
mov
aad
xor
pop
jecxz
push
cmp
out
lcall
in
roll
xor
mov
std
les
rol
adc
fistpl
jp
aaa
sbb
gs
xlat
jp
adc
lret
ja
mov
stos
add
jb
gs
sub
lea
bound
fldenv
outsb
sbb
fstps
mov
stos
push
mov
xor
aaa
add
xor
mov
mov
add
push
and
addb
jg
mov
ret
push
sahf
fbld
lret
mov
push
popf
pop
movsl
les
xor
dec
out
shlb
push
and
xor
jg
in
and
les
sub
jnp
repz
fdivrs
loopne
test
pop
insb
lock
shlb
inc
xor
call
jecxz
mov
mov
inc
ds
pop
mov
das
rcll
fildll
xchg
cs
pop
mov
imul
jbe
leave
mov
imul
movsb
push
lods
filds
sub
std
subl
les
and
and
lret
or
xor
hlt
fistpll
cmp
mov
push
or
xchg
out
inc
icebp
dec
stos
or
pop
push
jbe
test
adc
sub
cmp
addr16
pop
mov
into
repnz
mov
mov
out
mov
jnp
dec
pop
addr16
and
je
decl
mov
call
cs
pop
cld
out
lock
movsl
icebp
cmp
sbb
mov
inc
arpl
and
cmpsl
cld
pushf
ret
adc
stc
xchg
mov
sbb
xor
enter
aas
xorl
ja
test
enter
pusha
push
negl
inc
out
jae
dec
mov
mov
sbb
nop
fsts
rclb
iret
aaa
cmc
mov
and
mov
cvtpi2ps
pop
push
adcb
inc
loop
xor
jle
int3
leave
mov
xor
les
shlb
int3
mov
nop
adc
push
cmp
pop
les
sarl
xchg
clc
ret
xlat
mov
jle
mov
xchg
outsb
stc
cltd
xchg
ret
dec
mov
cmpsb
adc
add
dec
incl
xor
test
in
mov
mov
std
jecxz
xchg
nop
fs
mov
loopne
push
xchg
das
jle
test
xchg
pop
jle
cmp
inc
adc
sub
jb
pop
repz
aaa
jnp
jnp
repnz
xor
test
mov
int3
push
mov
mov
mov
pushl
xor
pop
jge
jge
pop
add
jnp
movsb
push
scas
jg
cltd
fstpt
shll
mov
stos
push
jns
jge
add
and
xor
jp
cmp
cmp
sbb
xor
xor
aad
movsb
xor
dec
lret
fnstsw
and
fmul
and
push
mov
fadd
or
ja
pop
and
in
mov
lods
mov
iret
repz
gs
ret
lds
jbe
push
in
jbe
loopne
les
jo
inc
stc
add
iret
insl
cwtl
jmp
xchg
mov
js
inc
out
jbe
jb
clc
insl
xor
out
ffreep
movsb
jmp
aad
imul
push
aaa
lea
out
cld
xchg
sub
lcall
aam
lea
jle
clc
push
push
or
add
adc
fisttpll
rclb
push
push
mov
cltd
cmp
cmp
rcrl
pop
inc
dec
adc
insb
lret
outsl
jo
scas
pop
inc
pop
jg
sub
js
xchg
repz
jmp
test
xor
aas
mov
jecxz
pusha
mov
hlt
lds
pop
jle
rcll
push
repz
xor
jae
popa
mov
xchg
sarl
mov
push
outsl
sar
xor
xchg
and
inc
sub
mov
pushf
ret
mov
in
enter
jo
adc
int
outsl
shrb
fsts
cmc
clc
out
scas
inc
pop
add
jns
mov
les
arpl
enter
adc
jae
xchg
cmc
ja
jbe
push
xlat
push
out
pop
call
sbb
inc
fdivrl
mov
fistpll
mov
cmp
lods
sbb
mov
stos
xchg
xlat
xchg
push
loope
cmp
aas
std
fldenv
dec
mov
lahf
mov
test
das
fildll
pushl
shrl
stos
nop
mov
xchg
xchg
test
int
xchg
lods
cli
fmuls
add
mov
in
xorl
loope
cmp
jg
mov
mov
mov
push
cltd
xor
stc
push
lods
cmp
sbb
lahf
or
lret
inc
out
jmp
nop
lahf
cmp
outsb
jne
repz
xor
popa
addr16
jg
jmp
push
ret
les
outsb
pop
mov
dec
push
clc
mov
adc
sbb
push
inc
inc
pop
jl
test
jno
sti
cltd
pop
fiadds
pusha
int
mov
lods
sbb
xor
push
adc
mov
addr16
inc
jns
sub
jnp,pt
aam
xor
ss
jnp
sub
incl
in
lret
sbb
mov
dec
mov
in
rcr
loop
jae
mov
jge
sub
push
test
loope
aaa
or
movsb
std
dec
in
icebp
xchg
int3
test
add
out
and
jmp
jp
xor
jp
push
xchg
rcl
filds
stos
aas
in
pop
lret
mov
mov
iret
cltd
loope
mov
movl
adc
pop
nop
mov
pop
dec
push
outsl
call
out
mov
out
aaa
fwait
cmp
pop
scas
out
scas
ja
fwait
rcll
sar
loope
xor
iret
packsswb
sub
xchg
aam
out
cmp
fstps
int3
cmc
sbb
inc
add
adc
ds
addr16
push
mov
jle
repz
sbb
fsts
stos
jbe
dec
xor
cs
rcrb
mov
fstl
addr16
jg
mov
inc
xor
dec
aam
aas
adc
mov
cld
in
sbb
cltd
sub
mov
xor
sbb
and
mov
shld
mov
addr16
es
inc
test
xchg
call
int
lahf
inc
jno
nop
test
push
loopne
fs
mov
imul
imul
sbb
and
fwait
pop
xor
repnz
mov
mov
clc
xor
adc
jns
les
or
stos
fisubs
test
cld
xchg
rclb
addr16
inc
xor
mov
inc
mov
push
in
mov
jns
movsl
repnz
outsl
nop
sub
pusha
test
mov
sbbb
mov
sti
push
mov
jb
mov
sub
addr16
nop
mov
push
in
sbb
xchg
push
mov
fidivrs
addr16
loope
clc
push
ds
cmp
adc
adc
jl
pop
xor
adc
shrb
adc
xor
sbbl
add
or
arpl
shlb
icebp
fbstp
stos
subb
jbe
loopne
nop
jl
loopne
cmc
das
ffreep
mov
mov
outsl
mov
xor
mov
cmpsb
push
mov
cli
adc
pop
ficomps
out
fistpll
les
pop
adcl
mov
or
mov
fdivrs
sbb
fbstp
loope
xchg
push
xlat
cwtl
aas
ffreep
adc
test
les
jno
or
sub
repnz
add
mov
stc
inc
adc
repz
rcrl
inc
mov
lahf
pushf
mov
int3
cwtl
int
nop
scas
lcall
addr16
or
loope
and
jle
push
xor
outsl
xor
imulb
jge
or
mov
jo
pop
test
leave
jle
mov
iret
shr
aas
sub
movsb
call
xchg
push
inc
icebp
add
mov
push
jecxz
lods
and
pop
jge
clc
outsb
sbb
loopne
mov
shlb
xchg
push
and
adc
or
aaa
jge
stc
sti
mov
ret
add
mov
jbe
movsl
loop
pop
test
and
mov
jle
lods
pop
or
mov
cmp
outsl
icebp
loope
push
movsb
les
or
pop
int3
xor
es
xor
push
xchg
xor
cmp
fisttps
xor
aas
std
push
jns
pop
imul
sub
jle
das
jp
sub
pop
xchg
dec
xor
outsl
decb
adc
pusha
lcall
pushl
mov
mov
das
mov
mov
xor
mov
ljmp
ja
cli
dec
addr16
xchg
push
stc
cld
inc
pop
sbb
jecxz
inc
push
outsl
scas
rcl
pop
imul
push
jle
sbb
in
jo
mov
aam
mov
jmp
mov
mov
filds
adc
xchg
insl
push
and
adc
nop
jp
inc
repnz
xorb
mov
ljmp
adc
cmp
aaa
inc
loopew
and
aaa
cmp
or
fldt
sarl
fcoms
loope
ficoms
inc
push
or
lahf
int
cli
mov
adc
popa
icebp
and
adc
addr16
cmp
push
iret
pop
mov
lock
mov
pop
clc
inc
or
cli
ror
cld
mov
les
mov
jnp
mov
pop
sub
leave
dec
jg
xchg
insb
cmp
rcr
xor
jg
ja
pop
jle
adc
dec
cld
daa
fwait
outsl
sbb
jle
pop
xor
jg
das
xchg
lret
mov
xchg
dec
cmpsl
pop
hlt
pop
mov
imul
cmp
inc
pop
jp
in
push
enter
pop
in
mov
les
loopne
into
mov
sbb
cmpsb
or
or
mov
jl
and
nop
cs
clc
sahf
test
jg
mov
or
fsts
cmp
hlt
jbe
xor
outsl
cmc
out
inc
jo
arpl
xchg
pop
clc
popf
addr16
inc
jo
out
xchg
inc
sub
inc
push
mov
lret
aaa
xor
scas
or
ret
jle
test
stc
enter
xchg
pop
enter
data16
and
mov
push
mov
dec
je
mov
movsb
sub
pusha
lds
outsl
pusha
xor
adc
movsb
and
and
mov
pop
cs
fisubrl
loope
in
aaa
decl
insl
fwait
lods
leave
je
dec
mov
or
int3
inc
lods
xor
pop
sub
subb
mov
push
test
xchg
mov
icebp
pop
jge
jno
nop
pop
pop
jne
jae
inc
push
sub
add
aam
fsubs
out
xchg
cmovo
stos
clc
xor
sub
inc
imul
lock
imul
fsts
outsl
rcr
jg
jecxz
adc
add
iret
ss
ror
mov
push
inc
icebp
and
jnp
gs
inc
jmp
rolb
jno
cld
dec
in
xor
jl
xor
jb
pop
mov
add
inc
fstps
sub
mov
mov
add
pop
pop
ljmp
shr
mov
lods
pop
xor
adc
ret
xor
xor
fs
sbb
or
fsub
ss
cmp
test
in
sub
cmp
es
in
mov
or
inc
js
mov
pop
aam
xchg
xchg
loopne
ficompl
aam
dec
adc
adcb
jmp
sarl
or
push
or
cmp
inc
call
fwait
mov
cli
jno
inc
aaa
loop
mov
xchg
adc
push
in
lock
addr16
jge
jne
iret
xorb
lret
jge
cbtw
fwait
xor
mov
or
sbb
jle
rcrb
or
add
mov
lods
sbb
cmpsl
inc
out
mov
iret
iret
pop
clc
push
cmp
rcl
sbb
dec
xchg
sbb
clc
ljmp
outsb
nop
rcrb
jmp
sbb
jae
test
mov
mov
ret
sub
imul
mov
loop
pop
adc
les
mov
mov
test
shll
mov
clc
in
outsb
mov
inc
mov
pushf
mov
fidivrl
mov
xor
mov
mov
fwait
mov
push
pop
mov
push
cld
notb
pushf
pop
push
movsb
movsw
subb
mov
inc
nop
leave
lret
outsb
jne
and
fisttps
jmp
addb
fwait
loopne
ficomps
cld
call
psubq
jne
jmp
ss
int3
push
sahf
mov
das
int3
icebp
mov
push
cli
or
cmp
adc
and
pop
xchg
push
add
or
mov
rcll
add
xchg
in
xorl
sbb
jg
in
out
pop
jne
sbb
jae
std
stc
mov
sbb
mov
stos
cwtl
sbb
and
xchg
sub
adc
addr16
pushf
sahf
add
inc
das
xchg
or
sub
add
and
pop
xor
push
cld
lods
sub
lahf
out
sub
or
or
and
loopne
ds
xchg
push
aam
loopne
mov
xor
rcl
call
aaa
mov
push
cld
push
push
enter
aad
ret
mov
clc
imul
push
push
cmp
lock
negb
testl
mov
sub
aas
and
mov
subl
dec
push
fwait
jo
movsl
aaa
fildll
dec
sbb
outsl
mov
adcb
lds
xor
xchg
out
sub
cli
iret
or
sub
inc
fisubrl
addr16
cmc
sbb
int
sbbl
and
mov
ss
sub
cmpl
hlt
adc
xchg
xchg
jnp
xor
rclb
xchg
mov
lods
pop
test
xor
lret
lods
pushf
jmp
out
jo
xor
mov
int
clc
jne
scas
lea
xor
mov
icebp
push
xchg
dec
std
mov
xor
cmp
sbb
loope
sbb
incl
pop
sub
and
and
sbb
pop
aaa
int
ss
mov
mov
xchg
mov
fwait
ret
or
cmpsb
or
jnp
and
and
ret
push
and
imul
pop
scas
out
sub
cmpsb
jbe
or
out
adc
jmp
fiadds
aaa
pushl
or
dec
out
xchg
inc
lret
sbb
pop
jle
ja
jl
xor
mov
xchg
nop
aad
stos
fs
aaa
fildll
addr16
and
mov
test
fdivl
jl
mov
xlat
pop
lock
push
mov
adc
mov
push
add
xchg
rorl
cmp
repz
les
pop
stos
sbb
mov
lret
mov
xor
dec
test
outsb
test
in
clc
dec
inc
aad
repnz
or
in
lahf
or
addr16
std
jb
fdivs
les
cmc
mov
adc
icebp
in
outsl
fwait
orb
jae
into
inc
cmp
push
push
out
or
push
push
stc
insl
mov
incl
insl
loope
mov
fstpl
iret
or
out
xchg
cld
clc
out
push
add
cli
pop
dec
loop
call
and
out
pop
push
mov
cmp
or
sbb
jbe
insb
stos
xchg
push
les
addr16
xchg
adc
lahf
xor
loopne
sub
inc
inc
adc
outsl
jge
outsb
xorl
sub
test
push
jb
mov
sbb
clc
mov
out
mov
jle
xor
xor
inc
sub
aaa
fwait
mov
cwtl
xor
cld
loopne
jp
lock
les
lock
mov
mov
pop
int
decb
fists
dec
push
xor
sbb
cmpsb
sub
jns
or
and
pop
jge
push
jnp
jo
push
addr16
shll
xor
mov
pop
shlb
push
sbb
mov
sub
inc
fildll
fwait
jp
addr16
movsl
icebp
xor
push
pop
push
or
adc
add
lock
popf
add
mov
les
adc
fbld
xor
mov
movsl
std
cmp
das
out
pop
stos
xor
clc
lahf
aaa
mov
jle
data16
jg
ficoms
pop
mov
lds
addr16
dec
fadds
mov
xchg
test
pusha
lahf
xchg
jnp
icebp
pop
mov
add
into
jg
fcompl
sbb
dec
lods
faddl
xchg
ror
xchg
aad
cmpb
pop
mov
add
mov
clc
les
pop
iret
sub
rorl
insb
lret
addr16
jnp
ss
sub
addr16
loope
xor
clc
test
dec
ss
imul
push
loopne
xor
jb
insb
mov
ja
lea
ja
clc
sti
fdivl
xor
fbld
mov
jmp
aad
fs
imul
mov
scas
or
mov
jnp
shrl
fwait
sahf
mov
xchg
mov
add
idivb
sbb
cld
inc
jmp
nop
jle
adc
xchg
das
movsl
sbb
test
js
jns
mov
icebp
dec
sti
lret
stos
inc
nop
push
inc
cmc
aaa
jno
pusha
pop
or
inc
loope
xchg
movsb
int3
jg
jle
inc
out
xor
sub
mov
outsl
aad
test
loope
stc
mov
adc
scas
push
jb
mov
mov
test
jp
imul
cwtl
cli
pop
sub
addr16
pop
fildll
repz
test
mov
imul
ret
or
or
inc
mov
mov
shl
mov
pushf
les
fwait
jg
shrb
and
rcrl
mov
mov
je
pop
xchg
cmp
addb
sti
repnz
hlt
mov
outsb
inc
fisttpll
pop
and
mov
repnz
push
or
push
packsswb
sbb
insl
pop
dec
add
stc
lret
and
sub
sub
xchg
pop
sub
push
push
dec
and
pop
ror
outsl
iret
sbb
or
jge
addr16
xor
outsl
call
jmp
xchg
mov
xor
roll
ret
inc
pop
mov
mov
and
out
mov
fldcw
out
lret
jg
sbb
pop
inc
outsb
neg
pop
dec
and
int
sarl
insl
dec
adc
dec
repnz
mov
mov
repz
outsl
aaa
mov
loop
outsl
nop
inc
dec
call
push
shlb
pop
add
mov
and
call
sub
int
xor
xor
hlt
jmp
xchg
add
mov
cld
jl
mov
fwait
lahf
push
aas
divb
sub
and
pop
test
ss
divb
mov
push
inc
lret
xor
mov
rorl
sub
push
xchg
mov
lret
das
sub
das
fcom
dec
stos
mov
mov
dec
and
insb
ret
aas
std
lahf
sbb
and
dec
fwait
pop
out
and
sub
cs
fcmovbe
mov
pop
call
js
xor
or
or
fwait
lret
repz
mov
sub
movsl
push
add
dec
lds
shrl
adc
mov
jp
lods
or
clc
mov
xchg
imul
rorb
xor
mov
js
pop
xchg
hlt
insl
inc
idivb
or
mov
addr16
inc
jecxz
jle
add
rcr
mov
shll
lret
jne
mov
pop
cld
dec
aas
fwait
outsl
lock
pop
outsb
xor
movsl
scas
divb
sbb
pop
fiaddl
adcl
in
movsb
lahf
outsl
shll
std
push
out
mov
lock
lds
cltd
popa
cli
adc
mov
mov
push
dec
mov
adc
hlt
sub
adc
add
scas
mov
btrl
sbb
shll
cli
pushf
mov
leave
pop
in
xchg
mov
sub
add
push
loope
cmc
add
mov
out
aas
pop
xor
shl
addr16
mov
mov
mov
insb
adc
rcr
dec
ret
ficomps
cmp
xchg
mov
mov
jns
xchg
and
xlat
ja
mov
in
repz
jmp
jl
dec
lods
clc
push
fcomip
xor
movsl
mov
or
imul
repz
std
or
adc
mov
fstpl
das
add
aam
test
scas
lret
fsubp
les
inc
test
pushw
and
jp
sarl
outsl
lds
mov
jb
xor
push
mov
mov
push
ds
iret
dec
mov
clc
sbb
and
or
lds
and
mov
mov
xor
lret
xchg
rcll
jnp
hlt
mov
xor
out
sti
inc
pop
cld
inc
adc
dec
push
mov
dec
xchg
mov
push
mov
imul
mov
sub
out
xchg
pop
pop
fcompl
adc
dec
inc
push
adc
jmp
or
movsb
sbb
aaa
add
sti
and
ret
and
test
inc
fiadds
nop
mov
repz
xchg
les
leave
sbb
pop
jp
or
aad
shl
xorb
pop
mov
aaa
nop
aas
pop
cmp
mov
addr16
pop
outsl
aaa
adc
enter
aaa
push
xor
or
cmp
sub
xchg
aaa
inc
movsb
sub
pop
sbb
cmpb
and
sbb
and
and
mov
aam
jle
icebp
or
mov
aaa
inc
adc
xor
roll
faddp
pop
lret
lock
rolb
outsl
popf
adc
loopne
sbb
fbld
xchg
sarl
pop
inc
out
stos
jge
jo
movsb
addr16
xor
aas
stc
sar
ja
xchg
mov
mov
hlt
push
andl
clc
dec
adc
mov
popf
addr16
fistps
mov
xor
dec
jl
adc
out
xchg
mov
xchg
pusha
sub
testb
jle
add
pop
cmp
lods
jp
pop
std
lods
pop
cltd
mov
cmpsb
jbe
jb
sbb
insl
jl
int
mov
jno
sahf
fildl
stc
out
pop
xor
xor
or
mov
xchg
das
push
sub
or
addr16
cmp
stos
cmpsb
xchg
movsl
lock
decb
iret
xchg
lea
or
shr
add
sub
mov
fsubs
rol
cmpsb
repnz
jo
jae
push
psubb
iret
clc
inc
out
ljmp
mov
sub
jo
mov
repnz
sbb
pop
mov
dec
cmp
loopne
and
push
inc
adc
lahf
aaa
je
fwait
sub
test
dec
xor
hlt
add
repnz
inc
cltd
mov
aaa
and
add
xor
pop
aaa
xchg
jo
cmpb
jl
lods
pop
dec
addr16
lret
xchg
dec
jl
push
rcl
inc
mov
in
fadds
mov
cli
lret
ja
decb
adc
inc
sub
mov
add
stos
cmpsb
inc
xchg
aas
out
loop
fisttpl
inc
mov
insl
fadd
rclb
inc
push
sbb
push
call
ds
cmpsl
mov
aaa
add
clc
or
outsl
mov
fs
mull
lods
adc
sbb
aam
iret
mov
sti
ja
push
add
xor
nop
jns
fnsave
in
and
add
inc
pushl
lret
push
mov
mov
mov
mov
mov
test
cmp
fwait
aaa
fists
and
out
jb
push
and
ret
daa
enter
and
jmp
repz
decb
ret
pusha
scas
out
popf
sahf
mov
loop
mov
pop
push
or
in
inc
sbb
inc
lea
xchg
lahf
inc
cmpl
call
add
adc
in
sbb
shll
or
mov
add
jle
adc
and
sbb
inc
loope
mov
sub
movsl
cmp
aad
mov
fbstp
hlt
sti
mov
das
mov
jnp
mov
cltd
iret
sub
sub
push
xchg
pushf
nop
or
insb
repz
icebp
cltd
push
inc
fsubs
cs
int3
xor
scas
inc
mov
fistps
jg
dec
and
jg
push
lahf
stc
test
jecxz
xchg
scas
push
outsl
add
psubw
pop
sahf
cli
pusha
mov
jo
and
std
add
outsb
mov
push
push
popf
fists
icebp
add
sub
out
lods
lods
ret
inc
dec
js
adc
aaa
shlb
outsl
cmp
pop
push
aaa
enter
jmp
xorb
push
sub
int3
cmp
ja
aaa
hlt
inc
inc
add
sbb
das
test
jb
movsb
scas
jle
lret
fisttpll
push
cli
test
mov
jecxz
cmp
push
imul
clc
cld
iret
add
push
inc
sbb
imul
repnz
stos
lret
fiadds
call
pop
stc
mov
scas
ds
out
enter
das
jo
cmp
mov
rcrl
fstp
mov
jae
fwait
stos
sarb
cmp
pusha
in
inc
outsl
lock
addr16
cmc
arpl
dec
je
push
test
popa
xchg
sub
ljmp
xor
inc
mov
lock
shlb
aas
xor
or
jle
inc
and
dec
jp
mov
pop
adc
lcall
movsl
mov
and
xchg
pop
or
push
xor
or
pop
movsb
aaa
sub
ljmp
inc
int
fldenv
aad
mov
and
outsl
fisubs
cli
in
cmpsl
mov
in
loopne
lods
sbb
jecxz
or
loop
clc
cmp
jae
fwait
and
ds
out
adcb
dec
aam
addr16
in
and
push
les
or
stos
clc
in
cmpsb
fistpll
jnp
push
xchg
ret
loopne
pop
addr16
lret
fcomps
rcrl
cmp
push
arpl
shll
and
jge
cmp
loope
add
movsb
xchg
repz
scas
or
ret
push
mov
mov
cmpsb
inc
cmpsb
test
jl
mov
stc
dec
insb
mov
xchg
in
inc
sti
cmp
loop
lods
or
inc
jl
repnz
rcr
xor
imul
jae
call
adc
mov
mov
push
xor
mov
aaa
movsb
stos
add
adc
add
lods
lock
aas
loop
pop
mov
xchg
arpl
fwait
adc
fidivrs
int
mov
daa
push
clc
add
push
mov
pusha
jnp
adc
clc
mov
mov
test
or
mov
call
push
fidivrl
mov
sbb
mov
mov
aam
mov
sbb
mov
scas
repz
push
add
repz
push
addr16
popa
adc
xorb
loope
gs
fxch
fisubs
cld
aam
mov
inc
push
fistps
xor
or
out
sub
addr16
sub
scas
xlat
jne
push
aaa
sar
jns
push
test
jae
inc
jmp
inc
mov
aad
add
sub
push
cltd
adc
movsb
aam
je
add
out
iret
mov
xorb
mov
orb
imul
cmp
xchg
mov
jg
pop
lcall
and
cmc
sbb
aaa
xor
pop
mov
pop
jb
cmp
add
and
push
jge
dec
pop
cmp
cli
in
scas
ret
dec
movsb
jns
rcpps
mov
pop
cmp
jns
ss
fdivrs
outsb
or
in
out
push
pop
pop
aam
nop
out
cli
lock
or
push
ret
pop
jno
mov
xchg
add
leave
jmp
pusha
int
fwait
inc
jg
clc
cld
testb
les
sti
das
mov
jg
repz
dec
sbb
fs
dec
movsb
mov
pop
sbbb
sub
mov
mov
std
jg
xchg
fidivs
xchg
sub
push
inc
xor
lods
mov
fstpt
or
jno
push
mov
push
cld
les
mov
pusha
jecxz
mov
inc
sbb
fwait
insl
inc
add
pop
mov
jecxz
nop
mov
mov
scas
sub
mov
mov
push
sbb
stos
add
jbe
call
shlb
push
sub
fwait
outsl
jo
xchg
push
lret
into
popa
in
inc
addl
mov
jecxz
pushf
inc
gs
mov
aaa
xchg
fisubrs
mov
enter
xor
movsl
loop
adc
push
clc
lock
push
andb
or
mov
iret
xor
cmp
push
pop
in
mov
sub
aaa
fadd
dec
insl
nop
addr16
lret
mov
xchg
push
pusha
xor
xchg
add
popa
jl
adc
push
fwait
nop
xor
sbb
int
adc
out
outsl
pop
cmp
inc
aaa
jo
fistps
jae
cmc
dec
mov
dec
loop
cli
jmp
push
push
mov
pop
int
lcall
dec
push
sbb
cmpsb
jl
push
clc
in
addb
mov
clc
dec
into
std
sub
ffreep
clc
sub
rolb
fbstp
jnp
and
jg
daa
loopne
or
cmpsb
addr16
sbb
hlt
ret
movsb
dec
push
cld
bound
push
mov
mov
add
test
loopne
ja
or
repnz
xchg
call
hlt
mov
inc
adc
movsb
xor
cli
and
into
in
fiaddl
mov
pushf
imul
lea
out
adc
daa
mov
lahf
pop
call
mov
test
nop
cmp
add
pop
mov
sarb
xor
cmp
mov
or
insb
jbe
mov
xchg
inc
cld
sub
cmp
aaa
jnp
lds
test
cld
rcrl
sbb
mov
imul
pop
cmc
mov
push
sub
pop
aam
addr16
mov
xchg
nop
jmp
aaa
jge
xor
mov
outsb
les
scas
jbe
jg
jb
addr16
sub
shrl
sbb
in
inc
pusha
cmp
cwtl
xlat
andl
jp
pop
xchg
push
sahf
addr16
xchg
jb
inc
mov
call
movsb
cmp
jns
inc
popa
aaa
mov
loop
mov
nop
test
adc
jmp
icebp
test
int
call
push
dec
xor
icebp
mov
and
cmpsb
jb
xchg
mov
cli
push
mov
lcall
sbb
nop
push
arpl
into
and
pop
insl
jle
rorl
and
xchg
mov
pop
in
cmp
cmp
outsb
sub
icebp
mov
enter
push
ds
jle
les
fimuls
int3
in
pop
sbb
in
push
or
shl
dec
xchg
js
inc
pop
lcall
push
xor
sti
xchg
outsb
shrb
aaa
jo
mov
sub
call
push
popl
sub
imul
subl
inc
jecxz
nop
ret
inc
mov
fistpll
mov
cmp
xorl
xchg
iret
lahf
xchg
mov
mov
inc
pusha
addr16
mov
dec
shl
or
imul
or
sub
xchg
lea
imul
loop
test
jnp
clc
cld
mov
and
filds
adc
push
faddl
ficomps
fldpi
sub
mov
push
lods
adc
xchg
sbb
call
fbld
jno
inc
adc
rcrl
hlt
inc
xchg
lahf
xor
loop
mov
iret
and
inc
test
xchg
adc
mov
sub
outsl
cld
stc
aaa
js
dec
push
and
aam
mov
inc
fimull
pop
aaa
push
jmp
add
jns
inc
xchg
push
mov
insb
mov
and
cmp
lret
stos
mov
lahf
pusha
jne
xchg
dec
insb
mov
adc
decl
arpl
insb
pop
mov
mov
mov
mov
insb
into
and
push
jecxz
lock
and
mov
loopne
fidivrs
mov
loopne
inc
xchg
or
in
sbb
cmc
je
or
loope
mov
test
mov
sbb
test
push
jb
or
popa
nop
sahf
pop
out
stos
push
jl
xchg
mov
mov
sub
rorl
dec
das
adc
insl
or
loopne
push
jb
cmp
mov
jp
aas
or
nop
mov
pop
hlt
lods
das
mov
ja
cmp
xchg
mov
ss
std
lods
loopne
or
xchg
lods
jns
fwait
xchg
cmp
icebp
fwait
clc
mov
test
rorl
enter
jl
aam
cli
push
add
in
add
fldt
sub
dec
mov
out
fcoml
fs
movsl
out
imul
aas
mov
push
fsubrs
xchg
inc
pop
push
lods
pop
lcall
mov
add
icebp
nop
movb
jno
rcll
cmp
aaa
cli
bound
adc
into
xor
mov
mov
ds
das
mov
bound
pop
adc
xlat
fstl
adc
inc
scas
cltd
xchg
push
jns
push
lods
stc
mov
ljmp
popf
add
mov
addr16
inc
ficoml
and
mov
and
jno
loopne
movsl
cs
jg
push
fistpll
mov
mov
ror
mov
inc
lea
xlat
pop
ljmp
sub
aaa
pop
iret
cmp
gs
and
das
sub
or
lods
xor
mov
imul
adc
je
subl
fnsave
and
arpl
fidivl
test
sbb
int
out
adc
xchg
jle
repz
movsb
rorl
movsl
sub
jnp
pop
ss
pop
aad
dec
cmp
add
pop
and
or
out
aaa
adc
xlat
cmpps
out
pop
mov
jae
push
and
mov
repz
cmp
leave
or
ret
adc
xor
iret
cmc
das
das
jg
loopne
xor
sbb
inc
cmpsl
popf
adc
and
or
dec
pusha
xchg
loopne
mov
and
or
adc
mov
shll
pop
or
movsb
inc
daa
jns
adc
dec
insl
ds
lahf
xor
inc
xor
mov
nop
adc
cmp
and
xchg
stc
scas
bound
jmp
jge
sbbl
rolb
pop
and
outsl
jle
jns
addr16
xor
loopne
icebp
jb
push
pop
mov
push
cmpsb
jbe
test
cmc
push
jns
dec
pusha
xchg
outsb
and
movsl
enter
xchg
fsts
or
movsl
cli
cmc
adc
aas
or
mov
jbe
jbe
dec
shlb
movsb
xor
int
pop
out
orb
mov
nop
or
call
clc
mulb
je
cmpb
sarl
aaa
cwtl
or
insl
sub
xor
adc
mov
addr16
cwtl
push
jg
icebp
stc
inc
filds
xchg
adc
test
test
or
ja
cmp
aam
mov
shlb
jne
push
push
ret
sub
lret
adc
fstps
jb
clc
xchg
or
inc
jbe
and
dec
out
pop
cmp
cs
inc
call
int3
pusha
hlt
out
inc
imul
jmp
jns
and
push
das
push
mov
pushf
and
clc
dec
mov
push
fwait
push
add
repz
jbe
jne
cmpl
cmp
xor
out
sbb
mov
loopne
dec
cs
insl
xchg
rolb
outsl
adc
mov
push
jns
push
push
and
add
inc
test
xor
les
ja
push
imul
jbe
aaa
jo
imul
pusha
inc
xor
pop
and
sbb
aaa
shrl
jg
dec
xor
mov
inc
pop
push
ds
dec
mov
cmpsb
call
in
nop
inc
enter
jl
ret
in
adc
adc
enter
cld
cmpl
dec
aaa
popf
mov
stos
push
push
lods
pop
sub
and
jge
mov
imul
inc
mov
das
sbb
lcall
fcoml
sbb
rorb
std
xorb
push
ds
clc
int3
jp
shll
or
shll
in
lock
mov
ds
in
or
mov
testb
roll
jg
adc
daa
ja
sub
stos
in
clc
out
xchg
test
sbb
dec
cmc
in
mov
jo
or
rcll
out
movsb
cli
inc
mov
sub
andb
sarl
call
iret
das
push
jne
sub
cmp
lods
mov
test
cmp
aad
xor
movsb
enter
ja
aaa
mov
sub
iret
mov
in
cmpsb
sahf
lds
les
xor
jl
sub
adc
mov
hlt
icebp
incl
int3
das
sub
cmpsl
gs
and
cltd
mov
xorl
clc
cld
movsb
sbb
mov
loopne
nop
adc
add
mov
sbb
les
int3
xor
in
add
out
sub
scas
out
fs
push
jecxz
add
fmull
mov
inc
and
inc
mov
push
fsts
clc
out
adc
nop
insb
adc
inc
push
or
pop
dec
mov
bound
adc
repnz
cmc
pop
lcall
or
add
sbb
or
js
or
rcrl
jb
fsub
aad
or
sub
cmp
push
lcall
xor
fsubr
aas
pop
xlat
adc
jns
hlt
mov
adc
pop
cld
insb
mov
and
cs
mov
jne
sbb
leave
pop
in
sbb
cmp
es
pop
mov
sbbl
ret
test
aaa
jle
adc
cmp
popa
push
rorl
aam
xor
push
inc
jmp
sub
add
dec
sahf
cmc
dec
lea
clc
lret
movsl
mov
les
xchg
sti
pop
or
cli
lea
jbe
sti
cwtl
jae
inc
aas
rolb
sub
into
jne
pop
pop
xor
addr16
jl
jmp
xor
sub
out
pop
cmp
pop
mov
adc
xor
out
mov
popa
lods
inc
mov
in
sub
int3
outsl
sar
lea
mov
jo
and
les
enter
pop
loope
repnz
cmpsb
out
mov
mov
mov
int
mov
mulb
mov
add
fildll
mov
pushf
mov
and
push
icebp
iret
repz
imul
xchg
test
out
mov
mov
jbe
test
lahf
lds
cmc
pop
das
xchg
mov
jge
and
ja
test
leave
mov
clc
daa
adc
pop
clc
ror
cld
push
jg
ret
rorb
mov
repz
add
jg
pop
xor
cmp
jl
ficoms
pusha
hlt
or
and
shr
push
loope
mov
pop
loope
ret
add
dec
cld
add
inc
sub
mov
push
inc
jnp
loopne
lds
pop
rcrb
lahf
das
add
and
sub
gs
nop
data16
das
adc
jmp
jno
iret
ljmp
je
adc
pop
or
cmp
fwait
popa
repz
fadds
sub
daa
daa
sbb
cs
jns
fnstsw
mov
icebp
ljmp
inc
or
pop
pusha
shrl
or
jl
jnp
sbb
xchg
sbb
in
mov
call
pusha
xlat
testl
add
jno
movsl
jbe
mov
xchg
lods
in
test
xor
in
adc
jecxz
jne
std
in
xor
inc
imul
std
mov
sub
loope
cmpb
fists
inc
lea
pop
ds
inc
dec
mov
mov
and
aaa
jg
aaa
adc
xlat
and
mov
jne
push
fdivs
out
pushl
push
les
mov
clc
shlb
movsl
sub
adc
in
mov
mov
neg
jb
xchg
cmp
mov
movsb
jle
popf
in
push
xchg
lods
clc
mov
orl
fs
add
jge
inc
cmp
and
idiv
arpl
addr16
jge
pusha
pop
push
nop
std
orb
cli
pmaxsw
xor
je
lock
iret
rcrb
loopne
clc
in
lret
pop
fwait
pop
mov
mov
fldcw
enter
adc
adc
sub
adc
and
and
add
fsubrs
dec
xchg
or
and
xchg
jge
push
aas
push
xlat
in
pop
dec
daa
fs
cmpsb
push
outsl
sub
addr16
sbb
add
lret
or
dec
mul
cmp
testl
cld
test
sbb
in
mov
int
loop
movsb
adc
arpl
pop
cli
out
les
fcmovbe
fs
dec
xchg
xchg
aaa
mov
bnd
lods
add
dec
ljmp
aam
add
loopne
jae
fdivs
rcrb
mov
fbstp
pushf
inc
dec
stos
or
sbb
out
inc
movb
mov
fwait
insb
mov
call
jbe
fcomp
sub
repnz
push
adc
bound
cli
cli
mov
mov
sbb
mov
inc
imul
pop
jl
mov
inc
clc
mov
out
xor
icebp
repnz
movsb
dec
pop
mov
jge
or
jo
and
out
stos
pop
lds
jge
ja
fld1
push
filds
or
sub
mov
inc
push
mov
outsb
movsb
jg
mov
mov
jne
xor
jb
filds
cmc
ret
or
pop
por
dec
xchg
inc
push
jmp
xchg
dec
lret
pop
xor
ds
inc
xor
ja
inc
xor
lods
icebp
loopne
ja
nop
pop
cwtl
std
xor
sarl
xchg
jnp
call
mov
xor
or
cmp
and
fcmovb
das
jge
lods
jbe
xchg
outsl
adc
mov
mov
pop
cmpsl
std
je
aad
adc
xchg
rorl
add
lods
inc
dec
jbe
mov
and
js
inc
push
ficomps
mov
add
ljmp
mov
sar
ror
movsb
je
and
xchg
pusha
mov
nop
dec
aas
call
lret
das
cli
pop
mov
mov
sbb
or
pop
out
mov
ljmp
fistps
xlat
mov
js
test
push
mov
pop
jge
or
rcrl
jns
lahf
iret
and
cld
int3
sbb
cs
pop
xchg
jecxz
ds
fsubr
xchg
repnz
popl
pop
scas
adc
jge
cmc
add
adc
pop
mov
cmp
sub
int
jl
daa
xlat
cmc
inc
mov
push
push
jae
mov
mov
xchg
ljmp
ja
nop
xor
lea
cmpsb
idiv
nop
fwait
test
pop
push
out
mov
adc
daa
ljmp
jae
aaa
out
loop
aaa
fadd
adc
aas
daa
xchg
loopne
loopne
mov
dec
push
xchg
pop
aam
lret
mov
ret
push
push
push
adc
jg
out
nop
inc
sub
fisttps
jbe
jno
xchg
mov
negb
push
cmp
movsb
xor
pop
hlt
aas
loopne
cmp
or
or
mov
or
loop
jae
xchg
add
dec
or
loope
or
clc
mov
movsb
mov
add
xchg
inc
or
pusha
xor
adc
mov
xchg
pusha
test
dec
inc
fistpll
cld
mov
sub
fsubl
push
xor
cmp
sbb
adc
xchg
hlt
pop
and
outsl
inc
cmpb
insl
sbb
stos
ljmp
jecxz
fwait
sbb
das
adc
in
icebp
sub
dec
lcall
or
lcall
pop
push
call
ds
jmp
pop
push
stc
lahf
mov
nop
test
cld
xlat
xchg
fst
xor
je
sbb
jmp
or
nop
fwait
aas
jo
jb
add
and
dec
out
ljmp
or
xchg
addr16
add
sarl
call
push
mov
je
aaa
repz
dec
fs
call
cmp
cld
pop
jbe
cmp
gs
fwait
sub
pop
call
cwtl
out
sub
loope
fwait
mov
clc
cmp
popf
mov
ret
ja
mov
popa
ds
addr16
add
mov
fiaddl
dec
pop
call
cmpsb
mov
xor
insb
xlat
mov
stos
adc
ret
jl
mov
mov
dec
pop
les
xor
adc
push
stos
xchg
sub
cli
add
jle
mov
mov
add
call
push
mov
pop
shl
adc
and
aas
js
sub
test
push
fsubrs
scas
sbb
push
popf
mov
mov
loopne
inc
test
xor
xchg
add
mov
sbb
mov
addr16
rorl
adc
and
sbb
xorb
aam
xor
push
lea
mov
cmp
pop
jle
das
mov
xor
fsubs
or
loop
or
lret
hlt
ja
out
loop
ss
lods
imul
xor
or
fadds
insl
ret
add
mov
dec
mov
clc
je
shrb
and
jle
jle
pushf
loopne
js
push
and
dec
gs
xchg
dec
inc
push
add
push
pop
and
fwait
pop
insl
mov
pop
aam
outsb
inc
iret
inc
call
movb
or
xchg
push
fadd
and
mov
pop
les
nop
call
mov
inc
sbb
enter
cmp
mov
imulb
cmp
or
push
cmpsb
sti
pop
mov
test
jbe
std
xor
rcr
xor
jnp
clc
not
sub
hlt
xor
mov
sub
mov
mov
xorl
mov
jg
adc
push
inc
ljmp
xor
inc
fsubrs
mov
add
icebp
pop
ljmp
loope
and
push
jg
sub
add
leave
loope
inc
lock
and
in
cmpsb
lock
jle
pop
popf
pushf
cmp
std
or
push
out
mov
jge
sbb
cmpsb
xor
mov
sub
fdivrp
fsub
add
inc
lods
mov
mov
push
mov
pop
insb
mov
fistl
jne
adc
or
stos
mov
aam
pop
and
adc
sbb
xor
fcmovne
jnp
movsl
push
cmp
rolb
das
lock
mov
mov
data16
leave
sub
je
rcrl
or
sub
and
jmp
jns
cmp
push
pop
and
xor
inc
lahf
sub
push
lahf
inc
cmpsl
nop
mov
hlt
mov
pop
test
call
mov
cmpb
shll
mov
setbe
push
sub
and
jmp
dec
sbb
mov
inc
mov
sarl
sti
mov
jle
ror
sub
or
or
mov
ror
jns
jbe
fiaddl
fwait
subl
jp
nop
scas
add
mov
inc
mov
cmp
pop
insl
or
movsb
or
or
repnz
jg
cld
pusha
and
in
movsl
repnz
and
repnz
lock
mov
mov
jae
mov
mov
fsubs
or
mov
stos
add
addr16
mov
add
adc
push
jns
je
popf
dec
mov
or
push
movsl
xor
xor
nop
inc
cs
cld
sarb
or
outsl
xor
fwait
cmovae
gs
out
jg
test
xchg
lret
fwait
sub
ljmp
or
pop
mov
movsl
jns
pop
add
rol
mov
repnz
je
adc
xchg
divb
add
pop
aas
jb
repnz
xorl
outsb
lret
or
and
sarl
nop
inc
or
mov
mov
lret
mov
mov
rcll
pop
or
dec
hlt
mov
call
es
mov
in
and
xor
cmpsl
std
push
mov
inc
testb
push
cmpb
xor
jg
jle
mov
mov
subb
sbb
fwait
sbbb
dec
aad
pusha
add
movsl
scas
or
push
out
mov
xor
pop
and
sub
push
out
jle
fcompl
imul
mov
lods
insb
xor
add
add
inc
and
mov
add
test
and
push
xchg
mov
imul
fildll
sbb
inc
jno
daa
adc
cli
fsub
push
and
mov
or
pop
bound
and
or
cmp
jmp
insb
sub
and
or
and
enter
xor
sbb
stos
pop
xchg
xchg
fldcw
adc
in
pushl
out
jns
in
mov
imul
sbbb
push
das
mov
jecxz
out
movsl
js
mov
loope
jecxz
pop
nop
adc
fwait
sub
inc
mov
or
jnp
mov
rolb
cli
pop
scas
sahf
aas
cmp
ljmp
push
and
fdivrp
repnz
iret
test
jno
sbb
sub
test
icebp
adc
repz
aas
sbb
int
pushf
mov
add
nop
js
sbb
pop
cld
push
mov
sbb
cmp
insl
cwtl
ja
insb
xor
xchg
dec
sub
mov
or
imul
and
ss
jo
lcall
mov
mov
ljmp
call
add
imul
iret
sbb
out
adc
push
fidivl
fwait
clc
add
xor
ffreep
jmp
sar
pushf
inc
cmovo
aam
nop
pop
maxps
fwait
push
push
jb
adc
loop
inc
push
sbbb
push
add
rolb
shll
or
adc
mov
subb
sub
pop
xor
das
aaa
addb
and
dec
push
cld
mov
xor
iret
push
fsubl
mov
lret
fwait
mov
xchg
adc
cld
cmp
mov
push
add
testb
adc
sbb
push
fidivs
ja
or
xchg
push
sbb
data16
mov
outsl
cmp
pop
adc
inc
gs
jb
inc
cmp
pop
mov
cmp
sahf
sub
inc
fwait
loope
push
and
and
ljmp
lahf
add
mov
aad
sbb
pusha
pop
xchg
sub
mov
xor
lahf
fadd
lds
push
dec
inc
shll
imul
adc
jae
mov
mov
add
xchg
fwait
repnz
jne
pop
imull
sub
imul
pop
cmpsl
pop
dec
xchg
daa
pop
cmpsl
pop
push
xchg
push
push
xchg
insl
dec
mov
adc
and
push
sbb
add
mov
push
xchg
cli
aaa
loop
jne
fwait
jecxz
out
mov
mov
xchg
enter
mov
loopne
iret
xor
sub
adc
pop
push
mov
js
ljmp
fwait
add
sbb
jne
rolb
fwait
pop
and
push
cld
xchg
js
aaa
imul
rcl
dec
inc
and
sub
outsb
pop
fwait
sbb
pop
cmc
cli
addr16
addr16
orb
or
cli
push
pop
je
jge
lods
loopne
inc
mov
push
sbb
leave
pop
lds
inc
aad
lods
cmp
jge
loope
mov
mov
jns
lret
jg
pop
loop
arpl
test
sub
or
mov
out
xlat
movsb
mov
outsl
pop
stc
mov
arpl
jb
xor
xchg
mov
inc
or
pop
cmpsb
fcompl
loopne
out
mov
cs
test
lds
push
add
cld
jecxz
cmpsb
mov
push
jle
lcall
mov
xchg
aaa
push
mov
mov
insb
addr16
arpl
jge
loopne
add
xchg
xchg
jno
dec
aad
push
outsb
adc
jecxz
mov
or
das
pop
dec
fdivp
and
test
and
push
sti
sbb
imul
push
fwait
jp
pop
js
xor
adc
out
xor
sbb
push
dec
out
cld
mov
testl
call
sbb
jg
add
xor
add
mov
dec
cmpsb
out
xchg
inc
inc
cli
sbb
dec
and
xor
das
hlt
aas
lahf
add
dec
fwait
mov
pusha
cli
mov
outsl
dec
dec
mov
sbbb
jl
std
inc
fwait
sbb
inc
insb
mov
dec
out
inc
inc
fwait
cld
aaa
int3
jl
push
ret
frstor
fimull
sub
je
mov
dec
sar
and
adc
or
xchg
inc
add
mov
js
mov
mov
mov
scas
pop
enter
das
cli
xor
loopne
std
xchg
or
dec
fadds
loopne
das
inc
mov
lahf
xor
jl
pop
outsb
push
in
popf
add
jg
xor
jg
aaa
mov
sub
jne
in
jae
xor
test
shrb
sbb
mov
sub
mov
ss
dec
in
sbb
lods
dec
outsl
lock
and
into
fdivl
adc
das
jg
inc
les
xchg
sarb
xchg
pop
jmp
mov
and
adc
fcmove
and
filds
lock
mov
push
cmp
or
sub
sub
lret
push
mov
dec
sub
ljmp
sti
adc
inc
movsb
push
sbb
adc
adc
adc
out
jp
lret
push
scas
pop
sub
iret
aaa
xor
xchg
jmp
pop
adc
pop
and
push
jb
loope
insb
fisubrs
mov
mov
adc
iret
psubusw
cmp
divl
stos
mov
roll
insb
xchg
daa
scas
mov
outsb
mov
lods
mov
int3
inc
and
in
dec
push
xorl
rcrl
ret
jae
movsb
push
and
ss
pop
inc
or
mov
loopne
jp
les
and
stos
pop
adc
aaa
mov
popa
cs
das
cli
inc
mov
lahf
rcr
push
insl
pop
lcall
inc
cmc
fildll
test
add
push
gs
outsb
push
ljmp
adc
arpl
je
outsl
outsb
inc
imul
jle
in
divb
outsl
adc
imul
jne
fcmovnbe
ficomps
imul
imul
fidivl
dec
outsb
outsw
push
adc
sub
mov
inc
jb
gs
imul
jae
jb
test
mov
jo
outsb
sub
jp
insb
push
popa
push
shll
imul
sub
mov
data16
cmpsb
dec
mov
push
xor
jb
jne
js
aam
mov
dec
cs
pop
xor
arpl
xor
sub
fidivrs
inc
jb
jb
or
fs
jae
dec
popa
outsl
idivb
imul
je
aas
loope
scas
mov
jb
addr16
imul
jecxz
outsl
ja
and
shll
push
jo
sbb
imul
repnz
push
inc
dec
add
add
imul
add
add
add
add
add
and
push
mov
or
or
or
adc
push
add
cmp
xchg
sub
add
push
mov
insl
rorl
pop
xchg
mov
test
lock
sbb
fnstenv
push
pusha
neg
cld
pop
sub
sbb
xchg
push
mov
or
sub
xchg
stos
nop
jl
nop
outsb
lods
and
or
push
push
xchg
rcrb
mov
inc
inc
out
dec
mov
add
push
sbb
and
lea
inc
jae
or
movsb
add
or
push
inc
repz
mov
pop
mov
ret
sub
sahf
cwtl
aad
daa
xor
push
scas
movsb
push
pusha
or
add
incb
jp
add
add
add
incl
add
add
inc
add
inc
xchg
rolb
add
jmp
or
ret
mov
push
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
scas
inc
add
loopne
decl
or
mov
add
adc
adc
add
mov
add
ljmp
cmp
add
add
je
mov
mov
idiv
mov
dec
rolb
and
adc
and
add
adc
pop
sti
pushl
push
or
and
test
add
inc
nop
add
adc
xorb
rorl
dec
sbb
das
and
jmp
call
or
je
adcl
adc
or
add
orl
idiv
mov
orb
cmp
je
mov
in
incl
ret
mov
pushf
mov
add
mov
ret
dec
into
loope
js
cmp
add
xor
aam
or
add
mov
insl
sti
out
add
insb
add
jbe
cmpsl
add
fistpll
rolb
pop
add
inc
add
add
add
or
mov
outsb
add
dec
dec
fisubrs
xchg
add
push
mov
cmp
push
testb
subb
jg
cltd
lea
stos
sti
addb
push
pop
sti
add
add
add
cmp
int
mov
add
sbb
roll
repz
popl
test
pop
add
add
test
lret
add
add
and
lock
mov
popa
roll
insb
mov
lds
pop
pop
sub
push
lret
out
pop
mov
shrb
fst
xor
sbb
pop
xchg
das
outsl
into
sub
xlat
std
mov
js
sarb
cmp
pop
ja
cmp
in
push
mov
add
pop
inc
or
bound
jo
sbb
andl
and
mov
xchg
cmp
adc
cs
add
xor
cmp
xlat
add
cld
jle
jns
out
jp
pop
sbb
add
lcall
push
add
pop
jle
cld
add
push
pop
int
rolb
hlt
add
addr16
adc
popa
loopne
or
inc
test
fst
shll
fwait
imul
imul
pop
sub
dec
sub
popa
pop
mov
stc
or
mov
add
add
aaa
filds
inc
inc
clc
verw
sub
sbb
nop
test
sahf
jg
dec
add
jb
add
dec
adc
decl
pop
mov
test
xlat
dec
mov
adc
or
add
icebp
outsl
enter
scas
add
adc
adc
rorb
jo
popaw
ret
xchg
inc
push
jp
icebp
test
insb
and
fdiv
ja
inc
push
jnp
dec
cmpb
insb
lret
test
cmp
in
ret
inc
loope
fldt
add
dec
cmp
cwtl
mov
dec
mov
add
mov
push
scas
mov
test
and
je
xchg
orb
lcall
push
inc
add
sbb
and
mov
faddl
out
dec
mov
push
movsb
add
inc
js
or
sti
into
add
jecxz
jne
add
mov
out
jbe
or
sub
xchg
sahf
adc
jo
or
idivl
push
lea
and
pop
cs
out
in
push
jb
fstps
inc
or
add
ret
xor
lea
sbb
cld
inc
pop
pop
mov
into
sub
pop
addr16
imul
cmp
faddl
mov
clc
xlat
sbb
cmp
inc
push
or
lcall
adc
jg
in
fcmovb
add
add
daa
ret
arpl
xor
sub
int
in
add
inc
adc
cs
cmp
mov
sub
sbb
push
adc
sbb
add
push
sbb
call
sbb
mov
mov
mov
cmpsb
paddusb
ds
call
inc
lods
shlb
pop
inc
lret
fistpll
lahf
dec
mov
outsl
ljmp
inc
dec
xchg
sub
xorl
int
fldl
add
je
lock
je
adc
jecxz
and
test
sti
sbb
mov
lcall
mov
and
ret
nop
int3
leave
lcall
fistps
sbb
or
scas
leave
mov
stc
addl
inc
sbb
lcall
push
into
mov
lahf
xchg
jb
push
scas
fcom
in
jmp
out
xchg
out
loopne
xchg
mov
or
mov
lcall
mov
mov
sarb
cmp
pop
mov
xlat
pop
outsb
lret
pushl
rol
dec
out
fdivr
sahf
pop
sti
call
xchg
decb
leave
popf
out
js
mov
rorl
jp
xor
cmp
sahf
mov
fcoml
rclb
pop
add
rcrl
add
pop
or
movsl
rclb
adc
inc
cs
ret
loop
mov
mov
inc
jb
scas
mov
pop
xor
and
imul
or
dec
fldl
fstl
sar
mov
es
in
add
icebp
xor
fmul
sub
cmp
sbb
cli
cmpsb
insl
inc
push
pusha
push
xchg
mov
cmc
aaa
jb
mov
push
push
mov
sbb
xor
jno
jb
scas
pop
movsb
xchg
pop
xchg
or
and
and
negl
pusha
xchg
lods
ljmp
jg
rcl
clc
outsl
add
lcall
jg
dec
adc
test
jge
pop
arpl
stc
adc
repnz
sbb
inc
jmp
cwtl
ret
or
jmp
inc
mov
clc
jne
shl
ljmp
test
or
in
sti
movsb
clc
xchg
push
or
sbb
push
incl
push
lods
pusha
jmp
adc
mov
jl
pop
mov
pop
pop
idivl
fldl
mov
insl
mov
ret
jp
mov
fsts
pusha
ja
insl
or
popf
addl
test
sbb
xchg
or
jne
int3
pop
sarl
out
lahf
or
lods
subl
filds
fs
insb
and
lods
or
adc
aam
mov
stc
push
or
or
mov
notl
pop
dec
jmp
push
mov
addr16
movsl
sbb
aaa
pop
subl
cmp
loop
ret
xlat
jg
cs
js
pop
pop
sub
mov
push
cmp
dec
xchg
icebp
lds
sahf
cmp
pop
data16
rolb
iret
dec
cs
movsl
in
pushl
mov
leave
add
cmp
shlb
inc
ljmp
das
std
xor
sbb
lret
mov
inc
addr16
mov
das
aas
pop
xor
xchg
popa
stc
test
cs
cmp
loop
push
sti
ret
xchg
or
sub
dec
pop
dec
aad
add
ss
xchg
jle
mov
pop
mov
push
stc
arpl
add
mov
std
add
aam
add
cmp
mov
ss
mov
fsave
popa
dec
mov
cmp
jne
out
add
push
inc
add
and
fisubl
mov
sub
outsl
sbb
orb
adc
pop
jge
imul
cmp
push
xchg
mov
in
out
push
in
sub
je
es
call
in
inc
test
mov
push
fsubl
mov
mov
push
adcl
outsl
lcall
push
cmp
fsubs
movsb
outsb
cmpsl
mov
in
jnp
rcrl
xchg
xchg
icebp
sbb
inc
inc
jae
fdivr
gs
outsl
arpl
sbb
ja
aas
ficomps
std
fisubrl
negl
pop
inc
jecxz
mov
adc
pop
hlt
xchg
jp
mov
sbb
ret
push
cmp
cmpsb
cs
aam
je
in
dec
daa
fucomip
xor
flds
jge
sbb
add
rcrb
das
int3
mov
sbb
mov
mov
xchg
push
mov
ds
cs
loop
xor
sbb
sbb
or
push
xchg
mull
fsubs
adc
aam
ljmp
fstpt
lock
or
popa
fdiv
and
or
lahf
and
xor
cmp
xchg
in
lods
fwait
jb
add
ficoml
leave
shlb
inc
xor
jne
ret
xchg
pusha
sub
and
mov
ds
div
sbb
xchg
inc
add
stos
add
call
adc
adc
push
mov
test
jbe
test
sub
xchg
jo
jl
mov
mov
mov
test
sub
sub
mov
xchg
jmp
push
sahf
data16
insl
fdivl
or
add
sub
jb
xchg
mov
pop
and
sbb
mov
movsb
fs
push
xchg
mov
lock
mov
xor
nop
jecxz
mov
dec
pop
mov
andb
incl
mov
or
xchg
cs
inc
cwtl
pushf
add
outsb
cld
sub
mov
mov
scas
out
pop
push
test
outsl
inc
adc
inc
mov
or
outsb
xchg
adc
jl
leave
addr16
or
shl
xor
and
xchg
mov
cmp
daa
cmpsb
xchg
sbb
push
ret
push
fisttpl
outsl
mov
fsubr
pushf
mov
bound
xchg
outsb
outsb
imul
pop
insl
outsb
cmp
mov
pop
lea
gs
jg
lcall
lcall
in
fsubl
mov
xchg
fdivp
add
jl
gs
mov
mov
jmp
ljmp
mov
sahf
sub
ja
aam
xorb
xchg
lea
pop
imul
iret
imul
jge
jbe
jmp
pop
cwtl
jns
int
jp
icebp
addl
cmp
negb
aam
mov
jne
jnp
fs
les
mov
stc
loope
and
testb
mov
xchg
mov
or
jp
insl
mov
jl
and
sub
in
frstor
cmp
iret
fisttpl
xchg
adc
xor
mov
inc
clc
fdiv
popa
dec
movl
dec
addl
scas
std
push
pop
js
inc
mov
cmpsb
lea
iret
and
test
sti
fmull
inc
lods
insl
and
mov
and
mov
sbbb
outsb
ss
pop
js
insb
addl
mov
arpl
mov
into
js
or
std
aam
popa
aaa
loope
push
daa
push
mov
xlat
jmp
mulb
push
inc
mov
lahf
dec
cld
fidivs
pusha
xchg
sbb
dec
imul
sbb
cld
loop
or
sub
xchg
outsb
pop
dec
pop
ljmp
jne,pn
rclb
inc
sub
xlat
push
insb
add
push
test
and
es
jb
add
push
pushf
dec
fisttpl
divl
inc
gs
fs
add
sbb
sbb
mov
out
mov
or
add
push
loop
fwait
or
jo
add
inc
sbb
icebp
pushf
jecxz
lcall
fmuls
push
mov
sti
arpl
sbb
xor
xor
sbbl
test
add
adc
je
mov
shl
gs
add
mov
or
xor
in
inc
outsb
mov
pop
xorb
sub
mov
pop
xor
fucom
pop
insl
xor
icebp
call
test
sub
dec
cmp
add
cmp
jg
clc
mov
xchg
pop
fs
sub
xchg
lods
imul
mov
popf
mov
lcall
cmc
fs
fwait
mov
xchg
lock
lret
fldt
cwtl
bound
pop
test
push
popf
xor
popa
or
rorb
push
out
sarl
aaa
out
and
mov
cmp
inc
mov
adc
xor
mov
jg
lds
nop
fiaddl
pop
cwtl
icebp
mov
insb
arpl
in
sub
ror
leave
pop
ficompl
insb
testl
clc
adc
jbe
out
or
and
xor
cmp
les
pop
xchg
addr16
mov
cld
adc
mov
cmp
in
sbb
xchg
push
push
adc
jbe
sub
loope
movsb
jmp
cmp
les
xchg
mov
mov
bound
out
add
pop
or
cmp
pop
xor
sub
cmpsl
stos
lret
lods
out
cmp
jo
sbb
scas
mov
inc
push
pop
mov
cmp
ret
cmp
dec
push
mov
icebp
cmp
xor
xchg
inc
ja
fldt
shll
insb
mov
or
enter
pop
nop
adc
movsb
cmc
push
sub
push
es
and
pop
and
mulb
pop
fadds
mov
aaa
pushf
xor
mov
sub
movb
in
call
dec
adc
sbb
pop
lret
jg
cs
lock
push
push
xchg
loop
mov
cmp
int
xchg
roll
jge
push
cmp
negl
add
mov
add
mov
mov
test
lret
clc
fdivrl
jecxz
ret
test
cmp
in
cmp
inc
lods
sbb
bnd
divb
fstps
andb
arpl
outsb
mov
mov
mov
mov
mov
pop
push
jg
inc
rcrl
scas
push
mov
shlb
loope
push
mov
pop
sub
sub
sbbl
jl
sub
mov
out
push
push
shlb
push
dec
ss
shll
fisttpll
or
push
mov
mov
rcl
fsubrl
jp
push
rolb
pop
dec
cmc
sahf
cmp
rcr
xchg
sub
loopne
rorl
dec
std
sahf
and
icebp
lods
mov
jge
or
or
xchg
pusha
inc
sti
push
sub
arpl
in
fdivr
mov
fbstp
testl
push
adc
jae
inc
mov
or
sbb
xchg
outsl
sub
int3
outsl
jge
adc
xchg
mov
ret
xor
jecxz
lret
pop
mov
or
rcr
dec
aad
mov
sub
push
int3
int
std
js
pusha
rorb
jmp
push
push
add
pop
sub
dec
mov
sbb
sbb
aam
js
inc
pop
ja
les
outsb
xchg
mov
xchg
push
mov
lock
loope
jns
out
test
mov
mov
test
jmp
imul
popf
ss
cmpb
xchg
ja
stos
fs
repnz
mov
pusha
push
mov
mov
mov
out
lahf
mov
cli
mov
mov
jp
mov
int3
xor
ret
and
mov
lods
stc
lock
jp
mov
mov
sub
xor
jnp
rorl
jo
pop
or
adc
mov
loop
iret
adc
mov
dec
xor
hlt
testb
sbb
inc
sub
lcall
pop
fcoms
xorps
jo
xlat
mov
add
mov
sub
test
cmc
inc
xchg
push
inc
push
andl
mov
dec
or
ret
cmp
sub
fidivrl
push
inc
push
and
std
insl
pop
sub
bound
mov
mov
imul
fcoms
jg
enter
or
sti
pop
cwtl
mov
mov
insl
or
or
dec
sbb
lret
ljmp
lea
jno
sub
jae
add
or
pop
push
shl
incl
fucomi
stc
aad
mov
mov
hlt
outsb
inc
jge
cmp
rol
jmp
and
imul
fldt
es
repz
cmp
xlat
fnstsw
lods
clc
and
mov
mov
and
jge
cmp
mov
xchg
out
imul
aas
ret
sub
cmpsb
pop
ret
jp
jp
pop
cmp
les
xchg
loopne
jo
push
ret
push
adc
shufps
shrl
rorl
inc
xor
js
xchg
xor
out
ret
jge,pn
loope
and
and
adc
sti
dec
fs
dec
rcll
cs
add
ret
or
dec
xor
xchg
cmp
add
mov
sbb
mov
jno
pop
es
repz
movsb
pop
sarb
mov
lret
mov
js
outsb
xchg
popa
push
mov
push
stos
rclb
push
jmp
std
mov
dec
dec
push
lds
loope,pn
das
in
ljmp
pop
and
mov
mov
adc
jecxz
jns
or
insl
mov
xchg
repz
sbb
dec
xlat
lods
dec
pop
das
xor
sahf
inc
sub
lods
adc
mov
adc
std
popf
mov
mov
in
push
ja
sti
cli
and
or
jmp
pop
clc
push
cmp
std
push
sbb
lods
pop
mov
in
or
insb
lods
sti
mov
daa
je
mov
rcr
jmp
dec
scas
movsl
pxor
js
mov
in
shll
int
mov
lds
fcomi
roll
pop
cmp
and
cltd
repz
imul
sbb
adc
aad
icebp
mov
icebp
sub
pop
xchg
dec
or
push
pop
mov
mov
movsl
ret
mov
lcall
cwtl
pop
cmp
inc
mov
add
sbb
imul
sub
mov
pop
jge
fbstp
inc
in
pop
mov
fucomip
daa
jmp
add
repnz
sub
fs
cmp
pop
xchg
fs
pop
clc
ljmp
pop
xchg
lret
dec
iret
push
psubsw
jb
ljmp
adc
sub
mov
orb
subl
lea
in
adc
outsb
jb
xchg
mov
hlt
test
cld
das
cmc
and
or
les
sbb
pop
mov
xchg
out
add
jb
and
test
ss
inc
fmul
and
adc
sub
popf
ret
stos
inc
push
aaa
jle
sub
sbb
cmp
sti
add
loop
int
pop
sbb
in
jmp
add
cld
shll
jnp
loopne
sahf
push
xchg
rcrl
iretw
sub
test
xor
jno
fldenv
cmp
mov
mov
lret
jne
shrb
inc
cltd
xchg
pop
push
xlat
push
mov
dec
leave
pop
shll
sbb
inc
sub
add
xor
insb
mov
test
inc
cmp
js
mov
jp
dec
sbb
lock
push
stos
jmp
lock
mov
fistps
scas
sbbl
add
or
jo
and
mov
cmp
lock
push
pop
xor
mov
jns
mov
mov
imul
sbb
adc
dec
cmp
and
addb
jle
lods
aad
adc
pop
aaa
mov
jb
je
stos
icebp
xchg
pminsw
xchg
cltd
mov
pop
sbb
xor
sbb
mov
lods
jge
enter
jge
mov
and
pop
sti
push
popf
or
jbe
pop
add
int3
fmull
xor
or
mov
call
daa
dec
pop
lcall
sti
out
sbb
xor
push
xor
jle
scas
push
lcall
testb
shr
loop
dec
scas
jb
xchg
popf
lods
jbe
mov
mov
adc
js
cmp
xchg
mov
mov
cmpsb
into
leave
or
ret
dec
fcompl
jl
sbb
sahf
xchg
sbb
pop
mov
sbb
cmp
loope
pop
inc
push
mulb
inc
pop
int3
enter
jbe
outsl
sub
in
inc
push
mov
je
sbb
jmp
xor
xor
ljmp
jb
sub
jp
in
sub
jle
sbb
cld
incl
frstor
in
hlt
sahf
nop
push
xor
xor
mov
xchg
sbb
mov
outsb
test
pop
pop
cmp
inc
test
sbb
xor
ljmp
ret
repnz
shrl
insb
call
sub
arpl
mov
jecxz
in
pop
fsubrs
jae
nop
jae
mov
inc
sbb
dec
clc
adc
push
sahf
stos
mov
sbb
add
pusha
popl
in
or
adc
sti
adc
int3
lock
mov
add
mov
lods
clc
mov
and
xor
mov
movsb
dec
gs
mov
outsb
mov
or
clc
ret
adc
into
jo
push
test
loop
xor
sarb
sbb
pop
inc
xchg
hlt
push
jns
mov
xchg
cmp
and
xlat
mov
fnstsw
jl
mov
test
js
cmp
stos
into
mov
sbb
push
xor
xor
std
lods
push
jbe
sbb
imul
jle
push
insb
mov
leave
add
cmpsl
xchg
shll
dec
cmp
mov
popa
jecxz
push
sysenter
addr16
inc
je
push
out
nop
sbb
xor
jp
jo
out
pop
test
je
sub
fmuls
aam
jg
mov
sub
xchg
xor
xchg
mov
in
mov
js
sbb
inc
in
sbb
ds
cmp
push
push
es
mov
fbstp
sbbb
fcompl
mov
call
sahf
push
add
or
mov
sbb
jecxz
and
enter
xlat
and
and
cmpsl
inc
ja
pop
out
scas
daa
roll
outsl
xor
test
xor
xlat
fiadds
pop
sub
dec
pop
jno
inc
repz
in
sub
cmp
xchg
push
loope
ss
mov
jl
xchg
aaa
pop
add
dec
lds
testl
shl
sub
imul
fsubrl
push
mov
shlb
mov
cmp
mov
and
sbb
les
and
hlt
add
sbb
cmpsl
xchg
push
push
or
xor
lret
rcll
sub
jmp
mov
jbe
mov
cld
std
jl
pop
loope
gs
push
mov
add
inc
loopne
out
loope
dec
jne
adc
incl
stc
jle
pop
or
xchg
xchg
sub
leave
add
mov
imul
inc
sbb
or
jle
mov
repz
dec
ret
sbb
xor
sub
shll
dec
pop
test
mov
inc
or
lret
xorb
adc
inc
cmpsl
loop
pop
repnz
mov
pop
testl
in
icebp
lock
adc
test
mov
es
mov
out
jmp
inc
fdiv
loop
and
std
dec
xor
pushf
sub
add
cmp
cmp
cmp
sbb
cmp
dec
cltd
dec
mov
inc
divb
pusha
jecxz
push
jecxz
repz
lock
sub
mov
jns
test
sbb
icebp
cs
cmp
jmp
jge
mov
sbb
sbb
repnz
out
add
paddsb
mov
arpl
xchg
inc
cmp
pop
dec
sbb
call
inc
add
ret
ficompl
sarl
mov
xchg
jg
scas
inc
roll
jns
xchg
decl
pop
mov
mov
in
in
xor
hlt
test
inc
push
lea
mov
push
xor
xor
cmpsl
pop
daa
out
or
dec
pop
adc
jo
test
push
sub
andl
bound
inc
inc
and
popa
iret
pop
dec
imul
je
sbb
push
fildl
fcom
adc
orl
push
ret
xor
jg
or
jbe
cmpsl
push
push
xor
loope
mov
iret
ret
or
cmp
xchg
adc
inc
shlb
or
mov
cmp
and
arpl
scas
jmp
sub
imul
stos
cmc
popf
fiadds
in
lds
popa
dec
mov
or
lock
scas
sti
sub
sbb
adc
xchg
sbb
insl
push
push
mov
inc
sarb
push
mov
sub
or
std
pop
packsswb
push
mov
fdivs
pop
shlb
daa
inc
fwait
loopne
dec
sti
sbb
idivb
push
mov
movsl
mov
mov
hlt
push
pop
lret
add
fsubs
loopne
loopne
sbb
jo
out
sbb
outsb
xchg
shll
int3
shlb
filds
mov
negb
cmp
sbb
cmp
invd
xor
bound
pushf
jge
mov
or
and
or
test
and
je
and
ror
xchg
and
fdivrs
jg
nop
mov
mov
pusha
test
add
add
rolb
jmp
pop
push
and
mov
push
setnp
mov
rcrl
jne
sub
pop
jg
lcall
int3
leave
clc
imul
add
cmpsl
mul
ret
fsubl
or
out
add
lret
adc
loop
add
adc
fdiv
test
push
mov
inc
out
cmpsb
in
sbb
dec
stc
fidivl
fwait
outsl
cmp
loope
aaa
pop
ret
mov
cmp
test
xchg
cmp
cmp
in
adc
mov
loope
inc
leave
sub
mov
xchg
lods
jbe
call
and
cli
in
rorl
cwtl
outsl
dec
sub
xchg
imul
pusha
iret
mov
cmpsb
sbb
jns
stc
push
lahf
mov
popa
pop
dec
and
and
outsl
jmp
mov
add
fdivrl
or
cmp
pop
mov
aas
add
adcb
dec
dec
das
inc
add
sbb
mov
je
pusha
scas
push
lock
jo
repz
xlat
mov
dec
and
push
mov
mov
sub
dec
xor
insl
repz
push
jno
push
push
pop
test
str
mov
into
out
ljmp
pop
fdivrs
xor
mov
stos
pop
lock
dec
lcall
push
mov
mov
push
mov
loope
jle
jb
iret
shrb
pop
cli
roll
adc
dec
dec
cmp
xchg
or
lahf
mov
dec
or
mov
movsl
rcrb
pop
lods
das
popf
inc
hlt
push
fs
push
loopne
popa
fndisi(8087
mov
cmpsl
daa
mov
mov
pop
push
mov
mov
adc
mov
les
lds
andb
mov
jl
jbe
or
jo
push
nop
cmpsb
xchg
lock
or
sbb
stos
hlt
hlt
addl
dec
xor
jno
push
xlat
ss
cmpb
mov
xchg
ja
ret
outsl
fwait
scas
cmp
lods
add
mov
leave
mov
xchg
test
add
sub
rcr
cmpsl
fdivrs
mov
mov
sbb
sbb
outsl
dec
add
mov
lahf
adc
add
and
js
ljmp
mov
mov
xchg
int
pop
mov
fsubrl
push
cmpl
pop
pop
add
sti
mov
mov
add
mov
cwtl
inc
adc
inc
pop
out
or
adc
divb
cmp
adc
cmp
enter
sbb
bound
cmp
std
mov
lahf
push
add
xor
push
push
and
mov
out
insb
add
stc
adcl
ljmp
inc
mov
inc
into
or
pop
push
pushf
xchg
xor
jecxz
mov
mov
popa
fidivl
stos
outsb
outsl
lcall
lcall
jle
sub
add
or
in
stos
pop
xchg
scas
or
pusha
add
dec
cmp
xchg
test
rcl
mov
cwtl
dec
lahf
xchg
add
out
jbe
outsb
lds
minps
lods
pxor
mov
insb
iret
jmp
out
jb
inc
scas
mov
pop
push
out
in
pop
push
mov
loope
mov
stc
mov
pop
fcomi
adc
jbe
in
sbbl
ja
mov
xchg
repz
and
mov
lea
popf
mov
or
dec
setge
cmpsb
mov
shll
push
outsl
mov
and
add
sar
xlat
push
or
int3
pop
jo
ret
sub
stos
push
and
outsb
das
sbb
pop
fmuls
push
test
cmp
mov
int
loop
pop
sbb
and
sbb
subl
orl
cmpsl
in
popa
mov
mov
psubd
push
mov
xchg
and
insb
push
jno
arpl
jnp
mov
int3
adc
loopne
jg
orb
pop
pause
ljmp
xor
clc
mov
lret
xor
mov
xor
rcll
xchg
fs
inc
pop
xchg
dec
shlb
jmp
imul
shrb
ja
pop
shl
add
iret
les
inc
je
mov
cmp
rorl
scas
mov
and
ffree
js
jno
sahf
dec
jle
int3
faddp
mov
cmp
test
bound
fadds
dec
pop
sub
or
inc
test
call
lahf
test
sahf
mov
fsts
and
inc
and
sub
iret
out
out
rcll
int3
sahf
mov
test
add
rclb
pop
fstl
outsl
fucomi
sbb
shrb
push
or
pop
mov
cmpsb
add
inc
psrlq
sbb
xchg
rcrb
or
daa
imul
roll
and
aas
inc
xchg
xor
pop
inc
fdivrl
mov
sbbb
push
dec
sahf
add
push
inc
inc
sub
fistl
xchg
pushf
xchg
lret
out
cmp
movsb
outsb
pusha
and
sub
mov
add
cmp
or
cld
lcall
stos
das
push
out
rolb
add
dec
daa
ss
and
add
sub
mov
xor
xchg
nop
jne
cmpsb
loopne
cld
inc
dec
les
dec
push
mov
inc
test
icebp
sub
test
jg
mov
aas
add
scas
in
fldl
inc
mov
mov
dec
lret
loop
dec
mov
insl
orb
mov
fst
incl
or
lods
sbb
ds
sub
dec
shlb
pop
sub
mov
aam
es
mov
adc
cs
cwtl
jo
pop
daa
dec
mov
jne
les
aas
sub
popf
addb
xchg
popa
lods
lods
iret
pop
insb
add
sti
dec
push
ret
mov
pop
dec
pusha
add
pop
paddsw
jmp
pop
add
dec
fisttpll
and
and
dec
rcr
or
mov
mov
jmp
pusha
repnz
std
shrb
xchg
xor
fldcw
mov
and
inc
and
inc
out
bound
mov
aam
jp
xor
add
or
and
rolb
js
clc
nop
dec
iret
inc
jmp
in
test
cmpsl
test
ja
push
dec
stos
push
sbb
jg
in
jno
jle
aaa
rorb
pop
aad
nop
mov
mov
pop
add
push
pop
pop
sub
je
mov
add
jmp
inc
xchg
pop
mov
sub
pop
mov
scas
divb
mov
je
pop
adc
popa
xchg
or
clc
cltd
sahf
mov
mov
xlat
bound
adc
and
enter
mov
adc
es
sbb
sbb
and
dec
lds
add
dec
loopne
mov
sub
cmp
stc
in
mov
or
in
adc
loop
add
sbb
pushf
or
jne
cs
inc
je
jecxz
sub
jle
lds
sub
xlat
lock
pop
es
sub
mov
aad
lcall
add
movsl
imul
mov
cs
xchg
into
xor
daa
aam
sub
xchg
and
iret
push
fimuls
imul
inc
shll
cmp
ja
loop
addr16
mov
sub
or
or
sub
or
add
leave
cmp
fs
push
cmpsl
ret
pop
push
cld
sbb
cmp
cmp
and
je
inc
fists
aam
mov
xchg
sahf
addb
pop
test
adc
call
hlt
push
push
bound
xchg
jmp
xchg
pop
xor
jo
push
popa
mov
jl
cmp
stc
xchg
jg
aaa
cmp
adcb
shrl
or
add
stos
stos
in
out
addr16
in
mov
arpl
cmp
sub
sub
js
stc
mov
dec
aam
ja
mov
fists
enter
test
popa
and
lods
bound
movl
aad
cmp
hlt
xchg
mov
push
adcl
jbe
xchg
cmpsb
xor
adc
pop
mov
pop
jo
in
cmp
xchg
inc
mov
mov
movb
movsb
sbb
cmp
sahf
xor
movsl
loopne
jp
cld
adc
mov
std
sbb
fidivs
xlat
sub
mov
cmp
mov
push
out
mov
stc
jg
inc
or
mov
gs
js
cltd
mov
dec
insl
mov
pop
mov
mov
inc
mov
shlb
fs
sbb
in
mov
ficoml
sarl
stc
fwait
shll
ss
inc
mov
pusha
push
icebp
sarl
sub
ljmp
push
inc
out
fldt
mov
pop
push
movq
pop
sbb
cld
leave
mov
or
insl
mov
inc
sbb
lea
sub
popa
adc
rcrl
push
inc
push
push
cs
adc
add
adc
push
mov
dec
pop
or
fisubrs
orl
sbb
mov
sub
mov
insb
scas
push
imul
fcomps
mov
loope
scas
outsb
mov
dec
inc
arpl
fistpl
push
cmp
test
dec
icebp
sarb
adc
test
aas
sub
mov
lods
movsl
cmpsb
xchg
test
mov
je
inc
les
push
cmp
dec
test
sub
sahf
call
xor
mov
nop
push
les
dec
rcrb
cld
outsl
xor
xchg
aam
out
xor
std
and
std
int3
scas
mov
icebp
adc
dec
aaa
out
pusha
jae
or
mov
pushf
int3
cmp
nop
test
mov
jge
push
sarb
adc
insl
pop
dec
mov
or
add
mov
insl
fisttpll
pop
punpckhbw
mov
in
mov
ds
inc
xor
lods
add
jecxz
sbb
pop
or
pusha
cltd
fidivrl
rclb
pop
add
sbb
movsl
lods
es
outsb
push
ret
sbb
cmpsb
push
outsb
hlt
idivb
jl
push
loopne
cli
outsl
cmc
jb
dec
fdivrl
test
fdivl
int3
sbb
adc
imul
pop
insb
in
cmp
lahf
cld
push
lret
inc
addr16
repz
xchg
iret
pop
cmc
fcomip
add
mov
inc
cmp
xlat
lret
add
hlt
out
fsts
sbb
insl
or
cmp
insb
dec
insb
jb
repz
test
jne
pop
leave
je
sbbl
sar
pop
jg
pop
out
stos
xchg
fbld
inc
data16
or
loopne
sbb
pop
and
loopne
jnp
dec
push
mov
add
push
xor
and
insb
addl
scas
daa
jns
jmp
mov
push
fdivrp
add
test
mov
and
dec
add
shlb
imul
jno
adc
push
mov
aaa
jecxz
mov
and
int
mov
xor
fiaddl
push
stos
cmp
cmp
outsl
ds
push
in
add
push
out
mov
jo
sub
mov
dec
test
jo
fwait
cmpsb
fcoms
popl
and
mov
dec
add
cmp
std
test
addr16
sub
das
jge
aad
in
push
dec
push
dec
addr16
cld
mov
lfs
shrl
test
pop
jbe
test
gs
pop
gs
jge
jb
fbld
cli
and
inc
add
sbb
fdivrs
and
lods
ljmp
push
push
fsubs
gs
sub
sbb
sbb
fistpl
inc
jne
sub
and
adc
pop
sbb
push
mov
pop
inc
sbb
rorl
fimuls
push
daa
test
sub
jmp
pop
aad
lret
stos
mov
pushl
sbb
test
mov
out
and
jne
lds
pusha
push
inc
xchg
jno
es
or
mov
adc
jp
mov
mov
inc
sub
shll
sbb
mov
shlb
data16
pop
inc
das
leave
fnstcw
sar
mov
push
push
push
inc
push
ds
std
xchg
ljmp
in
bound
sbbb
pop
fisubs
mov
cmp
loope
jo
outsb
or
fdivs
cmp
orb
jmp
pop
jbe
mov
push
jle
lret
inc
add
flds
and
sbb
mov
fisubs
insl
movups
ret
cmp
clc
add
in
shrb
bound
add
or
pusha
lahf
xor
jmp
lods
add
mov
adc
int
bound
call
mov
cmp
movsl
push
rorb
lcall
fnsave
and
or
bound
push
jne
jae
shrl
int
jns
loopne
sub
cmp
shlb
lods
add
jnp
scas
outsl
mov
mov
pop
scas
mov
cmp
dec
mov
xchg
xchg
dec
fistpl
push
or
sahf
add
scas
xchg
stos
sbb
mov
stos
dec
adc
and
cs
pop
int3
mov
mov
movsb
push
bound
and
stos
orb
in
pop
mov
sti
dec
ss
rcrb
xchg
sahf
or
clc
sub
scas
rcrl
loopne
jmp
int3
ljmp
adc
xchg
jae
ljmp
adc
cld
mov
jg
aaa
popf
loope
les
imul
or
push
cld
xor
mov
hlt
adc
adc
rol
mov
jno
out
or
xchg
and
adcl
js
movsl
fcompl
mov
adc
pop
cmp
sub
cmp
dec
lock
push
mov
stc
dec
roll
call
aam
movsb
mov
dec
mov
inc
aas
adc
leave
sahf
in
lea
add
push
loop
fldl
sub
fwait
mov
ficompl
neg
pop
mov
sbb
sahf
aaa
cmp
jns
and
sub
mov
data16
mov
mov
ret
cs
mov
xchg
test
lcall
mov
test
pop
xor
and
je
mov
cmpb
nop
insb
mov
push
cmc
decl
xor
sbb
loopne
push
pop
int3
or
shlb
inc
das
out
dec
lock
mov
xor
ja
je
sbb
add
mov
push
sbb
pop
rcr
inc
mulb
adc
sbb
mov
cmp
mov
call
mov
push
lret
sti
cmc
add
sbb
ds
fidivrl
add
js
pop
popf
out
xor
dec
mov
frstor
fcomi
jbe
xor
lods
test
iret
movsb
pusha
movsb
in
mov
jo
scas
pop
es
std
cmpb
lods
mov
push
nop
loopne
ss
dec
xchg
fimuls
xchg
aas
test
dec
xor
sub
push
xchg
sbb
jl
jg
jbe
roll
xchg
daa
out
inc
mov
sub
clc
int
out
mov
adc
add
jmp
insl
add
or
adc
mov
sub
cmp
adc
add
dec
add
cmp
fcmovu
mov
inc
movl
inc
gs
push
xor
jb
and
mov
out
cmp
js
mov
push
inc
jge
mov
fwait
inc
in
sub
or
std
test
insl
mov
jns
out
push
push
negb
add
outsl
jmp
stc
sbb
lock
pop
sahf
fwait
sahf
mov
push
mov
arpl
sbb
out
inc
mov
in
push
cltd
adc
sub
or
mov
inc
andb
sbb
shlb
xlat
shrl
cs
cmp
addb
out
push
fsubs
bound
repnz
out
pusha
cmp
mov
sub
push
leave
je
and
shl
xor
dec
dec
clc
mov
in
testl
mov
ja
pop
pop
or
ljmp
call
iret
movsb
mov
mov
outsb
loope
xlat
fwait
shr
dec
cld
ficompl
add
adcb
pop
notl
outsb
je
mov
pop
mov
xor
mov
cmovb
mov
rcll
std
les
je
out
lds
cld
pusha
js
adc
lods
ss
popf
movsb
arpl
xchg
rorl
jbe
inc
xlat
test
jb
sbb
js
stos
jmp
add
sub
sbb
sbb
mov
jb
push
push
xabort
mov
imul
inc
sahf
pop
pop
in
dec
mov
test
cltd
mov
jecxz
jg
or
push
cmp
jne
orl
sbb
leave
ja
pop
out
or
mov
and
lock
les
mov
dec
sub
nop
std
add
dec
aad
mov
je
loopne
or
lea
inc
lock
loopne
adc
cmpsl
jg
adc
movsb
stc
pop
and
nop
sbb
push
daa
and
inc
in
adc
add
loopne
adc
repnz
jg
int
imul
xor
push
test
and
xor
sbb
dec
iret
mov
xchg
mov
mov
push
inc
sub
test
popf
adc
xor
mov
aam
mov
or
jnp
setl
mov
stos
aaa
insb
pop
data16
dec
inc
mov
dec
xchg
mov
outsl
test
mulb
mov
andb
insb
scas
fnstenv
testb
decl
div
andb
int3
mov
mov
dec
fwait
or
add
pushf
je
xchg
xchg
mov
pop
sbb
mov
ret
scas
cmpsb
mov
mov
fs
add
cmpsb
cmpsl
mov
inc
pusha
mov
cmp
jno
mulb
loope
bound
addr16
loop
cli
out
xor
mov
movsb
aas
sbb
lret
inc
add
cmpsl
pop
or
icebp
jb
dec
mov
pop
adc
or
jle
mov
jle
jo
sbb
fsubs
movsl
mov
sbb
sti
out
loopne
inc
sbbw
cmp
sub
ret
aam
sub
lahf
push
and
xchg
sbb
sub
push
aam
mov
push
jmp
add
lret
loopne
scas
pushf
out
movsl
pop
mov
add
mov
shl
xchg
incl
lods
adc
cltd
hlt
mov
add
push
sbb
jbe
mov
jo
ja
jbe
fistl
pop
sub
lods
mov
ss
aad
aaa
xlat
jbe
add
aaa
push
test
faddl
ja
or
mov
fistl
push
cmpl
adc
loope
sbbl
sub
mov
gs
push
out
adc
loopne
data16
push
outsb
movsl
fmull
cmc
stc
out
in
or
std
sub
or
push
xor
dec
insl
outsl
mov
scas
jbe
or
push
adc
fisttps
sahf
and
dec
sub
imul
arpl
add
dec
fsubl
jno
addr16
out
add
jg
out
pop
pop
push
jle
add
adc
fdivr
mov
rclb
in
cmp
cltd
jmp
mov
dec
xchg
es
aad
xchg
adc
sbb
repnz
pop
mov
mov
bound
mov
sbb
fisubl
orb
or
lcall
ror
incl
or
cli
dec
or
in
test
dec
cmp
sbb
shlb
sub
adc
and
or
mov
test
dec
inc
sbb
cs
jae
and
push
in
ret
mov
add
xchg
scas
cmp
dec
imul
jl
das
cld
in
rorb
les
sub
pop
clc
adc
leave
sub
mov
scas
dec
clc
outsl
into
mov
push
fcmovnbe
test
sbb
lock
lock
repnz
or
in
fwait
sbb
das
xlat
xchg
push
dec
aad
cmc
mov
push
add
pop
fwait
test
imul
test
cmpsb
push
cmp
xor
inc
cld
popf
in
cmp
in
push
jge
rclb
push
aas
add
sub
jecxz
add
lea
imull
jne
addr16
cmpsb
cmpsl
lcall
xchg
decb
popa
sbb
inc
sub
mov
push
xchg
jne
rol
pop
insb
adc
push
mov
fcoms
int3
jb
jnp
xchg
js
adc
or
cmpsb
iret
add
stc
sub
sbb
cs
mov
test
pop
leave
add
imull
fwait
push
movsb
out
push
mov
lret
mulb
movsl
call
jnp
inc
imul
push
mov
xor
xor
sub
jmp
push
fs
hlt
fs
call
movsb
inc
mov
adc
mov
or
xchg
insl
add
mov
cmpsb
jmp
sub
xchg
jl
xchg
sti
mov
add
push
ret
push
movsl
ljmp
or
seto
fs
mov
xor
fbstp
or
lock
or
jle
ss
pop
dec
lcall
loope
pop
pop
mov
mov
bswap
sub
fnstsw
gs
cmc
lahf
push
cmp
bound
sarb
or
lahf
add
ds
or
sti
shl
testl
sub
fcmovnb
ljmp
imul
clc
roll
jb
cmpl
pop
adc
sbb
lahf
mov
xchg
cmp
jmp
nop
and
xorb
lock
pop
xor
lret
mov
xchg
arpl
lret
pop
loope
and
fistpl
mov
shrl
sbb
loop
mov
mov
mov
mov
cmp
and
pop
idiv
mov
pushf
mov
push
add
mov
rorl
push
fnstenv
clc
rcr
cmp
xchg
movb
filds
enter
sbb
inc
sub
sub
cmp
xchg
and
jp
lods
mov
dec
sbb
push
rol
js
out
jp
imul
mov
insl
lods
pop
pop
adcb
mov
or
lahf
mov
mov
pusha
not
out
or
repz
sti
fbstp
prefetcht1
jl
ficoms
and
cli
add
int3
xor
mov
xchg
aaa
scas
xchg
test
fdiv
stos
icebp
aas
je
sbb
push
lret
mov
cmpsb
or
xchg
sbb
loope
jmp
jmp
pop
mov
inc
push
inc
out
jbe
repz
sarl
inc
cs
cmp
ret
and
andl
test
jbe
mov
xchg
jbe
scas
ffree
inc
add
sub
cmp
add
and
jnp
loopne
std
add
or
cmp
scas
divl
mov
sti
aas
into
inc
fwait
bound
imul
cmpsl
inc
cltd
and
mov
add
jecxz
mov
fxtract
ret
dec
aad
mov
dec
jl
mov
cmp
pop
call
aad
push
adc
jns
sub
outsl
inc
push
or
push
xchg
jge
sbb
and
enter
clc
mov
add
out
fists
push
or
mov
mov
pop
stos
jae
mov
rcll
outsl
ljmp
repz
dec
xchg
mov
cs
or
and
divb
cltd
mov
inc
outsl
loop
rorl
and
lret
fdiv
pop
movb
sub
pop
std
enter
pop
mov
adc
jno
std
dec
cmp
xchg
mov
add
mov
ljmp
xor
mov
and
inc
into
or
xor
sub
lods
out
ljmp
mov
test
aam
ljmp
enter
cmp
mov
or
mov
roll
decl
dec
mov
rclb
mov
cli
outsl
cmp
cmp
dec
icebp
gs
es
test
xor
jmp
cli
sbb
pop
leave
xchg
subb
sbb
mov
prefetcht1
sbb
add
xor
fidivrs
mov
jmp
bound
mov
mov
test
rcll
cmpsl
mov
js
pop
pop
frstor
mov
inc
push
push
popa
mov
jbe
decl
lahf
mov
cmp
dec
mov
insb
loopne
pop
ret
or
xor
movsl
mov
sub
push
out
das
jbe
loope
shl
inc
sahf
aam
bound
jmp
lret
xchg
out
xor
andl
mov
or
mov
pop
sar
popf
add
and
xchg
roll
sub
loop
adc
push
push
mov
sub
inc
roll
xor
and
out
loopne
or
inc
in
test
or
or
mov
scas
int3
je
xchg
clc
add
xlat
push
int3
clc
pop
inc
add
xchg
cmp
hlt
ss
pop
bound
aaa
or
cs
mov
or
sub
and
jno
loope
fdivr
sbb
sub
dec
adc
xor
push
mov
adc
pop
in
or
jbe
inc
sahf
sub
cli
mov
xor
insb
add
ss
mov
loop
test
out
aad
je
loopne
inc
and
mov
call
insl
rcl
push
lea
jmp
and
mov
movsl
pop
jge
push
xlat
xor
mov
shlb
mov
insb
xchg
hlt
call
ret
or
sbb
out
push
jle
xchg
nop
mov
aas
leave
fdivrl
nop
sub
mov
test
sbbb
fdivl
sbb
inc
jg
mov
or
addb
arpl
clc
das
and
cmp
inc
clc
aad
inc
loope
xor
dec
out
cmp
iret
mov
popa
adc
jmp
adc
stc
pop
push
in
rorl
and
js
xchg
xor
hlt
das
xchg
mov
movsb
add
push
dec
sti
or
xlat
inc
insl
push
mov
push
loope
xchg
pop
es
mov
cmc
jne
mov
mov
mov
lea
push
into
mov
ret
inc
sbb
push
rcll
xchg
sbb
jp
sub
mov
sub
loop
sarb
inc
outsb
in
add
rol
decl
lock
pop
xchg
xchg
pop
or
rcll
mov
jb
rorb
cmp
mov
push
cmp
mov
or
test
imul
mov
push
dec
jge
inc
sti
clc
nop
mov
aam
lock
test
inc
xchg
xchg
mov
and
sub
lcall
fidivs
ret
sbb
xor
cmpsb
das
bound
adc
xor
mov
and
sbb
mov
sbb
js
pop
pop
cs
jle
dec
hlt
mov
jno
xchg
jno
lock
out
dec
jb
jecxz,pt
aam
mov
nop
mov
punpckhwd
xchg
mov
out
dec
cs
pop
cmc
cltd
ljmp
ds
and
mov
out
inc
call
int3
adc
das
aaa
rcrb
lcall
std
scas
mov
mov
cmp
lcall
lds
push
mov
push
sub
push
negb
adc
je
sarl
jb
leave
dec
fstpt
ja
dec
add
bound
dec
add
decb
cmpsb
adc
test
je
outsb
iret
mov
fcomps
fidivrs
pusha
in
cmc
inc
rcrb
or
cmp
adc
mov
xorl
inc
cmp
insb
das
push
inc
mov
mov
cwtl
add
aad
lods
popa
in
sbb
lcall
pushl
idiv
inc
xor
xlat
shlb
loop
fists
repz
iret
test
dec
inc
and
add
jb
lea
pusha
jge
jo
sub
in
ljmp
xchg
mov
push
bound
push
ds
test
cmp
imul
scas
mov
mov
and
push
dec
inc
js
and
or
stos
cmc
sbb
leave
jle
and
insb
insb
roll
pop
scas
mov
lods
mov
inc
push
adc
mov
out
push
out
inc
xlat
dec
fldt
jg
xchg
repz
rol
in
stos
push
inc
dec
jno
ds
shl
jge
dec
rolb
shll
ja
dec
popf
ret
iret
mov
andl
xchg
jp
insl
inc
stc
pusha
mov
cmc
mov
ret
test
outsl
addr16
movsl
cmp
loopne
jns
inc
add
shll
xor
mov
pop
lds
test
push
loope
dec
fsubl
stos
mov
fsubrs
mov
inc
push
mov
loope
sub
shr
mov
aas
and
add
int3
test
pop
or
lods
cmp
mov
push
pop
stos
xchg
insb
cmpb
and
clc
ror
push
sbb
je
insl
jno
test
icebp
mov
aaa
arpl
icebp
shll
wbinvd
mov
xor
mov
jb
clc
inc
lock
xor
push
sbb
dec
in
push
fsubp
cs
shrb
out
out
mov
lods
sub
cmp
push
lea
xchg
sub
jo
dec
pusha
int3
xchg
push
sbb
xor
dec
push
cli
inc
movsb
ret
jle
sub
xor
iret
adc
aad
inc
out
or
mov
xchg
inc
fs
mov
lret
insl
movsb
subl
add
fistl
scas
xchg
std
mov
mov
xchg
jno
pop
test
call
nop
repnz
jno
ljmp
movsl
je
cmp
and
js
mov
pop
mov
icebp
fiadds
or
imull
inc
out
and
cwtl
and
dec
jl
lea
push
repnz
mov
imul
outsl
xchg
add
insl
pop
movsl
or
scas
mov
mov
icebp
or
lahf
andb
xorb
sbbb
add
hlt
push
cld
int3
loopw
xchg
pop
test
negb
add
ljmp
sbbb
rcrb
xchg
movsb
and
std
imul
jo
repz
arpl
bound
aam
outsb
lcall
sub
ljmp
stos
out
jno
sbb
testb
or
pushf
sbb
ret
call
les
sbb
push
lretw
mov
outsl
pop
js
out
mov
mov
xchg
pop
push
call
test
jmp
and
cmp
imul
into
mov
test
insb
sar
stc
add
das
fcompl
sahf
add
mov
mov
sbb
xchg
das
icebp
testb
pop
add
lock
or
lods
sbb
insb
inc
push
or
sub
dec
rcll
loop
int3
mov
in
lcall
decl
aam
and
mov
fbld
in
dec
outsl
ja
sub
mov
das
dec
or
repnz
cmc
xchg
adc
loope
sub
sbb
scas
fcmovnu
lret
push
and
mov
loopne
mov
iret
push
push
sbb
fldt
mov
and
icebp
jg
outsl
push
push
adc
clc
leave
cmpsl
push
lods
cmpsb
sub
loop
loopne
jecxz
adc
push
inc
and
mov
sub
xlat
shld
and
enter
std
mov
fdivs
sarb
jne
push
stos
es
in
and
in
gs
mov
daa
leave
ret
roll
pushf
push
jp
push
mov
fimull
cmp
rcrl
orl
mov
sarl
and
or
xor
and
sub
inc
xor
fdivl
popf
mov
lahf
adc
xlat
lahf
mov
gs
int3
mov
jecxz
aam
fisubrs
data16
jbe
dec
ds
stos
lahf
xchg
jae
hlt
test
sub
sahf
sahf
insl
cmp
popf
setno
das
cld
pop
ret
fs
fwait
ret
xchg
xchg
in
or
fcoml
jne
int3
add
xor
insb
lahf
test
sti
lds
cmpl
mov
fs
mov
out
push
fdivrs
divl
dec
subl
orb
cwtl
loop
mov
into
and
sbb
mov
inc
inc
mov
mov
fistpll
and
and
xchg
mov
mov
movsl
cli
test
and
xor
push
je
je
cmp
and
pop
mov
inc
dec
push
int3
xor
sub
ss
mov
jo
and
sub
fldt
push
ja
or
adc
lahf
stos
pop
sbb
push
cmp
dec
and
popa
sti
test
je
out
sbb
stos
insl
popa
jmp
push
sub
mov
ja
cmc
mov
and
cmc
data16
xor
jns
sbb
test
scas
inc
push
addl
jbe
test
add
rclb
lfs
jecxz
pop
and
sahf
dec
sub
mov
mov
in
pop
xor
push
andl
xor
pop
pushf
cmp
mov
stos
jecxz
push
push
bnd
push
fldt
cmp
fnsave
mov
mov
xor
xchg
aaa
xor
aaa
sbb
or
scas
xchg
jmp
sbb
pop
mov
fidivrl
jne
mov
ds
cmp
jbe
pop
imul
mov
xor
aas
fstpl
mov
bsr
sub
and
jl
lds
push
add
jl
inc
pop
pop
push
icebp
mov
mov
das
ss
cmp
xchg
call
or
adc
leave
dec
pop
push
outsb
shrl
or
jbe
hlt
ljmp
xchg
mov
push
jb
mov
test
sbb
pop
mov
mov
inc
inc
push
jo
mov
mov
inc
lret
jmp
pop
push
mov
mov
movsl
dec
lds
imul
ret
inc
sbb
js
test
xchg
lods
inc
cltd
xor
shrb
leave
pop
loopne
sbbl
fstpl
lds
outsl
sub
in
pop
jno
popf
scas
add
fildl
xor
test
dec
mov
xchg
std
ret
adc
jbe
adc
and
pop
lahf
int3
mov
mov
pop
add
jle
jle
inc
mov
jne
adc
cltd
sbb
mov
or
or
bound
xor
ficoml
sbb
adcl
arpl
or
hlt
jmp
lret
push
js
scas
int
fldenv
and
add
mov
sti
bound
flds
das
cld
jmp
or
rol
insl
pop
xor
dec
dec
xorl
jle
sahf
push
insb
insb
shrl
jmp
mov
fdivrl
cmc
out
cmpl
aas
rcll
leave
fs
incl
in
sbbl
xchg
stos
sbbl
mov
and
and
and
adc
inc
nop
cmp
mulb
jbe
jmp
stc
jno
cld
jg
sbb
shll
or
and
call
repnz
aad
dec
aas
lcall
add
data16
xor
jae
xor
adcl
mov
mov
and
and
jl
sbb
mov
xchg
arpl
push
insw
pop
add
xchg
add
or
addl
inc
cwtl
loope
in
ret
xchg
inc
test
lcall
pop
clc
leave
mov
xor
sub
inc
inc
push
pop
mull
lock
mov
notb
fisubl
movl
insl
jecxz
cmp
mov
mov
lds
mov
repnz
sbb
dec
pop
pop
push
cmpsb
pop
inc
stos
clc
testl
repz
jae
in
push
xor
push
mov
xchg
push
and
test
lods
popa
repz
test
lahf
inc
out
fs
sbb
mov
or
movb
sbb
sbb
dec
mov
pop
push
das
mov
inc
daa
pop
mov
pop
pop
outsb
or
js
mov
mov
inc
push
cs
xor
fstpt
cld
fldt
pop
push
inc
push
pusha
mov
gs
push
gs
in
aas
pushf
enter
sarl
sbb
pushf
dec
mov
in
stc
mov
mov
mov
call
pop
jne
loop
push
sub
or
sarl
jecxz
sti
sahf
out
daa
lahf
nop
jne
out
xchg
inc
mov
pop
aaa
sbb
or
push
imul
xchg
adcb
jb
mov
add
aas
xor
adc
jg
fbld
sbb
or
sub
shrb
push
inc
out
mov
insb
inc
pushf
fcomps
jns
sub
ret
sub
out
sbb
mov
jb
xor
in
test
ret
pop
out
test
push
call
xor
sub
push
mov
inc
mov
sbb
pop
pusha
arpl
mov
xor
mov
cld
sub
xor
lock
in
mov
sbb
cmp
sbb
cwtl
inc
inc
mov
xchg
lods
push
jl
add
int
sahf
xchg
push
gs
push
out
imul
xor
pusha
adc
scas
lods
adc
push
push
insl
sub
push
shlb
or
loop
scas
pusha
add
dec
mov
scas
mov
scas
fistpll
mov
std
fnsave
jo
xchg
aad
pop
lea
lods
in
sahf
int3
or
and
rol
idivb
mov
repnz
mov
sbb
scas
push
pop
jp
arpl
orb
pop
lods
xor
aas
shll
pop
lock
jo
arpl
inc
rcrb
mov
mov
in
sub
call
jne
push
sub
dec
shll
arpl
mov
add
mov
clc
sbb
cmp
movsb
mov
inc
jmp
push
xchg
orb
add
aas
rcrl
test
mov
mov
and
xchg
inc
insl
or
dec
pop
xacquire
add
sarl
bound
int
cld
inc
mov
sbb
mov
add
dec
mov
rorl
sub
ret
inc
daa
sarl
and
cmc
fisttps
jbe
outsb
push
sarl
sbb
ret
mov
dec
cs
movl
call
push
add
dec
loop
mov
in
jge
sbb
inc
jae
call
sub
add
fsubr
hlt
xor
sbb
mov
push
es
pop
mov
dec
xchg
sbb
mov
loopne,pn
fstp
jmp
jbe
orb
mov
fmuls
je
out
and
and
mov
pop
mov
jmp
fists
pop
and
adc
add
stos
cmp
ret
add
test
in
push
popa
ljmp
push
mov
and
mov
sbb
repz
mov
int3
jle
sub
or
cmp
adc
aas
sar
sti
scas
mov
xchg
xchg
incl
jg
cmp
cwtl
inc
out
insb
test
aaa
test
inc
pop
jecxz
inc
je
pop
ljmp
sub
aad
jno
mov
xorb
jae
into
dec
sub
cld
pop
in
dec
repz
aam
mov
mov
cltd
dec
adc
xor
stc
mov
adcb
pop
icebp
jp
xchg
jl
adc
call
inc
push
dec
push
inc
mov
pop
push
mov
xor
hlt
sub
xor
pop
cmpl
sub
loope
ds
xchg
movsl
mov
test
or
mov
fisubl
fucom
lods
sarl
aas
pop
push
sbb
mul
xor
xor
sbb
popa
sbb
adc
adc
stos
js
cmp
add
cwtl
int
xor
inc
add
xchg
shrl
mov
and
icebp
jns
je
jo
ret
mov
dec
or
das
movsb
loope
sbb
adc
mov
cmp
add
cld
dec
xchg
xchg
mov
cmp
push
lret
jmp
xor
rorl
shrb
out
stos
mov
inc
jo
sub
push
push
push
fdivl
lret
sub
aas
inc
sbb
push
movsl
sub
lds
fstpt
pop
jge
test
sbb
ss
pushl
jle
push
jns
stc
std
fimull
jbe
and
enter
sub
mov
dec
outsl
pusha
cmp
pop
faddl
outsl
mov
and
push
dec
sbb
lods
movsl
notl
sub
or
outsb
fcmovne
inc
popa
popf
dec
jbe
ficomps
push
mov
popf
in
add
cmp
fcmovbe
jg
jno
and
mov
mov
sbb
dec
pop
xor
ja
loopne
mov
cmp
sti
call
rorb
cmp
inc
shr
fiadds
fisttps
test
sbb
loopne
sbb
xor
sub
ja
cli
sub
fildl
xchg
sub
pop
jno
mov
les
idiv
pop
pop
xlat
insl
mov
cmp
push
in
sahf
push
clc
movl
or
mov
mov
fs
push
jo
popf
adc
mov
fs
or
addl
ljmp
sbb
pusha
cmc
sbb
pop
sbb
jo
cli
cltd
les
inc
loopne
stos
dec
insb
fildl
xlat
xor
cmp
mov
mov
mov
aad
xchg
rorl
jnp
and
outsl
jge
jle
stos
cmp
mov
xor
ja
test
pop
insl
std
fnsave
and
jno
sahf
jmp
dec
mov
outsb
push
push
mov
in
or
xor
and
sbb
into
das
xchg
or
xor
push
out
cli
or
add
shlb
aam
sbb
cmp
ds
test
sub
dec
clc
mov
mov
popf
loopne
jp
ret
aaa
inc
push
jle
and
sti
negl
pop
cmp
sub
clc
jne
ss
adc
dec
jp
popa
popa
loop
pop
lock
push
popf
sbb
mov
inc
push
mov
xlat
adc
jle
mov
div
outsl
inc
and
js
int
push
scas
loope
inc
pusha
push
inc
movsb
dec
adc
mov
xor
dec
fchs
out
mov
pop
mov
fwait
loop
aam
xchg
jo
add
mov
push
pop
push
cmp
jmp
dec
aaa
and
stos
or
pushf
aad
sbb
push
call
shll
call
outsl
fwait
mov
outsb
mov
cmpsb
js
dec
cld
lcall
lods
push
sbb
mov
cmp
mov
sub
xor
pop
jbe
inc
mov
cmpsb
mov
sbb
mov
lcall
leave
pop
fisubl
pop
sub
mov
andb
adc
xor
dec
xor
xor
gs
inc
inc
insl
in
sbb
gs
outsl
sbb
test
cmp
add
aas
cmp
adc
pop
adc
jecxz
fisubrl
xor
xor
sbb
cli
aad
jmp
jbe
into
addb
mov
stos
xchg
sarl
mov
sub
or
loopne
in
lea
in
xlat
int
pop
push
cmpsl
lea
mov
xchg
loopne
shrl
add
fidivl
mov
jo
xchg
in
fwait
mov
imul
add
push
sbb
xchg
mov
adc
lea
add
sub
xchg
or
add
mov
ficoml
adc
daa
or
scas
sub
pop
jo
scas
aad
test
or
in
nop
mov
loope
popf
cmp
sub
cmc
loope
dec
mov
inc
loopne
mov
stos
mov
test
pop
pop
fadd
std
lods
cmp
mov
sbb
pop
hlt
jmp
pop
inc
pop
in
mov
int3
dec
mov
pop
dec
sarl
sub
call
xor
das
fwait
dec
loop
jo
jo
out
adc
add
js
lea
and
add
sar
insl
add
insl
mov
add
push
mov
fidivl
loope
adc
push
andl
scas
jl
jo
daa
arpl
outsl
xor
dec
dec
es
rcrl
clc
jbe
cs
inc
loope
mov
fcmovnu
xchg
mov
adc
orb
rcl
lahf
add
mov
sbb
lea
pushf
orb
cmp
mov
fbstp
rolb
xor
xor
leave
daa
loop
addl
mov
outsb
mov
push
adc
push
or
es
push
xchg
daa
pop
cmp
add
cmpsl
clc
test
xchg
ret
scas
movsl
imul
incl
mov
sub
mov
mov
mov
adc
ret
sbbl
mov
fstl
aam
fwait
inc
dec
je
dec
add
sbb
lea
in
mov
push
dec
sbb
add
jbe
mov
inc
ret
add
gs
icebp
push
and
cmp
lret
xchg
cli
adc
push
mov
and
iret
mov
cmp
shll
testl
imull
lcall
mov
repnz
add
popa
pushf
adc
xchg
cmpb
push
out
or
data16
xchg
jp
movsl
addr16
loope
add
push
sti
cmpb
xchg
mov
adc
cmp
jne
inc
jmp
fisttpl
cwtl
fcoms
test
pop
mov
pop
pusha
add
push
pop
cld
frstor
aam
lretw
outsl
pusha
arpl
and
orb
push
cmp
or
dec
pop
pop
call
adcl
mov
mov
repz
or
sub
mov
fisttps
inc
inc
add
adc
add
frstor
loope
test
xor
and
push
mov
push
jl
stos
sbb
xor
popl
in
or
push
push
mov
lahf
xor
xor
push
ja
cmp
or
loopne
lcall
jmp
testb
lock
xor
fisubrl
jb
lods
cmp
inc
and
cmp
sbb
sti
xor
out
push
xor
push
dec
sbb
fldt
add
cld
lea
lahf
fildl
jbe
daa
stc
push
test
sub
data16
dec
pusha
cmc
call
imul
std
bound
les
mov
jns
fadd
xor
or
mov
push
rcr
repnz
loopne
sbb
ljmp
inc
push
je
out
cmp
sbb
adc
xorb
pop
int3
test
xchg
stos
mov
cmp
push
xadd
cmc
xchg
lahf
jmp
lds
ficompl
adc
out
rorb
mov
mov
pop
and
shll
mov
inc
xlat
ret
sbb
out
xor
bound
or
pusha
daa
int
popf
mov
adc
nop
test
dec
adc
pop
xchg
xor
push
ljmp
sbb
lods
mov
mov
outsl
jb
mov
test
loopne
mov
fldl
repnz
jl
or
test
cmp
cmp
int
loop
inc
sbb
sbb
imul
push
andb
mov
sahf
cmp
insb
mov
mov
popf
dec
push
cmc
pop
fsubrs
or
mov
cmp
mov
xchg
fs
dec
subl
int3
cmpb
lret
ss
pop
in
pop
xlat
insl
repz
pop
pusha
sbb
xor
lock
jmp
idivb
aam
dec
inc
push
jns
push
mov
lods
jmp
mov
push
cmpsb
sub
adc
sbb
nop
stos
sub
jmp
jge
jmp
jmp
ds
ret
jle
test
pushaw
push
dec
pushf
or
inc
cmp
xchg
sbb
pop
or
into
xchg
push
xchg
or
out
add
fstps
test
daa
gs
sub
rcrb
idivl
mov
jo
ret
je
outsb
or
pop
sub
das
stos
push
cmp
dec
rcrb
loope
ljmp
sbb
cli
pusha
mov
addl
popf
add
xor
inc
xlat
hlt
xchg
out
xlat
jge
mov
mov
adc
pop
popl
inc
popa
aas
add
jle
or
cld
pop
cwtl
cmpsb
test
jno
mov
push
cmc
insl
in
mov
ficoms
inc
adc
and
dec
jne
lahf
stos
mov
lds
cmc
mov
bound
out
ljmp
and
cltd
repz
mov
shr
nop
ljmp
cmp
and
jp
mov
xchg
xor
push
pushf
xor
mov
inc
loop
jl
in
mov
push
cmp
nop
subb
orb
in
push
hlt
cs
add
push
mov
pop
or
sub
adc
jg
lods
out
push
leave
xchg
cmp
pop
js
dec
fcmovnb
imul
lea
shld
test
lret
sub
push
sub
dec
xchg
pop
inc
add
push
pop
lock
cltd
daa
jno
out
cmp
fisttpll
xchg
addr16
mov
aas
push
je
lds
lsl
mov
jne
jno
iret
movsb
aam
pushf
mov
int
into
mov
shlb
or
inc
dec
add
push
mov
or
or
nop
pushf
aas
pusha
mov
add
push
in
lds
repnz
iret
push
cmc
add
push
sbb
rclb
dec
push
cwtl
xor
mov
push
pop
movsb
loopne
and
aaa
dec
cmpsl
sub
clc
pop
mov
imul
and
cmp
insl
in
nop
xor
and
mov
or
bound
cld
sbb
add
out
addl
les
sub
fwait
dec
pop
loop
lods
and
inc
test
xchg
sbb
sbb
or
arpl
pop
xor
add
cmc
inc
jne
adc
sarl
mov
jp
loope
icebp
test
outsb
lcall
notb
flds
cld
lcall
mov
out
and
or
fcoms
test
rcrb
out
adc
xchg
shl
push
cmpsl
xchg
cltd
sahf
xchg
sar
loop
cmp
jno
loopne
shll
dec
sub
mov
pop
mov
negl
pusha
cs
test
loopne
xchg
pusha
movsb
add
sarb
push
adc
iret
sub
lahf
lods
inc
test
orb
jmp
sbb
in
sub
in
jle
cmc
shll
sbb
cmp
popa
inc
push
push
imul
push
jl
jge
mov
push
xchg
lock
insb
mov
cmp
cli
and
xchg
push
fisubrl
or
mov
cmpsb
lods
cmp
pusha
in
bound
xchg
push
aad
inc
hlt
and
jae
inc
jge
adc
fisttpll
aas
push
int
push
fdivrs
mov
pushf
iret
sbb
filds
dec
add
sbb
je
jnp
mov
testb
call
ffreep
or
loopne
idivl
pop
out
adc
movsb
loop
jge
in
push
and
outsl
stos
jne
jp
les
inc
xchg
pushf
out
stc
jg
pushf
jle
cmp
sub
jmp
pop
xor
out
sbb
push
fwait
ljmp
mov
sbb
add
jl
pusha
mov
inc
inc
or
pop
cmp
icebp
sbb
hlt
mov
add
std
pop
jecxz
sbb
or
sub
xor
xchg
mov
mov
daa
repnz
pushf
sahf
dec
xchg
jne
ja
stos
pop
ljmp
popa
push
rorb
aad
mov
add
mov
imul
inc
loop
inc
std
jmp
mov
gs
mov
jg
xorl
sub
push
jnp
push
jb
add
lods
mov
loope
adcl
and
popf
dec
into
fldcw
jbe
fmuls
sbb
mov
ret
jge
fildl
push
push
mov
mov
incb
adc
pop
scas
imul
push
adc
sbb
mov
mov
mov
je
clc
and
sub
mov
push
in
push
ret
add
xchg
and
insb
sub
cmp
in
xchg
or
icebp
mov
xchg
or
popf
fists
flds
push
xor
clc
repnz
cld
das
xchg
push
xlat
push
mov
cmp
test
cmp
fadds
movsb
and
incl
das
push
jmp
and
dec
add
clc
call
sbb
push
data16
dec
pop
add
daa
js
rcrl
pop
sub
fldl
dec
je
pop
fildll
outsb
cmp
and
jg
lahf
rcrl
sbb
sbb
aad
daa
faddl
sub
push
movsb
add
add
push
test
loope
push
xchg
inc
cld
popa
in
jmp
xor
mov
mov
clc
sbb
mov
stos
and
scas
jb
movsl
jnp
xor
fwait
das
mov
leave
or
mov
lcall
popa
push
add
xchg
iret
push
xchg
jg
pusha
mov
test
fwait
xchg
cwtl
push
and
jne
movsl
daa
push
xchg
sar
icebp
imul
xchg
push
das
es
sti
inc
mov
or
cmp
adc
or
xchg
dec
sar
mov
les
les
or
mov
xor
and
mov
call
fldl
cli
test
stc
pop
cld
shr
loopne
adc
add
aaa
lea
mov
in
dec
mov
adcl
fldenv
mov
cmpsb
inc
mov
fcmovnb
test
in
roll
mov
lea
xchg
and
add
lea
movsl
and
or
pop
movsb
arpl
or
ss
movsl
in
xor
and
pop
add
jg
jle
sub
push
jmp
test
sbb
sub
pusha
push
ficoml
mov
insl
inc
mov
pop
rclb
pop
fbstp
inc
mov
aaa
push
loope
fwait
mov
clc
les
sbb
sbb
fwait
jp
lock
sti
xor
mov
or
enter
lcall
stc
adc
stos
adc
icebp
xchg
sub
dec
stos
loope
push
mov
push
mov
mov
test
fwait
sahf
fimuls
inc
sarb
jns
fwait
xlat
test
pop
cmpsl
jne
sbb
loopne
lahf
dec
dec
xchg
cs
xor
mov
je
add
sbb
mov
mov
mov
xchg
pop
mov
mov
inc
scas
scas
pop
mov
mov
loopne
or
fs
sahf
cmp
pop
cmp
add
dec
test
fdivrs
aas
std
mov
rcl
mov
jp
insl
test
adc
pop
shll
fisttpll
push
fiadds
mov
jno
cltd
xchg
sub
pop
xlat
add
shl
xchg
rorb
cmp
pop
ror
fmulp
movsl
stos
mov
out
repz
xor
arpl
pushf
repnz
xlat
or
mov
jle
fdivl
movsl
mov
mov
shlb
or
adc
fadds
outsl
dec
mov
pop
outsb
out
xchg
mov
mov
loopne
out
stos
std
aaa
dec
sub
add
jmp
insb
lock
xchg
dec
add
scas
fcmovnbe
pop
mov
aaa
and
in
inc
mov
jg
and
adc
mov
sub
jne
and
ret
cmpl
test
clc
mov
mov
mov
sub
fcomi
imul
ret
pop
test
push
ljmp
mov
icebp
cmp
cltd
adc
cmp
dec
icebp
js
popa
sub
out
sahf
push
mov
xchg
lea
lock
pop
icebp
outsb
mov
ljmp
xor
subl
jmp
mov
sbbb
adc
mov
push
ljmp
dec
adc
stos
mov
cld
cmp
das
test
pop
xchg
stos
mov
add
mov
or
scas
movsb
sub
sbb
or
div
pop
js
jmp
xchg
mov
aam
mov
jge
js
jl
pop
xchg
ret
mov
add
ss
in
push
ss
subl
or
mov
clc
mov
mov
sbb
fsubl
imul
imul
lcall
mov
imul
pop
js
jo
mov
int3
pop
mov
cmp
cmp
ret
mov
dec
ficoml
mov
xchg
add
addb
je
mov
xlat
fwait
ja
adc
sbb
or
cmpsl
in
dec
mov
fidivrs
ret
dec
sbb
ljmp
fistpll
sbb
je
movsb
pop
fucomi
xchg
andl
jg
push
push
push
mov
lea
fcmovnu
inc
xchg
adc
popf
ds
repnz
push
addr16
mov
mov
sub
inc
or
popa
stos
ficompl
and
jge
mov
push
or
js
xor
cmpsb
xchg
sti
pop
call
dec
dec
and
pop
xor
call
popa
les
xchg
ss
adc
jmp
dec
les
xchg
pop
jb
push
xchg
cld
or
jg
adc
push
test
rolb
cmp
shrb
test
inc
outsb
aad
sub
push
push
sti
adcl
or
fbstp
or
fsubrs
or
adc
mov
into
test
add
or
mov
inc
out
dec
sti
scas
loop
scas
aaa
mov
xor
sbb
fistl
jne
mov
push
add
fwait
mov
mov
mov
test
xor
mov
fmuls
mov
incl
mov
iret
xchg
leave
fdivl
hlt
outsl
call
inc
cmp
pop
push
and
xor
mov
int
ror
ja
lods
adc
sbb
fsubs
and
iret
xchg
adc
inc
cli
mov
lea
push
pop
in
jae
in
and
stos
ljmp
mov
adc
jbe
addl
dec
sbb
jns
dec
mov
cmp
cld
add
adc
mov
loope
mov
enter
clc
mov
mov
jmp
stc
or
mov
mov
mov
xchg
dec
outsl
imul
adc
mov
leave
xchg
cmpsl
mov
fisttpl
push
imul
stc
mov
fwait
adc
sahf
push
adc
cmp
ret
rolb
cmp
test
xchg
inc
and
cmpb
test
cmp
ljmp
outsl
mov
filds
rolb
shll
lock
lcall
enter
les
dec
add
mov
dec
mov
leave
ret
repnz
mov
sub
inc
push
rolb
jae
add
mov
scas
rcrl
ret
push
pushl
lea
cmp
outsb
negl
mov
push
sub
dec
jg
dec
inc
out
jbe
cmp
insb
inc
outsl
fbstp
dec
popa
jb
add
jae
inc
nop
mov
or
mov
in
mov
xor
push
ljmp
inc
adcb
jbe
add
ss
add
pusha
cmpsb
icebp
push
mov
test
inc
add
add
cmp
push
push
inc
jb
lahf
addr16
push
mov
outsl
ja
mov
inc
pop
imul
dec
fs
enter
fisubl
xor
xor
and
adc
or
je
add
adcl
add
ds
ficoms
and
imul
test
pop
fwait
mov
add
and
pandn
jmp
rcrb
loop
fnstenv
dec
pop
dec
push
mov
fildll
add
pop
jne
inc
push
dec
sbb
add
mov
scas
lock
jne
push
lret
pop
fisubl
fadds
sbb
cmp
fcmovne
cmc
mov
gs
jno
fstpl
jg
sub
inc
movb
insl
mov
je
cmp
add
cld
jge
cld
and
ret
insl
inc
fimull
pop
mov
imul
rclb
lea
hlt
dec
je
inc
push
pop
dec
xchg
in
stc
ja
mov
mov
ret
jb
imul
popa
dec
js
clc
movb
pop
lret
mov
enter
jae
xchg
xchg
daa
push
jb
mov
or
dec
es
mov
insl
pop
lods
mov
inc
sbb
add
jo
ffreep
fwait
sti
call
mov
popa
dec
out
sti
shl
neg
mov
sub
xorb
xor
decb
pop
xor
dec
ret
sbb
inc
and
jbe
stos
inc
inc
pop
insb
outsb
mov
lret
aas
xorb
mov
sbb
add
popa
push
inc
and
lret
dec
addr16
dec
inc
jmp
je
ja
fidivrs
dec
js
dec
inc
call
pop
cmp
mov
jne
fisttpl
inc
ja
mov
push
dec
jne
in
ret
repz
adc
outsl
mov
inc
ss
cwtl
add
lea
ljmp
mov
rcr
icebp
inc
imul
sbb
inc
dec
mov
lods
fadds
xchg
enter
mov
inc
test
mov
mov
pop
sub
adc
xlat
imul
sbb
add
jno
insl
sub
leave
out
adc
popf
add
push
xor
jmp
cmp
je
mov
dec
addr16
movsb
sbb
pop
sub
jbe
sub
rcr
in
outsl
mov
gs
outsl
mov
pop
push
pop
imul
push
loop
jno
fldlg2
pop
popa
imul
xchg
and
inc
push
lods
ret
inc
sub
ljmp
lea
or
inc
fdivp
in
in
push
addb
cli
jmp
lret
mov
les
inc
sbb
outsl
inc
cmp
or
fisubrs
cmp
icebp
push
jmp
lock
or
xchg
push
mov
mov
popa
dec
mov
xchg
push
push
pop
scas
out
pop
dec
lcall
sub
lds
push
jecxz
ss
outsl
cmp
fs
dec
push
inc
jns
inc
cmp
push
add
jge
mov
sti
ret
mov
fwait
xchg
inc
jns
dec
fs
mov
in
push
shll
jae
addr16
xchg
xchg
imul
pop
repnz
clc
jecxz
int
or
call
xchg
imul
ss
dec
popf
mov
outsb
push
add
mov
adc
sarl
xor
push
pop
xlat
jne
inc
out
push
fs
shll
or
pop
xchg
lahf
aad
cld
add
add
js
push
jle
js
jbe
xchg
cmc
push
mov
inc
push
or
sbb
ljmp
outsl
dec
mov
mov
push
ja
addps
jp
mov
push
insb
outsb
mov
jno
xor
aad
fistps
dec
jae
push
in
inc
dec
sub
pop
js
insl
push
mov
xor
popf
cmc
divb
cmpsl
icebp
inc
push
imul
pop
call
inc
cmp
fsubrl
mov
dec
push
insb
jge
popf
js
pop
aam
incb
clc
xlat
xor
sahf
xchg
fwait
stos
push
xor
xlat
loopne
fs
cs
lret
roll
ret
pusha
jmp
dec
or
jae
xchg
sbb
aas
sbb
js
inc
xorb
xchg
or
mov
dec
sub
dec
fistpll
push
mov
pop
aaa
inc
dec
addr16
in
data16
pop
cli
dec
jp
or
cmpsl
mov
into
int3
ds
loopne
sti
testb
inc
inc
ja
xor
dec
inc
jo
sbb
pushf
jmp
add
bound
xlat
lds
adc
fmuls
sbb
pop
push
scas
out
mov
outsl
inc
inc
inc
inc
cwtl
jae
adc
cli
out
test
cmpsb
insl
ds
mov
ret
mov
inc
cltd
popa
ss
dec
insb
jne
jle
push
pop
xchg
xor
dec
pop
push
outsl
data16
fidivs
xor
ds
push
dec
push
or
rclb
jo
sbb
jbe
decb
mov
pop
addr16
bound
fdivl
mov
push
fmul
out
outsb
mov
inc
mov
xor
pop
add
clc
add
push
xor
out
mov
fildl
sahf
dec
insl
clc
adc
mov
call
clc
js
adc
add
ret
mov
in
pop
mov
inc
scas
lock
push
filds
repnz
sub
xorl
cmp
xchg
fildll
cmp
ja
in
cli
sub
clc
test
sbb
shlb
cli
dec
or
push
inc
and
or
jns
mov
pusha
addl
fstl
loope
jae
dec
xlat
shrl
insb
data16
push
adc
dec
cmc
fwait
cld
push
sahf
jl
pop
or
mov
aaa
outsb
insb
jl
jmp
dec
js
addl
ret
dec
mov
arpl
inc
repnz
outsl
push
mov
sub
xor
push
mov
imul
mov
cli
jbe
push
pop
jo
adc
cmp
jne
out
data16
jbe
jbe
fistpll
repnz
orl
dec
aaa
jne
lock
jg
jmp
push
push
dec
dec
out
mov
fwait
js
jp
sahf
cmp
jne
negl
outsb
pop
push
inc
mov
cmp
inc
add
mov
mov
inc
xor
inc
dec
push
je
sbb
out
dec
je
in
jbe
jmp
xor
js
dec
and
leave
ja
rcl
sub
sub
push
jle
xchg
mov
js
ret
or
ss
fbstp
mov
inc
pop
push
or
es
ds
jle
or
comiss
adc
xchg
mov
outsl
push
mov
out
js
jne
dec
mov
jge
sub
xor
dec
push
sbb
insl
insb
gs
leave
shrb
lret
inc
test
popf
shr
jne
add
push
hlt
xchg
outsl
sbb
push
sti
xor
test
sbb
arpl
lock
jmp
dec
dec
loop
adc
pop
mov
push
inc
push
in
in
fistps
repz
or
push
push
inc
sarb
pop
mov
add
mov
rcl
cld
pop
add
mov
loopne
ja
mov
cld
jmp
lea
add
push
add
jbe
js
pop
pop
jge
add
mov
push
inc
push
jbe
mov
and
dec
push
push
cmpsb
dec
dec
lret
movsl
movsl
testb
inc
push
inc
push
mov
sbb
outsl
ret
fistps
mov
cmpsb
sub
pushf
movsb
and
or
jmp
push
dec
inc
ret
mov
jne
data16
jp
add
fimuls
mov
fwait
and
outsb
insb
mov
inc
pop
repz
movsb
inc
mov
mov
dec
in
ja
inc
sarl
jo
ret
push
xchg
xchg
jecxz
adc
jbe
jmp
push
mov
ja
aam
xor
cmc
pop
cmp
inc
xor
divl
xor
dec
arpl
push
xor
fcmovnb
insl
mov
push
push
dec
push
mov
out
jae
jb
lahf
jno
pop
ret
inc
xor
inc
xchg
rolb
out
ja
ja
and
es
fidivs
add
aaa
mov
xchg
xlat
cmp
or
jns
pop
lret
cld
out
fisttps
inc
test
add
mov
adc
fiaddl
cmpsl
inc
adc
sbb
nop
test
xor
add
sbb
push
xor
xchg
fimuls
popa
popa
dec
xchg
subl
cwtl
jmp
fmull
js
inc
push
je
stos
push
xchg
les
lea
xchg
mov
sar
xchg
ret
or
punpckhbw
or
push
mov
iret
scas
out
push
push
inc
mov
inc
sbb
aaa
pushf
and
stos
mov
jb,pt
push
shlb
and
ds
pop
sub
notl
lret
inc
ja
jbe
stos
xchg
sub
ja
idivl
je
dec
dec
inc
push
fiaddl
push
xchg
adc
push
jp
jae
call
dec
xor
push
push
fs
mov
inc
mov
test
outsl
ljmp
push
xlat
ds
pushf
dec
inc
push
jae
js
in
jmp
popa
in
imul
lds
dec
lret
out
jl
jge
loopne
test
stc
fildl
outsl
imul
mov
xor
shlb
movsb
add
lock
fidivs
pop
ja
jbe
push
js
lahf
outsb
in
sahf
sbb
mov
lods
int
and
ds
dec
jo
dec
addr16
clc
mov
sub
cli
ficoml
dec
jno
testl
sbb
jbe
push
inc
aaa
or
icebp
shlb
fisubl
and
xchg
jb
pop
test
fcomip
lds
xchg
fsts
addr16
pop
cltd
lods
mov
movsl
pusha
inc
jne
xchg
aas
lock
repnz
pop
nop
push
mov
xor
adc
push
lods
dec
mov
pusha
test
loopne
outsl
gs
int
mov
data16
jbe
stos
outsl
ss
push
insl
mov
or
mov
inc
mov
push
jp
imul
adc
and
sub
jecxz
sbb
xor
mov
cld
mov
inc
push
popa
push
push
insl
fiaddl
adc
xchg
js
imul
push
pop
mov
xor
push
mov
lea
lahf
aad
lcall
ret
ljmp
sub
or
lods
cwtl
cli
or
je
sahf
movsb
add
arpl
pushl
sbb
test
cmp
pop
xorb
pop
lea
clc
mov
adc
push
leave
out
inc
xor
repz
cld
popa
push
addr16
mov
outsl
dec
cmpsb
mov
outsb
inc
push
jbe
inc
mov
int
dec
mov
mov
pop
cmp
bnd
pop
pop
jne
dec
aaa
mov
cwtl
std
into
xchg
jl
lahf
in
sub
jae
mov
push
jmp
inc
addr16
shl
mov
sti
jb
dec
je
dec
dec
sub
inc
pop
xor
data16
iret
movsl
orl
das
add
leave
ret
add
test
fsubs
call
outsl
test
in
les
sub
sbb
dec
xor
idivb
pop
popa
cmp
add
xor
aam
cmp
das
jne
bound
xor
push
dec
xlat
cmp
push
pop
adcb
shl
dec
cmp
inc
idivb
pushf
dec
adc
xchg
aam
aad
pop
js
hlt
push
push
std
jbe
jns
mov
cmpb
xor
adc
xor
inc
aas
mov
movsb
and
push
insb
sub
mov
insb
je
repnz
push
out
mov
lock
push
sub
lahf
daa
mov
sub
inc
push
jmp
jbe
lds
shr
jge
inc
sub
fcoml
loopne
xor
popa
jbe
cmpsb
fiadds
rcr
js
inc
insl
inc
add
pop
lock
fs
push
lret
xor
call
inc
jbe
ret
inc
xchg
sub
shrb
outsl
dec
shl
dec
fistps
mov
imull
dec
push
imul
mov
xor
jge
push
push
push
jae
sbb
add
cmp
dec
call
dec
push
rol
xor
lds
test
aaa
mov
mov
mov
ret
jo
xor
lock
nop
mov
push
inc
addr16
out
mov
xor
dec
inc
mov
push
dec
push
aas
jp
cmp
cmpsl
cwtl
into
inc
pushf
jmp
mov
pop
je
pop
push
fwait
aaa
xchg
inc
dec
ja
fs
mov
rcll
sub
jle
mov
mov
imul
push
ljmp
mov
push
or
cli
cmp
lcall
dec
enter
dec
inc
jge
jle
xchg
ret
jo
sahf
jb
push
outsl
jo
jbe
outsl
sbb
js
js
xor
call
sbb
jae
jbe
lods
pop
jae
pop
jns
stos
pop
mov
dec
out
xor
add
pop
inc
orb
add
or
mov
xchg
stos
cltd
push
sub
jbe
movsl
iret
inc
mov
add
fnstenv
fidivrs
push
pop
xchg
push
push
push
xchg
scas
ret
inc
iret
inc
inc
sbb
repnz
inc
data16
xchg
jb
adc
mov
sbb
jno
and
fcmovnbe
push
pop
sub
adc
or
call
mov
call
ret
sar
scas
push
pushf
fadd
and
pop
stos
subps
loope
imul
lock
inc
popf
mov
lret
es
cmpsb
clc
shll
xchg
dec
shll
xor
out
inc
arpl
out
movsl
xor
sbbl
mov
fsub
adc
imul
mov
arpl
sub
lds
in
cmp
inc
mov
xchg
xor
xor
fisubs
fwait
jp
fwait
pop
jns
xchg
pop
hlt
mov
out
arpl
jmp
xor
push
mov
sub
xor
fs
pop
mov
mov
inc
inc
add
xchg
jp
or
nop
cmc
pushf
iret
push
cmp
and
es
fimull
enter
ds
fmul
jo
dec
mov
jl
add
and
push
xor
or
icebp
push
jo
adc
stc
lret
mov
dec
cmp
ja
les
xorl
es
push
mov
test
xor
inc
and
mov
int
cmp
jbe
add
repz
into
shl
inc
dec
inc
mov
xchg
ds
shll
hlt
mov
inc
xorl
cmp
push
push
out
hlt
fsts
test
push
icebp
notl
fsubs
lock
clc
outsl
test
decl
test
inc
out
mov
std
jae
arpl
test
pushf
ss
push
dec
mov
dec
insl
rcr
rcrb
inc
arpl
dec
push
aas
xor
iret
adc
ljmp
mov
loope
test
bound
ret
cmp
cli
insl
cli
inc
push
jb
dec
adcl
nopl
mov
inc
inc
sbb
insl
xchg
mov
rcrl
add
out
dec
push
test
cs
movsb
pusha
sub
add
mov
mov
xlat
jbe
push
mov
mov
ret
xchg
loop
sbb
popf
jo
das
fstps
lret
scas
push
js
jmp
sbb
xchg
adc
loopne
shrb
int3
inc
outsl
jb
inc
icebp
int
push
insl
sarb
dec
jns
sub
or
ja
mov
inc
imul
pop
clc
out
movsl
rclb
dec
bound
shrl
push
inc
jae
jbe
cltd
push
pop
dec
sbb
push
push
adc
enter
repnz
jne
push
scas
mov
mov
arpl
push
sub
and
push
test
sub
testb
or
clc
js
xchg
shl
push
push
cmp
gs
js
lods
ret
and
cwtl
push
fisubl
into
push
loopne
pop
sub
out
push
push
mov
aas
mov
mov
push
xchg
stos
or
loop
jne
lock
clc
ret
add
sub
insb
ja
push
xlat
push
sub
std
push
mov
jbe
inc
inc
cmpsb
dec
lods
mov
xchg
inc
add
mov
mov
xchg
test
xor
push
xor
fists
mov
xchg
mov
inc
cmp
ss
addl
inc
movsb
stos
in
jmp
cmp
xor
jne
scas
in
loopne
dec
shll
dec
mov
mov
scas
or
insb
push
push
jae
enter
bnd
mov
jne
inc
pop
repnz
rolb
jge
imull
mov
sahf
ss
dec
push
nop
mov
imul
mov
jns
int3
pop
insb
sub
das
jecxz
addb
cs
mov
pop
aad
sbb
sbb
shufps
stc
dec
push
adc
cmp
lcall
mov
outsl
push
and
dec
pop
sbbl
xchg
idivl
imul
call
jae
fsubrs
rcrb
ds
sbb
fmulp
sbb
fnsave
inc
dec
xchg
add
shrl
fldl
aaa
and
mov
lods
mov
inc
xchg
adc
jbe
in
ss
shrl
pushf
repz
dec
push
test
inc
jmp
cs
or
push
enter
clc
sub
or
dec
push
and
or
xchg
sbb
cli
cmpsl
fistps
add
cmp
test
lock
ljmp
je
ss
sub
dec
lea
pop
mov
ja
cmp
cmp
mov
dec
dec
xor
cli
pop
insb
stos
lret
push
lret
fisttps
mov
push
movsl
mov
pop
push
dec
loopne
mov
repz
jne
and
adc
sub
mul
imul
mov
js
jne
lods
dec
push
ss
adcb
mov
roll
push
pop
xor
xchg
xchg
subl
aas
sarl
push
movsl
movsb
fisttpll
xor
std
loope
push
sbb
inc
loopne
mov
incb
xchg
dec
push
stos
jle
jmp
dec
loope
inc
xchg
adc
sbb
ret
xor
popa
mov
or
jp
clc
dec
outsb
rclb
out
inc
popf
daa
jg
or
push
jns
shl
cli
sub
cmpsl
push
push
fsubs
lock
call
push
int3
cmp
fdivrp
test
repz
mov
pushf
ljmp
ja
xor
inc
push
cli
add
inc
imul
xchg
jnp
rcrb
clc
nop
jnp
dec
jo
in
pop
sbb
repz
inc
push
dec
inc
lea
adc
ljmp
inc
xor
dec
push
inc
add
out
xchg
push
jo
dec
mov
mov
cmpsl
inc
xchg
sahf
push
pop
mov
in
js
dec
push
or
push
inc
enter
pop
and
jo
xor
fwait
mov
scas
dec
fwait
xchg
iret
dec
pop
jp
xchg
jb
inc
inc
xchg
ret
dec
cmp
push
fnstenv
lock
sbb
imul
inc
out
xor
stc
fsubrl
data16
insb
push
or
popf
push
dec
loopne
pop
jbe
or
call
push
rolb
jnp
arpl
out
push
imul
popa
inc
stos
push
add
or
mov
nop
sbb
mov
mov
push
mov
movsb
adc
dec
pop
fmuls
pop
push
push
jle
and
push
shll
leave
and
and
lret
inc
jl
sub
push
outsb
inc
ljmp
push
jnp
cmp
imul
and
push
popf
mov
in
xchg
stos
inc
addl
jmp
push
dec
xor
call
call
pop
jl
push
cmp
ljmp
jbe
fs
pop
inc
push
xor
ret
shlb
ss
sub
arpl
or
test
rolb
ret
fcompl
pop
or
jecxz
xchg
mov
xor
test
fs
jne
andl
aas
jge
jb
test
outsb
ss
dec
rorb
pop
mov
aaa
pop
push
pop
add
sub
add
mov
cmp
cld
ja
pop
insb
pop
add
je
repz
xor
jbe
and
mov
xorl
xchg
aaa
dec
jg
out
ss
into
or
fdiv
xchg
dec
dec
popf
cltd
xor
fcmove
inc
sub
inc
adc
inc
loope
push
jbe
outsb
inc
data16
arpl
arpl
popa
ljmp
repnz
insb
gs
lgs
inc
push
push
ss
xor
push
mov
xor
sbb
push
inc
ds
loopne
sbb
dec
and
jge
sub
stc
jmp
fstl
mov
outsl
xchg
pusha
xchg
dec
dec
dec
or
push
mov
cmp
add
fs
push
outsb
adc
movhps
out
push
cmp
sti
iret
ret
adc
iret
mov
xor
fwait
cmpsb
loopne
push
ds
inc
das
add
shll
fbstp
shrb
mov
fdivrp
dec
mov
movsl
ds
incl
arpl
or
ficoml
dec
ja
pop
rolb
dec
xor
js
ljmp
das
movl
jb
jl
lahf
add
mov
pop
mov
movsl
jl
clc
jle
je
inc
xor
pop
dec
gs
fldt
xor
pop
mov
pop
xlat
test
dec
jns
mov
jno
imul
iret
dec
int3
call
loop
shlb
jne
xchg
fsubrl
cmp
mov
mov
sub
dec
inc
xchg
mov
xchg
xor
jae
ja
inc
add
push
dec
mov
cmc
push
dec
xor
fistpl
sbb
ds
push
push
xor
or
imul
push
aaa
bound
pop
addl
lahf
jno
cmp
mov
js
stos
roll
and
call
inc
adc
pop
aad
mov
xor
ficoml
or
inc
gs
test
mov
cmp
inc
pop
xchg
lock
lret
ds
lahf
mov
push
dec
pop
mov
std
test
cmp
pop
add
and
push
mov
push
pop
mov
imul
dec
add
shr
lea
cli
dec
fcompl
ret
dec
push
mov
push
clc
in
inc
adc
ret
pop
jae
imul
mov
stos
lret
dec
xor
test
sbb
nop
pop
lea
or
push
ficomps
push
pop
inc
stos
outsb
push
jae
mov
pop
add
fidivrs
push
jbe
fisubl
dec
addr16
or
gs
ret
dec
inc
gs
inc
add
sub
ljmp
data16
jne
add
xchg
and
out
mov
pop
dec
or
out
jo
and
loopne
cmp
xor
xor
cltd
shlb
push
imul
add
cli
or
mov
adc
lock
inc
enter
cmc
push
lea
shl
mov
dec
dec
dec
jae
mov
dec
inc
dec
dec
test
adc
add
mov
mov
lret
sub
or
and
mov
adc
add
incl
int3
adc
cmp
mov
mov
sbb
gs
testl
push
inc
fucomp
cmpsl
popa
adc
sbb
sbb
ret
mov
and
adc
insl
or
sbb
mov
sub
inc
mov
rorl
aas
mov
mov
les
insl
imul
insb
pop
pop
add
xchg
cmpb
jns
add
sub
push
call
dec
sti
imul
add
fcomi
xor
mov
outsb
pop
push
add
xchg
mov
lcall
mov
das
xchg
je
arpl
add
jne
bound
jb
dec
fistpl
mov
stos
add
or
fisttpl
scas
gs
push
rcrl
sub
or
xchg
push
sbbl
mov
gs
adc
pop
mov
add
daa
add
cmp
jecxz
adc
xchg
push
add
test
pop
jg
ja
mov
pop
and
push
add
ja
es
subb
add
dec
and
aam
out
pop
orl
push
pop
adc
addr16
mov
and
jae
mov
pop
pop
test
push
push
mov
fwait
pop
adc
out
inc
add
mov
mov
xlat
icebp
fwait
push
and
inc
ss
pusha
xor
push
push
leave
stos
aas
inc
cwtl
add
push
push
and
loope
inc
sbb
iret
aaa
mov
push
add
xor
add
or
cmp
dec
mov
push
dec
mov
lret
xchg
das
inc
add
jle
fcomp
sub
add
push
cmpl
shlb
outsl
and
adc
pop
ret
xchg
rcrl
mov
mov
jmp
mov
movsl
mov
jle
jg
mov
jne
stos
adc
jmp
or
rclb
insl
xchg
outsb
cmp
sarb
insl
pop
cmp
sub
add
lea
dec
sbbb
inc
insl
mov
xchg
popa
lcall
mov
out
or
sub
imul
cmp
mov
and
pusha
xchg
and
inc
fs
popf
mov
xchg
jmp
sub
movsb
dec
cmp
cmp
scas
add
int3
xor
adc
add
and
adc
lea
fsubrs
xchg
xchg
je
jl
out
jge
xchg
cltd
out
inc
sahf
jg
lret
stos
std
push
lods
jmp
rolb
pop
pushl
push
push
jno
push
jbe
or
daa
jg
sub
iret
ss
xor
jmp
sub
or
testb
cmp
push
lods
add
mov
mov
adc
pop
call
xor
leave
and
xor
inc
jp
xlat
pop
jp
xor
add
jb,pn
decl
clc
cmp
and
pop
cwtl
add
or
stos
cwtl
mov
jo
sbb
sar
jmp
jle
pop
xchg
xor
bnd
jns
in
inc
lcall
cli
push
xchg
imul
incl
pop
mov
ljmp
mov
jg
pop
pusha
sub
shrb
nopl
outsb
lahf
push
mov
jmp
adc
xchg
out
inc
pushf
ljmp
data16
pop
scas
add
add
data16
lcall
mov
out
fmul
and
cmp
ret
fnsave
in
int3
iret
in
int
pushl
in
hlt
dec
mov
je
xchg
pop
pop
mov
inc
repz
decl
shll
shrl
imul
ss
in
xchg
shll
stos
in
inc
fisttpl
das
mov
sti
push
add
pushf
ljmp
test
jl
lds
lret
insb
jl
sub
mov
jg
xchg
adc
js
inc
xchg
sbb
mov
in
add
movb
adc
mov
ret
insl
mov
call
aam
fidivrs
dec
int3
test
jg
push
fidivrs
jge
shr
xchg
add
or
dec
andl
add
mov
fdivl
jae
cmp
in
xchg
rorl
out
inc
pushf
mov
jo
jecxz
adc
jnp
ret
mov
out
jmp
jle
addr16
movsb
test
decl
xchg
or
nop
out
jle
mov
jle
clc
call
add
lock
fimuls
mov
ret
sbb
fdivr
jmp
or
jecxz
int
insb
in
orb
stos
nop
xchg
jg
loope
and
dec
mov
test
mov
popa
mov
pop
inc
sbb
pop
mov
iret
and
test
push
jle
iret
into
in
pop
sbb
push
testl
push
pop
dec
test
int
sbbb
pop
sahf
ror
ret
ret
adc
sbb
jecxz
xchg
call
fwait
icebp
cwtl
mov
je
in
call
call
mov
pusha
cmp
clc
push
test
mov
sar
lcall
adc
test
and
jae
ljmp
xor
or
cmpsb
cld
push
cld
jg
ljmp
pop
mov
dec
and
adc
stos
adc
and
addr16
xchg
ljmp
jle
sub
gs
cmp
adc
lcall
mov
pop
nop
pop
mov
popa
adc
lret
das
cld
lods
xchg
jp
pop
ja
into
mov
xor
bound
stc
push
sti
sub
repnz
and
outsl
movsl
cld
cmp
and
mov
icebp
mov
xor
es
adc
mov
nop
iret
sbb
pop
mov
push
or
ljmp
add
sbb
stc
xchg
adc
int
call
dec
jg
adc
aas
cmp
xchg
fcomip
xorl
call
inc
dec
cmp
mov
mov
push
sub
js
sbb
and
in
xchg
rcrl
ret
popf
add
cmc
add
out
into
add
push
inc
popa
dec
psubw
rcll
jle
idiv
sbb
mov
cld
push
lcall
jmp
call
in
lock
jmp
lret
mov
movsb
jnp
outsb
lods
pop
or
jmp
test
inc
rorl
inc
mov
cld
in
fisubs
mov
popf
mov
sbb
and
mov
dec
pcmpeqd
adc
inc
je
je
xchg
jmp
repnz
cmc
ljmp
xchg
decl
or
dec
mov
adc
adc
pop
jno
pop
test
subl
test
xor
jmp
lods
das
call
test
cmc
lods
xchg
pop
xchg
scas
mov
jno
daa
ja
movsl
and
mov
pop
mov
mov
fdiv
out
pusha
mov
push
and
mov
decl
and
xchg
pusha
testl
jne
and
lahf
ror
lods
mov
pop
sub
lods
call
sbb
xor
jle
push
test
sbb
cmc
or
insb
mov
and
adc
xchg
das
mov
mov
inc
addr16
repz
mov
outsb
ret
aaa
nop
cmp
cld
push
scas
sbb
popa
mov
imul
pop
jo
scas
ficoms
nop
adc
sub
xor
repnz
mov
cmpb
and
xor
dec
cmp
daa
push
repnz
jnp
sahf
xchg
imul
mov
out
pushl
and
addb
shlb
into
in
inc
jg
pop
mov
push
stos
add
out
jp
or
movsl
push
jnp
pusha
jmp
sbb
mov
pop
or
repz
aaa
fbstp
xor
xchg
aam
hlt
dec
mov
jl
shrl
xchg
sahf
mov
mov
adc
repnz
outsb
jp
pop
mov
hlt
movsl
cmpsl
fildll
mov
or
and
shlb
xor
js
loope
lahf
pop
sub
pop
test
mov
cmp
adc
popw
jg
loope
mov
push
xor
addr16
xor
mov
loope
mov
rcr
cmpsl
xor
add
or
cld
shlb
mov
cli
dec
ret
sbb
aas
and
fidivrs
cmpsb
mov
test
in
aas
fsubs
rolb
xorl
inc
dec
adc
outsl
shlb
and
push
mov
fisubrs
jbe
cltd
or
dec
pop
jbe
movsb
pop
cs
sbb
out
inc
push
inc
or
sar
cmpsl
out
scas
add
push
insl
xor
enter
pop
ds
and
adc
cld
ffreep
sbb
sbb
in
sub
lea
jle
dec
outsl
nop
inc
fmull
popa
mov
movsl
xchg
adc
and
jl
loope
rcll
rcr
sarb
mov
cmp
sub
pop
inc
sbb
out
nop
movsb
daa
fcoms
mov
and
mov
and
movsb
nop
cltd
data16
lahf
je
ds
rdpmc
dec
dec
dec
rclb
ret
in
subl
and
sub
pop
pop
stc
xor
mov
xchg
sbb
mov
divl
pop
cs
stos
add
and
push
cs
fstl
ret
add
fdivrl
nop
adc
xor
xor
in
and
xor
sub
jmp
idiv
repz
or
cmc
mov
dec
and
mov
adc
test
adc
ja
cmp
mov
in
mov
movsl
push
cs
icebp
jg
les
sub
dec
imul
dec
test
mov
mov
ret
sbbl
hlt
dec
cmp
cltd
mov
hlt
xor
adc
insb
lods
mov
push
fcoms
hlt
fisubrs
sbb
push
cld
fbld
xchg
shr
nop
icebp
dec
mov
outsl
movsb
pop
and
pop
aas
adc
pop
xor
adc
push
pop
in
fsubs
repz
xor
fnstenv
gs
das
mov
jg
clc
aaa
mov
push
adc
cmp
data16
and
xor
in
inc
sbb
daa
push
out
mov
ffree
out
loop
push
jle
test
and
lahf
fisttpll
mov
rcrb
jb
jno
inc
loope
test
adc
mov
insb
lret
ret
ror
push
jmp
mov
mov
mov
les
andb
loope
dec
je
addb
loop
sti
cmc
cmp
jle
subb
loop
mov
mov
pusha
dec
jecxz
push
adc
pop
jp
aas
fnstsw
in
lods
aad
dec
lret
int
mov
pop
decb
in
cmpsb
call
cmp
mov
mov
add
push
rol
subl
adc
lcall
xor
mov
fs
mov
jo
out
xor
iret
jge
pop
les
push
mov
aad
xor
pop
jecxz
push
cmp
out
lcall
in
roll
xor
mov
std
les
rol
adc
fistpl
jp
aaa
sbb
gs
xlat
jp
adc
lret
ja
mov
stos
add
jb
gs
sub
lea
bound
fldenv
outsb
sbb
fstps
mov
stos
push
mov
xor
aaa
add
xor
mov
mov
add
push
and
addb
jg
mov
ret
push
sahf
fbld
lret
mov
push
popf
pop
movsl
les
xor
dec
out
shlb
push
and
xor
jg
in
and
les
sub
jnp
repz
fdivrs
loopne
test
pop
insb
lock
shlb
inc
xor
call
jecxz
mov
mov
inc
ds
pop
mov
das
rcll
fildll
xchg
cs
pop
mov
imul
jbe
leave
mov
imul
movsb
push
lods
filds
sub
std
subl
les
and
and
lret
or
xor
hlt
fistpll
cmp
mov
push
or
xchg
out
inc
icebp
dec
stos
or
pop
push
jbe
test
adc
sub
cmp
addr16
pop
mov
into
repnz
mov
mov
out
mov
jnp
dec
pop
addr16
and
je
decl
mov
call
cs
pop
cld
out
lock
movsl
icebp
cmp
sbb
mov
inc
arpl
and
cmpsl
cld
pushf
ret
adc
stc
xchg
mov
sbb
xor
enter
aas
xorl
ja
test
enter
pusha
push
negl
inc
out
jae
dec
mov
mov
sbb
nop
fsts
rclb
iret
aaa
cmc
mov
and
mov
cvtpi2ps
pop
push
adcb
inc
loop
xor
jle
int3
leave
mov
xor
les
shlb
int3
mov
nop
adc
push
cmp
pop
les
sarl
xchg
clc
ret
xlat
mov
jle
mov
xchg
outsb
stc
cltd
xchg
ret
dec
mov
cmpsb
adc
add
dec
incl
xor
test
in
mov
mov
std
jecxz
xchg
nop
fs
mov
loopne
push
xchg
das
jle
test
xchg
pop
jle
cmp
inc
adc
sub
jb
pop
repz
aaa
jnp
jnp
repnz
xor
test
mov
int3
push
mov
mov
mov
pushl
xor
pop
jge
jge
pop
add
jnp
movsb
push
scas
jg
cltd
fstpt
shll
mov
stos
push
jns
jge
add
and
xor
jp
cmp
cmp
sbb
xor
xor
aad
movsb
xor
dec
lret
fnstsw
and
fmul
and
push
mov
fadd
or
ja
pop
and
in
mov
lods
mov
iret
repz
gs
ret
lds
jbe
push
in
jbe
loopne
les
jo
inc
stc
add
iret
insl
cwtl
jmp
xchg
mov
js
inc
out
jbe
jb
clc
insl
xor
out
ffreep
movsb
jmp
aad
imul
push
aaa
lea
out
cld
xchg
sub
lcall
aam
lea
jle
clc
push
push
or
add
adc
fisttpll
rclb
push
push
mov
cltd
cmp
cmp
rcrl
pop
inc
dec
adc
insb
lret
outsl
jo
scas
pop
inc
pop
jg
sub
js
xchg
repz
jmp
test
xor
aas
mov
jecxz
pusha
mov
hlt
lds
pop
jle
rcll
push
repz
xor
jae
popa
mov
xchg
sarl
mov
push
outsl
sar
xor
xchg
and
inc
sub
mov
pushf
ret
mov
in
enter
jo
adc
int
outsl
shrb
fsts
cmc
clc
out
scas
inc
pop
add
jns
mov
les
arpl
enter
adc
jae
xchg
cmc
ja
jbe
push
xlat
push
out
pop
call
sbb
inc
fdivrl
mov
fistpll
mov
cmp
lods
sbb
mov
stos
xchg
xlat
xchg
push
loope
cmp
aas
std
fldenv
dec
mov
lahf
mov
test
das
fildll
pushl
shrl
stos
nop
mov
xchg
xchg
test
int
xchg
lods
cli
fmuls
add
mov
in
xorl
loope
cmp
jg
mov
mov
mov
push
cltd
xor
stc
push
lods
cmp
sbb
lahf
or
lret
inc
out
jmp
nop
lahf
cmp
outsb
jne
repz
xor
popa
addr16
jg
jmp
push
ret
les
outsb
pop
mov
dec
push
clc
mov
adc
sbb
push
inc
inc
pop
jl
test
jno
sti
cltd
pop
fiadds
pusha
int
mov
lods
sbb
xor
push
adc
mov
addr16
inc
jns
sub
jnp,pt
aam
xor
ss
jnp
sub
incl
in
lret
sbb
mov
dec
mov
in
rcr
loop
jae
mov
jge
sub
push
test
loope
aaa
or
movsb
std
dec
in
icebp
xchg
int3
test
add
out
and
jmp
jp
xor
jp
push
xchg
rcl
filds
stos
aas
in
pop
lret
mov
mov
iret
cltd
loope
mov
movl
adc
pop
nop
mov
pop
dec
push
outsl
call
out
mov
out
aaa
fwait
cmp
pop
scas
out
scas
ja
fwait
rcll
sar
loope
xor
iret
packsswb
sub
xchg
aam
out
cmp
fstps
int3
cmc
sbb
inc
add
adc
ds
addr16
push
mov
jle
repz
sbb
fsts
stos
jbe
dec
xor
cs
rcrb
mov
fstl
addr16
jg
mov
inc
xor
dec
aam
aas
adc
mov
cld
in
sbb
cltd
sub
mov
xor
sbb
and
mov
shld
mov
addr16
es
inc
test
xchg
call
int
lahf
inc
jno
nop
test
push
loopne
fs
mov
imul
imul
sbb
and
fwait
pop
xor
repnz
mov
mov
clc
xor
adc
jns
les
or
stos
fisubs
test
cld
xchg
rclb
addr16
inc
xor
mov
inc
mov
push
in
mov
jns
movsl
repnz
outsl
nop
sub
pusha
test
mov
sbbb
mov
sti
push
mov
jb
mov
sub
addr16
nop
mov
push
in
sbb
xchg
push
mov
fidivrs
addr16
loope
clc
push
ds
cmp
adc
adc
jl
pop
xor
adc
shrb
adc
xor
sbbl
add
or
arpl
shlb
icebp
fbstp
stos
subb
jbe
loopne
nop
jl
loopne
cmc
das
ffreep
mov
mov
outsl
mov
xor
mov
cmpsb
push
mov
cli
adc
pop
ficomps
out
fistpll
les
pop
adcl
mov
or
mov
fdivrs
sbb
fbstp
loope
xchg
push
xlat
cwtl
aas
ffreep
adc
test
les
jno
or
sub
repnz
add
mov
stc
inc
adc
repz
rcrl
inc
mov
lahf
pushf
mov
int3
cwtl
int
nop
scas
lcall
addr16
or
loope
and
jle
push
xor
outsl
xor
imulb
jge
or
mov
jo
pop
test
leave
jle
mov
iret
shr
aas
sub
movsb
call
xchg
push
inc
icebp
add
mov
push
jecxz
lods
and
pop
jge
clc
outsb
sbb
loopne
mov
shlb
xchg
push
and
adc
or
aaa
jge
stc
sti
mov
ret
add
mov
jbe
movsl
loop
pop
test
and
mov
jle
lods
pop
or
mov
cmp
outsl
icebp
loope
push
movsb
les
or
pop
int3
xor
es
xor
push
xchg
xor
cmp
fisttps
xor
aas
std
push
jns
pop
imul
sub
jle
das
jp
sub
pop
xchg
dec
xor
outsl
decb
adc
pusha
lcall
pushl
mov
mov
das
mov
mov
xor
mov
ljmp
ja
cli
dec
addr16
xchg
push
stc
cld
inc
pop
sbb
jecxz
inc
push
outsl
scas
rcl
pop
imul
push
jle
sbb
in
jo
mov
aam
mov
jmp
mov
mov
filds
adc
xchg
insl
push
and
adc
nop
jp
inc
repnz
xorb
mov
ljmp
adc
cmp
aaa
inc
loopew
and
aaa
cmp
or
fldt
sarl
fcoms
loope
ficoms
inc
push
or
lahf
int
cli
mov
adc
popa
icebp
and
adc
addr16
cmp
push
iret
pop
mov
lock
mov
pop
clc
inc
or
cli
ror
cld
mov
les
mov
jnp
mov
pop
sub
leave
dec
jg
xchg
insb
cmp
rcr
xor
jg
ja
pop
jle
adc
dec
cld
daa
fwait
outsl
sbb
jle
pop
xor
jg
das
xchg
lret
mov
xchg
dec
cmpsl
pop
hlt
pop
mov
imul
cmp
inc
pop
jp
in
push
enter
pop
in
mov
les
loopne
into
mov
sbb
cmpsb
or
or
mov
jl
and
nop
cs
clc
sahf
test
jg
mov
or
fsts
cmp
hlt
jbe
xor
outsl
cmc
out
inc
jo
arpl
xchg
pop
clc
popf
addr16
inc
jo
out
xchg
inc
sub
inc
push
mov
lret
aaa
xor
scas
or
ret
jle
test
stc
enter
xchg
pop
enter
data16
and
mov
push
mov
dec
je
mov
movsb
sub
pusha
lds
outsl
pusha
xor
adc
movsb
and
and
mov
pop
cs
fisubrl
loope
in
aaa
decl
insl
fwait
lods
leave
je
dec
mov
or
int3
inc
lods
xor
pop
sub
subb
mov
push
test
xchg
mov
icebp
pop
jge
jno
nop
pop
pop
jne
jae
inc
push
sub
add
aam
fsubs
out
xchg
cmovo
stos
clc
xor
sub
inc
imul
lock
imul
fsts
outsl
rcr
jg
jecxz
adc
add
iret
ss
ror
mov
push
inc
icebp
and
jnp
gs
inc
jmp
rolb
jno
cld
dec
in
xor
jl
xor
jb
pop
mov
add
inc
fstps
sub
mov
mov
add
pop
pop
ljmp
shr
mov
lods
pop
xor
adc
ret
xor
xor
fs
sbb
or
fsub
ss
cmp
test
in
sub
cmp
es
in
mov
or
inc
js
mov
pop
aam
xchg
xchg
loopne
ficompl
aam
dec
adc
adcb
jmp
sarl
or
push
or
cmp
inc
call
fwait
mov
cli
jno
inc
aaa
loop
mov
xchg
adc
push
in
lock
addr16
jge
jne
iret
xorb
lret
jge
cbtw
fwait
xor
mov
or
sbb
jle
rcrb
or
add
mov
lods
sbb
cmpsl
inc
out
mov
iret
iret
pop
clc
push
cmp
rcl
sbb
dec
xchg
sbb
clc
ljmp
outsb
nop
rcrb
jmp
sbb
jae
test
mov
mov
ret
sub
imul
mov
loop
pop
adc
les
mov
mov
test
shll
mov
clc
in
outsb
mov
inc
mov
pushf
mov
fidivrl
mov
xor
mov
mov
fwait
mov
push
pop
mov
push
cld
notb
pushf
pop
push
movsb
movsw
subb
mov
inc
nop
leave
lret
outsb
jne
and
fisttps
jmp
addb
fwait
loopne
ficomps
cld
call
psubq
jne
jmp
ss
int3
push
sahf
mov
das
int3
icebp
mov
push
cli
or
cmp
adc
and
pop
xchg
push
add
or
mov
rcll
add
xchg
in
xorl
sbb
jg
in
out
pop
jne
sbb
jae
std
stc
mov
sbb
mov
stos
cwtl
sbb
and
xchg
sub
adc
addr16
pushf
sahf
add
inc
das
xchg
or
sub
add
and
pop
xor
push
cld
lods
sub
lahf
out
sub
or
or
and
loopne
ds
xchg
push
aam
loopne
mov
xor
rcl
call
aaa
mov
push
cld
push
push
enter
aad
ret
mov
clc
imul
push
push
cmp
lock
negb
testl
mov
sub
aas
and
mov
subl
dec
push
fwait
jo
movsl
aaa
fildll
dec
sbb
outsl
mov
adcb
lds
xor
xchg
out
sub
cli
iret
or
sub
inc
fisubrl
addr16
cmc
sbb
int
sbbl
and
mov
ss
sub
cmpl
hlt
adc
xchg
xchg
jnp
xor
rclb
xchg
mov
lods
pop
test
xor
lret
lods
pushf
jmp
out
jo
xor
mov
int
clc
jne
scas
lea
xor
mov
icebp
push
xchg
dec
std
mov
xor
cmp
sbb
loope
sbb
incl
pop
sub
and
and
sbb
pop
aaa
int
ss
mov
mov
xchg
mov
fwait
ret
or
cmpsb
or
jnp
and
and
ret
push
and
imul
pop
scas
out
sub
cmpsb
jbe
or
out
adc
jmp
fiadds
aaa
pushl
or
dec
out
xchg
inc
lret
sbb
pop
jle
ja
jl
xor
mov
xchg
nop
aad
stos
fs
aaa
fildll
addr16
and
mov
test
fdivl
jl
mov
xlat
pop
lock
push
mov
adc
mov
push
add
xchg
rorl
cmp
repz
les
pop
stos
sbb
mov
lret
mov
xor
dec
test
outsb
test
in
clc
dec
inc
aad
repnz
or
in
lahf
or
addr16
std
jb
fdivs
les
cmc
mov
adc
icebp
in
outsl
fwait
orb
jae
into
inc
cmp
push
push
out
or
push
push
stc
insl
mov
incl
insl
loope
mov
fstpl
iret
or
out
xchg
cld
clc
out
push
add
cli
pop
dec
loop
call
and
out
pop
push
mov
cmp
or
sbb
jbe
insb
stos
xchg
push
les
addr16
xchg
adc
lahf
xor
loopne
sub
inc
inc
adc
outsl
jge
outsb
xorl
sub
test
push
jb
mov
sbb
clc
mov
out
mov
jle
xor
xor
inc
sub
aaa
fwait
mov
cwtl
xor
cld
loopne
jp
lock
les
lock
mov
mov
pop
int
decb
fists
dec
push
xor
sbb
cmpsb
sub
jns
or
and
pop
jge
push
jnp
jo
push
addr16
shll
xor
mov
pop
shlb
push
sbb
mov
sub
inc
fildll
fwait
jp
addr16
movsl
icebp
xor
push
pop
push
or
adc
add
lock
popf
add
mov
les
adc
fbld
xor
mov
movsl
std
cmp
das
out
pop
stos
xor
clc
lahf
aaa
mov
jle
data16
jg
ficoms
pop
mov
lds
addr16
dec
fadds
mov
xchg
test
pusha
lahf
xchg
jnp
icebp
pop
mov
add
into
jg
fcompl
sbb
dec
lods
faddl
xchg
ror
xchg
aad
cmpb
pop
mov
add
mov
clc
les
pop
iret
sub
rorl
insb
lret
addr16
jnp
ss
sub
addr16
loope
xor
clc
test
dec
ss
imul
push
loopne
xor
jb
insb
mov
ja
lea
ja
clc
sti
fdivl
xor
fbld
mov
jmp
aad
fs
imul
mov
scas
or
mov
jnp
shrl
fwait
sahf
mov
xchg
mov
add
idivb
sbb
cld
inc
jmp
nop
jle
adc
xchg
das
movsl
sbb
test
js
jns
mov
icebp
dec
sti
lret
stos
inc
nop
push
inc
cmc
aaa
jno
pusha
pop
or
inc
loope
xchg
movsb
int3
jg
jle
inc
out
xor
sub
mov
outsl
aad
test
loope
stc
mov
adc
scas
push
jb
mov
mov
test
jp
imul
cwtl
cli
pop
sub
addr16
pop
fildll
repz
test
mov
imul
ret
or
or
inc
mov
mov
shl
mov
pushf
les
fwait
jg
shrb
and
rcrl
mov
mov
je
pop
xchg
cmp
addb
sti
repnz
hlt
mov
outsb
inc
fisttpll
pop
and
mov
repnz
push
or
push
packsswb
sbb
insl
pop
dec
add
stc
lret
and
sub
sub
xchg
pop
sub
push
push
dec
and
pop
ror
outsl
iret
sbb
or
jge
addr16
xor
outsl
call
jmp
xchg
mov
xor
roll
ret
inc
pop
mov
mov
and
out
mov
fldcw
out
lret
jg
sbb
pop
inc
outsb
neg
pop
dec
and
int
sarl
insl
dec
adc
dec
repnz
mov
mov
repz
outsl
aaa
mov
loop
outsl
nop
inc
dec
call
push
shlb
pop
add
mov
and
call
sub
int
xor
xor
hlt
jmp
xchg
add
mov
cld
jl
mov
fwait
lahf
push
aas
divb
sub
and
pop
test
ss
divb
mov
push
inc
lret
xor
mov
rorl
sub
push
xchg
mov
lret
das
sub
das
fcom
dec
stos
mov
mov
dec
and
insb
ret
aas
std
lahf
sbb
and
dec
fwait
pop
out
and
sub
cs
fcmovbe
mov
pop
call
js
xor
or
or
fwait
lret
repz
mov
sub
movsl
push
add
dec
lds
shrl
adc
mov
jp
lods
or
clc
mov
xchg
imul
rorb
xor
mov
js
pop
xchg
hlt
insl
inc
idivb
or
mov
addr16
inc
jecxz
jle
add
rcr
mov
shll
lret
jne
mov
pop
cld
dec
aas
fwait
outsl
lock
pop
outsb
xor
movsl
scas
divb
sbb
pop
fiaddl
adcl
in
movsb
lahf
outsl
shll
std
push
out
mov
lock
lds
cltd
popa
cli
adc
mov
mov
push
dec
mov
adc
hlt
sub
adc
add
scas
mov
btrl
sbb
shll
cli
pushf
mov
leave
pop
in
xchg
mov
sub
add
push
loope
cmc
add
mov
out
aas
pop
xor
shl
addr16
mov
mov
mov
insb
adc
rcr
dec
ret
ficomps
cmp
xchg
mov
mov
jns
xchg
and
xlat
ja
mov
in
repz
jmp
jl
dec
lods
clc
push
fcomip
xor
movsl
mov
or
imul
repz
std
or
adc
mov
fstpl
das
add
aam
test
scas
lret
fsubp
les
inc
test
pushw
and
jp
sarl
outsl
lds
mov
jb
xor
push
mov
mov
push
ds
iret
dec
mov
clc
sbb
and
or
lds
and
mov
mov
xor
lret
xchg
rcll
jnp
hlt
mov
xor
out
sti
inc
pop
cld
inc
adc
dec
push
mov
dec
xchg
mov
push
mov
imul
mov
sub
out
xchg
pop
pop
fcompl
adc
dec
inc
push
adc
jmp
or
movsb
sbb
aaa
add
sti
and
ret
and
test
inc
fiadds
nop
mov
repz
xchg
les
leave
sbb
pop
jp
or
aad
shl
xorb
pop
mov
aaa
nop
aas
pop
cmp
mov
addr16
pop
outsl
aaa
adc
enter
aaa
push
xor
or
cmp
sub
xchg
aaa
inc
movsb
sub
pop
sbb
cmpb
and
sbb
and
and
mov
aam
jle
icebp
or
mov
aaa
inc
adc
xor
roll
faddp
pop
lret
lock
rolb
outsl
popf
adc
loopne
sbb
fbld
xchg
sarl
pop
inc
out
stos
jge
jo
movsb
addr16
xor
aas
stc
sar
ja
xchg
mov
mov
hlt
push
andl
clc
dec
adc
mov
popf
addr16
fistps
mov
xor
dec
jl
adc
out
xchg
mov
xchg
pusha
sub
testb
jle
add
pop
cmp
lods
jp
pop
std
lods
pop
cltd
mov
cmpsb
jbe
jb
sbb
insl
jl
int
mov
jno
sahf
fildl
stc
out
pop
xor
xor
or
mov
xchg
das
push
sub
or
addr16
cmp
stos
cmpsb
xchg
movsl
lock
decb
iret
xchg
lea
or
shr
add
sub
mov
fsubs
rol
cmpsb
repnz
jo
jae
push
psubb
iret
clc
inc
out
ljmp
mov
sub
jo
mov
repnz
sbb
pop
mov
dec
cmp
loopne
and
push
inc
adc
lahf
aaa
je
fwait
sub
test
dec
xor
hlt
add
repnz
inc
cltd
mov
aaa
and
add
xor
pop
aaa
xchg
jo
cmpb
jl
lods
pop
dec
addr16
lret
xchg
dec
jl
push
rcl
inc
mov
in
fadds
mov
cli
lret
ja
decb
adc
inc
sub
mov
add
stos
cmpsb
inc
xchg
aas
out
loop
fisttpl
inc
mov
insl
fadd
rclb
inc
push
sbb
push
call
ds
cmpsl
mov
aaa
add
clc
or
outsl
mov
fs
mull
lods
adc
sbb
aam
iret
mov
sti
ja
push
add
xor
nop
jns
fnsave
in
and
add
inc
pushl
lret
push
mov
mov
mov
mov
mov
test
cmp
fwait
aaa
fists
and
out
jb
push
and
ret
daa
enter
and
jmp
repz
decb
ret
pusha
scas
out
popf
sahf
mov
loop
mov
pop
push
or
in
inc
sbb
inc
lea
xchg
lahf
inc
cmpl
call
add
adc
in
sbb
shll
or
mov
add
jle
adc
and
sbb
inc
loope
mov
sub
movsl
cmp
aad
mov
fbstp
hlt
sti
mov
das
mov
jnp
mov
cltd
iret
sub
sub
push
xchg
pushf
nop
or
insb
repz
icebp
cltd
push
inc
fsubs
cs
int3
xor
scas
inc
mov
fistps
jg
dec
and
jg
push
lahf
stc
test
jecxz
xchg
scas
push
outsl
add
psubw
pop
sahf
cli
pusha
mov
jo
and
std
add
outsb
mov
push
push
popf
fists
icebp
add
sub
out
lods
lods
ret
inc
dec
js
adc
aaa
shlb
outsl
cmp
pop
push
aaa
enter
jmp
xorb
push
sub
int3
cmp
ja
aaa
hlt
inc
inc
add
sbb
das
test
jb
movsb
scas
jle
lret
fisttpll
push
cli
test
mov
jecxz
cmp
push
imul
clc
cld
iret
add
push
inc
sbb
imul
repnz
stos
lret
fiadds
call
pop
stc
mov
scas
ds
out
enter
das
jo
cmp
mov
rcrl
fstp
mov
jae
fwait
stos
sarb
cmp
pusha
in
inc
outsl
lock
addr16
cmc
arpl
dec
je
push
test
popa
xchg
sub
ljmp
xor
inc
mov
lock
shlb
aas
xor
or
jle
inc
and
dec
jp
mov
pop
adc
lcall
movsl
mov
and
xchg
pop
or
push
xor
or
pop
movsb
aaa
sub
ljmp
inc
int
fldenv
aad
mov
and
outsl
fisubs
cli
in
cmpsl
mov
in
loopne
lods
sbb
jecxz
or
loop
clc
cmp
jae
fwait
and
ds
out
adcb
dec
aam
addr16
in
and
push
les
or
stos
clc
in
cmpsb
fistpll
jnp
push
xchg
ret
loopne
pop
addr16
lret
fcomps
rcrl
cmp
push
arpl
shll
and
jge
cmp
loope
add
movsb
xchg
repz
scas
or
ret
push
mov
mov
cmpsb
inc
cmpsb
test
jl
mov
stc
dec
insb
mov
xchg
in
inc
sti
cmp
loop
lods
or
inc
jl
repnz
rcr
xor
imul
jae
call
adc
mov
mov
push
xor
mov
aaa
movsb
stos
add
adc
add
lods
lock
aas
loop
pop
mov
xchg
arpl
fwait
adc
fidivrs
int
mov
daa
push
clc
add
push
mov
pusha
jnp
adc
clc
mov
mov
test
or
mov
call
push
fidivrl
mov
sbb
mov
mov
aam
mov
sbb
mov
scas
repz
push
add
repz
push
addr16
popa
adc
xorb
loope
gs
fxch
fisubs
cld
aam
mov
inc
push
fistps
xor
or
out
sub
addr16
sub
scas
xlat
jne
push
aaa
sar
jns
push
test
jae
inc
jmp
inc
mov
aad
add
sub
push
cltd
adc
movsb
aam
je
add
out
iret
mov
xorb
mov
orb
imul
cmp
xchg
mov
jg
pop
lcall
and
cmc
sbb
aaa
xor
pop
mov
pop
jb
cmp
add
and
push
jge
dec
pop
cmp
cli
in
scas
ret
dec
movsb
jns
rcpps
mov
pop
cmp
jns
ss
fdivrs
outsb
or
in
out
push
pop
pop
aam
nop
out
cli
lock
or
push
ret
pop
jno
mov
xchg
add
leave
jmp
pusha
int
fwait
inc
jg
clc
cld
testb
les
sti
das
mov
jg
repz
dec
sbb
fs
dec
movsb
mov
pop
sbbb
sub
mov
mov
std
jg
xchg
fidivs
xchg
sub
push
inc
xor
lods
mov
fstpt
or
jno
push
mov
push
cld
les
mov
pusha
jecxz
mov
inc
sbb
fwait
insl
inc
add
pop
mov
jecxz
nop
mov
mov
scas
sub
mov
mov
push
sbb
stos
add
jbe
call
shlb
push
sub
fwait
outsl
jo
xchg
push
lret
into
popa
in
inc
addl
mov
jecxz
pushf
inc
gs
mov
aaa
xchg
fisubrs
mov
enter
xor
movsl
loop
adc
push
clc
lock
push
andb
or
mov
iret
xor
cmp
push
pop
in
mov
sub
aaa
fadd
dec
insl
nop
addr16
lret
mov
xchg
push
pusha
xor
xchg
add
popa
jl
adc
push
fwait
nop
xor
sbb
int
adc
out
outsl
pop
cmp
inc
aaa
jo
fistps
jae
cmc
dec
mov
dec
loop
cli
jmp
push
push
mov
pop
int
lcall
dec
push
sbb
cmpsb
jl
push
clc
in
addb
mov
clc
dec
into
std
sub
ffreep
clc
sub
rolb
fbstp
jnp
and
jg
daa
loopne
or
cmpsb
addr16
sbb
hlt
ret
movsb
dec
push
cld
bound
push
mov
mov
add
test
loopne
ja
or
repnz
xchg
call
hlt
mov
inc
adc
movsb
xor
cli
and
into
in
fiaddl
mov
pushf
imul
lea
out
adc
daa
mov
lahf
pop
call
mov
test
nop
cmp
add
pop
mov
sarb
xor
cmp
mov
or
insb
jbe
mov
xchg
inc
cld
sub
cmp
aaa
jnp
lds
test
cld
rcrl
sbb
mov
imul
pop
cmc
mov
push
sub
pop
aam
addr16
mov
xchg
nop
jmp
aaa
jge
xor
mov
outsb
les
scas
jbe
jg
jb
addr16
sub
shrl
sbb
in
inc
pusha
cmp
cwtl
xlat
andl
jp
pop
xchg
push
sahf
addr16
xchg
jb
inc
mov
call
movsb
cmp
jns
inc
popa
aaa
mov
loop
mov
nop
test
adc
jmp
icebp
test
int
call
push
dec
xor
icebp
mov
and
cmpsb
jb
xchg
mov
cli
push
mov
lcall
sbb
nop
push
arpl
into
and
pop
insl
jle
rorl
and
xchg
mov
pop
in
cmp
cmp
outsb
sub
icebp
mov
enter
push
ds
jle
les
fimuls
int3
in
pop
sbb
in
push
or
shl
dec
xchg
js
inc
pop
lcall
push
xor
sti
xchg
outsb
shrb
aaa
jo
mov
sub
call
push
popl
sub
imul
subl
inc
jecxz
nop
ret
inc
mov
fistpll
mov
cmp
xorl
xchg
iret
lahf
xchg
mov
mov
inc
pusha
addr16
mov
dec
shl
or
imul
or
sub
xchg
lea
imul
loop
test
jnp
clc
cld
mov
and
filds
adc
push
faddl
ficomps
fldpi
sub
mov
push
lods
adc
xchg
sbb
call
fbld
jno
inc
adc
rcrl
hlt
inc
xchg
lahf
xor
loop
mov
iret
and
inc
test
xchg
adc
mov
sub
outsl
cld
stc
aaa
js
dec
push
and
aam
mov
inc
fimull
pop
aaa
push
jmp
add
jns
inc
xchg
push
mov
insb
mov
and
cmp
lret
stos
mov
lahf
pusha
jne
xchg
dec
insb
mov
adc
decl
arpl
insb
pop
mov
mov
mov
mov
insb
into
and
push
jecxz
lock
and
mov
loopne
fidivrs
mov
loopne
inc
xchg
or
in
sbb
cmc
je
or
loope
mov
test
mov
sbb
test
push
jb
or
popa
nop
sahf
pop
out
stos
push
jl
xchg
mov
mov
sub
rorl
dec
das
adc
insl
or
loopne
push
jb
cmp
mov
jp
aas
or
nop
mov
pop
hlt
lods
das
mov
ja
cmp
xchg
mov
ss
std
lods
loopne
or
xchg
lods
jns
fwait
xchg
cmp
icebp
fwait
clc
mov
test
rorl
enter
jl
aam
cli
push
add
in
add
fldt
sub
dec
mov
out
fcoml
fs
movsl
out
imul
aas
mov
push
fsubrs
xchg
inc
pop
push
lods
pop
lcall
mov
add
icebp
nop
movb
jno
rcll
cmp
aaa
cli
bound
adc
into
xor
mov
mov
ds
das
mov
bound
pop
adc
xlat
fstl
adc
inc
scas
cltd
xchg
push
jns
push
lods
stc
mov
ljmp
popf
add
mov
addr16
inc
ficoml
and
mov
and
jno
loopne
movsl
cs
jg
push
fistpll
mov
mov
ror
mov
inc
lea
xlat
pop
ljmp
sub
aaa
pop
iret
cmp
gs
and
das
sub
or
lods
xor
mov
imul
adc
je
subl
fnsave
and
arpl
fidivl
test
sbb
int
out
adc
xchg
jle
repz
movsb
rorl
movsl
sub
jnp
pop
ss
pop
aad
dec
cmp
add
pop
and
or
out
aaa
adc
xlat
cmpps
out
pop
mov
jae
push
and
mov
repz
cmp
leave
or
ret
adc
xor
iret
cmc
das
das
jg
loopne
xor
sbb
inc
cmpsl
popf
adc
and
or
dec
pusha
xchg
loopne
mov
and
or
adc
mov
shll
pop
or
movsb
inc
daa
jns
adc
dec
insl
ds
lahf
xor
inc
xor
mov
nop
adc
cmp
and
xchg
stc
scas
bound
jmp
jge
sbbl
rolb
pop
and
outsl
jle
jns
addr16
xor
loopne
icebp
jb
push
pop
mov
push
cmpsb
jbe
test
cmc
push
jns
dec
pusha
xchg
outsb
and
movsl
enter
xchg
fsts
or
movsl
cli
cmc
adc
aas
or
mov
jbe
jbe
dec
shlb
movsb
xor
int
pop
out
orb
mov
nop
or
call
clc
mulb
je
cmpb
sarl
aaa
cwtl
or
insl
sub
xor
adc
mov
addr16
cwtl
push
jg
icebp
stc
inc
filds
xchg
adc
test
test
or
ja
cmp
aam
mov
shlb
jne
push
push
ret
sub
lret
adc
fstps
jb
clc
xchg
or
inc
jbe
and
dec
out
pop
cmp
cs
inc
call
int3
pusha
hlt
out
inc
imul
jmp
jns
and
push
das
push
mov
pushf
and
clc
dec
mov
push
fwait
push
add
repz
jbe
jne
cmpl
cmp
xor
out
sbb
mov
loopne
dec
cs
insl
xchg
rolb
outsl
adc
mov
push
jns
push
push
and
add
inc
test
xor
les
ja
push
imul
jbe
aaa
jo
imul
pusha
inc
xor
pop
and
sbb
aaa
shrl
jg
dec
xor
mov
inc
pop
push
ds
dec
mov
cmpsb
call
in
nop
inc
enter
jl
ret
in
adc
adc
enter
cld
cmpl
dec
aaa
popf
mov
stos
push
push
lods
pop
sub
and
jge
mov
imul
inc
mov
das
sbb
lcall
fcoml
sbb
rorb
std
xorb
push
ds
clc
int3
jp
shll
or
shll
in
lock
mov
ds
in
or
mov
testb
roll
jg
adc
daa
ja
sub
stos
in
clc
out
xchg
test
sbb
dec
cmc
in
mov
jo
or
rcll
out
movsb
cli
inc
mov
sub
andb
sarl
call
iret
das
push
jne
sub
cmp
lods
mov
test
cmp
aad
xor
movsb
enter
ja
aaa
mov
sub
iret
mov
in
cmpsb
sahf
lds
les
xor
jl
sub
adc
mov
hlt
icebp
incl
int3
das
sub
cmpsl
gs
and
cltd
mov
xorl
clc
cld
movsb
sbb
mov
loopne
nop
adc
add
mov
sbb
les
int3
xor
in
add
out
sub
scas
out
fs
push
jecxz
add
fmull
mov
inc
and
inc
mov
push
fsts
clc
out
adc
nop
insb
adc
inc
push
or
pop
dec
mov
bound
adc
repnz
cmc
pop
lcall
or
add
sbb
or
js
or
rcrl
jb
fsub
aad
or
sub
cmp
push
lcall
xor
fsubr
aas
pop
xlat
adc
jns
hlt
mov
adc
pop
cld
insb
mov
and
cs
mov
jne
sbb
leave
pop
in
sbb
cmp
es
pop
mov
sbbl
ret
test
aaa
jle
adc
cmp
popa
push
rorl
aam
xor
push
inc
jmp
sub
add
dec
sahf
cmc
dec
lea
clc
lret
movsl
mov
les
xchg
sti
pop
or
cli
lea
jbe
sti
cwtl
jae
inc
aas
rolb
sub
into
jne
pop
pop
xor
addr16
jl
jmp
xor
sub
out
pop
cmp
pop
mov
adc
xor
out
mov
popa
lods
inc
mov
in
sub
int3
outsl
sar
lea
mov
jo
and
les
enter
pop
loope
repnz
cmpsb
out
mov
mov
mov
int
mov
mulb
mov
add
fildll
mov
pushf
mov
and
push
icebp
iret
repz
imul
xchg
test
out
mov
mov
jbe
test
lahf
lds
cmc
pop
das
xchg
mov
jge
and
ja
test
leave
mov
clc
daa
adc
pop
clc
ror
cld
push
jg
ret
rorb
mov
repz
add
jg
pop
xor
cmp
jl
ficoms
pusha
hlt
or
and
shr
push
loope
mov
pop
loope
ret
add
dec
cld
add
inc
sub
mov
push
inc
jnp
loopne
lds
pop
rcrb
lahf
das
add
and
sub
gs
nop
data16
das
adc
jmp
jno
iret
ljmp
je
adc
pop
or
cmp
fwait
popa
repz
fadds
sub
daa
daa
sbb
cs
jns
fnstsw
mov
icebp
ljmp
inc
or
pop
pusha
shrl
or
jl
jnp
sbb
xchg
sbb
in
mov
call
pusha
xlat
testl
add
jno
movsl
jbe
mov
xchg
lods
in
test
xor
in
adc
jecxz
jne
std
in
xor
inc
imul
std
mov
sub
loope
cmpb
fists
inc
lea
pop
ds
inc
dec
mov
mov
and
aaa
jg
aaa
adc
xlat
and
mov
jne
push
fdivs
out
pushl
push
les
mov
clc
shlb
movsl
sub
adc
in
mov
mov
neg
jb
xchg
cmp
mov
movsb
jle
popf
in
push
xchg
lods
clc
mov
orl
fs
add
jge
inc
cmp
and
idiv
arpl
addr16
jge
pusha
pop
push
nop
std
orb
cli
pmaxsw
xor
je
lock
iret
rcrb
loopne
clc
in
lret
pop
fwait
pop
mov
mov
fldcw
enter
adc
adc
sub
adc
and
and
add
fsubrs
dec
xchg
or
and
xchg
jge
push
aas
push
xlat
in
pop
dec
daa
fs
cmpsb
push
outsl
sub
addr16
sbb
add
lret
or
dec
mul
cmp
testl
cld
test
sbb
in
mov
int
loop
movsb
adc
arpl
pop
cli
out
les
fcmovbe
fs
dec
xchg
xchg
aaa
mov
bnd
lods
add
dec
ljmp
aam
add
loopne
jae
fdivs
rcrb
mov
fbstp
pushf
inc
dec
stos
or
sbb
out
inc
movb
mov
fwait
insb
mov
call
jbe
fcomp
sub
repnz
push
adc
bound
cli
cli
mov
mov
sbb
mov
inc
imul
pop
jl
mov
inc
clc
mov
out
xor
icebp
repnz
movsb
dec
pop
mov
jge
or
jo
and
out
stos
pop
lds
jge
ja
fld1
push
filds
or
sub
mov
inc
push
mov
outsb
movsb
jg
mov
mov
jne
xor
jb
filds
cmc
ret
or
pop
por
dec
xchg
inc
push
jmp
xchg
dec
lret
pop
xor
ds
inc
xor
ja
inc
xor
lods
icebp
loopne
ja
nop
pop
cwtl
std
xor
sarl
xchg
jnp
call
mov
xor
or
cmp
and
fcmovb
das
jge
lods
jbe
xchg
outsl
adc
mov
mov
pop
cmpsl
std
je
aad
adc
xchg
rorl
add
lods
inc
dec
jbe
mov
and
js
inc
push
ficomps
mov
add
ljmp
mov
sar
ror
movsb
je
and
xchg
pusha
mov
nop
dec
aas
call
lret
das
cli
pop
mov
mov
sbb
or
pop
out
mov
ljmp
fistps
xlat
mov
js
test
push
mov
pop
jge
or
rcrl
jns
lahf
iret
and
cld
int3
sbb
cs
pop
xchg
jecxz
ds
fsubr
xchg
repnz
popl
pop
scas
adc
jge
cmc
add
adc
pop
mov
cmp
sub
int
jl
daa
xlat
cmc
inc
mov
push
push
jae
mov
mov
xchg
ljmp
ja
nop
xor
lea
cmpsb
idiv
nop
fwait
test
pop
push
out
mov
adc
daa
ljmp
jae
aaa
out
loop
aaa
fadd
adc
aas
daa
xchg
loopne
loopne
mov
dec
push
xchg
pop
aam
lret
mov
ret
push
push
push
adc
jg
out
nop
inc
sub
fisttps
jbe
jno
xchg
mov
negb
push
cmp
movsb
xor
pop
hlt
aas
loopne
cmp
or
or
mov
or
loop
jae
xchg
add
dec
or
loope
or
clc
mov
movsb
mov
add
xchg
inc
or
pusha
xor
adc
mov
xchg
pusha
test
dec
inc
fistpll
cld
mov
sub
fsubl
push
xor
cmp
sbb
adc
xchg
hlt
pop
and
outsl
inc
cmpb
insl
sbb
stos
ljmp
jecxz
fwait
sbb
das
adc
in
icebp
sub
dec
lcall
or
lcall
pop
push
call
ds
jmp
pop
push
stc
lahf
mov
nop
test
cld
xlat
xchg
fst
xor
je
sbb
jmp
or
nop
fwait
aas
jo
jb
add
and
dec
out
ljmp
or
xchg
addr16
add
sarl
call
push
mov
je
aaa
repz
dec
fs
call
cmp
cld
pop
jbe
cmp
gs
fwait
sub
pop
call
cwtl
out
sub
loope
fwait
mov
clc
cmp
popf
mov
ret
ja
mov
popa
ds
addr16
add
mov
fiaddl
dec
pop
call
cmpsb
mov
xor
insb
xlat
mov
stos
adc
ret
jl
mov
mov
dec
pop
les
xor
adc
push
stos
xchg
sub
cli
add
jle
mov
mov
add
call
push
mov
pop
shl
adc
and
aas
js
sub
test
push
fsubrs
scas
sbb
push
popf
mov
mov
loopne
inc
test
xor
xchg
add
mov
sbb
mov
addr16
rorl
adc
and
sbb
xorb
aam
xor
push
lea
mov
cmp
pop
jle
das
mov
xor
fsubs
or
loop
or
lret
hlt
ja
out
loop
ss
lods
imul
xor
or
fadds
insl
ret
add
mov
dec
mov
clc
je
shrb
and
jle
jle
pushf
loopne
js
push
and
dec
gs
xchg
dec
inc
push
add
push
pop
and
fwait
pop
insl
mov
pop
aam
outsb
inc
iret
inc
call
movb
or
xchg
push
fadd
and
mov
pop
les
nop
call
mov
inc
sbb
enter
cmp
mov
imulb
cmp
or
push
cmpsb
sti
pop
mov
test
jbe
std
xor
rcr
xor
jnp
clc
not
sub
hlt
xor
mov
sub
mov
mov
xorl
mov
jg
adc
push
inc
ljmp
xor
inc
fsubrs
mov
add
icebp
pop
ljmp
loope
and
push
jg
sub
add
leave
loope
inc
lock
and
in
cmpsb
lock
jle
pop
popf
pushf
cmp
std
or
push
out
mov
jge
sbb
cmpsb
xor
mov
sub
fdivrp
fsub
add
inc
lods
mov
mov
push
mov
pop
insb
mov
fistl
jne
adc
or
stos
mov
aam
pop
and
adc
sbb
xor
fcmovne
jnp
movsl
push
cmp
rolb
das
lock
mov
mov
data16
leave
sub
je
rcrl
or
sub
and
jmp
jns
cmp
push
pop
and
xor
inc
lahf
sub
push
lahf
inc
cmpsl
nop
mov
hlt
mov
pop
test
call
mov
cmpb
shll
mov
setbe
push
sub
and
jmp
dec
sbb
mov
inc
mov
sarl
sti
mov
jle
ror
sub
or
or
mov
ror
jns
jbe
fiaddl
fwait
subl
jp
nop
scas
add
mov
inc
mov
cmp
pop
insl
or
movsb
or
or
repnz
jg
cld
pusha
and
in
movsl
repnz
and
repnz
lock
mov
mov
jae
mov
mov
fsubs
or
mov
stos
add
addr16
mov
add
adc
push
jns
je
popf
dec
mov
or
push
movsl
xor
xor
nop
inc
cs
cld
sarb
or
outsl
xor
fwait
cmovae
gs
out
jg
test
xchg
lret
fwait
sub
ljmp
or
pop
mov
movsl
jns
pop
add
rol
mov
repnz
je
adc
xchg
divb
add
pop
aas
jb
repnz
xorl
outsb
lret
or
and
sarl
nop
inc
or
mov
mov
lret
mov
mov
rcll
pop
or
dec
hlt
mov
call
es
mov
in
and
xor
cmpsl
std
push
mov
inc
testb
push
cmpb
xor
jg
jle
mov
mov
subb
sbb
fwait
sbbb
dec
aad
pusha
add
movsl
scas
or
push
out
mov
xor
pop
and
sub
push
out
jle
fcompl
imul
mov
lods
insb
xor
add
add
inc
and
mov
add
test
and
push
xchg
mov
imul
fildll
sbb
inc
jno
daa
adc
cli
fsub
push
and
mov
or
pop
bound
and
or
cmp
jmp
insb
sub
and
or
and
enter
xor
sbb
stos
pop
xchg
xchg
fldcw
adc
in
pushl
out
jns
in
mov
imul
sbbb
push
das
mov
jecxz
out
movsl
js
mov
loope
jecxz
pop
nop
adc
fwait
sub
inc
mov
or
jnp
mov
rolb
cli
pop
scas
sahf
aas
cmp
ljmp
push
and
fdivrp
repnz
iret
test
jno
sbb
sub
test
icebp
adc
repz
aas
sbb
int
pushf
mov
add
nop
js
sbb
pop
cld
push
mov
sbb
cmp
insl
cwtl
ja
insb
xor
xchg
dec
sub
mov
or
imul
and
ss
jo
lcall
mov
mov
ljmp
call
add
imul
iret
sbb
out
adc
push
fidivl
fwait
clc
add
xor
ffreep
jmp
sar
pushf
inc
cmovo
aam
nop
pop
maxps
fwait
push
push
jb
adc
loop
inc
push
sbbb
push
add
rolb
shll
or
adc
mov
subb
sub
pop
xor
das
aaa
addb
and
dec
push
cld
mov
xor
iret
push
fsubl
mov
lret
fwait
mov
xchg
adc
cld
cmp
mov
push
add
testb
adc
sbb
push
fidivs
ja
or
xchg
push
sbb
data16
mov
outsl
cmp
pop
adc
inc
gs
jb
inc
cmp
pop
mov
cmp
sahf
sub
inc
fwait
loope
push
and
and
ljmp
lahf
add
mov
aad
sbb
pusha
pop
xchg
sub
mov
xor
lahf
fadd
lds
push
dec
inc
shll
imul
adc
jae
mov
mov
add
xchg
fwait
repnz
jne
pop
imull
sub
imul
pop
cmpsl
pop
dec
xchg
daa
pop
cmpsl
pop
push
xchg
push
push
xchg
insl
dec
mov
adc
and
push
sbb
add
mov
push
xchg
cli
aaa
loop
jne
fwait
jecxz
out
mov
mov
xchg
enter
mov
loopne
iret
xor
sub
adc
pop
push
mov
js
ljmp
fwait
add
sbb
jne
rolb
fwait
pop
and
push
cld
xchg
js
aaa
imul
rcl
dec
inc
and
sub
outsb
pop
fwait
sbb
pop
cmc
cli
addr16
addr16
orb
or
cli
push
pop
je
jge
lods
loopne
inc
mov
push
sbb
leave
pop
lds
inc
aad
lods
cmp
jge
loope
mov
mov
jns
lret
jg
pop
loop
arpl
test
sub
or
mov
out
xlat
movsb
mov
outsl
pop
stc
mov
arpl
jb
xor
xchg
mov
inc
or
pop
cmpsb
fcompl
loopne
out
mov
cs
test
lds
push
add
cld
jecxz
cmpsb
mov
push
jle
lcall
mov
xchg
aaa
push
mov
mov
insb
addr16
arpl
jge
loopne
add
xchg
xchg
jno
dec
aad
push
outsb
adc
jecxz
mov
or
das
pop
dec
fdivp
and
test
and
push
sti
sbb
imul
push
fwait
jp
pop
js
xor
adc
out
xor
sbb
push
dec
out
cld
mov
testl
call
sbb
jg
add
xor
add
mov
dec
cmpsb
out
xchg
inc
inc
cli
sbb
dec
and
xor
das
hlt
aas
lahf
add
dec
fwait
mov
pusha
cli
mov
outsl
dec
dec
mov
sbbb
jl
std
inc
fwait
sbb
inc
insb
mov
dec
out
inc
inc
fwait
cld
aaa
int3
jl
push
ret
frstor
fimull
sub
je
mov
dec
sar
and
adc
or
xchg
inc
add
mov
js
mov
mov
mov
scas
pop
enter
das
cli
xor
loopne
std
xchg
or
dec
fadds
loopne
das
inc
mov
lahf
xor
jl
pop
outsb
push
in
popf
add
jg
xor
jg
aaa
mov
sub
jne
in
jae
xor
test
shrb
sbb
mov
sub
mov
ss
dec
in
sbb
lods
dec
outsl
lock
and
into
fdivl
adc
das
jg
inc
les
xchg
sarb
xchg
pop
jmp
mov
and
adc
fcmove
and
filds
lock
mov
push
cmp
or
sub
sub
lret
push
mov
dec
sub
ljmp
sti
adc
inc
movsb
push
sbb
adc
adc
adc
out
jp
lret
push
scas
pop
sub
iret
aaa
xor
xchg
jmp
pop
adc
pop
and
push
jb
loope
insb
fisubrs
mov
mov
adc
iret
psubusw
cmp
divl
stos
mov
roll
insb
xchg
daa
scas
mov
outsb
mov
lods
mov
int3
inc
and
in
dec
push
xorl
rcrl
ret
jae
movsb
push
and
ss
pop
inc
or
mov
loopne
jp
les
and
stos
pop
adc
aaa
mov
popa
cs
das
cli
inc
mov
lahf
rcr
push
insl
pop
lcall
inc
cmc
fildll
test
add
push
gs
outsb
push
ljmp
adc
arpl
je
outsl
outsb
inc
imul
jle
in
divb
outsl
adc
imul
jne
fcmovnbe
ficomps
imul
imul
fidivl
dec
outsb
outsw
push
adc
sub
mov
inc
jb
gs
imul
jae
jb
test
mov
jo
outsb
sub
jp
insb
push
popa
push
shll
imul
sub
mov
data16
cmpsb
dec
mov
push
xor
jb
jne
js
aam
mov
dec
cs
pop
xor
arpl
xor
sub
fidivrs
inc
jb
jb
or
fs
jae
dec
popa
outsl
idivb
imul
je
aas
loope
scas
mov
jb
addr16
imul
jecxz
outsl
ja
and
shll
push
jo
sbb
imul
repnz
push
inc
dec
add
add
imul
add
add
add
add
add
and
push
mov
or
or
or
adc
push
add
cmp
xchg
sub
add
push
mov
insl
rorl
pop
xchg
mov
test
lock
sbb
fnstenv
push
pusha
neg
cld
pop
sub
sbb
xchg
push
mov
or
sub
xchg
stos
nop
jl
nop
outsb
lods
and
or
push
push
xchg
rcrb
mov
inc
inc
out
dec
mov
add
push
sbb
and
lea
inc
jae
or
movsb
add
or
push
inc
repz
mov
pop
mov
ret
sub
sahf
cwtl
aad
daa
xor
push
scas
movsb
push
pusha
or
add
incb
jp
add
add
add
incl
add
add
inc
add
inc
xchg
rolb
add
jmp
or
ret
mov
push
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
scas
inc
add
loopne
