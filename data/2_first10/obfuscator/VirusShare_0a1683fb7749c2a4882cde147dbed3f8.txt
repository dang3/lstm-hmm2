cltd
call
add
mov
push
sub
add
movl
mov
lock
mov
sbb
add
mov
add
sub
mov
add
mov
jmp
adc
or
rorb
mov
outsl
incl
add
mov
test
je
sub
adc
mov
jbe
std
hlt
mov
sub
sub
cld
push
add
dec
mov
mov
sub
add
lods
jnp
enter
add
mov
roll
fidivrl
jbe
cld
and
adc
pop
imul
ljmp
mov
ljmp
repnz
shr
add
pop
popf
adc
xchg
fucomip
mov
jge
or
or
mov
imulb
mov
jge
outsb
loopne
fistpll
sarb
or
mov
fcomi
cld
mov
rclb
incl
sub
or
out
or
add
pop
xchg
ret
push
mov
add
ret
call
aaa
xlat
mov
icebp
mov
and
pop
pop
inc
or
nop
mov
fcoml
push
inc
jecxz
sti
out
out
out
fstpl
or
push
or
sub
ja
fs
add
scas
adc
pop
mov
mov
mov
sbb
adc
mov
xorb
repnz
mov
mov
jnp
mov
adc
inc
xor
add
clc
adc
repnz
mov
pushw
push
and
adc
inc
jae
lods
dec
or
or
ret
dec
aaa
paddsw
testb
mov
fidivl
push
add
xor
adc
into
xor
data16
mov
sub
js
or
xor
and
mov
outsl
in
or
cmp
push
push
sbb
mov
push
push
push
mov
sahf
shll
push
call
or
mov
or
cmp
je
out
fidivrl
push
mov
hlt
add
mov
fdivr
add
sbb
sbb
imull
pcmpgtw
mov
mov
imul
jmp
js
aaa
movzwl
mov
push
in
int
int
dec
cmp
ret
sarb
cmp
movb
pop
xchg
enter
clc
pop
out
pop
fdivrs
sbb
mov
test
mov
ret
or
insl
adc
add
pop
sub
inc
fcmovnb
adc
or
add
cmp
mov
cmp
pop
aaa
pop
stc
pop
sti
mov
pop
adc
cmp
add
cmpsb
aaa
dec
dec
jnp
mov
add
or
arpl
push
mov
mov
mov
insb
push
mov
insl
mov
ds
test
mov
pop
mov
in
add
sbb
not
lcall
rorl
clc
scas
shll
leave
stos
rorb
sbb
or
mov
loope
movsl
pop
mov
cwtl
into
pop
push
mov
adc
or
pop
and
mov
pop
push
repnz
adc
lcall
leave
mov
and
mov
mov
sbb
mov
jo
and
push
pop
jb
fcmovbe
mov
adc
in
sbb
sarb
push
push
push
pop
inc
dec
pop
sbb
push
pop
rclb
mov
fsubrs
pop
mov
mov
inc
loope
mov
pop
mov
ss
mov
fcoms
cmp
sbb
mov
push
mov
pop
sub
and
aaa
lret
jne
xor
bnd
mov
jmp
clc
dec
push
icebp
test
sub
pop
popf
fs
lahf
test
mov
insl
push
sbb
push
xlat
mov
add
aas
pop
sbb
ret
mov
fmull
fwait
jl
ret
or
hlt
fldcw
movsb
mov
fsts
jge
pop
sbb
mov
fs
cmpsb
sbb
mov
ret
test
stc
ljmp
fisubl
repz
repnz
ret
sbb
pop
add
push
push
sbb
fsubrp
into
jno
out
mov
lcall
ret
call
int
sbb
insb
imul
and
mov
testl
jae
xchg
xor
mov
cmp
add
adc
jbe
shl
and
punpckhdq
sbb
mov
pop
fldt
bnd
sbb
lret
gs
leave
sbb
into
sbb
push
insl
idivb
sbb
test
lock
cwtl
inc
jmp
in
inc
mov
adc
jmp
add
sub
mov
ret
in
test
sub
sub
jge
sub
push
shr
jnp
andl
dec
push
mov
lock
fnsave
push
push
pop
inc
mov
mov
jnp
sbb
enter
push
call
mov
loope
ljmp
jmp
shrb
in
arpl
inc
push
fadd
sbb
ja
in
xchg
adc
lds
add
fnsave
mov
adc
pop
jmp
shll
xchg
ret
jne
mov
xchg
xchg
jmp
loop
fdiv
rorb
aas
mov
cmp
mov
es
fldcw
or
adc
jnp
aad
insl
jnp
add
mov
dec
push
sub
adc
call
mov
cmp
jae
or
add
push
in
pop
setae
mov
sar
in
nop
out
push
push
subl
sbb
mov
sub
dec
and
ret
ret
push
ljmp
adc
mov
sbb
pop
popl
shll
push
iret
mov
or
ret
dec
arpl
push
and
testl
push
adc
inc
dec
mov
mov
cmp
push
ud1
addr16
push
sbb
sti
or
mov
ret
sbb
or
insb
pusha
leave
addb
pushf
or
push
mov
mov
jle
data16
sub
rcrb
je
add
pop
add
imul
mov
pop
mov
cmpsl
ret
mov
sar
fidivrs
repnz
mov
sub
inc
inc
fdivrp
insb
and
rorb
mov
mov
fmuls
sbb
xor
cmpsb
dec
int
mov
dec
xchg
add
mov
arpl
dec
xchg
mov
imul
pop
cli
sbb
out
mov
dec
loopne
pop
add
push
push
into
push
mov
pop
fidivs
add
rorb
leave
push
pop
jp
inc
mov
mov
jge
sub
rolb
cld
push
pop
jb
jmp
out
ret
add
imul
mov
out
jl
mov
int
inc
xchg
mov
hlt
fbld
mov
mov
mov
into
or
or
pop
cmp
rcll
fidivs
sbb
fdivrl
test
push
lock
pop
push
push
push
mov
sarl
push
imul
loop
add
outsb
cmpsb
sbb
push
xor
lea
call
or
sub
sbb
push
xchg
mov
inc
inc
push
jo
popa
cmp
cmp
mov
xor
ret
xor
inc
push
clc
pop
ss
nop
out
push
sub
jge
add
xchg
add
dec
push
mov
push
loopne
push
cmp
xchg
push
lock
shrb
mov
inc
jp
sub
dec
hlt
fdivrs
add
or
stc
outsl
leave
aam
xchg
repnz
mov
push
pop
jl
enter
pusha
dec
jb
sarb
jbe
call
call
pop
xchg
mov
or
jle
sub
shlb
mov
sbb
pop
cmp
mov
add
mov
ret
adc
sub
mov
or
lcall
add
test
push
dec
mov
sti
push
in
into
mov
out
mov
cvttps2pi
rorl
roll
xchg
pop
xchg
add
fwait
call
mov
cmpl
rolb
adc
divb
and
rolb
test
pop
aaa
sbb
and
out
pop
cltd
add
pop
gs
dec
pop
add
push
outsb
rcl
hlt
pop
popa
jnp
fiaddl
in
adc
int
mov
mov
or
lods
rolb
cs
pusha
mov
nop
pop
insl
test
jne
movsb
inc
cmpsb
sub
andl
xor
mov
stc
cld
loope
js
add
ljmp
leave
inc
push
inc
mov
pop
xor
mov
cmp
cmp
mov
add
xor
push
sti
jns
jmp
or
test
clc
sbb
cmp
sub
mov
push
pushf
rcll
sbb
mov
roll
push
rorl
mov
xchg
pop
rolb
or
rolb
push
xchg
test
sbb
inc
cs
sub
inc
mov
sub
push
insl
add
outsb
lcall
or
mov
mov
lock
fwait
lret
cltd
xchg
push
push
mov
and
paddb
in
call
xchg
outsb
sbb
lret
xchg
inc
jmp
rclb
outsl
xchg
fisubl
and
xor
mulb
nop
mov
sbb
jo
insb
mov
data16
push
xchg
imul
pusha
add
push
repnz
inc
loope
xor
ret
mov
gs
jne
lods
popa
ret
nop
add
pusha
leave
call
mov
rorb
or
sbb
and
data16
dec
mov
dec
scas
push
adc
cmp
mov
push
push
push
pop
mov
push
mov
or
jmp
mov
ds
push
mov
scas
pop
pop
mov
mov
in
leave
mov
push
pushw
mov
add
push
mov
call
sarb
shlb
lret
xor
mov
ret
xchg
jg
dec
inc
movb
insb
mov
testb
clc
or
sarb
icebp
cmp
insl
jg
xchg
aam
loope
mov
mov
sub
inc
mov
and
or
cmp
popa
sub
pop
inc
dec
js
cmp
dec
mov
and
mov
or
mov
inc
inc
and
jo
sbb
pop
pop
aas
cmp
cmpsb
xlat
mov
stos
lds
sbb
dec
shlb
sub
adc
adc
push
repnz
sbb
add
dec
mov
pop
or
jo
or
xchg
cmp
push
cwtl
push
lea
imul
jne
imull
jo
les
nop
pop
hlt
push
leave
add
xor
fadd
aam
loopne
scas
out
mov
and
sub
sub
bound
or
add
mov
fnstsw
sbb
or
icebp
jbe
cmpb
adcl
in
cs
addb
push
mov
mov
divb
cltd
add
inc
insb
ror
xchg
rcll
bound
into
cmpsb
imul
stos
mov
xchg
jo
pop
call
aam
or
nop
inc
fldcw
out
cmp
lods
xchg
pusha
mov
pop
sub
mov
push
into
xchg
mov
xchg
jmp
adc
sub
pop
inc
adc
ljmp
cmp
out
mov
ret
stos
push
sbb
popf
fdivs
subb
xchg
mov
push
ss
xor
jo
mov
pop
push
sbb
lock
cmp
insb
inc
push
sbb
pop
sub
jno
or
xchg
fs
ret
inc
mov
mov
lea
jno
push
push
cmpsl
push
mov
pop
or
aaa
or
les
inc
sbb
rolb
imul
and
push
rclb
xor
test
cmp
or
imul
ficoml
cmp
jbe
adc
sbb
movl
add
xchg
jns
arpl
or
fistpl
mov
rcrl
rcrl
cmc
add
push
mov
loopne
rolb
ror
scas
mov
push
fimull
ljmp
add
mov
and
insl
repnz
mov
call
pop
test
jmp
sbb
pop
aas
ljmp
lock
or
call
ret
je
push
xorb
mov
xchg
scas
xchg
fmuls
rclb
fdiv
fldenv
or
mov
add
pusha
sbb
das
xor
mov
push
jmp
enter
sbb
push
loopne
movb
xchg
cli
pop
sub
dec
into
subl
sets
push
pop
js
inc
js
loopne
imul
push
scas
pop
outsb
test
adc
shll
dec
push
xchg
mov
push
and
and
lods
add
repz
xchg
outsb
sbbb
dec
jge
mov
mov
xor
mov
mov
xchg
stos
sub
sub
std
mov
sbb
shrl
icebp
mov
xchg
dec
cmp
mov
pop
dec
sarl
adc
movsb
xor
mov
ljmp
scas
sub
xchg
icebp
fs
mov
aas
mov
mov
push
repz
sub
nop
jnp
jecxz
mov
subb
pop
pushf
xor
mov
fisubrl
mov
cmp
push
in
mov
inc
or
push
push
pop
stos
sub
sub
pop
sbb
inc
bound
mov
push
es
fimuls
jnp
mov
add
ljmp
dec
mov
ja
sarb
inc
sub
jbe
dec
sarl
jmp
sbb
call
lods
fadds
fistps
pop
scas
inc
outsl
cmp
sbb
add
and
std
xor
stos
sar
cmp
les
xorb
pop
cmp
pop
daa
dec
push
ss
or
popa
pop
mov
pop
andb
rol
ret
rclb
nop
push
popa
mov
fs
cmpsb
and
lods
push
push
bound
lock
mov
mov
inc
pop
inc
or
orb
or
dec
push
shrb
pushf
test
cmp
push
shl
push
adc
sub
or
cmp
rcrb
xlat
movsb
fucomp
and
mov
sbb
adc
repz
test
adc
sub
test
out
scas
xorl
and
stos
out
sti
cmp
jo
in
dec
cmp
push
xchg
mov
mov
cmp
adc
jo
js
mov
and
sbb
jg
xor
js
pop
dec
adc
push
rcl
adcb
fstpt
addr16
push
push
lods
or
sub
mov
aam
mov
ljmp
ss
mov
movsl
adc
lock
cmp
xlat
sbb
dec
frstor
push
dec
mov
add
sub
clc
sub
fs
or
mov
and
and
ret
lock
jne
jno
dec
sti
sub
pop
mov
sub
fimull
movsb
dec
jl
inc
cmp
pop
pushf
push
xor
mov
int3
addb
mov
mov
mov
test
inc
pop
insl
lea
add
mov
mull
push
xor
adc
jo
add
mov
pop
mov
test
fcmovb
call
fadds
test
imul
aaa
popf
mov
sbb
mov
rorl
pop
cmp
xchg
adc
mov
add
push
test
xor
rorl
add
bound
cmp
and
lahf
and
mov
sbb
outsb
inc
cmp
push
pop
sub
pop
mov
rolb
pop
or
xor
inc
andb
fnstsw
xchg
xor
push
lock
add
fistpl
jle
jecxz
jo
mov
ret
pop
and
xor
adc
into
rorb
mov
add
mov
icebp
mov
push
jo
adc
sub
pop
lea
mov
in
and
inc
out
mov
in
gs
push
adc
sbb
rcrl
bound
mov
inc
adc
push
push
cmc
shlb
mov
push
push
fcmovb
pop
pop
cmp
pop
repnz
fistps
push
push
xchg
push
push
dec
push
es
rcll
inc
adc
sbb
mov
or
mov
push
popa
jp
xor
xchg
dec
addr16
cs
mov
lods
push
mov
jns
dec
into
jp
jmp
or
addl
aam
xor
xchg
mov
lea
ret
jge
jg
push
sub
add
pop
dec
push
ficomps
push
adc
movsb
jle
je
add
adc
movl
mov
lret
enter
push
xor
stos
adc
mov
stc
sub
or
lret
aam
popf
pop
clc
shlb
and
dec
mov
push
inc
pushf
les
inc
test
adc
leave
aaa
sti
xchg
xor
add
ljmp
xchg
shlb
pop
ss
dec
sbb
inc
sbbl
sub
andl
inc
loop
push
out
jle
daa
mov
inc
add
shll
sub
in
push
and
pop
icebp
sbb
pusha
and
in
push
dec
es
push
cmovae
out
adc
addb
shlb
jo
pusha
enter
sbb
jmp
hlt
pop
test
jp
test
scas
and
je
xchg
pop
pop
dec
inc
add
mov
xchg
add
mov
xor
sbbb
dec
add
jp
or
mov
push
out
pop
sbb
mov
xor
mov
mov
jne
and
jg
pop
js
push
inc
enter
dec
mov
orb
or
outsb
sbb
sub
sub
push
insb
shl
jo
stos
and
and
mov
dec
add
rolb
popa
xor
cs
and
mov
outsb
jle
adc
push
add
push
mov
cmp
shrb
mov
rorl
adc
sub
mov
sti
dec
mov
push
push
out
addr16
addr16
push
inc
mov
scas
jb
out
nop
movsb
sbb
mov
ja
std
xlat
test
aad
popf
mov
fdiv
dec
adc
mov
push
or
mov
mov
push
push
inc
add
push
mov
jge
ret
test
mov
add
adc
inc
stc
or
pop
cmp
push
rol
jb
mov
test
inc
dec
mov
rorl
pop
push
jnp
loopne
cmpsb
push
repz
bound
or
adc
adc
pop
aad
rolb
sbb
filds
push
adc
scas
mov
mov
shrb
loopne
loope
sbb
lcall
aas
mov
adc
sbb
and
push
shll
bswap
sbb
jne
call
mov
ret
add
xor
add
clc
xor
inc
or
andb
notb
push
iret
call
or
pop
dec
mov
push
inc
add
icebp
cwtl
mov
cmpsl
adc
xor
lret
inc
add
inc
sbb
jnp
loopne
fmuls
xor
xor
or
sub
pop
add
push
cmp
add
pop
mov
lds
pusha
enter
adc
pop
xor
xor
lahf
inc
mov
aam
or
out
loope
pop
lea
inc
push
iret
repnz
mov
push
mov
imul
or
out
insb
sbb
pop
cmp
and
pushl
ret
xchg
out
adc
push
sub
fcompl
pusha
fiaddl
sbb
lods
into
cmp
mov
dec
dec
mov
adc
xadd
sbb
mov
push
sbb
adcb
insl
cwtl
outsb
mov
push
popa
rclb
into
lret
jp
dec
xchg
pop
enter
sbb
or
movsb
in
pop
stc
dec
jecxz
gs
in
dec
lahf
loope
or
xchg
mov
test
xor
xchg
std
cmp
ds
cmp
stc
enter
mov
aam
sub
mov
and
pop
out
out
jecxz
push
mov
pop
ds
popl
jl
shlb
dec
mov
stc
enter
push
or
and
jmp
and
stos
push
out
jno
pop
shll
xchg
pop
sti
leave
and
mov
sub
pop
mov
cld
or
movsb
jl
daa
loopne
test
enter
scas
ds
cmp
pop
pushl
pop
stc
enter
jecxz
rolb
jg
add
add
cmp
xor
fsubrs
cmp
xchg
fwait
xor
inc
adc
mov
pop
and
add
jl
and
and
cmpsl
xchg
fmull
out
cmp
xchg
and
clc
pop
in
and
ljmp
imul
out
push
jmp
cs
mov
out
mov
jl
and
test
subl
inc
ds
imul
notl
mov
and
stc
enter
aam
push
dec
and
pop
stc
in
lcall
mov
sti
leave
pushf
cmp
inc
insl
iret
inc
movsl
pop
wbinvd
inc
ds
fadds
clc
or
push
xchg
mov
push
stc
enter
jb
les
jmp
inc
divb
mov
push
mov
clc
daa
pop
stc
enter
lods
cvtps2pi
xchg
pop
inc
adc
inc
ds
fwait
inc
pop
dec
mov
push
pop
into
cmp
stc
lods
cmpsb
testb
mov
jb
jnp
ret
jl
inc
and
out
mov
inc
sub
loope
enter
jne
xor
addr16
arpl
jge
sarl
shr
ss
inc
sti
xchg
sub
jo
mov
pop
stc
pushf
je
add
add
rclb
jl
mov
rcr
mov
test
in
jl
mov
insl
int
imul
xorb
stc
and
and
adc
fistpl
stc
enter
js
xchg
cltd
dec
rclb
jl
and
fdivrs
cmc
scas
fnsetpm(287
in
fadd
push
repnz
ja
push
or
in
and
stc
enter
xor
loop
and
sti
leave
in
xchg
les
int
xchg
jl
aaa
fldcw
or
mov
push
push
scas
in
std
in
sbb
pop
xchg
int
sbb
js
or
or
jmp
jl
and
pop
stos
xor
mov
cli
in
mov
and
sbb
outsb
dec
push
dec
pop
mov
je
lock
pop
std
jmp
xor
rorl
leave
and
stc
pop
pop
insl
repnz
lea
in
pop
sti
cmpsb
jb
out
mov
dec
push
arpl
out
mov
fsubs
jns
fisubs
aad
pop
cwtl
and
fistpl
and
stc
and
jmp
or
jl
jae
mov
cwtl
insb
or
mov
cmp
fidivrl
mov
stc
enter
test
pop
lret
jae
jl
and
sbbl
test
and
xchg
cmp
testl
stc
enter
movsb
xor
jbe
jle
insl
test
jl
and
and
mov
dec
clc
xchg
push
dec
scas
jl
and
les
stos
sbb
repnz
inc
mov
xor
cmp
pop
stc
enter
jp
dec
inc
fiaddl
inc
xchg
jl
das
adc
in
repnz
inc
inc
imul
enter
pop
mov
orl
dec
push
stc
ljmp
sbb
insl
aad
in
pop
stc
ja
mov
test
repnz
jl
xchg
outsb
push
je
lret
pop
sbb
xchg
jge
sub
sbb
or
stc
enter
push
adc
sub
flds
bound
jl
and
aad
mov
adc
xchg
mov
ds
clc
aad
fwait
add
jmp
popa
mov
mov
enter
fsubr
and
jbe
cli
inc
ds
pop
mov
test
imull
dec
push
stc
enter
cld
mov
cmpsb
leave
repnz
pop
in
int
mov
rorb
popa
or
outsb
test
jl
and
hlt
mov
mov
fisubl
pop
jbe
sbb
pop
sti
flds
repnz
imulb
jb
push
adc
cvtps2pi
adc
imul
cmp
aad
mov
and
repnz
jl
sti
ret
sahf
lods
xchg
mov
enter
call
clc
mov
arpl
dec
sti
lods
mov
jae
imul
xchg
clc
dec
and
repnz
pop
stc
enter
mov
dec
add
jl
and
mov
push
loop
cmpsb
pop
sti
in
daa
arpl
cli
add
packuswb
out
rorb
repz
dec
sub
or
std
in
sub
push
mov
or
jmp
repnz
out
imul
lock
lcall
nop
in
cltd
icebp
pop
lahf
jb
xchg
jl
push
sbb
outsl
nop
dec
out
push
data16
sbb
repnz
faddl
and
xchg
sbb
stc
or
sahf
stos
sub
pop
stc
enter
mov
cwtl
cmc
sbb
inc
cmpsb
jae
lcall
dec
ljmp
mov
jg
add
scas
stos
xchg
sub
xchg
es
lock
mov
jae
xchg
inc
ds
sahf
push
xchg
out
mov
stc
enter
and
notb
out
stc
enter
stc
rol
sub
jmp
sti
leave
and
xchg
inc
sub
je
lock
sub
mov
xor
clc
jl
movsb
in
pop
ds
arpl
mov
add
add
repnz
test
aas
pop
mov
dec
jp
stc
enter
out
jp
addl
fmuls
add
flds
mov
fmull
pop
sub
test
js
jl
daa
sub
in
and
loopne
jge
xchg
sbb
add
adc
stos
ds
ds
adc
int3
divl
ja
aaa
stos
call
loope
pusha
mov
incb
and
imull
mov
dec
inc
push
clc
cwtl
jmp
xor
xchg
sahf
cmp
add
adcl
ds
nop
imul
jl
arpl
push
or
dec
and
int3
jne
cmp
or
xor
repnz
loope
xlat
mov
fcmovb
sarb
repnz
xor
push
sbb
jnp
and
stc
enter
enter
and
ljmp
and
lods
mov
sbb
sbb
mov
mov
push
scas
ja
sbbb
pop
mov
jns
loopne
or
addr16
jl
mov
sub
lea
mov
pushf
mov
push
xchg
xor
fdecstp
repnz
jl
or
cmp
sbb
cmp
dec
mov
pop
or
add
leave
inc
clc
push
test
sbbb
mov
push
pop
inc
xchg
jbe
pusha
icebp
xchg
mov
sbb
mov
cmp
repnz
in
loopne
cli
dec
push
mov
jecxz
es
stc
enter
scas
mov
sbb
mov
inc
movsb
mov
mov
and
jge
inc
pop
ror
lahf
mov
insw
cwtl
setnp
pop
xorb
cmp
jb
lock
lahf
jl
mov
je
adc
into
inc
bound
pop
stc
fsubs
xor
add
scas
jno
xchg
push
cmp
push
std
mov
inc
add
je
pop
jae
or
and
stc
enter
sahf
hlt
push
mov
xlat
mov
mov
andb
sti
enter
clc
mov
imul
sbbl
and
clc
push
sub
and
sbb
test
inc
mulb
pop
imul
xchg
or
and
jl
jne
pop
jg
lea
enter
test
inc
ffreep
leave
mov
stc
adc
bound
lea
dec
sub
sarb
sub
loopne
jmp
in
hlt
int3
xchg
or
into
daa
jbe
lock
mov
pop
jge
and
in
xchg
mov
sti
stc
fsubs
ds
jge
mov
shll
pop
jecxz
jae
in
push
insb
loop
stc
enter
xchg
shlb
mov
inc
loop
jl
and
or
stos
sbb
mov
xchg
popl
pop
inc
repnz
lods
ss
pop
nop
out
inc
je
sbb
pop
fsts
xchg
inc
les
sbb
jge
and
lcall
xchg
cwtl
mov
xchg
insl
fisubrl
cli
inc
mov
repnz
xchg
mov
inc
repnz
outsb
push
hlt
sbb
jne
std
enter
insb
add
data16
push
xchg
imul
pusha
ffreep
jmp
repz
jl
rclb
mov
or
mov
jbe,pt
jno
into
mov
xor
xchg
cld
jge
add
scas
xor
pop
xchg
fcomi
enter
mov
sub
and
mov
test
loop
addb
mov
jl
and
push
mov
push
in
sub
add
repnz
ret
add
xchg
and
stc
enter
mov
mov
add
jl
cli
scas
std
dec
imul
in
and
xchg
mov
lds
mov
inc
mov
pushf
lock
in
inc
ds
pop
pop
incl
leave
ss
arpl
sti
in
lods
sti
jmp
pusha
or
loopne
xchg
jl
dec
stc
adc
mov
repnz
mov
arpl
sub
dec
pop
in
pop
stc
inc
sarl
push
cmc
xchg
jmp
in
daa
jl
fdivrs
mov
data16
repnz
jl
repnz
loop
mov
or
cwtl
xchg
nop
jle
dec
jns
and
enter
js
fnstsw
and
in
aas
ss
aaa
jge
mov
adc
pop
fyl2x
or
divb
loopne
add
pop
push
ds
mov
mov
mov
push
cmp
addr16
aas
mov
mov
arpl
lods
mov
xchg
aad
repnz
push
push
lcall
dec
lcall
sbb
adcl
add
jne
cmp
jae
jl
and
push
adc
jg
cld
stc
xor
push
mov
testl
aas
push
mov
imul
dec
add
cld
stc
repz
mov
pop
dec
add
rcrl
jg
push
cli
in
rdmsr
in
pop
add
stc
repz
jp
sub
subb
je
gs
bound
lahf
lahf
aas
jg
fdivrs
ret
stos
leave
scas
xchg
sti
inc
sarb
js
stc
repz
out
repnz
dec
mov
les
sahf
cld
pop
sub
push
xor
jl
jle
push
adc
cli
push
loope
cmpsb
lahf
xchg
popf
mov
repnz
sbb
pop
push
push
cmp
pop
dec
dec
jno
xor
jg
repnz
cmp
or
in
ds
or
lret
cs
cwtl
adc
jle
inc
daa
cwtl
cmp
inc
fwait
and
stc
enter
lret
int
roll
scas
arpl
repnz
std
push
add
xor
in
and
sahf
cmc
mov
les
sub
enter
dec
push
rol
repnz
pop
stc
push
xor
jl
enter
add
xchg
jl
and
mov
in
jl
gs
sub
lock
jne
sub
repnz
cld
jb
movsb
stos
adc
cmpsl
pop
add
xchg
repnz
dec
or
lods
inc
fsts
jmp
enter
sub
xchg
cltd
mov
pop
mov
pop
pop
sub
jle
and
mov
ds
sbb
mov
fisttpl
sub
notb
adc
sub
inc
xchg
lret
sub
test
aad
pushf
pop
stc
enter
xchg
shr
add
enter
imul
popf
roll
movsb
add
aas
jns
xchg
and
mov
xor
xorl
xor
leave
arpl
mov
popa
cmc
jae
cmp
cltd
aad
mov
pcmpgtw
ds
ds
roll
push
inc
and
pop
stc
enter
mov
add
cwtl
cmp
roll
outsb
fwait
mov
and
cmp
cmp
cld
stc
pause
repnz
ss
rcr
jle
adc
lahf
aas
jg
addl
fsub
pop
fdivrl
and
inc
cld
insb
xchg
out
jne
fucomp
mov
xchg
ja
iret
lret
cmp
les
enter
bnd
sub
jmp
mov
inc
or
jge
push
inc
pop
loopne
sub
jecxz
jp
shr
aam
sbb
icebp
in
jecxz
iret
lahf
loopne
sbb
leave
loope
out
lret
repnz
repz
pop
imul
inc
sti
repnz
jle
scas
dec
lds
aas
stos
fdivs
bound
jo
pop
clc
lock
enter
and
ret
cwtl
lds
fsubs
dec
in
aas
loopne
or
adc
enter
push
cmc
xchg
in
ljmp
and
clc
nop
lods
and
test
jmp
pop
stc
jns
xor
jo
cmp
stc
repz
mov
cmp
push
jbe
loop
or
cmpl
or
cltd
xor
fistl
hlt
jmp
enter
iret
jecxz
xchg
notl
testb
out
push
cld
stc
repz
pop
mov
mov
xor
les
fwait
xchg
aas
jg
adc
outsl
mov
iret
lahf
aas
sarl
and
in
mov
xchg
fisttpl
cld
stc
repz
push
jns
push
jl
mov
push
pop
lea
pop
stc
jne
mov
jp
outsl
out
lahf
aas
popf
cli
push
xor
mov
jnp
movsl
loop
and
jnp
aas
add
adc
adc
daa
jl
push
mov
outsl
or
mov
in
add
cmpsl
stos
subl
cmp
ljmp
loopne
cmp
jne
jl
pusha
adc
fimull
push
xor
mov
arpl
repnz
cmp
dec
and
lcall
dec
xchg
jl
ljmp
in
fwait
enter
cmp
cltd
sti
pop
sub
or
lds
stc
out
cmp
into
lcall
mov
arpl
loopne
enter
loopne
dec
shll
lods
jb
lahf
aas
push
add
lea
stc
repz
lret
xor
addr16
pmaxsw
add
aas
jg
cld
hlt
lcall
fdivs
xchg
out
lahf
js
push
cmp
dec
sub
cld
cld
stc
stos
mov
sub
dec
in
and
out
lahf
push
xor
mov
xor
imul
iret
cs
loopne
out
pop
cmp
ret
and
stc
enter
stc
in
fnstcw
in
int
mov
mov
cmp
and
add
push
push
stos
leave
inc
ds
or
sub
sbb
repnz
lock
icebp
mull
cmp
stc
enter
xor
out
jnp
xor
jl
and
inc
into
pushf
jg
or
dec
jbe
sub
xchg
jge
aad
xchg
iret
xchg
movsb
inc
jmp
lcall
repnz
push
add
mov
xor
nopl
enter
pop
add
and
sbb
inc
mov
sub
pop
mov
xor
push
inc
nop
jl
dec
ds
addr16
imul
insl
out
repnz
xchg
or
lcall
imul
mov
imul
inc
ds
pushf
mov
shl
mov
adc
inc
push
stc
xchg
sahf
cmp
cmpsb
lret
dec
into
sbb
out
repz
pusha
pop
imul
xchg
xchg
xchg
enter
pop
or
cltd
mov
repnz
or
popa
xor
add
cmp
push
orl
data16
fsubs
pop
sti
push
lret
data16
mov
jge
and
stc
cmp
xor
pop
dec
addr16
mov
and
daa
pop
stc
enter
ret
ret
pusha
mov
stc
fsubrs
sub
mov
adc
rcrb
xchg
jl
push
fdivs
int3
prefetch
jge
lods
hlt
in
cmp
push
sbb
mov
xchg
insb
inc
in
sbb
xor
dec
inc
cmp
xchg
sbb
xor
fwait
xor
mov
lret
dec
js
pop
ja
cmp
sub
sbb
xor
call
xchg
pop
neg
mov
ja
jns
sbb
push
cli
push
xchg
cld
stc
repz
pop
add
js
adc
xchg
pop
lahf
aas
jg
inc
pop
push
xchg
add
xlat
xchg
stc
repz
pop
ror
psrlq
cld
bndldx
sub
cld
push
cmp
sti
or
mov
leave
data16
int3
lds
pop
stc
fadds
idivb
rol
cmp
jl
and
fucomi
xor
jp
bound
inc
ds
fisubrl
fstl
mov
cltd
in
icebp
leave
testb
es
mov
add
cld
sub
push
mov
iret
lahf
aas
imul
call
addr16
cld
stc
rep
lods
aaa
in
sahf
rol
scas
xlat
popl
dec
mov
aas
jg
inc
push
in
stc
mov
xchg
sti
insb
lods
cld
stc
repz
cmpsb
sahf
mov
icebp
repz
stc
stos
mov
sahf
jl
lcall
sbbl
es
sub
xor
push
ss
mov
sub
and
insl
push
js
and
iret
test
repz
out
mov
sub
mov
mov
jg
cld
aaa
jle
daa
pop
fisubl
lret
idiv
mov
movsb
std
repnz
lahf
in
aas
addl
scas
add
push
stc
xrelease
les
movsl
sub
stos
dec
aas
jg
cld
stos
into
jb
decl
test
out
lahf
aad
push
inc
jl
fdivrs
jo
enter
outsl
or
mov
pop
dec
cs
iret
mov
push
mov
and
jns
cmp
in
jmp
outsb
into
hlt
popa
jmp
out
push
mov
je
iret
jno
xchg
mov
inc
jg
fwait
in
mov
mov
push
out
hlt
xchg
es
or
cwtl
xchg
xchg
stc
repz
int
pop
fwait
mov
and
jle
lds
popf
push
sahf
adc
addb
inc
imulb
mov
out
jo
or
mov
outsl
lods
lret
int
je
scas
dec
in
pop
stc
repz
or
sbb
or
arpl
mov
or
and
sti
or
std
ret
cmp
jns
daa
jl
dec
mov
jae
stos
mov
xchg
xor
sbb
and
into
test
jl
add
cmp
sub
imul
dec
push
fneni(8087
ljmp
jae
stc
enter
into
mov
int3
adc
leave
and
leave
lods
bound
mov
repnz
mov
inc
xor
aas
adc
test
inc
idivb
jp
sbb
not
and
cmp
stc
mov
push
dec
mov
clc
cwtl
lods
loopne
repnz
lock
dec
stc
sub
dec
xor
inc
ds
cmpsl
lahf
xchg
clc
mov
arpl
test
add
jecxz
fbstp
movsl
and
jmp
and
mov
cs
cld
push
test
jl
js
lods
or
xor
test
inc
imul
fwait
adc
sahf
adc
or
rclb
stc
jg
cld
stc
xchg
mov
out
jecxz
mov
cmp
out
lahf
aas
or
rclb
xchg
bound
jae
mov
iret
call
jno
loop
xchg
stos
xchg
aas
jg
fcomps
stc
mov
sbb
aas
mov
mov
mov
enter
sbb
sbb
xchg
insl
xor
xor
xor
push
push
enter
dec
loop
dec
popa
sub
cld
cmpsb
push
stc
enter
in
aaa
loopne
jp
xchg
jo
test
mov
inc
loop
fcmovb
inc
cmp
repnz
fsubrs
mov
sub
in
leave
inc
adc
in
push
inc
and
imul
add
or
mov
daa
fcmovnu
and
inc
push
stc
enter
sbb
mov
cwtl
iret
jg
push
sbb
mov
out
lahf
aas
adcl
mov
ds
leave
add
add
mov
jmp
notb
inc
ds
mov
pop
jl
enter
leave
xchg
mov
notl
cmp
lods
xchg
xchg
or
jg
mov
lret
adc
fdivl
repz
lahf
outsb
ds
inc
sub
scas
jmp
icebp
push
in
jg
cld
stc
mov
cmpsl
mov
mov
push
aas
sbb
mov
cld
stc
repz
pop
sub
stos
xchg
pop
jle
aas
jg
and
adc
test
lahf
shll
in
push
push
jmp
push
lock
aas
jg
cld
sub
setne
xchg
adc
daa
loope
push
jl
mov
aad
cld
stc
repz
mov
jo
or
sub
shlb
iret
lahf
inc
cmpb
sarb
add
cmp
rep
dec
popf
mov
aad
and
cld
stc
orl
or
popa
jg
jno
outsb
cmp
ret
icebp
xchg
cmp
pop
cmp
mov
mulb
scas
cmp
sbb
cmp
daa
push
das
adc
in
sub
repz
lahf
inc
mov
out
mov
xor
cs
jg
cld
stc
insb
fsubrs
iret
sete
cli
mov
and
xchg
fwait
cltd
fldenv
cld
stc
repz
xchg
in
cmpsl
lret
ret
inc
cmp
adcl
addb
xchg
ret
sti
adc
subl
adc
pop
cmp
scas
lds
int
hlt
std
in
xchg
pop
xor
inc
sbbl
repz
jge
xchg
push
pop
pop
mov
sbb
fnstsw
decl
pop
in
inc
data16
pop
cmp
iret
jl
arpl
pop
pusha
or
mov
repnz
ds
pop
cwtl
add
je
pop
sub
jb
and
stc
enter
cmp
stc
fwait
pop
out
lcall
repnz
in
stos
and
jle
push
cmp
fidivs
sti
or
popa
cli
ds
pop
int3
lcall
lret
jl
xchg
inc
aas
push
push
rcll
mov
jl
xor
loopne
mov
jl
arpl
pop
imulb
lret
add
xchg
in
pop
and
xlat
hlt
enter
gs
sbb
fidivl
sub
sub
inc
repnz
iret
mov
adc
lock
sub
adc
and
stc
enter
iret
jnp
push
in
dec
inc
daa
jl
outsb
mov
mov
pop
stc
fcoms
and
inc
lods
stc
lret
lds
pushf
jl
and
aas
push
repz
and
aas
incl
sbb
inc
and
and
mov
push
std
pusha
ja
imul
sub
nop
jecxz
das
xchg
enter
jg
inc
xchg
cli
inc
iret
enter
jne
popa
dec
out
lock
popa
xor
ud1
add
in
ficomps
sbb
push
lahf
aas
jg
mov
adc
inc
insl
pop
and
pop
inc
stc
repz
jp
add
dec
lcall
stc
adc
pop
cmp
inc
insb
sbb
aas
jg
push
and
jae
jmp
dec
enter
out
stc
repz
sbb
xorl
ja
pushf
aas
jg
cld
jno
scas
add
iret
hlt
jle
add
repz
lahf
rorl
add
mov
xchg
sub
jg
cld
stc
pop
mov
out
shll
mov
shld
out
lahf
aas
inc
and
out
shll
xor
repnz
repz
or
movsb
popf
icebp
fsubrs
mov
stos
adc
mov
mov
aas
mov
imull
repz
and
int3
test
jge
mov
aas
jg
je
add
ds
repz
stc
fnstenv
dec
mov
lret
jmp
cld
call
jno
cld
stos
push
sbb
fisubl
repz
lahf
add
in
iret
lods
frstor
push
cld
stc
cmp
jae
imulb
jae
or
adc
aas
jg
inc
ret
and
pop
int
test
jp
daa
aaa
repz
lahf
adc
adc
sbb
mov
cld
stc
jg
cmp
pop
adcb
movb
out
lahf
aas
jmp
xchg
mov
xor
stc
repz
mov
adc
repnz
iret
lahf
aas
jg
cwtl
sti
cmp
out
mov
cld
stc
repz
sbb
adc
in
into
pop
mov
push
lahf
aas
jg
outsb
add
inc
xor
inc
push
dec
and
popl
repz
loop
loopne
lret
jp
icebp
sti
seta
cld
stc
scas
out
lahf
adc
stc
xchg
in
jno
xor
xchg
xchg
lahf
aas
and
dec
cmp
iret
lahf
mov
jbe
ret
out
psubw
daa
jp
idivb
cld
aad
pop
jmp
cld
pop
jl
push
adc
push
or
daa
adc
mov
sti
pop
mov
mov
leave
movsb
pop
ret
repz
add
out
lahf
mov
inc
cmpb
add
or
in
dec
ja
aas
jg
jge
int3
sub
das
inc
sbb
dec
movsl
mov
inc
pop
cmpsb
rorl
lahf
jl
cld
xchg
sbb
pop
rolb
dec
add
sar
iret
pop
orb
rcl
jns
cld
stc
rep
xor
and
push
inc
cld
xor
aas
jg
rcll
or
mov
insb
cld
stc
repz
outsl
loope
cwtl
adc
stos
cltd
push
add
movsb
sub
cmp
stos
enter
inc
jmp
mov
add
iret
mov
fdivl
mov
jge
sub
and
cmp
stos
xlat
enter
aaa
pop
ds
stc
outsl
jmp
mov
dec
push
stc
mov
or
mov
adc
add
adc
and
stc
adcl
dec
leave
arpl
jns
push
pop
jb
mov
inc
sbb
stc
cmpsb
fisubrs
std
in
leave
in
mov
fisubrs
scas
lret
inc
cwtl
imul
pop
imul
mov
xor
out
lds
repnz
icebp
lods
enter
stc
cmp
fists
ds
enter
sar
pop
out
stc
dec
imul
and
stc
enter
sbb
in
sub
gs
stos
daa
jl
sub
out
loope
mov
adc
outsb
dec
push
jecxz
in
mov
or
pop
arpl
xchg
mov
jle
repnz
cwtl
mov
jns
pop
ret
cmpb
xlat
xor
iret
aas
mov
movsb
sbb
mov
fists
mov
stos
insb
out
sahf
add
ret
inc
repnz
outsl
or
dec
test
or
sbb
xor
jne
inc
ds
jle
inc
mov
pop
ja
repnz
pop
dec
xchg
bound
repnz
inc
xor
stc
enter
mov
les
leave
and
loope
rcrb
repnz
icebp
jg
cld
stc
mov
or
push
movsb
lods
scas
jmp
ss
shlb
aas
insl
add
mov
jns
fdivrl
stc
enter
cltd
jmp
out
out
aad
pop
dec
loope
insl
shlb
adc
mov
sub
enter
popf
pop
jg
das
or
jecxz
repnz
jmp
mov
cmp
mov
sub
sub
filds
inc
ds
sub
sahf
cmp
add
ret
in
leave
dec
xchg
cmp
cld
stc
repz
bound
pop
push
jns
out
sbbb
lahf
aas
jg
pop
pop
jb
fdivrs
outsl
lods
pop
xor
pop
stc
repz
ror
lahf
mov
jne
sahf
cltd
add
ds
cld
mov
push
mov
out
incb
adc
adc
lahf
aas
jg
scas
aam
or
ret
lods
cmpsb
or
pop
daa
cld
stc
repz
lock
xor
pop
ret
add
lahf
cld
insl
xchg
add
xchg
pop
lcall
jno
out
dec
pusha
xor
jp
lahf
aas
jg
xorl
adc
movsb
lcall
iret
cs
call
push
add
movsb
sahf
mov
cwtl
loop
jbe
ds
ret
xchg
out
lahf
jp
stc
add
lret
mov
aas
jg
jl
or
ffreep
and
pop
shrl
out
lahf
jecxz
mov
gs
xor
jle
stc
push
and
or
jle
enter
int
or
out
stos
test
add
xor
aad
leave
loope
ret
mov
daa
lahf
aas
jg
cmc
shll
xchg
xor
push
pop
jl
arpl
fcompl
mov
inc
xchg
addb
and
iret
lahf
aas
jg
data16
and
and
mov
sbb
sar
stc
repz
mov
jnp
movsb
or
inc
std
pop
sti
lods
sbb
cli
shll
stc
fsubs
in
adc
sbb
xchg
pop
iret
push
jl
and
xorb
pusha
int3
and
lods
ss
cmp
mov
mov
mov
sbb
dec
push
mov
mov
out
sub
sub
imul
adcb
imul
repz
mov
mov
std
in
loope
jns
mov
fidivrs
jg
cld
cmpsb
fld
mov
add
int3
fwait
repz
lahf
push
add
pop
ljmp
loope
jg
cld
stc
push
dec
xchg
dec
sub
mov
xchg
mov
mov
aas
fbld
xchg
lds
sub
stc
stc
repz
xor
test
sti
test
xor
call
xor
sar
adc
enter
das
cmpl
pop
and
add
sbb
lahf
aas
jg
es
xchg
setno
cmp
cld
stc
repz
sub
into
mov
popf
mov
jg
divb
sbb
jnp
xchg
xchg
adc
push
sbbb
adc
das
loopne
mov
and
test
adc
repnz
cmp
setnp
fnstsw
cmpsb
xchg
and
add
mov
stos
pop
scas
dec
lods
test
pop
lock
stos
cwtl
movmskps
push
pop
mov
cld
out
je
popf
add
or
cmp
repz
lahf
dec
inc
sub
xchg
outsl
push
fidivrl
icebp
jg
cld
stc
in
pop
push
enter
stc
clc
xchg
les
iret
lahf
aas
mov
sub
ja
sbb
cld
stc
repz
xchg
or
xor
enter
addr16
iret
lahf
aas
jg
mov
push
out
icebp
inc
addr16
cld
in
out
jg
lock
mov
mov
pop
scas
imul
lahf
aas
jg
mov
add
mov
sub
mov
js
out
add
mov
jbe
mov
ret
test
imul
into
mov
roll
cld
stc
inc
insl
push
icebp
xlat
mov
das
test
test
sar
xorb
push
cmp
pop
rcll
adc
cli
leave
and
cmp
adc
arpl
inc
repnz
in
jg
sub
xchg
and
stc
enter
pop
push
xor
mov
jl
loopne
jb
inc
jge
push
mov
adc
in
sbb
mov
add
mov
push
repz
xorb
movsb
pop
stc
clc
icebp
xchg
inc
int3
push
push
mov
stos
es
sbb
add
xlat
repz
lahf
aas
jg
ja
mov
pop
jnp
dec
lret
stc
repz
data16
push
and
jmp
sarb
lahf
aas
jg
fisubrs
and
leave
lea
lock
iret
xor
cmc
push
inc
inc
lret
push
js
or
ja
imul
stc
xor
icebp
jne
mov
jb
cmc
insb
rolb
rcrl
mov
adc
push
add
lret
stc
add
or
mov
sbbl
cli
inc
and
arpl
das
into
sarb
aad
sbb
jmp
push
lcall
shrb
sbb
or
pop
adcl
repnz
add
xor
add
in
adc
popa
xchg
lret
out
sarb
or
xor
faddl
push
dec
jg,pt
mov
into
nop
mov
and
aam
mov
inc
or
jg
cld
stc
pop
test
test
aaa
stc
push
mov
xchg
lahf
aas
pushf
es
cli
mov
aas
and
mov
stc
repz
aaa
aaa
push
or
cmp
aas
jg
mov
sub
dec
sub
repz
shrb
ds
lods
stc
cmp
jle
stc
in
out
mov
test
jg
cld
xor
inc
in
mov
inc
add
jge
scas
mov
out
lahf
adc
mov
push
movsb
movq
cld
stc
push
sahf
xchg
sbb
xor
dec
xchg
das
sahf
cmc
add
iret
lahf
aas
imul
fdivrs
mov
jnp
pop
stc
cld
stc
repz
rcrl
fisttps
arpl
cmp
jnp
sub
aas
xchg
jns,pt
and
idiv
jp
rorb
ss
cmpl
lea
stc
imul
aam
jle
or
andl
pop
jle
dec
repz
cmp
push
stc
nop
cs
aas
jg
mov
stos
andl
push
arpl
daa
ljmp
lods
int3
loope
jle
cld
stc
in
push
fs
mov
fsts
push
sub
jmp
in
jmp
mov
and
out
lahf
mov
mov
dec
loop
cmpsl
mov
stc
sub
sbb
jecxz
push
jae
jge
fisubs
pop
stc
enter
sahf
sbb
or
sbb
xchg
jl
sub
mov
sbb
mov
jge
sti
cmp
or
add
aam
cmp
sbb
notl
loopne
adc
mov
scas
adc
cmp
mov
mov
popa
push
push
cmp
adc
cld
in
iret
sub
dec
cli
rolb
and
stc
dec
int
int
cli
ljmp
fdivs
push
jnp
jecxz
cld
stc
add
daa
jo
in
in
pop
adc
lahf
aas
jg
xor
test
cltd
lea
cld
stc
repz
fwait
gs
xchg
in
icebp
std
push
enter
sbbl
test
fwait
cmp
or
mov
mov
push
cmp
repz
or
sub
mov
out
pop
icebp
lahf
aas
jg
inc
lret
push
add
and
iret
pop
scas
push
repnz
xor
sub
popa
in
outsl
sub
jge
jnp
xor
push
sub
xchg
std
fwait
pop
sbbb
stos
popa
daa
loopne
mov
sub
or
popa
stc
pop
mov
dec
xor
cmp
pop
sbb
add
jg
cld
stc
repnz
pushl
xlat
leave
xchg
iret
lahf
aas
inc
cmp
test
ss
xchg
mov
cld
stc
repz
in
mov
and
adc
aas
jg
or
jmp
sub
ja
repz
and
jmp
xchg
xor
jg
cld
or
inc
out
daa
ffreep
addb
lahf
dec
pop
sub
inc
cmc
test
dec
inc
jg
cld
stc
loopne
cmp
out
lcall
je
aas
mov
sbb
cld
stc
repz
lahf
xchg
mov
adc
loopne,pt
aas
jg
andl
jg
hlt
dec
out
fsub
aas
mov
rorl
or
and
sbb
cld
jae
aad
cmp
imul
and
adc
mov
out
lahf
cmpl
pushf
jg
cld
stc
cmp
push
inc
in
mov
dec
mov
iret
lahf
aas
in
or
inc
popf
pop
inc
std
sub
cmp
cmp
repz
in
or
mov
add
out
xchg
mov
jg
cld
lock
mov
mov
pop
inc
clc
repz
lahf
push
cmp
jg
cld
stc
movl
aas
adc
scas
popf
pop
es
push
out
lahf
aas
test
jnp
loop
jns
cli
decl
js
push
loopne
iret
in
jnp
icebp
inc
mov
cmp
add
out
aad
add
scas
cld
stc
repz
lahf
jns
int3
mov
inc
movsb
mov
repnz
jl
xchg
push
fs
lea
enter
mov
mov
inc
xor
pop
lret
cmp
outsl
cmovbe
jmp
pop
or
xchg
setle
xlat
push
fcmovne
and
sub
or
hlt
add
pop
outsb
rclb
addr16
out
scas
jnp
fldcw
stos
fs
jg,pt
cld
aam
xor
xorb
cmpl
jecxz
iret
inc
cwtl
es
cld
stc
repz
push
jge
rcrl
iret
lahf
aas
jg
movb
or
dec
dec
test
stc
repz
repz
sbb
add
call
addl
and
jo
or
pushf
stc
repz
fmull
lea
pop
jge
imul
repnz
push
std
inc
cld
stc
repz
subb
loop
dec
fldt
shlb
aas
jg
mov
cmp
call
xlat
pop
mov
xchg
xor
jl
cs
push
pop
ss
outsl
and
or
mov
fcompl
arpl
and
int
iret
mov
loop
mov
dec
push
mov
cld
stc
sub
rorb
mov
adc
fwait
cmp
je
ds
inc
cld
stc
repz
mov
push
icebp
lret
inc
rcrb
push
mov
jle
stc
mov
cld
stc
repz
xchg
adc
stos
mov
sbb
jg
aas
stc
nop
sub
mov
out
pop
aas
ljmp
adc
leave
stc
repz
stos
xchg
mov
mov
pop
aas
jg
cld
sbb
mov
adc
adc
add
sbb
mov
out
lahf
jae
loopne
mov
ds
movl
xchg
iret
shlb
fwait
je
daa
lahf
aas
rcll
fldcw
insb
scas
push
jne
stc
xrelease
push
dec
lods
xchg
aad
xor
arpl
adc
xor
shlb
pop
sti
orl
ds
or
aas
sbb
roll
cmp
clc
jbe
jmp
outsb
jecxz
stc
repz
outsl
inc
cmp
push
dec
mov
stc
mov
mov
jg
push
pop
mov
notb
stos
mov
out
or
cmp
jle
xchg
orb
std
aas
jg
cld
std
jp
and
add
repz
lahf
arpl
pop
ja
mov
cld
stc
clc
cmp
add
sbb
shl
iret
lahf
iret
sub
int
adc
loopne
sahf
test
stc
gs
pop
lret
push
push
sbb
out
sub
out
lahf
aas
mov
inc
inc
in
aas
xor
xchg
add
cld
stc
repz
stos
popf
dec
add
leave
inc
and
mov
cmpsb
xchg
sahf
std
fcmove
outsl
or
stc
repz
aad
cltd
icebp
sbb
adc
sbb
aas
jg
cld
ret
mov
xchg
adc
inc
pop
push
sub
out
lahf
daa
out
adc
ret
in
dec
jl
dec
jg
cld
stc
mov
add
xchg
jb
mov
sub
mov
iret
lahf
aas
pusha
loope
mov
mov
stc
repz
fstpl
cld
adc
fwait
adc
aas
jg
pop
add
outsb
or
pop
mov
sub
and
stc
xlat
lret
aaa
mov
jle
les
notl
inc
ds
jmp
cwtl
inc
fcomps
lods
fdivl
in
pop
stc
xchg
mov
sbb
addr16
mov
lahf
jl
ror
pop
enter
cmp
daa
mov
adc
xchg
push
repz
ror
sub
inc
jecxz
aad
imul
jg
cld
pop
enter
push
cmpsl
or
lret
jns
iret
lahf
cmp
loopne
stos
xor
xor
push
cmp
lds
ljmp
mov
ds
inc
mov
lods
add
dec
mov
shl
fcomp
stos
sub
push
push
cld
stc
repz
in
or
lcall
sbb
lahf
aas
jg
cmp
jb
mov
and
jl
out
cmp
pop
sbb
push
adc
lahf
aas
jg
xchg
xlat
ficoms
sub
cld
stc
repz
add
ret
sub
sub
std
dec
cld
dec
daa
fisttps
aaa
adc
out
or
adc
mov
xor
rolb
je
fsubl
aas
jg
cld
out
or
or
xor
repz
lahf
mov
inc
aam
addr16
cmp
in
int3
xchg
cld
xchg
repz
lahf
xchg
ficomps
popf
sub
in
cld
stc
pushf
add
test
mov
jns
fucom
iret
lahf
aas
jno
mov
lods
cwtl
lock
jle
mov
ds
stc
repz
sbb
pop
mov
mov
xor
sahf
lcall
mov
xchg
or
mov
dec
sbb
out
jmp
aas
jg
arpl
repz
dec
dec
inc
and
stc
fmuls
stos
lcall
jns
push
mov
dec
jl
cmpsl
jmp
in
mov
xor
popf
ds
mov
leave
inc
bnd
cmc
rorb
mov
xor
arpl
in
add
adc
fldln2
icebp
fwait
ds
push
jmp
adc
aas
jl
push
jg
repnz
mov
hlt
shlb
das
cmpsl
pop
mov
dec
add
movsb
daa
aas
jge
popl
iret
mov
lea
inc
and
sahf
cmc
in
fucomip
dec
mov
cld
stc
adc
ja
js
dec
aam
xorl
aas
jg
lcall
jl
aaa
dec
out
sti
in
adc
imul
xchg
or
fmuls
in
mov
cmp
inc
mov
mov
push
sub
jmp
sbb
ret
push
mov
jae
arpl
js
sub
out
lahf
mov
js
cmc
incl
cld
stc
inc
aam
outsl
out
sahf
es
dec
jns
inc
pop
inc
dec
xchg
iret
lahf
aas
push
and
clc
pop
js
stc
jmp
inc
divb
jecxz
xlat
cmpl
push
xlat
cmpsl
in
in
pop
stc
pop
push
xchg
in
xor
in
pop
sti
jl
pop
push
dec
cli
jl
cmc
xchg
pop
lahf
ret
jl
push
in
xor
incb
fimull
cmpsl
loope
mov
pop
jmp
dec
imul
mov
ljmp
dec
fbstp
divb
xor
stc
cmpsl
repz
stc
enter
jl
jl
out
js
loopne
mov
lret
inc
adc
mov
rcll
jno
xchg
clc
jge
cmp
cmpsl
pop
repz
mov
int
push
sbbl
outsl
test
ret
cmp
mov
cmp
das
orb
hlt
ds
push
inc
scas
jg
cld
stc
mov
es
ret
out
movsl
mov
iret
lahf
aas
arpl
imul
xorl
cmpl
pop
cmpsl
lods
stc
repz
outsb
arpl
mov
mov
cld
arpl
jle
inc
stc
cmpsb
mov
test
repz
lahf
pop
mov
test
gs
out
push
jl
fucomip
adc
leave
add
fs
lahf
aas
jg
sub
cs
pushf
cld
stc
repz
stos
dec
cmpsb
scas
fsubs
pop
add
jg
sub
sbb
out
cs
clc
leave
out
mov
popa
in
out
test
enter
dec
int
pop
rcll
cld
push
and
shll
cmpsl
mov
ds
clc
lret
adc
scas
rcll
jle
enter
cltd
xor
mov
xor
dec
push
test
and
stc
out
mov
insl
fisubs
arpl
into
test
in
xchg
test
repnz
movsb
add
mov
das
cmp
inc
dec
out
aad
cld
stc
repz
jnp
dec
stc
jp
stos
xor
iret
lahf
aas
jg
inc
faddl
sub
mov
clc
leave
out
sub
es
jle
stc
repz
adc
inc
movsb
rcl
sbb
and
mov
into
cli
ffreep
pop
mov
cmp
out
push
out
lahf
aas
scas
pop
sbb
outsb
outsb
push
sbb
xor
incl
clc
in
dec
add
pop
xor
mov
jge
push
out
nop
jo
adc
cwtl
mov
mov
push
mov
stc
repz
dec
mov
mov
push
int
pop
pop
aas
jg
cld
sbb
out
and
rcll
lahf
je
push
jns
lret
out
enter
jecxz
cld
stc
cmpsb
add
out
dec
das
xchg
in
test
iret
lahf
aas
cmp
lahf
adc
adc
push
cld
cld
stc
repz
decb
mov
pop
int
sub
leave
arpl
dec
ja
lret
sbb
in
pop
or
push
inc
lock
sbb
pop
movsl
jmp
mov
pop
stc
enter
pop
mov
sahf
stos
jne
in
inc
or
data16
add
push
sub
cwtl
outsl
mov
cmpsb
xor
fimuls
sti
call
xor
cld
stc
repz
add
and
rcrb
cmp
imul
sub
notb
xor
shll
adc
cmp
stc
repz
cmpb
xchg
test
filds
fcomps
cli
xor
or
repz
xchg
clc
leave
out
cs
test
push
outsb
or
mov
jle
jbe
stos
sub
ret
lret
ds
push
adc
xor
push
mov
mov
fmuls
stc
push
mov
and
adc
adc
stc
outsl
jp
les
cs
jl
pop
ret
ret
pusha
dec
fdivp
lahf
jg
pop
mov
imul
stc
repz
mov
cmc
push
xor
add
add
mov
testl
imul
repz
lahf
movsb
jb
pop
in
enter
and
adc
and
repnz
ret
push
test
lock
iret
pop
mov
notb
cld
stc
repz
outsb
dec
mov
jno
push
push
lock
lahf
aas
jg
data16
dec
mov
xchg
cwtl
xchg
into
inc
jp
xlat
dec
mul
out
idiv
cld
test
push
cwtl
out
inc
icebp
leave
jle
xlat
aam
sbb
data16
push
ds
aas
xchg
mov
lahf
ja
pop
stc
enter
andb
push
push
pop
scas
arpl
cmp
fmul
pop
cmp
shlb
mov
test
notl
test
cmpsl
shl
es
cld
stc
repz
push
imul
std
push
mov
aas
jg
outsl
mov
pop
outsl
xchg
lahf
and
push
xor
in
cmc
in
and
aam
dec
lcall
sti
or
and
mov
loopne
sbb
daa
in
jge
push
test
out
pop
sti
in
dec
jg
jnp
dec
inc
xchg
mov
pop
sti
in
mov
cmp
sti
stos
inc
cwtl
pusha
pop
stc
fsubs
movsl
jge
xlat
mov
push
mov
sahf
jno
jl
and
mov
and
inc
ds
jo
and
leave
fiadds
ds
in
xor
xchg
jb
mov
out
shl
es
mov
pop
stc
enter
add
mul
dec
test
jg
loop
sti
int3
or
or
or
mov
ja
fwait
stc
pop
cmp
dec
loope
pop
pop
sbb
cmc
ret
jg
cld
adc
mov
inc
push
xor
ljmp
dec
shlb
test
movsb
mov
ret
jg
cld
stc
mov
fstl
cmp
dec
dec
out
lahf
aas
cmp
repnz
pop
fsin
cld
stc
repz
sub
and
jge
dec
out
rcll
iret
lahf
aas
jg
call
push
hlt
pushf
add
fnstsw
stc
repz
movsl
mov
cmpsl
push
dec
sub
adc
notb
imul
and
pop
popa
cmp
jl
and
int
push
fldl2t
sub
repnz
pop
stc
repnz
aad
lret
divb
mov
stc
enter
adc
adc
rorl
xchg
dec
sub
jbe
jnp
scas
fldenv
aas
jg
shlb
mov
jge
movsl
inc
in
cmp
pop
xor
dec
ja
test
mov
bound
aas
jg
lret
and
in
push
and
jl
decl
jmp
repz
sbb
sbb
pop
in
shll
ds
or
or
loop
stc
repz
sub
push
xlat
mov
xor
adc
jle
cld
mov
outsl
xor
lahf
jge
mov
or
mov
aaa
cld
xor
lahf
cli
in
cwtl
lret
xor
add
xchg
lcall
cmp
je
out
lahf
aas
mov
pushf
out
jbe
imul
stc
stc
repz
loop
sub
or
push
cli
mov
lahf
aas
push
rcl
mov
fnstcw
cld
stc
repz
and
cltd
sti
jmp
pop
jne
aas
lret
jg
cs
gs
icebp
adc
xor
out
adc
adc
dec
jmp
pop
insb
mov
cld
mov
imul
push
rcl
clc
out
aas
adcb
mov
fwait
sub
cld
stc
repz
cmp
mov
adc
or
lahf
aas
jg
fisubl
sub
jbe
cwtl
fidivrl
leave
out
mov
push
outsl
inc
mov
mov
sub
add
jl
jle
push
push
leave
icebp
loopne
lahf
pushf
sbb
pop
add
and
stc
enter
inc
arpl
repnz
call
in
and
mov
lret
stos
lahf
jg
mov
nop
push
cmc
into
mov
stc
repz
int
sbb
dec
adc
pop
or
push
inc
aas
aas
jg
cld
bound
lods
out
pushf
ss
fcmovnbe
xchg
je
out
lahf
arpl
pop
mov
bound
adc
stc
in
jg
cld
stc
enter
jp
and
cwtl
or
lea
inc
sahf
aas
or
arpl
push
sub
cld
stc
pop
hlt
aad
sbb
or
mov
sub
iret
or
lahf
aas
jg
call
dec
or
cld
stc
repz
gs
jbe
mov
out
mov
adc
cmp
mov
xchg
stc
repz
lahf
lods
mov
add
je
ficoms
cld
stc
loope
xor
push
jno
sahf
sub
scas
movsl
popf
aaa
xchg
out
lahf
aas
lahf
sti
mov
sbb
sub
repz
je
sub
jp
loope
pop
arpl
push
iret
lahf
aas
jg
jge
out
sbb
or
jnp
mov
pop
xlat
push
xchg
xor
lahf
aas
jg
popa
cltd
je
hlt
cltd
ret
inc
fsts
or
jecxz
push
es
xor
mov
jl
or
in
clc
mov
sbb
or
scas
add
aas
jg
cld
push
xchg
xor
xlat
call
xchg
inc
std
push
jno
pop
nop
jp
repz
repnz
mov
gs
iret
stc
repz
jp
into
jmp
fsubr
or
test
push
pop
cmpl
scas
loop
and
ds
adc
fcomp
test
sbb
xchg
mov
insb
sbb
cwtl
mov
call
rcrb
xor
jp
loopne
sbb
inc
xchg
iret
sarl
and
aas
mov
out
or
jg
cld
xor
popf
rcl
or
insl
pop
fwait
repz
lahf
outsb
ret
and
or
mov
cld
stc
sbb
movsb
cmp
and
push
cmc
aad
sbb
mov
iret
lahf
aas
je
notl
bnd
cmp
sbb
loope
or
iret
aas
and
mov
cs
stc
repz
fdivrl
sub
inc
adc
int3
bnd
daa
iret
sahf
mov
je
repnz
shrb
outsl
jb
jl
and
pop
cmp
sahf
in
addr16
xchg
xchg
gs
jns
int
adc
adc
mov
clc
popf
cmp
iret
lahf
aas
jg
cmp
sub
adc
or
cld
stc
repz
gs
sahf
cld
sahf
mov
xchg
mov
daa
mov
fwait
dec
scas
mov
popa
sub
xchg
pop
ds
jg
xchg
lret
xchg
jg
cld
add
in
shll
popf
xchg
test
push
stos
dec
add
sub
insl
and
stc
repz
insl
xor
notb
repz
repz
cmp
aad
dec
jg,pt
sub
xchg
push
insl
test
call
mov
lds
sbb
stc
sbb
and
das
int3
bound
adc
push
xor
jne
in
je
sbb
mov
pop
aad
mov
mov
cld
cld
stc
repz
ja
xor
lret
int3
shll
push
adc
dec
jle
sub
mov
test
mov
jl
mov
gs
out
mov
sbb
in
arpl
and
frstor
mov
aas
adc
sub
not
andl
xor
sbb
ds
aas
stos
pop
mov
mov
repnz
or
enter
fld
cmp
lods
fists
ror
and
in
mov
jg
int
int
cld
es
or
mov
stc
repz
mov
ret
call
jbe
push
es
aas
jg
inc
jp
shr
and
test
inc
or
or
fnstcw
flds
xchg
cmc
xor
mov
inc
push
mov
insb
nop
lahf
jg
jl
lock
pop
mov
testb
addb
adc
mov
mov
movsb
dec
jle
insb
jmp
push
repnz
mov
ret
push
sub
xchg
jge
xchg
fsubrs
cs
mov
cmp
mov
pop
jns
leave
and
pusha
or
nop
add
movsb
stc
sbb
mov
inc
jb
aas
ljmp
stc
into
subl
sbb
jmp
ficompl
inc
repz
adc
jg
cld
push
mov
mov
cmc
xlat
test
out
lahf
xchg
arpl
scas
or
je
mov
add
inc
mov
cld
add
popa
repz
push
stos
movsb
imul
iret
lahf
cmpsb
or
mov
enter
sub
and
jnp
lcall
shrb
jl
out
mov
les
mov
repnz
ds
cmpsl
jns
cli
sbb
xor
cmc
leave
inc
mov
scas
idiv
int
leave
sti
insl
into
xorl
xchg
paddw
xchg
lods
jno
fsts
jge
push
mov
repnz
jl
xor
mov
inc
mov
dec
addr16
jnp
movsl
jge
jp
int
jle
cmp
leave
and
and
stos
dec
inc
inc
js
push
ds
stc
cmp
jae
sub
mov
xchg
notb
push
mov
stos
sti
insb
in
stc
enter
repnz
and
jl
pop
stc
fsubs
aas
push
push
out
mov
dec
shlb
daa
dec
arpl
sbb
xchg
hlt
adc
mov
xor
xor
mov
pop
or
dec
rcr
sub
ds
and
testl
cmp
movsl
rolb
pop
sti
leave
and
mov
iret
sub
sbb
dec
push
fwait
cmpsl
inc
pusha
shlb
lret
roll
mov
pop
mov
repz
pop
pusha
sub
jns
bound
incl
ds
or
jbe
insb
push
mov
sbb
inc
out
lahf
aas
cmpsl
out
dec
test
fidivrl
add
daa
or
mov
adc
lahf
shll
push
mov
mov
fdiv
xchg
int
repnz
pop
imul
cmp
and
scas
cli
jle
fstpt
pop
add
int
iret
lahf
aas
jg
jge
mov
xchg
mov
adcb
jp
add
push
in
and
je
mov
push
jnp
mov
rclb
mov
add
and
mov
ljmp
add
sub
push
mov
mov
lret
mov
test
out
or
sbb
add
test
mov
aaa
sub
in
repnz
stos
xor
mov
rol
mov
adc
es
add
sub
adc
push
repnz
xorb
push
mov
stos
inc
and
mov
mov
mov
sbb
testb
stos
sub
imul
mov
inc
adc
pusha
aam
sub
inc
jne
jne
scas
sbb
mov
aam
and
push
cmp
sub
mov
jg
push
int
movsb
mov
mov
fistl
mov
call
stos
cmp
cmp
mov
push
xchg
add
stos
xlat
andl
add
pop
jno
into
mov
jnp
push
push
adc
xchg
adc
outsb
mov
push
iret
or
sbb
cltd
bound
xchg
mov
push
sbb
add
adc
ja
jne
sbb
mov
mov
imul
sbb
pop
push
push
push
mov
adc
aad
call
adc
xchg
push
add
ret
fildll
pop
fs
push
mov
push
add
in
cmp
push
push
xchg
ljmp
imul
add
add
add
adc
loope
push
jnp
ret
inc
enter
lock
add
dec
test
push
aad
mov
out
and
enter
adc
xlat
push
das
mov
lret
mov
daa
fdivrl
or
add
in
cmpsb
outsb
adc
add
xor
adc
xor
shlb
mov
inc
mov
pushf
jb
or
sub
jns
push
lds
adc
xchg
das
mov
fcmovu
jge
xor
mov
add
daa
stos
cmp
push
sbb
mov
sbb
add
cmc
sub
outsb
insb
pop
push
scas
push
mov
jl
shr
pop
mov
or
and
pusha
pop
sbb
sti
test
xor
mov
add
or
sub
fcomp
sub
xchg
rolb
fisubs
add
mov
mov
fsubrl
xchg
rcll
inc
push
loop
sbb
repnz
aam
in
fsubs
cmc
push
arpl
and
mov
and
pop
pop
push
cmp
sbb
fs
out
shlb
rcrl
or
push
fbld
push
in
aam
rcrb
xchg
lcall
cmp
es
or
add
push
cwtl
insb
fldt
pop
jl
out
xchg
and
fwait
ljmp
add
xchg
mov
adc
push
push
mov
adc
add
mov
sub
mov
adc
and
seto
dec
aaa
sbb
mov
sub
jmp
xorl
rcrl
push
jne
push
or
jmp
or
mov
shl
lcall
scas
lahf
sub
sti
les
mov
xor
fisttps
pop
lods
cmp
mov
push
adc
insl
mov
jns
inc
in
xchg
testb
add
sub
ficomps
popa
shrb
shrb
pop
test
xor
push
call
xor
and
and
adc
sub
mov
and
lret
sbb
sbb
xchg
add
push
lret
or
mov
mov
dec
ds
lea
and
push
iret
mov
or
or
arpl
into
jp
adc
and
push
add
mov
fcmovne
sub
or
pusha
cs
aaa
subl
enter
in
test
call
add
into
cmpsl
pop
dec
mov
incl
test
lcall
xor
ret
sbb
adc
xor
sub
jecxz
sbb
lods
insl
sub
lds
or
push
push
les
imul
adc
or
jge
pop
loopne
xor
out
pop
push
add
inc
cmpl
andb
push
pop
test
jnp
fdivs
pop
mov
push
mov
fadd
add
jnp
mov
xor
dec
sub
and
sbb
filds
mov
sbb
or
jle
add
jle
jo
test
push
sub
or
or
add
insl
or
or
sbb
sbb
test
shrb
push
inc
aad
fsubrl
rcr
mov
rcrb
pushf
mov
jmp
mov
pop
gs
ret
lods
mov
push
insl
adc
jge
sbb
add
pushw
pop
xlat
push
pop
mov
or
sti
sub
dec
scas
or
add
rcll
shlb
or
imul
pusha
mov
scas
insb
adc
std
movsl
ss
call
add
aas
xor
jbe
ja
inc
lret
into
aas
andl
mov
pop
mov
xchg
lock
clc
bound
add
adc
jne
mov
test
or
sbb
adc
in
pop
add
xchg
notb
data16
adcl
mov
clc
push
push
sub
in
adc
popf
pop
mov
leave
rolb
mov
mov
ficomps
cwtl
pushf
jle
or
popf
mov
sbb
ret
cs
xor
xor
sub
insl
ret
js
pop
pop
push
xchg
data16
loopne
sub
cmp
enter
sbb
and
ljmp
xlat
push
add
loope
ja
daa
bound
xor
mov
pop
inc
lock
push
mov
or
inc
and
or
mov
lgs
lahf
xor
leave
push
cs
inc
cmp
add
loopne
cmp
add
movsb
jecxz
ja
sar
add
cmpw
xor
push
fidivrs
push
inc
and
data16
or
mov
je
jbe
xor
cmp
stos
mov
addr16
push
push
mov
movsl
fildl
gs
add
adc
xor
xor
push
mov
pop
cmp
aam
sub
sbb
jne
arpl
vpunpckhdq
cmp
mov
and
jbe
mov
sub
sub
sbb
das
lret
mov
push
add
or
mov
xor
sti
or
out
jg
sub
cmp
add
iret
add
shl
jo
fsub
mov
clc
mov
add
mov
hlt
test
ja
ja
xor
inc
push
leave
mov
or
pushf
mov
lods
adc
scas
sub
sbbb
fnstcw
mull
pop
test
outsb
jbe
xchg
fucom
and
test
mov
jae
jecxz
pop
push
and
fldt
sbb
dec
shr
or
push
jbe
test
push
sti
sub
push
xor
mov
mov
out
or
loope
mov
inc
js
insb
aam
push
or
in
adc
inc
sub
mov
and
loop
notb
outsl
aad
fiaddl
loopne
sub
jg
jne
inc
adc
and
cmp
and
sahf
jno
pop
push
inc
cltd
js
jbe
jo
jo
cmp
push
xor
mov
ret
lcall
mov
sbb
add
or
xor
adc
cmp
push
push
cwtl
push
phsubd
jnp
in
cmp
jmp
adc
jb
sbb
mov
pop
jb
push
outsb
jmp
push
cmp
pop
outsb
into
jge
stos
cmp
jb
pop
pop
or
out
sbb
adc
rorl
jmp
fisttpl
idivb
into
jne
dec
mov
mov
push
outsb
pop
test
push
pop
daa
mov
pop
cmp
je
mov
dec
ss
mov
or
cmp
aam
ja
cmp
pop
sti
outsw
mov
pop
je
fists
pop
adc
mov
addb
mov
add
outsl
ret
push
push
push
mov
fnstsw
jae
push
jb
mov
pushf
pop
pop
dec
push
mov
lea
push
cmp
insb
xchg
loop
rcrb
adc
xor
fldcw
outsl
sti
cmpsb
cmp
cmp
pop
sub
inc
adc
xor
ret
jne
dec
mov
push
pop
push
mov
shl
in
add
cmp
jb
pop
stos
sub
and
clc
je
push
cmpsl
stc
frstor
scas
jmp
jmp
mov
fistpll
pop
seto
dec
inc
out
sub
and
mov
fs
push
je
sbb
lock
push
aas
or
andl
cmpl
or
shll
xchg
stc
mov
rorb
gs
repz
mov
insb
inc
scas
loope
testb
push
push
mov
ss
cmp
fsubs
mov
sti
ja
or
push
xor
pop
je
int3
adc
mov
std
fdivs
or
sbb
cmp
mov
cwtl
aas
ss
pop
mov
sbb
push
xor
rclb
mov
mov
popf
push
push
xlat
xor
aaa
mov
add
add
inc
ss
insb
stc
inc
push
cvtpi2ps
sti
sbb
add
les
cmp
pop
cwtl
or
cmp
add
cld
xchg
clc
inc
cmp
push
das
ret
rolb
in
test
add
daa
cmp
js
cld
stos
ret
pop
pushl
adc
sbb
pusha
and
add
adc
clc
pop
jnp
shll
dec
mov
cmp
je
cmp
jnp
pop
in
and
lea
pushl
sub
pop
push
or
inc
pop
sub
pop
dec
jo
jp
jbe
mov
sbb
jne
jno
rcrl
push
push
cld
or
xchg
mov
std
xchg
inc
orl
push
jg
lock
mov
imul
mov
divb
pop
fidivrl
lret
jb
imul
ret
jae
sbb
enter
rcll
loope
pop
or
pop
xorl
pushf
test
data16
jne
pusha
push
lret
aas
ljmp
adc
mov
mov
mov
cmp
out
mov
pop
or
xor
cmp
xchg
in
das
hlt
jge
imul
jle
andl
cmp
sbb
sarl
insl
mov
mov
or
inc
xorl
loopne,pn
sub
xchg
sbb
dec
cmp
xchg
test
iret
and
cs
popl
int
jae
push
cmp
ja
inc
jmp
pop
mov
pop
in
fildll
les
inc
clc
cmovbe
enter
arpl
mov
leave
ret
xor
cmp
mov
leave
rol
xlat
inc
mov
gs
test
push
cmp
ja
test
cs
cmp
imul
mov
lret
or
xchg
stc
movzbl
std
mov
mov
inc
inc
jmp
sub
inc
xor
test
inc
xchg
push
cmp
pop
gs
fsubp
outsb
xor
mov
jno
cmp
cmp
mov
inc
cmp
jne
push
ljmp
mov
cmp
pop
jno
neg
sarb
jmp
xor
inc
andb
pop
push
sub
cmp
sub
je
push
push
push
cmpsb
push
add
mov
sbb
mov
cmc
cmp
jne
decl
repz
cwtl
mov
mov
cmp
and
adc
fdivs
in
pop
mov
loope
cmp
push
jno
push
or
mov
cmp
adc
mov
xor
lock
mov
rolb
cmp
pop
test
pop
mov
mov
inc
mov
mov
dec
ret
push
inc
lret
add
dec
adc
outsl
or
mov
and
inc
or
pop
test
pop
fistpl
fdivs
xor
and
or
mov
dec
add
inc
xor
mov
loopne
mov
xorl
rcr
xchg
repz
jmp
sbb
and
adc
inc
adc
add
rcll
inc
inc
and
lods
es
pop
dec
das
insl
lock
inc
lock
xlat
lret
sub
arpl
add
leave
jne
lret
mov
je
mov
inc
xchg
fnstsw
sub
mov
or
sub
fdivrl
and
sbb
push
inc
fbld
jbe
stos
sbb
pop
add
xor
mov
jae
cmp
leave
sub
insl
movsl
dec
leave
sub
in
adc
inc
push
push
push
mov
inc
push
xchg
in
xor
in
and
cmp
pop
cld
jbe
hlt
mov
xor
push
fcmovu
xchg
ret
cmp
aas
jae
jle
mov
pushl
pushf
shl
lea
cmp
jb
push
push
adc
fstpt
push
push
push
lods
jnp
inc
dec
mov
lcall
mov
fmuls
inc
adc
lods
mov
add
sub
js
lea
idivb
adc
lds
es
and
test
aas
pop
mov
cmp
lods
shlb
push
xchg
fcomp
fildl
sbb
push
repnz
add
pop
sub
push
sar
and
rcrl
cmp
jmp
push
int
xchg
fiaddl
sbb
mov
and
and
push
outsb
fldenv
sbb
mov
ret
jmp
cmp
pop
cmp
xchg
or
out
push
mov
in
fldt
inc
cmp
idivb
imul
inc
lcall
lock
mov
adc
int3
cmp
or
xor
call
mov
pop
jae
vmovlps
inc
push
push
pop
push
sbb
les
das
iret
jge
jg
ficompl
mov
addb
mov
or
addl
mov
and
or
or
cmp
mov
xor
int3
loopne
ss
or
pop
mov
mov
cmp
mov
or
mov
jge
pop
movsl
sbb
lea
fs
mov
addl
sub
pop
or
xchg
comiss
xchg
adc
jb
hlt
jbe
adc
aas
jl
jmp
stos
push
lods
pop
or
mov
stos
jle
fsubp
lods
insl
or
je
mov
test
xchg
test
jne
push
sub
add
push
sar
and
clc
in
out
std
shl
add
push
xor
cmp
or
mov
enter
bound
jp
sub
mov
loopne
xchg
mov
repz
xor
arpl
mov
cmp
orb
jmp
aad
aam
dec
orl
mov
adc
fcomps
push
cmc
push
push
insb
pop
fistl
ljmp
inc
imul
push
lahf
xor
ds
inc
jmp
mov
add
or
mov
scas
pop
daa
movl
jl
pop
test
lock
fs
cwtl
xchg
sub
mov
in
fsubrs
push
mov
sbb
stos
add
arpl
inc
sahf
nop
nop
mov
pop
or
iret
lea
push
push
push
clc
lock
mov
cld
mov
jle
lea
add
push
lods
mov
add
push
mov
mov
xor
jbe
push
cmpsb
pop
je
scas
je
sarb
sbb
ljmp
fdivs
jmp
fdivrp
ja
pop
xor
cmp
xchg
mov
jge
test
push
nop
jle
push
sbb
push
sbb
andb
data16
pop
mov
add
sbb
push
popa
xor
or
cmp
push
cmpsb
mov
pop
jbe
add
adc
pushf
push
xorb
std
sahf
xchg
adc
adc
lds
and
mov
push
sub
sahf
out
imul
push
mov
mov
mov
and
dec
cmpsb
addb
xor
inc
imul
sahf
sub
inc
es
jne
sbb
jl
xchg
pushf
paddb
jo
xchg
inc
push
dec
add
js
push
and
cmp
cld
or
insb
or
cmp
loopne
sbb
mov
mov
data16
cmp
push
sub
nop
cli
iret
stc
aaa
pop
test
sbb
push
int3
jbe
adc
push
sub
unpcklps
dec
mov
xchg
mov
lcall
dec
lea
sub
push
jmp
rolb
js
lahf
pop
nop
ds
add
insb
inc
and
dec
or
test
loope
dec
enter
cmp
fsts
push
dec
jle
cmp
jo
sbb
cmp
ret
push
mov
test
mov
ret
push
mov
lea
mov
movsl
cmpl
inc
rol
and
inc
movsb
es
mov
cld
mov
movsb
inc
push
and
or
jno
fisttps
pop
push
icebp
fstpt
int3
mov
pushf
mov
pusha
lods
outsl
in
mov
and
cmp
sbb
in
je
pusha
loopne
or
mov
add
and
push
inc
or
mov
lret
dec
dec
xchg
bound
test
mov
push
mov
adc
xchg
adc
fcomps
mov
and
pop
push
addb
inc
out
mov
xchg
xchg
pop
repnz
push
mov
push
jo
les
roll
sbb
jmp
push
data16
pop
jae
xchg
addl
mov
xchg
mov
leave
ja
sbb
dec
mov
fs
push
jb
pop
leave
or
or
pop
add
push
test
aam
mov
rcl
dec
out
aas
lock
jp
ret
out
xor
cmpsb
push
xchg
push
xor
in
adc
or
lock
and
fcmovnbe
ret
and
lea
loopne
add
lds
imul
sahf
mov
enter
popa
lock
mov
mov
or
pop
mov
pop
push
pop
add
les
adc
and
jae
daa
mov
push
out
jo
ret
fildl
movl
or
add
xor
mov
jg
pop
in
xchg
setg
mul
stos
lods
mov
imul
aaa
ljmp
push
and
repz
and
lea
add
pop
leave
lea
add
xor
call
xlat
adc
jbe
inc
scas
sti
add
dec
push
adc
dec
jne
cmpb
lods
cmpl
mov
mov
dec
roll
sub
and
pop
out
sub
je
xchg
jbe
mov
adc
out
mov
xchg
cli
push
sub
push
push
imul
in
ds
enter
and
mov
fwait
in
leave
enter
dec
or
or
cltd
jmp
pop
jae
push
data16
mov
or
mov
notb
loop
cmpsb
push
call
loopne
push
mov
sahf
nop
mov
test
je
not
mov
fildl
jns
mov
xor
lret
push
adc
lock
mov
daa
lock
cs
xor
aad
lods
push
mov
test
out
enter
adc
lock
not
pop
daa
loopne
xor
inc
xchg
jmp
and
je
inc
js
pushf
mov
fimull
pop
in
cwtl
shrl
mov
andb
or
std
xchg
jp
cmp
aad
add
popa
or
lds
add
sbbb
nop
sti
inc
sub
or
cmp
jl
pusha
adc
sbb
xchg
icebp
push
mov
loope
insb
push
mov
adc
mov
sbb
lods
push
andl
aad
and
incb
in
sarb
fisttpll
sub
push
lock
pop
out
sub
adc
sbb
sub
mov
jge
push
lahf
call
push
cmp
lea
cmp
push
loopne
adc
push
adc
lahf
test
add
mov
xor
push
push
xchg
push
dec
push
fwait
das
jne
or
pop
rolb
sub
sub
jmp
nop
rol
mov
andl
xlat
sub
addr16
jmp
jne
push
sbb
scas
adc
ss
fidivrs
jo
mov
enter
and
std
pop
sub
mov
test
push
mov
adcb
popa
js
je
mov
lret
in
enter
jo
inc
insb
gs
sti
cmc
pushf
popl
inc
lea
fiaddl
and
mov
push
cli
push
inc
cld
push
pop
mov
lret
std
mov
sub
in
fsubrs
xlat
inc
cs
jb
adc
jecxz
push
lea
mov
inc
or
add
idiv
inc
push
pop
push
mov
lea
fsubl
std
shlb
int
lods
add
adc
shll
pop
aas
cmp
fdivr
loopne
pop
jmp
cmp
lods
inc
add
inc
je
inc
cmp
xor
push
fsub
adc
adc
ret
add
add
push
arpl
sbb
and
test
or
push
fwait
push
sub
sub
ret
adc
aaa
mov
mov
xor
je
inc
inc
lods
iret
adc
adc
xorb
push
decl
imul
xchg
cmpsb
lods
push
lock
xchg
cmc
pop
jae
mov
aaa
addb
cmp
jb
out
movsb
sti
jae
and
inc
adc
inc
pop
xchg
das
je
sar
push
lea
scas
test
mov
call
mov
push
ficoml
add
dec
mov
cwtl
loope
sub
clc
jae
or
sbb
jmp
inc
cltd
xchg
jecxz
mov
mov
dec
movsb
mov
sbb
push
cmp
cmc
sub
icebp
mov
sub
pop
dec
stc
lea
fldt
sub
jb
sahf
push
sbb
or
lock
icebp
dec
pop
je
mov
add
cmpl
ret
sbb
jnp
popa
or
dec
and
enter
sub
jno
rclb
clc
sbb
or
jbe
mov
pop
mov
jb
mov
jb
jle
sub
add
sub
jb
pop
pop
jl
leavew
jns
dec
push
imull
frstor
xor
dec
sar
mov
and
imulb
cmp
int
cmpsl
mov
insb
or
xor
shr
pop
add
or
inc
add
add
and
add
cmp
push
adc
mov
xchg
aam
jg
fcomp
sbb
push
cmp
dec
pop
inc
add
add
ljmp
dec
add
fiaddl
add
adc
aaa
push
sub
mov
mov
jbe
or
je
mov
push
xchg
cmpsb
sti
pop
sub
je
add
fs
nop
xor
push
adc
icebp
dec
mov
mov
ja
mov
lods
sbb
sub
stc
je
mov
je
dec
je
dec
push
repz
stos
and
cltd
jmp
dec
aam
iret
iret
not
jmp
or
shr
or
fdivrs
sbb
mov
mov
inc
pop
outsl
fadds
shlb
inc
push
or
mov
fbstp
push
outsb
xlat
or
je
add
jne
mov
jbe
mov
inc
pusha
pop
jne
or
jno
movl
adc
or
std
push
add
cmp
jge
fistps
test
push
pop
dec
adc
movsb
test
inc
xor
mov
fs
call
jmp
pop
dec
mov
add
popa
lea
mov
cwtl
adc
push
or
push
mov
loopne
in
xor
ret
test
mov
add
push
outsb
xchg
fucomp
dec
jge
inc
lock
addr16
jo
mov
test
inc
addb
and
jp,pn
pop
pop
fcoms
fildll
bound
call
aas
inc
sub
inc
sbb
enter
loop
jmp
icebp
add
and
jno
pop
jmp
hlt
cmpl
nopl
repnz
xor
cmp
add
pmuludq
jb
cli
and
mov
cmpsb
adc
mov
mov
xor
hlt
jl
mov
aam
sub
pop
mov
adc
jns
mov
adc
adc
mov
and
pop
push
mov
sbb
mov
adc
cld
sbb
inc
add
fcmovne
pop
push
inc
ss
hlt
add
sub
imul
push
xor
aaa
add
mov
fists
adc
jnp
xor
cmp
test
shll
mov
push
iret
je
mov
push
xchg
insl
mov
fimuls
loopne
xacquire
inc
call
adc
lock
orl
ret
or
mov
in
inc
pop
xor
je
jge
jge
pop
push
push
je
mov
movsl
or
adc
push
mov
xorb
data16
call
call
jle
fildl
sub
pop
mov
pop
mov
movsl
es
dec
pop
xchg
add
sbb
loopne
sub
dec
cmp
or
cmp
mov
rcl
imul
repnz
inc
fcomps
and
jno
ficompl
daa
pop
adc
and
dec
adc
or
adc
js
insl
adc
sub
or
mov
cmp
cmp
push
inc
rorl
std
fiaddl
sbb
or
fs
push
or
scas
imul
decl
out
cmp
popf
mov
lea
pushf
ja
pop
push
lcall
test
dec
mov
hlt
inc
dec
test
sbb
mov
jle
dec
adc
jns
lock
pop
push
lea
jno
jle
mov
xor
stc
test
call
mov
cmp
test
inc
test
insl
dec
adc
mov
jmp
lea
fs
lods
hlt
sub
loope
cltd
cld
push
mov
stos
cltd
in
xor
shll
xchg
sub
mov
movsb
pusha
xor
or
stc
add
add
jl
adc
call
les
repnz
and
loope
push
push
movb
arpl
inc
loop
mov
dec
insb
mov
add
mov
push
cmp
xchg
mov
nop
test
dec
adc
inc
aad
cmp
jae
mov
xor
or
enter
testb
adc
adc
or
add
adc
sbb
pop
scas
popa
or
push
leave
sti
xchg
mov
jno
call
icebp
push
mov
test
jne
add
jl
mov
aas
outsb
add
and
js
out
ja
push
adcb
andl
mov
and
push
add
add
repnz
push
mov
or
call
rcll
je
add
add
fisttpl
or
idivb
lock
lret
pop
sbb
push
in
mov
lret
testb
cmp
mov
pusha
mov
or
testl
adc
lahf
arpl
test
xchg
mov
inc
imul
cwtl
jo
push
jle
fistpl
sub
jbe
int3
mov
push
insl
out
or
mov
insb
insb
jb
inc
mov
fcmovnb
pop
aaa
lea
sub
add
or
ja
inc
lods
xchg
or
push
ret
push
scas
cltd
inc
mov
inc
jmp
or
jbe
gs
fs
insl
jecxz
rcrl
xor
or
push
pop
adc
movsl
loop
push
xor
mov
add
das
and
sub
pushf
dec
arpl
je
orb
mov
add
ja
adc
or
in
fnsave
faddp
jmp
lea
cs
sbbb
lea
adc
add
leave
mov
fildll
roll
cli
adc
pop
stos
int
ljmp
dec
cmpb
cmp
jb
mov
pop
dec
pushf
dec
cs
loopne
aas
or
or
mov
cmpl
stc
mov
push
push
mov
push
icebp
jne
cmp
push
outsl
fs
repnz
push
mov
push
mov
mov
mov
test
leave
push
jmp
mov
mov
adc
mov
es
or
dec
sbb
mov
aam
lret
je
mov
mov
jmp
sub
mov
sub
push
and
push
cld
mov
lock
jmp
cmp
mov
pusha
out
or
cwtl
xor
mov
push
movsl
pop
sub
push
sub
xlat
fisttpl
testl
cmpl
ja
shlb
out
mov
lock
and
or
enter
mov
cmp
sbb
scas
and
jns
mov
sub
add
inc
sbb
jbe
adc
fdivrs
push
pop
out
xchg
mov
jnp
jae
jbe
push
add
fsubrp
in
jge
int
test
pop
ret
inc
incl
leave
mov
nop
inc
mov
mov
xorl
lock
sub
sub
xor
xchg
xor
mov
sbb
or
dec
add
clc
jbe
sub
push
mov
mov
xor
cmpsb
shrl
inc
jb
mov
aas
sbb
je
movl
test
mov
pop
mov
inc
data16
ja
outsl
add
inc
inc
dec
fimuls
lahf
fstpt
ret
add
negb
mov
test
cmp
mov
fadd
pop
jl
jne
mov
push
push
mov
cld
jmp
or
ficompl
cmp
aaa
jbe
cld
sub
xchg
jns
notb
push
mov
sbb
add
cli
or
rolb
lods
mov
in
mov
adc
cmc
or
addr16
or
ret
shrb
leave
adc
adc
addr16
mov
andl
cmp
outsb
outsl
andl
jne
sbb
xchg
dec
shrb
ret
cmpsl
lea
mov
pop
push
sbb
ljmp
mov
fildl
and
cld
sbb
or
or
or
or
es
dec
xchg
inc
push
adc
call
pop
outsb
jge
mov
mov
add
mov
pop
sbb
mov
ljmp
fs
mov
movsb
push
lock
cmp
int
jmp
mov
pusha
jb
jne
cmp
xchg
cmp
jmp
xlat
rol
fstpl
psubd
lret
lods
pop
push
and
mov
xor
je
cmp
or
mov
push
scas
mov
or
adc
cmp
xchg
mov
loop
dec
sbb
xchg
inc
sub
push
mov
mov
mov
adc
xor
pop
out
inc
pop
jne
cmp
jbe
aad
or
sub
call
ror
xchg
in
fimuls
aas
lahf
adc
inc
jmp
mov
sbb
fnsave
dec
and
mov
out
outsb
xchg
jp
sub
and
add
mov
test
push
out
insl
sbb
jmp
das
or
jb
jb
jnp
mov
xor
out
push
mov
in
out
and
pop
push
add
out
sbb
jno
shr
and
pop
mov
pop
fdivl
and
and
rolb
arpl
outsb
or
add
mov
add
enter
pop
pop
lea
pop
neg
push
nop
pop
iret
fcoms
mov
adc
xchg
mov
add
xchg
lods
or
pop
int3
mov
xchg
in
lea
sub
cmp
xchg
cmp
and
nop
add
add
xor
xor
sbb
or
fstp
or
mov
pop
call
call
out
dec
shl
hlt
clc
das
cld
fcoms
inc
out
cld
lea
mov
insb
aam
fnstsw
mov
hlt
add
rcr
mov
mov
fscale
adc
nop
push
sub
cmp
mov
adc
ja
mov
shl
neg
imul
daa
xchg
and
jne
loopne
or
or
add
add
out
mov
pop
out
add
pop
nop
mov
and
out
sub
mov
daa
and
sub
pop
mov
push
mov
lcall
pushf
movsb
lods
mov
xchg
fwait
sbb
imul
imul
dec
lcall
inc
jae
add
rorb
sbb
mov
fsts
pop
mov
ja
adc
jg
add
add
test
cmp
jne
or
pop
jp
loopne
popa
or
call
pop
movsl
fstpt
adc
out
adc
outsb
movsl
test
negl
jne
lahf
insl
mov
sbb
ret
inc
scas
adc
mov
inc
cmp
push
and
xor
pop
add
sbb
mov
xor
add
mov
mov
xchg
in
cmp
push
je
cmp
or
push
cmp
jne
or
mov
mov
leave
push
sub
and
or
cmp
repz
rolb
int
cmp
sub
mov
shrl
adc
or
dec
shr
mov
js
pop
cmp
mov
sbb
aaa
jae
insb
add
cmpl
pop
sub
jle
jecxz
flds
je
add
adc
adc
dec
bound
xlat
aas
push
leave
scas
add
insb
mov
xor
add
nop
mov
repnz
jnp
mov
pop
addl
or
out
jge
aad
dec
int3
cmp
add
icebp
bound
mov
mov
push
cmp
xchg
xor
testl
inc
sbb
sbb
repz
jo
aad
and
nop
shrb
push
push
popf
lock
and
mov
push
jo
mov
pop
lea
or
dec
aad
or
add
mov
push
cmpsb
cmp
ret
push
lock
inc
push
jne
push
loop
pop
adc
add
inc
dec
call
pop
inc
mov
or
inc
pop
adc
sub
dec
mov
push
pop
adc
inc
push
jne
sub
cmp
add
ljmp
dec
test
js
aad
sub
cld
shr
mov
imul
xor
orb
dec
push
or
jbe
jg
sbb
sbb
sbb
mov
mov
push
cld
add
fs
ret
mov
mov
je
cli
add
cmp
in
aas
mov
lahf
mov
stos
inc
mov
inc
jae
std
decl
dec
add
shll
pop
mov
and
lea
cmc
je
xchg
sbb
jo
fldt
cmpsb
pop
or
dec
push
mov
adc
push
or
sub
pop
mov
mov
stos
movsl
jne
fbstp
sti
add
mov
dec
pop
cmp
jbe
out
fdivl
xor
cmp
pop
mov
mov
pusha
push
jno
jno
cmp
pop
mov
mov
shr
not
and
add
sbb
fbstp
xchg
xor
sbb
lods
sbb
aas
inc
scas
dec
fistpl
xchg
in
dec
or
or
mov
int3
jge
inc
mov
int3
push
sub
mov
mov
pop
add
loope
cs
mov
mov
dec
paddd
inc
inc
popa
sti
scas
mov
jae
cmpb
push
dec
push
or
or
or
popa
in
fildl
sbb
sub
push
and
arpl
mov
addl
or
xchg
pop
test
sbb
cld
pushf
decl
repz
in
mov
insb
dec
rcrb
xor
mov
mov
lsl
push
mov
pop
xor
arpl
push
pop
or
push
mov
sbb
jge
testl
or
mov
inc
cmpsl
xchg
pusha
add
adc
addl
movsb
mov
adc
in
push
iret
inc
mov
notl
dec
adc
repnz
dec
sub
ljmp
js
jbe
insl
pop
pop
sub
or
aas
and
adc
pop
lea
inc
cmp
xor
imul
pop
mov
pop
aaa
push
xchg
cmp
jne
into
es
jg
mov
xchg
imulb
push
aam
shlb
cmp
dec
fildll
push
add
call
pushl
and
mov
jmp
orl
ds
push
adc
outsl
ljmp
cli
sub
inc
stos
aas
jo
ret
pop
adc
rolb
mov
imul
jae
xor
inc
clc
pop
mov
add
loope
push
pop
dec
jne
orb
popf
xchg
out
or
mov
decb
mov
add
das
je
movsl
cli
out
ja
popa
sub
sub
icebp
adc
dec
lods
orl
aad
mov
and
movl
decl
push
add
sub
or
addr16
jne
mov
cwtl
clc
add
int
pop
arpl
mov
adcb
fs
fcoms
jo
sub
mov
testb
mov
jne
or
pusha
nop
ljmp
xor
or
test
push
inc
mov
cmc
xlat
sub
pop
shr
shrl
adc
dec
cmp
mov
mov
adc
jle
inc
sbb
out
fldcw
in
aam
cmp
jbe
sahf
dec
push
outsb
adc
jbe
dec
pop
jns
ljmp
cmp
mov
push
sbb
faddl
nop
mov
xor
shl
sbb
and
pop
fists
outsl
insl
popa
jnp
add
jns
nop
sub
add
and
outsl
xchg
movsl
test
dec
sar
dec
cmp
inc
addr16
pop
hlt
mov
mov
jl
aas
or
lret
mov
pop
dec
pop
pop
push
lret
shlb
sbb
imul
adc
xchg
scas
ja
and
cmp
mov
cmp
push
jecxz
mov
cld
xor
jae
cld
fcmovnu
aad
test
pop
mov
xor
loope
inc
in
cmp
ficomps
inc
outsl
pop
mov
sub
and
pop
xor
out
cld
or
dec
cmp
cmp
rcr
add
pop
testb
or
or
into
je
outsl
ret
jo
dec
dec
push
insb
or
add
outsl
ja
and
dec
imul
push
adc
hlt
icebp
fchs
mov
mov
jmp
dec
add
jns
adc
jl
lcall
into
xor
cmp
setns
xor
add
dec
inc
adc
or
or
cld
pop
lret
lea
xor
les
into
push
pop
add
lock
fbstp
dec
xchg
jge
or
shr
subl
js
jmp
je
lret
push
mov
mov
mov
imul
cmp
adc
decb
xlat
jne
inc
push
mov
in
test
jge
jb
push
jne
mov
dec
push
jne
jmp
jnp
sbbb
adc
sbb
inc
insl
xor
movsb
fsub
xchg
lahf
or
les
lods
lods
pop
in
pushf
inc
sarb
mov
outsb
fnsave
mov
mov
cli
ljmp
mov
mov
mov
dec
pop
or
mov
dec
pop
sbb
fdivrs
cmpsl
push
cmp
jne
jb
out
negl
outsb
mov
inc
pusha
and
mov
add
mov
leave
inc
test
inc
pop
mov
and
or
icebp
icebp
pushf
mov
jle
dec
das
sbb
setne
dec
pop
cmp
dec
dec
daa
jge
iret
es
inc
sti
fwait
arpl
jno
in
and
mov
xchg
cltd
faddp
repnz
xor
repnz
jmp
cmp
mov
pushf
mov
xlat
and
jne
and
and
pop
outsb
mov
clc
addr16
jp
sbb
into
mov
jp
daa
in
xor
xor
daa
cmp
or
and
shrl
or
popa
js
out
or
jnp
push
xor
cs
xor
or
stos
mov
push
mov
push
into
rcrb
and
mov
repnz
ljmp
adc
mov
hlt
cmp
sbb
sbb
popa
outsb
dec
cmp
pop
outsb
inc
lea
leave
lds
jecxz
sub
inc
add
loop
jne
repz
sbb
mov
das
mov
xor
inc
xchg
sti
sbb
push
in
xor
push
add
insb
sbb
les
mov
icebp
xor
cmp
call
cmp
dec
or
bnd
lea
jae
push
mov
dec
roll
pop
out
push
mov
mov
mov
aad
mov
sbb
mov
push
pop
dec
in
add
pop
pop
cmp
xor
fsubl
adc
add
adc
mov
adc
mov
push
fs
imulb
jno
add
sub
gs
xchg
fistpl
push
sbb
ljmp
sub
ljmp
lds
out
roll
sub
pop
loop
mov
lock
push
xor
gs
push
mov
pop
push
push
frstor
add
dec
aad
lock
add
popf
insl
mov
push
test
cmp
or
pop
and
jg
adc
inc
dec
call
and
adc
adc
xchg
inc
sub
inc
loope
dec
imul
dec
ja
test
popa
out
or
insl
imul
mov
arpl
and
push
add
incb
add
xor
fldenv
je
sub
mov
dec
add
jne
mov
inc
add
lea
roll
lret
frstor
pop
or
ljmp
ficoms
inc
mov
and
jns
inc
sbb
setne
aas
sbb
xchg
ljmp
push
data16
push
insl
add
push
gs
sub
mov
xchg
rclb
roll
add
insl
push
roll
movsb
sahf
je
imul
test
push
add
mov
adc
fimuls
push
cmpl
test
jns
adc
ret
push
into
inc
push
cs
mov
mov
jp
mov
cld
inc
mov
adc
repnz
jle
lock
pop
or
testb
sub
cmp
fistpll
mov
adc
rorl
jge
inc
mov
in
sub
stos
pop
ds
movsl
sub
mov
inc
fdivr
inc
and
aad
fildl
lods
lock
adc
pop
and
adc
adc
sbb
sahf
add
mov
push
jbe
fisttpll
pop
div
pop
jb
mov
or
test
cmp
les
mov
mov
jo
push
js
or
push
fmuls
dec
outsl
hlt
jg
pusha
fistpl
outsl
insb
hlt
push
cmp
insl
pusha
hlt
je
mov
add
xchg
cld
xchg
and
sbb
jbe
imul
inc
or
je
dec
int3
in
and
sbb
dec
or
fldt
sbb
sbb
stos
out
enter
cmp
mov
into
jg
push
hlt
cmp
je
movl
jbe
sbb
sbb
pop
pop
sub
push
arpl
xchg
mov
and
lods
out
add
push
mov
push
cwtl
sti
rcl
pop
pop
push
jbe
pop
cmp
fdivs
orb
inc
popf
adc
call
outsb
or
push
adc
in
and
push
gs
pop
cmp
add
test
sbb
scas
mov
je
aam
clc
mov
push
push
sbb
inc
testb
pop
loopne
cmp
adc
cld
cmp
je
movl
pop
xlat
ljmp
mov
mov
inc
call
fdiv
jno
and
in
jmp
sbb
add
and
in
mov
fdivl
loopne
mov
ficomps
mulb
sub
push
inc
push
leave
xor
dec
mov
aam
dec
xor
sbb
push
or
lea
lock
and
mov
xor
popa
lret
cltd
insl
or
add
subb
rcll
jne
or
jle
jne
lahf
inc
mov
push
out
loope
add
nop
jle
xor
sbb
sbb
add
daa
iret
inc
sahf
movl
and
and
or
jns
and
cmp
jge
jg
xor
xchg
mov
mov
or
dec
push
xor
les
fldl
out
mov
bound
push
loope
jne
jb
sub
int3
andb
leave
ficompl
jle
cld
sub
rcrl
adc
int3
mov
jle
jge
test
mov
lret
and
lods
sbb
cli
push
in
and
pop
and
in
call
rcrl
mov
push
ja
pop
les
rcll
add
nop
jecxz
out
ljmp
add
push
mov
loopne
xchg
mov
mov
xor
add
push
cmp
sub
jmp
stos
mov
bound
sbb
push
shrl
mov
jne
or
mov
push
push
call
inc
cwtl
es
test
pop
je
ja
mov
fiaddl
ljmp
mov
pop
test
cmp
cmp
enter
lea
pop
xor
les
sbb
lods
test
scas
cld
xchg
dec
scas
loope
mov
stos
ss
mov
test
test
mov
adc
and
dec
ss
xchg
test
sbb
aaa
in
scas
test
add
in
pop
sbb
pop
mov
inc
inc
cltd
or
xchg
xor
sub
imul
loope
loope
dec
cmp
inc
pop
xor
jb
adc
mov
xchg
rcrb
jmp
sbb
ds
xchg
sbb
add
dec
scas
pop
push
imul
addr16
mov
adc
jge
cmp
or
or
xor
xor
sahf
mov
mov
push
cli
fildl
add
mov
cld
dec
sahf
pop
push
add
mov
mov
dec
dec
push
xchg
and
imul
sbb
cwtl
push
jp
mov
cmp
and
dec
adc
in
mov
push
xor
outsl
push
pop
push
mov
xor
cmp
sbb
add
mov
jp
jns
add
add
sub
pop
mov
xchg
shrb
out
push
xchg
aam
pop
cmp
and
push
cmpb
add
jmp
push
dec
je
lea
push
or
aaa
ss
adc
out
aas
push
mov
add
rorb
sub
call
fucomp
das
fidivrs
lea
push
add
add
mov
cs
and
jg
add
jg
fwait
int
data16
outsl
inc
add
push
jbe
jle
jge
fnstenv
adc
jg
jg
jo
mov
push
pop
orb
jae
mov
mov
hlt
rolb
ret
cltd
mov
addr16
and
clts
sub
xor
sub
dec
aaa
bound
jle
mov
inc
dec
or
insl
pop
jg
call
sub
ja
fildl
int3
call
lods
jbe
incl
rcrl
mov
add
sub
outsb
mov
loope,pn
in
lock
movsb
sub
aad
push
mov
rcll
mov
push
popa
in
in
dec
add
outsb
inc
dec
cmp
lock
push
and
cwtl
in
popa
out
sbb
ss
pop
mov
pop
rep
mov
push
out
leave
loop
loopne
and
std
idiv
mov
or
movsl
cmp
mov
jg
or
jbe
enter
ss
enter
and
and
and
xor
or
enter
orl
inc
inc
pop
dec
or
enter
push
xor
pusha
sbbl
pusha
enter
fs
xor
js
push
and
jl
or
xchg
test
xchg
dec
xchg
cwtl
pushf
loopne
dec
mov
pushf
or
sub
sbb
out
fistpll
lds
push
xchg
mov
sbb
jbe
cmp
aas
push
fs
mov
insb
adc
adc
je
inc
inc
push
sbb
mov
push
fs
xor
fs
dec
push
add
push
sbb
mov
jnp
or
ret
add
ret
adc
xor
pop
repnz
mov
inc
in
sbb
mov
jae
mov
imul
mov
decl
pop
shr
icebp
lea
dec
das
stc
add
hlt
je
mov
dec
xlat
cmp
pop
or
call
das
hlt
je
add
add
je
shll
pop
push
dec
inc
adcb
das
je
rolb
mov
add
lods
das
push
and
cmp
adc
shl
shlb
sub
or
dec
jo
in
push
das
notb
pop
sub
jb
adc
les
aam
in
add
inc
xlat
hlt
and
das
shll
and
imul
testl
inc
push
jae
jae
mov
mov
xor
ja
data16
addb
je
xchg
imul
sub
inc
pushf
js
push
insb
pop
add
ret
jo
inc
or
loopne
incl
pop
push
jl
mov
inc
jle
insb
adc
add
rorb
add
faddl
xor
jl
pop
cli
and
xor
cmp
mov
mov
lods
push
sbb
add
add
lds
or
insl
je
or
andl
or
push
std
mov
cld
pop
push
fstpl
mov
and
outsb
fs
mov
popa
test
ja
adc
push
fs
push
xor
call
inc
and
mov
fdivrp
pushl
jl
sub
push
cmp
in
cmp
mov
mov
pop
or
mov
pop
inc
mov
or
aad
mov
mov
int3
mov
ud0
out
cmpl
push
or
push
or
pusha
ja
jnp
cmpsb
push
mov
or
test
inc
cltd
imul
sbb
pop
pop
pop
pop
rorl
or
or
into
mov
push
in
shr
add
testb
and
inc
xchg
repz
pusha
jo
rcl
js
inc
fsts
push
xor
ljmp
inc
outsl
add
inc
jg
cmp
je
ret
xlat
or
out
lahf
jb
xor
sbb
jbe
or
push
clc
dec
repz
inc
hlt
mov
mov
rcrb
lock
or
iret
xor
adc
push
cmpsl
or
insb
repnz
testb
mov
dec
adc
ret
add
ja
jb
mov
lahf
adc
pop
jmp
add
pop
push
loopne
rorb
inc
mov
es
adc
mov
pop
stc
movb
pop
jmp
xor
or
inc
or
dec
cmpsl
imul
ds
push
push
mov
rcr
push
inc
test
dec
pop
hlt
cmp
push
lock
mov
sub
inc
or
xor
sarl
lock
aad
loopne
push
mov
rcrl
or
sbb
sbb
cmp
adc
pusha
push
push
cmpsb
adc
rorl
push
ljmp
add
mov
pop
movsb
xor
ss
lret
inc
cld
push
sbb
inc
adc
fimull
rclb
jp
ficoml
xchg
xor
aam
pop
addb
push
push
incl
je
cmpl
cmp
dec
xor
dec
adc
pop
inc
xor
jecxz
inc
aam
dec
fdivr
adc
arpl
pop
inc
cmp
jle
cmp
ss
in
dec
das
je
sub
dec
fdivrl
push
daa
clc
test
jno
ret
fidivs
and
cld
dec
or
in
mov
int
cmpsb
ss
in
push
or
ss
sub
lret
fildll
push
push
insl
outsl
je
pusha
das
loopne
pop
dec
aam
pop
jne
cmp
int3
add
cmp
dec
loopne
adc
mov
je
push
push
and
pushf
inc
leave
xor
and
fimuls
mov
je
jnp
mov
sahf
lea
dec
rorb
pop
adc
or
jp
jne
vpcomub
incb
xor
cmp
cmc
push
decl
test
in
shlb
inc
sub
in
cld
test
sub
rorb
mov
and
popf
pushf
pop
sub
je
push
popf
push
sbb
mov
ja
lods
push
loopne
adc
clc
pop
div
aad
add
popa
push
pop
in
or
aad
sub
xor
and
and
and
inc
xor
cld
inc
add
imul
mov
pop
shlb
enter
cmp
jb
pop
aad
or
push
or
test
jmp
sub
mov
icebp
xchg
pop
add
rolb
xor
push
cmp
test
jmp
add
fstpl
add
push
mov
lea
or
pop
subl
add
add
push
loop
or
out
cwtl
stc
test
mov
sbb
popa
mov
xor
xor
and
pop
cli
sti
sub
add
add
adc
push
mov
mov
dec
pop
test
lcall
aaa
sub
mov
out
and
pop
cmp
or
mov
adc
and
adc
ss
sbb
adc
jnp,pn
add
add
push
or
sti
bound
lock
xchg
mov
mov
test
ljmp
xor
sbb
mov
jg
add
mov
sub
cmp
push
ja
sbb
adc
leave
cmp
jae
mov
mov
jb
dec
loopne
and
add
mov
rorl
sbb
or
sub
scas
pop
adc
cld
pop
addb
cld
testl
test
add
out
jbe
ja
loop
cmp
jbe
popf
notb
loope
ret
and
daa
and
insl
mov
and
imulb
ss
aad
shll
adc
mov
mull
or
sbb
xor
xor
sub
cmp
cli
adc
push
divb
jno
jbe
or
xchg
xor
rclb
ja
or
je
sbb
mov
mov
mov
or
xchg
es
gs
sub
mov
jb
cmp
ja
add
cmp
or
sbb
cmp
jne
ret
rcll
ret
hlt
mov
neg
loop
sbb
pop
sbb
push
add
push
clc
ret
push
fmull
clc
mov
mov
sub
mull
movb
shr
inc
sti
jg
jmp
pop
sub
jmp
rcr
lods
pop
mov
div
das
and
out
cs
sub
ja
sub
dec
sub
mov
adc
fisttpl
or
ficompl
add
in
add
add
addr16
ret
lahf
stos
jle
jnp
lcall
test
mov
loope
push
add
mov
add
pop
ds
inc
fadds
sub
inc
push
sbb
adc
and
orb
pop
rcll
or
je
test
sub
sti
ret
fcoms
shl
push
or
subb
xchg
or
icebp
call
iret
xor
sub
push
jne
loope
fldenv
into
je
orb
out
jne
aad
addb
inc
cld
sub
insl
ss
mov
rclb
stc
out
mov
cmpsb
fsts
adc
xchg
sub
mov
rolb
cld
xor
mov
lcall
and
xor
adc
or
fmul
enter
adc
dec
inc
lahf
iret
enter
push
adc
adc
repz
adc
or
adc
enter
adc
add
enter
sub
add
and
pop
cs
pushf
int
lock
adc
decl
inc
outsl
jb
js
je
jb
arpl
jae
insl
jae
mov
ljmp
gs
insb
add
outsb
je
insl
and
sbb
dec
lods
or
push
push
adc
add
dec
inc
add
inc
adc
push
xchg
adc
xor
xor
inc
outsb
and
jo
imul
mov
or
jae
insl
popa
fs
popa
pop
je
gs
jo
and
mov
outsl
and
pop
push
aaa
neg
xor
popa
jb
and
xchg
cwtl
arpl
or
gs
xchg
mov
inc
sbb
outsb
je
xor
lods
fisttpll
daa
pop
jae
push
sbb
lods
jae
jnp
and
insl
aam
or
fxch
fldcw
lahf
xor
jae
ja
pop
dec
fmuls
leavew
outsl
mov
mov
jae
insl
bound
sti
mov
and
jbe
fs
imul
cmpb
das
adc
fcmovu
mov
jne
mov
outsl
cmp
and
sub
gs
mov
sahf
into
lods
ret
outsl
pop
lods
jl
mov
insb
insb
sub
das
mov
jmp
sub
arpl
sahf
sub
cmp
cmpsl
popa
xchg
outsb
push
fistpl
cld
add
dec
dec
mov
mov
divl
outsb
outsl
data16
push
push
mov
push
adc
xorb
jbe
das
ret
cmp
sti
gs
push
push
outsl
or
cmp
fmuls
test
setnp
pop
mov
pusha
fs
xor
mov
ja
cli
popa
bound
fwait
mov
lods
daa
aaa
jecxz
sub
mov
jo
aaa
and
jae
fs
jo
std
jbe
xorb
or
bound
in
mov
insl
pop
sub
das
pop
push
fdivrl
daa
jnp
pop
xor
imull
aas
insl
or
jbe
leave
subb
inc
jo
mov
sbb
arpl
jbe
push
popa
mov
insl
subl
or
repnz
and
in
dec
cli
js
sub
enter
sbb
push
movsb
shld
out
sbb
inc
ja
repnz
ret
xor
scas
mov
push
gs
sub
xchg
addr16
push
xlat
xor
jae
xor
je
xlat
dec
mov
lea
inc
imul
roll
mov
mov
adc
in
sub
cmovl
jge
hlt
daa
or
jo
dec
insl
fbld
daa
imul
xchg
fsubrl
ja
inc
cmpsb
and
into
cmp
inc
loope
jge
add
mov
inc
fbstp
inc
dec
xor
cs
dec
dec
gs
insl
lcall
inc
insb
jae
add
push
gs
pushf
jne
jecxz
mov
inc
inc
insb
sbb
dec
xor
cmp
inc
jb
jecxz
sbb
push
jo
pop
loopne
pop
out
daa
imul
jae
or
jnp
add
in
pop
loope
push
lret
push
je
pop
push
jae
cmp
push
dec
mov
and
inc
pop
jbe
gs
mov
inc
push
push
popa
addr16
outsl
js
pop
outsb
xor
call
add
push
pop
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
ljmp
icebp
sub
cs
call
aaa
cmp
cmp
cmp
ds
mov
incl
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
pusha
nop
arpl
and
fildll
imul
jno
test
jbe
js
jp
jl
jle
add
out
nop
dec
cmpsb
and
and
add
test
fs
push
adc
inc
adc
add
and
add
add
insb
fsts
add
enter
add
add
push
fnstenv
repz
lret
adc
and
add
and
add
xor
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
mov
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
or
lock
rcll
and
mov
adc
jg
shlb
add
cmp
pop
jae
cltd
jno
fs
dec
and
jns
call
or
das
jns
push
dec
push
test
inc
dec
cmpsl
jg
xchg
mov
outsl
jbe
cmp
inc
scas
in
jns
je
inc
test
cmp
hlt
in
pop
inc
pop
outsb
gs
inc
imul
pop
arpl
gs
push
ss
or
je
fidivrs
mov
dec
inc
mov
aaa
jns
aas
cmp
sahf
mov
jb
sbb
or
push
sub
adc
push
cmp
pop
imul
or
jne
dec
iret
int
adc
pop
inc
cmp
neg
jnp
das
daa
and
add
sub
pop
or
lds
daa
cs
into
mov
mov
jnp
cmp
fyl2xp1
or
out
pop
orb
sbb
or
aaa
daa
sarb
rolb
movsb
inc
jno
pop
scas
sbb
push
pop
in
dec
aas
mov
pop
fadds
cltd
or
out
mov
mov
inc
pop
mov
pop
aas
add
and
pop
inc
popf
nop
int3
sarl
push
jg
xchg
dec
fmul
pop
int3
int
aas
nop
pop
ret
sub
shl
cmp
pop
and
xchg
xchg
in
push
in
mov
cld
addb
jb
sbb
add
cli
das
subb
addr16
jbe
dec
testb
insb
pop
add
loopne
mov
repnz
daa
mov
adc
dec
sahf
cmp
xchg
adc
inc
sbb
repnz
and
sbb
cmp
dec
push
sub
adc
and
and
cwtl
and
clc
js
jns
daa
dec
sahf
fdivrs
cld
lcall
and
mov
sbb
movsb
add
lea
add
nop
inc
mov
nop
xchg
xchg
addr16
add
cmpsl
sub
add
jb
call
add
pop
sbb
mov
pop
das
mov
xor
inc
add
add
shlb
sbb
shrl
or
orl
sbb
jnp
push
cmp
xorps
adc
add
adc
and
and
inc
pusha
orl
push
pop
orl
jnp
pop
insl
and
je
and
jb
or
xorb
enter
test
shrl
sahf
mov
subl
lahf
into
pop
xchg
test
xor
xorb
cltd
inc
push
and
add
add
pop
subb
gs
or
sub
arpl
sarl
loop
cmpb
push
cld
cld
in
cmpsb
filds
mov
cld
inc
jle
adc
lea
mov
fsubs
addr16
inc
mov
bnd
enter
iret
mov
in
call
repz
add
pop
jb
sub
pop
fisubrl
xor
fcomp
loopne
cmp
jle
enter
sbb
pop
inc
adc
push
add
stos
xchg
mov
sbb
add
nop
and
push
out
jne
sarl
das
pop
jmp
cli
mov
jnp
sbb
iret
sahf
lods
cmp
inc
and
add
xor
shll
sub
and
cmpsb
mov
or
cld
lock
aam
int3
jmp
sarb
mov
lods
movsb
cwtl
imul
cmpsb
imul
imul
jmp
jl
adc
inc
add
adc
inc
inc
cmp
add
push
roll
movsl
xor
flds
cmpsl
push
lds
inc
sbb
repnz
adc
or
pop
shll
aam
xchg
insl
lcall
add
cmp
ja
mov
insb
lcall
dec
insb
add
inc
push
or
sub
xor
inc
adc
add
xchg
dec
add
pop
adc
adc
add
notb
lds
faddl
inc
sbb
mov
sbb
inc
adc
nopl
jo
sub
mov
outsb
adc
pop
fs
jo
inc
inc
imul
cmp
inc
cmovge
jne
xor
ds
mov
push
jb
cmp
or
aaa
sbb
popa
insl
cmp
xchg
push
icebp
mov
push
fildl
or
sub
mov
push
jne
fs
shll
dec
or
sub
jns
inc
test
xchg
dec
mov
pop
daa
xchg
push
jns
xor
or
nop
push
jge
push
jl
ficoms
mov
pop
push
push
xchg
test
insl
sub
dec
or
jle
outsl
pop
push
shll
or
push
and
or
jmp
gs
fimull
cmp
jns
inc
das
popf
inc
add
fists
jae
fisubl
jns
add
je
int3
fstpt
pop
inc
imul
jns
pop
adc
mov
imul
outsl
js
or
cmp
push
or
dec
sbb
leave
push
ficoms
bound
inc
in
adc
addr16
xor
jae
or
test
push
and
push
in
cmp
or
dec
inc
dec
or
sub
or
sbb
popa
dec
push
jle
cmp
mulb
or
push
push
gs
je
xor
push
outsb
test
imul
sbb
psrld
push
inc
dec
fadds
or
pop
mov
fs
xorps
test
push
daa
cmp
sub
inc
inc
inc
jp
cmpsb
clc
inc
fiaddl
and
stos
mov
xlat
and
aaa
xor
add
daa
jb
cmp
mov
pop
pop
subl
js
adc
outsb
bound
push
mov
pop
inc
arpl
and
jae,pn
push
imul
or
pop
outsb
scas
sub
mov
inc
ffree
addr16
mov
push
test
lcall
cltd
imul
xor
jne
fstpl
push
mov
imul
outsb
imul
xor
ds
sub
cmpsb
xchg
jae
pop
jae
aaa
sti
dec
gs
popf
add
aaa
lahf
and
or
or
adc
and
push
mov
or
pop
mov
cmp
or
adc
add
or
or
or
or
cmp
nopl
in
sbb
and
or
sub
and
cmp
sbb
lods
or
or
adc
decl
adc
lock
add
or
add
or
or
mov
adc
push
xor
inc
or
sbb
adc
and
sub
or
adc
and
insb
push
or
orb
mov
scas
push
sahf
add
or
sub
sbb
and
and
lods
in
outsb
outsl
xchg
inc
push
push
pop
push
pop
add
pop
or
jge
mov
mov
push
popf
add
cmp
sbb
pop
rorb
sbb
sbb
and
into
shll
or
or
sub
mov
adc
xchg
and
popf
or
sub
and
or
sub
adc
adc
imul
adc
inc
add
insl
mov
or
out
jle
idivb
sbb
add
daa
adc
vmwrite
push
lock
ret
add
icebp
add
pop
lock
cmp
push
ret
mov
or
or
and
xor
bound
jne
adc
push
insl
sti
pushl
sbb
sub
push
adc
adc
iret
xor
imul
call
pop
or
push
pop
add
dec
push
add
and
or
insb
or
inc
es
inc
inc
inc
fs
adc
sbb
or
lock
add
adc
or
inc
shll
cmp
imul
jne
lock
sti
mov
cmp
roll
mov
or
xor
std
mov
cmp
dec
movups
pushl
xor
test
sbb
mov
pusha
xor
or
cmp
inc
pop
adc
cmp
mov
jnp
push
push
and
xor
inc
lock
lock
add
adc
mov
add
or
adc
or
rclb
cmpsl
sti
mov
or
sbb
lock
add
adc
lock
adc
xor
push
add
fstpt
lock
push
adc
add
add
sbb
jnp
mov
add
or
or
das
mov
lock
fiaddl
lock
add
fsubp
jg
xor
lock
add
and
adc
add
adc
add
sub
add
decb
adc
add
dec
in
lret
in
loopne
add
or
or
dec
jbe
inc
jno
mov
sahf
or
pop
sysret
out
std
pop
repz
subl
gs
push
das
and
sub
push
mov
add
push
fcomps
and
jo
add
pop
add
lcall
mov
add
mov
fldcw
inc
xchg
jb,pn
leave
int
lock
test
push
jbe
mov
add
adc
daa
push
shrb
jae
nop
out
mov
dec
xor
push
or
std
dec
and
outsl
dec
push
imul
cld
call
jne
js
add
add
add
add
inc
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
