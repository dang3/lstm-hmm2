movl
call
scas
sbb
outsb
sub
pop
bound
cmpsb
mov
iret
hlt
aam
push
scas
icebp
aam
loope
dec
cmp
xor
test
popf
fstps
imul
imul
loopne
popf
lcall
xchg
insb
push
add
or
lret
dec
mov
mov
test
test
cmp
movsl
push
mov
ljmp
jnp
adc
jmp
pusha
mov
movl
pushf
pusha
call
pushf
pusha
lea
jae
pusha
lea
jne
pusha
xchg
mov
call
call
imul
mov
mov
push
ffree
push
iret
cmp
add
fcmovnbe
jecxz
loop
xchg
sbb
inc
data16
jecxz
push
dec
dec
int
into
sbb
lods
jb
xchg
xorl
les
jno
dec
out
aas
mov
or
and
xchg
jo
enter
aam
cmp
and
sub
jle
pop
cmp
aam
stos
lods
jb
popf
sub
cmp
sti
fimuls
fisubs
inc
and
push
gs
stc
jecxz
mov
sbb
push
mov
rol
cmc
mov
push
clc
not
pushl
mov
lea
setbe
mov
pushf
clc
mov
call
movl
pushl
movl
pushf
pushl
pushf
pushl
lea
jmp
lea
call
push
cmp
push
lea
jae
stc
cmc
clc
cmp
pusha
jmp
jmp
not
call
or
mov
das
sub
sar
xchg
mov
outsl
dec
inc
push
in
add
in
mov
cmp
lock
aaa
and
fbld
pop
dec
adc
sbbl
imul
shrl
inc
sub
adc
pop
cmp
pusha
pushf
call
push
pop
hlt
push
xchg
jbe
sub
inc
jnp
mov
paddusb
rorb
add
pop
jns
cmpsb
mov
bound
xor
test
out
das
jge
lret
lret
in
or
pop
adc
lods
fisttps
dec
push
insl
push
int
and
and
sbb
mov
jne
mov
dec
add
cmp
mov
adc
mov
fisttps
pop
insl
push
int
popa
xchg
dec
fists
loope
jecxz
fisttpll
loop
lret
mov
in
dec
pushw
fdivrs
mov
xrelease
int
cmp
lods
pop
mov
push
test
cmpsb
ftst
jne
ret
in
xchg
push
mov
xchg
jbe
pop
sbb
jbe
cmp
add
fcoml
jp
cmc
dec
pop
mov
arpl
gs
ljmp
out
idiv
out
je
inc
les
jp
dec
jb
arpl
cmp
push
shl
mov
out
jle
scas
sub
hlt
adcb
pop
sub
jp
cmp
aas
outsb
mov
inc
add
push
mov
addb
leave
or
xchg
pop
mov
adc
ja
push
into
dec
lods
sbb
lods
outsl
dec
adc
fimull
cli
fiaddl
jecxz
fmul
clc
mov
mov
js
dec
sbb
mov
enter
seta
leave
jp
push
dec
xor
mov
decl
inc
sub
and
out
dec
xchg
push
rclb
mov
sbb
inc
pushl
fiadds
mov
mov
jge
std
scas
aas
popa
mov
nop
insl
mov
xlat
call
mov
pushf
repnz
pusha
lea
jne
setnp
lahf
pushf
pushf
movb
jmp
lea
call
call
lea
jae
jo
push
mov
sub
mov
movb
lea
call
call
push
mov
stos
mov
pushf
lea
jmp
call
pusha
adc
mov
movw
lea
jae
pushf
lea
jne
pusha
pushf
mov
stos
mov
pushl
push
lea
jmp
xchg
into
inc
or
pop
ret
dec
cmpsl
sub
shll
test
out
clc
rcrl
lret
cmp
es
or
or
cs
fnstsw
mov
jecxz
sbb
fidivrl
insb
int3
cmc
sbb
xchg
lret
mov
into
je
mov
mov
into
scas
in
xchg
cmp
add
in
pcmpgtd
mov
lods
jmp
in
popf
movsl
xchg
nop
lahf
call
testl
movsl
test
mov
push
xor
ja,pn
stos
out
xchg
fldcw
xor
lods
hlt
xchg
aam
lcall
dec
out
into
xor
adc
data16
dec
push
xor
cmp
and
sbb
cmp
popa
adc
scas
lcall
cmp
xor
mov
mov
pop
divl
in
push
jne
push
loop
std
leave
movsb
and
in
bound
xchg
jbe
sbbb
mov
cmpsb
pop
mov
pop
divl
push
sbb
outsl
mov
stc
dec
add
xchg
ret
pushl
aaa
xor
push
lods
imul
hlt
in
out
sbb
test
sbb
xchg
dec
cld
or
lds
push
mov
out
mov
fcmovb
add
icebp
iret
or
rcrb
lods
ljmp
inc
ret
xchg
ljmp
mov
daa
mov
jae
fsubrl
aas
push
mov
je
push
fstl
ljmp
mov
add
nop
scas
rcll
xchg
mov
in
sub
sub
xchg
jbe
sbb
das
sub
cmp
int3
fmul
les
ja
test
jb
outsl
or
jb
and
nop
mov
mov
jnp
cmpsb
cli
sbb
push
adc
insl
sbb
inc
aaa
popf
call
fcoml
clc
cmpb
pushf
pushf
pushf
mov
lea
jne
shr
xor
bsf
rcr
mov
clc
and
add
not
pushf
clc
mov
call
pushf
mov
jmp
call
repnz
call
inc
sets
dec
seta
dec
inc
xor
bt
ror
shr
xchg
xor
clc
mov
inc
shr
rcl
cmc
mov
pushf
mov
btr
rol
mov
clc
sub
call
btr
mov
jmp
jmp
pusha
shr
pushf
movb
lea
je
pushf
adc
mov
pushl
pusha
lea
jmp
lea
je
or
pusha
cmp
or
mov
pop
sar
add
movzbw
bsf
mov
push
jmp
lea
call
pusha
jmp
lea
je
pushf
clc
pushf
test
or
call
lea
call
jns
pusha
pushf
pusha
adc
pushf
call
pushf
movb
lea
ja
pusha
call
shr
mov
push
cmpb
pusha
lea
jne
das
sub
bts
clc
mov
xor
xor
not
add
rcl
stc
neg
or
mov
bt
pushf
test
call
lea
je
xchg
test
shrd
xor
mov
stc
adc
bsf
mov
bt
cmc
shrd
call
nop
sub
add
jbe
jmp
push
mov
das
in
mov
jle
imul
test
mov
loope
mov
ss
aas
stos
and
mov
es
add
enter
mov
jno
hlt
xor
adc
and
loopne
add
test
xchg
dec
xchg
jbe
dec
nop
add
push
lret
inc
addl
int3
out
mov
test
insb
mov
lods
insb
orb
out
mov
xor
dec
bound
dec
sbb
sbb
mov
adc
push
xchg
inc
call
dec
call
lea
movw
lea
jp
pusha
movl
call
xor
stc
repnz
jmp
push
call
test
xor
push
xchg
inc
ror
pushf
lea
stc
bts
stc
xchg
add
inc
push
xadd
lea
push
ror
shld
push
push
movzbl
mov
cmp
rcl
mov
add
xor
mov
bt
bt
pushf
pushl
or
pusha
push
call
lea
jne
movzbw
xor
call
lea
push
xchg
jbe
mov
das
sub
cmp
ljmp
mov
mov
mov
mov
ds
add
stos
xchg
daa
fisubrs
into
loope
push
sbb
adc
cmpsb
pop
push
das
mov
push
or
jo
mov
jne
mov
fcoml
mov
popf
or
or
fistps
push
cltd
loope
out
test
cmpsl
divb
push
inc
call
stc
pushf
cmp
pusha
movb
pushf
push
lea
jb
cmp
stc
cmp
pushf
cmp
push
pusha
jmp
push
push
lea
jne
cwtl
pushf
lahf
movb
movzbl
jmp
fistpll
push
xchg
jbe
ds
dec
cmpsb
test
cltd
xorb
xchg
jns
stc
pop
shrb
jb
movsb
xor
rorb
popf
pop
sub
sub
in
cmp
mov
sub
in
in
jne
inc
xor
mov
sbb
shl
add
les
xorb
xchg
jmp
addl
and
pop
sti
dec
outsb
jo
xchg
rcr
sbb
insb
mov
inc
jle
lods
lahf
push
push
jo
test
jae
sub
or
dec
pop
cmc
enter
mov
xor
jg
cwtl
add
scas
xlat
pop
icebp
jae
lahf
adc
mov
mov
sbb
jbe
adc
hlt
das
in
push
pop
push
in
and
in
push
add
add
add
push
pop
add
cmp
sbb
add
xor
add
add
add
jge
or
xor
pop
aam
daa
cwtl
pop
fwait
pop
add
fsubrl
dec
popf
cmpsb
cmp
mov
dec
out
hlt
ror
fadd
pop
test
cs
cmp
jmp
push
inc
jae
cwtl
in
loopne
sahf
iret
or
adc
sahf
adc
jmp
push
push
lea
call
pusha
push
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushf
bt
test
pushl
pushl
pushf
lea
je
sub
add
cmp
bswap
mov
cmp
pusha
add
push
clc
pushl
mov
sub
pushf
inc
movzbl
mov
bt
cmp
stc
cmp
movb
lea
jbe
lea
test
mov
shld
or
add
jmp
movsb
dec
jp
xchg
jbe
lret
cmp
add
into
aad
dec
xchg
lret
popa
xor
add
cmp
xchg
fs
lret
fs
lock
fldenv
imul
cmp
cltd
and
xchg
incl
iret
in
or
std
push
sub
add
jle
xchg
mov
push
adcb
stc
into
aad
fs
nop
sbb
lret
mov
test
dec
jno
stos
xchg
cmp
lea
dec
fwait
jecxz
call
lock
and
add
nop
lods
lods
in
pushf
pop
dec
push
movsb
mov
mov
push
sub
or
lret
gs
mov
pop
pop
or
inc
mov
jno
int
inc
movsl
lds
add
mov
addr16
mov
mov
and
cmp
adc
mov
pop
xor
mov
xchg
jbe
sbb
add
lea
fs
dec
mov
out
adc
add
repz
xchg
arpl
out
es
lret
test
or
fs
pop
cmp
pop
out
add
fsubrs
dec
adc
xchg
inc
idiv
xlat
daa
cli
gs
mov
pop
mov
add
mov
adc
sub
cltd
push
pop
cmp
lods
cmp
sub
fsubrs
adc
dec
xor
push
loopne
cmp
mov
out
push
add
fidivrs
sbb
xor
dec
jb
pop
pusha
insl
cmp
or
cmpsb
sbb
lret
inc
movsb
adc
or
call
fbstp
inc
dec
jle
fdivl
mov
xor
mov
pop
jno
movsl
xor
mov
inc
sbbl
jle,pn
mov
arpl
outsb
adc
add
lahf
xor
icebp
pop
add
bt
push
movl
push
btr
mov
lea
stc
stc
clc
pusha
cmp
pushf
pusha
call
adc
jbe
fsubl
sarb
push
mov
mov
xlat
iret
add
imul
icebp
fucomp
jns
mull
enter
std
adc
cmp
popa
out
cs
insb
hlt
adc
sti
shl
jnp
fwait
pop
cs
lret
popf
cmp
push
mov
pop
dec
jns
pop
or
enter
push
mov
xchg
sub
scas
add
fs
inc
pop
or
push
test
and
in
pop
dec
cmp
cmp
xchg
jbe
out
push
in
and
decb
adc
jl
xchg
jae
add
arpl
jne
repnz
out
inc
js
push
sub
mov
mov
and
mov
mov
sahf
pop
jmp
sti
fwait
jno
pop
stos
aam
inc
sub
lcall
scas
scas
xlat
jne
mov
fmuls
pop
movswl
jbe
xchg
outsw
out
outsl
add
push
pop
mov
sbb
push
add
inc
sub
xchg
outsl
inc
out
call
cmp
mov
xchg
push
mov
pop
push
dec
adc
mov
popa
cmp
repnz
lahf
loope
leave
xor
popf
push
cmp
cmpb
push
lea
jne
movzbw
movzbw
xor
pushf
mov
sub
setg
call
stc
sub
push
pusha
bt
bt
cmp
movw
jmp
aad
push
cmp
jbe
pop
in
xlat
test
push
out
mov
into
in
pop
ja
daa
xchg
or
mov
pop
ljmp
adc
push
mov
int3
imul
and
shr
mov
add
cmp
pusha
lea
jb
pusha
pusha
stc
cmc
cmp
pushf
lea
jae
call
pushl
movl
movb
push
pushf
lea
jmp
movzbl
mov
pushl
lea
jmp
push
inc
lret
cmp
imul
xorl
xchg
jecxz
out
imul
cmp
cltd
js
js
aad
movb
jnp
xorl
int
mov
mov
int3
cltd
pop
mov
lea
adc
outsl
cmp
aam
fisttpll
ss
sbb
ficompl
lock
pusha
jnp
xor
pop
or
aas
mov
sbb
mov
outsl
subl
sub
call
neg
clc
call
not
jmp
lea
jne
dec
add
shr
mov
shl
movzbl
sub
call
jmp
shld
mov
dec
shld
mov
clc
clc
jl
clc
cmpb
pusha
call
fdivl
xlat
ds
jbe
pmulhw
iret
sub
ret
and
sbb
dec
cmp
mov
movsb
icebp
push
or
lret
sub
push
stos
test
pop
push
fimuls
aad
push
pop
sub
int
cmc
inc
outsl
mov
push
stc
adc
dec
sarl
cmp
fidivrs
stos
nop
push
and
add
mov
popl
mov
dec
push
les
int
push
test
inc
inc
and
test
or
inc
push
jbe
pop
cltd
adc
insl
cmp
js
cmp
loope
or
ss
rclb
adc
mov
adc
adc
pop
je
mov
int3
fldt
test
and
loopne
mov
insb
sub
jb
shlb
xor
sbb
fs
mov
fs
mov
ljmp
lock
in
pop
bound
jmp
scas
lret
sub
sub
mov
jbe
or
lock
mov
mov
outsl
jle
mov
pop
mov
outsl
lahf
and
shrb
test
lock
fwait
dec
pop
imul
xchg
push
or
addl
shrl
call
test
cmc
xor
pusha
pushf
inc
lea
pushf
call
jmp
lea
jbe
rcr
shrd
sub
shl
mov
inc
call
lea
pushf
pushl
movzbl
mov
pushf
lea
jmp
bt
sub
pusha
call
pushf
pusha
dec
cmp
shl
seta
jmp
call
popf
jae
cmp
test
sub
or
and
stos
adc
popa
mov
int
push
and
aas
dec
sub
mov
cmpsb
fsubrs
mov
sbb
scas
push
stos
dec
adc
pop
xlat
jg
mov
out
sbb
ss
cmp
adc
sub
fdivrs
mov
cmc
fwait
insl
lahf
pop
cwtl
shll
cmpsl
mov
into
adc
std
jl
test
test
mov
outsl
pushf
cmp
xor
adc
mov
or
cwtl
fwait
push
les
int3
addl
shr
test
sub
sub
sbb
movl
cmc
vandps
std
mov
loope
sub
or
test
repnz
incl
cmp
imul
mov
add
out
fimuls
mov
dec
add
jg
mov
mov
jns
sbb
pop
mov
fs
jmp
jmp
jmp
jne
idivl
xchg
jbe
outsl
lods
dec
movsb
rorl
mov
fcomi
pop
out
iret
in
iret
sub
add
repz
mov
cli
std
inc
out
lock
push
in
scas
xchg
loope
aad
neg
iret
xchg
or
sub
adc
insl
inc
imul
rcr
lcall
ja
add
sub
movsbw
bts
add
xor
xor
dec
not
mov
pushf
stc
rcl
mov
cmc
pushf
pushf
repnz
push
pushf
pushf
lea
jne
setbe
pusha
not
pushl
movb
mov
not
setnp
mov
pushf
pushf
movsbw
movzbw
lea
pushl
movb
jmp
les
xchg
jbe
sbb
and
jno
and
shrl
inc
scas
rorl
cmp
arpl
mov
incb
adc
cmp
stos
jb
mov
leave
and
movsl
adc
jae
pop
iret
mov
sub
rcll
xchg
xor
test
call
mov
lea
pushf
mov
pusha
lods
cmc
neg
push
pusha
not
push
inc
clc
pushf
stc
rol
movb
sub
jnp
cmp
push
movsbw
lea
pushf
pushf
mov
jmp
dec
mov
pushf
call
bt
cmp
pushf
push
lea
jae
push
clc
jmp
scas
push
out
cmp
or
pop
push
sub
mov
inc
jg
dec
shlb
cwtl
dec
cmp
xor
pavgw
pop
repz
fnstcw
adc
stos
mov
xchg
mov
nop
clc
xor
push
into
mov
add
mov
mov
jne
scas
inc
mov
inc
insl
jge
mov
dec
adc
jb
mov
pusha
add
test
sub
movsb
inc
ficomps
mov
push
inc
sub
out
inc
mov
cs
push
add
xor
push
add
sub
sub
adc
orl
and
xchg
ljmp
roll
cmp
jl
and
aas
rcr
ljmp
int
inc
add
je
shrb
sub
jmp
lods
shll
push
cmpsl
ret
sub
in
rcrb
adc
imul
xchg
add
mov
add
fisttpll
repnz
xchg
rorb
rcrb
test
stos
xchg
fs
scas
fbstp
adc
sub
mov
jnp
mov
addr16
jg
lahf
sub
repnz
out
ja
dec
pusha
fnstsw
push
dec
cli
hlt
or
icebp
sbb
pop
sbb
lcall
mov
ds
or
mov
jge
jb
std
sbb
mov
inc
and
xchg
inc
add
je
add
inc
and
push
pushf
pushl
ret
pusha
not
pushfw
popw
setbe
shr
mov
stc
xor
bt
cmc
call
mov
pusha
cmp
test
add
movw
stc
stc
pushf
mov
test
cmc
clc
test
jmp
jmp
pushf
push
push
lea
call
call
lea
jae
pushf
lea
jmp
sar
xor
sbb
inc
sub
sti
push
mov
sbb
push
adc
dec
inc
call
int3
cmp
inc
jle
shl
cmp
cmc
sbb
dec
xor
jecxz
lret
xlat
jg
movsl
fildl
lods
testb
out
lret
xor
mov
shl
cmp
ljmp
mov
xor
clc
inc
sbb
out
xor
mov
scas
push
mov
rdmsr
test
xchg
outsb
sub
dec
sbb
push
out
mov
jp
scas
xchg
out
xor
xchg
cld
addb
repz
shll
push
push
fidivs
sub
sbb
pop
mov
pop
scas
in
sub
pop
push
cmpl
inc
scas
test
sub
dec
mov
out
sub
lods
fwait
or
sbb
mov
dec
inc
xchg
push
jmp
repnz
enter
sbb
xchg
jp
fiaddl
xchg
mov
shrl
sahf
movsl
mov
and
cli
mov
cmp
fs
dec
cmp
mov
sbb
mov
bts
sub
mov
mov
bt
clc
bt
cmc
and
test
cmc
call
mov
call
adc
pusha
mov
lea
call
jmp
pushf
jmp
sub
divb
xchg
jbe
int
xorl
test
enter
jp
jg
pop
bound
sbb
jae,pt
pop
or
ljmp
iret
shl
cmc
nop
and
push
lret
mov
pusha
dec
sbb
sbbb
mov
ljmp
into
mov
adc
xchg
leave
cmp
loop
mov
cmc
adc
push
mov
xchg
jmp
xchg
sbb
jmp
stos
es
inc
dec
out
or
dec
mov
daa
repz
fistl
ss
mov
or
mov
lea
ja
stc
imul
pusha
pushf
mov
lea
jmp
cmp
push
lea
ja
stc
call
push
lea
jne
pushf
pushf
movl
call
lea
je
cmp
clc
jmp
roll
std
mull
cmpsb
clc
mov
out
sbb
pop
xchg
cmp
sahf
test
call
push
aas
cmpsl
push
out
sub
ret
icebp
pop
push
aam
adc
jecxz
xchg
repnz
je
test
scas
mov
lods
dec
jl
pop
mov
jge
xlat
mov
push
cmp
add
fcmovnu
jne
and
fdivrl
xchg
jbe
popa
outsb
arpl
bound
in
ljmp
sbb
xchg
mov
push
mov
jmp
xor
push
add
xor
add
dec
adc
jmp
aas
aad
in
sbb
ret
clc
or
das
in
cmp
stos
jne
jecxz
or
adc
fcmovnu
jmp
lcall
cmp
jae
loop
nop
inc
sbb
das
pop
add
mov
adc
push
sub
add
jmp
inc
shld
push
movsbw
mov
pusha
sub
xor
push
xor
das
push
rcl
dec
shld
push
rcl
lahf
shl
sbb
push
sub
test
mov
pusha
push
mov
bt
test
call
push
jmp
pushw
popfw
movw
pushf
inc
push
jmp
jmp
test
pusha
pushl
lea
je
test
pusha
sub
stc
pushf
stc
cmp
pushl
lea
ja
call
shr
add
adc
pusha
mov
pusha
or
pushf
call
lea
lea
add
or
sar
mov
push
pusha
mov
movb
call
andl
xchg
jbe
cltd
stos
in
jb
jns
aas
je
sbb
ret
testb
testl
push
inc
jnp
sub
cmp
mov
je
arpl
mov
out
mov
pop
roll
insl
cmc
dec
mov
sub
mov
lea
jb
jmp
in
icebp
and
roll
fpatan
mov
pop
movb
adc
push
push
pushf
pushf
pushl
ret
pop
xchg
jbe
adc
jl
mov
xchg
mov
nop
and
cltd
push
inc
jmp
movsl
movsl
je
pusha
dec
xor
xchg
mov
daa
jle
push
mov
out
popa
jae
fidivl
lret
mov
inc
and
xor
adc
movb
pushl
ret
int
cmp
lret
adc
mov
mov
fs
call
pushf
pusha
push
lea
jmp
pushf
lea
ja
rep
bswap
call
call
test
icebp
xor
sbb
les
xchg
mov
lea
aas
in
lock
sbb
sub
mov
mov
aaa
lret
mov
lods
stos
sbb
stos
adc
mov
push
dec
addr16
loopne
out
fsts
push
int
outsb
dec
frstor
cmc
mov
mul
and
cli
ja
inc
negb
mov
in
popf
push
dec
outsl
aas
imull
pop
nop
aas
push
pop
xchg
mov
jl
jmp
call
cmp
out
lret
add
pop
out
cmc
mov
pushl
lea
jmp
mov
lea
ja
pusha
jmp
jmp
cmp
jmp
lea
jge
push
not
call
call
add
dec
outsl
popa
fs
imul
add
add
add
pop
add
cmp
sbb
add
xor
add
add
add
add
btr
bsr
adc
shld
sub
setns
push
not
pusha
mov
pushl
mov
not
xchg
lea
mov
movzbl
mov
movw
mov
pusha
mov
mov
pushl
ret
adc
push
pushf
call
jne
outsl
xor
or
mov
pop
out
loope
lahf
outsb
pop
inc
addl
xchg
in
push
jbe
pop
imul
lds
rcl
inc
push
jecxz
dec
pop
lahf
xchg
push
mov
insb
xor
xor
mov
inc
jae
pop
jmp
inc
jmp
setle
and
jmp
bt
shl
mov
cmc
cmp
cmp
mov
mov
sub
pushf
xor
lea
setnp
xchg
lods
cmc
push
or
xor
xor
neg
neg
jmp
in
int3
sub
jbe
push
outsl
cmp
repnz
push
fs
mov
iret
xchg
and
push
lret
mov
stos
mov
sar
clc
lock
dec
sbb
sbb
test
ss
mov
xor
sbb
adcb
sbb
pushf
pushf
bt
pusha
cmpb
pushf
pushf
pushl
lea
jne
bsr
lea
test
bswap
mov
clc
pushf
mov
add
test
movzwl
pushl
sub
btc
add
mov
test
pusha
add
jmp
mull
xchg
jbe
bound
mov
decb
sub
js
sbb
mov
lea
fmull
xchg
faddl
ret
and
xchg
mull
mov
lock
out
xchg
lret
bound
mov
clc
decb
popf
sub
mov
inc
std
stos
pop
or
jae
in
popf
xchg
aaa
xlat
sub
imul
call
lret
push
mov
inc
test
push
dec
cmp
cltd
sbb
mov
mov
sub
dec
mov
lret
in
sbbl
sti
mov
rolb
and
add
fidivs
add
mov
call
lea
je
bt
clc
sub
cmc
jmp
mov
lea
push
push
lea
call
pushf
call
test
add
mov
mov
pushf
lea
jmp
call
lea
jb
pusha
pushf
cmp
call
cmc
pushl
mov
movb
test
test
push
test
call
call
clc
add
push
pusha
pushl
lea
jne
jns
mov
pushfw
add
push
mov
clc
cmp
xor
cmp
push
clc
pushf
neg
pushf
stc
push
lea
jg
rol
cmc
clc
not
pushf
stc
cld
pushw
popfw
mov
pusha
call
pushf
pushf
movl
push
pusha
lea
jge
push
movl
pusha
push
lea
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
cmp
inc
inc
and
mov
add
jne
inc
and
xchg
lea
je
call
mov
pusha
clc
imul
stc
test
add
push
lea
jmp
jmp
lret
das
xchg
jbe
and
push
cld
xchg
imul
adc
in
cwtl
clc
adc
sub
sbb
mov
and
cli
mov
mov
cs
adc
mov
fdivl
lahf
shl
pop
push
xor
ret
pop
inc
adc
push
and
sbb
popf
dec
push
cld
mov
push
iret
jl
movsl
cmpsl
adc
data16
push
insb
pop
add
fildll
ret
jle
xchg
jl
lret
add
fdivl
xchg
jbe
hsubps
shrb
mov
mov
shll
outsl
fists
mov
pop
xchg
push
shlb
leave
or
popa
jmp
rorb
lds
mov
test
sbb
sub
jb
cmp
mov
dec
push
data16
jo
mov
mov
leave
pop
sbb
pop
insl
xchg
mov
jns
andb
mov
ret
xor
jne
xchg
mov
xchg
cmp
or
pop
pop
jmp
clc
neg
stc
bt
bt
stc
mov
pushf
stc
clc
stc
add
jmp
add
inc
gs
outsl
fs
gs
imul
add
sbb
add
xor
add
add
sbb
add
add
push
das
add
add
add
fs
jne
setns
bswap
pop
bswap
push
mov
push
push
lea
pop
mov
lea
bswap
jmp
rol
mov
pusha
stc
cmpb
pusha
lea
jne
cmc
sub
shl
mov
push
xor
add
sar
mov
cmc
test
pushf
pusha
jmp
adc
jle
imul
fsubl
movsl
cmp
js
mov
fidivrs
sub
push
xchg
push
sahf
hlt
sub
fdivp
rorl
shll
mov
loop
test
or
xorl
hlt
js
jl
scas
mov
call
shlb
das
js
pop
adc
pop
int
aaa
cmpsb
pop
pop
mov
loope
pop
jmp
out
cld
fistps
popf
lods
lret
pushf
dec
push
aam
cmpsl
inc
and
sub
hlt
inc
lods
adc
inc
icebp
iret
inc
ss
rolb
rcl
test
xor
mov
cmc
jmp
bound
xchg
xchg
jbe
sbb
mov
cmp
jl
jo
dec
pop
cmp
mov
js
cltd
add
mov
lahf
or
mov
ficomps
add
mov
sub
pop
pop
scas
loope
and
imul
popf
sub
adc
cmpsl
adc
daa
ss
mov
cmovo
cmp
mov
mov
jnp
ret
insb
ds
pop
mulb
pop
mov
mov
adc
arpl
scas
and
fstpt
scas
leave
sahf
push
sub
jae
ror
bsr
test
mov
and
btr
movsbl
btc
mov
dec
bts
mov
cmc
bt
bt
sub
push
mov
jmp
lea
jb
push
pusha
pushl
ret
movb
ror
movw
dec
pusha
test
not
jmp
pusha
call
push
jae
sub
in
leave
xchg
sbb
dec
jp
mov
lds
mov
arpl
fistps
adc
lods
cmpsb
and
icebp
or
int3
mov
movsb
push
int3
xor
mov
pop
lds
add
mov
mov
es
add
inc
sbb
mov
ret
mov
sarb
mov
ret
test
movsb
filds
jge
out
ret
add
test
add
out
icebp
mov
mov
pusha
not
pushl
not
pushf
stos
call
call
test
pusha
cmp
lea
jo
jae
pusha
clc
call
not
lahf
push
movzbw
lahf
not
lea
push
jmp
bt
not
pushf
pushw
popfw
call
and
test
mov
push
pushf
clc
bt
add
clc
clc
jmp
and
aam
hlt
ror
xchg
inc
fists
decb
or
or
pushf
mov
imul
push
inc
adc
add
std
pop
or
add
push
loope
cmp
xchg
xor
jmp
sub
fnstsw
adc
dec
rorb
gs
frstor
stos
outsl
push
inc
cmp
push
sarb
arpl
loope
shll
sub
popa
call
mov
xchg
jbe
int
in
ret
dec
int
add
fnstcw
stc
test
mov
mov
cmp
fsubrl
aas
dec
repnz
jns
aad
mov
cwtl
push
fidivs
sbb
adc
sarl
mov
jp
adc
pop
std
push
lock
add
popf
mov
not
jmp
push
sub
rolw
jne
insl
andb
iret
fs
push
dec
inc
aaa
int
push
test
ljmp
clc
or
or
std
jmp
cmp
fmuls
ret
pop
xchg
arpl
scas
call
lods
mov
shrl
and
movsbw
pusha
xor
mov
pushf
cmc
cmpb
call
sbb
loopne
push
bound
es
push
cmp
push
out
xor
lock
and
cli
inc
or
shl
iret
in
ficomps
pop
dec
push
in
push
mov
testl
xor
add
scas
test
cmp
lret
stc
cmp
pop
push
mov
arpl
push
lds
dec
pop
xor
sahf
mov
sub
dec
sarl
repnz
sbb
sub
repnz
out
popa
pushf
inc
push
mov
xor
cmp
jno
call
mov
jmp
lea
jne
ror
ror
clc
sbb
pop
pushf
sub
call
push
mov
sbbb
scas
and
sbb
out
fwait
adc
jmp
sub
call
lcall
push
push
jecxz
xor
addr16
das
fs
roll
adc
push
mov
arpl
cmp
adc
cmp
out
in
jne
cpuid
cmp
xor
push
es
jbe
xchg
jp
push
dec
jecxz
popf
dec
mov
xor
lahf
out
push
mov
out
pop
outsl
iret
mov
insb
aad
jb
pop
dec
jecxz
lds
sbb
jbe
push
or
jae
inc
dec
xor
add
lods
sbb
and
and
insb
in
or
sarb
push
cs
mov
lds
inc
mov
mov
mov
cmp
pop
mov
test
out
mov
addb
dec
lcall
daa
add
sub
pusha
sub
pusha
bt
call
call
pushf
mov
mov
movb
movb
push
pushl
ret
pushl
lea
jae
call
mov
fcmovnbe
jg
pop
ja
jmp
add
mov
insb
fwait
inc
test
dec
stc
pop
ds
xor
data16
rclb
mov
add
push
hlt
jbe
out
and
or
add
out
lods
push
sub
push
aas
pop
daa
xor
adc
fcmovu
scas
sbb
pop
push
push
mov
cmp
jmp
pusha
add
pushf
clc
pushf
mov
jmp
call
xchg
es
add
add
push
imul
push
lea
jmp
lea
jne
jbe
pushf
pusha
lea
call
pushf
pusha
lea
jmp
pop
bswap
movb
jmp
jno
sbb
adc
mov
cmc
call
imul
gs
xor
cs
insb
add
jbe
addr16
bound
cld
outsb
in
cmp
es
ret
clc
rolb
shll
addl
sbb
sub
jbe
inc
sbb
adcb
and
cmpsb
cmp
nop
jg
int3
xor
adc
mov
rorb
or
cmpsb
dec
cltd
push
mov
in
add
aam
outsb
fsubs
push
adc
mov
jmp
lea
and
test
pushl
sub
test
test
cmc
bt
cmp
jmp
push
pusha
jmp
shrl
mov
inc
sbb
push
mov
inc
rcr
outsb
pop
stos
cwtl
out
lahf
ss
ljmp
add
cmp
xor
enter
mov
mov
xchg
les
push
xchg
xchg
cmp
iret
cmpsl
hlt
stc
add
dec
outsl
arpl
inc
jb
add
test
push
cmp
call
add
repz
and
movsl
cmc
pop
adc
leave
mov
test
dec
inc
scas
push
xor
dec
adc
sub
cld
call
jle
fwait
lock
ljmp
imul
data16
jae
cmp
jns
les
xchg
xchg
jbe
lahf
sbb
loopne
xchg
inc
iret
and
aas
insb
adc
icebp
out
sub
je
rclb
sbb
decb
xor
and
sub
mov
das
mov
dec
add
or
shr
sbbl
sub
pop
in
nop
push
xor
cmpsl
push
jg
scas
es
imul
cmp
sub
stos
dec
pop
mov
xchg
ss
mov
or
popa
flds
stc
pop
and
in
repz
ljmp
cltd
filds
lea
jae
call
jmp
test
add
push
call
neg
sub
add
pusha
sar
neg
mov
pushf
pushf
cmc
test
pushf
mov
jmp
and
push
stc
cmc
add
pusha
movb
movb
mov
lea
jmp
adc
pushf
and
xlat
and
mov
loopne
je
push
xor
test
inc
mov
jae
iret
dec
mov
jecxz
bound
jle
in
roll
cmpb
xor
lods
lcall
iret
xor
mov
fs
je
bt
call
pusha
pushf
rol
pusha
movw
call
bswap
pop
pusha
pop
lea
movzbw
mov
movzbw
movsbw
xchg
lea
mov
not
movsbw
mov
pushf
push
pushl
ret
lea
lea
pushf
call
lea
je
push
call
mov
lea
ja
setg
inc
inc
call
push
lea
jae
call
stc
sub
jmp
pop
negb
enter
push
and
add
push
adc
mov
in
ljmp
icebp
xchg
into
ret
je
cmp
adc
rcl
lock
adc
jecxz
movsb
cmpsb
cmp
pop
cmp
mov
dec
xor
pushf
fwait
mov
int
jle
icebp
push
mov
push
adc
fsub
add
loope
and
sarb
insl
rcll
xorb
jbe
js
cli
imul
pusha
push
push
push
lea
jmp
push
std
pop
xchg
jbe
movsb
pop
fists
jns
push
ret
adc
imul
iret
xor
repz
inc
shl
cmp
cltd
mov
add
inc
and
loop
push
mul
lock
jg
push
jae
in
xor
aas
xchg
mov
fsubl
cmp
mov
adc
mov
sub
stc
stc
jmp
call
pushf
stos
pusha
pushl
pushf
lea
jmp
add
pushl
mov
pushf
lea
jmp
call
setge
mov
pusha
call
push
add
jmp
clc
test
pushl
push
call
mov
pushf
pusha
lea
jmp
pushf
call
lea
cmc
call
in
ret
xchg
jbe
sbb
jecxz
test
data16
imul
inc
cmp
inc
ret
jg
stos
nop
mov
add
mov
lock
fiaddl
adc
js
mov
cmp
dec
or
inc
adc
xor
or
mov
or
add
stc
jmp
iret
sub
pop
xchg
jbe
loope
negb
mov
stos
xchg
mov
xchg
subl
xchg
movsb
loopne
push
cmc
lock
mov
xor
mov
cld
add
cmp
cld
and
fwait
sti
out
mov
inc
pop
test
cmp
add
cli
mov
in
ljmp
das
fistps
jbe
test
daa
popf
jns
xor
or
icebp
jns
mov
xchg
dec
pop
pop
dec
inc
mov
or
add
mov
cli
lahf
lock
in
in
movlps
pushf
mov
jmp
out
dec
mov
ret
lcall
xchg
out
into
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
inc
ljmp
lods
mov
inc
and
mov
or
test
lcall
and
mov
add
test
in
cmp
add
call
movb
mov
inc
pusha
pushl
setnp
pushf
mov
lea
jle
pusha
lea
call
pushf
movw
pusha
adc
pushf
movb
lea
jae
pushf
lea
jne
push
jmp
lea
jae
call
pushf
lea
je
test
inc
dec
push
bsr
sub
not
bts
xor
shr
shr
bt
cmp
movsbw
cmc
mov
ror
cmp
or
add
inc
dec
bsf
add
stc
btc
rol
pusha
mov
test
bt
pusha
shr
stc
mov
cmp
pushf
jmp
cmp
pop
xchg
jbe
mov
fwait
lods
cmpsb
jge
sarl
imul
xchg
pop
sub
jmp
dec
cmpsb
popf
cmpsl
sub
fidivl
clc
mov
jl
jb
mov
push
xchg
mov
and
pmuludq
aad
sahf
mov
xor
pushl
test
lea
jb
pusha
pusha
lea
jne
push
mov
jmp
stc
neg
bt
movw
clc
rol
cld
call
imul
add
mov
pop
dec
addr16
adc
or
rclb
and
jb
pusha
nopl
mov
fnstenv
sbb
aas
hlt
pop
aam
adc
mov
mov
lret
out
sbb
scas
add
fidivl
mov
lds
mov
lods
mov
inc
or
lret
add
lret
xchg
mov
or
test
xor
lods
push
aas
andps
mov
nop
jb
cmp
add
stos
cmpsb
or
xor
jb
jge
cmpb
pushf
push
lea
jne
and
mov
cmc
stc
cmc
add
stc
bt
movzwl
pushf
bsf
pushf
mov
call
roll
std
pop
mov
xchg
popa
cs
pop
mov
sti
in
cld
jle
shlb
neg
adc
jle
mov
mov
pushf
aaa
sub
out
cwtl
cmp
jmp
addr16
cld
or
mov
dec
stc
nop
and
imul
jmp
test
mov
xor
repnz
xor
out
lret
xchg
adc
aam
stos
push
pop
pop
ljmp
dec
fs
add
repz
movsb
imul
test
jbe
push
adc
jmp
mov
addr16
dec
insl
pop
lcall
jl
add
and
rolb
push
outsb
add
inc
dec
movsl
cltd
std
sub
out
cmp
sbb
popf
fistps
push
mov
xchg
das
sub
pop
inc
scas
mov
pop
aam
nop
inc
cli
into
xor
mov
xchg
xor
outsl
and
aad
outsl
jl
test
iret
xor
cmc
push
adc
lods
or
ret
inc
jle
xchg
xor
bound
or
mov
mov
js
loop
push
aam
cltd
mov
lea
loope
or
dec
xor
cmpsl
cmp
sbb
mov
jecxz
daa
sbb
pop
push
nop
sub
push
pop
out
hlt
fdivl
pop
xchg
movsb
loopne
add
pushf
in
pop
cmpl
mov
and
pop
mov
aam
cmpl
xchg
mov
idivb
jg
and
xor
sbb
xor
xor
adc
lods
sub
mov
das
in
xor
addr16
fs
jge
pusha
pusha
lea
jne
pushf
cwtl
movzbl
movb
bswap
pop
movsbl
push
push
call
add
inc
js
je
jb
arpl
jae
shl
adc
jbe
adc
xor
mov
out
dec
mov
iret
add
sti
mov
sbbl
sbb
mov
roll
cmp
repnz
mov
jne
je
push
or
jns
cli
dec
sbb
arpl
push
lds
add
cmp
call
mov
scas
push
xchg
jbe
push
sbb
les
pop
mov
push
mov
mov
rcr
test
or
ljmp
lcall
adc
jge
loopne
jge
popa
mov
sub
mov
outsl
testb
outsb
hlt
push
ja
lcall
out
sbb
and
pop
enter
aam
fmul
pop
inc
in
mov
sbb
in
dec
xchg
xor
repnz
mov
ljmp
loopne
add
jmp
cmc
add
movb
movb
movb
lea
jmp
lea
call
bt
pushf
sub
pusha
call
clc
stc
repnz
pushf
pushf
jmp
lea
push
xchg
jbe
mov
in
in
mov
add
dec
push
ret
mov
mov
cld
pop
xchg
mov
enter
pop
sbb
dec
inc
xor
cmc
push
addb
xorl
xchg
inc
mov
outsl
test
fmuls
lea
pop
notl
gs
push
jecxz
loope
mov
lret
and
ret
push
sbb
mov
xchg
mov
outsb
mov
rclb
lret
call
or
xchg
cmp
movb
pushl
lea
jae
stc
cmp
jmp
lea
jae
clc
xor
call
pushl
xor
btc
mov
movzbw
bswap
rcr
mov
bts
bt
sar
mov
call
mov
lea
je
test
jmp
and
push
xchg
jbe
stos
in
je
mov
adc
aad
pop
mov
dec
ror
mov
ja
stos
or
mov
cs
mov
mov
jl
xor
scas
adc
or
or
sub
imul
ljmp
int
movsl
mov
xor
shrl
iret
in
out
add
pop
imul
or
cs
ja
mov
jo
data16
mov
jp
jnp
add
add
add
inc
add
inc
add
add
mov
add
add
add
add
xor
add
add
add
push
push
xchg
jbe
mov
mov
sbb
pusha
pushf
xchg
sbb
jbe
fcompl
loopne
xchg
ljmp
dec
js
jns
lcall
jecxz
lret
cmp
data16
in
sub
xor
imul
jecxz
nop
push
xchg
or
or
xchg
xor
loopne
repnz
mov
jle
movsb
inc
addr16
cwtl
xchg
and
aam
rcrb
inc
arpl
div
jecxz
in
mov
pop
cmpsb
paddd
leave
add
sbb
fmuls
jb
scas
sub
xor
imul
add
sbb
inc
add
adc
cmp
pusha
jmp
lea
jae
shrd
test
bsf
shl
mov
btr
stc
mov
push
push
mov
jmp
int
pop
push
xchg
jbe
xchg
add
pop
cmc
lret
cmpl
dec
movsb
sbb
arpl
sub
fmul
mov
jmp
std
xchg
aaa
sub
orl
jae
mov
rclb
inc
sbb
pop
ret
daa
and
mov
mov
pushf
mov
push
cmp
inc
outsb
bound
fnstenv
adc
mov
lea
adc
xchg
in
xchg
adcb
mov
cmp
repz
pop
ljmp
icebp
mov
pop
pop
out
lret
rorb
hlt
repz
mov
rclb
dec
outsl
gs
xor
es
sbb
sub
outsl
and
pop
xor
mov
jge
arpl
lea
adc
std
jg
fisubl
and
mov
sub
lea
insl
or
arpl
mov
pop
xor
aas
mov
cmp
std
aaa
adc
dec
aas
rcrb
mov
aas
out
xchg
lret
mov
xor
mov
popa
mov
adc
outsl
sub
add
or
mov
je
xchg
adcl
sbb
sbb
inc
imul
pop
add
push
ret
xlat
pushf
mov
cld
leave
dec
gs
std
mov
mov
aaa
lret
mov
jmp
push
push
jns
xor
popf
add
dec
sbb
mov
loopne
out
mov
addl
inc
stos
inc
pop
or
lock
jl
cmpsb
mov
scas
dec
jl
cmp
rcll
sub
sub
imul
push
outsl
sti
push
shrb
adc
jmp
fsubp
mov
bound
shrl
inc
hlt
or
adc
iret
and
pop
dec
inc
push
jle
cwtl
or
fcmovne
mov
inc
dec
lahf
lock
out
ds
pop
imul
adc
adc
mov
cmp
mov
hlt
lret
mov
cmc
cmp
pop
cltd
add
xchg
jbe
jb
sub
cli
stos
xor
aam
pop
loopne
inc
add
xlat
dec
pop
inc
xchg
flds
push
lret
mov
mov
jmp
ret
and
loopne
test
xchg
sbb
xor
mov
aas
shlb
adc
cmpsb
xor
aaa
insb
sar
xor
int3
dec
push
jecxz
jp
mov
xlat
int3
jge
mul
and
push
sbb
insl
jle
push
cmc
gs
mov
cmp
sbb
divb
pop
mov
sub
lea
jae
jmp
pusha
jg
push
xchg
jbe
notl
repnz
push
sub
pop
dec
arpl
sbb
dec
stc
dec
jns
das
loop
cmp
cmp
flds
sti
and
or
push
cld
xor
mov
adc
mov
popa
jns
repnz
shll
loope
pop
mov
sub
mov
stc
enter
pop
roll
jnp
jecxz
stc
jmp
lea
jne
shr
shrd
and
push
mov
pop
sub
rol
mov
pushf
sub
mov
pusha
cmc
pushl
popl
stc
cmp
pushf
push
lea
ja
mov
adc
pushf
setb
sub
movb
clc
call
and
test
add
pushf
pusha
push
push
lea
jmp
inc
adc
lea
pushl
sub
cmp
pushl
popl
push
cmc
call
pop
mov
pusha
pushf
pushf
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
sub
push
mov
pusha
test
pushl
popl
bt
pushl
pushf
movw
cmp
lea
je
ja
cmp
rcl
rcl
sub
dec
pusha
lea
add
shrd
mov
cmc
shl
mov
cmc
bt
repnz
call
jmp
cmp
jmp
neg
call
jne
mov
loop
adc
stc
dec
stc
lds
cmp
fwait
iret
aam
pop
push
dec
inc
dec
outsb
push
xchg
popf
and
sub
movsb
lds
fistps
xchg
lock
add
push
mov
mov
cmp
push
and
mov
fnstenv
ret
test
and
push
or
mov
mov
jb
ljmp
sbb
push
int
ret
mov
enter
cltd
lea
jnp
jp
cmp
les
ja
icebp
add
sub
jecxz
push
adc
sbb
cmp
pop
enter
inc
inc
xchg
jecxz
fstpl
xchg
movsb
rclb
es
incl
imul
mov
push
sub
repnz
push
out
daa
inc
sti
icebp
nop
xor
lret
test
shll
jo
jge
sbb
fsubs
and
cmp
jne
mov
dec
jge
inc
scas
in
add
repz
adc
nop
addb
movl
insl
sub
push
es
jl
les
cmpsl
cmp
lea
je
pushf
pusha
pushf
movb
lea
jmp
sahf
sub
dec
xchg
jbe
ljmp
inc
call
cmpsb
lds
and
sbb
pop
sbb
aaa
in
sbb
dec
jo
lock
sbb
icebp
inc
aam
sbbl
sbb
enter
dec
or
fidivl
mov
aaa
in
out
mov
push
pushf
pushf
pushl
ret
pusha
mov
pushf
push
pushf
push
pushl
ret
cld
xchg
pop
call
xor
push
and
sbb
inc
jg
mov
jnp
dec
cmp
stos
les
mov
sbb
pop
pop
jge
sub
mov
in
out
mov
xor
es
adc
out
and
inc
pushf
das
xor
lret
loope
or
jno
push
icebp
movw
pushl
pusha
movl
push
pushf
push
movl
mov
pushl
movl
pushf
lea
jmp
mov
pushf
pushl
pushl
ret
pushf
rol
pushl
pushl
test
call
pusha
pushf
lea
jne
pusha
pushf
pusha
stos
pushf
lea
jmp
pushl
jmp
jmp
movb
movl
movb
mov
pusha
pushl
ret
clc
pushf
movb
rol
call
call
call
stc
push
bt
cmp
pusha
pushf
pushl
lea
ja
call
push
movb
jmp
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
icebp
lea
jae
pop
push
lea
jmp
pusha
jmp
data16
fmuls
jbe
cmpsl
sbb
repz
aaa
test
clc
jbe
clc
dec
jg
cli
jne
out
cld
inc
push
mov
pop
jns
push
jb
rcrb
std
or
xchg
dec
lahf
mov
cwtl
inc
jbe
mov
lret
jmp
mov
repz
and
mov
xchg
sub
mov
lret
sbb
jecxz
ljmp
das
add
or
add
fldenv
pop
jns
mov
xchg
fadds
pop
fisubs
add
ds
sub
inc
shrl
cmp
and
cmp
fbstp
out
xor
inc
fstp
stos
push
ret
xor
jl
hlt
outsb
xor
or
pop
pop
xor
test
pop
mov
lods
es
gs
mov
and
xor
xchg
sbb
lcall
scas
push
popa
and
in
sub
rcrl
leave
bound
cs
orl
fs
bndstx
jns
mov
movsl
addl
iret
dec
cltd
enter
clc
push
cmp
lea
aas
leave
jmp
add
add
cld
cmc
adc
shlb
cmp
arpl
cmp
jne
pop
dec
pop
sti
adc
mov
iret
or
lods
jne
push
pop
cltd
xor
test
add
xchg
mov
mov
dec
roll
or
test
test
pop
rcrb
cltd
mov
push
cmp
ror
sbb
sub
fldl
mov
xor
push
rorl
adc
out
out
leave
sub
jo
pop
cwtl
scas
iret
and
cmp
stos
xor
jmp
fists
insl
outsb
imul
stos
push
stc
js
cmp
ret
adc
xchg
imul
mov
add
lods
pop
and
stos
cmp
dec
mov
paddusw
mov
pop
jb
cmp
lahf
jne
mov
fidivrl
out
cmp
data16
popa
sub
outsb
dec
test
cmp
pushf
sub
lods
es
imul
sbb
pop
insl
xchg
pop
jmp
push
loop
xor
pop
dec
lcall
and
lret
cwtl
fsts
out
dec
push
int
imul
xor
outsl
lea
stos
mov
and
or
xchg
mov
pop
xor
cmp
test
loopne
mov
adc
cmp
jle
push
jp
mov
movsb
rorb
jge
loope
adc
dec
loop
imul
mov
mov
add
outsl
fimull
mov
inc
pop
xchg
in
data16
xchg
pop
jp
sub
mov
pop
mov
xchg
push
jae
pop
pop
scas
jo
xor
cmp
idivb
shll
push
add
mov
out
imul
popa
insl
cmpsl
sbb
aaa
stos
xor
adc
push
shrb
aaa
cmp
add
aas
push
and
in
cli
mov
js
aam
xchg
push
xchg
insb
jecxz
cmp
stc
mov
fdivl
test
pop
mov
jle
and
or
pop
sbb
test
aad
insb
pop
dec
hlt
xlat
cmp
xchg
test
xchg
add
outsl
adc
mulb
jg
inc
cmp
pop
lock
into
dec
mov
xchg
xchg
adc
pop
sarl
das
cmp
push
xchg
fistl
mov
jg
add
inc
and
cmp
jne
gs
inc
add
scas
or
mov
les
or
sbb
cmp
cmp
fcmovnb
xlat
push
pop
lcall
fwait
iret
push
push
dec
pavgb
or
test
dec
test
fiadds
insl
cmpsl
xchg
adc
sub
lahf
arpl
out
cmpsb
testl
test
outsl
add
mov
jecxz
aam
in
pop
test
lea
push
sqrtps
bound
mov
push
xchg
stc
mov
decl
or
sbb
and
mov
inc
fistps
pop
inc
jno
mov
mov
fdivl
out
out
into
or
std
int3
int3
dec
jne
ret
sahf
and
ficomps
xorl
add
lcall
xchg
es
pop
or
push
faddl
ror
fistl
push
ret
adcl
sub
xorb
xchg
dec
or
lahf
mov
in
push
xor
xor
dec
and
movl
call
pushl
jmp
pushl
pushf
lea
ja
pusha
stc
pusha
imul
pushf
cmc
add
pushf
lea
jmp
call
mov
lds
jbe
mov
test
repz
out
jbe
fcoml
push
lret
mov
push
cmp
cmp
and
mov
xor
xchg
and
fmulp
pop
sub
inc
add
pop
mov
xlat
add
lret
xlat
push
sbb
cmp
cmp
cmp
mov
les
jp
sbb
mov
add
fs
jmp
dec
and
inc
xchg
jbe
mov
lret
inc
leave
in
iret
loope
add
int
mov
ja
in
roll
mov
lret
mov
push
sbb
ljmp
pusha
xor
lahf
iret
addr16
dec
js
cmp
rcll
push
mov
shr
inc
out
push
fldenv
dec
sbb
mov
inc
test
xchg
push
mov
iret
mov
shll
push
mov
lea
jmp
cmp
jmp
movw
lea
ja
call
dec
mov
inc
pushf
inc
pusha
setge
mov
call
loope
push
inc
xchg
jbe
mov
lcall
sahf
jae
fmuls
jg
loope
adc
cltd
outsb
pop
cmp
xchg
jne
sub
jno
xorl
jno
inc
lock
xor
xlat
in
cld
outsl
cli
pop
or
cmp
add
lock
pop
mov
test
xor
jb
mov
xchg
pushf
pop
inc
pop
sbb
in
call
in
sbb
fucomp
inc
xor
fucomi
sub
fistpl
push
aam
jb
lds
xchg
lea
iret
out
sbb
jne
fcoms
mov
adc
mull
filds
xchg
aam
sbb
aas
aad
mov
push
jle
call
stos
pop
dec
cs
lock
and
lret
aaa
int3
test
icebp
xchg
xchg
loopne
sbb
pop
add
push
in
out
add
mov
shll
adc
mov
push
test
aad
arpl
mov
adc
jae
daa
aam
xor
test
adc
lret
push
ret
imul
mov
inc
xchg
sbb
pop
or
cmp
cmpsb
mov
jmp
andb
mov
stos
in
scas
dec
and
and
fists
jl
push
jmp
xor
inc
lock
outsl
add
jae
lods
mov
inc
cmp
fcmovnb
pop
mov
jmp
cmp
movzbl
not
pusha
pusha
lea
movsbw
bswap
lahf
lahf
mov
push
pushf
lea
ja
pushf
pusha
lea
jb
cmc
cmpb
call
lea
jbe
rol
stc
cmc
cmc
jmp
mov
pushf
adc
lea
pushf
pushl
ret
call
inc
sub
rcr
setp
sar
xchg
inc
sar
rol
mov
push
mov
add
cmc
stc
push
bswap
mov
pushf
call
push
lea
jg
sub
clc
pusha
movb
cmp
call
pushf
push
lea
ja
mov
sub
add
cmp
add
dec
shl
mov
shr
mov
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
movsb
bswap
jmp
call
call
pushf
jmp
jmp
clc
xor
dec
dec
repnz
sub
jne
outsb
push
sbb
testb
sbb
push
sbb
dec
lahf
xor
int
mov
mov
sbb
in
lods
xchg
call
in
rcr
imul
ret
inc
shl
adc
dec
subb
add
pop
inc
mov
mov
and
test
jg
mov
aad
test
adc
mov
pop
nop
dec
leave
cmpsb
mov
test
inc
or
inc
xchg
jbe
lret
insb
jge
cmpl
inc
call
mov
lods
adc
push
repnz
gs
xchg
adc
adc
sub
jne
test
addr16
inc
xchg
jbe
call
xchg
mov
sbb
fwait
cmp
sbb
bound
or
mul
sbb
pop
ss
dec
icebp
nop
divl
or
and
cmp
jb
loope
push
cmp
in
lret
mov
ds
pop
out
xchg
jae
mov
lods
xchg
xchg
cwtl
aad
pop
gs
clc
inc
xchg
jbe
xchg
mov
js
stos
mov
loope
cltd
rcrl
mov
outsl
leave
and
lahf
dec
cld
and
imul
shlb
sbbb
or
adc
add
or
lahf
and
sahf
das
mov
and
mov
inc
into
test
in
pop
loope
mov
cmp
cmp
add
or
ljmp
out
jmp
in
sbb
and
xor
in
test
iret
dec
add
insb
or
shll
push
addb
test
dec
scas
sbb
push
mov
clc
or
iret
test
or
dec
inc
add
lods
xor
call
stos
mov
push
stc
lock
xlat
inc
adc
mov
stc
ror
or
xor
cmp
adc
sldt
call
add
inc
xchg
jbe
mov
cmp
xchg
lret
pop
pop
xchg
or
iret
adc
add
dec
inc
jg
sub
imull
in
xchg
cli
lock
add
cmp
sbb
add
push
adc
fsubs
push
cwtl
lcall
jl
call
push
pushl
mov
lea
jne
cwtl
aam
movsbw
sub
sar
and
mov
cmc
xor
add
inc
cmp
rol
inc
mov
pusha
cmp
push
test
pushf
pushf
lea
je
pushf
pusha
test
cmc
sub
pushf
jmp
jmp
bound
xchg
jbe
mov
aas
rcrb
test
pop
repz
arpl
xchg
repnz
imul
repnz
cmp
daa
pop
and
push
sti
push
mov
int
xchg
adc
cltd
enter
fsubr
lock
data16
dec
add
addr16
adc
lods
push
mov
test
push
fs
xor
pusha
jl
jbe
aas
les
ss
fmull
aaa
jb
inc
xor
loop
dec
ret
imul
jg
data16
mov
fdivl
pop
xchg
jge
sbb
call
add
dec
pop
jb
ret
pop
mov
out
cmp
xchg
jne
mov
mov
jl
jbe
add
lock
enter
ds
pop
mov
lcall
sbb
out
in
jl
sbb
adc
and
pop
loopne
addr16
xlat
sarl
test
iret
nop
push
jmp
jl
and
js
ds
or
jo
xor
jl
or
mov
cmp
pop
add
enter
or
xor
jne
push
xchg
adc
lock
jae
sub
cmp
and
fsubr
imul
jbe
outsl
shlb
dec
scas
inc
arpl
adc
sbb
sbb
xor
rorb
fdivr
scas
in
mov
push
imul
subb
add
xor
pop
das
int3
cmp
movsl
or
data16
xchg
dec
lods
sahf
cmc
xor
cmpb
jno
outsl
inc
mov
nop
dec
stc
jns
dec
xchg
adc
in
mov
inc
repnz
rcll
jno
fidivrl
lock
sub
sbb
jae
push
push
dec
stos
push
call
pusha
pushl
jmp
stos
and
jle
jbe
fstps
mov
stos
sbb
mov
inc
jg
imul
dec
cmp
decb
cmp
mov
sub
jecxz
sub
cmp
ds
mov
ja
jmp
mov
push
mov
sbb
mov
sub
ret
cmp
inc
jo
push
ds
out
jo
add
jl
enter
fcoml
repnz
pop
lods
movl
in
push
repnz
out
sbbl
cmpsl
dec
test
in
xchg
adc
out
shlb
cmpsl
pop
xchg
mov
in
push
lahf
sbb
dec
out
sbb
enter
xor
loopne
loope
ljmp
cmpsl
pop
test
cmp
inc
sub
mov
jno
in
sub
out
push
xor
mov
mov
jb
scas
es
es
out
fsubrl
mov
or
mov
push
out
adc
mov
and
fldcw
test
imul
sbb
mov
mov
sahf
adc
inc
mov
jne
imul
jg
jbe
cmc
add
xchg
es
jo
sbb
sbb
fistpll
std
xor
movsb
bound
cld
push
push
xcrypt-cfb
cmpsl
daa
cmp
movsb
xor
bound
mov
mov
push
repnz
pop
lock
ljmp
pop
push
jno
imul
mov
xchg
inc
and
loope
out
das
jno
push
pop
int3
aad
adcl
sub
fwait
pop
in
cmp
dec
xchg
xchg
add
and
movsl
and
fwait
js
jbe
mov
adc
sub
jbe
mov
lds
push
sbb
and
xor
inc
adc
stos
mov
jo
cmp
pop
sahf
test
cmc
push
data16
jecxz
ret
mov
cs
sbb
mov
xchg
or
jbe
loopne
sub
cmc
sarb
ds
sahf
add
popf
push
jae
xchg
or
pushf
cli
jmp
mov
int3
aad
jne
cwtl
inc
jb
arpl
sbb
add
jne
add
push
or
add
mov
or
addb
call
mov
lods
mov
cmp
cmp
cmc
xor
pushf
jmp
pushf
jmp
lea
call
call
seto
mov
lods
pusha
xor
jmp
call
push
movw
lea
call
push
call
movsb
push
cmpb
test
adc
xchg
mov
sub
in
xor
lahf
insb
jb
ss
pop
jae
adc
cmpsb
in
lods
adc
aas
xchg
je
icebp
insl
mov
fyl2x
iret
cmp
jmp
sti
xchg
jnp
mov
push
pop
aad
mov
add
cmp
stos
jmp
inc
and
fistpll
insb
and
pushf
movl
pusha
pushf
pushf
movl
lea
jmp
push
lea
ja
pusha
imul
mov
pusha
movl
add
pushf
pushf
pushl
lea
jmp
push
pusha
mov
pusha
push
pushl
lea
call
pushf
mov
push
lea
jmp
in
jns
xchg
jbe
call
push
dec
cmp
or
mov
repnz
gs
pusha
loopew
imul
shl
out
test
jne
adc
das
out
outsb
lcall
sbb
push
mov
add
add
ret
add
testl
jmp
xchg
pusha
pusha
mov
jmp
jmp
lea
je
test
pusha
add
jle
cmc
sub
test
push
cmp
pusha
mov
lea
ja
pusha
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cli
jb
mulb
cmp
pushl
ret
push
pusha
jmp
test
sub
pushf
cmp
stc
pushl
cmp
pusha
call
xor
call
call
clc
xchg
push
pushf
dec
xchg
mov
shld
shl
bsf
ror
push
shl
push
pushf
shld
bswap
mov
jmp
lea
rcl
mov
shl
mov
rcr
shl
add
pop
rcl
inc
shr
bt
adc
movsbw
pushf
mov
adc
and
bt
stc
add
call
jmp
xchg
jmp
movzwl
sub
shrd
jmp
rol
call
mov
pusha
movw
lea
call
pusha
pusha
mov
push
pushl
pusha
movb
lea
jmp
idivl
sti
cmp
inc
jbe
ss
scas
cmpsl
jae
stc
mov
jp
loope
andb
fst
fnstenv
int3
ret
mov
mov
mov
movsb
dec
into
shl
cmpsl
mov
jae
sahf
test
test
jno
mov
fwait
mov
filds
jno
mov
xor
das
mov
mov
inc
push
mov
rorl
mov
ljmp
cmp
mov
jb
mov
ss
arpl
cmp
mov
inc
sbb
mov
mov
mov
cwtl
cs
ds
fs
cmp
jo
cmpsb
subl
movsl
out
pop
mov
insl
sbb
sub
jo
hlt
inc
or
adc
mov
not
sub
and
jnp
mov
xchg
cld
xor
jns
lods
pushl
xchg
mov
xor
lret
sub
mov
and
mov
sarb
mov
mov
or
mov
pop
mov
or
cs
lods
std
pushf
stc
fdivl
cld
xor
mov
mov
pop
outsb
test
xchg
shrl
jns
pop
cmp
xchg
pop
pop
jle
xchg
xor
mov
mov
mov
xor
jle
lds
adc
adc
push
push
loope
jbe
xchg
mov
mov
cmp
mov
xchg
cmp
fdivs
loope
mov
xor
movsl
popf
in
aad
xlat
mov
stc
mov
xchg
stos
imull
fistpll
mov
cmp
cwtl
xor
mov
cmc
data16
and
movsb
add
dec
mov
pop
and
xor
adc
es
mov
scas
xor
adc
mov
cmp
aad
test
mov
mov
stc
mov
cmpb
jb
rorl
cmpsb
dec
cmp
jge
jb
add
dec
cmp
aam
fisubrs
cmpsb
dec
cmp
jmp
into
sub
mov
fwait
cmpsb
inc
cmp
leave
sub
jge
lea
mov
dec
je
lret
add
mov
jns
jge
jb
add
dec
cmp
ljmp
movl
lea
fwait
cmpsb
inc
cmp
daa
xor
adcb
mov
sub
mov
add
dec
cmp
aam
enter
jb
add
dec
cmp
aam
lret
mov
add
dec
mov
push
mov
cmpsb
xor
inc
mov
cmp
aam
into
sub
hlt
jb
add
dec
cmp
aam
lret
mov
add
dec
cmp
aam
into
sub
or
add
dec
cmp
aam
into
sub
scas
loopne
jp
inc
adc
std
sub
lret
mov
add
dec
cmp
aam
into
sub
mov
add
dec
cmp
aam
into
sub
hlt
jb
add
dec
cmp
aam
lret
or
add
scas
xchg
jae
enter
mov
out
pusha
fdivrl
negl
mov
mov
mov
mov
mov
mov
mov
mov
mov
ss
xor
push
loop
icebp
xchg
or
cmpsb
xchg
xchg
cmpsb
cmp
popf
mov
popf
mov
call
popf
mov
popf
mov
call
popf
mov
popf
mov
shll
cmp
mov
cmp
fnstsw
pop
jmp
ret
fdivrs
adc
and
add
mov
add
xchg
lock
cmpsl
scas
cmpsl
mov
ret
mov
sbbl
xchg
or
inc
int3
sbb
sbb
cmp
movsl
cmp
shlb
and
ss
xchg
movsl
adc
movsl
addr16
push
dec
mov
xchg
lahf
fidivrl
xchg
ds
sbb
lea
scas
movsb
sub
cmp
push
popf
sarb
stos
pop
movsl
loopne
jae
adc
mov
jns
mov
aas
mov
xchg
sub
into
cmp
mull
xchg
sahf
jne
test
and
and
popa
out
push
scas
mov
or
out
fidivs
xor
ss
mov
and
mov
gs
subl
mov
sbb
mov
sti
sbbl
mov
movsb
fwait
repnz
cmp
movsl
inc
xchg
add
movsl
dec
sub
iret
add
scas
movsl
popa
lret
sahf
xor
xchg
out
std
movsl
out
inc
or
movsb
movsl
jbe
xchg
test
stos
ja
scas
xchg
or
in
push
mov
adc
cmpsb
jle
mov
sbb
test
dec
pusha
movsl
push
mov
mov
movsl
dec
fstps
movsl
and
out
mov
xor
mov
xchg
ja
adc
xchg
jmp
inc
movsl
shrl
test
icebp
out
repz
cmpsb
lock
repz
out
add
sbb
movsb
cmpsb
jbe
pusha
cltd
lret
mov
and
mov
ja
loopne
hlt
testb
pop
lret
into
loope
jno
pop
jbe
mov
into
xor
data16
xor
mov
mov
mov
xor
mov
xchg
add
sahf
dec
mov
lea
mov
or
cmpl
inc
push
lds
stos
sub
add
scas
dec
das
shll
xchg
lds
lea
mov
sti
popf
das
mov
and
jecxz
jmp
js
mov
adc
push
mov
test
jne
and
and
and
lret
test
and
lods
sub
cmp
xchg
cmp
adc
cli
fucomp
xchg
rclb
int3
add
and
xchg
xchg
in
and
and
imul
mov
inc
mov
movsl
sarl
mov
jno
icebp
mov
push
repz
sahf
cmovl
jns
jno
sahf
shll
cmpsb
int
jge
out
xchg
cld
es
sub
mov
mov
cmp
iret
das
sub
es
scas
cmp
xchg
mov
aad
mov
cmpsb
mov
mov
and
xchg
mov
xor
jns
and
jge
mov
xor
add
leave
push
fldenv
scas
mov
push
sahf
mov
mov
mov
fisubl
mov
mov
stos
cmp
push
push
andnps
push
pop
adc
push
lds
push
cmpsb
and
scas
jb
mov
mov
pop
ja
sub
xchg
addl
sub
xor
pushf
or
push
mov
sub
xchg
xchg
pop
iret
fdivp
mov
xchg
fists
pushl
xchg
xor
cmp
cmc
cmpsl
jo
movsb
and
mov
ljmp
mov
mov
lea
mov
jl
cmp
xchg
movsl
leave
cld
xchg
cmp
inc
mov
mov
mov
mov
sti
sub
and
mov
jmp
cld
mov
xchg
cmp
jno
jge
lds
ret
out
test
lods
repz
xor
jns
jecxz
in
cmp
daa
jmp
xor
aam
aad
ljmp
shll
lret
icebp
cmpsl
stos
cmp
jmp
jno
jns
sarl
lea
adc
push
cmp
xchg
cmpsb
icebp
xchg
stc
loope
jmp
xchg
lds
lea
mov
popf
xchg
test
cmpsl
in
shr
xchg
cmp
adc
jb
out
lret
nop
out
xchg
mov
xchg
or
mov
cmp
leave
movsl
xor
adc
mov
cmp
sub
out
sub
lods
sbb
sbb
push
and
xor
stc
jmp
and
cmp
ret
icebp
outsl
mov
jmp
dec
adc
jno
mov
cs
and
push
icebp
lret
nop
fwait
and
xchg
ja
std
rcrl
call
stc
scas
and
pop
fsts
xor
lods
jp
cmpsl
stc
mov
xor
adc
xor
mov
mov
lcall
mov
xor
ja
sub
mov
push
sbb
mov
mov
mov
jmp
iret
loope
pop
mov
inc
dec
xchg
cmp
mov
scas
xor
mov
mov
cmp
jge
pop
mov
jae
xor
aaa
lods
cwtl
jmp
pop
sub
subl
lret
lret
mov
and
stos
fwait
popf
mov
or
jbe
add
push
sub
sub
movsl
hlt
adc
inc
int
add
pop
xchg
or
lret
xchg
or
lods
sbb
inc
je
push
xor
xchg
lahf
in
popa
cmp
jno
push
movsb
lcall
pushf
repz
popa
inc
sti
adc
adc
orl
push
adc
push
wbinvd
xchg
adc
sub
pop
ss
std
aas
sahf
incl
xor
mov
addl
pop
push
fstl
mov
mov
out
push
data16
int
rcrb
rcrl
cmp
femms
and
insl
mov
add
mov
jge
jecxz
and
stos
xchg
mov
inc
aaa
cmp
lahf
xchg
push
inc
add
or
add
add
pop
aad
es
dec
fwait
mov
scas
mov
cmpsb
sbb
add
xor
ret
test
cli
or
mov
mov
fimull
mov
push
mov
xchg
or
and
out
mov
xchg
xchg
daa
nop
xchg
es
jge
out
mov
shrb
cwtl
test
xchg
sub
mov
mov
cmpsb
jge
xchg
mov
int
es
test
mov
push
inc
xor
xchg
cld
nop
iret
icebp
lret
or
mov
or
xchg
xchg
cmp
dec
mov
mov
popa
aaa
fsubs
movsl
push
sub
mov
jne
push
mov
andl
out
mov
mov
xor
cli
lea
sbbb
dec
mov
test
cli
addl
mov
sti
lea
mov
pop
sbb
xchg
cwtl
inc
cmp
adc
mov
dec
sbb
mov
addl
jp
pop
hlt
mov
clc
fwait
push
jmp
jg
cmpsb
mov
mov
mulb
pop
pusha
mov
icebp
xchg
roll
xchg
in
add
popa
ljmp
mov
or
or
mov
jmp
imul
pop
out
scas
jge
je
sbb
or
lods
add
or
mov
and
xor
sbb
mov
xchg
aad
cmpsl
icebp
mov
popf
mov
cmp
lods
scas
push
test
cmpb
or
xchg
jge
shrl
in
stc
mov
or
pushl
sub
lret
adc
xchg
popf
mov
loope
nop
stos
es
xchg
fwait
test
stc
and
mov
mov
test
orl
add
xchg
mov
and
cmpsl
icebp
mov
into
sbb
lahf
mov
sahf
mov
pop
jl
sbb
xchg
push
nop
push
sub
lahf
mov
sbb
xchg
fnstsw
mov
daa
out
test
lahf
xor
lods
xchg
xchg
push
negl
scas
rol
jbe
cltd
add
xchg
lock
shrb
xchg
mov
imull
xorl
xchg
mov
cmpsl
push
adc
fstpl
mov
sahf
xor
cltd
scas
xchg
cmp
mov
stos
lods
sahf
inc
and
rcll
xchg
ficoms
ja
jnp
ss
mov
push
pop
shl
xor
fwait
loopne
rcrb
mov
in
testl
sahf
pop
mov
test
fwait
or
jecxz
ljmp
sub
sbb
mov
cmc
addr16
add
notl
mov
adc
inc
xchg
cmpsl
in
xor
pop
cwtl
mov
mov
data16
stos
mov
sbb
shlb
cltd
pop
sbb
xchg
pushf
and
negb
xchg
mov
aaa
pushf
and
in
cmpsl
cltd
mov
mov
rcrl
xchg
mov
pop
std
xor
mov
jb
lret
mov
nop
mov
mov
iret
jb
pop
mov
and
fs
mov
jns
orl
mov
lds
jbe
mov
pushf
iret
sub
jge
xor
aas
test
scas
dec
jb
lret
div
mov
scas
and
add
mov
sbb
test
in
mov
cmp
jle
pop
in
jl
push
sbb
mov
je
pop
jb
mov
jmp
add
add
xchg
mov
inc
ret
push
test
mov
cmp
test
adc
lods
xchg
xor
out
adc
mov
repz
cwtl
addr16
movsl
push
cld
mov
ds
enter
mov
sbb
push
sbb
shll
xchg
or
loope
aam
icebp
mov
cmpsl
jl
xchg
mov
mov
int3
fbld
stc
and
lea
fwait
out
cmp
in
fldenv
subl
aaa
adc
jbe
xor
hlt
mov
mov
movsb
popf
dec
mov
fwait
pop
mov
divb
jge
lea
loope
and
cmc
mov
mov
push
stos
xor
inc
ja
xor
lahf
icebp
repnz
adc
mov
mov
or
ss
mov
add
xchg
or
mov
subb
andl
push
loopne
xor
jmp
xchg
mov
or
jns
stos
cmp
sub
push
testl
mov
cs
xor
cltd
add
mov
lret
or
mov
mov
es
mov
scas
jnp
mov
mov
xchg
rep
scas
rcl
pop
adcb
cwtl
push
mov
mov
nop
dec
xor
test
mov
icebp
mov
sahf
inc
jmp
movsl
mov
sarl
rolb
mov
mov
je
cltd
xor
dec
rcrl
sub
movsl
and
lahf
mov
mov
stos
xchg
pop
and
daa
pushf
imul
mov
fs
mov
adc
mov
nop
cmp
loope
cmpsb
cmp
xor
lods
mov
cmp
rclb
test
sbb
das
cmp
mov
jne
aad
jb
sti
inc
test
iret
xor
cs
cmp
test
andl
push
ds
xchg
scas
test
lods
xchg
jne
scas
mov
xchg
pop
lahf
mov
push
mov
mov
xchg
xchg
les
xchg
xchg
push
lahf
add
imul
xchg
jb
orl
out
stos
cmp
adc
scas
push
fiadds
cld
mov
jno
mov
sahf
movl
rcrl
mov
test
inc
or
scas
inc
and
push
xchg
repz
and
xchg
xor
cmpl
push
test
nop
xor
out
js
lret
sub
mov
mov
cmpsl
mov
pushf
sbb
jmp
int3
loopne
loope
in
dec
mov
push
std
mov
mov
xchg
es
mov
mov
mov
inc
mov
nop
mov
movsb
out
popf
repnz
cmpl
not
rclb
enter
mov
leave
jmp
mov
std
fistl
mov
xchg
addl
mov
adc
pusha
xchg
jmp
mov
xchg
dec
lahf
jne
sarb
sbb
popf
sarl
scas
cmp
iret
xor
out
ficompl
movsb
mov
lods
xor
push
lods
xor
cmp
adc
shlb
mov
test
mov
mov
xchg
pushf
clc
pop
lods
subl
sub
and
cltd
mov
xor
jge
sub
mov
mov
clc
stos
mov
scas
cmp
fnstcw
push
mov
xchg
dec
sbb
jno
test
mov
lcall
insl
and
push
int3
subl
scas
mov
stos
outsl
xor
movsb
xchg
stos
mov
ret
dec
sub
cmp
sub
mov
add
fwait
xor
addb
xor
sbbl
daa
test
in
loope
arpl
fisttps
stc
xchg
dec
cmp
test
jge
mov
out
sub
add
pushf
and
cs
incl
outsb
ljmp
gs
jmp
push
popf
jmp
xchg
push
ja
aas
inc
cmp
lcall
xchg
mov
sbb
dec
inc
mov
sti
xorb
ret
push
xchg
gs
xchg
jge
in
jmp
xchg
mov
and
sub
and
lea
orb
mov
mov
jp
xchg
test
rorl
mov
lahf
cmpsl
movsl
xchg
scas
jge
adc
dec
adc
aaa
scas
cmp
popf
jecxz
mov
clc
pop
arpl
lods
mov
cli
lods
adc
mov
xchg
mov
vpsubb
sub
xchg
sub
dec
xor
xor
mov
mov
lea
xchg
xchg
xor
cmp
jbe
rorl
xor
mov
mov
mov
pop
cltd
mov
out
cmc
inc
pcmpgtw
arpl
lahf
xchg
divl
sbb
into
mov
and
sbb
fildl
shlb
cwtl
pop
scas
lods
repnz
xchg
and
and
movsb
add
dec
shl
cmp
loope
jle
xchg
and
push
mov
mov
daa
les
mov
sarl
xor
loopne
jb
shll
lea
ljmp
pop
mov
lods
fwait
lea
or
mov
mov
repz
cmpb
mov
and
mov
mov
cld
adc
shll
mov
xor
mov
xor
adc
sarl
mov
mov
push
pop
mov
jne
pop
mov
andl
cmpsb
mov
sub
cmp
or
shll
fwait
mov
mov
mov
mov
popf
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
xchg
mov
mov
mov
mov
jne
mov
mov
lret
xor
jnp
movsl
sub
cmpsl
xor
push
rclb
add
and
std
xchg
xchg
mov
jmp
xlat
mov
cltd
scas
mov
cmpsl
lods
mov
mov
cmp
test
xchg
mov
outsb
std
sbb
pushf
popl
jl
mov
adc
insl
mov
xor
cmp
mov
leave
imul
das
cmpsl
mov
lret
out
mov
cmp
xchg
shll
xchg
sub
mov
out
cmp
into
movsb
xchg
jbe
cmpsb
xor
cmp
mov
cmp
jns
jno
mov
movsl
pop
and
repz
fistpl
sub
je
push
or
mov
mov
ffreep
xlat
and
xor
icebp
popf
pusha
cld
push
andb
addr16
cmp
mov
mov
test
add
call
scas
lods
xchg
clc
repnz
mov
push
aas
repz
movsl
jo
xlat
xor
adc
idivl
scas
adc
ds
mov
jb
mov
idiv
pop
mov
addr16
es
pop
fsubrl
dec
push
cmp
sub
mov
cmp
popa
fsubs
jb
xor
pop
daa
mov
push
in
xchg
lar
cld
rclb
pop
dec
adc
and
and
mov
mov
mov
test
xchg
mov
sbb
pusha
sub
cmp
cmc
and
shll
movsl
mov
mov
xchg
add
dec
xchg
insl
ja
mov
push
test
sbb
sahf
adc
in
mov
mov
test
mov
mov
xor
cmpsl
popl
ss
mov
repz
mov
pop
fidivs
cmpsb
ss
dec
cmp
in
jb
cmpsl
mov
sahf
sbb
insb
xor
xchg
stos
sub
push
repz
cmc
cwtl
xor
mov
sarl
cltd
xchg
stc
out
shll
add
test
xor
jge
scas
shlb
ja
icebp
xchg
sub
arpl
xchg
mov
cmp
cmp
fnsave
mov
fdivl
mov
ss
out
inc
push
mov
cmc
sub
xor
outsl
xchg
cmpsl
dec
mov
shrl
mov
jae
dec
shl
add
xor
inc
mov
movsl
popf
icebp
mov
cmp
mov
mov
jl
lods
mov
pop
cmp
jns
sub
rcl
ljmp
inc
mov
sub
xchg
mov
data16
jb
imul
repz
mov
xor
movsbw
mov
push
cwtl
lea
pusha
pushf
movl
pushf
jmp
push
push
pushf
lea
jae
push
pusha
pushl
add
lea
jo
pusha
mov
pushf
pushf
lea
jmp
cmpb
ret
aad
mov
int
call
fnsave
leave
lea
xchg
jbe
mov
jae
lea
lds
mov
mov
shlb
jne
dec
mov
or
mov
mov
xchg
daa
jb
mov
cmc
push
xchg
test
imul
movsb
adc
mov
mov
stos
cmpsl
lods
mov
mov
bound
inc
fdivr
es
push
mov
and
imul
hlt
imulb
cmpsl
shlb
cs
mov
mov
push
xchg
cwtl
cmpb
inc
push
mov
cli
mov
dec
aad
mov
cmp
sar
inc
lods
push
shll
fnstenv
lock
push
inc
pop
pop
xchg
dec
clc
jl
sti
mov
faddl
push
inc
xlat
and
cmp
popf
xchg
sub
fyl2x
int3
inc
mov
lahf
inc
in
xorl
cmp
mov
push
loop
cmp
inc
xor
mov
mov
inc
sub
mov
scas
mov
jne
mov
roll
mov
sti
adc
xchg
xor
std
repz
adcl
in
pop
adc
movsl
cmp
mov
rorl
sub
rcll
xorl
lahf
cmpsl
mov
sub
mov
aad
rol
bound
push
and
test
jp
mov
xchg
inc
ret
cmc
mov
stc
push
mov
mov
mov
xor
leave
enter
ds
dec
popa
jge
fst
cmpsl
lret
cmc
lods
cmp
je
xchg
mov
repz
stos
popf
push
pop
push
xchg
cmp
shl
inc
mov
and
int
out
mov
test
call
cmc
mov
cli
sbbb
mov
lea
scas
ljmp
inc
adc
fistpll
aad
jb
xchg
mov
fistpl
xchg
fstl
lds
mov
bnd
cmpsb
sbb
scas
or
mov
dec
cli
rorl
jno
mov
jl
lea
cmpsb
pop
push
fstps
push
jp
add
xor
or
loop
sbb
cmp
sti
aaa
loope
xor
and
mov
sti
dec
ss
inc
insb
daa
pop
pusha
ljmp
ds
out
push
sub
cmp
cmp
inc
pop
pop
mov
or
dec
out
xorl
mov
cmpsl
roll
jno
daa
ficoms
jge
mov
inc
fdivrs
mov
orb
sti
mov
mov
icebp
mov
and
jns
push
dec
leave
lods
flds
sarb
pop
sahf
cmp
adc
icebp
loopne
xchg
mov
loop
mov
mov
aas
xor
in
test
xor
mov
sbb
dec
incl
dec
mov
testl
mov
xchg
mov
stos
jnp
cmp
cmp
loope
pop
insb
lods
dec
imul
jae
in
xor
shll
into
jl
push
sahf
cmp
outsb
mov
out
push
sti
scas
fdivl
xchg
inc
xor
cmp
pop
push
lret
and
decb
adc
stos
leave
jecxz
fldenv
and
sarl
adc
sti
repnz
jp
loopne
xchg
int
std
aad
jbe
cltd
jo
test
jecxz
aam
push
or
scas
icebp
pop
adc
movsb
fyl2xp1
cmp
adc
dec
mov
adc
cmpsb
sysenter
scas
dec
mov
sti
xchg
dec
out
mov
lods
add
mov
popf
pop
call
cmpsb
xchg
jge
mov
mov
insl
jno
xchg
inc
rcll
in
mov
cmp
mov
xchg
sub
or
xor
dec
cld
mov
mov
and
jbe
jns
fstps
xorl
pop
xchg
xor
shl
scas
add
pop
dec
mov
pop
xlat
test
sbb
xchg
ljmp
xchg
jno
xchg
sti
mov
outsb
ret
cmpsb
sub
adc
cmc
aad
loope
ljmp
sub
stc
enter
call
cwtl
xor
and
popa
dec
mov
jl
xchg
xor
fnstenv
push
sub
enter
mov
pop
cmc
lret
xor
test
movsb
inc
ss
leave
test
sub
mov
inc
dec
xor
mov
and
jbe
stc
int3
add
jno
mov
jns
xchg
and
cmpsb
xorb
bound
jns
and
fstpt
cs
mov
xor
cmp
sbb
pop
stos
ret
push
cmp
test
adc
mov
push
jb
addr16
push
inc
inc
insl
verr
mov
outsb
push
repnz
lock
popf
stos
lcall
movsl
xor
ffree
repnz
dec
mov
adc
lds
out
mov
dec
lahf
das
adc
mov
mov
xchg
outsl
sbb
ljmp
je
cltd
out
shlb
mov
xor
mov
mov
ja
push
std
enter
push
fisttpll
mov
movsl
test
call
jb
push
cmpl
dec
pop
jbe
push
ds
push
push
ss
xchg
pop
mov
xchg
mov
xor
mov
jmp
pop
sahf
cmp
jl
mov
mov
lds
test
mov
shl
sbb
cmpsl
mov
clc
sbb
mov
jns
fwait
jne
push
mov
inc
xchg
pop
test
leave
adcb
outsb
push
outsb
adc
mov
push
fsubrl
insl
sti
pop
add
test
scas
dec
sahf
lret
inc
mov
xor
inc
aas
and
lods
push
cmpsb
jns
xchg
sahf
cmp
jl
xchg
xchg
ds
inc
dec
cmc
and
jne
or
pop
ss
shll
lret
ret
ljmp
xlat
test
cs
adc
xor
ret
xchg
jp
adc
out
jp
enter
xchg
cmpsl
jmp
aad
mov
insb
pop
popa
xchg
mov
shll
push
inc
mov
cmp
stc
daa
jg
lcall
inc
push
loopne
divl
test
adc
pop
xor
dec
ljmp
jne
mov
xchg
popa
push
pop
xchg
or
int3
adc
sahf
mov
fisubs
lds
xor
ret
in
dec
test
je
sub
sti
insl
inc
mov
sbb
pop
push
mov
mov
insl
out
cmpl
repnz
jbe
fwait
lret
iret
lods
jno
sti
fimuls
fisttpll
adc
inc
out
out
hlt
adc
hlt
lods
cwtl
sti
cmpsl
push
ljmp
dec
ja
dec
scas
jmp
sbb
testl
mov
jno
pop
lahf
mov
mov
imul
icebp
xchg
mov
and
jno
std
adc
sarl
xchg
jb,pn
jne
int
scas
roll
les
jae
enter
das
and
jns
mov
cmp
adc
xchg
mov
sbb
bound
push
xchg
jns
mov
scas
and
sti
movsl
pusha
cmp
and
jne
imul
push
inc
pop
fs
sti
sarl
outsl
cltd
xor
mov
je
dec
lea
or
mov
and
xor
adc
fs
xchg
ljmp
xchg
inc
mov
push
pop
mov
inc
sti
push
hlt
movsb
hlt
jo
sub
xchg
hlt
cmp
cmp
sbb
pop
imul
xlat
shl
sbb
xchg
bound
stc
hlt
stos
sbb
adc
mov
icebp
push
stc
jo
sbbl
lcall
insb
test
mov
dec
add
xchg
fsubl
rcrl
adc
mov
adc
aaa
out
xchg
std
pop
mov
adc
mov
jo
pop
aam
inc
sub
dec
mov
inc
mov
xor
jne
lahf
xlat
insl
cmc
lds
xchg
loope
pushf
rcll
pop
test
sbb
mov
fldcw
mov
enter
enter
mov
fs
movsb
or
jle
sahf
popf
out
xchg
ret
sbb
xchg
jecxz
mov
lahf
bound
pop
xchg
popa
divl
ljmp
mov
ja
cmc
xor
leave
or
cmp
loop
jb
push
fiaddl
push
adc
shl
movsl
nop
repnz
test
or
fisubrs
inc
popf
mov
and
mov
jns
out
dec
int3
cmpsb
xchg
xor
adc
loope
faddp
rcl
mov
nop
add
inc
cmc
cld
jmp
fmulp
std
push
rcr
xchg
jp
orl
push
cwtl
nop
movsl
popf
mov
cmc
into
in
xlat
sub
mov
ss
inc
xchg
imul
sti
into
lock
outsl
cmp
inc
scas
or
std
dec
push
or
daa
push
gs
call
ds
mov
or
insl
inc
mov
jl
mov
sub
mov
cmp
lods
pop
ss
jae
in
xchg
adcl
sti
lahf
nop
mov
out
push
test
and
ja
push
loopne
fstl
xor
out
es
pop
dec
push
xor
pop
imul
adc
test
mov
jbe
leave
cmp
jb
outsb
lahf
fnsave
inc
xor
pop
js
mov
test
lahf
addr16
xor
loop
test
arpl
inc
ror
inc
scas
leave
cld
lods
ss
int
mov
add
push
xchg
xchg
ret
jge
dec
test
pop
rcrl
mov
push
ja
sahf
and
pushaw
or
fcomps
xor
nop
rorl
jb
icebp
les
lahf
dec
out
mov
or
push
enter
push
out
dec
movsb
fcomps
daa
nop
mov
lret
daa
dec
test
cs
test
imulb
mov
pop
mov
aaa
pop
cmp
fdivl
aas
data16
daa
aad
hlt
inc
mov
pushf
out
cmpsb
sbb
out
xor
inc
cmp
iret
and
sahf
movsl
in
xchg
mov
lret
fwait
xchg
xor
fidivrl
and
pop
mov
inc
lcall
jnp
xchg
jae
mov
repz
ljmp
push
dec
mov
dec
sbb
xchg
lret
inc
cmp
sti
and
cld
dec
xor
mov
push
test
lds
test
mov
pop
mov
out
mov
and
loop
mov
or
mov
xor
jne
inc
cmp
out
xlat
movsl
xchg
sbb
in
xchg
push
sbbl
test
in
cmpsb
negl
inc
aad
aaa
leave
bnd
and
idivb
cltd
cmpsb
stc
flds
aad
inc
dec
jbe
mov
adc
xchg
and
test
insl
pop
push
mov
dec
andl
mov
out
pop
pop
les
mov
out
dec
mov
pop
rol
test
add
shrb
add
fs
pusha
ds
icebp
add
pop
jne
test
mov
cmpl
or
aam
xor
adc
mov
ds
test
fdivl
mov
xchg
inc
push
out
fwait
rcrl
in
mov
xlat
dec
push
repnz
jb
cmc
shl
cmc
or
pop
mov
mov
std
ret
leave
sbb
mov
sbbl
xor
and
dec
out
orl
das
icebp
sti
test
addr16
pop
adc
daa
xchg
fnsave
shrl
fidivrs
cltd
sub
pushl
lock
test
jno
and
cmp
mov
mov
pop
mov
mov
pusha
sub
push
mov
xor
fcomps
xor
insl
jnp
bnd
jmp
dec
lcall
pop
movsl
dec
ret
or
mov
jle
popa
and
inc
jg
pop
cmp
into
xchg
into
clc
test
cmp
sbb
cmpsl
sbb
ss
out
int
add
xchg
fcomi
mov
testl
jnp
xlat
add
jnp
sub
movb
cmc
or
int
cmc
fildll
scas
mov
mov
push
std
mov
xchg
jbe
xchg
lock
or
mov
test
fidivrl
xor
adc
cli
adc
call
xchg
xchg
xor
sub
test
pop
das
xchg
movsb
cmp
call
clc
out
outsb
adc
popl
shll
mov
popf
sti
in
stos
rcll
mov
inc
cmpsb
leave
cmp
xor
jp
aad
mov
icebp
mov
movsl
out
int
popf
sbb
icebp
fdivr
adc
call
mov
inc
mov
jb
xchg
cmpsb
cmpsl
push
adc
xor
xorl
add
jp
dec
enter
aaa
dec
or
xchg
dec
mov
sub
mov
sub
jecxz
cmp
add
sbb
sahf
mov
inc
ret
xchg
xor
push
cmp
lds
jg
xchg
xchg
jb
xchg
pop
dec
or
fidivrs
xor
leave
movsl
inc
sub
lods
iret
inc
xchg
je
adc
out
fucomi
mov
sbb
and
imul
dec
into
and
dec
ds
aaa
aam
adc
ret
cli
lods
rcrl
rcrl
testl
sti
test
and
clc
jle
fisubs
xor
xor
mov
cpuid
xchg
leave
jmp
aas
rcrl
push
xor
pop
rcrl
rcl
popf
inc
hlt
mov
mov
stos
and
mov
mov
gs
fwait
dec
cmc
lods
aaa
mov
sbb
sbb
inc
ret
fisubs
out
and
mov
leave
mov
negl
loopne
push
fwait
jecxz
cmpsl
jno
jnp
out
roll
inc
pop
cmp
std
or
fwait
jb
iret
mov
sbb
sahf
stos
ret
out
orb
jmp
iret
jo
add
push
mov
adc
jp
dec
add
call
xchg
mov
sbb
neg
pop
dec
jbe
inc
sub
pop
cmp
push
xchg
pop
popf
sti
inc
shll
push
in
mov
add
test
sub
cmp
outsb
pushf
repnz
dec
inc
xor
xchg
mov
xchg
dec
cmp
lods
fstpt
mov
in
inc
mov
pop
mov
jo
adcl
out
jmp
lock
xchg
mov
andl
xchg
orb
cmp
sbb
pop
jne
inc
jno
test
jge
ret
cmpsl
scas
adcb
bound
dec
xchg
adc
xchg
jecxz
sub
cwtl
cmpsb
xor
rclb
dec
pop
pusha
mov
faddp
jo
lcall
mov
pop
pop
lods
adc
jne
test
lds
mov
mov
xchg
mov
jmp
dec
xor
sar
cltd
cltd
xor
nop
xor
rcr
outsb
push
xchg
enter
cmp
sar
pop
pop
add
or
mov
push
mov
mov
mov
lds
jl
ja
icebp
xor
xor
adc
in
dec
cmp
and
lods
ja
jmp
neg
cmp
sarb
stc
out
xor
jecxz
icebp
xchg
lret
cmp
jbe
std
add
cmc
test
lret
adc
jg
loope
jno
stc
push
jg
popa
cli
push
popf
jno
lods
push
les
int
mov
rorl
divl
jl
dec
in
cmp
cwtl
mov
or
in
mov
inc
mov
mov
mov
test
aad
mov
pop
or
xchg
xor
aam
gs
addr16
xchg
shl
cltd
les
iret
mov
in
imul
leave
ds
enter
jnp
stc
inc
stc
push
jp
jmp
cld
inc
add
sbb
pushf
fiadds
xchg
cltd
inc
sahf
mov
inc
pop
int3
adc
mov
je
cli
xchg
add
sahf
clc
dec
mov
ds
outsb
clc
adc
fwait
dec
sub
fnstenv
lods
pop
stc
and
test
mov
fstpl
push
ret
push
pop
scas
and
aaa
mov
sub
add
mov
and
xor
shl
xlat
in
and
pop
out
jno
adcl
orl
lods
add
out
dec
push
sub
mov
dec
cwtl
popa
xchg
mov
xlat
jns
scas
roll
sub
lret
sbbl
sbb
cwtl
cmp
push
inc
mov
add
xchg
movsl
cmc
cltd
movsl
sub
scas
inc
xchg
stc
sub
out
mov
adc
sbb
in
pop
lret
mov
mov
xchg
xchg
ljmp
add
add
int3
cltd
subl
xchg
mov
adc
xchg
sbb
sbb
lea
mov
int3
ljmp
rolb
call
mov
xlat
cmp
aaa
repz
jmp
out
mov
adc
cmp
mov
mov
mul
ds
cwtl
xchg
cltd
sahf
mov
jmp
xchg
mov
mov
push
fwait
repz
mov
pop
sbb
add
popf
xchg
cmp
pop
mov
adc
adcb
lods
mov
mov
mov
adc
xchg
fnstsw
xlat
repz
sahf
int
andl
fxch
inc
mov
cltd
into
cli
sub
cmpsb
mov
pusha
scas
cmp
repz
mov
xchg
lds
outsb
jecxz
mov
mov
sti
test
mov
lahf
xchg
xlat
repnz
adc
orl
xor
int
mov
mov
out
cli
shrl
cmpsl
xchg
mov
rol
xchg
arpl
fwait
mov
mov
popf
test
cmp
add
std
xchg
xchg
sub
lods
sbb
mov
gs
lret
adc
push
jno
dec
pop
stc
and
stc
xor
sti
xorl
jb
mov
cmp
out
inc
pusha
cltd
je
push
gs
add
push
cmp
inc
dec
sti
jecxz
mov
jne
dec
sbb
xlat
cmpsb
addr16
jecxz
sub
rcll
and
lret
out
jnp
or
cmc
outsb
lock
mov
sub
in
cmp
andb
xorb
jae
sbb
and
rclb
pop
dec
and
cmp
stc
push
jae
test
mov
leave
cld
add
or
frstor
pop
push
sti
mov
jae
mov
lods
xor
ror
or
adc
aaa
fisubl
dec
pop
xchg
pop
xchg
std
push
sub
mov
adc
lcall
mov
popa
sbbl
jmp
adcb
les
ljmp
push
xchg
inc
cmp
xchg
push
mov
push
push
adc
into
iret
sub
mov
pop
mov
dec
aad
and
mov
pop
cld
sbb
movsl
or
cmp
movsl
inc
dec
mov
aad
inc
and
iret
xor
mov
mov
xor
jge
loope
rcrl
mov
cmp
cmp
mov
inc
cmp
mov
dec
lods
popf
int
fisttpll
jp
repnz
mov
aad
ss
iret
xor
sub
and
mov
xchg
xor
cmpsl
and
out
dec
jno
inc
mov
out
or
mov
popf
pop
ja
mov
xchg
and
xchg
xchg
inc
lods
add
or
mov
fisubrs
cmc
xor
stos
rcll
xchg
roll
pop
test
repz
push
ffreep
jecxz
xchg
inc
cmpsl
insb
cmc
cmp
ffree
fidivs
mov
aaa
ss
cmc
pop
std
stc
inc
push
fimuls
dec
movsl
or
mov
aad
shlb
rcrb
outsl
enter
push
and
sar
les
jbe
int3
in
jmp
mov
aad
mov
cmp
pop
loope
dec
fisubrl
mov
mov
les
cwtl
sti
stc
loope
imul
sub
pop
leave
subl
pop
fs
out
mov
add
or
xchg
pop
gs
sar
adc
adc
dec
dec
lock
shll
adcl
mov
cmp
pop
test
mov
popa
icebp
int
lods
sbb
jp
loopne
inc
add
xor
push
lcall
mov
mov
xchg
or
jle
movsl
adc
outsb
icebp
scas
cmp
xlat
mov
imul
xor
sub
lahf
cmc
inc
adc
xor
push
jno
jns
xchg
inc
cwtl
daa
xchg
dec
push
pop
mov
adc
out
mov
xchg
icebp
ret
sub
cwtl
dec
mov
jae
rol
xor
mov
sub
adc
sub
int3
das
sub
scas
xor
ljmp
scas
insb
dec
cld
xor
clc
mov
outsb
mov
cmpl
pop
sub
push
lahf
push
leave
mov
dec
movl
imul
push
pop
repnz
adc
jae
adc
in
out
push
cmc
into
movsl
xchg
repnz
icebp
aad
andb
mov
or
decb
and
into
mov
imul
or
movsl
push
dec
outsl
aaa
adc
xchg
sar
push
mov
mov
and
push
imul
arpl
inc
xor
add
stc
clc
mov
inc
add
iret
sbb
jb
cmp
adc
fld
icebp
xchg
push
andb
inc
mov
shlb
push
out
add
pusha
push
movsl
xchg
es
loopne
gs
xor
aad
scas
push
pop
hlt
cmp
mov
mov
and
sub
cmp
xor
iret
jl
scas
das
add
test
ja
lret
xchg
scas
leave
mov
mov
adc
dec
jge
push
movsl
and
test
rolb
xor
out
vfrczss
jl
adc
xlat
and
mov
mov
inc
adc
and
pop
popf
ret
xor
sub
and
bswap
das
xrelease
jle
dec
dec
gs
rcll
jbe
iret
int
dec
dec
add
lret
sub
ret
dec
xor
sbb
das
mov
mov
divb
dec
xchg
xorl
mov
and
adc
scas
adc
mov
push
jecxz
mov
xchg
xor
inc
xor
cmp
push
enter
fldl
xchg
cmpsl
dec
cmp
jg
lea
xor
push
sarb
mov
fcomp
xchg
pop
popf
leave
gs
lret
jae
nop
test
mov
out
push
lahf
lea
dec
mov
ret
cmp
mov
out
dec
sub
bound
sub
xorb
stos
loop
mov
pop
out
scas
mov
stos
push
cmc
cmp
xlat
cmc
lret
cmp
roll
ss
test
jns
movsl
push
cmp
xchg
ss
cmpsl
lods
inc
mov
jnp
int3
clc
mov
aam
mov
popf
stc
xor
movsl
sub
or
stc
jno
pop
jno
dec
sti
ljmp
inc
xchg
cmpsb
push
les
add
or
jb
xchg
xor
das
jle
pop
or
mov
mov
daa
test
test
enter
xlat
test
aas
inc
jno
cwtl
and
xchg
sbb
notb
loop
sahf
addr16
mov
pop
and
pop
shrl
fstl
ds
mov
inc
xchg
jmp
jno
orb
and
adc
test
andl
xchg
scas
repnz
ret
loopne
repnz
xchg
lahf
lahf
sar
ret
loope
xchg
lret
andl
cltd
pop
jno
adc
mov
adc
mov
mov
and
inc
cmp
mov
mov
mov
xchg
xchg
sbb
mov
fisubs
jge
mov
adc
pop
and
adc
popa
push
cwtl
sahf
push
and
stos
cmp
sbb
and
mov
fdivs
pushf
aaa
in
jne
lret
xchg
test
xor
sarb
jg
add
push
xchg
jbe
mov
push
in
xchg
addr16
icebp
inc
dec
mov
test
addr16
mov
sahf
enter
push
std
sahf
stc
jae
aaa
dec
cmp
jl
cmovne
xchg
lret
mov
push
inc
fcmovbe
enter
jns
inc
mov
ja
xor
sar
mov
xchg
test
xchg
mov
push
nop
call
subb
jae
sbb
dec
mov
adc
lods
arpl
in
aad
stc
and
in
xor
dec
arpl
popf
sub
imul
aaa
in
imul
int3
sub
mov
jo
dec
subl
negl
mov
sbb
aaa
mov
stos
xor
mov
sbb
movsl
lahf
movsb
cmc
dec
fs
lret
imul
fldl
popa
mov
sub
pop
rcrb
sti
mov
cmp
cltd
sbb
les
dec
sub
test
and
cmpsl
rcrb
scas
aaa
nop
inc
xor
pop
push
inc
or
and
mov
popa
push
fcmovbe
js
pushf
clc
loope
icebp
sti
xchg
pop
mov
lahf
xchg
sub
test
cmc
cmp
add
stos
pop
nop
stc
fs
xor
test
lcall
lds
dec
cmc
sub
mov
xchg
inc
movsl
imulb
enter
test
aas
divl
sub
iret
mov
sti
dec
push
rolb
or
mov
push
dec
popf
fists
sub
cmp
jo
aas
xchg
out
mov
mov
fs
test
movsb
xchg
fiaddl
add
andb
mov
fdivrl
subb
pop
jae
xchg
cmc
pop
test
loopne
test
xchg
jae
jnp
js
hlt
cmp
jno
fsubp
cmp
pop
cmpb
push
xor
lret
aad
pop
div
jae
dec
ss
ret
inc
insl
ss
leave
rcrb
jno
cmc
pop
enter
in
jp
cli
shl
loop
test
inc
fwait
add
imul
fadds
mov
orb
xor
test
xorl
and
xor
fmulp
js
hlt
sti
cld
mov
lret
or
pop
mov
and
sub
adc
pop
adc
add
mull
pop
mov
outsb
xchg
out
add
dec
xchg
ss
jmp
xchg
xor
sarl
mov
mov
lods
ljmp
movsl
shrl
ds
sbb
push
xchg
cmp
test
stos
xchg
mov
mov
test
mov
sub
orl
pop
orl
xor
push
cli
xlat
add
xchg
mov
scas
push
inc
stos
mov
xor
xor
mov
sahf
setb
inc
jg
aad
mov
movsb
subl
mov
mov
enter
or
jl
lcall
xchg
lcall
push
clc
mov
lret
xor
fdivs
ljmp
jp
mov
gs
mov
dec
sahf
xlat
inc
test
inc
call
push
mov
stos
rolb
mov
push
mov
test
in
jo
cld
imul
mov
jmp
dec
lret
shrl
das
leave
jmp
jbe
fisubs
add
out
lret
jb
jbe
mov
mov
jge
cmc
scas
dec
mov
loop
dec
addr16
out
lock
jle
fnstenv
mov
into
jne
xor
lret
sbb
loopne
xchg
xor
or
jo
lret
enter
aas
xor
or
mov
out
dec
mov
dec
adc
mov
test
shlb
scas
mov
sub
push
mov
ret
adc
pusha
ss
gs
mov
test
sbb
mov
cli
into
mov
adc
pop
mov
fmulp
cltd
mov
lret
mov
mov
lret
in
loope
shrb
mov
adc
mov
mov
mov
outsb
enter
mov
mov
mov
dec
cmp
jo
sub
std
push
mov
lea
mov
mov
jae
pushf
test
imul
daa
dec
mov
mov
cmc
bound
jns
stc
subl
stc
add
stos
aad
rcrl
test
in
jb
sub
rcll
andl
shld
jmp
movsl
shlb
push
xchg
rorl
mov
movsb
xor
cmc
insl
dec
das
pop
inc
test
insl
sub
push
cld
xor
aas
imul
pop
or
sbb
repz
mov
sub
xchg
mov
xchg
jecxz
push
loope
mov
orl
mov
adc
xchg
mov
mov
jle
mov
into
testb
mov
mov
xor
popf
mov
dec
xchg
in
mov
xor
fadds
roll
or
int3
mov
sub
mov
cmp
sbb
cmp
xor
and
shll
adc
pop
mov
mov
shlb
cmovne
jbe
pop
add
pop
pusha
ds
push
mov
or
xchg
cmp
adc
mov
popf
out
jl
mov
fdivrs
sbb
mov
std
sti
int
sbb
push
iret
gs
imul
arpl
fisubs
mov
jno
mov
lahf
cmpsl
jno
sub
push
incb
push
lret
cmc
xchg
and
cmp
sub
pushw
mov
adc
mov
jmp
rorl
mov
xlat
mov
mov
loop
outsl
ss
sub
inc
jmp
xor
fsubs
scas
int
lcall
mov
cmpsb
insb
cli
aad
seta
inc
sub
shlb
sbb
xor
rcll
lret
fucom
mov
mov
sub
mov
cmp
daa
mov
xlat
sub
lods
mov
in
testb
lods
ror
xor
mov
xor
inc
ret
and
fwait
and
imul
outsb
cld
sbb
xlat
and
hlt
cmp
mov
aam
jne
fildl
popf
mov
ds
mov
push
ljmp
mov
xchg
mov
mov
in
mov
mov
sbb
or
mov
mov
push
xor
cmc
mov
insl
push
mov
daa
scas
pop
jno
mov
lock
xor
into
xchg
xor
cmpsl
aaa
iret
mov
jp
and
cld
xchg
out
in
loope
mov
push
pslld
adc
mov
xor
mov
mov
shll
or
outsb
cmpsl
cmc
adc
mov
and
repnz
mov
sub
stos
fs
loop
xor
and
mov
mov
lret
push
mov
mov
and
imul
pop
xchg
hlt
sbbb
adc
adc
sub
ljmp
xchg
cwtl
fwait
mov
es
ss
pop
dec
push
rclb
int
scas
mov
mov
xor
aam
js,pt
icebp
xorl
and
pusha
jnp
inc
repnz
seto
les
xchg
js
pop
cmp
cmpsb
mov
pushf
mov
insl
les
xor
inc
in
stos
movsb
sbb
stc
std
mov
xor
xor
sbb
aad
sbbl
or
fistl
adc
adc
sbb
fcomps
mov
popa
je
inc
fldenv
xchg
pushf
pop
dec
jo
push
fisubs
push
mov
inc
pop
mov
xor
aas
jno
lods
sub
push
fcompl
pop
sub
popa
mov
test
mov
cltd
test
jbe
out
push
sub
mov
subl
stos
das
mov
addb
lods
mov
fs
test
cmpsl
xchg
cmp
or
jmp
sub
jo
xchg
xchg
xor
ret
sub
bound
ja
push
jmp
or
ds
sub
ficoml
mov
push
sub
mov
xchg
mov
mov
addr16
insb
jns
pop
xor
mov
dec
in
sub
ss
sub
fld
fmuls
loop
mov
xorb
mov
pop
mov
stc
xchg
ja
mov
call
dec
sbb
aad
adc
xor
xlat
add
xchg
push
int
in
lea
cmp
cmpsb
mov
out
xchg
movsl
test
xor
mov
daa
iret
pop
or
pushl
sub
or
jmp
divb
shrb
mov
sub
aam
mov
insb
xchg
movsl
sahf
sbb
cmc
lcall
fcomi
out
jns
cmpsl
mov
mov
mov
mov
loop
mov
popa
mov
movsl
xchg
inc
sub
and
sub
loope
mov
sbb
cs
mov
mull
mov
inc
xor
push
add
into
push
movsl
xchg
stc
aaa
stos
cmp
xchg
jge
adc
test
inc
adc
out
adcb
cmp
jne
ficoml
aad
add
pop
test
imul
notl
fidivrl
into
jle
mov
ljmp
inc
sub
cmp
jle
aas
movsl
jbe
clc
out
rorb
mov
push
cmpb
mov
jb
sub
lock
arpl
mov
addr16
int3
jp
xor
lods
push
pop
pop
pusha
xchg
xor
imul
lds
adc
insb
sti
or
push
rclb
testl
dec
cltd
dec
sbb
iret
int
or
decb
iret
je
mov
aad
and
push
cmp
mov
cmp
das
shlb
sbb
pop
or
jmp
cmpsl
xor
test
fsubs
test
idivl
xchg
lret
xchg
mov
ss
nop
mov
mov
ret
jmp
stos
lcall
xchg
shl
shrl
inc
xchg
test
lahf
xor
jo
or
xchg
jae
rolb
loopne
mov
call
sub
add
fwait
movsl
push
xchg
cmp
cmpsb
pop
aaa
sti
xor
mov
dec
pop
cmpsl
roll
jnp
test
pop
out
lcall
jne
subl
pop
ss
in
pop
enter
enter
add
xchg
cmc
into
add
out
xor
clc
or
dec
jo
orl
aaa
lret
movsl
js
xor
dec
into
sub
sub
test
mov
mov
mov
call
lcall
cmp
pop
sarl
rolb
lahf
dec
jb
pop
cwtl
cmpb
and
sbb
aaa
push
div
push
adc
mov
push
in
jbe,pn
jno
movl
and
stos
idivb
mov
and
clc
adc
mov
lds
shrl
cmc
mov
push
sub
mov
mov
xlat
js
fdivs
mov
popa
jae
mov
pushf
fisttpll
sbb
push
cltd
mov
stos
jne
sbb
decb
in
icebp
cmp
mov
pop
clc
mov
add
test
lock
sub
xor
pop
xchg
int3
adc
or
xchg
jae
sarb
pop
xor
insb
inc
fwait
cmc
std
imul
into
movsb
cmp
pop
cmp
pop
jns
lds
movl
hlt
dec
sub
inc
cmp
in
jb
lea
adc
mov
adc
lds
in
xchg
jno
mov
arpl
insl
cmc
pop
dec
jo
sub
jl
and
lret
push
cld
ret
fisttpll
pushl
mov
imul
out
mov
out
rcr
or
cltd
or
or
sub
outsb
movsb
aad
dec
dec
push
iret
xor
clc
fdivp
mov
adc
xchg
jge
shll
xchg
mov
add
cmp
xchg
ret
adc
mov
fisttpl
mov
mov
pop
xchg
mov
ret
stos
les
mov
test
repnz
int
xchg
adc
or
shll
ds
jmp
cs
and
push
in
lods
mov
scas
inc
mov
aaa
pusha
out
xor
mov
int
popa
mov
movsl
popf
add
and
mov
cmpsl
movsl
cmp
add
push
mov
xlat
pusha
jmp
mov
or
mov
cmp
mov
cmp
jle
fcompl
xlat
das
into
mov
ljmp
mov
imull
xchg
mov
or
dec
mov
fsub
adc
mov
and
ret
mov
or
sub
push
mov
out
test
xor
fwait
mov
add
sarb
sbb
gs
cmp
sub
xor
les
mov
inc
dec
ret
sbb
sti
xor
repnz
inc
sub
aad
dec
out
mov
cmp
jno
es
and
cmpsl
or
mov
pop
inc
xlat
out
aam
stc
ss
into
test
pop
clc
shlb
int3
and
mov
xchg
jle
out
push
or
mov
sub
jmp
in
outsl
jmp
push
mov
mov
mov
xchg
jno
lahf
sbb
mov
out
fsubs
mov
mov
xor
push
lods
inc
ss
push
add
ja
sub
xor
imul
xor
dec
xor
inc
cmc
out
mov
idivl
addr16
movsb
jbe
outsb
cmc
aam
adc
stos
and
pop
ja
clc
xchg
test
mov
dec
jnp
mov
jp
xor
push
adc
and
mov
xchg
pop
xchg
fwait
mov
adc
cli
mov
xlat
xchg
xchg
mov
push
inc
shlb
data16
test
jno
xchg
mov
add
adc
adc
xor
loop
int3
jbe
and
jle
lea
xchg
mov
aas
mov
push
mov
fiadds
inc
mov
dec
pusha
xchg
mov
rorb
xchg
adcl
cs
xor
mov
push
pop
ljmp
mov
stc
nop
stos
daa
sahf
and
mov
mov
xchg
xchg
mov
ret
and
push
and
push
aad
scas
je
rolb
mov
pop
popf
xchg
mov
cmpsl
pushf
adc
mov
ljmp
mov
push
push
sbbl
xchg
inc
dec
mov
sbb
push
xchg
mov
xor
sub
ffreep
lcall
cmp
push
adc
stos
and
daa
int
hlt
mov
lds
cli
pop
adc
or
or
xchg
dec
mov
ret
icebp
movsb
xor
jno
cld
das
jg
adc
leave
js
mov
pushf
jno
jge
pop
sub
sub
mov
lcall
mov
cmp
inc
sub
jns
in
jp
mov
adc
lret
xor
xor
outsl
popf
fwait
mov
mov
repnz
ret
pop
jo
rcrb
sbb
cmc
sahf
addl
out
add
push
mov
push
std
inc
xchg
pusha
mov
movsl
lds
std
cmp
cmp
or
incl
mov
in
xchg
adc
push
mov
sub
out
fidivrs
test
mov
sti
test
push
repnz
cmpsl
mov
inc
mov
hlt
mov
ljmp
sub
popf
xor
sbb
xor
mov
push
movsb
das
sbb
jmp
sub
xchg
popf
movsl
xor
jp
cmc
orl
cmp
mov
mov
adc
mov
in
jle
in
add
mov
imul
mov
sub
inc
scas
cmp
jmp
dec
mov
out
pop
push
outsl
sub
test
cmc
in
mov
add
jg
stos
mov
dec
mov
mov
jge
jae
decl
cmc
mov
and
pop
repz
or
mov
mov
mov
pop
jle
pop
cmc
push
out
xchg
mov
cs
add
movsl
mov
xor
lcall
jp
int
jge
sarl
out
jo
mov
dec
fcom
cmpsb
sbb
mov
rcll
test
fbld
jno
aaa
shrb
loop
aam
adc
mov
sti
xchg
insb
or
iret
or
icebp
stos
jl
incb
xor
pop
pop
rol
xor
fwait
mov
pop
decb
out
repnz
mov
lds
adc
push
rclb
sbb
xchg
insl
xor
jo
xchg
mov
movsl
rcll
cmp
mov
cmp
mov
push
fwait
sbb
mov
fstl
dec
mov
jecxz
arpl
xor
sbb
out
mov
shlb
inc
dec
icebp
xchg
mov
repnz
shll
movsb
fstps
sbb
pop
jno
daa
pusha
mov
dec
rcrl
mov
xor
dec
test
push
inc
inc
pop
xchg
xchg
mov
cmpsl
enter
xlat
xor
mov
mov
sub
insl
jge
xor
imul
fists
andb
popf
mov
in
jb
test
fnsave
orl
imul
insb
xchg
fmull
cmc
test
push
mov
ror
shld
jno
sub
jno
incb
xor
out
outsb
mov
fmull
and
pop
jo
in
push
aad
and
or
std
ret
out
fistps
popf
std
xor
pop
and
jo
scas
or
inc
test
nop
rorl
out
mov
testl
jbe
push
jmp
mov
cmp
adc
mov
repz
mov
push
add
dec
in
adc
mov
cmp
fsubrl
xchg
mov
push
sub
inc
xor
addr16
rol
stos
add
and
or
adc
cmpsl
leave
inc
popf
setb
adc
mov
je
sbb
fwait
nop
lcall
sbb
pop
adc
xchg
xchg
mov
andl
and
call
jl
mov
jg
sub
xlat
psubsw
inc
and
xchg
lods
push
mov
pop
pop
jg
xor
mov
mov
xchg
and
dec
div
sub
xor
mov
mov
jl
aam
lcall
add
mov
push
fldt
push
lods
or
push
mov
popf
es
jmp
in
dec
mov
notb
ds
sub
int3
shl
add
stc
push
pop
fmull
std
pop
jmp
xor
cmc
inc
xchg
in
and
int
mov
or
and
xor
sub
jns
test
pop
aas
and
xor
pop
xor
pop
int3
xchg
paddw
jnp
xlat
inc
or
ffreep
sbb
mov
mov
dec
xor
sarl
xorl
imul
adc
fnstenv
ds
and
add
out
adc
push
andps
sarl
and
mov
cmp
mov
lea
gs
cmpsl
insb
fistps
add
rcr
and
mov
lock
fisubrl
inc
mov
cmp
mov
pop
cmc
in
mov
mov
js
push
xor
mov
sbb
dec
popa
int3
lods
mov
stc
je
cli
les
adc
inc
xchg
dec
idivb
divl
push
test
jb
les
add
sbb
ds
not
jg
inc
mov
cltd
movsl
xor
sub
xchg
sbb
mov
xchg
xor
or
sub
mov
pop
push
mov
push
leave
pop
push
inc
xchg
test
dec
inc
adc
lahf
sti
leave
sahf
add
cmp
pop
xor
popf
cmp
cmp
push
lea
sarb
xchg
sti
call
or
leave
jne
call
pushf
movsb
popf
stc
lds
test
cmc
inc
scas
or
les
pop
mov
lea
add
std
out
inc
insb
push
add
popf
lods
xor
lods
pop
outsl
cmp
outsb
mov
push
adc
cltd
aaa
iret
lea
sarl
mov
xor
push
or
test
cmp
mov
xchg
sar
lret
cmc
aas
jecxz
in
stos
mov
xchg
test
aam
sub
xchg
mov
add
mov
mov
mov
mov
xor
pop
loope
rorl
push
ds
pop
in
mov
mov
addl
call
subb
popf
xor
scas
in
and
xor
xchg
in
stos
or
mov
subl
nop
mov
in
in
xorl
mov
pushf
fdivrl
hlt
mov
mov
andl
cld
ret
fwait
sbb
push
mov
push
jle
rcl
xlat
dec
xchg
jb
mov
hlt
shrl
xor
std
jg
fdivr
mov
dec
and
mov
cmp
inc
lds
push
out
mov
add
adc
sbb
lods
inc
and
inc
sub
pop
ss
sub
imul
adc
stos
fldt
mov
sub
sahf
push
mov
into
dec
sub
pop
xor
mov
mov
incb
cmp
lods
ror
mov
nop
mov
and
mov
cmp
divl
repz
in
push
fstps
fistps
jmp
dec
js
mov
xor
pop
lea
nop
enter
pop
mov
fistps
outsl
jne
cmp
push
mov
xchg
movsl
mov
cmp
add
in
cmp
mov
mov
stos
gs
xor
mov
aaa
jmp
imul
stos
mov
pop
and
scas
stc
aad
xchg
in
xchg
ss
test
or
push
cmp
stos
enter
xchg
adc
cmc
cmc
pop
xchg
test
mov
sub
int
and
mov
imul
std
push
pop
pop
mov
push
aad
in
repz
fsubrs
aaa
cli
mov
push
dec
xor
rol
lret
add
cmc
dec
pushf
mov
sti
adc
or
pop
ja
hlt
je
ds
mov
mov
fs
out
or
jmp
add
dec
push
outsl
in
jo
cmp
add
aad
xor
enter
iret
pop
icebp
test
xchg
sbb
pop
inc
jmp
int3
xlat
movsb
into
adc
cmc
xchg
adc
je
mov
mov
sbb
out
inc
ret
shl
testb
sub
into
ds
sahf
mov
aam
dec
sahf
fcoml
lods
pusha
mulb
fucomip
je
mov
cmc
or
cmpsl
push
and
jne
mov
and
movsl
pushf
and
xor
test
xchg
jne
cltd
push
xor
jg
mov
idiv
stc
dec
gs
and
stos
inc
pop
loopne
push
movsl
call
mov
push
stc
adc
mov
sbb
jge
mov
arpl
dec
fneni(8087
into
mov
idivb
orl
xchg
xchg
outsl
xor
shrb
ds
push
out
sbb
popf
icebp
call
mov
mov
cltd
inc
and
push
aam
fisubrl
mov
push
mov
loopne
jp
adc
aaa
xor
cmpb
xchg
mov
cltd
mov
popf
lahf
test
inc
andl
xor
mov
cmp
mov
insl
shr
cmp
iret
jmp
mov
imul
mov
push
dec
fisubl
movsl
or
in
cs
push
inc
sbb
call
pop
fsubrl
aad
outsl
nop
aad
movsb
inc
sti
shlb
aas
pop
cwtl
loopne
inc
or
mov
mov
jbe
push
jb
ljmp
cld
in
xor
xor
jne
mov
into
stc
lods
mov
int3
cmpsb
cmc
bound
jne
push
add
int3
mov
jl
adc
fsub
test
push
hlt
dec
cld
or
hlt
adc
xor
xchg
push
test
into
fs
ja
aaa
add
pop
mov
out
mov
adc
loopne
movsb
aas
cld
mov
jle
into
data16
pop
repz
or
sbb
dec
inc
jnp
mov
pop
pop
jmp
jbe
movsl
adcb
dec
in
push
xchg
iret
sbb
push
enter
mov
stos
test
ret
ret
scas
push
cmp
mov
roll
mov
mov
or
mov
cmc
inc
mov
jge
pop
xor
in
or
mov
xchg
repz
scas
inc
mov
js
adc
fstps
repnz
imul
inc
fisubrs
push
out
dec
dec
shll
imul
addl
leave
jecxz
cmpsl
popa
xorb
xchg
mov
or
into
and
xor
sbb
pop
ret
cmp
js
xor
add
mov
sub
pop
std
mov
mov
mov
jl
lods
hlt
aad
mov
ror
int3
xchg
in
adc
xchg
lea
cmp
push
mov
xchg
stos
jge
cld
pushf
jmp
repnz
xor
push
xor
or
xchg
mov
movsl
test
mov
das
loop
cmp
mov
xchg
mov
lods
dec
sbb
pop
mov
push
mov
add
mov
aaa
mov
cmp
push
mov
pop
mov
in
or
mov
adc
test
js
hlt
test
xor
push
data16
movsb
cld
mov
mov
mov
pop
in
movsl
cmp
mov
addr16
int3
in
jp
jae
lods
mov
out
cmp
mov
xchg
push
pop
jge
fistl
jb
je
sub
loop
mov
in
mov
pusha
inc
scas
mov
outsl
adc
push
dec
mov
jb
cwtl
iret
xlat
mov
adc
dec
mov
aam
mov
ret
adc
dec
dec
dec
xor
add
movsl
jle
mov
sub
rclb
sti
adc
push
xchg
leave
mov
loopew
sbb
ss
xor
lods
cmp
test
cmp
dec
popa
push
pop
jne
xchg
imul
cmp
and
loop
aad
lods
lds
daa
mov
xchg
hlt
mov
popf
jb
jmp
mov
aam
shl
xchg
out
xchg
mov
mov
shll
cmp
mov
mov
pop
ret
pop
sub
out
adc
pop
jg
int3
cmp
pop
or
mov
jae
sub
push
fwait
xchg
mov
cmp
addr16
insb
mov
mov
and
and
popa
rcrb
iret
mov
xor
push
and
mov
loop
out
xlat
outsb
adc
jbe
mov
cltd
movsl
mov
jle
lahf
lcall
das
xlat
cmp
mov
sti
mov
jb
push
cmp
xorb
sahf
gs
mov
out
adc
lods
inc
push
pushf
mov
data16
out
lds
out
push
es
adc
xor
aad
scas
pusha
xchg
cltd
mov
sub
fcomi
icebp
and
arpl
mov
mov
mov
or
sub
testb
out
mov
sbb
lgs
cmp
daa
es
xor
dec
add
and
add
ljmp
clc
lods
negb
repz
add
lret
pusha
mov
icebp
xor
xchg
or
scas
push
enter
shll
mov
xchg
jmp
insb
mov
cmpsb
fsubr
mov
fnstenv
pop
jecxz
xchg
cmp
les
scas
sahf
imul
test
test
movsl
jae
sub
idivb
mov
aam
movsl
cltd
jns
js
cmp
xor
mov
xchg
mov
jns
fcompl
pop
imul
sbb
or
aaa
jns
popa
scas
xchg
aad
outsb
jb
lret
mov
mov
mov
cmc
movsl
lds
xchg
jbe
mov
cmp
lods
mov
outsb
xchg
cmc
cmp
dec
mov
fwait
ret
xchg
aam
or
mov
fdivrs
mov
mov
mov
or
sbb
xchg
sub
in
notb
mov
xor
daa
inc
inc
dec
mov
ss
push
xor
jns
stc
pop
test
mov
push
js
mov
add
mov
push
stc
dec
inc
sub
les
pop
add
adc
jmp
stc
and
cli
rcll
movb
cmp
xor
fucompp
ror
mov
in
adc
jmp
or
cmp
mov
xor
adc
out
or
mov
popa
imul
stos
xchg
mov
xor
imul
out
ret
fistl
push
mov
mov
xlat
ret
jl
outsb
loop
fdivs
sub
adc
sub
js
mov
clc
test
mov
push
sub
or
mov
mov
inc
mov
lds
mov
lods
ret
test
mov
adc
push
lret
call
bound
out
inc
dec
mov
lds
cwtl
xor
sub
pop
mov
mov
dec
cmp
xlat
je
xchg
jne
cmp
inc
sub
jge
mov
sub
test
cs
gs
imul
mov
mov
cmp
ret
fwait
xor
fdivl
mov
ja
pop
add
jg
adcb
push
rol
add
xchg
test
sbb
inc
mov
jge
push
mov
mov
cmpsb
mov
jnp
scas
mov
xor
cwtl
shll
xchg
shlb
pop
jle
fbld
dec
mov
lret
pop
insl
add
cmp
in
mov
xorl
in
mov
into
mov
arpl
inc
sbb
out
add
aad
jmp
imul
xor
gs
mov
hlt
add
mov
push
pop
mov
movntq
or
movsb
pop
inc
mov
es
insl
inc
ja
dec
enter
fisttps
repnz
inc
jbe
cmp
ds
hlt
ja
mov
jmp
bound
xor
cmc
mov
cmp
test
jl
test
sbb
negl
pushf
cwtl
mov
lea
mov
push
lret
push
xchg
xchg
dec
mov
dec
cmp
jns
cltd
mov
lret
sbb
or
sub
jg
aas
push
icebp
or
push
andb
xchg
pop
sub
aaa
mov
js
mov
andl
mov
es
and
shlb
ljmp
dec
push
lods
and
xor
test
das
call
out
adcl
add
out
or
dec
rorl
shr
aad
mov
rol
or
push
mov
test
lea
popa
movsb
leave
push
shrb
cld
jns
mov
adc
pop
cltd
mov
ret
xchg
shl
movl
lret
mov
mov
adc
cmpsl
into
xchg
imul
je
ss
xchg
mov
push
and
arpl
or
xchg
test
cmp
loopne
fwait
addl
fs
push
cltd
xchg
sbb
mov
cs
push
adc
leave
add
clc
mov
pop
xorb
sub
sub
mov
xor
mov
dec
test
mov
insl
hlt
cmpsl
sbb
stos
outsl
lds
xor
and
lds
icebp
inc
sub
xor
mov
xchg
xor
scas
es
aas
lods
fnstsw
and
xchg
testl
iret
jnp
mov
pop
cmpb
or
sbb
xlat
inc
jge
or
mov
orl
jp
push
xchg
js
add
xlat
rorl
mov
mov
sti
inc
pop
add
xchg
rorl
pop
xor
jp
and
je
cmpsb
mov
repnz
dec
sbb
cmp
mov
xchg
call
std
orb
aaa
jno
shrl
sbb
in
imulb
xor
push
data16
in
mov
int3
leave
js
cmc
pop
inc
jbe
mov
loopne
mov
notl
sti
adc
jge
std
faddl
adc
icebp
bound
push
xorl
jnp
aaa
ret
push
repz
xor
sti
inc
nop
shrb
mov
stos
jge
pop
lea
fs
movsl
out
in
mov
pop
cmp
mov
xor
jecxz
and
lret
cmpsb
jg
mov
xchg
xchg
bound
inc
and
repnz
adc
mov
aam
xchg
mov
sarb
xchg
xor
stc
lds
aas
and
add
outsb
mov
ss
push
cmpsl
daa
mov
sbb
dec
int
inc
fdivs
jge
nop
das
outsl
sahf
mov
iret
xchg
mov
xor
movsl
pop
test
les
mov
ja
out
pop
movsb
xlat
add
repz
fs
movsl
aam
xor
fwait
cwtl
sbb
out
arpl
xor
pop
inc
dec
mov
test
jb
cwtl
fdivp
dec
int3
cmp
std
arpl
pavgw
xor
jl
cmp
and
sbb
les
mov
push
xchg
out
test
or
shlb
mov
leave
inc
iret
adc
mov
fsubs
mov
mov
adc
xlat
aaa
flds
outsb
jae
inc
mov
adc
jmp
dec
or
inc
jp
push
push
sub
fdivl
imul
loopne
arpl
xchg
push
lods
mov
test
add
pop
lods
std
mov
xor
lahf
xchg
pop
xchg
jb
dec
or
test
mov
adc
lret
dec
stos
cltd
dec
pop
lods
mov
dec
bound
sub
insb
cmp
mov
es
pop
dec
xchg
aam
lahf
fsin
int
lret
call
mov
shlb
xor
or
xchg
mov
mov
mov
adc
pop
and
mov
loop
mov
in
mov
popf
hlt
arpl
std
pop
xor
imul
xlat
and
pop
dec
mov
pop
iret
movsb
rcl
mov
push
out
jl
xchg
xor
or
mov
popf
shrb
mov
and
sbb
lods
adc
cld
test
sbb
mov
lahf
mov
ret
mov
and
mov
sub
stc
test
xchg
sub
xchg
mov
cmc
cltd
sbb
insb
hlt
jecxz
xor
or
xchg
dec
mov
sbb
xchg
lret
or
or
push
sar
mov
enter
mov
ret
frstor
mov
sub
fstps
adc
mov
setl
sbb
sbb
adc
or
lds
mov
and
mov
adc
and
cmpsb
lret
cmp
scas
jmp
cmp
cltd
addr16
push
mov
jmp
or
stos
push
repnz
mov
xor
fadds
cmovle
mov
mov
xchg
sub
or
inc
cmp
test
mov
sbb
imulb
fdivs
sbb
in
sub
ds
sub
xor
mov
stc
fistps
cmp
push
adc
mov
mov
add
insl
movsb
decb
aad
roll
mov
jmp
xchg
addl
fisttpll
sbb
jae
aam
lea
sbb
adc
jno
mov
in
or
cmc
mov
xchg
xor
lea
fiadds
lods
push
sbb
or
push
jle
rorl
or
jp
push
ror
sub
mov
or
cmp
jmp
xchg
stos
inc
sarb
aas
mov
scas
nopl
add
mov
mov
cmpsb
mov
int
mov
aas
sbb
xor
out
jnp
sahf
xor
popa
cmpsl
pushf
xchg
and
dec
fcoms
lcall
xchg
cmp
jno
jae
js
ret
mov
test
fs
arpl
inc
subl
es
aaa
xor
sbb
stc
ficomps
mov
repnz
cmp
daa
mov
lret
in
push
jbe
sub
dec
mov
mov
and
xor
lea
mov
and
in
xchg
lcall
leave
sbb
pop
jge
fisttpll
ret
jbe
das
addr16
push
or
fidivl
pop
mov
push
jle
push
stos
lods
leave
fimuls
out
and
mov
inc
fbstp
shll
cmp
repnz
jnp
sti
or
mov
xchg
bound
lods
mov
or
insb
rcrl
mull
pop
stc
xor
pushf
ss
int3
and
insb
push
stos
push
pop
mov
or
test
into
push
stos
fidivl
sbb
lods
xor
out
push
adc
xchg
shlb
inc
imul
and
xchg
sub
xor
add
mov
insb
and
fcomi
std
out
mov
sbb
sub
arpl
pop
test
sbb
mov
dec
and
out
rcll
xacquire
scas
mov
leave
outsl
push
xor
sbb
divl
mov
cmp
add
mov
sub
pushf
cmp
cmc
enter
cmp
test
xorl
mov
data16
mov
mov
addl
jmp
mov
fcom
out
or
fidivl
out
push
push
pop
mov
sbb
jg
shrl
sub
mov
movsb
xor
fidivl
cli
push
hlt
or
mov
push
adc
repnz
test
jge
mov
xor
je
pusha
es
or
fistl
sub
dec
xor
ret
cltd
jmp
hlt
mov
aaa
aam
adc
mov
mov
gs
mov
fld
xchg
push
in
ficompl
and
mov
bound
push
aam
idivb
xor
imul
flds
pushl
sbb
push
pop
mov
scas
repnz
xchg
mov
xor
jbe
mov
xchg
rcrl
mov
int3
fld
xchg
push
push
mov
test
fwait
loop
loope
dec
outsb
sar
lock
bound
jne
divb
mov
push
mov
outsb
aad
inc
das
iret
push
rcl
dec
jmp
cmp
scas
jp
rolb
std
outsl
outsb
sub
mov
add
dec
imul
push
fnsave
pop
jae
cmp
popf
cmc
mov
push
mov
out
mov
ss
outsb
adc
inc
jecxz
sarl
fldl
adc
cltd
rorl
in
add
movsb
jns
sar
mov
jno
stc
cmc
dec
push
xorb
mov
xor
mov
into
fstpt
push
mov
dec
mov
push
xchg
mov
ss
mov
loopne
shll
xor
mov
sbb
outsl
sub
or
push
loopne
cmpb
cmp
popf
mov
fsubrs
fsubrl
mov
les
in
mov
int3
sbb
addr16
aad
sbb
test
in
push
rcrl
mov
inc
xchg
lret
mov
lahf
sbb
mov
cwtl
fisubs
rdmsr
lock
xorb
or
sbb
inc
dec
xor
ljmp
jb
out
jl
subb
loopne
dec
or
sub
xchg
scas
data16
pop
inc
test
arpl
int
dec
vpsraw
xor
mov
push
mov
out
enter
or
shll
mov
cmp
sub
mov
add
jns
dec
mov
fwait
arpl
cmpsl
pop
xor
mov
push
xchg
lahf
sub
mov
add
nop
pop
add
lahf
xlat
in
rol
jmp
ss
adc
cmp
fwait
cwtl
xor
adcl
imul
outsb
pop
fimuls
sub
mov
scas
int
sbb
mov
push
lods
push
mov
cmp
adc
in
jae
testl
inc
jl
dec
daa
sbb
cmc
aam
in
mov
test
jbe
std
nop
xor
jne
pushf
ret
jle
cmc
mov
jp
fs
mov
mov
sbb
into
push
lret
test
aas
mov
dec
in
scas
lods
sti
lea
mov
ja
int3
xor
cs
add
popf
pop
xrelease
mov
out
push
xor
cmc
lock
dec
shrl
rol
decl
mov
or
dec
loope
push
mov
test
mov
mov
and
mov
mov
lds
cld
jmp
adc
xchg
icebp
mov
lock
mov
repnz
mov
mov
dec
xor
xor
or
adcl
pop
popf
mov
test
add
jns
out
mov
fiaddl
fsubr
pusha
lret
mov
cs
jl
mov
repnz
fdivs
int3
pop
mov
mov
loopne
lods
mov
mov
inc
push
pop
xchg
cmp
push
mov
dec
mov
push
mov
cmc
subl
ret
out
jmp
lret
call
jg
mov
jmp
roll
xor
and
testl
jnp
test
cmc
adc
pop
inc
out
mov
cmp
test
cli
jne
mov
push
loope
lcall
jb
sbb
xchg
iret
or
mov
scas
xor
in
cmp
lret
test
loopne
mov
incb
dec
mov
in
aad
or
push
aaa
test
inc
and
ja
imul
loop
inc
jmp
cmpsl
mov
push
aad
pop
cmpsb
aas
xor
mov
dec
dec
popf
fbstp
loope
xor
nop
enter
lods
cwtl
outsb
cmpsl
dec
mov
push
cld
xlat
xchg
dec
sub
mov
mov
adc
adc
cld
xor
mov
ret
pop
dec
fs
jmp
orl
sbb
in
movsl
mov
or
mov
mov
cmp
lods
mov
push
orb
dec
insl
xor
adc
add
jmp
cmp
jne
rolb
jbe
cmp
test
adc
xor
push
cmp
push
or
roll
ja
xchg
push
lds
jne
pop
stos
lods
lods
mov
movsl
push
scas
and
mov
xor
icebp
outsl
mov
mov
mov
pop
andl
mov
inc
mov
xchg
iret
cmp
sbb
popf
xor
hlt
imul
xchg
jae
mov
mov
fldl
mov
xlat
sbb
or
movsl
push
and
mov
leave
pop
pop
cmp
stos
lods
xchg
in
xor
flds
movsl
push
hlt
repnz
pop
dec
clc
dec
aas
inc
sti
test
mov
xor
cli
pop
mov
lahf
jle
pop
aas
mov
or
mov
test
mov
cmpsl
mov
push
aaa
cmc
xlat
mov
cld
cwtl
outsl
cmpsl
stc
ret
pop
ret
and
sub
mov
stc
pop
aaa
nop
mov
xor
push
fldenv
cmc
or
ret
xchg
dec
lock
andl
mov
lahf
leave
call
into
xchg
std
xchg
dec
std
fidivrs
loope
ret
inc
cld
and
mov
inc
scas
lods
imul
stos
xor
test
jecxz
jne
adc
addr16
std
scas
mov
xor
mov
rcll
mov
or
xchg
pusha
movsl
enter
xchg
sub
test
adc
dec
cmp
adc
imul
mov
lret
shrl
lcall
cwtl
nop
xchg
adc
mov
ret
repz
xchg
jbe
pop
es
cmp
adc
or
and
push
adc
lods
imul
popf
adc
out
add
popl
imul
jnp
fbstp
jb
cmpsb
lret
lret
cmc
inc
in
stos
sahf
cmc
xchg
adc
not
ss
fwait
cmpsb
dec
dec
mov
and
ret
pop
xchg
aam
aas
repz
sub
iret
aad
aam
addr16
mov
popa
cmp
push
adc
jg
mov
sub
xor
ficomps
lds
lock
dec
mov
dec
or
mov
rcl
mov
shlb
mov
mov
aam
xor
mov
mov
addr16
test
and
mov
lods
fists
xchg
sbb
mov
mov
call
mov
jecxz
mov
into
mov
mov
subl
cmc
inc
call
fstps
sub
cmpsb
and
and
mov
lret
shlb
js
subl
mov
and
jae
sbb
ret
mov
mov
aam
mov
popa
xchg
sub
inc
jg
mov
fmull
push
iret
jb
adc
loope
lret
mov
out
mov
xor
std
sti
iret
xor
test
and
pop
fwait
mov
mov
fildl
or
sarb
inc
dec
les
je
lcall
popa
push
lcall
std
test
notb
sub
sbb
sub
cmc
hlt
mov
jno
push
push
je
ret
sti
push
sbb
out
jg
divl
sbbl
or
pushf
xchg
add
sbb
es
shll
xor
adc
pop
jge
scas
ss
mov
lock
pop
cmc
mov
dec
sti
movsl
mov
jge
loope
fdivrp
xchg
lea
inc
rolb
and
inc
enter
inc
std
sti
push
jnp
jg
das
mov
inc
xor
xchg
push
mov
push
sti
jne
xchg
mov
dec
mov
add
xor
rcrl
dec
dec
add
or
mull
push
imul
je
ss
or
jl
mov
xor
inc
in
sbb
or
pop
inc
jne
pushf
xchg
int
divb
mov
not
mov
pop
jg
sub
popa
mov
nop
mov
xchg
xchg
leave
xor
mov
cmp
and
leave
out
mov
xlat
adc
pop
or
cmp
fnstsw
mov
push
sarl
dec
roll
xor
xor
std
push
mov
xor
mov
es
push
nop
inc
xchg
fsubrl
mov
dec
jmp
mov
rorl
ret
adc
sti
jge
inc
int
ss
imul
movsl
xchg
jl
je
aas
shlb
inc
mov
stc
inc
icebp
mov
sahf
sbb
mov
in
pop
popa
mov
cltd
rorl
mov
in
jmp
push
mov
mov
mov
xlat
cmp
sub
mov
mov
test
shll
lds
cmc
and
inc
sub
xchg
sti
lods
xor
mov
push
cmp
jo
scas
les
xor
adcb
popf
call
fs
and
movsl
or
xchg
mov
stos
shll
xchg
inc
mov
adc
test
ja
xor
jmp
mov
movl
mov
notl
mov
or
test
notl
pop
in
loopne
leave
test
push
sub
mov
leave
test
mov
loop
jo
test
notl
je
lock
and
mov
decl
notl
cmp
repnz
sbb
push
mov
mov
lret
notl
and
bnd
cmp
test
notl
in
je
pusha
fimull
test
notl
aaa
inc
out
xor
lret
notl
subb
repnz
push
leave
test
push
in
cltd
mov
leave
test
notl
xor
icebp
add
notl
cmp
test
notl
call
jle
test
notl
push
div
es
lret
notl
lcall
test
notb
mov
or
test
repnz
dec
test
daa
mov
notl
in
xor
movl
rorb
movl
xor
test
notl
xor
iret
fcmovbe
lret
notl
ss
sbb
jo
test
notl
test
rcll
notl
leave
or
cmpsb
mov
notl
pop
lcall
fdivp
push
in
mov
leave
test
notl
pop
cmp
test
notl
mov
loopne
test
pop
ds
cmpsb
push
movl
test
jnp
dec
lahf
xor
fisubs
xchg
xchg
ficomps
subl
repz
and
pop
into
mov
pop
pop
fs
enter
push
add
cmp
xorb
cld
shr
imul
outsb
sbb
loopne
jo
test
or
leave
sar
mov
xor
call
lea
jne
push
mov
bsf
not
bt
sub
lea
call
sahf
je
lret
xchg
jbe
repnz
leave
rcl
movsb
cmpsl
pop
sbb
sbb
dec
inc
mov
mov
fcoms
add
mov
lock
shr
clc
cmp
in
dec
imul
lods
outsb
mov
lods
and
pop
pop
dec
dec
mov
mov
cwtl
cmp
jae
xchg
mov
adc
jbe
out
jp
rorb
shl
mov
ss
mov
push
dec
sbb
test
inc
adc
sub
in
push
lret
xor
loop
aam
stos
lods
out
push
or
cmp
cmp
cld
dec
scas
insb
bound
into
push
lods
mov
xorl
out
xor
pop
lret
xchg
jbe
daa
xchg
idivb
and
popaw
fwait
cmp
or
sub
imulb
ds
mov
jg
jne
lods
adc
adc
mov
pop
ret
cli
sub
xor
test
fidivl
mov
in
movsl
jne
into
iret
or
xlat
mov
pusha
iret
push
clc
mov
mov
ss
incl
mov
scas
cmp
cmp
repz
mov
adc
xor
and
dec
xchg
xchg
push
mov
dec
lret
aad
inc
aas
out
dec
scas
push
push
push
ret
loopne
je
in
fsts
xlat
orb
and
jne
call
addr16
test
xchg
jbe
cmp
and
mov
aad
je
pop
pop
lret
sub
cmp
pop
imul
sub
stos
out
cmp
push
insb
and
cmp
cld
push
xchg
call
hlt
xor
mov
in
adc
addr16
sub
pusha
mov
mov
mov
push
outsb
or
cmp
push
adc
xchg
ret
aam
add
clc
jno
rcll
insl
sbb
add
add
lds
add
xor
mov
lea
je
pushf
pusha
movb
adc
pusha
lea
jmp
lea
jne
pushf
jmp
lea
jne
call
call
jmp
out
fcmovb
xchg
jbe
dec
mov
xor
sbb
mov
or
sub
std
and
jnp
or
mov
mov
inc
jmp
decb
aas
cmp
dec
icebp
inc
or
sub
insl
arpl
lahf
or
sub
xor
jmp
fldcw
cs
sti
or
jne
push
lret
fimuls
bound
mov
sbb
add
xchg
mov
xchg
jbe
push
mov
xchg
pop
mov
dec
jle
xchg
loop
xchg
sub
gs
push
add
arpl
dec
add
sbb
adc
adc
test
xchg
mov
sub
loop
sbb
enter
imul
and
lea
jb
pusha
pushf
pusha
pushl
ret
push
shr
pusha
jmp
call
call
setge
mov
clc
sub
ja
shr
push
pusha
mov
pusha
call
jmp
pushf
mov
call
btr
rcl
ror
movsbw
inc
add
jp
pusha
not
test
pop
and
cmp
mov
call
pusha
pusha
mov
pushf
call
mov
pusha
push
mov
push
lea
jmp
clc
mov
pushf
xor
stc
push
cmp
xor
call
neg
cmc
mov
mov
xor
mov
clc
pushf
mov
test
add
call
call
pushl
add
push
pusha
shrd
jmp
mov
push
pushf
lea
jmp
mov
push
pushf
pusha
mov
call
call
pusha
not
mov
pushl
call
xor
pusha
pushf
call
mov
jmp
rol
cmc
jmp
stc
mov
mov
pusha
jmp
lea
jne
rol
sbb
cmp
movzbw
xorb
mov
bswap
setg
call
pusha
xor
pushl
ror
xor
movsbw
inc
lea
sbb
bts
pushf
sub
bts
lea
clc
mov
shr
xadd
sbb
or
mov
shl
setl
or
lea
add
sar
clc
bsf
bts
mov
neg
stc
sub
setnp
ror
jmp
movzbw
rdtsc
jmp
mov
push
pusha
push
mov
call
bt
stc
sub
call
add
pusha
cmp
push
push
neg
test
add
jmp
jmp
rep
btc
sbb
jmp
bt
cmp
jmp
call
inc
mov
pushf
decl
jmp
pusha
pushl
push
pushf
popl
push
jmp
mov
pushl
mov
call
pushf
popl
push
pushl
jmp
call
call
mov
or
mov
push
add
jmp
pusha
mov
call
pushl
call
shrd
call
mov
pusha
call
pushf
pusha
call
mov
push
push
call
jmp
cmc
sub
call
cbtw
cmc
bsr
shrd
mov
call
jmp
pusha
test
clc
add
test
shld
pusha
pushf
mov
pushl
jmp
lea
jns
pusha
mov
pusha
pushl
call
pusha
push
mov
mov
pushf
pusha
mov
mov
movw
jmp
add
jnp
shr
mov
cmc
add
cmp
neg
test
add
clc
cmc
cmc
call
test
stc
not
cmp
test
cmp
call
push
jmp
pushf
popl
push
call
jmp
pushf
popl
mov
pushl
popl
pushf
lea
jmp
test
cmc
cmp
add
clc
pushl
popf
pusha
movw
pushf
lea
jmp
pusha
call
pushl
shr
cmp
cmp
or
call
push
pusha
mov
jmp
push
push
mov
pusha
pushf
pushf
pushf
lea
jmp
rol
aaa
movsbl
add
mov
sub
mov
cmc
bt
stc
test
add
call
mov
pushf
pushl
popl
push
lea
jmp
pushf
popl
jmp
adc
cbtw
daa
mov
cmc
mov
pushf
sub
jno
push
bt
sub
call
rdtsc
shr
sar
mov
shrd
mov
adc
sub
shl
sar
mov
call
pusha
mov
call
call
pushf
mov
pushf
mov
jmp
pushf
jmp
pusha
mov
pushl
lea
jmp
neg
xor
mov
cmp
pushf
test
jmp
push
pushf
pushf
popl
pushl
pushl
popl
mov
lea
jmp
call
add
jmp
push
not
mov
movzbw
cwtl
lea
mov
jbe
push
mov
lea
cpuid
bt
bt
clc
jmp
mov
call
mov
call
jmp
pusha
mov
mov
jmp
pusha
call
bswap
shld
mov
bt
push
add
pusha
push
lea
jmp
test
mov
pushf
bt
add
pushl
lea
jmp
movzbl
pushf
xor
jmp
clc
shr
jmp
xor
mov
pushf
movb
inc
movb
jmp
stc
sub
call
movb
mov
pushl
mov
mov
push
lea
jmp
pushf
mov
pushf
pushf
popl
jmp
call
pushl
popl
push
push
pushf
push
lea
jmp
push
push
pushf
popl
movb
push
pushl
popl
mov
pushf
lea
jmp
inc
pushf
add
adc
mov
sete
clc
add
pusha
mov
push
lea
ja
pusha
push
mov
movb
push
lea
jmp
mov
movb
pushf
popl
mov
call
pushf
pusha
lea
jp
pusha
pushf
popl
jmp
call
call
jmp
bt
cmp
sub
jmp
pushl
pushl
popl
movb
push
pusha
lea
jmp
pushf
bt
shr
push
mov
mov
pushf
pusha
jmp
mov
movl
pusha
lea
jmp
clc
bt
sub
jmp
mov
jmp
mov
call
pushf
popl
jmp
pusha
pushf
mov
mov
lea
jmp
pushf
mov
push
push
mov
mov
pushf
movb
pushf
mov
pushf
movb
lea
jmp
mov
call
not
lea
jp
pusha
mov
inc
jmp
jmp
mov
call
jmp
add
mov
call
mov
pushf
lea
jmp
cmc
shrd
or
movzww
pushf
bt
add
stc
call
pushf
pushl
mov
mov
jmp
sub
pushf
add
pusha
movb
pushf
pushf
popl
jmp
call
pushf
popl
jmp
pushf
pushl
popl
pushl
pushf
movl
lea
jmp
pusha
mov
jmp
pushf
sub
cmc
clc
test
cmc
shr
pushl
movb
push
mov
movl
push
pushf
popl
mov
movl
jmp
lea
jns
push
pusha
mov
pusha
lea
jmp
push
pusha
movb
jmp
pushf
lea
cpuid
bt
bt
sub
call
mul
pushf
push
jmp
mov
call
cmc
jno
pushl
call
jmp
pushf
push
lea
jl
popl
push
mov
push
pusha
lea
jmp
bt
call
pushf
pushf
popl
pushf
call
jmp
pushf
jmp
call
pusha
push
pushf
popl
push
pushf
pushl
popl
pushf
push
push
mov
lea
jmp
push
pusha
lea
jmp
pushf
pushl
popl
push
lea
jmp
cmc
movsbw
call
lea
movsbw
setle
mov
inc
call
call
movw
pushf
popl
push
push
pushf
pushl
popl
mov
pushl
lea
jmp
pushl
push
pushl
popl
push
pushf
mov
lea
jmp
movsbw
call
inc
rol
ror
cmp
mov
call
mov
push
pushf
movl
push
lea
jmp
movb
mov
call
movb
call
pusha
pushl
popl
pushf
push
mov
lea
jmp
mov
pushl
pushf
popl
pushf
pushl
popl
push
lea
jmp
sbb
sub
cmp
ror
sub
movsbw
lea
lea
mov
pusha
movw
pushf
popl
pushf
cld
call
mov
jmp
mov
jmp
btr
adc
mov
test
pusha
jmp
test
add
movw
mov
pushf
pushf
pushf
lea
jmp
pushl
popf
movw
mov
pushf
pushl
ret
push
jmp
sub
jmp
mov
jmp
movw
call
test
mov
clc
xor
call
pushf
popl
movb
pushl
pushl
popl
pusha
pushf
push
pushf
lea
jmp
xchg
cmp
mov
rol
rcr
call
call
push
push
mov
jmp
mov
pushf
call
jmp
lea
jle
pusha
mov
call
movb
pushf
popl
call
mov
movl
call
push
lea
jne
jmp
mov
pushf
lea
jmp
das
lahf
bsr
mov
bt
test
stc
add
pusha
jmp
pushf
push
jmp
jmp
aam
movsbw
btr
lea
jmp
pushf
mov
pushf
movb
push
lea
jmp
pusha
mov
pushl
mov
call
pushf
mov
pushl
popl
pushf
pushf
pusha
movb
lea
jmp
mov
pushl
pusha
movb
push
lea
jmp
pusha
pushl
push
mov
movw
push
lea
jmp
cmp
xchg
test
xor
inc
bsr
mov
dec
adc
pop
btr
xchg
rcl
neg
cmp
mov
bsf
add
movzbw
setge
xchg
shl
mov
stc
sbb
pushf
mov
mov
pushl
bswap
btr
shl
push
shrd
call
mov
pushl
pushl
movb
lea
jmp
movzbl
push
stc
clc
xor
jmp
jmp
movsbw
bts
shr
sub
movzbl
test
dec
clc
stc
add
shl
sub
jge
dec
not
setb
inc
bts
or
btc
xor
push
movzbw
call
cmp
jmp
pusha
call
jmp
pushf
mov
push
pushl
mov
push
mov
jmp
lea
jo
mov
jmp
call
mov
call
test
call
cmc
mov
clc
push
cmc
cmp
add
pusha
pushf
mov
push
mov
push
lea
jmp
pushl
pusha
mov
mov
pushf
mov
pushl
pushf
pushf
lea
jmp
inc
pushl
inc
rcr
ror
stc
bswap
rol
bsf
shl
not
not
xor
setnp
push
movzbw
inc
inc
and
or
xor
rcr
mov
clc
jmp
pushf
pusha
jmp
call
lea
jp
push
pusha
pushl
mov
pusha
mov
push
movb
push
pushl
lea
jmp
cmc
xor
movb
movw
pushf
pushf
cbtw
movb
bt
cwtl
call
pushl
movb
mov
pushf
mov
pusha
pushf
mov
pushf
jmp
mov
mov
push
push
push
lea
jmp
cmp
pusha
add
mov
mov
push
lea
jmp
jmp
call
mov
pushf
xchg
push
push
movl
pushf
mov
mov
pushf
pushl
pushl
ret
mov
push
pushf
pushf
lea
jmp
neg
xor
mov
ror
and
sbb
xor
add
pushf
mov
call
bt
cmc
add
pushf
pushf
call
pushf
push
mov
pushf
lea
jb
pushf
pushf
mov
pushf
lea
jmp
call
pushf
pusha
cld
push
pushl
call
mov
movb
lea
jmp
mov
mov
movw
push
jmp
mov
movb
mov
mov
pushl
call
ror
adc
rcr
mov
push
sub
jmp
lea
je
clc
stc
pushf
sub
stc
jmp
mov
jmp
inc
push
clc
call
pushl
popl
mov
lea
jmp
dec
xchg
mov
and
sub
bsf
neg
mov
jmp
jmp
call
xchg
push
mov
std
call
jne
call
push
mov
jmp
neg
movb
add
pushf
test
cmc
sub
bt
cmp
pushl
neg
bt
add
clc
pusha
cwtl
pushl
clc
jmp
rol
mov
btc
shl
movzbl
add
btr
btc
clc
rol
sub
sub
inc
sub
sub
mov
pusha
shl
cmp
jmp
movb
pushf
mov
movw
push
mov
pushf
call
call
pushl
popl
movl
movl
mov
movb
lea
jmp
push
mov
jmp
mov
push
movb
call
mov
pushf
call
cmp
clc
test
pushl
clc
pushf
pusha
cmc
add
pushl
pushl
popf
movl
pushl
push
lea
jmp
jmp
jmp
cmc
xor
pushf
pushf
call
mov
movl
pushf
push
mov
jmp
pushf
push
mov
mov
jmp
jmp
pushl
mov
call
rep
neg
shl
mov
shl
rcl
mov
clc
call
mov
pushf
mov
mov
pushf
mov
pushf
jmp
mov
pushf
push
push
lea
jmp
lea
jge
xchg
push
movl
call
movb
mov
pusha
pushf
call
push
test
clc
sub
call
jmp
call
dec
not
inc
pusha
rcr
xor
push
not
pushf
dec
test
shld
add
sbb
bts
rcl
bts
mov
bt
cmp
mov
add
pushl
jmp
pushf
mov
call
push
mov
push
lea
jmp
pusha
bswap
mov
cmp
add
pushl
pusha
push
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
jmp
xor
not
xadd
mov
jmp
mov
push
lea
jmp
pushf
pushl
mov
call
pusha
pushf
popl
call
mov
push
mov
sub
jae
pushf
sar
shl
mov
test
call
movzbl
not
movsbw
pusha
mov
pushl
lea
pusha
pushf
pushf
mov
push
movw
lea
jmp
pushf
popl
pusha
jmp
call
mov
pushf
pushf
popl
lea
jle
pushf
movb
mov
pushl
popl
pushf
lea
jmp
mov
call
pushf
popl
pushf
pushf
jmp
lea
cld
jmp
call
cmc
clc
call
call
lea
jmp
movw
pushf
popl
call
pushf
mov
rcl
mov
jmp
movsbw
and
mov
push
call
mov
movb
lea
jmp
jmp
mov
movl
mov
movb
pushl
mov
pusha
mov
mov
pushf
pushf
mov
mov
mov
call
mov
mov
pushf
pushl
lea
jmp
pushf
mov
sub
call
call
pushf
call
jmp
bt
stc
rol
cmc
mov
call
call
pushf
dec
cmc
pusha
add
call
shr
rcl
mov
pushf
cmc
cmc
pusha
add
movb
inc
bt
stc
xor
call
jmp
mov
mov
pushl
push
push
mov
jmp
mov
jmp
pusha
pushf
mov
mov
mov
pushf
lea
jmp
mov
mov
jmp
pushf
lea
jb
push
pushf
lea
jmp
cmc
bt
and
clc
bt
jmp
pushf
mov
call
mov
pusha
jmp
pusha
mov
pushf
cmp
and
pusha
movw
call
pushl
mov
push
pushl
pushf
mov
pushl
jmp
cwtl
push
setne
movzbw
mov
push
mov
mov
jmp
movb
call
cmp
pusha
lea
ja
add
mov
xchg
lea
test
shr
sub
adc
aam
btc
lea
movsbw
and
jle
adc
sub
pushf
sub
lea
mov
call
pushf
pushf
call
bt
call
call
push
rep
lea
btr
btc
mov
not
shl
mov
pushl
cld
cmc
pusha
pushl
popf
pushf
lea
jmp
lea
jne
cmp
add
clc
neg
mov
pushf
jmp
pushl
mov
mov
mov
push
mov
jmp
pushf
popl
jmp
divl
jmp
pushf
inc
bt
cmc
mov
ror
test
cmc
test
xor
pushf
pushf
push
sub
mov
lea
jl
mov
push
pusha
lea
jmp
mov
pushf
pusha
pushf
popl
pushf
movw
call
pusha
mov
push
pusha
pushl
ret
push
std
xchg
pushf
lea
jo
mov
call
mov
pusha
pushf
pushl
lea
jmp
mov
movb
push
mov
movb
lea
jmp
jmp
movw
pushf
pushf
mov
jmp
pushl
mov
pushf
pushf
mov
pushf
mov
mov
jmp
mov
movw
call
pushf
lea
jg
pusha
mov
call
xor
clc
call
mov
mov
pushf
call
call
pushl
popl
mov
mov
pushl
pushf
lea
jmp
inc
call
movb
call
pushf
mov
call
mov
movb
stc
pushf
pushf
sub
cmc
pushf
cmc
pushl
shl
movw
pushf
mov
jmp
push
mov
pushf
mov
mov
call
jmp
mov
pushf
push
mov
jmp
push
pusha
jmp
movw
push
lea
jne
call
bt
rol
bt
xor
mov
pushf
call
pusha
push
pushl
push
mov
movb
mov
mov
pushf
lea
jmp
push
jmp
mov
movb
pushl
jmp
jmp
pushf
pushf
mov
pushf
push
lea
jmp
mov
pushl
push
lea
jmp
call
pushl
popl
pushf
pushf
push
lea
jmp
pushl
pushf
mov
call
dec
mov
btc
add
not
pusha
movzbw
mov
bt
add
call
mov
push
push
lea
jmp
or
ror
aam
clc
mov
cmp
shl
mov
pusha
sub
cmp
clc
bt
shr
lea
jp
push
push
mov
mov
pushf
jmp
call
cbtw
lahf
mov
test
cmp
cmp
add
bt
neg
bt
push
stc
cmp
add
test
movb
clc
jmp
pusha
pushf
push
pushf
popl
pusha
call
pushf
mov
mov
pusha
pushf
pushf
lea
jmp
pushf
pushf
mov
call
push
mov
mov
pushf
popl
call
mov
pushf
jmp
add
add
mov
pushf
pushf
pushl
lea
jmp
jmp
xchg
stc
call
mov
mov
pushf
jmp
pusha
call
rol
mov
jmp
mov
mov
pushl
lea
jmp
mov
mov
movb
mov
mov
movw
jmp
sub
pushf
pushf
cmp
shl
mov
call
jmp
movzbw
sar
or
notl
test
mov
cmp
stc
cmc
sub
cmc
cmp
and
call
pushf
mov
push
pushf
pushf
lea
jmp
jmp
jmp
sub
mov
cmc
call
jmp
stc
pushf
cmp
add
pushf
mov
pushf
pushl
ret
push
pushl
popl
pushf
pushf
mov
lea
jmp
call
mov
pushl
jmp
mov
add
cmp
test
bsr
mov
pushf
sub
jmp
cmpl
call
pushf
popl
pusha
pusha
push
mov
call
jmp
mov
call
pusha
jmp
and
lahf
mov
shr
lea
mov
push
call
pushf
std
mov
jmp
pushf
pusha
jmp
cld
push
pushl
rep
btr
neg
mov
and
shld
mov
mov
clc
test
cld
pushl
popf
push
lea
jmp
push
mov
push
lea
jne
cmp
shrd
mov
stc
pushf
bt
and
mov
jmp
pushl
jmp
mov
pushf
lea
jmp
jmp
call
jmp
pusha
pushf
popl
call
push
pushf
call
movw
pushl
mov
call
mov
movb
mov
pushf
lea
jmp
movzbl
pusha
mov
cmc
stc
test
bt
or
push
call
call
pusha
jmp
sub
mov
push
jmp
cwtl
movsbl
mov
setbe
call
inc
mov
pusha
or
not
pushf
sub
shl
movzbl
rcr
or
rol
sub
bsf
btc
or
mov
stc
cmp
cmp
neg
call
dec
not
shl
test
setns
shr
and
shld
pushf
mov
call
movzbw
not
not
btr
and
or
pusha
and
mov
pushf
cmp
sub
call
pusha
call
pusha
pushl
mov
pushf
push
mov
lea
jmp
push
pushf
mov
jmp
lea
jno
push
dec
push
add
pushf
bt
mov
pushf
sub
pushl
pushl
pushf
jmp
pushl
popl
mov
pushf
pushf
push
lea
jmp
pushf
mov
call
mov
pushf
pushf
pushf
pushf
lea
jmp
mov
mov
movb
pushf
pushf
lea
jmp
shld
jmp
call
pushl
popl
push
lea
jmp
bt
mov
pushf
push
clc
pushf
sub
pushf
call
call
btc
sbb
shl
clc
mov
bt
bt
bt
add
mov
pusha
jmp
jmp
pushf
lea
ja
pushf
pusha
pushl
popl
movb
pushl
push
pushl
lea
jmp
mov
mov
mov
jmp
mov
jmp
call
div
mov
call
jmp
call
mov
lea
jle
pusha
mov
pusha
pushf
pushf
popl
call
call
call
btr
rcl
rcr
mov
clc
shr
mov
push
cmp
movb
add
call
movb
mov
push
jmp
mov
mov
lea
pushf
mov
mov
lea
jmp
add
cmc
neg
pushf
pusha
clc
clc
add
test
jmp
mov
movw
lea
jae
pusha
mov
movb
jmp
add
jmp
pushf
pushf
mov
mov
movl
pushf
lea
jmp
mov
pusha
lea
jne
movzbw
bts
rcl
mov
jae
and
call
and
cbtw
mov
or
cmp
mov
push
clc
not
bt
not
cmc
sub
pusha
add
jo
cmp
and
pusha
pushf
lea
jl
mov
push
pusha
jmp
movzbw
mov
jmp
push
mov
pusha
jmp
and
pushf
mov
pushl
pushf
popl
call
sub
jne
bt
add
pusha
jmp
clc
shl
mov
clc
ror
inc
sar
lea
test
test
cmp
adc
xor
cmc
movsbw
pusha
rol
test
xor
clc
shrd
rol
not
sub
and
add
xor
pushl
jmp
sub
push
movb
mov
pusha
lea
jmp
mov
cmc
jmp
movb
mov
movb
jmp
stc
stc
pushf
mul
jmp
mov
pushf
pushf
push
call
pushf
pushf
movw
pushf
mov
jmp
pushf
popl
call
jmp
jmp
mov
cmp
and
test
movb
cmp
jmp
call
sub
test
jmp
dec
inc
pushf
bt
bt
ror
ror
btc
jmp
test
stc
cmc
add
pushf
jmp
mov
mov
lea
jmp
jmp
test
pusha
shl
call
mov
lea
jne
push
mov
jmp
call
cmpsl
sbb
out
pop
mov
decl
and
decl
sti
mov
incl
sbb
ljmp
or
call
mov
pushl
and
jmp
adc
out
and
pushl
and
pushl
or
jmp
mov
ljmp
or
call
adc
mov
lcall
sbb
pushl
mov
pushl
mov
jmp
or
call
push
mov
ljmp
jmp
mov
call
lcall
std
mov
ljmp
adc
lcall
add
jmp
and
jmp
sbb
fmuls
mov
jmp
and
lcall
mov
jmp
adc
mov
inc
add
mov
out
pop
mov
pushl
mov
jmp
push
mov
pushl
or
pushl
adc
jmp
and
ljmp
or
cmp
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
decl
and
lcall
mov
decl
adc
jmp
std
mov
lcall
and
pushl
sbb
decl
adc
lcall
push
mov
ljmp
adc
mov
pushl
or
ljmp
adc
cmp
mov
pushl
or
jmp
mov
jmp
and
pushl
mov
decl
adc
pushl
and
call
decl
and
decl
sti
mov
jmp
adc
push
add
call
and
ljmp
or
call
mov
ljmp
ljmp
adc
inc
and
call
mov
jmp
add
ljmp
adc
pushl
and
jmp
mov
lcall
add
incl
or
jmp
and
decl
and
decl
mov
pushl
adc
pushl
or
pushl
mov
jmp
and
lcall
mov
jmp
mov
jmp
mov
call
push
mov
jmp
sbb
fstps
mov
fstps
mov
fstps
mov
fstps
mov
fstps
mov
fstps
mov
fstps
mov
fstps
mov
fstps
mov
jmp
add
int
sub
jmp
pushf
not
setnp
mov
push
lea
jmp
lea
jnp
mov
std
push
call
mov
jmp
jp
pusha
pusha
mov
pushf
call
mov
jmp
and
mov
push
aaa
mov
rcr
mov
shl
shr
mov
xchg
cmc
push
btr
mov
rcl
shr
mov
test
bt
mov
bsr
mov
rcr
mov
xor
sar
lea
mov
shl
mov
bt
jmp
pushf
pusha
pusha
mov
jmp
cld
pusha
pusha
pushf
call
mov
jmp
mov
pusha
mov
pusha
mov
push
mov
lea
jmp
lea
jne
test
btc
xorb
pusha
movzbw
movzbw
mov
pushf
lea
jmp
movw
inc
cmc
rol
push
xor
stc
pushl
push
call
mov
jmp
xor
test
jmp
neg
jmp
call
pushf
rol
stc
not
stc
xor
cmc
mov
bt
cmp
sub
jmp
mov
pushf
pushl
mov
jmp
pushf
popl
pushl
jmp
bt
cmp
pusha
lea
jne
or
xorb
jmp
pushf
movb
pushl
popl
mov
mov
mov
lea
jmp
mov
movb
call
mov
push
mov
pusha
lea
jmp
movb
mov
pusha
pushf
mov
jmp
cmpl
jmp
lea
jne
push
jmp
pushf
popl
lea
bswap
movsbw
mov
push
pushf
pusha
not
mov
lea
not
call
cwtl
mov
cmp
rol
dec
mov
cmp
not
jmp
mov
mov
movb
mov
pushf
pushf
pushf
movb
lea
jmp
xorb
movzbl
setbe
mov
pushf
lea
jmp
mov
mov
lea
jmp
pushl
popf
movw
movb
mov
mov
lea
jmp
push
push
push
pushf
popl
call
xor
bt
cbtw
cmp
cwtl
mov
cmp
cmc
clc
sub
mov
pushl
mov
pushf
pushf
movb
lea
jmp
pushf
mov
pushf
mov
mov
mov
mov
mov
push
movl
pusha
mov
pushf
lea
jmp
or
bt
mov
rcl
dec
lea
not
call
pushl
pushl
popl
pushl
push
lea
jmp
btr
das
mov
or
bt
bt
mov
sar
mov
call
mov
pushl
pusha
movb
pushf
lea
jmp
call
jmp
mov
pushf
movb
lea
jmp
jmp
cld
pushf
lea
jbe
pushf
rep
xor
mov
add
mov
pushf
stc
pushl
popf
pushf
push
lea
jmp
bswap
mov
call
not
add
jae
push
clc
movw
xor
mov
test
stc
sub
call
pushf
popl
pushl
pushl
popl
movb
movb
mov
lea
jmp
sub
jmp
cmp
not
stc
mov
push
movb
pushf
pusha
sub
clc
push
add
jmp
push
pusha
pushf
mov
pushl
jmp
pushf
push
mov
movl
pushf
popl
mov
lea
ja
push
movb
pushl
popl
push
pusha
pushf
push
lea
jmp
push
mov
movb
pushl
lea
jmp
mov
push
pushf
clc
btc
mov
std
test
stc
pushf
pushl
popf
pushf
lea
jmp
pushf
mov
pushf
mov
jmp
