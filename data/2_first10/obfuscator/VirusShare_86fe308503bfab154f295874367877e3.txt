in
movsb
xchg
andb
or
mov
sub
call
xor
sub
insb
idiv
jecxz
in
adc
mov
sbb
dec
xor
int3
leave
faddl
add
add
cmpsb
popf
mov
push
int
cmp
inc
sti
and
adc
faddl
adcb
sti
or
push
jecxz
pop
add
das
insb
bound
js
scas
mov
inc
mov
in
jl
sub
mov
mov
das
push
pop
movsl
dec
rep
je
popa
into
addr16
xchg
inc
xor
test
mov
xor
scas
dec
loope
ljmp
xchg
push
lcall
dec
pop
hlt
int3
xor
ljmp
test
sbb
and
mov
adc
cmpsb
scas
jbe
gs
xchg
shrd
mov
pushf
mov
pushf
call
pushf
cmc
sub
test
cmp
bt
cmp
push
call
adc
push
pushl
call
lea
jge
pusha
pusha
lea
call
pushf
movb
jmp
pushf
pushl
jmp
call
lea
ja
setge
jmp
clc
pushf
sub
test
cmc
cmp
jmp
movl
pushf
pushf
mov
mov
pushf
pushl
ret
call
cmp
jmp
pushl
pusha
lea
jne
pushf
sbb
sub
sub
neg
movb
mov
setbe
add
and
cmp
xor
rcl
mov
movw
test
movb
lea
je
push
sub
cmc
push
cmp
test
cmp
call
bswap
pusha
call
dec
dec
inc
inc
inc
dec
dec
push
cs
insb
add
mov
and
jne
rol
mov
cmc
jmp
dec
out
jne
xchg
push
cwtl
sbb
mov
aas
testl
inc
out
mov
mov
aad
xor
insl
and
scas
repz
xchg
test
mull
push
cs
xchg
inc
fists
dec
inc
push
push
icebp
push
push
mov
mov
out
cmp
cmpsb
mov
je
xor
pusha
out
sbb
cmpsl
jb
lret
stos
jl
int
dec
sahf
cmp
xor
addr16
fstp
mov
lret
lcall
add
out
or
mov
pushl
lea
jmp
cmp
cmp
pushf
mov
lea
jae
bswap
push
sub
dec
mov
shr
shl
bts
cmp
mov
or
jmp
lea
jae
call
cmpl
pop
stos
lcall
fcomi
dec
xchg
jo
movsb
and
mov
cmp
dec
cmp
inc
rorl
pop
sbb
push
inc
add
or
xor
subl
rcll
jb
insl
popa
add
outsb
adc
vucomisd
xchg
push
psubsw
subb
xchg
cmc
ljmp
mov
sbb
cli
je
outsl
mov
add
ret
xor
xor
insl
fbld
mov
cmovp
mov
mov
or
das
add
jl
outsb
in
lods
pop
pop
cmp
mov
inc
sub
sub
add
scas
call
enter
push
pushf
xchg
xchg
out
icebp
jns
ds
mov
jae
pop
pop
insb
xor
hlt
repz
pop
icebp
sbb
push
test
ljmp
scas
jl
rclb
aaa
cmp
adc
icebp
pop
mov
sub
push
cmp
fldl
and
leave
pusha
cmpsl
jne
mov
stos
xor
call
cmp
andl
outsb
push
dec
test
cmpsl
insb
lret
mov
push
add
insb
xor
push
pop
mov
out
lods
adc
movsl
mov
out
popa
test
std
mov
pop
mov
pop
rcrb
shlb
sbb
sbb
sub
mov
adc
mov
hlt
repz
mov
gs
cltd
movl
call
add
inc
gs
outsl
fs
gs
imul
add
pushf
stc
shr
pushf
call
lea
not
movzbw
bswap
pop
mov
pop
pusha
call
test
movsl
xchg
subl
bts
lret
cltd
jns
ljmp
pop
adc
inc
loope
or
mov
mov
mov
and
lock
int
jg
js
repz
mov
gs
and
pusha
in
test
lock
pop
cmpl
cmp
in
mov
out
mov
popf
out
pop
pop
push
pop
shlb
and
push
xchg
outsl
aas
cmpb
ljmp
dec
and
movsl
xchg
leave
cld
cmp
jbe
popf
xchg
adc
pop
ja
and
loopne
movsl
cltd
dec
in
enter
jg
cltd
arpl
and
mov
pop
test
dec
das
les
arpl
cmc
pop
fs
int
arpl
pop
hlt
std
mov
or
mov
inc
notl
nop
push
jne
outsb
pop
lea
test
mov
push
xchg
call
jne
test
xchg
aas
lock
jg
xchg
and
cmp
stos
xor
push
je
out
sub
jmp
push
and
loop
ffree
mov
sarl
fcmovb
out
sbb
in
in
scas
scas
inc
in
inc
sbb
cmp
push
cmpsb
inc
les
pop
pop
add
outsl
push
push
mov
test
lea
into
lahf
dec
dec
test
adc
xor
jbe
sub
scas
lods
adc
cmc
mov
xor
pop
fwait
lods
aaa
ljmp
psubq
nop
mov
and
cli
cmpsl
fcomip
imul
mov
nop
shlb
sbb
notl
push
and
fs
or
shll
sub
addl
mov
add
int
daa
ja
outsb
push
fistps
push
add
sbbl
out
push
push
sbb
mov
loope
cmp
add
push
neg
bt
mov
cmc
rol
cmp
clc
pushw
popfw
call
add
push
stc
pushl
jmp
xor
imul
loop
jne
sub
leave
gs
cmp
pop
adc
out
dec
sbb
pushf
jbe
ds
pop
jle
or
jmp
add
rorl
lds
lds
js
pop
lock
adc
das
xor
int3
jbe
test
xor
fcomps
shl
jp
push
sti
jne
sbb
push
push
mov
push
sbb
daa
jge
xchg
inc
js
cmp
aad
stos
jb
push
pop
sub
fsubl
xchg
les
and
ja
rcr
sbb
neg
jmp
lea
ja
mov
clc
sub
movsbw
sar
add
pushf
mov
cmp
shl
mov
stc
pushf
movw
repnz
push
pusha
lea
jne
cwtl
movb
jmp
jmp
add
pushl
mov
mov
pushf
lea
jmp
xor
dec
in
fsubrs
push
icebp
mov
rcrl
in
jmp
push
imul
pop
push
bound
xchg
lods
mov
out
add
mov
xchg
cmc
outsl
cmpsl
inc
in
or
adc
adc
adc
or
xlat
movl
cmc
scas
pop
ja
scas
lds
pop
xlat
adc
daa
xchg
mov
sub
xchg
and
mov
fisttpll
hlt
or
call
cwtl
movb
pushl
lea
pop
mov
movsbw
pushf
pop
cwtl
lea
pusha
movl
jmp
fnstenv
mov
sti
test
adc
dec
in
out
mov
push
jp
add
xor
dec
pop
clc
or
leave
cli
sbb
and
push
insb
fidivrl
nop
sbb
mov
mov
fldt
inc
xchg
int
test
jnp
cmc
cmpsl
insl
jle
stc
cmpsb
xchg
insb
fisubrl
jg
test
jne
out
inc
push
jb
xor
dec
cmp
sub
mov
jge
icebp
ds
xchg
ret
pop
stc
pop
pop
aas
cmp
sub
test
fists
mov
xor
enter
cmp
shll
sbb
out
das
mov
test
xor
pusha
rorb
vmwrite
pop
adc
add
or
je
push
aad
mov
stc
shr
mov
data16
mov
aaa
cmc
mov
cmc
ljmp
jbe
pushf
lret
adc
ret
aam
arpl
push
xchg
or
fs
roll
ja
xchg
jae
mov
mov
je
jge
lcall
cmp
jp
jmp
test
pop
add
fucomip
mov
cmp
js
roll
jno
or
les
pusha
push
mov
lea
jne
shl
sub
rol
rcl
mov
shld
not
bts
sub
adc
or
not
mov
stc
pusha
sub
call
pushf
mov
lea
jb
call
movl
call
lea
jne
bswap
not
lahf
push
movb
pusha
mov
pusha
mov
mov
lea
movb
movl
pushf
mov
movw
pushf
pushf
pushf
pushl
ret
rcr
shl
add
rcr
test
mov
stc
jmp
pop
xchg
sub
cmp
repnz
ret
mul
leave
dec
mov
lock
mov
add
aas
or
xorb
sub
cmp
push
xor
pop
leave
aas
jno
loope
jns
lcall
lods
out
fwait
and
mov
lods
cmp
cmp
cmpsl
add
dec
xchg
jecxz
repz
stos
xchg
insl
mov
dec
je
test
add
ljmp
mov
pusha
mov
gs
test
mov
leave
or
xchg
sbb
es
pop
cmpsl
push
lds
and
pop
push
xchg
jns
mov
call
pop
pushf
lret
in
add
push
push
pushf
push
xchg
sbb
enter
push
mov
imul
sub
lods
xchg
movsb
enter
testb
hlt
repnz
mov
cld
mov
std
push
sbb
jns
mov
les
test
out
cs
movsl
jnp
pop
pop
ds
fisubrs
mov
xlat
sbb
mov
ficoml
test
lcall
or
lea
aam
pop
or
jle
pop
out
aad
mov
xor
repnz
or
adc
imul
xor
mov
fisttps
mov
cld
lods
xchg
add
stos
push
mov
and
adc
loop
push
movsb
das
in
xchg
paddq
or
inc
stc
lcall
jo
add
or
jno
mov
mov
push
cmp
cmp
jb
add
lret
jecxz
sub
mov
mov
scas
mov
aam
inc
or
xchg
insl
sub
or
aad
xchg
and
and
loop
xchg
cld
lods
fcoms
add
or
mov
mov
sbb
cmp
ljmp
mov
jle
test
imulb
out
sbb
stc
ss
flds
or
pusha
fisubrl
movsb
iret
sub
call
fcomip
adc
jo
sahf
cli
pusha
lcall
in
mov
push
in
jae
push
dec
xor
popf
cmp
inc
in
pop
jne
cli
loopne
mov
mov
inc
pushf
incl
mov
adc
lret
jg
add
fcoms
push
into
lahf
lret
mov
movw
jmp
add
rcr
pusha
test
setb
mov
pushf
test
call
and
xchg
iret
icebp
inc
popf
xlat
js
sub
or
cmc
pop
loope
ja
mov
xor
dec
sbb
lock
pop
enter
dec
in
mov
xchg
orb
aam
adc
jne,pn
fistpll
in
pop
out
lods
cmp
pop
push
adc
xchg
adc
xchg
jae
sbb
clc
pop
adc
sbb
inc
sbb
dec
int
pop
mov
insl
pop
test
ja,pn
fidivs
dec
mov
sti
icebp
or
xchg
ds
lret
int3
movsl
psubb
rcrb
movl
push
cmc
test
call
aas
lahf
stos
scas
xchg
adc
lea
flds
aam
or
mov
push
xlat
lds
xlat
mov
pusha
dec
outsb
fwait
xor
xor
mov
stos
arpl
cmp
loopne
sbb
pop
pushf
jp
cwtl
adc
sbb
aad
aaa
jne
xor
lea
fwait
xor
inc
inc
or
add
fstpl
mov
int3
push
mov
lahf
mov
sbb
or
mov
loopne
mov
pop
addr16
js
jb
add
hlt
aas
mov
test
mov
cmp
or
adc
in
icebp
pusha
shrb
sub
mov
xchg
mov
scas
mov
mov
sbb
addr16
arpl
xor
gs
push
adc
lods
xchg
out
insb
pushf
movl
lea
jb
stc
cmp
push
jmp
stos
loopne
scas
xchg
cmpsl
in
ljmp
and
loope
or
sbb
ficoml
adc
inc
ffreep
out
sbb
sub
test
inc
mov
push
pop
int
addr16
repz
dec
cwtl
cmp
xchg
sbb
adc
add
sbb
rcll
and
sub
mov
movsl
fwait
icebp
loope
jne
cs
mov
in
jl
push
lahf
push
clc
or
call
pushf
lea
jne
pushf
stos
push
lea
jmp
add
dec
cmc
test
stc
cmpsl
or
dec
push
mov
repz
lock
mov
add
cmp
imul
popf
loop
imul
lods
push
cld
outsb
add
sub
and
pop
std
mov
xchg
out
push
xchg
inc
test
jae
out
mov
pop
das
and
mov
cmpsl
push
ret
mov
mov
inc
pop
fists
orb
and
sub
mov
mov
dec
push
xchg
leave
mov
roll
and
push
sti
mov
lea
jmp
jmp
lea
add
xchg
xor
xlat
jmp
test
aam
cld
ret
cwtl
cltd
stc
mov
pop
loopne
out
out
push
dec
lret
inc
imul
int
pop
mov
adc
jecxz
mov
sti
cltd
mov
xor
frstor
stos
xor
jge
sti
mov
and
xchg
jbe
jnp
mov
pop
leave
jb
in
inc
sbb
call
jmp
add
fldcw
mov
mov
scas
testb
xchg
and
add
aad
aad
push
popa
ja
cwtl
cmp
xchg
gs
movb
hlt
loopne
out
lahf
cli
sub
xchg
fisubs
dec
cltd
xchg
pop
fidivl
mov
inc
punpcklwd
movsb
and
xor
xor
les
push
gs
ds
sbb
pop
sub
mov
arpl
scas
mov
dec
pop
cmp
test
cwtl
add
inc
adc
testl
jmp
add
pop
out
push
rolb
clc
or
push
shll
std
scas
cmp
adc
insl
adc
arpl
lret
xchg
dec
sti
jb
sbb
fistl
lods
add
xchg
pop
addr16
push
xchg
imul
push
xlat
or
dec
fwait
jbe
leave
mov
cwtl
adc
push
sbb
pop
sbb
pop
xor
push
pop
mov
fs
inc
mov
es
mov
dec
mov
out
cmp
mov
pop
test
into
fcom
adc
mov
cli
mov
fs
mov
cmpsl
scas
inc
cli
imul
js
and
mov
fistps
imul
lock
mov
into
lcall
fsincos
shlb
mov
xlat
jmp
push
pusha
sub
lea
pusha
pop
jmp
mov
neg
sub
pusha
sar
mov
rol
mov
bt
jmp
push
movzbl
lea
jmp
mov
pushf
mov
lea
call
push
pusha
push
push
adc
jmp
pushf
pushl
mov
jmp
stc
cmp
sbb
cld
fildl
fs
pop
adc
jmp
aaa
push
dec
jle
int
jmp
add
adc
xorl
xchg
ficoml
push
jg
cltd
imull
or
pop
fimull
aaa
fmull
clc
popf
dec
nop
sbb
imul
sahf
lret
sbb
bound
mov
repnz
mov
push
or
iret
sub
fwait
cmp
lods
aaa
shll
jl
add
push
rcrl
enter
or
xchg
mov
pushl
shl
pushf
call
jmp
add
dec
insl
popa
addr16
imul
ja
mov
cmp
lret
jl
ja
faddl
daa
inc
add
clc
les
adc
jg
mov
push
lock
loopne
std
int
mov
jecxz
pop
out
shll
movsl
mov
in
xlat
xor
mov
pop
scas
iret
ja
adc
dec
aas
jae
adc
test
popf
push
enter
test
or
mov
jl
jecxz
xor
mov
dec
repnz
pop
xorb
cld
sti
add
adc
inc
das
cltd
lods
mov
dec
inc
and
in
sahf
inc
in
subl
jge
push
clc
cmp
and
roll
sti
push
aas
mov
or
cli
jge
lcall
mov
adc
sbb
sti
and
inc
cltd
das
les
lock
roll
sbb
std
push
mov
add
ret
mov
or
outsb
push
popa
mov
mov
lods
sub
pusha
ret
add
int3
mov
and
mov
pop
jo
xor
loop
sbb
leave
std
out
out
push
subb
int
jecxz
jecxz
test
mov
pop
add
cltd
mov
or
sbb
inc
mov
clc
outsb
cmpsb
out
inc
inc
pop
out
jns
mov
aaa
jne
outsl
add
xor
push
pop
test
push
scas
inc
sbb
subl
lahf
imul
ret
cmpsl
cltd
addr16
jp
cmc
mov
loopne
cmpsb
cmp
call
pop
aam
enter
adcl
or
fwait
repz
in
fdivrp
je
scas
test
into
jmp
pushf
pushf
lea
ja
pushf
stc
call
movb
pushf
pushl
adc
pushf
mov
push
lea
jmp
movb
call
dec
xchg
jl
adc
scas
dec
xchg
jns
scas
lea
or
hlt
cmp
adc
lret
bound
xchg
repz
xor
pop
mov
dec
mov
dec
pop
lds
std
push
ljmp
lds
mov
mov
jg
ret
sahf
and
cmp
movsb
cmp
add
mov
push
add
fs
jne
push
stos
pushf
pusha
pushl
lea
jmp
lea
je
bts
cmc
add
shl
rol
test
and
sub
adc
shr
xchg
mov
inc
add
xor
add
mov
test
jmp
mov
and
mov
adc
repz
pushf
stos
popf
mov
push
test
ret
dec
adc
xchg
mov
sahf
rcr
aaa
pop
enter
fwait
hlt
js
add
xchg
pop
les
jns
sbb
cltd
movsb
scas
jno
mov
mov
pushf
mov
add
ja
lahf
movb
adc
fsubrl
loop
mov
idivl
outsb
sub
testl
imul
xchg
bound
mov
jo
push
inc
xor
stos
xchg
sbb
imul
sub
push
inc
lcall
cld
jbe
scas
orl
xchg
cmp
mov
aam
add
pusha
out
and
push
mov
je
sbb
sbb
in
fidivs
dec
jnp
sbb
and
push
xlat
push
add
cmp
int
in
fdivrp
pop
mov
in
push
or
sub
push
jae
popf
orb
adc
out
jp
pusha
xchg
dec
and
sbb
adcl
push
mov
lcall
subl
loopne
mov
cmp
pusha
pop
insb
es
xchg
aam
repnz
or
int
mov
pop
fcmove
jge
xchg
inc
jl
movsl
bound
xor
xchg
mov
pop
mov
shlb
pop
mov
in
scas
es
mov
ja
mov
sub
xlat
jg
jbe
sbb
mov
icebp
and
ljmp
xchg
hlt
rol
inc
jmp
clc
cltd
and
mov
push
in
js
lods
add
subl
mov
jmp
clc
sbb
pop
cmp
cmpsl
stc
in
jno
mov
adc
in
push
xor
adc
lahf
enter
sti
mov
add
jge
mov
popf
or
add
mov
js
std
mov
and
movsb
repnz
clc
add
jno
mov
fadds
xor
mov
and
pop
jae
mov
cmpsl
cmpsb
jmp
xor
rcll
mov
xor
clc
test
daa
ds
jecxz
push
push
rorb
pop
xor
test
out
mov
bound
and
in
cli
xchg
insb
xchg
ljmp
gs
inc
add
push
stos
cmp
cltd
or
js
xchg
repz
repz
ljmp
div
test
aas
js
and
push
js
xor
pop
shll
cld
lahf
push
cmp
sahf
or
aad
out
jo
int3
pop
ljmp
ret
sub
in
pop
inc
dec
mov
fistpll
push
inc
mov
std
jg
movsb
push
xor
bound
xor
es
dec
insl
jmp
popa
sub
popl
push
ja
ficomps
or
jb
outsb
push
loop
jp
jge
sahf
repnz
aad
pop
dec
rol
jae
mov
hlt
mov
jle
fwait
pop
insl
add
push
cltd
idiv
roll
xor
mov
mov
sarl
movsb
and
scas
mov
mov
loope
int
lcall
test
lods
add
lock
testl
in
pushf
or
push
popa
or
push
inc
imull
test
add
mov
mov
add
jno
std
dec
sub
push
jge
and
sbb
push
inc
aad
dec
jge
jbe
xor
xor
mov
movsb
adc
jae
lea
push
pminub
push
or
jbe
aas
jbe
inc
subb
fisttpll
xchg
jecxz
mov
push
rcr
jg
jle
jp
mov
ret
jne
arpl
ja
add
xchg
dec
mov
xchg
out
xchg
xor
fcomps
pop
lret
xor
imul
in
jo
add
mov
dec
sbb
mov
jo
jmp
lea
sub
push
dec
rolb
sbb
stos
lods
xchg
js
filds
sahf
jae
inc
jp
or
icebp
loopne
push
sub
filds
fildll
shlb
ljmp
je
sbb
mov
lea
sahf
xor
dec
dec
xor
int3
mov
pushf
ret
jne
mov
pop
cli
push
sbb
fisubs
enter
popa
ds
xor
jnp
mov
inc
les
xchg
add
add
fwait
ret
inc
not
inc
setns
jl
not
pusha
inc
sub
test
ror
xchg
movsbw
mov
setg
jmp
add
jl
pushf
mov
cmc
test
push
pusha
mov
pushf
lea
je
pusha
movl
add
mov
cmc
pusha
mov
cmp
call
pushf
lea
jb
cmc
cmpb
pusha
lea
jo
jne
pusha
shld
pushl
mov
jmp
call
jmp
das
mov
pop
mov
ss
pop
sub
mov
dec
xor
push
icebp
cmp
pop
in
shlb
cwtl
std
jae
xor
or
pop
and
adc
xchg
dec
test
outsb
inc
lods
jns
or
testb
test
fwait
cld
push
lods
cmp
jbe
loopne
dec
pop
jecxz
sbb
mov
jge
dec
cwtl
jmp
pop
fildl
mov
add
ficoml
aam
imul
rclb
add
or
jmp
enter
xchg
xor
and
pop
pop
adc
xchg
loop
adc
mov
shr
xchg
add
cmc
inc
fadds
mov
sub
and
mov
lods
adc
jo
sub
negl
fadd
stos
and
cltd
inc
push
mov
push
fxch
shl
jmp
call
mov
rclb
cmp
inc
sub
std
mov
cmc
cmpsl
loop
jge
adc
lods
packuswb
test
sbb
pop
sti
stc
test
cmc
add
push
pusha
movw
pushf
lea
jmp
jmp
cmc
stc
cmp
mov
jmp
stos
mov
lea
jmp
add
cmp
pushl
cmp
push
pushf
lea
jb
clc
pushf
pusha
cmp
push
pushf
mov
call
scas
negb
stc
sub
ja
psubusb
mov
sbb
rcrb
outsb
mov
cmc
mov
inc
shrl
xchg
lock
xchg
mov
pop
sub
mov
dec
sbb
pop
jae
sbb
sbb
imul
inc
daa
jns
jl
fisttpl
lret
sbb
adc
mov
xchg
xchg
aaa
or
dec
into
mov
aaa
mov
mov
jnp
mov
pop
sbb
not
fldt
sahf
idivb
jno
xchg
xor
sub
dec
outsl
sbb
lods
imul
pop
jle
push
iret
inc
inc
xchg
imul
stos
push
iret
enter
mov
mov
sarl
jnp
xchg
bound
inc
dec
pushf
into
ja
scas
cltd
pop
dec
loope
fs
jbe
sarb
nop
mov
inc
sbb
lds
and
ljmp
jo
loope
fs
insl
pop
mov
add
and
dec
cmp
sub
aad
repz
leave
adc
push
cmpsb
mov
out
enter
cmp
pop
mov
cmc
jg
mov
mov
cld
xchg
nop
pop
test
cltd
sbb
push
pop
idivl
sbb
nop
dec
push
lahf
add
inc
repnz
mov
jmp
sbb
divb
jp
mov
ja
mov
cmp
cmp
dec
sbb
popf
inc
repnz
hlt
daa
jno
and
add
or
jle
call
stc
inc
mov
mov
aaa
in
loopne
xchg
out
inc
call
push
dec
orl
aaa
xor
dec
decb
mov
shll
mov
je
mov
loope
lock
or
dec
push
les
push
adc
add
lret
addb
mov
xor
or
cmp
into
push
cmp
sub
in
mov
xlat
mov
enter
jb
jg
subb
and
mov
les
cmp
rcll
scas
daa
or
iret
test
stc
xchg
int3
push
mov
pop
cmpl
add
sti
stos
jb
fwait
push
sub
push
rep
push
mov
movb
lea
jmp
lea
jae
pusha
mov
call
sahf
int3
clc
addb
mov
je
bsf
fdivrs
iret
pop
jg
mov
mov
mov
xchg
adc
sahf
xchg
in
mov
push
es
cmp
or
inc
scas
divb
stos
das
mov
fstl
jp
jmp
pushf
xlat
sub
cmp
stos
or
aas
jmp
pop
dec
fstps
push
push
stos
cmpsb
scas
in
fmull
lahf
mov
add
mov
dec
lea
shld
and
mov
pushf
pusha
add
cmp
clc
pushf
movb
mov
stc
test
call
push
lea
ja
pushf
pushl
stc
clc
imul
pusha
test
cmp
cmp
add
pushf
pushl
push
lea
jmp
inc
xchg
hlt
addl
adc
mov
jb
into
scas
pop
jne
jo
or
xor
and
mov
sbb
inc
xor
out
lret
cli
testb
movsb
sbb
cmp
cmpsb
lods
icebp
xchg
insb
xchg
in
adc
stos
lods
fwait
ja,pn
cmp
lcall
out
ret
sbb
push
cmp
adc
popf
cltd
fcomi
and
out
outsl
ds
orl
sbb
jbe
bound
cmp
addr16
hlt
insl
sbb
cmp
testb
cmp
test
mov
pushf
test
pushf
pushf
push
lea
je
bts
not
bts
sbb
add
adc
cmp
bsf
mov
test
push
test
add
pushf
pusha
mov
setb
ror
mov
stc
jmp
push
pop
jne
xchg
sbb
cld
mov
cmp
dec
mov
xchg
mov
or
mov
or
cmp
aaa
test
push
fdivrl
popf
adc
inc
shll
and
inc
dec
push
mov
daa
or
jo
xchg
push
cld
hlt
add
aaa
xor
adc
mov
fmuls
cs
adc
test
call
cmp
or
cmovb
outsl
push
fwait
sbb
jle
cmp
frstor
cmp
aaa
cli
add
sbb
int3
lods
std
pop
push
mov
ja
stos
lods
lea
push
pusha
adc
pushf
jmp
push
es
addl
imul
mov
in
int
lods
outsl
inc
sbb
inc
ss
in
or
jmp
loopne
xchg
and
mov
out
movb
dec
cmp
repz
ljmp
sub
nop
mov
mov
push
mov
cmp
mov
insl
xchg
pop
test
dec
jle
jl
mov
and
inc
lock
mov
push
mov
cmp
stc
test
xlat
push
orb
cmpsb
cmpsl
fs
inc
lea
push
mov
lea
call
push
adc
pusha
pusha
call
cmp
jmp
pushf
movl
pushf
call
shll
xchg
or
xor
adc
cli
int3
push
dec
jmp
mov
sub
call
lahf
movsb
int
ds
add
mov
push
xchg
jno
sub
aaa
iret
imul
push
push
je
ds
dec
rclb
and
or
dec
push
in
lods
mov
repnz
mov
mov
dec
mov
mov
dec
mov
push
leave
aaa
xor
inc
repz
leave
test
call
call
pop
outsb
pop
test
xor
push
xchg
xchg
nop
lret
imul
loopne
pop
sbb
mov
ss
xor
dec
in
into
fs
push
mov
jno
into
hlt
out
inc
cwtl
or
rcrl
rcr
push
and
cmp
and
fcomps
mov
jnp
xchg
data16
xchg
lds
mov
dec
mov
ja
imull
mov
mov
xchg
les
aam
xlat
sub
push
loope
jl
and
and
cmp
cld
popa
jp
cmp
cld
add
or
ret
shlb
adc
je
insl
cmp
outsb
mov
mov
das
xor
xchg
adc
sub
sub
or
std
cmpsl
and
movsl
aad
push
into
orb
cmpsl
mov
mov
xor
scas
jb
pop
stc
icebp
mov
mov
sbb
mov
push
mov
test
inc
std
test
mov
test
clc
test
lea
jae
push
lea
je
cmc
jns
push
add
clc
jmp
mov
mov
xchg
sbb
and
push
mov
fs
fsubs
sahf
out
fadds
mov
xchg
mov
and
es
mov
dec
add
pop
xor
scas
cmp
xchg
orl
fcmovnb
or
and
mov
push
and
popf
imul
pop
int
lock
inc
test
andb
sub
xor
add
ror
jp
out
sub
bnd
push
call
int3
lock
xchg
xchg
ljmp
cmpsb
cmp
fsubs
stc
or
pop
or
adc
inc
dec
push
call
pop
and
push
in
mov
sarb
jmp
in
or
or
lahf
and
je
cmc
add
mov
aam
pop
add
loope
leave
fmull
add
fnstcw
add
xchg
add
mov
movsl
xchg
leave
les
dec
push
jecxz
sub
aad
add
data16
enter
arpl
decb
arpl
xchg
mov
jbe
sarb
sbb
jns
leave
sub
cmpsb
hlt
cmpsb
mov
cmp
lret
cmp
aaa
jp
jmp
or
lods
hlt
cmp
sbb
sub
test
or
xchg
lret
out
xor
std
fdiv
and
lds
lds
lret
jae
adc
stos
dec
add
jl
movsl
push
ja
xor
xchg
mov
mov
mov
push
leave
test
lcall
jp
mov
test
pop
mov
loope
adc
xchg
icebp
inc
xor
or
mov
adc
jb
mov
push
adc
vmread
add
bt
cmp
pusha
pushf
lea
jb
cmp
clc
push
call
dec
jge
mov
add
mov
pop
cld
mov
and
pop
pop
xor
jg
xchg
mov
aaa
ficompl
movsl
jle
lods
mov
add
push
or
and
cmp
rcr
shll
jnp
mov
cmp
lcall
je
insb
lock
mov
and
stos
sub
test
bound
add
dec
sbb
mov
cli
lcall
dec
setle
ror
sub
rol
add
neg
bt
rol
lea
jge
pusha
not
pusha
stos
call
test
dec
repz
fstps
iret
outsb
aad
push
or
pop
or
sbb
jae
cli
xor
mov
or
sbb
xor
and
mov
inc
mov
cmovne
shrl
bound
mov
adcl
or
sbb
in
xchg
add
mov
testl
pop
imul
jo
fisubl
icebp
mov
outsl
jp
ret
mov
stos
pushl
lea
jmp
loopne
in
mov
jle
add
je
xchg
les
loop
mov
xor
or
ffreep
xchg
add
xchg
mov
test
lcall
cmpsl
hlt
sub
stos
out
jl
mov
xor
or
pusha
jbe
je
ljmp
mov
cld
cwtl
lcall
std
sbb
jnp
rorb
in
jl
mov
mov
ret
xchg
movl
inc
repz
and
mov
xchg
pop
xchg
mov
push
pusha
pushf
lea
ja
call
pop
add
xchg
loop
mov
mov
jg
pop
popa
and
pop
mov
cwtl
inc
add
in
aad
outsb
outsl
pushf
shrb
cmp
int3
mov
fisttpll
mov
repz
popf
push
sub
outsb
cmp
jge
mov
clc
add
int
add
pop
out
aaa
jnp
xor
fsts
ffreep
sti
push
mov
imul
clc
sub
je
bt
add
pusha
pusha
movl
lea
jmp
cs
jmp
popa
dec
ficomps
add
push
movsb
sbb
es
loop
lcall
rclb
loop
add
adc
sub
mov
add
jecxz
or
mov
out
mov
mov
aas
data16
mov
out
and
push
shrl
fstl
repz
fldl
pop
aaa
call
jnp
popf
mov
mov
outsl
sub
mov
sarb
push
push
and
imul
testl
mov
mov
mov
arpl
leave
or
mov
dec
ds
out
repnz
cltd
xor
inc
dec
dec
dec
lds
mov
inc
jb
xchg
icebp
ficoml
mov
dec
xlat
mov
fwait
imul
lea
out
fcoms
xor
and
dec
ds
add
clc
hlt
pushf
push
xor
fisubl
xor
add
fwait
mov
xchg
mov
or
daa
and
test
push
divb
cmp
test
push
and
mov
test
ret
jbe
notb
mov
xchg
loope
outsb
aaa
in
outsb
or
jns
inc
xlat
lahf
xchg
pop
test
sbb
and
mov
in
mov
mov
push
jle
xor
mov
sub
and
test
clc
push
data16
xchg
mov
and
sub
cmp
inc
pop
jne
dec
call
and
insl
fwait
xor
imul
roll
out
imul
cmp
inc
out
repnz
xor
jecxz
cmp
push
fidivrl
loop
sahf
enter
iret
mov
enter
mov
outsl
aad
dec
jecxz
mov
lret
or
movsl
jbe
call
ret
dec
pop
imul
cmp
inc
cwtl
inc
add
and
jge
jmp
push
jle
mulb
push
adc
jb
insb
mov
ds
jne
mov
mov
ficoms
cwtl
sbb
mov
outsb
nop
ret
sub
es
xor
hlt
fildll
add
xchg
insl
xor
mov
ljmp
repz
mov
jb
pop
xor
dec
in
rolb
sahf
loop
xchg
cmpsb
repz
js
call
pop
jno
sarb
xor
pusha
push
pusha
ss
xchg
sub
and
mov
push
inc
sub
mov
cs
pop
mov
pop
ds
orb
add
adc
adc
lods
sub
mov
imul
les
mov
fs
xor
mov
add
cmpl
jp
or
testb
sahf
push
rcrl
xchg
mov
jge
sbb
es
lea
push
lods
xor
fisubs
jae
js
inc
cmc
rol
mov
push
cmp
mov
pop
addr16
pop
popa
sbb
sub
scas
mov
pop
mov
push
xchg
push
fsubl
xchg
cmpsb
jge
into
push
test
aam
or
loop
and
imul
push
fisubs
lret
notl
inc
mov
xchg
in
push
pusha
cmc
sub
mov
test
imul
mov
xchg
and
mov
sti
mov
sbb
call
pop
imul
into
mov
push
xchg
inc
ljmp
icebp
enter
pop
pop
aas
jbe
out
cmp
push
ret
jb
cwtl
cld
js
dec
aad
push
lret
cmc
js
ja
mov
pushf
inc
jmp
test
out
in
adc
mov
mov
inc
and
sbb
cmpsb
mov
out
adc
xchg
mov
xor
mov
test
repnz
jmp
mov
pusha
cwtl
pop
lea
movb
movl
pushf
push
mov
mov
mov
mov
pushl
ret
pusha
lea
je
cmp
stc
call
call
lea
je
pushf
test
stc
sub
cmc
cmp
pushf
movb
call
dec
movsl
popl
and
aas
jae
leave
inc
sbb
jle
push
outsl
and
sarl
pusha
fwait
testb
or
push
dec
icebp
and
dec
movsl
out
mov
clc
test
out
push
mov
xchg
fdivrs
adc
xchg
test
popa
cltd
mov
xor
adc
cmp
mov
lods
pop
dec
push
cmc
jmp
lds
push
out
pop
dec
sti
inc
arpl
and
or
ljmp
xchg
loopne
cmc
inc
xorl
add
mov
faddl
mov
jae
or
and
loop
mov
mov
push
cmc
pop
in
lahf
push
roll
xchg
in
sub
and
insl
push
iret
add
xor
imul
push
mov
xor
loope
xchg
fabs
in
cwtl
mov
js
fs
loopne
fcoms
mov
fistpl
repnz
cmpl
negb
jb
xchg
cmc
add
pusha
pusha
movw
push
lea
jmp
fmuls
std
test
sub
mov
inc
test
scas
push
xchg
fisttpll
fiadds
negb
cli
adc
into
dec
sbb
stc
js
sbb
movsb
test
movntq
fs
xchg
add
cpuid
mov
pop
scas
mov
scas
inc
jno
sub
psubb
in
xchg
push
out
test
inc
sbb
mov
jp
xor
xchg
mov
into
cmc
icebp
mov
push
imul
icebp
sub
call
fwait
gs
xchg
xchg
addr16
push
xchg
faddl
pusha
fcomip
jge
adc
cmpsl
and
out
mov
out
sbb
add
bound
outsb
insl
fwait
jecxz
push
ds
mov
push
test
inc
cli
test
mov
xor
dec
mov
orl
mov
sub
mov
js
mov
and
push
inc
insb
or
and
loopne
ret
leave
xchg
fistps
xchg
out
ljmp
in
push
sbb
jmp
pusha
pusha
pushf
rol
clc
cmp
call
cwtl
mov
test
sub
and
dec
pop
and
xorl
sub
je
aas
cmpsb
xchg
dec
cmpsl
test
cmp
pop
lds
sub
jnp
inc
lds
dec
scas
pop
and
lods
jp
test
xchg
scas
adc
std
mov
add
cmpb
adc
sub
hlt
cmp
push
or
int3
mov
xchg
mov
cmc
ds
xchg
loopne
std
mov
sbb
xchg
adc
dec
leave
lods
mov
ds
dec
add
mov
adc
mov
mov
xchg
dec
in
pop
add
ja
test
int3
movsb
rcll
insl
lods
push
ss
push
mov
mov
lret
jno
lcall
mov
repnz
cmp
fistps
jmp
arpl
sti
cmp
repnz
dec
mov
idivb
pop
mov
lret
xchg
mov
xchg
xchg
dec
jecxz
inc
inc
jae
push
inc
pop
xchg
ljmp
sbb
dec
addr16
or
jo
xchg
sbb
js
inc
in
mov
je
xchg
fstpl
dec
rcrl
arpl
cmp
inc
shll
test
sbb
stos
mov
pop
push
fnsave
stos
in
mov
add
cltd
iret
dec
mov
sbb
rolb
cli
call
clc
mov
std
decb
pop
mov
out
movsl
xchg
in
fs
jns
and
aad
add
aaa
mov
arpl
jecxz
and
push
out
pop
or
dec
jo
inc
xchg
xchg
sar
ss
add
push
scas
pop
arpl
jecxz
sbb
add
repnz
mov
in
adc
xchg
cld
inc
call
ss
jmp
mov
icebp
sub
adc
insb
inc
fists
dec
mov
xchg
stos
enter
es
xchg
loop
call
add
cmp
sbb
imul
cmp
jle
fldenv
push
dec
mov
push
out
hlt
pop
shl
add
xchg
adc
cli
insb
cs
push
popf
cmp
mov
fwait
es
dec
jbe
xchg
cmp
imul
mov
xchg
sbb
lock
jns
int3
mov
and
and
mov
or
xchg
sub
lds
setg
sti
xor
ds
leave
cld
jae
dec
popa
loope
and
mov
not
bt
clc
stc
movw
ror
test
jmp
cmc
test
push
shr
sar
dec
mov
aaa
sub
bswap
not
push
test
btr
lahf
push
aad
bts
not
rcr
push
shr
shl
sar
push
aam
add
mov
push
test
mov
mov
lea
je
push
xadd
setno
call
aad
inc
xchg
xchg
add
and
pop
or
andb
test
xor
or
mov
test
or
push
cmp
mov
fwait
ljmp
shr
sbb
jbe
sbb
scas
imul
jae
nop
mov
sub
mov
jnp
cmp
add
imul
movsl
aas
lahf
out
imul
fsqrt
push
es
adc
jecxz
lcall
je
push
pop
gs
cld
cmp
aas
fcoms
enter
inc
outsb
or
sbb
add
pop
push
or
test
call
lds
mov
mov
out
aam
cmp
aas
insb
xchg
aad
jmp
xor
enter
add
sbb
fimuls
pop
nop
dec
or
add
push
push
pop
add
push
xchg
aad
inc
pop
sub
push
mov
xchg
leave
neg
xchg
and
sti
outsb
mov
jl
sbb
and
outsb
add
push
push
fildl
mov
jp
lods
jp
cmp
aad
jbe
fidivrl
adc
scas
nop
movsl
shlb
cmp
insl
dec
iret
jg
xchg
into
out
lods
cmp
jae
add
cli
jae
loop
pop
cmp
icebp
mov
sarb
les
ret
mov
sub
lahf
and
aaa
push
dec
fiadds
jge
cmpsb
xor
inc
mov
insl
xchg
jecxz
mov
nop
and
inc
adc
insb
add
mov
loop
mov
pushf
pushf
mov
pushf
mov
pushf
movzbw
pushf
jmp
cmpsb
jnp
xchg
xchg
jo
sub
pop
add
push
sahf
cmp
inc
fsubs
std
jbe
jmp
and
leave
cmp
mov
cmp
jge
lods
hlt
cmpl
jns
lahf
roll
cmc
fs
clc
sbb
or
pop
loopne
xor
lock
andb
cmp
fisubrl
lret
mov
inc
addl
ljmp
sub
pop
pop
mov
jge
leave
xchg
push
and
fisttps
scas
jge
jae
cmp
les
lea
jb
push
jmp
cmpb
jmp
dec
sbb
xchg
movsb
paddsw
push
outsb
push
mov
xor
push
fcmovu
mov
repnz
pop
dec
ficoml
paddusb
jb
lcall
or
push
icebp
xchg
dec
mov
sbb
sbb
ficomps
loope
mov
loope
inc
movsl
mov
jno
mov
les
icebp
ds
mov
xchg
adcl
mov
icebp
clc
repz
or
aam
jb
les
xor
js
roll
sbb
dec
pushf
sbb
clc
cwtl
xchg
jg
in
inc
dec
insl
xchg
or
es
jbe
sti
aam
mov
mov
dec
pop
aad
push
adc
cmp
jl
lret
clc
mov
repz
nop
leave
inc
jb
inc
leave
loop
loopne
or
push
aaa
in
lcall
inc
cwtl
adc
jbe
or
inc
jecxz
nop
mov
jle
xchg
ret
sub
pop
mov
jg
sub
stos
jmp
cmp
xor
shll
xor
outsb
fildl
xchg
bound
jge
jo
mov
adc
mov
mov
cmpsb
cmp
push
sub
dec
dec
xor
inc
mov
jl
repz
inc
mov
outsb
and
pop
xchg
dec
out
jne
adc
push
fsubr
mov
in
fidivrl
jle
xchg
adcl
nop
push
add
mov
and
mov
fsubrl
repnz
or
aaa
rcr
mov
adc
pusha
test
shl
mov
test
stc
repnz
pushf
lea
jne
bswap
not
bswap
call
push
pushf
jmp
stc
push
jmp
inc
ja
cltd
xchg
popa
inc
arpl
jp
insl
cmpsl
mov
test
push
xlat
les
mov
cmc
mov
movb
xor
cmp
scas
dec
sub
xchg
xor
pop
jecxz
popa
mov
inc
mov
pop
sub
pop
or
out
sbb
out
rorl
and
inc
cs
dec
or
cs
stc
sbb
pusha
hlt
push
pcmpeqd
inc
and
sahf
push
push
add
je
and
xchg
lcall
out
pop
adc
mov
ja
fbld
scas
add
lock
inc
addr16
test
push
pop
fdivrs
fldl
into
test
fs
xor
call
jge
sub
aaa
or
xchg
out
repnz
shll
push
cli
dec
repz
cmp
adc
dec
dec
xchg
stc
mov
mov
iret
and
rorb
jne
xchg
add
add
dec
js
das
push
adc
movnti
and
es
mov
sbb
aam
out
mov
cmc
pusha
xchg
pop
les
divb
fimuls
mov
add
sub
mov
pop
pop
adcl
fistpl
push
pusha
jb
push
jns
imul
sarb
imul
ficompl
sahf
fidivl
or
jle
hlt
inc
mov
sti
int
jle
adc
dec
outsl
adc
out
xor
call
add
add
add
add
add
add
sbb
call
jo
add
sbb
lock
mov
sbb
add
add
add
sbbb
les
mov
add
add
add
add
ret
sbb
add
sbb
jo
add
or
add
lds
iret
jo
add
or
add
lds
xlat
jo
add
lds
fbstp
add
mov
and
sbb
out
sbb
add
add
add
rcrl
sub
sbb
out
jo
add
mov
add
lds
divl
add
sbb
pushl
add
lds
pop
jno
add
ret
dec
lds
sbb
add
add
add
sbb
push
lds
movb
lea
ja
pushf
movb
call
dec
mov
stc
clc
ror
stc
neg
clc
bt
stc
rol
pushf
test
pushw
popfw
pusha
pushl
call
pop
or
pushf
xchg
lods
movsl
cmp
pop
jnp
mov
pop
stos
xchg
in
rcl
dec
scas
inc
insb
aam
sub
xor
cmp
mov
dec
pop
add
fs
std
cs
lret
cmpl
xorl
cmp
jecxz
hlt
pop
hlt
adc
jae
and
add
int
hlt
sahf
cmpsb
or
das
rorb
cmc
sbb
inc
lret
pop
or
clc
mov
adc
inc
add
out
xor
adc
fs
jne
call
pushf
pushf
lea
ja
pushf
bt
cmc
imul
stc
cmp
test
jmp
or
popf
xchg
xchg
sub
mov
icebp
inc
add
stos
ret
shll
scas
mov
cmp
pop
js
add
stos
in
jo
adcb
or
xor
push
notb
push
sbb
out
insl
pop
add
and
cltd
jl
cmp
pop
stos
test
imul
jb
mov
outsb
cwtl
addr16
inc
js
int
ljmp
push
cmp
and
repnz
adc
rcrl
aam
fistps
scas
pushf
pushf
lea
jne
cmc
call
push
push
mov
pushf
pushl
ret
lea
jne
or
sub
mov
bt
rol
sub
shld
stc
shl
rcl
mov
pusha
sub
test
pushl
popl
cmc
pushf
cmp
pushl
pusha
pushf
pushf
lea
ja
neg
sub
bswap
add
test
mov
bt
shl
mov
test
pusha
cmc
pushf
repnz
jmp
cmp
call
pop
sbb
sahf
xchg
adc
in
sub
cltd
and
test
inc
sub
mov
imul
lret
ds
loopne
push
or
mov
xor
xchg
push
loop
sbb
clc
dec
mov
imul
imulb
sbb
push
mov
movsl
mov
cmp
and
in
mov
arpl
pop
push
cli
xchg
es
enter
push
inc
arpl
or
lock
xchg
sbb
mov
jmp
dec
inc
cmp
pushf
cmp
mov
daa
sarb
jp
jl
pop
and
inc
pushf
jg
xchg
jo
outsb
xlat
push
jno
dec
push
fstpl
cwtl
jno
push
jmp
outsb
sub
xor
ret
mov
test
inc
pop
mov
repz
test
movsl
or
add
call
pop
and
out
xchg
mov
mov
mov
jmp
cmp
inc
in
mov
test
add
lods
inc
icebp
dec
leavew
fwait
jns
sub
add
aad
mov
aas
imul
je
add
inc
movd
and
scas
jb
xor
inc
add
fdivrs
js
xchg
cmp
insb
scas
dec
dec
cmp
pop
popf
clc
fcoms
pop
and
mov
dec
ret
xor
add
fdivp
jns
add
add
popa
and
arpl
sbb
in
inc
xor
popa
xor
jg
xchg
test
dec
inc
or
sub
pusha
test
adc
mov
loopne
aaa
pop
outsb
lret
nop
xor
clc
stc
mov
aas
add
js
ljmp
add
or
mov
std
cwtl
jmp
mov
gs
jg
leave
aaa
cmp
xchg
jns
sbb
sbb
aad
cmpsl
push
loope
clc
in
arpl
xchg
dec
push
or
push
dec
xchg
call
gs
add
and
sbb
xor
loope
fbld
shr
fbld
jg
outsl
mov
or
test
rorb
xchg
les
not
sub
ror
mov
dec
not
bt
call
fcompl
xchg
mov
imul
jnp
push
imulb
mov
xchg
nop
loope
cltd
cli
cs
sbb
lods
or
sbbl
hlt
fldl
inc
add
cmp
add
push
cltd
mov
inc
mov
add
pop
push
push
pop
icebp
xor
sbb
lods
scas
call
fldt
jno
and
xor
dec
jecxz
popa
test
mov
cmpb
daa
mov
mov
fsubrl
aam
and
scas
cmp
sub
and
dec
idivl
cmp
sti
mov
in
sbb
shrl
sbb
inc
sub
sub
pop
xor
rolb
or
adc
inc
sbb
cmp
roll
mov
mov
push
test
fldenv
call
repnz
imul
fistl
push
repz
push
inc
jno
test
cwtl
lds
js
inc
xor
inc
mov
and
dec
sub
addl
pusha
xor
andb
xor
push
pushl
and
pop
xchg
out
mov
sahf
aaa
xlat
outsb
xrstors
adcl
repnz
dec
fcmove
in
mov
cli
pop
jl
pop
or
dec
imul
push
dec
test
shl
mov
repnz
outsl
fstl
jno
fwait
inc
das
dec
cs
jp
pusha
cld
jae
push
lcall
outsl
arpl
inc
insb
insb
outsl
arpl
popa
scas
lcall
jg
xchg
and
shrb
sbb
inc
inc
das
inc
cmp
push
in
mov
or
xor
xchg
inc
push
jmp
lcall
lods
out
in
inc
imul
sbb
ja
mov
in
inc
sub
cltd
mov
cmp
enter
jp
add
out
pop
jge
repz
sub
inc
or
js
daa
xchg
jns
inc
jmp
xchg
or
jg
loop
mov
inc
xor
sbb
jbe
fsubl
call
ds
push
das
das
push
aad
inc
cmp
imul
cli
cs
dec
sbb
add
cmc
sbb
inc
out
jge
sbb
or
dec
pop
pop
and
mov
add
jecxz
push
add
pop
fs
cmc
icebp
inc
add
add
jmp
add
pop
repnz
iret
mov
popa
fwait
or
jb
mov
xor
push
adc
mov
mov
jle
jnp
sbb
enter
fstpl
xchg
fistpl
lret
lods
and
cmp
dec
xlat
test
mov
shl
jmp
stos
inc
xchg
les
push
shll
adc
mov
jb
loop
add
sbb
pop
cli
or
cmp
lock
lret
cmp
mov
pushf
cli
cwtl
dec
in
outsl
jno
push
fsubrl
call
out
mov
xorl
mov
fstl
cmp
ss
adc
dec
push
leave
bound
add
mov
xchg
nop
or
push
jno
mov
not
movsbw
sub
test
and
shrd
stc
lea
bt
call
pusha
call
insl
xor
test
xor
jnp
decb
dec
ljmp
add
inc
mov
shl
fwait
loopne
shll
ja
fildl
dec
xchg
shl
push
addb
rorl
pop
repnz
push
push
movsb
fcos
jb
lret
push
lods
mulb
roll
int3
add
fdivrl
adc
jns
ljmp
iret
inc
repz
adc
int3
mov
test
cmp
mov
mov
mov
jb
or
xor
repnz
enter
adc
aas
add
loope
mov
lea
jmp
cmp
push
sti
das
pop
xchg
sub
js
std
cmpsl
inc
adc
sub
mov
aaa
loope
or
aaa
movsl
mov
cmpl
dec
jl
or
xor
aas
xchg
inc
pusha
push
fmull
stos
scas
insl
or
faddl
xchg
or
and
push
and
push
jmp
lock
pop
aam
mov
sub
scas
pusha
dec
cmp
xor
jmp
push
mov
repz
stos
jmp
mov
adc
divl
jmp
cltd
stos
xor
pop
or
mulb
repz
push
imul
or
arpl
mov
pop
into
sub
inc
fstl
aam
leave
ja
push
xchg
cmp
inc
mov
sub
ds
sub
inc
and
pusha
inc
pop
add
adc
or
xor
mov
lea
call
pushf
movb
jmp
lea
jmp
call
setno
call
dec
sbb
data16
sti
int
out
fwait
mov
notl
movsb
mov
pop
das
loope
scas
cli
and
mov
or
in
es
ljmp
outsl
inc
push
out
and
das
push
xor
and
mov
repz
pop
dec
jecxz
fmul
fists
icebp
stos
in
xor
cmpsb
push
add
lods
jecxz
enter
repz
shlb
push
call
fsts
mov
enter
mov
lods
data16
sub
dec
arpl
cld
addl
ret
jge
aad
inc
stos
push
cmpsl
aaa
bound
aas
movsl
xor
cli
dec
xor
scas
jnp
push
ret
cmpl
pop
mov
mov
jmp
pop
mov
jnp
pusha
outsb
addr16
and
je
addr16
popf
push
sub
outsl
and
mov
cwtl
shll
jae
popf
aad
int3
fs
cmp
add
push
mov
arpl
out
push
imul
pushl
lea
jne
clc
rcl
mov
das
xor
call
lea
push
push
push
repz
sbbl
xchg
xchg
cmp
and
cmpsl
pop
push
in
in
or
test
mov
mov
dec
push
dec
mov
leave
lods
mov
shl
push
dec
and
jmp
jge
sysret
mov
movsl
push
pop
dec
pusha
out
test
negb
xchg
lods
jg
pop
sbb
bound
aas
lea
lods
jo
test
sbb
aaa
dec
ret
lock
test
lcall
add
loope
or
jmp
push
pusha
pushl
movl
pusha
mov
mov
pushf
mov
mov
pushf
mov
pushl
ret
lea
jne
lahf
das
xor
or
mov
rol
clc
rcl
add
pusha
or
cmp
rcl
mov
jmp
jbe
in
push
mov
pop
push
inc
in
dec
jae
dec
sub
outsl
popf
hlt
mov
movsb
lods
jle
pop
iret
bound
sbb
cs
or
fucompp
inc
jbe
mov
cli
cltd
mov
adc
sbb
and
aaa
loopne
pusha
mov
jno
jbe
scas
lock
mov
rcl
xchg
movsb
out
cltd
fs
sub
mov
sbb
push
mov
in
loopne
roll
sub
ret
dec
and
dec
cwtl
fwait
test
imul
idivl
and
pop
xchg
je
jl
mov
dec
pop
shlb
in
std
aas
cmp
or
sbb
sub
sub
mov
aas
cmpsl
or
mov
lods
mov
fcmovne
in
jp
or
loope
pop
fnstenv
stos
scas
mov
std
jne
xor
iret
int3
je
orb
rcrl
mov
cmp
jnp
push
and
repnz
inc
fsubl
jl
mov
pop
repz
pushf
int
mov
aaa
xchg
sbb
imul
push
or
lods
push
in
xlat
mov
rcrb
mov
addl
add
lods
sub
dec
sbb
out
mov
push
idivl
pop
loopne
int
cwtl
ficomps
or
and
fdecstp
jne
pushf
adc
pop
sbb
jge
push
pop
xor
jne
cmc
lods
cmp
xchg
aaa
jmp
ljmp
stos
push
inc
call
mov
xor
cmpb
mov
cmp
adc
xchg
add
pop
push
xlat
sub
insb
hlt
jmp
out
mov
addr16
xor
jl
movsb
fisubs
mov
mov
cwtl
into
pop
test
and
pop
fists
xchg
add
mov
xor
pop
jg
xor
jne
xchg
mov
ficompl
dec
mov
inc
jne
stos
imul
test
movzbl
movb
not
setnp
lea
push
movzbw
lea
jmp
pushf
jmp
jmp
ret
imul
push
lods
andb
enter
arpl
and
je
sub
in
jle
xchg
sbb
xchg
sbb
push
jnp
mov
test
daa
and
push
in
int
ja
push
ss
jb
or
dec
mov
popa
lret
cmpsl
gs
popa
add
xchg
xor
mov
adcb
out
pop
ficoml
outsb
dec
jmp
sub
iret
mov
push
les
jo
jge
pusha
cs
lea
sti
and
dec
inc
outsl
mov
xchg
pop
or
mov
pop
push
mov
adc
movsl
add
pop
inc
movsb
out
mov
pop
add
cmc
sbbb
cmpsl
pop
push
push
test
and
rclb
sub
je
add
jle
mov
lods
cmp
push
jmp
and
adc
adc
adc
addr16
out
sub
push
sbb
xchg
push
lahf
sti
je
jge
ret
add
mov
dec
movzbw
sub
shld
mov
cmc
pusha
pusha
cmc
sub
pushf
repnz
mov
jmp
adc
or
test
xchg
inc
out
push
cmpl
xor
sarb
loopne
frndint
mov
inc
inc
add
pop
mov
subl
pop
scas
jne
je
dec
ss
pop
insl
das
adc
xchg
mov
mov
fdivrl
sbb
insb
push
popa
mov
add
xlat
cmp
mov
in
jecxz
push
lods
lret
lea
fpatan
aas
or
mov
adc
loope
mov
dec
mov
js
mov
fidivl
shl
es
test
bswap
bswap
movb
pushf
pushf
pushf
mov
push
pusha
mov
cwtl
lea
movl
pushf
call
pushf
test
mov
jmp
jmp
out
xlat
insl
test
mov
outsb
insb
sbb
imul
push
mov
and
clc
xor
push
js
xor
xchg
cmp
xlat
jno
add
mov
ljmp
rolb
mov
insl
add
cltd
xor
out
and
adc
dec
add
sbb
lock
loope
aaa
mov
and
pop
jno
adcb
mov
leave
popa
inc
insl
dec
aam
nop
das
cmpl
test
shl
xchg
in
fistpll
shll
imul
add
add
push
mov
ret
les
mov
sbb
xchg
dec
and
pop
clc
leave
push
int
add
inc
inc
inc
mov
mov
mov
cltd
dec
adc
mov
pop
push
push
push
arpl
add
push
dec
push
mov
lods
enter
ds
pop
in
jns
scas
pusha
xor
outsb
or
ja
mov
mov
sbb
sub
leave
xor
lods
pop
xchg
nop
push
pushl
cmp
adc
sbb
or
add
sahf
aaa
in
xchg
cltd
fildl
push
aam
or
mov
clc
pusha
or
jns
fs
inc
pop
and
mov
jmp
mov
scas
test
loop
ljmp
in
push
loop
ljmp
push
sbb
pop
mul
and
sbb
iret
xchg
add
in
in
adc
and
jl
jecxz
jns
movsb
addb
into
mov
loopne
or
pusha
int3
insl
scas
mov
repz
gs
cltd
dec
cmc
mov
xchg
lock
call
xchg
outsb
push
mov
les
or
mov
icebp
adc
shl
push
dec
dec
xor
or
imul
jmp
ljmp
cmp
mov
and
push
push
in
sbb
call
xlat
jne
test
xor
sbb
lods
rclb
lds
mov
cmpsl
insb
sti
xchg
mull
test
cli
arpl
fmul
inc
xlat
sbb
js
pop
xchg
cli
or
and
rolb
xchg
sbb
icebp
adc
mov
mov
es
mov
lcall
ret
bnd
cmp
in
ss
mov
fnstcw
loope
add
mov
clc
call
xchg
daa
call
test
jmp
cmp
push
lea
jb
bt
cmp
pushf
movb
movb
lea
jae
sub
cmc
sub
mov
mov
rcr
bt
mov
shrd
bt
sar
mov
test
bt
sub
pushf
jmp
bt
call
adc
dec
sbb
leave
dec
roll
push
adc
push
adc
mov
mov
fcmovu
cwtl
mov
adc
fimuls
into
or
out
test
mov
jo
orl
adc
clc
mov
shlb
hlt
rcll
mov
shrl
lock
xor
sbb
lods
pushf
imul
sahf
clc
mov
jecxz
xchg
sbb
in
xchg
stc
add
mov
pusha
mov
cmp
mov
dec
lds
imul
outsl
les
mov
sub
loop
clc
dec
test
mov
rcl
pop
push
in
cmovg
pushf
add
mov
dec
orb
lods
cmc
into
dec
data16
push
add
jbe
andb
inc
scas
jge
fsubrp
gs
lea
jae
test
jle
test
test
xor
pushf
jmp
dec
jmp
jno
dec
pushf
std
enter
xor
repnz
sarb
sahf
push
sysenter
jbe
jnp
cltd
mov
mov
adc
test
push
mov
cmc
jge
iret
lods
js
roll
cmp
inc
in
jns
andl
test
es
shlb
jb
add
xor
pusha
int
jo
jno
mov
push
stos
insb
int
push
jb
dec
out
cmp
loope
test
fimuls
mov
leave
pop
or
cmp
or
das
mov
jnp
xor
push
imul
push
or
xor
cmpsb
xchg
xor
push
adc
xor
lcall
loope
cmpb
xchg
mov
mov
lahf
jb
mov
lods
sbb
repz
mov
aam
mov
into
ret
inc
insb
int3
push
mov
gs
or
mov
or
add
dec
aas
lods
in
mull
and
inc
lock
outsl
loop
les
adc
xchg
jbe
sbb
sti
aas
or
mov
pop
xor
xchg
pop
xor
push
sbb
test
mov
mov
out
push
add
pop
popf
jp
mov
inc
aam
add
push
clc
in
sub
cmpsl
mov
fists
cmp
xchg
dec
xor
adc
sub
jg
icebp
mov
dec
gs
rcr
call
jno
jle
fistpl
ds
add
ljmp
fnstsw
loope
lcall
test
call
cmpsl
sub
xchg
lods
sub
cmpsb
out
cld
stos
sbbl
jae
add
adc
xchg
rorb
mov
jmp
inc
mov
int3
adc
icebp
cmpl
ss
sub
nop
sbb
clc
lock
push
and
xchg
clc
test
and
adcl
subl
or
push
stos
cmp
xor
es
pop
insl
xor
sub
mov
cmp
dec
je
jns
pop
dec
es
cld
sub
mov
roll
pop
add
jl
inc
cmc
negb
mov
jecxz
cwtl
leave
cmp
xchg
xbegin
std
jp
mov
daa
xchg
jle
ret
subl
out
ljmp
les
jecxz
enter
jo
add
jmp
mov
mov
mov
jg
mov
gs
imul
out
push
js
and
fstps
shlb
arpl
idivb
stos
adc
push
adc
adc
test
xchg
add
mov
sub
adc
jge
gs
mov
jnp
jle
cltd
jle
sbb
xor
je
dec
in
mov
arpl
push
in
push
int
mov
dec
mov
dec
faddp
push
cmp
insb
sahf
mov
daa
inc
mov
sub
int
dec
mov
icebp
mov
push
push
and
lret
mov
cmp
dec
jg
push
xchg
add
push
sub
repnz
pop
shll
or
adc
pop
inc
fstps
sub
dec
push
or
jg
enter
daa
outsb
cltd
sahf
cmp
jae
scas
lods
cwtl
jne
dec
fildl
sbb
sub
cmp
sbb
dec
cmpsl
data16
rcrb
fsubr
clc
push
out
test
aas
movsl
bts
fwait
pop
jl
xchg
jae
xchg
lods
jno
scas
imul
aad
outsl
dec
or
sti
xchg
jl
push
loop
xchg
les
stos
mov
pop
int3
mov
push
mov
or
rorb
lcall
out
icebp
pop
ja
sahf
mov
imul
pushf
lea
jae
or
bswap
neg
xor
mov
and
bt
add
mov
test
btr
push
add
mov
jmp
pushf
lea
ja
call
roll
test
out
add
and
inc
dec
xchg
das
idivl
xchg
mov
fs
pop
and
inc
mov
push
outsl
inc
shlb
jmp
xchg
fldenv
inc
shr
fildll
leave
and
fisttpl
sub
leave
add
jo
out
xor
pop
sub
ret
xchg
lret
push
mov
bound
mov
jo
sbbb
icebp
add
pop
lds
or
out
xchg
ret
addr16
pop
push
dec
mov
mov
enter
or
inc
ja
dec
add
call
sub
fmull
adcl
dec
inc
jne
jb
jl
popf
inc
xchg
sbb
std
or
popf
fimuls
cmp
fldcw
daa
cmp
add
cmpsl
lcall
dec
int
dec
add
xchg
jecxz
push
scas
scas
cmp
jge
ds
fimuls
jae
add
les
fldt
cwtl
cmp
jb
cmpsl
xchg
ja
adc
adc
sbb
or
adc
in
jnp
scas
jl
xchg
mov
sbb
adcb
mov
gs
idivl
xchg
ret
dec
cs
pop
ja
dec
in
jl
test
aas
dec
sti
call
mov
and
repz
mov
add
adc
nop
mov
shrl
in
insl
mov
daa
xor
mov
jns
push
ficoml
test
out
cmp
mov
movsl
loope
pop
in
mov
xchg
es
adc
mov
jecxz
inc
idivl
fdivs
sahf
xor
adc
pop
or
adc
test
jmp
adc
lock
dec
dec
outsl
mov
jp
stc
cmp
aad
imulb
das
int
roll
pop
nop
pop
es
mov
cmc
daa
xor
testb
loopne
jb
into
xchg
sti
test
mov
out
mov
sbb
pop
mov
gs
enter
insl
fsubrl
iret
xchg
leave
jns
add
and
xchg
fld
jbe
dec
xchg
pop
in
xchg
push
pop
mov
sti
stos
push
mov
jb
ljmp
test
jmp
fdivrl
or
mov
xor
movsl
sbbb
jnp
cltd
scas
jb
mov
pop
jbe
and
cs
adc
data16
dec
lods
cmpsl
fstpt
sahf
test
mov
jne
add
js
loop
lods
pusha
cmp
std
stos
and
xchg
mov
nop
cmc
jecxz
mov
adc
and
pop
adc
push
sub
stos
mov
mov
out
shrb
push
jge
add
ja
fs
call
call
stos
movb
mov
lea
jmp
pushf
pusha
lea
je
jmp
lea
jae
pushf
not
not
mov
movzbw
pushf
mov
shl
mov
jmp
mov
lock
cmp
xor
in
xor
and
xchg
dec
dec
jnp
adc
addr16
daa
lods
add
mov
cmp
dec
jo
lret
push
aam
adc
sub
lds
push
fs
enter
xor
pop
inc
cmp
test
shlb
repz
sub
or
and
imul
pop
mov
int
sbbl
lods
jo
sbb
and
xorl
jbe
pop
insb
sub
shl
cmp
das
pop
mov
jo
xor
mov
mov
xchg
and
adc
dec
dec
xchg
iret
mov
test
mov
test
pop
sbbb
pop
adc
mov
sub
loopne
push
cs
hlt
and
das
mov
enter
xchg
jbe
add
add
pop
imul
sbb
mov
out
cmp
popf
add
mov
xchg
jbe
js
insl
xor
jns
shlb
pusha
mov
push
pop
je
fisubs
or
xchg
imul
dec
js
xchg
or
bound
xor
mov
test
fmul
popa
or
xlat
out
mov
inc
mov
mov
dec
iret
add
and
jns
push
and
out
inc
jge,pn
fisttps
outsb
sub
lods
lods
insb
out
jo
ret
push
push
xchg
enter
xchg
add
pusha
in
jl
std
loope
jae
mov
dec
fadd
stc
mov
push
sub
push
sub
pop
in
loopne
andb
aaa
and
hlt
xlat
cld
cmp
or
pop
mov
dec
out
or
testb
cmp
loop
adc
insb
scas
rcll
dec
lods
mulb
subl
push
lret
xchg
mov
test
pop
cmpl
or
xor
inc
cmpb
xchg
icebp
out
and
jns
push
cmp
inc
scas
xchg
dec
enter
gs
cmpb
dec
lods
stc
cs
dec
add
push
and
test
mov
dec
pop
mov
lods
or
icebp
mov
test
xor
inc
push
and
jbe
pop
das
dec
jno
mov
lods
imull
adc
orb
cmp
test
arpl
lods
sub
adc
mov
das
lret
push
in
sub
imul
daa
sub
adc
inc
iret
fmuls
lret
repz
insb
mov
or
mov
fs
inc
or
insb
inc
xor
orb
mov
addr16
mov
dec
lret
inc
add
push
ret
sub
inc
sbb
mov
imul
inc
mov
or
xor
adc
pop
mov
xchg
cmp
jecxz
mov
lock
push
cld
push
mov
inc
mov
repnz
mov
push
sbb
jb
sbb
sti
out
and
lret
xor
mov
push
or
mov
stos
push
adc
pusha
xchg
jo
daa
jge
clc
push
xor
js
sti
xchg
mov
cltd
das
pop
xchg
xchg
stc
jae
enter
mov
mov
leave
aaa
xor
jns
outsb
dec
xor
lret
mov
mov
mov
fdivl
fldl
xchg
pop
je
icebp
int3
jecxz
imul
bound
jo
push
imul
fsqrt
push
sub
dec
dec
jl
sbb
scas
insb
dec
neg
movsb
xorb
push
imul
jecxz
inc
lcall
enter
adc
pop
int3
out
mov
sar
je
std
notl
mov
xor
inc
and
ret
and
xor
das
xor
sub
cmp
sbb
mov
xor
fstp
jle
lcall
adc
imul
fdivs
xor
out
sbb
pop
bound
adc
jo
or
cwtl
push
lahf
mov
xor
ret
fs
or
dec
das
test
push
xchg
pop
xor
icebp
jbe
xor
pop
into
xchg
adc
fptan
movsl
lock
ja
test
push
mov
dec
fisubrs
mov
lods
aaa
jl
fnsave
and
push
adcl
testl
add
dec
dec
cld
xchg
mov
lret
ss
pop
or
les
jno
and
xchg
or
ds
scas
and
repz
stos
in
das
cmpl
jb
and
aam
enter
les
aas
xchg
cmpsl
pop
push
or
dec
je
mov
dec
lods
cmp
jnp
pop
mov
adc
inc
sub
mov
and
test
fsubr
out
add
insb
pop
xchg
ds
mov
outsb
loopne
daa
sahf
jae
divb
sub
rcrb
sarl
test
loopne
adc
cmp
pop
jns
mov
cmp
cmp
inc
call
popa
test
shlb
das
xor
std
pop
mov
pop
inc
mov
or
xor
lock
aam
jecxz
mov
mov
cmp
mov
and
xor
mov
jne
add
in
inc
std
jg
xor
idiv
cli
pop
pop
jecxz
cwtl
pop
dec
clc
add
xor
mov
jl
push
sub
daa
ret
dec
mov
dec
enter
mov
int3
mov
push
sti
dec
dec
cmp
das
xchg
push
das
outsb
ljmp
push
mov
sahf
xor
pushw
or
pop
test
adc
sub
adc
daa
nop
xor
aaa
ljmp
mov
shrl
aad
dec
cmp
jmp
xor
or
leave
push
dec
ljmp
add
ret
das
subb
sub
rcr
mov
cmc
dec
add
fldcw
sub
out
adc
xor
cld
pop
out
in
cli
sub
mov
inc
out
jle
js
pop
cs
and
sbb
and
mov
mov
test
ja
or
shll
xor
cltd
in
or
test
lods
pop
in
cmp
in
mov
incb
enter
sub
ja
bnd
jmp
jmp
lods
repnz
ja
mov
xor
fs
or
adc
or
fisubrs
repz
add
lds
sub
stos
push
sahf
push
pop
lock
xor
je
mov
and
cmp
xchg
add
push
mov
shll
adc
cmp
cmpb
aaa
aaa
insb
pusha
cli
xor
data16
lock
in
jge
das
aas
pop
cmp
xor
sbb
lods
and
pop
dec
sub
das
xchg
nop
out
fsubr
or
sbb
cmp
sub
or
add
int3
in
push
pop
and
push
add
int3
adc
js
push
cmp
icebp
leave
lds
iret
mov
mov
mov
aas
dec
inc
je
int3
flds
das
adc
lcall
push
jp
dec
sub
pop
sbb
push
mov
leave
pop
sub
out
in
push
mov
ljmp
rolb
xor
mov
icebp
cmc
mov
push
popf
cs
cli
dec
sbb
lds
pop
pop
and
pusha
sti
aas
lods
sbb
hlt
arpl
mov
dec
inc
or
jle
push
xor
dec
mov
lahf
dec
stos
outsl
pop
mov
in
mov
insb
clc
mov
xchg
push
sbb
xor
scas
fistps
insb
adc
jp
inc
mov
lock
pop
add
les
bnd
sub
xchg
imul
gs
mov
cltd
in
push
mov
jge
sbb
xchg
jbe
filds
fmuls
shll
inc
pop
enter
jo
xlat
push
and
iret
pop
out
lret
in
jle
call
es
cmc
cmp
jb
inc
aaa
mov
nop
mov
stc
pusha
enter
in
nop
inc
fs
xor
ljmp
into
adc
mov
or
adc
xchg
stos
aaa
es
inc
lea
adc
mov
jmp
push
loope
call
and
in
sub
repz
fidivs
loop
adc
pushl
pop
into
roll
sti
push
xor
vcvtsd2si
xchg
in
cli
mov
js
daa
mov
ds
mov
or
aam
in
push
sbb
lock
mov
adc
dec
les
ficoml
mov
repnz
sarl
jo
aam
add
cltd
and
sbb
push
jg
stc
sbbl
aaa
int
shlb
cmp
sti
cmp
push
arpl
pop
lods
xor
movsb
mov
cmp
sbb
push
and
adc
xchg
push
insl
dec
cs
enter
lahf
dec
mov
ja
es
xor
sub
push
mov
xchg
jb
mov
jno
leave
mov
adc
loopne
mov
xor
lods
add
lock
and
subl
sub
lock
loop
mov
ss
sbb
call
adc
add
mov
adc
and
inc
xchg
xor
jo
mov
cmc
pop
pusha
adc
das
inc
cmp
sub
dec
sub
lea
mov
lcall
das
xchg
ja
in
mov
roll
pop
sbb
ret
stc
loop
das
cmp
out
and
mov
sti
fucomp
push
and
mov
bnd
xor
mov
jnp
cmp
sbb
dec
mov
enter
fwait
mov
ret
mov
outsl
lods
je
inc
mov
enter
repnz
scas
movsl
loop
mov
jo
jl
fdivrl
adc
adc
ss
or
shl
push
xchg
sarb
ret
xchg
gs
sub
push
and
push
int3
jge
leave
fwait
xchg
mov
mov
mov
adc
pop
lods
add
cmc
inc
mov
mov
adc
adc
decl
adc
jle
leave
dec
pop
mov
jg
or
and
xchg
scas
call
jle
mov
loope
dec
and
cmpsl
and
call
dec
icebp
xchg
lock
xchg
cmp
dec
add
sub
mov
xchg
cmpsb
jnp
sahf
subl
jno
cwtl
sbb
addb
xor
pop
rclb
cmp
ror
jno
adc
sbb
jne,pt
cmp
inc
and
addb
aaa
hlt
popa
dec
clc
mov
and
xor
inc
pop
xchg
sub
cmp
push
cmc
xor
lods
outsl
inc
xor
xchg
jl
mov
fsubrs
subl
xchg
dec
aas
push
adc
mov
cltd
add
or
sub
inc
dec
cmpsl
inc
lods
inc
aad
cmpb
insb
pop
repnz
inc
gs
xor
dec
dec
cmp
cmp
fs
insb
inc
fldt
jle
push
insb
cmp
lock
xchg
dec
dec
data16
int
stos
cmp
aaa
push
push
push
cmp
sbb
mov
push
add
das
adc
xor
dec
sub
jle
pop
insb
pushf
and
mov
lods
int
dec
xor
in
push
adc
dec
or
jnp
nop
jb
push
push
pop
imul
xor
inc
mov
mov
mov
popf
scas
push
push
mov
push
out
repz
js
enter
in
xor
inc
shlb
gs
and
adc
dec
fdiv
bound
xor
xchg
rolb
lods
das
filds
dec
into
adc
shlb
add
rolb
xor
pushf
mov
pop
jns
xor
xor
xchg
in
test
mov
pop
insl
cld
xor
je
jge
cld
das
push
jl
add
in
mov
imul
mov
shl
inc
jge
xor
into
test
inc
ja
outsb
mov
add
test
adc
movl
jne
sbb
cmp
jno
rorb
dec
loopne
rolb
sub
dec
js
std
int3
adc
cmp
jo
or
hlt
or
or
adc
sbb
mov
nop
in
shl
dec
js
scas
sbb
push
cmp
gs
rclb
inc
inc
cld
adc
mov
cmc
push
mov
sub
and
stc
cmp
or
sub
lods
push
lock
out
int3
pop
and
std
orl
idiv
pop
pop
fucomp
in
mov
gs
mov
sbb
xor
inc
xchg
loope
stc
xchg
enter
mov
jns
adc
cmp
xchg
mov
inc
sbb
sahf
lods
je
xchg
push
xor
ret
and
insl
and
cmp
pop
daa
mov
add
push
jl
test
in
arpl
ret
ja
fisubrl
mov
jo
lret
js
mov
mov
push
mov
aaa
inc
pop
push
and
xor
mov
dec
mov
imul
fldcw
in
idivb
and
mov
fs
mov
cld
test
and
pop
dec
mov
cmp
nop
jo
push
mov
and
dec
inc
adc
sahf
xchg
imul
mov
insb
aas
xchg
test
push
hlt
xchg
jo
leave
flds
inc
call
rolb
sub
adc
ficoms
pop
push
inc
mov
js
lods
sub
xor
lea
cmp
in
push
hlt
adc
xchg
dec
adc
lods
pop
push
mov
cmc
inc
out
and
dec
pop
lds
imulb
push
sub
test
add
lods
sbb
in
mov
pop
pop
and
out
nop
cltd
inc
in
jbe
adcb
push
sub
pop
das
cmp
xor
xchg
mov
movsb
cmp
das
scas
and
mov
mov
mov
push
sub
fcomps
cmpsl
loopne
lret
or
in
fwait
xor
mov
mov
sub
xor
adc
into
fwait
xor
mov
rol
push
pop
adc
jl
cltd
aaa
cmp
adc
lds
outsl
pop
or
mov
aas
xor
jle
jle
bound
push
or
xor
inc
inc
inc
mov
js
xchg
push
pop
xlat
inc
nop
shl
xchg
iret
scas
sub
cmp
repnz
in
sti
lock
repnz
iret
adc
xchg
xor
mov
push
insb
and
loopne
xchg
ds
pop
or
adcl
push
sub
push
mov
pusha
or
xchg
mov
shll
sbb
pop
or
insb
or
xchg
xor
mov
and
cmp
adc
fadds
mov
sbb
out
in
in
lods
sub
push
popf
fldl
xor
js
dec
clc
es
pop
je
adc
cmpsb
add
add
leave
lds
sbb
xchg
aad
pop
sub
pusha
popa
loope
jmp
cmc
into
in
sub
cmp
or
cmc
cld
loop
popf
push
mov
mov
adc
inc
sbb
mul
or
jl
les
mov
inc
cmp
pop
insl
sub
mov
jge
popf
ss
lock
push
fs
mov
xchg
inc
scas
adc
mov
and
test
ds
or
jp
inc
jle
out
ds
das
cmp
mov
fdivrs
idiv
sub
mov
and
vmwrite
mov
daa
or
adc
mov
cmp
int3
push
ljmp
pop
incb
subb
dec
mov
xor
mov
jno
popa
jmp
inc
in
xchg
push
aas
and
insb
mov
lock
in
outsl
jg
std
dec
inc
or
push
push
mov
mov
sub
add
jne
dec
adc
and
xchg
cmp
xor
jne
scas
jl
lods
and
xlat
sar
mov
cltd
ds
or
pusha
adc
mov
and
cld
loop
shll
xchg
daa
jle
xchg
filds
notl
mov
mov
jle
insb
mov
rorl
fidivl
andb
push
mov
or
mov
imul
mov
cwtl
shll
and
int3
sub
dec
ss
and
jmp
lods
insl
fists
xor
push
jne
das
cli
mov
xchg
xchg
xor
test
fs
xor
cmp
scas
lock
mov
fldl
rcl
negb
mov
cmpb
pop
inc
adc
xchg
rcr
or
push
mov
xor
mov
cmpsl
cld
mov
inc
add
sarl
dec
outsl
mov
and
out
add
cmc
cmp
inc
iret
xchg
popa
push
jg
cmp
js
lds
mov
mov
sub
mov
pop
xchg
inc
mov
sarl
mov
mov
inc
pusha
call
add
shlb
ja
clc
cmp
insl
xor
outsb
push
cmp
jle
clc
xor
fabs
jg
xor
adc
jns
jo
leave
cld
mov
xchg
test
fld
push
inc
fcoms
xor
cld
mov
adc
inc
lods
and
outsb
add
xchg
jno
pop
lea
call
dec
adc
push
xchg
jp
std
push
call
push
mov
cs
data16
lret
cmp
mov
in
mov
adc
sub
push
cmpsl
ds
xchg
adc
lret
lret
std
push
inc
dec
ljmp
xchg
jo
sahf
and
mov
pop
sar
xor
mov
fcomip
loop
cli
lods
les
pop
enter
push
mov
loopne
push
enter
mov
push
mov
push
mov
push
mov
pushl
dec
and
fstpl
cltd
adc
and
in
aad
je
lock
cmp
xlat
jge
xchg
in
push
push
outsl
xchg
in
inc
movsb
jmp
cs
mov
adc
subl
lods
xchg
xor
fisttpl
or
insl
and
pop
daa
xor
jle
mov
bound
add
lods
mov
xchg
cmpsb
aam
xor
out
inc
hlt
sbb
sbb
fs
xor
mov
sub
mov
daa
sub
insb
sahf
push
inc
mov
outsl
xchg
adc
inc
imul
jne
in
adc
bound
lret
push
in
cmc
sub
push
cmp
adc
and
jne
imul
fidivl
imull
xor
ficomps
xchg
insb
and
fs
in
push
pop
pop
push
xchg
inc
xchg
roll
rcrb
jle
jle,pn
mov
lods
push
mov
mov
xor
daa
insb
notb
lods
xchg
outsb
arpl
xchg
cs
adc
das
movsl
addr16
and
inc
loopne
mov
cwtl
jmp
inc
pusha
data16
rorl
pop
pop
mov
sbb
sbb
popa
push
iret
jmp
inc
enter
adc
adc
ds
xchg
push
mov
ljmp
cmp
and
xchg
and
fsubrs
out
imulb
je
push
sub
fwait
mov
fcmovu
popf
adc
adc
mov
pusha
push
out
push
adcb
mulb
xchg
ja
dec
inc
std
sub
mov
inc
push
jmp
or
scas
ljmp
hlt
fiaddl
xor
dec
adc
rol
xorl
jb
add
rorl
dec
jmp
aaa
xor
jge
push
out
fdivrl
scas
dec
fsts
dec
cmp
in
sub
les
push
into
dec
inc
mov
add
enter
scas
addl
jp
lahf
out
ss
sub
in
cmp
xor
sub
lcall
ja
add
or
mov
das
sub
call
push
dec
mov
lret
push
and
inc
daa
add
lea
out
stos
adc
cmp
and
xor
fldenv
xor
fmull
fdivr
mov
gs
mov
mov
shlb
and
lods
cmp
mov
adc
in
test
sub
es
or
mov
sbb
sub
rclb
fs
mov
in
mov
xor
add
push
and
pop
in
inc
sbb
out
xchg
pop
adc
sqrtps
push
jle
ret
dec
popf
mov
and
insl
mov
adc
add
aam
push
je
shrl
aad
xor
jp
dec
and
hlt
adc
jl
int
popf
and
xor
xchg
lods
mov
cmc
mov
jns
jle
std
sbb
cli
add
inc
xor
hlt
pop
sbb
cs
and
pusha
in
sub
incb
mov
mov
fdivp
js
xchg
adc
incb
cs
in
nop
int3
dec
insb
test
es
iret
mov
push
and
out
sar
clc
scas
xor
cwtl
adc
lock
ret
popf
test
das
mov
and
pop
adc
sbb
add
dec
and
lods
xchg
insl
jbe
xlat
xor
adc
outsl
insl
arpl
testl
jbe
rcrb
push
xor
clc
call
movsl
sbb
adc
mov
adc
jbe
jg
mov
push
jne
adc
lret
cmc
sbb
jne
adc
dec
testl
pop
js
xchg
pop
and
xor
push
je
movsb
mov
push
mov
shl
fcmove
nop
inc
mov
jg
xor
lea
xchg
nop
stc
std
movsl
insb
nop
pop
cmp
jne
jne
inc
adc
or
xor
mov
jg
pop
add
dec
inc
rcrl
jno
sub
pushf
and
mov
mov
mov
sbbl
jl
insl
insl
or
xchg
repnz
cld
cmp
jecxz
sub
inc
xchg
mov
gs
sbb
call
sbb
adc
pushf
dec
je
pop
push
popf
jo
xor
dec
shlb
dec
adc
sbb
sub
and
push
and
mov
pushf
mov
or
jne
add
xlat
mov
push
sbb
jge
gs
lret
in
sub
mov
add
jns
jbe
pop
das
jb
fs
and
popa
fsub
aas
adc
adc
mov
icebp
lret
nop
pushf
scas
insb
cmp
dec
add
jns
xchg
daa
enter
call
push
mov
lock
repz
lcall
cmp
or
push
sub
mov
jo
repz
and
sbb
xchg
lock
push
cli
sti
push
js
inc
xchg
roll
jnp
test
jb
jmp
data16
dec
cmp
mov
cmp
mov
js
sbb
mov
int3
or
sub
mov
test
jg
jl
das
push
out
push
lock
dec
mov
ret
ss
jo
dec
lods
das
xchg
aad
adc
stos
push
in
int
cmp
jns
fwait
mov
push
mov
gs
push
xlat
jno
fwait
or
xor
out
aad
adc
add
insb
scas
ret
enter
add
insl
lods
daa
popa
mov
push
push
xor
sbb
sbb
cmp
jo
add
dec
or
into
and
inc
je
je
fidivrs
mov
je
push
add
sbb
enter
daa
test
es
lahf
pop
push
and
ret
inc
jl
jg
add
xchg
ds
and
cmp
dec
in
xchg
aad
and
push
adc
xchg
iret
and
xchg
pop
mov
jle
inc
lods
sub
xor
subl
imull
imul
inc
sub
cltd
push
xor
pop
jl
fistpl
aad
add
xchg
dec
adc
mov
sbb
decb
clc
int3
daa
jb
dec
mov
or
aas
cmp
jne
mov
lods
sub
xchg
loop
jb
mov
dec
negl
aas
in
cs
cli
mov
arpl
stos
dec
push
mov
pop
xor
inc
cmp
lods
sbb
lcall
std
js
cmp
xor
adc
iret
add
loopne
mov
mov
mov
or
mov
pop
sti
aas
movsl
das
push
cs
iret
sbb
xor
ds
lods
xchg
bound
mov
xchg
xor
bound
dec
xchg
lods
mov
mov
insb
cmp
sbb
les
mov
lret
hlt
addl
js
cmpb
out
repz
in
mov
sub
mov
cltd
imul
pop
adc
aas
pop
pop
mov
or
jo
pop
mov
and
test
ficompl
int
inc
insb
jo
das
and
ss
cltd
in
xlat
mov
add
sub
sub
xchg
mov
sbb
xor
inc
dec
xchg
mov
mov
sub
aas
inc
mov
lods
mov
xor
lds
or
das
sub
sbb
aad
jecxz
push
insb
push
sub
aaa
xchg
mov
dec
inc
inc
inc
pushf
aas
dec
daa
xor
ret
dec
addr16
sub
sub
and
push
scas
pop
and
stos
push
je
lods
fldenv
repz
std
mov
or
sub
scas
movsl
cli
inc
lahf
stos
or
dec
lods
dec
outsb
movsl
insl
fwait
pop
je
lds
cmp
popl
fstl
in
xchg
insl
mov
adc
test
push
outsb
xchg
mov
jne
in
inc
adc
aas
inc
subl
out
dec
lods
mov
xchg
xor
pop
outsl
ficoml
push
xchg
sbb
jae
movaps
mov
add
mov
cmp
jecxz
movsl
mov
rcl
jl
xchg
mov
mov
sbb
sub
lcall
fidivs
dec
push
lods
xchg
sbb
mov
jae
or
xchg
jno
xor
movl
pushf
in
lods
xor
pop
xchg
test
repz
jo
jae
dec
mov
fisubs
sbb
jge
fdivr
xor
pop
adc
pop
adcb
xchg
pop
dec
lods
inc
jmp
mov
pop
ficoml
cli
jp
stc
xchg
mov
pop
pusha
mov
mov
cmp
sub
jmp
push
insl
sub
iret
xor
pop
scas
sahf
mov
jecxz
lock
mov
pop
adc
out
nop
aam
mov
sub
or
cmp
jmp
scas
sub
andl
and
add
mov
jge
inc
xchg
pop
inc
shll
and
cmp
pusha
and
xor
sub
push
pop
leave
sbb
addb
mov
addb
push
and
cs
out
daa
outsl
inc
add
ss
xchg
pop
mov
mov
das
sub
sbb
sbb
lea
jp
mov
mov
rorb
push
ret
jge
mov
insb
mov
outsb
lcall
popf
mov
push
mov
sbb
mov
jbe
scas
ss
fisubrs
ss
mov
test
cmpl
sub
jo
pop
pop
add
mov
ljmp
pop
push
push
inc
hlt
inc
mov
xchg
mov
xlat
outsl
outsb
leave
jo
dec
insl
je
js
mov
insb
movsb
xchg
pop
test
mov
adcb
fs
stc
subl
jge
jne
sub
inc
add
repnz
popf
ds
push
fsubrs
loop
insb
aaa
jmp
test
mulb
cmc
call
data16
add
lds
inc
adc
jg
mov
mov
imul
sub
stos
cmp
mov
out
shrl
pop
xchg
outsb
adc
nop
xor
andb
push
in
fstpt
cmc
pop
pop
inc
push
fxch
cltd
and
xchg
sub
mov
mov
sub
jg
or
ja
pusha
pushl
pop
movsl
out
out
mov
arpl
cltd
sub
xchg
sbb
dec
fnstenv
sahf
mov
mov
jno
jbe
pusha
xor
cmp
mov
cmp
fiadds
loopne
aaa
sahf
fiadds
mov
mov
xor
roll
dec
addr16
insb
sub
shrb
in
jge
mov
ljmp
cmp
scas
rcll
mov
jmp
mov
xchg
js
dec
mov
cwtl
inc
push
je
dec
inc
pop
mov
mov
inc
pop
mov
xchg
inc
lea
loopne
sti
push
xor
cmc
sub
mov
adc
sub
mov
cmp
inc
cmp
lcall
insb
xchg
jmp
lods
js
pop
jae
xor
aaa
xchg
and
inc
mov
mov
jmp
insb
mull
push
loope
imul
pushf
test
mov
adc
mov
ja
sub
jl
mov
xor
daa
outsl
jae
jmp
add
push
xorb
mov
ret
mov
repnz
pop
sbb
jg
xchg
in
jo
cmp
mov
inc
xorb
inc
inc
fsubr
in
je
pop
jbe
stc
mov
ljmp
lret
pop
outsb
mov
out
dec
inc
mov
push
jl
mov
insb
fdivrl
rcl
fisubrl
jo
cmp
int
call
dec
add
jo
aaa
ja
mov
stc
fwait
pop
pop
add
jle
aas
dec
addl
addr16
adc
sar
add
lret
sbb
mov
inc
bnd
ljmp
jmp
pop
test
nop
das
mov
inc
loop
mov
shrb
sbb
rcrl
jl
xchg
ret
stc
sub
sub
push
pop
outsl
out
mov
mov
call
mov
pop
jo
mov
adc
outsb
div
test
cli
mov
not
in
sub
jg
xor
cltd
pop
cmp
mov
xchg
insb
xor
aas
int
jmp
push
repz
sbb
sbb
xor
mov
subb
mov
push
mov
arpl
out
scas
cld
adc
sub
mov
fsubrl
divb
sarb
popl
xor
ss
cmpsb
push
cmp
and
cld
stos
pusha
inc
das
test
orl
mov
cmp
sub
jb
cmpl
repz
xchg
arpl
mov
mov
in
mov
outsb
and
out
adc
int3
jbe
jo
lods
ja
cld
lods
lods
sbb
inc
adc
xchg
ret
mov
mov
insb
xchg
inc
rclb
outsb
cmp
xchg
adc
jns
popa
insl
fmull
push
aaa
dec
ja
dec
jp
jb
jp
out
jnp
cmc
adcl
fdivl
pop
jecxz
insl
mov
jae
mov
test
dec
rol
push
adc
mov
mov
in
leave
push
cmp
adc
inc
inc
outsl
js
xor
mov
sub
inc
bound
adc
mov
test
aas
push
xor
xchg
inc
ds
repnz
cs
mov
jge
and
das
cmc
pushaw
push
repnz
mov
xor
loope
ficoms
xchg
dec
sbb
cmc
ss
sarb
arpl
lea
loopne
adc
ficomps
xlat
push
orb
movsb
lods
shl
jl
push
jbe
rcll
and
xchg
inc
xor
lea
into
les
add
adc
loop
push
nop
sub
push
outsb
sub
or
jne
push
pop
faddp
sub
sub
pop
pop
jl
mov
pop
sub
dec
stos
sub
xor
mov
mov
mov
jle
es
outsb
xor
push
lds
pop
hlt
xor
repz
and
mov
imul
stc
and
je
out
insb
nop
fs
jl
mov
mov
ljmp
lock
xlat
shll
lods
jle
push
jg
lahf
sub
push
pop
jmp
pop
mov
adc
mov
out
add
int
jmp
dec
sarb
push
in
mov
mov
test
mov
cld
cli
adc
dec
mov
adc
inc
mov
xchg
lea
lds
fs
aam
sbb
xchg
bound
xor
jnp
fimull
out
je
lret
mov
mov
jb,pt
push
sbb
scas
mov
stos
movsb
cs
popa
fildl
xchg
jle
scas
cmc
mov
xor
adc
pushf
mov
mov
idivl
cwtl
cmpb
xor
add
movsl
xchg
dec
or
test
in
dec
mov
mov
je
mov
stos
sub
mov
subb
jbe
jne
insb
dec
add
cli
fcoms
mov
xchg
ljmp
push
dec
ds
lods
add
adc
jmp
outsb
mov
popf
cmp
and
int3
dec
and
int
je
setge
cmp
xchg
rep
sbb
push
mov
xchg
push
push
in
jbe
je
getsec
adc
in
cmp
out
and
jne
pop
insl
xlat
add
jbe
add
mov
das
jg
out
add
lea
mov
popa
movsb
cs
and
ljmp
lods
lcall
jns
jns
jb
xchg
inc
xchg
enter
loop
cs
outsl
push
adc
repnz
push
cmp
in
mov
pop
mov
idivl
sub
call
adc
xchg
sub
mov
insb
lods
push
jl
in
push
jb
push
or
mov
daa
push
mov
icebp
adc
fcoml
mov
icebp
push
xor
repz
repnz
mov
push
les
sarl
inc
push
bound
sbb
add
das
dec
sarl
mov
sub
orb
sti
les
cmpsl
imul
jecxz
xchg
add
dec
fs
push
data16
ljmp
stos
repnz
stos
add
leave
sbb
lea
xchg
je
lods
xchg
aam
mov
mov
xor
and
ljmp
fcompl
pop
push
cmp
ss
les
lret
aaa
and
pop
je
pop
jge
cmp
test
aad
into
mov
or
jbe
pushf
jbe
mov
stos
push
dec
dec
fabs
mov
subl
xlat
subl
cmp
mov
ja
jp
push
in
xor
loopne
jb
cmp
jmp
dec
mov
int
lods
cli
subl
cmc
lcall
int
mov
lahf
repnz
push
arpl
enter
pop
test
loopne
lods
fucomp
cs
xchg
mov
and
mov
mov
add
in
aaa
cmpl
pop
fistpll
mov
mov
popf
mov
inc
mov
mov
insl
aaa
xchg
xor
mov
jno
jecxz
gs
lret
scas
jl
enter
fidivrs
insb
sbb
call
ja
cmp
mov
test
sbb
std
mov
hlt
xchg
sub
xchg
int3
pop
repnz
fwait
je
stc
jmp
mov
stos
mov
pop
dec
and
push
lods
cmp
loope
xor
aad
jne
push
inc
test
idivl
lret
in
sub
push
xchg
int
xchg
outsb
mov
adc
cld
adc
pop
das
lds
cmp
in
nop
pop
int3
fidivs
and
lcall
rcrb
sub
pop
xchg
jns
sbb
mov
jae
or
fs
jmp
dec
insb
dec
cmc
lahf
insb
cmp
push
dec
pop
fnstsw
aas
and
lods
inc
je
jne
or
aas
std
sub
fs
mov
les
jbe
iret
mov
arpl
fisubrl
leave
adc
mov
inc
mov
jecxz
cmp
aas
and
mov
push
xor
mov
scas
std
pushf
inc
xchg
insb
sub
mov
mov
sbb
jmp
mov
stos
cmp
out
add
push
push
jbe
int
pushl
add
jl
ljmp
adc
scas
std
stos
sbb
mov
xchg
inc
fsubl
aaa
adc
cltd
xchg
jmp
mov
adc
in
mov
mov
fldenv
loope
or
mov
andb
add
inc
jmp
jle
add
xor
out
inc
insl
mov
es
xor
mov
inc
in
add
mov
pop
xchg
mov
mov
or
loopne
mov
xchg
cmp
cmpsl
and
mov
sub
inc
mov
inc
fwait
adc
cmp
mov
jo
inc
addr16
add
sahf
out
ja
jne
ret
push
xchg
test
push
or
mov
cltd
lods
cmp
out
shrl
incl
sbb
push
int3
clc
jl
lds
pop
or
filds
call
iret
push
adc
scas
cmpsb
jmp
mov
lea
push
dec
test
sti
imul
into
xchg
sbb
stc
jo
adc
test
das
fisttpl
mov
ljmp
into
outsl
mov
or
sub
rolb
cmpsb
andl
je
cmp
ret
adc
cltd
fisubs
ficoms
cwtl
push
sbb
jge
sub
sub
mov
pop
int3
xor
bound
dec
mov
dec
mov
xor
sbb
in
fbstp
repz
jne
xchg
mov
sbb
scas
jmp
mov
pop
outsl
pop
mov
cmc
in
in
mov
adc
js
data16
stos
test
pop
test
mov
sub
push
fsubrl
enter
jl
pop
fwait
sbb
lahf
mov
jg
dec
mov
push
sub
adc
mov
and
ja
decl
jle
adc
xor
je
ljmp
nop
lods
jl
in
xchg
mov
std
push
push
xchg
stos
push
jnp
mov
fndisi(8087
adc
stc
push
mov
insl
push
ret
sub
jns
js
enter
xor
pop
cwtl
push
int3
ds
imul
xchg
ja
stos
lock
and
cmpl
hlt
mov
sti
cli
stc
clc
jg
add
shll
clc
mov
adc
cmp
addr16
pop
lods
cwtl
aaa
testl
add
add
insl
pop
loop
std
or
cwtl
adc
je
fbld
lret
loopne
mov
sbb
adc
adc
xchg
aam
scas
mov
xchg
cmp
xchg
pop
cmp
cli
ljmp
adc
push
cmc
ret
cmp
mov
icebp
data16
rcr
mov
sbb
jns
lret
mov
out
rorb
mov
out
push
pop
and
scas
adc
sub
sbb
push
into
mov
xor
mov
movsb
into
add
fisubrs
xor
bound
mov
and
adc
bnd
mov
cmp
add
dec
jg
mov
flds
mov
insl
testb
mov
jns
int3
inc
movl
mov
aam
gs
inc
xor
sub
push
pop
push
or
sahf
in
push
jno
sbb
xor
xor
out
xor
lods
push
outsb
out
mov
orb
xchg
xorl
push
cmp
mov
xor
mov
jo
cmp
lock
lods
leave
movsl
xor
and
mov
scas
in
insb
xor
pop
xor
and
in
jl
je
add
push
xorb
insb
xor
lods
gs
clc
xor
lock
lods
sub
sbb
jp
mov
addr16
xchg
dec
lods
out
and
jle
cli
xor
test
lds
aaa
mov
xchg
stos
fs
les
pop
mov
push
insb
fisttps
inc
int
enter
ds
jp
insb
ret
and
mov
insb
pop
cli
jle
push
sarb
addr16
mov
in
mov
inc
in
push
mov
das
mov
and
push
out
dec
push
jl
pop
loope
dec
aaa
shlb
adc
jne
push
jl
inc
or
jb
cmp
lret
xor
push
and
lods
imull
xor
fcom
push
stc
fucomp
shll
jnp
jecxz
inc
adc
scas
jmp
imul
xchg
fildll
xchg
movl
pop
data16
std
add
stos
call
mov
xor
gs
inc
ss
pop
fsubrs
sti
adc
aad
mov
dec
xor
leave
adc
dec
dec
jb
jmp
inc
dec
dec
enter
xor
sub
insb
std
out
pusha
jle
sub
ljmp
mov
mov
jle
jl
cltd
mov
inc
repz
mov
jecxz
push
mov
xchg
ret
push
int3
add
test
das
pop
jge
add
out
orl
mov
fcoml
inc
push
je
cld
add
push
lods
mov
sahf
outsl
nop
rcrl
xor
in
sbb
popa
fdivs
mov
push
xor
jg
rcl
or
xchg
lods
mov
js
pop
repnz
int3
cmc
adc
pushf
popf
ss
out
in
clc
dec
arpl
icebp
shlb
lcall
fnstsw
pop
sub
push
stos
in
xor
cmpsb
mov
jo
add
das
mov
mov
lcall
std
pop
adc
mov
ret
and
test
push
adc
cmc
dec
xor
in
rolb
mov
inc
lock
or
lock
into
cmp
call
arpl
fsubp
in
pop
mov
adc
xlat
mov
pop
dec
pop
mov
loope
push
iret
push
jg
mov
xchg
scas
shl
mov
jae
shrb
icebp
pop
leave
fadds
add
mov
popa
sbb
es
lock
mov
mov
loope
movsb
fs
adc
adcb
cmc
jle
mov
pop
adc
mov
ja
lods
pop
out
sbb
push
jmp
push
fldl
out
aad
movsb
lds
jmp
push
sbb
clc
xchg
or
jmp
mov
loope
sub
outsl
mov
shrl
insb
rcr
pop
jl
loopne
ret
push
ds
push
into
lods
pop
mov
loope
cmp
ljmp
dec
sahf
mov
daa
and
xchg
in
addr16
inc
push
mov
mov
sbb
cld
mov
xchg
pop
mov
push
lret
jo
out
pop
aam
dec
xor
aad
push
push
repz
lea
push
pop
pop
xchg
sbb
sub
rclb
addb
jo
sub
push
pop
pop
ss
das
pop
sbb
sub
xchg
out
insb
adc
lods
and
sbb
cmc
hlt
jg
xor
adc
test
test
daa
lret
mov
in
pop
xchg
out
xchg
cmp
in
aad
ficoms
cmp
jle
ja
hlt
inc
in
sbb
mov
mov
sahf
pop
lods
mov
lret
ss
add
push
popf
das
mov
mov
mov
scas
daa
lds
push
out
push
adc
std
inc
pop
test
iret
or
push
mov
iret
cs
shlb
push
mov
fiadds
jbe
das
loop
add
lret
rcll
addr16
and
and
jo
nop
and
push
inc
sbb
ljmp
into
insb
mov
clc
jge
sub
imul
push
orb
sub
sbb
xchg
pushf
xor
inc
hlt
cmpsb
inc
xor
ret
and
rorl
and
push
lea
mov
and
push
and
xor
add
xchg
push
rol
mov
cmpsb
mov
pop
jle
sbbb
sbb
pop
cmp
enter
add
out
mov
in
xchg
dec
mov
cs
aad
fnstcw
mov
push
in
les
dec
cli
jmp
adc
xor
mov
in
xor
xchg
sub
push
jbe
cmp
push
jecxz
cmp
add
push
inc
mov
pop
hlt
mov
or
inc
pushf
mov
xchg
jge
xor
enter
lea
insl
mov
mov
pop
movsl
nop
ss
je
repnz
lock
or
jno
fs
rcr
outsl
ss
xor
and
jns
mov
cmpsl
fisttps
inc
aad
es
movsb
std
sub
daa
lcall
push
mov
shll
into
out
adc
rolb
xor
jl
pop
xor
fnsave
lock
adc
insb
fidivl
xor
ljmp
push
add
mov
xor
xor
adc
dec
pop
lahf
mov
push
jnp
insl
xchg
aaa
clc
mov
sub
enter
sti
das
push
pop
cs
dec
mov
add
cmpsl
mov
mov
out
add
dec
rolb
mov
movsb
inc
adc
adc
out
jbe
mov
lods
daa
mov
ret
pop
loop
nop
rep
repz
aaa
xor
cli
adc
dec
incl
adc
addr16
fxch
sbb
mov
jmp
mov
xchg
leave
aas
gs
in
dec
xor
aas
mov
jl
rclb
mov
sbb
pop
mov
lret
int
adc
insl
fwait
mov
ret
call
pusha
fdivrs
leave
pop
lds
and
mov
ss
insl
ss
sub
lret
cmp
enter
ret
scas
adc
adc
call
pop
sti
xor
and
inc
xchg
inc
cmp
inc
out
mov
lock
xor
inc
inc
cwtl
dec
xchg
insl
push
or
into
pop
cmpsl
xchg
dec
in
aaa
xor
call
dec
add
lods
and
enter
pop
inc
xlat
std
aas
adc
sbb
and
xor
adc
and
lock
cmpsb
out
aam
loop
aas
jne
lret
in
das
hlt
adc
lds
sub
or
mov
xchg
js
dec
sbb
push
push
movsl
das
mov
sub
sbb
mov
std
add
inc
enter
xchg
mov
negb
in
inc
xchg
les
notb
mov
fistpl
mov
shrb
or
in
push
mov
jl
add
xor
ljmp
cmp
mov
lock
lods
hlt
xchg
aas
std
sub
stos
js
mov
mov
ss
adc
lds
mov
mov
push
jmp
add
xor
xchg
or
inc
data16
dec
and
mov
or
lods
sbbl
mov
insl
xchg
hlt
sbb
push
pop
jbe
in
dec
jl
jbe
cmp
dec
mov
popa
jmp
aam
in
mov
xchg
fsub
fcompl
xor
jae
dec
jmp
or
pop
testb
pop
push
cld
push
mov
and
xchg
jne
outsl
mov
jnp
fstps
sahf
dec
sub
ds
imull
aas
dec
popa
sub
and
mov
in
mov
dec
icebp
sbbb
aam
cmp
sbb
out
sub
fdivl
jae
jl
xchg
out
mov
sbb
stc
mov
in
cmpl
sti
pushf
mov
out
stos
push
mov
jl
inc
adc
mov
mov
cmp
into
xchg
inc
test
scas
lods
shlb
pop
adc
jbe
sub
push
shrb
mov
inc
outsl
push
in
mov
jb
mov
stos
cmp
adc
clc
jno
xor
aaa
mov
adc
les
inc
mov
lcall
fcomps
sub
push
xor
out
xor
rcr
xor
loopne
cmp
inc
pop
adc
nop
push
fnstenv
pop
sar
daa
sub
xchg
adc
mov
ja
out
lea
cmc
notb
cld
cld
adc
aad
insl
xor
cli
cmc
xchg
lods
jg
inc
sub
xor
arpl
mov
dec
cmpsb
movsl
cld
push
mov
rclb
mov
xchg
add
scas
mov
cmpl
xchg
xor
sti
shlb
or
mov
push
jo
mov
test
aas
and
enter
aaa
push
iret
inc
fbstp
adc
lods
inc
mov
xor
adc
or
cmp
xchg
in
jns
mov
divb
in
mov
scas
add
xor
adc
ret
pop
or
or
fwait
lods
jnp
mov
and
lret
mov
je
testl
loopne
sbb
jo
sub
fstps
pushf
inc
lods
xor
xor
xor
push
jp,pn
mov
gs
jge
and
push
jns
pop
xor
je
jb
mov
cmc
in
mov
jno
sub
ss
jbe
or
and
sbb
jne
out
push
fsts
inc
push
ret
mov
loopne
dec
js
add
push
outsb
fdivl
mov
xor
jne
push
scas
dec
inc
fdivs
mov
lods
xchg
out
mov
sub
xor
aas
das
pop
leave
xlat
aas
and
scas
in
fstp
fisttpl
test
and
push
sub
frstor
das
dec
inc
into
jp
push
mov
data16
ss
mov
cltd
dec
inc
cli
pop
test
mov
sbb
dec
xchg
sbb
pop
testb
mov
push
adc
nop
mov
pusha
sub
adc
mov
cmp
mov
jb
subl
or
popa
pusha
mov
xor
jo
or
out
inc
adc
ret
xor
insb
dec
xchg
jmp
adc
mov
shl
pop
dec
adc
dec
mov
stos
xchg
pop
mov
push
jne
xchg
pushf
jb
pop
popf
sbbb
pop
clc
mov
adc
into
jg
fstpl
ds
mov
movsl
pop
push
push
pop
andb
pop
ds
adc
push
inc
add
sub
dec
test
ljmp
stos
jne
mov
movsl
or
cmpsb
jbe
jge
xchg
je
adc
sub
loopne
mov
jle
pop
loop
jb
aam
lds
cmc
xchg
stos
sub
add
fstps
jmp
mov
aas
xchg
xor
int3
pop
xor
enter
movhps
xor
aas
addr16
ret
and
ljmp
in
cs
sub
mov
out
test
jmp
fsub
scas
cmp
enter
negl
xor
pusha
cmpsb
push
mov
stos
rolb
cmp
push
adc
mov
dec
jmp
dec
sbb
adc
out
mov
mov
dec
je
test
nop
inc
and
push
std
repnz
in
xor
push
pop
aaa
push
inc
xor
sub
xor
push
lods
lea
push
aas
pop
pop
movsl
mov
jae
call
mov
popa
dec
inc
mov
push
scas
xchg
inc
jmp
and
and
enter
mov
adc
movsb
gs
jno
inc
inc
fcomp
mov
adc
in
mov
jno
inc
cmp
adc
stos
adc
cs
mov
mov
fwait
stos
iret
jle
out
mov
pusha
out
jmp
repnz
stc
jl
dec
inc
push
push
addr16
ret
cmp
inc
xor
pop
in
cmp
insl
decb
popa
mov
mov
mov
jne
pop
sbb
or
adc
jmp
mov
push
leave
xor
pusha
adc
xchg
ja
or
movsl
mov
lods
repz
ficoms
xchg
pop
xchg
repz
out
int3
sub
lret
faddl
adc
gs
aaa
adc
sti
js
jb
or
ljmp
in
repz
les
cmp
jecxz
and
ljmp
out
jle
sbb
cmp
inc
mov
xor
nop
popf
mov
xchg
rcrl
imul
adc
pusha
and
mov
stc
add
mov
scas
in
mov
mov
sahf
and
mov
lea
rcl
outsl
les
push
add
dec
adc
mov
daa
call
xchg
push
repnz
xor
adc
cmp
mov
add
lods
lahf
inc
cltd
clc
mov
scas
aam
shl
add
sub
aaa
subl
sbb
mov
push
test
xor
dec
jb
cs
call
pop
das
ficoml
das
pop
ja
mov
out
adc
les
mov
aam
pop
icebp
adc
jns
enter
push
jg
mov
jmp
mov
push
jg
loop
mov
lret
insl
bound
lods
xchg
xchg
movsl
clc
inc
in
mov
in
adc
push
cmpsl
and
xor
push
ljmp
mov
bound
and
les
xchg
and
sbb
sbb
daa
pop
fs
adc
test
test
js
aam
add
sahf
adc
daa
test
mov
jl
cmp
shr
xacquire
add
push
outsb
cmpsb
add
dec
jp
in
orb
ss
mov
xchg
mov
xorl
adc
fadds
sbb
movsb
cmpsl
xchg
pop
out
pop
das
mov
adc
imul
fsubl
cmp
adcb
xchg
icebp
data16
xor
pushf
xchg
lret
mov
mov
mov
sub
mov
outsl
push
inc
adc
inc
adc
test
jp
add
mov
movb
sub
push
icebp
insb
cmc
iret
cmp
xor
mov
insl
rcrl
into
and
pop
add
loopne
inc
push
sbb
and
or
int3
sbb
adc
leave
push
popa
cmp
adc
std
mov
cmp
mov
and
and
sahf
adc
mov
xchg
dec
jp
jmp
pop
dec
imul
xchg
popa
insb
dec
xchg
push
inc
ret
js
fxch
sub
adc
pop
sub
jbe
jbe
mov
insl
dec
sub
adc
push
jge
mov
fidivrl
test
mov
stc
mov
iret
test
dec
movsl
outsl
mov
mov
cld
loope
sbb
adc
int
imul
pusha
test
cli
movsl
fs
xor
pop
jg
rcr
shlb
mov
ljmp
sarl
popa
lock
roll
daa
xor
pop
dec
mov
inc
mov
push
test
loope
dec
push
lcall
push
inc
or
or
mov
xlat
subl
push
xchg
insb
mov
inc
jl
lret
aaa
adc
ret
shlb
mov
add
outsb
in
rclb
mov
fwait
into
call
cmp
fisttpll
je
jl
decl
mov
mov
popf
inc
pop
sahf
dec
xchg
xor
add
rcrl
jbe
shll
or
xchg
in
xor
scas
mov
repz
xchg
enter
fsubrl
sub
xor
int3
js
xor
xchg
and
mov
dec
mov
loope
testb
out
inc
cs
push
enter
xor
mov
adc
pop
andl
nop
push
xchg
and
inc
jb
loopne
dec
add
into
xor
add
xchg
test
idivl
leave
jb
imull
cmp
and
es
pusha
mov
call
cmp
mov
outsl
lret
pop
mov
int3
add
push
jg
pop
fisttpll
scas
mov
out
lahf
repnz
lret
push
mov
je
mov
or
push
leave
push
jo
or
cmp
fsts
dec
mov
sub
mov
mov
xor
outsb
xlat
adc
stos
test
lret
cmp
cmpsb
sub
cltd
in
xchg
in
test
mov
ret
cmpsl
dec
xlat
cmp
mov
jle
fisubrs
aas
dec
adc
into
jmp
inc
jnp
inc
adc
sub
sub
shlb
mov
addr16
hlt
xor
in
call
in
pop
xchg
notl
sahf
mov
xchg
aas
movsl
rcrl
sub
cmp
out
std
pop
or
and
push
in
jne
jg
aaa
jne
lcall
pop
adc
mov
mov
and
jbe
cltd
fdivrl
lods
sbbl
ds
push
shld
lods
inc
mov
inc
mov
out
or
popf
ficomps
rclb
mov
aas
int
stos
inc
divl
dec
dec
pop
push
fisubl
ds
inc
loopne
nop
outsl
pushf
jge
mov
and
aas
mov
xor
fcompl
adc
xor
data16
xor
dec
rcrl
in
jo
pop
cs
mov
repz
test
or
add
jae
out
pushf
dec
cmp
lea
call
pop
cmp
mov
insl
lds
mov
pushf
push
cmp
dec
sbbl
push
mov
xchg
repnz
ret
add
idivb
jl
ljmp
out
andl
gs
rcrl
jg
push
repz
lcall
push
ret
into
subb
lret
stc
cmp
cmp
lcall
je
pop
inc
test
pusha
jge
cmp
rorb
ds
cmp
adc
stos
xor
cmp
push
ret
jb
mov
and
add
lds
jbe
cmp
ficoml
sub
sbb
popf
sbb
sbb
pop
imul
cmp
stos
or
es
enter
ljmp
aad
xor
xchg
std
movsl
or
cmp
outsb
in
mov
in
mov
adc
sub
dec
push
out
and
test
pop
xor
adc
int
cmp
insb
dec
cmp
jbe
xchg
pop
xor
roll
xor
popf
int
js
clc
cmp
mov
push
loope
and
repnz
dec
sub
pop
js
jb
stc
clc
in
cmp
mov
sbb
jbe
push
es
cmp
push
into
insl
cmp
inc
mov
cmp
mov
leave
frstor
xor
in
and
int3
xchg
call
les
pop
in
dec
aam
out
cmp
xor
icebp
fwait
pop
mov
push
mov
pop
sbb
xchg
mov
adc
hlt
cmc
pop
jge
hlt
mov
and
cmp
mov
sbb
imull
inc
mov
cmp
cmp
repz
or
mov
fmull
out
cmp
jge
sub
js
imul
dec
inc
sbb
cmp
sub
fcmovnbe
dec
shl
sub
mov
sub
sub
ret
data16
mov
int
dec
xchg
inc
sub
cmp
mov
mov
jno
fcompl
mov
mov
std
jl
pop
rorl
cmp
mov
pop
xor
ficoml
fmuls
jb
jg
inc
sub
cmp
adc
cmp
mov
iret
cmp
jge
test
mov
adc
mov
outsb
sbb
mov
inc
dec
mov
mov
or
mov
inc
scas
pop
ds
and
or
and
and
xlat
cmpb
scas
es
test
push
fsubr
mov
cmp
mov
rcrb
fnsave
mov
aas
xor
cmpsb
fsubl
mov
cmp
dec
ret
loop
sub
pop
rcr
push
mov
adc
das
outsb
jne
add
push
mov
dec
push
jecxz
pop
sahf
cmp
pop
sbb
sbb
jno
dec
fnsave
lods
setbe
test
jmp
push
mov
shrb
cmp
dec
repnz
jnp
test
cmp
mov
les
mov
xchg
sub
sub
mov
insb
mov
pop
sub
lods
mov
pop
std
xchg
mov
sbb
int3
addr16
aam
inc
inc
xchg
mov
aaa
cmp
jae
outsb
push
jb
ja
sti
dec
sub
imul
popa
sub
xor
cmpsb
push
xchg
loopne
adc
push
aad
cwtl
int
dec
nop
sbb
jbe
aad
enter
dec
lret
xchg
cmpsb
stos
imull
mov
cmpsl
or
xor
jns
jbe
xchg
mov
in
inc
and
xchg
rcl
insl
test
jb
cmp
cmpsb
sub
xor
mov
lcall
fsubr
adc
pop
mov
mov
outsb
mov
movsl
xchg
adc
mov
cmovbe
mull
mov
xor
ds
mov
cwtl
in
pop
idivb
mov
xor
inc
aam
sub
xor
mov
scas
and
test
mov
push
aad
je
mov
pop
pop
dec
push
adc
add
mov
mov
aaa
sahf
int
adc
xchg
fistl
pop
shll
xchg
rcl
out
mov
xchg
xchg
shl
test
lock
inc
mov
fwait
sahf
mov
mov
cmp
das
jl
sbb
fimuls
leave
pop
jp
push
jae
ret
in
or
aas
hlt
movsb
mov
adc
xor
inc
push
data16
mov
in
push
sub
jmp
add
xchg
add
push
mull
mov
lock
xchg
cmp
in
lcall
js
and
xchg
push
push
push
pop
jne
adc
push
imull
popf
sti
lahf
sub
fwait
test
pusha
push
and
stos
xor
xchg
fwait
push
in
subb
xor
sub
das
daa
sti
sub
jmp
or
pop
jo
aad
imul
call
mov
or
ljmp
cmc
imul
cmp
or
jne
push
mov
push
sub
subl
pop
cmpsl
mov
repnz
add
rorl
adc
ja
push
mov
adc
pusha
fucomip
icebp
scas
mov
cmp
mov
jns
jno
cmp
in
test
aaa
jnp
mov
and
or
adc
or
aas
push
mov
mov
cmp
xchg
mov
adc
pushf
pop
cmp
repz
fcmovb
fidivrl
fsubr
outsl
ja
adc
or
jmp
stos
sub
cld
ds
fsubrp
adcb
rorb
add
and
sbb
aad
sarb
sti
in
lods
xchg
lds
call
jl
imul
xor
lcall
les
inc
lcall
mov
mov
mov
pop
mov
jnp
aam
inc
sub
cld
jge
ja
push
aas
scas
sub
adcl
in
pop
stos
jo
jge
scas
sbb
mov
fscale
clc
lods
loop
sub
jle
loope
prefetcht0
lock
cwtl
or
mov
inc
cmp
out
icebp
cmc
pop
test
je
les
inc
incb
decb
mov
and
push
mov
idivl
mov
adc
mov
aad
fcoml
scas
fdivs
push
push
pop
adc
cli
xchg
negb
or
sbb
lahf
je,pt
fbstp
xor
adc
lods
pop
xor
gs
insl
mov
pop
sbb
aad
sub
imul
aas
addb
sub
mov
dec
lods
xor
xchg
negb
mov
leave
in
adcb
inc
imull
xor
ljmp
add
int
jbe
int3
cmp
and
adc
rcrb
flds
mov
adcb
icebp
xchg
jbe
shrb
mov
in
lock
cmpsb
pushf
adc
and
or
push
cmp
daa
out
mov
rcrl
inc
push
insb
jmp
rcll
scas
pand
mov
repnz
dec
or
adc
xchg
or
out
jg
fimull
mov
inc
aaa
enter
xchg
mov
xchg
jnp
sbb
sarb
or
xor
pop
jno
call
jmp
cmpsl
cmp
ljmp
push
mov
mov
test
push
test
mov
addr16
mov
xchg
lcall
push
push
mov
pusha
xor
cltd
mov
rorl
ljmp
mov
sub
cmp
mov
inc
hlt
pop
adc
inc
outsb
jle
pop
xchg
xor
adcl
pop
lret
push
movsb
fwait
scas
sub
mov
mov
pop
lret
jmp
clc
sbb
adc
shl
cmp
insb
insl
hlt
mov
rcll
lea
pop
out
dec
push
fstpt
push
mov
js
in
mov
mov
inc
hlt
add
dec
test
push
xchg
rcl
pop
xor
cmpl
stos
imul
daa
cmp
jle
movsb
jg
xor
pop
shll
xor
pop
stos
outsb
popf
or
inc
sub
stos
mov
adc
mov
popf
push
or
cwtl
inc
enterw
mov
jecxz
into
lods
pop
pushf
outsl
scas
test
paddusw
test
sbb
insb
mov
stc
je
dec
inc
push
stos
ss
rcrb
jl
scas
mov
sub
loopne
or
adc
ja
mov
cwtl
daa
nop
dec
scas
nop
fildll
pushf
lea
insb
ret
mov
mov
xorb
sbb
pop
xchg
cmpsb
es
js
pop
cmp
repz
pushf
sbb
xor
aad
jmp
arpl
iret
testb
push
xchg
and
and
xchg
mov
sub
subl
mov
sub
xor
hlt
sbb
out
or
inc
aaa
adc
pusha
ja
nop
repnz
cmpsl
fldenv
lcall
imul
test
lods
xchg
vpaddd
push
cs
gs
jns
pop
jbe
jge
ds
rcr
dec
in
inc
adc
out
aas
hlt
into
mov
adc
je
shrl
out
or
xchg
xchg
dec
jle
jb
repnz
orps
rorl
xor
mov
adc
test
je
sbb
in
sub
in
lahf
jae
lods
adc
cmp
push
mov
or
ja
add
jo
out
pop
xchg
pop
stos
lock
adc
in
hlt
pop
mov
jbe
dec
out
loopne
adc
ja
jg
xchg
out
ficoms
jne
lea
add
dec
in
lret
dec
jmp
imul
lods
fldenv
out
std
cmp
jp
bound
sarb
push
cmp
jmp
mov
aas
in
leave
in
inc
and
push
mov
sahf
jne
leave
cwtl
mov
push
inc
mov
mov
fsubrl
jmp
or
hlt
cmp
test
sub
jp
movsl
stc
scas
insb
lahf
pop
lods
mov
mov
sbb
push
sub
jmp
xor
sub
cmpb
pushf
dec
ljmp
push
jb
mov
movl
pop
cmp
pop
outsb
ljmp
inc
movl
sbb
sub
in
dec
adc
adc
in
shrl
pop
inc
mov
xor
icebp
int
jnp
sub
cwtl
cs
add
cli
pop
pop
fists
in
mov
stos
enter
loope
pop
cmp
lods
inc
inc
push
and
iret
lds
and
and
aas
inc
je
aaa
push
dec
dec
mov
push
xchg
dec
pusha
lret
sub
lahf
incl
mov
cs
pop
mov
xor
sub
or
nop
or
insl
jp
jo
out
iret
add
push
jecxz
cmp
inc
addr16
adc
int3
dec
stos
mov
jo
xchg
or
lock
mov
push
pop
out
or
xchg
push
popa
add
call
into
mov
mov
fs
hlt
cmp
inc
add
jge
scas
push
fs
pop
ficompl
cmp
cmpsb
cmp
enter
jbe
jo
in
xchg
fs
fsubr
je
mov
ror
loop
lret
mov
sub
cmpsl
add
jge
push
popa
or
pop
test
cmp
xor
push
cmp
push
inc
adc
push
push
scas
xchg
outsb
mov
sub
insb
stc
adc
xchg
rorb
xor
stos
das
fstpl
sub
jb
xor
mov
and
pop
dec
adc
mov
add
addr16
push
test
and
in
mov
adc
cmc
add
xchg
sub
repz
lods
je
insb
js
mov
jns
cmp
jmp
stos
ret
sarb
adc
call
xchg
sahf
pop
sub
jecxz
jp
mov
ja
ret
sub
es
pop
sbb
jl
jg
fistps
mov
pop
pop
insb
cmc
repz
push
jg
or
mov
push
xor
mov
cs
mov
push
lret
dec
rcrb
push
sub
imul
into
shlb
mov
cltd
ss
dec
adc
subb
outsl
cmpsl
das
imul
xchg
out
insb
test
adc
mov
cli
inc
ljmp
adc
xchg
lods
mov
xor
lea
enter
mov
jl
mov
loopne
adc
mov
addr16
inc
sub
stc
out
mov
xchg
or
inc
subl
cli
push
cmp
cmp
sub
adc
inc
xlat
inc
and
lret
inc
jl
jmp
movsb
and
dec
jecxz
mov
lea
mov
mov
out
repnz
sbb
pop
or
notl
enter
jns
cltd
push
sbb
mov
mov
repnz
je
dec
adc
xchg
daa
push
pusha
out
stos
jns
lret
orb
jp
hlt
push
das
jl
xor
mov
xor
pop
loopne
incl
sarl
mov
jge
cmp
mov
aad
ds
sub
adc
mov
pop
scas
popf
add
inc
js
xchg
nop
test
scas
or
mov
mov
addr16
jge
ss
jg
cld
aaa
adc
xor
out
jg
mov
pop
ret
cs
cmp
jnp
jno
loope
bound
cmc
pop
xchg
ret
sbb
and
and
enter
xor
mov
push
aad
stos
pop
mov
std
xlat
xor
xchg
sub
std
push
cld
push
sahf
rol
aas
lods
add
fadd
adc
xlat
or
mov
movsb
add
mov
adc
pop
and
pop
dec
ds
fs
or
into
push
and
push
rolb
xchg
pop
xor
mov
and
xor
cwtl
dec
xchg
rclb
inc
xchg
out
mov
sub
aas
mov
insb
cltd
mov
pop
jg
andb
inc
cmp
mov
cmp
mulb
pop
std
push
je
lcall
jno
cld
or
push
xchg
imul
sarb
testb
xor
jg
adc
push
dec
fstpl
inc
mov
push
and
sar
mov
adc
cmc
shrb
fdivrl
xchg
ss
dec
mov
cmp
mov
xor
sub
mov
jbe
pop
out
sbb
and
test
nop
adc
cmp
mov
out
sahf
push
and
cmp
push
mov
shr
xor
hlt
gs
std
out
xchg
jo
imull
insb
nop
cli
clc
insb
xor
push
xchg
cmp
sub
ret
dec
mov
or
ficoms
outsb
rorl
mov
int
lea
mov
es
ljmp
cmp
xchg
scas
in
aad
jo
xchg
lahf
xor
sarl
test
aam
add
cmpsb
xor
jge
aam
fldt
and
cmp
xor
imul
xchg
or
lock
pop
lods
movb
movsl
aas
pop
stc
cmp
stc
mov
leave
xchg
push
mov
enter
pushl
pop
fs
push
pop
incl
aas
pop
push
enter
imul
jle
dec
dec
push
sub
jbe
insb
scas
pop
icebp
roll
jle
dec
xchg
and
mov
adc
int3
ja
mov
popa
ja
lret
arpl
fcoms
xchg
xor
mov
sub
mov
je
xchg
push
clc
or
mov
repz
lret
mov
stc
xchg
xchg
push
pop
fsubr
int
mov
xchg
out
mov
out
insl
in
adc
cmp
ljmp
mov
ror
pusha
shlb
arpl
int3
xchg
les
mov
movsl
dec
push
lret
xchg
pop
dec
cmp
pop
test
xor
add
lods
fsubrs
dec
mov
or
rorb
push
test
cmp
in
outsb
adc
outsb
fisubrl
adc
addr16
push
mov
pushf
ljmp
adc
sub
repz
in
mov
scas
fdivrl
pop
leave
xchg
pop
adc
cli
jg
dec
clc
rclb
sti
movsl
mov
mov
das
sarb
mov
jl
adc
dec
decl
pushf
daa
xchg
xor
imul
push
icebp
mov
inc
subb
cmp
insl
lret
fs
mov
int
outsl
out
and
int
test
hlt
mov
pusha
sub
jo
test
inc
enter
cwtl
cmc
add
push
jg
pop
cmp
push
lret
insb
pop
lods
subl
or
and
cmc
or
cmp
push
aam
scas
addr16
movd
mov
scas
xchg
out
adc
loope
push
ss
inc
movsb
cmp
mov
cmp
sub
insl
aaa
adc
jl
xorl
jge
inc
xor
in
lret
jmp
scas
xorl
int3
rcrl
ja
mov
scas
stos
or
pop
jle
mov
push
jp
jae
cli
mov
imul
cmpsb
test
je
xchg
push
hlt
mov
and
out
int
add
aaa
cltd
mov
add
pop
mov
mov
inc
xchg
mov
jge
inc
pop
shrl
cmp
xchg
in
int
and
sahf
lea
sub
jle
loop
lcall
xchg
hlt
leave
nop
jmp
fwait
mov
sbb
jg
cmp
bound
aaa
adc
fisttpl
pop
daa
in
adc
mov
cmp
pop
mov
adc
out
adc
dec
inc
xor
and
out
mov
fs
jle
dec
lahf
out
cmp
xchg
ficomps
ficoms
aad
es
lret
adc
js
mov
and
push
adc
pop
cmp
xor
push
mov
adc
outsl
fsub
xor
xlat
jnp
into
xchg
xor
out
mov
jno
out
xor
jp
cmp
sbb
mov
xor
js
faddl
xor
pushf
mov
aam
cmp
mov
lock
xchg
adc
adc
divl
test
scas
push
out
sbb
ja
pusha
sub
insb
daa
jmp
test
sub
movsl
adc
sbb
mov
adc
cwtl
xchg
mov
jne
cmp
rcrl
pop
int3
sbb
and
mov
add
xor
stos
pop
dec
mov
or
ljmp
lods
xchg
arpl
mov
cmpb
xchg
xor
xchg
ret
cmp
fsubrs
lods
adc
add
mov
pop
das
and
loope
or
fcompl
xor
xor
arpl
cmc
xor
mov
mov
cmp
xchg
aad
lods
movsb
in
adc
xchg
es
orb
jmp
negl
popf
sub
mov
repnz
sub
inc
in
xor
je
loope
mov
xchg
add
iret
cmc
cmp
gs
call
aaa
mov
adcb
hlt
push
negl
inc
addr16
xchg
in
rclb
popa
mov
cmc
fwait
xchg
popf
mov
sbb
movsb
imul
outsb
cmp
mov
cmp
loop
fnstcw
lods
scas
push
cmovle
push
cmp
pop
mov
inc
and
mull
ljmp
push
adc
push
mov
fistps
lret
insb
pop
int3
call
les
test
dec
mov
mov
cmp
adc
mov
fwait
mov
push
adc
into
xor
pop
ljmp
jle
test
push
cmp
push
jmp
jecxz
sub
sbb
jle
mov
xchg
shl
ss
clc
push
pop
mov
mov
mul
test
mov
mov
mov
push
scas
stos
cld
push
lods
mov
negl
sbb
or
mov
outsl
ret
xchg
ret
cmpsl
test
add
das
and
fsubl
outsb
cmpsb
xchg
mov
adc
stos
loope
out
xor
repnz
add
jmp
aas
pushf
in
mov
mov
adc
fsubrl
mov
ss
jmp
ret
mov
ficoms
imull
mov
sbb
mov
enter
mov
sbb
jl
dec
js
mov
push
cmp
pop
mov
cmpsl
pop
test
aad
dec
pop
enter
stos
sbb
cmp
mov
mov
jmp
mov
mov
adc
mov
sub
daa
push
dec
inc
cwtl
aaa
int
notb
add
scas
lret
les
mov
mov
jl
rolb
and
or
jmp
cwtl
stc
dec
ljmp
inc
xchg
aas
call
std
leave
das
mov
push
xchg
lea
mov
mov
xchg
ljmp
fmulp
mov
push
cmp
cmp
mov
and
pushf
or
mov
das
sub
ljmp
enter
popf
das
fnsave
mov
cmpb
push
dec
push
divb
daa
xchg
mov
push
icebp
cmp
sub
xchg
xor
lds
cmp
mov
sbb
scas
sub
fwait
sub
and
mov
loop
ret
pop
mov
jl
xchg
aaa
into
call
lcall
inc
call
push
inc
std
lret
mov
push
xor
mov
fxch
in
and
hlt
sti
mov
dec
mov
push
dec
mov
movsl
pushf
dec
out
jmp
adc
jne
inc
lock
dec
movl
aas
dec
mov
aaa
mov
out
mov
adc
sub
popf
shrb
je
dec
or
das
push
push
test
insb
xchg
popf
cmp
cmp
adc
cmp
in
pop
enter
xchg
fcoms
faddl
xchg
and
inc
out
xor
push
adc
pop
nop
cld
xchg
pop
or
jbe
ljmp
pop
or
adc
into
clc
push
lret
fwait
mov
and
scas
mov
adc
pop
jg
push
jno
test
cmp
add
adc
xor
mov
jl
shll
xchg
mov
ljmp
mov
pop
stos
push
cmp
xchg
js
call
test
mov
xor
leave
pop
cmpsb
cmpl
sub
xchg
xlat
in
test
popa
scas
inc
rcll
inc
cmp
lcall
xchg
inc
adc
xor
push
mov
les
jbe
mov
negb
fdivs
inc
mov
inc
imul
pusha
xor
inc
mull
lret
xchg
rolb
subb
ret
pusha
mov
inc
xor
mov
stos
fdivs
je
pop
imul
or
jno
sub
mov
mov
push
xchg
cmpsl
mov
out
mov
mov
pop
push
ja
mov
jp
aaa
and
pop
stos
jge
dec
mov
out
inc
enter
ljmp
push
sub
mov
mov
xchg
xchg
movsb
aam
movsl
xchg
insb
sbb
jnp
test
iret
sbb
mov
loop
xor
stos
cmp
mov
and
mov
lock
mov
shr
xchg
pushl
fdivrs
adc
jbe
sti
aam
mov
push
pop
lods
into
movsb
lret
sbb
test
xlat
jl
mov
xor
pusha
scas
cmpl
xchg
rorb
push
mov
xor
rol
xor
jmp
mov
les
mov
ss
push
xchg
imul
outsl
insb
and
xchg
add
repz
out
jg
imul
mov
gs
imul
cmp
jns
lds
lret
xor
into
lret
sarb
push
and
movsb
or
loop
xor
pusha
add
mov
inc
das
mov
hlt
add
and
out
aas
pop
xorl
cmp
xchg
sbb
cmp
cwtl
cmpsl
mov
adc
sub
clc
push
dec
fisubrs
sub
sub
and
scas
inc
lea
inc
ffree
repnz
fdivrp
out
mov
enter
dec
aam
fidivs
loop
nop
fbstp
pop
push
pop
int3
add
or
das
outsl
popf
in
jecxz
xchg
mov
shl
pop
pop
xor
add
jmp
stos
pop
sbb
cmp
sub
cmc
cmpsl
stos
push
jg
hlt
cmpsl
pop
ret
mov
sub
movl
out
and
in
in
das
adc
adc
je
xor
mov
repnz
dec
mov
movswl
and
rorl
push
xlat
iret
or
ljmp
add
mov
sti
jbe
sbb
push
sbb
loope
push
push
pop
loop
push
push
adc
cltd
add
mov
scas
popf
pop
out
inc
xor
mov
fadds
ss
cmp
push
adcb
add
les
loop
add
adc
cmp
jo
pop
insb
les
jo
and
lock
dec
push
test
add
cmp
ds
in
sub
and
inc
jg
xor
jo
clc
int3
int
hlt
sub
sub
mov
xor
mov
insb
roll
mov
loop
cmp
mov
out
mov
adc
mov
int3
cmpsl
mov
jle
out
das
add
call
add
lods
push
mov
int
adc
test
jbe
inc
adc
jl
add
lcall
ds
mov
mov
outsl
mov
inc
fidivrl
xchg
sub
adc
loop
dec
aaa
imul
loope
push
hlt
insb
add
push
test
mov
xchg
adc
xchg
mov
stos
pop
xor
adc
popf
push
dec
mov
push
pop
std
jp
jmp
ds
repnz
mov
std
hlt
lea
xchg
clc
lahf
mov
in
test
shr
mov
inc
cmp
and
lods
sahf
xchg
cs
pop
or
in
arpl
lea
pop
push
lds
subl
xchg
negl
das
mov
notl
add
push
xchg
mov
push
sahf
sbb
mov
dec
fadds
xchg
idivl
lret
nop
xor
lea
mov
or
lcall
enter
cmp
pusha
fldz
jmp
shlb
mov
adc
sub
in
bound
jnp
sti
outsb
mov
addr16
xchg
xor
cmpsl
cmpsl
fsts
in
sbb
and
xor
notb
ss
sub
inc
mov
addr16
sub
popa
insb
sub
adc
pop
mov
xor
push
sarl
nop
push
adc
add
and
loope
xchg
hlt
sbb
or
inc
mov
test
mov
mov
les
or
into
ret
xchg
ljmp
rclb
adc
mov
fisubl
push
bound
popf
test
sahf
xor
scas
sub
and
test
jbe
adc
push
lods
cmpsb
sbb
insl
adc
call
adc
out
stc
fdivp
out
mov
pop
jbe
cmc
gs
jge
call
sub
xchg
adc
ror
addr16
mov
movsb
inc
cmpl
inc
sbbl
hlt
mov
imul
mov
add
mov
mov
xchg
lea
jl
jge
sub
fisubs
outsl
icebp
stos
mov
cwtl
xor
aad
inc
dec
pop
jbe
addl
xor
js
inc
clc
jecxz
push
out
dec
pop
adc
movsb
mov
xchg
ds
jo
adc
sub
jno
cmp
aad
je
je
inc
mov
lods
or
loopne
pop
imul
adc
xchg
jl
mov
cmp
iret
or
sub
ss
test
adc
xchg
xor
loop
jbe
inc
ss
push
insl
arpl
xor
jmp
jg
adc
ja
mov
mov
cmc
outsb
out
pop
and
les
movb
pop
xor
and
fcoml
leave
out
adc
js
dec
std
add
imul
mov
pop
adc
add
call
and
xor
pushf
add
adc
dec
cs
in
jle
and
in
ja
push
adc
das
pop
sub
pop
stos
rcrb
push
jp
push
push
inc
mov
stos
mov
lea
pop
ljmp
call
cmp
mov
loopne
dec
jbe
adc
ret
test
and
rcll
jmp
sub
dec
loop
cmp
test
fldcw
mov
mov
subl
xchg
adc
dec
mov
xchg
sbb
sbb
xorl
mov
ror
hlt
jecxz
push
xchg
cmp
les
xchg
movsl
pop
push
and
popf
clc
mov
sub
enter
scas
int3
add
pop
popf
cltd
mov
mov
dec
inc
xor
insb
mov
es
fisttps
ret
das
stos
lret
shlb
test
test
jecxz
sub
insb
mov
mov
call
cmc
xchg
sub
ret
repnz
xor
jno
or
mov
mov
push
push
sub
js
jle
lret
cmpsb
xor
hlt
dec
and
adc
xor
inc
adc
ret
mulb
ret
mov
shr
jo
mov
or
std
out
loope
hlt
mov
insb
mov
xor
daa
xchg
into
pop
sub
out
mov
jbe
and
xor
mov
push
mov
mov
enter
pop
js
dec
adc
adc
cmp
add
adc
aas
add
arpl
xchg
add
mov
std
adc
ds
aad
sub
aad
lea
cmp
push
inc
cmp
mov
pop
mov
dec
inc
jle
icebp
aaa
stc
mov
jl
adc
adc
aad
mov
sti
jmp
mov
imull
cld
fidivl
cmc
lods
pop
scas
loopne
pusha
xchg
and
aam
lods
das
adc
lds
pop
jnp
hlt
add
sub
or
and
aaa
lret
popf
and
imulb
cmp
cltd
lcall
cmp
push
enter
test
and
xor
outsl
mov
scas
xor
test
jl
insl
xchg
insb
lock
dec
cmp
pop
jle
or
inc
cmp
ret
push
mov
or
xchg
lahf
xor
rcll
mov
jbe
mov
mov
and
scas
mov
cmp
test
xor
jne
lret
fistl
add
or
frstor
cmp
fld1
movsl
lret
push
mov
push
xor
outsb
pop
fcoml
arpl
xor
sub
je
mov
out
cmp
mov
mov
movsl
mov
mov
xor
sbb
jmp
stos
mov
aaa
cmpsl
cmp
push
xor
aam
bound
xchg
push
jnp
std
dec
adc
sub
test
push
rorl
xchg
push
js
das
mov
mov
movsl
mov
push
leave
test
push
test
xor
imul
mov
cmp
stos
popf
xchg
test
xor
or
ds
or
call
je
pop
std
xor
dec
test
xorl
scas
fs
cmpsb
push
xchg
sub
out
and
push
xchg
in
fwait
fs
push
mov
pop
jl
pop
out
mov
adc
pop
hlt
nop
jp
insb
test
ja
repnz
sbb
and
adc
fidivs
lock
stos
xor
dec
mov
xchg
jae
fsubrl
js
clc
xchg
pop
xor
dec
sbb
and
pusha
loop
adc
cmpsl
outsl
jp
cmp
xchg
push
stos
nop
cwtl
rcll
xor
mov
adc
add
adc
jmp
cltd
in
mov
fs
sub
test
das
jmp
mov
sub
and
sub
adc
cmpsl
xchg
daa
fcompl
or
push
add
ret
add
mov
mov
in
gs
fisubrl
rol
jae
iret
dec
aam
add
push
gs
scas
insb
int3
out
jmp
add
jmp
push
inc
xchg
add
xchg
jb
xor
je
mov
out
jmp
or
lods
adc
ss
out
into
push
pop
sbb
pusha
cmp
rolb
push
in
jb
insl
in
cmc
fsubrl
icebp
add
jne
enter
mov
push
insb
sti
sub
mov
scas
pop
mov
and
adc
xor
jnp
push
inc
push
arpl
popf
mov
jno
mov
gs
pop
mov
adc
out
inc
mov
outsl
xor
push
adc
out
lret
in
xchg
mov
fldenv
jo
pop
cmp
ret
fldl
push
mov
add
adc
aad
inc
fmul
fnstsw
and
add
imul
mov
notb
shlb
imul
ror
push
xchg
movsl
pop
cs
xchg
in
mov
cli
lahf
js
popa
shrb
test
cmp
out
mov
out
mov
mov
stos
mov
add
jecxz
stc
ds
push
dec
std
xchg
es
sar
pop
je
adc
lcall
sub
bound
pop
inc
xchg
aaa
jp
orb
jp
int
movsl
jb
movsl
sub
cmp
sub
mov
aam
scas
mov
jo
in
mov
popf
push
hlt
jns
arpl
out
je
pop
add
aaa
movsb
sub
mov
cmpsl
jecxz
pop
inc
hlt
jae
adc
mov
ds
xor
cwtl
aam
push
adc
stos
push
and
sarb
add
jl
or
jns
insb
pop
arpl
fdivrs
sub
mov
test
adc
add
out
mov
push
dec
enter
mov
inc
mov
stc
lret
jecxz
fistl
in
adc
xor
pop
lock
adc
dec
leave
push
int
mov
je
xchg
loopne
sub
and
mov
test
mov
pop
dec
mov
enter
adc
jge
push
scas
jg
sub
pop
xor
add
jo
pop
popa
dec
mov
mov
call
cmp
mov
mov
lahf
movb
mov
scas
flds
jno
jo
cmp
and
lds
add
test
sub
imul
xor
adc
je
lock
fcmovnu
js
mov
xchg
jle
scas
jns
add
jge
insl
and
sbb
push
add
fwait
sbb
enter
test
leave
mov
mov
scas
jno
ss
mov
mov
xor
pop
lea
test
jo
cwtl
inc
push
adc
pushf
jo
movsl
test
sbb
adc
pop
cmp
test
ret
loop
mov
insb
pop
mov
xchg
lahf
mov
lret
sbb
adc
dec
movsb
sbb
pop
push
and
jae
cmpsb
xor
mov
dec
scas
lods
jno
mov
sub
mov
ds
inc
aaa
push
mov
outsl
lods
and
movsb
jae
std
xchg
pop
pop
ljmp
clc
lcall
cmp
dec
out
mov
xchg
jbe
fs
sbb
cs
imul
enter
xchg
mov
inc
inc
push
xor
and
stc
int
dec
mov
lock
arpl
ficoms
ss
scas
sahf
inc
xor
es
cmp
add
out
test
sub
adc
mov
dec
sub
sub
out
insb
mov
pop
jecxz,pt
das
sbb
into
sbb
jmp
enter
xchg
jmp
mov
dec
enter
aaa
inc
adc
adc
adc
push
repnz
jnp
lock
out
adc
lock
cwtl
pop
mov
sbb
out
incb
cmp
push
jmp
nop
test
mov
pop
mov
mull
ss
jne
inc
clc
cmc
into
cld
cmp
lock
test
movsb
sti
push
pop
pop
ret
or
pop
cmp
shll
adc
xchg
repz
enter
push
and
push
icebp
aaa
dec
jp
lret
mov
imulb
ja
push
jbe
pop
sahf
popa
mov
cmp
leave
cwtl
or
pop
cmp
fnstenv
orl
cmp
cs
ret
adc
jbe
fsubs
inc
mov
jg
push
dec
sbb
xor
inc
ljmp
mov
mov
xor
das
movsb
xchg
in
adcl
outsb
mov
xchg
fisubs
rcll
or
arpl
dec
inc
es
repz
es
pop
jg
sub
sub
fwait
pop
mov
cmc
imul
or
cmp
sarl
sub
loop
subb
push
ds
call
pop
mov
mov
pop
cmpsb
shl
or
es
sub
mov
push
mov
dec
popa
xor
shld
xlat
sub
pop
push
mov
cmpsb
or
cmpsl
in
bound
xlat
push
popa
ds
mov
mov
dec
sbb
lea
sub
dec
hlt
inc
or
dec
call
rcrl
enter
pop
xor
jle
adc
sub
pop
stc
jg
inc
aas
sarl
pop
and
call
pop
enter
push
jg
sub
push
pop
out
ds
lret
xor
js,pt
adc
out
sti
stos
or
rclb
xchg
dec
mov
ja
mov
push
ja
sahf
mull
insl
outsl
inc
clc
pop
dec
adcl
sub
icebp
add
add
adc
pop
add
adc
or
xchg
leave
lahf
test
mov
sbb
mov
push
jnp
shrb
in
aas
add
xor
dec
shrl
test
fildll
xor
outsb
ds
pop
lods
imul
fwait
insl
dec
ficompl
pushl
sar
push
dec
xor
ds
xor
gs
iret
mov
lock
ljmp
mov
sarb
add
jl
pop
lret
mov
mov
and
in
jp
jns,pn
push
cmpb
mov
das
xchg
push
leave
add
jne
test
data16
idivl
inc
scas
xchg
movsl
jmp
in
fcomi
cs
mov
data16
stc
cmp
sbb
das
js
jae
in
adc
push
lcall
jnp
rclb
and
fistpl
testl
pusha
adc
outsb
rorl
je
aam
mull
fsts
xchg
fcoms
jle
inc
addr16
enter
xchg
sbb
loopne
sub
into
in
cmc
sbbb
cwtl
xacquire
lea
pusha
inc
aam
pop
push
mov
insl
pop
cltd
pop
lock
and
mov
lods
sub
cmpsb
xchg
ds
mov
push
ja
jl
inc
test
movb
mov
popa
sub
das
decb
dec
out
cmp
jne
jecxz
sub
mov
fidivrs
popf
adc
dec
mov
pop
rclb
add
fisttps
lret
pop
je
enter
mov
lret
cmp
mov
and
cltd
subb
cs
adc
cmp
xchg
push
push
jnp
test
dec
mov
mov
pop
jno
cmc
lods
xchg
pop
or
cld
mov
push
mov
mov
addr16
push
test
das
adc
and
pop
mov
in
and
stos
pop
jl,pt
dec
mov
dec
int
xchg
push
aas
push
mov
out
mov
in
rcrl
mov
mov
jb
push
lods
jp
dec
sub
cmp
push
lahf
addl
cmp
cmp
push
fildl
iret
jmp
jmp
fwait
push
or
pushf
loop
mov
popa
add
ret
les
pop
popa
push
xor
cltd
movsb
dec
cs
into
xchg
add
and
push
adc
add
and
xchg
std
pop
subl
jg
push
push
mov
mov
adc
test
cld
iret
movb
mov
inc
inc
jb
sub
jle
rcrl
pusha
imulb
lock
xor
repz
mov
fucomi
repz
sub
jge
jge
sahf
fs
jl
mov
jmp
fcoml
sub
pop
or
out
ja
mov
and
adc
insb
adc
push
out
add
test
adc
sbb
jl
inc
adc
xchg
fmuls
imul
add
dec
call
pop
xor
sub
cmpsl
xor
in
mov
push
sub
pusha
xchg
and
lret
sbb
jno
lods
or
adc
adc
mov
mov
pop
sarl
dec
pusha
subl
and
aas
dec
ds
out
lods
shr
jmp
jno
in
pop
mov
shll
pushf
test
jbe
aam
scas
das
pop
mov
in
loope
fdivr
nop
sarb
shl
cli
clc
xor
jmp
mov
and
xor
aaa
cmpsl
mov
ret
pop
mov
adc
mov
sbb
into
pop
ss
xchg
mov
sub
jle
das
sbb
inc
gs
jl
sbb
sub
out
inc
and
inc
ficoms
fs
or
adc
cmp
push
pop
std
cmp
fwait
es
sub
movsl
lret
sub
imul
test
xchg
stos
inc
icebp
dec
xchg
je
mov
lcall
ss
rcrl
das
xchg
pop
xor
inc
ds
rol
and
stc
jmp
cmp
dec
into
lret
or
adc
xchg
add
push
outsl
fdivrl
push
sbb
inc
icebp
jmp
cld
push
mov
loopne
rcll
xchg
xor
scas
sbbb
stos
pop
fnstcw
test
add
loope
mov
mov
fsubrs
sbb
ret
add
bnd
test
pop
out
imul
sbb
sub
gs
cwtl
cs
pop
sbb
call
lret
cmp
sub
mov
scas
loopne
hlt
stos
mov
insl
jae
ja
icebp
cmc
jl
rcl
adc
push
add
xchg
jmp
nop
jae
in
jnp
mov
arpl
jb
jae
or
insl
scas
sbb
adc
popf
fwait
shrb
insl
imul
and
jo
fmuls
outsb
mov
sar
out
inc
lea
ret
cmpsl
lock
sub
loop
jno
mov
mov
das
nop
lahf
sub
mov
js
mov
call
in
mov
outsl
int3
dec
aam
pop
mov
pushf
adc
adc
imul
test
push
ja
fistpll
out
xchg
shrl
je
adc
jbe
movsb
pop
in
xor
into
lret
cmc
jge
cmpsl
lods
mov
shl
jle
scas
ja
sbb
pop
sub
adc
ds
data16
flds
stos
je
in
imul
push
hlt
ret
into
jl
out
loopne
and
cmp
pop
hlt
sub
leave
rorl
mov
push
ret
mov
pop
xchg
out
fistpll
int
xchg
lret
cmpsl
into
lret
mov
xchg
jmp
inc
dec
push
mov
sbb
adc
or
cmp
sbb
std
cmpsb
jle
xlat
inc
lea
mov
cld
push
jne
xchg
cmc
dec
or
sahf
xchg
loope
int
loop
or
sub
insl
dec
cmp
dec
jnp
push
inc
or
pop
dec
scas
ss
inc
shrl
push
mov
loope
pop
pop
mov
js
and
cmpsb
icebp
push
mov
lods
mov
inc
push
mov
loop
hlt
pop
xchg
lods
jge
or
cmp
adc
jecxz
addr16
cmp
inc
mov
sbb
xor
jns
push
and
mov
jns
sbb
stos
lods
xorb
sub
enter
jnp
adc
jnp
pop
add
enter
mov
xchg
dec
mov
xchg
jecxz
fisubs
mov
jl
loope
or
fisubrl
and
xorl
mov
ljmp
scas
shll
mov
scas
repnz
sbb
sub
jp
xchg
adc
jge
fbld
insl
stos
or
xchg
aas
mov
out
fs
mov
adc
popa
stc
negb
das
mov
jmp
lods
ljmp
shl
lock
mov
and
das
mov
mov
mov
icebp
clc
pop
and
push
xor
mov
xor
jb
popa
push
stos
push
xlat
cld
adc
rcll
iret
xor
mov
or
outsl
enter
pop
sbb
xchg
daa
jo
int
sub
cmpsb
or
jbe
or
or
divb
and
int3
mov
push
int
jmp
js
inc
lret
mov
or
add
aaa
sbbb
adc
jo
xchg
push
pusha
adc
clc
xorb
add
xor
gs
mov
ret
mov
mov
mov
pushf
insb
loop
jo
loopne
in
mov
stos
jns
xor
xchg
int3
sub
aas
dec
out
adcl
test
sti
pop
dec
inc
inc
ljmp
push
mov
cmp
adc
in
out
test
test
mov
jge
sarl
sbb
ss
mov
fcmovne
xchg
sbb
adc
xchg
lds
add
mov
lret
pop
enter
sbb
dec
jne
xchg
clc
rol
pop
cmp
mov
js
push
mov
adc
in
xchg
popa
orl
pusha
mov
mov
dec
scas
adc
jbe
pop
xchg
ljmp
jbe
outsl
push
inc
cmp
sbb
pop
mov
jne
jp
xchg
pusha
adc
push
sbb
icebp
shll
subl
vrsqrtss
aad
aam
pop
mov
jge
imul
insl
movsl
or
pop
mov
adc
aas
mov
sbb
push
adc
push
or
and
addr16
add
jge
mov
daa
mov
xchg
cltd
add
incl
imul
dec
data16
cld
ret
adc
mov
lods
adc
push
call
fldenv
int
and
fsubrl
cmp
in
repz
adc
in
mov
aaa
in
xchg
subb
shrl
adc
jne
push
push
inc
mov
mov
insb
ljmp
cmpsl
roll
ja
repnz
ss
mov
je
mov
inc
scas
jns
cwtl
push
adc
cmp
dec
pop
and
pop
mov
test
xor
aas
adc
roll
das
xchg
test
mov
xor
cmpsl
jl
pop
movsl
ljmp
iret
mov
inc
aam
lods
mov
daa
fstps
mov
lds
dec
notl
jmp
insb
mov
dec
ret
dec
jne
or
fwait
mov
mov
enter
das
dec
push
stos
je
adc
lcall
push
or
shlb
cli
jbe
popa
rcll
push
insb
xor
jmp
cmp
add
pop
lret
cli
push
imul
mov
cs
call
out
jmp
lcall
push
lock
xor
sub
push
cmp
adc
push
shlb
jge
add
mov
mov
mov
fwait
sub
and
int
notb
cmp
das
outsb
ss
repz
xorb
or
inc
cltd
xlat
push
add
outsb
mov
leave
or
dec
scas
mov
outsb
int
mov
cmc
xchg
dec
clc
xchg
pop
cmp
xchg
mov
cmp
fisttpll
sub
push
add
adc
push
shll
sbb
inc
jecxz
push
push
in
ss
js
cmpsl
out
sub
lock
pop
pop
mov
or
test
pop
cmp
adc
inc
nop
mov
das
cmp
adc
xchg
add
in
cmp
jne
jmp
cmp
mov
or
push
dec
adc
pop
sahf
movsb
test
dec
das
dec
insl
int
in
jg
mov
push
movsb
mov
jp
mov
adc
ja
lods
test
fsubs
call
and
hlt
xchg
ss
jnp
aad
push
jg
int3
mov
mov
mov
adc
inc
lods
jecxz
adc
jge
push
and
and
adc
stc
pop
mov
sub
and
stos
and
pop
dec
xor
xor
lods
add
inc
movsl
jmp
mov
sti
icebp
ljmp
jge
lods
stc
or
out
aaa
leave
jb
jbe
shrl
cmpsb
push
vsubpd
pop
adc
call
cs
xchg
pop
dec
mov
mov
mov
sbb
lea
mov
pop
add
int3
adc
jle
faddl
pop
xor
adc
inc
das
adc
xchg
out
std
or
fidivl
scas
adc
in
mov
outsl
jmp
out
scas
jmp
cmp
int3
push
jl
imul
insl
enter
jge
jb
inc
and
dec
xchg
sbb
cmp
sbbl
test
cli
and
das
adc
or
mov
rolb
mov
adc
sub
popw
pushf
xchg
jle
ja
je
out
pop
dec
shll
mov
cmp
js
jecxz
test
xor
cmc
xchg
dec
js
cs
inc
jnp
pusha
ljmp
mov
iret
jbe
idivb
push
test
and
fnsave
sbb
call
sub
pop
push
adc
xor
lods
ljmp
ret
aam
and
cmp
mov
push
and
arpl
sub
fwait
sub
rol
jne
jle
arpl
lock
jo
ss
adc
mov
in
xchg
xchg
fmul
in
mov
pop
adcb
push
ja
popa
es
pop
mov
add
jnp
and
mov
cmpsb
adc
leave
cmp
int3
and
lds
sti
push
lcall
inc
cmp
xchg
mov
mov
cmpsl
aam
xorl
mov
ja
push
mov
pop
inc
ret
xchg
das
add
in
mov
fiaddl
cli
mov
sti
adc
cmc
and
test
in
aaa
decl
movsl
jns
sbb
inc
jmp
and
shll
mov
pop
test
dec
sti
pop
xor
jb
loop
jae
xchg
sarb
xchg
push
mov
inc
mov
repnz
jae
xchg
xchg
mov
ljmp
jg
inc
lea
out
int3
push
xor
adc
cmp
fcom
push
pop
ss
cmpsl
mov
inc
xor
xor
lret
push
mov
ret
and
arpl
arpl
jne
mov
aad
mov
mov
rorl
xor
out
mov
push
xor
in
icebp
lcall
cmc
cmp
fidivl
mov
fwait
inc
rcrl
mov
jno
cmp
xor
mov
fwait
scas
inc
das
nop
mov
adcb
cmp
jmp
sbb
mov
negb
push
andl
xchg
jecxz
test
xchg
fcomip
nop
pusha
call
xor
out
shlb
mov
cmp
push
inc
mov
inc
jl
imul
inc
enter
cmpl
dec
inc
or
cmc
dec
adc
ret
dec
cs
push
or
jmp
xor
les
cmp
jp
sahf
jmp
xor
fsubrl
in
imul
pop
mov
jne
lods
mov
pushf
es
dec
rclb
aas
out
popf
adc
jge
sub
insl
mov
adc
shlb
imul
in
lock
jo
mov
xchg
insl
and
xor
xor
jns
push
test
fildll
cmp
xorl
or
sub
aas
lret
fildll
push
sub
jae
fwait
push
ds
cmp
xchg
cmp
push
and
mov
insb
xchg
jmp
leave
inc
add
test
loopne
aaa
ret
pop
ss
lea
mov
xor
sub
idivl
mov
pop
jl
jno
mov
sahf
das
fmuls
inc
push
jmp
cwtl
incb
jns
jbe
mov
mov
test
fmulp
cmp
adc
stos
test
loop
ret
pop
dec
push
mov
pop
stos
outsl
test
jno
cmp
outsl
jmp
push
fsubrs
xchg
cmpb
xor
push
mov
mov
ret
xchg
mov
leave
jp
lods
push
iret
lahf
or
lcall
shr
lods
mov
cmp
cmp
movsl
dec
xor
adc
adc
in
std
ljmp
mov
push
sbb
repnz
sbb
sbb
jle
sub
pusha
leave
enter
inc
adc
mov
mov
shrl
mov
aad
nop
mov
xchg
push
rorl
cmpb
dec
mov
jbe
sbb
das
flds
cmp
sub
nop
add
push
xchg
ljmp
lcall
popl
adc
mov
xchg
push
mov
sub
and
add
in
jno
and
mov
xor
outsb
mov
es
dec
xchg
mov
scas
cmp
dec
sbb
ret
arpl
andl
xchg
test
add
inc
sub
sahf
out
aas
jge
inc
push
rclb
mov
push
sbb
in
outsb
out
cltd
cmpl
mov
imul
out
mov
cmpsb
ss
mov
stos
or
dec
inc
stos
mov
adc
adc
icebp
cmc
jnp
mov
ss
push
mov
aas
aam
or
jne
jg
xor
push
lods
xchg
in
ss
lret
mov
lds
lods
cmp
cmp
xor
out
jbe
lock
push
mov
mov
ret
push
xchg
push
pop
sbb
mov
add
aas
out
mov
dec
les
outsb
cli
call
pop
sbb
jae
mov
jmp
popa
dec
and
loop
adc
in
rol
icebp
xor
adc
mov
jl
or
ljmp
sub
adc
popa
mov
es
mov
aas
push
ja
fildll
and
sub
js
subl
mov
xchg
inc
dec
sub
call
and
mov
lods
into
xchg
jbe
dec
addr16
fcomi
sub
pop
jne
sti
xchg
sub
shlb
dec
inc
xor
mov
out
hlt
rol
rcll
ret
adc
fimuls
add
in
mov
test
mov
ss
in
aas
and
push
aaa
xor
inc
mov
push
inc
dec
lret
mov
mov
ljmp
outsl
sub
cmp
inc
mov
xor
inc
adc
movsb
pop
mov
out
mov
repnz
enter
add
xchg
jb
add
fsubrs
enter
jecxz
jbe
fcoml
lock
mov
ljmp
lret
xchg
les
dec
xchg
xlat
push
lock
push
and
mov
push
dec
addr16
inc
xchg
xchg
mov
pop
fwait
push
mov
adc
outsb
sub
jl
in
cmpb
outsl
add
pusha
inc
pop
punpckhbw
push
enter
sbb
jmp
in
add
insb
loope
push
rclb
jp
repnz
push
pop
test
repz
call
sub
cwtl
xchg
imul
lods
mov
pushl
pop
scas
mov
adc
adc
addr16
movsl
in
into
enter
pop
xchg
into
cmp
roll
pop
cmpsl
mov
cltd
mov
call
cmp
mov
pop
jb
jne
lret
mov
enter
push
and
cltd
xor
aaa
adc
pop
pop
test
les
jae
jns
jge
imulb
mov
jmp
push
xchg
mov
mov
inc
sbb
sbb
add
mov
push
mov
movsl
lea
mov
rcrl
insb
rolb
push
inc
in
inc
out
or
xchg
pop
pusha
clc
xchg
pop
hlt
das
shrb
dec
mov
adc
fnsave
sub
and
mov
insb
pop
xchg
fs
xor
insb
aaa
jmp
pop
jmp
and
inc
shrl
lret
pop
push
mov
cltd
cmp
in
loopne
pusha
mov
jae
arpl
and
inc
hlt
xchg
xor
call
or
sbb
or
add
mov
fistps
sbb
test
adc
mov
mov
dec
movsl
or
adc
xchg
pushf
lcall
jg
dec
mov
sub
add
lea
ja
cmp
inc
sbb
setnp
mov
inc
pop
loope
adc
adc
cmp
sbb
push
sub
mov
add
or
stos
outsb
xor
sub
in
add
mov
pop
out
mov
scas
inc
cmp
test
cmp
stos
sbb
jle
aam
push
mov
sbb
jle
lret
test
push
orb
and
sub
imul
lock
pop
sbb
jle
mov
arpl
mov
ret
lret
in
adc
bsr
jg
jno
insb
shll
jae
insl
mov
je
add
cmp
lahf
pop
and
in
mov
mov
jbe
push
mov
pop
adc
and
dec
pop
addr16
push
fistps
sahf
mov
sub
mov
push
mov
sub
fsubl
aaa
fists
out
cs
lods
ds
dec
mov
sbb
or
in
lods
in
lds
inc
dec
xor
lock
jmp
aas
sbb
sbbl
ret
xor
xchg
subl
xor
stos
push
and
pop
jns
data16
andl
movsb
test
cmp
dec
inc
push
adc
sahf
movsl
push
jmp
js
inc
xchg
push
jmp
jp
mov
sti
cmp
pop
or
out
mov
push
adc
lods
sub
cmc
fsub
add
std
xchg
jo
push
lahf
aad
call
adc
insb
jge
stos
ds
mov
mov
add
fdivs
cli
jge
inc
push
push
jb
cmp
cwtl
cmpsb
bsr
mov
insl
in
es
int
jmp
divl
sub
push
fadds
fbld
jo
out
mov
fsubp
mov
mov
mov
outsb
inc
loope
adc
xor
push
stos
fs
cli
pop
jge
loop
cmp
cmc
mov
dec
xor
sti
sbb
push
in
in
xchg
sahf
mov
enter
push
jmp
dec
out
pop
sti
nop
pop
push
xchg
test
fdiv
mov
adcb
es
sub
rcll
jo
in
push
cmc
xor
xchg
inc
push
cli
mov
jbe
jge
xor
cmc
adc
xor
sti
lock
adc
stos
jg
icebp
ss
testb
add
adc
andl
dec
lret
inc
mov
scas
and
push
ds
fistpll
xor
xor
call
icebp
fisubl
outsb
mov
clc
leave
addl
js
lds
lock
je
jbe
dec
call
xchg
xor
push
dec
fisttps
pop
jle
pop
mov
and
data16
call
xchg
sub
xor
adc
mov
aad
mov
cs
and
not
cmc
sahf
adc
inc
roll
and
jg
stos
push
adc
or
ret
div
rcll
enter
out
es
stos
cmp
mov
in
sub
and
adc
and
inc
mov
inc
int3
fsubs
pop
cmp
xchg
or
mov
dec
dec
xor
cmc
xchg
mov
dec
cmp
in
jle
and
xchg
mov
dec
pusha
cmp
lea
mov
mov
lods
adc
imul
sub
out
gs
mov
fwait
in
jnp
clc
inc
jmp
xor
dec
push
repnz
sub
shrb
rol
sub
fs
mov
jbe
addb
pop
out
sub
mov
sbb
cld
and
jge
in
test
mov
daa
aaa
pop
jl
es
jne
lock
aam
jp
popa
dec
sbb
dec
sub
nop
sub
ret
mov
push
jne
and
mov
or
aad
mov
xlat
xor
fisubs
lea
add
xor
or
xorb
out
out
lds
mov
and
xchg
xor
adc
ss
ret
sub
pusha
lods
outsb
mov
xchg
out
sub
pop
or
inc
jp
lods
add
loope
adc
out
mov
xor
xor
imul
xchg
xchg
mov
aas
aaa
jns
and
rcrb
mov
sub
pop
and
je
push
mov
out
adc
mov
xor
jnp
sub
in
out
xor
and
push
xchg
insl
scas
xchg
sbb
pop
xchg
cmp
push
outsl
aad
push
imull
push
add
es
mov
stos
jbe
loope
xor
adc
push
daa
mov
shll
fists
mov
add
push
mov
dec
ds
add
lods
pop
rcll
jp
movsb
inc
adc
pop
xchg
push
mov
inc
cs
sub
push
fbld
or
pop
jb
roll
adc
push
pop
pop
pusha
pop
add
jbe
je
aas
cmp
icebp
in
jnp
das
dec
aas
mov
add
jbe
loope
or
insb
loope
jae
xor
into
mov
jecxz
jbe
dec
xchg
mov
mov
add
push
push
pusha
insl
jo
inc
aas
in
ja
cmc
std
js
stos
xchg
out
mov
jmp
enter
or
sbb
out
add
ficoms
das
jp
gs
je
cwtl
es
adc
jno
and
adc
mov
jmp
les
xor
add
cmp
sub
and
mov
gs
out
call
jb
mov
test
ret
ja
arpl
js
jp
jecxz
jo
pop
rorl
jge
sbb
aaa
out
sub
lock
orl
mov
scas
or
repz
push
xchg
gs
push
into
jmp
test
adc
pop
adc
mov
outsl
outsb
in
cmpsb
xchg
movsb
pop
scas
adc
leave
int
add
cmpsb
repz
adc
es
fisttpl
pop
mov
stos
jbe
dec
sbb
add
cmovae
outsl
das
or
push
sub
jge
push
pusha
imul
mov
push
or
dec
fwait
mov
addl
leave
repz
push
add
add
xchg
rcrb
mov
jo
in
mov
sahf
jb
push
popf
mov
mov
pop
xor
test
rorl
push
and
push
pushf
sahf
adc
mov
xor
lods
adc
jb
xchg
cmp
jnp
lea
jnp
cld
rcll
leave
pop
mov
ja
mov
aas
enter
outsb
out
negl
arpl
aaa
sub
push
pop
jle
daa
mov
xrelease
inc
shl
dec
jo
orb
sahf
roll
inc
and
mov
fcoml
clc
out
sbb
jp
xchg
jp
add
cmp
sbb
dec
jmp
add
imul
ss
inc
push
aam
mov
jle
sub
xor
add
mov
lret
jbe
push
aaa
jo
call
out
or
jle
enter
add
int3
dec
dec
add
movsl
pop
sbbb
lret
adc
adc
jmp
push
inc
jae
push
mov
cvtps2pi
insl
xchg
adc
adcl
fs
ror
xchg
mov
mov
adc
add
pop
aas
push
mov
adc
rorl
inc
lods
xchg
ja
sbbb
imul
sahf
jne
orb
mov
cmpsb
imul
aad
sub
movsl
pop
rcrl
insl
mov
pop
jl
adc
jmp
jge
jno
xor
out
or
sahf
lcall
ja
in
sbb
xor
pop
aas
rcll
jle
jne
and
jno
cltd
xor
or
or
xor
mov
jmp
xchg
fwait
test
mov
std
movsl
cltd
pop
mov
or
xor
in
call
sub
pop
fisubrl
xchg
clc
adc
shll
add
int3
in
xor
dec
gs
dec
arpl
test
cmpl
jle
adc
enter
add
stc
push
and
inc
shrl
test
test
lahf
cmpb
mov
dec
test
inc
loope
scas
insb
adc
jmp
cwtl
jmp
out
cmp
inc
int3
add
push
jecxz
loopne
mov
mov
mov
negl
push
clc
add
inc
jae
jae
cmp
leave
mov
lods
out
mov
xor
xor
mov
jp
sbb
cmpsl
in
mov
sub
mov
mov
sahf
inc
sahf
test
jg
pop
dec
jb
xlat
imul
cmp
add
push
orl
outsl
lds
lret
cmp
out
stos
push
insb
ss
adc
dec
int3
in
adc
aas
jle
mov
pop
jmp
adc
xor
aad
inc
xchg
rcll
adc
sub
aam
adc
js
cld
out
ljmp
xchg
sub
fs
cwtl
insl
jno
pop
xor
xchg
vmwrite
stos
loope
jns
insb
iret
inc
fwait
ss
loope
mov
pop
imul
jle
aas
ds
jmp
icebp
pop
pop
mov
or
dec
sbb
and
test
test
pop
jbe
mov
icebp
jmp
dec
leave
pop
sbb
dec
adc
or
hlt
cmp
mov
push
idivb
sub
roll
jmp
mov
out
insb
shlb
jbe
aad
js
pop
mov
adcb
cwtl
inc
in
out
adc
sub
xchg
sbb
mov
pop
sub
mov
je
stc
cmp
int3
xchg
mov
sub
dec
ret
pop
xchg
jmp
pop
fwait
adc
jmp
ja,pn
mov
imul
mov
pushf
push
dec
inc
jno
mov
xor
mov
mov
pop
cwtl
dec
mov
nop
jecxz
adc
orb
leave
mov
cmp
aaa
mov
cltd
xchg
add
in
dec
sub
add
test
movsb
add
adc
lods
mov
and
mov
and
iret
lcall
ljmp
and
movsb
jno
jge
insl
sub
popl
xchg
inc
aaa
adc
aam
push
ds
inc
mov
ds
pop
jne
jl
addl
push
xor
mov
imul
cwtl
cmp
lcall
xor
imull
sub
mov
aad
cmp
jns
jne
sub
jmp
xchg
mov
repz
cmpl
insl
cli
xchg
or
xchg
jle
sub
out
shll
mov
xchg
or
pop
bound
fxtract
cmpsb
lods
lcall
rcrl
mov
adc
pop
fsubs
cmp
nop
rorl
xchg
arpl
subl
jge
je
xchg
shll
sub
in
xchg
jmp
imul
add
lcall
push
sbb
adc
divb
addr16
xor
filds
xor
into
aam
adc
mov
dec
in
es
popf
jle
fldcw
dec
inc
jnp
sub
pushf
mov
and
xor
out
mov
fldl
mov
jge
push
enter
repz
mov
sub
push
popa
lds
push
xor
or
jbe
sbb
add
add
pop
shlb
sub
ljmp
mov
xor
dec
insb
loop
int3
hlt
les
dec
cmpsl
sbb
adc
xchg
push
push
push
aas
clc
cmovl
stos
adc
iret
mov
jle
cmp
mov
mov
mov
cwtl
cmp
push
ss
aad
cmc
mov
and
xchg
std
das
sbbl
jno
out
arpl
clc
mov
test
cmp
icebp
xchg
sub
das
fwait
in
jae
js
mov
mov
xorb
jle
push
push
dec
add
pop
bound
call
out
ror
in
add
push
ret
sub
aas
mov
push
or
fistps
dec
adc
lock
sub
pop
enter
add
cmp
insl
dec
ret
or
dec
push
xor
adc
adc
jg
xor
mov
popa
xor
test
fs
pop
testl
dec
mov
xlat
jb
and
lods
into
incb
sbbb
adc
xchg
sub
push
sub
jbe
in
ljmp
adc
pop
sbb
mov
jecxz
jp
push
pop
mov
pop
lahf
enter
stos
cld
outsb
xchg
sbb
mov
push
jecxz
add
clc
jmp
pop
scas
das
sub
movsl
and
stos
pop
mov
pop
loope
ret
sub
pusha
mov
xchg
shrl
xor
push
sub
xchg
cmp
std
adc
es
stc
ds
outsl
lods
cmp
or
mov
jae
addb
sub
pusha
mov
push
or
push
xchg
dec
cld
xchg
cld
sub
cmp
mov
cmp
js
cmp
sub
inc
lods
push
adc
mov
call
inc
inc
aaa
sub
jmp
push
ret
je
enter
or
mov
fld
inc
fcomps
dec
aaa
loop
dec
dec
aaa
xchg
adc
notb
jnp
stc
sbb
or
push
xor
cmp
dec
ds
in
jns
pop
xchg
mov
adc
lea
fadds
pop
aam
mov
mov
js
mov
dec
jmp
lods
loopne
jne
sub
out
mov
sbb
jnp
mov
loope
sub
push
mov
mov
sbb
jle
je
mov
sbb
cmp
test
mov
add
pop
nop
fwait
aad
xchg
ret
je
call
pushf
mov
xor
icebp
in
cmc
xchg
mov
mov
adc
add
sbb
push
sub
test
sub
sbb
outsl
sub
ret
in
cmp
xor
push
stos
jmp
mov
xchg
sub
cwtl
popf
enter
shlb
jge
outsb
pop
xchg
test
outsl
cmp
jo
adc
dec
xor
cmp
fsub
cmp
mov
push
mov
sub
das
scas
fs
pushf
jecxz
out
and
mov
pop
push
cmp
dec
push
in
loope
xchg
movsb
lods
das
icebp
cs
mov
adc
adc
inc
mov
popf
inc
scas
inc
in
jbe
mov
ret
and
add
ds
sbb
std
inc
mov
xor
mov
rcl
rclb
adc
push
cmc
xchg
repz
jno
outsl
pushf
jo
xlat
mov
push
and
cmc
in
xor
inc
push
ficompl
ljmp
fwait
loopw
xchg
dec
mov
xchg
cmp
dec
sarl
int
aad
and
pushf
add
fstl
in
fs
cwtl
push
mov
popa
sub
push
mov
jbe
jg
add
popa
fs
sarl
das
test
aas
jle
sbb
les
push
ret
sub
xor
daa
sbb
jl
stos
je
sub
jno
call
int3
ss
and
lods
xor
arpl
adc
adc
jle
fldcw
stos
call
mov
mov
mov
xor
push
mov
jb
cli
test
mov
mov
add
add
out
nop
sbb
xchg
and
push
xchg
scas
adc
mov
data16
adc
mov
xchg
les
shrl
xor
jmp
sub
jbe
es
or
cs
jmp
nop
fsubrs
adc
aaa
pop
jno
test
insl
xchg
mov
stos
shr
pop
fmull
pop
push
sub
mov
pushf
addr16
dec
orl
dec
loopne
inc
or
out
adc
insb
fisubrs
pop
sbb
or
or
jge
mov
xor
jp
movsb
jbe
add
mov
xor
pop
sarb
out
mov
dec
pop
sete
cmpsb
jno
pop
inc
adc
jp
icebp
adc
clc
ja
clc
mov
push
jle
dec
outsl
dec
leave
push
or
jbe
out
mov
push
test
sbb
in
sbb
sub
outsl
xor
mov
cmpsb
mov
xchg
mov
or
shll
mov
adc
addl
jnp
loopne
movsl
outsb
cmp
int3
push
xor
aaa
and
rorl
jno
sbb
es
scas
pop
testb
inc
stos
adc
add
call
or
sub
rorb
je
gs
movsl
jmp
ss
dec
lcall
test
mov
jp
add
fcmovnu
push
call
dec
push
sub
xchg
mov
xchg
mov
out
dec
jo
jmp
ljmp
out
sub
mov
icebp
or
in
mov
data16
in
orl
ds
jle
and
mov
mov
mov
lods
sub
scas
mov
fwait
paddusw
rcl
pop
cld
in
pop
fidivl
adc
ljmp
mov
data16
pop
loope
mov
hlt
mov
mov
nop
sub
ficomps
shrb
jge
push
je
push
push
inc
out
inc
mov
cmp
xor
mov
cmp
lret
mov
mov
inc
pop
imul
pop
js
cmp
push
or
push
cmp
mov
sub
sub
cmp
jmp
sbb
mov
mov
mov
test
cmp
sbb
xchg
inc
aas
mov
adc
out
pop
outsb
mov
or
jns
push
mov
pop
push
shr
push
jp
ljmp
leave
popf
movsb
mov
adc
ja
stos
popa
adc
aad
push
in
cmp
pop
add
sub
xor
xchg
ss
push
cmp
out
xchg
icebp
adc
shll
xor
mov
ret
idivl
xchg
mov
loop
mov
jnp
mov
or
cld
sbb
jnp
mov
jl
aaa
adc
mov
sub
mov
fs
pushf
jecxz
push
pushf
cmp
add
push
daa
mov
jnp
nop
pushf
fidivrs
push
lock
sub
pop
or
int3
loopne
push
je
std
add
jbe
sbb
and
mov
mov
sub
mov
add
mov
pop
stos
lcall
jp
xlat
outsb
jmp
and
in
movsl
jmp
mov
xchg
mov
and
fadds
mov
inc
fisttps
imul
cmp
mov
xlat
cmc
mov
repz
bound
jge
scas
mov
sti
aam
das
lods
cmp
aas
fildl
popf
pop
fbstp
fcoml
fst
lret
push
adc
ret
add
mov
and
mov
xchg
std
loopne
mov
ret
cmp
fcoms
push
pop
arpl
mov
adc
dec
loope
add
int3
repnz
mov
mov
xchg
jmp
pop
xor
mov
js
add
imul
inc
repnz
mov
push
sbb
inc
and
enter
jge
popf
mov
mov
xchg
mov
out
add
and
leave
out
pushf
enter
mov
cmp
xor
ret
push
mov
xchg
sbb
in
in
aaa
scas
adc
subb
cmp
jp,pn
icebp
adc
add
jb
sbb
xchg
movsl
inc
adc
repnz
adcb
lret
mov
inc
or
and
stos
pop
sbb
ja
xor
das
scas
jo
mov
lods
out
ds
call
xor
mov
shr
popa
xchg
ss
fstps
dec
push
mov
push
addb
pop
jl
sbb
insb
pop
cmc
repz
jo
inc
in
xor
push
mov
sub
push
xchg
into
push
stc
xor
imul
and
popa
lcall
pop
arpl
pop
iret
jo
sub
xchg
movsb
cld
xchg
lds
add
sub
jo
mov
das
addr16
insb
bound
mov
mov
mov
xor
das
dec
cs
arpl
xchg
popf
in
adc
test
jbe
faddl
es
pop
in
out
adc
cli
lock
mov
hlt
inc
inc
adc
sub
sub
sub
or
test
ja
mov
movsl
sti
push
or
bound
mov
mov
icebp
je
mov
jb
movsl
cmp
int3
pop
mov
fistl
hlt
add
divl
out
in
fsubrl
mov
arpl
outsl
aaa
jns
daa
or
rorl
outsl
out
andl
mov
jo
xchg
push
fmul
in
inc
adc
dec
add
xor
sarb
mov
fiaddl
mov
and
sbb
mov
mov
mull
sti
insl
data16
add
jmp
jno
or
push
in
xchg
pop
push
out
mov
stos
loopne
pop
cmpsb
insb
mov
inc
movsl
sbb
mov
nop
xchg
mov
lret
clc
aaa
shr
testl
imul
sahf
mov
push
add
fsubrl
or
mov
jge
push
mov
scas
ds
xor
fs
adc
out
stos
push
mov
xchg
add
aaa
ds
sub
xor
ss
je
mov
nop
mov
addr16
push
sbb
mov
cs
je
lods
add
mov
ja
mov
mov
cmp
aam
cmpsb
adcl
push
inc
ret
or
in
aam
inc
fbstp
ss
fwait
adc
xor
and
jle
dec
push
jne
xor
dec
scas
dec
or
sbb
adc
imul
xchg
test
and
ljmp
sbb
pop
sbb
inc
dec
sbb
cmp
mov
repz
loope
and
mov
xchg
dec
xchg
in
subl
xchg
jns
in
das
je
loop
sbb
inc
jl
pop
aad
add
stos
mov
enter
jg
add
mov
cmp
jge
leave
mov
mov
mov
add
jecxz
aad
sub
xchg
lds
push
xor
fs
cmp
das
lea
push
adc
aaa
xchg
jle
jb
push
sbb
in
mov
jne
idivb
sbb
adc
mov
inc
mov
and
cmp
adc
push
push
cltd
hlt
loope
adc
cs
repnz
scas
imul
mov
pop
aas
xchg
test
sub
pushf
pop
stc
js
dec
notb
push
stc
sub
mov
adc
jle
cmp
imul
cld
es
jecxz
adc
aas
hlt
sub
xchg
test
inc
dec
je
insb
push
pop
test
mov
ja
sub
mov
mov
sti
clc
push
cmp
mov
lahf
sub
push
cmp
and
adc
pop
out
enter
daa
fs
std
shll
out
and
push
cmp
cld
xchg
roll
adc
pop
fwait
hlt
push
adc
das
out
pop
rcrl
mov
pop
inc
mov
cmp
add
loope
xchg
fistpl
es
push
sub
mov
mul
push
outsl
mov
mov
mov
adc
and
cmp
push
aas
adc
sbb
jns
adc
push
sub
ss
mov
in
mov
das
push
jb
cmc
or
inc
sbb
cmp
rolb
aas
and
negl
addb
decb
das
mov
std
cs
and
mov
push
mov
sbb
jge
inc
daa
les
jge
xor
jmp
pop
xchg
jns
mov
xchg
lret
inc
or
inc
sti
subb
ret
cmp
xchg
and
test
xchg
out
dec
cmc
xchg
xchg
or
mov
sbb
movsl
insb
jb
in
fadds
xor
mov
inc
push
mov
pusha
or
in
lahf
lods
clc
stos
mov
xor
cmpsb
andb
inc
out
int
xorl
insl
mov
push
lds
mov
adc
cmp
jmp
xchg
inc
iret
or
not
insb
mov
xor
sbb
inc
xchg
ljmp
rcrb
dec
lods
lock
push
aad
adc
lock
pop
rcll
rcll
sahf
scas
push
mov
dec
out
xchg
test
fmull
cmp
or
notl
mov
repnz
lret
lock
in
sub
shlb
movsb
cmp
aas
adc
xchg
mov
imul
and
xorl
sub
pop
fs
sbb
jle
cmp
testl
dec
push
mov
xchg
xor
pop
push
pop
pusha
add
aaa
in
out
aam
pop
test
in
jb
test
enter
push
test
adc
bound
sub
in
stos
add
cmp
aaa
push
mov
gs
mov
adc
adc
mov
push
iret
and
jmp
sbb
shrb
dec
adc
pop
xor
mov
jg
insl
sub
out
cmp
xchg
test
mov
or
xchg
fwait
aas
negb
push
dec
clc
cwtl
addl
ss
pusha
adc
xor
aaa
out
dec
sarb
fisttpl
jno
ret
xor
adc
push
call
pusha
std
out
sahf
adc
sub
adc
xlat
in
mov
ja
xchg
and
fidivrs
in
inc
mov
call
arpl
xor
comiss
ret
lahf
stos
int3
cmp
stos
adc
subb
pop
add
addl
sahf
out
sub
xchg
enter
ds
push
push
ljmp
adc
rclb
pop
mov
jae
sbbb
rcrb
jl
sar
inc
test
sub
mov
cmp
js
test
cmp
lea
cmp
sub
dec
add
adc
mov
dec
jle
nop
cmpsb
ret
ds
lcall
insl
scas
rcrl
jge
lcall
lcall
aaa
ret
jo
imul
push
fwait
inc
in
lods
imul
in
pop
jecxz
jl
cs
ss
sbb
xor
lea
stos
and
adcl
daa
mov
idivl
mov
sub
or
into
data16
imul
movsl
mov
mov
and
adc
mov
pop
and
sbb
data16
orl
mov
xchg
int3
xor
push
fldl
mov
fdivrl
add
popf
pusha
inc
jge
cmp
cmp
sub
and
dec
mov
data16
loop
inc
sub
cli
sub
lods
adc
sbb
cltd
xor
or
fnstenv
pop
inc
adc
push
push
jmp
push
xor
lods
int3
fildll
add
into
xchg
jge
jmp
dec
inc
lods
or
or
ret
xchg
fwait
stos
and
in
sbb
shl
mov
fcompl
add
mov
js
cltd
xor
xor
jb
xor
loope
repz
mov
cld
jb
cmp
dec
jne
aaa
ljmp
cld
les
imul
idivl
into
ja
shll
ljmp
or
cmp
jmp
out
movsb
jmp
or
aam
lret
mov
repnz
movsb
ret
cmpb
test
fdivl
pop
mov
and
outsl
mov
cmp
out
pop
mov
aad
add
jge
cmc
cmp
cs
mov
subb
es
insl
sub
into
dec
faddl
aas
ja
insb
das
arpl
sbb
inc
mov
aad
pop
insl
xchg
cmp
pop
int3
les
push
fiadds
cmp
and
adc
out
outsb
pop
loope
xor
and
lea
adc
rcll
dec
or
ljmp
mov
shll
leave
std
mov
adc
lret
push
leave
add
mov
das
push
out
dec
js
pusha
int3
cmpsl
jl
jle,pt
xor
jmp
mov
pop
ja
fistl
adc
inc
mov
add
xchg
pop
mov
scas
mov
leave
sbb
fsubrl
jmp
mov
sub
cmp
mov
mov
pop
xchg
adc
jae
out
popf
sahf
xor
sbb
sub
xchg
adc
add
call
leave
in
inc
xchg
fcmovb
mov
or
rcrb
or
mov
add
mov
mov
and
pop
lret
movsl
repz
jmp
xor
jmp
call
aam
jl
mov
mov
mov
lods
push
push
sub
mov
pop
les
pop
mov
cmp
iret
sarb
enter
mov
and
cli
cmpl
push
nop
arpl
or
push
pop
cmp
mov
sub
inc
arpl
mov
sarl
stc
xchg
fwait
dec
rcrl
lods
insb
xchg
andl
push
mov
lds
mov
mov
xchg
sub
push
xchg
rorl
and
es
mov
sub
and
cltd
pop
push
es
add
lea
inc
call
ja
andb
xchg
fcoml
lcall
loope
mov
mov
cmc
imul
push
popa
dec
enter
mov
in
into
sub
sub
ja
or
test
cmpsl
xchg
andb
mov
jecxz
ljmp
cmp
or
add
ja
insb
jge
xor
dec
pop
jp
mov
lods
cli
or
mov
repz
fidivs
mov
les
addl
sub
into
in
test
shrb
inc
mov
insl
nop
sbbl
jb
adc
ss
subl
xchg
aaa
into
ds
mov
lret
jp
jmp
jmp
jmp
and
xchg
sub
test
nop
jp
sbb
out
setg
dec
loopne
cmpsl
sub
mov
jge,pn
push
insl
andb
mov
dec
xor
pop
pop
testl
push
adc
jmp
cmpb
mov
mov
mov
fs
adc
repnz
pop
sbb
xchg
mov
push
adc
xor
and
insl
lock
xor
into
loope
cmpsl
cmp
ss
das
stos
inc
test
shll
das
push
jp
adc
xchg
int
movsl
adc
ljmp
outsl
xor
test
mov
xor
push
adc
idivb
jp
out
sub
sbb
or
leave
xor
or
addb
push
faddp
adc
jo
fs
test
pop
popw
mov
mov
pop
std
test
mov
xchg
cmpsl
inc
pushf
inc
ds
das
sub
sahf
lret
adc
adc
adc
mov
fnstenv
das
xchg
out
jnp
sbb
mov
push
shrb
mov
mov
dec
dec
or
push
in
ret
pop
gs
lods
mov
aas
lock
das
push
jle
xchg
jge
adc
jno
adcl
int
add
int3
xor
jmp
mov
sbb
cli
ret
jne
pop
or
pop
push
leave
xchg
xchg
sub
cmp
inc
add
out
into
adc
test
mov
ja
sti
mov
insl
cmp
frstor
dec
ja
pusha
and
mov
lock
push
aaa
mov
pop
mov
mov
inc
xchg
adc
push
sub
and
out
sub
push
cld
out
adc
jecxz
aas
xor
out
push
push
xchg
fistl
push
lret
add
pop
jp
add
xor
repnz
pop
popf
shll
jns
cmp
decb
jnp
fstps
sub
mov
adc
sub
ss
jmp
push
adc
loopne
adc
add
pop
dec
movsl
or
push
mov
adc
pop
jmp
mov
jmp
test
test
ljmp
das
adc
add
fcmovnu
sahf
addl
rclb
outsl
jecxz
or
sbb
and
jne
pop
lcall
das
shll
and
jle
insb
mov
sub
jno
mov
mov
and
push
mov
adc
pushf
cmp
dec
lea
sar
jmp
push
ss
jbe,pt
push
shll
inc
out
mov
call
sarb
shlb
sbb
pusha
jmp
fldcw
insb
sbb
push
sub
leave
and
rorl
mov
test
xchg
adc
mov
out
pop
mov
in
mov
cmp
outsl
mov
push
out
jo
ja
andb
insb
ret
xchg
push
out
add
imul
fadds
into
cs
push
les
adc
pop
xchg
cmp
and
inc
daa
fistpll
push
je
jge
loope
jle
push
mov
mov
mov
push
dec
insb
mov
push
das
adc
jo
divl
adc
stos
fadds
or
cld
jo
daa
roll
hlt
jge
inc
addr16
sbb
xchg
into
lret
cs
movsl
movsl
sub
es
repnz
fstl
inc
ljmp
gs
lcall
dec
scas
dec
mov
sub
lcall
pop
adc
or
loop
xor
cmp
xor
ja
or
dec
sub
xor
sbb
test
rorb
orb
stos
and
neg
cmp
mov
mov
es
cmp
aad
int
stos
or
cmpl
cmpsl
mov
and
mov
in
jb
pop
push
cmpsb
jecxz
sbb
mov
push
loope
xchg
or
mov
int3
adcl
mov
xchg
jbe
sub
cmp
push
sub
xchg
pop
in
stos
push
outsb
cmp
insb
cmp
movsl
addr16
sub
jae
hlt
addr16
pop
mov
pop
sub
mov
out
mov
inc
adc
rol
mov
mov
xor
cmp
xor
clc
inc
aaa
cmp
inc
xchg
inc
call
fstpt
loope
xchg
pop
arpl
cmc
mov
add
adc
mov
jbe
pop
xor
jnp
fdivs
dec
dec
xor
arpl
jl
mov
dec
add
in
lea
adc
lret
data16
jo
jb
fwait
movsl
repz
loope
xor
les
das
pop
fstpl
lds
rcl
or
push
ret
lcall
mov
in
inc
leave
sub
es
xchg
xchg
mov
pop
add
sbb
enter
xor
jmp
shl
add
jb
push
or
sub
pop
fisubl
cmp
xchg
push
in
inc
pop
xchg
into
into
add
es
cld
popa
out
in
sbb
in
or
inc
and
rcrl
xchg
or
outsb
sub
mov
std
or
cmc
jle
sub
aaa
les
mov
xchg
pop
mov
and
movsb
fsubp
xchg
push
mov
es
pusha
mov
push
pusha
mov
xchg
or
mov
adc
mov
xchg
icebp
pushf
divb
or
pop
mov
cmp
les
inc
dec
xor
in
xor
jo
push
adc
mov
sub
inc
ret
jle
sarl
and
das
in
daa
mov
lock
arpl
sbb
adc
jl
pop
aaa
push
xchg
pop
movl
jmp
adc
mov
dec
es
jns
fnstsw
push
sbb
ret
push
xchg
jl
sub
out
xor
mov
push
adc
pop
dec
mov
stos
lock
scas
push
cmpsb
jo
ljmp
or
inc
sub
insb
push
pop
dec
dec
xchg
xor
jb
mov
adc
adc
cmp
out
bound
rcll
and
push
test
lock
pop
fisubs
lods
into
jg
sub
leave
push
outsl
cmp
cmp
aam
mov
jae
xor
xchg
mov
les
int3
out
lret
add
mov
jg
cs
sub
add
aas
xchg
xor
xor
mov
mov
out
push
cs
mov
pop
repz
mov
sahf
mov
loopne
mov
xchg
rcrl
test
subb
ljmp
mov
adc
in
sub
subb
or
sub
pop
adc
in
test
or
and
in
stos
in
cmpsb
push
or
mov
jge
push
inc
test
shlb
jnp
in
sub
movsl
lds
negl
pop
into
jg
clc
xchg
ds
movsb
lods
je
xor
mov
cmp
enter
outsb
test
cmp
loopne
loope
sbb
xchg
js
pusha
cmc
aaa
mov
icebp
inc
in
jmp
pushf
test
jp
xor
cmp
cmpsl
in
mov
adc
test
sub
lea
add
lret
pop
mov
sbb
jb
jmp
adc
mov
inc
lods
jmp
adc
call
add
sbb
in
xchg
and
add
adc
sbb
and
dec
cmp
daa
cmpsb
mov
loop
in
mov
mov
stos
ljmp
mov
sbb
pop
inc
mov
fsts
xor
lea
addr16
push
xchg
sbb
jge
pop
loop
clc
fld
jmp
lcall
das
int3
enter
xchg
push
jge
dec
cmp
cmc
add
stos
das
or
fcoms
ret
enter
jmp
lods
scas
dec
lcall
cltd
clc
aas
jle
call
sub
and
stc
push
out
out
movsl
pop
jg
cld
cmc
xchg
leave
dec
xchg
push
xchg
adc
mov
repz
jne
in
out
push
jge
pop
ja
hlt
pop
scas
mov
shrl
mov
and
in
push
jle
and
xchg
inc
adc
aam
mov
pusha
sbb
aaa
mov
mov
inc
scas
subb
cs
es
mov
das
and
cmc
sub
jae
push
in
sbb
jae
test
inc
pop
enter
lcall
jnp
xor
sbb
fnstsw
loop
mov
jne
xorb
jge,pn
pop
sbb
cmpsl
adc
std
outsb
xchg
sarb
leave
subl
scas
xchg
dec
pop
fs
push
xor
loope
in
test
scas
dec
adc
lock
cmc
inc
addr16
sbb
xchg
lcall
mov
xchg
mov
in
dec
cmc
push
push
cmp
mov
push
xchg
inc
mov
ds
sbb
in
sbb
jmp
fstpt
ja
mov
test
inc
xor
jecxz
cmpsb
jmp
mov
xlat
ja
adc
add
sti
push
es
leave
jl
leave
cmp
sub
sbb
pop
mov
add
cmpsb
jns
inc
lods
mov
inc
fwait
adc
push
inc
js
xor
adc
mov
mov
push
lods
jge
iret
lret
inc
ljmp
fucomip
cmpb
das
xchg
ljmp
add
loop
int
jno
aam
mov
mov
push
adc
fmul
fistl
adc
jb
movsl
imul
repz
popf
lods
jl
mov
jnp
iret
pop
not
cmpsb
mov
and
je
leave
bnd
xor
in
sub
jbe
ficoml
sbb
aam
xchg
and
pop
sub
add
fcoml
ret
sbb
aam
hlt
inc
call
ds
cmc
jecxz
mov
outsl
pop
push
pop
scas
imul
js
xor
inc
ljmp
es
pop
xor
popf
sahf
aaa
les
cwtl
pop
adc
xchg
fwait
pop
subl
xor
push
jnp
mov
das
xchg
or
push
into
push
or
lds
mov
jbe
jle
mov
enter
jge
aas
aaa
fcom
xor
scas
pop
fstps
lds
in
sub
push
add
cmpsl
dec
es
and
ret
aam
xor
in
in
outsl
xor
mov
jbe
movq
sarl
and
mov
std
lret
shrb
push
pop
les
pop
cmpsl
mov
roll
adc
adc
dec
test
and
out
mov
daa
sbb
sbb
lcall
fdivrs
mov
jnp
sub
sub
adc
int3
sub
outsl
adc
fcomps
out
adc
std
xor
clc
mov
inc
xor
insl
movsb
cmp
scas
popa
aam
xchg
sarb
xor
aas
mov
push
mov
cmpl
adc
adc
jmp
mov
pop
adc
dec
jae
ja
je
mov
xor
push
test
fs
mov
mov
sbb
and
or
sub
sbb
fnsave
jl
add
imull
mov
loopne
and
inc
mov
fildl
mov
and
jbe
xchg
rcr
mov
mov
xchg
mov
pop
adc
rcll
jmp
dec
lods
shlb
in
out
in
dec
inc
mov
das
lret
in
lods
outsl
jmp
xchg
aas
daa
mov
sbb
xchg
add
xor
enter
mov
je
dec
push
fadd
mov
cwtl
adc
scas
in
pop
sub
pop
mov
dec
adc
into
add
inc
adc
mov
into
int
aas
push
pop
sbb
inc
add
or
adc
jbe
xor
ds
sub
jno
add
adc
gs
jg
sbb
mov
cmpsb
sub
pop
mov
test
cld
test
mov
lods
cltd
stc
pop
mov
cmpsl
inc
test
insl
leave
push
out
mov
movsb
pop
les
xor
adc
mov
cmpsl
adcl
mov
call
mov
mov
adc
adc
clc
leave
push
inc
or
mov
xchg
xchg
leave
adc
lods
xor
ds
xor
je
mov
mov
jecxz
lahf
sahf
mov
cmp
xchg
cmp
pop
push
xchg
push
and
adc
mov
cmp
lock
es
xor
mov
mov
mov
sbb
notb
adc
or
push
xchg
lods
dec
or
push
cmp
inc
cmpl
out
cld
mov
les
mov
jnp
dec
movsl
sbb
fmull
mov
push
pop
aas
mov
adc
push
jge
xor
pop
scas
cs
pop
jmp
jge
lods
pop
add
mov
jo
inc
jge
and
jmp
xor
adcb
loop
mov
jno
sbb
jno
or
ja
jecxz
ja
pop
dec
and
notb
stos
xchg
sete
inc
pop
pushf
inc
jno
lds
xor
add
sub
adc
cmp
into
inc
test
fstps
adc
les
xor
push
pop
out
mov
inc
fldenv
shll
mov
in
or
sbbl
mov
cmpl
mov
and
jb
adc
ljmp
mov
xchg
in
jg
mov
lea
mov
scas
pop
mov
push
and
cmp
xchg
lahf
loopne
or
and
pushf
lock
push
cmp
jge
sub
push
cmp
in
adc
inc
orb
pop
int
push
mov
nop
push
movb
push
outsl
jb
jne
xor
add
mov
movsl
ss
mov
cmpsl
or
inc
jmp
das
fnstsw
dec
pop
mov
jmp
dec
jo
adc
jle
add
hlt
into
pusha
lods
or
inc
add
xor
dec
mov
jno
pushf
xor
inc
jmp
ret
xchg
or
dec
mov
aas
pop
cmpsl
xor
mov
adc
and
push
lea
pop
dec
xor
dec
lods
adcl
mov
xor
lock
lret
lods
mov
pop
leave
pop
stc
mov
loope
aas
push
xchg
cli
cs
cmp
iret
xor
mov
lds
mov
mov
pop
popf
push
adc
mov
fmul
sbb
or
mov
push
pop
xor
dec
ficoms
pusha
xor
insl
xor
sbb
pop
decl
lds
insl
mov
ret
jp
add
filds
xchg
test
jne
test
mov
xlat
fisubrl
in
push
pop
xchg
ds
shlb
mov
fbld
fsubrs
out
test
stos
out
fisubs
pusha
inc
sub
xchg
stos
lods
cli
push
pop
dec
mov
jmp
mov
dec
cmp
fimuls
dec
mov
pop
push
insl
and
test
clc
cmp
xlat
adc
fs
cmc
pop
add
xor
push
sub
sub
testb
aas
popf
pop
jecxz
or
dec
outsl
lret
fimull
cmp
jae
fs
xchg
icebp
stos
loopne
pop
sub
jmp
leave
and
xchg
pop
cld
inc
jl
adc
dec
jmp
sbb
mov
jl
mov
aaa
ficomps
sahf
fcmovu
ss
sbb
inc
mov
add
into
clc
pop
push
inc
push
mov
xchg
lret
sub
jne
xchg
adc
cmpsl
mov
mov
mov
mov
cmc
insb
inc
jno
call
leave
jo
sub
lret
movsb
test
xchg
mov
and
ss
jno
jle
adc
sub
mov
mov
cltd
mov
rol
mov
lock
popa
xchg
aaa
fbstp
jmp
stc
rcr
dec
aad
jnp
inc
icebp
xor
sahf
and
int3
ficompl
daa
insb
sub
push
fildll
mov
in
mov
cmp
cli
push
enter
ss
jge
pop
call
xchg
pop
aad
stos
lock
dec
ret
mov
jbe
dec
push
mov
adc
call
stos
fs
cmp
pop
jns
test
fbld
int
lea
shl
cmpsb
sub
xchg
subb
cli
sub
repz
fmuls
das
out
xor
adc
jg
jl
lret
adc
loop
fisubrs
jnp
pop
rcrl
icebp
into
jmp
lds
ds
rclb
mov
push
std
cwtl
int3
dec
adc
pop
mov
dec
stos
pop
pop
sbb
cmp
dec
dec
add
cmp
insb
sar
aas
fisubl
inc
jle
pop
mov
pop
btsl
jns
add
adc
or
mov
das
ds
stos
fadd
aas
push
pop
cmp
mov
mov
stos
jns
mov
pop
push
lods
shl
add
jb
jae
mov
movsb
cmp
imul
outsb
pop
xor
push
cmp
adc
out
dec
cs
lock
jmp
jbe
das
pop
xor
push
jle
dec
je
sub
bound
mov
nop
mov
loope
hlt
push
imul
xor
or
andb
dec
js
mov
repz
test
stos
push
push
jp
inc
out
push
mov
test
jle
push
xchg
push
jge
and
hlt
fnstenv
lock
push
fldl
adc
repz
cmp
sbb
jo
adc
add
aas
mov
mov
pop
std
xchg
push
and
in
out
jmp
or
mov
jns
mov
xchg
incl
out
andl
jg
gs
andl
sub
sbb
sub
fnstcw
sti
fsqrt
scas
lods
cmp
adc
sbb
mov
popa
out
les
mov
adc
hlt
mov
lret
or
xor
cmp
adc
std
xor
inc
hlt
jge
imul
pop
or
inc
dec
cmpsb
and
leave
and
cmc
xchg
adc
test
daa
bound
add
mov
rclb
movsb
lock
arpl
scas
pop
cld
ss
cld
bound
dec
adc
sub
jg
enter
sbb
jns
cmp
shl
cmp
mov
ds
jge
lods
stos
loopne
hlt
repz
lods
das
lods
push
scas
insl
cmp
in
lods
pop
nop
adc
jl
xchg
dec
jle
cmp
mov
jns
icebp
xor
scas
cli
loopne
lcall
jle
xor
fdivrl
ss
xchg
xchg
dec
xchg
in
mov
sbb
mov
out
adc
dec
push
pop
jecxz
divb
cmpsl
and
cmp
mov
insb
js
cmpsb
in
loop
pushf
stos
out
jmp
imul
mov
addr16
pop
cmp
and
mov
push
cwtl
xor
rorl
testl
pop
das
sbb
and
rdtsc
das
pusha
adc
sbb
pop
mov
inc
add
dec
mov
pop
testb
pop
pusha
adc
inc
lret
ja
mov
insb
fcoms
mov
sbbb
inc
push
fs
mov
insl
es
mov
xchg
das
adc
cs
inc
mov
iret
mov
add
sbb
fstpt
jmp
add
insl
adc
ret
pusha
jae
xor
andb
int3
insl
mov
movsl
or
insb
adc
pusha
sub
js
aaa
lds
adc
leave
sub
stos
lea
lock
test
adc
imul
and
decl
push
insb
stos
rorb
xor
push
insb
mov
hlt
call
jne
aas
cmp
arpl
aad
lods
dec
adc
cli
inc
mov
sub
add
pop
je
mov
adc
aas
js
sbb
in
sahf
fcoms
mov
jge
xchg
add
ret
cmpsl
je
and
mov
scas
mov
mov
jbe
dec
mov
mov
adc
outsl
pop
xchg
inc
js
stos
cmc
fsubl
xchg
pop
ljmp
adc
jecxz
sub
mov
daa
ss
sbb
iret
scas
sbb
das
gs
fistl
mov
loop
stos
xor
jp
out
sbb
popf
test
and
mov
mov
push
insb
loope
jns
js
dec
cs
add
adc
roll
mov
cmp
jae
fdivrl
xchg
jns
pop
clc
xor
and
out
stos
mov
sub
divl
mov
test
add
sub
ss
mov
jbe
cwtl
ss
js
stc
xor
js
inc
mov
out
pop
adc
mov
out
fst
shlb
sar
mov
scas
out
fisubl
push
test
insl
add
push
filds
dec
jbe
in
and
js
jbe
pushf
mov
int3
es
inc
cmp
lea
fs
aaa
js
xor
ret
xchg
jmp
xchg
mov
pop
mov
and
pop
div
sub
pop
or
adc
aaa
bound
test
insb
das
inc
mov
sub
mov
dec
pushf
mov
ret
and
call
pop
loope
loope
repnz
fmul
xchg
ret
gs
incl
hlt
bound
std
insb
lods
xchg
lock
aam
cli
push
xchg
inc
shlb
cvtdq2ps
adc
cld
xchg
xlat
jl
sbb
mov
lods
cmp
shrl
fcmove
cld
xlat
jmp
enter
loopne
mov
bound
lock
and
clc
jle
sahf
add
xchg
call
das
jmp
scas
push
or
sbb
leave
and
adc
pop
mov
daa
clc
sbb
pop
add
pushf
sbb
rcll
adc
aas
inc
sub
inc
dec
mov
sub
fbld
sbb
mov
mov
repz
sub
es
pop
xchg
push
push
adc
push
and
nop
das
lods
dec
insb
lock
xor
lcall
insb
xchg
stc
fsubrp
xchg
push
cmp
jg
ret
jg
sahf
mov
pop
push
mov
adc
retw
lcall
push
repz
test
mov
es
or
pop
push
jg
push
mov
in
or
adcb
insb
outsb
push
lods
enter
xchg
and
inc
mov
inc
mov
adc
sbb
jmp
mov
int3
pop
dec
xor
mov
pushl
in
cld
and
jbe
fsubl
or
cmovg
idivl
lock
fsubrl
xchg
mov
lea
dec
in
adcl
dec
insb
mov
inc
ret
or
pusha
jne
mov
jb
pop
inc
hlt
jp
scas
jp
arpl
aas
mov
mov
sub
dec
cmp
popf
ds
pushf
push
push
pop
je
push
movsb
shrb
xlat
sbb
lcall
je
pop
jl
lods
cs
clc
jo
jmp
es
mov
mov
sub
or
js
out
or
outsl
pop
and
dec
mov
cmpsb
dec
xchg
jne
insl
adc
repz
leave
lret
mov
mov
adc
jle
adc
fwait
and
dec
test
xchg
jecxz
lret
sbb
out
les
adc
adc
mov
stos
pop
insb
jae
jge
dec
test
cmp
cmc
mov
add
cmp
pop
leave
cmpsl
int3
add
adc
mov
push
mov
shlb
es
dec
adc
push
cmpsb
xorb
sub
pushf
push
mov
or
into
clc
nop
mov
xchg
aam
xor
popa
jb
push
mov
cld
into
ja
jecxz
xchg
push
pop
mov
xorb
les
mov
mov
xchg
loop
ja
mov
jp
push
cmp
fwait
xor
mov
push
pop
dec
cmp
call
or
fdivs
cld
pop
std
gs
mov
and
jnp
pop
out
insb
mov
push
dec
adc
adc
test
sbbb
jbe
into
loop
jo
and
dec
mov
js
sub
jge
xor
cs
push
dec
adc
in
ret
push
cmp
loop
push
cmc
add
and
les
mov
pop
xchg
sub
mov
test
pushf
xor
inc
sub
lock
adc
dec
jl
jns,pn
jnp
subb
arpl
or
es
pop
xor
mov
cmp
pop
mov
adc
jo
out
icebp
inc
jle
test
mov
xchg
cmc
push
hlt
jb
arpl
sbbb
and
xchg
into
mov
in
das
jge
add
outsb
jbe
push
out
ljmp
pop
and
call
mov
in
sbb
sahf
and
and
cmc
cmpsb
ds
or
sub
and
addb
jl
loopne
mov
jbe
test
fadds
sbb
add
sbb
inc
mov
fwait
pop
mov
mov
xor
fwait
dec
push
fbstp
or
ljmp
das
mov
mov
mov
ja
into
jbe
repnz
cs
cmp
lock
fisttpll
loope
std
push
test
std
jl
mov
sbb
enter
das
sbbl
pop
insb
push
and
mov
xchg
push
pop
js
cmp
shlb
insb
in
lods
jno
add
and
shl
orl
ror
sbb
sub
cmp
fs
daa
xchg
pop
in
cld
jge
aas
mov
add
pushf
adc
ret
mov
int3
adcb
les
adc
loop
test
xchg
hlt
ret
pop
sub
add
repnz
fidivs
mov
scas
xchg
cs
test
sub
mov
xchg
cld
scas
sub
jno
testl
sbb
addb
mov
sub
inc
adc
mov
push
push
jge
adc
ret
adc
dec
nop
sbbb
ret
pop
cmp
setno
mov
jb
sbb
in
inc
or
rcr
shlb
js
icebp
das
xor
ds
loopne
pop
xor
fcompl
addr16
cmc
adc
pop
shrl
xchg
push
cmp
cs
shlb
inc
shr
push
cli
sbbl
push
sub
xor
lds
dec
adc
out
mov
sub
lods
xchg
adc
popa
out
mov
cli
lret
sub
xchg
fidivs
movsl
lods
test
aas
popf
pusha
leave
ja
cmc
and
lcall
cmp
pop
push
mov
mov
pop
or
add
push
jns
adcw
scas
push
adc
cmp
add
imul
dec
addr16
mov
movsb
xchg
xor
sbb
mov
es
sbb
in
xor
cmp
and
sti
mov
push
or
mov
or
adc
jno
cmp
int
mov
insb
sub
cmp
lock
iret
dec
xchg
mov
out
jmp
cmp
xchg
loop
das
fwait
dec
cmp
mov
pop
icebp
out
jle
xchg
jae
in
jnp
cmp
shll
cmp
mov
add
data16
xchg
fistl
lods
rol
mov
sub
jge
jmp
dec
clc
cmpsl
fisttps
sarb
push
dec
frstor
std
cmp
mov
adc
cmp
ret
std
xlat
push
push
into
xchg
cmp
or
or
imul
cmp
cli
cmp
mov
cmp
xchg
sub
ljmp
inc
xor
mov
pop
push
mov
and
fists
aas
fsubs
push
xchg
pushf
push
in
mov
mov
mov
icebp
loope
mov
lahf
jl
mov
dec
in
sub
add
adc
pop
popf
mov
pop
cmp
pop
fdivrs
jecxz
or
jg
sahf
lret
cmp
mov
xchg
xor
test
dec
test
js
adc
add
cmp
mov
xor
xchg
xchg
inc
cld
add
xor
aad
push
roll
cmpsl
and
adc
js
repz
adc
cmp
sbb
cmp
fsubl
push
jecxz
fs
cmp
ret
adc
sbb
mov
aaa
sub
in
xorl
cmp
and
push
mov
cmp
popa
imul
mov
ss
sbb
mov
push
cmp
fucomip
sub
shll
pushf
dec
pop
jle
cmp
cmp
inc
add
sbbb
cmp
add
gs
mov
jge
js
push
xor
mulb
push
sarb
push
rcrb
popf
add
dec
cmp
and
xlat
cmp
or
lcall
mov
into
add
pop
xchg
in
inc
cmp
cld
insb
cmpsl
dec
imul
cmp
mov
push
dec
nop
cmp
push
mov
pop
es
mov
mov
ljmp
cmpsl
sbb
idivl
fcomip
inc
sarb
mov
in
ss
xorl
cmp
stos
fdivl
dec
xchg
rcll
out
push
mov
push
xor
sahf
sbb
dec
push
sbbl
mov
and
sti
cmpsb
fisttpll
mov
cmp
rep
je
and
and
insl
push
mov
fcmovbe
mov
mov
adc
ror
cmp
pop
sarb
mov
lds
push
cs
mov
out
push
cmp
movsb
or
movsl
cmp
dec
addr16
sub
ret
lahf
inc
arpl
cmpl
lret
movsl
mov
mov
cmp
into
shll
dec
mov
imul
shll
movsl
addl
cli
mov
mov
mov
and
cmp
testb
xchg
das
movsl
aad
push
sbb
outsb
cmp
jmp
adc
in
xchg
das
jnp
push
mov
xlat
sbb
enter
sub
mov
sub
dec
xlat
push
in
cmp
push
dec
and
cmp
xchg
iret
cmp
pop
stc
test
and
adc
das
mov
notb
rclb
pop
sbb
mov
in
fmul
cmp
fwait
stos
push
cmp
or
and
call
icebp
fidivrs
outsb
iret
fcmovnb
pop
mov
add
sbb
mov
dec
inc
lods
hlt
js
into
cmp
cmp
push
les
cmp
sbb
in
movsl
mov
lret
dec
push
popa
mov
cmp
hlt
outsl
push
cmc
mov
add
ja
adc
je
jge
sarl
loopne
loope
mov
aad
movsb
cmp
daa
or
gs
xor
dec
pusha
cltd
cmp
jb
popa
jl
and
sbb
jne
test
sub
jge
jns
ret
out
incb
int
jno
je
dec
nop
inc
xor
enter
int
and
pop
and
sub
int3
or
push
in
repnz
sub
lea
nop
mov
xor
lret
into
push
in
lods
pop
push
fadds
cli
cmp
ret
mov
stos
xor
sahf
add
push
repnz
mov
sbb
push
sub
push
hlt
add
push
mov
cmp
cmpsl
negl
xor
stos
and
add
popa
loop
push
pop
leave
daa
xchg
cmpsb
jae
mov
rclb
test
mov
and
mov
mov
imul
leave
nop
lods
mull
xor
or
enter
and
mov
sahf
cmp
out
ficomps
cmpsl
cmp
pop
cmp
jne
test
lods
test
mov
cs
xchg
cmp
pop
inc
mov
aad
test
mov
das
repnz
in
cmp
imul
cmp
lds
jmp
fnstsw
mov
mov
inc
sub
push
shrl
cmp
shrb
andb
sbb
data16
lods
cltd
dec
mov
cmp
es
out
pop
arpl
and
lahf
push
clc
mov
and
aaa
test
orl
dec
xchg
mov
fistpl
pop
sub
and
ss
lods
test
ficoml
adc
sub
dec
lea
sub
lahf
dec
push
sub
pop
cmp
or
loopne
gs
nop
outsl
repnz
clc
inc
aas
dec
test
cmp
cmp
mov
fs
xor
add
jne
jl
push
nop
cmp
daa
lret
cli
into
or
xchg
dec
fwait
test
sbb
xor
cmp
aas
fstps
cmp
lahf
cld
adc
leave
in
pop
mov
mov
cmp
outsb
jb
js
testl
pusha
in
cmp
fsubrs
in
mov
xchg
scas
push
andl
das
popl
in
cmp
pop
cmp
cmp
pop
imul
mov
lods
and
cmp
lcall
push
jmp
and
pop
nop
mov
push
adc
push
decl
fldt
scas
pushf
sbb
push
xchg
mov
xchg
in
cmp
movsl
adc
sbb
and
xor
shlb
cli
fs
sub
cmp
and
cmp
mov
jnp
insb
fisttps
pop
xor
ds
mov
inc
sub
mov
inc
cmp
adc
sub
orb
adc
cmp
xor
adc
mov
or
das
mov
mov
mov
cmp
push
add
sbb
sub
je
outsb
cmpl
push
mov
xchg
cmp
jnp
lods
out
cmp
cmp
xchg
mov
push
mov
xor
loop
clc
add
or
sbb
movsl
mov
std
mov
dec
pop
sub
mov
mov
mov
cmp
mov
les
cmp
fisubl
cmp
sub
inc
xchg
and
xchg
cmp
mov
adc
dec
pushf
punpckldq
or
push
xor
cmp
mov
sbbl
adc
lods
out
fbstp
add
out
cmp
pop
inc
jb
call
jnp
dec
cmp
pop
cld
cmpsl
insl
in
mov
in
cs
sbb
enter
mov
and
add
dec
popf
mov
push
fidivs
push
adc
js
cmp
add
ds
fcomp
cmp
test
pop
fisttps
sub
in
dec
pop
test
ret
mov
incl
push
and
in
dec
push
mov
pop
aad
data16
mov
add
cs
mov
mov
add
mov
call
mov
ss
fnstcw
push
mov
ss
enter
cld
sub
add
cmpsb
roll
dec
subl
mov
test
sub
test
push
fcmovnb
aad
xor
rcl
lods
sbb
inc
fidivrl
fstp
test
xor
daa
mov
addr16
outsb
jbe
xchg
and
push
mov
call
fildl
sub
mov
aad
mov
sub
test
push
mov
test
push
orb
sbb
scas
fldt
mov
ss
inc
xchg
cmpsb
sarb
mov
jmp
in
lods
dec
pop
jne
sti
xor
push
push
mov
push
mov
pop
sbb
xchg
into
mov
push
xor
cmpsb
aas
xor
insl
sub
mov
xchg
movsl
leave
cmp
repnz
dec
jbe
and
ja
clc
cmpsl
and
loopne
mov
mov
inc
jle
das
adc
cmp
and
mov
leave
dec
mov
dec
pop
and
jmp
pop
inc
jb
sub
jb
xchg
and
cmp
mov
pop
adc
mov
and
subl
add
adc
test
aaa
or
sbb
mov
xchg
jg
sub
jo
mov
sbb
lahf
dec
jo
mov
rcrl
push
stos
das
adc
add
pop
fdivr
xor
push
stos
inc
xchg
and
push
std
pushf
out
ss
sbb
pop
push
inc
mov
pushf
adc
repz
das
ss
sub
cmp
inc
shrl
ljmp
shlb
fcmovnbe
mov
inc
add
test
cwtl
clc
cmp
mov
mov
shrb
xchg
xchg
insb
lcall
sti
shll
mov
add
fiaddl
fistpll
adc
not
shlb
aas
scas
push
mov
jo
test
leave
dec
out
enter
out
mov
mov
dec
test
loope
cs
mov
in
xchg
test
cld
shlb
mov
mov
out
jbe
dec
mov
leave
loope
mov
rolb
in
jecxz
pop
jmp
stos
adc
mov
sahf
test
inc
jnp
push
imul
stos
loop
xchg
adc
add
das
xchg
adc
in
mov
adc
push
cmovae
jmp
in
sbb
aas
scas
lcall
outsb
push
mov
cmpsl
jne
cs
stos
fildl
das
push
cmpl
int
push
mov
cmp
ret
push
add
xor
out
pop
int3
je
push
ja
pop
adc
adc
xor
ds
ljmp
xor
mov
sub
jmp
jne
or
jo
aas
cmp
and
jg
xor
xor
jp
ljmp
nop
mov
mov
jecxz
xchg
shll
and
adc
push
adc
mov
dec
popa
and
adc
les
cmp
jp
int3
mov
mov
xchg
mov
imul
or
aaa
sub
roll
mov
les
pop
jbe
sbb
pushf
in
adc
lcall
jne
mov
pop
cmp
iret
std
or
jne
dec
popl
test
cmp
leave
inc
cmp
jecxz
mov
pop
adc
lret
or
cmc
or
movsb
cs
shl
sbbl
mov
fwait
push
add
sub
push
addr16
xor
adc
mov
pop
dec
jl
loope
subb
mov
ja
shll
dec
ret
ss
xor
into
inc
lret
jge
shll
lret
jge
ss
enter
inc
cltd
sbb
call
aaa
sub
push
adc
push
mov
stos
into
in
lahf
mov
mov
test
xor
inc
or
cwtl
xchg
sub
mov
jp
sahf
adc
sti
jmp
mull
inc
cmp
les
xchg
xchg
pop
jp
call
add
sbb
jo
fcoms
and
testb
xorb
jno
mov
fisttps
add
scas
decb
mov
hlt
in
pop
xchg
jno
insl
adc
mov
sbb
pop
or
xorl
xchg
hlt
aas
inc
in
mov
or
sbb
f2xm1
mov
lock
movsl
in
mov
fsubrl
enter
pop
jbe,pn
insb
push
pop
dec
xor
in
and
mov
sub
andl
loopne
add
xchg
int3
aam
push
std
add
popf
loop,pn
ljmp
fwait
mov
movsb
inc
mov
add
jp
adc
fisubrs
mov
std
dec
xchg
test
leave
repnz
jmp
xor
sbb
cmp
push
orl
orl
xor
push
xchg
lcall
cmpb
shr
nop
mov
xchg
pop
mov
lahf
aas
adc
push
ret
jbe
outsb
sub
out
mov
inc
mov
push
and
clc
scas
push
jmp
ds
ljmp
adc
adcl
dec
arpl
ret
adc
sub
je
fbstp
out
mov
sbb
mov
insl
adcb
test
and
or
mov
ret
adc
cs
mov
sbbb
fmuls
cmp
mov
xor
pop
mov
pop
and
inc
dec
add
sub
mov
mov
and
push
iret
cmp
mov
sbb
pop
das
mov
sahf
ljmp
cmp
out
daa
nop
jno
cli
int
sub
xchg
pop
call
mov
insb
repnz
mov
lahf
movsl
stos
leave
das
adc
sbb
lods
fstps
mov
pop
leave
pop
es
xor
pop
cmp
xchg
xchg
xor
xor
cli
or
mov
iret
mov
aas
fists
js
lods
add
cmp
std
xchg
mov
mov
cs
push
mov
inc
push
mov
mov
jne
push
pop
mul
sbb
inc
mov
out
pop
addl
int3
push
aaa
inc
test
cwtl
and
ja
fisttpl
cmp
adc
aas
sub
loopne
adc
dec
pusha
mov
xorb
out
cmp
lds
inc
dec
push
mov
xor
addr16
pop
adc
in
andw
stos
xor
jmp
out
mov
lcall
and
add
mov
and
mov
test
xchg
in
clc
push
adc
orb
xchg
das
sub
iret
or
into
aas
xchg
cmp
leave
or
mov
mov
cmp
pop
xlat
adc
jb
or
push
mov
push
adc
adc
cmp
inc
mov
stos
test
aad
mov
cs
test
mov
add
movsb
ret
xchg
call
fisubs
xor
dec
sub
movsb
pusha
mov
pop
or
adc
adc
sub
pop
js
mov
stos
ja
inc
bound
js
ret
push
add
mov
pop
mov
popa
push
and
cmpsb
paddsb
adc
mov
paddq
je
ret
std
nop
imul
lock
and
xor
cwtl
dec
js
mov
xor
data16
mov
loopne
dec
mov
stc
push
add
cld
cmpb
movhps
js
movsl
lock
sub
cmp
mov
fstl
push
jg
les
jmp
aaa
jl
cli
flds
add
xorl
jl
shll
or
nop
inc
xlat
pop
inc
das
xorl
inc
sbb
outsl
ljmp
cwtl
xchg
out
jmp
movsl
pop
xor
fdivrs
inc
ss
and
fsubrs
aam
mov
es
dec
pusha
das
dec
cli
inc
jge
sub
es
jne
insl
mov
shll
mov
das
lret
pop
push
pop
xchg
sub
add
jae
mull
mov
add
xchg
pusha
scas
mov
push
push
inc
in
es
push
mov
sub
mov
mov
int3
xchg
ss
mov
mov
xor
inc
call
mov
out
sub
inc
mov
ljmp
sahf
mov
arpl
in
dec
mov
adc
icebp
enter
std
inc
clc
xchg
aad
mov
ss
mov
test
xchg
xor
push
cwtl
or
mov
add
rorl
aas
jmp
sub
mov
std
or
enter
and
sahf
fsubrs
fadd
mov
push
push
xor
add
add
or
je
xor
sub
jno
call
mov
push
mov
xlat
jns
xchg
jmp
pop
cmp
mov
and
test
call
clc
das
je
xchg
fld
test
lret
or
jle
mov
movsb
mov
stos
sub
aaa
test
adc
insb
faddl
adc
cmpsb
dec
pop
xorl
int
xor
mov
leave
mov
mov
adc
sbb
lcall
pusha
lods
mov
mul
mov
decb
je
xchg
push
imulb
jp
mov
das
pop
adc
xchg
mov
jae
mov
aas
adc
push
sbb
xor
aam
idivb
cmp
insb
out
mov
out
rcrb
fimull
dec
sub
in
pop
outsb
je
dec
lods
dec
std
xchg
adc
sub
push
mov
mov
pushf
dec
mov
adc
jne
xor
pop
inc
xchg
aam
jmp
xor
or
adc
lea
test
fistl
inc
enter
jbe
mov
hlt
adc
scas
int
push
xorb
jge
icebp
daa
pop
cmp
xchg
sub
and
enter
lahf
ret
fs
or
lods
push
adc
cmp
push
aad
popf
jmp
mov
or
mov
xor
adc
lods
mov
sbb
into
and
push
cmp
leave
ja
and
hlt
cmp
mov
lcall
cmp
lret
call
adc
popf
fisubrl
orl
push
loope
cmp
lds
rep
gs
xor
and
cmp
jae
fistl
cmpsl
ja
ja
in
cmp
mov
sub
xor
mov
sbb
popf
cmp
pop
jl
lods
int3
jle
cmp
cltd
add
shll
shlb
cs
cmp
jbe
popf
cmp
sarl
mov
jl
cmp
mov
sbb
aam
mov
dec
dec
cmp
xlat
jo
and
mov
test
cmp
jae
pop
cmp
jecxz
addr16
fs
add
movsb
ret
popf
cmp
add
js
dec
mov
mov
cmp
imul
dec
vcvttps2dq
push
cmp
fs
push
cwtl
cs
movsl
jnp
in
mov
lcall
pop
mov
nop
scas
and
xor
das
icebp
jg
clc
call
jmp
xchg
clc
lret
cwtl
imulb
xchg
lea
cmp
mov
cmp
fdivl
xlat
xchg
inc
lods
mov
shr
mov
pop
adc
mov
mov
pusha
mov
mov
push
jl
cmp
xchg
or
cmpsb
pop
mov
adc
cli
mov
push
pop
cmp
add
insl
xchg
xlat
add
jecxz
into
ljmp
cmp
test
cmp
adc
hlt
cmp
mov
pop
cmp
fisttps
aaa
push
or
stos
sbb
jecxz
es
dec
adc
scas
mov
jo
pop
cs
mov
mov
mov
in
mov
pushf
mov
add
and
insb
stos
cmp
push
fcmovne
push
dec
leave
scas
cmp
data16
movl
lods
sub
push
iret
data16
cmc
out
imul
das
jo
adc
pop
xor
sbb
mov
insb
loopnew
xchg
sub
les
aas
lahf
sub
push
pop
and
push
or
jbe
jbe
insb
fcmovnb
cltd
ljmp
int3
aaa
data16
and
xor
jmp
mov
and
bound
cmc
test
or
add
pushf
or
ret
cld
in
xchg
aas
push
push
popa
pop
outsl
push
pop
xor
push
cmp
sar
hlt
push
adc
sarb
pop
imul
inc
jp
roll
xor
adc
fimull
lods
ljmp
mov
cmpl
fisubrs
lret
ja
xor
pop
cmp
cmc
sahf
adc
loop
scas
xor
dec
cmpl
clc
flds
hlt
ficompl
aaa
orb
leave
and
scas
inc
daa
aaa
test
test
push
jno
xor
jne
pop
pop
je
cs
or
out
insl
in
aas
add
push
sub
lret
jle
pop
decb
sbb
push
sub
pop
addl
push
les
in
mov
ss
stos
popl
mov
inc
jl
loope
push
fistl
xchg
push
xor
mov
push
addb
adc
pop
or
pop
mov
or
xchg
xchg
lcall
cmp
rorb
xchg
cld
xchg
stos
and
jbe
add
push
mov
lret
cmp
adc
jns
pop
inc
ljmp
ret
or
adc
cmp
arpl
loop
cwtl
clc
stos
or
xchg
sbb
add
mov
ds
push
jge
mov
or
jne
out
icebp
dec
xor
aad
push
shl
adc
into
fs
xor
scas
mov
mov
xchg
lods
ljmp
adc
ja
into
xchg
mov
xchg
pop
int
dec
stos
hlt
add
pop
stos
testl
push
mov
lods
mov
jmp
adc
negl
ljmp
pop
pop
insl
fisubrl
jge
or
in
sbb
or
fldl
xchg
mov
and
jns
fiaddl
mov
imul
dec
add
enter
jge
sub
mov
fwait
ret
sbb
sbb
xor
ret
mov
lcall
and
les
ficompl
inc
pushl
adc
rcr
mov
pop
test
into
lahf
xchg
pop
jnp
jle
mov
lods
xchg
lret
xor
shll
jae
adc
jbe
scas
pop
mov
jne
out
les
xor
mov
push
add
aaa
xchg
out
sbbl
jmp
bound
inc
xlat
enter
jnp
jle
push
push
ror
lock
mov
cltd
sbb
cs
in
loop
mov
mov
sub
push
xor
mov
mov
mov
fldcw
es
outsb
add
push
mov
and
test
adc
mov
xchg
adc
ret
mov
scas
jge
fwait
test
fnstcw
pop
and
mov
jl
jo
enter
xchg
mov
adc
mov
sarb
sbb
xor
push
mov
jg
sbb
add
xor
adc
mov
sbb
xchg
add
push
xchg
mov
adc
xchg
jne
inc
xchg
faddp
jnp
in
stc
lret
push
addb
push
mov
outsb
les
push
mov
xor
push
mov
fdivrl
jmp
lret
in
xchg
pushf
inc
ds
inc
adc
mov
mov
icebp
and
andl
xchg
push
sub
cmp
out
pop
adc
mov
repz
lods
aaa
sub
push
jmp
mov
cmpsb
xor
fdivs
or
sub
mov
ss
or
mov
mov
mov
mov
outsl
mov
dec
push
pusha
xchg
hlt
fldenv
dec
push
out
cmp
push
inc
test
rol
xor
xor
test
mov
test
jmp
or
shl
jp
inc
imul
shrb
hlt
movsb
ret
in
or
repz
mov
test
jecxz
xor
inc
loop
outsl
sub
lds
jb
push
jecxz
int
pop
repz
pushf
jg
xchg
and
sbb
jg
out
or
push
sub
insb
mov
gs
mov
in
sbb
loop
insb
notb
sbb
adc
insl
lea
mov
sbb
inc
js
add
shlb
jmp
dec
enter
in
test
sbbb
mov
mov
xchg
js
jge
mov
jp
cmp
data16
jnp
ljmp
cmp
jb
mov
in
daa
jp
xor
fistpl
xor
mov
or
in
adc
jb
loopne
stos
jbe
in
loope
mov
movb
sbb
pop
adc
ficompl
sarb
push
jl
les
jecxz
inc
jne
ret
xchg
data16
mov
dec
inc
sub
ljmp
outsb
lds
cmp
inc
mov
cmc
shrl
mov
dec
ret
dec
aaa
adc
adcb
mov
push
in
les
out
xchg
ss
inc
mov
add
in
pop
or
pop
xor
jmp
adc
cltd
stos
hlt
push
std
adc
dec
xor
mov
stos
outsb
fmuls
push
pop
in
enter
iret
in
or
sbb
lods
aam
cmp
insb
xor
lret
xchg
dec
into
xor
push
adc
mov
fists
xchg
popa
mov
xchg
adc
jnp
dec
repnz
mov
ds
lret
jo
fwait
jb
adc
mov
dec
out
ss
add
sbb
jo
adc
mov
enter
call
subb
sarl
arpl
enter
cmp
pop
jmp
dec
mov
testl
loopne
in
push
xor
jg
lods
adc
or
ss
test
or
or
adc
pop
push
ficoml
sbb
mulb
sbb
je
cmpsl
push
jle
add
or
fcomi
test
mov
fsubrs
test
mov
xor
dec
mov
xlat
fdivrs
fidivs
aam
insl
ficoms
dec
dec
cwtl
push
lods
js
and
test
mov
cld
lods
dec
aaa
out
stos
movsl
and
mov
push
int
adc
out
mov
xchg
mov
lods
xor
ds
imul
test
mov
and
and
cmpsl
mov
adc
xor
ret
sar
aaa
mov
adc
mov
jge
aam
loope
sub
cmp
ror
clc
jo
mov
jecxz
mov
xlat
decl
dec
add
outsl
adc
fwait
jmp
lcall
in
ja
push
adc
xchg
cli
arpl
jecxz
cmp
shll
daa
hlt
pop
jge
mov
out
sahf
push
pop
mov
pop
cmp
dec
adc
sub
rcr
ret
pop
in
pop
incb
movsl
jo
je
and
adc
sbb
push
lret
fisttpll
inc
lret
mov
cs
pop
xchg
das
stos
loopne
adc
add
pop
and
out
xchg
and
rorl
mov
scas
mov
mov
loop
xlat
mov
xchg
ss
mov
shrl
xchg
shlb
into
adc
xchg
fisttpl
shll
into
pop
jbe
movsl
sbb
out
arpl
push
sbb
cmpl
je
add
clc
or
xor
std
imul
jl
mov
mov
in
mov
mov
ds
pop
aas
ds
cmc
lret
pop
sarl
shrb
insb
mov
push
sub
rorb
xchg
sub
pop
pop
xor
mov
cmp
ds
iret
stos
jl
std
aam
push
jne
les
test
xor
pusha
outsl
adc
int3
pop
test
push
sub
mov
and
int
adc
ror
sbb
push
cwtl
out
mov
xor
jmp
call
out
mov
loop
inc
mov
jno
outsb
dec
mov
push
outsl
aaa
push
jg
fildl
out
adc
sub
mov
insl
arpl
xchg
jle
lods
jnp
xor
jo
dec
cmpsl
lods
xchg
add
inc
scas
and
xor
les
xlat
add
shr
stc
pop
scas
scas
hlt
test
in
insb
das
adc
sahf
daa
cmp
scas
int
sbb
adc
cmp
cmp
or
push
in
xchg
xor
call
popa
sbb
jnp
xor
leave
and
outsb
arpl
ss
je
and
fwait
test
lods
xchg
test
sub
bound
adc
mov
mov
add
mov
mov
inc
xor
out
es
and
outsl
lret
xor
mov
sbb
out
mov
les
mov
ljmp
idivl
mov
into
xorl
pop
add
jmp
jmp
dec
mov
jg
lock
adc
push
cmpl
xchg
test
mov
inc
mov
lods
and
or
jo
jle
adc
mov
add
adc
jo
sbb
mov
xor
mov
inc
cmpsb
cmp
mov
enter
push
fbstp
loope
cmpsl
jmp
gs
aas
jbe
aad
testl
incb
and
push
mov
mov
mov
bound
inc
xlat
outsb
pop
iret
pop
insl
adcl
or
je
lods
or
fmull
mov
test
or
push
subl
inc
jecxz,pt
dec
popa
je
mov
push
cltd
outsb
xchg
add
push
or
movsb
fwait
cmpl
xor
and
pop
push
xorb
rclb
pop
mov
sar
push
loopnew
mov
mov
gs
push
mov
out
inc
std
shlb
fwait
mov
mov
cmpsb
mov
test
and
xchg
out
loope
adc
sub
sahf
push
dec
inc
cld
xor
jb
cmpsb
jmp
adc
xor
adc
adc
mov
in
fs
push
jno
insb
mov
xchg
stc
pop
add
dec
mov
in
adc
or
add
xor
loopne
pop
sub
inc
fs
push
xor
decl
push
dec
cmp
jmp
jle
push
add
inc
fdivr
ss
pop
aad
gs
xchg
pop
mov
mov
fisubs
xchg
adc
dec
sarl
xlat
jne
xchg
jnp
and
mov
and
jne
xchg
mov
leave
cs
cmc
inc
pop
and
out
ja
push
pop
das
cmp
inc
inc
adc
sub
stc
add
data16
xor
jecxz
push
jp
sub
dec
leave
pop
dec
mov
sub
jo
outsb
lock
pop
aad
adc
sub
and
sbb
aam
lock
cmp
adc
xor
xchg
inc
orb
inc
lods
fidivs
mov
inc
mov
pushf
test
mov
sub
jge
pop
insl
lahf
inc
push
das
sbb
inc
cmpsb
stos
xchg
loope
jbe
shrl
cmp
push
pop
push
or
idivl
xor
sahf
sti
ret
dec
dec
addr16
jo
adc
mov
xlat
sub
push
scas
aaa
movsb
in
xor
lahf
test
jb
les
inc
jmp
wrmsr
fldcw
lock
mov
inc
pop
jbe
fiaddl
jp
mov
test
push
inc
xor
and
cmp
enter
jbe
dec
jle
fincstp
insl
cmp
jbe
stc
sub
mov
pusha
stos
xlat
aad
inc
mov
cmp
mov
adc
sbb
jbe
std
pushf
lods
cmc
repnz
push
xchg
sbb
test
xchg
dec
xor
jp
dec
mov
imull
and
inc
sbb
stc
mov
jnp
jle
xor
add
mov
xor
nop
mov
bswap
lods
in
adc
mov
in
xbegin
xor
push
int
adc
mov
test
iret
imul
pop
js
sub
xchg
jmp
popf
in
testb
jmp
insl
cld
jge
sbb
push
ret
or
jbe
iret
push
cmp
mov
and
push
std
inc
ds
adc
jnp
sub
add
jmp
sbb
insl
mov
shlb
sub
fwait
lods
adc
pop
es
jo
add
outsb
popa
adc
fsubl
mov
jge
rolb
push
jl
insl
pop
fs
sub
hlt
and
lods
aam
or
es
mov
lock
nop
pop
sbb
repnz
inc
pop
mov
nop
sub
adc
lods
mov
xchg
rorb
mov
addl
mov
in
cs
les
pop
xchg
cmp
sub
fwait
push
gs
test
ret
mov
jb
pop
adc
mov
scas
mov
cmp
jge
in
jno
sub
mov
mov
add
out
xor
out
mov
out
push
iret
test
in
mov
pop
mov
js
inc
int3
adc
insl
out
push
cwtl
mov
xchg
rcl
fstpt
fwait
lds
mov
test
push
enter
inc
rcrl
stos
inc
sub
add
xor
or
cmpsl
ss
mov
and
repz
loop
adc
subl
mov
pushf
clc
lret
or
pop
push
xchg
movsb
and
add
cltd
aad
sub
or
cmp
mov
stos
sbb
xchg
inc
mov
nop
dec
and
lods
pusha
in
mov
mov
xlat
pushf
and
aad
push
push
push
add
push
in
add
fs
leave
cmc
popf
mov
mov
lods
cmp
mov
jl
push
test
out
scas
rcl
push
lock
push
push
sub
ret
mov
add
fstps
scas
rcrl
mov
mov
sbb
ret
roll
in
mov
xchg
stos
push
sub
cmc
inc
enter
shrl
jmp
pop
stos
ret
jmp
mov
das
test
lods
fistl
mov
into
xchg
movsl
cmpsl
mov
xchg
aad
mov
ret
and
mov
ja
leave
jg
iret
shll
sub
popf
jecxz
stc
push
cmp
sbb
mov
lcall
int
or
fldcw
mov
adc
xchg
jb
into
push
sub
in
in
sbb
lods
push
leave
mov
ret
inc
mov
push
or
negb
cmp
fs
int
xchg
loope
dec
mov
inc
enter
hlt
pop
lcall
rolb
sbb
daa
rorl
test
ficomps
das
mov
sbb
out
sub
adc
mov
lret
cmpl
jp
sbb
repz
loop
push
and
or
lret
push
test
out
bound
cmc
cwtl
sub
push
and
mov
xchg
cmp
xor
adc
out
push
push
adcb
loope
xchg
and
ja
into
es
in
ss
sbb
jns
fbld
das
dec
mov
and
mov
rclb
adc
inc
addr16
cmp
sbb
mov
mov
aaa
clc
adc
movsl
movsb
rorl
adc
mov
test
enter
mov
ja
jge
mov
push
ret
daa
xor
jge
cmp
call
xchg
or
pop
clc
cmpsb
in
popa
cli
enter
roll
or
inc
pop
mov
aad
sub
add
outsb
mov
ss
adc
mov
pop
push
imul
xchg
fcoms
ljmp
cmp
mov
sub
out
shll
ljmp
jmp
jp
arpl
mov
daa
mov
jmp
sub
std
mulps
sti
sahf
or
xor
mov
mov
or
mov
aas
mov
call
xlat
arpl
inc
jle
outsl
mov
xor
jo
mov
mov
and
inc
inc
push
fcmovb
mov
xor
inc
xor
insb
rolb
pop
adc
xchg
aas
aaa
sbb
insb
mov
rcr
or
adcl
ljmp
inc
sbb
gs
lods
int
or
push
add
add
inc
gs
loopne
shr
jp
xchg
sbb
xchg
sub
les
adc
push
in
dec
xor
xchg
adc
inc
jl
inc
inc
icebp
insl
out
scas
cmp
push
jecxz
xchg
cmp
fldcw
fstps
xor
mov
scas
xor
leave
push
add
dec
sbb
adc
mov
jae
and
shr
and
shll
jge
ds
sarb
mov
and
fcoml
xor
daa
and
ret
xor
in
sub
pop
clc
pusha
jne
je
xor
xchg
shll
jl
xor
xor
push
fucomi
mov
lcall
stc
ja
dec
jne
insb
roll
push
push
aas
mov
sub
stos
add
push
mov
loop
cmp
je
pop
adc
aam
cmpsl
mov
das
jle
dec
js
pop
xchg
pop
scas
adc
jg
mov
int3
loopne
in
insl
mov
loopne
mov
adc
sbb
sahf
xchg
adc
or
sbb
les
out
xchg
jmp
and
fwait
sub
mov
add
outsb
and
aam
push
insb
js
scas
sbb
pop
repnz
push
fldenv
jmp
test
push
in
sbb
sbb
inc
sub
cmp
sub
fnstcw
incl
dec
jne
mov
xchg
pop
and
jecxz
sub
dec
mov
out
fcomp
and
jle
cli
xor
icebp
mov
decb
leave
lea
subb
push
push
lret
inc
cmp
push
je
xchg
mov
pop
xchg
aam
int3
lods
lock
lea
stos
adc
xor
adc
into
and
pop
add
sahf
les
ficoml
jg
add
mov
dec
xor
and
insl
mov
cmp
mov
pushf
outsb
inc
in
jp
fsubr
and
mov
push
cld
xor
hlt
adc
xor
mov
in
shll
xor
sahf
std
pop
aas
jl
popa
or
jecxz
xor
push
and
mov
aad
mov
mov
dec
cmc
jg
ret
das
jmp
push
pop
push
and
mov
aas
je
push
std
and
mov
and
sahf
mov
jo
test
xchg
ds
push
or
adc
xor
xchg
and
sarl
mov
pop
adc
mov
sub
mov
outsb
pop
pushl
cli
in
seta
cmp
sub
xlat
or
sbb
fwait
xor
lret
cmp
scas
mov
into
test
jne
jge
pop
clc
sub
mov
pop
mov
ret
in
sub
or
imul
hlt
aad
pop
mov
in
adc
incl
sub
out
in
in
pop
mov
call
adc
out
xor
mov
or
fldcw
or
mov
fdivrl
adc
les
jg
das
mov
xchg
jmp
movsl
inc
push
sub
or
xchg
xor
notb
fldenv
push
into
jmp
nop
or
imul
push
or
push
out
enter
int
ret
jle
cmp
mov
movsb
jge
cmpb
inc
sbb
push
sub
lret
in
adc
mov
dec
inc
lcall
ljmp
xlat
push
and
test
adc
xchg
add
rclb
js
iret
mov
mov
mov
and
insb
pop
add
mov
ss
and
jnp
insl
out
out
xorl
mov
jle
or
inc
sub
cltd
lods
ret
hlt
jp
mov
ds
imul
pop
jne
mov
cmpsb
sbb
lret
cmp
mov
imul
adc
mull
nop
push
add
shrl
jnp
sub
testl
mov
or
int3
clc
adc
mov
int
stos
shrl
cmpsl
iret
xor
jns
mov
daa
xchg
jmp
inc
movsb
adc
xlat
hlt
xchg
jns
scas
cmp
mov
dec
sbb
mov
or
jae
or
xor
sbb
xlat
jae
jge
or
imul
sub
sub
cmp
pop
mov
adc
dec
mov
mov
loope
add
cmp
aas
xlat
lds
xlat
jne
adc
inc
mov
or
jbe
pop
sbb
sub
out
mov
mov
xchg
xchg
sbb
into
adc
insb
or
xchg
and
les
shlb
filds
fcompl
leave
stos
xor
pop
xor
js
inc
enter
cmp
mov
in
shl
adc
dec
dec
mov
std
mov
cmc
xlat
mov
mov
xor
negb
popa
mov
je
test
or
sbb
and
mov
sub
cmc
mov
pop
adc
in
mov
and
imul
mov
mov
add
mov
adc
fbld
arpl
and
push
adc
cmp
sub
xor
jmp
mov
nop
adc
scas
lods
int3
xlat
aas
push
dec
adc
das
daa
lock
jne
mov
nop
std
push
cs
adc
shlb
mov
sub
imul
add
mov
adc
mov
add
int3
in
mov
push
cmpl
nop
sub
stos
call
push
push
das
rolb
pop
popf
adc
inc
xor
stos
pop
sbb
addl
push
push
push
sub
mov
pop
inc
dec
cmp
imul
and
mov
adc
cld
test
ror
or
lcall
data16
push
stc
pop
push
xorb
shrl
sub
shll
push
lcall
sarb
sti
jmp
cmp
dec
dec
jb
sbbl
sub
bound
js
mov
cmp
stc
loopne
adc
mov
cmp
test
vmovdqu
sub
scas
push
pop
aad
jp
sub
outsb
add
mov
pop
and
sbb
fldt
rcrb
xchg
adc
sbb
inc
sub
mov
sarl
fldpi
in
jecxz
imul
sub
ret
dec
mov
add
aaa
pusha
mov
lret
popa
cmpsb
lods
sub
testl
push
sbb
scas
mov
mov
dec
cmp
jns,pn
add
cli
pop
push
jne
push
leave
pop
gs
or
je
decl
bound
fcompl
test
loope,pn
sbb
pop
or
stos
scas
adc
shlb
stc
push
fadd
dec
adc
mov
popf
add
cmp
rclb
dec
call
adc
adc
inc
mov
cmp
inc
add
je
adc
mov
lods
and
dec
xor
jmp
jp
adc
mov
sbb
mov
dec
mov
lods
repnz
in
or
pusha
add
scas
aad
cwtl
pop
pop
test
lods
mov
adc
dec
push
or
xor
loope
lods
repnz
xor
sbb
sbb
push
cmp
sub
ss
inc
movsb
aas
cmp
adc
cmp
adc
stc
dec
int3
sbb
cmp
ljmp
sub
stos
subl
inc
xchg
sub
jae
das
cmpsl
adc
dec
jb
jecxz
sub
sbb
jo
add
mov
cs
dec
hlt
xor
sti
les
jnp
fs
jae
mov
jl
insb
add
js
in
jno
push
adc
lods
subl
inc
insb
mov
inc
cs
or
and
pop
dec
sub
cmp
sub
rcrb
lock
mov
leave
dec
fimuls
int3
jecxz
cmp
jp
pushf
icebp
inc
in
cmp
push
sbbb
cmp
leave
fcmovnbe
or
xor
int
out
outsb
pop
mov
pop
push
insb
mov
add
xchg
dec
lcall
ret
sub
push
sbb
icebp
test
int
cmp
xchg
stos
sbb
insb
lea
cmp
mov
cmp
sub
loope
and
xchg
das
pop
mov
sbb
in
xor
fsubrs
lahf
sbb
je
ja
add
aam
scas
in
cmp
or
xchg
cmp
fists
push
sbb
fdivp
mov
repnz
xor
or
outsb
repz
mov
push
xor
xchg
movsl
sbb
cmp
xchg
pop
push
jno
jp
dec
or
xchg
daa
movsl
cmp
and
pop
data16
cmp
sub
xorl
xchg
sub
data16
cmpsl
mov
ds
mov
mov
cmp
dec
test
xchg
push
mov
or
ljmp
push
idiv
cmp
mov
sbb
and
mov
pop
xchg
xor
mov
cmp
mov
push
sub
pop
add
push
fwait
cs
inc
dec
out
jo
int3
scas
jne
cmp
je
add
scas
inc
in
cs
xlat
rorl
cmp
sbb
cmp
lods
lret
push
push
cmp
push
outsl
pop
ss
dec
jmp
in
mov
cmp
cmc
in
mov
call
lods
add
cmp
push
push
cmp
lret
std
cmp
push
mov
mov
repz
add
inc
and
sarl
pop
dec
mov
outsb
cmp
in
jge
dec
cld
into
shlb
cmp
andb
mov
pop
out
rclb
mov
cmp
out
mov
push
sub
jp
leave
repz
lret
sbbb
sbb
outsl
cmp
cmp
or
inc
addl
out
sub
cmp
push
les
imul
loope
ret
adc
cmp
sub
xchg
stos
flds
in
cmp
push
nop
loope
lcall
cmp
or
je
pop
rep
and
aad
stc
sub
int3
lods
xorb
lahf
loop
xor
push
push
sub
shl
cmp
adc
push
out
or
inc
rcr
xorl
out
or
cmpsb
push
shrl
pop
cmp
pop
cmp
add
cmp
ret
sub
push
cmpsb
cmp
sub
or
pop
cmp
dec
sti
repz
dec
bound
cmp
aad
scas
in
mov
frstor
push
stos
stc
ret
push
or
mov
sbb
pop
mov
xor
pop
inc
pop
fldenv
cmpsb
sarl
xlat
arpl
imulb
adc
mov
pop
sub
inc
cmp
das
ja
jae
subb
cmp
push
scas
push
cmp
mov
jge
popf
inc
push
inc
aas
mov
pop
adc
lret
xlat
pop
cmp
mov
shl
test
push
jae
push
sub
shrl
subb
xchg
mov
loop
cli
imul
sbb
outsb
cmp
xchg
cmpsl
dec
sub
loopne
cmp
and
int
inc
cltd
jnp
hlt
ljmp
xor
aaa
sbbl
or
sbb
and
jle
into
cmp
mov
mov
aam
cmp
into
push
out
nop
xor
jg
jne
enter
cmp
or
mov
subb
cmp
mov
lret
in
ret
sub
xlat
popf
jnp
or
mov
cmp
test
mov
mov
sub
cmp
dec
mov
cwtl
ja
cmp
ret
hlt
lret
mov
xor
loop
std
jae
dec
xchg
sub
pop
imul
fcmovnu
or
ficomps
jp
or
lcall
lock
mov
movsl
cmp
mov
pop
mov
mov
xor
lods
jno
pop
sbb
xor
sbb
cmp
in
push
sahf
mov
cld
mov
adc
shl
loop
mov
sub
sub
push
or
stos
movsb
nop
cmp
xchg
jle
cmp
popf
hlt
loopne
fsubr
insb
movsb
mov
cld
dec
sbb
cs
xchg
and
inc
aas
push
cmp
test
xor
dec
add
lods
repz
mov
jge
addr16
cmp
cmpsb
test
xor
aad
in
iret
cmp
les
mov
xchg
jo,pt
sti
mov
decl
cmp
lods
int
inc
cmp
push
xchg
cmp
sub
lahf
int
or
test
push
push
sub
jb
adc
and
or
jo
ljmp
push
stos
popf
cmp
stos
icebp
cmpsb
js
pop
dec
fdivl
jg
xor
mov
sub
notl
dec
adc
or
lds
mov
pop
jae
mov
ret
cmp
or
adcb
popa
dec
add
jmp
cmp
sbb
ret
cmp
adc
pop
cld
xor
mov
or
pusha
pop
lds
and
pushf
idivl
sbb
jle
cs
pop
jl
jb
push
iret
sahf
push
or
sub
or
mov
xor
push
cmp
jo
ret
test
fs
mov
outsl
lods
mov
sahf
adc
jl
push
jae
rcl
dec
jmp
sub
mov
fwait
into
sbb
es
xchg
inc
lods
popf
sub
divl
cmpl
aas
jg
mov
ret
cmp
mov
mov
cs
faddp
mov
mov
das
sub
sahf
aaa
push
cmp
insl
cmp
cs
cmp
out
fcmove
mov
push
sub
sub
push
test
push
inc
cmp
xchg
jns
and
int3
xchg
cmc
aad
pop
mov
dec
imul
jl
jmp
sub
popa
push
stos
insb
adc
mov
mov
outsb
adc
repz
insb
ret
aas
idivl
cmp
int
lea
mov
fsubrs
data16
mov
dec
out
xchg
call
test
out
cmp
imul
mov
jmp
or
mov
lods
push
xor
mov
mov
jg
mov
insl
popf
xchg
ds
adc
push
mov
cld
cmp
xchg
lock
test
call
dec
and
in
mov
inc
push
push
xchg
push
adc
push
cmp
decb
pop
mov
adc
adc
cmp
pop
aaa
mov
sub
mov
push
lock
nop
push
mov
fsubs
mov
mov
xchg
mov
rorl
xchg
push
push
ljmp
adc
mov
xor
adc
mov
stos
sbb
adc
cmpsl
int
dec
pop
mov
jl
adc
mov
aaa
les
add
mov
mov
imul
inc
nop
lcall
adc
pop
inc
das
lcall
sub
push
lods
xchg
jae
push
mov
cld
mov
lods
push
fsubrl
jmp
call
test
data16
leave
in
inc
pop
mov
xor
sarl
imul
fcmovne
cwtl
loop
hlt
mov
in
xchg
ror
push
jl
nop
mov
ret
adc
sub
or
fdivl
in
mov
les
xchg
lcall
ds
add
mov
js
loopne
sub
pusha
cmp
lock
cmp
push
outsl
ljmp
or
cs
int
nop
push
and
pop
jbe
fcompp
inc
add
cmp
fldl2t
inc
out
sub
ss
mov
add
imul
inc
push
mov
arpl
cmp
xchg
lahf
mov
dec
mov
push
mov
enter
mov
mov
mov
add
mov
mov
xor
sbb
jbe
stc
sbb
in
lea
jne
sbbl
pushf
ja
mov
adc
jle
sbb
stos
pop
subps
in
mov
insb
jnp
mov
out
cmp
sub
inc
je
mov
push
das
jmp
mov
jne
cmpsb
cs
dec
shll
fidivrl
adc
in
jl
ss
es
les
into
scas
subl
inc
mov
xchg
dec
scas
rcll
inc
iret
xor
mov
push
sbb
enter
andb
lods
jae
lcall
lods
dec
test
adc
mov
xor
imul
je
fimuls
cmpsb
stc
mov
or
inc
rcll
and
pop
inc
mov
out
orb
in
cmc
aaa
mov
pop
adc
dec
in
imul
ret
add
nop
popf
das
je
adc
and
push
sbb
divb
adc
clc
mov
dec
pushf
lods
orl
popf
fisubl
dec
jne
push
test
les
add
insl
call
sbb
mov
pop
adc
pop
ds
and
xor
test
mov
femms
test
cltd
jmp
add
pop
insl
das
mov
add
aas
imul
xchg
jb
pop
in
mov
insl
lcall
xlat
and
mov
mov
pop
bound
movsl
fs
decb
push
mov
test
xchg
push
jmp
push
mov
jno
jmp
aas
xor
sbb
dec
int3
sbb
mov
pop
push
xchg
loope
int
sub
ja
jno
dec
and
adc
je
add
jl
dec
test
insb
jno
push
pop
fmul
lret
add
cwtl
test
test
xlat
mov
jmp
mov
sub
add
adc
jb
jo
add
aas
das
loop
mov
mov
sahf
cltd
pop
cmp
jg
mov
pop
incb
xchg
inc
out
push
jmp
les
scas
jmp
ljmp
out
push
and
clc
jl
in
lock
xchg
sub
das
add
sbb
dec
loope
mov
sbb
notl
push
xor
sbb
cmpl
pop
movsb
ja
lds
outsb
fdivr
sub
push
imul
dec
das
adc
mov
mov
xor
fdivrl
rcr
dec
scas
fldenv
sub
push
in
and
rcl
insb
adc
insb
jo
ja
in
inc
push
insl
sub
mov
jbe
mov
xchg
or
ss
lods
mov
lret
xchg
mov
ja
fistl
das
xor
insl
mov
or
into
adc
cld
imul
adc
dec
dec
aaa
mov
inc
into
mov
adc
add
jg
call
jns
adc
fidivrl
adc
in
add
sarl
mov
pushl
sarb
push
repnz
xchg
ss
sarl
movsl
aaa
mov
or
mov
pop
push
add
or
cmpb
xchg
ret
out
sub
arpl
xchg
push
pop
lds
or
add
fisttps
dec
cli
xor
adc
es
dec
lret
mov
jno
insl
jecxz
icebp
hlt
mov
xor
adc
add
leave
popf
jae
scas
cmc
stos
mov
adc
inc
adc
lds
ja
out
inc
movl
ja
or
jmp
pop
inc
xor
loop,pt
sahf
lcall
jnp
sbb
sbb
mov
data16
ss
cmpsl
pop
filds
xchg
cmpb
sub
xor
mov
aam
ss
sti
call
mov
xor
sti
mov
shl
outsb
jl
inc
in
jne,pn
dec
sbb
in
mov
add
ret
rorl
or
xor
xor
pop
mov
mov
push
pusha
or
push
outsl
not
out
test
aaa
js
int3
xchg
xor
repnz
adc
sub
xlat
push
jle
xchg
push
adcb
mov
data16
sti
imul
frstor
mov
and
mov
pop
sbb
mov
push
xor
sub
and
divb
xor
pop
push
loopne
arpl
ds
sub
lods
push
mov
mov
inc
cmpsl
sub
push
jbe
fildll
add
and
pop
sub
iret
add
popf
xor
xchg
mov
sub
call
jmp
test
clc
call
leave
sahf
mov
cmp
ret
and
mov
adc
pop
and
nop
in
xor
aas
cmp
es
ja
pusha
mov
ljmp
pop
mov
cmp
push
jbe
and
inc
dec
mov
jge
sub
outsb
xor
gs
push
mov
or
push
xchg
jmp
aam
mov
cmp
divl
pop
test
clc
and
out
fcoml
dec
addr16
mov
in
out
loop
mov
hlt
cmpsb
push
push
cmc
xor
lds
das
in
mov
ljmp
xor
dec
cmp
gs
fisubl
mov
das
loop
push
xor
in
sub
adc
or
adc
fwait
sub
test
roll
insb
jo
stos
dec
push
inc
cmpsb
data16
push
mov
mov
dec
mov
mov
pop
xchg
pop
sub
inc
mov
and
jae
lds
lret
cld
stos
pop
fcoml
mov
fistpll
insl
or
imul
sbb
lods
dec
cwtl
call
and
or
adc
adc
pop
adc
adc
push
lods
out
push
fidivs
adc
add
xchg
enter
cltd
mov
adcl
push
dec
mov
mov
dec
xchg
aad
mov
inc
enter
jmp
mov
pop
xor
xchg
subb
jg
stos
xor
scas
inc
xlat
cmpsb
adcl
pop
mov
xor
inc
mov
mov
push
mov
mov
dec
pop
push
cmp
adc
lods
mov
std
inc
xchg
xchg
xchg
rcrl
pop
inc
or
push
push
sti
js
faddl
ss
aam
movsl
xor
push
int
xor
jge
dec
pop
fisubrl
sahf
into
sub
dec
add
push
xchg
fisttpll
xchg
aam
sub
in
pop
shrl
jmp
fidivrl
fisubrs
dec
fdivrs
and
xchg
ret
mov
aad
jbe
sub
addl
push
xchg
cs
dec
jmp
rcr
cmpsl
cmp
negl
jb
mov
or
or
or
and
sbb
int3
jne
push
add
sahf
out
sub
aas
fisubrl
mov
sti
xor
pop
mov
mov
in
in
ljmp
sbb
and
sahf
ficompl
add
xchg
lods
xchg
fistl
push
in
hlt
dec
arpl
outsb
imul
inc
movsb
stos
adc
sub
scas
clc
outsb
inc
cmp
dec
push
sbb
mov
lock
xchg
movsb
and
fwait
jbe
ds
ss
mov
arpl
sub
xchg
fwait
sub
in
adc
inc
push
mov
inc
jg
clts
inc
addr16
clc
lds
test
push
push
mov
enter
gs
into
iret
das
out
xor
sahf
test
loop
cmc
and
aad
pop
scas
fs
jle
mov
dec
sub
jae
insl
aad
enter
lds
jl
mov
cmc
lea
int3
add
sub
push
inc
cld
xchg
sbb
jmp
cmp
mov
mov
fiaddl
dec
out
add
mov
movsb
in
int3
mov
add
data16
das
clc
push
mov
div
jp
mov
xchg
sbb
int
sbb
jo,pn
jl,pt
inc
ljmp
adc
push
test
inc
mov
push
inc
jae
ljmp
je
xlat
into
jmp
incb
insl
cwtl
mov
lods
ss
sub
cmpsb
mov
mov
ja
andb
mov
ficoms
xor
test
mulb
pop
push
and
insb
sub
mov
adc
pop
lea
inc
mov
adc
in
xlat
mov
or
add
es
xchg
cmp
fsts
mov
lds
aam
lock
or
inc
sahf
push
fiadds
dec
aad
ljmp
cmp
pusha
mov
je
ss
pop
xor
jo
enter
sbb
jmp
jg
pop
xor
ja
nop
fwait
jmp
mov
out
and
daa
in
sahf
dec
std
sbbb
mov
dec
sbb
cmpl
push
popf
ja
push
sbb
or
in
jns
mov
jmp
stos
ds
adc
fidivs
jnp
cmpl
lds
das
fidivrl
cmp
dec
sahf
push
insl
jmp
ds
dec
fsubr
and
mov
mov
adcl
jae
adcl
mull
inc
ret
adc
dec
shlb
adc
sub
pop
add
enter
arpl
imul
pushf
sbb
push
cmc
xchg
mov
loope
icebp
dec
mov
jne
cmpb
cmp
or
mov
inc
xorb
pop
push
ds
data16
scas
inc
add
jns
mov
loope
shll
jecxz
test
data16
clc
addb
jp
ljmp
adc
mov
cmp
xor
cmp
insb
inc
insb
cmp
xlat
inc
inc
cmp
pop
dec
repnz
mov
or
mov
dec
lock
out
sub
add
pop
xchg
out
adc
testl
insl
scas
jge
das
adc
xor
xor
adc
mov
hlt
sbb
mov
stos
pop
pop
push
les
in
pop
jb
sti
ss
fnsave
add
ficoms
out
xchg
push
pop
add
mov
mov
or
and
xchg
lea
cli
insb
mov
and
jmp
add
dec
or
and
xchg
loope
cmp
sub
sub
icebp
xor
push
inc
adc
pop
mov
ljmp
push
mov
xor
hlt
push
xor
popf
jmp
das
adc
mov
or
xor
lock
jp
sbb
clc
push
scas
dec
or
xchg
test
jmp
movsl
je
jecxz
cmc
xchg
and
jb
mov
pusha
sub
add
aad
sub
mov
cmp
xchg
scas
in
mov
ljmp
mov
mov
in
mov
push
jl
push
and
adc
pop
fisttpll
movsl
jle
sub
push
mov
pop
mov
sub
push
pop
js
lods
xchg
fwait
dec
sbb
adc
cld
mov
jle
and
sub
into
push
sbb
fs
js
bts
int3
pushf
mov
das
push
or
rolb
js
ss
inc
add
iret
mov
xchg
jg
or
jno
and
mov
adc
push
adc
cmp
xor
jp
mov
jno
mov
mov
push
incl
xchg
xor
pop
jl
cmp
adc
dec
repnz
xor
xor
dec
fwait
addb
ja
sbb
adc
in
fs
and
or
pop
repz
in
shll
inc
push
adc
jl
shrb
in
xchg
cmp
jmp
inc
sahf
sub
and
jb
mov
mov
jmp
sbb
jecxz
jmp
xor
je
push
adc
rcr
and
jmp
mov
mov
mov
iret
stos
jnp
jmp
sbb
mov
ljmp
ret
mov
sbb
adc
mov
les
bound
outsl
lret
cwtl
inc
iret
xor
dec
sbbl
cwtl
jbe
test
xchg
and
mull
lock
pop
jb
addr16
lret
push
add
mov
test
daa
jbe
adc
nop
sbb
in
mov
cmpsb
rolb
je
ds
adc
cmpsb
lret
cmp
out
es
lods
pop
cmp
in
stc
leave
stc
mov
loope
add
cmp
mov
das
pop
inc
gs
inc
ss
adc
adc
jae
adc
adc
push
ret
in
pop
jo
add
pop
shlb
pop
lock
pusha
and
pop
xor
and
sbb
mov
jle
mov
pop
aad
jns
dec
push
orl
xchg
lret
mov
clc
adc
nop
cmp
aam
cld
sub
enter
xchg
sbb
push
dec
xchg
jbe
mov
pop
add
jb
xor
testl
adc
and
js
xor
mov
xchg
fsubrl
cmpl
and
sub
in
xchg
sbb
push
jbe
cmp
out
inc
ret
push
das
in
lods
xchg
and
xchg
sub
lea
ljmp
pop
hlt
jg
mov
xchg
pop
jl
cs
push
sbbl
push
ss
inc
neg
mov
dec
cmp
push
pop
arpl
or
sub
cmp
xor
int3
pop
pop
add
push
insb
pop
adc
sub
sahf
push
gs
int
addr16
adc
xchg
pop
aam
std
adcl
mov
adc
aad
outsb
mov
push
cmc
int
js
sub
hlt
add
repnz
xor
and
out
xchg
jmp
shlb
cmp
das
and
cmp
loope
adc
jns
fwait
xor
xchg
jle
hlt
add
or
test
mov
jno
or
fnstenv
sub
test
lahf
xchg
mov
cmp
je
mov
ljmp
in
xor
push
out
rol
dec
or
jbe
imul
enter
push
ss
minps
mov
pop
push
mov
into
xor
sub
hlt
dec
sub
dec
movsl
mov
jno
mov
mov
idivb
mov
fwait
xchg
subb
icebp
test
xor
dec
jne
mov
into
sub
cmp
pop
and
cmp
jo
out
retw
iret
in
push
lods
rcll
outsl
mov
data16
mov
arpl
push
out
aad
je
test
les
jbe
xlat
dec
adc
sub
movsl
xchg
sbbl
xchg
sbb
adc
jb
cmp
loope
out
jl
pop
lahf
mov
xchg
jge
repz
fbld
jmp
xor
lods
xorl
mov
add
jo
push
divl
loope
push
outsl
mov
and
ds
pop
jmp
mov
cmp
pop
out
mov
rclb
pusha
daa
mov
lds
mov
xchg
testb
pushf
push
int3
scas
pusha
sti
scas
jecxz
lds
test
xor
xor
mov
push
adc
add
dec
sbb
xor
stc
imul
fldenv
lahf
in
out
mov
mov
dec
mov
stos
and
jge
call
sub
loop
jbe
hlt
mov
pop
mov
mov
jno
sbb
shl
sub
mov
inc
jle
mov
adc
or
sbb
xchg
into
notb
cmp
repnz
pop
jle
std
movsl
jo
or
sbb
cwtl
imul
and
mov
cmpl
xchg
jno
mov
jae
out
cmpb
les
test
push
out
pop
sbb
adc
mov
or
mov
xchg
sub
cld
loopne
push
pop
ss
mov
cmpsb
mov
stos
push
push
into
fadds
sti
ret
pop
shrb
adcl
nop
fildll
daa
imul
mov
lret
in
push
jmp
add
je
sub
mov
adc
mov
xor
scas
sub
sar
push
mov
cltd
lds
xchg
xlat
fdivp
jl
jno
stc
sbb
mov
pop
ret
sbb
cmp
xor
push
notb
mov
daa
cld
pop
mov
dec
ja
lea
rorl
push
call
xchg
and
outsl
fcmovne
push
test
icebp
jg
dec
mov
enter
pop
sub
pop
gs
test
mov
popf
mov
mov
lds
mov
sti
jns
adc
ja
mov
mov
mov
lds
and
mov
pop
push
cld
xchg
pop
inc
test
enter
xchg
stos
lret
sub
or
in
xchg
ljmp
jno
mov
fistps
xor
or
sub
jae
frstor
stos
iret
in
cmp
stos
inc
xchg
and
cmp
enter
cmpsl
push
mov
lahf
push
in
mov
shlb
xchg
popw
inc
and
mov
sbbb
sarb
sub
and
std
je
lahf
pop
sub
jnp
fisubrs
lods
xchg
mov
mov
test
push
inc
out
pop
adc
jb
outsb
ss
jecxz
jae
xchg
stos
iret
cltd
mov
insl
std
lret
out
xor
movl
pop
push
jne
pop
insb
sub
test
push
leave
call
out
push
xchg
bound
cmp
out
aad
mov
adc
jae
adc
adc
ror
das
sbb
stos
xchg
lcall
mov
cmpsb
dec
mov
jb
inc
push
aaa
lods
jp
pop
movb
jp
enter
popa
sbb
ja
mov
adc
adc
mov
sbb
mov
mov
jmp
or
pop
jl
test
xchg
pushf
scas
lret
mov
push
int
cmc
nop
mov
jg
clc
pop
pop
insb
ss
ds
fcmovb
xor
mov
mov
sbb
sbbl
mov
mov
jecxz
cmp
fidivl
popa
ljmp
pushf
jne
insb
sahf
add
xchg
xchg
insl
movsb
add
loopew
pop
cmpl
mov
mov
pop
adc
mov
outsb
xchg
cmc
jae
xor
test
nop
in
mov
xchg
iret
dec
mov
mov
fisubrs
add
fisttpll
in
outsb
in
mov
push
xchg
or
bound
das
sti
in
jb
jo
popa
ss
dec
mov
sub
ja
sbb
inc
test
pushf
adc
xchg
push
dec
aam
adc
dec
pusha
sub
leave
in
pop
push
xchg
add
les
cs
xor
aaa
xchg
sti
push
sub
out
mov
int3
clc
jbe
mov
testl
je
xchg
punpckhdq
test
fnstcw
inc
pop
push
popf
idivb
mov
sarb
push
sarl
int
dec
das
fdivp
and
and
fdivl
lret
repnz
xchg
mov
ljmp
lock
sbb
ljmp
incl
jno
scas
jl
sbb
inc
mov
les
mov
mov
enter
adc
test
loopne
enter
pop
adc
dec
adc
inc
and
jle
inc
andb
jae
lods
aas
shlb
xor
mov
mov
addb
dec
pop
aaa
pop
aad
inc
sbb
cmc
mov
or
jbe
in
shrb
lahf
sarl
aaa
shr
hlt
sti
cmp
lret
popl
daa
sub
push
out
ds
int3
adc
dec
scas
idivb
or
adc
dec
insl
mov
push
addb
faddp
push
je
dec
outsb
nop
dec
aaa
pop
enter
jmp
lods
pop
mov
jle
adc
into
sarb
fcmovbe
fadds
inc
stos
sub
lret
incl
push
and
out
pop
mov
and
daa
outsb
scas
repnz
ja
push
leave
lock
leave
sbbb
xor
sub
or
or
pop
adc
push
cmp
mov
in
mov
xchg
inc
sbb
aaa
ja
imul
push
jno
addb
lods
ja
mov
ljmp
sub
add
pop
lods
pop
sbb
or
ljmp
cs
mov
push
mov
mov
test
pop
push
mov
xor
repnz
hlt
fs
jmp
push
mov
or
xlat
shrl
or
nop
dec
sub
adc
push
sbb
jne
pop
mov
pusha
xchg
adc
inc
mov
jno
call
mov
push
fcomi
add
adc
inc
pop
sarl
xlat
dec
pusha
test
in
popf
in
imul
mov
lret
xchg
xchg
rcll
and
jmp
test
test
call
push
sub
adc
add
insl
mov
mov
dec
ss
push
lods
fs
in
mov
movsl
dec
mov
out
pop
loop
or
testl
jmp
fs
in
scas
sbb
dec
or
xchg
ljmp
add
fs
in
fistl
mov
mov
mov
push
mov
andb
fsubrp
fcom
inc
mov
fldcw
into
test
jle
insb
sbb
sub
jo
add
mov
scas
negb
jge
xchg
push
push
imul
fimuls
xchg
dec
popa
jle
orb
pusha
sub
adc
sbb
or
cmp
cmp
jecxz
or
ja
dec
lds
cmp
pop
jp
push
inc
sub
push
xchg
or
mov
adc
cmp
fmull
out
cmp
rorl
cwtl
xor
add
adc
lods
cmp
push
call
adc
push
pop
es
and
test
cmc
adc
in
mov
cli
lods
les
push
or
iret
test
mov
xchg
cmp
imul
ffree
bound
mov
push
in
cmpl
mov
push
dec
xchg
scas
out
lcall
iret
push
rol
ja
or
adc
out
mov
add
stc
pop
and
mov
cmp
inc
in
ja
and
jg
lret
fnstcw
sbb
int
jecxz
xor
cmp
mov
sbb
push
or
imul
roll
insl
out
sub
cmp
outsl
xchg
mov
arpl
ret
divl
jl
lds
das
pop
enter
popf
imul
and
aam
adc
and
xor
lods
pop
dec
mov
sbb
xchg
bound
scas
shl
sbb
and
sarl
lcall
lock
int3
xor
push
inc
mov
cmp
add
cs
mov
xor
mov
sbb
push
pop
jge
out
aam
mov
and
adc
cmp
shl
out
cltd
dec
div
sbb
insl
pop
stc
loope
adc
sti
rcl
push
push
push
cs
fdivr
out
pop
dec
cmp
lcall
push
or
arpl
push
cmp
pop
sbb
loope
and
cmp
outsl
jecxz
int3
lods
das
cmp
mov
stos
cmp
push
inc
cmp
fwait
adc
orb
stc
aas
or
push
in
cmp
stos
pop
pushf
xor
les
movsl
cmovae
or
add
adc
xchg
hlt
arpl
cmp
dec
sub
cmp
dec
mov
mov
fists
mov
sub
sbb
cmp
or
nop
jmp
pop
int3
cmp
mov
cmp
arpl
dec
sub
cmp
flds
lods
or
lods
std
pusha
ljmp
data16
lods
icebp
popa
enter
mov
inc
inc
int
scas
call
cltd
mov
cmp
out
cmp
and
cmp
sub
add
or
test
and
stos
imul
xchg
lods
cmp
sub
mov
das
sar
mov
or
sub
adc
je
add
lock
cmp
lcall
gs
mov
int3
sbb
xchg
je
cmp
and
rcrl
mov
adc
repnz
sub
loopne
cmp
scas
shl
std
test
enter
inc
dec
xchg
cmp
popf
nop
test
add
cmp
cmpsl
inc
pop
mov
popa
cmp
fistl
and
daa
bound
lds
pop
cmpsl
or
subl
orb
mov
xchg
call
int
popf
add
hlt
imull
lods
mov
movsl
fwait
cmp
pop
gs
adc
cmpsb
mov
mov
lahf
sbb
cs
mov
test
jb
xor
sbb
test
scas
rcll
clc
mov
rol
dec
stc
int3
cli
cmp
cld
mov
push
aas
jge
sbb
inc
xor
outsl
xlat
dec
mov
mov
insl
jp
aam
pop
cmp
inc
sbb
pop
out
jno
cmp
insl
cmp
cmpsb
sbb
add
mov
xor
inc
ds
inc
sbb
rorb
jg
jnp
loop
lods
cmp
and
lret
push
sub
dec
cmpsl
mov
daa
sahf
and
imul
arpl
inc
fwait
jl
notb
lret
push
jbe
mov
std
ret
cmpsb
sarb
mov
and
mov
adc
stos
mov
js
pop
cmp
push
add
push
lea
dec
mov
cmp
xorb
lods
adc
or
inc
push
push
xchg
out
lret
cmp
jno
xor
rclb
xor
dec
pop
cmp
and
and
pop
incl
pop
pop
cmp
pop
and
cmp
movsl
adc
cmp
jp
ret
cmp
mov
mov
cmp
leave
mov
add
sub
adcl
sub
js
and
add
jns
lods
jle
mov
add
les
lods
jmp
out
ret
pop
mov
cmp
test
imul
out
mov
adc
push
popaw
cmp
sti
pop
mov
mov
fnstenv
cwtl
cmp
imulb
cmp
pop
add
and
rclb
cmp
aaa
pop
sub
in
es
mov
gs
cmp
and
dec
mov
dec
pusha
cmp
movb
push
push
sti
gs
push
jmp
xor
ja
lea
sarb
enter
jo
adc
test
test
sub
fld
push
mov
sbb
insl
pop
sub
pusha
sub
mov
sarb
push
fmul
popa
or
cmp
jae
sbb
cli
adc
cmp
mov
cmp
out
clc
loope
xchg
xchg
or
mov
xor
adc
jg
push
fstpt
mov
pop
cmp
push
xchg
ret
cmp
scas
insl
adc
dec
out
lods
stos
push
ret
push
xchg
mov
lock
in
or
inc
dec
mov
cs
lret
cmc
sti
lea
lods
pop
mov
aad
daa
pop
out
aam
ja
cmp
add
xchg
cmp
in
loopne
mov
movsl
scas
cmp
pop
inc
pop
cmp
cmpsl
add
movsl
out
mov
clc
in
lcall
xchg
movsb
inc
int3
mov
clc
or
pop
lods
or
jne
xor
mov
push
insl
sub
sub
push
loopne
pop
fbstp
lods
loop
popf
xchg
sub
pop
fxch
xor
cld
jmp
outsb
or
cmp
mov
ja
dec
cmp
fwait
or
xchg
push
fsubrl
adc
lock
sub
roll
mov
clc
in
stos
pop
in
fmul
mov
nop
push
sbb
aam
les
inc
mov
fwait
cwtl
push
pop
xchg
sbb
jge
cmp
in
ja
imul
fs
sbbl
mov
push
je
leave
cmp
mov
jle
out
mov
xlat
and
pop
sbb
adc
ds
sbb
mov
shrb
mov
adc
sub
xor
push
sub
or
jecxz
fstp
mov
iret
jae
in
mov
scas
cmp
aas
adc
and
xchg
pushw
pop
sbb
mov
adc
imul
sbb
adc
cmp
xchg
sbb
xor
loop
ja
xchg
aas
dec
adc
push
int3
jmp
enter
stc
test
push
push
jne
jbe
mov
push
mov
arpl
fnstsw
mov
inc
mov
push
jns
mov
mov
ds
fnstsw
xor
jl
arpl
cmp
enter
iret
jnp
and
cmp
or
cmp
mov
loop
jge
cmp
imul
sbb
popa
lods
cmc
jo
mov
cmp
pop
cmp
mov
stc
sub
pop
scas
imul
inc
mull
cmp
push
leave
mov
mov
addr16
hlt
sbb
mov
xchg
inc
sbb
jge
xor
jne
ja
add
cmp
xor
pop
xor
dec
xor
lds
lock
sahf
outsb
jae
jl
push
ljmp
xchg
fisttpl
rcrb
pushf
xchg
mov
ja
xchg
mov
mov
mov
pop
scas
adc
lcall
inc
divl
push
out
xchg
cmp
bound
fmull
push
loop
lods
lret
push
pop
out
add
test
xor
pop
imul
and
lret
xor
add
ret
cwtl
inc
and
pop
ljmp
push
popf
dec
pop
mov
cwtl
jge
scas
out
xor
lret
add
fdivs
push
lods
sub
mov
push
test
jbe
mov
pop
mov
leave
int
adc
mov
xor
xchg
adc
aam
ficomps
sub
mov
fidivs
test
xchg
call
aaa
dec
pop
lret
and
xchg
dec
mov
push
in
mov
xlat
push
ds
xchg
add
sbb
xor
xor
outsb
test
push
add
sbb
das
hlt
iret
jge
in
mov
cli
adc
pop
and
cmc
mov
lahf
pop
test
mov
push
ja
imul
push
adc
dec
mov
mov
int3
xor
and
mov
fistl
cld
nop
ret
loope
push
xlat
pushf
nop
and
mov
mov
xchg
sub
adc
add
outsl
idivl
xor
and
pushf
aam
xor
sbb
ss
mov
jl
adc
pop
stos
mov
sti
shl
shlb
mov
xchg
into
and
mov
rorb
jmp
mov
cmp
jb
in
xor
lds
push
mov
cs
inc
ss
inc
inc
sbb
jge
adc
sbbl
mov
mov
rclb
test
leave
add
adc
or
rcll
jmp
push
cmp
inc
filds
out
fstps
push
lods
daa
in
inc
sbb
cmp
enter
rolb
xor
xchg
mov
mov
sub
sub
test
jecxz
mov
fsubl
mov
add
aad
or
cwtl
ja
dec
mov
or
dec
xchg
loope
test
fwait
roll
mov
jge
jl
mov
sub
stos
inc
xchg
push
dec
sahf
into
fidivl
roll
sahf
xor
pusha
and
ffreep
sahf
fs
add
in
call
jmp
into
xor
mov
cmc
adc
enter
sub
jo
and
int3
adc
nop
jecxz
fstpl
in
cs
jb
aas
decl
sbb
in
push
dec
adc
adc
mov
or
mov
test
xchg
adc
adc
sub
or
push
cmp
adcl
hlt
sbb
ds
adc
mov
push
ljmp
mov
lahf
or
sub
mov
push
sub
fmull
fmulp
js
dec
insb
adcb
jno
sub
out
inc
adc
or
inc
jl
xor
xor
cld
xchg
add
shll
bound
xchg
dec
jge
mov
mov
dec
pop
adc
pusha
ja
xchg
clc
xchg
stc
imull
js
bound
sbb
daa
add
dec
cs
jle
mov
inc
jno
push
inc
test
dec
fcmovnb
daa
xor
lods
ret
hlt
subb
xchg
sbb
out
adc
pop
into
loopne
add
inc
ss
sbb
lods
adc
xlat
cmp
xor
inc
sbb
mov
sub
mov
adc
pop
adc
ds
js
sub
dec
loope
imul
xor
insb
mov
xchg
pop
loope
push
imulb
ror
push
in
enter
pop
scas
ds
fldl
push
lds
cmpl
lock
jecxz
xchg
pop
sbb
xchg
sub
mov
enter
mov
sarl
sbb
and
rorl
das
addr16
cmp
fsubrl
push
push
sub
mov
sub
in
repz
fdivs
cs
lock
mov
enter
dec
mov
addr16
xchg
pop
cmp
out
enter
out
pushl
jbe
in
push
jle
aam
cli
sbb
cltd
dec
jle
sub
cmp
mov
jg
and
dec
xchg
sbb
sub
xchg
pop
cs
push
pop
stos
shrb
push
jge
lret
stos
aad
pusha
push
add
out
push
imul
jl
mov
mov
rcrl
in
adc
aas
pop
mov
jmp
mov
sbb
pop
inc
outsl
scas
cmpsl
xchg
push
wbinvd
and
xchg
sub
xchg
mov
sub
fnstcw
xchg
xrstors
and
inc
jge
lea
dec
lahf
cmp
xchg
lods
jecxz
pushf
in
or
in
dec
mull
clc
dec
mov
sbb
outsb
jp
xor
jno
add
sub
xor
dec
cs
adc
dec
jl
ja
dec
cli
mov
lcall
push
pop
mov
xor
jo
popa
ds
add
cmpl
cmp
lahf
scas
pop
into
outsl
outsb
mov
push
push
cwtl
pop
and
jno
sub
notb
test
dec
pop
pop
jmp
ds
push
jmp
inc
cwtl
cmp
es
movups
add
iret
jne
out
sub
jo
cmp
shrb
fidivl
push
mov
imulb
sti
cmc
addl
inc
rcl
roll
lods
xchg
andl
cmp
xor
and
mov
mul
push
jmp
ret
lods
lock
loope
clc
jmp
and
pop
xchg
sub
leave
push
mov
sub
mov
mov
or
adc
adc
xor
xor
pop
sahf
add
enter
cmc
mov
std
lcall
xor
js
mov
xchg
outsb
jnp
or
adc
dec
inc
push
dec
pop
push
inc
and
mov
mov
out
out
mov
int
lret
ss
popa
cmpsl
das
negl
mov
cwtl
and
mov
out
les
pushf
mov
pop
jb
clc
aas
jmp
or
in
jns
rorl
movsb
inc
jp
sub
loopne
lock
mov
daa
push
fwait
xor
in
ret
sbb
loop
jge
push
jg
ds
js
push
mov
loope
daa
bound
int3
or
inc
cmc
aas
shl
mov
jns
jle
daa
insb
test
pushf
imul
inc
int
xor
mov
inc
jecxz
xor
add
inc
mov
or
add
cmpsl
imul
jmp
add
and
popa
push
cmp
adc
scas
addb
inc
mov
jmp
push
mov
adc
mov
xor
inc
push
xor
xchg
mov
inc
fistpll
sbb
imul
pop
jae
mov
fucomp
mov
fldpi
pop
int3
adc
cmp
das
out
out
mov
xchg
stc
mov
shrb
test
pop
adcl
jae
push
subb
mov
mov
xchg
je
mov
pusha
int
jle
jmp
xor
or
fcoml
mov
fisttps
adc
mov
and
dec
incl
in
push
jbe
push
xor
adc
xchg
sbb
sbb
or
and
into
lret
mov
bswap
push
jl
mov
mov
stos
in
insb
adc
mov
add
xorl
test
mov
cld
mov
fistl
jp
rol
mov
inc
cmp
mov
mov
adcb
jne
lods
in
cmc
push
cld
aas
mov
mov
scas
stos
add
out
mov
fistpl
xor
sarb
lahf
scas
out
nop
sub
aam
shlb
das
xchg
cmp
push
daa
jp
pushf
test
mov
pop
pop
sub
pop
xchg
lods
fstpt
into
aaa
adc
mov
or
add
mov
lods
outsb
gs
leave
das
add
jg
jmp
xor
loope
mov
mov
subl
push
mov
or
adc
ja
sub
jmp
sub
enter
sub
mov
leave
test
scas
loop
mov
icebp
xor
out
pusha
test
imul
mov
sub
daa
ds
out
sbb
push
mov
les
jnp
out
pop
jl
scas
sub
dec
xchg
dec
rclw
test
sarb
icebp
add
das
jle
or
sahf
outsb
lret
rol
sub
fcmovnu
xchg
aaa
push
adc
shll
xor
stos
movsl
xchg
clc
sbb
xchg
testb
test
flds
fdivp
sub
repz
fdivrl
repnz
push
hlt
shll
out
lock
das
mov
mov
and
sub
pop
jne
mov
ss
mov
xchg
mov
adc
adc
mov
pop
test
push
adc
fs
pop
jg
scas
lret
jns
shlb
pusha
inc
lea
mov
or
and
xchg
cmp
dec
sbbl
mov
out
fs
mov
pop
xchg
jle
lds
jg
jge
dec
adc
jg
inc
and
xor
sub
cmp
les
fs
jp
pop
roll
sbb
xchg
ss
rorb
push
mov
xor
in
add
insb
sahf
enter
inc
mov
add
movsl
xchg
xor
mov
pop
and
out
xor
enter
test
push
ret
call
jno
int3
lock
out
and
js
xor
ja
adcl
inc
or
adc
pop
jmp
mov
in
lahf
cmp
stos
adc
je
inc
inc
and
xchg
adc
shl
xchg
jbe
xor
mov
pushf
push
ss
adc
jno
cmp
clc
xor
jnp
int3
sub
adc
mov
jmp
popa
cmpsl
sbb
mov
xchg
sti
repz
ret
nop
jecxz
bound
test
dec
outsl
roll
xchg
cmpsb
cmp
frstpm(287
xor
dec
ss
divl
xlat
inc
or
jne
insb
leave
and
nop
mov
push
in
lahf
cmp
mov
lret
pop
inc
xor
or
dec
mul
das
mov
insl
pushf
sub
lahf
out
jns
sub
dec
mov
repz
adc
stos
insb
mov
sahf
stos
je
adc
cld
mov
lea
je
push
xchg
imul
add
negb
sub
idivb
sub
mov
ja
and
clc
fs
jmp
test
in
cmp
mov
aam
push
sarb
fsubrp
mov
jmp
das
adc
rolb
cmp
in
cmp
adc
sti
imul
lods
xchg
jae
and
adc
cld
cld
loope
loop
cltd
cmp
cwtl
ljmp
into
test
fstpt
mov
mov
mov
mov
and
push
data16
dec
ja
push
or
notb
data16
arpl
clc
addb
andl
xchg
inc
ja
ja
jmp
adc
jo
xor
out
jmp
ja
dec
push
xchg
sbb
dec
pop
sub
fists
fnsave
jmp
dec
test
scas
inc
ret
mov
dec
lods
xor
outsb
js
jmp
jecxz
cmp
scas
xlat
add
loopne
dec
ret
mov
fdivp
gs
lods
dec
or
aas
scas
in
outsb
pop
push
or
xchg
aam
mov
mov
outsl
push
loope
mov
rclb
pop
lret
cmp
dec
adc
into
adc
ss
insb
jbe
cmp
fs
xor
arpl
push
mov
popf
mov
shl
mov
pop
insb
mov
out
mov
popa
test
push
mov
popf
loope
mov
std
in
add
mov
inc
sbb
fsubs
test
sub
mov
mov
sub
pop
fstps
xor
jge
sahf
js
xor
lea
lcall
out
jbe
mov
mov
adc
test
je
leave
data16
out
lds
mov
cmp
scas
xchg
xor
adc
movsb
mov
ja
outsb
xor
adc
fcmovnu
jl
or
nop
dec
mov
xchg
daa
fidivl
out
in
enter
push
loop
mov
test
jo
jmp
cwtl
mov
cmpsb
push
inc
add
pop
mov
dec
nop
aas
mov
fldcw
jbe
or
mov
subl
xor
and
dec
rcrb
sub
push
cmp
lods
sub
andl
add
sbb
xor
punpckhbw
mov
cmp
jp
daa
hlt
sub
cld
scas
xchg
jl
ret
pop
jno
test
push
std
mul
mov
jmp
mov
sub
add
mov
sbb
mov
dec
xchg
cli
das
cmp
imul
imul
into
mov
and
aaa
inc
jge
insb
dec
pop
js
scas
mov
adc
int3
jp
adc
xor
mov
sbb
repz
ss
sti
jl
xor
mov
xchg
dec
push
mov
fidivrl
mov
xor
xchg
jmp
mov
das
sub
mov
mov
add
pop
cmp
mov
outsb
adc
mov
and
stos
in
gs
push
jns
in
lods
dec
or
lods
fldcw
inc
fidivl
push
mov
mov
add
in
pop
sub
or
lods
pop
push
sbb
stc
mov
mov
xor
lret
mov
mov
in
mov
xchg
xchg
outsb
or
jecxz
sub
push
sub
add
jmp
into
push
mov
repnz
dec
mov
jmp
popa
pop
push
push
mov
dec
out
je
jmp
mov
in
jbe
gs
insl
sub
xor
orl
ret
test
or
dec
ss
jo
les
adc
std
xor
push
rolb
aam
mov
cli
lcall
ret
xchg
cmp
jp
cs
mov
pop
mov
push
push
mov
mov
movsl
test
data16
add
stos
in
mov
mov
cmpsl
jmp
or
mov
push
add
outsl
push
mov
adc
ss
shrb
in
jle
xor
mov
stos
and
movsb
test
lea
clc
cmp
test
mov
xchg
icebp
cmpsb
adc
dec
mov
fld
clc
orb
push
mov
call
scas
call
jmp
ret
lods
add
push
mov
enter
loop
push
pop
imul
adc
insl
sub
push
jl
mov
adc
inc
jp
insb
push
lahf
cli
loop
out
jae
sub
sbbl
outsb
xor
xor
hlt
adc
or
test
mov
mov
insb
inc
aaa
lea
sbb
dec
lret
jle
and
ja
xchg
ss
sub
jo
mov
sbb
imul
push
cmp
mov
xchg
jmp
gs
adc
adc
inc
mov
mov
testw
adc
and
jmp
mov
adc
xor
rorl
xchg
push
std
test
out
adc
cmc
jo
pop
out
movsb
lret
inc
adc
adc
or
mov
inc
aas
into
cmc
lods
mov
dec
std
mov
mov
mov
adc
lret
mov
into
pushf
dec
out
mov
icebp
stc
sub
outsb
jbe
dec
sbb
cld
push
mov
or
ljmp
ret
dec
test
add
sub
fst
stos
aad
xor
add
xchg
ss
adc
mov
mov
mov
stos
in
xchg
adc
icebp
add
mov
mov
repz
cmp
insl
mov
pushf
add
insb
jmp
push
adc
sarl
test
and
repnz
stos
fsubrp
push
fs
inc
dec
and
cmp
push
adc
mov
pop
lods
enter
cmpb
add
adc
or
cmpsl
xor
and
pop
cmpsb
jmp
into
add
push
cmp
mov
sub
out
xchg
dec
xor
jmp
loope
jl
add
sub
sbb
pop
mov
adc
fldenv
dec
pop
add
push
mov
jbe
je
add
lret
add
subl
jnp
inc
cmp
inc
insb
stos
pop
jmp
outsl
je
ret
insb
pop
mov
inc
sub
mov
test
cmpsb
pushf
dec
jo
outsb
or
mov
push
push
scas
xchg
pop
xchg
sub
std
inc
fimuls
pop
iret
and
push
mov
xchg
std
adc
loopne
aas
jmp
jmp
push
test
inc
adc
cmc
add
dec
dec
mov
add
pop
inc
adc
movsb
adc
push
mov
sbb
xchg
mov
jp
cmc
adc
fs
mov
inc
adc
push
sbb
sub
or
out
test
jle
std
xor
dec
xchg
faddl
sbb
sub
lock
rclb
inc
sahf
outsl
sub
jb
call
ljmp
and
cmp
jno
insb
xor
out
jg
je
xchg
pop
mov
sub
fidivs
sbb
out
jmp
addr16
nop
ret
sub
pop
xchg
mov
sbb
shl
aaa
out
imul
mov
pop
addl
ret
test
or
aas
imul
mov
push
aam
scas
pop
or
fnstcw
test
xchg
inc
enter
push
insl
jno
xor
popf
cmp
loop
sti
xor
shrl
enter
xchg
lret
out
ds
push
dec
insb
sub
xlat
jle
mov
dec
or
jge
insb
rorb
adc
xchg
jbe
jg
fstpt
lods
aaa
out
inc
jl
pop
mov
outsl
pop
ja
pop
sbb
sarb
orb
dec
xor
mov
adc
xor
jnp
and
add
imul
mov
xchg
mov
sbbb
mov
push
frstor
xchg
out
dec
add
outsb
fcom
pop
push
outsb
push
or
mov
nop
push
mov
mov
out
cmp
adc
sub
popf
popf
in
call
and
in
push
mov
je
mov
clc
adc
mov
push
xchg
ss
push
es
in
push
cmpb
mov
cmp
je
mov
fcmovu
xchg
xchg
inc
cmpsl
jo
test
sub
and
ja
push
sub
pop
adc
pop
pop
or
subl
cmp
push
and
push
mov
sahf
cmc
push
cmp
xchg
int3
or
adc
jae
clc
jp
jp
clc
inc
mov
sub
mov
test
push
mov
repnz
mov
ficoms
imul
shll
mov
clc
mov
repz
mov
in
xor
jl
std
fwait
push
lcall
add
and
push
jmp
add
sub
lds
fwait
inc
cmp
popf
xor
push
lret
dec
push
mov
xchg
fwait
mov
movsb
test
xlat
sub
int3
push
aas
aam
dec
fidivs
mov
dec
ret
in
std
repnz
push
fisubrl
int
inc
in
out
mov
insb
pusha
mov
mov
mov
out
cs
mov
cmp
mov
dec
pushl
xchg
test
in
and
mov
xchg
ljmp
sti
insb
xchg
cmp
jge
out
ss
out
add
pop
scas
sub
push
dec
test
stc
adc
jg
pop
addl
lods
ljmp
testl
data16
adc
push
cmpl
sbb
aad
ret
cmp
adc
dec
js
je
sub
mov
or
add
sbb
fnstenv
xor
ja
or
out
ja
aas
popa
das
pop
dec
jecxz
stc
out
pop
lcall
sub
cmp
gs
inc
pop
jns
das
inc
dec
mov
jmp
lcall
pop
or
mov
xchg
adc
addr16
mov
sarb
arpl
push
shlb
add
lcall
and
int
popa
cli
sub
lock
mov
dec
test
lea
js
jge
cmp
je
loop
pop
pushf
mov
loop
das
adc
hlt
or
lret
dec
xchg
inc
ret
imul
movsb
dec
push
jne
jno
out
ficoms
push
loopne
pop
ljmp
xchg
aas
mov
loop
popa
loopne
xor
ret
mov
ja
les
loopne
int
adc
arpl
mov
or
push
mov
sahf
adc
aaa
loope
ljmp
in
in
xor
jo
mov
mov
xchg
dec
in
insl
popa
push
cmc
lods
xor
cltd
sub
test
push
add
aam
icebp
out
push
into
mov
xor
xchg
sbb
jp
mov
ja
pop
pushf
add
cmp
mov
mov
xor
xchg
bound
imul
jg
pop
aaa
les
adc
cmp
or
es
push
jb
adc
shlb
adc
cmp
push
lods
push
lret
movsl
vpackuswb
push
cmp
mov
sub
jnp
jae
jmp
mov
int3
jo
in
cmp
jbe
pop
push
mov
pop
xchg
scas
sarb
je
pop
call
in
inc
inc
cmp
jg
lret
lods
mov
pop
push
mov
lds
das
mov
xchg
jnp
cmpl
daa
repnz
out
cmpsb
cs
lea
adc
test
mov
mov
xor
aas
push
int3
adc
fs
or
insl
repz
adc
cmp
inc
cmp
ds
repz
sub
dec
push
mov
outsl
lahf
pop
lods
test
fimull
int
xchg
popa
in
scas
mov
xor
cmp
jbe
pushf
cmp
aam
sub
xchg
pop
lds
mov
cs
xor
push
sti
dec
cmp
mov
cmp
mov
cmp
lret
sti
push
jbe
cltd
push
data16
enter
arpl
pop
cmp
xor
jp
cmp
ret
push
and
pusha
das
repnz
add
xlat
push
mov
out
inc
cmp
mov
xor
int
pop
dec
movsl
and
lods
lods
add
cmp
xor
cltd
inc
test
daa
cmp
das
sti
shlb
mov
movsb
mov
cmp
mov
sbb
mov
sti
mov
fnstcw
push
push
insl
scas
js
xor
cmp
adc
push
lea
jb
mov
mov
popa
sub
push
out
cmp
jp
sbb
mov
cmp
push
add
push
push
pop
or
cmp
outsl
cmp
inc
mov
add
cltd
adc
loopne
test
and
daa
xchg
negl
popa
push
xor
pop
rorl
or
cs
in
mov
adc
mov
outsl
roll
fdivl
dec
jns
cmp
fidivrs
add
xchg
dec
adc
push
sub
sbb
test
jge
mov
cmc
imul
ficoms
outsb
repz
daa
or
push
test
and
or
sbb
int
mov
insb
mov
cld
jno
adc
cs
lcall
pusha
aad
mov
xor
pop
cmp
push
ss
pop
mov
lea
loop
jns
lret
aam
mov
loopne
mov
scas
icebp
inc
push
cmp
xor
jl
bound
into
fildll
outsl
sbb
mov
loop
jmp
cmp
lods
mov
test
cmp
loop
xor
xor
lods
mov
jl
inc
or
cmp
sbb
ja
adc
in
lods
repnz
sbb
cmp
dec
fisubl
es
je
xor
mov
sub
jb
insb
push
add
jl
push
into
cmp
repnz
jmp
xor
cli
mov
mov
inc
lods
les
cmp
cli
push
add
lods
mov
pop
jg
pop
imul
push
fisubrs
int3
fwait
hlt
xor
cmp
insb
xchg
iret
cmp
xor
push
testb
nop
jmp
fld
adc
cmp
icebp
mov
cmp
add
dec
loop
sub
stc
aad
subl
jecxz
xchg
icebp
adc
jmp
push
aas
dec
ljmp
add
jns
and
or
fbld
pop
sbb
ret
ss
xor
adc
imul
mov
jnp
lret
cmp
aas
cmp
jns
cmp
std
push
jl
inc
adc
jge
int3
fwait
cwtl
insb
jp
loopne
sbb
in
mov
js
jne
jno,pn
push
leave
fiadds
testl
adc
and
popf
cmp
shlb
cmp
aad
or
mov
push
push
mov
enter
es
fidivs
mov
mov
pop
or
mov
xor
shll
sub
adc
sbb
cltd
cmp
push
push
inc
xor
xor
cmp
out
jg,pn
dec
je
push
in
sub
rcrb
inc
fs
lods
icebp
sarl
xor
fisubrl
shrb
incb
data16
sub
mov
adc
cmp
in
jecxz
adc
mov
sti
shll
push
out
icebp
cmp
lret
fdivl
or
jns
xor
aas
negb
out
jp
sub
ljmp
daa
dec
clc
jnp
pop
in
das
xor
stc
fldenv
stos
lods
dec
mulb
sarb
pushf
inc
sub
pop
fcomip
jnp
push
add
aaa
pop
cmp
cs
mov
push
out
ret
out
jle
popa
loop
icebp
je
xchg
stos
cmp
xchg
lods
in
and
jno
fmull
je
pop
cmp
stos
call
lock
rcl
push
and
sbb
cmp
xchg
pop
out
mov
xor
movsl
cmp
pop
insl
sbb
lret
ficoms
loope
mov
lea
das
mov
adc
cwtl
xlat
loopne
es
cmp
add
rol
cmp
loopne
cmp
dec
and
insl
or
pusha
sub
out
jge
xor
jno
stos
and
test
pop
inc
in
nop
cmp
adc
cmp
mov
xchg
shlb
cmp
and
fs
daa
xor
sub
cli
jne
lock
push
adc
cmp
mov
xor
mov
mov
shrl
xchg
fs
mov
inc
cmp
imul
orl
sub
add
pop
add
dec
or
jnp
in
in
ret
dec
fmuls
pop
cmp
je
xorb
cmpsb
lock
psrlq
lds
cmp
xor
call
add
ljmp
icebp
adc
or
push
sub
repnz
and
mov
push
fstps
cmp
push
jo
or
and
push
call
and
das
shll
outsb
and
dec
fcomi
dec
lcall
movsw
xchg
xlat
pop
hlt
mov
cmp
aaa
push
out
and
adc
clc
movsl
cmp
ss
fwait
cmp
mov
stos
push
mov
xchg
jo
or
sbb
pop
cmp
fsubp
shrb
pushf
push
dec
clc
cmp
and
cmp
cmc
scas
mov
sbb
out
sub
xor
test
cmp
and
sub
cmpb
jge
mov
hlt
imul
call
out
or
and
mov
cli
dec
dec
jmp
dec
sbb
and
cmp
clc
cs
test
mov
cmp
pop
cmpl
aas
sbbb
pop
xor
fists
aam
pop
sub
jns
cmp
add
pop
adc
mov
add
hlt
xlat
adc
cwtl
mov
test
popl
imul
adc
cmp
mov
aad
fnstcw
popf
and
sbb
xchg
xchg
cmp
dec
test
rolb
cmp
mov
jbe
or
loop
add
mov
lods
push
cmp
leave
fisttpll
cmp
xchg
mov
jns
sub
pusha
add
into
mov
leave
cmp
test
xor
jnp
cmp
dec
mov
leave
cli
cmp
cmp
aaa
out
arpl
add
xchg
imul
mov
cmp
sub
jl
push
mov
lcall
bound
xchg
les
fsts
adc
pushf
movsl
out
mov
cltd
push
out
or
inc
mov
into
cmp
dec
jae
add
jne
jnp
pop
push
fcmovnbe
adc
cmp
fs
mov
cmp
in
mov
test
mov
cli
rorb
loop
pop
xor
xchg
mov
out
mov
mov
mov
dec
popa
rdmsr
xchg
loop
aad
jl
push
jmp
sbb
icebp
hlt
xor
aad
cmp
push
cmpl
jnp
mov
cmp
push
in
popf
aas
das
cmp
push
js
cld
push
daa
aad
cmp
mov
jl
addl
inc
pop
cs
test
lods
dec
or
cmp
adc
pop
xchg
repz
jns
cmp
loopne
int
cmp
xor
imul
mov
inc
adc
adc
enter
pop
test
xor
cmp
divl
sub
sbb
popa
insl
sub
hlt
ljmp
xchg
sahf
movsl
push
or
in
ret
mov
xchg
mov
clc
push
dec
sbb
pop
sub
sub
das
inc
mov
mov
xchg
sub
or
wbinvd
scas
xor
mov
push
or
scas
mov
xchg
ja
cmp
fldt
mov
mov
outsl
adc
xchg
pop
rcrl
gs
call
cmp
ja
inc
adc
and
ja
nop
inc
sbb
xchg
inc
fwait
out
movsl
inc
pushf
lret
jecxz
inc
idivb
mov
and
mov
adc
push
mov
mov
pop
into
pop
int3
jg
lock
mov
inc
jp
aad
mov
jmp
sub
in
pusha
mov
rcll
sbb
jnp
sbb
cwtl
mov
mov
repz
and
lods
cmp
jg
fadds
in
pop
test
out
ret
pop
mov
xchg
and
sbb
xchg
push
dec
adc
push
mov
push
add
cmpsb
test
incb
mov
out
sbb
into
les
fisubs
sub
or
and
pop
inc
adc
test
pop
cmpl
mov
pop
fucom
daa
data16
adc
sub
push
or
mov
mov
jmp
cmp
sub
adc
inc
sub
mov
mov
push
cld
scas
or
xchg
sub
test
add
les
call
mov
adc
outsb
mov
sbb
jne
push
cmp
push
inc
add
mov
dec
movsl
ret
mov
mov
insb
mov
mov
push
jle
scas
sub
mov
mov
and
jbe
jmp
mov
sub
ret
adc
sub
sub
andb
hlt
add
mov
testl
icebp
add
inc
aam
pop
addl
out
and
mov
adc
jge
shrb
xchg
les
jae
mov
je
das
xchg
adc
dec
incb
sub
adc
pop
mov
dec
lret
push
pop
enter
cmp
sub
mov
stos
adc
or
mov
add
outsb
scas
in
les
add
add
xor
jno
jp
dec
jnp
jmp
push
jnp
adc
push
mov
adc
stc
xchg
imul
les
lret
push
icebp
mov
jae
pusha
adc
xchg
sub
push
cld
mov
cmp
cmp
add
xor
inc
int
sahf
jbe
aam
ret
loopne
mov
pop
mov
stos
out
and
xor
jle
fldl
mov
aaa
in
sbb
cld
inc
mov
and
out
mov
std
push
das
adc
mov
shr
or
insb
xor
ljmp
cmp
int
adc
and
aas
movsl
dec
out
test
cmpsl
jmp
shll
xchg
fstl
push
rcll
stc
psllw
cmp
mov
cmp
sub
cmp
mov
xchg
lret
in
jno
call
sbb
sbb
fldl
and
jle
out
insb
jno
dec
fnsave
xor
test
xor
mov
and
inc
fsts
adc
xchg
aaa
out
lahf
mov
sub
arpl
xchg
add
imul
orl
ficoml
sbb
popf
sbb
sti
push
neg
mov
daa
push
lcall
loop
into
lret
and
ret
and
jne
inc
lcall
sub
sbb
test
xchg
ljmp
sbb
push
stos
shll
jns
adc
lock
sub
stos
push
cmc
ret
ret
sbb
jnp
jne
sbb
out
mov
roll
cmpsl
sub
insb
sub
rcrb
movsl
int3
inc
inc
push
xchg
orb
mov
jge
lods
aaa
xchg
add
sub
ret
jecxz
ja
je
imul
leave
add
pop
and
cmpsl
and
testb
pop
les
ss
jne
mov
and
ljmp
xor
mov
lock
xor
xor
lods
and
mov
cmc
hlt
push
mov
mov
xchg
jno
xchg
aad
ss
test
lods
pop
xchg
xor
jl
adc
sub
add
scas
pusha
adc
idivl
mov
and
rcrl
lahf
shr
dec
inc
movsb
push
xchg
mov
loop
ret
fcoms
mov
mov
jge
mov
scas
jle
pusha
sub
sbb
sahf
adc
push
add
rolb
mov
repz
or
jns
into
nop
ss
mov
cld
xchg
and
or
adc
aam
and
movsl
push
sbbl
sub
or
sbb
push
daa
andb
in
lods
jbe
push
hlt
jbe
test
std
xchg
orb
sub
out
sbb
movsb
js
fstpl
scas
xchg
incb
add
loop
adc
mov
es
xchg
add
xor
outsl
in
shrl
cld
ss
add
fldl
xor
mov
sti
xor
adc
cs
aaa
insb
and
xlat
leave
std
sub
or
inc
out
bswap
in
icebp
and
mov
loopne
xchg
adc
jg
dec
pop
lods
lret
out
xchg
fcmovb
jge
ds
cmc
mov
xor
divl
jbe
fnstenv
inc
xchg
xor
pop
mov
mov
sub
cmc
stos
jmp
sahf
outsl
sbb
push
xlat
xor
jmp
outsl
mov
inc
cmp
aas
sub
sti
lods
pop
jmp
inc
adc
dec
mov
test
and
stos
les
lahf
in
inc
xor
cmc
xor
divb
cmp
mov
nop
add
push
ret
or
sbb
push
and
imul
xchg
pushf
insl
mov
call
in
aad
rorb
cs
subl
cmp
js
push
cmpps
lret
lock
xor
add
mov
in
inc
add
popf
lods
xchg
cwtl
xor
sbb
mov
jmp
andb
aaa
xor
popf
arpl
mov
lret
fildll
pop
inc
sti
cwtl
adc
adc
notl
cmp
cmc
push
scas
mov
push
jp
jno
jne
sub
mov
add
daa
xchg
repnz
adc
stc
mov
fsts
pop
sahf
in
xor
jle
loope
sub
fnstsw
sub
adc
leave
test
rorb
pop
das
repnz
sbb
addl
clc
adc
fcoml
adc
dec
aam
mov
int
mov
mov
inc
repz
xorl
lds
push
imul
out
les
cmp
xchg
mov
cmp
mov
repnz
xchg
test
cmp
dec
jg
pop
mov
repz
mov
nopl
adc
cmp
push
outsb
outsl
out
mov
adc
dec
pop
es
xor
mov
test
lret
or
ss
push
xchg
xchg
int3
jmp
hlt
adc
or
ss
js
cmp
xor
push
jle
jns
add
es
aas
adc
xchg
dec
xor
push
ret
stos
mov
mov
jne
sub
xchg
push
mov
jmp
push
mov
xchg
pop
aad
dec
xor
add
or
ret
out
sub
fistps
push
xchg
in
push
add
aad
xchg
popa
mov
mov
into
sahf
js
push
jnp
mov
cli
dec
stos
jle
cs
das
sbb
sub
ret
lods
lret
push
incb
mov
sub
mov
popf
out
jmp
jnp
enter
push
sub
jmp
call
push
pop
mov
roll
xor
jmp
lock
mov
in
hlt
enter
push
xchg
dec
cmp
test
xchg
sbb
mov
and
mov
jmp
in
out
movsl
ja
sbb
mov
movsb
xchg
jae
adc
pop
pop
xlat
jle
xor
pop
out
or
dec
or
aaa
push
jle
and
sub
ret
and
lods
stos
ret
pop
adc
je
mov
lret
fwait
mov
enter
pop
das
push
insl
test
adc
mov
scas
pushf
sarl
mov
int
insb
push
jae
pop
mov
add
mov
pop
pop
push
mov
inc
sbb
xchg
adc
jg
testl
ds
scas
ds
push
lea
jbe
movsb
push
loope
leave
shl
fsts
jo
pop
sub
cmpsb
fidivrl
out
add
sub
addl
pop
imul
negb
xchg
inc
cld
sbb
jge
sub
xchg
in
push
or
je
mov
push
loop
out
test
jl
shll
dec
test
inc
mov
and
aad
xchg
loope
into
test
mov
mov
outsb
outsl
int3
test
adc
test
int
aad
mov
pop
fs
out
add
xorl
ds
jl
outsl
test
inc
sbb
or
out
xor
les
fidivl
sub
in
in
xor
push
mov
pop
je
cli
jnp
push
and
fld
pop
cmpsb
cmp
add
dec
js
add
ret
sub
mov
data16
cmc
shll
mov
js
sbb
push
cwtl
cmpsb
test
fistps
lods
fwait
mov
xor
stc
hlt
das
mov
aaa
ljmp
mov
ja
xorb
sbb
mov
adc
aas
testl
jnp
sub
fcoml
in
xchg
hlt
mov
inc
aad
jle
shrl
fdivrl
adc
jmp
jmp
sub
xchg
testb
cmp
or
lock
int3
aas
sbb
shl
mov
sub
jg
and
pop
jo
aad
call
outsb
ljmp
pop
xor
lahf
popf
push
bound
jmp
xchg
lods
enter
cmpb
sbb
push
idivl
and
in
jmp
pop
add
pop
cmp
fwait
das
mov
dec
es
adc
js
rorb
fbld
mov
imul
adc
fidivs
add
xchg
stc
cli
sbb
sbb
sub
push
mov
fsubrp
xorb
jo
enter
addr16
mov
adc
ficoml
pop
inc
mov
fs
mov
fsts
mov
add
stos
sarb
mov
add
inc
call
pop
and
jne
inc
mov
push
jp
push
outsl
dec
cmp
xchg
push
add
add
mov
mov
pop
out
fsts
mov
repz
adc
sub
mov
xor
movsb
push
xor
leave
popa
xchg
push
pop
and
lock
insl
sbb
cld
daa
cmc
in
pop
mov
dec
ret
adc
inc
dec
sbb
in
subl
cmpsb
test
das
xor
push
lods
adc
mov
shrl
or
ljmp
das
adc
lret
mov
mov
jmp
pop
lods
fs
adc
jmp
in
mov
loopne
mov
sub
and
cmc
int3
loope
in
mov
adc
mov
sbb
jle
push
jne
lods
dec
shrl
daa
dec
xchg
lods
or
sbb
fldcw
pop
fdivrl
movsl
pop
mov
mov
std
xor
mov
orb
jecxz
mov
jle
out
pop
fisubrs
ret
dec
dec
outsl
cmp
xchg
or
add
or
leave
mov
jle
inc
add
rolb
outsl
xchg
xorl
mov
mov
call
nop
xchg
sbb
sub
jmp
movsb
jmp
out
sahf
faddl
das
call
push
repz
add
or
xchg
loopne
push
mov
test
jl
jle
push
addb
jns
es
pushf
push
ret
jno
scas
adc
repnz
push
cmpsl
inc
sahf
pushf
arpl
adc
jle
jne
addr16
es
test
xchg
push
inc
push
mov
imul
jecxz
loopne
jge
call
sub
pusha
xor
mov
aas
pop
aas
sub
mov
loope
mov
jo
enter
mov
pusha
jae
jl
pop
add
mov
mov
pop
xchg
movsl
or
push
movsl
arpl
xchg
int3
enter
in
xor
std
inc
adc
adc
jecxz
insb
jle
jmp
add
jp
mov
mov
fmull
push
xor
je
pop
mov
xchg
fnstcw
lea
bound
adcl
ja
rol
insl
mov
cmpsb
add
ret
mov
mov
nop
push
push
insb
jp
rorb
or
add
mov
adc
xchg
call
push
nop
int3
xchg
iret
in
ss
pop
ss
nop
sti
sti
rclb
fcoms
movsl
xor
xchg
push
lock
pop
jmp
stos
mov
idivb
ss
add
push
pop
out
gs
mov
scas
cmp
fnstsw
push
mov
push
dec
outsl
mov
dec
push
add
adc
and
insb
fs
hlt
xchg
lret
shll
imul
lock
out
push
jo
xor
cld
cld
rcr
adc
addl
jbe
daa
dec
mov
sbb
jbe
sbb
sub
test
or
cmp
lret
pop
test
add
mov
cmpb
lods
xchg
xor
scas
shl
mov
jl
pop
mov
push
jle
int3
insl
cmovo
and
xor
ret
add
mov
push
ret
push
ds
xorl
cmp
out
inc
ljmp
pop
push
adc
jmp
and
ljmp
jge
mov
dec
pop
xor
mov
xchg
lret
add
test
insl
adc
leave
int3
addb
movsl
cmp
xor
in
adc
scas
aaa
mov
fs
fiaddl
adc
fs
xchg
in
inc
movsb
iret
ficomps
jo
insl
movsb
insb
cmp
icebp
addr16
movsl
jne
pop
adc
ja
jle
sarb
adc
mov
imul
jbe
aad
lret
sbb
jns
push
sbb
inc
adc
cmp
add
push
xchg
mov
adc
pop
das
or
cs
call
mov
test
cmp
adc
int
loope
sarl
sub
ss
xchg
lea
out
mov
push
add
mov
adc
gs
dec
push
xchg
xor
jno
lock
push
sub
adc
push
sbb
mov
or
adc
adc
testl
sub
fwait
pop
adc
ljmp
int
xorb
shlb
mov
dec
pop
mov
xor
sbb
push
test
jno
ds
sub
ret
int3
push
mov
and
fwait
cmp
push
mov
push
jl
sub
mov
jae
add
das
mov
jno
lea
push
aaa
leave
stc
je
inc
sbb
jno
xorb
jl
shll
mov
inc
dec
mov
aaa
in
fsubr
mov
add
out
jnp
aaa
movsb
mov
ds
rclb
jne
testb
fbstp
mov
sub
aaa
xor
je
adc
sub
lret
aam
and
xlat
mov
lock
mov
outsb
in
push
js
pop
jle
jge
dec
xchg
in
mov
daa
mov
adc
jo
lret
or
lods
cmpsl
push
fptan
sbbb
add
popf
cli
addr16
xor
adc
lcall
mov
add
push
stc
push
ret
xor
aad
ret
sahf
xchg
pop
xor
dec
push
cmp
adc
icebp
or
push
jno
nop
test
fisttps
and
mov
push
add
xchg
mov
pusha
popf
push
inc
adc
cmp
shlb
cmpsl
add
jmp
pop
push
mov
and
adc
push
sub
ja
imulb
faddl
fdivrl
xchg
xchg
sub
dec
adc
pop
rcll
out
jnp
adc
add
mov
add
daa
jne
dec
mov
jbe
inc
and
dec
aaa
fcoml
adcb
xor
jle
sbb
push
cmpsb
or
and
xchg
adc
je
negl
lods
or
cmc
or
cmp
movsb
mov
mov
xor
mov
jl
mov
sar
jmp
test
leave
mov
jmp
cmp
sub
aaa
adc
mov
xlat
je
xchg
cmovne
stos
mov
aaa
pop
inc
pop
pop
fidivs
insl
rcrb
cmc
mov
pop
call
sbb
ja
dec
push
xchg
fstl
mov
pusha
cmp
inc
lock
ljmp
cwtl
das
mov
push
dec
sub
std
insl
sbb
push
pop
and
xchg
pop
js
jge
add
or
rcll
loop
mov
test
cmp
mov
cli
mov
xor
mov
rcr
es
jno
xchg
push
add
mov
pop
push
jb
cmp
xor
les
xchg
pop
or
xchg
sbb
js
fcmovne
repnz
inc
loopne
xchg
inc
mov
ret
mov
or
pop
shrl
jno
int
out
xor
cmc
loop
pop
xchg
and
jno
or
xchg
xor
lret
lock
pop
rolb
cmp
enter
lods
jge
jmp
imul
mov
xchg
sub
std
inc
push
and
sbb
push
fiaddl
mov
pop
jnp
sbb
int
adc
pop
aas
out
push
cld
mov
test
es
out
sarl
and
enter
xchg
xor
aas
ljmp
adc
andb
pop
data16
dec
repz
sub
imul
movsb
xchg
mov
adc
sbb
mov
jl
ja
ss
and
dec
test
xlat
sarl
add
xor
add
or
dec
jecxz
imul
cmp
mov
pop
lods
sub
daa
mov
jp
adc
adcb
loopne
adc
pop
cmpsl
adc
dec
lock
sub
mov
pop
adcb
loop
hlt
cmp
mov
in
pop
fistl
les
sbb
push
fisttpl
mov
sub
sbb
daa
les
jmp
fldt
inc
xchg
push
jne
fildll
add
das
shll
push
cmp
mov
outsl
in
mov
stc
in
icebp
outsb
scas
orb
das
test
inc
in
lret
and
push
push
lea
jge
mov
pxor
repz
fldt
test
mov
xchg
xor
outsl
ret
mov
sub
dec
mov
pop
hlt
mov
repnz
push
pop
push
push
push
rolb
xor
mov
loope
jo
pop
sbbl
pusha
test
adc
push
sbb
insb
gs
punpckhdq
xor
cmp
xchg
sbb
pop
dec
call
rorb
mov
lods
out
mov
inc
sbb
xchg
sub
jae
fstpl
andb
sarl
fnstsw
dec
jp
or
xorb
insl
xor
pop
data16
xor
xorb
push
enter
idivl
sbb
mov
sub
ss
imul
xor
push
sub
adc
cmpsl
ror
jp
outsb
mov
imul
je
cmp
push
fistl
push
inc
and
adc
test
cli
mov
sbb
push
add
pop
lds
mov
cwtl
jno
xrelease
out
es
sbb
mov
adc
push
pushf
cs
cmpsb
xor
ret
shl
cmpsb
frstor
cmp
cmp
and
adc
pusha
and
mov
imul
adc
out
xchg
mov
push
pop
mov
test
mov
dec
jmp
jl
jl
mov
cmc
outsl
ror
nop
jbe
lahf
adc
xor
lret
pop
xchg
add
cli
cmc
add
shlb
in
sbb
iret
mov
int
data16
ucomiss
cmp
sub
sbb
repnz
mov
jge
clc
inc
cmp
pop
call
fldcw
les
fwait
cwtl
xor
adc
xchg
fdivl
lock
jmp
adc
sub
push
adc
sbb
rcll
aas
adc
pop
hlt
mov
mov
test
and
mov
mov
xchg
mov
adcb
push
test
idiv
ret
shll
lret
js
notb
fstl
add
pop
adc
cmc
ficoms
cmp
sub
or
daa
xor
mov
leave
mov
xchg
sub
and
adc
or
jno
fstpt
pop
sub
out
mov
inc
jb
in
fs
push
or
inc
arpl
cmp
sbb
cmp
aad
mov
mov
push
cltd
call
jge
nop
loopne
stos
cmp
ljmp
push
mov
xor
lret
pop
das
push
out
xor
xchg
pop
sahf
bnd
mov
sbb
aam
mov
mov
ja
cmp
add
mov
jmp
xor
mov
in
subl
lret
xor
sub
adc
div
loop
cmpl
xchg
add
push
imul
fldln2
je
pop
out
xchg
sbb
mov
and
jo
sub
lods
ss
shrl
adc
or
rcrl
sub
or
jns
ja
idivl
sub
mov
fsubrs
jno
add
mov
mov
mov
out
adc
inc
loopne
int3
test
mov
push
mov
adc
xchg
inc
stos
movsl
mov
push
xchg
xor
mov
push
loope
shll
and
rclb
or
ds
xchg
pusha
sub
insl
jmp
xor
scas
cmp
in
pusha
sub
adc
sub
pop
shll
adc
push
and
mov
out
out
addl
dec
sbb
daa
mov
sub
sub
xor
pop
xchg
nop
cmp
pop
cli
mov
and
cmp
insb
popf
test
xor
js
testl
push
xor
test
xchg
shl
adc
cli
aaa
jmp
jb
mov
adc
xor
mov
inc
das
in
mov
lds
sub
rorl
ret
adc
movsl
push
add
mov
shr
into
mov
pop
pushf
cli
jo
in
test
dec
pusha
push
in
add
pop
jne
fistl
scas
mov
and
adc
sbbb
ljmp
xor
icebp
jmp
jle
sub
mov
sahf
xor
mov
std
sub
adc
icebp
cmpsl
js
pop
mov
or
cmp
mov
mov
inc
sbb
hlt
jbe
call
mov
xchg
sub
jmp
test
sub
out
push
pop
inc
dec
cmp
ret
mov
xchg
addr16
jbe
ret
scas
sbb
xor
cmp
es
cmc
mov
test
std
ja
sub
shll
push
push
sub
mov
cmp
dec
ss
pop
jb
adc
push
int3
roll
jmp
lods
sub
mov
test
jmp
rclb
dec
pop
adc
xlat
or
ljmp
pop
mov
inc
push
lret
adc
jp
mov
ljmp
or
pop
pop
inc
sbb
adc
scas
mov
push
mov
and
push
pop
jecxz
imul
sarb
mov
xchg
mov
or
lret
xor
cmp
mov
movsl
push
fwait
insb
insb
mov
cmp
adc
psrlw
push
in
jle
aas
xchg
xchg
loop
fnstenv
cmpsb
sub
mov
hlt
mov
rcpps
das
xchg
xchg
repnz
push
and
jl
subb
add
push
out
ds
and
std
dec
cmpsl
cmp
ljmp
jno
sti
out
mov
ja
mov
popa
pop
out
loopne
loopne
jbe
es
imulb
xchg
test
pusha
adcb
rcl
adc
adc
pop
fdivl
sub
or
jmp
dec
adc
ret
scas
cmp
mov
cmp
adc
pop
mov
push
dec
jae
or
loopne
sbb
das
and
out
pop
ljmp
xorb
sbbb
sbbl
jo
jnp
in
inc
add
repz
pushf
out
xchg
mov
cmp
sbb
les
pop
jmp
sti
mov
mov
xor
push
movsl
mov
mov
mov
popa
push
mov
jmp
test
stc
add
ds
xchg
mov
mov
das
test
push
ds
xchg
push
mov
cmp
sub
mov
xchg
and
imul
sub
loope
insb
mov
out
aas
dec
and
inc
enter
xchg
leave
jb
pop
mov
call
sub
mov
inc
xor
enter
or
js
jle
sbb
lock
icebp
addr16
xchg
cs
fists
mov
adc
lret
xor
ljmp
fidivl
adc
fwait
dec
push
mov
adc
fcmovb
push
stc
addr16
jne
pop
or
adc
popf
mov
xchg
inc
jmp
pop
pop
mov
push
repz
es
mov
stos
dec
inc
mov
add
sbb
mov
test
mov
std
filds
outsb
xchg
aas
daa
mov
cmove
mov
out
mov
fmuls
in
push
inc
adc
cmp
jmp
push
adc
ds
stc
and
addr16
sub
hlt
in
sbb
sbb
enter
push
mov
call
ja
cmc
lock
fs
shlb
fcoms
repz
shr
lcall
cltd
push
jns
test
sub
xor
sub
jmp
jnp
mov
add
mov
pop
mov
dec
mov
repnz
xor
xchg
inc
push
mov
inc
push
outsl
or
dec
pop
mov
imul
cmc
lock
push
or
cmpb
shrl
adc
mov
out
in
cmp
and
xchg
daa
ja
std
mov
lret
and
enter
dec
xor
dec
nop
movsb
fimuls
pop
mov
ret
lret
and
mov
lret
add
sub
xor
lds
cmp
jge
sub
jge
lock
push
sbb
adc
mov
rorb
jmp
cld
sbb
addr16
xchg
ss
mov
cs
stos
das
ret
aam
cmp
sub
hlt
sbb
sbb
lods
rorl
inc
jle
xorl
mov
pop
xor
in
mov
leave
lods
add
inc
les
sub
mov
and
in
jns
jno
mov
push
popf
ja
mov
add
mov
aaa
xor
and
loopne
repnz
aas
xor
cld
movsl
cmp
mov
out
ja
sub
data16
xchg
scas
adc
in
cs
mov
sub
inc
sub
xor
sahf
aas
add
cmpsb
xchg
xor
daa
iret
pop
cmpsb
lret
orl
fdivrs
mov
scas
push
xchg
pop
das
out
sub
and
dec
in
and
inc
pop
inc
jno
push
xchg
daa
insl
lock
xor
mov
xchg
mov
adc
mov
sub
mov
jmp
enter
pop
adc
jecxz
sar
adc
cmp
divb
sub
lret
dec
jecxz
lods
es
ret
mov
fsubrs
push
leave
sub
xchg
sub
sub
les
loop
mov
shlb
or
test
xor
or
add
inc
pop
lods
fs
cmp
xchg
or
sub
enter
leave
xlat
lea
push
int
and
fsubl
add
mov
adc
out
or
and
pop
call
outsl
jne
in
jge
aas
adc
and
lods
cld
mov
inc
xchg
sahf
test
movsb
jl
sbb
int
adc
xlat
sub
stos
pop
nop
adc
sbb
sbb
mov
sbb
lea
sub
and
cmc
xor
lock
scas
out
mov
push
xchg
cltd
or
loope
scas
cli
les
mov
add
sbb
sbb
xor
test
lahf
jecxz
pop
int3
out
leave
cwtl
push
ds
std
sbb
lods
or
jge
push
imul
rol
pop
mov
ret
das
scas
int3
inc
and
cmp
jmp
sbb
push
add
sub
push
fs
mov
subb
lcall
push
dec
sbbb
aas
sbb
out
aaa
adc
add
mov
cld
rcrl
lods
add
adc
pop
movb
jecxz
sub
lock
insl
push
mov
push
in
mov
sbbl
cmp
test
jecxz
xor
and
add
push
lods
out
adc
out
add
jmp
or
push
sbb
pop
mov
xchg
popf
ret
fiaddl
and
inc
adc
iret
jae
and
inc
sub
xchg
out
les
push
mov
xor
cwtl
pop
fists
pop
test
or
push
roll
push
inc
sub
pop
mov
pushf
xchg
insl
aas
xchg
mov
in
sbb
das
jge
dec
cli
das
loop
jmp
cmp
adc
pop
lock
shl
adc
cld
jge,pt
test
and
xchg
jl
push
sbb
mov
push
lret
push
push
sbb
push
rcl
mov
adc
mov
push
shl
andb
gs
mov
add
xchg
mov
pop
out
stos
sbb
and
insb
aas
imul
stos
inc
js
add
rorl
mov
xchg
dec
add
sub
sub
jl
pop
dec
add
mov
jb
stos
jge
aam
or
or
inc
out
adc
xor
pop
mov
clc
pop
sti
adc
leavew
fcomps
jnp
hlt
testb
dec
std
cld
inc
inc
das
lret
je
xchg
pop
pop
mov
adc
mov
dec
jmp
mov
add
repz
jge
int3
testl
or
stos
xor
rol
stc
call
imul
outsl
mov
imul
push
push
inc
adc
sbb
nop
movsl
sti
insl
adc
xor
gs
mov
jne
fdivl
outsl
add
cmc
mov
sub
xor
push
pop
mov
dec
add
test
push
movsb
repz
xchg
ret
or
ret
insb
adc
pop
or
stos
mov
xchg
pop
das
sbb
negl
sbb
ficompl
and
mov
sub
sti
adc
jp
mov
ss
scas
pop
out
popa
and
fsubp
jge
ds
out
add
sub
dec
jnp
lret
jnp
test
cmp
jle
loope
nop
and
cmp
cmp
adc
test
aas
fadds
aad
push
push
cmpsb
fcoml
and
adc
xchg
xor
or
and
mov
jbe
rcrl
lock
xchg
dec
and
lock
ds
cmc
dec
ds
and
or
hlt
testl
push
mov
int
mov
lods
adc
xor
mov
ljmp
insb
sub
add
adc
sub
fs
ss
lcall
xchg
xchg
es
sbbl
jb
aas
cmp
mov
out
pop
or
subb
mov
pushw
xchg
out
adc
or
scas
adc
mov
sbb
aas
pop
imull
xor
pop
sti
mov
lods
xlat
popf
rolb
sub
xchg
pop
push
int3
fwait
and
lret
aam
ljmp
nop
pop
adc
fimuls
xchg
jg
mov
out
dec
dec
jo
push
sarl
adc
stc
fdivrp
pop
roll
pop
cmpsb
js
sbbb
jle
sarl
dec
push
cmc
xchg
cmpsb
inc
sub
in
pop
xor
mov
aas
inc
push
in
outsb
push
ja
add
jo
cmp
dec
loop
insb
xchg
jno
fwait
cmpsb
mov
add
insb
inc
pop
enter
dec
mov
mov
shrw
ss
adc
cmpsb
dec
aaa
testb
insb
pop
mov
mov
ja
cmpb
flds
loop
push
notl
xor
pop
fstpl
lods
stc
js
mov
jge
aaa
aam
cmp
xchg
dec
mov
fmull
jp
loope
sarl
mov
aas
adcb
sahf
fs
sbb
push
shrl
add
in
mov
shll
mov
fsubs
dec
aad
or
lods
test
cmp
adc
add
mov
fdivl
adc
add
pushf
pop
stos
inc
xor
addr16
lea
xchg
pop
add
sbb
inc
or
adc
push
sub
jp
shll
mov
cwtl
addl
and
out
cmp
xchg
out
cmc
aas
lcall
stos
mov
fnstenv
jle
iret
ss
stos
pop
pop
repnz
popf
scas
push
ljmp
mov
data16
pop
icebp
mov
cmc
jg
adc
lods
mov
jbe
jo
push
pop
call
rorl
push
insb
adc
push
pop
ret
mov
dec
jecxz
rorb
push
jnp
lods
fcmovne
push
adc
push
xchg
jno
cmp
jb
mov
lock
add
push
cwtl
test
xchg
mov
cmp
adc
in
jl
ss
mov
and
xor
or
out
faddl
movsb
mov
jmp
loopne
jge
mov
scas
rcl
frstor
adcl
ja
or
sbb
in
xchg
call
dec
jl
mov
adc
dec
cwtl
pop
call
xor
push
mov
adc
imul
js
push
nop
mov
jbe
pop
xor
iret
repnz
push
xor
jns
or
aam
loope
lods
sub
pop
mov
cmp
icebp
jle
jo
jmp
fidivl
loop
fcmovnu
fs
imul
mov
sub
push
outsl
iret
mov
add
mov
lds
in
cmp
mov
pop
and
into
aas
scas
imul
nop
mov
push
jge
lret
enter
shl
sahf
pushf
es
push
xchg
sub
popa
das
xchg
in
les
movsb
dec
fldl
mov
jbe
cli
pop
pop
and
call
and
out
andl
mov
outsl
mov
add
orb
inc
jmp
lret
orl
xor
pop
insb
test
push
sub
rorl
mov
xor
or
lret
pop
fwait
mov
loop
jno
and
outsb
xor
jg
jbe
ret
lock
pop
sub
mov
adc
je
mov
xchg
sbb
adc
mov
out
das
push
adc
test
movsb
subl
xor
out
sub
mov
out
sub
or
xor
fcomp
mov
sbb
jae
outsb
push
inc
jge
sbb
ds
sbb
outsb
bound
mov
stc
sub
popa
mov
stos
pushl
lret
addr16
ret
test
adc
stos
pop
jmp
push
arpl
inc
cmp
adc
ds
adc
xor
dec
scas
adc
fldt
dec
jne
inc
jae
xor
xorl
sub
mov
je,pt
push
cmp
rorb
push
dec
adc
mov
jnp
xchg
push
mov
inc
adc
jg
arpl
lds
or
lock
dec
xor
add
add
xchg
jp
mov
rcr
jne
addr16
sbb
mov
mov
cld
and
aad
je
cld
push
sub
pusha
mov
jg
fwait
sbb
js
pop
push
ss
mov
iret
pop
mov
in
mov
inc
test
in
push
leave
cmp
mov
jg
fstpt
das
jmp
dec
push
mov
pop
mov
enter
mov
xchg
push
cli
sbb
mov
xor
xchg
rcrb
and
cmpsl
adc
xor
stos
adc
scas
dec
out
xor
ret
test
mov
stos
xor
test
jne
mov
or
faddl
lcall
adc
pop
add
mov
out
fildl
into
clc
cmp
jl
push
dec
cltd
xor
adc
cmp
add
sti
pop
jo
outsl
pop
jo
aaa
cmp
scas
jmp
das
ret
inc
push
xchg
or
cmp
inc
js
adc
xchg
adc
fcoms
cmp
jp
gs
test
aas
enter
or
aas
aas
fistpl
push
mov
xor
subl
out
das
mov
cmp
adc
in
outsb
dec
jmp
lods
adc
mov
jge
jb
pop
adc
lcall
andl
rcll
lcall
sbb
sbb
fs
mov
sbb
outsl
sub
mov
mov
into
adc
lds
loope
insl
cmp
loop
sbb
jp
inc
ds
adc
sub
pop
rcll
shrl
mov
push
mov
add
inc
cmp
ja
mov
jge
ljmp
mov
cmp
out
das
jmp
sbb
mov
mov
xchg
sahf
push
es
push
sahf
cmp
ret
and
mov
out
mov
sub
adc
sub
mov
into
sarl
pop
ret
fs
xor
mov
push
push
push
fiadds
test
nop
add
jl
and
rcr
std
jae
mov
jmp
mov
nop
lods
dec
cmp
rorl
jg
pop
subl
inc
push
push
cmp
jp
jnp
ja
aaa
add
dec
jecxz
jbe
repz
aam
sbb
xor
lret
lods
cmc
sti
aaa
sub
addl
jb
aaa
mov
xchg
sub
ret
push
cmp
jmp
out
pop
push
js
mov
jge
sub
dec
push
insb
inc
dec
xor
f2xm1
and
in
dec
sbbb
jmp
test
movsl
sbb
ret
push
in
and
std
push
mov
mov
testb
test
push
jns
dec
mov
add
inc
aaa
je
add
ja
mov
xchg
mov
and
in
jmp
je
mov
notl
sbb
int
je
aas
fsubl
les
jbe
push
in
pop
inc
sar
enter
mov
in
mov
pop
push
dec
add
jge
lods
xchg
dec
pop
and
xchg
icebp
pusha
inc
mov
jge
mov
dec
jo
mov
sub
xorl
add
ds
stos
outsb
jnp
popa
sub
pop
je
adc
pushf
push
xchg
dec
fstp
jmp
cmp
cs
and
mov
jno
sub
sub
aaa
leave
pop
movzwl
adc
leave
sbb
push
mov
xlat
das
sub
es
and
ret
mov
pop
dec
nop
cmp
aaa
in
inc
xchg
pop
orl
pop
ret
dec
test
out
inc
in
mov
popf
dec
test
lods
fcoml
andl
jmp
jg
sub
xchg
push
call
mov
add
jbe
mov
rolb
sub
ja
mov
stos
push
jae
popa
into
stc
mov
push
andl
enter
lods
icebp
mov
leave
sub
ret
sub
pop
cmpsl
pop
mov
in
xor
pop
daa
inc
push
test
dec
mov
enter
shlb
testb
lea
jl
and
push
in
push
stos
sub
xchg
xchg
pop
add
mov
push
loop
fcoms
fsubs
inc
push
push
mov
lds
xchg
cmp
mov
xlat
test
js
fistl
insl
iret
and
mov
mov
jp
pushf
in
xor
clc
insb
jp
jb
mov
pusha
aaa
jno
inc
xchg
das
enter
mov
pop
push
daa
push
cmp
nop
into
ds
push
icebp
adc
call
cmc
es
xor
lods
pop
xchg
in
inc
mov
pop
mov
jge
rcrb
nop
inc
adc
lea
scas
loopne
cmpsl
insb
adc
mov
mov
aaa
icebp
adc
sbb
shll
int3
pop
fistps
mov
test
iret
inc
das
out
rcrb
test
int3
addr16
notb
je
lahf
jl
sarb
pop
popa
cmp
sahf
adc
sub
jmp
jmp
xchg
jmp
mov
adc
ss
sub
stos
dec
gs
mov
push
fimull
mov
int
adc
in
das
lcall
sbb
adc
cmpsl
andl
mov
mov
xchg
call
cmp
je
je
xchg
out
outsl
push
das
add
mov
mov
repz
icebp
lds
pop
outsb
mov
fsubrl
stos
popf
push
inc
pop
jmp
cltd
enter
loope
add
xor
push
das
test
sbb
in
dec
je
repz
push
les
jae
mov
or
lcall
outsb
xchg
sub
in
dec
test
jo
movsb
enter
rorl
mov
add
fldenv
fmuls
out
lods
les
xchg
in
sbb
scas
das
adc
dec
or
dec
pushf
bound
xor
test
call
imul
shl
wrmsr
lods
and
out
arpl
shr
or
outsl
mov
or
push
dec
cmp
and
xchg
mov
push
mov
add
je
mov
ret
mov
and
js
and
add
test
iret
jnp
fcomps
mov
xorl
push
sub
adc
je
popa
mov
cs
push
ds
mov
ret
lock
out
mov
mov
jl
jge
mov
sub
or
in
jp
sub
lods
jns
and
mov
or
repnz
xchg
cmp
cmp
sbb
push
jp
fdivrs
mov
sub
jle
and
packuswb
arpl
add
or
pop
dec
mov
jl
or
jle
cmp
dec
mov
call
sub
mov
lds
add
int3
mov
mov
push
lahf
mov
xchg
xor
adc
loop
ds
loopne
push
icebp
pop
ss
cli
imul
cmp
mov
push
loope
and
adc
inc
add
mov
mov
nop
mov
ret
test
xor
fldt
in
ja
pop
sub
scas
mov
test
stos
jne
rolb
cs
xchg
jbe
add
into
adc
and
iret
push
push
pavgb
mov
fists
inc
mov
xlat
ret
sub
in
les
jg
jno
xor
or
cltd
adc
in
mov
mov
es
or
lods
lret
jle
and
imul
inc
adc
jbe
aam
cmp
inc
push
ljmp
and
inc
xor
mov
loop
cmpl
outsb
and
mov
std
pop
mov
ret
adcb
adc
pusha
cld
stos
pop
jl
mov
add
mov
mov
xchg
cwtl
stc
adc
lret
push
test
pop
inc
cld
mov
das
sbb
cmc
inc
sub
sub
push
mov
popa
sub
and
aam
sub
push
sbb
clc
leave
fstpl
ret
jno
hlt
jnp
cmp
pop
rcll
subl
and
outsb
js
mov
dec
out
inc
repnz
xchg
test
aaa
lea
ljmp
mov
jae
adc
jne
xor
sub
mov
mov
sub
js
and
adc
iret
jbe
dec
and
cmpl
enter
inc
aaa
mov
lods
cmpsl
call
mov
aas
push
enter
fwait
push
ret
test
xchg
jb
jle
out
stc
inc
xor
ret
repnz
out
add
xor
mov
std
adc
xor
dec
pop
mov
jno
xor
mov
and
mov
in
and
loopne
ja
mov
pop
enter
pop
mov
sbb
test
int
outsb
cwtl
push
movsb
loope
push
andb
in
leave
xchg
scas
pop
cmp
testb
jl
xor
mov
daa
pop
mov
mov
xchg
jne
mov
mov
adc
pop
inc
cs
sti
and
test
das
out
inc
lret
pop
cld
push
xor
je
sub
in
inc
sbb
sub
ret
test
xor
xchg
fs
and
mov
jmp
sub
js
leave
bnd
inc
pushf
mov
jae
push
dec
sbb
jle
ret
lods
adc
jns
fsts
mov
xchg
pop
loop
xor
mov
iret
ljmp
pop
enter
pop
hlt
ljmp
std
mov
push
mov
stos
jno
scas
adc
or
sub
out
shll
cmp
scas
or
into
push
lods
jne
fldcw
out
aaa
xchg
divb
and
sub
movl
jecxz
stos
pop
mov
add
rcrl
xor
jno
jbe
iret
lods
das
mov
in
mov
dec
xchg
inc
loopne
dec
pop
mov
fcoml
rorl
es
movsl
jo
in
pop
outsb
loope
aam
lods
mov
das
aam
leave
add
jbe
or
mov
ds
scas
ds
sbb
arpl
xchg
mov
iret
test
sti
or
in
sub
stos
cmpsb
lret
pop
rcrb
inc
and
or
inc
das
xchg
pushf
xchg
shl
sbb
sub
xchg
rol
mov
aad
jo
mov
enter
cmp
insb
test
enter
mov
out
nop
aaa
lods
outsl
cmp
xchg
insb
dec
subl
xchg
jb
ljmp
sahf
outsb
inc
mov
push
aas
lods
dec
pusha
jae
pop
test
mov
sub
std
fiadds
sub
dec
jle
add
add
add
xchg
inc
insb
mov
orb
and
push
pop
shrl
jmp
sbb
push
dec
sarb
roll
lret
adc
cmp
mov
scas
mov
push
cmp
sbb
insb
mov
fs
inc
lods
loop
dec
ljmp
mov
and
out
sbb
les
inc
mov
xor
dec
or
jno
cmp
faddp
enter
addl
cmp
jp
adc
cmpps
addl
mov
mov
mov
mov
lret
outsl
cmp
adc
in
retw
hlt
sub
push
or
add
xor
repnz
adc
cs
mov
mov
aas
clc
aas
out
aaa
out
or
lea
adc
in
xchg
insl
push
adc
and
jmp
jne
and
inc
xchg
push
xor
sbbl
clc
cmp
xchg
sub
push
inc
xor
int3
jmp
push
fldpi
or
xchg
stos
xor
and
addr16
pop
mov
lahf
jne
xor
pop
mov
mov
adc
das
xchg
mulb
ja
inc
jbe
in
mov
ucomiss
pop
ljmp
aas
notb
aad
jp
clc
aas
js
fildl
pop
rcrb
mov
lretw
mov
push
adc
aas
adc
insb
pop
fisttpll
xchg
jnp
loope
mov
jne
adc
dec
xchg
or
and
xor
cmpsl
sbb
xor
mov
sbb
or
mov
inc
adc
xchg
arpl
lock
je
mov
push
add
push
rol
xor
out
sub
sahf
xor
jle
cmp
das
movsl
ja
sbb
aas
push
movsb
cs
sbb
and
ljmp
pop
mov
adc
loop
sbb
jnp
hlt
or
push
push
mov
ret
pop
push
mov
je
adc
push
sub
outsb
nop
fidivrs
int3
sti
mov
and
or
cwtl
mov
mov
faddl
lea
ds
push
mov
ja
sbb
sbb
pop
aas
or
sbb
out
mov
inc
pop
push
ror
hlt
jbe
xchg
ret
iret
inc
testl
cmp
mov
call
idivb
pop
stc
pop
rorb
fwait
int
mov
jne
int
adc
mov
cs
jae
lods
sub
lret
ds
lods
add
jo
inc
sbb
adc
pop
adc
pop
xchg
mov
mov
mov
sub
dec
push
in
xlat
loope
stos
aad
push
mov
std
adc
popf
js
sbbl
jb
hlt
sub
aam
lock
dec
mov
clc
loop
fimull
dec
cmp
adc
sahf
insl
adc
cmp
imul
sub
mov
xor
mov
cmp
mov
cmp
sub
in
imul
cs
push
js
jne
push
cmp
test
mov
mov
scas
push
cs
movsl
cmp
mov
jo
cmp
lock
mov
not
sbb
adc
scas
cmp
or
pop
jb
test
mov
cmp
push
jle
jne
adc
fdivrs
lea
cmp
dec
xlat
in
xor
cmp
ja
cmp
mov
cmp
sbb
adc
xchg
xor
insl
sub
repz
out
sub
dec
jns
in
mov
out
lods
or
push
rclb
lret
int
imul
mov
push
sti
jae
ret
ljmp
xor
cmp
jne
lcall
rep
jbe
pushf
inc
cmpsl
jp
cmp
aas
xor
rolb
fadd
insb
sbb
cwtl
add
inc
inc
movsl
cmp
subl
xor
jnp
sbb
sub
dec
mov
fs
sub
std
push
cmc
cmp
xchg
scas
or
int
movsb
loope
jmp
sub
or
popf
js
das
cmp
scas
pop
cmp
test
sub
jbe
lods
sarl
mov
add
enter
mov
repnz
mov
out
cmp
icebp
push
xor
lret
adc
xchg
aas
lcall
addr16
cli
pushf
pop
push
cmp
xchg
adc
test
add
jno
or
int3
mov
cmp
inc
cmp
fwait
pop
ljmp
xchg
aas
push
xchg
add
pop
sub
decb
mov
cmp
push
decl
ret
test
mov
test
mov
cwtl
out
imul
lea
pop
cs
imull
ljmp
loop
sub
or
popa
sbb
sahf
in
cmp
and
sub
lods
clc
push
je
pop
add
int
sarb
or
shlb
sahf
and
mov
adc
mov
add
sub
push
mov
outsl
or
cmp
out
daa
clc
xor
sti
sub
test
imul
pushf
sbb
dec
jnp
inc
insb
cli
arpl
cmp
jne
testb
push
test
mov
and
int3
ljmp
cmp
cmp
cmp
hlt
aas
cmp
cmp
sbb
dec
push
mov
xchg
imul
test
pop
insb
mov
jecxz
mov
pop
or
push
cmp
dec
xchg
jg
fnstcw
adc
iret
outsl
xor
leave
xlat
lods
mov
lret
mov
rcll
push
pop
jb
xor
dec
jp
cmp
cmp
mov
cmc
push
mov
inc
push
cmp
jmp
xchg
adc
cmp
pop
pushf
lcall
movsl
push
pop
rcrb
xchg
push
adc
cmp
clc
xchg
subl
shll
cmp
pop
shl
add
mov
push
arpl
ja
mov
xchg
xchg
test
cmp
inc
test
cmp
cld
sub
fisubrs
mov
xor
movsl
aad
xchg
adc
inc
stc
fwait
sbb
int
push
jnp
dec
inc
adc
or
inc
sub
mov
pop
adc
pop
clc
movsl
jp
jbe
push
cmp
inc
loop
add
cmc
cs
jns
idivl
lahf
mov
and
jecxz
mov
add
loope
fcompl
and
into
xchg
mov
aam
sub
push
xchg
addl
push
or
movsl
fdivs
sbb
pushf
xchg
mov
mov
int
lods
fmull
cmp
mov
push
sbb
mov
outsb
cmp
jno
sbb
pop
aad
les
mov
cmpsl
in
mov
imul
lds
pop
loope
sub
sbb
push
cwtl
cs
imull
mov
xchg
mov
insb
in
addr16
aas
sbb
inc
das
add
cmp
mov
adc
aaa
cmpb
mov
dec
js
int
loopne
add
pop
insl
cmp
loop
lods
cmpsb
lcall
mov
mov
out
mov
or
mov
in
add
cltd
mov
dec
ljmp
xlat
pop
in
xor
out
push
lods
adc
scas
dec
cmp
in
fisubrs
fxch
xor
pop
inc
ret
cmp
push
and
cmp
push
xor
pop
in
cmp
sarl
cmp
mov
xchg
or
mov
fldt
dec
sbb
sbb
inc
jmp
jl
cmp
aad
repnz
and
adc
scas
pop
popf
inc
pushf
push
stc
and
cmp
das
fs
cmp
mov
cmp
mov
in
add
aas
pushf
and
jmp
mov
in
pop
cmp
aas
cmp
aam
and
dec
adc
cmp
fnstcw
lahf
mov
pop
cmpsl
inc
cmpsb
loope
xor
or
nop
mul
cmp
mov
dec
stos
pop
cmp
cmovge
mov
push
push
clc
cmp
cmp
aad
jae
push
xor
js
leave
sub
imul
imul
shl
bound
movb
fwait
pop
imul
cmp
repz
jo
sub
insl
lret
aam
pushf
mov
inc
jge
pop
mov
in
lock
or
into
lods
stos
movsb
push
subb
xor
jnp
inc
add
sahf
imull
icebp
adc
cmp
pop
pcmpeqd
and
sub
fsin
xchg
push
mov
icebp
sti
sti
jmp
leave
xor
pop
inc
jg
jbe
and
sti
aam
and
scas
cmp
push
adc
push
leave
push
dec
iret
cmpsb
ret
aad
cmp
mov
clc
jne
out
sbb
fistpll
push
lahf
inc
adcl
xlat
sbb
xor
mov
and
jnp
cmp
dec
mov
jl
dec
cmp
jo
mov
gs
push
lods
sbb
sbb
int
xchg
xchg
pop
mov
ret
aam
mov
dec
cmp
pop
cmp
ret
pop
das
cmp
fsubp
bound
push
cmp
cmp
inc
std
insl
into
fwait
cmp
fcomip
shlb
jecxz
dec
push
outsb
mov
imul
sahf
sbb
cmp
insb
dec
inc
jne
mov
lods
aad
cmp
adc
or
test
pop
sbb
fistpl
cmp
pop
out
push
cmp
rcrb
push
cmp
jle
push
into
popa
imul
dec
cmp
out
adc
xor
mov
pop
mov
in
cli
imul
mov
jns
popf
add
lcall
xchg
or
lods
in
nop
icebp
fcomps
dec
sub
mov
or
pop
stos
stc
fsubrl
sub
dec
cld
sbbl
cltd
stos
repz
sahf
adc
test
cmp
push
pop
jns
sti
xor
push
cmp
sbb
adc
insl
add
test
mov
mov
cmp
jo
mov
ja
sub
push
pop
adc
in
pop
gs
lods
xlat
and
repnz
bound
xor
movsb
fisttps
dec
mov
lods
repnz
cmc
jne
imul
cmp
pop
xchg
popa
arpl
sub
fbld
inc
xchg
mov
pop
cmp
jb
pop
cmp
scas
cmp
hlt
xchg
testb
jge
out
adc
cmp
sbb
sub
cmp
inc
movsl
inc
xor
insb
xchg
shrl
cmp
xor
sub
sbb
movsb
sbb
push
arpl
cmp
hlt
or
push
xor
cmp
insl
pop
test
jo
lods
lock
rorb
arpl
sub
fs
loop
mov
mov
in
mov
cwtl
dec
dec
popf
call
and
adc
sbb
rorl
adc
xchg
loopne
ss
and
lret
mov
pop
and
inc
mov
loope
scas
lret
mov
stos
je
fbld
jg
sbb
fistpll
adc
es
sbb
jmp
test
test
out
lods
insl
icebp
lods
jbe
push
push
cmp
or
scas
and
adc
mov
sub
adc
outsb
add
push
sub
cli
icebp
jecxz
loope
pop
pop
popa
mov
lcall
loope
lods
stos
sbb
dec
xor
imul
sbb
mov
outsb
adc
fimull
rcr
inc
jge
scas
adcl
mov
mov
adc
out
dec
dec
push
adc
nop
inc
push
stc
mov
fnstcw
push
dec
xchg
jo
sar
xor
add
rcrb
xchg
dec
jl
jne
jle
pop
lret
mov
stc
mov
sbb
mov
test
mov
xor
mulb
sub
inc
sbb
push
adc
ds
out
add
jle
sub
or
in
adc
mov
enter
int3
in
pop
xchg
mov
sub
outsb
call
inc
push
jle
jbe
je
fistpl
adc
push
das
cmp
add
les
push
mov
add
inc
push
and
cld
iret
cmp
or
adc
popf
sub
cwtl
outsb
mov
and
xor
mov
fiaddl
xor
fmul
imul
ljmp
add
or
pop
andl
jge
sbb
adc
dec
cltd
mov
fistps
sub
in
adc
mov
jle
aad
xchg
nop
push
xchg
out
test
jge
xor
push
xor
aad
jns
cmp
stos
jno
push
addr16
jle
push
adc
inc
rcrb
out
or
mov
addb
jne
jge
and
or
push
js
sarl
lods
xchg
push
mov
fiadds
incb
stos
insb
push
cmp
jmp
dec
psadbw
lods
mov
push
insl
je
xchg
cmp
adc
bound
sub
sbb
dec
daa
aad
cmp
adc
add
bound
pop
cmpsl
insl
pop
xorl
inc
mov
mov
add
mov
adcl
loopne
mov
and
scas
mov
pop
pop
pop
jo
sbb
enter
jbe
in
mov
push
xchg
fisubrs
repnz
and
ss
ret
and
cmp
ret
out
xor
dec
loopne
sbb
push
iret
inc
aas
minps
testb
cmpsb
les
je
ret
push
or
mov
fldln2
ficoms
push
fs
mov
add
fwait
lahf
sub
loopne
icebp
cs
adc
push
ss
add
sbb
pushf
xorl
adc
bound
mov
out
mov
inc
subl
aaa
cmpsb
in
pop
movsb
lds
cmp
xor
mov
fs
jbe
mov
aas
fldt
ljmp
cmp
push
cmpl
enter
cmp
test
xchg
mov
adc
lret
mov
cmc
mov
sub
sbb
add
ja
imul
or
adc
inc
pop
adc
jnp,pt
cs
arpl
mov
call
cmp
aas
fisubl
in
sub
sysenter
mov
lret
cli
xchg
jne
push
push
jo
sub
leave
adc
daa
cmp
add
out
xor
lahf
lea
sar
pop
pop
adc
mov
ds
ljmp
mov
push
iret
jo
dec
addr16
jb
fwait
aam
inc
adc
jp
mov
sti
insb
add
xchg
aas
adc
test
pop
rclb
and
mov
or
in
insb
testl
das
out
sub
imul
mov
push
mov
inc
jmp
xchg
ljmp
cmc
or
out
das
pop
dec
jne
stos
push
sub
xor
ret
data16
ficompl
std
sarl
lret
ss
jmp
mov
rcrl
jne
addl
mov
hlt
lock
stos
sub
dec
xor
cmpsb
cmp
jl
pop
pop
push
jno
mov
dec
mov
cmp
sti
push
inc
sahf
ret
push
jbe
repnz
loope
jo
sbb
mov
cltd
shl
or
cmpsb
add
xor
orb
jns
pop
sub
rolb
loopne
ljmp
push
jbe
and
in
aas
pop
sbb
jnp
inc
pop
es
mov
xor
cld
xor
or
cli
dec
jae
sbb
adc
ret
out
xchg
repz
and
mov
jbe
insb
daa
xchg
lock
pop
push
jecxz
jp
mov
cs
jl
ja
shlb
mov
ret
xchg
les
shl
test
push
es
cmp
push
adc
test
sub
or
arpl
cltd
jl
xor
ror
aas
add
adc
mov
sbb
sub
add
nop
ss
push
imull
outsb
les
sbb
push
cmp
test
enter
xor
pop
mov
mov
std
add
sbb
icebp
cmpsb
xchg
pop
or
cmpsb
loope
rolb
cmp
fwait
lods
cwtl
push
daa
sub
lret
in
pop
adc
push
jl
scas
jmp
sub
mov
in
shl
jmp
outsl
in
jge
push
xor
fcom
repnz
cltd
cmpsl
jbe
jae
adc
fmull
add
push
adc
sub
je
inc
pop
cld
push
xchg
adc
or
dec
and
adc
and
dec
xchg
push
outsb
jp
sbb
jl
sbb
pop
ss
out
or
shl
xchg
push
or
adc
jp
ja
dec
add
leave
adc
js
sub
in
sbb
fwait
pop
dec
lods
xchg
mov
add
leave
xor
cmpsb
lock
test
mov
mov
into
jbe
repz
scas
movsl
das
and
enter
adc
test
adc
sbbb
andb
xor
std
inc
jmp
out
dec
sbb
sti
aaa
push
pop
xor
or
pop
sarl
cli
out
test
insb
xchg
and
repnz
lock
pop
mov
cmpsb
push
xchg
loope
ds
adc
lock
outsb
enter
jg
push
insb
roll
jmp
push
in
sbb
adc
and
mov
sahf
sub
mov
add
lcall
adc
xchg
push
cmc
add
das
ja
stos
repz
and
inc
sbb
mov
mov
add
xchg
mov
scas
std
dec
xor
mov
call
dec
test
jmp
add
or
daa
lcall
out
js
cltd
out
mov
jp
lods
push
popa
sub
int3
jo
das
insb
adc
mov
insl
fwait
mov
adc
push
jne
mov
adc
mov
aaa
dec
mov
insb
loope,pn
dec
xlat
dec
orb
mov
repnz
jle
and
jo
test
cltd
scas
dec
clc
out
cmc
xor
mov
out
sar
mov
test
add
inc
xor
add
ljmp
test
out
out
xor
mov
cmpsb
ret
sahf
jmp
jle
sub
lods
xor
aaa
ja
pop
es
daa
pop
xor
aas
mov
das
sub
jge
sub
ss
sub
mov
jnp
jge
aam
mov
xorb
outsb
xchg
jmp
pop
push
mov
push
aas
adc
sbb
dec
push
test
sub
push
in
into
mov
aad
mov
sbb
push
mov
mov
mov
xchg
into
mov
cmpsl
jecxz
cmpsb
cmp
adc
mov
xchg
ret
les
int
jns
cld
inc
test
lods
mov
and
jp
sbb
fistps
aas
push
mov
test
push
test
sub
mov
add
in
sub
mov
mov
imul
pusha
pop
sub
fstl
insl
xor
sub
outsl
jp
rclb
pop
cltd
fidivrs
pop
negl
test
xor
cmp
in
and
nop
inc
push
jp
out
in
jmp
outsl
dec
inc
mov
std
aam
arpl
les
push
add
xchg
xchg
sub
es
jp
insb
lret
xchg
jnp
loopne
jnp
pop
sub
in
int
stos
jnp
ljmp
xchg
sbb
sbbl
cmp
mov
sti
xchg
insl
out
sub
scas
rcll
mov
fnstsw
push
and
out
adc
lret
mov
in
sub
stc
test
rcrl
sbb
sub
mov
cmpb
sbb
enter
fsubrs
scas
xchg
sub
ljmp
cs
xchg
dec
mov
jb
push
lods
jb
stos
jg
push
or
inc
adc
push
add
mov
enter
mov
inc
aad
mov
outsl
mov
adc
jle
add
push
lea
pop
je
hlt
inc
adc
mov
mov
inc
jne
dec
dec
rcl
rcrb
sub
fs
shlb
xor
loope
xchg
xchg
xor
xor
sbb
pop
or
push
fidivrl
mov
loop
clc
mov
adcb
repz
mov
pop
aaa
mov
lea
adc
xchg
clc
sbb
movsl
dec
clc
adc
mov
notb
xchg
js
iret
insl
mov
fsts
imul
fstpl
movsl
mov
push
cltd
inc
xchg
leave
addl
divl
mov
leave
addb
enter
popf
aaa
shll
cmp
icebp
cli
xor
in
mov
mov
fildll
lret
ficompl
cmp
xor
cmc
xchg
hlt
scas
pop
in
mov
mov
add
mov
sbb
mov
mov
dec
dec
inc
or
loop
sbb
push
test
scas
leave
mov
cmp
adc
aaa
adc
mov
fcompl
inc
es
pop
iret
mov
lods
faddl
or
mov
fbstp
hlt
jge
sub
xor
in
repz
call
jecxz
mov
mov
pop
sub
iret
ret
popl
es
adc
bound
add
lcall
jle
inc
fdivs
jb
ret
call
push
je
mov
test
mov
sub
add
xor
in
arpl
sub
stc
in
scas
xchg
jmp
test
ds
or
icebp
inc
test
xor
shrl
and
aaa
out
push
xchg
jb
and
mov
push
add
scas
mov
cmpb
add
push
scas
fstpl
pop
sahf
xchg
mov
push
int
es
mov
push
imul
sahf
mov
xchg
mov
out
addr16
mov
or
xor
mov
cld
mov
leave
stos
mov
cmp
jbe
popf
cmp
addr16
pop
dec
mov
hlt
js
orl
pshufw
sub
mov
jmp
pop
mov
mov
data16
xor
int3
pop
push
add
outsl
leave
jle
int3
xor
filds
and
mov
rcll
fidivl
mov
daa
push
add
and
pop
cmp
mov
adc
mov
lret
test
jl
lret
xor
xor
or
xor
add
imul
rclb
and
into
add
push
push
aad
mov
je
xor
ss
xor
out
js
sub
fnstenv
int3
pusha
insl
test
ret
jge
frndint
jl
mov
xchg
insb
fiaddl
js
out
out
inc
sub
xchg
pop
addr16
adc
jecxz
mov
sub
xchg
sbb
ss
fidivs
lods
fwait
iret
addb
std
fucom
jmp
fimuls
ret
jno
pop
jg
push
std
das
scas
xorl
int
xchg
and
xchg
or
xchg
outsl
popa
in
sub
insl
outsb
dec
leave
popf
sub
inc
scas
ljmp
popf
mov
xor
hlt
stos
inc
add
and
push
leave
pop
inc
lcall
mov
dec
aad
stos
jle
rcrb
adc
or
xor
loop
icebp
mov
mov
shlb
cmp
aad
pop
dec
add
jp
adc
mov
jg
aaa
testl
mov
daa
movsl
sub
pop
loope
mov
or
iret
mov
bound
mov
dec
shll
inc
jmp
push
sub
cmp
push
bound
xchg
mov
pop
gs
or
movsl
out
push
ja
jl
das
xchg
mov
loopne
cmc
mov
rol
push
lret
aad
jmp
mov
mov
push
push
cmp
outsb
in
lods
in
mov
add
sub
dec
mov
add
jl
sub
leave
mov
and
cmp
cmp
and
and
ja
scas
aaa
adc
xor
cmc
test
mov
adc
sbb
dec
lcall
sub
movb
je
mov
sbb
cmp
adc
mov
jbe
lcall
test
push
jp
scas
in
cmp
fwait
xor
ljmp
xchg
scas
push
jl
in
in
pop
int3
adcl
mov
aaa
jmp
inc
lods
xchg
pop
rol
adc
sub
arpl
daa
loop
das
and
mov
es
fwait
jp
outsb
sub
incl
pop
lds
mov
clc
xor
inc
jmp
inc
xlat
xchg
dec
mov
les
mov
popa
add
dec
mov
mov
xchg
mov
or
pop
xor
mov
mov
sub
sbb
cmpsl
jmp
mov
and
imul
mov
in
mov
push
xor
jge
jns
mov
or
sti
pushf
leave
sub
jge
std
shrb
jl
outsb
xchg
xchg
xor
mov
aam
lods
loop
mov
dec
pop
cmp
or
mov
clc
xchg
aad
lods
pop
sub
aad
push
rclb
xor
js
movsl
out
mov
xchg
lcall
add
lods
push
testl
pop
leave
test
fadd
aas
in
sbb
divl
ljmp
jnp
mov
pop
mov
aaa
jg
mov
insb
std
movzbl
jmp
jns
lret
cmp
lcall
mov
test
xchg
add
jmp
mov
mov
mov
aaa
repnz
cmp
outsb
jecxz
mov
inc
push
mov
adc
ficoml
mov
popf
xchg
xor
jno
push
sbb
xor
adc
add
loop
pop
ret
ficoms
jmp
ja
ljmp
xor
sub
adc
test
iretw
jo
jmp
jl
jo
cli
mov
xchg
xor
inc
xchg
or
insl
ja
mov
or
jns
xor
mov
jmp
lods
xchg
mov
adc
sub
sbb
push
pop
mov
dec
jl
movsl
jno
clc
xor
add
shl
cmp
cwtl
pop
push
fs
lods
mov
sbb
mov
lret
lret
or
sbbl
xchg
popf
dec
out
aaa
lods
inc
mov
lea
aam
in
pop
adc
inc
pop
mov
out
pushf
stos
aas
fs
xchg
mov
push
cmp
sbb
les
mov
addl
lods
out
stos
std
xchg
pop
and
icebp
pop
push
mov
aam
sub
addl
push
sub
xlat
test
pop
mov
jmp
movsb
out
or
cmp
jne
inc
cmp
xchg
inc
repz
daa
push
subl
jp
jnp,pt
xchg
outsb
push
insb
dec
cs
push
xchg
pop
in
stos
out
cmpsb
std
imul
push
xor
jp
daa
outsb
dec
test
mov
add
outsb
push
fs
xor
cmpsb
out
leave
xchg
jp
jmp
push
adc
sub
ja
push
loopne
enter
fidivs
stc
dec
adc
or
jge
ds
cld
xchg
shlb
push
fcomps
aad
xchg
cli
imulb
add
pop
pop
pop
or
stos
leave
shrl
es
loop
xchg
hlt
loopne
xor
cmp
cmp
jle
stos
lods
fs
ss
popa
popf
inc
dec
or
ljmp
andl
xchg
nop
cld
inc
adc
addr16
inc
jno
cmp
xchg
adc
je
ret
ret
add
cli
cmp
enter
cmpsl
adc
lods
stc
jmp
xchg
inc
mov
test
fldcw
push
add
daa
push
cmp
xchg
lcall
leave
inc
movsb
mov
mov
and
mov
dec
xchg
daa
sub
mov
add
adc
out
hlt
sarb
mov
pushf
mov
mov
scas
inc
daa
je
iret
fidivrs
sahf
cli
loopne
repnz
fmull
lret
sub
inc
clc
jmp
xor
js
push
add
sub
ficompl
scas
iret
mov
push
std
add
sub
xor
mov
push
cwtl
inc
ja
push
sbb
shlb
add
mov
xchg
out
call
pusha
xchg
adc
repz
sub
arpl
cli
pop
sbb
js
sbb
ljmp
lods
das
inc
fistl
inc
pop
push
sub
mov
into
mov
mov
mov
xchg
push
adc
outsb
or
mov
push
les
adc
bound
out
ja
cmp
sub
nop
lea
pop
adc
mov
ret
mov
cmp
push
cs
mov
fcomps
and
and
adc
mov
mov
popf
repnz
mov
cmc
sahf
xchg
mov
inc
insb
push
xor
fidivrs
scas
mov
aaa
mov
shlb
in
scas
xchg
pop
aad
lods
adc
pop
rclb
jne
jmp
inc
pop
push
pop
out
jmp
mov
mov
lcall
inc
inc
push
cmp
cmp
ret
xor
pop
test
jle
std
jae
mov
std
fadds
lock
push
push
addr16
aam
mov
push
sbb
jmp
mov
sub
pusha
and
inc
adc
pop
enter
adc
push
rcl
adc
addr16
cltd
push
insl
sub
lret
mov
icebp
in
out
xor
mov
enter
xor
inc
jne
jnp
popf
fcomps
ret
adc
mov
enter
dec
mov
das
push
xchg
sahf
sub
jge
arpl
jl
cmp
jb
fsubl
scas
shlb
jecxz
mov
icebp
dec
aam
pop
sti
pop
aas
adc
xlat
out
pushf
push
xchg
jmp
divb
sub
xlat
mov
fistps
aaa
repnz
mov
lods
cmp
inc
data16
popa
adc
pusha
aam
xchg
dec
pop
jmp
dec
data16
push
adc
and
or
cmc
movsl
xchg
xor
in
xorb
cmp
shlb
and
mov
dec
cmc
xchg
clc
ss
fsubrs
sub
adcl
jle
or
xchg
fsubrs
dec
jmp
bound
mov
mov
and
int
insl
sbb
mov
scas
adcl
hlt
sub
mov
orl
inc
xor
push
mov
or
aaa
loopne
xor
pop
and
jno
shll
orb
int3
stos
mov
insb
mov
mov
jmp
icebp
push
add
dec
add
insb
je
cli
inc
ljmp
mov
adc
test
loop
int3
std
dec
lock
inc
fcompl
fimull
pusha
lret
cmp
hlt
pop
sub
aad
inc
test
dec
dec
aaa
sbb
jecxz
into
clc
mov
add
lea
push
fucom
testb
test
mov
shll
fstpl
or
mov
dec
cmp
sbb
mov
das
push
imul
lods
lea
ja
mov
pop
ret
sbb
and
mov
push
jle
xor
mov
push
mov
jmp
xchg
mov
into
sub
mov
fistpll
push
pop
enter
es
push
out
xor
mov
cmpb
insl
cmp
xor
lds
repnz
jmp
icebp
mov
xchg
mov
aam
out
fs
cli
sub
int3
adc
cmp
gs
aam
jmp
addr16
jo
sbb
ret
in
arpl
xor
dec
xchg
pushf
xchg
add
outsl
mov
mov
rcrb
scas
push
mov
xchg
lods
ja
jl
shrd
dec
nop
mov
xchg
call
xchg
ja
xlat
add
lret
push
cmp
subb
sub
lds
pusha
loope
jb
push
je
clc
inc
mov
push
sbb
adc
inc
pop
hlt
jecxz
mov
jge
or
mov
adcl
sbb
mov
shl
push
mov
mov
ljmp
or
roll
pop
sqrtps
sbbl
mov
push
jno
adc
cwtl
sub
scas
std
shlb
add
addb
inc
inc
cmp
inc
in
push
inc
and
push
movsl
icebp
add
xchg
das
xchg
lcall
cwtl
leave
mov
jbe
pushf
jecxz
mov
jae
sbb
addl
inc
xchg
cwtl
cmp
scas
adc
cs
cltd
xor
mov
xor
daa
and
ss
mov
mov
mov
xlat
cmpsl
jge
rcrl
cmp
test
cmp
sbb
movsb
mov
and
data16
test
fs
cmp
scas
fidivl
popa
popf
jbe
sbb
push
dec
mov
xchg
das
cmp
andl
and
inc
movsl
fcoms
xor
add
dec
adc
add
andl
adcl
add
fisubs
lds
movsb
test
mov
lods
push
lods
cs
test
int3
mov
mov
adc
leave
mov
adc
sti
adc
cwtl
js
mov
idivl
mov
stos
mov
int
cmp
cs
sbb
xor
cmpb
stc
inc
sbb
sub
add
test
ret
jb
pop
bound
xor
stos
lods
xlat
adc
lds
lahf
push
xor
out
test
iret
dec
loopne
mov
ss
xchg
in
push
xchg
orb
rol
loop
insb
das
adc
imul
mov
jo
popa
lret
xchg
mov
pop
jae
orb
adc
add
sbbb
stos
out
or
in
mov
addr16
dec
loopne
das
xchg
and
sub
std
add
aaa
ror
or
sub
xchg
scas
sub
adc
std
roll
shlb
nop
xorb
and
insl
leave
xor
sbb
jle
jo
or
cld
xor
mov
jo
sub
sub
and
jl
jne
cmpsb
add
ss
mov
stc
ss
aas
int3
outsl
addr16
sub
adc
in
mov
mov
lods
mov
cmp
orb
adc
out
jge
stos
pop
fisttpll
push
dec
scas
pusha
adc
dec
push
mov
leave
outsl
pop
adc
jbe
insl
mov
outsl
sub
out
adc
mov
ret
sub
xor
add
ficompl
outsl
xchg
jg
adcl
mov
xchg
push
sbb
xor
in
mov
jne
mov
das
addr16
cmp
mov
dec
popf
addb
aas
ret
fs
aas
and
shrl
lock
xchg
in
jecxz
adc
dec
inc
xchg
stos
insb
stc
adc
cmc
popf
or
inc
leave
std
jbe
push
mov
sub
out
mov
mov
mov
lods
aaa
dec
mov
insb
loop
ret
xor
xor
mov
aam
or
mov
pop
or
call
daa
int3
push
push
aad
idivl
repnz
jecxz
and
sub
out
sub
das
mov
cld
dec
addl
jecxz
es
fimull
and
fstpl
mov
mov
adc
cmpsl
and
shlb
push
mov
xor
pop
aaa
cmp
and
stos
repnz
push
inc
out
jle
adc
lock
mov
xchg
ss
sbb
sbb
dec
sarb
loopne
divb
inc
mov
insb
mov
enter
loope
xchg
push
daa
aam
vandps
dec
xor
or
fwait
aad
add
das
mov
inc
cmp
aam
cmpsb
xor
xchg
mov
xor
stos
int3
jae
sbb
mov
popa
and
xchg
inc
add
dec
adc
mov
jecxz
fistl
inc
jne
inc
in
negl
negl
in
leave
enter
push
lods
xchg
xchg
cmpsb
mov
push
push
mov
xor
pop
adc
jbe
lods
das
or
xchg
push
in
sub
mov
jbe
arpl
pop
mov
sub
pop
lcall
inc
jg
daa
xor
adc
enter
cmp
test
push
insl
cmp
arpl
lea
mov
xchg
lahf
ret
adc
or
or
add
fstpt
lods
cmp
sbb
mov
and
xchg
mov
mov
std
pop
xchg
mov
xchg
add
rorl
pop
mov
adc
sub
and
lods
pop
cmc
xchg
movsb
pop
insl
jae
cmp
daa
jne
fwait
mov
lods
mov
push
imul
ds
mulb
xor
adc
cmc
push
mov
add
inc
push
into
inc
gs
lods
and
or
hlt
adc
mov
push
mov
sbb
xchg
dec
in
lods
pop
std
outsl
dec
xchg
jae
int
in
sbb
mov
in
jge
pop
cld
and
dec
ds
and
sub
sbb
loopne
sub
push
leave
fildll
sub
adcl
std
push
lret
sub
and
sub
out
fists
sbb
xor
cmp
aam
mov
loop
xor
ss
mov
lods
mov
and
sub
adc
sbb
cld
test
fdivrs
sbb
jo
xor
jl
push
mov
icebp
and
int3
xor
sbb
and
jmp
sar
jb
push
cltd
sbb
inc
dec
cltd
stos
pop
sub
ljmp
pop
pop
outsb
fsubrs
pop
outsb
xchg
mov
cli
popf
mov
mov
or
icebp
dec
add
mov
inc
push
and
leave
add
pusha
mov
repz
cmpsl
xchg
push
mov
das
stos
mov
add
inc
adc
cmpl
sub
inc
xchg
js
xor
and
pop
fisttps
aaa
sub
push
ds
push
ret
jmp
lock
xor
or
mov
adc
insl
sub
mov
out
jbe
xchg
lock
stos
nop
dec
pop
cmp
daa
sub
outsb
xor
pop
xor
fcomip
add
ss
pop
movsb
enter
xor
mov
cvtpi2ps
inc
push
es
js
and
mov
or
push
mov
cmc
cmp
std
push
subl
jle
pop
cld
fmuls
sub
stos
inc
adc
fnstcw
inc
adc
into
stos
add
sbb
push
mov
daa
mov
adc
mov
jb,pt
fcmovnb
cmp
adc
mov
int3
in
jle
inc
rolb
in
ljmp
pop
mov
inc
push
xor
adc
jno
inc
xchg
inc
cli
jno,pn
push
mov
sti
mov
adcb
insb
or
sbb
jo
aaa
mov
pop
addb
test
in
jl
outsl
jl
adc
movb
int3
mov
repz
xchg
addb
ja
aas
dec
pop
cmovge
pop
sub
cmp
shrl
cli
pop
jno
call
mov
or
hlt
xchg
mov
mov
mov
iret
jnp
sbb
sub
jmp
xchg
dec
cmp
js
fisubrs
ja
jne
xchg
insl
pop
aaa
dec
push
and
pop
pop
cmc
dec
cwtl
or
je
sarb
inc
jle
jmp
inc
into
jmp
push
mov
test
push
xlat
sbb
sub
and
lods
test
fnstenv
pop
lods
jle
in
mov
fcoml
into
mov
xchg
push
xor
push
aaa
fistpl
fs
loop
push
pop
sub
sub
mov
stos
jmp
pop
add
je
addr16
pop
add
xor
adc
add
mov
adc
addl
lds
adc
shll
adc
xchg
adc
flds
pusha
jo
push
mov
adc
cmp
push
ret
outsb
or
das
in
in
or
ljmp
idivl
int3
insl
out
les
aaa
sub
je
insb
lods
add
mov
sub
and
sub
cmp
mov
jg
push
repz
popf
neg
fisubs
pop
int
jl
pop
sub
push
xchg
add
push
mov
jecxz
gs
ror
lds
pop
movsb
movsb
ljmp
or
xor
aaa
cmp
pop
lret
xorl
je
ljmp
aad
push
dec
out
cmpsl
sub
loop
add
mov
mov
xor
aaa
sbbl
adc
cmp
mov
adc
sbb
or
sarl
jne
pop
mov
adc
push
gs
pop
dec
in
mov
add
and
pusha
xchg
mov
sarl
rcll
pop
pop
mov
test
sbb
loope
popa
insl
xor
lods
cmc
inc
stos
cmp
insb
into
ss
adc
test
xchg
les
jl
sub
insl
int3
icebp
out
out
mov
xor
xchg
jno
inc
mov
xor
sub
push
fdivrl
addr16
enter
xor
mov
jb
pop
mov
in
insb
mov
mov
loop
sbb
js
rol
add
mov
push
jb
adc
push
nop
nop
adc
mov
mov
push
fucomi
mov
pop
aaa
or
je
mov
inc
adc
test
dec
add
and
lock
rorl
jge
imul
xchg
push
adcl
cmp
mov
out
clc
xchg
out
sub
pop
enter
lcall
jno
adc
mov
mov
into
inc
daa
outsb
cld
jmp
icebp
pushf
cmp
fstps
pop
rorl
jle
jbe
loopne
leave
xorl
xor
xchg
or
sbb
vdivss
push
cmc
sbb
xor
inc
adc
xorl
push
movsl
sub
push
arpl
jecxz,pn
push
push
xchg
jne
pushf
pop
cmp
pop
sub
sbb
mov
iret
mov
mov
push
xchg
jbe
ljmp
xchg
inc
sub
orb
xchg
int3
out
inc
aaa
loope
jbe
cmpsb
add
lods
mull
ds
and
pusha
shll
xor
negl
cmc
or
push
cmp
mov
xor
adc
add
inc
lods
cmp
clc
jne
xchg
xchg
mov
or
push
fidivrl
adc
sub
xor
inc
xor
fidivl
cwtl
stos
icebp
fdivl
adc
clc
cmp
jmp
inc
adc
call
dec
aad
sub
add
sti
mov
aad
stos
std
and
fs
push
jecxz
ret
pop
nop
mov
jg
leave
das
push
stc
jmp
mov
add
jmp
enter
ficoms
sbb
int3
cmp
test
sub
and
into
mov
mov
mov
dec
sti
mov
fcom
in
out
rclb
repnz
mov
dec
dec
adc
dec
mov
push
mov
jo
mov
out
test
push
je
mov
loop
pop
out
jmp
xor
mov
push
sub
push
xchg
lea
mov
arpl
pop
and
mov
and
mov
xchg
xchg
ss
and
xor
shr
add
dec
cli
test
flds
lcall
decb
xor
loop
test
adc
das
sub
mov
in
inc
loop
dec
pop
add
inc
sbb
jnp
and
arpl
rclb
and
fcompl
and
mov
sub
movl
add
adc
xor
addl
cmpsb
xchg
fistl
mov
imul
sbb
imul
ds
sub
ljmp
dec
xor
add
dec
pop
jae
xorl
mov
repz
mov
leave
fdivr
jb
gs
aaa
enter
xchg
add
mov
add
xor
jl
fwait
das
xor
ljmp
popf
sbb
mov
mov
jmp
pushf
jmp
fistpl
add
jecxz
push
jnp
or
add
push
lret
les
mov
add
ljmp
xor
js
adc
cmp
and
arpl
sbbl
stos
pop
ss
pop
pop
push
and
cmc
sar
cwtl
rcll
rcl
adc
mov
adc
sbb
outsl
fwait
push
gs
ret
mov
xchg
fcoml
push
sbb
adc
jbe
xlat
mov
sbb
and
adc
sbb
and
ret
es
outsb
adc
jecxz
lret
fsubrp
je
jns
insl
mov
out
imul
pop
call
fisubrs
dec
test
leave
or
jecxz
insb
dec
pop
cmp
add
mov
inc
nop
sub
movsb
dec
les
cmp
lcall
out
sub
xchg
mov
dec
mov
cmp
jbe
daa
dec
inc
xor
add
outsl
mov
or
aam
in
push
mov
mov
mov
fdivrs
lds
clc
imul
sub
xchg
mov
mov
lods
xchg
push
sub
mov
xchg
mov
popf
dec
scas
popf
stos
adc
aaa
mov
sbb
xor
in
fdivp
sbb
aas
sub
notl
es
movsl
xor
sbbl
in
xchg
mov
jo
cmp
je
xor
into
or
lods
subb
push
dec
aam
imul
adc
fidivl
xlat
inc
aad
std
lods
stos
hlt
adc
mov
push
jl
sbb
rcr
lret
jmp
adc
addl
mov
fimuls
mov
pop
push
shrb
dec
test
not
loope
pop
call
dec
cmpl
aas
lods
divb
mov
fsubrl
test
and
fistl
test
adc
out
dec
lods
jne
xchg
sbb
fimull
sbb
pop
mov
adc
mov
pop
and
mov
aad
push
mov
sub
mov
add
jbe
and
cwtl
stos
push
rcrb
and
jne
adc
xlat
rol
or
pop
sahf
xor
dec
sbb
shl
jb
lock
cmp
out
add
call
jo
imul
jl
pop
outsl
add
in
fbld
jle
outsb
iret
pop
cmc
or
pop
into
in
adcl
int
mov
pop
aam
flds
fistps
roll
pop
xor
outsb
es
int3
insb
popa
pushl
imul
rcr
mov
out
ja
mov
aam
jge
push
into
mov
movsl
adcb
push
sbb
and
dec
in
sti
xor
mov
xchg
sbb
xchg
mov
test
addr16
shr
insb
inc
jle
mov
loop
outsb
mov
cmpb
xchg
stos
fidivs
movsl
mov
mov
sub
xorb
adc
shll
call
add
sbb
jecxz
stos
sub
push
and
mov
mov
nop
bound
loope
push
xor
and
insb
mov
jbe
push
mov
dec
jo
or
sub
movsb
mov
lods
nop
push
cmp
sub
into
pop
pop
movsl
fcoml
sahf
mov
scas
sub
cmp
mov
and
mov
adc
and
push
rol
js
jp
jo
loope
fdivp
inc
push
cmc
shl
push
sub
ret
mov
out
ljmp
les
add
push
add
scas
faddl
movsb
jns
xchg
pusha
mov
push
mov
int
sarl
insb
lret
mov
pushf
insb
aam
cmc
jmp
pop
add
xchg
addr16
sub
bnd
dec
sbb
imul
sub
into
push
xchg
je
cmp
insl
push
jle
gs
adc
ljmp
jle
sub
mov
ljmp
cmp
add
jge
rclb
sub
test
loop
xchg
sub
outsl
xchg
fsubr
xchg
sahf
push
orb
xchg
loope
cmp
sub
xchg
js
loopne
mov
dec
ret
mov
insl
mov
jmp
xor
push
inc
push
jb
aad
xchg
dec
ret
sbb
test
or
popa
cmp
sub
xchg
data16
mov
mov
push
and
adc
push
xorl
iret
ret
js
mov
push
popa
rol
pop
and
mov
std
cmc
mov
call
aaa
ljmp
mov
xchg
adc
jle
shrl
sub
adc
hlt
out
fst
sub
cmc
mov
std
push
das
mov
jl
mov
repz
bound
jo
jecxz
loop
sub
jp
test
cmp
test
jo
inc
adc
xchg
movsl
mov
insb
xor
jo
dec
mov
xchg
mov
flds
inc
pop
sub
enter
adc
js
xor
cmpsb
in
jl
clc
cmp
shlb
inc
xor
dec
jp
mov
stos
lock
xchg
cwtl
das
xchg
js
pop
sub
das
cltd
sbb
ja
add
cmp
cmp
jg
jmp
decl
or
lods
cmpsl
adc
pop
pop
xchg
add
lods
incl
jg
adcb
mov
add
outsb
jg
icebp
mov
sti
mov
push
lock
inc
mov
in
mov
and
inc
xor
add
mov
cmpsb
ror
fninit
por
lods
and
jmp
mov
icebp
push
enter
insl
rcrb
aam
push
and
lret
rcll
and
inc
repz
mov
data16
xor
add
adc
fs
fs
jl
dec
cmp
mov
adc
mov
jno
lods
sbb
xor
adc
push
xorl
add
jl
and
subl
fisubs
push
nop
cmp
leave
adc
push
loop
sti
push
add
adc
es
sarb
mov
in
data16
and
test
mov
mov
leave
sbb
mov
sti
imul
lods
data16
gs
ss
xchg
enter
push
cwtl
xor
fisubrl
and
stos
mov
es
add
add
push
add
call
adc
out
leave
rorl
lods
cmpsl
lcall
or
ja
jg
mov
call
enter
xor
mov
iret
add
adc
adcl
es
sar
xchg
add
jg
cmpsb
fs
jno
loop
push
les
sbb
inc
inc
sbb
test
and
push
and
jne
inc
insl
nop
push
mov
jle
adc
pop
xor
out
mov
loop
and
les
stc
push
in
jl
pop
adc
cld
sbb
fs
movsl
jp
jne
cmp
stc
xor
xor
mov
pop
aad
out
jle
sub
cmp
decl
and
loopne
and
notb
xchg
adc
mov
subl
popa
xrelease
xchg
icebp
inc
pop
push
or
lods
shl
in
pop
xchg
xor
sbb
sbb
gs
daa
adc
jmp
arpl
inc
insb
fldenv
insb
xor
xchg
mov
add
push
loope
sub
push
cmp
add
in
out
mov
and
xchg
ss
aad
cmp
fs
hlt
gs
js
push
mov
dec
aam
add
mov
pop
dec
in
movsl
lds
mov
cmc
push
adc
sbb
cli
scas
jg
mov
je
in
mov
push
or
add
mov
and
xor
push
or
cmp
xchg
inc
and
mul
and
push
xor
clc
sub
sarb
sub
cli
mov
add
jno
aas
and
leave
or
adc
jp
jne
cli
cmc
adc
out
push
jle
scas
pushf
xor
out
xchg
das
inc
rol
pop
shlb
jecxz
data16
jne
hlt
inc
int
std
jge
icebp
mov
jbe
push
je
mull
xchg
cmp
jg
xchg
aam
jbe
enter
test
ljmp
mov
js
sti
rolb
jecxz
test
push
fldt
clc
orb
in
fs
jae
int3
inc
mov
fldcw
enter
shlb
adc
repz
xchg
daa
scas
stos
adc
mov
mov
push
cmp
push
jmp
lcall
outsb
jl
sub
xchg
sbb
xchg
mov
mov
shrb
sub
rol
outsb
lock
xor
mov
pushf
adc
mov
sub
gs
ss
lods
enter
jmp
shrl
mov
xchg
test
pop
dec
adc
sbb
sub
push
cld
and
cmp
fildll
ljmp
in
das
cld
jp
or
fisubrs
mov
int
je
push
out
pushf
or
and
aas
js
out
into
arpl
daa
and
enter
iret
aad
fs
cmp
push
sub
xchg
sbb
sysenter
push
mov
rolb
sub
push
call
hlt
out
shrb
test
aam
insb
mov
icebp
imul
push
push
and
test
or
mov
mov
mov
or
ret
aad
mov
out
mov
pop
xchg
fcomps
leave
mov
adc
cwtl
int
repnz
mov
mov
pop
adc
or
adc
push
jbe
adcb
or
jl
jp
stos
jo
jmp
insl
mov
dec
pop
pop
enter
popa
hlt
cmp
dec
subl
popa
mov
inc
pop
adc
ret
xor
pop
mov
adc
jb
lret
pop
adc
mov
cmp
stos
clc
mov
lret
mov
mull
mov
xchg
ror
and
sarl
sbb
rorl
xchg
leave
push
insl
arpl
xor
rcrl
faddl
pop
add
adc
sub
adc
dec
xor
jb
mov
scas
sbb
filds
inc
movsl
jge
xrelease
adc
insb
decl
js
ljmp
push
int3
decb
mov
je
sbb
jp
xchg
std
dec
jne
andb
adc
pop
imul
mov
mov
adc
adc
out
lods
pop
inc
xor
fxch
test
jp
sub
stc
jg
and
mov
dec
mov
and
sub
in
dec
adcl
mov
or
jmp
jl
rorb
cmp
xlat
cwtl
repz
push
cli
aaa
jo
sbb
sbb
aaa
in
jecxz
adc
in
inc
dec
sbb
ja
call
sub
and
popf
dec
sbb
out
test
mov
pop
jg
es
adc
das
cmp
sbb
xchg
subb
mov
mov
jo
sbb
lods
jae
cmp
jp
stc
mov
ljmp
push
pop
cmp
xchg
test
cmp
xor
sbb
sti
cmp
gs
aaa
fsubrs
imul
cmp
xlat
pushf
cltd
cmp
adc
jmp
or
pop
daa
std
jae
pushf
out
mov
mov
sti
je
cmp
cmp
push
inc
cmp
or
insl
mov
or
jg
cmp
jbe
dec
cmpsl
aad
add
or
or
jl
sub
icebp
cmp
sbb
arpl
shll
or
mov
add
pop
mov
daa
mov
into
aad
adc
fs
rorl
nop
stos
cmp
inc
test
mov
push
int3
cmp
scas
lock
or
scas
mov
inc
cmp
lds
aaa
cltd
lret
stos
xor
icebp
cmp
dec
mov
sti
push
lret
push
sti
sbb
in
dec
cmp
loopne
ljmp
stos
pandn
mov
jae
leave
cmp
dec
xchg
jmp
pushf
repnz
xor
push
add
cmpl
jb
cli
fdivl
in
xchg
push
addr16
push
pop
or
mov
das
mov
dec
and
pop
movl
pop
lds
add
cwtl
or
add
dec
call
and
push
or
mov
outsb
shrl
adc
sub
mov
adc
in
xchg
mov
add
cmpb
xchg
jne
mov
imul
iret
pop
mov
addl
sahf
adc
flds
jnp
icebp
fisubrs
sub
jecxz
repnz
das
mov
es
xor
mov
inc
add
add
lods
and
test
adc
rorb
je
sub
movsl
fs
ja
pusha
xor
mov
or
scas
mov
rclb
lret
dec
xor
mov
xorl
adc
out
adc
xor
jl
loop
mov
sub
notb
sbb
adc
jbe
dec
scas
repz
ret
repnz
inc
adc
or
in
sub
dec
mov
ret
mov
into
aam
sbb
xor
rcrb
les
cmp
mov
imul
jbe
adc
out
adc
push
adc
xchg
imul
ss
das
mov
cld
ja
call
scas
mov
or
dec
fstpt
mov
mov
loope
mov
outsl
cmp
ficomps
pop
mov
lods
jnp
xchg
lahf
mov
stos
fsubl
mov
jne
jne
cmp
fildl
les
push
xchg
aas
ret
sub
sbbl
xor
adcb
inc
or
mov
xor
inc
xchg
lcall
adc
add
push
repnz
mov
clc
jnp
add
jecxz
nop
test
scas
adc
or
mov
dec
cmp
imul
stos
hlt
outsb
adc
jne
sub
and
push
mov
loop
xor
dec
mov
jp
xor
mov
push
imul
jbe
pop
xor
repnz
mov
xor
jne
cmc
adc
jecxz
and
mov
push
xchg
out
jns
or
add
je
adc
addr16
mov
jp
into
into
repz
insl
dec
ret
outsb
shl
fiaddl
adc
push
ja
add
jnp
repnz
and
mov
fnstsw
xlat
lret
sub
aas
cmp
mov
or
jmp
test
adc
lods
push
adc
pop
cs
or
lds
inc
xor
nop
push
mov
fildll
xchg
xlat
shl
xchg
clc
add
mov
xor
out
pop
xchg
mov
xor
scas
push
xchg
inc
mov
push
add
cmp
sbb
mov
out
inc
sbb
and
inc
dec
in
icebp
aaa
add
sub
arpl
stos
push
stos
mov
mov
lret
std
addr16
mov
jnp
enter
cmp
fildl
adc
cmp
xchg
push
les
in
int3
adc
lret
outsb
xor
inc
mov
iret
jns
mov
aam
pop
sbb
inc
sbb
xchg
sbb
sub
or
gs
jp
xor
inc
inc
cmp
pop
in
jb
push
outsl
adc
jecxz
je
mov
inc
cmp
or
mov
aaa
aad
inc
jge
lret
insb
pop
xchg
pop
jmp
insl
cmp
mov
cmp
dec
test
xchg
mov
xor
adc
inc
xchg
mov
xor
jmp
add
out
mov
lret
push
fldt
jmp
and
jle
xor
shll
sbb
pop
mov
xchg
adc
test
sub
mov
push
cmc
push
sahf
cmp
in
in
jo
jecxz
xor
dec
data16
pusha
mov
sbb
fcmove
push
aaa
mov
enter
mov
sub
push
in
jge
orl
dec
sbb
shll
aas
sub
add
adc
stos
cmp
cmp
gs
pop
mov
clc
ss
jle
test
outsb
xor
daa
jmp
in
xchg
sbb
test
insb
sub
fwait
sub
adc
aas
cwtl
cvttps2pi
xor
lret
aaa
aad
std
cmpsl
ret
outsb
sub
jmp
leave
adc
add
orl
jge
sub
cmp
mov
push
movsl
push
push
push
and
jg
and
stos
mov
mov
nop
sub
jnp
in
jbe
mov
cltd
ret
cmp
xchg
std
add
in
imul
into
and
xchg
aam
push
stos
adcl
adc
jl
sub
cmp
push
sbb
loopne
xor
adc
incb
mov
sbb
dec
and
addl
scas
leave
cli
test
insb
mov
push
stos
xchg
push
stos
test
fcoml
subl
aaa
les
ss
bound
cmp
sub
sbbl
adc
cmp
and
push
dec
scas
ret
add
dec
loope
adc
jbe
fisubrl
inc
mov
shr
and
mov
shll
scas
fldt
or
jnp
mov
mov
and
daa
dec
cld
out
or
jp
cmc
cmp
test
xor
xchg
scas
adc
or
leave
test
addr16
adc
push
sbb
rorl
loop
daa
dec
ficompl
aam
push
pop
das
movsl
std
adc
xor
mov
xchg
xor
sub
int
mov
in
mov
in
rclb
call
xor
inc
stos
mov
cmpsl
ret
insl
dec
adc
pop
inc
mov
xchg
stos
cmpsb
jg
cmp
pusha
cmp
pop
mov
jns
and
icebp
push
cmc
gs
out
jp
jmp
sbb
mov
push
cwtl
sub
iret
xor
xor
in
mov
inc
dec
ds
aaa
push
roll
sbb
setno
neg
dec
xchg
pop
jno
sub
mov
lock
push
aad
xor
adc
cmpsl
sbb
add
xchg
dec
jmp
adc
into
and
and
imul
shlb
mov
add
pop
lods
pop
out
inc
mov
sahf
sarl
mov
jmp
aas
mov
sbbb
adc
fildll
cmp
xchg
mov
sub
mov
mov
mov
in
xor
push
adc
xchg
xchg
add
out
and
aaa
or
cmpsb
and
sarb
mov
mov
ds
inc
movsl
xor
in
bound
mov
repz
insl
inc
adc
pop
mov
pop
jmp
repnz
insl
mov
mov
test
sbb
or
stc
push
xor
push
pusha
push
ja
test
push
inc
mov
push
lods
subb
and
sarl
mov
or
imul
aaa
xchg
xor
push
mov
mov
shll
xchg
pop
das
mov
mov
xchg
into
mov
adc
jmp
in
mov
jmp
mov
dec
pop
les
imul
inc
adc
insl
arpl
pop
adc
inc
hlt
mov
out
aam
div
das
ret
mov
mov
fcmovne
mov
mov
ljmp
xor
adc
clc
sub
ficoml
imul
mov
xchg
add
inc
std
dec
divb
pop
add
fistps
in
lahf
cmpl
mov
daa
push
jno
dec
push
xorb
hlt
cltd
sub
addb
mov
dec
jge
pop
dec
push
loopne
or
test
add
jmp
xchg
in
out
fildll
xchg
inc
inc
or
in
out
jne
addl
decb
jbe
mov
xchg
fists
or
loopne
mov
xor
sub
jo
cmpb
xchg
and
out
mov
adc
lret
fcmovbe
addr16
lea
repz
in
adc
pusha
mov
cmp
push
push
jb
addb
sub
mov
jge
jbe
sbb
out
scas
shl
jo
and
ret
adc
xor
xchg
hlt
sahf
adc
mov
mov
and
mov
shll
sub
imul
mov
fmulp
in
in
dec
xlat
loopne
push
xchg
mov
cmp
fstl
add
pop
into
mov
jo,pt
inc
xor
lea
psubq
cmpsb
sub
push
je
xchg
pop
cmp
xor
jb
xor
sbb
add
adc
sbb
nop
inc
mov
dec
fcmovnb
cmc
jg
jle
cmp
xor
aaa
pop
adc
fmuls
outsl
es
scas
push
push
push
inc
mov
push
or
mov
idivl
add
adc
push
ja
aas
inc
and
pop
cmpl
adc
fwait
jne
push
xchg
out
cmp
mov
loope
push
test
daa
outsb
xchg
stos
mov
outsl
ss
subb
out
icebp
fs
jl
inc
sbb
inc
loope
mov
xchg
ss
lods
lea
into
lcall
adc
dec
jae
xchg
mov
mov
notl
jecxz
ja
insb
sub
insb
orb
addr16
push
ficompl
cmp
jmp
xchg
fnsave
jmp
jne
jo
and
cmp
pop
dec
pusha
xchg
ja
pop
scas
in
inc
add
adc
push
in
xchg
xor
bswap
ret
mov
or
js
mov
mov
stos
mov
cmp
dec
lea
sub
xchg
addb
fidivl
mov
je
stc
int
lret
ss
sahf
movsb
xor
push
mov
test
cmp
mov
jp
ljmp
add
pusha
cmpsb
and
rcll
shlb
outsw
inc
cmc
cli
gs
jne
xchg
sbb
unpcklps
jno
push
nop
ds
mov
repz
ds
cmp
dec
movsl
fs
lods
pop
dec
stos
jp
sub
jecxz
ds
jp
shlb
lds
mov
out
pop
in
repnz
jmp
bsf
cmp
cmp
jne
dec
cmp
adc
ret
or
repz
pop
popf
mov
xchg
xor
ficoml
xlat
andl
and
jb
aad
mov
sub
dec
push
xchg
stos
push
adc
mov
ret
jl
xor
inc
push
das
fists
or
imul
cmp
repnz
or
mov
insb
insb
sbb
inc
mov
rcr
outsb
add
sbb
mov
pop
sbb
je
enter
clc
inc
enter
adc
xchg
add
jecxz
movsb
xor
int3
jae
ret
fwait
sub
shrl
outsb
out
jo
push
mov
pop
mov
pop
into
dec
call
mov
sub
clc
xchg
int3
inc
out
dec
das
in
enter
aas
xor
push
arpl
enter
hlt
das
aas
in
fidivl
int3
or
andl
sbb
xchg
xchg
int
fcmovne
xor
fdivrl
adc
lahf
and
cs
in
fldcw
dec
outsb
sub
jnp
adc
sub
sbb
rcrb
pop
leave
ljmp
std
data16
lcall
cmp
in
pop
mov
adcl
sbb
pop
pop
mov
hlt
and
jp
insb
icebp
loope
xchg
cltd
jb
filds
adc
lcall
push
ret
cmc
dec
scas
outsl
aaa
push
adc
clc
stos
or
pushf
dec
outsb
jo
or
test
outsl
jbe
in
into
into
mov
imul
outsb
out
dec
loope
mov
and
mov
pop
rcrl
cld
or
push
imul
mov
sub
and
and
jbe
xchg
mov
push
aaa
stos
nop
pushf
push
cmp
or
adc
xor
arpl
mov
mov
mov
xlat
dec
fistpll
xor
hlt
fcmovbe
je
mov
imul
push
clc
int
add
lock
sbb
push
mov
adc
dec
mov
popf
mov
dec
aad
fdivr
int3
mov
xor
fimuls
jo
adc
pusha
ljmp
jle
fidivrl
jb
sub
pop
push
push
jecxz
stos
jmp
ds
in
aas
cmp
jo
pop
mov
add
push
std
fcoms
lods
aam
fidivl
adc
mov
push
dec
es
ja
out
jo
xor
out
cmpsb
sub
jle
and
js
movb
xchg
in
sbb
sbb
je
sub
xor
in
pop
and
add
rcl
and
push
mov
dec
xchg
xor
jbe
mov
js
mov
fbstp
xchg
fildll
adc
xchg
pop
mov
ljmp
mov
sub
in
and
sub
push
jns
sbb
xor
outsb
outsl
call
mov
decb
das
stos
xor
sub
and
sub
and
mov
and
xchg
or
lock
clc
gs
pushf
adcl
push
in
xor
repnz
dec
jo
adc
scas
out
mov
dec
pop
dec
leave
movsl
in
xor
divl
pop
xlat
adc
jmp
push
fs
lods
sub
mov
shlb
xchg
mov
lret
lea
in
je
or
popa
xchg
adc
aas
lods
dec
adc
xchg
sub
and
xchg
or
mov
jg
push
je
cli
push
inc
cltd
outsb
sbb
mov
or
adc
xchg
adc
push
pop
insl
jmp
mov
adc
cmc
jmp
clc
leave
lock
push
mov
cmp
in
cmp
mov
cwtl
xor
adc
or
je
cmp
gs
stc
inc
adc
test
enter
mov
ds
insl
fstpl
ret
jmp
mov
jge
les
insb
or
push
inc
jnp
bound
jle
jl
push
sub
inc
mov
sub
test
jns
and
cs
xor
ret
mov
sbb
jae
pushf
outsl
mov
mov
mov
pop
jmp
cltd
inc
or
xchg
dec
loope
or
sub
jecxz
mov
das
adc
lds
out
mov
stos
roll
loopne
bound
adc
ljmp
rolb
es
sbb
or
ja
fistps
mov
aad
add
sub
int3
mov
mov
rol
mov
or
jnp
push
push
or
test
sub
or
cwtl
rcrl
mov
imul
push
and
movsb
xchg
faddp
push
out
movsl
push
mov
xchg
mov
jg
adc
sub
cmc
fiadds
sbb
dec
popl
push
mov
cmp
out
and
into
test
loopne
into
incb
repz
into
cltd
push
das
mov
and
lahf
xor
pop
mov
mov
cmpsl
je
pop
jp
fidivrs
mov
inc
in
das
and
cmp
std
mov
dec
add
sub
sbb
jbe
push
popa
out
ljmp
int
lock
inc
jns
push
jl
pop
mov
jbe
mov
xchg
inc
xchg
mov
add
mov
xchg
mov
push
xor
pop
ss
aas
pop
push
push
pop
push
jmp
outsl
sbb
gs
scas
lods
ret
arpl
adc
dec
inc
cmp
pop
imul
xchg
jo
sarl
fisubrl
adc
push
cmp
inc
idivb
push
and
hlt
add
lcall
push
pop
mov
xorl
or
push
sub
loop
xlat
fbstp
push
es
cmpsb
add
shr
xor
jb
mov
pop
pop
addr16
out
ljmp
ds
push
mov
aas
adc
jecxz
push
sbb
inc
ss
jp
roll
in
sbb
rcrb
clc
xchg
test
or
jo
scas
cmp
push
mov
jbe
leave
sbbl
hlt
dec
mov
lods
jne
add
repz
iret
sarl
bound
sahf
adc
add
icebp
imul
fdivs
jmp
jp
mov
ror
fistpl
inc
pop
test
push
ret
inc
movsl
pop
lock
incb
sahf
push
inc
imul
xchg
jge
sub
sbb
subl
push
movsl
out
mov
loopne
mov
insb
add
cmp
adc
pop
cmp
mov
cmc
mov
cld
pop
adc
cwtl
push
pop
inc
sub
push
int3
ss
int
cmpl
mov
mov
js
jp
ljmp
rcl
push
scas
shrl
cs
fisubrs
xchg
jno
xor
dec
insb
adc
sbb
mov
clc
daa
mov
xchg
mov
scas
push
out
inc
xlat
push
add
mov
dec
ret
adc
jae
ja
fwait
rcll
push
adc
cmpw
movsl
subb
xlat
xchg
inc
out
push
jns
mov
adc
leave
or
inc
loop
fldt
faddl
enter
add
mov
xchg
mov
inc
into
adc
push
js
push
loope
test
and
ffreep
sub
ja
ror
clc
or
mov
mov
pop
mov
jg
push
das
int3
jl
mov
adc
xorl
cmp
outsb
mov
xchg
xor
scas
int3
push
xchg
sub
leave
pop
lea
pop
mov
mov
sbb
xor
mov
sub
mov
outsb
dec
xlat
sub
xorb
lcall
sub
repz
mov
mov
pop
enter
insb
loope
mov
mov
ss
mov
push
loopne
jg
sbb
mov
sub
test
clc
lret
add
lock
scas
and
push
inc
ja
push
stos
adc
andb
fsubrs
das
ret
push
ljmp
and
xchg
or
xchg
pop
xor
adc
sub
imul
lods
fucom
sub
push
adc
push
jmp
xor
inc
push
and
lret
adc
in
mov
mov
ljmp
loop
or
repnz
bound
insl
imul
jno
ret
or
icebp
outsb
inc
movl
test
ret
popf
dec
arpl
pop
mov
xor
adc
and
out
sbb
and
stos
cld
int3
fdivs
icebp
and
dec
insl
adc
pop
leave
dec
adc
xchg
dec
sbb
xchg
push
ljmp
jle
mov
les
mov
es
xchg
mov
popf
daa
iret
ret
mov
enter
test
movsb
inc
adcb
xor
sub
xchg
jl
add
xchg
and
loope
sbb
aas
xchg
cmc
inc
push
inc
xchg
xor
cmp
push
mov
xchg
xor
push
pop
dec
or
in
hlt
mov
or
ja
push
mov
jb
mov
jo
mov
mov
inc
fstps
cltd
rorb
mov
sbb
sahf
pop
js
ja
pop
jbe
and
sub
in
xor
out
fstps
cs
mov
xchg
ljmp
decb
bnd
mov
cmp
das
or
cmp
mov
int3
add
ja
out
or
shlb
pop
lods
adc
adc
ljmp
aaa
insl
mov
jge
in
rcll
hlt
push
into
xchg
sbb
add
adc
mov
out
mov
clc
mov
inc
dec
test
mov
insb
in
in
mov
cwtl
shr
ja
fistl
clc
shll
ret
dec
daa
mov
adc
xor
adc
stos
lret
xchg
mov
push
inc
addb
cmp
jmp
test
xor
dec
mov
cmpsb
sbb
jmp
inc
push
or
add
jp
imul
mov
ljmp
jp
or
cmc
mov
out
inc
and
imul
insl
fdivl
in
popa
cmp
loopne
stos
enter
xchg
add
lahf
fistl
mov
aaa
ljmp
inc
cmpsb
dec
in
inc
dec
bnd
xchg
mov
hlt
cld
xchg
popa
rcll
push
jmp
push
lret
adc
mov
imul
insb
jnp
sub
pop
mov
loop
xchg
adc
xchg
cmpsb
aam
sti
mov
fs
jecxz
dec
inc
and
pushf
sub
in
mov
xor
mov
adc
mov
pusha
int3
pop
in
jo
and
mov
push
or
jecxz
add
or
and
xor
in
jbe
mov
adc
adc
xor
lahf
mov
xchg
or
jg
ljmp
addr16
sbb
aad
sub
mov
cmp
and
sahf
fsubrs
sbb
xlat
xchg
add
cmc
orl
inc
stos
xor
add
rcrl
ja
mov
fwait
or
lock
movsl
or
loope
movsbl
scas
adc
lods
add
sarl
xchg
mov
pop
jbe
pusha
fdivrs
loop
lds
jle
push
pushf
insl
jno
inc
inc
xchg
pop
fistl
xor
icebp
insb
in
fs
xchg
leave
xchg
dec
xchg
mov
out
sbb
xchg
je
les
xchg
cmpsl
lea
lahf
insb
imul
repnz
mov
jb
mov
aaa
aas
push
jmp
aas
cld
fucomp
pop
into
aad
sarb
jle
mov
js
cli
fwait
mov
out
out
into
push
mulb
addr16
subb
pop
jnp
rcrb
das
dec
into
aas
loopne
and
jbe
adc
lahf
xchg
push
inc
xorl
adc
aam
mov
sub
pop
push
in
ds
dec
aad
mov
ret
mov
pop
cmp
daa
pusha
mov
iret
test
xor
adc
xchg
pushf
xor
jns
cmp
repnz
in
push
jg
aaa
xor
aaa
lea
int
les
ret
xchg
add
add
xlat
fs
je
lock
sbb
outsl
push
mov
mov
xchg
mov
and
mov
xorl
ja
hlt
arpl
cld
inc
or
jbe
mov
fdivs
fists
in
int3
hlt
movsb
lret
int
sbb
fadds
adc
xlat
ret
cwtl
jecxz
rcl
aaa
sahf
jecxz
sub
orl
data16
push
pop
push
aaa
mov
pop
or
std
je
adc
jp
adc
ds
arpl
xchg
mov
adc
cmc
add
lcall
shrl
addl
mov
lods
dec
and
ret
xchg
dec
popf
and
adc
sbb
dec
cmp
scas
mov
out
push
mov
aam
mov
jle
xchg
fdivrs
insb
inc
adc
nop
jle
xor
ss
jbe
adc
jle
push
add
insb
mov
in
outsl
scas
jge
sbb
mov
popa
or
or
mov
adc
mov
lea
push
dec
xchg
xchg
popf
out
fxch
cmpsb
add
mov
jae
ds
push
cmpl
mov
jg
or
mov
push
mov
mov
jecxz
pop
adc
dec
addb
pop
adc
mov
lock
push
mov
aam
cwtl
adc
enter
jo
mov
mov
mov
lahf
pop
mov
and
jl
mov
xor
adc
or
test
out
lret
test
jo
cmp
xchg
and
stos
test
push
repnz
mov
test
sub
mov
data16
cmpl
push
adc
pusha
and
leave
stos
inc
dec
shlb
jle
pop
jle
fwait
push
ds
adc
lods
lods
and
mov
bound
mov
fwait
xchg
lea
out
cmp
mov
pop
leave
xchg
jle
cld
push
and
movsb
pop
js
mov
insl
add
push
movsb
leave
dec
pop
lahf
or
or
and
xchg
jle
jbe
decl
push
push
push
inc
sub
insl
adc
in
fucomip
cmp
fwait
sub
push
icebp
out
sub
cltd
xor
stos
out
fdivs
mov
cwtl
mov
fildll
scas
sub
mov
sbb
nop
jno
inc
jmp
lods
xchg
popf
lea
fidivs
fs
adc
sbb
or
lods
adc
mov
sbb
popa
fstpl
pop
sub
ds
mov
mov
ss
mov
jmp
inc
mov
das
pop
jl
and
fwait
jmp
stc
ss
xchg
lods
mov
adc
scas
adc
pop
mov
adc
ljmp
xchg
add
ret
jge
pop
jg
sub
lods
loope
push
sarb
sub
jge
shrl
imul
mov
test
fwait
and
inc
adc
cltd
insl
sarl
inc
into
insb
or
adc
and
xchg
mov
sub
cmp
out
js
fs
jbe
mov
into
scas
adcl
mov
jo
sub
and
pushf
mov
dec
and
jg
loope
adc
xchg
add
js
out
in
inc
inc
icebp
and
jnp
test
scas
insl
add
nop
jle
pop
pop
pop
or
adc
test
ds
fimull
int3
push
xor
mov
xor
push
xchg
inc
inc
cmpb
mov
stos
lods
lret
inc
ret
mov
jmp
adc
shl
aas
cli
adc
push
insb
inc
lods
aaa
mov
das
xchg
sbb
adc
jnp
xlat
jg
dec
xor
out
inc
imul
outsb
pop
push
cmp
inc
js
sub
push
subb
lods
jle
xchg
push
mov
mov
out
adc
fwait
lock
xor
jg
jp
testb
sbb
cs
cmp
mov
push
addr16
sbb
dec
shrl
ret
xor
adc
jmp
push
fsubrs
mov
addb
sti
lret
and
inc
test
inc
jle
inc
cwtl
scas
sub
andb
add
negb
pop
xchg
cmp
or
insl
ja
dec
sti
xor
aad
mov
jecxz
jno
in
mov
scas
inc
loope
das
test
pop
scas
ja
adc
inc
mov
sbb
sub
test
lcall
out
jl
mov
mov
pop
cltd
scas
mov
xchg
mov
jmp
mov
jnp
xlat
push
inc
mov
lods
xchg
arpl
cmc
test
push
fisttps
add
rcl
pop
jmp
xchg
nop
cwtl
and
xor
pop
rcrl
test
repz
dec
inc
shll
ret
enter
jl
ret
testl
jno
adc
cs
sti
cld
std
pusha
jnp
inc
sarb
enter
rorl
outsl
scas
or
sub
sub
sub
imul
imul
les
mov
aaa
mov
or
adc
enter
dec
and
test
enter
jno
push
subl
fadds
fs
test
push
xor
lods
dec
or
mov
sbb
dec
sbb
adc
jo
push
inc
mov
nop
inc
lds
jge
nop
pop
ret
mov
xor
sub
mov
adc
or
bound
and
test
lods
mov
sbb
loope
adc
jbe
adc
pushl
hlt
fsubrs
cmp
sub
or
xchg
aam
add
sub
mov
mov
es
imul
jle
lods
jg
push
test
mov
push
subl
test
inc
adc
and
or
dec
sub
bound
inc
xchg
cmp
ss
movsl
outsb
push
cmc
adc
cmp
mov
jno
jns
pop
adc
inc
and
pop
cmp
scas
xchg
icebp
stos
xor
inc
jecxz
jns
jo
push
mov
fcompl
fldcw
mov
movzwl
stc
fstpl
lcall
ljmp
int3
or
addr16
push
outsb
mov
jle
mov
adc
mov
mov
clc
dec
ret
xchg
or
sti
sahf
fwait
mov
aaa
imul
mov
lea
xchg
test
sbb
xor
mov
sbb
cmp
imul
lea
xchg
out
dec
add
or
and
sub
imul
imul
jno
fcos
aad
jmp
push
or
xchg
xchg
je
mov
in
into
outsl
or
xchg
decl
ss
in
or
lcall
jnp
fnstenv
pop
dec
sbb
in
mov
pop
mov
loope
sub
ret
loop
ds
sbb
jnp
and
cmp
shrl
mov
mov
xchg
stos
in
jmp
pushf
push
mov
cli
fdiv
sub
cmc
push
push
shlb
xor
mov
mov
scas
mov
mov
dec
adc
cmpl
xchg
and
push
and
data16
subb
insb
mov
pop
pop
das
nop
in
mov
imul
aas
scas
add
out
cmp
adc
mov
pop
in
add
loop
dec
lods
sub
cmp
ds
pusha
xchg
fadd
jb
mov
lcall
mov
pop
inc
and
inc
mov
add
in
fistpll
inc
xor
shrl
mov
pop
xor
add
ret
jb
mov
out
cmpb
mov
int3
cmpsl
rclb
ss
aad
sub
adc
cmp
pop
popf
xchg
xchg
mov
xor
daa
popa
sub
loopne
mov
cmp
mov
idivl
or
inc
or
mov
sub
lods
and
cs
sbb
lcall
push
fmull
ljmp
sub
cli
movsb
sbb
push
jle
xor
out
cmp
ret
dec
jae
cmpsl
sbbl
xor
adc
mov
out
int
movsb
inc
xor
mov
daa
mov
add
mov
fwait
sub
or
lock
sbb
pop
cmovl
dec
cmc
inc
outsl
push
stos
aad
fcmovnu
cmp
mov
es
pusha
mov
mov
ret
cs
aad
outsl
mov
in
jl
xchg
mov
push
repnz
es
rorl
call
mov
push
mov
lea
sbb
idiv
mov
jmp
mov
ljmp
iret
cmp
in
sti
inc
je
movsl
popa
jp
scas
vunpckhps
dec
xchg
fnstenv
call
in
cmpb
ss
dec
pop
inc
push
in
in
ret
adcl
mov
shrb
jmp
mov
mov
mov
imul
inc
stos
mov
jmp
mov
adc
or
lea
outsl
add
mov
ret
lret
fadds
xchg
xor
xchg
lcall
push
aaa
mov
push
pop
inc
adc
xchg
sub
dec
es
fs
add
js
lods
outsb
mov
adc
imul
or
pop
fsubs
fwait
arpl
pop
mov
mov
lea
cmp
sbb
cld
jp
mov
cli
jnp
push
movsl
cmp
pop
stos
mov
mov
mov
mov
jle
pop
jle
decl
incb
push
daa
notl
or
adc
xchg
inc
xor
sub
nop
mov
sbb
sub
popf
iret
push
mov
dec
hlt
movsl
mov
sub
lret
add
adc
push
inc
pushf
aad
mov
sbb
rclb
lock
lods
pushf
cmpb
push
mov
je
adc
js
test
cmpsb
bound
shrl
cli
cmp
push
subb
mov
mov
dec
mov
jmp
dec
cld
push
add
and
jp
mov
and
add
in
lods
xchg
jno
loope
lahf
sub
and
adc
mov
pop
ss
ds
and
and
adc
xor
jnp
mov
and
lods
push
add
mov
and
mov
mov
or
shl
adc
xchg
into
lret
sbb
lock
orl
xacquire
rorb
addl
mov
aam
xor
cld
sbb
cltd
sbb
stos
adc
xor
out
mov
adc
mov
jle
es
popf
xchg
pop
xor
adc
es
leave
xchg
les
sub
sub
ret
lock
adc
fwait
les
into
xchg
xchg
ja
int3
push
adcb
icebp
add
sub
fldt
in
sbb
xchg
insb
and
xchg
mov
adc
or
push
fisubs
ret
jne
push
pusha
std
cmp
leave
and
xchg
sbb
xchg
jle
out
scas
test
mov
es
cmp
sbb
pop
addb
in
leave
lcall
adc
sub
mov
js
jns
clc
add
test
add
xchg
sub
add
iret
fwait
jno
pop
xor
mov
jl
shl
jmp
add
dec
jecxz
sub
push
dec
aad
cmpsl
jge
or
fisttps
dec
fimuls
fcomip
ljmp
pop
cmp
jo
pop
outsb
into
adc
push
xchg
lret
lods
adc
mov
sti
xchg
hlt
insl
adc
inc
jle
mov
jge
push
lret
and
xchg
mov
xchg
push
push
adc
lret
mov
push
insb
xchg
jo
inc
mov
jnp
in
out
push
popf
sbb
into
inc
pop
ret
addl
cli
push
in
jp
xchg
imul
leave
add
ret
mov
xchg
push
cmp
ret
stos
das
xor
mov
mov
mov
inc
mov
mov
mov
xor
lcall
fcom
push
sub
push
shlb
aam
fsubrs
aas
mov
inc
pop
ret
jnp
hlt
mov
dec
ljmp
xchg
ss
jb
into
pop
cmp
or
xchg
xor
mov
mov
sbb
mov
mov
xchg
xor
movsb
ret
pusha
mov
xchg
out
mov
in
add
jg
insl
lods
xchg
in
cmp
sub
mov
cmc
mov
cs
pop
add
or
mov
lahf
mov
imul
enter
insl
jns
xchg
mov
or
push
scas
jmp
xor
jge
int3
mov
or
or
inc
lret
cmp
pop
js
pop
cli
jg
mov
adc
shr
dec
out
or
nop
imul
ja
cld
ss
cmp
sbb
popa
inc
daa
pop
mov
pushf
pop
push
xor
popf
loop
mov
jl
addr16
mov
ss
int
fimuls
adc
mov
mov
pop
pop
movsl
test
mov
es
pop
xor
insb
add
add
and
adc
mov
inc
je
pop
ss
dec
mov
xchg
stos
sub
ret
std
stos
mov
in
add
mov
lods
push
fwait
loope
neg
jp
push
sub
lcall
dec
cmp
out
pop
icebp
mov
xchg
in
leave
sub
cmp
pop
inc
push
insb
data16
repnz
inc
pop
mov
call
xor
push
sub
insl
pop
mov
push
enter
adcl
adc
sbb
ljmp
and
cmp
or
aad
mov
repnz
mov
mov
rorl
adcb
aad
test
in
pop
jno
push
push
popf
xor
lahf
lret
mov
rclb
add
xorb
lahf
in
pop
xchg
push
inc
add
xor
push
add
lds
out
mov
fdiv
adc
jbe
ret
loope
out
xor
adc
mov
cwtl
cmp
aas
cltd
insl
out
ret
adc
inc
es
dec
mov
leave
lds
cmp
jl
stos
push
jne
sahf
test
or
clc
dec
add
adcb
ret
push
mov
pop
jge
pop
stos
push
lret
pop
and
aaa
dec
adc
jne
add
stos
push
push
adc
inc
jmp
mov
cld
popa
mov
xlat
imul
pop
repz
cli
clc
xor
pop
dec
push
adc
jmp
outsl
jb
outsl
or
das
fistps
push
js
ds
into
mov
xchg
push
mov
jbe
push
clc
in
jl
and
cmp
mov
xchg
xchg
push
mov
push
jg
mov
adc
outsl
loope
std
add
xlat
cmpsl
test
push
push
out
dec
lods
fnsave
sahf
scas
adc
push
adc
xchg
ret
mov
pop
ja
and
and
pop
sbb
jmp
fdiv
sbb
cmpsb
dec
inc
hlt
fs
int3
loopne
or
mov
mov
jne
pop
push
mov
in
pop
push
cmpsl
rclb
and
xor
and
dec
xor
enter
mov
les
jge
xchg
adc
fstl
sub
call
fwait
xor
ljmp
les
cmp
fildl
push
push
test
lods
inc
cmp
or
insl
adc
mov
xchg
xlat
in
jb
add
push
xor
jge
icebp
subl
xor
pop
push
sub
jae
cld
ret
sahf
mov
push
call
adc
pop
mov
xor
scas
push
shl
mov
jecxz
inc
stos
fsubl
ds
fs
mov
inc
lods
test
aas
mov
sub
hlt
jmp
adc
into
xchg
mov
push
mov
xchg
hlt
mov
adc
popa
inc
cmp
xchg
cmpsl
insl
movsl
imul
iret
mov
adc
inc
dec
push
mov
add
adc
mov
xchg
ss
rolb
jl
mov
or
jnp
sbb
sahf
sub
mov
cwtl
lock
jmp
pop
xchg
add
aad
enter
push
and
xchg
ss
mov
imul
sub
pop
scas
mov
ljmp
inc
jmp
int3
ljmp
std
ljmp
or
mov
and
and
dec
sub
je
sub
mov
aad
or
loopne
out
adc
mov
mov
sti
mov
xorl
in
jge
jmp
xchg
and
xchg
or
mov
adc
icebp
jle
inc
adc
cmpsb
xor
loop
xchg
inc
cwtl
out
mov
jno
and
pslld
in
pop
fsubr
pop
xchg
lock
jns
xchg
jne
decb
test
scas
xchg
or
cld
test
pop
cld
sub
popf
imul
lret
jmp
jl
sub
mov
sbb
adc
popf
adcb
pop
aas
stos
out
fcoml
inc
bound
out
sub
nop
icebp
es
jns
enter
stos
lock
sbb
sub
push
sbb
clc
or
dec
gs
xorb
pushf
jno
xchg
dec
jmp
shrb
xchg
adc
or
xchg
stc
push
jmp
scas
pop
adcl
cvtps2pd
scas
out
mov
int3
mov
in
pusha
inc
add
in
leave
sbb
mov
orb
adc
mov
inc
sarb
add
xchg
js
inc
pop
xchg
jb
ret
cld
push
jecxz
sarl
scas
adc
cwtl
and
or
pusha
aaa
jmp
loop
pop
fimull
jb
iretw
xor
pop
and
xchg
or
cld
fs
outsb
sub
xchg
cmc
jp
dec
pop
mov
pop
dec
and
pushf
pop
ja
adc
jge
xchg
add
cmpb
adc
jne
ds
rcr
mov
and
push
ja
inc
inc
adc
mov
aad
dec
mov
je
insb
scas
adc
mov
nop
jp
push
mov
push
jo
mov
or
cld
xor
mov
stos
cmpl
pop
shll
mov
hlt
mov
pop
or
pop
pushf
lock
shl
lods
inc
lds
repnz
lock
les
xchg
jb
outsb
add
push
cmp
sub
std
ret
mov
pop
jmp
fdivl
xlat
push
xor
test
stos
sbb
ljmp
gs
pop
int
cmp
add
clc
stc
adc
or
insb
hlt
fiaddl
sub
jb
daa
into
cltd
aas
adc
or
lret
cmp
cmc
aaa
mov
loop
mov
adc
frstor
mov
adc
cmp
xchg
or
cld
xchg
mov
xchg
xor
imulb
shrl
cmp
and
jo
xor
or
xor
push
shrl
mov
adc
mull
lret
sub
and
lcall
xchg
outsl
std
mov
imul
lods
xorb
cld
dec
cli
adc
ja
jb
loop
imul
pop
mov
add
xchg
cli
daa
sub
xor
ja
xorl
push
pop
push
mov
push
sbb
sbb
mov
pusha
dec
fdivl
mov
pop
xcrypt-ecb
cmpsl
mov
jnp
test
ret
push
jl
mov
jecxz
mov
mov
sbb
xlat
xor
lcall
adc
ficomps
scas
std
shrb
pop
jmp
add
jne
dec
nop
and
ljmp
mov
xchg
add
inc
stos
icebp
or
fildll
or
mov
cmc
push
hlt
or
cmp
mov
jl,pt
sub
mov
mov
push
dec
sub
les
mov
mov
mov
in
cs
push
mov
jmp
dec
repz
mov
mov
or
mov
or
or
adc
sbb
jecxz
insb
mov
sahf
push
in
and
adc
sub
jb
add
mov
outsb
inc
dec
sub
iret
in
inc
mov
sub
ja
hlt
fsubl
inc
in
fsubrp
sub
lods
jb
xchg
jo
pop
add
add
loop
inc
shlb
insl
dec
jl
pop
popa
cltd
insl
js,pt
arpl
push
push
subl
ds
insl
in
ret
imul
icebp
adc
inc
sub
incl
iret
stc
das
cs
xor
lods
out
add
lret
out
inc
mov
sub
jmp
insb
adc
cmp
pop
jg
xor
xlat
lods
xchg
jmp
add
xor
adc
in
test
iret
das
mov
in
push
outsb
push
test
out
adc
dec
xchg
adc
cmp
jns
adc
enter
lods
cwtl
test
sti
stos
pop
pop
or
xchg
jge
add
dec
fwait
and
adc
dec
test
xlat
outsl
lock
jnp
push
iret
mull
mov
jge
fchs
aam
push
mov
test
pop
shll
fstpl
adc
inc
icebp
icebp
sub
add
ja
xchg
sbb
rorl
andb
test
stos
xor
sub
xchg
xlat
imul
test
cmp
pop
dec
inc
pop
adc
sbb
mov
cmp
and
and
loope
inc
int3
cld
sub
xor
cmpb
ret
cli
xor
jle
ljmp
out
xor
out
xor
xor
adc
adc
cs
stc
dec
notb
pop
and
ja
inc
lret
sti
mov
sub
popf
dec
imul
lods
mov
adc
ljmp
movsb
mov
lods
and
xor
call
daa
inc
mov
pop
je
mov
js
dec
mov
leave
or
sbb
sub
pop
fs
mov
mov
rol
stos
adc
insl
inc
xor
adc
loopne
or
sbb
std
test
mov
xor
push
les
adc
jge
enter
je
test
sbb
pop
xchg
in
test
ds
mov
dec
pop
sub
jg
repnz
mov
adc
into
and
in
adc
int3
ss
popf
cmp
sbb
push
aas
xchg
push
push
rorl
xor
popa
insb
iret
insl
cmpsb
loope
cmpsl
jo
shl
or
cwtl
ret
or
mov
mov
cmp
mov
mov
int3
jne
xor
cli
push
jbe
dec
jns
lods
lods
test
adc
push
iret
lea
xchg
push
or
aam
stos
mov
cmp
les
movsb
adc
ja
pop
aam
jg
lahf
pusha
shl
nop
ss
push
add
pusha
inc
ss
mov
jns
push
inc
push
aaa
or
mov
dec
sbb
push
dec
dec
mov
mov
fdivr
shll
insl
push
sbb
aam
lods
repnz
test
xchg
out
call
and
dec
leave
adc
or
ja,pt
mov
dec
mov
mov
call
loopne
jle
lret
fisttpl
jno
fiaddl
pushl
dec
aas
mov
add
push
mov
fnsetpm(287
pop
add
jl
scas
xchg
aaa
mov
add
aas
scas
mov
aas
dec
sbb
out
mov
cs
mov
push
mov
add
mov
inc
sub
and
popf
push
push
icebp
sub
mov
dec
es
xor
mov
xchg
dec
adc
inc
insl
int
cltd
test
xchg
insl
mov
lret
ficoml
adc
std
mov
xor
out
mov
int
xlat
les
and
mov
in
xchg
mov
xor
mov
cmp
in
inc
mov
stos
mov
int
imul
sbb
cwtl
adc
adc
loope
xor
nop
lods
adc
hlt
std
call
fiaddl
mov
jle
das
movsb
mov
jp
ss
inc
cmp
mov
lret
in
rorb
mov
or
out
das
inc
push
jo
sub
mov
leave
test
pavgw
imul
ljmp
mov
cmpsb
stos
aad
and
mov
arpl
xchg
add
ds
fisttpl
add
int3
repz
daa
cmp
shrl
pop
arpl
jb
adc
dec
ret
or
sub
int3
pop
mov
scas
xchg
orl
cmc
jle
in
into
add
inc
test
ss
adc
in
aaa
sub
enter
push
outsb
stos
sub
mov
sub
xchg
ret
ss
fisubs
add
jbe
push
cli
std
jmp
pop
repz
mov
cli
adc
mov
andb
rolb
sbb
mov
add
das
dec
cli
repz
fsub
fsubrl
dec
aas
in
and
jp
loop
inc
in
xchg
das
adc
je
in
in
mov
mov
outsb
call
mov
mov
mov
sbb
leave
cmp
inc
xchg
xor
inc
xchg
fisubs
adc
loop
jecxz
sbbb
sbb
mov
call
mov
popf
cmp
jge
pop
push
sub
out
in
push
jno
adc
movsl
pop
pop
jle
test
cs
ret
jo
xchg
cmc
in
dec
out
fsubs
lods
sbb
xchg
jle
sub
test
push
cmp
inc
jge
fsts
frstor
cs
adc
push
adc
add
mov
aas
push
cmp
fsubs
insb
add
lcall
rcrb
jae
jmp
jo
pop
out
dec
jmp
je
cmp
dec
mov
or
adc
int
xchg
jb
and
pusha
mov
mov
pop
mov
or
data16
or
movsl
aas
jg
xor
std
sub
ljmp
or
sub
fcoms
mov
pop
adc
rdpmc
xor
cmpsb
sbb
cld
daa
subl
mov
leave
and
movsl
pop
mov
xorb
xchg
ret
xor
repz
pop
jns
mov
jne
cwtl
stos
push
aam
adc
pushf
xor
jg
lods
outsl
lahf
les
dec
sarl
mov
cmp
xor
xchg
add
jmp
pop
dec
dec
sbb
das
sub
sub
in
popf
jl
push
sbb
mov
xor
mov
jge
mov
cmp
jns
dec
insb
nop
adc
loope
jecxz
cld
jl
jp
out
mov
inc
pop
add
fstpt
adc
mov
jb
mov
out
mov
jnp
sbb
lea
xor
mov
push
psubsb
cmp
mov
pop
cmp
jne
addl
aas
jo
push
inc
ficompl
adc
adc
movsl
jmp
dec
and
jmp
mov
pusha
ficoml
int3
adc
or
call
jo
ret
in
mov
jo
aam
xchg
out
sub
jb
roll
divb
inc
adc
das
roll
aas
cmp
xchg
add
fwait
icebp
ds
or
and
cmc
xchg
xor
xchg
mov
and
outsb
cld
push
jge
xchg
push
sub
and
push
adc
xlat
rol
cwtl
push
push
jbe
aam
cmpsb
jl
popa
mov
xchg
cmc
test
mov
fbstp
addl
push
icebp
mov
call
nop
jp
mov
sub
lahf
add
or
nop
sub
sub
adc
mov
mov
fldcw
data16
mov
jbe
incl
popa
xor
add
imul
leave
push
mov
xchg
inc
jecxz
push
sbb
int
adcb
out
mov
les
xor
out
pushf
dec
loope
lock
jne
outsb
sbb
daa
push
ss
sbb
out
mov
testb
adc
mov
add
sbbl
out
adc
mov
in
insb
outsl
mov
sbb
sub
xchg
jae
adc
lcall
or
mov
lahf
fcoml
xor
and
jg
sbb
sbbl
pop
add
inc
jmp
ret
adc
xor
xchg
push
jo
or
jne
mov
mov
aad
adc
pop
lcall
lods
push
sbb
and
jnp
lods
orb
aas
adc
xchg
jmp
push
movsl
mov
adcb
inc
maskmovq
xor
dec
jb
scas
repz
std
and
adc
jbe
push
and
push
jmp
inc
mov
pop
and
nop
lods
mov
mov
dec
rcrb
movsl
jmp
or
mov
popf
fwait
and
xchg
int
push
dec
ja
pusha
testl
stc
sub
mov
jns
fs
pop
sub
jo
mov
push
out
mov
fldl2t
lahf
add
inc
or
ljmp
icebp
or
cli
int3
stc
ret
sub
insl
out
dec
xor
add
jo
test
rcrl
jo
enter
jae
das
adc
stos
or
js
lock
or
test
xor
add
arpl
xchg
add
or
adc
mov
push
sbb
or
pop
jge
cmp
js
inc
lret
add
adc
repz
sbb
lea
mov
repz
mov
xchg
insb
dec
hlt
test
in
mov
xchg
pop
or
js
insb
out
xchg
ljmp
cmp
into
cmpsl
mov
sbb
mov
ret
rolb
add
inc
inc
lret
push
mov
xchg
push
adc
inc
nop
push
hlt
inc
push
sub
ja
jb
ret
mov
cmp
sub
xchg
adc
push
test
inc
inc
out
cltd
xchg
shl
das
stos
lcall
inc
adc
sbb
jge
adc
stc
imul
dec
pop
mov
jecxz
xor
jno
xchg
pop
xor
adc
and
clc
push
divl
cmpsb
mov
test
push
pop
inc
test
sbb
je
in
mov
jecxz
lret
sub
sub
xchg
lcall
icebp
and
inc
mov
sbb
stos
mov
lock
cmp
test
jne
cmc
sahf
fwait
dec
repz
mov
stos
in
mov
push
jmp
shl
mov
imul
jnp
jle
mov
inc
dec
jle
and
das
test
fwait
cmc
jg
insl
push
mov
xchg
mov
pop
inc
fs
stos
mov
mov
cmp
in
sub
cmc
xchg
mov
push
add
jne
jnp
pop
xchg
out
cwtl
mov
push
cmp
jbe
fidivrl
mov
out
jg
out
pop
out
mov
xor
xor
mov
scas
scas
shlb
mov
or
xchg
adc
inc
lods
mov
mov
lods
push
pop
pop
fdivrs
inc
xlat
xor
std
xlat
add
insl
xor
push
mov
push
fwait
ror
loop
sub
outsl
jns
lds
stc
insl
adc
pop
cmp
xchg
or
shll
mov
mov
pop
lods
cmpsl
je
mov
stos
or
mov
jmp
sub
adc
sar
sbb
jge
rorl
pop
stos
mov
mov
lock
jl
or
jp
es
lret
and
and
in
sub
int
out
cli
xchg
andl
push
adc
in
jnp
shlb
dec
adc
ss
bswap
leave
jg
mov
add
jns
cltd
icebp
das
fisubrs
mov
add
mov
test
mov
lret
aaa
ljmp
bound
dec
or
cmp
push
ss
adc
jmp
aam
jo
scas
test
jle
stos
push
pushf
stos
jo
xor
out
repz
sbb
mov
pushf
ljmp
mov
push
mov
fimull
push
sub
add
pop
fdivl
jg
mov
jno
xchg
cmp
sbb
addl
lcall
pop
dec
test
jbe
int
push
xchg
lds
pushf
pusha
adc
mov
fidivl
push
xchg
fwait
mov
mov
cs
in
and
mov
mov
dec
addb
into
xchg
dec
mov
cwtl
daa
mov
mov
shrl
adc
add
jb
mov
xor
xchg
insl
mov
xor
pushf
cmp
loope
sbb
movsb
mov
lock
icebp
mov
lods
andb
xchg
outsb
inc
and
jecxz
xor
push
jle
ljmp
cmpsl
fs
jg
pusha
nop
dec
cmpsl
mov
test
aaa
add
loope
sbb
cmc
cmp
out
imulb
gs
adc
ret
cmp
pop
and
and
ljmp
int3
push
dec
sbb
shlb
mov
cmp
aaa
cmpsl
in
insb
inc
inc
push
dec
mov
arpl
mov
mov
cwtl
lods
jmp
dec
mov
subb
mov
fldenv
decb
xlat
enterw
in
sbb
inc
pop
push
jbe
andl
adc
mov
and
inc
aam
xchg
test
daa
rcl
mov
sbb
xor
insb
and
adc
daa
movsl
jae
adc
gs
call
push
dec
sbb
icebp
jo
push
dec
cmp
insl
push
jge
xchg
insb
ret
mov
push
ret
lods
and
rolb
push
and
fcmovb
add
cld
cmp
mov
xchg
outsl
loopne
test
lret
sub
lods
aaa
xchg
pop
mov
xchg
lret
fs
mov
jmp
mov
lods
mov
cs
dec
dec
sbb
repnz
adc
loope
jle
push
push
xor
ljmp
rol
inc
adc
orl
ja
arpl
cmc
mov
xchg
mov
test
sarb
mov
test
call
sub
inc
cmp
xchg
leave
daa
jne
add
into
pop
clc
scas
cld
clc
and
jnp
jae
cs
je
mov
xor
dec
shll
push
cltd
ret
pushl
loope
inc
sbb
cmpl
mov
push
insb
xchg
icebp
jb
push
imul
dec
popf
mov
push
and
adc
xchg
dec
in
bound
call
inc
jg
mov
mov
jmp
jb
cmc
jno
xchg
fstl
pop
or
dec
mov
xor
cmp
iret
loop
mov
and
ds
ss
add
mov
ss
or
jl
pop
xor
dec
mov
sub
cmp
js
cmp
inc
lret
pushf
in
imull
or
sub
lods
and
fwait
sbbl
arpl
scas
repz
out
lods
fsts
lods
add
fcomi
loope
inc
jl
shll
sarl
push
gs
push
shrb
push
loope
mov
inc
xchg
sub
xor
rorl
movsl
pop
pop
lret
xlat
loop
pop
addl
test
inc
fwait
sbb
mov
ds
outsl
inc
mov
ja
ds
dec
adcb
hlt
insl
jle
cli
divl
mov
inc
nop
and
jnp
xchg
mov
mov
fdivr
out
shrl
sub
fadds
test
xchg
or
popf
mov
aas
mov
inc
sbb
rcr
incb
sarl
pop
hlt
adc
out
sub
mov
shrl
adc
xor
cmc
faddl
int
mov
inc
adc
adc
loop
sub
mov
outsl
hlt
fnsave
mov
nop
das
mov
sbb
daa
jnp
jle
jbe
outsb
out
ror
mov
shl
rclb
mov
lods
inc
jmp
clc
js
int3
repnz
ret
jp
subb
jecxz
cmp
lods
ljmp
mov
pop
add
insb
insl
lea
jo
mov
es
mov
and
jno
daa
loope
mov
ja
jo
pop
xor
lods
mov
sahf
pop
pop
cs
and
xchg
adc
insb
xchg
adc
xchg
dec
adc
push
dec
adc
adc
pop
fstpt
rcl
push
adc
enter
xchg
jl
pop
adc
adc
pop
ljmp
cmp
ss
lret
leave
mov
or
mov
jmp
test
dec
mov
adc
xor
mov
pop
sbb
cli
test
add
xor
testb
adc
pop
and
cltd
les
insl
add
add
mov
push
iret
scas
aas
pop
push
ss
ret
cmp
or
mov
fcoml
cs
ja
xor
shlb
pop
pop
jle
int
sahf
pop
adc
test
repz
mov
cmc
pop
fimuls
and
iret
sub
movsl
pop
xorl
std
xor
sub
jg
js
or
push
loope
mov
adc
jle
inc
pusha
enter
mov
sti
js
enter
pop
mov
js
xchg
or
xchg
push
push
jle
jmp
aaa
xor
fisubl
xlat
pop
and
cmp
jecxz
dec
lods
push
js
dec
lods
ljmp
inc
inc
je
in
decb
repz
cs
mov
pushf
arpl
fcompp
nop
sbb
mov
cmp
xor
jns
imul
mov
std
inc
fsubs
in
push
sub
mov
sub
xchg
scas
add
pop
cmpsb
adc
pop
pop
hlt
test
out
add
mov
adc
jmp
subl
test
push
mov
push
test
jns
addb
jo
pop
popa
xor
pop
xchg
les
sub
cld
test
nop
cld
mov
mov
sarl
icebp
pop
sub
xor
mov
mov
and
xor
jecxz
mov
push
pop
mov
daa
mov
fsubr
inc
mov
leave
mov
pop
subb
mov
pop
mov
add
push
xchg
sub
lock
nop
daa
dec
pop
jbe
xor
push
sarb
adc
shr
loopne
lahf
lret
ss
jb
in
mov
ficomps
dec
sub
jmp
fs
pop
and
or
pop
idivb
adc
cmp
aaa
adc
pop
mulb
sub
mov
jno
aaa
or
loope
fstpt
jns
mov
popa
test
pop
lock
mov
movsl
outsb
mov
pop
sub
out
pop
dec
mov
mov
imull
mov
mov
and
and
stc
mov
jbe
mov
stos
mov
scas
xchg
aaa
xor
push
shr
xor
mov
leave
mov
mov
subl
mov
loopne
shrl
inc
mov
or
hlt
js
mov
mov
pop
pop
xchg
sar
pop
std
and
inc
out
pop
jno
sub
inc
push
jnp
repz
enter
xchg
pop
dec
scas
out
xor
cwtl
pop
push
das
jecxz
aad
adc
mov
push
and
insb
add
mov
leave
enter
adc
lcall
cmp
adc
add
gs
jmp
xlat
adc
dec
dec
adc
lcall
push
inc
push
adc
fldt
fisubrl
and
xor
sub
popa
inc
stc
adc
outsb
jmp
jmp
incl
insb
sbb
adc
dec
test
pop
rcll
scas
jmp
ror
fnstenv
dec
fbld
lahf
jo
ljmp
call
inc
les
sbb
iret
ja
pop
ret
pop
pop
push
ja
dec
lahf
push
xchg
or
nop
popf
scas
ljmp
stos
pusha
jne
fidivl
xchg
dec
push
inc
out
dec
xor
dec
push
repz
iret
mov
lret
sub
jg
sbb
inc
mov
inc
inc
lods
mov
inc
or
std
xor
ds
mov
adc
sbb
push
shrl
adc
push
mov
into
ss
mov
push
in
stc
jmp
xor
cld
mov
scas
test
inc
out
add
xor
loope
xor
dec
lods
mov
loope
jnp
pop
and
fimull
sbb
lods
jge
or
orb
in
and
xchg
mov
dec
mov
mov
push
or
xor
xchg
pusha
xor
and
mov
lods
push
insl
sub
fisttpll
pop
lds
xor
lcall
sub
adc
sbb
jo
sub
xchg
test
and
mov
adc
lret
lock
lret
jecxz
xor
imul
sbb
xchg
dec
sbb
jle
xor
push
test
cmpsb
mov
lahf
pop
dec
cmp
mov
push
adc
adc
cmc
mov
pop
and
ja,pt
sub
test
pusha
xchg
or
xchg
sub
stc
clc
into
out
ja
mov
push
mov
mov
xchg
lods
push
xchg
or
mov
push
ja
lods
sub
and
mov
pop
cs
arpl
cs
idivb
gs
jg
mov
mov
xchg
sarb
mov
ss
dec
and
inc
subl
push
xchg
mov
adc
jmp
rolb
mov
pop
cld
jo
movsl
lods
adc
fwait
pop
add
cmpsl
mov
dec
ss
push
mov
outsl
les
lods
shrl
mov
adc
xorb
adc
xchg
in
rcl
xchg
fucomi
jo
pop
inc
push
repnz
ds
idivb
adc
pop
enter
jnp
mov
inc
xor
pop
cmp
xchg
mov
lea
pop
pop
loop
push
or
fdivrl
fwait
scas
ss
xor
push
push
les
aam
jl
add
jbe
sarl
jle
in
sub
pop
xchg
cs
js
adc
sbbb
push
push
add
fldcw
test
test
dec
push
lock
out
int
aam
mov
mov
add
aad
xchg
inc
mov
jbe
push
cmp
jo
and
sub
adc
pushf
pop
xor
cli
in
mov
jge
fnstsw
xchg
jg
xorl
enter
mov
sbb
inc
test
sarl
fsubrl
jl
mov
popf
movsl
pop
and
and
enter
test
add
xchg
jmp
fistl
shrl
movsl
sarb
std
lods
inc
xchg
pop
mov
xor
and
xor
pop
sub
pushf
fsts
fs
xchg
cmp
mov
xchg
int
or
stc
jle
mov
call
sbbl
push
test
fldl
pop
mov
int3
and
pop
ja
sar
pop
or
sub
mov
out
cmp
cmp
dec
mov
inc
xor
xor
and
jmpw
movsl
mov
dec
movsb
enter
outsb
inc
adc
inc
mov
aad
jl
mov
jge
mov
jg
and
sbb
cli
movsb
pop
xorl
mov
clc
outsb
mov
in
hlt
cltd
in
jno
add
fcmovnu
push
dec
xchg
inc
cmp
jmp
lock
inc
ret
dec
pop
mov
aaa
and
push
adc
and
out
in
push
cmp
push
jp
test
outsb
lods
xor
mov
les
pushf
fsubl
mov
in
add
outsb
sub
cmpsl
cmc
sub
lcall
in
call
in
and
outsl
push
cmp
nop
aas
ja
jmp
and
pop
es
sahf
enter
add
sub
loope
dec
call
xor
or
inc
xor
lods
pop
cs
pop
cltd
mov
xor
call
or
push
insb
add
popf
xchg
jp
inc
ss
sub
mul
add
jns
push
pushf
mov
and
mov
add
movsl
mov
cmp
xor
imull
dec
aaa
xchg
js
mov
mov
mov
ficomps
sub
fidivrs
fdivl
or
and
inc
mov
outsb
cmp
sbb
fsubl
jge
pop
xchg
push
pop
push
mov
xor
pop
out
pop
xor
xor
mov
adc
jns
jmp
mov
jg
mov
out
xchg
pusha
xchg
push
jp
and
test
push
scas
fwait
inc
test
sahf
or
sbb
add
cmp
lock
pop
aas
adc
mov
stos
jno
adc
sub
arpl
sbb
cmpb
inc
imul
lret
adc
add
cmp
nop
les
inc
mov
clc
mov
sbb
or
in
cmpl
movsb
daa
ljmp
in
lahf
ss
cmp
leave
mov
sub
adc
cmc
push
inc
jo
popf
das
ret
lock
push
push
mov
jno
and
ds
das
js
cli
inc
int
pop
or
and
pop
call
push
into
or
rclb
fcomps
lock
aaa
sbb
dec
ljmp
cmp
and
jmp
push
fldcw
pushf
das
xchg
je
pusha
mov
and
rclb
or
xchg
dec
icebp
pop
mov
or
mov
repnz
xchg
sub
cmpb
fiaddl
out
adc
sbb
mov
les
loopne
pop
cli
aad
mov
mov
adc
inc
call
or
push
dec
aaa
ss
mov
filds
inc
stos
pop
pushf
leave
fsubl
or
dec
and
adc
sub
pop
mov
jge
lods
in
jmp
dec
sub
xor
xor
imull
je
pop
incb
sub
xchg
mov
fcomps
scas
into
enter
lret
xor
sub
mov
inc
or
lods
out
xor
shll
cmc
in
jo
es
out
das
and
pop
adc
lock
ds
push
lods
or
aaa
and
mov
test
test
jnp
fstpt
popf
sub
enter
rorb
in
std
pusha
add
test
out
scas
lods
cmp
in
mov
out
das
dec
mov
pop
loop
sbb
shrl
xor
out
iret
mov
lds
or
movsl
push
push
movsb
daa
aaa
dec
and
mov
xor
or
cmp
and
lret
sbb
pop
adc
clc
test
jb
push
mov
addl
clc
sub
sub
ss
xchg
sarl
adc
push
fs
push
clc
fsubl
loop
ja
mov
xchg
jne
jmp
dec
mov
je
dec
adc
xor
inc
insb
or
lods
dec
enter
inc
in
push
leave
mov
xchg
add
mov
inc
mov
imul
rcl
or
cmp
push
and
mov
int
pop
sub
fisubrl
outsb
jne
jg
mov
in
pop
push
insb
dec
jle
push
xlat
leave
add
pop
cmp
scas
movsb
dec
js
lret
ds
pop
fninit
jno
inc
ror
cs
pop
imul
aaa
mov
stos
fs
scas
sbb
xor
xor
xchg
das
daa
into
shrb
pop
jb
sbb
jg
ja
fisttps
dec
xchg
stc
fsubrs
cmpsl
test
fisttpl
cld
out
arpl
popa
fwait
jo
adc
add
sub
adc
out
stos
sbb
fbstp
shr
mov
xor
mov
mov
ljmp
cmc
lods
aas
ss
std
sub
aaa
subb
adc
ljmp
aas
adc
pop
sarl
jmp
xor
adc
mov
insl
imul
pop
mov
mov
xchg
dec
ss
lods
mov
mov
xchg
ucomiss
add
jae
push
imul
adc
xor
inc
sub
pop
sbb
jne
mov
jge
jecxz
icebp
insb
mov
add
push
ljmp
adc
xchg
rolb
pop
ret
pop
sub
or
je
enter
sub
add
int3
and
outsb
negl
pop
lock
gs
fprem
xchg
outsb
dec
and
hlt
and
scas
mov
dec
cmpsl
mov
add
mov
dec
std
sub
outsl
cmp
pop
test
xorb
mov
mov
pusha
add
jnp
dec
cmp
cmpsl
loop
mov
jge
pop
sub
ljmp
orl
mov
das
lods
inc
mov
ret
mov
fwait
xchg
jge
add
js
pop
sbb
out
mov
enter
lea
aad
xchg
aaa
in
pop
andb
push
xor
cmp
insl
popa
dec
adc
out
call
sbb
pop
lods
mov
mov
sub
sti
test
mov
ja
std
sbb
nop
fs
inc
dec
out
rolb
sbb
dec
std
jmp
dec
and
inc
mov
dec
das
sbb
xor
xchg
mov
in
repnz
lock
clc
mov
and
in
dec
ss
test
addr16
outsb
and
in
mov
or
jmp
rcrl
into
sub
lods
mov
lods
add
cli
xor
inc
mov
fiadds
or
decb
ret
stos
pop
and
jle,pt
sti
push
fucom
xchg
clc
add
xchg
int
ljmp
pusha
leave
fisubrs
sbb
lret
jnp
js
adc
mov
ret
pop
fstpt
cmp
and
in
std
mov
fdivl
adc
cltd
push
icebp
xor
aaa
or
andl
and
icebp
xchg
dec
ror
cli
pop
ljmp
dec
data16
rcrl
testb
insb
shll
push
jl
mov
and
ss
in
inc
in
mov
aam
ds
ljmp
adc
sbb
jmp
in
scas
aaa
xor
sub
jbe
jo
sbb
test
sub
add
adc
stc
mov
push
cmp
and
push
inc
mov
push
add
inc
setle
add
lods
adc
mov
mov
push
inc
int3
out
mov
push
out
inc
jle
jp
fwait
dec
pop
mov
fdivrp
jbe
cmp
xor
dec
xchg
das
cmp
mov
xchg
mov
mov
push
fildl
push
clc
xchg
sbb
fistpll
pusha
and
sbbl
testb
adc
xchg
sub
xor
aaa
sub
adc
sub
adc
loopne
scas
or
leave
repz
mov
push
push
mov
inc
cmpb
mov
sub
adc
add
mov
push
push
lods
ret
mov
popf
ret
ljmp
xchg
push
leave
sbb
push
in
sub
mov
stc
cs
sub
test
push
push
addr16
dec
push
jo
nop
xor
cmpsb
ret
mov
add
push
push
adc
push
mov
adc
mov
jmp
clc
and
mov
pop
into
inc
adc
jmp
add
dec
fistl
or
bound
xor
adc
and
lret
mov
outsb
or
xor
push
push
mov
and
out
mov
xchg
xlat
push
das
lcall
rorl
loope
sub
into
jb
sti
mov
call
sub
adc
test
inc
imul
dec
pop
jne
xor
inc
fmull
xchg
rolb
cmp
loopne
fwait
pop
test
jge
xchg
adc
cmp
jle
lods
sbbb
cld
cmc
sub
push
adc
or
sub
rorb
mov
sub
rol
into
bound
add
push
imul
sbb
sbb
sub
roll
mov
adc
mov
rcr
imul
iret
lret
sbb
add
popf
adc
addr16
cmpsb
sbb
pop
jmp
and
lods
pop
xor
inc
jmp
mov
mov
fisttpl
push
xor
rorb
ror
cld
mov
adcl
push
add
push
xchg
sub
fbld
pop
mov
cmp
and
das
stc
adc
pop
sub
std
jmp
int
push
out
cmp
insl
sub
stos
bnd
inc
dec
dec
sbb
adc
pop
lret
fwait
scas
mov
xor
insb
ret
fadd
sub
shrl
inc
lods
scas
scas
test
mov
mov
mov
xor
fs
mov
dec
daa
hlt
call
jne
xor
pop
or
fs
sub
stos
int
pop
aam
repnz
rclb
jg
stos
hlt
xor
icebp
shll
mov
pop
jge
lods
xor
sahf
push
das
ds
adc
sbb
pop
sbb
jmp
mov
cmp
inc
cltd
jle
fstcw
dec
inc
jg
add
in
inc
sbb
push
js
sbb
insb
adc
sub
xor
jae
jnp
add
cmp
insb
sbb
imul
js
out
push
xorl
jp
ljmp
fs
add
push
mov
pop
jmp
push
enter
dec
dec
ds
dec
cmp
mov
pop
push
enter
jmp
in
or
cwtl
aas
mov
fsubrp
inc
adcl
inc
adc
add
inc
imul
push
pop
adc
into
jmp
add
xor
std
fldt
out
or
push
pop
or
mov
dec
in
fstpt
dec
dec
jge
dec
xchg
jle
adc
xchg
lret
cmp
xchg
adc
jecxz
mov
cwtl
sub
sbb
stc
movl
icebp
mov
push
fisttps
sbb
in
mov
xchg
fstpl
into
dec
stos
push
mov
std
call
insl
cs
mov
je
leave
add
mov
rolb
fdivl
sbb
push
pop
daa
arpl
push
xlat
lock
in
std
jle
aad
xor
lock
inc
push
test
push
or
sub
shlb
dec
jae
frstor
flds
stc
dec
pusha
xchg
mov
cmp
data16
int
ljmp
mov
xchg
insb
xchg
pusha
and
push
push
jl
jmp
cmpsl
lock
incb
inc
je
jmp
inc
cvtpi2ps
negb
push
jo,pt
pop
mov
mov
nop
out
pop
insl
cmc
mov
mov
xor
lds
ljmp
aaa
xchg
xor
in
movsl
xor
aaa
sbb
sub
add
add
dec
pop
cmp
pop
pop
jne
and
ds
aam
out
adc
mov
out
push
cltd
mov
lock
fucom
xor
mov
leave
cmp
loope
popf
mov
push
arpl
adc
mull
and
mulb
xor
pop
pop
xchg
pop
jo
mov
stos
xchg
dec
ss
and
push
lahf
sub
xchg
add
imulb
push
adc
xor
fstpl
mov
loopne
jl
pop
mov
hlt
mov
ss
in
cltd
mov
lock
stos
aaa
andl
daa
imull
dec
outsb
mov
pop
pop
in
idivb
and
std
and
lret
lock
in
imul
push
jnp
into
aad
dec
or
popa
sub
sub
mov
push
je
nop
stos
push
arpl
imul
mov
out
add
adc
add
insb
lods
adc
movsl
or
pop
pushl
jnp
lods
and
popa
rolb
mov
push
lods
and
jp
std
and
aad
sti
shrl
push
out
cs
movsl
fnstsw
add
mov
pop
or
mov
xchg
push
outsl
mov
pop
fs
out
je
enter
ret
mov
adc
mov
adc
je
into
xor
ljmp
push
dec
xor
enter
jge
sbbb
and
push
out
pop
scas
xor
sbb
push
adc
je
xlat
shll
xchg
call
les
call
sub
out
xor
mov
es
jmp
inc
insb
sbb
cmp
add
adc
xchg
mov
cmpsl
in
fidivrs
lock
lods
loope
jecxz,pn
aas
xchg
mov
cwtl
xchg
aas
lret
push
adcl
mov
lods
arpl
sbb
test
jns
sbb
stos
pop
xchg
jg
mov
lcall
sbb
mov
lods
orps
data16
pop
ret
and
or
mov
xor
pop
and
mov
movsl
jno
jmp
sub
ja
sub
and
ds
jb
mov
or
outsb
scas
xchg
stos
into
in
adc
mov
ljmp
out
ds
int
xchg
fnstsw
push
xorl
pop
in
ljmp
adc
push
jg
push
xor
jne
push
call
and
and
test
xor
push
inc
stos
jbe
ret
mov
stc
ljmp
and
pop
pop
cmc
xchg
in
jo
cmpsl
orb
add
not
aaa
adc
mov
jmp
mov
pop
popa
pop
insl
rcr
out
pop
enter
add
jmp
aad
jo
loopne
cmc
jl
add
adc
pop
outsb
test
xchg
adc
fldenv
das
in
mov
inc
xchg
cwtl
inc
and
clc
int3
je
test
test
cmp
push
sbb
push
xor
aad
mov
sarl
adc
aaa
out
and
sbb
xor
pop
enter
push
and
out
fcmove
mov
jmp
popa
or
loopne
fsubp
test
andb
cmp
xor
cwtl
nop
popf
adc
adc
sbb
aaa
inc
les
pop
inc
adcl
jge
push
push
mov
inc
sub
lods
xlat
mov
mov
dec
fnstenv
int3
mov
sahf
data16
xchg
inc
jmp
mov
xchg
jl
mov
cmp
std
dec
ret
mov
add
xchg
jnp
cmp
mov
ret
es
jno
loop
xchg
insb
pop
add
fistpll
lods
outsl
scas
insb
adc
jecxz
je
leave
add
orl
pop
fcomi
dec
pop
daa
fisttpl
es
jnp
pop
aam
ret
rclb
fistl
inc
stos
les
das
test
subl
ljmp
fimuls
xchg
mov
mov
out
shlb
cmp
mov
lret
mov
cmp
or
cmp
in
in
mov
mov
cs
mov
xor
push
jne
outsl
cmc
subl
ja
fs
out
into
sub
cli
sub
ret
sub
fdivrl
mov
cmp
rcll
loopne
out
sbb
cmp
in
mov
das
andb
imul
pop
scas
push
cmpsb
je
xorl
adc
cmpb
or
adcb
out
mov
ja
push
out
jno
pop
mov
pop
dec
add
mov
mov
pop
insl
and
pop
jecxz
sahf
mov
sbb
xchg
sti
pop
push
sarl
fistpl
inc
insl
xor
roll
jb
das
roll
and
les
loop
dec
mov
or
add
es
ss
adc
jae
into
jmp
in
and
sti
aam
pop
mov
cwtl
pop
fsubrs
imul
loopne
add
mov
repnz
cwtl
mov
sub
movsl
hlt
in
stos
and
mov
add
inc
cwtl
push
xor
callw
aaa
mov
cs
jle
ja
jmp
repnz
fnstsw
insl
xchg
sahf
xor
adc
loope
pop
push
rolb
mov
xchg
lcall
mov
enter
adc
xchg
add
cmpsb
mov
int3
and
ss
mov
mov
fnsave
xchg
testb
add
push
cmpsb
imul
gs
adc
and
jecxz
lret
xor
xchg
sub
adc
pop
mov
jmp
and
std
shr
adc
jle
mov
cmc
add
movsl
shr
sub
mov
out
pop
jnp
xchg
jb
scas
aaa
int
mov
add
mov
outsb
aas
dec
push
nop
mov
aad
sub
rorl
jne
jmp
adc
adc
mov
jp
mov
jmp
fwait
ljmp
ret
jmp
mov
lods
jb
das
cmp
out
adc
and
stc
push
jnp
imul
sbb
mov
jle
fiadds
push
xchg
push
test
cmc
and
sub
adc
cmc
cmc
es
mov
or
or
fcmovnb
in
sub
sti
ljmp
sbb
setle
adc
cmpsb
fs
sbb
cmp
repz
inc
add
dec
ret
add
lods
sub
adc
fldt
xchg
out
sbb
ret
insb
xchg
mov
or
adc
sub
sbb
add
or
add
rcll
cmpsl
flds
xor
cmpsb
incb
inc
adc
mov
pop
addl
into
push
xor
insl
sahf
dec
push
lods
test
mov
hlt
and
stos
jo
mov
dec
jmp
sub
cmp
add
jecxz
jge
mov
cmp
pop
ss
andl
lods
pop
adc
adc
int3
pop
sub
inc
push
add
push
adc
jo
leave
dec
xchg
xor
sub
inc
lea
sub
adcb
fldt
in
fnstenv
mov
mov
divl
or
sbb
sti
scas
fiaddl
je
das
cltd
das
xchg
pusha
cmp
lods
iret
fildl
aam
test
out
hlt
mov
lcall
jnp
xor
les
inc
aaa
das
xchg
xchg
pop
mov
add
push
adc
insb
les
jo
jb
adc
movsl
sub
leave
mov
sbb
add
jo
jo
mov
scas
mov
mov
and
fadd
jecxz
sub
and
push
outsb
xchg
repz
adc
in
and
aaa
push
xor
hlt
in
ja
in
es
dec
ja
loope
arpl
out
dec
insb
ret
and
adc
pop
sarb
push
jg
and
daa
cmp
in
sub
push
pop
mov
and
adcb
mov
pusha
loope
std
rcrl
test
jg
xor
xchg
sub
out
pop
mov
sub
enter
xchg
cmp
xor
mov
insb
pop
pop
pop
xchg
je
cmp
sub
xlat
or
push
aas
mov
xchg
gs
in
ds
divb
pop
cmpsl
add
and
addr16
mov
xlat
xchg
sub
sbb
mov
jae
test
neg
aas
xchg
pop
ret
cld
pop
das
cmp
leave
inc
lods
adc
push
jmp
adc
xchg
cmpsl
pusha
mov
das
repnz
jbe
hlt
inc
repnz
inc
mov
movsb
adc
and
jmp
add
out
mov
mov
nop
lcall
push
pusha
in
push
dec
jb
push
inc
and
lret
mov
pop
cmp
ret
pop
cmp
dec
adc
scas
cmp
xchg
dec
mov
dec
xchg
outsl
xor
lods
inc
out
lea
stos
xor
push
mov
jne
ret
adc
faddp
adc
js
mov
xchg
adc
jb
pop
ss
and
mov
sub
es
mov
in
sti
inc
and
pushf
add
test
pop
mov
cli
in
fbstp
xchg
mov
and
sahf
aad
testl
or
mov
movsb
mov
js
jmp
mov
subl
mov
mov
sub
orl
xor
fcmovnbe
sarb
inc
mov
shll
pop
pushf
inc
dec
ja
sbb
sub
enter
fldcw
pop
loope
cld
fs
shlb
fildll
jl
jg
and
jb
pop
jns
inc
or
movsl
aaa
out
test
xchg
imul
push
push
cmc
and
xchg
out
dec
jnp,pn
in
adc
pop
cmp
pop
jo
outsl
adc
push
repz
les
lea
ja
ja
pusha
testl
or
adc
shrb
addl
mov
adc
xchg
ja
mov
mov
adc
add
mov
mov
iret
xchg
fisubrl
repz
mov
dec
ficoms
push
sub
cmpsl
ret
add
cmpb
outsl
and
mov
les
cltd
or
ret
sbb
xor
and
mov
roll
add
fistl
sub
lea
adc
das
sbb
mov
jnp
jbe
add
inc
mov
jmp
insb
mov
cmp
test
ja
pop
xchg
dec
pop
test
aaa
in
mov
dec
ret
jl
push
sub
mov
push
repz
testb
in
xor
xchg
sub
mov
xchg
adcl
cmp
jl
mov
daa
sub
xchg
mov
jmp
in
lret
inc
cs
dec
adcb
mov
jl
imul
ja
xor
test
or
sub
sub
lea
out
jnp
aam
scas
in
inc
or
aaa
mov
adc
ficomps
lret
adc
popf
xor
mov
push
push
ljmp
jnp
cmpl
lahf
rcll
xchg
sbb
inc
pop
arpl
loope
fimuls
sbb
push
mov
cmp
cmp
adc
cmp
mov
jmp
adc
loop
popa
sbb
add
out
push
xchg
movsb
xchg
imul
push
sub
dec
movsl
addb
aas
xchg
jecxz
mov
sbb
push
mov
xor
cs
xlat
rcl
jb
pusha
js
inc
adc
jns,pt
pusha
sbb
lret
js
sub
cld
stos
pop
mov
adc
adc
int3
fldl2e
or
stc
inc
add
and
fisttps
adc
sub
pop
lea
xchg
shlb
sbb
shr
repnz
insb
mov
xor
lods
cmc
push
lcall
mov
xor
dec
jmp
aas
sbb
stc
outsb
dec
repnz
xchg
sub
adc
lods
aaa
cmp
repz
xchg
cmp
xor
outsl
xor
xchg
or
jnp
and
aaa
xor
push
xor
pop
out
and
mov
mov
mov
nop
test
aas
pusha
sbb
jmp
jno
push
test
std
sub
sub
repnz
mov
test
jne
hlt
cmp
sbb
les
xor
adc
ss
mov
and
out
adc
test
aaa
dec
pop
stc
negb
popf
sbb
pusha
sbb
out
sbb
pusha
push
out
icebp
jmp
jecxz
mov
lods
je
sbb
shrl
into
lea
aas
aam
ficoms
aas
clc
cmpsb
pop
dec
cwtl
jle
push
call
dec
jge
hlt
and
pop
movsb
iret
cmp
fisubrl
aam
cmpps
lods
xchg
out
les
jmp
pop
into
mov
ja
outsb
or
cli
lods
leave
mov
and
and
stos
out
xchg
and
lods
mov
ss
stos
cmp
mov
pushf
ss
pop
lahf
pop
jb
das
lcall
adc
mov
jnp
inc
fldl
cs
add
xchg
xor
shll
mov
les
lahf
in
mov
outsl
cmc
sub
into
xchg
mov
movsb
mov
and
jl
push
scas
jmp
xchg
and
xchg
push
sahf
cmp
mov
ja
jle
pop
and
jle
daa
xor
xor
mov
dec
jge,pt
and
lock
xchg
sub
ja
mov
mov
out
jl
mov
clc
gs
subb
enter
outsl
sub
jnp
or
leave
jle
out
nop
pop
xchg
xor
mov
adc
lods
pop
mov
mov
xchg
aaa
je
mov
jecxz
mov
mov
aas
cmc
add
pop
push
int
lcall
xor
sbb
lret
lods
stos
sub
jo
mov
mov
add
sbb
shlb
cmc
loope
insb
in
adc
dec
push
jno
stos
outsb
ljmp
dec
push
cmp
or
xorl
ds
push
sub
cmc
mov
fcoml
xor
add
add
jmp
pop
jo
push
mov
les
mov
jle
aas
adc
sbb
gs
mov
sub
push
sub
jo
nop
test
ljmp
out
dec
push
insl
loope
cmpsl
repz
jecxz
jge
sub
and
lods
or
xor
repz
mov
scas
cmpsl
je
and
scas
mov
mov
pop
hlt
dec
mov
sbb
rcll
inc
cmp
int3
in
ret
out
cld
xchg
fldz
stos
lds
dec
adc
mov
jle
jecxz
mov
pop
dec
in
and
decl
mov
xor
in
push
jmp
aam
lret
add
xchg
sub
cwtl
add
int3
cld
adc
daa
lret
push
add
pop
push
push
mov
jnp
adcl
xchg
mov
and
adc
sub
popf
and
icebp
sahf
fldcw
jle
pop
mov
pop
xchg
or
movsb
add
and
adc
aam
out
xor
jnp
cld
mov
jge
das
mov
pop
ljmp
ffree
std
push
lret
pushf
jle
and
add
rclb
mov
sbb
insl
cmp
inc
cmp
push
ds
jmp
pop
adc
fsubl
add
sub
xor
loop
daa
cwtl
push
mov
sub
inc
out
xchg
lret
or
or
ret
xchg
rorb
ret
mov
jl
adc
out
test
push
push
push
or
add
xor
adc
push
jbe
mov
ficoms
insl
nop
mov
mov
mov
cld
rol
int3
xchg
mov
pusha
hlt
ljmp
or
dec
jle
rclb
mov
ljmp
fsubl
out
out
enter
mov
out
stos
pop
jmp
lret
aas
cmp
popa
push
sub
push
daa
test
sub
xor
or
inc
add
push
mov
lea
jbe
xor
mov
or
subb
cmp
scas
bound
add
adc
insb
cwtl
push
mov
add
lods
inc
clc
into
jae
mov
lods
popa
notl
test
push
mov
mov
lahf
lret
pop
add
adc
out
dec
xor
mov
std
mov
das
push
adc
xor
sbb
adc
xchg
or
std
pop
insl
jb
mov
push
repnz
or
sti
pop
cmc
aaa
mov
xor
push
bound
mov
or
cs
out
lods
fdivp
test
xor
cld
cmp
and
or
pusha
call
mov
push
push
or
aam
mov
xchg
icebp
adc
sbb
setl
movsl
sahf
xor
ja
pop
pop
std
sub
xchg
and
push
dec
fisttpl
ret
aad
stos
xor
std
mov
les
test
jmp
mov
jge
add
mov
in
jne
popf
jl
fs
out
in
add
push
ficoms
fcoml
dec
jb
loopne
xchg
push
test
sub
aad
mov
and
and
movsb
cmp
adc
push
push
mov
ljmp
jg
xchg
or
pop
mov
stos
ds
inc
adc
pop
push
and
in
bound
sbb
and
cmp
imul
xchg
mov
lret
mov
mov
pop
xchg
cmp
push
test
mov
sbb
das
sub
pop
das
out
and
scas
lea
lret
loop
call
jmp
sbb
hlt
loope
loopne
scas
jmp
cwtl
xor
repz
dec
xor
fsub
push
dec
out
insb
lods
jg
xor
rorb
mov
adc
adc
adc
jbe
int
inc
cmp
dec
fcoml
adc
inc
xchg
sub
add
daa
data16
pop
je
add
mov
aad
in
inc
out
in
sub
jl
sub
jge
sbb
jne
fiadds
imul
into
cwtl
test
test
adc
jbe
jnp
out
jecxz
sub
repz
adcb
push
or
pop
jg
call
fldcw
daa
mov
and
or
fists
js
mov
xor
sub
mov
lods
mov
lret
push
insb
insb
adc
ret
call
dec
inc
in
mov
movhps
mov
inc
ljmp
xor
pop
arpl
ret
lods
jecxz
jmp
jne
pop
aas
jge
xlat
cld
xchg
popa
xlat
jge
push
pop
mov
push
xchg
xor
divb
and
xchg
push
lods
stc
ljmp
enter
push
pop
out
adc
xor
jl
pop
xorl
in
aas
sarb
push
inc
mov
out
shrb
and
insb
aas
scas
fcomp
cmc
ret
mov
in
das
push
lcall
lods
idivb
xchg
or
push
dec
test
cmp
jl
or
push
cmp
jp
pop
mov
mov
cmp
adc
jge
mov
icebp
xchg
pop
ss
jno
ds
mov
cli
mov
and
int3
pop
in
lret
mov
orb
dec
arpl
push
sub
shrb
xchg
jmp
cmpl
pop
pop
fwait
pop
test
aas
cld
mov
es
push
mov
push
inc
xor
lods
sub
pop
jecxz
aaa
adc
pop
out
xchg
ss
pop
add
dec
stos
add
pop
std
mov
jmp
jecxz
ds
popf
pop
mov
mov
in
fidivl
out
out
in
fcomi
cmc
push
dec
mov
adc
mov
rclb
mov
enter
adc
cmp
xchg
in
js
ljmp
cmpsl
daa
mov
and
adc
and
mov
mov
mov
mov
stos
hlt
push
or
ss
jbe
add
mov
out
cltd
adc
push
push
lock
lock
push
xor
das
xorb
mov
mov
mov
out
outsb
divb
push
test
push
jg
add
xchg
and
mov
adc
leave
and
lret
cli
jnp
adc
inc
jae
jo
pop
es
mov
fmull
xor
and
sbb
sub
jp
sbb
fidivrl
ret
sub
ret
xlat
jle
push
gs
mov
jl
nop
fisubl
and
push
fucomi
mov
mov
add
inc
dec
mov
daa
mov
cmp
jbe
ret
jne
int
push
fs
sub
push
mov
rcrl
jmp
mov
jae
sbb
push
lcall
out
jbe
pop
dec
cmc
adc
adc
adc
push
mov
push
rorb
sbb
pop
scas
adc
scas
test
jb
loope
das
dec
and
mov
lods
outsl
pop
rorb
test
jo
mov
arpl
inc
add
cli
cmp
dec
das
mov
push
xlat
call
stos
sbb
push
repz
insb
jmp
push
out
pop
ljmp
in
sarb
add
dec
je
nop
fs
xor
cld
inc
pop
adc
cmc
sub
outsl
notb
xor
xor
sarl
sub
in
adc
adc
pop
in
xor
sub
mov
mov
inc
and
icebp
xchg
mov
adc
fdivl
jbe
out
xor
jbe
ljmp
jle
and
in
addr16
insl
adc
sub
xchg
mov
pop
jbe
outsb
lock
mov
lods
adc
ja
sub
fsubrl
pushf
out
in
push
insl
dec
out
jae
pop
cmp
ja
fadd
orw
lock
cmc
pop
lret
rclb
inc
aas
gs
cmpsb
jo
and
loopne
push
pop
lcall
sub
mov
mov
dec
mov
das
jge
adc
pushf
aas
iret
adc
out
sbb
pop
icebp
aad
lahf
insl
addr16
cmpsl
push
shld
call
mov
lock
scas
mov
sub
ds
into
jmp
in
loopne
xchg
icebp
push
mov
mov
xchg
nop
add
hlt
mov
aas
jmp
push
insl
and
jnp
fistpl
mov
jecxz
xor
scas
adc
xlat
cmc
xor
mov
andb
sahf
imul
xchg
pop
xor
and
shrl
dec
lret
or
imulb
insl
adc
mov
test
leave
ret
xchg
in
int
inc
enter
inc
jne
icebp
ret
push
cmp
adc
sub
faddl
das
inc
pop
js
add
pop
push
sti
je
inc
pop
sub
sub
iret
pop
add
enter
xchg
jno
leave
ljmp
jne
cmpl
mov
pop
aad
adc
inc
lods
cmp
sub
jne
mov
sbb
push
dec
and
addl
jp
dec
lods
je
daa
mov
sub
push
push
xchg
inc
mov
and
jne
xor
add
add
inc
outsl
iret
mov
enter
or
or
push
jae
fcomps
rclb
filds
adc
jmp
aam
push
pop
mov
pop
inc
scas
dec
and
dec
pop
out
call
insl
stos
notl
jo
dec
adc
clc
lds
leave
movsl
xor
adc
pop
je
out
mov
nop
mov
mov
cmp
fisubrs
mov
ja
jle
das
insl
push
js
loopne
pop
leave
and
iret
ret
push
sbb
mov
jno
enter
shlb
cmp
mov
je
xchg
mov
mov
sbb
pop
sbb
nop
outsl
lock
sub
js
out
sahf
pop
mov
xchg
iret
sub
ljmp
cmp
fadd
sub
mov
outsl
inc
lret
pop
mov
lock
int
cmc
mov
push
or
mov
push
jecxz
jnp
mov
push
nop
push
jg
jmp
lea
lcall
mov
mov
dec
sahf
xchg
mov
shrb
pop
pop
mov
push
xchg
inc
stos
jl
inc
lods
mov
dec
xor
mov
test
inc
fsubl
and
xchg
mov
jle
mov
add
cmp
mov
xchg
sbb
jno
jo
mov
ss
add
xor
push
enter
xor
mov
mov
call
in
mov
xlat
insb
insb
shl
inc
adc
xchg
push
push
or
xchg
stos
inc
mov
jg
push
sub
shll
push
sub
and
inc
data16
jg
insb
fnstsw
mov
sbb
imul
inc
popf
sbb
cli
xchg
dec
icebp
bound
aam
out
adc
xor
dec
mov
adc
pop
cmp
imul
sub
mov
sbb
cmc
cmp
adc
roll
sbb
fisttpll
ss
out
sub
push
popf
push
js
jge
lret
push
sub
and
adc
int
jle
loop
cmpl
cmp
dec
into
aas
dec
push
push
add
mov
or
adc
jp
das
mov
aas
sub
sti
sub
or
pop
push
sarl
int
cmpsb
iret
popa
xor
pop
sub
mov
mov
adc
js
ja
shlb
inc
adc
or
mov
jb
mov
xchg
push
mov
push
mov
adcl
pop
or
pusha
fs
fs
loope
xor
xchg
xor
lods
ficoml
hlt
push
idivb
pushf
jb
rorb
mov
jecxz
mov
inc
xchg
add
pop
ljmp
inc
adc
cmp
xor
into
sub
mov
dec
test
lods
cmpsl
mov
mov
out
and
pop
je
mov
iret
pop
es
push
outsl
insb
std
jl
jnp
jmp
mov
jl
fnstcw
aas
inc
stc
lods
outsl
pop
mov
inc
ljmp
sub
test
mov
pop
cmpsl
insb
in
sub
pusha
xchg
pop
xchg
sub
sbb
nop
out
jb
idivl
mov
bound
inc
loope
int3
fsub
jge
fdivl
das
scas
ds
dec
pop
in
add
dec
subb
dec
xor
sub
inc
loope
fisubrl
jbe
shll
inc
fnstsw
popa
dec
dec
clc
push
es
and
dec
sub
flds
pop
xor
fcomps
es
jo
sbb
push
jns
adc
pop
adc
int
data16
jo
mov
es
pusha
push
clc
nop
mov
adc
jle
and
mov
adc
popa
cmp
movsl
mov
push
pop
xor
adc
cwtl
cs
or
mov
lret
pop
sub
ja
adcb
pop
mov
stc
pushw
adcb
jo,pt
in
in
xchg
push
es
sub
mov
subl
sub
add
pop
lret
mov
or
sti
insb
and
cmc
sub
add
in
xchg
lret
popl
fisubl
xchg
sbb
jno
adc
dec
adc
icebp
jnp
test
dec
lcall
xor
add
jp
ds
and
mov
test
mov
mov
push
je
mov
fnstsw
fsub
cld
testl
xorb
add
scas
push
les
mov
nop
loopne
pop
jnp
frstor
xchg
add
adc
xchg
xlat
loope
mov
fwait
mov
xor
pop
pop
xchg
inc
dec
pop
repz
push
cli
sub
push
jno
ds
jmp
xor
inc
push
lods
mov
sbb
aas
and
or
test
aas
movsl
jecxz
xchg
inc
mov
outsb
rcll
xchg
cmc
dec
xor
pop
mov
fiaddl
outsl
gs
dec
add
repnz
test
mov
sbb
js
add
scas
out
fs
mov
jle
repnz
push
mov
orl
adc
das
dec
mov
pop
adc
sub
notb
ret
sub
xlat
mov
sub
push
addr16
stc
xor
inc
mov
sub
movaps
repz
cmp
pushf
add
inc
ds
cmp
adc
rcr
jg
xor
shr
and
in
add
lret
jmp
jmp
pop
adc
in
int
out
adc
xlat
xorl
push
sbb
pop
shrl
xchg
out
pop
and
jb
std
sub
lods
adc
pop
push
das
sar
je
jb
xchg
cli
ret
out
xchg
mov
jne
sub
mov
xor
aas
stos
stos
mov
jl
mov
jo
loopne
int3
cmpsl
fistpll
push
jl
loope
clc
mov
dec
mov
and
test
mov
les
xor
rol
cmp
mov
movsl
scas
xor
sbb
incl
into
lret
nop
enter
not
test
and
xchg
or
sub
adc
add
call
les
clc
mov
insb
jle
sar
xor
or
call
or
outsl
sub
cmp
xor
xchg
mov
sbb
adc
popf
data16
sbb
lock
push
cmp
push
sub
adc
cwtl
mov
sub
jle
add
cwtl
cmp
jp
cmp
rclb
inc
jo
js
sbb
inc
xor
sbb
inc
push
ja
mov
jmp
pop
adc
scas
mov
push
pop
mov
jp
jmp
call
fsts
in
imul
cmpsb
mov
and
jmp
push
into
jle
cld
fs
cmp
out
dec
leave
xchg
in
cmpsl
das
sbb
xor
lcall
sub
movsl
cmp
jl
in
xchg
test
sub
movsl
jmp
iret
jo
push
shl
js
das
mov
or
sbb
xor
sub
sbb
inc
cmp
lret
mov
add
int3
into
divb
cmp
adc
cmp
iret
dec
xchg
jge
dec
jle
mov
jno
pop
xor
xor
xor
outsb
pop
pop
mov
inc
jp
sbb
add
addr16
mov
rorb
in
frstor
aam
pushf
pop
fwait
sti
aaa
orb
or
in
mov
mov
test
jg
push
xchg
aas
pop
pop
ljmp
arpl
int3
lcall
in
xchg
mov
mov
hlt
push
fwait
mov
js
ds
iret
test
dec
or
sub
mov
enter
cwtl
in
pop
cmp
push
std
in
xchg
addr16
push
les
sarl
lea
lea
pop
idivb
insb
inc
lock
bound
inc
ret
xor
sbb
es
inc
and
mov
add
dec
or
iret
and
xor
daa
outsl
daa
ret
adcl
movsb
xchg
ss
jb
clc
jne
inc
push
xor
stos
push
jne
jl
ficoms
cmp
mov
fld
das
in
xchg
movsl
cmp
in
cmpsb
mov
adc
pop
mov
jb
shr
adc
jl
lods
jmp
mov
icebp
pop
jge
xchg
mov
mov
ficoml
adc
jae
call
cltd
xlat
stos
in
lcall
nop
dec
push
addr16
cs
call
mov
cmpb
ficoms
ds
mov
imul
dec
mov
bound
pusha
fdivr
je
mov
mov
cmp
xlat
dec
aam
inc
dec
je
cwtl
inc
gs
and
scas
adc
mov
test
mov
jg
jge
lcall
and
push
insl
mov
mov
cmc
xor
jns
out
pop
insb
jmp
push
cli
jecxz
mov
xorl
xlat
push
xor
mov
xchg
and
dec
sbb
mov
xchg
push
clc
jns
mov
xor
jmp
mov
push
sub
sti
lods
adc
jno
cmp
xchg
lcall
push
inc
in
scas
data16
daa
lods
jg
adc
xor
fimuls
or
xchg
dec
cmp
sub
lahf
inc
ffreep
add
imul
xor
push
and
xchg
dec
cltd
sbb
cld
sbb
jns
jp
bound
sbb
mov
out
lret
jmp
jb
jg
ljmp
mov
jl
jnp
mov
pop
mov
orl
mov
and
mov
push
mov
fdivr
sub
lret
fldt
lea
adc
fwait
in
lret
jmp
xchg
mov
mov
adc
aam
loope
add
sbb
ja
adc
stc
fstpt
push
int3
clc
push
jmp
mov
adc
nop
in
mov
sti
push
or
inc
out
out
cld
push
adc
sbb
scas
jno
inc
out
add
shll
addr16
pop
jnp
or
sub
push
inc
addr16
fs
dec
lahf
push
aaa
xor
add
fcoml
je
jp
mov
jbe
popf
cmp
dec
xor
lea
repz
xor
push
adc
jne
adc
sub
subl
pop
mov
scas
leave
mov
inc
ret
cmpb
bound
cmp
fwait
jno
jmp
xchg
test
cmp
xor
xchg
sbb
sbb
sbb
jae
mov
popa
mov
in
inc
mov
aad
test
add
rclb
mov
inc
stos
cmp
test
aad
mov
insl
fistps
ret
and
xor
data16
imul
insb
fidivl
mov
aas
not
dec
jnp
lods
outsl
loope
fcoms
dec
or
and
daa
shrl
xchg
imul
bound
shll
aad
int3
lcall
xchg
dec
xor
out
cmpsl
inc
scas
shll
cwtl
movsb
pop
pop
push
cmp
lahf
sarl
xchg
adc
loopne
mov
sub
std
lods
mov
into
sti
mov
ljmp
or
mov
mov
add
mov
xchg
ja
xor
cs
insb
lcall
jp
cmp
jl
stos
fistpl
inc
sub
js
ret
repnz
jbe
sahf
gs
and
ljmp
inc
cli
jecxz
mov
nop
mov
ret
push
sbb
dec
jno
inc
mov
push
scas
push
adc
push
mov
out
cli
mov
out
add
or
push
popa
dec
jb
sti
jl
js
repz
shlb
jmp
lahf
pop
adc
xor
or
xchg
insl
hlt
push
adc
lret
flds
push
sub
lret
aas
jns
adc
xchg
sbb
aad
and
and
insl
mov
dec
xchg
xchg
pop
sbb
popa
push
sub
subb
mov
daa
mov
scas
dec
outsl
push
cmpl
sub
icebp
adc
int
push
pusha
xor
mov
mov
cld
ss
sub
sbb
lods
lret
sub
loop
adc
cmp
mov
sbb
mov
incb
rcr
adc
lods
stos
stos
aas
inc
shll
push
cmpsl
ss
xchg
cmp
lods
dec
xchg
lods
pop
cmp
in
adc
lods
mov
arpl
push
in
pop
es
insl
xor
rolb
or
adc
imul
call
stos
mov
repnz
dec
insb
xor
aad
mov
in
push
stos
pop
aas
jnp
jp
adc
and
ds
adc
repz
dec
add
mov
fs
int3
pop
jmp
aam
out
jnp
push
mov
out
push
xor
jmp
inc
scas
test
das
stos
insb
outsb
sbb
pcmpgtd
in
push
mov
dec
and
mov
enter
jmp
adc
loop
insb
jne
imul
out
fdivs
rcrl
ds
lret
xor
mov
repz
scas
pop
pop
dec
scas
inc
adc
test
and
jmp
ljmp
popa
xor
inc
mov
ret
pusha
adc
push
mov
pop
js
popa
pop
jge
cmc
xchg
xor
and
push
jp
mov
pop
push
and
or
or
cmpsl
inc
aaa
in
lahf
jp
aam
lods
jle
mov
pushf
xor
in
push
outsb
adc
lods
dec
xor
in
out
ds
enter
das
push
adc
mov
sbb
mov
inc
ret
and
fdivl
clc
inc
das
sarl
bound
push
int
fwait
aad
xchg
test
and
bswap
and
sub
ficoml
jne
pop
mov
jg
jge
repz
cmc
sbb
les
jo
sub
insl
rolb
push
sub
xor
js
jecxz
int
adc
ss
mov
adc
mov
cwtl
aam
and
jns
popl
sub
push
push
pop
out
mov
push
les
adc
es
out
add
faddp
cmpsl
mov
int
scas
fiadds
stc
xor
aas
add
in
hlt
inc
aas
rcll
in
stos
jne
mov
jecxz
call
adc
xor
inc
sub
mov
ficoms
ja
inc
daa
negl
test
sub
sub
dec
mov
or
mull
out
add
outsb
ror
fiadds
pop
xchg
lret
les
inc
adc
jo
and
xchg
das
push
loope
fwait
jo
xchg
sub
jp
out
cmp
clc
push
adcl
mov
inc
push
loopne
mov
dec
cs
jge
ret
lock
out
js
popa
xor
xchg
jle
mov
add
cmp
mov
arpl
ss
das
push
adc
mov
fsubrs
push
enter
pop
in
inc
or
scas
stos
push
mov
inc
scas
dec
push
mov
add
shll
es
fwait
test
ret
mov
dec
add
push
adc
je
mov
js
sti
movl
sti
mov
xchg
ljmp
call
sbb
std
int3
call
xor
aaa
xor
sub
enter
push
test
jbe
xchg
push
aaa
adc
add
ja
push
movsb
dec
sub
jecxz
fwait
dec
js
insb
inc
mov
adc
fcomps
jne
mov
adc
out
ja
les
movb
pop
inc
pop
xor
mov
rorb
fidivrl
xlat
mov
leave
popf
xor
cld
ret
push
inc
lret
cli
jp
out
sbb
xor
out
enter
rcrb
and
in
mov
inc
mov
imul
mov
js
addr16
adc
xor
pop
int
outsl
dec
add
les
mov
xchg
rcrb
pushf
and
adc
adc
xchg
pop
stc
aaa
or
insl
xchg
cmp
xchg
adc
xchg
into
aad
lcall
lods
xchg
add
daa
shrl
jmp
xchg
movsb
data16
xchg
ss
jns
add
pop
adc
push
ds
jb
push
aad
jge
xchg
sbb
loopne
jmp
cmpb
fldenv
or
out
lods
sbb
jg
jnp
push
mov
notl
xor
mov
loope
mov
inc
jp
sbb
mov
mov
mov
bound
mov
pop
es
les
xor
shll
imul
xchg
push
ret
faddl
into
stos
inc
jp
in
add
xor
push
pop
jl
or
xlat
dec
test
jl
push
enter
push
lret
ljmp
fs
movsl
sub
in
sahf
jb
aam
jl
jge
mov
gs
movsb
jl
inc
jnp
adc
or
push
das
clc
sub
xchg
fwait
ljmp
sub
iret
in
xor
xchg
sbb
hlt
int3
mov
xor
adc
movsb
popa
rclb
loop
outsb
sub
add
mov
and
push
int
or
sbb
adc
loope
rcrl
fnstcw
xorb
lds
in
je
in
cmp
idivl
xor
add
out
lret
popa
add
jg
in
push
in
pop
jecxz
jle
push
fcomps
enter
test
mov
rcrb
fcmovb
int3
mov
cmc
or
pop
je
cmp
jmp
addr16
dec
jns
push
xchg
xchg
mov
xchg
fsubr
add
dec
adc
jne
mov
xchg
inc
roll
xchg
loope
sub
mov
sbb
scas
cmpsb
mov
mov
sub
in
pusha
outsb
push
fcomi
inc
mov
mov
mov
imul
lods
dec
push
dec
jae
aas
mov
icebp
xchg
mov
cmc
enter
mov
jecxz
fcmovnu
jae
xor
loope
jb
test
imul
jbe
loope
dec
mov
push
xchg
pushf
jmp
sub
inc
push
ret
jo
xor
mov
adc
test
cmc
sbb
xchg
idivb
push
jp
mov
sbb
movsl
rcrl
cmp
mov
je
push
movsb
and
movsl
sarl
sarb
sbb
clc
xlat
mov
and
cmp
in
imul
mov
mov
idivb
push
pop
push
aas
adc
test
popa
pop
ret
jmp
add
cmp
fnstsw
outsl
sub
adc
rcll
pop
lods
loope
fucom
inc
sbb
or
fstpl
xchg
sub
mov
mov
daa
int3
add
fistps
mov
cmpsb
lock
add
mov
pushf
sub
mov
pop
test
xor
mov
sarb
inc
pop
enter
mov
jl
add
jl
enter
incb
or
scas
div
mov
addr16
dec
xor
lret
sbb
push
cmp
sub
cli
and
xchg
mov
lock
adc
adc
add
sub
popa
inc
out
mov
push
inc
jnp
inc
inc
pop
mov
sbb
jecxz
sub
or
mov
popf
sub
lods
xchg
pop
sti
iret
jge
jp
inc
ss
sahf
ljmp
push
out
inc
adc
cmp
xchg
mov
lahf
inc
dec
bound
pop
add
xchg
sub
leave
sub
fsubrl
adc
jbe
sub
inc
adc
inc
add
mov
inc
inc
test
mov
shlb
push
mov
dec
mov
sub
xchg
lds
sbb
pop
in
or
imul
shll
pop
cld
dec
push
and
push
sbb
and
add
cmpsl
jb
insb
fdiv
jecxz
inc
mov
sub
cmp
cmp
inc
das
mov
pop
lahf
sub
add
or
aaa
sub
add
pushl
scas
push
jle
push
test
pop
orl
add
je
mov
mov
stos
dec
cli
xor
mov
iret
subb
xor
lods
xchg
lahf
aad
enter
fs
les
js
mov
jl
adc
pushf
mov
sub
push
fsts
mov
mov
pop
out
movsl
pop
ja
xchg
jne
sub
mov
aad
mov
in
imul
adc
sub
jne
pop
add
mov
xor
and
or
jge
inc
pusha
call
inc
push
mov
mov
mov
divb
push
cmpsl
sub
jg
out
mov
das
aaa
mov
mov
cmp
xchg
push
jae
mov
or
pop
mov
aas
xchg
jecxz
xor
js
faddl
les
testl
in
shrl
add
adc
mov
popf
sub
jno
ret
cmpb
jae
adc
mov
inc
inc
nop
add
dec
das
jle
mov
insb
ja
sbb
jmp
out
inc
jb
fnstcw
aas
aaa
adc
aam
ja
mov
xchg
lods
test
add
ret
xchg
mov
mov
push
fidivl
mov
int
mov
or
mov
sbb
inc
mov
jl
ficompl
dec
add
jl
outsl
dec
inc
sub
data16
xor
push
push
sbb
scas
mov
adc
lret
cs
cmp
cmp
jnp
cmp
jb
cmp
test
cmc
int
stos
mov
cltd
inc
cmc
addl
insl
or
jle
notl
inc
xchg
out
loop
mov
shlb
stc
dec
aas
cli
push
pop
insb
fdivs
xchg
and
sbb
cmp
scas
cmpsl
out
mov
xchg
mov
mov
rorb
inc
jmp
mov
inc
lds
fdivrs
js
push
popf
jbe
push
pushf
jle
aaa
adc
push
xchg
sub
imul
xchg
stc
lock
or
fldl
sub
and
push
adc
in
mov
daa
dec
pop
pop
mov
pusha
cmc
rcll
inc
hlt
push
je
or
mov
outsb
fidivrl
cwtl
jp
sarb
sub
and
sub
shr
ret
sub
popf
add
pop
mov
dec
cwtl
sbb
push
mov
or
dec
and
cwtl
push
and
dec
mov
cmp
jne
dec
jp
cmpsl
out
stos
push
or
stos
insb
mov
mov
addr16
mov
sub
stos
jno
ss
jmp
add
jnp
jl
or
ficoms
push
add
xor
fdivp
mov
notl
xchg
enter
scas
push
push
sub
lock
test
fldt
in
push
insl
scas
insb
mov
out
add
repz
pop
lods
pop
rorb
sub
ret
mov
dec
inc
sub
jle
stos
imul
jbe
sub
cmp
add
fdivs
xor
sbb
inc
and
adcb
ds
movsl
jno
jle
and
data16
sub
cmpsb
mov
lahf
pusha
jle
sahf
and
popf
push
je
outsl
inc
subl
push
sub
icebp
shll
mov
dec
inc
test
inc
js
add
out
dec
and
pop
jecxz
fsts
rcrl
incl
sbb
ficompl
std
pop
or
adcb
loop
mov
or
push
fidivs
add
cmp
inc
adc
je
sub
mov
sub
ficompl
xchg
fistpl
add
ss
in
into
das
jmp
inc
push
enter
stos
insb
cmp
mov
lods
push
out
and
inc
jne
out
jmp
aas
mov
movsl
pop
les
sub
add
das
ljmp
adc
lcall
dec
lcall
sub
out
outsl
leave
lahf
push
das
sub
cs
mov
in
sbb
and
jge
adc
or
xchg
dec
cmp
es
pop
push
push
jnp
loop
fwait
ss
aaa
ret
add
sub
mov
test
loopne
sub
ret
adc
adc
hlt
xchg
xchg
ss
push
xor
cltd
icebp
mov
out
mov
xchg
jnp
out
mov
or
mov
or
dec
popf
cmpsl
sbb
scas
scas
scas
cmpl
fldl
push
cs
inc
lds
loope
dec
inc
adc
mov
pop
cmpsl
xor
enter
add
leave
jb
pop
ljmp
rcrl
push
mov
mov
xor
sbb
in
loope
insb
hlt
bound
push
xchg
dec
or
jo
sbb
jbe
push
adc
or
enter
lcall
xor
cmp
xchg
dec
lds
ljmp
push
sub
loopne
mov
hlt
cmc
adcb
shlb
dec
adc
jo
inc
xor
dec
xchg
cmp
mov
mov
movsb
dec
addr16
ret
push
imul
push
in
leave
mov
mov
push
hlt
pop
mov
jge
shlb
pop
xor
ret
pop
xor
roll
lods
xchg
ja
jg
sub
xor
dec
jmp
adc
fcompl
rcrb
ds
test
mov
or
inc
out
push
lods
xor
push
dec
mov
xor
sub
test
pop
pop
cmp
insl
xlat
sti
mov
aaa
out
add
movsb
cmp
outsl
inc
xor
add
cmp
int3
inc
mov
cmp
mov
lea
lods
adc
mov
sub
pop
loopne
lods
dec
sbb
adc
cmp
add
lahf
cmpl
jnp
lahf
dec
dec
push
sub
lods
dec
icebp
movsl
fsubrp
ljmp
test
fs
add
cmp
rcrb
inc
push
jae
pop
xchg
cmp
imul
mov
repnz
fidivrl
mov
mov
leave
or
dec
popa
js
push
xchg
into
popf
nop
jae
ja
mov
fidivrl
cmpsl
xchg
cld
jp
xchg
popf
cmp
jge
push
or
pop
ss
stos
pop
cmp
sbb
cmp
gs
xchg
outsb
fnstsw
push
cmp
in
push
dec
sub
jecxz
sarb
mov
push
addr16
add
xchg
enter
addb
mov
insb
xor
jg
data16
int
and
adc
cmp
insb
ret
xor
dec
or
hlt
adc
lds
mov
xchg
mov
lock
or
cmp
int3
mov
xchg
icebp
mov
cmp
xchg
jle
adc
sarl
cltd
sbb
dec
out
sub
or
sbb
xchg
sahf
hlt
sub
mov
popa
mov
cmp
xorb
nop
in
xor
add
es
sbb
addr16
cmp
add
cmp
ficomps
jbe
sub
cld
push
cmp
mov
cmp
aam
add
leave
adc
fisubs
cmp
jecxz
mov
adc
cmp
cmp
mov
mov
imul
dec
andb
stc
stos
cmp
cmp
test
jl
cmp
push
push
popa
movsl
dec
fdivrl
and
lock
mov
or
lret
cmp
in
dec
jecxz
xchg
add
mov
mov
dec
mov
and
and
cli
pusha
add
je
lret
jb
cmp
clc
push
jge
daa
cmp
loope
pop
cmp
and
jb
cmp
mov
fmuls
pop
cmp
and
out
or
xchg
ret
enter
nop
lea
dec
push
xor
mov
lods
dec
xor
push
push
in
loopne
xor
les
cmp
cld
mov
mov
imul
inc
out
repz
and
scas
imul
cmp
fidivs
test
andl
repz
mov
fimull
mov
or
dec
gs
mov
cmc
mov
add
sub
xchg
add
imul
pop
cmp
hlt
mov
cmp
push
mov
test
imul
call
fcmovb
cmp
sbb
inc
sub
push
sub
lcall
jmp
lea
faddl
roll
aad
in
add
dec
inc
and
fs
sbb
jne
xor
insb
push
insb
addb
imulb
mov
sbb
mov
insl
clc
adc
push
sti
lods
cmp
rorl
xchg
mov
imul
pop
mov
push
pop
adc
dec
fs
cmpsl
in
cmp
push
rcrb
push
addr16
sub
mov
mov
aas
pop
mov
jno
fwait
mov
cmpsb
mov
pop
ljmp
jns
cmc
movsb
mov
inc
in
add
jge
cwtl
or
out
jnp
adc
scas
cmp
jmp
sbb
pop
xchg
jb
mov
pop
inc
jp
jle
out
andl
and
xchg
fstpt
pop
les
cmpl
mov
rorb
adc
cs
enter
je
push
sub
inc
dec
xor
cmp
mov
pop
lds
mov
mov
je
sub
call
jbe
flds
lods
pop
mov
and
or
fdivrs
aas
push
sbb
inc
inc
gs
cmp
mov
ffree
mov
mov
in
push
inc
cmp
pop
test
push
sub
add
mov
mov
push
sti
xor
cmp
xchg
insb
ficoml
loopne
push
sub
lcall
adc
dec
cmpsb
cmpsl
les
adc
sub
daa
cmp
pusha
aad
cld
popf
cmpl
push
sbb
test
fdivrl
in
dec
loop
add
push
sti
ss
loop
cli
mov
and
mov
and
and
sbb
mov
scas
inc
cmp
pop
int3
push
dec
mov
mov
les
daa
shll
jge
sbb
inc
sub
dec
testb
lods
fsts
mov
int3
dec
test
adc
xor
jl
mov
xchg
cmp
rcll
or
mov
xchg
cmp
inc
cwtl
ljmp
ss
je
sarl
je
call
shl
call
into
jecxz
sbb
dec
xchg
out
cmp
sub
gs
inc
cmp
cmp
jl
lock
loopne
cmc
cmp
jecxz
cmp
jne
jmp
sbb
ret
xor
jnp
push
mov
jge
aaa
sbb
push
cmp
pop
fwait
repz
mov
sub
popl
pop
fs
push
int3
and
out
bound
mov
movsb
sbb
xor
adc
inc
cld
and
xor
je
push
int
into
ret
mov
hlt
cld
stos
imul
sub
cltd
mov
xor
xchg
scas
xchg
nop
add
sub
shr
cmp
loopne
cli
push
sub
push
jp
icebp
add
lock
inc
cmp
jl
pop
mov
mov
in
jmp
sarl
outsb
inc
iret
dec
icebp
jmp
push
mov
sbb
fbld
mov
adc
lahf
xor
mov
jo
sub
jge
cmc
loop
movsl
add
pop
rcrb
shrb
mov
cmp
mov
mov
dec
sub
iret
imulb
outsb
xor
push
es
sbb
sub
cmp
xor
int3
ret
jns
iret
cwtl
mov
aad
outsb
push
mov
dec
or
stos
inc
cmp
mov
and
sarb
pop
cld
push
outsb
idiv
cmp
lcall
add
pop
mov
sarl
add
leave
aaa
jp
cmp
dec
dec
jo
std
jae
sub
cld
roll
inc
push
jecxz
cmp
and
fidivl
sahf
repz
sub
adc
in
adc
ret
cli
cmp
sbbb
out
sbb
cmpsb
pop
inc
lahf
int3
xor
test
movsl
lret
jo
popa
sub
mov
push
inc
out
jge
cmp
mov
mov
outsl
cmp
adc
fnstsw
fcomps
cli
ja
rclb
sarb
std
mov
cmp
and
push
sarl
aaa
aad
xchg
sbb
shl
fs
jo
xchg
inc
mov
fisttps
ret
sub
mov
mov
cmp
mov
shl
fstpt
decl
shll
mov
inc
push
cmpsl
in
mov
mov
jno
cmp
mov
pop
das
xchg
subb
loopne,pn
mov
jbe
jne
jo
aaa
push
popf
lock
jae
mov
lcall
out
cmp
and
mov
orb
test
sub
insb
and
push
push
call
jae
sub
xor
cmp
mov
inc
cmp
arpl
mov
ss
dec
lret
fisubrl
fcomps
mov
and
xchg
mov
mov
sub
leave
jp
add
in
insb
pop
inc
mov
mov
pop
cmp
lock
stos
push
fsubl
inc
popa
mov
add
imul
push
mov
fidivrs
das
mov
pushw
cmp
mov
xor
pop
in
in
cwtl
xchg
mov
ljmp
sbb
cmp
inc
or
imul
ficoms
idivb
lcall
or
das
mov
mov
fisubl
or
and
adc
call
jne
sub
lods
mov
pop
xor
cltd
out
ss
lcall
cs
loope
mulb
leave
je
mov
in
xchg
dec
mov
inc
mov
or
mov
pop
in
dec
repz
fildl
movsl
mov
aam
shl
lret
pop
ja
sbb
pop
dec
cmp
cld
adc
insb
mov
and
enter
insb
and
in
mov
xchg
push
xchg
mov
push
popf
xchg
mov
outsb
adc
insl
mov
fadds
lock
les
add
inc
das
icebp
push
pop
sub
ja
lock
out
int3
loope
xchg
jbe
adc
mov
and
xor
jle
es
rorb
inc
adc
push
fcmovnb
and
jmp
popf
ja
and
mov
add
lea
ds
jecxz
dec
cwtl
in
dec
pop
popa
cli
popf
jmp
sub
or
mov
inc
pop
stc
push
shlb
adc
mov
test
adc
mov
out
mov
xor
jmp
and
std
jne
das
xchg
add
out
lds
mov
jp
arpl
mov
jle
jae
and
pop
and
int3
divb
inc
cs
jo
mov
test
fld
ljmp
mov
xor
adc
in
jne
addr16
sbb
insb
mov
bound
adc
stc
sbb
out
ds
adc
into
push
xchg
sbb
pop
data16
stos
adcl
int
mov
push
dec
xchg
jmp
push
leave
decl
ss
fdivl
movsl
gs
xchg
mov
push
aad
insl
mov
mov
xor
loopne
leave
and
sti
aas
xlat
aaa
popa
sub
jle
decl
data16
rcr
xor
mov
ror
pop
in
adc
adc
dec
mov
push
outsl
add
pop
ret
sbb
fsubl
pusha
sub
das
sbb
and
inc
adc
pop
faddl
mov
and
dec
ja
movntps
jae
hlt
pop
ret
and
out
add
mov
shl
inc
mov
out
push
jl
mov
lods
into
cmp
mov
enter
or
push
mov
nop
divb
mov
pop
pop
adc
sub
loope
enter
inc
into
call
aas
testl
add
mov
enter
xchg
jo
repnz
push
adc
sbb
data16
movsl
sub
xchg
inc
adc
lret
aas
mov
lea
pop
mov
pop
sub
jo
les
int
addr16
js
in
and
add
orl
ret
mov
pop
mov
stc
test
jb
iret
mov
xor
sub
xor
add
and
adc
mov
cli
push
mov
push
aad
jge
das
lods
push
int
mov
xchg
imul
or
test
gs
mov
adc
js
fmull
stc
sub
jo
adc
aaa
adc
and
aaa
out
mov
pop
or
rclb
sub
jle
stos
enter
rcrl
pop
ja
cmp
shl
pop
and
mov
pushf
push
inc
aad
adc
cmc
xchg
int
jecxz
call
repnz
push
dec
add
addr16
cmp
jl
xchg
imul
xchg
int
jns
mov
sub
mov
sbb
sahf
ret
xchg
lahf
mov
and
test
in
popf
out
sub
pop
mov
enter
xchg
cwtl
lods
andl
push
mov
addr16
push
movsl
push
clc
push
mov
clc
or
je
push
mov
leave
and
dec
lret
pop
test
lods
pop
mov
aad
lcall
sbb
jecxz
xchg
rorl
pop
or
in
int3
mov
das
adc
insb
xor
fxch
nop
mov
mov
or
bound
aaa
sarl
fdivl
jl
push
jmp
scas
leave
out
xchg
loopne
iret
inc
mov
mov
add
jns
mov
jg
pop
and
outsl
adc
iret
lret
negl
jmp
sub
test
mov
inc
adc
sbb
mov
or
jbe
out
jmp
mov
cwtl
xchg
rorl
fidivrl
fbld
sub
xor
pop
mov
lea
and
adc
fsubrs
ds
das
les
dec
jp
sub
sbb
jle
stos
jg
cli
int3
sub
call
sbbb
lret
add
xchg
cmp
repnz
int3
mov
cmp
das
inc
shll
and
sbb
cmc
int3
shlb
insl
mov
leave
jecxz
push
adc
pop
xchg
dec
pop
push
sub
ds
in
xchg
or
mov
or
and
sub
ds
movsl
pop
sbb
ret
cmp
cmp
push
aaa
fs
outsb
sub
ds
sarl
mov
sub
push
jno,pn
mov
rclb
adc
repnz
loope
xor
xchg
pushw
test
cmc
xchg
fwait
push
mov
je
push
iret
in
loopne
ljmp
insb
addl
cmc
jp
mov
cltd
add
jb
cld
test
and
xchg
aaa
mov
cmp
outsb
mov
adc
cmp
inc
lods
fidivrs
cmp
cmp
cmp
jecxz
push
cmp
nop
into
mov
lods
ljmp
cmp
daa
xlat
mov
stos
xor
std
adc
lsl
add
mov
inc
or
int3
sbb
mov
fstpt
fs
cmp
pop
sub
push
decl
mov
frstor
add
cmp
xor
xchg
adcl
dec
dec
lds
adc
or
cmpsl
pop
lods
addr16
jg
cmp
test
cmp
ss
sbb
cmp
call
xlat
dec
cmp
pop
pop
cwtl
fistpll
pop
sub
dec
mov
mov
mov
cmp
sub
xor
std
popa
js
cmc
cmp
mov
clc
popf
fcoml
or
dec
fwait
add
sarl
mov
jae
inc
xor
sbb
cmp
lds
push
push
addr16
or
push
jne
aad
sarb
icebp
nop
cmc
sbb
mov
push
pop
ljmp
das
lret
push
mov
mov
fisubrl
mov
xor
cmp
push
mov
xchg
out
mov
push
dec
mov
lahf
test
test
mov
jns
dec
lods
sarl
roll
and
ret
fistps
pop
rorl
or
dec
push
pcmpgtd
pop
mov
test
addr16
xor
cmp
mov
xchg
fisubrs
shrl
cmp
hlt
adc
aam
or
cmp
stc
mov
cmpsb
xchg
iret
je
leave
cmp
cmpsb
pop
mov
cmp
dec
lods
int3
imull
dec
xchg
sbb
in
add
mov
or
xor
cmpl
out
mov
cmc
xchg
push
cmpsl
addl
push
mov
dec
push
mov
lods
cs
jp
neg
cmp
leave
pop
xor
stos
jno
push
xchg
jecxz
sti
and
or
pop
mov
test
arpl
adc
loop
cmp
pop
sbb
scas
clc
gs
cmp
add
mov
sbb
int3
out
icebp
sub
loope
ss
pop
cld
sbb
std
pop
nop
mov
lcall
dec
sbb
lea
clc
xchg
cmpsb
cmp
sti
lcall
gs
sub
in
pop
sbb
mov
mov
ficoms
push
lahf
imul
loope
jno
push
mov
adc
dec
and
pushf
cs
jo
adc
cs
popa
sahf
cmp
sbb
sub
mov
call
push
dec
jne
add
lea
jg
cs
sub
add
mov
push
cmp
pop
mov
pop
sbb
sti
cmpsl
xchg
in
testl
push
loop
fcmovu
std
mov
mov
testl
lret
or
adc
mov
lods
jp
jbe
push
pushf
fdivrl
repnz
xchg
sbb
enter
dec
ja
lods
cmp
fnstenv
cmp
insl
pop
add
dec
cmp
bound
mov
insl
cmp
xor
cmp
and
sbb
pop
cmp
std
mov
pop
jno
aaa
cmp
stc
sbb
ja
lahf
cmp
mov
cmpsl
xchg
cmp
push
pop
clc
inc
inc
dec
js
addl
mov
loop
insb
mov
pop
sbb
cmp
fcomp
les
fsubrl
pushf
or
cmpsl
pop
cmp
xchg
lcall
ret
in
mov
insl
or
sbb
ss
jbe
and
pop
push
arpl
add
ret
sbb
lds
cmpsb
pushf
cmp
sbb
and
inc
outsl
sbb
stos
shlb
addl
adc
adc
insb
cmp
add
pop
cmp
jns
fisttpll
insb
loope
sub
cltd
repnz
mov
xor
dec
mov
mov
cmp
mov
test
cmp
cwtl
lahf
jns
push
outsb
jae
cmp
jmp
cmp
das
aad
dec
out
inc
shrb
xorb
scas
adc
cmp
xor
stc
ja
cmp
mov
test
cmp
push
push
imul
dec
mov
fldl
repnz
test
xor
cli
int
lock
out
xor
pop
in
nop
movsl
sarb
push
mov
mov
xchg
cwtl
sub
jg
or
lods
sub
shrb
out
aas
push
fnstcw
inc
or
imul
and
xor
jne
xchg
mov
mov
jns
sub
push
sub
cmp
sub
lahf
lcall
push
aam
xor
pop
leave
adc
xor
out
mov
mov
dec
es
gs
jmp
xchg
pop
cmp
push
cli
out
inc
les
repnz
jns
mov
adc
xor
adc
stc
sub
mull
xor
add
pushf
scas
cmp
std
fbld
cmp
jb
int
je
nop
jnp
ja
in
add
xchg
aaa
test
cmc
cli
mov
sbb
and
adc
mov
bound
les
cs
push
xlat
lods
inc
imul
out
or
jle
and
xor
ds
arpl
or
insl
and
cmp
lahf
jo
pushf
mov
dec
or
fsubrp
or
cmp
stc
xchg
jae
cltd
mov
cmp
dec
mov
lcall
add
jge
cmp
bound
dec
push
xor
dec
xor
pop
std
test
dec
mov
fdivrl
daa
test
adc
ljmp
xor
imul
jns
dec
int3
mov
in
and
jae
cmp
add
nop
in
ret
cmp
lahf
mov
out
push
mov
mov
scas
out
adc
jg
int3
xchg
xor
jno
cmovbe
xchg
cmp
fbstp
mov
stos
fstpt
xchg
mov
dec
jmp
leave
dec
rcr
mov
cmp
push
loop
xor
cmp
xchg
arpl
rcr
out
sub
or
repnz
add
inc
push
push
insl
mov
push
dec
cmp
cmp
ds
pop
lea
loop
iret
loope
sub
push
mov
aam
std
fmulp
lea
sbb
stos
cs
inc
pop
cmp
mov
adc
mov
mov
mov
or
nop
pop
cmp
sar
add
imul
js
fs
sub
add
cwtl
xchg
sbb
loope
fidivs
outsb
xor
out
push
cmp
cmp
das
mov
cli
flds
out
lods
cmp
pop
fidivs
dec
push
fidivrl
xor
jae
xchg
adc
ds
or
push
and
xchg
mov
xor
lods
xlat
push
cmp
sub
fwait
cmp
hlt
mov
mov
mov
pop
cmpsb
addr16
outsb
mov
push
leave
adc
xchg
repz
dec
mov
dec
int3
ja
cmp
scas
cmp
dec
pop
pop
cmp
pusha
cmp
mov
sub
push
in
lds
je
pushf
cmp
das
fisttpl
and
addr16
push
stos
adc
movsl
inc
cmp
aaa
or
sti
adc
push
xchg
mov
rcrl
jae
cmp
adc
jl
out
pop
mov
cmp
pop
negl
adc
pop
cmp
cs
aas
movsb
cli
mov
out
lock
fistl
fidivrs
xor
xlat
loopne
in
jo
mov
icebp
das
push
or
and
mov
mov
xor
xchg
pop
fdivs
push
sbbl
aam
jl
cmp
ficoms
hlt
adc
lock
insb
loopne
push
std
cmp
and
js
sub
aam
lret
dec
jnp
test
adc
inc
xlat
dec
addr16
out
movsl
int
cmp
add
cmp
mov
xchg
lret
sbb
and
mov
pop
mov
loop
jmp
mov
out
cmp
sbb
insb
ds
or
sub
aaa
jae
pushf
mov
mov
pop
mov
sbb
xor
shl
jns
push
pop
in
cmp
mov
mov
sbb
aas
xor
stos
sub
movsb
inc
call
mov
test
push
mov
in
mov
or
inc
pop
push
sub
push
in
jmp
sbb
fld
sub
dec
mov
hlt
jmp
cltd
lahf
into
roll
inc
sub
mov
add
lcall
ffreep
mov
lock
testb
lea
out
test
addr16
push
sbb
xor
pop
jb
xor
push
pop
push
add
push
repz
out
jbe
jmp
stos
push
push
popf
mov
sbb
push
xchg
push
ds
or
ds
ja
icebp
adc
sub
sarl
movsb
push
jle
ret
cmp
aam
scas
jns
mov
add
or
cmpsb
std
mov
xor
int3
dec
and
ljmp
scas
dec
mov
sahf
cmp
xchg
icebp
sub
loopne
incl
outsb
xchg
and
popa
jbe
sbb
shlb
push
xor
lcall
add
xor
out
jns
mov
pop
inc
mov
imul
and
sub
cmp
xlat
ret
lock
sti
fmull
xchg
xchg
cs
xchg
and
sub
mov
cmp
fcomip
jg
cmp
mov
sub
mov
das
test
push
jb
pop
cmp
cmc
add
mov
inc
or
js
rorb
lret
stos
add
jp
int
dec
lods
shll
add
cld
cmpsl
sub
cmp
inc
xor
bound
movsl
popf
mov
gs
fldcw
mov
aas
mov
jge
cmp
xchg
jne
insb
nop
cmpb
inc
movsl
xchg
imul
rcrb
inc
aas
inc
lds
adc
push
xor
and
cmp
xor
inc
leave
xor
fstpt
aad
pop
sbb
jo
sub
pushf
sahf
mov
add
and
cmp
push
pop
cmp
fsubr
iret
pop
push
cmp
mov
xchg
jnp
ret
jmp
lcall
ja
dec
aaa
xchg
scas
insb
fsubrl
xchg
cmp
subl
pop
push
cmp
sbb
cld
and
pop
lods
xor
cmpl
stos
mov
sub
lods
xchg
loope
mov
clc
cmc
inc
jg
mov
sub
pop
adc
jl
call
je
or
insb
in
xchg
ss
iret
and
or
cmp
cmp
mov
sub
cmp
insb
lahf
pop
ja
bound
cmp
pop
jb
xchg
cs
mov
xor
mov
jge
cmp
and
cmp
mov
push
jno
xor
jge
aad
mov
test
xor
cmpsb
fdivrl
mov
leave
and
insb
lret
push
stos
popf
adc
fucomi
in
pusha
jmp
je
imul
arpl
xorl
in
push
sbb
cmp
mov
loop
inc
idiv
out
jb
ret
shrb
cli
lds
jp
xlat
cmp
loope
icebp
jge
push
cmp
das
nop
orl
dec
jae
addr16
lea
mov
cmp
fcomps
sbb
pop
fucomi
cmp
lea
push
sbb
js
and
cmp
lahf
fisttpll
cs
push
pop
add
shr
mov
arpl
jb
add
sbb
pop
cmp
sbbb
ret
lea
leave
xchg
xor
sub
sbb
and
cmp
inc
xor
mov
imul
fucompp
mov
xor
mov
je
add
cmp
enter
idiv
xlat
out
sarl
cmp
pop
push
testl
and
dec
push
aas
add
adcb
mov
sti
stos
scas
das
xor
cmp
cli
rcrl
cmp
cmp
inc
insl
lock
sahf
cmp
xchg
and
dec
aam
int3
cmc
dec
mov
xchg
adc
ss
cmp
adc
stos
ds
cmp
xor
jecxz
xor
lods
imul
test
sbb
lret
xchg
movsb
dec
shll
dec
pop
inc
lret
and
sti
nop
dec
dec
fiaddl
dec
ret
cmp
shrb
mov
push
test
test
cmp
dec
ret
mov
aad
xor
sti
cmp
mov
push
adc
inc
mov
mov
sub
fprem
pop
fmulp
sub
ds
jmp
mov
mov
adc
in
sbb
outsb
pop
dec
sub
push
iret
mov
cs
das
mov
ds
xchg
xchg
jge
sub
sub
movsb
ds
test
in
jnp
lods
ds
ret
jo
cs
les
cld
test
xor
or
push
sub
sbb
mov
lret
in
sbb
and
scas
int3
dec
inc
mov
and
cs
fiadds
mov
add
jbe
sahf
xchg
mov
das
lods
hlt
fwait
in
cmp
rcll
adc
mov
outsl
rolb
adc
cmpsl
mov
xor
in
push
jp
stc
pop
sub
push
push
push
leave
xor
rcrl
sbb
in
jge
jne
clc
mov
lret
push
xor
sub
xor
mov
sub
xchg
incb
into
insb
inc
enter
xor
lds
mov
inc
call
push
xchg
xor
push
pusha
mov
insl
lcall
ljmp
aaa
xorb
daa
mov
or
fcoms
les
cmp
pushf
loopne
push
xor
sub
out
sub
mov
mov
ret
test
sub
out
rol
lods
inc
cmp
pop
or
jmp
mov
adc
dec
pushf
mov
mov
scas
xlat
and
out
pop
out
pusha
cmp
mov
lods
xlat
mov
xlat
push
cltd
jbe
cld
sub
and
adc
in
push
icebp
cmp
jle
push
test
and
aaa
jp
adc
adc
ljmp
jle
mov
add
lret
pop
xchg
jge
jbe
sub
lds
xor
stos
ret
push
or
inc
cmp
rcl
pop
inc
or
sbb
adc
addr16
shlb
ret
add
dec
adc
push
test
xlat
nop
andl
in
imul
add
ficoml
xchg
ret
mov
mov
aaa
addr16
cmpsl
xor
fiaddl
cmp
popa
scas
insb
and
jns
sub
sub
fcoml
in
enter
sbbl
daa
sbb
and
out
cmpsl
push
stc
mov
cmp
sub
mov
pop
mov
sbb
sahf
xchg
out
aas
int
push
mov
lods
inc
add
xchg
cltd
scas
mov
jp
sub
and
mov
and
ss
push
jmp
stos
jo
addr16
or
mov
out
insl
cmp
iret
adc
daa
into
or
or
adc
push
aas
fcmovb
out
cwtl
mov
and
jg
fcmovnbe
and
add
or
mov
sbb
mov
sub
cs
pop
shlb
pop
xorb
movsl
mov
in
ss
push
je
push
xchg
mov
sbb
mov
pop
xor
fidivrl
mov
rolb
adc
iret
sub
in
mov
mov
ret
fistl
inc
sub
jno
jmp
mov
adc
in
sahf
sub
push
in
push
and
imul
push
mov
push
andl
inc
sub
aas
cwtl
call
sbb
pop
mov
sbb
push
push
rorb
insb
pop
std
jnp
pop
pusha
jp
cmp
iret
push
shll
popf
sub
mov
inc
pop
jecxz
inc
sub
mov
test
mov
mov
or
into
cmpsl
push
lea
or
sti
mov
pusha
push
cmp
leave
test
ss
cli
adc
mov
xor
mov
pop
imul
loopne
enter
pop
xor
outsb
xchg
push
pop
jmp
push
pop
pop
jp
rol
xchg
leave
inc
mov
dec
dec
in
inc
aas
arpl
lcall
xor
jb
incb
test
cmp
jnp
inc
inc
orl
push
inc
adc
lcall
sub
xor
jae
lea
hlt
dec
mov
mov
mov
repz
aad
or
or
xor
lods
addb
adc
sbb
sbb
mov
bound
jno
adc
xchg
mov
adc
loopne
mov
xor
push
aaa
xchg
or
hlt
sub
jmp
mov
sub
pop
push
cld
xor
es
xchg
cmc
out
dec
push
push
jo
pop
jb
fisttpll
daa
aam
lods
add
pop
or
jo
daa
mov
xchg
dec
das
jb
adc
pusha
fstpl
and
stos
test
sbb
dec
xor
popf
out
test
push
cmc
and
add
pop
aas
push
adc
scas
adc
cli
cmp
mov
adc
pop
jmp
add
outsb
popa
out
add
lock
popf
shll
daa
mov
xchg
fidivrs
cmp
pop
ficoms
push
pop
xor
ds
pop
es
fcompl
mov
jbe
or
xor
cmpsb
call
aas
add
jle
jecxz
in
adc
scas
repnz
jb
sub
adc
sbb
jmp
xor
push
xchg
sub
add
pusha
add
negb
adc
jmp
jno
outsb
mov
jnp
fcmovnb
pop
dec
lcall
cmp
sbb
stos
call
in
jno
imul
mov
pop
dec
nop
lea
pop
inc
lea
push
cmp
mov
jg
subl
and
iret
sub
mov
cmpsl
test
xlat
and
and
cmp
sbb
mov
cmp
orb
sti
inc
mov
push
test
mov
hlt
jp
pop
iret
pop
dec
adc
jp
inc
dec
push
add
jle
repz
pusha
ret
sahf
pop
and
push
push
pop
loopew
pop
cmpsb
xor
cmpsl
mov
or
dec
aam
adc
mov
inc
popa
jmp
scas
js
ret
in
dec
jbe
aam
add
pop
outsl
lret
stc
mov
mov
lahf
xor
xchg
mov
mov
repz
adc
mov
pop
xchg
xchg
inc
aas
lahf
push
fimull
inc
jmp
and
pop
mov
mov
sub
int3
inc
inc
in
fcmove
scas
xchg
in
cmp
xor
out
cmp
cld
movsl
dec
mov
loope
scas
inc
sbbl
fisubrs
aaa
cli
dec
and
js
xor
xchg
int
insl
out
das
jmp
push
sub
scas
scas
ret
jne
and
jne
stc
jnp
outsb
icebp
enter
in
scas
lret
les
cld
enter
jne
cwtl
xorb
xchg
push
inc
ficoms
fcomps
cmc
inc
sub
mov
fmuls
mov
pop
hlt
and
xchg
stos
mov
or
or
mov
pop
icebp
jnp
outsl
repnz
ret
mov
movsb
and
mov
dec
fsubl
jmp
dec
add
ljmp
mov
gs
add
and
daa
lret
jb
das
xchg
add
lods
adc
xchg
lods
enter
lcall
je
cmp
adc
leave
sub
mov
imul
andb
sbb
decb
push
adc
imul
xchg
mov
xchg
add
js
call
out
aaa
push
out
pop
rclb
insl
adc
xor
stc
andl
xchg
add
sub
mov
adc
or
mul
loop
stos
stos
xchg
adcl
and
sbb
push
mov
repnz
and
adc
out
dec
mov
mov
mov
fcomip
ljmp
mov
mov
ror
orl
pop
xorb
imul
or
push
xor
scas
fsub
xchg
decb
xlat
sub
sub
enter
hlt
xor
cmp
or
push
ret
or
xorl
or
stc
sbb
out
push
mov
fcmovne
int
inc
out
mov
mov
mov
and
negl
popf
jae
add
cmp
fiadds
daa
nopl
xor
int
lock
xor
jge
jo
pop
push
mov
inc
lea
out
mov
test
sbb
mov
mov
adc
data16
jne
or
or
out
jl
ss
inc
adc
ret
sbb
dec
pusha
mov
enter
mov
or
inc
adc
jp
push
xchg
mov
pusha
int3
sarb
lods
inc
gs
dec
push
mov
in
cmp
das
les
pop
cmpsl
outsb
jmp
int3
aas
xor
into
arpl
mov
mov
loop
add
test
mov
mov
adc
mov
test
cmp
pop
arpl
sti
sub
mov
fwait
sub
es
xor
adc
mov
pop
push
cli
adc
mov
push
jnp
inc
stos
jmp
call
std
xchg
mov
or
sbb
xor
pextrw
adc
dec
jae
ss
shlb
and
in
aad
sbb
out
cmc
mov
test
jle
mov
sub
xor
sbb
int3
jl
aaa
lods
pushf
xor
xor
insb
ds
push
adc
pop
in
xchg
ds
sbb
jmp
or
lds
dec
jnp
dec
shrb
subl
and
rcr
sub
inc
orl
aaa
icebp
sub
mov
and
pop
jo
rcrb
andl
add
lock
aas
ret
mov
lods
ljmp
loopne
sub
sbb
flds
xchg
adc
push
mov
lods
or
mov
dec
dec
or
sub
ljmp
lds
cld
pop
fisttpll
adc
jmp
shll
mov
xor
out
stos
insl
sarb
enter
and
xor
dec
rclb
ss
push
pusha
ljmp
jl
jbe
cmp
sbb
sbb
mov
dec
mov
lods
and
xor
in
outsl
fimuls
add
nop
or
mov
pop
or
sub
in
xlat
enter
fsubrl
xor
dec
rcrb
dec
push
int3
aaa
xchg
push
push
sub
fs
dec
sbb
test
mov
mov
mov
xchg
cs
sbbl
scas
addl
fmul
idivb
and
je
add
in
movsb
add
adc
lods
enter
iret
in
sub
ds
int3
jne
pop
scas
scas
xor
popf
test
inc
push
jns
orl
jne
outsl
mov
mov
subb
adc
popf
lock
xor
adc
mov
loope
mov
sub
pop
ljmp
mov
push
sti
test
lock
pop
js
mov
and
imul
jmp
pop
addr16
xchg
lret
or
push
or
jne
inc
insb
cwtl
adc
rol
loope
mov
and
daa
push
daa
lds
mov
stos
jl
or
dec
je
adc
xchg
push
out
aas
jmp
mov
inc
into
ljmp
jmp
and
je
mov
jno
jge
fidivs
and
push
hlt
pop
je
idivl
sbb
out
mov
int3
fnstcw
jnp
xchg
pop
mov
mov
inc
idivb
dec
gs
inc
mov
cmc
mov
sbb
lcall
jmp
lods
jns
add
ret
push
addr16
mov
notb
pop
xchg
pop
es
inc
ds
pop
cld
lcall
ds
sub
int
out
and
pop
rclb
mov
xor
andl
mov
sbb
mov
mul
stc
and
mov
xor
push
in
frstor
aaa
gs
fidivs
rolb
pop
xor
mov
dec
das
out
inc
pop
push
scas
stc
and
sub
mov
mov
sub
add
out
mov
addb
jge
jmp
jmp
push
push
aaa
push
xor
jo
in
leave
imul
cwtl
cmpl
xor
scas
jp
int3
mov
out
sbb
lahf
jmp
jmp
test
mov
lret
pop
push
ret
mov
adc
sub
daa
aas
jb
ficompl
scas
mov
sbb
scas
inc
insb
adc
sub
and
adc
mov
jg
sbb
inc
jne
insb
mov
decb
adc
add
iret
push
scas
adc
pop
insb
dec
test
adc
mov
imul
xor
cmpsb
sbb
int3
jb
in
or
hlt
aas
inc
mov
fisubrs
movsb
pop
ja
lock
loopne
dec
xchg
sub
push
ss
cmpsl
add
dec
mov
xchg
lock
test
xor
jmp
push
mov
add
jmp
cmp
mov
or
test
xchg
xor
fistpll
and
adc
lods
mov
jecxz
jp
fisubl
mov
push
jle
pop
je
mov
and
fidivrl
sarb
pop
dec
cmp
mov
jp
push
cmp
adc
add
xchg
imul
mov
push
add
and
int3
daa
dec
mov
sub
mov
pusha
jmp
pusha
mov
push
lods
pop
add
xor
add
mov
dec
scas
sub
cltd
cmpsw
jle
inc
adc
subb
mov
imul
stc
mov
stos
icebp
and
mov
sbb
push
dec
and
jne
inc
daa
xor
mov
pushw
jp
or
jnp
xor
movsl
test
fidivs
insl
mov
xchg
dec
mov
pop
cmp
jne
xor
loopne
inc
jmp
jle
and
ds
dec
inc
pop
sub
addl
imul
lock
mov
inc
jmp
adc
mov
mov
or
or
cmp
xor
cmpl
mov
mov
sub
inc
and
xchg
adc
ret
xchg
loope
mov
or
rolb
push
and
sbb
xor
mov
pop
loop
dec
or
mov
lret
repz
sub
xchg
xor
mov
lods
fld
data16
daa
aaa
adc
loopne
cmp
call
bound
outsb
inc
adc
mov
out
lock
ja
out
popf
ret
loopne
lods
adc
mov
xor
or
sbb
push
pop
sub
dec
lret
sub
and
loop
es
xor
cmc
and
pop
sbb
push
call
jmp
repz
inc
lret
dec
iret
mov
bound
jg
lsl
stos
in
xor
xchg
int3
in
inc
push
jmp
mov
xchg
or
lods
subl
lret
sub
cld
or
cwtl
add
mov
adc
lods
dec
sbb
fs
and
stc
jmp
aas
adc
sti
int3
enter
js
ret
in
jle
inc
or
xchg
out
into
adc
pop
shl
mov
leave
andb
flds
lret
pop
pop
sub
and
clc
in
sub
test
pop
test
cmpsb
jmp
addb
dec
adcl
push
mov
je
scas
sbb
push
imul
std
out
mov
cmp
push
out
mov
int
xchg
xchg
das
leave
sbb
mov
je
and
frstor
mov
mov
jae
out
addr16
dec
mov
lret
push
adc
xchg
add
aam
repnz
push
xor
sbbb
mov
fimull
add
push
adc
jp
imul
pop
mov
fmull
stos
sub
jo
mov
sbbl
lods
jns
adc
mov
cmpsb
push
sub
mov
out
data16
xchg
aaa
lret
sti
or
adc
mov
iret
add
out
shll
pop
mov
je
ficoms
mov
out
xlat
xor
inc
jne
aas
mov
stos
lock
adc
mov
out
mov
nop
negb
cmp
mov
ds
cwtl
xor
mov
sub
ja
jb
mov
push
aaa
cwtl
or
incb
loop
dec
dec
mov
mov
lcall
jb
sbb
mov
test
ljmp
lods
inc
adc
scas
add
imul
cli
push
pop
inc
jmp
inc
lret
sub
adc
lcall
andl
addr16
sbb
cld
les
or
mov
adc
test
ds
sbb
xchg
cwtl
shl
sbb
push
sub
xor
mov
mov
inc
xchg
out
jbe
push
in
adc
shlb
xchg
push
pushl
jle
out
sub
lods
js
fcompl
lret
mov
sbb
xor
pusha
ja
cmp
cmp
not
and
inc
jge
sbb
pop
out
xlat
ljmp
jmp
mov
mov
jge
movsb
imul
and
jle
fstpt
mov
inc
cmpsl
ror
jge
xlat
loope
and
dec
pop
scas
push
and
loop
in
mov
dec
sub
pusha
scas
ficompl
fdivs
lods
cwtl
xor
jo
cmp
mov
xor
cmpsb
push
pop
mov
or
add
inc
mov
xchg
mov
mov
xchg
insb
sbb
fstp
movsb
xor
ja
push
or
mov
mov
adc
sub
sahf
pop
push
mov
or
leave
in
push
adc
pop
xchg
push
xchg
dec
push
idivl
cli
dec
cmp
pop
clc
lcall
inc
and
jp
in
leave
test
mov
mov
sbb
shr
leave
pop
sub
push
js
sub
mov
or
mov
cmpsb
lods
leave
les
mov
call
xlat
mov
js
cmp
pushf
and
jmp
lods
push
fisttpl
rorl
ds
adc
or
mov
divl
cmp
cmp
mov
dec
ret
std
cmp
inc
sub
sub
mov
dec
mov
inc
mov
inc
jl
mov
adc
cmc
out
mov
aaa
mov
adc
hlt
dec
push
jl
mov
sub
cmp
fs
cmp
push
and
mov
stc
mov
adc
jmp
rcl
sbb
inc
pop
dec
icebp
pop
test
pop
dec
ret
pop
orl
rcrb
das
push
insl
inc
cmp
int
mov
mov
aam
icebp
and
mov
mov
sbb
int3
scas
push
mov
push
ds
test
inc
pop
cmpl
cmpsl
mov
lock
les
dec
loop
scas
mov
repnz
push
bound
addr16
insl
mov
adc
inc
xchg
ds
or
outsb
std
insb
adc
cmp
ja
lock
ficompl
fstpt
je
das
dec
lret
sub
ret
dec
mov
push
lea
ret
mov
push
outsb
ss
mov
sti
or
add
stc
enter
mov
daa
cld
mov
and
jp
das
sub
pusha
inc
sbbl
out
xor
xlat
idivb
in
push
and
jbe
xlat
sub
push
sbb
mov
xlat
cmpsl
imul
cmpsl
movsl
rclb
imul
xchg
cld
leave
cmp
sub
xor
push
and
jmp
outsb
lcall
mov
fdiv
pop
test
xchg
pop
add
adc
mov
adc
lds
jmp
xchg
imul
fldt
jp
lock
imul
inc
inc
sub
insb
mov
pop
push
out
pop
mov
test
into
inc
in
nop
in
dec
mov
loop
out
call
push
addr16
inc
mov
jl
mov
dec
sbb
pop
jle
xor
notb
filds
xor
inc
mov
mov
stc
fsubrl
aaa
addb
mov
cmp
cmp
lret
sbb
outsb
out
daa
push
jg
push
out
push
mov
mov
mov
jo
xor
adc
jo
ss
push
push
adc
lret
repnz
jno
ljmp
jo
aaa
repnz
fwait
stos
xchg
cli
sbb
jnp
xor
jns
sub
push
push
icebp
lea
lods
jmp
dec
jle
mov
insl
lcall
pusha
jg
decl
xor
mov
pop
fwait
lahf
idivl
leave
icebp
and
in
jbe
fidivrl
ss
cmp
adc
mov
jl
mov
jle
repz
subb
sbb
les
mov
xor
sub
ss
movsl
jmp
mov
cmc
shl
push
mov
cmp
mov
xchg
cmc
movsl
shll
push
push
testb
sub
out
mov
orb
mov
mov
adc
mov
and
je
push
rorl
idivl
in
sub
test
lcall
jne
jge
clc
in
mov
inc
orl
mov
insb
scas
xchg
jnp
xchg
and
out
cmp
insl
adc
pushf
popa
fs
jo
xor
jle
mov
mov
mov
cmpsb
or
out
mov
adc
mov
fisttpl
fldenv
mov
std
shr
and
push
jno
gs
xor
mov
mov
mov
cs
or
inc
mov
xlat
lret
jb
insb
jbe
mov
repz
xor
mov
xor
mov
mov
push
mulb
fdivrs
in
jp
out
cmp
leave
stos
cmpsl
pusha
out
je
push
dec
cmp
jp
and
movsl
cltd
pop
dec
pop
jmp
add
jmp
ds
jns
mov
punpckldq
ja
mov
scas
movsb
inc
mov
xchg
fisttpll
push
sub
mul
or
bound
subb
ret
adc
in
push
add
loop
xchg
jbe
jmp
imul
xor
scas
sub
lea
mov
stos
xchg
inc
fldlg2
out
adc
mov
aas
pushf
and
xchg
ja
push
enter
mov
push
jne
and
std
outsl
shrb
xchg
adc
add
lret
mov
nop
sti
cmp
xchg
jb
mov
lods
pushf
xlat
pop
mov
mov
xor
out
addr16
dec
jnp
fnstsw
jmp
clc
mov
ret
in
adc
mov
inc
xor
rcrl
in
sub
mov
sub
jle
mov
leave
mov
jl
rcll
sbb
dec
fcmovnu
jne
ficoml
div
sbb
xor
insb
mov
adc
stos
out
ljmp
push
daa
adc
test
in
hlt
xchg
push
mov
loope
mov
mov
adc
sbb
lods
dec
mov
sbb
jb
xchg
loope
js
mov
out
adc
ret
fwait
insl
rclb
push
ljmp
mov
cmp
in
test
lods
push
dec
mov
pop
mov
add
cmpl
dec
mov
xor
jmp
pop
cmp
subb
pop
pop
sarl
hlt
push
xchg
stos
ds
push
xchg
adc
mov
pop
jbe
ds
out
xor
xchg
xor
fdivl
out
repnz
aaa
mov
mov
jp
orb
xchg
movsb
sbb
outsb
mov
mov
cmp
dec
xchg
inc
cmp
popf
pop
sar
ds
shlb
pop
pop
call
adc
adc
das
jle
lods
repz
add
test
les
je
idivl
shlb
popa
neg
enter
hlt
inc
adc
pop
fs
xor
mov
outsb
test
iret
lock
ljmp
xchg
iret
cli
sub
sub
sub
jne
test
xchg
mov
ss
out
add
outsb
insb
and
mov
jge
xor
hlt
mov
mov
jecxz
iret
sub
lcall
push
inc
push
stos
cmp
jnp
dec
pop
jae
pop
sub
push
mov
jo
mov
loop
mov
hlt
rclb
mov
lods
xor
xor
add
adc
pop
ret
shll
cmpsl
or
cld
clc
xor
xchg
sub
xchg
pop
inc
add
mov
mov
int3
or
divl
test
xor
cmpsl
jb
xor
ja
xchg
inc
in
mov
fstl
cmp
jmp
jecxz
and
jl
mov
mov
jno
sahf
mov
fnstcw
xor
adc
push
aaa
cs
inc
pop
xchg
divl
sahf
aam
xchg
or
jle
and
dec
lahf
jne
fsubs
jmp
gs
xchg
stos
icebp
jb
adc
xchg
adc
je
test
pop
xchg
stc
cmpsl
stos
and
jmp
pop
dec
xor
sbbl
mov
add
xor
push
les
cmp
stos
adc
ds
jo
ja
insl
and
pop
xor
pop
cmpb
icebp
cwtl
fldcw
add
ret
or
cltd
pop
jge
aas
adc
or
mov
push
pop
jmp
lea
lcall
test
hlt
sub
and
movsl
xchg
pop
not
sub
pop
popf
lret
mov
dec
ret
ret
loopne
out
mov
lret
icebp
hlt
sarb
fmull
mov
sbb
adc
pop
sbb
mov
pop
mov
jge
jbe
adc
call
mov
xchg
push
cli
xchg
adc
push
clc
iret
adc
push
daa
mov
xchg
xor
adc
int
sahf
ret
mov
jno
call
mov
into
bound
xchg
leave
shll
mov
daa
test
mov
jmp
mov
cmp
sbb
inc
adc
into
das
pop
mov
xchg
and
pushf
pop
leave
addb
adc
outsb
hlt
mov
lods
repnz
jo
mov
addr16
xchg
adc
mov
mov
jge
ja
outsl
dec
mov
shrb
dec
cmp
shll
and
out
icebp
jb
testb
xchg
pop
shll
adcl
inc
stos
sub
test
fs
lods
es
xlat
jle
jo
adc
jne
and
jnp
daa
pop
inc
popa
lock
rol
test
out
cmpl
sub
adc
jae
loop
scas
movsl
mov
cmp
aam
lock
adc
cmp
out
fdivrs
out
add
push
xor
cltd
adcb
adc
loope
jle
aaa
push
cmp
xchg
xor
int
jmp
add
xchg
pop
into
imulb
divb
push
ret
sbb
sub
cmpsb
inc
and
enter
out
mov
sbbb
cmp
leave
lock
mov
cmp
inc
pop
sbb
popf
mov
inc
cwtl
jl
adc
pop
xor
mov
in
mov
cmp
jecxz
mov
xor
insb
adc
dec
int3
repz
and
jg
sbb
pop
mov
push
mov
les
fs
mov
test
stc
ja
and
ret
adc
xor
icebp
out
mov
sub
mov
jb
xor
fs
mov
fmul
and
pop
cmp
sbb
shll
add
movsl
push
jae
mov
xor
xchg
xchg
jl
push
add
js
dec
jg
jne
add
adc
push
lods
mov
push
push
lahf
xchg
adc
sub
mov
fadd
sar
nop
jg
push
es
wrmsr
xchg
adcl
sub
mov
addr16
shlb
pop
jle
std
xor
mov
fistpll
inc
mov
add
loop
jmp
mov
inc
call
push
and
addb
test
mov
cmp
sub
pushf
in
lock
sub
xchg
xor
mov
call
sub
sub
mov
xor
dec
lods
nop
sarb
data16
mov
push
mov
fdivrs
and
sub
int
cs
lods
es
out
pop
insl
in
jo
jo
mov
in
xlat
jmp
xchg
dec
sub
and
adc
fs
adc
push
in
mov
in
and
cmp
pop
cmpsl
and
jp
mov
lock
in
filds
fistps
pusha
pop
pop
and
adc
xlat
inc
inc
dec
sarb
inc
mov
std
adc
jbe
jmp
and
mov
sub
push
das
sbb
pop
adc
and
mov
test
mov
xor
xchg
scas
paddusb
cmc
xchg
dec
scas
pop
xor
jg
jle
outsl
dec
mov
lods
fldenv
test
test
push
xchg
jns
xor
or
repnz
sub
pop
mov
outsb
mov
lds
xchg
cld
outsl
jne
xchg
in
xchg
stc
fiaddl
push
cmp
lcall
mov
xchg
dec
insb
lods
push
sbb
jp
dec
lock
mov
mov
push
dec
aas
loopne
out
stc
roll
pusha
andb
pop
xchg
dec
or
mov
sub
das
lret
lock
lock
rorl
push
test
xchg
xchg
or
sbb
stos
mov
inc
ja
int3
pop
mov
out
mov
jnp
subb
lret
shll
add
test
rcrl
xchg
ljmp
popf
sub
push
in
mov
addr16
lret
xchg
jo
fnstenv
ljmp
je
xor
sbbl
fisttpll
mov
jmp
cld
inc
mov
call
fistl
iret
insb
ljmp
cmp
inc
stos
cmp
stos
in
mov
xlat
orl
outsb
dec
je
mov
mov
ss
push
jb
fs
pop
xor
push
movsl
subb
sbb
mov
in
fldl
data16
jnp
mov
sbb
aam
lret
pop
arpl
sbb
xlat
fimull
mov
divl
mov
outsb
gs
add
leave
adc
in
test
call
ljmp
push
rep
xchg
imul
in
inc
int3
pop
add
rcll
dec
ja
mov
push
push
hlt
pop
xchg
leave
aas
sbb
divb
aas
lahf
cmpl
lret
out
and
idiv
mov
cmpsb
cmpsl
adc
jmp
jmp
mov
fwait
das
mov
pop
cli
ss
adc
adc
jmp
adc
jb
fisubrl
mov
ficoml
ss
adc
movsb
cmp
jp
cltd
test
pop
xor
push
insb
shrl
inc
push
or
pop
sar
into
ret
pop
adc
mov
aam
cmp
inc
enter
adc
out
sub
xor
xor
mov
inc
adc
xchg
lcall
in
sub
stos
push
push
mov
ja
inc
shll
js
dec
xor
adc
or
enter
movsb
and
jns
pop
cs
sub
inc
fsubrs
cmp
xchg
daa
inc
pop
rcrb
add
add
loope
xchg
lds
daa
mov
insl
pop
subb
adc
inc
lea
adc
imul
pop
xchg
xorl
push
jbe
adc
addr16
in
pusha
ljmp
cmp
push
pop
push
dec
mov
mov
xor
adc
cmpb
mov
jl
jle
jmp
pop
pushf
push
std
cmpl
jle
fildl
fs
push
stc
add
mov
loop
add
adc
pavgb
jbe
out
cmp
cs
jle
movsl
je
xor
hlt
and
out
xchg
je
pop
sbb
and
rorb
iret
sahf
loope
mov
sub
mov
push
popf
roll
jle
sbb
and
cmp
xor
push
xchg
push
push
mov
push
xlat
nop
sub
sar
jg
mov
subl
in
mov
xor
xor
hlt
xchg
mov
push
ja
ljmp
daa
mov
push
jl
sub
lret
lods
jne
push
cmpsl
fs
dec
cwtl
xor
adc
and
push
push
movsb
andb
adcl
sub
push
pop
ljmp
pop
push
aad
leave
jno
movsb
movsl
pop
and
adc
jecxz,pt
push
add
in
dec
arpl
lds
sub
jnp
pop
loop
and
sbb
addb
jp
rcl
testb
hlt
out
ljmp
clc
sub
xchg
andb
mov
xor
sbb
scas
je
push
repnz
es
mov
pushf
cmp
ds
fildll
adc
mov
hlt
jb
mov
push
mov
sbb
adc
add
icebp
xchg
in
dec
xor
mov
xor
cltd
hlt
out
enter
ljmp
mov
cld
std
xchg
pop
pop
std
cmp
push
jo
dec
fisttps
mov
ficomps
cmpb
add
dec
xchg
fldenv
ret
jmp
insl
jno
cmpsb
aad
scas
ret
loop
or
sub
mov
push
adc
sbb
out
imul
push
cmp
lock
ja
lods
lahf
cmp
mov
stos
xor
xchg
das
andl
mov
movsb
scas
adc
ljmp
adcl
sub
xor
xchg
lock
nop
les
mov
addr16
in
ljmp
icebp
mov
test
push
mov
and
imul
sbb
xor
lods
xor
xchg
scas
ss
xchg
and
sub
push
jmp
fdivs
leave
stos
fdiv
je
xor
ss
adc
adc
or
or
imul
lods
xchg
pushf
cld
xor
adc
hlt
jecxz
lea
adc
mov
repz
and
jle
or
jo
out
or
xor
sahf
mov
das
sub
nop
jo
lock
xchg
insl
or
push
ja
fwait
shrb
imul
icebp
jnp
fcomps
movl
movsl
mov
add
pop
fsubs
enter
ficoml
push
popa
sub
adcb
fimuls
aam
jmp
jl
enter
add
loope
scas
adc
mov
aas
leave
pop
cmp
pop
mov
push
dec
inc
mov
mov
fnsave
pop
mov
aas
out
out
adc
stos
cmp
aad
mov
into
pop
sub
imul
mov
push
mov
shll
or
fiaddl
push
mov
sub
dec
insl
jecxz
fisubs
stos
mov
mov
out
je
gs
cltd
enter
add
push
add
test
ds
xor
out
pop
push
in
ja
cmp
sbb
bound
addr16
mov
icebp
bnd
push
and
pop
mov
mov
pop
rorl
adc
dec
hlt
mov
aas
xchg
xchg
arpl
dec
cli
loope
cmpsb
clc
dec
mov
mov
jbe
jbe
imul
push
inc
movsl
inc
sub
das
inc
mov
jge
push
sub
mov
push
pop
das
jl
hlt
mov
push
inc
test
cmp
lea
adc
adcb
pop
sbb
xchg
sti
bnd
jl
aad
pusha
je
clc
fisttps
scas
xchg
insl
xor
ror
push
and
jne
pop
push
mov
sub
enter
dec
das
mov
das
fcmovu
movsl
icebp
mov
cmpb
daa
mov
addr16
jge
adc
loop
pop
dec
enter
je
push
insb
jno
pop
pop
clc
scas
cltd
lea
aad
xor
popa
mov
xchg
call
adc
scas
out
dec
pop
je
flds
jge
push
jl
andl
and
stos
into
pop
cmp
add
mov
imul
jbe
jl
das
nop
sar
push
rcll
adc
lea
loope
cmp
repnz
jl
sahf
adc
sub
sub
xchg
mov
jmp
jp
dec
cld
adc
mov
fsubrs
mulb
popf
xorb
push
and
das
outsb
lods
push
test
lods
pop
sbb
mov
loop
pop
xchg
filds
xchg
adc
push
fimull
mov
xchg
xor
jge
fs
insb
fsubr
aas
out
dec
jg
ljmp
ljmp
push
decl
outsb
sub
ljmp
or
sbb
dec
cmp
lret
mov
call
jbe
divl
fldz
int
cld
in
shrl
testl
lret
ret
adc
sbb
clc
in
dec
stc
jmp
push
push
cli
xor
mov
cmc
ss
cmp
nop
inc
jmp
shrl
or
cs
fdivs
jle
in
pop
enter
adc
mov
fstpt
in
cmp
dec
inc
or
xor
imul
jg
push
push
sub
leave
mov
jne
mov
mov
or
movsb
jmp
mov
mov
fidivs
pop
dec
popf
dec
dec
imulb
es
adc
mov
and
ljmp
jnp
adc
adc
jnp
mov
aam
out
scas
lea
xchg
scas
cmpl
push
bound
jmp
imul
inc
pop
mov
icebp
jl
aaa
jle
xor
pop
mov
test
cmp
mov
in
mov
cmp
push
stos
push
dec
ret
sti
lods
fnsave
jmp
cvtdq2ps
daa
popf
aam
pop
pop
pop
mov
out
pop
daa
mov
mov
ljmp
mov
stos
and
inc
add
cmp
sbb
mov
cli
lret
ret
aaa
adc
mov
xchg
test
jge
xchg
sbb
xor
in
mov
xchg
ss
mov
movsb
jns
stos
xchg
push
xor
add
sub
or
mov
cmp
subps
pop
jg
push
aaa
mov
lds
sbb
repnz
pop
sub
cmpsl
into
sahf
cmp
adc
inc
jecxz
in
loop
adcl
mov
sub
inc
into
jb
cmpsb
in
jbe
mov
adc
inc
jb
cld
cmp
xor
aad
leave
repnz
jb
fdivl
test
inc
xor
in
and
imul
jae
or
lods
enter
pusha
mov
das
roll
push
push
pop
hlt
sbbb
cmc
pop
or
xchg
add
adc
cmp
sbb
daa
xchg
ret
ljmp
into
pop
xchg
sar
aam
aas
fcoml
jecxz
outsl
adc
cmp
dec
and
movsl
push
scas
mov
fldenv
subb
cwtl
push
jnp
into
add
xor
enter
mov
adc
xor
scas
pop
jge
arpl
push
adc
jnp
push
push
in
xchg
hlt
add
aas
adc
sbb
cmp
add
int3
xor
repnz
fbld
ja
add
adc
and
xlat
gs
dec
xor
mov
push
jnp
lods
xchg
movsb
js
les
cmpsl
mov
push
dec
cmp
scas
mov
test
pop
int3
pop
pop
mov
cmp
repz
leave
mov
mov
lods
cli
shrb
sbb
jg
xchg
sbb
sub
movsl
outsl
and
lahf
xchg
mov
sarl
mov
repz
push
cmp
orb
test
cmp
jbe
shlb
and
xor
mov
insb
pop
xchg
xchg
out
shrl
mov
nop
push
add
and
cwtl
dec
jbe
push
mov
xor
pop
sbbb
xor
popa
test
push
pop
pop
cmpsb
ss
pop
jno
jbe
jp
in
out
test
sahf
jp
sub
fsubs
pop
insb
jl
sarl
mov
dec
orb
xchg
in
lods
mov
inc
adc
data16
dec
mov
pop
orb
mov
dec
xchg
inc
xor
and
pusha
in
xchg
push
popa
mov
out
in
pop
test
xchg
sub
adc
xchg
lods
pop
imul
mov
push
and
sub
rorl
call
or
aad
and
cs
mov
jmp
or
ja
scas
in
popf
and
lods
lods
pop
pop
jns
outsb
and
pop
mov
loopne
pop
outsl
cs
pop
sub
jg
add
xchg
insl
scas
pop
mov
inc
fbstp
sbb
stc
xor
lods
mov
data16
fdivrl
mov
in
inc
test
daa
adc
hlt
dec
mov
les
faddl
pusha
das
ret
push
aam
jb
popa
lret
sub
mov
rclb
test
mov
mov
scas
inc
mov
mov
lret
lcall
in
das
ss
movsb
in
es
iret
mov
xorb
cmp
pushf
or
add
dec
inc
push
add
aam
and
xchg
add
xchg
aam
push
loop
fisubrs
aam
or
in
pop
or
jmp
mov
ds
out
pop
dec
sar
mov
inc
xchg
scas
in
and
in
sti
fistpll
dec
sbbl
scas
and
xchg
decb
sub
jae
sub
outsl
mov
fbld
into
mov
lahf
enter
outsb
add
mov
sub
ljmp
sub
add
mov
lahf
lcall
inc
add
xor
js
xchg
pop
aam
jg
hlt
das
rcrl
adc
std
pop
popf
inc
pop
pop
aaa
in
mov
inc
mov
loopne
xor
cmp
add
jb
ret
sahf
stos
jl
mov
mov
lea
mov
xor
push
insb
xor
sub
adc
out
pop
mov
dec
mov
imul
scas
movsl
or
test
xor
loopne
leave
lods
insb
jae
movsb
cmp
inc
mov
sub
xor
je
jl
push
or
sub
mov
je
push
in
jmp
enter
in
jnp
rcl
push
or
lret
add
aas
addr16
hlt
dec
dec
outsl
enter
xchg
cmpsl
subb
mov
movsl
mov
dec
jecxz
sbb
jnp
pushf
inc
sub
je
inc
test
xlat
sub
lods
movsb
mov
xchg
jge
insl
mov
dec
jo
fwait
and
int
xlat
loopne
scas
inc
xchg
gs
shrb
add
fnstsw
jl
inc
push
inc
aad
push
mov
int
inc
hlt
in
pop
fidivs
add
push
inc
stos
inc
pushf
js
aam
xorb
inc
jecxz
jo
xchg
cmp
rorb
sub
and
scas
pop
add
scas
mov
aaa
mov
je
pop
cmp
inc
insb
or
push
sbb
sbb
push
dec
aas
sbb
jl
das
jbe
je
mov
mov
cmpsb
in
cmp
aad
inc
inc
pop
xor
je
xor
cli
pop
inc
repnz
movsb
push
inc
bound
sub
inc
int
sub
cmp
das
repz
aad
xchg
and
pop
and
mov
movsb
push
sub
sbb
mov
insl
inc
ret
inc
mov
test
in
mov
mov
les
sbb
pop
or
scas
sbb
xchg
in
jl
sub
enter
lea
dec
push
pop
mov
xor
loop
or
jne
aas
pop
add
imul
aam
aam
mov
pushf
jecxz
les
subl
idivb
sarb
aaa
mov
xchg
dec
inc
repz
jbe
adc
lret
arpl
pop
inc
insl
insl
aas
daa
lods
jge
inc
pop
js
insl
jl
ds
mov
mov
xor
mov
idiv
jl
mov
mov
and
mov
pop
mov
or
cwtl
dec
mov
sti
popf
aam
daa
xchg
inc
lods
adc
adc
test
in
in
and
mov
mov
xchg
push
adcb
push
dec
lods
pop
cmp
pop
xchg
test
dec
scas
or
xor
data16
into
int3
jo
cmp
insl
mov
dec
inc
in
in
cwtl
insl
out
movsb
dec
je
jne
adc
aam
fisttps
loope
sarb
push
mov
lods
inc
sub
or
insb
mov
add
adc
je
iret
inc
xchg
add
pop
scas
lahf
jne
inc
pop
notb
ja
inc
lea
pushf
scas
in
and
xor
js
fldl
aaa
outsl
cmp
sbb
fs
push
sbb
lahf
ss
sub
mov
dec
xor
xor
loope
jns
xchg
sbb
fsubp
pop
cld
int3
sbb
inc
inc
xchg
test
xor
adc
xor
xor
ret
pop
sbb
pop
inc
pushf
inc
adcb
jg
aaa
nop
lock
daa
jle
enter
repnz
scas
add
inc
mov
push
xor
hlt
test
aaa
jns
gs
mov
ja
enter
hlt
dec
add
mov
add
pop
scas
xchg
pop
popa
sti
sbb
mov
addr16
nop
mov
pop
jo
xor
push
fwait
mov
subps
dec
je
enter
adcl
cld
out
push
outsl
mov
aam
mov
inc
sbb
out
sub
aam
das
test
mov
aad
push
in
and
nop
fs
push
aaa
mov
mov
jne
sbb
jne
pop
pop
inc
shlb
xor
inc
and
mov
lds
inc
repnz
inc
mov
daa
jecxz
cmpsl
gs
aaa
aam
or
mov
cmp
int3
xor
sub
pop
jg
inc
sub
pop
fs
mov
adc
icebp
inc
fldt
loopne
lret
mov
pop
scas
jne
jle
add
in
fs
lods
and
push
jp
xor
das
jmp
jo
lods
dec
pop
mov
push
shlb
aam
nopl
inc
adc
inc
adc
dec
inc
dec
add
inc
xlat
hlt
in
inc
sub
les
mov
pop
out
lods
insb
rolb
push
lock
jo
dec
xchg
inc
movsb
stos
aad
jl
es
dec
inc
cltd
cmp
inc
in
sub
lods
outsl
jl
dec
sbb
and
sub
fsubr
movsb
sti
pop
dec
cmp
adc
sbb
imul
or
and
imul
sub
lret
clc
inc
xor
adcb
xor
sub
mov
arpl
filds
mov
jl
das
sub
rcl
cmpsb
mov
loope
jl
or
xor
and
je
pusha
inc
pop
aas
push
in
daa
scas
add
mov
popf
jnp
in
popa
test
aaa
push
adc
adc
jnp
push
int3
dec
and
cmp
mov
inc
lea
je
and
and
add
imul
dec
jle
xor
aaa
mov
sti
pop
jae
xchg
xor
mov
pop
cmpsl
stc
pop
push
lods
mov
inc
push
xor
jmp
or
mov
or
aad
adc
inc
xchg
push
adc
cmp
push
rcrl
xchg
pop
push
push
insb
cld
sub
loopne
out
and
popf
mov
push
xor
add
scas
push
add
xor
outsb
cltd
xor
or
inc
das
and
jp
xchg
mov
cwtl
sbb
dec
dec
adc
dec
outsl
sub
adc
jg
push
enter
in
lods
and
adc
jl
and
jne
add
in
inc
mull
mov
es
inc
ja
cs
add
mov
leave
sbb
sbb
loopne
insb
pop
popf
orl
mov
pop
pop
cmp
loope
es
adc
insb
pop
call
mov
rol
shll
add
daa
stos
and
mov
scas
roll
xor
iret
mov
shll
movsb
sub
jo
and
xchg
cmp
fwait
sti
mov
xchg
cld
int3
loopne
pop
cwtl
in
ret
fsubl
push
sbb
lock
sub
push
xor
or
dec
dec
and
pop
out
in
sub
inc
mov
pop
pop
in
stos
aad
mov
cmp
cltd
or
sahf
xor
enter
push
pop
insb
mov
call
cmc
mov
or
pop
xor
inc
pop
inc
cs
sub
insb
mov
lods
sub
xchg
test
add
inc
es
push
xchg
jmp
adc
inc
inc
in
fistl
adc
cmp
jnp
aaa
and
jne
mov
inc
xorb
out
movsb
scas
int3
add
and
inc
stos
sbb
fcmovnbe
out
int3
hlt
int
je
mov
in
sub
arpl
in
and
out
rcr
icebp
push
cwtl
popf
mov
mov
cwtl
mulb
mov
cli
xchg
cld
getsec
mov
mov
lea
inc
inc
jmp
clc
pop
adc
pop
iret
test
push
xor
je,pn
frstor
aas
jmp
mov
lea
add
cmp
cmp
loope
push
mov
mov
nop
mov
sbbb
popf
pop
imul
inc
jmp
je
and
adc
mov
dec
mov
mov
mov
sub
in
push
scas
cs
mov
mov
repnz
out
adc
add
cmc
adc
sbb
int3
enter
shrb
pop
adc
push
fwait
rcrl
xor
add
in
stos
pop
xor
fs
aad
jle
jae
mov
rcr
mov
jne
sub
pop
sbb
xor
cmp
stos
mov
mov
inc
lahf
ja
xor
ret
jo
xchg
lock
dec
pop
inc
pop
popf
inc
xchg
mov
adc
or
iret
push
ja
das
aam
dec
loopne
jge
xchg
mov
inc
cmp
aad
movsl
inc
mov
sub
xor
mov
jnp
mov
fcompl
push
push
stos
xor
mov
push
aaa
call
movsl
sub
dec
mov
mov
enter
in
mov
stos
mov
dec
inc
sbb
and
pop
pop
aas
fdivs
and
add
hlt
fs
lcall
enter
fsubl
xchg
test
xor
aam
fldenv
cmp
sub
mov
xchg
sub
pop
xor
mov
push
std
lods
xor
das
movsl
sub
pop
jecxz
daa
in
pusha
push
scas
aad
mov
add
mov
dec
int3
bswap
ret
je
mov
fdivrs
in
xor
andl
sbb
mov
das
jl
cmpsb
cs
outsl
fwait
lods
xor
xchg
sub
xchg
xabort
in
mov
sub
mov
pop
out
jp
push
mov
pushf
mov
jmp
lcall
lods
jne
test
add
mov
dec
cs
add
in
insb
jmp
xchg
enter
push
pop
sub
or
mov
insb
mov
push
icebp
mov
loopne
mov
mov
or
mov
out
and
jo
jmp
aaa
add
pop
movsl
int3
mov
cmp
mov
imull
inc
inc
fistpll
in
gs
cmpsl
xchg
je
or
push
lods
pop
ss
popf
inc
xchg
push
lods
push
pop
ss
xor
lods
enter
scas
in
aas
xchg
jns,pt
cmp
mov
daa
push
pop
pop
add
push
pop
or
sub
sti
jo
icebp
inc
add
xchg
mov
cmp
imul
inc
stos
mov
bnd
test
ss
mov
pushf
movsl
int3
das
adc
sub
cld
repnz
aaa
mov
inc
dec
mov
outsb
cwtl
test
lods
sbb
mov
lds
mov
and
cmp
shll
aaa
push
mov
sbb
ss
clc
xchg
inc
pop
daa
add
out
fwait
lock
aas
inc
mov
fisttps
movsl
mov
push
aam
fwait
mov
call
xlat
aam
lea
xchg
sbb
pop
push
or
lods
sub
mov
inc
pop
jecxz
je
iret
jae
and
adc
lods
jl
add
xor
daa
sahf
andl
pop
xchg
dec
mov
fnstenv
in
loopne
xchg
xor
outsl
aam
xor
in
aaa
mov
pop
or
and
into
xchg
pop
dec
jo
jp
push
fisubl
das
add
fmuls
ss
pop
hlt
mov
add
lea
and
fwait
movsb
pop
sbb
inc
inc
imul
sub
add
stc
je
mov
and
or
pop
ffree
das
aad
pusha
pop
loopne
or
cld
mov
ss
js
in
push
inc
mov
xlat
sbb
xchg
mov
mov
daa
fs
scas
ret
cmp
movsb
xor
inc
jge
jp
inc
fisttps
pop
rorl
arpl
call
inc
inc
push
sti
mov
sub
rcr
mov
sub
sub
das
pop
ret
and
mov
je
mov
loopne
xor
into
push
xor
mov
push
push
mov
lahf
push
pop
jle
mov
adc
jl
loopne
pop
dec
sbb
mov
pop
mov
scas
shlb
adc
xor
xchg
in
jns
shrb
mov
mov
testl
add
loop
inc
xor
in
cmp
pop
or
add
inc
int3
adc
sub
je
xor
test
pop
push
cld
movsb
dec
cltd
jl
in
arpl
inc
push
fmul
dec
push
jnp
cmp
jae
sub
aad
add
mov
or
test
mov
aam
sub
add
pop
imul
jmp
lea
sub
and
mov
call
insl
xor
cltd
mov
dec
enter
sub
ja
jb
loopne
mov
cmp
imul
mov
int3
rorb
mov
insb
fcoml
je
movsb
fistps
jg
imul
jo
js
mull
and
aas
dec
rcl
int3
lock
sub
cmp
dec
fidivs
sub
pop
testl
aaa
fdiv
add
adc
lods
lret
lret
scas
dec
xchg
and
mov
hlt
je
clc
lock
xor
mov
repnz
dec
call
call
mull
inc
pop
setp
insl
sbb
pop
and
icebp
cmp
sbb
pop
ja
insl
pop
add
insb
sti
xor
mov
dec
mov
pop
mov
addr16
dec
cmpsl
adc
xor
jnp
insl
insb
dec
repnz
mov
out
mov
add
xor
mov
pushf
cmp
adc
sub
mov
test
and
push
inc
mov
movsb
scas
dec
or
cmp
les
out
int3
movsb
imul
outsl
jl
mov
das
movsl
imull
loopne
sarl
mov
mov
mov
jl
sub
es
adc
sub
or
ljmp
xchg
xlat
xor
inc
inc
jmp
clc
lods
adc
test
inc
jns
in
add
movsb
dec
sti
cmp
mov
out
jl
loopne
das
adc
mov
iret
mov
sub
lods
mov
jae
or
addr16
mov
lret
in
insb
pop
push
mov
and
mov
push
insl
lcall
xor
cmp
mov
jae
popf
xor
lods
push
das
and
push
mov
lahf
lahf
xlat
xchg
inc
pop
cmp
add
pop
nop
in
mov
xchg
adc
pop
stos
shrb
pop
jns
in
mov
cmc
lods
loop
inc
fldenv
in
dec
jmp
sub
popf
or
sub
lret
cmc
xchg
clc
xor
push
cwtl
mov
int3
sub
mov
clc
in
icebp
sub
pop
mov
jae
fneni(8087
mov
cmp
add
bnd
psubw
jo
gs
loope
sti
loop
dec
addr16
mov
insl
sahf
push
mov
adc
mov
or
fdivrl
lret
sbb
sub
xor
push
mov
and
jl
fsts
cmp
adc
jb
or
in
jle
fdivl
pop
das
mov
add
repnz
mov
mov
push
loope
xor
inc
and
push
cmp
lret
clc
pop
ja
mov
mov
popf
inc
sub
or
mov
fdivs
xor
test
adc
adc
ret
xchg
out
fdivl
arpl
inc
push
ja
lret
push
in
sbb
sub
or
add
or
adc
lods
or
lret
jb
aam
cmp
mov
inc
mov
xchg
adc
ss
test
pop
add
sti
shll
pop
sub
cmc
sub
fucomi
aaa
enter
icebp
cmpl
xchg
mov
enter
cmp
clc
sbb
scas
stos
mov
ret
ss
in
js
pop
mov
fld
lds
das
mov
movsb
xor
lock
dec
xlat
adc
data16
adc
mov
push
insb
mov
adcl
pushf
aas
push
pop
stos
cmp
push
jno
adc
jmp
adc
arpl
adc
and
orb
inc
mov
das
imul
jbe
call
cmp
jno
insb
insl
xchg
sub
jmp
mov
and
mov
and
jo
sub
sbb
jg
xor
xchg
mov
cmpsl
and
push
adc
xchg
push
xor
mov
dec
shll
ss
push
jae
call
xchg
xchg
jp
lret
mov
shll
ret
mov
insb
xchg
loope
mov
mov
lods
mov
sti
fimull
xchg
cltd
in
scas
mov
mov
loope
add
ds
sub
outsl
testb
inc
adc
je
pop
mov
rclb
xor
pop
popa
fstps
ret
das
gs
sub
and
aas
movq
xchg
xor
inc
adc
pop
mov
lret
fs
or
and
mov
insb
jb
xor
jge
loope
aad
gs
cltd
ljmp
roll
int3
push
xchg
mov
sbb
mov
inc
adc
aaa
lret
mov
adcl
rorb
mov
sbb
xor
xchg
push
and
or
push
xchg
sub
pop
and
ret
jle
mov
repnz
xor
sbb
mov
mov
dec
adc
iret
nop
xor
mov
mov
mov
movsl
sub
hlt
mov
mov
xor
inc
sbbb
lds
pop
adc
pop
nop
mov
test
xchg
adc
ret
sbb
inc
push
loop
repnz
adc
push
je
std
sub
ficompl
daa
sub
sub
pop
insl
test
mov
cmpsb
and
adc
push
pop
incb
or
mov
fcomi
sbb
js
ds
es
inc
adc
pop
pop
push
arpl
dec
lret
outsb
mull
pop
xchg
jbe
mov
orl
shll
ror
fidivrs
jo
mov
imul
rorb
mov
ljmp
pop
aaa
push
mov
jo
adc
sub
outsl
adcl
popf
push
push
inc
jno
push
sub
vxorps
cmpsl
pop
adc
push
jbe
es
loop
out
adc
fistpl
insb
daa
hlt
cltd
jnp
inc
and
jg
adc
loopne
xchg
push
push
xor
mov
mov
addr16
mov
sbb
xor
add
or
inc
inc
add
arpl
icebp
imul
jl
jmp
jl
sub
jo
jmp
ja
fildl
add
pusha
pop
mov
stos
xchg
xchg
push
and
inc
mov
lods
mov
mov
inc
xor
jmp
sub
and
sub
or
sbb
ret
add
adc
in
mov
stc
mov
ljmp
es
pop
push
push
xchg
stc
shll
test
lods
scas
add
or
icebp
aas
adc
sub
fwait
leave
repnz
aam
adcb
enter
sarb
lods
and
inc
push
fsubrl
fldcw
inc
add
mov
mov
je
icebp
xchg
scas
std
dec
add
ja
ficomps
pop
adc
iret
out
xor
mov
outsb
lods
push
idiv
xorl
push
shrb
add
ss
pop
and
dec
ret
jae
cmp
lods
adcl
jo
mov
and
jp
das
cmpsb
cmp
popa
add
dec
pop
mov
xorl
in
je
movsb
outsb
ss
imul
push
jmp
insb
mov
xorb
mov
lods
pop
mov
cmp
loopne
mov
mov
in
ds
mov
ja
xchg
cs
cmp
repz
ljmp
pop
inc
mov
shrl
fwait
out
fnstenv
out
pop
sub
xchg
clc
adc
sbb
cmp
adc
ja
push
inc
das
lods
aaa
dec
jbe
sub
fdivrl
push
fwait
test
aaa
jo
insb
push
jl
lods
add
dec
and
cmpl
dec
adc
and
int3
fstpl
je
out
mov
pushf
pop
push
mov
or
clc
das
mov
adc
mov
sub
mov
mov
pop
mov
and
cmpb
mov
daa
jno
enter
jge
adc
fimull
mov
xor
out
aam
sub
jl
cmpsb
gs
xchg
fisubrl
loop
jmp
imul
or
jp
pop
ja
loop
or
add
mov
es
inc
jecxz
aas
sub
cmp
mov
outsl
je
add
negb
add
ret
fdivrs
and
ljmp
jo
xchg
push
out
ret
mov
fdivr
dec
xchg
sbb
cmp
sbb
jno
hlt
xchg
inc
bound
and
bound
dec
nop
je
cmp
sub
pop
fnstenv
cmpsl
aaa
jl
inc
dec
xchg
xor
js
mov
push
jge
push
xchg
ss
xchg
xor
icebp
mov
xor
add
mov
or
das
pop
adc
data16
push
call
mov
out
adc
jecxz
das
sbb
adc
incb
and
repnz
and
mov
mov
mov
mov
movsb
aam
jmp
adc
mov
rol
adc
rorb
ds
ljmp
je
add
xchg
jge
aad
lret
mov
out
dec
cmp
mov
pusha
sbb
jae
sti
test
dec
dec
lcall
adc
or
push
mov
sarl
xor
mov
shrl
jmp
clc
jle
idivb
sub
cmp
test
popa
and
jmp
je
adc
mov
jle
sahf
icebp
bound
dec
cs
xor
jo
pop
push
push
mov
shlb
ret
mov
or
adc
daa
imul
jmp
and
stos
ljmp
pop
pop
std
mov
jg
lret
mov
sub
jl
insl
inc
xor
mov
fdivrs
push
inc
mov
sbbb
enter
or
cmpl
push
pop
jle
mov
dec
ss
test
xor
and
insl
sbb
cltd
mov
insb
cmp
adc
cmp
and
pop
je
push
out
mov
inc
insb
ss
repz
jle
lds
addr16
testl
fdiv
cmpsl
sbb
insl
cmpb
decl
repnz
ret
mov
jns
push
lret
je
divl
xor
xchg
push
mov
fcmovb
xchg
aad
pop
adc
sbb
nop
inc
shr
mov
imul
leave
imul
jp
ret
mov
lea
add
xchg
je
pop
adc
dec
or
mov
jnp
xor
in
or
sbb
xchg
scas
and
mov
ds
insb
adc
notl
testb
jg
lcall
imul
lock
js
lock
dec
rorl
insl
sub
mov
lds
mov
inc
xchg
into
mov
daa
jle
sbb
push
daa
jge
xor
adcl
rcrb
popf
lock
or
push
scas
loope
outsb
sar
xor
lret
mov
mov
call
jae
cmp
bound
insl
cwtl
leave
or
mov
out
mov
stc
aas
fldt
pop
cmpl
hlt
in
adc
mov
lock
jno
cmp
push
sub
jno
mov
xor
dec
ret
dec
mov
adc
jns
mov
mov
ss
adc
xor
stos
mov
addl
push
mov
nop
shlb
aas
dec
fdivr
lods
je
dec
add
jecxz
xorb
rcr
mov
push
and
and
aam
adcb
push
mov
pusha
rorb
sub
jg
pop
into
out
mov
push
or
aas
mov
or
xchg
mov
lret
mov
dec
jb
and
int
jg
js
cmpsl
xchg
out
in
xchg
mov
leave
mov
dec
ret
fcmovnbe
addr16
mov
xor
add
aaa
lods
push
ss
xchg
loop
test
pop
and
pop
and
loopne
adc
fidivrs
call
ss
mov
in
sub
int
dec
movsl
xchg
sub
push
cld
lahf
into
das
adc
mov
push
pop
scas
js
lock
or
inc
lahf
cwtl
enter
xor
roll
inc
ljmp
lds
daa
adc
popa
in
inc
xchg
mov
insb
cmp
adcb
in
leave
push
add
outsl
dec
lret
sbb
in
xor
aam
shrb
gs
test
adc
ljmp
jg
pop
adc
mov
rcr
pusha
or
iret
sub
rdpmc
and
push
push
fldt
repnz
in
or
outsl
in
mov
daa
dec
jge
rorb
sbb
mov
sbb
inc
lret
push
dec
addr16
xchg
insl
divb
mov
enter
or
ljmp
inc
loopne
ficoms
push
dec
mov
cwtl
fdivp
das
aaa
cmp
mov
cld
mov
xorl
xor
inc
fisubrs
adc
fidivl
push
out
inc
cmp
andb
adc
pop
out
dec
popa
mov
sar
aaa
mov
fimuls
inc
mov
shr
ja
sbb
gs
add
inc
pop
leave
repz
mov
jo
int
dec
ja
sbb
addr16
push
imul
ficomps
mov
jnp
cmc
jg
fmulp
negl
nop
dec
sbb
xchg
cmp
jmp
mov
dec
push
jae
push
pop
adc
cmp
pop
dec
inc
ret
ret
xlat
insb
shl
mov
iret
dec
call
add
js
inc
cmp
mov
pop
xor
add
inc
cld
mov
sbb
xchg
pop
or
ds
dec
xchg
nop
ret
push
jne
mov
xchg
or
inc
imul
xlat
push
mov
es
repnz
inc
inc
cs
ds
pop
or
dec
in
pop
ja
enter
adc
jne
sub
mov
sub
lret
and
cmp
fildll
ficoml
push
insb
mov
aam
dec
das
shrl
mov
test
xor
ja
js
es
mov
addr16
push
test
aam
jb
das
adcl
push
sbb
and
adc
mov
jecxz
mov
ljmp
push
fwait
add
cmp
xlat
sahf
cmp
xor
jl
jno
test
jmp
outsb
dec
mov
inc
mov
cld
pop
adc
mov
arpl
push
ret
imul
repnz
in
jnp
mov
mov
test
inc
orl
cmp
sub
sahf
xorl
cs
stos
and
jge
cmc
mov
cmp
jb
mov
mov
leave
out
int
bound
jne
inc
jle
xor
stc
xor
movsb
sub
hlt
leave
inc
ljmp
adc
push
cmp
inc
addb
sbb
aad
xor
sbb
shrb
jae
mov
das
stos
sub
btsl
rcrl
notl
mov
cli
int
inc
push
paddb
insb
cmp
icebp
adc
test
xchg
sbb
icebp
mov
das
sbb
mov
loopne
fisttpl
inc
adc
mov
push
xor
or
xlat
mov
mov
adc
pop
mov
aam
mov
adc
leave
cmp
xchg
xor
stos
lret
in
in
jo
adc
xchg
int
rcll
cmpsb
mov
in
and
add
cwtl
fisttpl
clc
cmpl
in
jnp
scas
sbb
sbbb
mov
add
dec
inc
sub
mov
mov
outsb
jl
sbb
lret
scas
insl
inc
aas
sub
mov
nop
xchg
loop
pop
cmp
dec
pop
pusha
and
lret
cmp
jno
and
mov
add
xchg
pop
xchg
inc
mov
xor
inc
lret
sbb
lret
push
dec
ret
scas
outsb
fildl
hlt
loop
gs
pop
mov
sti
and
jnp
out
call
jo
ds
cltd
jne
xlat
mov
aam
jg
in
mull
pop
push
jne
pop
aas
aad
fstpt
push
cmpsb
sbbl
adc
js
sarl
cmp
in
in
mov
cmpsb
or
sub
lret
inc
adc
cld
mov
dec
and
subb
cltd
imul
pop
mov
es
sbb
push
in
sub
ds
scas
dec
sub
fidivrl
adc
popf
pushf
scas
scas
mov
xchg
inc
test
clc
pushf
adc
aas
daa
mov
mov
mov
nop
push
aam
mov
insb
xor
jae
stos
jns
push
pop
pusha
cmp
divl
mov
xor
in
je
fdivs
out
pop
out
lds
xor
cmp
or
aaa
gs
test
jne
add
xor
stos
pop
movsl
or
imul
stos
mov
jo
mov
mov
out
loope
adc
pop
jb
xchg
push
inc
call
jg
arpl
nop
inc
out
and
insl
jo
rol
sahf
pop
xor
decl
test
jge
mov
mov
iret
jle
jmp
iret
cs
inc
ds
xchg
or
mov
lret
or
mov
or
pop
inc
mov
jle
pop
lret
mov
sahf
in
in
or
sahf
jnp
sub
mov
das
mov
insl
daa
outsb
push
push
clc
lock
sbb
sahf
adc
xchg
in
lods
js,pt
pop
mov
mov
lret
jb
xlat
mov
dec
les
pop
cli
xchg
or
and
xor
and
inc
mov
and
pusha
and
sub
dec
dec
mov
pop
mov
gs
clc
subb
in
mov
cwtl
sub
add
fdivs
in
divl
and
scas
aas
xacquire
out
rcr
cmc
mov
jns
sbb
jno
insb
cs
mov
dec
leave
dec
in
xorb
jo
dec
scas
ljmp
test
inc
retw
or
push
loop
fiaddl
pusha
mov
mov
mov
mov
out
lods
loop
pop
ss
hlt
jne
jbe
rcrb
mov
xor
xchg
mov
addb
adc
add
jmp
call
mov
jge
daa
or
push
fimull
mov
mov
pusha
push
xor
cs
gs
dec
mov
mov
add
test
sbb
adc
or
cmp
adc
adc
rcll
mov
push
divl
mov
cmp
icebp
ss
adc
ficoms
jg
push
mov
fbstp
mov
into
cli
dec
push
mov
and
mov
flds
lret
jl
lahf
movsb
sarl
aaa
mov
and
adc
jge
lods
js
call
fwait
lret
jle
mov
fmul
insl
pushf
dec
jb
test
push
leave
and
lods
insb
mov
sub
das
in
push
push
xorl
cmp
sbb
sub
xchg
lea
nop
pop
push
xchg
inc
mov
sahf
pop
in
lock
mov
repnz
dec
jmp
adc
ja
lock
push
adc
mov
xchg
jp
addr16
add
mov
pusha
xor
cld
test
js
cmp
adc
adc
js
push
mov
mov
lods
jb
pushf
ss
les
movsb
sahf
dec
mov
xchg
inc
mov
shl
iret
xchg
push
pusha
sub
xchg
stos
jecxz
pop
cmc
mov
xchg
inc
lds
jle
or
js
mov
call
pop
sbb
mov
xchg
les
cmp
test
or
dec
leave
ljmp
xchg
ror
mov
mov
insb
adc
jo
sub
sahf
insb
dec
cmp
sbb
cmp
std
inc
aam
sub
fidivs
nop
mov
or
cli
pop
mov
ret
shll
jle
push
das
sub
aas
scas
out
out
fsubs
sbb
dec
je
popa
jbe
jbe
mov
mov
xchg
rol
mov
jmp
cs
fs
loope
cmpsl
jmp
js
adc
jmp
jb
xor
push
hlt
mov
and
enter
pop
xchg
mov
pushf
inc
fs
addb
adc
mov
addr16
ret
sahf
sub
les
out
fmuls
ret
in
jne
adc
push
sub
mov
in
iret
jg
cs
push
xchg
jae
or
daa
mov
pop
dec
cmp
mov
add
into
repnz
loop
andl
pusha
lcall
push
push
lea
roll
lods
arpl
lret
adc
pop
ficomps
mov
jmp
push
dec
push
mov
rclb
pop
pop
test
mov
pop
repnz
adc
xchg
adc
jmp
or
into
ret
repnz
add
aas
mov
lods
pop
pushf
addr16
sub
push
insb
adcl
cmp
sub
jp
cmc
pop
xchg
mov
xor
xor
push
cmp
pop
mov
outsb
cmp
cmp
cmp
add
sbb
push
pandn
fs
push
cmp
jae
cmp
bound
out
sub
sub
out
mov
cmp
aas
inc
icebp
jbe
xor
lahf
inc
hlt
fdivrs
outsb
pusha
cmp
mov
xor
aas
mov
rcll
cmp
push
mov
dec
imul
or
repz
dec
dec
push
dec
insb
and
pop
xchg
xor
pop
fistl
shlb
cmp
mov
dec
sbb
cmp
or
sbb
and
xor
cld
mov
out
mov
push
xlat
iret
sub
dec
fs
in
pop
arpl
cmovbe
cmp
mov
std
adc
sbb
shll
int3
jle
pop
negb
xlat
cltd
sub
cmp
pop
call
mov
pushf
sbb
filds
lods
lret
daa
xor
clc
xchg
mov
addr16
data16
outsl
sahf
cld
jae
mov
orb
push
cmp
cmpsl
jnp
adc
shr
sub
in
dec
out
mov
ret
xchg
pop
cmpl
pop
or
aam
sbb
inc
adc
mov
xor
mov
ss
mov
hlt
imul
and
lock
cmc
push
xchg
lcall
lcall
test
xchg
jbe
and
xchg
mov
or
sbb
mov
les
adc
mov
push
push
mov
add
cwtl
mov
push
notl
es
sbb
fsts
jns
icebp
inc
ret
jecxz
call
addl
inc
fwait
push
mov
fwait
pop
shrb
jge
das
xchg
mov
inc
add
cmpsb
push
mov
hlt
jecxz
push
fmuls
in
jo
jl
fadd
add
mov
hlt
ja
xor
rclb
jo
hlt
ljmp
add
adc
cmpsl
sar
shrb
xchg
movsl
mov
rorl
sbb
lahf
or
aam
sub
jecxz
mov
cmp
mov
mov
dec
jle
aad
adc
addr16
mov
add
jecxz
jg,pt
movb
cmpb
mov
xor
call
xor
cmp
sbb
imul
jno
inc
mov
ja
jmp
iret
popa
mov
mov
pop
sub
repz
enter
popf
mov
imul
lods
out
adcb
push
xchg
push
dec
stos
inc
lods
mov
arpl
cmp
mov
call
push
push
cmp
dec
lcall
addr16
sub
mov
out
test
jmp
fsts
enter
stos
push
cmp
int
mov
repnz
mov
mov
nop
jo
scas
fidivl
cmp
loopne
mov
pop
sbb
mov
jge
repz
push
loop
push
dec
dec
sarl
xchg
add
or
clc
add
les
and
cmp
sahf
icebp
shrl
or
adc
enter
jmp
xor
ljmp
mov
push
jo
das
push
jl
cs
lds
xchg
sub
and
cmp
cmp
das
into
mul
xchg
pop
sbb
push
call
add
cli
gs
mov
mov
mov
sbb
jg
cmp
mov
sub
jle
cmp
add
cs
mov
add
fnstenv
fs
roll
jmp
inc
decl
add
call
nop
out
add
in
push
daa
sbb
in
std
xor
or
stos
lahf
jecxz
das
das
out
inc
adc
test
mov
das
aad
scas
lods
xchg
aad
pop
lock
scas
jmp
stos
sub
data16
mov
sbb
insl
sbb
cmc
inc
cmp
daa
shlb
mov
loop
sub
imul
call
push
shlb
gs
mov
sbb
movsb
push
adc
dec
push
inc
mov
mov
jb
xchg
mov
pop
rorb
pop
cs
cmp
push
cli
or
adc
lock
shll
scas
int
sub
bound
push
cwtl
xor
aaa
xor
sbb
inc
sub
adc
push
pop
in
xchg
lret
jge
sbbb
jecxz
out
rcl
inc
out
scas
adc
lret
pop
in
inc
push
call
or
mov
sbb
xchg
lret
cwtl
dec
mov
pop
jp
sub
xor
int3
ljmp
mov
jge
inc
into
out
sub
dec
mov
push
mov
out
faddl
adc
add
dec
push
insl
mov
cmp
or
or
mov
lret
adc
add
pushf
push
add
stos
scas
hlt
cmc
fisttpl
addr16
addr16
jmp
fcmovnu
lods
mov
cltd
cs
pusha
cmp
ret
je
jo
dec
je
dec
stos
movsb
loope
sub
jnp
pop
and
fucomi
sub
mov
fwait
mov
sub
out
xor
sub
subl
out
cmpsl
sub
inc
add
mov
sub
nop
jg
jmp
stc
xchg
xor
test
cmp
scas
jmp
sbb
icebp
ficoms
cmpsl
adc
adc
aam
mov
mov
aad
xor
mov
and
adc
pop
dec
inc
movsb
jl
aaa
mov
fistpll
outsb
lods
mov
stos
pop
cmp
mov
aaa
sub
adc
add
pop
insb
mov
cmp
add
movsb
jmp
mov
les
mov
dec
jle
push
loope
pop
push
push
xor
ret
add
vshufps
xor
int3
mov
fmul
mov
loope
sarl
stos
mulb
cmpsb
xchg
inc
movsl
lahf
cltd
ja
loop
and
xor
lahf
mov
push
push
jno
out
das
jnp
xor
mov
adc
dec
push
adc
jmp
pop
sub
insb
mul
stos
movsl
dec
mov
loopne
int
mov
repz
cmp
push
sbb
test
sahf
out
es
out
aas
add
and
xchg
mov
adc
jle
xor
add
daa
imul
test
mov
xchg
mov
jle
xor
pop
out
adc
and
jge
push
dec
je
in
push
outsl
push
scas
fsubrl
adc
mov
mov
fnsave
scas
es
cmp
mov
ljmp
out
dec
aad
push
mov
sbb
and
xchg
jb
test
push
mov
mov
notl
and
stos
push
jns
xchg
leave
jl
xchg
sbb
cmpl
pop
mov
pop
jg
jg
aas
mov
cmp
push
sub
mov
ja
js
dec
xchg
and
dec
fistpl
pmaxub
add
js
cmp
sub
push
and
jnp
iret
adc
adc
test
adc
adc
sub
in
fwait
mov
push
incl
sbb
inc
ja
sub
sbb
stos
das
inc
ret
out
lret
mov
test
aam
cmp
sbb
lods
ror
pop
das
int3
ljmp
pop
std
pusha
pop
pop
fisttps
mov
test
xchg
or
dec
push
dec
add
mov
sahf
mov
mov
mov
mov
xchg
cmp
push
fistps
out
mov
jns
mov
loopne
push
imulb
xchg
je
std
aas
xlat
loopne
mov
pop
cltd
aas
insl
jnp
out
arpl
mov
aad
sbb
in
jbe
hlt
icebp
lods
rclb
sbb
aas
jno
pop
inc
mov
insb
dec
into
jecxz
dec
sbb
pop
pop
pop
add
sub
add
out
mov
jl
mov
adc
push
imul
inc
bts
xchg
xchg
mov
mov
fstps
in
push
and
cltd
shr
adc
xchg
mov
adc
adc
inc
inc
sbb
faddp
sbb
ret
pop
inc
cmp
mov
mov
pop
popf
xchg
xor
fdivrp
push
addb
cs
jne
xor
clc
lret
mov
test
movsb
ret
pop
xchg
inc
scas
mov
out
ss
leave
push
arpl
fwait
nop
xchg
lods
and
pushf
cmpsl
out
sub
aaa
fucomi
adc
push
cmpsb
aas
cmp
cmc
mov
xor
pop
jg
inc
cmp
xchg
aaa
std
inc
and
adcb
outsb
mov
mov
or
adc
mov
fisttpll
insl
hlt
mov
mov
cmp
rclb
iret
int3
mov
in
and
or
faddl
push
adc
mov
cmp
shll
xchg
and
and
lret
shrl
jnp
jg
adc
jp
pushf
loop
das
inc
mov
movsb
sbb
xor
leave
mov
test
data16
xorb
jno
out
scas
inc
pop
jg
mov
lret
jmp
push
out
mov
shrb
nop
pop
shr
add
adc
sbb
imul
xchg
outsl
cmpsl
pop
pop
xorl
xchg
inc
mov
and
pop
add
cwtl
add
lea
cmp
in
rcll
hlt
push
stos
jbe
mov
scas
xor
and
mov
leave
lahf
ret
cmp
cmpsl
adc
xor
lret
out
notl
mov
lea
lret
sub
insb
mov
mov
cld
jecxz,pn
sub
cld
or
jge
andb
out
jp
adc
xor
sub
jns
les
lcall
mov
xor
sub
mov
cmp
cli
adcl
jge
ss
pop
sub
mov
std
cs
mov
out
rclb
mov
cmp
jo
fisubrl
cmc
test
aad
add
jnp
insl
mov
mov
in
xorb
push
je
and
push
leave
xor
adc
push
and
outsb
dec
mov
xchg
mov
cmp
movsl
fnstcw
cmp
xchg
cmp
loope
inc
lret
movsl
lods
lock
jl
xchg
lcall
add
xchg
pop
in
dec
fcoml
and
fisttpl
enter
pop
sub
out
sub
jge
testl
mov
loop
ret
stc
xor
test
addr16
mov
popf
loop
das
adc
sbb
push
and
push
stc
popa
jl
sub
pop
mov
push
mov
or
push
inc
or
add
mov
cwtl
mov
in
cmc
sbb
mov
xor
push
jmp
mov
dec
mov
and
cwtl
mov
leave
and
js
and
imul
push
sub
leave
jb
xor
xorb
dec
push
mov
dec
jne
shll
or
testl
nop
out
movsl
mov
cmp
ret
repnz
xor
adc
lret
xchg
mov
cmpsb
mov
sarl
and
fdiv
inc
lods
add
xchg
mov
jb
js
push
or
xchg
xor
pop
mov
mov
xchg
push
mov
cltd
dec
loope
insl
mov
mov
mov
scas
adc
dec
push
mov
jo
mov
mov
mov
outsb
xchg
in
aad
cmpl
adc
cltd
push
repnz
mov
fs
mov
jns
adc
mov
aas
xor
push
mov
mov
push
pop
cwtl
sub
mov
adc
jp
sub
jne
mov
popf
or
cs
stos
aas
adc
out
inc
enter
cs
pop
jg
pop
daa
scas
dec
stos
fwait
pushf
je
pusha
xchg
or
mov
cs
mov
cmpb
sub
cmpsb
add
dec
mov
xchg
scas
jne
adc
xor
mov
mov
mov
pop
imul
jmp
sub
repnz
jmp
sarl
xchg
xor
out
mov
leave
sub
mov
sar
dec
adc
and
cwtl
jbe
inc
pop
adc
fdivl
jnp
xchg
mov
dec
pop
push
mov
jne
imul
and
sub
or
jne
daa
imul
repz
out
mov
jmp
inc
dec
sub
sub
fmuls
add
pop
xorl
push
inc
pop
aas
orb
or
scas
data16
and
mov
sub
cmpb
aaa
jne
mov
into
pusha
or
inc
inc
pop
xchg
mov
std
out
sbb
push
add
lock
xchg
dec
in
mov
xor
adc
dec
dec
mov
das
cltd
xorl
add
sbb
jbe
and
pop
xchg
ss
scas
add
std
cmp
sub
stos
mov
xor
out
sub
sbb
mov
enter
nop
adc
add
mov
adc
jecxz
insb
xor
test
insb
mov
shrl
add
stos
out
into
push
mov
in
mov
mov
mov
inc
pushf
aaa
xchg
mov
test
and
subb
sub
jl
rclb
mov
push
std
mov
sbb
orl
dec
mov
sbbl
cmc
cld
and
jb
mov
cmpsb
xchg
fiadds
cmpsl
mov
sub
aaa
and
stc
and
pop
das
push
and
or
adc
mov
pushf
les
xchg
and
cmp
rcll
push
pop
ljmp
cmp
jne
sahf
pop
pop
xchg
lock
inc
sarb
add
and
sbb
fld
cmp
dec
xchg
mov
pop
cmp
dec
roll
push
es
and
xchg
xor
leave
lcall
outsb
popf
dec
jb
jb
in
jp
and
push
inc
ret
icebp
mov
mov
or
pop
pop
lds
push
pop
test
mov
and
pop
sti
xchg
add
xchg
push
mov
and
testb
jmp
pop
inc
mov
mov
mov
mov
mov
fiaddl
iret
lret
pop
cltd
sbb
cmp
and
lock
xchg
jmp
mov
xchg
out
mov
sahf
pop
add
cs
mov
add
test
icebp
mov
dec
in
jle
cmpsl
into
xchg
je
mov
xorl
test
jge
xor
adc
int3
lret
and
jne
adc
js
fdivrp
pushf
inc
pop
fsincos
add
or
xlat
add
xorl
push
sub
jge
ret
or
sbb
jae
in
xor
dec
xor
push
ds
mov
xchg
sub
imul
mov
data16
push
jbe
cmc
and
test
ds
daa
or
xlat
ja
es
push
lcall
outsb
loopne
scas
lods
inc
adc
shrl
imul
xchg
dec
adc
cmpsb
dec
idivb
shlb
push
inc
jno
sub
int
cmp
das
out
pop
insb
sub
cs
adc
mov
xor
inc
pop
lahf
insl
es
fcompl
lret
pop
mov
sub
xorl
out
pop
push
sub
mov
rorl
cmc
aaa
loop
mov
sbb
arpl
push
and
dec
arpl
addr16
sub
test
lret
inc
fst
jl
push
or
push
jp
lahf
dec
pop
dec
enter
push
je
mov
and
ss
orl
sbb
cmc
ds
adc
out
lea
push
mov
jmp
mov
sbb
popa
pusha
movsl
xor
pop
add
decl
mov
out
adc
or
adc
xlat
cmpsb
pop
jnp
aas
cs
add
jle
xor
inc
inc
add
jl
lret
xor
or
adc
in
scas
lods
mov
lods
movsb
dec
adc
inc
fidivrs
add
mov
in
test
pop
aaa
mov
pushf
popa
cmp
jge
add
cmpsl
mov
jo
insb
pavgw
shrl
sub
popf
mov
into
jp
xchg
arpl
jns
aas
ds
daa
es
aaa
ljmp
shrl
hlt
loopne
push
fmul
je
xorl
sbbl
sub
mov
add
push
mov
lret
movsl
je
cmp
subb
pop
push
stos
aas
adc
fisttpl
sub
sbb
mov
sub
mov
push
mov
pop
movsl
mov
xchg
adc
adc
cmp
mov
ret
mov
hlt
dec
mov
js
sarl
scas
loope
mov
jmp
aas
aam
shlb
das
adc
xor
lods
push
inc
sub
mov
in
inc
outsl
ds
into
sbb
add
inc
in
xchg
sub
jb
insl
adc
jge
or
imul
push
xor
jns
out
mov
in
mov
jmp
testb
inc
adc
cli
pusha
aas
hlt
mov
jae
mov
xor
call
inc
subl
pop
mov
push
dec
clc
lret
movsl
sub
clc
mov
es
lea
xchg
xor
stc
adc
sub
mov
mov
inc
ret
sub
inc
addl
jp
insb
sbb
cld
fdivrp
cmp
shll
dec
push
test
lock
stos
ds
mov
mov
nop
xorl
jle
shl
roll
xchg
addl
in
inc
xorb
pop
adc
jmp
std
jne
pop
stos
cmp
and
mov
sarl
into
adc
mov
out
mov
mov
clc
out
xchg
xor
jnp
add
mov
add
pop
enter
iret
ret
dec
xchg
xchg
shl
stos
out
adc
push
ljmp
xor
cmpsl
or
cmc
mov
dec
sbb
movsb
ss
jecxz
loop
rorb
pop
xchg
or
and
jnp
or
pop
adc
addr16
cmp
fsubrs
adc
push
and
xor
sbb
adc
jge
imul
pop
dec
lret
mov
jl
pop
stos
cs
jno
aas
push
outsb
repnz
inc
sub
mov
pop
pushf
jb
mov
leave
xor
not
sub
jne
pusha
xor
dec
or
inc
shll
jne
xchg
outsb
cmp
and
sbb
adcb
mov
out
push
dec
add
loope
adc
cmp
jns
arpl
int3
jmp
push
lods
or
adc
shlb
and
adc
cmp
ret
movsb
imul
inc
or
nop
push
pop
mov
jle
pop
xor
das
repnz
lcall
inc
mov
xor
mov
and
adc
in
sbb
in
pop
test
dec
adc
adc
pop
je
push
sub
out
enter
adc
inc
adc
xchg
jg
cmp
aaa
inc
xlat
subb
push
add
jne
sbb
mov
inc
inc
jns
inc
pop
je
in
jge
jne
in
or
inc
mov
inc
sub
ljmp
out
in
cmpl
or
mov
push
pop
cld
leave
jmp
add
mov
mov
mov
test
mov
pop
setnp
cmp
mov
int
ret
fbstp
sub
ds
fstl
in
sub
nop
mov
inc
roll
pusha
pop
mov
adc
cmpsl
loope
cmp
mov
mov
push
into
cmpsb
test
ret
fs
in
xor
out
cld
adc
xchg
sbb
mov
jmp
jle
jns
imul
xchg
ret
and
cmpsb
or
and
xchg
cmp
pop
call
sub
push
out
je
call
mov
and
sub
lcall
adc
aaa
add
mov
ret
xor
mov
pop
cmp
jb
jnp
mov
repnz
cmc
pop
stos
testb
arpl
adcb
rol
in
hlt
bound
jnp
lea
cld
push
sbb
sub
outsb
xor
fchs
pop
xchg
push
cwtl
js
mov
xor
cmp
xchg
pusha
fisubrl
subb
mov
ficompl
lcall
mov
out
nop
lcall
mov
or
insb
push
in
notb
test
and
in
xchg
inc
das
rclb
sbb
jae
in
out
stos
add
test
mov
xchg
push
mov
insl
adc
pushf
push
pop
aam
push
pop
push
mov
lods
hlt
fistpll
adc
and
mov
fdiv
sub
sarl
jg
movsl
push
test
icebp
iret
addr16
out
cmp
push
lock
movsl
mov
mov
jmp
orb
mov
adc
call
sbb
jp
pop
rcr
call
push
xchg
into
pop
push
and
pop
cli
push
mov
mov
adc
jno
nop
mov
cmc
mov
mov
cmp
push
push
dec
in
jl
in
jle
cmp
sub
sub
pushf
roll
mov
xor
outsb
jle
mov
xchg
mov
and
mov
sub
mov
mov
push
jg
daa
xor
out
in
cmp
int
jne
xor
fdivs
mov
add
add
lods
loopne
cmp
rclb
loope
ret
inc
sub
imul
rclb
std
andb
ja
xlat
mov
dec
inc
adc
jnp
lds
sbb
sarb
cltd
ja
mov
inc
in
sbb
pusha
jno
sub
imul
test
pop
lea
mov
adc
pop
lea
mov
sbb
das
das
adc
fldcw
inc
push
and
test
out
cli
dec
mov
dec
test
out
in
pop
fsubrl
dec
insb
shlb
lret
jge
test
dec
mov
inc
sub
push
clc
mov
pop
xor
int
sti
mov
push
jle
lret
popa
pop
or
sahf
jo
mov
into
ret
inc
mov
ds
dec
fcoms
xchg
pop
addb
cmc
sbbb
jle
sbb
lret
jmp
popf
sbbl
js
jne
xchg
outsl
mov
mov
inc
scas
inc
maxps
out
call
push
cmp
and
jge
arpl
adc
sbb
inc
jmp
and
jnp
stos
mov
mov
xor
cwtl
add
shlb
leave
inc
adc
popf
xchg
shl
aaa
pop
fnstenv
cmp
sbb
lods
lods
mov
push
jnp
sbb
inc
sub
fwait
xor
mov
jns
add
add
dec
inc
movsl
mov
pop
mov
adc
mov
push
inc
mov
daa
xor
adc
or
push
movsl
inc
test
xchg
ss
cmp
sub
pop
xchg
das
jl
and
xor
out
dec
add
mov
mov
add
stos
andl
pop
popf
adc
jb
cmc
and
xor
jo
push
jecxz
jno
and
pop
fists
mov
lods
lahf
cmpsl
lds
ss
out
or
jp
dec
enter
out
mov
inc
outsl
mov
loopne
int3
sub
scas
inc
push
xor
xor
sbb
orl
test
fadds
xchg
out
xor
loope
je
jnp
pop
fidivrs
and
icebp
pop
push
or
scas
ret
stos
fst
xor
xchg
xor
fcmovnu
or
and
xor
cmp
fidivs
fucomip
push
decb
js
popf
inc
push
cmp
clc
cltd
sub
or
aaa
adc
sbb
js
pop
mov
outsb
data16
test
mov
adc
pop
subb
mov
cmpsb
je
es
mov
enter
jl
push
loope
sub
jo
xchg
int3
add
cmpsb
mov
hlt
adc
loope
pop
push
mov
mov
orb
xchg
insl
sar
mov
dec
ds
sub
jge
sub
jo
adc
sbb
fiadds
shrb
lods
jo
outsl
cld
inc
jl
notb
and
insb
dec
lcall
jmp
add
xlat
call
arpl
outsb
ret
test
test
repnz
inc
mov
adc
sbb
xor
in
adc
push
or
or
out
in
jge
bound
movsl
mov
out
or
int
inc
mov
pop
push
imul
cmp
aaa
sub
outsl
imul
xor
sub
jge
leave
iret
fadd
push
ret
dec
sub
push
mov
jnp
insb
test
push
scas
aad
and
hlt
inc
fs
xor
sub
jnp
cs
sub
add
cmpl
dec
cmp
lea
pop
cmp
sbb
in
add
int
pop
enter
cli
idivl
in
pop
int3
mov
adc
xor
adc
xor
adc
adcb
ret
dec
sbb
adc
jns
cmp
mov
push
fistpl
xchg
mov
xchg
sub
out
dec
js
cmp
sub
sub
xchg
xor
xor
adc
mov
sub
call
inc
xlat
cmc
mov
sahf
dec
rep
sbb
adc
xchg
mov
inc
xor
je
sub
push
or
outsb
mov
ds
jp
push
cmc
xchg
mov
inc
test
push
adc
jns
sub
sbb
mov
ja
pop
or
js
dec
cmp
cmp
out
fidivs
ror
ret
xchg
cwtl
push
adc
adc
fs
loopne
mov
stos
adc
fldcw
mov
into
sbb
sub
lods
adc
inc
adcb
inc
adc
repz
out
pop
insb
out
push
test
insl
jmp
dec
icebp
adc
stc
add
scas
rorb
loope
popf
pop
test
push
scas
adc
mov
lahf
xlat
mov
adc
and
stos
dec
dec
inc
fldt
test
sub
jge
das
insl
adc
int
mov
pusha
jecxz
fsubl
movsl
ds
and
xchg
vmptrld
inc
mov
dec
mov
fimuls
loop
les
xor
fs
mov
mov
push
sbb
in
push
cmp
xchg
lds
mov
mov
cld
leave
shll
std
jnp
mov
jnp
fstpl
mov
add
dec
scas
push
mov
add
out
cmp
je
xchg
stc
inc
loopne
dec
fucomip
dec
cmc
cltd
xchg
imul
stc
xchg
fsts
mov
jmp
bound
fisubs
add
mov
shrl
loope
push
and
and
es
sub
icebp
or
dec
cmp
aaa
insb
xchg
test
lods
stos
out
test
fisubs
dec
jp
ret
cmp
cmpb
ret
dec
adc
xor
popf
cs
pop
mov
dec
js
clc
hlt
push
dec
and
cmp
fsts
lea
jmp
or
insb
enter
rolb
out
lret
xor
scas
in
les
dec
mov
xor
and
or
mov
sarl
test
test
data16
cmpl
shr
mov
bound
pushl
pop
ret
mov
sub
nop
js
adc
lret
lock
xlat
push
mov
lret
shrb
std
jge
push
push
sbb
enter
pop
cwtl
stos
iret
iret
test
push
cmp
xchg
xor
shr
mov
inc
in
dec
pop
xor
ds
std
fcoms
fistps
cmp
pop
xchg
sbb
pop
test
int3
ds
fimuls
stos
adc
inc
scas
mov
js
sbb
dec
outsl
aad
mov
and
xor
fiaddl
adc
clc
vmovsldup
aas
jp
mov
mov
adc
ret
mov
lods
stos
je
jp
mov
mov
mov
rorl
je
pop
cmpsb
insb
pop
cmp
out
push
adc
add
rcr
das
xchg
cwtl
rcrb
in
insb
pop
test
dec
xchg
fldl
mov
mov
sbb
lret
lea
adc
sub
lds
fdiv
out
mov
popf
insb
insl
lret
fmuls
add
out
das
adc
pop
lret
xchg
sub
xor
add
clc
test
jnp
fucomi
data16
inc
fwait
jp
inc
push
xor
lea
shrl
mov
pop
lods
pop
mov
cmp
adc
lea
dec
pop
mov
mov
orl
mov
add
xor
jbe
inc
ror
add
ja
inc
loopne
pop
fidivrs
dec
fisubs
inc
mov
pop
dec
mov
rcll
insb
adc
sub
push
ja
pusha
mov
ds
rcll
pop
lods
mov
mov
addr16
stos
inc
cmp
pushf
mov
mov
callw
sbbb
cmp
lret
test
pushf
mov
push
imul
in
hlt
cmpb
mov
notb
and
das
orb
jns
or
rcrl
xchg
xchg
inc
pop
pushf
in
dec
pop
mov
dec
push
push
mov
mov
pop
mov
pusha
xchg
enter
adc
push
ds
pop
setle
fmull
push
clc
jl
mov
xchg
xor
je
add
mov
loope
cmp
mov
and
sub
dec
jge
aaa
sbb
pop
inc
fstpl
out
sub
sbb
enter
sahf
xchg
xchg
fstps
mov
cwtl
mov
mov
pop
push
xor
lock
das
xchg
je
push
lahf
sub
cmc
andb
sbb
call
rolb
sub
xchg
rol
fwait
insb
xor
add
mov
sub
mov
lds
cmp
lock
sbb
add
mov
fcoml
enter
lods
in
in
movsl
nop
outsb
inc
xchg
fcoms
adcl
push
out
call
cmpsl
push
out
push
sub
jbe
sub
fidivrs
clc
xrelease
mov
jmp
imull
push
testl
pop
cmp
leave
setp
push
adc
pop
cmp
xor
adc
inc
subb
dec
cmp
xchg
jo
pop
aaa
movsl
in
jne
xor
jns
popf
sarb
insb
es
ret
pop
adc
push
jbe
idivl
pusha
lods
lods
add
sub
lods
xor
mov
andl
je
sbb
scas
mov
jbe
adc
mov
pop
mov
shl
das
inc
adc
sbb
cmp
inc
mov
dec
mov
out
cmpsl
outsb
notl
jbe
test
ss
enter
add
dec
loopne
popf
lret
cmp
or
inc
cld
adc
shl
std
mov
xchg
lds
mov
dec
cs
subb
rcrb
icebp
js
ds
add
push
mov
xchg
lret
xor
push
imul
and
jo
mov
jo
mov
pop
add
repnz
mov
lods
loope
in
test
jmp
pushf
mov
and
jge
cmp
mov
pop
inc
xchg
jmp
xchg
gs
mov
out
sub
mov
je
adc
test
fstps
rcl
xor
cmp
mov
xor
es
lods
xlat
xchg
rcrb
adc
push
fisubs
or
jmp
popa
mov
inc
mov
cmp
mov
aaa
ss
ss
add
jl
jecxz
fwait
test
mov
call
jmp
pop
movsl
in
int3
ret
pop
jo
push
fsubrl
inc
sub
mov
shlb
inc
cmp
jo
push
ds
add
and
cmp
subl
cmp
push
lea
pop
cmp
cmp
jmp
in
lods
xchg
divb
sub
inc
or
sbbl
aam
loope,pn
pop
aaa
dec
cmp
push
jl
cmp
xor
jp
cmp
and
lods
push
out
data16
cmp
xor
lcall
and
add
cmp
xor
outsl
add
stc
out
les
rcrl
cmp
aas
mov
lods
fwait
sub
push
sbb
pop
dec
loope
sub
movsb
dec
std
ret
sbb
add
mov
add
push
pop
inc
and
ret
or
mov
cmp
mov
fstpt
xchg
xor
jae
adc
cmp
or
sub
ret
cmp
outsb
cmp
and
sub
pop
jecxz
push
jns
orb
sbb
jne
lods
dec
add
cli
pushf
lock
decb
cs
movsl
jne
daa
lret
mov
mov
or
inc
jbe
movsb
push
cmp
sub
or
or
inc
inc
adc
clc
xchg
cmp
add
jne
cmp
sbb
inc
out
icebp
and
xor
jge
cld
sub
pop
mov
mov
mov
add
lea
cmp
adc
or
or
call
ret
ret
sarb
mov
mov
pusha
fnstenv
xchg
lret
out
mov
insb
lods
xlat
paddq
add
xchg
sbb
clc
add
mov
sbb
les
cmc
pop
cmp
mov
cmp
sahf
ficomps
mov
popf
xor
mov
xor
xchg
mov
or
shrl
cmp
xor
std
or
repz
xchg
dec
in
cmp
sbb
pand
fnstsw
dec
xor
push
mov
pop
push
int3
sbb
sahf
lea
inc
cltd
es
fdivrp
push
push
gs
cmp
mov
test
pusha
dec
push
insb
out
cmp
shlb
sbb
cmp
int
sbb
repnz
shrl
lcall
xlat
lods
add
in
repnz
cmp
movsl
jae
pop
in
in
sub
out
dec
xchg
mov
pop
mov
add
clc
fcompl
jmp
ret
dec
les
push
repz
cli
ret
stos
pop
or
pop
and
int
jge
aas
push
cmp
mov
sub
pop
push
cs
fidivrl
mov
push
sub
outsl
push
call
mov
cmp
jns
repnz
cmp
adcb
pusha
inc
sub
pop
insb
adc
inc
lcall
std
hlt
jne
mov
movsl
pop
in
out
cmpsl
stc
cmp
call
lods
cmp
add
cmp
pop
ficoml
arpl
mov
jl
mov
sub
or
push
lods
ljmp
mov
cs
cmp
cmp
cmp
fdivrp
test
inc
adc
clc
cmp
hlt
lea
jb
lods
xor
cmp
cmpsl
pop
push
sub
sbb
fmuls
mov
in
sub
inc
jne
jmp
test
loope
mov
hlt
sarl
dec
lods
xor
or
pop
les
fnstsw
lea
pop
test
cmp
push
cmp
dec
jns,pn
mov
adc
int3
adc
push
cli
cmpsl
aam
xor
aaa
lahf
jb
das
ficoml
lret
stc
pop
movsb
fdivs
in
in
pop
xchg
subb
push
pop
dec
cmpb
rcrl
push
sub
cmpsb
fs
and
push
inc
cmp
jbe
cmc
mov
mov
pop
bound
push
cld
cmp
lods
aam
int3
aas
addr16
cmp
sbb
inc
movsl
fdivl
gs
sub
ficoms
pop
test
inc
ret
insl
adc
cmp
movsl
mov
std
or
or
cmp
cwtl
or
mov
adc
xchg
loop
lret
pusha
xchg
outsb
aaa
mov
adc
xchg
imul
lock
aad
cmp
push
pop
pop
ror
push
cli
rolb
inc
or
mov
xchg
inc
sbb
loop
cmp
orl
cmpsb
pop
scas
sbb
fs
in
shll
push
sub
sbb
push
fimull
lock
es
idivb
xchg
pop
pavgb
inc
jnp
imul
cmp
or
sbb
mov
sarl
testb
lods
xchg
push
fnstsw
cmp
aas
push
sbb
jecxz
push
sub
sub
inc
fs
mov
push
adc
ds
cmp
push
enter
ret
mov
mov
sbb
cld
pop
or
jno
jo
cmp
pushf
mov
cwtl
pop
xor
cmp
popa
sbbb
fwait
cmp
jl
mov
insb
loop
xor
xor
sbb
cmp
arpl
call
leave
jns
dec
jecxz
and
aad
repz
scas
add
pop
fdivs
in
sbb
jo
jecxz
jle
lods
inc
das
outsl
push
jge
mov
push
in
fwait
push
int
repnz
ret
pop
adc
pop
push
and
dec
lret
jne
and
jge
jp
lcall
adc
pop
aad
cmp
cltd
add
xchg
insl
inc
call
aas
pop
fchs
or
mov
les
clc
cwtl
cmp
arpl
das
cmp
rorb
lcall
ja
inc
jmp
adc
xchg
xor
push
cmp
icebp
negb
ds
cmp
add
adc
adc
ss
repz
or
fwait
xchg
insl
stos
loope
cmp
jmp
adc
sub
lods
push
xor
js
mov
into
dec
loope
test
inc
inc
dec
mov
cmp
cs
dec
dec
je
push
mov
lcall
cmp
enter
xchg
sbb
pushf
cld
outsl
cmp
sahf
dec
pop
mov
cmp
sbb
subb
ljmp
call
adc
les
enter
int
cmp
shrb
push
cmp
or
pop
xchg
adc
rcrl
pusha
adc
push
insb
shrb
iret
movsb
inc
jbe
pop
sarb
xchg
outsl
les
jbe
push
xor
imul
pop
mov
insb
stos
cld
mov
in
push
mov
rorl
cmp
dec
frstor
aas
cmp
lret
mov
and
mov
popf
xchg
imull
and
mov
in
push
cmp
jne
lods
fdivrs
mov
cmp
lret
pusha
lea
cs
jb
out
loopne
in
jo
push
cmp
adcb
xchg
in
dec
int3
xchg
inc
sbb
sbb
cmp
fistpl
fidivl
jbe
jl
sub
lods
push
xchg
cltd
aas
ds
cmp
loopne
xchg
push
aaa
lock
pop
adc
push
int
bound
jmp
xchg
shrl
shll
pop
cmp
or
lret
movsb
push
stos
jae
dec
mov
je
sub
mov
adc
gs
add
sbb
cwtl
lret
sub
and
push
pop
xchg
push
cltd
cmp
xor
insb
mov
adc
lds
test
repnz
aam
pop
pop
cmp
outsb
out
imul
lock
test
adc
sahf
jge
ljmp
fistps
cltd
lahf
adc
scas
push
daa
in
mov
mov
mov
cmp
xchg
cmp
rclb
xchg
dec
outsl
sub
push
inc
clc
mov
push
adc
jbe
sbb
pushf
push
xchg
lahf
xor
add
repz
or
xchg
dec
cmp
add
cs
cmp
movsl
adc
ret
jo
jge
dec
es
test
inc
xlat
cmp
jno
pop
add
dec
ds
in
mov
int
insb
sbb
jle
xchg
sub
dec
pop
cmp
adc
xlat
rolb
or
clc
jbe
sub
cmp
push
lcall
repz
xor
test
stc
sbb
outsl
call
jne
testb
outsb
in
mov
mov
lcall
aas
xor
adc
mov
cmp
pop
or
push
xchg
ss
movsl
lahf
sub
enter
xchg
in
test
ja
mov
mov
and
xor
ds
lret
insl
pop
push
ss
sbb
sub
subb
jp
cld
jmp
push
xor
ja
out
lods
sbb
pop
sbb
loop
push
xlat
pop
ja
adc
loop
fst
bound
xor
pushf
adcl
xor
or
pop
add
cmp
and
cmp
pusha
or
jp
leave
mov
cmp
andl
mov
and
push
das
push
imul
loop
pusha
xchg
out
nop
add
mov
fs
flds
in
mov
nop
pop
cmp
lock
jmp
mov
mov
xchg
loope
push
jle
lods
jl
popa
aaa
xchg
inc
call
sbb
aas
fwait
mov
jns
and
test
inc
lret
lods
add
test
jg
scas
inc
loope
mov
mov
xor
idivl
std
in
sub
call
outsb
imul
je
cmc
mov
daa
pop
add
mov
xor
mov
xor
mov
mov
sub
out
mov
push
addl
jp
lock
mov
mov
ficoml
ljmp
sbb
mov
inc
pop
mov
call
sbb
sub
xchg
mov
jno
mov
mov
jno
test
pop
mov
and
loopne
push
and
sbb
cmp
xchg
jp
es
add
in
mov
pop
popa
movsb
enter
fmuls
mov
mov
jle
hlt
das
insl
fcomps
out
or
stos
mov
shll
cs
adc
ret
lock
sbb
out
adc
sub
std
lret
xor
out
out
daa
jno
cld
pshufw
xchg
fmulp
sbbl
inc
or
sbb
mov
jp
adc
adc
hlt
inc
dec
adc
xchg
cmp
jo
pop
mov
adc
push
ret
add
int3
not
mov
enter
add
sbb
jp
imul
xchg
ss
lcall
adc
mov
cs
movsl
clc
shll
ret
adc
arpl
jg
pop
jns
mov
mov
and
cmp
adc
mov
xchg
les
addr16
cmc
in
lcall
popa
popf
mov
in
mov
cmp
or
pop
mov
loop
sub
mov
ljmp
mov
and
loope
xor
mov
mov
and
lds
mov
add
push
daa
scas
jb
js
xor
out
int
xor
mov
idivl
sbb
mov
add
in
outsl
jmp
adc
ds
sub
negb
movsb
mov
xor
orb
adc
fcoml
ljmp
jmp
fwait
movsb
cmc
jge
fiadds
ds
iret
ss
es
mov
daa
mov
sub
push
mov
aas
inc
and
mov
adc
mov
adc
push
ret
mov
jg
rorl
orl
shrb
or
pushw
in
mov
fistpll
mov
jecxz
inc
xchg
cmp
shl
push
jmp
or
mov
jl
sub
jp
es
lret
cmp
jnp
mov
shlb
dec
in
inc
movsb
pop
orl
lret
mov
xor
inc
test
aas
pushf
cs
dec
adc
cmp
cmp
xchg
jp
adc
lods
fucom
mov
or
pushf
mov
sub
jp
out
fsubrl
hlt
fidivl
fcomip
jns
inc
ljmp
adc
popf
in
adc
std
loope
mov
out
iret
out
das
inc
nop
xor
enter
push
mov
mov
sbb
dec
push
aas
xor
pop
mov
xchg
stos
adc
pusha
jl
out
fwait
pop
push
jb
jp
sub
pop
push
mov
rorl
adc
pop
aaa
cs
in
adc
mov
ds
call
enter
adc
gs
lods
jmp
pop
mov
je
pop
jp
sbb
movsb
mov
and
in
sub
pushf
and
in
mov
pop
mov
adc
les
mov
jmp
and
xor
mov
ja
fisubrs
mov
stos
dec
pop
mov
push
cmp
andb
adc
test
je
sub
pop
lahf
insl
scas
andb
add
inc
int
jmp
xor
pop
sub
or
jle
push
cmp
aam
push
adc
lret
pop
outsb
inc
jo
or
loopne
jno
fadd
push
jge
sub
or
sahf
test
aas
jge
mov
out
lods
xor
jns
in
faddl
repnz
add
je
pop
inc
pushf
xor
inc
shlb
fwait
stc
ret
pop
xor
adc
mov
leave
jns
inc
mov
sahf
xlat
mov
icebp
fisubrs
push
inc
or
cmp
aam
mov
insb
xchg
adc
mov
mov
adc
sub
testl
inc
rcll
cmp
out
adcl
xchg
jp
adc
mov
cmp
mov
fsubr
scas
mov
inc
repnz
dec
in
push
punpckhbw
ds
hlt
divb
xor
jp
xor
pushf
dec
aas
stc
adc
scas
inc
add
imul
fcomps
ds
jg
push
or
pop
sub
push
sarb
addb
pop
or
sub
cld
mov
mov
mov
rcrb
xchg
xlat
push
in
push
and
imul
pop
out
je
mov
movsb
mov
movsb
jl
test
cmp
pop
daa
insb
pop
lcall
arpl
jecxz
sub
mov
fs
jge
jge
dec
jne
jecxz
inc
js
mul
xchg
negb
mov
out
es
popf
dec
jg
inc
adc
mov
jnp
adc
lret
jmp
fcmovnbe
lret
loop
aam
xchg
lcall
mov
xlat
sub
imul
cmp
sbb
jne
jle
pop
mov
jp
jecxz
call
or
shr
insl
stos
in
xchg
outsb
cmpsb
lock
inc
mov
add
pop
push
mov
inc
cmp
fstpl
pop
jle
das
xchg
dec
mov
push
ror
fbstp
outsb
inc
jmp
mov
aas
mov
jg
stc
ret
or
out
dec
in
test
mov
je
es
cltd
mov
push
ja
decl
in
ljmp
xchg
adc
loope
jg
pop
push
and
xor
daa
leave
dec
jp
mov
mov
push
dec
adc
enter
bswap
mov
je
mov
stos
enter
fdivp
fcompl
ljmp
mov
adc
jg
loop
jnp
fucom
push
push
or
ss
orb
dec
add
lret
inc
pop
pop
scas
int3
out
jmp
jae
icebp
sbb
ficomps
ret
dec
imul
mov
jnp
adcb
cli
mov
jmp
push
inc
fwait
xor
popf
addr16
in
outsl
cmp
out
mov
and
ds
inc
push
stos
xor
cmp
inc
sbb
fwait
jnp
cmp
push
stc
cmp
dec
aaa
hlt
frstor
outsl
xor
fbstp
pushf
sbb
xchg
insl
dec
jmp
aaa
int3
pop
jge
scas
sbb
ret
out
push
cwtl
in
idivl
sahf
hlt
data16
out
lea
jnp
lret
ljmp
imul
cmpb
mov
cltd
cmpl
test
fcoml
std
inc
mov
cli
dec
or
ret
mov
out
jnp
dec
or
jge
cmp
jo
imul
pop
xor
arpl
jnp
cmp
scas
mov
pushf
cmp
jbe
fwait
cmp
int
xor
mov
es
jns
fs
call
and
icebp
bound
sbb
xchg
inc
lds
es
sbb
and
mov
mov
jg
mov
xor
adc
jno
cmp
xor
mov
mov
dec
imul
cmp
int3
or
pop
mov
pop
mov
es
and
les
sarb
fsubrs
push
inc
lcall
test
adc
sub
mov
mull
xor
repnz
aad
stos
dec
mov
cwtl
outsl
jp
cmp
jge
mov
bound
mov
cmp
fistpll
pop
icebp
ss
cmp
push
adc
lea
sbb
inc
insb
inc
xor
sub
sar
rol
sub
jo
pop
mov
and
sbb
jno
test
test
js
ret
cmp
mov
scas
cmp
mov
mov
pushf
cwtl
sub
and
dec
dec
mov
cmc
push
pop
add
cmp
xchg
insl
dec
and
fisubrl
cmp
pop
lock
mov
dec
lret
jb
jne
cltd
mov
cmp
or
les
test
add
xchg
cli
add
popf
mov
cmp
lods
test
add
shr
xchg
cld
mov
arpl
pop
fdivrs
lds
in
testb
js
adc
out
mov
outsb
mov
cmpsb
mov
call
mov
mov
xor
out
enter
fdivl
cwtl
test
adc
jecxz
push
sub
mov
cmp
inc
inc
jb
or
dec
cmp
iret
outsl
push
adc
xor
test
sarb
bound
je
lret
sbb
add
repnz
scas
mov
add
pusha
cmp
gs
cmp
sub
cld
cmp
scas
dec
aad
mov
mov
sub
pop
cmp
xlat
cmpsb
jge
dec
mov
mov
and
sub
dec
aad
mulb
sbb
ljmp
pop
cmp
mov
fstl
js
test
mov
int3
pop
fbld
xchg
cmp
mov
mov
cmp
push
lock
insb
out
dec
sbb
push
cmp
sub
xchg
inc
mov
fisubrs
push
fs
lods
jg
jmp
sub
cmpb
xchg
test
mov
nop
outsl
popa
mov
loopne
adc
scas
push
cmc
fs
pop
popf
xchg
mov
sub
sbb
leave
cmp
adc
jge,pn
adc
push
pop
cmp
cli
xor
sbb
sub
out
in
add
add
mov
mov
inc
pushl
gs
pop
lods
subb
lea
and
mov
sbb
jae
shlb
in
lods
faddl
ljmp
adc
sub
test
sti
dec
lds
cmp
adc
pop
cmp
sbb
cmp
sbb
dec
push
jno
lahf
pop
push
test
sub
mov
sar
mov
scas
inc
mov
int3
cmp
dec
mov
sub
mov
ret
mov
jnp
jno
jecxz
or
pop
andl
push
dec
addl
pop
push
xchg
jb
cmp
shrl
leave
cmp
sahf
sti
jle
mov
push
xor
add
mov
xchg
les
test
dec
cmp
inc
sub
fsubrs
lock
cs
xor
in
adc
shrl
sarl
inc
mov
dec
cld
fidivs
push
sub
or
outsl
fstpl
pop
pop
push
jb
std
rol
add
jecxz
jbe
and
add
cmp
and
in
imul
push
mov
mov
adc
cmp
sbb
mov
aam
test
pop
hlt
notl
jg
lret
cmp
call
pusha
mov
or
sbb
in
popf
pop
jmp
push
and
int
or
xchg
lods
ficoms
nop
inc
pop
pusha
in
inc
cmp
icebp
outsb
sbb
outsl
push
incl
xor
sub
adc
mov
add
fsubrs
scas
aad
loopne
nop
std
cmp
pusha
mov
cs
icebp
lds
repnz
mov
cmp
adc
pop
mov
fistl
cmpl
mov
mov
cmp
and
inc
sub
mov
stc
xchg
data16
cmp
ja
cmp
cmp
testb
push
fsubr
ss
sbb
movsb
jmp
push
dec
ja
cs
jae
cwtl
mov
dec
push
jns
in
movntps
mov
xor
sbbl
xor
add
mov
dec
jns
push
fidivrs
dec
in
xorb
xor
fcoml
call
jl
jbe
mov
loop
xlat
packsswb
cmp
jmp
jle
aas
cmp
loop
push
jl
cld
ret
enter
arpl
sbb
es
ficomps
mov
sbb
dec
mov
cmp
inc
pop
dec
repz
sub
out
in
jge
sub
call
scas
cmp
cmpl
cltd
mov
add
cs
xor
and
push
cmp
movsl
pushf
xchg
cmp
fnstcw
or
enter
shrl
add
popf
push
in
sub
dec
les
in
loope
leave
lods
stos
shlb
cmp
std
mov
cmp
idivb
cmc
mov
sub
mov
sub
lahf
sbb
xor
cmpb
inc
sub
mov
jbe
xor
sbb
out
out
cmp
fwait
rolb
insl
cmp
fimuls
dec
adc
enter
lock
cmp
ja
sub
mov
cltd
xchg
cmp
sbb
sbb
push
enter
loope
or
mov
push
scas
cmp
sub
push
push
cmp
mov
in
pop
fs
iret
sub
in
pop
mov
scas
lock
mov
enter
xor
test
lahf
stc
xchg
int3
and
je
cmpsb
cmp
sub
lret
mov
inc
int3
mov
fldenv
dec
mov
jnp
mov
imul
adc
stos
dec
cmp
xchg
stos
mov
bound
adc
stc
stos
repz
mov
outsl
sub
into
cmp
adc
add
cmp
clc
sbb
pop
ficompl
stos
adc
jo
xor
xchg
dec
xchg
mov
mov
movsb
cmp
mov
pushf
cmp
push
mov
cmp
jge
push
subb
xor
sbb
mov
xorb
dec
dec
jle
sbb
dec
in
dec
in
mov
ret
inc
sub
dec
xor
jne
sub
xor
sub
pushf
insb
adc
xchg
cmp
in
pop
imul
les
rorl
push
rcll
xchg
stc
mov
enter
pusha
adcb
lcall
mov
push
push
jnp
push
dec
in
push
inc
xor
movsl
loop
mov
subl
popf
rcrb
clc
mov
or
cmc
pop
call
cmp
cmp
lret
mov
clc
jle
fincstp
divb
hlt
aas
fcoml
sbbl
loopne
mov
adc
out
in
dec
xor
push
inc
sub
pop
inc
mov
jg
frstor
adc
pop
xor
adc
push
cli
mov
inc
push
lahf
mov
addl
in
mov
lea
jne
std
sti
add
adc
pop
cs
adc
pop
mov
inc
in
jns
outsb
or
cld
sbb
mov
push
stos
add
push
decb
push
pop
push
inc
xchg
mov
mov
and
adc
out
enter
ds
stc
push
in
je
pop
sub
and
out
push
jle
sub
mov
into
in
adc
mov
stos
jmp
adcb
movsb
stos
std
adc
dec
ljmp
shll
popf
xchg
sub
push
mov
mov
loopne
xchg
cld
pop
cmpsl
xchg
pop
jp
sub
inc
das
and
dec
fdiv
cmp
enter
cli
mov
sub
hlt
adc
jmp
sub
ret
imul
xor
xor
leave
idivb
cmp
push
mov
pop
pop
mov
and
xchg
sbb
jmp
dec
xor
mov
movsb
xchg
int
and
push
add
std
mov
jle
popf
leave
mov
test
xor
pop
mov
rolb
scas
inc
mov
lods
and
leave
cli
insl
cmpps
movsb
push
shrl
pop
mov
xchg
mov
loope
loopne
mov
push
gs
inc
fnstenv
mov
ficoml
jo
roll
jecxz
or
ds
dec
dec
sub
cmp
xor
js
adc
xorb
and
push
fsts
lret
adcb
lret
xchg
hlt
and
popf
or
push
push
push
mov
sub
add
cwtl
jb
inc
adc
adc
jg
jo
jbe
out
leave
mov
rolb
aaa
xor
inc
xor
adc
pop
es
jl
adcb
movsl
sbb
stos
movsl
sub
lahf
outsb
stos
xchg
jno
in
xchg
sub
xchg
in
aam
sub
fs
xchg
pusha
push
sub
and
mov
and
decl
push
lret
mov
sub
insl
push
cs
cmp
xor
adc
and
cmpsl
inc
xchg
fistpll
loopne
dec
ds
inc
call
mov
push
sbb
dec
and
sbb
pop
mov
out
out
lret
mov
jb
jne
scas
push
aas
adc
jae
outsl
jmp
aaa
in
xor
dec
cmp
jne
and
mov
dec
cmp
mov
int
or
adc
stc
add
jg
mov
enter
js
mov
mov
lock
daa
enter
jae
mov
js
push
cmp
push
into
idivb
imul
adc
das
mov
cmp
push
xor
add
jecxz
push
cmp
push
xor
js
sbb
jmp
adc
mov
sbb
into
sub
rcll
aam
push
xchg
inc
out
cli
xchg
stos
adc
lea
pop
outsl
in
imul
sbb
mov
push
or
ja
mov
mov
xchg
xor
fwait
sub
std
inc
mov
movsl
mov
mov
xor
sbb
or
sbb
adc
adc
push
inc
or
pop
mov
mov
mov
pop
xchg
sub
pop
xchg
cmp
add
in
es
mov
mov
fs
or
lock
push
xorl
scas
sub
enter
or
push
jo
xor
cmp
sahf
mov
lds
xor
ja
inc
aaa
mov
mov
sub
push
xchg
into
and
sub
scas
xchg
movl
bound
xor
int3
push
fs
fs
insb
sub
mov
repnz
sbb
lods
xor
ss
mov
add
mov
jbe
lods
rolb
mov
aad
ljmp
lods
aas
and
cmp
and
jo
rcll
cli
shrl
mov
mov
aaa
pop
fisttpl
sbb
pop
lock
add
push
cmp
sbb
ret
pop
rcr
orl
je
insb
frstor
push
popf
sbb
js
sub
outsl
in
mov
ret
pop
fstl
pop
jno
cmp
into
aaa
dec
addb
pop
adc
enter
push
add
mov
inc
ds
and
cmp
test
jnp
es
xchg
mov
push
push
das
test
sub
ficoms
mov
ljmp
imulb
jecxz
sub
aas
clc
fcomps
rclb
lds
pop
inc
out
subl
cmpsb
sti
jne
imul
dec
pop
mov
dec
test
push
dec
fmul
cmpsb
divl
inc
movsl
jae
pushf
pusha
inc
out
sub
sbb
divl
mov
leave
jo
and
sti
push
xchg
lcall
ret
sub
add
xchg
dec
jge
cmc
push
pop
mov
lahf
leave
mov
stos
adc
in
adc
pop
ljmp
or
xor
hlt
lods
add
mov
cmp
insb
lret
jg
leave
and
lret
mov
fistl
mov
les
cmpb
jb
pop
mov
cmp
xchg
sub
add
stos
aad
sbb
imul
ja
pop
pop
xor
adc
pop
mov
aad
and
andl
lret
xchg
outsl
aaa
loop
lret
mov
enter
insl
fstpt
sub
add
adcl
lock
sbb
mov
lock
sbbb
cmp
fidivrs
mov
mov
push
xor
xor
push
pusha
insl
loope
cmpsl
dec
cmc
and
cmpsl
inc
pop
jmp
mov
insb
lods
pusha
lret
in
pop
jp
push
mov
adc
cmp
cs
pop
ljmp
nop
jns
push
test
into
mov
and
mov
addr16
cli
imul
mov
repz
inc
or
mov
rclb
ds
add
push
adc
sbb
dec
xorb
pusha
aaa
loope
cld
mov
cmp
or
inc
add
sti
data16
push
cmp
xchg
dec
bound
data16
ljmp
mov
fisubrs
jb
fwait
dec
mov
ss
les
pop
into
decl
enter
sbb
sub
xchg
cmp
adc
cli
and
cmp
mov
xor
push
mov
xchg
mov
mov
jl
push
push
mov
rcl
notb
aas
and
adc
mov
xor
lret
ds
or
pop
js
jecxz
jb
mov
xchg
cmp
xchg
test
es
jl
leave
add
lea
repz
cld
mov
inc
dec
lods
jmp
mov
inc
adc
jo
addb
xchg
in
popf
into
or
out
hlt
push
movsl
jne
jnp
push
dec
push
or
xchg
inc
inc
sub
jecxz
jmp
testl
in
or
xchg
cwtl
add
cli
pop
cmc
mov
adc
aas
fsincos
mov
pop
xlat
mov
pop
pushf
ds
sub
call
flds
inc
sub
aas
orb
xchg
sbb
mov
lods
das
outsl
inc
mov
ja
and
mov
addl
shrl
fisttpll
data16
push
mov
mov
in
std
test
xor
ret
xchg
mov
aas
or
js
push
mov
adc
mov
sbb
sub
add
daa
arpl
pop
outsl
inc
add
jnp
pop
subb
in
out
sub
jae
and
adc
mov
xchg
mov
out
adc
test
mov
cmc
xchg
mov
add
mov
adc
mov
dec
xor
mov
inc
arpl
dec
lds
and
inc
push
push
movsl
shl
sub
out
pop
mov
fnsave
lods
das
fstps
push
aam
xchg
mov
mov
divl
int
cmp
sub
mov
cmp
outsl
stc
cltd
jecxz
pop
lea
movsl
dec
ss
outsb
and
inc
mov
inc
pop
aaa
lods
mov
cmc
jecxz
adc
lea
xchg
inc
push
jp
xor
add
sub
ret
mov
out
sbb
jnp
loope
push
jb
aam
movsb
lret
xchg
mov
fwait
loopne
jle
mov
dec
mov
sub
add
xchg
mov
jmp
dec
insl
mov
aam
mov
lahf
stos
adc
inc
aam
jg
sahf
mov
adc
push
in
and
in
xor
sub
adc
mov
out
lods
add
aaa
fidivl
jp
ss
pop
inc
loope
outsb
xchg
insb
xchg
adcb
add
mov
pushl
insb
mov
cmp
xor
sub
insb
jno
stos
xor
repz
sbb
rol
stos
les
mov
push
and
or
idivl
dec
pop
mov
mov
xlat
enter
jecxz
xor
sub
sbb
xchg
pop
dec
jle
lds
jbe
fxch
jnp
sub
addb
cmp
shrb
js
enter
icebp
sub
add
add
sub
popa
inc
test
std
lods
push
cmc
add
cmp
pop
addb
adc
leave
das
jae
cmp
cmp
push
cltd
xchg
lods
xchg
push
dec
lods
fs
mov
jg
call
adc
scas
cmp
xchg
xchg
out
pop
push
arpl
xor
add
cmp
outsb
popw
fldt
jle,pt
in
ret
xchg
fs
in
fimull
ja
dec
sbb
fistl
sbb
mov
push
adc
adc
mov
push
pop
mov
test
xchg
loop
loopne
dec
mov
sbb
jge
inc
cmpsb
into
xchg
jbe
cmc
out
scas
mov
adc
call
in
loopne
jo
mov
out
pop
dec
push
ljmp
stos
cmp
mov
sarb
push
lret
and
pop
sbb
out
lret
daa
jae
xchg
cmp
stc
mov
orb
xor
js
pop
dec
adc
lock
popl
or
mov
and
mulb
cltd
insl
push
sti
lret
nop
fcmovu
ret
xchg
mov
sbb
insl
addr16
in
inc
xor
or
or
in
dec
in
std
xchg
mov
outsb
pop
imul
sbb
mov
dec
jl
cmp
cwtl
jl
cmp
scas
mov
and
mov
rol
mov
pusha
enter
push
shll
addr16
pop
das
mov
push
xchg
cmc
outsl
mov
leave
in
outsb
dec
ljmp
addr16
cld
mov
add
mov
lods
mov
stc
push
rolb
pop
add
inc
hlt
ret
dec
into
in
cmpsl
daa
mov
adc
lret
inc
cwtl
divb
mov
jge
xchg
adc
pop
and
jbe
jmp
test
mov
test
mov
dec
adc
sub
js
xchg
add
mov
jl
lcall
or
inc
xor
cmp
in
dec
and
add
fildl
push
int3
cmpsl
xor
rcrb
dec
mov
es
inc
mov
mov
fnstenv
mov
fistl
js
pop
scas
or
sbb
mov
mov
sub
loope
aam
add
mov
mov
stos
sub
inc
jmp
mov
mov
sub
jmp
or
iret
xchg
arpl
popa
pop
cmp
ret
fdivs
enter
pop
sub
gs
mov
add
cmc
dec
lret
cmp
and
mov
sub
ficomps
jle
or
out
lea
or
mov
dec
dec
xchg
clc
stos
out
push
mov
sub
pop
pop
mov
xor
jg
imul
call
mov
mov
jle
push
mov
stos
adc
sub
cltd
xchg
mov
mov
pop
sbb
mov
rol
mov
rolb
out
or
pop
xchg
xor
adc
shrb
mov
lods
fidivrs
popf
bnd
int
push
and
outsb
addl
repz
dec
push
repnz
or
xor
sbb
mov
clc
daa
leave
fsubrl
push
stos
cmp
and
lock
xchg
flds
into
inc
stc
sub
mov
test
pushf
bound
inc
mov
jp
lds
pop
mov
dec
test
mov
je
pop
ds
dec
xor
jae
arpl
cmp
cmpl
push
dec
dec
jmp
or
cli
adc
ja
testb
sbb
bnd
andb
ja
test
push
andl
mov
dec
mov
cmp
jae
push
scas
rcrl
or
push
pop
test
sbb
iret
xor
push
loope
dec
and
push
mov
rclb
js
leave
mov
push
dec
syscall
xor
xorl
enter
jnp
mov
pop
push
jae
imul
cmp
adc
mov
pop
xchg
sub
or
mov
sahf
mov
movb
sbb
jne
in
sub
xor
lods
dec
lcall
stos
into
xor
cmpb
fsubl
pop
push
cmp
out
stos
cltd
in
jp
aas
jns
repnz
and
mov
aaa
mov
push
es
mov
nop
lea
in
orl
and
cmp
mov
daa
mov
jg
sbb
sbb
jmp
insl
fcomps
xor
adc
orb
pushf
mov
add
out
sahf
jle
stos
inc
js
addr16
add
pusha
mov
pop
imul
cmp
mov
imul
cli
push
jo
mov
mov
cmp
sub
pop
sbb
xchg
aaa
std
lret
mov
nop
out
addr16
int3
pusha
or
in
fcmovnu
insb
jle
push
dec
push
xor
add
xor
inc
adc
add
jns
mov
adc
or
ret
add
jge
pop
fdivs
xchg
mov
sub
in
out
adc
stos
fs
rclb
mov
test
xchg
push
imul
adc
pop
cmp
ds
pop
mov
lds
sub
jp
xor
push
fisubrl
adc
cmp
inc
jbe
out
cmp
fnstsw
mov
adc
sbb
mov
ficoms
jns
movsb
aam
or
in
mov
pop
stos
nop
pop
and
mov
stos
lock
inc
adc
mov
subl
cld
in
mov
loopne
js
mov
lret
mov
int
je
outsl
daa
sub
xor
lods
fldcw
movsl
ss
ret
mov
dec
jo
sub
aaa
aas
pop
xchg
sub
or
xlat
or
xchg
sar
xor
cmp
repz
xchg
dec
mov
sbb
adc
ss
ds
sub
ret
cmp
aad
mov
lock
aam
push
test
pushl
lret
dec
add
sti
and
mov
pmaxub
daa
jbe
xorb
mov
lea
shll
mov
shl
jnp
in
push
lods
nop
adc
mov
lods
sub
in
out
jmp
adc
je
addl
jb
mov
aas
in
xor
pop
adc
call
jo
or
dec
in
je
rolb
or
in
mov
fdivrs
cs
sbb
es
push
push
xchg
cmpsl
pop
xchg
subb
ret
sarl
push
cld
mov
es
out
mov
dec
jbe
stos
mov
call
clc
mov
mov
sub
xchg
sub
imul
scas
sbb
mov
pushl
mov
cmp
imul
push
jo
xchg
mov
mov
dec
add
jmp
push
loop
mov
jmp
in
pop
dec
scas
sub
push
subl
ja
outsl
push
push
sub
sbb
mov
mov
stos
insb
cmc
idivl
dec
nop
dec
pop
cmp
mov
rclb
into
out
push
cltd
add
mov
das
xchg
mov
pop
pop
mov
or
jmp
dec
cmc
clc
inc
test
inc
sub
add
mov
test
mov
mov
xor
nop
inc
insb
das
imull
sub
daa
icebp
ljmp
push
cwtl
xchg
pop
aaa
sbb
mov
into
incl
pop
cmp
cmp
add
xchg
roll
sbb
cmp
ljmp
sub
xchg
stos
leave
jecxz
ljmp
mov
insb
xchg
pushf
xchg
loope
add
sbb
mov
jg
fmulp
jne
xor
in
xchg
movsl
cmp
aaa
pop
cmp
in
lret
hlt
ds
jecxz
xlat
mov
pop
je
jae
sbb
jb
dec
mov
or
ss
and
int
adc
stc
ljmpw
jecxz
xor
xchg
dec
roll
mov
ss
xchg
dec
sbb
in
arpl
cld
dec
imul
mov
push
adc
jmp
scas
das
pushl
xor
sub
mov
rolb
out
lods
xchg
rcrl
gs
cmc
int
imul
sbb
lcall
dec
push
pop
mov
xchg
out
das
sbb
pop
iret
mov
std
and
addr16
loop
rcrl
jmp
cmp
mov
mov
jo
mov
sub
sub
sub
lds
adc
push
mov
insl
mov
jle
pop
sub
add
sub
scas
jle
mov
jmp
aaa
loope
mov
cmpb
aaa
cmp
mov
lret
cltd
or
push
sahf
bsr
mov
sbb
adc
mov
pop
loop
stos
int
lds
push
lea
pop
xchg
test
es
cs
fbstp
fdiv
or
cmp
inc
in
xchg
xor
insb
stc
daa
add
sub
pop
or
xor
lods
lret
lods
loopne
mov
subl
cmc
mov
divl
xor
mov
dec
sub
pop
add
inc
scas
cmp
cmpl
popa
push
push
pop
pusha
cmc
daa
mov
dec
sub
das
xchg
in
emms
mov
add
cs
dec
xchg
pop
flds
insl
sti
sbb
mov
push
pop
mov
mov
lahf
into
addr16
push
cld
adc
arpl
adc
mov
sysenter
add
mov
ret
faddl
je
loope
mov
pushf
jmp
dec
pusha
or
xor
push
or
orl
sbb
sub
or
xor
enter
sub
xchg
fisubrl
shl
outsl
ja
mov
xchg
dec
xchg
clc
jp
call
add
cmpl
push
data16
test
cmp
mov
ret
push
and
cmpsb
popf
push
ds
jmp
mov
jb
negb
xor
adc
jmp
jge
int3
sub
shlb
jmp
aas
sbb
lea
or
data16
mov
mov
arpl
cwtl
mov
ss
test
and
adc
arpl
sbb
in
push
jno
cmc
dec
mov
cli
enter
orl
jo
into
mov
xchg
pop
adc
inc
shl
pop
push
xchg
lcall
int
mov
sti
push
fdivs
adc
jno
mov
aam
push
sbb
in
push
mov
aas
sbb
les
lcall
xchg
cmp
jl
addr16
aad
sti
xor
mov
shll
cmp
xor
ret
sub
rcrl
push
push
cmc
rolb
fs
mov
mov
daa
xlat
cld
fs
sub
adc
mov
dec
add
sahf
adc
ljmp
dec
jb
jo
insl
sbb
and
je
xor
sub
out
mov
mov
adc
xor
mov
mov
and
scas
out
mov
addr16
mov
mov
jno
mov
mul
movsb
xor
push
cmpsl
push
enter
cmp
out
roll
jbe
sbbl
push
rolb
fcmovnu
or
xchg
xchg
into
mov
pop
test
ja
test
icebp
mov
inc
in
sbb
insb
inc
xchg
inc
inc
mov
aas
ret
adc
aas
push
push
mov
cmp
push
mov
mov
call
lcall
popl
push
jb
add
xor
hlt
in
pop
lock
or
lock
imul
mov
add
push
sub
xchg
stc
mov
sub
pop
je
ljmp
scas
hlt
pop
outsl
add
movsl
adc
lret
pop
fstpt
popf
cmp
repnz
fnstcw
call
jl
sub
rcl
xchg
mov
pop
stos
mov
adc
add
inc
inc
icebp
pop
sub
xor
or
inc
decl
add
js
mov
outsb
arpl
popf
shll
cmp
inc
xchg
jno
inc
negl
mov
cmpsl
xor
cmc
cwtl
icebp
out
mov
and
inc
loope
ret
mov
ja
jle
push
or
in
cli
lods
xor
lods
xchg
or
movsl
inc
arpl
insb
aas
inc
inc
popa
std
jl
js
xor
dec
mov
icebp
jnp
in
cmp
enter
popf
pop
push
jae
and
pop
cs
cli
xchg
adc
adc
adcl
insb
aaa
and
rorb
outsl
fildl
sarl
jae
or
sar
ds
aam
push
enter
inc
cmp
lds
cmp
pusha
and
adc
jl
mov
aas
push
sub
mov
in
jl
leave
addl
loop
jle
imul
or
push
fstl
inc
div
iret
push
subb
rcrl
aaa
das
in
cmp
cmp
inc
outsb
scas
cmp
xchg
cmpsl
pop
or
push
inc
lret
add
adc
mov
scas
ds
stc
add
pop
outsb
out
sahf
in
test
sub
movsb
outsl
xchg
or
xor
cmp
dec
jmp
shll
jle
push
sub
leave
mov
mov
stc
outsb
stos
arpl
jo
jbe
sbb
bound
lock
imul
xchg
adc
aad
push
xor
ss
mov
push
daa
dec
pop
pop
xchg
mov
aam
testl
mov
fmulp
incl
ss
and
mov
inc
loopne
mov
int
das
cli
mov
fwait
cmpsl
ret
addr16
push
std
mov
dec
sub
scas
insl
fldt
mov
xchg
ljmp
mov
nop
dec
shlb
and
xchg
mov
push
test
jmp
jo
or
inc
mov
cmp
cmp
adcb
mov
cmc
dec
mov
sbb
cld
outsl
ds
divb
call
insb
xlat
dec
cs
mov
inc
enter
fbld
push
sub
xchg
mov
lods
popa
or
cmp
adc
popa
xor
jmp
push
and
mov
inc
pop
outsb
js
sub
push
jl
in
lcall
pop
ds
cmp
mov
enter
cs
cmp
orb
jmp
mov
leave
adc
or
and
jp
xor
in
fnsave
fsubs
mov
adc
out
imul
scas
xchg
adc
jp
add
movsl
xchg
mov
cwtl
adc
jmp
cmpsb
pop
or
adc
fisubs
xchg
jge
cmp
xchg
mov
cli
daa
or
mov
pop
cmpl
add
mov
jb
pushf
pop
loop
and
adc
pop
inc
insl
push
cmp
mov
adc
adc
insb
lock
icebp
js
out
sbb
sub
mov
inc
out
dec
repnz
add
jg
call
enter
js
dec
sahf
jnp
xor
sub
jg
adc
mov
and
xchg
ficoml
nop
in
jg
push
out
out
ja
imul
sarl
inc
aad
pop
ds
idivb
icebp
pop
test
xlat
xchg
inc
jecxz
push
mov
stos
addr16
push
inc
bound
jmp
pop
xor
push
cmp
adc
imul
into
dec
or
add
arpl
fwait
ds
push
pushl
mov
dec
sbb
jl
les
mov
and
cmp
adc
cs
adc
push
and
enter
mov
in
in
sbb
and
mov
adc
icebp
fdivrs
mov
nop
adc
inc
pop
jmp
push
ljmp
dec
mov
and
test
pop
and
jbe
es
fisubrl
cmp
shll
lock
stc
sub
pop
mov
ret
cmc
scas
aaa
jmp
cmp
push
adc
inc
xor
icebp
mov
sub
add
repz
scas
fwait
inc
pop
adc
xchg
jbe
xor
or
into
mov
inc
in
insb
sub
cli
gs
xchg
push
mov
lret
ds
pop
pusha
mov
loop
mov
mov
in
jg
cli
lea
xchg
adc
leave
in
pop
xchg
popa
jecxz
ss
dec
add
cmp
sub
pusha
mov
pop
jae
data16
pushf
or
push
xlat
adc
lahf
push
cli
fidivs
sub
mov
jge
mov
xchg
rolb
js
pop
mov
inc
repnz
test
aaa
add
mov
movsl
ss
pop
push
test
sub
stos
nop
mov
aaa
adc
lea
sub
call
inc
add
push
loopne
jo
test
cmp
scas
inc
jmp
mov
fsubrs
in
jo
mov
jp
jecxz
mov
adc
pop
mov
and
rolb
mov
pop
sub
adc
std
orl
pop
or
xor
mov
rcll
stos
and
and
ss
ds
cmp
fwait
dec
cmpsb
cmp
test
in
mov
push
cmp
mov
cmp
pushf
jle
and
jmp
gs
mov
jno
fnsave
or
xchg
je
pushf
mov
xchg
cmp
orb
test
stos
movsb
xor
jno
xor
xchg
enter
addl
mov
cltd
das
insb
cmpsl
rolb
stos
cmp
bound
cmp
push
out
pop
jbe
pop
in
mov
fistpl
sti
pushf
jp
stos
idivl
lds
adc
push
pushl
sbb
cltd
jp
xchg
or
int
out
xor
int3
testl
inc
xor
pop
test
jmp
aam
stc
in
jmp
mov
fdivrs
cmp
sub
insb
sbb
imul
addr16
xor
cmp
adc
hlt
xorps
xchg
fdivrs
pop
mov
pop
sbb
jmp
mov
add
pop
out
out
push
fs
gs
mov
hlt
cmp
adc
mov
cmp
pop
adc
add
icebp
in
mov
sub
xchg
pop
sub
in
dec
test
shll
or
push
cmp
xchg
mov
sub
sub
push
testb
sarl
sbb
mov
cmp
jb
cmpsl
pushf
pop
testb
cmp
jbe
nop
add
int
or
jg
xchg
sti
scas
inc
popf
sub
sub
test
mov
mov
push
push
ret
push
shlb
mov
cwtl
jmp
cmp
sbb
fcoml
cmp
mov
out
inc
cmp
xchg
test
mov
xor
cmp
dec
sub
mov
and
nop
jle
cmp
call
cmp
or
inc
clc
js
xchg
mov
jmp
das
iret
sbb
je
mov
cmp
cmp
adcl
fdivl
pop
cs
xchg
shll
scas
testl
imul
lods
jmp
add
cmp
scas
ss
pop
mov
push
outsb
cmp
out
mov
adc
xor
js
cld
filds
lods
aad
in
out
pop
daa
inc
pop
add
imul
mov
inc
mov
pop
shl
adc
sub
int3
xchg
mov
add
pop
rcl
aam
xchg
dec
push
and
push
pop
sub
mov
inc
sub
and
bound
jns
out
sub
pop
cmp
adc
pop
hlt
dec
pop
jns
xchg
add
out
or
cmpsb
xlat
xor
lock
cmpsl
xchg
outsb
fwait
mov
add
bound
sub
or
stos
fwait
cmpl
sub
sub
add
fs
testb
sub
push
sarb
fadds
int3
cmp
fiaddl
cmp
cmp
ss
lock
mov
add
test
aas
xchg
clc
adc
enter
pop
bound
mov
cmp
xor
test
cmp
xchg
movswl
stos
pop
sbb
shlb
push
xchg
adc
cmp
add
gs
xchg
sbb
iret
cmp
adc
rorb
lahf
cs
inc
icebp
xor
int3
insl
daa
movsb
aaa
outsb
or
xchg
out
or
xor
enter
cmp
pushf
sbb
cmp
add
mov
xchg
daa
bound
cld
sbb
out
dec
test
das
xchg
add
add
roll
mov
sub
mov
inc
push
push
lods
sahf
bound
js
std
int3
dec
in
jnp
lods
jg
int
outsb
push
test
cmp
jmp
aaa
sarb
inc
push
loope
popf
shl
cmp
ret
stc
mov
pop
push
cmp
cmp
push
aas
call
lret
xor
inc
outsl
enter
pop
ret
sub
mov
test
test
inc
imul
out
outsb
je
cmp
push
push
stos
adc
inc
call
stos
lea
jg
cmp
jnp
in
out
ret
sub
lret
fimuls
add
cmp
aas
popf
mov
sbb
mov
xchg
push
cmp
add
mov
jns
out
sahf
aad
stc
ds
cmp
addr16
mov
aam
dec
cmp
xor
jg
inc
into
lods
jne
dec
call
cmp
iret
fistpl
roll
cmp
cmp
cmp
xor
cmp
adc
mov
ficoml
cmp
pop
mov
sub
cmc
fisubrl
jl
mov
lea
dec
jge
inc
jbe
dec
and
inc
and
int3
aad
int
jae,pn
daa
jl
mov
scas
adc
icebp
lcall
cmp
movsl
or
insb
xor
std
xor
cli
nop
daa
push
loop
or
imul
lods
dec
fdivr
fimuls
shrl
out
mov
cmp
push
jne
insb
roll
and
xchg
hlt
pop
jb
mov
cmp
in
test
xchg
cmpsl
cmp
cmc
mov
add
cmp
mov
popf
or
cld
stos
int
lods
pop
dec
mov
aas
sbb
mov
aam
in
outsb
cs
fstl
sub
mov
cmp
mov
sbb
fisubl
cs
leave
fcoml
je
xchg
jmp
sub
lret
stos
cmp
jns
push
mov
cmp
out
adc
mov
add
fcomp
inc
adc
cmp
stc
mov
ljmp
xchg
sbb
fwait
or
cmp
ss
fidivrs
pop
loop
jbe
mov
fs
mov
dec
cwtl
repnz
jnp
jecxz
out
and
and
push
incl
aas
cmpsl
and
test
push
dec
cmp
movsb
popa
mov
sub
mov
sub
cld
hlt
jp
sbb
inc
out
push
mov
jns
cmp
cmp
stos
cmp
in
aaa
int
xor
lds
xor
mov
push
xchg
loop
cli
inc
in
pop
div
push
cmp
cmp
in
mov
jmp
lods
int3
popa
jmp
xor
lret
test
mov
les
add
sub
cmp
add
mov
cmp
fdivrs
pop
fistpll
sub
ss
cmpsl
push
mov
negl
push
xchg
adc
lods
jns
mov
scas
dec
fistpll
ficompl
ret
inc
mov
xchg
cs
insl
pop
jne
js
daa
fbstp
adc
lret
mov
pop
lea
repnz
adc
sub
cmp
or
jg
jne
adc
mov
iret
or
cmp
ret
lock
mov
mov
mov
out
jno
testl
jbe
in
jae
dec
fcomps
lods
mov
sbb
add
cmp
dec
sbb
movsb
stc
inc
cmp
jnp
hlt
mov
mov
mov
cmp
out
dec
test
mov
push
outsb
xor
outsl
clc
push
lods
jb
push
pop
out
lods
sbb
lcall
imul
inc
scas
out
cmp
ret
mov
pop
sbb
imul
xor
push
mov
push
jbe
pop
movsb
cmp
fldt
inc
and
ss
hlt
loope
in
cmp
les
push
lods
adc
cmp
cmp
mov
xor
cmp
add
cmp
icebp
mov
cs
sbb
sub
pop
fs
lods
scas
shlb
shrl
cmp
loop
or
mov
add
popf
adc
lret
enter
mov
lcall
inc
mov
dec
cmp
mov
sub
sub
mov
je
cmp
mov
inc
cmp
jb
jns
sbb
fildll
lods
dec
mov
xlat
and
add
and
cmp
mov
mov
jbe
inc
stos
xor
adc
int3
push
repz
xorl
popa
fistl
and
mov
nop
push
dec
fucom
push
mov
loopne
jbe
maskmovq
in
into
sbb
out
jb,pn
cmpsb
popa
clc
xchg
xchg
sbb
insb
es
or
movsb
lods
scas
subl
mov
out
xlat
popa
sub
call
cmp
xchg
or
ret
lea
mov
das
and
mov
mov
mov
adc
or
sub
addb
pop
xchg
sub
inc
or
adcb
jp
or
ss
fistl
scas
adc
mov
lcall
les
adc
scas
jmp
lret
aas
icebp
pop
ss
or
cmp
stos
and
lret
cs
pop
aam
int
ja
out
mov
stos
int
jge
aad
leave
adcl
pop
push
adc
pop
xchg
dec
inc
movsb
inc
mov
gs
dec
test
xor
adc
cli
mov
ret
jl
inc
dec
jl
xor
jge
insl
fwait
adc
mov
pushf
lret
outsl
ljmp
jnp
sbb
adc
ret
out
lods
jae
decl
dec
xchg
dec
xor
dec
repz
jo
cmp
push
imul
xor
jmp
rorb
mov
and
andl
sub
scas
leave
dec
sbb
lahf
push
sub
mov
xor
adcb
dec
scas
nop
cmpsl
xor
push
sub
imul
hlt
add
jbe
in
sbb
sti
imul
jmp
mov
out
aad
inc
adc
jg
mov
sbb
mov
jge
inc
and
in
pop
jo
lret
in
out
das
mov
mov
push
clc
js
mov
enter
adc
xlat
out
ljmp
aam
add
ret
inc
and
outsb
call
and
in
add
cmp
mov
xor
loopne
mov
sbb
pop
loopne
hlt
push
js
push
fwait
dec
das
mov
enter
xor
or
and
xchg
jmp
adc
jae
xor
push
mov
jmp
dec
push
lods
ja
add
pop
fwait
or
adc
loope
mov
dec
pop
lods
and
jge
cmpsl
mov
mov
repz
mov
jns
jno
push
test
adc
je
xchg
mov
stos
add
mov
cmp
loope
sbb
lock
cmp
aam
push
xchg
ss
sub
mov
cmp
or
dec
and
es
xorb
popa
pop
pop
add
add
mov
add
cltd
cmp
mov
jmp
and
stc
fistl
js
xchg
adc
and
rcl
and
mov
push
push
or
xlat
sbb
or
inc
mov
fildl
ja
negl
fucom
fs
popa
mov
jne
std
mov
mov
pop
ret
mov
shr
pop
scas
scas
ret
add
ss
mov
clc
pushf
str
hlt
mov
cmpl
test
jno
ljmp
or
out
push
mov
dec
push
test
outsb
push
xor
pop
adc
add
sub
adc
int3
ret
add
insl
mov
add
repnz
mov
or
lock
imul
mov
xchg
int
sahf
sbb
lret
mov
cli
adc
lods
sti
inc
and
add
push
ss
scas
cmp
pop
lcall
popa
test
mov
scas
xchg
outsb
mov
insl
adcb
test
jge
lea
sub
sti
mov
cwtl
pop
push
ret
jmp
hlt
xor
mov
insl
adc
mov
mov
cmp
scas
ret
rclb
jp
adc
and
sub
fs
lods
adc
xchg
xchg
cs
adc
pop
out
jnp
adc
push
insl
ret
xchg
lcall
mov
loopne
lods
andb
sbb
fcoml
pop
pop
mov
or
xchg
mov
push
mov
fsubl
jb
push
and
mov
xchg
loop
mov
push
enter
mov
dec
out
outsl
mov
sub
cli
xchg
jbe
and
add
aas
jo
push
and
push
add
ss
mov
adc
ja
fcomi
into
pop
pop
loopne
repnz
movsl
ret
repnz
mov
jae
dec
lods
fstpt
and
mov
out
cmp
orl
mov
clc
insl
add
push
sbb
push
dec
jle
push
addl
shl
ja
cmp
cmp
shll
lods
mov
add
dec
test
inc
sbb
inc
lret
pusha
sub
sbb
jecxz
sub
push
xor
lret
lret
popf
inc
pop
and
sub
sub
pop
imul
xchg
jmp
xchg
jl
mov
cmp
xor
jle
xor
dec
aad
or
adc
add
xor
jb
loope
loop
adc
or
push
or
ss
jecxz
or
mov
push
enter
cs
call
add
add
adc
push
into
fwait
jbe
dec
sbb
aad
aaa
adc
enter
dec
popf
xchg
inc
mov
jno
sub
xchg
std
or
xchg
adc
jg
ss
pop
xchg
cmp
sahf
and
in
cmp
mov
andl
adc
nop
mov
xchg
shll
add
push
aad
mov
pop
mov
pop
inc
scas
xor
xchg
pop
push
pop
or
decl
xor
xchg
mov
push
jg
push
xor
dec
ljmp
ja
ljmp
mov
mov
pop
cld
adc
into
test
mov
xchg
lahf
js
cmp
fisubs
pop
jmp
inc
loop
jle
repnz
dec
lods
cwtl
mov
mov
out
jno
xchg
jmp
jmp
bound
repz
xchg
jl
in
xchg
cmpsb
out
sbb
mov
enter
pop
mov
or
pop
jmp
fs
mov
shl
push
jae
jle
sti
mov
add
icebp
adc
scas
cli
adc
stos
xor
in
gs
insb
push
lods
outsl
push
ja
jg
xor
dec
jle
inc
fimull
cmpsl
pop
inc
push
fmul
push
negb
or
add
xor
fstpl
sub
out
les
adc
ds
cmc
mov
adc
sarb
jmp
lea
adc
inc
dec
mov
jg
xchg
jl
sub
inc
das
sti
mov
dec
jne
xchg
add
js
mov
ja
dec
and
aaa
jmp
cmp
lds
cmp
andb
inc
pop
dec
inc
push
lret
insb
fs
in
lods
sub
xor
nop
pop
cmp
dec
and
lcall
clc
mov
out
push
in
addl
stos
sbb
jnp
into
cmp
test
insl
or
movsl
mov
cmp
ficomps
add
sub
xchg
cmp
mov
pop
jno
mov
mov
pop
cmp
xchg
dec
aas
cmp
xor
data16
mov
adc
outsb
sub
fwait
test
mov
inc
cmp
cmp
stos
cmp
iret
out
xorb
stos
out
test
sub
lret
pop
xchg
in
mov
or
and
out
cmpsl
pop
dec
pop
jne
in
stos
xchg
mov
jp
sub
out
iret
jo
pop
or
cmp
push
dec
lret
cmp
repz
sub
cmp
xor
es
lods
adc
sbb
xor
in
outsb
xchg
enter
adc
xchg
cmp
insl
cs
xor
xchg
dec
ficompl
jge
cmp
stos
xor
mov
adc
inc
xchg
xor
loopne
pop
ljmp
int
cmp
inc
aad
push
loope
sbb
stc
pop
pop
das
and
or
xchg
cmp
loope
iret
cmp
cmpsl
cmp
push
adc
jnp
pop
cmp
jns
xor
outsl
sarl
or
movsb
lods
xchg
xchg
sub
cmc
fisubrs
test
push
add
popa
aad
faddl
dec
jnp
lods
mov
xchg
out
enter
lods
cmpsb
sub
dec
mov
pop
xor
add
cmp
hlt
mov
cmp
or
test
or
jb
cmp
xor
sarb
popa
pop
push
lahf
dec
xlat
movsb
icebp
push
lods
cmp
pop
sub
mov
int3
jno
push
jg,pn
movsb
std
sub
xor
jo
adc
pop
mov
notl
clc
mov
insl
popa
fistpll
popf
pop
call
push
sub
dec
cwtl
insl
loop
add
cmp
stos
mov
cmp
mov
sub
and
stos
xor
repz
fsubrs
or
cmp
imul
jae
aam
rorl
mov
fucomi
jmp
push
aaa
cmp
cmpsl
and
and
negb
cmp
out
popl
xchg
sub
pushf
adc
xchg
ret
sarl
pop
push
sbb
fs
cwtl
cmp
insl
scas
add
pop
sbb
enter
mov
outsl
push
imul
lods
sub
push
mov
mov
fstpl
fnop
mov
fs
inc
daa
or
sarb
call
or
xorb
cmp
mov
push
cmp
icebp
sbb
cmp
jmp
add
cmp
pop
mov
aaa
sub
xor
stos
movsb
mov
test
lret
inc
es
cmp
roll
dec
sub
sbb
jp
scas
sbb
cmp
xchg
sub
popa
lea
xchg
sbb
cmp
pop
pop
or
aad
xor
out
dec
xchg
ret
je
push
and
movsl
ficoms
test
jnp
cmp
les
idivl
cmp
adc
loop
and
jo
dec
push
repnz
jle
sub
cmpsb
adcb
xor
pop
add
fistpll
mov
movsb
adc
sbb
rorb
out
cmp
cld
int3
popa
fisubrs
jnp
lret
mov
icebp
mov
cmp
ret
cmp
fnstsw
sub
fisubl
ljmp
cmp
dec
int
inc
pop
sbb
dec
cmp
inc
out
popa
push
adc
sub
cmp
leave
inc
adc
enter
test
mov
mov
cmp
add
faddp
jl
jmp
pop
stos
int3
mov
mov
and
or
cltd
xor
sub
movsb
aas
lret
push
jo
scas
sbb
ljmp
xor
out
cli
mov
cmpsl
mov
sbbb
repz
ljmp
pop
in
cmp
add
adc
notb
inc
les
ret
repz
cmp
dec
leave
cmp
pop
adc
xlat
pop
inc
and
jo
cmp
out
inc
sub
sbb
addr16
popf
repz
adc
std
loopne
dec
xlat
pop
js
cmp
cmp
pusha
xchg
xchg
cmp
push
divl
push
mov
insl
xor
mov
mov
cmpsb
mov
aam
fs
loop,pn
test
add
mov
xor
stc
popa
dec
loop
and
xor
lahf
daa
out
or
jnp
aaa
cmp
fldenv
pop
cmp
sets
xchg
jnp
lea
mov
lods
mov
repnz
push
adc
jmp
pushf
mov
add
lods
das
xor
pop
jle
pop
lods
fwait
add
sub
or
add
pop
sbb
push
stos
ds
test
popa
aam
jno
clc
stos
and
sbb
push
cmp
cs
scas
jp
cmp
jne
repz
add
mov
cmp
addr16
ljmp
sub
jp
js
jp
dec
cmp
stos
insl
clc
loopne
cmp
in
dec
mov
sarb
inc
lret
lock
in
and
cmp
cmp
and
dec
pop
addr16
xor
or
xor
cmp
mov
jne
xchg
mov
lahf
push
test
sbb
outsl
or
lcall
sarb
mov
add
sub
out
xor
mov
ret
and
cmp
fwait
inc
and
in
inc
cmp
sahf
adcb
mov
mov
mov
push
sub
out
test
sarl
int3
pop
adc
adc
mov
cmpsl
cld
sbb
mov
sbb
mov
jecxz
adc
es
shlb
jmp
cld
popf
mov
cmp
push
repz
sbb
and
cmp
adc
cmp
cmp
filds
fcmovnbe
loopne
push
stos
and
call
cmp
into
mov
das
incl
adc
movsb
in
cs
hlt
iret
call
popf
imul
jecxz
dec
iret
int3
xor
xchg
bound
sub
inc
lea
sub
ret
testb
and
out
sar
loopne
jp
scas
leave
imul
dec
out
push
inc
pop
pop
xrelease
pop
in
mov
enter
sub
sub
in
dec
cmpl
sarb
jp
cmp
xlat
test
fwait
jo
jg
sahf
fldcw
movl
xchg
js
mov
in
jns
lret
insl
sarb
push
decb
xor
or
cmp
and
dec
loop
leave
add
inc
cmp
xchg
idiv
les
dec
mov
bound
sbb
dec
test
xor
cmpsl
cmp
jns
xchg
test
dec
add
mov
cmp
call
jbe
jb
cmp
push
dec
mov
and
imul
fdivrl
and
mov
bound
mov
rorl
or
push
xchg
cmp
pusha
mov
stc
push
and
mov
sub
mov
inc
imul
pop
dec
popa
push
loopne
pop
in
cmp
shlb
jnp
dec
loopne
push
repnz
add
mov
ficomps
dec
loope
sahf
into
adc
int3
stos
ss
mov
dec
ret
cmp
cmpsb
add
les
js
mov
xor
je
pop
mov
call
push
repnz
shll
sbb
fcomp
cwtl
pop
insl
fcoml
push
dec
shr
jp
testb
sub
mov
cmp
jp
fdivrs
cmpsl
sub
cmp
jl
aas
dec
pop
testb
jg
repz
testb
jl
imul
pop
loopne
and
push
sub
sbb
jge
lods
adc
sti
push
jle
call
jno
cmp
xor
jbe
das
jl
repnz
ja
xchg
xor
popa
pop
ljmp
test
iret
scas
mov
lret
daa
pop
mov
pop
cmc
fdivl
js
inc
int
daa
lods
ret
movsb
hlt
lahf
insb
cmp
push
or
jp
addb
jno
mov
xchg
idivl
push
jge
mov
ds
insb
data16
mov
mov
inc
cmp
cmp
inc
nop
arpl
lahf
or
stos
pop
push
jo
aas
es
lods
sbb
arpl
jle
xlat
push
cmp
jne
cmp
jmp
and
es
jno,pn
out
sub
xchg
sbb
mov
dec
testb
stos
mov
in
out
lods
mov
movsb
out
push
test
insl
xchg
icebp
or
insb
dec
xchg
ljmp
or
cwtl
adcl
mov
adcb
add
cld
mov
rclb
jnp
cltd
jb
lods
cld
fdivs
push
mov
adcb
mov
movsl
sub
loop
cmp
inc
push
cmp
inc
sbb
fs
mov
adc
mov
push
int3
xor
andl
mov
dec
ret
push
insb
imul
sub
ljmp
mov
mov
mov
sub
stos
rcll
and
sbb
push
fidivrl
fisttpl
add
push
gs
add
add
js
pop
mov
icebp
lock
xchg
xchg
sub
data16
out
push
dec
mov
aad
jge,pt
and
push
xor
roll
pop
inc
adc
mov
dec
jl
stc
cmpl
xor
or
fsubrs
mov
add
in
dec
xchg
mov
popf
push
loop
outsb
inc
push
adc
adc
insb
cmpsl
mov
mov
mov
mov
mov
fnstenv
bnd
jae
repz
sub
ss
add
dec
scas
cmp
push
sbb
mov
lret
out
out
ljmp
inc
cmp
or
pop
in
jge
imul
mov
mov
mov
jecxz
sub
push
and
sub
push
jge
call
test
int3
notl
ja
outsl
stos
adc
icebp
xor
mov
and
mov
cs
stos
in
cld
lods
imul
scas
es
mov
imul
and
addr16
sub
addr16
add
mov
mov
ljmp
test
lcall
sbb
in
std
cmpsb
xor
je
adc
aad
sub
xchg
mov
xchg
ljmp
inc
mov
cmpl
push
rorl
pop
add
aam
pop
mov
int3
and
std
insb
mov
rcl
iret
push
pop
les
push
jg
sub
loope
aam
jnp
into
cmpsl
xchg
or
xor
cmc
mov
lahf
or
adc
jl
into
sbbl
push
pop
sub
push
cmp
inc
cmpsl
lods
int
or
or
mov
icebp
ss
mov
fidivl
jge
fbld
jb
icebp
push
popa
hlt
std
ret
and
jmp
xchg
add
dec
xchg
adc
mov
aas
adc
shlb
push
mov
stos
fbld
mov
pop
xorl
and
int
cli
scas
push
adc
cmc
mov
sbb
icebp
pcmpeqd
das
push
push
in
ret
jmp
dec
or
lods
lret
mov
push
movsl
push
pop
les
dec
adc
cmpsb
in
mov
sbb
aad
xlat
sub
xor
and
insb
test
in
pop
dec
and
loopne
jo
add
ficoms
sub
cmp
jo,pn
out
mov
jmp
sub
mov
scas
jmp
scas
shl
stos
jb
jmp
leave
mov
or
xchg
mov
cmp
les
cmpb
mov
out
mov
mov
insb
push
insl
xchg
ds
adc
mov
add
aaa
sub
repz
inc
dec
mov
push
ja
pop
sub
jle
pop
sbb
adc
pusha
out
sbb
out
xchg
sub
or
cmc
ficompl
imul
stos
in
clc
das
cmp
mov
jo
push
jge
and
mov
or
mov
orl
adc
dec
imul
andl
js
fs
add
stc
xor
in
aaa
out
sub
lahf
pop
aas
push
pusha
out
addr16
and
add
sbb
jmp
sbb
sub
sahf
xor
repz
sahf
cmp
mov
mov
lret
jge
hlt
repnz
lcall
jp
ljmp
mov
out
repz
je,pt
gs
stos
fidivs
mov
cmp
out
mov
xchg
insb
hlt
lea
push
and
cli
fistpll
adc
popa
mov
push
test
ret
push
jo
insb
xor
inc
pop
pop
pusha
std
xor
insb
xchg
inc
ds
sbb
add
cmc
add
bound
sbb
fcomip
pop
ljmp
pushf
inc
loop
xchg
adc
lahf
cmp
and
push
push
insl
adc
push
fldl
sub
mov
insb
lret
lods
or
mov
in
lods
insl
cld
popa
xchg
inc
movsb
rcr
js
mov
scas
imul
mov
movsl
sub
inc
dec
xlat
mov
movsl
stos
clc
sbb
lcall
movsl
outsb
jl
push
mov
in
ret
dec
fs
pop
lret
sbb
aaa
adc
or
sahf
imul
sub
lods
je
adc
sbb
enter
pusha
roll
subl
jge
leave
or
push
mov
mov
adc
add
jg
xchg
mov
cmpsb
inc
xchg
repz
and
xor
in
sub
xchg
cld
push
cmp
pop
cmpsb
shll
jo
jl
jno
aas
test
jp
movsl
movb
mov
inc
adc
jmp
cli
aas
pop
or
mov
and
loope
testl
mov
add
jb
int
mov
xchg
in
or
mov
mov
adc
and
adc
stos
dec
lahf
push
idivl
mov
fimull
lock
sub
xor
aaa
lret
dec
lods
das
jle
insl
bnd
inc
fwait
push
int3
jb
ret
push
leave
js
enter
mov
adcl
adc
das
loop,pn
xchg
inc
outsb
sub
jo
sub
gs
cli
rolb
daa
pop
je
xor
add
xor
in
or
jnp
std
adc
mov
orl
sbb
jg
inc
xchg
cmp
int3
test
popa
jbe
xor
rorl
jmp
dec
jno
sbb
sub
push
out
js
push
test
or
repz
mov
leave
sub
jne
js
pop
hlt
pop
or
mov
test
pop
sbb
lret
jp
int3
outsl
jmp
test
mov
in
xor
ss
adc
insb
pop
jl
sub
lret
lcall
mov
pop
call
cmpsl
daa
jno
in
xchg
sbb
xor
add
stos
fmuls
jle
adc
adc
adc
icebp
xchg
inc
dec
movsb
stos
decl
inc
sub
movsbl
icebp
mov
outsl
ss
sbb
mov
xor
sub
mov
adc
push
daa
repz
lock
ja
in
das
dec
iret
aas
scas
test
add
sub
mov
jb
jl
lods
lea
andl
xchg
imul
ja
xor
jno
jne
push
fisubrs
jp
movsl
xchg
cmpsl
sbb
je
fwait
sub
outsb
mov
push
push
xchg
xor
scas
lea
add
xchg
fsts
pop
cmp
fsubrs
jecxz
repz
dec
mov
pop
xchg
and
xchg
aam
test
in
xchg
clc
push
stos
jno
into
scas
aad
xor
push
sbb
insl
test
dec
xchg
jl
xor
insb
ret
movsl
shrl
shll
lret
cli
push
stc
mov
mov
ret
xor
mov
hlt
sub
xchg
pop
jns
lcall
lods
or
orl
arpl
push
iret
sbb
and
sub
jle
inc
repnz
enter
pop
inc
popf
xor
mov
ljmp
push
adc
adc
cmp
jmp
cli
xor
jbe
mov
mov
movsl
ss
stos
in
scas
adc
aam
lret
nop
cmpsl
jbe
mov
test
and
test
ljmp
or
add
inc
cmp
push
aad
roll
js
data16
cmc
or
pop
mov
push
lret
icebp
addr16
leave
mov
imul
mov
enter
jb
jno
dec
fmull
mov
ljmp
push
xlat
jnp
xchg
jg
pusha
xchg
mov
jp
fstpt
mov
xchg
fistps
pop
sub
adc
jp
pop
mov
hlt
adc
push
clc
popa
sub
aaa
dec
test
lcall
pop
jg
out
je
mov
or
mov
imul
sbb
aam
mov
adc
test
xchg
mov
mov
pop
mov
cltd
insl
mov
lea
mov
decb
mov
sbb
ljmp
sti
inc
ja
mov
xorl
daa
fdivs
xor
adc
dec
aaa
add
ds
jmp
pop
push
negl
and
xchg
pop
fmulp
inc
fildl
sbb
adc
push
adc
xchg
xchg
sbb
pop
cltd
push
adc
decb
sub
fdivl
jb
test
sbb
aas
loope
lock
fsts
adc
imul
lcall
cmp
cmp
pop
adc
clc
cmp
orb
imull
loopne
cltd
sub
pop
int3
push
cmp
clc
mov
lret
cmp
or
int3
fwait
repnz
sbb
out
sub
sub
imul
cmp
push
or
add
cmp
pop
mov
mov
loopne
dec
data16
fldcw
aaa
data16
and
jp
sbb
xor
sbb
aaa
aam
inc
popf
lea
add
cmpsb
insb
xchg
xchg
repnz
mov
or
and
sbb
movsb
jnp
adc
add
cmp
lret
stos
cld
sub
xlat
ja
fistpl
test
fs
test
dec
adc
cmpsl
or
mov
iret
mov
sub
loopne
rclb
cmp
bound
je
mov
add
lods
xor
mov
push
xchg
mov
loope
jne
fwait
inc
cs
push
xor
cmp
sbb
popa
aas
dec
sub
xor
pop
addb
sbb
in
lahf
dec
cmp
mov
out
mov
push
adc
jecxz
mov
or
dec
cmp
test
jge
das
mov
cmp
xor
imul
faddp
cmp
scas
jl
cmp
ret
xor
aad
sbb
js,pn
mulps
adc
jle
sub
repz
ret
jo
pop
sub
xchg
cmp
push
aas
das
mov
punpcklbw
mov
ds
xor
add
pop
rcr
int3
icebp
bsr
cmp
in
pop
cmp
hlt
cmp
rep
fstpt
int3
sbb
ja
or
orb
into
sbb
push
and
movsb
push
aad
or
pop
jmp
shrl
or
add
xor
in
int3
cs
sbb
add
mov
and
ror
in
popf
push
pop
insb
fwait
jne
mov
mov
cli
or
popf
mov
or
es
aas
ror
pop
test
cmp
mov
ljmp
cmp
nop
in
cmp
push
lds
sahf
fnsave
fs
mov
arpl
fnsave
dec
cmp
pop
mov
rcll
cmp
xchg
ret
aaa
cmp
addb
xor
or
ds
push
jae
arpl
cmp
les
scas
shll
cmp
repnz
cmp
test
add
sbb
je
or
jge
inc
movsb
xor
pop
xchg
insb
xor
jl
sub
jbe
dec
fisubl
cmp
mov
mov
int3
cmp
ds
cmp
sbb
cmp
sbb
xor
fucom
lcall
dec
sub
push
data16
sbb
cmp
xchg
cmp
or
test
inc
cld
cmp
aaa
mov
or
clc
jge
push
lods
sub
mov
sahf
pushw
cmp
adcb
icebp
and
adc
lahf
int3
cmp
or
jl
mov
dec
in
push
push
stc
cmp
leave
mov
push
test
cli
fldcw
push
sbb
xor
xchg
inc
loopne
rcrb
nop
test
cmp
mov
test
cmpl
fnstcw
fs
lods
mov
movsl
dec
pop
lock
insb
xchg
add
ret
pop
and
dec
in
aaa
mov
in
dec
xchg
mov
scas
aas
pusha
adc
xor
inc
mov
sahf
add
jp
xor
cmp
shrb
cmp
nop
jl
mov
push
and
aas
push
sti
cmp
dec
cmp
stos
jne
int3
sub
fldt
add
pop
jle
xor
shl
icebp
and
cmp
inc
sbb
cmp
mov
inc
inc
xor
test
lcall
pop
xor
repnz
aam
push
mov
test
leave
dec
ljmp
lods
xor
ljmp
js
cmp
jle
ljmp
movsl
idivb
ds
add
sarb
popf
pop
out
ret
add
pop
mov
mov
test
push
xchg
lods
or
sub
cmp
out
and
out
adc
pop
in
push
das
xchg
pop
dec
xchg
fdivrs
insl
aad
add
xchg
cmp
sbb
cmp
cmp
es
lods
or
mov
xlat
xor
das
adc
das
mov
lods
test
xor
add
imul
hlt
pop
out
cmc
popf
aad
vpackssdw
inc
cmp
subb
enter
cmp
int
mov
pop
ret
out
shll
out
mov
pop
in
cmp
add
adc
out
cs
xor
sbb
adc
lret
scas
xchg
fs
test
in
je
mov
ret
popl
out
cmp
pop
mov
inc
lea
xor
sub
mov
jg
out
mov
cmp
stos
sbb
add
nop
shlb
iret
stos
add
cmp
push
push
xchg
cmp
sbb
add
jecxz
clc
jne
stos
test
or
inc
sub
cmp
cli
repz
das
push
mov
jge
add
cmp
adc
insb
fcmovb
rcr
lods
lods
push
sub
push
push
cmp
rclb
cmp
cmp
cmp
or
adc
lret
fidivrs
and
fisttpll
fildll
mov
imul
pop
lret
inc
mov
repz
add
sub
dec
cmp
pop
jge
cmp
mov
jbe
ljmp
push
and
cltd
lods
push
test
sbb
sbb
cmp
scas
pushf
xchg
lret
mov
jno
xlat
es
scas
cmc
cmp
push
push
mov
lods
pop
jl
pop
stos
dec
cmp
stos
sub
mov
mov
fdivrs
add
orl
xchg
xor
cmp
xor
lcall
inc
daa
inc
testl
cmp
cmp
push
sub
mov
daa
pop
fcompl
das
add
mov
sti
push
mov
in
pusha
adcl
ds
outsl
add
xchg
xchg
out
lret
lods
popf
sbb
mov
test
rcrb
xchg
int3
dec
stos
je
mov
push
pop
mov
idivl
das
repz
fisubl
xor
ret
cli
pop
cmp
aas
sbb
cmp
fs
xor
shrl
add
mov
jmp
and
push
xor
jl
mov
fistpll
shl
xchg
iret
ds
jle
je
sarl
or
push
add
cs
jmp
mov
xor
cmp
pop
mov
sbb
nop
jnp
mov
mov
scas
std
xchg
lahf
lcall
fists
ljmp
ds
mov
mov
jecxz
xchg
push
je
push
xor
cmpsb
cmp
adcb
repz
lea
push
xor
leave
fimuls
xor
cwtl
pop
js
aam
ret
int3
push
cmp
cmp
fcom
jge
push
in
mov
jne
push
lods
mov
cmp
cs
sarb
jo
test
xchg
sbb
xchg
roll
cmp
shll
push
in
and
mov
mov
or
pop
xor
das
cmp
shrl
push
mov
out
sarl
test
ja
fdivr
or
add
xchg
xor
ficoms
xchg
xor
ret
cmp
das
jg
sub
in
inc
sub
scas
sub
outsl
mov
push
inc
fs
loopne
das
rorl
shrb
push
aas
lret
cmpb
jge
loopne
jbe
xor
out
lcall
icebp
jae
xor
jne
push
lods
add
jmp
popa
cmp
rclb
insb
xchg
mov
mov
aam
mov
repnz
stc
mov
cmpl
push
je
cmp
xchg
push
lea
int3
nop
mov
and
jnp
sbb
cmp
aas
arpl
pusha
push
mov
push
cmp
dec
fwait
sub
scas
cmp
cmc
mov
mov
xor
jno
and
les
shrl
mov
xchg
cmp
and
in
shlb
int3
fistpll
pop
sbb
pop
fsubrl
out
js
aas
add
das
cs
aam
daa
fchs
xchg
adc
push
adc
xchg
pop
sbb
iret
pop
sub
sbb
sub
cmc
les
mov
fucomi
xchg
xchg
dec
xor
sbb
lea
out
ret
popa
mov
xor
lcall
inc
ljmp
in
cmp
add
sub
subl
lock
adc
pop
mov
sub
lock
test
push
mov
addl
xor
faddl
cmp
adc
mov
in
mov
mov
jmp
xor
sbb
inc
adc
pop
xor
mov
jo
sub
ret
mov
ss
flds
pop
mov
mov
xchg
test
out
adc
pushf
sbb
sbb
cs
push
xor
cmp
jmp
cmc
fmull
addr16
sbb
pop
pushf
lods
popf
fcompl
ret
ds
push
add
mov
jp
ret
hlt
aas
jecxz
sar
cmp
sbb
popa
or
xor
rclb
and
mov
push
push
xor
shrb
lret
inc
je
xor
jnp
add
adc
out
push
adc
jecxz
sbb
xchg
adc
stc
stos
mov
fs
push
sbb
cmp
add
pop
nop
fdecstp
xor
mov
adc
test
lods
mov
adc
mov
cmp
and
push
sbb
iret
push
mov
and
out
xchg
add
mov
xorl
push
or
ret
adc
push
mov
adc
lahf
sbb
mov
jp
in
mov
int3
or
lcall
mov
outsl
xchg
push
jmp
out
fimull
lods
add
dec
cs
adc
jno
loopne
cmpsl
jnp
xlat
jle
mov
pop
mov
xor
or
add
xchg
mov
cmpl
adc
inc
std
shlb
jo
sbb
unpckhps
or
xor
pop
mov
jb
fwait
mov
mov
pop
mov
js
sbb
push
cli
lcall
xor
xchg
xor
mov
fistl
shlw
adc
push
mov
mov
sub
imul
mov
jne
mov
ret
add
es
inc
jnp
das
lahf
mov
out
mov
icebp
ret
test
sub
in
inc
jb
mov
je
scas
popf
in
pop
pop
int
inc
xchg
or
cmp
lock
in
in
sub
adcb
fdivr
jge
dec
mov
pop
lret
in
xchg
cmp
xchg
icebp
data16
mov
jle
push
xor
jb
sub
adc
in
sbb
mov
rcrb
inc
mov
call
inc
mov
ret
lret
test
leave
push
jmp
jns
call
add
dec
nop
clc
mov
adc
mov
clc
xor
xchg
jb
mov
stc
inc
lret
scas
loop
sbb
ljmp
pop
xor
adc
icebp
pop
aas
ficoml
mov
or
out
mov
push
sarb
mov
mov
cmp
stc
add
adc
cwtl
sbb
jg
jmp
pop
mov
ret
lahf
adc
xor
aam
nop
inc
incb
jbe
jno
aas
ljmp
lret
push
enter
or
sub
sbb
rcr
ret
xor
adc
das
xchg
fnsave
movsl
jmp
cwtl
mov
data16
jns
add
or
cmp
cmp
cmp
leave
or
cmpb
std
sbb
mov
push
and
add
push
ud2
cmp
cmp
mov
fs
fs
fnstsw
push
loopne
jbe
and
fistps
jae
mov
xchg
loopne
fildl
xchg
jnp
add
lea
jecxz
cmpsl
repnz
mov
xor
pop
call
jmp
bound
adc
divb
xor
andb
or
test
std
fdiv
mov
repnz
adc
insb
lods
addl
out
push
sbb
sbbl
addr16
or
out
sbb
mov
inc
lret
jne
data16
outsb
sbb
mov
fwait
or
js
inc
enter
adc
aaa
sbb
test
pusha
add
sub
leave
nop
shrl
movb
sub
adc
sti
mov
xchg
aad
sbb
mov
int3
push
cli
add
pop
aas
mov
xor
push
cmc
not
in
cli
sub
ret
pop
mov
arpl
inc
and
f2xm1
aaa
jl
jne
mov
xor
ret
sbbb
icebp
out
sbb
pop
sub
mov
out
jmp
cli
jo
sbb
in
in
inc
fdivrl
dec
mov
push
ja
int
std
and
lock
xor
pusha
push
push
in
sub
xchg
test
decl
jns
jbe
and
lock
loop
aad
in
xchg
gs
jb
lret
js
xor
fistpll
shlb
jmp
sub
mov
mov
mov
aaa
movhps
fadds
add
ds
push
jo
das
scas
and
mov
mov
lock
jle
sub
cmp
jg
loop
xor
sub
cwtl
inc
inc
adc
sub
sub
mov
jne
adc
test
repz
jmp
xchg
cwtl
inc
pop
aad
push
xor
imul
jp
pop
sub
sti
adc
cmpsb
mov
sub
sub
js
push
push
test
pop
pop
loopne
pop
sub
mov
adc
mov
push
inc
push
in
jnp
mov
and
andb
pop
cmp
adc
or
sub
push
sub
insb
cmpsl
push
cld
xor
sub
mov
js
mov
test
push
out
pop
lods
mov
insl
sub
jle
dec
cmp
in
out
inc
rcr
xchg
mov
pop
aam
fbstp
jne
lods
sbb
push
jp
mov
outsb
scas
fs
out
ret
push
scas
enter
and
mov
and
fsubl
inc
jns
cli
jmp
push
pop
push
pop
mov
jae
sub
mov
int3
cmc
cmc
mov
es
xchg
in
shll
adc
lods
addb
xlat
mov
sub
pusha
pop
outsl
hlt
lods
sbb
push
cmp
daa
iretw
sub
orb
or
pop
loopne
mov
nop
jnp
aas
jle,pt
and
repnz
jmp
iret
pop
push
sbb
push
orb
in
xchg
sbb
int3
insb
cmp
dec
data16
ret
stos
push
dec
mov
and
mov
jle
dec
icebp
adc
xorb
xchg
lock
insl
jo
mov
fs
mov
pop
rorb
pop
xor
cmp
xchg
jbe,pn
ret
lret
leave
lock
lods
cmpb
xchg
xchg
nop
jmp
ds
dec
dec
adc
sahf
mov
out
inc
cmp
jnp
ds
lods
nop
cmp
xor
cmpsb
jo
jmp
das
or
outsl
xchg
call
test
lods
lret
cmp
jg
cli
sti
pop
ret
xchg
out
xorb
pop
dec
aam
inc
test
hlt
stos
adc
outsl
js
xchg
outsl
sub
mov
adc
inc
jle
xchg
cmp
push
and
xchg
nop
sub
push
pop
xor
push
in
pop
imul
cmpsb
call
add
push
add
ja
push
imulb
add
aaa
jl
inc
shll
inc
inc
inc
adc
or
andb
push
jmp
rdtsc
jb
mov
sbb
outsb
mov
pop
dec
aam
ja
sub
adcl
mov
sahf
push
enter
adc
ljmp
pop
paddsb
movsl
insb
ret
mov
cmp
pop
pop
lods
nop
mov
in
das
xchg
or
sbb
clc
fcomi
insb
movsl
enter
inc
cmp
sub
pop
cwtl
jg
dec
mov
les
add
sub
les
mov
cwtl
and
scas
ss
movsb
sbb
pop
addr16
add
or
pop
adc
int
das
es
rclb
sub
ds
sub
mov
xchg
out
fs
ss
scas
sub
je
jp
push
rolb
adc
mov
mov
call
ja
les
dec
sub
inc
into
jo
aad
and
pop
and
mov
xchg
daa
mov
push
jb
mov
jp
sbb
mov
out
ret
adc
cwtl
push
and
xchg
int
or
leave
bound
cmpsl
shll
out
aad
jle
adc
testl
popl
sbb
inc
aaa
adcl
dec
adc
ljmp
dec
test
dec
push
xlat
outsb
push
jo
aaa
xchg
mov
sub
xchg
mov
push
jge
mov
add
mov
imul
adc
adc
lret
mov
and
shlb
xor
test
cs
xchg
push
mov
cmp
lods
jae
aas
sbb
in
int
and
insb
inc
adc
mov
stos
inc
cmp
and
fnstenv
jg
je
jle
or
mov
jp
cmp
mov
xchg
outsl
mov
xor
fs
mov
mov
lock
mov
mov
inc
ficoms
mov
xlat
lahf
nop
push
popf
adc
je
mov
mov
mov
movsb
xor
fidivl
xor
mov
das
jns
inc
dec
jns
roll
xor
and
mov
mov
repnz
xchg
dec
dec
shrl
sahf
push
outsb
adc
test
xchg
mov
dec
xor
sub
or
into
je
adc
or
jp
cld
jmp
adc
add
or
insl
add
mov
in
xchg
arpl
xor
jne
mov
outsb
sarl
mov
mov
dec
jo
test
and
insb
inc
xor
jo
test
xchg
jmp
jp
ret
std
adc
jge
mov
filds
mov
xchg
fstps
pop
outsb
int3
sarl
pushf
and
je
pop
data16
mov
int
adc
fcompl
int3
jns
ret
mov
ficompl
xchg
pop
or
sbb
push
loop
jmp
cmp
aas
cwtl
stc
inc
ds
mov
dec
int
and
shrl
push
lods
pop
mov
push
push
sbb
testb
in
enter
sub
sahf
adc
xchg
mov
push
mov
sub
pop
xchg
pop
adc
mov
jmp
fdivs
xor
jle
inc
out
pop
insl
das
fcoms
inc
xchg
push
ljmp
jecxz
cmp
jns
sbb
and
jmp
inc
dec
scas
rcr
or
dec
sbb
push
rorb
aaa
das
xchg
push
cmp
lods
in
in
aam
cmc
clc
jl
adc
xor
call
xchg
fildll
xchg
mov
movsb
subb
push
mov
fmuls
push
std
fdivrl
jmp
pushfw
jno
cmpsl
call
add
adc
fidivrs
add
insl
ljmp
push
outsb
mov
jg
sbb
stc
fnsave
outsb
int3
adc
cmc
mov
add
loop
and
out
cwtl
test
ret
fstpl
xchg
mov
sar
out
scas
aam
cmc
lea
sub
lds
push
xchg
inc
ss
outsb
pop
les
mov
lret
xchg
or
jae
sbb
test
mov
out
xor
sub
xorb
cwtl
ret
outsl
mov
sbbl
mov
pop
pop
xchg
mov
sbb
xor
xchg
iret
mov
pop
pop
xchg
jmp
bound
mov
test
jg
sub
daa
adc
jle
insl
mov
stc
test
lock
adc
inc
mov
sbb
push
adc
cld
movsl
xchg
pushl
fmul
or
bound
adc
sbb
fistl
rcl
into
push
mov
inc
push
ds
cmp
das
add
or
push
jae
out
push
dec
and
push
pop
sub
or
mov
ret
es
in
scas
add
mov
push
push
ja
adc
xchg
jg
push
mov
int3
jnp
pop
sbb
jnp
sbb
xor
sub
stc
lods
jne
loope
lcall
mov
loop
add
sbb
ror
push
cmp
cmp
mov
xor
mov
cmova
sbb
filds
mov
mov
pusha
push
fsubrs
push
add
or
jle
cwtl
mov
out
or
fistpll
stc
dec
dec
mov
adc
or
sbb
cmp
cmpsl
push
dec
das
and
mov
pop
sub
mov
out
ds
and
xchg
scas
cli
or
fsts
faddl
int
adc
and
adcb
xchg
cmp
push
scas
and
popf
cmc
lcall
lret
mov
sbb
cltd
pop
sub
js
sub
jl
inc
or
fidivl
dec
inc
gs
andl
adc
sub
leave
mov
pop
xchg
in
inc
cmc
and
lods
cmp
jg
adc
sbb
sbb
pop
mov
dec
inc
popa
fwait
sub
scas
adc
cmp
ffree
pop
sbb
lods
jp
cmc
pushf
sbb
mov
mov
xchg
add
lods
inc
adc
mov
mov
sub
mov
cmc
push
or
xor
mov
scas
or
inc
das
andl
rorl
dec
dec
inc
mov
mov
mov
jnp
sub
imul
pop
jne
jmp
jmp
xor
std
ficoms
enter
lret
cs
test
es
mov
mov
jecxz
push
inc
adc
mov
inc
jg
xor
fs
popl
mov
mov
pop
add
out
shll
mov
test
cmp
lret
cmp
enter
or
aam
mov
xor
dec
or
test
fcmovnu
cmp
stos
lds
ljmp
in
pop
jge
push
addl
pusha
mov
je
and
mov
in
mov
xor
je
jno
push
das
imul
idivb
popf
ret
mov
mov
sub
frstor
xor
mov
mov
jge
pop
cmpb
js
adc
pop
mov
or
cmc
jnp
xor
sub
sub
dec
jae
lahf
repz
lret
and
daa
push
bound
mov
pop
xchg
and
inc
outsb
fisubrs
mov
cmp
sbb
cli
sub
push
lret
js
xchg
add
cmpb
incb
fisubrs
insb
push
mov
dec
cmpl
adc
stos
jmp
ret
or
cli
xchg
inc
movsb
sbb
out
lret
and
insb
shll
inc
xor
adc
lret
sbb
push
shl
xchg
cmc
xchg
cltd
adc
ja
sbb
lods
aas
loop
and
ja
mov
enter
lods
fdivrl
mov
sbb
scas
outsb
add
adc
out
push
lahf
insl
pop
push
or
sub
in
cmp
mov
pop
les
push
mov
dec
leave
adc
jo
lret
lcall
or
or
mov
xchg
fmulp
cmp
in
cmp
outsb
or
xchg
mov
xor
mov
negb
popf
xor
or
ret
sbb
adc
popa
and
shll
xchg
sub
xor
mov
jp
into
lahf
xor
icebp
in
lret
adc
mov
xchg
ss
fwait
fs
mov
mov
adc
daa
imul
mov
ret
inc
loopne
pop
int3
push
adc
jb
sub
xor
pop
sub
and
enter
and
cmc
out
xor
xchg
push
sub
fldz
call
sub
cmpb
and
loope
ret
adc
fstps
mull
push
mov
cmp
xor
shl
sub
pop
pop
aas
stos
adc
fcoml
sub
and
shlb
and
inc
push
mov
push
scas
pop
call
jle
test
xchg
pop
mov
mov
repnz
inc
add
jp
pop
shrl
fsubrl
icebp
inc
cs
jg
push
pop
lret
xor
mov
or
and
mov
lds
rcr
jbe
adc
push
adc
loopne
dec
das
ret
sbb
mov
dec
pusha
enter
pop
stos
inc
xchg
sbb
push
sbb
sbbl
ljmp
movsl
and
inc
jae
inc
add
out
into
lock
ljmp
push
lret
mov
sbb
ss
cmp
lret
out
cmp
xlat
mov
jae
and
lea
ror
pop
xor
mov
jmp
pop
ds
inc
mov
sbb
push
xchg
inc
fildl
fstl
dec
dec
cwtl
cli
decl
adc
cmp
push
dec
shlb
inc
cmp
scas
clc
push
push
xor
test
mov
dec
mov
inc
cmp
and
add
rcrb
adc
push
xchg
lods
cmp
fldenv
push
cli
das
mov
mov
and
cmpsb
lea
fbstp
xor
jmp
cmpsl
jg
cmc
lods
xchg
push
push
xchg
adc
daa
xchg
neg
pop
stos
xor
cld
mov
pushf
sub
std
mov
stos
sbb
jge
xor
mov
mov
or
ret
lods
sbb
adc
jg
sub
adc
scas
jnp
add
jne
xor
movsl
je
adc
icebp
cmpsl
pop
add
mov
sbb
fxch
xor
arpl
mov
dec
out
add
ja
push
test
adc
push
mov
cmp
adc
fidivl
mov
dec
or
shlb
xchg
ret
enter
shlb
dec
movsb
xchg
imul
jb
mov
loop
pop
jecxz
or
xchg
jae
ret
into
sbb
ret
fildll
jl
fcmovne
pop
lcall
dec
mov
cmp
mov
aas
inc
pop
jmp
js
lock
mov
pop
pop
add
mov
xchg
rcll
xor
fisubrs
xchg
mov
ljmp
dec
fnstsw
mov
insl
mov
mov
mov
push
into
mov
push
movsb
imul
xchg
loop
push
loope
fldcw
mov
test
xlat
gs
add
stos
shll
mov
inc
popf
call
mov
je
adc
sub
adc
inc
adc
lds
cmp
jb
sbb
lock
insb
sbb
push
inc
mov
sbb
xchg
mov
mov
sub
fdivrs
test
sbb
and
jl
lock
dec
inc
or
imul
lods
es
int
lods
mov
test
and
lods
in
mov
mulb
jle
lds
ret
test
ss
pop
cmp
outsl
mov
divb
mov
fdivl
jmp
mov
daa
and
adc
test
mov
lea
mov
lods
in
adc
movsb
addr16
dec
pop
lcall
sub
sbb
push
int3
daa
xchg
push
or
inc
mov
mov
pop
das
pop
shlb
jbe
aad
popf
insb
jo
jg
hlt
inc
nop
mov
into
lcall
pop
rcll
repnz
lods
iret
inc
bound
adc
sbb
es
mov
imul
sahf
adc
mov
dec
lea
loop
outsl
das
fistpll
xlat
insb
scas
xchg
push
xchg
cwtl
mov
adc
mov
add
lahf
adc
adc
cmpsl
pop
add
je
dec
inc
mov
insl
adc
sub
mov
out
sub
mov
icebp
mov
sub
ja
aas
and
and
repnz
inc
cmp
mov
mov
mov
pop
les
mov
mov
push
adc
das
jmp
adcb
cwtl
pop
stc
clc
push
xchg
std
ja
dec
adc
outsl
ss
sbb
movsl
ljmp
xchg
xor
xor
movsb
daa
clc
xor
jp
push
inc
xor
std
push
inc
sub
mov
imul
and
js
add
cmpsl
adc
push
jl
stos
nop
es
jge
out
mov
pusha
sub
and
mov
mov
stos
mov
pop
loope
sub
pusha
adc
pop
mov
xor
sub
sub
pop
sub
jg
jecxz
pop
jle
out
or
adc
adc
cltd
stos
mov
cmp
jae
es
mov
fs
push
test
dec
cmp
dec
mov
jne
out
scas
mov
fcoml
sub
xor
sbb
jbe
test
mov
shl
movsl
pop
fldcw
imul
xchg
and
enter
sbb
mov
push
push
sbb
gs
xchg
mov
aaa
outsl
jecxz
mov
mov
or
mov
das
pop
jle
mov
out
out
shrl
cwtl
cmc
movsb
xor
in
sarl
push
jl
or
shrl
fnstenv
mov
hlt
ja
daa
hlt
jecxz
int
xchg
addr16
adc
addr16
lds
sub
aas
int
adc
mov
adc
push
sbb
daa
mov
pop
data16
jno
in
lret
sub
enter
shrb
sub
mov
inc
and
cmp
jge
mov
mov
mov
in
mov
pop
dec
imul
mov
mov
scas
xchg
sbb
mov
push
les
xchg
and
jl
and
divps
xchg
push
inc
imul
xchg
cmc
adc
xchg
loope
nop
sub
mov
out
xor
jg
xchg
jl
dec
lods
adc
mov
hlt
dec
inc
inc
cmp
repnz
mov
pop
ja
ret
enter
insl
test
sub
in
push
jmp
xchg
int
push
xchg
sbb
rcr
test
pop
insl
add
sbb
ret
sarl
mov
je
adc
pusha
pop
hlt
ss
jl
dec
pop
push
inc
icebp
scas
lods
lods
inc
xor
add
sub
mov
adc
push
pop
cmpsl
cmp
mov
sub
int3
adc
mov
ds
push
cmpsb
and
mov
mov
jo
inc
add
repnz
add
fimull
cmpsl
mov
add
leave
lret
cld
adc
stc
cs
add
cmp
lret
gs
mov
js
mov
out
mov
cmp
mov
mov
lahf
cmp
pop
repnz
mov
mov
pop
or
cs
and
mov
jl
push
loop
sub
nop
pop
adc
leave
je
scas
adc
xchg
mov
xchg
push
mov
fs
ljmp
pop
mov
adc
mov
push
inc
pop
xor
xor
popl
sub
lahf
cmp
shl
jmp
xorb
jno
mov
or
mov
jecxz
cmp
subb
es
fprem
mov
sub
es
fistl
mov
sahf
sub
into
fildll
xlat
push
fdivs
xor
add
rolb
or
pop
sarl
lds
mov
loop
iret
pop
pop
cmp
cmc
jp
add
rorl
arpl
xchg
adc
imulb
mov
aas
xor
aaa
orl
rorl
int
adc
shr
cmc
scas
outsb
dec
lahf
jbe
jle
mov
cmp
mov
loope
jo
mov
std
xchg
sbbl
xor
outsl
mov
scas
repz
and
test
in
dec
pop
pushf
insl
or
push
stos
dec
lods
repz
adc
mov
shr
mov
cmpsl
call
mov
mov
push
mov
pushf
out
push
je
adc
repz
jge
and
xchg
jmp
sbb
outsl
cmp
sub
dec
xchg
mov
int3
sahf
push
push
fisubrs
mov
out
adc
pop
adc
xor
pop
out
jnp
mov
mov
stos
inc
adc
inc
mov
fwait
lods
adc
fcomps
daa
adcb
in
fstl
ljmp
loop
test
cld
cmp
sbb
cmp
out
push
jbe
les
inc
dec
pop
xor
xorb
imul
jecxz
xchg
cmp
add
insb
cltd
shlb
into
rolb
sbb
aam
adc
cmp
sbb
addr16
out
sbb
and
jmp
int3
loop
lret
mov
out
lods
cld
insl
jb
lock
mov
fisttpll
stos
inc
call
mov
stos
fstpl
clc
data16
lods
daa
mov
in
cmove
jp
push
adc
jg
inc
add
inc
add
mov
pop
xchg
xor
adc
sub
mov
fsubl
das
xor
shrl
mov
cs
xor
add
jle
mov
mov
ja
fdivrl
xor
cmp
adc
mov
in
dec
xchg
xorb
es
gs
xor
or
add
lock
or
xor
mov
sub
enter
inc
mov
pusha
cmpsb
xor
adc
push
or
xchg
inc
sub
int
sbb
mov
shr
mov
rcl
dec
cmp
inc
mov
xchg
in
inc
lret
push
mov
jne
pop
mov
rol
and
in
insl
adc
jmp
cld
es
xchg
and
inc
xchg
fadds
xor
mulb
xor
jmp
repz
mov
test
xor
xchg
in
mov
jecxz
out
xor
fidivrs
or
lds
and
outsb
mov
cmp
inc
lea
inc
xchg
insl
adc
mov
jg
push
adc
lea
ret
nop
mov
adc
push
enter
mov
je
xor
ret
out
insl
add
xchg
lret
cmpsl
pop
xchg
cmp
fldcw
mov
fptan
jle
mov
xor
and
ss
pop
jmp
push
je
xchg
lods
iret
aam
scas
cmpb
hlt
sub
aad
clc
mov
das
adc
cld
es
push
ds
fsubrs
setl
mov
sub
mov
mov
pop
sub
mov
adc
je
call
mov
aas
movsl
push
mov
jmp
inc
insb
addr16
int3
dec
loope
or
mov
or
inc
stos
sbb
ret
sub
sub
mov
jp
scas
fwait
iret
sahf
push
andb
add
aaa
xchg
xchg
fstps
or
inc
xchg
sub
icebp
enter
xor
insb
out
out
mov
jle
push
lcall
mov
int3
out
out
sbb
fcoml
insl
adc
jg
lret
xchg
jae
cmp
enter
jle
pusha
test
fnstenv
stos
cmp
lods
jo
sahf
in
sub
lahf
mov
xchg
push
inc
adc
sub
popf
lcall
das
mov
sbb
jns
xchg
dec
leave
addl
adc
repz
in
sarl
cmp
test
icebp
jmp
loop
push
inc
xchg
dec
popa
iret
adc
pop
ficoms
xor
movsb
adc
xor
xor
xor
mov
inc
cmp
adc
inc
sbb
push
inc
mov
inc
jnp
and
or
hlt
push
mov
sbbb
mov
mov
inc
adc
andb
or
adc
in
loopne
inc
mov
out
push
and
mov
add
adc
or
mov
push
xor
dec
and
enter
outsl
cwtl
sub
or
push
mov
pushf
outsb
sub
mov
test
int
shll
sub
repnz
jge
or
fs
cmp
test
inc
dec
mov
cmp
outsb
ljmp
or
sub
aaa
adc
xor
pop
stos
xor
scas
mov
jne
adcb
repz
test
xchg
add
mov
mulb
fnstenv
jmp
jbe
or
mov
and
ljmp
fldcw
cmpsl
adc
sbb
xor
xor
mov
dec
imul
mov
ja
mov
xor
mov
rclb
adc
iret
ret
sub
insl
aad
xchg
in
or
nop
sbb
cmp
outsl
in
xor
incb
test
adc
and
shll
shlb
cltd
push
mov
and
jmp
in
in
lret
jp
fistpll
jno
sub
inc
outsl
test
push
outsb
lock
adc
stos
arpl
loopne
add
hlt
add
or
sbb
mov
insl
and
mov
xchg
cmp
cmp
lock
sub
pushf
out
repz
stos
xchg
jmp
arpl
lock
call
cmpsb
mov
xchg
gs
fnstcw
outsb
out
int
lcall
cmp
in
xchg
outsb
cmp
dec
lret
and
push
pop
cmc
dec
or
in
in
adc
imulb
sarl
pop
popa
insb
adc
clc
movl
jae
test
sub
rcll
outsb
fdiv
dec
and
push
test
sub
mov
or
or
add
hlt
xor
shlb
or
xchg
in
sub
sub
loope
sbb
inc
add
aad
ja
dec
jbe
in
jns
add
inc
popf
int
test
and
mov
push
jmp
sti
mov
mov
pop
push
js
add
adc
aam
call
mov
xchg
scas
jp
cmc
aam
imul
lcall
inc
lock
jno
les
rcll
dec
inc
cmp
test
jl
ret
mov
jnp
sub
adc
pop
nop
dec
or
clc
add
out
pop
pop
in
aad
test
std
mov
or
mov
cmp
movsl
imul
sbb
xchg
rolb
fsubr
mov
test
xor
fwait
cmpsb
mov
insb
mov
pop
push
adc
sbbb
ss
cmp
pop
mov
push
inc
jbe
adc
popf
dec
adc
xchg
jge
inc
pop
inc
sbb
test
popa
gs
es
push
insl
sub
push
xor
xchg
jo
shlb
scas
lcall
mov
stos
outsb
into
sarl
cmp
shll
repnz
cmp
add
aas
add
out
xor
adc
add
les
mov
fbstp
out
stos
cmp
jge
popa
lock
xchg
jecxz
pop
sahf
sbb
sub
imul
arpl
adc
lods
push
jno
rol
negb
xchg
test
xor
cmpsl
and
orb
lret
xor
jmp
xlat
lods
mov
out
mov
or
xor
ja
push
jmp
or
mov
cmp
lock
out
xor
xchg
cmp
cmpsl
or
loop
pop
cmp
scas
inc
mov
adc
cmp
adc
test
orl
pop
ret
jmp
inc
lods
pushf
adc
movsb
mov
imul
adc
jbe
cli
mov
ss
ss
and
push
adc
mov
add
push
sub
xor
out
push
cltd
ja
xchg
or
ficomps
nop
test
jnp
imull
jl
aas
in
pop
jno
rcrl
jecxz
xchg
sbb
out
lds
mov
inc
mov
add
add
sub
xchg
shrl
das
push
aam
xor
add
in
dec
negb
stc
in
insb
xor
pushf
aaa
loope
loop
mov
cmpb
mov
mov
inc
xchg
cmp
sub
push
mov
sub
cwtl
ret
pop
cld
sub
clc
shrb
pop
rcrb
jg
insb
mov
and
into
je
push
cld
scas
xor
out
fnstcw
aaa
adc
jne
xchg
adc
adc
dec
sbb
xor
xor
mov
push
xor
pushf
popa
shll
cmp
push
inc
sbb
push
mov
push
clc
andb
lret
enter
mov
sub
scas
xchg
mov
loopne
mov
out
mov
in
adc
sbb
shrb
mov
pusha
sub
jp
leave
clc
rcrb
jbe
lock
das
scas
inc
std
sub
dec
fidivs
mov
cmp
jp
ds
xor
iret
cmp
mov
lret
hlt
icebp
adc
mov
out
ljmp
inc
das
sub
adc
insb
lods
pusha
test
call
adc
jbe
into
out
mov
negb
mov
adc
mov
ds
lods
js
gs
cltd
push
xchg
push
cmp
sub
jnp
sbb
lret
jg
jg,pt
mov
pop
aam
push
adc
je
mov
adc
xchg
out
xor
cmpsb
cmp
dec
cli
orl
jbe
inc
mov
idivb
ficoms
inc
xor
mov
out
adc
xchg
aas
inc
fcoml
cld
cmp
cmc
fwait
mov
scas
push
push
bound
data16
js
push
xchg
lcall
mov
xchg
push
jo
out
jo
sub
push
or
loop
jp
ret
mov
loope
hlt
add
inc
push
push
ret
cmp
mov
pop
push
cmpsl
in
mov
or
sti
in
mov
cwtl
pop
out
fldt
lret
inc
push
andl
or
mov
aad
mov
adc
loopne
inc
ret
inc
cmp
xor
lret
jns
sub
sub
repnz
inc
jle
mov
loop
in
xchg
adc
fsubp
jle
cmp
mov
push
mov
mov
mov
pop
mov
mov
or
js
aam
adc
lods
dec
adc
rcrl
lret
jle
sub
jb
into
mov
das
or
sahf
cmc
or
jne
mov
mov
mov
clc
xor
addr16
fdivr
jb
fsubl
add
ds
addr16
sbb
out
ss
subb
adc
cmp
jp
jne
mov
sub
stc
aam
pop
mov
or
mov
rcl
xlat
dec
push
add
mov
inc
mov
jne
inc
inc
push
je
les
push
pop
xor
sub
rcll
pop
and
or
dec
addr16
iret
int3
xor
adc
gs
adc
add
pusha
push
in
test
xor
subb
pop
adc
stc
in
mov
outsb
unpckhps
lock
shll
sahf
cmp
mov
xchg
sbb
sub
ret
outsl
push
adc
jge
fcompl
test
cs
add
and
lret
das
push
mov
mov
mov
jp
and
or
je
jl
ss
jbe
sbb
sbb
leave
mov
dec
imul
repnz
xchg
mov
ja
call
or
call
pop
mov
xchg
sub
pop
jnp
pop
inc
fldcw
fistpll
test
cmp
fnsave
aam
mov
jle
jp
push
xchg
cmp
jo
xor
and
jnp
push
push
adc
xor
jb
and
dec
sbb
mov
ss
jl
mov
aam
xchg
ret
add
les
add
jne
ret
fs
adc
adc
mov
mov
stc
mov
mov
cli
cwtl
pop
adc
pushf
mov
push
pop
loop
lret
dec
lods
imul
ret
or
out
int3
mov
sub
push
ficoml
in
pop
out
rorl
push
mov
repz
xor
cmp
mov
inc
add
adc
movsl
fisubl
dec
jo
mov
daa
into
sarb
mov
push
ss
xor
lret
mov
inc
sub
mov
adc
jg
xchg
imul
into
dec
mov
test
jbe
orb
pusha
ja
sbb
or
aas
lret
clc
fadds
int3
xor
jp
dec
cmpsb
pop
enter
and
sbb
mov
xor
adc
jg
jae
rcl
shrl
pop
adc
nop
inc
jle
mov
mov
lods
xchg
in
dec
push
xchg
sub
loope
or
cli
dec
inc
scas
sub
iret
sahf
xchg
divl
pop
imulb
adc
jcxz
xor
and
cmp
arpl
mov
scas
lods
fistpll
fdivl
xchg
mov
push
fcomp
test
mov
sbbl
add
sub
popf
xor
ljmp
push
push
sub
xlat
adc
xchg
jecxz
fs
loope
sarl
dec
in
mov
jle
add
and
lds
addb
and
add
outsl
in
outsl
lods
push
adcl
push
mov
add
xor
adc
push
aad
mov
movsb
inc
insb
dec
add
push
or
push
mov
mov
cmp
in
jne
mov
and
ja
testb
xor
aaa
jmp
testb
push
xchg
xor
aam
pop
mov
int
scas
repnz
fcoml
shrl
xor
daa
mov
xchg
fucomip
call
mov
lock
jne
stc
xor
movsb
ret
cmp
mov
bound
sbb
js
dec
pop
lds
in
lea
pop
icebp
shr
xlat
mov
pop
leave
in
ss
sub
adc
mov
mov
decb
dec
test
jnp
and
adc
xchg
in
push
jmp
ds
mov
inc
pop
push
cmpsl
xor
xor
add
scas
jmp
pop
or
pop
mov
and
cmpsl
call
push
movsl
xor
repz
mov
int3
push
in
cmp
cwtl
pusha
arpl
hlt
jmp
push
pusha
push
sbb
in
fistl
dec
or
xchg
xchg
int3
mov
and
rcrl
mov
rcr
sub
dec
inc
dec
xchg
cmp
jge
xor
jle
mov
jno
or
jg
xor
xor
add
lods
xchg
fwait
push
pop
dec
adc
xor
cld
int3
mov
cwtl
movsb
fsubl
pop
add
and
mov
leave
test
mov
xchg
int3
mov
mov
dec
mov
pop
pop
addl
divl
insb
sub
fisubrs
imul
or
dec
aaa
shrb
ds
mov
adc
cmc
call
enter
sub
out
sti
xor
xchg
pop
xorl
add
mov
loop
rcr
jo
jmp
loopne
and
inc
adc
cmc
repz
or
std
out
mov
lods
jl
test
insb
mov
xchg
xchg
cs
add
cmp
out
cmp
xchg
insb
aaa
adc
ja
in
les
in
mov
sbb
psubusb
repnz
push
ja
cmc
jbe
call
sbb
mov
fisubrl
mov
add
shrl
in
push
inc
stc
dec
push
inc
inc
jbe
adc
adc
dec
xchg
sbb
push
insb
mov
aas
enter
stc
nop
lcall
call
sbb
aaa
pop
addb
cltd
add
sub
xlat
adc
hlt
test
test
fmull
daa
loope
addr16
je
mov
mov
enter
cmpsl
pop
mov
scas
jne
mov
icebp
jle
ds
xchg
negb
jnp
orb
jecxz
mov
inc
adc
sbb
repz
lods
adc
lds
shlb
jl
xchg
ds
sbb
rcr
xchg
lods
jns
pushf
movsl
push
cmpsb
rclb
pop
mov
sbb
sbb
adc
mov
mov
sub
outsb
sub
addl
pushf
sub
iret
fisttpll
addb
fcomps
dec
adc
cmp
mov
popf
insl
shlb
cmp
xor
or
jns
or
pop
adc
ds
sti
int
mov
add
sbb
pop
fildl
jecxz
jge
dec
adc
add
push
mov
int3
addb
das
rclb
mov
push
imul
xorb
loopne
or
dec
or
or
fidivs
mov
ds
aaa
lds
jo
inc
adc
insl
jbe
jne
pop
pop
mov
adc
xor
adc
mov
filds
sarl
mov
shrb
icebp
mov
xchg
jae
gs
jmp
incl
cmp
adcb
divb
xor
ss
xor
xchg
mov
scas
loope
add
dec
lahf
cmp
test
movsl
loope
push
mov
repnz
sarb
out
add
xor
push
or
stos
addr16
mov
push
cmp
xor
adc
sub
xchg
faddl
sysret
pop
subb
repnz
out
comiss
mov
daa
pusha
nop
mov
int3
dec
inc
ds
lret
jbe
cmp
stos
dec
lods
adc
aam
jle
aaa
mov
inc
jo
mov
mov
pop
cs
movsb
and
fdivrl
sub
add
mov
gs
xor
cwtl
push
test
lahf
lret
jl
cli
jne
or
repz
fs
xor
adc
mov
test
insb
jge
dec
lahf
mov
ja
push
je
fisubrs
push
mov
sub
in
in
xor
rcl
lret
dec
jmp
mov
lds
push
lea
shlb
loopne
jmp
sbb
jo
push
pop
mov
fnsave
imul
xchg
aam
mov
mov
lret
in
mov
mov
adc
cmp
xor
mov
adc
das
ds
push
sbb
mov
jb
jo
sbb
leave
xor
jle
enter
xchg
cmpsb
dec
push
aad
mov
adc
aas
inc
and
inc
in
rcll
cmp
xchg
ret
push
subb
fidivrs
or
cmp
mov
out
and
add
inc
movsl
sarl
mov
stos
out
add
stc
orl
lds
daa
nop
sbb
out
or
inc
insb
nop
jge
adc
shll
jo
sub
sahf
pop
cmpsb
test
xor
sub
test
sub
mov
shl
fldt
imul
pusha
push
je
xchg
mov
shll
ficoms
or
std
xchg
jbe
addr16
cld
and
movsb
loope
mov
call
nop
mov
adc
jb
mov
xor
es
cwtl
xchg
jno
or
mov
dec
xchg
bound
push
mov
mov
jge
mov
imul
in
adc
lock
push
jl
adc
aad
lods
enter
and
dec
cmpsl
mov
inc
cmpsl
mov
jge
stos
sub
adc
inc
fwait
adc
fwait
cs
adc
xchg
lds
add
loopne
adc
lods
shrl
xchg
out
pushf
fidivs
pop
in
lahf
aad
mov
fs
stc
mov
inc
inc
adc
subl
xor
xchg
push
test
dec
adc
mov
cmp
ret
pop
xor
xchg
fisubrs
inc
js
pop
ret
or
pop
int
subb
dec
ror
lret
out
mov
or
aaa
xchg
cmpsb
pop
in
shrl
ss
or
lret
mov
test
ret
stos
cwtl
imul
mov
rolb
insb
mov
mov
sti
sub
cmc
adc
les
mov
adc
jne
sub
jno
pop
aas
mov
cs
inc
xor
and
mov
mov
lret
adc
sub
in
xchg
movsb
or
mov
divb
and
or
sub
xchg
xchg
jge
pop
sbb
push
repz
jmp
aad
test
mov
aas
cmc
outsl
icebp
fwait
mov
push
push
lea
adc
gs
jbe
push
jnp
bound
add
jl
movsl
pop
jbe
adc
sub
mov
pop
and
push
shl
and
stos
fcompl
cmpsb
xchg
aam
call
ja
std
add
jl
jg
fnstcw
lods
sub
call
mov
imul
sub
xchg
jne
mov
scas
xchg
jbe
jl
mov
sbb
ljmp
cmp
sub
sbb
pusha
sti
sbb
mov
adc
cmc
fs
mov
mov
rorb
inc
mov
movsl
push
mov
shlb
in
imul
test
loopne
shrl
jns
adc
jle
mov
dec
jle
cmc
xor
ds
pop
ljmp
or
int3
mov
pop
xor
cld
xor
aad
incl
dec
pop
shrl
mov
stos
adc
jecxz
mov
jle
and
and
mov
jne
sub
sub
test
fcmovbe
xlat
ja
data16
jne
out
push
cwtl
mov
pop
pop
mov
out
or
push
lds
dec
sbb
mov
leave
pop
scas
jns
aas
mov
push
subb
outsl
adcb
push
sti
in
adc
push
sub
ljmp
xor
ss
dec
int
out
inc
cmp
mov
cmc
negb
popa
es
or
push
das
test
lret
stc
cmp
jle
xor
cmp
push
fildl
jmp
out
sbb
mov
mov
xchg
sub
sbb
adc
hlt
push
mov
call
jmp
adc
push
sub
lret
outsl
add
arpl
push
sub
push
mov
mov
je
cld
xor
xor
stos
and
mov
pop
xor
mov
sub
pop
pop
push
lods
pop
cltd
pop
jnp
cmpsb
imulb
cmc
test
mov
mov
xchg
xor
or
outsl
mov
roll
mov
sarb
int
dec
cmpsb
sub
negl
hlt
adc
xorps
test
rcrl
mov
das
out
std
insb
mov
adc
aas
mov
sub
adc
jbe
into
jle
js
adc
aas
jmp
jbe
insb
test
lret
insl
sub
and
and
add
push
inc
divl
mov
or
adc
in
adc
sti
xchg
addl
sub
push
popf
mov
add
or
sub
ror
aam
add
gs
xor
mov
xor
ret
mov
adc
sbb
ljmp
mov
push
das
andl
in
pop
dec
add
sbb
daa
fsubrp
inc
dec
inc
loope
cwtl
in
push
sbb
repnz
pop
jl
cs
daa
ljmp
adcb
jb
sub
dec
mov
cmp
movsb
mov
lock
ds
dec
push
mov
xor
mov
add
or
fstpt
pop
insb
mov
sub
nop
mov
out
in
push
out
dec
jmp
in
sbb
hlt
sub
aaa
cmp
mov
pop
jns
int3
sti
and
xor
ret
cs
out
xchg
pop
mov
test
ja
in
add
pop
adc
xor
sub
cs
and
das
lock
xchg
fisubl
aad
mov
mov
sub
aam
ds
out
cmp
add
mov
cmp
xlat
or
in
shl
insb
pop
rorl
sub
scas
pop
outsb
adcb
mov
cmp
and
lahf
sbb
push
addb
daa
add
jbe
mov
sub
popf
jnp
in
push
xlat
push
dec
outsl
int
xor
xchg
push
ljmp
lea
sub
aam
xchg
jo
loope
ljmp
add
xor
pusha
rorb
enter
push
pop
cmp
jb
mov
loopne
xor
xor
pushw
push
jnp
jo
rolb
movsb
ds
mov
cmp
adc
cmp
and
mov
push
test
push
push
arpl
les
retw
sub
mov
cwtl
dec
xchg
ret
jp
push
mov
shrb
mov
cmpsb
aam
fists
shll
mov
or
mov
pop
mov
push
mov
iret
mov
jns
enter
inc
jbe
clc
mov
mov
and
test
xor
dec
xor
or
mul
adc
in
sub
push
adc
imull
or
add
ljmp
clc
int
out
loop
mov
shrl
in
xchg
ficoms
mov
cmpsb
sub
or
pop
dec
mov
dec
xchg
data16
jno
sub
decl
fcomps
aam
sub
sub
mov
das
dec
inc
clc
cmp
mov
jo
push
and
mov
push
in
lods
xchg
dec
inc
cli
subl
jb
jno
xor
rolb
iret
push
mov
cmp
xchg
dec
inc
cmc
and
fcmovnb
clc
mov
sub
enter
jne
mov
xor
in
mov
rcll
cmpsb
stos
mov
ss
add
xor
cld
je
hlt
pushf
das
jle
adc
ret
mov
repz
popa
lds
push
and
dec
inc
mov
insb
dec
inc
dec
sbb
add
xor
in
xor
xchg
cmpsl
inc
mov
popf
fimuls
sbb
clc
push
xlat
fs
xchg
imulb
outsl
fimull
dec
mov
push
aaa
ja
les
das
xchg
clc
cwtl
mov
xchg
pop
xor
push
push
sbb
ljmp
dec
outsl
xor
sub
nop
pop
inc
push
stos
popf
das
add
inc
mov
pop
jb
mov
icebp
mov
adc
jns
ret
fcmovnb
pop
mov
je
rclb
test
outsb
sbb
adc
and
sub
jmp
js
xor
xchg
ljmp
adc
mov
fcoml
lods
iret
jmp
mov
or
sbb
or
mov
call
dec
add
jge
add
dec
das
loopne
fcoms
arpl
mov
cmpsb
test
aad
dec
rcrb
rcr
js
fdivs
pop
mov
dec
xchg
mov
adc
xor
iret
cmp
xlat
scas
mov
dec
lods
leave
and
cmp
mov
push
push
xchg
xchg
repz
jle
add
stos
leave
sbbb
divb
out
ds
clc
push
xchg
outsb
cmp
mov
nop
in
jle
arpl
sub
pop
pop
jnp
jecxz
xchg
mov
sub
mov
jnp
fs
add
loop
push
int3
arpl
mov
pop
out
popa
shll
das
and
mov
ds
mov
pushf
repnz
hlt
adc
sub
xchg
bnd
jae
mov
sarb
mov
ljmp
iret
lea
cmp
ds
sbb
adc
sub
dec
or
pop
nop
xor
xchg
js
mov
adc
rcll
mov
div
push
insb
sub
ja
rclb
xchg
cmc
enter
pop
or
fidivl
and
adc
mov
sbb
nop
cmpsb
jl
pusha
out
xchg
adc
cmc
je
pop
clc
sarb
mov
test
sub
jge
dec
inc
or
ja
insl
hlt
cmpsl
push
pop
dec
rorl
mov
mov
in
repnz
xor
lcall
sub
cld
and
pop
sub
push
aaa
push
jb
xchg
cmp
or
in
addb
mov
enter
out
and
adc
insw
imul
sub
sbb
imul
mov
inc
stos
in
ds
jno,pt
lret
rcll
or
shll
mov
sub
push
mov
push
jne
es
sub
in
shrl
and
dec
dec
fstpt
fdivrl
daa
nop
pop
fs
jmp
in
insl
cmp
xchg
sub
xorl
xchg
loop
aam
in
adc
dec
sub
pusha
loope
lock
mov
sbb
das
inc
insb
xchg
mov
jbe
and
push
push
test
pop
jo
xor
insl
fnsave
mov
pop
in
test
sbb
pop
ja
rcl
lea
nop
leave
push
ds
cmp
jmp
sahf
xor
mov
adc
push
imul
es
loopne
add
mov
adc
js
movsb
pop
rclb
leave
jo
fwait
dec
mov
insl
adc
ficoml
add
aaa
inc
adc
shll
jl
mov
xchg
aad
cwtl
pop
pop
jno
adc
jo
cmpsb
and
push
mov
cmpl
mov
push
insb
and
sub
mov
xor
sbb
cmc
cmc
pop
pop
mov
sarb
rcll
adc
sub
mov
inc
repnz
jbe
loope
pop
addr16
cmp
sbb
xor
push
push
fnstcw
int3
cmp
lods
mov
out
add
mov
int
mov
es
inc
je
mov
and
in
movsb
xchg
dec
xchg
jmp
or
jns
jno
mov
jg
outsl
push
inc
inc
mov
cmpsb
mov
or
stos
aam
jecxz
cmp
push
pop
adc
out
xchg
push
sub
je
sbb
fwait
test
jnp
test
xor
xor
outsl
jle
mov
ds
sbb
or
inc
adc
inc
dec
test
pop
xor
mov
std
push
adc
push
dec
ret
mov
mov
push
int3
icebp
mov
jne
daa
jnp
mov
adc
clc
pop
ss
xchg
popf
mov
ficoml
sub
popf
mov
mov
mov
sbb
pushf
jb
xor
sub
mov
adc
daa
out
add
jg
incb
pushf
dec
insb
xorb
pop
ss
cmp
loop
fs
aad
das
xchg
push
lods
dec
in
mov
adcb
mov
and
xchg
std
xchg
sub
cmpsl
jbe
sbb
inc
dec
lcall
call
test
sub
repnz
mov
mov
lcall
pop
dec
dec
loope
es
jg
fldenv
dec
pop
hlt
mov
lret
mov
mov
aas
push
pop
mov
xchg
iret
sbb
mov
mov
popa
popa
pusha
xor
scas
fnsave
and
mov
out
dec
enter
subb
and
xchg
enter
rol
lods
loop
lds
add
mov
xlat
push
mov
stos
lea
jbe
out
mov
sub
ficompl
aaa
xchg
mov
push
mov
push
hlt
mov
and
loope
xor
push
cmpb
out
push
mov
icebp
jo
cmp
push
pop
dec
dec
or
push
sub
jmp
mov
lock
shlb
out
pop
push
arpl
push
ret
int
pop
inc
and
jge
fwait
mov
ja
sub
ret
xor
adc
mov
jnp
push
mov
cwtl
xchg
mov
test
sub
mov
mov
jno
ljmp
sbb
jp
aaa
xchg
ss
or
adcl
cmpb
arpl
sti
jp
mov
repz
mov
xchg
adc
mov
lret
ja
sub
inc
mov
popa
ja
cltd
shrb
adc
cmpsl
lods
mov
mov
add
ja
ret
sbb
inc
mov
mov
xlat
jg
inc
ss
inc
mov
ja
adc
or
xchg
xor
mov
cmpsl
aad
mov
and
mov
popf
bound
push
mov
in
adc
lea
pop
leave
cmpl
jo
int
mov
sub
cwtl
sub
sbb
inc
pusha
enter
xchg
xor
hlt
ficompl
pop
insb
js
cmc
in
ret
gs
sarl
jb
mov
mov
xor
pop
mov
fcmovbe
and
jp
xor
cmc
loop
fildl
or
dec
test
in
xchg
dec
push
pushf
arpl
mov
ds
jge
cld
or
gs
cmp
aas
mov
sub
mov
fwait
or
les
das
sbb
sahf
sbb
pop
inc
jge
flds
rcl
test
xchg
ret
mov
inc
and
adc
xor
stos
or
sub
loop
jne
inc
test
lods
xchg
lcall
sub
leave
sub
cmp
inc
adc
cmp
mov
loope
or
jnp
cs
es
das
or
jle
stc
ficompl
pop
add
push
pop
jmp
mov
shlb
jl
and
xchg
push
xlat
jbe
test
stc
filds
cmp
xor
cmp
les
mov
test
call
mov
and
mov
sub
inc
leave
cmp
aas
inc
xor
rcr
jo
jp
jbe
push
mov
mov
repnz
mov
ja
mov
jnp
sar
mov
filds
dec
cmp
in
imul
lcall
dec
xchg
cmp
jbe
int
lret
subl
ds
addl
lcall
popa
mov
test
cmp
ljmp
xor
sub
mov
sbb
mov
rolb
mov
je
dec
and
nop
pop
adc
daa
lcall
push
push
sub
mov
adc
push
cmp
outsb
je
xor
mov
inc
movb
mov
inc
and
pop
addl
cmp
lods
push
mov
pop
dec
jmp
loopne
cwtl
mov
mov
call
xor
rorl
fwait
jl
ficompl
ja
aam
or
mov
or
or
cmpsb
adc
jmp
jno
and
data16
pop
cmpsl
leave
movsl
in
fadd
insl
pop
xchg
xchg
loope
std
pop
shl
xchg
test
data16
mov
lods
mov
ret
push
mov
clc
ret
sbb
inc
sub
lds
dec
jmp
xor
xchg
mov
ret
sbb
mov
ljmp
inc
lods
mov
jge
sub
mov
shll
xchg
adc
sbb
in
enter
out
mov
push
jbe
inc
stos
cmp
or
pop
and
cmc
popf
add
inc
mov
out
mul
fisttps
ljmp
or
data16
sub
adc
mov
in
mov
and
fbstp
leave
mov
in
inc
out
fisubrs
xor
cmp
jl
clc
shll
adc
push
fcompp
in
push
xchg
out
cmp
jae
push
loop
add
das
enter
and
leave
cltd
mov
or
dec
push
add
xlat
push
les
sbb
mov
mov
push
lcall
mov
xorb
enter
or
pop
push
push
xor
leave
insb
call
inc
ss
daa
std
outsl
pusha
jl
loop
inc
pop
push
mov
pop
push
mov
into
adc
cmp
insb
push
sarb
xor
adc
icebp
add
movsl
and
jl
cmpsl
sbb
adc
pop
popf
mov
cli
jmp
aaa
inc
addr16
inc
xor
pop
imul
adc
addr16
imul
xorb
into
ret
xor
pop
and
add
ds
pop
mov
jg
fldcw
mov
mov
xor
dec
xchg
add
dec
xor
mov
leave
mov
push
inc
lea
icebp
xlat
and
adc
mov
xor
inc
dec
mov
mov
aaa
pop
ljmp
xchg
mov
daa
call
inc
adc
lcall
xor
in
rorb
lret
push
add
out
dec
lods
call
adc
xor
cmp
cs
jecxz
pop
sub
bound
or
fwait
cmc
push
or
xor
xchg
out
mov
mov
fdivrs
je
mov
inc
repz
pop
insl
sub
mov
pop
push
orb
lock
lret
add
sub
lret
adcl
pop
cmpsb
dec
lea
adc
or
stos
and
pop
jbe
movsb
outsl
pop
enter
out
pop
mov
add
xor
dec
adc
mov
sub
mov
sub
mov
fs
aas
jne
pop
inc
ljmp
jg
and
jle
das
sub
lods
cmpsl
fidivs
stos
xorl
xor
and
lock
sbb
addr16
mov
enter
mov
stos
push
push
ficoms
fiadds
xchg
jns
pop
mov
mov
mov
push
sbb
ja
xchg
cmp
pop
cmp
adc
adc
inc
stos
aas
sub
nop
loopne
mov
arpl
push
cmpl
icebp
mov
lods
cmp
popf
xor
ret
lock
fdivrl
adc
lods
mov
imul
dec
mov
fadd
mov
addl
inc
xchg
jo
pop
cmc
or
push
mov
pop
adc
mov
xor
cmpsb
outsl
nop
push
xchg
push
imul
cmp
inc
jp
int3
lock
jbe
leave
popf
push
mov
negl
fiadds
ja
mov
push
test
xchg
in
aas
mov
inc
mov
loop
cmp
mov
movsb
push
pusha
je
or
es
jbe
pop
adc
popa
jl
xchg
sub
das
and
pusha
dec
jno
std
sub
and
pop
xchg
std
mov
cmc
out
popf
sub
jle
fidivl
shrb
pop
push
cmp
lret
test
jecxz
test
addr16
dec
insb
std
shrb
xchg
jne
xor
cmpsb
pop
or
mov
mov
icebp
repnz
or
nop
sbb
enter
pushf
jl
adc
aam
fs
leave
shrb
inc
imul
xor
mov
pop
in
sti
xchg
adc
mov
lcall
dec
xor
jmp
stos
inc
fmul
cmovl
lret
cmc
pop
loope
imul
mov
add
cmpsb
addr16
mov
fsub
mov
gs
js
hlt
jl
clc
fstps
xchg
insb
aaa
push
jp
icebp
or
adc
nop
dec
mov
sbb
bound
int
jmp
lds
fisubrl
int3
cmp
add
call
outsb
es
add
pop
jge
fbld
test
mov
xchg
inc
orl
xchg
adc
mov
xor
adcl
xchg
add
jmp
aam
add
mov
add
lret
in
adc
push
inc
loope
in
mov
lea
push
pusha
sahf
xchg
xchg
sahf
popf
xchg
push
pusha
jbe
mov
and
pop
lcall
inc
pop
dec
sub
mov
mov
adcl
addl
mov
scas
sub
stc
cmp
bound
ss
enter
mov
xchg
rorb
rorl
out
sub
fidivrs
pop
inc
pop
jns
mov
and
mov
lret
in
enter
and
inc
jle
shl
lret
xor
mov
scas
shrl
ss
aad
lock
xchg
mov
das
leave
jg
repz
in
pop
and
testl
sbb
adc
cld
lods
sub
push
mov
mov
pop
cmp
jl
dec
fwait
jge
mov
insl
mov
pop
xor
in
xorl
mov
fs
pop
jl
je,pt
sub
xchg
inc
test
adcb
cmp
stc
mov
sbb
adc
lret
lds
aaa
pop
leave
or
mov
pop
aam
lock
subb
cli
ds
aaa
sub
jo
jecxz
pusha
fstpt
test
mov
xchg
aaa
pop
mov
stc
jns
push
in
sbbb
cli
lcall
mov
adc
adc
adc
cmpsl
xchg
push
push
lods
std
cmovno
addr16
and
add
fisubrl
lret
aam
out
push
icebp
inc
or
fwait
push
add
and
mov
es
sub
popf
add
pushf
subl
inc
or
push
fimuls
inc
adc
mov
daa
mov
lods
lds
leave
pop
pushf
adc
push
lods
into
push
push
cmp
mov
and
xor
push
data16
cmp
cmpsb
jnp
movsl
nop
xlat
inc
pusha
mov
add
jo
fdivrp
and
pxor
inc
pop
jo
pop
or
mov
inc
les
out
pop
outsl
imul
inc
fldl
cwtl
icebp
rcll
mov
lret
enter
aas
push
adc
fidivl
jbe
movsl
inc
shll
fldenv
icebp
add
or
adc
push
add
xor
data16
sbb
and
jbe
push
jmp
aam
adcb
and
xor
call
cmp
jl
xor
cmp
push
nop
sbb
jmp
xor
cmp
mov
shrl
in
lods
pop
adc
xchg
cwtl
scas
inc
ret
mov
push
add
aam
fldl
push
jg
es
addr16
sub
add
or
dec
pop
jp
jae
or
loopne
mov
push
ja
ss
adc
dec
push
jle
fsubrl
cmp
xchg
movsb
xorb
add
pop
andb
and
aam
frstor
jecxz
fists
mov
jecxz
fwait
ret
insb
mov
leave
daa
pop
xor
or
iret
inc
xchg
dec
mov
and
xchg
pop
jmp
jg
mov
sbb
cmpsl
in
and
les
fs
and
add
add
add
subps
enter
xor
fcompl
lock
shrl
jl
out
push
iret
jecxz
jns
test
cmp
pushf
sub
jmp
es
out
fs
ja
aad
add
cmp
cmp
std
and
in
scas
leave
movsl
out
xor
dec
and
fs
push
jp
pop
addr16
push
lods
fistl
mov
mov
sub
cmpsb
xchg
addr16
loopne
jb
sbbl
mov
nop
rep
add
fmuls
inc
xor
fidivs
push
add
movb
mov
in
mov
testb
test
xor
nop
sbb
jmp
push
and
ja
inc
and
clc
gs
mov
leave
daa
push
sub
fwait
push
shrl
xchg
sbb
mov
and
xchg
xor
ret
jmp
sbb
rorl
lret
aam
lods
jmp
push
and
pop
shll
dec
sub
out
arpl
jl
xchg
mov
out
mov
sub
adc
mov
pop
or
cmp
add
sub
jge
inc
dec
les
xchg
sbb
decl
xchg
aam
mov
jle
push
nop
and
cmp
pop
jmp
movsb
adc
cmpl
adc
mov
in
lret
into
mov
jmp
test
cmp
sub
inc
push
mov
add
and
adc
pop
adc
mov
xchg
das
mov
pop
test
xor
fldt
fiadds
andb
lods
pop
sbb
mov
shrl
adcb
fsubrl
das
sub
loop
in
cvtps2pi
jge
inc
mov
xchg
test
ds
jle
mov
sub
xchg
mov
mov
ljmp
push
jmp
xchg
loop
cmc
in
mov
jl
jmp
ficoml
push
movsb
cmpsl
ss
jnp
xlat
dec
mov
pop
sbb
pop
insb
jns
cmp
rcll
push
cmp
cld
mov
data16
mov
mov
sbb
xor
sti
mov
xchg
sub
fdivrl
jne
mov
add
mov
test
sub
test
sbbl
or
js
sub
sub
aam
mov
shrl
inc
xchg
xor
insl
push
pop
bound
xchg
icebp
push
mov
jne
xorl
mov
jbe
xchg
mov
in
test
and
add
enter
call
in
fcoms
pop
mov
xor
lret
rol
inc
rclb
aam
pop
ljmp
movsb
roll
cltd
mov
lods
ss
mov
shld
pop
mov
test
adc
xor
or
je
movsl
int
add
lods
cli
test
sub
push
out
in
inc
add
mov
scas
mov
xor
push
push
insl
sub
push
pusha
cmp
pusha
cmp
sbb
ljmp
clc
adc
jecxz
test
pop
nop
nopl
mov
xchg
divl
cmp
in
and
add
outsb
mov
out
notl
xor
mov
sbb
mov
scas
push
enter
lock
lea
mov
inc
cltd
cmpsb
daa
mov
cmp
push
dec
adc
insl
shll
pop
lods
pop
jbe
fwait
aad
mov
das
loop
dec
add
and
inc
adcb
xchg
jo
cld
mov
addr16
mov
pop
xor
and
and
je
and
popf
xor
jle
in
sbb
cmp
lods
jmp
lods
repnz
adc
xor
jae
sub
lret
out
xor
dec
sub
push
push
or
mov
fcoms
inc
push
cmp
xor
outsl
adc
xchg
adc
roll
lret
bound
cmp
hlt
mov
and
mov
jg
lea
inc
push
out
mov
in
lock
sbb
in
xor
jae
push
aam
movsl
xchg
insb
xchg
jmp
into
das
std
cmp
add
int
push
sahf
pop
flds
xchg
enter
sar
stos
nop
adc
nop
fstpt
pop
xlat
push
repz
sub
inc
mov
and
cs
lods
push
inc
jmp
es
dec
scas
stos
mov
xor
imul
cltd
xor
ja
sti
cwtl
mov
xor
pop
xchg
std
lds
push
pop
sub
lret
sbb
adc
inc
and
lret
repz
js
in
pop
out
outsb
shlb
aaa
pop
popf
sub
dec
xor
mov
xor
in
cmp
sub
and
xchg
lods
jbe
mov
ja
cmpl
enter
jp
shll
lods
mov
mov
ds
call
fisttpll
fs
add
or
aas
icebp
in
cli
jl
pop
lea
push
xor
add
lcall
cli
cmp
mov
mov
movb
stos
daa
insl
jo
mov
xchg
push
jge
dec
sti
and
mov
cmp
inc
adc
fisubrs
lret
pop
sbb
dec
cwtl
mov
stos
jge
inc
dec
into
addr16
es
mov
sahf
pop
sbb
test
or
int3
sbb
adc
push
jno
aam
mov
add
out
les
es
mov
sahf
in
pop
xchg
lods
xorl
les
jmp
bts
jae
stos
push
mov
jg
xor
pushf
or
lods
fs
in
or
outsb
sahf
adc
shrb
lea
loop
xor
pop
stc
or
dec
imul
scas
fists
inc
inc
sub
cmp
dec
ja
in
imul
aam
in
in
cmp
pushf
adc
xchg
lret
lods
cmp
push
dec
cltd
outsb
mov
adcl
mov
push
jno
movsl
sbb
jae
je
mov
adc
cmc
add
mov
jne
adc
popa
mov
xchg
push
mov
cmp
sbb
mov
movsl
push
jl
ja
add
xchg
leave
roll
in
notb
adc
sarl
pop
scas
mov
movsl
out
pop
adc
pop
repnz
ds
mov
sub
in
cmp
ds
cmpsb
xor
fucom
imul
push
lds
mov
rcrl
jl
xor
or
mov
dec
iret
dec
cmpsb
or
mov
push
in
ss
mov
ss
ret
xor
out
push
pushf
dec
pop
jb
lock
lds
xchg
and
gs
out
sbb
mov
push
lock
loopne
dec
ja
adc
inc
mov
pop
and
cmp
cmp
loopne
cmp
sub
sub
mov
mov
mov
mov
ja
jg
cwtl
inc
push
inc
test
in
out
xchg
sbb
enter
sub
adc
orl
pop
inc
in
mov
pop
lret
nop
scas
sub
test
in
mov
aaa
mov
adc
stos
add
jno
push
clc
fstl
dec
mov
add
inc
inc
cli
insb
lcall
jecxz
cmp
lret
inc
push
lcall
scas
ja
test
dec
enter
mov
les
test
sbb
imul
in
xor
icebp
cmpb
lea
or
scas
pop
sbb
das
test
push
mov
outsl
dec
cmp
or
outsb
ret
jmp
repnz
ret
or
outsb
mov
and
or
aas
adc
sub
jle
sti
jne
push
dec
sarl
out
je
add
repz
dec
jne
pop
mov
loope
mov
xlat
pop
inc
inc
mov
clc
dec
lret
cmpl
out
es
test
nop
je
dec
ss
jo
imul
cmp
dec
scas
mov
sub
mov
int3
and
xor
es
lock
into
add
mov
mov
mov
ljmp
add
outsl
xchg
mov
push
into
lods
push
fmull
int3
xor
repz
fs
mov
enter
adc
test
lret
das
jge
hlt
ljmp
and
adc
push
inc
adc
adc
aas
xchg
mov
push
insl
movsb
lahf
shll
or
outsb
int
push
popf
dec
pop
mov
pop
adc
test
sti
xchg
int3
add
adc
jp
into
inc
push
insb
fidivrl
add
fs
out
pop
pop
jno
scas
ret
or
xor
mov
xor
mov
ret
or
dec
mov
cld
sub
das
xor
mov
and
pop
int
push
vorps
mov
cwtl
sub
jb
mov
iret
in
push
adc
sub
lock
or
in
push
sarl
mov
add
pop
mov
cmc
jne
and
push
push
movsb
sbb
mov
dec
shlb
push
fsts
lret
das
adc
or
test
push
dec
das
cli
aas
ficomps
xor
insb
xchg
fldenv
mov
push
decl
pop
and
loope
and
jmp
cmp
mov
adcb
je
and
adc
mov
loop
xor
fwait
push
enter
mov
fimull
jle
leave
nop
sbb
addb
add
inc
jl
sub
lock
mov
xchg
lds
push
dec
ds
jl
pushf
jbe
outsb
imull
and
mov
lret
nop
fabs
insl
sti
lret
jb
or
sbb
aas
ja
mov
rolb
in
mov
mov
clc
push
mov
subb
push
pushl
into
sarb
je
ljmp
push
es
mov
test
sub
into
sbb
sub
mov
andl
ja
lea
add
inc
push
test
xor
cmpsl
pop
xchg
jl
and
aaa
add
orl
mull
mov
aam
test
cmp
in
jns
mov
adc
adc
ret
add
dec
sbb
clc
mov
lods
mov
test
mov
or
jecxz
and
sti
jns
pushf
add
pushf
iret
or
ss
rcll
lret
hlt
das
adc
icebp
mov
sub
pop
xchg
std
pop
push
push
mov
pop
push
mov
out
sub
gs
xorb
ds
pop
popa
mov
mov
push
mov
data16
out
adc
aas
roll
aad
pop
adc
test
scas
jg
xor
ficompl
rclb
add
aad
js
inc
insl
jnp
fstpt
xor
rolb
xor
cmpsb
jmp
lahf
test
sub
das
adc
es
mov
mov
push
arpl
ss
pushf
aaa
jmp
mov
iret
xchg
ret
repz
addl
push
add
scas
cld
xor
scas
cmpsl
xor
outsb
inc
mov
mov
pop
fstl
inc
jp
cld
scas
push
jecxz
test
jl
in
loop
rcll
push
push
or
lods
jmp
mov
push
aad
addr16
in
jp
dec
jns
imul
mov
scas
inc
xchg
lret
pop
and
cmc
cmp
mov
cmpl
mov
clc
dec
hlt
adc
int3
ret
mov
or
sbb
lock
ja
nop
xor
push
inc
addr16
call
dec
jle
inc
into
cmpsl
aas
daa
fcomp
mov
je
xor
sub
fbld
aad
stc
adc
insl
sub
fadd
lahf
sub
pop
dec
jb
mov
mov
cltd
mov
cmp
lcall
xor
fldenv
add
dec
in
ret
or
scas
mov
fisttpl
lods
daa
xchg
xchg
mov
mov
lods
in
xchg
xor
test
mov
test
je
std
mov
inc
mov
mov
sub
pop
stos
gs
hlt
mov
jl
outsb
inc
xchg
adc
sti
in
fs
orl
jg
insl
das
inc
adc
scas
mov
push
mov
mov
in
sub
loop
mov
mov
dec
daa
outsl
and
pop
pop
cmpsl
or
and
insb
subb
daa
stos
lods
lret
in
inc
jb
add
icebp
mov
mov
mov
push
or
mov
ja
jp
in
adc
pushf
mov
faddl
imul
loopne
and
incb
cmp
outsl
inc
imul
lock
adc
fwait
or
ss
pop
in
mulb
xchg
ja
fldcw
and
jbe
addr16
fdivs
shr
das
mov
inc
sub
push
or
jp
popf
add
vunpcklpd
sub
cmp
fistpl
pop
insb
mov
mul
iret
pop
or
mov
xor
out
ds
xchg
mov
cmp
push
mov
xor
sbbb
pop
sub
jmp
sub
fsubrl
push
xor
mov
enter
mov
mov
mov
hlt
mov
je
mov
lds
add
pop
jno
sbb
cmp
orl
mov
or
push
push
jnp
das
ds
pop
aaa
daa
pop
xlat
scas
add
adcb
mov
rolb
data16
inc
out
ljmp
das
xchg
xor
in
jge
xor
pop
popf
mov
orb
enterw
dec
in
push
fnsave
xchg
cmp
fcmovbe
fistl
leave
cmp
movsl
lea
inc
push
and
and
mov
mov
in
jle
jmp
push
sub
and
adc
jmp
out
sbb
lock
add
ljmp
test
ja
das
sub
inc
pop
leave
out
stos
or
mov
push
sub
mov
ss
inc
xor
and
mov
dec
enter
sbb
fstpl
dec
xor
xor
loope
or
inc
jl
sbb
loopne
ret
ja
push
cmp
jno
test
inc
add
lods
mov
aas
sbb
adc
pop
sbb
stos
push
xor
hlt
testb
xchg
inc
adc
or
pop
aam
enter
ljmp
pop
jmp
sarl
pop
xchg
lret
leave
inc
mov
loopne
hlt
adc
adc
sbb
adc
sbb
adc
ljmp
loop
add
imul
or
popa
jg
test
xchg
subb
in
cmpsb
mov
scas
aaa
or
popw
push
pop
pop
mov
mov
mov
cmp
sbb
fmull
push
mov
lret
pop
adcl
push
mov
xchg
les
pop
cli
adcl
sbb
cmpsl
in
mov
stc
jbe
dec
xchg
inc
sbb
out
das
popa
push
mov
test
inc
mov
js
push
sbb
test
add
mov
out
ret
jno
jo
es
dec
stc
adc
pop
pop
sbb
push
call
pop
xchg
nop
ret
test
lock
xlat
xor
push
sub
pop
adc
push
fsubr
jle
adc
add
mov
sbb
addr16
pop
adc
dec
sub
mov
lods
push
daa
push
cmpsl
mov
dec
pop
xchg
ljmp
mov
mov
inc
outsb
iret
fs
popl
xchg
out
or
outsl
mov
fadds
adc
js
or
xchg
inc
test
aad
pop
adc
mov
clc
fdivrl
sarl
jno
sbb
sbb
push
pop
testl
inc
loope
xchg
gs
fwait
sahf
loop
insb
lret
scas
mov
xlat
popa
cmp
jle
mov
mov
je
mov
inc
mov
push
sbb
push
sub
lds
pop
mov
ds
pop
and
dec
insb
mov
push
or
cmp
jmp
das
mov
popf
lcall
mov
ljmp
mov
xlat
push
mov
push
insl
cli
xchg
xor
pop
test
push
sub
lret
xor
ljmp
cld
test
hlt
xchg
mov
jmp
push
pop
mov
hlt
imul
cmp
sub
mov
xor
cld
cld
mov
mov
xor
divps
mov
sbb
inc
lahf
in
lods
xor
cltd
adc
idivl
cmp
mov
adc
jge
insl
adc
mov
or
push
jne
jp
and
scas
sub
or
pop
mov
lcall
aaa
push
mov
push
cmp
das
and
cmp
notl
jg
adc
clc
shrb
int
inc
pop
jmp
lea
in
test
push
dec
sub
mov
adc
add
shll
daa
fcmovu
dec
mov
test
scas
sub
cmc
das
pop
dec
sahf
repz
xchg
mov
jl
pop
lret
xor
mov
adc
jle
xor
ret
ljmpw
in
aaa
jb
adc
pop
xor
pop
dec
jb
stc
andb
into
inc
or
pop
in
mov
jne
jne
fiaddl
xlat
sbb
orb
xor
mov
pop
mov
sbb
movsl
insb
mov
bound
aas
jg
sbb
push
push
sbb
jae
sub
ljmp
mov
dec
aad
ss
mov
lcall
xchg
jbe
sbb
pop
stos
inc
wrmsr
fldl
in
and
shr
repnz
scas
shrb
cltd
pop
mov
add
mov
mov
call
cmp
adc
and
fbstp
inc
movsl
xchg
xchg
fmul
call
jnp
pop
pop
adc
insb
js
or
pop
stos
sub
das
sbb
das
out
and
mov
sbb
shl
jg
cmp
fs
out
xor
xchg
inc
stc
lods
sub
les
and
mov
scas
imul
mov
adc
subb
pop
orl
pop
rcrl
add
movsl
push
ljmp
pop
mov
mov
movsl
add
sub
jne
inc
pop
xor
test
mov
cmpl
push
loope
fs
movsl
inc
ret
inc
jnp
sarb
insl
aaa
out
lahf
insl
ljmp
lods
lods
sub
xchg
mov
arpl
adc
adc
xchg
xor
hlt
lea
xor
pop
shlb
lods
lret
push
xor
aaa
mov
mov
loopne
iret
pop
adc
and
mov
dec
push
sbb
adc
clc
dec
jo
adc
cli
fwait
inc
or
adc
lods
mov
push
mov
add
ja
sbb
into
imul
pusha
xchg
inc
lock
lahf
fwait
add
dec
dec
jg
mov
loop
sbb
adc
js
fimuls
aaa
in
lock
sti
test
lods
pop
mov
rorl
inc
xlat
jo
and
mov
pop
scas
mov
or
aam
rcl
and
bound
push
int3
fwait
ds
jno
stos
daa
rcrb
jl
test
arpl
jmp
pop
sbb
out
out
cmp
aaa
sub
fnstenv
cmp
dec
xor
or
cmpsb
orl
mov
cmp
aam
sub
and
out
xchg
jns
lcall
aaa
jl
scas
in
mov
add
rclb
andl
push
mov
sub
fcomip
push
cmpsl
mov
jle
lods
add
cmpl
pop
cld
fs
movsl
mov
and
inc
push
dec
scas
adc
jbe
mov
inc
lods
hlt
mov
mov
mov
andl
xor
jmp
ja
or
dec
andl
mov
lea
es
cmpsl
stc
ss
popf
cmpsb
inc
insb
sbb
jbe
cmc
push
dec
mov
jg
fidivrl
loopne
fisttps
cmp
outsb
mov
fcom
out
mov
jbe
lcall
xchg
into
xchg
sbb
inc
shl
mov
inc
in
insb
xchg
jmp
or
xor
jbe
inc
rcrl
inc
mov
jecxz
sbbb
push
jbe
pop
mov
xchg
jge
movsb
pop
fwait
sub
test
and
sbb
fnstcw
pop
scas
dec
adc
xchg
imul
pop
out
cmp
sub
lods
mov
stos
ret
push
rorl
rolb
out
in
cmp
xor
ljmp
mov
xchg
and
cmpsl
out
aam
push
sub
sub
call
xor
add
into
out
lret
add
xchg
rcll
add
inc
jp
out
xor
aam
xchg
adc
adc
jecxz
sbb
xchg
jne
cmp
pop
sub
mov
dec
or
cmp
adc
insb
jmp
cmp
fisubs
jle
push
das
mov
in
inc
jmp
cmpsb
test
jmp
pop
loop
and
lods
jns
adc
jnp
xor
xor
or
jno
enter
cmpsb
jp
mov
repz
in
test
pop
arpl
mov
fwait
jbe
push
sub
cmc
xchg
test
sbb
movsl
in
sarb
inc
adc
xor
loopne
pop
jnp
push
add
lret
mov
aaa
xchg
fs
arpl
aam
mov
jp
push
testb
stc
xor
lcall
aaa
ds
and
cmp
mov
jns
out
fucompp
mov
sahf
out
ss
frstor
inc
push
jecxz
lea
and
adc
xchg
sahf
scas
stos
cmp
mov
cmp
add
mov
xor
sarb
or
cmpsl
test
ja
inc
loope
xchg
add
enter
loope
sbb
adc
push
mov
outsl
xchg
adcl
test
in
aaa
cmp
mov
dec
or
dec
in
sahf
gs
out
jl
inc
adc
sbb
xchg
fiaddl
push
stos
faddp
push
or
pop
in
mov
pop
lret
ficomps
and
das
mov
or
jg
xchg
cmp
mov
mov
outsb
inc
adc
jnp
aad
sub
insb
push
adc
mov
movsb
inc
mov
inc
cmp
scas
and
and
jmp
sub
lds
call
enter
xchg
mov
jmp
in
xor
dec
insl
mov
js
je
les
daa
inc
dec
xor
sti
rcl
dec
jecxz
xchg
sbb
mov
adc
cmp
mov
pop
scas
and
mov
fisubl
inc
js
jge
pop
inc
in
cwtl
or
adc
in
lods
mov
xchg
mov
insb
mov
popf
popf
adc
mov
adc
dec
in
xchg
sbb
push
push
and
push
xchg
mov
das
xchg
cmc
mov
push
xchg
dec
sbb
cmp
data16
cmp
jle
aas
loope
shl
push
fwait
push
mov
cmp
xchg
cwtl
jmp
or
mov
bound
hlt
in
aam
outsb
adc
out
adc
adc
xor
shlb
sbb
and
jg
aaa
xor
and
test
dec
or
cmp
push
cld
int3
and
sub
movsl
ds
hlt
sub
outsb
outsb
shll
adc
das
add
in
fildll
cli
in
push
in
push
xchg
lahf
xor
lock
les
xchg
sahf
je
orl
push
xchg
lahf
ret
mov
xchg
xor
ljmp
jle
mov
push
ret
test
push
sbb
xor
imul
sub
add
test
mov
sub
pop
fwait
lahf
stos
mov
cs
mov
pop
xchg
loope
andl
cmpsb
push
test
scas
mulb
sbb
pop
mov
push
jg
or
pop
leave
jo
pop
and
ja
sub
push
cs
cwtl
sbb
stos
xchg
xor
jbe
mov
test
push
jge
push
aaa
je
jmp
fiadds
xor
mov
mov
scas
push
mov
sub
sub
loope
cmpsl
fdivrs
push
cwtl
jb
adc
cwtl
sbb
jnp
es
std
hlt
in
test
mov
dec
xchg
shrl
xchg
lock
std
lock
dec
xchg
ret
jo
sub
push
insb
jnp
lods
pop
aaa
aas
fildl
dec
adc
int3
adc
imul
test
xchg
fwait
aam
or
lcall
adc
in
pop
pushf
mov
outsl
xor
xchg
mov
rcl
fisubrs
mov
leave
mov
int
pop
fildll
stos
fldenv
pop
pop
lret
imul
adcl
cmp
addr16
in
ja
ss
jl
pop
lods
aaa
mov
dec
enter
cmp
ret
xchg
cs
mov
fcmovb
pop
xlat
stos
xor
test
lret
repnz
mov
insb
loope
ljmp
sbb
sbb
dec
adc
lea
movsb
scas
push
mov
xchg
pop
mov
dec
int
sbb
neg
sub
rclb
shll
jb
xchg
rorb
pop
or
inc
pushf
push
add
lret
scas
out
fcmovnbe
daa
dec
cltd
pusha
adc
sahf
sbb
xchg
iret
cs
pop
je
adcl
fildl
sub
incl
or
shlb
gs
jmp
inc
les
jle
data16
add
mov
ficoms
dec
adc
dec
out
nop
adc
mov
pop
or
push
test
pop
or
sub
xor
mov
xor
adc
stos
mul
lock
mov
push
iret
js
dec
jl
xchg
cli
push
inc
repnz
pop
jmp
xlat
insl
in
mov
aas
push
ljmp
in
dec
movsb
xchg
leave
ja
fsubrl
jecxz
pop
leave
icebp
and
testb
adc
push
movsl
fcmovne
xchg
ja
mov
testl
int
mov
fmull
pop
in
cmc
mov
mov
in
subb
xor
jg
loope
jmp
xchg
cwtl
pop
push
jle
js
adc
pop
add
std
outsl
sbb
add
pop
push
dec
xlat
leave
aas
out
out
std
pop
shl
cmp
cs
sbb
orb
mov
mov
aas
cmpl
mov
jl
fdivp
ljmp
xchg
addl
fwait
sub
lock
rolb
mov
scas
jge
in
testl
inc
mov
adc
cmp
js
mov
in
add
and
mov
lods
jp
cld
inc
adc
popa
aam
dec
xadd
test
repnz
inc
sarl
push
mov
and
lahf
sub
or
push
aad
cmc
inc
mov
push
ss
aam
or
jecxz
sbb
inc
loop
pop
mov
mov
inc
roll
or
nop
adc
push
push
add
addr16
das
in
push
cmp
xchg
dec
data16
in
inc
enter
sbb
xor
sahf
movsl
jbe
inc
fisubrl
jg
les
sbb
sbbb
jmp
jo
sbb
pop
mov
mov
ret
cmp
sbb
push
dec
xchg
jo
fwait
jecxz
xor
adc
test
xor
inc
adc
aam
and
fidivrs
out
bound
ja
pop
jge
fists
out
adc
dec
cmc
mov
and
cmpl
xor
sahf
mov
xchg
aas
pop
push
jp
in
jnp
icebp
and
mov
mov
mov
in
mov
fistpl
jle
mov
cmp
cli
mov
sbb
push
mov
movsl
sub
mov
xor
mov
sbb
jmp
pop
push
cs
mov
adcb
outsb
lods
sarb
daa
sub
add
inc
adcb
cmp
xchg
or
pop
xor
addr16
test
es
cmp
jmp
in
jmp
ds
dec
jle
out
lock
xchg
mov
adcl
mov
out
mov
out
pop
adc
out
mov
dec
lahf
in
mov
iret
ds
mov
mov
mov
cs
jnp
mov
xchg
jno
jo
dec
adc
adc
or
cmp
mov
dec
push
sub
add
push
stc
rol
jnp
mov
dec
adc
push
insl
loope
xchg
add
sbb
push
cmp
mov
xchg
mov
jecxz
mov
hlt
xchg
dec
jecxz
mov
test
sub
mov
call
inc
pusha
out
andl
ss
mov
jg
pop
insb
addl
push
cld
hlt
or
sub
push
in
inc
push
in
sbb
xchg
dec
enter
adc
aas
sub
pop
loop
data16
xchg
pop
sub
lods
adc
add
les
mov
mov
jmp
or
andb
cmc
repnz
fsubr
add
insb
enter
push
insb
mov
jmp
adc
push
cli
push
xchg
ljmp
pop
popa
sub
mov
leave
pop
imul
cmp
push
cmp
leave
push
in
popa
push
pop
aaa
mov
mov
es
xchg
dec
cmc
pop
cwtl
out
ret
std
jmp
das
ret
inc
lea
mov
cltd
adc
std
or
sbb
stos
inc
pop
je
xlat
mov
shll
shrl
xchg
lods
cmp
mov
push
lods
xchg
jnp
repz
or
nop
mov
inc
into
es
sbb
test
in
push
cmp
inc
lea
cmc
push
aad
or
js
xchg
sbb
adcl
insb
enter
add
dec
fwait
adc
fiaddl
jbe
fiaddl
les
mov
xchg
stos
ret
push
xchg
or
fildl
scas
aam
add
cwtl
stos
test
ss
and
pop
jl
ds
ja
fildl
sub
sti
inc
adc
jae
test
sbb
adc
cmp
xchg
idivl
pop
xor
sbb
xchg
clc
rol
pop
lods
and
cmpsb
mov
push
pop
orb
arpl
inc
adc
cmp
fistl
xor
lret
sub
and
lods
xchg
push
jae
jnp
call
jb
data16
adc
shl
dec
aam
mov
mov
ficoml
jg
xor
sbb
les
sar
roll
mov
mov
xchg
mov
or
cmp
sub
dec
insb
sub
stos
cmp
push
mov
add
cmpsb
xor
sbb
cld
cld
orb
paddusb
sub
cmp
insb
mov
rcrb
mov
sub
mov
sti
adc
mov
mov
mov
insl
mov
cmpsb
xchg
lret
jmp
xchg
add
push
mov
in
clc
lock
in
cs
mov
outsb
je
into
ss
push
ret
test
jb
adcb
dec
push
pushf
insl
xchg
cmp
mov
scas
inc
mov
dec
aas
sub
cmc
ficoms
mov
and
xchg
mov
popa
jno
das
out
push
mov
xchg
sar
jo
mov
mov
mov
sbb
push
mov
sub
repz
push
fidivs
push
xor
mov
push
sbb
adc
and
cmp
mov
dec
xor
xchg
sub
and
mov
lock
cmc
cmpsl
sub
arpl
sub
lds
lods
xor
stc
les
adc
adc
mov
push
pop
je
lahf
inc
and
pushf
in
and
jmp
jns,pn
mov
dec
sarl
xlat
arpl
cmc
mov
mov
pop
pop
movsl
inc
rcrl
into
idiv
dec
imul
push
movsl
divl
jns
jecxz
sbb
and
push
pop
pop
cld
js
xchg
cmpl
mov
leave
add
pop
xlat
cmpsb
sarb
dec
xor
pusha
pop
pushf
les
out
divl
mov
and
ds
outsb
xor
mov
inc
lds
mov
xor
adc
mov
push
ss
mov
mov
and
push
leave
sbb
flds
jae
adc
pop
push
scas
ret
fs
mov
ds
cmp
dec
push
push
daa
cmp
pop
out
push
push
repnz
fdivrs
jge
mov
cmp
jmp
jecxz
ljmp
fs
and
pop
mov
pushf
pop
shrb
jne
push
or
jmp
pop
inc
and
mov
ljmp
sub
dec
mov
jb
adc
jge
mov
sub
sbb
mov
adc
pop
jnp
fmull
fcoml
enter
xchg
sub
out
sbb
rorl
das
out
aaa
lods
xchg
adc
jecxz
or
in
sub
mov
and
pop
adc
cmpl
dec
fs
in
flds
mov
clc
adc
mov
sbb
mov
les
lcall
pop
mov
les
push
jb
sub
cltd
into
mov
xlat
adc
pop
dec
lea
imul
jbe
aaa
mov
mov
cmp
jnp
pop
enter
pop
and
push
xor
or
sub
xlat
fldt
mov
push
push
mov
xlat
xchg
jb
or
mov
lock
add
cmp
into
mov
xlat
pop
inc
in
fisttps
xchg
shll
stos
int3
or
push
adc
insl
imul
fsubr
roll
sub
fdivrl
loop
imul
mov
nop
mov
inc
fs
sub
jp
inc
xor
push
addr16
adc
cmpsl
ss
inc
sub
icebp
pop
pushf
out
xchg
or
leave
loope
cld
test
and
fisttpll
enter
sti
xchg
sbb
imul
add
xor
pushf
lods
jl
push
orb
pop
mov
rol
mov
mov
lahf
dec
aaa
lods
fcoml
jl
push
ret
inc
mov
aaa
adc
in
mov
and
sub
mov
popa
ja
out
cmc
fidivrl
mov
push
mov
adc
clc
pop
push
mov
scas
das
orl
arpl
test
and
negb
rorl
mov
ja
mov
mov
xchg
mov
cmpsl
sub
scas
stc
mov
xchg
pop
mov
leave
and
shlb
mov
data16
sub
xchg
adc
das
add
push
out
nop
or
call
ljmp
loop
adc
pop
inc
inc
xor
xchg
or
sbb
sub
imull
das
inc
call
mov
ja
hlt
insb
mov
ja
sub
mov
ror
mov
or
xchg
xor
fcmove
pop
punpckhdq
and
daa
inc
sub
jl
mov
mov
push
mov
jle
mov
jo
data16
add
out
pop
mov
popf
mov
mov
test
xor
sub
rcrb
mov
xchg
xor
xor
lahf
xor
pop
into
sbb
aas
mov
insb
sub
mov
das
jb
dec
sub
pop
jp
xor
push
xlat
call
adc
sub
adc
or
das
aaa
repz
mov
sub
xor
xchg
push
sbb
leave
add
mov
movsl
cwtl
ss
adc
test
std
aad
mov
leave
xor
fidivl
adc
fldenv
or
stos
sbb
jmp
inc
ja
fistl
int3
or
push
xrelease
movsl
aaa
ja
xor
mov
and
sti
mov
add
outsl
in
cmpsb
xchg
or
push
icebp
adc
xor
mov
sub
cwtl
xchg
enter
jg
pop
nop
mov
leave
scas
out
popf
insl
mov
fldl
in
sti
sbb
in
ret
ret
stos
fimull
inc
or
fdivl
adc
mov
and
les
or
pushf
pop
orl
fisubrl
andb
push
inc
ficompl
or
xchg
in
nop
aas
mov
jmp
dec
ret
add
adc
lods
scas
js
cmpsb
adc
inc
and
insb
xchg
xlat
mov
cmp
jbe
daa
insl
jg
xor
imul
xchg
mov
xor
shl
add
daa
push
clc
and
or
adc
cmp
int3
dec
cmc
mov
push
dec
xor
adcb
mov
outsb
jbe
call
ficomps
jmp
lods
mov
push
jnp
xor
and
mov
mov
push
lahf
pop
adc
adc
mov
stos
xorb
mov
dec
jo
cmpsb
inc
scas
pop
unpcklps
lock
pusha
cmp
out
xor
rep
pop
test
mov
lret
js
lods
je
mov
dec
or
popa
loopne
in
xor
das
sti
lods
movsw
inc
je
mov
daa
sahf
sub
cvtps2pi
mov
inc
fs
adc
in
out
ds
fsubl
lds
scas
mov
test
mov
jecxz
mov
mov
push
leave
mov
mov
jmp
cli
mov
int
add
std
adc
add
int3
adc
dec
gs
in
jecxz
adc
leave
dec
push
jb
push
nop
inc
fcoml
mov
rcrb
dec
dec
pop
cmp
popf
mov
inc
dec
aaa
in
mov
mov
add
pop
loop
jno
xchg
insb
scas
enter
insl
or
cmp
test
cmp
daa
call
test
xchg
adc
mov
inc
leave
pushf
adc
mov
xchg
sub
mov
pop
aam
jp
outsl
cmp
cld
xor
push
in
roll
fimuls
repnz
or
adc
in
icebp
insl
loope
shrb
jmp
out
sub
push
add
xchg
pop
jae
mov
adc
xchg
jo
fcmovnb
and
in
xchg
sbb
sub
or
cmp
jno
fisttpl
xor
sub
repz
inc
xchg
inc
mov
and
lds
or
adc
adc
jecxz
imul
std
xor
jne
stos
mov
aas
fcmovu
pop
aad
aas
mov
lods
adc
adc
in
pop
repnz
lock
mov
push
shlb
dec
xor
cmpsb
insb
xchg
mov
jge
xor
push
xchg
aas
pop
pusha
dec
sbb
mov
sub
mov
jecxz
jmp
jno
cmp
pop
push
stc
hlt
nop
xor
mov
adc
imul
add
out
ret
cmp
jno
sbb
scas
loopne
cmp
aaa
push
xchg
lahf
jecxz
jl
lods
lahf
sbb
push
cmp
lock
xchg
or
mov
sarl
and
shl
cmp
mov
neg
cmp
and
cmp
cli
xor
push
movsl
cltd
cmp
sahf
scas
cmp
pushf
stos
das
sbb
cmp
xor
inc
xchg
mov
add
xor
add
sub
sub
dec
fwait
popf
sbb
push
cmp
dec
inc
mov
test
push
popf
pop
cmp
and
aam
inc
movsb
cmp
outsl
jne
out
or
lock
and
cmp
add
mov
cmp
cmp
jg
int3
adc
lret
and
push
dec
mov
mov
push
cmpsl
pop
cmp
outsb
pop
mov
mov
aas
popf
cli
outsl
xor
scas
cmp
jne
dec
push
push
insb
pop
inc
pop
dec
mov
jmp
cmp
ja
cs
movsb
call
xor
in
cmpsb
cmpsl
cmp
ficoms
xor
dec
lds
or
cmp
lock
cmp
lea
cli
cmc
pop
jbe
popf
mov
xor
lret
mov
pop
dec
lods
cli
jnp
out
mov
icebp
fcom
int3
shrl
rol
push
popa
jo
cmp
sbb
pushf
sbb
dec
or
faddl
jb
xchg
add
sub
and
lods
movsb
psubsw
cmp
cmp
sbb
nop
mov
jmp
cmp
imul
nop
cmp
cmpb
dec
popl
insb
cmp
cwtl
cmp
lcall
push
push
aad
repz
cmp
sahf
mov
ja
pop
cmc
cmp
or
adcb
or
dec
push
int
dec
insl
gs
insb
inc
loop
mov
and
jle
xlat
or
stc
add
shlb
jne
and
pop
mov
inc
aad
or
fistpll
xlat
fs
jne
cwtl
lods
mov
test
jb
inc
pop
pusha
cmp
add
testl
dec
repnz
mov
lcall
push
push
dec
sub
dec
add
insl
jg
cmp
ljmp
mov
and
add
xor
scas
pop
add
dec
mov
clc
jle
push
lods
add
lahf
mov
push
fwait
and
pop
fucomp
inc
lods
jne
arpl
sub
mov
jp
and
xor
fldt
jne
sub
add
cs
andl
sub
adc
lahf
cmp
in
mov
xchg
push
mov
cmp
icebp
pop
outsb
repz
and
xchg
scas
lahf
inc
adc
mov
dec
mov
adc
cmp
xchg
fldl
push
lods
pop
cmp
imul
push
and
movnti
jp
sbb
pop
push
pop
cmp
nop
and
bound
sbb
push
and
add
movsb
insl
test
int
insb
dec
test
xchg
cmp
in
cltd
nop
mov
inc
cmp
mov
cmpsb
and
mov
cmp
andb
pop
and
ss
mov
cmp
mov
in
movsl
mov
or
std
mov
dec
hlt
outsb
arpl
dec
inc
fcompl
sbb
adc
or
add
xchg
and
pop
pop
aam
mov
cs
lret
sahf
sbb
aam
mov
and
dec
gs
and
cmp
cmpsl
fcmovne
mov
ror
mov
sbbb
jae
xchg
mov
xchg
pop
dec
fs
dec
mov
and
leave
lock
push
int3
ljmp
mov
mov
cmp
insl
push
sti
xlat
int
cmp
nop
cmpsl
gs
cmp
cmp
cmpsb
outsb
imull
mov
dec
or
push
jg
cmp
mov
adc
dec
push
adc
gs
cmp
push
insb
or
cmp
int
fldl
cmp
mov
cmp
cld
push
out
jmp
rorl
ljmp
mov
push
adc
pusha
inc
cmp
roll
mov
or
sub
js
mov
or
add
orb
out
fwait
ret
or
outsl
sub
mov
pop
sub
mov
ret
movsb
sub
cmp
add
enter
sahf
mov
repz
loope
mov
movsb
and
data16
jmp
cmp
sbb
xchg
xor
dec
push
or
sbb
jo
push
pusha
cs
test
sub
jmp
cmp
pop
sbb
jno
xor
hlt
vpmulhuw
cmp
cmp
sete
cmp
xor
or
jb
xchg
inc
push
addl
mov
cld
sti
outsl
lds
dec
loopne
xor
aaa
fstpt
and
cs
decb
inc
loop
shr
jle
mov
pop
dec
cmp
or
xor
jne
cmp
add
into
xor
mov
lods
inc
insb
ljmp
cld
sarl
mov
cmpsl
pop
push
scas
cwtl
in
pushw
test
outsb
mov
or
jecxz
test
adc
fwait
fs
cli
cmp
fbstp
in
inc
sub
push
cmp
mov
loop
rorl
mov
cmp
stos
sbb
ret
aas
cmp
test
push
mov
insl
mov
sbb
cmp
jb
rep
gs
sahf
es
cmp
sbb
rclb
inc
mov
jge
cmp
or
add
xchg
or
xor
fmuls
mov
in
sbb
xor
insl
push
push
mov
mov
sbb
push
imul
pop
dec
mov
pop
sub
sbb
add
gs
loope
outsl
xchg
push
cmp
add
mov
add
fwait
xchg
lcall
icebp
into
mov
sub
cmp
xor
jae
dec
or
mov
dec
insb
push
in
add
cmp
add
xchg
cmp
jl
pop
cmp
pop
sbb
cmp
stos
test
js
jg
adc
addr16
xchg
inc
sarl
outsl
sti
jl
stos
test
jg
sub
cmp
movl
adc
call
sahf
lods
insl
ds
leave
xor
sarb
xor
inc
dec
or
xor
and
clc
or
scas
cmp
mov
cli
data16
aas
cmp
fdivrl
cmp
cld
add
popa
pop
push
mov
cmp
add
imul
xor
pop
push
xchg
outsl
arpl
xchg
or
mov
repz
mov
mov
les
imul
roll
adc
adc
adc
insb
cmp
dec
shrl
mov
push
outsl
fnstcw
add
and
jp
cmp
scas
cmp
xor
cmp
add
jge
adc
sbb
lret
xor
sbb
jg
lods
pop
adc
mov
dec
leave
scas
dec
dec
sbb
in
fdiv
xor
in
inc
cmp
inc
lds
mov
js
mov
pop
data16
pop
in
push
les
cmp
dec
jnp
xor
icebp
cs
mov
rcrb
cmp
xchg
popa
int
dec
jmp
pop
sub
scas
rclb
jo
mov
or
jl
mov
mov
sbb
std
mov
fistpll
inc
cmpsb
xchg
ret
rorb
and
cmp
jmp
inc
add
and
daa
push
cltd
mov
data16
out
shrb
cmp
idivb
iret
and
js
jmp
lcall
add
aas
ljmp
mov
push
jmp
int
push
aaa
push
cmp
lcall
cmp
adc
std
nop
pop
pop
imul
adc
xor
pop
lods
xor
scas
scas
push
insb
popa
popf
imul
adcl
push
jecxz
mov
gs
xor
lods
jb
inc
out
cmp
mov
sarl
dec
cli
and
imul
fwait
pop
cmp
pusha
rcrb
in
lret
loopne
scas
xor
and
sub
cmp
xchg
xchg
cmpsb
cmp
pop
cmp
sbbl
cmp
aam
pop
sub
je
insb
enter
iret
mov
lock
lods
jo
out
ja
jbe
add
dec
jp
dec
inc
mov
mov
cmp
sub
cmp
xor
dec
cmp
cli
out
and
lods
lret
aas
xor
mov
test
fistps
and
push
std
lret
mov
adc
cmp
sbb
push
scas
fisubl
xor
in
fmull
dec
xor
jne
cmp
fisubl
pop
cmp
sub
pop
cmp
ficomps
insb
dec
dec
mov
cmp
stc
int3
inc
push
test
fwait
dec
clc
inc
push
cmp
jp
daa
jmp
adc
sarb
add
push
fcomps
imul
jge
pop
lahf
and
in
int3
sahf
adc
frstor
lods
mov
xchg
fwait
add
movsl
cmp
scas
mov
or
cmc
test
outsb
xor
cld
loope
jecxz
out
enter
in
repnz
les
movsl
cmp
sti
test
sub
mov
or
jg
mov
xor
aam
data16
inc
dec
addr16
push
mov
jmp
lods
sub
daa
jp
inc
aam
sti
cmp
pop
dec
mov
jg
jne
sub
mov
push
add
or
sbb
in
movsb
sub
inc
push
sti
jb
sbbl
jae
repz
jns
jo
mov
test
mov
xor
popa
sbb
cmp
lret
pusha
adc
mov
and
cli
jge
out
dec
data16
jmp
dec
adcl
inc
mov
in
cs
dec
jmp
addr16
pop
mov
cmp
leave
sti
imul
loopne
pop
push
cmc
mov
das
ret
jne
nop
xor
adc
jae
popf
cmp
lds
imull
jp
cs
jl
mov
sub
lea
push
cmp
ja
or
dec
jp
cmpsl
scas
push
jbe
mov
push
pop
repnz
popa
hlt
xchg
add
or
jno
mov
cs
lret
dec
pop
cmp
pop
sub
out
ds
cmpsl
popa
sub
adc
aas
mov
adc
adc
mov
xchg
pop
outsl
test
dec
imul
mov
test
inc
daa
pop
into
mov
movsb
push
roll
mov
lods
sub
pusha
jb
leave
adc
cmpsb
lods
int3
out
xor
in
in
shrl
xchg
out
in
loop
sub
add
mov
mov
in
pop
rcrl
push
out
xchg
enter
aam
mov
mov
add
push
fadds
mov
sub
adc
or
mov
lea
das
xor
mov
jb
jp
inc
outsl
sub
mov
movsl
cmp
das
mov
cmpb
dec
and
fs
pop
jmp
loopne
dec
mov
push
dec
xchg
lahf
imul
jb
jecxz
lea
xchg
hlt
out
dec
mov
xor
decl
and
ret
adc
test
paddusb
inc
jle
stos
in
pop
stos
bnd
lds
out
jmp
out
stos
out
adc
pop
mov
xor
mov
jb
sbb
sub
pop
shrl
jmp
sub
aad
out
and
imul
cmp
aaa
enter
add
push
rclb
jle
subb
shll
fmuls
repnz
outsl
rcll
shll
imulb
ss
adc
mov
out
mov
inc
sub
pop
add
rorb
outsb
roll
xchg
cmc
in
pop
push
inc
je
pop
movsb
lods
jl
push
push
lods
or
and
inc
and
pop
xchg
push
jo
jecxz
mov
lahf
in
roll
cmp
popa
sub
sub
insb
xor
inc
js
imul
daa
jb
push
mov
xor
addb
cmpsb
xlat
outsb
cld
es
shlb
inc
leave
mov
mov
cmpsl
std
pop
mov
fwait
stc
push
dec
push
sbb
int3
test
push
cmp
int
xchg
xor
sbbb
mov
je,pn
inc
dec
mov
incb
pop
shll
inc
push
pop
ja
mov
xor
pop
roll
adc
push
pusha
and
mov
loope
and
roll
inc
push
mov
mov
and
adc
jle
addr16
pop
mov
or
push
pop
mov
repz
ret
push
pop
mov
jl
mov
dec
ds
nop
cmp
jns
push
sub
daa
adc
mov
mov
inc
adc
dec
jo
inc
xchg
mov
mov
xor
cs
adc
pop
std
inc
mov
outsl
call
lds
pop
je
add
inc
ljmp
mov
es
subb
push
mov
insl
and
xor
js
cmp
subl
je
insl
pop
ljmp
adc
dec
inc
orb
mull
cmc
ret
dec
out
adc
addb
movsl
andb
lret
fildl
sub
nop
jecxz
and
rclb
repnz
outsl
sbbl
pop
mov
inc
pop
mov
loopne
jecxz
call
push
push
sub
mov
mov
in
jae
xorb
sub
dec
mov
mov
lods
jo
jp
test
and
dec
sbb
insl
mov
xorl
and
sub
mov
adc
rolb
arpl
mov
push
imul
inc
or
cmc
mov
xorb
ss
scas
ds
sub
add
adc
push
sub
lret
jae
into
std
in
dec
and
push
mov
inc
ljmp
lods
test
adc
jns
movsl
aas
fildl
test
mov
jl
mov
je
mov
addl
mov
aam
rorl
cmp
fucomi
jl
stos
jbe
dec
dec
insb
xchg
sahf
inc
mov
cmp
push
outsb
push
lds
dec
mov
xchg
pop
shlb
std
cmp
inc
jmp
lret
inc
mov
push
das
ljmp
mov
test
or
stos
mov
mov
fistps
pop
das
and
jmp
xor
add
dec
ds
and
cmp
xchg
adc
bnd
loop
jmp
bound
shrb
stos
push
insb
scas
cmp
xor
mov
popf
popa
mov
sub
sbb
add
ret
cmp
dec
and
int3
sbbl
movsb
lds
popf
xor
test
cmp
pop
lret
xor
xchg
imull
lret
ret
or
and
out
cmp
cmp
mov
sub
dec
mov
test
jbe
add
jecxz
nop
push
leave
mov
dec
inc
add
insb
aad
js
lret
cmp
lods
call
adc
cmp
clc
xchg
cmpl
jo
push
xchg
and
dec
loopne
sub
adc
lahf
xor
fdivl
mov
xor
lret
sbb
loope
sbb
fmull
sahf
aaa
fisubs
mov
sbb
xor
cmpsl
add
cwtl
add
out
cmp
adc
negl
insl
inc
push
inc
cmp
xchg
xchg
aas
inc
dec
mov
cmp
idivl
in
jmp
and
jo
pop
dec
lock
or
insb
add
fs
cmp
dec
fildl
lds
inc
or
icebp
sti
sbb
lods
or
out
fistps
cmp
out
xchg
pop
cmc
bound
mov
sub
scas
inc
mov
mov
or
sub
push
cs
adc
xor
and
inc
mov
cmp
fmul
push
clc
cmp
js
lret
and
popf
stc
cs
mov
lods
arpl
sub
insl
mov
pushf
lret
popf
cs
jp
divl
sub
repnz
sahf
xor
mov
xor
call
out
cmp
inc
cld
add
inc
jns
adc
lret
fisubs
sbb
sub
out
adc
imul
dec
jge
sbb
xor
and
je
sarl
int
arpl
push
pop
adc
mov
sahf
loopne
cs
cmp
ret
iret
inc
int3
mov
jb
xchg
mov
test
std
or
xorb
mov
sbb
enter
jl
mulb
cmc
push
test
pop
test
inc
and
jg
mov
cmp
cmc
dec
mov
jge
fwait
and
cmp
fstl
into
outsb
pop
sbb
pushf
jge
inc
std
push
adc
stos
mov
dec
xchg
cmc
mov
cmp
int3
lcall
scas
cmp
add
mov
mov
mov
cmp
insb
daa
jp
mov
or
cs
lods
outsl
hlt
push
cmp
push
xor
cmp
pop
jge,pn
jns
cmc
in
cmp
cmp
lods
cmp
dec
sub
insb
sub
jecxz
cmp
mov
rcll
xlat
addr16
out
add
pushf
push
imul
adc
loope
ljmp
or
dec
dec
cwtl
jmp
or
out
inc
cmp
andl
pop
lods
xchg
or
cs
out
xcrypt-ctr
cmpsl
sbb
test
mov
pop
je
sti
das
dec
lahf
sbb
push
lock
cld
adc
inc
cmp
stos
push
mov
ds
sbb
cmp
clc
jp
add
cmp
out
pop
aaa
enter
imul
inc
cmp
insl
mov
xlat
jo
add
xchg
jnp
fnsave
cmp
inc
dec
iret
ds
push
add
outsl
das
int3
popa
mov
ficoms
pop
jns
rorl
ja
push
add
fs
xor
add
inc
js
sbb
cmp
inc
push
sub
sbb
ret
pop
cmp
and
pop
inc
stos
std
lahf
push
movsb
xor
jmp
leave
lock
cmp
pop
js
cmp
dec
mov
push
mov
enter
cmp
add
sub
mov
sahf
scas
outsl
cmp
mov
jne
out
out
das
arpl
xchg
pop
out
mov
insb
jle
sbb
lods
add
inc
in
push
sti
lods
cmp
sbb
pop
out
jmp
inc
in
mov
iret
in
cmp
loop
pop
sub
ror
pop
xchg
cmp
cmc
pop
sub
or
lods
outsl
sbb
pop
cmp
aaa
or
jle
push
xor
loop
ljmp
sub
mov
dec
push
mov
inc
sub
add
call
push
scas
jp
imul
out
in
jo
dec
cmp
push
jae
cmp
sti
fildll
push
jp
cs
out
lods
and
nop
fs
sbb
outsb
or
out
jns
test
cmp
imul
popf
pushf
jb
js
idivb
mov
enter
fistps
or
std
sub
cmp
sub
jo
adcb
mov
test
jae
and
cmp
or
cmp
push
push
test
mov
jmp
pop
lods
addb
mov
jae
xchg
xor
and
mov
xchg
in
add
jle
cmc
testb
xchg
dec
add
xchg
jbe
movsl
cmp
pop
jmp
add
inc
insl
aas
es
int3
jb
adc
loopne
sbb
sbb
push
sub
fadds
mov
pop
xchg
sub
cld
repnz
mov
subl
pop
cmp
mov
out
inc
cmp
lahf
cld
push
xor
pop
jg
mov
shrb
and
sub
fcompl
xchg
dec
push
mov
or
mov
pop
daa
jne
ja
mov
or
adc
fnstsw
pop
and
push
enter
mov
imull
xor
in
movsl
popa
sub
xor
std
jmp
xor
xchg
sbb
repnz
dec
xchg
pushf
mov
test
xchg
cmp
adc
cmp
cmp
push
and
cli
test
mov
xchg
lcall
mov
ss
sbb
in
es
add
push
or
rcrl
scas
mov
pushf
imul
sbb
dec
push
cmpsb
mov
testl
cmp
lahf
gs
and
lods
ja
add
mov
fwait
push
and
cli
mov
mov
dec
and
mov
xor
mov
stc
pusha
ja
jnp
dec
aad
test
xlat
sub
xchg
jp
lock
xchg
sub
test
push
shrl
sub
xorb
es
or
xor
add
jno
movsl
loope
push
mov
in
cld
movsb
push
mov
push
cmp
ja
sub
pushf
mov
test
sbb
test
insb
loop
xor
scas
mov
stos
xor
mov
mov
pop
cmp
pop
xchg
push
sarl
or
rcr
push
gs
cmp
in
pop
cmpsb
in
cmp
mov
aaa
jl
xor
adc
xor
clc
in
cmp
adc
imul
lcall
xchg
fistpl
mov
adc
and
and
xchg
ss
lret
fwait
es
int
loop
mov
xchg
cmp
inc
or
fisubrs
inc
adc
cmpsl
dec
ss
jecxz
and
cwtl
add
daa
xorb
or
push
inc
mov
jge
or
bound
cmp
jo
pop
dec
movsb
rorl
inc
je
xchg
dec
adc
aas
cs
pop
mov
dec
int
push
or
je
mov
push
mov
in
jo
jg
lahf
mov
cmp
add
movsb
dec
and
mov
sahf
stos
repz
cmp
in
mov
popf
bound
sbb
jp
cmp
mov
cmp
sub
movsl
int
sub
pop
mov
leave
fcmovnu
cmp
cmp
xor
jl
adc
cmpsl
xchg
sbb
cs
aas
dec
dec
mov
dec
test
shlb
xor
cmc
cmp
fcmovnb
int3
cmp
xchg
cwtl
insl
fcoms
jecxz
mov
cmp
aas
mov
callw
sub
push
adc
in
ficoms
cmp
xchg
cld
mov
pop
cmp
push
lret
adc
outsb
cmp
test
sahf
pusha
jg
out
imul
mov
cmp
xchg
jmp
dec
aam
push
cmp
inc
mov
sub
fwait
push
cmp
jp
sbb
push
scas
push
orl
popa
add
loope
lcall
mov
adc
jmp
jae
test
xchg
jle
sbb
adc
jp
or
mov
sbb
pop
pop
daa
cld
int3
daa
and
sub
push
aas
mov
sub
scas
push
mov
sub
lret
and
sbb
and
fsub
jmp
js
addb
mov
stos
dec
mov
ljmp
leave
add
dec
sub
cmpb
mov
sbb
mov
scas
jle
ds
pop
and
inc
dec
inc
adc
add
adc
imul
adc
and
jmp
cltd
aaa
cli
fmull
test
xor
mov
mov
jmp
ret
xor
movsb
add
add
xor
loop
out
adc
jmp
sbb
add
adc
xchg
adc
mov
cmp
ja
sti
mov
push
push
jb
ja
in
inc
xlat
inc
fisubl
in
mov
orb
pusha
ss
fucomip
jae
ss
mov
or
cmpl
ja
sbb
jp
and
jmp
pop
orb
fistpll
int
dec
push
jg
pop
daa
xchg
sub
mov
sbb
cmp
out
js
push
loop
xor
je
sbbb
sub
push
push
or
lock
xchg
ret
sub
jno
fiaddl
mov
call
scas
clc
jg
xchg
ljmp
jge
addr16
int3
xor
cmpb
ja
jle
sbb
rcrb
mov
dec
push
jmp
sbb
fnsave
jns
jnp
xchg
mov
mov
shrb
inc
mov
push
mov
out
push
jne
nop
jno
jmp
inc
aaa
pop
or
push
pop
je
dec
jb
ffreep
std
ja
movnti
rorb
loop
lahf
xchg
jno
sarb
aas
das
inc
jmp
ss
inc
jmp
cmp
cmc
mov
shrl
mov
inc
nop
mov
sbb
jge
adc
daa
jl
in
mov
fidivrs
enter
aaa
adcb
ret
add
mov
faddl
in
mov
dec
jecxz
ja
mov
outsb
mov
cmpb
dec
andb
adcl
and
cmp
xchg
and
pop
mov
push
pop
imul
insb
inc
call
dec
pushf
push
cmp
hlt
scas
fcoml
scas
mov
gs
and
add
push
jl
xor
hlt
icebp
shrl
inc
flds
stos
push
ja
repnz
ret
rorb
xlat
mov
cmp
push
stos
js
adc
data16
mov
sbbl
or
lcall
test
sub
stos
jle
repnz
mov
mov
loopne
int3
dec
in
jmp
insb
xchg
cwtl
movsb
push
mov
test
stc
call
push
in
sub
roll
jbe
nop
jo
sub
mov
add
std
lret
sub
test
pop
lock
rcrl
sbb
scas
mov
ror
jmp
es
lock
shlb
and
cld
ss
jb
add
aad
mov
aad
testb
adc
lods
roll
mov
test
xchg
add
lods
inc
xchg
mov
iret
ficoms
add
in
jne
push
rcr
or
mov
out
in
mov
pop
out
mov
cli
xchg
push
xchg
icebp
adc
outsl
les
lret
xchg
jbe
aaa
ret
out
mov
mov
push
mov
mov
or
xor
movzwl
jl
aam
mov
push
sbb
push
or
dec
xchg
jecxz
xchg
jge
mov
stos
or
cs
pop
loopne
aas
std
jg
cmp
das
mov
sar
les
sti
je
push
out
mov
test
sub
mov
mov
sbb
ret
sub
int3
cmp
fsts
mov
rorl
out
call
pop
call
in
dec
mov
xchg
std
dec
daa
sub
subl
inc
movsl
mov
mov
adc
add
mov
push
mov
adc
sub
ret
mov
leave
or
ret
mov
enter
xlat
ret
cmp
pop
dec
and
jns
cmp
cmp
test
pop
push
in
dec
jp
int
jg
dec
cmc
imul
mov
test
push
xor
push
ja
push
push
push
push
mov
bound
aaa
in
dec
lods
loop
data16
inc
fdivl
xor
addb
xchg
jmp
add
out
or
cmc
out
scas
mov
jo
leave
ds
sub
popl
das
leave
inc
std
jecxz
pop
xchg
push
in
dec
rcll
xchg
sbb
in
ret
sbbb
xchg
pop
add
pop
lcall
mov
les
xor
arpl
jne
or
loopne
and
je
xchg
xor
sub
in
fcoml
add
xor
push
cmp
inc
dec
pop
or
test
mov
xor
adc
scas
aaa
push
lret
ds
or
sbb
mov
and
add
jp
fcomi
jg
rolb
jmp
push
mov
ds
mov
es
movsl
mov
stos
adc
sub
xor
xchg
dec
mov
or
inc
inc
ds
and
movsb
jne
scas
mov
and
das
int3
pop
ret
iret
cmp
adc
dec
sub
testl
stos
xchg
mov
and
js
dec
loope
sbb
jns
addr16
jecxz
outsb
jp
mov
repnz
xor
bound
shlb
in
dec
jg
mov
jmp
pop
jle
test
cltd
push
test
cltd
js
add
mov
enter
and
mov
mov
pop
ret
incb
fcmovne
movsb
addl
and
dec
inc
daa
xchg
inc
movsb
sub
pushf
jp
adc
inc
lahf
sti
xlat
xchg
test
push
mov
pop
pop
push
adc
sub
or
push
inc
jmp
adc
adcl
rorl
xchg
cmp
adc
lods
mov
out
fwait
pop
arpl
jbe
jbe
cli
add
sbb
cmpsb
outsl
jp
js
rcrb
addb
pop
adc
std
cs
ds
adc
shll
leave
fildll
inc
pop
inc
into
mov
push
or
out
sbb
adc
adc
rcll
out
lock
shrb
rcrb
movb
jl
stos
mov
cmp
adc
add
fisttpl
sahf
fwait
out
js
leave
lock
ss
enter
jmp
jge
insb
imul
sbb
adc
jge
fisubrs
faddl
xor
cmpsl
outsl
shr
in
out
mov
pop
inc
add
push
mov
or
out
iret
pop
movsl
in
sub
pop
out
push
lret
sahf
and
ds
les
subl
cmc
dec
sbb
or
mov
xchg
sub
icebp
int
sbb
cmp
enter
dec
jg
es
dec
add
fidivl
pushf
repnz
es
movsb
pop
loopne
mov
and
dec
inc
xor
jmp
jecxz
dec
mov
addb
fs
in
dec
test
jo
call
sbb
jmp
mov
insl
adc
or
jns
stos
and
call
in
es
xlat
test
das
ss
xchg
or
adc
pusha
jne
nop
adc
jle
xchg
dec
lcall
pop
or
into
add
sub
hlt
and
pop
jle
dec
jg
test
ss
lret
and
pop
pushf
xchg
or
mov
add
cwtl
fwait
ljmp
sbb
xor
cmp
jge
xchg
jg
or
jecxz
mov
divl
movsl
pop
lods
mov
mov
mov
dec
push
xor
call
push
insb
cmp
inc
mov
dec
xchg
adc
pop
in
lock
dec
xchg
jle
push
lock
pop
ss
adc
cmp
insb
je
ja
dec
jl
add
pop
jmp
into
sub
adc
add
loope
fisubs
add
mov
negb
idivl
aas
icebp
gs
mov
mov
insb
or
imul
inc
insb
insb
mov
pop
push
out
xlat
insb
lret
xchg
mov
jnp
push
pop
adcl
pop
in
or
aad
xchg
mov
xor
or
cltd
frstor
imull
mov
ljmp
sbb
jg
jecxz
sbb
je
inc
inc
arpl
mov
dec
jp
jecxz
mov
adc
inc
in
inc
cmp
mov
daa
sbb
mov
in
fldt
fildll
adc
jns
pop
aas
mov
xchg
dec
jae
pop
inc
je
das
or
mov
jl
xor
dec
xor
mov
jp
out
xchg
xor
stos
jo
mov
xor
xor
mov
cli
xor
mov
pop
push
stos
idivb
add
push
sbb
mov
in
ret
leave
cmpsl
mov
cld
cmpl
and
in
add
test
aaa
aam
inc
roll
andb
mov
fdivrl
pop
ljmp
pushf
jb
je
int
adc
and
push
arpl
out
jbe
or
adcl
xor
out
adc
mov
aam
std
sbb
loop
mov
jle
sarb
pop
mov
sbb
ss
test
pop
pop
fwait
enter
daa
sahf
or
mov
in
scas
insb
arpl
sbb
cmc
lds
mov
add
add
jne
xchg
mov
ss
andl
cs
xchg
shlb
inc
enter
fimull
or
push
inc
and
fdivs
inc
fcomps
cwtl
scas
leave
add
mov
fstp
ja
xchg
jg
jne
jb
mov
or
pop
insb
fdivrl
shrl
push
sub
inc
sub
xor
outsl
pop
xor
push
push
push
xor
lock
jmp
stos
and
lds
lcall
sub
es
sub
test
xchg
mul
push
jo
stos
repnz
lret
dec
xchg
push
insb
push
cmp
or
hlt
xor
loope
jo
es
cmp
jo
mov
jmp
cltd
loop
cmc
out
inc
jne
push
mov
dec
lret
mov
adc
lock
mov
hlt
push
jo
movsl
lret
jmp
pop
loop
enter
out
mov
icebp
test
inc
sub
loopne
xor
and
dec
add
mov
mov
inc
cmp
cwtl
lods
push
cli
mov
sub
mov
add
insb
mov
adc
xchg
mov
push
sub
loop
sub
mov
sbb
pop
or
lods
mov
icebp
in
divb
test
sti
adc
xor
or
xor
stc
mov
xchg
push
jmp
mov
scas
mov
subb
rcrb
mov
cmpsl
cmc
enter
out
ficoml
jge
lock
pop
cmp
push
xchg
mov
mov
adc
jb
and
xchg
push
sahf
adc
lea
pop
inc
sub
insb
loopne
clc
xchg
mov
push
pop
and
inc
xor
dec
inc
mov
lret
adc
push
mov
hlt
sbb
mov
dec
jo
fs
push
xlat
dec
repnz
jmp
push
les
sbb
xchg
push
mov
jl
lahf
jns
mov
xchg
sub
xor
imul
or
mov
push
test
cmp
stc
mov
cmpsl
test
les
insl
ja
mov
and
pop
fbstp
fdivl
and
inc
add
push
and
jb
fadd
notb
insl
aas
inc
adc
lret
rcrb
inc
cld
xchg
testb
jb
mov
cli
lods
clc
pop
lcall
inc
iret
jl
out
sbb
pop
or
mov
pop
jbe
clc
jg
jmp
xchg
adc
mov
add
jbe
psrld
hlt
lret
pop
fsubp
stos
pop
enter
int3
xchg
je
or
add
stos
data16
mov
mov
dec
xor
ds
xchg
gs
das
out
sbb
jns
push
mov
int3
mov
and
rcrb
adc
xchg
adc
stc
data16
inc
adc
pop
imul
dec
or
fcom
adc
and
lahf
add
sub
cmp
lds
push
fidivs
cmp
dec
inc
add
mov
push
mov
shll
cmp
ror
or
cmp
ljmp
aad
mov
lahf
and
mov
outsb
jmp
and
cmp
sahf
jge
adcl
pop
jmp
xchg
aaa
pop
lsl
data16
repz
push
inc
push
cld
out
gs
lods
sbb
jge
stos
hlt
ljmp
popf
fsubl
and
dec
sbb
scas
movsl
sbb
in
mov
push
jmp
arpl
loopne
cmp
inc
jnp
imul
call
inc
jbe
jl
rcrb
in
shlb
cmp
push
cmpl
jb
or
cmp
jg
mov
loope
mov
push
or
xchg
gs
cmp
push
into
xchg
dec
cmp
xor
repz
push
test
notl
outsb
pop
fsubr
and
test
lods
int
es
cmp
je
sbb
push
and
sbb
sub
mov
lcall
roll
inc
repnz
cmp
adc
jge
dec
dec
push
cmp
or
push
sub
pop
jnp
lods
jno
add
pushf
pusha
pop
mov
stos
and
arpl
or
cmp
scas
or
xor
cmp
sub
loope
cmpsl
aam
mov
cmp
jns
nop
and
cmp
addr16
out
lods
pusha
popa
jp
in
cmp
add
out
cmp
out
mov
cmp
stc
mov
adc
movsl
jp
push
inc
mov
sbb
jne
xchg
xchg
bound
mov
pop
xor
movsl
xor
icebp
fmulp
adc
mov
push
jge
mov
cmp
shlb
push
cmp
sbb
jne
mov
mov
cmp
dec
ljmp
xchg
test
addr16
fwait
dec
xor
lods
out
and
cmpsl
push
dec
xor
pop
fs
outsb
cmp
jns
mov
xlat
inc
sbb
aam
insl
sarl
fcomps
push
pushf
xchg
push
cmp
add
inc
or
imul
fsubs
adc
xchg
sub
fwait
addl
or
out
rorl
loopne
scas
cmp
icebp
mov
cmp
insl
and
cmp
push
loope
repz
sub
and
and
cmpsl
cmp
shlb
cmp
push
mov
jcxz
cmp
dec
stos
cmp
and
sub
jge
dec
imul
jle
mov
int
fs
xchg
jae
fistl
sbb
or
fistpll
testb
or
push
pop
push
sbb
mov
cmp
lret
sub
lea
jbe
dec
xlat
aas
push
cmp
loopne
lcall
jmp
sub
cld
js
out
xor
mov
cmp
cmp
sahf
push
movsl
out
lahf
mov
cmp
and
dec
daa
data16
loopne
mull
ficompl
outsb
shl
xor
das
cmpsb
sub
mov
mov
dec
add
pop
or
pop
mov
mov
lods
push
test
in
daa
dec
or
xchg
mov
lock
subl
pop
lods
popa
sti
jns
dec
ss
xchg
movsb
int3
add
into
lods
cmp
scas
xchg
mov
push
cmp
cmp
imul
push
mov
xor
lret
xorl
lods
pop
jmp
mov
mov
ret
pop
xchg
push
fsub
aad
and
pushf
inc
dec
mov
std
in
out
es
add
add
cmp
addr16
mov
lock
cmp
pop
fldt
aad
nop
mov
cmp
call
xorb
push
in
clc
jb
in
ds
aas
cs
cltd
sub
cmp
out
xor
add
or
int
lds
push
dec
sub
push
add
shlb
sbb
cmp
stos
and
cmp
cmp
xorl
stc
out
cmp
adc
sbb
adc
pusha
lds
inc
mov
fs
xchg
mov
cmp
nop
cmp
cmpsb
dec
jg
test
pop
test
sub
jb
inc
ret
adc
xor
lods
frstor
repz
ja
add
call
popf
push
dec
jecxz
mov
inc
mov
cmp
xchg
xor
adc
mov
cmp
pop
inc
push
jle
adc
es
frstor
mov
and
stos
pop
imul
fidivrs
lcall
fimull
pusha
ja
push
or
jl
adcb
pushf
aas
fcompl
movsl
imul
cmp
pop
add
mov
jmp
cmp
cmpsl
fadd
loop
mov
dec
xchg
mov
lahf
mov
pop
mov
in
or
cmp
popf
int3
cmp
in
xchg
cmp
int
stos
cmp
inc
fiaddl
inc
shl
in
mov
insb
cmp
xchg
jae
stc
cmp
aam
je
fwait
and
inc
sbb
xlat
inc
sbb
je
dec
data16
sub
sub
repnz
jnp
jbe
pop
inc
sub
add
mov
sub
mov
into
nop
cld
jmp
jp
dec
or
sub
icebp
cmp
xchg
mov
xchg
popa
int3
clc
roll
pop
and
xchg
movsb
or
mov
adc
stos
imul
lods
cmp
rcrb
out
cs
xchg
jp
dec
or
push
push
cmp
call
ss
or
in
gs
mov
dec
mov
push
cmpsb
out
sub
pop
sub
xor
inc
dec
pop
fistpll
jo
adc
inc
ret
in
shl
pop
mov
and
xchg
loop
lahf
das
push
or
in
lahf
test
add
scas
les
mov
xor
pop
bound
cmc
sub
sub
xchg
mov
nop
add
cmp
cmp
xchg
aam
jl
sbb
cmp
push
inc
and
cmp
xchg
sbb
ret
push
ja
and
sub
cmp
negl
inc
add
call
loop
cmp
sbb
or
cmp
sbb
mov
xor
in
sub
dec
daa
mov
sarb
shlb
xchg
cmp
bound
je
idivb
dec
pop
and
call
lahf
cmp
outsl
push
xor
loopne
mov
out
lods
loop
cmp
push
dec
ds
add
cmp
pop
mov
incl
aas
xor
mov
add
cmp
or
cmp
adc
inc
pop
lock
cmp
sbb
push
cmp
push
lahf
mov
cwtl
cmp
pop
scas
in
cmp
xchg
fdivrs
cmc
je
lods
lds
add
into
and
and
pop
jne
or
sub
push
repnz
cli
pushf
enter
xchg
cmpsl
xor
cmp
in
aas
push
fdivl
or
sar
xor
xlat
push
and
pop
or
add
cmp
in
dec
jg
pop
cmp
sahf
jno
pop
iret
hlt
mov
sbb
push
xchg
cmp
insb
xor
xor
xchg
add
les
insl
jl
iret
and
lods
jo
mov
sub
addb
imul
popf
aaa
push
stc
xor
addps
sub
push
fiaddl
pop
pop
cmp
jmp
loope
fbstp
enter
pop
sbb
lret
fs
cmp
xlat
pop
loopne
and
cmpl
inc
cmpsl
outsl
push
mov
orb
cmp
cmp
aad
mov
or
cmp
ret
lcall
pop
jbe
ss
xor
xchg
dec
jp
or
mov
dec
cmp
inc
mov
insb
xor
mov
insb
or
outsb
inc
lds
mov
and
cmp
push
jg
nop
in
fdivrl
mov
imulb
rep
lds
mov
movsl
adc
repnz
cmp
cmp
leave
sub
dec
adc
bnd
inc
cmp
loop
jnp
sbb
xchg
dec
movsl
cmp
out
push
nop
hlt
cmp
outsb
mov
xor
pop
insb
push
inc
mov
push
arpl
push
push
cmp
mov
adc
mov
lods
jno
inc
lret
clc
mov
icebp
dec
cltd
popa
fistpl
jbe
cltd
jg
movsl
dec
popa
mov
aaa
mov
sbb
sbb
mov
pushf
negl
sbb
ljmp
cli
in
adc
lods
sub
mov
mov
inc
fcoml
xor
xchg
aaa
fiadds
cli
fldcw
mov
mov
or
inc
pop
and
and
in
push
out
mov
test
xor
sub
insb
dec
xchg
push
sarb
dec
sub
and
push
inc
xor
movsl
xchg
adc
cmc
mov
mov
adc
adc
sub
test
subb
mov
xor
adc
scas
test
inc
fists
sti
hlt
enter
mov
mov
mov
cmpsb
ss
negl
and
xchg
xor
mov
pop
jae
in
pop
mov
out
je
add
xor
movsb
push
daa
jnp
jne
sbb
or
pop
popa
es
jae
sub
stos
dec
and
sub
sbb
mov
aas
xchg
enter
dec
adc
jbe
stos
mov
scas
mov
jge
cmpsl
jns
sbb
ljmp
mov
lds
cmp
pop
xchg
mov
cs
push
cwtl
adc
inc
test
outsl
mov
js
sbb
es
jmp
sahf
mov
imulb
repnz
aaa
fwait
sub
test
mov
xorb
and
ret
jge
mov
xchg
fidivl
cmp
adc
dec
pop
sub
push
in
test
xchg
push
inc
daa
add
inc
xlat
movsl
mov
mov
jl
test
or
fsubl
push
mov
sub
lcall
mov
ret
push
jno
stos
ja
ljmp
fwait
cmp
xchg
cmp
addr16
and
mov
sub
pop
out
ds
pop
mov
addl
cmp
sub
push
movb
dec
or
pop
xchg
loopne
mov
cmp
adcb
out
addb
adc
ljmp
cld
ljmp
repnz
icebp
rorb
adc
sub
pop
inc
push
mov
shlb
in
daa
xor
mov
inc
rorb
ss
sub
lods
iret
in
outsb
push
test
adc
push
mov
xor
pop
scas
cmp
jmp
subb
cmpb
and
ljmp
push
push
mov
enter
addb
mov
insb
rclb
ret
sbb
mov
in
sbb
xor
adc
movsb
rol
sub
inc
in
inc
jl
in
add
adc
mov
pop
add
shrl
or
pop
call
icebp
test
sub
jmp
out
jle
scas
out
sub
or
jle
push
jae
and
shrl
xchg
mov
dec
adc
test
push
fsubrp
and
cmpsl
xor
ret
or
cli
callw
mov
mov
js
adc
add
jp
adc
add
push
xchg
sbb
inc
add
adc
shl
or
cltd
jno
push
repnz
insl
push
clc
test
lods
and
sub
in
scas
push
cmpsl
inc
int3
adc
enter
daa
or
mov
test
mov
mov
mov
in
test
popf
scas
ret
add
jne
xchg
mov
pop
pop
faddl
xchg
sub
dec
xchg
fidivl
push
iret
gs
stos
mul
mov
or
dec
enter
into
mov
rcll
lret
lods
adc
jp
stc
ja
into
das
pop
dec
adc
add
mov
jo
int
repz
cs
movsl
dec
daa
jmp
mov
inc
xor
jbe
arpl
pop
add
mov
sbb
or
sbb
test
pop
lods
cmp
mov
inc
push
popa
and
ds
out
cmc
mov
ljmp
jp
das
cltd
subl
scas
sarb
adc
mov
push
das
push
pop
int3
xchg
shll
cmp
sub
lds
mov
push
sarb
sub
sub
adc
xor
sub
aas
push
sub
loop
or
mov
hlt
add
ja
ljmp
ret
xor
enter
dec
and
xchg
or
std
mov
sub
divb
mov
icebp
mov
sbb
inc
movsb
and
lods
dec
mov
lods
addr16
ds
fstps
sbb
push
xchg
or
sub
mov
xchg
push
cmp
add
mov
add
jle
and
add
push
inc
sub
movsl
ret
add
xor
or
jnp
cmp
shlb
negb
mov
das
and
insl
popf
sbb
mov
pmulhuw
int3
movsl
and
and
add
add
inc
adc
int3
pop
mov
je
clc
outsl
mov
cmp
adc
aas
test
fldenv
mov
test
out
jbe
and
sub
hlt
sti
das
ja
jecxz
pop
mov
xchg
pusha
addr16
push
repnz
sub
jne
aad
mov
xchg
movsl
pushf
mov
leave
lret
cmpsl
pusha
or
push
cli
ja
sub
dec
fcmovu
roll
fidivrs
dec
lret
jg
js
pusha
rcrl
ret
xor
je
cmpl
hlt
pop
ficoml
loope
adc
inc
cwtl
sbb
pop
call
sub
adc
outsb
dec
pop
insl
mov
pop
aaa
shlb
cld
bound
mov
or
sbb
popf
orb
or
push
lret
sbb
cmp
orl
subb
dec
mull
fwait
dec
jbe
fsubrl
test
sbb
jle
mov
mov
sbb
mov
mov
dec
test
cli
mov
adc
sbb
shl
xor
sub
xchg
imul
aad
mov
jo
lahf
add
adc
sbb
cmp
mov
and
js
xor
jbe
scas
test
adc
add
mov
jl
ficoms
je
insl
mov
daa
xchg
push
push
rol
jp
outsl
shrb
xor
mov
scas
cmp
mov
xor
sub
xchg
mov
movsl
pusha
loop
add
scas
xchg
orb
cmpsb
cmp
outsb
inc
pop
nop
cmpsb
pop
loopne
cmpsl
mov
and
push
pop
sarl
std
sbb
pop
es
xchg
ss
repz
sbb
les
jmp
push
enter
loop
arpl
in
lods
fcoms
inc
nop
dec
pop
add
cmp
andl
fs
cmc
js
pop
cli
lret
push
test
pop
push
and
xor
push
and
mov
ss
pop
jbe
lods
add
push
or
sub
imul
mov
rclb
imul
stos
lock
or
xor
pop
pop
lods
mov
sub
test
das
data16
or
adc
inc
shrb
jmp
mov
mov
sbb
xchg
mov
int
mov
aad
sub
nop
scas
je
enter
ret
add
scas
jecxz
roll
popf
insb
xchg
das
pop
and
lock
lods
repnz
sub
test
notb
pop
push
call
daa
add
mov
mov
int3
dec
leave
jge
jno
scas
aaa
mov
push
insb
mov
out
add
mov
iret
stos
xlat
mov
je
cwtl
xor
iret
inc
xchg
ljmp
mov
add
adc
mov
mov
lods
int3
jmp
nop
mov
pop
pusha
adc
adc
je
fildll
negl
jl
dec
sub
push
fimuls
jge
dec
xchg
xchg
push
shll
sub
adc
sbb
inc
jl
roll
loopne
insl
cs
cltd
movb
sahf
inc
ljmp
inc
aaa
leave
test
hlt
inc
push
aaa
inc
jp
inc
jecxz
dec
dec
jg
aam
dec
jg
aas
adc
jae
xchg
dec
inc
xlat
lea
pop
pop
jbe
icebp
fwait
cmp
jne
pop
and
fstpl
jecxz
test
jp
pop
mov
sub
out
jp
inc
test
popl
dec
add
fdivrp
mov
sti
xchg
or
mov
jo
pop
pop
mov
cmp
dec
sub
or
mov
imul
ficoml
repnz
lods
mov
adc
jnp
iret
xchg
inc
xchg
lahf
aam
mov
fldcw
push
shll
ds
mull
into
movsb
lds
adc
pop
sbb
pop
les
mov
adc
ss
push
ret
mov
aad
lea
xor
mov
cltd
push
repz
cmp
xchg
stos
pop
stos
pop
cmpl
inc
dec
test
shr
mov
mov
push
pop
rcll
mov
sbb
mov
test
inc
sahf
add
jmp
xchg
jecxz
mov
lret
nop
cmpl
mov
insb
lods
je
mov
mov
rorl
sbb
xlat
mov
cmp
add
hlt
sbb
fcompl
xor
mov
lods
scas
xchg
xor
mov
outsb
mov
mov
push
inc
jl
mov
pop
cmpsb
das
shlb
inc
adc
inc
adc
mov
ffreep
jmp
or
push
pop
into
jno
inc
popa
and
pop
mov
dec
xor
fcmovnu
notb
movsl
adc
adc
jg
in
jo
js
lock
mov
xorb
or
das
lods
sbb
xchg
data16
je
sbb
mov
hlt
jg
imul
arpl
fucomp
push
mov
push
adc
or
xchg
fwait
andb
fsubrs
push
jne
add
ret
cmp
pop
push
cmp
insl
push
daa
pop
adc
jbe
jmp
sub
xchg
mov
lret
mov
popa
das
shlb
popa
fs
fstps
or
fs
adc
mov
sahf
jmp
mov
adc
jp
cwtl
xchg
push
ljmp
mov
push
shrl
cmp
xor
iret
mov
push
lahf
fistpll
dec
hlt
mov
and
push
pop
testb
insl
mov
sbb
enter
pop
mov
insl
xchg
adc
loopne
je
sub
enter
mov
mov
lret
xchg
mov
std
jbe
xchg
pop
jmp
sbb
jb
loop
mov
adc
test
inc
cld
repz
jno
xchg
sub
lods
ret
repnz
out
inc
mov
adc
test
negl
jbe
pop
dec
sub
and
out
sub
dec
xchg
pop
cmp
push
pop
sub
jle
lds
pop
pop
mov
sub
inc
lods
pushl
push
jns,pt
ljmp
xchg
fucomip
push
jge
inc
lea
fiaddl
jae
sbb
xlat
mulb
mov
inc
fstl
adcb
loopne
mov
mov
and
out
nop
shlb
push
aam
cmpsl
pop
ljmp
xchg
mov
inc
aam
outsb
xchg
or
lds
mov
inc
data16
loope
ss
adc
iret
in
test
jo
adc
mov
repnz
jae
mov
stos
andb
sub
lods
or
xor
inc
das
adc
and
jp
sar
dec
andb
jnp
jl
and
arpl
ss
jb
test
pop
test
pop
mov
xchg
notb
pusha
sbb
aas
push
lods
jl,pn
mov
fstl
loop
mov
push
stos
and
shrb
ljmp
adc
and
pop
jb
divb
push
mov
stc
sub
mov
or
push
idiv
lea
lret
jne
sub
orl
ror
fwait
xchg
mulb
add
cwtl
jge
mov
movsl
ja
arpl
lahf
lods
lods
testl
enter
adc
das
enter
insb
into
mov
xlat
sbb
pushf
xchg
jl
sbb
pop
jae
and
jmp
push
das
outsl
mov
test
mov
insl
jno
mov
outsl
adc
jle
sbb
xor
push
jo
mov
mov
xor
xor
push
mov
sub
add
and
out
loopne
stc
shlb
mov
rolb
push
inc
cmc
mov
jmp
push
cmp
lahf
mov
test
cmpsb
pop
mov
xchg
data16
ds
jo
daa
pusha
adc
add
rclb
les
cmp
ss
clc
and
repnz
outsb
mov
adcl
inc
shr
es
scas
mov
or
jle
jp
sar
pop
rclb
adc
stos
leave
cmp
and
push
roll
aas
lret
mov
lods
xchg
dec
out
or
adc
and
mov
pop
jg
adc
jp
dec
shrl
fildl
push
mov
scas
push
adc
inc
int
movsl
cmp
push
sub
aas
insl
add
int3
imul
mov
mov
and
push
xor
adc
inc
push
xchg
shlb
mov
mulb
jae
and
test
push
xor
jmp
nop
outsb
aaa
dec
cmpsl
mov
push
das
in
dec
inc
test
lods
enter
xchg
jb
sbb
aad
sub
push
insb
mov
in
test
ret
std
ljmp
xchg
scas
filds
jge
sbb
nop
movsb
je
and
out
inc
hlt
test
push
cli
mov
sbbl
xchg
mov
jnp
out
mov
nop
or
jo
test
stc
stos
mov
dec
fistl
sbb
sahf
ljmp
fiaddl
sarb
dec
in
out
sub
xor
in
and
cltd
jb
in
adc
dec
pop
jns
jne
push
jae
adc
xchg
jo
jbe
xlat
test
enter
imul
fs
mov
adc
xchg
dec
out
mov
xor
in
mov
sub
lods
in
ja
push
sub
fs
add
imull
jne
and
stc
filds
ja
jne
jne
xchg
out
popf
imul
lods
mov
push
mov
divb
pop
adc
sub
lret
mov
loopne
ds
sub
shrb
ja
fbstp
lcall
loope
in
push
mov
shll
jno
cmp
mov
fistpl
xorb
cmpl
xchg
add
into
sub
test
cmpsl
imul
fs
in
push
push
outsb
mov
movsl
jb
sbb
addb
jmp
ret
data16
scas
mov
push
pop
jecxz
inc
xchg
adc
xlat
add
push
fadd
dec
jl
enter
inc
scas
pushf
cmp
mov
fbstp
test
test
adc
scas
das
push
push
cmpb
push
sbb
sbb
or
mov
aas
arpl
mov
sbb
xlat
sbb
and
jo
dec
dec
sti
jle
jecxz
adc
or
mov
das
adc
pop
mov
in
ret
cli
andl
test
scas
das
inc
push
aam
add
loope
out
jne
outsb
in
pop
lods
lcall
subl
cld
fists
jb
scas
jg
pop
inc
imul
pop
sbb
xor
lods
sbb
ljmp
push
jge
cmpsl
xchg
insb
mov
repz
dec
xor
adc
and
sub
repnz
rcl
sub
sub
call
mov
pop
xor
sahf
test
xchg
pop
cmc
test
test
out
addr16
sub
hlt
mov
in
leave
mov
and
sbb
xchg
cli
jnp
push
inc
sub
imul
lods
xlat
lea
into
shlb
or
and
mov
adc
mov
shll
dec
adc
loop
mov
xor
clc
jmp
push
lret
push
lret
sub
je
sbb
push
lret
push
inc
adc
pop
xchg
push
mov
adc
fildll
mov
sbb
out
je
sub
out
adc
movsb
test
sbb
aad
xor
push
fs
or
mov
adc
mov
sbb
lods
outsb
in
dec
adc
outsl
cs
mov
or
inc
shrb
xchg
adc
push
push
rcl
mov
fstps
ror
into
mov
imul
shlb
inc
xor
jg
fs
adc
xchg
icebp
mov
and
les
xchg
roll
fidivrl
jo
pop
fdivl
aad
stos
xor
loopne
adc
fadds
js
clc
jns
outsl
xchg
xchg
sub
adc
imul
xchg
xor
lds
std
xchg
cmp
adc
sbb
in
scas
sahf
in
adc
je
leave
inc
mov
js
mov
nop
and
pop
fmull
push
or
ret
mov
pop
shll
mov
scas
push
std
roll
mov
adc
fnstsw
adc
mov
insb
test
mov
mov
addr16
mov
fucomp
adc
pop
cmp
leave
out
ja
ficompl
inc
sbb
sbb
aas
addl
mov
xor
add
fxch
mov
mov
xchg
push
jne,pn
imul
imull
pop
adc
fwait
jp
sbb
and
fidivs
mov
test
inc
enter
or
pop
lea
out
inc
jne
mov
inc
and
sub
scas
and
adc
xchg
aam
add
jnp
mov
mov
ficompl
push
iret
std
ja
testl
nop
pop
xchg
push
and
sbbb
xlat
clc
insb
insb
xor
mov
test
fisubs
rclb
and
enter
int
andb
mov
inc
adc
xchg
xchg
cmpsb
sbb
cwtl
dec
push
mov
rclb
or
enter
sahf
jne
jge
cmp
dec
jns
dec
popf
dec
shr
fcmovbe
in
aam
mov
inc
and
inc
jbe
icebp
sbb
push
adcl
cmp
mov
jl
adc
sar
dec
mov
mov
sbb
cmc
dec
shrb
out
dec
fcoms
and
ror
fistpll
pop
ss
sub
mov
add
leave
ret
mov
aas
out
pop
sbb
lock
test
xchg
cld
and
fs
jnp
pusha
xchg
ljmp
adc
shl
inc
xchg
sbb
adcb
jmp
lods
movsb
push
pop
and
xchg
fistpl
lahf
shll
hlt
sub
mov
mov
inc
jae
int
or
pop
ds
or
orl
inc
enter
cmpsb
loopne
pop
ja
mov
mov
dec
pop
stc
jge
fidivrl
jno
aam
cld
and
add
in
sub
cmc
jle
push
rclb
ja
orl
or
fisubrs
aam
and
lret
mov
mov
scas
mov
shlb
xchg
jmp
int3
inc
cs
imul
aas
mov
add
aaa
sub
aas
add
and
jg
pop
jge
sub
xchg
outsb
dec
popa
scas
sbb
push
das
xchg
sub
es
aam
scas
adc
cmp
cmpsl
push
inc
ficoml
lods
cmp
ss
inc
and
and
je
out
inc
outsl
int3
add
popa
faddp
aaa
movl
xchg
dec
mov
cmc
xchg
cmp
pop
popa
test
mov
fst
inc
adc
enter
pop
sub
xchg
cmp
pushfw
cmpl
cmp
adc
and
push
mov
fdivrl
cmp
sub
into
jmp
jle
movsb
jbe
cmc
fdivrs
xchg
int3
lods
adc
push
jg
jge
jle
fsubp
jbe
sub
stos
aas
add
push
cld
mov
sub
clc
cmp
adc
xchg
outsb
jmp
jge
ljmp
fs
ret
insl
sub
clc
push
push
insb
mov
pop
mov
rclb
sarl
idivb
fildll
mov
hlt
nop
jl
xlat
test
iret
inc
cmpsb
call
or
jg
mov
mov
sbb
mov
mov
loopne
loope
repnz
das
mov
mov
or
in
out
xchg
jmp
sub
adc
das
inc
movsl
nop
out
mov
adc
movsl
mov
mov
inc
out
mov
and
mov
rol
cs
and
mov
inc
pushf
dec
xchg
scas
pshufw
push
into
hlt
xor
cwtl
shld
xchg
dec
mov
and
pop
or
sahf
dec
sarl
jl
push
xchg
filds
xor
adcb
xchg
stos
push
test
leave
ret
cmp
mov
cmpl
xchg
pop
push
xlat
cli
mov
push
adc
in
mov
mov
mov
mov
popf
jmp
movsb
je
call
mov
mov
lret
lods
jae
sub
in
mov
lods
mov
lods
or
push
movsb
xchg
dec
sub
loopne
cmpsb
adc
mov
nop
fiadds
mov
xchg
xor
xchg
mov
pop
mov
scas
pusha
scas
and
push
fadd
jo
inc
push
mov
mov
notl
push
rolb
dec
mov
xor
fidivl
jle
es
push
jo
sbb
dec
sbb
lea
jne
ljmp
cmc
mov
ljmp
jmp
iret
sbb
dec
ficompl
roll
cmp
sbb
sub
out
jae
out
mov
stos
sbb
pop
mov
dec
xor
pop
mov
and
dec
pop
fs
insb
jle
leave
mov
mov
xor
push
cmp
fwait
inc
fimull
jge
leave
xor
loopne
shlb
fcoml
and
outsb
cmc
mov
int3
mov
arpl
push
mov
xor
lods
push
dec
test
ja
xchg
add
sahf
dec
jo
mov
loopne
push
or
hlt
in
jmp
cmp
sbb
or
dec
and
pop
inc
sbb
ret
or
ficoms
mov
divl
pop
xchg
int
mov
loope
dec
adcl
dec
test
xchg
and
xor
adc
or
mov
sbb
repnz
xor
jb
xor
nop
jp
aaa
arpl
inc
pop
clc
mov
mov
adc
xor
daa
mov
mov
into
je
dec
mov
shrd
dec
xor
inc
adc
les
jge
dec
fadds
and
mov
sub
or
in
ljmp
and
pop
push
jno
hlt
fwait
mov
mov
in
pop
in
push
dec
push
shlb
subl
or
int3
cld
adc
adc
shll
push
sub
jne
data16
jns
sub
jmp
pop
jecxz
xor
pop
rcll
ljmp
je
imul
xchg
loop
fimuls
add
out
call
aaa
imul
pop
aas
xchg
mov
out
xchg
sub
cltd
or
push
xor
sbb
push
mov
mov
test
pop
cmp
add
xchg
in
test
xlat
outsl
cmp
push
lock
mov
cmp
icebp
fimuls
jbe
mov
xor
add
adc
inc
jb
sub
and
out
pop
fnstcw
jbe
mov
jp
adc
fnstenv
xchg
xor
dec
mov
cmp
das
mov
sbb
xchg
es
test
pmaxub
pop
jmp
ds
flds
push
fs
dec
sbb
mov
sub
mov
cmp
fwait
adc
mov
and
es
adc
cwtl
fdivr
je
aaa
sub
ret
and
jge
dec
dec
sbb
rcll
dec
pop
data16
fcoms
xor
push
sub
xchg
jnp
mov
sub
mov
or
stc
ss
fisttpll
pushf
imul
xchg
sbb
mov
push
jo
sbb
int3
mov
dec
xchg
or
mov
mov
rcll
leave
xchg
insl
cs
lret
push
movsb
cli
insb
test
mov
xchg
xor
imul
add
dec
stos
divb
dec
icebp
pop
xor
ds
or
dec
push
adc
fiaddl
test
push
add
ja
mov
cwtl
jno
inc
adc
push
fs
pop
enter
insb
mov
ret
bound
adc
jge
scas
cs
cmp
and
loopne,pt
add
and
push
test
cmp
mov
pop
aas
arpl
sub
adcb
push
cmpsb
ss
loope
jmp
scas
adc
lcallw
pop
dec
or
nop
loopne
jmp
gs
mov
adc
enter
lods
js
adc
je
int
push
add
mov
mov
jg
xor
mov
fidivrs
mov
push
sbbb
test
stos
pop
mov
dec
sbb
fld
decl
sbb
incb
xchg
or
mov
xrstors
mov
dec
js
sub
sbbl
shll
mov
sti
sbb
lods
adc
pop
shll
dec
imull
cmc
lret
sub
and
sbbb
sub
adc
subl
xor
es
aaa
adc
js
jle
push
xchg
xchg
insl
je
clc
push
in
ret
insb
fcoms
mov
fidivrs
add
push
xchg
xchg
insb
shr
aas
pop
mov
loope
pop
mov
jl
jo
test
jno
sub
mov
adcl
test
mov
adc
sub
adc
out
adcb
test
sbb
push
pop
jo
xchg
xor
test
shr
loopne
xchg
inc
outsb
mov
test
add
into
in
sbb
xor
adc
je
add
lods
adc
cmp
pop
inc
adc
adc
inc
test
jb
mov
iret
cmp
xor
jno
hlt
and
ret
adc
rcl
je
mov
orl
es
addr16
rcrb
xchg
mov
testb
xchg
pusha
mov
add
loopne
sbb
sbb
mov
call
pop
jbe
lret
mov
mov
fisttpll
mov
adc
xor
test
adc
popf
ds
inc
xor
rcr
ja
mov
popf
xor
mov
or
stc
sbb
push
aam
loope
xor
mov
fsub
push
dec
jl
jp
mov
sbbl
outsl
mov
jb
ds
xchg
mov
out
mov
inc
ss
push
in
mov
sub
pop
xorl
or
lds
adc
jns
add
ss
testl
scas
loop
xchg
test
xor
es
loopne
enter
call
fsts
outsb
lock
cmp
lock
push
scas
jmp
push
enter
jecxz
xchg
fwait
ja
sub
xchg
int3
sbb
add
aaa
push
or
pop
and
mov
jnp
pop
jmp
xchg
mov
sub
clc
xchg
xlat
or
mov
pop
roll
jmp
loopne
and
mov
pop
ljmp
jmp
mov
inc
aaa
orb
inc
fwait
and
lcall
pop
jmp
cmpsb
or
lock
push
rcrl
mov
add
sbbl
push
out
in
idivl
cmp
push
scas
dec
mov
mov
jb
imulb
and
push
sub
inc
lods
dec
push
in
pushf
cmp
push
popa
sub
xchg
cmc
in
jp
xor
add
ret
xor
clc
jbe
jmp
adc
pop
jne
cmp
or
xchg
mov
jle
inc
cmp
dec
sbb
lods
stos
add
aad
or
ja
insb
mov
and
incb
mov
sub
pop
xor
xor
push
mov
adc
cmc
ficomps
xor
into
mov
mov
outsb
sub
adc
fadds
jb
ss
cltd
inc
iret
lods
jl
and
cwtl
stos
cmc
adc
fmuls
dec
nop
lcall
cmp
pop
adc
fwait
mov
lock
inc
and
jp
xchg
shlb
fstpl
xchg
pop
in
inc
push
jae
or
cwtl
push
xor
adc
lcall
jmp
pop
cmc
mov
adc
adc
pop
in
shlb
ss
loopne
jge
pop
std
arpl
cmp
xlat
jecxz
sub
add
cmc
cmp
int
ja
enter
xchg
pop
sub
insl
scas
js
jns
xchg
jo
scas
add
pushw
mov
mov
inc
std
mov
sbb
lea
xchg
add
xchg
add
push
jb
divps
xor
sub
scas
arpl
enter
ljmp
dec
inc
jl
mov
fadds
jno
sub
movsl
cmpb
pop
adc
call
je
adc
adc
sub
gs
xchg
dec
lods
push
inc
cmp
push
sti
lods
dec
ficomps
jp
or
repz
rclb
adc
lods
repz
mov
adc
loop
flds
loope
adc
fistpll
adc
add
and
mov
mull
mov
jmp
xor
mov
in
mov
je
lret
mov
xor
je
mov
push
nop
test
sbb
jnp
mov
inc
jle
adc
mov
add
xchg
pusha
add
bound
adc
out
jmp
and
int3
adc
xchg
mov
add
inc
inc
sub
push
lcall
hlt
add
incl
out
aaa
and
ret
pop
in
mov
mov
push
pop
sbb
mov
pop
xor
out
es
movb
sub
std
mov
xor
mov
lcall
mov
inc
pop
ret
push
ret
les
pop
push
or
xchg
and
std
repnz
add
sub
add
out
xchg
inc
bnd
pop
mov
xchg
js
mov
xchg
sbb
or
shl
cmc
xchg
fdivrl
fistps
cmpl
ds
adc
push
out
mov
stc
sub
cltd
lret
aad
mov
xor
call
fnstsw
fucomi
scas
aas
clc
mulb
ret
pop
fldt
sbb
dec
or
pop
mov
push
cli
mov
das
sbb
inc
add
sub
or
dec
mov
adc
push
divb
fs
test
push
mov
or
fbld
mov
xchg
mov
and
dec
pop
inc
fnstenv
jno
add
ret
mov
pop
dec
lret
test
mull
and
out
sar
call
inc
adc
and
imul
jmp
push
lret
or
jns,pn
stc
cld
adc
loopne
pusha
jnp
out
adc
jne
aaa
jb
inc
adc
inc
pop
and
in
cltd
or
lret
test
lods
jle
insb
sub
adc
mov
hlt
int3
jno
jnp
mov
ss
xchg
jmp
adcl
adc
mulb
xor
fbstp
popf
sti
addr16
adc
mov
xchg
xchg
xrelease
into
sub
mov
shlb
ret
or
popf
aaa
lret
in
add
cmc
pop
adc
idivb
xchg
ss
enter
loopne
jb
fcomi
stos
addr16
in
in
xchg
pop
mov
inc
fistps
or
stc
lret
jle
mov
push
and
imul
faddp
jb
pop
stc
stos
ljmp
jnp
leave
insb
adc
mov
mov
pop
sbbl
sbb
sub
shl
add
enter
dec
int3
mov
add
dec
fnsave
push
pop
pop
das
aaa
inc
jmp
mov
es
dec
adc
add
das
push
imul
loop
xor
cmp
es
jns
jmp
adc
sti
jle
lret
adc
lods
push
mov
shrl
enter
adc
jb
jl
mov
mov
aad
push
mov
in
jecxz
sub
sbb
pop
xor
mov
mov
push
stos
nop
decb
add
and
mov
leave
stos
xor
enter
cli
idivb
jae
cmp
andl
xor
repnz
test
mov
call
add
adc
jne
push
sbb
xor
xor
jnp
adc
out
add
shl
js
xchg
sub
rcr
out
pusha
jno
pop
das
mov
jle
aam
cmp
dec
cmpsl
sub
adc
stos
mov
fsubs
mov
jbe
imulb
adc
jg
or
scas
testl
cmp
pop
jnp
jo
push
mov
lods
xor
pop
int3
inc
cmp
rclb
sub
std
cmc
pop
pop
sub
fdiv
xor
push
mov
mov
out
sbb
pusha
and
loop
cmp
fisttpl
ss
mov
rorl
push
sub
or
inc
pop
and
xor
adc
fucomp
ds
insl
nop
pop
adc
dec
lods
mov
shr
int3
mov
test
mov
mov
adc
adc
push
pop
repz
jl
fwait
mov
outsb
repnz
xor
pop
pusha
add
lcall
mov
pop
adc
dec
mov
cld
fistl
push
insb
bound
sub
leave
mov
cli
out
out
imul
js
jnp
xor
enter
sub
jmp
ficoms
push
scas
movsb
mov
mov
pop
mov
pop
fcom
dec
jmp
mov
ds
sbb
leave
cmp
lock
adc
mov
loop
jne
cmpsl
pop
or
add
outsl
lea
jne
pop
movsl
pop
xor
mov
mov
xchg
mov
ja
mov
push
fs
xchg
push
xor
cli
xchg
add
pop
sbb
adc
ss
mov
fcoms
rolb
sbbl
jge
jo
leave
pushf
push
lret
cwtl
ljmp
adcb
jp
jne
pusha
lods
inc
cltd
xchg
pop
add
xchg
jno
mov
das
mov
stos
xchg
mov
sub
adc
jg
mov
or
sbb
mov
fadd
aaa
adc
dec
jp
xchg
xorb
leave
sub
dec
test
jge
gs
lock
mov
cmp
inc
xlat
iret
sti
mov
clc
sub
xor
cmp
adc
jle
dec
testb
lret
xor
adc
inc
aad
jne
pop
mov
pop
adc
insl
xchg
push
test
sahf
xor
inc
mov
js
das
xchg
mov
push
leave
pop
pop
addr16
test
aas
adcb
lock
xchg
pop
lea
mov
testb
inc
and
add
and
rcrb
sbb
jecxz
sub
nop
daa
jecxz
jno
std
scas
xlat
mov
jle,pt
sub
bound
and
xchg
dec
jecxz
mov
jle
sub
pop
cmp
xor
xchg
shlb
and
inc
jmp
pop
fiaddl
icebp
aas
sbb
jb
es
pop
lret
fsubrl
fsubr
jge
mov
popa
stos
adc
xchg
es
inc
jge
xor
add
mov
push
xchg
jl
popf
aas
xchg
adcb
xor
sub
pop
mov
out
dec
ds
enter
sahf
cwtl
push
xor
int3
jmp
push
cmpl
or
ret
add
mov
movsb
jecxz
xchg
push
mov
mov
and
xchg
inc
lods
push
cltd
fiaddl
hlt
ss
movsl
lcall
xchg
shrb
lret
call
orl
pop
leave
test
movsb
mov
adcl
push
lret
sti
mov
nop
mov
mov
dec
push
out
xchg
push
jge
lcall
mov
cmpsl
lock
mov
sbb
jno
aam
lret
stc
xchg
pop
ds
fimull
shl
dec
add
sub
pop
xchg
mov
add
in
cmc
mov
imul
jl
mov
jae
and
inc
push
mov
dec
mov
push
and
adc
test
jnp
icebp
add
clc
push
dec
rcrb
popf
shlb
pop
xchg
mov
add
mov
cwtl
cmpl
inc
jmp
loopne
inc
mov
xchg
test
mov
insb
cmpsb
dec
adc
icebp
sub
add
sub
shrb
sbb
bnd
jmp
call
xchg
mov
in
jae
enter
jge
enter
inc
adc
jp
aas
adc
repz
mov
mov
addr16
dec
notl
xor
sub
aam
pushf
jo
sarl
or
pop
pusha
stos
cmp
mov
sub
dec
xor
fdivrl
mov
adc
pop
rcrl
sbb
adc
push
cmp
xor
or
incl
add
jle
dec
pop
sub
insl
stos
scas
negl
xor
cmp
pop
stc
aam
insl
cwtl
xchg
out
push
ss
inc
adc
pop
lods
imul
sbbl
dec
xor
mov
jne
test
leave
push
fsubr
xor
pop
aas
mov
jbe
test
xchg
sbb
or
sub
in
jb
xor
mov
adc
xor
sub
in
xchg
pop
fldt
jbe
scas
cmc
xchg
pop
repz
loope
sbb
inc
sub
into
insl
or
mov
loope
lods
dec
sbb
loope
jg
and
sub
movsl
fisttps
push
sti
rorl
adc
and
cld
mov
lea
pop
cltd
ds
leave
mov
lret
mov
out
inc
adc
xchg
add
and
aam
inc
mov
lcall
pop
push
daa
dec
das
lock
fcomps
push
add
insb
ret
js
cmc
nop
sub
out
sub
ja
mov
and
adc
pop
sub
in
ret
in
push
out
dec
inc
in
imul
jbe
mov
in
pop
shrb
sub
sub
or
xor
je
adc
push
add
aas
adc
mov
xchg
add
and
outsl
or
pusha
pop
ds
xchg
push
push
and
xor
mov
pop
mov
jle
adc
in
ret
jl
pushf
repz
mov
int
andb
pushf
adc
fs
je
pop
or
adc
daa
pop
sbb
pop
lods
scas
cmp
cmp
jle
sbb
sbb
jg
adc
jns
inc
jb,pt
mov
mov
xor
pop
mov
int3
rorl
aaa
cmpl
sbb
leave
in
adc
je
sti
cmc
stos
mov
add
ljmp
fcomps
jle
mov
inc
xor
iret
mov
push
idiv
out
cmp
xor
test
inc
scas
sub
mov
lret
xchg
sub
cmp
nop
ret
mov
mov
dec
cmp
mov
push
jbe
test
lret
xor
mov
mov
sahf
or
test
lret
ret
add
aaa
push
mov
popf
mov
sub
or
lock
testl
jp
mov
push
pusha
sbbl
and
je
lods
xchg
pop
add
loope
cli
enter
int
movsl
mov
repnz
mov
ficomps
or
ljmp
mov
repz
sub
js
push
int3
cmp
mov
xchg
jo
inc
pop
jg
das
mov
cmp
les
xor
in
xchg
test
add
mov
or
xor
add
test
inc
and
cmp
aad
jp
xchg
out
adc
cmp
and
clc
in
jmp
push
les
divl
pop
xchg
imul
mov
sub
mov
xor
pcmpgtb
fwait
and
sahf
sub
adc
imul
hlt
mov
xchg
call
jbe
mov
inc
ja
or
pop
repz
lds
sub
mov
push
pushf
sahf
ret
and
cmc
shrl
inc
flds
cli
ljmp
adc
loope
loopne
js
ss
cmp
test
outsb
push
push
pop
adc
and
push
stos
jp
sbb
pop
adc
cmp
repnz
jge
out
iret
in
ss
adc
ljmp
xchg
ss
in
jns
fistps
jbe
sub
mov
sbb
sarb
mov
adc
daa
xchg
push
gs
into
pop
adc
push
cs
or
cmp
int3
push
xor
sti
jnp
lds
sahf
cmc
inc
mov
movsb
aam
xchg
rolb
and
mov
cmp
test
cmp
adc
jo
cmpsb
push
aaa
into
pop
mov
mov
inc
into
mov
gs
mov
aas
imul
xchg
mov
ret
ljmp
jge
into
aas
aam
dec
data16
cmpsl
andb
stc
xor
jmp
adc
mov
cmp
mov
mov
mov
xchg
loope
pop
mov
push
xor
outsl
movsl
cmpsb
push
or
insl
pop
aam
xor
test
mov
fsub
enter
xchg
xchg
sarl
dec
nop
popf
es
adc
pushf
push
mov
push
mov
rorb
mov
jo
imul
xchg
sub
sbbb
inc
mov
arpl
mov
jp
adcl
pushf
test
xchg
out
or
addr16
js
dec
sub
int
or
adc
je
adc
push
xor
and
out
fs
jbe
cltd
not
jo
lcall
lock
lret
jl
mov
sub
adc
enter
clc
negb
cmp
adc
outsb
jo
andl
xchg
mov
push
dec
pusha
nop
fiadds
gs
lock
jne
cmp
mov
push
int3
mov
aas
mov
jmp
ficomps
dec
std
sahf
push
imul
mov
or
add
adc
mov
andl
sahf
stos
int
add
ja
push
outsb
xor
xor
mov
jl
sub
inc
pop
xchg
push
mov
test
shl
xor
rorl
fcompl
push
in
inc
adc
push
mov
loope
push
je
lods
aas
in
unpcklps
jnp
fdivrs
cwtl
xor
clc
mov
daa
dec
je
imul
fcomps
in
test
jge
mov
lea
out
fs
lcall
fnstsw
jnp
mov
fdivrs
push
adc
add
xchg
popa
ret
sbb
mov
add
jns
popf
add
dec
mov
lret
or
sub
das
xchg
mov
outsb
repnz
push
sbb
lea
repnz
pop
mov
mov
adcb
inc
push
outsb
sbb
xchg
test
sub
lods
das
aas
leave
jmp
ljmp
leave
add
sti
imul
arpl
sub
ss
hlt
mov
dec
xchg
mov
push
push
das
dec
and
cmp
loop
xor
cmp
add
in
push
mov
sbb
fcomps
enter
mov
rolb
pop
jge
dec
mov
aas
adc
adc
jle
iret
inc
mov
mov
adc
in
xchg
sbb
int
ss
sbb
in
add
mov
cmp
mov
dec
ret
mov
cmpb
mov
lds
scas
popa
cmp
ja
mov
scas
cmp
mov
adc
aas
sub
jo
fdivr
jmp
push
jle
inc
mov
aad
sub
loop
sub
dec
and
in
mov
pusha
je
adc
cli
jge
mov
or
fs
xchg
std
inc
mov
mov
adc
stos
daa
lret
cmp
xchg
cs
test
mov
adc
in
jbe
mov
mov
cwtl
loope
enter
pop
std
ja
jg
xor
cmp
lahf
pusha
stos
adc
out
dec
lock
ljmp
inc
inc
prefetch
or
shll
jge
and
and
push
adc
or
xchg
cmp
xorl
stc
cmp
cmpsl
adc
fwait
scas
xchg
cltd
or
in
xor
add
lret
orb
into
jmp
mov
xchg
lods
gs
in
push
inc
scas
mov
push
mov
imull
pop
push
cli
ss
xchg
cld
les
testb
int
out
xchg
scas
pop
hlt
push
jmp
xchg
rolb
aaa
xchg
adc
hlt
aam
xchg
imul
push
mov
adc
mov
sbb
cwtl
gs
es
mov
inc
mov
mov
loop
in
icebp
pop
mov
and
mov
jns
mov
out
adc
push
sarb
lea
add
sub
orb
fcmovnu
cmpl
mov
out
jg
cmp
mov
in
sub
pop
into
jnp
dec
or
cmp
push
xchg
mov
mov
mov
mov
mov
sub
mov
push
and
insb
xlat
data16
jmp
pop
mov
js
push
adc
add
xchg
xchg
notb
popf
test
ds
cs
mov
adc
mov
mov
sbb
mov
iret
imul
xchg
pop
jnp
push
imul
mov
mov
push
movsb
xor
xchg
inc
das
push
roll
push
sbb
jo
adcl
sub
outsl
cmp
incb
rcrl
pop
pusha
shrb
fld
subl
mov
int
inc
jg
jg
jl
push
xchg
xor
pop
add
scas
adc
sub
and
mov
pop
addr16
dec
lahf
mov
lahf
dec
pushf
cmp
sub
xchg
dec
addr16
adc
cmp
and
je
dec
lret
addr16
adc
adc
nop
pop
xchg
pusha
xor
bound
adc
xor
rclb
and
inc
aaa
mov
push
out
jecxz
add
orl
inc
int
leave
fucomi
pop
jmp
push
jmp
int
ljmp
lret
push
enter
dec
loop
ss
or
fucomip
cmpsb
pop
hlt
scas
stos
cld
fsubrs
xor
mov
pop
adc
mov
sbbl
and
pop
mov
adc
fs
add
test
test
scas
jne
inc
adc
test
mov
cmpsb
push
push
jg
jle
in
out
adc
and
or
cmpl
sub
sbb
cs
cwtl
sub
push
mov
pusha
test
mov
out
sub
lds
inc
dec
push
jmp
mov
cltd
inc
in
mov
cmp
mov
test
jg
loope
fdivrl
pop
mov
out
cmp
mov
adc
mov
cmp
adc
sti
jecxz
add
mov
xor
in
or
xchg
dec
pusha
ficoms
push
and
mov
ret
jne
jle
pop
addr16
mov
leave
jle
outsb
addl
aaa
dec
lods
rol
sub
aam
ret
sub
dec
pusha
adc
out
pop
push
aas
mov
and
dec
fs
mov
cmp
sti
xchg
sub
add
and
fucomi
lods
adc
ret
jb
push
stos
test
fs
fldt
push
in
push
inc
fdivp
pop
pop
push
dec
out
jmp
pop
push
mov
push
adc
and
jmp
sbbl
sbb
inc
adc
jge
or
mov
dec
cmp
sub
xlat
jo
dec
and
cmp
test
xchg
xchg
call
es
pop
mov
pop
leave
jmp
pop
jl
ds
sub
scas
cmp
test
shl
mov
rol
jle
sub
addb
mov
scas
insb
jge
xor
imul
jge
push
ds
sbb
xor
rcll
fisubs
insb
aad
dec
cmp
in
imulb
xchg
int3
adc
fisubrs
jmp
dec
mov
add
push
jns
rcl
aaa
pop
xchg
enter
xchg
mov
adc
lcall
fnsetpm(287
jle
pop
xchg
iret
cmp
js
push
cmp
mov
lods
jg
mov
aaa
jmp
or
sub
adc
jo
js
and
sub
adc
shlb
pop
cmp
stos
aam
les
popa
rcll
fwait
sahf
outsb
test
adc
mov
sub
mov
lret
pop
dec
or
fwait
btcl
stos
insl
adc
mov
cmpsb
xor
or
filds
xor
inc
adc
cmp
jg
adc
ja
in
xlat
pop
adc
ja
adc
test
pop
mov
pop
push
jge
and
pop
aad
bound
lods
dec
cli
sub
ret
fildl
xor
mov
lahf
pop
ds
mov
fistps
mov
jb
mov
sbb
xchg
cmp
xor
lret
in
mov
mov
adc
bound
pop
shll
sbb
sbb
sub
mov
aas
and
ds
xor
lods
in
loopne
dec
push
lock
xorl
aad
repz
xchg
movsl
outsb
xchg
lea
pop
data16
push
mov
popa
fldenv
mov
lea
dec
ffreep
mov
pop
cmp
jnp
std
jecxz
pop
push
mov
dec
es
andl
lods
imul
scas
mov
daa
insb
test
adc
sub
or
out
and
mov
mov
add
mov
outsb
fists
or
pop
mov
ja
push
jne
sbb
addr16
sub
bound
addr16
hlt
cmpsl
mov
push
icebp
adcl
fadds
outsb
jnp
adc
push
mov
in
nop
jnp
lods
sahf
pop
dec
dec
sub
add
and
stos
sub
xor
or
and
push
insl
lods
cmpsb
and
cmc
adc
mov
sahf
jne
push
adc
sbb
aas
sub
sbb
jo
ss
mov
xchg
sub
int
jmp
into
and
jbe
ds
or
scas
add
pop
stos
jmp
mov
xor
adc
std
jo
imull
scas
in
mov
xor
jno
sub
lret
pop
arpl
rol
cs
ffree
cmp
lock
mov
add
std
adc
je,pt
pop
inc
aaa
jmp
popa
aaa
xor
call
lcall
adc
mov
fdivrl
loopne
mov
inc
adc
pop
dec
sub
loope
stc
adc
icebp
mov
das
adc
inc
xchg
in
mov
push
das
adc
push
mov
and
popa
add
fidivrs
sbb
xchg
xor
int
in
adc
std
cwtl
mov
ljmp
fidivrs
adcl
out
mov
inc
adc
xchg
outsb
xchg
inc
push
mov
dec
cmp
scas
and
sub
mov
hlt
inc
xor
adc
test
cmp
sub
insb
fcoml
pop
dec
hlt
jo
push
into
or
les
and
adc
inc
imul
xchg
aas
push
add
ja
adc
inc
rcrl
sbb
cs
ljmp
cltd
lcall
and
and
rcll
sahf
repnz
mov
push
enter
pop
jns
les
lret
push
mov
xchg
loopne
test
lods
fwait
incl
and
xor
jo
lret
push
sub
sahf
cmp
push
and
adc
int3
inc
xchg
es
push
rcr
je
out
xchg
rorl
mov
xchg
pop
xchg
fidivrs
ja
clc
enter
scas
adc
int
xchg
push
xchg
or
xor
mov
xor
cmp
fdivr
addr16
mov
jb
test
push
or
dec
ja
arpl
mov
mov
add
mov
xor
std
pushf
dec
mov
mov
push
xchg
bnd
push
jmp
pop
addb
adcb
or
enter
mov
jmp
inc
stc
insb
daa
push
fwait
pop
xor
test
or
ret
scas
cmp
mov
push
dec
ret
xchg
cmc
mov
inc
dec
loope
pushf
sbb
mov
ds
mov
sub
add
aas
ljmp
addr16
orl
pop
mov
cwtl
loopne
movsl
push
or
mov
insl
pop
xor
cs
orl
insl
ljmp
add
sbbb
dec
int3
in
inc
int
ss
in
sar
outsl
es
pop
xor
test
scas
addl
movsb
mov
push
cmp
adcb
jno
add
pop
jmp
out
stos
in
mov
jle
ret
mov
test
shll
lcall
loopne
aam
dec
ljmp
mov
iret
cmp
adc
mov
push
ljmp
lret
and
adc
jb
inc
push
mov
adc
xor
iret
and
shrb
inc
repz
jl
mov
fmuls
test
and
xor
or
cmp
insb
nop
mov
fidivl
lods
push
and
inc
jb
cmpsb
repnz
inc
and
mov
pop
xchg
in
pop
xchg
mov
leave
rclb
subl
shlb
ret
xlat
sbb
nop
addl
add
xchg
shlb
mov
or
mov
sbb
push
ljmp
jmp
dec
outsb
mov
and
dec
cmc
lcall
das
mov
call
scas
mov
inc
lds
ljmp
adc
push
add
jns
mov
test
adc
mov
mov
lret
insl
pushf
adc
mov
leave
subl
pop
xchg
mov
mov
mov
gs
adc
scas
adc
test
pop
cmp
sbbb
je
adc
mov
gs
outsb
ss
stos
fs
and
jnp
sarl
adc
idivl
leave
out
shrl
lods
inc
push
fiaddl
cli
outsb
dec
lods
mov
mov
adc
push
aaa
inc
push
les
fists
mov
js
mov
outsb
lcall
add
add
imulb
int
les
and
mov
fmuls
aas
or
lods
mov
cmp
subl
lods
lret
mov
js
inc
ficompl
out
in
xchg
popa
dec
daa
into
sbb
adc
add
fimull
jmp
jnp
out
jbe
mov
loopne
movsl
jle
mov
mov
pop
jno
in
push
cmp
jge
cmp
lahf
out
mov
pop
sub
out
aad
call
dec
push
lods
sub
js
mov
adc
or
adc
xchg
xlat
pop
out
repz
lods
xor
ds
mov
cmp
test
mov
adc
sub
and
leave
mov
shl
gs
lret
outsb
inc
inc
fcmovnb
xchg
pop
dec
aam
aas
inc
mov
loop
adc
push
adc
js
lret
cmp
mov
xchg
jb
push
xor
or
cmpsb
push
in
test
sub
xchg
or
inc
sub
mov
sub
push
shrb
fidivrl
cli
mov
xchg
or
lret
aas
and
out
xchg
ljmp
cmpsl
sbb
stos
fdiv
les
or
out
jb
sbb
xor
jl
jne
or
lods
scas
cmpsb
out
stos
push
jg
repz
sbb
jmp
sub
fwait
aaa
and
ljmp
jl
adc
pop
mov
inc
adc
jo
cmp
add
sbb
inc
das
pushf
test
mulb
pop
mov
scas
and
lock
out
xchg
jne
aaa
mov
sub
dec
push
xchg
sarb
shrl
adc
mov
push
pop
mov
mov
aad
sub
ret
aas
pop
imul
mov
jns
lds
or
aam
sbb
jle
xor
xchg
xchg
cmp
push
adc
lret
adc
dec
mov
jne
adc
jl
stc
shrb
loope
adc
subb
push
popa
pop
loope
insl
pop
jecxz
loop
mov
aam
mov
ja
sbb
add
leave
push
sbb
adc
inc
jne
outsb
lock
push
sub
mov
ljmp
jmp
jecxz
push
inc
test
mov
aam
add
xor
fs
adc
mov
jle
pop
pop
jne
adc
outsb
fsts
cmpsb
sub
jle
imul
jl
adc
inc
mov
mov
int3
adc
lods
add
add
or
inc
sub
rclb
fsubr
pop
add
aas
adc
xchg
je
scas
lret
lcall
loop
int3
lret
clc
insl
xchg
xchg
lods
stos
pop
ss
cmpb
cmp
xorb
roll
sti
cld
popf
je
lods
test
inc
ficompl
test
mov
js
mov
in
les
inc
jmp
lods
mov
push
stos
adc
jo
mov
adcb
scas
push
mov
arpl
stos
iret
lcall
mov
nop
dec
mov
mov
xchg
xchg
mov
out
xor
in
outsb
xchg
out
notb
daa
mov
push
cltd
mov
in
enter
and
les
jb
jbe
icebp
xchg
fcmovnu
daa
adc
fisttpl
leave
pop
lock
sbb
stos
sbb
jg
adc
inc
int3
add
or
pushf
xchg
rclb
xor
and
lret
ss
mov
sbb
jbe
and
lock
push
adc
mov
jle
scas
lds
cld
cmp
icebp
sbb
mov
xchg
outsb
pop
das
push
sbb
mov
neg
xchg
insl
xlat
dec
jne
pop
pop
pop
add
ss
nop
push
push
adc
mov
mov
push
adc
sub
pop
jmp
mov
pop
sub
xchg
xchg
mov
xchg
fwait
cmpsb
jmp
popf
push
mov
jnp
sbb
aad
sbb
pop
ss
xor
fadd
into
lods
in
xchg
push
and
in
jle
ljmp
data16
fwait
das
dec
push
mov
into
mov
cmp
pop
mov
pop
dec
rcl
subl
lcall
dec
cmp
dec
test
fstl
dec
sbb
sti
adc
sub
jns
les
popa
ljmp
jbe
lods
clc
dec
in
or
lret
and
mov
mov
sbb
shl
push
dec
je
and
and
pop
aad
and
mov
ss
pop
mov
into
icebp
mov
xchg
test
jmp
mov
loop
xor
nop
outsl
xchg
ficoml
push
stc
int3
cmp
subb
pop
rorl
mov
adc
in
jnp
pop
insl
lds
jns
push
pop
jl
sub
jge
xor
test
cmp
daa
mov
ja
push
mov
mov
sub
and
test
mov
mov
or
mov
jp
call
ds
aas
lret
mov
andl
scas
jge
pushl
push
ja
push
loopne
outsb
popa
mov
sub
or
xchg
lds
ret
jmp
les
cld
dec
xor
mov
and
roll
repnz
lret
or
mov
insb
gs
push
loope
pushf
pop
xchg
sub
xor
inc
ret
jne
add
xchg
testb
or
scas
mov
stos
mov
ss
aas
adc
movsl
xor
and
push
pop
cmp
pusha
loop
das
jg
adc
mov
or
fnstcw
insl
mov
sub
cmp
and
push
int
ss
stos
pop
jbe
xchg
mov
out
mov
adc
rclb
fisubs
adc
mov
jne
inc
sub
frstor
test
fbstp
xor
fisttpl
outsl
mov
sub
adc
dec
cmp
sbb
adc
int3
xor
mov
mov
pop
nop
cmp
in
pop
hlt
or
hlt
ficoms
mov
jge
add
adc
adc
sbb
ja
mov
sub
cmp
pop
or
mov
int
stos
stos
and
fnstenv
cmc
mov
mov
icebp
ss
jbe
cli
jbe
xor
in
pusha
xchg
inc
adc
loope
adc
cmpsl
push
stc
push
push
daa
jg
ficoml
pop
mov
cmpsb
adc
jnp
xchg
data16
mov
mov
movb
mov
mov
add
scas
fsub
jo
adc
rolb
in
lret
xor
mov
xchg
add
add
out
mov
aaa
stos
test
pusha
aas
xor
jge
rcrb
and
or
imul
mov
loopne
mov
xor
jg
mov
leave
jb
stos
cmp
adc
jge,pt
jmp
shrb
int
mov
mov
dec
imul
sahf
or
fstps
xor
out
sbb
jmp
out
xchg
je
xor
mov
adc
js
ficoml
jnp
ljmp
mov
pop
push
cmc
or
lock
xor
shlb
ja
or
int3
add
fidivrs
pop
xlat
dec
into
adc
fisubrs
scas
jge
int3
mov
mov
test
mov
inc
push
mov
sahf
lahf
jne
push
test
xchg
xchg
rcrl
xor
sbb
scas
std
xor
xchg
inc
mov
jl
fwait
and
in
jge
shl
rorl
addr16
cmpsb
xor
aas
cs
adc
mov
sbb
cld
outsb
push
ljmp
jne
pusha
xchg
aad
lods
adc
dec
jae
cmp
push
jbe
popa
and
cmp
adc
fs
ret
repz
and
mov
push
xchg
mov
and
int3
ljmp
imul
push
jb
sub
mov
mov
ljmp
push
push
or
out
sbb
mov
jo
scas
mov
add
cmp
mov
ss
cs
cmp
xchg
ja
mov
data16
pop
scas
sbb
inc
jns
adc
mov
es
push
jg
call
mov
fidivl
jmp
sbb
xor
loope
es
jnp
jne
iret
mov
shrb
adc
stos
mov
cmp
ss
flds
test
mov
xor
xchg
mov
lahf
sub
and
pop
popa
mov
mov
mov
pop
jnp
push
mov
push
sbbl
daa
es
mov
jae
pop
test
push
mov
xor
mov
pop
fstpl
mov
cmp
fcoml
adc
xchg
push
scas
pop
sarb
outsl
xchg
jbe
mov
fisubrs
xlat
push
shll
sub
in
and
scas
out
frstpm(287
ret
cld
fistpl
ss
adc
adc
lret
and
pop
and
loope
fstps
xor
in
test
in
cmpsl
push
notl
sub
xchg
mov
sbb
lods
dec
or
pop
shl
mov
insl
sub
mov
mov
test
loopne
mov
call
adc
jl
xchg
nop
mov
and
in
xchg
and
lods
fnsave
inc
jle
jo
insl
orb
add
fs
mov
sbb
add
repnz
lahf
cmp
xchg
aam
insl
int3
aad
mov
adc
and
dec
leave
test
dec
xor
push
hlt
mov
lcall
xchg
iret
lds
jmp
inc
gs
dec
push
fs
movb
xchg
push
mov
mov
jg
mov
loope
sub
iret
push
das
mov
gs
mov
out
xlat
mov
inc
mov
sub
or
add
xor
jp
ficoms
and
out
adc
mov
xor
loop
adcl
ret
sub
dec
fadd
mov
push
lea
pushf
cld
xchg
call
fs
sub
or
insb
ljmp
fsubrs
enter
push
hlt
mov
adc
dec
push
loope
fs
xchg
loope
into
fsubr
xor
mov
hlt
pop
xor
insb
adc
inc
push
push
adcl
in
hlt
adc
cmpsb
test
adc
dec
inc
sub
in
xor
and
push
lods
sub
cltd
cmp
pop
mov
mov
aas
insb
cmp
mov
add
xor
xor
mov
dec
cmc
sub
jge
push
adc
lods
mov
sub
sbb
add
cmp
sbb
add
das
adc
xchg
sbb
mov
inc
popa
adc
sbb
adc
cmp
mov
nop
cli
sbb
push
cmpsb
fsubrp
clc
cmp
sbbl
inc
js
add
push
in
pop
pop
lea
add
es
jl
std
dec
lods
repnz
jnp
mov
out
jle
mov
testl
adcl
repz
xchg
xor
mov
pusha
cmp
xor
push
adc
mov
test
xchg
mov
mov
in
nop
sbb
pop
xor
dec
push
sub
sarl
iret
cmp
int3
or
sbb
lock
jmp
aam
icebp
orb
adc
cmpsb
push
xor
jge
fstpt
xor
adc
dec
fistl
dec
rorb
adc
add
and
add
push
imul
cmpl
and
mov
jge
adc
xchg
sub
xchg
or
insl
les
cwtl
and
adcb
push
lock
mov
mov
push
sbb
mov
adc
lret
test
adc
in
std
fwait
push
add
inc
mov
or
xor
mov
ds
push
pop
mov
push
push
mov
add
and
lock
pop
jge,pt
and
jbe
cmpsb
shll
cmpsl
nop
mov
dec
leave
addl
mov
ss
dec
out
jg
jecxz
add
imul
arpl
lock
pop
adc
aam
push
mov
or
ret
push
int3
mov
mov
add
cmc
xor
jl
adcl
or
jns
cmp
in
imul
andb
cltd
and
fucompp
adc
movsl
pop
testl
daa
testl
inc
mov
mov
ja
dec
mov
cld
xor
mov
das
jecxz
jnp
mov
add
mov
call
jl
adc
clc
movsl
sub
test
sub
inc
add
pop
add
mov
in
mov
fistl
out
mov
incl
mov
scas
ljmp
test
pushf
out
sbb
jb
cs
out
push
and
or
sub
fimuls
dec
adc
mov
enter
in
pop
jno
add
sub
cmp
add
xchg
mov
or
imul
mov
cld
inc
jp
push
push
or
mov
insb
fsubr
loope
outsl
jge
cmp
lret
sti
pop
subl
sbb
fadds
out
cmpl
mov
lret
jle
cmp
lock
addb
xchg
mov
or
insl
sbb
je
dec
sbb
cld
inc
test
mov
ljmp
mov
pop
jnp
mov
pop
sub
push
aas
adc
mov
test
dec
das
adc
sbb
sbb
flds
scas
lods
push
xchg
lea
mov
xchg
and
stos
pop
cmp
fisubs
cmp
cmp
and
mov
and
jl
cmp
insl
push
das
jns
adc
mov
or
fiaddl
jns
or
and
in
inc
xchg
and
add
mulb
jb
ss
call
cmp
imul
mov
pop
lahf
pop
int3
cmp
inc
out
fdivrs
jnp
dec
stc
leave
push
and
sbb
dec
ret
das
daa
es
jno
xor
inc
sbb
cvtdq2ps
push
shll
jl
pop
aaa
push
xchg
mov
nop
shl
test
inc
xchg
sub
inc
xchg
xlat
jne
daa
mov
and
shrl
in
jg
cmp
adc
jbe
mov
mov
aaa
mov
stc
and
into
sub
sbb
inc
es
push
pop
push
sar
dec
pushf
out
jecxz
int3
mov
mov
push
insb
xchg
aam
mov
pop
bound
andb
test
jne
clc
cmc
scas
cmp
jmp
mov
inc
cmp
shlb
sub
add
mov
xchg
cmp
gs
adc
xchg
call
fidivs
or
insb
cmp
out
pop
xchg
out
sahf
inc
ret
pop
sahf
adc
cmp
ljmp
and
sub
clc
rcrb
jl
mov
dec
push
mov
adc
mov
mov
push
sbb
movsl
fisttpll
and
pusha
adc
add
hlt
and
xchg
mov
es
pop
xor
cmovnp
inc
sbb
repnz
data16
stos
adc
adc
sarl
lea
xchg
xor
add
push
outsl
mov
pop
xor
cmpsb
mov
jle
aam
xchg
iret
xchg
fs
sub
adc
adc
lods
adc
jne
stc
stos
orl
xchg
mov
jge
or
imul
mov
dec
sub
xor
mov
pop
jp
xorps
jl
mov
and
mov
movsb
inc
mov
insb
scas
add
lcall
sbb
in
mov
popf
sti
adc
loop
mov
xor
cltd
push
cmpl
test
push
mov
jae
or
dec
enter
fldt
les
lea
inc
sbb
ja
fsubrp
xor
bound
lock
mov
mov
arpl
daa
pop
mov
ret
sub
mov
pusha
leave
mov
sbb
jnp
and
mov
sbb
mov
leave
lock
mov
pop
js
inc
jg
aas
sarb
inc
jnp
mov
fs
cmp
push
pop
cmp
dec
and
ds
and
dec
xchg
pop
subl
xchg
je
jecxz
jbe
xchg
inc
sbb
movsl
cmpsb
or
sbb
mov
jecxz
mov
les
add
sbb
lods
outsb
xchg
xor
xchg
cmpsb
insl
inc
cld
adc
lods
push
out
sub
aam
lahf
push
ja
sbb
out
faddl
daa
mov
jbe
decl
sti
pop
rcrb
fdivrs
jl
sub
inc
jmp
adc
ja
pushl
jg
andb
imul
js
cmp
jp
fbld
lods
dec
aaa
test
mov
xor
mov
sub
test
mov
ja
push
mov
adc
push
std
jp
xchg
sub
cmp
mov
jo
das
dec
sbb
and
cmc
dec
push
pop
dec
hlt
inc
jge
mov
je
push
push
mov
jge
fstps
dec
jecxz
test
gs
dec
ret
xor
lods
jmp
jnp
push
mov
lds
pusha
orb
push
jg
fimull
cmp
dec
not
add
out
sub
ret
inc
and
xlat
mulb
sbb
adc
test
std
cltd
pop
xchg
adc
repz
add
jo
push
jmp
mov
lret
jg
into
dec
and
outsl
push
leave
mov
add
push
push
dec
andl
mov
push
xor
cmp
mov
pop
adc
push
fldt
push
lods
xchg
push
cmp
cmc
int3
inc
inc
stos
iret
jmp
out
or
test
mov
lock
xchg
mov
ja
adc
push
jmp
mov
and
mov
test
push
or
nop
sub
pop
xchg
fidivrl
insb
sub
or
loope
adc
push
inc
and
push
mov
dec
or
scas
pushf
aas
mov
mov
mov
ds
das
mov
fisubrs
jo
or
aad
mov
mov
addr16
pushf
je
or
xchg
inc
jmp
mov
mov
sub
dec
stos
or
adc
jmp
std
sub
xor
data16
push
cmc
adc
dec
push
jbe
aad
sti
fsubr
imull
lods
xlat
push
shll
push
mov
and
iret
push
sbb
out
sbb
mov
cmp
sahf
scas
js
sub
in
dec
dec
adc
data16
xor
mov
cmpsl
adc
mov
cltd
pop
mov
lock
mov
lods
out
insl
sub
js
mov
inc
sbb
jp
adc
xchg
sbb
sbb
lods
jae
clc
sbb
and
fcmovb
in
mov
add
in
and
add
dec
repz
pop
cwtl
jle
les
sbb
sbb
lock
call
jmp
mov
and
insl
inc
out
xor
rcrl
das
clc
jl
inc
mov
mov
adc
test
inc
ljmp
xchg
cmpl
daa
test
push
cs
add
pop
stc
mov
mov
cwtl
mov
push
ret
stos
fisttps
movsl
imul
out
and
jae
jl
inc
pop
dec
sub
or
fildl
inc
dec
popf
pushf
ret
mov
mov
mov
pushf
add
sub
pop
mov
paddusb
jbe
sbb
scas
xchg
and
fldcw
push
cwtl
jnp
incl
and
std
mov
xchg
fs
jp
jb
jmp
aaa
and
push
pop
fistpl
lcall
jg
arpl
cmp
ja
pusha
sarb
mov
xor
dec
add
sbb
adc
add
xor
mov
rcrl
jbe
adc
and
xchg
lods
mov
cmp
add
xor
adc
mov
test
jmp
lods
xchg
and
mov
push
mov
push
ss
lahf
inc
sub
idivb
xor
into
xor
stos
jl
mov
or
mov
les
and
mov
jecxz
ja
sarb
mov
daa
add
iret
cmp
lea
pop
xchg
dec
lods
out
fidivrl
orb
out
jbe
xor
scas
cmp
jg
out
mov
jl
sub
adc
xchg
sbb
stc
out
insl
out
xchg
cmpxchg
mov
aam
test
xor
cmp
jl
popw
pop
int
jge
xchg
xlat
jo
adc
sub
push
dec
jbe
lret
ret
and
push
mov
ljmp
pop
pop
lret
xor
es
xchg
ret
popf
mov
xlat
in
ds
cmp
movl
push
jnp
xor
xlat
call
xchg
das
mov
mov
adcb
inc
sub
push
or
out
add
je
clc
sbb
pop
and
xchg
sub
mov
pop
imul
inc
pop
out
mov
out
addr16
mov
push
cmpb
imul
push
cmp
adc
adc
jg
xchg
mov
addl
pop
jae
fidivrs
sahf
cs
push
cmpb
pop
lret
cld
mov
push
repz
adc
jmp
xchg
loop
push
mov
mov
test
cwtl
adc
inc
push
rclb
shlb
in
bound
push
scas
xor
in
or
outsl
mov
mov
xorl
mov
xor
jbe
pop
dec
movsl
fdivrl
aam
fidivrs
push
idivb
das
jmp
repz
sub
sub
jl
jmp
rcl
adc
or
pusha
sub
inc
imul
sub
in
test
mov
dec
repz
ljmp
mov
and
sub
cmp
mov
test
lods
pop
jns
dec
xchg
in
loope
inc
mov
fs
push
mov
daa
addl
lret
sub
push
testb
into
xor
mov
popa
pop
stc
xor
cmc
nop
nop
cmpsb
push
scas
aad
pop
dec
fwait
cmp
dec
cmp
and
icebp
and
dec
insb
inc
and
mov
push
ret
xchg
sar
fnstsw
fadds
and
sub
repz
fnstenv
mov
movsb
das
sub
lea
dec
je
outsb
aas
in
movsb
hlt
sarb
push
inc
adc
mov
sbb
mov
push
cmpsl
xor
popa
jne
in
das
cmc
in
or
cmpl
dec
jl
sub
mov
pop
xor
decl
lods
pop
in
fadd
cmp
mov
mov
mov
fcoms
out
in
loopne
jmp
push
mov
leave
je
inc
ja
ss
sti
xchg
jnp
mov
sub
cmp
adcl
dec
bound
dec
jmp
ss
mov
dec
arpl
das
pop
and
and
dec
scas
adc
and
add
push
adc
out
mov
xorl
dec
aaa
adc
pop
and
das
jl
leave
and
xorb
addr16
in
mov
jbe
fldenv
jmp
cmpsl
sbb
mov
xor
jb
adc
mov
and
jge
add
popa
cmp
jecxz
ss
jmp
jbe
xchg
movsl
sti
leave
or
fwait
imul
test
jmp
pop
push
xchg
or
insb
cmp
lds
addb
mov
mov
ja
and
sub
sbb
fwait
jbe
jge
ret
das
cmp
sti
pop
mov
push
and
xchg
sahf
xor
insl
stos
addr16
mov
in
pop
jnp,pt
adc
jo
sarb
jnp
ret
outsb
adc
add
jne
out
daa
out
push
push
add
push
xor
sub
lea
jg
and
or
lahf
cmpsb
xchg
imul
je
xor
or
ljmp
adc
rcl
cmp
out
sbb
into
sbb
dec
std
out
sarl
sub
mov
xchg
and
int3
ljmp
xchg
call
adc
loope
nop
es
pop
mov
xchg
hlt
stc
enter
lret
data16
int3
enter
and
call
pop
jne
jnp
addb
jg
out
idivl
and
into
and
jg
jl
adc
subb
push
mov
push
and
into
or
cmp
fs
dec
es
adc
shr
xchg
sub
jmp
pop
ror
push
mov
pop
sbb
sub
dec
sti
dec
add
jns
push
mov
jle
sub
add
mov
ret
std
bound
imul
jp
mov
cmp
xchg
out
fcomps
out
mov
jg
sbb
das
das
pop
out
std
mov
cmp
insb
sub
dec
aaa
cmpsb
xorl
cmpsb
clc
adc
or
jge
shl
xchg
xlat
mov
jbe
pop
push
addr16
lods
sub
int3
aas
jge
vmovss
jl
add
inc
in
enter
push
jae
sbb
mov
fcomps
insb
fs
ret
test
adc
push
addr16
push
mov
scas
or
jae
fstps
cmpsb
mov
out
mov
mov
adc
loopne
push
sbb
jge
rcrl
xchg
std
push
loopne
outsb
js
mov
adc
xor
cwtl
push
or
adc
pop
add
in
jp
mov
mov
fdivs
push
mov
adc
cmp
lea
push
mov
test
mov
mov
mov
or
in
repz
dec
push
jbe
sub
and
cmc
mov
les
xlat
add
mov
movsl
sti
jmp
adc
mov
pop
ljmp
loope
out
in
rcll
mov
imul
mov
xchg
testl
das
inc
pop
sbbb
pop
mov
call
xchg
enter
stos
mov
mull
jge
sarl
fcmovnb
out
jb
daa
bnd
out
cmpsb
xorb
mov
hlt
or
outsb
and
xchg
fisubl
jle
xorb
push
inc
adc
enter
bound
ret
push
in
mov
sub
fimuls
mov
lds
pushf
out
sub
popa
mov
push
pop
incl
inc
iret
or
js
shlb
mov
shr
xchg
ret
mov
sub
scas
mov
rclb
aas
dec
out
jo
push
mov
test
sub
cmp
cmp
push
add
out
push
inc
pop
in
into
daa
movsb
insl
jne
movq
arpl
lods
pushf
pop
andl
fsubr
and
loop
mov
sbb
push
fimull
add
insl
adc
xchg
pop
hlt
jle
sarl
cld
dec
inc
cmp
jmp
ret
or
pop
scas
inc
cmpl
xchg
inc
sbb
js
xor
cmc
pop
or
adc
xchg
int
into
fsub
ja
rcrb
outsl
cmpsl
dec
icebp
mov
adc
pop
or
fwait
aad
jle
sub
push
nop
and
ret
hlt
adc
ds
fsubl
into
cs
push
xor
clc
jno
fsts
mov
jl
jge
mov
cmp
push
sbbl
sbb
mov
and
stos
aas
xchg
inc
and
mov
arpl
jge
hlt
xchg
enter
xor
push
mov
pop
dec
sti
xchg
jno
inc
cmp
mov
fmull
lods
sub
inc
adc
leave
jg
roll
adcb
push
xor
mull
lock
cmpb
in
cmp
loop,pt
push
push
adc
inc
inc
adc
and
push
ds
push
mov
inc
scas
xchg
adc
adc
and
lock
mov
or
dec
pop
pusha
adc
mov
sarl
jnp
and
pop
push
pop
cmp
in
test
ss
pop
cmc
pusha
sti
hlt
mov
mov
imul
push
mov
mov
lock
mov
add
in
cmp
xor
jmp
mov
inc
jl
jae
mov
jl
insb
jae
add
cmp
cmp
ds
cmp
in
add
adc
mov
mov
cmp
idivl
mov
jne
lds
mov
bswap
lock
and
xchg
enter
lods
xor
xchg
xor
int3
jp
inc
mov
in
push
push
inc
stc
mov
sar
ret
js
inc
xor
ret
test
clc
stos
cmp
push
ss
sbb
clc
aaa
xorl
pop
cmp
lea
test
pop
mov
fs
insl
filds
idivl
test
outsb
push
jl
les
and
cmpsb
imul
fwait
sub
mov
pop
scas
test
mov
adc
daa
es
mov
sub
out
adc
or
dec
inc
jecxz
mov
jns
xor
adc
xor
ret
push
cmp
adc
faddp
add
popf
cmp
clc
subb
ds
fisubrs
cmp
xlat
movsb
pop
subl
mov
jmp
xchg
ja
xor
and
inc
xchg
outsb
and
sti
adc
gs
je
jb
cli
out
pop
jo,pt
adc
ljmp
movsb
and
fidivs
lret
sahf
mov
in
in
mov
outsb
mov
lods
inc
cmp
jge
leave
stos
pop
pop
jo
pop
and
cwtl
mov
pushf
mov
fisubrs
enter
inc
andl
xchg
in
das
lahf
scas
adc
pop
loop
pop
sarb
add
sti
js
sub
jecxz
sbb
outsl
mov
add
insl
icebp
addr16
fiadds
mov
add
add
out
loop
add
stos
dec
xor
mov
lret
push
cli
and
test
mov
sbb
adc
aaa
cmp
mov
leave
scas
rclb
mov
mov
movsl
stc
jecxz
xorl
insl
sub
mov
jmp
mov
lods
cmp
repnz
inc
adc
out
lret
loop
testb
fmuls
sbb
aaa
sahf
jne
cli
pop
mov
add
sti
adc
or
jl,pt
jle
ja
xchg
sub
adc
mov
jbe
sub
mov
mov
add
repz
imul
out
cwtl
negb
pop
adc
pushf
cmpsb
and
aas
mov
arpl
sbb
test
cmc
xchg
xchg
in
retw
jmp
sbb
sub
and
lods
shrl
cmpsb
pushf
cmp
pop
jmp
mov
scas
cmp
data16
push
jl
lods
lahf
pusha
mov
fadd
repnz
push
jmp
mov
mov
test
shll
hlt
and
hlt
push
inc
dec
or
or
push
mov
or
add
leave
mov
je
push
clc
ja
push
lea
mov
int3
xor
push
shll
mov
popa
repnz
stos
das
fidivrl
insl
ret
cmp
fwait
jmp
jno
adc
std
add
push
sbb
cltd
insb
push
dec
test
out
push
imul
cld
sub
clc
and
hlt
fisubrs
xor
pop
jnp
and
sarb
push
out
and
push
xor
fdivl
int3
mov
testl
adc
pushf
jl
ljmp
cmpb
xchg
hlt
lods
cmp
outsb
dec
aaa
loopne
aaa
push
adc
daa
sub
fildll
mov
sti
xchg
repnz
mov
int
mov
push
arpl
ss
imul
lods
jo
loope
in
ss
adc
cmp
jp
xchg
fstl
int3
enter
subl
data16
xchg
sahf
pushf
inc
pop
add
in
xchg
jg
xor
lahf
es
and
mov
or
mov
xchg
repnz
dec
loope
xor
push
xlat
dec
adc
insl
mov
mov
adc
jle
cmpsl
cs
in
int
rcll
lcall
idivl
xor
dec
inc
mov
shrl
inc
ljmp
xor
bound
pusha
pop
xor
mov
insb
jmp
nop
lret
ljmp
push
mov
dec
xchg
jnp
xor
sti
or
mov
jmp
jae
movb
pushl
xchg
xchg
bound
xor
sbb
stos
push
xor
mov
leave
mov
dec
dec
mov
pusha
inc
jno
adc
mov
pop
mulb
fbstp
pop
jo
sbb
xor
cmp
lods
push
repnz
xor
jno
das
and
push
cmc
test
scas
push
cwtl
loope
mov
popl
cmpsl
cmpb
jns
vrsqrtss
shrl
or
adc
outsb
mov
movaps
pop
xor
xor
sub
adc
jne
add
aad
mov
in
mov
jmp
jge
rolb
mov
or
pop
push
movsb
cltd
test
push
leave
xchg
push
cmp
test
out
ljmp
hlt
jbe
aad
mov
jb
cmp
outsb
lock
nop
lret
mov
jo
popa
dec
data16
xlat
mov
mov
ret
stc
call
pushf
xor
lods
push
cmp
adc
mov
pop
cmp
mov
pop
pusha
shrl
test
ja
xchg
icebp
lret
inc
pop
out
mov
loopne
cmp
leave
adc
mov
aas
adc
incb
cmc
xor
shl
rcll
add
cmp
adc
xchg
sbb
or
dec
add
pop
mov
outsb
lret
xchg
fsts
rcl
nop
in
scas
mov
sbb
jg
out
orl
mov
sbb
adc
mov
popa
shrb
cmp
push
add
xor
fisubrs
clc
sbb
mov
int
movsb
popa
rcll
sbb
lods
push
lahf
gs
in
or
enter
fld
cld
fdivl
mov
fdivrl
sbb
in
cmp
test
xchg
leave
aaa
push
push
mov
push
cmc
mov
fnsave
dec
mov
nop
fwait
mov
jbe
mov
push
dec
add
and
cld
fs
jno
ficompl
and
js
push
jnp
outsl
or
adc
add
stos
fnstsw
push
mov
int
out
imul
orb
clc
sbb
xchg
stos
xchg
jp
clc
mov
test
test
xchg
pop
xor
lds
pop
lcall
push
adc
cmc
shrb
dec
mov
cmp
loopne
enter
ja
mov
sub
and
push
icebp
xor
imul
adc
jecxz
adc
mov
bound
mov
jge
and
or
shrl
clc
fs
inc
jmp
push
inc
push
cmc
jae
call
sub
or
ss
in
test
xor
cmp
mov
dec
xchg
inc
jno
pop
or
mov
inc
movsl
and
push
xchg
aam
stos
sub
ret
adc
dec
pop
mov
movsb
fstl
fadds
lret
nop
aaa
xor
xor
aaa
xor
push
int
into
push
mov
dec
mov
mov
les
and
push
pop
pop
cld
xchg
dec
push
outsb
jmp
jp
in
aas
and
add
jp
jbe
add
mov
sub
subl
jle
cltd
mov
dec
dec
out
and
mov
mov
test
fistpl
sub
int
cltd
xor
fisttpl
out
mov
lea
xor
lods
mov
lcall
outsl
ss
inc
adc
cmp
dec
notl
mov
fnstsw
test
pop
inc
dec
mov
xchg
pop
fldl
pop
movsl
sbb
and
test
das
mov
test
ja
push
inc
cld
or
lds
xchg
sub
xlat
sarl
in
mov
mov
xchg
adc
inc
or
or
push
pusha
pop
jge
mov
mov
cmp
test
push
in
lret
cmp
in
pop
jne
loope
push
adc
test
jnp
loopne
xlat
pop
dec
fdivs
pop
in
fnsave
aas
xor
ret
mov
repnz
push
sbb
cmpsb
xchg
aas
ss
sbb
bound
adc
scas
push
divb
pop
and
push
ret
lret
mov
jl
push
cmp
test
leave
cs
ljmp
sub
add
loope
sub
lret
das
mov
and
jl
mull
mov
outsb
xchg
sbb
mov
push
je
or
in
out
jae
sub
add
or
xchg
shlb
inc
mov
mov
enter
jg
adc
or
stos
cmp
movsl
sub
sbb
xchg
cs
push
push
out
inc
adc
fbstp
aas
adc
arpl
lcall
inc
les
mov
jp
jle
cmp
adc
rcl
out
jmp
bound
adc
sbb
imul
sub
adc
jb
inc
enter
cmpsb
shll
les
pop
jmp
xchg
jecxz
lods
clc
mov
add
adc
outsb
mov
sbbl
cmc
mov
daa
into
jnp
int3
or
aas
adc
sub
or
adc
dec
sbb
test
or
fnstsw
push
dec
jo
push
std
js
push
push
lcall
jmp
add
outsb
inc
adc
int3
outsb
mov
ds
enter
adc
push
popf
test
stos
xchg
sub
adc
xchg
and
test
dec
addl
xor
adc
adc
mov
sbb
ret
mov
std
inc
adc
addr16
outsb
jae
out
aas
mov
in
mov
adc
and
inc
std
cs
and
mov
push
jmp
sub
test
insl
xchg
cmp
xor
push
shlb
xchg
xchg
jmp
mov
or
outsl
je
pop
call
jmp
rcll
jns
scas
stos
sub
mov
lods
lret
xchg
fwait
das
lods
sub
mov
enter
out
pop
test
mov
in
data16
mov
cmp
imul
adc
scas
and
lea
iret
or
cmpsb
mov
sub
push
daa
jbe
adc
jne
movsb
pop
inc
cmp
lods
pop
sub
lods
ja
mov
sub
out
lahf
roll
sbb
xor
cmpsl
fisttpl
fildl
jle
lahf
jbe
loop
nop
mov
push
dec
stos
leave
int3
mov
ljmp
xor
cmp
ss
vmovdqu
ret
sbb
xlat
cld
xchg
push
sbb
and
pop
push
jl
pop
sbb
jmp
stc
jne
mov
xor
mov
mov
pop
shl
sub
sbb
push
cltd
insl
arpl
mov
cmp
cmp
mov
xchg
ja
scas
xor
inc
and
cli
jnp
mov
adc
in
xor
inc
testl
lods
push
hlt
or
xchg
xchg
aas
daa
aad
and
dec
jle
je
nop
and
dec
jne
rcll
fs
ret
js
xor
xor
mov
xchg
mov
mov
jmp
in
push
loop
cld
sub
inc
out
jle
cmp
xor
mov
fidivs
mov
push
pop
leave
mov
in
jl
add
into
les
add
incb
clc
fnstcw
pushf
repnz
ja
dec
out
pusha
mov
cmp
out
test
mov
dec
mov
sbb
inc
pop
mov
dec
mov
add
push
mov
fwait
in
in
jecxz
adc
test
and
xor
mov
sbb
aas
fistpl
cltd
pop
cwtl
mov
leave
clc
cmpl
ds
adc
mov
adc
mov
add
push
arpl
mov
int3
mov
xchg
cmp
inc
mov
mov
cmp
jns
pop
mov
fdivl
ds
into
sub
ret
andb
sbb
test
adc
inc
cli
adc
hlt
xchg
sbb
pop
std
lret
inc
stos
xchg
pop
mov
mov
xchg
mov
cmp
xchg
dec
decb
mov
pop
sub
pop
xchg
or
push
cmpsb
or
jge
fldcw
xor
fsubs
and
mov
rol
xchg
int3
sub
iret
jne
push
jle
fwait
inc
cmpsb
into
mov
aam
lock
jmp
filds
add
hlt
push
xor
add
loope
lret
je
and
mov
dec
cmp
sub
dec
pop
jl
jmp
insb
shll
push
stos
push
jp
call
push
mov
daa
and
push
or
fidivrl
enter
xor
xor
mov
popf
sub
outsl
fsubrp
jnp
ljmp
cmpsl
inc
or
mov
test
inc
es
loop
dec
push
xor
xor
cmp
mov
call
add
fmul
jno
mov
or
lock
mov
loope
into
push
lods
js
adc
into
xor
loopne
push
outsb
lods
out
xchg
inc
pusha
and
enter
pop
push
loope
mov
ret
and
aas
push
hlt
lds
add
leave
es
daa
inc
adcb
lret
movsl
mov
mov
sti
into
jl
adc
iret
adc
add
and
and
add
lds
popa
xorb
push
and
mov
cmp
divl
sbb
in
jo
cmp
jne
sub
push
jo
jle
sbb
push
rclb
mov
mov
jge
mov
jle
and
adc
lods
xchg
jp
aam
push
hlt
jo
mov
mov
ljmp
lock
and
aas
in
pop
dec
stc
orb
xchg
movsl
cld
jb
pop
addl
jns
or
sbb
hlt
mov
push
sub
and
jmp
dec
lret
jg
jo
and
call
xor
imul
sub
stc
pop
sbb
xchg
pop
test
dec
jbe
in
and
ficoml
fcmovnb
insl
xlat
jg
cmp
mov
jp
cmp
xchg
lcall
stos
cmc
aas
loop
jns
out
cmp
xchg
fs
mov
mov
mov
xchg
orl
sub
cmp
or
mov
push
xchg
pop
iret
sub
aas
mov
jmp
shl
outsl
push
adc
push
xchg
aas
cld
daa
xchg
push
notb
out
repnz
adc
adc
mov
jno
sub
data16
pushf
cmp
push
jecxz
das
mov
out
clc
aad
ja
and
mov
pop
outsb
adc
mov
sub
jmp
cmc
jae
mov
ss
aas
xchg
ret
xchg
gs
jg
pop
out
in
push
jl
or
push
in
lods
mov
frstor
dec
jmp
or
cli
in
sbb
outsb
pushf
xor
sbb
das
mov
cmp
mov
push
mov
into
xchg
es
cmp
dec
call
aaa
lret
movsl
dec
sbb
int3
into
add
scas
aad
mov
mov
mov
gs
sub
sub
rolb
add
inc
ret
sub
or
cmp
inc
cmp
int
lcall
push
and
ret
mov
adc
call
insb
add
or
adc
sub
inc
xor
inc
popa
push
cmp
incb
fcomps
pop
adc
lods
adc
cwtl
mov
notb
dec
adc
sbb
jbe
cmc
dec
adc
xchg
pop
mov
adc
leave
xchg
pushl
loopne
xchg
and
mov
ja
jmp
idivb
push
mov
int3
jnp
mov
lea
ljmp
cmp
pop
in
sarl
in
in
stos
mov
push
repz
int3
xor
fmull
out
ficoml
xor
mov
or
loope
xchg
fsubrl
es
jmp
jnp
cmp
push
push
aam
lret
sub
cmp
pusha
cmp
int3
push
jno
mov
mov
inc
repnz
aam
rol
fnstsw
adc
stos
cmp
xchg
jbe
mov
fstps
adc
notb
cld
stc
mov
sub
fmull
mov
mov
adc
mov
cmp
push
push
roll
cmpsb
push
inc
stos
lea
mov
shl
loop
enter
shrb
mov
popf
out
aaa
push
jg
js
lock
ja
sahf
push
push
das
enter
jle
mov
mov
fistpll
ja
jg
xchg
push
dec
pop
rcrl
scas
test
push
sub
aas
popf
filds
dec
mov
adc
mov
nop
cmp
js
fmuls
lods
cmp
test
lret
adc
xor
aam
xor
std
adc
mov
lods
sub
mov
jle
js
or
mov
out
push
jle
inc
and
cmp
loope
and
xchg
adcb
sub
in
mov
fisttpl
dec
scas
sub
cld
daa
push
call
jno
pusha
add
clc
fmul
lea
pavgb
push
push
into
sahf
jg
adc
dec
lods
jge
or
xchg
jecxz
and
mov
ficomps
mov
xor
adc
or
pop
notb
cs
jmp
jb
ds
cmpsl
insb
fcoms
nop
add
test
int3
push
xchg
mov
inc
pop
push
movaps
lock
es
fbstp
mov
scas
sahf
shll
mov
loopne
add
push
pop
das
xor
mov
mov
add
in
and
in
xor
loopne
iret
cmc
and
jmp
in
fisttps
hlt
mov
mov
jae
adc
pop
pop
adc
outsb
xor
mov
out
fwait
insb
inc
std
mov
push
lret
imul
movsl
sub
mov
ret
cmp
jg
loope
mov
mov
or
ret
mov
inc
lock
dec
out
in
shr
lods
les
add
je
adc
push
repz
loopne
insb
jp
setge
addr16
pop
push
gs
notb
and
fistl
ss
add
mov
jp
mov
in
and
jo
pop
aaa
xchg
fildll
out
jl
jb
inc
lret
and
fcomps
dec
hlt
mov
jp
out
xchg
or
push
inc
adc
push
scas
mov
fadds
das
ficompl
mov
inc
repz
bound
das
jl
mov
jecxz
jp
cmc
cli
push
ds
mov
cld
popa
mov
into
pusha
mov
mov
mov
sbb
lods
cmpl
or
dec
and
inc
cltd
mov
cmp
mov
sarb
int3
mov
pop
popf
xor
mov
adc
and
cmpsl
and
or
mov
ret
xchg
dec
iret
cmpsl
scas
add
xchg
xchg
out
push
popf
outsl
and
cltd
add
push
sub
sub
and
push
or
outsb
out
scas
xor
adc
mov
fstps
pop
adc
cmpl
inc
in
repnz
aam
es
fwait
cmp
cs
xchg
xchg
sub
jp
aas
adc
jge
lods
xchg
fsts
push
adc
icebp
mov
arpl
pop
shrl
sub
popa
aaa
and
xchg
leave
adc
aam
xor
mov
xchg
xor
inc
cmp
fidivs
movsb
out
sbbl
popf
daa
inc
cwtl
fiaddl
adc
out
fs
jbe
mov
lock
les
je
mov
xchg
dec
xchg
inc
roll
push
mov
jecxz
jbe
gs
sub
xchg
or
mov
and
mov
mov
sub
push
daa
ret
lods
in
ret
mov
push
in
push
sbb
pop
cmpb
stc
sbb
ret
adc
jmp
or
clc
jo
ss
sti
pop
mov
push
add
test
pop
fisubrs
xchg
pop
es
ret
imul
push
test
in
pop
push
sbb
xchg
push
mov
dec
adc
fsubr
lods
jmp
and
icebp
pop
ret
cmp
cmp
loopne
pop
cmp
fildl
ja
pop
test
add
fldcw
adc
out
out
push
test
test
push
mov
mov
outsb
push
sbb
sbbl
pop
pop
sbb
mov
mov
jmp
test
mov
fcomip
dec
xchg
stc
inc
out
push
xchg
ret
and
cmp
mov
lret
push
fnclex
insl
jp
mov
ror
mov
adc
scas
mov
cmpsb
outsl
rolb
dec
pushf
int3
adc
lcall
add
insb
das
jle
adc
outsb
loop
dec
xor
sub
lret
xor
jb
in
test
jle
nop
sahf
mov
daa
lcall
int3
xchg
pop
pop
pop
xchg
cmc
push
adc
dec
mov
xor
mull
insb
aas
mov
rorl
xchg
int3
fs
xor
out
insl
out
cmpsb
inc
pop
fisubl
sub
sahf
fildll
pop
push
enter
pushw
dec
pushl
es
cltd
loope
je
lahf
xor
and
mov
jmp
aad
adc
cmp
std
pop
xchg
arpl
stc
cmp
mov
orb
data16
rolb
xor
out
sbb
push
xchg
je
cld
divb
movsb
mov
out
xor
rclb
mov
xchg
insb
pop
push
lahf
xor
and
idivl
push
aaa
cltd
add
xchg
mov
sub
fildll
push
mov
xchg
aaa
mov
and
dec
sub
clc
or
das
ds
push
insl
mov
fs
xchg
jne
push
lea
popa
imul
add
out
out
jg
dec
in
jmp
and
mov
jbe
xchg
jg
mov
or
into
jmp
xchg
sbb
roll
push
push
xor
and
ljmp
xchg
adc
cmp
sub
cmp
iret
sub
add
fdivrs
pop
add
into
xor
into
xchg
mov
push
adc
fmull
jg
out
mov
cli
movsb
fsubrp
xchg
lret
icebp
aas
dec
mov
nop
mov
mov
popa
sub
pop
dec
cmpsl
cli
sub
xor
add
adc
aad
ret
mov
and
add
jle
stc
xchg
ret
jmp
push
jbe
jmp
mov
loope
movsl
dec
out
pop
add
pop
push
enter
stos
jl
leave
jne
xor
lret
cmp
xor
inc
not
out
jmp
mov
cmc
mov
push
push
bound
iret
xor
mov
push
pop
sbb
jmp
inc
mov
jnp
aas
sub
test
adc
out
addl
or
mov
out
pop
mov
aaa
je
stos
xor
mov
push
and
aam
std
inc
in
adc
dec
ret
dec
push
pushf
adc
and
pusha
ficoms
inc
in
mov
push
mov
adc
mov
sub
inc
pop
jo
out
mov
out
jmp
aad
mov
sbbl
adc
aam
pop
mov
push
mov
xchg
jns
pop
movl
andl
jne
sub
pop
lods
xor
fisttpl
and
or
push
mov
es
xlat
cmp
cwtl
push
loope
daa
xor
sbb
insb
adc
cmp
jne
mov
jle
sub
stos
mov
fwait
popf
inc
shrl
xchg
insb
jmp
cmc
xor
outsb
adc
cli
xchg
repz
mov
cltd
outsb
dec
push
sub
adcl
jl
stos
ja
xchg
mov
jae
lret
pop
call
int3
cmp
inc
mov
mov
dec
and
ds
jno
cli
cmp
push
xor
mov
or
and
leave
xor
mov
imul
out
into
jg
mov
jmp
mov
adc
fwait
fs
xchg
pushf
aas
mov
je
mov
jbe
es
pop
mov
push
sbb
dec
mov
xchg
mov
sbb
les
mov
fs
inc
xchg
pop
loopne
sarl
pop
test
lock
jl
sub
xchg
sub
in
push
adc
je
inc
scas
or
jl
jp
daa
lods
aas
pusha
mov
inc
push
jmp
pop
xor
adc
dec
mov
daa
test
inc
jbe
jns
push
stos
nop
xor
repz
mov
test
dec
xor
fsubrs
sub
mov
nop
jno
push
adc
xor
sbb
in
cmp
jmp
das
or
dec
daa
mov
loop
cmpl
aaa
adc
mov
cmpsb
dec
sbb
imul
mov
insb
jecxz
fisubrl
adc
or
pop
imul
jb
jns
cmp
mov
fstpl
pop
and
mov
test
outsb
push
ja
sub
push
mov
movsb
mov
leave
or
adc
xchg
pop
ds
pop
add
and
mov
adc
xchg
sub
dec
add
scas
add
inc
xchg
push
sub
cmpsl
sbb
js
insb
notl
ds
and
add
ja
inc
adc
dec
mov
ja
adc
jbe
sub
jo
js
sti
lret
fsts
lock
ss
adc
lea
lds
xchg
mov
pusha
andb
ja
jmp
divl
inc
scas
mov
aad
mov
pop
ds
jo
fcoms
aas
fsub
stos
lock
jae
xchg
mov
jae
pop
or
movsl
ljmp
outsl
in
xor
imul
enter
test
in
fdivrl
pop
insb
repz
mov
shrl
aad
sbb
or
enter
movsl
leave
movsl
sub
jae
mov
jecxz
inc
and
daa
std
pushf
jnp
lcall
push
inc
add
mov
rolb
mov
push
mov
fst
push
pop
fmul
mov
movsl
lcall
xor
std
xor
adc
inc
lods
xchg
push
dec
call
das
mov
adc
xchg
pop
dec
stc
and
in
jne
sbb
xor
push
or
test
adc
adc
ljmp
or
loop
iret
pop
add
test
fisubrl
es
jne
adc
lret
imull
adc
cmpsb
ds
xor
es
adc
insb
icebp
jmp
cmp
jae
in
inc
mov
inc
or
push
adc
in
push
add
pop
icebp
andl
out
inc
sbb
lods
test
es
jge
sub
sarb
inc
xchg
and
stos
dec
xor
cli
in
call
in
stos
jge
es
push
sti
pop
pop
fbld
cmpsl
fstl
aas
xor
adc
or
cs
int
jns
mov
and
jbe
mov
rcll
xor
jecxz
jp
pop
sub
enter
push
sbb
pusha
mov
popa
lods
mov
push
mov
test
mov
cmpb
adc
bound
or
adcl
push
mov
sahf
mov
push
push
je
push
ja
xchg
xor
movsb
loopne
mov
iret
push
mov
popa
adc
push
fnsave
inc
es
stos
adc
mov
out
mov
or
insb
popa
sbb
subb
or
cmp
pop
xchg
ret
fs
sub
inc
sbb
loope
mov
pop
xchg
popf
rclb
inc
loopne
leave
mov
sbbl
imul
xchg
push
ljmp
pop
ds
cmp
push
xor
bnd
mov
in
xchg
xchg
and
push
out
jg
mov
push
es
xchg
jae
xchg
jne
jno
mov
mov
mov
jne
jle
cmc
mov
jge
sbb
xor
mov
gs
call
sub
or
lods
jnp
icebp
cld
adc
jbe
push
cwtl
push
pushf
orl
dec
cmp
xorb
lock
xchg
sarb
je
fsubrl
add
jmp
pop
xchg
popf
sub
stos
cmp
arpl
push
sub
mov
adc
into
ja
cld
rcrl
rclb
mov
clc
mov
cmpl
mov
mov
inc
xchg
popf
and
test
mov
jnp
aam
ret
xchg
fcmovu
inc
insb
fs
adc
bound
in
mov
push
bound
lcall
push
push
mov
cmp
ljmp
add
push
stc
pop
data16
dec
enter
and
out
adc
fstl
in
repnz
xor
mov
mov
xchg
pop
sti
aad
xor
add
push
xchg
stos
cld
dec
inc
adc
pop
push
xor
imul
sub
dec
fs
cmp
push
insb
outsb
jge
xor
jecxz
pop
jle
rcrb
sub
push
out
jle
add
or
xor
ret
cmp
jge
jne
sub
xor
xchg
xchg
rcrl
add
xchg
dec
inc
lock
aaa
inc
mov
adc
andb
cmpl
dec
and
adc
fisttpl
jo
pop
rcl
push
repz
cmp
adc
out
ljmp
push
mov
stos
repnz
adc
push
mov
loopne
jae
pop
mov
stc
dec
jno
add
sub
fs
mov
jecxz
jl
scas
es
gs
insb
dec
lods
xor
add
push
ljmp
mov
or
ja
adc
es
jbe
xor
lret
push
mov
and
mov
ret
inc
xchg
jge
int3
sbb
jbe
add
adcb
pusha
adc
push
mov
lds
sub
aas
movsb
cmpsb
sub
in
or
adc
mov
movb
das
call
inc
mov
pop
insl
insb
xor
popf
insl
lods
pushf
daa
imul
ljmp
xor
push
xchg
int3
sbb
add
cmp
fmuls
or
flds
dec
les
mov
xchg
inc
inc
out
pop
pushl
cmpsb
les
xor
and
mov
cmp
mov
fxch
inc
xchg
cs
pop
dec
jmp
jnp
mov
in
xchg
and
stos
cwtl
orl
lock
imul
adc
push
sub
push
mov
or
xlat
popf
out
sbb
int3
xor
add
xchg
lahf
push
mov
iret
popa
cmp
in
mov
ret
or
xchg
sub
and
mov
or
and
sbb
jg
adc
in
ret
adc
out
jbe
das
mov
je
nop
pusha
das
mov
sete
xchg
daa
adc
fadds
pop
lods
subb
addr16
inc
inc
mov
inc
sub
test
pop
mov
jmp
outsl
jecxz
loopne
jbe
sub
shl
sbb
pop
xchg
sub
mov
nop
addl
stos
dec
xchg
inc
stos
mov
adc
push
or
add
xor
es
push
out
sbb
inc
test
nop
repz
mov
xlat
fldl
and
sahf
pop
add
pushf
adc
orb
and
pop
testl
idivl
roll
pop
test
push
mov
out
les
jno
mov
jecxz
cs
sbb
mov
xchg
lret
xor
and
test
rorb
cmp
call
jecxz
or
jge
push
or
pop
sti
mov
cmp
push
cmpl
imul
sub
xor
les
add
loope
xchg
mov
roll
jb
dec
sbb
adc
cmc
pushf
pop
inc
xchg
push
les
xchg
xor
lahf
dec
cs
daa
sub
mov
mov
push
mov
push
or
fwait
das
adc
shlb
fsubp
imul
sub
hlt
je
scas
mov
cmp
ret
adcb
out
mov
cmp
mov
push
jbe
pop
adcl
xor
pop
pushf
jl
xchg
les
xor
rolb
ja
mov
and
nop
xor
scas
cld
mov
lea
inc
out
adc
push
out
jno
pop
cmc
adc
cld
pop
push
aaa
lods
in
fadds
mov
movsl
push
xlat
cmc
sub
and
arpl
sbb
scas
mov
jo
push
inc
test
dec
mov
sbb
arpl
in
das
in
dec
insb
mov
aad
mov
scas
scas
leave
ljmp
popa
lock
push
leave
jnp
xlat
jnp
mov
mov
or
push
flds
into
sbb
cmp
daa
aas
pop
dec
rcr
daa
jnp
ror
or
pushf
ret
adc
cwtl
adc
xchg
mov
test
je
mov
outsl
jl
mov
loopne
addr16
jns
dec
dec
jle
ret
shrb
repnz
fsubrs
daa
xor
ljmp
adc
fstpt
rorl
xchg
jg
mov
adc
cld
xchg
jmp
mov
jb
ss
mov
sub
sub
mov
out
push
sub
out
fucom
out
push
mov
add
adc
and
sub
dec
inc
lret
xlat
and
repnz
xor
adc
loope
xor
xor
mov
jle
push
aam
cmp
fwait
and
push
xor
mov
jns
int
cmp
xchg
les
cltd
leave
push
sub
add
xchg
push
hlt
add
stc
jo
add
push
cmp
out
or
mov
jmp
into
and
ror
pushf
mov
adc
sub
mov
mov
jae
insl
push
aad
xor
imull
ds
pop
xlat
and
fbld
mov
in
nop
rcrl
iretw
ja,pt
cld
ljmp
imul
imul
bound
push
sub
invd
mov
pop
leave
daa
jo
cwtl
sti
lods
fs
into
int3
aad
sub
test
imul
push
jo
pop
lods
mov
mov
mov
lahf
ds
mov
and
nop
xchg
push
sti
insl
in
jmp
pop
loope
jmp
cmc
cmpsl
loop
xor
mov
out
pop
cli
in
test
enter
ss
fs
movsb
mov
xchg
pusha
mov
adc
jmp
in
and
push
mov
ret
and
cwtl
pusha
in
xchg
test
or
and
mov
lcall
sti
mov
cwtl
pop
fsub
vmovsldup
pop
and
shld
adc
push
adc
sub
push
call
das
outsl
mov
pop
mov
in
adc
mov
cmp
pop
lods
jecxz
lea
mov
push
lret
in
icebp
shl
mov
data16
xor
cmp
jo
adc
mov
mov
outsl
mov
imul
pop
mov
push
or
je
je
adc
lret
jno
xchg
pop
xor
jb
xor
addl
cmpsl
mov
inc
xor
sbbl
sub
mov
fstps
mov
nop
je,pt
jne
jae
pop
xchg
mov
push
mov
adc
sbb
push
mov
dec
adc
sub
shll
mov
lods
pop
orb
nop
cmc
iret
ja
out
rcr
xor
aam
movsl
mov
push
addl
leave
cmp
push
inc
in
pop
xchg
aas
sub
pushf
xor
in
stos
insb
xor
shl
jo
add
fimuls
test
int
mov
add
es
mov
and
test
hlt
out
lods
ljmp
daa
cmp
inc
shlb
or
xor
pop
sub
ss
mov
mov
mov
out
pop
sbb
jns
pop
mov
xchg
les
mov
and
jnp
popf
setg
push
mov
jg
or
mov
xor
ret
push
rolb
lods
es
xchg
jnp
inc
cmc
jbe
pop
outsb
xor
insl
scas
in
xor
shlb
or
push
outsl
in
in
inc
push
push
cld
in
xor
sbb
inc
loopne
sub
les
sbb
flds
adc
mov
in
or
add
in
or
js
lock
xor
adc
loopne
pop
inc
addr16
xchg
into
xchg
imul
mov
sub
sub
out
into
jbe
adc
xchg
in
cmp
inc
and
jno
push
and
mov
leave
ret
nop
outsl
xchg
mov
jo
fadd
iret
jge
dec
shl
sub
cltd
or
pop
sbb
lods
pop
mov
stos
imul
jle
ss
mov
xor
xor
mov
dec
or
imul
mov
push
ja
loope
or
or
in
push
je
dec
adc
jns
je
cmc
shlb
jae
xor
fidivrl
inc
pop
mov
lret
xchg
jno
xor
xlat
aas
cmpsl
stc
mov
xchg
orl
push
adc
sbb
ret
xchg
fwait
ja
and
mov
sub
shl
jbe
outsb
xor
xchg
pop
enter
pop
mov
cmp
pop
fwait
push
mov
aas
sbb
sub
jmp
out
xchg
sub
sbb
ret
sub
cmp
xor
push
fs
and
das
out
push
loop
ja
mov
mov
test
push
and
popa
inc
pop
dec
nop
and
mulb
mov
rorb
popf
movsb
mov
inc
cmp
jp
inc
sub
cmp
mov
pop
cmp
cli
adc
mov
ds
arpl
xchg
in
mov
sbb
nop
rclb
cmp
push
inc
mov
loope
push
and
pop
mov
lock
add
mov
xchg
ss
iret
mov
shrb
push
dec
xchg
mov
add
sub
sbb
fwait
push
sbb
scas
sub
fsubs
das
es
ret
pop
mov
mov
sbb
add
mov
aaa
fildl
je
gs
xor
adc
pop
push
sti
pop
xchg
mov
pop
out
das
sub
mov
adc
stos
push
sbb
inc
mov
adc
es
mov
rorl
loope
lea
test
sub
jae
push
sub
pop
adc
andl
fs
pop
sbb
adc
test
adc
shr
mov
test
adcl
inc
ljmp
in
neg
pop
xlat
es
es
pop
pop
sbb
fs
and
pushf
adc
and
xlat
aaa
inc
mov
xor
mov
addr16
inc
cmp
inc
cmp
lret
stos
out
push
and
movsl
scas
inc
insb
jne
addl
or
enter
fcomip
fldt
les
or
and
std
sbbb
sub
sarb
cmc
mov
dec
and
dec
int3
cmc
in
stos
mov
mov
popa
fsubl
push
popa
xor
xchg
xchg
mov
pop
xor
and
pop
xor
adc
adc
fmul
jmp
push
icebp
jno
jo
push
loop
pop
ss
adc
jp
adc
push
lret
push
inc
ret
jle
sbb
xchg
pusha
push
pop
leave
std
subb
stos
cmp
into
inc
cld
mov
fdivl
or
add
dec
imul
idivl
ljmp
add
ret
mov
test
pop
mov
or
inc
out
enter
insb
das
dec
ss
dec
leave
jge
jg
xchg
pop
jp
sub
jne
jo
lods
daa
scas
clc
icebp
pop
adc
dec
jmp
fisttpl
cmp
xchg
call
outsb
js
es
xchg
popa
xchg
ss
rclb
sub
mov
ljmp
push
shrl
jnp
and
fdivp
ret
adc
mov
test
jl
jae
leave
sub
add
in
ds
mov
push
push
mov
in
sahf
jo
and
mov
sub
pop
jge
jo
mov
ljmp
sub
ss
xchg
cmpl
mov
inc
sub
vcvtss2sd
pop
int
push
hlt
ret
push
jnp
push
sbb
pop
insb
mov
mov
loope
icebp
jmp
shrb
xchg
imul
jo
js
jg
out
mov
loop
or
inc
jne,pt
jle
jecxz
sarb
leave
test
shl
mov
xchg
pop
pop
push
mov
push
mov
xor
mov
pop
cmp
lods
enter
cli
mov
inc
pop
stos
iret
mov
int
lods
or
jl
mov
js
les
add
adc
daa
xor
fisubrl
cmp
mov
movsl
pop
int
jl
in
mov
out
repz
fdivr
lret
sub
testb
dec
outsl
dec
int3
mov
adc
aaa
ljmp
sub
xchg
push
mov
scas
xor
stc
sub
dec
jmp
ret
mov
imul
daa
andb
lret
jbe
lods
in
lcall
ret
mov
cltd
add
push
cli
es
imul
cmc
stos
pop
mov
sub
dec
adc
sahf
sbb
lods
inc
aaa
mov
add
lret
push
add
pop
fstpt
insb
mov
sub
mov
dec
xchg
pop
sahf
sub
outsl
hlt
gs
movsb
shl
jle
inc
adc
std
xchg
xor
jmp
inc
insb
rclb
mov
cld
or
scas
leave
xor
sub
lret
mov
mov
push
cmpsl
lods
jecxz
nop
cmpsl
pop
jp
mov
dec
lock
or
leave
call
or
je
xorl
adc
insl
mov
jmp
aaa
les
lcall
ret
in
je
jns
push
and
cmpb
repnz
clc
dec
fldcw
cmpsl
xchg
adc
mov
jo
push
shl
pop
shlb
sub
jl
xchg
hlt
push
inc
pop
mov
in
std
mov
inc
mov
loop
inc
into
ficompl
mov
ja
sbb
cs
mov
pop
mov
int
jae
jno
or
fstps
ss
add
ret
imulb
mov
int
test
icebp
loop
ret
mov
mov
imul
rorb
adcb
iret
xchg
xor
scas
xor
aam
cwtl
stos
fldenv
sub
bound
insl
adc
mov
xchg
pushf
ljmp
jge
fmuls
mov
jl
fimull
lock
mov
xchg
mov
cmp
cwtl
mov
adc
fcoml
inc
sbb
push
xchg
stc
lods
jae
adc
xor
leave
xchg
and
in
imul
in
cmpsl
pop
iret
lock
xchg
faddl
mov
mov
and
xor
dec
movl
mov
pop
rorl
rorl
jge
ds
xlat
push
mov
ret
mov
mov
std
pop
mov
jne
fdivp
or
mov
pop
inc
das
push
lea
jp
adc
jecxz
mov
xor
sub
les
mov
sub
jmp
xor
cmp
jb
xchg
inc
sahf
les
sbb
sbb
jmp
pop
xchg
in
outsl
cmc
enter
cli
insl
mov
inc
loopne
pop
loope,pt
sbb
jmp
push
sbb
js
es
stos
inc
mov
sbb
movsl
inc
dec
daa
ljmp
adc
xor
adc
fisttps
in
insb
and
fcmovbe
jmp
xchg
dec
mov
fdivl
or
aad
stos
aam
mov
sub
jo
push
pushf
fwait
int3
fmuls
fnstsw
jae
fiadds
dec
test
inc
ss
mov
repnz
inc
xor
xor
scas
mov
xor
pop
mull
xchg
mov
ficomps
paddsw
jmp
push
dec
push
dec
xor
addl
dec
mov
push
test
roll
sub
enter
mov
xchg
shll
jmp
test
sbb
xchg
or
xchg
mov
in
xchg
sbb
dec
adcb
orb
adc
add
cmc
pop
mov
scas
fs
shll
dec
dec
ljmpw
xlat
push
jecxz
inc
mov
add
loope
test
xor
dec
mov
or
loope
ficoml
test
xor
cmpb
das
mov
scas
in
adc
jb
sahf
sub
adc
mov
outsl
push
cltd
xor
mov
jb
out
in
adc
bound
cmp
clc
outsl
pop
xor
lcall
inc
jl
jle
subb
jnp
xor
xor
jnp
jnp
nop
pop
dec
or
sub
addr16
jg
push
push
les
aad
pushf
fsubp
xor
orb
test
lret
pop
mov
sbb
lea
popf
add
scas
push
jge
xor
pop
inc
outsb
mov
xchg
and
jne
push
bound
in
jl
xchg
sub
mov
and
add
sub
mov
mov
rol
scas
add
mov
enter
scas
pop
adc
out
adc
js
and
movsb
outsb
rcr
or
fsubrl
push
stc
insl
cmpsl
popf
mov
mov
or
aam
cwtl
popf
std
sub
sahf
jmp
pusha
shrb
pop
loop
rcrb
sub
fisubrs
cmp
push
test
mov
lods
pop
xor
je
adc
outsl
inc
or
aad
cmp
test
cmpsb
push
fstpl
sti
ret
add
mov
lea
push
test
xor
and
xor
jle
ss
clc
mov
in
mov
jg
dec
out
ret
mov
push
mov
jnp,pt
push
repnz
loope
movsb
insl
push
jnp
pop
das
xchg
fwait
mov
std
fistl
lret
scas
add
in
js
fnstenv
loope
movsb
jb
xor
rcrb
ror
jns
popa
das
mul
and
sub
fmull
mov
sbb
push
les
jae
pop
add
test
xor
mov
daa
push
popa
ljmp
or
add
xchg
out
and
adc
xor
fstpl
in
mov
pusha
ret
in
pop
out
pop
adc
add
inc
mov
cwtl
jge
jp
push
push
fs
in
sbb
popf
jo
shlb
fcmovnu
je
mov
add
out
pop
cmp
rep
lods
shl
jmp
or
mov
pusha
and
xchg
test
jns
test
pop
add
xchg
out
adc
mov
add
sti
and
insb
sahf
adc
lahf
out
adc
jmp
sub
jge
jb
jno
daa
ret
std
mov
adc
xchg
sbb
ss
jb
inc
insb
push
sbb
scas
adc
mov
dec
ljmp
rcrl
or
mov
mov
push
cmp
mov
cmp
fs
dec
or
pop
repz
add
inc
fldl
rolb
insb
out
andb
out
cmp
fisubrl
mov
push
xchg
xor
std
xor
hlt
add
and
lret
out
cmp
mov
clc
mov
cmp
out
call
add
jnp
lods
and
push
cmp
add
movsl
xchg
scas
fwait
sbb
mov
adcl
adc
xchg
fisubs
mov
adc
and
lock
icebp
sbb
add
mov
lods
rcrb
push
mov
cltd
mov
and
push
hlt
xor
shll
cmp
nopl
sub
jle
pop
loopne
push
cld
fisubs
pushf
push
fcmovu
stc
cmp
aas
xorb
dec
jmp
aaa
push
jns
cmp
inc
sub
dec
push
bnd
call
aas
xchg
fs
cmp
dec
scas
inc
idivl
sbb
mov
or
lret
rcr
add
into
sub
stos
pop
mov
sub
daa
dec
in
pop
xor
dec
add
inc
sub
jne
push
sub
out
lods
movsb
icebp
inc
out
lock
xchg
stos
movsl
mov
dec
mov
loope
jo
ret
leave
add
sub
pop
xchg
cmpsb
insb
and
hlt
fld1
cmp
mov
int3
cmc
test
gs
cmp
andl
cmp
mov
fnstcw
imul
dec
push
xchg
jge
mov
lods
cmp
pop
sub
push
rclb
lea
mov
jl
xchg
pusha
mov
push
insl
lcall
nop
xchg
imul
cmp
add
dec
dec
cmc
andb
xor
push
jne
cmp
xor
push
push
jge
sti
mov
mov
sub
inc
cmp
mov
hlt
push
lods
xchg
pop
cmp
mov
mov
push
hlt
cmp
sarl
bound
push
sbb
scas
es
jnp
mov
sub
int
pushf
lock
jne
lahf
jl
scas
mov
jecxz
repz
push
aam
pop
and
push
imul
les
sub
icebp
stos
xor
cmp
cltd
xchg
xor
movsb
inc
push
pushf
cmp
cmpsb
sbb
orb
es
add
imul
lods
repz
adc
push
xchg
lret
cmp
mov
mov
mov
bswap
data16
cmp
dec
les
in
sbb
nop
mov
lret
cmp
int3
sti
outsb
xchg
ljmp
pop
add
xor
call
or
jp
fistps
subb
xor
jle
arpl
int3
iret
in
and
out
cmp
les
add
dec
popf
cmp
add
xchg
xor
adc
xchg
ds
dec
add
cmp
inc
inc
mov
sbb
std
xchg
cmp
stc
push
dec
mov
cmp
cli
dec
xchg
adc
cmp
mov
loop
cmp
pop
xlat
cmp
mov
cmp
iret
sbb
push
push
insb
cmc
cmp
lret
and
xor
adcb
sub
lea
insb
mov
pop
cmp
test
dec
mov
sub
lret
iret
rcrb
sub
sbb
jmp
lods
je
cs
js
icebp
push
and
mov
incb
shrb
aas
scas
mov
sarb
repz
scas
cmp
cmpsl
push
cmp
push
shll
data16
dec
inc
mov
lds
lahf
cmp
cli
mov
rcll
mov
and
mov
inc
cltd
movsb
adc
cmp
clc
scas
mov
shl
jle
jne
cmp
xor
movsb
in
mov
jg
dec
xor
jns
mov
inc
mov
shll
push
cmp
mov
push
and
test
dec
fwait
aas
popf
shrb
cmpsl
cmpb
mov
aaa
adc
adc
bound
jbe
adc
cmp
push
adc
rep
or
lahf
sub
jb
push
mov
xchg
rcll
cmp
sbb
cmpsl
mov
mov
add
lea
in
jmp
adc
cltd
or
je
or
inc
sti
les
lods
xlat
sub
xor
add
jbe
insl
test
imul
iret
cmp
loop
out
mov
andl
adc
out
sub
dec
adc
jnp
inc
aam
pushf
and
dec
jl
movsb
stc
lods
mov
imul
pop
popf
jb
cmp
stc
dec
inc
and
sub
push
sub
cmp
je
roll
outsl
xor
fisttpll
pop
sbb
xor
mov
pop
xor
cmp
fcmovb
mov
repnz
xchg
in
mov
out
or
fldcw
repnz
jg
ret
jae
sbb
out
cs
pushf
dec
jl
mov
push
xlat
push
lcall
lret
cmpsb
in
cmp
imul
adc
pop
inc
add
xor
add
and
and
and
mov
popa
inc
out
cmpsb
js
xor
jl
test
cmp
mov
lret
femms
mov
lods
jcxz
cmp
push
rorb
xor
jl
mov
leave
cmp
mov
pop
sub
mov
sub
ljmp
sub
bnd
sub
push
mov
ret
das
mov
data16
sahf
cmp
jae
ss
cmp
pop
mov
cmp
das
adc
popf
mov
cwtl
mov
aas
jmp
push
mov
push
jae
fsubl
pop
scas
cmp
xchg
pop
lcall
fisttps
icebp
fsubrs
mov
sub
out
into
sub
xchg
and
lcall
das
nop
pop
cmp
adc
out
cld
sahf
xchg
adc
xor
incl
daa
repz
sbb
fs
xor
add
or
mov
cmp
mull
push
das
andl
mov
add
sub
out
popf
fdivrl
mov
sbb
gs
xchg
sub
mov
sar
xchg
adc
mov
cmp
ss
imul
sub
fnstsw
inc
pop
aam
int
das
cmp
mov
out
js
in
clc
cmp
cmp
dec
inc
call
push
mov
mov
pop
cmpb
xor
popf
mov
inc
unpckhps
stos
fistps
push
push
test
cmp
cli
test
cmp
ss
aam
cmp
outsb
fiadds
jns
movsb
aaa
les
icebp
mov
out
add
cs
push
ljmp
mov
sub
mov
int
popf
fdivrs
dec
call
mov
xchg
icebp
mov
pop
add
sub
jne
int3
ss
jmp
xchg
dec
fidivrl
xor
mov
int3
push
aam
sub
cmp
add
insb
mov
movsb
int3
mov
cmp
adc
inc
mov
cmp
out
dec
lret
daa
cli
inc
in
sbb
cmp
fiadds
xor
xor
outsb
cmpsl
outsb
cmp
sub
xchg
push
jbe
cmp
sti
or
xor
mov
jo
sub
mov
cmp
lret
loop
js
cmp
mov
iret
cmp
int3
cmpsb
or
pop
pop
or
orb
popf
cmpb
in
stos
cmc
mov
loope
cmp
rorb
loop
push
mov
cmp
outsb
sbb
mov
lea
int
inc
into
and
lahf
sub
push
xor
mov
cmp
and
cmp
out
xchg
add
add
ror
push
jb
cmp
sub
movsb
sub
popa
fs
sub
adc
pop
mov
cmp
stos
aam
mov
dec
or
mov
fldt
pop
mov
gs
jp
daa
xor
inc
pop
cmp
and
adc
sbb
mov
xchg
lods
aaa
xorl
jae
test
xchg
and
das
push
pop
into
jp
jmp
pop
je
xlat
push
mov
push
inc
enter
push
das
ljmp
pop
push
jo
mov
out
test
xchg
clc
push
mov
push
cmc
adc
adc
jmp
push
sub
in
cli
sbb
cmp
inc
and
jnp
aas
and
les
adc
xorl
xchg
daa
or
je
mov
inc
cli
jp
es
stos
ss
xchg
cmc
outsb
adc
and
pop
popf
adc
xor
jge
mov
aas
adc
aad
sbb
shrl
insb
xchg
cmp
mov
mov
sbb
push
xchg
sarb
sbb
aaa
aas
mov
mov
je
or
mov
je
lods
xor
or
test
bound
into
out
in
sub
pop
imul
and
lret
loop
xor
insb
jmp
pop
cs
cmp
daa
mov
xor
out
pusha
and
cmc
jbe
in
cmc
pop
mov
adc
cmpl
jge
ds
add
scas
ja
mov
das
adc
xchg
out
aaa
fimuls
int
iret
repnz
mov
sub
lcall
aas
dec
ljmp
jle
inc
xor
pop
pop
neg
sbb
jge
insl
sbb
mov
ret
add
lods
xchg
insl
rcr
mov
and
lock
pop
fisubrs
in
out
fidivs
adc
andl
ret
xchg
stos
sub
out
lods
enter
jbe
adc
adc
jp
inc
shll
cmp
scas
push
test
lock
int3
stos
xor
add
mov
in
sbb
cld
pop
xlat
cmp
or
ss
ds
arpl
mov
stos
out
inc
mov
dec
dec
and
xor
sti
sbb
push
inc
dec
les
das
test
ret
out
mov
and
loope
sub
jae
sub
sbb
addr16
es
not
dec
mov
push
ljmp
mov
int
xor
cltd
xor
mov
cmp
fwait
movsb
inc
insl
cmp
mov
in
mov
cli
outsb
mov
cmpsb
mov
jbe
fadds
ja
in
jl
fldenv
push
sbb
jne
into
cmp
sbbl
pop
mov
loope
outsb
lret
lcall
xlat
lods
out
mov
mov
inc
and
mov
adc
or
add
xor
mov
test
push
incb
pop
xchg
jp
sub
pop
cmp
pop
mov
out
adcl
in
or
lret
sub
or
xor
ja
sub
push
dec
leave
ret
jmp
imul
leave
incb
or
mov
mov
mov
test
cmpsb
leave
add
repz
sub
imul
clc
xor
mov
add
les
sbb
nop
xor
hlt
ret
test
jae
daa
sub
ljmp
or
cmp
adc
adc
mov
sbb
jmp
and
jne
mov
mov
out
sarb
lret
fidivrs
out
xchg
test
push
cli
mov
and
push
addl
and
insl
ret
push
addr16
aam
arpl
mov
inc
cmpsb
in
lock
xorl
fdivl
sub
pop
push
sub
scas
adc
mov
lods
es
mov
mov
fs
in
popf
enter
inc
push
dec
mov
pop
mov
xchg
ja
cmpl
or
lods
ret
and
loope
int3
mov
out
loopne
outsb
das
int
adc
aad
lds
sbb
mov
cmp
icebp
pop
aaa
mov
xchg
test
jl
pusha
adc
pop
rcrb
lret
mov
and
das
cli
mov
es
adc
cmc
mov
lock
repnz
orb
mov
ret
inc
or
fstl
and
and
xor
and
lods
jg
test
fmuls
xor
movsb
ret
mov
mov
dec
jmp
sahf
push
jbe
mov
lods
xor
push
fldl
nopl
xorb
jg
or
out
mov
mov
mov
adc
fildll
pop
push
pop
sub
lahf
or
lret
daa
inc
aam
mov
dec
int
jmp
sbb
jmp
lods
dec
adc
mov
mov
dec
xchg
push
test
inc
inc
ljmp
mov
adc
aaa
jmp
xor
push
inc
test
lea
sarb
mov
sub
push
stos
adcl
mov
es
xlat
decb
cmp
and
xor
and
test
push
popa
sub
mov
sub
add
or
mov
imulb
jge
xchg
iret
dec
mov
jmp
mov
nop
inc
sub
push
xor
out
push
repnz
gs
mov
and
jp
fadds
mov
retw
pop
dec
popa
scas
push
movsl
inc
mov
andl
sub
jnp
test
pop
cld
es
out
or
lret
xlat
out
add
inc
test
mov
xchg
cli
cmp
push
ss
cmpsb
jbe
add
or
les
enter
or
arpl
xchg
fcomp
sub
jb
inc
xor
cmp
cmp
mov
insl
in
xor
jmp
push
aam
pop
dec
jb
xor
sub
inc
cmp
sbb
jnp
mov
cmp
or
jbe
jbe
inc
jae
and
repnz
mov
pop
mov
mov
ljmp
sub
and
mov
sarl
pop
cmp
rorb
adc
adc
mulb
aas
xchg
sbb
xlat
mov
out
daa
and
clc
je
push
xchg
xor
push
xor
fcompl
movsb
pop
push
inc
inc
and
dec
or
les
mov
jle
mov
test
sub
push
cmp
and
ficompl
xchg
cmp
aam
jnp
cmp
scas
adc
push
pop
adc
add
xchg
xor
xchg
cld
mov
sub
push
push
or
dec
pop
rclb
push
dec
movsb
lods
sub
xor
add
arpl
and
mov
jmp
dec
imul
pop
movntq
nop
out
sbb
and
jne
push
aaa
andl
cmc
fnstenv
popf
xchg
bts
lods
mov
ds
dec
jnp
xchg
repnz
push
cmpb
sbb
jg
ljmp
adc
adc
push
add
ss
mov
adc
cmpsb
stos
sbb
sub
in
cld
xor
mov
add
loope
and
hlt
dec
test
insb
inc
push
push
adc
cmp
jo
cld
lock
roll
add
cmp
dec
icebp
xchg
mov
test
shll
dec
or
push
pop
sub
int3
xchg
pop
dec
fnstcw
xchg
adc
mov
out
dec
mov
or
sarb
and
xchg
and
outsl
xchg
mov
mov
cmc
and
or
push
loopne
roll
pop
lods
fnstenv
ds
in
mov
dec
popf
jge
lds
xchg
in
sbb
adcb
lock
sub
faddl
adc
lret
push
mov
push
inc
mov
xor
push
hlt
fstl
mov
call
ljmp
cmpsb
xchg
jmp
in
and
dec
mov
push
sar
cmpsl
push
xor
push
cmc
leave
or
imul
cs
push
mov
sub
dec
lods
adc
or
cmp
mov
push
sti
out
sarb
loopne
add
or
jp
sub
leave
mov
sti
push
xchg
xor
dec
mov
xchg
mov
cld
test
xlat
popf
xor
or
std
stc
ja
cmp
or
add
push
xor
jno
daa
sbb
aaa
rorl
mov
mov
mov
adc
arpl
push
std
mov
mov
lods
push
cli
imul
cmc
je
inc
xor
lods
mov
orl
push
fiadds
xor
ljmp
jb
adc
dec
push
xchg
ja
out
pop
xor
imul
je
mov
fdivrl
or
xor
mov
outsl
inc
cmp
inc
pop
nop
sub
lret
ret
in
sub
lds
cmpsl
test
stc
pop
fs
cs
lods
push
cmpsb
jge
int
sub
sub
andb
and
jge
imul
cmc
dec
add
jmp
inc
js
inc
add
push
xchg
out
ds
adc
lods
mov
and
leave
mov
dec
sbb
test
or
sbb
pushl
inc
inc
inc
inc
inc
push
pop
mov
adc
ficoms
pop
adc
mov
jecxz
inc
divb
out
push
adc
aam
mov
and
dec
das
daa
pop
add
call
mov
jl
jle
xchg
dec
sub
int
mov
aad
into
push
mov
mov
cmp
mov
push
sub
jp
fdivr
or
int3
test
int
roll
insb
xor
mov
jp
ljmp
cmp
test
fs
loop
cmpsl
test
out
shrl
gs
push
mov
fnstsw
push
rcll
mov
das
fwait
arpl
sbb
dec
ret
inc
lods
add
fs
rcr
mov
add
sbb
movsl
mov
mov
adc
aad
and
xchg
mov
insl
adc
cli
pop
xlat
popa
push
sbbb
das
aad
pop
mov
out
sub
jo
into
mov
scas
cltd
push
xor
mov
sbb
jo
jp
inc
enter
stos
mov
mov
mov
out
jo
xor
cmp
in
mov
data16
insb
out
daa
lods
xchg
or
lea
cmpsl
cmp
push
jle
adc
dec
add
pop
push
mov
inc
rol
mov
cmp
pop
pop
pop
xor
or
in
enter
fidivl
test
jmp
lods
sub
in
lods
mov
test
add
bnd
data16
stos
aam
fcoml
mov
hlt
xchg
adc
in
dec
mov
push
xor
jmp
xor
into
js
dec
cmp
push
mov
int3
out
inc
lods
sbb
mov
dec
dec
ljmp
sbb
jp
adc
scas
imul
stos
and
in
sub
cmp
insb
fsubrs
pop
nop
sub
adc
inc
or
dec
mov
lcall
inc
inc
inc
ret
push
subl
fisubrl
jmp
cmp
mov
das
cmp
adc
mov
cmp
shl
stc
into
mov
imul
int3
movsl
adc
add
add
insb
movsl
pop
sbb
mov
arpl
ja
fdivrs
inc
lods
adc
mov
orl
loope
mov
sbb
enter
test
ret
mov
sbb
and
fwait
pop
cmpsl
ja
dec
test
shrl
mov
push
outsb
mov
mov
cmp
idiv
push
adc
xor
test
icebp
jge
in
lods
push
xchg
sbb
orb
jbe
jnp
jmp
sbb
cld
hlt
xor
pop
jecxz
test
xor
xor
js
stos
xor
mov
sbb
scas
pop
or
pop
sbb
iret
fidivl
jne
cmp
ds
mov
xchg
sub
mov
js
fnsave
jns
jnp
ret
iret
mov
dec
push
push
mov
jo
jne
hlt
movsl
adc
push
sbb
sub
fdivl
in
test
jnp
xor
stos
int
inc
popl
add
mov
jl
js
mov
cmp
push
sub
mov
xor
cmp
mov
addb
inc
movsb
rcr
mov
loopne
pop
pop
adcl
stos
ret
jb
mov
orl
pop
lret
stos
or
dec
xor
add
fnop
jmp
ja
pop
leave
push
mov
jg
sbb
in
cmp
and
add
aam
ja
pop
insl
xor
scas
mov
sbb
push
sub
xor
test
mov
rcrb
sub
dec
pop
loop
or
movsb
lods
aaa
adc
imul
add
ficompl
mov
cs
out
adc
lock
xor
push
out
enter
mov
and
inc
in
cmpsb
adc
xchg
icebp
sbb
ss
cmp
sbbb
or
and
fldcw
sub
adc
inc
mov
adc
mov
std
scas
jl
cmc
cld
enter
mov
xor
in
jp
add
repz
stc
sbb
mov
mov
cmp
mov
pop
jo
mov
int3
sbb
sbb
sbb
bnd
push
sbb
addl
pop
add
pop
jnp
loopne
pusha
ret
daa
cmpsb
aas
xor
lock
popf
or
call
mov
les
aam
mov
pop
jmp
mov
push
hlt
mov
and
sub
mov
mov
push
fs
adc
and
adc
adc
dec
out
ljmp
cmpsl
test
std
scas
fimuls
jle
scas
mov
adc
adc
cmc
mov
jb
stc
inc
and
sub
add
adc
dec
mov
mov
ljmp
inc
jge
and
jnp
and
cmp
mov
mov
jbe
push
xor
adc
cmpl
repnz
cmp
push
dec
and
fistl
scas
subb
sub
mov
mov
lret
adc
mov
int
in
sbb
inc
and
aaa
cmp
loopne
inc
push
adc
jl
repz
nop
push
repz
mov
ja
dec
inc
aaa
mov
inc
xchg
xor
gs
in
jle
loope
movsb
testb
mov
dec
in
add
arpl
jo
mov
and
and
stos
push
shll
mov
jge
shll
fisubl
imul
xchg
sbb
mov
adc
ret
and
pop
sbbb
xchg
jmp
jle
notl
push
xlat
mov
lds
xchg
mov
lret
es
push
xchg
pop
insl
or
lods
dec
jle
mov
xchg
icebp
sub
pop
mov
cmp
cltd
xor
xchg
cmp
xchg
pushf
das
repz
mov
in
mov
ljmp
ljmp
push
or
push
pop
dec
js
push
jp
adc
in
xchg
sub
jb
test
adc
xor
enter
jmp
pop
jo
mov
push
stos
mov
jmp
fnsave
push
vmovups
loopne
stos
icebp
popl
adc
fmull
xor
sahf
push
mov
stos
lea
fwait
rcll
or
jmp
loope
aaa
pop
fdivrp
mov
jne
aad
jne
cmp
sub
adc
dec
rclb
or
sbb
sahf
push
mov
mov
dec
int
push
fs
insb
insl
mov
dec
lcall
mov
out
cmp
fdivrs
ja
inc
inc
aas
dec
jo
xchg
adc
pushf
arpl
in
in
add
and
aaa
lock
mov
call
int3
adc
insb
cmp
adc
xchg
mov
enter
add
mov
mov
jl
and
ja
int
mov
sub
out
adc
rcll
xorl
pushf
jle
jl
ljmp
xchg
adc
loope
dec
inc
push
jnp
and
testl
in
sbb
mov
xlat
jp
mov
hlt
and
mov
inc
adc
nop
mov
iret
or
lea
push
and
inc
pop
or
insb
dec
ret
jecxz
mov
mov
out
cmp
or
add
insb
movsb
lods
dec
jns
mov
fadds
mov
jle
xor
es
pop
xor
cmp
test
dec
mov
jne
aam
scas
shrl
add
lret
int3
dec
add
inc
xor
arpl
add
mov
std
xor
push
pop
mov
and
mov
mov
cs
dec
xlat
lods
cmp
xor
cmpsl
cmp
xor
lds
mov
ds
xrstor
test
out
mov
test
push
sub
cwtl
fs
mov
and
jle
lods
repnz
xor
fcoml
mov
int
sub
ss
adc
jg
sbb
sub
test
push
dec
cmp
jl
sbb
mov
mov
push
push
jl
mov
add
adc
les
es
adc
sbb
jnp
jo
ret
and
lret
xchg
repz
mov
es
mov
pushf
pushf
and
xchg
std
adc
mov
push
cmc
sub
testl
xchg
sub
mov
adc
mov
xorb
sub
jno
fcmovne
add
pop
inc
lods
mov
or
pusha
mov
sbb
pop
leave
cmc
out
xorl
jne
mov
cmc
leave
ds
nop
dec
jb
pop
mov
adc
xchg
and
cwtl
mov
push
add
sbb
jle
cmp
lea
adc
push
push
xorb
insb
pop
ljmp
sbb
xor
dec
mov
orl
sbb
mov
jg
sbb
or
inc
xchg
cmp
nop
fucomi
push
jmp
adc
sub
jo
loop
test
scas
push
lahf
xor
sbb
ss
mov
insb
push
fiaddl
cmp
cmp
fisubs
popa
inc
mov
mov
sub
and
lods
cli
sbb
pop
je
jb
xchg
add
adc
lret
outsl
pop
inc
in
es
imul
adc
xor
in
sbb
mov
pop
mov
popa
dec
mov
adcl
adc
js
das
mov
outsb
in
fldl
sahf
xor
xor
and
xor
imul
adc
sbb
popa
je
cmp
pop
test
and
subb
push
ja
andb
call
lahf
das
dec
xchg
js
cmp
imul
pop
jg
ss
cli
popf
add
adc
mov
es
pop
lods
and
das
sub
add
adc
mov
es
or
pushf
jbe
popa
and
cmp
ret
mov
pop
sub
cmp
es
add
push
es
adc
jmp
mov
dec
pusha
sti
mov
lds
mov
cmpb
ljmp
sub
adc
sti
cmpsl
fildll
addr16
enter
rorb
mov
xchg
outsb
mov
sub
push
je
mov
call
shll
out
pop
adc
pop
mov
loopne
in
int3
or
sub
mov
sub
jns
sti
push
test
stc
jle
adc
fsubr
lahf
mov
popf
mov
movsb
add
inc
clc
or
adc
adc
dec
roll
jae
aas
jecxz
mov
mov
mov
push
mov
popf
in
lea
mov
popf
dec
mov
fldt
add
mov
lret
int
adc
mov
cld
rcr
jo
push
and
aad
ret
es
xchg
inc
xchg
inc
mov
mov
scas
adc
mov
das
push
in
or
std
enter
setg
lea
pop
insl
mov
mov
aad
test
mov
pop
mov
insb
lock
nop
fwait
mov
in
push
cmp
add
ljmp
mov
rcl
or
repz
mov
sub
cmp
insl
or
lods
pop
test
cmp
mov
sub
mov
sub
adc
jne
in
imul
lock
cmpsb
cli
jns
fidivrl
adc
popa
lar
cmp
movsl
fldcw
push
outsl
xchg
xor
popa
sbb
shll
pop
aad
out
push
arpl
jns
data16
popa
or
hlt
xor
sub
pop
sti
jle
aaa
adc
xchg
mov
xlat
pop
cmp
loop
divl
mov
mov
cmp
adc
adcb
lret
andb
inc
iret
jle
es
stc
stos
or
add
scas
lret
fldpi
gs
and
scas
pop
es
cmc
sbb
dec
testl
nop
dec
dec
jne
cmpsb
xor
add
jae
mov
into
fisubs
dec
cli
out
sub
cmp
and
out
es
sbb
movsl
jp
dec
outsl
and
pop
jl
out
aad
jge
dec
hlt
dec
mov
sub
push
push
or
cmp
cmp
hlt
in
xor
test
rcrl
jmp
scas
popf
mov
adc
out
adc
xor
testl
add
call
sbb
mov
idivb
divb
mov
or
test
leave
sbb
dec
outsl
fsubrl
jbe
stc
inc
test
repz
cmpsl
add
pusha
insl
inc
test
inc
addb
andl
push
mov
adc
es
jne
mov
mov
add
sbb
push
hlt
jp
and
rcrb
jge
add
xchg
stos
push
cmpb
cmpsl
pop
mov
add
ds
mov
lds
add
xor
mul
mov
jle
or
out
sbb
inc
adc
movsl
adc
xor
xor
scas
mov
in
xor
inc
pop
fsubrl
popa
aaa
mov
xor
subl
shl
xor
js
rcrl
xor
sbb
test
das
xor
lock
scas
inc
dec
enter
add
dec
movb
adc
push
mov
sahf
pop
xchg
and
popa
outsb
int3
adc
hlt
xchg
or
mov
inc
jecxz
sbbb
pusha
adc
sbb
mov
ds
jo
mov
push
mov
jbe
adc
in
jns
mov
addl
jns
ja
test
sbb
pop
inc
das
mov
ret
add
sub
xchg
jmp
stos
lods
lea
int3
pop
pop
jg
lods
insb
adc
sarb
insl
aaa
aam
xchg
dec
stos
call
pop
mov
adc
add
ss
xchg
jl
nop
fisubl
hlt
cmpsl
inc
stc
jne
das
mov
data16
enter
mov
jnp
xor
jge
push
add
and
into
jp
xchg
push
lock
enter
sub
outsl
in
jbe
and
pusha
or
fcoms
pop
sub
xorb
in
lcall
shl
push
jae
mov
inc
xor
adc
push
bound
inc
jne
into
push
rcr
frstor
lcall
push
sub
jmp
fadds
pop
inc
decb
into
xor
adc
fwait
int3
adc
shrl
cli
ret
movsl
inc
push
mov
cmp
sub
enter
test
in
imul
popa
in
pop
imul
mov
das
clc
out
sbb
lock
js
add
sub
push
jae
insb
xchg
xchg
or
add
jbe
ficoml
inc
xchg
sbbb
cltd
mov
ds
jmp
dec
test
cmpsl
adc
mov
cmp
push
fldenv
in
xor
pop
nop
xchg
sub
jnp
pop
outsb
xor
fdivl
enter
jle
jmp
sbb
movsl
ds
pop
push
mov
sahf
jge
mov
xchg
jbe
pusha
in
lods
adc
mov
jle
hlt
enter
outsb
xchg
repnz
lods
dec
fmull
adc
ja
xor
push
mov
pushf
loop
xchg
inc
sub
outsb
ficoml
stos
mov
aas
xlat
mov
mov
mov
enter
pop
dec
xchg
shll
lret
in
aas
adc
lods
ljmp
fsubrs
cmp
lock
mov
insl
ret
push
fistpl
pushf
std
lods
mov
push
cmp
insl
push
push
mov
shll
test
xchg
and
mov
inc
inc
insl
adc
pop
adc
push
or
dec
mov
mov
stc
arpl
sbbb
and
mul
enter
jp
xor
out
into
mov
dec
jbe
aas
std
sbb
jp
push
xor
pop
pop
sbb
pop
aad
stos
call
loope
push
xchg
mov
sub
rcrl
and
lock
imul
mov
sbb
or
enter
mov
xchg
pushf
sbb
les
test
mov
inc
xchg
xchg
push
mov
scas
lea
pop
xchg
cmp
cli
mov
insb
mov
mov
cmpsb
fs
hlt
push
pop
lret
push
ret
pop
inc
sub
mov
sub
adc
pop
int
inc
adc
dec
or
arpl
xchg
scas
sti
adc
mov
and
cmp
mov
jecxz
fcompl
aad
push
popf
pusha
mov
pop
fistpll
sub
ljmp
out
inc
xor
pop
mov
fisubs
lds
int3
out
rolb
fnstcw
les
mov
in
xchg
jno
cmpsl
roll
jo,pt
ss
and
cmp
loopne
sbb
cld
test
jl
or
sub
xchg
insb
pop
mov
mov
shrl
movsb
mov
dec
mov
sub
sub
leave
or
insb
sti
mov
mov
sbb
adcl
adc
sub
fs
imul
mov
les
mov
pop
jg
ja
jo
ja
dec
xchg
add
jle
sbb
jbe
aas
das
cmp
test
or
sbb
adc
cmp
mov
mov
ds
bound
ds
mov
imul
xor
mov
jo
fsubrl
daa
fists
xor
jo
cltd
mov
test
xor
mov
mov
xchg
dec
xor
movsb
push
mov
stos
pop
nop
cmpsl
lret
jo
mov
ds
mov
mov
pop
jmp
into
rcrl
lock
push
stc
pop
xchg
xor
pushf
addr16
mov
andl
test
ret
ret
aas
shll
nop
xchg
ja
mov
ss
in
sbb
aas
adc
repnz
mov
jge
adc
cld
es
fisubs
fmull
mov
or
xchg
sti
jecxz
popf
fmulp
cli
inc
shrl
add
movsl
rcrb
pop
mov
sub
mov
ljmp
sbb
xor
fstpt
and
and
mov
mov
add
movsb
xchg
scas
in
mov
mov
adc
subl
enter
clc
sbb
test
xorb
in
mov
aas
in
cli
scas
mov
mov
std
ret
sbb
stos
jne
sti
jg
xor
mov
or
loopne
insb
jmp
jmp
jecxz
fs
mov
dec
fsubrs
xchg
adcl
movsb
jp
push
mov
inc
pop
jmp
es
nop
xchg
adc
fisubs
into
jl
inc
jb
sbb
shrl
add
dec
movb
mov
stos
nop
sub
int3
test
in
jl
xchg
aaa
jge
ret
int
sbb
cmp
leave
nop
push
push
je
inc
mov
sbb
in
jmp
add
mov
dec
cmp
xchg
mov
sahf
push
into
adc
mov
in
dec
pop
ffree
cmp
ret
and
and
cmpsb
add
movsl
cmpsb
cmp
push
xor
cli
inc
negb
inc
es
cmc
jl
xor
cmp
lret
scas
inc
loope
xchg
sub
sub
aas
xchg
bound
push
or
sub
loopne
aad
pop
inc
loope
xchg
mov
xor
add
cmc
and
mov
cwtl
jmp
pop
push
mov
xor
lcall
fwait
dec
das
mov
fsubr
popf
test
mov
ljmp
shll
cmp
or
ljmp
inc
push
lret
insb
mov
mov
xchg
in
jle
nop
test
jbe
or
and
les
mov
xchg
lret
sbb
mov
js
out
mov
mov
sub
nop
and
aam
mov
int3
mov
insl
or
les
or
mov
ret
xor
ret
xlat
jl
stc
lods
rorl
sub
gs
push
fsubs
push
adc
sti
pop
sarb
cmp
cmpsl
insl
xor
push
imul
call
xor
jge
sbb
in
xor
nop
jp
fistpl
das
jbe
out
mov
mov
ljmp
adc
cmpl
fidivrl
jp
hlt
test
das
xchg
push
mov
ret
adc
ss
lahf
ret
sub
cmp
sub
mov
out
aas
jmp
inc
hlt
test
xor
enter
mov
cmp
adc
inc
sub
inc
repnz
sbb
and
sub
pop
jnp
addr16
jnp
lea
and
xor
pop
movsl
jbe
xor
sahf
cltd
ja
in
lret
push
sbb
ds
mov
cli
sbb
or
jnp
sti
jge
or
inc
mov
adc
aaa
cmp
out
shr
aad
jb
xchg
pop
movsb
leave
movsl
stc
jb
xorl
lods
pop
popf
repnz
xchg
test
and
je
icebp
iret
mov
insb
cmp
fbstp
cmp
xchg
cmp
aaa
ds
pop
hlt
movsl
inc
xor
lods
outsl
sbb
je
int
mov
rcll
or
or
fcmovbe
sub
adc
push
ljmp
jne
push
adc
xchg
out
inc
lcall
pop
lret
lcall
popf
pusha
ficoml
std
inc
jl
shll
insl
inc
xor
out
adc
xchg
cli
inc
rorl
pop
sar
hlt
sub
mov
dec
sub
adc
out
in
repz
xchg
jbe
loope
ja
push
mov
push
filds
loopne
adc
lock
orb
fbstp
push
xchg
daa
cmovb
aaa
insl
mov
subb
adc
jnp
or
jb
aam
rcrb
inc
je
adc
int
test
jne
inc
aaa
xchg
mov
mov
adc
rol
subb
dec
jbe
jp
jp
adc
test
cmpsb
out
mov
jl
cmpl
sbb
movsl
dec
adc
shl
jecxz
push
pushf
xor
sbb
ret
inc
nop
aam
sbb
fsubs
xor
mov
fldt
ret
mov
push
js
lcall
xor
adc
sahf
arpl
lods
stc
adc
mov
inc
mov
daa
shlb
dec
in
pop
adc
mov
inc
mov
pop
or
inc
jecxz
mov
cld
cmpsl
mov
leave
outsb
sub
xor
loope
adc
jns
lds
cld
mov
out
add
sub
je
or
mov
aas
inc
jp
inc
push
imul
scas
out
cwtl
xor
cmp
imul
jg
aas
jg
arpl
add
les
xchg
rol
out
add
inc
insl
xchg
ja
xchg
int3
fwait
jp
scas
pushf
std
push
adcl
mov
icebp
pop
test
adc
sub
jl
inc
add
mov
lret
mov
dec
push
push
enter
lock
in
xor
sbb
jge
mov
int
sub
lods
jbe
dec
add
es
inc
or
xchg
mov
xchg
cmp
mov
ja
sub
outsb
cs
pusha
mov
push
mov
xor
cmp
fbstp
mov
repnz
sbb
cmp
outsb
dec
ret
push
sub
mov
fs
pop
mov
or
sarb
testl
cmp
inc
pusha
push
je
push
leave
cmp
aad
adc
and
sbb
in
pop
mov
cmpsb
je
push
xlat
cld
icebp
or
xchg
mov
enter
into
xor
in
mov
test
out
lods
movsl
dec
push
push
dec
cmp
cmp
hlt
xchg
out
sarl
mov
es
cmp
xor
adc
stc
loopne
lahf
xchg
cmp
jbe
and
movsl
cmp
xchg
imul
ret
xchg
popa
in
fwait
rcrl
aaa
mov
cld
cmp
shlb
cmp
imul
dec
ss
scas
dec
push
cmp
addr16
aad
fcmove
lods
xor
in
test
sar
cmp
and
sbb
fwait
add
sub
pop
pop
ljmp
xchg
and
sub
fidivrl
inc
adc
and
mov
add
cmp
mov
adcb
sti
inc
repz
sbb
sbb
ret
insl
xchg
pushf
dec
cmp
jecxz
loope
add
loopne
jbe
sbb
cmp
dec
sbb
aad
mov
cmp
lret
lcall
sub
dec
sub
push
mov
mulb
push
pop
aaa
mov
pop
xlat
ss
push
add
lods
cmp
dec
fistpl
cmp
mov
daa
cmp
sub
xor
hlt
ss
inc
cmp
cmp
cmp
cmp
in
xchg
lea
ja
mov
scas
cmp
dec
pushf
in
push
loop
fcoml
sarl
ss
sbb
mov
lret
jl
mov
sub
pop
into
pop
mov
insb
ffree
std
mov
les
xor
cmp
aaa
cmp
cwtl
int
lods
icebp
xor
xlat
push
dec
adc
cld
ret
jp
lock
mov
mov
mov
and
in
push
and
sbb
pop
inc
dec
int
lods
inc
lret
out
sub
push
and
push
sbb
dec
xlat
es
fmull
jmp
adc
sbb
mov
sub
mov
aam
push
cmp
leave
inc
pop
xchg
jnp
jecxz
xchg
lock
sub
ret
add
sub
pushf
das
test
popa
sarl
mov
xor
movsl
sub
inc
adc
sub
add
or
sarb
xchg
xchg
mov
icebp
sub
pop
jmp
je
inc
jae
cmp
jo
cmpsl
push
cmp
cld
cmp
outsl
test
push
rol
cmp
into
or
mov
jmp
lahf
cmp
pop
das
mov
sub
mov
lds
pop
in
sbb
rcrb
pop
jne
insl
jbe
loope
dec
push
movsb
into
cmp
in
or
xor
cmp
dec
out
jp
pop
push
fdivl
in
jns
ror
cmp
or
xor
cli
cmp
popf
decl
cmp
add
and
shrb
data16
jne
fcmovne
xor
ret
loop
aad
cmp
push
call
jne
adc
lret
push
mov
xlat
cmp
scas
mov
mov
mov
push
dec
push
int
adc
cmp
shrl
adc
xor
jno
out
cmc
movsb
pop
imul
or
add
pop
arpl
das
repz
lahf
or
mov
xchg
pop
pcmpeqd
mov
or
mov
mov
mov
je
adc
nop
rolb
or
mov
sbb
xor
jp
push
ja
repz
xor
popa
testb
insb
or
lods
out
xchg
std
repnz
sbb
bound
inc
ss
adc
mov
jle
imul
jo
fisubrl
out
push
mov
outsb
outsb
scas
adc
add
cs
mov
adc
mov
fdivl
pop
jge
push
dec
ret
pop
add
mov
loop
addr16
arpl
lret
out
and
mov
into
cmp
xchg
in
inc
movsl
sahf
dec
pusha
notl
push
mov
and
jnp
jmp
stc
xor
adc
mov
lds
inc
into
jns
or
or
lods
inc
mov
xor
into
cs
in
mov
inc
xchg
lods
pushf
insl
dec
mov
iret
and
sub
scas
mov
sahf
mov
test
jg
xor
call
leave
mov
shll
adc
addb
lods
loop
enter
push
clc
mov
js
pop
insl
outsb
lods
flds
mov
addl
mov
inc
sub
and
jmp
mov
adc
insb
int
std
cmp
xor
xor
adc
les
xlat
mov
in
loopne
push
pop
pop
xlat
je
cwtl
inc
cmp
insb
pop
nop
xor
add
imul
pop
push
mov
pop
lret
mov
jmp
mov
lods
into
dec
mov
push
mov
fdivrs
xor
pop
or
cmc
dec
inc
nop
or
in
mov
adc
push
sub
mov
dec
xchg
add
addr16
outsl
pop
push
and
out
scas
adc
add
roll
jp
mov
fdivr
cmc
push
test
cli
mov
mov
mov
inc
call
mov
mov
ss
or
int
sub
rclb
lahf
mov
or
inc
test
scas
test
lods
stos
sbb
mov
jo
dec
xlat
xor
je
mov
adc
add
in
mov
leave
or
cmp
hlt
mov
lds
ja
inc
pop
aaa
test
outsb
into
push
add
sub
inc
jno
pop
cs
es
xchg
cmpb
xor
xchg
push
insb
push
add
xchg
jne
sbb
pop
lds
and
movsb
inc
sbb
fsubs
adc
adc
shlb
adc
jge
inc
jg
mov
sub
sub
leave
lods
xor
mov
ret
out
inc
ljmp
idivl
iret
xchg
ss
fisttpll
sbb
jnp
aam
js
icebp
out
cld
sar
std
insb
jecxz
push
xor
sub
adc
insb
adc
jmp
leave
or
add
xor
xor
dec
jecxz
mov
mov
and
mov
or
mov
push
mov
divl
sub
in
add
mov
adc
mov
imul
jmp
add
xchg
jl
aad
cmp
jne
je
or
jmp
lock
sbb
pop
aaa
adc
fisubs
nop
or
adc
xchg
xlat
jbe
mov
mov
sub
std
mov
jo
jmp
dec
movsb
mov
or
push
mov
mov
adc
ss
js
fs
push
mov
xchg
aad
int3
jg
adc
insl
je
popa
cmpsb
push
pop
xor
movsl
adc
insb
xor
adc
mov
adcl
das
decl
push
aam
sbb
ljmp
hlt
push
stos
cmpsb
out
pushf
add
cmp
push
dec
add
sub
push
jbe
xchg
lods
mov
xchg
pop
addr16
jp
pop
pop
adc
fdiv
mov
xchg
cltd
and
inc
mov
hlt
cld
decl
out
inc
pop
fsubrs
aam
cmp
pop
test
sti
lret
xlat
lods
add
mov
imul
push
rol
or
gs
cmp
xor
jmp
iret
fadds
push
pop
adcl
imul
jbe
push
es
adc
movsb
movsl
lea
pop
jle
sub
pop
lret
inc
sti
xchg
mov
xchg
push
push
mov
out
dec
sbb
inc
mov
cli
fcmove
push
cmpsl
mov
cmp
jbe
pop
and
ss
xor
stos
sarb
xchg
mov
adc
mov
cs
out
and
ljmp
or
xor
jo
pop
frstor
xor
cmpsl
mov
cmpsl
xor
aas
jbe
jb
jp
es
lret
ja
xchg
inc
in
daa
add
jo
and
ja
mulb
add
and
cli
xchg
jle
ret
repz
jno
dec
mov
js
xchg
mov
mov
jl
int3
mov
and
xchg
adc
rcrb
in
inc
dec
mov
mov
mov
push
sub
in
cmc
xor
gs
pop
ds
call
sub
push
adc
inc
movsl
pop
dec
cli
jle
push
dec
push
xorl
adc
cmpsl
jmp
xchg
insl
adc
push
sarb
outsb
aaa
jle
dec
shlb
addb
mov
mov
outsl
jmp
in
ds
sbb
mov
and
ret
int
scas
clc
jno
rcrl
lods
inc
adc
cli
ja
xor
mul
xchg
dec
imul
in
and
pop
in
mov
lods
add
hlt
fidivs
pushf
or
mov
outsb
ret
loope
fdiv
idivl
repnz
icebp
xchg
pop
inc
fsubrl
stos
jno
mov
mov
mov
mov
ljmp
xchg
aas
test
les
es
jmp
loopne
repz
mov
scas
sub
setnp
sub
xchg
lds
inc
mov
jns
push
lret
outsb
mov
and
inc
out
lods
pop
inc
xor
mov
pop
mov
mov
push
fisttpl
inc
sub
insl
mov
inc
clc
aas
adc
cs
pusha
adcl
cmp
addr16
mov
dec
mov
rolb
mov
into
test
shll
adc
sub
jl
enter
shr
adc
add
dec
lock
insb
fcmovnbe
jnp
clc
sti
scas
cmpsl
mov
loop
pop
add
js
nop
outsb
sarb
inc
sbb
xchg
inc
adc
pop
inc
sbb
xchg
mov
mov
sbb
jmp
aad
pop
sub
push
and
pop
pop
xchg
mov
fcoml
ret
mov
shll
cmp
fwait
shrl
mov
xchg
mov
xchg
mov
xor
and
or
sti
mov
daa
jnp
fmulp
mov
push
add
in
icebp
xor
sub
mov
out
je
pop
pop
das
pop
andl
imul
adc
sbb
and
js
lcall
enter
lock
inc
mov
imul
add
dec
xor
pop
iret
mov
mov
add
push
rolb
or
cs
addl
sbb
sub
and
jo
pop
insl
pop
sbb
push
xor
in
fs
mov
or
test
lahf
jne
push
pop
call
push
sbb
test
inc
adc
dec
push
pop
jnp
loopne
aas
mov
sti
aaa
rcl
sbb
jns
arpl
mov
xchg
push
cmpsl
sbb
clc
push
shrl
rcl
mov
xor
push
inc
adc
sbb
pop
ret
enter
and
adc
push
adc
data16
jg
pushl
jb
sbb
jg
mov
ss
mov
jbe
add
push
out
incl
xchg
add
lods
xor
enter
jp
clc
mov
into
je
das
sub
jnp
rorb
outsb
xor
in
and
and
xor
sbb
sub
jge
pop
cs
js
cmp
inc
int3
nop
mov
adc
movsl
rorl
sahf
and
rorb
sub
mov
dec
dec
pop
mov
stos
jne
and
sahf
mov
jl
das
in
or
and
inc
dec
mov
push
pop
dec
cli
decl
aaa
shlb
idivb
outsl
inc
or
jmp
div
out
insb
dec
adc
jbe
ficompl
lods
mov
and
add
inc
fisttpl
adc
clc
push
jl
jno
lods
xchg
push
mov
sbb
imul
aad
adc
push
lcall
clc
adc
dec
add
in
adc
jns
dec
ds
out
jno
jns
aad
jl
dec
adc
call
mov
xchg
insb
dec
push
dec
in
adc
je
xchg
jae
bound
loop
add
cmp
push
inc
repnz
and
push
mov
inc
mov
cmp
jge
test
cwtl
jmp
mov
push
nop
mov
and
mov
int
lods
mov
std
push
ds
adc
imul
lods
out
cli
cmp
cld
fucomi
xor
jae
repz
xor
jb
xchg
mov
clc
jo
pop
push
sahf
adc
push
fnsave
jle
sub
pop
mov
cmp
jns
jnp
jmp
xchg
mov
sarb
movsl
imul
nop
stc
xchg
mov
cmp
mov
cmp
test
inc
call
mov
mov
pop
sbbb
xchg
mov
popf
push
js
iret
aas
or
imul
fdivrs
jnp
mov
xchg
cmp
lock
fs
mov
mov
cli
mov
sub
repz
and
sbb
cmp
popa
cmp
dec
push
cld
stc
cmp
mov
cmp
add
sbb
pop
lcall
xor
fdivl
cmp
and
stc
dec
in
push
sbb
test
inc
dec
mov
jne
push
cmp
sub
into
fucomip
push
pop
mov
or
pop
jbe
cmp
outsl
pop
outsb
jl
and
movsb
hlt
cmp
inc
fs
pop
call
daa
sbb
ret
mov
mov
lock
imull
loope
test
mov
xchg
xchg
and
jns
sbb
lcall
pusha
mov
cwtl
stos
dec
jo
cmpsb
mov
bound
or
cmp
lods
mov
mov
inc
mov
cmp
aam
mov
addr16
stos
pop
mov
cmp
pop
inc
sbb
xor
fistps
icebp
shrl
dec
cmp
ficomps
popf
aam
data16
mov
aad
cmc
sahf
in
dec
scas
cmp
fnsave
lods
jl
cmp
mov
fistl
int3
xor
inc
int
xorb
in
imul
mov
ret
cli
pop
scas
dec
xchg
push
ja
movsb
dec
and
cmpsb
imul
dec
shlb
cltd
pushf
jmp
jbe
call
stos
ds
push
mov
push
mov
adc
sub
jae
movsb
jb
xchg
inc
mov
lods
clc
out
ficomps
movsl
dec
outsl
xchg
arpl
mov
cmp
addr16
cmp
test
inc
data16
lods
sub
mov
data16
lods
int3
sbb
inc
andl
cmp
add
clc
pop
pop
xchg
jmp
int3
xchg
cmp
ljmp
jnp
and
pop
dec
ja
iret
push
mov
movsl
mov
mov
pop
movsb
mov
test
or
jo
sub
popf
cmp
iret
cli
jns
hlt
popa
or
inc
lcall
out
dec
fmuls
repnz
inc
test
dec
cld
add
mov
inc
and
pop
mov
mov
mov
ret
push
cmpsl
inc
cmpsb
or
mov
sbb
insb
sarl
mov
test
push
sbb
add
sahf
push
cmp
addb
mov
mov
out
pop
les
sbbl
or
pop
cmp
mov
jb
jp
pusha
sub
dec
push
roll
sub
push
push
outsl
jmp
xchg
bound
call
mov
sub
mov
sub
add
push
int
test
std
push
jae
ss
xchg
and
cmp
pop
ret
cs
mov
push
aam
mov
jg,pt
dec
inc
mov
pop
cmp
leave
xor
stos
and
in
jnp
dec
ret
insb
cld
adc
mov
cmp
push
add
mov
xor
jbe
xor
loopne
into
movsl
push
push
call
sbb
mov
xchg
jo
cmp
pop
xor
jmp
aam
lock
xor
mov
lret
and
gs
fcompl
repz
pop
out
xchg
cld
sub
insb
popa
sarb
fdivl
cmp
jl
setge
mov
cmp
push
in
aam
ss
cmp
dec
or
add
sub
roll
or
pop
or
jmp
pop
out
test
addr16
cmp
pop
stos
subl
cmp
fmulp
dec
in
dec
sbb
jae
in
mov
xchg
cmp
cltd
fstpt
inc
sarl
sub
adc
movsl
xchg
pop
cmpsb
cld
imul
cmp
inc
fsubrl
loopw
xorl
sub
or
cmp
sti
in
repnz
int3
loopne
inc
call
scas
pop
add
popa
or
scas
cmp
dec
lods
movsb
dec
xor
mov
inc
pushf
sub
mov
jecxz
pop
xor
rorb
nop
adc
cmpb
push
pushf
test
in
ja
inc
or
aas
mov
mov
ret
sub
out
cmp
sub
and
arpl
mov
cmp
repz
mov
in
push
push
push
jb
nop
cmp
jno
dec
pushf
fwait
stos
cmp
adc
sbb
inc
add
mov
sti
push
sbb
lcall
and
jge
sahf
dec
cmp
lea
jae
or
add
xchg
pushf
mov
cmpsb
pop
push
inc
sahf
int3
lahf
cmp
lods
test
je
jle
push
cmp
repz
pusha
cmc
test
imul
inc
cmp
mov
xor
pop
mov
enter
rorl
xor
clc
cmp
adc
movsl
cmp
iret
ljmp
xchg
inc
or
fldt
sub
aam
mov
mov
lods
stos
xchg
sbb
jmp
aam
mov
movsb
jae
ret
dec
jge
lods
mov
mov
push
or
dec
repz
jp
xor
mov
xor
stos
xor
xorl
fs
inc
inc
mov
push
lods
ds
jae
ret
or
inc
jmp
negb
fwait
push
sub
cmp
inc
hlt
iret
pushf
sbb
icebp
pop
or
jge
cmp
push
mov
scas
or
inc
fcom
jp
movsl
rclb
dec
and
andl
or
mov
in
jg
ficomps
test
adc
cmp
dec
cmp
xchg
pop
mov
cmp
or
cmp
mov
jnp
mov
mov
mov
lcall
jno
cmp
stos
cmp
mov
jecxz
push
mov
pop
fnstenv
hlt
popf
mov
sbb
xchg
jb
negl
cmp
outsb
pop
mov
push
cmp
add
cmp
push
mov
add
or
insl
push
cmp
ret
push
lret
testl
lods
pushf
std
test
loopne
lcall
fnstenv
jno
push
jp
out
lods
add
enter
repz
jns
jo
inc
inc
cmp
lea
fistpll
mov
stc
mov
xor
aad
insl
cmp
cld
add
jg
in
mov
dec
lcall
push
or
aas
into
cmpl
in
mov
mov
mov
cmp
mov
leave
mov
daa
mov
cmp
sbb
inc
adc
ret
out
or
rcrl
sbb
mov
sub
jno
cmp
dec
addr16
movsl
outsl
shll
cmp
nop
pop
repnz
je
arpl
xchg
mov
mov
pop
or
xchg
push
pusha
sbb
cwtl
pop
aam
in
frstor
test
sub
int
insb
add
cmp
loope
sti
adc
in
mov
xor
cmp
sarl
test
pop
lods
mov
pop
loopne
sahf
sub
fcoms
cmp
and
pop
push
and
lods
gs
adc
mov
test
cmp
in
cmp
and
mov
xchg
cmp
push
pop
and
insb
jo
adc
int
sub
dec
mov
push
shrl
es
mov
adc
mov
sub
mov
pop
jo
or
jmp
scas
fstps
das
bound
mov
adc
or
adc
icebp
aas
neg
pop
push
ss
or
jecxz
sti
repz
mov
add
in
xchg
inc
adc
pusha
xchg
mov
and
mov
push
pop
enter
inc
out
add
mov
mov
arpl
and
ss
and
adc
mov
add
xor
stos
xor
lods
test
lahf
out
add
leave
in
fstpt
add
push
pop
jl
mov
push
pop
jns
mov
sbb
xchg
daa
arpl
stos
hlt
inc
in
adc
ss
inc
stos
cmp
adc
stos
sub
mov
xchg
push
repz
adc
adc
ret
out
push
mov
sub
xchg
pop
jno
xor
add
pop
or
push
ret
hlt
mov
insb
shll
cmp
mov
shl
repnz
jp
adc
loope
xor
xchg
mov
cmp
aaa
dec
pop
stos
cmp
mov
pop
lds
out
test
sub
mov
sub
xlat
enter
sub
sub
mov
jg
jle
jl
push
inc
dec
sub
cs
ljmp
js
aaa
mov
popa
sub
sbb
rolb
cwtl
push
jnp
div
test
or
fbld
sahf
daa
cmc
leave
lcall
addl
add
jle
loope
out
js
in
mov
in
pop
push
jno
cmp
adc
xchg
inc
mov
sub
sbb
push
mov
push
push
push
fisttps
popf
mov
test
pop
sub
pop
adc
hlt
sub
insb
lret
xchg
in
mov
aas
push
outsb
xlat
and
shrb
dec
dec
aas
adc
mov
mov
push
sub
mov
mov
adc
out
mov
ss
adc
lds
das
jl
adc
fdiv
cmc
enter
stos
nop
aas
imul
mov
fcmovnb
mov
js
das
push
mov
lahf
ret
push
test
sub
or
sbb
iret
mov
les
adc
jl
and
or
aaa
xchg
sbb
pushf
loopne
and
or
sub
ficomps
or
outsl
jp
mov
push
xchg
stc
lahf
testl
outsl
scas
je
enter
push
leave
or
inc
dec
mov
clc
jmp
jl
rcrb
adc
insl
stc
das
inc
adcl
fcmovne
lods
dec
es
dec
shlb
ss
sub
ds
leave
inc
or
in
ljmp
or
fs
incl
sbb
mov
aam
ret
sbb
call
pop
leave
mov
pop
iret
dec
in
dec
xchg
jl
jmp
pop
xchg
cmc
add
mov
in
leave
cwtl
cmpsl
push
movsl
xor
not
in
dec
xchg
dec
out
inc
mov
xor
fists
int
mov
scas
add
adc
mov
daa
mov
mov
or
mov
lret
fs
xchg
mov
mov
mov
out
addr16
inc
sbb
test
stos
push
xchg
jo
pop
mov
adc
repz
push
push
sub
adc
mov
fcomps
push
daa
pop
xor
cmp
mov
repz
loope
jmp
sub
lock
pushf
adc
ret
lea
stc
clc
and
dec
aaa
ja
xlat
mov
cmp
cmpsb
adc
mov
ss
inc
cmpsl
dec
movl
mov
fwait
cwtl
fs
xchg
sbb
lods
stos
int
sbb
inc
mov
ljmp
cltd
sarb
mov
mov
repnz
adc
test
pop
inc
add
data16
adc
cmc
lret
pusha
cmpsb
add
ficoml
jp
into
fs
or
push
insb
insb
aas
adc
dec
ja
daa
sub
shrb
icebp
js
test
into
or
aaa
push
shll
mov
inc
mov
cli
mov
sub
sbb
add
or
mov
stos
pop
das
mov
cld
daa
xlat
aam
ret
out
repz
outsl
cmp
mov
adc
xlat
lods
idivb
add
test
sbb
mov
pop
mov
lods
inc
mov
cmp
data16
mov
cmp
out
rcrl
bound
sbb
and
in
adc
out
shlb
push
jecxz
lds
sbb
inc
xchg
dec
lahf
in
jp
cmpb
test
xor
xchg
scas
inc
adc
jl
push
mov
jmp
ret
ret
insl
add
loope
enter
and
mov
or
xchg
pop
fs
or
mov
add
pop
dec
shlb
add
aas
sub
cmp
lret
or
orl
lock
out
cli
shrb
popf
adc
ja
inc
cmp
lods
ss
jge
jae
dec
stos
into
stos
jno
addr16
or
mov
or
mov
sub
cmp
push
jle
jmp
mov
cmp
mov
addr16
lock
inc
fwait
sub
sub
ficomps
es
adc
xchg
adc
fcoml
cmp
cmp
inc
jmp
outsb
xor
mov
insb
xor
sbb
xchg
test
and
cmpl
mov
pop
push
daa
das
aaa
decb
out
dec
nop
or
es
cmp
pop
mov
sub
in
mov
add
mov
adc
xchg
pushf
sahf
bound
addl
xor
cmc
xchg
adc
aaa
ret
mov
ficomps
dec
andb
popf
jl
inc
adc
inc
xor
iret
xchg
test
jo
clc
jecxz
sub
inc
aad
cld
mov
xor
out
popa
sbb
xchg
lret
scas
push
xchg
push
xor
xchg
pop
jp
pop
sub
fwait
sub
pop
cmp
outsb
push
inc
or
ss
mov
ss
and
dec
fwait
mov
aad
adc
cmpl
xlat
stc
repnz
sub
jmp
into
sti
mov
loope
call
xor
jo
jp
clc
and
sbb
shrl
sbb
xor
sbb
in
jns
cmp
inc
inc
jns
adc
and
or
hlt
add
lock
sub
xchg
push
aam
rcr
mov
les
fs
pop
scas
out
add
mov
scas
xor
stos
std
cmp
pop
mov
jge
popa
into
daa
adcb
addr16
sub
dec
mov
mov
xchg
xor
in
shrb
bound
jae
sbb
jp
cli
pop
and
or
jge
jnp
outsl
stos
jecxz
in
jecxz
pop
xchg
call
adc
out
lods
mov
out
add
xor
aam
sub
mov
sbb
cmp
jp
sbb
xchg
ds
dec
xchg
push
mov
stc
mov
cmp
push
lret
dec
mov
inc
xor
hlt
pop
jecxz
das
adc
and
cmp
insl
sbb
push
out
add
mov
adc
and
aad
ss
ret
fidivl
mov
decb
rclb
jle
jb
pop
xchg
pop
enter
mov
lret
or
in
jae
add
int3
mov
xchg
rolb
cmp
dec
mov
sub
cmpsb
rclb
sub
and
popf
into
ret
sbb
out
sbb
lret
dec
mov
mov
dec
push
add
mov
lods
out
aad
jns
sub
ds
outsb
jg
enter
stos
aaa
cmpsb
das
jmp
out
or
rorl
in
cmpsb
push
mov
in
adcl
mov
je
xchg
bound
in
int
hlt
cli
outsl
jl
in
iret
adc
into
mov
mov
enter
popa
movsb
out
adc
xchg
movsb
loop
inc
or
aad
xchg
lods
jecxz
xor
push
add
adc
inc
lock
fs
imul
cmpl
mov
mov
mov
int3
and
adc
scas
les
cmpl
loope
sub
adc
sub
mov
xor
adc
xchg
in
repz
lock
lods
lret
jmp
in
xchg
jg
xor
stos
outsl
ja
pop
sub
or
mov
movsb
in
fld1
sbb
mov
xor
mov
xchg
mov
out
adc
mov
pop
mov
push
outsl
loop
push
pop
insb
push
adc
imul
adc
mov
pop
mov
js
insb
jne
movsl
push
adc
pop
mov
dec
rorl
adc
jle
out
pop
jae
cmp
jl
ljmp
mov
testb
lock
hlt
push
adc
mov
and
sahf
daa
cmpsb
jge
jmp
pop
pop
sti
mov
test
jne
jge
mov
inc
das
sbb
push
sahf
jl
mov
push
dec
bnd
aad
push
jo
sbb
xchg
fwait
sbb
imul
jbe
sub
xor
or
jb
adc
scas
cmovl
sub
lods
add
aas
adc
shr
test
push
mov
mov
shr
int3
ja
mov
cmp
push
fcmovnb
je
mov
xor
jge
xchg
scas
mov
das
or
dec
jg
jecxz
outsb
fwait
adc
xlat
inc
aaa
xchg
ret
and
cmp
out
out
add
outsl
push
jg
cmp
mov
popf
test
push
and
lods
xchg
push
push
sbb
stc
or
pop
aas
adc
mov
mov
pop
call
ja
sahf
pop
push
adc
rclb
and
movsl
hlt
in
dec
mov
lods
jl
aad
in
xor
fs
and
push
mov
pop
mov
mov
enter
daa
into
sahf
leave
ret
sub
push
inc
pop
mov
scas
mov
fcomip
outsb
je
loop
sbb
shrl
sar
add
negb
pop
and
mov
in
aam
xor
movb
iret
sub
and
repz
jbe
inc
adcb
neg
btc
cli
mov
mov
enter
imul
scas
lds
pop
or
das
jno
mov
and
xchg
and
inc
xor
mov
outsl
fwait
jbe
push
sbb
xor
pop
push
or
jl
adc
jno
dec
xchg
pop
iret
pusha
sub
rorl
cmp
mov
lock
popa
ss
or
dec
jl
mov
clc
iret
enter
xor
fstl
cltd
mov
ret
out
xchg
push
adc
loop
xchg
sarl
mov
jmp
clc
xor
jae
adc
xchg
add
into
mov
pop
push
mov
cli
add
jecxz
shrb
lock
fwait
sub
rorb
shrb
push
insl
lret
mov
and
aaa
pushf
sbb
adc
sub
xor
rolb
mov
lea
mov
insb
in
fldcw
xor
xchg
mov
fcoml
ret
or
xchg
aas
in
stc
aaa
push
jge
lods
cmp
int3
cmp
cmc
and
cs
in
mov
adc
loop
popa
stc
dec
push
adc
movsb
pushf
shl
xchg
inc
shrb
jbe
sbb
sahf
sbb
jmp
xchg
aaa
adc
test
in
mov
cli
outsb
subl
std
adcl
xchg
into
pop
cmc
mov
imul
pop
roll
data16
or
shll
shlb
mov
jle
jo
stos
insb
add
jmp
inc
lcall
inc
xor
jle
sarl
adc
xor
popf
pop
mov
or
aas
sti
std
and
fistps
xor
mov
adc
pushf
sar
insl
std
sbb
lock
ja
mov
mov
into
in
movsb
pop
movsb
add
lahf
inc
jl
dec
repz
aaa
or
adc
inc
adc
mull
add
jg
fs
xor
loopne
popf
jne
insb
stos
aam
jmp
jle
adc
push
inc
insb
sub
xor
mov
or
cmp
xchg
fildl
mov
add
push
cmpl
push
pop
fs
je
jae
mov
sub
mov
ljmp
push
out
cmp
xchg
dec
jbe
je
mov
out
cmc
and
lea
mov
xor
scas
ss
sbb
sub
stc
pop
or
fadds
adc
push
test
das
cmp
test
adc
test
adc
outsb
mov
das
sbb
ljmp
lahf
pop
xor
cld
pop
jmp
ret
pop
dec
idivb
bnd
jecxz
xchg
subl
adc
add
int
movsb
enter
mov
clc
and
jns
movsl
ds
dec
adc
or
add
mov
jmp
hlt
ja
jno
mov
ret
mov
enter
lods
adc
sbb
adc
scas
rcll
cmp
sbb
dec
push
push
test
xor
inc
fistpl
and
sahf
pop
sarl
hlt
fnstcw
aad
enter
stc
cli
push
xor
orb
mov
shr
adc
sbb
xor
xchg
or
inc
fucomip
pop
in
movsl
mov
addr16
fucomp
pop
push
dec
push
pop
popa
mov
sbb
cmpb
sbb
out
lods
xchg
mov
add
jg
cmp
popa
xchg
cwtl
dec
xor
insl
dec
shlb
mov
and
enter
mov
add
or
adc
jle
mov
xchg
or
out
jbe
jmp
fs
movb
sub
adc
or
lea
sbb
xor
movsb
test
sub
into
leave
incb
jbe
sub
repz
jmp
loop
out
xor
sub
add
loop
loopne
sbb
ds
push
pusha
lods
mov
sub
ljmp
out
leave
jbe
sbb
xor
cmp
pop
daa
cmp
pop
cs
shlb
or
sbb
inc
lret
or
in
or
dec
push
les
xor
jge
mov
jo
sarb
sub
xor
push
mov
into
sub
insl
shr
adc
xchg
scas
mov
adc
iret
and
inc
cmp
mov
jmp
or
push
jl
iret
xchg
cmp
push
or
mov
sbb
xor
loop
loopne
rcll
xchg
jmp
outsl
mov
cli
aaa
aaa
sub
iret
mov
ss
mov
pop
sub
pop
push
xor
pusha
xor
cmp
loopne
insb
aaa
cwtl
insl
daa
jmp
inc
xor
mov
aaa
call
xchg
inc
mov
jl
shl
mov
test
sub
cltd
xchg
cmovbe
test
mov
enter
decb
xchg
insb
adc
mov
roll
dec
sub
imul
inc
insl
es
pop
cmpsl
mov
in
in
push
sahf
mov
and
ja
fistpl
adc
jbe
sub
jl
xor
insl
or
jg
fucomip
inc
adc
xchg
pop
das
ljmp
and
dec
adc
jo
pop
fcoms
aas
or
ret
push
jo
loope
or
mov
jmp
jno
and
mov
jp
inc
cli
inc
push
lods
or
jp
xchg
inc
ds
pop
adc
pop
orl
in
dec
cli
pop
xor
movsl
and
jp
xchg
push
mov
xor
mov
je
cmpsl
test
insb
mov
orb
enter
inc
mov
xlat
push
sbb
repnz
call
mov
fcmovnu
adc
cmp
sub
mov
and
mov
mov
scas
xor
es
inc
push
and
xor
in
adc
pop
mov
outsb
adcl
sarl
inc
lret
push
adc
and
les
xchg
mov
xchg
xor
daa
lea
mov
call
or
push
xchg
cmp
mov
sbb
jmp
push
ret
push
xor
inc
je
es
movsb
inc
push
mull
lods
xchg
cmp
shrl
jl
lods
out
int
sub
xor
push
in
jg
jbe
add
adc
lea
xor
mull
mov
iret
ds
cmc
jecxz
mov
std
sbb
pop
jo
and
add
mov
mov
clc
aaa
out
ja
adc
ret
adc
adc
xlat
std
aas
add
sbb
lock
xchg
add
testl
pushf
mov
js
rorl
jb
pmulhw
lret
add
adc
nop
daa
sub
dec
imull
sub
sarl
repz
fnsave
sti
mov
push
imul
fistl
adc
mov
jl
xor
sbb
lret
jo
ret
or
or
add
pop
jl
int3
in
mov
pushf
mov
and
mov
shl
adc
ficoms
jb
shrl
mov
jmp
loop
fwait
dec
pop
aaa
adc
cmpsb
lcall
pop
add
das
cmp
lods
jbe
push
pushw
mov
das
daa
sbb
out
fdivp
mov
into
fcomps
das
arpl
test
pop
mov
xchg
std
pop
lods
or
jmp
lds
das
mov
add
lds
ret
popl
push
pop
pop
pop
mov
cmpsb
leave
xor
out
in
call
mov
cmp
test
push
cmc
inc
push
iret
in
add
or
ret
repz
into
fs
insl
mov
pop
adc
or
int3
pop
test
jo
sub
arpl
mov
or
notl
sub
mov
push
aad
insb
incb
cmp
and
sbb
dec
mov
shl
adc
sub
ljmp
pop
sbb
call
xchg
rorb
leave
jno
fnstenv
shl
and
xor
out
fcom
lret
test
pusha
xchg
imul
xchg
movsb
fimuls
push
fucomi
out
adc
mov
xchg
movsb
dec
push
mov
sbb
and
subb
adcl
cli
mov
hlt
and
pushf
fmul
repnz
aas
lods
bound
xorl
jnp
das
xchg
dec
pushf
jg
aaa
pop
inc
mov
push
mov
std
movb
dec
rcll
pop
cmp
mov
sarb
je
add
add
xchg
mov
out
mov
scas
out
mov
divb
adc
push
add
mov
out
or
in
mov
rclb
mov
lock
jo
daa
sti
sbb
xchg
xor
mov
adc
adc
ja
rcrb
mov
loopne
sbb
jecxz
push
adc
mov
mov
xor
fsubl
movsb
inc
adc
lret
inc
mov
lds
sbb
out
sahf
insl
aas
gs
in
pop
jmp
xor
xor
mov
lret
fs
icebp
fs
push
jg
out
cmc
and
sbb
in
andb
jo
hlt
cmc
pop
mov
fidivrl
cli
cmp
mov
push
out
xchg
cmp
sub
movsb
add
mov
xchg
sub
arpl
fnstcw
sub
cmp
hlt
mov
or
inc
mov
outsb
mov
dec
ss
out
xor
or
bound
cmp
or
and
clc
mov
into
fmull
ss
jmp
pop
dec
and
pop
push
jl
test
cmc
xor
in
cmp
pop
dec
push
jp
in
jbe
sub
in
adc
in
inc
push
mov
pop
add
and
lahf
xchg
mov
out
mov
test
js
jb
xor
pusha
add
ja
aaa
and
jl
in
test
mov
adc
mov
sbb
flds
in
xchg
movsb
lahf
sub
xchg
cmpsl
push
xor
jecxz
subl
jl
scas
adc
lcall
in
imul
sbb
jl
add
jmp
push
das
push
cld
jmp
dec
ds
fwait
ret
ja
ljmp
out
adc
push
jne
mov
push
jnp
cs
lret
mov
adc
xchg
cmpsb
pop
mov
cmp
pop
mov
pop
jp
outsb
sar
xor
sahf
jb
xor
stc
scas
fmuls
inc
mov
cmp
jmp
xchg
xor
hlt
jno
mov
sbb
mov
fists
lods
xchg
xchg
aas
out
cwtl
xorl
xor
repnz
loope
decb
cmpsb
jne
stos
fsts
xchg
orl
dec
jns
jge
shrb
jge
adc
nop
addb
mov
scas
inc
leave
lods
lret
add
add
sbb
sub
shrl
add
xchg
aaa
and
xor
jmp
xchg
ret
and
aas
aaa
test
dec
mov
enter
adc
mov
fs
xchg
je
sub
jnp
mov
nop
out
je
xorl
lret
mov
outsl
adcl
sarl
sbb
add
mov
or
jo
rorl
sub
mov
aad
push
dec
mov
adc
or
add
std
addl
enter
jno
push
ret
sub
ss
jl
ss
adc
insl
out
pop
pop
xor
aaa
clc
in
imul
cs
out
pusha
add
pop
sub
xchg
pop
ja
ljmp
sub
ds
sbb
in
xor
sbbb
lods
xchg
xor
add
ss
xchg
push
fdivr
into
insb
jge
fiadds
or
mov
iret
jg
pushf
push
sbb
lods
repnz
lret
sub
dec
mov
jl
mov
nop
mov
adc
push
jmp
in
xor
out
pop
nop
sbb
pop
aad
mov
mov
jae
sbb
notb
or
mov
add
ficoml
push
jmp
sbb
or
sub
jecxz
add
pop
daa
test
mov
int3
adc
subb
and
insb
das
mov
ftst
mov
sbb
stos
dec
daa
mov
mov
inc
add
fdivrl
adc
test
aad
push
xor
ja
and
mov
into
into
loop,pt
daa
sub
add
sub
mov
inc
sbb
adc
nop
out
rcrl
sub
jne
ja
mov
fwait
mov
pop
mov
sbb
stos
xor
pop
or
adc
jbe
es
jge
mov
adc
adc
pop
mov
sub
ja
in
aas
or
and
mov
pop
or
jnp
in
lods
xchg
ret
das
ret
jp
cmp
xchg
in
in
mov
movsl
jecxz
adc
je
subl
mov
push
bound
mov
and
jnp
sti
cmp
push
sub
idivb
stos
mov
mov
stc
mov
pushf
jmp
arpl
insb
jmp
mov
es
add
dec
adc
ret
imul
std
sub
xor
in
jne
lcall
test
sbb
jp
dec
ret
mov
mov
rcrl
addl
mov
and
out
arpl
lcall
xor
mov
ret
jl
sbb
jbe
dec
push
das
xchg
jb
lds
in
das
loop
jp
sub
xor
ljmp
stos
inc
mov
inc
das
lods
adc
test
push
sub
stos
js
jbe
insb
mov
stc
scas
fmulp
das
loop
cmp
adc
add
xchg
add
movb
in
lock
and
in
mov
cmp
sub
je
mov
xor
scas
dec
fstl
clc
out
mov
cld
stos
out
ss
mov
adc
push
cmp
mov
mov
or
xchg
xchg
lock
hlt
into
mov
sarb
in
or
pop
xchg
mov
and
jbe
push
xor
icebp
lods
adc
sbb
dec
dec
repz
mov
out
pop
mov
sub
nop
out
repz
and
and
jp
cld
push
add
cmp
lock
sub
adc
repz
mov
imul
cmp
mov
aam
mov
ds
sbb
loope
insl
dec
adc
subl
test
dec
rol
mov
scas
test
push
in
sub
mov
jge
inc
cmpsl
ss
jae
mov
jg
mov
je
stos
push
sbb
add
xchg
ret
popf
insb
out
aad
loope
ret
js
andb
and
pop
sbb
rcrb
mov
mov
sub
stc
and
pop
cmp
pop
and
xchg
pop
iret
test
mov
nop
xor
loopne
cmp
imul
xor
and
repnz
out
popa
ss
dec
pop
ljmp
mov
xchg
jmp
mov
adc
pop
jp
subb
pop
dec
cmpsl
cwtl
daa
repz
mov
inc
xor
jo
aaa
xlat
and
adc
inc
arpl
and
fsubr
adc
in
mov
mov
dec
jnp
cmp
test
mov
mov
sub
xchg
mov
cmpsb
je
gs
mov
dec
mov
enter
icebp
xor
push
dec
or
add
shll
dec
inc
js
add
sti
cli
ljmp
pop
loope
inc
cmp
aam
testl
cmpsl
scas
pop
mov
out
jp
repnz
loop
push
test
xchg
adc
xchg
xor
mov
cmc
pop
cmpsl
fidivrs
inc
ficoml
fiadds
mov
lods
std
and
in
jbe
in
mov
sub
sub
sub
andb
pop
push
jle
in
jmp
and
test
mov
hlt
iret
repz
mov
xor
in
push
insl
xor
inc
add
enter
adc
jb
adcl
cmp
jb
in
dec
aaa
icebp
adc
int
sub
mov
xchg
aam
adc
push
outsl
add
cmpsb
outsb
push
adc
or
testl
pop
jg
in
inc
jb
add
ljmp
xchg
lods
js
mov
ret
scas
loop
adc
icebp
test
roll
add
jecxz
iret
sub
fs
ffree
pop
cli
ja
mov
xor
mov
incl
adc
push
mov
adc
adc
clc
fidivrs
lcall
pop
adc
in
jae
test
add
out
xor
fwait
inc
inc
in
ja
jbe
add
xchg
xlat
jb
popa
fs
push
push
sbb
push
mov
js
js
ljmp
mov
int
mov
push
mov
xchg
dec
xor
cmc
call
clc
out
mov
mov
and
cmp
sahf
scas
adc
jmp
xor
leave
rep
xor
adc
and
in
mov
cmp
outsb
test
and
outsl
jecxz
ljmp
lods
push
lahf
jp,pn
mov
adc
mov
in
inc
pop
pop
mov
test
loope
adc
hlt
xchg
ret
add
mov
in
xchg
jecxz
xor
ljmp
adc
mov
rsm
and
jle
test
jl
xchg
aaa
std
repz
jbe
out
fistps
aas
das
xlat
notb
or
mov
mov
movsl
push
xchg
adcb
cmp
xchg
inc
mov
mov
fdivs
out
and
cmc
sti
std
add
jo
test
xor
pop
iret
es
and
out
xor
movsl
dec
into
jbe
shrb
int3
or
lods
adc
pop
jecxz
lods
xor
ret
je
mov
loope
dec
sbb
xor
addb
sub
adc
xor
fistps
jmp
out
push
mov
mov
data16
bound
shrb
mov
es
xchg
xchg
adc
nop
fbstp
jbe
out
inc
jp
scas
jecxz
fimull
jmp
adc
mov
ja
adc
das
fidivrl
mov
sbb
fdivr
fld
push
sub
sub
jbe
push
insb
jmp
add
cmp
xchg
mov
cmpb
int3
push
in
inc
mov
pop
outsb
push
xor
jl
fimull
or
imul
xor
cmp
xchg
repnz
push
sub
cmc
add
jecxz
cmp
js
jp
sub
inc
adc
adc
and
jae
jle
popa
cmc
imul
and
xchg
fisubl
sub
adc
mov
mov
pushf
movsb
sarl
stc
es
cmpsb
insb
bound
dec
mov
sbb
cmp
mov
popa
out
and
inc
and
xchg
jl
adc
dec
mov
xorb
fists
sub
cmp
push
xor
int3
addb
mov
fwait
sub
push
in
and
cld
pop
mov
scas
stc
aam
adc
dec
mov
sahf
cmp
xchg
dec
mov
xchg
shlb
clc
lret
pop
push
outsl
shrb
sbb
sub
decl
cmp
insl
add
lret
xor
rorb
mov
cltd
push
xchg
cmp
minps
call
sub
fs
cli
loop
lods
dec
das
mov
in
cmp
mov
aaa
cmp
or
popf
mov
sub
ja
inc
in
scas
ret
insb
mov
outsl
mov
stos
insb
mov
sbb
xchg
es
add
xchg
ss
iret
fnstenv
cmp
adc
cmpl
out
rcr
mov
or
sbb
xor
xchg
or
scas
pop
out
xchg
mov
ret
mov
mov
cmp
lahf
add
inc
lods
cmp
aaa
sbbb
mov
cmp
movsb
pushf
xchg
cmp
xor
leave
sub
aas
int
xchg
push
add
xchg
mov
jg
jecxz
pop
aad
xchg
adc
shl
lods
push
cmp
cmp
cmpsl
adc
fldcw
mov
lea
outsl
testb
xchg
call
xchg
cmp
cmpb
pop
aam
inc
cmpsl
cmp
mov
adc
popf
mov
jmp
daa
xchg
cmp
push
jo
es
or
adc
and
xor
ja
push
pop
in
fnstcw
lahf
or
jl
cli
scas
inc
ds
fcomps
inc
int3
test
xor
dec
dec
loopne
and
sub
dec
jmp
cmpsb
jg,pn
mov
stc
popf
add
xor
dec
mov
cmp
dec
push
jbe
leave
sub
sahf
mov
mov
sbb
mov
jnp
orb
out
jno
int3
out
cmp
shl
xor
xchg
sub
or
sbb
lret
adc
nop
cmp
and
adc
add
cmp
imul
cmpsb
movsb
xlat
dec
sarb
pop
cmp
xchg
aaa
xchg
cmp
and
sarb
stos
push
jge
fdivp
roll
add
sahf
out
popf
mov
inc
in
xor
xor
enter
jge
test
in
adc
xor
dec
push
cmp
pop
sub
cmp
stos
ret
fs
mov
fisubrl
mov
cmp
in
sar
int3
flds
movsl
jbe
ljmp
or
push
push
mov
cmp
setp
dec
std
push
pushf
in
repnz
sbb
cmp
jne
stos
in
sub
xchg
scas
inc
push
movsl
or
and
jmp
xchg
imul
scas
add
mov
pop
cmp
mov
xchg
mov
cs
pop
xchg
dec
fnstcw
mov
xchg
mov
cmp
in
jmp
fmul
lock
es
xor
in
ret
jp
hlt
jae
mov
cs
daa
inc
pop
cli
inc
jecxz
sub
xor
pop
add
sbb
ljmp
lods
js
outsb
mov
or
jle
in
loope
push
divl
push
mov
fdivs
pop
fiadds
sbb
cmpsb
int
mov
and
pop
mov
dec
sbb
pop
push
es
pmaxsw
ss
inc
lcall
adc
xor
dec
rdmsr
xchg
aam
mov
insb
sub
adc
repz
adc
popf
lahf
loop
cmc
cwtl
sbbb
outsl
cmp
ljmp
cmp
mov
lahf
loop
int
ret
int3
ss
jecxz
cmp
outsb
aaa
push
leave
dec
mov
or
cld
cmp
mov
jbe
mov
loop
mov
loopne
je
jl
jo
dec
shrl
in
adc
cmp
aad
aas
sub
sbb
mov
sub
aad
mov
mov
pusha
cmpsb
xchg
pushf
rorl
push
je
dec
insl
cmp
cmp
jecxz,pn
loope
outsb
lods
add
aad
cmp
jae
sbb
arpl
sbb
cmp
cmp
cmp
sbb
jne
sbb
cwtl
fwait
lds
sub
and
pop
pop
in
mov
cs
in
in
js,pn
or
lods
ja
jae
cmp
mov
adc
sub
out
scas
clc
dec
xchg
pop
mov
stos
js
cmc
stos
cmp
in
add
mov
push
cmp
repnz
adc
cmp
push
sbb
mov
jo
shr
test
inc
and
or
dec
shll
aam
shll
inc
insb
dec
xchg
out
pop
or
in
jg
rcll
popf
iret
stc
ljmp
imul
in
in
push
rcrb
jl
cmp
mov
test
jbe
cmpsb
xor
jmp
or
cmp
fisubl
jo
adc
mov
cmp
fnstcw
fidivrs
arpl
sahf
outsb
shlb
imul
cmp
loop
mov
fistpll
daa
adc
test
rorb
mov
pop
mov
cmp
inc
sub
mov
and
in
adc
cli
jns
xor
inc
test
std
enter
xchg
adc
stos
mov
mov
cmp
cmp
push
pop
mov
adc
cmp
pop
call
mov
lahf
imull
xor
mov
sub
xchg
cmp
test
sub
mov
out
push
jo
lods
mov
mov
mov
inc
scas
lock
imul
sahf
mov
lret
adc
mov
test
push
mov
and
daa
or
sti
cmp
jae
sub
mov
mov
pop
xchg
out
xor
push
mov
dec
xchg
jge
les
sbb
mov
mov
and
in
xor
inc
shlb
shrb
sub
popf
in
scas
inc
pushf
je
cmp
ss
arpl
adc
sbb
icebp
repnz
lds
mov
cmp
data16
xchg
es
jb
cmp
fldcw
xor
mov
mov
inc
decl
arpl
imul
xchg
setae
or
leave
and
jo
push
fmull
mov
cld
push
add
cmp
pop
lods
and
sti
movsl
sarl
cmp
sub
sub
mov
repnz
cld
jne
inc
jge
mov
popa
jbe
xchg
dec
adc
movsl
cmp
inc
repnz
cs
sub
mov
leave
xor
loopne
sbb
mov
jbe
imul
mov
out
pop
fcmovbe
or
jg
movsb
mov
nop
dec
dec
dec
mov
adc
es
out
lds
sub
stos
inc
lods
mov
insl
arpl
jbe
jge
sahf
sti
cmp
cwtl
insl
jno
xchg
bound
mov
lea
push
sub
mov
sub
cmp
es
jb
lret
pop
stos
hlt
inc
xchg
lcall
inc
sahf
adc
sub
xor
shll
cmp
xor
scas
cmp
xor
xor
mov
stos
jne
cmp
mov
enter
hlt
push
xchg
pop
in
fistpl
cmpsb
adc
adc
lea
ss
movsl
cmp
into
sub
inc
mov
call
push
jmp
in
repz
push
dec
mov
mov
pusha
jmp
lds
lret
push
mov
arpl
stos
xchg
sarb
xor
notl
lods
pop
push
out
cmp
enter
or
cld
in
into
and
ret
cmp
pop
jg
jl
shr
or
fdivl
shll
dec
out
mov
push
jl
lods
add
imul
sbb
and
movsb
xlat
cmp
mov
leave
or
adcl
fsubp
jl
lret
mov
cmc
jae
xor
roll
inc
adc
dec
inc
aam
ret
in
mov
xchg
or
sub
mov
or
mov
iret
jg
enter
add
inc
jle
xor
shlb
xchg
cmp
dec
jge
add
add
mov
out
shl
cmp
cmp
xchg
lcall
mov
xchg
pop
imul
adc
ss
cmp
adc
mov
pusha
lea
adc
push
fldcw
push
add
subl
xor
fwait
mov
dec
inc
mov
mov
mov
outsb
sub
inc
push
das
mov
xchg
fcmovu
imul
adc
rcll
push
xchg
jns
test
shll
or
xor
cs
lret
in
aad
lods
or
jmp
lods
mov
adc
stc
mov
xor
fsubl
and
jge
dec
addr16
pop
sahf
cs
inc
inc
adc
rcrl
inc
repnz
jmp
xor
xor
dec
cmpl
jbe
and
ret
inc
stc
push
mov
aad
pop
das
xchg
lods
and
mov
push
movsb
jnp
sub
adc
jl
out
xchg
mov
jge
mov
pop
sbb
pop
sti
xor
cmp
pop
or
xchg
push
rclb
adc
jmp
inc
mov
lret
jle
clc
xchg
jg
inc
xchg
jb
popf
adc
mov
dec
cs
mov
mov
inc
adc
jp
push
push
push
test
jb
and
mov
sbb
mov
bnd
lock
negb
xchg
clc
imul
push
gs
adc
adc
xlat
cmpl
addl
adc
push
mov
xchg
push
jmp
xchg
mov
dec
pop
push
xor
or
mov
jo
sbb
faddp
inc
adc
jne
imul
mov
test
xor
rol
pop
inc
push
push
mov
lea
push
subl
push
jbe
iret
pushl
enter
lret
adc
scas
cmp
xor
mov
inc
pop
es
xchg
inc
inc
push
lret
adc
sbb
sub
test
ljmp
or
sbb
push
aaa
xchg
inc
ret
mov
fstps
jge
out
jmp
lock
pushf
cmp
les
xchg
xor
cmp
lods
cmp
cmpsb
jnp
inc
xorl
cli
addr16
mov
pushf
sbb
adc
mov
aaa
push
and
jb
mov
flds
jg
mov
add
in
xlat
pushf
dec
xchg
sahf
mov
sub
jbe
mov
or
lret
jne
mov
fs
lahf
dec
fidivrs
nop
xlat
xchg
daa
or
mov
adc
dec
fsubs
addr16
nop
je
and
adc
leave
xchg
sbb
lods
mov
jo
fcomip
xchg
sbb
test
adcb
adc
xchg
outsl
mov
int3
lret
jmp
ret
push
xor
jno
sub
loopne
out
push
cwtl
fs
push
popa
mov
daa
dec
in
sbb
shlb
pop
nop
inc
imul
xchg
push
addl
jo
lods
rclb
ds
into
sub
stc
lret
cmpsb
adcb
loope
int3
pop
xor
rcrb
das
jnp
xchg
jno
add
les
ret
mov
loope
xchg
add
shr
mov
outsb
out
nop
xor
mov
enter
adc
leave
das
dec
jge
es
mov
adc
aad
inc
js
jo
fs
jo
je
jbe
jno
push
jmp
ljmp
pop
or
test
lcall
pop
adc
outsb
test
sbb
inc
enter
fdivrl
or
mov
cs
or
jmp
push
or
imull
fcoml
hlt
iret
addr16
fildl
dec
ja
leave
sub
inc
xchg
adc
adc
in
xchg
jne
mov
push
mov
mov
call
sub
stos
adc
lret
ds
es
sub
pop
cmp
xchg
outsb
sbbb
xor
fwait
jne
stc
push
jle
inc
fs
dec
xchg
jnp
jb
add
fcoms
movzwl
enter
gs
shlb
mov
push
aad
mov
shlb
daa
push
jge
dec
sub
or
cmp
mov
pushf
cld
stos
cmp
and
es
inc
inc
mov
outsb
out
add
xor
jbe
adcl
jb
test
pop
pop
jmp
shlb
pop
mov
sbb
pushf
adc
dec
add
pop
cmc
mov
test
dec
test
repz
sub
xor
into
loope
ljmp
shrb
testb
pop
jns
and
or
mov
mov
cwtl
fildll
test
call
xor
jge
mov
pop
jbe
xor
and
js
sbb
rolb
popf
test
mov
pop
jne
push
ss
mov
leave
jbe
jecxz
jnp
jg
adc
mov
mov
rorl
jo
pop
sub
add
outsl
sbb
add
aas
test
sub
int3
xor
popf
mov
pop
jae
data16
sbb
sarb
popa
hlt
mov
jns
jmp
scas
cli
and
jp
add
jp
add
pop
xor
push
mov
fs
cmp
imull
scas
out
or
jge
in
jg
lds
sbb
mov
out
adc
int3
insb
jmp
mov
mov
jno
nop
sti
add
inc
mov
fcom
lods
ljmp
lret
mov
insl
mov
cmpsl
psubw
inc
pop
fs
inc
mov
dec
sub
sti
jle
jmp
and
loope
xchg
popa
dec
mov
incl
clc
cli
hlt
cmpsl
mov
dec
sbb
jl
xchg
sti
in
xchg
jge
pushf
push
adc
testl
adc
cltd
or
add
push
leave
adc
xchg
mov
add
mov
test
inc
inc
adc
pop
into
lcall
xchg
sbbb
cli
adc
movsb
loop
out
loop
scas
jg
xchg
mov
sub
and
dec
test
das
fiaddl
jb
push
and
dec
push
xchg
mov
scas
mov
jmp
xchg
pop
sub
fildll
adc
dec
dec
xor
insb
adc
push
outsl
add
pushf
and
rcll
inc
int3
sub
mov
mov
and
rorb
mov
out
or
test
dec
pop
and
ljmp
pop
sub
fcomps
xor
inc
repz
mov
in
subl
hlt
jnp
push
xor
repnz
test
dec
mov
lock
rcrb
ss
xchg
mov
lcall
outsl
test
insb
cltd
jl
mov
test
mov
subl
in
fistl
clc
jecxz
fnstcw
sub
jecxz
aas
mov
sbb
adc
ljmp
adc
lock
dec
mov
inc
daa
outsl
cmp
add
inc
mov
cli
mov
inc
imul
xor
mov
adc
rcrb
mov
dec
mov
ss
call
mov
sub
or
and
loopne
mov
lods
cmp
cmp
push
pop
jge
outsb
or
lahf
js
enter
imul
mov
xchg
cmp
cmp
sub
push
cmpsl
jge
xchg
dec
cmp
xchg
pop
inc
cmp
cmp
shrb
ret
push
cmp
cmp
fs
hlt
addr16
cmp
pop
aad
mov
inc
pushf
mov
or
cmp
sbb
inc
ret
in
push
sub
les
das
xor
in
mov
ds
mov
test
stos
js
jl
push
cli
sub
mov
xchg
sbb
lods
je
or
divb
inc
cs
dec
scas
test
aas
cmp
clc
daa
cwtl
jne
push
inc
cmp
scas
cltd
sti
xchg
pop
xchg
das
cmp
int3
or
inc
es
lods
pop
aad
and
xchg
push
cmp
push
in
mov
lahf
lret
loop
xchg
addr16
mov
and
cltd
sahf
dec
cmp
subb
and
cmp
inc
fcomps
mov
sub
cmp
bsr
xor
and
sub
xor
bound
les
adc
xor
sarl
jle
push
cmp
xorb
jo
outsl
sub
xchg
cmp
mov
xchg
xor
popf
aaa
cmp
push
daa
movsl
pop
mov
enter
push
sub
pop
outsb
out
sbb
jp
pushl
jns
test
mov
pop
cmp
movsb
ss
je
xchg
in
xor
loope
push
sar
mov
aaa
test
cmp
adc
aas
ret
mov
cs
inc
xor
mov
and
andl
mov
and
xchg
das
xchg
int
je
sub
dec
ljmp
movsb
jp
out
mov
push
fstps
cmp
mulb
add
and
popf
mov
inc
rolb
sti
xchg
arpl
ds
mov
ja
cld
pop
xchg
jl
pop
xor
lock
ret
adc
dec
ffree
mov
faddl
push
mov
adc
stos
xor
enter
jle
ss
lock
adc
fmuls
les
inc
hlt
dec
les
bnd
je
shll
adc
adc
js
dec
cmp
inc
mov
adc
xor
mov
pusha
test
mov
jbe
cmpsb
mov
adc
leave
test
and
add
leave
bound
das
xor
sub
out
movsl
bnd
aaa
pop
sbb
adc
inc
clc
call
push
dec
test
adc
xor
das
test
in
jg
into
pop
int3
call
insl
aas
or
cmpb
mov
aas
rol
sub
scas
cmpsb
cltd
fcoml
mov
lods
dec
adc
ficoml
bound
mov
add
mov
test
scas
aad
sub
cmpl
mov
insb
in
pop
push
inc
leave
mov
dec
xor
adc
xor
inc
mov
loop
aas
inc
sahf
add
int
and
fs
mov
cmp
fs
sahf
fnstenv
sub
stos
mov
arpl
stos
jmp
fadd
in
mov
addr16
pop
mov
cmp
xlat
push
jo
test
mov
cld
scas
dec
mov
xor
push
and
sub
jge
subb
out
cli
lcall
lods
jp
cmp
mov
sub
push
and
mov
ficompl
enter
add
leave
push
idivb
scas
mov
call
push
ds
daa
and
data16
sbb
push
push
xchg
lds
push
sub
or
lock
aaa
je
test
lret
add
insb
mov
jle
mov
pushf
loope
ds
mov
sub
mov
outsb
jbe
lcall
mov
out
adc
aad
shll
adc
mov
dec
imul
and
hlt
xchg
insl
dec
cmp
lods
jns
mov
mov
xor
and
or
push
sub
fisubrl
fsubs
es
jbe
in
rcl
pop
mov
adc
shl
add
nop
cmp
adc
cmpsl
loopne
jg
mov
pop
sbb
scas
sbb
test
cmp
fs
mov
cli
mov
mov
mov
es
push
cmpsl
std
cmc
in
push
daa
inc
xor
pushf
and
lock
insb
les
push
arpl
jo
inc
rcl
xchg
cltd
mov
lods
jecxz
lret
inc
scas
ja
sbb
mov
enter
adc
xor
mov
lret
scas
les
mov
clc
loope
cmpsl
mov
adc
xchg
psubusw
push
ss
stos
repnz
add
jae
aam
mov
into
mov
push
push
mov
add
fidivrl
outsl
fimull
sbb
jbe
subl
sarl
aam
ljmp
out
or
mov
jle
lea
jle
dec
xor
pop
sbb
cmp
push
fwait
cmp
icebp
xorl
pop
sbb
sti
das
enter
cmc
jle
mov
fiaddl
cmpsl
fisttpll
jbe
leave
mov
jp
ljmp
icebp
fmuls
stos
mov
mov
cmp
lods
jg
lcall
jns
sub
adc
xchg
jbe
mov
cmpsl
aaa
xchg
push
jg
pop
push
jae
sub
jne
into
sbb
push
imul
fistpl
fs
mov
push
or
clc
push
and
and
adc
lods
xchg
adc
add
enter
aad
mov
xor
ss
inc
adc
lods
call
mov
imul
adc
mov
das
mov
mov
jge
mov
and
dec
pop
mov
push
call
mov
sub
shll
pop
mov
stos
iret
cmc
test
shrl
pop
pop
pop
mov
insb
movsl
jmp
jl
in
aas
adc
jl
adc
jo
xor
mov
jl
and
xchg
test
lcall
adc
les
and
xchg
xchg
xchg
das
scas
adc
aam
adc
xchg
shll
sub
cmp
sti
mov
push
push
cmc
sub
push
into
xor
cmc
pop
ds
jmp
push
cmp
andl
stos
cmc
rcrl
aad
fisubl
cmp
pop
adc
lea
and
shll
scas
fs
ss
leave
and
xor
inc
and
dec
xchg
out
xchg
xchg
and
mov
mov
lret
out
xor
push
mov
and
adc
in
push
fimull
and
sbb
ret
ds
insb
je
or
push
cmc
mov
adc
in
push
pushf
xlat
jne
pop
jle
jmp
inc
inc
adc
in
jbe
pop
jp
movsb
jge
nop
cld
cld
jne
lcall
mov
and
mov
shr
aas
ljmp
orl
das
inc
pusha
adc
sub
mov
xor
out
adc
dec
test
popf
insl
dec
pusha
add
jb
and
pmullw
pop
repnz
and
pushf
jno
lret
push
rol
fwait
jmp
shl
cmp
jns
daa
adc
push
shlb
mov
cmp
push
xchg
ljmp
sahf
dec
or
xor
dec
shl
add
and
ds
or
aas
out
push
pop
sahf
adc
lret
add
jnp
aaa
jg
in
dec
jo
jb
mov
cmp
dec
sahf
sbb
mov
jp
cmpsl
imul
mov
xor
cmp
test
push
and
adc
out
les
sbb
mov
xor
addb
pop
stos
je,pt
jno
mov
add
stc
fcoms
sub
sbb
sbb
test
scas
aas
sbb
sbb
add
cmc
loop
xor
xlat
adc
sub
mov
in
ds
fstp
push
aad
and
pop
fwait
mov
es
xchg
loopne
imull
pop
movsb
mov
jge
push
aam
adc
push
mov
adc
jl
xor
out
data16
cmp
or
jmp
sub
in
inc
mov
xchg
jno
sbb
pop
shrb
push
das
mov
mov
outsl
shl
out
add
jg
mov
xchg
aam
xor
jo
aas
adc
orb
into
lcall
push
push
imul
mov
dec
sbbl
or
jb
mov
shr
popa
lcall
pop
mov
xchg
fisttps
sub
test
imul
pop
adc
or
add
jmpw
inc
dec
inc
sahf
dec
mov
pusha
mov
cmpsb
scas
pushf
xchg
fwait
xchg
jbe
pop
xchg
loope
jne
jge
push
pushf
popa
movl
xor
shll
aas
lcall
loope
test
dec
cmpsl
mov
jmp
sbb
cmp
jnp
aas
loop
dec
loop
test
adc
daa
lods
clc
loopne
daa
xchg
lds
jo
lods
loop
jns
dec
xor
es
lcall
push
insb
and
out
mov
lods
hlt
ss
ja
cmp
xchg
inc
xor
cmc
or
pop
and
mov
mov
add
std
jne
dec
nop
push
into
test
adc
push
adc
test
mov
test
lret
pop
mov
xorl
pop
popa
or
pop
ret
fs
mov
dec
and
adc
push
idivl
test
aas
adc
nop
push
insb
es
out
repz
mov
in
icebp
int
cmpsb
mov
jmp
lret
popf
push
nop
das
je
inc
cmp
hlt
test
fsubp
cs
inc
mov
insb
cmp
hlt
hlt
in
aad
push
adc
repnz
cmp
cmp
adc
pushf
ret
sbb
jmp
cmp
add
mov
adc
or
mov
xchg
in
xchg
mov
mov
mov
fsubr
mov
fsts
push
sub
insb
mov
mov
mov
data16
adc
aaa
sub
dec
out
scas
dec
lds
scas
scas
imul
ljmp
mov
sub
cmp
add
fldl
mov
adc
mov
cmp
mov
dec
gs
imul
cmp
enter
aad
and
mov
enter
cs
fisubl
jb
push
loopne
adc
pop
jecxz
push
jg
int3
xchg
into
aaa
and
sbb
popa
dec
fsubrl
xlat
jae
pop
shrb
pop
pop
je
les
testl
mov
cmc
pop
out
cwtl
jecxz
xchg
clc
dec
add
ret
sub
and
lcall
out
push
int
hlt
jle
stos
and
xchg
adc
push
dec
mov
lahf
jnp
inc
pop
sarl
jne
insb
clc
and
inc
lds
sbb
lcall
dec
add
xchg
insl
fwait
jae
adc
inc
rclb
sti
jmp
jp
lods
shll
mov
ficoml
call
inc
je
fdivl
pushf
add
fs
jne
sbb
dec
xor
aad
push
ds
sbb
loope
ficoms
sub
adc
mov
mov
loopne
repz
mov
dec
movb
movsl
mov
stos
add
mov
pop
insb
xor
aas
mov
adc
outsl
sub
jg
stc
and
and
jae
fisubrs
cmpsb
mov
or
jno
arpl
adc
aas
cmp
mov
cld
push
add
mov
in
in
inc
and
inc
das
xchg
sbb
jb
xlat
fidivrs
enter
rclb
sar
sub
cmp
flds
lea
cmp
inc
loopne
mov
rcrb
mov
adc
push
aaa
stc
mov
cmp
inc
mov
push
lods
inc
push
mov
xor
out
sbb
push
xlat
jmp
or
ss
jge
mov
cli
dec
insl
mov
sub
fsts
fidivs
mov
jge
dec
mov
mov
fmulp
out
push
cltd
loope
movsl
mov
jno
fstpl
adc
lcall
jno
fs
xor
adc
mov
push
sbb
das
adc
jbe
jo
sub
lock
jecxz
pop
xchg
hlt
or
js
nop
int
test
sahf
mov
test
iret
dec
add
dec
push
xchg
or
adc
cmp
jecxz
jp
icebp
shlb
mov
dec
lock
and
fwait
push
lret
jle
fdivr
nop
mov
sbb
xchg
sbbb
outsb
test
cmp
xlat
sbb
out
and
idiv
scas
dec
shlb
rorl
mov
xchg
icebp
data16
mov
in
scas
mov
and
or
jns
pusha
xor
adc
cmp
mov
mov
je
inc
xchg
sahf
mov
int3
xlat
mov
and
das
mov
jmp
movsb
mov
fs
ror
xchg
mov
scas
xor
lret
jbe
aam
add
xor
gs
nop
xor
xor
mov
push
mov
loope
xlat
loope
jnp
xor
insb
rclb
mov
std
mov
pop
leave
mov
enter
cli
push
mov
adc
lods
and
and
lods
and
lods
cmp
mov
and
call
and
frstor
xor
adc
inc
and
movsl
fs
mov
cmp
in
loopne
insb
mov
aas
xchg
sub
adc
imul
inc
aam
in
add
fidivs
fsubs
cmp
lods
cli
jnp
xlat
cld
outsl
xchg
mov
ds
cmpsl
xlat
pop
cmp
fsubr
je
mov
xor
xchg
std
in
movsb
popa
push
repz
mov
dec
pop
mov
shlb
mov
out
lods
ss
mov
dec
cmp
mov
sub
mov
and
dec
xchg
pop
inc
ret
jge
cmp
andb
jmp
int3
or
inc
mov
ss
mov
mov
into
mov
xor
enter
not
mov
xchg
aad
test
mov
bound
sub
sub
mov
ffree
addb
add
ret
cwtl
xchg
inc
movsb
scas
stos
rcrb
aas
ja
inc
es
les
dec
je
pusha
jg
mov
push
and
mov
sbb
cld
cmpsl
mov
and
rorb
addb
mov
mov
mov
jnp
adc
cs
cmp
cmp
add
jle
add
je
cs
mov
negl
adc
mov
adc
mov
scas
mov
xchg
aad
inc
cmp
imul
call
daa
stc
fisubs
into
dec
jne
pop
movsb
cmp
pusha
inc
fnstcw
movsl
ss
mov
mov
mov
sub
sbb
out
fs
adc
leave
movsb
sbb
mov
fsubs
popa
ret
mov
cld
xor
fs
adc
mov
jbe
xor
mov
xor
jmp
sub
movq
mov
test
add
mov
sbb
insb
inc
mov
mov
mov
lret
cmp
add
xchg
sub
sbb
adc
loop
jmp
dec
dec
lret
or
mov
sahf
mov
or
in
pop
sbb
or
push
push
shrb
nop
in
test
out
jmp
popa
ja
out
push
daa
stc
mov
and
test
inc
pusha
push
fcoms
repnz
inc
aaa
in
push
jno
imul
mov
rclb
sbb
mov
push
je
jp
scas
int3
push
icebp
test
ljmp
in
idivb
in
xchg
or
mov
and
xor
xchg
push
jno
in
lods
or
in
sbb
xchg
dec
out
sbb
sbb
mov
inc
push
in
aad
cld
pop
pop
cmp
jo
je
mov
popa
mov
int
jmp
mov
out
pop
and
and
jle
push
aaa
jp
mov
ss
xchg
jne
mov
adc
orl
cmp
fwait
fs
int
sbbl
push
std
xor
divb
jbe
je
test
scas
mov
sbb
jge
sub
mov
ret
mov
ret
sub
testl
es
xor
js
pushf
push
aaa
test
mov
sub
in
or
mov
mov
add
pop
dec
xor
outsl
sbb
enter
sbb
pop
imul
jle
xchg
or
dec
arpl
xor
mov
shlb
cmc
jno
pop
scas
fildll
mov
adc
mov
lds
mov
pop
rcl
mov
aas
test
mov
jmp
push
inc
mov
adcl
mov
out
dec
cmpsb
inc
and
xorb
inc
pop
push
ret
mov
scas
fdivl
pop
sysenter
pop
inc
dec
gs
stc
sub
xchg
leave
adc
jl
adc
test
pop
mov
add
add
out
mov
jmp
ret
lret
mov
mov
mov
sbbb
das
ret
ret
push
add
not
insb
out
es
add
jmp
leave
jge
lea
push
pop
lea
adcl
insb
mov
push
mov
or
rorl
in
mov
mov
fnsave
lods
jns
jb
test
pop
adc
std
rolb
ljmp
jle
xor
mov
ret
and
dec
loope
stos
jg
jl
xor
movsb
loop
in
adc
jne
inc
aas
insb
jne
std
lods
pop
mov
cltd
stos
mov
nop
cmp
lock
adc
out
repnz
jl
fimuls
dec
mov
dec
cld
imul
xor
jmp
xchg
aad
icebp
aaa
jle
sahf
adc
fistpl
jl
scas
inc
xchg
add
lock
fisttpl
jne
sub
les
jmp
ds
mov
add
and
pop
or
sbb
das
ret
in
mov
inc
mov
hlt
popl
hlt
jne
xor
adc
out
sbb
in
pusha
jb
jo
cld
push
push
sub
movsl
push
lret
mov
fldl
adc
ror
or
shl
jne
std
clc
mov
xor
mov
dec
pusha
mov
xchg
xchg
and
push
fxch
cld
mov
cmpsb
mov
pop
and
mov
mov
xchg
addb
movb
xor
sbb
jne
cmp
bound
cmp
rsqrtps
and
mov
xor
xor
lret
inc
je,pn
or
mov
loope
aas
test
dec
rcrb
loopne
fldenv
mov
lock
xchg
rolb
adc
push
sub
mov
stos
mov
adc
xor
data16
aaa
xorb
setge
fdivrl
movl
test
test
repz
adc
adc
pop
data16
ss
adc
adc
push
sbb
mov
pop
cmc
mov
fs
xchg
lcall
fcoml
dec
pop
idivb
and
bound
inc
cmc
mulb
mov
movsl
mov
pop
ds
jb
rorb
vsqrtpd
stos
cmpsb
dec
int3
outsl
sub
lret
mov
push
sti
jecxz
clc
mov
add
out
push
clc
out
insb
dec
aaa
in
xor
xchg
dec
call
or
xor
adc
fs
sub
aam
or
jmp
fadds
fcoms
fldl
xorl
ret
or
std
or
inc
push
xorl
insb
hlt
ret
or
pop
test
jb
push
push
insb
sub
aad
cmp
ret
clc
int3
leave
int3
lret
nop
inc
jecxz
stos
push
call
mov
sahf
into
and
push
dec
daa
lret
enter
mov
imull
mov
push
sub
imul
int3
cs
cwtl
into
push
push
inc
adc
bound
cmpl
adc
pop
xor
push
pop
or
popf
pop
and
fsubs
test
sti
sub
repnz
adc
ds
xchg
and
out
cmp
dec
mulb
add
jp
mov
push
dec
fdecstp
xchg
mov
cmp
pop
jmp
out
dec
fisttpl
ss
rcll
loop
jmp
adc
aaa
push
xor
pop
jmp
arpl
xchg
add
imul
lods
mov
ss
scas
xchg
insb
fsubrs
or
jp
lea
cmp
mov
mov
push
jns
lret
dec
cmpsb
sub
mov
inc
call
ret
inc
lcall
stc
jl
in
pop
out
arpl
add
cmp
jae
pop
incb
sbb
sbb
push
call
sbb
ds
movsb
movsl
xchg
xor
mov
ret
in
inc
push
insb
jmp
lahf
mov
fisttpll
adc
pop
sub
into
in
or
mov
shlb
add
dec
sub
out
rcrl
das
lock
scas
popa
out
sbb
cmp
adc
mov
pop
js
jno
or
mov
inc
ss
testl
nop
adc
call
adc
push
je
or
js
cmpsl
shrl
lret
mov
mov
push
clc
pop
enter
andl
xor
dec
push
fcoms
popl
xlat
push
lds
fmull
sahf
cltd
scas
jmp
xchg
jbe
and
adc
ret
or
jno
les
mov
xchg
mov
and
adc
in
mov
int3
sub
jnp
jmp
adc
mov
adc
cmp
dec
adc
fbld
mov
mov
aaa
jp
in
leave
pop
jo
es
lahf
test
rcll
lock
jo
or
cld
fildll
addr16
int3
pop
jge
pop
xor
iret
jmp
pop
ret
jge
lcall
mov
jle
pop
or
lret
sub
mov
adc
in
subl
pusha
sbb
mov
aas
in
repz
jns
xor
mov
faddl
es
insb
cmp
push
pop
out
mov
push
les
in
mov
rcll
fadds
cli
sarb
sbb
mov
dec
push
jl
daa
ja
pop
adc
and
daa
cmp
xor
cltd
mov
xor
xchg
push
andl
test
adc
jnp
out
ljmp
clc
adc
ljmp
jae
mov
mov
icebp
cmpb
decb
mov
jl
jae
aas
pop
mov
dec
inc
sub
call
adc
mov
les
jmp
add
adc
push
mul
xor
lods
call
je
pushf
addb
ja
and
mov
adc
push
mov
mov
or
or
sbb
sarl
jne
gs
cmc
pop
mov
fs
addr16
imul
mov
int3
push
inc
adc
xor
mov
xor
dec
mov
xor
int
test
repz
rcrb
mov
test
jecxz
fisubs
rclb
mov
sub
ja
jge
scas
fimull
outsb
rcll
jno
mov
mov
mov
insl
cmp
repz
movsb
outsb
or
pop
bnd
les
ds
push
push
sti
sub
xor
lcall
stc
and
fidivrl
xchg
mov
aam
mov
enter
popa
clc
shll
rcrb
ljmp
cld
enter
js
aaa
sbb
nop
fcmovb
xchg
dec
test
sbb
jmp
adc
sbb
push
jo
ja
sub
out
adc
xchg
int
mov
mov
in
aas
mov
mov
or
insb
dec
ds
mov
shlb
mov
pop
call
inc
fimull
js
movsl
xor
das
test
push
test
rclb
mov
add
insb
lods
fsubl
dec
mov
pop
iret
stos
hlt
movsb
add
rorl
mov
fidivs
mov
test
scas
adc
xor
inc
in
sarb
and
mov
mov
push
sub
push
push
cltd
scas
in
mov
adc
pushf
stos
jecxz
xchg
sbb
orl
xor
adc
fs
pop
call
mov
add
mov
mov
xor
sub
shll
or
loope
dec
xor
scas
outsb
es
in
aaa
out
push
jb
and
push
mov
inc
icebp
xor
popf
jns
adc
jge
lcall
dec
mov
mov
mov
or
rcrb
jmp
and
addr16
mov
and
adc
std
cs
push
mov
stos
jo
xchg
sub
movsl
fcoms
shrb
data16
xor
lret
inc
xchg
add
lret
sbb
aas
addr16
mov
fimull
rcll
movsb
and
sbb
cmp
jne
mov
sub
dec
lret
in
mull
mov
mov
sbb
sub
cld
fsubs
movsl
lods
aam
mov
scas
jle
sarb
sub
push
gs
adc
push
inc
add
repnz
dec
push
dec
sbb
cltd
add
je
pop
cltd
scas
xchg
push
ds
xchg
lods
scas
lahf
jb
inc
fnsave
fidivrs
push
out
shl
push
cmp
push
mov
popf
cmp
ds
fsub
clc
lea
adc
ljmp
push
add
add
test
mov
mov
jg
ja
sarl
push
ljmp
cld
lds
jle
stc
fmuls
push
jb
mov
bound
cwtl
call
jecxz
jae
idiv
mov
mov
les
shll
mov
dec
dec
jmp
adc
and
mov
and
data16
xchg
mov
lock
cmp
sub
hlt
xor
adc
xor
dec
cld
ret
and
push
mov
test
addb
sub
clc
repnz
mov
sub
or
push
icebp
cmc
add
xchg
add
rcll
jne
sub
mov
and
pop
push
mov
gs
inc
cmpsb
xor
pop
mov
or
in
repz
sti
xor
adc
stos
dec
mov
movsb
mov
jmp
loop
aam
push
loope
or
mov
leave
add
adc
inc
push
repz
add
lcall
push
imul
mov
push
mov
dec
add
bound
xchg
dec
jbe
push
cmp
adcb
mov
subl
sub
sahf
xorl
out
sub
aad
cmp
xchg
mov
mov
or
xchg
jle
push
fiaddl
sub
andl
sub
aaa
lds
cmpsl
in
dec
adc
xor
jge
ss
mov
dec
and
push
push
pop
scas
adc
mov
divl
or
cmc
jl
adc
cmp
aad
mov
mov
push
cmp
idivb
jns,pt
jmp
sub
in
pop
push
jmp
arpl
cltd
or
rolb
gs
ljmp
mov
sbb
adc
js
cld
xorl
inc
mov
push
pop
and
das
xchg
xchg
mov
ljmp
gs
or
outsl
addr16
sub
or
adc
ja
int3
xor
jo
subl
adc
inc
mov
js
mov
cwtl
xor
mov
mov
aas
scas
mov
icebp
xchg
dec
push
sbb
push
mov
jmp
adc
xchg
in
cmc
ret
cmp
mov
push
pop
hlt
pop
pop
shl
inc
mov
and
sti
lods
xchg
popf
mov
xchg
in
lretw
out
pop
rcll
out
loop
cld
xchg
jae
cmc
mov
lret
sbb
xor
vpsubusb
mov
and
push
xchg
ss
mov
ljmp
fcomps
add
inc
xchg
lods
outsl
mov
out
adc
push
pushf
in
mov
and
xor
push
sub
and
cmc
xchg
iret
mov
fisubrl
divl
in
jbe
fistpl
jl
mov
mov
in
aam
adc
inc
adc
mov
pop
xchg
jnp
ds
mov
fwait
push
cld
adc
xchg
and
in
mov
pop
xchg
or
cmpsb
nop
ja
push
ljmp
pop
insb
or
pop
stos
addb
lret
or
lods
sbb
leave
mov
movsb
mov
fisubrs
sbb
je
je
mov
outsb
mov
xor
test
mov
sub
xor
jle
xchg
mov
pop
xor
cmpb
rcrl
cltd
icebp
inc
mov
daa
stc
jns
jle
inc
jbe
sbb
adc
mov
jp
or
gs
push
rcrl
test
mov
rclb
daa
mov
xor
mov
mov
outsb
sub
pop
dec
ds
mov
lods
mov
in
test
jne
xor
pop
cmpsl
pop
bound
cmp
in
in
xchg
push
push
inc
add
cmp
add
dec
pop
jo
mov
adc
in
xor
mov
lahf
es
jns
mov
fmulp
lods
push
dec
int3
stos
popf
cld
aad
sub
hlt
mov
in
ror
stos
and
das
xchg
sub
lds
adc
lods
mov
stos
jo
mov
fidivrs
out
jae
test
cmp
dec
pop
xor
push
inc
xor
leave
pop
xchg
adc
scas
call
insl
adc
and
stos
cmc
sub
jl
cmp
jae
push
jmp
fisubs
dec
cmp
or
je
jno
cmpsl
push
loopne
fnstcw
push
inc
lods
xchg
jne
adc
adc
pushf
adc
cs
sbb
inc
pusha
outsb
pop
xor
popa
insb
sbb
out
or
ds
test
dec
mov
insl
scas
push
cmp
push
aas
mov
popf
call
inc
sub
sbb
push
adc
jmp
xor
push
cmpl
aas
adc
push
hlt
pop
aaa
jnp
pop
adcl
xchg
js
lods
ret
fs
mov
mov
shl
and
hlt
mov
add
adc
jl
xor
pop
push
outsl
xchg
stos
das
adc
std
fcomps
out
test
sbb
sub
inc
mov
adc
xor
mov
out
jo
pop
dec
sbbl
mov
das
pop
call
and
sahf
inc
adc
into
int
repnz
outsl
es
pushf
loope
push
mov
mov
sbb
sub
lods
mov
push
in
fwait
jo
adc
cmc
xlat
iret
and
fs
stc
or
and
push
add
lods
add
mov
movl
cmpb
xor
rolb
dec
mov
jmp
or
xor
aas
lret
mov
cmp
add
cmpsl
adc
xor
js
arpl
setno
scas
lods
out
pop
pushf
insl
les
xor
mov
stos
xchg
out
and
jbe
mov
pop
mov
xor
scas
push
je
push
es
xchg
in
fmull
psadbw
dec
jns
loope
popf
sub
mov
pop
xchg
sub
popf
xchg
sub
jb
fidivl
out
dec
inc
andl
jecxz
pop
das
xchg
lods
in
cmp
or
sbb
loop,pt
nop
out
or
aad
cs
bound
adc
xchg
and
dec
dec
in
dec
test
hlt
xchg
das
pop
test
add
mov
adc
shll
fstpt
xor
lods
cmpsb
cs
cmp
and
xchg
out
and
std
je
sub
imul
jle
enter
shrb
push
jb
into
aas
out
arpl
mov
xor
ret
or
imul
dec
je
bound
cmp
in
clc
xchg
inc
push
jb
xor
jl
and
jnp
add
xchg
or
out
jecxz
repnz
mov
cs
dec
ljmp
xlat
pop
sub
mov
aaa
es
pop
mov
testb
stos
xor
or
xchg
aas
scas
adc
clc
add
xchg
or
xchg
xorb
push
fmuls
stos
inc
or
inc
insb
xchg
xchg
dec
adc
and
mov
hlt
rorb
jge
ds
mov
popf
ret
and
andl
popf
popf
dec
mov
xor
cmp
inc
and
cmp
lret
mov
sbb
insb
inc
mov
pop
sbb
scas
push
int
ss
fdivp
push
fidivrs
sub
insl
test
adc
ss
cmp
xchg
in
cld
add
push
mov
cmp
mov
repnz
cmpsl
movsl
insb
mov
mov
xchg
adc
add
insl
sub
push
out
xchg
test
loop
insl
sub
adc
mov
xor
mov
pop
jle
ja
mov
es
je
std
mov
rclb
imul
pop
adc
shrb
idiv
lods
dec
jns
jno
pop
lods
xchg
xchg
scas
push
mov
pop
arpl
mov
xchg
adc
mov
inc
jl
pop
lret
inc
std
shlb
dec
dec
insl
inc
aad
mov
bound
mov
or
mov
add
cs
jle
sahf
jp
loop
adc
and
icebp
adc
sti
fidivs
inc
xchg
loope
jns
mov
pop
push
outsl
arpl
add
pop
pop
dec
xchg
mov
lods
jg
ficoms
cli
push
in
pop
xchg
cmp
aad
xor
mov
mov
or
jge
mov
insb
fldcw
xor
xchg
imul
lret
stc
inc
and
jb
adc
adc
pop
andl
inc
push
adc
cmc
xchg
rcrb
xchg
shlb
das
mov
xchg
cmpsb
ja
or
out
mov
popa
add
pop
jnp
adc
insl
xor
push
rolb
test
insb
lahf
iret
cltd
fsubrl
or
adc
mov
push
mov
mov
clc
jp
push
lock
push
jp
push
int3
sub
std
sbb
mov
jg
xchg
idivb
lcall
das
loope
mov
or
mov
sub
xchg
sub
mov
in
xor
je
sahf
icebp
stos
divb
add
stos
lret
call
push
and
pop
sbb
add
mov
mov
and
inc
sub
movsb
or
sbbl
sti
das
and
fstpl
jge
imull
ljmp
jle
adcl
lcall
pop
jno
sub
and
jno
in
dec
xchg
fldenv
inc
cwtl
in
outsb
sbb
cmp
pop
cld
shrb
lock
lods
ret
das
out
ja
lcall
mov
rorb
lock
imul
loop
xchg
dec
fcmovnb
mov
sub
push
out
repnz
lds
add
dec
subl
in
jge
or
jnp
mov
or
cmpsb
mov
jmp
dec
fstpt
push
in
popa
adc
movsb
dec
push
add
cmp
cld
sbb
mov
or
sbb
cld
jb
xchg
cmpsb
push
in
xor
and
inc
add
inc
mov
mov
addr16
test
sbb
js
mov
sub
adc
mov
hlt
gs
in
insb
nop
and
dec
in
hlt
in
mov
mov
or
xchg
jmp
aaa
mov
add
sbb
xor
mov
jp
mov
test
mov
fimuls
aas
leave
fldl
enter
cmp
cmp
andb
sbb
lock
dec
add
mov
out
clc
es
subl
jge
xor
out
adc
out
jns
adc
testl
and
adc
dec
call
cmp
mov
jge
cmovae
es
int
and
and
shrl
jo
mov
ficoml
fcompl
adcl
rcll
popf
pop
cwtl
inc
xor
xchg
ds
lds
loopne
lock
sbb
pop
xchg
addb
aad
inc
xor
cmpl
jle
cmp
adc
data16
das
rcll
loopne
cmp
outsl
push
dec
jnp
stc
push
repz
xor
fsubrp
inc
mov
sub
shll
cmp
adc
sub
mov
mov
jmp
inc
ret
out
sub
clc
pop
xor
push
add
movb
movsb
mov
dec
push
mov
push
cmpsb
loopne
adc
add
int3
test
jno
xor
cmpb
movb
ja
jmp
mov
xlat
jl
movb
hlt
pop
cmc
leave
add
js
aas
jmp
sub
das
sbb
mov
push
sbb
mov
push
mov
sbbb
push
out
int3
inc
sti
fucomp
std
xor
sbb
popf
pusha
enter
mov
adcl
add
push
ja
in
insl
addr16
pushf
mov
ss
cmp
xchg
push
out
push
xor
jmp
sub
insl
xchg
out
lcall
jecxz
mulb
adc
xchg
xor
mov
popa
mov
pop
aam
or
or
insb
xchg
lret
gs
ds
xor
add
ret
call
sbbl
mov
imul
cmp
mov
mov
jp
push
push
push
sbb
daa
idivl
das
je
add
dec
inc
mov
dec
cli
mov
pop
aas
ljmp
mov
cmp
pop
cwtl
mov
push
stos
scas
jge
adc
notl
inc
cmp
jp
jns
sub
push
jl
jl
in
xor
jle
inc
sub
pusha
xor
pop
shlb
xlat
loope
pop
nop
fucomp
adc
imul
insb
inc
xchg
lock
das
mov
inc
fmul
pop
pop
addb
test
jmp
inc
fwait
and
pop
pop
enter
xor
rcll
pusha
mov
sbb
ret
lods
adc
pop
xchg
xchg
aas
jl
clc
sahf
inc
inc
adc
push
jmp
adc
clc
pop
xor
ds
shll
loope
out
dec
inc
adc
dec
push
punpckhwd
xor
int
push
xchg
pop
or
push
adc
push
mov
mulb
pop
ds
addl
loop
dec
out
loop
ds
hlt
js
mov
jno
add
loop
fldl
sub
adc
xchg
fs
add
in
mov
dec
inc
push
adc
shr
add
aaa
lods
mov
cli
xor
pop
mov
jnp
outsb
mov
fsub
xchg
les
xorl
jno
mov
call
xor
xchg
repnz
sub
daa
jl
mov
aaa
pop
repnz
lret
adc
adc
movsl
mov
fwait
mov
jnp
sub
jmp
mov
insl
push
ret
dec
xor
pusha
mov
out
jo
je
jns
adc
fisubrs
sub
push
xchg
test
mov
aas
adc
scas
mov
fistpll
cmp
xchg
and
push
xchg
imul
shrl
icebp
push
mov
scas
push
stos
mov
jns
stos
pop
gs
sub
in
xlat
xchg
xor
pop
dec
sub
hlt
arpl
out
push
outsb
mov
ja
int
stc
mov
inc
cmp
or
pop
fildll
into
pop
and
outsb
lret
into
adcl
push
cmp
mov
xchg
std
sub
daa
push
pusha
es
mov
aas
pusha
sbb
pop
mov
inc
pushf
and
fisubrs
loope
into
jmp
test
push
enter
icebp
outsb
lcall
jnp
mov
addr16
icebp
aaa
movsl
in
push
addl
cmp
leave
cmp
mov
dec
mov
mov
mov
cmpsb
mov
call
outsl
xor
pop
cmp
bound
in
jnp
hlt
mov
inc
mov
mov
subl
call
test
mov
adc
shll
jnp
test
cmp
icebp
add
je
add
ja
jle
pop
cmp
push
das
adcb
in
jmp
imul
js
mov
lds
pop
xor
ss
push
dec
test
fsubs
inc
popa
mov
das
xchg
aam
mov
cwtl
inc
mov
or
fst
add
cmp
push
incb
fxtract
divb
xchg
les
mov
or
cmpsl
push
cmpsb
hlt
jmp
sbb
xchg
and
mov
xchg
shrl
and
rcrl
iret
cld
insl
add
cmp
or
adc
popa
cwtl
and
decl
xchg
push
or
movsl
cmc
pop
aaa
out
add
lods
adc
xor
fisubrl
ret
lahf
pop
pop
popa
mov
rolb
outsb
adc
popf
daa
sub
push
sub
xor
cmp
and
xor
jp
cmc
push
push
inc
ret
pop
jmp
punpckhbw
lea
sub
je
dec
rcl
ds
and
adc
push
and
leave
cmp
lret
adc
cmp
push
test
push
jmp
adc
repz
out
sbb
cs
cmpsb
mov
fwait
add
add
loope
sub
jl
in
lock
jmp
mov
imulb
inc
adc
jmp
sub
fldt
mov
mov
jnp
ret
je
push
push
ret
pop
add
outsb
push
lcall
sub
lret
in
hlt
mov
or
xor
xor
jmp
rorl
jbe
movsb
ljmp
js
cmp
pop
mov
nop
mov
jp
hlt
les
mov
xor
stc
cmp
xchg
push
sbb
sub
adc
or
in
adc
scas
imul
mov
adc
add
test
sub
jnp
daa
aaa
xchg
sub
cmp
out
mov
stc
jne
fxch
and
jne
lea
pop
mov
outsl
xchg
and
mov
out
pop
int3
and
lods
jmp
data16
sbb
push
mov
add
inc
ret
cmpsl
out
cmpsl
cmc
pop
mov
sub
mov
in
ja
xor
adc
and
enter
nop
add
xchg
inc
fsubrl
leave
adc
ljmp
xchg
push
lahf
jns
sbb
mov
push
subb
sub
repnz
jmp
pop
jnp
lods
inc
jmp
lea
fstpt
push
or
ja
cld
mov
aaa
xchg
iret
add
ljmp
adc
adc
jo
jbe
mov
iret
ja
jl
fcomi
lods
pop
jno
les
inc
sub
nop
xlat
mov
xchg
xor
and
aaa
mov
test
enter
ret
insb
fwait
int3
mov
outsb
pusha
mov
lds
loopne
jmp
sti
roll
xchg
mov
jno
and
loopne
or
mov
mov
jbe
fimuls
adc
mov
jmp
xor
or
sahf
comiss
fsubrl
pop
push
mov
xor
int3
mov
in
mov
lds
pop
mov
popf
and
fnstenv
mov
xchg
into
fwait
repnz
cmp
jmp
test
sub
push
mov
mov
inc
xor
mov
pop
mov
mov
shlb
add
das
adc
mov
and
in
mov
push
js
jno
into
or
cmpsl
mov
scas
ds
sub
jecxz
xor
in
xor
pop
and
mov
push
inc
dec
inc
fsubp
add
fwait
push
subb
sbb
es
out
addr16
add
iret
add
incl
or
daa
sub
jmp
inc
push
or
popf
mov
adc
in
mov
into
loope
mov
cwtl
mov
sub
mov
sbbl
cmp
pop
inc
mov
out
push
jbe
mov
push
aad
movl
jae
and
ljmp
push
aas
clc
inc
dec
lds
xor
mov
sub
stc
dec
outsb
stc
mov
dec
mov
inc
cmp
cmp
js
ja
adc
push
hlt
clc
test
mov
adc
shll
sub
sub
mov
sbb
out
add
call
rcrl
push
pushf
mov
cmp
mov
scas
addr16
jb
xchg
and
or
fwait
jecxz
sarl
xchg
jnp
ret
sub
lahf
adc
or
les
aas
lret
jne
mov
mov
adc
mov
ja
popf
push
pop
pop
fnstenv
lret
mov
jg
mov
pop
mov
jge
jbe
loope
adc
and
sarl
std
mov
jmp
not
fsubrl
subb
pop
jbe
int
xchg
mov
inc
mov
cmp
pop
xchg
mov
mov
in
rep
in
mov
mov
cmc
mov
pop
xchg
sub
cmp
mov
insb
adc
ret
sub
cmp
in
outsl
mov
enter
popf
in
mov
sbb
push
push
addr16
scas
and
inc
fcmovu
loop
arpl
push
cli
es
test
test
das
adc
cmp
shlb
subb
out
mov
sbb
mov
lock
sub
sbb
mov
xlat
pop
add
in
mov
adc
lahf
cmp
cmp
ds
sub
stos
ja
aam
cmp
scas
adc
popf
and
call
aas
push
pop
addl
add
or
mov
movsl
mov
test
aaa
mov
jne
cmp
mov
je
ja
out
mov
and
rclb
cld
pop
insb
cmc
push
hlt
loop
in
and
mov
int
in
les
sub
sub
movsb
push
dec
mov
iret
lret
pop
jp
inc
ds
push
je
clc
ds
fs
adc
push
xor
mov
negb
xor
pusha
adcl
xor
inc
aas
addr16
jl
loopne
xchg
call
sub
nop
xor
pop
mov
ljmp
out
popa
mov
stos
in
mov
adcl
sbb
jno
std
pop
mov
nop
ss
add
inc
xor
sbbl
lock
xor
ljmp
add
loop
dec
sub
xor
gs
jl
aad
fsubs
xchg
movsl
xor
fyl2x
inc
xchg
sub
adc
pop
ret
mov
xchg
push
loop
and
ss
cld
outsb
push
mov
test
cmp
mov
sub
aam
mov
sub
lahf
push
insb
mov
jae
pop
mov
fiadds
data16
mov
add
dec
stos
jg
lahf
cmpl
dec
mov
xchg
mov
xchg
or
jb
jnp
sub
pop
pusha
adcl
test
lods
js
jl
push
sub
xchg
mov
jne
mov
jmp
fstp
sub
cmpl
jge
adc
test
jbe
cmp
pushl
push
jae
mov
jle
and
inc
enter
mov
adc
xchg
xor
sbb
ret
inc
dec
pop
gs
jg
or
in
xchg
movsb
in
push
test
adc
sti
dec
adc
ja
inc
lcall
fs
push
jecxz
xor
in
or
add
pusha
aad
xchg
dec
enter
sbb
jbe
div
jp
dec
dec
in
ja
sarl
add
das
mov
pop
mov
sub
mov
movnti
cmc
push
mov
data16
pop
xchg
scas
cmpsl
paddsw
out
aas
jmp
ds
sbb
subb
adc
loop
add
or
mov
add
div
lret
lods
mov
nop
jb
dec
mov
daa
ret
mov
mov
jno
iret
push
ds
int3
add
pop
xor
sbb
mov
sbb
push
sbb
cmp
xor
sub
rclb
ret
mov
jmp
jp
pop
daa
fisubrl
stos
ds
mov
in
test
outsb
adcb
xchg
addr16
rcrl
jb
sub
in
jg
mov
jge
out
mov
adc
xor
movsl
es
shrl
pusha
adc
adc
xorb
mov
inc
loope
xor
sub
pop
in
daa
loopne
fdivl
daa
add
mov
inc
jne
mov
cmpsb
mov
in
cmc
inc
pop
and
push
inc
jmp
pop
push
insl
js
decb
shlb
dec
mov
jbe
pop
popf
insb
sar
mov
dec
and
cmpl
mov
and
mov
sub
out
mov
dec
pop
cld
into
inc
cmp
xorl
jmp
loope
sbbb
pop
pusha
adc
mov
mov
xor
es
push
mov
inc
or
mov
jmp
push
and
mov
in
adc
pop
sub
cs
jle
adc
daa
imul
sahf
push
jmp
mov
cmc
xor
testb
adc
enter
xchg
mov
out
dec
mov
mov
fsub
in
cmp
outsb
pop
wrmsr
mov
inc
xor
mov
adc
and
fisubs
push
in
mov
dec
out
lods
fistpll
or
lahf
pop
mov
mov
and
enter
cmp
push
ja
test
xor
sub
jne
std
mov
adcb
sbbl
mov
ficoms
push
adc
xchg
loopne
fmul
sub
add
aaa
stc
cmp
adcl
push
pop
dec
dec
xchg
mov
fcompl
cld
daa
mov
push
out
and
pop
aaa
pop
jge
jo
or
sbb
push
sub
add
cmp
clc
mov
push
push
xchg
mov
outsb
mov
pop
sub
loope
pop
and
ret
ss
jo
and
sbb
push
pop
and
dec
int3
mov
mov
in
addb
in
shrl
icebp
adc
into
mov
dec
jae
mov
inc
inc
std
daa
cmp
aas
fs
fldcw
cmp
mov
sub
xchg
imull
cs
xor
scas
xchg
shrb
cli
imulb
cmpsb
jmp
xchg
mov
into
dec
push
inc
pop
ss
xchg
cmp
add
loopne
mov
push
js
decb
cmp
xor
in
mov
jl
in
movsl
rcl
sbb
cmp
flds
shrb
inc
or
in
repz
mov
leave
mov
not
xchg
cmp
popf
jecxz
js
cmc
xchg
mov
cmpb
cmp
clc
xor
ficomps
fdivrl
xchg
mov
dec
pop
cmp
nop
push
fwait
clc
data16
cmp
imul
std
cmp
dec
ret
daa
in
cmp
push
mov
inc
dec
ret
in
sub
dec
andl
push
pusha
lods
push
dec
in
mov
out
gs
jp
or
inc
mov
test
fisttpll
or
or
jb
dec
jno
nop
mov
int3
xchg
mov
push
clc
jecxz
lods
cmp
adc
das
fcoms
cmp
fs
sbb
sti
in
xor
hlt
mov
push
orb
jnp
xor
adc
xor
pop
adc
mov
fwait
cmp
clc
cmp
pushf
test
mov
sahf
inc
push
mov
cmp
inc
mov
add
movsl
and
mov
clc
mov
xor
fmul
jecxz
lds
lea
inc
mov
cmp
mov
dec
and
xor
outsb
cli
jae
lods
inc
popa
icebp
push
cmp
stos
je
dec
popl
test
push
addb
cmp
cs
shlb
cmp
add
push
and
push
cmp
and
arpl
test
sbb
cmp
ret
leavew
sarl
jg
jge
pop
loop
js
cmp
aad
subb
imul
xlat
sarb
idivl
dec
xchg
cmp
or
cltd
inc
sti
sub
js
scas
or
sub
fs
jl
in
out
pop
cmp
data16
or
fs
cmp
sub
cmp
jb
cmp
cmp
mov
popf
push
cmpsl
or
adc
mov
fistpll
pop
mov
mov
cmp
test
loope
iret
or
repnz
out
enter
aas
or
adc
xlat
data16
cmp
int3
std
mov
adc
pop
clc
pushf
lock
xor
hlt
lcall
insb
fists
stos
push
sub
sbb
mov
loopne
push
sub
movsl
adc
lahf
inc
mov
add
mov
jns
leave
and
pop
aam
mov
cmp
xor
movsl
lahf
ret
fidivs
mov
and
mov
stos
mov
or
lods
cltd
sub
jge
in
pop
xor
push
mov
mov
inc
fdivrl
push
loopne
and
mov
test
or
in
popa
cmp
push
sub
cmp
lahf
sbb
xlat
orl
fcompl
clc
movsb
or
mov
push
shll
jl
inc
enter
neg
push
stos
loope
ret
test
je
dec
addr16
fs
inc
adc
fistpl
sbb
cmp
stos
insl
popf
lret
dec
aas
adc
push
mov
out
and
int3
mov
lret
cs
sub
cmp
hlt
xchg
jns
cmp
js
aad
ss
cmp
add
hlt
scas
loopne
or
inc
testb
sub
out
push
adc
jp
or
dec
daa
cmp
push
aam
adc
or
mov
jnp
mov
push
dec
popa
mov
jmp
fwait
inc
mov
loop
jle
pop
cmp
gs
fdivrl
xchg
aam
adc
or
cmpsb
cmp
jg
sub
xor
and
scas
out
movsl
icebp
daa
add
mov
aam
xchg
and
mov
xchg
sti
cmp
pop
or
push
cmp
sub
in
adc
cmp
xor
jmp
sbb
add
jnp
loope
sub
fs
jge
pop
movsb
or
cmp
mov
cmp
mov
push
arpl
scas
test
or
mov
int
jb
sub
cmp
push
mov
cmp
in
out
test
aaa
cmp
ja
inc
test
dec
sub
sub
fdiv
adc
cmp
xor
pushf
sbb
cmp
sti
cmp
mov
sbb
test
cmp
int3
sbb
xchg
push
mov
sarb
out
jecxz
sub
repnz
xor
pop
test
cwtl
mov
add
scas
addr16
mov
ret
lret
pushf
add
fnstsw
push
inc
jb
rep
lret
js
and
addr16
cmp
adc
sbb
mov
sub
xchg
cmp
add
cmp
pop
add
xorb
fstps
sti
cwtl
mov
cmp
mov
push
jg
out
sbb
outsb
pop
inc
je
sub
jmp
cmovae
sbb
lock
dec
test
test
adc
sbb
mov
addr16
mov
push
out
lods
shrl
jge
mov
imul
mov
cmp
insb
push
lock
movsb
jns
ret
rclb
fdivrl
jne
mov
fwait
add
mov
sub
cmp
jecxz
es
cmp
jb
jne
jge
stos
loop
jbe
and
sub
lcall
gs
sahf
push
mov
mov
negl
cmp
sar
movsb
sbb
scas
push
movl
cmp
rorl
push
outsb
xcrypt-cfb
cmpsl
and
adc
and
js
mov
xchg
lods
add
or
inc
mov
push
cmp
add
cmp
or
jns
imull
mov
ret
push
sbb
cmp
adc
aaa
and
repz
dec
arpl
gs
sub
adc
add
mov
push
in
sub
decb
adc
xchg
xchg
lret
cmp
cmp
fldenv
sub
mov
cmp
cmp
sbb
xor
fistpl
icebp
push
lret
pop
cmp
clc
fs
scas
cmp
pop
imul
xorl
sub
flds
and
decl
or
cmp
fcomi
sbb
mov
or
mov
xor
sbb
mov
sti
fnsave
jecxz
loope
decl
cmpsl
xchg
sub
mov
mov
sub
mov
xor
clc
fnstcw
or
adc
les
cmp
xchg
mov
or
aas
jmp
lods
gs
xchg
test
orb
adc
in
stc
jl
pop
mov
dec
and
stos
lret
jns
push
mov
and
cmp
test
stos
insl
pusha
in
and
pop
dec
mov
shr
xlat
sbb
adc
cmp
sub
inc
push
das
popf
fnstsw
cmp
and
xor
movl
in
push
cwtl
adc
sarb
pop
cmp
mov
repz
cmp
orl
aam
scas
sarb
cli
test
cmp
shlb
adc
sub
and
and
jae,pn
sbb
or
push
push
adc
jns
out
add
das
addr16
sbb
mov
dec
shll
lea
jmp
xor
test
mov
es
std
imul
mov
hlt
test
cmp
sub
bnd
push
lahf
mov
ja
sub
cmp
jbe
xchg
jmp
jne,pt
add
repz
punpcklwd
lods
or
push
push
xor
push
fwait
scas
cmp
jp
inc
add
daa
insb
add
sbb
jmp
jbe
cmp
inc
test
or
adc
push
mov
sbb
or
xchg
adc
sbb
sarl
pop
fdivp
xchg
lock
loopne
cmp
push
loop
out
add
xor
mov
or
cwtl
je
jmp
ss
add
aam
outsl
cmp
xor
sub
cmp
dec
fildll
cmp
fstpt
xorb
sbb
sbb
cmpsb
in
mov
jl
inc
mov
xor
mov
cs
pop
cmpsl
dec
scas
lret
int3
mov
and
sbb
push
inc
loope
loop
cmp
sbb
inc
dec
ret
push
lods
out
outsb
jns
cmp
mov
data16
cs
insl
push
mov
cmpsl
movsl
sbb
pop
cmp
jle
cmp
mov
dec
pop
xor
test
ficomps
testb
icebp
xor
js
or
dec
add
dec
mov
pop
dec
stos
sub
push
adc
mov
rclb
jno
stos
dec
ja
test
xchg
scas
and
dec
xor
jp
cld
xor
pop
mov
or
jo
scas
fidivl
inc
push
clc
fnstcw
push
mov
sub
sbb
cmp
xor
cltd
outsl
inc
mov
adc
jae
push
or
pop
mov
cmpb
add
pusha
test
mov
pop
rol
in
mov
pop
test
xlat
insb
movsl
push
xchg
cmpsb
push
addl
fiadds
push
cmp
mov
xor
enter
call
test
aas
aaa
enter
push
inc
loope
stc
jmp
jecxz
sbb
mov
xchg
imul
cmp
arpl
push
cmp
test
js
adc
orb
js
and
icebp
cs
sub
ret
in
js
sub
xor
notb
mov
xchg
cmp
sub
push
push
rcrl
mov
or
sbb
into
jle
mov
dec
sti
inc
ljmp
pop
lret
scas
xchg
test
push
int3
rcr
jbe
or
sbb
nop
arpl
sbb
nop
cmp
cmp
mov
push
and
lcall
adc
xchg
outsl
push
pop
ret
sub
adc
sbb
fldcw
ficompl
dec
jmp
loopne
pop
daa
add
adc
rcr
xchg
push
inc
fdivrp
inc
movsl
rolb
cmc
lret
out
insl
cld
inc
mov
add
das
xchg
and
cmp
in
lret
out
push
xchg
sbb
inc
xor
sub
add
mov
xchg
inc
and
sbb
pop
push
inc
adc
adc
sub
mov
arpl
rcll
adc
loopne
mov
and
mov
rcll
mov
in
mov
shl
or
sub
pop
cmp
push
and
test
mov
mov
push
imul
or
inc
aaa
pop
cmpsl
push
sti
into
and
cmp
andb
clc
fwait
aam
pop
dec
pop
enter
jo
mov
dec
mov
fcoml
loop
sarb
mov
or
xchg
sarl
ds
lods
add
jmp
pop
mov
inc
pop
pop
mov
mov
loope
imull
xor
add
push
dec
repnz
xor
mov
in
adc
add
xchg
mul
jecxz
aad
ds
adc
dec
ss
xchg
pushf
jge,pt
sbbl
xor
outsb
or
test
cmpsl
faddl
popa
mov
insb
mov
aas
ss
aas
les
movsbl
mov
nop
cmp
stc
sub
jecxz
enter
arpl
mov
imul
sbb
sbb
mov
add
shlb
xor
test
xchg
das
xchg
cli
ret
outsl
insb
hlt
outsb
shll
fsubrl
lds
test
xor
cltd
mov
in
xchg
and
lcall
cmp
hlt
jmp
or
and
inc
sbbl
aas
cmp
mov
fwait
sub
and
aad
push
adc
frstor
loope
test
mov
jmp
adc
mov
aaa
fwait
dec
bound
push
fdivp
and
jnp
daa
push
leave
out
popa
in
xchg
into
sbb
mov
adc
lcall
ja
into
xchg
repz
cld
lea
rol
jbe
push
mov
ja
aad
inc
cmpsb
add
inc
loopne
daa
pop
cmp
and
ss
aam
or
adc
adc
stc
sub
xchg
lret
nop
int3
loopne
ss
out
jno
lods
leave
out
sub
xor
push
and
mov
subl
xchg
push
jp
std
mov
nop
sub
or
scas
xor
cvtpi2ps
mov
xchg
clc
pusha
dec
insl
or
xchg
lahf
pop
pop
incb
mov
leave
pop
pop
je
push
iret
ss
cmp
fsubrp
adc
cmp
inc
cmp
jp
and
cmpsl
adc
inc
fnstenv
daa
xor
dec
mov
int3
pop
in
imul
lret
add
stos
adc
inc
pusha
fildll
scas
enter
mov
mov
and
cmpsl
pusha
inc
mov
in
aad
pop
xchg
cmp
xchg
sub
imul
cmp
sub
in
pop
jno
sub
stos
xchg
jo
das
test
xor
sub
iret
pop
jo
cmp
pop
popf
das
xor
ljmp
sarl
aam
ja
add
mov
dec
movl
sbb
jg
cs
fsub
adc
mov
mov
mov
enter
sbbb
out
rcrl
jo
add
cs
lods
loope
sti
cltd
sarl
jle
push
fwait
rcrb
clc
les
aaa
xchg
inc
mov
dec
dec
adc
and
xchg
xor
mov
mov
adc
cmp
jo
outsb
sbb
jbe
jo
mov
ljmp
sub
xor
or
dec
lahf
pop
test
lahf
shl
xchg
out
push
xchg
addr16
aaa
add
add
xchg
jo
lods
mov
mov
lret
lods
ret
pop
pusha
jmp
push
lcall
mov
scas
iret
das
xor
bndstx
push
js
jo
and
add
cmc
inc
jb
loopne
cmp
or
push
jae
xor
ljmp
sub
cltd
xchg
pop
and
pop
bound
aad
xchg
pusha
jmp
mov
int3
xor
imul
or
je
add
scas
arpl
adc
fsubrl
mov
ja
sbb
or
push
rcrl
aas
std
lods
jl
icebp
sbb
je
mov
adc
jg
mov
dec
xor
cmp
inc
stos
outsb
jo
xchg
nop
dec
pop
inc
addl
cmp
xchg
xchg
les
and
in
xor
cmp
cmc
in
or
imull
cs
js
mov
push
out
adc
adc
mov
popa
pop
push
add
iret
xchg
push
and
or
adc
data16
or
pop
jge
xchg
aam
in
mov
inc
cmp
sub
fwait
push
orl
jp
jg
lock
jmp
jl
idivb
xchg
fldl
test
into
adcl
sub
lret
dec
and
sti
aas
xor
mov
push
andl
sbb
add
sub
and
adc
dec
dec
cli
js
bound
jmp
sub
ret
rep
add
gs
jp
lret
dec
or
clc
cmp
aad
and
ret
js
cmp
outsl
dec
mov
fdiv
in
and
std
lea
fcoms
and
mov
inc
push
mov
jb
jbe
arpl
fadd
push
sub
les
sbb
daa
add
adc
push
insl
movsb
jle
fcoms
scas
push
mov
sub
mov
notb
add
dec
xchg
add
inc
push
sub
lret
and
mov
mov
lret
push
and
data16
pop
push
cmp
mov
sbbb
icebp
inc
dec
test
xor
fdivrs
jmp
int3
or
jge
adc
inc
jno
add
imul
fwait
orl
inc
or
ljmp
or
lock
mov
mov
clc
mov
sub
xchg
pop
lret
xchg
xorb
xor
xchg
movsb
push
out
jg
sub
mov
jecxz
xorl
mov
jg
and
fwait
loop
lods
mov
fnsave
mov
subl
shll
inc
adc
rcrl
mov
mov
adcl
jmp
inc
jl
or
dec
outsl
ss
hlt
out
mov
xor
mov
outsl
and
inc
fldt
jg
repz
push
daa
out
aaa
adc
push
lods
les
movsb
add
int
mov
popf
inc
or
das
mov
mov
push
cmc
and
and
jl
lods
pop
xchg
jo
dec
push
lea
pop
adc
test
xchg
int3
lret
cmpsb
gs
xchg
in
mov
mov
and
in
aad
ret
mov
and
ljmp
jle
imul
stc
test
inc
out
movsl
xor
das
and
mov
dec
xchg
lock
push
mov
cmp
pop
orb
xor
mov
jmp
sbb
or
lock
data16
push
es
inc
add
inc
inc
xchg
and
mov
sahf
mov
pop
test
sub
add
mov
int3
sub
cmp
xchg
fisubs
cmpl
js
ss
std
add
xor
mov
xchg
out
pop
adc
fcmovnb
push
add
fdivrp
das
add
loop
mov
jp
add
les
cmpsl
lock
ljmp
sbb
lret
js
fdivp
insl
es
loope
daa
out
and
shlb
stos
into
pop
aad
mov
and
out
push
jg
xchg
pop
mov
fidivrl
in
add
xchg
pop
jae
mov
icebp
jae
sub
pop
fsubrs
enter
pusha
adc
fwait
dec
inc
add
push
les
in
and
repnz
test
stos
adc
push
inc
pop
add
sub
rcll
jmp
or
enter
adc
jp
pop
mov
stos
in
cmc
aam
scas
sub
push
xor
andb
cmc
mov
jmp
jo
scas
add
out
add
dec
lods
inc
add
sbb
mov
bound
shl
sbb
xchg
cwtl
sub
xor
ja
adc
jbe
rolb
fwait
jl
ja
and
std
jmp
jmp
adc
mov
adc
cli
cltd
dec
andl
cs
data16
xchg
mov
mov
pop
sub
out
outsb
push
out
cmp
push
jo
ljmp
aaa
cmp
daa
push
in
mov
mov
jmp
inc
pop
loope
leave
jo
hlt
sub
dec
in
fadds
lock
or
aad
adc
aam
xor
mov
inc
jecxz
inc
aaa
sub
mov
leave
mov
sbbl
insl
aam
mov
adc
adc
scas
dec
cltd
pushl
mov
jo
pop
cmpsb
mov
cld
mov
adc
xchg
cmp
xchg
xor
ret
add
xlat
dec
shll
ds
and
push
push
add
hlt
and
push
je
fildll
fs
sub
test
mov
ds
sti
out
int3
orl
mov
cmp
pop
or
dec
fstpt
out
fisttps
push
pop
addr16
ljmp
mov
pop
sub
cmp
pusha
cmpsb
subb
add
push
imul
dec
mov
lods
int3
out
mov
and
adc
push
inc
insl
std
jp
jae
adc
pushf
mov
inc
dec
daa
lock
daa
ja
daa
es
push
push
push
mov
sbbb
inc
mov
adc
push
push
or
mov
or
mov
or
mov
in
test
adc
addb
jmp
jge
cmp
scas
cmp
rcrb
pop
xchg
inc
lea
mov
mov
pop
jns
dec
sbb
cmp
cmp
push
sahf
or
sbb
out
ret
adc
lretw
xor
inc
shll
into
decl
add
scas
outsl
call
test
dec
mov
push
nop
out
jp
xlat
mov
adc
aam
jbe
and
shlb
adc
fucomi
movsl
lgs
lock
lods
aaa
adc
mov
iret
dec
insb
push
adc
jp
fiadds
xor
mov
std
clc
scas
mov
pmaddwd
add
mov
xor
ljmp
imul
xor
les
jge
add
inc
adc
fisubs
es
test
sub
sar
pushf
out
mov
and
aaa
and
mov
sub
adc
dec
cmpsl
xchg
mov
mov
outsl
sbb
ret
bound
cmpsl
aad
movsl
xor
or
rclb
cmp
ficoms
call
fcomps
mov
cwtl
test
cmp
ss
lret
sbb
sub
push
or
icebp
sti
insb
xor
es
pop
in
inc
adc
adc
ljmp
andb
std
ret
mov
mov
out
jmp
shrb
mov
es
xchg
jge
mov
cmp
jecxz
aaa
adc
sahf
shlb
push
xchg
into
ja
mov
out
movsl
ucomiss
push
loopne
mov
outsl
jnp
mov
lcall
jg
add
in
push
mov
je
pop
push
jl
mov
add
xor
jne
adc
xchg
jl
push
xchg
lahf
sbb
hlt
sbb
xchg
jp
lds
mov
xchg
xchg
and
ss
adc
pop
mov
movsb
es
clc
fmul
popf
mov
add
sub
cld
jg
xchg
inc
push
mov
and
push
lret
add
sbb
and
add
je
xchg
fstpt
mov
inc
test
lods
xchg
shll
sbb
mov
out
loop
fbld
adc
cmp
mov
or
xor
roll
imul
std
dec
shll
sbbl
mull
jae
xchg
lea
shl
in
and
cmp
and
jne
pop
xchg
sub
rcll
mov
lea
imul
hlt
das
js
adcl
sbb
cmp
out
dec
mov
mov
leave
aam
or
jae
push
cmp
mov
or
cmpl
sbb
dec
push
mov
fxch
xor
push
cmp
adc
pusha
push
pop
das
scas
xchg
jb
adcl
jo
sbb
pop
rorb
cmp
jne
push
mov
sub
xlat
mov
mov
js
addb
movsl
sub
test
and
cmp
sbb
movsb
sarl
dec
push
dec
cmp
fsubrl
mov
daa
loope
iret
xchg
cmp
dec
mov
mov
pop
fdivp
aaa
stc
imul
jg
add
in
scas
imul
in
adc
dec
shl
xchg
xchg
pop
jle
and
test
shll
sub
pushf
cmp
jnp
cmp
push
out
jmp
jg
sub
cmp
cwtl
xchg
dec
sbb
mov
push
push
in
sbb
mov
orb
cs
mov
mov
add
or
ljmp
dec
add
sub
nop
dec
lcall
scas
pop
sub
and
or
insb
cmp
and
sahf
cmp
xchg
dec
mov
outsb
mov
mov
dec
push
loopne
in
popf
fdivr
enter
adc
lods
or
and
xor
ds
mov
cli
aas
shl
addr16
lea
dec
push
leave
into
add
in
cmp
or
int
mov
pushf
dec
jmp
cmp
add
cs
adc
push
jo
pusha
sbb
lods
insb
sahf
cmp
dec
sbb
repnz
dec
mov
xchg
jo
hlt
in
scas
cmp
js
xor
rcrl
lret
in
mov
sbb
mov
das
loopne
cmc
add
mov
add
sbb
fs
dec
sti
fcoms
cld
sub
mov
cmp
jecxz
mov
jle
std
jl
mov
sti
cmp
sahf
cld
dec
movsb
sub
lahf
popf
fcmovne
pop
jne
in
arpl
push
xlat
push
cmp
ficomps
and
aad
dec
and
inc
jge
cmp
add
andl
jno
push
pop
dec
inc
xchg
out
cltd
pop
adc
idivb
les
cmp
std
subl
push
sti
dec
cwtl
push
cmp
ss
cltd
push
test
das
xchg
insb
sub
sub
pop
ljmp
mov
mov
mov
mov
imul
add
test
lret
lods
mov
mov
rcrb
lods
sbb
into
adc
sbb
xchg
mov
pop
mov
sti
jmp
aam
cmp
mov
je
mov
dec
xor
mov
xchg
push
cltd
xor
dec
ss
mov
imul
scas
mov
scas
imul
jns
addl
xchg
movsl
in
cmp
cmp
jb
push
fcoml
and
mov
or
mov
jno
pop
adc
push
dec
sub
add
ja
mov
xor
add
std
fmull
popf
jnp
sub
inc
movsl
orl
cs
jmp
aam
ret
jo
into
hlt
outsb
add
jnp
or
dec
mov
dec
cmp
test
stos
shll
push
popa
stos
ret
dec
adc
bound
xchg
cmp
cmp
mov
push
mov
inc
test
inc
aaa
jbe
aad
inc
add
mov
push
push
js
js
icebp
fisubs
push
pop
rcrl
xor
std
cmp
mov
aaa
adc
push
jecxz
inc
xor
ljmp
arpl
sbb
lods
pusha
cmp
call
ja
test
cmp
cmp
loope
mov
ds
aas
je
lret
sub
dec
push
js
or
insl
pop
cmp
mov
sahf
adc
push
cmpl
or
sti
dec
lcall
scas
and
les
cs
iret
and
inc
adc
sub
cwtl
jbe
xlat
icebp
mov
scas
enter
xor
arpl
pushf
movsl
pop
jge
sti
cmp
nop
jg
cmp
jnp
cli
subl
mov
jecxz
or
jmp
arpl
add
dec
add
xor
call
xchg
cmp
cmp
xor
sbb
cmc
in
add
cli
cmp
jbe
iret
cmp
dec
out
jo
sub
sbb
repz
xor
sub
dec
adc
aas
hlt
add
and
sbb
je
and
sbb
cmp
lock
sbb
mov
xor
jg
and
fsubl
xchg
sahf
cmc
add
cmp
and
int3
dec
fnstcw
dec
faddl
cmp
hlt
xor
mov
push
ja
xor
inc
and
aaa
cmp
cmc
loop
mov
ljmp
and
cwtl
mov
loope
addr16
xor
add
and
cmp
mov
cmp
and
or
mov
pop
repz
push
cmp
xor
outsb
lea
sub
cmp
subl
dec
pop
es
adc
imul
mov
mov
jo
xor
ss
add
testb
push
fstpt
xor
adc
loope
adc
xchg
lods
xor
jp
xor
xchg
cmpl
ss
test
sbb
mov
and
push
outsl
in
cmp
jecxz
or
cmp
leave
out
lcall
xor
mov
push
and
cmp
insl
xchg
andl
cmpsb
dec
loope
nop
lret
fbstp
in
cwtl
stc
lea
lock
and
pop
aas
daa
add
cmp
sbb
push
in
pusha
pop
pushf
lret
shrb
pop
push
and
testl
xor
ds
cmpsb
dec
in
jecxz
push
sbb
test
or
ss
push
cmp
xchg
inc
cmp
xchg
inc
andl
jno
cmp
icebp
mov
nop
js
pop
das
xchg
cmp
leave
int
jp
cmp
ja
lds
in
cmpb
ds
ficompl
xor
cmp
std
aas
mov
mov
imul
cmpsb
pop
cmp
fisubrs
or
ljmp
sub
xor
idivb
movsl
xchg
adc
adc
sub
shrb
cmc
mov
cld
sbb
xor
cmpl
jl
sarl
roll
fistpll
push
leave
mov
lods
ret
lea
jle
loope
inc
mov
cmp
movsb
dec
mov
mov
outsb
repnz
insl
clc
into
push
jecxz
or
lds
mov
sbb
movsb
mov
push
adc
mov
imul
pop
push
cld
jo
dec
imull
sub
cmp
xlat
push
scas
or
push
adc
sub
fnstsw
int3
add
out
test
push
in
xor
or
pop
js
xor
lret
fistpll
pop
inc
mov
mov
negb
cmp
xchg
adc
dec
cmp
and
addr16
mov
nop
or
mov
add
jne
shrl
dec
adc
fucomi
cmp
ss
mov
sub
pop
or
sbb
ss
cmp
xchg
xchg
pushf
out
sbb
cmp
lock
add
jnp
jo
sub
push
adc
push
roll
mov
call
mov
pop
ljmp
dec
mov
popf
add
and
std
sbb
cmp
and
loopne
int
lds
pop
jmp
enter
xchg
add
nop
mov
cmpl
mov
lds
lods
sbbb
mov
cs
add
mov
xor
repnz
fldenv
mov
sbb
outsl
add
pop
loop
inc
mov
pop
cmp
adc
movsl
cmp
cwtl
jmp
push
pop
leave
mov
push
shl
in
pop
std
adc
and
xor
lods
dec
push
pop
cmp
loopne
xor
inc
sub
xchg
mov
jo
pop
mov
mov
cmc
outsb
insb
jbe
sbb
ja
cmp
cmp
out
xor
sub
sub
jmp
add
into
cmp
mov
dec
mov
pushf
fwait
and
aaa
mov
mov
cmp
cmpsb
mov
sub
addr16
in
pop
clc
sbb
push
cmp
outsl
fwait
pusha
cmp
pop
mov
cmp
cs
push
push
in
cmp
int
shlb
mov
pop
cmp
insb
pop
sub
pushf
and
test
sbb
lret
jl
cli
int3
pop
scas
leave
add
push
and
cmp
add
cmpsl
adc
cmpl
js
push
jno
pop
cmp
ljmp
pop
in
test
mov
jmp
lock
cmp
push
test
cmp
lods
lret
xor
sbb
fadds
pop
add
xchg
pop
sbb
pop
sarl
adc
mov
cmp
stc
rep
popa
loop
cmpb
lods
jae
iret
push
cmp
shr
mov
sbb
cmp
jns
jge
cmp
jp
jbe
daa
inc
jae
sub
movsl
das
imul
mov
lods
test
push
push
jns
loop
int
adc
imul
outsb
pop
imulb
xchg
ficoml
test
xor
or
mov
mov
and
jo
sub
xor
xorb
cmovs
fucomip
sub
stos
jmp
mov
dec
test
pop
jmp
jmp
push
in
or
pop
adc
pop
and
std
sub
das
push
subb
jbe
fisttpl
in
cwtl
aas
loope
mov
mov
sahf
sub
push
jo
mov
leave
lea
test
addr16
frstor
push
pop
das
adc
jne
pop
movsb
fisubl
andb
jb
jge
push
shll
mov
ja
push
adc
ret
scas
and
add
test
dec
mov
mov
vhsubpd
mov
in
sub
fcmovnbe
dec
xchg
sub
jo
jg
sarl
mov
dec
mov
pop
call
loop
sub
movsl
add
jmp
cmp
and
inc
pop
sub
dec
jnp,pn
and
mov
subb
xchg
jmp
cmp
leave
int3
adc
jbe
mov
insl
push
imul
sbb
ret
int
inc
out
xor
out
adc
and
in
ret
insl
ficoml
lcall
adc
in
leave
sub
cmp
push
mov
inc
pop
xor
cwtl
cmp
aaa
out
pop
jbe
into
in
mov
mov
sub
lcall
jne
subl
lcall
and
aaa
mov
mov
adc
jbe
in
push
cmp
sbb
scas
jecxz
adc
mov
mov
fisubrs
aad
popa
xor
mov
insb
jl
or
jbe
gs
lret
insb
lods
in
test
aas
fcoms
fisttps
ss
test
xchg
aas
mov
aam
scas
push
mov
les
mov
out
daa
insb
movsb
pop
adcb
xchg
dec
out
jmp
cs
es
xchg
push
sbb
hlt
imul
jecxz
sub
dec
aaa
je
add
adc
xchg
xor
fstps
out
jne
fwait
add
loope
rep
cmp
cld
adc
jb
pop
mov
xchg
ret
push
lret
dec
xchg
mov
jp
enter
inc
pop
lret
int3
and
mov
sub
insl
sub
push
dec
pop
adc
repnz
mov
shll
jmp
jnp
hlt
cmpl
xor
add
add
adc
fsts
lret
dec
sahf
aad
stos
jne
fldl
ss
fldenv
mov
shl
popa
aas
mov
push
cmp
andl
mov
inc
cmp
roll
in
sbbb
xor
mov
rorl
add
xor
ret
out
mov
xchg
addr16
xchg
mov
push
adc
sbb
cmp
in
cmc
xor
mov
inc
xchg
shl
xor
ja
mov
mov
jp
cwtl
push
cmp
inc
or
subl
das
adc
in
es
or
lret
aas
jge
mov
sub
pop
mov
std
test
fstpt
lret
sar
cli
sti
subl
insb
mov
inc
cli
mov
xlat
push
mov
nop
inc
scas
cmp
scas
lods
and
mov
mov
or
mov
lret
test
xchg
cmpsb
outsb
inc
jmp
mov
movsb
push
lods
or
cmp
pushf
inc
ds
mov
repnz
cld
adc
jmp
and
fcmovnu
int3
aas
mov
pop
lds
fstl
jbe
pop
sbb
and
pusha
cmp
sub
jo
test
jmp
adc
lahf
xor
sub
xchg
lock
jmp
es
add
stos
dec
sub
xorl
push
hlt
jle
push
clc
fists
sbb
ss
mov
btc
cmc
add
xor
dec
mov
xchg
push
je
push
into
out
aad
adc
test
xor
xchg
rol
sub
mov
in
ja
cmpsb
aas
pop
xchg
xor
or
inc
sbb
jp
mov
add
jns
push
mov
pop
push
outsb
std
out
jo
and
or
xchg
xlat
and
xchg
jbe
push
call
call
cmp
xor
mov
push
out
mov
mov
dec
dec
mov
andl
sahf
mov
int3
jle
aad
stc
dec
mov
fsubl
xchg
test
into
lods
mov
adc
in
int3
jno
mov
jle
setae
dec
pop
pop
jnp
pop
mov
mov
in
mov
xchg
push
push
mov
in
loopne
cmp
pop
add
dec
push
stc
shll
dec
mov
mov
xor
aam
push
mov
mov
mov
mov
or
ficomps
ja
and
fs
adc
cmp
les
sub
ja
fisttps
pop
mov
cmp
adc
outsb
sub
jg
pop
andb
xlat
sbb
mov
mov
add
and
test
insl
jbe
orb
lret
enter
je
dec
xor
jmp
outsl
sub
pushf
test
hlt
outsb
cmp
xchg
movsb
cmp
push
add
adcb
out
movsb
mov
mov
mov
fisttps
mov
and
sbb
sub
adc
add
insb
sub
lea
adc
out
or
mov
inc
ret
cmpsb
clc
cmp
mov
dec
adc
movsl
mov
xchg
cmpsl
dec
xlat
and
lods
outsb
jne
xor
in
data16
pop
mov
enter
in
xor
xor
repz
inc
aas
das
in
out
leave
test
das
xor
jno
jl
enter
cli
mov
adc
cmc
jp
lea
ja
xor
xor
mov
sub
xchg
outsb
jmp
out
lods
mov
addr16
aas
mov
outsb
sbb
push
seta
adc
jecxz
jne
data16
cmpb
add
imul
je
jno
icebp
ljmp
and
and
cmpl
jmp
loopne
push
adc
inc
and
mov
out
add
adc
adc
mov
fdivrp
jp
outsb
inc
xchg
shlb
ret
popf
sbb
mov
inc
xorl
mov
xor
inc
fisttpll
mov
call
iret
add
popf
pop
rclb
push
cmc
mov
inc
rcll
adc
movsl
pop
push
daa
pop
xor
push
dec
fcom
sub
add
movsl
leave
insl
adc
adc
jae
call
mov
lods
jle
testb
insb
add
in
push
mov
sub
cmp
sbb
jl
icebp
aad
in
mov
cmpsl
loop
cmpsl
test
ret
sub
mov
enter
and
dec
pop
or
sub
dec
sti
sub
or
repz
jbe
and
cmpsb
stos
mov
mov
scas
lock
aas
sbb
imul
xor
mov
jge
mov
mov
es
jnp
in
or
mov
inc
leave
adc
ds
stc
lock
insb
sub
xor
push
lods
jge
xor
push
lret
and
aam
shrl
adc
xor
cli
sti
ljmp
stc
push
insl
push
cmpsl
mov
mov
sub
jmp
inc
add
push
adc
pop
mov
push
pushf
subl
jae
addb
xchg
jp
daa
push
add
xchg
daa
pop
inc
les
aad
les
cmp
lock
push
sub
sbb
pop
xor
popa
mov
mov
outsb
inc
adc
cmp
inc
xor
in
ja
in
icebp
xchg
xor
shlb
cmp
into
jge
outsb
xchg
xor
pop
add
pop
movb
aaa
ljmp
les
inc
sub
cltd
and
pop
pop
xor
lret
xchg
fcoml
xor
add
pop
inc
sub
lods
and
in
push
and
push
sub
test
dec
out
xchg
adc
sub
mov
mov
add
mov
lcall
loopne
sbbb
dec
fwait
sbb
adc
add
add
add
inc
rorl
and
cmp
roll
arpl
test
adc
into
xchg
mov
lods
adc
das
mov
sub
and
cmp
pop
jmp
jnp
or
scas
dec
rdpmc
cmp
test
cmp
mov
rclb
shrb
lods
in
ds
aad
lds
sbb
std
xchg
out
nop
mov
pop
lods
and
call
cmc
pushf
dec
iret
aam
xchg
arpl
and
cmpsl
popa
std
inc
rcrb
inc
ss
sbb
add
mov
fs
dec
mov
mov
push
add
jmp
dec
jg
sub
aad
mov
pop
xor
pop
dec
cmpsl
cmp
mov
andb
pop
mov
outsb
adc
jbe
sarb
jbe
sub
xchg
inc
idivl
dec
lret
adc
jmp
std
jnp
pop
jae
xchg
mov
sti
add
jne
sbb
jbe
in
std
mov
mov
ja
mov
dec
sbb
xchg
cmpsl
movsb
loope
or
iret
and
sbb
mov
push
and
imul
dec
je
jo
push
push
fdivs
out
sub
mov
xchg
mov
jge
incl
xor
ret
pop
xor
push
fdivr
cli
mov
ret
in
pushf
add
int
stos
adc
or
add
xchg
cld
test
add
xlat
dec
push
arpl
mov
je
inc
adc
arpl
data16
mov
and
jo
dec
mov
daa
add
es
inc
adc
rcr
adc
pop
sbb
xor
fstpl
mov
jmp
fs
insb
test
in
pop
stos
shlb
sbb
shlb
testb
movsl
cltd
mov
mov
xorl
mov
mov
lods
dec
aaa
scas
out
orl
popa
lods
xchg
mov
ret
mov
sub
rorl
add
mov
leave
mov
or
push
lret
jl
lea
mov
adc
les
mov
push
xchg
nop
xchg
fisubl
movsb
popf
adc
mov
lock
divl
idivl
imul
pushl
cmc
adc
das
xchg
rclb
xor
adc
nop
daa
dec
out
mov
cld
das
and
aas
stos
out
rcr
push
pop
inc
test
movsl
mov
stos
sbbb
sbb
mov
xchg
int3
xchg
pop
mov
test
adc
mov
push
cmp
mov
push
pop
add
mov
fdivr
push
ret
daa
mov
push
xor
je
in
push
xor
leave
repnz
jmp
aam
scas
icebp
lds
test
out
push
mov
xchg
adc
xor
add
sbb
sub
popf
fcoml
inc
xchg
loop
stc
arpl
mov
ret
hlt
fldenv
mov
sbb
cmp
jmp
fsubl
mov
adc
test
push
jb,pt
sub
rclb
fs
lods
mov
sub
adc
into
sub
xor
cmp
mov
xor
outsb
add
fstpl
enter
xchg
sub
jp
xor
mov
inc
pop
jle
adcl
inc
xor
mov
mov
adc
cmpl
mov
jmp
xor
dec
jecxz
xchg
cmp
aam
xchg
cmc
push
pop
jmp
cmp
das
adc
adc
or
rcll
rcr
int
in
mov
cmp
xchg
or
xor
shrb
adc
inc
das
jne
icebp
mov
inc
pusha
lock
pop
and
lret
test
xchg
and
sbb
ss
imul
test
push
lods
inc
lcall
xor
push
sub
mov
pushf
and
push
cmc
add
jo
ret
std
lods
cmp
dec
lret
cltd
mov
clc
out
adc
lock
jmp
pop
lret
ja
enter
andb
pop
dec
push
insb
cmpsb
sub
aaa
or
outsb
test
jnp
dec
or
jmp
les
and
adc
call
insb
rcr
ja
ljmp
jne
enter
aam
adc
mov
inc
pop
or
jb
mov
mov
xchg
inc
inc
movzwl
or
mov
push
mov
std
xor
mov
inc
and
pusha
fucomi
pushl
dec
test
fiaddl
adc
fidivs
xchg
je
and
adc
inc
jbe
ret
dec
mov
xlat
ret
jo
nop
push
loop
fisttpll
pop
add
andl
rol
iret
insl
xor
cmp
loop
mov
cmp
jb
insb
add
adc
int
imul
sub
cld
xor
fisubrs
push
cmpsb
adc
push
and
dec
ja
and
fs
daa
lret
iret
leave
push
adc
inc
mov
add
pop
jbe
mov
rep
dec
pop
xor
xor
stc
adc
iret
jmp
and
cmp
inc
shlb
mov
sub
outsl
jnp
into
or
mov
mov
sahf
ljmp
or
es
xchg
sub
test
adc
push
mov
je
xchg
mov
rolb
xchg
cmp
adc
mov
notl
test
inc
or
pop
mov
xchg
push
fs
nop
int
subl
mov
out
jo
xor
aaa
adc
xor
cmp
xlat
cmpsl
xor
iret
inc
arpl
out
or
loope
hlt
adc
stos
int3
mov
mov
ja
ds
sbb
dec
insl
cmc
xor
sti
pusha
out
dec
xor
mov
push
pop
out
test
out
dec
movsl
shrw
mov
cld
or
ja
loop
das
jl
add
iret
mov
ffreep
xor
adc
cvtdq2ps
aad
stos
inc
ret
add
mov
fwait
jo
stos
sub
daa
push
scas
ljmp
cmp
and
mov
fcompl
xorl
insl
inc
xor
daa
mov
inc
adc
adc
cmp
mov
cmpsb
xor
adc
sub
rcr
js
lods
cmp
fcmovu
ja
sub
lods
mov
or
cli
xchg
js
data16
out
mov
cltd
inc
mov
lds
adc
mov
mov
dec
mov
jmp
sbb
cmpsb
cmp
repz
mov
xlat
xor
jne
mov
and
xor
in
subb
mov
xchg
jmp
xchg
mov
aas
add
enter
sub
mov
aam
call
ret
xor
adc
cmp
jae
outsl
js
sub
movsb
sbb
sbb
pop
mov
jmp
leave
lods
push
mov
negb
cmpsb
pop
adc
mov
jbe
iret
call
jbe
push
ret
sbb
subl
sbbl
jmp
xor
mov
lret
mov
or
sub
les
mov
pop
fs
daa
jmp
fcmovnu
mov
xor
pop
stc
cmpb
popf
inc
mov
mov
ret
cmp
or
or
adc
stos
push
mov
and
into
jno
adc
insl
leave
push
aas
repz
push
divb
or
dec
lods
xor
nop
xchg
xchg
daa
pop
das
aaa
insl
int3
int
adc
rcrb
adc
mov
es
mov
pop
sub
and
fldenv
mov
shlb
cmp
clc
and
xchg
mov
gs
mov
insb
xchg
mov
out
pop
mov
scas
in
shll
out
aaa
repnz
adc
out
adc
test
mov
enter
rorb
mov
loop
dec
gs
adc
xor
sub
xor
cld
adc
std
xchg
mov
mov
mov
in
xchg
push
scas
sub
jge
add
sub
pop
xor
ja
fs
cmp
cmpsb
es
mov
test
scas
loope
in
pop
fisubs
cmp
cmpsl
leave
iret
insb
hlt
xchg
into
cmpsb
fsub
js,pt
scas
sbb
sahf
les
jno
movb
pop
dec
mov
inc
adc
pop
xchg
les
rcrl
mov
xor
pop
lds
or
mov
inc
outsb
push
dec
mov
and
dec
dec
fsubs
or
cmp
jg
test
push
pop
sub
mov
lret
dec
and
jmp
jge
jp
bndstx
fdivrs
jb
push
in
xor
cmp
jns
pop
cmp
call
mov
orl
outsl
pop
or
pop
sub
mov
aaa
divb
push
mov
cmp
add
das
aaa
adc
pop
mov
xor
jne
mov
xor
mov
and
adc
pop
aaa
dec
out
sbb
and
arpl
test
adc
or
inc
pop
cs
clc
adc
add
ret
mov
jge
sub
sbb
rcll
int3
adc
pop
out
cmpl
lcall
enter
dec
ret
jne
or
imul
faddl
lret
mov
fwait
and
dec
testl
mov
xlat
mov
mov
clc
cwtl
or
push
sbb
pop
add
xchg
push
lds
dec
aam
jns
sub
lcall
lret
ss
xchg
xorl
jl
inc
adc
push
sub
xor
pusha
sbb
push
xchg
xchg
mov
mov
or
inc
xchg
xor
mov
stos
push
addr16
jb
aas
xchg
mov
ss
aaa
mov
sub
jmp
mov
sbb
sbb
push
aad
xor
ret
addr16
es
push
cwtl
pop
sbb
pop
xchg
sbb
push
xchg
xor
mov
cmc
adc
idivl
fstl
imul
fistl
cli
cmp
xchg
mov
mov
jmp
gs
inc
mov
push
xor
pushf
idiv
mov
rep
js
cld
xor
in
mov
ret
fnstenv
push
or
and
int
scas
and
sti
lods
sarb
add
mov
cmp
movsl
sub
lahf
adc
mov
inc
ror
xchg
mov
push
data16
jge
xchg
add
mov
loope
ror
stos
out
ds
in
rcl
and
adc
aas
int
mov
mov
stos
test
jnp
dec
jbe
mov
fxch
jo
jp
scas
pop
daa
jo
add
into
stos
js
ds
cmp
pusha
push
mov
popa
cmp
sub
je
js
aam
inc
xchg
mov
adc
shrb
mov
sub
cli
dec
adc
lret
inc
stos
jns
arpl
cmpl
adc
mov
js
cli
sarb
inc
in
xor
loopne
pop
xor
xor
fisttpl
inc
and
dec
aas
or
and
loope
mov
jne
sbb
mov
cmp
sbb
inc
adc
adc
dec
out
jmp
loopne
cld
mov
out
loopne
mov
push
mov
add
pop
or
jbe
jmp
mov
stc
in
test
push
shll
loopne
sub
mov
cmp
pop
push
ret
pusha
or
xor
xchg
jbe
pop
enter
es
inc
xchg
pop
jge
push
imul
lods
sbb
ret
lret
icebp
in
mov
aad
and
mov
mov
in
ret
jmp
dec
loopne
clc
push
adc
xor
add
jp
jmp
xor
aad
mov
pop
mov
insb
cmc
jbe
jbe
add
data16
pop
xchg
test
pop
sbb
out
mov
movl
adc
data16
and
sbb
dec
adc
mov
cmp
mov
mov
inc
sti
bound
adc
adc
int
insb
popa
xchg
imulb
pop
in
lock
push
sub
pop
add
mov
or
push
enter
jle
xchg
cmpsl
cmp
mov
mov
cmpsb
and
mov
adc
adc
jl
arpl
jg
repnz
insb
enter
data16
sub
test
mov
je
loop,pt
and
in
leave
test
inc
or
incb
and
cmp
mov
adc
push
lcall
out
mov
sub
pop
cld
push
dec
adcb
and
xor
ret
fwait
scas
add
fsubl
xor
inc
jmp
subb
inc
cmp
aad
mov
jnp
mov
outsb
push
negb
add
jmp
xchg
pushf
mov
shl
sub
gs
xor
in
fdivp
xchg
fimuls
push
cs
cmp
arpl
mov
in
xlat
movsb
cs
int3
aam
inc
lea
cmp
adc
inc
imul
cmp
add
push
out
xor
pop
lods
subb
out
xor
outsb
movsb
cmc
lods
adc
cmpsl
xchg
pop
popf
pushf
adcl
test
xorl
out
movb
daa
cmp
shrb
shlb
mov
jns
test
sahf
xor
push
sub
in
mov
jg
call
mov
in
adc
mov
mov
mov
sub
mov
cmp
nopl
clc
xchg
in
lret
xchg
and
loopne
cmp
adc
push
jnp
popa
cli
cmp
ss
lods
dec
mov
movsl
pusha
cmp
xor
jl
sub
add
out
mov
icebp
insb
out
push
fmull
jns
dec
daa
sub
jbe
adc
lret
mov
xor
sub
jnp
cld
or
aas
add
in
mov
or
push
cmp
pop
and
dec
das
shl
sub
arpl
or
xchg
and
mov
mov
xor
in
or
mov
push
xor
in
pop
fistpll
dec
movsb
cmp
movsl
mov
pop
adc
cmp
gs
mov
lods
cmpb
add
push
jg
popa
jle
outsl
andl
add
sbb
insl
lock
cmp
ljmp
stc
mov
in
insb
pop
sti
rolb
lcall
rorb
sub
mov
insb
add
into
xor
fnstsw
les
addr16
pop
mov
mov
adc
in
ret
das
jae
addr16
add
dec
cmp
ds
in
xchg
pop
push
jb
mov
nop
mov
jmp
loop
inc
cmp
aad
and
fnstsw
imul
xor
insl
mov
dec
inc
std
test
loope
jl
jp
sbb
xlat
out
into
aaa
sarl
cmp
in
push
subb
stos
lcall
xor
mov
lods
xchg
int3
daa
out
std
imulb
dec
cmp
clc
stos
mov
and
stos
and
or
jmp
push
jp
iret
cmp
pop
sub
cmpb
add
pop
clc
push
repz
cmp
xchg
popf
jle
cld
call
sbb
push
repz
sbb
cmp
or
adc
andl
sbb
fisubl
stos
scas
push
jg
and
popa
test
in
xchg
femms
cmp
repnz
lds
test
cltd
cwtl
in
sub
cmpsb
push
add
and
loopne
xor
scas
add
or
in
push
mov
loop
test
mov
lea
test
lods
popf
pop
push
mov
cli
movsb
add
popa
stos
cs
jge
leave
mov
xor
stc
mov
pushf
push
test
cmpsb
jb
cmp
inc
mov
arpl
xchg
ja
js
incl
dec
adc
pop
or
in
insl
fcoms
imul
and
jno
sbb
dec
sub
sti
insb
gs
cmp
lcall
xor
xlat
xor
xor
cmp
cli
out
pop
test
imul
push
cmp
push
popa
div
pop
cmp
ficoml
xor
jno
xchg
or
movsl
dec
movsb
mov
jge
inc
xchg
in
mov
xlat
push
data16
fisubrs
xor
and
in
imul
dec
fcmovne
sarl
popa
xchg
dec
sbb
pop
xor
insb
movsb
out
lods
seta
or
test
dec
adc
cmp
add
sbb
push
cmp
ljmp
cmp
out
sbb
and
imul
push
or
add
imul
jno
insl
in
jnp
mov
push
ret
or
or
xor
mov
mov
aam
xchg
inc
cmp
icebp
and
jg
push
and
push
adc
xorl
das
adc
cmp
sub
push
jg
cmp
mov
adc
cmp
sbb
dec
jb
shrl
nop
push
sbb
cmp
push
ror
fidivs
push
sub
jmp
nop
xchg
cmp
sbb
lret
orb
lds
mov
lods
xchg
pushf
in
aad
add
lret
cmc
lret
cmp
outsl
adc
jecxz
scas
in
pusha
sbb
mov
icebp
idiv
xchg
push
push
pop
lcall
xor
inc
jmp
dec
sub
jge
push
out
and
jae
cmp
cld
outsb
cmp
daa
and
les
pop
cmp
and
pop
xor
lods
out
outsl
sarb
add
pop
push
in
push
inc
lds
movsl
mov
ret
adc
mov
mov
xor
push
pusha
lods
adc
inc
inc
cmp
lock
dec
aad
ret
add
dec
cs
push
xor
or
sbbb
push
or
adc
mov
cmp
outsl
add
lds
in
jne
jle
dec
incb
cmp
add
cs
xchg
repz
lcall
jo
int
and
xchg
sub
rclb
xchg
ficomps
sub
xlat
push
add
lcall
dec
mov
sbb
or
jb
into
pop
stc
aam
inc
mov
dec
xor
ds
xor
mov
aad
shll
lret
mov
cmpsb
cmp
xchg
mov
adc
or
push
aam
xchg
test
cmp
mov
ds
shrl
daa
cmp
mov
jne
cmp
cld
fnstcw
sbbb
cmp
or
data16
pop
es
add
icebp
maxps
mov
out
aam
cld
adc
cmp
pop
fwait
bound
fistl
mov
or
or
xchg
mov
dec
xlat
cmp
clc
lret
add
cmp
xchg
outsl
in
push
pop
and
subl
sub
and
hlt
cmp
pop
dec
jb
int
shll
js
popl
mul
hlt
test
gs
inc
orb
sub
clc
int
push
test
das
cwtl
cmp
pop
or
xchg
xor
sub
test
push
test
pop
jle
jmp
or
push
jb
jns
jge
push
push
pop
das
cmp
stos
jo
push
sub
inc
sub
sub
or
add
dec
or
sub
sub
ret
inc
daa
nop
in
inc
js
push
dec
clc
test
xor
xor
ss
sar
adc
mov
cs
cmp
mov
popa
leave
into
cmp
test
cmp
mov
add
fisubl
cltd
lret
in
lods
inc
in
or
cmp
and
pushf
push
pop
test
es
mov
pop
inc
in
cmp
movsw
cmp
repz
xchg
jno
sbb
cmp
or
push
idivl
xchg
lods
mov
cld
mov
inc
jb
add
sbb
cmp
sbb
push
cmp
out
dec
inc
and
dec
ljmp
popa
inc
push
inc
cmp
jg
lahf
sbb
xor
mov
scas
cmp
test
das
addr16
lods
seto
sahf
sbb
mov
in
stc
pop
lcall
dec
jns
imul
ret
jnp
cmp
fadd
cmp
push
test
loop
adc
add
mov
xor
sub
push
jmp
inc
das
jbe
loope
cmpl
ja
mov
and
cs
data16
mov
je
jo
add
enter
mov
and
into
mov
repz
aaa
xchg
mov
ds
clc
roll
fwait
jmp
sti
test
push
cmp
cmp
pop
test
jp
les
mov
push
dec
das
mov
adc
inc
mov
xor
mov
inc
push
stos
cmp
or
decl
cmp
push
jmp
cmp
popa
test
add
out
fldl2t
lods
mov
imul
cmp
xchg
mov
outsb
xlat
add
js
mov
lret
cmpsl
cmp
mov
cmp
dec
mov
movsb
cmp
cmp
lcall
cmp
test
mov
out
add
xor
int3
or
mov
or
cs
mov
lds
cmp
dec
mov
cmp
sub
xchg
adc
cmp
stc
mov
cmp
or
or
cmp
sbb
jecxz
push
jnp
add
add
pop
sub
mov
std
cmp
mov
xchg
cmp
mov
jp
daa
mov
pop
inc
sub
mov
mov
shrb
mov
adc
mov
hlt
enter
inc
push
ljmp
imul
inc
push
subb
loopne
mov
pop
add
sbb
add
and
lret
jg,pt
lock
stos
insl
js
xor
xor
xchg
xor
jp
nop
mov
adcl
ficoms
lcall
int
jne
pop
shll
adc
jmp
jnp
scas
into
inc
or
ds
fidivl
pop
test
sub
and
xor
push
je
jl
mov
mov
adc
scas
xor
ds
test
jl
mov
test
scas
popf
into
es
mov
jge
inc
sahf
lret
lahf
xchg
mov
and
inc
push
push
nop
sub
add
cli
divl
cmp
out
add
xor
movsb
push
pop
idivb
repz
out
and
lods
mov
mov
pop
xchg
push
out
popa
push
add
adc
xor
jne
mov
aas
imul
jno
jg
mov
mov
insb
mov
iret
fs
ds
inc
push
and
mov
lods
pop
repz
mov
pop
aam
or
push
xchg
lds
mov
lcall
mov
push
jecxz
ja
es
mov
lret
popf
cmpsl
mov
dec
mov
mov
rcll
aad
lret
mov
ret
pop
js
inc
ljmp
mov
insl
xlat
divb
aaa
adc
and
das
adc
rclb
in
jno
stos
mov
in
mov
dec
cmp
aam
adc
xchg
out
jl
push
ss
inc
pop
cmp
repz
lret
cmp
xlat
mov
test
mov
clc
cmp
pop
mov
add
jmp
jg
add
int3
lods
mov
fnstcw
pusha
xor
lods
add
les
push
pop
negb
push
jp
cmp
inc
hlt
insl
fs
call
pop
cmp
mov
jmp
push
jo
and
cmp
in
repz
in
cmp
fs
mov
mov
imul
or
inc
dec
jl
int
mov
pop
xor
pop
fdiv
jmp
lods
adc
insl
add
xchg
cmp
test
addl
sub
lds
push
ret
cmp
cmp
xorb
push
mov
jnp
pop
jmp
dec
cmp
cmp
je
cmp
push
pusha
cs
and
std
insl
mov
jns
fisttpl
outsl
pop
add
cmp
test
pop
jecxz
xchg
loop
aad
or
xchg
jne
add
addr16
sbb
pop
mov
jmp
jp
cmpl
mov
out
fistpll
sbb
push
loope
xor
cmp
xchg
sub
mov
inc
dec
outsl
neg
in
jb
push
je
dec
inc
daa
sub
call
addl
mov
cltd
pushf
idivl
inc
movsb
push
mov
mov
cmp
sbb
cmp
inc
out
lahf
cmp
lods
cmp
cs
sub
cld
dec
lcall
sub
push
aas
je
add
dec
leave
xor
inc
sub
sub
xlat
pusha
gs
test
jl
insb
mov
push
rcrl
adc
xor
lds
cltd
xchg
xor
sahf
cmp
std
jp
lahf
lods
inc
cmp
lock
cmp
jne
xchg
clc
mov
ds
rclb
clc
jns
dec
push
repz
jo
sbb
or
cmp
aaa
cmpsb
cs
jg
cmp
cwtl
sbb
scas
stos
loopne
jge
into
test
and
divl
pop
cmpl
jnp
pop
xor
add
cmp
mov
and
dec
push
xchg
jp
adc
jmp
lods
push
mov
loope
sbb
cmp
dec
int
cmp
fdivl
inc
xor
aas
shlb
dec
add
xor
or
int3
gs
xchg
cmp
cmc
mov
xchg
jnp
xor
pusha
imul
sub
ret
fsubrp
inc
lea
les
cmpsb
xor
dec
mov
stc
mov
push
int3
andl
testb
pusha
mov
lret
cmpsb
cmp
and
jl
mov
cmpsl
cmp
cmc
test
cmp
add
pushf
and
test
mov
push
movsb
cmp
lea
xchg
out
mov
dec
sbb
ficoms
add
push
mov
sbb
mov
imul
lods
into
dec
lea
sub
mov
or
jecxz
test
xchg
loope
cli
mov
mov
out
fdivs
insl
cmp
lock
pop
cmp
push
test
ret
mov
pop
cmpsb
ja
repnz
jae
popf
sahf
push
cmp
outsb
sub
pop
dec
test
pop
fstl
insb
xchg
sub
push
int3
ljmp
cmp
jb
adc
lods
movl
inc
std
and
fistpll
sbb
cmp
jecxz
lea
movsl
sub
lock
adc
cld
stos
sub
dec
mov
push
in
mov
sahf
mov
jmp
adc
pushf
or
dec
test
add
std
cwtl
mov
fmull
mov
rorl
cmp
jecxz
or
scas
cmp
daa
inc
cmp
xchg
rcll
ret
aad
mov
imul
test
push
jbe
add
sub
cmp
icebp
lcall
pop
xor
sub
dec
pop
jo
push
push
sbb
inc
daa
sti
or
adc
cmp
and
xchg
push
sbb
out
inc
mov
fisubl
push
cmp
mov
in
xor
ds
mov
jae
inc
push
mov
or
mov
lods
cmpsl
push
dec
std
pop
mov
mov
adc
loopne
mov
lods
xchg
or
and
or
cmpsl
add
mov
test
sub
dec
pop
mov
call
cmpsb
cmp
mov
inc
and
mov
xor
cmp
shrl
icebp
cmp
mov
sarl
sbbb
and
sbb
or
dec
cmp
pop
jge
fildll
das
adc
rcl
pop
cmp
sub
or
lock
or
jae
and
idivb
adc
push
jo
cmp
repnz
int3
negb
rcrb
loop
cmp
push
lods
sub
mov
popf
cmp
je
int
mov
cmp
imul
movsb
dec
cmp
adc
push
cmp
fdivrl
clc
mov
dec
shl
push
xor
dec
cmp
cmpsl
jne
cmp
cmp
sbb
fnstcw
lods
popf
cltd
jo
cmpb
jg
in
sub
and
mov
lods
mov
xor
insw
xor
jne
xchg
cmp
add
dec
cmp
xchg
sahf
mov
push
xlat
cmp
cmp
test
push
sub
push
aam
lods
xchg
stc
or
sub
cmc
add
fildl
sbb
dec
mov
jne
in
jecxz
push
cli
jmp
cmp
addr16
inc
stc
xchg
push
fisubs
scas
clc
jge
xchg
jno
xchg
adc
or
sbb
repz
or
stc
mov
rcrb
mov
inc
lods
sub
pop
test
dec
insl
or
cs
out
les
mov
test
sub
jmp
in
lods
aam
cmp
cmp
mov
mov
repz
lods
cmp
push
mov
mov
mov
ss
sub
int
push
scas
mov
movsb
pop
inc
mov
call
cmp
add
xchg
sbbl
pop
and
outsb
les
lcall
cmp
or
sub
sarl
sub
sbb
movsl
scas
cmp
sbbb
cmp
mov
push
cmp
aas
ds
in
nopl
jecxz
jb
dec
push
mov
das
fldt
mov
sbb
fildll
das
xor
jo
in
lods
or
je
cltd
enter
stos
cmp
mov
mov
inc
sahf
fidivl
sarl
sbb
pop
scas
inc
push
xor
sti
mov
and
test
loope
cmp
es
xchg
lods
pop
popf
xchg
aam
sbb
in
jg
push
cmp
jge
push
int
iret
cmp
jo
inc
lods
dec
sarl
insb
jno
insb
sti
std
cmpsl
cmp
add
dec
cmp
push
adc
mov
fcomip
mov
and
pop
fisttpll
cmp
mov
js
pop
mov
inc
test
test
push
cmp
cwtl
adc
xorl
sbb
pop
xchg
lods
mov
add
aaa
shll
aas
xchg
out
pop
mov
addr16
dec
push
cmp
dec
inc
cmp
sbb
pop
sub
push
adc
mov
mov
xor
mov
bound
cmp
mov
lock
pop
inc
aad
nop
lods
pop
pop
cmp
arpl
into
xchg
in
mov
pop
and
je
data16
out
loopne
js
pop
xor
or
mov
mov
cmp
sub
push
and
les
add
fistpl
sub
mov
push
dec
jecxz
mov
aam
mov
xchg
jae
sbb
in
jno
sbb
loop
fildl
lret
std
jae
xor
lahf
xchg
leave
negb
cmp
mov
mov
xor
sub
add
and
mov
inc
cmpsl
cmp
cmp
or
cmp
out
xorl
mov
pusha
loopne
cmp
mov
and
and
sub
dec
nop
xchg
mov
mov
pop
ret
cmpsb
fsubs
sbb
cmp
test
stos
leave
xor
dec
xorl
lock
popf
sub
cltd
xor
mov
sbb
test
mov
add
pop
cmpsb
mov
in
lahf
loop
mov
mov
int
ss
insb
sub
cmp
shll
jg
jmp
sti
pop
mov
dec
aaa
add
mov
mov
jmp
int3
lods
xchg
enter
lock
mov
dec
daa
xor
aas
mov
cmp
cltd
sub
int3
ss
pop
xor
xchg
addr16
mov
es
or
inc
or
pop
adc
inc
and
fidivs
inc
adc
lds
enter
std
outsb
xchg
xor
and
pop
and
mov
ss
test
ret
int
adc
mov
mov
mov
jg
mov
sub
sub
mov
jae
or
jb
aam
xchg
adc
sbbb
sbb
stos
aam
mov
aad
psrlq
daa
xlat
xchg
hlt
lcall
or
push
out
rclb
jb
leave
or
stc
enter
adc
aaa
xchg
dec
mov
leave
inc
fistl
movsl
or
cmp
pop
mov
push
xor
xchg
sbb
sub
les
jl
in
leave
test
jmp
jns
insl
pop
gs
jge
sub
idivb
mov
into
sub
ljmp
loop
adc
fucomi
scas
xor
lods
add
dec
test
jnp
fistl
repnz
dec
enter
mov
js
test
ljmp
ss
push
lahf
or
loope
lods
jle
push
cld
push
adc
sub
fdivrl
loope
mov
adc
mov
aaa
and
test
xchg
ss
hlt
lahf
test
mov
cmpsb
jo
pop
sti
cmpsl
sub
dec
adc
leave
jb
pop
lahf
loopne
rorb
cmp
in
mov
and
mov
fildll
in
aam
push
enter
cld
aas
dec
jge
inc
adc
ret
jbe
sub
dec
pop
xchg
in
xor
mov
add
mov
mov
pop
es
fcompl
imul
inc
inc
or
inc
sub
jo
xor
adc
jmp
std
mov
and
sub
jge
cmp
push
push
sbb
jbe
sub
jecxz
fdivrs
adc
jne
cmpb
xchg
sbb
mov
or
scas
mov
mov
jo
lcall
ret
cmp
jl
lods
int3
sub
adc
notl
je
adc
mov
jp
push
push
xor
inc
jge
or
add
sub
inc
divb
xchg
test
dec
loope
mov
test
dec
cwtl
or
fcmovnbe
adc
sar
adcl
adc
cmp
daa
mov
dec
sub
sbb
mov
sti
mov
inc
xchg
das
cmp
mov
cmpsb
jo
icebp
dec
cmp
into
push
insl
jnp
lock
xchg
negl
out
push
rclb
call
mov
mov
das
andl
arpl
pop
test
mov
mov
mov
pusha
pop
mov
repz
mov
push
mov
mov
xchg
sub
js
push
cli
and
scas
pop
mov
jl
addr16
mov
push
lahf
xchg
sbb
push
mov
in
and
jbe
sub
outsl
and
adc
decb
xchg
fildll
addr16
lods
inc
in
movsb
adc
inc
out
sbb
je
mov
adc
je
aas
cmp
cmp
mov
mov
jne
and
addb
sti
push
sub
jmp
lock
loopne
add
push
adc
ljmp
das
cwtl
lds
mov
xchg
adc
sub
xchg
xor
pop
adc
ds
mov
addl
and
xchg
add
push
dec
and
out
push
test
adc
out
std
add
test
mov
fdiv
fistl
push
into
sub
mov
mov
mov
fldcw
mov
xchg
insb
into
add
mov
add
sarb
dec
push
pusha
test
push
xor
fwait
push
mov
xchg
mov
mov
popf
in
dec
enter
js
int3
aad
add
clc
sub
fsubs
out
adc
mov
mov
ds
popa
dec
test
sub
mull
iret
or
aaa
popa
and
adc
xlat
mov
outsb
test
push
fldcw
pop
dec
sbb
movsl
xchg
jp
mov
mov
xor
sti
jnp
fldt
mov
xor
sub
test
sub
mov
lea
jle
mov
push
xor
sub
ret
cmp
and
popa
and
scas
cmpb
ret
scas
adc
push
jecxz
pop
js
loope
fs
pushl
ljmp
lods
rcll
ss
add
xchg
add
fdivrs
and
jg
sub
mov
mov
sub
jle
sbb
inc
xchg
sbb
mov
icebp
cwtl
mov
xor
jmp
movsb
adc
outsl
jno
je
cmp
xchg
lret
aas
sub
idivl
sub
mov
cli
pop
ja
hlt
push
lcall
push
test
icebp
mov
shl
and
lret
scas
dec
sub
mov
int3
xor
ds
sub
in
add
popf
in
loopne
mov
daa
mov
lahf
ret
pop
data16
mov
sub
insb
jg
jge
leave
scas
scas
push
std
xor
fwait
stos
lods
leave
repz
icebp
add
xchg
jecxz
sahf
sub
sub
jle
jl
or
lods
jle
xor
roll
xor
inc
mov
hlt
push
adc
pop
add
inc
cmp
mov
hlt
push
clc
leave
mov
fildl
or
fs
jmp
cmp
or
arpl
cmp
cli
mov
adc
jge
cmp
outsl
inc
mov
cmpsl
inc
loope
pop
add
inc
adc
scas
sub
mov
mov
adc
xchg
dec
inc
cld
jmp
imul
sahf
mov
adc
mov
ret
or
adc
leave
icebp
and
push
ficoms
or
sub
sub
mov
adc
xchg
pop
ljmp
pop
out
inc
outsb
jp
loopw
insb
ret
in
adc
pop
clc
jl
sbb
sub
mov
sbb
int
stos
je
subl
xor
push
sub
cld
xor
ds
inc
xor
add
sarb
call
adc
subl
das
in
add
and
mov
cs
popf
dec
lret
cmp
cmp
loop
jb
sarl
sbb
dec
push
insb
mov
xchg
scas
jnp
dec
lods
cli
xor
js
dec
or
cmp
loopne
cmp
or
xchg
push
jmp
leave
dec
mov
insb
das
mov
and
in
or
test
cmc
adc
aam
insl
ds
adc
inc
test
aaa
dec
inc
xchg
ret
test
and
cmp
mov
adc
es
sub
loopne
inc
mov
out
fs
scas
inc
push
ja
lods
adc
xchg
out
loopne
out
outsb
and
sti
lock
jmp
sub
or
aaa
dec
cmp
xor
pop
fstl
std
push
cmc
xor
test
mov
out
jns
sarl
xchg
jb
std
sbb
aad
cmp
mov
adc
or
sbb
dec
add
lods
or
out
lea
push
mov
or
jbe
xchg
inc
call
xchg
push
adc
mov
or
bound
gs
insl
lcall
repnz
mov
fiaddl
cmp
and
mov
repz
pop
xchg
mov
cmp
shr
adc
mov
test
clc
jnp
dec
lcall
xor
mov
test
les
js
push
stc
add
or
stos
adc
mov
dec
les
or
clc
add
cmp
iret
adc
popa
xchg
negl
scas
in
and
inc
fstps
dec
cld
dec
lcall
loopne
out
pop
mov
icebp
mov
mov
inc
xor
sti
test
or
in
sub
push
addl
jle
cmp
pop
pop
xor
mov
repnz
add
cmp
jge
or
cs
sub
dec
adc
lock
movsl
stc
dec
sub
mov
inc
int3
sub
dec
imull
pop
mov
or
fistpll
stos
jp
dec
sub
stc
lret
jns
cltd
jge
xor
push
or
xor
jl
cmp
dec
test
in
or
jns
push
lds
jl
imull
cmp
ret
sbb
mov
lret
ljmp
pop
jo
add
ficoml
xor
pop
or
dec
add
jbe
cltd
daa
loopne
mov
setl
scas
imul
xor
or
dec
inc
cmp
jns
mov
or
in
add
add
mov
xor
add
xor
dec
in
das
pop
je
sub
sub
add
nop
push
cmp
xor
mov
scas
leave
mov
jp
in
out
ret
out
inc
and
stos
push
cmp
andl
cmp
lcall
cmp
xchg
js
and
stos
sarl
ljmp
push
cmp
mov
jmp
cmp
xlat
popf
movsl
cwtl
dec
je
cmp
incl
movsb
jg
or
mov
int3
int
push
dec
cmp
cwtl
mov
add
popa
add
or
fstpt
mov
jne
dec
fmul
frstor
in
loopne
test
lock
jns
shll
xchg
loope
mov
sahf
lcall
out
mov
cmp
aaa
scas
push
add
adc
or
cs
in
cmpsb
xor
inc
in
xor
push
push
dec
int
mov
mov
stos
fisubs
cmp
sub
jp
dec
sbb
or
shrl
cmp
mov
mov
sub
cmp
les
inc
daa
inc
insl
cmp
pusha
jp
andb
cmp
and
mov
insb
sti
and
xchg
ret
dec
sbb
push
and
je
mov
nop
xchg
inc
add
mov
cmp
cmp
jno
mov
cmp
out
cld
xor
fldt
sub
subb
push
out
mov
sub
inc
and
jl
xor
sbb
stos
and
jno
push
push
cmp
xchg
fdivrl
test
cld
mov
test
mov
inc
sbb
or
ficomps
or
cmp
and
push
aaa
and
sarb
xchg
xchg
clc
dec
gs
xor
fs
jp
adc
dec
pusha
inc
sbb
int
clc
jae
das
bound
out
das
dec
xlat
insl
lods
mov
sti
xor
dec
je
cmp
xor
lods
and
subb
ficomps
into
loop
adc
or
lods
scas
inc
add
sub
popa
jle
loopne
stos
inc
decb
cmp
add
sarl
push
leave
xor
adc
or
cmp
mov
dec
cwtl
and
addb
jg
push
pop
cmpsb
leave
mov
cmp
cmp
pop
inc
or
lods
mov
mov
lods
jo
xor
ss
lcall
xor
inc
scas
cli
mov
push
adc
enter
sbb
adc
test
movsb
cmp
lock
mov
push
dec
ret
xchg
lods
das
mov
daa
add
popa
lock
pop
adc
mov
int3
out
mov
icebp
xor
in
std
rorl
push
sub
sub
and
dec
push
out
shl
or
aad
jae
pop
lods
in
inc
and
dec
inc
cli
je
sarb
lret
push
push
push
dec
push
adc
xor
jge
sarb
mov
sub
push
xchg
jbe
insb
mov
cmp
les
das
xor
loope
cmp
xor
les
pop
scas
rcl
sub
jo
ss
xor
loope
mov
dec
addr16
aad
dec
mov
sti
test
mov
dec
jp
into
lods
mov
fdivl
ret
cwtl
xchg
cmp
das
mov
outsb
sbb
mov
dec
cmp
test
mov
iret
gs
xchg
fimuls
dec
enter
sub
dec
out
sbb
mov
cli
push
inc
pusha
aas
je
cmp
and
es
dec
push
sarb
xor
dec
popf
cmpl
and
mov
adc
jp
jge
adc
daa
iret
das
mov
mov
cmp
shrb
addl
out
mov
nop
scas
fldt
xor
fists
cmp
xchg
iret
and
xchg
jne
je
xchg
dec
jp
sti
and
in
mov
sub
lcall
leave
mov
in
nop
popa
sarb
into
sbb
push
xchg
andl
fisttpl
cmp
int
in
jecxz
cmp
sar
data16
cmp
lock
ds
jg
pop
aas
jecxz
je
lods
mov
xor
rcl
inc
xor
push
sub
push
xchg
stc
cmp
sbbl
push
xor
pop
adc
pop
xchg
jp
sbb
js
insb
int
shll
cmp
orb
ss
add
jle
cmc
mov
scas
dec
mov
push
loopne
insb
xor
or
cmp
les
inc
mov
mov
loop
mov
mov
mov
pop
sub
ret
and
sbb
xchg
dec
andl
and
insb
fimull
fimuls
xor
loopne
dec
dec
jp
mov
mov
pop
test
je
adc
aad
sub
je
pushf
pop
xor
inc
lods
push
ret
leave
cmp
push
int3
dec
out
insb
mov
dec
xor
push
ss
mov
lahf
outsl
pop
mov
xor
js
pushf
test
push
fldcw
cmp
pop
int3
and
xor
andl
ret
je
sarb
dec
das
lret
scas
out
cmp
cmpsb
icebp
shrd
gs
scas
aaa
mov
inc
mov
xchg
int3
cmc
lahf
nop
xor
sti
pushl
jo
subps
fimull
mov
cmp
sub
scas
jge
das
cmp
mov
push
or
inc
sahf
cmp
jmp
xchg
jmp
shrl
out
cmp
les
cmp
insb
data16
lahf
jns
outsb
xlat
mov
sahf
push
dec
xchg
mov
pop
jl
mov
mov
rorl
jo
or
in
mov
je
dec
shrl
mov
aaa
cmp
pop
pushf
cs
in
xor
dec
dec
pop
dec
in
jl
cmp
inc
popa
pop
scas
jnp
cli
fstpt
lods
sahf
pusha
fisubs
gs
inc
push
cmp
arpl
push
fs
data16
clc
mov
pop
pop
dec
mov
iret
mov
pop
rorb
in
xchg
fs
ss
mov
sub
scas
fisubrl
push
mov
mov
xchg
cmpb
pop
scas
outsl
insb
pop
jl
fmulp
mov
gs
ljmp
scas
mov
mov
movsl
arpl
adc
cmp
into
jp
scas
dec
mov
push
sahf
jg
cmpsb
mov
int3
push
hlt
insb
sbb
aam
mov
push
pop
sahf
mov
es
dec
pop
out
lods
cli
pop
leave
pusha
jmp
stos
bound
lods
cld
arpl
fs
hlt
test
cltd
xor
addr16
push
pop
imul
pop
das
imul
or
les
cmp
pusha
push
popa
movsb
gs
mull
adc
push
push
dec
fdivl
sub
jbe
pop
scas
data16
mov
lret
popa
cld
jp
lods
mov
dec
arpl
pushf
fs
data16
in
lretw
mov
adc
clc
jbe
insb
cmp
dec
je
pop
pop
leave
leave
or
cmp
insl
push
mov
sbb
jmp
and
in
mov
dec
outsb
arpl
add
xor
push
or
pushf
push
shlb
movsl
pop
cmc
hlt
push
pop
sahf
adc
sahf
xchg
jbe
mov
mov
bound
sahf
mov
xchg
push
mov
je
add
inc
push
mov
pop
leave
ja
add
mov
dec
sub
sahf
rorl
mov
or
or
je
test
or
addr16
push
push
outsl
push
push
lock
sbb
push
pop
cld
adc
cmp
pop
xchg
jp
scas
xchg
pusha
mov
fists
gs
cmc
adc
arpl
data16
mov
cli
gs
addr16
les
mov
imul
je
js
pusha
pop
jne
mov
mov
dec
pop
clc
sahf
mov
pusha
popaw
in
mov
in
dec
jb
add
addr16
pop
sub
push
add
enter
mov
cmp
out
mov
pop
test
jb
fs
jb
adc
loope
call
adc
adc
aas
arpl
gs
jp
mov
xchg
addr16
push
adc
pop
imul
test
mov
das
dec
xlat
lods
aad
imul
jbe
mov
mov
bound
inc
inc
arpl
cs
out
or
xor
sahf
imul
adc
lret
mov
cmp
and
and
sub
pop
cmp
cmp
aam
neg
pop
stos
popa
adc
adc
arpl
mov
cmc
fdivrp
pop
add
data16
adc
adc
mov
cmp
mov
push
imul
clc
xchg
pop
mulb
xchg
cs
pop
xor
pusha
sub
test
add
or
xchg
fcmovne
mull
gs
cmp
addr16
jne
xor
imul
mov
mov
gs
idivb
jae
and
pop
stos
mov
into
pop
ljmp
or
mov
in
mov
dec
nop
mov
pop
ret
pop
xor
mov
adc
std
js
add
mulb
xor
push
mov
push
mov
pop
adc
push
cs
mov
mov
nop
arpl
int3
inc
gs
loopne
adc
add
data16
addr16
movsl
scas
insb
push
jp
mov
push
ss
imul
dec
out
pop
cmp
cmc
adc
pusha
dec
bound
sub
jb
out
push
add
pushf
int
push
mov
dec
push
sbb
push
ja
clc
lods
push
mov
pop
dec
movsb
pop
or
sar
fadds
sti
imul
mov
cmp
pop
outsl
adc
gs
lcall
xchg
pop
bound
arpl
jne
or
push
gs
insl
js
sti
aas
data16
bound
pop
fnstenv
pop
lahf
psubsb
sub
gs
inc
jb
loopne
and
movsb
lods
cld
pop
dec
pop
cwtl
adc
adc
sbb
out
pop
mov
pusha
in
popa
jbe
bound
lods
adc
adc
pop
adc
inc
gs
push
pop
mov
scas
jne
shrb
daa
int3
jae
add
dec
dec
mov
cmp
imul
sub
xchg
xchg
sub
xor
fcoms
dec
pop
mov
sub
pusha
pop
popa
mov
mov
test
mov
inc
pushfw
mov
sub
fwait
gs
sarl
lods
pop
push
imul
psubb
jno
dec
push
pop
sahf
leave
hlt
xor
pusha
cwtl
cmc
mov
movsb
popa
sahf
iret
mov
add
mov
lcall
nop
enter
int3
pop
add
lods
add
bound
testl
xor
outsl
dec
inc
xor
jne
sahf
scas
mov
jp
lods
xor
push
adc
imul
test
pop
mov
mov
pop
in
enter
cld
scas
pusha
dec
nop
popa
leave
sbb
xchg
xlat
push
sub
inc
fs
popf
mov
push
cmpsb
sbb
gs
mov
data16
sub
imul
and
loop
dec
xor
leave
cmpsl
inc
out
loopne
aaa
fstpl
leave
cli
xor
in
push
fwait
jae
lea
test
sub
sahf
insb
mov
sahf
mov
and
lods
push
mov
data16
dec
jae
xchg
int
push
in
adc
fisubrs
hlt
int3
jo
xchg
pop
lds
pop
into
in
inc
pop
or
and
shll
lods
jecxz
push
rcrb
push
and
mov
jp
scas
popa
push
shr
loop
pop
mov
imul
in
mov
push
je
push
adc
pop
dec
push
leave
sbb
jns
icebp
popa
pop
in
das
into
cmc
hlt
push
jp
xchg
jp
mov
inc
gs
test
mov
xor
data16
in
sbb
into
adc
adc
imul
nop
insb
lods
pop
ds
cmc
push
fsubs
add
mov
xor
push
lahf
imul
adc
imul
dec
call
into
jp
enter
repz
cmp
outsb
sub
adc
gs
addr16
sub
dec
fsubs
adc
addr16
cmpsb
add
push
imul
nop
aaa
pop
jecxz
sbb
push
gs
out
cmp
nop
in
inc
sub
sti
push
push
dec
arpl
cmc
and
jne
sahf
or
gs
xchg
enter
lret
jp
fwait
jp
scas
rcrb
mov
pop
sbb
pusha
fisubl
sbb
mov
movups
push
mov
cmpsl
decb
push
lahf
inc
jo
les
mov
inc
jle
mov
pop
sahf
pop
jl
stos
pusha
fmuls
popa
cld
arpl
sub
or
data16
hlt
jg
inc
in
popa
jp
repz
aaa
dec
mov
sub
xor
push
mov
dec
popa
sahf
jns
lods
dec
iret
arpl
mov
rorb
imul
cld
mov
push
push
inc
push
push
cmpsl
xchg
insb
int3
je
rcrb
dec
jns
and
add
pusha
dec
cmc
addr16
lds
popa
jbe
sub
adc
in
fs
add
lcall
jbe
insb
call
unpcklps
lret
mov
sahf
jno
lcall
pop
xchg
jo
lods
jo
inc
pusha
js
xor
mov
cmc
and
cmp
push
arpl
pop
data16
loope
addr16
push
subl
push
gs
repnz
xor
push
inc
mov
pop
jge
into
adc
gs
inc
sub
mov
imul
pop
fs
gs
pushf
push
aas
cs
sahf
dec
push
dec
inc
sarl
aaa
mov
pop
nop
push
movsl
faddl
popf
sub
push
fs
cmc
adc
insl
fwait
push
hlt
out
sahf
push
aas
or
scas
lret
es
nop
jl
jnp
push
dec
les
cmp
aad
fistpll
dec
pop
push
jp
scas
fldenv
mov
jbe
aad
sbb
scas
arpl
outsl
cld
inc
data16
mov
inc
imul
jbe
in
push
pop
insb
cmc
mov
pop
ds
sahf
sti
dec
mov
or
xor
popa
push
cwtl
jnp
arpl
fs
jl
pop
gs
sbb
pop
and
enter
imul
shlb
repz
cmp
jl
mov
dec
jbe
mov
or
push
pop
sahf
insl
mov
incb
cmp
lds
pop
bound
jl
mov
idivb
inc
add
jecxz
cli
mov
test
out
rolb
push
data16
fldt
adc
fmull
sti
or
mov
xchg
ficomps
addr16
jae
shl
addr16
dec
pop
and
pusha
xchg
mov
push
push
arpl
sub
mov
mov
je
enter
push
push
adc
jmp
cmp
insb
jp
mov
cmp
dec
jl
pop
lahf
andl
subb
pop
test
sub
shlb
dec
arpl
int3
adc
cmp
jle
in
out
es
dec
jp
mov
sarl
je
shrb
imul
inc
mov
cmc
add
add
jp
scas
jmp
shrb
cltd
pavgb
and
fs
adc
adc
pop
gs
loop
dec
data16
or
adc
dec
addr16
dec
jle
aad
or
dec
dec
js
das
push
ja
xor
and
fidivl
xor
insl
push
popa
mov
push
bound
lahf
fs
data16
sub
lea
jae
aad
or
inc
sbb
cmp
cmp
mov
aam
sahf
adc
pop
rep
shlb
sub
outsl
jns
pop
dec
aam
add
pop
les
insb
cmp
popa
push
jno
arpl
dec
sbbb
mov
xchg
loop
dec
pop
sub
lea
xchg
ret
mov
mov
lods
xor
mov
pop
nop
lret
fidivl
test
push
pusha
sahf
mov
imul
xor
pushf
or
pusha
adc
mov
and
jbe
sbb
mov
repz
push
lock
dec
push
mov
gs
cmp
pop
jge
shrb
dec
and
mov
mov
cs
sub
fidivl
sarb
addr16
insb
mov
adc
arpl
xchg
mov
push
fisubs
aas
rolb
or
dec
leave
test
jle
cs
dec
data16
and
xor
add
out
push
cmp
mov
jno
fsubl
mov
repz
gs
or
mov
pop
popa
addr16
je
mov
push
imul
mov
add
lds
cwtl
dec
lret
pop
std
insl
pop
enter
loopne
int3
mov
clc
pop
jnp
mov
inc
subl
cmc
subb
inc
push
outsl
ja
aas
out
add
scas
pop
pop
sbb
popf
sub
push
or
popa
test
bound
data16
mov
mov
int3
sub
mov
sbb
jo
push
pop
xchg
mov
ljmp
movsl
cmc
mov
cld
dec
bound
arpl
scas
insl
cmp
cmc
cmpsb
push
aas
insb
cs
hlt
push
mov
adc
mov
add
enter
dec
pop
mov
xor
dec
dec
pusha
movsb
cwtl
jb
and
jl
cwtl
mov
mov
push
fs
mov
pusha
sahf
lret
test
movsb
adc
push
mov
les
jne
mov
push
pop
xchg
icebp
push
mov
cmpb
aad
or
arpl
ja
cmp
jle
adc
lcall
arpl
sub
xchg
jne
iret
cmc
hlt
cld
pop
push
rorb
in
or
movsl
jge
std
aas
pop
xor
mov
pop
push
test
shll
mov
pop
or
push
in
aaa
inc
pop
sahf
int3
and
push
cmpsb
lret
lcall
adc
inc
lret
adc
gs
out
loopne
adc
addr16
xchg
aam
cmp
push
jne
mov
cmp
pop
mov
into
ret
pop
inc
subb
enter
sub
insb
andb
or
sub
gs
cmp
test
incl
dec
imul
fmull
arpl
adc
pusha
data16
addr16
mov
or
sbbb
xor
push
insl
push
pop
fcomip
cmp
xchg
ret
cs
mov
out
mov
filds
push
or
ret
pop
in
ja
aaa
or
push
inc
lock
dec
cmpsb
arpl
ja
cmp
mov
pop
sub
adcb
loopne
cmpsb
jge
inc
dec
xor
jae
lea
fcomip
mov
ficomps
mov
scas
fsubl
lods
jl
sahf
nop
or
outsb
jns
cld
cmp
xchg
jne
xor
pop
sub
mov
out
test
mov
cmp
gs
les
movsb
int3
into
fsts
lods
cmp
push
jne
int
cmpsl
imul
aam
shrb
pop
dec
enter
je
je
or
xor
pop
mov
xor
adc
gs
sbb
enter
das
stos
addr16
aam
pop
cmpxchg
adc
imul
xchg
test
ja
out
movsb
pop
add
mov
mov
mov
iret
paddusb
nop
adc
adc
adc
ret
xor
int3
stos
pop
adc
xchg
popa
out
aas
mov
jnp
rclb
adc
lret
mov
popf
dec
fcmovnbe
nop
mov
movsb
pop
cmpsl
jne
test
in
mov
pop
inc
pusha
xor
or
adc
pop
cmp
scas
outsl
jge
xchg
mov
mov
hlt
xchg
mov
enter
add
mov
mov
loopne
push
xor
popa
mov
or
out
mov
sub
cmp
adc
imul
mov
outsb
add
cld
dec
bound
lret
sub
push
mov
shll
enter
bound
xor
rclb
cmp
push
sahf
mov
add
faddl
repz
jo
fnstsw
push
add
mov
xchg
divb
jo
mov
fcom
aaa
adcl
push
ds
das
lds
mov
or
dec
imul
push
cmp
push
gs
xor
cwtl
adc
rclb
lcall
arpl
push
fs
inc
repz
dec
dec
xchg
cmc
fcoml
cmpsb
ss
cli
jno
dec
leave
lea
lret
test
lods
mov
int3
xchg
lea
es
hlt
pop
sbb
sub
popa
repnz
or
mov
dec
push
mov
xor
add
faddl
gs
mov
push
pop
cmp
call
imul
push
insl
fsubr
jl
in
rolb
dec
cmp
xor
xchg
pop
lock
ds
leave
cmc
std
or
sub
push
mov
ja
mov
adc
jl
dec
int
dec
insb
addr16
mov
outsl
fsub
adc
adc
dec
inc
mov
push
je
cwtl
push
out
aaa
push
imul
fcoms
xchg
ss
sub
sub
popa
pop
icebp
cmc
and
sub
fcmovne
sbb
sti
mov
int3
je
notb
jge
gs
sub
lds
push
mov
push
ret
mov
mov
cmp
sub
mov
mov
incl
shll
dec
sbb
int3
push
aad
dec
mov
leave
mov
add
adc
gs
mov
addr16
xorl
and
mov
pop
sahf
adc
jne
in
push
xor
push
sbb
fs
cmc
sti
push
adc
pushf
data16
push
stc
pop
xor
or
push
sub
cld
lds
cmpsb
cld
inc
pop
sahf
fidivs
lods
add
pop
scas
into
ds
pusha
jp
push
stos
insb
adc
cmp
scas
js
popf
mov
fsubrs
inc
push
ja
int
pop
imul
cmc
fcompl
insl
push
ret
adc
ss
dec
pop
popa
or
pusha
movsl
frstor
sbb
cmpsb
arpl
and
cmp
in
andb
aas
scas
mov
mov
test
sbb
add
enter
fdivl
pop
repnz
mov
in
xchg
cld
loop
je
add
popa
mov
ret
mov
stc
mov
repnz
or
int3
out
mov
cld
imul
mov
fistps
addb
push
lods
sbb
popa
jns
jbe
bound
push
mov
sbbb
shrb
cmc
add
mov
aas
jb
int3
sub
mov
and
outsb
bound
jp
mov
mov
cmp
into
insb
jb
pop
imul
inc
mov
pusha
sub
mov
leave
mov
inc
call
js
jl
das
scas
dec
and
mov
aam
xchg
pop
xor
xchg
lock
loopne
jne
shll
rcrb
mov
and
sahf
sahf
and
popa
stos
lods
mov
arpl
cmp
push
pop
adc
ja
dec
jl
test
inc
outsb
pop
mov
out
pop
sbb
nop
in
ljmp
pusha
out
outsl
dec
popa
or
call
fs
cmp
gs
jp
mov
push
mov
out
xorl
das
rcrb
sbb
push
mov
pusha
add
addr16
xor
popa
cmp
inc
ss
scas
adc
inc
jne
repnz
outsb
dec
push
ret
and
imul
push
add
mov
push
cmp
pop
fwait
mov
pop
mov
cmpsb
lcall
dec
popa
loopne
mov
dec
arpl
add
sbb
cwtl
adc
data16
inc
je
mov
push
mov
shrb
sbb
scas
ret
das
fs
sbb
mov
ficoms
imul
xchg
das
xor
or
hlt
jbe
xor
adc
fwait
int3
movb
addr16
sub
loope
mov
cmp
fldcw
push
fs
bound
in
sbb
aam
cs
imul
push
mov
pop
inc
pop
xchg
xchg
sub
pop
ss
push
data16
loop
loope
pop
fs
popa
push
mov
fists
insl
push
fs
mov
stos
push
push
daa
ret
int3
and
sbb
push
push
ds
mov
in
jne
cmp
mov
int3
mov
push
inc
sbb
bound
loop
inc
push
faddl
leave
mov
xor
insl
lea
hlt
insb
cmp
leave
loop
cmc
ret
in
mov
push
ja
out
mov
jl
cld
jmp
or
xor
cs
outsl
pop
mov
pop
pushf
or
and
gs
lods
retw
pop
lock
enter
cmc
arpl
cld
pop
jl
jo
mov
sbb
call
je
into
fadds
dec
pop
or
outsb
test
fs
pusha
enter
andb
dec
bound
dec
lret
mov
or
dec
std
das
or
and
cmp
push
jp
mov
cmp
lahf
mov
insb
dec
pop
pop
sahf
jp
sub
lods
pop
add
das
popa
adc
out
gs
xchg
jae
xlat
push
adc
push
gs
gs
pop
fstl
in
mov
mov
lea
and
sub
in
push
inc
push
dec
add
in
and
enter
orb
fsubrp
mov
adc
and
xchg
fs
nop
pop
mov
hlt
push
addr16
dec
push
mov
outsl
pop
push
add
lock
pop
mov
xchg
das
or
jae
popa
add
aaa
div
jl
cmp
jecxz
loop
fcoms
push
in
sbb
push
imul
or
fdivrl
shr
push
sub
das
in
mov
mov
pop
or
xor
cmp
enter
ficoml
loop
jle
gs
data16
test
mov
mov
in
imul
push
adc
pop
push
or
test
pop
outsl
js
pop
pop
mov
cli
out
push
pop
test
ds
shlb
mov
nop
sahf
movb
aam
or
mull
dec
outsb
xchg
fs
insl
inc
outsb
imul
or
mov
xor
bound
jo
jnp
mov
pusha
fmuls
in
sbb
enter
push
fnsave
lods
movsb
bound
arpl
jp
gs
insl
jp
add
xchg
mov
fisubrs
or
inc
mov
pop
aas
mov
mov
or
push
mov
je
push
imul
adc
cmp
sahf
cmp
or
pop
andl
inc
rcrb
outsb
push
testl
sub
pop
fs
cmc
mov
dec
mov
push
or
pop
movsb
out
jmp
sbb
inc
mov
and
imul
jl
fdivl
jmp
aas
jne
adc
fdivrl
sub
jmp
cltd
bound
mov
test
pushf
dec
lahf
adc
adc
leave
xor
das
enter
call
gs
push
mov
pop
push
iret
xor
cltd
dec
adc
cmpsb
cmp
ret
pop
cmpl
jecxz
push
jbe
addr16
push
hlt
das
pushf
hlt
test
jle
mov
dec
data16
insw
add
outsb
insb
push
imul
daa
ss
inc
popa
jp
fdivs
or
fs
xor
dec
gs
loop
mov
mov
jmp
mov
shl
stc
push
xchg
ror
push
pushf
mov
dec
mov
adc
push
push
add
mov
btr
shrd
btr
shl
mov
cmp
or
shr
mov
push
sub
lea
pushf
movb
pusha
mov
lods
sbb
test
add
mov
pushf
setg
call
shr
clc
bsf
mov
push
test
and
test
pushf
jmp
lea
ja
setp
or
test
sub
bsr
or
sub
and
add
rcr
neg
mov
sub
sar
mov
inc
mov
push
repnz
push
pusha
pushf
push
lea
jne
mov
jmp
or
sub
mov
stos
jo
test
rorb
push
adc
mov
inc
jne
jecxz
int3
shl
ficompl
cmc
gs
fistpl
push
sbb
cwtl
movsb
and
pop
lret
in
push
fwait
pushw
mov
arpl
cmc
fbld
cs
shrb
adc
ljmp
into
stos
jge
dec
fmull
popa
and
sahf
add
xor
push
cwtl
jl
or
adc
lds
in
and
aas
and
call
adc
pusha
push
jmp
lods
or
mov
inc
jb
xchg
xor
movsb
sqrtps
mov
fidivrs
popa
mov
insb
cld
mov
ret
sub
mov
adc
xlat
pop
aam
test
push
int
imul
andb
scas
mov
mov
push
xlat
popa
cmp
decb
gs
outsl
xor
repz
negb
pop
bswap
add
sbb
fimull
ljmp
pop
cmc
adc
mov
sbb
push
dec
test
add
lods
mov
enter
mov
inc
stc
xor
adc
sub
leave
rol
scas
add
lods
mov
xlat
or
xor
popa
add
sub
mov
gs
out
mov
xlat
test
mov
outsl
pop
dec
jl
add
iret
inc
or
add
xor
adc
pop
mov
xor
adc
mov
movl
push
movb
push
push
mov
pushf
push
mov
mov
pushl
ret
lea
jne
push
movsbw
movb
pushf
setns
mov
cwtl
lea
jmp
or
fs
cmpl
loopne
sahf
mov
iret
jno
dec
sbb
roll
mov
clc
leave
sbb
mov
mov
cmpsl
ret
lcall
pushf
scas
dec
cmpsl
mov
and
jbe
dec
int3
push
lret
stos
or
push
inc
sbb
push
or
and
insb
jno
imul
sbb
iret
dec
xor
in
pop
pop
or
ret
push
mov
mov
adc
jns
adc
mov
pop
test
rcr
dec
add
lahf
das
loope
in
cmpsl
mov
mov
xchg
std
pop
cld
xchg
out
jne
adc
aaa
cmp
mov
fisttpl
inc
and
stc
mov
mov
lea
jmp
aad
incl
ljmp
mov
shll
decl
sbb
ljmp
stc
outsl
ljmp
dec
add
pop
in
dec
incl
lds
frstor
mov
decl
lods
call
mov
insb
fldl
iret
incl
or
adc
out
pop
call
sub
ljmp
int3
enter
out
push
jge
sti
fisttpll
gs
dec
call
inc
aaa
fldl
jne
dec
decl
jo
frstor
lahf
dec
pop
decl
cli
out
lcall
jg
stc
out
call
xor
or
jmp
sahf
xchg
pop
ja
jecxz
mov
ljmp
xlat
dec
push
jl
sti
inc
incl
pop
fnstsw
push
repz
fcomps
sbb
ljmp
or
call
mov
enter
xlat
das
mov
insl
jg
jmp
add
jmp
push
lds
mov
pop
and
pushl
or
dec
ljmp
aas
fisttpll
mov
cmpsl
jno
fisttpll
add
jmp
fbstp
enter
mov
push
movsl
das
fsubr
lahf
clc
pop
pushl
pop
popf
dec
decl
clc
aas
shll
lcall
pop
dec
ret
incl
es
out
idiv
jmp
ja
fisttpll
mov
dec
ljmp
pop
aas
leave
pop
stos
incl
shlb
pop
roll
xor
lds
dec
movl
incl
adc
iret
lcall
lahf
xor
repnz
decl
inc
jno
call
js
fisttpll
cmp
lcall
aaa
enter
inc
ljmp
jb
fldl
dec
dec
pushl
mov
in
jmp
call
in
out
fldl
std
call
xchg
pushl
in
incl
testb
mull
ret
push
decl
jmp
incb
leave
sbb
jmp
jb
push
decl
and
ljmp
dec
and
add
inc
dec
mov
sub
jns
into
orb
add
cmp
clc
add
and
cmpsl
pop
stc
lock
scas
in
in
inc
add
xor
dec
pop
sbb
loopne
insb
xlat
cmpsl
test
fwait
xor
mov
mov
lock
pop
fcos
cli
enter
dec
inc
jg
cs
sbb
pushf
adc
jns
fists
std
mov
pop
add
or
inc
movsl
popf
hlt
das
jae
outsb
fcoml
mov
cmc
dec
mov
and
push
or
and
jmp
pusha
mov
and
fimuls
and
jmp
movsb
mov
xchg
adc
dec
inc
adcb
xor
jb
mov
stc
decl
xchg
xchg
fsubrs
sti
lea
shld
mov
clc
add
rcr
movzbw
push
mov
dec
pusha
mov
call
pop
mov
das
clc
cmp
ljmp
and
push
fadd
cmp
popf
insb
add
addr16
add
ljmp
test
and
cmp
inc
loope
aam
xor
repz
ja
ret
pop
outsb
cmp
xor
shll
flds
sbbl
xchg
push
das
sub
cmp
or
sar
lcall
lret
lea
rorl
sbb
lods
arpl
ss
push
jae
cli
and
pop
pop
rorl
mov
ds
lods
or
add
push
insb
ss
testl
rcrb
cmp
fistps
popl
bt
test
cmp
pusha
lea
ja
ror
sub
pushf
inc
inc
sub
add
inc
jmp
mov
pushf
pushl
ret
call
pop
add
orl
ja
xchg
aam
lret
or
xchg
leave
fbld
inc
and
ljmp
out
clc
xor
push
jl
dec
sub
lret
stc
or
push
sub
pop
mov
pop
xlat
xor
or
mov
mov
inc
mov
jge
pop
add
mov
mov
adc
lds
sbb
or
jae
les
jge
cmp
lds
and
arpl
ret
clc
mov
outsb
sub
xchg
cmpsb
xchg
orl
and
lds
push
stos
mov
std
insl
sub
pop
mov
pop
xor
jnp
into
test
cmpsb
cmp
movsl
pop
adc
xchg
insl
inc
xchg
pop
mov
jne
push
ja
jl
push
sbb
sub
sub
mov
inc
cmp
lods
xor
cs
mov
call
and
lock
push
cmp
pop
nop
movsb
xchg
orl
int3
loop
add
jnp
dec
sbb
jns
fnstcw
addr16
jp
test
sti
add
pop
add
cli
mov
jmp
test
lret
mov
mov
push
jb
cmp
dec
xchg
adc
mov
sub
aad
das
xchg
xlat
outsl
jmp
sub
mov
lock
fstpl
mov
movsb
jl
fidivrs
sub
xchg
in
jb
fs
jne
rcr
shr
ror
mov
rcr
inc
pusha
sub
shr
rcr
stc
lea
pusha
jmp
pushl
popl
movw
cmp
pushf
jmp
jp
xchg
orl
lcall
inc
sti
leave
push
das
mov
cmp
xchg
bound
pop
mov
add
insb
std
sbb
pop
rclb
sbb
ljmp
movsl
cld
jle
pop
call
or
std
imul
rcrb
adcb
and
dec
icebp
or
roll
std
sbb
mov
mov
imull
clc
repnz
pushf
lea
jne
lahf
movb
movsbl
lahf
cwtl
lea
push
mov
push
jmp
test
xchg
push
mov
lods
ud0
cwtl
cmpsb
repz
or
add
adc
ss
push
xlat
pop
adc
and
xchg
dec
leave
or
add
adc
fsts
sub
insl
pop
add
inc
jge
mov
pop
mov
xlat
addr16
mov
mov
nop
jle
ss
mov
dec
or
notb
out
jns
sti
cmp
bt
pushf
cmp
movw
pushf
call
pushl
mov
lea
ja
clc
clc
stc
pushf
imul
bt
add
pushl
lea
jmp
movb
imul
repz
movsb
fucomp
fistpll
add
adc
xchg
xchg
data16
lcall
imul
cltd
loope
push
jg
adc
ja
cmc
bt
sub
clc
push
repnz
call
xor
outsb
xchg
orl
push
rcrb
sub
das
xchg
cmc
ficompl
jne
jge,pn
and
cmpsb
mov
xor
test
or
frstor
loopne
jo
mov
leave
addb
dec
push
or
adc
popf
jns
cwtl
adc
call
and
xchg
mov
mov
mov
aad
fcomps
scas
push
dec
fyl2x
add
pop
and
leave
stc
push
ret
mov
outsl
daa
aam
pop
and
daa
add
or
int
out
int
inc
arpl
sbb
pop
popf
push
mov
loop
adc
loopne
push
aas
push
scas
dec
xor
jp
sub
imul
lock
lcall
int3
inc
push
cmp
mov
sub
rcr
cmc
call
cmp
mov
lea
jno
push
lea
jb
jmp
pusha
lea
jb
push
dec
mov
jmp
xchg
xchg
orl
pop
and
imul
fldln2
mov
popa
lcall
add
pop
nop
inc
popa
sbb
dec
push
or
xchg
push
insl
xor
xor
xor
add
xchg
sbb
mov
xchg
gs
leave
arpl
cwtl
inc
cmpsl
repnz
imul
jnp
inc
pop
fisubl
push
mov
mov
sub
or
imul
cmc
roll
push
and
pusha
pushf
lea
jne
bswap
xor
sbb
mov
neg
not
rcl
or
add
bt
mov
bt
test
pushf
jmp
push
cmp
movb
lea
jb
pushf
cmp
jmp
inc
mov
cwtl
orl
fnstenv
jmp
xchg
dec
shl
aad
push
dec
enter
sub
test
jb
inc
lds
xchg
adc
lds
out
pop
popa
inc
dec
inc
xchg
dec
mulb
call
jae
pop
jo
or
mov
cmpsl
push
sbb
mov
in
xchg
cmpsb
repz
pop
push
push
ljmp
leave
jg
jl
sti
negl
loopne
fidivs
cmp
pusha
test
lea
jb
call
stc
mov
out
dec
sbb
test
add
or
aad
adc
sub
jb
pop
insb
pop
cmc
in
adc
mov
mov
push
iret
shlb
or
dec
lcall
sar
add
cwtl
xor
loopne
cmp
mov
clc
ss
sub
enter
mov
call
mov
add
mov
mov
jge
and
inc
mov
fs
dec
mov
jg
test
mov
arpl
popa
inc
cmpl
xlat
adc
repnz
and
cmc
add
mov
and
popf
xor
push
inc
xchg
jne
jns
push
cmpsb
xchg
jbe
int3
aaa
fiaddl
dec
shll
inc
sti
dec
movsl
lods
leave
mov
imul
call
fbld
cmc
fidivrs
mov
cmp
aad
imul
push
inc
jno
leave
ss
push
lcall
mov
mov
das
xchg
inc
out
fstpl
push
or
scas
and
push
call
add
inc
js
je
jb
arpl
jae
xor
dec
jnp
and
aam
ja
roll
adc
inc
sub
dec
xchg
push
add
pop
out
and
int
cs
push
lret
inc
sub
repnz
cmp
dec
or
gs
xlat
movb
jp
xor
push
in
add
sbb
inc
hlt
scas
push
aam
mov
xor
xchg
icebp
xchg
cmp
pop
int
daa
mov
jecxz
lret
andb
test
test
xor
movsbw
pushf
movb
pushl
movzbw
push
mov
pushl
bswap
call
mov
call
psubusw
fwait
orl
jmp
arpl
jle
pop
jge
jb
das
gs
add
inc
cltd
push
adc
pop
scas
or
xchg
pop
inc
icebp
lahf
and
add
xchg
jae
orb
mov
loop
inc
in
mov
int3
fdivp
inc
movl
sti
cmp
jns
fistpl
aad
repz
pop
fsubs
outsl
cmc
inc
negb
cmp
and
xchg
jbe
aad
cld
or
dec
inc
les
rol
and
pushl
lea
je
test
sub
bt
stc
cmc
test
cmp
jmp
push
call
movb
mov
lea
jne
cwtl
movb
mov
bswap
lahf
pushf
mov
cwtl
lea
pusha
pushf
push
call
call
cmc
ds
pushf
orl
daa
jno
push
adc
test
shlb
pop
pop
fildll
cvttps2pi
add
adc
out
mov
jge
jne
pushf
je
popa
loope
mov
pop
mov
icebp
sub
xchg
out
inc
inc
mov
ret
adc
xor
pop
inc
stc
test
cmp
mov
pop
fcoms
xchg
hlt
cwtl
pop
loope
in
scas
icebp
loopne
pushf
cmp
addr16
movsb
pushf
call
jmp
test
mov
cs
jne
lcall
orb
movl
fisubs
movsl
jns
ljmp
push
mov
out
pop
lods
ljmp
mov
mov
out
dec
es
push
arpl
cmpsb
xor
pop
pop
xchg
ds
inc
mov
xchg
lcall
sbb
add
ret
out
je
mov
cmpsb
push
pushf
add
enter
dec
fwait
lds
push
jmp
sub
test
jg
add
not
movsbl
movsbw
rol
mov
pusha
test
cmpb
push
pushf
pushl
lea
jne
dec
pushf
sub
dec
neg
mov
setb
add
rcl
sar
mov
cmp
test
jmp
stc
jmp
xchg
cmp
orl
int
loopne
enter
sub
add
dec
or
lret
out
jl
push
add
xchg
lods
leave
inc
fwait
lods
repz
rcrb
ljmp
das
mov
sub
jo
std
mov
gs
in
pushw
mov
dec
mov
adc
loopne
cmp
and
bound
pop
jl
mov
jne
dec
pop
xchg
int
push
mov
je
and
into
mov
movb
bt
sub
push
rep
lea
movzbw
lea
jno
pop
push
pusha
pusha
movl
lea
jmp
or
sbb
add
clc
and
pushf
mov
test
call
pop
loope
sahf
orl
cmp
cmp
lret
inc
xchg
movsl
stos
or
mov
test
pop
dec
scas
cmp
je
mov
shl
xor
add
popa
inc
lahf
and
mov
mov
cmpsl
orl
push
aaa
sti
mov
mov
shlb
xor
fbstp
add
fisttps
loop
mov
and
sti
pavgw
lret
push
sub
pusha
push
add
inc
lds
fnstsw
sub
push
sahf
xor
or
add
insb
sbb
mov
pop
lods
mov
rorb
jne
and
jbe
repz
mulb
inc
mov
xchg
mov
ja
dec
jbe
mov
mov
push
ds
and
jb
dec
shrl
fdiv
lret
jne
sub
dec
push
ljmp
add
mov
pop
cwtl
cmp
ret
sbbb
daa
test
mov
push
adc
mov
mov
adc
pop
and
push
jb
or
push
cmp
sub
rcrb
jecxz
push
dec
add
addr16
xor
inc
loop
pop
push
fildl
outsb
jae
push
xor
int3
mov
sbb
sbb
jne
gs
shl
xchg
aam
and
dec
sub
xor
mov
int3
push
sub
and
or
stos
and
or
inc
and
pushl
push
mov
push
lea
ja
jmp
sub
call
stc
sub
movw
push
pushf
mov
lea
jne
call
sbb
pushf
pusha
mov
stc
mov
stos
xchg
rolb
add
fisubrs
cs
cmp
inc
jns
ds
pop
jg
or
mov
leave
es
push
push
jle
mov
iret
inc
data16
adc
inc
xchg
mov
fs
gs
xchg
sub
into
outsl
gs
aas
jmp
sbb
ljmp
mov
test
call
bt
movzwl
shl
call
shr
fbld
dec
addr16
shlb
ljmp
cs
cld
sbb
or
lahf
rolb
and
sub
push
daa
fisttpll
aam
aad
subb
dec
jp
jbe
mov
push
xor
pop
jae
out
out
dec
fistpl
dec
dec
out
jmp
insl
jecxz
push
add
aam
in
scas
cmc
mov
xor
lea
sub
inc
outsb
sub
data16
mov
push
insb
pop
hlt
test
jl
mov
enter
pop
mov
or
jns
mov
jmp
jne
cmp
cmp
int3
xor
inc
shrl
adc
aas
insl
push
pop
pusha
loopne
inc
xchg
in
dec
lcall
mov
push
xchg
pop
xchg
and
shl
add
pushf
pushl
ret
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
test
add
test
jmp
sub
bound
or
push
outsl
shl
jle
mov
movsb
insb
inc
sub
and
fstps
out
daa
add
clc
and
into
mov
inc
jg
sar
loope
seta
les
lcall
xor
ret
mov
jle
xchg
test
add
ss
xchg
push
sbb
sahf
push
mov
mov
out
or
xchg
ret
sbb
jo
sahf
push
mulb
dec
dec
test
leave
dec
ja
pushl
outsb
scas
sbb
dec
jle
cmc
aaa
sub
mov
lods
stos
cmpsl
mov
lea
iret
mov
push
adc
xchg
xor
pop
cmp
cmp
ljmp
push
xlat
or
stos
lea
push
inc
sbb
inc
leave
stc
nop
leave
sbb
mov
out
adc
cmp
loopne
popf
pop
imul
cmp
jnp
push
clc
ds
mov
cwtl
scas
dec
shrl
jg
pusha
aaa
sbb
xor
enter
filds
aad
jl
daa
cmc
movb
sti
hlt
push
mov
adc
fsubs
jae
std
sti
aad
lods
sub
dec
xor
xchg
jp
ret
out
das
cmc
mov
and
pushf
scas
jl
or
cmp
pop
subb
mov
xchg
pop
int
arpl
loop
outsl
xor
pushf
sub
pusha
bt
bt
cmp
mov
push
lea
ja
clc
imul
stc
push
pusha
add
pushf
push
pushf
pushf
lea
jmp
call
push
lea
ja
pushf
push
mov
stc
imul
pushf
call
lods
cmc
clc
bt
add
call
into
adc
mov
push
inc
insl
push
jbe
cmp
cmp
gs
orl
jmp
mov
sub
pop
jo
jp
loopne
and
lods
arpl
add
subl
out
jecxz
mov
rcll
or
lret
add
hlt
sbb
and
push
add
inc
divb
add
aam
out
lcall
movsb
loopne
jecxz
cld
dec
imul
ret
sahf
cmp
and
pusha
pushl
ret
pushf
pushf
rep
movzbl
pop
pushf
pusha
mov
movb
lea
jmp
imul
lret
adc
stos
icebp
pop
ret
popa
das
in
pop
sub
sbb
in
cmp
std
mov
mov
xchg
and
test
dec
mov
mov
mov
xor
xlat
inc
ret
push
and
and
movsb
call
adc
mov
ret
mov
add
iret
sbb
and
pop
sti
xchg
aad
mov
jbe
jle
jmp
xchg
cmpsl
movsb
and
jbe
in
mov
pop
mov
mov
scas
jecxz
outsb
xchg
adc
push
insb
lahf
jl
push
ret
mov
push
std
push
add
mov
scas
cmc
ljmp
lret
out
ja
test
outsl
xor
and
xor
dec
addr16
rcrl
cmpsl
xlat
jno
inc
loop
mov
or
rep
fadd
outsb
xchg
push
cmp
data16
cmp
iret
inc
jo
mov
out
inc
ret
add
dec
shll
aam
mov
cmc
push
xchg
inc
push
xchg
mov
add
je
inc
inc
inc
cmpsl
lret
jne
into
sbb
jp
dec
aam
inc
or
insl
aam
cmp
stos
test
pop
or
and
mov
test
lods
test
xlat
loop
fimull
xor
jae
fidivl
mov
clc
push
mov
ja
mulb
iret
mov
mov
int
jbe
cmpsl
ret
lock
or
mov
push
sarb
jne
sti
outsl
push
imul
addb
aaa
movsb
pop
and
cmp
lret
leave
pop
in
push
mov
in
cs
and
in
mov
mov
gs
test
lds
mov
scas
or
movsl
and
sub
mov
stc
sub
int3
adc
and
mov
inc
fsubs
outsl
rorl
push
jno
stos
es
or
push
push
mov
shlb
jl
movsl
sub
xchg
iret
sub
xchg
pop
fmull
aas
out
ret
rol
cld
fldt
jg
out
arpl
push
push
mov
dec
repnz
push
inc
sbb
into
xchg
outsb
mov
xor
xchg
mov
push
decl
mov
ret
dec
pushf
rorl
sub
fxtract
mov
rorb
dec
mov
or
push
dec
mov
addr16
jnp
jno
jbe
sbb
jmp
fcompl
sti
pusha
rclb
movsl
scas
xlat
mov
dec
mov
sub
xchg
pop
lret
cmpsb
fistl
ljmp
mov
jno
int3
jp
sahf
mov
in
movsb
cmpsl
push
lret
or
leave
arpl
jecxz
rolb
lods
add
fs
ja
sar
add
test
push
sub
ror
movb
push
test
add
add
shld
bsf
pusha
mov
add
shl
inc
mov
cmp
pusha
jmp
sub
arpl
dec
and
or
lods
dec
neg
stos
fstps
inc
and
mov
sub
ss
clc
lret
pop
xchg
sub
outsl
fs
mov
inc
popa
test
lahf
sbb
pusha
dec
push
sbb
test
add
neg
mov
shl
je
jno
sub
xchg
lret
push
repz
pop
mov
inc
or
mov
adc
loop
je
pusha
push
push
imul
ret
loopne
xchg
and
xlat
sbb
bound
cld
jecxz
popf
push
push
std
jmp
lds
cmpsl
xchg
inc
pop
outsb
loopne
pusha
add
hlt
push
insb
and
or
dec
cmp
imul
scas
dec
or
shl
mov
cmp
mov
mov
push
gs
pop
out
jl
das
std
sbb
dec
lcall
into
pushf
imul
mov
outsl
leave
lods
pusha
aaa
lret
and
aaa
aam
sarb
mov
sbb
and
cmp
dec
pusha
movl
mov
lea
jmp
movl
call
or
rolb
sbb
dec
xchg
aas
out
push
pop
loop
lods
daa
cmp
iret
or
mov
push
loop
adc
pop
pop
rorb
cltd
sarl
push
es
push
stc
xchg
insl
bound
fsubrl
hlt
sub
shlb
dec
jl
mov
mov
add
push
in
mov
stc
cli
stos
add
dec
jae
pop
out
rcl
shl
mov
stc
sub
clc
pusha
call
jmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
push
inc
push
dec
xor
cs
insb
add
jns
mov
push
adc
xor
cmpsl
popf
inc
push
adc
mov
cmp
jp
xor
xchg
into
xchg
cmp
test
mov
cmp
cltd
jp
inc
mov
mov
adc
or
add
mov
xchg
ds
pushf
js
push
mov
sahf
pop
in
jno
add
and
push
mov
leave
push
mov
sti
inc
mov
ja
and
dec
lods
cli
sbb
cltd
ds
aam
ficoms
adc
adc
push
out
mov
or
andnps
fisttpll
dec
std
test
fimull
mov
inc
dec
mov
das
daa
fs
pushf
jmp
mov
movsbw
lahf
lea
call
dec
btr
rcr
bts
mov
stc
cmc
cmc
cmpb
jmp
cmp
and
out
adc
sub
rsm
fsubs
push
lods
fsubl
lahf
mov
or
xor
mov
stc
out
mov
flds
enter
out
xor
stos
test
add
add
aaa
sbb
push
mov
mov
mov
lock
js
and
mov
in
mov
push
js
imul
add
mov
ljmp
jle
mov
pop
call
dec
jg
movsb
addr16
and
xchg
mov
push
adc
sub
mov
test
mov
gs
push
stos
sbb
test
lods
nop
inc
imul
xchg
andl
inc
adc
and
jmp
push
dec
daa
mov
xchg
push
mov
les
mov
icebp
mov
and
lock
repz
dec
or
lret
pop
enter
xor
jo
mov
pushf
mov
inc
lock
call
dec
lcall
repnz
push
in
aad
xchg
cmp
inc
jl
xor
rclb
cld
and
xor
mov
mov
or
vandnps
pop
mov
add
lock
sbb
das
incb
pusha
mov
ljmp
nop
loope
gs
stos
shlb
loope
loope
mov
inc
mov
arpl
mov
xor
dec
xchg
adc
pop
or
cmp
popa
xchg
jbe
int
pusha
mov
sahf
inc
mov
insb
mov
add
ja
and
pop
je
movsl
inc
jmp
mulb
add
movsl
pop
adc
in
add
mov
fimull
sbb
out
test
aaa
push
aaa
shrl
leave
cmp
insb
dec
xchg
sub
fdivr
pop
or
aad
push
lods
sti
cmp
pop
push
test
je
inc
ret
pusha
ss
scas
lret
ficomps
adc
jle
lock
rcrb
fmuls
cs
clc
mov
mov
das
add
xchg
mov
sti
and
decb
add
and
addb
mov
or
push
enter
lret
dec
loope
jo
sbb
push
ss
data16
jb
sbb
xchg
adc
test
or
cs
or
mov
cmp
jl
sub
and
add
lahf
xor
imul
and
xor
pushl
pushl
ret
jo
mov
mov
fisubrs
cld
fdivl
adc
mov
mov
pop
hlt
push
iret
sub
fildl
mov
movsl
mov
sbb
pop
sub
test
mov
arpl
repnz
adc
scas
jo
in
lods
mov
adc
mov
call
adc
lret
or
jle
testb
jae
sti
dec
pop
cmp
and
mov
inc
popa
es
fisubrs
dec
adc
add
push
cmp
test
into
inc
pushf
pop
adc
mov
rolb
ja
pop
or
add
iret
adc
test
pop
call
adc
mov
cmp
xor
ret
fdiv
movsl
gs
fnstcw
xlat
stos
enter
dec
cmp
pop
icebp
cmpsl
nop
xchg
cmp
mov
pop
push
pop
mov
loopne
cmpsl
mov
stos
jle
mov
dec
or
mov
stos
lret
daa
nop
xor
in
ret
pushf
inc
mov
inc
pushf
inc
test
xor
cmp
xchg
sar
cmc
clc
mov
or
sbb
mov
jmp
pop
push
xor
dec
jle
popa
mov
cwtl
xlat
imul
mov
push
outsb
push
xchg
adc
inc
pushf
jbe
sub
sbb
rol
add
popf
imul
aas
rolb
push
es
in
fcmovne
add
dec
xorb
jecxz
pushf
inc
xlat
insl
xchg
sbbb
into
test
int
repnz
or
and
jp
and
jno
je
sbb
push
aas
inc
adc
or
adc
xor
mov
mov
clc
clc
call
rcr
btc
and
btr
mov
inc
rcl
bts
mov
pushf
mov
bt
pushf
jmp
je
std
outsl
mov
mov
adc
jo
adc
imul
push
push
test
mov
data16
mov
fildll
in
fstpt
add
popf
fldenv
jl
shrl
push
insb
mov
out
pop
or
scas
mov
repnz
push
icebp
and
lods
ja
or
jae
cmp
jns
insb
jle
xlat
mov
js
mov
mov
adcb
lcall
cmp
mov
scas
jl
jl
add
and
jae
stc
clc
sub
call
rol
dec
rcl
bsr
mov
cmp
bt
cmc
cmpb
push
jmp
cmc
pushf
clc
repnz
push
pusha
movb
jmp
pushl
jmp
mov
cmp
jmp
mov
dec
ja
repz
fimuls
lcall
dec
test
ret
and
sub
add
test
pop
fstpt
push
test
out
sbb
repnz
dec
cli
aam
and
outsb
ret
div
enter
test
int3
popa
scas
mov
pushf
mov
rolb
les
inc
mov
test
ja
dec
std
xchg
jo
mov
inc
gs
push
mov
cld
imul
fists
xchg
cs
sbb
dec
jno
dec
cmc
nop
pop
popf
aam
iret
push
sub
and
repnz
sti
xor
push
arpl
lea
xchg
pop
lds
mov
jno
rorb
imul
pop
dec
mov
fcmovne
xchg
inc
stos
dec
sbb
pop
push
and
addl
mov
inc
sbb
lods
sub
adc
dec
push
mov
xchg
mov
test
nop
push
pop
jbe
js
pop
adc
or
cltd
and
test
popf
cmp
fwait
dec
adc
ljmp
and
outsb
and
pop
rcrl
int
dec
cld
mov
sub
xorb
xor
xor
repz
mov
cld
imul
and
xor
xor
and
mov
subb
sbb
adc
pop
test
xacquire
aaa
in
cli
jae
ret
sub
cmp
or
shrl
dec
dec
loop
xchg
int
imul
addr16
mov
xor
lods
sbb
cmp
mov
lcall
fildll
inc
arpl
js
cli
and
mov
ficoms
call
lods
push
push
imul
sub
mov
dec
adc
inc
mov
xchg
addr16
jge
jle
lret
nop
inc
xchg
mov
jae
ret
mov
xor
mov
icebp
adc
mov
mov
push
call
mov
cmp
cli
lock
insl
add
xor
push
mov
dec
push
adc
jno
cmpsb
sarb
in
inc
jge
out
push
inc
sub
jl
xchg
mov
int3
aaa
adc
mov
cmp
push
jecxz
int3
movsb
inc
adc
sub
inc
jl
dec
aaa
push
xchg
lods
push
xchg
ss
ss
mov
dec
and
rcl
push
push
cmpl
fsts
add
and
in
jns
insb
jae
sbb
push
imul
mov
add
pushf
jle
lods
pop
xor
mov
or
and
insb
fcomip
mov
mov
xor
lock
xlat
je
xchg
adc
dec
sarl
rcl
repnz
out
nop
subb
push
sub
pop
cmp
in
scas
scas
sbb
xor
adc
sub
pop
mov
cmp
addl
lock
test
ds
rorl
and
in
dec
rep
jmp
mov
inc
dec
cmc
adc
and
loopne
push
ss
xor
les
mov
push
sbb
mov
mov
push
sahf
in
dec
rep
pop
jb
std
and
jl
dec
inc
sub
sarb
jno
insl
lds
sub
scas
jecxz
mov
mov
mov
mov
das
mov
loopne
cmpb
push
jle
movsl
movsb
sbb
inc
mov
pop
sbbl
test
push
pop
jle,pn
mov
xchg
sbb
xchg
ds
pop
cmp
pop
jl
adc
jl
stos
out
pushf
aaa
mov
lock
sub
xchg
adc
lock
dec
dec
mov
movsl
loopne
fs
xchg
sbb
xchg
push
xlat
inc
add
out
mov
lock
cs
orb
inc
cmp
js
jge,pt
int3
orb
inc
sbb
mov
shrl
int
pop
add
outsb
fistpl
cwtl
inc
mov
std
lods
es
ljmp
inc
popa
cmp
cwtl
imul
arpl
ficomps
xor
stos
adc
daa
das
mov
shrb
pop
addr16
mov
inc
mov
cmp
mov
cmp
mov
jo
test
mov
push
les
enter
repnz
int3
mov
lock
xor
cmp
and
int
pop
clc
cmp
jmp
push
jg
sub
xchg
pop
inc
insb
out
jne
fs
movsb
push
ss
fisubs
xchg
push
cmp
out
xor
arpl
cmc
push
bound
dec
sub
pusha
les
sub
xor
add
inc
mov
icebp
ret
xchg
cld
hlt
lods
jle
adc
push
jbe
jl
dec
jge
or
xchg
cmp
bound
pop
addl
xor
pop
repnz
aaa
mov
xchg
xor
arpl
fwait
dec
pop
pop
cmp
dec
hlt
sbb
addr16
repnz
xor
call
andl
jg
dec
cwtl
insb
fs
push
xor
mov
andl
clc
pop
sub
sbb
jl
jns
push
in
bound
pop
int
or
adcl
les
out
mov
popf
mov
cs
sub
push
xchg
pop
rol
pop
jns
ret
sbb
xchg
push
mov
sub
pop
dec
xchg
xor
hlt
popf
lds
pop
shll
lcall
lds
cmp
mov
xchg
mov
out
dec
jge
jle
bound
lds
mov
test
push
movsl
adcl
cmp
mov
iret
push
sbb
inc
push
gs
cmp
mov
mov
xorb
jl
and
rolb
js
dec
iret
subl
push
mov
dec
inc
mov
cs
mov
cltd
hlt
adc
inc
xchg
adc
push
sbb
xchg
int3
cmpb
lret
jg
xchg
aam
xchg
xchg
notb
inc
inc
xchg
hlt
mov
sarl
jmp
lret
lods
adc
sub
mov
sub
rclb
add
cmp
adc
test
push
sarb
jo
jle
test
popf
xchg
mov
sub
pop
xor
mov
sarl
mov
fwait
aaa
fdivs
movsl
ja
loopne
mov
mov
pushf
mov
adc
or
mov
and
mov
xor
sbb
test
adcb
int3
cmc
xor
inc
fidivrs
pop
and
pushl
pop
push
pop
xor
mov
jecxz
xor
test
mov
adc
fwait
test
xchg
mov
sar
vpmovzxbq
mov
pushf
add
je
loop
pop
jae
xlat
push
std
mov
cmp
das
jge
int
cmp
add
repnz
je
cmpl
mov
cwtl
imul
pushf
cmp
pushf
mov
push
mov
insl
dec
sub
mov
das
xor
scas
call
xchg
insb
mov
mov
pop
ss
inc
sub
pushf
mov
pop
lcall
pop
div
pop
ret
cmpsl
jo
push
mov
ds
jge
jb
into
push
andb
mov
jo
pop
jp
inc
dec
jge
subb
push
rorb
mov
jno
gs
ss
mov
adc
xor
cmpsb
mov
fnsave
mov
mov
cmp
fisubrs
pop
pop
andb
mov
xor
insl
adc
sub
mov
aaa
mov
inc
in
cmp
inc
scas
in
das
jne
jnp
xor
ja
dec
xchg
in
inc
jg
aaa
nop
mov
dec
popa
lcall
out
into
cmp
clc
mov
stos
mov
inc
pop
xchg
mov
cld
dec
fildl
mov
sbbl
scas
adcb
mov
cld
outsb
ds
jb
dec
cmp
hlt
mov
adc
cli
dec
adc
fcompl
sub
je
aas
insb
fdivp
and
pop
sub
fmuls
aam
repnz
fs
movsb
insb
das
xchg
jle
test
mov
sbbb
inc
jmp
ret
jecxz
int3
mov
jb
out
lock
dec
pushf
fcoml
push
pop
lahf
nop
jl
jg
bnd
aas
mov
out
push
jge
dec
fdivl
adcb
pop
roll
popa
lea
fdivrs
test
add
mov
xor
jle
cs
sbb
push
xchg
jbe
adc
cmp
jae
or
cmc
xor
jne
or
push
sbb
xor
outsb
lret
je
add
enter
test
mov
mov
je
pusha
shll
je
mov
int3
mov
adc
push
outsl
icebp
jp
mov
je
jle
ja
outsb
and
jp
repnz
inc
xorb
fisubs
daa
sub
adc
push
xor
fisttps
popf
icebp
aaa
cmpsb
bound
adc
xor
in
push
jl
sub
dec
or
inc
sub
add
je
in
inc
xchg
inc
insl
pop
adc
or
cmp
mov
lea
mov
xchg
int3
adc
jae
sub
cwtl
adc
and
movsb
cmp
fprem1
xchg
mov
jbe
shl
in
imul
mov
daa
jae
pusha
rolb
jge
je
bndstx
mov
ss
fidivrl
test
int3
xchg
ljmp
fstpt
dec
hlt
cmp
ret
jl
enter
insb
xchg
movb
add
pushf
inc
int
ds
das
das
mov
inc
dec
dec
push
dec
xchg
sarb
push
cwtl
push
jp
ss
cmp
dec
sbb
adc
into
in
ja
mov
pop
and
add
push
rclb
inc
out
inc
mov
push
int3
adcb
inc
cmp
cmc
cs
cmp
mov
js
push
mov
pop
add
lcall
mov
cmp
fldl
call
push
scas
insl
daa
sub
sbb
lods
and
and
jno
cwtl
mov
cmp
mov
fiadds
pop
mov
pop
fidivrl
jp
xor
pop
shl
mov
je
clc
xor
fdivs
jbe
sbb
mov
push
sbb
nop
dec
mov
pop
pushf
inc
mov
jg
jge
mov
xchg
je
inc
inc
xchg
das
fadds
pop
out
fnstsw
dec
push
xchg
inc
sub
mov
ja
adc
ja
test
pop
repnz
scas
or
jno
pop
out
sub
inc
sub
xchg
cmp
jae
or
push
ds
cmp
lods
je
call
ds
mov
inc
or
mov
mov
xchg
ds
push
adc
push
jb
jle
sbb
jno
push
in
ljmp
sbb
pop
cmc
dec
pushf
lock
popf
int3
pop
inc
xor
aam
jge
inc
sub
push
pop
mov
add
fs
in
shlb
outsl
xchg
dec
in
mov
inc
jb
dec
mov
test
xor
pop
lods
notb
jge
in
inc
scas
mov
jno
mov
push
int
and
out
dec
addr16
push
mov
add
or
insb
cmp
test
cmp
outsb
pop
js
mov
mov
lret
dec
dec
test
adc
mov
push
shlb
inc
jl
mov
imul
xchg
clc
nop
mov
xchg
xchg
mov
adcl
fnstenv
push
cli
dec
std
arpl
pop
gs
mov
lock
push
mov
in
adc
xchg
cmp
imul
mov
and
add
cli
shr
adc
push
xor
mov
cli
into
loopne
jns
dec
sub
sub
test
mov
push
sub
inc
push
cmp
jns
xchg
enter
inc
mov
cmp
aam
sub
lahf
and
in
or
push
test
cmp
or
jmp
push
dec
mov
repz
mov
push
ja
and
mov
jns
mov
cmp
xchg
cmp
scas
cmc
xor
ds
pop
dec
xchg
cmp
rcrb
rclb
xor
out
dec
jle
xchg
xor
xor
push
cmpb
xchg
incl
loop
rorl
jl
mov
mov
dec
mov
lods
popa
test
inc
rclb
adc
and
xor
adc
lock
mov
inc
lock
dec
adc
in
orl
sbb
dec
push
cmp
and
mov
negl
fiadds
mov
inc
jle
push
cmpsb
lods
ss
mov
cmp
in
imul
xchg
imul
inc
icebp
push
daa
jo
push
push
out
loope
jo
lods
mov
cltd
in
push
sti
mov
std
lea
adc
lods
pusha
in
and
and
mov
cmp
fcoms
push
out
push
es
push
lods
adc
int3
bound
mov
mov
cmp
cwtl
jno
jo
nop
lahf
fcom
outsl
lahf
nop
pusha
sarl
sub
cmp
outsb
fmuls
lea
cmpsl
cwtl
data16
out
lods
xor
iret
cmp
dec
dec
jns
jae
push
imul
gs
pop
adcl
pusha
push
fwait
push
sti
pop
xor
nop
nop
xor
imull
shll
orb
sub
mov
icebp
mov
out
shr
in
or
adc
cld
mov
sub
imul
pop
cs
jle
dec
jle
jecxz
cmpsl
aaa
int
add
xchg
sub
je
add
or
add
iret
cmp
mov
push
iret
mov
cmp
push
mov
repnz
hlt
adc
or
clc
leave
adc
out
cmp
mov
pop
inc
aam
pusha
jo
adc
jbe
bound
pop
imul
pop
in
sbb
or
xor
cltd
jmp
cli
in
mov
mov
xor
push
lods
scas
imul
jnp
aas
fidivl
push
mov
push
cmp
or
lods
data16
dec
cmp
test
insb
push
adc
insb
xchg
dec
mov
ja
nop
je
repz
das
clc
push
lods
mov
xchg
das
jbe
ret
dec
les
dec
mov
add
dec
dec
mov
out
sbb
push
cli
add
repz
ss
dec
bound
js
jle
push
popa
jo
xchg
push
insb
in
call
dec
push
cli
sbb
or
fmuls
mov
insl
dec
arpl
mov
sbb
out
gs
xchg
xlat
mov
iret
scas
lea
mov
adcl
bound
xchg
lods
daa
lea
mov
int
pop
jo
mov
dec
pop
nop
shr
mov
or
push
dec
aaa
dec
adc
out
push
icebp
xor
dec
repz
inc
dec
hlt
pop
mov
je
push
inc
cmpsb
xchg
and
ja
lret
push
and
in
pop
sub
push
xor
in
mov
jge
in
hlt
add
cmpl
mov
push
hlt
bnd
lods
int
enter
add
aaa
fs
scas
mov
orl
outsb
dec
push
add
cmp
cmp
cmp
and
aaa
repz
test
jb
aaa
lahf
push
xor
add
pushf
cld
cmp
addr16
es
enter
sar
jl
xchg
fcomps
gs
sub
push
inc
xor
mov
imul
xor
mov
aam
jge
push
push
jae
inc
mov
mov
adc
je
imul
mov
hlt
xchg
mov
jb
scas
or
xchg
dec
xchg
pop
mov
dec
xchg
in
mov
push
cmpsb
inc
push
dec
in
dec
nop
pop
xchg
mov
sbb
andb
dec
inc
sub
mov
xor
leave
pushf
cmp
xchg
push
xchg
ja
jg
pusha
hlt
insl
nop
cmp
push
adc
mov
bound
out
and
sti
stc
pop
je
cmp
pop
in
mov
cmp
mov
movsl
or
dec
xor
das
push
fsts
mov
pop
dec
mov
cwtl
xor
hlt
int
mov
repnz
lahf
mov
xor
push
popa
and
cli
mov
mov
and
mov
and
cmp
mov
xor
cmp
jne
mov
lret
cld
icebp
repz
shrl
cmpb
stos
stos
jmp
cli
jns
xor
xchg
pop
lods
inc
jb
adc
xor
out
adc
xchg
imul
xor
in
cmp
jge
sub
sub
das
cmp
adc
xor
mov
jmp
xchg
mov
jecxz
mov
cld
mov
leave
mov
cmp
or
xor
xor
xchg
mov
fcomps
cmp
scas
in
jb
cmp
xchg
fsubr
outsb
inc
dec
add
clc
or
jo
pop
jp
jl
cmp
jae
addb
fdivrs
or
outsb
mov
inc
push
iret
jb
jo
adcl
xchg
aaa
repnz
out
addr16
add
fdivp
xor
xor
mov
fnstsw
add
add
out
inc
in
dec
xchg
mov
jg
push
sbb
or
repnz
inc
mov
sbb
in
fisubl
mov
test
pop
roll
dec
out
ss
fcoms
lea
and
lret
jo
adc
mov
xor
or
inc
sbb
int3
mov
insl
cwtl
das
ss
hlt
das
inc
pop
inc
push
sbb
aas
add
xor
sbb
ja
movsl
cli
jnp
cmp
jnp
inc
or
dec
sub
cs
xor
dec
mov
mov
sub
jnp
push
out
je
sbb
jbe
insb
popf
dec
jo
popf
lods
jle
push
pop
punpckhwd
add
ss
xor
adc
xor
addr16
mov
sar
jns
xchg
inc
xor
cmpsb
xor
add
jae
cwtl
lea
add
lods
notl
and
sub
add
addr16
sti
or
gs
enter
insb
jb
addr16
insb
pop
arpl
inc
mov
or
test
inc
xor
push
insl
pop
shll
inc
mov
dec
push
pop
in
pop
inc
mov
push
mov
dec
data16
dec
pushf
inc
adc
inc
inc
jl,pn
jo
inc
testl
bound
js
je
ds
cs
mov
ja
push
fs
xchg
mov
fisubrl
mov
loope
inc
add
scas
cmc
mov
lds
xor
ja
test
mov
cmc
xchg
add
mov
adc
jae
leave
jae
pop
jl
shlb
cmp
mov
fwait
outsl
aas
dec
cld
mov
jo
imul
mov
xor
mov
repnz
das
xor
dec
and
xchg
jmp
subl
std
je
mov
andb
cmpl
ret
addr16
dec
sub
jp
decl
jg
push
nop
loop
dec
test
xor
mov
lods
rolb
pop
jmp
addr16
mov
push
dec
test
xorl
fbld
pop
orb
jbe
add
dec
cmp
and
mov
and
xor
stos
dec
add
out
mov
mov
xchg
popf
or
mov
je
or
mov
mov
mov
ss
xchg
mov
clc
enter
negl
mov
jge
xchg
jp
cmp
cmp
outsb
imul
jo
sub
jae
jo
cmp
push
xor
out
jecxz
push
jb
dec
fldcw
fisubrs
mov
sbb
jl
or
and
out
mov
insb
xchg
bound
je
lret
lea
push
add
test
movsl
stos
pop
outsl
lods
notl
mov
sub
inc
addr16
mov
rorb
cmp
cmc
les
add
inc
jl
pusha
imul
sti
adc
push
cwtl
mov
push
insb
das
or
mov
lods
mov
push
push
xchg
push
xor
add
dec
incl
ja
bsr
pop
pop
fwait
je
shrb
mov
sub
mov
adc
in
xchg
inc
adc
add
fs
push
pop
mov
repz
pop
jg
loopne
cmpsb
mov
pusha
gs
mov
mov
dec
int
mov
mov
xor
or
pop
push
mov
sub
repnz
xchg
mov
cmpsl
jae
push
mov
inc
fidivrs
das
in
out
mov
hlt
cld
adcl
int3
adc
bound
aaa
clc
mov
cmpl
xor
xor
mov
xor
mov
xor
dec
inc
xor
ljmp
ret
clc
sbb
mov
xor
ss
mov
add
cmp
mov
dec
lea
cmpsl
or
adcb
push
mov
mov
cmp
add
xor
out
aad
mov
aad
mov
xor
xor
inc
push
dec
gs
jo
mov
iret
popf
mov
mov
popf
xor
xor
pop
in
push
outsb
pusha
addl
xor
xor
lock
push
lock
fwait
lock
push
cli
adc
fcoms
adc
ret
xlat
test
or
or
dec
jb
roll
dec
push
or
xchg
and
or
adc
lock
imul
out
sub
adc
xor
aaa
lahf
xor
aaa
pop
push
pop
mov
cmp
fldenv
outsl
pusha
xchg
lret
mov
push
xor
cmp
test
pop
lock
sub
sbb
and
addl
sahf
cmp
aas
xor
scas
jmp
adc
push
stos
sbb
out
push
inc
pop
push
xchg
mov
lret
inc
mov
rcll
mov
lret
jne
xlat
int3
dec
jl
bound
jmp
cmpsb
inc
lea
xchg
xchg
insb
gs
xor
pushf
enter
mov
lods
pop
testl
rep
mov
sub
and
popa
int3
jg
fxch
mov
arpl
and
cmpb
outsl
pop
notl
fs
xor
mov
clc
mov
cmpsl
or
clc
push
push
clc
pop
icebp
test
popa
jae
mov
jb
mov
mov
out
test
mov
push
mov
sbb
adc
dec
or
dec
xchg
adc
test
aam
scas
add
outsb
xor
out
mov
pop
data16
mov
stos
ja
cmp
or
push
pop
sahf
outsb
cld
es
or
xor
icebp
bound
lods
xchg
shll
adc
ja
fnstsw
pop
je
and
adc
mov
mov
dec
adc
shrb
xchg
push
mov
adc
pop
sub
pushf
inc
out
in
mov
shll
xor
mov
fsubr
fwait
lods
cmp
aaa
ljmp
sti
cmp
xor
jl
dec
mov
xor
imul
dec
mov
dec
push
insl
in
cmp
xor
push
in
jecxz
and
mov
stc
cmp
xor
xor
repz
lret
aaa
outsl
fdivrl
sub
repz
cwtl
sub
dec
sub
inc
cld
jle
add
aaa
or
adc
or
not
shlb
push
jb
xchg
xchg
xor
pop
jne
jecxz
mov
mov
mov
ljmp
dec
ss
in
imul
cmp
loop
cmp
mov
mov
jge
xor
cmp
out
mov
cmpsb
push
mov
inc
hlt
syscall
dec
jp
rorl
movsl
dec
add
sub
cmp
mov
jp
loopne
cmp
cld
out
adc
xchg
push
mov
ret
push
repz
inc
adc
in
ss
in
bound
int3
inc
mov
xorb
or
sarb
cs
and
adc
inc
cli
add
out
pop
fnstsw
mov
jb
inc
inc
insb
push
inc
ret
xchg
jmp
jge
jmp
cli
scas
pop
jl
adc
loopne
lods
pop
cmpsb
push
test
xchg
cmp
popf
mov
aaa
mov
pop
dec
subl
mov
xchg
pusha
mov
or
scas
push
adc
pop
pop
and
cmp
cli
push
and
add
mov
out
shlb
enter
ds
addb
sarb
call
js
outsb
xchg
inc
fucomip
dec
aaa
faddl
sub
roll
pop
push
aad
mov
xor
stc
repnz
mov
adc
ret
into
mov
leave
push
pop
aas
pop
pop
pop
dec
inc
inc
shl
lock
rcrb
incb
mov
mov
pop
xchg
hlt
loope
sub
pushf
push
incl
mov
or
cltd
dec
mov
cmp
repnz
rcrb
cmp
or
inc
jno
xchg
xor
pop
orl
les
cmp
push
xchg
inc
adcl
mov
mov
mov
inc
pop
add
inc
mov
mov
into
hlt
aad
test
ds
cmp
sbb
fcoml
xchg
jle
xchg
adc
rorl
gs
adc
mov
mov
not
pop
imul
mov
icebp
arpl
icebp
mov
aas
xchg
arpl
repz
ds
pop
pop
mov
xchg
ljmp
pop
fldt
sbb
lret
xchg
jo
jg
xchg
cs
dec
fldt
jo
scas
pusha
xchg
aaa
dec
mov
movsl
dec
movsl
jno
insb
add
test
pop
repz
jae
dec
movsb
nop
xor
cmp
lods
dec
outsb
mov
xor
mov
pop
pop
xchg
add
or
mov
mull
divl
sbb
outsl
inc
xor
in
in
adc
test
ret
out
push
mov
add
inc
xchg
xor
xor
adc
inc
rcrb
int3
outsb
cmp
add
adcl
push
hlt
jge
lret
hlt
cmp
sbb
cmc
mov
inc
add
add
mov
dec
pop
std
cmp
repz
cs
stos
sti
push
test
ja
push
or
inc
mov
pop
xchg
int3
xor
mov
mov
mov
mov
gs
xor
mov
pop
mov
jp
in
rcrb
out
call
inc
xor
cld
int3
adc
das
test
mov
inc
mov
mov
jo
mov
mov
mov
das
mov
out
in
mov
push
out
mov
adc
cwtl
dec
pop
push
lret
outsl
arpl
xchg
sbb
mov
fildl
lods
xor
fimuls
cmp
mov
adc
lret
xor
fldenv
loopne
fidivrs
add
fstp
mov
mov
roll
loope,pn
das
iret
dec
dec
adc
and
adc
out
in
push
push
das
cmp
lock
iret
mov
or
cmc
popa
aaa
aas
xchg
cli
inc
scas
ss
jbe
lds
je
test
js
jnp
inc
mov
aaa
das
and
in
sbb
clc
cmpsb
mov
cmpsb
insl
push
scas
aas
cmp
in
mov
add
test
in
in
data16
dec
pop
icebp
stc
popf
xor
mov
pop
shlb
cld
jge
push
adcb
dec
in
or
mov
std
jle
mov
aad
lret
jecxz
out
sub
add
and
fmuls
repnz
mov
sbb
gs
jle
cmp
jecxz
inc
sbb
lods
and
push
movsl
pop
inc
and
imul
inc
jle
xchg
je
mov
inc
sbb
rolb
xchg
test
clc
mov
bound
test
stos
pop
int
jg
fucom
enter
in
push
ja
data16
movsl
dec
scas
jecxz
lods
popa
test
je,pn
push
addb
inc
nop
pop
dec
jg
ds
xchg
xor
adc
ds
fwait
sahf
push
aam
rol
insl
jp
xor
push
aas
mov
enter
mov
ffreep
push
pop
pop
mov
mov
sub
mov
xchg
mov
jo
adc
mov
xchg
inc
push
mov
inc
lds
xlat
icebp
cmp
frstor
cmp
cmp
pop
scas
fwait
outsl
pop
cmp
in
xor
sub
add
adc
xchg
cmp
and
clc
test
and
pop
shlb
or
cmp
js
cs
mov
insb
xor
mov
mov
lods
xchg
pop
adc
je
lret
adc
imul
jg
psubb
dec
in
scas
aam
call
daa
jmp
push
test
call
push
fwait
or
mov
cwtl
mov
shlb
push
sub
push
xchg
je
outsb
jp
dec
sub
push
inc
mov
add
sarb
jle
pop
sub
jns
xor
xor
maskmovq
testl
cmp
hlt
push
adc
aaa
mov
dec
ret
lods
adc
and
xor
sbb
daa
dec
insb
mov
gs
xor
repnz
setae
imul
fiaddl
roll
fbstp
sbb
sub
mov
add
xor
cmp
add
xorb
clc
sub
pop
xor
pop
lret
jns
scas
add
mov
push
inc
dec
adc
or
push
adc
adc
dec
movsb
in
out
ds
or
rolb
push
call
inc
aad
insb
dec
aas
xor
lods
xchg
push
cmp
out
lcall
sarb
inc
int3
adc
out
or
popa
arpl
sti
xor
test
ja
adc
rorl
outsb
pusha
cmp
sbb
adc
fsubrl
push
jle
mov
aaa
lea
sub
xor
dec
cmp
add
inc
daa
jae
adc
dec
test
in
jo
mov
lods
or
jp
fisttps
es
cmp
push
das
adcb
scas
inc
push
add
mov
xchg
and
popf
push
xor
jp
and
mov
dec
jmp
ja
aas
lods
sub
mov
je
xor
sub
inc
xchg
cmp
fistpl
pop
dec
cmp
inc
aas
push
mov
xchg
loope
mov
inc
test
jnp
inc
sub
mov
jg
aas
pop
jle
out
lea
xor
jbe
fistl
enter
test
gs
cmp
faddp
xor
int
mov
push
xchg
stos
int
xor
cmp
cld
jnp
xor
pop
jp
ds
cmp
xchg
dec
push
test
jl
addr16
sub
sbbl
xor
or
mov
inc
adc
jnp
mov
inc
popf
mov
mov
sar
shll
mov
push
xchg
js
jl
cmp
movsl
add
outsb
ret
test
mov
cld
call
dec
push
xchg
xor
leave
inc
inc
add
or
sub
subl
push
in
insb
jp
leave
fsubrl
test
ss
xchg
testl
pop
outsb
inc
inc
xchg
mov
sub
adc
sub
pop
xchg
push
aas
mov
in
data16
imul
xchg
test
pop
jl
cmp
pop
outsb
xor
dec
mov
gs
inc
dec
das
adc
sahf
push
aam
mov
xchg
mov
movsb
adc
add
push
sub
sub
push
pop
cltd
enter
adc
xor
dec
mov
ss
jns
mov
sbb
mov
outsl
or
cmp
insl
adc
aas
lret
jb
ret
dec
cmpsl
in
nop
push
sub
sar
xchg
push
aas
idivl
sub
mov
popf
add
dec
pop
dec
xchg
mov
push
xorb
xchg
push
inc
mov
das
scas
sbb
sub
in
sub
cmp
push
mov
loopne
inc
xor
lret
jp
in
push
insl
inc
cmpsb
jno
hlt
cs
adc
inc
sahf
jg
inc
add
ret
test
scas
out
mov
xor
scas
mov
nop
dec
popf
loop
ds
cmp
push
cmp
fnstsw
fisttpll
cmp
testb
fsubr
mov
sub
xor
lret
mov
outsb
mov
adc
ds
ds
xchg
xor
jb
xchg
mov
addr16
dec
cmpsb
push
call
pusha
cmp
bnd
push
sub
adc
mov
sti
push
dec
inc
xor
js
inc
jo
lret
mov
inc
inc
or
ds
stos
dec
std
xchg
ds
cmp
cmp
hlt
jle
test
xor
and
mov
lea
pop
cmp
cmp
mov
cmp
xor
mov
roll
mov
insb
movsl
aas
pop
mov
push
push
mov
dec
test
push
push
cmp
js
es
out
jmp
imul
jnp
mov
xor
jae
ss
into
lock
inc
scas
pop
cmp
dec
inc
cmp
rolb
ds
xor
je
dec
inc
enter
xor
fstps
xchg
enter
aaa
test
push
xor
pop
push
sub
push
jge
int
lock
ret
and
and
jo
mov
insb
push
pop
jle
jns
fcoml
inc
dec
cmpb
mov
inc
mov
cmp
mov
outsb
mov
push
xchg
push
inc
mov
outsb
mov
push
push
push
andb
adc
les
inc
or
ds
mov
xor
insl
inc
ret
test
mov
cld
int3
sbb
das
imul
mov
lods
andl
xor
jg
hlt
lods
pop
mov
das
jge
cld
cmpsb
inc
jnp
jmp
out
mov
loopne
mov
adc
out
lock
fidivrl
jo
adc
lds
lret
jbe
cs
ja
push
hlt
in
aaa
ljmp
pusha
pop
scas
cs
ja
or
jge
insb
mov
and
jb
dec
out
push
add
lods
test
sarl
push
divl
pop
adc
testb
js
dec
inc
mov
sbb
cs
scas
je
lods
repnz
aaa
in
dec
in
sub
pop
cmp
pop
scas
outsl
adcb
or
jno,pt
cmp
cmp
or
adc
scas
ret
js
lods
jbe
sbb
addr16
test
in
xor
dec
or
ret
jge
flds
mov
cmp
cs
push
mov
adc
movsl
and
sbb
lds
xor
pop
sbbb
and
cld
add
cmp
inc
popa
hlt
xor
inc
sub
jb
sub
cmp
mov
inc
pop
xor
push
sbbb
pop
xchg
in
push
das
cli
adc
inc
sub
shll
xchg
ret
test
insb
mov
xchg
dec
ds
outsl
insl
sub
push
sbb
xlat
inc
insb
leave
aas
xor
ds
jl
jecxz
stos
mov
sub
push
mov
inc
ret
shlb
jmp
fildl
lret
test
fs
outsb
push
cld
aas
inc
pusha
addr16
fst
and
jle
sub
add
push
mov
pop
xchg
fldl
mov
ret
imulb
subb
pusha
xorb
fisubl
hlt
cmpb
adc
pop
popf
inc
scas
in
xor
stc
je
cmc
fsubr
subl
iret
jmp
addr16
dec
mov
scas
jl,pn
sbb
arpl
dec
dec
cmp
push
add
jp
fsubrs
mov
push
cli
ficoml
adc
xchg
push
pushf
jecxz
mov
out
ljmp
add
cwtl
sahf
push
aaa
inc
popf
xor
add
orl
jnp
sub
test
int3
test
push
pop
pushf
dec
jne
stc
sub
lods
je
sub
ss
mov
add
add
jnp
addr16
mov
or
dec
mov
int
std
loopne
inc
fldl
lds
push
ljmp
xchg
mov
jl
in
mov
iret
cmpb
inc
dec
mov
jo
je
cmp
jne
or
mov
inc
sbb
jbe
jo
orb
in
inc
pushf
lea
mov
loop
jno
pop
std
cltd
aas
cmp
sub
dec
inc
clc
cmp
or
push
pop
push
in
jge
mov
inc
insb
push
and
mov
adc
xchg
and
xor
pop
or
pop
pop
fs
jle
xor
mov
mov
insl
dec
das
ja
sub
xchg
jle
jl
sbb
xchg
ds
and
inc
pop
dec
sbb
dec
and
lods
and
push
sub
cmp
mov
jne
mov
inc
adc
test
add
mov
pop
scas
mov
dec
addb
out
and
in
js
sbb
roll
pop
push
adc
outsl
xchg
nop
dec
pop
mov
js
inc
cmc
fs
rolb
stos
dec
xor
pop
cmp
cmp
roll
jbe
outsl
xchg
sti
sbb
aam
outsb
xchg
mov
sbb
lods
adc
test
push
movsb
push
mov
mov
pop
mov
jg
mov
cmp
loop
mov
ljmp
mov
pop
mov
test
inc
cmp
cmp
xor
adc
and
xor
inc
sub
pop
into
add
jno
mov
and
mov
mov
mov
inc
shrl
mov
jbe
adc
xchg
jmp
es
inc
and
insl
out
lods
cmpsb
cld
leave
je
imul
xor
inc
adc
jbe
mov
inc
xor
push
dec
and
dec
testl
jmp
aam
dec
dec
hlt
push
aad
inc
pop
rclb
icebp
pop
xchg
test
mov
jl
jle
xchg
jbe
push
add
and
cmp
pop
sbb
in
ficoms
sub
cmp
adc
inc
jae
aaa
cmp
rolb
mov
cmp
jg
lods
adc
or
and
mov
clc
leave
cmp
insb
mov
push
pop
fbld
jmp
sub
movsb
bound
xor
mov
jmp
mov
outsb
ss
adc
xchg
xchg
xchg
jnp
inc
inc
push
mov
std
aaa
cmp
pop
inc
shll
adc
jge
inc
xor
inc
popa
sbb
bound
cmp
rcrb
xchg
xchg
push
ss
aas
lcall
and
mov
mov
in
pop
xchg
sbb
rorb
clc
lcall
fcompl
mov
into
pusha
in
sub
in
push
mulb
in
xchg
xchg
negb
push
and
mov
nop
sub
test
push
loopne
dec
xor
pop
jmp
outsb
add
push
test
push
divl
push
es
jns
out
mov
inc
mov
pop
adc
popl
sub
sbb
int
les
das
dec
xlat
jb
xchg
fbstp
adc
add
out
lods
ret
pusha
mov
inc
xor
bound
sub
sub
mov
pop
xor
in
das
outsl
dec
stos
xor
scas
cmpl
pop
leave
adc
mov
scas
jo
das
inc
sub
cmp
adc
sbb
mov
or
add
orb
testb
cmp
pop
fwait
testb
sub
std
jmp
lods
cs
push
test
jno
sbb
sbb
clc
add
mov
pop
jo
clc
sub
add
jmp
loopne
les
mov
addr16
xchg
inc
adc
je
out
push
mulb
ljmp
xchg
mov
xchg
xchg
enter
jo
sbb
movsl
lock
mov
jl
inc
lods
push
fs
repnz
and
mov
sub
jl
dec
pop
jp
or
dec
xor
mov
es
popa
jle
ja
jo
lret
daa
sub
in
pop
jno
push
inc
fs
inc
cmp
and
mov
xor
inc
int3
or
ds
mov
inc
test
popf
pop
xor
orl
int
sub
clc
xchg
test
ret
aas
sbb
or
and
sub
adc
pop
pop
xor
arpl
pop
jno
sub
sbb
xchg
dec
or
out
movsl
pop
inc
lock
outsb
and
adc
adc
cmpsb
divl
xchg
repnz
push
mov
aaa
mov
lds
xor
mov
inc
jae
sub
push
nop
ss
pop
and
add
dec
inc
mov
in
cltd
pushf
insb
mov
jle
mov
push
inc
or
jl
xchg
xchg
insb
mov
pop
xchg
push
cmp
and
gs
mov
insl
pop
or
daa
cmc
lahf
lea
arpl
iret
lds
adc
out
lock
pop
dec
adc
mov
sub
sub
cli
mov
push
sub
mov
jl
and
mov
and
mov
ror
mov
and
mov
xor
inc
paddusb
mov
dec
adc
leave
popf
aaa
mov
pop
mov
nop
push
push
xor
out
inc
inc
xchg
andl
in
mov
add
jmp
test
fistl
lock
add
mov
push
repz
lahf
mov
test
jge
int
hlt
cs
aas
adc
push
bound
mov
lock
scas
xorl
jmp
inc
cmp
shlb
adc
lcall
cmp
adc
scas
inc
ss
js
mov
clc
cmp
cs
mov
cmc
push
cmp
add
cmp
mov
xor
push
push
dec
inc
mov
dec
xchg
ds
repz
test
lret
les
lods
jp
sahf
mov
xor
dec
adc
xor
cmp
in
loopne
mov
dec
es
mov
mov
aas
rolb
lret
orl
cltd
cmp
sub
ds
cmpsl
xor
inc
sbb
fiadds
cmp
pop
mov
mov
mov
push
xor
aaa
cmp
xor
mov
jl
sub
cld
nop
ljmp
xor
pushf
inc
cwtl
aaa
test
outsl
movsb
dec
mov
dec
das
je
pop
fwait
sbb
sub
jg
jns
lret
and
repz
sbb
jns
push
xchg
xchg
push
out
add
dec
pop
jnp
cmp
xlat
mov
pop
in
adc
loopne
cmp
outsb
jp
test
imul
orl
add
dec
jo
scas
pop
in
lods
push
mov
repz
adc
add
pop
cs
add
inc
scas
rorl
pop
adc
ds
jge
popfw
repz
add
adc
and
push
xlat
arpl
sarl
adc
pop
idiv
add
cld
cmpsb
xor
xor
jno
jl
iret
push
das
pop
out
dec
das
pop
lcall
mov
sub
mov
jb
fisttps
sub
mov
lods
jne
cs
popa
and
push
dec
inc
push
mov
pop
mov
insl
dec
imul
jle
push
mov
pop
mov
xchg
mov
outsb
mov
jp
mov
xlat
push
push
out
mov
pop
cmpl
add
xchg
add
mov
leave
sahf
js
sub
sbb
or
das
out
dec
sub
ja
xor
inc
inc
pop
rorl
imul
and
mov
add
xor
add
fdivs
cmp
loope
cmp
sub
mov
pop
xor
je
shll
pop
lret
lock
ja
mov
ljmp
xor
adc
aas
mov
push
stos
ror
stc
sub
nop
jns
inc
sub
xchg
stos
xchg
add
mov
les
jge
insl
sub
pop
and
das
in
cld
pop
test
add
push
add
push
xor
psadbw
sbb
pop
dec
cmp
xor
jle
iret
aaa
or
sbb
lds
mov
mov
movsb
adc
outsl
or
xchg
ds
sub
sbb
stos
ss
cmp
test
mov
jge
push
pop
lock
cmp
mov
inc
push
sbb
xor
in
mov
sub
jg
gs
and
aam
fildll
stc
cs
inc
loopne
mov
mov
repnz
out
sti
inc
jns
mov
inc
jns
add
xchg
imul
pop
outsl
cmp
nop
imul
mov
mov
jg
repz
sub
adc
pushf
ss
std
scas
andb
add
cmp
in
in
mov
testb
popl
lcall
cmp
or
inc
xor
cmp
inc
and
sub
pop
mov
jg
mov
sbb
dec
pop
mov
repnz
test
and
fiadds
jns
shl
outsl
scas
push
adc
adc
fsub
rcrb
int3
leave
inc
push
mov
adc
jmp
jb
test
xor
out
mov
jg
cs
hlt
pop
jg
or
jge
mov
dec
stc
fiaddl
orb
js
jl
jp
xchg
test
addb
insb
pushf
cwtl
mov
movsb
dec
mov
fs
loop
loope
cltd
shlb
dec
push
or
fldcw
mov
jp
dec
push
mov
pusha
fs
stos
xchg
or
push
insb
nop
hlt
les
pop
or
imul
pusha
lock
out
ljmp
inc
lods
rclb
sbb
jae
popa
adcl
je
xchg
repz
dec
adc
pop
push
scas
or
adc
inc
xchg
or
dec
xchg
sub
dec
xchg
hlt
pop
pop
jo
js
mov
je
cmc
out
popa
das
xor
lods
xchg
jo
sti
jl
mov
jb
sbb
cmp
sub
jl
sub
insl
out
jns
outsl
lods
negl
fs
push
xchg
mov
dec
jnp
shrb
adc
scas
lcall
sbb
sub
hlt
dec
into
aas
dec
test
xchg
mov
test
dec
and
xor
add
adcb
shll
in
aas
out
ljmp
mull
push
lock
rcll
xchg
pop
and
pushf
lret
scas
mov
lret
movsb
nop
leave
lcall
ss
xchg
js
fmul
adc
addl
icebp
shll
fs
jecxz
dec
inc
lods
jg
jno
pushf
mov
push
inc
imul
pop
jp
jge
pop
ret
cmp
idivb
pop
cmpsl
adc
dec
inc
ss
imul
gs
mov
adc
popa
mov
push
pusha
sub
loope
ror
int
js
adc
ds
mov
das
mov
stos
add
cmp
adc
lods
push
jl
cmp
ficoms
cwtl
mov
push
addr16
sbb
sbb
cmpl
adc
repz
mov
mov
scas
out
mov
test
leave
mov
jns
in
or
cmp
push
jl
push
mov
iret
jbe
push
add
nop
pop
mov
push
mov
ds
cmp
rol
gs
stos
js
push
pop
mov
cmp
lods
lcall
dec
mov
dec
lret
push
cmp
std
addr16
mov
in
push
and
jl
popa
mov
hlt
push
ja
dec
ss
jne
repnz
lods
mov
sub
fists
cltd
aaa
stos
cmp
aas
xchg
dec
sub
inc
mov
dec
xor
jle
lcall
fcmovu
jns
insl
pop
push
ljmp
outsb
push
push
mov
mov
push
jg
sub
lock
xchg
mov
sub
mov
cmp
mov
fcoms
or
dec
cmpsl
pop
dec
inc
mov
dec
push
ja
in
inc
ja
sub
shlb
jl
fists
sub
mov
jb
cltd
add
xchg
cmp
xor
mov
jo
ret
pusha
les
jmp
int3
mov
cmp
les
popf
insl
test
mov
adc
cmp
xchg
icebp
pop
xor
testl
aaa
inc
jle
fidivrl
mov
and
push
popl
push
push
inc
js
xor
call
mov
dec
and
pop
in
gs
cmp
mov
sub
arpl
pop
mov
push
mov
aam
in
repnz
ss
cmp
bnd
mov
fdivrl
insb
aaa
pop
mov
leave
jne
adc
aaa
cmp
insl
pop
outsb
inc
push
nop
xchg
xchg
mov
mov
adc
or
int
fnstsw
ds
in
ja
cmpsl
adc
inc
dec
in
cmp
shr
fmulp
xor
inc
add
jp
mov
and
cltd
inc
and
gs
mov
pause
jo
push
adc
ss
aaa
jno
std
xchg
and
jl
jle
pop
pop
dec
cld
add
sub
mov
add
out
lea
jne
je
mov
and
je
mov
cmpsb
push
gs
jg
pop
inc
xlat
lods
cmp
and
jge
push
inc
sbb
mov
sbb
cld
and
cmpsl
mov
sub
das
xor
add
xor
xor
insl
fildll
pop
sbb
or
sub
orl
rolb
gs
or
adc
pop
mov
cmp
ss
xor
xor
mov
push
dec
pusha
push
in
inc
adc
leave
pop
jmp
insl
xor
je
jnp
mov
cmp
addr16
push
in
jbe
cmp
sub
inc
push
adc
rorl
and
jle
mov
add
push
outsb
mov
adc
pop
in
inc
cs
push
lcall
inc
push
insb
push
lahf
lock
adc
hlt
fwait
jae
or
fdivl
cmp
add
cmp
aam
xor
cs
enter
cmp
outsb
lret
mov
rcrb
ret
rorb
pop
mov
leave
pushl
mov
pop
stos
das
test
ljmp
jbe
fisttps
pop
jp
inc
mov
xor
push
ss
ja
subb
sbb
xchg
push
ds
dec
pop
xor
ret
push
insl
rorl
je
in
pop
jo
inc
sbb
dec
rcll
dec
dec
pop
pop
fstpt
adc
inc
xchg
aaa
dec
add
add
or
aam
insb
inc
or
mov
fdivrs
mov
and
sar
pop
dec
lock
xor
mov
hlt
test
scas
repz
inc
sbb
xchg
out
sbb
push
inc
inc
dec
insb
addr16
insb
cmpsb
call
mov
fs
daa
aas
lds
fldt
push
bnd
jle
loopne
scas
orb
jp
sar
arpl
ss
xchg
je
dec
cmp
stos
pop
sbbb
shlb
into
push
add
jle
inc
jnp
lods
loopne
out
insl
adc
mov
dec
fcomps
cmpl
cmp
xor
subl
cmp
int3
push
lock
mov
test
or
inc
cli
das
jle
inc
pop
adc
scas
or
into
js
push
stos
iret
sti
push
and
ds
add
test
adc
and
mov
pusha
fcoml
mov
mov
jp
sbb
push
mov
cmpsl
pop
adc
inc
xor
sbb
hlt
and
xor
nop
mov
push
xchg
mov
inc
xor
imul
popa
jp
push
xorl
sub
sbb
add
and
sahf
and
jle
push
cmp
xor
adc
and
inc
push
iret
push
or
stc
das
jmp
mov
pop
mov
sub
inc
push
idivb
push
or
jg
pop
inc
loopne
or
shl
xorl
cltd
lret
xchg
lods
xabort
add
adc
cld
and
lds
fcomps
outsb
inc
jno
movsl
shrb
mov
pop
fidivl
sub
hlt
mov
mov
gs
sti
loope
pop
scas
and
inc
pop
mov
aam
xor
and
mov
adc
inc
mov
sti
out
xchg
and
mov
aas
pushf
addb
push
dec
and
scas
in
xor
test
or
sub
push
cmp
dec
and
dec
aaa
and
pop
mov
fdivrs
cmp
subl
ja
add
jle
movb
cmp
pop
outsb
mov
cwtl
mov
pop
dec
in
xor
sbb
imul
fadd
ljmp
jae
les
xchg
out
scas
adcl
std
and
jns
mov
sub
xchg
shrb
adc
adc
mov
push
adc
movsb
das
jnp
sub
jge
repz
std
into
ficoms
push
cmp
sbbl
cld
js
ds
test
aaa
jge
mov
nop
mov
inc
inc
data16
push
sbb
lock
mov
int
leave
jmp
lcall
jg
mov
push
inc
outsb
mov
cmp
cmp
insl
mov
rcr
orb
out
cmp
mov
cli
xor
scas
sub
push
jge
outsb
lods
orb
lret
cmpl
pop
add
das
das
xchg
clc
int3
arpl
jb
push
hlt
mov
aaa
and
sbb
jp
mov
sti
and
mov
imul
and
mov
xlat
add
addr16
xchg
stos
cs
fbld
stos
mov
sbb
dec
inc
mov
mov
xor
push
push
dec
lods
lods
pop
movsb
sub
lock
fisttpll
addr16
lret
test
pop
mov
sarb
test
dec
lds
hlt
test
xor
movsb
cmp
ss
xor
sub
mov
push
push
dec
mov
push
xor
adc
sub
mov
push
test
adc
scas
xchg
sub
popf
sub
xor
jbe
push
adc
idivl
insb
push
inc
mov
mov
inc
mov
sbb
out
in
lret
adc
xchg
cmp
cmc
stos
test
xchg
test
lea
inc
aam
mov
xor
push
xlat
push
insl
mov
mov
int3
dec
shll
rcrl
mov
shl
ss
iret
bnd
ss
addr16
ret
pop
mov
and
adc
ret
lret
jg
adc
es
push
jp
sbb
pop
mov
ficomps
cmp
push
jecxz
mov
je
inc
xorl
mov
int3
insb
add
dec
sbb
mov
inc
shl
aaa
insl
loopne
int
adc
jno
mov
orl
cs
dec
adc
in
cmc
decl
mov
add
negb
or
jecxz
pop
gs
ret
loopne
aas
insl
adc
bound
subb
or
fs
call
ret
xor
repz
sub
xor
xor
scas
out
jge
inc
mov
das
inc
mov
je
push
test
sarl
mov
inc
adc
insb
fcomp
pop
jl
test
inc
and
repz
mov
and
arpl
out
pop
dec
jmp
dec
andl
add
xor
push
pop
mov
dec
and
sbb
ds
sub
push
mov
adc
or
push
mov
nop
lret
push
scas
cli
out
outsl
sub
and
fisttpl
cmp
mov
ret
and
sub
mov
xchg
sub
push
scas
daa
xor
rcll
popa
inc
mov
jbe
xchg
mov
insb
mov
mov
and
or
lret
mov
dec
ret
mov
xor
sbb
aas
scas
lea
or
icebp
insl
in
lds
push
aas
in
sbb
mov
aaa
ds
cmp
inc
je
fdivrs
xchg
dec
sbb
xchg
mov
inc
xchg
stos
sbb
pop
pop
pop
dec
or
ljmp
xchg
xor
test
out
inc
ss
and
popa
mov
rcll
cmpl
stos
xor
sbb
insb
sbb
mov
add
pop
loop
sbb
mov
test
test
notl
cmp
in
daa
xlat
lds
adc
sub
mov
xchg
loop
jmp
mov
int
xor
pop
push
sub
lock
and
xchg
inc
sahf
out
sbb
lret
adcl
in
inc
aaa
mov
jne
clc
mov
jne
xor
lahf
or
call
sbb
mov
push
pandn
fsubs
adc
dec
jo
jb
inc
pop
jle
jne
jmp
imul
inc
aas
ds
fdivrs
mov
adc
sbb
sub
addl
mov
jnp
pop
mov
mov
adc
jb
cmp
call
loop
cs
cld
out
mov
pop
jecxz
mov
hlt
and
xchg
dec
push
cmpb
pushf
jl
adc
addr16
push
add
cmp
test
push
pusha
sarb
push
loope
aas
add
loop
scas
cmp
scas
mov
shll
inc
cmp
cs
xchg
jl
jno
imul
inc
dec
jg
jl
shlb
scas
js
cld
pop
push
and
push
movzwl
or
movsb
xchg
inc
cmpb
cmp
mov
shll
xor
xchg
or
and
jns
xlat
mov
into
sbb
pop
and
in
fs
jns
mov
sub
xor
pop
sbb
inc
rcrl
add
adc
in
add
pop
xlat
pop
push
lock
xor
inc
and
dec
popa
jns
hlt
and
cmp
mov
mov
stos
pushf
cmp
cmp
push
xchg
scas
adc
inc
pusha
enter
and
lods
xorb
popf
rcll
andb
aad
push
xchg
mov
mov
pusha
insl
mov
xor
or
xchg
sarb
adc
or
outsb
testl
pop
sarl
pop
adc
jbe
subb
inc
push
mov
mov
fmul
mov
pop
movsb
pop
xchg
sbb
jae
xchg
inc
or
dec
xchg
dec
xor
int
adc
mov
mov
jne
dec
repnz
imul
pop
push
shl
sbb
clc
dec
pop
adc
xor
mov
aas
jns
lods
stos
adc
pop
cs
inc
cmp
xor
lds
push
inc
and
jae
pop
fwait
mov
adc
orl
pop
test
clc
xor
add
jae
add
mov
xor
adc
pop
scas
pushf
mov
push
jo
iret
insb
sub
out
xor
test
ret
dec
push
addr16
sahf
push
xor
push
movsl
aaa
mov
rcrl
lea
push
push
in
lret
stos
std
adc
jnp
cmp
jmp
pop
xchg
add
xchg
adc
xchg
inc
movl
in
push
mov
or
inc
repz
jp
dec
pop
xor
outsl
push
push
mov
adc
jne
mov
add
sti
inc
xchg
les
mov
and
int
xchg
lahf
pop
or
mov
mov
adc
in
lret
in
inc
adc
push
xchg
shlb
leave
cmp
loope
inc
dec
sbb
cmp
movsl
jne
int3
repz
push
mov
push
push
stos
insl
fadds
mov
jnp
jno
mov
pop
out
or
notl
mov
aaa
fincstp
mov
fs
insb
mov
mov
insl
mov
mov
jmp
pop
ds
mov
pop
pop
test
cmp
sbb
es
dec
sub
mov
outsb
les
inc
mov
pop
repnz
adc
add
movsb
jg
xchg
or
xchg
dec
jbe
not
mov
inc
mov
sti
adc
movsb
pop
cmp
imul
ss
popa
scas
int3
xlat
add
xchg
xor
mov
push
out
scas
sarb
inc
das
push
mov
out
sub
rcll
out
outsl
aaa
aad
adc
ljmp
sarl
test
push
dec
in
adcb
into
loopne
jl
test
repz
ss
int
inc
js
in
dec
dec
dec
hlt
orl
cmp
pusha
andb
push
fisubl
mov
mov
push
cmp
cwtl
repz
jae
pop
jp
mov
and
push
lcall
inc
into
fdivrl
xchg
or
add
test
mov
xor
inc
scas
aam
lods
mov
sti
inc
xor
xchg
sbb
xchg
cmp
cmpl
inc
ds
push
fldl
cmp
js
jbe
in
jbe
scas
inc
cld
incb
xor
jge
mov
xor
jmp
jo
pop
mov
into
jnp
outsl
mov
pop
jl
jns
cs
sbb
out
xor
rep
mov
jnp
xor
sti
ss
ljmp
mov
mov
imul
push
fnstsw
mov
sahf
mov
arpl
xchg
aaa
aaa
adc
je
sub
jle
mov
add
and
push
push
pop
hlt
mov
sub
mov
clc
daa
aas
xor
lret
into
insl
pop
push
ja
mov
cmp
test
stos
mov
stos
das
outsb
xor
sbb
rcll
mov
js
aaa
pop
add
sub
cs
and
cwtl
mov
adc
daa
add
loope
pop
sub
jo
ret
insb
popf
imul
cwtl
fstpt
mov
test
sub
inc
sub
idiv
shr
push
push
aas
xor
dec
inc
xchg
addr16
cmp
dec
cmp
pop
xor
sub
pop
pop
insb
add
mov
xchg
cmpl
pusha
jno
arpl
mov
add
lea
cmp
jns
cli
inc
jae
mov
test
jmp
sbb
cli
jl
pop
inc
or
mov
inc
repnz
out
fidivrs
nop
xor
xor
clc
cwtl
and
and
mov
push
xor
push
add
add
add
mov
addr16
int3
lock
mov
cld
jnp
xor
sub
fnstcw
xchg
sub
push
lret
shll
xlat
mov
jne,pt
sbb
fcoms
in
adc
sbbl
and
adc
dec
inc
sub
int3
mov
rcrb
int3
dec
mov
ss
clc
scas
push
bound
add
shrb
out
xchg
fldpi
fs
in
or
movsb
std
sub
sbb
cs
push
cmp
stos
add
jl
cltd
stc
mov
mov
pop
inc
jl
shll
into
inc
push
xchg
dec
inc
sti
mov
cmpsb
mov
mov
je
rolb
adc
clc
jne
int3
mov
out
dec
xchg
or
cs
lret
xor
xor
mov
jae
mov
mov
mov
sub
fnstenv
outsl
push
pusha
cmp
and
xor
bound
idivl
sarb
sub
dec
mov
sti
pop
xor
ret
jbe
outsl
jae
loope
dec
sarb
mov
sti
mov
xchg
xor
mov
sbb
jb
test
jb
mov
dec
push
lock
push
inc
jo
xchg
add
and
dec
xchg
aaa
sub
or
mov
mov
arpl
adc
fs
cmc
sub
ret
xor
mov
out
outsb
adc
adc
pusha
push
cmp
das
into
jbe
outsb
addr16
test
ja
dec
mov
mov
sub
cltd
adc
je
jp
lret
dec
mov
stc
cwtl
xchg
cmp
sub
ja
ss
jae
mov
jp
mov
sub
adc
and
xor
movsb
xchg
xchg
ja
and
ds
fcoml
aam
dec
dec
dec
cmp
mov
sti
mov
aas
sub
push
inc
imul
pop
mov
daa
mov
dec
int3
mov
push
inc
inc
jae
mov
jo
dec
mov
adc
or
cmp
movsb
pop
mov
cmp
push
jae
xor
xor
sub
sti
jno
es
pop
jmp
lds
jo
dec
shlb
mov
sbb
xchg
aam
and
inc
ret
cltd
sbb
cmp
and
mov
inc
pop
adc
inc
push
shlb
dec
xor
push
adc
aas
xchg
hlt
push
or
dec
stos
inc
outsl
test
in
push
or
hlt
and
inc
imul
lock
push
test
cmp
lret
test
iret
dec
and
dec
jo
movsb
dec
mov
lock
mov
js
inc
push
sub
je
dec
outsb
cmpsl
mov
cmpl
icebp
outsl
push
push
xchg
movsb
dec
mov
imul
push
mov
into
test
pop
lock
dec
mov
fcoml
pop
rcl
push
in
pop
lock
mov
es
lock
push
jp
mov
dec
and
mov
pop
mov
dec
sub
push
pushf
cmp
sub
enter
sub
je
std
xor
push
pusha
mov
std
push
iret
sub
pusha
push
mov
xor
dec
aaa
cmp
sub
add
bound
pop
repnz
sub
dec
xlat
lret
dec
outsb
iret
out
dec
dec
sbb
dec
push
xor
push
lock
pop
dec
inc
outsl
pushf
dec
sbb
sub
and
dec
xor
enter
inc
out
push
std
pop
negb
fimull
mov
fs
dec
lea
mov
jp
add
adc
test
add
xchg
and
mov
and
aam
cmp
adc
adc
sub
xor
stc
nop
ret
inc
pop
sub
mov
aam
repnz
dec
pop
and
mov
jbe
mov
imul
cmpl
cmp
mov
cmp
or
mov
insl
cs
jno
stos
add
sbb
pop
test
stos
xor
xlat
jnp
sarb
xchg
rcrb
inc
pop
mov
mov
pmaddwd
out
sbb
pop
pop
subb
lock
sahf
mov
clc
mov
jb
lods
repnz
cmp
ret
push
mov
xor
les
jo
mov
cmp
mov
bound
push
scas
mov
mov
imul
dec
nop
mov
idivb
push
repnz
fistpll
pop
sbb
aaa
stos
addr16
jl
mov
cmp
popa
push
ja
loopne
pop
jns
je
or
ds
dec
scas
push
sbb
jnp
ss
xor
lds
popf
mov
repz
data16
rorl
pop
fs
push
cli
push
add
mov
mov
fs
stos
add
or
sub
mov
mov
in
push
fnstenv
out
mov
mov
inc
insb
out
jle
pop
push
imul
push
mov
adc
dec
ja
fadds
lds
test
pop
sbb
or
mov
adc
xor
scas
pop
rep
cmc
mov
arpl
jg
std
cmp
ds
add
xor
jno
imul
mov
adc
nop
xor
gs
mov
jmp
punpcklbw
sar
mov
xchg
sarb
pop
xor
sarl
xor
mov
nop
cmp
aaa
adc
es
or
and
aas
and
inc
jmp
int
or
xchg
sub
pop
sub
jb
ljmp
xchg
js
xor
mov
cmp
aas
mov
insl
add
xor
adc
cmp
enter
sub
adc
pop
push
cs
outsl
xorb
fs
ret
out
insb
jl
mov
mov
jmp
cmpsl
add
mov
popa
popf
adc
lds
mov
test
inc
fdivrl
and
ja
in
push
jmp
or
xorl
inc
fsubr
dec
xchg
movsb
mov
test
nop
mov
pop
sub
mov
iret
pop
pop
mov
inc
in
mov
xchg
stos
pusha
scas
out
std
in
and
outsb
jle
xchg
sbb
inc
scas
or
push
popa
rclb
movsl
lret
loope
jns
adc
xlat
das
jns
xor
daa
push
std
adc
pop
mov
cmp
sbb
test
jbe
cld
movsl
sbb
sub
cmp
lcall
fidivrs
addr16
adc
jb
dec
inc
sub
fmull
jl
iret
mov
pop
xchg
pop
aaa
test
dec
cmpsl
mov
mov
cmpsl
sbb
outsb
rcr
outsb
dec
outsb
fnstsw
cmp
out
xor
ss
cmc
push
test
sbb
adc
mov
xchg
inc
icebp
fstpl
sub
mov
xchg
dec
aas
push
mov
jge
test
imul
sub
mov
mov
test
cmp
sbb
cmp
mov
scas
xchg
hlt
sub
mov
out
ret
or
test
ret
fldcw
xchg
xor
hlt
call
add
inc
scas
subl
ds
in
daa
ss
pop
mov
rcl
add
mov
cmpps
mov
sbb
push
mov
cmp
roll
cmpsl
dec
xor
sub
inc
into
hlt
cwtl
push
fscale
xor
in
dec
xchg
push
adc
pop
mov
int
leave
xor
and
push
inc
dec
fs
sbb
bound
and
xchg
out
das
jno
sub
mov
test
xor
in
fildll
sbb
sahf
mov
xor
sub
fisubrs
pop
ret
push
decb
cmp
dec
xor
add
lods
out
je
cmp
std
leave
jge
xchg
mov
inc
mov
push
into
dec
dec
fs
mov
mov
push
cmp
mov
pop
outsb
mov
adcl
dec
add
sub
outsl
ljmp
cmpl
sbb
and
sub
add
dec
xrelease
inc
adc
lock
mov
das
jmp
lea
or
mov
mov
dec
xor
xor
mov
inc
je
les
out
xor
xchg
push
std
inc
mov
push
and
mov
xchg
outsl
sahf
mov
xor
and
das
sub
xor
sbb
dec
cmp
in
mov
dec
es
push
cs
jnp
std
pop
into
push
jg
orw
adc
inc
cmp
pop
push
xchg
add
les
cld
mov
sub
insb
push
stos
sub
imul
ds
popf
add
das
adc
fwait
jecxz
outsb
or
push
das
and
dec
push
outsl
mov
daa
orl
xchg
push
mov
push
xor
push
das
sbb
les
sbb
lock
lds
jl
pop
jmp
outsl
dec
rcl
imul
lea
adc
mov
nop
and
mov
add
insl
adc
jmp
push
push
test
out
and
sbb
in
push
inc
and
dec
pusha
daa
xor
arpl
dec
xchg
mov
les
sbb
push
add
idivl
jno
dec
push
and
icebp
or
and
in
push
adc
inc
adc
insl
and
mulb
mov
out
push
and
jmp
in
push
and
push
lods
or
and
lcall
loope
sub
aaa
addb
cld
jmp
add
ljmp
hlt
aaa
sub
xor
pop
jns
push
mov
hlt
ljmp
add
sti
pusha
xchg
test
inc
sti
js
rcrl
xor
clc
dec
fs
sbbb
mov
mov
mov
lret
insb
out
mov
adc
loop
inc
push
jmp
push
jp
push
out
cmp
pop
xor
dec
push
shlb
xchg
push
loope
fsts
inc
fidivrl
jge
mov
jb
cli
pop
mov
scas
aam
mov
int
adc
cmp
lock
jno
cmpl
stos
xchg
xor
lods
mov
inc
cs
mulb
xor
jle
int3
dec
cmpl
insb
dec
mov
push
cmp
cmp
popa
xor
sub
dec
ret
or
in
fs
or
in
in
mov
insl
mov
fdivl
xchg
insb
inc
xchg
pop
add
ret
pusha
pushf
in
sub
or
cmc
push
mov
jb
cmpsb
mov
sbb
inc
sub
loop
pop
mov
lret
dec
shl
add
lret
mov
inc
push
lret
jnp
lahf
clc
ret
and
in
and
xchg
cmp
push
movsb
loopne
add
gs
icebp
loopne
pop
pop
add
and
push
xor
push
push
push
pop
scas
xor
sub
cs
push
jp
call
aad
popf
cli
jbe
jecxz
inc
ds
in
pop
int
das
jbe
or
inc
dec
scas
adc
jns
pop
lock
fwait
test
xor
mov
loopne
mov
bound
pop
xor
mov
es
xchg
cld
dec
push
push
addr16
lret
ret
inc
add
adc
pop
lock
dec
sbb
jmp
xchg
and
cmp
ret
in
jg
orb
xor
dec
sbb
stos
scas
and
xor
js
ja
arpl
jp
scas
dec
jo
mov
mov
cld
jae
repz
call
pushf
shr
lret
jmp
mov
outsb
mov
movsb
out
aam
mov
jno
enter
js
dec
xchg
jp
jae
inc
jo
jno
push
imul
sbb
pop
inc
into
dec
movsb
cmp
dec
mov
ds
mov
lds
mov
push
out
sarl
test
xchg
cld
js
jl
add
daa
cmc
jp
ret
test
cmp
or
xchg
mov
mov
cwtl
mov
in
mov
inc
lock
xchg
stos
dec
mov
pop
sbb
sbb
out
mov
push
mov
scas
dec
int
iret
pusha
dec
xor
mov
cmpb
or
dec
mov
mov
mov
cwtl
int3
movsb
in
fdiv
outsb
mov
aam
in
xchg
insb
lods
dec
iret
mov
mov
xor
fs
jl
aaa
test
stos
les
sbb
adcb
mov
mov
xor
ret
mov
jge
mov
sbb
in
sbb
imul
lock
test
adc
jno
mov
mov
xor
jno
lds
sub
add
jo
cmp
clc
xor
mov
stc
aaa
add
imul
xchg
cli
test
push
testb
xor
push
push
mov
adc
hlt
jae
fdiv
je
mov
addb
sub
mov
pop
cmp
or
xor
xor
pop
push
rcll
in
sbb
lock
sub
cmp
aaa
or
cld
push
xor
lods
lods
lock
lods
mov
pusha
pop
and
fcomps
mov
out
out
pop
insb
sub
xor
push
mov
lds
push
cs
mov
cmp
mov
rcrb
pop
imul
xor
out
fpatan
mov
arpl
mov
adc
jb
inc
jl
gs
push
fsubl
ljmp
mov
dec
stos
incl
push
pop
push
faddl
adc
test
dec
std
inc
test
enter
rolb
lods
mov
outsl
mov
das
xchg
out
addb
bnd
popf
pop
adc
in
das
dec
dec
imul
cmovs
mov
aaa
cwtl
mov
pushf
or
jmp
dec
mov
sub
nop
mov
mov
leave
adc
js
nop
cli
inc
outsb
fdivs
clc
inc
shrb
movsb
aaa
les
dec
loopne
sbb
and
sub
cwtl
nop
mov
das
movsb
pop
int3
das
mov
xor
mov
hlt
aam
sub
jns
mov
and
mov
push
mov
jo
mov
in
jmp
icebp
mov
clc
cmp
lods
shrb
cwtl
inc
insb
aaa
lods
mov
inc
test
mov
cmp
ffreep
cld
adc
cmp
outsl
jo
mov
pop
cld
in
roll
push
aaa
xor
push
clc
sarb
sub
out
sarb
shlb
dec
mov
jb
jns
xor
ja
mov
and
pop
pop
inc
sub
out
mov
mov
or
inc
mov
mov
jae
dec
pushf
in
mov
mov
je
ud0
inc
out
fs
aas
jae
les
subb
hlt
lahf
es
addr16
pop
pop
int3
cmp
cmp
dec
out
test
mov
jg
fs
jns
mov
leave
fs
je
cltd
pop
dec
jns
loope
inc
xchg
xor
les
and
lea
push
rorl
sub
jns
or
mov
xchg
insb
cld
mov
push
icebp
mov
xchg
mov
pop
es
aad
push
mov
mov
insb
xchg
xchg
divb
fdivr
movsl
movsl
sbb
rsqrtps
xchg
repnz
xchg
lods
xor
jns
mov
push
jns
push
loope
faddl
fisttpll
mov
outsb
sbb
xchg
outsb
shll
pop
loope
popa
lahf
push
lods
aas
aad
lds
mov
mov
repnz
mov
out
insl
pop
push
mov
mov
inc
lock
mov
test
inc
test
bsf
out
loopne
les
loope
jp
in
sub
cmp
nop
mov
outsl
hlt
pop
inc
sarb
mov
pusha
sbb
ss
movsl
aaa
aaa
insb
mov
jno
inc
sub
aam
mov
push
jb
jae
pop
fisubl
inc
pop
fwait
ret
fcompl
inc
mov
and
in
lods
pushl
ja
adc
xlat
mov
ds
outsb
jle
cli
jg
xchg
add
sahf
cmpsl
gs
scas
in
cmc
jle
aaa
add
ja
or
dec
int3
daa
xor
cwtl
leave
sub
cmp
hlt
dec
adc
inc
pop
jne
inc
cmp
stos
mov
and
jle
jb
dec
jo
in
adc
xchg
add
mov
faddl
int3
sub
dec
push
xor
inc
mov
out
ja
cmp
pop
and
std
sbb
nop
mov
pusha
adc
xor
pop
xor
and
xchg
leave
inc
pop
lock
aam
ja
icebp
add
mov
push
or
and
dec
movsl
cmp
add
xor
mov
scas
mov
iret
xchg
or
push
div
xor
in
nop
push
fs
aaa
insl
xor
das
clc
sbb
sub
mov
test
mov
cmp
adc
nop
rcl
out
cmc
push
filds
in
pop
outsl
das
dec
mov
imull
call
jbe
scas
gs
mov
lea
dec
xor
fs
out
mov
imul
repz
repnz
stc
lret
jo
sub
sbb
jle
mov
mov
in
jl
cmp
scas
push
mov
pop
mov
mov
mov
stos
mov
call
stos
shrb
adc
pop
cmpsl
xchg
pop
lcall
pop
shlb
and
jl
sub
repnz
push
je
mov
fwait
mov
cld
bound
lods
jnp
dec
cmp
out
in
cmc
adc
js
push
or
testl
pop
inc
jb
pop
stos
or
adc
enter
ljmp
loop
stos
fisubs
fdiv
lock
mov
in
cwtl
dec
add
loop
cmp
adc
fldl
push
cld
add
adc
fldl
out
pop
pop
add
stos
lock
pop
aaa
ds
cmp
sbb
shlb
cmp
jns
addr16
repnz
sbb
mov
push
or
nop
mov
fs
or
stos
cld
ret
pop
xor
sub
push
pop
sbb
cmpsl
mov
sbb
or
pusha
pop
out
mov
es
inc
add
inc
addr16
dec
mov
inc
lods
dec
cs
push
mov
xor
pop
lahf
jmp
push
and
test
pop
xchg
cmp
lock
lods
cmp
sti
mov
pusha
call
lcall
lcall
int
enter
mov
lods
outsb
jp
inc
insl
adc
and
lcall
sub
scas
out
jl
inc
mov
adc
cltd
add
sub
pop
cmp
sti
ja
mov
scas
subb
push
lock
mov
add
or
sarl
fdivrl
inc
pop
in
das
inc
push
imul
mov
dec
cwtl
aas
out
push
xchg
pop
adcl
cmpsb
sbb
cwtl
xchg
clc
out
nop
fdivl
fucomp
push
jb
xor
adc
int
les
dec
inc
scas
mov
mov
lods
push
xchg
inc
mov
cmp
and
lods
xchg
aaa
dec
xor
imul
inc
dec
xor
dec
in
or
ss
or
xor
pop
rol
cld
lods
push
dec
cs
adc
push
sub
pop
test
lods
mov
mov
xchg
add
mov
xor
mov
mov
push
push
dec
outsb
sub
xor
aas
pop
lock
add
out
mov
add
outsl
dec
mov
into
cli
test
fs
movsb
jno
add
push
mov
outsl
inc
cmp
jp
lods
das
jns
dec
daa
popa
mov
sub
out
sub
test
jecxz
cmp
xor
pop
xor
xor
dec
mov
gs
cmp
jno
imul
push
cmp
cmp
and
jae
sbb
cmp
cmpsl
lock
push
fdivrl
add
stos
jmp
push
scas
shrl
orl
and
mov
pop
jns
dec
clc
lock
outsl
jo
lret
and
push
fldcw
and
mov
mov
popf
insb
mov
adc
fidivl
sub
cmpsl
inc
insl
pop
sbb
and
cmc
push
and
ja
lock
inc
sbb
cmp
or
xor
sub
lea
mov
into
mov
loop
xor
mov
xchg
xor
movsb
shr
lret
ja
sahf
fs
in
xchg
push
push
and
int3
arpl
cld
inc
subb
or
push
in
push
insb
rclb
dec
xchg
sub
xchg
scas
scas
aam
gs
insb
das
jg
les
pop
jl
enter
or
test
in
push
imul
push
pop
icebp
dec
pop
leave
aam
mov
xchg
cmp
cmp
into
mov
scas
jns
xchg
rcl
push
jl
or
js
mov
xchg
sub
xor
scas
out
in
jle
dec
jnp
les
xor
in
pop
pop
mov
sbb
clc
cmpb
sbb
movsb
iret
mov
dec
in
adc
sahf
jl
ds
dec
cmpsb
outsl
data16
inc
rolb
inc
js
aam
mov
ds
jge
push
mov
ljmp
mov
sbbb
or
shlb
cld
test
aam
pop
fdivp
cmp
mov
cld
jo
add
pop
cmp
test
cmp
add
maxps
push
rolb
xor
dec
push
sub
xor
mov
mov
jmp
jb
mov
pop
push
mov
xchg
mov
movsb
jg
xchg
mov
xchg
ja
cli
cmp
pop
push
dec
add
in
sub
or
add
pop
xor
fwait
xchg
xchg
cmp
inc
mov
sub
fadd
add
push
xor
out
jbe
cmp
loopne
rcrl
mov
jbe
xchg
rcl
pop
jecxz
and
test
xchg
rorb
mov
inc
rolb
mov
and
jle
les
cmp
pusha
sub
add
les
sub
mov
shlb
pop
and
mov
pop
cmpxchg
sbb
enter
mov
dec
scas
jnp
xor
popf
jae
dec
dec
sub
mov
mov
cmp
cmp
add
mov
cmp
sbb
push
xchg
insb
inc
cli
jg
and
lret
xor
sbb
ds
mov
inc
repz
jl
mov
mov
pop
test
jb
mov
out
and
mov
test
insl
test
test
cmp
inc
inc
ficomps
cmp
mov
ljmp
jp
mov
push
sbbb
mov
repnz
sahf
sub
xchg
and
and
lcall
ds
xchg
sub
fisttpll
xor
cmp
or
das
lahf
in
pop
pop
aam
xor
mov
xchg
jecxz,pn
adc
pop
xchg
shll
cmp
push
xchg
dec
call
sub
testl
mov
shr
xchg
add
enter
rolb
cmp
push
or
test
movsb
call
adc
dec
mov
push
and
push
insb
dec
gs
jl
nop
arpl
pop
pop
cmp
lods
push
jb
cltd
es
js
and
aas
bound
ljmp
jmp
pusha
cmpsb
xor
lcall
add
test
xor
outsb
sub
fcmovb
push
aas
push
add
mov
and
lds
int3
fimuls
sub
arpl
and
push
dec
rcrl
xor
repnz
mov
mov
push
ret
dec
xchg
push
mov
mov
dec
inc
xchg
xor
and
and
dec
dec
andb
cmp
icebp
or
sarl
sbb
popa
adc
cld
inc
and
loopne
test
mov
sub
pop
sub
test
or
mov
mov
and
ret
sub
push
jnp
andb
ljmp
add
out
inc
mov
addr16
pop
or
push
push
aam
dec
jge
gs
pop
jl
dec
lret
adc
xor
push
push
ds
int3
aaa
jo
lret
fsubs
xor
add
loopne
push
cwtl
fidivl
pushf
cmp
aas
push
lcall
sbb
cmp
adc
adc
mov
imul
jb
mov
xor
fildl
pop
and
int
add
and
mov
fistpl
dec
mov
aaa
and
insb
and
or
inc
subl
push
dec
aad
mov
aaa
dec
nop
jge
push
xchg
and
add
cmp
dec
push
imul
add
out
call
loopne
les
insl
add
lret
loope
outsb
push
xchg
cmp
push
aas
sti
insl
dec
push
addr16
aas
lahf
in
adc
push
test
insl
and
das
cld
pop
inc
insb
jmp
inc
mov
popf
xchg
andl
sbb
loope
fstl
testl
xchg
xchg
pop
scas
divl
xor
shll
movsl
jo
sbb
int
stos
test
inc
repz
push
inc
cmp
fildl
cmp
bound
js
xor
mov
xchg
jnp
jge
das
adc
jnp
sub
mov
inc
out
cmpsb
sarl
xor
dec
std
or
push
dec
jne
aad
test
je
dec
sbb
mov
sti
ljmp
cmpb
mov
add
les
scas
or
push
cmp
jno
stc
xor
push
jnp
jl
cmp
pop
push
lock
inc
adc
int
xchg
pop
xchg
stos
aam
sbbb
decl
jge
dec
mov
cmpl
push
cmp
xchg
out
mov
push
sbb
dec
xchg
shrl
xchg
xor
cmp
jp
in
or
lret
mov
outsl
fdivr
js
jecxz
inc
mov
lcall
mov
mov
cmc
ret
adc
or
subb
xor
push
mov
outsb
sub
add
push
out
jp
ljmp
jo
xchg
lods
jle
std
jbe
lea
js
pop
iret
mov
into
mov
jl
mov
push
push
sub
xchg
and
or
dec
bound
inc
xchg
lea
xchg
js
xchg
xchg
fs
pusha
dec
or
cld
cld
test
inc
dec
xchg
in
out
lods
call
mov
in
mov
test
nop
cmp
pop
inc
xchg
push
push
or
jns
xor
ja
ret
ljmp
pop
pushf
cld
scas
sbb
cmpsl
xchg
addr16
mov
std
inc
mov
lock
xchg
insb
rcrb
jns
and
lret
inc
scas
insb
mov
jno
jbe
adc
pop
xchg
sbb
sub
push
lds
ret
inc
lret
push
repz
shlb
sub
cmp
lret
inc
out
sahf
mov
stos
mov
mov
cmp
clc
hlt
or
mov
cmp
outsb
push
mov
sub
add
mov
and
cmp
push
mov
sbb
stos
pop
int3
push
xor
mov
outsl
sub
int3
push
mov
and
out
bound
out
cld
pop
mov
das
inc
aaa
sbb
aaa
aad
gs
cmp
ss
sub
push
xchg
rolb
repnz
jns
dec
push
mov
fwait
mov
mov
inc
add
cmp
and
out
dec
mov
inc
cmp
sub
pop
inc
inc
mov
jp
xchg
and
push
mov
in
mov
pop
aaa
mov
je
aaa
fisubrl
jne
and
push
add
cld
lret
out
cs
adc
insb
dec
insb
jne
inc
xor
cli
and
adc
cld
std
inc
pushf
jns
dec
dec
add
fs
cld
dec
lcall
and
repnz
jnp
pop
push
in
cmp
es
dec
pop
adc
mov
mov
sahf
and
rorb
adc
jl
lahf
jae
pusha
push
ret
mov
adc
lea
in
es
das
sub
fwait
sub
inc
dec
js
sahf
mov
sbb
addr16
adc
cltd
fwait
in
pop
out
das
cmp
mov
dec
adc
xchg
and
rorb
dec
es
adc
jmp
fwait
sahf
jns
push
add
pop
pusha
int
mov
pop
add
daa
sub
data16
fstpl
xor
andb
adc
cmp
inc
xchg
rorl
add
clc
xlat
push
mov
and
jecxz
push
scas
pop
inc
xchg
xchg
push
lret
out
mov
lods
or
fimull
cmp
xchg
sub
test
xchg
sbb
scas
xor
in
insb
jg
mov
fcoms
sbb
sub
and
mov
in
mov
and
push
jp
or
icebp
mov
psraw
mov
stos
cmp
cld
cmp
push
clc
cmp
cmp
or
dec
jl
dec
int3
mov
in
cmp
enter
loopne
mov
push
sub
mov
adc
sbb
jo
push
hlt
loopne
mov
mov
dec
clc
mov
outsb
mov
adc
mov
call
mov
mov
into
lret
xchg
mov
inc
fsts
mov
jp
inc
push
hlt
popa
orb
cmp
sbb
push
dec
or
ds
jg
js
add
cmp
out
dec
and
aam
mov
cmp
inc
xor
pop
cmp
inc
push
pop
mov
sub
loopne
sub
lods
pusha
mov
ss
sbb
sub
push
add
xlat
mov
xor
dec
mov
inc
add
decb
xor
sub
es
mov
push
es
cmp
push
xchg
dec
aam
jae
mov
sahf
cmp
mov
jo
dec
add
cmpsl
xor
mov
sub
cmp
mov
push
je
fisttpll
test
or
cli
add
je
scas
mov
and
dec
adc
lds
xchg
add
adc
sbb
inc
cmp
jmp
xchg
cmp
cltd
repnz
dec
fbld
jg
popa
aas
mov
in
dec
fcoml
fdivl
mov
std
lods
xor
mov
cmpsb
bnd
adc
lods
sub
cmp
mov
sbbl
jno
addl
sbb
mov
iret
call
icebp
pop
sub
inc
xchg
cmp
xchg
jg
into
jge
rcll
bound
pop
jle
inc
xchg
enter
xor
popa
jo
push
add
cs
out
mov
fmull
nop
hlt
dec
sub
cmp
int3
in
hlt
clc
jo
xchg
xor
mov
cld
cmp
mov
ret
mov
mov
lea
pusha
iret
add
sub
arpl
lahf
daa
aas
xor
push
and
ficoml
lock
movsb
mov
fnsave
push
dec
pop
xor
lea
push
dec
aaa
cmp
cmp
adc
dec
ss
test
mov
cmp
scas
mov
pop
jnp
hlt
inc
jge
cmp
cmp
aas
hlt
xor
lret
inc
repz
in
dec
sbb
outsb
mov
lods
and
cmp
daa
xacquire
mov
cmp
xor
mov
je
pop
cmp
xor
mov
xchg
mov
push
xchg
fdivl
into
ret
jo
pop
repz
cmp
gs
push
outsb
fnstcw
in
mov
mov
inc
test
lret
push
mov
outsb
dec
in
ds
es
mov
aaa
adcl
push
pop
mov
cwtl
add
in
dec
repz
out
fidivl
scas
inc
inc
fisubl
mov
dec
adc
sbb
cmpb
loope
outsl
outsb
and
rcl
jl
xchg
dec
sbb
jmp
pushf
ljmp
inc
test
roll
popa
je
fs
adc
xchg
mov
jmp
mov
sub
sahf
or
das
pushf
fimuls
mov
cmp
jecxz
subl
das
or
xchg
in
adcl
out
fistpl
pop
outsb
enter
and
jne
mov
enter
xchg
pop
je
cmp
in
dec
push
cmp
fiadds
andb
ljmp
dec
aas
je
cmp
push
in
or
mov
pop
mov
out
cmp
mov
add
xlat
repz
inc
lock
out
pcmpeqb
jnp
fdivrs
ss
test
mov
sub
push
cmp
clc
sbb
repz
dec
push
or
pop
adc
pop
mov
ret
es
aas
pop
xor
mov
and
mov
popa
fstl
adc
sbb
lret
movsb
pop
jne
or
iret
loop
jp
jno
inc
fisubrs
pop
cli
addb
lcall
ja
loopne
mov
cs
xor
or
adcl
bound
xchg
loope
jmp
rcrb
push
mov
mov
or
add
ret
mov
insl
out
add
das
sbb
rorb
js
sbb
call
jp
jle
adc
mov
add
mov
push
iret
leave
das
movsl
pop
adc
xor
fstps
push
cmp
divl
sub
cmpl
dec
add
adc
dec
xchg
cmp
cli
ds
and
cmpb
jge
aaa
lahf
test
andb
lds
sub
mov
mov
les
aam
loopne
daa
mov
jno
jecxz
mov
xor
in
test
adc
or
cs
out
fcomip
negl
cld
cmc
xor
jge
xor
adc
adc
lcall
jl
sub
subb
nop
adc
cmp
dec
stc
sub
sub
pusha
shrb
pop
dec
pushf
mov
sbb
dec
jg
cmp
mov
ret
mov
mov
xchg
xor
xor
mov
lods
imul
add
aas
aaa
pop
dec
pop
pop
nop
fisttps
pop
nop
cltd
test
cmc
xchg
pop
jg
aas
stc
out
xchg
xchg
out
into
dec
ds
stos
and
enter
push
sbb
push
js
lods
aaa
sbb
cmpsl
rol
jle,pn
shlb
repz
inc
in
and
push
hlt
clc
outsb
sbb
mov
mov
mov
cmp
pause
fistps
fcompl
leave
and
push
jge
cli
pop
jl
dec
add
addl
nop
sub
fsubr
rolb
cwtl
je
push
xchg
loope
repnz
roll
adc
test
mov
inc
mov
and
fwait
sub
jecxz
xor
popa
push
inc
xor
xchg
inc
or
bswap
stos
pushf
rcl
mov
jecxz
cltd
mov
addr16
and
mov
out
adc
into
adc
jb
jnp
fldcw
mov
outsw
lret
xchg
push
pop
sub
and
jmp
sbb
sub
mov
lds
sub
mov
xor
xchg
push
xlat
mov
inc
dec
push
insb
or
xor
add
mov
xchg
cmp
repz
sub
fistpl
mull
sub
lea
fadds
addl
ror
jns
stos
mov
sbb
fisttps
mov
jne
cmpsl
add
adc
outsl
jnp,pn
subl
fstl
mov
xchg
xor
add
rolb
stos
jo
jmp
sbb
sub
mov
jecxz
cmpb
fsubrl
xchg
enter
mov
push
push
xor
scas
sarl
push
adc
out
out
mov
fcoml
push
ds
mov
inc
fcompl
push
adc
sub
or
dec
dec
mov
add
mov
jnp
adc
mov
jno
cmp
dec
mov
ret
xor
jge
cmp
movsb
fwait
ret
add
clc
inc
sub
divb
inc
adc
repnz
jmp
dec
movsb
idivl
ds
sahf
dec
inc
cmp
xor
jl
hlt
js
jg
fmuls
daa
cmpsb
mov
ja
loop,pt
pop
pop
jno
or
in
mov
xchg
outsb
lock
insb
adc
in
sub
jge
in
das
aaa
lock
xor
xor
clc
xor
jns
push
mov
and
dec
cmpsb
fcoml
repz
or
sub
adc
xchg
sub
mov
ds
pop
mov
adc
scas
and
sarl
or
hlt
mov
jl
adc
add
loope
mov
mov
ss
test
jb
push
xor
mov
cmp
cwtl
mov
je
xor
push
addr16
xor
dec
enter
xor
cmp
dec
sub
dec
inc
adcl
pop
incl
jp
pop
adc
insl
popf
je
getsec
pop
and
sub
jle
dec
inc
adc
cmpsb
arpl
repnz
lods
out
std
es
jecxz
sbb
notb
xchg
jns
movb
je
or
xchg
push
cmp
jmp
lahf
pop
push
fidivl
fldl
fistpll
inc
sbb
mov
ret
movsb
pop
adc
dec
into
mov
add
sbb
movsb
sub
shll
divps
ja
inc
es
push
hlt
jb
idiv
jg
xchg
test
cltd
flds
inc
fdivr
fdivrs
test
push
ret
fcompl
mov
stos
insb
into
int
fstps
or
xorl
cmp
je
aaa
pop
jle
loope
fwait
push
cmp
call
aaa
addr16
arpl
movsl
inc
out
sbb
shrl
aaa
push
aam
mov
outsb
test
popf
xor
int3
jnp
das
xchg
jae
jne
adc
cltd
dec
out
testl
scas
sbb
test
mov
out
iret
ss
cmp
dec
push
cmp
pushl
or
push
ljmp
lock
mov
test
stos
jge
push
ret
iret
shrl
dec
sub
mov
xor
mov
sbb
std
addl
mov
xor
jne
divb
jbe,pn
inc
mov
add
push
mov
sub
faddl
mov
les
dec
mov
xchg
or
repnz
lock
mov
xor
pop
xor
sbb
xorb
les
and
out
cli
popf
and
pop
pop
cmp
aad
jb
rep
jae
dec
lods
xor
insb
ds
inc
insl
outsl
aam
xchg
out
ds
sub
and
je
hlt
fcmovb
fiadds
faddp
cmp
pop
divl
pop
and
inc
jno
xchg
fisttps
bound
fdivrl
jecxz
mov
cmp
out
adc
icebp
push
in
pop
mov
or
or
jmp
arpl
adc
mov
lods
leave
sub
mov
add
out
call
shlb
mov
mov
adc
dec
add
popf
mov
xchg
imulb
out
rorb
mov
and
sbb
push
or
xchg
cmpsl
lds
cmp
mov
push
sarl
mov
shrb
mov
addb
in
sti
subb
and
sub
movsb
xorl
repnz
cmp
lahf
mov
cmp
inc
adc
std
xchg
rorl
loopne
fsub
jb
and
je
mov
fidivrl
adc
mov
push
imul
aas
sub
mov
pop
add
cmp
arpl
jnp
pop
notl
mov
clc
cmp
mov
mov
jo
loop
ja
push
sarb
jge
cmc
mov
aam
add
roll
and
sub
xchg
and
cmp
addb
pop
nop
push
sub
jnp
push
xor
insb
addr16
sub
mov
cmp
jbe
gs
addr16
xchg
dec
add
jp
inc
jbe
and
sub
cmp
dec
in
push
add
mov
lahf
xor
outsb
pop
xor
hlt
mov
scas
outsb
adc
mov
xor
pusha
sbb
push
jb
sub
mov
scas
test
or
jle
jae
popf
xchg
outsb
pop
inc
mov
subl
xchg
push
pop
push
pop
addb
sub
xchg
xor
int3
in
xchg
fwait
push
dec
sub
lahf
xor
nop
mov
ljmp
or
stos
jbe
jle
sub
loop
push
mov
outsl
mov
lock
inc
jae
outsl
push
add
jge
sbb
std
shlb
lea
jp
mov
sub
jno
aaa
lock
push
ljmp
fdivrl
outsb
sub
rol
xchg
imul
jbe
jno
sub
push
mov
cmp
je
inc
push
mov
mov
jbe
cs
fistl
jge
inc
mov
hlt
cwtl
das
adc
into
pushf
aaa
cmp
dec
pop
repnz
sub
imul
jns
out
push
dec
das
loope
mov
and
and
pushf
jp
sbb
test
sub
ret
mov
xchg
aaa
pop
popa
dec
fcoml
pop
insl
xchg
jg
push
lds
mov
jne
lods
jb
push
push
out
sbb
sub
xor
testb
cwtl
cmp
xor
std
dec
mov
sub
jnp
dec
mov
lods
sti
dec
fwait
pop
xor
fmul
or
adc
insl
mov
push
dec
sub
imul
adc
lcall
dec
cmp
or
adc
mov
mov
outsb
and
jbe
sbb
or
mov
cmp
jo
and
hlt
pop
mov
push
mov
mov
loope
cmp
dec
mov
jg
or
aas
push
push
jo
leave
rcll
xchg
mov
and
in
insb
xor
pusha
or
mov
ja
cmp
adcl
mov
mov
test
and
cltd
stos
add
xor
les
repnz
outsb
cmp
cmp
cmpsl
scas
sub
test
fisubs
xor
cmp
stos
xchg
mov
jbe
and
push
pop
andl
aaa
jbe
orl
xchg
inc
pop
dec
xor
test
addr16
dec
push
inc
orb
mov
fxch
outsl
clc
je
aam
pop
and
mov
into
rclb
xchg
jne
js
or
inc
cmp
cmpsb
mov
inc
xchg
and
jo
dec
cmpsb
sub
dec
clc
xor
sub
rol
push
fcomi
lret
xchg
test
dec
fsubrp
push
xor
pop
aad
out
xchg
pop
sahf
adc
mov
dec
mov
cmp
fwait
into
cmp
push
xor
fldt
int3
stos
and
fcomi
pop
ret
adc
add
jl
rorb
dec
outsb
sti
test
lds
scas
push
jge
pop
test
dec
push
pop
cmp
xor
jns
outsl
jmp
xchg
arpl
pop
leave
insb
dec
and
fsts
test
push
xor
insb
popf
pop
pop
push
xchg
out
xchg
adcl
cmpsb
add
ja
pop
pop
in
sub
jge
in
xchg
pop
add
xchg
mov
dec
imul
jmp
out
dec
mov
lret
mov
mov
mov
sub
jl
xor
cmpsb
mov
push
das
pop
cmc
aam
push
fwait
add
and
xor
mov
in
cmp
je
pop
lret
dec
aaa
and
adc
repz
loop
data16
ss
mov
in
jno
pop
adc
repz
cmp
and
jbe
xchg
dec
notb
xchg
or
mov
cld
stc
popa
leave
fcmovnu
xchg
rorb
stos
push
cmp
out
in
mov
cmp
push
push
sbb
andb
adcl
sbb
xchg
cmc
jno
push
cmp
sbb
inc
jle
stos
cli
gs
mov
mov
dec
lods
repnz
in
outsl
inc
int3
push
pop
and
test
jl
cwtl
jecxz
loope
repz
in
mov
pop
fidivrs
test
sub
lret
lahf
les
inc
enter
add
test
rcrb
mov
fistpl
mov
xchg
mov
or
cmp
adc
sahf
pop
push
push
lods
xor
pop
jp
jae
xor
gs
push
mov
outsb
xchg
cmp
lret
push
mov
push
jecxz
inc
imul
push
mov
arpl
mov
test
jnp
pop
popl
pushf
push
push
xchg
lea
mov
push
lcall
push
data16
sub
xchg
inc
je
xchg
idivl
call
inc
test
data16
push
mov
add
or
scas
sub
inc
mov
test
mov
dec
incl
popf
jge
mov
or
mov
jo
dec
fs
pop
xor
add
fwait
jmp
xchg
pop
mov
xchg
push
hlt
dec
lods
loopne
push
ret
dec
js
mov
shrb
or
sub
jp
sbb
mov
inc
pop
jo
lret
lcall
mov
fwait
lea
mov
push
scas
inc
stos
sbb
mov
aas
push
or
insb
and
mov
cmp
lret
dec
js
cmp
inc
aas
repnz
js
sub
insl
mov
outsb
out
inc
cli
mov
xor
sub
jb
adc
push
notb
adc
fdivs
push
insl
std
fsubs
xor
lods
hlt
enter
push
xlat
jns
xor
in
jle
push
jmp
sub
aaa
repz
xor
push
adc
jns
adc
push
mov
scas
pusha
repz
call
das
repnz
mov
ljmp
sub
adcb
sbb
aaa
cld
stos
adc
arpl
add
inc
scas
dec
cmp
ds
into
push
pop
insb
sub
gs
jmp
mov
sbb
inc
push
inc
cmp
shrb
out
xchg
in
mov
dec
inc
sbb
mov
push
clc
cmp
lock
das
sub
push
mov
dec
outsl
in
xchg
je
add
mov
or
addr16
and
outsl
sbb
cld
mov
xchg
adc
rorb
lea
outsl
cmp
ss
inc
dec
jb,pn
sahf
jo
dec
mov
clc
js
mov
dec
mov
add
dec
sbb
adc
das
pop
cs
push
mov
std
in
repnz
dec
xor
cmp
xor
sub
int3
into
xor
mov
mov
sub
cmpsb
mov
xor
je
je
std
xor
outsl
pop
mov
sub
mov
inc
mov
inc
dec
xor
stos
lds
xor
jo
xor
sub
test
mov
sub
push
lds
xor
mov
inc
call
xlat
lea
ds
test
push
ret
lods
mov
xorb
mov
mov
pushf
mov
cmp
je
shlb
nop
xor
adc
lds
je
std
aaa
sub
mov
cmp
or
or
jo
das
sbb
aas
adc
jnp
pop
cmp
les
ds
idivl
pop
jg
icebp
xchg
outsb
ljmp
aas
xor
push
les
fdivs
inc
sub
mov
push
lock
jb
lods
inc
cmp
jo
jne
push
jb
mov
cmp
je
jo
dec
inc
pusha
insb
inc
xor
sub
ret
hlt
inc
dec
or
mov
clc
push
popf
inc
sub
mov
xor
sub
pop
xorw
inc
aaa
inc
mov
adcl
xor
mov
jo
dec
jae
xchg
mov
dec
mov
jg
mov
mov
rolb
push
scas
leave
sub
inc
fs
dec
mov
sub
lcall
mov
in
cmp
jle
cli
inc
cld
add
cmp
jnp
ret
dec
movsl
sub
mov
insl
mov
jmp
loope
cltd
repz
mov
cmp
adc
pusha
sbb
adc
gs
inc
and
repz
aam
das
ds
push
mov
lods
mov
out
dec
mov
jge
imul
outsb
ffreep
or
mov
roll
xchg
jo
pop
je
adc
add
mov
xor
mov
adc
movsl
into
incl
lock
mov
sbb
cmp
fdivrs
mov
nop
dec
fs
in
inc
adc
dec
cmp
lea
adc
push
fistpl
adc
imul
rep
mov
sbb
outsb
pushf
dec
sbb
out
je
push
jecxz
xchg
out
mov
mov
adc
xchg
jp
dec
lods
dec
xchg
adc
dec
mov
cmpsl
lock
mov
mov
xor
xor
es
xor
xchg
add
js
nop
dec
fidivrl
inc
jb
cwtl
lds
inc
mov
vminps
out
mov
pop
and
push
xchg
cld
xor
dec
xchg
aam
scas
xor
and
mov
js
mov
xor
in
push
jo
push
dec
aaa
push
ret
push
xchg
nop
push
mov
iret
cmpl
push
pop
or
cmpsb
lds
sbb
push
sbb
shrl
repz
and
test
scas
pop
mov
or
xor
dec
cmp
fdivp
jp
loope
adc
mov
aam
outsl
mov
fstpt
xor
mov
mov
fst
or
push
lods
in
jbe
add
adc
test
xor
xor
out
xor
mov
xchg
mov
jae
jl
stos
pop
mov
repz
mov
pop
mov
xor
test
mov
insb
xor
lock
jl
insl
mov
cmpl
push
mov
cmp
xchg
mov
cmp
mov
mov
adc
mov
or
mov
insb
jl
mov
sarb
imul
jb
mov
mov
xor
mov
cmp
int
imul
mov
dec
xor
jp
repz
dec
xchg
sbbl
js
ret
jo
jmp
add
push
out
in
and
xlat
mov
addr16
repnz
dec
inc
adc
nop
popf
rclb
mov
dec
outsb
pusha
mov
and
es
sub
xor
faddp
inc
jno
xchg
or
mov
push
je
pusha
xor
sub
dec
push
aam
mov
sbb
xorl
sub
xor
fst
xor
xor
cmp
push
loopne
dec
add
push
ss
xchg
xchg
sub
sti
fsubr
sbb
into
mov
mov
cmp
sbb
jecxz
sar
int
mov
mov
adc
or
mov
mov
or
mov
popa
mov
add
lret
test
inc
mov
gs
call
fstl
push
and
inc
mov
sub
inc
cmp
outsb
mov
popf
mov
fldt
dec
sbb
cmp
sub
mov
fnsave
add
xor
xor
inc
mov
bound
popa
out
jge
cmp
mov
orb
mov
xor
mov
ss
cmp
mov
xchg
scas
xor
push
push
sarb
addr16
mov
scas
bnd
cld
lods
add
imul
jge
fwait
icebp
cmp
mov
lret
orb
outsb
jp
inc
xor
mov
sbb
shll
outsb
mov
sbb
pop
cmp
sub
jb
cmp
pop
sbb
mov
mov
cmp
xlat
negl
add
dec
and
out
int3
test
push
xor
outsl
xchg
adc
jb
int
mov
cmp
jb
int
pop
xor
jb
movsb
sbb
and
dec
xchg
pop
push
movsl
scas
inc
and
mov
outsb
mov
and
mov
pushl
leave
sub
fcomps
or
cwtl
adc
push
xor
das
cmp
or
int
xor
lods
nop
or
out
outsl
pop
dec
or
jb
mov
jae
popa
pop
sbb
mov
cmp
push
pusha
fcomps
mov
dec
push
stos
popf
sbb
dec
dec
dec
xor
adc
cmovp
subl
out
insl
jmp
or
mov
jp
pop
test
jg
mov
mov
test
inc
jmp
pushf
in
cs
and
pusha
dec
stos
jg
jo
push
mov
mov
jb
call
lea
lock
out
lock
sub
pop
jge
orb
and
daa
mov
mov
or
inc
ret
jp
sbb
or
sbb
test
cmpsb
iret
mov
in
out
sbb
fisubs
cmp
mov
test
dec
xchg
mov
xor
jno
push
pop
mov
jle
dec
jp
and
cmp
cld
dec
sbb
rcrl
jmp
jecxz
rorl
xor
fmul
scas
inc
adc
mov
inc
scas
jl
add
lret
add
mov
das
lret
add
mov
ds
push
aas
hlt
xor
cmp
xor
filds
inc
aaa
push
mov
shl
jnp
or
jmp
pop
fsubrs
cs
push
sbb
jmp
sub
cmp
stos
add
xchg
sub
insb
xor
outsb
fnstenv
push
stc
xor
xor
sahf
es
jo
cmp
hlt
addr16
mov
fcomp
sbb
pop
stos
sub
loop
mov
or
fnstenv
mov
push
in
pop
and
sub
sub
aam
or
mov
fiaddl
aam
ja
int
adc
jne
jo
pop
jp
rorl
stos
iret
pop
movsb
shrb
pushf
jbe
lods
cmp
adc
movsl
clc
xchg
push
shlb
fdivrl
mov
jb
or
xchg
mov
lods
aam
imull
out
and
push
push
pop
lods
addr16
inc
xchg
addr16
push
fnstenv
inc
subl
pop
mov
pop
pop
scas
cmp
out
sub
nop
int3
adc
inc
je
aaa
mull
push
fcompl
pop
jne
or
mov
pop
add
cmp
es
xchg
xor
adc
out
fildll
and
je
outsb
inc
and
xor
add
mov
pop
aaa
push
xor
mov
cmp
into
inc
std
lret
in
nop
decb
ds
sbb
ja
mov
ja
pusha
mov
push
es
adc
sbb
iret
fsubr
xchg
out
inc
sub
ds
lcall
dec
push
outsl
cwtl
or
repz
cmp
pusha
test
movb
test
xor
cmp
outsl
inc
cmp
pop
dec
push
js
sbb
in
mov
dec
xchg
mov
sbb
xor
pop
mov
add
fsubrp
sbb
out
scas
mov
push
jb
stos
int
and
out
dec
xor
in
je
into
inc
sar
stos
shlb
and
scas
ds
adc
and
push
rcr
rorl
nop
mov
stos
nop
jo
xorb
add
aas
cmp
xchg
stos
ljmp
idivl
insl
mov
daa
push
test
adc
add
adc
jmp
sub
bound
and
cmp
ds
mov
sti
dec
repz
sbb
sbb
aam
adc
lea
dec
push
jg
lret
inc
and
push
jnp
int
je
pop
add
dec
insb
mov
mov
cmp
push
test
lea
ds
fsubrs
pop
rcr
pop
adc
popa
dec
imul
mov
add
inc
leave
mov
and
lret
clc
subl
scas
lahf
mov
mov
jl
test
push
pop
cld
push
pop
mov
mov
push
mov
stos
inc
xor
sbb
pop
test
sbb
mov
mov
mov
mov
cmp
daa
sub
mov
cli
xchg
faddp
aaa
sub
inc
push
int3
ss
mov
clc
push
or
ret
push
adc
fsub
pushf
nop
sbb
mov
das
inc
xchg
xor
js
xchg
pop
ds
or
jne
fstps
sub
bound
mov
push
scas
pop
dec
inc
mov
dec
inc
cmpsb
inc
int
lret
jle
dec
inc
mov
xorb
cmp
negl
jnp
pop
inc
push
dec
addb
loopew
pop
aam
icebp
adc
xor
sub
rcrl
sti
adc
jo
sbb
mov
dec
cmp
push
jo
das
dec
and
cmp
dec
sub
cmp
mov
jne
inc
outsl
stos
push
pop
inc
mov
push
mov
push
dec
push
dec
push
xchg
jp
push
or
aaa
and
sub
out
ss
mov
nop
clc
dec
outsl
mov
lock
dec
push
popf
fdiv
iret
outsb
push
mov
sbb
fsts
xor
cmpsb
outsb
adc
push
mov
hlt
jge
pushf
test
sbb
fsts
xor
push
outsl
cwtl
daa
mov
dec
or
xor
shll
leave
adc
xor
add
mov
outsb
in
sbb
or
shll
out
mov
lcall
and
xchg
aaa
mov
jne
and
popf
xchg
cmp
push
and
je
push
dec
cmp
sub
dec
xchg
cmp
mov
and
mov
or
push
jp
push
adc
cmp
int
mov
into
int
push
outsl
ds
mov
sub
into
mov
dec
bound
jmp
jg
ss
js
inc
pop
cmp
bound
jae
mov
xchg
adc
mov
pop
enter
outsb
es
dec
adc
push
add
aaa
mov
jp
push
add
aam
std
inc
cmp
pop
lock
xchg
sbb
mov
dec
outsb
inc
push
ja
inc
and
notb
push
and
les
leave
icebp
add
dec
into
inc
cmp
ret
and
mov
adc
mov
xlat
jecxz
ds
scas
or
jns
clc
lea
das
fmuls
dec
push
xor
mov
push
push
jb
js
das
push
sub
jo
cmp
mov
push
shrl
jb
pop
nop
std
xor
jl
push
repz
dec
inc
push
push
add
xor
xor
pop
popf
mov
sbb
xor
push
dec
fiaddl
mov
scas
sar
jl
ja
dec
popa
sti
push
lock
cmp
mov
in
inc
inc
fdivs
dec
mov
int3
push
pusha
pop
cmp
hlt
xchg
nop
mov
into
dec
nop
inc
cmpsb
pop
pop
rolb
subb
xchg
sbb
pop
add
out
fwait
pop
inc
movsb
mov
sub
aaa
push
dec
push
imul
loope
lods
fdivl
in
xchg
and
xchg
loop
xchg
ficoml
cmpsl
jnp
jo
sbb
sti
sub
adc
push
xor
jp
and
mov
jecxz
cltd
int3
mov
xchg
mov
fwait
cld
cmp
fists
leave
sbb
cmc
cwtl
mov
and
ret
add
inc
sub
aam
addr16
jge
mov
mov
clc
pop
loopne
cld
xchg
dec
push
or
mov
mov
xchg
loop
je
into
or
icebp
mov
push
xchg
dec
dec
push
addr16
adc
pushf
or
outsb
pop
arpl
rorl
fldenv
rcrb
add
sbb
js
stos
lds
fninit
xor
ret
jb
rcll
sub
out
lock
cmp
inc
je
cmp
xchg
push
push
in
pop
sbb
mov
pop
loopne
bound
scas
sbb
adc
jp
mov
jno
sbb
sbb
xchg
inc
fldcw
pop
mov
add
push
es
stos
inc
pop
mov
stos
icebp
es
into
filds
and
sbb
fldl
jmp
test
xchg
sub
sbb
arpl
pop
fldt
leave
lcall
mov
insb
xor
lods
pusha
adc
fwait
push
nop
pop
jl
mov
mov
dec
jo
lock
in
inc
jle
cld
dec
shlb
imul
inc
pop
or
xor
push
inc
jno
sub
and
ror
dec
xor
xor
das
das
lods
jl
push
fadd
add
adc
mov
insl
pop
or
shlb
fdivrl
mov
adcb
xor
sbb
pop
rcll
jmp
cmp
jnp
xchg
or
aas
outsl
push
pop
push
cmp
cmp
outsl
jmp
popa
dec
dec
pop
iretw
xchg
pop
lods
outsb
cmp
or
adc
addl
mov
mov
push
pop
mov
enter
jle
xchg
movsl
dec
shll
leave
jg
call
pusha
lock
nop
addr16
pusha
cmp
or
cmp
inc
leave
xor
je
dec
push
out
add
push
adc
orl
das
or
mov
fs
pushf
sub
inc
or
imul
or
and
xor
xor
shrb
out
call
add
jae
test
je
mov
or
inc
or
pushf
dec
or
or
out
shrl
cmp
cltd
fistpl
sub
inc
cmp
ds
jbe
sbb
enter
stos
dec
mov
das
or
jb
int
cmp
mov
push
cmp
or
lock
ds
dec
or
mov
jmp
mov
stos
dec
les
jne
fwait
mov
or
fs
imul
hlt
ljmp
mov
push
mov
sarl
sbb
or
sub
cmpsl
mov
lods
or
push
jne
mov
adc
negb
pop
inc
or
xchg
push
cmp
xchg
aaa
enter
sub
inc
insl
xchg
mov
pop
dec
and
push
lods
pop
mov
or
xor
or
mov
jb
xchg
mov
mov
lds
cmp
sub
pop
mov
out
mov
xor
jg
xchg
cmpsl
and
sarb
aam
stos
imul
rcrb
inc
mov
mov
inc
loope
jae
ljmp
insb
add
fcmovu
jnp
mov
mov
scas
dec
lds
int3
cmp
inc
jae
je
pop
mov
das
sub
xchg
fistpll
jns
jae
pop
imulb
cli
fsub
fnstsw
inc
ds
leave
mov
pop
sub
pop
dec
sbb
dec
xor
das
pop
adc
fimull
jae
pop
jl
int3
lods
dec
or
inc
xor
lahf
mov
pop
adc
mov
aaa
mov
aaa
dec
hlt
stos
fsub
adc
sub
shl
lret
mov
mov
sti
adc
xchg
ljmp
outsl
call
cmp
fistl
hlt
mov
jmp
dec
mov
push
out
xor
leave
jg
adc
fidivs
mov
xchg
cmpsl
dec
hlt
int3
jg
pop
repnz
mov
cmp
or
mov
and
ss
sub
lahf
pop
jl
and
test
aam
adc
sub
in
mov
dec
mov
xor
data16
movsb
jno
push
cmp
add
test
jl
push
repz
xor
pop
adc
imul
xor
rcll
jne
pop
insl
pop
add
xor
push
lods
int
rep
push
jo
push
aaa
imul
sub
or
mov
mov
or
ljmp
pop
repz
xchg
in
inc
fs
pop
jg
and
jle
xchg
stos
inc
les
jl
adc
dec
sub
rorl
out
enter
mov
scas
out
jo
inc
call
pop
jae
cmp
mov
aas
inc
fisubrs
cmpsl
fisubs
cld
andb
out
mov
repnz
xchg
xor
sahf
in
cmp
dec
nop
cmp
aas
mov
or
jbe
cmc
push
inc
addr16
push
adc
or
inc
jp
imull
in
pop
xor
jo
adc
push
repz
shll
inc
adc
inc
inc
jb
xor
mov
mov
mov
ds
jb
xor
and
sbbl
pop
je
xor
mov
stos
pop
inc
test
pop
lds
jb
push
jno
popa
mov
je
mov
divb
mov
insl
xor
pop
int3
push
lock
xchg
in
movsb
je
rolb
or
popf
jge
mov
jp
sub
xorl
mov
test
or
dec
jmp
xchg
adc
mov
shlb
stos
jp
and
loope
sub
add
fiadds
push
rcll
inc
add
ja
test
ss
fcomp
push
inc
cmp
and
loop
lahf
pop
les
dec
cli
jbe
ds
movsb
xchg
out
push
das
mov
ds
cs
cwtl
popf
cmp
es
in
add
daa
or
inc
inc
loop
cmp
and
and
sub
push
movl
mov
sbb
add
inc
xor
adc
sub
sub
cmpsl
jmp
pop
xor
ror
inc
cmp
push
fmuls
fstl
or
sub
data16
xchg
gs
lret
call
repnz
sub
movsb
add
sahf
nop
jb
inc
push
and
test
andl
pusha
push
ljmp
or
and
xor
aaa
insb
cmp
inc
pop
mov
mov
test
js
jne
push
inc
aas
into
mov
and
add
nop
mov
jle
push
scas
lea
mov
jae
sbb
push
clc
and
pop
push
std
and
repz
cmp
sub
movl
stos
or
decb
push
cmp
cmpsb
or
mov
aaa
data16
int3
call
out
xor
jnp
inc
xor
push
sub
les
push
adc
push
mov
shll
xor
inc
or
in
cmp
lahf
dec
cmc
in
and
xor
ds
jl
std
adc
xchg
mov
xor
iret
mov
mov
push
pop
cmp
xor
mov
cmp
jb
mov
sub
sub
mov
dec
or
adc
iret
xchg
inc
in
ja
lock
lods
mov
mov
add
sub
lock
push
xchg
pop
xchg
mov
subl
dec
mov
fwait
stos
fucomi
push
lock
in
mov
insl
loopne
inc
notl
sbb
fdivl
test
jle
cmp
lea
pop
inc
fcomps
push
xchg
aam
push
aaa
xor
jns
mov
scas
ja
jp
mov
xlat
ljmp
sahf
cmc
sub
jo
sbb
stc
fsubrs
orl
sahf
jge
sbb
fwait
mov
cmp
jl
je
push
mov
jl
ss
cmpb
add
mov
xchg
mov
add
jmp
jo
movsl
insl
xchg
orb
scas
pop
xor
mov
ss
insl
enter
fs
xchg
cwtl
cmp
mov
nop
inc
xor
nop
inc
xor
mov
lret
push
inc
mov
ss
repnz
lods
ss
out
mov
xchg
ss
xchg
mov
daa
gs
lret
clc
inc
es
xor
or
pop
add
shrl
dec
cmpsb
cmp
fidivrl
int3
cltd
lcall
ss
ss
sub
inc
repnz
dec
in
xchg
jne
mov
push
cs
lret
addl
add
dec
adc
mov
ret
inc
aam
mov
js
and
xchg
std
into
out
test
pop
xor
leave
push
stos
and
mov
arpl
test
mov
stos
mov
xor
inc
mov
stos
cmp
add
cltd
loopne
stos
or
inc
scas
or
js
inc
stos
add
int3
imul
mov
rorb
push
cltd
or
push
xchg
push
and
cmp
xor
jnp
stos
mov
into
in
push
jmp
push
lret
jge
mov
or
aas
add
pop
and
outsb
mov
into
jl
js
cmp
sub
inc
clc
jae
ret
nop
sbb
lock
add
cs
daa
aaa
das
std
xchg
dec
test
lods
pop
mov
icebp
dec
sub
and
mov
fs
pop
inc
jbe
mov
cmp
dec
cmpsb
sbb
and
repz
add
repz
push
xor
pop
xor
ss
or
nop
mov
lret
cmp
test
lods
pop
dec
or
repnz
xor
mov
idiv
cmp
ret
inc
mov
stos
movsl
ret
mov
jne
lcall
mov
scas
stos
push
mov
cmp
stos
imul
jnp
sub
push
dec
hlt
lea
inc
pop
addl
push
mov
sahf
hlt
and
dec
mov
sub
insl
addr16
mov
outsl
fistpll
xor
fildll
xchg
or
add
mov
hlt
sbb
add
mov
cmpsb
inc
shll
mov
aad
mov
inc
adc
pop
inc
or
add
xchg
scas
xlat
sahf
cmp
sbb
loop
mov
inc
mov
mov
test
lods
stos
roll
push
scas
pusha
scas
rorl
shlb
hlt
xor
mov
mov
mov
in
adc
push
faddl
xor
add
cli
add
sarl
rolb
je
add
lahf
test
int
sti
inc
lds
add
inc
mov
fwait
lds
adc
outsb
imul
xchg
lock
leave
xor
pop
ljmp
push
sub
cld
in
push
mov
test
cmp
inc
hlt
inc
cmpsb
int3
push
js
jle
lds
pop
sbb
mov
scas
sbb
xchg
mov
imul
xor
dec
jns
dec
addl
cmp
mov
dec
and
mov
xchg
mov
scas
xchg
cmp
lds
cmp
xor
std
cmp
das
scas
cmp
fcomps
cmp
insl
in
shl
in
and
mov
inc
mov
adc
mov
dec
in
aaa
dec
pop
es
mov
call
mov
outsb
pop
ds
in
xor
mov
sub
scas
lock
movsb
xor
cs
xchg
mov
push
cmc
aaa
and
push
xor
sub
pop
xchg
ja
inc
sbb
ret
add
loopne
aas
jo
xor
cmc
adc
clc
pop
inc
jae
subl
std
fnsave
jb
out
rorl
cltd
dec
mov
addr16
outsb
mov
cmp
pop
pop
jmp
push
and
jb
sbb
xlat
push
adc
cld
daa
sbb
xchg
in
jns
mov
scas
outsb
out
push
andb
test
cmpl
xchg
je
jl
pop
inc
cmc
pop
inc
xor
dec
push
inc
les
jp
lock
jle
outsb
xchg
add
aaa
mov
mov
mov
loopne
or
in
inc
mov
or
js
cmp
mov
push
and
mov
cmp
jne
lret
cmpsl
insb
outsl
add
mov
dec
leave
mov
push
notl
pop
mov
inc
dec
pop
lret
inc
mov
sbb
cmpsb
and
pop
mull
sub
or
mov
je
pop
mov
jb
xor
iret
push
push
mov
iret
push
call
sub
loope
arpl
jbe
loopne
mov
lret
inc
insl
cmp
ljmp
sbb
xchg
jg
movl
sub
adc
jns
cmp
popa
cli
sbb
out
adc
in
es
test
das
mov
imul
sbb
sub
ss
testb
addl
sub
adc
push
test
inc
gs
std
pop
clc
lahf
push
clc
fs
and
sub
sbb
adc
aad
out
inc
jg
mov
in
xchg
aam
cmp
outsl
push
xchg
mov
sbb
cmc
cmp
push
imul
mov
add
inc
adc
rcll
mov
ret
mov
cmp
ds
add
mov
sbb
jne
xor
push
int3
mov
shll
into
jmp
dec
ljmp
pop
shl
mov
pop
jbe
dec
mov
and
fistpll
inc
pop
clc
add
inc
inc
adc
push
mov
adc
js
call
rol
cld
bound
mov
les
lock
insl
push
sbb
or
mov
xchg
cmp
jne
push
test
push
dec
xor
pop
in
inc
js
shll
jg
xchg
dec
je
outsb
cmc
aas
xchg
and
daa
nop
sbb
shll
int
xor
xchg
push
je
jb
jo
push
cmpsb
or
or
pop
sbb
push
in
pop
cwtl
mov
cmp
and
add
jnp
xlat
mov
push
cmp
push
outsb
sbb
andb
sbb
insl
sbb
xor
fmulp
sub
inc
into
mov
dec
push
jg
in
lret
jne
mov
stos
cld
inc
sbb
js
cmpl
and
enter
stos
movsb
cs
std
addr16
hlt
hlt
push
jns
call
push
cmp
into
sub
cmp
lods
or
and
or
loope
dec
insl
mov
or
mov
mov
adc
add
jle
xchg
sub
and
ret
stos
cwtl
outsb
negb
pushf
in
fsubrl
and
test
push
mov
and
jmp
movsl
adc
jmp
hlt
adc
jo
sub
pop
pushf
add
gs
pop
push
pop
popf
shlb
cmp
mov
sti
pop
adc
pop
sbb
mov
cmpb
jae
inc
aas
pusha
call
cmpl
mov
stos
dec
jl
cmp
adc
jb
out
pop
mov
mov
ja
sub
test
addr16
jo
xchg
add
sub
xchg
fcoml
inc
jbe
jns
sub
jle
or
outsl
jne
or
hlt
jg
frstor
xorb
or
xor
loopne
pop
cmc
xchg
xchg
das
fadds
movsb
jg
aaa
imulb
sahf
cmp
in
jne
or
out
jle
mov
lret
aaa
orl
in
and
into
pop
inc
in
sbb
jne
and
mov
jg
int3
xchg
push
fiadds
mov
testl
inc
jae
jns
addr16
pusha
jo
jl
es
repz
mov
cli
push
in
mov
outsb
sub
push
add
das
sub
mov
aaa
adc
inc
cmp
cs
sbb
outsl
cld
addr16
int
mov
pop
sub
out
stos
cld
jno
fdivl
mov
pusha
pop
fs
xlat
sbbb
out
test
call
xor
das
inc
push
mov
mov
mov
xrelease
outsl
inc
lods
out
mov
mov
idivl
push
lods
test
in
cmpsb
push
xor
stos
aaa
rcrl
insl
jmp
pop
jnp
mov
cmpsl
int3
push
or
enter
in
or
jnp
mov
jns
lds
enter
dec
mov
bound
pop
loopne
fwait
pop
mov
jo
test
or
cs
adc
mov
jne
or
cmc
inc
inc
shrl
outsl
hlt
push
enter
mov
jge
shrb
stc
rcrb
bound
cld
jge
lea
mov
idivl
mov
cmp
hlt
out
std
test
xchg
imul
decb
out
mov
stos
sub
lods
cwtl
fsubl
jle
pop
bound
dec
pop
push
in
stos
jb
daa
popa
xchg
add
loop
cmp
adc
test
fmull
pop
mov
push
and
lea
pop
pop
test
test
int3
pop
mov
out
js
loope
lock
dec
iret
add
sarb
push
repz
push
rorb
mov
scas
mov
insb
lods
jnp
inc
jl
pop
mov
push
add
stc
je
push
add
inc
pop
pop
dec
shr
rcll
aas
push
mov
test
mov
in
pop
push
scas
shl
aam
jns
sahf
push
addr16
push
push
push
add
out
scas
lds
daa
dec
mov
loope
sub
lods
loop
cwtl
jle
ret
adc
pop
scas
push
add
shr
jb
jl
cmp
push
xchg
rclb
xor
xchg
cltd
mov
nop
jne
cmc
loope
sub
mov
add
sub
les
clc
dec
sbb
loopne
pop
dec
bswap
test
pushw
adc
shrb
nop
fisubrs
idivl
stc
add
enter
scas
pop
mov
sbbb
push
int
inc
add
loope
pusha
cmp
mov
push
mov
dec
xor
bound
jl
adc
test
dec
cmpsb
dec
ret
xor
icebp
in
hlt
adcl
or
mov
enter
push
mov
test
push
adc
adcl
inc
nop
mov
mov
inc
test
repnz
ss
mov
in
insb
lods
mov
add
loope
dec
rcl
lret
or
leave
push
test
xlat
fisttpl
mov
or
xor
pusha
sub
pop
hlt
xor
into
orl
xchg
scas
ljmp
addl
xor
test
mov
mov
nop
js
pop
jns
ds
cmp
sub
pusha
sub
cmpxchg
or
ret
stos
mov
sub
les
cld
mov
add
sti
cmpsb
out
sub
test
cli
push
cmp
dec
imul
mov
loopne
xor
jns
mov
std
outsl
cld
in
add
dec
xor
add
and
inc
inc
mov
push
lcall
cmpsb
neg
aaa
mov
nop
or
dec
in
stos
xor
sub
repz
mov
push
adc
aad
out
cmpsb
lock
cwtl
cmp
sahf
out
pop
inc
push
mov
or
into
fisubrs
mov
fwait
xor
enter
jg
and
js
lods
call
icebp
shlb
sub
or
data16
xor
cmp
xchg
or
fdiv
xor
in
and
dec
enter
mov
mov
cmp
pop
nop
jl
out
push
xor
rolb
adc
iret
inc
in
stos
pop
sub
out
lea
mov
jbe
sahf
std
inc
sbb
cmc
mov
sahf
mov
add
jnp
rorb
lods
in
jp
jo
sbb
adc
insl
rcll
mov
shlb
test
loopne
into
jb
das
dec
sbb
sub
add
inc
fldt
aad
mov
ljmp
mov
add
mov
aaa
fbstp
sub
push
inc
jnp
xor
or
test
in
push
adc
in
pop
roll
out
mov
loop
inc
mov
sub
aaa
adc
test
mov
jo
adc
and
jl
jns
pop
cmp
mov
imull
pop
scas
lea
sub
jae
jecxz
in
das
adc
icebp
ficoml
sbb
adc
jge
xchg
jno
addl
mov
jne
dec
or
das
adc
stos
in
rcrl
adc
cmpsb
and
cli
testl
mov
xor
jnp
mov
ljmp
mov
mov
lret
mov
mov
xor
out
xchg
push
ret
and
jo
inc
pop
int3
add
std
pop
insl
das
aaa
mov
ror
movb
ss
adc
jnp
ljmp
mov
pop
jno
pop
dec
push
aaa
iret
mov
imul
shl
cmp
xor
push
xchg
jno
jno
daa
cli
out
mov
push
mov
lods
pop
outsl
dec
mov
fs
mov
lds
adc
sub
push
js
inc
push
dec
stos
int3
outsb
daa
xor
inc
push
mov
lea
mov
mov
jbe
stc
in
inc
imul
inc
xor
fisubl
add
repnz
xorb
add
xor
mov
adc
sbb
cmp
sub
arpl
jle
orl
pop
cld
inc
xchg
and
fsts
scas
and
mov
sub
jbe
fucompp
div
addb
iret
jp
and
jl
in
mov
addb
addr16
orl
inc
roll
cld
mov
popa
mov
ret
sbb
lods
adc
lret
xor
inc
push
adc
jg
dec
cmc
dec
in
lock
sub
mov
add
mov
scas
jbe
aaa
mov
aas
lods
cld
jl
inc
mov
aaa
pop
sub
mov
nop
insb
jmp
and
loop
das
jl
pushf
imul
adc
pop
mov
aam
dec
push
mov
cmp
sub
lods
dec
mov
aam
bound
fwait
inc
lahf
add
adc
jne
data16
repz
bound
cs
sub
xor
cs
push
cmp
jno
ficompl
aas
mov
push
xor
fcoms
mov
inc
pop
rcrb
das
or
pop
push
jg
mov
mov
mov
or
dec
sub
inc
cs
fnstenv
mov
cs
xor
icebp
adc
inc
mov
mov
addr16
lea
push
adc
test
inc
out
dec
jmp
mov
pop
pop
cmp
rcll
fldenv
insl
pop
icebp
sbb
mov
aas
fstpl
inc
inc
movsl
inc
cmp
and
dec
leave
out
movsb
dec
adc
pop
cltd
and
pop
pop
pusha
add
jbe
int
pop
sub
test
or
push
in
jle
insb
imul
sub
pop
and
popa
cwtl
add
inc
data16
fadd
or
push
pop
out
negb
sub
sub
dec
push
ret
jne
lods
sub
or
and
mov
aaa
pop
inc
dec
js
jno
jb
sbb
xor
pop
cmp
test
lock
push
aad
pop
clc
xchg
cltd
xor
lods
mov
in
pushf
or
pop
xor
sub
adc
xor
jo
mov
inc
sbb
mov
jl
push
jnp
mov
sub
adc
mov
aam
jmp
and
daa
fmuls
int
pop
or
dec
int3
lods
lock
xchg
sbb
mov
hlt
in
dec
sbb
sti
inc
xor
jb
leave
in
mov
jge
cltd
jb
fs
xchg
pop
push
imul
jbe
lods
fisubl
inc
je
mov
jns
repz
or
xlat
cmp
push
jp
daa
pop
push
mov
mov
out
lahf
lea
cmp
jl
cwtl
cmp
mov
adc
xchg
xchg
sub
pop
in
inc
mov
into
aas
loope
in
cmp
sbb
jl
cmpsl
add
lret
hlt
inc
jl
pushf
mov
or
clc
hlt
stos
loop
cmpsb
daa
pop
gs
or
sahf
out
jns
sub
aas
mov
int3
mov
lock
dec
mov
jle
xchg
push
in
fcoml
push
addr16
fdiv
inc
out
xchg
jge
fstpt
inc
jmp
into
and
iret
aad
mov
lcall
pop
mov
jle
add
jl
inc
call
cmp
gs
icebp
cmpsl
mov
lods
iret
xor
or
fisubrs
push
xor
sbb
adc
fstl
outsb
daa
lea
cmp
cmp
cmp
mov
rorb
push
push
xchg
and
fwait
and
roll
sub
sbb
addl
shlb
cmc
mov
push
scas
pop
fstpt
scas
ja
jno
sub
sbbl
aad
shll
lock
pop
ficoms
and
ljmp
cmp
jmp
cmc
fimull
sbb
dec
jnp
cmp
cmp
inc
mov
ss
ljmp
push
push
push
sahf
lret
mov
js
je
xor
dec
pop
jo
pusha
mov
ds
push
xchg
pop
inc
andb
addr16
fs
mov
sbb
inc
sbb
aam
and
scas
jp
and
fistl
aad
xorb
hlt
xor
outsl
xchg
cmpl
dec
sub
in
ljmp
scas
arpl
push
xchg
xchg
add
sahf
jmp
pop
push
and
cmp
push
inc
mov
repnz
in
jp
ficoml
data16
icebp
fdivl
jmp
fcmovne
lret
lock
dec
in
cltd
sarl
pop
test
shlb
ret
pop
push
add
xor
pop
test
xor
push
mov
jge
outsb
test
mov
in
imul
xor
cmp
dec
add
adc
ds
dec
les
push
xchg
cmp
loope
and
jnp
xor
test
movsl
rorl
jp
pop
data16
out
inc
add
cmp
cmc
xor
mov
fdivs
nop
loopne
call
adc
push
arpl
sbb
pop
or
xorb
mov
or
sub
xor
inc
leave
pop
inc
test
xchg
inc
dec
dec
mov
mov
lret
dec
aaa
xchg
rcrl
add
mov
inc
or
adc
jl
and
clc
inc
cmp
push
sub
jo
adc
inc
imul
push
cmpl
jg
pop
dec
in
dec
cmp
xor
icebp
pop
jbe
inc
mov
adc
ds
inc
std
sahf
and
clc
add
pop
sbb
push
xchg
inc
outsl
outsb
ret
pop
jbe
sbb
in
lods
ja
sub
movsl
adcb
in
lock
mov
xor
dec
pop
cmc
jae
mov
fbstp
ja
hlt
or
jno
pop
fbstp
xor
das
mull
outsl
aaa
shrb
xchg
aam
dec
dec
pop
mov
rclb
mov
push
xor
adc
mov
leave
cli
stos
lods
push
xchg
icebp
bound
std
cmc
outsb
out
push
push
push
adc
pop
inc
mov
cmp
aaa
int3
mov
das
dec
cmp
addb
dec
test
adc
aam
outsb
cmp
jmp
in
test
insl
lods
repnz
xor
imul
ljmp
in
inc
cld
dec
mov
clc
pusha
xchg
add
push
clc
and
divl
mov
add
mov
inc
xlat
or
nop
mov
mov
rcl
int
inc
inc
xor
lahf
pusha
or
push
mov
xor
xchg
or
sbb
lods
push
jo
and
andb
sub
sub
adc
or
shll
mov
xor
lods
or
mov
in
add
add
fstpt
ja
jns
sub
push
lret
je
sub
jg
sub
mov
icebp
aas
mov
je
in
adc
sbb
outsb
cld
push
jbe
pop
ja
push
testb
jne
test
mov
outsb
mov
sahf
xlat
sbb
out
pop
mov
add
add
or
aaa
dec
pop
mov
jle,pn
hlt
fwait
out
xorl
mov
cmp
push
inc
pop
jle
fs
insb
cmp
cld
mov
sbb
dec
stos
push
xor
sub
mov
sbb
jbe
shrl
mov
xorl
xchg
scas
and
push
outsl
inc
rep
addb
dec
jo
fnstenv
push
xor
add
sub
test
push
daa
pop
subl
sbb
and
xor
push
jno
dec
pop
mov
pop
cwtl
bound
gs
mov
mov
jne
adc
addr16
xchg
dec
xor
imul
shr
xchg
test
pop
ds
mov
xchg
sbb
loopne
jo
pop
jg
mov
pushf
add
outsb
push
mov
push
sbb
adc
mov
loope
xor
scas
aad
mov
data16
leave
inc
adc
pop
inc
push
jo
mov
pusha
mov
jecxz
pop
sub
pop
add
outsb
test
repnz
jp
in
stc
je
xchg
pop
lock
pop
xchg
repz
enter
adc
xor
mov
jle,pt
negl
add
repz
shlb
jbe
clc
xor
ret
fistps
pop
pop
push
fs
enter
xor
inc
xchg
inc
dec
inc
nop
pop
aaa
pop
xor
sbbl
fimuls
sarb
xor
push
mov
dec
cmp
mov
mov
push
pop
pop
aas
insl
in
cmp
mov
inc
adc
orl
popf
jo
mov
or
lret
out
sti
aaa
ret
sbb
xchg
sub
scas
in
sub
xor
or
movsl
pop
pop
jp
sbb
or
popf
xchg
insl
add
arpl
inc
jno
test
pop
test
cmp
scas
in
mov
or
xchg
call
mov
jne
insb
mov
outsl
scas
and
xor
xchg
cs
mov
add
jae
popf
les
or
jl
shrd
adc
adc
lds
bound
sub
push
sub
into
fscale
scas
dec
jge
jae
add
mov
pop
cmpb
lock
fstl
loop
clc
jg
jp
scas
xor
xchg
adc
dec
mov
clc
mov
pop
jle
enter
int
mov
dec
popf
pop
jmp
jne
mov
mov
in
or
insb
das
adc
mov
or
popf
inc
dec
mov
roll
xchg
inc
fcmovnbe
into
mov
dec
ret
jns
mov
xchg
pop
inc
outsl
jo
repz
orb
xor
sbb
jb
pop
adc
push
repz
push
xchg
mov
lahf
ljmp
add
notb
movsb
sub
ja
mov
xchg
lahf
lock
push
bound
wrmsr
fdivs
sbb
push
cmpsl
pushf
in
pop
popf
ret
xor
lahf
mov
inc
mov
shll
stc
push
mov
or
pop
push
cmc
mov
aaa
pop
pop
inc
jl
inc
adc
pop
mov
mov
and
mov
fnstsw
xchg
mov
mov
loopne
mov
ss
sub
xor
jo
mov
in
cmp
pop
cmp
in
fsubrl
outsb
mov
push
pop
cltd
shrl
das
mov
jnp
pop
add
adc
in
mov
pushf
shrl
xorl
pop
dec
cmpsb
dec
je
repz
cmpl
xor
std
inc
jl
enter
push
movsb
in
shl
test
push
sub
ds
push
repz
nop
mov
and
andl
pushl
jl
cmc
mov
lock
cs
add
shlb
in
adc
adc
outsb
xchg
add
cmpsl
cmp
mov
dec
adc
xchg
xor
xchg
push
aaa
mov
or
mov
popa
mov
mov
xchg
xorb
sub
mov
xchg
insb
mov
in
dec
nop
aam
or
sahf
mov
mov
xor
cld
and
push
aad
sub
sub
inc
xchg
mov
adc
movsb
js
mov
mov
cmp
and
mov
sub
mov
mov
mov
xor
cmp
das
rclb
das
gs
mov
dec
jl
orb
or
mov
mov
jb
xor
push
ja
subb
xchg
ds
sti
push
xor
sub
xor
imull
das
sub
jbe
imul
add
in
fisttpl
into
decb
dec
jge
sti
pop
mov
fcomps
mov
outsl
nop
adc
or
mov
and
mov
push
push
sti
mov
jbe
xor
inc
and
cmp
pop
fwait
mov
xor
andl
pop
leave
and
dec
and
scas
mov
inc
aas
mov
cmp
lods
push
pop
sub
faddl
pop
adc
mov
test
cmc
cwtl
cwtl
push
insb
push
popf
sar
cmp
jo
movsl
xor
outsb
sbb
jae
xchg
ja
daa
push
push
sbb
push
xchg
mov
mov
aad
addl
cmp
movsb
insl
lret
hlt
mov
inc
in
loope
inc
ljmp
push
pop
arpl
gs
sbb
lds
or
mov
push
jecxz
and
out
fs
or
cld
add
push
fistps
lret
cwtl
push
xchg
mov
mov
testl
mov
push
jne
xor
jo
shr
je
nop
or
aaa
pop
cwtl
pusha
ss
je
jnp
jge
push
cmp
pusha
jns
add
sub
mov
in
dec
push
es
stos
jge
aas
add
lds
dec
popa
cmpsl
dec
sbb
loope
pop
inc
or
cmp
and
jp,pn
mov
inc
mov
andl
dec
stos
dec
mov
sub
jno
aam
mov
leave
lahf
popf
jecxz
or
repnz
dec
adc
in
push
outsl
dec
dec
mov
adc
cld
outsb
ds
mov
ja
pop
push
mov
jp
mov
cwtl
xchg
inc
lcall
xchg
mov
sub
add
pop
jbe
sbb
shrl
jle
fwait
or
and
add
inc
jge
dec
bound
inc
xchg
and
mov
jb
repnz
test
xchg
sbb
js
mov
lret
hlt
mov
jno
mov
inc
pop
mov
jno
cld
rcll
test
js
fs
jle
xor
sbb
xor
test
jle
cmpsb
ds
in
mov
pop
jmp
test
outsb
push
outsb
mov
sub
mov
scas
out
dec
dec
sahf
adc
imul
stos
mov
shll
push
cmp
je
inc
popf
dec
int
push
pushf
pop
jmp
insb
xor
lods
cmp
mov
sub
sub
sarb
push
outsl
pop
mov
pop
and
pusha
int
lock
pop
sub
xor
adc
mov
sbb
lret
std
jae
push
test
cmp
xor
movsl
loopne
sbb
mov
pushf
arpl
xor
mov
cmpsl
xor
jmp
orl
jns
outsb
clc
movmskps
dec
out
push
gs
jae
icebp
add
and
testb
xor
sbb
cld
mov
cmp
test
inc
and
inc
jae
das
push
pop
aaa
mov
sub
mov
adc
and
iret
int
js
inc
xor
mov
ds
push
imul
and
les
ds
add
pop
pop
shrl
add
add
test
ds
out
das
popf
inc
adc
hlt
adc
sbb
fistpl
scas
adcb
pop
jbe
inc
inc
pop
enter
xor
insl
lret
inc
jle,pn
push
pop
adc
mov
scas
rorb
push
lds
adc
popa
or
daa
fbld
ret
int3
fnsave
or
xchg
and
jecxz,pt
scas
dec
notb
decb
sub
add
jno
sub
jg
fs
mov
xchg
das
adc
pop
xorb
insb
test
or
mov
inc
push
mov
aaa
shlb
outsb
nop
xchg
int3
imul
push
mov
nop
das
xor
sarb
jl
dec
inc
rclb
inc
test
or
outsb
and
push
dec
mov
das
lahf
lods
bnd
jle
dec
dec
add
mov
or
mov
cmp
lea
push
test
das
scas
jg
dec
arpl
cmp
xchg
cmc
dec
push
daa
xchg
push
icebp
lcall
pop
ds
xor
sub
inc
push
ss
inc
sub
loop
sub
mov
push
or
adc
inc
mov
hlt
jl
mov
aas
pop
daa
xor
gs
jmp
pushf
imul
mov
mov
xlat
repz
mov
adc
fstps
inc
dec
fcoml
lods
jno
dec
das
shll
xor
cmp
adc
mov
xor
aaa
adc
mov
cmpb
je
adc
js
or
inc
sub
dec
out
push
xchg
xchg
adc
cld
inc
sub
jns
push
clc
push
scas
and
or
sub
inc
addr16
inc
das
inc
mov
and
cmp
inc
mov
sti
shr
lods
jle
add
xchg
hlt
push
out
out
sub
ffreep
cmc
fsubrs
movsl
ss
cmp
aas
out
jl
jl
sub
cwtl
pushf
je
pop
jb
mov
jo
cwtl
fdivrl
inc
push
xchg
cmp
test
jle
add
cmp
repz
sbb
call
jns
loop
xchg
sbb
in
lods
test
mov
in
inc
mov
fs
mov
sub
xchg
jge
ljmp
std
es
pop
fldt
dec
cs
cmc
push
aas
cmp
jle
fidivrl
outsb
ds
popf
mov
xor
push
pop
je
xor
rorl
mov
mov
aad
outsb
jno
pop
and
repz
mov
shrd
push
das
jl
mov
push
xchg
lock
adc
call
add
sub
nop
scas
adc
push
jg
jo
addb
mov
xor
dec
pop
fsts
mov
add
pusha
and
xchg
adc
loop
sub
test
inc
adc
pop
pop
lods
jns
mov
jle
scas
repz
adc
push
lods
inc
push
inc
or
dec
cmp
fs
and
sbb
cmp
fs
pcmpeqw
jb
inc
pop
inc
pop
adc
roll
push
pop
cs
mov
jge
cmpsb
or
cmpb
jae
cmp
pop
das
repz
xchg
sahf
cmp
inc
sub
push
adc
jb
mov
sarb
in
adc
jge
jb
shrl
iret
mov
int3
push
addr16
outsb
pusha
push
inc
stos
lock
das
pop
push
push
rorl
adcl
js
add
sub
xor
cwtl
gs
lea
lea
ds
hlt
fmuls
mov
sub
int
pop
or
ss
jl
shlb
mov
arpl
xor
xchg
lods
int3
outsb
xchg
dec
rcrl
imul
dec
pop
jmp
adc
mov
shll
adcb
daa
ds
cmovl
mov
push
sbb
inc
add
mov
cmp
enter
mov
jle
cmpsb
mov
xor
popf
cmc
dec
inc
or
add
leave
and
xchg
lahf
pusha
ret
inc
cmp
mov
cmp
mov
test
and
cli
sub
jb
or
xchg
pushf
cmp
mov
shrb
sarl
sbb
xor
lock
xor
inc
movsl
shlb
sbb
fs
insb
fsubr
add
jl
mov
pop
leave
mov
push
inc
or
lods
repz
add
pusha
iret
sahf
fs
movsl
push
ds
nop
push
fidivs
stos
lahf
xchg
pop
mov
lds
xchg
mov
jp
outsb
dec
cmp
jmp
jnp
mov
cs
inc
jmp
adc
or
cmpb
xor
mov
mov
mov
mov
test
mov
dec
jle
push
mov
mov
das
clc
pop
jg
jle
adc
inc
ss
pop
xchg
push
subb
pop
ljmp
divb
sub
push
arpl
ficompl
adc
push
adc
and
add
add
mov
add
jns
sub
dec
mov
add
out
subl
and
xchg
fistpl
in
les
aas
jg
fcompl
mov
mov
and
pushf
xor
fdiv
stc
int
adc
pop
and
enter
xorl
aam
dec
in
pop
jo
int
orl
aam
aad
lcall
add
add
pop
stc
dec
subl
xchg
cmp
stos
sbb
icebp
or
or
mov
push
xor
dec
add
or
fwait
ja
subb
and
jle
mov
inc
shrl
sbb
scas
xchg
mov
xchg
outsb
mov
adc
repnz
ss
arpl
mov
mov
fstps
sbb
xor
inc
cmc
xchg
and
cmpsb
sbb
add
dec
dec
cmpsb
shl
sarl
nop
cmp
pop
pop
xor
lret
cmp
popf
arpl
adc
sbb
xlat
pop
dec
lcall
std
adc
outsl
out
sub
pop
xor
or
mov
pop
insl
xchg
mov
cmp
pusha
and
sti
int
data16
fdivrs
push
xchg
pop
movsb
cwtl
xor
jno
push
xchg
test
pop
xor
push
dec
xor
in
push
cli
xor
xchg
orl
out
loop
mov
repz
jno
shlb
sub
jb
leave
hlt
jl
push
decl
or
iret
inc
dec
mov
sub
addb
inc
scas
enter
cmp
repnz
call
fcmovne
jae
inc
aaa
mov
fwait
dec
add
mov
shrb
lock
les
jle
fwait
xor
pusha
popa
jge
lret
jmp
lret
dec
jl
push
je
lret
notb
test
mov
xor
cmp
mov
gs
je
dec
xor
daa
pop
push
imul
in
es
nop
push
xchg
mov
rcrl
js
jmp
dec
lock
loope
popa
pop
mov
xchg
aad
cmp
pop
xchg
stos
sbb
repz
and
fdivs
lret
bnd
adc
jb
cmpsl
mov
push
popf
or
xor
xchg
es
mov
jp
aaa
scas
mov
in
int
mov
fcoml
enter
and
ljmp
js
test
or
cmp
jbe
push
xchg
push
dec
push
jno
outsb
rorl
inc
push
inc
push
test
sbb
dec
inc
xor
xor
lea
dec
mov
nop
xor
mov
int
cmc
mov
stos
mov
jb
xor
cmp
inc
loopne
aaa
or
and
pop
test
pusha
cmp
dec
xchg
in
push
loop
cmp
sub
repz
test
adc
push
sub
jbe
leave
cmp
push
pushf
cmpsl
and
int3
pop
sbb
xchg
jo
popa
xchg
cmp
mov
shlb
pop
jno
xchg
cld
js
nop
gs
mov
je
outsl
rolb
fdivrs
sbb
aad
adc
cmpsl
ret
pop
scas
and
stos
sbbl
std
sbb
inc
push
push
push
push
arpl
cmp
xlat
aaa
adc
mov
sub
scas
das
sbb
jge
cmp
mov
cmc
jp
cmovle
clc
negb
jne
pop
xor
jecxz
xor
pusha
test
xchg
add
mov
outsl
xchg
lock
jmp
dec
xchg
decb
daa
cmp
out
mov
iret
loopne
pop
lret
cmp
mov
pop
fdivr
mov
adc
sub
add
dec
mov
cli
pop
mov
push
inc
cmp
int
aaa
xorl
pop
cmp
stos
sbbb
scas
xor
inc
jne
push
lret
stos
pop
dec
fwait
pop
mov
ret
cmp
bound
cli
int
test
cmp
mov
xchg
cmc
test
push
test
imul
sub
pop
mov
mov
and
std
lods
lds
xchg
sbb
out
inc
cld
dec
out
scas
rclb
push
mov
popa
jns
adc
stos
ret
cli
pushf
leave
mov
adc
ds
mov
jge
push
and
je
mov
movsb
sub
jns
mulb
rclb
push
fstpl
or
fists
inc
adc
push
std
sbbb
outsb
sbb
mov
push
imul
pusha
dec
dec
bound
mov
aaa
xchg
jp
fdivrs
mov
outsl
ja
jno
lds
stos
fsubr
shl
push
dec
push
movsl
in
mov
outsb
add
fisubrl
adcb
pushf
cmp
push
add
mov
inc
or
adc
jmp
rcrl
std
mov
clc
pop
jl
push
int3
cld
sbb
fisubrl
pop
mov
pop
mov
adc
push
outsb
mov
inc
sub
addr16
rcrb
mov
repnz
stos
xchg
into
pop
pop
push
rol
adc
insb
and
xchg
mov
test
dec
daa
jl
ficoml
cwtl
cmpb
jl
xor
and
jb
shll
add
xorl
fnstenv
adc
int
or
and
mov
pushf
or
adcb
dec
xor
mov
test
pusha
xchg
mov
adc
sub
pop
lahf
dec
bound
xor
mov
fistl
sar
hlt
xor
xchg
adc
shrb
pop
adc
orl
push
push
lcall
ds
sbb
fldenv
xor
mov
mov
pop
mov
lods
adc
addr16
pop
insb
adc
jg
adc
lret
pop
dec
pop
adc
shrl
out
ljmp
in
mov
sbb
adc
in
mov
ds
mov
inc
push
push
xchg
xor
pop
add
xor
int3
ja
loopne
lods
xor
or
cmp
das
pop
xor
pop
in
and
mov
insb
push
push
mov
std
mov
in
stos
pushf
inc
ja
les
insb
pop
mov
aam
push
call
push
xchg
mov
mov
je
mov
js
pop
add
pop
pop
add
lock
insb
or
sub
xchg
cmp
adc
lods
push
xor
jne
mov
xchg
sbb
mov
scas
rolb
or
pop
mov
int
add
lahf
das
mov
dec
sub
xchg
dec
pusha
add
and
daa
xor
dec
sahf
insb
sub
les
inc
mov
test
jbe
cli
dec
sbb
out
pop
xchg
jns
das
jl
cltd
sbb
dec
orb
pop
arpl
jg
gs
and
out
adcl
dec
inc
xchg
sbb
pop
push
adc
mov
inc
enter
cmovne
je,pt
scas
sbb
adc
cmp
push
pop
lods
add
stc
into
movb
cld
outsb
dec
scas
and
scas
jae
cmp
cmp
jo
sbb
xor
cmp
mov
aam
lods
xchg
and
clc
ds
add
xor
mov
sbb
inc
and
sbb
aaa
jg
sub
jmp
aad
std
ds
fidivs
scas
lods
in
shll
xchg
mov
in
sbb
out
insb
popf
rolb
pop
loopne
jmp
mov
test
movsb
shlb
push
cmp
xlat
xchg
pop
fists
inc
add
jl
shlb
xchg
mov
add
clc
and
and
sub
aam
pop
mov
inc
xor
xchg
push
lods
rclb
loop
mov
xchg
pop
movsl
aaa
xor
mov
mov
nop
insl
jle
push
xchg
loop
mov
or
lods
les
daa
mov
sub
cmp
sub
mov
mov
adc
mov
cmpsb
dec
ja
mov
fidivl
xor
loope
cmpsb
inc
push
add
mov
push
fbld
xchg
movsl
rol
inc
addr16
repz
mov
adc
scas
sub
lods
pop
test
fildll
lods
cltd
inc
sbb
xchg
lds
cwtl
imul
pop
scas
mov
xor
aam
lods
inc
addr16
rorl
mov
cmp
xor
jns
xchg
cmp
mov
sub
loopne
push
mov
jl
in
shlb
and
clc
dec
in
adc
loopne
or
jge
xor
cmp
mov
sub
test
fbld
daa
push
ss
push
pop
ds
into
insb
mov
loop
test
push
pop
and
ds
dec
imul
xor
lcall
xchg
push
xor
lods
inc
dec
sahf
jne
imul
data16
mov
pop
mov
addb
fisubrs
in
pop
adc
adc
inc
pop
fs
dec
sub
dec
rcrb
and
jnp
xor
movsl
cmp
mov
int3
or
jp
scas
ret
cmp
push
pop
test
cmpsb
addr16
xchg
mov
xchg
sub
dec
jp
jb
adc
imul
ja
add
mov
cmp
call
push
fcmovu
add
push
push
pop
pop
cmp
cmp
test
jo
jmp
adc
and
cmp
xor
cmp
or
enter
clc
shlb
sbb
inc
dec
mov
mov
outsb
hlt
push
psubusb
cld
and
addr16
mov
fs
movsb
xor
cmp
arpl
cs
sub
fs
outsl
sub
push
xor
rolb
lret
rclb
mov
sti
and
loop
sub
fsub
lret
test
xor
lahf
mov
loop
in
mov
dec
push
leave
push
lods
push
in
mov
jg
iret
loop
cwtl
xor
add
in
mov
cmp
cmpsb
dec
enter
lods
cmp
fidivrl
mov
lock
mov
ds
ficomps
and
inc
mov
stos
xchg
imul
stos
js
xchg
in
fbstp
push
aam
into
sub
repnz
or
gs
std
dec
clc
cmp
jbe
int
inc
shlb
insb
jne
std
xchg
sbb
pop
hlt
inc
cmp
in
repz
mov
inc
movsl
xor
sub
les
adc
jg
push
jo
push
add
and
inc
iret
rorb
pop
jne
xchg
test
xlat
mov
fsubrl
jle
ror
ja
or
or
cli
bound
xor
adc
dec
cli
push
and
pop
jg
cltd
int3
cmp
ret
mov
out
inc
add
jg
rolb
mov
jbe
sbb
jmp
sbb
adc
adc
or
mov
int
dec
pop
scas
cmpsb
repz
fisttpl
mov
mov
ljmp
xchg
push
and
data16
dec
pop
sub
lods
aas
std
pop
out
lock
pop
xor
scas
xchg
sub
dec
dec
lock
xchg
mov
test
scas
xchg
mov
push
lods
mov
add
push
mov
and
inc
mov
pop
mov
mov
cs
xchg
jo
popf
sbb
ret
sub
cmp
cmp
inc
jns
mov
mov
fsubs
in
pop
or
cmpsb
dec
pushf
add
insb
mov
pusha
adcl
jbe
xor
into
movsl
jnp
jmp
bound
in
mov
aam
push
cmpsb
or
add
ja
lods
inc
out
jl
and
xchg
fmull
stc
sub
pop
lock
push
inc
pop
inc
adc
mov
mov
xchg
aaa
adc
lock
ss
out
xor
imul
adc
sarb
je
js
sub
push
faddp
push
jl
inc
push
popf
test
sub
gs
test
adc
out
in
cmp
shll
scas
sbb
aaa
scas
cmp
cmp
adc
fmul
inc
mov
mov
test
mov
push
jnp
in
push
sbb
add
jne
push
jg
pop
sbb
mov
add
mov
mov
les
xor
jp
cmp
clc
insl
push
push
pop
sbb
and
fwait
mov
jo
lds
add
leave
stos
mov
aam
or
pop
and
push
xor
add
xor
or
and
adc
bound
das
call
dec
hlt
fdivrs
in
lret
sbb
gs
out
cmp
cmc
mov
inc
jl
sub
jp
dec
inc
sbb
aam
test
fwait
lcall
movsl
jbe
ljmp
push
xchg
xor
push
repnz
mov
je
xor
adc
or
xchg
jmp
lcall
jp
sarb
xor
inc
mov
mov
popa
add
pushf
mov
jecxz
adc
push
xor
insl
andl
sub
sti
or
dec
dec
and
pop
jg
fbld
or
stc
sub
mov
fcomps
mov
jbe
pop
imul
mov
ds
iret
pop
dec
sbb
or
loope
pushf
lahf
scas
push
clc
pop
and
add
dec
movlps
or
mov
cltd
xchg
jle
mov
jne,pt
jmp
jo
lock
and
lret
adcb
mov
addl
pop
into
push
adc
cld
pop
xorb
adcl
xchg
dec
mov
scas
hlt
sub
push
dec
and
or
mov
out
xchg
inc
xchg
jmp
mov
aaa
push
push
cmpl
push
or
repnz
inc
adc
push
mov
jo
push
cmp
cmp
mov
add
lods
and
or
adc
out
pusha
pop
aas
int
inc
xchg
ja
dec
add
and
mov
fistpll
jb
fwait
inc
xchg
and
adc
rorl
adc
dec
iret
jo
push
xor
and
mov
mov
rorb
fdivrl
push
push
adc
mov
aas
push
repnz
inc
cmp
add
mov
lret
jnp
sahf
mov
popa
xlat
pop
add
and
push
fpatan
stc
xor
mov
adc
shlb
loopne
ficomps
inc
adc
mov
shlb
jae
aas
cli
ss
mov
loope
cs
jo
and
mov
mov
lret
jmp
dec
push
push
pop
pop
sub
mov
ja
mov
mov
pop
jo
pop
xor
pop
push
xchg
inc
mov
jae
mov
das
cmp
inc
or
push
mov
js,pn
imul
lock
pop
sahf
inc
and
or
sub
insb
out
xchg
jno
xchg
sub
adc
scas
cmp
pop
sub
cmp
jmp
enter
mov
repnz
inc
inc
mov
cmp
aas
jno
cld
sub
mov
fisttpl
and
or
loopne
add
in
stos
push
adcl
in
mov
mov
out
aaa
sub
jecxz
xor
call
lret
sub
mov
aam
std
push
lea
push
adc
pop
mov
sub
out
or
sub
jno
nop
push
cmp
iret
xor
mov
mov
xchg
xchg
fnstcw
jo
pop
adc
mov
loopne
insl
jne
dec
mov
repnz
sub
outsl
cmp
jg
jne
jp
jecxz
addr16
je
in
jmp
mov
arpl
je
bound
mov
je
in
and
je
aad
in
popa
repz
sub
aas
adc
aad
jg
out
xor
lods
ja
je
sbb
inc
adc
dec
adc
addr16
jecxz
lret
xor
mov
xor
xchg
subb
pop
cwtl
xchg
sbb
push
ja
ljmp
push
add
inc
mov
xor
mov
jb
inc
sbb
mov
and
cmpl
and
lods
mov
sub
push
hlt
push
jg
sbb
pop
pop
mov
and
push
sahf
xchg
ss
lahf
out
rcrb
mov
sbb
rorb
push
shll
bound
mov
jle
pop
das
aaa
call
test
mov
insb
sub
outsl
aaa
mov
sbbb
and
js
xor
cs
imulb
lock
inc
or
leave
and
dec
jmp
fnsave
push
rcl
pop
add
lock
add
xor
cs
xchg
mov
jl
test
mov
xor
push
and
lock
aaa
fwait
das
push
push
ret
hlt
and
mov
popf
aad
cmp
push
mov
xchg
and
mov
lods
or
outsb
push
jb
repz
sbb
lock
cmp
push
push
lods
mov
pop
jmp
and
cs
sbb
test
lret
mov
sbb
or
cli
sub
fildl
in
dec
scas
jge
cmc
push
in
push
js
inc
push
xchg
scas
lahf
mov
aas
in
dec
dec
cld
data16
aaa
repnz
das
pop
jle
aaa
dec
sub
cs
cmp
mov
push
repnz
inc
and
xchg
pop
fucomp
aaa
xchg
dec
insl
cmp
ret
ds
sub
adc
lret
cmpb
sbb
mov
xor
movsl
shl
nop
jp
in
fnstsw
dec
sbb
addr16
add
sub
repnz
pop
movsb
ja
dec
aaa
mov
ss
in
inc
imul
aas
test
jno
sahf
inc
sbb
add
dec
pop
mov
loope
push
aas
shll
popa
ds
and
and
mov
adc
fwait
mov
mov
sbb
xor
lahf
rolb
fistpl
mov
stos
inc
adc
nop
sub
mov
mov
and
js
sbb
mov
outsb
mov
mov
push
rcrl
inc
dec
push
adc
mov
xor
adc
das
ret
xchg
push
bound
mov
mov
cwtl
cmp
xor
inc
jmp
fdivp
xchg
pop
inc
mov
clc
out
inc
scas
and
test
jmp
scas
xor
push
mov
or
mov
jo
dec
dec
cmp
daa
cmp
dec
mov
sub
das
inc
jl
add
sbb
xchg
fsub
into
cmp
leave
inc
scas
adc
xor
mov
push
addr16
ja
mov
xchg
mov
pop
xchg
cmp
xor
scas
cmpsl
movsb
nop
sbb
mov
inc
jp
scas
into
incl
repz
pop
mov
inc
enter
sahf
je
pop
push
inc
mov
test
jg
sub
cmpsl
pop
jnp
mov
push
sbb
jne
inc
jg
cld
addr16
ja
mov
jl
xchg
sbb
dec
ss
push
adc
scas
xchg
push
dec
movsb
pop
jb
aas
adc
in
push
mov
je
mov
xor
imul
call
outsl
out
adc
jle
jo
inc
inc
xor
scas
sbb
push
sbb
sti
push
sbb
xchg
inc
add
fmull
jg
add
scas
enter
adc
pop
dec
mov
lahf
jl
sbb
cmp
outsl
addr16
das
pop
cmp
dec
dec
inc
test
mov
mov
popa
mov
mov
push
sbb
data16
push
and
mov
adc
fcmovnbe
add
pushf
scas
add
dec
push
jo
inc
adc
mov
xchg
sbb
outsb
notb
icebp
cmp
out
ret
shrb
sti
inc
stc
movsb
dec
shll
jno
xchg
shll
sbb
cmp
sub
inc
mov
adc
jl
mov
dec
jl
dec
ret
sbb
jmp
xor
xor
test
sbb
lds
dec
or
mov
pop
js
inc
imul
lcall
pop
outsl
imul
xor
das
push
mov
int3
jne
into
pusha
mov
call
inc
dec
xor
cmp
inc
xor
xor
pop
call
mov
dec
mov
jg
mov
cltd
adc
imul
inc
repz
adc
shll
aaa
mov
mov
xor
sub
xchg
adc
cmp
test
xchg
ljmp
leave
pop
imul
insl
jb
aad
fidivl
inc
adc
jp
gs
dec
mov
cmc
sub
xor
inc
mov
mov
loope
addr16
pop
mov
ret
sbb
pusha
shlb
dec
cmp
dec
inc
sti
rcrb
pop
out
pop
push
mov
xchg
pop
lods
jge
hlt
mov
addb
ror
adc
xchg
and
pop
add
mov
ljmp
mov
pop
fwait
inc
jbe
aas
pop
nop
pop
jne
xor
andl
leave
add
xlat
inc
push
push
or
call
mov
addl
cmpsl
adcb
mov
inc
mov
dec
loopne
aad
push
mov
mov
or
cmp
loope
mov
fs
sbb
cmp
adc
pop
scas
lret
rolb
out
hlt
or
lahf
mov
push
pop
sysexit
push
inc
mov
xor
insl
xchg
pusha
pop
cmpsl
fsts
aad
sbbl
cmp
lcall
lret
mov
jmp
jl
cmp
mov
test
shrl
out
adc
das
ss
xor
dec
xchg
mov
adc
push
nop
in
outsl
add
iret
pushf
in
rcll
out
aas
fists
mov
ss
xor
pop
add
and
push
std
pop
mov
enter
notb
mov
xchg
push
repnz
mov
add
jp
xchg
pop
jb
les
adc
cwtl
add
push
xchg
mul
into
xor
test
ja
insl
das
stos
aas
dec
push
andl
inc
and
cmovne
mov
stc
pop
push
mov
test
hlt
popf
jae
popa
inc
scas
stos
mov
in
adc
mov
mov
nop
scas
mov
add
pop
push
mov
mov
adc
sbb
inc
add
mov
add
mov
xlat
jbe
and
adc
sub
adc
cmp
cmp
fisttpl
mov
add
cld
aaa
mov
addl
pop
fwait
test
xchg
mov
ret
push
int
jmp
mov
inc
clc
addr16
daa
negb
and
cmpsl
bound
insl
into
popa
jmp
das
ds
clc
loope
cmp
shl
outsl
adc
cmpsb
scas
cmpsb
sbb
imul
jae
loop
or
xor
lds
dec
xchg
call
leave
xchg
cli
pushf
mov
shlb
rorl
test
lret
add
mov
stos
dec
imul
cmc
jecxz
enter
inc
inc
sbb
mov
push
inc
test
pop
dec
divl
cmp
das
cwtl
jae
jae
pop
lods
mov
add
mov
clc
inc
sti
shlb
in
cs
das
xor
sbb
mov
xchg
popa
push
push
test
xchg
mov
push
pop
inc
jae
ljmp
arpl
call
add
jne
inc
ja
mov
dec
pop
in
pop
roll
and
xlat
scas
mov
imul
lods
or
mov
mov
cmp
xor
push
jne
add
orl
fadds
mov
dec
push
cmp
xor
cmp
loopne
fnstsw
and
cmpsl
adc
in
scas
lock
cmp
cmpsb
push
cld
shrb
xor
pushf
in
jp
movb
daa
mov
adc
cld
in
jge
jge
dec
push
enter
pop
fdivrl
sti
pop
fimuls
int3
xchg
and
sub
scas
in
and
out
insl
and
rorb
mov
loop
or
mov
mov
pop
and
pop
aas
adc
sub
mov
push
and
adc
dec
xor
cs
lahf
and
cmp
shll
xchg
lcall
jge
js
adc
nop
ds
and
xchg
and
out
sbb
xchg
lea
pusha
shll
xchg
icebp
aad
inc
add
in
add
movsb
cmc
pop
add
xchg
jo
jecxz
sahf
pusha
dec
add
pop
stc
xlat
inc
cmp
mov
xchg
ret
fistl
sub
and
xor
or
repnz
shl
cmpsb
cmp
rcrl
int3
mov
sub
jo
jb
out
scas
sub
test
push
or
jnp
jb
in
sub
js
push
mov
pushf
sar
arpl
xchg
sub
sub
cld
lods
push
xor
es
insb
pop
data16
int3
mov
sub
xchg
ja
or
in
inc
adc
sub
dec
sub
mov
insb
loopne
es
add
push
pop
cmp
adc
repnz
push
hlt
test
notb
xor
stc
aaa
pop
xchg
cmp
sti
jl
in
insb
sar
lock
adc
mov
pop
cmp
mov
clc
jecxz
push
popf
ret
cmc
push
add
mov
xchg
inc
es
push
test
aad
jne
fcomi
test
mov
cmpsl
in
xchg
cmp
sbb
jl
add
int3
xchg
int
xor
aas
int
pop
out
std
std
and
ficoms
push
insb
inc
gs
es
inc
cmp
mov
comiss
xor
das
jno
inc
lcall
xchg
cmp
xchg
loopne
pushl
push
adc
insb
out
in
imul
sbb
add
loopne
jne
xchg
push
jno
pop
push
cwtl
dec
cmp
mov
dec
sub
dec
inc
lods
repnz
daa
outsb
sub
sbb
jb
jnp
mov
subl
cld
dec
fsubl
neg
sbb
jno
xchg
jbe
xor
lahf
shrl
jbe
ret
cmp
xchg
mov
xor
and
add
rcll
cmp
shll
sub
push
ss
push
stos
outsb
cmp
fwait
push
fbstp
dec
xor
xor
shll
mov
outsb
push
mov
xor
cmp
shrb
stos
mov
or
out
xchg
sub
xchg
cwtl
scas
push
frstor
les
xor
inc
mov
int
rcrb
ja
rcll
or
dec
cmp
cmp
int3
mov
sub
mov
push
mov
sub
add
test
je
cmp
mov
adc
inc
ja
mov
clc
lock
push
in
sub
shlb
fs
mov
or
out
faddl
in
ljmp
loope
adc
sbb
fxch
imul
arpl
xchg
mov
loop
cmpsl
mov
mov
mov
jl
cld
ss
inc
test
in
jge
out
push
pop
cmpl
push
pop
or
cmpl
add
pop
arpl
call
incb
sbb
movsl
inc
cld
dec
pop
mov
icebp
cmp
sbb
push
rclb
mov
rcll
jno
push
push
push
mov
jb
imulb
and
inc
inc
sub
pop
xchg
sub
stos
call
adc
mov
push
je
sbb
test
stos
aam
pushl
mov
sub
jnp
dec
jne
pop
pop
push
nop
pop
inc
imul
xchg
mov
and
adc
and
out
xchg
mov
daa
mull
addb
jne
mov
aam
mov
scas
int3
sub
jl
shrl
inc
fstpt
dec
ret
sbb
add
jbe
xor
pop
dec
xor
sti
leave
cmc
dec
xor
or
xor
sub
clc
outsb
xor
jg
adc
add
sbbl
cmp
js
fsubr
dec
push
cs
js
push
sub
ror
xchg
insb
push
adcl
sub
ljmp
xor
xorl
call
cmp
or
or
mov
das
ret
mov
jge
orb
sub
fdivrs
test
rcll
shlb
jle
aam
or
xchg
rcrb
cmp
pop
mov
cmp
xchg
pop
fs
inc
leave
push
sub
xor
dec
lret
mov
ret
inc
add
arpl
out
cltd
pop
aad
es
fdivrl
ljmp
pop
xor
cmp
lods
dec
add
mov
push
push
sbb
jle
arpl
aaa
imul
jecxz
aam
push
sbb
pop
xchg
dec
adc
mov
cmp
pop
jnp
and
arpl
iret
pushl
cmp
js
mov
and
nop
aam
or
nop
xor
lods
hlt
or
push
push
rorb
xchg
ja
incl
mov
sub
jl
rol
pop
sbb
mov
shlb
sub
loopne
mov
hlt
orb
or
xchg
or
cs
lret
mov
push
sbb
lds
mov
aaa
test
push
adc
jp
push
icebp
sub
cs
add
add
iret
sbb
movsb
insl
lea
pop
call
mov
mov
pop
jmp
icebp
jecxz
nop
adc
fnstcw
scas
inc
into
xor
ljmp
mov
fcmovnbe
jl
pop
xchg
xchg
bsr
mov
sbbb
mov
mov
test
addr16
or
jl
icebp
sbb
push
popf
xor
xor
dec
xchg
call
leave
js
into
cwtl
mov
push
and
mov
pop
xor
arpl
popf
int
shrb
jle
in
sbb
push
sub
stos
inc
adc
es
inc
gs
and
jno
dec
in
pop
xchg
cmp
inc
push
jecxz
mov
mov
lahf
xchg
sbbl
fnstsw
cmp
xor
inc
xor
lds
cmp
repnz
and
mov
inc
cmp
cmp
stos
pop
clc
mov
pop
mov
lcall
imul
inc
lret
hlt
xor
stos
lcall
test
fdivr
add
mov
test
push
cld
sbb
outsb
xorl
adc
pop
push
sub
xchg
sub
mov
adc
xor
das
mov
lret
mov
mov
sub
xorb
ds
xlat
and
into
cmp
mov
pushf
nop
mov
adc
mov
xor
mov
fcomp
lock
aas
push
cs
xchg
sub
cmpb
mov
dec
add
movb
ficompl
lods
xlat
jns
jge
orl
pusha
test
sub
mov
mov
js
mov
aam
xchg
cwtl
pop
test
das
jbe
pop
test
cmp
add
in
testb
ss
addr16
mov
mov
pop
stos
inc
push
mov
outsb
iret
push
or
jno
pop
lea
push
pop
dec
cs
cmp
repnz
dec
in
pop
stos
test
fisubl
sbb
dec
aam
pop
and
sbb
das
std
ds
mov
mov
test
add
je
subb
jae
xor
push
subl
jae
mov
les
mov
outsb
ljmp
iret
bound
jmp
cmp
sub
fwait
push
dec
sbb
jo
hlt
sbb
andl
test
cld
int3
roll
adc
jbe
push
mov
pop
mov
push
add
aaa
addr16
rclb
test
or
adcb
stos
mov
cmp
inc
jnp
in
dec
adc
test
mov
add
outsb
push
cld
lea
cmp
jg
dec
fldl
push
aad
orb
mov
int3
adc
testb
loopne
mov
pop
call
xor
xor
xor
fsubl
hlt
xchg
andl
add
pop
mov
and
push
dec
cld
xchg
adc
aam
mov
fdivl
sbb
push
cld
sub
int3
shrl
je
fs
pop
pop
imul
or
int
daa
mov
cmp
mov
mov
ftst
scas
lea
mov
shrb
dec
andb
mov
inc
mov
rolb
mov
inc
repnz
jmp
and
mov
orb
sahf
jbe
aam
inc
icebp
jg
aas
xchg
push
daa
das
mov
cmpsb
mov
jge
les
xchg
adc
call
push
jge
xor
mov
rclb
sub
outsl
sbb
js
out
mov
mov
rcl
push
scas
adc
in
call
mov
cmp
pop
push
arpl
pop
testl
adc
movsb
fistps
sub
int
mov
cli
sub
xor
call
cmp
mov
mov
leave
popa
int
mov
test
and
fwait
stc
js
lcall
cmp
fcoml
xchg
xchg
cmp
out
inc
pop
test
in
stc
pop
aas
faddl
jne
ljmp
dec
pop
xchg
pop
lret
popf
mov
sub
mov
adc
cld
inc
jg
mov
inc
cmp
push
jns
cmpsb
cmp
jo
scas
aas
or
or
sbb
and
in
dec
pop
add
fs
test
sub
repnz
xor
mov
call
insl
dec
jo
into
push
push
push
out
xchg
mov
out
push
jp
movsb
pop
cwtl
aas
pushf
outsb
test
cld
mov
iret
add
subb
cmp
jge
jno
mov
stos
lcall
dec
jle
insl
das
lahf
push
leave
aam
pop
test
out
mov
adc
xor
sbbl
ret
fimull
and
dec
icebp
stc
cltd
cmpsb
adc
xchg
popl
pusha
pop
mov
mov
xchg
imul
mov
les
rcll
and
cmp
jne
imul
pop
jne
outsl
aad
pop
cmpl
inc
mov
sub
loope
xor
scas
mov
mov
xor
aas
sub
jnp
lret
push
pushf
shll
jmp
push
testb
add
mov
pop
mov
add
test
stc
adc
je
ja
mov
sub
pusha
dec
fs
js
fadd
testl
leave
or
clc
shrb
sbb
stos
es
outsb
aaa
ret
jl
dec
stc
data16
dec
dec
and
jge
mov
pop
int
fwait
mov
sbb
push
addr16
inc
inc
je
mov
cmp
mov
dec
imul
jnp
hlt
xor
sbb
mov
xchg
into
or
insl
jo
jge
jg
std
adc
cmp
pop
mov
sub
push
dec
lods
mov
shll
adc
out
inc
sbb
dec
mov
fldenv
test
jl
sahf
jmp
lods
inc
jmp
fwait
push
ljmp
cmp
fidivrs
jle
jecxz
iret
insl
inc
adc
outsl
gs
insl
jns
outsl
stos
int
xchg
pop
int
pop
dec
in
nop
gs
arpl
inc
dec
stos
push
xchg
mov
xchg
fisttpl
sub
sbbl
add
outsb
xor
sbb
mov
jae
inc
test
fwait
mov
loope
out
repz
insl
pop
icebp
popa
fiaddl
and
nop
add
arpl
loope
dec
dec
mov
fimuls
adc
or
pop
dec
xchg
mov
ss
push
xor
ljmp
mov
fwait
dec
mov
jo
call
mov
fistl
pop
jae
test
fimuls
fsts
ret
and
fcoms
shll
xor
cmp
shlb
inc
or
sbb
lods
xor
dec
jae
mov
icebp
dec
stos
inc
sub
movsl
push
xor
stos
mov
lods
mov
sti
sbb
cmp
cli
aas
push
mov
mov
imul
push
pop
sub
rolb
imul
lahf
inc
xlat
pop
outsb
sbb
js
cmc
xchg
xchg
xchg
dec
and
lea
jo
mov
stc
add
je
lds
stos
inc
lret
push
dec
mov
arpl
mov
aas
repnz
push
test
dec
les
aad
pusha
cmpsl
pop
pop
sub
jbe
xor
ret
jnp
and
stos
mov
rep
jge
scas
hlt
es
movsl
in
xchg
and
mov
push
mov
adc
out
jg
mov
add
push
jbe
gs
psubusb
jge
shlb
scas
push
or
add
icebp
push
testb
pop
aad
inc
push
xor
jge
mov
sub
js
push
pop
sbb
ficomps
xor
std
cmp
lahf
pop
mov
test
data16
xchg
cs
push
lods
es
rolb
in
mov
leave
fdivrl
es
push
fdivl
or
jns
push
in
mov
inc
scas
int
mov
cmp
add
or
jb
mov
cmpsb
jbe
push
test
lods
push
out
lods
sbb
outsb
pop
xor
das
rep
pop
sub
out
int
shrb
jge
fldt
rorb
mov
ja
mov
mov
lock
aas
in
sbb
push
mov
dec
mov
and
push
mov
ds
sub
hlt
inc
push
xor
cmp
cmp
outsl
test
dec
pop
fadds
mov
lods
divb
mov
scas
jbe
scas
push
cld
and
xchg
pushf
sub
jle
push
push
scas
mov
popa
fidivl
fstpt
je
jb
cld
push
lds
dec
dec
das
cs
lds
aad
test
and
cmpsl
outsb
mov
adc
adc
popa
lods
cli
fsubl
stos
aas
add
jns
mov
dec
cmpb
mov
push
pop
mov
xor
scas
xchg
outsl
pop
xor
push
sarl
lea
mov
jp
in
jecxz
int3
mov
inc
mov
neg
dec
xchg
in
int
cmp
mov
lods
mov
stos
cld
sub
aas
sub
mov
dec
es
push
popa
ds
fnstenv
jno
cmp
ds
les
push
repz
hlt
addr16
jl
push
loopne
scas
xchg
iret
enter
testb
jge
mov
sub
fs
jmp
roll
dec
xchg
jne
inc
mov
int
sarl
pxor
or
scas
sbb
push
xchg
xchg
insb
das
lret
xor
pop
in
jb
mov
hlt
dec
hlt
sti
imul
mov
fcmovnu
push
mov
insl
test
jne
clc
or
xchg
or
iret
mov
xchg
je
add
ja
push
mov
std
and
inc
mov
aaa
movsb
adc
ljmp
xchg
filds
mov
cmp
nop
cmp
clc
or
adc
outsb
out
push
pop
sub
pop
and
mov
jmp
adc
inc
leave
add
out
sub
das
pop
outsl
mov
hlt
icebp
je
mov
inc
push
mov
pop
gs
cli
loopne
push
inc
in
aaa
sub
pop
es
mov
shrb
imul
jecxz
mov
outsb
push
push
cmp
mov
sbb
insl
rcll
inc
lcall
fs
cmp
cmpl
roll
std
dec
and
das
cmp
push
mov
arpl
lods
idivb
das
aaa
cmp
mov
push
scas
cmpsl
inc
dec
pop
pusha
leave
pop
pop
call
icebp
push
push
mov
nop
cmp
cmp
adc
out
loop
mov
lds
pop
push
cmp
jecxz
fisttps
stc
in
dec
aam
hlt
shll
scas
lea
jns
fcoms
ds
clc
xorb
push
shlb
lcall
add
jo
das
and
push
jae
or
push
push
enter
test
add
fcomip
dec
imul
or
sbb
repz
push
repz
lock
adc
ret
outsb
add
jmp
cmc
cmc
fsubl
jp
ljmp
ret
xchg
push
mov
lock
ret
faddl
vmread
lods
std
sbb
xchg
mov
stos
mov
fidivs
and
push
push
mov
out
and
mov
inc
pop
fdivl
or
sbb
ljmp
xchg
sub
mov
cmp
jge
jnp
pop
das
sbbl
cmpsl
sub
adc
push
das
or
idivl
xor
aaa
sub
jle
and
imul
sbb
adc
repnz
loopne
lahf
mov
sub
jb
inc
and
sbb
jns
mov
or
push
cmp
inc
or
or
push
lret
sbb
inc
xchg
ds
mov
dec
mov
mov
das
outsl
es
pusha
xor
test
cmpsl
je
adc
iret
xchg
adc
cmpl
adc
je
adc
xor
mov
mov
loope
mov
mov
pop
daa
cmpb
das
leave
push
mov
jno
jge
inc
pop
frstor
and
dec
cmp
repnz
sbb
adcb
out
mov
adc
hlt
sti
jo
push
adc
outsl
mov
test
mov
fisttpl
ss
jnp
push
jns
dec
out
pop
jo
jle
jle
sarb
dec
jmp
or
ja
sbb
leave
add
out
fimuls
out
push
hlt
cmp
pop
outsb
mov
pop
inc
ds
dec
daa
xchg
adc
popa
adc
out
push
lds
in
hlt
dec
and
out
xchg
cmpsl
add
mov
xor
dec
loopne
sbb
push
push
mov
sar
sub
cmp
jb
dec
cmp
rclb
call
fwait
inc
icebp
push
xchg
je
jecxz
push
and
add
imull
mov
xorb
and
cmp
fcompl
and
xchg
inc
rcrl
mov
lods
fiadds
inc
push
adc
dec
and
lods
bound
mov
mov
add
pop
mov
fldl
hlt
mov
mov
das
gs
sub
fidivrs
clc
test
jo
add
mov
cmp
mov
and
cmp
sub
push
int
cmp
cmpsb
clc
shrb
inc
lock
lea
lahf
das
ss
xchg
lock
inc
xchg
hlt
das
in
jg
sbb
rclb
nop
cmp
mov
fistpl
bound
leave
popa
pop
push
movsb
in
mov
sub
push
adcb
jp
iret
push
out
aaa
sub
mov
mov
test
mov
mov
ror
cs
xchg
push
outsl
sahf
cld
aas
sbb
in
insl
push
jo
push
sbb
mov
push
dec
push
iret
jg
rcrb
fnsave
addr16
mov
pop
dec
fs
xchg
in
fcoml
dec
jmp
pushl
maskmovq
divl
mov
mov
outsl
fcoml
enter
cmp
outsl
lahf
lret
mov
add
push
jge
mov
mov
in
lods
mov
fbld
js
int3
cmp
mov
push
mov
push
or
popf
and
test
inc
pop
loope
push
jle
loope
push
rolb
xor
pusha
jmp
sbb
dec
ljmp
fdivl
fimull
xchg
orb
xorl
xor
dec
push
mov
sub
mov
jp
lfs
pushf
or
icebp
ret
mov
decl
into
mov
add
mov
cmp
and
mov
outsb
aam
add
xor
adc
or
inc
jle
push
faddp
aaa
cmp
scas
jo
xor
cmpsb
push
inc
mov
fidivl
xchg
mov
inc
mov
stc
loope
push
inc
loop
jo
pop
jnp
mov
push
les
fcompl
mov
mov
scas
mov
ljmp
stos
pushw
out
adc
sbb
and
stos
xor
push
jmp
or
pushl
jge
dec
push
adc
out
aam
mov
sub
ja
stc
stos
and
push
hlt
inc
shl
jbe
jecxz
or
push
mov
testw
fnsave
test
fmull
mov
mov
mov
fdivl
mov
sub
mov
stos
jb
cmp
pop
jbe
pop
out
fsubr
add
lock
inc
push
jle
ficompl
loopne
and
shlb
push
push
insl
cmpb
cltd
xor
cmc
xchg
sub
loop
inc
mov
jb
shll
rclb
test
or
mov
lahf
jns
jecxz
xchg
push
popl
sbb
mov
cmp
sub
shlb
jmp
test
mov
push
xchg
xlat
mov
adc
popf
adc
cwtl
into
nop
int3
popf
shrb
xchg
xor
rcll
add
cmp
push
insb
mov
adc
pop
mov
add
ja
mov
mov
out
dec
xchg
int
aas
ret
aas
add
call
dec
fcoms
push
popf
cmc
mov
adc
adc
sub
das
adc
fcomip
in
outsb
addr16
aaa
dec
jmp
repz
mov
cmp
add
or
int3
dec
jp
push
inc
mov
ja
jmp
outsb
gs
push
jo
test
sahf
dec
loopne
xorl
jl
mov
adc
mov
insl
sub
shlb
sub
mulb
mov
stos
push
stos
pop
es
add
movsb
pushf
and
xor
adc
mov
mov
pusha
mov
mov
inc
lahf
pop
sub
sbb
aad
rorl
lea
pop
int3
bound
movsl
or
repz
jg
mov
mov
and
shrb
data16
mov
jns
xchg
sahf
fidivrl
pop
clc
inc
gs
adc
cmc
mov
outsb
ljmp
or
icebp
and
gs
ljmp
mov
imul
xor
dec
xor
inc
mov
push
lds
mov
and
inc
ss
pop
mov
push
push
lods
or
sub
sbb
add
inc
mov
cmp
std
int
sub
ds
pop
pop
faddl
mov
in
jge
xchg
and
xor
rorb
push
pop
xor
in
xor
push
movsb
pop
jmp
and
push
push
mov
and
into
rcrb
push
test
mov
aad
mov
add
sahf
and
out
jns
stos
adc
jbe
and
dec
jb
dec
lret
pop
jns
pop
dec
push
popf
push
cli
mov
sub
sub
outsb
adc
aaa
jne
mov
ret
dec
loope
inc
jbe
mov
add
ds
jmp
dec
mov
xchg
mov
jl
fidivl
pusha
sbb
aaa
jnp
inc
hlt
and
in
pusha
jno
inc
sub
push
dec
jbe
pop
mov
jno
or
test
mov
pop
add
mov
rcll
push
aam
lahf
pop
or
mov
cli
out
cmc
je
aam
jnp
dec
rorl
das
hlt
xor
dec
lret
or
add
add
inc
mov
popa
ja
xchg
jle
adc
xchg
push
mov
popa
clc
adc
iret
int
lods
xchg
imul
iret
cmpsb
jmp
lret
add
das
mov
adc
cmc
pop
test
aaa
subb
jle
sbb
gs
pop
push
mov
mov
lahf
inc
lods
out
jo
pop
into
enter
test
pop
dec
idivb
sbb
xorl
pop
sbb
ret
xor
push
cs
adc
push
pop
das
and
hlt
repz
lret
sbb
xchg
and
pop
dec
add
cld
or
pop
sub
jb
pop
sbb
cld
xor
loop
xor
ja
in
inc
aad
inc
aad
jbe
pop
pop
pop
xchg
lds
insl
mov
loopne
frstor
cmpsl
push
xor
mov
pop
cmpsb
es
cmp
shlb
inc
or
xor
and
inc
inc
xchg
arpl
rorl
inc
or
fnstenv
das
rcl
stc
testl
dec
mov
stos
jl
int3
insb
jmp
push
jl
adc
push
pop
push
sub
jl
aad
movsb
rorb
mov
aam
scas
pop
mov
mov
xor
mov
mov
iret
imul
sub
jo
enter
push
cmp
xor
outsb
insb
cmpsl
adc
vpsubd
call
mov
push
pop
xorl
xor
ljmp
mov
fmul
mov
out
adc
mov
push
xorb
pop
stc
jo
xorb
jmp
or
popf
jl
imul
dec
movsl
das
insb
add
adc
xchg
insl
cmp
fiadds
das
adc
pusha
mov
inc
cmp
data16
insl
jbe
bound
jle
pop
dec
cmp
mov
fs
inc
xor
ljmp
xlat
in
or
jle
dec
pop
je
or
repnz
inc
cmp
mov
scas
bound
gs
push
outsb
ret
notb
fiadds
mov
outsb
cmpsb
rolb
dec
iret
dec
ljmp
dec
mull
mov
push
pop
xchg
xor
adcb
adc
inc
in
scas
cmpsb
cmc
adc
lret
nop
aaa
push
mov
les
enter
mov
pop
mov
jg
arpl
cltd
xor
cld
cmp
clc
mulb
adc
out
push
mov
out
insl
mov
cmpsb
ss
imul
sub
jge
push
imulb
aaa
xor
fadds
mov
jbe
stos
and
shll
jb
adc
hlt
ss
sarb
push
out
lret
pop
push
ss
mov
dec
sub
pop
mov
lcall
xor
push
imul
inc
mov
rclb
mov
jecxz
sub
pop
int3
xchg
xor
std
mov
or
cmpsb
jo
aad
cmp
inc
and
push
fwait
pop
pop
xor
ret
jg
jno
sub
lds
test
pop
insl
das
incl
lods
push
test
bound
mov
add
xchg
jne
out
mov
cmp
jg
clc
cld
pop
adc
ds
hlt
jno
dec
cmp
dec
sbb
mov
inc
or
lret
pop
ret
mov
inc
xchg
fadd
cmpb
xor
gs
xchg
pop
mov
mov
cmp
in
push
sub
popf
ror
cmp
dec
adc
fwait
and
jge
out
insb
cmp
push
aas
sub
hlt
sub
mov
push
adc
adc
lds
or
mov
in
enter
shll
jns
sarl
cs
mov
or
test
or
inc
sbb
fistpll
and
push
insl
jecxz
aam
aaa
inc
cld
push
int
xchg
and
sub
in
pop
ficomps
arpl
xor
jge
pop
pop
xor
push
add
add
movsb
stos
push
mov
fstpt
and
dec
jo
adc
subb
shll
jge
out
xchg
sub
push
xchg
add
rcrb
pop
das
subl
loopne
les
rcll
jecxz
clc
flds
pop
adc
in
mov
jae
push
pushf
cmp
pop
sbb
frstor
mov
cmp
cld
test
adc
test
cld
sbb
and
sub
lahf
push
or
popf
out
xor
push
adc
xchg
xor
mov
sbb
jae
sbb
inc
int
mov
or
mov
out
mov
stos
cmp
add
xor
aaa
xor
adc
inc
stc
xor
add
xor
ret
daa
mov
loope
lea
divl
xchg
mov
xor
jmp
mov
dec
repnz
push
xchg
out
mov
loope
xchg
test
pop
sbb
imul
cmp
jb
adc
lock
ss
mov
imul
adc
dec
or
mov
cmc
in
dec
mov
or
add
push
inc
insl
cli
rclb
xchg
test
pop
inc
pop
xor
add
inc
add
or
inc
ret
sbb
mov
fimuls
in
pop
mov
push
jl
repnz
scas
inc
mov
adc
dec
sub
outsl
test
scas
adc
sub
push
stc
jg
inc
hlt
push
pushf
sub
sub
mov
cmp
pop
inc
pusha
push
and
inc
or
fisubl
xchg
hlt
jmp
and
adc
in
jge
movsl
pop
imul
mull
lock
cmp
test
xchg
iret
outsl
scas
sbb
sbb
sbb
inc
std
lods
repz
pop
icebp
mov
mov
mov
push
inc
cwtl
sub
in
jo
inc
das
jl
mov
xchg
xor
or
xor
ss
pushf
mov
mov
mov
insl
inc
and
mov
mov
and
adc
fs
iret
loopne
push
cmp
cld
mov
es
jecxz
pop
add
hlt
ds
mov
rcll
mov
sbb
cmpsl
xor
loopne
fs
inc
ret
arpl
aas
xchg
xchg
add
lret
jno
dec
or
test
mov
xor
out
das
push
mov
pop
or
mov
lcall
ja
sub
cmp
cmp
fs
cmpl
push
xchg
mov
and
fldcw
cmpsb
xor
mov
xor
rorl
xchg
pop
stos
pop
xor
or
pushf
adc
or
dec
test
adc
jle
addr16
jle
aas
loopne
push
insb
adc
sbb
mov
push
stos
push
mov
out
adc
jb
xchg
mov
adc
in
xor
rcrl
cmpb
subl
andb
fsub
into
jo
mov
add
enter
in
cmp
mov
and
sub
or
mov
push
fnstsw
jo
xor
cwtl
push
jo
call
xor
out
outsb
scas
loop
lret
push
ds
popa
adcb
imul
pop
and
mov
xchg
data16
stos
test
mov
sub
out
jbe
call
stos
out
jbe
jno
in
inc
dec
aaa
pop
cs
sub
xor
mov
cmp
mov
xchg
push
in
mov
or
adc
jl
jl
mov
sub
addr16
test
sbb
sbb
clc
incl
sarl
test
ljmp
cld
mov
popf
in
xchg
lock
loope
push
xchg
jp
clc
inc
pushf
addr16
dec
jbe
clc
repnz
sbb
call
xchg
cmp
and
int3
aad
testl
and
sbb
mov
ds
mov
jns
pop
and
mov
sbb
loope
gs
push
sub
cs
cs
iret
shrl
cs
jb
cld
and
lahf
xlat
mov
cmp
xor
das
int
jg
dec
shll
xchg
inc
or
adc
adc
inc
xor
sub
mov
pop
inc
xor
jnp
out
mov
aaa
xchg
ds
sub
jle
je
enter
pop
pop
aaa
enter
loop
call
push
cmp
sub
mov
lret
insl
mov
adc
push
insl
adc
out
mov
dec
push
jl
mulb
icebp
mov
lock
je
testl
mov
ficompl
sbb
je
cld
push
or
push
andb
cld
cmc
inc
orb
sub
dec
xor
outsl
xor
xor
xor
dec
scas
cli
test
hlt
xor
cli
bound
jo
pusha
mov
aad
je
push
cld
sbb
stc
cld
dec
xor
dec
mov
add
cmp
or
or
pushf
stos
fdivrs
clc
jg
jge
icebp
aam
fiadds
mov
cs
fstps
cmp
and
in
sub
pop
ljmp
rcrb
adc
cmp
xor
out
mov
pop
dec
pop
shrb
pusha
jl
adc
adc
jg
mov
pushf
xor
outsl
outsl
cmp
fcoml
push
jmp
pop
mov
out
dec
push
dec
mov
cmc
test
pop
mov
mov
aaa
scas
adc
clc
lret
lret
in
mov
xor
dec
test
inc
mov
negl
mov
push
sbb
fbld
and
push
out
dec
pop
jb
jecxz
dec
mov
xchg
insb
pop
pop
ds
and
sub
ret
ja
mov
insb
xor
xor
and
mov
xchg
dec
push
ss
xor
cmp
ljmp
xor
push
pop
inc
lea
jp
ret
lret
adc
pop
fs
jle
test
sahf
sub
push
and
mov
pop
inc
sbb
xchg
shl
test
outsl
movsb
mov
ljmp
xor
mov
push
andl
movsb
sub
fistl
ret
cltd
scas
push
les
outsb
loop
sub
lock
insb
lods
adc
mulb
push
aas
es
xchg
push
push
jle
daa
nop
jns
aaa
mov
jle
push
outsl
fimull
leave
repz
push
jmp
xor
xchg
mov
mov
out
lock
sub
push
shl
test
or
fmull
fs
mov
andb
loopne
dec
lea
adc
push
mov
mov
sub
and
mov
xchg
jge
adc
cmp
scas
mov
pusha
insb
subb
or
inc
xor
mov
or
jg
ret
hlt
sbb
call
lds
adc
mov
sub
adc
dec
or
sbb
aaa
fistps
out
and
sahf
fdivr
jo
pusha
mov
xlat
popa
rorb
arpl
cmp
jbe
adc
enter
mov
stos
int
ds
jmp
jae
jo
xor
xlat
mov
adc
dec
mov
dec
icebp
pop
jp
scas
sbbb
mov
sbb
call
in
xchg
sub
adc
xchg
pop
call
inc
test
xchg
jmp
data16
pop
or
into
inc
pop
shlb
adc
ss
jne
dec
out
and
scas
mov
imul
jge
les
xorb
jb
les
xchg
push
and
dec
cmc
cmp
sub
in
jl
pop
pop
sti
mov
ss
add
xor
cmp
rcrl
dec
dec
sbb
adc
lds
or
mov
push
xor
mov
cmp
shl
xchg
leave
mov
push
loopne
sbb
mov
push
adc
out
in
outsl
mov
cltd
add
mov
orb
xor
mov
lret
mov
or
adc
jmp
mov
clc
xchg
stos
fnstsw
cli
xchg
mov
inc
xor
test
into
inc
adc
iret
movsl
nop
andl
clc
xor
cltd
jno
shll
outsb
xchg
pop
roll
ss
mov
mov
push
fstpt
shrl
push
xchg
cmp
mov
fcomip
lea
lret
aaa
aad
pop
fwait
iret
data16
adc
jne
sbb
pop
push
adc
dec
pop
adcl
icebp
inc
clc
repz
pop
adc
inc
mov
sbb
sub
pushf
jo
add
mov
dec
cmp
and
fwait
add
xlat
or
es
add
jb
inc
jo
pop
sbb
mov
hlt
fs
ja
push
aam
mov
orb
shlb
xchg
sub
lret
ds
cmp
es
xor
scas
sub
movsb
ret
addb
mov
sbb
push
orb
adc
dec
or
xor
dec
imul
sbb
sti
adc
adc
cmp
add
ja
inc
loop
inc
loop
sub
pusha
rcrl
mov
clc
icebp
cmp
push
mov
hlt
out
sub
xor
sbb
bnd
jo
scas
aad
jne,pn
rorb
js
xor
ficomps
jl
xchg
jge
adc
lods
inc
or
jns
data16
xlat
sbb
jbe
pusha
shrl
xchg
add
decl
inc
pop
shlb
int3
xor
clc
adc
pop
jge
das
mov
and
jle
mov
lret
jb
dec
and
or
mov
and
mov
mov
pop
into
jp
push
shrb
cmpsl
or
stc
inc
mov
adc
into
dec
addl
ds
mov
xchg
jb
mov
aam
jl
jbe
cmc
jbe
test
je
dec
daa
dec
outsb
cmp
mov
inc
adc
push
xchg
add
int3
or
outsl
or
aam
aas
push
int3
sbb
lods
outsb
fsubrs
xchg
add
insl
dec
lock
in
lock
mov
ja
pop
frstor
add
pop
adc
pushf
test
mov
jge
jo
mov
mov
sbb
jne
and
out
bound
push
fcom
cld
add
adc
in
ja
adc
pop
push
lods
mov
xorb
pop
nop
add
or
sub
in
or
lock
sbb
mov
loop
cmp
rorb
add
std
fsubl
or
adc
test
push
mov
stos
lret
daa
into
xchg
mov
adc
fsubrl
mov
test
dec
aam
into
fildll
pop
add
loope
lea
inc
mov
dec
mov
mov
fsubr
fisttpl
adc
add
adc
aaa
scas
or
jbe
jno
jle
push
inc
adc
sti
ds
pop
out
push
out
popa
mov
mov
jg
sahf
outsl
orb
js
dec
in
sub
out
sahf
popf
es
push
nop
rcrb
test
addr16
jg
pop
mov
adc
test
add
push
pop
hlt
adc
mov
and
jns
sub
addr16
cmp
fst
pop
sub
inc
adc
push
fisttpl
xchg
dec
ja
shrl
xor
test
mov
add
mov
mov
mov
insb
fcoml
inc
mov
sbb
xchg
ret
inc
fs
testb
add
mov
iret
add
and
push
or
into
shlb
pushw
push
mov
adc
push
mov
jne
imulb
sub
xor
adc
in
mov
nop
push
cmp
jnp
inc
xchg
sub
xchg
mov
push
mov
xor
add
jg
jg
roll
faddl
pop
cmp
test
xchg
aaa
sarb
fistpll
push
pop
jns
cs
mov
mov
mov
inc
and
sub
inc
cs
xor
fildl
rolb
sub
cmp
or
push
es
leave
sub
dec
mov
mov
scas
repnz
in
and
mov
xor
jae
jle
dec
jnp
fadds
out
addr16
push
ss
push
adc
clc
dec
ja
sbb
jp
das
in
lret
bound
ja
pop
inc
jo
and
aaa
mov
into
jge
cmp
test
sarl
mov
stos
pop
loope
gs
push
jl
push
ret
jge
sub
xor
sub
insl
push
jl
dec
add
fsubrl
pop
ret
cmp
popf
sub
xchg
repnz
stc
mov
xor
cmp
push
cmp
aas
or
test
dec
mov
mov
test
dec
jae
dec
mov
test
rcl
xchg
test
add
xor
push
fdivs
divb
scas
or
or
xchg
and
push
nop
sbb
subb
stos
push
ret
mov
jae
leave
push
test
cltd
ja
pop
dec
shlb
cmp
xor
xchg
dec
test
ds
fistps
in
mov
sbbl
pop
mov
xlat
push
enter
lea
enter
mov
xchg
push
lods
xor
push
nop
rcll
jnp
pushf
and
fdivrs
mov
adc
fdivs
jecxz
mov
xor
movsb
lods
lock
in
sub
xchg
ret
lahf
std
mov
pop
and
int3
inc
cld
pop
test
lds
pushf
out
mov
jno
xor
stc
das
lods
xchg
pop
pop
popa
jnp
dec
decl
cmpb
shrb
pop
push
sub
call
gs
and
add
fsts
in
loopne
push
xor
pop
jle
xchg
jnp
push
pop
mov
test
nop
sub
lahf
xchg
adc
or
pop
lods
push
add
mov
lods
lret
add
nop
push
cmp
push
call
mov
pop
scas
lods
fnsave
dec
push
adc
and
rcll
divl
xchg
mov
js
xchg
fildl
fistl
xchg
clc
sarb
inc
adc
add
add
pusha
aas
inc
mov
iret
xor
inc
orb
gs
inc
inc
js,pt
mov
pop
cltd
jl
js
or
adc
je
out
push
rep
xor
dec
outsb
jle
loop
inc
stos
subl
and
cs
fistpl
shll
shr
ret
ret
clc
mov
shr
daa
mov
repnz
mov
in
adc
cltd
xchg
pop
and
sub
inc
aaa
or
sub
pop
and
cmp
mov
sbb
aas
and
das
sub
aas
sub
mul
sbb
outsb
mov
pop
adc
int3
scas
mov
push
test
test
pop
arpl
cmp
or
aaa
push
sbb
pop
add
icebp
adc
dec
jg
test
cmpb
and
roll
getsec
xor
ljmp
idivl
pop
fists
movsb
mov
xchg
pop
sbb
ds
xor
sahf
xchg
scas
je
sbb
pop
scas
mov
pop
push
in
xor
cmpsb
lret
jge
mov
push
cmp
mov
jno
sub
ds
push
rcl
test
mov
mov
adc
scas
movl
xchg
mov
mov
pusha
push
cltd
xchg
adc
xchg
xchg
bound
aad
iret
mov
dec
lock
sub
lret
pop
inc
xor
or
adc
cld
xchg
div
dec
test
enter
mov
inc
scas
das
lods
lods
out
sbb
sub
mov
adc
cmpsb
pop
nopl
sub
sbb
ljmp
jecxz
inc
sub
inc
push
fidivs
pop
pushf
adc
fmull
jb
mov
dec
xlat
iret
and
mov
and
jo
xlat
push
push
out
adc
sub
jg
aas
das
cli
dec
insb
nop
dec
xchg
bound
sahf
mov
pop
pop
scas
push
and
cmp
dec
gs
enter
sti
inc
dec
pop
ret
jp
dec
test
mov
out
add
adc
sbb
call
in
jne
je
or
push
jl
mov
push
daa
enter
mov
mov
pusha
sbb
sub
mov
sarb
cld
mov
fisubrs
ja
shl
dec
nop
xor
mov
jle
insb
push
xor
into
dec
lret
jb
dec
ja
sub
jne
enter
int3
push
pop
xchg
das
rolb
pop
ja
fidivrl
repz
fiadds
sbb
insb
sub
insl
push
aaa
pop
cmp
adc
pop
mov
insl
in
aaa
mov
ds
and
ret
es
xor
or
insl
dec
xchg
cmp
mov
push
cwtl
sub
push
push
pop
mov
incb
xchg
in
sbb
or
jne
addb
sbb
mov
in
mov
icebp
into
sbb
sub
mov
jge
out
insl
push
mov
out
addr16
js
sbb
add
popf
ret
pop
xchg
clc
lock
test
je
aas
push
cmp
push
leave
test
xchg
sub
xchg
jg
sub
and
mov
jg
cmp
mulb
add
addl
mov
adc
jg
xor
add
mov
enter
and
andl
rorb
pop
xor
shll
test
lods
cmp
aas
loop
cmp
daa
or
loop
push
fcomip
xchg
loop
out
lret
xor
mov
pop
in
push
enter
mov
andl
sbb
test
nop
inc
mov
mov
jg
adc
aad
rcll
addb
adc
inc
push
ret
sbb
inc
add
pusha
mov
add
mov
ljmp
fcomps
push
dec
fwait
aaa
cmp
pop
int
cmp
iret
rorb
cmc
jns
or
ss
mov
xchg
sub
xchg
cmpsl
lds
pop
adcb
xchg
or
int3
lock
cmp
orb
repnz
scas
imul
pop
aaa
push
lret
cmp
sbb
mov
cmp
je
lods
repnz
mov
shlb
add
adc
insb
test
nop
loopne
mov
inc
mov
sub
pop
push
das
pop
cmpl
repnz
sbb
adc
dec
adc
fsubr
jne
adc
ja
xlat
stos
and
inc
insb
loope
jbe
add
cli
outsb
into
mov
data16
push
cmp
mov
in
pop
fwait
cmp
mov
cmp
pop
popl
adc
in
cmp
push
cmc
sub
cmpsb
ficomps
nop
jl
daa
fists
mov
out
rcrl
or
jns
in
push
ds
cmp
mov
sbb
mov
out
adc
clc
negl
dec
sbb
fnsave
jbe
mov
aam
mov
push
xor
xor
sti
cmp
into
or
lods
sub
arpl
lds
arpl
push
movb
jo
fs
cmc
pusha
movsl
add
pop
mov
xchg
aad
add
xor
push
shrb
inc
movsl
fistpll
and
lcall
mov
mov
sub
ficoms
shlb
pop
xchg
xor
loopne
inc
mov
pop
ds
loope
and
xor
inc
rcr
push
les
jne
xor
mov
add
in
mov
aam
jne
notl
jno
xchg
cs
ljmp
jnp
outsl
sub
mov
outsb
mov
in
jmp
lods
mov
stos
movsb
mov
and
push
insl
and
adc
je
nop
arpl
jno
mull
xchg
sarl
or
cmp
in
adc
mov
inc
leave
cmp
add
cli
mov
mov
test
sbb
popf
mov
fdivrs
mov
aas
idivb
aad
or
adc
adc
jbe
lret
lock
xor
xchg
aam
adc
out
pop
addr16
cmp
mov
das
sbb
int
bound
scas
jl
push
or
mov
fimuls
mov
test
test
push
test
xor
xchg
gs
dec
sbb
stos
jmp
pop
xor
push
inc
push
sahf
outsb
clc
xor
push
bound
das
push
rorl
cmp
and
mov
popf
inc
divl
mov
das
in
inc
xchg
add
insb
in
inc
inc
out
mov
xor
cmp
nop
mov
leave
cwtl
hlt
pushf
xchg
mov
mov
sub
mov
mov
cmpl
xor
das
shlb
aam
fdivr
xor
ds
push
clc
repz
les
rolb
push
nop
or
pop
jns
sub
lods
push
fwait
sub
xchg
sbb
in
cld
xor
ja
nop
mov
dec
loop
sbb
or
add
cmp
sbb
cmp
xor
xchg
inc
adc
xor
adc
lcall
or
pop
in
je
dec
in
or
mov
or
jg
xchg
arpl
mov
loope
sub
inc
inc
xchg
push
and
jge
xor
sub
addr16
nop
mov
adc
dec
inc
fdivs
pop
and
call
push
outsl
pop
dec
mov
rclb
addb
mov
jo
fdivs
mov
outsl
rcrb
test
adcb
xchg
hlt
pop
insb
lds
jnp
xor
nop
in
je
dec
push
iret
dec
mov
xor
mov
ror
push
ss
sbb
push
in
cmpb
mov
adc
movsl
imul
adcl
dec
and
cmp
jecxz
lcall
fwait
pushf
fdivp
inc
or
in
mov
aam
adc
les
repnz
dec
mov
cmc
push
cmp
dec
pop
push
push
and
xor
and
xor
and
add
xor
and
loop
scas
add
cs
cmp
cld
shlb
int
jb
mov
jge
lds
cs
push
repz
mov
pushf
movsb
insl
lcall
push
cld
mov
push
test
or
in
mov
jmp
pop
data16
push
inc
ret
mov
inc
dec
fwait
sub
pop
dec
bound
mulb
sub
lret
mov
inc
aam
adc
mov
xchg
jle
ficoms
pop
xchg
ljmp
xchg
xor
rcl
cmp
cli
cmp
add
and
pusha
push
ds
cmp
sbb
xchg
daa
push
mov
and
pop
push
jge
lods
movsb
push
jnp
xchg
adc
dec
sub
mov
push
jl
mov
fwait
pop
sti
lock
ds
roll
dec
scas
xchg
scas
das
sbb
sbb
ss
mov
or
xchg
stos
pop
mov
sub
ds
daa
test
sbbb
fnsave
mov
or
xchg
mov
dec
test
push
adc
push
es
pusha
fidivs
push
pop
push
mov
push
ja
and
jg
pop
gs
cmpsb
rcll
in
mov
inc
jmp
adc
adc
inc
xchg
test
and
imul
mov
ss
inc
and
cmp
cs
pop
xor
or
mov
ss
adc
xchg
inc
jae
stos
pop
push
xchg
cmp
ljmp
pop
adc
adc
cld
scas
push
pop
and
andl
subb
lahf
js
inc
jl
dec
sub
pusha
cmp
pop
es
decl
xor
iret
inc
lea
push
pop
or
sbb
ds
fcmovbe
addr16
rolb
insb
pop
sub
lcall
and
test
enter
lods
jp
shr
fnsave
pop
daa
mov
pop
fdivl
mov
fistpl
push
in
insb
push
pop
inc
repz
add
sbb
cmp
ss
adc
pop
or
lret
jp
jmp
rcrl
add
xchg
aas
push
out
loope
cwtl
ss
test
mov
scas
lea
fbstp
and
add
ljmp
pop
sbb
cmp
ja
add
iret
sbbl
add
loope
fists
jb
mov
sbbl
jae
and
mov
inc
jno
scas
sub
fs
xor
daa
out
jmp
fimuls
mov
sub
daa
stos
dec
cld
dec
inc
mov
mov
push
stos
xlat
inc
lods
insb
and
and
xor
out
pop
dec
and
dec
inc
cs
and
jne
scas
xor
pop
ja
pusha
jo
sub
frstor
inc
mov
outsb
repz
fistpl
xchg
shl
cmp
jle
cmp
addb
setbe
loope
jns
add
sarb
repnz
imul
cld
xor
or
or
rcrl
push
xor
dec
aaa
mov
adc
lds
ret
jno
mov
mov
xchg
fs
dec
mov
xlat
cmc
push
push
mov
push
aaa
inc
lret
clc
fs
stc
ret
and
and
push
and
test
jl
mov
in
in
pop
mov
addr16
popf
xor
mov
in
adc
lods
aam
out
lock
aam
dec
mov
add
mov
mov
push
sbb
hlt
or
ds
mov
dec
sub
ljmp
push
into
mov
das
out
cmp
mov
into
jae
adc
enter
sbb
leave
lret
repz
mov
dec
rcrl
xor
adc
inc
mov
xor
lcall
xchg
mov
sar
and
ret
mov
cmp
ret
outsb
fwait
jecxz
adc
push
mov
add
mov
dec
dec
xor
addr16
jo
mov
in
call
pusha
fsubr
jmp
outsl
dec
ss
sub
mov
push
pop
dec
pusha
pop
shlb
mov
hlt
inc
movsb
or
movsl
jne
mov
push
fists
mov
fildll
jmp
push
add
push
or
adc
pop
add
jge
jg
scas
leave
data16
mov
ret
xchg
pop
pusha
scas
out
jmp
fmuls
ss
in
mov
int
or
add
cmp
pop
fwait
cmp
push
mov
pop
and
sub
pop
scas
pop
xchg
dec
sub
rcr
movsl
pop
aam
fsubp
xchg
ret
sbb
std
mov
adc
jmp
data16
add
cli
xor
inc
pop
add
andl
mov
sub
stc
mov
sub
std
and
dec
dec
mov
mov
add
jae
dec
jns
push
cli
xchg
xchg
cli
cld
inc
stos
mov
movsl
push
pushf
nop
movsl
dec
lea
sbb
and
movaps
adc
loopne
xor
insl
popf
xor
jb
push
das
ret
ret
xor
in
add
repz
sbb
lods
daa
iret
mov
leave
int
inc
shl
int3
sub
rolb
cmp
cmp
xor
inc
cmp
push
rcrb
mov
pop
add
and
pop
sbb
push
mov
daa
jmp
stos
adc
xor
in
ds
fwait
sub
cs
fcomps
jo
test
lea
inc
mov
ret
mov
xchg
ret
test
ja
in
out
jnp
test
cmp
push
jecxz
or
dec
sbb
int
inc
shl
pop
mov
pushf
das
clc
lret
inc
adc
push
sbb
jno
iret
loope
fstp
jne
xor
pop
cld
incb
cmp
loopne
pop
adc
adc
int3
scas
or
sub
mov
inc
xchg
cs
pop
ljmp
pop
inc
push
add
xor
je
inc
xchg
mov
insl
mov
sub
xor
or
into
call
xor
push
inc
adc
sar
and
mov
xor
hlt
lea
ja
das
mov
inc
cwtl
sbb
fsubl
ret
xlat
pop
lahf
sbb
pop
mov
mov
adc
sbb
mov
jno
add
addr16
ds
shrb
cli
outsb
dec
cli
es
and
orl
rcrb
adc
in
mov
xor
inc
mov
xor
stos
mov
sub
jns
sbb
ss
mov
mov
daa
incl
fistl
popa
cmp
std
mov
std
push
bnd
or
in
jo
scas
outsb
das
push
mull
xlat
js
push
mov
and
jge
lods
cs
add
sub
xchg
jp
fdivrs
shr
mov
incl
jb
pushf
cmp
popa
rcll
leave
stos
xorb
mov
mov
jecxz
inc
addr16
cltd
jbe
out
xor
xchg
adc
insl
dec
mov
mov
xchg
mov
ret
pop
dec
icebp
adc
lret
cmp
cmp
in
shl
aam
je
mov
lods
int3
dec
mov
add
push
gs
sub
clc
adcb
cmp
andl
inc
jns
mov
push
test
mov
mov
add
xor
aaa
andl
add
mov
xorb
pop
js
gs
pop
les
sub
test
cmc
stos
out
dec
jb
or
mov
xchg
mov
pop
xchg
or
insl
leave
and
fmuls
add
adc
test
push
pop
mov
push
mov
cmp
mov
push
shrb
and
call
cmp
cli
push
sbb
sbb
xor
loopne
mov
out
int
sbb
adc
dec
sbb
adc
test
fdivs
lret
loopne
push
inc
imul
jmp
or
cld
xchg
mov
and
aad
pop
push
mov
mov
das
inc
shlb
push
sub
sbb
sub
jmp
hlt
aaa
xchg
ss
pop
or
dec
mov
and
into
adc
pop
test
out
push
shlb
xlat
mov
xchg
mov
adc
xlat
or
sbb
mov
and
mov
sbb
push
adc
aad
lods
arpl
cmpsl
dec
jne
inc
lods
shlb
inc
xchg
clc
sbb
mov
push
test
push
xchg
mov
and
inc
xor
sub
and
inc
in
pop
je
sub
jl
sbb
and
sarl
jb
scas
in
outsb
xchg
xchg
into
and
mov
cmp
xchg
mov
xchg
cmp
dec
cmp
add
pop
mov
fisttpl
dec
pop
pop
addl
xchg
inc
inc
in
pop
leave
popf
leave
mov
mov
cs
mov
gs
xorl
push
cmp
mov
mov
mov
sbb
xor
cmp
mov
sbb
aas
cmp
add
cmp
add
mov
lcall
sub
xor
push
xor
jp
lea
mov
mov
addb
cltd
daa
fmul
add
xor
pop
lock
push
xchg
aaa
mov
enter
out
fdivrs
nop
into
dec
or
ja
mov
ror
inc
and
push
out
pop
ret
hlt
mov
pop
xchg
pop
ret
dec
xchg
stos
je
push
je
test
out
pop
mov
fisubl
inc
daa
and
sub
inc
movsb
dec
xor
into
cld
movsb
repz
xor
mov
call
into
jl
inc
cmp
mov
mov
push
mov
cld
adc
jl
sbb
rcl
inc
push
sub
call
test
mov
decl
ret
mov
xor
add
dec
mov
add
out
sub
cmp
mov
adc
push
ss
adc
out
push
cmp
jecxz
mov
jns
mov
roll
insl
aas
dec
aaa
cli
stc
lea
push
xchg
xchg
xor
repnz
cmp
sub
pop
dec
xchg
sbb
sub
test
mov
cld
xchg
add
or
or
andl
cmp
dec
xchg
pusha
sub
mov
in
lahf
xchg
test
sbb
push
lods
mov
add
arpl
mov
inc
pop
push
ret
popf
ds
xchg
pop
jg
into
int
sub
adc
hlt
dec
dec
roll
fistpl
cmp
sbb
dec
mov
stos
mov
cmpb
jg
pop
std
jp
xchg
jo
xchg
test
mov
xchg
dec
imul
xchg
jnp
mov
cmovnp
ljmp
mov
sbb
jg
adc
add
int3
dec
mov
mov
stc
dec
gs
push
jg
xor
ss
into
lods
mov
jg
rorb
pop
fildl
xor
pop
mov
enter
mov
sub
aaa
mov
movsb
pop
enter
out
dec
jl
push
inc
xor
jnp
ds
sub
repz
add
lock
pop
hlt
sub
insb
cli
mov
movsl
jp
std
xor
test
mov
jl
js
stos
jno
inc
dec
dec
outsb
pop
mov
popf
dec
inc
scas
dec
repnz
push
fisttpl
or
enter
inc
outsb
dec
cwtl
imul
mov
ds
xor
dec
adc
into
xor
mov
inc
mov
movsb
scas
js
xor
mov
mov
mov
xchg
inc
mov
push
mov
ss
hlt
pop
xchg
add
jno
dec
rorb
daa
sbb
cmp
cmp
cmpb
push
mov
xchg
jle
inc
mov
cld
shrb
inc
aas
aas
jbe
mov
or
mov
pop
xor
mov
ss
lods
aaa
rcrl
pop
scas
push
scas
in
mov
and
xor
jp
dec
dec
fwait
push
adc
jge
jae
add
push
and
inc
cmp
cli
test
pop
sbb
xchg
dec
sbb
mov
outsb
mov
cmp
shll
mov
push
test
pushf
cli
push
pop
scas
jo
repz
je
stos
lret
js
inc
mov
mov
xchg
in
jno
iret
xchg
cmp
and
rolb
sbb
int3
sub
cmpsl
cmp
jg
inc
adc
add
int3
out
jge
ss
and
add
fidivrs
xchg
cmp
inc
mov
ds
aaa
sub
das
jl
pop
dec
cs
sbb
dec
dec
inc
mov
xorl
or
jne
adc
and
inc
fimull
push
ds
je
mov
sarb
loopne
mov
dec
push
xor
mov
dec
mov
jo
sub
insb
in
mov
inc
int3
mov
pop
mov
push
inc
inc
pop
jp
outsb
les
pop
mov
sub
jno
mov
lods
mov
cmc
xor
mov
inc
test
inc
push
mov
sub
pop
fmull
dec
mov
xchg
scas
stos
imul
mov
jecxz
xchg
dec
push
and
ds
out
inc
push
xlat
popf
push
inc
and
outsb
cmc
out
mov
std
imul
jg
in
and
out
stos
mov
jl
and
push
out
fdivr
jno
mov
sti
mov
mov
cmp
xchg
xchg
pop
mov
dec
aam
mov
or
mov
xor
call
or
adc
mov
lock
mov
mov
cmp
cmp
jecxz
jbe
add
push
je
jb
addl
lret
jp
std
scas
test
loop
rorl
mul
testb
lret
test
inc
sbb
es
movsb
add
mov
mov
adc
sbb
stc
and
lcall
aam
lods
xor
jge
es
int3
sub
adc
mov
xor
sub
pop
nop
jge
scas
inc
xchg
and
cld
test
inc
add
xor
push
xor
cltd
aas
sub
ficompl
pop
sbb
rolb
mov
pop
cwtl
repnz
pop
notl
fdivl
loopne
outsl
xor
jns
adc
jg
test
int
into
imul
pushf
push
pop
insb
sbb
push
mov
mov
daa
cmp
adc
cmp
fidivrs
cld
fdivs
mov
dec
jmp
xchg
adc
or
xor
xchg
push
adc
push
dec
sub
xchg
jnp
testb
pushf
icebp
lds
mov
mov
add
mov
adc
xor
mov
add
pop
rorb
js
mov
fcmovb
pop
sbb
into
mov
mov
loopne
and
imul
fs
sub
gs
das
push
sub
xlat
jecxz
jo
pop
dec
push
xor
out
data16
jg
mov
jmp
mov
ss
sbb
add
enter
mov
inc
mov
mov
lds
leave
push
cmp
or
mov
inc
and
mov
in
aaa
xchg
lods
leave
push
mov
push
pop
jns
pop
or
mov
int3
xor
ficompl
pop
lret
mov
inc
mov
jbe
aas
and
ficoml
push
sahf
js
ret
lahf
shlb
xchg
mov
fidivrl
mov
xchg
dec
xlat
outsb
test
xor
xchg
subl
mov
push
push
xchg
sub
and
dec
addr16
sahf
das
gs
cmp
mov
push
adc
mov
out
cmp
aaa
sub
scas
lods
xor
sub
push
and
lods
dec
adc
xchg
add
xlat
rcll
out
mov
mov
adc
jb
mov
test
fsubs
add
mov
jp
lods
ret
das
faddl
ds
push
aaa
push
jecxz
jnp
and
sbb
cmp
adc
inc
sub
das
push
mov
adc
push
push
mov
fwait
pop
pusha
inc
ss
mov
pop
roll
pusha
out
out
rol
outsb
das
adc
push
insb
pop
popa
leave
sub
stc
loope
in
pop
mov
mov
out
xchg
ljmp
jae
xor
int
loopne
scas
es
fdivl
loope
pop
push
jle,pn
popa
sub
rcll
dec
out
push
mov
aas
ljmp
push
pop
ds
nop
sarl
mov
in
mov
stos
jbe
rcr
pop
and
push
andl
push
pop
fbstp
in
fldenv
lods
enter
pop
sbb
mov
or
inc
adc
popf
add
xchg
cmp
addr16
jp
pop
push
push
mov
mov
cmp
dec
add
js
push
ja
xchg
inc
mov
fdivrs
fisttpll
mov
dec
das
adc
xor
std
or
push
movsb
and
and
or
add
mov
sub
xor
and
sti
inc
xchg
dec
test
pop
and
in
add
outsb
lods
mov
in
ret
pop
xchg
sbb
mov
pop
mov
movsb
xchg
jmp
inc
lret
push
xchg
or
jecxz
out
mov
or
and
mov
mov
mov
mov
es
xor
cld
cmp
add
mov
aaa
sub
cmp
xor
das
test
jnp
pushf
je
xorb
scas
push
daa
sub
and
es
addr16
adc
or
inc
cli
ror
mov
pop
jnp
xor
not
stos
sbb
in
mov
sub
sbb
dec
push
cmp
xorl
ret
lahf
add
push
rorl
push
cmpsl
ljmp
hlt
jbe
xor
pop
xor
pop
dec
pop
in
adc
outsl
shlb
ss
adcl
out
data16
jle
inc
mov
push
sbb
mov
jle
sub
lcall
xchg
adc
rolb
cmp
inc
lret
dec
jge
daa
cs
pop
pop
bound
mov
mov
pop
mov
xor
shrb
lret
jnp
mov
imull
mov
fmull
popw
in
push
inc
scas
das
lcall
call
and
movsb
and
jg
mov
jo
xchg
test
fwait
dec
sbb
test
mov
mov
cmpb
push
fs
int
fs
adc
movb
cmpsl
mov
and
les
shll
in
jb
mov
jp
adc
xor
xchg
push
stc
sub
add
sub
cmp
pxor
fstps
mov
pushf
pop
jl
shlb
test
jge
stos
xchg
xchg
cmp
xchg
and
mov
fmuls
lret
xor
jne
jnp
xor
jae
ds
mov
pop
mov
int3
cmc
inc
xorb
mov
loope
mov
std
jns
fidivl
jmp
dec
mov
shlb
and
mov
les
test
pop
arpl
mov
ljmp
mov
dec
pushf
mov
iret
sub
sbbl
aas
js
addr16
out
push
adc
mov
lret
adc
sbb
movsl
int3
int
sbb
xor
jmp
lea
arpl
xor
cld
push
stos
dec
and
stos
push
idivl
movsl
jae
xor
inc
cmp
ds
lahf
aam
repnz
sbb
add
xor
rcrl
js
cli
outsl
rcll
pop
mov
jp
add
or
stos
shll
in
andb
out
sbb
add
jmp
cmp
push
ret
pop
insl
mov
sub
adc
loop
mov
mov
xchg
add
and
ja
daa
xor
push
outsb
xor
fsub
insl
ret
inc
scas
call
xor
sub
xor
ret
xlat
xor
push
nop
sti
sbb
hlt
mov
daa
js
scas
mov
or
gs
push
clc
inc
outsb
pushf
pop
jb
adc
lea
fcom
cmc
loope
or
push
add
sub
add
push
jns
out
fists
cld
cld
test
or
mov
cmpsb
out
movsb
pop
sub
insl
mov
insb
jae
cmpsl
pushf
cmp
add
push
jl
adc
sub
dec
sub
push
aaa
or
popf
lock
fstpt
sbb
inc
int
sub
fwait
ret
push
hlt
mov
scas
das
ja
pop
subb
test
xchg
into
jg
jmp
test
xchg
int3
enter
xor
mov
jb
jp
push
insb
jge
popa
mov
lds
sub
mov
add
test
mul
sbb
add
es
out
sub
fadd
jbe
add
pop
xchg
loope
loop
cmp
lods
faddl
sbb
mov
sbb
add
movsl
mov
shl
dec
xor
mov
dec
xor
adc
and
loop
mov
jle
sbb
jbe
jle
into
mov
sub
aaa
add
repz
je
xchg
sub
movsb
aas
mov
lods
sub
xor
lahf
stc
dec
push
sub
pop
lcall
and
cmp
dec
lret
sub
repz
adc
dec
xchg
and
cmp
mov
xchg
lea
add
adc
loopne
sub
or
push
lods
das
xchg
cmp
loope
push
pop
pop
cmp
js
push
xor
pop
pop
pop
stc
shr
dec
stc
in
test
inc
push
cs
sub
pop
pop
sbbb
pop
fwait
jl
xchg
repz
pop
imull
push
and
inc
or
mov
ds
loop
aam
dec
sbb
clc
jl
jbe
ljmp
aaa
movsb
jl
cmp
mov
sbb
leave
xlat
stos
es
xor
adc
popa
sbb
mulb
call
mov
mov
push
jmp
movsl
xchg
xchg
dec
lods
pop
es
and
push
cltd
sbb
lret
mov
pop
test
and
pop
lods
lods
jge
mov
aaa
das
mov
cmp
ja
in
or
mov
push
mov
outsl
inc
jmp
pop
gs
add
es
and
push
mov
push
stc
inc
fcoms
cmp
mov
pop
shl
xor
pop
mov
lods
adc
cmpl
mov
shrl
lock
xor
sbb
dec
out
cs
push
mov
cmpb
push
sti
cld
fidivrs
iret
jo
test
sub
sub
xchg
lret
sub
xchg
sub
inc
xor
pushf
test
jno
adc
dec
outsl
fldl
xor
sbb
jbe
cs
mov
mov
in
sbb
sti
mov
and
das
xchg
sub
sti
adc
and
sub
xor
jle
mov
gs
call
sbb
cmp
add
mov
test
ds
adc
or
ret
out
or
mov
movsbl
jle
sub
hlt
adc
repz
jp
mov
mov
ja
std
sub
cmp
jb
mov
sbb
ret
and
sub
mov
xor
mov
jge
add
scas
movsb
mov
add
and
jmp
scas
decl
dec
sub
imul
stos
pusha
lds
ja
pop
add
mov
sub
lods
lret
rclb
sub
adc
adc
or
lcall
stos
inc
inc
lcall
xlat
leave
insl
ret
mov
aas
mov
mov
jl
xor
dec
inc
or
cld
inc
inc
inc
in
mov
dec
dec
fdivrl
push
mov
inc
push
inc
mov
jb
dec
movsb
mov
pusha
mov
nop
fs
test
ret
push
mov
push
aas
rcr
mov
call
imul
stos
stos
cmpsb
xchg
test
je
cwtl
inc
sbb
fistps
ss
push
jmp
cmp
and
fs
aad
aas
xor
dec
jo
js
pusha
cmp
inc
add
aas
adc
jnp
mov
ljmp
mov
sbb
cmp
test
in
pop
pop
sub
lcall
mov
xchg
outsb
jg
jmp
addr16
push
pop
test
outsl
in
insb
bound
jnp
or
jge
cmp
mov
std
das
dec
stc
mov
pusha
dec
inc
aam
popa
iret
xchg
xchg
jmp
mov
jns
push
push
insl
int
xor
andb
adc
cli
push
sub
iret
inc
popa
int
ss
mov
mov
mov
xchg
xorb
inc
jge
cmp
das
cltd
jp
es
xchg
fdivs
pop
fucomip
push
aaa
xor
lods
fs
xchg
mov
push
sub
xchg
xor
dec
inc
jnp
mov
mov
call
cmp
insb
pusha
lods
mov
xorb
jl
mov
mov
push
mov
call
stos
testl
dec
lods
push
push
outsl
in
insb
ja
mov
push
call
pop
xlat
mov
rolb
jo
cld
xor
leave
fwait
sbb
enter
rcrl
pop
cmp
sub
jle
enter
sbb
and
mov
jbe
pop
sbb
jg
fcoms
dec
dec
jne
xchg
nop
or
mov
jae
ss
sahf
jo
ljmp
xchg
repz
mov
pusha
daa
sbb
inc
pop
adc
xchg
bound
js
js
aaa
sub
addr16
cmp
out
daa
ljmp
xchg
lea
lods
gs
movsl
sub
lahf
popf
dec
cld
int3
jmp
or
fsubl
jmp
mov
lock
push
sub
mov
aaa
sub
or
ret
cmc
gs
in
bound
adc
rcr
fnsave
and
mov
and
je
dec
leave
xchg
cmp
das
inc
js
dec
inc
aaa
jbe
dec
aaa
mov
jl
jg
shlb
adc
xchg
sub
popa
fnsave
cmp
dec
xor
xor
pop
jnp
cmp
lds
sub
and
loope
cmp
ja
ss
push
pop
gs
dec
sub
movsb
sbbl
lcall
mov
lods
and
xor
out
shrb
out
adc
push
shrl
movhps
push
fiadds
pop
lret
pop
xor
nop
mov
xor
jne
mov
adc
inc
inc
stos
jne
in
mov
test
inc
sub
add
icebp
jg
shrl
bound
lret
lea
stos
bswap
nop
ds
rclb
add
pop
push
leave
inc
or
mov
mov
cld
add
popl
dec
cltd
sub
hlt
push
sti
idivl
pop
test
cmp
xchg
xor
arpl
cmpsl
mov
mov
mov
and
jp
in
pop
fwait
ds
add
jge
out
data16
aad
subl
aad
lods
dec
pushl
scas
and
and
test
push
adc
xor
ds
sub
leave
mov
mov
pop
in
cs
adc
test
test
ret
out
push
rolb
pusha
xor
mov
lock
adc
fs
iret
sbb
sub
xlat
ljmp
cs
push
jne
mov
gs
aaa
xor
xor
mov
out
jnp
hlt
cmp
fdivr
jp
dec
stos
xchg
mov
inc
add
popf
arpl
jno
pop
sti
add
pop
jge
mov
das
lock
ret
scas
das
dec
sub
arpl
xor
pusha
cmp
faddp
dec
sar
xor
pop
lret
in
inc
insb
push
dec
jg
lahf
push
stc
or
movsb
push
xchg
xchg
pop
icebp
jp
sarb
mov
nop
xor
jl
jno
add
jmp
dec
xchg
mov
mov
ljmp
fisubrs
mov
jo
mov
xor
pop
aas
add
icebp
cmp
add
mov
jo
xor
adc
mov
sub
mov
aaa
inc
push
cwtl
inc
inc
lock
aaa
mov
into
faddl
pop
jecxz
sub
cmpl
dec
inc
or
add
subl
loopne,pt
mov
mov
stos
hlt
repnz
into
inc
inc
cmp
clc
and
dec
mov
frstor
fwait
sbb
xor
fs
cmp
pop
cmp
call
and
das
or
xor
pop
je
sarl
mov
jbe
pop
das
push
mov
aas
jmp
and
loopne
mov
scas
sub
add
out
aad
add
push
stos
imul
push
or
cmp
mov
xor
mov
pop
sbb
cmc
imul
xchg
xor
jl
outsb
into
lock
pop
pop
sbb
int
shrl
stos
leave
and
sbb
sub
or
xor
jp
stos
ljmp
xor
mov
pop
adc
push
mov
and
mov
pop
pop
xchg
dec
mov
pop
inc
pop
lcall
xor
pop
insl
push
out
jle
mov
es
pop
and
mov
jae
mov
sub
add
sbbl
mov
mov
push
push
insb
pop
sarl
insl
cwtl
xor
jno
inc
add
jg
test
iret
inc
cmpsb
mov
cmp
jne
jns
mov
sub
test
xchg
xor
aaa
je
inc
mov
cld
jge
fs
dec
insl
mov
test
ffree
je
dec
xor
jp
jbe
hlt
xchg
push
sub
ss
mov
and
ss
cmpl
ja
adcb
xor
hlt
int3
fisubs
mov
fdivs
dec
fidivrl
fcmovne
mov
aas
fnstsw
fiadds
cmp
xchg
mov
add
sub
mov
ficoml
pusha
mov
inc
xor
aaa
dec
insb
sub
sahf
addb
xor
icebp
pusha
cmpb
and
xor
jmp
pop
cmp
xchg
push
dec
jbe
mov
push
repnz
cmp
ss
in
dec
cmp
xor
jae
into
imul
pop
mov
adc
daa
lea
push
mov
mov
lcall
in
andl
jp
xchg
mov
in
jge
std
push
push
cmpb
cwtl
sbb
adc
xchg
push
cld
loop
stos
xchg
ss
repnz
push
sbb
sbb
sbb
push
or
imul
xchg
jae
popa
cmp
add
call
das
xor
cli
mov
popl
outsl
sbb
outsl
lea
jmp
cld
popa
shll
pop
imul
push
inc
test
dec
mov
dec
dec
fld
xor
push
shlb
cmp
imul
push
mov
sub
xlat
jg
xchg
push
cmp
sub
repnz
dec
add
dec
dec
sbb
std
xchg
sub
xchg
shl
mov
mov
std
rcll
aad
stos
imul
hlt
pusha
frstor
jle
jp
icebp
xchg
int3
dec
xchg
jle
dec
mov
sti
xor
dec
pop
arpl
cmpsl
mov
je
inc
push
xor
xchg
jl
dec
dec
imul
xor
mov
shrb
push
sub
in
aas
test
sbb
ss
cmp
insl
xchg
xor
adc
xchg
insb
out
mov
loop
insl
lret
shl
push
push
push
inc
lea
sbb
mov
push
and
inc
cmp
lock
data16
pop
sbbl
inc
loope
dec
dec
gs
leave
mov
pop
sub
aam
aaa
push
sub
push
out
inc
mov
call
and
mov
test
int3
or
push
jp
xlat
mov
pusha
mov
sbb
push
test
mov
divl
ljmp
call
repz
pop
neg
scas
in
jle
push
icebp
push
mov
push
iret
dec
jno
pusha
mov
sub
adc
inc
scas
and
addr16
lahf
pop
loope
add
or
cmp
adc
push
push
jl
pop
test
out
cmp
or
cmp
mov
pushf
sub
dec
mov
ss
push
fsubl
ja
cmp
in
or
xchg
popf
bound
cld
inc
sbb
jns
and
test
jg
push
ljmp
adcl
fsubl
out
mov
xor
push
dec
clc
inc
addr16
pop
cmp
dec
xor
adc
push
and
outsb
sub
or
push
dec
sbb
addl
outsl
dec
dec
outsl
mov
jmp
cmp
or
pusha
hlt
sbb
int3
pop
repnz
cmp
cld
xchg
mov
ss
imul
xor
ja
push
xor
xor
dec
jo
adc
add
ss
cmp
sub
cmp
enter
push
je
shlb
inc
xchg
dec
scas
mov
pusha
in
ss
dec
dec
scas
fldenv
add
je
sahf
rolb
jno
je
shll
sub
imull
rolb
jno
jl
xchg
cmpsl
sarb
sub
push
aaa
dec
popf
lods
add
daa
jo
sbb
push
outsb
xor
push
hlt
je
add
cmp
and
loopne
jecxz
es
insb
add
mov
sub
cmp
int3
xorl
jl
dec
mov
lahf
xchg
cmp
lock
lods
inc
mov
pushf
cmp
scas
mov
push
das
nop
mov
in
mov
mov
lret
js
dec
mov
ss
sarb
xchg
dec
cmp
outsb
sub
pop
cmp
shrl
addb
and
cmp
cmc
iret
cmp
lock
shll
mov
ret
mov
xor
mov
aad
sub
xchg
pop
lds
mov
jmp
cmp
lret
jb
dec
insl
das
adcl
shlb
cmp
pop
clc
sub
jo
lods
cmp
adc
mov
cmp
call
pop
das
cmp
lock
repnz
jo
in
mov
std
xor
aam
shrb
cmp
inc
insb
mov
pop
popa
dec
jo
dec
cmp
sub
nop
inc
dec
mov
outsb
jg
fimuls
jle
cmp
lods
adc
mov
dec
hlt
jno
lock
jg
stos
cld
cmp
and
sub
outsb
sub
in
cmp
rorl
inc
or
cmp
sub
int3
cmp
mov
inc
ljmp
mov
stc
mov
ja
scas
dec
movsb
add
jo
pop
cmpsb
jge
adc
dec
adc
test
xchg
sbb
das
js
test
sub
insb
cmp
es
dec
pop
cmp
scas
flds
das
push
mov
xchg
cmp
cs
or
mov
cmp
xor
decb
cmp
popf
mov
jb
sub
jmp
sub
jb
dec
fidivl
leave
insl
dec
sub
mov
jle
sarb
dec
mov
jb
dec
xchg
das
fdiv
or
mov
test
movsb
cmp
enter
pushf
dec
cmp
adc
dec
inc
sub
xchg
cmp
je
outsb
das
xchg
xor
push
jno
xorl
mov
mov
cmp
fildll
mov
dec
sbb
popf
mov
imul
std
clc
xor
mov
lods
hlt
inc
test
popf
inc
insb
pushf
in
outsb
xchg
push
and
pop
dec
fcomps
xor
dec
adc
cmp
dec
sarb
or
xor
jle
lods
mov
dec
mov
xor
jno
add
push
pushf
add
mov
sub
les
in
mov
fistpl
in
pusha
mov
pushf
mov
insl
sub
add
push
insb
in
mov
mov
cmp
or
shrb
pushf
pop
xchg
or
clc
sbb
cmp
mov
xor
or
jnp
jno
xor
lock
dec
lods
sahf
lods
lock
xor
dec
in
and
dec
fdivrs
mov
and
int3
cmp
jle
das
les
pop
sub
xor
mov
int3
imul
stos
inc
cwtl
cmp
scas
loopne
mov
xor
dec
loopne
jb
mov
jle
cmp
jmp
dec
js
data16
hlt
cmp
insb
or
sub
and
jb
dec
xor
sub
and
cmp
adc
sarl
in
inc
xchg
xor
into
push
xchg
sub
mov
popf
mov
jp
mov
lock
dec
cmp
outsb
inc
dec
in
cmp
mov
jo
xchg
mov
ds
rcrb
xor
jb
dec
jb
cmp
dec
cmp
outsb
cmp
cmp
mov
jo
mov
pop
sbb
push
mov
pop
dec
sti
cmp
mov
lock
mov
xor
cmp
enter
lahf
mov
inc
cmp
lcall
pop
xchg
xor
jb
dec
test
mov
cli
fdivl
cmp
outsb
push
dec
xor
xor
pop
cs
and
cmp
inc
mov
sbb
into
jp
ljmp
or
mov
and
das
cmp
aas
sti
fisubl
ljmp
xor
scas
in
add
adc
test
outsl
cld
jbe
les
jmp
outsl
je
adc
clc
fxtract
scas
adc
push
mov
outsb
hlt
mov
mov
inc
int3
out
sbb
cmc
jae
popf
jl
in
shrb
jne
jecxz
aaa
or
add
cmpb
mov
jnp
scas
mov
adc
test
xor
inc
jp
or
stos
fcmove
jae
dec
or
push
jp
push
je
fs
outsl
out
ss
sub
or
mov
inc
test
test
insb
adc
xlat
add
daa
scas
inc
in
inc
shrl
sbb
adc
inc
lds
sub
in
inc
sub
leave
add
gs
data16
cmp
movsb
inc
aad
inc
cmp
cmpb
adc
xchg
out
push
inc
je
in
xor
inc
cmp
cwtl
dec
add
pop
cmp
mov
aam
outsl
stos
icebp
push
scas
mov
nop
test
mov
aaa
dec
xor
xor
inc
xchg
inc
dec
insb
mov
ret
add
sub
fs
bound
push
adc
inc
test
inc
incb
test
xlat
jbe
shr
pop
lods
adc
notl
adc
insb
dec
daa
inc
cmp
lret
push
aad
repnz
lahf
mov
scas
xchg
ret
sahf
jo
std
js
mov
jge
iret
xchg
nop
into
mov
inc
push
loop
shrb
add
loope
sarb
into
pop
mov
xor
stos
rcrl
pop
jb
xchg
icebp
scas
insl
test
add
int3
mov
adcb
test
test
nop
ror
and
nop
mov
icebp
insb
mov
out
adc
mov
inc
push
adc
or
or
inc
mov
hlt
ds
inc
aas
inc
inc
sub
lahf
dec
jns
mov
adc
pusha
nop
xchg
inc
pushf
in
jge
lock
aaa
xchg
inc
stos
fists
stos
dec
xchg
daa
scas
jne
stos
cs
cmp
jns
mov
adc
jbe
xlat
scas
pop
shlb
xor
inc
movsb
jb
cld
mov
push
repz
xor
sub
mov
mov
add
in
aam
jp
shlb
adc
mov
sti
sbbl
shr
mov
or
cmc
inc
xor
daa
out
mov
cltd
dec
inc
dec
aaa
inc
mov
js
inc
test
dec
inc
iret
cmp
jg
push
pop
fs
insl
mov
xor
das
ljmp
aaa
rorl
lock
movsl
ljmp
outsb
arpl
lods
jne
pop
cmp
mov
shl
xor
inc
fcomps
aaa
sub
jl
xor
push
and
outsb
cwtl
mov
mov
fnstsw
gs
xor
test
ss
mov
jb
lahf
sbb
jnp
push
or
adc
jne
iret
jne
mov
mov
add
xchg
insl
lahf
mov
movsb
insl
pop
mov
or
or
mov
sub
jmp
call
pop
sub
sub
or
das
dec
sub
js
aam
xchg
aaa
rclb
out
dec
scas
adc
push
push
mov
adc
aad
add
sbb
in
cmpsb
mov
cmpsl
jns
and
pop
rolb
inc
jo
js
cmp
mov
adc
jle
xchg
ds
stos
mov
scas
mov
das
cs
jge
mov
add
add
ja
sbb
mov
fs
call
in
inc
or
adc
sub
test
cs
repnz
mov
sbb
arpl
fstpt
mov
adc
xchg
cld
aaa
idivb
test
enter
push
mov
repz
decb
cmpsl
push
icebp
cmp
or
test
mov
sbb
xlat
stos
das
cmpsb
mov
inc
outsl
ja
jl
mov
adc
arpl
mov
in
inc
mov
mov
sub
mov
rorb
and
jb
xor
mov
xor
push
outsb
lds
mov
push
jnp
xchg
sbb
in
push
push
pusha
cs
xor
xchg
sahf
pop
and
das
xor
jo
pop
imul
aaa
mov
mov
push
push
cmp
or
xor
cld
fwait
xor
std
pop
cmp
ficoms
leave
aas
push
fcomps
inc
sbb
adc
fidivl
adc
test
stos
loop
push
xchg
push
dec
outsl
push
jae
movsb
ja
lahf
decl
fwait
outsl
gs
or
rcrb
or
stos
mov
test
push
sbbl
pop
or
aas
jl
repnz
fs
pop
and
leave
inc
dec
jo
xchg
xchg
rorl
sahf
shl
pop
cmp
cld
add
popa
jp
xor
and
jne
enter
sbb
filds
outsl
dec
jp
ss
mov
mov
in
pop
mov
stc
mov
stos
xor
sub
scas
out
mov
les
push
stos
das
jl
mov
mov
mov
hlt
sti
outsl
movsb
dec
ret
xor
xchg
loopne
lahf
js
push
pop
mov
cwtl
inc
xor
push
lea
addl
mov
mov
outsl
test
lahf
adc
xchg
sub
xchg
xor
xor
sub
mov
jmp
scas
lcall
mov
hlt
dec
rcr
xchg
push
xor
jae
jmp
sub
xchg
jge
adc
daa
xor
loop
loopne
fcompl
test
jl
and
or
sbb
xor
mov
pop
cmc
sub
and
pusha
xlat
sub
insl
addr16
test
mov
fnstsw
out
sbb
popf
das
in
cmp
das
pop
mov
pop
inc
xchg
mov
fcomps
lret
cltd
or
xorl
mov
jle
xchg
pop
push
pop
sub
cmp
push
xor
arpl
adc
aaa
stos
sbb
dec
dec
xacquire
jle
gs
mov
scas
fidivrl
arpl
push
sub
mov
shr
lock
les
rcll
filds
xor
mov
mov
daa
ss
hlt
pushf
cmp
popf
push
mov
fcoms
fwait
cmp
inc
dec
xchg
mov
adc
cmp
pop
int3
dec
jl
mov
int3
cld
jnp
xor
jno
push
jg
insb
mov
lods
mov
pop
fcoms
inc
es
mov
roll
flds
enter
test
sbb
cli
gs
mov
jl
jnp
jnp
jbe
in
pop
ja
cmp
xchg
ds
popf
jnp
pop
inc
idivb
shrb
xor
jnp
jge
xchg
inc
lcall
or
xor
adc
adc
popf
cmp
pop
in
subb
nop
cmp
movsb
add
cmp
test
mov
pusha
xchg
fdivl
pop
jns
sub
xchg
inc
sub
ss
fsubrl
push
cmp
cli
leave
push
aad
jne
or
push
sahf
pusha
adc
jmp
mov
inc
sub
test
std
cmp
dec
cmp
dec
std
jl
cmp
clc
jns
push
test
jge
xchg
push
adc
ds
sbb
mov
mov
dec
cmp
push
jne
mov
inc
mov
and
pop
mov
mov
sbb
add
in
push
cs
adc
mov
das
push
js
adc
lcall
dec
enter
dec
jp
rcrl
lods
negb
hlt
fisttpl
xchg
and
adc
jge
jge
aaa
lret
cmpsb
jno
cmp
enter
inc
pop
adc
pop
mov
es
xor
lods
push
xor
call
adc
call
inc
cmp
mov
notl
ljmp
hlt
stos
mov
decb
mov
sub
dec
jne
push
sarb
dec
jo
stos
inc
scas
inc
ret
cs
jns
inc
les
les
loope
jl
into
insb
inc
pop
aaa
loopne
je
stos
mov
je
sbb
in
jb
ret
and
cmp
pop
fdivl
fdiv
push
jne
pop
inc
outsl
movsb
sbb
test
push
or
jmp
dec
xchg
adc
mov
jno
outsb
sbb
mov
mov
jl
cs
das
adcb
cmp
push
aaa
push
push
mov
xlat
int3
xor
mov
clc
inc
mov
mov
mov
mov
cmp
pop
inc
sarb
mov
sub
cmp
stos
enter
dec
cmpsl
jae
cmp
xchg
test
pusha
mov
lret
xchg
movsb
mov
push
pop
cmpsl
or
mov
lock
aad
lock
cmp
cmpsb
push
add
and
call
int
pop
sbb
fcoms
stos
test
icebp
dec
jns
ds
push
clc
out
mov
jno
push
in
xor
cmp
pop
mov
js
repz
roll
ja
cmc
adcl
idivl
je
pusha
dec
iret
xor
loope
mov
mov
add
dec
mov
or
mov
aaa
shrb
cld
xor
cmc
xor
xor
popa
cmp
shl
in
mov
push
pop
je
testl
js
push
xor
out
iret
cmp
rcll
mov
adc
fildll
sbbb
dec
mov
fnstsw
lret
xor
jmp
cmp
dec
stos
les
loopne
repz
rcr
xchg
test
call
aaa
int3
dec
out
mov
jge
xor
in
sarl
cmp
and
or
lret
aas
lock
int
add
xchg
xor
gs
sub
lea
mov
mull
fmulp
pop
sub
adcb
ss
mov
cmp
stos
pop
pop
hlt
movsb
jnp
insb
mov
pop
sub
jo
rcpps
push
dec
cld
push
sub
mov
ds
pop
xchg
dec
mov
mov
hlt
cmc
cmp
jns
jge
aaa
xor
adc
xchg
mov
les
jle
cmp
push
pop
jle
jg
jb
cmp
add
das
xor
add
push
aaa
es
mov
jno
jo
mov
inc
es
inc
inc
pop
sar
xor
pop
dec
sbb
insb
or
mov
or
mov
aas
xor
aad
push
das
and
hlt
pop
imull
xchg
enter
push
fs
inc
jp
pushl
adc
sar
loope
shrl
shrl
sbb
in
cld
scas
es
inc
call
add
and
movsb
addr16
jle
inc
sarb
lret
mov
aaa
sbb
imul
jno
test
mov
push
push
inc
repnz
jne
js
jle
cmp
dec
negl
inc
mov
sub
mov
jnp
sbb
fs
bound
lods
xor
das
cmc
fimull
xor
je
lcall
hlt
pop
fnstenv
add
sub
mov
cs
pusha
enter
pop
xchg
pop
sbb
xchg
mov
push
in
push
ds
outsb
cli
lret
push
cmp
dec
lods
jo
cwtl
lock
mov
jl
or
lock
lcall
adc
shlb
int3
sub
jno
shrl
adc
add
das
test
push
sbb
ss
xor
pusha
push
dec
std
rorl
cmp
dec
dec
or
sbb
scas
stos
pop
jno
jle
ss
adc
dec
sub
lods
mov
loope
cli
cmc
push
int
xchg
js
scas
mov
cmp
clc
mov
cmp
fcmovnb
xchg
mov
or
sbb
xor
xchg
idivb
out
sbb
pop
pop
decl
iret
xor
movsb
xor
cmp
shrb
push
xor
popf
mov
mov
shll
mov
out
xor
aas
adc
mov
call
adc
dec
fsubrs
dec
xchg
ljmp
and
sub
push
dec
nop
sub
mov
js
sub
lcall
test
aas
bound
sarb
pop
dec
mov
lds
dec
inc
adc
push
sub
xor
cmpb
das
cmpsl
add
fsubrs
sub
pop
inc
cli
ret
cmp
inc
cmp
insl
xor
inc
rcll
inc
sub
push
test
hlt
lods
das
xchg
pop
movsb
data16
push
xchg
ror
push
and
sub
outsl
pop
adc
incb
jmp
xchg
sbbl
xor
lods
jo
or
mov
popf
pop
sbb
cmc
mov
int
addr16
cmp
or
mov
adc
stos
stos
pop
pop
mov
mov
call
fsubr
js
or
bound
dec
xor
sub
ja
jae
sub
push
outsb
les
add
push
jo
cs
in
push
aaa
sbb
xchg
dec
ljmp
and
jb
add
dec
xor
push
push
movsb
push
divb
mov
repnz
cmp
jo
insb
fdivs
out
add
xor
aam
enter
push
push
out
cmpsl
mov
jns
testb
cmp
scas
enter
psignw
jge
mov
inc
in
enter
sub
test
lods
sbb
add
pop
gs
lea
jae
scas
inc
ret
xor
lods
push
mov
into
pop
and
mov
mov
cmpsb
stos
lea
pop
in
dec
mov
push
gs
mov
mov
mov
outsb
fdivl
dec
cs
ret
cmp
adc
push
xor
out
stos
cmp
dec
idivb
ss
mov
jo
hlt
adc
mov
inc
mov
lods
push
mov
sub
movsl
xchg
mov
and
inc
jecxz
rcll
rol
inc
dec
loope
mov
xchg
mov
pop
cs
std
xorl
cmp
daa
pop
jge
movsl
dec
lcall
adc
dec
cltd
xor
ficoml
aam
dec
pop
test
jne
xor
xor
pop
pop
out
adc
mov
fidivrs
imul
insb
ljmp
sbb
add
subl
mov
xor
lahf
cmpb
xor
xor
cmp
inc
pop
mov
mov
pop
mov
mov
sbb
push
in
popf
push
rclb
aas
push
dec
push
mov
inc
jmp
push
jns
je
lret
je
hlt
pushf
jmp
fmull
jp
cmpb
xor
sub
lds
xor
cmp
dec
push
out
dec
insl
ficoms
xor
mov
push
fs
and
xchg
mov
cmp
push
add
xor
jbe
mov
lcall
add
lahf
in
aaa
mov
adc
stos
sub
push
ss
rcr
jbe
stc
pushf
int
xchg
icebp
icebp
bound
cli
lret
cmp
in
cmp
cmp
ds
outsl
inc
cmp
jmp
rolb
dec
ficoml
ret
inc
insl
xchg
das
mov
dec
mov
std
lock
popf
aam
inc
ret
in
movsl
lahf
insb
sbb
push
mov
arpl
cltd
das
data16
jb
dec
sbb
cmp
xor
adc
mov
lret
dec
cmp
mov
cmp
jl
dec
scas
xchg
sub
pusha
das
dec
mov
ds
jb
sub
or
mov
mov
inc
pop
lcall
popa
xchg
sbb
les
pusha
and
cld
loop
outsb
xchg
imul
dec
int
jbe
fwait
jo
xor
sub
mov
sub
aaa
jb,pt
cmp
mov
clc
scas
movl
push
inc
ret
dec
subb
lods
call
in
shll
adc
xchg
xor
jno
sbb
dec
jmp
mov
call
pusha
adc
or
mov
pop
pop
ss
test
pushf
imul
pop
hlt
add
inc
mov
incl
imul
pop
push
cmp
push
addb
adc
lock
fisubs
adc
dec
call
pop
sbb
int3
inc
call
repnz
cmp
loop
outsl
adc
mov
mov
jp
aam
adc
fadd
mov
stc
bound
jo,pt
sub
sbb
push
mov
mov
int3
inc
mov
pusha
sub
push
insl
pop
mov
pushf
sub
int
dec
js
jns
rorb
inc
inc
jo
cmp
mov
jl
mul
mov
fidivrs
divb
xor
inc
ret
mov
rcrb
cmc
mov
popf
cmc
push
fs
xorb
xchg
nop
popf
and
xor
data16
and
mov
outsb
test
push
push
loope
dec
mov
push
mov
push
pop
push
jno
cmp
xchg
mov
mov
cmp
sub
sbb
xor
pop
inc
sub
pop
mov
dec
mov
pop
aaa
ret
clc
inc
cmpsl
push
loopne
fsubrl
add
push
jno
cmp
shll
cmp
xor
std
stos
xlat
add
xor
or
into
push
pop
leave
andl
push
adc
cmp
jle
jge
movsl
dec
pop
arpl
ja
dec
test
inc
pop
mov
mov
fs
jle
inc
dec
enter
push
fs
xchg
mov
xor
jg
mov
into
pop
sbb
jg
inc
dec
mov
push
daa
xchg
cmp
testl
cmp
adc
je
mov
insb
jl
adc
xlat
jl
sahf
fsubs
dec
les
scas
js
mulb
pop
dec
outsb
lods
dec
mov
mov
inc
lock
pop
inc
outsb
sub
lock
cli
cmp
das
dec
xchg
mov
or
mov
pushf
hlt
mov
push
and
fdiv
inc
inc
mov
int
mov
getsec
mov
rolb
mov
outsl
test
add
test
fildll
inc
mov
add
inc
xorb
repz
jle
lahf
adc
inc
push
mov
pop
cmp
jo
inc
mov
je
clc
push
hlt
inc
js
lods
inc
test
cmp
loopne
cmp
mov
jg
addr16
mov
nop
into
clc
add
pusha
push
mov
outsw
data16
insl
stos
mov
inc
in
pop
andb
rcl
lods
call
push
inc
lods
jp
scas
sub
push
mov
jnp
adc
outsb
pop
push
idivl
pop
mov
mov
loope
mov
pop
xchg
push
push
mov
pop
mov
dec
jno
ss
cmp
fs
pop
push
pop
pusha
sub
sbb
fildl
jl
clc
or
pop
xor
pushf
rcrb
les
and
lea
cs
aad
loopne
cmp
dec
ljmp
mov
gs
out
int3
mov
loopne
push
fcomps
and
sarb
lock
les
xor
shll
pop
insl
insb
cs
test
lcall
out
in
mov
inc
jecxz
lcall
das
pop
mov
clc
mov
stos
lahf
popf
adcb
sarl
mov
and
xor
adc
and
inc
and
xor
rcll
fnstenv
xor
pop
cmc
dec
push
les
lock
sub
or
cmp
jne
enter
mov
leave
jge
out
ss
int
mov
or
aaa
or
adc
or
aaa
cli
push
sbb
dec
das
sub
jge
js
and
inc
xor
insl
fnstcw
cmp
scas
xchg
pop
xchg
add
lock
dec
add
cwtl
outsb
outsb
jae
or
rorl
add
inc
add
inc
pop
cmp
arpl
and
je
xchg
insl
push
dec
lods
icebp
test
bound
mov
cmp
adc
scas
mov
sub
mov
sahf
aaa
add
sub
dec
fnsave
jge
and
test
lods
mov
mov
dec
fistps
movsb
dec
lods
data16
mov
pop
out
ds
inc
mov
mov
inc
ret
mov
add
andb
pop
xor
xor
mov
das
or
cmp
roll
sub
addr16
jmp
inc
lret
sub
in
test
xor
das
mov
adc
addr16
jg
fistps
mov
and
adc
jo
dec
fcoms
xor
xchg
adc
cwtl
aas
push
mov
xor
test
mov
pop
test
dec
push
aaa
idivb
mov
aaa
push
xor
shlb
pusha
pop
je
dec
insb
jnp
mov
fcmovb
rclb
push
adc
push
mov
sbbb
and
or
sbb
inc
dec
xchg
xchg
fucom
dec
inc
and
gs
sub
mov
add
add
mov
stos
out
lock
pop
in
int
sbb
aas
mov
das
dec
stos
push
andb
and
sti
push
addb
adc
fs
and
mov
xor
jb
mov
add
xor
jno
pop
jns
mov
cld
sbb
jg
xchg
jmp
fwait
pop
cmc
insb
je
loope
lret
pusha
jle
and
dec
into
nop
xor
testl
push
sbb
sbb
cld
mov
aam
addr16
jb
stc
inc
dec
mov
or
mov
or
inc
pop
ss
lods
xor
xor
mov
sub
xchg
mov
jb
enter
and
add
mov
xchg
ds
xor
aam
adc
mov
sarl
push
xlat
cmp
dec
lock
pop
lds
pop
mov
xor
dec
push
ss
lret
cli
sti
sldt
add
nop
testl
push
push
sbb
stc
outsb
pop
jno
outsb
pop
xchg
arpl
sbb
jge
xor
push
cmp
ljmp
jno
dec
and
cmp
inc
inc
push
outsb
and
sub
xchg
mov
sarb
sbb
je
push
hlt
cmp
stos
jb
mov
cmp
hlt
and
sub
push
sbb
xor
sub
inc
mov
pop
cmp
sub
pusha
xchg
iret
hlt
adc
les
sub
outsb
mov
out
mov
cmp
rorl
push
and
popf
jg
ds
jo
push
lods
pop
fwait
adcl
js
aas
inc
jg
fbld
xchg
pop
mov
push
xchg
mov
pop
jmp
cmpsl
jmp
mov
mov
inc
xchg
inc
push
pop
lods
xchg
jl
inc
push
testb
inc
jle
ret
cwtl
shll
jne
jo
nop
mov
ds
movsb
test
push
fs
xchg
dec
aas
xchg
pop
push
stos
sbb
mov
sbb
js
xor
add
jl
movsb
ret
test
mov
pop
sub
popa
add
pop
aas
lock
clc
mov
sbb
pusha
and
hlt
push
push
push
lock
mov
xor
outsl
out
push
ss
sbb
dec
sub
ljmp
cmp
sub
pop
mov
repz
nop
inc
xor
xchg
mov
outsl
sub
cwtl
pushf
in
in
dec
std
iret
outsb
lret
jae
cmp
pop
inc
lahf
cli
aam
hlt
cwtl
aad
cmp
lock
movl
push
mov
push
adc
hlt
pop
fwait
xor
mov
xor
hlt
push
stos
je
push
in
push
sarb
ljmp
push
rcll
inc
scas
pop
je
cmpxchg
sar
jge
insl
roll
aad
fists
dec
scas
push
mov
stos
cld
mov
fnsave
popa
mov
or
xchg
outsb
in
movsb
pop
mov
ja
inc
pushf
loop
lods
clc
fildl
and
clc
test
jb
xor
aas
fsubs
add
jne
mov
cmp
out
test
mov
pop
jno
idivl
cmp
in
nop
les
pop
nop
adc
mov
inc
ss
jno
lcall
pop
adc
xchg
adc
cs
xor
imul
loope
jge
jecxz
aas
or
cld
frstor
cmp
mov
cmp
cmp
mov
dec
dec
mov
iret
hlt
sahf
adc
inc
jae
dec
inc
mov
cmp
xchg
nop
outsl
pop
ds
mov
das
pop
mov
aas
inc
jae
push
sub
daa
push
and
adc
testl
scas
adc
mov
cmp
sub
inc
adc
sbb
ret
dec
lahf
jmp
jnp
or
dec
cmp
jnp
sbb
inc
cmp
xor
pusha
jb
cmp
loope
jnp
int
in
cmp
pop
movsb
dec
mov
adc
loope,pt
or
lock
push
pop
jle
scas
sbb
cli
jo
adc
mov
xchg
and
adc
jo
outsl
hlt
lock
addb
pushf
xor
shl
jle
dec
jno
fbstp
mov
cwtl
push
cmc
cmpsl
inc
xor
dec
addr16
in
ds
add
mov
sbb
lock
ss
clc
in
pop
inc
in
loopne
das
sub
adc
mov
adc
lea
push
push
adc
pop
loopne
xor
cld
inc
xor
push
add
mov
jb
das
addr16
xchg
lock
in
in
mov
sbbl
mov
sbb
push
outsb
or
cmp
pop
mov
push
mov
fistps
clc
pop
adc
outsb
fists
jle
mov
xor
sti
adc
or
int3
mov
pop
sbb
mov
fimuls
gs
lods
push
mov
sahf
mov
sub
mov
adcl
mov
inc
mov
outsb
dec
les
mov
pop
push
push
dec
les
or
jae
dec
lock
and
mov
nop
pop
gs
inc
push
in
icebp
insl
je
movsb
mov
int
test
push
adc
add
sbb
outsl
push
mov
jo
xor
jmp
popf
loopnew
cmp
inc
mov
cmpsl
adc
add
jmp
xor
sub
xchg
call
jo
aas
adc
adc
sti
mov
cmpsl
lds
dec
sbb
xchg
mov
cmp
jmp
mov
inc
mov
add
push
xchg
mov
cmp
test
fdiv
mov
repz
shlb
test
cmp
and
mov
mov
movsl
xorb
pop
push
out
cmp
cmp
xchg
xor
mov
mov
inc
outsl
dec
mov
mov
bound
dec
cwtl
add
push
xchg
pop
push
outsb
fs
fldt
rcll
in
adc
sahf
cmpb
mov
mov
mov
mov
mov
insl
flds
pop
pusha
xchg
mov
mov
mov
ss
push
inc
xor
sub
adc
push
mov
mov
adc
xor
or
push
pop
divb
stos
ret
lock
pop
mov
test
hlt
push
xor
pusha
mov
xchg
sahf
mov
xor
sub
push
adc
xor
lret
mov
mov
mov
sbb
scas
add
insb
pop
iret
mov
mov
mov
stc
fildll
ds
mov
cs
ja
adc
jle
cmp
les
test
sti
dec
enter
sar
and
sarl
add
and
jae
cmp
jp
or
inc
or
or
inc
cli
das
dec
dec
or
dec
cli
das
push
dec
adc
mov
sub
jmp
fs
test
xchg
cmp
lahf
lods
insb
xor
lahf
lods
je
fs
lahf
hlt
aaa
jl
in
subb
sub
repz
push
sbb
inc
clc
aaa
insb
cwtl
cld
lods
pushf
sub
add
movsb
dec
or
and
nop
adc
mov
adc
mov
sbb
mov
pop
and
rcrb
les
das
enter
mov
test
mov
mov
ret
sub
loopne
dec
jne
cmp
cmp
fcoms
jp
nop
pop
push
ljmp
mov
jg
aam
cmc
scas
add
cltd
je
dec
mov
jl
mov
add
inc
mov
dec
testl
sbb
iret
outsb
adc
popf
fisubrl
adc
clc
clc
shrl
sti
jl
and
aad
in
sub
popa
mov
loope
sbb
fiadds
shlb
xlat
lods
mov
insb
adc
hlt
fidivl
push
adc
ficomps
mov
dec
jbe
xchg
jnp
mov
aas
cmpl
roll
mov
subb
sub
sub
or
leave
cld
jl
add
jle
xor
ljmp
sahf
cmp
xor
in
fsubl
and
and
mov
push
xor
fcoms
mov
jp
mov
inc
fcoml
fsubl
jg
push
int
push
mov
xchg
add
cmp
pusha
lock
aas
rclb
leave
lds
fs
sub
mov
inc
add
mov
sub
loope
sbb
jg
insl
in
cmpl
test
movzbl
in
ljmp
jg
lcall
fcoml
xchg
sbb
stos
mulb
add
test
pop
sahf
out
cmp
popf
clc
xchg
outsl
sub
hlt
pushf
nop
mov
xor
sbb
push
mov
mov
sarl
lcall
int
mov
arpl
test
enter
mov
jno
adc
cmp
xor
nop
fstpl
aad
cmp
lcall
xlat
mov
out
sbb
cmpl
cwtl
lcall
mov
or
jge
cmp
outsb
xchg
push
inc
loope
fbstp
pmaxub
fs
mov
aaa
jo
push
das
insb
aaa
add
repz
mov
rcrl
sbb
mov
cmp
dec
fwait
pop
sbb
test
mov
push
arpl
mov
pushl
insb
ja
sub
aas
ljmp
adc
in
fstl
insb
sbbl
adcb
es
push
jno
pop
stc
das
xor
fstl
push
mov
push
sub
bound
push
addr16
jge
push
inc
pop
dec
roll
push
cmp
iret
sub
jno
sbb
mov
fsubrs
rcll
movsb
inc
jns
aad
mov
dec
lods
cmp
sahf
xor
xor
cwtl
add
jb
ja
in
insb
arpl
out
add
adc
stos
mov
pop
dec
inc
inc
addb
push
push
inc
mov
or
xor
pop
cmc
gs
sub
ja
nop
inc
or
scas
pop
mov
mov
pop
sbb
cmp
adc
outsl
cltd
pop
add
sub
cmpsb
pop
inc
xor
push
notl
clc
sbb
xlat
pop
push
inc
inc
stos
jnp
push
push
dec
repnz
xorl
orl
and
lods
lods
push
jle
hlt
mov
inc
mov
push
or
pop
jg
pop
adcb
mov
bound
scas
add
jge
push
jl
fistps
aas
rorl
dec
add
cmp
inc
bound
jle
stc
jno
rolb
das
mov
das
pop
shlb
addr16
inc
mov
stc
dec
pop
add
jge
lods
push
aad
add
notl
mov
daa
daa
jle
push
into
push
sub
mov
sahf
sbb
mov
outsb
lcall
imul
ja
arpl
xor
xor
sub
les
xchg
addl
ljmp
lock
xchg
add
call
out
aam
insl
outsb
mov
das
sbb
jp
push
xchg
stos
mov
push
xchg
test
ljmp
mov
inc
push
adc
sub
sub
in
rol
icebp
ja
jp
dec
fnsave
add
push
xor
sub
cmp
in
sbb
addr16
push
mov
jo
jle
push
pop
add
repz
pop
adc
rcrb
inc
arpl
sub
scas
adc
sub
and
sub
cmp
jecxz
add
add
adc
mov
mov
movsb
add
movl
mov
xchg
cmp
and
aaa
mov
sbb
addr16
mov
push
rol
push
pop
es
push
or
push
jbe
lods
int
mov
pop
push
dec
movsl
addr16
ds
jae
push
ljmp
aad
xor
jp
je
int3
jbe
inc
mov
sbb
into
aas
push
adc
test
xor
mov
das
adc
iret
xlat
mov
inc
push
add
add
out
shl
nop
dec
ret
jg
inc
sub
in
out
xorb
clc
dec
lret
xchg
fists
outsb
lds
mov
loope
xchg
sbb
sahf
push
mov
arpl
jne
and
jmp
cmp
xor
ret
mov
mov
adc
lock
sarb
mov
mov
and
lea
cmp
jno
adc
fwait
xchg
stc
mov
jo
pop
push
mov
dec
and
xor
mov
je
pop
sub
jl
loopne
mov
push
mov
pop
jo
adc
push
hlt
insb
jge
jae
pop
subl
mov
push
nop
test
inc
and
rorb
mov
stc
adc
ds
fsubrs
xor
popf
sarb
xor
std
inc
nop
xor
xchg
je
cmp
push
fmuls
cmpsl
mov
jg
cmpsb
outsb
adc
xor
inc
daa
add
loop
ds
rcll
jg
cmpsb
dec
xorb
push
pop
jle
cmp
ret
int
cmpsl
jg
rcl
push
addr16
ds
sub
push
fdivr
hlt
inc
mov
cmp
sbb
cmp
dec
ds
inc
xor
mov
cmp
jbe
inc
push
cmp
lock
lahf
cs
lock
cmp
outsl
mov
jl
ret
jae
das
fmulp
sahf
aad
andb
pusha
and
inc
leave
add
dec
cmp
mov
or
pop
pop
dec
cmp
push
sub
rcrb
call
mov
in
andl
jle
les
adc
int3
jne
aad
mov
xlat
pop
push
add
sub
mov
inc
inc
daa
fdivs
nop
clc
sub
sub
and
clc
or
jnp
hlt
xor
mov
mov
xchg
xchg
aas
mov
ret
pop
xchg
outsb
mov
insl
clc
mov
push
inc
clc
jge
data16
cmpsb
adc
inc
pop
sbb
push
sbb
int
clc
in
es
hlt
or
mov
jl
arpl
mov
adc
fildl
lods
mov
push
mov
sbb
sbb
cld
mov
inc
push
clc
dec
ja
lret
ss
sub
adc
stc
std
insl
std
ss
dec
and
and
jle
in
dec
mov
stc
xor
and
push
ss
mov
jne
dec
mov
inc
iret
stos
inc
aaa
ljmp
pop
dec
push
ljmp
xor
mov
ds
inc
sbb
mov
pop
mov
cmpsb
dec
add
icebp
dec
test
in
push
fstpt
cmp
leave
cld
movsl
mov
popf
scas
xor
mov
stos
mov
jo
pop
xchg
dec
outsb
orl
jg
insl
cmp
outsb
push
cmp
movsb
mov
popf
inc
xor
mov
cmp
les
adc
push
aas
or
dec
jno
popf
stos
cwtl
inc
loopne
lods
dec
mov
sti
scas
inc
mov
sub
or
mov
sbb
xor
mov
sarl
sub
imul
lcall
imul
leave
xor
sub
inc
int
std
int3
xchg
add
mov
push
sub
mov
daa
enter
ret
mov
pop
push
mov
iret
inc
mov
movsl
stos
xor
lret
jno
scas
lret
adc
std
jnp
scas
sub
adc
sub
xlat
xchg
int3
mov
popa
ja
lods
jno
ja
lret
mov
or
mov
out
xor
cwtl
push
dec
jb
jg
std
cmpsb
out
or
sub
stc
popa
in
push
pop
adc
in
cld
test
mov
lods
test
jno
dec
les
inc
fwait
xchg
lret
sbb
inc
fdivs
jecxz
mov
inc
mov
xchg
fwait
fs
jno
jle
leave
loop
jno
cmp
addr16
stos
lea
cmovns
jge
aad
adc
idivb
dec
in
das
sbb
dec
les
call
lret
pop
in
rclb
stc
mov
or
cmp
addl
dec
push
jbe
idivl
daa
push
stos
lret
pop
das
shlb
xor
or
pop
sahf
cmp
stc
sub
dec
sti
shll
xlat
pop
test
mov
bound
lahf
shlb
pop
dec
inc
xchg
sbb
lea
and
sbb
dec
shrb
inc
mov
divb
jae
dec
jp
cld
mov
int3
mov
data16
sub
adc
cmp
sub
xor
int3
mov
sub
pop
jnp
sar
loop
pop
test
push
fnstenv
or
imull
add
xor
adc
jns
in
clc
adc
mov
cmp
dec
or
shrd
xchg
jle
sahf
ja
dec
cs
jecxz
pop
neg
push
mov
das
mov
test
mov
xchg
fcompl
or
xlat
pop
inc
pusha
cmp
cmp
and
int3
lods
mov
mov
out
mov
mov
or
vmulpd
out
add
in
int
xchg
mov
std
mov
hlt
shlb
orb
test
sub
lock
test
cmp
ss
xor
rorb
mov
imul
leave
notb
aas
adc
or
cmpsl
std
repnz
les
inc
cs
sbb
inc
mov
jbe
jno
jb
add
sbb
shll
inc
jg
push
adc
cmp
ret
ss
cwtl
test
push
mov
loop
xchg
sti
mov
fwait
aas
jne
sub
aaa
push
ffree
arpl
sub
adc
add
and
fadds
icebp
add
add
sub
enter
mov
dec
cmp
stos
cmp
add
push
outsb
cld
aas
out
pop
add
jg
xchg
dec
enter
arpl
xchg
mov
sub
and
repnz
and
sub
inc
fildl
loope
and
add
cs
test
je
int
adc
push
out
lcall
pop
adc
jo
imul
jg
inc
adc
mov
idivb
push
test
push
inc
sbb
mov
dec
mov
xchg
lock
gs
aaa
jmp
mov
out
adc
lds
fs
xor
adc
adcb
fwait
mov
dec
pop
jno
jmp
fwait
jb
pop
les
push
sub
jg
lods
xor
cmpsl
push
and
cmp
mov
xor
push
fwait
cld
icebp
sbb
rcrl
imul
mov
insb
sahf
xchg
push
sub
cmp
hlt
lds
inc
fwait
mov
jae
push
in
jg
mov
pushf
push
lods
xor
js
fdivs
jg
lea
sub
int3
mov
loop
push
mov
and
and
pusha
nop
mov
dec
lods
lock
dec
and
dec
dec
mov
or
add
unpckhps
mov
pusha
pushf
inc
mov
aad
mov
mov
insl
mov
lock
sub
pop
sbbb
outsl
mov
dec
jno
jo
or
dec
pop
cmp
push
aas
inc
les
inc
loope
lahf
imul
xchg
adc
lock
lods
pop
es
fwait
mov
sub
aam
mov
ret
cmp
adc
sti
mov
idivb
inc
and
inc
xchg
movsb
test
mov
inc
pop
push
in
pop
pop
push
cmp
dec
dec
mov
push
and
scas
nop
insl
inc
repz
adc
inc
lea
xchg
dec
movsb
mov
inc
mov
sub
jle
in
rolb
pop
pop
cmp
inc
aad
sub
pop
inc
mov
into
fisubs
and
inc
test
outsl
lods
lret
mov
pop
aaa
push
std
cld
inc
dec
test
pop
aas
divb
xor
sub
or
movsl
rclb
lahf
mov
or
xor
into
cmp
xchg
outsl
pushf
dec
adc
push
jecxz
dec
xchg
test
sti
jb
push
push
pop
xor
dec
movsl
cmp
test
jb
movsl
insb
xchg
aam
inc
mov
push
xchg
enter
icebp
sub
mov
leave
test
in
cld
jo
insb
jmp
dec
cmp
sbbl
xor
xor
lahf
pop
adc
ss
lods
fs
mov
adc
xor
push
inc
imul
negl
xor
xor
push
out
js
lock
push
sarb
xor
enter
ds
ret
jb
add
mov
es
mov
out
add
hlt
sarb
pop
mov
lret
jg
pop
cwtl
fmul
jg
insl
cmp
sub
xchg
mov
mov
movsl
insb
pop
mov
mov
mov
orb
repz
stos
inc
lret
out
call
cmp
add
xchg
sbb
daa
add
outsb
sbb
jmp
loopne
push
mov
test
test
xchg
inc
and
insl
mov
mov
cli
je
push
ljmp
xchg
cmp
into
std
mov
jo
test
push
mov
rclb
ss
push
repnz
sub
jecxz
clc
daa
popf
aas
cli
in
jg
jb
push
mov
mov
mov
lahf
jle
dec
into
lret
js
mov
call
adc
ficoms
pop
pop
xchg
scas
cmp
lods
mov
rcl
inc
inc
aam
pop
xchg
add
aad
inc
es
push
lcall
mov
xor
xchg
enter
js
adc
inc
stos
push
addr16
test
mov
adc
xchg
jp
dec
sub
lret
pop
aas
sbb
aam
shr
add
lret
jecxz
mov
into
cltd
mov
cmp
mov
sub
in
jb
dec
sahf
push
adc
movsb
jo
push
cmp
es
mov
ret
xor
pop
lcall
push
or
push
daa
xchg
cld
push
mov
push
aas
push
lret
and
outsl
jns
clc
xlat
shr
mov
pop
lods
add
jl
push
pop
dec
dec
and
iret
mov
pop
or
push
cld
loope
mov
mov
popf
push
cmp
shl
dec
mov
cmp
xchg
je
pop
inc
mov
aaa
outsl
fadds
xor
and
insl
fwait
addr16
jg
dec
adcl
rep
fldcw
test
ja
lods
adc
xchg
test
aaa
inc
clc
cmp
add
push
push
cmp
mov
adc
xor
inc
fistpl
pop
push
test
ret
andb
ds
xor
mov
mov
sbb
mov
and
mov
inc
mov
sbb
adc
imul
aaa
xor
cli
mov
mov
add
ljmp
clc
cmp
pop
cmpsl
push
ja
hlt
lock
cmp
mov
mov
add
in
pop
cli
out
out
lock
fldt
sahf
sahf
bnd
mov
js
arpl
mov
nop
dec
xor
pop
jle
addr16
das
jb
dec
xor
scas
dec
sbb
dec
pop
inc
jo
pop
stos
inc
outsl
xor
xchg
mov
add
jb
pusha
lds
mov
cmp
lock
ds
cmp
jne
and
jbe
fxch
data16
ja
push
sub
xor
xor
xor
cmp
inc
push
repnz
mov
add
mov
mov
push
jno
sub
das
jbe
or
fcomps
xchg
xchg
pop
aad
or
imul
dec
inc
dec
scas
cmc
jne
inc
jle
lcall
adc
fidivrs
jp
push
pop
in
mov
lea
mov
pusha
testb
scas
fs
loop
fcom
ss
inc
fld
insb
inc
fidivl
jo
adc
call
ret
push
movsb
inc
in
cld
xchg
mov
nop
xor
imul
fnstsw
mov
mov
ljmp
jp
testb
mov
mov
inc
shlb
aam
sbb
push
loopne
push
in
pop
call
jl
lock
js
in
sub
mov
test
insb
mov
ret
mov
je
data16
imul
cmp
xchg
mov
push
mov
outsb
lods
in
aaa
imul
insb
les
jbe
cmc
xchg
stos
pusha
dec
lcall
adc
popa
out
adc
push
sbb
mov
mov
sbb
add
lock
fbld
jecxz
sub
hlt
lock
mov
mov
mov
lds
push
xor
push
jae
push
mov
iret
mov
negb
mov
aad
sub
cli
or
js
sub
cmpsl
mov
lods
add
xchg
pop
xchg
sbb
in
xchg
push
scas
xor
fdivrp
movsb
sub
in
jecxz
mov
cmc
cmp
rcll
mov
sbb
and
mov
push
icebp
insl
out
and
cmp
or
lret
push
mov
jge
and
loopne
dec
jae
jbe
fildl
sub
loopne
push
mov
mov
mov
add
mov
iret
mov
mov
mov
or
jg
nop
fsub
pop
jg
jg
sahf
orb
scas
pop
xlat
in
nop
je
loopne
outsl
pop
jp
int
pop
addl
pusha
mov
push
popa
outsl
jb
fwait
fs
aas
mov
mov
sbb
stos
push
gs
in
fildll
xor
mov
inc
je
dec
or
mov
mov
insb
stos
das
and
mov
mov
outsb
movswl
cmp
hlt
addr16
das
js
pusha
push
add
jp
pop
dec
loope
lods
ljmp
jecxz
xchg
dec
xchg
add
test
mov
add
sbb
sub
jae
dec
lock
xchg
das
rolb
push
push
xor
adc
push
imul
loopne
je
pop
enter
mov
testl
inc
aam
jl
ret
pop
out
jbe
cmp
cs
mov
cmp
ljmp
repz
ss
leave
mov
aaa
andl
inc
push
addr16
xchg
aam
cmp
jne
cmp
mov
fs
gs
push
insl
sti
cmp
lret
pop
gs
mov
ret
daa
push
pop
dec
daa
pop
daa
inc
out
push
cmovae
pop
push
aas
xchg
mov
rcr
sub
stos
test
push
and
and
aam
cmp
cmpsl
xchg
jmp
aaa
sub
inc
xchg
fcompl
inc
movsl
or
dec
mov
cmp
jno
cwtl
inc
push
lea
loop
jne
iret
orl
cmp
faddl
sahf
cmpsl
call
movsl
fidivrs
aad
pop
fs
and
ss
xchg
or
je
lret
sub
dec
fs
lock
je
push
mov
popf
sbb
out
aaa
scas
and
mov
or
arpl
mov
loope
mov
je
int
mov
ret
xchg
push
dec
repz
jge
pop
push
stc
mov
and
test
push
jg
sbb
jp
inc
and
rorb
pop
test
ds
jbe
jae
je
inc
lods
daa
dec
mov
outsb
add
lods
bound
aad
sti
das
sbb
adc
jge
mov
fistpl
sbb
je
mov
imull
xlat
in
sub
pushf
jne
and
and
adc
out
lock
lret
adc
jecxz
test
dec
xchg
xor
jbe
jo
xor
jno
mov
ret
jae
andl
dec
mov
mov
or
xchg
cmp
xor
je
pop
enter
xchg
mov
rclb
cmp
push
enter
test
popf
jp
insb
adcb
test
jl
xchg
mov
movsb
mov
lods
enter
sbb
scas
adc
fadd
xorl
in
sbb
popa
inc
adc
jp
dec
push
cmpl
adc
lods
mov
or
fs
pop
mov
jno
pop
mov
loopne
std
pop
and
mov
and
sub
insb
pop
xchg
popf
dec
sub
test
fldl
orl
mov
out
lods
mov
cmc
ffreep
out
pop
jae
pop
mov
add
out
and
das
pop
sbb
dec
xchg
lahf
mov
cmp
outsb
or
iret
cld
lds
jmp
int
adc
imul
push
mov
daa
jb
addr16
fdivrl
jle
rcl
pop
in
rorb
fistl
mov
sub
mov
stos
ror
cli
outsb
pop
jbe
test
popa
cmpsl
sbb
mov
stos
ficomps
adc
shlb
jno
xor
mov
test
sbb
jecxz
push
adc
jne
loop
jp
and
or
lock
out
adc
stos
ljmp
je
les
mov
rcrl
cmp
movsb
jo
or
lock
and
sbb
mov
fwait
mov
pusha
rorl
stos
out
inc
and
inc
pop
icebp
inc
jno
das
mov
mov
jle
push
sub
xor
rcrb
pop
xchg
push
xchg
adc
xor
xor
xor
add
jecxz
sbb
cmp
add
out
lock
xlat
inc
ss
ficoms
outsb
cmp
mov
jae
dec
lret
mov
jb
mov
jl
pushf
adc
cmp
pop
mov
aas
repz
or
jno
pop
jbe
inc
mov
add
mov
pop
push
sahf
mov
xchg
ret
jo
xor
sbb
pop
fdivl
push
xor
sbb
push
int3
mov
ds
cmp
pop
push
cmp
lock
lahf
dec
in
push
or
mov
out
adc
aaa
in
cs
je
test
adc
mov
hlt
pop
fwait
lock
nop
xor
jle
pop
lea
out
pop
cwtl
aaa
arpl
push
push
push
adc
aaa
cmp
fwait
lock
cvtps2pi
test
inc
mov
mov
mov
xlat
lret
push
xor
pop
xchg
xor
nop
rclb
loope
sti
lock
push
sbb
add
and
pop
push
xchg
cmpsb
outsb
fwait
push
outsl
inc
aas
div
xchg
cmpb
dec
sbb
test
ret
lock
push
mov
jl
lret
pushf
cmpsl
add
mov
test
test
rolb
xchg
cmc
ret
mov
jl
add
pop
imul
xorl
mov
xchg
cmp
call
jnp
and
and
mov
mov
lock
cmpsb
roll
data16
fldenv
mov
push
gs
repz
sub
aad
xor
dec
or
sub
gs
aaa
pop
mov
push
loop
cmp
mov
xchg
hlt
das
adc
cmp
icebp
adc
inc
rorl
xor
stos
sahf
inc
lds
mov
mov
mov
jb
mov
stos
movsl
iret
movsb
mov
sbb
cmpsl
add
or
adc
xor
sbb
xchg
cld
inc
xchg
push
sbb
jp
rolb
dec
push
or
hlt
and
icebp
push
pop
adc
sub
mov
mov
je
xchg
inc
cmp
adc
xor
push
into
adc
push
je
sub
mov
mov
in
hlt
xor
mov
push
or
adc
xor
repz
push
into
mov
inc
loopne
outsl
dec
cmp
popa
pop
add
mov
push
stos
lea
jg
push
dec
cmp
dec
dec
and
lock
loope
or
daa
ret
sti
fdivl
pop
ret
inc
pop
dec
inc
mov
pushf
push
xor
mov
shlb
jbe
orb
xor
jno
je
pop
jge
jns
out
pop
pop
sub
xchg
push
pop
aaa
insl
jge
inc
aas
mov
xorl
mov
repz
sbb
mov
mov
aaa
mov
add
dec
lret
pushf
rcrb
sub
mov
mov
xchg
jp
jecxz
lods
mov
loop
fisttpl
sub
test
addl
jecxz
push
loopne
call
mov
fwait
xchg
pop
mov
scas
mov
dec
and
in
fnstcw
das
cmp
mov
adc
xor
cmpsb
pop
jg
popa
mull
xor
xor
inc
pop
xor
mov
xor
addr16
inc
jo
adc
push
das
inc
and
popf
mov
pop
hlt
pop
and
pop
and
mov
add
sub
mov
push
sub
shrl
mov
movsb
pusha
movsb
cwtl
test
ds
mov
fimuls
cmp
mov
push
lods
jo
xor
lods
jns
sub
sbb
test
cltd
xor
sub
mov
ficoml
adc
dec
dec
sub
xchg
addr16
testl
pop
push
mov
jp
xchg
arpl
push
and
mov
xchg
fsubrl
cmp
daa
sub
leave
xchg
pop
and
test
icebp
mov
das
inc
nop
stos
dec
lret
inc
jmp
lods
inc
mov
adc
adc
js
outsl
pushf
lods
cs
cld
xchg
insb
mov
xchg
inc
mov
rorb
push
mov
mov
hlt
inc
xorb
js
ret
mov
xlat
in
nop
lock
sub
and
jle
imulb
ret
mov
cmp
aaa
mov
push
mov
test
outsl
gs
cs
mov
shlb
call
jecxz
mov
xor
mov
aas
xchg
pusha
xchg
stos
pop
push
pop
add
shl
cld
les
and
jecxz
sbb
rclb
dec
cwtl
lahf
fsubr
call
das
push
out
xor
lock
scas
push
leave
pop
mov
nop
or
sub
xor
nop
push
mov
push
jb
pusha
inc
adc
inc
mov
xor
cmp
pusha
inc
and
dec
int3
dec
cmp
dec
imulb
xor
pop
ds
mov
lods
arpl
repnz
mov
lcall
jno
push
pop
xchg
rcrl
int
frstor
cmp
mov
fdivrl
inc
xor
push
sarl
scas
dec
rcll
mov
nop
mov
loopne
push
test
mov
mov
js
sub
jbe
fistpll
push
rcrl
pop
icebp
inc
push
mov
lret
mov
jne
vxorpd
sub
adc
sbb
dec
mov
popf
ds
inc
and
mov
mov
sbb
mov
ret
clc
jo
lock
push
out
int
cmp
jp
mov
fstpl
push
aas
push
out
and
jecxz
sti
cltd
push
mov
ret
je
add
jae
xchg
lods
mov
lods
repz
les
insl
or
adc
push
fs
xchg
enter
or
or
mov
jg
sbb
loopne
rcl
push
mov
adc
test
lock
stos
adc
pushf
test
or
adc
mov
mov
add
push
js
movsl
inc
push
jl
xor
sub
inc
das
cmp
lods
inc
addl
inc
cmp
jge
hlt
sahf
out
pop
mov
push
addr16
jg
push
shlb
push
xor
xor
mov
mov
mov
inc
out
push
js
ds
in
pop
pushf
stos
shrb
ror
sub
push
imul
adc
cmp
xchg
je
push
inc
addr16
inc
inc
pushf
jcxz
outsb
jbe
dec
pop
sbb
icebp
jle
sub
mov
xor
icebp
mov
mov
cmp
mov
scas
repz
pop
jl
jo
mov
mov
and
xor
sub
hlt
les
outsb
push
into
cs
xchg
repnz
mov
pop
je
stos
jl
push
jge
sub
in
je
mov
popa
adc
out
mov
roll
in
xor
mov
mov
dec
sbb
sbb
int
jb
test
dec
dec
aas
mov
cmp
dec
into
imul
pop
in
pop
ja
es
ja
mov
mov
dec
jns,pt
pop
mov
mov
adc
jp
mov
loope
je
mov
pop
pop
mov
jg
pop
cld
mov
mov
push
jmp
lock
insl
test
pop
cltd
in
loopne
insb
outsb
test
ja
fildl
push
sub
mov
addl
pusha
jle
ret
cmpsl
dec
add
mov
scas
ret
out
lret
and
subb
xor
jge
jns
adc
jb
outsl
fiaddl
addr16
gs
jge
adcl
std
dec
mov
test
pushf
fcmovnb
out
out
jg
xor
clc
mov
mov
insb
je
pop
cmp
fucomip
lds
adc
js
jnp
pop
sbb
jle
jns
push
jb
shrl
divl
hlt
ljmp
nop
imul
ficomps
push
or
cmp
jge
sub
popa
imul
jg
repz
jecxz
cmp
mov
out
add
mov
mov
aam
mov
mov
and
pop
in
sub
mov
mov
mov
imul
mov
gs
out
inc
subb
fisubs
sub
fs
gs
sbb
cmp
lret
mov
in
jb
test
and
jae
ret
jp
dec
sbb
iret
std
inc
mov
mov
fists
mov
bound
pop
dec
flds
aad
test
repnz
mov
mov
sub
dec
sub
adcl
ss
cmp
insb
jne
jl
push
xchg
xchg
xchg
inc
sub
jl
push
fs
add
lahf
pop
in
inc
fidivrs
mov
mulb
fcmovnb
pop
dec
iret
xor
xor
js
aas
movsb
imul
shlb
xchg
and
test
jp
push
xlat
nop
scas
jge
loopne
sub
jle
jge
xor
fwait
insb
into
and
add
mov
xor
imul
dec
sub
xor
pop
push
mov
jns
jb
push
fwait
inc
sub
jae
mov
push
mov
jbe
and
sbb
rcll
popf
andl
ds
fwait
mov
fcoml
cmpsl
test
mov
fcompl
push
mov
push
lcall
mov
daa
fcomp
mov
adcl
xchg
and
xchg
stos
mov
cmp
gs
xor
xor
inc
inc
sbb
mov
push
sub
dec
loop
imul
xor
addr16
iret
rcrb
mov
or
lahf
sub
nop
inc
aas
bound
or
stos
stos
jecxz
roll
ret
cmp
adc
mov
inc
mov
aad
insl
dec
pop
xchg
inc
inc
push
je
push
fcompl
push
push
dec
mov
jg,pt
out
cs
das
sub
aaa
addb
jbe
mov
inc
fldcw
loopne
push
inc
push
fs
ret
addr16
pop
mov
cmp
pop
sub
cmp
mov
inc
sarl
mov
cmp
out
push
addr16
or
jnp
jg
fsubrs
and
mov
xchg
cmp
push
push
mov
fsubl
dec
xor
icebp
mov
mov
cli
outsl
test
inc
mov
rolb
std
cld
insl
rclb
popf
subl
popf
pushf
fidivrl
mov
in
call
jne
jb
sbb
push
aaa
jo
jl
mov
int
stos
js
test
sbb
cmp
xor
ss
pop
mov
mov
notb
and
scas
dec
mov
jo
adc
ss
pop
jne
imul
cmp
mov
das
ss
insl
pusha
pop
inc
and
adc
jp
out
arpl
shlb
sbb
mov
jnp
cmp
fnstcw
daa
test
int
cs
dec
xor
mov
mov
bnd
mov
repz
jge
xor
insb
outsl
popf
hlt
pop
mov
push
mov
mov
ss
xor
popf
sub
addr16
pop
out
addl
idiv
sarb
inc
xor
cmpsb
xor
cmp
mov
xchg
clc
sub
add
mov
dec
and
pop
in
movsb
pop
cmp
sarb
loopne
daa
hlt
inc
gs
stos
push
pop
xor
fldenv
push
mov
in
movsl
bound
aaa
push
std
sub
aas
add
scas
repnz
mov
cmp
pop
mov
outsb
inc
into
nop
addr16
push
jg
data16
dec
in
adc
inc
inc
jl,pn
jno
inc
mov
rcrl
js
je
ds
xor
idiv
lods
mov
lods
pop
push
shrl
movsl
hlt
imul
sahf
push
pop
mov
pop
mov
sub
fnstsw
das
mov
cmp
mov
aaa
test
aaa
xchg
sbb
sub
sahf
sbb
mov
dec
ret
and
jge
and
push
outsb
scas
orl
push
xchg
pop
test
inc
movsb
enter
cmc
cltd
inc
pop
jecxz
xor
or
sub
push
popa
xorb
loop
faddl
mov
inc
mov
insb
hlt
test
outsb
mov
jmp
xor
hlt
std
scas
ss
ret
jg
xchg
sbbl
inc
les
repnz
cld
lret
sub
lods
mov
jl
xchg
push
es
test
inc
mov
add
hlt
pop
mov
inc
loop
jns
pusha
sbb
mov
pushf
jg
xchg
pop
pusha
cmp
xor
pop
shr
add
pop
cmp
push
jne
std
lahf
mov
mov
and
aad
sub
mov
scas
jmp
xchg
les
int3
std
aad
scas
shrb
fdivrs
push
mov
adc
shlb
mov
sbb
mov
or
dec
inc
adc
movsl
jne
sbb
jecxz
fmulp
cmp
aaa
push
mov
mov
add
mov
ja
aas
repz
pop
lahf
xor
stc
pop
dec
mov
and
mov
inc
in
and
outsl
xor
std
mov
and
xchg
pop
pop
sahf
das
sub
mov
cs
add
dec
push
movsb
arpl
mov
outsl
dec
pop
push
push
nop
inc
dec
jmp
jg
nop
inc
fsubrl
xor
and
push
mov
adc
push
mov
icebp
cmp
cld
push
cmp
xchg
pop
test
hlt
sahf
test
in
pop
xor
dec
add
pop
or
cmp
mov
cltd
xorb
test
xor
mov
cmpb
out
sbb
ljmp
adc
test
sbb
repnz
cmp
adc
inc
jbe
adc
or
mov
gs
mov
icebp
mov
mov
cld
imul
lods
cs
xor
push
mov
out
out
adc
andl
dec
mov
insb
mov
mov
xor
aam
loopne
push
cs
push
outsl
dec
push
xor
add
lds
mov
and
sub
sarb
mov
into
mov
jbe
dec
mov
mov
mov
dec
dec
notb
subb
loop
imul
xchg
inc
inc
dec
stos
xchg
es
push
mov
sub
outsb
fwait
mov
ds
cvtps2pi
out
insl
sub
push
sub
dec
mov
mov
js
mov
cli
push
push
sahf
jl
test
ja
pop
dec
or
aas
dec
sbb
push
mov
and
jnp
jbe
mov
and
xor
daa
pop
rcr
imul
inc
mov
adc
sub
aas
in
inc
arpl
and
imul
cmpl
dec
int
out
push
es
mov
and
push
mov
jp
test
addr16
aam
nop
sbb
inc
adc
inc
push
outsb
or
adc
lock
mov
insb
ret
adc
daa
inc
push
and
sbb
js
xor
mull
inc
pop
jp
mov
pop
add
jge
xor
gs
neg
xorl
das
push
outsb
cmp
notl
jbe
scas
inc
or
scas
stos
pop
pop
add
xor
mov
sbb
test
or
xchg
push
jge
push
push
mov
push
add
sub
mov
int
push
bound
mov
rolb
cli
mov
fbstp
scas
pop
mov
mov
and
mov
scas
pop
dec
movb
and
pop
clc
cmp
sbb
cmpsl
es
nop
and
adc
outsb
shlb
dec
adc
and
inc
popa
push
pop
inc
push
add
filds
or
cmp
mov
push
mov
jns
data16
rcrl
dec
pop
or
sarl
inc
adc
mov
xchg
loopne
inc
dec
pop
inc
and
push
cli
rol
jge
popf
adc
fldenv
nop
sbb
adc
cmpl
addl
jae
mov
push
rcr
mov
stc
mov
gs
aas
lahf
idiv
out
jbe
scas
xchg
les
or
inc
test
cs
cmc
mov
insb
and
mov
inc
sub
incl
loop
lea
pop
adc
fsubrs
pop
mov
loope
inc
xchg
les
sbb
mov
ja
shlb
fwait
popf
dec
cmp
js
push
or
data16
mov
popf
jo
sbb
ror
sahf
jno
loopne
xchg
sahf
mov
push
js
repz
out
repz
add
sbb
cs
adc
jb
ds
out
pushf
push
jbe
or
push
xor
mov
push
sbb
rclb
sub
push
adc
sbb
lods
dec
add
mov
mov
mov
cmp
jecxz
xchg
sub
xor
cmp
sbbb
pop
pop
add
inc
gs
stos
shrb
pop
nop
push
imul
dec
push
pusha
adc
dec
das
push
cwtl
jge
add
jl
pop
aaa
scas
xchg
cltd
jae
jo
and
mov
xor
dec
mov
fdivl
sbb
pop
jg
in
and
inc
jbe
divb
adc
and
and
insl
adc
adc
adc
mov
dec
arpl
xchg
dec
mov
mov
push
push
sarb
int
push
push
inc
sub
xor
fwait
pop
or
xor
cmp
push
inc
insb
hlt
jbe
sti
xor
push
adc
xor
adcl
subb
ds
jecxz
push
jg
pushf
insl
cmp
imul
push
mov
sub
add
mov
push
lods
inc
imul
dec
sub
dec
cld
and
push
mov
into
test
and
xchg
sub
test
fs
gs
push
jo
dec
int
xor
bound
adc
cltd
sbb
into
push
cmc
push
xor
scas
push
idivl
dec
jmp
fwait
mov
mov
fnsave
lods
jns
cmc
out
lcall
mov
push
sahf
and
aaa
inc
scas
xchg
dec
xchg
mov
xor
inc
jae
jbe
popl
outsl
sbb
lahf
inc
das
mov
xor
dec
jp
mov
adc
mov
cmpsb
pop
cmp
sbb
dec
dec
mov
push
cmp
mov
inc
pop
push
jnp
sub
push
push
dec
mov
jnp
mov
bound
lea
les
xchg
xchg
insb
gs
push
insb
inc
or
jl
xchg
xor
das
ljmp
insb
mov
sub
inc
cmp
popa
int3
jg
fxch
mov
arpl
xor
imul
xchg
outsb
pop
cmc
jl
mov
cmp
dec
cmp
out
dec
mov
jb
fcompl
jae
hlt
pop
jl
bound
sub
dec
sbb
leave
bound
nop
call
pop
imul
dec
outsl
pop
dec
sbb
lock
pop
dec
sbb
pop
cmp
pop
jg
dec
dec
jnp
adc
or
fmul
int3
mov
pop
bound
push
dec
dec
cmp
aad
adcb
loope
mov
sahf
ss
mov
mov
loope
mov
jge
xchg
nop
jbe
cmp
gs
outsb
dec
out
aad
shrb
mov
add
dec
cmp
jl
jb
adc
push
enter
and
mov
ss
jge
inc
cli
cld
fldcw
cmp
pop
xor
in
daa
pop
xchg
shl
sub
or
sbb
push
loopne
mov
cmp
mov
and
push
or
outsb
and
pop
iret
cs
shll
cmp
fwait
sbb
and
ds
dec
loop
pop
mov
and
cwtl
insb
xchg
into
hlt
movsb
shr
pusha
cmc
push
repz
jne
int3
es
push
xorl
mov
sub
dec
push
jnp
push
mov
ficomps
sub
rol
and
call
add
in
es
sbb
sbb
jp
inc
jnp
sbb
stos
lods
mov
es
push
scas
cmp
pop
lcall
xchg
popl
or
push
inc
andl
dec
mov
push
int3
push
mov
push
add
scas
sbb
movl
cmp
dec
pop
pop
push
mov
cmp
mov
jb
pop
sahf
jno
stos
sbb
mov
xchg
xor
test
mov
sbb
orb
or
xor
dec
icebp
or
add
fiadds
xchg
inc
sbb
ljmp
fcom
lock
sbb
aam
mov
inc
lahf
mov
xor
inc
xchg
mov
hlt
inc
gs
int
lods
dec
dec
insb
cmp
lahf
xchg
repz
inc
adc
lods
cs
xor
notl
push
xor
cmp
jb
hlt
xor
out
mov
fs
lcall
jge
movsb
outsl
jp
in
outsb
sub
dec
test
movsb
mov
imul
and
cld
cmp
fs
into
aaa
hlt
addr16
lods
sbb
lods
ficoml
inc
xor
call
sti
mov
arpl
mov
das
xorl
test
fimuls
mov
cs
dec
dec
jno
cmpl
insl
stos
nop
jle
inc
mov
cmpsb
inc
mov
in
pop
insl
cmp
mov
jp
lcall
out
cli
mov
dec
ffree
push
rcrb
cmpsb
in
jp
out
dec
mov
lcall
inc
adc
pop
xor
mov
xor
push
data16
pop
pop
mov
jg
sub
xchg
loope
into
movsb
xchg
stos
fs
xchg
dec
notb
adc
repz
lods
sub
mov
mov
arpl
pop
pusha
xor
adcl
sbb
decb
and
mov
inc
ljmp
jg
pop
push
xor
sub
lods
mov
jg
notb
adc
mov
addb
gs
pop
inc
mull
bound
addr16
mov
adc
push
aaa
orb
pop
fldenv
cmp
inc
cld
pushf
dec
pop
sbb
adcb
repnz
xchg
hlt
mov
in
insl
outsb
jb
xchg
pop
lret
xchg
pop
push
dec
js
xor
bound
inc
shl
rcrb
nop
inc
cmc
cmpsl
rclb
scas
fnsave
cmp
push
mov
shlb
repnz
mov
cmp
sar
test
jle
jo
or
lods
jp
sbb
in
loop
push
sub
or
jb
dec
add
daa
cs
cmp
jg
scas
jp
xorl
mov
sub
test
movsb
fistpll
mov
mov
jb
insl
mov
mov
cmp
pushl
pop
shrb
shll
je
inc
mov
in
xchg
dec
push
leave
add
lds
xor
xor
mov
mov
xor
mov
cmp
aam
jb
lock
sbb
lret
insb
mov
mov
mov
scas
sbb
pop
cmp
mov
test
sub
xchg
lcall
mov
xchg
lahf
add
jbe
ljmp
sub
pop
fmuls
sub
xchg
movsb
mov
mov
mov
dec
mov
sbb
lahf
loope
in
mov
cmp
adc
sbb
cmp
mov
mov
test
pop
cmpsl
aas
push
scas
repz
fsubrl
test
nop
and
lock
mov
jae
aaa
mov
dec
bound
cmp
loope
xchg
pop
mov
mov
pusha
mov
outsl
mov
repz
mov
aad
in
stos
xchg
mov
mov
jp
dec
jl
mov
xor
sub
inc
das
mov
test
popa
or
insb
mov
aam
add
das
add
or
les
xchg
adc
xchg
pop
loopne
mov
ret
mov
mov
movsb
mov
xor
les
int3
and
in
call
hlt
ds
dec
push
cld
xor
repz
sbbl
and
xor
cmp
ja
cmp
xchg
sbbb
dec
dec
push
out
mov
dec
repz
jbe
cs
add
dec
cmp
xor
mov
mov
push
cmp
mov
cld
pop
jb
jnp
sub
scas
push
outsb
das
js
out
and
clc
jns
jmp
icebp
lock
dec
int3
sub
mov
mov
mov
add
lods
outsb
lret
jg
pushf
pop
pop
inc
lea
loop
ds
sub
mov
fidivl
adc
push
and
rorb
add
jmp
pop
shlb
hlt
dec
sbb
jmp
in
insb
mov
hlt
dec
test
push
mov
aam
bound
pop
adc
or
pop
mov
mov
lods
pop
mov
sub
xchg
fmuls
cmpsb
andb
mov
pop
fwait
repz
cmp
lods
xlat
ds
push
mov
fisubl
sub
dec
mov
xor
pop
add
lods
aas
dec
and
xor
loopne
mov
push
mov
mov
push
add
js
mov
pop
lods
sarb
imul
test
add
inc
xchg
out
out
fildl
aaa
scas
ljmp
test
dec
ds
je
adc
xor
loope
ret
fdivrs
aas
hlt
sub
aaa
dec
faddl
fsubrl
jecxz
push
mov
data16
mov
xor
in
ret
adc
xor
push
pop
jnp
dec
push
hlt
test
aam
xchg
insb
rorl
mov
aaa
xchg
inc
repz
cmc
adc
and
fisttpl
popa
push
push
ja
add
xor
sub
pop
pop
out
mov
inc
pop
decb
ds
sub
scas
ret
cmp
out
je
and
mov
das
mov
inc
sub
jle
cmc
pop
inc
cmp
push
cmp
pop
gs
xor
pop
inc
jae
pop
nop
sub
mov
xchg
adc
shll
aad
mov
inc
ret
inc
arpl
push
cld
xor
mov
das
xor
pop
xchg
test
xchg
fiaddl
std
popa
test
psrlw
mov
xorl
dec
ret
push
stos
adc
mov
or
cli
sbb
mov
ljmp
adc
and
sahf
inc
adc
loope
ficomps
imul
xor
sti
cmp
inc
add
std
in
in
inc
inc
ljmp
push
and
pusha
dec
stc
and
sbb
les
cmp
and
sbb
push
in
lods
adc
cmp
popa
sti
xor
aad
cmp
or
mov
loope
add
hlt
ja
inc
mov
xor
cmp
mov
imul
inc
loopne
ficoms
adc
and
das
out
cmp
xor
xor
fiaddl
dec
jne
ret
inc
and
into
cmp
adc
xchg
adc
or
sbb
jae
sub
sub
sbb
xchg
sub
out
imul
sbb
dec
jbe
sbb
adc
or
fwait
loopne
inc
ds
in
mov
inc
jb
push
add
shll
cmp
adc
leave
shrl
push
and
out
sbb
push
cmp
iret
sbb
shl
aaa
sbb
add
xor
mov
jecxz
loop
das
add
shl
push
dec
or
adc
fwait
adc
xchg
nop
mov
jge
mov
cld
int
mov
sbb
inc
sbb
cmp
mov
sub
jne
mov
and
fidivrs
inc
shrb
hlt
sbb
mov
adc
cwtl
das
inc
ds
movsb
sub
rorl
push
jno
aas
or
clc
xchg
fidivrl
sub
sbb
cmpsb
cmp
mov
sub
add
xchg
add
mov
xor
inc
and
xor
cmc
popa
xor
inc
adc
xor
cmp
int3
add
cs
shl
iret
inc
enter
dec
and
xchg
adc
xchg
popf
jae
dec
clc
ja
jmp
or
insb
pop
xchg
es
pop
add
push
scas
js
dec
scas
xor
mov
add
jl
stos
in
lods
mov
aas
sub
sbb
mov
push
fidivrs
fnsave
xor
sti
cmp
mov
outsl
add
push
inc
sbb
aaa
xlat
lea
les
mov
pop
cmp
adc
cmpsb
xor
and
dec
hlt
sub
popa
dec
cmpsl
fdiv
mov
shlb
xorl
sub
pop
fs
jl
out
aad
loop
pop
bound
movsb
fstl
dec
push
out
inc
push
cwtl
xor
cmp
rcrl
adc
xor
mov
xchg
inc
jl
dec
cld
mov
cmp
cmpb
lret
int3
icebp
pop
cmc
mov
cld
mov
xchg
flds
xchg
mov
mov
test
pop
hlt
pop
cmp
or
aam
sahf
and
mov
or
lds
and
lock
add
dec
mov
sbb
jb
lock
dec
push
xor
pop
mov
notb
jle
std
xor
testl
icebp
mov
test
adc
push
sbb
aad
adc
orb
leave
xchg
sbb
jl
das
fbstp
inc
add
or
pop
sahf
push
pop
xchg
jmp
movsl
mov
ja
in
pop
loopne,pt
sbb
pushf
xor
out
lret
push
push
or
mov
int3
inc
adc
mov
push
ja
ror
sti
and
js
insl
jp
lea
cmp
xor
pushf
test
ret
push
xlat
rcrb
in
mov
pop
inc
xor
push
and
fnsave
dec
aaa
sub
dec
test
jb
lods
sarl
js
inc
sbb
push
iret
insb
inc
or
or
push
in
clc
mov
cmc
addl
insl
sbb
dec
inc
inc
imul
push
movsl
subb
push
jge
push
sbb
and
dec
pop
xor
add
fsubrl
cmp
cs
stos
xlat
xor
add
dec
sbb
mov
adc
pop
clc
insb
jl
aam
pop
insb
cmp
add
jo
ds
xor
mov
jl
ds
scas
xor
subl
movsb
sti
jno
push
xchg
inc
gs
dec
mov
sbb
lret
scas
int3
mov
stos
sahf
sarl
shr
adcl
jbe
mov
add
mov
and
adcb
push
xor
andb
sahf
lea
sti
dec
sbb
jle
fisttpl
adc
and
xor
ret
arpl
int3
or
jns
mov
data16
jno
les
push
shl
jns
or
lods
add
in
jne
addr16
push
sub
sbb
ljmp
in
lods
jae
dec
add
pushf
mov
out
out
pop
push
mov
sbbb
push
push
imulb
cmp
cmc
adc
mov
xlat
jne
push
sub
leave
cwtl
mov
inc
aaa
push
cld
fs
dec
fs
jle
xor
data16
xor
aaa
inc
subb
popl
rolb
jns
out
xorb
cmp
test
cmp
pop
push
ss
in
jl
inc
or
hlt
jg
insb
shrl
xlat
dec
push
sahf
mov
jne
inc
jnp
cmp
lcall
addr16
gs
popf
mov
mov
mov
jb
xchg
repnz
icebp
stos
ret
sub
dec
mov
je
mov
mov
push
mov
cmpsl
test
arpl
push
cld
add
fwait
dec
dec
and
sub
cmp
cmpb
sbb
pop
push
mov
mov
cld
xchg
shlb
inc
jne
mov
and
mov
in
in
dec
inc
rolb
and
cmp
sub
fnstsw
or
pop
aaa
or
inc
addr16
dec
adc
in
mov
mov
es
add
push
cli
mov
mov
mov
dec
aas
adc
push
xor
lods
stos
mov
movsb
ja
fwait
adc
test
cmpsl
jno
cld
scas
scas
test
stos
pop
scas
mov
lds
dec
out
sarb
insb
dec
cmp
push
fiaddl
dec
mov
jno
dec
push
mov
jl
popa
sub
pop
neg
and
sub
test
sub
addr16
add
insl
xor
sub
and
pop
movsb
fs
loopne
imul
lock
lods
or
add
push
xchg
movsb
clc
xchg
ret
cmp
cld
call
cld
arpl
cld
adc
adc
ret
jg
pop
inc
pusha
ss
icebp
popa
mov
in
mov
jp
sub
sbb
sub
outsl
cli
and
fsubp
in
fbld
dec
and
fstpt
sbb
arpl
mov
jae
imulb
fildl
incl
mov
and
inc
add
inc
dec
lock
lock
inc
xor
pop
add
out
pop
dec
js
lds
test
fiadds
dec
andl
xor
aas
jnp
push
xor
iret
aas
push
pushl
call
int3
xor
push
enter
aas
or
arpl
sub
outsl
lds
push
in
inc
mov
les
mov
mov
jb
mov
xchg
hlt
les
dec
repz
or
xchg
and
or
inc
jno
inc
iret
clc
ret
sub
sub
in
das
call
enter
sbb
mov
push
mov
jl
fimuls
cs
jge
das
adcl
mov
mov
hlt
xor
lods
je
insb
and
das
and
shrd
mov
bound
stos
mov
mov
lods
cmp
sbb
sub
or
out
xor
out
and
idiv
das
dec
lock
lea
mov
inc
lock
int3
test
pusha
stos
daa
and
int3
xchg
and
mov
sbb
icebp
sub
jg
dec
push
cmp
test
rorb
adc
les
pop
notl
lret
clc
into
test
aas
stos
sub
add
je
sub
loop
cmp
into
add
add
pushf
lea
jle
int3
cs
sub
xchg
sub
addb
cmp
sub
inc
xchg
xchg
pushf
and
xchg
adc
jle
repz
mov
loopne
lss
stc
call
mov
outsb
or
inc
push
cmp
insb
xorb
roll
sub
call
fistpl
movsl
sub
jle
arpl
popa
movsl
mov
xchg
sub
loop
ds
push
jnp
pusha
addl
cli
dec
sub
push
pop
mov
push
fisubrs
mov
sbb
leave
dec
lea
push
shll
ss
push
mov
sub
jp
outsl
xor
lds
test
ljmp
inc
inc
inc
mov
mov
cmpsb
cmp
aas
cmp
adc
inc
arpl
dec
imul
and
xchg
push
jg
leave
std
jo
mov
pop
scas
scas
mov
lret
xor
sbbb
das
push
pop
movsb
xchg
dec
mov
jl
lahf
imul
or
cmp
imul
aaa
mov
inc
subl
adc
sub
cmp
mov
jp
int
mov
iret
ja
aaa
mov
call
or
cmp
mov
sub
mov
call
adc
test
int3
jo
mov
inc
mov
aas
sub
jnp
sbb
gs
push
inc
jae
push
fistl
xchg
push
sub
pop
imul
sbb
dec
mov
jp
xor
push
nop
mov
sbb
jmp
adc
add
add
shrb
pop
xchg
daa
test
ss
ljmp
sbb
mov
mov
mov
scas
imul
popa
popa
sub
or
xchg
shrb
dec
sarl
stos
adc
iret
xchg
adc
sub
sbb
mov
xor
jl
ljmp
adcb
lods
xchg
jae
xor
out
inc
push
cli
jp
nop
repz
and
arpl
mov
pop
loope
cmp
mov
les
xor
xchg
js
inc
push
mov
pop
scas
rclb
cmp
sub
addr16
inc
xchg
mov
enter
xor
pop
xchg
push
push
sub
dec
pop
int3
xchg
hlt
lds
in
repnz
jp
fsts
sub
outsl
sbb
push
outsl
fdivl
dec
inc
or
arpl
mov
ds
dec
sbb
into
and
jmp
out
flds
in
dec
mov
adc
cwtl
xor
and
test
dec
cs
roll
inc
sub
adc
push
aaa
add
mov
mov
sti
cmp
movsl
dec
cmp
dec
inc
lock
cmpsb
movsb
jecxz
pop
xor
dec
lahf
push
dec
and
pop
rcl
rcl
aaa
lods
stos
cwtl
xchg
pop
inc
and
arpl
jle
push
popf
inc
dec
negl
mov
call
or
call
xor
cmp
or
in
sbb
es
mov
adc
xor
inc
orb
ret
and
movsl
pop
scas
jmp
stos
nop
inc
imul
sub
lods
das
xchg
xor
or
xchg
movsl
int3
int3
mov
mov
and
mov
push
sbb
sbb
inc
in
sbb
sub
repz
jl
pop
scas
push
push
xchg
test
push
jge
insl
adc
push
scas
add
sub
aas
xchg
sub
add
and
and
xor
cmpsl
cltd
cld
test
inc
loopne
stc
inc
pop
jns
les
adc
adc
pop
mov
and
leave
js
sbb
jno
sub
cs
ds
xor
out
fnstsw
lcall
lcall
xchg
push
sbb
push
push
adc
lret
mov
sarl
cmp
pop
lods
int3
lea
pop
outsl
mov
pushf
dec
in
dec
mov
dec
int
pop
mov
sub
je
cmp
hlt
mov
dec
push
iret
cmp
les
add
aad
jne
pop
outsl
cmpsl
adc
xchg
mov
ljmp
fisttpl
arpl
sub
arpl
xchg
ds
and
fstpt
adc
cs
xorb
enter
fisttpll
pop
cs
xor
aaa
cltd
push
ss
pop
pop
inc
test
add
mov
sub
mov
int
jbe
xor
adc
inc
into
adc
pop
fsincos
hlt
sti
xchg
stc
nop
push
push
dec
mov
test
inc
xchg
ljmp
negl
jl
fwait
mov
js
push
sub
dec
fsubs
test
sub
adc
mov
aam
stos
jnp
js
dec
sub
cld
scas
push
lods
adc
jecxz
sub
notb
add
pop
and
enter
mov
or
add
inc
dec
add
mov
adc
mov
rcrl
out
mov
ja
call
aaa
inc
and
jmp
inc
mov
cmp
fadd
fsub
rclb
jl
push
push
das
inc
lods
fisubl
stos
xor
lcall
inc
ficoms
cmpsl
addr16
test
les
mov
ror
jge
aaa
je
nop
push
lret
push
push
xor
test
mov
pop
stos
add
lea
sub
in
popa
xor
inc
cs
scas
xor
or
cmp
nop
adc
xchg
sub
push
pop
ljmp
je
lahf
subb
mov
outsl
mov
int
sbb
mov
xor
push
test
ffree
sbb
call
mov
sub
push
xor
popa
sub
inc
push
inc
lret
and
xchg
insl
iret
push
out
loopne
mov
insb
int
dec
test
mov
pop
aas
test
js
scas
in
mov
adc
sub
dec
push
pusha
out
aas
push
insl
xor
pop
jae
inc
jge
pop
push
aaa
xchg
xchg
scas
add
xor
lds
pop
arpl
arpl
daa
mov
ret
scas
aaa
pop
inc
test
adc
push
mov
adc
repnz
inc
jecxz
ret
andl
xchg
mov
or
mov
les
cmp
add
popa
aas
rolb
fldt
jle
pop
scas
push
inc
test
xchg
das
add
push
jp
cmp
push
jne
xor
in
cmc
fisubrs
rorl
dec
or
je
les
add
mov
xchg
sub
scas
mov
rol
mov
inc
hlt
out
ljmp
push
sarl
rclb
mov
pop
in
xchg
sub
pop
and
cmc
ljmp
mov
nop
nop
cmp
andl
jae
sbb
adc
push
and
inc
inc
jge
stos
scas
out
jl
mov
shlb
sbb
lods
out
dec
jno
imul
xchg
jp
xchg
xor
mov
je
icebp
adc
cmpsl
mov
sahf
xlat
pop
push
repnz
fstl
push
pop
xor
ss
xor
mov
hlt
lock
insb
pushf
or
push
jns
push
pusha
lret
ret
lock
dec
repnz
xor
popf
push
mov
pop
sub
push
out
cmp
jp
add
mov
jne
xchg
out
gs
js
adc
cmp
pushf
addr16
adc
dec
insl
cmp
mov
sbbl
int3
pop
ja
leave
sbb
inc
sub
mov
lret
pusha
dec
jo
pop
test
mov
xchg
jg
inc
push
push
pop
sbb
cmc
cmp
sub
push
fbld
lret
adc
fwait
and
aaa
popa
scas
sub
xor
roll
das
dec
adc
aaa
cld
scas
sbbl
adc
movsl
mov
pop
mov
das
scas
mov
xor
cmp
push
push
push
icebp
out
outsl
ret
lret
push
xchg
pop
xor
mov
movsl
jo
xor
adc
pop
aas
dec
push
popa
mov
mov
addr16
xor
adc
xor
iret
cmp
lahf
lea
in
xlat
xor
lods
jno
lock
and
sub
test
jne
mov
fcoml
jb
in
testl
adc
ss
cmp
movl
mov
mov
sbb
inc
testl
push
xchg
shrb
mov
dec
jge
aad
in
dec
movsb
xchg
push
mov
inc
outsb
arpl
dec
clc
pop
popa
adc
adc
and
int
mov
mov
in
js
adc
mov
scas
xchg
lret
cs
mov
filds
insb
inc
pop
xor
loop
xor
dec
xchg
adc
mov
mov
pop
in
or
iret
aam
clc
xchg
mov
cmp
test
ret
iret
loopne
inc
cmpl
cmp
push
aad
dec
inc
outsl
fst
ja
mov
pop
je
stos
pop
enter
loop
cmpsl
insb
aam
cmp
jo
stos
dec
daa
mov
inc
test
movsl
and
push
insb
jge
shrl
rolb
aam
pop
pop
sub
fucomi
xchg
addr16
cmpl
jno
jl
and
ret
add
sub
lods
inc
adc
adc
dec
add
sbb
pop
mov
inc
fdivrp
inc
jbe
les
clc
jmp
icebp
test
dec
lock
popa
add
xlat
add
mov
sahf
aad
or
dec
add
mov
lods
in
lea
dec
mov
adc
cmpsb
scas
insb
mov
stc
call
jne
arpl
add
inc
dec
idivl
aaa
ficomps
jmp
vrcpps
outsb
xor
stos
in
push
hlt
popf
push
int3
adc
into
hlt
dec
outsb
xor
pop
mov
shl
pop
cld
mov
adc
scas
loope
lret
cs
adc
js
mov
jg
jno
hlt
jge
lock
in
dec
outsl
hlt
std
orl
hlt
shlb
cmp
dec
mov
loopne
test
sub
iret
cwtl
xor
adc
jg
stos
inc
inc
cmp
sub
inc
in
and
cmp
mov
outsl
xor
inc
cmp
jmp
xor
sbb
jge
cmp
cmp
xor
adc
jle
lods
xchg
jp
popl
ret
rorl
cmp
scas
adc
lods
push
test
or
scas
test
push
mov
xor
pop
lea
insb
add
jp
mov
sbb
push
ja
and
filds
inc
dec
and
aaa
in
and
cmc
mov
testl
ja
push
clc
das
addr16
hlt
stos
inc
inc
dec
out
cwtl
push
sbbb
jae
xchg
dec
xchg
mov
xor
push
mov
imul
in
popa
mov
push
jle
xor
iret
shll
mov
mov
xchg
xchg
inc
jns
das
imul
cmpl
and
int3
nop
and
inc
aam
xchg
shlb
push
pop
add
jns
push
fs
inc
iret
dec
mov
jno
xchg
inc
xchg
dec
subb
xor
push
pop
test
add
jg
mov
jg
repz
pop
leave
mov
dec
std
xchg
scas
cmpsl
mov
mov
sbb
pop
pop
test
mov
lret
adc
in
scas
and
dec
aaa
sub
xor
int3
xor
punpckhbw
cmp
es
ljmp
mov
test
cmp
pop
in
mov
cmp
sbb
jb
mov
cmp
repnz
adc
dec
repnz
mov
jnp
dec
jb
push
movsl
or
mov
icebp
mov
inc
xor
mov
pop
adc
std
dec
pop
push
jmp
or
or
or
inc
push
shll
std
push
jns
testl
mov
mov
inc
adc
and
jl
stc
jo
sub
push
cmp
sub
bound
loopne
nopl
in
sbb
stos
int3
insl
push
jmp
adc
imulw
jle
pop
and
js
dec
push
and
sub
inc
mov
ret
jg
in
out
xor
mov
jge
cmpl
sub
inc
and
shll
mov
jge
cwtl
rcrl
mov
xor
rep
rcr
es
pop
xor
jge
mov
mov
bound
cmpsb
cmp
inc
les
dec
into
dec
fs
mov
pop
out
addl
outsl
xchg
aas
and
repz
and
jno
sub
push
adc
clc
fmuls
add
mov
adc
mov
jns
out
mov
jecxz
sti
pushf
insb
mov
stos
ds
std
jg
cli
addr16
imul
inc
adc
adc
sub
mov
sbb
loopne
xor
rcll
lea
xchg
jmp
xchg
mov
js
mov
inc
sahf
ds
add
out
push
mov
cld
ficoml
xchg
adc
aam
test
insl
mov
out
mov
jne
in
pop
push
call
lds
add
lahf
loope
push
cli
mov
pop
clc
fdivrs
cmp
jne
dec
inc
pop
cmp
mov
lcall
xor
cli
and
jns
repz
test
adc
jl
jae
sub
inc
jae
ljmp
push
push
data16
ds
out
je
jnp
pop
mov
mov
arpl
dec
push
pop
adc
jmp
mov
sub
dec
push
pop
daa
mov
dec
xchg
push
repnz
dec
mov
push
xor
in
cld
add
pop
mov
xor
xchg
lcall
lea
hlt
jb
push
fnstenv
xchg
dec
stos
jo
mov
lods
mov
sbb
lds
jp
cmpsb
push
loop
and
imull
lods
sti
dec
mov
aad
sbb
stos
sarb
into
bound
dec
roll
dec
les
mov
cmpsb
add
inc
mov
or
push
test
sbb
inc
and
pusha
mov
cmp
cmp
movsl
gs
inc
sbb
pop
xchg
aaa
js
dec
jb
dec
imul
cs
jp
push
mov
aaa
mov
add
hlt
mov
or
stc
clc
dec
inc
rcrl
dec
or
sub
inc
pop
int3
inc
outsl
xor
ja
hlt
sub
xchg
hlt
dec
xlat
cmc
test
cmp
rorb
lock
push
repnz
add
xor
jo
loop
mov
mov
jo
dec
cmp
push
inc
hlt
das
and
repz
arpl
mov
pusha
ja
dec
xchg
dec
push
outsl
mov
lea
mov
dec
mov
out
mov
jb
dec
aaa
cmp
test
mov
cwtl
and
sub
gs
xor
pushf
pop
cmp
sub
mov
xchg
cmp
imul
cmp
vpsrld
mov
xchg
and
sbb
cmp
cmp
aaa
nop
mov
cmc
lock
cs
out
lahf
pop
dec
cwtl
push
mov
je
pushf
jge
jle
mov
aad
pop
and
and
mov
cmp
fadds
repnz
xor
icebp
mov
add
orb
xchg
aad
add
sub
xchg
fmul
push
popa
gs
jp
jae
pop
insl
cmp
mov
push
lods
jae
ret
aam
xor
lds
std
jge
fs
cmp
dec
and
repnz
dec
mov
cs
mov
addr16
pop
inc
dec
das
ss
push
repz
jne
pop
mov
imul
scas
inc
stc
flds
mov
pop
lock
jmp
dec
hlt
cmpsb
push
cmp
dec
pop
pop
mov
daa
xchg
inc
dec
cmp
xor
ret
mov
lock
repnz
clc
outsb
inc
arpl
insb
les
xorb
dec
bound
dec
insb
push
pop
pop
les
pop
pop
dec
push
hlt
pop
xor
repz
rcrl
leave
mov
sbb
xor
sub
addr16
mov
mov
repnz
pop
sbb
je
repz
mov
dec
xor
stos
aaa
push
insb
cmp
and
inc
lods
inc
repnz
insb
inc
xor
lods
inc
sub
dec
inc
scas
in
dec
mov
fs
fsub
or
hlt
clc
outsb
cmp
sub
lods
adc
icebp
lret
pusha
adc
sbb
das
test
and
pop
fs
jmp
add
movb
rorl
das
mov
out
dec
insb
mov
inc
dec
adc
add
cmp
mul
cmp
fdivl
in
lds
pop
fdivrs
outsb
mov
test
mov
test
mov
adc
mov
repz
mov
pop
test
lret
push
dec
xchg
pop
outsl
mov
mov
ja
xor
dec
xor
pop
sbb
xor
pusha
nop
adc
adc
sbb
or
loopne
push
fsubp
inc
icebp
insl
js
in
cmp
pop
dec
call
inc
jg
and
push
je
cmp
rclb
jae
mov
in
movsb
mov
in
movsb
fwait
and
mov
push
test
add
ficoms
xor
pop
push
inc
mov
andb
call
jge
jmp
sbb
icebp
lahf
inc
push
out
repnz
pop
das
cmp
jmp
nop
dec
xorl
pop
push
fldz
mov
subb
inc
mov
push
iret
movsl
sti
jg
mov
test
jmp
cld
adc
ds
jmp
nop
push
scas
pop
nop
addr16
mov
pusha
movsb
or
sbb
hlt
push
outsb
jmp
jl
jle
jl
fs
hlt
pop
xor
and
hlt
cmpl
insb
pop
aad
pop
nop
push
data16
add
push
test
in
outsl
arpl
outsb
push
pushaw
dec
xor
loopne
icebp
lea
je
inc
mov
ljmp
sbb
mov
js
mov
mov
pop
mov
mov
dec
push
fistpl
mov
cmpsl
pop
xchg
sti
fdivl
mov
xchg
mov
pop
insl
inc
pop
aad
cli
rcl
mov
movsb
pop
in
lret
outsl
outsb
movsb
dec
sub
cwtl
outsb
aaa
in
sbb
lock
and
insl
rcrb
mov
gs
adc
mov
fucomip
sub
sub
mov
lahf
dec
cmpl
inc
mov
or
orb
mov
xchg
pop
mov
sarb
dec
sub
adc
and
mov
xor
pop
rep
jo
dec
dec
pop
hlt
pop
sub
sbb
dec
mov
popa
cltd
mov
and
jecxz
fisttpll
xor
lcall
mov
pop
mov
test
cmp
and
dec
inc
push
dec
mov
inc
test
xchg
shll
push
jg
cmp
lret
mov
icebp
mov
ljmp
dec
das
lods
mov
ljmp
mov
hlt
ljmp
clc
push
test
push
aas
mov
mov
mov
xchg
gs
pop
push
jg
rclb
xor
test
iret
xor
pop
insb
sbb
adcl
pop
sub
cmp
pop
adc
cmp
aad
je
sti
fdivl
fucomi
pop
je
out
mov
pusha
test
les
mov
addb
dec
pushf
loopne
sahf
adc
inc
xchg
test
sbbb
out
mov
ss
pop
push
lods
aas
and
and
push
sahf
sbb
sub
movsb
bound
test
push
push
mov
dec
cwtl
nop
xor
cmp
in
lock
adc
cs
fdivp
push
xor
cmp
sub
cmp
jg
aaa
sahf
mov
xor
sbb
in
xor
in
sub
mov
icebp
dec
sahf
test
cmpl
in
pop
in
dec
pop
in
mul
jge
orb
mov
xchg
in
mov
push
adc
inc
xor
pusha
popf
xchg
xor
mov
cmpl
cmp
inc
repz
dec
daa
dec
push
cmp
dec
arpl
xor
push
mov
dec
pop
sbb
cmp
cmp
or
in
add
xchg
div
xor
jp
out
mov
lods
push
mov
andb
inc
dec
popf
mov
sub
mov
nop
mov
jge
aaa
in
mov
aas
sbb
call
cmp
lds
xchg
sub
insb
inc
sub
mov
push
inc
hlt
add
jno
popa
movsb
in
push
fs
outsl
pop
hlt
shrb
pop
popf
rcll
mov
loop
push
hlt
dec
mov
sub
nop
nop
mov
call
loop
cmpsl
mov
hlt
xchg
lods
xor
sub
ret
dec
pop
dec
pop
pop
jl
loope
lret
add
sbb
repz
es
test
xor
mov
xchg
outsb
lahf
inc
stos
xor
pushl
adc
push
aas
push
enter
mov
xor
pop
mov
inc
clc
xchg
xor
cld
push
mov
dec
loope
rcrl
xchg
xor
inc
mov
jmp
mov
lret
scas
cmpl
fildll
dec
sbb
push
sarl
dec
test
cmp
lock
mov
mov
pop
das
cmp
call
dec
js
xor
ret
xchg
je
mov
mov
jecxz
pop
pop
orb
mov
dec
sbb
cmp
sub
mov
test
clc
mov
inc
loopne
lock
aaa
cs
enter
dec
cmpb
sahf
cwtl
gs
aaa
adc
mov
das
lock
sahf
jb
mov
pop
dec
call
mov
xor
mov
mov
dec
shlb
add
xchg
adc
xchg
lods
mov
dec
xchg
pop
push
and
popa
loope
cld
test
push
std
fidivrs
pop
test
dec
fbstp
shl
enter
pop
jae
cmpsb
mov
call
push
pop
xchg
orb
pop
push
and
js
mov
fstpl
cli
pop
inc
jno
movsl
cmp
shl
cwtl
iret
sub
shl
mov
push
dec
pop
js
pop
push
mov
inc
repnz
fbstp
test
dec
cmp
mov
sub
mov
outsb
inc
fdivrl
sbb
dec
pusha
imul
inc
ds
mov
dec
dec
pop
test
ds
into
outsl
jb
add
and
jno
mov
shrb
pop
mov
mov
mov
les
inc
rolb
jg
mov
outsb
xor
jge
mov
jo
inc
lods
jge
xor
mov
sbb
loopne
push
hlt
pop
outsb
push
fmul
lock
dec
inc
lcall
leave
shlb
es
sbb
mov
adc
push
or
fstps
xchg
fstpt
je
mov
dec
push
dec
das
orl
mov
inc
jecxz
push
inc
push
ds
aad
push
jbe
dec
or
cmp
xchg
pushf
push
mov
cmp
dec
push
cmp
rorl
in
lahf
ficompl
xchg
mov
mov
orb
ret
cmp
shrl
inc
cmpsl
xchg
dec
pusha
call
jb
dec
pushf
cmp
xor
cld
dec
addr16
and
xchg
sarb
xchg
adcl
cli
inc
mov
jg
cld
das
jo
xor
out
fadd
arpl
out
pop
rcr
pusha
stc
ja
lea
into
sbb
inc
mov
add
jno
dec
repz
pusha
lock
xor
test
ret
add
fsqrt
sbb
loop
insl
je
pushf
jge
aaa
mov
movsb
jge
cmp
fisubrs
sarl
lea
fsubs
mov
mov
adc
jno
out
cmc
push
call
jl
fdivrs
jge
add
pop
mov
push
jb
push
sbb
mov
hlt
mov
outsl
cmp
ret
push
punpckhbw
xor
cmpl
test
je
subl
js
sub
dec
lock
pop
push
jnp
jno
push
jle
add
mov
push
enter
fldenv
mov
mov
sbb
sub
mov
jne
cmp
mov
adc
fldenv
push
mov
sub
aas
pop
mov
pop
mov
jno
jbe
rcrb
fs
xchg
mov
lock
jge
aaa
dec
jb
dec
cmp
push
pop
dec
push
push
lret
or
mov
dec
add
cmp
aaa
js
sub
pop
xor
xchg
xor
aad
daa
rclb
push
jbe
push
sbb
cld
lahf
mov
xor
cmp
lcall
push
push
negl
mov
std
dec
lock
test
inc
mov
dec
xor
in
das
jns
dec
xchg
lods
inc
mov
call
mov
xlat
lods
hlt
add
mov
xchg
mov
inc
push
jl
enter
inc
inc
cmp
mov
jo
jg
mov
push
dec
xlat
inc
mov
cld
dec
movsl
test
fdivl
mov
dec
jp
cwtl
movsb
cmp
cmp
ss
call
rcr
add
jg
sarl
cltd
dec
dec
mov
or
inc
mov
fs
mov
cs
shlb
jecxz
sbb
imulb
ss
cmp
mov
loopne
fcom
mov
xchg
cmp
pop
push
push
cmp
mov
pop
nop
je
inc
popa
sarb
adc
pop
aam
adc
scas
sub
sub
pop
mov
inc
stos
mov
dec
cs
outsl
xchg
das
mov
int3
mov
pusha
fwait
hlt
jg
test
ja
sti
adc
mov
or
inc
adc
popf
or
add
iret
xor
scas
pop
mov
push
mov
out
pop
or
mov
iret
aam
jle
pop
je
les
xchg
fs
pop
mov
outsb
push
mov
xchg
rcl
cmp
mov
and
negb
stos
clc
pop
adc
das
pop
inc
popa
dec
aaa
cmpl
dec
sbb
dec
mov
int3
mov
dec
and
sbb
push
sbb
mov
dec
dec
mov
lock
cld
inc
push
dec
loopne
fisubs
imul
cmp
mov
jp
pop
mov
add
movsl
xor
cmpb
into
or
jo
scas
mov
mov
jb
es
call
add
jge
js
dec
or
mov
gs
lock
pusha
das
scas
mov
cltd
and
mov
mov
xlat
bound
das
adc
jg
pop
gs
aam
pop
xor
mov
push
jne
data16
xchg
dec
xor
scas
cltd
dec
inc
into
bound
push
mov
xchg
clc
test
in
push
mov
pushf
rclb
cmp
push
cwtl
pop
outsb
sub
adc
je
cmp
or
mov
cs
sarb
les
push
aam
insb
test
popa
dec
nop
xchg
mov
gs
push
mov
out
popf
adc
in
dec
mov
repz
xor
dec
imul
mov
inc
aad
cmp
clc
sarb
jb
dec
mov
call
stc
add
mov
lock
xchg
outsl
add
int
xor
dec
xor
arpl
mul
mov
dec
cmp
int3
dec
cmp
int3
pop
hlt
xlat
cmp
cmp
fsubrl
inc
add
imul
testb
mov
adc
pop
aas
push
inc
cmp
jge
dec
aas
push
sti
ret
mov
mov
and
imul
inc
mov
push
test
ret
mov
inc
sbb
mov
dec
jae
adc
lret
shlb
push
test
frstor
test
jns
es
lock
pop
ds
sbb
jbe
adc
jp
inc
aaa
mov
mov
inc
decl
cmc
stos
cmp
call
inc
pop
jecxz
jg
add
mov
push
scas
int
pop
and
loope
adc
iret
push
lock
fldt
pop
in
and
mov
iret
sbb
pop
das
mov
je
mov
push
fs
pop
dec
push
dec
lods
repnz
pop
mov
cmp
push
cmpsb
test
sbb
dec
scas
out
push
fists
inc
scas
test
mov
test
pop
ret
push
adc
outsl
inc
sub
inc
dec
mov
push
inc
scas
cmp
cmp
out
xlat
shlb
or
js
inc
mov
cmp
ss
add
in
icebp
sbb
pop
mov
dec
sub
or
or
das
mov
xor
js
cltd
mov
pop
cmc
cmpsl
xor
call
ljmp
push
mov
popa
inc
or
xchg
jo
test
dec
test
mov
jns
sub
popa
inc
test
mov
push
mov
jmp
push
insl
lret
fnstcw
lock
mov
lock
loope
push
mov
fidivl
into
movsl
ret
push
ret
dec
xchg
cmp
nop
lods
pop
mov
xchg
mov
incb
mov
outsl
jle
or
pusha
cs
cmp
push
mov
test
rol
and
mov
or
pop
push
and
add
xor
leave
inc
outsb
mov
in
sbb
jle
mov
jnp
int3
pop
hlt
loopne
add
mov
lret
fnsave
xor
xor
mov
xchg
call
push
outsb
mov
or
mov
pusha
xor
jno,pn
pop
inc
inc
leave
dec
push
mov
icebp
sub
idivl
fnstcw
cmp
ss
int
dec
or
lds
out
dec
or
popa
in
iret
imulb
mov
jo
out
dec
dec
xor
cmp
xchg
jge
dec
adc
stc
xor
loopne
sbb
aaa
sbb
xor
cpuid
xchg
sbb
ss
icebp
es
stos
jecxz
dec
aad
jae
adc
add
test
mov
lods
or
xchg
hlt
popf
mov
dec
sub
dec
test
mov
fs
jl
mov
inc
dec
xor
test
rol
cld
mov
dec
xor
cld
popa
mov
dec
dec
xor
mov
add
lds
fld
test
rol
stos
lds
xor
mov
push
lds
out
call
cmp
mov
sub
repnz
repnz
test
fistps
cmp
xchg
sbb
rol
outsb
mov
addr16
pop
push
push
dec
test
mov
push
dec
repz
hlt
popf
cmp
test
fisttpll
dec
or
mov
dec
mov
xor
pushf
repz
cmp
pop
sub
pop
popa
xchg
xchg
hlt
movsb
outsb
cmpsb
xor
xor
stos
xchg
call
push
sub
or
jge
sub
xor
int3
in
test
divl
ja
leave
outsb
dec
ret
bound
mov
or
ret
lret
cltd
mov
call
loop
inc
fdivs
ret
ret
movsl
aaa
cmp
imul
lcall
daa
das
mov
mov
aam
mov
test
mov
test
mov
jg
inc
and
dec
aas
jo
lods
mov
add
es
into
sti
shll
sub
xor
cmp
jmp
or
sbb
mov
jb
outsb
enter
lret
pushf
int
cs
push
cmpb
mov
cmp
lock
push
jb
jb
push
push
addr16
xchg
imul
mov
fcmovbe
add
aad
stos
mov
inc
nop
test
inc
sub
repz
in
xchg
mov
ja
lahf
mov
pop
jbe
jnp
cwtl
mov
mov
scas
into
inc
jo
adc
les
pop
sbbl
lock
dec
rcr
mov
xchg
mov
inc
int3
inc
outsl
cmp
js
jg
jb
and
mov
das
dec
inc
movsb
gs
aaa
cwtl
mov
jo
push
idivb
clc
xchg
lock
aaa
js
inc
pop
fidivrs
push
js
pop
mov
mov
inc
xor
xor
nop
mov
and
mov
xchg
shlb
and
push
pop
sbb
jo
mov
outsl
ds
jo
inc
hlt
lock
mov
jb
adc
mov
lds
xor
inc
mov
jge
aaa
or
movsb
mov
mov
mov
cwtl
jo,pt
inc
outsl
xchg
inc
cmp
into
outsb
inc
outsb
add
mov
outsl
pop
push
nop
inc
mov
fdivrs
cmp
mov
inc
or
outsl
adc
lods
jb
mov
pop
cld
mov
dec
adc
dec
mov
gs
pop
imul
mov
cs
pusha
fimuls
enter
lock
cmp
nop
rorb
cmp
mov
mov
fdivl
test
lea
lea
or
hlt
cmp
mov
test
popf
adc
imul
mov
mov
cs
cmpsb
inc
dec
xor
lds
xor
pop
aam
outsl
cmpsb
dec
fcomps
xchg
loopne
mov
mov
jne
mov
repz
pop
dec
pop
inc
or
mov
cmpsl
mov
jmp
and
sub
mov
repz
jb
cltd
sub
cmp
sub
aaa
jb
dec
jns
lods
mov
xor
xor
and
pop
mov
dec
aam
or
movsb
in
mov
repz
pop
outsb
mov
mov
mov
jno
je
dec
jp
mov
icebp
mov
dec
push
push
xchg
mov
int
mov
jae
cwtl
mov
js
mov
fnstcw
enter
sub
sub
inc
cli
mov
jecxz
cld
xor
adc
mov
insl
mov
aaa
xchg
jo
sub
mov
loopne
das
out
ljmp
out
lock
dec
mov
pop
scas
clc
lods
mov
fmull
data16
jle
inc
cmpsb
mov
dec
sub
nop
nop
sahf
lock
aaa
fdivrs
jae
dec
shlb
pop
movsb
mov
mov
xorb
pop
sub
and
clc
rcrb
pusha
dec
sarl
rolb
mov
dec
movsl
mov
mov
nop
sbb
pusha
jb
dec
loopne
arpl
test
les
test
outsl
ss
adc
je
test
mov
orb
mov
mov
icebp
xchg
daa
dec
pop
mov
inc
cmp
jle
gs
jb
pop
in
je
mov
sub
popf
jmp
mov
popa
mov
out
mov
sbb
mov
stc
test
cli
arpl
push
add
jl
in
into
inc
jle
lock
scas
fldl
jno
outsb
mov
enter
icebp
aaa
in
rorb
addr16
xor
outsb
jecxz
push
xorl
and
mov
jge
ffreep
nop
xor
repz
jno
mov
xor
roll
scas
jp
mov
adc
shrl
cmp
sub
adc
mov
out
das
sbbl
xor
jg
es
mov
sub
jno
sub
gs
stos
inc
mov
in
mov
pop
jae
push
test
lds
mov
in
jo
dec
xlat
es
mov
adc
scas
add
jbe
xlat
mov
sbb
in
xchg
fimuls
push
sbb
sub
pop
fnstenv
cmpsb
push
xchg
scas
cmp
or
sub
pop
pop
addr16
pop
sub
xor
hlt
mov
aad
sub
xlat
xchg
test
in
int3
sbb
xchg
adc
and
sbb
dec
int3
decb
ja
out
aaa
xor
lret
imulb
add
or
mov
pop
popf
das
add
movsb
dec
ljmp
xchg
inc
adcl
adc
mov
stos
xor
aaa
out
daa
xorb
pop
shlb
arpl
jo
mov
shll
testb
enter
cmp
stc
icebp
lds
ret
xchg
mov
cld
mov
pushf
xor
inc
push
jb
add
fists
cmp
cltd
sub
jnp
adc
jg
loope
inc
xor
pop
xor
adc
orb
adc
add
cmc
and
call
lret
sbb
and
pop
xor
jne
pop
mov
mov
pusha
mov
add
pop
lods
mov
xchg
xchg
je
aaa
lock
arpl
or
mov
push
sub
mov
push
fs
push
cmpsl
mov
nop
push
imul
cmpsl
or
in
pop
out
jnp
repz
int
or
idivb
pop
iret
pop
dec
jge
in
jmp
ja
stc
jge
out
and
test
mov
mov
addr16
dec
js
jns
sbb
mov
jle
jo
popf
movsb
mov
lds
mov
stos
mov
fiadds
and
loopne
scas
test
sbb
jg
sub
cltd
mov
mov
dec
push
jge
cmpl
dec
inc
scas
push
andb
mov
xor
orl
mov
pop
sbb
mov
lock
scas
push
mov
xchg
dec
jno
cmpsb
mov
dec
divb
insl
jno
das
sahf
outsb
cld
xor
mov
hlt
jle
jmp
je
insb
es
loopne
mov
inc
and
shld
sub
leave
or
pusha
mov
inc
cmp
inc
cld
test
cmpsb
jl
adc
push
scas
rorl
test
mov
mov
push
lods
or
mov
in
jno
mov
icebp
mov
ds
mov
ret
and
push
jno
jne
xchg
or
out
jbe
and
cmp
push
mov
pop
rcpps
cmpsl
mov
sbb
fstpl
sub
hlt
pop
mov
and
cmp
repnz
in
mov
dec
les
adc
mov
dec
and
movsl
addr16
mov
jb
dec
jmp
cmpsl
jl
xor
in
mov
xor
test
out
push
sub
orl
xchg
lods
test
in
dec
mov
sbb
cmc
sbb
xchg
out
sub
or
fdivl
and
cwtl
mov
cs
frstor
into
mov
int
cmp
cwtl
jg
mov
inc
scas
in
das
jle
sbb
xor
jg
and
enter
in
negb
cmp
mov
sub
aad
insb
dec
and
int3
xchg
jp
sub
or
add
sub
inc
scas
mov
sahf
pop
xchg
inc
cs
push
cmpsb
test
pop
xchg
xor
cmp
inc
je
push
mov
push
mov
pusha
testl
ljmp
mov
mov
sub
and
jo
gs
dec
xchg
push
adc
sti
enter
adc
jne
jo
inc
pusha
nop
pop
inc
shll
iret
inc
adc
and
daa
out
cmpsb
xchg
mov
mov
and
pop
sti
insl
les
rorb
xor
sub
xlat
pushf
mov
and
int
clc
inc
adc
into
mov
push
cmp
out
and
ficoml
xor
push
imul
adc
test
addl
cmp
cmp
insl
addr16
int
outsb
dec
testb
cmp
push
ds
addr16
cmp
test
in
jb
add
iret
stc
sbb
xor
or
inc
add
test
add
sub
sub
fcoms
adc
mov
push
dec
push
mov
int3
and
mov
mov
aad
mov
test
inc
jae
mov
inc
leave
test
mov
xor
decb
push
push
mov
push
leave
xchg
scas
hlt
inc
pop
jp
clc
adc
mov
mov
cs
repnz
jo
adc
aaa
mov
inc
cmp
lods
es
loop
insb
movsl
sbb
mov
scas
aad
mov
mov
insb
insl
jnp
mov
pop
push
scas
stos
sub
std
lret
test
lods
icebp
xor
repnz
inc
aaa
insl
pop
push
push
sbb
sbb
mov
cmp
jp
push
addr16
sahf
dec
cli
dec
push
cld
push
inc
dec
lahf
push
lcall
xor
ss
pop
lahf
jb
in
sbb
sbb
sbb
es
ret
dec
insb
ljmp
cmp
std
subl
inc
and
sub
sub
mov
jg
aad
ja
sahf
test
lea
je
push
fildl
push
xor
inc
jae
aaa
cmp
dec
sahf
push
jle
dec
lret
pop
lret
jecxz
iret
fsubrs
fstl
xchg
clc
repnz
ss
dec
mov
loope
pushf
out
mov
lods
lods
xor
cld
push
add
or
inc
cs
mov
data16
lea
mov
jmp
sbb
fstl
pop
insb
ret
adc
pop
ror
ret
pusha
in
inc
xor
adc
or
ds
loope
mov
jge
cs
jp
call
jge
pusha
push
push
xchg
sbb
and
mov
inc
add
jg
test
inc
inc
push
imul
or
dec
jp
stos
inc
ret
popf
pop
jo
dec
cmpsl
xor
dec
clc
nop
inc
pop
inc
sub
xchg
dec
xor
cmpsb
push
push
jbe
mov
cmpsb
movsl
sbb
or
mov
arpl
xor
adc
sub
fistl
xor
jp
push
mov
add
test
test
js
aam
add
jo
push
add
je
inc
lods
sarb
cmpsb
js
insl
mov
mov
push
mov
cmpsl
cs
jge
stos
in
inc
addr16
mov
sub
xor
cmp
pop
sub
mov
push
addr16
ficoms
aaa
push
dec
stc
jno
mov
jns
xor
and
and
das
pop
sbb
jmp
pushf
lock
push
je
sbb
scas
lcall
ss
rolb
aaa
ja
jmp
mov
aaa
test
popf
mov
mov
xor
fildl
stos
cs
mov
sub
push
orl
xor
shll
js
sti
mov
mov
xchg
mov
sbb
ret
sub
fdivrl
out
cmp
hlt
mov
pop
inc
imul
xor
pop
decb
pushl
stos
sbb
pop
inc
scas
in
movsb
mov
lock
mov
ljmp
mov
jge
sbb
sub
lods
test
or
xchg
stos
lods
popl
mov
arpl
fisubrl
jmp
subb
into
jae
sbb
popf
pop
dec
or
pop
mov
pop
mov
pusha
stc
in
dec
popa
jns
test
scas
in
mov
int3
add
popf
popa
iret
cs
push
push
lock
or
push
mov
gs
adc
call
aas
xchg
dec
cmp
xor
push
mov
xor
ljmp
loop
mov
xor
mov
adc
cmp
mov
rcr
cmp
mov
push
xchg
iret
xor
jg
xlat
push
sbb
xor
in
sub
xchg
mov
mov
push
and
fdivl
xor
xor
push
dec
mov
outsl
sub
mov
adc
pop
idivl
shlb
cmp
es
decl
jl
lds
jb
push
mov
aad
jl
mov
pop
jo
mov
push
cmp
rcrb
insb
fs
and
push
xchg
bound
out
rorl
cmp
push
popf
das
in
push
pop
jb
in
stos
scas
jl
and
mov
das
mov
xor
subl
mov
push
das
mov
mov
repnz
add
cltd
pop
insl
lcall
insb
cmp
imul
pop
test
mov
stos
mov
repnz
mov
out
ds
pop
stos
sub
les
push
sbbl
mov
outsl
out
mov
sbb
cld
sub
leave
in
mov
test
push
cwtl
sub
mov
clc
dec
addr16
movsb
out
add
cs
mov
and
and
jp
cmc
test
adc
insl
add
enter
sub
mulb
jbe
loopne
mov
inc
mov
sub
mov
and
rolb
xor
movsb
rolb
jmp
sub
adc
cmc
and
pop
mov
fdivrl
or
xchg
dec
xor
scas
in
das
sub
leave
out
push
lods
int3
and
jge
data16
jle
repz
pusha
into
pusha
dec
inc
sbb
or
lcall
push
mov
jae
mov
mov
xor
push
scas
inc
mov
push
scas
jge
imul
aas
mov
cmp
add
test
mov
loope
pop
nop
jae
push
push
stos
cwtl
mov
outsl
inc
add
xor
fmuls
push
sbb
jno
ds
xor
mov
jne
test
mov
and
cmp
imul
cs
testl
mov
daa
aaa
push
xor
inc
jns
and
test
sub
cs
adc
sbb
ss
jnp
push
push
aaa
add
push
gs
or
shlb
lods
adc
leave
leave
je
hlt
decb
push
aam
je
test
mov
int3
inc
sbb
jae
scas
inc
addr16
sbb
out
sbb
push
push
sbb
jmp
ljmp
aaa
dec
and
out
pop
les
sub
xchg
dec
pop
push
bound
inc
push
push
mov
mov
aaa
lret
mov
mov
outsl
pop
xor
xor
inc
push
adc
leave
shll
mov
mov
push
repz
test
push
mov
mov
popa
lods
xor
mov
adc
inc
ss
pusha
sti
sbb
scas
xchg
mov
arpl
daa
fnstcw
push
das
adcb
add
push
into
shrb
and
loop
insb
scas
sub
test
push
xor
mov
xchg
scas
lea
mov
sti
in
in
xor
pop
xchg
push
test
scas
mov
mov
or
adc
jno
rcl
jl
push
lret
cmp
les
xor
int3
inc
push
inc
cmp
mov
add
sbb
addr16
or
es
rolb
shlb
das
ja
mov
fnstcw
mov
add
pop
push
mov
sbbb
push
rorb
sbb
push
cmpsw
es
dec
out
pop
rcrb
xchg
push
in
cmp
sub
mov
out
scas
in
sbb
xor
lcall
push
mov
shlb
fs
movsb
add
xchg
pop
adc
ret
push
jb
mov
sub
pop
mov
pop
bswap
test
mov
mov
pop
jmp
inc
mov
pop
aad
mov
xchg
repnz
lret
jno
jg
push
stc
xchg
sbb
push
scas
je
mov
mov
mov
mov
inc
es
into
adcb
pop
cmp
inc
cmp
pop
lds
xor
add
aaa
push
xor
xor
or
mov
inc
add
adc
shl
push
mov
lea
cmp
adc
lds
nop
or
ds
test
into
mov
pop
jns
fdivr
lcall
sub
test
mov
mov
insb
inc
scas
jmp
pop
loope
outsl
mov
pop
gs
sub
lods
cmovo
faddl
mov
add
pop
jbe
dec
jb
mov
ja
int
fnstsw
popa
outsb
jl
push
xchg
push
test
in
inc
jp
push
jnp
aas
dec
mov
or
jle
insl
push
mov
aaa
jecxz
push
jo
addr16
push
lahf
add
adc
sub
pop
sbb
inc
sti
xor
sub
incb
rorb
add
je
push
inc
inc
insl
pop
and
xchg
dec
jl
xchg
std
xchg
adc
stos
push
add
and
adc
xlat
xchg
mov
insl
out
push
cmp
decb
roll
dec
aaa
cmp
fwait
pop
aad
jno
int
jl
xor
jo
adc
sub
mov
rcrb
mov
add
ror
mov
negb
jge
xor
xor
leave
arpl
sbb
lods
imulb
push
gs
jo
scas
nop
sbbb
nop
push
adc
jl
inc
ret
xor
mov
dec
cmp
xchg
mov
shrl
in
mov
mov
jno
dec
pop
cmpl
ds
xchg
jl
pushf
scas
cwtl
hlt
adc
fdivs
ja
outsb
aad
pusha
and
push
jnp
jnp
lods
jl
xchg
adcb
insb
sub
mov
movsb
inc
xor
inc
lea
lds
imul
inc
mov
push
cwtl
mov
jbe
push
mov
jg
push
dec
inc
mov
das
aad
mov
cmp
mov
aaa
shlb
fdivl
enter
or
fwait
sbb
rolb
mov
mov
mov
pop
and
sbb
dec
sbb
ds
or
andl
add
cmp
addr16
stos
pushf
dec
cs
jnp
mov
imul
mov
dec
sbb
ret
mov
aaa
mov
xchg
cwtl
xchg
arpl
pop
mov
push
sub
nop
lahf
rolb
jg
dec
push
mov
iret
jmp
cmpl
xchg
dec
call
lret
xor
adc
or
das
repz
enter
pop
movb
stc
sbb
cmpsl
mov
aaa
cs
jl
mov
dec
nop
fdivrl
or
cmpsl
mov
push
xor
xor
enter
xchg
mov
scas
movsl
lods
sub
jecxz
dec
mov
lds
cwtl
pop
push
popf
xchg
out
sbb
dec
jp
lret
lret
and
mov
hlt
or
inc
fisubl
dec
xor
movsb
addps
and
adc
inc
cwtl
ja
cmp
push
sbb
dec
cmp
xor
inc
mov
cmp
pusha
test
adc
fs
cmp
addr16
jg
xor
and
and
add
dec
xchg
adc
shlb
jl
pop
mov
pop
jle
addr16
int
dec
mov
lds
inc
scas
sub
push
sub
push
jl
mov
mov
mov
mov
mov
or
dec
ja
ljmp
pusha
ss
mov
add
mov
pop
sub
jo
or
dec
mov
dec
cmp
hlt
leave
fwait
popf
inc
mov
mov
adc
lret
jg
or
inc
addr16
jg
pop
jbe
inc
jmp
hlt
in
les
in
jl
pop
jge
dec
and
cmpl
cmpb
scas
rclb
xor
cwtl
mov
loopne
notb
mov
xor
rclb
xchg
lods
cmp
pop
xor
xlat
cmp
test
jno
lea
mov
mov
adc
inc
dec
sbb
push
movsl
mov
insb
and
mov
mov
add
mov
aaa
mov
outsl
in
and
scas
fs
xor
sub
es
cmp
adc
xchg
divl
adc
pop
dec
xor
xchg
addr16
in
dec
and
xor
jge
sbb
leave
mov
cld
inc
dec
and
inc
sub
xor
cs
stc
insl
mov
push
adcb
leave
push
sarl
push
pop
xor
lods
rcrb
fldcw
mov
mov
adc
push
jle
das
cmpsb
mov
or
sub
std
stos
mov
pop
and
dec
jne
loopne
push
lahf
xchg
inc
fldt
lds
cld
pop
xchg
hlt
enter
std
xchg
test
pushf
insb
push
add
in
fnstenv
xor
lods
cld
dec
cld
add
outsl
mov
mov
js
aaa
aaa
test
dec
cmpsl
mov
sub
or
fbstp
mov
xchg
jl
mov
dec
cli
cmp
add
pop
mov
push
mov
out
add
xor
fdivp
fidivs
cmp
lret
rcll
sbbl
jge
jno
pusha
adc
pop
xchg
in
pop
pop
mov
cmp
lea
jl
jge
push
lret
sbb
push
out
out
data16
enter
lret
in
ja
lods
lds
push
loopne
cmp
mov
mov
fcoms
xor
pop
ds
fnstsw
jns
scas
arpl
sub
ljmp
dec
std
mov
xchg
pop
cmp
test
jl
flds
fmuls
stos
sbb
pop
or
imul
xchg
sub
fs
loope
mov
add
inc
pop
pop
inc
inc
mov
ror
push
mov
shlb
adc
jo
inc
sub
pop
cmp
aaa
dec
sub
aaa
jl
push
movsb
pop
mov
nop
add
and
addps
call
push
xor
andb
int3
pop
sarl
cli
dec
clc
imul
test
fsub
push
pop
pop
inc
mov
bound
push
das
and
mov
loopne,pn
inc
outsl
mov
mov
sbb
cld
inc
adc
cs
push
mov
mov
xor
loopne
sub
in
adcb
sahf
daa
xor
shll
cwtl
add
mov
mov
push
jbe
test
mov
adc
pushf
stc
jbe
neg
inc
sub
add
std
decl
jl
sbb
es
sarb
in
test
jno
dec
xchg
jge
cmpsl
push
aaa
icebp
insl
jno
inc
bound
jb
mov
adc
cmpsb
lcall
jge
popa
xchg
xchg
push
fnstsw
je
inc
shll
xor
iret
aaa
testl
dec
std
xchg
push
int
jne
push
movsl
adc
pop
push
adcb
push
imul
mov
dec
daa
out
mov
addr16
xor
mov
mov
sub
aas
stos
mov
int
xor
dec
bsf
mov
cmp
push
js
daa
dec
xor
mov
scas
lret
rorb
das
cmp
gs
js
cli
sub
stos
xchg
xorb
incl
push
add
mov
mov
and
stos
clc
in
pop
pop
xchg
push
dec
add
loopne
xor
aaa
push
push
ret
inc
dec
loope
and
xchg
bound
frstor
out
inc
jp
lock
scas
enter
in
das
sub
loope
mov
cwtl
xor
push
inc
mov
mov
aad
xchg
push
adc
jecxz
popf
stos
out
das
mov
xor
dec
out
imul
xchg
cmp
repnz
inc
adc
shll
inc
sub
pusha
mov
dec
rclb
inc
push
lods
rclb
or
dec
pop
push
mov
mov
pop
shll
push
scas
adc
cmp
in
or
mov
add
gs
roll
ret
repnz
test
jb
push
loop
inc
mov
dec
and
cmp
roll
or
add
sub
mov
insb
ret
pop
add
bound
ss
mov
ss
iret
das
cmpsl
pop
dec
xor
repz
pop
jno
xchg
push
scas
std
add
pop
inc
rolb
dec
inc
insb
xchg
cld
ret
scas
adc
push
clc
pop
insl
or
mov
add
xlat
dec
push
sub
inc
jns
scas
shrb
pop
out
mov
sub
test
fldt
adc
gs
push
add
fldenv
jle
dec
scas
in
mov
add
imul
mov
shll
sub
mov
mov
scas
sbb
test
mov
repz
ja
pop
mov
insl
adc
cmp
push
pop
jnp
pusha
mov
int
loope
fisubrl
inc
jo,pt
fldcw
or
xor
shl
jb
dec
dec
fdivrs
stos
push
jbe
mov
addr16
int
jnp
xor
sub
jmp
sub
mov
shr
cmp
shll
mov
sbb
adc
adc
orb
insb
test
mov
and
jnp
add
lock
lock
cmc
xor
scas
adc
adc
mov
es
mov
mov
xor
dec
fs
in
hlt
inc
dec
lret
hlt
ds
inc
pop
lods
push
mov
pop
lock
jno
mov
cld
fisubl
lock
aaa
aam
mov
inc
add
mov
jmp
dec
ja,pt
push
stc
xor
cmc
flds
mov
add
cmpsl
and
dec
sub
sbb
hlt
jle
jae
pusha
or
movsl
mov
jae
pusha
inc
push
fs
adc
out
adc
jne
scas
xlat
sub
mov
cmp
mov
sbb
lcall
cmp
ret
mov
add
nop
dec
aaa
sti
mov
xor
ret
or
sub
adc
push
add
xchg
cld
dec
xor
hlt
jae
stos
ss
aam
cmpsb
arpl
pop
adc
sub
test
push
cmp
xor
in
cs
inc
add
and
in
inc
addr16
push
lods
or
or
sub
ss
mov
sub
in
jnp
pop
mov
cmp
mov
scas
repnz
in
lds
xchg
adcl
scas
xor
ds
rorl
std
and
sahf
in
sbb
sbb
mov
mov
inc
cmp
rorl
gs
push
dec
mov
inc
lock
outsb
pop
dec
insl
inc
inc
jp
adc
mov
xlat
mov
in
dec
mov
je
test
dec
int
mov
pop
out
js
outsl
jmp
pop
xchg
inc
adc
cmp
sub
add
iret
std
insb
inc
sub
push
adc
jl
jge
jl
pop
sub
sub
push
popa
andl
fdiv
sbb
test
lret
outsl
mov
add
hlt
dec
sti
call
shrl
push
fmuls
xchg
xchg
push
cmp
cmp
jle
ds
xchg
sahf
test
flds
cmp
jge
pop
mov
insb
out
insb
in
xor
cwtl
jle
je
cltd
mov
js
sub
cmpsl
or
cltd
loope
movsl
pop
xchg
xor
cmp
xor
out
stos
lret
fldt
pusha
push
loope
xchg
inc
pop
daa
mov
xor
xor
lds
sub
or
mov
mov
jns
inc
addr16
push
mov
mov
xor
adc
fildl
mov
addr16
mov
adc
dec
xor
int
and
or
gs
push
mov
xor
int3
lret
pop
test
mov
pusha
inc
jnp
lds
outsl
outsl
hlt
in
lods
dec
pop
adc
lock
leave
scas
adc
inc
fisttpll
aas
fs
cmpsb
pop
mov
push
jge
xlat
mov
out
insb
mov
mov
scas
and
jae
test
je
adc
xor
xor
xchg
and
pop
int
lea
jle
adc
shll
inc
pop
cmp
mov
pop
adc
mov
repnz
fists
sub
xchg
lret
insl
lret
testb
lret
outsb
leave
mov
mov
sti
jb
jb
xchg
bound
jne
dec
xor
mov
rcll
xor
arpl
xor
cld
nop
xorb
insb
stc
mov
push
add
pop
pop
jno
jl
leave
dec
aad
push
inc
add
push
nop
adcb
es
nop
test
xchg
adc
jne
cmp
dec
cmc
shr
add
iret
jne
lea
pop
test
cmp
aas
mov
and
clc
stos
xor
cmpb
negb
cmp
sub
dec
test
dec
jb
dec
cld
iret
mov
shll
inc
dec
sbb
xlat
addl
scas
scas
mov
xchg
mov
push
test
mov
mov
cmp
aas
jl
jle
int3
mov
js
clc
lock
mov
dec
rolb
das
insb
xchg
cmp
loopne
js
jns
dec
cmp
dec
push
cs
aaa
mov
test
adc
je
mov
adc
fimuls
fcmovne
mov
cmpsl
push
jae
mov
and
ds
mov
inc
jbe
jp
mov
adc
xor
pusha
push
inc
ficomps
ljmp
mov
mov
sub
popa
sti
adcb
jo
pop
pop
inc
idivb
mov
xchg
das
fs
mov
cmp
jecxz
mov
dec
mov
mov
push
rcrb
das
xor
sub
and
addr16
sub
and
std
dec
jl
sub
xor
push
inc
repnz
inc
test
mov
movsl
js,pn
push
add
sahf
das
push
xorl
cmpsb
mov
cmc
dec
je
jl
hlt
pop
mov
add
fldt
insl
push
das
lea
mov
mov
push
inc
pop
in
fwait
mov
stos
std
push
stos
xor
rclb
add
dec
push
insb
or
adc
cmc
cmp
je
stos
pusha
stos
mov
mov
jge
jp
xor
push
xor
into
jmp
jg
or
ljmp
test
es
cs
imull
lret
sub
and
cwtl
inc
stos
fwait
xor
incl
scas
inc
mov
mov
notb
mov
out
sub
lea
xchg
sbb
xchg
mov
mov
pop
cs
or
aaa
dec
shll
les
adc
subb
jns
push
mov
cmp
mov
push
insb
fs
pop
orb
mov
cmp
addr16
adc
ljmp
dec
jbe
add
push
jge
sub
cmc
xchg
push
jge
sub
lahf
sub
sbb
div
or
and
mov
pop
lock
pop
xchg
das
jb
cmp
and
jo
hlt
dec
inc
sbb
mov
adc
in
and
lods
es
push
mov
mov
insb
sbbb
dec
mov
sbb
pop
jg
cmp
push
stos
les
bound
leave
and
jnp
enter
or
pop
adc
test
aas
in
jp
pop
adc
add
jge
outsl
sub
and
enter
pop
test
mov
add
cmp
jnp
jl
jno
or
pop
pushf
scas
push
cs
sub
out
or
push
rcl
js
jo
test
push
setp
mov
xor
mov
mov
cmpsb
mov
in
lret
scas
xchg
push
cli
outsl
in
sti
nop
jge
push
lret
loop
xor
add
out
jo
subb
cmp
push
dec
out
xchg
or
cmc
inc
push
xchg
push
movl
ret
add
mov
inc
add
aas
inc
jne
jge
js
cmpsl
jle
mov
mov
ss
fbld
mov
jne
mov
orb
mov
mov
inc
pop
inc
aas
test
pop
sub
repnz
pop
jge
push
push
sub
mov
pusha
lds
sub
lods
xchg
lds
jno
push
mov
icebp
add
and
out
cmp
lds
lods
xor
dec
ds
push
lahf
ljmp
jbe
inc
pop
insb
jl
andb
ficoml
inc
daa
sub
pop
mov
sub
out
pop
push
js
mov
jge
dec
pop
xor
repnz
out
outsb
push
xor
and
lea
arpl
mov
xor
pop
dec
out
xor
filds
pop
inc
xor
les
push
das
popa
xor
cmp
lret
outsb
aaa
sub
xor
repz
je
sahf
xorb
shr
aas
pop
push
jle
aad
mov
add
mov
jbe
ds
mov
inc
dec
das
gs
imulb
clc
mov
sub
shrb
lods
xor
xor
rol
mov
negb
repz
mov
add
cs
sub
mov
dec
or
daa
mov
and
movsl
sub
dec
movl
push
jne
rcrl
xchg
jg
xor
push
sub
xchg
inc
push
jle
inc
pop
cmp
jg
sbb
mov
add
lret
movsl
sbb
adc
test
je
test
inc
scas
dec
xor
xor
or
xor
push
stos
inc
sub
xchg
sbb
jmp
sahf
jmp
movsb
sarb
sub
in
movsl
fs
mov
mov
ss
sub
mov
in
test
mov
ds
mov
orb
jb
and
enter
push
ss
xor
ja
mov
hlt
adc
dec
jp
in
loope
jnp
push
push
xor
stos
dec
and
xor
das
aaa
dec
mov
addr16
mov
mov
orb
add
push
xchg
cmp
sub
shr
push
ficompl
das
insb
sub
icebp
sbb
mov
add
fidivrl
sub
clc
aas
cmp
inc
je
mov
lods
int3
in
sbb
push
inc
xor
push
adc
and
xor
and
jne
sbb
insl
and
or
lock
xor
xor
or
sub
in
mov
xor
cmpsb
in
addr16
sbb
push
out
out
sub
pop
sub
and
cmp
enter
jl
mov
sub
dec
xchg
xor
outsl
loope
adcl
xor
jl
cmp
push
mov
dec
bound
xor
into
loop
or
gs
push
scas
inc
aas
fcomp
add
fstpt
cmp
insb
fdivrs
sub
lahf
mov
xor
pushaw
das
cltd
lds
cld
inc
cmp
push
aaa
xchg
push
rorl
jecxz
lcall
mov
inc
cmp
jecxz
xor
sbb
out
cmp
adc
mov
xor
sub
jp
mov
in
mov
xor
stc
and
ja
adc
push
nop
sub
and
jle
ds
add
jbe
sub
gs
push
mov
or
adc
mul
xchg
ss
jl
incb
cmpsb
outsl
mov
out
pop
sbb
jle
and
mov
hlt
data16
and
scas
fs
cmpsl
cmp
mov
sub
inc
data16
inc
push
mov
imul
inc
imul
das
pop
push
insl
popf
insl
dec
or
add
mov
mov
jmp
bound
mov
repz
int3
pushf
jb
and
aam
mov
dec
shrl
push
mov
mov
mov
je
adc
mov
rcr
test
out
xor
add
and
dec
and
cmc
xchg
and
xchg
xor
push
adc
stc
outsb
movsb
das
sbb
insb
sub
test
xchg
xchg
inc
loope
cwtl
sti
inc
xor
test
sbb
je
adc
into
int
sub
subl
sbb
mov
mov
xor
sbb
call
mov
in
inc
mov
test
aad
test
push
lods
mov
mov
repnz
fcoml
nop
fwait
aas
cmp
or
inc
aaa
inc
hlt
xor
dec
push
push
je
push
int3
mov
addr16
out
rclb
cmp
nop
push
adc
push
sub
add
mov
lret
and
fstl
cld
mov
in
inc
mov
mov
xchg
push
in
lods
pop
shrb
push
push
mov
addr16
dec
cmpl
sub
or
dec
or
movb
xor
jne
fwait
pop
xchg
dec
mov
testl
xchg
mov
or
addr16
dec
in
lds
pop
pop
sub
scas
adc
jnp
mov
jb
mov
add
popf
sbb
xor
mov
ror
inc
cmp
das
push
push
cmc
aaa
aas
mov
das
addr16
out
jle
mov
adc
fnsave
jo
mov
aaa
push
mov
dec
inc
or
push
rcrl
dec
outsl
dec
movsl
inc
or
pop
cmp
out
inc
adc
std
mov
fcomp
and
xor
xor
hlt
jg
adc
pop
cmc
mov
repz
add
pop
test
and
mov
pop
dec
lods
or
or
in
or
sahf
mov
cmp
jbe
jge
ret
mov
int
sahf
and
jg
in
cld
inc
hlt
test
mov
std
in
psubw
in
ss
out
bound
cmpsb
cmpsl
sahf
mov
fildl
pop
add
inc
xor
inc
pop
add
mov
jno
cmp
add
inc
lahf
daa
dec
inc
pop
sub
cld
add
es
shl
daa
mov
mov
add
rclb
cwtl
das
pushf
jae
mov
pop
xchg
cmp
ss
das
lcall
sti
inc
and
jne
adc
jge
and
sub
test
rolb
cmpl
jo
std
gs
push
add
out
sub
aaa
ss
mov
xor
ds
jg
clc
pop
lahf
push
sbb
ret
jno
pop
add
shl
jae
addr16
dec
aam
adc
jg
punpcklbw
add
pop
mov
in
loope
sbb
in
jecxz
out
ret
ss
sub
adc
insb
daa
mov
lret
adc
mov
inc
cld
pop
stc
mov
repnz
fnsave
push
fidivs
mull
js
jne
jae
dec
pusha
mov
adc
push
pop
nop
cwtl
shlb
sbbl
cmp
adcl
sbb
rorb
pop
outsl
sbb
xor
outsb
mov
jge
data16
addr16
pop
xor
cmp
add
inc
or
in
adcl
sub
push
cli
xor
jnp
popa
or
scas
pop
addr16
fsts
inc
decb
scas
mov
sub
subb
nop
dec
or
pop
jo
mov
sti
dec
test
cmc
xchg
xor
jbe
jns
jnp
and
xchg
sti
inc
mov
adc
fists
xor
cwtl
adc
out
in
je
dec
mov
xor
andl
js
jno
push
sbb
out
call
sbb
sbb
inc
inc
je
cmp
pop
in
inc
ret
mov
addr16
push
push
mov
add
mov
sub
idivb
xchg
pushf
push
sbb
jnp
push
test
dec
enter
adc
test
inc
dec
js
cmp
jb
inc
cli
push
cmpsb
lods
lock
cmc
jne
mov
dec
mov
push
popa
pop
and
int
rcrl
xor
sub
sbb
push
adc
pop
cmp
imul
add
aaa
sbb
add
adc
push
inc
mov
cmp
movsl
ds
dec
mov
jg
fistps
xorb
aaa
pop
and
mov
sub
lds
roll
pushf
lss
aas
mov
cmpsb
cmp
aas
es
data16
faddp
sub
in
dec
and
popa
popa
inc
lds
mov
pusha
lahf
fstps
je
inc
adc
and
lods
adc
sub
adc
push
popf
repz
dec
stos
jbe
jg
fimuls
aad
and
in
xchg
push
xchg
cltd
mov
std
or
or
jecxz
xor
mov
dec
cmp
dec
enter
push
pop
call
push
popf
jo
fadds
xchg
fbld
push
adc
cmp
call
mov
push
hlt
xchg
or
mov
mov
inc
adc
ja
inc
outsb
in
push
pop
test
jns
inc
dec
into
push
insl
fs
fsubs
mov
jmp
push
addr16
andl
insl
cmpsb
and
test
inc
add
test
cs
pusha
xchg
push
push
mov
sub
and
pop
arpl
mov
or
xor
ss
je
jge
or
das
adc
test
insl
cli
mov
in
mov
call
lds
lods
mov
mov
jecxz
and
xor
mov
add
push
mov
jmp
mov
inc
rorl
add
pop
insl
scas
adc
or
in
and
mov
icebp
dec
mov
jge
jg
adc
cmp
shrl
cmpsb
orl
adc
push
cmp
out
add
dec
fsts
push
ss
xor
aaa
push
or
inc
fcompl
bound
in
xor
and
ficompl
push
imul
xchg
stos
xchg
std
insb
imul
and
imul
aas
mov
jmp
cltd
dec
dec
nop
rcl
test
lods
pushf
pminsw
dec
popf
out
ja
jg
fimuls
movsl
mov
sub
pop
xor
pop
aaa
fdivp
aaa
cmp
adc
add
or
mov
js
jne
push
je
mov
sbb
mov
jne
mov
inc
dec
rorl
cmp
incb
mov
mov
out
push
dec
scas
add
mov
jecxz
push
das
xor
jle
cmpsb
xchg
ljmp
out
daa
add
repz
xor
orl
pop
pop
cs
subb
cs
xlat
pop
add
jl
cmp
repnz
rorb
mov
ss
xor
lds
sti
shlb
jns
jne
lds
imul
and
test
test
mov
xchg
dec
fs
dec
sbb
and
sub
rolb
pop
mov
adc
pop
cmpsl
popa
je
aad
sub
push
xor
sbb
or
pop
mov
xor
sahf
xchg
or
push
dec
mov
mov
fs
dec
jecxz
push
mov
mov
pop
out
ss
inc
in
cmp
out
lods
and
xor
jns
adc
fwait
push
xchg
xorl
pop
sbb
push
popf
sbb
mov
sub
shrl
in
test
sarl
in
adc
push
mov
fnclex
out
or
adc
cmpl
negb
pop
je
scas
sti
and
jge
jl
pushf
or
xor
add
mov
mov
dec
test
in
ja
sbb
cmp
cltd
scas
and
sbb
gs
lock
daa
fildll
or
sbb
push
xchg
fsubl
sub
out
out
loop
outsl
push
mov
dec
negl
sbb
push
sbb
pushf
pop
lock
and
xchg
push
jp
ja
adcb
xlat
imul
adc
push
dec
xchg
les
xor
int
inc
pop
inc
jne
push
je
push
mov
or
jbe
call
aad
jge
mov
jmp
xchg
nop
sbb
inc
int3
cmp
xor
cmpb
xor
xor
jno
out
jge
adc
test
push
and
push
sub
and
dec
into
lahf
mov
inc
cmp
stos
cmpsl
or
rol
push
dec
icebp
sub
cmp
enter
xchg
mov
xchg
pop
ficoms
jbe
cmp
lock
mov
dec
mov
push
cmpl
and
add
cmpsl
pop
test
iret
pop
scas
pusha
xor
fstl
pusha
xchg
dec
inc
adc
loopne
pop
imul
mov
aam
cmp
or
ss
or
je
mov
cld
push
mov
jo
das
shlb
mov
or
cli
mov
mov
xor
or
lods
mov
or
cmc
js
push
je
pop
rclb
ret
add
adcl
xor
sbb
sub
fisubl
nop
hlt
sub
aad
pop
dec
mov
jmp
mov
sub
in
adc
push
dec
repnz
cmpsb
jns
jmp
test
jns
sub
pop
scas
push
cmp
ds
pop
js
xchg
sub
lds
test
enter
inc
dec
sbb
test
pusha
pop
push
outsl
int
dec
ds
jecxz
addr16
pop
test
test
popa
cmpsl
mov
cli
inc
push
jne
cmp
push
jae
xchg
and
ss
push
call
xor
out
jge
cwtl
sti
xor
sbb
loope
iret
leave
jb
out
and
js
push
jecxz
test
mov
int3
mov
ret
out
inc
lock
dec
cmp
aas
aas
jns
mov
stos
idivb
or
sbb
js
push
test
insl
pop
and
pop
push
mov
cmp
inc
cli
test
xchg
cmp
mov
xchg
shll
je
mov
out
mov
loope
cmp
dec
pop
inc
add
mov
lods
in
or
scas
repnz
or
fistpll
addr16
in
and
inc
cs
decl
xor
push
lahf
gs
mov
fs
pop
jbe
sbb
movsl
int3
scas
mov
loopne
aam
dec
mov
push
xor
pusha
mov
xchg
adc
sbb
sti
in
idivl
sub
xor
pop
sub
int
mov
mov
int3
or
sub
push
push
insb
rdmsr
pop
or
sub
in
andps
scas
cld
mov
dec
mov
mov
aaa
cli
mov
lret
sbbb
adc
sbb
jbe
push
xorb
add
cli
sub
inc
xor
sub
insb
and
dec
xor
xor
jg
push
cmp
and
stos
push
in
push
fnstcw
std
ds
mov
xor
and
xor
popa
pop
pushf
inc
pop
test
and
fwait
xor
sbb
dec
jbe
sbb
out
mov
mov
cmp
add
stc
inc
aas
pop
push
push
push
bound
rorb
std
cs
stos
jle
jns
std
add
jle
lods
sbb
mov
and
sarb
dec
out
loopne
sub
and
jg,pn
movd
mov
leave
inc
mov
jmp
cld
mov
mov
sarb
pop
testb
in
push
shlb
ret
pop
data16
sub
lods
mov
mov
mov
inc
adc
mov
scas
and
cmc
inc
je
mov
mov
ss
aad
cmp
jns,pn
xlat
pop
shr
je
jle
insb
scas
jle
adc
push
idivl
mov
add
dec
sub
adc
shrl
dec
sarb
adc
out
or
pop
pop
xor
decb
incl
ss
fnstcw
ret
arpl
cltd
dec
sub
sub
inc
lret
jge
dec
push
pop
sub
rcll
inc
adcl
call
aas
cmp
pop
and
jmp
outsl
pop
scas
xor
xor
addr16
jo
scas
js
insl
nop
inc
jg
xor
fisubl
jns
dec
pushf
pop
adc
dec
mov
outsl
rolb
sbb
insb
push
mov
mov
notl
inc
fbstp
cmp
xor
xor
sub
mov
mov
push
stc
mov
das
mov
lods
jl
jae
sbb
outsb
imul
sbb
rcll
cltd
hlt
mov
test
cmpsl
shrl
mov
ljmp
outsb
mov
outsl
repz
fwait
aad
mov
jge
mov
insl
outsb
mov
jo
push
ret
mov
push
int
imul
jge
fwait
cli
add
dec
je
push
shlb
jo
sub
jnp
popa
xchg
int3
mov
jge
cmpsl
sub
repnz
shrb
les
jno
cmc
lods
sbbl
leave
add
insl
je
mov
or
enter
loop
clc
push
add
mov
xor
sub
push
xor
xor
mov
cmp
mov
imul
push
adc
icebp
adcl
les
in
jb
push
inc
dec
inc
add
shrb
inc
je
mov
sbb
ret
dec
dec
mov
pop
into
aam
or
mov
sbb
ret
je
jne
pusha
hlt
mov
and
inc
mov
fs
in
outsb
xor
mov
inc
dec
ret
xor
inc
orl
or
pop
dec
ja
movsb
mov
xchg
inc
addr16
into
xor
mov
mov
stos
cwtl
addr16
das
test
dec
pop
test
lret
cmp
push
mov
sub
shlb
push
nop
inc
fucomip
jo
adc
loopne
fsubrl
mov
pop
in
or
xorb
push
ljmp
in
pop
fwait
inc
sub
loopne
mov
call
or
fsubl
adc
das
roll
xor
mov
cld
inc
jp
repnz
cmp
add
jo
xlat
adc
sti
fists
xor
repnz
mov
and
sbb
jle
lret
shll
mov
clc
ss
mov
std
xchg
pop
jbe
leave
repz
ss
int3
fsubrs
popa
jnp
push
adc
mov
inc
mov
test
jo
mov
fldt
leave
mov
pop
enter
jo
pushf
movsl
cmp
mov
xchg
jmp
xchg
xchg
mov
sub
lods
push
incl
stc
jp
xchg
push
mov
inc
xchg
sti
stos
or
pop
xor
inc
pop
adcl
ficoms
sbb
sub
rcrl
pop
out
cmp
aad
pushf
movsl
cmp
in
cmp
loopne
mov
enter
aam
shll
push
xchg
adc
popa
int3
arpl
add
mov
jo
mov
jge
les
jp
push
adc
nop
int3
jne
into
or
adc
inc
mov
mov
dec
jae
nop
xchg
ds
rclb
cmpb
shlb
movsb
push
jmp
sti
fsubs
dec
jne
mov
push
cmp
or
lds
leave
push
jge
loope
sub
mov
mov
repnz
xor
inc
dec
push
adc
je
sub
jae
push
movsb
lock
jl
add
int
jbe
cmpsl
cmp
cmp
push
popf
data16
int
xchg
jmp
add
ficoms
dec
je
cs
mov
sub
stos
ds
out
push
adc
jg
loopne
cli
mov
lds
ss
jae
xchg
pop
scas
adc
cmp
cwtl
shrb
mov
sub
je
xor
nop
lcall
nop
addb
enter
and
push
repz
cmpb
aas
in
dec
jns
int
fistps
adc
out
xchg
leave
mov
ret
add
cmpsb
sub
lods
jmp
in
xor
lahf
xlat
xor
test
out
cmpl
dec
aad
jnp
xor
fdivrs
loopne
pop
mov
lods
sbb
in
bnd
xor
or
push
jno
inc
or
shlb
mov
popf
pop
mov
jp
in
lock
adc
jle
lret
mov
das
sub
repz
jb
jg,pn
test
inc
aaa
mov
dec
test
push
clc
sbb
xor
repz
out
shl
pop
mov
int3
mov
pop
orl
pop
or
je
cmp
or
cmp
movsb
jl
pop
mov
ss
or
fimull
mov
jp
fcoms
iret
sbbb
fwait
pop
es
dec
inc
cmp
lahf
cmp
aaa
out
pop
scas
out
insb
pop
push
push
outsb
outsl
shlb
test
test
xchg
inc
or
fsubs
aam
ds
out
lahf
or
push
cmc
add
lret
aaa
outsl
jo
je
jo
mov
jl
xor
jle
jg
repnz
mov
mov
jno
pop
dec
bound
ljmp
adc
call
fldlg2
js
or
push
jb
cmp
sub
dec
cmp
test
mov
xchg
adc
cmp
dec
sbb
out
gs
pop
dec
mov
sbb
jbe
negb
sub
das
cs
fidivl
int3
rorb
rclb
xchg
lds
je
push
outsl
das
push
lahf
cmp
loopne
aam
sub
mov
cmpl
xor
dec
mov
xchg
stos
repz
out
repnz
call
and
repz
pushf
in
ret
or
inc
push
mov
jns
std
daa
mov
push
add
icebp
outsl
pop
push
xor
enter
call
ja
lock
cmp
fstpl
aaa
in
mov
shl
dec
sub
mov
push
sub
out
stos
mov
cmp
xor
jge
aaa
or
das
mov
inc
mov
loopne
ss
sub
push
xor
xor
mov
mov
add
and
xor
push
jecxz
pop
pushf
sbb
mov
orb
xchg
jne
add
push
push
out
inc
push
bound
push
sbb
push
lret
add
shll
add
sti
fcompl
mov
repnz
mov
cwtl
subb
imul
fs
inc
sub
hlt
into
cs
ret
movsb
and
jecxz
icebp
mov
mov
lea
inc
dec
insl
pop
inc
xor
stos
movsl
cmp
xor
repnz
insb
mov
in
cmp
xor
inc
xchg
pop
ja
and
pop
je
sbb
xor
adc
sti
jge
imul
ds
pop
xor
gs
sub
roll
addr16
cmp
outsb
mov
icebp
sub
xlat
mov
out
in
mov
daa
lcall
mov
lods
out
sub
pop
xchg
xchg
ret
adc
test
je
xchg
into
adc
in
outsl
lock
lret
mov
sahf
dec
outsb
jp
jmp
pop
and
dec
mov
pop
mov
fsubrl
xchg
pop
dec
push
popf
jo
xor
pop
cmp
pop
ss
scas
or
mov
test
data16
mov
push
jl
lea
leave
pop
pop
jmp
and
int3
cmpl
inc
lea
fists
inc
scas
mov
fdivl
jo
cmc
daa
imul
mov
in
mov
push
mov
pop
nop
jge
push
xor
mov
ja
clc
xor
rorl
adc
scas
add
xor
pop
xchg
inc
mov
outsb
call
pop
cmpsl
loopne
cmp
outsl
aaa
dec
xor
dec
dec
popf
int3
inc
outsb
jp
mov
pop
pop
pop
cmp
mov
addl
decb
fsubrl
movsl
mov
clc
pusha
add
xor
in
stc
or
xchg
fildll
imul
or
insl
add
pusha
mov
mov
jae
aas
xchg
push
jge
mov
stos
push
lcall
jo
sub
lret
pop
inc
mov
sbb
sbb
std
dec
jne
add
lahf
dec
je
in
mov
mov
js
mov
sub
subl
jg
test
jle,pn
xchg
inc
and
mov
xchg
hlt
push
cmp
inc
nop
mov
pop
push
xchg
push
add
inc
push
mov
lahf
sub
jge
ret
ja
std
add
xor
and
ja
mulb
cmp
mov
xor
xor
cmp
aam
mov
xchg
int3
repz
imul
cmp
lret
and
pop
in
jmp
adc
scas
hlt
rorl
cmpsl
aam
jl
sub
xlat
mov
out
xchg
test
add
jae
in
mov
mov
fwait
mov
push
test
mov
jmp
or
scas
cs
add
adc
cld
inc
push
add
xor
notb
clc
push
popa
push
test
mov
popa
aas
insl
inc
daa
ss
jbe
mov
insl
inc
in
fdivrs
bound
pop
adc
repnz
inc
xchg
xchg
add
lds
jg
xor
testl
mov
jno
adc
hlt
test
insl
pop
or
arpl
push
mov
xor
push
push
xchg
or
dec
jl
sub
fnstcw
mov
scas
mov
nop
inc
add
aad
push
stos
adc
cld
xchg
adc
scas
push
jg
dec
ss
or
add
out
sbbl
addr16
shrb
xchg
repz
decb
and
mov
mov
xchg
int3
xchg
jmp
ljmp
repz
push
sahf
mov
movsl
adc
orl
rcll
push
fnstcw
jl
jmp
arpl
mov
rolb
ja
ret
mov
dec
cmp
pop
ds
addr16
aam
mov
push
adc
inc
xor
pop
mov
lods
es
ret
cmp
cmp
mov
inc
mov
xchg
cs
dec
dec
add
mov
jnp
outsl
inc
dec
lret
out
or
adc
adc
cmp
insb
add
ja
xchg
insl
adcb
mov
jno
aas
sub
push
pop
push
add
add
and
pop
xor
mov
ja
cmp
adc
les
jecxz
fdivrl
inc
addr16
pop
push
repz
out
or
xchg
int3
jbe,pn
hlt
push
cmpl
pop
sbb
test
es
sbb
cmp
xchg
mov
mov
es
xchg
mov
loop
lods
mov
ret
and
scas
sarl
jge
jle
xor
jl
sub
mov
cmp
ds
mov
mov
push
fistpll
mov
xor
jb
inc
outsb
outsb
push
cmp
stos
das
imul
mov
adc
xor
add
or
or
sub
mov
inc
mov
es
dec
jl
jo
inc
mov
daa
in
push
push
jo
mov
test
push
dec
xlat
mov
mov
mov
aad
stos
in
jp
and
mov
adc
mov
dec
or
mov
lahf
das
dec
in
inc
push
inc
mov
push
gs
and
cmp
rol
xor
inc
add
or
das
insb
adc
xorl
addr16
insb
push
mov
mov
cmp
push
cmp
adc
dec
out
inc
jb
cld
inc
enter
out
ss
movsl
mov
jnp
adc
cmp
stos
les
cmp
adc
sub
xor
adc
xor
shrb
lcall
shrb
loopne
inc
pop
aaa
xchg
pop
mov
cmp
test
cmp
je
pop
sub
cmp
jne
test
and
xorl
xorb
add
adc
adc
out
sub
pop
inc
inc
insl
add
sbb
sub
adc
push
loopne
push
jl
adcl
xor
xchg
push
mov
cmp
sbb
leave
push
jne
lds
rcrb
mov
jno
inc
sbb
mov
scas
push
fsubrl
inc
mov
das
daa
in
out
lea
addr16
push
xorb
stos
nop
enter
sti
add
push
mov
dec
mov
jne
ja
frstor
xor
mov
inc
lods
sub
inc
mov
xchg
cmp
dec
pop
in
insl
scas
push
or
or
and
dec
inc
jmp
cltd
dec
std
sbb
jns
pop
add
pop
sbbl
out
jbe
or
scas
push
inc
gs
popf
shll
sbbl
imul
cmp
cld
jg
mov
mov
popa
sbb
cs
mov
jo
sub
outsl
fildl
push
cmp
int
mov
in
sub
mov
sub
and
cmp
sub
pop
xor
jnp,pn
adc
xchg
lcall
lock
test
pushf
xlat
mov
mov
and
es
test
cmp
or
mov
out
mov
aas
jnp
daa
mov
in
mov
cmpsb
xchg
shrb
mov
insl
ficoms
add
jg
pusha
inc
sub
pop
shl
xchg
pop
mov
mov
in
call
and
cltd
addr16
xchg
fidivrs
cmc
cmp
cmpsb
repnz
add
repz
jle
fsqrt
imul
xor
mov
pop
lods
lods
mov
hlt
sarl
inc
jp
push
in
adc
and
adc
jae
aas
and
aas
les
in
push
and
push
lret
mov
inc
mov
cmp
test
mov
out
movb
xor
cmp
mov
aas
inc
rorb
cmp
xchg
addr16
aas
cmpb
jno
jmp
mov
pop
xor
dec
movsb
xchg
fistpll
inc
mov
stos
lods
jbe
and
push
ja
xchg
addb
out
insb
cmp
pop
fs
jo
sbb
pop
enter
fsubl
insl
sbbb
push
inc
mov
das
jne
pop
sub
xchg
hlt
sub
xchg
sbb
les
fsubl
adc
orl
repnz
mov
sahf
lock
xchg
movsb
js
mov
adc
mov
mov
or
mov
cmp
mov
pop
cmpsl
mov
adc
dec
and
notl
or
imul
dec
dec
xor
pop
sbb
arpl
xchg
add
in
test
mov
mov
cmp
push
pop
sbb
mov
das
pop
push
mov
adc
pop
enterw
arpl
mov
mov
push
xchg
mov
push
jl
mov
mov
jnp
sub
outsb
jo
js
add
xor
cmp
mov
insl
sahf
sahf
push
sub
sarl
xor
adc
adc
push
jge
dec
mov
mov
je
je
mov
xchg
mov
push
cmc
mov
notl
nop
sbb
dec
pop
fbstp
push
mov
cltd
clc
mov
mov
and
inc
test
mov
jl
cld
int3
adc
xor
jb
mov
dec
cmp
cs
int
push
pop
xor
pop
repnz
jb
sahf
sbb
ret
cmp
add
es
xchg
jb
xchg
mov
loope
cmp
cmc
jb
fsubp
jecxz
lds
xor
repnz
xlat
mov
mov
xor
xchg
js
push
cmp
pop
mov
inc
sub
scas
shrl
fildll
xor
test
xchg
and
test
pop
jnp
mov
mov
test
pop
popf
pop
mov
xchg
ljmp
xchg
push
js
fsubs
ror
jo
mov
sarl
fisubs
pushf
and
ss
mov
dec
mov
mov
enter
push
xchg
push
test
sub
mov
pop
es
mov
or
jmp
dec
cld
mov
aad
stos
jne
inc
ljmp
aaa
in
cmp
mov
mov
pushf
pop
push
push
sub
je
add
in
pushf
push
ret
jle
pop
jns
cld
or
es
pop
mov
mov
int
xor
into
adc
jge
out
lea
mov
into
or
scas
jne
jno
xchg
push
loop
test
out
lock
jb
scas
addr16
in
add
repz
push
lret
inc
inc
nop
or
sbb
ss
enter
test
and
mov
jne
lock
xor
adc
jp
pop
xchg
inc
popf
mov
fcoms
filds
dec
jb
jge
sbb
insl
cmpsl
add
xor
cmp
mov
adc
sbb
mov
pop
add
test
out
aas
cmp
jl
lds
fcmovu
xor
cltd
pop
mov
insl
and
and
in
xor
jae
cmp
shlb
cltd
decl
movb
lds
sub
loopne
aaa
xchg
push
jbe
test
jg
xor
lea
add
test
add
jne
sub
loope
jae
mov
xor
mov
cmp
pushf
addr16
lahf
pop
scas
call
push
pop
cld
ror
and
idivb
rclb
mov
adc
test
add
jl
arpl
jns
mov
jl
cmpsb
cmp
mov
add
or
outsb
les
int3
fwait
mov
adc
sub
cvtps2pi
xchg
mov
fmul
push
mov
adc
push
pop
add
jne
pop
xor
xor
fldcw
adc
xchg
lret
mov
mov
sub
aaa
jb
bound
inc
jb
mov
or
xor
jg
adc
jne
dec
push
add
std
and
and
jne
dec
shlb
scas
push
xchg
jle
pop
aam
shlb
int3
push
mov
adc
push
or
fcoml
sub
mov
movsb
mov
xchg
sbb
xor
jg
fisubl
xchg
cmpsb
adc
xchg
mov
jl
mov
jecxz
and
sbb
test
dec
aad
cmpsb
mov
adc
push
xchg
into
sub
mov
xor
pop
cmc
test
sbb
lahf
in
outsl
cmp
adc
inc
adc
mov
sub
or
jmp
pop
inc
test
jp
mov
int3
cmc
rcrb
shrb
out
cld
sub
push
in
mov
sbb
rolb
jno
inc
mov
push
popf
int
es
sub
addb
jbe
mov
jge
lea
stos
test
or
mov
or
mov
fcompl
insb
fists
ret
push
jmp
adc
sbb
mov
sbb
push
adc
ja
negl
cmp
or
cmpsb
adcl
neg
or
pop
jae
adc
out
and
jne
add
and
xor
bound
outsl
and
xor
mov
or
mov
inc
aas
pop
adc
or
pop
lahf
xor
jg
inc
inc
imul
imul
jnp
call
push
cli
push
ss
push
adc
into
cmp
push
mov
pop
inc
sbb
dec
jb
push
xor
push
dec
xchg
push
pusha
rclb
insl
sbb
inc
or
ljmp
fsubs
jb
std
cmp
mov
and
sub
mov
add
xor
or
mov
mov
pop
mov
ss
and
xor
xchg
ds
adc
cmp
outsl
cmp
mov
xor
mov
sub
xor
gs
inc
pop
inc
out
pushf
add
cmp
rcl
xor
adc
in
add
rcll
push
shrb
loope
std
ds
nop
and
cld
or
and
negb
aas
lods
xor
cmp
sub
mov
xor
xor
dec
dec
jnp
add
mov
ja
rcl
xor
dec
sbb
lods
push
or
ja
movl
mov
sti
scas
faddl
push
scas
xor
ss
add
lret
xor
out
fucompp
sub
push
mov
pop
test
pop
push
adc
lock
ss
hlt
mov
daa
cmp
xchg
xchg
pop
aas
jo
clc
cmpsb
test
push
addr16
lret
sub
cmp
je
dec
adc
dec
pop
mov
clc
xchg
cmpsb
mov
fsubl
mov
sub
xchg
lods
movsl
sub
ret
imul
add
insl
inc
pop
jno,pn
out
and
sub
mov
push
outsl
inc
jno
cmp
loopne
pop
inc
cs
repnz
mov
push
pop
and
shlb
outsl
xor
push
out
das
add
or
add
das
jl
inc
fwait
lods
dec
mov
xchg
push
add
int
mov
inc
dec
inc
into
mov
xor
cmpsb
outsl
data16
or
mov
outsl
or
mov
xlat
mov
push
mov
ss
mov
lods
lods
jge
movsb
adcb
out
test
add
sub
pop
sub
mov
daa
fists
incb
dec
xchg
nop
lret
and
data16
leave
dec
inc
pop
repnz
mov
stos
mov
pusha
mov
pushf
mov
mov
xchg
rcrb
add
mov
scas
xor
xchg
mov
inc
inc
dec
xor
cmc
xor
add
scas
jg
mov
cld
cs
mov
fs
pop
mov
inc
clc
pop
dec
rolb
pop
das
dec
push
or
xchg
pop
imul
repz
cmp
xchg
and
mov
jnp
mov
sub
lea
push
test
sub
les
cmpsl
push
xor
rep
xchg
push
sbb
sub
cli
int
and
pop
andl
fisubrs
jno
xor
clc
push
call
aaa
cs
jg
jb
daa
sub
sarb
clc
ja
jne
cmp
inc
xchg
out
cmp
lock
sbb
push
or
mov
mov
inc
and
insb
fs
push
ja
pop
push
pop
fdivl
out
pop
adc
stos
in
cmp
fistpl
jecxz
imul
xor
xchg
imul
sub
repz
gs
fldt
and
xchg
sbb
negl
cmp
jmp
jl
inc
pop
jb
pop
into
and
nop
mov
mov
repz
test
cs
in
xorl
pop
dec
xor
push
pushf
mov
push
inc
jg
cmp
inc
pop
sub
pop
xor
inc
adc
lret
pop
sub
and
ficomps
jl
icebp
fcomps
js
insb
rep
mov
mov
xlat
lret
sbbl
mov
ret
inc
cmp
or
cmp
gs
pusha
hlt
mov
repz
xor
inc
mov
xor
mov
mov
loopne
stos
pop
mov
xor
mov
cmp
mov
outsl
mov
scas
insb
mov
xor
shlb
xchg
decl
inc
push
adc
out
lods
sbb
xchg
lods
add
insb
jne
jle
xor
and
sub
mov
push
push
dec
ja
in
bound
cld
idiv
scas
xchg
iret
and
push
jl
out
aas
das
sarb
test
cmpsb
mov
pop
sub
fnstenv
not
xor
out
into
test
pushf
jge
xlat
jmp
jnp
mov
pusha
loopne
sub
leave
divb
mov
push
scas
nop
jnp
add
sub
mov
cmp
mov
fdivrl
sub
mov
bound
jne
xchg
fisttpll
loope
sub
popa
mov
and
pop
out
add
jl
bound
mov
inc
jp
pushf
push
sub
es
and
lods
iret
push
insb
inc
sahf
mov
jb
jo
jl
adc
jle
stc
pusha
icebp
push
mov
lahf
mov
das
jno
dec
mov
mov
sub
and
mov
faddl
fcoms
push
addl
aaa
int3
out
sti
incl
in
hlt
inc
rcl
in
lea
repnz
inc
adc
inc
push
aam
lret
and
jns
test
cmp
xorl
jnp
inc
out
cmpb
stos
xor
clc
orb
add
xor
push
stc
lock
adc
popa
xor
xor
dec
das
add
xor
adc
icebp
ss
mov
sub
insl
add
in
dec
push
mov
int
xor
xor
lea
inc
pop
ljmp
or
or
repnz
pop
pop
pop
xor
lods
adc
mov
mov
dec
cmp
loop
lock
cltd
or
jb
add
imul
pop
pop
das
scas
movsb
mov
sbb
sub
or
sbb
sbb
push
pop
hlt
sub
mov
dec
push
adc
stos
push
dec
adc
insl
mov
outsb
mov
hlt
daa
dec
outsl
sbb
insl
mov
xchg
outsb
sbb
jb
mov
in
push
sub
aas
inc
sub
dec
pop
adc
add
and
test
repz
movsl
xor
xor
add
ret
mov
cmp
aad
or
sbb
xchg
adc
lds
dec
mov
mov
les
fisttps
ret
jo
pop
inc
jl
je
inc
mov
add
jecxz
lds
sub
push
les
out
pusha
adc
xor
mov
mov
sub
inc
aas
jg
loope
loopne
add
into
lods
jb
leave
sbb
loop
lea
in
sub
sub
jns
pushl
cli
outsb
pop
dec
or
shlb
or
push
lcall
rcrb
rcrl
mov
push
fcmove
pop
cmpl
out
aam
adc
jg
das
adc
and
pop
outsl
xor
lods
je
sarl
pop
pop
sub
xor
sti
jb
pop
inc
aas
jg
adc
and
mov
inc
cmp
or
mov
jo
adc
lods
xor
mov
inc
inc
xchg
je
or
and
aaa
iret
fmull
pusha
cmp
xchg
push
ss
in
imul
jge
xor
xchg
sbb
and
je
pop
inc
pop
mov
xchg
nop
aaa
loopne
in
call
insl
repz
pop
jle
loope
sub
mov
jo
pop
mov
inc
sub
imull
push
orl
mov
push
int3
or
add
in
cmp
sub
scas
cmp
lds
outsb
sub
or
add
subb
cmp
and
jle
mov
cmc
aad
push
stos
sub
inc
xor
xor
ss
cmpb
das
cmp
ja
addr16
jno
push
xlat
loopne
insl
jbe
pop
jo
mov
imul
sbb
jge
sbb
jl
cmp
xlat
pop
cmp
and
je
inc
adc
shlb
stc
cmp
push
mov
or
adc
pop
mov
fisubrs
or
sahf
xor
xchg
pop
adc
xor
mov
fwait
outsl
addl
das
xor
pop
xor
cli
add
xlat
outsl
mov
and
mov
je
push
mov
mov
push
xchg
inc
sub
lea
jns
aaa
popa
test
mov
or
and
enter
mov
hlt
out
mov
sbb
mov
jmp
push
mov
mov
scas
xchg
xchg
mov
cmp
add
repz
mov
cmpsb
cmpsb
xor
jns
loop
dec
je
pushf
inc
dec
je
dec
jo
fs
les
push
mov
fldt
lea
cmp
ret
ljmp
ljmp
jb
sbb
aas
test
aas
ss
push
inc
sub
leave
fdivl
adc
xchg
clc
mov
sahf
je
rcll
xchg
mov
mov
push
xor
jmp
out
fldenv
insl
dec
or
dec
movsl
mov
movsl
ret
pop
push
push
mov
mov
jl
outsb
jle
mov
pop
cwtl
xor
jl
loope
out
frstor
add
adc
das
jns
jb
push
mov
dec
mov
pushf
in
jne
adc
filds
xchg
xchg
xchg
enter
in
cmpsl
mov
xchg
js
and
inc
out
and
js
pop
pusha
mov
lea
xchg
mov
daa
jne
add
xlat
stos
ret
insl
aas
push
push
xchg
jmp
dec
pop
mov
mov
es
out
sub
xor
ss
inc
dec
pop
cs
mov
pop
push
mov
sbb
movsb
cmc
scas
stos
xchg
push
fiadds
pop
push
out
and
mov
mov
xor
xchg
cmp
push
mov
imulb
mov
cwtl
inc
dec
ret
stos
sub
add
das
insl
xor
sbb
jae
mov
cltd
dec
xor
mov
adc
aaa
ja
shll
add
divl
in
push
mov
fldenv
mov
lods
dec
push
lahf
je
add
insb
xchg
je
or
andb
in
rcrb
cmp
mov
xor
push
outsb
cld
xor
jecxz
in
mov
xchg
mov
xlat
rcrb
cmp
popf
mov
add
push
ja
push
inc
movsb
jg
inc
inc
fidivl
cmp
sbb
adc
add
aaa
mov
testb
mov
sub
fisubrs
adc
dec
sbb
in
dec
leave
mov
cli
jp
mov
mov
and
mov
in
jae
inc
fsubl
adc
add
mov
jg
cmpl
inc
mov
push
ss
sub
mov
mov
pop
movsb
inc
mov
repz
adc
movsb
inc
movsb
dec
push
push
or
inc
cmp
aas
mov
cmp
xor
test
mov
mov
inc
push
xor
ds
sbb
cmc
loop
or
in
lds
add
les
and
imul
pusha
popa
in
scas
or
mov
xor
aaa
pusha
pop
cmp
fstpl
push
clc
push
sbb
pop
mov
and
and
or
xor
cmp
sbb
scas
ret
leave
sbb
mov
jmp
dec
xchg
xchg
mov
adc
shll
aaa
insb
mov
clc
inc
jno
aad
dec
xchg
sub
add
leave
sarl
fwait
inc
mov
sti
jmp
sbb
js
pop
xchg
xor
test
push
push
xor
cld
insl
repz
pop
rcr
out
jl
xor
adc
setbe
pop
in
fwait
cmpsl
mov
sbb
or
pop
mov
sbb
insb
mov
mov
leave
inc
xchg
sub
lds
gs
push
call
test
push
xor
imul
out
and
jp
push
mov
fs
add
nop
cmp
and
pop
cmc
daa
ret
cmp
sbb
jp
popa
loopne
inc
jmp
add
push
js
rcrb
ja
addl
push
out
inc
adcl
in
aam
enter
adcl
ja
mov
inc
inc
dec
push
testb
jne
dec
and
jge
xchg
add
jo
in
mov
popa
outsl
lcall
mov
adc
xchg
cmc
cwtl
sbb
imul
insb
adc
pop
in
jne
push
adc
inc
leave
pop
push
pop
pop
sbb
and
movsb
aaa
aas
leave
in
ds
stos
sarb
push
adc
dec
mov
cmc
iret
cmp
ds
imul
jb
sub
clc
subl
fsubrs
insb
dec
and
subb
adc
xchg
cmp
pusha
outsb
addr16
jbe
hlt
mov
test
pop
xchg
and
je
xor
mov
clc
sub
dec
push
mov
mov
push
jo
mov
scas
psubusb
jmp
lods
adc
push
mov
or
push
pop
les
stos
imul
test
dec
ds
fsubs
adc
jb
cmp
stos
aas
inc
mov
jno
cmc
jg
inc
pop
dec
add
fnsave
mov
mov
pop
xor
xor
jp
xlat
pop
add
inc
insb
mov
bound
sub
mov
mov
jl
push
insb
pop
mov
adc
push
ret
push
jp
mov
xor
and
push
sub
repz
lods
push
jge
aas
push
fdivrl
sahf
push
xor
jge
imul
inc
pop
mov
dec
stc
adc
inc
dec
aas
push
repnz
mov
or
hlt
gs
aam
cs
push
pop
bound
xchg
in
sbb
popf
fimuls
push
fs
and
or
pop
in
push
je
into
inc
push
das
lock
push
cmp
adc
inc
fmul
pushf
push
aaa
cmp
or
je
mov
lock
test
aam
ret
in
insb
enter
leave
test
lds
xchg
adc
popa
scas
mov
icebp
lods
int
cmp
lods
int3
mov
ss
push
mov
movsl
mov
adc
lret
outsl
movsb
sub
sub
pushf
das
pushl
push
pop
lods
pop
push
sarb
out
in
popa
xchg
cmp
das
fdivl
cmpsb
sbb
mov
xchg
xor
inc
xor
mov
shrl
mov
movsb
lock
xchg
repnz
mov
sub
mov
jne
xor
lods
and
das
dec
hlt
shlb
movsl
mov
adc
rep
xchg
xchg
push
in
addb
cmp
hlt
mov
sub
mov
imul
lods
call
pop
stos
jo
int3
cmc
loopne
mov
popf
xor
push
dec
leave
or
xchg
je
lds
lock
push
or
adc
and
sbbl
mov
fs
pop
mov
mov
fdivrs
movsl
sbbb
adc
nop
aas
loopne
repnz
sbb
mov
hlt
and
jl
ret
rcll
testl
in
sbb
repz
lods
stos
jle
mov
loopne
jne
jp
and
pop
add
inc
adc
push
sub
sbb
dec
inc
jl
and
cmpsl
pop
jl
pop
adc
mov
jge
les
sbb
cmp
push
hlt
sub
xchg
cs
icebp
push
cwtl
int
xchg
mov
or
imull
inc
inc
in
jns
movsb
nop
jb
pop
adc
mov
push
lea
cmp
add
mov
andl
in
xchg
test
aas
pop
ret
dec
cmp
mov
lahf
jbe
lods
rcr
xchg
out
or
cmp
addr16
sub
int3
pop
cmpsl
push
ljmp
loope
xor
repnz
mov
test
aas
call
jbe
scas
nop
mov
push
pop
pop
push
dec
dec
outsb
clc
mov
mov
movsl
xor
inc
or
mov
xor
xor
dec
stos
popa
push
rcrl
cmp
add
adc
ret
sbb
inc
jns
push
mov
sbbl
inc
or
adc
lock
pop
jnp
cmp
jg
jge
in
lahf
push
mov
mov
sbb
pop
lret
movsl
daa
or
js
and
xchg
test
xchg
sbb
jae
jne
in
fs
mov
gs
dec
inc
mov
inc
nop
dec
rolb
daa
jle
and
mov
imul
sub
sub
es
xchg
sarl
xor
pop
pop
or
adc
mov
adc
and
jecxz
in
in
add
insb
dec
pop
jno
xor
cmpsb
jle
xor
cld
gs
iret
scas
hlt
mov
dec
outsl
sub
cmovg
inc
icebp
fwait
and
cmpsl
inc
sub
mov
mov
insb
xorl
mov
movsb
mov
mov
fisubrs
sar
dec
leave
mov
pop
mov
push
mov
test
add
sbb
icebp
push
sahf
sbb
cmpl
imulb
xchg
and
cltd
rorb
xchg
shrl
adc
roll
fcoml
push
push
mov
loopne
test
cmp
xor
sti
push
pause
rorb
pop
sub
pop
addr16
sub
cmove
jecxz
or
sbb
xor
in
das
mov
fnstsw
mov
js
xchg
sub
subl
in
pop
cmpsb
scas
push
out
mov
jp
jl
mov
outsl
mov
lret
outsb
insb
js
hlt
pop
inc
jns
dec
cmpsl
mov
in
adc
testb
adc
les
test
ficoms
jge
roll
jno
mov
and
cmp
cmp
xor
jno
inc
fisttps
test
repz
and
mov
daa
mov
fwait
adc
push
mov
cmc
popf
out
sub
pop
fs
and
leave
test
addb
sbb
stos
ficompl
or
adc
das
pushf
sub
test
xchg
js
mov
outsl
mov
hlt
roll
enter
jle
rorb
mov
cmp
loope
hlt
inc
call
mov
mov
hlt
mov
push
hlt
cld
mov
aam
xchg
push
push
add
loopne
addl
hlt
mov
dec
mov
cmp
int3
lea
adc
mov
addr16
sarl
xchg
fucom
jns
dec
inc
cmpsb
mov
push
xchg
iret
push
mov
mov
cmpb
mov
adcl
les
pop
cmp
mov
aam
movsl
push
xor
xchg
int3
imul
aad
cmp
mov
cmp
adc
adc
inc
inc
inc
fmull
mov
or
ljmp
jg
dec
aaa
dec
mov
shlb
xchg
inc
popa
sti
dec
mov
xchg
int3
lahf
lods
jg
fst
aaa
inc
inc
dec
gs
enter
sub
mov
push
xor
xor
hlt
dec
mov
loope
adc
jl
mov
mov
inc
cltd
lea
ds
dec
pop
jp
mov
xchg
jo
pusha
jmp
pop
push
pop
add
mov
cmp
jbe
mov
sbb
adc
sti
lds
jecxz
adcl
mov
pop
xchg
xor
test
xchg
scas
jb
jp
cld
cmpb
jb
mov
lret
mov
add
leave
rcl
hlt
add
push
in
aam
rorb
mov
test
cs
dec
mov
push
test
jp
sar
xchg
insl
push
call
xor
mov
inc
aam
push
pop
jp
ds
adc
in
cwtl
scas
les
bound
dec
mov
push
mov
hlt
adc
call
cli
xchg
das
das
std
pop
stc
hlt
sub
inc
out
and
or
enter
shll
push
cmp
loop
jle
into
cs
sbb
push
bound
jns
das
popf
cmp
mov
adc
movsl
stos
bound
mov
fmull
lock
pop
inc
sub
das
pop
mov
sbb
dec
jno
jecxz
push
jl
cmp
push
xchg
adc
movsl
sub
leave
cmpsb
pop
and
hlt
stos
vpaddusw
nop
addl
add
out
jp
inc
mov
nop
add
sbb
xor
cmpsl
sbb
adc
cmp
inc
push
inc
mov
das
mov
adcb
pop
pop
fsubl
inc
enter
mov
mov
cli
jo
inc
dec
add
sub
pop
pop
mov
jno
pop
adc
dec
imul
mov
test
lods
pop
mov
dec
add
lods
push
test
arpl
lahf
mov
out
inc
adc
and
dec
xchg
nop
inc
adc
into
jb
cmp
mov
nop
xor
ds
pop
jb
mov
js
pop
testl
cmp
lods
pop
cs
aas
or
je
xchg
pop
scas
xchg
jle
xchg
test
pop
loop
hlt
push
jne
push
mov
decl
addl
ret
xchg
dec
orl
dec
mov
sbb
int
cld
inc
and
in
jle
fistpll
in
lods
sbb
and
jo
add
arpl
dec
pop
pushfw
insl
sub
das
in
fs
xchg
xchg
testl
sub
xor
fdivl
mov
cmp
mov
mov
mov
sbb
ljmp
sbbb
xchg
add
test
dec
sbb
jo
in
push
mov
popa
data16
movsl
mov
push
adc
ds
gs
repz
mov
cmp
adc
jg
push
int3
push
sub
sub
inc
clc
jnp
es
insl
jmp
dec
xchg
cmp
jno
sbb
xor
call
push
push
xchg
insb
enter
push
jne
fstl
hlt
pusha
outsl
mov
outsb
cmp
lds
xor
popa
lock
call
ss
or
cmp
mov
pop
sbb
lock
xor
test
nop
into
ja
pop
inc
fs
add
clc
inc
cld
aaa
mov
xchg
pop
add
jl
mov
jp
cmp
jge
adc
dec
fadds
imul
lea
rcrl
xchg
jbe
fmul
mov
jecxz
xchg
xchg
inc
dec
aam
jno
push
out
shl
pop
bound
das
ret
cmpsl
aam
mov
jle
mov
pushf
js
lret
movb
inc
push
lods
je
movzbl
jg
dec
mov
xor
pop
mov
stos
jb
add
idivl
pusha
bnd
inc
mov
dec
or
jge
xor
sub
pop
dec
pop
mov
jmp
addb
es
jp
xchg
xor
subb
dec
mov
or
add
mov
cmpsb
push
xchg
mov
sub
mov
sub
pop
inc
add
adc
call
cmpsb
cmc
lock
hlt
sbb
or
mov
adc
or
mov
sbb
inc
data16
scas
ds
andb
pushf
sbbb
pusha
aas
cmp
inc
cmp
push
jno
ds
lea
adc
cmp
and
aaa
push
cmp
sbb
popa
iret
scas
rorb
and
scas
ja
daa
mov
add
mov
pusha
jecxz
sub
mov
out
mov
mov
aaa
adc
fdivl
out
aas
sbb
mov
jo
out
mov
add
fsts
cmp
inc
adc
adc
in
popa
lods
jnp
imul
or
and
arpl
ds
xor
scas
movd
xchg
mov
xor
cmp
mov
pop
jno
xor
jnp
or
aaa
xorb
ljmp
stos
adc
cmp
insl
push
out
pop
aaa
mov
pop
out
mov
mov
pop
mov
jne
pop
sahf
lahf
lods
ret
popf
cmp
mov
cwtl
cmpl
sub
sub
push
addr16
rclb
inc
adcb
andl
mov
pop
add
bound
and
inc
mov
jne
xor
jge
dec
insb
pop
cld
cmp
mov
inc
in
sub
sahf
push
test
mov
cmp
inc
xor
out
xabort
std
out
and
push
xor
push
and
push
aaa
cwtl
jnp
dec
mov
and
xor
push
mov
sub
inc
jnp
cltd
je
hlt
bound
xchg
inc
inc
push
test
xor
lods
call
ret
js
xchg
insl
shrb
shlb
inc
cmp
out
mov
cmp
dec
js
sub
xchg
push
arpl
mov
xchg
lea
push
fimuls
xchg
xchg
mov
xchg
add
nop
add
cld
pop
cmp
call
pop
cli
push
inc
lret
pop
and
xchg
movsb
pop
adc
jle
aad
push
xor
mov
push
lods
jb
jecxz
stos
int3
inc
sahf
inc
add
test
or
and
addb
mov
fs
fs
adc
mov
pop
outsl
inc
sarl
cmp
push
js
cmpsb
rorl
jge
dec
aas
int3
adc
xchg
jecxz
cmp
jg
roll
sub
cmp
adc
stos
js
repz
stos
jo
clc
mov
std
data16
and
sbb
inc
dec
test
add
scas
sub
stos
mov
ss
std
and
cmp
xchg
and
push
test
movsb
adc
push
les
jmp
pop
stos
jb
fisubrs
mov
lods
sub
adc
cmp
das
fstl
cmp
inc
sahf
movaps
testb
jge
lods
imul
xor
test
push
pop
xor
sbb
sbb
push
popf
insb
insl
scas
xor
mov
js
out
adc
xchg
jo
or
xor
lret
subb
cmp
inc
xchg
pop
or
leave
je
jb
mov
xor
jb
mov
std
aas
or
aaa
mov
daa
mov
pushf
fs
mov
xchg
dec
aaa
addr16
movsl
pushf
dec
sbb
push
xchg
jge
lods
xchg
pop
mov
cmp
adc
ret
movsb
jg
xor
mov
mov
roll
xchg
mov
add
jmp
mov
mov
sub
dec
mov
hlt
dec
movsl
test
popf
ret
mov
dec
das
push
add
mov
shl
aaa
clc
cld
sub
jo
call
inc
cltd
push
pop
cli
fwait
mov
imul
jbe
fisubs
lock
mov
jmp
push
xchg
push
xor
pop
cmp
stos
das
pop
fisubrl
stos
cld
push
scas
push
das
adc
addb
sub
pop
mov
cmp
adc
lcall
mov
insl
leave
lcall
sub
scas
jl
mov
sbb
ja
ficompl
sti
cmp
popa
inc
movsl
jb
mov
dec
aaa
push
jl
mov
in
je
stos
jle
mov
shrl
mov
push
jle
mov
push
stos
aas
out
adc
mov
jno
add
push
stos
mov
iret
leave
xchg
adc
add
mov
xor
ss
cwtl
in
dec
jge
xor
sub
mov
and
jbe
adc
sub
lods
sti
fimull
fcomi
pusha
or
dec
das
mov
adc
inc
and
test
xchg
xor
inc
je
jle
mov
lods
gs
pop
pusha
push
movsl
out
mov
leave
shr
mov
jge
cmp
and
int
hlt
pop
scas
or
in
push
xor
inc
xor
xchg
jl
sub
jg
dec
sub
repnz
pop
sbb
cld
dec
jb
cwtl
ss
cld
int3
xor
and
lret
mov
dec
add
decb
cld
jle
adc
xchg
sub
stos
dec
dec
and
and
mov
pop
dec
xor
pop
inc
les
jae
mov
int3
inc
cmpl
sti
mov
mov
push
or
repnz
jb
mov
pop
dec
dec
xchg
xchg
addl
mov
xchg
fistpl
aad
jl
dec
dec
inc
daa
mov
jo
outsb
clc
ds
rorb
push
cltd
pop
jb
ret
mov
jne
xchg
fnstenv
repnz
adc
pusha
mov
mov
mov
xchg
in
jno
push
or
std
jne
cmp
or
and
jge
loope
or
dec
xchg
lahf
das
movsl
les
pop
mov
push
xchg
cmp
cmpsl
pusha
jno
nop
fsubrp
mov
mov
int
pop
dec
lock
jb
and
addl
fidivrl
pop
das
cmp
sbb
call
pop
jmp
int3
stc
scas
pop
lret
jecxz
cmp
xor
fcoml
fcompl
cs
stos
fcomps
push
jg
dec
je
sahf
push
sbb
sbb
dec
ret
xor
sub
lds
loopne
push
push
addr16
jb
das
jl
fidivl
les
sub
inc
jp
push
add
dec
mov
out
in
jp
sub
mov
push
fidivl
mov
lock
aaa
push
add
inc
dec
pop
sub
ds
lock
jo
loop
xchg
push
shlb
add
sbb
scas
adc
out
stos
adc
mov
mov
mov
xor
cmp
add
imul
jg
shl
test
shlb
mov
adc
fcoms
add
jnp
sbb
insl
in
mov
cs
inc
sub
lea
sbb
sub
lods
add
jmp
sti
das
nop
jo
jns
mov
ds
mov
sub
push
xchg
shlb
mov
xchg
xchg
mov
aaa
xor
imul
pop
and
pop
int
jmp
jp
mov
xor
inc
dec
xchg
ret
xchg
push
dec
jno
lock
inc
xor
mov
je
lahf
ss
lret
cmp
stos
aas
ja
mov
xchg
lcall
sbb
notl
dec
lods
js
fwait
lock
ljmp
inc
adc
jge
sbb
sbb
jge
shrb
jbe
xchg
push
arpl
adc
fdivl
jp
sub
sbb
sbb
mov
cmpsb
push
aam
push
sbb
cwtl
mov
sub
and
outsb
mov
cld
in
test
sti
jae
in
mov
pop
sub
sbb
adc
inc
cmp
jo
dec
les
dec
xor
test
incl
hlt
add
jne
jp
into
cmpl
bound
mov
ja
pusha
mov
jo
mov
repnz
adc
xchg
fsubl
push
cmpl
addr16
push
cmp
imul
xor
push
je
push
mov
cmpl
outsb
push
testb
fs
jb
ror
xor
pop
test
mov
fsub
sbb
xlat
lds
or
xchg
movsb
mov
sub
push
test
add
jle
jae
dec
ds
cmp
adc
jnp
xor
adc
cmc
jo
dec
inc
test
mov
mov
aas
daa
mov
dec
mov
xor
bound
add
or
mov
inc
push
adc
fstpl
test
jno
and
nop
xor
xchg
lods
cmc
mov
inc
xor
inc
in
and
xor
aas
jl
or
sbbl
jno
test
push
rclb
mov
push
and
mov
dec
pop
mov
es
sub
stos
xor
cmc
int
jp
ret
jmp
inc
mov
lods
movsl
rcll
insb
xchg
xorb
or
insl
xor
mov
insb
test
pop
push
mov
adc
aaa
adc
mov
xor
jnp
add
mov
mov
inc
xlat
xchg
xor
fadds
and
ja
dec
inc
mov
shl
jne
pusha
cs
add
push
cmpsb
xor
shr
cld
out
aad
ja
enter
orl
shlb
mov
cmc
fwait
loop
sbb
mov
add
scas
rcr
roll
adc
ss
ss
jge
fdivrs
mov
cmp
mov
add
inc
testb
inc
pushf
push
in
pop
xor
push
sub
pop
mov
jnp
mov
inc
jns
cmp
mov
mov
pop
sbb
out
das
xor
sbb
or
xchg
sub
mov
dec
push
adc
mov
add
mov
jb
pop
adc
negl
add
pop
std
lods
mov
aad
and
test
mov
push
xor
jb
aam
bound
jns
jmp
mov
dec
ds
mov
aaa
out
in
sbb
xor
add
je
xor
addl
push
data16
outsl
cwtl
ret
push
fstpt
xor
mov
sub
out
aaa
adc
and
xchg
mov
push
add
std
inc
test
pusha
sahf
push
jae
mov
jns
jge
push
movsl
sbb
mov
push
sub
insb
sub
mov
testl
in
lret
test
int3
idivb
sub
pop
mov
push
mov
inc
add
mov
pop
lock
in
push
add
mov
mov
pop
jg
fidivl
sti
mov
push
sub
sub
das
or
adc
jg
xchg
and
fisubrs
rcl
shlb
mov
sbb
mov
adc
sbb
enter
xchg
dec
idiv
add
adcl
cmp
imul
clc
xor
pop
inc
sbb
sti
sub
ret
or
jle
inc
gs
out
jbe
sub
daa
and
add
test
push
test
icebp
pop
push
aaa
test
push
repz
jecxz
in
jno
inc
push
jnp
push
cmp
imul
jbe
popa
or
sub
xchg
inc
jl
sub
xor
insb
and
aas
and
loopne
mov
xorl
sub
shll
mov
mov
int
xor
mov
shlb
stc
xchg
add
cmp
xor
in
out
test
mov
pop
jle
mov
mov
iret
push
hlt
aaa
adc
push
push
sbb
dec
add
sbb
cmp
cmp
sbb
cmp
jmp
shrl
lcall
pop
sub
mov
mov
inc
adc
arpl
lods
push
xor
mov
insb
repnz
lods
repnz
fdiv
ja
lock
andl
dec
push
mov
jle
xchg
xchg
mov
adc
adc
jno
call
cmp
xor
mov
test
and
xor
push
movsb
push
dec
jb
jg
movsb
pop
cmp
in
aas
xor
or
test
push
pusha
cld
cmc
mov
cld
out
fs
inc
mov
jb,pn
or
pop
scas
mov
fs
jne
or
adc
jae
mov
out
add
dec
repnz
inc
aaa
adc
xor
stos
ja
stos
fs
aaa
push
jae
leave
out
xchg
das
mov
scas
add
mov
outsb
dec
js
adc
bound
negl
jle
adc
push
push
or
addr16
test
jecxz
mov
inc
xor
nop
pusha
ret
xor
ss
pop
cld
xor
xchg
jo,pt
sub
jmp
addb
cmp
call
mov
jae
cmp
inc
cli
out
cmp
xor
jb
mov
dec
mov
loop
inc
mov
pop
arpl
int
xchg
push
push
repz
in
adc
lcall
mov
lcall
notb
adc
test
fwait
jns
outsb
hlt
inc
jne
jg
pusha
es
fwait
das
sahf
pop
and
adc
jb
xorb
mov
xchg
jns
cmp
xchg
inc
call
dec
mov
and
xchg
bound
loop
push
mov
dec
aaa
xor
scas
push
je
iret
das
pop
dec
xor
les
popf
aaa
pop
lods
jns
push
mov
pusha
and
inc
mov
leave
add
xchg
sub
iret
mov
add
xchg
or
jecxz
int3
jle
adc
jno
or
jne
xchg
lret
jmp
aad
scas
dec
jne
push
and
add
std
jp
test
pop
jae
sub
mov
movsl
inc
add
jg
jp
data16
push
popa
leave
sbb
sarb
push
mov
test
ret
add
aaa
mov
ja,pt
inc
mov
sub
adcl
mov
test
pop
pop
dec
testb
and
cmpsl
loope
pop
xchg
pop
cs
es
jbe
xchg
ret
mov
adc
shlb
add
sbb
rcrl
or
xchg
xchg
mov
mov
push
jge
lcall
mov
push
xlat
lods
mov
dec
add
dec
pop
dec
jl
jb
imul
aaa
repnz
int3
outsl
leave
jbe
lods
loopne
adc
test
sub
f2xm1
jmp
repnz
out
rcrl
je
sub
insl
jl
mov
xlat
mov
cmp
jae
shrl
lock
push
mov
xchg
in
into
or
in
lds
xor
les
stc
dec
dec
inc
popl
std
push
xchg
aaa
add
xchg
push
xchg
pop
jg
popa
hlt
sbb
hlt
sub
xchg
cmp
jo
mov
jb
pop
inc
lods
out
add
adc
add
jo
outsb
and
hlt
leave
aaa
loope
insb
hlt
adc
nop
sub
inc
push
push
ret
out
stos
mov
xchg
popf
lods
xchg
test
movsb
das
hlt
xor
cmp
dec
cmp
inc
fdivrl
subb
stc
lds
jmp
dec
ljmp
fisttpl
xlat
test
cmp
lret
aam
aas
lea
sub
xchg
push
add
mov
in
iret
dec
mov
pop
repz
cmp
shrl
adc
pop
shll
xchg
pusha
clc
pop
mov
scas
mov
cmpl
xor
mov
mov
shlb
xor
inc
adc
test
daa
mov
pop
xchg
sub
pop
jl
jnp
mov
dec
rclb
xor
dec
je
loopne
in
mov
xor
or
scas
out
adc
or
xor
pop
cmc
jg
jb
cmc
stos
lock
push
dec
arpl
and
popf
push
icebp
outsb
push
lock
pusha
js
nop
adc
pop
ret
ret
mov
jp
lds
test
pop
mov
sub
adc
xchg
pop
inc
cmc
andb
pop
ss
push
jg
out
push
fxch
out
cmp
sti
mov
mov
cmpsb
mov
xor
jl
xchg
xchg
or
xor
insl
sub
jae
out
adc
jno
xor
cwtl
dec
push
sbb
adc
jmp
stc
sbb
adc
nop
jo
push
test
jmp
cmp
lcall
mov
stos
sahf
xchg
add
sub
icebp
cli
mov
and
push
mov
popa
sbb
add
cmp
stos
pop
rcll
jns
ljmp
and
icebp
mov
sub
ret
add
inc
inc
cmpl
test
dec
mov
mov
in
cmc
or
incb
insb
xor
and
push
jae
aas
daa
sahf
movhps
enter
nop
xor
sub
sub
subb
aaa
sub
cmpl
or
push
stos
sbb
outsl
mov
jae
mov
xor
mov
inc
add
mov
dec
xchg
push
repnz
in
xchg
push
jge
sub
subb
inc
jmp
idivb
pop
adc
and
mov
popf
and
or
xorb
test
rolb
loope
sub
es
or
adc
xor
xor
movsl
stos
dec
cwtl
nop
test
cli
dec
popl
divb
inc
pop
xor
repnz
inc
sub
push
std
and
cmc
sub
out
xor
in
xchg
xchg
jg
fadds
cmp
and
xchg
or
and
jle
pop
outsl
cmpb
mov
pop
repnz
mov
mov
mov
mov
pop
pop
test
add
loop
stc
sub
xlat
imul
jl
js
cmpl
add
ret
push
dec
lcall
dec
cmpsb
iret
in
or
scas
xchg
repz
insl
rcrb
movsb
cli
adc
repz
xor
xor
xchg
insb
cmp
jle
iret
mov
add
fcomi
jns
mov
data16
inc
call
push
push
jp
cmp
mov
ficoml
sub
les
pusha
shll
lret
repz
and
or
mov
mov
ss
mov
addr16
lock
sub
and
vcvtpd2psx
pop
pop
pushf
mov
insb
das
pop
dec
sti
scas
and
pop
xor
inc
ret
cld
mov
mov
mov
mov
rorl
cmc
push
pop
pop
mov
cwtl
insb
pop
mov
sbb
mov
cltd
lock
push
js
in
dec
frstor
jno
daa
fcoml
jns
push
sbb
pop
xlat
xor
sbb
adc
jbe
into
mov
stos
mov
ret
pop
adc
add
jns
inc
mov
push
call
cmp
pushf
scas
or
subb
sbb
xchg
sbb
add
cmp
bound
mull
cmpsb
cmp
test
shrl
divb
cmc
cmc
dec
lea
mov
cmp
dec
stos
int3
or
pop
xchg
mov
inc
adc
dec
mov
pop
inc
dec
cs
xchg
adc
fs
xchg
das
cmp
aaa
insl
push
sti
xor
jbe
xlat
cmc
ljmp
xor
cs
and
je
pop
xor
xchg
aaa
sub
jb
and
mov
insl
outsl
mov
inc
je
mov
inc
cmp
outsb
mov
jne
mov
cwtl
hlt
insl
adc
sbbb
and
mov
pop
add
pop
fidivs
in
enter
cmp
imul
insl
cvtdq2ps
loop
mov
cmp
cmc
mov
test
xchg
mov
sbbb
or
pop
inc
mull
insl
addr16
cmp
scas
clc
insb
xor
push
xor
mov
mov
mov
test
mov
mov
test
pop
or
jno
out
adc
test
mov
xor
cmp
lds
fsubl
pushf
or
cmp
mov
add
jmp
mov
cmp
push
jne
ss
jl
insb
add
ljmp
jmp
in
aaa
push
adc
push
in
pop
mov
xor
mov
dec
sti
movsl
in
cmp
stos
imul
mov
ds
pop
outsb
inc
sub
push
xchg
cmp
mov
and
aaa
test
pop
cmp
mov
jg
repnz
sar
movsl
lods
movsl
inc
jmp
xor
and
test
ljmp
sub
shrl
sub
mov
mov
test
adc
xor
in
mov
aas
adc
mov
mov
jbe
outsb
cmp
sub
fs
fiadds
add
or
dec
inc
pop
ret
out
xchg
test
mov
icebp
xor
cmp
inc
mov
insb
jg
mov
fs
mov
push
adc
sub
fldcw
int
mov
rol
sub
mov
cmp
pop
addr16
add
sbbb
push
pop
lds
aaa
sub
fs
je
push
stos
lcall
call
cmp
add
push
stos
adc
nop
sub
test
mov
stos
in
adc
and
xor
or
mov
ss
or
rcr
add
jp
in
mov
gs
pop
lods
mov
scas
nop
fs
out
movsb
inc
ret
xor
aas
adc
push
sub
enter
mov
pop
or
inc
daa
inc
shl
push
addr16
sub
cmp
jp
xchg
and
mov
shll
cmp
add
arpl
dec
push
xchg
cmp
loop
pusha
push
fistpl
and
jno,pn
ret
or
nop
xchg
sub
gs
loope
cmp
icebp
imul
adc
and
mov
insb
inc
fs
push
ret
inc
xchg
nop
mov
aas
test
jle
stos
pushf
int3
adc
shr
or
xor
xchg
js
push
orl
in
xchg
mov
adc
pop
and
sub
lret
test
mov
jp
loope
jo
lock
jnp
es
incl
and
pop
xor
adc
sub
test
pop
mov
js
pop
rcll
xchg
dec
out
inc
in
cmpsl
dec
fs
popl
aam
dec
das
add
cmp
shll
inc
dec
loop
gs
sbb
je
mov
pop
sub
aaa
jae
pushf
or
mov
orl
and
xor
in
outsl
jo
lock
scas
mov
leave
in
insb
mov
fs
adc
pop
or
xchg
add
adc
or
lahf
fucom
xchg
push
data16
std
inc
xor
add
cmp
add
jns
jo
lock
cmp
mov
loopne
inc
in
or
adc
mov
push
adc
dec
in
std
xor
jo
mov
xor
into
cwtl
cmp
test
jae
scas
mov
movsb
xchg
rolb
les
mov
sarl
pop
or
xor
cmp
mov
jecxz
or
push
add
jmp
mov
pop
inc
adc
push
mov
mov
fildl
mov
xor
cli
imul
cld
fisttpl
js
sub
push
push
fiaddl
pop
fs
fistps
push
dec
mov
cmp
scas
mov
addb
xor
dec
mov
pop
jmp
cld
sub
icebp
and
cld
cmp
dec
fildll
cld
inc
test
push
popf
imul
ss
jo
or
test
jl
jecxz
sub
jle
jns
call
mov
lret
jp
dec
xchg
adc
repnz
out
dec
js
push
lcall
mov
pop
inc
mov
mov
loop
pop
cmp
pop
mov
dec
lret
int
and
mov
mov
test
into
inc
test
cld
lods
cmp
jmp
jp
jge
inc
idivb
cmp
fcoms
cmp
push
add
fwait
cld
or
adc
outsb
dec
mov
into
repz
adc
sbb
les
or
dec
mov
sbb
int
je
or
or
or
hlt
aaa
xchg
xchg
xchg
sub
sub
jno
data16
rorb
das
cmp
loop
push
sub
adc
nop
mov
inc
cmpsb
fdivs
mov
mov
mov
jmp
pop
and
lods
adc
xor
sbb
rcr
les
lds
jo
mov
add
popa
gs
dec
ret
mov
rorb
cltd
testl
sub
xor
aaa
add
cs
fisubrl
mov
or
push
adc
cmp
test
sub
cmp
dec
cltd
sub
mov
push
loop
das
adc
xchg
pop
and
dec
jb
xchg
xor
orl
inc
mov
xchg
dec
and
ret
call
lahf
pop
xchg
mov
add
sarb
outsb
mov
je
mov
push
adc
out
cmc
loope
int3
ljmp
adcb
xchg
rclb
les
lock
dec
pop
push
aas
scas
sbb
fsubrl
jo
jne
jns
xor
adc
mov
pusha
int
mov
inc
mov
mov
out
jmp
pop
sub
jle
in
or
data16
lods
gs
or
notl
sbb
test
dec
mov
push
ljmp
xchg
or
stos
xlat
xchg
insb
jl
pusha
aam
rolb
mov
addr16
inc
shll
insb
cs
lret
call
xor
sub
gs
xor
shll
sbb
and
sarl
xor
int3
insb
lret
and
sbb
fbld
scas
ror
jle
out
ja
fimull
cwtl
dec
mov
shl
outsb
or
sub
fmuls
std
outsl
into
cmp
cmp
loop
sub
mov
adc
shrb
xchg
mov
mov
icebp
fstl
xchg
cmp
sbb
mov
mov
push
mov
mov
paddq
test
xchg
lahf
rorb
mov
or
pop
int3
xor
push
mov
divb
outsb
mov
lea
nop
shlb
jne
inc
gs
ja
mov
pushf
lods
jmp
pop
data16
or
inc
mov
sub
mov
adc
imul
shlb
test
inc
cwtl
aaa
mov
test
pop
sbb
jo
add
jo
cmp
stc
icebp
cmpsl
jl
push
sbb
sub
jge
xorb
mov
xchg
mov
mov
xor
icebp
push
inc
inc
mov
popa
mov
jl
cmp
cmp
mov
ja
or
insb
cmp
jge
ja
inc
jmp
out
dec
xor
cmp
ja
cwtl
out
sti
adc
lea
fistl
xchg
mov
and
cwtl
fld
mov
ss
lcall
mov
repz
nop
dec
mov
fnstcw
push
xchg
xor
push
mov
pop
sbb
ja
shll
imul
add
sbb
adc
dec
jecxz
mov
jns
add
push
or
xor
lock
movsl
fimuls
cwtl
mov
inc
dec
out
jge
out
mov
cs
xor
mov
sub
mov
adc
scas
adc
mov
cs
pop
and
or
ret
inc
cs
aas
push
xchg
lea
je
and
jle
jp
add
push
mov
cs
fsubl
xchg
mov
dec
cmp
dec
call
push
or
mov
xor
mov
popa
leave
mov
shl
fisubs
divl
mov
xorb
or
and
popa
mov
jle
jnp
sbb
and
jb
fldl
jnp
jg
xor
inc
orb
cmp
add
hlt
cltd
xor
sbbb
xchg
mov
lcall
popl
jge
int
ss
push
push
lock
xor
test
fldl
insb
xorl
or
pop
jae
mov
xchg
es
in
outsb
cmp
rclb
inc
nop
cmp
enter
lret
int3
loopne,pt
into
sub
and
int
push
rolb
das
adc
sbb
xor
jle
mov
xchg
cmpl
mov
stos
and
cwtl
mov
pop
sub
jne
push
lock
inc
push
ds
sbb
mov
loope
mov
sahf
fs
push
ja
pop
mov
cmpb
mov
fsubs
pop
pop
jo
cmp
sub
cld
and
in
pop
adc
fstp
scas
xor
jb
test
mov
pop
test
cmpsl
jo
pop
sbb
cmpsl
xor
push
push
xor
fildl
repz
pusha
cmp
add
sar
cmp
and
in
mov
push
sub
dec
lock
in
shr
popf
gs
jp
aas
les
mov
jns
mov
sbb
inc
mov
int3
mov
aaa
pop
ja
pop
jg
and
cmp
aam
lods
mov
mov
jb
aam
test
scas
or
sub
adc
mov
inc
pop
inc
in
les
fs
fwait
cli
insl
out
shll
sbb
inc
aam
jbe,pt
outsl
push
outsl
add
sub
loope
cmp
jae
je
lods
insl
shrb
lods
lret
ja
addb
mov
cmpsl
lock
fcomi
sub
out
pop
adc
xchg
inc
xor
and
stc
lds
clc
push
mov
mov
call
mov
add
mov
xor
pop
mov
add
jg
mov
jo
xchg
outsl
fs
lock
push
sub
push
stos
outsl
sub
mov
scas
xchg
xor
jmp
sub
xchg
inc
sub
or
stos
cmp
repnz
addr16
pop
cmp
insb
sarl
outsl
or
jge
fs
mov
orb
adc
and
lretw
lock
add
pusha
jnp
pop
push
sub
shlb
cmovg
repnz
xchg
pop
cmp
xor
jmp
dec
adc
mov
in
xchg
mov
movb
mov
push
jmp
insb
mov
in
mov
loopne
insb
push
sbb
insl
jne
push
shlb
mov
js
dec
cmp
andb
mov
outsb
jns
mov
cmc
je
jno
cltd
jge
cmp
icebp
and
pop
jle
cs
push
xor
mov
jnp
into
sbb
in
xchg
idivl
lock
leave
cmpsl
sti
push
pop
jmp
ljmp
pusha
push
test
sbb
pop
mov
cltd
adc
bnd
sarl
imul
outsb
sarl
jmp
pusha
inc
xor
inc
adc
add
jecxz
ds
insl
std
mov
sbb
inc
loope
call
syscall
dec
inc
inc
push
add
enter
aaa
mov
xor
xchg
into
fiadds
pop
mov
stos
xchg
aad
cmp
pushf
nop
pop
xchg
add
fstpt
sahf
nop
cmc
fistpl
cmc
test
sahf
push
xor
cmp
sub
stos
inc
add
and
jp
xchg
cmp
scas
in
rol
push
pop
lods
leave
mov
cmpl
gs
xchg
mov
jle
stos
pop
lahf
stos
sub
xchg
push
cmp
das
test
mov
mov
jecxz
addr16
push
mov
push
lret
stos
mov
push
mov
jo
pop
scas
insb
out
sbb
mov
inc
pop
adc
xchg
cmp
or
xor
out
adc
mov
outsb
jl
cmp
hlt
sub
pusha
push
adcl
es
fstp
mov
sub
pop
xor
cs
xlat
hlt
xor
fiadds
xor
jne
cmp
push
outsb
pop
stos
in
pop
rolb
fsubrl
adc
rolb
outsl
cs
lock
push
sbb
outsl
xchg
mulb
scas
dec
lods
shll
jae
dec
das
test
dec
push
xchg
xor
xchg
inc
mov
xor
enter
jl
mov
scas
test
or
mov
aas
out
dec
lret
sbb
cmp
out
push
inc
inc
shll
popf
in
ss
pop
or
popf
push
dec
aad
xchg
jns
push
mov
out
adc
popa
xchg
xor
inc
dec
or
dec
mov
mov
dec
mov
mov
mov
push
push
test
je
push
cmpl
xchg
popa
scas
xorl
dec
sub
aam
mov
lods
adc
jnp
cmp
lea
scas
jo
insb
pop
or
into
inc
mov
xor
cmp
push
scas
xor
pop
mov
aas
mov
pop
adc
jmp
pop
and
icebp
clc
xlat
leave
mov
pop
xlat
mov
mov
mov
lahf
pop
sbb
sub
jl
sub
and
xor
jb
push
loope
adc
pop
std
cmp
jge
es
jbe
shll
mov
cmp
mov
dec
xor
inc
dec
mov
xchg
xor
test
pop
jle
xor
das
xchg
dec
mov
sar
mov
adc
es
inc
or
dec
mov
mov
xchg
xor
mov
mov
mov
mov
pop
insl
add
cmpb
xor
dec
lret
leave
dec
jmp
enter
pop
inc
aas
xor
pop
xor
sub
test
lods
sub
inc
push
in
adc
divl
in
push
mov
pop
idivb
xchg
and
mov
les
gs
sarl
stos
les
or
test
ss
mulb
mov
dec
lcall
xor
sbb
xor
xor
testl
or
fcmovb
mov
inc
adc
scas
out
mov
stos
or
scas
or
cmp
andb
fdivl
lea
xor
pop
add
add
push
add
push
add
pusha
sub
scas
mov
jle
adc
sub
sahf
jp
scas
lods
adcb
ss
aas
push
aaa
loop
scas
mov
cmc
adc
data16
xchg
xor
sub
sbb
cmpl
cmp
lahf
fimull
add
mov
sbb
jecxz
mov
out
mov
ret
scas
je
inc
xor
ds
in
and
insb
dec
dec
rolb
push
aad
inc
subb
sub
clc
dec
movsl
xor
scas
xchg
add
cmpsl
insl
jmp
mov
cltd
sbb
adc
in
push
xchg
in
aam
or
fstl
mov
and
cmpsb
mov
jge
pop
adc
sbb
xor
adc
xchg
sub
push
cmpsb
cmpsl
or
mov
insb
mov
add
pop
mov
lret
pop
mov
xchg
push
outsb
xchg
sbb
pop
aad
dec
test
int
push
mov
hlt
loopne
or
imul
xor
cwtl
jb
mov
cmp
xchg
mov
xchg
addr16
nop
movsl
bound
cli
mov
jo
test
loope
call
ja
shrb
jecxz
jae
mov
adc
scas
scas
pop
arpl
cmp
popf
sbbb
jl
jne
jl
sub
pop
movsb
dec
out
sbb
test
jge
clc
addr16
icebp
pop
jg,pt
ja
mov
fisttpl
adc
adc
jmp
mov
jb
add
aam
movsl
inc
adc
sub
imulb
in
cmp
loopne
mov
xor
dec
mov
xchg
stos
inc
ret
or
mov
cmpl
movl
test
hlt
inc
ret
loop
mov
mov
dec
push
pop
clc
pop
xor
stos
outsb
jp
rolb
insb
popf
dec
rcrl
mov
adc
dec
and
fisubs
lods
jb
loopne
fidivs
mov
js
outsb
cmc
mov
mov
nop
dec
std
inc
pop
mov
xlat
xor
sub
lods
test
test
sbb
scas
insb
stc
pop
xchg
and
lea
imul
pop
inc
cmc
cmp
test
icebp
das
push
jbe
or
lds
dec
lahf
pop
pop
mov
jae
xlat
xor
push
pop
xchg
sub
mov
es
je
push
xchg
fldz
jo
add
mov
mov
subl
push
xlat
insb
lcall
adc
adc
jae
lds
inc
dec
sbb
dec
fs
outsb
rcr
sub
mov
ret
xor
jg
jmp
lret
mov
inc
mov
xorb
add
and
adc
jp
push
stc
and
fdivl
jp
inc
push
dec
insl
aaa
and
push
fsts
stos
or
out
adc
pop
xchg
dec
ss
or
dec
push
daa
shr
and
xor
add
dec
stos
call
inc
test
sbb
das
push
scas
xor
mov
or
fs
aaa
dec
dec
bnd
adc
in
aas
rorb
xorb
icebp
movsb
out
pop
stos
jg
pop
test
push
dec
pop
mov
stos
jns
mov
addb
sub
mov
das
lods
mov
imulb
out
pushf
sbb
sub
in
push
ja
dec
mov
mov
add
jbe
sub
stc
jne
sbb
mov
repnz
mov
pushf
xor
fwait
je
in
mov
dec
jecxz
cmp
inc
outsl
jecxz
cmp
sub
sbb
jb,pt
sarb
mov
push
sbb
push
repnz
aad
fs
lret
shlb
clc
dec
aam
pop
and
pop
mov
dec
mov
inc
mov
mov
pushf
icebp
not
pop
aas
andb
jl
cmp
lds
nop
dec
pop
outsb
jbe
nop
pop
dec
jp
bound
jo
lea
sub
sub
nop
fs
dec
pusha
lret
dec
data16
or
jae
push
movsb
jns
cli
xchg
or
or
sbb
xchg
lods
daa
xlat
and
sahf
xor
cmp
sub
sub
outsb
xor
mov
sub
lret
dec
mov
inc
out
adc
dec
mov
mov
mov
shll
cmp
mov
cmp
dec
pop
dec
jae
inc
sahf
insb
orb
push
ret
lahf
cmp
inc
add
pop
xchg
mov
mov
sub
pop
pushf
sub
pop
push
mov
stos
mov
pop
xor
fwait
push
jp
sub
cmp
das
cmp
sub
xchg
xchg
test
adcb
inc
xchg
sub
adc
ss
scas
mov
or
sub
cmp
mov
dec
mov
pop
xchg
out
test
test
push
xor
dec
ja
pop
dec
addr16
mov
and
cmp
and
out
das
aam
into
movsb
mov
jp
scas
and
out
xchg
xchg
inc
dec
pop
mov
ljmp
sbb
jae
arpl
adc
cmc
ja
std
sub
jge
mov
and
mov
xor
fwait
dec
js
xchg
cmp
loopne
insl
xor
jmp
fidivrs
cmp
xor
pop
jne
pushf
iret
in
iret
loopne
ss
test
lahf
fnstsw
dec
jl
sbb
cmp
shll
mov
test
mov
mov
test
push
cmc
jb
push
pop
jge
rorl
xor
adc
outsb
shrl
add
aam
gs
sub
pushf
push
inc
push
pop
cmc
jp
enter
mov
mov
stos
dec
mov
outsb
fstpt
test
aam
jle
push
mov
insl
and
mov
jg
sbb
stos
aas
pop
push
lret
ds
push
ds
inc
push
mov
mov
jge
pop
cmpsl
aaa
data16
das
bound
jb
inc
xor
mov
mov
xchg
aas
jg
cmp
jecxz
mov
mov
aaa
mov
xor
shll
lds
inc
sub
xchg
sub
push
movb
cmp
jae
lock
loope
test
fsubrl
mov
mov
in
jp
mov
sbb
push
popf
xchg
xchg
and
jge
int
imul
je
push
jl
in
adc
xchg
ss
icebp
and
dec
push
mov
jo
scas
jl
stos
dec
mov
pop
nop
lods
pop
ret
dec
int
cmp
inc
xchg
popf
gs
dec
sub
xchg
into
hlt
xor
dec
mov
stos
out
movsl
mov
or
aad
aaa
lret
scas
shrl
inc
sbb
stos
sub
inc
je
hlt
dec
sbb
mov
sub
mov
icebp
jl
enter
ss
rolb
mov
push
pop
and
leave
mov
pop
das
es
movsl
aam
jne
std
cmp
inc
lods
iret
mov
cmp
xchg
repz
push
xor
test
inc
push
dec
xor
add
cmc
xrelease
lret
in
jo
jge
and
outsb
faddl
xchg
roll
mov
jg
cmc
movsb
cltd
sub
mov
cmp
add
mov
cmp
and
in
test
adc
je
xchg
jl
test
in
mov
daa
pop
jl
rcll
fwait
cmpb
das
add
rcll
loopne
loopne
sub
mov
adc
sti
adc
sbbb
decb
pop
xchg
push
imul
pop
cmp
cmpb
or
cmp
setbe
insb
push
jg
gs
ja
inc
jae
dec
fs
je
jne
mov
add
mov
mov
loope
sbb
out
loope
and
pop
inc
mov
cmp
mov
popa
sub
jb
mov
xchg
xor
rolb
inc
aaa
xor
jo
ds
ss
and
dec
cld
dec
movsb
jp
or
sub
mov
add
cmp
jge
pop
dec
push
push
test
cmp
shlb
xorl
mov
push
std
and
cmpsb
mov
stos
xor
push
cmp
mov
cmp
test
aaa
into
in
sub
scas
cmp
aaa
pusha
xor
pop
mov
ret
sub
and
sarb
mov
dec
inc
jno
cmp
fistl
popf
movsb
sub
sub
gs
shr
or
mov
mov
inc
sbb
inc
push
or
xor
cmp
dec
inc
inc
sbb
mov
cmpsl
dec
pusha
mov
out
jno
lock
mov
hlt
out
push
xchg
in
cltd
insl
push
xor
push
cmpsb
xchg
jns
sti
xchg
xor
sub
pop
sub
movsb
jno
lods
sbb
push
adc
mov
sarb
mov
lret
mov
or
test
les
cmp
push
and
ss
or
nop
pop
in
loopne
push
sbb
rcll
addr16
push
std
in
jmp
mov
std
in
outsb
aaa
ljmp
pop
pusha
out
int3
and
stos
lods
push
xchg
lea
out
ds
add
sti
adc
mov
sub
mov
and
xchg
adc
and
rcll
cmp
inc
jne
clc
lods
pop
fwait
inc
iret
ss
out
cmp
inc
and
push
ds
dec
negl
imul
and
xor
and
pop
dec
pop
push
loope
dec
iret
xor
in
and
mov
je
jmp
outsb
aaa
das
iret
rcl
push
insl
out
stos
fildll
movsl
sbbb
test
lcall
test
je
cmp
inc
adc
cld
adc
scas
jle
xor
iret
js
pop
lock
push
in
or
lods
push
ja
out
int3
lea
pop
sub
dec
sub
test
xor
or
int
pop
ja
cld
and
mov
xchg
fwait
mov
data16
push
mov
push
and
add
adc
pop
lea
int
sub
loop
push
or
push
inc
xchg
push
mov
out
push
jmp
pop
pop
call
mov
sbb
mov
adc
sub
insl
sbb
pop
or
jecxz
shrb
push
mov
mov
and
fldenv
dec
lcall
sbb
mov
inc
aaa
movsl
pusha
xlat
lea
xchg
mov
fsubs
mov
nop
dec
pop
dec
push
sahf
lock
xor
mov
sbb
aas
mov
push
push
cltd
and
jo
dec
or
sub
lds
mov
mov
pop
fisttps
sub
test
popl
ljmp
mov
sti
clc
jmp
dec
rorb
scas
or
xorl
fdiv
add
fwait
jne
jns
push
dec
sub
inc
xor
subb
popa
inc
mov
aas
mov
cmp
sub
dec
repz
dec
ljmp
xor
and
mov
or
sub
lods
sub
movsb
xor
mov
mov
jp
mov
scas
fidivrl
in
mov
addr16
cmpsb
sbb
jnp
nop
sar
xchg
je
jnp
ljmp
aam
mov
aaa
sub
aaa
sbb
mov
sbb
aas
sbb
mov
fsubrs
pushf
mov
ljmp
out
leave
and
in
ss
sbb
mov
in
dec
out
stos
jbe
fadd
sub
movsb
scas
nop
out
repnz
mov
aas
jl
xor
mov
dec
notl
sub
aaa
fbstp
scas
test
or
mov
js
adc
insb
fwait
sub
nop
mov
aaa
xchg
mov
xor
sahf
or
dec
jle
shll
inc
enter
mov
sbb
jae
add
sbb
das
fcoml
or
jne
jo
call
popf
gs
xor
in
mov
inc
sub
mov
jae
mov
mov
in
jae
push
sub
inc
lods
or
and
xor
xchg
aaa
sti
dec
pop
jae
sbb
sbb
test
dec
mov
fsubr
js
xchg
mov
sub
dec
cltd
adc
inc
mov
into
mov
jecxz
ficompl
mov
push
cld
shrb
push
in
xor
enter
scas
xor
cs
out
lods
sub
mov
add
add
mov
push
jo
push
pusha
push
cmp
cltd
jbe
dec
or
push
mov
repnz
cmp
inc
xor
mov
repnz
xor
pop
std
push
lahf
out
lret
xchg
and
jmp
les
or
ljmp
xor
ja
adc
icebp
cmp
mov
push
pop
mov
fiadds
pop
adc
xor
ss
rcr
aaa
scas
imul
test
pop
pop
imul
in
adc
fistps
insl
pushf
and
mov
inc
iret
repnz
hlt
dec
push
inc
sub
inc
adc
pop
or
adc
cmc
aam
lcall
je
mov
inc
pop
pop
pop
push
aaa
dec
clc
sarb
adc
mov
inc
movsb
mov
cmp
adc
push
add
mov
cmc
subl
jbe
cmp
aas
mov
xor
sbb
cwtl
mov
jo
out
es
sahf
pop
pop
and
pop
push
std
mov
mov
or
shll
xor
imulb
sub
mov
fisubrs
decb
out
dec
push
mov
int3
pop
xor
lea
push
push
adc
dec
jmp
test
nop
inc
push
cmp
sbb
mov
mov
out
out
mov
or
ficoml
mov
sub
aaa
inc
mov
outsb
mov
xchg
insl
or
daa
xor
cltd
xchg
ficoms
dec
cmc
push
in
ret
pop
movsb
sub
arpl
push
pusha
lcall
xor
xlat
mov
push
jne
andl
cmpsb
cmpb
or
repnz
loope
and
fwait
pop
dec
insl
pushf
jb
inc
aaa
mov
rorb
pop
mov
insl
pusha
cmp
scas
imul
cmp
mov
push
mov
mov
int
ds
cwtl
pop
stc
mov
addb
hlt
sub
xor
cld
and
cmp
testb
je
or
mov
movsb
pop
jae
mov
mov
test
fidivs
jno
mov
pop
inc
lods
push
out
jbe
jno
out
inc
sub
xor
aam
stc
fdivs
mov
mov
rcrb
dec
in
cmp
fsub
sub
repnz
and
scas
push
movsb
sub
xchg
inc
jle
mov
push
pop
shrl
sub
aam
faddl
jl
dec
scas
js
push
mov
jmp
hlt
pop
mov
in
ret
mov
cmp
push
sub
xor
dec
std
mov
imul
fstpt
dec
loopne
xor
clc
mov
mov
push
cld
mov
inc
jle
push
pop
jb
jae
inc
mov
cmp
mov
mov
imul
out
nop
cmp
sbb
push
sbb
dec
jno
push
and
dec
jno
cld
mov
xor
sbb
and
xor
in
xor
je
shll
cmp
lret
adc
sarb
loope
ss
scas
mov
test
push
lods
adc
cmp
sub
sbb
loop
xchg
sbb
popa
sbb
mov
cmp
lock
lds
inc
movsb
hlt
xor
fimuls
outsl
addr16
jp
jnp
and
jae
dec
jg
mov
stos
sarb
add
push
sbb
scas
jb
jl
mov
stos
clc
xor
dec
aaa
hlt
xor
mov
arpl
cmp
inc
push
cmp
dec
jno
push
xor
jnp
push
dec
inc
jl
test
sarl
lret
cmp
mov
inc
push
in
push
in
cs
sub
out
jle
cmp
mov
test
in
leave
stc
dec
cwtl
insl
xchg
sub
push
aad
sti
loope
mov
es
stc
mov
push
in
iret
sub
xor
fldenv
insl
xor
sub
dec
push
out
in
or
cs
int
lods
mov
mov
mov
hlt
inc
lock
incl
clc
jg,pt
shll
hlt
sub
mov
popa
cmpsl
sub
mov
mov
data16
je
dec
inc
iret
inc
fs
pop
jno
jp
ljmp
jne
rcll
xchg
aaa
push
hlt
rorl
bound
mov
jp
adcl
jns
inc
and
pop
jmp
push
fmuls
scas
add
in
sbb
scas
xchg
sub
mov
and
mov
mov
cmp
test
insl
xor
mov
faddl
xchg
jbe
insl
ret
pop
pop
mov
rorl
cmpsl
mov
outsb
pop
testl
jno
sahf
add
or
inc
sbb
pop
insb
push
mov
push
sub
imul
jb
cmp
scas
sbb
mov
jmp
sub
dec
imul
inc
aaa
aam
xor
mov
xor
sub
pop
pushf
sbb
pop
enter
inc
fsubrs
aas
insb
push
ss
xor
push
pushf
ljmp
leave
aad
insb
cmp
cmp
adc
mov
add
mov
pushf
mov
sbb
jl,pt
loope
test
lret
mov
test
leave
mov
fmul
xchg
hlt
inc
adc
test
dec
fmul
add
lret
mov
jo
test
mov
mov
ficompl
cmp
sbb
pushf
xorl
xchg
sub
pusha
je
aam
or
add
mov
mov
psubd
int
inc
in
pop
mov
and
xor
add
test
cmpsl
lret
insl
inc
push
inc
scas
jnp
xor
jl
xchg
cmp
pop
pushf
xchg
xor
add
aaa
pop
jge
xor
out
add
into
insb
mov
leave
add
leave
or
ret
jp
lret
mov
and
jne
jg,pt
inc
or
out
pusha
xor
xor
out
sbbb
adc
sub
lret
cmp
sub
xchg
test
mov
or
mov
out
and
scas
pop
mov
jle
or
push
push
dec
insb
jge
inc
pop
dec
outsl
mov
enter
ja
imul
je
push
fstpl
aaa
mov
dec
arpl
jo
push
pop
push
xchg
mov
sbb
push
xor
xor
in
jae
mov
push
insl
scas
mov
in
adc
insl
xor
cmp
add
ficoml
scas
mov
mov
sbb
inc
dec
scas
mov
out
test
jb
insb
push
xor
adc
pop
inc
cmc
xor
mov
mov
push
imul
dec
pop
sbb
aad
inc
bound
push
mov
jg
adc
movsb
jle
pop
xchg
dec
xor
sbb
jb
dec
iret
push
cmp
sub
xchg
jno
push
stos
int
std
rorl
jns
pusha
sarb
fmul
out
jp
daa
pop
ret
mov
call
push
and
or
mov
xchg
and
pop
sbb
shll
add
in
cmp
jp
lods
mov
iretw
adc
push
daa
sahf
lods
jb
adc
mov
int3
data16
ljmp
jb
mov
add
jns
pop
mov
mov
mov
and
xor
push
es
mov
cmp
push
imul
addr16
repz
push
xor
mov
cmp
fdivr
aas
jns
push
pop
outsb
adc
mov
push
ja
mul
stos
mov
cmp
cmp
into
shrb
inc
stc
repz
mov
mov
pop
cmpsb
sub
push
and
orb
inc
mov
or
ficoms
sti
daa
cmpsb
jl
sbb
add
cmpl
cmp
jne
enter
inc
lock
cmovnp
sub
sub
xchg
xor
mov
mov
mov
inc
jae
lea
pop
xor
mov
xchg
or
add
cmp
pusha
shrl
push
sahf
ds
pusha
add
sahf
aam
notb
sub
ds
roll
in
xchg
shll
xchg
lods
sbb
xchg
xlat
nop
ret
dec
adc
stos
lods
fmull
orl
pushf
aaa
movsb
xor
inc
pop
cmp
test
fprem1
lcall
daa
aam
mov
mov
lea
stos
xorb
ljmp
xchg
orl
sbb
or
xchg
test
pusha
nop
push
ret
out
loope
mov
js
fwait
mov
aam
jb
xor
mov
pushf
pushf
inc
jg
dec
ret
insb
popf
cmp
fistpl
shlb
push
adc
xor
mov
inc
repz
stos
push
add
mov
lods
pop
ss
icebp
out
push
mov
test
stos
mov
xchg
jno
inc
inc
inc
in
cmpsb
in
push
loop
and
aam
enter
mov
lds
arpl
popa
loopne
xchg
fcomi
aaa
lret
sub
mov
shrl
xor
xor
mov
rol
test
cmp
loope
cwtl
lret
push
punpckhwd
push
lods
rorb
push
adc
and
cmp
sti
notl
sub
rclb
jb
xor
data16
mov
lock
xchg
mov
jno
mov
lods
rcrl
leave
or
cmp
adc
sbb
int3
xor
and
aas
std
inc
or
pop
lods
gs
xchg
test
push
or
mov
mov
xchg
sahf
mov
gs
or
mov
addr16
mov
js
push
pop
xor
outsb
and
cmp
mov
pop
fs
pop
and
outsl
sub
push
repnz
mov
or
fistps
sub
adc
loopne
scas
xor
inc
gs
mov
mov
scas
repnz
xor
add
stos
je
mov
dec
call
mov
gs
pop
xchg
add
mov
adcb
xor
repz
arpl
jge
xchg
jmp
mov
sti
dec
xor
cmpsb
xor
adc
sub
mov
jae
imul
xor
adc
mov
xchg
push
push
hlt
sub
test
mov
sub
mov
scas
lahf
mov
jge
mov
sbb
in
shll
adc
add
ljmp
push
dec
dec
sbb
push
aad
lock
mov
hlt
cmp
imul
sbb
std
jno
pop
aas
dec
jge
insl
adcl
cld
movsl
add
xchg
mov
loope
jo
pop
jne
jl
inc
cmp
xchg
inc
divb
dec
rcr
rcrb
dec
shll
pop
iret
inc
cmp
mov
xchg
ljmp
pop
enter
xchg
jmp
loope
and
push
sbb
xor
sbb
fsts
pop
add
dec
mov
lock
mov
inc
pop
pushf
xorb
jbe
imul
cmp
lcall
pop
lcall
stos
xlat
arpl
cwtl
mov
pop
or
lret
movsl
inc
and
sub
sub
std
inc
imul
test
sahf
sbb
and
add
xchg
jmp
lods
mov
in
je
stos
lahf
cltd
inc
or
push
lahf
push
andl
jae
int
nop
dec
ret
push
mov
in
xchg
inc
nop
aaa
pop
push
nop
cmp
lods
xchg
push
mov
mov
mov
push
inc
push
jne
xchg
xchg
pop
ss
mov
xchg
lods
jle
cmp
and
aaa
stos
xchg
dec
cmpsl
jno
test
dec
mov
cmpsb
dec
scas
les
das
pop
aaa
and
mov
adc
pop
xchg
push
cmc
jbe
pop
int3
and
arpl
inc
aad
push
cmp
push
and
add
in
pop
hlt
jae
adc
adc
jbe
xchg
pushf
cltd
xchg
mov
inc
xchg
dec
sub
jae
ds
jl
jo
lock
xchg
data16
xchg
push
cmp
cmp
xchg
aam
outsb
xchg
mov
wrmsr
adc
push
in
xor
lahf
pop
add
xor
or
pop
xchg
dec
mov
cmp
mov
jp
ret
mov
hlt
push
mov
xor
jl
fsubs
mov
dec
sbb
adc
xchg
stc
mov
adc
jns
cmpsb
xor
adc
push
stos
pop
loopne
sub
leave
sub
movsl
xor
pop
lret
jge
cltd
les
fwait
jbe
lods
subb
test
lret
ja
push
loope
imulb
sub
insb
sbb
add
sub
pop
outsl
jo
sub
mov
xlat
cmp
addb
repnz
mov
pop
movsb
push
fisttpll
xchg
mov
shrb
rcll
popa
xor
pop
adc
xchg
stos
movsl
movsl
das
stc
fdivs
movsl
sub
inc
add
leave
mov
es
inc
mov
xchg
or
rcl
insb
xchg
mov
mov
in
push
and
dec
jl
inc
mov
lods
popa
push
sbb
xchg
stos
in
jb
ljmp
or
sarl
aaa
mov
and
xorb
dec
ss
mov
adc
push
subl
fisttpl
out
adcb
mov
sub
cs
cli
pop
arpl
sub
or
sahf
push
mov
pop
xchg
mov
lahf
push
mov
rcl
cmp
cld
lods
pop
pop
sti
scas
sub
mov
mov
mov
loop
cwtl
outsb
or
adc
xchg
fbld
sbb
mov
mov
or
fiaddl
mov
lret
dec
jmp
sbb
pop
fistpl
cmp
dec
xor
jmp
repz
mov
push
mov
xor
push
dec
mov
test
mov
mov
xor
jae
jno
je
xor
out
loope
xor
ds
mov
inc
mov
nop
jne
mov
cmp
jbe,pn
or
rcrb
js
dec
sbb
imul
push
inc
sbb
push
pushf
xchg
mov
test
subl
das
push
and
or
adc
lahf
bound
and
sbb
pop
in
sahf
pop
push
aaa
shlb
lods
das
pop
xor
fildl
dec
daa
jle
jo
sub
sub
inc
adc
inc
push
jns
push
popa
aam
push
xor
xor
mov
pop
ja
das
ljmp
sub
push
lcall
pushf
push
inc
pop
les
mov
repz
clc
arpl
mov
sub
daa
mov
and
jecxz
pop
add
subl
jb
sbb
inc
mov
push
stos
mov
jb
mov
add
repz
nop
inc
sub
adc
ficoms
outsb
dec
mov
imul
mov
lock
jle
adc
mov
imul
add
mov
mov
jo
push
cmpsl
xorb
aaa
or
jbe
mov
jl
sub
arpl
sub
fadds
mov
pop
xchg
inc
add
dec
adc
dec
jl
mov
int3
outsl
sub
xchg
shll
pop
or
shll
sbb
xchg
push
test
pop
jge
push
pusha
subl
adc
jmp
pop
pop
addr16
bound
sbb
dec
adc
test
movsl
insl
mov
mov
cmp
sub
fidivs
cmp
stos
mov
je
ret
dec
xchg
push
jo
jp
add
gs
dec
mov
mov
js
cmpb
pop
or
push
mov
subb
pop
adc
int3
xchg
inc
mov
jbe
sub
xor
cmp
adc
cwtl
dec
test
xchg
and
cmp
jb
insb
xchg
cmp
dec
dec
xchg
into
mov
repnz
pop
adc
mov
or
push
arpl
pop
push
or
push
sub
sub
mov
pop
aam
add
aam
mov
ds
xor
sub
xor
adc
cmc
loope
mov
mov
xor
dec
push
popa
lods
int3
sbb
ret
ss
xor
and
clc
test
int
pop
sbb
inc
sbb
arpl
in
pop
pop
or
cmp
mov
call
pop
inc
jo
fcomps
xchg
jo
lods
cmp
sub
mov
sub
hlt
int3
pop
ffree
jb
jge
test
insb
mov
or
out
js
or
out
out
mov
les
dec
enter
dec
mov
or
ss
xor
fwait
mov
enter
jmp
xchg
jo
inc
add
adc
pop
jmp
pop
cmp
mov
push
sub
mov
dec
sub
das
cmp
mov
cld
movsb
jo
mov
shl
adc
and
xor
mov
fdivs
push
insl
and
imul
hlt
xor
push
jb
xchg
pushf
jmp
fmul
mov
push
sbb
and
xchg
jl
mov
scas
testl
dec
pop
inc
in
cli
xchg
inc
mov
add
mov
mov
xor
push
xchg
cmp
xor
mov
pop
andb
cmpl
das
repnz
pop
sbb
fimuls
inc
mov
sub
add
push
in
xor
and
out
test
cmpsb
mov
pop
cwtl
aas
scas
iret
xor
xor
addr16
mov
hlt
dec
lcall
and
xchg
addr16
dec
cmp
negl
jns
mov
push
out
js
inc
dec
cmpsl
jb
repnz
jle
mov
sbb
inc
hlt
inc
adc
movl
shl
cld
mov
ja
jecxz
insl
jo
shlb
mov
inc
xchg
or
mov
data16
dec
fmull
xor
fidivrl
bnd
iret
jno
dec
jb
clc
sahf
cmp
and
mov
xlat
dec
mov
jge
cmc
jge
mov
repz
mov
mov
repz
jno
cmp
movsl
sbb
mov
mov
leave
out
mov
push
xchg
inc
dec
cmc
iret
movsb
cwtl
imul
pop
test
mov
leave
rcrl
pop
jns,pt
popa
pop
mov
pop
adc
sub
sbb
adc
push
adc
je
pop
push
cmp
popa
xchg
pop
leave
mov
push
xor
movsb
mov
pop
outsb
mov
pop
daa
stos
movsl
dec
imul
xor
stos
mov
jb
push
push
mov
inc
cmc
je
stos
push
cmp
and
lock
gs
fimuls
and
mov
pushf
push
lea
sbb
mov
in
mov
ss
xor
ret
and
jnp
aam
out
xchg
sub
movsb
sbbl
outsb
fbstp
lock
jl
mov
jbe
cmc
xor
mov
rol
sub
xor
cmc
adcb
jle
jge
add
push
push
lret
je
fnstenv
inc
pop
mov
lods
adc
xor
sbb
es
push
or
data16
subb
nop
xor
outsb
dec
jnp
loopne
or
or
sub
lods
ds
jmp
inc
cmpsb
nop
fidivrs
push
fs
std
mov
test
adc
mov
adc
sti
cs
test
mov
sub
cmpsl
clc
inc
das
jp
imulb
arpl
ds
lods
inc
leave
lret
or
adc
pop
les
popa
test
int
das
cmpb
pop
add
jge
pop
push
insl
inc
flds
mov
imul
push
add
push
pop
inc
shll
inc
je
push
xchg
or
mov
xchg
mov
and
enter
xchg
nop
mov
dec
jb
inc
adc
push
stos
push
popa
ss
sbb
mov
shrb
push
cmpsl
hlt
ds
push
dec
ja
xor
push
test
inc
pop
mov
inc
pop
fidivrl
sbbl
jno
inc
aas
mov
lods
mov
push
xor
lods
jle
jmp
fwait
test
push
addr16
call
cmpsl
cs
and
pop
cmp
cmpb
cs
scas
in
pop
aaa
outsb
imul
testb
dec
arpl
xchg
popl
or
movsb
pop
sub
pop
xlat
mov
mov
mov
ljmp
jo
mov
cmp
mov
adc
imul
mov
push
pop
mov
lea
dec
lcall
jle
jnp
push
lret
shrl
test
add
das
addr16
in
inc
mov
mov
insb
push
dec
mov
gs
sbb
out
mov
pop
xor
xor
dec
mov
iret
je
adc
cli
movb
jmp
cli
dec
rcll
iret
push
scas
pop
jle
scas
movsl
sub
rcrb
xor
imul
jbe
cmp
mov
pop
scas
out
jbe
sub
dec
add
cmp
lds
mov
xchg
mov
ds
shll
bound
pop
sub
mov
adc
rcll
pop
mov
popf
aaa
push
sub
mov
inc
jle
jbe
shrb
ret
sbb
cmp
je
mov
in
repz
sbb
xorl
jmp
in
rorb
cmp
inc
cld
adc
mov
push
lret
sub
sub
rolb
push
test
mov
mov
xor
rcll
and
aas
cmp
in
jl
jg
fsubl
xor
mov
call
xchg
dec
or
loop
addr16
mov
sub
xchg
out
xchg
cmpl
das
je
sub
orb
popa
xor
outsl
pop
push
sub
sbb
mov
push
inc
out
rorl
xchg
mov
das
and
sub
inc
add
cmp
mov
xor
pop
pop
dec
bound
dec
mov
pop
shrd
dec
outsb
mov
jno
sub
pop
or
inc
outsl
push
insl
pop
inc
push
xor
dec
hlt
jnp
dec
stos
push
jbe
dec
pop
lea
mov
mov
jns
ret
ljmp
insb
mov
adc
or
sub
push
and
stc
mov
xchg
rcrl
xor
insl
and
cmc
jl
pop
and
pop
arpl
push
xor
scas
daa
xor
jno
xor
pop
mov
xor
and
js
inc
cmc
sub
cmp
addr16
and
xchg
jecxz,pn
cmp
jp
out
xor
mov
ja
cmc
push
sbb
mov
out
xchg
inc
mov
out
sbb
ret
frndint
addb
mov
inc
dec
mov
rolb
jb
pop
sbb
sahf
dec
mov
xor
mov
insb
dec
xchg
jae
aas
imul
mov
adc
pop
aas
and
rcl
pop
dec
push
test
adc
xchg
dec
mov
inc
imul
pop
test
sbb
and
xor
or
jl
and
push
jne
sbb
jo
shr
xchg
and
sub
jg
pop
dec
cltd
jl
push
dec
mov
adc
inc
cmp
fwait
sbb
or
mov
cltd
mov
test
inc
and
and
sub
cs
mov
push
jns
adc
push
lds
jb
add
imul
push
xchg
inc
cmp
add
mov
push
mov
gs
test
pop
shl
inc
inc
mov
stos
stos
in
call
in
test
sub
aaa
jle
dec
cmpl
jo
xor
dec
pusha
xor
out
add
pusha
inc
mov
xor
dec
cwtl
test
cmp
add
or
lret
addr16
cwtl
in
in
jb
aam
ret
leave
and
push
scas
or
int3
lds
arpl
jo
sbb
iret
inc
sahf
inc
dec
cmp
dec
mov
jb
mov
add
and
dec
ds
mov
sub
imul
jnp
inc
sbb
mov
fdivs
inc
aas
mov
and
xor
sub
xchg
aaa
or
or
mov
jbe
cmp
mov
into
aas
outsb
outsl
mov
cmpsl
js
and
adc
aas
jmp
sub
cs
mov
cltd
imul
sub
jo
enter
ja
or
xor
cwtl
inc
sbb
addr16
popa
divb
int3
dec
dec
mov
mov
je
insl
cmpsl
sub
ret
sbb
daa
testb
fwait
test
xor
mov
or
lods
dec
mov
xchg
cmc
push
out
mov
das
hlt
add
test
xor
cmpl
and
test
lods
push
mov
mov
dec
sahf
jbe
and
cmc
imul
stos
fnstcw
push
scas
movsb
bound
lods
dec
xor
test
test
cmp
aaa
inc
xchg
xchg
sbb
pop
push
pop
mov
les
popf
lock
jle
cld
das
pop
pop
pop
inc
adc
xor
and
and
or
stos
insb
test
adc
popl
leave
mov
and
cmp
insb
adc
lods
inc
dec
mov
mov
fmull
stc
mov
jb
in
pop
or
test
push
mov
in
fimuls
sub
dec
xor
jmp
inc
lds
sbb
cmp
mov
dec
xchg
in
lods
fisubrl
jmp
and
mov
mov
dec
rcll
das
sub
aas
test
or
and
push
je
cmp
popl
inc
mov
mov
lea
cld
cwtl
mov
lods
lret
or
xchg
mov
loop
sbb
icebp
push
leave
fimuls
das
sub
das
mov
test
lret
in
or
dec
xor
outsb
fldz
push
and
mov
adc
fwait
je
ds
xchg
xchg
sub
adc
cs
pop
or
jl
fs
lahf
cltd
or
int3
dec
movsb
inc
jmp
pop
jns
cltd
ja
xor
adcl
addb
aas
dec
pop
dec
xlat
les
roll
adc
inc
test
inc
lcall
cwtl
insb
jmp
sahf
into
js
test
adcb
add
lods
mov
push
ja
dec
stos
cmp
mov
push
mov
inc
ljmp
pop
movsb
cwtl
mov
push
insl
sub
repz
mov
and
insb
lahf
adc
push
cmp
movsb
sbb
fldl
lock
push
jle
and
fisubrs
gs
dec
mov
repnz
fdivl
sbb
dec
push
sub
add
inc
and
inc
jb
sub
test
and
iret
stos
test
cmpsl
das
add
insl
xor
mov
and
and
ds
and
dec
andl
pop
imul
jns
jne
mov
or
mov
scas
fwait
push
jp
pop
pop
scas
jg
popa
and
movsb
adcb
int
pop
adc
adc
push
adc
xchg
les
nop
imul
inc
pusha
mov
adc
push
sbb
jbe
or
add
jge
test
inc
int
xchg
rol
arpl
sbb
pop
repz
aam
lret
add
dec
push
add
hlt
mov
lahf
jnp
push
outsl
clc
out
mov
jmp
cmp
mov
and
sub
mov
sbb
xchg
fidivl
dec
sub
sbb
pop
aad
push
and
xor
mov
jl
push
insl
test
imul
jge
adc
testl
add
ret
push
stos
jp
aam
inc
cmp
scas
fsub
mov
roll
lods
xchg
adc
mov
adc
out
stos
xor
mov
xchg
fistps
in
or
shll
xchg
jecxz,pn
xchg
adc
pushf
add
icebp
mov
enter
andl
jecxz
pop
rclb
repnz
fsubrs
int3
in
loope
mov
xor
cmp
out
add
aaa
dec
sub
imul
dec
mov
cmp
adc
add
mov
and
je
jb
leave
xorb
dec
push
insb
mov
mov
out
sbb
cmp
jne
cmp
pop
cli
mov
ret
and
loopne
push
pop
mov
dec
inc
in
add
pop
jb
jecxz
add
xor
cmp
adc
sub
jo
cmp
pop
jne
mov
mov
jmp
pop
je
mov
negl
jg
fsts
push
lock
push
dec
push
push
mov
lret
fwait
outsl
cltd
outsb
lcall
dec
jns
push
sub
mov
mov
xor
adc
mov
or
jbe
dec
push
push
scas
stos
out
stos
dec
sbb
ficoms
push
add
aam
inc
cmp
int
xor
mov
inc
out
jg
popf
aas
mov
aad
test
jl
mov
dec
ret
sub
jo
loope
sub
mov
inc
cmp
lahf
dec
test
push
cmp
and
mov
movsl
push
ret
inc
lds
dec
insb
push
pop
mov
push
ror
fidivrl
jno
push
jl
pop
out
inc
data16
inc
ret
in
add
mov
pop
push
insb
lahf
jns
enter
outsb
stc
push
or
jnp
pop
push
sti
push
adc
stos
stos
ret
test
jo
mov
xor
mov
divl
sbbb
pusha
inc
mov
andb
jb
mov
mov
cs
es
jno
icebp
cli
jae
pop
xchg
shl
mov
cmc
push
je
es
cmp
inc
addr16
jnp
cmp
fidivrs
fistpll
in
icebp
rclb
mov
dec
outsb
popa
js
push
push
and
mov
push
xlat
lock
and
rcpps
jnp
inc
push
inc
cmp
jo
jmp
clc
and
dec
mov
xchg
lock
fwait
test
in
ss
lods
pop
cmp
pop
lret
aaa
cmp
test
and
jbe
dec
mov
addl
sbb
xor
call
out
repnz
lods
and
xor
sub
jno,pt
test
push
iret
daa
xor
data16
iret
fsubr
add
mov
pop
sbb
mov
jge
inc
mov
scas
push
stos
mov
ds
mov
xor
sahf
jp
sub
test
insb
jl
movsb
int3
mov
lret
lock
in
shufps
add
mov
xor
xor
popf
push
dec
adc
or
add
rcll
fstp
sbb
dec
xchg
cltd
xchg
add
daa
mov
pop
fimuls
test
or
shrl
shll
gs
mov
xchg
test
or
pop
inc
mov
js
xor
mov
dec
arpl
loopne
ficomps
pop
inc
add
cld
pop
jle
sbbb
dec
sbb
xor
add
mov
int
fxtract
push
scas
push
sbb
xor
or
cmpb
push
cmc
loope
pextrw
cmp
dec
mov
cmp
test
xor
lret
cli
mov
mov
ret
test
fwait
and
pushf
xchg
or
pop
adc
arpl
sti
push
xchg
mov
stc
pop
inc
mov
test
int
add
pop
aaa
add
into
lret
push
cli
jp
xorb
ds
das
mov
inc
xor
sbb
pop
repnz
cmp
test
sub
stos
jl
fistpll
les
rclb
dec
outsb
or
ljmp
push
out
adc
call
scas
pop
mov
mov
jp
mov
push
mov
dec
imul
mov
cmp
cmp
sub
jmp
mov
ds
jge
push
mov
icebp
inc
pop
xor
mov
mov
pushl
mov
loop
add
imul
out
inc
xor
out
cmp
lahf
das
gs
mov
dec
jmp
push
in
cmp
sub
mov
and
js
popa
xchg
and
mov
push
and
inc
or
add
leave
or
jle
jb
aaa
shrb
in
cmp
push
out
inc
mov
das
dec
adc
sbb
xchg
loop
mov
pop
gs
cmpsl
fcompl
mov
out
xor
xor
test
mov
daa
inc
das
jmp
test
shr
addr16
mov
iret
xchg
in
jge
lret
fs
mov
pop
xchg
bnd
jge
lods
imul
xchg
addr16
pop
push
xor
inc
test
push
aas
sub
push
sub
mov
adc
clc
pop
mov
mov
xor
aas
into
shlb
push
xchg
xor
aam
ljmp
jne
cs
push
int
loope
fucomi
scas
mov
sub
mov
and
cmc
fs
int3
jns
jb
and
adc
jl
add
sub
add
xor
movsl
insl
fadds
jbe
mov
push
mov
bound
inc
jl
je
aam
xor
iret
sarb
jecxz
pushf
mov
cmp
push
scas
dec
inc
jbe
cmp
shl
loop
aas
jnp
and
pop
arpl
fs
jl
insb
shlb
jmp
add
lcall
aaa
sub
push
insb
popf
mov
stos
mov
jb
aaa
outsl
add
cli
cmp
das
lods
push
dec
push
insl
icebp
popw
outsl
jbe
xor
xor
dec
scas
js
inc
inc
mov
jb
dec
sbb
jns
or
je
fidivrs
icebp
fs
xchg
lret
or
aam
lods
pop
xor
cs
ljmp
mov
and
xchg
shlb
insb
inc
outsl
pop
and
shlb
push
nop
scas
lcall
iret
adc
mov
call
push
cmp
cmp
out
sub
pushl
xor
repnz
fnsave
lods
jb
jbe
lods
or
imul
xchg
pop
jg
push
push
dec
cmp
cs
pop
das
adc
pop
or
cmp
push
scas
push
mov
sub
add
jge
pop
int3
fiadds
clc
sbb
lock
test
sub
fbstp
ljmp
mov
xor
cli
dec
adc
insl
mov
sarb
jo
aaa
insb
lds
xchg
gs
fsubl
xor
xor
repnz
mov
xor
out
mov
xchg
xor
add
pop
mov
ret
pop
dec
cmpw
jns
leave
or
push
adc
outsb
mov
xor
lret
fmul
aam
out
pop
mov
mov
mov
jle
inc
xchg
pushl
mov
mov
fisubrl
sbb
xor
push
sbb
add
lods
or
xchg
pop
or
aas
mov
in
dec
test
or
mov
outsb
adc
cmc
enter
popa
inc
push
jo
push
rcrb
xchg
shlb
dec
repz
les
es
xor
imul
mov
cmp
stos
xor
push
shll
jmp
pop
or
out
cmpsl
movsb
sbb
add
test
jmp
int3
xchg
test
rcr
addr16
mov
scas
test
mov
cmp
lahf
dec
xor
sub
cmp
in
lods
pop
or
int
xor
jecxz
repz
xor
in
js
adc
scas
je
sahf
xor
mov
test
ss
xor
or
jl
sub
scas
or
mov
mov
loop
mov
das
xor
out
sub
outsl
and
out
scas
cmp
lods
mov
mov
popa
mov
pop
mov
int3
les
cmp
push
aaa
pop
jmp
inc
das
mov
cwtl
getsec
jbe
adc
mov
cmp
xor
sub
lds
cmp
outsl
sub
daa
cs
sub
out
adc
js
shll
fadds
mov
lods
fs
jmp
loop
cmp
in
mov
inc
mov
push
insb
mov
mov
jnp,pt
mov
sbb
xor
xchg
icebp
insb
fs
sub
inc
scas
xlat
add
cwtl
mov
sahf
leave
add
lock
add
cs
mov
pop
in
pop
jle
or
xchg
xor
mov
mov
leave
xor
outsl
sub
push
cmpsb
stos
cmp
pop
dec
mov
insl
fs
mov
xchg
inc
stos
int3
push
idivl
clc
pusha
les
jl
inc
mov
jne
pop
nop
sub
das
sub
in
lret
ret
rolb
aaa
imul
int
popf
pop
mov
pop
xchg
mov
dec
pop
push
pop
in
dec
hlt
pop
arpl
cmp
inc
pop
int
push
xchg
xor
add
and
jne
cmpsl
mov
add
test
test
out
cs
push
in
xchg
orb
xor
jle
leave
cld
add
mov
mov
mov
mov
outsl
aaa
ja
out
fwait
mov
aas
out
cmp
mov
xor
sbb
fstl
add
int3
test
mov
push
inc
dec
xchg
sub
stc
sub
int
add
andb
jo
fdivrs
daa
cs
push
int
pushf
addr16
inc
ss
insl
stos
imul
cmp
ret
in
add
sbbl
add
mov
xchg
mov
xchg
mov
xor
aam
sbb
pop
adc
jmp
subl
jmp
ljmp
mov
jl
push
mov
cmp
xchg
popf
cs
xchg
shlb
push
lock
bound
cwtl
mov
sbbb
fidivs
cmp
adc
mov
hlt
push
ljmp
cmp
and
xor
xchg
dec
fcoms
pop
leave
push
in
push
push
sub
and
push
xorb
mov
cld
fmulp
add
sarb
daa
pushf
rcrb
or
hlt
add
jmp
xor
and
adc
stos
mov
cltd
inc
sub
mov
pop
xchg
sbb
jbe
ret
cmp
cld
push
lds
push
mov
out
adc
add
shlb
addr16
mov
pop
jb
jno
fstpl
das
mov
mov
dec
imul
mov
cmp
xor
jb
test
aaa
dec
mov
mov
and
dec
xor
movsl
data16
sub
insb
imul
push
inc
xor
lods
and
jno
test
cmpsl
je
fs
out
cmp
sub
mov
insb
mov
andb
or
pop
fs
jge
adc
jmp
inc
xchg
mov
add
push
stos
pop
pop
je
aaa
bound
sub
lea
cmpb
ret
xchg
jbe
ljmp
pusha
lea
or
ljmp
cmp
lret
in
cs
mov
dec
jge
push
les
movsl
in
xor
nop
dec
sub
orl
xor
sarb
outsb
jge
mov
sub
in
jmp
or
mov
mov
mov
stos
ds
sbb
scas
sub
and
push
cld
cld
mov
push
aaa
mov
push
cmp
add
sub
repnz
xchg
xor
insl
cmp
das
das
ja
xor
pop
insb
pop
scas
daa
nop
test
jmp
mov
roll
inc
sbb
pop
xor
mov
in
jnp
lock
jbe
std
and
sbb
sti
shrb
pushl
je
inc
shll
movsl
push
lods
cmp
into
pop
sub
inc
addr16
push
inc
or
inc
inc
pop
test
lods
leave
mov
push
inc
lods
cmpsl
daa
mov
test
mov
pop
pop
cld
jae
test
stos
jo
inc
push
push
int3
mov
test
cld
add
xor
push
test
xchg
xor
gs
add
das
aad
es
clc
xchg
mov
loope
pop
jne
jae
sub
pop
sub
popa
sub
jne
xor
out
push
sub
pushf
sub
ja
push
mov
js
dec
aas
je
sbb
ds
call
mov
test
mov
shlb
mov
sub
push
adc
clc
mov
jne
jo
jecxz
sub
ja
les
pusha
pop
cmp
pop
pop
push
cmp
les
jp
outsb
or
fstl
inc
imul
jg
aas
imulb
add
sub
jge
mov
imul
ljmp
and
mov
push
inc
mov
lret
ljmp
shll
iret
les
ror
jo
inc
scas
push
mov
shrb
mov
push
stc
pusha
mov
add
lahf
cmp
aaa
lods
sbb
aad
mov
andb
jl
lods
es
ja
xor
adc
sbb
jp
xlat
jg
and
sub
movsl
cmp
sbb
or
nop
pop
mov
dec
pop
jns
mov
dec
jne
in
pushf
sub
mov
adc
inc
pop
mov
insb
int3
subb
aaa
and
ds
ljmp
clc
sub
in
es
jbe
cld
imul
mov
mov
js
dec
dec
lahf
dec
and
call
mov
lods
dec
mov
jo
xor
adcl
push
jbe
dec
mov
lock
dec
jno
test
ja
inc
in
pop
xor
mov
jb
mov
pop
fsubrl
fstl
jle
sub
std
lods
nop
mov
loopne
rol
and
loope
inc
push
mov
daa
das
bound
ja
mov
cmp
mov
xor
add
add
mov
inc
popf
ljmp
ljmp
sbb
add
int3
out
cs
mov
pop
or
ja
dec
push
dec
loopne
in
mov
ret
movsl
jne
mov
aaa
push
mov
inc
and
sbb
push
aam
jo
cwtl
mov
das
dec
jmp
xchg
jle
ljmp
dec
mov
int3
jge
jns
sub
push
mov
call
cwtl
sbb
inc
lcall
push
push
push
mov
push
inc
orb
push
and
cmp
push
xor
jo
sbb
sub
int
stos
loopne
jo
outsl
mov
mov
dec
lods
cmp
or
aaa
shrb
xor
rorb
inc
mov
xorl
sbb
scas
movsl
sar
push
test
dec
sub
movsb
and
scas
inc
mov
sub
jp
mov
sbb
aas
mov
int3
lret
inc
ss
lds
lret
and
inc
hlt
push
addr16
clc
js
cmp
ret
in
cmp
inc
xor
mov
xor
dec
in
call
fstpl
jg
jno
jle
shrl
in
rcll
or
scas
push
fists
ljmp
pop
in
and
aas
test
ss
xchg
mov
scas
aaa
or
dec
or
call
dec
in
mov
jl
add
or
sub
dec
adc
dec
test
sub
sti
mov
mov
mov
mov
add
dec
inc
nop
xor
adc
test
ja
cmp
mov
pop
sbb
dec
push
pop
sbb
adc
lock
mov
pop
dec
test
cmp
sub
outsl
scas
aad
sub
push
mov
rcrb
hlt
cmp
mov
addr16
mov
arpl
aas
jb
push
insl
subl
je
les
or
jg
adc
stos
inc
fs
in
dec
sub
pcmpeqb
les
sub
out
mov
dec
cmc
testl
and
inc
mov
push
jns
sbb
es
scas
pop
imul
das
lds
sub
jbe
dec
pushf
xor
scas
sub
mov
les
fnstsw
push
iret
pop
test
jg
and
sbb
mov
test
sub
cmp
sbb
pop
mov
jnp
inc
jno
das
ret
nop
mov
push
sbbb
push
ficomps
xor
and
in
daa
sbb
xor
sub
insl
test
fsubrp
scas
rcrb
jge
fwait
aaa
popa
lret
das
in
xor
sub
out
out
mov
jmp
lcall
push
xor
ss
mov
pop
pop
rcll
cmp
andl
mov
jbe
sub
sub
sub
pusha
sub
jb
sub
pop
jne
int3
lahf
cmp
movsl
imul
sbb
cmpsl
shlb
push
pop
pushf
sub
outsb
das
repnz
xor
mov
addb
pop
xor
fbld
inc
push
andb
es
loopne
in
mov
mov
xchg
jo
mov
lods
ss
lock
or
pop
jne
xchg
cmp
or
dec
cmp
dec
dec
pop
pop
fldl
sahf
es
inc
aaa
enter
cmp
mov
sub
test
sub
xchg
das
fidivs
adc
popf
sub
push
sub
std
or
jl
lea
nop
scas
mov
xchg
dec
and
xor
insl
xchg
jbe
dec
daa
int3
mov
adc
or
aaa
xchg
cmp
mov
cmp
aaa
jmp
or
inc
sub
cmp
aaa
addr16
jae
test
aas
mov
cmp
cmp
insb
add
dec
sbb
rep
adc
xor
aas
orl
pushf
and
cld
out
jnp
xor
or
insl
xchg
jbe
or
int3
scas
mov
call
gs
shl
aaa
ss
iret
cmpsl
mov
or
cs
movsb
das
out
push
xor
decb
mov
out
cli
loope
aaa
sub
out
orb
mov
adc
scas
mov
fadds
cmp
mov
scas
xor
jne
rorb
movsb
ja
xor
mov
push
push
cs
sub
test
mov
scas
cmp
enter
ss
dec
lahf
dec
inc
xorb
js
lock
outsb
mov
mov
test
enter
and
rcl
xor
xor
cmp
cli
sub
and
jb
mov
or
scas
in
sub
jnp
mov
pop
mov
daa
insb
mov
sub
daa
sub
loope,pt
lods
bnd
or
mov
in
mov
aas
adc
das
dec
dec
or
adc
xchg
scas
sti
pop
push
rorl
lock
jecxz
mov
out
pop
pop
jnp
in
je
aaa
mov
inc
jo
jg
mov
adc
push
and
jnp
push
iret
mov
mov
push
shl
rol
ja
mov
shll
xchg
jle
adc
lds
xchg
icebp
testb
rcrl
push
inc
dec
mov
sub
push
rcrb
cmpsb
into
cmp
cwtl
nop
jp
xor
cmpsb
dec
mov
clc
cmp
arpl
adc
aaa
cmp
das
ja
cmpsl
loopne
popf
js
mov
xchg
inc
mov
paddq
mov
cli
cmp
cld
dec
push
movsl
mov
ds
das
js
sub
stc
jmp
mov
ds
xorb
ljmp
dec
arpl
mov
mov
mov
dec
pushf
popf
insb
outsb
push
add
jbe
cmp
push
jl
cs
jg
pusha
icebp
daa
xlat
pop
popa
in
mov
mov
ja
iret
xor
add
lods
xor
inc
mov
sub
jmp
xor
xor
cmp
mov
fcmovnu
mov
jb
and
sub
ret
das
int
in
int
fsubl
sub
cmp
leave
out
jbe
std
pop
jno
pop
pop
je
outsb
lods
sub
adc
test
loopne
sub
and
cs
addr16
inc
data16
mov
jae
lods
xor
add
sbb
inc
lods
inc
loope
pop
or
dec
pop
push
ljmp
repz
add
jb
sbb
shl
mov
pop
in
int3
dec
in
push
lods
gs
in
add
iret
xor
dec
cltd
cmp
xchg
shlb
jle
jle
mov
jnp
fcompl
je
mov
js
or
sbb
fs
pushl
insl
xchg
sbb
in
out
mov
jns
into
or
cmpsb
and
push
sub
adc
cmp
mov
rclb
aaa
dec
insl
nop
repz
mov
push
repz
sbb
pop
scas
sbb
cmc
dec
imul
mov
movsl
inc
sub
dec
xchg
fs
outsl
es
sbb
push
pop
cmp
ds
push
shll
cmpsb
and
pop
ret
push
pop
ret
xchg
and
repnz
insl
cmp
xor
dec
xor
cmp
cmp
push
std
or
das
addr16
sahf
dec
aad
inc
mov
cmp
xchg
push
lods
or
dec
outsl
out
mov
and
add
xorps
push
test
and
or
cmp
cmp
dec
les
repz
insb
das
inc
insb
mov
daa
mov
testb
sub
jg
push
and
aas
lock
inc
mov
push
repnz
cmpsb
adc
and
and
addr16
sub
lahf
data16
push
test
mov
mov
push
in
dec
jg
and
pop
aad
outsb
sarl
fisttpll
sahf
hlt
std
xor
stos
inc
push
and
mov
outsb
xor
pop
and
inc
jg
mov
jnp
popa
lds
xor
and
decb
bound
pop
jecxz
inc
adc
mov
push
adc
pop
test
xor
aaa
ds
fsubrs
or
add
sbb
pop
cmp
jbe
or
sub
mov
cmp
jle
leave
jne
shrl
sub
xorl
sti
ss
in
or
adc
shrb
dec
mov
imull
dec
lods
pop
mov
xchg
xchg
jl
adc
out
lds
xor
rep
push
leave
dec
imul
jl
xor
icebp
mov
addr16
lahf
mov
gs
xor
push
xor
inc
in
dec
scas
xor
sahf
in
loope
insb
mov
mov
or
push
push
adc
daa
leave
and
xchg
cs
mov
dec
pop
addb
cltd
push
cmp
xorb
push
jl
mov
mov
out
and
xchg
lods
xor
inc
push
mov
sub
dec
das
inc
mov
shrb
xor
xor
fnstenv
or
adc
push
lods
push
push
or
addr16
lahf
sub
mov
mov
mov
adc
das
outsl
jb
pop
and
lahf
jp
outsl
jns
xor
push
gs
mov
int3
inc
pop
outsb
pop
mov
fldt
and
sub
insb
cli
rorl
outsl
sbb
dec
test
push
xor
fcoms
sub
out
pop
pop
push
out
xor
xchg
xor
pusha
cs
fidivrl
lock
cs
rcrl
fscale
xor
inc
stos
jge
xchg
cmc
cmp
aas
push
inc
movsl
push
adc
scas
adc
pusha
jb
mov
push
and
in
mov
inc
mov
push
hlt
mov
sub
push
jae
or
xchg
push
ljmp
inc
sbb
cmp
lahf
xor
mov
outsb
mov
imul
push
jo
push
fcomps
lahf
inc
sub
xchg
insb
lods
push
push
outsl
xlat
cmp
push
push
sbb
sbbl
xchg
and
cli
das
mov
sbb
jmp
lods
push
sub
mov
sbb
or
xchg
xor
test
inc
inc
sarb
mov
inc
stos
cmpsb
cwtl
iret
outsl
in
mov
inc
popa
dec
inc
adc
inc
and
int
das
xchg
and
xor
add
lahf
jbe
lods
loopne
movsb
lock
test
cmp
out
gs
nop
js
pusha
loope
lahf
jp
jmp
divl
insl
lods
pop
es
xchg
in
mov
lods
imul
adc
inc
push
in
mov
imul
dec
jecxz
call
or
pusha
push
test
inc
repnz
leave
inc
push
push
xor
jle
outsb
idiv
adc
ret
jle
fsubs
jle
movsb
lret
xor
fisubrs
sub
dec
and
jo
mov
push
fs
fwait
push
or
clc
outsl
gs
cld
cli
loop
ss
and
inc
inc
scas
dec
hlt
or
mov
pop
push
mov
mov
pop
adc
test
insb
dec
mov
sahf
sarb
cld
inc
mov
mov
aad
jne
pop
sub
arpl
sub
aad
xorl
mov
shrl
xor
nop
mov
mov
mov
bound
jb
jbe
adc
adc
inc
mov
jb
lods
hlt
aaa
and
pop
mov
or
mov
add
call
xor
in
inc
adc
pop
or
sub
out
mov
mov
push
sbb
sub
sub
sub
mov
scas
mov
lret
mov
mov
push
push
adc
cld
mov
sub
push
mov
test
add
fiadds
mull
pop
out
ja
ss
cli
mov
inc
mov
ss
and
mov
insb
loope
mov
mov
cmp
jns
mov
pop
inc
es
mov
adcb
test
xlat
in
sub
cmp
cmc
add
ljmp
mov
dec
nop
insb
lcall
pop
insb
rclb
arpl
sar
pop
push
iret
and
mov
adc
xor
test
sub
adc
mov
inc
push
lods
cmp
lret
cs
cmp
cmp
and
push
lods
fnstcw
fisubrs
cmp
cmp
sbb
scas
mov
xor
cmp
push
inc
sub
and
sbb
in
cmp
lods
sbb
mov
inc
imulb
into
std
ds
or
or
mov
pop
and
rcrb
and
pop
ss
rcll
push
dec
lods
ljmp
std
inc
dec
jle
mov
mov
xor
js
mov
mov
ss
pop
insl
sub
fcmovbe
xor
fisubrl
pop
xchg
aad
pop
aas
xor
pop
divl
push
loopne
in
dec
rcll
xchg
roll
xor
neg
xor
pop
les
jnp
cmp
mov
lods
fs
xor
dec
fwait
outsb
dec
mov
rcll
orb
fsubl
cs
jne
cmpb
lock
mov
push
sahf
iret
cmp
mov
xor
jno
ljmp
pop
popa
and
mov
in
xchg
out
push
sub
addr16
mov
ljmp
mov
jae
xorb
inc
insb
bound
fsubl
xchg
je
fsubrs
mov
iret
fs
stos
aas
scas
cmc
xor
mov
xor
in
insb
mov
les
scas
ja
std
or
or
cli
lods
jae
pop
scas
in
into
mov
mov
adc
dec
mov
sti
cmp
aaa
ds
and
lods
xchg
stc
or
jg
imul
and
call
int3
bound
inc
jno
adc
adc
cmpsl
fsubrl
and
pop
inc
mov
mov
jb
shlb
lret
jge
cmpsl
aas
in
ja
hlt
movsb
sbb
imull
or
mov
mov
fcompl
inc
xor
mov
aam
jmp
xchg
jp
daa
jne
dec
xchg
ljmp
mov
in
push
arpl
mov
ja
sub
dec
dec
adc
jne
in
lock
cmp
jo
fs
push
adc
xchg
shlb
mov
cmp
xor
ficomps
test
xor
sahf
int
inc
push
jnp
stos
loopne
pop
xor
xor
inc
dec
xor
addl
pop
repz
dec
push
out
xor
ja
dec
sbb
addl
push
and
push
sub
cmp
xor
sub
push
xor
jp
ds
bound
cmp
lock
inc
inc
out
scas
test
push
in
jae
daa
dec
test
out
xor
popa
out
mov
or
mov
mov
dec
std
xchg
repz
out
test
xor
pop
mov
dec
and
aad
fwait
out
xchg
adc
xor
lods
or
adc
sub
aam
push
test
push
cmp
cmp
xor
adc
inc
sub
mov
lods
xor
scas
jae,pt
shlb
dec
fidivs
outsb
xor
mov
stos
and
jge
mov
pop
ljmp
ds
pop
adc
gs
hlt
dec
nop
sub
cmp
les
fs
jne
divb
cwtl
cmp
xor
test
shrl
xor
idiv
dec
lods
push
mov
sub
mov
imul
loop
dec
xchg
lock
popf
scas
fstps
cld
push
xor
inc
mov
sub
repz
out
pushf
jnp
cld
cltd
inc
push
ficompl
adc
cmp
idivl
xchg
repz
ret
test
push
sbb
push
cmp
inc
inc
adc
ds
dec
lahf
xchg
pushf
xor
dec
mov
das
ds
and
into
pop
mov
das
xchg
sub
mov
pop
sub
adc
adc
mov
push
out
xchg
and
les
out
or
into
outsb
add
jp
out
sbbb
xchg
scas
fs
adc
inc
insb
mov
adc
movaps
out
dec
push
inc
insb
stc
or
inc
jmp
jecxz
sar
clc
mov
xor
fnstcw
popa
xor
sbb
ret
rclb
xchg
dec
sbb
test
cmp
xchg
vpcmpeqb
sub
cs
adc
mov
sbbb
js
and
inc
outsl
pop
push
es
imul
sahf
fisubrl
inc
cmp
iret
call
mov
fucom
pop
imul
xchg
jl
push
ds
inc
xchg
xlat
push
in
popa
push
cs
lods
into
and
mov
push
xchg
test
mov
sub
test
cld
aas
push
ja
and
je
xchg
pop
in
mov
mov
xor
rcrb
loopne
insb
nop
js
lds
dec
fisubs
and
ret
xchg
into
mov
and
cmpsb
mov
mov
arpl
sbb
dec
call
push
mov
and
mov
imul
xchg
mov
xor
sub
jne
push
jge
into
sbb
push
push
fcoml
fists
sub
inc
clc
push
dec
pop
push
stc
js
inc
into
movsb
pop
jp
xchg
mov
les
arpl
or
sbb
jp
jmp
pop
mov
repnz
pop
das
mov
or
inc
jae
dec
xor
xor
cmpl
movsl
pop
xor
outsl
pop
int3
mov
pop
cltd
xor
adc
insb
movsl
xor
mov
cmp
pop
insl
int3
push
dec
cmc
cmp
aaa
adc
and
lds
test
adcb
mov
dec
adc
cmp
or
clc
xor
mov
inc
test
aaa
lahf
mov
movsl
push
jns
push
jbe
xor
pop
xor
cmp
push
cmpb
dec
lcall
gs
push
ret
mov
mov
loope
xor
or
cmc
in
ret
fwait
sub
mov
cmp
sbb
addl
inc
scas
cmp
mov
inc
out
pop
ds
inc
and
jle
stos
lcall
mov
pop
fcmovnu
push
xchg
inc
xor
mov
add
lods
gs
push
mov
stc
ja
out
dec
repnz
insb
arpl
hlt
leave
outsl
and
hlt
mov
out
sbb
leave
repz
xor
pop
pop
inc
outsb
dec
imul
ss
lret
mov
push
lret
fdivs
sbb
pop
aaa
xchg
ds
adcb
sar
ds
xor
daa
stc
out
pop
lock
lea
fcompl
or
insl
divl
sbb
outsb
addr16
fprem1
mov
cs
outsl
mov
mov
push
pop
mov
inc
mov
pop
push
mov
jnp
or
push
inc
movb
jle
dec
ja
movsb
mov
mov
push
aas
adc
leave
out
repnz
push
dec
test
xchg
addb
and
pop
and
push
jne
jb
or
jo
fisubl
xor
mov
lds
xor
ds
addb
sub
imul
ret
scas
test
movsl
loopne
push
pop
iret
scas
and
lret
cmp
xor
dec
push
mov
inc
jmp
inc
inc
ficompl
test
in
push
xor
dec
stos
jno
daa
loop
sahf
xchg
xchg
push
cmpsl
dec
cltd
jp
int3
sbb
push
aaa
inc
arpl
fidivrs
aad
jge
in
sbb
push
nop
inc
cmp
push
das
insl
mov
jge
daa
xchg
test
mov
xor
or
imul
jl
jg
movsb
popl
adc
push
in
clc
outsl
fldenv
jl
jl
push
pop
insl
dec
jmp
jno
fs
mov
orb
aas
push
test
jmp
pop
pop
adc
test
lret
jno
int
jp
dec
dec
jmp
and
mov
adc
pushl
out
testl
xor
push
sub
push
sub
call
adc
xlat
push
add
loopne
das
mov
fcomi
mov
push
mov
sub
pop
idivb
sbb
sahf
jmp
sub
jo
test
jns
mov
mov
dec
push
repnz
jo
lods
enter
push
mov
pop
insb
stos
dec
mov
xor
stos
dec
nop
pop
pop
pop
push
jl
add
mov
fistl
pop
adc
add
loopne
aad
or
ds
push
pop
sub
mov
adcl
je
xor
jno
jl
loopne
dec
xchg
xor
cli
mov
dec
sub
mov
mov
push
pusha
inc
adc
test
mov
jbe
push
cmp
sub
clc
sbb
pop
inc
mov
cld
imul
cmp
mov
add
mov
xor
das
insl
pop
jle
hlt
aam
insb
cmp
jecxz
dec
loop
imul
mov
lods
mov
in
in
loope
out
out
sbb
pop
xor
rolb
ds
adc
mov
jno
lahf
dec
mov
or
xchg
cmp
pop
ja
stc
loop
push
sbb
or
das
ret
inc
xchg
push
cs
das
push
and
ds
insl
xor
xor
jge
sub
jg
jg
sub
jo
xor
mov
int
sub
xor
gs
cmp
xlat
es
xor
scas
sti
cmp
subb
stos
and
int
push
inc
adcb
xchg
jp
adc
cmp
cmc
pop
das
lcall
into
cmc
pop
mov
pop
push
addr16
pop
sub
shrl
mov
hlt
addr16
and
cmp
mov
push
inc
in
cmp
sub
push
adc
gs
mov
mov
mov
mov
mov
cmp
mov
lahf
negl
add
cld
jg
jb
ss
xor
xor
fldcw
push
and
dec
aas
mov
aad
inc
lods
mov
jo
aas
xor
push
xlat
cmp
sub
hlt
mov
ja
adc
pop
into
leave
inc
inc
sub
movsb
in
into
mov
fcmovnu
jbe,pt
mov
insb
jae
sub
lahf
mov
test
movb
leave
iret
cld
sbb
mov
out
mov
dec
dec
push
cmp
movhps
iret
inc
xchg
xchg
ljmp
or
nop
fiaddl
sub
ret
fimuls
lret
cli
and
insb
nop
sub
sbb
inc
imul
je
push
jnp
jl
xor
cmp
divl
xor
in
icebp
xchg
xor
dec
mov
lahf
adc
mov
mov
test
dec
int3
bound
cmpsb
lahf
outsb
dec
js
dec
xor
sub
pop
xor
stos
adc
push
inc
pop
dec
sbb
xor
add
or
pop
inc
pop
das
div
or
sub
sub
je
js
inc
lods
cmc
xor
inc
xchg
jg
or
insb
ds
push
xchg
push
aaa
mov
push
mov
jno
adc
mov
fnstsw
cmp
xor
mov
cmp
adc
mov
xchg
dec
cmp
and
cmp
scas
push
sbb
or
cld
pop
scas
mov
pop
push
popa
scas
push
jmp
bound
outsl
pop
inc
or
pop
dec
pop
daa
or
adc
sub
sub
adc
jl
xor
adc
cmp
das
fdivs
sub
loopne
pop
sbb
daa
xor
xor
sub
inc
jno
test
aas
in
adc
imul
cmp
push
aaa
sbb
xchg
push
jae
std
cs
dec
jmp
add
inc
xor
divl
pop
jno
add
cs
das
dec
movhps
adc
jns
adc
inc
lods
sub
jns
lods
sub
dec
xor
push
dec
mov
inc
das
lret
je
mov
int3
and
lock
inc
or
mov
test
inc
subl
jo
or
push
pop
push
sahf
je
pop
jg
xchg
jne
shlb
sbb
insb
das
cs
arpl
aas
add
daa
je
jo
je
insl
sbb
mov
mov
jne
xor
push
jne
inc
xor
lods
jp
aaa
push
mov
daa
loopne
mov
push
xor
in
ds
stos
into
sub
dec
pop
mov
push
pop
jbe,pt
idiv
je
push
xor
xchg
pop
xchg
xchg
dec
gs
nop
sbb
js
fidivrs
xor
xlat
sub
jne
test
int
jge
inc
and
in
jmp
inc
scas
daa
adc
addb
pushf
jmp
dec
in
or
insb
mov
mov
adc
popa
mov
push
addr16
lret
ss
or
test
jae
mov
pop
pop
ljmp
pop
dec
mov
lods
mov
push
mov
ss
adc
lods
aad
inc
insb
push
sub
sub
xor
roll
cmp
ds
out
rorb
mov
pop
mov
rcll
lock
jb
pop
jne
lcall
das
addr16
sub
insb
and
xor
xchg
add
push
pop
adc
push
test
cmp
leave
mov
scas
jp
mov
ds
sub
pusha
in
mov
icebp
push
ret
imul
sbb
jns
sub
jbe
add
lds
inc
pop
add
mov
ljmp
mov
mov
ss
rcl
inc
jbe
sub
add
imul
bound
mov
xlat
je
inc
sarb
cmp
dec
xchg
sarb
push
push
mov
or
cmp
dec
out
mov
daa
jmp
daa
in
fs
jno
iret
and
iret
add
adc
sub
mov
xchg
dec
test
sbb
dec
cmp
stos
xor
adc
loopne
fisttpl
out
push
rcl
dec
push
sbb
imul
orb
lods
insb
hlt
test
sbb
xor
fsubs
mov
xchg
test
pop
inc
fistpll
out
cmp
adc
inc
dec
xor
cmp
add
std
loope
clc
sub
xor
push
cmc
ds
test
jbe
sub
jbe
fnstsw
xchg
lods
insl
and
mov
sub
in
lods
jns
es
sbb
mov
inc
testb
jo,pt
nop
aaa
mov
and
call
or
sbb
shlb
out
push
dec
addb
pushf
test
shl
pop
add
into
into
outsb
jb
mov
push
mov
mov
sbbl
mov
xor
mov
cmp
std
pop
xchg
aaa
ds
dec
cs
faddl
inc
xor
adc
mov
cmp
addr16
mov
inc
adc
mov
das
popa
or
pop
push
push
inc
or
mov
ret
cmp
das
xchg
push
ljmp
dec
push
push
mov
mov
jge
shrb
aas
cmp
pop
push
cmp
out
je
sub
dec
ficoml
adc
repnz
xor
in
cmp
xor
prefetcht0
leave
cmp
add
ds
adc
lcall
jb
lahf
adc
or
mov
pop
jo
es
lods
cmp
xchg
mov
xchg
cli
or
fildll
pop
mul
push
aas
mov
push
add
or
iret
mov
mov
push
pop
xor
add
cmp
mov
lea
and
push
cmp
sbb
shl
mov
push
cs
cmp
jle
xchg
xlat
inc
add
inc
inc
push
dec
fldenv
test
adc
or
mov
adc
mov
iret
cmp
shl
inc
dec
pop
and
das
dec
stos
aad
adc
pop
jmp
fnstenv
das
and
jae
out
xor
mov
xor
aam
int
pop
popf
xor
pop
adc
or
sbbl
pop
stos
movsl
push
lods
jmp
dec
push
xor
jl
fdivr
pop
adc
mov
or
sbb
and
sub
test
mov
push
adc
scas
divb
xchg
dec
xor
cwtl
xor
aad
mov
scas
cmp
test
ljmp
add
mov
das
push
repz
sub
mov
ds
sbb
stos
mov
mov
cmp
hlt
cmp
or
aaa
outsl
pop
pop
jmp
rcll
dec
jo
sub
cmp
cs
mov
or
popf
test
jmp
shlb
adc
ss
jbe
jecxz
inc
fiaddl
lock
adcb
push
inc
inc
mov
test
push
dec
mov
jmp
xor
aad
xchg
insl
or
test
ud0
or
movsl
lret
in
jns
repz
mov
jle
mov
aas
mov
ret
insb
sub
jnp
push
cmp
out
aaa
and
xor
inc
xchg
mov
jns
push
mov
sbb
jl
in
push
pop
dec
call
mov
xchg
lds
andb
xor
cmp
in
jno
lock
clc
dec
inc
cmp
aaa
dec
dec
sub
mov
sub
je
xchg
push
inc
jno
or
mov
mov
insb
xor
adc
ret
adc
mov
pop
mov
or
aaa
and
iret
dec
pop
nop
int
je,pn
or
inc
and
jle
addb
xor
push
sbb
std
jle
jg
hlt
inc
sahf
push
jle
cmp
push
jno
sub
mov
or
jns
call
push
push
lahf
out
sbb
repnz
lcall
pushf
rolb
lds
cld
ret
sbb
sbb
movsb
mov
fiadds
fst
addb
xor
test
aas
sub
or
adc
sub
xchg
ja
pop
xor
pop
imull
sbb
cmc
sahf
cmpsl
rclb
sub
jmp
mov
insl
xor
xor
adc
lods
das
lock
sub
bound
or
adc
adc
hlt
push
inc
mov
add
mov
sarb
pushf
xor
mov
in
sbbb
jns
imul
cs
mov
xor
cmp
lods
xor
pop
push
dec
les
iret
lods
lahf
pop
movsb
mov
icebp
shrl
or
mov
xor
jl
sub
and
mov
outsl
xor
pop
pop
out
push
adc
subl
mov
stos
adc
xchg
mov
mov
inc
mov
jg
out
pusha
ss
xor
xor
lods
mov
push
mov
mov
sub
jmp
fidivrs
out
push
xchg
inc
or
dec
aas
or
fldl
adc
jae
inc
and
xor
sbb
jno
mov
inc
sahf
push
mov
insb
mov
mov
push
pop
push
or
and
aaa
sub
push
xor
jne
sub
xchg
dec
ss
hlt
mov
push
int
ficomps
mov
pop
mov
adc
jbe
push
ficoms
sti
rorb
xorb
adc
mov
mov
sub
js
mov
mov
xor
and
sub
jns
push
call
adc
shrb
inc
scas
mov
xchg
dec
inc
pop
rcr
fisubl
repz
dec
popa
int3
dec
and
or
cmp
cmpsl
jmp
sbb
lret
out
orl
pop
cld
mov
or
mov
cltd
rcll
int3
scas
popa
xor
mov
int3
ss
lds
dec
popa
in
xchg
pushf
push
mov
cmp
inc
pop
sbb
dec
call
insl
dec
hlt
lds
inc
std
adc
mov
sub
sbb
lret
hlt
popa
inc
sbb
cs
inc
sahf
cmp
mov
mov
mov
lea
into
jg
push
fwait
xchg
jge
fisttpll
pop
aaa
out
inc
inc
pop
jl
dec
cmp
aaa
xor
mov
aaa
mov
mov
mov
inc
push
inc
stos
cmp
sbb
jmp
jne
push
mov
add
dec
cmp
test
xor
inc
cmp
loop
repz
adcl
jae
and
je
pusha
cmp
leave
and
hlt
cmp
pop
pop
xor
adc
scas
adc
jle
rcrl
int
sub
adc
add
jne
xor
adc
inc
insl
jle
sub
int
inc
mov
pop
jp
and
xor
cmpsl
sub
iret
stos
jo
jge
sbbb
sbb
cs
nop
jae
insl
mov
cmp
inc
ds
in
jl
push
shrb
insb
iret
and
cmp
cmp
aaa
jno
ds
cs
repnz
mov
jmp
ret
inc
popa
test
jns
pop
or
xorl
sbb
stc
cs
int
aaa
lods
mov
xor
ss
jo
push
and
cs
sbb
xchg
insl
aas
lds
mov
mov
insb
jo
int
test
cmp
movsb
mov
nop
jno,pt
int3
rolb
bound
xor
imull
ds
cwtl
mov
iret
dec
fs
insb
xor
imul
pop
cmc
imul
dec
inc
scas
repnz
cs
inc
and
fistl
push
hlt
add
pop
mov
pop
xchg
jnp
fadds
sub
xor
out
test
lods
gs
imul
jp
adc
push
stos
adc
dec
pop
cmp
jb
adc
loope
ja
xchg
lods
and
dec
jp
test
adc
aaa
jg
jnp
add
les
testb
cmp
fcomip
imul
mov
add
cmp
add
stos
mov
mov
mov
mov
dec
ret
js
push
xchg
fldt
nop
aad
inc
hlt
cmp
roll
push
mov
leave
out
jecxz
stos
je
jge
sti
push
pushf
cmp
cmp
aaa
mov
subl
lds
xor
dec
pop
addb
addl
sbb
roll
sub
cmp
pop
hlt
icebp
dec
lds
js
push
mov
push
inc
dec
xorl
mov
lcall
outsb
dec
push
orl
and
or
xor
iret
shlb
arpl
jae
xchg
xor
test
int
or
in
jp
addr16
test
cmp
sbb
jl
xor
fwait
stos
push
mov
inc
push
push
cli
js
test
and
push
sub
sarl
jne
jl
das
int3
xor
xchg
and
fsubrs
cmc
sub
pop
sahf
mov
xor
testl
mov
inc
push
push
mov
scas
xchg
push
divb
mov
mov
pop
xor
mov
in
xor
outsl
in
xor
and
pop
and
outsb
mov
push
enter
sub
addl
xor
sbb
pop
xor
push
inc
inc
xor
lods
outsb
loop
outsl
lea
dec
cmp
sub
cli
stos
dec
scas
adc
mov
out
loop,pn
xor
xor
lods
stos
jns,pn
insb
test
leave
push
lahf
cmp
push
xor
pop
xchg
sub
push
pop
iret
and
mov
sub
push
cmp
int
mov
jne
les
pop
out
test
iret
subl
les
jge
adc
or
fistpll
push
je
aaa
sahf
lret
pop
mov
pop
push
jae
lock
cmp
push
or
das
hlt
jge
cmp
out
xor
sbb
dec
sub
lods
jmp
xor
pushf
cmp
inc
hlt
push
cmp
scas
into
rcr
jge
pop
xchg
fdivs
pop
pop
pop
mov
sub
xor
dec
mov
mov
ret
pop
movsb
mov
push
xor
dec
sar
out
sbb
jnp
iret
loope
je
mov
push
shrl
out
dec
das
dec
xor
jno
call
jb
mov
cmc
xor
xor
jb
mov
adc
lcall
cmp
movsb
jns
mov
dec
ds
jmp
lock
lahf
mov
jo
pop
mov
mov
jno
and
fwait
dec
push
sub
jg
jge
xor
inc
fwait
aam
push
icebp
and
jo
andb
stc
mov
pop
addl
xor
cmp
mov
out
push
cmp
aaa
mov
inc
sub
ljmp
cmp
roll
jp
subb
pop
and
lret
jp
sar
aas
adc
popa
and
aaa
jecxz
mov
inc
sub
cmp
or
lret
out
ja
scas
pop
jl
popa
jp
xlat
jg
cmc
icebp
mov
pop
adcl
xchg
cmp
je,pt
jne
aaa
xor
pop
or
or
cmp
das
dec
je
push
leave
cmp
push
call
testl
push
ss
movsl
dec
inc
dec
sub
or
cmp
add
push
mov
out
jle
icebp
add
sti
mov
call
jb
lcall
xchg
xchg
lret
cmpsb
shll
cmp
sub
dec
and
mov
out
mov
ljmp
fcoml
and
out
lea
and
pop
xor
xor
xchg
aaa
jnp
jge
xor
jmp
cmc
outsb
out
mov
ja
adcl
cmpl
les
or
lcall
out
sub
pop
and
cmp
outsb
int
in
jb
push
jmp
pop
ljmp
gs
mov
sbb
jmp
fnstsw
jbe
xlat
lea
dec
repnz
fsubs
xor
daa
test
pop
test
add
add
and
in
fisubl
push
fcomps
jmp
add
ret
mov
dec
add
push
stc
inc
lods
inc
push
imulb
push
ss
mov
fdivl
sahf
jb
sub
test
cli
sbb
dec
in
fisttpll
push
jo
es
jp
ja
dec
imulb
mov
dec
test
adc
arpl
popf
cmp
movsb
dec
std
gs
pop
inc
insb
sub
pop
xchg
sbb
pop
xor
adc
lret
andb
jmp
pop
out
adc
and
mov
js
hlt
ret
popf
push
int3
daa
xchg
mov
test
mov
mov
mov
out
dec
outsl
data16
push
inc
mov
test
jp
leave
jl
pusha
in
adc
insl
and
das
add
out
outsl
icebp
push
hlt
xor
test
popa
jp
push
push
and
das
ljmp
jbe
push
stos
call
sub
and
mov
jo
xchg
adcl
enter
test
lds
scas
sti
or
aaa
addb
cmpsb
mov
push
dec
add
fdivl
dec
adc
push
xor
rclb
jp
cmp
or
and
sbb
jmp
jb
mov
cmp
jmp
addr16
bnd
and
pusha
pop
xchg
mov
int3
inc
ja
adc
aam
fiadds
in
push
cmp
add
ret
sub
leave
pop
sub
sub
inc
cmp
pand
rcll
dec
fstl
in
es
out
outsb
in
sub
xor
leave
cltd
push
in
fsubrs
subb
in
sarb
clc
xor
jecxz
mov
dec
push
stos
inc
jbe
outsl
loope
push
lods
adc
in
je
test
mov
addr16
stos
imul
sbb
add
out
lcall
icebp
mov
insb
dec
push
rcl
dec
xor
adc
dec
push
push
inc
addb
cmp
cltd
xor
mov
arpl
jle
orb
xchg
dec
xor
mov
pop
ds
fs
cmp
shrb
push
mov
add
les
sbb
sub
push
bound
dec
mov
push
dec
mov
dec
cwtl
ds
inc
in
ja
dec
scas
ror
and
cwtl
data16
ret
inc
ret
ljmp
cmc
inc
inc
aaa
push
pop
imul
pop
hlt
fsubl
std
cmpsb
or
sbb
xor
sub
adc
scas
and
jmp
sbb
insl
pushf
sbb
mov
insb
sub
pop
mov
pop
jl
or
in
cmp
or
sub
and
lea
sub
sbb
or
pushf
xor
mov
mov
lcall
in
or
or
and
clc
inc
add
mov
pop
cmp
or
adc
cmc
ret
add
add
push
and
addr16
cld
mov
das
les
movsl
push
repnz
mov
sub
mov
xchg
xor
jmp
xor
jo
in
adc
xchg
jne
ds
hlt
add
sub
je
push
or
dec
dec
in
push
jmp
leave
decl
test
jbe
adc
aaa
js
ja
sub
mov
push
scas
pop
fiaddl
cmp
icebp
hlt
out
jbe
je
sahf
out
mov
out
cli
xor
cs
cld
push
in
cmp
dec
ss
int3
insb
lods
repz
add
xlat
pop
or
je
stc
cmp
inc
sarl
call
inc
orb
mov
sbb
and
mov
cmpsl
and
je
addr16
jmp
pop
stos
outsb
inc
test
add
mov
xor
or
sub
and
mov
test
mov
rorl
or
xchg
pop
ss
sub
xchg
pop
aas
mov
pop
inc
jmp
jne
lds
lret
mov
mov
or
jmp
das
cmp
das
jbe
jb
xor
inc
or
sub
arpl
aaa
add
lods
mov
push
mov
or
mull
rcll
test
push
or
or
or
push
in
icebp
das
outsl
lods
sub
aam
shrl
mov
jp
imul
stos
mov
and
mov
shr
sbb
lea
and
cmp
adc
sbb
or
push
aam
movsb
ds
jecxz
ret
pop
pop
pop
outsb
cmp
lahf
lea
dec
and
in
out
sarb
jnp
inc
cmc
dec
mov
xor
jg
and
mov
icebp
xor
popa
mov
dec
pop
out
xchg
inc
push
cli
ret
xlat
cmpsl
clc
mov
lods
mov
fwait
cmc
fldcw
arpl
shl
pop
popf
scas
mov
hlt
stos
lock
test
xor
outsl
inc
xor
filds
dec
jns
jo
addr16
jp
dec
leave
icebp
cmpb
aaa
shll
mov
jo
lea
fcom
push
pusha
pushw
dec
shlb
test
jmp
add
movsb
mov
jg
pop
iret
lods
mov
mov
clc
mov
jp
mov
sti
jl
jbe
adc
addr16
push
out
jecxz
addr16
repz
adc
sahf
jo
jg
aam
pop
xor
push
lret
jl
dec
pop
xchg
cmp
dec
mov
lods
mov
inc
push
dec
mov
sahf
ljmp
adc
push
mov
push
sbb
and
lods
adcl
xlat
popa
ret
lods
data16
xor
xor
cmp
lods
xchg
mov
mov
in
xchg
cmp
aam
inc
xor
fcmovnbe
cltd
sub
cmp
test
pop
out
jl
iret
icebp
leave
push
ficomps
xchg
cwtl
and
int
cmp
xor
push
xor
mov
pop
mov
add
cmpsb
pop
insl
xor
cmp
inc
jb
mov
pop
push
cmp
stos
inc
das
shll
stos
pop
mov
mov
sti
ss
lods
and
lods
mov
jo
add
mov
outsl
or
stos
pop
push
xor
pop
xchg
xor
aas
adc
rorb
aas
mov
push
mov
cmpsb
es
pop
gs
xor
cmp
out
push
out
cmp
out
cmp
push
inc
fldt
scas
repnz
cli
subb
sub
lock
ds
out
xor
pop
jp
sarl
aaa
scas
adc
and
mov
or
mov
stos
lahf
pusha
mov
stc
adc
mov
mov
subb
xor
sub
cs
inc
adcl
mov
and
adc
jecxz
test
and
jnp
in
add
jl
xor
inc
cs
das
lds
jge
je
out
mov
push
into
xrstor
push
repnz
ficoml
imul
mov
mov
sub
out
insb
mov
dec
aaa
or
xor
mov
lods
fs
mov
lock
mov
test
mov
outsl
jg
es
sbb
in
cmc
inc
mov
or
js
jnp
adc
dec
xor
scas
adc
js
xor
mov
sbb
ret
sub
push
jg
in
or
insb
pop
xor
jo
in
pop
lret
mov
dec
add
dec
insb
sahf
lret
ss
push
cli
ds
mov
sub
xchg
ds
ret
fs
dec
pop
mov
xor
xchg
adc
mov
aaa
pop
imul
adc
lds
jmp
mov
sub
stos
pusha
pop
sbb
out
aaa
cmp
cmpl
jns
mov
xor
inc
mov
cmc
xor
mov
imul
pop
dec
mov
mov
dec
cmp
mov
mov
push
push
add
jo
mov
jo
dec
scas
mov
dec
jns
or
or
cld
inc
cmc
cs
mov
rol
mov
scas
testl
xor
ficomps
insl
call
push
test
inc
push
push
ss
daa
add
out
aas
adc
outsb
es
sarl
xor
mov
inc
cmp
inc
sbb
adc
mov
jl
js
mov
or
push
call
or
sarl
cmp
pusha
mov
push
cmp
lock
cmp
arpl
fs
pushf
sub
sub
add
adc
push
mov
fisttps
jl,pn
xor
inc
rcrl
outsb
jb
cs
or
pop
jmp
xor
outsb
test
mov
xor
aaa
xor
cmp
adc
iret
mov
fnstcw
in
repz
dec
sub
xor
ss
in
in
pop
popl
ja
adc
stos
jno
xchg
sbb
in
add
jns
sub
decb
push
xchg
and
jne
sbbl
mov
addb
imul
dec
test
pop
push
and
arpl
int
ss
xchg
xor
fisubrl
cmpb
adcl
mov
es
push
test
push
je
nop
xchg
push
ret
xchg
sbb
sbb
ds
test
mov
jo
jno
push
push
mov
mov
xor
shlb
mov
lods
out
lods
inc
sahf
das
out
scas
ds
xor
pushf
mov
scas
insl
cmp
mov
fs
addr16
loop
pop
cmp
mov
loope
inc
jmp
divb
mul
or
mov
arpl
pop
adc
mov
enter
sub
and
mov
enter
call
and
push
and
or
pusha
imul
dec
ss
sbb
sub
std
or
pop
jl
sti
mov
out
and
adc
test
fwait
adc
push
stc
sti
and
adc
ret
fstpl
movsb
into
jns
dec
cmp
insb
dec
mov
mov
test
outsb
pop
daa
fsts
mov
add
jbe
cmp
xchg
jp
lea
cmp
loopne
push
enter
push
loop
hlt
mov
or
in
leave
sub
fldl
sbb
outsl
push
push
xchg
dec
cmp
sub
mov
adc
nop
cmp
ret
imul
jmp
lods
xor
and
aaa
pushf
sub
mov
mov
outsl
adc
sbb
mov
cld
xor
cmp
imul
mov
dec
mov
lahf
xor
cmp
adc
pop
mov
je
cmp
push
mov
data16
mov
aaa
xor
cmp
dec
pop
data16
mov
xor
imul
sbb
push
mov
sbb
add
xchg
aam
mov
pop
shrl
ds
into
add
fidivl
adc
pop
dec
pop
mov
xor
pop
sarb
outsl
cmp
jno
insb
ds
hlt
dec
cmpsl
xchg
xchg
mov
xchg
xor
and
jnp
ss
shlb
js
mov
test
cs
jae
ja
cmc
adc
sbbl
ds
sbb
xchg
insl
stc
fwait
in
xor
pop
cmp
lea
into
mov
and
pop
mov
loopne
cs
cmp
push
adc
fwait
scas
aaa
out
mov
xor
mov
cmpb
fstps
outsl
dec
dec
cmp
jae
in
insb
add
sub
adc
std
sbb
mov
je
sub
cmpl
iret
cmpb
dec
nop
in
sub
movsb
pop
pop
xchg
fimuls
and
xchg
ljmp
mov
test
cmp
xor
hlt
test
adc
mov
fldpi
inc
mov
sub
pop
sub
in
loop
lret
popf
scas
insb
adc
xchg
xor
mov
lds
shll
push
ret
or
or
hlt
pop
and
ss
cmpsb
mov
jp
push
dec
addb
loop
pop
xor
jg
out
fs
movsb
jbe
mov
jnp
fst
push
cs
inc
stos
fs
pop
outsl
das
xchg
inc
test
aam
inc
lods
cs
sub
xchg
stos
cmp
and
stos
pop
aas
mov
mov
rcrl
xor
jno
xor
push
mov
or
add
push
sbb
mov
inc
je,pn
inc
or
pop
cmp
das
or
push
xor
dec
out
stos
pop
push
shrl
es
pop
mov
pop
in
les
jp
jno
lcall
test
fsubrs
shll
test
mov
sub
popa
pop
loope
mov
inc
pop
xlat
fbstp
inc
adc
mov
inc
xchg
xor
popf
xor
sub
mov
iret
int
bound
xor
xor
imul
lods
fwait
ds
les
xor
incl
cmp
test
outsb
hlt
ljmp
in
xchg
mov
sbb
dec
clc
dec
xor
jo
adc
push
je
mov
sbb
push
sbb
and
in
sub
cmp
aaa
out
mov
rcrl
inc
sub
cmp
cs
das
pop
adc
in
or
repz
mov
and
xchg
pop
imul
adc
in
daa
xchg
push
mov
lods
push
addr16
sbb
xchg
jl
inc
cmp
xchg
dec
jp
dec
xchg
pop
popa
dec
mov
ja
pop
std
xor
call
js
lods
xor
cmp
das
sar
dec
adc
cmp
js
sbb
xchg
jnp
sub
insb
mov
jns
test
push
sbb
push
dec
push
in
sub
popf
sub
lea
pop
mov
adc
xor
leave
mov
sub
ret
adc
outsb
xor
xor
adc
out
subl
pop
or
aaa
test
movsb
xor
xor
test
cmp
mov
mov
imul
push
hlt
lods
dec
xor
adc
jns
inc
test
xor
or
cmp
dec
lcall
inc
sub
jge
cmp
dec
stos
jl
es
cmpl
divb
push
lea
and
jl
cmpl
xchg
daa
aas
movsl
mov
mov
imulb
das
outsl
xor
sub
loop
push
ja
cmp
popa
mov
pop
and
aas
cmp
xchg
xor
lahf
das
insb
xchg
test
mov
pop
mov
lods
ds
inc
das
sub
mov
and
and
scas
pop
lods
xor
mov
aaa
scas
insb
cmpsl
jg
push
hlt
add
inc
xchg
in
mov
mul
pop
add
inc
xchg
sub
inc
lret
std
add
stos
add
test
mov
cmpsb
mov
lods
or
mov
sub
aaa
push
dec
repz
xchg
les
xor
jo
push
js
jno
push
js
xor
add
mov
push
xor
xchg
jmp
sub
scas
and
ljmp
cmp
xchg
inc
aas
negb
int3
xor
jp
mov
ja
sbb
or
xor
pop
ret
xor
mov
sub
popf
leave
fcoms
push
stos
adc
lock
hlt
out
rorb
lcall
xor
sub
ds
testl
xchg
dec
or
xor
dec
push
in
pushf
dec
jb
cmp
xor
adc
and
inc
add
repnz
jg
jne
add
ds
sub
add
and
inc
or
fdivrs
icebp
mov
notl
dec
xor
cmp
dec
or
negl
popf
sub
xchg
or
test
add
and
xor
movsl
mov
adc
sbb
cmp
mov
xchg
add
loope
cmpsb
sbbl
push
in
incl
adc
jmp
push
sub
into
lret
xor
xor
lods
pop
jp
lret
ss
lock
cs
mov
fcoml
dec
mov
jb
pop
pop
push
jl
outsb
bound
loop
sub
jmp
mov
cwtl
inc
andl
jmp
pushf
mov
lahf
or
xchg
mov
and
adc
and
dec
and
out
mov
lods
adc
fcoml
inc
orl
mov
stos
inc
fstps
jmp
mov
into
cmpsb
push
imul
mov
mov
inc
xor
pop
jge
ret
add
push
xchg
cli
dec
xor
xor
outsl
mov
ja
pop
or
cmp
pushf
mov
jo
mov
cs
loope
push
xor
xor
and
jmp
sbb
in
inc
sub
sub
push
mov
sahf
cmpsl
xor
cmp
pop
cmp
sub
mov
cltd
sub
fadd
inc
aaa
test
xor
in
jbe
or
stos
push
stos
and
icebp
jecxz
xchg
xchg
mov
dec
stos
push
shlb
jg
inc
jno
stc
push
fwait
dec
mov
xor
or
sbb
sbb
mov
jp
lret
aas
lock
or
mov
pushf
movsl
lods
sbb
mov
out
pop
addr16
jge
adc
mov
jne
ss
pop
sahf
dec
cmp
jle
mov
and
push
loop
mov
rcrl
jnp
repz
cmp
addr16
hlt
aaa
adc
dec
mov
pop
bound
or
cmpb
xchg
jns
add
scas
push
dec
xchg
stos
jnp
adc
or
out
ret
mov
in
pop
mov
rorl
sbb
rcll
jmp
mov
lods
dec
insl
addb
insl
inc
or
jecxz
cmp
mov
push
aad
aaa
pop
fistl
ss
and
std
in
ss
sub
push
out
test
iret
retw
cmc
aas
imul
or
in
push
push
das
gs
dec
mov
pop
cmp
jle
dec
imul
cmp
dec
pop
add
push
stos
sbb
sub
cmc
sbb
data16
push
les
and
jg
ds
mov
in
xor
cmpl
or
nop
dec
scas
and
push
xchg
lret
roll
testb
dec
sub
stos
cmp
push
scas
adc
in
ds
mov
clc
xchg
adc
fldl
pop
push
int
lret
push
gs
dec
inc
addb
xor
sahf
adc
cmc
or
push
push
mov
cli
push
xchg
repnz
sarl
add
sub
test
dec
cwtl
and
outsl
dec
sub
sub
jnp
inc
insl
into
dec
cwtl
test
dec
push
gs
mov
jmpw
xor
xor
mov
js
push
xor
pop
mov
mov
inc
or
pop
cmp
inc
push
adc
std
outsb
xchg
xor
jno
push
mov
out
add
les
lret
repnz
mov
lock
push
pop
std
js
addl
xor
mov
mov
jne
cmp
adc
jne
mov
or
push
fidivl
cmp
push
add
jns
enter
lea
cmp
and
mov
jle
push
sub
ret
sub
mov
xor
inc
adc
pushf
ficompl
and
in
jbe
inc
lcall
lods
sub
cmp
out
sub
cltd
loopne
out
loopne
loopne
iret
into
dec
insb
mov
inc
shrl
add
adc
and
add
or
lea
pop
pop
mov
mov
dec
pusha
mov
std
jno
lock
sub
pop
iret
ja
pop
mov
shr
test
scas
imul
xor
pusha
jecxz
push
adc
test
ret
jb
push
test
mov
repnz
mov
pop
lods
repz
push
push
das
jecxz
pop
inc
test
cmpsb
les
loope
andb
adc
rcl
jns
cmp
fsubrl
fldl
jno
mov
jle
js
xor
mov
pop
adcb
dec
stos
repnz
mov
and
inc
mov
decl
lods
cwtl
jle
test
je
cmpl
jl
add
adc
xchg
testb
popf
arpl
popa
and
in
cmp
mov
inc
dec
mov
inc
fs
pop
add
xor
and
adc
insl
daa
push
clc
or
loope
adc
out
jne
mov
xor
mov
mov
xor
orl
push
cmp
lock
insl
pop
mov
enter
sub
xor
pop
adc
pushf
icebp
out
fcoml
mov
jp
add
enter
sbb
ret
jl
adc
data16
add
sub
int
out
leave
test
cld
xor
dec
pop
xchg
jl
xor
js
push
xchg
dec
fdivrl
cmp
mov
pop
loopne,pt
or
jno
mov
sbb
jle
aaa
push
scas
xor
ss
hlt
popf
or
sbb
aas
xchg
xchg
add
dec
pop
out
pop
dec
mov
lods
rcl
pop
rorb
jno
outsl
stos
adc
aad
dec
sub
mov
sub
clc
out
in
or
mov
jno
jmp
call
adc
dec
xor
sub
xor
push
xlat
ret
sarl
add
cmc
and
jl
dec
lock
out
test
movsb
ds
insb
arpl
push
lea
lret
loop
lods
mov
jl
xchg
insl
ja
pop
lahf
loopne
insl
leave
imul
out
out
push
xchg
iret
cmc
jge
les
adc
push
mov
push
mov
jecxz
xor
test
jl
mov
mov
push
ds
sarb
mov
dec
je
mov
dec
out
test
pop
xor
mov
cli
ret
roll
fstl
inc
dec
cmp
push
mov
pop
aam
imul
mov
or
fcmovu
mov
dec
arpl
jle
cs
xchg
outsl
xor
xchg
pop
mov
add
xchg
in
and
sahf
jge
insb
dec
pop
jnp
dec
cmp
push
adc
xchg
int
insb
add
or
pushf
imul
dec
push
loope
lcall
mov
insl
xchg
outsb
jle
inc
aam
pop
mov
shl
movsl
lods
dec
pop
mov
mov
jl
pop
inc
jg
imul
leave
fimull
dec
mov
aam
in
sbb
les
xchg
pushf
stc
jae
imul
outsl
shll
jo
dec
push
jl
sub
add
mov
das
adc
mov
or
mov
sbb
mov
das
roll
aaa
inc
test
aam
ljmp
mov
mov
adc
cmp
xchg
lods
pop
imul
mov
inc
aaa
jl
test
rcll
das
movsb
mov
dec
loope
insl
lods
les
sbb
ret
out
loop
clc
dec
ds
int
aad
dec
or
xchg
push
icebp
push
xor
std
inc
push
mov
shlb
mov
or
push
dec
jg
movb
jl
dec
push
js,pt
cld
cmpsb
inc
inc
xor
sbb
dec
sbb
inc
jg
popa
shlb
ljmp
in
pusha
dec
daa
ds
push
aas
xchg
or
pop
jo
dec
mov
dec
aaa
pusha
dec
filds
sbb
jmp
xor
cmp
dec
lret
repz
sub
je
fsub
in
mov
sahf
sbb
inc
jg
int3
out
adcb
scas
sarb
je
push
cmpsb
cli
jge
rolb
out
ja
stos
or
pop
jns
lock
push
aam
adc
arpl
mov
fnstsw
jge
push
push
and
int
xor
push
mov
jg
xchg
xor
pusha
mov
xchg
shrl
push
pusha
sbb
dec
mov
icebp
sub
mov
adc
insb
sub
xor
insb
outsb
mov
pushf
xor
gs
outsl
mov
sub
inc
cmp
lds
lahf
cli
jg
fsubs
pop
mov
mov
and
xchg
nop
xchg
xor
je
outsb
das
dec
cmp
adc
jnp
daa
jne
icebp
shrl
cmp
push
xchg
xlat
dec
dec
popa
imul
xor
push
inc
and
ret
int3
in
mov
and
pushf
cmp
cmp
cmp
jmp
push
movsl
xor
sahf
stos
dec
cmpsb
xchg
push
jbe
outsb
sbb
add
dec
push
cmp
xchg
push
dec
enter
xor
add
dec
shlb
dec
xor
push
mov
mov
sub
sub
iret
mov
dec
jo
into
sub
popa
insl
int3
push
mov
or
dec
test
in
adc
movsl
loopne
ja
lods
sbb
aad
mov
pop
out
jns
inc
pop
out
pop
push
mov
pop
pop
popa
ret
dec
dec
jl
int3
data16
cmp
dec
lahf
jb
push
mov
and
pop
xor
insl
sub
aaa
aam
inc
jl
repnz
jb
dec
inc
xor
add
pop
add
pusha
mov
xchg
aas
ja
jbe
xor
mov
xchg
scas
cmp
mov
clc
test
icebp
add
fistpll
stc
xor
pusha
shrd
int3
aaa
sub
pop
stos
pop
js
and
nop
dec
mov
das
dec
inc
cli
pop
sub
jg
jb
int
xchg
rorb
cld
adc
mov
mov
ja
aaa
gs
test
stos
cmp
mov
enter
sub
mov
mov
xor
inc
lods
inc
mov
fcoms
ret
and
outsl
addr16
jne
dec
mov
jae
in
mov
pop
rcl
and
pushw
pushl
mov
lock
adc
int
xor
cli
ret
mov
push
sub
xchg
xor
mov
lahf
jp
mov
imul
lret
movsb
fldl
repnz
adc
jnp
nop
lods
test
mov
in
cmp
xchg
jb
clc
xchg
and
gs
ds
in
xor
and
sub
scas
in
out
xor
inc
scas
sbb
jl
cmp
ret
jp
jge
sarb
xor
sub
lods
cmp
inc
in
or
inc
stos
adc
daa
repz
daa
aas
in
mov
lods
mov
mov
xchg
push
jno
aaa
cld
adc
mov
mov
mulb
bound
fwait
jle
jbe
pop
or
outsl
pusha
xor
scas
inc
jp
lods
loope
pop
fucompp
inc
pop
gs
stos
add
mov
mov
adc
clc
sbb
out
xlat
and
insb
aaa
adc
mov
ss
push
jno
mov
push
cmp
sub
xchg
dec
pop
jle,pn
sub
out
lods
mov
jbe
out
adc
push
hlt
leave
cmp
je,pt
xchg
add
xor
xchg
xchg
incb
es
adc
lret
push
jb
cmc
aas
imul
iret
sub
mov
add
ljmp
cli
push
inc
bound
cmpsl
mov
cmp
test
mov
nop
jno
dec
je
or
je
mov
loopne
mov
pop
addb
cmpsl
jl
mov
mov
mov
xor
push
mov
xlat
mov
ret
push
test
mov
or
loop
cmp
sbb
or
xor
out
mov
add
xchg
sbb
push
lock
into
ss
ljmp
pop
mov
or
or
aam
mov
mov
icebp
mov
jge
ret
push
call
push
jnp
pushf
js
mov
xor
adc
add
dec
in
das
out
dec
xor
xor
test
ret
xchg
sbb
lods
jg
leave
loopne
inc
insl
inc
lods
test
mov
xor
and
inc
aad
nop
loopne
mov
dec
jge
cmc
xchg
mov
xor
mov
imul
mov
jecxz
fiaddl
xor
adc
pop
inc
sub
push
jmp
dec
jmp
jmp
cmp
nop
push
dec
roll
inc
mov
xor
icebp
add
adc
pop
mov
mov
ljmp
arpl
push
mov
pop
inc
inc
pop
lahf
dec
add
je
mov
popa
or
cmc
dec
push
cs
fildl
ret
jle
jl
sahf
and
jge,pt
into
pop
div
inc
xor
xchg
nop
add
jl
ret
test
imul
sub
or
pop
or
in
movsb
jl
pop
je
and
xor
push
negb
inc
mov
jge,pt
xlat
mov
cltd
mov
test
inc
mov
mov
cmp
test
fcmovu
insl
mov
stos
lcall
push
out
inc
sbb
add
push
es
inc
push
ret
inc
push
arpl
adc
dec
sub
pop
xor
dec
add
xchg
subb
dec
xorl
xchg
and
clc
jnp
out
gs
adc
push
pop
ss
xchg
xor
mov
mov
add
fwait
outsl
cmc
and
mov
xchg
pop
mov
jnp
cmp
xchg
fwait
cmp
lret
xor
pop
push
sub
fidivrs
xor
and
sbb
xchg
add
fcoml
inc
pop
push
dec
fldenv
mov
and
ficoml
in
cmp
mov
inc
popf
mov
pop
loop
int
cmp
sbb
mov
inc
insb
aaa
je
inc
call
xor
testl
pusha
push
andl
loopne
push
stos
loop
sbb
adcb
fnsave
pop
jo
push
pop
pop
test
jge
push
mov
insb
push
adc
adc
mov
mov
pop
mov
cmp
cmp
jl
int3
jle
aaa
les
int
int
cmp
sahf
push
ljmp
js
arpl
lds
push
jo
jno
dec
jge
movsl
subl
fs
shll
ret
sbb
mov
lods
dec
and
mov
mov
dec
jbe
mov
mov
mov
jae
rcll
inc
repnz
xor
dec
xchg
mov
shlb
jno
pop
or
push
lods
aas
mov
pop
jge
xor
dec
pop
outsb
xchg
mov
pop
jo
mov
jnp
jno
mov
mov
xor
das
daa
push
addr16
loope
int3
jno,pt
imul
inc
ds
add
cmp
push
adc
test
jle
inc
pop
insl
mov
add
out
mov
lods
sub
popl
das
pop
pop
pop
xor
xchg
or
inc
adc
test
xchg
iret
cmpsb
fstpl
jle
dec
shlb
in
xor
xor
inc
add
hlt
jns
mov
adc
cld
cmp
es
dec
push
push
rorl
dec
mov
pop
jo
push
es
pop
aaa
shlb
adc
mov
enter
into
dec
or
sub
dec
sub
stos
mov
popa
mov
nop
fs
mov
ds
sbb
arpl
repnz
mov
lods
sub
sbb
std
mov
shlb
pop
inc
int
jl
cmp
sahf
fimuls
aas
ficompl
fdivl
push
xor
push
and
jp
hlt
pushf
sahf
cmp
adc
sbb
jle
push
cmp
cmp
adc
ljmp
cwtl
inc
icebp
cld
mov
clc
popf
shll
dec
push
jnp
ficomps
pop
ss
pop
jnp
fisubs
pop
inc
push
dec
add
lea
xor
sub
cld
ret
aas
dec
xor
sub
pop
out
xchg
das
cmp
mov
and
pop
out
cmp
lahf
clc
cld
sub
cmp
call
es
xor
std
daa
ds
jle
and
pusha
lods
xor
dec
mov
inc
sete
lods
mov
sub
insb
push
push
insb
les
imul
mov
inc
inc
dec
in
aam
pop
shlb
mov
mov
jl
pop
dec
jl
push
mov
out
dec
push
mov
icebp
xchg
repz
adc
mov
test
or
mov
dec
or
push
add
insl
sub
jge
cmc
cmc
scas
outsb
cld
gs
adc
jg
sahf
insb
push
imul
ret
add
jo
arpl
push
in
mov
cmpsb
pusha
push
out
lret
cmp
xor
sub
std
xchg
repz
push
xchg
mov
fst
mov
iret
mov
jle
mov
cmp
dec
add
into
push
insb
stos
sahf
daa
pop
frstor
popf
add
mov
pop
lods
sub
sub
fidivrl
jg
outsl
adcb
shrb
out
into
fiadds
pop
aas
jle
inc
dec
jbe
push
push
rcrl
inc
jl
dec
out
xor
js
mov
mov
ret
lahf
daa
sub
mov
insl
dec
imul
imul
cmp
cmp
mov
xchg
sahf
inc
sahf
fidivrs
cmp
mov
out
pop
pop
rolb
mov
ja
sbb
arpl
xor
xchg
jle
clc
xor
or
jle
dec
add
dec
xchg
sahf
xchg
mov
xor
loope
mov
addb
mov
push
mov
scas
push
das
pop
nop
call
mov
xchg
xor
and
cmp
fildl
and
test
lds
sub
je
mov
push
mov
xchg
add
jge
xchg
inc
xchg
jae
dec
jp
roll
mov
inc
mov
aaa
jne
jl
cmp
negb
sbb
shlb
jle
mov
das
jl
dec
push
mov
pop
jae
scas
stc
arpl
mov
mov
mov
cmpsb
or
jp
xchg
aad
je
repz
int3
pop
push
lret
xor
xchg
outsl
arpl
inc
std
push
mov
cld
out
mov
mov
mov
sbb
sub
ja
arpl
push
xchg
icebp
adc
addr16
rcll
sub
ss
mov
adc
addr16
dec
aaa
adcl
pop
mov
popf
sbb
mov
test
push
nop
lock
push
pop
stos
cmc
mov
insl
inc
jp
sbb
aaa
mov
lcall
pop
les
aas
dec
cmp
mov
js
pop
mov
mov
int
fldenv
bound
pop
int
lods
test
mov
push
dec
rorl
cmp
mov
mov
or
mov
mov
mov
pop
mov
adc
cmpl
pop
mov
and
mov
sub
mov
mull
sbb
adc
jl
mov
push
mov
imul
popa
sub
push
push
lret
cmpsl
jg
insb
pop
mov
push
mov
lret
push
psubb
dec
ficompl
or
mov
pop
sbb
xor
pop
in
idivb
jg
ss
dec
inc
and
cmp
sub
and
inc
inc
in
mov
daa
lods
je
pop
and
into
sub
xchg
sbb
icebp
and
mov
divl
adc
dec
mov
mov
bound
mov
push
daa
ficoms
or
jno
cmp
push
lock
andnps
jle
inc
shr
mov
inc
pop
int
mov
cltd
inc
pop
xor
xor
std
mov
push
dec
push
and
dec
aaa
and
xor
push
xor
aaa
dec
push
ds
pop
test
xor
and
les
mov
adc
dec
dec
js
aas
sbb
push
pusha
data16
fldlg2
add
adc
hlt
sub
sbb
xchg
jnp
xor
rcll
inc
addr16
mov
int3
movsl
mov
mov
inc
scas
out
dec
jno
daa
jnp
xor
sahf
or
xchg
inc
pop
mov
popa
inc
xor
sarb
sub
call
xchg
rorl
jb
lcall
cltd
xor
or
addl
dec
xor
jp
leave
or
jl
push
pusha
loop
enter
out
lds
mov
into
adc
and
inc
inc
and
aaa
cltd
xor
scas
sub
and
pop
inc
and
and
inc
mov
cmpb
cwtl
pop
jl
add
sbb
xor
hlt
adc
cmp
sti
push
incl
jge
cmp
out
mov
add
or
push
ret
sub
das
out
xchg
faddl
mov
ljmp
int
sahf
push
clc
inc
push
popf
lds
cmp
pop
dec
ljmp
xor
dec
ja
push
dec
jle
pop
push
pusha
andl
aad
cmc
cltd
jae
dec
dec
imul
stos
adc
adc
mov
hlt
scas
test
pop
mov
lea
cmpsl
scas
loopne
jne
dec
ljmp
jb
xor
xchg
mov
add
xchg
or
jle
xchg
int3
iret
inc
pop
pusha
xor
jnp
jae
mov
insl
nop
mov
push
scas
pop
inc
adc
xor
jl
xchg
jecxz
push
pusha
pop
and
and
xor
cwtl
loope
adc
mov
dec
push
mov
xchg
xor
jne
mov
jp
sub
xchg
pop
mov
inc
pop
dec
jg
push
jl
mov
or
movsl
sarb
addr16
jge
dec
xchg
pop
push
stos
mov
roll
mov
loop
divb
inc
outsb
jbe
push
dec
sti
jle
mov
cli
insb
orb
jp
fdivrl
stos
cmp
inc
sti
lods
and
or
sub
add
inc
or
pop
filds
scas
test
enter
mov
jge
pop
es
jg
push
call
icebp
adc
cmp
pop
xor
pusha
jns
and
dec
in
and
mov
mov
xor
pop
push
mov
mov
cs
lds
test
cmpsl
sub
pop
dec
mov
inc
jns
out
inc
mov
sbb
jl
clc
push
add
outsb
adc
and
inc
int3
jle
gs
ljmp
mov
out
or
filds
pop
xchg
call
arpl
cmpsl
dec
dec
int3
sbb
dec
js
xchg
sahf
lods
aas
iret
mov
cmpsb
push
hlt
movsl
inc
sbb
insl
lods
sbb
call
jle
xor
jbe
jo
mov
adc
dec
adc
into
cmp
aas
in
loopne
cwtl
mov
sub
jle
in
cmp
sbb
and
shlb
jp
jge
push
pusha
ds
sbb
jg
leave
sarb
xlat
sbb
mov
jmp
fsubs
lcall
out
and
xchg
xor
mov
and
jp
fcomi
dec
js
push
push
mov
insb
movsb
sub
mov
dec
pusha
ja
lds
pop
pushf
fwait
and
xchg
aaa
mov
push
push
je
into
push
sub
jne
lret
ss
stos
sub
jb
push
adc
mov
lods
lret
inc
dec
push
and
and
or
insl
cmc
mov
adc
jmp
repz
in
mov
inc
mov
pop
incl
push
hlt
or
pop
mov
cld
enter
xor
sub
push
push
mov
xchg
xchg
scas
dec
pusha
xor
cmp
mov
jo
cmc
cmpb
nop
cs
je
sbb
movsl
aas
cmp
cmp
xor
sub
pusha
xor
adcl
xchg
add
inc
rorl
dec
dec
clc
pop
adc
cmc
push
pop
sub
xchg
cmp
jb
mov
jl,pn
imul
mov
add
jl
and
lea
mov
inc
ja
stos
aam
mov
xor
lahf
rcll
mov
rolb
push
push
or
inc
push
mov
bound
jae
pop
pusha
das
inc
lcall
mov
iret
fs
mov
push
pop
mov
mov
je
in
jle
lds
mov
rorl
outsb
jne
out
push
nop
adc
mov
cmp
mov
in
add
push
mov
out
mov
xorb
lods
push
aam
fldl
cmpsb
lock
xor
sub
inc
js
addl
jl
or
or
clc
scas
mov
xchg
jo
ds
xchg
in
pop
loopne
imul
adc
push
jl
jbe
dec
repnz
xchg
sub
dec
push
mov
lods
imull
loop
jg
lods
and
xchg
push
mov
ja
popf
out
cmp
mov
or
mov
pusha
mov
cld
adc
nop
inc
rclb
xor
mov
addb
or
lods
adc
insb
loop
jne
decb
push
mov
and
mov
pop
xor
mov
push
aaa
stc
jmp
push
push
out
push
mov
arpl
mov
jnp
push
ds
notb
adc
push
dec
outsb
push
leave
xchg
xor
add
dec
shl
mov
das
cmp
xchg
lcall
inc
pop
in
push
je
fsubrl
add
icebp
nop
jl
mov
mov
je
dec
mov
and
push
push
cltd
mov
pop
cmp
insb
mov
outsb
js
sbb
mov
sub
jmp
push
and
sub
out
jge
pop
enter
inc
mov
mov
sbb
stos
jmp
roll
es
xor
jmp
xchg
inc
pop
jle
mov
push
dec
inc
pop
push
orb
jl
pop
mov
push
dec
or
mov
fwait
xor
pop
sbb
into
mov
leave
scas
pop
mov
mov
push
adc
push
jb
stc
and
mov
cmp
cmp
ret
sti
xor
push
push
and
add
popa
mov
jns
dec
repz
jge
adc
stos
jo
fstl
pop
ljmp
lahf
imul
pop
sbb
aas
sbb
test
pop
aam
outsl
add
ds
rol
bound
dec
fiaddl
movsb
cmp
je
xorb
pop
push
mov
xor
out
jbe
sub
inc
adc
test
push
movsb
std
dec
stc
das
cmpb
cmp
or
arpl
add
jle
pusha
and
aaa
js
cmp
push
mov
fidivrl
in
push
gs
inc
sub
sahf
int
mov
xor
mov
jo
mov
push
int
lds
xchg
and
lock
add
mov
idivb
add
lods
xor
into
jmp
enter
ret
mov
jmp
pushf
mov
sub
cmpb
das
insb
pushf
xor
aas
outsb
dec
mov
lods
adc
sub
les
push
hlt
lods
and
mov
sub
inc
nop
fildll
dec
ja
push
lods
test
inc
mov
pusha
mov
dec
scas
inc
mov
scas
push
xor
mov
inc
mov
pop
hlt
or
push
inc
push
lahf
adc
shll
add
mov
cltd
add
inc
xchg
nop
sub
jbe
repnz
cmp
outsl
int
aam
mov
call
jle
insl
and
add
sbb
fs
jge
lahf
mov
mov
sbb
sbb
jl
and
ja
dec
inc
insb
inc
pop
push
sub
pop
ret
fbstp
jne
mov
mov
push
sub
je
mov
jg
enter
xchg
sbb
add
inc
jo
sbb
int
out
ds
shll
ficoms
jno
aaa
cmp
fnstenv
pop
insb
sbb
sbb
int3
or
shlb
mov
dec
inc
fstpl
icebp
lock
pop
shl
ret
push
jle
jbe
aaa
pop
mov
cmc
loope
in
nop
insb
out
push
mov
jns
stos
out
mov
jmp
push
or
into
pop
test
nop
dec
fisubrs
xor
lahf
loope
jnp
jo
add
or
pop
cs
sbb
pop
pop
mov
jns
mov
mov
testl
dec
dec
jle
insb
test
add
dec
push
push
mov
dec
jg
pop
mov
jne
xchg
dec
xor
out
nop
dec
outsb
inc
les
addr16
xor
popa
test
mov
cltd
je
pushf
ss
inc
mov
mov
cld
lcall
loop
push
daa
mov
jmp
hlt
mov
pop
mov
stc
inc
inc
mov
popa
add
dec
lea
mov
adc
push
pop
or
xor
mov
cmp
daa
sub
pop
jmp
fmulp
push
push
xlat
dec
jo
sbb
fimull
sahf
mov
mov
xchg
test
mov
out
add
loope
xor
rcll
out
mov
lods
dec
in
pop
adcl
inc
lret
mov
popa
into
fs
jl
add
es
jne
je
stos
lds
push
stos
mov
jge
imul
dec
fs
mov
xchg
std
nop
xchg
cs
mov
mov
insb
jo
scas
insb
pop
in
in
inc
inc
int
jg
fs
pop
adc
xor
lods
mov
andl
rcrb
jo
pop
jns
sub
jg
jg
jb
movsl
push
inc
bound
jo
addr16
pop
cltd
stos
cmp
sub
arpl
fs
movb
iret
outsl
adc
mov
push
ja
dec
jb
lock
inc
je
aas
dec
shll
jg
push
jo
xor
xchg
insl
mov
xor
sbb
arpl
jl
xchg
cmp
adc
in
cmc
inc
mov
dec
int
gs
xor
mov
ret
insl
xchg
imul
in
xchg
mov
jle
inc
push
lea
out
xor
cli
push
ret
adc
mov
mov
sub
xorl
fidivrs
shll
nop
cmpb
aaa
lock
aaa
mov
jecxz
test
inc
ds
cmpsl
mov
xor
xor
jg
jns
shrb
add
test
xor
sub
imul
out
dec
mov
ret
scas
sbb
insb
push
mov
cmp
and
jle
xchg
scas
mov
clc
divl
sub
repz
jmp
ficomps
sbb
movsb
sub
adc
add
add
sbb
mov
sub
mov
lcall
push
inc
mov
pushf
bound
jl
test
xor
jl
gs
sbb
jnp
lret
es
mov
cmpb
mov
adc
stos
in
xor
push
mov
xchg
ds
sub
das
pop
or
mov
jg
add
outsl
stc
adc
cltd
jbe
sbb
enter
xchg
loopne
xor
into
sahf
stos
mov
cmp
sub
jle
mov
xchg
xchg
cmp
jne
sub
jge
hlt
dec
mov
mov
push
sub
int3
shlb
scas
ret
lock
ja
insb
mov
and
dec
lock
test
inc
test
movsl
jmp
icebp
cmp
cmp
fsubrl
xor
sub
xor
dec
xor
insl
xor
insb
add
jbe
cmp
loope
sti
test
pop
mov
jl
push
loopne
mov
push
addr16
lahf
test
imul
test
jae
jbe
xchg
mov
mov
inc
add
aaa
mov
dec
jne
and
pop
cmc
jb
sarl
xchg
xor
mov
mov
sub
xor
mov
pop
adc
push
daa
movsb
fwait
mov
lods
or
imul
jbe
clc
mov
jns
in
jg
jae
lret
push
sbb
xchg
add
cmpb
andb
pop
imul
and
adc
out
jmp
push
out
pop
or
es
sbb
in
mov
push
adc
lods
insl
sbb
xchg
imul
xor
lock
push
mov
push
mov
sub
xor
sarl
shlb
cmp
dec
shrl
jg
es
cmp
add
iret
push
cmp
dec
inc
call
xor
cmpsb
cmovl
add
movsl
flds
mov
call
push
mov
push
loopne
dec
or
cmpl
mov
out
les
xor
push
or
xchg
insb
adc
add
mov
inc
int
sub
notl
inc
shlb
dec
xchg
sub
push
cs
push
push
mov
xchg
pop
ss
fimuls
cld
decl
notl
jbe
mov
add
cltd
cmpsb
jle
inc
push
inc
pop
jge
mov
mov
pop
xchg
jl
pusha
adcl
loopne
js
lods
adc
push
inc
insl
outsb
pop
mov
test
pusha
mov
sahf
mov
addr16
xchg
aaa
pusha
sub
js
aaa
push
pop
subl
and
decl
cli
push
and
pop
fidivs
cmp
mov
push
in
adc
xchg
pop
mov
cmp
mov
xchg
sub
inc
mov
push
data16
loop
inc
adc
shll
ret
mov
ja
pop
push
xor
pop
adc
or
jno
and
and
mov
xchg
ss
and
in
test
xor
lods
imul
push
mov
push
aas
jecxz
call
aaa
mov
push
pop
mov
sbb
insl
push
and
imul
das
rcl
mov
mov
cmp
pop
mov
or
cwtl
push
sbb
pop
fwait
stos
adc
gs
push
push
icebp
push
inc
pop
mov
inc
pop
int
insl
push
popa
push
lahf
arpl
push
pop
or
pop
mov
push
jo
hlt
push
arpl
sub
test
adc
jne
pop
and
fsubrl
push
pushf
pusha
sub
cs
add
or
mov
pop
add
mov
jmp
jbe
mov
xor
push
xor
inc
dec
adc
out
das
mov
inc
xor
sub
inc
mov
push
in
rcll
or
jp
ds
cltd
aad
xchg
cmp
test
adc
cld
xor
mov
dec
pop
jg
aas
jno
cmp
mov
xchg
jae
sub
jle
cmp
aaa
call
ds
xor
jbe
cmp
cmp
mov
push
mov
lods
xor
mov
ja
dec
in
mov
sub
inc
xor
rcrl
mov
push
inc
addr16
pop
scas
sub
stos
cmp
mov
xchg
push
int3
jo
mov
mov
jp
cmp
jecxz
shrb
ds
subl
faddl
xor
jo
out
loop
mov
push
out
jge
dec
xor
insb
and
scas
and
ds
xchg
mov
dec
jb
aaa
aad
in
mov
pop
aas
pop
jmp
or
dec
sub
insl
ret
dec
fnstenv
or
lret
xor
push
pop
in
mov
cmc
mov
addr16
adc
das
mov
adc
xchg
xor
jmp
add
inc
sbbl
pop
jg
jmp
repnz
out
es
call
cli
xchg
stos
pop
in
pop
mov
mov
jnp
popf
mov
mov
mov
aaa
jle
cmc
data16
cmp
xchg
dec
stos
out
stos
subl
cmp
sbb
push
xchg
jnp
sbb
inc
iret
subb
sub
aas
add
xor
mov
scas
xlat
call
sub
sub
add
cld
push
je
and
aam
fs
ja
dec
and
mov
inc
mov
inc
mov
xor
leave
mov
or
adcl
pop
mov
push
xor
sahf
das
fs
dec
jnp
bound
pop
fisubrl
xor
rcrb
jecxz
jl
aaa
stos
jle
xor
xor
xor
lds
in
stos
in
mov
std
inc
loop
lds
inc
cmp
and
jl
push
push
dec
inc
int3
jmp
add
aam
and
movsb
aad
outsb
mov
add
js
cmc
inc
in
in
es
mov
test
or
push
mov
repnz
ss
je
jnp
repz
out
leave
cld
xor
mov
pop
in
fistl
mov
and
stos
cmp
sti
dec
or
mov
mov
sub
cmp
movsl
and
push
adc
lret
fwait
jo
jns
sbb
inc
les
sbb
jp
push
in
mov
hlt
mov
sbbl
dec
dec
pop
int
xchg
and
das
test
pushf
je
cmp
push
dec
jbe
inc
mov
outsb
divb
push
mov
push
rcr
ds
movsb
aaa
cltd
cmp
lret
movsb
push
lods
and
bound
push
mov
sub
jl
out
imul
xor
movsl
das
add
shrl
mov
gs
dec
popa
popf
fwait
int
push
es
imul
out
dec
outsb
jecxz
inc
xor
cmp
or
inc
add
jp
mov
inc
stc
mov
das
adc
xchg
rclb
roll
push
addl
push
lcall
int
mov
inc
sub
mov
xchg
in
inc
mov
insl
mov
cli
ljmp
inc
fdivrl
xlat
sbb
dec
daa
lret
jp
sub
mov
jnp
es
push
into
daa
add
sub
pop
insl
inc
call
out
lods
lahf
mov
sbb
popa
jb
or
pusha
arpl
lods
pop
cs
out
cmp
push
movq
in
pushf
pop
mov
xor
scas
mov
sbb
std
popf
aas
repnz
cmp
jle
popa
cmp
mov
pop
pop
pop
push
xor
cmp
xorb
sahf
or
jle
lods
jns
pop
fldl
pop
adc
mov
mov
xchg
xchg
jle
fldt
fildl
add
cmpsb
or
cmp
hlt
fsubr
cld
lret
pop
inc
jge
js
stos
js
pop
xchg
mov
das
push
add
loop
insb
xor
mov
lret
mov
cld
cmp
jg
sbb
ss
sbb
ja
jecxz
test
aaa
mov
adc
gs
jl
pop
and
xchg
sbb
xchg
cmp
xlat
jne
pop
cmp
imul
dec
in
cld
jb
int
push
push
mov
dec
in
add
and
push
jbe
jbe
mov
nop
out
pop
dec
ja
repnz
dec
in
or
popf
and
jge
cmp
test
jne
xor
push
in
lret
xor
pop
jmp
les
clc
popf
push
dec
or
repz
ret
lods
cmpsb
daa
xor
ds
mov
and
fildl
push
add
mov
push
leave
test
lahf
sub
mov
movsb
mov
xor
adc
push
mov
add
ret
mov
filds
movsb
mov
cld
loope
les
pop
adc
sub
mov
mov
mov
inc
xor
cmp
fisubrs
addr16
int3
mov
or
jg
test
js
cs
outsb
lcall
cmpl
pop
pushl
xchg
out
int
fs
loop
inc
jl
mov
in
ja
popa
mov
sarb
data16
ja
fcompl
insb
es
sub
and
mov
cmpsb
push
xchg
cs
adc
push
test
subl
hlt
and
pop
aaa
push
andb
jp
mov
addl
jmp
jbe
and
sub
fwait
xchg
or
jb
mov
lea
mov
push
mov
inc
outsl
mov
cmp
jl
xor
xor
test
or
rolb
scas
add
testb
push
mov
pop
mov
shll
pop
mov
jle
inc
inc
mov
jl
pop
test
pop
cmp
sub
xor
dec
lods
or
enter
jo
jge
js
pop
mov
xchg
addr16
sbb
or
cmc
int3
lcall
cs
push
imul
ljmp
xor
adc
in
lahf
mov
xchg
xor
scas
jnp
xchg
and
sbb
jp
inc
jae
xchg
outsb
or
mov
push
rcr
outsl
outsb
adc
scas
and
outsb
cmp
scas
push
mov
push
or
ljmp
mov
stos
jle
pop
or
aaa
mov
lods
mov
pusha
xchg
test
add
sbb
mov
aaa
in
push
ss
push
jl
std
in
add
je
sub
adc
mov
push
mov
pushf
fmull
sub
xor
mov
mov
popa
movsl
push
jno
lahf
sub
ja
out
add
filds
bound
stos
rcl
and
pop
jg
subl
and
mov
aaa
inc
sub
jl
adc
mov
push
sub
jl
into
cmpsl
negb
pop
loope
inc
int
mov
adc
dec
out
dec
push
xor
pop
lret
xchg
mov
fsubrs
lods
sub
cmp
dec
xchg
inc
inc
sub
mov
mov
aaa
movsb
sub
jge
fwait
retw
movsl
mov
leave
addr16
nop
mov
inc
insl
mov
push
mov
in
loop
xchg
in
jmp
sbb
das
xor
cwtl
call
lock
dec
push
sub
pop
out
mov
shr
cmpsb
push
int
sub
scas
mov
inc
jbe
push
sbb
mov
xor
xor
xor
adc
mov
int3
xchg
addr16
inc
inc
gs
movsl
xchg
fadd
incb
push
out
cld
stos
insl
fcoml
inc
test
add
pop
lea
rorl
sbb
add
icebp
stos
xor
jl
inc
scas
mov
mov
jge
int
mov
sub
cmp
roll
cmp
jne
inc
ds
mov
pushf
jge,pt
sub
adc
pop
push
arpl
sbb
insl
fsts
inc
jmp
in
adc
ds
inc
cmpl
ja
lods
mov
xor
pop
pop
pusha
loope
fcoms
pop
inc
movsb
mov
dec
xor
ja
cmp
pop
fwait
lods
adc
lahf
add
jo
or
mov
mov
iret
add
mov
lods
sub
dec
in
mov
divb
imul
cld
inc
scas
dec
or
repnz
mov
sahf
rolb
xchg
dec
cmpsb
fsubs
pop
cmp
xor
in
xor
xor
movsl
fs
xchg
pop
dec
cmpsl
xor
cmc
mov
into
xchg
dec
inc
adc
sub
and
push
pop
mov
pushf
pop
ds
xchg
sbb
or
data16
scas
mov
pushfw
fcompl
or
push
out
jecxz
lods
movsb
adc
arpl
lea
pop
pop
cld
repz
scas
loope
lock
push
jg
mov
xor
push
pop
and
repz
test
sarl
pop
xor
push
mov
jo
push
addr16
aad
jns
das
add
icebp
cmp
mov
xor
adc
arpl
addr16
cltd
push
jnp
push
test
in
je
jo
mov
and
test
xor
jp
fcmove
mov
xor
pop
mov
sub
xchg
jb
xchg
jnp
xor
add
test
stos
inc
lods
imul
xor
inc
jnp
mov
data16
lods
push
pop
lock
lods
test
bound
sahf
mov
mov
adc
out
stc
cmp
xor
cmp
fs
ret
dec
fdivl
cli
xchg
inc
cld
xchg
jge
jno
dec
jns
gs
ljmpw
dec
xchg
lea
mov
cmp
xchg
xor
les
flds
stos
pop
decb
inc
pop
pusha
jmp
jp
jl
add
inc
mov
mov
cmc
inc
scas
loop
and
pop
cmp
pop
loop
mov
scas
jl
aaa
inc
out
in
mov
jbe
sbb
sub
fstl
cs
dec
mov
adcb
mull
insl
insb
jns
rclb
or
fs
out
xor
mov
lret
adc
pop
jb
push
inc
and
push
mov
mov
cltd
sub
das
push
adcl
aas
nop
ret
push
dec
lods
ss
sbb
pop
jle
cmp
jl
cmp
pop
pusha
dec
aaa
inc
xchg
call
je
ds
stos
imul
outsw
shll
inc
xchg
or
orb
xor
dec
add
scas
lds
inc
and
fistl
push
dec
xchg
xlat
lods
sbb
sbb
movsl
mov
fs
and
inc
mov
lods
jle
inc
add
cmpsl
mov
push
xchg
movsl
sti
out
fstpl
push
xor
ret
lock
push
mov
repnz
jns
pcmpeqd
clc
cmp
jo
pop
push
inc
xor
adc
lea
shll
inc
fdivr
in
sub
divl
mov
outsl
out
xor
mov
adc
aam
mov
aad
ficomps
out
and
scas
scas
mov
jnp
push
das
inc
add
xor
inc
insb
mov
add
pushf
cltd
cmp
aaa
imul
mov
movsb
data16
push
cmp
testb
xor
enter
aas
adc
mov
aaa
aad
mov
adc
inc
nop
sub
inc
lods
iret
jb
int3
aaa
cld
mov
xor
sbb
inc
cmp
jle
clc
sahf
dec
ret
mov
jecxz
pop
loopne
aas
push
pandn
shlb
jge
ss
je
scas
lret
dec
mov
push
aam
mov
mov
xor
and
jno
push
mov
mov
lods
stc
das
jge
out
cmp
cmpsl
xor
lock
stos
inc
in
out
push
addr16
outsb
int3
out
insl
addl
push
mov
sbbb
cmc
loop
or
sub
push
cmp
fildl
fs
mov
mov
aaa
cld
jnp
mov
repz
jecxz
mov
lock
pop
js
add
jge
jp
pop
push
mov
pop
pop
addb
stos
xchg
push
cs
mov
iret
xor
add
lock
aas
gs
xchg
ja
out
testl
sub
subb
in
pop
das
daa
stos
sbb
cmp
pop
sbb
pop
sub
xchg
pop
pushf
cmp
ret
andb
movb
inc
lahf
mov
mov
inc
jecxz
mov
outsl
lods
scas
sub
push
xchg
jge
xor
jecxz
xor
push
daa
aas
and
repz
jl
xor
call
insl
xor
xchg
movsl
pop
pop
sbb
push
jecxz
lret
push
mov
xor
je
inc
push
xor
les
dec
push
scas
shlb
push
in
jbe
clc
push
movlps
test
lods
jne
cmp
sarl
jl
test
dec
fidivrs
mov
call
adc
sub
rolb
or
and
punpckhbw
inc
xlat
dec
clc
mov
mov
popf
add
in
js
push
inc
add
sbb
arpl
scas
dec
xor
dec
xor
adc
xchg
pop
xchg
sub
sbb
push
js
xchg
pop
inc
inc
inc
adcl
nop
or
ret
push
jno
mov
leave
lods
pop
stos
push
mov
into
popa
fcompl
push
fstpl
nop
int3
mov
inc
outsl
andb
lods
cld
jnp
daa
or
lock
lahf
jae
and
fst
aaa
js
aas
stos
sub
loopne
push
call
xor
and
pop
addl
sbb
xor
out
pop
add
jne
test
pop
rorl
mov
and
fisttpll
pop
ret
mov
dec
sarl
push
mov
fs
jp
jmp
pop
sbb
gs
mov
xchg
sbb
rorb
xor
es
pop
sub
inc
cmp
sbb
in
mov
mov
incl
inc
rcrb
sub
xchg
cs
aad
clc
xor
sbbl
dec
repnz
mov
cmc
mov
cmc
inc
adc
mov
test
cmpsl
test
adc
add
std
jne
dec
and
shr
movsl
lods
lds
push
jle
and
je
xchg
pusha
shlb
loope
adc
and
repz
xchg
push
xchg
push
outsb
mov
aas
xchg
pop
lds
dec
lea
fdivrl
or
xor
xchg
insb
ret
adc
imul
mov
adc
push
iret
dec
lret
imul
dec
dec
in
mov
test
mov
jp
sub
pop
adc
push
adc
shll
js
dec
xor
push
jno
test
aam
push
push
sbb
inc
cld
lret
loopne
mov
pop
dec
dec
roll
iret
jl
or
shl
leave
decl
aas
add
jo
aad
inc
dec
addr16
lods
aas
adc
xor
je
nop
rorl
test
mov
insb
dec
ds
and
rolb
inc
push
mov
jno
adc
data16
daa
or
push
push
and
xchg
test
dec
loopne
xchg
mov
sbb
ds
xor
stos
push
and
je
adcb
daa
jl
inc
sbb
hlt
and
and
mov
out
xor
fstps
xor
rcr
std
mov
mov
jp
adc
ds
xor
cmp
adc
sahf
test
push
ljmp
sub
in
ss
mov
or
sub
scas
xchg
adc
mov
mov
fwait
rclb
cmp
mov
and
addl
jge
lret
and
jo
mov
mov
movsb
test
mov
jb
pop
xchg
xor
insb
in
push
and
cmp
popa
xchg
jecxz
cmp
andl
xlat
cli
stos
aas
push
outsl
cmp
push
inc
xchg
scas
outsl
push
push
divb
add
jmp
rclb
lods
lds
adc
xor
xchg
xorb
int3
push
pop
mov
fnstsw
mov
ja
fwait
jle
icebp
sbb
xchg
das
push
xchg
fimuls
inc
cs
test
push
jbe
mov
pop
xchg
pop
cmpsb
pop
sub
inc
dec
clc
or
adc
sub
arpl
repnz
imul
cmpsl
inc
push
pop
inc
shrl
mov
dec
jecxz
fstl
fistpl
push
push
test
inc
aad
ja
cmpsb
adc
mov
aas
inc
xor
jae
dec
push
fnstsw
inc
pop
iret
ret
in
push
pop
aas
sbb
nop
enter
mov
clc
test
pop
cltd
addr16
cltd
ret
pop
adc
or
sbb
js
sbb
mov
dec
pop
inc
cmpsb
cmp
sbb
cmp
ret
pop
popa
inc
mov
push
lret
ds
xor
dec
div
push
ret
or
cmp
push
xor
mov
pop
push
outsb
dec
mov
lds
cwtl
mov
inc
hlt
mov
jne
mov
mov
mov
and
cwtl
dec
loope
hlt
fiadds
and
cwtl
scas
std
dec
xchg
je
cltd
fidivl
jecxz
dec
js
sub
int
sub
aam
push
pusha
mov
in
dec
ja
mov
pop
stc
into
outsb
sub
mov
dec
popa
mov
sarl
aam
subl
or
int3
rcrl
and
mov
shlb
js
mov
mov
jo
lret
cmp
scas
stos
sbb
sub
jae
ds
cwtl
negb
mov
roll
pop
pop
dec
out
dec
push
xchg
jno
push
cltd
cwtd
pop
fmul
and
stos
sub
inc
jp
aaa
sbb
mov
xor
inc
xor
sub
inc
mov
xor
fsubrp
sub
mov
dec
sbb
mov
int3
outsb
push
faddl
mov
test
add
jne
addr16
jle
fimuls
xor
mov
xor
adc
jbe
mov
and
iret
fsubs
jae
cmp
cmp
pushf
push
fwait
jmp
nop
jno
inc
jne
repz
in
and
cwtl
rcrb
inc
lods
cmp
push
adc
push
pop
pop
jae
push
xor
outsl
ss
sub
adc
cmp
sarb
das
mov
add
adc
fldcw
sub
fmull
inc
into
xor
push
mov
out
fmuls
icebp
adc
sub
xchg
dec
mov
jl
xor
sub
mov
push
aam
adc
stos
loopne
sbb
imul
add
inc
repnz
push
xchg
rcll
in
push
cmp
int3
xor
push
and
dec
pop
cmpsl
dec
xor
inc
in
add
mov
jl
inc
sub
in
pop
ss
mov
inc
ret
cltd
lret
cmp
mov
and
inc
outsl
sbb
pop
lock
out
lock
ds
sbb
ret
fidivl
sub
cmpsl
cmpsb
push
test
mov
dec
cltd
adc
or
push
lret
jl
sbbb
adc
fidivrl
mov
addr16
mov
and
mov
inc
xor
stc
or
test
mov
loope
inc
mov
adc
out
dec
aas
cmp
movsl
mov
aad
pop
pop
push
mov
dec
dec
movb
mov
mov
mov
xor
mov
ja
mov
test
sub
movsl
dec
push
sub
aaa
xchg
lcall
pop
xor
xchg
jl
jl
add
aad
pop
ds
xor
mov
pop
inc
test
js
xor
mov
push
outsb
mov
mov
sbb
into
lret
rcrl
jae
lods
xor
lods
jge
mov
in
hlt
mov
sbb
insl
lock
scas
adc
pushf
cmp
add
xor
outsl
xchg
sar
retw
scas
idivb
cmpl
inc
scas
sub
std
dec
lahf
fs
inc
cmpsl
cmp
pusha
cwtl
mov
or
jbe
xlat
push
dec
sub
jae
sub
or
sahf
inc
subb
inc
push
push
sbb
mov
push
push
hlt
mov
pusha
cmp
arpl
add
pop
pusha
jge
lahf
lds
rorl
loopne
inc
shlb
in
rclb
push
das
aam
out
fs
mov
inc
data16
sbb
mov
fwait
jle
out
xor
xor
popa
daa
sub
test
pop
aaa
in
mov
xchg
je
js
scas
pusha
repnz
mov
mov
lcall
mov
push
int3
mov
jp
sub
loopne
xor
pop
xchg
cli
hlt
pop
mov
outsb
jg
sub
imul
push
je
mov
aas
sbb
dec
xor
add
dec
xchg
mov
pop
mov
jmp
push
pop
inc
xor
xchg
sub
xchg
xor
push
sbb
xchg
sbb
scas
mov
mov
push
jb
add
mov
loope
std
add
cmp
mov
adc
inc
jne
sbb
pop
mov
pop
dec
and
and
jno
popa
cs
or
mov
adc
enter
fcoms
je
xchg
jb
ret
jbe
out
sbb
dec
mov
ja
pop
lea
jle
scas
lds
inc
popl
es
adcl
mov
rcl
inc
xor
test
ljmp
inc
in
push
xchg
pop
xor
into
xorl
xchg
push
stos
aad
xchg
mov
mov
mov
mov
inc
movsl
call
jge
movsl
nop
xor
or
push
mov
xchg
mov
enter
xor
rclb
subl
mov
xchg
sub
cmp
fcomps
lock
icebp
add
pusha
mov
jns
in
adc
xchg
orl
pop
popl
adc
insb
jae
sbb
xor
xchg
pop
mov
jae
jp
mov
loopne
aas
shlb
push
adc
fneni(8087
sub
in
dec
out
mov
in
adc
jne
addr16
loopne
jle
or
sub
cltd
out
xchg
mov
add
or
push
aas
xchg
ret
cmp
add
repnz
jae
sub
cltd
movsb
nop
dec
cmp
dec
inc
repz
dec
cmp
arpl
das
pusha
jo
dec
call
cmp
xor
inc
call
cmp
inc
shrl
pop
ficoml
or
mov
arpl
cs
mov
out
out
js
push
pop
fidivrl
pop
cs
adc
mov
cmp
inc
das
gs
mov
cmp
insb
adc
cmp
fdivrs
clc
jae
sub
jge
cmpsl
mov
imul
js
adc
adc
ljmp
jo
mov
push
sbb
lods
js
das
mov
cmp
mov
movsl
mov
lea
sbb
fldl
xor
xorl
mov
inc
cmp
mov
test
lock
and
push
movsb
mov
imul
cmp
ja
jmp
fwait
cs
cmpl
pop
xchg
pusha
out
cmp
daa
cmpsl
push
sarl
je
sub
mov
push
add
jg
jne
jb
dec
dec
aad
push
push
inc
shlb
repz
mov
mov
aas
or
sub
ret
jbe
into
pop
xchg
mov
cli
jbe
xor
addl
testl
pop
mov
ja
stc
das
aas
les
mov
cmp
ret
mov
jo
sti
cmp
pop
adc
jl
cltd
cmc
xlat
xlat
adc
insl
aam
mov
rcrb
cmp
sub
pop
out
push
dec
xchg
push
fwait
push
push
push
mov
dec
gs
inc
mov
jle
dec
cmp
sub
mov
outsb
in
lock
shll
cmp
mov
fwait
pop
sub
add
leave
scas
inc
ja
outsb
js
pop
mov
adc
out
arpl
mov
cmc
popf
sbb
loop
fmul
fildl
or
pop
xlat
adc
mov
inc
outsl
and
and
push
sbb
jno
shrl
pop
or
pop
mov
cwtl
rcll
push
mov
dec
add
sbb
aaa
push
jge
xchg
xor
cmp
xchg
mov
enter
xlat
aad
pop
add
das
jo
xor
cmpsb
cmp
sbb
subb
xlat
jo
scas
fucomp
and
mov
mov
je
js
mov
or
out
xchg
mov
push
out
mov
add
dec
repz
jb
rcl
push
cmpsl
jnp
les
or
sub
scas
sub
or
xchg
sbb
aaa
jge
push
es
repnz
jle
or
sbbb
divl
enter
dec
mov
pushf
lods
mov
push
lods
sub
int3
or
mov
xor
mov
out
jp
into
dec
push
pusha
test
sti
lock
out
ret
int3
scas
mov
and
lcall
clc
sub
lret
pop
pop
jg
dec
jp
mull
daa
mov
mov
lods
in
test
aaa
clc
ljmp
mov
jg
shlb
sbb
mov
dec
orb
mov
mull
daa
mov
pop
add
adcb
mov
cmpl
in
clc
mov
dec
arpl
sbb
mov
jmp
repz
ficomps
xor
mov
mov
loope
incl
add
push
cmp
and
shrl
loope
mov
jl
push
mov
xor
hlt
lcall
fistps
add
mov
mov
imul
push
pop
testl
and
cmp
rolb
mov
mov
pop
shll
jbe
push
and
enter
ds
cmp
dec
mov
cmp
dec
sbb
test
and
testl
inc
add
movsb
icebp
cmc
inc
and
push
sub
sub
jbe
add
lds
mov
es
mov
inc
jmp
xor
aad
xchg
sub
jmp
aam
loope
xchg
sahf
jno
sub
add
adc
outsl
ret
ffree
jns
mov
push
add
cld
jo
sarb
mov
xor
pop
mov
sub
jp
sub
xor
movsl
mov
adcl
cmpsl
stos
aaa
test
inc
lods
jp
add
cmpsl
sub
mov
pop
jne
in
fs
pop
dec
das
inc
push
add
mov
sub
js
aaa
dec
lds
repz
pop
push
push
add
mov
js
sub
cmp
mov
dec
mov
push
mov
adc
mov
pop
pop
pop
test
cmp
shl
sti
loopne
sub
mov
fyl2x
or
je
leave
mov
xlat
cmc
dec
pop
cmp
push
and
repnz
in
cs
std
outsl
cmp
jns
aaa
mov
inc
xchg
ja
rcrl
pop
jg
pop
xchg
cwtl
push
int
pop
pop
jns
lret
stos
gs
insb
xor
mov
jbe
insl
inc
push
dec
mulb
push
pop
dec
roll
xor
add
pop
test
andb
push
mov
ret
push
mov
lea
sbb
xor
subb
jge
adc
sbb
adc
jp
mov
add
imul
int
rcr
addr16
jge
pop
xor
jne
ss
jl
clc
pop
mov
push
je
into
or
fbstp
aaa
hlt
push
mov
xchg
fists
xor
mov
fs
arpl
mov
daa
fadds
add
bound
push
mov
mov
pusha
jmp
stc
jno
repnz
mov
ss
push
ds
lea
test
test
test
xchg
fdivrp
pop
xchg
lock
and
or
dec
and
mov
jmp
scas
push
pop
mov
ss
xor
shrl
and
shrb
out
ds
ret
test
das
xchg
cwtl
jno
mov
xor
out
dec
mov
sbb
sbbl
dec
add
mov
insl
xor
js
push
xor
jg
sbb
mov
inc
jg
push
ss
jb
out
mov
inc
inc
jl
or
int3
scas
fldl
jle
pop
cmpsl
insl
nop
sahf
sub
jg
xor
iret
cwtl
movsl
push
in
test
cmp
mov
push
cmp
rolb
xlat
dec
pop
add
jb
scas
mov
sub
inc
stos
sbb
jg
das
mov
sahf
inc
push
aaa
mov
xor
addb
xchg
inc
mov
test
cli
mov
arpl
inc
xor
int3
inc
push
scas
lahf
ret
mov
cwtl
xor
or
jge
mov
daa
fdiv
scas
and
xor
imul
add
mov
sub
inc
mov
sbb
div
cmpb
gs
mov
jb
mov
mov
xor
sbb
cmp
sbb
mov
in
dec
jl
int
call
orb
push
out
popf
outsb
mov
incb
add
xchg
mov
xchg
xor
push
adc
jbe
pusha
mov
xor
mov
mov
xor
lods
pop
mov
xor
cmpb
ss
bound
xor
add
xor
mov
jle
shl
adc
mov
ss
mov
not
out
sub
jle
jmp
lea
sub
mov
ss
and
inc
imul
sarl
push
sub
xorl
cld
fstl
sbb
xchg
iret
jp
test
pushf
into
aaa
sub
mov
xor
fiaddl
in
jge
int3
popa
vmovaps
sarb
les
movsl
xor
insl
mov
outsl
xor
inc
in
push
sbb
add
sub
pop
cmp
mov
out
out
pop
pusha
sub
inc
pop
cmp
xor
and
pop
cmpb
sub
cs
and
icebp
pop
and
outsl
xchg
int3
lods
adcl
xor
xor
mov
jae
daa
or
sub
adc
add
adc
stos
add
int3
jp
rcr
testb
ret
scas
ljmp
cld
inc
and
and
pop
mov
enter
jl
mov
insb
loopne
lahf
xor
adc
dec
add
inc
push
cmp
cmp
cmp
adc
jae
adc
aas
lcall
je
mov
je
xor
dec
pop
inc
in
lock
jecxz
jle
push
stos
jns
lock
sbb
insb
mov
mov
push
clc
nop
dec
jmp
addr16
jo
stos
mov
inc
nop
pop
push
add
mov
and
aam
cli
jge
pop
mov
int
aad
jg
or
mov
pop
addr16
push
fs
cwtl
test
cld
push
dec
pop
add
jl
hlt
jbe
dec
test
inc
mov
lcall
das
add
xor
sub
mov
mov
xorb
popf
sarl
addl
adc
js
arpl
aad
clc
rclb
sub
outsb
mov
jg,pt
popf
push
rorb
insl
jecxz
jb
cmp
icebp
or
test
loop
xor
xor
clc
sbb
lret
ficoml
ljmp
adc
sbb
nop
and
cmp
mov
jo
mov
mov
dec
fidivrs
mov
inc
lods
js
out
das
dec
mov
pop
xchg
nop
gs
shlb
mov
mov
call
xor
rcll
ja
dec
sbb
insl
inc
cmp
mov
push
or
adc
and
push
and
mov
outsl
gs
xorb
xchg
mov
add
test
rol
pop
inc
jg
xchg
lret
cmp
test
aaa
js
mov
pusha
jg
ja
testl
jo
lods
xchg
in
add
pop
mov
gs
clc
mov
in
insl
icebp
stos
shlb
hlt
and
push
in
xchg
fidivrs
adc
mov
dec
xorl
jle
xorl
in
or
pusha
lea
and
enter
and
jle
repz
sub
insl
dec
mov
add
out
push
pop
mov
jne
xchg
movsl
mov
jl
pop
gs
add
push
sub
inc
push
lods
add
dec
push
sbb
jmp
mov
dec
pop
ja
das
mov
sarl
lods
or
mov
xchg
adc
std
hlt
xor
push
mov
out
push
dec
cltd
sbbb
xor
adc
and
dec
jo
xor
jns
divl
or
jne
jmp
lods
jl
and
cmc
ret
cmc
mov
sbb
push
inc
inc
clc
rorb
imul
mov
xor
mov
push
insl
les
jle
pop
or
mov
mov
imul
stos
sbb
push
adc
loope
pop
pop
out
add
xchg
mov
inc
mov
pop
cmp
xchg
cmc
dec
dec
movsl
fwait
xor
pop
dec
scas
push
aaa
les
add
data16
int
dec
sub
adc
aad
inc
sub
imul
scas
inc
stos
push
lds
clc
cmp
mov
insb
shrl
lret
dec
mov
and
fcomi
sti
ficoml
sbb
insl
les
cmp
js
cmp
mov
mov
out
sbb
mov
xchg
faddl
rcrl
loopne
mov
add
and
xor
popa
push
lahf
ret
out
inc
pushf
das
shlb
and
sti
mov
pushf
mov
push
mov
jne
xor
cld
clc
pop
les
jns
sub
fistpll
xchg
dec
dec
add
insl
in
adc
sbb
xchg
daa
cmp
mov
sbb
loop
cmpsb
mov
scas
add
decb
leave
lock
fs
jo
jmp
adc
sahf
nop
aaa
cmp
ja
jle
mov
pop
rorb
sub
adc
test
xchg
xchg
sub
out
insb
addr16
andb
push
pop
cmp
pop
mov
cmp
xor
pusha
jns
sbb
and
out
aam
jp
ret
sbb
inc
adc
push
popa
cmp
add
rcrl
rcll
sbb
push
out
dec
cmp
pop
shrl
aas
int3
aam
mov
lea
and
gs
or
push
push
stos
ss
popf
aas
ss
and
push
cli
pop
xchg
inc
popf
mov
and
or
sub
and
rcl
xchg
std
cmpsb
das
sub
inc
mov
sub
cmp
adcl
inc
adc
pop
xor
enter
or
mov
test
push
mov
js
sbb
cmp
jmp
dec
dec
jle
push
mov
imul
dec
pop
add
sub
sbb
outsl
dec
dec
stos
sub
mov
or
pop
mov
imul
jo
xchg
popa
aas
fisttpll
sbb
mov
mov
pop
divb
scas
push
mov
inc
xchg
sbb
int3
aad
or
push
in
ja
jo
dec
ss
mov
cmpsl
push
and
jae
lock
push
push
int3
xchg
pushf
add
jl
iret
mov
daa
sbb
sbb
pop
lret
jb
mov
mov
orl
cmc
jne
xor
push
xor
sarb
adc
xchg
mov
fmuls
and
in
popa
mov
adc
push
addr16
inc
sarl
cmp
cli
jmp
popf
das
dec
outsb
inc
repnz
sbb
clc
and
pop
jge
ss
aas
lds
pop
popa
or
jbe
rcll
sub
adc
ljmp
in
adc
cmp
push
test
int
pop
add
or
cmovne
imul
pop
ljmp
jecxz
xchg
add
cs
xchg
imul
mov
scas
mov
int
push
mov
das
jo
mov
inc
pop
sbb
mov
aas
shl
jb
scas
jl
rolb
stos
dec
in
mov
sub
sbbl
xchg
int
ja
cwtl
sbb
aas
pop
mov
data16
fiaddl
cmp
mov
xchg
push
fsubr
jne
jne
xor
push
xchg
lods
push
inc
in
inc
adc
pushf
jae
jp
jmp
or
sahf
pop
rcl
lods
rol
xchg
outsb
cld
pop
push
jo
jmp
cmp
mov
add
cmpl
xor
repz
out
mov
jns
enter
xor
xchg
mov
es
sub
icebp
mov
mov
outsb
jle
andb
inc
push
cmp
shr
mov
jle
movsb
mov
xorl
sti
inc
jecxz
mov
rcll
mov
pusha
loop
sub
xor
in
mov
sub
lahf
mov
adc
mov
xchg
add
lcall
ret
mov
pushl
cmp
inc
fldt
jge
sub
repnz
xor
fnstsw
scas
and
push
dec
mov
js
jp
jmp
xor
sub
inc
adcl
pop
test
inc
ss
add
cmpb
adcl
cmp
or
dec
add
daa
std
cmp
mov
dec
xor
pop
add
loopne
sbb
cli
inc
dec
daa
cmp
insl
mov
adc
mov
and
in
push
addl
adc
or
pop
repz
addl
cli
dec
dec
jno
cs
cmpsb
sbb
out
cmp
sub
pop
test
cmp
and
push
addr16
bound
pop
cmp
or
mov
stos
xor
push
or
push
and
inc
cmpb
nop
repnz
mov
xchg
hlt
test
adc
push
mov
jne
into
test
jmp
sti
mov
inc
leave
mov
pop
shlb
int
pop
jo
inc
adcl
and
sarb
sub
mov
das
outsl
shl
cltd
sbb
mov
lods
jb
dec
xor
xor
pusha
test
pop
mov
lock
repnz
cs
xor
jo
inc
xor
jns
sub
push
ds
popf
or
dec
and
aas
mov
mov
adcb
scas
add
mov
push
jbe
xor
cld
xorl
jae
sarb
push
add
xchg
nop
sbb
lock
or
push
mov
jecxz
cmp
inc
mov
adc
adc
pop
mov
xor
jmp
pop
lahf
ret
sub
push
das
xchg
jno
aam
push
cmp
mov
fsin
push
cmp
das
pop
push
xchg
push
scas
jp
int3
xchg
lods
dec
lret
repnz
push
fwait
scas
scas
icebp
pop
je
inc
mov
pop
out
sbb
sbb
mov
xchg
add
mov
scas
ja
pop
gs
mov
sub
je
loope
cmp
aas
gs
xchg
dec
sub
call
sarl
and
mov
sub
shr
mov
mov
movl
lret
adc
push
xchg
shlb
cmp
jmp
lea
xor
push
jo
int
nop
cmp
jb
mov
inc
add
mov
ret
xor
popf
mov
xchg
push
mov
icebp
out
cmpl
push
testl
cwtl
pop
dec
aam
mov
inc
hlt
icebp
add
adc
cmp
outsl
mov
cld
adc
outsl
mov
jecxz
fisubrs
mov
mov
fs
dec
ss
scas
stos
push
xchg
rolb
ss
pop
xchg
shr
xchg
mov
in
mov
out
nop
call
cmp
mov
pop
push
mov
mov
or
mov
jmp
jmp
imul
xchg
mov
inc
sub
lods
sub
pop
dec
leave
nop
xor
mov
adc
inc
adc
cli
mov
add
out
in
pusha
adc
push
outsl
inc
jno
inc
ds
dec
or
mov
or
cmp
cmc
pushf
mov
ret
loopne
cld
ds
outsb
aam
mov
addr16
movsb
pop
xchg
xchg
adc
mov
mov
xor
push
mov
inc
mov
jbe
sub
movsl
dec
xor
jns
mov
lods
dec
add
push
mov
push
mov
jle
int3
pop
cmp
mov
subl
dec
mov
cmpsb
scas
movsb
test
cli
xchg
adc
xchg
sub
lods
adcl
rclb
lock
xchg
rolb
gs
pop
rcll
xchg
mov
cld
inc
jge
test
sbb
jb
xchg
xor
jae
dec
mov
dec
cmp
insl
fsubrl
mov
fsubl
dec
aaa
in
push
inc
mov
sub
pop
jo
shll
sub
dec
mov
adc
dec
out
das
jo
aas
mulb
dec
cmp
mov
xchg
jmp
xor
orl
fdivs
in
cmp
cmpl
test
mov
sahf
push
insb
nop
test
lods
push
out
push
insb
inc
int3
or
adc
dec
sti
fstpl
sub
xor
xor
out
xchg
xor
test
xor
adc
aaa
jmp
mov
cmp
dec
sahf
dec
ficoml
xor
push
push
lods
xchg
fadd
inc
imul
sbb
gs
lods
jecxz
mov
fldt
int
sbb
cwtl
fistl
mov
insl
push
inc
call
aaa
mov
pusha
xor
sub
test
pop
insl
pusha
sahf
rolb
pop
dec
adc
lcall
add
jge
inc
mov
stos
mov
add
cmpsb
stc
into
cwtl
adc
ret
fnstenv
ret
mov
stos
out
xchg
sbb
xchg
pop
mov
jbe
dec
mov
loop
imull
inc
dec
mov
add
dec
mov
fidivrs
aas
sbbb
pop
testb
inc
mov
adc
inc
shlb
lcall
cmp
cld
loopne
lcall
pop
inc
into
popa
pop
mov
push
sbb
mov
pop
and
aas
xor
jecxz
ja
push
mov
adc
dec
jbe
dec
pop
inc
dec
js
cltd
outsb
mov
xor
sub
adcl
xor
dec
adc
xor
xor
adc
stc
negb
outsb
popf
aam
push
cmp
popa
mov
adc
cmc
fsubs
xor
add
cmc
dec
mov
jle
add
lods
push
mov
pop
jle
ds
out
mov
mov
mov
push
insb
pop
lods
pop
cmpsb
mov
xchg
gs
ret
dec
add
clc
leave
ds
inc
cmp
push
mov
ffreep
lods
xor
adc
push
jno
xor
push
mov
gs
push
xor
jb
pop
pushf
push
lahf
imul
cmp
lods
test
mov
xor
je
dec
inc
pop
cmp
cmpsb
pushl
pop
add
and
lds
jl
in
daa
jo
sbb
insl
xchg
inc
std
jno
inc
inc
jmp
cmp
sub
outsb
pop
dec
ds
aam
pop
ljmp
aam
dec
sti
jecxz
cmp
push
lods
dec
mov
pop
lods
xor
mov
sub
pop
fdivrs
jno
push
stc
xor
push
inc
mov
pop
xchg
adc
mov
lock
insb
mov
xor
imul
adc
push
sub
mov
sub
mov
inc
add
sub
mov
xor
nop
pop
aaa
repnz
sbb
incb
mov
insb
inc
inc
jge
mov
mov
imul
cmp
or
mov
adc
ds
sbb
and
aaa
aam
mov
adc
or
stos
stos
and
dec
adc
xchg
jmp
and
popa
pop
push
ds
cmp
xor
jne
xchg
mov
and
push
sub
rolb
mov
arpl
daa
clc
dec
adc
test
in
cmp
sub
int3
mov
daa
or
inc
fisubrl
sub
stos
xor
sub
addr16
sahf
fwait
cmpsl
div
outsl
cmc
hlt
inc
mov
lea
repz
mov
lret
lcall
dec
mov
cs
pushl
test
cs
sub
inc
ljmp
sbb
shr
jg
push
icebp
int
jle
jge
xor
clc
inc
push
add
xor
mov
out
sub
outsl
jp
lock
enter
inc
mov
mov
call
lock
mov
subb
mov
lods
sub
push
adc
or
addr16
hlt
mov
inc
test
cmc
mov
xchg
and
push
inc
iret
pop
inc
mov
xor
xchg
mov
fidivrl
push
mov
pop
adc
mov
xor
sub
aas
mov
sub
pop
adc
in
sub
or
xor
pop
mov
roll
mov
je
aad
push
sub
ret
mov
outsl
aaa
adc
gs
jg
xor
decl
xchg
mov
push
ret
jne
bound
in
mov
mov
pop
sub
bound
jns
aaa
inc
add
fldl
add
addr16
jmp
inc
fs
jg
mov
dec
and
jle
adc
ds
cmp
stos
das
mov
pop
sub
sahf
out
into
aad
sbb
xchg
inc
sbb
inc
jo
adc
push
or
inc
int3
adc
scas
int3
popa
jmp
cld
movsl
and
insl
sbb
ret
add
aas
fsubs
sarl
lds
fcompl
ret
mov
xorb
fnsave
pop
sbb
sbb
insb
aad
or
xchg
aaa
dec
xor
stos
idivl
xchg
subb
pop
xchg
push
jnp
push
aad
insb
movsb
sub
inc
mov
cmpb
ficoml
sbb
pop
dec
sbb
ljmp
push
addr16
mov
mov
mov
sbb
inc
dec
pop
insb
ds
mov
sub
mov
js
fs
inc
push
testb
sub
mov
ss
cmp
test
xchg
mov
adc
outsl
mov
xor
cmp
pusha
out
rcrb
test
sub
inc
cmp
and
insb
xor
and
mov
sub
sbbb
adc
sub
jmp
cmpsl
pop
adc
adc
repz
das
push
mov
mov
xchg
jp
xor
lret
mov
fs
sub
data16
adc
sub
inc
fimuls
push
mov
or
and
push
xchg
in
mov
cs
into
icebp
inc
cmp
das
push
insb
mov
push
lock
lock
ds
xor
push
cmp
adc
and
mov
and
fidivl
dec
sbb
icebp
testb
push
mov
adc
jecxz
adc
test
pop
insb
cmpb
or
cld
out
ja
adc
fcomps
cmp
sbb
mov
inc
outsl
in
xchg
mov
jnp
push
xor
ljmp
jae
xor
imul
pop
push
cmp
addr16
insb
test
xor
xchg
sub
aas
mov
jno
icebp
mov
dec
repnz
dec
mov
xchg
inc
stos
jo
repz
mov
fwait
dec
movlps
inc
gs
push
aam
cmp
and
push
es
clc
xor
je
lret
fnsave
dec
sub
sti
adc
rorl
mov
roll
push
fstpl
jnp
ds
jnp
and
insb
xor
jo
repnz
fnsave
lock
mov
out
cltd
movsl
int3
sbb
mov
or
cld
mov
adc
jno
jg
ss
test
push
inc
dec
dec
les
push
insb
mov
test
jo
mov
pop
xchg
fbstp
and
sbb
dec
shll
fadds
iret
and
fisttpll
les
jb
leave
hlt
cs
lcall
fwait
sub
adc
jmp
sbb
loopne
flds
stc
push
rolb
push
add
add
dec
lahf
ret
das
mov
aam
lret
mov
ret
aad
rcrl
int
mov
fnstenv
mov
push
xor
jmp
mov
and
inc
xor
enter
sub
pop
dec
das
jl
add
jno
repnz
mov
jl
xchg
in
jmp
ret
stos
jl,pt
popa
add
add
js
les
xchg
lods
stos
sub
jae
push
repz
cmp
add
jbe
push
xchg
mov
xchg
shrl
popf
in
mov
inc
cmp
inc
pop
cs
xchg
sub
xchg
into
cmp
mov
push
and
push
pop
push
and
cmp
and
out
arpl
scas
pop
or
cmp
ja
ss
insb
push
mov
inc
push
sub
je
aas
inc
push
mov
mov
and
fidivl
pop
xlat
mov
xor
mov
scas
adc
std
test
ret
fidivrl
ror
jo
insb
pshufw
cmp
addr16
jbe
add
mov
stos
ja
add
mov
cmp
aam
insb
pcmpgtb
fcomps
mov
sbb
cmpsl
mov
jl
xor
mov
scas
stos
in
jne
lock
je
jle
inc
adc
and
or
jne,pt
aaa
adc
or
test
mov
and
adc
jl
pop
mov
hlt
mov
cmp
imul
enter
loope
insb
mov
pop
cmp
sub
test
mov
insb
jp
fbstp
mov
pop
cltd
mov
mov
ds
test
gs
mov
fcoml
add
outsl
js
pop
out
add
jp
inc
add
xchg
mov
xor
jp
mov
push
add
test
pop
ljmp
jp
cld
push
bnd
pop
cmpb
cmp
cld
imul
mov
test
mov
xchg
and
xor
lock
mov
sub
js
in
test
jo
xchg
cwtl
int
and
fdivs
lods
jl
xor
test
jl
in
xchg
jecxz
push
sub
gs
imul
insl
imul
jns
stos
jnp
call
xchg
lea
cmp
scas
sub
adc
cwtl
aaa
call
sub
sar
cmp
idivl
mov
ficoml
jp
sbb
inc
out
fldenv
inc
orb
lret
movsb
das
xchg
dec
pop
jecxz
mov
mov
cmp
out
and
sbb
sbb
adc
mov
lret
sbb
leave
add
jmp
cmp
fxch
sbb
mov
ja
das
jno
sarb
mov
xor
nop
lret
mov
sbb
mov
fstl
test
movsb
ret
int
xchg
push
popa
inc
lret
in
jo
pop
lods
loope
pop
out
sbb
push
aam
sub
pop
insl
iret
pop
push
sub
xor
mov
jp
mov
jne
jge
or
in
pop
aad
aad
push
hlt
ljmp
orl
dec
loope
xor
mov
xor
lahf
das
push
cmp
inc
lcall
dec
shrl
das
add
adc
aad
cmp
xor
mov
das
sbb
xor
sahf
jbe
xchg
aaa
jg
mov
test
jp
imul
adc
jno
mov
sbb
and
aam
aaa
jns
rorb
mov
xor
add
jnp
fldt
in
push
cwtl
jge
xor
int
lods
int3
je
in
je
xchg
and
add
fwait
int3
adc
aam
adc
push
mov
push
insb
add
in
push
push
xor
add
stos
sub
sub
mov
popf
jae
xor
push
sub
jle
mov
cmp
adc
lcall
out
ss
dec
adc
push
xor
jge
xorl
jp
es
icebp
dec
pop
sarb
imul
shll
adc
push
push
mov
pop
mov
insl
pop
pop
add
cld
and
or
mov
xor
mov
inc
xchg
and
addr16
andl
sti
inc
jne
and
add
mov
aas
gs
sbb
cmp
out
int3
inc
ja
push
mov
adc
clc
ret
js
sub
cmp
pop
and
fidivs
inc
rcrl
cli
jo
mov
cmc
push
mov
mov
add
aad
fadds
lds
xor
negb
xchg
call
ss
aas
mov
push
cmp
pop
xor
dec
mov
push
push
inc
cmc
push
sbb
mov
jae
cld
idiv
xor
inc
xor
imulb
insl
je
xchg
pushf
dec
pop
or
lock
and
es
mov
outsb
and
fdivl
cmp
sbb
xor
out
les
xchg
xor
or
nop
sbb
loope
adcl
das
mov
cmp
mov
enter
xchg
xchg
adc
jno
flds
add
xor
add
push
xorl
add
test
adc
xor
roll
dec
sti
mov
ljmp
cmp
push
outsl
cmp
inc
or
out
pushf
rcll
rorl
stos
cmpsb
pop
xchg
orb
stos
jnp
and
outsb
leave
jnp
add
and
pop
sub
push
lods
push
das
fcomps
inc
aam
mov
mov
rorl
inc
je
mov
rorb
sbb
xchg
dec
push
lock
shlb
push
iret
ja
mov
xor
repz
sbb
jg
push
cld
fcomi
cmovle
inc
jmp
lret
fsubr
sub
mull
add
xor
mov
sub
cmp
and
xchg
test
fs
pop
jp
mov
jo
addb
add
pop
xchg
adc
iret
divb
shll
clc
adc
test
push
inc
mov
insb
cmpl
or
pop
cmpsb
nop
add
out
nop
popf
call
ds
fs
inc
stos
dec
push
test
rcrl
dec
gs
and
nop
mov
push
insb
test
xchg
mov
fldt
out
mov
lea
inc
cli
roll
mov
mov
mov
or
mov
in
fs
arpl
sahf
pop
loope
push
push
xchg
inc
sbbb
bound
daa
movsb
aas
xor
scas
mov
test
mov
movsl
or
cmp
mov
testb
sub
jl
inc
loope
das
sub
aad
cmc
jb
lcall
cmpsl
dec
xchg
pusha
fwait
jp
mov
mov
mov
cld
in
jge
mov
in
stos
test
insl
mov
testl
outsb
jae
out
or
mov
jnp
das
mov
test
xor
sbbb
mov
pop
scas
mov
imul
xchg
outsl
mov
cmp
std
jg
hlt
cmpsb
mov
cmp
mov
aad
fwait
cmp
sub
fdivs
fldenv
dec
jp
ja
xchg
xchg
adc
fidivrl
mov
mov
fadds
or
call
aad
add
cs
mov
jno
push
ja
rorb
daa
cmp
jge
mov
mov
xor
xor
xor
insb
aad
repz
ds
pusha
shrb
push
or
mov
clc
xchg
pop
adc
jge
daa
adc
out
clc
lock
xchg
inc
les
into
das
sbb
xchg
sub
sbb
xor
js
ret
sub
jno
stos
xor
sub
mov
addr16
and
nop
popa
xchg
jl
stos
inc
xchg
icebp
in
mov
sub
inc
cmp
push
pop
aad
push
lret
shlb
aaa
mov
inc
pop
adc
push
xor
push
ljmp
xor
push
mov
push
ss
fstl
dec
push
push
and
sbb
cmpl
stos
dec
ss
cmpsb
jb
sub
sub
dec
scas
iret
flds
mov
dec
sub
pop
mov
xor
insb
inc
cmp
mov
outsl
pop
xchg
mov
cmp
add
popa
lea
pop
xor
mov
mov
imul
movsl
cs
out
cmp
cmp
cld
repnz
and
in
shlb
mov
andb
mov
ds
jno
mov
pop
repz
cmp
out
pop
push
out
mov
insb
xor
adc
je
cmp
or
xor
aad
xor
xor
call
mov
hlt
mov
cmpb
scas
mov
pop
cmp
sbb
mov
pop
cs
and
mov
je
inc
mov
cmp
adc
adc
push
shr
aam
hlt
xor
push
pop
jb
das
mov
cmp
shlb
jg
dec
push
loop
xchg
bound
jbe
fwait
shrb
xchg
or
sub
adc
rcrb
mov
jl
dec
lock
xor
ret
pop
addb
pop
mov
data16
dec
aam
add
pop
mov
mov
movsl
loope
stos
decb
mov
xor
subb
call
subl
into
adc
or
ftst
fnstenv
mov
mov
fiaddl
push
dec
idivb
repz
adc
sub
or
loopne
sbb
dec
pushf
cmp
mov
call
mov
mov
adc
pop
push
mov
mov
jge
dec
pushf
jbe
adc
lret
outsb
in
mov
sub
xchg
and
mov
xchg
cwtl
out
xchg
test
outsb
pushf
add
cmp
inc
mov
sbb
jg
fstpt
jbe
adc
nop
xor
outsb
jb
xlat
jne
cs
mov
dec
les
leave
adc
jns
dec
jnp
add
mov
repnz
pushf
add
ret
lds
mov
mov
fdivrl
xor
lret
cwtl
push
xchg
sbb
mov
add
cmc
outsb
sti
ret
mov
inc
int3
lods
cld
push
pop
xor
testb
ss
aas
int3
daa
xor
cmp
inc
jo
adc
push
shrl
adc
jl
pop
pop
std
mov
and
call
nop
push
push
mov
xor
inc
dec
pop
sbb
jmp
jge
out
dec
xor
lahf
aas
cmp
cli
xlat
mov
mov
loope
mov
and
mov
and
inc
out
aaa
js
out
xor
outsl
jle
js
jl
push
push
hlt
xor
aas
mov
jle
pop
inc
inc
mov
adc
adc
adc
jbe
jne
out
fs
pop
shlb
fisubl
lods
aaa
in
ret
leave
sbb
shrb
inc
adc
loopne
stos
xor
sbb
cmp
sbb
test
and
nop
and
pop
test
sbb
xchg
mov
call
push
mov
or
pop
dec
and
arpl
push
sbb
xchg
sbb
aaa
pop
repz
jecxz
inc
mov
jle
enter
in
inc
cmpsb
sbb
inc
mov
add
jge
push
inc
ss
mov
inc
repz
imul
cmp
insb
adc
mov
adc
and
inc
mov
sub
add
movsl
mov
rcrl
mov
push
add
push
mov
aaa
lea
mov
test
cld
mov
das
or
les
jae
icebp
in
xor
lahf
or
dec
aam
es
jmp
mov
mov
sub
mov
shll
dec
ror
aam
and
je
cmp
lret
loopne
subb
jle
or
enter
mov
jge
loopne
dec
add
cmp
mov
or
int
dec
fistl
fidivrs
cmpsb
sbb
nop
negl
in
test
mov
pop
iret
dec
inc
xor
adc
jge
cld
fdivs
adc
roll
inc
mov
adc
das
in
mov
leave
add
jnp
xlat
popf
pop
insb
dec
inc
pushf
jo
fisttpl
sub
push
mov
xchg
sbb
insl
scas
xor
xor
or
addr16
aaa
ficomps
mov
push
xchg
pushf
fdivr
aam
andl
or
xchg
xchg
sub
xor
mov
jo
test
mov
push
and
stc
ret
out
xchg
jb
pop
cmpsl
mov
pop
jno
push
aad
pushf
xor
pop
subl
les
pop
dec
mov
div
xchg
dec
add
sbb
pop
pop
jl
push
pop
jecxz
push
xchg
or
jo
or
in
fidivs
addr16
out
jb
sub
stos
jbe
mov
adc
jg
inc
fadds
pop
aaa
mov
sbb
push
mov
push
scas
push
mov
insl
test
ficoms
sub
outsb
adc
outsb
add
cmp
pushf
sub
jle
jp
mov
jbe
insl
push
mov
fstpl
and
imul
icebp
push
test
jge
das
addr16
mov
lret
and
lods
test
cmp
in
adc
out
in
or
leave
and
add
roll
lret
xlat
mov
addr16
int
adc
js
push
push
testl
sub
addr16
add
pop
aas
and
mov
out
test
ds
pop
mov
xchg
push
mov
cwtl
inc
pop
inc
les
loope
mov
insb
sub
cmp
test
cmp
mov
mov
roll
mov
sub
repz
aas
je
xchg
into
bound
inc
xchg
test
mov
and
rol
adc
push
in
jge
dec
push
repnz
or
leave
pop
adc
loopne
dec
xchg
movsl
sub
jg
add
call
pop
push
loope
jns
shrb
into
pop
adc
sarb
jp
addr16
mov
cmp
sarl
dec
rcrl
repz
stos
and
mov
out
add
leave
xor
in
cld
icebp
push
push
and
or
daa
sub
sub
clc
hlt
pop
jp
add
out
mov
shll
je
push
testb
sbb
jmp
xchg
push
pusha
out
loop
pop
and
hlt
push
dec
mov
mov
gs
pop
cmp
int
jno
movsb
push
fsub
addr16
add
sub
scas
push
and
jnp
cld
jo
adc
addr16
sahf
jge
push
cmp
mov
arpl
inc
xchg
jmp
imul
ds
enter
xor
div
lret
leave
pusha
popa
hlt
fcmovu
out
out
cmpsb
mov
jg
ja
dec
imul
ds
leave
cwtl
xor
mov
addb
push
cmpl
fs
jbe
mov
push
sub
jl
pop
mov
in
sub
sbb
sbbl
sbb
mov
mov
mov
sub
pop
xchg
xor
pop
stos
xor
test
test
mov
jle
inc
sub
pop
push
hlt
push
cmp
mov
dec
sub
aad
rcrb
mov
mov
call
ja
adc
inc
xor
jecxz
sbb
inc
sbb
and
sub
dec
daa
jle
push
test
dec
mov
jg
mov
insb
pop
stos
dec
sub
jmp
mov
mov
inc
mov
mov
aas
out
loope
scas
xor
repz
xor
lret
movsl
mov
mov
jbe
xor
mov
dec
aas
xor
jne
jl
out
aaa
cmp
jl
dec
push
push
icebp
mov
inc
pop
cmp
fisubl
xor
pop
jmp
shll
dec
cmpb
in
dec
mov
inc
insb
xlat
dec
pop
lret
jl
jle
or
outsb
cmp
insl
adc
inc
cmpsl
add
dec
roll
jp
pop
fidivl
lods
nop
mov
in
inc
inc
fidivrl
cmp
inc
adc
out
add
push
andl
cli
and
mov
sarl
cld
pop
xor
push
mov
pop
or
loopne
sbb
mov
inc
jecxz
and
call
and
sbb
into
fmuls
add
xor
mov
add
mov
test
add
jmp
jmp
scas
mov
shll
subb
xchg
ret
pusha
pop
sub
inc
popa
shll
jns
xor
ret
repz
out
adc
cmp
mov
cmp
pusha
push
sub
mov
push
pop
cmc
aas
mov
adc
inc
mov
mov
out
pop
imul
jmp
cs
mov
mov
sbb
mov
add
xchg
rclb
faddp
sub
and
sahf
das
imul
and
xchg
adc
or
xchg
repnz
sub
push
js
cmpsl
mov
or
aaa
sub
push
and
cmpb
jne
xor
cmpsb
jl
pop
fwait
lret
mov
inc
or
insl
mov
jg
xor
pop
sub
out
mov
jle
loop
xor
dec
mov
dec
popf
jnp
jno
jp
scas
xor
adc
lock
mov
sbbb
lods
lock
out
xchg
lret
out
adc
add
mov
out
sub
popl
mov
aam
sub
ret
cmc
les
pop
push
push
loopne
push
in
dec
aaa
push
mov
cmp
ljmp
mov
addr16
add
les
xchg
xchg
adcl
fsubl
cmp
xlat
lret
sbb
push
cmp
iret
ret
js
mov
test
leave
popf
insl
jb
lahf
sbb
mov
add
xchg
mov
les
das
jl
push
push
dec
sub
sub
sub
fcmovu
push
mov
push
std
mov
inc
js
adc
mov
pop
sbb
pop
inc
sbb
jb
or
jle
sarb
mov
xchg
ds
insb
jp
inc
leave
sub
fnstenv
dec
or
in
repz
jne
je
and
inc
push
xchg
or
cwtl
add
jbe
sbb
mov
dec
xor
sub
pop
lods
fildl
cmp
ds
add
jns
or
leave
adc
clc
jge
dec
int3
sub
adc
shl
dec
or
test
sbb
push
fcomps
rclb
stos
xchg
jp
in
mov
inc
out
lret
adc
or
or
test
rcll
sub
adc
cs
sahf
insb
es
jmp
xchg
dec
cmpsb
inc
sbb
cmp
sub
inc
mov
dec
mov
lea
lahf
js,pn
dec
lret
icebp
fnstcw
js
imul
mov
cmpsl
gs
cld
inc
push
inc
icebp
xor
orb
std
cmpl
mov
add
insl
pop
in
test
repz
int3
test
pushf
fcoms
cmp
gs
js
je
mov
data16
mov
jne
and
push
mov
cmp
xor
cmpsb
call
mov
cmpsl
test
sbb
cmpsb
inc
test
adc
orb
sub
das
mov
sub
repz
fsubs
fdivrs
adc
int
js
sbb
adc
sbb
mov
xchg
outsb
lods
inc
movsb
ret
sub
in
dec
ja
into
sub
ds
and
mov
mov
and
mov
inc
into
cmp
mov
call
scas
sub
push
scas
mov
mov
xor
push
inc
inc
dec
jb
jbe
jmp
es
mov
daa
sbb
mov
imul
out
inc
inc
jns
jnp
mov
pop
and
sbb
cmp
sub
mov
sub
xor
insl
pushf
jae
push
je
push
and
pop
stos
pop
inc
xor
ljmp
xor
mov
jno
test
pop
das
lods
sti
inc
cmpl
cmp
loop
in
ljmp
stos
pop
mov
iret
push
js
imull
roll
in
lcall
jb
jno
sub
jb
test
imul
in
in
ss
loopne
add
shrl
mov
jae
lret
mov
inc
mov
mov
add
xlat
or
ret
push
dec
dec
out
jecxz
cmp
ljmp
dec
insb
pop
cltd
mov
insl
scas
push
dec
in
jne
xor
in
push
lods
iret
inc
mov
stos
cs
push
scas
push
jl
jl
dec
mov
repz
loope
enter
dec
mov
scas
push
xchg
aam
iret
push
mov
iret
cmp
pop
fwait
xor
cmp
jb
xchg
fs
popf
adc
sbb
push
icebp
dec
xorb
xchg
sbb
dec
mov
in
jge
in
mov
and
outsb
xor
dec
xor
mov
cs
pusha
daa
xchg
push
pop
pop
sbb
pop
cli
push
sub
pop
je
adc
fcoms
ss
fstpt
dec
lods
cs
mov
mov
cmp
sbb
sbb
sub
sub
push
adc
into
jle
out
push
jb
mov
jl
aas
push
ja
mov
push
mov
xorl
inc
jnp
mov
ret
mov
pushf
mov
bound
xchg
and
in
std
shll
mov
mov
mov
cs
repz
xor
pop
cmp
xchg
stos
mov
subb
add
sbb
test
mov
repz
sahf
movsb
mov
ja
imul
jnp
pop
sbb
ljmp
xor
test
ds
push
aam
jo
xchg
hlt
cmp
icebp
fdivl
cmp
hlt
int3
xchg
shlb
and
cmpsl
dec
aaa
les
outsb
repz
push
adcb
push
test
and
mov
mov
inc
scas
in
mov
shrl
pop
mov
divl
inc
add
in
ret
das
das
in
mov
ljmp
stos
fildll
test
push
pop
and
push
cmp
add
mov
cmp
gs
dec
cmp
outsb
cwtl
mov
pop
hlt
out
insl
add
push
jo
cmc
mov
mov
inc
negl
adc
adcb
pop
fidivrs
mov
mov
xor
sub
movsb
mov
gs
xor
mov
add
stos
test
iret
xor
loop
out
push
shlb
mov
xor
lock
cmp
push
adc
pusha
or
push
mov
dec
shll
and
mov
cld
ret
insb
orb
push
push
lods
and
clc
outsb
fdivrs
xor
jp
ljmp
jnp
mov
dec
pop
sarb
fs
in
xchg
test
push
xor
aaa
mov
push
movsl
lock
inc
sub
dec
daa
mov
or
inc
xchg
mov
cmp
test
pop
das
sbb
cmpb
fucom
clc
outsb
jns
ds
shl
mov
cli
jle
inc
inc
into
mov
sarl
or
loopne
mov
mov
push
jo
ret
mov
nop
out
addl
lods
xor
fisttpl
iret
aaa
and
push
imul
pop
icebp
cmp
add
pop
xor
iret
loop
push
mov
dec
je
sbb
add
or
mov
xchg
mov
adc
cmp
add
adc
inc
hlt
scas
daa
push
insb
mov
addr16
mov
mov
jmp
jne
pop
sub
push
push
push
std
sub
daa
scas
push
aaa
or
mov
out
inc
jbe
aad
mov
sub
sahf
or
mov
mov
pop
dec
jae
in
es
fnstsw
std
and
fcomi
cs
and
mov
jbe
lods
fists
or
lods
inc
pop
cmc
and
mov
dec
mov
sub
xor
xor
xchg
mov
stos
xor
jg
or
xor
sysexit
mov
inc
iret
fldt
xchg
insl
popf
xchg
adc
inc
add
imul
aaa
test
cmpsl
sub
loopne
jo
jle
les
stos
xor
pushf
cmp
leave
cmp
cmp
mov
inc
int3
jge
inc
dec
jg
dec
in
outsb
subl
int3
xchg
pop
jle
cmpsb
testl
push
xchg
push
bound
mov
sarl
shlb
inc
insl
pop
in
scas
mov
jmp
xchg
cmp
hlt
sbb
mov
or
lock
jno
mov
cld
pusha
js
dec
clc
sarl
outsb
ds
cmp
hlt
cld
pop
mov
lock
xorb
mov
aaa
sbb
scas
js
sub
stc
mov
add
mov
idivb
scas
hlt
test
pop
pop
lods
add
pop
mov
jl
dec
xor
push
cmp
adc
push
dec
xor
dec
mov
dec
jo
sarb
dec
mov
cmp
cwtl
inc
jle
mov
pop
sub
call
mov
mov
xor
mov
test
jo
rorl
aaa
rolb
pop
cmp
pop
cwtl
iret
dec
inc
ret
aad
subb
fidivl
sbb
push
mov
push
ss
in
addb
jg
stc
cmpsb
outsl
subb
add
jno
add
inc
loopne
or
sub
push
jp
inc
scas
sbb
clc
or
mov
xor
inc
inc
mov
dec
movsl
push
cmp
inc
inc
scas
movsl
ret
cmp
les
inc
pop
pop
adc
pop
jg
cmp
cmp
and
arpl
cmp
lods
dec
movsb
xor
push
pop
movsl
ja
addl
push
adc
negb
movsb
dec
sahf
jmp
test
dec
inc
inc
cmp
test
insb
icebp
xchg
in
shll
push
rclb
aam
pop
pop
stos
cli
push
cmpsl
inc
dec
cmp
xchg
mov
cmpsl
cmp
aas
push
dec
cmp
outsb
mov
aad
mov
ret
jl,pn
out
lock
rcl
jo
mov
mov
push
mov
push
movsb
in
bswap
movsb
xchg
in
adc
dec
jmp
aaa
fs
push
and
pop
xchg
xor
ja
pop
shlb
repnz
data16
inc
les
mov
leave
dec
push
lret
jecxz
ret
jbe
fsts
mov
scas
scas
mov
stos
cmp
xor
or
shl
into
push
into
sbb
in
mov
cmp
movsl
ja
push
iret
inc
outsb
and
sbb
ds
dec
mov
cmp
es
cmp
xchg
inc
mov
mov
mov
inc
add
and
cmp
cs
pop
popf
movsb
mov
ret
add
imul
sub
xchg
inc
jo
sbb
dec
hlt
cmp
xor
scas
pop
ret
movsb
fildl
and
push
lods
xor
jle
daa
cmp
movsb
sub
sbb
jmp
sub
or
mov
popa
ds
movsl
pop
mov
jo
mov
jge
xor
inc
mov
aaa
lahf
es
jp
pop
xlat
cmp
pop
add
lcall
ret
sbb
fldt
adc
bswap
cmpsl
ds
push
cmp
xor
mov
mov
test
push
dec
cld
and
adc
shll
mov
insb
mov
sub
adc
jge
push
hlt
out
pop
push
mov
mov
cmp
sub
push
imul
jl
pop
outsb
popa
pop
dec
data16
imul
mov
mov
clc
mov
xor
mov
cmp
subb
rclb
push
inc
jecxz
jne
pop
dec
add
loope
xor
xchg
das
out
add
lock
jno
inc
call
pop
daa
xchg
inc
push
test
sbb
mov
mov
jp
ret
cs
cmpl
mov
sub
ss
xor
lret
adc
shrb
mov
inc
xor
xchg
add
or
inc
jbe
sbb
insb
pop
scas
push
lahf
pop
xorb
sub
insl
cwtl
pop
in
xchg
pop
push
lcall
sub
pop
sbb
movsb
call
sbb
push
scas
in
xor
mov
mov
jae
bnd
pop
xor
mov
jg
ret
movsb
cs
or
jl
sub
scas
sbb
dec
and
mov
jbe
jg
repnz
sbb
jb
dec
push
pop
push
xchg
ret
xor
add
outsb
mov
cli
jns
pop
mov
and
aaa
addr16
xchg
sahf
jecxz
aam
movsl
jo
pop
push
mov
stc
mov
sbb
cmp
mov
ficomps
clc
pop
xchg
imul
jecxz
outsb
into
test
mov
aad
sbbb
dec
out
test
mov
add
add
test
dec
mov
mov
test
push
les
out
dec
scas
push
les
js
das
jnp
or
jae
or
mov
sbb
push
loopne
inc
shr
pop
sub
icebp
cmpsb
xor
movsl
test
jne
mov
jbe
scas
jb
push
push
in
int
aam
pop
outsb
mov
je
js
dec
cwtl
jecxz
mov
fnstsw
mov
push
aas
das
sub
dec
mov
sbb
sub
or
xor
pop
in
lea
and
push
ret
testb
push
cmpsl
ss
popf
mov
cs
data16
push
sbb
mov
pop
inc
stos
sub
sbb
mov
adc
or
cmc
ja
sbb
mov
mov
push
cmp
sub
pop
mov
adc
mov
jmp
out
inc
inc
sub
ret
and
xchg
push
sahf
nop
push
pop
mov
pop
jae
stos
test
cmpsb
dec
ret
cmpsl
push
dec
xorl
loopne
cmp
adc
mov
sti
aaa
out
adc
cmp
pop
pop
adc
rcr
insl
sbb
and
jne
push
or
sub
out
pop
xlat
bound
jne
dec
inc
pop
dec
mov
aam
inc
cmp
pop
mov
add
jecxz
shlb
xlat
or
pop
sbb
or
mov
dec
in
or
add
scas
xor
mov
aad
push
hlt
add
mov
xchg
out
shlb
aaa
dec
mov
pop
sub
mov
pushf
stos
jnp
dec
push
cmc
pusha
faddl
dec
imul
jbe
les
out
inc
push
fisubrs
mov
insl
push
cld
dec
out
in
sar
insl
stos
andl
xchg
sbb
push
dec
pusha
mov
ret
xor
dec
pop
ret
push
dec
pop
jno
mov
jmp
popa
or
out
jge
rcll
xchg
cmp
xchg
xor
sub
inc
cmc
out
shl
popf
sub
sub
jae
scas
imul
push
cmp
xor
inc
ficoml
repnz
es
push
jo
out
xchg
insb
call
ljmp
outsb
cmc
add
fmul
mov
and
in
xor
push
cmp
adc
fidivrs
xchg
les
xchg
xchg
loope
stos
push
xchg
adc
dec
and
sbb
fcoml
jmp
rorb
jmp
push
push
mov
dec
and
xor
mov
inc
and
mov
sub
into
mov
nop
mov
add
cpuid
jp
stc
inc
adc
jne
ss
loope
stos
lock
leave
nop
inc
push
or
loop
jb
cmp
xor
mov
mov
pop
in
fimuls
xor
outsb
fs
lret
int
nop
decb
mov
lock
insb
cmp
dec
je
inc
cs
push
mov
mov
jp
push
xor
add
pushf
push
push
int
mov
mov
std
dec
push
aas
mov
adc
dec
xor
add
pop
cmp
hlt
shll
mov
mov
jg
push
xchg
sub
test
daa
pop
push
test
jbe
and
dec
ss
roll
andb
mov
mov
push
movsb
or
fildll
aas
in
xchg
stos
xor
inc
xchg
mov
call
xor
sbb
adc
fstpt
inc
add
subb
sbb
push
cmpsl
mov
nop
arpl
add
jp
and
xchg
inc
mov
dec
add
aam
mov
inc
mov
dec
dec
insb
test
inc
repz
ja
jo
iret
cwtl
mov
pop
ret
jne
dec
push
outsb
xchg
cld
ds
dec
xchg
int3
fdivl
push
cmpsb
fidivs
mov
inc
cmp
cld
xor
in
push
xor
divb
fwait
dec
outsl
xlat
sub
test
push
hlt
jecxz
loope
dec
mov
mov
mov
pop
and
repnz
into
inc
call
mov
add
inc
sub
jmp
clc
xchg
sub
movsb
or
push
in
gs
jl
xor
cmp
aaa
insb
cmp
inc
ret
sahf
dec
fdivl
lock
movsl
in
or
jo
clc
cmp
sub
repz
sbbl
or
data16
daa
outsl
insb
test
insb
inc
adc
xchg
pop
fs
pop
shrb
or
inc
dec
sahf
leave
add
in
into
inc
ds
ret
lods
xlat
in
loop
movsb
push
xchg
xor
test
xchg
xchg
out
lods
mov
xchg
xor
pop
aam
pop
cmc
adc
mov
add
test
push
lock
adc
inc
and
jecxz
cmp
lods
int
xchg
cmp
jae
cmp
jecxz
mov
jns
inc
pop
lods
sub
dec
mov
popf
call
clc
lods
mov
dec
push
adc
sbb
mov
ljmp
lea
adc
sbb
call
cmp
ds
pop
shll
adc
inc
cmp
and
inc
xor
push
add
roll
cli
dec
insl
sahf
xorl
mov
mov
mov
and
xchg
out
addl
lods
sub
sub
or
hlt
sti
sarb
push
vsqrtpd
lret
pop
and
push
mov
mull
outsl
xor
mov
fdivrl
mov
icebp
pop
test
mov
incl
mov
mov
adc
sbb
dec
sub
mov
xor
mov
iret
ror
cmp
mov
leave
mov
sub
aam
iret
int
push
scas
mov
xchg
mov
lods
dec
outsb
int
or
js
push
fdivs
cmpsb
push
insl
mov
dec
push
shll
xchg
mov
sbb
push
pop
dec
jp
pushw
in
add
lock
add
subl
jg
stos
cmc
jno
ss
adc
stos
insl
repz
hlt
jne
mov
fs
fs
xor
test
lret
xchg
enter
das
mov
aas
mov
pop
das
inc
mov
inc
aaa
test
jo,pt
inc
ds
inc
inc
ds
inc
dec
ds
inc
dec
inc
xor
dec
push
adc
cmp
xchg
xor
mov
bound
sub
lea
xor
mov
pop
nop
and
pop
or
xor
jge
dec
fnsave
mov
fwait
jno
cmp
test
jb
movsb
mov
pop
and
cmp
mov
popf
sub
pop
pop
cmp
arpl
jecxz
stos
out
or
xor
test
test
fiaddl
sbb
test
sahf
jmp
les
mov
jne
testl
mov
out
and
cmp
xor
insb
sub
imul
fidivl
xor
nop
jae
rcll
xor
push
xor
cmp
inc
lds
push
push
dec
stos
mov
mov
push
inc
outsb
pop
and
js
ss
cmp
mov
or
fwait
loopne
push
sub
dec
jl
inc
pop
add
jge
jb
xchg
mov
in
sub
ljmp
add
insl
jo
jg
je
jle
push
hlt
xor
sbb
loope
pop
fistps
negl
call
mov
repz
outsl
or
pusha
sub
cmp
insb
xor
scas
push
pop
pop
add
jmp
hlt
xor
mov
fs
int
mov
add
idivb
pop
pop
inc
in
sub
imul
mul
out
data16
mov
jo
xor
push
dec
mov
cwtl
xchg
movsb
mov
mov
sub
es
lock
fcmovbe
fdivr
fiaddl
pop
xor
and
scas
ja
repz
cmpsb
mov
stos
xlat
fldcw
out
cmp
xchg
mov
and
fadds
cmp
jg
dec
les
mov
cs
xchg
jo
cmp
jmp
push
or
mov
dec
xor
mov
popa
lods
xor
aaa
das
enter
jnp
sub
gs
push
mov
pop
sbb
imul
fimull
out
push
xor
sub
dec
divb
faddp
inc
rcrb
aaa
adc
ja
cmpsl
stos
sub
nop
out
test
cmp
lret
add
xor
xor
mov
and
lret
jae
fildl
test
mov
out
fs
mov
pusha
push
sbb
xchg
push
into
jo
sbb
jno
cmp
in
repnz
hlt
in
cmc
xlat
push
mov
jbe
mov
cs
dec
dec
push
inc
dec
decb
movsb
and
outsl
sbb
jmp
stos
xor
test
hlt
add
or
mov
lret
cld
icebp
in
sub
xor
jno
xchg
lods
xlat
call
gs
cmp
pcmpeqb
dec
pusha
ljmp
rcrl
call
mov
mov
mov
mov
ret
sarb
stos
nop
ds
lea
xchg
push
xchg
mov
and
push
pop
ds
ljmp
iret
mov
ret
lods
in
jmpw
xchg
adc
pop
jl
adc
jl
pop
push
in
cmp
lret
cmp
pop
inc
mov
imul
sbbl
mov
movsb
sbb
and
jb
test
mov
addl
lea
pop
in
mov
xlat
shll
fimuls
mov
xlat
sarb
jo
adc
dec
dec
shl
repz
dec
aaa
nop
mov
aaa
xor
cmp
lods
and
mov
or
push
adc
fcoms
insb
xchg
adc
andl
insb
or
add
aam
ljmp
pop
mov
dec
imul
scas
jg
push
sbb
loopne
call
and
fs
add
cmp
mov
ds
mov
lea
mov
mov
cmp
push
mov
lret
nop
push
loope
push
lcall
hlt
in
mov
cmp
fistl
pop
push
ss
cmp
pop
scas
push
nop
insl
jns
cmp
lock
lahf
pop
in
mov
shrd
sub
xor
daa
jge
stos
pop
sub
pusha
inc
push
lcall
pop
pop
sahf
mov
icebp
jl
fucomi
jge
ret
sbb
lret
aas
test
aaa
repz
fimull
xlat
rcrb
insb
stc
cmp
dec
cltd
inc
mov
inc
push
xor
push
outsb
or
mov
pop
cmp
mov
push
dec
sub
mov
je
jecxz
in
mov
ret
movsl
iret
cmp
jo
into
sbb
inc
or
ror
nop
xor
jo
add
xchg
mov
push
mov
fmuls
jae
aad
test
sbb
lahf
mov
push
mov
or
jns
xchg
adc
movsb
adc
fidivl
push
pop
xchg
fidivrl
mov
gs
add
jp
cwtl
sbb
jo
or
pop
xor
aaa
adcl
dec
sub
pushf
push
mov
or
outsl
mov
fildll
or
jne
or
fbstp
sarb
jnp
mov
adc
lods
xchg
mov
outsl
mov
call
lret
and
rolb
repz
mov
mov
push
add
iret
data16
inc
push
pop
xchg
mov
xchg
ss
add
xchg
lods
pop
nop
dec
ds
sbb
dec
push
fidivs
inc
xchg
add
aad
mov
fistpll
daa
push
jecxz
popa
jmp
ror
xor
jno
xchg
adc
mov
and
sbb
jle
cmp
je
inc
lcall
fimull
xchg
popw
popa
cmp
out
pop
or
add
jns
mov
xchg
cli
js
cs
call
adc
out
mov
out
ret
jle
mov
fimuls
xor
cmpsl
test
xor
das
push
mov
pop
fsubs
mov
ds
test
movsl
sahf
out
orb
mov
and
ja
jnp
idivb
push
mov
jbe
mov
mov
pop
adc
in
add
mov
in
jno
shrl
ret
hlt
and
sbb
jl
pop
stc
sub
ja
mov
scas
sbb
xlat
dec
push
pop
cmc
xor
cld
outsb
test
jno
dec
es
es
push
xor
xbegin
and
icebp
dec
dec
and
push
adc
in
or
movsb
adc
xor
cmp
mov
push
cmp
jb
inc
sbb
icebp
cmp
push
mov
pop
push
les
mov
gs
mov
add
and
test
inc
pusha
hlt
int
rcr
push
aas
lock
icebp
fsubl
pop
mov
cwtl
leave
xchg
and
mov
lods
xor
xor
push
sub
iret
cmp
test
jae
cmp
mov
ret
and
pop
leave
mov
mov
dec
mov
push
push
cwtl
jg
jp
loopne
xchg
fwait
xor
loope
insb
in
fs
xor
fcomip
jae
add
shlb
push
scas
cmp
loope
out
add
je
stc
xor
inc
inc
mov
mov
jl
scas
xchg
pop
push
aas
addr16
pushl
dec
jg
pop
mov
out
in
push
loopne
enter
xchg
add
stos
int
sbb
sub
adc
daa
out
jecxz
adc
xchg
add
pop
into
mov
add
or
add
test
xchg
xchg
push
mov
arpl
jecxz
add
and
mov
cmpsl
mov
xor
cs
subb
cmp
lock
out
sbb
call
or
mov
lock
pop
sub
push
test
mov
jnp,pn
sub
inc
xor
push
inc
push
mov
push
adc
sub
outsb
xor
inc
das
aaa
and
xchg
aaa
sub
xchg
add
roll
mov
mov
cmp
lods
es
imul
cmp
cmc
mov
subb
mov
sbb
and
jnp
mov
outsb
dec
mulb
repz
xor
add
imul
pusha
adcl
mov
sub
mov
and
mov
mov
lahf
or
mov
push
ja
outsl
insl
mov
cmp
rcl
sahf
push
out
push
xchg
repz
ljmp
rcrl
xchg
dec
cmp
mov
jmp
jo
sbb
xor
jne
test
stos
push
inc
stos
repnz
int3
aas
inc
jmp
sub
mov
hlt
xchg
fwait
sar
sbb
int3
out
or
inc
pop
cmp
jl
cmp
mov
dec
daa
inc
mov
mov
fdiv
repz
pop
cmp
sbb
stos
arpl
mov
inc
xor
jmp
popa
xor
cmp
into
iret
iret
and
pushf
sub
out
stos
cmp
xchg
cmp
notb
dec
subl
jge
jge,pt
sub
pop
ja
out
sahf
out
pushf
dec
pop
pop
pop
ret
je
dec
mov
js
mov
das
mov
xchg
das
mov
in
and
je
dec
pop
lods
add
daa
xchg
push
outsl
div
sbbl
pop
popa
sbb
mov
outsl
sti
mov
cmp
mov
sub
repz
mov
addr16
mov
mov
mov
lock
dec
and
mov
xchg
dec
cmp
mov
add
nop
lock
push
lea
scas
lods
pushf
xor
adc
shlb
xchg
push
or
pop
or
into
pop
scas
popl
mov
cmpsb
jmp
cli
and
bound
test
xor
pushf
or
jl
out
clc
ljmp
mov
pop
neg
jno
mov
add
lods
in
dec
mov
loopne
dec
adc
pop
pop
jbe
out
imul
add
aas
or
clc
fisttpl
dec
mov
sbb
outsb
addl
sub
sbb
mov
fimuls
inc
inc
int3
adc
or
lahf
cmp
mov
xor
adc
je
pop
jecxz
aas
in
das
pop
and
mov
test
ret
sub
mov
aas
int3
xor
test
cmpl
push
dec
insl
pop
xorl
cwtl
lret
je
cmp
pop
aaa
cld
xor
push
orb
shll
repnz
xchg
push
sub
mov
shr
shlb
jne
shl
push
out
mov
jl
xchg
push
inc
and
pop
and
clc
push
jl
ss
inc
xor
idivb
ret
mov
inc
in
and
and
sub
mov
xchg
das
repnz
dec
mov
fldcw
inc
repnz
in
loop
mov
mov
mov
xchg
nop
int3
repz
and
add
inc
sbb
inc
js
test
fcoms
fldenv
fs
stos
xchg
sub
iret
in
mov
pop
lock
out
push
mov
xchg
mov
jecxz
aas
cmp
push
out
outsb
ljmp
and
xor
cmp
jge
aaa
dec
xor
inc
in
pop
sbb
popf
and
pop
addr16
mov
push
ret
jl
xchg
insb
shlb
jp
pop
fwait
mov
lock
xor
and
pop
addb
loopne
dec
fnsave
insl
jl
xchg
insb
jns
mov
je
addr16
jl
dec
inc
cmp
sbb
loop
pushf
xor
xor
shll
int
jge
and
into
jbe
mov
xchg
insl
iret
push
push
xchg
pushf
repz
dec
pop
ds
stc
xor
xchg
mov
pop
sub
mov
shll
hlt
aaa
xor
xor
push
xorb
ja
insb
add
xchg
repnz
and
ss
mov
shrb
mov
fmull
jb
mov
xor
xorl
jno
push
jle
mov
mov
and
mov
adc
int
jns
iret
imul
push
pop
or
int3
add
scas
bound
xchg
aad
xor
subl
xor
and
inc
std
in
cs
sub
mov
cmp
sub
mov
lret
mov
or
lods
adc
es
subl
fnstenv
rcl
fldenv
dec
add
faddl
adc
jo
xor
dec
in
add
mov
lret
or
xchg
fistpll
ds
fcomps
out
lret
shrb
std
xor
jmp
loopne
mov
fcmovu
rorb
insb
das
xchg
jmp
std
loope
mov
ss
inc
push
push
cmpsb
add
insl
xchg
jg
call
jne
in
adc
jne
cmp
pop
dec
in
js
cs
pop
dec
sub
subb
jge
test
push
fdivrl
push
lods
imul
in
nop
sahf
negb
stc
push
dec
in
jp
das
in
dec
adc
test
dec
add
adc
xchg
pop
mov
sub
mov
insb
orb
push
clc
into
aaa
out
and
nop
xchg
dec
mov
enter
test
adc
dec
sub
das
or
cmp
cmp
xor
hlt
dec
pop
scas
cld
mov
out
data16
enter
dec
adc
sub
bound
mov
mov
aas
lods
cwtl
push
popa
pop
jl
jle
jle
sti
xor
pusha
loopne
in
mov
adc
jp
cmp
push
mov
shll
inc
fwait
xchg
push
dec
test
int
lods
inc
or
scas
mov
rorb
iret
add
stos
push
in
xor
lret
add
jns
cld
outsb
sbb
push
pop
mov
jmp
xor
mov
lahf
xor
add
add
cltd
sub
sub
dec
das
cmp
outsl
movsb
roll
fdivs
test
stos
pop
mov
dec
cltd
sbb
dec
sbb
sub
flds
mov
shll
jp
addr16
jne
dec
pop
and
mov
cs
pop
js
mov
mov
addl
jns
jle
inc
shlb
sub
rorl
xor
mov
popf
call
xor
and
cmp
inc
jmp
mov
push
mov
pop
mov
mov
aas
add
ss
cmp
mov
int3
pop
xor
repz
push
scas
push
fcom
xor
sti
insb
andl
mov
inc
addr16
rol
add
shlb
jle
jp
jmp
and
insl
insl
dec
sbb
ret
ret
enter
into
negl
mov
jp
pop
inc
lods
dec
inc
and
sub
rclb
cmp
fdivl
dec
ss
jl
icebp
jo
mov
addr16
jb
lret
sub
jg
jl
xchg
mov
xor
addr16
jbe
add
fidivs
inc
repz
mov
gs
fdivs
in
xor
xchg
push
xorb
jbe
inc
inc
jg
mov
push
pop
mov
mov
jg
leave
jmp
pop
push
clc
push
or
pop
xchg
test
mov
in
outsb
mov
fs
cmp
arpl
fs
xchg
cmp
xor
roll
dec
imul
pop
add
push
das
inc
jbe
loopne
das
push
cmpsb
aaa
xchg
enter
cmp
sub
das
mov
push
fwait
inc
nop
mov
shll
aad
das
jne
xchg
mov
push
mov
sub
fidivl
mov
cmp
sahf
fstps
std
int
push
imul
out
xor
adc
jg
aas
jecxz
lock
sbb
xor
mov
scas
xchg
xor
or
jl
push
and
loope
sbb
push
sbb
xor
lods
les
lret
pushf
xchg
adc
jmp
push
cmp
mov
xor
add
push
and
fadds
or
or
divl
or
loope
push
and
insl
lods
stos
outsb
mov
pop
decl
cmp
mov
dec
xor
std
movb
sbb
add
or
cld
cmp
pop
sbb
push
or
jg
push
xor
mov
push
shlb
iret
icebp
and
jecxz,pn
xchg
xor
fdivs
sti
mov
xchg
es
stos
ss
xor
sbb
push
mov
mov
stc
ret
sub
out
mov
jge
xchg
mov
xor
nop
adc
ja
push
mov
popa
hlt
push
xor
xor
mov
mov
loop
jmp
cmp
mov
add
pop
push
pop
out
and
popf
mov
adc
inc
in
adc
or
out
mov
shrl
adc
in
dec
cmp
add
jb
shll
dec
dec
in
mov
jge
mov
sbb
fldt
or
pop
mov
fmull
inc
imul
cmp
cmp
dec
out
mov
inc
xor
je
adc
std
std
push
es
cmpsb
dec
loope
ja
int
sub
adc
mov
xor
rcrb
pushf
jo
dec
xchg
inc
outsb
mov
cmp
fidivs
xor
xorb
mov
inc
out
dec
mov
push
dec
mov
pop
cltd
orl
jo
in
mov
ljmp
pop
jnp
jl
cmp
shl
lods
xor
sbb
cmp
push
dec
cmc
rclb
xchg
movsl
int3
cmp
icebp
pop
dec
inc
out
fstpl
mov
leave
fidivrs
stos
xchg
pop
xchg
mov
fiadds
outsl
test
dec
pop
nop
push
pop
inc
mov
cmp
sub
inc
outsb
or
add
hlt
cmp
sarl
fdivr
cld
insb
scas
mov
dec
mov
mov
rorb
stos
shrb
sbb
jne
rcr
test
sub
jl
lods
insl
cmp
adc
int
pop
dec
outsl
lcall
mov
dec
jl
mov
adc
cmp
aam
push
sbb
sbb
adc
sbb
adc
pop
sbb
cld
in
bound
insb
push
insb
mov
out
xchg
in
sub
mov
jle
inc
dec
int3
cmp
scas
mov
dec
ss
push
testl
pop
cmp
in
add
data16
pop
gs
dec
dec
mov
mov
hlt
xchg
lock
sahf
push
gs
dec
push
mov
mov
ficomps
mov
mov
sahf
sahf
xchg
mov
mov
mov
pop
sahf
push
gs
dec
inc
mov
mov
mov
js
dec
aad
xor
xor
mov
mov
je
jno
push
adc
inc
jne
call
ja
je
or
cmp
sbb
cmp
lock
sbb
mov
and
add
loope
test
inc
stos
xchg
icebp
inc
sbb
iret
ja
sbb
shlb
insb
xor
xor
imul
lods
xchg
outsb
inc
mov
mov
mov
xchg
popf
pop
mov
add
mov
mov
addr16
xchg
inc
je
les
sbb
mov
sbbb
inc
push
nop
dec
pop
aas
mov
xor
adc
pop
icebp
in
das
mov
jbe
test
std
cs
dec
sub
nop
or
je
das
jno
adc
test
aaa
nop
jne
inc
push
mov
in
shrl
push
dec
cmp
push
xchg
cmc
scas
test
xchg
js
push
sbb
sub
push
pop
imul
add
inc
fs
sbb
ror
mov
enter
outsb
dec
xor
daa
jne
pop
hlt
mov
pushf
mov
fwait
popf
hlt
jo,pt
dec
testl
cld
push
mov
push
jb
movsb
mov
push
dec
and
mov
pop
dec
es
lds
sahf
mov
dec
cmpsl
nop
popf
pop
xchg
mov
mov
jg
outsb
jne
imul
dec
pop
inc
mov
cmp
cs
dec
and
adc
inc
outsb
repz
jmp
aad
lret
pop
shll
outsl
mov
nop
mov
in
inc
dec
jg
mov
pop
dec
push
je
adc
sbbl
lods
mov
jno
and
jle
mov
subl
mov
jle
int3
mov
adc
out
fimull
call
adc
inc
dec
and
jmp
mov
dec
and
enter
int
ret
ss
mov
pushf
mov
test
fwait
test
sub
cmpl
imul
cmc
cmpsl
das
dec
sbb
shlb
dec
cmp
cmp
in
jo
xchg
int
adc
xchg
pop
lods
inc
inc
or
out
adc
jne
fadd
inc
repz
jmp
mov
lret
faddp
inc
outsb
mov
lods
test
pop
push
inc
outsb
jnp
jno
addr16
pop
nop
push
pop
dec
mov
aas
fidivs
sub
and
pop
inc
outsb
or
ss
mov
in
dec
outsb
lret
jno
pop
ss
lea
push
dec
hlt
and
sahf
dec
jbe
xor
fwait
add
cmp
jb
cmp
das
push
dec
dec
je
jae,pt
xchg
movsb
inc
cmp
pushf
cmp
push
dec
into
lods
inc
dec
jno
jl
shlb
adc
cmp
inc
xchg
jnp
scas
sbb
jle
inc
cmp
popf
mov
push
dec
inc
jno
movsb
cwtl
mov
insl
push
shrb
inc
xor
aaa
xor
mov
xor
fdivl
inc
lods
push
mov
sbb
pop
add
xchg
dec
pusha
int3
pop
iret
inc
mov
mov
push
push
daa
shl
nop
aam
rcll
pusha
jbe
pop
imulb
test
dec
inc
mov
mov
sub
cmp
mov
daa
mov
insb
inc
or
mov
cmp
outsb
hlt
push
testl
cmp
inc
dec
inc
daa
outsl
iret
nop
and
mov
dec
test
in
iret
outsl
xor
push
in
push
jae
xchg
push
inc
test
cmp
in
outsb
dec
data16
pusha
sub
shr
outsb
and
in
jmp
xor
mov
or
or
push
pop
pusha
mov
pushf
jo
inc
mov
je
sub
push
lock
int
insb
dec
push
push
and
sarb
lret
inc
movsl
push
dec
mov
iret
add
nop
push
xor
sarb
xor
dec
fsubs
insb
mov
xor
pop
lock
decb
insb
pop
push
jge
pusha
nop
push
shlb
sub
daa
mov
in
and
jae
pushf
int3
adc
add
iret
mov
xor
adcb
mov
jns
into
iret
inc
push
jno
dec
dec
xor
mov
push
les
nop
aam
mov
test
loopne
mov
pop
sbbl
testb
xlat
test
push
addr16
int
cmpl
adc
je
inc
mov
or
rclb
mov
mov
les
mov
jl
pop
les
lods
dec
int3
xor
lods
hlt
hlt
outsb
inc
cld
cmp
loopne
inc
and
xor
push
outsb
int3
push
lock
js
lock
mov
je
inc
or
mov
pushf
dec
not
cmp
insb
push
or
rclb
int3
inc
shl
inc
mov
mov
xor
ja
mov
mov
enter
inc
xchg
insb
mov
js
insb
inc
jl
jl
sbb
or
cmpl
int3
les
outsb
in
mov
pusha
xor
sti
cmp
and
cwtl
push
xor
imul
jbe
ds
xchg
jl
mov
out
js
cmc
jbe
mov
inc
sarl
jbe
or
xlat
xor
pop
mov
push
inc
das
cmpl
xor
jne
inc
lock
inc
sub
call
sub
adc
xchg
jle
mov
inc
aas
in
pop
dec
xor
pusha
dec
cli
xchg
in
dec
fstpt
mov
push
lock
push
mov
inc
adc
fs
pop
push
mov
cmp
add
mov
xchg
mov
cmp
int
sub
inc
mov
rcl
cmpb
jae
dec
xor
adc
inc
outsb
test
jp
jge
push
dec
dec
push
pop
adc
test
xor
push
lock
mov
test
cs
imul
xchg
ss
fmuls
cmp
inc
sbb
fdivrs
xchg
movsb
mov
sub
cltd
fidivrs
fidivrs
pop
cmp
cmp
pop
mov
movb
test
inc
sarb
fdivrs
mov
rorb
mov
imul
mov
inc
push
ja
mov
icebp
jnp
and
outsl
test
push
addr16
or
jl
xor
mov
lret
rcll
xor
mov
test
mov
cld
push
lret
inc
ficomps
cmp
xor
loop
cmpl
cmc
shlb
cwtl
dec
ljmp
cmp
mov
aam
xor
xor
test
outsb
mov
movsb
xor
add
cmp
adc
jns
mov
xor
fdivrs
rcl
xor
jo
jo
in
daa
outsb
xor
fisttpll
rcrb
lahf
and
mov
arpl
mov
aas
xchg
int
jbe
dec
int
imul
mov
pusha
cmp
xchg
xchg
push
add
xchg
dec
inc
add
jo
les
jbe
pop
rcrb
sub
sbb
cld
mov
or
sub
add
fdivl
inc
cmc
xchg
cmp
pusha
ljmp
imul
xchg
xlat
push
dec
jge
jle
in
shll
jo
mov
outsb
int3
push
stos
lahf
mov
inc
cwtl
aas
hlt
nop
nop
movsb
dec
test
test
inc
xor
in
mov
enter
jl
inc
and
xor
sbb
aas
outsb
dec
xor
mov
shlb
outsb
sbb
pushf
mov
jo
xchg
incb
out
sti
call
push
or
fs
xor
cld
jo
jl
pop
cmp
inc
orl
rcrb
aas
xor
out
mov
test
je
nop
jo
pop
cmpb
jl
insb
andl
push
test
test
jno
gs
push
dec
inc
outsb
mov
inc
xor
in
testl
pusha
pusha
push
cmp
inc
pushf
jo
daa
xchg
out
andb
out
movsb
in
outsl
fisubrs
ss
mov
pop
xor
lds
jo
cmp
stos
int
lods
xor
mov
xchg
mov
jno
pop
cwtl
aaa
or
push
jb
lea
bound
mov
mov
cld
dec
jg
adc
cmp
jae
pop
dec
sub
push
addr16
adc
ss
lret
divb
jae
push
sarb
mov
lock
xor
xchg
mov
sahf
push
jge
movsl
mov
lods
jle
jl
andb
push
jno
das
dec
arpl
cwtl
push
push
inc
outsb
xchg
dec
jnp
inc
dec
mov
mov
sbb
mov
dec
add
cli
dec
std
in
pusha
adc
or
int3
aaa
into
jle
fistpll
lock
sbb
cmp
mov
mov
inc
mov
mov
lds
aaa
mov
mov
mov
dec
dec
pusha
dec
sbb
jle
sub
pop
bound
lods
sbb
adc
mov
mov
push
dec
out
fisubs
aas
or
mov
xor
cmp
sub
inc
cmp
jecxz
cmp
sahf
test
jge
inc
cmp
mov
dec
mov
fmul
inc
cmpsl
mov
outsb
add
xchg
push
jo
jg
push
outsb
inc
push
push
inc
outsl
imul
sti
sbb
jae
popa
addr16
inc
fcmovbe
inc
outsb
movsb
dec
cmp
ret
cmp
pusha
mov
stos
hlt
hlt
jo
fs
mov
cmp
je
int
xor
dec
mov
xchg
mov
mov
daa
divb
lahf
pop
adc
jmp
or
ja
lret
xor
outsb
push
pop
mov
dec
pop
push
cmp
jmp
daa
pop
jl
xor
aam
adc
cld
dec
lcall
jmp
adc
mov
mov
je
inc
ret
xchg
dec
pushf
cmp
outsb
les
fwait
jl
in
jo
pop
push
cmp
daa
xor
aas
pop
mov
outsb
dec
fs
jecxz
jo
dec
ss
and
mov
dec
and
je
mov
add
cld
xor
jno
cmp
loope
mov
inc
fstpt
mov
mov
mov
inc
lds
cmc
lods
test
mov
fnstsw
dec
rep
lods
mov
lahf
inc
dec
aaa
cmp
mov
sbb
mov
repnz
test
inc
mov
scas
in
pusha
icebp
push
lahf
sub
insb
xchg
rolb
nop
shll
and
inc
sahf
pusha
fimull
and
pop
inc
cmp
mov
push
add
shlb
mov
je
xor
sub
mov
cmp
push
dec
iret
fnstcw
lds
mov
mov
xlat
test
in
shrl
xor
push
xchg
lock
mov
cmp
std
jle
iret
inc
test
int
inc
sub
inc
inc
cmc
ficomps
xor
lret
lret
out
js
xor
ret
inc
int3
dec
and
or
mov
xor
repnz
aaa
out
jl
inc
fstpt
int3
nop
arpl
popf
das
inc
jbe
inc
jp
jo
pop
jbe
outsb
jl
xchg
int
xor
fistps
int3
inc
outsb
jle
mov
int3
cmp
jo
hlt
mov
push
inc
dec
xchg
push
inc
jl
js
inc
inc
je
je
cmp
aas
push
sbb
mov
outsl
pop
mov
pusha
inc
sbb
cmpsl
gs
xor
cmp
cld
nop
imul
inc
pop
lret
nop
sub
movsb
mov
mov
hlt
cmp
lahf
mov
mov
std
pop
mov
lret
or
mov
rolb
jnp
xchg
add
pushf
cmp
dec
fsts
push
dec
cmp
ds
fcom
jl
aaa
cmp
rolb
adc
mov
and
xor
dec
popa
cmp
pop
pop
insb
mov
call
ljmp
dec
in
dec
mov
jp
xor
test
ret
jmp
mov
dec
jbe
test
xor
mov
fidivrs
ds
jle
inc
cmp
je
hlt
lret
jle
push
insb
add
gs
mov
cmpsb
fstpl
aas
pop
or
pop
ds
mov
std
xor
jp
mov
test
xor
outsb
out
hlt
shrl
push
fistpl
mov
pop
dec
int
xor
fs
test
inc
mov
push
jle
int3
push
lods
sbbl
jl
mov
cmp
sub
xor
enter
mov
push
pop
gs
inc
or
dec
xor
push
push
clc
pop
test
inc
fidivrs
test
pop
push
pop
adc
mov
mov
xchg
xchg
cmp
imul
inc
shll
pusha
add
jne
dec
inc
cmp
inc
dec
lods
hlt
cmp
idivl
pop
xchg
adc
fnstsw
mov
dec
ret
lods
xor
or
push
mov
jge
sub
jl
inc
mov
daa
outsb
aaa
aas
out
daa
out
cmp
jne
enter
dec
fcompl
push
fs
outsb
push
insb
push
inc
jo
les
xor
inc
cli
scas
pushf
enter
mov
outsb
pop
jle,pt
pop
scas
mov
push
leave
xor
ds
lea
mov
fwait
sti
mov
outsb
pushf
dec
xchg
mov
aaa
jnp
sbb
jb
cmp
cmp
lret
int3
fdivrs
mov
inc
inc
mov
cs
aam
aaa
and
cmp
outsb
and
inc
add
jbe
adc
lods
dec
in
push
mov
pop
inc
push
fcmovnbe
mov
fadds
aas
inc
in
cld
inc
dec
ret
aad
addr16
popa
and
dec
dec
dec
movsb
fcoml
ret
mov
push
mov
scas
test
jno
push
insb
loopne
jl
dec
fsubs
inc
test
mov
inc
add
inc
das
dec
fidivrs
cwtl
mov
pop
rcr
mov
aas
movsb
enter
cmp
lods
dec
data16
mov
notb
outsl
mov
call
sbb
pop
mov
push
mov
mov
test
jl
in
xor
outsb
dec
xor
fsubr
xor
push
shlb
push
js
mov
xor
jp
je
push
cmp
mov
jo
pusha
add
push
inc
xchg
int3
dec
dec
pop
mov
push
mov
dec
push
je
add
movsl
clc
xor
xor
insl
dec
pusha
or
cmp
jno
push
add
inc
int
insb
outsb
cmpsl
in
xor
xchg
int
xchg
cmp
fnsave
adc
jp
fmull
mov
push
movsl
inc
cmp
pusha
mov
cmp
push
in
xor
xor
jno
aas
ss
push
pop
push
mov
push
xor
xchg
push
push
ds
xor
mov
jbe
pop
cmp
aas
cli
xlat
dec
out
lods
pop
cmp
cmp
aas
outsb
scas
js
not
push
mov
mov
dec
das
or
xorl
aam
ja
fs
mov
mov
lock
dec
push
mov
xor
add
mov
jl
xor
dec
cmp
push
push
mov
pusha
je
xchg
cmp
icebp
push
in
ss
sub
lods
mov
cmp
xchg
adc
outsb
xchg
dec
fdivrl
push
cmc
push
sahf
clc
mov
cmp
fwait
popa
jmp
or
jge
or
jl
xor
das
xchg
cmp
adcb
dec
cmp
inc
imul
pop
push
xor
fidivl
dec
mov
sbb
xchg
and
push
aad
jp
inc
dec
push
pop
dec
cmp
insl
es
arpl
push
lds
je
je
inc
outsl
fildll
mov
int3
dec
lret
or
lods
cmp
add
je
dec
push
xor
jns
sub
dec
cmp
in
pusha
mov
inc
sbb
xchg
push
inc
jne
imul
imul
inc
imul
adc
push
jl
xor
jbe
mov
add
sub
dec
nop
aaa
cmpb
add
pushf
stc
out
icebp
lret
dec
les
repnz
pop
mov
int3
push
xchg
and
pusha
mov
or
or
mov
scas
hlt
mov
fsts
sahf
lock
cld
divb
out
sbb
or
mov
lea
jb
push
mov
jmp
and
jl
lea
repz
fildll
lds
or
out
enter
bound
std
cmp
mov
push
insb
pop
jmp
adc
test
mov
push
arpl
add
adc
and
stos
andb
sbb
xchg
lods
insl
add
mov
adc
sbb
mov
xlat
test
scas
outsl
ds
test
jmp
or
mov
in
out
jne
mov
inc
fnstsw
shl
sbb
leave
shrb
add
movzbl
mov
cmp
pushf
pushf
jmp
push
lea
call
bt
call
sti
mov
jmp
dec
lahf
repnz
popf
fsubrs
cld
test
in
push
adc
lods
insl
imul
adc
xchg
pop
xchg
scas
mov
pop
jp
mov
adc
pop
test
cltd
mov
stc
popf
adc
shlb
cmp
or
icebp
xor
out
fcomp
xorl
lea
mov
jne
push
dec
mov
xchg
cs
mov
or
loop
test
insb
pop
pop
mov
pop
sub
cwtl
int3
ljmp
cmpsl
mov
mov
insb
dec
sub
je
mov
mov
and
out
and
pop
jmp
mov
or
enter
adc
mov
fisubrs
push
dec
fisubs
xor
popf
stc
out
add
cltd
fisubl
mull
and
jae
aaa
stos
mov
divl
lea
insl
lret
adcb
xchg
xchg
jg
das
lret
xor
push
pop
aad
or
dec
jmp
les
xor
out
mov
push
pop
in
jmp
and
ds
lea
fisttpl
push
out
cld
mov
push
bound
sahf
push
xchg
pop
adc
cmc
negb
incb
lds
mov
adc
rcl
add
jp
sbbb
int
fnstcw
mov
hlt
lods
out
pop
push
sub
insb
fstps
add
and
sub
into
lds
cld
cmpsl
mov
cmp
and
inc
xchg
cmp
dec
push
xor
shrl
cmc
cs
test
shl
mov
rcl
adc
ljmp
mov
xchg
xor
jbe
add
push
rorl
mov
pop
xor
mov
sbb
mov
int
out
fldcw
sub
jo
sahf
push
pop
push
adcl
dec
cmp
mov
inc
leave
arpl
sub
cltd
mov
inc
jl
cmp
dec
adcl
lret
lea
hlt
das
je
mov
js
push
inc
bound
in
lea
ret
sbb
imul
xchg
clc
cmc
push
sbb
fisttps
mov
out
addr16
cli
sub
xchg
xor
mov
fwait
xorb
jecxz,pn
shrl
fs
adc
out
push
mov
pop
add
mov
fimull
mov
ja
int
jge
leave
stos
jns
xor
lock
out
pop
outsb
inc
imul
int
loopne
jle
outsb
inc
mov
std
andl
popa
pop
xor
push
insl
popa
adc
mov
pop
stos
jbe
aad
lret
dec
jb
or
jge
add
mov
mov
mov
lock
stc
ret
shll
dec
jle
into
mov
out
roll
pop
or
push
ret
pop
jmp
adc
arpl
aam
add
mov
cmc
xchg
push
jae
xchg
ss
xor
pop
ss
fisttpll
in
iret
pusha
inc
roll
pop
dec
in
push
sub
push
lcall
jns
mov
inc
jmp
dec
movb
lea
jne
shld
mov
pushf
cmp
pusha
push
lea
ja
push
not
lea
mov
pusha
setns
mov
xchg
pop
jmp
mov
dec
cwtl
cmpsl
sahf
push
rep
enter
gs
mov
pusha
xchg
mov
fists
pop
out
das
aad
cmp
sub
add
push
lock
rep
scas
push
in
jg
xor
icebp
std
insb
lcall
movsl
add
mov
aas
fldl
or
lock
jns
mov
jns
mov
pop
mov
mov
sbb
orl
fbstp
out
lea
sub
cwtl
mov
pushf
xor
movsl
xchg
pop
add
dec
and
mov
add
dec
cmp
enter
jns
rolb
enter
pop
ss
loopne
adc
and
outsb
jne
sti
rcrb
pushf
jae
or
fimuls
int
icebp
pushf
insl
aaa
pop
mov
gs
cltd
xchg
pop
and
fs
add
addr16
gs
popa
insb
jne
inc
js
add
push
lock
clc
mov
cmpsl
into
push
cmc
xor
push
sub
add
nop
mov
add
mov
inc
aam
cltd
xor
xchg
sahf
sbb
sbb
je
andl
mov
pop
add
lahf
clc
imul
mov
shll
rorl
js
dec
stc
sbb
sub
inc
xchg
dec
jb
subl
mov
pop
in
fwait
and
mov
repnz
es
pusha
push
sub
movb
clc
neg
pushf
cmc
stc
cmp
not
not
call
mov
not
bswap
mov
movsbw
mov
jmp
cmp
cs
jb
add
cmp
jne
cmp
jno
dec
std
xor
mov
cmc
dec
push
cmp
lock
inc
xor
aas
dec
aaa
dec
scas
pop
mov
inc
jl
xor
decl
push
das
je
int
das
into
pushf
das
js
das
fcmovu
das
roll
xor
mov
cmp
add
add
jp
mov
push
lret
mov
inc
test
movsl
dec
insl
or
mov
xchg
nop
sub
mov
out
sub
mov
add
sub
les
into
sub
fldcw
mov
dec
and
pop
pop
cmp
sub
sub
das
outsb
in
inc
add
dec
cmp
orl
push
cmp
push
cmp
pop
cmp
js
imul
insl
dec
outsl
in
or
subb
subb
subl
test
add
rorl
pop
mov
stos
das
add
das
insl
cwtl
das
push
fwait
das
je
xor
mov
mov
sub
xor
xor
xor
dec
mov
stos
mov
into
shlb
ret
lds
lahf
xor
aaa
xor
std
fildll
xor
std
xor
aaa
xchg
es
sub
fcmovne
faddl
cs
lods
insl
ds
push
cli
mov
mov
cs
cmp
inc
inc
cmp
dec
cmp
cs
mov
dec
jg
jbe
sub
insl
mov
xor
inc
xor
sub
out
in
jo
lea
jns
dec
lcall
push
jg
jne
jns
mov
icebp
or
das
in
es
xor
mov
in
mov
jno
mov
pop
pop
cs
movsl
xchg
movsb
imul
xchg
pop
outsb
int3
jne
pusha
arpl
mov
sahf
cltd
lods
inc
sti
add
push
lock
call
in
loope
sbb
or
imul
clc
xor
in
in
sti
or
out
adc
out
cmp
xor
add
sbb
out
sub
hlt
cmp
pop
call
aad
adc
out
dec
stc
push
fisttps
dec
jp
cli
pop
sbb
in
or
jbe
mov
aam
pop
lods
adc
or
jl
dec
push
inc
pop
hlt
adc
imul
mov
daa
xor
sbb
lods
fs
sub
sbb
call
add
aaa
in
lock
mov
pushaw
pop
sub
les
dec
jmp
push
imul
push
push
push
jle
int3
dec
stc
iret
and
sarb
jg
ds
cmc
add
jl
pop
out
jmp
push
add
dec
out
repz
lock
into
cli
pop
xor
std
xor
inc
aaa
push
fisubrs
inc
loop
aam
nop
sbb
push
add
movsb
dec
push
push
cmp
cli
mov
jno
cmp
xchg
xchg
lahf
dec
lea
mov
in
imul
add
jecxz
fisubrl
xchg
aas
adc
sbb
jbe
sub
cwtl
inc
mov
test
sahf
xchg
repnz
lahf
mov
push
pop
test
lahf
dec
xchg
mov
sub
jne
jl
pushf
mov
fiaddl
outsl
loop
sbb
data16
lea
dec
jle
pop
cmp
mov
xor
dec
enter
pop
pop
sbbl
js
movsl
cmp
dec
insl
push
clc
bound
addl
nop
cwtl
fs
jnp
fcompl
outsl
xor
cltd
mov
push
stc
movsb
movsl
sbb
xchg
push
xchg
ss
lods
js
or
dec
shll
std
shrb
lea
add
adc
jl
jnp
insb
inc
xor
mov
jg
aaa
inc
dec
cs
fcoml
jo
xor
jl
scas
xchg
enter
test
scas
jge
aas
cmp
inc
ljmp
xor
mov
cmp
nop
mov
cmp
mov
mov
and
insl
sub
dec
or
je
mov
insl
and
xchg
dec
mov
cmp
adcb
mov
xchg
std
mov
push
lahf
pop
scas
ss
lock
add
lahf
mov
mov
mov
ret
mov
push
mov
pop
lcall
xchg
fsubrs
rcrb
daa
je
aaa
in
outsb
pop
adc
and
pusha
pop
pop
lcall
push
xlat
pop
into
dec
adc
js
insl
test
push
inc
xchg
dec
int
lahf
neg
insb
aaa
mov
xor
jns
xor
cmp
sbb
test
insl
pushf
aam
mov
addl
inc
dec
and
orb
inc
cmp
mov
cli
mov
xor
xchg
mov
jae
jae
jno
mov
sahf
mov
shlb
je
inc
pushf
sbb
outsb
dec
mov
xor
jl
dec
les
jae
insb
hlt
xor
mov
dec
xchg
dec
cmp
jo
test
inc
sbb
aaa
inc
mov
pop
inc
mov
and
push
or
hlt
dec
in
jo
aam
les
mov
mov
xorb
pop
push
push
je
mov
sub
or
jle
add
gs
inc
sahf
sbbb
mov
fs
xchg
rcrl
test
mov
into
ja
cmp
jne
inc
pushf
jbe
jno
test
inc
fdiv
imul
fwait
sbb
movsl
dec
fs
jno
xchg
mov
xchg
inc
xchg
add
aaa
vpcmpeqb
push
mov
lds
jae
ss
jo
xlat
fimuls
test
ds
xor
or
adc
out
xchg
jne
cltd
nop
aaa
xor
fwait
mov
mov
aas
pop
pusha
shlb
clc
sbb
jl
std
pop
roll
iret
adc
shlb
aaa
jp
sbb
push
sarb
sub
aaa
jnp
jge
int
jp
jns
push
add
jmp
leave
push
daa
je
jge
push
mov
jecxz
insl
push
test
lret
jno
xor
jnp
jle
dec
xchg
movsb
pushf
cmp
das
push
sbb
xlat
outsb
insb
sbbb
cwtl
xchg
mov
insl
push
xchg
vmovmskps
subb
jne
mov
jae
mov
gs
pop
push
addr16
xorl
subl
cmc
mov
or
aam
adc
pop
pop
adcb
cmp
js
xor
mov
popa
call
daa
jne
xor
outsb
and
mov
jae
dec
jg
push
rorb
jne
pop
js
inc
rorb
or
inc
push
hlt
sub
xchg
shlb
push
lahf
outsb
pop
dec
mov
jns
cmpsb
xor
adcb
outsl
outsb
dec
cmp
jb
mov
test
lret
dec
jle
cmp
dec
xchg
xchg
pushf
test
aaa
xor
xor
pop
dec
outsl
dec
mov
aam
xor
dec
cmp
test
test
lahf
notb
mov
mov
lcall
out
add
aaa
adc
out
sahf
nop
insl
jne
adc
js
loopne
mov
lea
addl
cmp
out
jns
and
mov
cmc
cmp
mov
ret
popa
into
inc
lea
jb
jl
xchg
sbb
inc
and
outsl
cmp
dec
insl
and
nop
in
shll
mov
aas
jne
int3
or
cli
inc
and
aaa
aaa
orb
push
bound
inc
data16
push
jb
std
cmp
mov
popf
inc
test
mov
mov
bound
cwtl
dec
xor
adc
pusha
aaa
gs
xor
xor
sbb
fadd
lret
add
dec
rclb
cmp
out
fwait
mov
test
cmp
mov
int
cmp
mov
jns
push
int
push
sbb
cmpsb
xchg
cmpsl
or
movsb
dec
add
push
fsubs
shll
cwtl
lea
pop
push
xchg
movsl
xlat
xor
aas
cmp
les
stos
movsb
pusha
inc
push
imul
or
jo
xorb
xchg
sub
xor
roll
inc
pushf
cmp
jnp
aaa
jge
push
shlb
xchg
daa
popf
xchg
iret
aaa
or
std
mov
movsl
iret
aaa
push
fsubs
and
cmp
lds
pop
xor
push
scas
pop
or
xor
push
xchg
gs
mov
mov
xchg
hlt
xchg
or
sub
jns
movsl
ret
inc
mov
movsb
aad
nop
and
mov
nop
into
cli
dec
shlb
cmp
scas
je
imulb
xchg
mov
lcall
inc
mov
aaa
xchg
lea
lret
cmc
pop
int3
adc
cltd
dec
loop
mov
mov
js
mov
mov
dec
dec
mov
mov
dec
cmp
aaa
enter
inc
lds
ja
test
shlb
outsb
and
adc
loop
cmpsb
cmc
dec
xchg
sub
cmp
arpl
mov
inc
lock
mov
test
cmp
idiv
cmpsl
fcom
xor
push
lea
test
aam
fs
movsl
nop
inc
cmp
mov
adc
insl
inc
mov
movsb
xor
xchg
out
lret
inc
xchg
mov
cmp
dec
xchg
sbbl
pop
test
rclb
push
outsb
cmp
xchg
push
aaa
sub
or
jle
push
xchg
xor
mov
js
mov
cmp
jle
cld
iret
cmp
mov
jno
arpl
insl
aaa
inc
sub
push
xchg
cwtl
or
aaa
jns
je
sarb
cmp
popa
repz
je
dec
lea
dec
mov
aaa
shll
cmovb
sub
lahf
mov
loope
pusha
and
push
jp
add
xchg
inc
or
aaa
loopne
add
ds
push
push
or
hlt
movsl
mov
aas
push
xchg
das
sbb
mov
popf
pop
sbb
inc
lea
jbe
nop
mov
xchg
xor
jb
jb
ds
lcall
scas
rclb
jle
nop
rorb
push
sbb
xchg
jle
test
adcb
cmp
je
out
sarb
outsb
mov
jge
fildl
fstpl
inc
xor
mov
xor
testb
pop
cmp
mov
sbb
cwtl
das
mov
js
fsubl
out
xchg
cmp
dec
or
xchg
enter
mov
movsl
cmc
sti
push
movsb
mov
sahf
xor
xor
test
pushf
scas
roll
jb
xchg
bound
popa
pusha
mov
ds
push
pop
popf
mov
xchg
xchg
jb
cmp
mov
push
insl
sti
dec
cwtl
clc
dec
out
xor
mov
jne
outsl
outsb
rclb
scas
ret
add
enter
xchg
push
mov
xor
nop
sub
jl
loopne
adc
mov
sbb
jno
xor
leave
adc
xchg
lahf
and
aaa
jp
jne
rorb
jae
ja
xor
push
inc
adc
aam
push
cmp
xor
loopne
inc
xchg
cld
popa
pop
xchg
movsb
shlb
jecxz
pop
inc
popf
cltd
aam
dec
cmpsl
shlb
add
sarb
cmp
push
dec
insl
fsubl
popa
push
jno
jl
inc
or
jne
cmp
pop
fidivrs
mov
mov
push
dec
test
pop
mov
xchg
push
pop
inc
push
sbb
adc
push
lods
pop
jo
mov
mov
ret
pop
cmpb
gs
jge
dec
dec
mov
sarl
test
pusha
call
fstps
dec
outsl
cmp
xor
mov
pop
lds
lret
jbe
push
add
push
das
int
jae
icebp
pop
cmp
mov
inc
jne
mov
shl
dec
pop
ret
jb
popf
rolb
mov
xchg
mov
jb
icebp
pop
pop
push
jns
outsl
outsl
ja
popa
faddl
push
pop
lds
xchg
dec
js
pop
push
pop
jmp
jns
lea
jl
pusha
adc
je
pop
out
push
mov
mov
dec
divl
pushf
out
movsb
or
mov
inc
cmp
sub
mov
mov
or
inc
cmp
addr16
cmp
mov
fwait
ret
push
pop
inc
cmp
push
jb
mov
or
pop
jns
fsubl
ss
jo
jo
push
cmc
popf
push
int
aad
sbb
add
ds
xchg
lds
dec
lods
fwait
dec
test
pushf
filds
cmc
jo
add
add
cmpsl
xchg
dec
adc
aaa
shll
mov
cltd
int3
jmp
pushf
pop
jge
dec
fdivs
mov
je
push
icebp
dec
pop
adc
mov
fucom
inc
xor
dec
xchg
jbe
rcrb
mov
aam
sub
jo
imul
cwtl
pop
xor
out
mov
pusha
adc
xchg
sbb
out
popf
mov
aaa
mov
sahf
sbb
xchg
mov
aaa
jnp
fstpt
fldenv
inc
adc
nop
mov
lret
into
enter
push
movsl
divl
lock
mov
sti
dec
fs
xchg
je
xchg
decb
ja
push
pop
mov
sbb
mov
int
lcall
jae
cmp
insl
or
icebp
test
hlt
pop
xchg
js
out
gs
int
nop
push
mov
ljmp
imul
lcall
ret
das
or
sub
mov
in
outsb
jnp
jo
jno
fsubrl
insl
outsl
ja
or
cmpl
outsl
aas
aas
iret
inc
cmp
dec
addb
shrl
xor
sbb
xor
stos
aas
xor
adc
aaa
js
pop
sub
jle
pop
outsb
pop
jno
xchg
cmp
jne
push
jp
xor
sub
js
jbe
sub
cmp
xchg
test
xchg
cwtl
dec
dec
mov
pusha
fs
inc
dec
xor
dec
push
pop
lret
je
loopne
mov
mov
cmp
push
mov
test
sub
pop
shrb
es
cmpl
cmpb
jle
lahf
dec
jl
inc
jg
cmp
jp
outsb
cwtl
js
insb
adcb
dec
jno
jnp,pt
jp
dec
inc
cmpl
push
inc
xchg
mov
lds
push
cld
mov
nop
shll
push
inc
jno
out
jl
lods
outsl
shr
hlt
inc
cmpb
cmp
inc
shrb
inc
inc
xchg
push
inc
jbe
sti
jp
and
sbb
mov
adc
cmpb
pop
pop
mov
sub
or
mov
jg
sub
aaa
xchg
rcll
popf
fdiv
push
mov
std
in
xchg
dec
dec
xor
inc
push
test
jo
rcrb
jne
je
fisttpll
ds
in
arpl
inc
mov
test
jbe
xchg
mov
dec
push
jbe
jle
jl
inc
mov
xlat
mov
push
hlt
inc
adc
repz
std
gs
mov
test
mov
jae
adcl
cmp
lea
enter
je
adc
xor
sbbb
pop
inc
inc
push
std
inc
mov
add
lret
inc
shll
je
hlt
or
cmpsl
fs
xor
fdivs
dec
hlt
les
ftst
adc
or
mov
dec
add
xor
ss
jg
rclb
xchg
icebp
jl
mov
sub
jmp
dec
push
test
mov
fistpl
mov
xchg
iret
je
adc
pop
int
dec
lods
dec
out
lahf
outsb
sub
stos
sbb
cmp
je
dec
jle
add
xchg
xor
cmpb
loope
mov
push
stc
inc
mov
movsb
inc
pop
mov
popa
xchg
jnp
inc
je
jle
inc
mov
mov
jo
inc
pop
cmp
jl
cmp
js
inc
jb
outsl
cmp
mov
sub
outsl
iret
inc
int
je
cmpsb
push
or
mov
pushf
mov
dec
adc
sbb
out
inc
in
and
daa
mov
pushf
mov
sbb
out
push
dec
mov
insl
adcl
bnd
sbb
jbe
lret
inc
pop
sbb
iret
dec
pop
and
jmp
adc
jmp
sbb
dec
pusha
lahf
outsb
int
loopne
pop
das
ss
imul
lahf
mov
add
jle
and
popa
sbb
pop
mov
test
out
dec
push
sahf
clc
mov
xor
shrb
mov
and
int3
mov
mov
push
cmp
jnp
lcall
js
dec
xchg
adcb
add
sub
aam
outsb
pusha
push
aaa
add
rcll
push
sub
mov
inc
orb
les
pop
mov
mov
mov
hlt
lahf
pop
inc
jo
mov
xor
mov
mov
repz
jecxz
cli
jle
pop
or
dec
xchg
sahf
jp
dec
sub
fcomp
xchg
fdivl
sub
dec
xorl
iret
push
pop
hlt
xchg
loopne
or
lahf
pop
dec
pop
inc
dec
push
push
inc
jl
insl
test
mov
insl
scas
lret
movsl
pushf
call
xchg
out
pushl
inc
jge
jecxz
ret
aad
mov
mov
mov
push
int3
faddp
clc
cmp
jp
add
mov
bound
inc
push
cli
xchg
out
cltd
mov
lcall
outsb
xchg
cltd
stos
idivl
lahf
adc
mov
lahf
pop
or
mov
shrb
fidivs
push
jmp
fstpl
lcall
jl
rcl
dec
cmc
jne
cmp
outsb
and
xor
mov
fisttpl
sub
push
sbbl
jg
push
jle
dec
into
outsl
ret
inc
in
cltd
nop
addb
xchg
xorb
call
jb
shr
cmp
push
jno
pop
adc
fdivrl
jo
fisubrs
jecxz
je
psllw
outsb
ret
pusha
dec
or
jne
cwtl
add
jno
aam
cmp
push
and
inc
in
popf
jnp
icebp
insl
and
xchg
fs
add
dec
hlt
dec
sub
push
mov
or
dec
xchg
jb
inc
xchg
lret
jg
jp
push
jbe
int
jnp
pushf
mov
and
bound
push
inc
aam
dec
adc
fisubrs
jp
dec
inc
cmp
movsb
sbb
lret
xchg
inc
jae
xor
add
scas
arpl
pusha
movsl
cli
cmp
jl
sbb
inc
popa
jg
pushf
mov
cltd
xor
je
out
fnstenv
in
sub
dec
hlt
xchg
or
jmp
mov
lds
je
sbbb
loope
or
adc
cmp
and
cmc
mov
cmpsb
fs
push
imul
fimuls
enter
mov
pop
dec
adc
ja
loope
iret
inc
push
xchg
push
mov
cmpb
rolb
outsl
inc
or
hlt
xor
jmp
rcll
push
mov
adc
lcall
sahf
ss
cmp
movsl
jp
xchg
faddl
jle
dec
mov
or
jl
sub
lcall
mov
imul
pop
sub
xchg
xchg
jg
imul
xlat
mov
dec
ret
fmull
jns
jl
cmp
jo
pop
jno
repz
adcl
mov
outsb
dec
mov
pop
outsb
jbe
clc
icebp
jno
int3
jae
mov
outsl
hlt
xchg
pusha
ficoms
mov
jl
pusha
sbb
mov
test
push
push
test
lods
dec
mov
xchg
ret
test
cltd
mov
lahf
fs
hlt
and
mov
mov
sarb
into
out
push
jg
lods
xor
aaa
dec
xor
cmp
sub
mov
jae
add
repnz
ss
add
aam
in
add
fsubrs
mov
add
js
mov
xchg
movsb
es
adc
push
out
and
imul
dec
stos
pop
xchg
xor
mov
ds
dec
cmp
jp
cltd
jne
loope
aam
mov
aad
inc
xchg
push
mov
jg
xchg
popf
mov
pop
popf
mov
and
shl
ret
out
xlat
inc
dec
mov
imul
jns
cwtl
loopne
popa
shrl
outsb
shlb
xchg
dec
ss
or
fstl
fistps
adc
ss
outsb
dec
fsubrl
lahf
jg
push
ret
mov
cltd
or
dec
xor
inc
loope
in
sub
les
lahf
cmp
inc
ljmp
inc
shlb
shlb
cmp
dec
sbb
fwait
lahf
sarl
lea
insb
sarb
rcll
lods
sub
das
jno
in
rcrb
insl
mov
inc
rorb
shlb
dec
int
sub
cmp
stos
outsl
lods
pop
aam
in
iret
push
adc
sub
lods
sub
xchg
insb
pop
xor
ret
pop
nop
insl
sahf
loop
sti
into
adc
inc
in
adc
cld
mov
jge
xor
mov
addr16
mov
dec
pop
pushf
incl
or
scas
mov
dec
out
insl
dec
dec
mov
jo
aaa
mov
inc
xor
adc
cld
mov
ds
push
call
dec
fdivl
aam
sarb
int3
push
enter
rorb
lods
movsb
mov
js
xchg
mov
test
je
mov
push
push
mov
xor
imul
dec
inc
jg
das
push
xor
xor
mov
ds
xor
xor
xor
xor
jg
push
test
inc
dec
cmp
inc
dec
mov
insl
mov
xchg
jle
inc
jg
xor
test
cwtl
inc
push
cltd
lahf
pop
inc
pushf
xor
ds
in
xor
lods
jg
xor
dec
mov
nop
mov
cmp
int
adc
pop
pushf
shll
mov
cli
rorb
push
inc
inc
ret
insb
mov
jo
inc
sub
xor
dec
testb
adc
aaa
dec
mov
dec
ret
mov
push
mov
mov
mov
movsb
mov
stc
stos
fcoms
rorb
mov
or
dec
addr16
in
push
mov
sarb
xchg
fs
inc
cmp
push
fdivs
mov
dec
mov
movsb
push
das
je
mov
out
cmp
sub
inc
push
jno
das
out
cld
int
inc
adc
test
sbb
add
dec
or
out
cmp
das
jne
cmp
idivb
add
sub
cmp
sub
cwtl
repz
mov
and
inc
mov
xor
icebp
jae
das
sub
push
fwait
cld
cmp
mov
std
dec
into
lods
ret
sub
cmp
sub
push
sbb
mov
inc
dec
jo
jb
dec
push
push
cmp
aas
mov
dec
cmp
aaa
je
mov
sub
jo
and
je,pt
mov
jae
aaa
lds
dec
ss
or
inc
jo
dec
mov
ds
push
lock
mov
loopne
mov
ds
push
shlb
int3
dec
dec
jo
push
mov
inc
dec
sub
stos
out
inc
and
mov
mov
cmp
inc
xchg
pop
pop
test
lods
xchg
popa
out
xchg
dec
into
push
imul
sbb
xor
mov
lods
sbb
popa
pushf
mov
nop
jl
cmpb
jl
fldt
hlt
mov
xorl
cmp
inc
push
dec
push
sub
iret
pusha
cmp
mov
call
je
mov
cwtl
push
in
and
ret
shrb
jl
test
mov
inc
xor
add
cmp
testb
das
jne
and
cld
lea
int3
sub
hlt
xor
xor
enter
jl
cmp
push
and
int3
lods
ret
inc
lods
dec
call
das
jmp
inc
mov
clc
cmpsl
cli
dec
out
jp
dec
sbb
loope
push
xor
fyl2x
leave
xchg
in
cld
mov
push
sub
inc
mov
sbb
ret
shrl
mov
cmp
lods
ds
and
add
sti
sub
movsb
ljmp
adc
cmp
xchg
adcl
or
outsb
sbb
mov
daa
pop
stos
jge
outsl
int
mov
cmp
lods
push
jo
cmp
dec
and
outsl
psllw
es
roll
popw
and
jno
fdivrl
mov
inc
bswap
push
cmp
mov
mov
test
sarl
in
sbb
insl
adc
mov
mov
rcrb
sub
arpl
hlt
add
cmp
shll
push
jmp
hlt
cld
or
ret
dec
mov
jle
cmp
pusha
stc
clc
das
dec
sub
imul
pushf
cmp
and
xchg
mov
and
lcall
xchg
inc
push
test
std
sbb
dec
mov
inc
dec
fdiv
rcrl
and
cmp
loop
cwtl
jmp
cmp
call
cmp
jmp
adc
lea
xlat
adc
cs
in
jg
mov
mov
xchg
out
xor
dec
stos
lods
push
dec
repnz
call
lea
test
stos
fnstsw
test
out
lods
add
pop
mov
mov
daa
jo
je
rcll
stos
aam
sbb
fdivrs
int
call
or
subl
subb
scas
sub
inc
cmp
in
fsubrs
dec
mov
fs
jae
in
sub
add
mov
xor
xor
mov
cs
repnz
outsb
cmp
loop
mov
xor
dec
decb
pop
sbb
cmp
in
addl
shrl
push
xchg
fidivrs
jo
jecxz
pop
cmp
adc
pusha
jnp
dec
xchg
in
mov
or
out
test
lret
mov
cmpl
dec
inc
jp
xchg
mov
or
xor
test
lret
cli
hlt
das
or
add
adc
daa
hlt
jne
add
and
fs
pushf
cwtl
xchg
cmp
xchg
fwait
dec
sub
and
sbbb
push
mov
push
mov
dec
lahf
cmp
pcmpeqb
and
xor
xor
std
jnp
outsl
xor
int
test
xor
mulb
xlat
cltd
and
xchg
sbb
mov
xor
ja
jle
mov
xorl
jo
add
mov
add
xchg
scas
lcall
or
stos
pop
inc
std
cmp
xchg
lds
jmp
aad
cmpb
insl
mulb
arpl
mov
or
or
inc
jne
flds
sbb
out
popl
lret
hlt
mov
sbb
scas
jno
adc
out
jp
imul
sbb
addb
pop
dec
lret
mov
push
rclb
lahf
aam
sbb
in
ja
js
or
aaa
arpl
dec
dec
jle
cmp
add
mov
jmp
sub
xor
lea
ds
sbb
xlat
cmc
lods
into
add
ret
sub
insb
push
ds
stos
fwait
add
incb
or
lods
stos
iret
sbb
fistpll
out
pushf
dec
adc
or
lods
and
inc
cmp
pop
pop
dec
lret
inc
and
bound
stc
lock
fistps
xor
out
cmp
xor
out
jnp
mov
ja
xor
cmpsl
out
rcll
sbb
jbe
cmp
ja
push
shll
rcll
rorb
and
loope
jae
cwtl
fsts
jp
aam
movsl
test
std
ss
pop
or
jge
flds
mov
sbb
push
pop
push
mov
rcl
add
mov
xor
popl
daa
and
test
cmp
pop
movsb
out
ficoml
outsb
das
arpl
push
pop
dec
or
adc
fimull
daa
not
jmp
xchg
mov
ss
int
cltd
add
cmp
dec
rcrb
movsb
outsb
push
icebp
sbb
xor
stc
inc
sub
jp
enter
push
sbb
imul
call
gs
lea
jmp
movsb
add
xor
and
fstpl
xor
enter
pop
lods
dec
xlat
shrl
add
and
fldenv
cmc
add
cmp
cli
sbb
leave
sbb
xchg
aam
pop
in
xor
movsb
cmc
jp
add
xor
xor
pushf
rorl
xor
add
sbb
mov
stos
jg
setl
stos
push
cmp
out
pop
sbb
or
daa
inc
gs
pop
sti
push
pop
icebp
sub
fcmove
xchg
xor
enter
shll
ficomps
jbe,pn
ficomps
mov
adc
or
aad
xor
pop
adc
lcall
test
pop
idiv
btr
mov
test
push
cmp
pushf
add
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
not
lea
pusha
cmpsl
adc
xchg
bound
adc
pushf
pop
fsubrs
enter
je
jmp
mov
cmp
sarb
clc
xchg
fiaddl
and
mov
lahf
loope
dec
dec
sub
jmp
loop
or
shl
fistpll
or
jecxz
push
sbb
into
push
repnz
test
sbb
cmc
je
daa
cmp
xchg
pop
cltd
mov
call
pushf
jmp
scas
in
rorb
int3
pushf
insb
adc
test
loope
xchg
lds
popf
mov
test
inc
idivl
inc
popf
mov
cmc
in
and
add
mov
shrb
sub
mov
mov
into
dec
fwait
add
xchg
xor
stc
push
roll
push
imul
xor
adcl
sbb
sbb
cmp
cmpsl
xchg
and
lods
xchg
xor
lods
dec
cmp
xchg
nop
fldt
addr16
and
je
cmc
push
cmc
sub
sub
jbe
pushf
cmp
movl
movl
lea
ja
jbe
cmc
bt
imul
test
stc
add
pushf
push
pushf
pushl
lea
jmp
enter
lea
xor
adc
xchg
lods
hlt
mov
mov
sahf
movsb
std
mov
mov
subb
adc
lcall
in
and
into
mov
movsb
in
out
out
xor
loopne
mov
xchg
dec
pop
pop
or
lods
es
inc
ret
mov
outsl
xor
mov
jl
das
sub
inc
push
push
not
pushf
pushl
jmp
pushf
push
lea
ja
clc
clc
push
imul
cmc
jmp
inc
ss
loop
cmp
lea
cmp
cltd
mov
cwtl
cs
sbb
sub
inc
xchg
jle
dec
lcall
rcll
adc
mov
mov
fnstsw
push
cmp
iret
cld
into
cmp
aad
and
xchg
mov
in
add
stc
adc
js
and
and
popa
jp
mov
fldenv
bswap
jns
push
out
inc
aam
mov
mov
pop
jg
je
cmp
pop
lock
fstl
insb
clc
push
cmpsb
add
insb
scas
xor
insb
inc
mov
add
sub
pushl
pushl
popl
bt
test
jmp
lea
call
pusha
jmp
mov
mov
pushl
lea
call
call
xor
dec
fs
xor
sbb
ret
gs
jae
ja
call
lcall
mov
mov
sub
cltd
push
sahf
fs
add
outsl
xchg
jmp
adc
idivl
pop
and
xchg
xor
xchg
push
es
mov
adc
jo
adc
push
sbb
jno
mov
lods
jecxz
ret
push
stc
test
call
lea
jno
jae
jmp
dec
mov
popaw
insl
xor
sub
mov
clc
mov
jae
jp
daa
sbb
sbb
mov
or
xor
sub
ds
retw
cmc
leave
call
shlb
add
repz
push
mov
push
sbb
pop
push
movsb
idivb
mov
shl
in
and
bound
jle
xchg
inc
cmp
js
lret
out
popa
mov
ret
mov
and
jg
or
and
int3
adc
mov
cvtps2pd
orl
enter
in
imul
cmpsl
frstor
mov
sarl
mov
outsb
and
jmp
sub
js
test
and
sarb
jb
imul
fldl
xor
jb
lds
jns
dec
je
lds
ret
cmp
mov
xchg
in
outsb
push
push
aam
and
xchg
in
popf
or
in
sbb
aam
mov
sarl
sbb
testl
and
aas
adc
aad
lcall
in
cmc
dec
loope
in
pop
xor
sti
xlat
lea
inc
and
xchg
dec
cli
pop
js
cmp
fwait
in
pusha
inc
add
and
out
lahf
repz
push
xor
test
and
xchg
xorb
and
pop
push
outsb
mov
pop
jne
jbe
std
cwtl
and
aaa
ret
cmpsl
mov
shl
ss
mov
adc
xchg
push
pusha
add
add
in
jno
out
les
scas
pop
cmp
sbb
ss
sub
cltd
pop
inc
add
es
popa
mov
cmpsl
in
mov
cli
stos
or
std
push
out
xor
cwtl
fldcw
pusha
call
pushf
push
adc
pusha
lea
jae
pushf
call
test
pusha
jmp
mov
not
add
or
ror
mov
bt
test
mov
jmp
pusha
lea
jae
shld
shl
jmp
fcoms
dec
dec
inc
sbb
cmpl
push
jno
xchg
in
mov
mov
daa
pop
adc
lea
pop
lds
mov
push
call
adc
lret
and
dec
minps
arpl
mov
out
push
std
out
dec
lahf
shl
into
rorl
dec
jb
loope
call
sbb
fs
popf
popf
loopne
lea
jmp
lea
jne
lahf
movb
mov
jmp
scas
xchg
fmuls
out
mov
idivb
pop
test
in
adc
insl
adc
cmp
lods
or
mov
insb
push
pop
or
mov
aas
mov
jae
lods
mov
push
add
dec
mov
dec
test
jno
fs
call
bt
stc
cmp
pushf
cmp
pushl
call
cmp
pusha
clc
test
sub
pusha
pushl
popl
test
cmp
stc
clc
cmp
push
jmp
imul
cmc
add
movb
pushf
lea
jmp
dec
dec
inc
inc
push
push
xor
cs
insb
add
sub
sarb
js
jno
in
loopne
xor
sbb
pop
jne
stc
sub
repz
push
or
mov
je
popf
cmc
nop
inc
jno
add
sub
mov
aam
pop
jg
lahf
cld
sub
loopnew,pt
cli
leave
xor
rol
cmp
ja
adc
pop
lock
roll
mov
loopne
xchg
xor
ret
jg
cmp
sub
sub
ret
iret
mov
scas
rcll
repz
fdivrs
into
cmc
mov
repnz
mov
dec
dec
clc
pusha
jmp
movsl
out
fimull
push
jp
clc
iret
loopne
jmp
rclb
fsubr
lds
je
mov
and
mov
add
xor
mov
inc
xchg
in
cmpb
lock
repz
lahf
xor
stos
shr
lret
sbb
int
or
sub
out
lret
addb
xor
dec
out
cmp
test
xchg
dec
push
incl
adc
enter
mov
and
pushf
lea
jae
pushf
stc
bt
clc
xor
jmp
jge
lea
rolb
push
lds
ds
int
xchg
cmp
ret
es
pop
xlat
outsb
je
fimuls
pop
sub
pop
mov
sbb
push
mov
jge
push
pop
loop
out
pop
or
mov
pop
dec
push
stos
cld
xchg
out
out
lret
decb
add
jge
mov
xor
imul
mov
cld
call
push
data16
imul
enter
stc
sub
xor
ja
push
ret
mov
sbb
xor
inc
push
xchg
jmp
push
insl
dec
adc
sarl
ss
fisubs
jp
ds
push
rorb
addr16
push
aam
jne
push
rorl
adc
mov
pop
cmpsl
add
iret
jae
cmpsl
lret
leave
sbb
into
rol
dec
xchg
ss
sti
mov
pop
lahf
mov
inc
in
js
ret
xchg
pop
mov
in
fldcw
mov
dec
movsb
outsl
sub
daa
movsl
test
push
xchg
pusha
sbb
inc
push
sub
cmp
add
pop
xor
std
push
enter
mov
int
mov
dec
cmp
daa
push
jo
cmc
es
rolb
popa
orb
dec
vmovq
imul
cmp
inc
push
stos
push
xchg
push
shll
xor
adc
shll
adc
cmp
dec
sub
push
adc
mov
iret
or
xchg
cli
push
cwtl
add
or
add
mov
aad
ret
clc
mov
gs
jae
je
mov
pop
inc
je
and
std
mov
popf
dec
dec
insb
rorl
fstl
and
pop
shl
xchg
mov
mov
outsl
jmp
pop
adcb
pop
fsubs
loopne
mov
adc
jecxz
or
jecxz
lods
or
jno
adc
std
jne
sahf
pusha
lea
je
pusha
sub
call
dec
hlt
pushf
fisttpll
pop
push
and
fcoml
mov
lods
xchg
or
mov
push
jge
outsb
jns
adc
jecxz
mov
mov
in
fisttpl
aam
xor
push
inc
inc
flds
es
imul
jns
xlat
jae
sti
push
pop
mov
or
out
pop
out
cli
outsl
mov
aam
pop
into
cmp
mov
bound
fildll
inc
xlat
or
mov
or
data16
or
je
sbb
mov
push
lahf
mov
push
jne
std
cld
and
mov
sbb
mov
orb
cli
stc
call
lea
ja
call
movl
movb
jmp
fwait
push
cmp
lea
dec
fs
insl
cmp
mov
pushw
nop
outsb
jmp
rorb
imul
xchg
rcrb
mov
mov
es
mov
xor
or
dec
jge
jb
js
dec
jbe
dec
xchg
mov
mov
out
lret
call
add
int
or
aam
or
sbb
pusha
into
in
pop
mov
and
mov
rcr
and
jge
scas
es
fnstenv
mov
lea
adc
ret
add
cld
pop
or
out
mov
lea
xchg
pop
lock
call
fistpl
xchg
add
xchg
mov
pop
sbb
adc
addr16
dec
adc
push
sbb
mov
es
orps
mov
sub
jae
cld
cmp
or
sbb
cltd
jle
ja
in
lret
xor
in
insl
pop
mov
out
imul
pop
adc
dec
push
aaa
in
out
and
xlat
ret
cltd
cmp
or
cli
dec
cmp
test
aad
cmp
sub
lea
fidivrs
pop
push
xchg
inc
or
outsb
push
xchg
pop
jae
or
adc
in
loop
adc
ret
xchg
in
lds
push
int3
dec
stos
scas
adc
mov
icebp
xor
mov
divl
xchg
out
lahf
push
clc
fs
cltd
in
push
jae
push
shl
push
jae
and
add
out
inc
pop
mov
mov
aaa
push
outsb
aaa
mov
clc
push
cmpb
addr16
adc
test
lea
inc
adc
test
sub
cltd
nop
cli
sub
and
inc
or
outsl
push
adc
and
movl
lcall
and
or
push
into
pop
mov
ljmp
pop
adc
fwait
push
stos
into
mov
push
pop
mov
jl
rcl
wrmsr
je
setne
lock
cmp
jg
movsb
ss
lahf
test
outsb
pop
jle
pop
pop
add
push
jge,pn
lods
das
iret
mov
inc
ja
jmp
data16
out
ss
sub
push
jo
lret
sbb
and
mov
and
dec
scas
pop
out
je
xchg
mov
adc
sub
inc
sbb
les
adc
mov
adc
add
sbb
addr16
push
filds
pushf
dec
loopne
jmp
sar
cmp
mov
into
mov
insl
daa
sub
outsb
in
out
mov
jb
sbb
mov
pop
in
movsl
outsb
xchg
xchg
xor
push
lea
je
push
sub
pushl
stc
pushl
pusha
cmp
pushf
jmp
outsl
insb
gs
cs
insb
add
dec
mov
pop
adc
add
in
call
sahf
shl
scas
dec
adc
mov
cwtl
add
imull
ljmp
je
nop
mov
shrb
clc
scas
dec
fwait
incb
stos
cmp
mov
push
cmpsl
aad
loopne
and
movsb
xchg
je
adc
hlt
or
dec
fistps
loopne
stos
push
xlat
lods
fnstenv
mull
call
push
sbb
rorb
aad
fldt
dec
lcall
insl
outsb
je
jb
jo
jb
imul
movsl
ret
push
bswap
mov
stc
push
test
and
cmc
stc
cmp
add
lea
test
push
clc
clc
add
call
push
fbld
cld
push
xorl
dec
fwait
sbb
jp
in
xor
adc
scas
aaa
je
les
das
cmp
jno
das
mov
push
jnp
push
jnp
jb
xchg
xor
cmpsb
xor
sti
fistps
bound
xchg
inc
and
cmc
daa
ss
rcr
xchg
inc
adc
pusha
xchg
jb
call
mov
jge
leave
push
mov
cs
ret
jge
ret
xchg
sbb
xchg
jo
xor
jae
out
mov
mov
or
or
adc
out
cmpsl
push
fsubr
shlb
push
mov
aaa
cli
sub
in
xor
into
xor
xor
nop
pusha
rorl
add
and
lea
cmpsl
sub
sbb
adc
xchg
cli
lahf
dec
xchg
js
inc
bswap
push
cld
sbb
in
mov
lods
jo
push
dec
xchg
lods
fldt
pop
pushf
cmp
or
shl
idiv
aam
je
jle
xor
cmp
arpl
cmpb
test
add
push
jge
subb
out
adcl
aaa
add
stos
push
mov
lea
jmp
jmp
arpl
fs
xor
cs
insb
add
sub
aaa
movl
mov
popa
dec
in
in
push
cltd
mov
xchg
push
movsl
lcall
jnp
fisttpll
insb
push
push
cmpsb
mov
scas
es
dec
inc
loopne
add
xor
iret
sbb
dec
sbb
lock
loop
sub
out
arpl
dec
fmuls
xor
pop
xchg
div
repz
mov
repz
lahf
lcall
mov
inc
mov
mov
je
ret
dec
sub
jns
leave
fimuls
jmp
movsl
or
cwtl
pop
orl
mov
dec
pop
mov
push
jp
pusha
push
add
cmc
call
mov
xlat
movsb
lea
dec
cwtl
enter
movsl
ljmp
cmpb
ljmp
xchg
pop
jle
and
or
inc
popa
ret
fwait
lock
sbb
in
in
pop
cmp
addb
gs
pop
adc
push
ljmp
jecxz
call
pop
mov
pop
sub
pop
mov
push
push
jmp
and
sub
lahf
sahf
stos
adc
leave
pushl
cmp
cmp
movl
mov
push
lea
jae
xchg
jmp
inc
or
fisttpll
push
or
inc
je
pop
mov
fs
dec
mov
pop
push
xchg
push
or
pushf
je
sbb
sub
sbb
aaa
cs
xchg
pushf
sti
push
ja
xchg
dec
adc
cmpsl
in
or
sbb
inc
mov
jb
inc
mov
jnp
insb
dec
sub
add
add
adc
lret
push
mov
shrl
inc
cld
stos
lock
sub
mov
testl
daa
adc
mov
movsl
lea
mov
sbb
push
push
xor
int
addr16
jmp
inc
aas
and
mov
pop
xchg
mov
sarl
jl
jbe
es
cmp
sub
aaa
push
dec
fistps
sti
or
mov
or
sbb
fdiv
xchg
repnz
cmp
leave
and
lret
repnz
add
and
movsb
xor
push
mov
pushl
mov
pusha
mov
pusha
lea
jmp
push
mov
mov
adc
popf
pop
sti
jb
mov
call
js
into
enter
pop
fadds
loopne
or
sub
lds
lcall
stos
mov
xchg
std
mov
in
aaa
imull
cwtl
std
test
fisttpll
test
jno,pt
cmp
lods
leave
jmp
xor
imul
cmpsb
adc
xlat
movsb
adc
adc
call
cmp
sub
dec
test
inc
loop
sbb
adc
sub
xchg
cmp
xor
cmpsb
lea
mov
insl
std
movsl
cmp
sub
sbb
push
mov
loop
push
lods
repnz
mov
sbb
push
fistpl
fcompl
pop
fmuls
sbb
rcl
mov
jo
push
js
rsqrtps
and
jae
int
lea
imul
cmp
movb
add
pushf
push
pushf
lea
jmp
xchg
jge
push
mov
stos
stos
test
sub
call
inc
mov
add
cmp
push
mov
pop
jb
jns
mov
mov
mov
popa
jo
ds
push
outsb
fs
scas
pushf
into
xchg
push
dec
lock
les
xchg
sub
jae
test
dec
das
pop
shrb
dec
jo
cld
push
push
pop
inc
jnp
add
mov
jne
lea
mov
push
sub
add
rcr
movzbw
shld
lea
cmp
pusha
sub
stc
pushl
popl
clc
cmp
movw
mov
lea
ja
shl
clc
sub
test
sub
shld
or
add
pushf
rcr
lea
bswap
mov
test
mov
dec
mov
pushl
repnz
push
jmp
rcr
mov
pusha
xor
stc
movw
cmc
repnz
movb
jmp
bt
stc
imul
pusha
add
push
pushf
lea
jmp
shlb
test
dec
stc
or
aad
test
inc
sbb
ficoml
lret
jg
sbb
mov
adc
cmp
push
mov
and
je
loope
lret
push
lea
call
jns
ffree
dec
inc
outsb
imul
cmp
out
jp
shlb
addr16
cmp
xlat
push
nop
test
loope
rol
ja
aas
pushf
es
mov
movsb
pushf
in
mov
push
fmul
add
cmp
inc
xchg
repz
test
ret
add
mov
pushf
pusha
pusha
lea
jne
shrd
btr
aaa
xor
adc
inc
bts
mov
push
call
lea
ja
pusha
inc
pusha
seta
inc
test
ror
xchg
setno
aam
mov
and
mov
add
jnp
test
push
dec
sub
mov
cmp
cmc
clc
test
sub
push
push
pushl
pushl
rep
pushf
mov
mov
mov
movw
pushl
lea
jmp
rol
pusha
lea
call
cmp
cmp
call
cmp
lea
imul
mov
pop
mov
in
pop
xchg
mov
sub
ret
pop
pop
sbb
lods
add
or
pop
ds
mov
loopne
and
test
stc
mov
and
sbb
test
push
inc
scas
cmp
or
lret
faddl
out
push
sbb
jnp
in
adcl
cmp
mov
jle
push
sbb
xchg
out
xchg
or
outsl
add
test
adc
xor
das
lcall
inc
je
lea
pop
cmp
xlat
mov
adc
sub
sbb
mov
cld
je
rclb
sub
decb
lds
int
mov
imul
cmp
out
into
addb
std
je
pop
cmp
jne
pop
jnp
ja
push
ror
and
ret
and
inc
int
pushf
in
pop
fisttpll
xchg
pop
fdivrs
lret
cld
insl
fwait
insb
loop
mov
stos
scas
loopne
addl
lea
mov
fs
jne
cmp
mov
mov
data16
popa
mov
movsb
lea
lret
jns
lea
int
stos
lea
cs
cmp
ret
xchg
clc
jo,pn
jmp
enter
cmp
ljmp
dec
jne
lods
jns
out
and
stos
and
std
addr16
movsb
adc
pop
imul
stos
nop
or
cmpsl
jne
daa
int3
xchg
fnstsw
jne
rclb
inc
sub
jecxz
je
xchg
xor
push
fmulp
mov
in
add
push
fsubp
sarb
test
aad
insb
into
sub
sbb
xor
mov
jns
fwait
sub
sub
mov
cmp
xor
sbb
shl
je
lds
mov
or
outsb
sub
pop
pop
and
icebp
sbb
in
mov
xchg
loope
loope
subb
adc
sub
and
push
addb
in
pushf
fcmove
inc
lret
jne
add
aad
mov
xchg
sbb
lret
imul
rcll
jl
movsl
mov
decl
dec
popa
sbb
inc
adc
es
sbb
lea
in
test
call
xchg
push
insl
addb
in
push
or
mov
adc
cmpsb
jge
push
pop
adc
sbb
scas
mov
popf
sbb
loope
or
or
out
jne
dec
inc
sbb
lret
shlb
ljmp
and
cs
xchg
rcl
ja
adc
lea
mov
jo
shll
aam
jecxz
pop
fs
lods
push
sbb
xchg
jo
jnp
mov
imul
pop
cmp
nop
or
mov
mov
ds
mov
inc
out
adc
mov
cmp
in
jl
fistpll
fimuls
je
cmp
mov
xor
push
mov
sbb
lret
sbb
sbb
dec
lret
jle
and
scas
dec
push
inc
rcll
mov
push
pop
adc
dec
inc
sub
push
jo
clc
fbld
sbb
ss
xchg
adc
inc
and
mov
pushl
pushl
ret
call
add
movb
pusha
lea
jmp
loop
sub
fistpl
mov
push
clc
fucomip
or
loope
and
xor
push
subl
sub
sub
jg
dec
pop
clc
test
mov
lock
fsts
out
inc
stos
repz
pusha
insb
or
sub
sub
ljmp
int3
cmpsb
jns
push
les
stc
fidivs
add
inc
arpl
aad
addr16
mov
fmull
fmuls
decl
dec
pop
jle
pop
shrb
or
and
cmp
loopne
xor
xor
sbb
mov
int
and
jp
and
addb
jmp
test
shrb
pushf
inc
sbbb
mov
inc
inc
and
cs
and
popa
test
push
xor
sar
mov
imul
hlt
pop
xchg
sti
mull
repz
push
push
nop
pop
hlt
mov
mov
push
pop
les
psrld
mov
in
add
jne
lcall
fs
je
push
pusha
push
push
adc
push
movl
lea
jmp
pusha
lea
jne
dec
bt
mov
mov
sub
inc
shr
mov
pusha
stc
pushf
jmp
cmp
movzwl
bsf
mov
pusha
cmp
mov
add
cmc
jmp
cltd
mov
fsubs
mov
inc
pop
repz
scas
xchg
mov
test
adc
dec
cli
les
cli
dec
jb
loopne
frstor
xchg
mov
pop
loopne
pop
les
outsb
xchg
sub
jmp
jecxz
ret
xor
fisubrl
int3
lret
add
or
lret
adc
jo
push
jmp
adc
xchg
aaa
aad
test
xchg
scas
xor
aas
mov
inc
pop
add
adc
mov
push
push
lods
add
arpl
lock
cmpsb
mulb
inc
test
sbb
jp
scas
lea
push
cld
mov
in
or
fs
scas
or
mov
or
jg
add
pop
dec
int3
mov
push
cli
imul
cmpsb
push
mov
mov
pop
ret
mov
das
jp
inc
aam
mov
push
sbb
xchg
pop
inc
ja
add
enter
mov
or
lcall
pop
stc
mov
add
add
sbb
add
push
mov
dec
pusha
not
inc
call
sub
stos
out
pop
ljmp
add
insl
sar
dec
aaa
jo
inc
rcrl
rclb
ss
mov
mov
ror
mov
popf
fcompl
xlat
sbb
push
jns
add
aas
in
cmpsb
imull
sub
mov
testb
jne
les
sub
mov
inc
int3
movsb
test
xchg
fimull
mov
sub
xchg
mov
dec
fiaddl
cmp
int3
test
loop
out
outsb
out
jbe
stos
stc
sub
pusha
adcl
roll
cli
lahf
mov
pop
les
into
push
xchg
rcll
cvtps2pd
stos
js
call
clc
mov
jmp
ret
rcll
cmp
or
and
xor
xor
dec
insl
inc
mov
mov
mull
mov
rcll
push
stos
jmp
inc
xchg
cmpsl
mov
dec
in
push
mov
fisttpl
push
mov
pop
jnp
cmp
lods
cmp
mov
adc
sbb
mov
mov
jge
jmp
sub
aad
pusha
xor
push
xor
jl
call
mov
fmuls
mov
rol
loope
push
sarl
sub
pushf
aad
pusha
dec
aad
cli
fistps
test
das
dec
mov
push
mov
cld
mull
or
out
mov
add
adc
add
out
fildll
iret
inc
sbb
sbb
fadds
ret
jge
icebp
lret
or
mov
jge
push
mov
mov
or
mov
mov
adc
cmp
clc
adc
xor
inc
jne
out
pop
add
push
push
mov
cld
or
scas
sub
popf
pop
arpl
gs
cmc
subb
dec
popa
loope
popf
leave
jl
pop
mov
cmp
in
adc
pop
push
incb
test
stos
mov
mov
adc
push
inc
jmp
aad
add
adcb
scas
das
lock
push
jl
add
test
xchg
outsl
aam
cld
push
stos
mov
filds
xchg
lods
pop
jo
push
dec
inc
dec
dec
xor
cs
insb
add
sbb
mov
dec
loopne
push
push
add
int
jecxz
je
es
call
cs
in
fsts
mov
mov
adc
in
jns
mov
pop
mov
or
mov
fidivs
xlat
xor
fbstp
cmpsl
repnz
aaa
mov
aad
cmp
inc
out
aad
mov
adc
mov
js
mov
fsts
dec
pop
sbbl
jbe
sar
shll
push
pop
pusha
lret
jb
divl
adc
jmp
leave
mov
stc
or
pushf
pusha
jmp
add
pushl
aaa
lahf
scas
repz
push
sub
rcll
cmpsl
dec
repz
in
sbb
pop
orl
jbe
daa
popf
or
out
inc
sub
mov
nop
cs
xchg
leave
adc
mov
adc
movsb
fdivrs
popf
mov
and
sbb
pop
mov
pop
mov
inc
fnstsw
int3
jnp
imul
dec
and
push
cmpsb
or
xchg
jmp
cmc
insl
add
xchg
loope
stos
fdivr
sub
popf
stos
xchg
adc
xor
push
in
sub
add
pushf
ds
call
call
mov
mov
lea
divl
or
xchg
xchg
aas
cmp
pusha
stc
sub
sbb
pushf
ss
mov
repz
out
lcall
jo
ja
adc
sub
dec
cs
cmc
test
xor
mov
mov
jge
int
imul
dec
dec
aad
push
inc
imul
fs
jecxz
sub
jb
push
jg
roll
push
es
dec
inc
loop
xchg
cwtl
or
shr
or
decl
mov
jg
add
call
and
testl
add
jns
cmp
xor
clc
jae
jmp
insb
outsb
add
mov
cmp
repz
mov
or
cmpsb
adc
imul
cli
cmp
adc
jg
lret
push
in
cld
in
xor
mov
and
sbb
pop
lss
pop
dec
lock
push
in
ja
mov
popf
loopne
stos
cs
fstps
pop
std
xchg
mov
dec
mov
ja
je
arpl
adc
mov
sti
jmp
mov
add
jne
or
sub
loop
ret
jle
shll
aad
dec
mov
int
add
arpl
lret
adc
repnz
ljmp
stos
fsts
test
adc
pop
icebp
mov
in
mov
inc
sti
pop
fstps
jb
call
sbb
scas
mull
in
aad
imul
pop
add
push
insb
pop
mov
dec
loopne
push
jge,pn
out
xchg
xlat
jmp
sti
cmp
xchg
fisubl
popf
loope
or
push
loope
insb
roll
fucompp
or
aas
orl
insb
in
mov
into
fadds
popa
xor
dec
jns
pushf
push
rcrb
xor
cmpsb
testb
movsl
push
lcall
and
xchg
pop
cwtl
add
into
test
pop
jl
or
stos
pushl
mov
mov
ret
aaa
xor
mov
xlat
push
push
inc
insb
push
sahf
popf
adc
ret
push
add
std
mov
ja
mov
jl
cli
and
es
push
fidivs
cmpsb
adc
sub
imul
dec
sbb
sbb
sub
jmp
sarl
cmpsl
xor
sub
cli
je
ss
in
inc
pop
cmp
sahf
enter
aas
cmp
sarl
sub
inc
xchg
leave
cmpsl
xchg
dec
jb
dec
cmp
mov
sub
iret
loope
outsl
inc
push
dec
das
pop
inc
mov
push
xor
sub
sub
and
push
push
stc
stc
and
repz
fmuls
mov
mov
jo
cmp
jge
xchg
cmp
pop
or
fdivp
xchg
out
jle
jns
fimull
or
icebp
dec
dec
outsl
lret
add
cmp
cmc
xchg
pop
and
lds
in
xorl
add
mov
aaa
push
in
cmp
xchg
mov
pusha
push
mov
lods
cs
imul
cmp
das
add
xor
jbe
out
push
mov
fisttpl
push
add
sbb
call
dec
enter
sbb
cmp
insb
inc
mov
xor
jmp
cmp
imul
adc
cs
cmp
rcrb
push
lahf
cmc
cmp
add
cmpsl
cmp
adc
data16
jge
call
fidivl
push
lods
mov
add
outsl
jl
xor
daa
jl
ret
adc
out
shrl
pop
sti
scas
dec
fnsave
mov
push
mov
xchg
push
pushf
xlat
cmp
popf
lahf
or
xor
loope
loop
movsb
repnz
clc
out
push
mov
into
and
cmp
movsl
push
mov
xor
scas
mov
adc
push
outsl
push
orl
out
mov
or
mov
aas
or
aam
outsb
cmp
sub
jge
inc
dec
sbb
cmp
jns
add
std
and
cmp
aam
mov
sbb
sarb
notb
sub
cmp
mov
add
xlat
cmp
enter
ret
sub
xor
popf
imul
sahf
mov
cmp
dec
cmp
shl
xchg
jle
shll
xchg
fldcw
in
jl
mov
out
adc
insl
or
cmp
inc
dec
in
adc
dec
jb
dec
dec
incb
mov
icebp
cmp
clc
test
fisubl
push
cmp
pop
jle
aaa
lea
rcl
mov
xor
adc
aas
cmp
push
inc
fwait
lret
cmp
stos
lahf
jnp
mov
cmp
repz
inc
pushf
pusha
cmp
dec
pop
push
cs
int
mov
jb
mov
push
mov
push
mov
loope
sbb
or
mov
sbb
jae
int3
mov
std
pop
xorb
cmp
fidivl
dec
push
addr16
cmp
imul
imul
add
hlt
cmp
sbb
jmp
push
cmp
jle
idiv
repnz
pop
popw
cmpb
ret
add
sarb
xor
jne
cmpsb
in
xchg
sub
fsubrl
scas
cmp
push
pushf
es
xchg
jno
hlt
sub
nop
push
cmp
fidivrs
xor
outsl
addr16
cs
mov
push
sbb
rorl
cmpsl
ds
and
cmp
mov
aam
cli
cmp
test
fdivrl
adc
inc
scas
dec
cmp
or
js
xchg
dec
lcall
out
movsb
js
inc
lods
movsl
jl
jg
cmp
inc
insb
cmpsl
std
loope
stos
push
cmp
pop
mov
sahf
cmp
xor
lods
xchg
xor
sub
lods
xor
int
data16
adc
mov
cmp
xchg
mov
cmp
pusha
mov
es
in
stc
or
hlt
adc
cmp
pushl
test
jno
dec
or
mov
jl
hlt
repz
les
push
aas
in
je
cmp
jnp
rcll
sub
mov
adc
dec
mov
cmp
imul
popa
in
addr16
repnz
cmp
lret
xchg
adc
mov
push
sub
dec
in
add
mov
sbbb
lret
shll
mov
sbb
cmp
mov
repz
xor
cmp
jg
out
mov
xchg
cmp
sbb
and
ja
leave
and
in
sub
loopne
fistpl
dec
adc
jp
add
dec
daa
mov
cmpsb
jae
mov
jnp
cmp
mov
cmp
adc
ror
pop
sub
lock
dec
aam
in
cmp
mov
push
jp
lock
mov
mov
jb,pt
pusha
insb
and
xor
rcr
mov
repz
sahf
cmp
mov
test
aad
outsb
lods
add
xchg
cltd
pop
dec
imul
idivb
jns
js
imul
xchg
mov
cmpb
cltd
imul
pushl
lods
aad
scas
and
push
and
fwait
cmp
test
movsl
out
leave
xchg
cli
lods
and
mov
sub
js
pop
gs
ret
jmp
mov
mov
cmpsl
cmp
lcall
insb
das
in
fdivrp
adc
xchg
inc
fucomip
mov
pop
cmp
lds
out
push
pop
mov
xchg
mov
push
dec
out
jo
dec
insl
adc
dec
call
ja
mov
and
or
inc
cmp
pop
jg
inc
sbb
pop
test
cs
fsub
aad
sbbb
xor
dec
xchg
cmp
mov
cmp
cs
jbe
inc
in
pusha
mov
mov
push
mov
sbb
lcall
mov
push
gs
cmp
popa
mov
fs
jne
les
push
lret
inc
push
push
je
mov
outsl
mov
movsl
movb
clc
daa
ret
subl
outsb
xor
scas
or
push
test
cmp
jecxz
mov
shl
xchg
and
std
fdivrs
mov
lahf
ds
cmp
gs
out
jo
jbe
jo
mov
out
xorl
insl
test
add
xor
lea
dec
lods
mov
sbb
push
fs
in
pop
jecxz
xchg
or
cmp
jge
subl
int3
inc
jle
mov
xchg
fsubl
inc
fimull
pop
dec
and
sbb
fs
inc
add
xor
adc
inc
fs
xor
insb
aaa
mov
ret
ret
dec
xor
lods
mov
jne
push
call
aas
out
inc
xor
repz
mov
mov
mov
insb
rolb
lods
clc
in
or
cmpsl
insb
mov
lods
fldenv
lods
ret
mov
push
xor
daa
clc
xor
or
loopne
sarb
cmp
in
add
sbb
aam
flds
cmp
aas
cmp
pop
xor
sub
std
sub
cmp
inc
xor
shrb
lods
pop
int3
dec
roll
mov
lock
popf
sbb
push
dec
dec
xor
push
xchg
xor
out
sub
sub
insb
mov
push
fisubrl
cmp
ljmp
loopne
adc
aaa
sbb
insb
out
cwtl
call
in
dec
xor
jbe
mov
add
xor
loope
pop
dec
jle
cmpb
inc
cli
int
mov
leave
xor
lret
jl
add
faddl
cmp
int3
push
pop
lods
pop
inc
and
jp
stos
jl
das
xchg
decb
sbb
cmp
dec
xor
pop
push
xor
jp
xor
mov
les
sbb
arpl
ja
xor
jbe
cwtl
inc
andl
inc
inc
jne
inc
mov
inc
mov
and
pop
fnstcw
xor
sahf
xchg
jge
mov
in
or
pop
lret
or
mov
inc
and
test
mov
int
outsl
mov
xor
cmp
lock
xor
xor
lds
xchg
mov
pop
xor
pusha
int
push
pop
outsl
cmp
dec
popa
imul
lcall
cmpsb
jmp
rol
movsb
cmp
sub
in
xchg
inc
xor
fnstcw
loopne
cmp
js
scas
xchg
pop
mov
xor
fildll
das
mov
fisubrl
inc
adc
lods
sbb
das
mov
fstl
xor
insb
ret
sahf
insb
lret
leave
cmp
cmp
dec
mov
xor
cld
shld
lcall
fisttps
xchg
mov
sub
xchg
lea
xchg
push
je
sbbl
mov
mov
push
mov
sub
fldenv
mov
sub
jmp
inc
subl
je
xchg
cmpsb
pop
mov
mov
icebp
mov
push
mov
test
mov
dec
fcomi
xor
lods
inc
pop
dec
lods
xor
jmp
cmp
fistpl
popa
mov
scas
dec
lods
dec
mov
mov
or
cwtl
in
mov
movsb
mov
mov
mov
push
imul
ret
cwtl
out
out
mov
mov
sbb
fcompl
push
lea
mov
inc
in
cmp
test
inc
mov
xor
jne
cmp
out
outsb
pop
jo
mov
cmp
pop
iret
inc
xor
lock
data16
xor
flds
test
ds
fisubrl
mov
sti
mov
or
mov
fistpll
imul
hlt
xchg
daa
push
ret
mov
mov
out
lds
xor
cwtl
in
lock
and
loopne
imul
and
and
pop
inc
stos
outsb
clc
in
insb
cmpsl
cli
lret
mov
cmp
or
popa
sbb
or
mov
add
xchg
dec
mov
or
push
mov
push
jl
mov
cwtl
push
prefetch
add
jae
push
jbe
jae
hlt
or
sbb
lods
and
jo
dec
mov
xor
sub
fildll
cmp
xchg
fmull
dec
dec
test
sahf
xor
test
das
cmp
jb
movsb
fstpt
xor
jb
xchg
xor
sub
pusha
mov
aaa
mov
dec
mov
inc
sbb
inc
inc
jmp
hlt
aad
insl
xor
or
push
inc
adc
dec
inc
arpl
sahf
add
lock
adc
adc
dec
or
mov
pop
inc
push
xor
inc
sti
mov
inc
pop
or
cmp
mov
xchg
adc
outsl
inc
js
pop
loope
xor
mov
divb
dec
test
out
pop
pop
xor
jo
adc
jge
xor
dec
pop
imul
orb
test
jns
mov
mov
test
jns
inc
out
pusha
test
lock
xor
sub
mov
int
push
cmp
imul
cmc
nop
pop
movsb
add
push
xor
sub
outsb
mov
mov
andb
xchg
dec
cld
push
or
push
xor
push
test
clc
push
imul
sbbb
rolb
push
push
popf
faddl
xor
shll
push
mov
dec
dec
xchg
inc
in
xor
inc
movsb
push
jnp
mov
inc
mov
push
add
mov
jb
int
lea
lock
mov
mov
js
xor
mov
sub
mov
push
xchg
xor
xor
sub
lods
jg
lods
lds
arpl
rcrb
test
dec
jl
nop
out
xor
jge
aam
insb
lret
xor
sahf
xchg
cwtl
cmp
mov
lahf
xchg
insb
mov
mov
push
xor
pusha
inc
push
cmp
test
dec
test
lods
cs
inc
xor
stos
push
aam
insb
lods
pmuludq
scas
lods
mov
xor
outsl
push
or
mov
xor
mov
insb
mov
sbb
das
lret
mov
lcall
xor
push
add
lds
xor
mov
inc
in
and
sbb
movsl
or
mov
outsb
rcrb
xor
push
mov
xchg
dec
jg
mov
jle
pushf
out
push
orb
ljmp
in
xor
mov
stc
pop
stos
call
jo
xor
icebp
aas
shr
mov
cld
imul
mov
outsl
inc
lea
cmp
lds
sub
repnz
mov
lahf
mov
sub
jle
cmpsb
je
inc
push
sub
mov
das
ds
xor
dec
xor
fwait
and
hlt
xor
lds
cmp
cmp
jae
dec
ds
inc
sahf
inc
gs
js
inc
rclb
xor
mov
nop
dec
sahf
dec
gs
dec
dec
mov
mov
push
sahf
push
push
jle
in
insb
nop
push
sahf
push
gs
dec
push
mov
mov
pop
sahf
pop
gs
dec
pop
mov
mov
fs
gs
addr16
mov
insb
pop
xor
outsb
dec
push
gs
jno
jae
dec
jae
je
jne
jbe
ja
js
jns
jae
dec
jnp
jl
jge
jle
jg
orb
jae
dec
cmpl
sahf
xchg
dec
mov
mov
mov
pop
rclb
add
xchg
test
xchg
xchg
dec
xor
xchg
test
cltd
xor
lcall
mov
popf
dec
sahf
mov
mov
dec
movsb
mov
jae
dec
test
test
sahf
lods
in
lods
mov
scas
mov
jle
mov
nop
mov
mov
mov
mov
jae
dec
mov
mov
sahf
mov
jae
dec
mov
adc
sahf
ret
dec
les
pop
cmp
pop
cmp
lds
leave
dec
lret
lret
xor
dec
dec
nop
int
into
gs
dec
rcl
push
jg
xor
mov
aad
inc
rolb
xor
mov
fistpl
js
fidivrs
mov
jecxz
in
movsb
in
xor
mov
mov
jmp
in
xchg
dec
out
inc
inc
out
int3
lock
icebp
lds
bnd
repz
cmp
pop
testb
idivl
xor
mov
ds
cli
pop
cmp
lds
cld
js
std
shlb
and
mov
add
les
std
and
lods
add
add
push
jg
xor
mov
or
or
outsb
mov
bswap
dec
adc
movsb
jg
xor
mov
dec
push
adc
lods
push
pop
insb
rcrl
negb
xor
sbb
test
add
push
cmp
pop
xor
lds
and
sub
je
shlb
and
daa
sub
mov
sub
jle
int3
xor
xor
pop
xor
jo
ds
ss
cmp
mov
cmp
cmp
mov
mov
inc
sahf
inc
gs
dec
inc
mov
mov
icebp
xor
push
push
js
push
mov
mov
push
sahf
pop
gs
dec
pop
mov
push
adc
xor
pop
dec
pusha
mov
shlb
adc
gs
push
push
imul
adc
insl
pop
xor
add
jb
jae
dec
je
jne
jbe
ja
js
jns
jp
jae
push
jl
sarb
jle
jg
andb
cmpb
test
xchg
xchg
mov
jle
xor
jmp
jae
dec
xchg
mov
xchg
sahf
xchg
gs
js
cltd
shlb
jg
inc
push
fwait
xor
pushf
inc
lock
xchg
dec
mov
xor
mov
ds
movsb
pop
insb
movsl
lds
cmpsb
dec
cmpsl
mov
shrb
lods
or
lods
shlb
jae
dec
scas
mov
mov
mov
mov
mov
jae
dec
mov
mov
sahf
mov
mov
dec
mov
adc
sahf
ret
les
mov
mov
lret
fs
ds
ror
lock
xor
and
inc
imul
xchg
mov
lock
dec
call
dec
push
data16
js
out
pushf
jae
dec
call
adc
sahf
in
gs
dec
out
shlb
xor
mov
repz
pop
hlt
in
cmc
js
idivb
mov
sti
sahf
cld
jl
xor
dec
add
xor
mov
gs
aaa
dec
or
or
cmove
lds
adc
xor
push
inc
hlt
pop
adc
lahf
sbb
push
xor
and
je
popf
and
cmp
shlb
jae
push
and
or
shlb
mulb
xchg
and
daa
js
sub
mov
mov
cli
cmp
cld
imul
adc
mov
imul
mov
movsb
jmp
gs
push
js
sbb
pop
xchg
orb
insb
cmp
xor
xor
or
pushf
test
nop
xor
je
mov
ss
dec
xchg
mov
sbb
outsl
pusha
pop
xchg
adc
jae
sbb
addr16
clc
hlt
xor
fnstenv
sbb
push
out
lods
daa
dec
dec
inc
sub
movsb
and
adcb
into
xorb
xor
dec
xor
xchg
les
xlat
pop
lods
inc
sub
cs
xor
pop
pop
dec
jmp
pusha
sub
xor
inc
daa
es
hlt
in
jl
xchg
mov
data16
or
mov
aaa
pushf
jl
lods
xor
xor
sbb
aaa
xor
add
out
xor
mov
into
das
xchg
mov
or
lea
dec
pop
mov
push
inc
hlt
pop
xor
cld
mov
fistpll
lods
jnp
xor
hlt
cmp
xchg
aam
shl
mov
fcompl
dec
cltd
nop
orb
xor
repnz
mov
dec
mov
mov
jo
mov
or
xchg
xor
xor
js
cmc
movsb
fsts
push
pop
dec
cmp
fs
inc
pop
decl
push
lds
stos
lds
in
pushf
jo
lea
fwait
xchg
inc
add
lods
shll
and
gs
lds
aaa
cmp
aas
jo
inc
jg
das
insb
inc
jb
xchg
fnstenv
dec
mov
inc
fmulp
dec
cmp
inc
xor
popf
outsl
ds
shll
arpl
call
cmpl
arpl
fpatan
hlt
test
cwtl
mov
dec
push
xchg
inc
daa
add
cmp
cld
mov
mov
je
jo
xor
insb
inc
cmc
insb
mov
mov
test
neg
cmp
mov
dec
or
cmp
dec
pop
add
dec
aam
jns
repz
hlt
pushf
adcb
nop
mov
dec
dec
mov
out
nop
or
fs
lock
loopne
pop
inc
mov
dec
mov
adc
fs
jae
dec
mov
fnstsw
call
fs
out
sub
dec
fs
fimuls
loop
jo
mov
add
inc
imul
movsl
mov
in
pop
inc
fidivs
push
scas
je
stos
adc
cmp
mov
ds
in
sub
in
inc
inc
inc
fimuls
pop
out
das
jg
push
mov
ds
push
pop
or
xchg
idivl
push
push
nop
lcall
in
movsl
or
in
dec
in
in
fsubs
out
pushf
insl
xchg
xor
jnp
nop
int3
loope
sahf
fwait
popl
pop
pop
inc
pop
dec
push
inc
lahf
aaa
cmp
fsubs
lea
dec
mov
jne
sub
std
dec
cmp
roll
fsubl
addr16
fs
es
dec
xchg
jmp
xchg
push
insl
cmp
mov
pushf
cwtl
push
lea
xor
es
cmpsl
jl
loopne
fwait
fs
jle
xchg
jg
mov
mov
mov
jns
sahf
xchg
jl
cmpl
cmp
jl
scas
lcall
xchg
js
push
mov
adc
add
iret
jno
in
xor
test
jge
popa
push
add
fdivrl
das
js
mov
mov
jns
xchg
mov
push
jne
shrl
sbb
jno
jnp
jnp
out
out
js
cmp
pop
push
popf
cwtl
cmp
cmp
cmp
xor
fldcw
mov
ds
lods
or
jbe
fs
xor
mov
pop
jg
push
dec
mov
jo
hlt
outsb
je
cs
je
fwait
lds
xchg
jnp
pop
jl
nop
jp
and
xorb
jl
bnd
adc
pop
jle
push
adc
testb
rcll
cwtl
xor
rorl
fs
rcrb
movsb
push
insl
les
frstor
push
xchg
sahf
inc
dec
jno
mov
outsl
push
adc
sahf
lahf
fwait
mov
test
pop
pop
fs
sbb
dec
pop
jo
mov
dec
sbb
jge
lods
mov
jb
jo
push
mov
sbb
mov
stc
sbb
xor
push
push
dec
loope
adc
hlt
sbb
or
aaa
rcll
sbb
jl
lea
pop
fwait
push
int3
push
lods
jae
dec
hlt
xchg
sbb
jo
xor
outsl
cmp
hlt
dec
adc
lods
jae
testl
test
jne
xchg
push
pop
jne
int
jne
pusha
in
pushf
in
dec
inc
shlb
mov
das
cmc
inc
dec
add
lea
js
test
insb
jp
clc
lret
ficomps
sbb
xor
lret
push
lods
jp
mov
add
fstpl
and
pop
pop
jns
pop
test
nop
push
insl
xor
in
jmp
clc
dec
mov
push
push
dec
xor
pop
movsb
adc
add
add
pusha
dec
xchg
dec
in
pop
sbb
jae
sbb
mov
je
hlt
dec
mov
cmp
pop
testl
jo
push
int3
popa
push
jo
movsb
pop
sbb
pop
mov
xor
pop
das
xchg
mov
repnz
xor
nop
sbb
ds
pop
arpl
mov
rcrb
inc
jbe
xor
jo
mov
jns
xor
xor
outsb
dec
xor
mov
nop
je
inc
push
pop
je
cmc
lods
mov
mov
or
mov
pop
outsl
jo
neg
mov
push
fdivr
xor
mov
sub
cmp
cmp
cmc
add
sbb
dec
loopne
pushf
dec
mov
fldcw
ljmp
adc
hlt
cmp
sub
arpl
xor
je
mov
bound
mov
cmp
in
rcll
dec
cld
mov
mov
js
dec
sbb
jne
dec
fidivrl
pop
and
insb
arpl
insl
das
sub
outsb
xor
jo
loope
outsl
dec
sub
lret
jno
pop
mov
imul
dec
xor
dec
cmpsl
jae
out
insb
je
mov
sub
jne
or
xor
lods
shll
cmp
jg
adc
and
movsl
dec
xchg
scas
inc
or
sub
xchg
mov
ds
clc
cmp
or
inc
inc
dec
mov
jl
jle
cwtl
js
xchg
cwtl
xor
pop
xchg
cld
insl
shl
popf
and
xor
pop
fs
jbe
push
test
fldenv
xor
mov
add
inc
fbstp
ds
push
inc
clc
movsb
cmp
push
mov
nop
push
xor
je
loopne
push
pushf
aaa
das
mov
dec
mov
hlt
xor
int3
inc
adc
cmp
pop
insb
jbe
hlt
xor
ret
push
ja
into
adc
shrb
add
lea
cwtl
sub
in
je
leave
lret
or
jns
pushf
jl
sahf
pusha
sbbb
pop
pop
and
fs
mov
hlt
jecxz
mov
ds
cwtl
hlt
das
int3
hlt
xchg
sub
cmp
jns
cwtl
dec
adc
mov
xchg
or
push
aaa
xor
psubb
test
xor
sub
pop
push
das
je
mov
mov
mov
jecxz
hlt
adc
iret
jo
sbbb
insb
dec
dec
jb
insb
sub
ja
pop
dec
mov
gs
mov
mov
push
gs
xor
cwtl
push
movsl
pop
loopne
mov
ret
leave
insb
pop
dec
pop
out
mov
jns
xorl
mov
fiaddl
lods
dec
jne
aam
sbb
sub
or
cmp
cld
jbe
adc
fisttpll
mov
arpl
mov
gs
pusha
mov
or
push
jo
out
clc
cmp
mov
aam
dec
push
mov
fcoms
les
pushf
in
dec
movsb
jmp
mov
xchg
mov
mov
inc
test
xchg
loopne
push
push
adc
movsb
pop
mov
sbb
outsl
insb
sub
cmp
int3
hlt
lea
xor
push
mov
sub
jg
jno
js
fstpt
mov
dec
fdivs
jle
xchg
cwtl
xchg
mov
movsb
xor
xchg
jns
fst
inc
dec
dec
inc
jb
sahf
push
cltd
lea
xor
mov
sub
lcall
or
lahf
call
xchg
pop
mov
mov
int
cmc
cs
cltd
mov
nop
fistpll
outsb
sub
mov
insb
insl
pop
leave
lds
dec
lock
mov
mov
fsubs
xor
adc
and
or
or
mov
hlt
mov
adc
aaa
imul
aam
or
mov
mov
push
dec
rcl
mov
sti
push
les
das
xor
mov
sub
js
insl
shl
xor
lds
dec
xor
dec
rorb
aad
pop
adc
rorl
in
adcl
lock
loop
out
mov
push
lods
mov
pop
push
les
xor
cwtl
mov
pop
push
xor
call
push
call
pop
lahf
movsl
clc
add
inc
negb
push
test
outsb
push
adc
push
jae
lret
popf
dec
orb
mov
icebp
push
jb
push
push
enter
push
pop
push
pop
xor
hlt
sbb
aas
outsl
js
repz
pop
dec
aaa
jle
or
mov
mov
test
adc
nop
xchg
scas
mov
mov
mov
pop
or
into
cmp
push
leave
xor
pop
inc
subb
mov
out
sub
je
xchg
stos
jle
dec
mov
je
movsl
ror
mov
pop
inc
push
push
xchg
outsb
iret
lret
mov
out
mov
add
push
pop
test
pushf
negb
inc
test
ja
std
sub
add
pop
jb
ret
xchg
lea
inc
lcall
dec
inc
jns
dec
stos
and
sub
xor
scas
xor
cmpsb
lret
test
repz
mov
and
in
cs
gs
dec
into
movsl
push
cmp
pop
mov
push
call
fs
mov
mov
pop
dec
push
test
xor
xor
aaa
jmp
jbe
jo
je
mov
aas
rcl
push
dec
push
add
xchg
je
nop
nop
push
pop
push
inc
iret
fdivl
clc
cmp
xor
nop
dec
xor
je
vandnps
cmp
movsb
adc
dec
cmp
ss
cmp
jb
jecxz
mov
xchg
arpl
js
xchg
pushf
fwait
push
lret
jo
mov
cmp
push
xchg
rorl
out
ss
lahf
cltd
or
xchg
sahf
mov
dec
xor
in
dec
fnstsw
xor
lcall
xchg
test
faddp
cmpb
lock
cltd
outsl
out
sub
mov
call
dec
lcall
in
jns
cs
xor
or
imul
add
call
rcrb
dec
mov
out
mov
mov
imul
rcrb
repz
negb
jb
jbe
push
movsl
push
lock
xchg
dec
insl
push
mov
sti
dec
cmp
xchg
mov
xchg
mov
mov
int
ss
std
mov
test
js
je
jo
jge
jo
insb
cmp
pusha
xchg
je
and
nop
popa
jo
jb
jb
adcb
xchg
mov
mov
lock
push
mov
push
push
xor
push
cmp
cli
xor
push
jg
cmp
pop
cmp
pop
mov
cmp
rcll
cli
inc
and
fs
sti
inc
scas
sti
cmp
sbb
inc
jo
or
dec
jnp
insl
push
jl
jg
and
sub
push
jns
sub
jb
fs
lcall
push
xor
mov
repnz
xor
jae
cmp
jns
cld
push
ds
jle
pop
pop
pop
fs
dec
fadd
and
dec
or
xchg
sbb
xchg
cmpsb
dec
xchg
imul
arpl
aam
shll
xor
and
xchg
gs
popa
shlb
nop
fsubs
je
or
mov
jo
xchg
rclb
pop
pop
in
stos
cld
jle
mulb
stos
xchg
mov
cld
fidivs
stos
rolb
push
pop
gs
nop
lahf
or
nop
or
mov
je
inc
add
cltd
pop
pusha
xchg
sbb
xchg
pop
push
jecxz
dec
popa
in
iret
ficoms
rcr
sub
or
ret
arpl
jl
dec
xlat
outsb
pop
sbbb
fs
dec
push
je
mov
cmp
pop
push
xchg
out
icebp
or
push
inc
addr16
loop
dec
lods
jns,pt
pop
out
stos
adc
xlat
outsl
outsl
push
mov
js
lea
mov
xchg
dec
push
jl
add
jo
pop
sub
scas
or
inc
push
pop
in
stos
sub
insl
ret
xor
jae
hlt
lahf
mov
pop
dec
pop
inc
jnp
dec
cmpsb
dec
jmp
gs
sarl
dec
sub
shll
movsl
shlb
cs
sub
sub
jge
mov
push
lods
test
xor
arpl
mov
push
inc
push
mov
pushf
icebp
movsb
jmp
sbb
push
insl
xor
pop
inc
sbb
push
push
loope
mov
sbb
jmp
into
jno,pn
shlb
cmp
xchg
xor
movsl
lcall
sahf
imul
push
scas
mov
js
push
mov
nop
rorb
xchg
loopne
push
inc
cmp
mov
in
arpl
pop
testl
data16
cmp
jbe
pop
xor
outsb
inc
sbb
cmp
jg
fs
into
pop
xor
ficoml
sub
sub
push
sbb
stos
sub
dec
into
push
cmp
push
sub
sub
stos
or
les
xor
xor
stos
stos
int3
xorb
das
xor
mov
mov
mov
icebp
shl
fcmove
pop
jbe
cs
int
mov
xor
ds
mov
int
push
outsb
jbe
jne
mov
js
push
insl
xchg
jg
mov
mov
cmp
mov
jns
arpl
or
inc
mov
cs
dec
jge
insl
sarl
jne
jb
mov
xchg
jg
mov
xor
dec
push
push
hlt
repnz
adc
xchg
stos
sub
cmp
inc
dec
dec
inc
or
or
ljmp
out
cmp
mov
cmp
jnp
and
or
in
sti
cmp
sarl
or
cmp
push
in
testl
cli
jo
jo
mov
data16
cmp
dec
push
push
shrb
hlt
mov
jle
mov
stc
xor
enter
daa
inc
sbb
sbb
pusha
dec
xor
loopne
dec
loop
inc
inc
fistpl
inc
cmp
sub
dec
idivb
push
mov
je
cmp
jmp
or
cs
je
xor
add
xor
cmp
pop
mov
push
sub
repz
or
inc
jmp
arpl
pop
in
outsb
loop,pt
xorl
dec
xor
callw
pop
int3
pop
leave
cmovge
jge
lods
stos
mov
outsb
std
pusha
jl
mov
sahf
scas
add
jae
sub
sub
js
inc
xchg
adcb
cs
das
dec
mov
adc
imul
xor
hlt
xor
aaa
dec
mov
adc
imul
sbb
ds
stos
outsl
inc
push
inc
dec
mov
adc
dec
inc
and
pop
js
int3
adc
and
stos
outsl
das
push
xor
xor
xor
sub
inc
pushf
out
adc
test
fnstcw
aaa
dec
icebp
push
cwtl
dec
dec
jae
mov
push
cs
pushf
test
jne
je
das
mov
lahf
mov
fwait
repnz
out
pop
ds
pusha
insl
jae
js
push
xor
sarl
or
nop
jg
fs
pushf
fwait
stos
div
into
outsb
mov
std
jl
popf
in
in
nop
sarb
lock
dec
insb
cmpsl
sbb
sub
aaa
aam
rorb
outsl
rcll
bound
jl
lods
xchg
das
xor
cs
orb
jl
jp
pop
jge
iret
scas
lods
push
insb
xchg
pop
inc
nop
fidivrl
xchg
nop
xor
cmp
xchg
mov
pop
outsb
sub
fs
jb
int3
pop
jge
xchg
mov
sub
pop
push
leave
xchg
cmp
sub
mov
mov
cld
std
nop
in
int3
jnp
lret
pop
jae
jno
cltd
inc
xor
push
inc
push
insb
cwtl
push
cmp
mov
xchg
in
imul
mov
lcall
inc
mov
testb
jb
push
hlt
push
jo
js
cmp
repz
adc
xchg
pusha
sbb
inc
cld
push
pop
push
mov
sbb
push
mov
cld
js
rolb
mov
mov
sub
lods
jp
lock
lcall
pop
inc
xchg
int3
addr16
test
lods
rolb
in
jl
aam
mov
cld
inc
nop
adc
fdivr
and
cmp
hlt
cs
add
xor
popa
inc
aas
clc
lcall
je
push
cmp
lret
add
lods
dec
push
incl
jo
rolb
jl
cmp
adc
test
js
add
inc
jg
aam
push
push
insl
mov
stos
dec
insb
add
jo
jl
sti
lods
mov
add
mov
int3
inc
rol
sbb
mov
jo
lds
jp
lock
add
xor
hlt
mov
lcall
mov
stos
jb
push
cld
push
jo
test
sarl
add
xchg
add
dec
add
xor
pop
inc
lods
adc
push
int3
xchg
add
mov
xor
inc
in
int3
mov
xor
pop
inc
adc
test
js
cmp
inc
outsb
dec
mov
inc
hlt
add
inc
inc
mov
jae
adc
xor
aam
test
mov
cld
js
cmp
inc
mov
lock
pop
push
jl
xchg
push
and
je
inc
ror
xor
nop
mov
pop
pop
hlt
std
fmull
les
pushf
addl
ret
or
int3
lods
js
js
mov
pop
jg
test
insb
jo
rolb
in
fs
sarb
cmp
push
in
data16
ret
sbb
jno
cltd
inc
sub
je
leave
pushf
ret
or
adc
mov
push
lods
in
and
push
jmp
loopne
js
inc
xchg
int3
cmc
dec
je
in
mov
adc
popf
cld
mov
pop
or
mov
ret
jl
popf
fs
mov
mov
inc
xchg
pushf
loopne
js
inc
xchg
insb
div
je
ret
adc
lock
sub
mov
stos
dec
push
or
or
jo
js
or
xchg
lcall
mov
aam
sub
pop
jp
hlt
or
adc
test
and
jo
xor
mov
pop
or
cmp
inc
inc
lods
push
add
mov
and
jo
rolb
or
fisubs
loope
lcall
jo
inc
fwait
xor
je
sbb
push
lods
adc
inc
mov
mov
fisubrs
push
rcr
sbb
or
or
js
sbb
jl
xor
jae
adc
subb
lret
dec
push
xchg
cmp
in
jae
cld
jo
or
shlb
jb
or
jo
rolb
jl
sbb
shrb
pushf
jl
jo
lods
jl
add
aam
fs
inc
in
notb
outsl
add
and
lods
jo
movq
aam
add
ud1
je
push
inc
push
je
movsb
and
mov
cmp
movzwl
imul
jo
in
inc
mov
or
int3
xor
and
inc
xchg
jnp
hlt
mov
push
int3
dec
cmp
jle
cmp
inc
inc
or
pushf
lock
movsb
mov
jl
xor
mov
mov
test
adc
jae
mov
call
dec
xchg
lds
out
movsb
adc
mov
inc
xchg
pushf
notl
outsb
xor
fcoml
pop
pop
or
hlt
dec
xor
leave
arpl
mov
jb
cld
and
adc
popa
xor
xchg
pop
inc
pushf
stos
push
add
mov
loop
lods
push
mov
add
dec
sbb
push
movsl
and
mov
stos
or
push
jl
add
dec
adc
mov
jl
push
inc
ss
rcrb
fs
jg
inc
push
xchg
jb
push
add
lods
jo
jbe
jp
mov
adc
rcrb
nop
mov
jb
push
fmull
lods
push
cld
dec
jb
push
sbb
jb
sbb
mov
inc
hlt
push
int3
xor
adc
jl
add
sub
jb
push
pushf
ret
aam
mov
jb
push
les
and
fmul
cld
sbb
mov
gs
pop
mov
mov
and
arpl
push
js
cmp
inc
hlt
sub
fisubs
inc
ds
sarb
cli
xor
js
mov
xor
dec
mov
adc
dec
sarb
mov
inc
movsb
hlt
lock
pop
lds
xor
dec
dec
inc
jmp
jbe
cmp
rcll
sbb
push
inc
xor
mov
pop
fisubrl
das
jl
mov
cltd
insb
inc
and
lods
lods
push
mov
je
rcl
mov
in
mov
adc
jle
push
lock
lcall
xor
add
fsts
jle
add
xor
push
mov
mov
in
mov
push
adc
dec
xchg
lods
sub
push
js
jg
xor
mov
int3
sahf
aam
fmull
mov
mov
or
adc
sbb
and
or
mov
mov
push
sahf
pop
gs
insb
mov
mov
xchg
sahf
pushf
movsb
dec
lods
mov
mov
aam
fsubl
dec
in
mov
mov
sbb
adc
sub
arpl
hlt
push
movsb
cmp
mov
arpl
mov
mov
mov
mov
mov
lcall
hlt
mov
or
xor
push
adc
sahf
sub
mov
mov
mov
inc
icebp
push
aas
lods
jle
cmp
mov
dec
movsb
mov
cli
cmp
arpl
dec
aam
aam
sub
test
sarl
fidivrl
nop
in
cmp
cmp
push
sbb
mov
jno
inc
pop
mov
sbb
js
mov
fs
jl
adc
scas
dec
mov
int3
mov
ljmp
sub
jg
inc
push
adc
mov
inc
and
dec
sahf
pop
bound
mov
mov
sahf
sahf
test
mov
mov
sarb
ljmp
mov
pop
adc
mov
cmpsb
popa
pop
rorb
inc
and
pop
movsl
insb
inc
hlt
jo
xchg
inc
hlt
test
movsl
in
hlt
lods
movsl
or
hlt
shlb
pop
mov
push
test
je
test
les
add
jno
sub
dec
ds
shrb
xor
xchg
dec
sahf
mov
mov
rcrb
out
mov
mov
and
mov
mov
data16
jo
jp
push
pop
adc
and
nop
lds
sub
inc
and
icebp
lods
pop
push
insb
mov
mov
mov
mov
mov
jb
push
sub
pop
sbb
test
movsl
push
cmpb
cld
movsl
cwtl
cmp
movsl
mov
movsb
jb
push
enter
je
mov
roll
adc
int3
arpl
mov
cmp
mov
cmp
fwait
dec
ja
daa
fwait
dec
ja
daa
fwait
push
ja
cmp
test
movsb
pushf
mov
fs
mov
mov
mov
movsl
and
imul
push
xchg
sub
add
je
push
rcll
sbb
cmpb
hlt
lods
or
js
inc
dec
dec
dec
pop
cmp
js
inc
orb
js
mov
cmp
popf
test
cwtl
mov
je
add
adc
pop
dec
xor
push
call
adc
cmp
push
das
jbe
lods
movsl
hlt
inc
icebp
das
jns
dec
aaa
icebp
push
aam
and
add
dec
push
frstor
int
mov
ds
push
jp
xor
sbb
sub
mov
mov
sub
mov
jns
cmp
test
js
in
mov
sbb
add
push
lret
inc
setge
dec
insb
movsl
sub
dec
xchg
movsb
cmp
mov
mov
in
fs
or
js
rolb
jae
dec
cmc
jp
pushf
sbbb
push
adc
mov
mov
das
sub
cmp
fdivrp
jns
dec
push
test
cmp
repnz
and
jb
sbb
test
movsl
pusha
cmp
movsl
je
cli
push
cld
fwait
dec
mov
mov
pushf
mov
cmp
insb
push
fcomp
mov
sub
mov
mov
pushf
pop
fdivr
mov
adc
fs
jl
sub
or
jae
push
mov
movsb
and
dec
xchg
dec
dec
lahf
dec
inc
lods
cmp
xor
xor
jo
in
xor
cmp
xchg
lods
popf
or
adc
jle
fs
les
dec
xor
cmp
dec
inc
dec
cmp
pop
dec
addr16
push
addr16
cmp
movsb
mov
je
lcall
pushf
push
test
int3
adc
jg
xor
cmp
cmp
jle
je
mov
or
lock
mov
jle
cmp
nop
xor
mov
jl
test
dec
shrb
lods
movsb
call
movsb
mov
adc
pop
movsb
hlt
push
mov
jg
mov
cmp
mov
cmp
jne
andb
xchg
mov
mov
mov
pop
movsl
dec
lret
jg
xor
mov
testb
or
adc
pop
je
shrb
divb
xchg
inc
pop
xor
push
ds
push
pop
pop
cmp
lds
je
jg
jae
dec
xchg
mov
xor
enter
arpl
clc
push
mov
cs
push
sub
les
sbb
fmuls
pop
dec
inc
pop
pop
in
rorb
jl
js
dec
orb
xor
xchg
adc
xchg
lret
fsubl
andl
in
mov
hlt
adc
sahf
in
add
xor
pushf
movsb
jb
push
and
je,pt
push
mov
cmpb
xor
cs
dec
lock
xor
inc
dec
fs
cmp
push
mov
jo
sbb
adc
addb
idivb
xor
lock
mov
push
fdivrl
xor
in
adc
mov
insb
shrl
dec
pop
nop
fcompl
push
or
or
cmp
inc
sbb
dec
xor
sbb
mov
jl
test
add
sahf
popa
fs
mov
push
mov
lods
mov
jg
adc
xor
lcall
sub
test
sbb
jno
mov
orb
nop
negb
test
mov
mov
or
fmull
shlb
dec
das
dec
inc
cmp
jg
xor
movsb
fwait
mov
inc
xor
cmp
xchg
fs
push
mov
stos
sub
cmp
adc
test
jo
mov
dec
mov
outsl
test
ss
and
mov
in
les
xchg
and
add
aam
fs
adc
fdivs
xchg
cmp
aam
mov
cld
push
mov
push
mov
sbb
mov
mov
mov
mov
mov
mov
popf
cmp
lock
push
push
push
push
push
imul
movsl
push
inc
hlt
in
jl
hlt
clc
movsl
movsb
inc
hlt
or
int3
inc
hlt
and
xchg
adc
inc
jb
push
pop
dec
jb
push
jo
jb
push
test
mov
in
lods
dec
jb
push
rorb
aas
popf
aam
dec
pop
movsl
call
cld
cmp
movsl
adc
dec
aam
and
dec
cld
movsb
aaa
mov
repz
test
sub
inc
push
insb
mov
push
nop
subb
adc
push
push
sahf
das
dec
inc
inc
arpl
in
dec
in
push
orb
push
movsl
cmp
insb
add
dec
and
sub
push
mov
mov
mov
cs
or
dec
push
lret
dec
pushf
inc
inc
mov
xchg
dec
jb
push
lods
gs
das
mov
inc
hlt
enter
xor
gs
fadds
rcll
call
xor
jno
sub
das
mov
xchg
pop
aas
dec
mov
xor
das
push
loopne
fadds
hlt
sub
jbe
stc
lods
push
fwait
pop
cmp
inc
js
jl
xchg
loop
lret
cltd
les
pop
pop
xor
jo
cmp
push
jle
fmull
dec
pushf
mov
movsb
cs
add
mov
fmuls
cmp
add
je
push
mov
mov
mov
mov
mov
inc
mov
movsl
fs
hlt
sbb
mov
mov
mov
fmull
movsb
cld
mov
inc
mov
in
cmp
cmpsb
mov
insb
mov
out
jge
leave
jno
cmp
addb
or
pushf
inc
fldcw
push
test
inc
hlt
movsb
fcomps
xchg
mov
mov
adc
sahf
sub
jae
push
call
pop
push
add
mov
mov
cmp
cmp
cmp
push
and
and
xor
cmp
inc
jge
lods
or
inc
mov
dec
dec
mov
jae
hlt
lock
loopne
cld
inc
hlt
pusha
adc
jbe
push
add
cs
icebp
les
movsb
cmp
dec
arpl
or
test
xchg
sbb
lods
pop
test
inc
cld
jge
push
icebp
jno
nop
adc
icebp
fs
fnstcw
mov
cmp
dec
push
loopne
jb
push
hlt
dec
and
or
movsl
faddl
das
lea
adc
sbb
test
insb
movsl
jl
hlt
andb
int3
inc
hlt
test
rclb
cmpsb
dec
push
fs
add
xor
pop
hlt
xor
push
sbb
push
insb
jge
fwait
mov
fistpll
mov
pop
insb
aam
adc
dec
mov
inc
test
sbb
scas
dec
dec
out
inc
dec
push
add
and
dec
dec
mov
dec
mov
mov
je
pushf
sub
push
call
cld
jae
rcll
mov
sub
pop
pop
test
mov
dec
in
or
push
jno
rcr
call
inc
outsl
mov
adc
lock
adc
loope
movsb
pushf
frstor
je
cmp
or
fistpll
adc
xchg
push
push
mov
adc
outsl
and
cmp
push
mov
mov
push
dec
xor
push
arpl
inc
mov
dec
lret
cmp
pop
add
push
fsubr
shl
sti
call
insb
fdivrp
lret
add
dec
adc
sub
lds
out
pop
push
arpl
test
repz
mov
aam
das
pop
int3
xchg
cli
das
ret
push
push
int3
fisttpll
jp
dec
in
inc
mov
or
fcomps
xor
mov
je
imul
cmp
or
push
ficomps
lods
dec
jb
push
shlb
in
pop
cmp
mov
push
pop
cmp
mov
push
add
pop
push
jmp
test
test
sbb
jl
mov
lret
rcrl
into
push
addr16
inc
fdivl
sbb
cmp
push
adc
xor
push
clc
push
fs
xchg
inc
lock
mov
xor
movsl
xchg
inc
push
cmp
adc
add
cmp
hlt
push
inc
add
cmp
fsubs
sbb
lret
mov
je
test
mov
push
push
arpl
inc
nop
cmpsb
popa
push
mov
mov
mov
inc
push
or
sub
jb
push
mov
pop
fisubs
loopne
xor
cs
clc
pop
pop
add
sub
dec
add
push
pop
jae
add
sbb
push
xor
adc
jbe
out
push
xchg
test
movsb
pop
repz
stos
inc
int3
movsb
fcoms
test
cld
ja
pop
cmp
dec
icebp
outsl
xchg
dec
xor
cmp
shll
mulb
pop
sahf
dec
gs
dec
cmp
mov
nop
scas
sahf
mov
push
cmp
icebp
loopne
pop
call
arpl
cmp
sete
adc
sub
and
imul
pop
pushf
sbbb
hlt
pushf
insb
pop
mov
adcb
push
pop
gs
jnp
aas
mov
mov
cmp
dec
cmp
popf
js
push
fs
test
push
push
push
jbe
push
mov
mov
push
aam
sub
fcoml
hlt
pusha
cmp
add
jb
push
jae
mov
mov
pop
xchg
cmp
movsl
sub
and
or
fs
pop
mov
outsb
cmp
cld
lds
fs
xor
lods
sub
shrl
mov
popf
cmp
push
add
hlt
sbb
jae
dec
sub
cmp
mov
inc
push
rolb
les
mov
jae
dec
add
outsb
sbb
push
push
pop
cli
cmp
pushf
in
mov
push
test
cmp
movsl
adc
lock
aam
imul
btr
test
pushf
outsl
pusha
and
outsb
pusha
or
je
mov
stos
mov
call
pusha
adcb
xchg
mov
dec
ds
fstps
sahf
js
or
mov
push
mov
cmp
stos
cmp
shll
push
shll
ret
mov
test
lods
and
and
icebp
call
bound
aas
bound
lock
lds
pushf
adc
loop
mov
testl
push
sub
add
inc
jne
adc
xor
mov
xchg
adc
cmpb
jne
fisubrs
mov
arpl
cwtl
fs
rorb
pop
arpl
push
inc
mov
mov
mov
adc
add
sbb
jmp
cmpl
mov
jbe
cwtl
add
repnz
push
pop
es
int3
loop
and
enter
sbb
cmp
lret
push
test
popf
inc
or
jbe
cltd
fstpl
jns
pusha
sub
push
mov
push
adc
cmp
mov
hlt
sbb
cmp
lods
inc
test
loop
and
jle
sarl
dec
arpl
push
pop
mov
pop
adc
xchg
inc
dec
pushf
sbb
loop
scas
mov
cmp
xorl
aaa
loope
cmp
xor
sti
test
divl
or
pop
mov
in
sub
popa
sub
lea
jle
cmp
cmp
adc
imul
fnstsw
outsb
mov
insl
repz
insb
push
rcrb
cmp
lds
push
movsb
mov
je
daa
push
cmpsb
mov
shlb
cmpsl
lret
rcrb
jge
cmpl
out
fbstp
int
sbb
out
sti
test
dec
xor
cmp
xor
loopne
mov
test
xor
mov
dec
inc
cli
and
xor
cmp
test
jo
push
cmp
popf
shlb
adc
xor
mov
lcall
je
mov
or
movsl
out
xor
mov
subl
push
nop
je
mov
dec
inc
mov
inc
xor
sbb
dec
out
jo
int3
mov
jg
movsl
cmp
dec
push
cmp
push
add
fimuls
jo
mov
stos
ds
dec
dec
jno
out
push
sbb
nop
adc
je
mov
les
push
mov
or
aaa
push
xchg
sti
xor
jae
hlt
xor
mov
aam
in
hlt
push
add
adc
xor
dec
push
jo
sub
cwtl
dec
stos
dec
adc
nop
cli
xor
js
fsubrl
clc
inc
mov
mov
je
mov
cmp
mov
jno
or
cli
push
loopne
enter
pushf
jo
jle
jo
pusha
push
push
je
mov
and
cli
call
push
shlb
dec
jl
outsb
pusha
mov
ds
push
inc
jo
aaa
xchg
dec
xor
lock
sub
sbb
mov
ds
push
loopne
lret
dec
pushf
jo
jp
push
je
mov
outsb
cmp
fadd
mov
mov
mov
push
cmp
das
cmp
push
add
hlt
mov
lret
lods
ds
push
mov
dec
pop
jo
aaa
mov
jo
insb
xor
sarb
push
js
pusha
mov
xor
insb
imul
or
cli
push
in
jbe
jge
or
mov
sub
dec
in
or
movsb
sub
ret
mov
cmp
test
les
pop
sub
adc
push
cmp
xor
inc
jo
enter
xor
mov
mov
je
mov
xor
mov
loopne,pt
aam
ret
dec
xchg
jo
push
pop
ds
push
xor
push
mov
shlb
je
mov
pop
inc
mov
cmp
push
or
call
jo
cmpsb
mov
xchg
je
mov
inc
xor
cld
ds
push
out
out
or
push
xor
mov
cmp
push
add
lock
mov
adcb
pusha
mov
aaa
out
dec
push
js
lods
xor
je
mov
cmpsb
xchg
mov
ds
inc
mov
jb
pop
dec
push
jo
aaa
mov
ja
sbb
push
push
add
loop
aam
add
dec
xor
fdivrp
aad
enter
xor
ds
push
mov
or
push
xor
xor
jbe
int
cli
je
mov
shrb
test
fs
push
jo
xor
or
je
mov
mov
mov
adcb
push
mov
es
push
or
fidivs
jp
sarb
xchg
test
xor
cmp
mov
lods
aaa
xchg
mov
xchg
xor
inc
das
mov
test
ret
mov
cmpsb
dec
xor
jo
bound
cmp
mov
psrad
mov
cmp
cmpl
fmuls
sbb
cmpsl
cmp
bound
dec
imul
push
lods
ljmp
or
add
lea
cmp
pop
pushf
jo,pn
imul
iret
test
push
and
and
shr
imul
test
xorl
lret
pop
fdivrs
insb
pop
movsb
cmp
xchg
add
xchg
push
stc
xchg
mov
cmp
sub
dec
adc
lods
inc
in
inc
mov
imul
or
jp
outsb
lods
push
pusha
jae
xor
ljmp
test
cmp
rclb
aaa
andl
or
mov
pusha
xor
outsl
jl
lods
jmp
xchg
in
jns
fistpll
xor
cmp
rcrl
sub
dec
push
sbb
xchg
adc
mov
jne
mov
xchg
cmp
aas
cli
xorl
cmp
xor
pop
sub
mov
fcomi
ret
leave
in
cmpsl
stos
popf
pop
cmp
xchg
out
add
dec
jecxz
outsl
pop
sti
in
adcb
lret
cmp
mov
popa
dec
cmp
and
imul
add
jle
int3
cmp
mov
xor
push
add
mov
popa
sub
mov
dec
cmp
push
xchg
mov
dec
lea
movsl
pop
sub
cmp
fistl
in
cmp
mov
iret
mov
add
or
mov
ds
icebp
cmp
ljmp
stos
mov
cld
inc
pop
out
pop
sbb
push
push
lahf
or
cmp
mov
cmp
repnz
adc
cli
adc
push
arpl
lods
mov
sub
jecxz
out
adc
cmp
cld
cmp
loope
pop
sub
hlt
ret
cmp
pushf
imul
addr16
inc
ret
jae
scas
adc
cmp
xchg
js
jl
pop
mov
xchg
sbb
cmp
es
clc
cwtl
dec
xor
mov
sub
xor
dec
mov
jl
aad
dec
cmp
test
shrb
inc
xor
xlat
in
or
jbe
js
sti
flds
ja
cld
cmp
xor
fcmovnb
hlt
lret
cmp
insb
pop
inc
sbb
popa
subb
sarl
rcll
jg
dec
jb
pop
insb
movsb
inc
test
repz
lds
int
in
dec
sbb
cmp
rolb
cmp
xchg
add
ss
ret
cmp
cmp
es
cmp
inc
xchg
sti
std
out
in
cmp
sbb
sub
xchg
mov
stos
test
mov
aaa
lock
lret
fists
and
lods
das
mov
jae
test
in
add
hlt
and
jmp
sub
cmp
or
cmp
jno
or
and
pop
les
sub
dec
das
inc
fucomp
mov
test
sub
jmp
cmp
arpl
mov
std
xor
mov
nop
inc
or
lea
sbb
nop
shlb
movsl
popa
sbb
enter
loopne
jnp
mov
cmp
imul
mov
mov
jmp
cmp
fimuls
movsl
cmp
adc
adc
mov
inc
pop
inc
subl
mov
inc
dec
push
fidivrl
das
mov
and
cmp
and
inc
fsub
in
inc
add
add
xlat
outsl
repnz
xchg
jle
lret
fs
clc
cmp
jb
andb
cmp
mov
test
je
sahf
in
xchg
xor
dec
insb
xchg
icebp
mov
xor
sbb
jl
in
out
mov
mov
xor
rcrl
lods
xor
xchg
ljmp
mov
sub
cmp
mov
mov
cmp
in
adc
pop
xchg
jmp
or
jp
cmp
lcall
xchg
clc
xchg
aaa
dec
ror
into
xchg
fmull
pop
cmp
in
mov
cmp
sbb
xor
leave
adc
cmp
jnp
loope
jp
bound
dec
popa
jno
lahf
nop
xor
ljmp
lcall
dec
int3
std
aaa
clc
loopne
dec
cmp
inc
jmp
icebp
push
jb
dec
or
cmp
mov
xor
rolb
arpl
stos
push
sahf
pop
dec
aas
cmc
dec
sbb
mov
mulb
insb
flds
cmp
loopne
lods
xlat
lahf
add
les
and
xor
nop
addr16
inc
or
xlat
xlat
cmp
add
cmp
push
adc
inc
jnp
jae
mov
xchg
sub
sbb
mov
pop
pop
pusha
cmp
lcall
xchg
mov
inc
sbb
out
dec
push
mov
andb
pop
pop
cs
in
mov
cld
push
add
movsb
push
xchg
adcl
into
cmp
jae
shrl
out
jecxz
cli
pushf
cmp
push
add
mov
sbb
push
cmp
frstor
pop
inc
daa
xor
or
inc
push
subl
mov
into
cmp
lods
test
in
inc
lret
mov
cmp
cmp
cmp
adc
push
push
subl
xchg
cmp
fnstsw
jle
pop
xchg
je
pushl
mov
stos
pop
mov
test
fcompl
movsb
mov
xchg
cmpsl
dec
cmp
push
test
add
nop
test
cmp
enter
sbb
jecxz
dec
or
insb
ret
cmpsb
je
or
das
cmpsl
fisubrl
mov
xor
rclb
mov
dec
or
inc
data16
cmp
out
mov
cmp
lods
adc
cmp
or
adc
mov
xor
push
cmp
jl
jecxz
test
xor
aas
stos
mov
sub
lahf
push
and
cmp
xchg
in
add
mov
push
push
popf
idiv
iret
inc
fcoml
insb
fdivs
cmp
pop
xchg
cs
popf
cmp
into
sub
pop
push
sub
push
xor
int
cmpsl
adc
data16
insb
fdivrl
in
pop
jo
and
jae
inc
bound
in
jecxz
gs
cmc
sub
subps
lods
cmp
push
xchg
outsb
mov
sub
sub
mov
insb
in
cmp
cld
push
stos
dec
pop
clc
cmp
mov
pop
mov
mov
sub
movsl
jl
in
stc
lock
inc
and
imul
shrl
sub
js
dec
sbb
les
and
cwtl
imul
pop
insl
and
mov
imul
push
rolb
adc
jbe
dec
inc
repz
je
jne
repnz
jge
push
les
ds
push
dec
ret
sbb
cmp
aam
jae
ret
add
dec
adc
in
lods
fidivrl
push
cmp
inc
dec
xchg
dec
into
sub
std
add
xchg
fisubs
out
add
push
jnp
arpl
fsubrl
in
cs
pop
orl
push
mov
fsubrl
ds
in
shrl
icebp
cmp
jecxz
push
xorl
imul
push
mov
lret
lea
aas
push
xor
sub
cmp
aam
pop
push
cmp
lock
mov
xor
pop
ret
aas
xor
mov
into
jg
in
push
cmp
pusha
and
xchg
mov
sbb
xchg
cmp
xlat
loop
insl
stos
jmp
les
cmpsb
shll
addr16
cmp
mov
jne
mov
push
pop
mov
push
cmp
cld
jne
inc
imul
xor
or
sbb
push
ja
cmp
call
aas
jmp
loop
xchg
push
mov
xor
in
mov
cwtl
mov
jnp
mov
cmp
je
insb
add
fistl
xor
aad
clc
insb
and
es
fld
xchg
lahf
sub
jl
imul
pop
movsb
mov
rcrb
sub
lret
jp
lahf
cmpl
stos
or
cmpb
inc
int
xor
xchg
push
xor
bnd
and
pop
mov
js
add
out
cmp
roll
cld
add
lods
add
and
dec
or
les
int
adc
add
adc
or
jno
mov
ret
push
xor
movsl
in
push
fmul
cmp
dec
pop
and
sub
out
xchg
hlt
data16
xor
xor
fnsave
or
xchg
aas
and
inc
inc
cld
out
mov
jge
cmp
jae
in
scas
test
mov
adc
cmp
inc
push
lret
test
sub
push
lret
xchg
push
adc
cmp
xchg
faddp
test
cmp
dec
add
lahf
cmp
iret
fdivrp
pop
mov
jns
bswap
sbb
xor
jnp
inc
cmpsl
bound
scas
jl
subl
cmpb
xor
gs
cltd
and
in
add
pop
cmp
mov
mov
mov
mov
sub
divl
cmpsb
loopne
mov
pop
adc
fdivrl
adc
pop
jecxz
cmp
push
mov
add
adc
cmp
xor
sbb
mov
adc
and
fisubrl
adc
gs
adc
and
inc
jge
inc
into
push
pop
in
lretw
lods
mov
iret
out
icebp
das
add
mov
testl
mov
inc
mov
fcomp
adcb
mov
xlat
pop
mov
push
dec
ficomps
jg
cmp
test
cmp
int3
lret
out
or
jle
cmp
sub
mov
lock
repnz
cmp
mov
int3
add
cmpsb
cmp
xor
dec
mov
mov
inc
lea
out
lock
jmp
arpl
inc
stos
mov
imul
pop
fsubrs
pop
sub
dec
jo
mov
adc
cmpsl
fsubr
inc
fnstsw
push
sub
mov
sbb
sbb
int3
mov
cmp
insb
rclb
cmp
mov
cmp
pminsw
mov
push
imul
push
jl
xor
outsb
cmp
testb
scas
xchg
jae
lods
dec
ror
in
lods
and
js
xchg
inc
inc
lea
mov
push
in
push
mov
call
xorb
loop
daa
fs
mov
lods
add
rcrb
mov
bsf
cmp
mov
xor
pop
push
add
imul
insl
out
test
cmc
xchg
cmp
jnp
shrl
jo
popa
mov
cmp
sub
ljmp
daa
sub
cmp
ja
mov
lahf
dec
sub
push
push
repz
sub
call
cmp
test
out
lock
loope
cli
mov
cmp
xorl
cmp
int
push
mulb
push
outsl
xchg
fs
or
and
sbb
nop
cmp
push
jne
add
push
pop
xor
cmp
cli
jbe
push
ret
cmp
add
xchg
fidivs
cmp
aas
movb
lods
xor
rcrb
cmp
push
movsb
xchg
mov
mov
xor
fldenv
xlat
dec
mov
lock
add
aad
xor
xchg
xor
add
mov
cs
inc
xchg
push
fdivl
pop
mov
mov
mov
push
lods
loope
and
in
mov
xor
push
arpl
sub
bnd
dec
jmp
shrl
mov
pop
dec
leave
movsb
mov
jle
ds
pushf
popf
cs
lea
lcall
dec
sbb
xchg
cmp
mov
bound
dec
cmp
frstor
add
dec
clc
push
int
xchg
outsb
dec
insb
bound
pop
cmp
cmpsb
sti
sahf
test
into
or
cmp
or
jbe
xchg
mov
in
sub
push
cmp
xor
iret
notl
mov
les
cmp
test
test
dec
fs
cmp
lods
lret
inc
cmp
push
pop
sarl
ss
imul
outsl
pushf
and
cli
movsb
pop
daa
add
cs
mov
cmpsl
inc
cmp
aam
dec
shrd
cmp
or
mov
adc
cwtl
sbb
and
in
jl
lret
cpuid
sarb
xor
and
xor
cmp
jo
cltd
cmp
mov
jb
adc
repz
leave
pop
hlt
jb
jmp
enter
sub
inc
test
into
cmp
adc
gs
je
ss
inc
or
mov
push
cmp
sbbl
push
push
adc
int3
inc
cwtl
mov
sub
inc
inc
movsb
mov
jo
push
xor
xor
add
clc
test
shlb
lods
push
shll
dec
pop
mov
enter
inc
pop
and
ja
ds
je
mov
pop
jo
cmp
mov
enter
or
push
fmull
cmp
icebp
ss
mov
and
out
arpl
sub
mov
in
xchg
das
bnd
push
movsl
incb
pop
mov
lea
loopne
in
test
fldt
xchg
pop
mov
pushf
pop
loope
cmp
gs
dec
push
andl
push
xchg
stos
dec
lcall
jge
cmp
fldenv
or
cmp
in
xor
je
jne
aas
xor
xor
xor
dec
xor
icebp
mov
scas
adc
into
leave
xor
cs
out
filds
cmp
popf
int3
sti
flds
jae
pop
xchg
xchg
cmp
repnz
jge
cmp
faddl
leave
pop
sbb
cmpsl
sub
push
sub
mov
sbbl
mov
add
jle
and
xorb
jo
mov
push
sub
pop
adc
pop
lahf
mov
stos
xor
pop
xor
int
sub
or
imul
fbld
cmp
iret
pop
dec
arpl
cmp
mov
xchg
xchg
stos
pushf
cmp
inc
js
add
mov
je
mov
clc
and
mov
dec
cmp
pop
sbb
ret
data16
cmp
mov
clc
iret
xchg
std
leave
aas
roll
pmullw
cmp
xlat
roll
jmp
insl
cltd
jl
filds
and
push
xchg
push
jo
lret
ror
or
add
subb
sub
mov
cmp
jp
xlat
ja
data16
fisubrs
call
xor
xor
or
sahf
cmp
pop
inc
insb
mov
push
inc
sub
inc
push
das
icebp
adc
sub
mov
arpl
cmc
and
ss
andb
mov
test
sbb
ja
cmp
dec
mov
mov
add
add
xor
dec
adc
mov
bound
hlt
mov
xor
mov
fwait
dec
inc
stos
dec
mov
cli
test
jl
jnp
cmp
sbb
dec
mov
xor
push
je
subb
xchg
dec
rclb
cli
iret
mov
xchg
fnstcw
inc
xchg
cld
pushf
cmp
lret
dec
icebp
fmul
add
lahf
orl
lods
sbb
test
pushf
cmp
ljmp
cld
insl
repnz
lods
nop
mov
xor
jecxz
pop
addr16
mov
enter
dec
sub
push
mov
add
fstpt
dec
repnz
orl
cmp
test
sti
addr16
xchg
popa
daa
shrw
iret
js
pop
jmp
int
mov
pop
push
cld
cmp
or
xor
les
popf
pop
xor
repz
dec
movsb
cmp
jle
or
cs
sub
js
mov
sbbl
mov
and
aaa
xor
fdivrl
ljmp
inc
add
pop
mov
stos
call
sarl
dec
lods
in
test
ds
hlt
in
mov
outsl
sub
pop
dec
pop
repnz
push
mov
lret
lcall
cwtl
cmp
mov
pop
loop
fdivrl
inc
jns
mov
jmp
xorb
and
mov
mov
and
xor
pop
pop
inc
cs
mov
mov
and
in
je
movsb
daa
add
cmp
jmp
aad
inc
fs
cmp
xchg
lds
and
sbb
cltd
push
mov
push
or
xchg
insb
cli
jp
lods
jbe
dec
push
dec
lods
cld
push
fstl
xchg
mov
xor
shlb
lods
xlat
ss
imul
inc
pop
xor
push
hlt
lock
int3
mov
fwait
xor
cmp
psrad
mov
cmp
cmp
and
cs
scas
pop
xor
cwtl
outsl
mov
push
mov
push
test
cmp
lods
inc
leave
std
ret
cmp
push
loope
or
xor
aad
jg
pop
cmp
insb
cmp
mov
or
mov
fildl
inc
add
cs
xor
jecxz
cmpsl
sub
loopne
cmp
rcll
roll
in
movsl
in
stos
loopne
repz
and
lock
cmp
sub
aas
mov
pop
icebp
pop
pop
cli
xchg
cmp
mov
xchg
das
int
rcl
adc
cmp
cmp
cmpsb
adc
add
pusha
lods
push
add
enter
out
lods
push
rcr
add
mov
and
sub
int3
iret
mov
pushf
or
inc
ljmpw
adc
lret
inc
and
cmpsl
imul
xor
sbb
call
negl
std
test
cmp
push
testb
out
out
mov
xorb
or
cmp
fdivrs
push
cmp
jmp
subb
pop
test
cmp
pop
add
arpl
push
pop
cmp
or
sbb
ret
inc
jnp
and
rol
cltd
cs
out
mov
scas
sbb
xchg
mov
push
pop
inc
jnp
lahf
or
pushf
adc
cmc
push
jo
push
push
fnstenv
test
xchg
add
inc
mov
dec
or
bound
adc
sbb
sub
mov
cmp
outsb
popa
xor
fsubp
jmp
inc
cmp
daa
fdivs
mov
hlt
mov
mov
pop
sbb
pop
inc
jne
cmp
add
cwtl
push
loop
mov
subb
xor
pop
stc
in
outsb
jbe
adc
in
ljmp
jns
sti
push
fidivl
lods
inc
cli
inc
push
jle
aaa
and
cwtl
sub
jecxz
adc
cmp
in
shlb
xchg
iret
sbb
lret
std
and
les
rcrl
add
rcrb
inc
cmp
add
pop
insb
pop
and
cmp
test
xor
cmp
cmc
and
push
sub
pop
fwait
adc
cmp
jle
daa
jecxz
xchg
in
cs
mov
cmp
pop
mov
cmp
add
and
cmp
mov
test
or
cmp
out
sahf
push
sbb
xchg
mov
cmp
aaa
fs
or
xchg
fsubrl
sub
cmpb
or
jo
decl
fbld
fldenv
mov
sbb
iret
mov
negl
rclb
mov
imul
xor
jmp
mov
cltd
mov
bound
mov
ss
pop
ret
cmp
and
daa
ljmp
mov
jge
lea
push
add
test
add
mov
sub
inc
pop
or
dec
jae
push
in
cmp
sub
ret
call
add
hlt
xchg
outsb
inc
pop
push
inc
xchg
cs
stc
or
cltd
call
xchg
inc
loope
iret
xchg
xor
sti
adc
xchg
sbb
ret
dec
dec
pop
sbb
sub
in
inc
repz
stc
mov
and
dec
push
or
cmp
xlat
inc
or
sbb
dec
dec
call
dec
adc
and
test
aas
xor
mov
popa
add
iret
pop
mov
and
aaa
repz
mov
xor
jge
lods
cwtl
lea
xchg
cmp
mov
sbb
xchg
push
mov
or
cmp
inc
nop
ffree
stos
clc
cs
movsb
mov
push
lock
cmc
add
and
xchg
cmp
mov
push
pushf
and
leave
nop
mov
cmp
add
aas
imul
adc
cmp
iret
or
sub
scas
sub
sahf
cwtl
pop
mov
sbb
movsb
mov
pop
dec
mov
xchg
dec
data16
mov
dec
xchg
cmp
lahf
dec
jp
xor
rorb
mov
sub
push
ret
or
out
cmp
push
rorb
and
pop
repnz
pop
rclb
or
lret
inc
xor
xor
aaa
in
fcoml
xor
dec
fdivrp
push
pop
push
iret
cmp
in
add
jnp
jno
mov
ret
inc
xchg
int
dec
adc
push
insb
mov
andl
cmp
clc
mov
es
adc
leave
cmp
xor
lcall
cmp
adc
adc
cs
cwtl
pop
xor
xchg
sub
sub
insb
loopne
repz
adc
scas
mov
cmp
or
jo
mov
jp
icebp
jae
pop
pushf
dec
xchg
ret
lahf
lds
adc
les
lea
mov
rcrb
dec
pushf
out
cmp
dec
outsb
add
lcall
dec
sahf
and
lods
test
fstl
cmp
or
xor
pop
out
cmp
sub
clc
cltd
je
cmp
cmp
dec
mulb
scas
or
xchg
cltd
or
es
insb
sub
sarb
mov
dec
mov
das
test
pop
jmp
imul
push
mov
aam
mov
cmp
inc
fcoms
or
out
clc
js
pop
sbbb
sarb
push
lods
fmuls
es
pop
out
push
stos
xor
cld
shlb
data16
mov
cmp
das
daa
jmp
push
hlt
cmovg
ss
or
add
push
and
cmp
jb
roll
mov
or
shlb
mov
icebp
in
dec
dec
xchg
mov
push
pop
and
cmp
lcall
xor
push
mov
lds
or
xor
sbb
test
out
mov
imul
cltd
in
sbb
xchg
addr16
fsubrs
nop
inc
movsb
pushf
cs
xchg
jae
jecxz
or
and
jge
fcoml
js
mov
sub
in
aaa
sub
fistps
cmp
dec
in
loope
cmp
pop
insl
hlt
dec
mov
inc
inc
adc
xor
pop
in
push
or
mov
lret
pop
add
push
xor
sarb
ret
lods
stos
cmp
aad
gs
mov
lods
pop
inc
je
push
sub
sbb
mov
jmp
jecxz
push
push
int
shr
mov
ret
iret
movsb
xor
loop,pn
lods
sub
sbb
lds
and
dec
nop
dec
call
mov
adc
test
pop
das
pop
mov
cltd
insb
jecxz
inc
adc
popf
cmpsl
cmp
push
cmp
jbe
mov
movsl
out
aaa
pop
call
insl
push
cmp
stos
add
push
add
cmc
mov
dec
jno
inc
jg
fistpll
xchg
cmp
ret
pop
xchg
jge
inc
fwait
adc
fnstenv
dec
pop
jge
cmp
dec
pop
dec
adc
lahf
inc
aas
xchg
cmc
sahf
jl
xor
inc
jecxz
cld
outsb
mov
lea
xor
and
cmp
test
fiaddl
push
sub
cmp
mov
int
ljmp
dec
fistl
nop
push
hlt
cmp
push
xor
or
jl
ret
movsl
cmp
aas
lea
dec
jmp
sbb
test
sub
mov
xchg
or
mov
cmp
pop
movsb
dec
mov
jno
dec
aam
test
pop
data16
dec
or
pop
fdivrs
lret
pop
imul
repnz
xor
and
cmp
bound
pop
daa
ret
lea
gs
cmpsl
mov
or
xor
add
pop
pop
cmp
mov
jbe
sbb
jp
aam
pop
pop
pop
add
pop
push
push
cmp
add
inc
cmp
sub
sub
lods
insb
or
scas
or
gs
cmp
inc
and
pop
adc
aaa
pop
das
xor
repnz
ljmp
push
dec
jg
add
ret
push
cli
or
in
loope
test
dec
addr16
lods
sub
das
and
sub
mov
insb
idiv
and
and
mov
lods
cld
add
ficompl
adc
mov
sub
adc
mov
and
jbe
int3
cmp
xor
cmp
inc
fldenv
dec
xchg
xor
sub
lea
insb
push
mov
pop
test
lods
cmp
decb
mov
incl
js
and
push
out
pop
mov
std
add
js
stos
or
cmp
les
jecxz
pop
push
cmp
cmc
dec
dec
cmp
mov
cmp
lods
sbb
pop
cmp
ficomps
js
out
cmp
inc
and
sarl
dec
or
push
xchg
outsb
ja
add
cmp
and
lods
cmp
aas
jbe
test
or
sbb
dec
dec
sbb
pop
scas
fs
outsl
cmp
xor
xchg
mov
lock
roll
aas
orl
push
jl
outsl
mov
sbb
pop
insl
pushf
es
imul
fcomi
cmp
cmpsl
frstor
xchg
dec
xchg
gs
mov
lods
xor
daa
stc
cmp
mov
loopne
je
mov
das
arpl
in
loope
xor
shrb
cmp
and
dec
lods
pop
cmp
enter
push
xor
add
xor
cmp
and
add
sub
rol
cmp
mov
push
stc
stc
cmpb
pushf
lea
jne
neg
pusha
xor
bswap
cwtl
mov
clc
call
stos
in
push
mov
sti
enter
cmp
pop
pusha
push
add
jmp
mov
pop
dec
loope
sbbb
or
inc
mov
xor
ss
mov
mov
jnp
and
sub
push
cwtl
pop
repnz
stos
jns
mov
lock
movswl
jg
xchg
jp
inc
and
pop
out
call
pop
push
fldcw
mov
and
inc
mov
xchg
dec
jecxz
cmp
xchg
mov
and
or
sub
ss
or
mov
or
xchg
insb
shl
mov
test
pmulhw
push
loope
in
aaa
xchg
sar
mov
aas
and
mov
leave
mov
aas
jle
pop
or
push
adcl
cmpsl
jno
adc
cmp
cmp
shrb
adc
fistpll
mov
mov
adc
loop
xor
pop
or
out
pop
adc
push
cmpsl
shrl
out
dec
dec
daa
sub
loop
test
loop
pop
out
adc
data16
mov
cmp
out
xchg
aas
push
mov
out
dec
js
lea
cli
sub
xor
inc
iret
sub
mov
icebp
xor
mov
lea
mov
fcomps
add
test
mov
xchg
je
nop
nop
shl
sbb
das
push
mov
mov
adc
xchg
fnsave
call
ss
sbb
incb
adc
sbb
mov
inc
push
stos
add
lods
jmp
mov
inc
cmp
adc
lret
sbb
stos
mov
ss
pop
cmp
into
addb
ret
scas
jnp
aad
jne
push
call
xor
mov
int3
out
bnd
icebp
daa
movsb
lds
int3
lea
pusha
jmp
out
scas
adc
sti
lret
add
test
test
jmp
jmp
or
icebp
push
mov
fisttps
push
cmp
outsl
push
xchg
lret
mov
mov
nop
bnd
ret
push
cmp
jbe
rcll
loope
pushf
lds
in
jmp
out
outsb
decl
lahf
xchg
cmp
cmc
rcl
inc
pop
lds
jb
jg
mov
cmp
push
je
adc
movb
xchg
mov
fidivrl
mov
push
mov
pop
xorb
dec
xchg
or
int3
loop
sbb
lcall
test
mov
mov
in
mov
inc
outsl
xor
xor
sbb
fs
or
cmp
fwait
dec
fldt
adc
jo
jg
mov
xor
xchg
push
cltd
rcl
test
push
sti
push
xchg
xor
mov
pop
push
hlt
pop
mulb
xchg
pop
mov
inc
pop
sarl
mov
adcl
or
add
aad
push
mov
mov
jecxz
fdivrl
scas
cli
jbe
into
sbb
sub
xchg
stc
test
fwait
mov
mov
mov
xchg
xor
sub
or
test
in
xor
mov
xchg
jne
and
imul
je
and
repnz
fimuls
out
add
lret
jmp
pop
pop
test
jb
decl
add
mov
repnz
pop
xchg
push
xor
insb
je
setg
int3
outsb
xchg
and
pop
mov
es
mov
stos
cli
aas
and
xchg
xor
aad
push
bswap
in
xchg
in
adc
xchg
inc
push
es
adc
pop
ret
pushf
push
in
push
add
test
jmp
push
cmp
pusha
repz
cmp
pop
inc
and
mov
and
inc
shlb
sbb
xlat
mov
push
cmp
in
cmp
and
outsb
rcl
cmp
inc
cmpb
sbbl
and
jb
arpl
sar
pop
or
add
inc
cmpxchg
cmp
fiaddl
dec
jl
scas
xchg
cmp
lret
or
and
xor
leave
or
insl
sti
mov
sub
mov
push
rcll
cli
jmp
and
mov
sbb
add
les
insl
add
test
push
out
add
and
push
stos
in
pop
fidivs
ret
ljmp
push
add
add
insl
push
repnz
insl
xchg
sub
lret
fsts
ret
aad
daa
add
mov
sub
push
not
testl
or
shlb
pop
mov
pop
dec
jg
in
movsl
insb
movsb
adc
lods
xchg
mov
notl
push
int3
mov
out
xchg
nopl
push
out
mov
mov
jmp
mov
scas
lock
nop
xlat
lret
add
dec
dec
xorb
xchg
inc
cmp
int
shlb
popf
scas
add
push
in
test
xchg
and
out
xchg
fstl
cmp
or
and
add
imul
mov
cmpsb
in
add
jne
xorb
jmp
and
daa
or
adcb
mov
xor
jo
xchg
test
popf
daa
shll
aas
and
hlt
push
movsb
jg
jns
mov
lea
das
cmp
fmul
xchg
mov
or
mov
xlat
push
pusha
xchg
mov
inc
jecxz
mov
dec
sbb
xor
cs
lea
push
lea
call
pusha
call
rorb
mov
mov
sub
fiadds
mov
jno
mov
push
inc
dec
aad
popa
lods
jp
gs
push
or
testl
mov
mov
call
xchg
movsl
stc
sub
xlat
insl
add
push
mov
jmp
add
jb
cmpsb
push
outsb
cltd
xor
test
pop
mov
and
jns
xor
mov
sub
mulb
fidivrl
adc
adcl
mov
dec
xchg
iret
add
pop
mov
ljmp
xchg
lret
pusha
subb
adc
aas
cmp
fldcw
movsl
scas
jmp
sarb
jne
loope
repnz
dec
in
cli
and
and
mov
adc
jns
mov
and
cmp
xor
dec
adc
jbe
mov
or
lods
xchg
jle
std
lahf
ret
xchg
lret
push
adc
les
cmp
orl
clc
mov
fcompl
leave
mov
shlb
jmp
loopne
cmpsb
xor
int
push
jle
xchg
add
sub
mov
mov
das
xchg
movsb
repz
stos
sbb
call
xchg
jne
loop
movsl
xchg
repz
mov
mov
lea
test
in
cmp
add
lcall
xor
jne
rcrb
xor
mov
leave
cmp
mov
cld
cs
xor
lods
fs
pop
or
dec
adc
pop
scas
sbb
pop
mov
iret
mov
divb
dec
in
outsb
mov
scas
and
outsl
mov
push
sub
dec
imul
inc
divb
xchg
scas
mov
dec
pop
xor
fcoml
leave
mov
call
mov
mov
int3
adc
jb
mov
mov
nop
nopl
and
popa
and
sub
loope
dec
scas
add
xor
jns
das
fld
int3
xchg
sub
xchg
add
fdiv
adc
dec
jmp
cmpsb
cld
xchg
mov
jbe
cwtl
aas
adc
shl
sbb
jl
andl
stc
cmp
call
jp
jns
mov
pop
mov
push
push
xchg
xchg
inc
inc
and
cmp
lea
sbbb
jbe
mov
hlt
negb
sti
out
sarb
and
push
pop
std
xlat
or
xchg
nop
xchg
ret
jecxz
jmp
or
inc
push
scas
ss
in
pop
jne
adcl
or
shrl
in
sbb
inc
pop
outsl
hlt
cltd
iret
mov
repnz
clc
pushl
cmp
movl
lea
jbe
lea
btr
or
mov
clc
bswap
add
and
rcr
mov
adc
add
clc
cmp
stc
add
movl
inc
dec
sar
lea
mov
cmp
push
call
mov
dec
cmp
stos
inc
mov
inc
ficoml
adc
xchg
mov
call
add
std
xchg
pop
rolb
mov
mov
inc
leave
or
pop
xchg
cmp
repz
push
jmp
cltd
cld
sti
repnz
mov
or
imul
mov
dec
shlb
or
cmp
aad
into
xor
ljmp
jnp
and
ret
xchg
sti
pop
or
cltd
aas
or
popa
fimuls
lods
mov
sbb
insb
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
je
add
inc
and
or
cmp
add
outsb
shl
pop
mov
je
or
jae
or
xlat
push
dec
aad
scas
xor
pushfw
push
push
xchg
pop
sbb
inc
push
cmp
push
popa
pop
mov
bound
scas
pop
sub
sub
stos
jns
xchg
mov
js
shll
xor
xor
cltd
aad
sti
lret
stc
clc
jo
mov
fs
or
mov
aad
add
push
add
mov
mov
movb
pushf
movb
pushl
ret
repnz
sbb
dec
push
not
sbb
clc
mov
xchg
pop
jecxz
iret
xor
mov
jmp
inc
ja
mov
push
dec
jo
mov
dec
push
mov
dec
arpl
or
ror
adc
outsl
call
jmp
or
sub
xor
cltd
xchg
pusha
jp
lds
mov
dec
push
push
and
pop
loope
xor
jno
lcall
popf
push
jg
jb
add
xchg
sub
outsl
pop
pop
or
aaa
cmp
daa
loope
mov
sub
dec
ror
sar
shl
mov
cmp
cmp
cmc
cmc
cmpb
jmp
pushl
popl
bt
pusha
push
pushf
cmp
jmp
loopne
je
mov
imull
in
dec
jae
dec
ret
dec
testl
js
aaa
gs
mov
stc
mov
fst
pop
mov
in
sbb
push
or
or
nop
mov
jns
lret
and
dec
js
rolb
shlb
fcompl
dec
add
mov
adc
mov
add
faddl
fdivr
inc
xor
cmp
and
pop
mov
jecxz
mov
repz
cmp
stos
mov
idivb
repnz
loopne
loopne
gs
enter
xchg
andl
pop
jmp
mov
call
pop
std
std
xchg
imul
ret
jo
scas
pop
ror
popf
sub
pushf
mov
pop
divb
xor
cmpb
jge
imul
and
add
pop
push
int
mov
pop
xchg
out
test
les
xchg
adc
sbb
inc
inc
mov
push
cmpsl
test
cmp
jnp
mov
fcomps
jbe
enter
roll
shlb
outsb
stos
jl
jne
in
push
sahf
shlb
and
cmp
ret
fstps
sub
inc
xchg
jno
stc
cli
add
adc
int
test
inc
aaa
mov
dec
sub
push
movsb
jmp
test
stos
rorl
jns
addr16
sub
push
jge
push
push
and
mov
je
fcomps
imul
sar
xchg
pop
push
xor
das
sbb
mov
jo
jmp
and
jae
scas
adc
add
xor
mov
mov
cmp
and
inc
xor
out
das
outsb
mov
lcall
inc
aas
rol
stc
mov
js
jl
dec
int3
pop
mov
daa
jge
push
jecxz
dec
or
mov
test
inc
out
int
rorl
xor
leave
aaa
lods
add
loope
sbb
dec
and
int3
fs
jns
into
pop
repz
outsb
push
js
outsl
lret
dec
call
cmp
and
ficoml
xchg
mov
push
and
lret
scas
xchg
sub
into
lret
push
loopne
pop
int
mov
xchg
insl
adc
sarb
sahf
sarl
xor
out
fstpl
xor
setae
inc
push
sbb
and
cli
jmp
gs
mov
adc
mov
cmp
cmpsl
adc
xchg
or
sti
push
lret
jecxz
jmp
mov
fcoms
movsb
push
sub
push
pushf
in
loopne
xchg
push
dec
xchg
jne
dec
js
lds
loop
ret
sti
in
lods
adc
mov
cmc
push
xchg
repnz
repz
mov
sbb
js
and
add
push
mov
push
lea
call
pushf
mov
pusha
pusha
push
movb
lea
jmp
daa
mov
gs
push
mov
imul
xor
rcl
insl
cmp
sahf
jecxz
inc
mov
es
sti
pop
hlt
inc
sbb
hlt
cmp
mov
inc
fnstsw
push
push
push
jbe
adc
movswl
aaa
shll
xchg
cmpl
jnp
addr16
das
mov
dec
repnz
out
dec
jbe
fstpl
mov
cmp
dec
jg
out
leave
addr16
push
push
jns
push
in
adc
sbb
xor
pushl
lea
je
push
pushf
push
push
add
pushf
cmp
pushf
jmp
bswap
bsf
adc
push
and
or
mov
rcr
call
lods
call
lea
jne
shl
sub
rcl
mov
mov
add
rol
push
jmp
push
pusha
push
push
lea
call
call
sub
dec
movsb
add
pop
pop
and
nop
xchg
rclb
sub
jno
xchg
cmp
aam
mov
rolb
mov
push
jle
jmp
testl
xchg
xor
pushf
sub
and
cmp
cli
adc
popf
and
das
add
pushf
jne
es
cs
lods
xor
jno
and
push
sbbl
incl
adc
adc
ss
outsb
pop
jns
loopne
xchg
rcl
stos
movsl
int3
loop
push
mov
call
arpl
in
nop
nop
pop
xchg
pop
or
dec
jge
popa
mov
xchg
test
nopl
cwtl
mov
push
es
sub
dec
add
inc
in
adc
dec
sbb
jp
mov
js
jecxz
in
rol
xchg
sbb
inc
inc
sbb
int
push
mov
jmp
stc
bsr
pushf
rcl
mov
test
bt
stc
cmpb
call
mov
dec
push
jnp
add
stos
jne
ljmp
sahf
repz
or
nop
shrb
mov
jnp
bndstx
cltd
ljmp
inc
or
inc
adc
aaa
lahf
mov
pushf
stc
pop
scas
pop
and
rcrl
fidivs
scas
or
or
sbb
out
pop
movsl
jne
mov
xor
lods
lcall
push
mov
inc
mov
mov
dec
daa
dec
push
jbe
fistps
push
dec
hlt
psrad
mov
stos
lods
sbb
xchg
jmp
test
lahf
cmpsb
pop
orb
orl
pop
inc
shlb
push
adc
fs
adc
push
push
dec
out
gs
rcrl
adc
mov
inc
mov
pop
sbb
pushl
add
inc
jb
mov
adc
dec
out
rolb
dec
dec
cld
pop
jo
push
cmp
jns
cld
aam
jmp
int
adc
jnp
arpl
add
js
push
lret
xor
cwtl
fcmovnu
aam
lock
jl
xchg
xchg
adc
mov
mov
ss
cmp
fisttpll
xlat
pop
push
pop
ret
pusha
daa
gs
sbb
pop
addr16
add
pop
outsl
dec
mov
mov
pushf
bt
cmpb
pushf
movb
movb
pusha
lea
jne
das
xor
stc
movsbw
ror
mov
stc
rcl
sub
and
add
mov
call
int3
in
test
mov
jecxz
add
or
xor
mov
lock
adc
dec
std
lret
mov
pop
jle
mov
xchg
lods
mov
adc
push
xor
rorl
arpl
inc
lcall
cs
lds
add
pop
push
dec
pop
mov
rolb
not
aas
outsb
mov
mov
test
mov
test
fldenv
scas
push
es
and
and
mov
fwait
push
dec
pop
mov
addb
cltd
adc
shrl
repnz
stos
pop
or
push
popa
xchg
into
mov
jecxz
cmp
add
mov
arpl
repnz
add
lea
je
cmp
cmc
add
test
pusha
add
jl
cmp
pushf
lea
jb
clc
bt
cmp
push
lea
jae
rol
mov
cmc
mov
adc
sbb
pusha
mov
mov
pushf
xor
stc
bt
repnz
pusha
lea
jne
sar
setno
or
mov
rcl
add
sub
bsr
shr
push
shrd
lea
push
sub
pusha
jmp
je
aaa
xor
mov
mov
cmp
addr16
mov
stos
insb
sbb
out
pop
xchg
mov
lret
scas
jl
xor
jne
lods
arpl
adc
shll
cmpsb
sub
sub
sbb
xchg
fldl
mov
and
clc
out
dec
adc
dec
popf
imul
mov
clc
fdivs
pand
in
repnz
fistpll
in
scas
xchg
lds
les
leave
cmpsb
or
xchg
hlt
add
loope
fwait
fs
push
ret
xchg
push
push
push
stos
je
movsl
stc
fistps
add
ret
mov
daa
dec
mov
xchg
push
bound
xor
insl
xchg
sub
fsts
push
sbb
or
mov
pop
out
pop
rorb
lods
out
cmc
jnp
fmuls
pop
out
sub
pop
enter
les
loope
mov
sub
js
xchg
bound
mov
mov
pop
incl
inc
aas
mov
sbb
addr16
jb
jle
je
xor
rol
push
push
mov
orb
sbb
sub
xor
cmp
loopne
outsb
je
xchg
sub
orl
jmp
aam
dec
jno
jmp
and
loope
mov
or
xchg
cli
fstl
add
mov
addr16
adc
lahf
mov
pop
into
xor
out
repz
or
cmpsl
movsb
jecxz
mov
adc
loope
xchg
insb
testb
lcall
dec
mov
cmp
icebp
xchg
and
adc
mov
push
in
ja
das
inc
mov
xchg
sub
mov
test
jnp
test
add
and
push
addb
and
mov
test
lahf
into
lock
mov
test
jne
cwtl
cli
sub
cli
inc
int
outsb
cs
roll
test
shrb
cmp
sahf
sti
faddl
dec
pop
xor
sarb
jge
mov
fmull
fidivs
mov
push
xor
mov
dec
sub
cld
je
mov
xchg
inc
ret
push
movsb
cmp
cmp
es
mov
xor
sbb
jge
sub
and
adc
or
add
popl
pusha
pop
jbe
and
add
and
je
bt
stc
cmp
sub
pusha
clc
stc
cmp
jmp
mov
dec
mov
repnz
xor
push
or
and
xor
pusha
add
xor
fisttps
mov
jg
rclb
add
popf
cwtl
and
movsb
rcrb
sub
movb
add
sub
sbb
idivb
or
out
pop
adc
jle
test
enter
fisubl
mov
incb
in
fisttpl
and
dec
jmp
pop
stos
sahf
sub
dec
shlb
test
mov
and
cli
adc
cltd
cli
cld
aaa
test
mov
pop
lret
filds
add
cltd
lods
es
call
cmc
negb
pop
adc
mov
sahf
sbb
into
sbb
icebp
and
arpl
enter
and
ja
stos
jp
addl
lds
sbb
scas
push
ficomps
xchg
push
loop
pusha
mov
call
pusha
lea
jp
cmp
call
pusha
mov
jmp
mov
cmc
clc
shr
cmc
test
cmp
push
pusha
push
movb
lea
je
clc
cmp
jmp
push
shl
mov
dec
mov
imul
pop
sub
pusha
jecxz
lahf
jne
int
push
sub
loopne
jo
aam
sbb
fwait
movsl
mov
imul
xchg
pop
pop
imul
sti
push
arpl
stos
mov
push
jns
push
xlat
inc
lods
rcr
int
push
mov
enter
test
sub
mov
les
mov
leave
and
and
mov
mov
in
jbe
test
test
adcl
add
sbb
xchg
fisubrs
or
repnz
sbb
adc
add
insl
pusha
mov
pushf
pushl
ret
popa
mov
mov
add
orb
data16
adc
nop
bound
loope
inc
cmp
ss
pop
xor
cmp
sub
inc
fsubs
std
addr16
add
sub
rolb
mov
pop
pop
mov
mov
mull
movsl
mov
mov
in
pop
lods
js
mov
xor
mov
xchg
lahf
jae
xor
dec
pop
jb
pop
cltd
adc
mov
xor
fldlg2
add
andl
pop
inc
mov
ljmp
movsb
pushf
xor
jb
xor
adc
pop
jns
pop
push
adc
dec
ja
xor
mov
pop
adc
sbb
lret
and
mov
adc
repnz
dec
fistl
add
sahf
mov
mov
jnp
and
jle
hlt
fmulp
mov
in
jmp
js
xchg
adc
inc
jne
xchg
or
push
mov
bound
loop
test
mov
mov
fsubrl
nop
das
mov
mov
or
stos
sti
aaa
xor
sbb
dec
sahf
fbstp
lcall
add
data16
and
fdivrp
bnd
insl
inc
adc
lods
mov
and
jg
mov
jmp
ja
push
mov
arpl
std
fcmove
push
insl
pop
and
fcmovnb
or
std
mov
mov
xchg
jg
cltd
mov
dec
stos
xchg
js
call
cmp
lret
and
dec
sub
fisubs
add
fdivrs
loop
loope
repz
push
cwtl
push
push
lea
jmp
jp
push
mov
sub
das
daa
push
inc
sbb
jl
adc
imul
movsb
mov
xor
xor
jbe
adc
xlat
push
andl
and
inc
inc
mov
int3
cmovbe
insl
and
mov
hlt
das
sub
jmp
stc
sub
ret
mov
enter
lock
cltd
dec
push
and
add
jmp
mov
jecxz
mov
jl
mov
fisttpl
mov
or
adc
ret
ficoms
mov
mov
inc
mov
mov
mov
mov
inc
and
jp
mov
pop
pop
pop
dec
fdivrs
jnp
leave
insl
inc
fnsave
push
shrl
and
mov
jo
mov
mov
push
or
imull
cmp
pop
jno
hlt
inc
iret
mov
xor
cmp
push
gs
xchg
stos
lahf
xor
xchg
pop
in
jae
repnz
mov
test
das
std
lds
dec
pop
mov
push
dec
pop
xlat
jne
pop
or
and
icebp
cmpsl
ss
inc
ja
or
jo
push
cmp
jbe
and
out
ja
aaa
cvtpi2ps
js
idivb
je
sti
mov
pop
insl
lret
inc
inc
xor
notb
iret
jmp
or
out
sbb
imul
dec
pop
sub
xlat
test
pop
repnz
stc
cs
add
xchg
aam
mov
cmp
pop
ret
xor
ficoms
sbb
leave
dec
mov
xor
and
or
pop
mov
mov
icebp
and
xor
dec
push
scas
jge
or
xor
pop
repz
xchg
movsb
xchg
inc
mov
mov
mov
sub
cmpb
jge
fidivs
mov
xor
adc
pop
in
sub
pop
dec
push
sub
jb
arpl
mov
push
adc
add
xor
mov
push
icebp
cs
mov
pushf
pop
pop
cmp
sub
push
cwtl
sub
adcl
mov
jp
inc
cli
mov
fs
inc
mov
mov
out
stc
cmpsb
pop
inc
or
sub
out
loopne
sti
inc
ret
push
cmp
loopne
std
lods
cmpb
sbb
mov
lcall
mov
or
addr16
testl
ljmp
imul
and
test
cli
mov
out
pop
dec
les
xor
mov
adc
inc
cmp
sub
lcall
fs
out
push
or
sbb
cmp
js
add
ret
sub
xchg
lods
or
jmp
xchg
daa
scas
lret
lods
cmpb
sarl
enter
enter
mov
or
pop
int3
mov
pop
mov
sti
push
inc
loop
push
xlat
movsl
testl
lea
push
lahf
inc
repz
leave
pop
cs
or
mov
enter
mov
inc
lods
test
jae
sbbb
xchg
ja
sti
and
cmpsl
add
add
lock
add
and
arpl
sbb
or
cmpb
mov
movsb
pop
jnp
jno
jmp
inc
hlt
adcb
mov
mov
rcll
jge
inc
dec
xor
inc
add
sbb
jmp
xchg
jmp
gs
fimuls
and
stc
pop
xchg
orl
mov
or
adc
xchg
adc
ss
outsl
mov
sub
lds
scas
cmp
mov
xor
sub
movsl
mov
xor
mov
rol
andps
jle
std
rsqrtps
push
cmp
mov
jne
add
mov
xchg
call
out
js
ret
lods
push
or
xor
pop
jns
cmp
mov
push
movl
xchg
js
sub
pushf
cs
cwtl
decb
insb
mov
xlat
mov
fwait
pop
orl
loopne
out
pop
fsubrs
icebp
test
lock
sbb
cmp
mov
or
out
xor
or
push
add
into
lcall
pop
and
mov
jb
sbb
in
jp
xor
dec
test
repnz
xchg
rorb
loopne
idivb
jmp
ljmp
movsl
add
adc
pop
and
mov
arpl
lea
loope
or
les
mov
jne
dec
test
sub
jbe
cmp
loop
push
stos
dec
mov
mov
iret
mov
add
std
xchg
mov
push
iret
pop
fsubl
movl
cmp
loope
insl
xchg
sbb
out
push
pop
les
dec
insb
gs
insb
jne
push
bound
jb
add
lea
call
pusha
pushf
lea
jmp
cmp
dec
push
shl
push
mov
leave
mov
insl
jns
mov
fldenv
mov
push
aad
xor
and
pushf
addl
inc
sahf
add
insl
jo
lahf
mov
lds
add
pop
xorb
mov
lahf
push
sbb
lock
or
sbb
out
in
or
and
int
cmpl
lods
inc
std
mov
mov
pop
mov
icebp
pop
cwtl
movsl
arpl
inc
cwtl
sub
lods
js
loopne
scas
lcall
adc
sub
dec
outsb
dec
test
adc
xchg
cli
and
loopne
stc
sub
xchg
pop
cmpsl
jbe
lods
and
xchg
hlt
sbb
jmp
insl
mov
aad
fnsave
outsl
insl
and
movsl
xchg
cli
xchg
dec
pop
lahf
out
and
xor
xor
push
add
repz
lock
dec
ss
pusha
out
jle
movsb
cmc
mov
inc
dec
popa
ds
hlt
shlb
dec
js
sahf
push
ja
stos
pop
sub
mov
xor
jae
push
xchg
das
add
jle
stc
paddd
xchg
bound
dec
out
inc
adc
pop
testl
insb
cmpsl
jbe
stos
jne
jle
lret
das
push
push
mov
cmpsb
sub
es
dec
outsl
mov
incl
inc
enter
subb
push
addr16
sub
lods
loope
sbb
mov
jl
sbb
rcrl
out
push
daa
aad
outsl
fwait
movsb
fcmovb
cmp
lahf
pop
loope
cli
nopl
dec
insb
loop
cwtl
js
mov
pop
xchg
idivl
shlb
jecxz
mov
jnp
xlat
lret
adc
sub
imul
jg
cld
sub
add
add
jg
pop
and
xchg
ret
stos
sub
push
sahf
cld
aaa
mov
addr16
mov
popf
pop
arpl
inc
mov
dec
jns
push
jge
testb
mov
fdivl
nopl
jae
xchg
int
adc
pop
mov
call
mov
arpl
jl
iret
cmpsb
js
and
fisttps
adc
jge
mul
jns
rclb
in
pop
std
call
mov
cmpsl
out
gs
popa
test
imul
add
xorl
push
clc
sub
xchg
mov
shr
cmp
lea
lea
mov
rcr
jmp
lea
jge
je
jmp
push
pushf
not
jmp
daa
push
mov
adc
mov
xlat
outsb
aam
add
push
in
lods
inc
leave
mov
dec
sarl
jbe
pop
into
jecxz
in
fnstenv
cmp
push
cld
popa
sahf
inc
int3
xor
arpl
dec
stc
sub
in
cmp
jbe
jl
test
sub
insl
inc
jg
xorb
lods
jle
dec
les
mov
out
rcll
fs
shrb
mov
jge
clc
mov
cmp
xchg
pusha
mov
movsl
push
and
add
cmp
shll
mov
bound
sub
pop
in
lcall
outsl
mov
daa
mov
and
inc
testb
pop
dec
into
movsl
cld
arpl
iret
cmp
lea
jge
lret
jmp
test
push
popa
mov
adc
dec
dec
jb
xchg
lahf
notb
jns
pop
insl
cltd
cmpsb
lret
mov
andb
or
lahf
es
xchg
pop
aam
xor
or
js
and
nop
int
outsb
pop
std
inc
adc
jnp
js
pop
push
mov
dec
lcall
lret
gs
inc
pop
in
lahf
int
mov
jg
jle
mov
stos
cmp
cltd
imul
jmp
insb
inc
rorb
pushl
jmp
lock
mov
adc
pop
mov
scas
fmuls
dec
push
imul
and
hlt
lods
out
push
lret
inc
or
inc
loope
pop
fstpl
addr16
popa
jbe
pop
cltd
fistl
fs
popa
mov
cmp
leave
xor
jnp
outsb
mov
push
sti
fsubs
cmpsb
xchg
pop
xor
inc
xor
nopl
mov
mov
ficoms
xchg
xor
mov
mov
lds
and
xchg
cwtl
sub
sbb
and
je
sub
add
and
fstp
inc
mov
or
lods
aam
push
stos
push
cmpsl
add
jmp
dec
jns
push
lret
pop
mov
loope
sti
decl
xor
sbb
aam
mov
cmp
rol
add
cmp
mov
bt
pushf
bt
pusha
test
jmp
neg
call
stc
cmp
pusha
add
stc
jmp
jmp
movsb
xchg
mov
xor
int3
xchg
lret
in
and
pop
jne
hlt
sub
cmp
nopl
sbb
lds
ja
das
push
stos
add
outsb
sub
inc
test
xor
mov
call
mov
or
data16
add
push
das
lahf
mov
stos
cmpsb
arpl
jle
add
jmp
mov
jmp
cmp
nop
cmp
stc
ret
aad
jnp
jp
es
mov
enter
loope
pop
stos
pop
xor
nopl
add
frstor
es
and
pop
fcmovnbe
dec
stos
push
outsl
in
imul
gs
add
or
loope
push
xor
push
or
es
dec
add
add
into
cs
dec
push
in
push
loope
pop
cmp
sahf
push
sbb
inc
and
push
lea
mov
movl
movl
call
pusha
repnz
push
pushf
jmp
pop
es
cmp
dec
idivb
push
lret
jb
add
inc
push
cmp
clc
jo
lret
ss
jbe
push
cmpsl
rcrb
stc
pushf
test
xchg
mov
dec
cltd
and
jnp
in
push
mov
xchg
push
in
scas
pop
cmc
mov
push
outsl
iret
inc
xchg
arpl
push
cmc
sbb
or
nop
mov
pop
lea
andb
in
jb
stc
cmp
js
mov
xlat
pop
aas
xchg
mov
xchg
rolb
and
jnp
not
mov
call
nop
adc
push
ret
loopne
jno
fldt
cmp
dec
test
adc
sub
inc
xchg
repz
sbb
pop
cmp
sub
out
jno
lds
jmp
or
mov
pop
fiadds
lret
shlb
mov
push
mov
aaa
pusha
pop
cmp
mov
lcallw
xchg
or
jmp
pushf
lea
jae
inc
mov
pushf
call
add
add
cld
loop,pt
int3
xor
cwtl
and
int3
inc
clc
sub
xchg
fwait
push
fsubl
nopl
push
lods
popa
pop
sahf
mov
roll
mov
mov
jecxz
js
push
lret
pop
pop
or
pop
adc
pop
es
test
ds
sbb
sub
sti
adc
hlt
cmp
leave
gs
sti
ja
subb
lgs
push
ds
xor
mov
lcall
fistl
xchg
ljmp
jb
mov
imull
sbb
sahf
inc
clc
and
loopne
mov
mov
cs
mov
inc
adc
add
xchg
inc
outsb
cmpsl
test
aas
in
mov
mov
arpl
push
and
xor
scas
ret
xchg
and
sub
icebp
push
cmp
or
or
test
lds
adc
ljmp
std
cmp
mov
mov
and
gs
sbb
popl
lods
jo
inc
add
bound
pop
aam
test
mov
movsl
xchg
into
mov
push
mov
shl
cmp
stos
popa
fsubl
sbb
pop
adc
jge
lcall
jg
cmc
mov
adc
ficoms
lods
jg
inc
push
add
pop
cmpb
aas
mov
insb
pop
adc
outsb
push
loope
data16
jno,pt
notl
mov
icebp
out
jns
nop
adc
loop
ret
jb
adc
inc
and
push
push
int
mov
mov
scas
aam
inc
insl
xor
inc
rorl
in
mov
adc
push
subb
xorl
dec
cmc
loop
xchg
or
jg
jecxz
cmp
out
add
fstp
sub
test
and
imul
mov
mov
je
inc
dec
pop
lahf
sbb
pushf
and
adc
push
mov
dec
pop
push
pop
xlat
in
mov
scas
xchg
xchg
mov
popf
mov
jns
xchg
mov
mov
xchg
stos
enter
and
or
cmp
scas
jecxz
mov
push
je,pt
scas
test
das
leave
cltd
cmp
xor
inc
xchg
dec
rcll
lahf
aaa
mov
adc
sub
pop
mov
push
cmpsb
mov
push
bound
popf
in
inc
sbb
gs
arpl
les
fwait
sbb
push
adc
pushf
fs
pop
sarb
xor
xchg
pusha
movl
pusha
call
clc
cmc
imul
bt
add
pushf
mov
lea
jmp
shrb
add
bound
repz
mov
adc
mov
mov
xor
in
sub
ja
xchg
fwait
or
call
jle
call
xor
fists
mov
push
jmp
imul
gs
mov
add
sub
jbe
adc
pop
xchg
xchg
inc
lea
je
cmc
jmp
mov
dec
shrb
out
or
mov
or
out
test
and
movsb
sbb
mov
push
call
cltd
inc
bound
push
mov
jo
shrl
test
push
pop
xchg
mov
imul
jg
add
test
add
add
sub
cli
xchg
push
and
loope
test
fwait
lds
sti
rcrb
mov
cli
fcomps
cld
movsb
add
xchg
sub
test
push
data16
mov
leave
mov
and
xor
stos
jns
mov
sbb
push
cwtl
les
insb
jnp
dec
int3
in
scas
and
inc
daa
dec
dec
ficompl
cwtl
sub
setl
jecxz
cmp
dec
sbb
jle
call
xchg
push
cmp
jge
es
outsl
iret
adc
adc
inc
addr16
xchg
fwait
add
sbb
push
sub
cmpsb
xchg
mov
xchg
leave
adc
movsl
shrb
adc
mov
xchg
lds
lock
and
sub
mov
cmp
xchg
dec
out
mov
iret
pop
aam
inc
pop
aas
pop
cmp
lea
int
leave
sub
sti
mov
test
fwait
pop
mov
dec
cmp
pop
inc
sahf
sti
outsl
xor
push
test
mov
push
cmpsl
scas
or
dec
sbb
mov
mov
inc
sbb
inc
popf
mov
push
xor
push
add
jl
clc
add
sub
jno
push
stc
cmp
movzwl
add
bts
ror
shr
ror
mov
pusha
add
clc
call
mov
dec
loop
inc
push
dec
cmp
andl
int
push
pop
lret
sub
in
ljmp
mov
loope
fnsave
pop
adc
jle
insl
sub
sub
out
int
mov
inc
lds
lds
mull
enter
cmp
stos
pushf
sti
adc
hlt
inc
or
push
xchg
leave
inc
je
shrb
and
xchg
imul
pop
cli
mov
pop
adc
icebp
dec
and
cmc
data16
pushl
imul
pusha
sar
aas
mov
loopne
mov
daa
dec
inc
jg
lock
push
pop
stc
push
sbbl
mov
aas
ja
int
int
push
sub
outsb
xchg
mov
andb
imull
outsb
push
and
push
rcrl
cmp
cmpsl
cmp
jb
loope
mov
in
or
movsl
stc
add
mov
mov
dec
ss
pop
lods
mov
clc
decl
movzbl
pop
pushf
lea
jno
pop
push
mov
movb
pushl
ret
pusha
cmp
stc
sub
stc
call
das
das
sbb
dec
pop
sub
loopne
or
mov
push
cmpb
cmpl
ljmp
mov
mov
lcall
cmp
ret
cwtl
adc
or
or
sbb
cld
pop
movsl
leave
jecxz
lods
sub
movsb
shll
data16
fadds
and
les
xchg
push
add
lcall
lea
dec
push
rcll
mov
mov
hlt
fs
mov
jnp
push
iret
call
add
fs
imul
add
add
mov
push
fistpl
fucomi
xchg
gs
std
movsb
pop
add
add
mov
nopl
sub
sahf
mov
and
int
mov
das
mov
adc
gs
pop
jb
jmp
xorl
pop
inc
cli
mov
pop
push
fcompl
mov
enter
sarl
push
mov
xchg
and
xor
insb
sbb
jl
push
mov
add
pushf
push
xchg
pusha
call
call
pop
add
add
sbb
scas
or
mov
stos
incb
dec
and
int3
in
mov
clc
xlat
dec
dec
repnz
fmulp
repnz
arpl
cmp
sub
xor
fdiv
loop
std
enter
dec
xchg
jmp
bound
out
pusha
mov
ss
ds
aad
fcoml
mov
jnp
jl
test
xchg
and
stos
jl
shlb
push
gs
cmc
shr
push
fcomp
repz
xor
xor
mov
dec
pusha
sub
aaa
add
xchg
mov
test
sbb
ror
cmpsb
lahf
adc
xchg
add
and
mov
fnstsw
jg
mul
loopne
mov
lcall
dec
jb
fmuls
jmp
outsb
mov
fs
sbb
dec
sub
scas
hlt
inc
jmp
mov
negb
addl
xor
push
mov
cmpsl
xchg
mov
gs
movl
mov
in
mov
in
or
pop
inc
xchg
loope
mov
cmp
sbb
cmpsl
inc
sahf
jb
jge
inc
into
loopne
push
cmc
out
push
pop
xor
int
iret
inc
dec
icebp
mov
cmp
into
lahf
cltd
cmpb
mov
aas
iret
push
les
fdivrp
jnp
sbb
icebp
mov
dec
icebp
mov
sbb
adc
push
mov
add
addl
xchg
cmp
xlat
call
dec
stos
sub
push
mov
cs
in
in
adc
cwtl
push
jne
aad
mov
addr16
int3
dec
pop
fmul
mov
and
mov
xor
loope
mov
mov
sarb
lahf
je
sub
sahf
jne
fisttps
inc
mov
mov
add
mov
mov
imulb
lret
dec
mov
rcrb
sbb
stos
fcomi
loop
std
inc
ss
xchg
adc
add
loop
sbb
icebp
mul
dec
push
inc
lods
inc
lds
es
lods
mov
in
shll
sbb
ja
jnp
inc
adc
imul
lret
cmp
repz
push
lea
call
pusha
lea
jae
call
pushf
pusha
lea
jb
push
pushl
ret
stc
aas
pop
or
enter
aas
ja
jmp
mov
cmp
scas
pop
das
adc
sbbb
mov
add
movsb
sub
gs
jo
mov
inc
pusha
enter
rcrl
push
add
inc
popf
sub
test
jmp
inc
sub
mov
test
imul
fistpll
iret
xchg
inc
call
mov
rorl
insl
adc
xchg
push
inc
sbb
enter
dec
movl
sahf
add
mov
cmp
add
xchg
loope
mov
negl
fdivl
std
scas
stos
mov
js
or
jo
jbe
push
int
add
add
test
lods
jo
xchg
nop
mov
repz
lret
mov
xchg
ret
or
push
xor
xchg
ss
lret
jl
sbb
fildl
cmp
mov
push
mov
mul
lds
pop
test
pushf
sub
push
and
and
xor
dec
imul
repz
arpl
and
or
movsb
loop
cmp
repnz
std
loop,pn
push
pop
aam
imul
mov
insb
mov
add
mov
pushl
ret
mov
movw
mov
jmp
pusha
movsb
int3
or
sub
ja
and
inc
sub
add
cltd
call
sub
in
sbb
fstpl
subl
jge
mov
rorl
jae
pop
dec
dec
and
sarl
jecxz
jp
into
sbb
adc
adc
adc
inc
add
dec
in
jmp
in
dec
xor
test
dec
pop
sbbb
outsl
and
test
iret
dec
pop
aam
jl
adc
xchg
pop
push
mov
stos
adc
mov
shld
mov
jmp
cmc
repnz
pushl
pushf
mov
call
movl
jmp
lahf
mov
movb
lahf
lea
pusha
jmp
pop
or
jmp
arpl
jmp
or
outsl
lret
inc
adcl
mov
cmp
push
fidivrl
test
pop
in
xchg
add
jnp
lea
in
dec
mov
mov
jnp
lcall
into
mov
xchg
xor
mov
or
clc
pushf
mov
or
pop
movsb
sbb
mov
inc
fidivs
mov
in
adc
insl
das
or
divl
negb
and
xor
outsb
cmpsl
shrl
je
enter
bt
ror
push
movb
pushf
push
neg
lea
jnp
rol
jmp
call
rolb
cli
mov
cmp
aam
cmp
or
cmp
or
mov
idivl
push
push
push
jecxz
aad
adc
push
cli
sub
mov
adc
nop
in
mov
or
add
xor
sub
and
mov
pusha
and
outsb
inc
movsb
dec
mov
xor
xchg
fwait
cwtl
pop
lcall
lret
rcl
xchg
movsbw
mov
add
shr
mov
cmc
xchg
cmc
shl
pushf
mov
bt
cmp
sub
pushf
rep
call
shr
fisttpll
dec
xor
xor
fs
inc
clc
adc
sub
mov
dec
loopne
rorb
mov
bound
fildll
inc
ret
xchg
add
lock
sbb
adc
push
inc
add
imul
sarb
sbb
and
stc
pop
test
cmp
adcl
outsl
arpl
inc
jb
add
push
pop
xchg
dec
and
and
inc
decb
fstl
and
sbb
mov
or
cs
movsb
xor
add
push
outsl
mov
or
int3
ss
add
lahf
inc
cmp
in
pop
les
mov
xchg
mov
jl
inc
adc
inc
shlb
cmpsl
or
cmpl
cmp
pusha
lea
jae
push
cmp
pushl
lea
ja
jmp
push
lret
decl
mov
arpl
pop
dec
sbb
jge
in
cmp
test
sbb
adc
cld
push
xchg
cmpsb
call
inc
sub
test
pop
lret
sbb
cmp
add
leave
imul
inc
popa
lret
adc
addr16
jno
pop
xor
xor
push
call
cmp
sarl
mov
mov
dec
dec
inc
pushf
call
jae
icebp
or
mov
push
hlt
jmp
enter
mov
rcrb
subb
adcl
mov
or
and
cmp
stc
pop
push
mov
and
daa
gs
add
inc
fsubrl
fbld
or
push
jns
jnp
int3
lret
jns
inc
sbb
mov
fisttps
mov
pushf
cmp
cmp
call
pushf
lea
jne
bsr
pusha
shrd
mov
test
btr
not
sub
and
sub
je
lea
rol
mov
bt
call
pusha
imul
stc
movw
test
push
add
pushl
lea
jmp
mov
decl
mov
jo
or
std
mov
and
inc
push
sub
xor
jmp
push
inc
nop
adc
sar
int
inc
xchg
std
xchg
jecxz
mov
pop
adc
cltd
jp
dec
aas
sbb
sub
or
insb
cmpsl
and
scas
xchg
enter
leave
mov
fiaddl
xchg
jbe
push
push
sbb
mov
push
or
inc
ljmp
bswap
sub
push
loope
pop
outsl
jns
scas
push
xchg
sub
loopne
rclb
cmp
xchg
push
pop
cmp
lock
in
insb
fdiv
ret
mov
jge
mov
add
call
cmp
mov
jbe
jecxz
push
and
adc
repnz
xchg
pop
repnz
movsb
roll
aam
adc
fimull
scas
pop
cmp
sbb
adc
sbb
mov
ja
lahf
mov
pushf
clc
add
outsb
popl
popa
mov
jge
aad
sub
inc
mov
cltd
rolb
and
mov
out
push
and
outsl
adc
push
cmp
in
fxch
imul
sarb
ss
or
into
popf
pop
leave
inc
mov
lcall
mov
pop
jns
push
inc
push
test
insb
sub
fidivs
pop
push
push
sub
gs
mov
mov
hlt
les
rcrl
dec
popa
add
sub
scas
in
xchg
aas
or
or
stos
cmc
cmpl
icebp
mov
xlat
pop
jb
sbb
xor
jge
repz
stc
test
aas
xor
sub
sub
cmp
mov
pop
xlat
xchg
js
add
sub
dec
pushf
stc
dec
or
adc
pushf
lret
xchg
pop
or
adc
add
push
push
push
fsubl
js
mov
dec
imul
push
into
lret
cld
adcb
dec
mov
stos
popa
lock
mov
sub
and
mov
mov
pop
and
inc
je
xorb
push
fistpll
fwait
lods
sub
add
mov
pop
push
scas
jl
mov
adc
fmuls
out
notl
sahf
incb
adc
int
jle
mov
xor
rclb
and
bt
repnz
pushf
jmp
call
push
bt
rol
pushf
pushl
clc
cmc
not
clc
jmp
lea
je
push
sub
push
cmp
pushf
push
lea
ja
pusha
jmp
push
pop
jne
mov
lret
xor
xor
xchg
scas
in
or
ja
pop
mov
sbb
dec
out
aas
pop
and
and
es
jno
outsl
pop
icebp
adc
push
pop
xchg
mov
xchg
push
xor
ja
mov
pop
adc
or
dec
inc
sub
push
aam
lods
out
xor
fdivrs
jmp
pop
fldenv
mov
je
into
or
out
insb
push
repz
add
cmp
push
jmp
es
clc
adc
jecxz
inc
pop
neg
jmp
sub
aas
pop
cld
xchg
in
mov
paddd
ret
clc
add
loopne
jmp
ret
jle
and
and
fs
in
pop
adc
fdivrl
int
mov
aam
xchg
cmp
sti
lods
jnp
push
aad
int
and
js
movsb
fidivrl
loope
imul
mov
mov
gs
xchg
daa
pop
add
jmp
or
sbbl
and
jb
rolb
mull
in
push
call
mov
jb
push
sahf
cmp
inc
leave
out
lahf
push
push
push
js
jecxz
pop
mov
scas
clc
sub
shll
pop
mov
or
sub
xor
sbb
fldcw
mov
roll
sbb
ficoms
xchg
jcxz
xchg
das
xchg
out
sub
jp
fwait
xchg
shl
in
cli
adc
add
mov
mov
pop
xchg
pop
push
sbb
addl
arpl
test
hlt
mov
arpl
in
cli
int3
or
adc
xlat
jns
or
rcll
and
or
stos
sub
movsl
icebp
add
pop
pop
fstps
ja
sbb
lret
push
push
jae
cmp
sbb
test
adc
push
stos
and
leave
mov
jnp
jmp
ret
hlt
fimuls
push
or
fstpt
lcall
fstpt
dec
rclb
inc
or
fdivs
mov
out
ficoml
adc
js
inc
out
sbb
push
fsin
fwait
into
rcll
xchg
add
cmp
inc
test
jl
or
cmp
xchg
cld
sbbl
adcb
jp
xor
push
xchg
aaa
out
test
xor
ds
adc
outsb
mov
jnp
stos
ret
mov
int3
testl
jle
inc
and
movb
push
pushl
ret
pushf
movw
push
lea
je
test
pushf
mov
add
pushf
cmp
call
call
mov
pushf
pushf
pushl
ret
imul
int3
jmp
rorb
mov
gs
pop
aas
insb
call
mov
hlt
mov
sub
inc
aam
out
push
mov
mov
sub
int
mov
mov
out
pop
repnz
xlat
shrb
jg
adc
sahf
or
and
cs
arpl
or
jo
dec
mov
mov
add
pop
out
mov
jg
pop
pushf
push
lds
adc
mov
or
cmp
ja
fiadds
mov
jg
cli
push
adc
pop
shlb
jns
xor
add
ret
inc
mov
xlat
sbb
in
push
scas
lea
pop
pop
cmp
pop
pop
xor
les
push
jp
push
jl
stos
cmp
cld
add
add
cmp
xchg
addl
mov
lods
sub
dec
adc
add
movsb
sarb
cltd
lret
in
imul
lahf
mov
leave
bt
bt
repnz
pusha
lea
jne
lea
movb
bswap
pusha
mov
pushf
lea
pushf
movl
push
pushf
movl
call
bt
cmc
sub
clc
bt
cmp
push
pushf
lea
ja
call
setb
bt
call
add
dec
push
adc
loop
inc
scas
xchg
sub
mov
andb
in
jno
ss
push
xchg
je
add
test
add
dec
xchg
xchg
cmp
ds
data16
xor
fimull
or
imul
lods
imul
xchg
cmpsl
fs
jno
pop
aad
das
icebp
inc
lcall
fs
jecxz
jb
fwait
pop
mov
mov
push
cmpsl
jg
andb
pop
mov
sbb
lcall
mov
mov
mov
cmp
jmp
mov
mov
add
fs
lock
jle
lods
cmp
sbb
test
fcomip
jbe
ja
mov
dec
jb
push
popf
jg
fisubs
out
jae
add
add
mov
pop
nop
xchg
xchg
xchg
sub
and
sub
jae
sahf
xlat
imul
stos
pushf
movsl
dec
adc
inc
out
fldenv
roll
inc
lock
and
lods
sti
pop
test
push
cmpsl
jl
repnz
into
dec
mov
xor
xor
mov
lea
aas
pop
pop
xchg
dec
shrl
adc
jmp
pop
cmp
nop
dec
sahf
xor
inc
xchg
add
jle
adc
int3
in
xor
xchg
sbb
aas
sahf
inc
add
es
dec
loopne
and
subl
aas
push
outsl
push
jg
pushf
sub
dec
dec
pop
pop
leave
neg
and
jg
jle
sarl
push
call
add
mov
outsb
int3
mov
or
and
mov
rcr
int3
and
outsl
xor
mov
push
stos
arpl
sahf
mov
out
sub
cld
jnp
sub
jle
mov
pusha
mov
dec
imul
cmp
out
lea
and
jecxz
daa
out
push
popf
push
int3
add
aad
lret
ret
mov
outsb
dec
mov
rclb
lea
adc
out
push
sbb
ret
jmp
mov
movsb
iret
jno
jge
out
mov
ja
push
push
adc
mov
jle
ds
mov
jno
jp
hlt
mov
test
loopne
mov
push
sbb
je
pop
lods
jmp
es
cmc
arpl
movsl
push
or
sbb
dec
mov
rcr
pop
cmp
and
out
inc
das
data16
iret
xor
push
and
cmc
pop
sbb
adc
andb
loopne
aas
inc
nop
nop
ret
push
fdivl
cmpl
lret
and
cmpsb
flds
ja
ljmp
loope
jbe
mov
jo
test
push
cmp
pushf
mov
jmp
cmp
pusha
lea
jae
shl
mov
not
shl
shr
mov
shrd
mov
pusha
xor
test
repnz
pushf
lea
jne
shld
dec
mov
movsbw
sub
cmc
cmp
mov
stc
pushf
pushf
pusha
sub
push
pushl
popl
clc
mov
cmp
mov
call
mov
dec
add
sbb
mov
lahf
pop
mov
mov
loop
pop
mov
ja
lods
ficomps
add
fs
andb
cld
ljmp
shrb
sub
sub
mov
data16
dec
stos
fidivrl
push
and
dec
scas
out
add
neg
sbb
out
shrb
test
imul
mov
call
loop
or
mov
dec
mov
hlt
push
push
sub
cltd
stc
bnd
loopne
out
adc
sbb
lcall
filds
leave
dec
mov
jle
outsl
cmp
mov
stos
into
sbb
dec
mov
pop
and
fdivrs
pop
jae
popa
cmp
cmpsb
scas
repz
aad
cmp
add
insl
lcall
ljmp
ja
mov
xchg
xlat
pushf
fisttpl
mov
push
lcall
mov
jb
mov
xchg
in
jbe
mov
mov
cmpsb
or
gs
in
xchg
mov
dec
je
sahf
paddd
mov
enter
lret
cmpsl
pop
lods
fldl
cmpsl
dec
scas
add
mov
xor
sbb
decl
push
push
pop
xchg
les
mov
movsb
xor
loope
sub
mov
push
loop
mov
das
int
lds
not
ja
add
shll
xchg
mov
ja
mov
mov
mov
jl
out
shll
xchg
clc
sub
mov
push
cmpsl
outsb
xor
scas
mov
jnp
pop
pop
shrb
hlt
mov
mov
stos
mov
stos
test
jne
mov
int
push
cmp
adc
arpl
and
fisubrl
mov
xor
ret
inc
sbb
adc
fidivl
inc
or
test
enter
hlt
pop
fwait
xor
mov
xchg
mov
lahf
sbb
push
or
add
adc
mov
shl
subb
xor
dec
mov
jbe
adc
rorb
dec
push
sub
push
insb
xchg
xchg
rorl
pop
jnp
outsl
or
sahf
mov
jl
mov
cs
iret
sub
jge
or
aad
call
pop
ljmp
push
repz
dec
nop
shll
stos
repnz
fidivl
addl
push
and
inc
gs
push
aad
inc
adc
mov
or
push
pushl
lea
jmp
jns
and
rcrb
outsl
out
mov
xlat
outsl
dec
push
push
sub
mov
sub
pop
stc
dec
xchg
xchg
mov
in
test
xor
pop
es
fidivrl
pop
xchg
jp
int
pop
xchg
loope
sbb
dec
aam
ret
rorl
inc
add
mov
inc
sub
mov
sub
mov
inc
inc
dec
in
mov
cmp
jmp
push
icebp
push
test
fidivrs
sbb
mov
mov
push
sbb
pop
es
push
sti
or
inc
jbe
paddd
lods
or
jns
push
or
push
aas
loop
push
inc
adc
and
imul
in
sbb
int
int3
push
shll
loop
and
stos
cmc
push
jg
test
insb
into
icebp
bound
jns
mov
add
sbb
sbb
fcoml
sbb
ja
loopne
test
push
or
cmovl
push
das
cmc
push
push
pop
pop
pop
dec
div
jnp
in
mov
cwtl
xchg
jns
sbb
fisttpll
rorb
xor
aaa
in
add
mulb
pop
pop
incb
out
jmp
pop
enter
orb
sub
leave
sbb
xchg
mov
xchg
insb
insb
jge
out
mov
imul
bt
add
push
mov
mov
lea
jmp
ds
cmp
sub
ret
mov
std
lea
push
push
add
cmp
loopne
push
lret
setns
mov
test
cmc
cmp
dec
subb
iret
mov
dec
xchg
lret
hlt
cwtl
std
fldl
in
mov
mov
std
adc
sbb
inc
push
lret
popf
and
imul
pushf
aad
call
adc
ds
popf
lods
push
das
cmp
jmp
call
addr16
aad
pop
mov
push
adc
js,pt
hlt
and
xor
push
inc
lahf
aas
dec
pop
and
add
push
cmc
loop
xchg
idivl
jo
inc
xrelease
dec
fnstsw
mov
mov
xchg
arpl
mov
inc
mov
push
add
push
ficoml
mov
add
add
out
jo
xchg
push
add
cmp
outsl
xchg
movsl
and
fistpll
sub
pushf
fistpll
fistpll
mov
lret
add
dec
push
int3
adc
xor
out
push
rorb
stos
dec
pop
andl
push
adcb
mov
push
imul
add
stos
aaa
nop
popa
mov
push
mov
jnp
jb
shll
imulb
je
mov
add
flds
repz
loopne
add
in
std
fnstsw
and
mov
or
outsl
scas
push
shlb
insb
idivb
mov
rorb
xor
cs
insb
add
jecxz
loopne
dec
outsl
dec
call
imul
mov
pop
add
xchg
fdivs
mov
icebp
aas
shlb
int
pushf
sti
fstl
or
and
arpl
popf
inc
notl
mov
daa
adc
js
icebp
push
repnz
xchg
in
xchg
test
xor
lock
pop
cmp
pop
and
aaa
icebp
xrelease
scas
xchg
icebp
inc
loopne
jnp
push
jp
push
mov
popf
mov
cs
xchg
inc
mov
jbe
push
divb
jge
dec
js
mov
pinsrw
sub
adc
mov
repnz
cltd
mov
loopne
sub
mov
les
pop
cmp
fwait
pop
add
mov
aam
popa
lds
rclb
sub
sbb
cmc
cwtl
inc
push
scas
mov
jne
addl
icebp
mov
xchg
mov
pop
pop
inc
and
loopne
lea
ja
cmp
add
sub
xor
pushf
lea
add
btc
mov
sar
mov
test
repnz
jmp
add
loope
dec
jb
test
rorb
test
scas
or
out
ret
pushf
push
div
mov
pop
lods
fxtract
insb
dec
loopne
in
stc
pop
lods
outsl
leave
lret
add
add
jns
adc
nop
add
out
jno
aad
bound
push
icebp
dec
xchg
xchg
bound
in
sbb
test
scas
xchg
adc
jmp
mov
jecxz
mulb
test
xor
into
lea
inc
xchg
inc
jl
stos
push
clc
imul
bt
stc
pushl
call
mov
dec
shll
fwait
aam
push
mov
inc
incl
es
cmp
dec
jnp
mov
push
jle
sub
xchg
mov
cwtl
icebp
jl
imulb
push
out
push
aaa
xchg
mov
sub
or
pushf
sub
orl
ja
decb
inc
xchg
mov
rolb
sub
cmp
movsb
push
cmp
pop
sub
xchg
xor
fwait
aam
pop
es
fldenv
enter
stos
add
out
jae
hlt
loop
dec
sbb
shrl
mov
cli
shll
std
test
cmp
mov
outsl
cmpsb
jno,pt
imul
lods
dec
and
inc
rcll
test
inc
lcall
or
sarb
ja
inc
cld
sbb
outsb
stos
add
inc
pusha
push
into
in
cmp
mov
shr
sub
sub
cmp
mov
andps
mov
stos
push
push
inc
push
xor
cs
insb
add
cmpsl
jecxz
dec
pop
les
xchg
mov
xchg
cmp
dec
lods
or
mov
mov
int3
iret
and
push
clc
xchg
mov
or
jmp
cltd
outsl
das
mov
adc
data16
pop
lds
repnz
mov
fs
mulps
cmp
mov
pop
pop
xchg
jns
stc
xlat
xchg
stos
repz
shlb
mov
int
mov
xchg
dec
or
lea
repz
or
sarb
cmp
pop
out
cmpsb
imul
daa
cmp
or
xchg
test
inc
movsl
aaa
xlat
jle
outsl
cltd
lock
cmc
push
popf
stc
and
jbe
les
mov
test
inc
jg
pop
push
into
xchg
sarl
and
and
dec
fcomip
sub
sub
cmpsl
xchg
xor
ds
sbb
inc
or
push
mov
lcall
lods
scas
mov
pop
cmc
mov
xor
xchg
mov
repnz
lahf
movsl
shrl
push
je
sarb
inc
sub
pop
pop
fmull
loope
dec
push
imul
into
stos
sahf
cmc
mov
jecxz
insb
xchg
and
hlt
js
push
sarl
mov
test
ss
ss
mov
andl
bound
je
push
imul
insl
mov
and
push
sbb
pop
rcr
xchg
and
jnp
or
imul
jle
or
add
jbe
bsf
sar
clc
mov
cmp
clc
clc
cmpb
pusha
pushf
pushf
pushl
lea
jne
bsr
xor
shr
shl
btc
lea
mov
sar
push
rcr
xor
add
xor
sar
cmp
setbe
mov
stc
cmp
cmc
bt
test
jmp
bt
test
pusha
jmp
pushf
lea
je
call
ficompl
in
dec
rolb
mov
jle
jl
fisubrl
dec
divl
push
ja
or
or
dec
mov
fidivl
mov
adc
insl
sti
and
mov
stos
adc
mov
dec
shrb
mov
add
cmpb
repz
scas
dec
jmp
dec
in
dec
neg
pop
stos
xchg
mov
sahf
cmpsl
test
das
fs
in
stos
imul
xlat
scas
sub
mov
mov
in
mov
out
cmp
pop
mov
add
mov
popa
fwait
test
fdivr
push
hlt
pop
pusha
leave
mov
aad
cmpsl
call
test
inc
fwait
mov
push
sarb
xor
ja
lea
cwtl
inc
aas
adc
jle
cli
dec
loope
and
pop
shll
test
mov
jmp
sub
div
push
shll
add
jns
fdivrl
cmp
stos
mov
in
subl
pop
mov
push
xor
xlat
out
mov
dec
inc
test
xchg
lea
stos
ret
xor
out
orb
outsb
mov
lret
divb
push
sbb
cmp
mov
dec
cli
scas
cli
jge
lods
test
bound
jne
repnz
mov
cmc
fisubl
mov
fstpt
push
sub
dec
adc
stos
mov
sub
jbe
insl
sub
and
rcr
jo
loopne
fiaddl
in
loope
js
jnp
aad
out
pop
lock
dec
jne
pop
mov
jmp
movl
call
repz
xchg
xor
adc
loope
ljmp
sbb
push
std
loop
movsb
test
jp
dec
cmp
js
jmp
mov
es
movsl
hlt
int
jne
inc
mov
cmp
arpl
daa
xchg
inc
jnp
mov
mov
add
scas
es
gs
jg
lret
mov
push
and
insb
sub
adc
rcr
sbb
sbb
arpl
test
xchg
shlb
xor
lahf
ss
dec
dec
inc
push
dec
xor
cs
insb
add
cmp
cmp
mov
sbb
aas
xorb
mov
cli
mov
fcoms
mov
inc
dec
cmp
js
lock
add
out
mov
xchg
push
ret
lahf
mov
xchg
lods
xor
push
stc
das
inc
call
add
int3
sarb
jp
shl
cmpsl
popl
int
xor
mov
out
mov
xchg
xor
pop
jno
arpl
inc
add
add
movsl
pop
repnz
mov
std
mov
aad
movl
mov
scas
jl
ljmp
roll
mov
das
add
jne
xor
sbb
ret
fnsave
out
push
xchg
sbb
movsb
pop
jp
movsb
pop
and
ret
insl
call
push
in
adc
sbb
mov
loopne
movsl
mov
jns
mov
pop
push
adc
lods
pop
pop
push
insl
sarb
sahf
stos
repnz
in
insb
movl
cmc
stc
popf
mov
pop
add
mov
sub
cli
subl
or
inc
lret
inc
inc
mov
ret
mov
sub
or
lea
xor
rorb
mov
cmp
iret
leave
aad
inc
in
cltd
icebp
inc
jno
or
into
xchg
movsl
cmc
shlb
mov
ss
pop
movhps
hlt
mov
in
cmp
cmp
mov
pop
mov
mov
aas
or
or
shll
fildl
or
andl
mov
and
mov
out
mov
inc
in
les
jmp
mov
add
add
imul
jmp
dec
out
mov
rcll
sbbb
ret
and
loope
jnp
dec
push
and
cmp
mov
pop
lods
dec
pop
push
add
lret
mov
xchg
clc
in
mov
rorb
lock
push
add
cmp
jmp
or
bound
icebp
in
cli
push
in
rcll
pusha
cmp
fidivrl
jmp
sub
mov
das
sti
sub
stos
push
cld
xlat
inc
adc
adc
in
add
adc
dec
ljmp
fiaddl
mov
inc
stc
movsl
dec
add
movsl
scas
daa
xchg
mov
sub
rcrb
add
and
scas
das
jbe
outsl
out
loopne
ret
mov
outsb
xor
into
sub
jb
shll
lret
jp
jbe
iret
pmaxub
add
imul
sbb
fwait
push
inc
daa
cld
sub
push
call
adcl
dec
mov
outsl
loope
fisubs
mov
push
call
xlat
call
pop
mov
xchg
incl
mov
shr
mov
rcr
rcl
ror
neg
mov
pusha
call
push
cmp
pushf
push
lea
jb
stc
pusha
call
call
pop
push
pusha
jmp
dec
fcoms
push
stc
mov
daa
loopne
mov
cmp
movsl
inc
cltd
loope
or
mov
das
daa
mov
xchg
dec
rolb
jo
mov
mov
and
inc
jecxz
rcrl
int
iret
cli
cli
ljmp
into
pop
sub
and
lahf
rcll
dec
add
pushf
pop
jno
clc
jmp
xor
in
sbb
or
dec
xchg
cli
dec
jbe
clc
mov
dec
and
xor
daa
ret
mov
xor
int3
push
mov
xor
xchg
mov
sahf
inc
inc
xchg
ss
movsb
outsl
push
xor
out
addr16
xchg
xchg
je
and
cld
movl
lcall
dec
xchg
dec
addr16
jb
adc
lahf
stos
xchg
adc
aas
subb
mov
lods
sub
nop
call
adc
add
arpl
xor
inc
sub
pushl
pop
add
jg
insb
hlt
adc
jge
fcoms
xchg
inc
lret
fyl2x
leave
lods
lea
in
sbb
pop
mov
inc
push
jg
stos
nop
es
lret
xor
mov
fisttpll
call
push
push
in
mov
fucomi
push
push
and
or
addr16
rcll
pop
add
jnp
mov
les
bound
call
mov
cli
add
adc
cmp
stos
jmp
push
inc
call
jg
int3
stos
dec
adc
jmp
mov
pop
mov
in
mov
add
inc
push
and
dec
push
or
mov
inc
and
lret
rcrl
js
in
sub
loop
mov
xchg
stc
aas
push
not
jmp
or
sub
fbld
repnz
sub
test
pop
icebp
pop
rcll
jb
iret
ljmp
push
xor
or
scas
jge
sub
sbb
adc
jmp
popa
mov
in
lods
adc
pop
lock
lahf
mov
jl
loope
test
inc
push
rorb
shlb
add
rorb
dec
push
cld
cmpsl
das
push
imul
cli
leave
xchg
pop
in
scas
inc
das
mov
push
add
pop
not
mov
mov
fs
cmpsl
imul
add
call
push
sub
in
mov
jae
and
adc
icebp
and
pop
dec
fwait
mov
mov
mov
sub
cmp
out
pop
sub
push
ds
push
repnz
jl,pn
f2xm1
sub
xor
mov
push
hlt
xchg
push
das
loopne
nop
ljmp
mov
mov
popf
push
or
iret
pop
xor
aaa
push
mov
loop
nop
stc
adc
mov
dec
adc
insl
adc
shll
ret
cmp
lcall
stc
xchg
inc
and
in
cmovnp
dec
mov
cmpsb
push
ss
repz
enter
in
push
dec
dec
add
roll
pusha
es
outsl
adc
jbe
lret
orb
cld
aam
pop
out
jg
lret
xchg
or
iret
mov
lea
je
pusha
or
push
pushl
lea
je
aad
sub
shr
mov
mov
add
bsf
or
cmc
mov
pusha
sar
shr
add
inc
pushf
jmp
lea
je
call
sbb
out
mov
sbb
test
imul
inc
je
pop
sbb
in
imul
mov
aaa
rorl
pop
jecxz
stos
lods
pop
sbb
dec
xchg
mov
pop
mov
fisttpl
cmpsl
pop
push
js
jg
cli
xchg
lret
test
pop
jns
cmp
lahf
jecxz
lods
add
jl
stos
lret
xchg
dec
movsl
adc
sbb
xchg
in
mov
sbb
cmp
outsb
add
push
adc
sti
pop
pushf
lds
mov
mov
sub
aad
sti
test
add
movsb
test
sbb
mov
jno
adcb
or
inc
sbb
jno,pn
daa
inc
loop
mov
cltd
dec
add
sahf
xchg
mov
mov
push
sub
es
xor
scas
pop
xchg
jge
sbb
xchg
hlt
repz
and
cmpl
cmpsl
outsb
sahf
adc
leave
cmp
adcl
subb
mov
divb
cmc
push
jecxz
data16
inc
jecxz
fcompl
add
pop
outsl
shl
ret
paddusw
push
iret
and
xor
stos
adc
xchg
pop
mov
addl
stc
ljmp
xor
push
mov
daa
jne
mov
or
xor
ljmp
out
mov
pop
or
adc
add
push
adc
jb
sahf
sub
scas
pop
push
mov
das
in
push
mov
sbb
clc
popf
push
xor
sub
xor
popa
loope,pt
sti
pusha
jmp
in
or
mov
mov
adc
arpl
dec
lea
jno
insb
xor
mov
stc
mov
inc
in
loope
mov
fwait
xor
dec
fistpl
jns
filds
adc
cmp
mov
mov
cs
popl
pop
loopne
push
outsb
jb
call
xchg
or
sub
fildll
adc
test
and
mov
and
nop
add
dec
out
testb
fdivl
jp
aam
fldcw
dec
daa
inc
mov
fimuls
mov
push
test
pop
les
mov
fisttps
aaa
push
sbb
arpl
inc
icebp
mov
cld
loopne
jmp
sub
inc
jp
sub
dec
cltd
lods
mov
cmpsl
xchg
inc
sub
inc
dec
popa
lret
loopne
stos
ret
xor
aam
add
das
or
adc
iret
push
lods
xchg
pop
mov
mov
mov
pop
inc
inc
ret
inc
mov
orl
jmp
rcl
sbbl
popf
popf
jbe
jle
mov
scas
popa
xchg
add
out
std
xor
lahf
iret
mov
xchg
mov
add
in
aas
cmp
push
les
inc
sbb
add
movsb
push
push
repnz
cmp
sbb
lahf
adc
jae
int
repnz
les
sbb
cmp
adc
adc
gs
xlat
dec
xchg
or
in
jb
fwait
xor
mov
jp,pn
jo
daa
inc
cmp
out
mov
in
fsubr
xchg
lea
xor
jmp
fistl
mov
in
dec
sub
mov
ds
xchg
loopne
xchg
dec
mov
xchg
fcmovb
jae
inc
data16
stos
xlat
pop
push
and
dec
xchg
aam
xor
xchg
ss
jmp
jl
sub
movb
pushl
ret
movb
cmp
push
jmp
shrb
repz
mov
fistpl
aas
or
adc
mov
cli
cltd
dec
neg
push
add
jg
jno
hlt
sub
fs
loopne
decl
xchg
js
cmp
lock
test
mov
lahf
cli
orl
inc
mov
xor
add
adc
gs
ds
sbb
sbb
ficompl
mov
mov
inc
pusha
aad
lods
movsb
pop
loope
cmp
cltd
mov
jle
fsts
jg
scas
ds
dec
and
mov
sub
outsb
dec
test
mov
nop
in
sbb
out
push
inc
jne
mov
xchg
push
push
sti
aam
jge
and
lods
mov
scas
cwtl
or
push
xor
test
add
and
inc
mov
push
std
sub
pop
scas
call
mov
aad
xorb
addr16
sbb
mov
js
imul
dec
test
fwait
add
stc
test
mov
lea
jne
push
mov
jmp
pop
sub
hlt
pop
lods
in
lea
push
cmc
push
xchg
les
mov
or
add
dec
sarb
mov
inc
std
ja
lret
negb
and
into
outsb
aam
or
gs
and
sbb
out
push
js
ret
adc
mov
movsl
rcl
adc
cwtl
sub
push
insl
mov
jb
push
cmpsl
sti
rclb
stc
mov
xlat
data16
cwtl
adc
push
sub
lods
and
movzbl
mov
pusha
bswap
lea
call
push
pushf
mov
lea
jne
pusha
jmp
sub
test
jb
jecxz
addb
test
imul
jns
sbb
insl
lahf
idivb
in
mov
or
bound
hlt
inc
fstpt
inc
out
adc
push
hlt
fistl
pop
jnp
in
mov
or
andl
gs
jae
test
cltd
sbb
and
stos
sub
cmp
mov
scas
mov
jb
cmp
ja
lret
into
push
push
sbb
pop
dec
cld
dec
arpl
lods
add
bound
push
cmc
mov
and
and
ret
fldcw
cmc
dec
cli
mov
push
mov
xchg
sbb
cmp
inc
ljmp
aam
insb
sub
int
cmp
xor
adc
or
in
cmp
insb
jne
add
cmp
or
xlat
fcompl
mov
or
xor
outsb
pop
adc
test
fistpl
pop
cmp
scas
sbb
je
pushf
movb
push
lea
jne
shrd
rcr
cmc
sub
pusha
setp
mov
push
bt
mov
seto
add
call
jmp
adc
testb
leave
mov
addr16
jl
sub
pop
inc
or
sub
mov
xchg
adc
rcrl
sbb
mov
add
shll
jne
in
incb
in
jb
test
shll
in
jne
push
shll
and
hlt
xchg
xor
dec
cmp
sar
xor
sti
neg
or
dec
test
cwtl
shlb
hlt
stc
adc
inc
das
pop
mov
jo
popl
iret
xchg
sub
popa
inc
fwait
data16
lock
and
js
xor
out
sbb
jno
xor
lret
xchg
sub
xlat
mov
lock
adc
test
lret
test
test
cmp
sbb
xchg
scas
wbinvd
ss
roll
jnp
cli
sbb
fsubrs
mov
mov
inc
push
icebp
daa
fwait
adc
mov
pop
scas
test
cmpsb
out
shll
jae
or
inc
mov
scas
mov
test
jg
test
sarb
sbb
adc
aaa
stos
insl
or
in
cld
loop
imul
mov
bound
icebp
xchg
bound
push
repnz
adc
sbb
jp
xchg
pop
sbb
pop
inc
push
ret
jge
mov
popl
fwait
or
push
xor
jo
call
cmp
xor
add
cmpsb
xlat
jg
icebp
pop
fisttpl
cmp
fs
scas
and
wrmsr
ds
jo
movsb
jle
adc
jns
iret
sbb
mov
jb
pop
insl
cmp
mov
fcompl
mov
jbe
outsb
mov
xchg
mov
out
xchg
xor
enter
subl
fidivs
jno
fimull
gs
and
sub
das
scas
ss
pop
xchg
movsb
or
lahf
rdpmc
xchg
and
mov
cltd
mov
cmpsb
out
in
clc
fstpt
testl
xor
je
out
dec
fists
add
push
xor
nop
stos
aas
outsl
jb
inc
shll
sahf
sti
mov
mov
scas
jmp
sahf
adc
and
cmpsb
mov
fdivrs
mov
mov
xchg
or
jle
mov
fistps
xlat
and
int
lret
ss
sbb
adc
jle
lock
mov
outsb
cmpsl
stos
add
mov
jecxz
mov
pusha
incb
add
and
mov
push
adc
les
xor
mov
lock
adc
sub
xlat
sub
mov
adc
jg
cmp
out
inc
mov
imul
dec
adc
addr16
inc
hlt
shlb
cmpsb
push
push
clc
sbb
mov
add
pop
push
xor
adcb
addr16
cmp
lcall
dec
jge
cltd
loopne
mov
jle
push
xor
pop
dec
xchg
shl
aas
out
mov
ds
lret
cmp
push
jno
movsb
enter
xchg
pop
sub
inc
pop
in
sbb
test
adc
scas
shrb
dec
mov
inc
lods
shlb
adc
adc
cli
fst
out
jge
rclb
test
cmp
mov
movsb
or
pop
mov
xor
mov
inc
mov
sub
jnp
jbe
pop
add
lods
aaa
jbe
hlt
lcall
insb
add
inc
rolb
cmpsl
xor
repnz
leave
xorb
pop
rolb
clc
sbb
add
mov
pop
dec
and
cmp
push
push
push
xchg
loop
cltd
rolb
sbb
and
or
ret
sahf
imul
mov
je
cmp
xor
mov
cmp
fldenv
mov
sub
imul
xor
adcb
adc
sahf
inc
lods
leave
iret
add
lods
xor
dec
sbb
pop
stos
lods
xor
xchg
lahf
inc
mov
push
or
or
mov
inc
xor
ja
es
xchg
sbb
xor
cld
xor
insl
jnp
mov
ficoms
add
mov
mov
and
out
insl
mov
stc
stos
scas
popa
inc
mov
push
xor
bound
inc
inc
mov
mov
aam
dec
push
gs
mov
sbbb
mov
pop
out
fsubrl
add
in
rcrl
outsl
mov
jge
repnz
xor
sbb
push
jno
and
cwtl
mov
arpl
roll
inc
push
cmpsb
or
mov
inc
insl
xor
xchg
mov
push
sub
xchg
shll
mov
rolb
mov
xorb
inc
inc
xor
dec
mov
inc
popa
mov
or
push
adc
out
fistpl
sahf
nop
dec
dec
movsb
sbb
add
and
or
out
jg
mov
xchg
test
fcomp
imulb
iret
rclb
je
cld
out
add
mov
dec
lret
sub
and
test
pop
arpl
shl
jae
psubw
imul
pop
jmp
scas
sbb
add
or
mov
dec
int3
sbb
mov
add
pop
scas
int3
pop
fstps
adc
and
int
adc
cmp
add
jp
dec
test
jns
push
scas
xchg
cmp
aam
add
pop
sub
cwtl
mul
sbb
mov
mov
shlb
in
ss
das
maskmovq
mull
cld
sarl
jl
fsts
sub
popf
push
mov
out
inc
sub
in
pop
leave
mov
mov
fsubl
lea
in
and
mov
rcrl
test
inc
nop
repz
sbb
add
iret
sbb
jmp
movsl
jnp
xchg
jb
int3
scas
lods
sub
sub
gs
rcrl
arpl
jnp
mov
mov
lods
aas
lahf
pop
adc
push
mov
hlt
lahf
mov
ss
leave
test
push
mov
push
clc
movsl
js
mov
pop
dec
fstl
outsb
dec
sbb
sub
and
xor
mov
outsl
or
jno
mov
out
jmp
mov
xorb
jle
adc
stos
add
lret
xor
imul
in
fdivrs
shll
pop
sti
xlat
xchg
cli
push
rclb
mov
xlat
jmp
mov
out
cmp
leave
aas
loope,pn
shll
sar
call
sbb
iret
xor
jo
dec
or
pop
pop
cmp
sbb
push
xchg
xchg
arpl
daa
xchg
iret
adc
and
dec
mov
std
fstps
dec
sub
cmc
popf
imul
stos
cltd
pop
mov
aaa
popa
dec
pop
xchg
mov
ljmp
call
fldenv
lahf
into
push
ss
jmp
pop
scas
dec
lock
inc
sbb
fadds
sahf
mov
lods
popf
adc
je
cmp
repz
rorb
hlt
mov
or
in
cmp
xchg
xchg
stos
and
ja
push
mov
xor
lods
and
mov
movsb
ja
pop
push
mov
cmc
xchg
pop
dec
dec
loopne
fistpl
and
mov
cmp
adc
xchg
add
mov
leave
lea
cmp
pop
bound
jo
out
flds
leave
adc
inc
loopne
mov
xor
movsl
insl
nop
sbb
insb
mov
aam
pop
stc
imul
cmc
jne
iret
cmp
loope
sub
inc
jmp
xchg
imul
push
insb
imul
fs
add
arpl
or
cs
add
or
pop
jle
sbb
int
pushf
lods
enter
maskmovq
mull
sbb
mov
inc
mov
sub
sbb
iret
sbb
cli
bnd
dec
sub
fisubrs
test
sub
adc
pushl
ret
hlt
loop
cmpsl
push
punpckhdq
push
sbb
adc
and
xor
xchg
push
push
inc
mov
xchg
into
aaa
mov
lret
push
cwtl
xchg
arpl
dec
fsub
ja
inc
mov
aas
push
inc
inc
xchg
push
and
pop
xchg
ret
mov
mov
mov
jno
stos
sub
dec
dec
xchg
dec
mov
test
into
adc
pop
adc
je
jecxz
test
xchg
out
xchg
mov
loopew
cmpsl
xor
fldenv
xor
lods
ficoml
add
dec
aaa
hlt
inc
rcrl
push
gs
lahf
sti
xor
ret
mov
shrl
push
orl
pushf
mov
xchg
jmp
sub
xor
push
dec
xor
in
into
xchg
ret
push
sbb
scas
fld1
inc
in
lretw
daa
ds
push
je
add
cmp
sbb
iret
out
jae
sbb
clc
or
out
push
add
xor
fldenv
pushf
xor
out
jle
fildll
in
sbb
mov
cmpl
pop
mov
popa
xchg
std
jnp
lahf
clc
push
outsb
outsb
aas
movsbl
imul
dec
add
mov
push
lock
dec
inc
inc
stos
insb
push
and
and
lods
push
adc
add
inc
mov
sub
sbb
push
in
and
push
xor
mov
in
rol
in
je
scas
sub
fldcw
push
mov
sbb
jo
xor
jbe
cli
mov
lret
ret
xor
push
les
shlb
mov
shr
subb
aam
xchg
ret
sahf
mov
mov
and
les
mov
cwtl
shl
popa
pop
mov
xor
aas
and
push
mov
and
or
sarl
shll
push
sbb
add
sub
jecxz
sti
cld
out
loop
sub
dec
mov
jg
sti
imul
mov
and
aad
push
push
cmpsb
mov
clc
adcl
dec
push
pop
dec
xchg
push
jb
scas
je
sbb
xor
les
stc
fisubrl
xor
xor
les
sub
xlat
jmp
cltd
clc
sbb
xchg
insb
outsb
pop
aaa
mov
jae
add
adc
and
push
xchg
xchg
arpl
sub
xlat
lods
gs
nop
push
inc
mov
repz
push
sub
shl
inc
and
mov
push
andb
mov
and
daa
and
cs
roll
inc
cmp
into
mov
aad
outsl
in
out
mov
pop
jg
jae
xchg
add
jno
adc
jge
jmp
fisttpll
scas
jns
cmpsb
sbb
sub
imul
inc
rcll
or
insb
std
jmp
out
es
xchg
cmc
add
pop
rcr
dec
std
into
inc
xchg
sub
lret
scas
mov
jle
jns
sbb
daa
jecxz
mov
loopne
xor
mov
push
mov
fsubl
test
lock
jmp
das
inc
push
xchg
repnz
pushf
in
or
sahf
ljmp
sbb
shlb
shl
mov
mov
ret
ja
in
push
adc
pop
pop
lds
popf
lea
or
mov
xor
aas
leave
xchg
lret
sub
push
add
repz
mov
add
mov
flds
mov
xlat
push
int3
jecxz
call
add
clc
dec
inc
xchg
fisttps
nop
imul
sub
add
ja
xchg
repnz
adc
insb
and
roll
aam
jecxz
adcb
in
and
push
or
adc
mov
push
push
fmuls
es
fmull
cli
pop
inc
ja
pop
sbb
addr16
mov
fisttpl
cmp
jle
aad
adcb
jnp
int
call
mov
cmp
jl
dec
adc
mov
dec
xor
mov
mov
sub
in
outsb
js
adc
je
in
jp
mov
call
in
jl
inc
rcrb
rorl
jg
out
jae
ja
lock
adc
mov
push
cmc
jle
mov
mov
pushf
rcrl
mov
dec
lret
inc
popa
loope
push
adc
xchg
xchg
in
and
mov
xor
add
mov
and
out
data16
and
pop
scas
aam
mov
jo
xor
lds
in
jo
sbb
jbe
add
mov
insb
int3
add
sbb
jmp
jns
sbb
in
loopne
push
aaa
xor
bound
icebp
cmpsb
cltd
or
je
js
and
lods
pop
into
push
cmc
mov
ds
inc
fldt
sahf
push
add
mov
dec
pop
sub
loop
mov
enter
popa
xor
lahf
ret
imul
fistpll
pushf
or
inc
jne
push
and
clc
pop
fucomp
and
pusha
inc
dec
in
xor
mov
movsl
mov
sbb
daa
int3
popf
push
mov
or
mov
push
ljmp
cmc
imul
insl
stc
jle
int
xor
jnp
sbbl
inc
jmp
lcall
fstpl
imul
push
jae
inc
gs
xlat
scas
repz
push
jne
rcll
or
shll
mov
cwtl
and
imul
jo
inc
dec
loop
or
js
hlt
fxam
mov
arpl
mov
jbe
jne
cmc
imul
pop
pop
mov
popf
fiadds
lret
sbb
sub
push
sahf
mov
clc
adc
mov
test
mov
movsl
fadds
addr16
fsts
mov
rolb
push
mov
xchg
adc
scas
add
push
ja
sahf
add
add
mov
adc
pop
in
jb
cmp
or
xorb
das
mov
cld
sbb
jl
roll
push
aaa
cli
outsb
xor
jp
push
lea
push
lea
push
ficoms
popf
jmp
xchg
or
je
pushf
adc
mov
jno
loopne
mov
push
xorb
insb
xor
sub
push
imul
inc
jle
mov
mov
fwait
stos
adc
xchg
xor
popa
icebp
test
adc
inc
addb
and
inc
lea
mov
fwait
jg
mov
mov
or
jbe
mov
scas
lahf
push
lds
xchg
lds
sbb
add
jmp
daa
mov
cmp
roll
xchg
ljmp
outsb
cmpsb
push
push
mov
and
orl
out
ret
enter
xacquire
fistps
pop
add
cmp
mov
outsl
fimull
jmp
inc
mov
xchg
popa
mov
addl
cltd
pop
mov
dec
xor
xor
lcall
fdivrl
mov
cmp
pop
setnp
lods
pop
jne
or
pop
in
or
adc
mov
jbe
lds
popf
mov
daa
jg
sbb
in
rol
jo
in
insl
jnp
push
decl
je
rorb
sub
popa
popa
sti
mov
aas
aaa
push
cli
jmp
inc
mov
xor
out
push
xlat
aam
push
inc
movsb
ja
lret
sub
mov
lds
lret
in
xor
cld
xchg
xchg
xor
insl
mov
pop
in
jmp
push
sbb
test
js
mov
es
sti
mov
pop
scas
xchg
test
pushf
jle
dec
mov
mov
mov
jnp
lcall
mov
in
cmc
test
sbb
fidivs
push
mul
aaa
push
cmpsb
fwait
xor
mov
and
mov
mov
das
pop
lea
rcl
lcall
out
es
push
sub
in
in
xor
pop
xchg
jnp
push
hlt
gs
lcall
fnstenv
xchg
lret
mov
test
and
add
sbb
cmpsb
fcmovnb
rclb
sub
jp
dec
sbb
push
jmp
xchg
iret
jl
mov
add
or
sub
lret
xchg
adcl
pop
mov
mov
scas
daa
ss
std
jecxz
jl
movsb
xor
sub
xlat
cmpsb
mov
cmpsb
xchg
test
pop
lods
pop
loop
roll
aas
cwtl
lahf
mov
or
add
das
push
push
lret
sahf
das
or
pop
lods
pop
mov
and
cmp
dec
rcl
push
and
pushf
ss
stos
mov
and
xchg
out
mov
fsubl
mov
and
test
fdivp
push
divb
sti
or
xbegin
and
enter
and
fldt
out
mov
push
pop
mov
call
lods
aad
xchg
pusha
lret
push
mov
or
fistpl
adc
push
je
fisttps
mov
aad
ficomps
cmp
push
dec
cs
jge
xchg
sub
icebp
repnz
hlt
imulb
std
inc
sarb
adc
ja
dec
or
push
cli
or
stos
sbb
xlat
sub
repnz
jae
and
push
sti
imul
je
or
cmp
mov
lret
lds
dec
push
ficoml
imul
leave
mov
ret
and
nop
add
popf
sbb
pop
cmp
jnp
push
mul
dec
mov
insb
xor
fcoml
shufps
dec
dec
in
shrl
lods
jg
sti
imul
push
sub
inc
and
pop
repnz
and
call
fs
jle
js
dec
push
mov
in
and
mov
push
jns
pushf
mov
cwtl
pop
sti
clc
scas
mov
mov
push
pop
lock
stos
jo
shrl
add
or
xchg
dec
fdivrl
test
xor
mov
xor
hlt
loop
lods
mov
popa
jne
faddl
inc
aas
jbe
push
mov
cmp
jae
or
cwtl
adc
je
dec
jl
rcrl
daa
dec
jb
pop
ficompl
sub
lea
and
shlb
xchg
adc
and
jmp
je
addr16
inc
sbb
scas
mov
outsl
pop
and
lcall
and
sub
out
fmull
sbb
repz
and
dec
dec
shr
stc
stos
cmp
out
pop
sub
cwtl
mov
out
lds
std
pop
or
sbb
gs
inc
jmp
cmp
stos
jno
ret
mov
loop
add
pushf
add
inc
add
xchg
xchg
and
pusha
push
pop
and
mov
push
scas
cmp
and
pop
xchg
sbb
mov
leave
push
cmpb
xor
jo
mov
test
jbe
xchg
test
inc
lds
jae
leave
cmp
xor
and
mov
lret
lret
ja
push
add
das
test
or
lahf
push
adc
push
jnp
mov
xchg
and
push
xchg
icebp
dec
cmp
cmp
in
sbb
mov
scas
mov
sbb
and
and
push
xor
xchg
jg
repz
sbb
inc
and
ja
mov
roll
add
push
sbb
mov
cmpsl
xorb
and
pop
cmpsl
xorb
jl
ljmp
subb
js
mul
mov
jmp
cld
or
lcall
aad
scas
adc
cmpsb
xorl
and
or
out
sarb
jge
das
das
inc
cmc
dec
sub
jno
mov
pushf
sti
or
shrl
sub
sbb
icebp
mov
stos
mov
push
mov
jbe
das
pop
dec
fwait
cld
or
ficompl
in
sub
mov
ret
mov
daa
out
data16
jp
data16
sub
pop
enter
subb
mov
and
push
enter
push
xchg
stos
icebp
inc
das
test
test
stos
adcb
fnstenv
aam
das
sbb
iret
out
mov
mov
addl
pop
std
push
pop
cltd
fucomi
adc
xor
add
push
gs
jbe
outsl
add
xor
mov
lcall
xor
clc
cmp
cmp
cld
in
push
lods
and
data16
repnz
add
es
das
jbe
in
lock
xchg
iret
inc
and
sbb
lods
mov
in
mov
not
inc
loopne
add
aad
rclb
inc
out
das
adc
pop
repz
imul
adc
jo
pop
cli
push
or
stos
push
sub
je
je
mov
scas
mov
push
cli
push
cmpsl
rclb
ds
xor
fldt
stos
lret
xchg
hlt
loop
push
cmpb
mov
mov
addl
sub
bound
stos
mov
sbb
jbe
jl
addr16
mov
or
pop
cmc
testb
pop
inc
hlt
repnz
push
bound
xor
xchg
jmp
mov
push
sti
cmpsb
insl
jnp
xlat
xchg
dec
lahf
mov
or
lret
inc
mov
mov
push
dec
jle
push
pushf
leave
pop
adc
in
inc
inc
jne
and
lahf
pop
adc
daa
xchg
sub
pop
inc
push
mov
push
pop
sti
push
jbe
mov
jp
scas
in
cltd
pop
outsb
add
or
jp
cmp
dec
cmpsl
sub
jae
add
mov
mov
outsl
xchg
enter
cmpsb
sub
ja
or
in
movsl
xorb
enter
js
mov
jno
in
faddl
je
xchg
out
push
mov
mov
pop
xlat
or
pop
outsb
push
dec
cltd
and
dec
daa
jbe
jecxz
push
into
or
jb
lock
mov
adc
sarb
mov
pushf
sub
iret
pop
or
xchg
push
add
cmp
xchg
out
fldcw
adc
lods
bndstx
shrb
xor
aas
adc
mov
icebp
inc
mov
cwtl
push
in
mov
pop
loope
xchg
jns
sahf
mov
fwait
popa
xor
mov
push
cmp
mov
and
mov
dec
dec
std
movb
mov
jbe
mov
inc
popf
xor
out
in
jno
rorb
lcall
arpl
inc
aam
out
push
cmp
dec
xor
arpl
mov
test
cli
push
cmp
sub
clc
ljmp
sub
fisubrl
out
int3
dec
inc
lea
push
sbb
je
int
push
push
jmp
dec
add
stos
cmc
daa
pop
sub
xchg
xor
lods
and
lods
lcall
stos
adc
aad
in
cld
leave
ret
out
xlat
lds
mov
sbb
mov
cmpsl
ret
or
test
clc
outsb
inc
fsubs
js
xor
adc
jno
imul
jb
inc
outsb
gs
rorb
lcall
push
insb
cmp
outsl
pop
popf
fnstcw
cmp
xchg
jl
inc
rcll
mov
insl
or
out
push
xchg
pop
mov
stc
push
mov
notb
test
jmp
xchg
jno
push
subb
je
mov
pop
adcl
xor
aas
mov
mov
mov
push
adc
jmp
repnz
out
test
mov
xchg
fsts
xchg
mov
repz
and
add
push
lret
test
and
in
or
and
sub
sar
das
lcall
sub
popf
mov
aam
insl
clc
push
adc
cmp
cltd
add
xchg
mov
shl
jne
addb
sbb
bound
fs
mov
decb
and
jo
add
fbstp
pop
cmp
ljmp
scas
inc
enter
movsl
out
sbb
jg,pn
cmp
inc
mov
fdiv
shl
seta
sub
clc
ror
sub
add
lea
pushf
call
ljmp
mov
push
and
jns
or
sti
sahf
imul
xor
pop
lcall
rcr
or
inc
add
push
add
daa
fnsave
or
cmc
pop
jne
and
jo
sub
jl
sbb
xor
out
push
fcompl
sar
aas
jge
cmp
dec
mov
loop
outsb
mov
jle
pop
test
cmp
loope
pop
jne
mov
push
scas
dec
mov
jl
inc
xor
aas
jl
dec
jecxz
mov
dec
jle
inc
sti
test
scas
daa
and
dec
cmpsl
mov
cmp
aaa
xchg
push
jge
dec
mov
pusha
and
cmove
jns
fucom
cmp
push
push
outsb
xchg
test
push
mov
push
xor
mov
das
or
shlb
in
lods
testb
rclb
cmp
mov
pop
out
fbld
gs
cmp
fst
mov
cwtl
push
push
mov
dec
cltd
addb
sub
add
add
movsb
fs
jns
std
or
pushf
sbb
mov
dec
into
stos
push
jl
mov
jo
aam
inc
jno
push
jl
push
cltd
mov
mov
rcrb
xor
lea
jae
pushf
lea
jmp
bound
pop
subb
mov
fists
call
js
sbb
cmp
repnz
lahf
sbb
mov
pushf
jmp
call
std
push
xchg
adc
lock
cwtl
or
pop
sbb
sub
push
dec
adc
in
push
pushf
out
dec
push
call
fistpl
leave
sbb
dec
fisubrs
mov
loopne
fstpt
adc
insb
jo
fistl
xchg
cmpsb
je
nop
pop
pop
insb
ss
or
loop
and
push
adc
dec
ret
cwtl
cmp
jmp
pop
ds
aam
dec
out
jmp
jno
add
add
jmp
jg
jo
pop
push
jle
testb
iret
xchg
int3
fucomi
es
xchg
dec
dec
lahf
lcall
mov
add
cs
pop
or
int3
mov
sarb
inc
xchg
into
int
sti
aas
cmp
pop
pop
inc
pop
xchg
movsl
pop
jmp
xchg
jg
insl
cld
out
je
aaa
pop
jge
fcmovnbe
int
jb
or
hlt
das
and
sbb
mov
insl
xor
or
adc
sbb
jo
scas
or
push
or
push
leave
aad
dec
and
bound
mov
divl
pop
fstpl
lcall
adc
data16
lret
shl
xlat
outsb
cmp
mov
clc
jmp
mov
cmpl
scas
loope
mov
pushf
std
mov
cmp
jmp
insb
inc
mov
nop
jne
jmp
mov
mov
insl
test
jg
js
pushf
fistl
aad
mov
push
into
jecxz
xchg
fidivrs
cld
ds
std
loope
xchg
cwtl
push
cmp
movw
jmp
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
xor
cs
insb
add
iret
aad
dec
ja
insl
cmpsb
sbb
or
sbb
dec
and
xchg
or
mov
decb
mov
loope
push
pop
shrl
push
pop
jle
push
bound
or
test
adc
aas
inc
imul
or
aas
xchg
jge
icebp
hlt
cmp
imul
mov
jmp
push
iret
cmp
xchg
pop
pop
fistpl
cmp
inc
mov
xor
mov
push
push
lods
setne
pop
fmuls
fistpl
fidivrl
mov
lret
mov
adc
push
jbe
add
add
enter
fsubr
sbb
incl
test
mov
cmpsb
data16
scas
loopne
je
ror
outsl
mov
fwait
push
jo
repnz
mov
sbb
pop
mov
cltd
pop
rcll
cmp
outsb
or
dec
push
leave
test
adc
cmp
jle
fs
dec
push
push
ss
and
std
imul
pushf
lret
popf
fldl
xor
add
jnp
mov
popa
jmp
movsb
pop
std
lods
cmp
je
pop
fsubs
sub
xlat
mov
mov
and
pushf
aad
mov
js
inc
ja
icebp
daa
cmpsb
sbb
xchg
sub
fsts
std
test
jbe
fistl
popf
push
test
or
mov
mov
testb
push
scas
jbe
cmp
sbb
dec
and
dec
sbb
test
les
gs
sub
push
sbb
shlb
inc
es
int3
mov
push
shll
push
fisubrs
xlat
mov
jne
and
dec
or
clc
push
mov
mov
push
movsb
or
fbld
imul
repz
or
dec
jmp
shrb
das
xchg
add
xchg
stos
test
dec
mov
or
pop
gs
mov
mov
mov
sub
mov
fs
psubw
cmp
pop
mov
xor
subl
sti
mov
mov
mov
jmpw
cld
call
nop
cwtl
ret
cli
out
loop
icebp
lcall
insb
sarl
or
jne
popa
dec
jo
add
call
stos
xchg
cmp
int3
mov
nopl
bound
push
fcoml
imul
mov
push
mov
mov
arpl
add
or
or
hlt
xor
jecxz
test
xchg
dec
pop
inc
sub
pop
lds
in
sahf
repnz
daa
repz
mov
add
enter
jae
sbb
dec
mov
sbb
xor
or
sti
mov
xchg
ljmp
out
pop
pop
pop
ret
imul
jae
dec
scas
push
scas
test
fwait
test
add
sbb
xor
sbb
shl
stos
adc
pop
mov
cmp
sub
add
adc
call
push
enter
int3
push
xor
mov
pushf
stc
cmc
add
movb
lea
jmp
dec
sti
xchg
pushf
add
cmp
or
or
insb
out
adc
mov
or
paddd
bound
insb
mov
loopne
xchg
shlb
rcrl
lcall
dec
sti
ja
cmp
sbb
cli
xlat
ret
inc
ret
and
add
pop
adc
dec
or
adc
inc
fnstcw
imul
dec
jnp
test
lret
sbb
push
les
sub
fidivl
lahf
push
fwait
xchg
pop
js
push
outsl
cmp
pop
mov
aad
nop
jne
push
xchg
adc
xchg
mov
mov
shrb
stos
dec
inc
les
mov
mov
outsl
hlt
rol
cwtl
ja
sti
adc
loope
out
fnstsw
pop
pop
pop
aad
lods
aaa
xor
movsl
jns
sti
dec
mov
ret
ret
sub
dec
jp
cs
or
mov
inc
cmp
fstpl
sub
xchg
call
sub
dec
cld
pusha
stos
cltd
push
loopne
xlat
pop
lcall
imul
cltd
pop
les
pop
jg
adc
ljmp
insl
imul
dec
cltd
repnz
xor
jno
repnz
fdivs
arpl
fstl
fmul
rorl
xor
scas
mov
jmp
inc
xchg
fldenv
ja
daa
mov
sbb
and
xchg
mov
rol
pushl
cmc
call
pusha
stos
ret
fimull
clc
js
stc
aaa
add
leave
ja
outsb
jbe
xchg
out
std
mov
fs
jp
addr16
jo
xor
and
pusha
xchg
push
mov
mov
inc
addr16
cmp
clc
push
enter
cmp
aas
fisttpl
xchg
jb
mov
std
push
xlat
sub
xchg
in
sbb
bound
pop
out
cld
es
mov
and
jb
jns
dec
es
dec
scas
xchg
and
push
inc
jnp
xor
loopne
cmp
mov
add
inc
js
jb
arpl
outsl
outsb
inc
js
add
fisttpl
aaa
sbb
aam
dec
lar
dec
repz
jno
outsb
adc
jo
lcall
dec
adc
cwtl
outsb
andb
mov
mov
ret
pop
in
pop
ds
enter
fucomi
in
sbb
rcl
test
outsl
sub
add
push
mov
sbb
lock
jo
call
xor
push
jecxz
mov
loope
pop
aam
or
subb
jge
cmp
and
cmp
loope
cmpb
mov
ret
push
cmp
out
push
mov
xchg
incl
and
inc
and
loop
lea
jne
adc
shld
sar
xor
movzbw
movsbw
push
mov
pusha
dec
stc
dec
add
sbb
inc
mov
bt
mov
cmc
test
jmp
lea
jae
jmp
sbb
fmull
and
mov
pop
enter
inc
loop
sbb
and
ret
imul
sbb
aam
push
cmc
stc
sub
mov
mov
je
cmp
adc
mov
push
std
test
push
sbb
cld
dec
mov
out
xchg
push
inc
lds
mov
push
jns
sbb
push
jg
mov
into
push
pop
sub
mov
inc
movsl
xor
enter
ja
inc
pusha
sub
das
mov
aaa
xchg
adc
add
mov
inc
inc
mov
cmp
push
shrl
push
and
cs
fs
xchg
pusha
shll
jecxz
xchg
lahf
rol
mov
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbbl
sar
pusha
add
mov
jmp
dec
dec
inc
push
push
dec
xor
cs
dec
dec
add
test
call
ds
mov
lahf
xor
dec
dec
arpl
jne
adc
stos
fists
push
arpl
sbb
mov
push
in
xor
movsl
push
lds
lods
cmp
mov
xor
notb
push
xchg
jmp
cmp
ds
rcrl
cwtl
inc
lret
and
mov
shlb
stos
js
mov
cmp
push
add
aaa
leave
cmp
ljmp
jmp
pushf
push
aas
fimuls
cmp
or
es
and
aaa
pop
mov
and
in
push
aaa
fdiv
pop
div
mov
aaa
push
jle
inc
jg
jb
aad
xlat
lods
jno
loop
inc
cmpsb
sub
cmp
dec
lcall
or
adc
cli
push
scas
repz
jl
enter
popf
das
adc
lock
push
pop
cmp
sbb
mov
adc
jnp
cltd
push
add
out
xchg
movsb
icebp
lock
xchg
in
nop
fimull
insb
out
adc
jnp
add
imul
cwtl
roll
push
xchg
scas
push
icebp
clc
and
jo
lcall
cmpsl
push
jne
xchg
push
sub
pop
fistl
pop
mov
add
jno
mov
mov
movsb
mov
in
insl
pop
out
sbb
and
or
mov
adc
mov
sbb
out
lea
bswap
lea
mov
bswap
call
pushf
lea
ja
cmc
imul
pusha
clc
add
pusha
push
lea
jmp
call
lret
fisttps
pop
sub
inc
and
dec
or
add
icebp
sbb
sub
shrb
mov
cmp
call
iret
scas
insl
mov
enter
out
aad
jmp
jo
and
push
lea
sbb
jle
mov
cmp
ficoms
sahf
xor
dec
rclb
cwtl
lods
daa
push
in
stos
xor
inc
mov
or
subl
cmc
jmp
mov
and
mov
bts
mov
jmp
xchg
aam
mov
lods
pop
or
inc
jae
mov
cli
mov
fsubrl
adc
fmull
gs
addr16
popa
cmp
mov
dec
add
dec
jae
test
ljmp
cmpsl
cltd
movsb
xor
xlat
int
xor
mov
jmp
pop
push
and
xchg
cmp
repz
xchg
shll
mov
test
shl
out
dec
cmp
sbbb
ret
push
stc
stos
lahf
mov
fmuls
lods
sbb
and
add
jb
loop
movsl
and
aas
loop
daa
and
sub
ss
and
mov
jmp
pop
jo
adc
lock
insb
addr16
rcrb
dec
mov
xor
dec
lahf
or
das
lret
icebp
scas
popa
sti
push
out
xchg
loope
xchg
or
xor
adc
cmp
sbb
xor
lcall
mov
mov
lods
sti
cltd
pop
xchg
cmpl
sub
pop
pop
cwtl
inc
sbb
fs
jae
jmp
mov
dec
insb
sbb
cmp
fwait
xor
ss
idivl
in
jne
aaa
mov
sub
xchg
fistps
cltd
cmp
pop
pop
jne
add
cmp
std
adc
sbb
outsb
fmull
xor
mov
and
ss
push
jb
adc
xchg
sbb
inc
std
fidivl
pop
aad
jnp
repz
and
mov
outsb
cmp
lock
xchg
ret
fistpl
pusha
push
mov
into
adc
arpl
rcll
xchg
popa
jle
iret
mov
imul
ret
daa
and
hlt
pop
add
stc
push
xchg
outsl
add
add
popf
movsb
out
xchg
outsb
movsl
pop
divl
mov
lds
imul
xchg
hlt
shr
sbb
push
fs
add
jno
pushf
clc
sub
cmp
pushl
popl
cmc
cmp
jmp
jmp
and
mov
rcrb
call
fsts
sbb
out
scas
test
sahf
loop
iret
pop
icebp
test
insb
xor
and
ret
mov
or
arpl
mov
sub
adc
lcall
sbb
jg
inc
lsl
xchg
fistl
rorl
mov
push
add
push
out
mov
insl
xor
into
fwait
mov
loope
dec
aad
movsl
test
xchg
shl
cmp
test
rclb
arpl
bound
push
call
mov
mov
push
and
in
pushf
mov
cs
lahf
pop
pop
sub
push
out
clc
fidivrs
push
ret
dec
pop
and
in
xor
sbb
or
lock
push
add
daa
cli
inc
mov
sbb
std
in
xor
nop
pop
cld
inc
push
sub
inc
cmp
das
push
iret
mov
add
or
je
rolb
shrl
add
push
sub
mov
shld
ror
or
not
mov
shl
mov
pusha
pushf
stc
movb
or
call
pusha
movl
mov
mov
push
mov
pushf
movw
pushl
ret
cmp
movw
movw
mov
lea
je
push
pusha
pushf
lea
jmp
call
lea
jbe
pushf
rol
rcr
bswap
sub
inc
not
mov
sub
neg
xor
neg
bswap
mov
and
neg
add
add
and
dec
shr
bsr
btc
mov
sbb
bt
add
jmp
push
es
movsb
mov
and
sub
mov
cmpsb
pop
jno
inc
bound
jmp
mov
push
push
mov
mov
or
xor
sub
jne
fsts
adc
push
cmc
add
int3
cmp
jb
jg
pop
xchg
adc
lea
movsb
and
sar
xor
pop
ljmp
adc
cmp
loop
ja
push
scas
pop
je
sub
mov
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
lea
add
sbb
adc
add
add
or
add
test
add
add
add
add
addb
add
add
add
repnz
add
add
sbb
sub
add
add
add
insb
sbb
mov
pop
adc
lea
pusha
push
call
movsl
mov
rclb
in
sub
lret
lret
test
data16
pop
loop
dec
adc
test
jns
mov
sub
stc
push
lea
aad
push
cs
test
mov
ret
popw
dec
mov
pop
or
jne
jno
lahf
loopne
xchg
mov
fbstp
inc
loopne
imul
push
dec
pop
or
and
inc
into
sahf
iret
mov
adc
notl
pusha
xor
loop
leave
movsb
mov
fs
jae
jmp
pop
mov
add
cltd
push
outsb
and
mov
and
xchg
in
insl
sub
adc
inc
aas
push
and
loopne
inc
or
mov
sbbl
pop
sub
jo
jne
adc
adc
sub
fwait
iret
pop
test
into
dec
mov
ljmp
xchg
icebp
mov
mov
jbe
cs
mov
icebp
cmpsl
sbb
xchg
push
xchg
adc
cmpsl
fsts
dec
cmc
lods
jne
out
sbb
fs
aaa
push
stos
mov
inc
stc
movzbw
mov
bt
cmpb
push
call
push
xlat
cmpsb
mov
dec
add
xor
outsl
pop
outsl
and
shr
jns
in
sahf
lahf
sub
out
loopne
test
iret
int3
jbe
and
cwtl
dec
imul
dec
xor
jmp
aaa
pop
gs
sub
dec
ficomps
adc
push
loopne
repnz
test
xchg
xchg
cli
negb
adc
xor
xchg
xor
out
repz
ret
cmpsl
mov
iret
outsl
mov
pop
add
shr
sub
clc
dec
pop
mov
jl
enter
sub
xor
mov
push
js
lahf
arpl
sbb
dec
pop
and
or
lea
pop
xor
pop
int3
jb
test
mov
mov
aam
mov
fs
add
fldenv
mov
movsl
sub
fwait
inc
sbb
cwtl
stos
jp
movsl
aad
ja
dec
iret
imul
add
pop
imul
cmp
pop
xchg
add
mov
add
adc
stos
repz
ds
in
sub
jno
dec
mov
mov
sub
sub
inc
mov
and
adc
or
push
xchg
mov
nop
stc
or
mov
or
rclb
xchg
sbb
xlat
andl
daa
fldl
inc
std
xor
dec
fs
pop
mulb
jns
shl
mov
xor
popa
lock
adc
insl
inc
cmpb
cmpsb
jb
mov
out
jl
xor
cld
mov
into
pusha
movsb
gs
xor
xchg
addr16
sbb
cs
shr
subb
sbb
pop
xchg
mov
sbb
cmp
xor
nopl
sub
mov
jp
repnz
or
mov
or
pop
fs
loopne
add
mov
push
stc
mov
subb
add
and
mov
scas
in
pop
adcb
inc
xor
push
sub
flds
push
cli
dec
lret
xor
dec
jne
mov
fs
je
test
test
pushf
bt
sub
movb
call
lea
je
stc
cmp
sub
clc
clc
pushf
cmp
cmp
mov
pusha
call
lea
jmp
in
aad
mov
jecxz
dec
xor
add
add
or
imul
cmpsb
test
mov
dec
ljmp
or
faddl
xchg
jg
sbb
sub
inc
push
ret
add
mov
imul
jge
cmp
sub
mov
inc
scas
pop
add
jecxz
mov
sub
call
sti
test
popl
imul
inc
je
push
fwait
repz
inc
mov
mov
add
push
inc
cmc
mov
int3
cmp
scas
xchg
add
xor
inc
xor
gs
sbb
mov
icebp
mov
adc
inc
jo
mov
scas
or
push
repnz
call
xchg
bt
adc
btc
bt
mov
bt
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmp
ret
ljmp
or
xchg
push
lods
or
int3
add
leave
pusha
inc
movsb
movsl
xor
mov
pop
push
lea
mulb
jl
cmp
mov
in
and
mov
add
ficoml
arpl
xlat
add
pop
pushf
mov
push
imul
hlt
nop
sbb
subb
pushf
push
mov
jnp
aam
pusha
rol
xchg
or
sbb
or
fs
ja
call
out
fldt
pop
pusha
sub
lods
mov
sbb
loope
leave
movsl
out
xchg
dec
loope
cltd
ss
inc
into
rorl
movsb
sbb
mov
in
mov
or
mov
jecxz
in
movsl
aam
mull
mov
rorb
test
loop
shll
jbe
push
dec
je
dec
or
xchg
cmp
pop
jge
imul
jl
fldl
mov
xor
xchg
jg
or
fs
jp
dec
mull
sbb
dec
into
stos
nop
rol
inc
and
in
pushf
movl
pushl
lea
jmp
pushf
mov
push
lea
jne
pusha
cwtl
lea
pushf
movb
bswap
push
pushf
sete
mov
lahf
not
not
lea
jne
lea
jmp
fucomp
fldt
push
xchg
mov
repz
cmp
sahf
jno
push
pop
mov
lock
mov
push
mov
xchg
and
cmp
jbe
mov
lret
push
les
add
xor
shl
fadds
testb
adc
jl
jns
lcall
sub
xchg
and
repnz
push
pop
push
inc
idivl
leave
inc
sarl
jp
mov
dec
xchg
fsubs
mov
and
adc
pop
sub
inc
outsb
xchg
or
roll
push
rcl
and
gs
push
loope
leave
mov
sub
push
jp
jo
sub
mov
lds
ret
or
sub
movsl
sub
fs
inc
push
xchg
mov
arpl
adc
or
mov
pushf
lea
call
call
test
mov
call
loop
shrl
xchg
movsb
jmp
sbb
xlat
loop
pop
or
push
js
cltd
loop
jl
push
ja
push
aaa
in
jo
jb
int3
imul
repz
cmp
out
sahf
xchg
notl
adc
roll
sbb
cmpsl
in
mov
scas
fs
sbbl
lcall
repz
pop
cmp
sbb
pop
jnp
mov
lods
mov
stos
add
loop
cwtl
cs
shlb
nop
aam
dec
addr16
jle
sub
das
jecxz
jle
jns
stos
movsl
sbb
shl
mov
jge
xchg
shlb
data16
sahf
cmp
popf
and
and
cmpsl
pushf
sub
cli
xchg
inc
lea
inc
addr16
mov
loopne
mov
imul
fs
das
pushf
cmp
ja
jp
insl
jae
outsl
jge
xor
jno
sub
aaa
insl
pushf
mov
dec
setp
cwtl
and
data16
xchg
les
sub
lahf
mov
xchg
mov
sub
jle
cmp
xchg
xor
lcall
jno
jl
sub
xor
outsl
cmpsb
andl
jne
test
and
jg
inc
sub
subb
les
cmp
mov
imul
inc
xchg
cltd
in
lods
dec
xor
cld
hlt
shll
rorb
cmp
sub
push
xor
sub
push
sbb
out
fsubl
das
fsubrl
adc
xchg
mov
xchg
xor
adc
rcl
xor
gs
xor
xor
sub
pop
xor
add
scas
fwait
lcall
xor
bound
and
push
pushf
enter
and
jg
xchg
lcall
outsb
mov
ret
push
push
hlt
out
add
lods
xchg
cld
or
and
insb
xor
mov
ds
lret
xchg
sti
pop
insb
cltd
push
pop
cs
pop
xchg
mov
push
mov
add
adc
xchg
bound
pop
push
mov
push
jl
les
loope
aaa
hlt
pop
ds
sub
cwtl
gs
adc
sbb
xor
lcall
pop
mov
clc
insl
pop
lods
jae
mov
test
sub
je
mov
xor
sub
insb
pop
adc
aas
or
cmp
cwtl
cmp
ss
and
cs
jns
out
mov
arpl
pop
dec
fmull
sti
outsl
dec
arpl
test
pop
cld
xor
cmp
and
xor
arpl
pusha
xor
xor
cmp
mov
pop
cmp
or
sbb
popa
adc
mov
icebp
aas
jns
cs
pop
cwtl
mov
testl
cmp
outsl
xchg
xchg
xchg
outsb
push
fwait
movsb
in
inc
and
sub
cmp
popa
je
dec
aad
pop
movsb
ja
xchg
xor
inc
test
xchg
jo
les
dec
fxch
mov
shlb
sti
lcall
mov
hlt
jo
enter
push
inc
push
andb
cmp
call
jo
movsb
jl
dec
cmp
arpl
push
mov
pushf
xor
pop
lea
jl
int
mov
outsl
cmp
subl
arpl
xor
and
mov
in
cmpsb
push
mov
scas
jge
sub
movsl
push
fsubl
dec
sahf
xor
push
push
push
inc
jns
push
lahf
js
fsubl
pop
pop
and
sub
mov
lods
mov
fxch
pop
mov
test
gs
inc
dec
sub
inc
sub
inc
fcomps
cmp
fnsave
lret
enter
jp
jae
imul
sub
xchg
jo
cmp
push
mov
mov
fs
xor
cs
inc
sub
pop
xor
scas
fcmovnu
pop
cmp
sbb
imul
cmpl
lods
rolb
cmc
sbb
es
mov
sub
dec
adc
sbb
imul
stos
lahf
js
cltd
fcompl
lods
cwtl
mov
lds
push
push
mov
repz
cmp
test
sub
jne
call
lods
mov
pop
mov
test
enter
dec
mov
mov
jmp
mov
pop
sub
outsb
push
push
sbb
inc
xor
test
pop
dec
sub
xor
mov
xor
aam
dec
jo
push
das
mov
xchg
outsl
ss
xor
pop
mov
jno
cmp
js
test
xor
dec
fsubl
adc
xor
dec
or
lret
mov
sbb
xchg
inc
mov
cld
pop
testl
jne
mov
loop
sbb
movsb
das
fwait
pushf
push
sub
gs
dec
aam
lret
dec
aas
pushf
cmp
aaa
xor
hlt
dec
adc
aam
xor
pcmpeqb
ds
bound
xor
pop
sbb
push
dec
jne
sub
fs
or
pop
cmp
xor
add
in
ret
and
pop
loop
xor
insl
bound
xchg
mov
inc
movsl
rcl
bound
fnsave
loop
push
jecxz
ds
stos
cmc
cli
lcall
lea
js
sbbl
nop
sub
dec
int3
cmp
mov
outsl
xor
int3
inc
stos
mov
cmp
xor
add
xor
push
test
xor
pop
inc
pushf
je
sarl
inc
dec
nop
mov
in
arpl
adc
mov
lea
add
xor
xor
sbb
sub
ljmp
cs
dec
enter
add
in
pop
dec
sub
dec
sbb
insb
pop
test
pop
arpl
push
inc
and
std
cltd
xchg
mov
push
or
xor
mov
pop
cs
push
cmc
push
out
test
clc
cs
imul
dec
mov
popf
fs
jge
push
push
pop
les
sub
pop
cs
test
movsb
scas
mov
lods
in
dec
sub
mov
cmpsb
pop
je
mov
jge
es
sub
popf
sbb
aaa
push
dec
and
mov
push
sarb
addr16
or
xor
push
mov
mov
movsb
test
les
nop
iret
test
mov
sub
in
cmp
jno
push
imul
ss
sub
sbb
idivl
sub
mov
pop
pop
push
jb
add
lea
dec
and
lret
xchg
fs
test
mov
cs
xor
inc
sub
pop
inc
insb
xor
das
push
bound
pop
in
inc
popa
aad
xor
rclb
cld
loopne
sub
mov
js
pop
sbb
mov
aam
stos
nop
dec
movsb
das
sub
adc
xchg
xchg
xor
xor
mov
gs
fdivrs
call
and
je
push
cld
push
lods
es
mov
lea
pop
pop
and
rol
nop
test
push
inc
daa
lcall
sbb
int3
xor
adc
bound
sub
clc
lods
int3
inc
jne
js
lahf
mov
bound
pop
pop
mov
data16
aas
scas
inc
push
aad
inc
cwtl
mov
cs
dec
call
cmpsl
jo
push
int
shll
jno
mov
mov
aaa
cld
test
nop
xchg
out
pusha
inc
cmp
inc
int3
fstps
movsl
pop
mov
xor
lods
cmpsl
cwtl
add
test
cmp
in
fdivrs
mov
insb
test
and
lahf
mov
mov
insb
mov
and
in
cld
lods
push
sub
test
lea
mov
pop
or
mov
push
movsb
addr16
xor
sub
mov
inc
hlt
dec
cld
push
jmp
cmpsb
dec
hlt
cmp
adc
call
cmp
nop
je
mov
pushf
leave
int3
or
xor
pop
test
push
cmp
or
mov
push
pushf
popa
or
push
cltd
das
cmp
je
mov
lds
lahf
rcrb
das
dec
add
dec
movsb
dec
sub
stos
in
jns
and
xchg
xor
icebp
cmp
icebp
xor
xor
xor
lock
mov
dec
rcrb
push
mov
pop
insl
xor
or
sarb
fildl
mov
xor
or
mov
mov
mov
imul
fdivrl
push
mov
pop
jns
mov
icebp
das
pushf
jae
xor
repnz
or
mov
das
dec
mov
les
dec
cmp
cli
clc
aas
add
inc
push
mov
test
push
lods
push
fdivrp
jge
faddl
cwtl
mov
mov
mov
mov
cmpsb
aas
push
push
stos
decb
xor
leave
movsb
pop
mov
out
dec
jg
pop
pop
sahf
in
cmp
jo
push
sbb
fwait
cwtl
hlt
idivl
mov
dec
mov
cwtl
jbe
jmp
inc
mov
jge
xor
inc
xchg
ja
pop
in
je
pushf
lock
sti
add
hlt
inc
sub
cwtl
sti
jo
cmp
dec
jle
ja
mov
add
xchg
sbb
insl
mov
popf
jmp
outsb
pop
sbb
mov
push
cld
imul
dec
push
or
xchg
jl
das
inc
mov
in
pop
jo
mov
movsl
cs
imul
jecxz
in
in
push
in
add
outsb
and
pop
sbb
insb
ss
dec
dec
add
lret
ret
or
push
mov
cmp
inc
push
imul
lret
jl
dec
mov
xor
in
cmp
push
dec
pushf
inc
js
pop
cmp
imul
scas
cmp
pop
xor
aas
mov
cmp
test
push
push
inc
data16
push
clc
imul
test
cmp
push
pop
stos
testb
lret
xor
das
and
js
addr16
mov
pop
aam
cmp
pop
movsb
loopne
aaa
pop
sbb
sub
test
insb
es
mov
push
in
mov
repnz
adc
shrb
out
repz
mov
cmp
decb
pop
test
fwait
pushf
xchg
imul
dec
or
push
pop
push
cmp
scas
jo
sbb
or
imul
push
jl
aad
sub
outsb
mov
jo
in
adc
cltd
xor
je
fstpt
mov
pushf
adc
nop
repnz
movsb
push
xor
adc
aaa
insb
xor
xor
xchg
pusha
lock
sub
dec
outsb
ja
ss
mov
jbe
cmp
daa
aaa
push
ret
mov
das
pop
mov
xor
popf
push
mov
lods
dec
scas
jg
adc
cwtl
xor
jo
xchg
xor
mov
sbb
ds
test
js
ret
push
sbb
lret
fdivl
dec
loop
aas
arpl
shll
xchg
pop
cmp
stos
inc
xor
jmp
adc
lods
push
push
pop
lock
cmpb
cld
dec
mov
mov
xor
jne
mov
pcmpeqb
fstpl
dec
mov
in
js
dec
imul
rorb
mov
push
int3
out
mov
aas
or
ds
lahf
push
lea
push
xor
movsl
jg,pn
arpl
mov
adc
mov
add
icebp
fst
das
sbb
or
rorb
jno
sti
mov
leave
les
addr16
je
sahf
sub
xchg
fwait
mov
xor
int3
cwtl
xor
cmp
or
inc
xor
cmp
sub
and
sub
mov
sbb
cmp
repz
mov
lret
xor
adc
cmp
cmp
js
sub
xor
xor
fsub
jbe
pop
and
mov
imul
scas
cmp
mov
ss
adc
dec
clc
sub
dec
lods
addr16
xchg
int3
push
and
mov
hlt
cltd
insb
lds
shrb
jns
je
jae
clc
pushf
je
sarl
pop
add
xor
aam
pop
dec
shlb
xor
push
aam
xor
cmpsl
xor
test
loopne
dec
jle
mov
inc
xor
jl
dec
call
jne
addr16
pop
imul
xchg
daa
sub
les
sbbl
or
das
push
mov
and
mov
inc
pop
push
shll
inc
das
jae
inc
xor
inc
rorb
fwait
push
pusha
lods
js
jg,pn
ljmp
push
push
inc
and
ret
stos
dec
jo
jo
repz
push
inc
xor
sub
add
add
nop
das
jp
cmp
pop
pop
pop
imul
inc
mov
decb
and
dec
jge
xchg
mov
or
test
mov
mov
jl
xorb
and
adc
cmp
jnp
pop
mov
sbb
push
hlt
xor
les
add
jnp
dec
imul
jo
add
in
lcall
shrl
cmp
lock
push
cmpb
or
mov
sub
inc
fcompl
das
gs
ret
sub
pusha
xor
push
fdiv
out
pushf
xchg
inc
add
sbb
and
cmp
fs
jmp
iret
xchg
rcr
aad
push
scas
dec
js
sub
inc
xor
mov
in
xchg
stos
shlb
xlat
movsb
cwtl
inc
sub
test
cmp
xchg
bound
mov
xor
add
in
xor
inc
aam
loopne
aaa
test
push
pop
call
dec
sub
push
jno
outsl
inc
sbb
cmpsb
pop
xchg
push
inc
push
shlb
mov
data16
cli
push
sbb
iret
jns
dec
inc
add
lds
dec
int
rol
mov
ret
mov
jnp
jg
lods
dec
xchg
push
or
pop
cmpb
or
mov
shlb
nop
push
pop
ja
push
mov
imul
mov
in
cwtl
add
lods
xchg
add
data16
jmp
mov
jle
inc
or
pop
aaa
jns
pop
outsb
arpl
insb
cmp
adcb
out
and
dec
push
fildl
xor
repnz
test
inc
adc
xor
push
arpl
or
cld
shlb
xor
ret
pop
mov
push
or
pushf
jnp
imul
clc
addb
cwtl
je
je,pn
xor
mov
push
adc
imul
cmp
sub
xor
test
outsl
cmp
aam
loop
sub
insl
pop
rolb
ja
jg
movsb
imul
xor
mov
jne
mov
pop
fs
lock
pop
inc
rolb
imul
xor
cmp
pop
sub
imul
cmp
pop
insb
addr16
cmp
sbb
mov
push
push
inc
lods
or
xchg
push
imul
insb
pop
scas
and
outsb
adc
movsl
sub
ds
out
cwtl
push
mov
inc
cmpsb
je
push
aas
movsb
push
and
xchg
dec
or
lcall
push
scas
inc
insb
pop
test
and
xchg
push
insb
iret
mov
mov
sbb
sub
cs
mov
cli
dec
jmp
sub
and
sub
jle
pop
dec
pop
enter
sub
mov
outsb
mov
jb
adc
int3
hlt
movsb
mov
das
dec
push
jne
call
sbbb
fcompl
inc
push
cmpsl
mov
cwtl
mov
lcall
aas
xor
shlb
cmp
nop
jne
sub
mov
fsubrs
data16
setle
je
pop
add
mov
fcomps
sub
jge
push
xchg
in
xor
mov
pop
in
push
push
lods
nop
push
dec
ds
repz
xchg
adc
es
fcmove
mov
sub
inc
lds
pusha
gs
sub
inc
shrb
sbb
xor
fmuls
imul
js,pn
dec
fdivrl
adcl
adc
jmp
ficoms
in
adc
ror
adc
or
adc
add
adc
cli
notl
in
repnz
adc
enter
sarb
add
rep
jmp
mov
add
lods
adc
repnz
cmovne
sub
aaa
dec
add
fcoml
inc
xor
mov
outsb
add
jle
lods
xchg
jb
js
xor
mov
xor
mov
sbb
lea
ljmp
mov
out
out
sub
xor
jns
xchg
mov
dec
sbb
clc
pusha
lahf
scas
xchg
mov
and
enter
orb
pop
xchg
ljmp
jl
mov
add
pop
dec
into
test
shlb
jle
sti
stos
xor
sub
mov
enter
les
popl
aad
pop
testl
sub
xchg
int
sub
in
lea
add
rorb
enter
aas
sub
xor
xlat
xor
push
jmp
shlb
xor
pop
dec
sarb
jb
sub
in
fs
sub
mov
cmp
in
leave
dec
push
jns
insb
or
shll
inc
push
or
fwait
das
das
ds
xorb
test
jns
mov
aas
jae
sub
cmp
js
cwtl
xor
lock
out
test
fnsave
inc
fs
sub
pop
mov
fstpl
pushf
mov
mov
add
dec
pop
cwtl
xor
sbb
pop
cwtl
cltd
scas
shrb
sub
lahf
das
lea
or
push
insb
shll
sub
arpl
jbe
dec
mov
js
jne
inc
cltd
cs
mov
xor
mov
int3
enter
or
cld
cltd
enter
cmp
das
insb
mov
lods
stc
lods
call
mov
cmp
xchg
cwtl
clc
push
cli
repz
xor
orb
xor
mov
jge
and
mov
and
dec
pop
insb
sub
inc
push
insb
and
dec
sbb
jge
inc
fwait
dec
inc
lods
and
nop
cwtl
sub
jns
xor
js
das
hlt
mov
cld
cmp
or
sub
inc
push
scas
mov
adc
aas
ret
mov
aad
pop
xlat
mov
outsl
pop
xor
sahf
test
popf
xchg
sub
aad
fiadds
or
jae
lahf
mov
pop
xor
pushf
pushf
push
lea
cld
sub
imul
cmp
xchg
adc
lods
jns
dec
mov
dec
xor
xor
je
comiss
js
dec
xor
loop
imull
lds
jle
in
cmp
cmp
xor
xor
jp
cs
aaa
or
push
pop
xor
daa
into
mov
cs
lret
sbb
subb
xchg
inc
add
bound
movsb
inc
pop
pop
js
stc
sub
cltd
xor
or
fld
repz
nop
xor
xor
insb
push
push
cs
sbb
dec
mov
test
das
pop
and
int3
imul
xor
sub
push
bound
inc
mov
xor
out
adc
pushf
mov
fistpll
xchg
cltd
ficompl
ret
pushf
scas
xchg
orb
pop
and
xor
enter
imul
lret
push
jmp
andb
dec
sbb
aam
jl
push
out
xor
sub
es
push
leave
cmp
mov
rclb
pop
lock
aad
insl
int3
out
and
cmp
adc
and
pop
or
cmp
push
mov
xor
or
cmp
xor
stos
xor
sub
xor
adc
gs
xor
xor
les
mov
sub
test
cmp
jle
push
pop
mov
lret
adc
push
je
jb
jns
lcall
jo
cmp
outsb
pop
stc
mov
call
aam
push
inc
popa
lcall
imul
pop
cs
cmp
mov
push
pop
dec
dec
push
inc
xor
cmp
ficoml
popa
les
lcall
sbb
lret
enter
sti
jbe
sbb
arpl
aam
popf
dec
inc
inc
jge
xor
sub
xor
inc
mov
mov
nop
cs
jl
sub
dec
test
sub
popa
mov
push
adc
pop
push
or
out
aaa
jmp
inc
nop
jle
cmp
int3
push
cmp
dec
dec
pop
js
mov
mov
subb
push
cmpsb
jo
xchg
inc
lea
pop
dec
pop
xchg
imul
inc
add
pop
dec
pop
imul
arpl
cmp
insl
jne
fmulp
xchg
dec
sahf
call
sbb
pop
mov
jno
inc
pop
jnp
loope
sub
sbb
pop
stos
jbe
add
cmc
sub
mov
dec
jns
and
xchg
inc
cmp
adc
sub
cwtl
xor
test
sub
mov
cwtl
push
xchg
fistl
aam
das
pop
ret
call
addr16
push
mov
cmp
ds
jle
jl
fdivrs
add
cmp
jl
cld
sub
adc
jg
sub
and
das
cmp
clc
or
addr16
insb
cmp
xor
dec
sub
arpl
jnp
dec
cmp
mov
push
insb
push
mov
add
nop
dec
cmpsl
pop
adc
push
mov
add
call
cli
inc
cmp
mov
inc
push
pushf
jl
data16
dec
orl
cmp
xorl
push
dec
lock
sbb
xor
paddsb
int
out
fnstsw
aad
mov
in
xor
pop
dec
xor
incb
ja
ljmp
out
xor
inc
lahf
add
xor
aad
decb
pop
jle
test
aad
push
lds
cmp
clc
pushf
push
or
mov
pop
push
pop
xor
mov
or
movsl
les
aad
dec
pop
int3
mov
dec
lds
scas
cmp
push
pop
mov
imul
decl
aaa
pop
gs
xchg
cltd
dec
mov
inc
in
bound
mov
xchg
in
lods
clc
cmp
or
mov
mov
scas
and
sub
lods
adc
mov
lahf
test
xor
xchg
lods
lahf
cwtl
or
int
xchg
cmpl
enter
mov
fwait
out
lock
xor
in
inc
xchg
vmovq
out
lret
dec
dec
adc
xchg
pop
dec
addr16
push
in
jle
push
lods
aam
in
xchg
sti
in
and
jmp
sub
jns
mov
cmpsl
dec
inc
js
pop
scas
mov
out
mov
aas
xor
pop
xchg
dec
xor
sub
movsb
sub
sub
pop
dec
movsb
xchg
xor
repz
aad
mov
mov
lds
mov
js
cmp
xor
sub
xchg
lods
popa
sub
mov
not
out
xor
ds
adc
push
pop
push
out
rorb
xchg
mov
cs
popf
sub
in
arpl
aaa
inc
cmp
popf
test
mov
sub
xor
jo
inc
lods
cwtl
arpl
clc
dec
and
push
sub
nop
cltd
push
out
flds
movl
popf
imul
jno
dec
addl
pushf
cs
mov
inc
sub
jo
dec
jge
in
push
fs
icebp
sbb
cs
cmp
pop
pop
dec
es
or
scas
aaa
inc
arpl
and
imul
jo
push
dec
cld
dec
mov
sti
sub
pop
inc
aaa
in
insb
push
xor
inc
imul
mov
inc
jl
push
pushf
jno
push
lods
adc
xchg
dec
push
shrb
movsl
jo
stos
sub
xchg
lods
push
pop
scas
or
clc
aam
inc
dec
dec
cmc
mov
or
gs
xor
aam
jg
fmull
pop
push
xchg
pop
out
sti
cld
dec
rorb
ret
pop
inc
mov
xor
lods
scas
pop
and
inc
mov
xchg
scas
xor
dec
jg
js
mov
mov
xor
mov
mov
jne
xchg
cld
pop
pusha
insl
ljmp
call
ret
dec
pusha
push
adc
add
adc
aaa
push
rclb
jb
xor
jmp
sub
jle
jbe
enter
popf
aad
xor
pusha
mov
add
das
mov
xchg
sahf
jo
inc
idivb
pop
mov
add
cwtl
test
sahf
push
push
push
shrb
cltd
pop
mov
arpl
xchg
sbb
test
mov
or
rolb
or
addr16
xor
dec
add
cmp
arpl
push
ljmp
inc
ljmp
lcall
mov
mov
pusha
test
xchg
aaa
arpl
mov
rolb
mov
pop
dec
sub
jmp
jl
daa
cwtl
cmp
lds
imul
fcoms
jo
fcompl
inc
aam
mov
nop
fwait
mov
lods
in
mov
insb
jp
and
push
in
pop
test
pop
ds
in
xchg
subb
scas
inc
pop
jge
outsl
mov
inc
in
mov
inc
cmpsl
sub
jne
stc
cmp
push
sub
mov
popf
dec
out
aam
sub
stc
push
in
cmp
dec
repz
pop
push
jp
xchg
addb
in
lret
xchg
dec
inc
subb
mov
and
sahf
mov
sbb
and
sub
dec
dec
adc
cs
mov
ret
nop
and
cmp
fdivr
and
add
cltd
imulb
cmp
dec
cli
jo
cmp
push
and
mov
ds
add
test
push
lock
xchg
mov
sub
insb
lods
pusha
pushf
fdivr
int3
sub
add
mov
fiaddl
out
mov
loope
dec
jnp
rol
xor
lock
int3
mov
addr16
adcb
push
xor
xlat
jo
and
mov
add
push
dec
push
or
mov
push
jp,pn
or
fmuls
ss
and
js
mov
rolb
inc
or
ss
xchg
pushf
cmp
xor
xor
pop
dec
add
mov
xchg
push
xchg
xor
int3
pop
fs
js
mov
push
or
push
out
jmp
mov
cmp
or
pushf
pusha
inc
lock
push
pop
aam
les
add
dec
ret
ja
inc
cmp
pushf
loopne
mov
test
ss
inc
inc
push
xchg
in
out
sti
add
sub
hlt
sahf
aas
pop
xchg
mov
cmp
das
add
inc
dec
xchg
dec
push
cmpsb
leave
scas
das
nop
xorl
pop
dec
pop
push
icebp
mov
adc
sbb
or
dec
inc
pop
test
xchg
push
out
fs
sub
xor
push
je
cwtl
ss
pop
arpl
cs
das
fsubs
nop
pop
in
xchg
sub
pop
dec
jb
lock
or
nop
cmp
out
jl
and
ds
in
outsb
test
cmp
mov
insb
inc
nop
arpl
sbb
pop
pop
xor
or
sbb
nop
cltd
sub
gs
or
sub
inc
dec
je
xchg
les
cmc
rolb
mov
push
xor
lcall
cmp
xor
dec
jnp
dec
and
xor
push
push
jb
push
ja
mov
mov
lods
push
sub
push
stc
dec
movsb
jne
jae
das
pushf
gs
cmp
mov
gs
outsl
jae
fcoml
hlt
les
mov
push
shll
ret
xchg
push
xor
ss
cmp
insl
sub
hlt
xor
push
mov
lcall
sub
mov
sti
mov
mov
sarb
shrb
shrb
cmp
add
inc
xchg
sub
adc
out
sub
lods
jne
mov
dec
cwtl
arpl
cwtl
jnp,pt
sub
insb
mov
and
ret
cwtl
pop
ds
push
dec
enter
sub
bound
imul
addl
cmp
cltd
lea
adc
sub
rcl
jg
pusha
insb
ret
lock
or
mov
jae
dec
lock
sahf
or
pop
arpl
call
or
shrb
fsub
sub
xchg
shrb
mov
mov
sbb
push
mov
aam
in
movsb
xor
xchg
inc
imul
xchg
jle
aaa
orb
and
and
inc
xchg
cs
cld
icebp
ss
xchg
jbe
cmpl
fidivrl
arpl
cltd
cmc
aaa
loopne
outsl
mov
imul
and
jle
das
ds
ljmp
cmp
add
mov
nop
je
push
cs
add
xchg
scas
das
test
cld
imul
stos
push
sub
jb
cmp
dec
adc
mov
jmp
xor
jle
and
idivl
or
inc
cmp
xchg
dec
xor
lret
stos
stos
adc
into
fs
xor
pop
and
xor
cld
add
ja
pop
lea
cmp
sub
sbbl
mov
dec
sbb
push
mov
xor
iret
int3
enter
jl
ss
lahf
push
mov
popa
lret
push
sub
repz
jo
cmp
cmp
cs
rorb
arpl
fsubrl
inc
in
xor
cmp
cmp
arpl
mov
pop
dec
js
lods
push
mov
scas
mov
or
aaa
xor
inc
imul
insb
fsubrs
push
lock
inc
or
insl
or
cmp
and
sub
in
cs
je
xchg
ss
push
loopne
and
inc
inc
pop
push
fcom
jae
imul
dec
xor
stos
aaa
ss
mov
imul
jnp
jb
sub
push
sub
ljmp
push
mov
cmp
imul
inc
push
shlb
icebp
sbb
mov
dec
lahf
push
shll
test
push
push
adc
fs
mov
dec
cs
push
inc
sbb
jnp
cmp
fdivrs
pushf
int
inc
clc
cmp
adcb
movsb
xchg
or
xorb
mov
ret
inc
ds
imul
jp
and
nop
inc
lret
mov
xor
mov
ds
gs
js
dec
cwtl
cmp
xchg
jno
das
shr
push
addr16
xchg
insl
pop
stos
mov
pop
clc
xor
stos
jge
and
test
pop
fadds
shr
stc
inc
nop
lea
lret
movsb
pop
jle
imul
xor
cmp
pushf
shrl
jne
xor
pop
addb
sub
xor
imul
xchg
dec
dec
stos
mov
sub
push
cwtl
lods
and
push
pop
cmpsb
mov
xor
fdivrl
imul
mov
push
out
ret
fmul
sbb
fimuls
adc
pop
mov
mov
enter
push
jecxz
fwait
cltd
mov
insl
stc
add
cmp
ret
push
cmp
leave
cmpl
mov
js
push
jecxz
push
xor
mov
mov
dec
imul
cmp
ds
xorb
lods
xor
in
sub
push
nop
xchg
outsb
mov
cmp
xor
cmp
cltd
lcall
or
insb
dec
movsb
adc
les
dec
mov
leave
lock
cld
test
pusha
inc
js
sbb
pop
test
sub
jg
inc
mov
or
add
es
cmp
sub
orb
out
or
jp
sub
ja
ss
adc
jg
push
inc
push
xchg
test
enter
mov
pusha
popf
xor
push
sbb
mov
jnp
xor
jns
cltd
sub
mov
fsubrl
in
push
outsl
outsb
popa
pop
pushw
dec
fcomps
dec
push
cmp
push
lret
bswap
enter
sbb
push
pusha
push
gs
inc
adc
jne
cmp
and
cmp
insb
addr16
ds
mov
ds
leave
add
ss
jno
lea
jo
cmp
pop
bound
xchg
sub
dec
test
sarl
sub
or
in
mov
nop
fcompl
shrl
push
adc
std
cmp
cwtl
xor
inc
inc
insl
jo
jbe
jl
and
cld
pushf
jmp
push
jno
sub
fsubrs
mov
lods
sub
inc
xlat
adc
push
ds
mov
xor
sub
test
jne
inc
pushf
loope
lea
icebp
dec
lds
mov
adc
xchg
sahf
mov
jle
adc
push
xchg
mov
arpl
in
testl
lods
dec
jp
jge
enter
in
push
push
pop
mov
xlat
mov
outsb
ss
imul
mov
push
loopne
movsb
jo
cmp
dec
aas
adc
aad
inc
sub
inc
mov
pop
xor
push
mov
push
popaw
pushfw
xor
xchg
fadds
cmp
inc
lock
dec
adc
mov
cmc
or
mov
sar
enter
sub
int3
loop
dec
or
add
mov
mov
sbb
dec
adc
xchg
pop
and
adc
mov
gs
cmp
cs
pop
xlat
ds
mov
dec
imul
or
push
pop
rclb
inc
xor
scas
xor
pushf
ljmp
sub
fs
push
jb
int
and
xchg
mov
sub
push
xor
int
shlb
aas
fcoml
push
hlt
pop
rclb
mov
imul
out
lea
cmp
dec
xchg
mov
movsb
nop
push
push
cs
mov
mov
lahf
je
push
aaa
xor
movsb
dec
std
cs
push
mov
xor
cmp
add
aam
adc
dec
sub
and
js
cld
out
sbb
xchg
outsb
mov
mov
cmp
or
pop
cmp
pop
mov
mov
and
mov
sub
mov
sub
sahf
popf
inc
cmp
and
push
xchg
imul
int3
lock
or
pop
and
fs
xor
inc
push
movsb
fcoml
pop
dec
data16
lea
xor
mov
jle
sub
xchg
js
mov
mov
testl
mov
sbbb
scas
cld
test
push
dec
adc
push
xchg
push
dec
cmp
push
ds
stc
pop
int
fwait
push
dec
test
cltd
inc
sbb
cmp
sub
xchg
push
mov
addr16
fsubs
push
jnp
mov
test
push
mov
cs
shrb
or
xchg
jmp
je
mov
pop
rolb
repnz
insl
or
sbb
das
lods
lods
outsl
in
je
inc
int3
sub
lret
inc
pop
cmp
inc
dec
pop
movsb
repnz
sub
push
pop
push
mov
mov
out
mov
add
mov
ds
lahf
or
pop
xor
xor
cmc
jo
mov
inc
dec
mov
mov
xchg
fcoms
jle
inc
jb
aaa
test
xchg
or
gs
xor
fwait
dec
bound
loop
cmc
jl,pt
imul
add
mov
push
xor
call
int
sub
mov
xchg
mov
mov
dec
dec
inc
into
mov
test
pop
add
xor
mov
adc
jns
lret
int
fcoms
pop
jbe
clc
ds
pusha
mov
dec
cmp
inc
in
shlb
dec
lods
jmp
out
clc
fsubl
fldcw
imul
and
pop
jl
pop
iret
sub
scas
leave
or
pop
jno,pn
popf
push
push
mov
loopne,pn
bound
adc
sbb
stc
dec
xchg
dec
pusha
mov
push
stos
inc
minps
imul
pop
je
pop
sub
or
scas
lret
xor
xor
das
inc
or
xlat
mov
push
imul
int3
sbb
push
xor
fwait
dec
cld
xchg
sbb
lods
push
sbb
insb
popa
arpl
mov
mov
jg
mov
push
stc
mov
sub
mov
pop
fsubrl
data16
sbb
cmp
mov
pushf
shlb
out
xor
cltd
imul
jbe
inc
cmp
sbb
push
and
pop
int3
and
cs
jo
mov
xor
dec
in
push
les
pop
or
mov
jo
insb
mov
push
xchg
push
movsb
aad
dec
inc
dec
jo
pop
mov
insb
out
mov
je
dec
les
int3
push
sub
sbb
inc
mov
add
insl
pop
mov
xor
imul
pop
rolb
pop
call
adc
dec
cwtl
das
hlt
int3
mov
adc
sub
xchg
sbb
std
sub
dec
enter
inc
fidivs
cmp
int3
mov
pop
enter
int3
jae
cs
movsb
ss
mov
fmul
pop
aad
xchg
xchg
dec
cmp
mov
mov
into
pop
inc
rclb
cmpsb
les
xor
cmp
dec
dec
xor
xor
sbb
fsubrl
mov
push
pushf
or
inc
aaa
pop
add
clc
xor
xchg
nop
mov
lods
and
jl
push
lods
das
sub
push
lods
xor
lods
xor
lods
dec
cmp
lock
fdivl
test
lods
mov
sub
pop
in
pop
pop
clc
fbld
adc
sub
add
pop
inc
xor
push
mov
sub
aaa
jns
push
lea
insb
stc
pop
mov
xor
aam
inc
sbb
pop
arpl
pop
sub
cmp
sub
filds
sub
mov
push
or
push
jb
subb
stc
pushf
pop
pop
xor
pop
outsb
jo
fsubrl
mov
pop
les
mov
ds
pop
jle
sbb
or
sub
movsb
fsub
je
sub
jne
andb
loopne
stos
setge
adc
xor
pop
cmpsb
aas
pusha
in
push
xor
cmpb
dec
mov
mov
cmp
insl
jno
dec
loop
add
push
pop
arpl
test
sub
imul
popa
stos
jb
mov
xor
sub
inc
lahf
jo
xchg
repz
sub
inc
inc
push
js
je
pushf
sbb
sbb
mov
mov
cmp
fwait
or
pusha
popa
push
das
or
cmp
inc
mov
je
int
push
jbe
mov
and
rcrb
push
sahf
push
xchg
lods
jb
sahf
lods
in
je
and
test
xor
sbb
lcall
shrb
cmp
xor
ss
fs
pushf
movsb
dec
or
dec
testl
inc
sub
dec
cmp
dec
jns
fs
dec
fnstsw
in
jne
scas
cmpsb
pushf
adc
inc
push
push
xor
or
sete
aas
mov
sub
sub
js
ficompl
cld
pop
ss
pop
dec
lods
mulb
xor
loopne
mov
xchg
xorl
xor
sub
cmp
addr16
test
nop
dec
dec
lods
dec
mov
ds
or
loop
call
or
dec
rclb
sbb
inc
bound
mov
push
ja
dec
xor
int3
cmp
push
fnstenv
jne
testl
pop
xchg
bound
in
loop
mov
test
inc
ficoml
push
aaa
add
xor
jge
sub
pushf
push
push
and
fldt
dec
aam
dec
mov
push
repz
pop
xor
arpl
push
add
inc
sbb
mov
das
dec
and
push
fdivr
inc
jl
push
in
ljmp
pop
in
cmp
inc
jb
imul
push
imul
movsl
mov
ret
jne
repnz
std
xor
jle
lcall
scas
iret
mov
sahf
out
shr
mov
mov
inc
add
sub
jnp
add
pop
inc
cwtl
mov
popf
cmp
sbb
push
js
mov
in
pusha
aam
push
clc
push
cmc
mov
out
outsb
fcompl
push
repz
popa
int
data16
xchg
imul
lock
ss
shlb
push
out
das
nop
push
cmp
sahf
dec
call
mov
outsb
push
rcrb
insl
xor
mov
jnp
outsl
ljmp
inc
fdivl
push
mov
fs
aaa
pop
xchg
mov
pop
inc
lea
mov
lock
test
jo
pop
push
push
jmp
mov
mov
clc
call
ss
xchg
mov
mov
jp
popf
pop
cmp
shll
fwait
lahf
sbb
mov
push
enter
pop
mov
imul
rcrl
sbb
lret
test
mov
xor
es
js,pt
data16
outsl
cmp
addr16
rolb
fdivl
xchg
inc
push
cmp
fwait
push
das
lahf
pop
sub
jo
mov
sahf
mov
push
movsl
mov
pop
das
cmp
xor
bound
mov
lock
cmp
mov
gs
in
cmp
ret
out
xlat
inc
sbb
test
cmp
lds
dec
mov
jne
pop
pop
xorb
fisubrs
enter
inc
xchg
xor
insl
push
mov
fwait
lods
xor
pusha
out
mov
lock
lret
cld
mov
icebp
sub
mov
add
push
cmc
inc
inc
popl
js
arpl
inc
add
mov
push
test
pop
imul
lods
pushf
in
jae
pop
and
or
out
mov
xor
dec
xchg
pop
adc
push
push
xor
shll
mov
je
roll
or
insb
ficompl
mov
test
xor
or
pushf
adc
push
mov
das
add
cmp
push
inc
xchg
mov
enter
xchg
xchg
out
push
out
pop
mov
cmp
pop
cwtl
movsl
sub
jp
dec
les
xor
mov
or
lahf
repz
inc
js
jmp
je
dec
pushf
clc
push
xor
pop
dec
pop
xor
push
push
je
xchg
jmp
jae
cltd
inc
stos
jbe
lds
dec
call
mov
xor
insb
pop
fsubrp
push
inc
icebp
xor
jno
xchg
or
dec
lcall
xor
mov
outsl
push
cmp
mov
cmpb
or
pusha
and
jo
ds
or
int
mov
lods
cmp
cltd
xchg
xchg
sub
pop
hlt
xor
pop
cld
fs
mov
sbb
inc
lds
loopne
les
sub
xchg
insb
push
pusha
adc
pop
scas
mov
dec
push
cmp
cld
dec
xchg
pop
outsb
jl
jle
icebp
das
xchg
mov
insb
cmp
cmpsb
es
pusha
js
jb
dec
cmpsl
push
aam
inc
pop
cmpsb
sub
adc
mov
xor
jo
mov
out
call
sahf
xchg
ljmp
call
jo
pop
cltd
pop
or
push
dec
in
enter
arpl
mov
cmp
mov
fmul
int3
aas
mov
daa
subl
dec
fadd
mov
mov
lret
jg
popf
or
mov
xor
mov
insb
xchg
imul
out
sbb
inc
pop
mov
mov
test
clc
dec
rclb
mov
cmp
push
lea
pop
adc
popl
inc
sbb
push
insl
lds
xchg
xor
ficomps
ds
je
xchg
jecxz
loope
mov
push
lea
stos
mov
popf
jo
aaa
cs
das
fcoms
popf
repz
adc
loope
pushf
dec
ficomps
xchg
testb
mov
mov
pop
out
lods
xchg
std
inc
cmp
pop
mov
cld
mov
xor
dec
push
and
add
xchg
mov
aam
cmp
sbb
push
cmpsl
mov
cmpsb
cmp
das
xor
imul
pop
sbb
lds
cs
xor
and
push
test
cmp
arpl
or
inc
cmc
xor
mov
mov
aaa
jns
xor
out
push
adc
jecxz
and
mov
shrl
push
in
xor
pop
sbb
xor
mov
xor
out
ja
cs
xchg
mov
fldt
fdivl
xchg
push
ss
push
nop
cmp
push
mov
adc
and
int3
jl
mov
mov
fwait
or
push
in
popa
dec
cmp
inc
xor
cwtl
aas
cmp
push
xchg
mov
call
fnstsw
xchg
imul
movsb
stc
push
scas
xchg
push
call
jmp
arpl
add
aam
push
call
xor
push
cmp
cwtl
push
fadds
loop
call
push
aaa
lods
mov
sbb
push
xor
out
xor
sub
jmp
inc
dec
test
sub
ds
xor
xor
dec
mov
lcall
sub
inc
mov
pop
jo
das
mov
cmp
dec
and
in
xor
pop
movsl
pop
mov
mov
loopne
inc
and
pusha
mov
faddl
sahf
add
mov
rcll
or
cld
fdivs
std
cmp
rorb
fdivrs
jecxz
ficoms
push
cmc
xor
clc
fbld
lea
push
movsb
andl
ljmp
shrb
jno
cli
das
cmp
dec
mov
shlb
fisttps
pop
dec
sbb
cmp
jo
lcall
and
and
xor
pop
mov
outsl
ss
xchg
xchg
lods
mov
inc
xor
inc
mov
scas
arpl
subb
push
sub
add
in
fsubrl
mov
cltd
push
xchg
lcall
imul
xor
sub
adc
fcoml
dec
cmp
cmp
pusha
sub
popf
sbb
out
cmp
push
pusha
enter
sub
cmp
push
pop
lea
xchg
dec
mov
pushf
add
inc
xor
pop
lods
push
push
push
dec
dec
cmp
in
aas
xchg
pushf
lahf
es
insb
nop
jbe
xor
in
cmp
mov
mov
hlt
and
push
fmul
push
adc
shll
test
adc
test
jmp
fstps
mov
jb
sbb
dec
sarl
cltd
aas
jo
nop
arpl
push
dec
cmp
inc
clc
pop
jl
mov
fwait
pop
mov
addb
mov
push
iret
pushf
cli
push
xchg
sub
outsb
inc
push
fsubl
js
mov
mov
shl
mov
das
xchg
or
push
mov
jb
cmp
jno
mov
cmpsl
lock
jne
dec
cs
nop
jge
jle
movsl
fldcw
pop
ss
aam
test
mov
addr16
push
mov
xor
bound
mov
stos
rolb
add
cs
hlt
cmp
mov
xor
sarb
das
adc
scas
imul
xlat
stc
ss
adc
jl
arpl
xor
push
cltd
bound
pusha
dec
das
sub
inc
sub
pop
int
adc
push
pop
inc
sub
out
mov
jo
xor
push
cmp
aaa
add
movsb
xchg
sarl
cmp
cld
inc
pop
pop
add
sbb
inc
in
stos
pop
cmp
jbe
add
sti
pop
jl
jo
aas
in
inc
sub
jne
or
hlt
sub
push
cmp
popa
pop
xor
cltd
in
and
cld
xor
inc
xchg
mov
sbbb
addb
mov
aaa
sub
mov
cmpsb
es
ret
and
jnp
lahf
das
movsb
pop
dec
add
mov
fsubl
push
js
ss
ss
rcll
push
pop
stos
aaa
les
call
and
dec
dec
cmp
cli
enter
inc
jne
pushf
ljmp
mov
repz
sarb
mov
push
jle
mov
inc
repz
push
and
jmp
addr16
xorb
fistps
cmp
pop
and
fnstenv
xchg
loope
jecxz
popa
test
add
pop
test
scas
movsb
pop
mov
sbb
jns
sbb
mov
lods
add
in
xchg
mov
dec
jnp
push
outsl
adc
repnz
rcrb
scas
iret
cltd
je
lods
push
lods
adc
imul
dec
insb
pop
pop
mov
or
xor
dec
mov
mov
push
sbb
push
adcb
pop
mov
cwtl
stc
pop
hlt
lods
pop
mov
loope
cwtl
inc
sub
adc
loope
push
jns
dec
dec
icebp
dec
popf
jp
clc
push
push
lock
ds
sub
pop
jno
call
xor
ss
dec
shrl
push
mov
pop
lods
das
sub
push
xor
sub
adc
ds
arpl
bound
lret
cmp
push
xor
mov
popf
mov
sahf
ja
xor
test
fidivs
mov
int3
dec
pop
cltd
pop
pushf
aas
mov
rorb
inc
sbb
sub
mov
enter
xor
rcrl
ds
cmp
push
mov
iret
sarb
xor
xchg
pop
push
das
dec
jb
out
xor
pop
push
sbb
dec
adc
outsb
movsl
cmp
dec
mov
mov
lea
jno
in
sub
xor
dec
cmp
push
push
fdivrl
dec
push
mov
lret
push
movsb
mov
mov
push
sbb
lods
in
pusha
out
in
xchg
pop
dec
inc
divl
jae
out
xor
out
bound
enter
mov
xchg
xchg
xchg
lock
ss
fs
dec
mov
inc
popa
imul
lock
insl
aas
orb
inc
jns
jp
ds
sub
add
scas
xchg
call
and
mov
inc
cwtl
pusha
dec
push
mov
sub
fimuls
mov
mov
push
lock
xchg
test
lret
stos
xor
push
loop
cltd
mov
cmp
pusha
insb
lods
or
sbb
ret
aas
xchg
pop
incb
mov
cli
inc
stc
movsl
aaa
adc
dec
cs
dec
ja
add
sbb
cmp
sbb
pushf
jle
add
xchg
sbb
fmull
xchg
pop
xor
cld
xor
inc
shll
xchg
push
mov
cmp
jo
jp
das
shl
popa
sahf
and
aam
rclb
lcall
cmpsb
fadd
cmp
xor
jg
cltd
mov
inc
xor
inc
xchg
jl
dec
mov
int3
sbb
mov
jl
xor
mov
cwtl
push
mov
push
mov
lcall
sbb
xor
loope
scas
mov
sbbb
jnp
test
or
dec
jbe
jnp
sub
dec
test
cmp
js
test
jb
push
lods
aas
dec
adc
xor
shll
sbb
repz
mov
mov
les
pop
jl
ja
gs
cmp
sbb
out
fwait
mov
or
inc
dec
or
test
and
pop
inc
mov
inc
pop
mov
dec
loop
inc
cmp
dec
adc
cwtl
mov
push
js
imul
sub
dec
push
sub
dec
sub
aam
push
adc
fs
push
inc
or
aas
stc
sub
insl
mov
jb
dec
clc
mov
jno
mov
mov
insl
jo,pt
movsb
pop
pop
cmp
sub
mov
dec
addr16
dec
dec
lods
popa
pushf
mov
push
out
xor
ss
dec
xchg
cmp
lds
jp
or
dec
inc
or
sub
out
push
push
jecxz
nop
mov
insl
push
arpl
pop
fwait
movsb
stc
ret
insl
mov
dec
int
aaa
inc
and
mov
insb
mov
insl
add
xchg
les
xchg
insb
mov
aaa
mov
test
xchg
sub
push
or
sub
push
cmpsl
cmp
jne
xchg
fiadds
mov
cmp
lcall
dec
and
sub
inc
push
add
inc
pop
insb
pop
dec
inc
outsl
fs
int
inc
dec
pop
sub
lock
gs
imul
lock
lods
fs
lods
or
addr16
dec
jnp
lea
pop
inc
mov
aaa
xchg
arpl
enter
jge
loope
and
pop
cld
popf
cmp
cwtl
fwait
mov
outsl
and
xor
shlb
les
sub
jbe
das
ficompl
xchg
xor
pop
push
cld
loop
or
jnp
push
lods
sti
push
mov
or
les
ret
push
outsl
aas
and
mov
push
adc
pop
pop
loopne
sbb
sub
mov
cmp
dec
int3
mov
jno
in
and
dec
jbe
in
ljmp
push
lods
jp
mov
pop
lods
jo
push
das
xor
fdivrs
push
loopne
js
jbe
add
addr16
imul
xor
das
clc
stc
push
or
nop
int3
mov
add
sbb
inc
lcall
sbb
mov
and
enter
call
repz
pop
jl
loopne
adc
xor
addr16
aaa
mov
outsb
hlt
mov
xchg
mov
lock
hlt
dec
sahf
inc
call
addr16
aas
lods
rcll
scas
mov
ljmp
loop
mov
mov
lods
or
mov
pop
sub
inc
notb
cmp
cmpsl
xor
cmp
jge
xchg
pushf
dec
shlb
inc
sbb
push
push
lcall
nop
nop
popf
push
push
rcll
ss
lods
test
lds
enter
push
push
jae
mov
dec
pop
sub
mov
call
xor
push
push
mov
insb
push
shrb
xor
js
cmp
dec
nop
sbbb
fmuls
clc
cmp
mov
imul
lods
ss
das
cwtl
push
fs
aam
test
das
call
xor
or
int3
lea
in
cltd
cmp
addl
gs
mov
je
test
arpl
sub
xchg
aaa
enter
mov
pushf
cmp
push
insl
cmp
cmp
js
and
adc
das
jno
scas
mov
addr16
cltd
leave
dec
jl
in
dec
xor
inc
lcall
inc
sub
aaa
jbe
int
into
shll
je,pt
dec
xor
sub
ja
ss
gs
sarb
lcall
add
lods
call
mov
aad
xor
push
jo
movsb
inc
data16
push
bound
pop
in
adc
xchg
inc
lea
dec
mov
cmp
pop
pop
inc
fwait
xchg
jo
out
dec
push
aam
inc
and
xchg
mov
mov
pop
xor
xor
in
mov
mov
sbb
int3
repz
popf
xor
push
mov
stos
pop
faddl
nop
fsubs
dec
push
je
sbb
mov
fdivl
into
dec
shlb
mov
xor
les
xchg
add
fsubr
add
ror
mov
sbb
mov
sub
mov
inc
ds
cwtl
movsb
sub
hlt
in
push
sub
jmp
out
inc
andl
mov
icebp
push
push
or
and
dec
pop
ljmp
jns
ret
fnstenv
sub
dec
lret
push
add
dec
jne
xor
xor
cmp
dec
add
xor
pop
loope
cmp
dec
mov
dec
inc
xor
jns
ja
bound
jbe
jb
push
loopne
mov
das
test
mov
outsl
nop
inc
lock
jp
jl
cs
stc
push
test
das
out
iret
mov
dec
inc
jl
in
mov
neg
lret
pop
mov
scas
jns
outsb
aas
sub
cmp
mov
arpl
sqrtps
gs
cmp
sahf
inc
mov
lods
inc
clc
push
enter
fsub
pop
mov
mov
mov
test
pop
pop
push
push
lods
lds
sub
je
mov
fsts
out
aam
or
cld
bound
pop
into
shll
fsubr
xchg
inc
push
push
cs
push
call
inc
sub
dec
push
mov
or
test
ds
mov
pop
or
push
push
lods
and
pop
pusha
out
or
mov
fnstcw
sbb
jo
jo
nop
or
inc
push
or
dec
insb
cmp
addr16
js
inc
mov
insb
cmc
dec
sub
gs
inc
dec
lcall
jl
pop
mov
je
das
out
shrb
push
outsl
push
cmp
shll
sub
mov
or
mov
mov
fildl
xor
xor
mov
or
push
mov
call
dec
pop
adc
pushf
mov
add
mov
xchg
jecxz
dec
dec
inc
in
stc
mov
out
jae
scas
push
shrb
xor
aaa
test
mov
mov
scas
imul
inc
cwtl
aas
xor
dec
cld
dec
xchg
sbb
aas
sbb
test
dec
pusha
sub
js
dec
cmp
inc
fists
pop
sbbb
push
jle
jl
add
test
dec
pop
lock
add
cmp
xchg
ss
xor
inc
mov
ficompl
fmul
ds
mov
push
insb
mov
mov
loopne
sbb
pushf
les
mov
mov
test
das
lret
adc
popf
lahf
pop
inc
fildl
mov
hlt
insb
shlb
cwtl
mov
xchg
jle
scas
push
jo
cmp
push
cmp
push
push
dec
lods
adc
dec
test
xchg
lods
mov
das
fiaddl
xchg
shrb
xchg
cmp
adc
sub
dec
cmp
mov
insb
gs
sbb
lods
inc
dec
rolb
xlat
lea
fsubrs
popf
push
push
lcall
and
dec
ret
and
into
push
jo
mov
into
ss
and
subb
inc
mull
outsb
sbb
mov
insb
push
cs
push
dec
and
loopne
adc
push
push
lret
subb
push
lcall
scas
sub
out
lcall
mov
pop
cmp
les
push
clc
dec
pop
mov
pop
popf
ds
pop
dec
mov
scas
mov
lea
pop
ss
popf
sbb
stc
inc
mov
pop
loope
mov
jo
dec
inc
adc
bound
sub
sbb
dec
out
fisttpll
jo
xor
pop
iret
mov
lods
nop
pop
aam
sbb
sbb
sub
jle
dec
xor
xchg
insl
mov
inc
outsb
pop
xor
and
cmp
addr16
cld
cs
xor
inc
mov
inc
pop
jl
jl
cmp
add
nop
mov
addr16
mov
scas
cmp
hlt
or
enter
jge
push
fcmovnbe
outsb
pop
cs
in
dec
jne
cmp
cmp
mov
add
fdivl
inc
xor
sbb
sahf
dec
arpl
push
lret
popf
add
inc
xor
mov
js
jb
je
pop
mov
dec
mov
mov
and
inc
addr16
xor
insb
mov
jp
jne
addr16
sbb
insl
pop
aam
in
imul
sub
mov
adc
pop
call
das
data16
add
push
adc
inc
movsl
bound
or
sub
ljmp
cmp
mov
pop
pop
dec
cmp
sub
sub
icebp
push
call
pop
or
aad
jbe
pop
xchg
lods
jb
rorl
cltd
push
movsb
bound
pop
sub
xchg
push
test
xchg
jp
int3
pop
jmp
sbb
scas
aas
push
lods
stc
inc
dec
arpl
xchg
jle
icebp
mov
in
movsb
pop
push
mov
aam
cmpsb
pushf
je
xor
mov
inc
mov
fisubs
outsl
sub
into
stos
dec
imulb
push
push
pop
xor
xor
enter
clc
inc
pop
inc
aad
dec
jo
int3
add
cld
push
xchg
pop
xor
scas
test
cmp
scas
in
jne
pop
add
or
pop
pushf
or
add
clc
out
icebp
mov
dec
push
mov
leave
sub
aas
add
mov
or
cmpsb
cld
xor
push
das
bound
in
hlt
pop
imul
xchg
insb
xlat
xor
lods
cmp
and
sbb
std
dec
inc
inc
or
sub
xchg
bound
mov
jle
test
dec
or
int
add
dec
xor
in
sarb
loopne
sub
lea
mov
push
test
mov
outsb
inc
insb
push
adc
into
mov
push
lods
sub
xor
ljmp
mov
inc
pusha
jno
inc
push
sub
adc
add
sub
add
pop
inc
sub
xchg
je
leave
push
xlat
enter
das
dec
mov
adc
push
das
push
jp
aas
das
dec
mov
lods
mov
shll
mov
dec
jnp
and
daa
mov
add
pushf
clc
leave
jo
dec
addl
aas
inc
test
pushf
xchg
dec
vucomisd
dec
adc
out
call
imul
bound
insl
sbb
xor
push
nop
xor
enter
ds
insb
movsl
and
jo
mov
dec
or
das
inc
cmpsl
repz
pusha
pop
mov
pop
out
aam
nop
inc
xor
fisttpl
push
pushf
inc
inc
sub
jne
popf
aas
mov
push
sub
pop
mov
enter
aam
jle
pop
pop
movsl
mov
push
je
nop
lret
lock
xchg
pop
dec
insb
push
jno
cmpsl
inc
cmp
aaa
push
call
mov
push
xchg
dec
push
cmp
xor
fs
xchg
mov
push
add
fistps
aad
hlt
dec
mov
sub
cld
adc
fimuls
sub
xor
lret
fnsave
or
mov
xor
dec
adc
jmp
aaa
out
nop
into
mov
imul
xor
les
inc
xor
lea
test
dec
in
lods
movsb
ds
push
js
mov
xchg
mov
popa
add
je
pop
std
mov
in
dec
inc
xchg
in
and
data16
fs
xor
jp
shrb
xchg
arpl
xor
cmp
ds
ds
mov
add
ret
adc
imul
or
cs
and
popf
mov
dec
mov
mov
dec
pushf
shl
and
lret
and
inc
adc
scas
push
cmpsb
cmp
das
cmp
jo
jle
gs
pop
adc
bsr
jbe
mov
shlb
mov
inc
cs
dec
mov
xchg
mov
inc
xor
stos
xor
xchg
dec
fs
call
hlt
cs
popf
jns
notl
sahf
push
not
push
std
push
dec
out
cli
stos
sbb
pop
mov
jbe
mov
mov
lock
cs
push
les
sub
dec
ds
adc
mov
and
insb
in
jns
inc
aas
bound
dec
les
push
sub
mov
push
fsubs
ljmp
push
call
xchg
xor
jns
push
push
add
sub
cmp
lods
sbb
dec
pop
shll
cli
nop
fldcw
cmc
xchg
das
scas
outsb
pop
insl
out
insb
jo
add
jo
in
push
outsb
pop
in
xchg
xor
mov
sarb
sub
push
xor
lods
test
mov
cmpsb
xchg
lret
imul
cmp
aas
sub
mov
das
inc
dec
sbb
cmp
in
xor
push
or
cmp
in
movsb
fwait
push
xchg
push
rorl
xor
aas
jg
xchg
jmp
gs
cmp
nop
xchg
xor
les
je
movsb
cld
ds
sti
push
pop
dec
jnp
jp
fdivr
mov
fwait
dec
inc
jo
pop
cmp
mov
lock
ret
fistpl
push
pusha
mov
and
cmp
cmp
jmp
push
clc
pusha
dec
pop
lods
xchg
sarl
je
ds
pop
sbb
scas
fists
inc
imul
aas
sub
lea
lea
lcall
int3
in
xchg
push
mov
dec
aaa
add
call
dec
mov
pop
push
mov
lcall
das
aas
nop
hlt
mov
and
xor
enter
test
adc
jmp
adc
lret
stos
push
test
add
ss
add
dec
les
jbe
adc
movsb
push
mov
jp
inc
fsubrp
add
inc
sbb
sbb
inc
pop
js
mov
jp
in
clc
lcall
pop
ss
pusha
fadd
add
dec
fwait
les
dec
pop
lcall
lcall
mov
xchg
pop
mov
ficoms
nop
data16
adc
sub
jl
cmp
pop
xor
or
lock
xor
mov
pop
outsl
pop
jne
and
pop
data16
jge
clc
and
pushf
arpl
pop
loope
jl
lods
es
cmp
pop
sbbl
gs
cmpsb
add
fstpt
mov
insb
xor
mov
mov
adc
ljmp
xchg
arpl
sti
sahf
aas
leave
push
dec
sub
das
fsubs
sbb
addb
and
iret
xchg
lcall
inc
mov
popf
push
andl
xor
xor
cs
xchg
cmp
cwtl
inc
cmp
dec
dec
add
push
pop
mov
xchg
mov
out
inc
int3
push
fcoml
sub
jp
or
data16
push
mov
aas
jmp
jge
subb
cmp
js
out
push
les
xor
pop
mov
js
cmp
ss
cltd
and
mov
je
pop
enter
rclb
xchg
push
add
das
xchg
xor
mov
xor
mov
sub
cwtl
xorl
insl
adc
addr16
lock
into
add
xchg
call
sub
addl
cli
push
clc
inc
pop
mov
cltd
pop
xorb
stos
cmp
fwait
sahf
mov
das
or
out
lods
and
enter
xchg
icebp
push
cmp
mov
in
call
xor
arpl
js
cs
pusha
faddp
mov
in
xchg
dec
jp
mov
inc
inc
mov
test
fsubl
sub
daa
sub
int
inc
loop
jbe
sbb
push
cmp
bound
cmp
mov
pop
out
push
outsl
sbbl
std
xor
mov
push
mov
popa
in
jge
cmp
adc
cld
mov
shl
xchg
ss
call
dec
dec
adc
popf
dec
insb
pop
xor
dec
mov
call
sti
fiaddl
or
fs
imul
popa
in
xor
mov
std
cmp
dec
pop
xchg
insb
inc
jo,pn
mov
or
push
pop
fdivrs
insb
cmpsb
pushf
xchg
adc
jp
sbb
pop
xor
cmp
repz
movsb
fcompl
mov
xchg
imull
cmpsb
mov
add
push
pusha
insb
xor
mov
and
in
les
call
xor
fdivrs
dec
push
ljmp
bound
cwtl
fs
push
aaa
das
cmp
fisubl
push
mov
int3
adc
cwtl
bound
inc
orb
xchg
sbb
sarb
sti
popa
nop
lahf
sub
dec
ds
cwtl
cmp
outsl
les
pop
cmpsl
into
shl
fsub
sub
cmp
inc
fdivs
pop
daa
iret
xchg
jl
pop
in
test
sub
jae
pushf
and
test
loopne
cmp
and
insb
mov
je
mov
lret
andb
aad
test
sub
xchg
popf
sahf
xor
aad
sbb
adc
lcall
jne,pt
pop
xor
pushf
and
outsl
rcll
test
rolb
push
mov
mov
lods
arpl
inc
shlb
jge
pop
in
adc
das
rolb
sub
hlt
fstl
popa
pushf
add
test
jne
stc
dec
das
xchg
mov
cmpb
pop
and
popf
push
pushf
stos
les
jo
leave
jle
ret
mov
divb
into
ret
stos
xchg
pushf
fidivs
jne
jae
dec
push
sub
into
scas
les
add
mov
dec
sbb
outsb
cmovp
push
subl
jle
push
test
js
or
stos
sub
sbb
push
fsubrs
gs
jl
inc
call
xchg
xor
daa
pushf
inc
mov
std
pop
insb
leave
dec
subb
pushfw
sarl
fwait
dec
jmp
pop
jmp
sub
pop
cmp
insb
cld
and
das
pop
lock
and
and
popf
jle
movsb
clc
adc
inc
inc
daa
sub
pop
in
or
pushf
xchg
mov
dec
dec
cmp
xchg
cli
dec
je
hlt
das
sub
clc
inc
hlt
addb
or
dec
pushf
cmp
or
aas
or
mov
dec
pop
push
fcomps
clc
cmc
mov
sub
pushl
cld
inc
imul
fdivl
sub
dec
xchg
inc
ret
pushf
das
aaa
gs
imul
pop
popa
cld
xor
fsubl
sbbb
insl
mov
ds
mov
xor
cltd
lcall
add
xchg
cmp
or
inc
inc
xor
add
addr16
in
mov
movsb
dec
jb
jo
imul
popa
xchg
xor
dec
inc
pusha
jp
pushf
ret
lods
inc
jns
xchg
ds
or
jo
insb
aam
dec
mov
pushf
out
adc
push
xor
cs
xor
pop
popf
mov
cld
sbbl
push
pop
js
js
scas
inc
call
mov
out
xor
rclb
push
xchg
cltd
lods
out
dec
clc
adc
insb
popf
stos
popl
mov
fsubrs
std
push
rclb
movsb
mov
imul
sbb
or
das
shld
adc
adc
faddl
sub
test
xor
xor
jg
push
sahf
mov
cld
inc
pop
sbb
or
pop
xchg
adc
sub
data16
mov
dec
adc
mov
ja
in
fs
xchg
xchg
inc
enter
mov
imul
cwtl
nop
xor
adc
xor
cld
jg
movsb
bound
nop
mov
pushf
push
pushf
pusha
loope
roll
cmp
mov
inc
xor
lcall
stc
mov
test
jo
pop
sbb
insl
push
dec
mov
fidivs
dec
cld
ds
xor
adc
inc
cmp
mov
sub
mov
lahf
and
sub
insb
in
incb
or
mov
cwtl
and
xor
scas
xor
mov
push
das
sub
or
andl
enter
pusha
in
mov
mov
cmp
cltd
inc
fmuls
aam
popf
les
push
sub
pop
jbe
sbb
cs
cwtl
inc
cld
int3
ret
xchg
repz
jae
inc
lods
sub
aaa
xor
imul
cmp
aaa
aaa
lock
es
inc
sub
inc
push
ljmp
pop
sbbl
jmp
and
nop
pop
sub
cs
xchg
les
dec
fs
or
enter
jle
cmpsl
push
insb
mov
rorl
jb,pt
or
mov
dec
lea
imul
or
mov
fbstp
dec
cwtl
push
cld
dec
sbb
mov
xchg
aaa
loopne
sbb
in
fwait
sub
test
mov
dec
mov
mov
pop
mov
movsb
out
enter
push
push
add
inc
mov
mov
push
cmp
jb
in
xchg
leave
dec
adc
pushf
xor
insl
int
je
into
pop
sbb
cld
insb
sbb
nop
sub
mov
popf
ret
jo
in
fbld
pop
push
pop
lcall
rclb
sub
loope
mov
push
dec
push
sub
xor
sub
mov
sahf
aam
pushf
pop
je
mov
lcall
inc
and
mov
sahf
mov
jecxz
and
mov
jecxz
push
push
cmp
out
mov
inc
inc
sub
add
in
pusha
fs
push
ss
add
clc
add
dec
insb
test
mov
aaa
cmp
in
sbb
dec
xor
inc
mov
sub
inc
dec
lock
lods
jo
dec
inc
out
sbb
outsb
jmp
fiaddl
cmpsl
testl
mov
xor
adc
mov
cmp
lret
xchg
dec
mov
or
test
sub
movsb
push
and
sub
fs
or
inc
pushf
inc
and
icebp
mov
jmp
rcrb
sub
inc
mov
inc
int3
adc
call
xor
std
xchg
cmpb
inc
dec
scas
popa
movb
shrl
push
aam
outsb
mov
leave
push
test
sub
pop
bound
mov
daa
scas
adc
push
ds
sub
push
movsb
add
scas
mov
mov
sub
inc
or
dec
mov
sbb
lods
ds
push
mov
pop
jle
jl
test
in
pop
xor
sbb
dec
adc
ljmp
shlb
lods
pop
or
mov
nop
popf
dec
imul
ret
lret
and
in
push
aas
or
stos
stc
ret
icebp
mov
ss
mov
push
mov
cs
push
push
xor
mov
xlat
cmp
or
pop
test
insb
xchg
pushf
ss
in
sub
sbb
push
sarl
or
or
insl
mov
cmpsl
pop
mov
insb
add
mov
insb
fmull
fstl
sbb
cmp
mov
ret
xchg
inc
push
push
das
dec
hlt
lods
add
jmp
scas
mov
sub
aam
jl
pushf
inc
test
pop
cmp
sbb
das
push
ljmp
xor
addr16
xchg
lds
inc
es
push
mov
sar
cmp
aam
or
push
mov
push
addr16
pop
loopne
pop
cmp
mov
mov
arpl
sbb
call
data16
dec
jns
sub
ljmp
arpl
mov
lcall
inc
bound
je
pop
mov
xor
dec
xchg
sub
popf
test
into
sub
dec
mov
and
push
imul
andb
dec
mov
push
fcoml
mov
mov
movsb
repz
lods
pop
mov
aas
push
js
adc
insb
xchg
push
dec
and
and
ss
push
pop
sahf
test
push
xor
inc
dec
lods
push
adc
mov
inc
pop
mov
cmp
jp
in
pop
inc
mov
lret
aam
sub
xor
das
cld
cs
xchg
popa
and
jae
xchg
pushf
adc
call
adc
inc
insb
sti
sub
in
movsb
inc
cld
push
mov
dec
jbe
in
out
nop
and
mov
xchg
inc
pop
cltd
lods
dec
bound
pop
insb
pop
pushf
js
xor
push
sbb
and
daa
dec
inc
or
bound
sub
pop
mov
push
mov
movsl
sub
ds
add
cs
push
sbb
outsl
cmc
xchg
lock
jl
les
fsubrl
inc
test
pushf
sub
fmul
mov
mov
mov
lock
sub
ret
xchg
jne
dec
rolb
aam
dec
mov
pop
out
clc
jl
ja
aad
push
xchg
out
jge
mov
cmpsl
lds
cmp
mov
pop
arpl
dec
jnp
insb
pop
push
jb
outsb
int
pusha
xchg
pop
out
add
push
xor
insb
xchg
cmp
jns
push
push
je
pusha
aad
jl
lods
lcall
je
lea
clc
pop
fisubs
inc
add
je
cmp
fs
je
das
mov
and
pop
jle
test
jb
xor
xor
fistpll
aad
mov
scas
cmp
gs
pop
loopne
jle
mov
roll
dec
pushf
mov
lret
dec
cmp
sub
in
add
cmp
cwtl
sbb
fisubrl
pop
aad
jns
clc
mov
push
lcall
mov
pop
aad
pop
outsb
out
outsb
and
mov
and
xor
bndldx
lea
dec
push
inc
pop
loopne
lahf
mov
lds
xchg
lahf
xchg
aad
jle
fcomps
cmpsl
push
test
inc
and
inc
sub
lods
aad
inc
js
jns
push
mov
push
cmpsb
inc
xor
cmp
push
dec
xchg
cmp
pop
inc
lods
add
mov
add
lock
jne
sub
and
pop
jno
pop
xchg
pop
mov
in
push
insb
das
or
out
mov
test
aad
in
lahf
sti
je
inc
leave
fwait
push
jbe
sti
xchg
add
mov
js
pop
sub
test
sub
mov
in
xor
js
inc
sub
mov
sub
in
and
mov
and
xor
fisubrs
xor
mov
inc
xor
mov
das
clc
dec
cmp
mov
jns
aad
jecxz
or
add
out
out
xchg
roll
fsubrp
pop
mov
roll
out
and
mov
dec
in
inc
xor
add
lock
fsubl
sub
inc
or
sub
jp
dec
xor
sbb
or
nop
inc
jmp
inc
loopne
in
push
clc
sub
les
adc
adc
inc
or
in
pop
sub
in
dec
cmp
call
in
sarb
leave
xor
movsb
inc
sub
lods
in
loope
jnp
jns
outsb
lods
outsb
inc
dec
xor
or
lods
sub
ret
add
call
jno
or
jns
leave
out
xchg
pop
out
call
jo
jmp
dec
inc
or
imull
jp
pop
pop
mov
pop
inc
jl
inc
sub
push
push
mov
xor
out
int
scas
lds
test
pop
cmp
js
lods
ss
jmp
sub
pop
or
loope
outsl
adc
cmp
pushf
xchg
fmull
inc
popa
lock
mov
in
data16
outsl
jge
popa
xor
jge
les
xchg
push
movb
into
xlat
cmc
fisubrl
cli
push
loopne
pop
pushf
inc
imul
push
sub
shll
out
call
mov
jae
pop
sub
loop
sub
mov
lods
inc
rclb
mov
stos
xor
mov
jl
loope
fs
jecxz
dec
inc
adc
call
test
movsb
push
pop
sub
nop
stc
xor
lret
and
lds
cmpsb
stos
lods
jnp
test
cli
lods
jg
jle
inc
cmpl
shr
icebp
fwait
xor
sahf
lret
mov
xor
lret
scas
mov
fsubrs
pusha
push
cmpsl
inc
loop
inc
lods
popa
inc
les
fistps
cmp
pop
push
mov
lret
fisubs
in
rcrl
xchg
test
xchg
cmp
loop
inc
loopne
in
data16
xchg
adc
aaa
outsb
pop
xchg
jmp
mov
dec
dec
nop
xchg
insb
pop
sub
loope
rol
mov
out
out
xchg
jecxz
clc
pop
mov
pop
les
enter
mov
xchg
dec
dec
adc
push
fs
push
mov
xchg
cmp
fabs
lods
or
inc
adc
mov
insb
mov
jb
sahf
lahf
push
xor
sub
mov
push
dec
dec
subl
jae
lock
clc
sub
jecxz
xor
pushf
jb
mov
or
pop
popf
inc
jge
mov
jo
xor
cmp
jb
clc
inc
push
fs
cli
sbb
cmp
pushf
jnp
je
cltd
push
cld
sub
fwait
xor
fdivr
shlb
push
scas
sbb
mov
cs
mov
or
ret
cmp
pop
imulb
mov
pusha
cltd
cltd
cmp
push
int3
mov
jae
dec
lock
sub
dec
insl
push
sahf
loop
loop
adc
xor
test
push
dec
jb
cltd
mov
push
sub
nop
out
cmp
mov
ljmp
pop
pop
sub
mov
xor
das
enter
arpl
rorb
push
jl
fsts
gs
add
cmp
aas
mov
mov
lods
inc
cld
xor
int
test
out
xlat
wbinvd
pavgb
cmp
pop
gs
xor
shlb
outsb
ficomps
aam
aas
in
dec
mov
mov
or
or
mov
ds
mov
popa
ret
pushf
insl
sarb
xchg
dec
subb
das
jecxz
daa
cmc
xchg
dec
xor
sub
mov
ds
inc
aaa
or
mov
dec
test
pop
jl
mov
jmp
jbe
pop
cmp
sub
mov
out
xchg
push
xor
jecxz
jmp
dec
xor
out
xor
inc
rclb
mov
push
movsl
add
movsl
subb
xlat
inc
hlt
jae
es
repz
cmp
pop
pusha
pop
add
enter
les
sub
dec
push
int
jge
sbb
mov
in
add
les
mov
inc
and
dec
fsub
push
jle
fbstp
test
inc
jmp
xchg
jl
in
js
ret
xchg
das
push
xor
repnz
and
test
jle
std
pushf
pop
loopne
fsubr
lods
fcoms
dec
and
mov
mov
imul
jns
cs
mov
cmp
xor
mov
push
dec
cmp
mulb
aas
fwait
das
xor
lea
cmp
add
xor
dec
mov
out
push
stos
pop
add
dec
notb
mov
ds
in
pop
sbb
push
dec
jmp
push
push
les
call
orb
mov
mov
mov
dec
nop
sahf
jae
xor
mov
mov
push
pushf
dec
fstps
push
lods
adc
cli
sub
ss
fs
test
test
xor
push
jl
mov
movsb
shlb
mov
xchg
ss
out
inc
das
les
mov
enter
add
lcall
mov
sarb
popf
mov
js
sub
addr16
das
pusha
mov
orb
fwait
mov
xor
ds
bound
pop
and
out
lret
push
ret
dec
in
cmpsb
xor
xor
inc
xchg
in
jl
mov
mov
les
popa
dec
lret
rclb
jmp
xchg
push
rcll
data16
xchg
stos
mov
enter
mov
shl
inc
int3
mov
adc
cltd
in
nop
ds
movsl
pop
repnz
adc
pop
int3
xor
mov
mov
cs
enter
scas
lret
jmp
lea
mov
shrl
call
cmp
lret
inc
xor
xor
js
xchg
dec
adc
lea
inc
inc
xor
dec
pusha
dec
andb
mov
into
push
dec
mov
cmp
dec
xchg
pop
lock
push
and
test
subb
and
inc
inc
mov
enter
jmp
mov
and
data16
xor
aam
sub
dec
loope
push
or
dec
cwtl
push
or
sub
enter
popf
push
pop
push
xor
sub
push
or
mov
das
mov
lods
out
test
cli
cwtl
xor
sub
cmp
pop
dec
lret
or
ds
push
xchg
push
out
repz
dec
dec
dec
lcall
push
jno
push
mov
lods
insb
shr
les
loop
fbstp
pop
loope
insb
xchg
insl
popf
aas
pop
add
pop
cwtl
or
outsb
loop
popa
mov
add
inc
into
or
test
xor
jmp
cs
cmp
xor
mov
jp
ljmp
mov
mov
cwtl
mov
jno
out
dec
icebp
mov
stos
sbb
in
out
loop
xor
es
mov
das
pop
mov
stos
pop
jle
lods
xor
stos
imul
or
inc
shrb
mov
loope
cmp
cs
ljmp
dec
pop
enter
inc
je
aam
ret
ds
sbb
xor
jbe
pusha
in
ss
push
call
cwtl
xor
int
aas
je
test
inc
xor
mov
cmp
cltd
scas
in
inc
loop
adc
cmp
les
pop
pusha
jecxz
push
ret
xor
mov
dec
inc
mov
rol
adc
or
out
mov
xor
lods
aam
aaa
xor
mov
mov
sub
cmp
hlt
fcoms
dec
int
repnz
jecxz
arpl
adc
mov
sub
xor
sahf
sarb
mov
or
sbb
adc
xor
in
iret
loop
rol
test
scas
pop
lods
icebp
dec
mulb
call
test
jl
add
push
xor
jo
mov
inc
cmpl
sub
in
outsl
arpl
cmp
aas
in
rorb
out
dec
daa
outsb
push
or
outsl
sbbb
scas
mov
pop
fbstp
xor
mov
scas
sub
sub
aas
or
push
inc
mov
adc
mov
lock
push
add
mov
cwtl
jb
xlat
mov
sub
lcall
dec
outsb
fldt
insl
ds
xchg
xor
loop
pop
lock
mov
inc
cmpsl
mov
jb
push
js
sbbb
fsubrl
mov
mov
push
cs
jae
inc
xor
sub
pop
sbb
incl
ret
fcompl
push
mov
dec
fsubs
pop
cmp
push
cmp
xchg
mov
loopne
and
in
test
loop
sbb
jle
je
mov
pop
cmp
pusha
rcrl
lods
std
loop
cltd
adc
xchg
inc
sub
add
pop
inc
pop
inc
push
insb
inc
xlat
mov
outsb
adc
loope
push
inc
push
mov
ss
add
inc
es
and
jmp
push
fs
jnp
in
sarl
call
std
and
ficoms
fsubp
je
mov
dec
pop
push
pop
inc
lods
inc
jecxz
jo
je
inc
ss
lods
sbb
mov
mov
pushf
or
add
xor
sub
bound
test
xor
cmp
sub
cld
push
ljmp
sbb
sub
jecxz
sbbb
js
iret
fidivs
mov
scas
cmp
int3
sub
sbb
ss
ss
mov
subb
cmp
insb
push
in
dec
les
push
xor
addr16
shlb
aam
push
push
dec
mov
cmp
mov
inc
insb
sub
shrb
dec
movsb
cmp
pop
cwtl
and
cmp
nop
push
add
inc
dec
inc
lock
int3
xor
or
xor
out
dec
shrl
and
lods
dec
enter
or
lods
and
adc
mov
bound
push
insb
and
out
jg
cmp
push
cmp
dec
pop
cmp
es
dec
aam
mov
lahf
push
in
xor
daa
repz
adc
push
push
cld
or
fstl
xor
outsb
sbb
sub
inc
xor
inc
int3
sub
push
test
sub
adc
inc
fisttpll
xor
ja
or
inc
push
aad
in
xchg
cwtl
sub
insl
or
add
sbb
add
fcmove
pop
xor
jae
push
dec
inc
dec
loope
mov
dec
cmpsb
cmpsb
fmull
nop
cmpsl
pop
sbb
loop
inc
inc
mov
les
int3
insb
mov
shrb
jecxz
and
cmp
enter
ss
mov
mov
leave
cld
adc
scas
pusha
in
and
sbb
and
popf
les
nop
or
xor
fldlg2
xchg
and
movsl
ja
add
int3
xchg
sub
insb
xchg
sub
adc
lea
jge
dec
lods
test
imul
dec
mov
sub
insb
xchg
dec
mov
addr16
mov
imul
sbb
xchg
dec
mov
imul
addl
sub
push
stc
in
adc
mov
sub
mov
dec
or
xor
in
xchg
sbb
enter
movlps
xchg
test
and
or
inc
sub
imul
aaa
sbb
mov
je
xor
sti
sub
js
nop
repnz
in
cs
aas
push
faddl
mov
lods
cltd
pop
imul
push
test
lods
and
cwtl
inc
movsb
loopne
xor
adc
iret
push
xor
xor
cltd
loope
or
xchg
xchg
test
xchg
das
cli
pop
loopne
in
pop
cs
pop
or
inc
arpl
andl
jno
xor
insb
fwait
inc
dec
cmc
sahf
fdivrs
test
xchg
out
enter
cmp
xor
les
adc
test
loope
sub
divb
scas
dec
int3
push
cmpsb
dec
lret
nop
lcall
cs
mov
push
or
movsl
iret
lcall
dec
pushf
inc
scas
sbb
pop
xor
test
xchg
in
rcr
and
popf
dec
and
xor
mov
jne
shrl
not
mov
loopew
aaa
xchg
mov
int
in
sub
mov
xchg
dec
xor
add
xor
xor
mov
out
mov
les
vprotq
sahf
das
xor
cmpsb
orl
lods
in
adc
movsl
pop
adc
jl
testl
loopne
sub
add
in
xor
mov
test
jecxz
scas
std
repnz
int3
push
dec
les
aas
cmp
sahf
inc
mov
jmp
sbb
sub
movsb
or
stos
aad
lods
bound
xor
outsb
les
ret
push
stos
and
ret
xor
mov
ret
insb
jmp
in
lahf
cmp
mov
idivb
xor
ss
inc
push
lods
mov
out
pop
cltd
jmp
sub
push
mov
data16
mov
scas
out
mov
xchg
pop
push
xchg
xor
xlat
mov
jmp
fisubrl
xor
mov
out
aaa
jl
loope
and
ss
call
lods
insl
rorb
in
mov
test
cmpsl
insl
sub
inc
adc
push
rclb
int
out
mov
mov
sub
xor
cmp
xor
push
insb
push
repz
rol
xsha1
cmpsb
mov
pop
mov
in
xor
in
sub
dec
inc
or
or
push
fistps
dec
lods
push
or
sub
cmp
ds
movsb
int
inc
pop
xchg
sub
sub
in
dec
insb
mov
push
aas
and
mov
leave
inc
loop
in
cmpsl
test
push
test
inc
lods
and
push
cmp
sub
fnstsw
inc
mov
xor
jl
mov
dec
insb
test
push
xchg
push
mov
adc
clc
xor
jl
scas
dec
into
or
mov
je
mov
fmuls
cmp
jo
push
fwait
cmp
inc
sub
inc
push
push
movsl
pushf
mov
inc
insl
push
insb
lock
pop
pushf
insl
jl
inc
loopne
and
rcrb
push
pop
loope
or
stos
movsl
dec
dec
in
pop
and
mov
mov
pop
jns
cmp
pushf
dec
inc
xor
cmpsb
aam
negb
adc
fsubrl
repz
inc
jo
fmul
cmpsb
pushf
inc
inc
push
lods
cmpsl
cmc
push
faddl
int3
pop
dec
scas
clc
xchg
pop
shr
in
xor
jge
pop
mov
add
insl
int
in
push
xchg
xor
sub
test
mov
movsb
sbb
pop
fists
into
das
inc
pop
cwtl
xchg
arpl
sub
pushf
dec
mov
sub
xor
xor
inc
jbe
lcall
movsl
mov
mov
jl
sti
inc
dec
cltd
jae
insb
or
push
dec
and
jecxz
js
out
inc
inc
or
test
xor
push
shrl
push
dec
add
or
dec
in
push
xchg
pushf
sub
mov
push
ret
push
mov
xor
jg
push
pushf
lods
stos
ss
mov
out
lret
or
ja
sti
jecxz
xlat
or
int3
or
lods
xor
sahf
mov
pop
jle
out
mov
xor
jge
in
out
or
f2xm1
pop
inc
mov
sub
insl
xchg
sub
xchg
mov
pop
fwait
mov
lock
adc
sub
fdivrs
loope
pushf
cmp
push
push
push
xor
sub
xor
mov
cs
dec
push
mov
lcall
adc
push
mov
mov
dec
dec
fadd
mov
stos
cmp
add
bound
mov
xor
pusha
xchg
sub
adc
dec
dec
lcall
fnstcw
cld
cs
and
push
pop
js
and
repz
sbb
cmp
mov
imul
inc
mov
das
test
dec
stc
sub
inc
cmp
pop
cwtl
mov
dec
repnz
bound
sub
push
sti
sub
aas
je
lahf
ja
mov
sub
and
addr16
inc
lret
mov
push
inc
call
pop
cs
pop
sub
aaa
loope
fimuls
imul
and
push
mov
cmp
cmp
in
lds
daa
shlb
cmp
or
mov
out
dec
mov
cmp
daa
fs
leave
sti
adc
jmp
js
mov
fs
pop
push
ds
ja
cld
inc
enter
dec
push
inc
cmpsl
aaa
mov
xor
push
inc
push
int3
xor
xchg
sub
xor
cmp
enter
or
in
sub
in
test
nop
xor
jns
or
cmp
movb
inc
and
das
cwtl
ds
lods
push
cmp
dec
aas
mov
test
dec
dec
mov
fsubrl
dec
push
fildl
ds
in
decb
loop
cmp
cmp
dec
sti
sbb
jge
fisttpl
push
ljmp
push
or
mov
push
fidivrl
adc
lret
or
ljmp
push
push
mov
jle
jge,pn
fmul
sub
jp
shlb
je
roll
mov
cld
je
xchg
sub
mov
clc
pop
mov
lea
mov
cld
loope
cltd
andl
xlat
dec
inc
mov
in
cmp
das
mov
fnstenv
insl
loopne
shl
testb
dec
insb
lcall
dec
lahf
das
int3
jle
xor
inc
mov
insb
push
aas
or
xor
cmp
push
imul
aad
push
mov
dec
cs
loopne
dec
sub
icebp
jno
push
and
mov
xchg
orb
and
in
scas
fwait
sub
leave
fsubrl
cmp
add
pop
iret
or
rol
cmp
mov
gs
add
scas
inc
or
stos
sub
dec
pop
xor
mov
mov
call
sub
popf
dec
and
pop
or
mov
int
and
sysenter
and
imul
in
ds
sahf
cwtl
fnstcw
test
push
push
jnp
push
ds
ds
ss
pop
popf
fs
pop
sbb
pop
test
in
jecxz
fsubrs
xor
hlt
aaa
sub
ds
aas
js
sbb
pop
aaa
xor
or
sahf
push
sub
sub
xor
push
xor
mov
push
sub
push
xor
cmp
or
call
repz
test
mov
clc
repz
insl
add
rcl
stc
addr16
pop
lcall
sub
pop
xor
data16
pop
ret
sub
cmp
cltd
push
xorb
or
test
jge
call
faddl
xor
or
jecxz
or
or
sub
fnsave
mov
enter
xlat
fsts
movsl
sbb
lods
dec
xor
jmp
les
movsb
adc
sbb
cltd
mov
mov
scas
test
sub
sarl
dec
in
add
lds
scas
jae
xchg
dec
push
lret
add
push
aas
sub
jmp
dec
insb
mov
xor
stos
outsb
dec
das
ss
or
push
jne
aaa
mov
mov
fs
add
cmp
setbe
xor
mov
mov
pop
fmull
idivl
ds
imull
jb
cli
lcall
dec
nop
enter
push
cmp
push
or
dec
test
and
dec
mov
push
mov
pop
push
or
push
divb
sar
sub
fmull
cli
or
pop
xor
sti
gs
dec
shll
cmp
xor
icebp
cs
int
mov
push
fmul
pop
mov
stc
sub
push
lret
push
pop
cld
mov
nop
das
fimull
xor
test
mov
leave
and
jbe
lods
fsubs
rcr
lods
push
cli
cmp
std
lahf
js
aaa
sar
cmp
mov
mov
push
xor
stos
dec
sub
jbe
bndldx
or
jle
fstps
sbb
inc
adcb
jbe
sbb
dec
imul
enter
fwait
xchg
pop
sub
xor
hlt
sub
cmp
and
sbb
jns
cli
xchg
aaa
int3
xor
les
xor
or
stc
add
das
mov
ret
in
pop
nop
imul
cmp
ficoml
inc
or
jp
mov
insl
inc
lock
pop
mov
in
mov
aas
mov
pop
or
leave
mov
aas
sub
or
cmpsb
mov
push
jl
sub
mov
arpl
jl,pn
hlt
into
enter
in
jb
pusha
shrl
dec
leave
insl
sbb
sbb
pushf
mov
inc
xchg
int3
lret
pop
xor
adcb
lret
aaa
arpl
xor
sub
in
in
imul
pop
cltd
add
test
movsl
sub
and
les
push
sub
scas
inc
aam
stos
or
aas
subb
inc
inc
mov
inc
insl
shrl
adc
dec
sub
mov
xchg
inc
mov
jb
loopne
and
addl
in
add
xchg
aaa
mov
enter
adc
mov
cs
lods
cmp
vmovaps
sub
pop
xor
shl
push
jecxz
mov
inc
pusha
mov
push
cs
dec
sti
mov
test
inc
inc
xorb
jo
lods
dec
jbe
and
push
inc
mov
inc
xchg
jne
pop
or
inc
shr
push
inc
mov
add
sub
insl
shrb
int3
xor
sbb
sub
mov
mov
sahf
imul
jne
mov
mov
bound
je
mov
dec
cmpl
lahf
mov
je
sub
jl
pop
cwtl
mov
pusha
mov
push
sub
xchg
cs
pop
xor
pop
mov
mov
scas
push
je
push
fdivl
cmp
xor
lods
ja
shl
jne
xor
mov
xor
scas
loope
mov
stos
and
je
das
and
stos
shrl
inc
adc
insb
dec
cmpsl
pop
cmp
sbbb
inc
test
aaa
hlt
out
nop
nop
jns
mov
stc
xor
dec
insb
lret
mov
movntps
xor
dec
pushf
jo
or
in
fisttpll
dec
cmp
scas
inc
pop
orl
push
inc
jbe
mov
mov
push
sub
das
jge
sub
lds
xor
cmp
dec
in
dec
cs
sub
pusha
lods
mov
sbb
test
mov
xor
pop
in
insb
and
jl
sub
sti
shrb
adcl
pusha
movsl
lods
out
arpl
das
and
mov
lods
cmc
je
aad
lods
mov
lods
nop
hlt
xor
aaa
lods
push
dec
lods
mov
lret
mov
xor
fs
and
xor
sub
nop
and
mov
cld
mov
dec
pop
jo
xor
mov
scas
das
dec
sub
imul
inc
into
push
mov
fdivs
hlt
cld
add
xlat
imulb
add
add
sub
fsubrs
incb
shl
mov
push
div
outsb
inc
xor
adc
adc
mov
jnp
lea
mov
cmp
mov
jl
xchg
stos
aad
sub
sub
mov
scas
clc
je
jb
shlb
neg
xchg
cmp
sahf
dec
push
xchg
pop
and
push
andl
into
jb
push
pop
std
sub
xchg
cmpb
mov
aaa
xchg
inc
or
and
daa
outsl
cmp
loope
int3
call
sti
in
mov
push
rclb
int
add
int
mov
adc
or
int3
and
outsl
aad
aad
aas
adc
mov
push
xchg
push
push
cmp
inc
cmp
inc
pop
cmp
xchg
fwait
lahf
cwtl
lcall
lods
jns
cmpsl
sahf
push
or
push
push
decb
push
sbb
loope
roll
shrb
xor
push
dec
xor
cmpb
fsubs
incb
lock
push
fisubrl
shlb
push
movsl
cmp
fcmovne
pushf
pop
aad
or
cmp
mov
or
or
add
sub
fwait
sub
movsl
xchg
jae
mov
pop
pop
cmp
in
add
aas
xchg
aad
push
loope
adc
mov
loopne
js
cld
push
aas
jns
je
add
es
sub
sarb
mov
pop
or
mov
in
enter
mov
mov
mov
jmp
or
scas
ljmp
sbb
testb
mov
jp
movsl
outsb
push
sbb
adc
push
sub
adc
pop
sub
xor
sarb
add
ret
sbb
outsb
ja
cld
mov
into
rclb
add
popf
jl
mov
cmpsb
lret
or
adc
rcrl
mov
xchg
test
lea
cmp
test
jp
push
sbbl
shlb
mov
popf
fimuls
adc
int3
jmp
fidivrl
sbb
pushf
sbb
mov
lret
push
call
ja
mov
insb
loop
pushf
add
negl
ds
xchg
xor
and
aam
adc
lret
mov
sahf
cltd
mov
dec
int
stos
xor
push
sbb
cs
in
cmp
and
mov
pushf
fisubrl
sub
or
mov
fsubrs
std
mov
dec
clc
mov
lods
stos
push
in
cmpsl
cltd
sub
arpl
aas
push
cmpsl
out
mov
mov
sub
je
jmp
pop
stos
mov
cmp
push
rorl
pop
fsts
inc
lret
inc
add
cmp
add
or
add
cld
lahf
push
mov
adc
iret
lods
xchg
jnp
mov
dec
sub
pop
xor
push
ljmp
sbb
shlb
fnstenv
jno
dec
cwtl
pop
xchg
call
or
lar
push
inc
adc
xor
sti
sub
pop
mov
icebp
pushf
jle
jne
movsl
mov
jae
cltd
jne
pop
sub
fisubs
xchg
push
insb
xor
and
repz
jne
sub
push
sti
jle
fistpl
cmp
cmp
mov
adc
adc
cli
mov
hlt
mov
aam
inc
xchg
mov
sbb
sahf
popf
fildl
mov
cltd
outsl
ss
loopne
pop
jb
and
cmp
ror
out
and
cmp
cmp
mov
mov
cmp
sti
mov
out
test
lret
xor
test
and
popa
sub
sbb
fbstp
mov
jb
jns
es
imul
xchg
mov
jmp
dec
pop
out
dec
adc
push
sub
dec
sub
es
roll
and
sbb
jmp
mov
test
mov
sub
lods
or
push
xor
aas
bound
in
sub
call
sub
mov
cmp
xor
and
cmp
xor
mov
addr16
push
je
mov
adc
lea
pop
out
cs
pushf
mov
cwtl
push
or
mov
fsubrl
stos
je
or
jne
cs
cmp
jae
add
mov
mov
dec
mov
sub
in
cmp
cmp
je
ds
mov
fisttpll
insb
sbb
gs
and
je
loop
std
xchg
je
divl
or
dec
test
or
testb
adc
je
lods
mov
orl
dec
cmc
out
inc
xchg
sub
jno
dec
cmp
mov
fldt
cmp
pop
xor
jg
divl
push
lahf
mov
stos
dec
mov
fmuls
mov
mov
xor
loope
jns
stos
push
or
mov
cmpsl
xor
es
mov
and
xchg
and
flds
cmp
out
xor
and
cmpsb
push
leave
and
push
lret
in
dec
xor
or
outsb
xchg
fld
cmp
push
mov
movsb
cmp
mov
call
jecxz
mov
shlb
mov
shll
cmp
xor
xor
mov
xor
xor
lcall
xor
xor
or
lods
pop
xor
test
daa
test
push
ss
lods
xchg
fs
cmp
je
lcall
mov
loope
fs
aam
cwtl
xchg
xor
mov
mov
test
mov
test
and
ror
and
pushf
imul
xchg
mov
in
fistpll
je
aaa
mov
pushw
xor
push
sub
xor
aad
sub
pop
push
das
pop
subb
mov
cmp
in
adc
loopne
call
sub
cmp
je
js
sbb
sub
inc
sbb
inc
leave
jecxz
and
movsl
push
loopne
inc
movsl
push
int
push
mov
mov
je
push
inc
sub
push
es
ss
enter
inc
mov
loopne
pop
arpl
leave
pop
inc
sbb
adc
jo
movsb
sbb
push
enter
pop
sub
pop
inc
addl
push
movsb
inc
jo
push
push
push
dec
int3
mov
jae
xor
jns
insb
lods
xor
aaa
loope
lods
xor
lret
arpl
xor
dec
lods
ret
xchg
mov
pop
push
dec
sub
dec
xchg
dec
fwait
inc
lahf
xor
in
mov
lea
dec
jns
xchg
gs
in
dec
jl
dec
popa
dec
rorl
xor
cs
mov
mov
stos
pop
mov
je
add
adcl
lock
xchg
pop
in
adc
idivl
les
or
jl
enter
cmp
movsw
test
hlt
sbb
ret
mov
je
sub
push
inc
das
adc
scas
scas
pop
scas
pop
into
and
mov
jl
cmc
xchg
stos
jns
mov
mov
mov
jnp
adc
int3
cmp
pop
pusha
lret
xorl
outsl
pop
mov
aaa
les
and
jp
fisubrl
dec
ss
mov
int3
or
divb
rcrb
outsb
dec
shl
xor
hlt
xchg
xor
push
push
mov
sti
xchg
cld
in
adc
shlb
cmpsb
bswap
inc
dec
lods
jbe
push
test
cmp
imul
jo
scas
jno
pop
bound
mov
pusha
pop
xor
int3
sub
lock
mov
xor
xor
inc
cmp
xor
xchg
mov
jg
cmc
xchg
shrb
xor
inc
jo
xchg
or
push
mov
fs
dec
jp
clc
inc
int
pushl
nop
subl
js
sub
mov
xchg
xor
mov
mov
xor
or
aad
push
pop
push
pushf
jg
mov
jge
jnp
xchg
jp
imul
mov
and
dec
fs
push
bound
xor
or
mov
inc
fdivrs
in
push
xchg
test
push
xchg
mov
sub
inc
ret
mov
cmp
jle
jge
shll
jnp
mov
mov
adcb
test
stos
das
fs
xchg
sub
in
je
nop
mov
mov
mov
cwtl
cltd
movsb
mov
push
out
sbb
cwtl
inc
int3
rcr
lahf
mov
bound
mov
mov
std
xor
je
jo
out
scas
hlt
push
pushf
xor
cwtl
dec
xor
cmp
mov
xor
inc
popa
adc
inc
push
dec
fmuls
cmp
mov
cmpsb
sub
inc
adc
push
inc
aaa
sub
mov
xor
mov
dec
pushf
adc
push
inc
jp
scas
cmp
mov
hlt
adc
rol
cmp
push
ds
or
xchg
adc
dec
aaa
lea
dec
adc
cmp
push
rclb
mov
adc
mov
push
mov
data16
nop
ret
inc
jp
pop
loop
test
jne
cltd
xor
xor
jae
inc
test
mov
cmp
dec
jle
mov
inc
xchg
mov
mov
pop
test
xchg
xchg
sub
sbb
pop
push
pop
jp
lds
xchg
jne
jno
mov
mov
jl
insb
inc
mov
je
xchg
aaa
mov
push
mov
add
mov
cs
sbbb
sub
insb
into
test
in
mov
xchg
sarb
insb
and
jge
mov
jle
ds
cmp
into
dec
dec
lock
xchg
test
mov
stos
ja
and
rorb
dec
mov
addl
mov
jge
loop
insb
push
mov
xor
adc
fcmovb
ret
scas
inc
pop
frstor
popa
das
test
ss
cmp
dec
xchg
enter
ret
lods
push
mov
push
sbb
mov
fadd
xor
cmp
push
in
loopne
adc
and
stos
mov
mov
dec
push
dec
dec
push
aam
fsubrl
sti
fs
jp
lock
icebp
ljmp
pop
addb
test
mov
lret
xor
stos
bound
jge
jp
idiv
cmp
dec
pop
ffree
jge
or
xorb
jg
int3
sbb
test
lcall
mov
push
shll
lds
pushf
shrl
mov
loopne
movsl
sahf
mov
outsb
ds
dec
bnd
je
cmp
lock
mov
fcmovu
mov
mov
test
mov
in
fdivrs
outsb
jnp
mov
mov
aaa
pop
push
iret
lret
int
out
dec
add
jl
shll
mov
shl
mov
push
dec
loopne
divb
int
rcl
sub
jge
rolb
push
icebp
or
push
in
and
inc
push
loopne
mov
stc
mov
stos
xchg
movsb
movsb
add
pusha
decb
inc
stos
mov
test
out
inc
jge
lods
jne
xchg
rorb
mov
jns
lea
mov
ds
inc
inc
jle
mov
adc
jl
bound
mov
outsb
mov
test
ret
insb
cmp
jbe
push
cmp
insb
popf
jge
jp
or
ret
dec
mov
rorl
push
js
mov
and
mov
push
push
sbb
add
push
inc
mov
pop
push
scas
test
sbbb
mov
int
jge
mov
mov
xor
push
lock
scas
jae
push
xchg
push
test
aas
xchg
lea
push
mov
dec
xchg
xchg
mov
mov
test
sub
jle
pushaw
cld
cmp
mov
cmp
out
ja
push
nop
in
sub
les
test
push
sub
popf
mov
into
mov
out
pop
pop
dec
gs
icebp
cmpb
add
cltd
cltd
xchg
xor
clc
vpmaddwd
outsb
mov
popf
shrb
movsb
nop
pushf
idivb
arpl
bound
cwtl
cmp
push
hlt
adc
mov
add
jmp
dec
rep
fs
cmp
xchg
aaa
dec
dec
mov
cltd
sbb
es
dec
cmpsb
or
repnz
push
pop
mov
aam
leave
mov
lock
test
addl
mov
jbe
notl
dec
add
pop
test
xor
mov
fwait
cwtl
jle
test
cltd
mov
in
outsb
sbb
lock
inc
cmp
xchg
icebp
mov
inc
jbe
hlt
mov
popf
sbb
fsubl
sbb
xor
cmp
lods
cmp
repz
stos
test
imul
jnp
js
fidivrs
fldz
sahf
shlb
fistpll
fcomps
lock
dec
jae
adc
lods
cmp
mov
add
mov
adcl
leave
xchg
mov
push
jbe
rol
add
cmp
and
mov
hlt
clc
popf
dec
insb
cltd
or
sub
pop
sub
dec
mov
lcall
cli
mov
pop
adc
cmpsl
xchg
add
test
adc
das
adc
push
lret
in
xchg
inc
hlt
shrl
js
adc
sahf
aam
call
sub
sub
xchg
shlb
decl
movsbw
add
mov
push
sub
test
stc
repnz
movb
lea
jne
not
setnp
mov
bsr
cmc
sar
adc
sub
rol
mov
clc
cmp
stc
sub
pushf
cmc
pushl
popl
test
call
jb
shll
dec
jns
xchg
in
add
stos
sbb
call
nop
ds
add
push
repz
scas
enter
popf
jecxz
jmp
aam
cwtl
add
mov
fistpll
or
roll
out
aaa
xor
inc
xchg
outsl
lds
mov
rcl
popa
out
popa
test
arpl
enter
adcl
jmp
stc
stos
push
mov
push
fdivr
mov
sbb
aas
roll
call
cmp
mov
pop
movzbw
add
pusha
mov
and
add
push
ror
mov
bt
jmp
add
inc
gs
imul
inc
add
test
addr16
jmp
push
jb
xor
push
push
mov
cwtl
aas
jp
mov
gs
ret
scas
les
mov
imul
ret
cltd
mov
icebp
dec
push
mov
rcr
dec
adc
and
scas
push
mov
jb
shl
sub
aas
negb
jl
inc
inc
sbbl
push
dec
add
outsl
or
cld
push
stc
jl
jp
std
ret
mov
mov
mov
aaa
in
sbb
and
jg
test
mov
ss
push
xchg
inc
ss
and
lds
movl
pusha
pushf
movl
pushf
push
lea
jmp
aas
dec
sub
pop
popa
adc
rol
cwtl
cmp
data16
sbb
mov
push
mov
cmp
jbe
xchg
lods
pop
sub
popa
or
imul
aad
jb
sahf
sub
mov
cmp
js
fdivrl
ljmp
pop
or
pop
mov
ret
xchg
pop
scas
pusha
in
pop
into
or
lock
in
pusha
pusha
bswap
mov
push
pushf
push
movb
pushl
ret
mov
dec
addr16
push
dec
lods
sbb
loope
cs
xchg
inc
sub
jmp
jmp
and
outsl
and
hlt
adcb
lea
sbb
xorl
fcmovnbe
mov
pop
jp
mov
dec
push
cs
rclb
sub
cltd
cmp
or
in
xor
loopne
imul
ret
mov
pop
sub
and
out
push
outsb
push
out
mov
shl
fwait
sub
dec
adc
add
fidivl
cmp
push
cmpsb
clc
js
ror
imul
ds
mov
add
fcomp
pop
mov
xor
mov
mov
mov
popl
jmp
mov
ret
sbb
cmp
fs
sub
inc
fmull
xlat
cltd
push
inc
sti
out
add
lahf
scas
mov
test
xchg
imul
cwtl
xor
clc
test
mov
sub
mov
andb
sub
xchg
cmpsl
arpl
mov
fnstsw
enter
mov
nop
lods
inc
pop
mov
mov
std
out
or
dec
test
imul
ja
cmp
pop
mov
mov
push
inc
gs
jno
shll
ja
mov
push
cmpsl
hlt
rolb
add
popa
mov
fimull
popl
xorb
dec
cmp
ret
arpl
cmp
xchg
insl
cmc
mov
stc
xor
jl
xchg
xchg
dec
scas
xchg
test
xor
movsb
xor
roll
or
mov
xchg
push
pop
jp
fbstp
sbb
or
cltd
mov
cwtl
std
jp
and
pop
fnstenv
cmpsb
psrld
stos
sbb
jmp
test
daa
inc
int3
lods
ds
hlt
adc
jp
test
push
es
or
adcb
iret
out
xchg
fstl
sub
jns
leave
push
leave
xchg
mov
pop
cmp
aas
out
xchg
pop
adc
stc
xor
clc
out
enter
jne
mov
sbb
lahf
and
adc
lods
nop
jnp
movsl
sahf
cltd
push
std
test
rcrl
sub
mov
into
jecxz
ror
int3
arpl
xlat
push
lods
push
int
sub
sahf
sti
out
rorb
das
cmp
int3
push
push
ficoms
xor
cltd
add
jmp
xor
shlb
js
jnp
cmpxchg
in
dec
clc
jmp
call
dec
xor
shrb
xchg
popa
fstl
lret
inc
dec
jp
and
xchg
add
hlt
pop
cmpl
lock
add
add
stc
push
jg
mov
mov
outsb
pop
cmp
aaa
outsb
insl
xchg
jle
das
mov
xchg
rcll
lds
stos
daa
and
mov
ret
mov
ret
call
test
lds
popf
cld
repnz
or
arpl
imul
mov
mov
in
arpl
mov
push
xlat
push
inc
fbstp
inc
xchg
mov
int3
inc
les
jl
jno
and
cltd
rclb
inc
xor
lret
scas
mov
cmp
fs
je
stc
cmp
add
bt
call
gs
iret
sbb
sbb
dec
adc
jae
add
out
bnd
addb
cmp
mov
lahf
mov
jmp
add
mov
icebp
xor
xor
fs
cltd
inc
cmpsl
ret
inc
mov
inc
mov
push
mov
adc
arpl
push
xor
sarl
mov
mov
mov
inc
jecxz
addr16
adc
add
cmpsl
in
mov
movsb
test
mov
dec
jns
pushw
movsb
stc
adc
mov
mov
loopne
in
ret
in
push
aaa
out
mov
mov
jnp
outsl
movl
adc
jo
cmp
mov
jnp
mov
cwtl
loope
jnp
call
sbb
or
inc
xlat
and
repnz
pop
add
pop
dec
cltd
jb
call
mov
or
adc
cs
mov
cmp
loope
lret
adc
daa
call
mov
movb
pushf
movw
pushl
ret
push
xchg
aaa
mov
sbb
or
in
testb
xchg
cmpsb
loope
pushf
push
dec
lods
loopne
ss
xchg
mov
fwait
outsb
sbb
mov
lahf
mov
js
inc
ljmp
ds
xor
loope
fildl
and
mov
ror
testb
sub
lret
ljmp
cmp
mov
sbb
mov
ret
mov
sti
out
mov
mov
mov
lods
clc
iret
ljmp
sub
imulb
into
nop
sub
cmc
mov
adc
and
xchg
xchg
push
or
mov
les
es
stos
and
push
dec
dec
js
aaa
mov
daa
lea
and
jo
insb
pop
add
rolb
dec
and
xorb
stc
sbb
xor
mov
stc
mov
lahf
lds
inc
sbb
xor
test
pop
mov
es
movsb
jg
mov
arpl
jnp
adc
in
push
mov
popf
int3
pop
and
jo
push
mov
add
add
pop
or
ds
pop
xorb
popa
inc
int3
call
lahf
out
sub
dec
xchg
mov
lret
mov
int
iret
sub
or
mov
inc
jle
dec
mov
sub
jge
icebp
xor
jb
mov
sbb
out
jnp
and
mov
lcall
or
push
push
dec
pop
mov
es
mov
inc
dec
mov
sbb
mov
ret
inc
push
mov
imul
popa
bound
addr16
sub
cltd
in
scas
cli
adc
pop
aas
cmp
aas
ds
std
insl
sbb
jnp
call
jmp
jno
cwtl
cmp
mov
cmp
push
das
test
xor
repnz
jne
pusha
xchg
cli
aam
inc
stos
movsb
stos
loopne
mov
gs
xor
cmpsl
fwait
push
jecxz
jg
sub
cvttps2pi
into
inc
xor
xlat
xchg
pusha
and
pop
xchg
cli
loop
mov
sub
sbb
ja
mov
outsb
mov
xlat
fmuls
jle
lcall
out
clc
xor
and
and
lds
into
jmp
inc
ljmp
or
mov
inc
dec
mov
xchg
mov
sahf
or
xchg
mov
lods
sbb
pushf
div
jmp
and
sbb
mov
outsb
mov
icebp
jecxz
mov
sub
pavgw
mov
mov
cmp
xchg
xchg
pop
sbb
ljmp
push
aas
in
or
or
test
and
dec
mov
fsubs
mov
cmpsb
fidivs
xchg
push
and
mov
into
jne
scas
sub
repnz
mov
push
enter
lea
fisttps
nop
addr16
pop
das
repnz
adc
xchg
pop
xchg
mov
arpl
push
xchg
subl
sbb
mov
jnp
test
stos
icebp
pop
outsl
inc
jno
add
mov
mov
or
int3
push
cmp
pop
jne
cwtl
xor
aam
xchg
rclb
cmp
dec
mov
popa
popa
sbbl
cmc
inc
push
aam
jg
cmc
fiadds
mov
out
add
xorb
sbb
icebp
pushaw
inc
cmp
fs
lock
sub
aad
xor
je
pop
sbb
sbb
out
push
mov
sar
add
shl
pop
out
jge
test
in
loope
popf
fs
inc
and
and
ja
cmp
sub
rcr
shl
movzbw
add
shrd
mov
push
rol
clc
rol
mov
call
pushf
lea
jne
je
cmc
test
bt
test
add
jmp
out
loop
mov
xor
push
std
mov
dec
push
cmpsb
jnp
addr16
xor
push
frstor
sahf
dec
pop
dec
mov
pop
xchg
jb
test
mov
add
mov
cmpsl
clc
sti
sub
mov
movsb
dec
in
iret
fcmovne
inc
pushf
movsl
fdivs
mov
cmp
pop
pop
xchg
dec
bound
jo
push
jns
inc
scas
pusha
dec
out
sbb
mov
push
mov
mov
mov
nop
ret
xchg
and
cld
jg
add
and
int3
ljmp
adc
mov
push
fs
mov
or
out
sub
dec
xchg
or
dec
iret
cwtl
rcl
iret
js
test
rolb
and
mov
sarl
push
jnp
mov
inc
insl
test
xor
and
test
jae
sub
rcl
or
mov
daa
dec
push
cltd
inc
jno
push
fists
cs
adc
or
xor
in
push
clc
fcoml
out
sarl
pop
cs
imull
and
insb
dec
addl
xor
jg
je
xor
jmp
mov
dec
icebp
adc
push
push
mov
add
push
pushl
mov
lea
jmp
movl
clc
sub
pusha
pushl
popl
cmp
cmp
pushf
lea
ja
sar
test
not
cmc
sub
cmc
shl
clc
bsf
add
or
bswap
sar
shld
mov
not
shl
rcr
xor
mov
push
pushl
repnz
mov
pushf
jmp
mov
dec
insl
add
bound
xchg
dec
xor
jo
loope
lcall
movsb
push
xchg
xchg
push
xchg
dec
lcall
push
mov
mov
mov
or
mov
xchg
mov
cmpsb
cmpsb
pop
movsl
pop
jmp
jg
daa
scas
dec
lret
jp
and
inc
sbb
notl
test
leave
mov
or
es
movmskps
dec
jae
add
mov
mov
inc
jbe
incl
cmp
xchg
inc
or
je
repnz
push
or
ljmp
mov
stos
mov
push
icebp
addr16
loope
add
bound
gs
cs
mov
lea
loope
ja
in
mov
pusha
test
or
popa
fistpll
cld
or
aad
fstpl
push
rolb
add
jno
jge
add
push
shrb
push
pop
and
dec
sbb
sbb
loope
movsb
call
pop
std
std
mov
insl
mov
pop
ret
jp
inc
and
lret
das
bound
pushf
mov
pop
inc
ss
stos
lahf
or
jge
stc
in
push
pop
pop
iret
add
loope
and
test
xor
popf
mov
testl
xchg
repz
xchg
push
cmpsb
mov
jle
or
arpl
mov
rorb
xor
pushf
movl
movl
push
pushf
pusha
movl
movb
lea
jmp
pop
sub
not
jl
or
sbb
pop
ret
or
sub
xorb
mov
and
das
add
int3
fwait
dec
fadds
adc
out
add
jno
dec
sub
cltd
arpl
incb
dec
sbb
icebp
scas
pop
push
jno
cmp
jns
ljmp
inc
adc
jecxz
loopne
sbb
out
xchg
pop
fildll
pop
aaa
pop
aas
mov
jno
mov
jle
sbb
push
mov
sub
fwait
fwait
mov
mov
mov
aaa
lea
lock
xlat
push
dec
inc
mov
out
scas
jl
outsl
sbb
aad
xor
inc
xchg
je
decl
outsl
jmp
aas
mov
in
out
xor
pusha
les
push
cmc
cwtl
dec
sbb
orb
loopne
les
iret
outsl
and
dec
xchg
imul
xlat
add
dec
jecxz
fisttpll
test
popf
adc
fwait
cmpsl
push
and
faddl
fwait
test
sub
sbb
loope
sbb
sbb
out
stos
push
pop
ds
fisttps
mov
xor
imul
shrb
aaa
in
cmp
push
jg
insb
cmp
dec
xor
test
in
ss
and
inc
jo
mov
pop
and
lret
test
lock
cltd
pop
sub
mov
jb
mov
cmpsl
loopne
fs
les
outsb
out
loop
mov
pop
cmpsl
lret
ss
in
lods
xor
rcr
fisttps
arpl
lahf
xchg
inc
movsb
push
es
cltd
sub
je
mov
xchg
loopne
imul
lret
and
push
arpl
dec
out
std
jno
rorl
ja
loopne
or
dec
lock
ja
fcomps
sbb
xor
push
xchg
mov
inc
add
or
test
out
mov
push
and
jmp
imul
test
cmp
pusha
add
pushf
push
push
mov
lea
jmp
mov
mov
pushf
mov
mov
lea
jmp
call
sbb
xchg
jecxz
divb
nop
sbb
sub
xchg
rorl
rcrl
repz
mov
push
bound
mov
xchg
mov
mov
rcrb
out
mulw
jecxz
inc
xor
pushf
dec
mov
and
dec
sbb
leave
fdivr
mov
pushf
xchg
or
test
cli
decl
call
adc
stc
cmp
sub
push
call
pushf
add
mov
pushf
cmc
pusha
test
cmp
pushf
jmp
clc
cmp
cmp
call
cwtl
inc
sub
dec
sti
dec
addr16
ret
mov
ret
pop
fldt
movsl
lock
in
ja
ss
push
jnp
add
repnz
pop
adc
rep
enter
xor
test
mov
iret
adc
mov
push
into
out
xchg
dec
push
or
outsl
pop
xchg
push
out
mov
ljmp
shlb
adc
cmp
call
repnz
cmp
not
xchg
lret
jp
and
fisttpl
mov
cmp
sbb
mov
mov
cmp
add
cli
aam
inc
and
nop
adc
push
mov
mov
ljmp
lcall
fucomi
mov
sub
push
stos
gs
adc
sub
jns
jle
pcmpgtb
into
jae
and
imul
leave
sbbb
std
mov
fisttpll
lock
cmp
mov
pop
fwait
pop
popf
sub
push
jmp
push
or
icebp
xor
aaa
push
pop
pop
mov
cmp
arpl
push
xchg
inc
or
cld
sbb
mov
dec
push
cmp
inc
stc
mov
and
fsubs
push
fs
insb
js
mov
sbb
sbb
add
or
inc
adc
fisttpl
mov
mov
dec
call
fisubs
dec
or
les
cmpsl
xor
jno
lea
mov
pop
or
in
out
fisttpll
xchg
scas
or
scas
hlt
and
fnsave
mov
sbb
mov
jg
fst
into
mov
add
lock
fnstcw
add
or
and
test
into
addb
adc
outsl
in
in
lret
adc
decb
scas
sub
into
mov
adc
push
jmp
nop
mov
push
jmp
xor
fnsave
sbb
mov
add
pcmpgtw
insb
frstor
pop
shlb
or
and
push
xchg
fwait
movsl
dec
nop
adc
out
sbb
mov
add
cs
jnp
add
jg
sti
pop
push
jb
mov
lcall
pop
mov
xor
mov
ja
push
inc
mov
add
cs
ds
mov
insb
sub
insb
cmpsl
inc
fnstcw
in
scas
or
adcl
cld
adc
fidivrs
jb
or
pop
in
push
leave
pushf
push
call
cmp
push
pop
xor
push
dec
aam
movsl
push
xchg
das
iret
xchg
leave
ficoms
dec
in
pop
add
test
pushf
scas
cwtl
dec
and
or
add
inc
or
mov
daa
and
mov
jae
jg
pop
aaa
cmp
sbb
jp
les
fwait
add
mov
in
gs
hlt
cmp
dec
push
add
mov
mov
out
hlt
shlb
cld
leave
fadds
out
fs
out
scas
sub
cmp
jae
adc
test
add
jp
xor
sti
movsb
mov
fcmove
push
mov
sbb
or
pop
adc
int3
or
dec
mov
xchg
push
pushl
cwtl
add
cmp
cmpsb
outsl
fidivs
pop
adc
mov
fdivrl
add
addr16
mov
mov
pop
sub
xor
pop
xchg
sub
inc
in
xor
dec
out
adc
fs
push
adc
mov
repz
push
pop
fs
push
out
cmpsl
mov
test
pop
test
repz
out
in
jns
mov
sbb
mov
cmp
faddl
and
fidivrs
scas
popa
sub
dec
int
cmp
ss
cli
push
mov
jns
gs
inc
aas
or
repnz
push
das
dec
cltd
nop
cmpsl
rcrb
mull
and
push
stos
gs
mov
pop
ss
shlb
stc
repz
cwtl
outsb
imul
out
cmp
stos
pop
scas
in
test
dec
and
int3
xlat
les
cmp
fs
mov
push
sti
scas
pop
aaa
xchg
mov
mov
add
fsts
and
fs
jne
jmp
add
dec
insl
popa
addr16
imul
jns
outsb
je
jns
outsl
inc
popa
je
add
pop
pop
mov
cwtl
mov
push
scas
mov
push
clc
dec
push
and
sbb
and
push
pop
xchg
or
jl
xchg
cmp
adc
hlt
outsl
es
inc
lahf
cmp
push
lock
mov
pop
in
push
xchg
cmc
fs
std
pop
and
lret
pop
clc
jle
in
in
in
std
mov
sub
adcb
jns
scas
lea
push
push
aam
xor
aas
pop
and
arpl
lea
call
push
lea
jae
inc
mov
pushf
inc
not
jmp
add
dec
outsb
data16
popa
je
push
arpl
aaa
popl
call
inc
push
pop
mov
leave
push
mov
xor
or
shlb
pop
add
repnz
cmpsl
mov
ljmp
add
stos
rorl
fisubl
inc
dec
pop
xor
push
out
mov
push
outsl
decb
bound
leave
test
fsubrs
push
jne
sbb
hlt
test
cmp
xchg
xchg
bound
xchg
ficoml
les
jo
push
sub
movsb
xor
or
rcll
nop
cmp
fcmovnbe
add
ljmp
dec
dec
js
pop
mov
sbb
scas
test
dec
sbb
xchg
inc
dec
stos
lea
cmp
mov
cli
nop
push
or
xor
jno
in
jp
mov
pop
aad
stos
xchg
jns
outsb
pushl
sub
fistl
inc
push
jnp
pop
lods
es
jl
ss
mov
sbb
in
sarl
jbe
test
mov
popf
js
testl
sbb
aad
std
jmp
sub
mov
adc
out
cmp
cmc
clc
push
stc
inc
clc
mov
call
mov
or
bound
ds
push
mov
sub
pop
in
aad
dec
sub
jge
outsb
cmpsb
pop
inc
cli
mov
mov
or
clc
pop
xchg
jno
stc
sub
xorl
cwtl
push
hlt
mov
mov
inc
cmp
push
xor
and
test
insb
jmp
push
cmp
inc
inc
sbb
sub
aaa
push
push
pusha
or
rcrl
push
nop
lds
mov
sbb
jp
dec
cmp
std
push
mov
xchg
inc
pop
push
mov
std
push
pusha
addr16
iret
inc
lods
jmp
movsb
faddl
mov
dec
mov
loopne
add
mov
jecxz
xchg
pop
push
sub
ljmp
dec
call
mov
xchg
rolb
mov
fiadds
sarb
or
xchg
fadds
divl
data16
inc
sub
insl
fsubs
pushl
add
out
push
sbbl
stos
add
lahf
lret
bswap
orl
dec
dec
fmulp
sub
pop
adc
xor
dec
js
nop
sbb
inc
fs
jge
xchg
cmpl
in
or
sbb
popa
mov
rolb
push
iret
mov
add
js
call
cli
jbe
adc
in
daa
lea
mov
mov
div
xchg
sbb
jge,pn
mov
jnp
sub
fistps
sbb
enter
cld
add
les
pop
cmp
sbb
adc
jno
lret
xchg
cmpsb
hlt
rorb
dec
js
je
test
inc
cltd
mov
or
insb
inc
or
mov
call
in
cmpsb
cltd
inc
sub
cwtl
xchg
fcoml
sahf
cmpsl
fmull
push
or
ljmp
stc
inc
pusha
lock
cli
cwtl
fwait
sub
jno
ja
ds
push
mov
sbb
shll
das
mov
inc
or
nop
stos
or
dec
inc
sub
aaa
stc
mov
dec
cmpsb
xchg
int
movsb
dec
mov
mov
jecxz
push
das
add
pop
insl
movw
lea
jne
push
push
jmp
lea
jne
lea
neg
mov
shr
sub
add
mov
bt
cmp
pusha
cmc
sub
stc
pushl
popl
clc
cmc
stc
cmp
mov
lea
ja
bt
sub
pusha
shrd
bsr
sub
sub
add
bsr
mov
shl
setl
not
and
mov
push
repnz
pushl
mov
pusha
call
call
insl
xor
or
inc
mov
mov
sub
arpl
aaa
emms
std
jbe
pop
clc
adc
pop
testb
dec
jne
jp
pop
cmp
fucomi
mov
into
sub
std
data16
pop
push
pop
mov
xchg
inc
push
mov
xor
cmp
push
int3
call
testl
test
ret
adc
cmp
rcl
cmc
xlat
jl
pop
jp
sub
jecxz
sbb
orb
sbb
add
mov
pusha
clc
pusha
cmpb
call
jmp
ss
or
dec
jae
aad
sti
pop
mov
dec
gs
repz
psllq
sub
adc
push
push
addl
js
cld
ret
cmpsb
mov
into
andl
test
int
cmp
lds
adc
imul
mov
dec
jp
dec
mov
loope
rolb
jecxz
stos
xchg
out
add
loop
pop
and
mov
pusha
bt
test
push
lea
jle
pusha
lea
je
jmp
imul
movw
movw
movb
test
add
pushf
mov
pushf
pushf
lea
jmp
repnz
loop
mov
and
js
dec
jo
repz
jle
pop
shlb
ror
sbb
inc
or
inc
mov
sub
mov
xor
and
fisttpll
pop
outsl
int
cmp
jae
shlb
imul
loope
adc
outsl
cli
fs
mov
dec
add
pusha
mov
je
insb
mov
mov
mov
jo
jnp
jl
inc
je
mov
pusha
in
ljmp
stc
dec
lock
sbb
out
add
bt
pushl
popl
push
pusha
pushl
cmp
push
pushf
jmp
xchg
lds
mov
xor
mov
addl
loopew
xchg
xor
inc
bound
inc
jp
lock
mov
inc
mov
jp
xchg
shl
push
xor
inc
shll
fisttpll
popf
ret
add
daa
lret
jl
pop
dec
jge
mov
jae
jmp
or
mov
loope
mov
adc
xchg
xchg
xchg
mov
cmp
mov
pushf
pushf
cmpb
call
cmp
push
push
pushf
lea
jae
rcr
rol
shrd
mov
btr
adc
mov
cmc
neg
mov
push
stc
sub
test
clc
cmc
repnz
jmp
sahf
sub
mov
jle
or
jno
imull
pop
add
xchg
sbb
scas
inc
jne
jle
mov
popa
dec
test
aad
out
mov
push
xorl
add
pop
and
lds
popf
dec
dec
cmpsl
inc
sbb
and
inc
adc
xlat
insl
fwait
mov
sub
es
sub
sub
mov
das
pop
daa
sbb
sub
sub
fldcw
adc
dec
jne
and
pop
mov
pushf
setg
mov
pusha
mov
push
lea
mov
push
pushf
call
pushf
pushf
pushf
lea
jne
mov
sub
ror
shl
movsbw
mov
ror
add
sbb
sbb
mov
stc
test
jmp
dec
ja
jnp
fldt
fcoms
sbb
jge
lods
mov
in
mov
bnd
dec
mov
push
sahf
test
int
xlat
sub
dec
xchg
pushf
sbb
leave
or
sarb
js
not
lds
inc
ss
dec
es
inc
cli
sahf
adc
xchg
cmp
sbb
std
push
cld
push
scas
jl
xchg
fcomps
outsl
adc
push
cmp
cld
and
mov
adc
test
or
shlb
inc
and
push
jmp
jl
pushf
dec
push
bt
ror
clc
clc
cmp
neg
mov
rol
pushl
pusha
call
mov
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
lea
add
sbb
adc
add
add
or
add
test
add
add
add
add
addb
add
add
add
repnz
add
add
sbb
sub
add
add
add
insb
sbb
mov
pop
add
add
add
pushl
ret
inc
jmp
lret
xchg
sub
cmpsl
add
test
test
push
pop
out
aaa
add
pop
lahf
adc
mov
pop
iret
fs
pop
addr16
fidivrs
xchg
in
mov
push
or
stos
dec
les
mov
jp
lret
inc
jne
jecxz
test
mov
xor
ds
sbb
add
cmpsl
js
jl
or
pop
jmp
and
mov
out
shr
outsb
imul
je
outsl
outsb
and
jb
jb
and
cld
sub
call
pushf
adc
movw
push
pushf
movb
pushl
ret
ja
adc
and
sub
popf
or
repnz
popf
out
sbb
ret
mov
scas
shrl
dec
cmp
lea
mov
lods
sbb
fisubrs
mov
nop
hlt
pop
cli
adc
cmpl
jle
mov
adc
in
insb
adc
inc
hlt
xchg
or
xchg
sbb
fiadds
outsl
pop
les
clc
dec
rcrb
aam
js
fcmove
or
rcrb
or
fwait
call
adc
rcll
call
stos
xor
mov
xchg
sub
mov
into
sbb
mov
push
int
test
insl
fildl
lock
pop
lea
mov
imul
adc
outsb
incb
int
mov
add
pop
cmp
movsb
int3
sbb
ret
sbb
adc
sbb
icebp
int3
cmc
movhps
in
insl
hlt
xor
cmp
cmpsl
scas
cld
popf
pop
push
dec
fwait
int
inc
cmpsl
push
fucomp
mov
cmp
fucomi
mov
insl
loope
pop
fsubp
dec
lahf
leave
arpl
scas
js
int
scas
pop
testb
idivl
sbb
pop
add
mov
mov
pop
cmp
jb
mov
inc
xor
mov
pusha
lea
jne
setg
pushfw
rol
ror
mov
cmc
push
add
lea
js
pushf
not
pusha
pusha
pushf
pushf
dec
jmp
es
adc
aam
push
stos
andl
xchg
ds
mov
cmpsb
dec
xchg
xor
loopne
stc
les
fs
inc
repz
sbb
popf
push
test
je
ret
in
jle
push
sahf
in
jmp
jp
shll
sbb
mov
mull
and
outsl
and
mov
out
aam
lods
jae
das
dec
add
in
cmpsl
push
push
adc
call
push
inc
js
movl
cmp
jmp
inc
shll
xchg
mov
pop
add
out
out
push
push
popa
adc
xor
xchg
test
inc
je
push
add
push
cltd
xchg
fwait
outsb
flds
sub
sub
add
adc
xchg
inc
xchg
cmp
scas
sbb
ljmp
rcll
rol
cmc
mov
jo
lods
scas
mov
gs
sub
in
aaa
dec
or
jb
inc
adc
movl
int3
push
adc
mov
xor
jge
jb
test
adc
dec
pop
insb
sub
test
push
xchg
shl
icebp
or
ja
es
movsb
and
fcom
dec
or
add
mov
adc
mov
daa
inc
cmp
outsb
xchg
sbb
imul
test
push
cwtl
lea
je
cmc
jmp
lods
adc
out
push
in
jl
loopne
dec
mov
pop
mov
xchg
lds
add
mov
mov
jl
add
lret
push
add
mov
mov
push
jecxz
dec
daa
iret
addb
andb
adcb
jae
cmp
pop
lds
inc
or
mov
push
enter
movsb
js
sbb
jbe
jns
xlat
test
xchg
sbbl
insb
imul
insb
and
add
xchg
cmp
xchg
sub
fs
jae
cmp
bt
call
jno
les
sub
shrl
pop
pop
cmp
je
jnp
jno
mov
jmp
mov
popf
or
leave
aas
add
test
xchg
inc
fsubrp
push
pusha
icebp
bound
mulb
aam
out
data16
inc
cmp
arpl
dec
loop
leave
repz
push
sahf
aaa
pop
lcall
dec
movsb
pop
daa
mov
inc
adc
mov
leave
les
push
pop
add
jns
or
out
daa
xor
adc
pusha
fnstsw
push
xchg
xor
iret
decl
inc
and
std
mov
pushl
ret
lock
and
rcr
lcall
xchg
cmp
das
dec
into
xor
out
push
das
lods
add
gs
mov
mov
mov
sub
add
dec
pop
or
js
pushf
ss
dec
mov
dec
add
rol
xchg
sti
sti
mov
and
ret
add
sbb
nop
push
push
das
xchg
loopne
clc
cmp
or
cmp
add
pop
mov
add
mov
add
cmp
cmc
repnz
jmp
cmpsl
jae
das
or
mov
out
adc
sbb
xchg
cwtl
hlt
push
movsb
cmpsl
pop
ret
and
mov
out
enter
test
jp
xchg
xchg
movsb
adc
jnp
clc
cmpsb
adc
jg
jnp
mov
mov
orb
loop
fimull
not
xor
xor
js
pop
mov
push
xor
xor
adc
adc
dec
pop
es
pop
stos
mov
jb
sub
out
push
das
push
subl
push
dec
pop
cmp
and
subl
loopne
sbb
mov
jns
stos
leave
dec
ljmp
in
cmp
mov
divb
fimuls
mov
xchg
jae
jmp
jl
mov
sahf
aas
cltd
xchg
out
stos
stos
scas
hlt
mov
cmp
out
mov
xchg
lods
mov
and
lea
ja
inc
bt
pusha
sub
not
add
add
shl
push
inc
mov
rcl
inc
mov
clc
bt
repnz
push
lea
jne
seta
cwtl
bswap
movb
push
mov
jmp
lea
call
call
cmp
sbb
xchg
gs
sbb
js
cmpsl
fildll
mov
fucomp
and
mov
out
push
pop
popa
imul
les
das
test
nop
cmc
add
jo
cld
insl
fwait
mov
sbb
mov
mov
push
jne
jo
adc
pushf
dec
cmp
add
arpl
mov
ss
into
xor
lcall
in
mov
mov
mov
mov
and
das
pop
pop
ficoms
mov
sarl
mov
xchg
pop
psubq
push
ret
cld
out
outsb
daa
iret
dec
repnz
pop
lea
pop
xchg
out
push
xchg
std
test
frstor
test
dec
push
dec
dec
cltd
arpl
daa
dec
addr16
sub
sub
in
inc
push
push
push
mov
cmp
xchg
inc
pop
invd
pop
dec
es
jb
jb
push
test
pop
enter
testb
rcrl
xchg
or
add
or
imul
movzbl
pop
push
push
btc
add
xchg
shrd
push
btr
call
call
inc
mov
jmp
cmp
push
pushf
jmp
pusha
pushf
lea
jne
cwtl
sub
add
aam
shrd
daa
mov
mov
or
add
pusha
rol
mov
cmp
test
pusha
lea
je
pusha
jmp
bt
test
pushf
jmp
call
cmp
repnz
jmp
movl
movb
push
lea
jmp
lea
jne
sar
stc
rcr
xadd
mov
shl
sub
sub
mov
call
sbb
sbb
jbe
sbb
push
push
add
out
push
jle
inc
outsb
dec
ja
scas
sbb
scas
int
std
jge
and
add
xchg
popa
sub
dec
popa
scas
popf
icebp
jp
in
push
in
and
fstpt
mov
out
jecxz
push
insb
mov
lods
scas
jle
cs
cmp
push
rcl
in
xor
div
sub
xor
push
dec
aad
pop
in
sub
mov
bound
addr16
fdivr
lds
popa
lret
mov
flds
pushf
jmp
stos
mov
cwtl
mov
clc
icebp
jns
add
mov
jo
push
add
dec
sbb
cmp
jg
mov
popf
enter
shrb
mov
mov
lods
aaa
sbb
andl
icebp
cltd
and
mov
leave
decb
paddw
notl
insb
adc
push
pop
add
mov
xchg
ja
push
fistpl
cmp
mov
imul
jg
mov
clc
lahf
mov
xchg
pop
scas
cli
push
lods
jo
sbb
icebp
fcompl
je
xchg
dec
gs
cli
jle
cmp
addr16
jecxz
mov
shrb
mov
cld
jb
shlb
xor
pop
jne
or
push
out
iret
jg
xorb
ds
daa
adc
mov
and
inc
cli
mov
out
jbe
inc
pop
fwait
sarb
sbb
inc
push
and
dec
iret
pop
mov
outsl
shrb
lds
sub
lods
push
adcb
jo
cli
mov
rorb
pop
lds
test
imul
push
stos
leave
notl
push
data16
push
js
and
xchg
imulb
ja
mov
mov
push
adc
mov
sbb
cwtl
push
cmc
loope
test
adc
nop
movsb
jecxz
insb
push
adc
cli
imul
cltd
jmp
and
lea
dec
rcrl
mov
mov
or
jo
mov
xlat
mov
push
das
idivl
mov
bound
add
jmp
rorl
divl
mov
nop
repz
inc
pushf
shll
and
dec
nop
aam
add
xchg
and
test
jl
xor
jbe
fisttps
jo
ljmp
lea
std
bound
outsl
sbb
add
popf
pop
in
je
push
stos
adc
and
cmp
pusha
sbb
mov
std
pop
notl
orl
dec
repnz
pop
xchg
mov
into
neg
adc
pop
cwtl
cld
iret
adc
or
popa
lahf
cmp
pop
mov
xchg
pop
push
fsub
inc
sbb
add
xchg
pop
mov
lcall
jo
js
inc
mov
insl
nop
lea
negb
pop
add
dec
js
in
or
jnp
xchg
aad
push
inc
fimull
pop
add
arpl
mov
leave
mov
mov
sub
lock
jmp
mov
pushf
mov
pushf
mov
movb
mov
mov
pusha
lea
jmp
dec
aas
mov
cmp
call
mov
pushf
mov
pusha
movb
lea
jmp
pushl
popl
pushf
movb
push
lea
jmp
mov
mov
mov
jmp
movb
lea
je
clc
xor
test
cmp
cmp
stc
xchg
bt
push
mov
cmp
bt
push
sub
pushf
lea
jne
cmc
jmp
mov
pushf
call
not
movzbl
lahf
mov
push
mov
mov
movw
movb
pushf
mov
movl
mov
lea
jmp
mov
pushl
pushl
pushf
popl
movw
mov
mov
mov
mov
jmp
bts
mov
bt
cmc
cmp
stc
xor
clc
add
push
mov
mov
pusha
pushl
ret
pushl
popl
pushf
pushf
movl
mov
lea
jmp
sub
pushf
pushl
push
pushf
mov
pushf
pushf
lea
jmp
call
mov
pushf
push
mov
pushf
mov
call
mov
jmp
lea
jbe
pusha
mov
push
pusha
mov
lea
jmp
pusha
pushf
pusha
pushf
popl
pushl
pushf
movb
mov
call
adc
mov
rol
pusha
mov
mov
neg
push
mov
test
test
sub
call
and
pushf
push
pushf
mov
pusha
mov
pushf
pushf
popl
jmp
test
mov
push
jmp
movw
mov
push
pushf
popl
jmp
cmp
add
movb
mov
movb
lea
jmp
jmp
pushf
mov
mov
mov
mov
lea
jmp
setae
mov
lea
pop
rcr
not
btr
das
pop
bsr
pop
xadd
sar
pop
seta
popf
cltd
lea
jmp
call
mov
lea
jge
pusha
mov
mov
movw
pushf
lea
jmp
pusha
and
mov
pushf
mov
movw
pusha
sub
test
push
stc
shr
mov
pushl
push
jmp
shrd
test
movsbw
add
mov
cmp
cmc
call
mov
jmp
push
pushf
movw
mov
mov
pushf
push
mov
jmp
shl
mov
pusha
mov
shrd
mov
cmp
jmp
movzbw
mov
mov
setnp
push
mov
bswap
mov
movsbw
not
mov
pushf
mov
movl
pushf
push
movw
pushl
ret
mov
movb
movb
movl
lea
jmp
mov
mov
mov
push
mov
call
call
pusha
push
movb
mov
mov
push
mov
pushl
mov
mov
mov
lea
jmp
push
push
push
mov
pushl
mov
pushf
pushf
lea
jmp
clc
stc
movzbl
not
bswap
bts
rol
not
dec
and
not
movzbl
btc
and
or
dec
mov
jmp
jmp
pusha
mov
jmp
inc
pushl
neg
push
pusha
pushf
mov
inc
mov
bt
sub
jno
sub
cmp
xor
pusha
pushf
push
cwtl
cmc
push
sub
push
call
pushl
mov
call
mov
cmp
pushf
call
push
pushl
popl
push
pusha
push
lea
jmp
pushf
popl
pushf
pushl
popl
mov
mov
movb
mov
lea
jmp
mov
push
mov
call
mov
mov
push
pushf
mov
call
call
pusha
pushf
pushf
xor
cmp
bt
call
mov
pushf
pushf
pushf
lea
jmp
bswap
cmp
mov
cmc
stc
clc
test
add
call
call
mov
pushf
pushl
call
sete
movzbl
stc
cmc
xor
jmp
xor
bt
rol
jmp
pushf
mov
pusha
push
pushf
mov
call
pushf
mov
call
bsf
cmc
sar
xchg
mov
and
or
xor
movzbw
rol
lea
neg
shrd
xor
bt
call
mov
mov
mov
mov
movb
pushl
popl
pushl
pushf
mov
mov
lea
jmp
mov
call
xor
bt
rol
stc
not
jmp
mov
call
push
jmp
push
mov
pusha
pushf
mov
pusha
jmp
mov
jmp
jmp
pushf
popl
call
add
setae
sar
mov
cmp
test
pusha
add
call
cmc
clc
or
jmp
pushf
popl
movl
pushf
pushl
popl
pushf
pushf
mov
lea
jmp
pusha
pushl
xchg
jmp
pusha
jmp
pushf
popl
push
call
jmp
shrd
bts
mov
setns
inc
ror
mov
pusha
cmp
movw
push
sub
stc
pushf
pushf
shl
pushf
jmp
pop
pushf
bswap
mov
call
movb
add
pusha
movb
push
movl
pushf
popl
mov
pushl
popl
mov
mov
mov
pushf
lea
jmp
call
call
xor
add
seto
jmp
jmp
add
bt
pushl
neg
clc
jmp
movb
call
sar
shrd
push
add
rcl
btc
shr
sub
lea
test
mov
cmp
stc
pushf
shl
stc
jmp
mov
pushf
pushf
popl
call
dec
int
sub
xlat
mov
jle
mov
mov
mov
pushf
xor
sub
mov
sub
mov
mov
mov
popa
mov
icebp
out
mov
mov
mov
sbb
out
mov
je
mov
jle
mov
ror
mov
mov
rorl
sub
enter
fisttpll
sub
mov
sahf
int3
mov
or
mov
sahf
int3
mov
outsl
aam
sub
mov
sbb
mov
in
fmull
sub
out
mov
sub
mov
mov
aam
sub
mov
dec
out
mov
mov
mov
test
mov
pushf
xor
sub
aad
sub
fisttpl
sub
rorl
sub
in
mov
pop
rorl
sub
mov
scas
rorl
sub
rorl
sub
into
mov
sti
xlat
mov
or
mov
lods
aad
sub
xor
sub
fmuls
sub
int3
mov
sahf
int3
mov
loop
mov
out
rorl
sub
aam
sub
into
mov
fmull
fmull
sub
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
or
sub
iret
mov
or
sub
iret
mov
or
sub
fisttps
sub
xlat
mov
mov
mov
mov
xlat
mov
sti
xlat
mov
xchg
fisttpl
sub
rorl
sub
out
mov
mov
mov
scas
rorl
sub
rorl
sub
mov
outsl
aam
sub
mov
pushf
mov
dec
xor
sub
ret
mov
ror
mov
dec
fisttps
sub
int3
mov
stos
rorb
sub
mov
test
mov
rcr
mov
jnp
mov
sub
mov
mov
mov
jle
mov
mov
mov
sub
mov
sub
mov
scas
rorl
sub
mov
outsl
aam
sub
rorb
sub
rorl
sub
mov
loop
mov
ss
mov
test
mov
mov
mov
jnp
mov
je
mov
push
leave
mov
dec
xor
sub
mov
mov
mov
ror
sub
mov
dec
xor
sub
ret
mov
pop
fmuls
sub
mov
mov
rorb
sub
mov
dec
fmull
sub
xor
sub
fisttpl
sub
rorb
ss
mov
sub
mov
rcr
mov
dec
int
sub
mov
je
mov
sbb
leave
mov
mov
mov
mov
mov
sbb
mov
push
leave
mov
icebp
out
mov
mov
mov
mov
fmull
sub
out
mov
ss
mov
fmulp
mov
mov
rorl
sub
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
or
sub
iret
mov
or
sub
iret
mov
or
sub
aam
sub
mov
dec
out
mov
mov
mov
out
rorl
sub
mov
je
mov
fmull
out
mov
in
fmull
sub
jmp
mov
aaa
into
mov
sbb
mov
fmulp
mov
cld
mov
aaa
into
mov
sahf
int3
mov
dec
int
sub
xlat
mov
xor
mov
sbb
mov
dec
out
mov
pushf
mov
push
leave
mov
ffree
mov
mov
mov
pushf
mov
pushf
movb
call
call
pop
clc
ror
movsbw
or
sub
add
test
btr
stc
neg
ror
pop
add
pushl
cmc
movzbw
call
jmp
shl
movzbw
aad
mov
mov
pusha
sar
mov
bt
add
call
mov
call
mov
pushf
pushf
mov
jmp
jmp
pusha
push
push
mov
pushf
lea
jmp
lea
lea
jb
bt
cmp
push
lea
ja
ror
clc
cwtl
and
mov
stc
sub
das
bswap
lea
jmp
mov
jmp
mov
push
call
jmp
mov
pushf
mov
push
push
mov
pushf
pushf
call
call
push
push
mov
pushf
push
push
mov
movl
pushl
pushf
movb
lea
jmp
sar
notl
test
mov
jmp
movsbw
lea
pushf
mov
pop
call
ror
neg
movsbw
mov
cmc
mov
cmp
cmp
pusha
not
cmp
cmc
cmp
not
pusha
and
pushl
mov
mov
mov
push
lea
ja
push
pusha
pushf
popl
jmp
jmp
pushf
popl
pushf
jmp
mov
mov
mov
jmp
movl
call
push
mov
mov
pushl
popl
pushf
movb
lea
jmp
pusha
movsbw
not
pop
pop
rol
movsbw
push
pop
not
dec
bsr
bsf
rcr
and
cmp
mov
call
call
lea
jae
pushf
mov
jmp
mov
movb
mov
jmp
mov
push
mov
jmp
call
mov
movl
and
clc
cmp
pusha
lea
jne
neg
cmp
xorb
movzbl
pop
pushf
push
push
lea
jmp
bswap
mov
xchg
movsbw
pushl
popl
lea
setno
movsbw
push
lea
sete
pushf
mov
pop
dec
lea
shld
not
shr
neg
mov
movsbw
movzbw
ror
shl
xchg
movzbw
cmc
mov
inc
shld
sub
btc
sbb
movzbl
rcr
mov
sub
and
mov
bswap
mov
xchg
rol
dec
add
shl
bt
mov
xor
pusha
btr
xor
jmp
cmc
or
cmc
and
mov
clc
push
clc
add
jmp
pusha
pushf
mov
pusha
lea
jmp
pushf
popl
mov
pushf
jmp
pushf
mov
mov
pushf
pushl
mov
call
pushf
pushl
popl
pushf
push
lea
jmp
jmp
pushl
mov
pushf
push
mov
pushf
mov
mov
jmp
jmp
xor
mov
stc
pushf
bswap
rol
mov
stc
pusha
pushl
add
call
pushf
pushf
popl
pushf
pushl
popl
pushl
pushf
movl
lea
jmp
jmp
sete
mov
stc
cmc
add
jmp
call
mov
pusha
mov
movl
push
pushf
call
movw
movb
pushf
popl
jmp
pushl
popl
pushf
movb
pushl
movb
lea
jmp
call
rcr
test
stc
pushf
mov
ror
mov
not
bsr
mov
test
sub
call
jmp
mov
jmp
pusha
call
mov
push
mov
mov
movl
call
push
pushf
popl
jmp
mov
push
pushl
pushf
lea
jmp
pushf
jmp
call
jmp
push
call
mov
jmp
jmp
pusha
pusha
pushl
pushf
popl
pushf
jmp
pop
pusha
rol
sets
not
rcr
shrd
cmc
rcr
xor
cmp
movzbl
cmp
jmp
mov
call
stc
clc
test
sub
cmc
pusha
shr
pushf
pushf
jmp
inc
push
pusha
pushf
pushl
mov
push
mov
lea
jmp
bt
cmc
cmp
sub
call
push
mov
call
jmp
cmp
movzbl
jmp
pusha
call
pusha
shl
call
mov
lea
jns
pushf
pusha
jmp
sub
movzbw
stc
push
lea
neg
bt
jmp
mov
movl
lea
jmp
mov
push
mov
lea
jmp
call
mov
pusha
mov
pusha
lea
jmp
aas
neg
shl
btr
mov
ror
bt
dec
btr
mov
cmc
not
stc
not
jmp
cmc
call
pushf
call
jmp
pushl
popl
mov
lea
jmp
mov
pushl
popl
push
movb
pushf
movb
lea
jmp
pushl
popl
mov
push
lea
jmp
mov
push
pusha
mov
pusha
push
call
push
inc
bt
add
jl
cmc
push
xor
test
jmp
jmp
mov
pushf
mov
mov
lea
jmp
pusha
mov
pushl
mov
pusha
mov
call
shl
mov
add
shl
mov
push
sub
jmp
add
adc
mov
pushf
mov
xor
jmp
mov
pushf
mov
lea
jmp
pusha
pushl
lea
cpuid
clc
clc
sub
call
movsbl
call
shl
test
sbb
mov
or
mov
cmc
test
sub
test
shl
push
jmp
test
sub
pushf
pusha
pushl
mov
push
pushf
push
mov
lea
jmp
movzbw
neg
and
clc
mov
push
add
pusha
lea
jmp
mov
jmp
mov
pushl
pushf
pushl
ret
bswap
cwtl
push
mov
pop
not
not
mov
push
jmp
shr
pusha
mov
call
mov
pushl
lea
jmp
call
call
mov
call
jmp
cmp
push
cmc
cmc
pushl
popl
cmp
cmc
add
pusha
pushl
popf
mov
pusha
lea
jmp
mov
push
mov
pushf
pushf
pushl
popl
pushf
push
push
pushf
lea
jmp
decl
pushf
movb
lea
jne
push
movb
mov
movb
movb
mov
pushf
lea
jmp
cmc
clc
jmp
mov
pushf
pusha
pushf
push
mov
call
pushf
pushf
pushf
mov
pusha
mov
push
push
jmp
call
xor
jmp
xor
not
mov
cmp
stc
clc
xor
call
mov
pushf
popl
call
pusha
mov
jmp
mov
pushf
movb
pusha
mov
jmp
cld
push
cld
push
rep
movzbw
pop
mov
btr
ror
adc
mov
pushf
pushf
bt
mov
pushl
popf
mov
pushf
push
push
lea
jmp
test
xor
cmc
mov
movb
mov
mov
call
movb
pushf
popl
push
pushl
popl
pushf
lea
jmp
pushl
popl
push
mov
pushf
lea
jmp
pushf
movw
mov
lea
jae
pushf
pushf
popl
pusha
mov
push
pushf
pusha
push
mov
push
pushl
popl
push
mov
lea
jmp
movw
mov
call
mov
setns
mov
pop
mov
setl
movzbw
mov
pushf
xchg
pop
mov
seto
pushf
popl
movzbw
xchg
movzbw
mov
call
pushl
push
call
pushl
popl
push
movb
mov
lea
jmp
pushf
push
mov
jmp
mov
call
pushl
pushl
pushl
popl
push
push
pushf
pushf
lea
jmp
pushf
mov
jmp
pushf
call
movzbl
movzbl
mov
push
lea
pushf
mov
mov
pusha
pushf
lea
jmp
movb
jmp
mov
jmp
shrd
mov
rol
neg
std
add
mov
jmp
jmp
movw
mov
jmp
push
pushl
call
movw
pushl
popl
pushf
push
mov
lea
jmp
cmp
test
pushf
cmp
sub
push
pusha
mov
call
test
pushf
sub
sub
jo
pushf
pusha
cmc
xor
bt
stc
clc
pusha
cwtl
pushf
sub
call
cmp
mov
push
shr
pusha
mov
push
jmp
call
pushf
popl
call
call
btr
xchg
cmc
mov
jno
push
rcr
sar
mov
mov
call
jmp
jmp
xor
bt
add
jl
mov
cmc
pusha
bt
sub
mov
mov
mov
pushf
push
pushl
lea
jmp
mov
jmp
mov
call
setg
inc
mov
dec
movzbl
pusha
pushl
inc
cmc
cmp
movb
xor
call
pushf
pushf
popl
pushl
movb
push
mov
mov
mov
jmp
pusha
bsf
movsbw
mov
lea
mov
pushl
stc
pushf
bt
add
jmp
call
sub
mov
pusha
jmp
mov
call
mov
pusha
push
push
mov
pushf
pushf
jmp
push
movb
movw
mov
call
mov
mov
pushf
push
mov
pushf
jmp
mov
push
pushf
jmp
pusha
mov
pushf
call
cmc
add
call
movzbw
mov
jmp
sub
call
bt
xor
movb
xor
cmp
sub
pushf
movb
call
pushf
popl
push
movsbl
std
pusha
xchg
push
not
mov
call
cwtl
cmp
jmp
call
pushl
jmp
pushf
popl
mov
lea
jne
pushf
pushl
popl
pushf
pusha
pushf
lea
jmp
mov
pushf
movb
jmp
movw
push
inc
cmp
bt
cmc
pusha
neg
movl
movw
pushl
inc
movb
test
xor
test
sub
movb
cmp
bt
bt
sub
mov
pushf
mov
push
movb
lea
jmp
pushf
pushf
mov
bsf
mov
cmc
clc
sub
pusha
call
movw
pushl
popl
pushf
pushf
lea
jmp
call
pushf
pushf
popl
push
pushl
pushl
mov
mov
jmp
push
xor
bt
cmc
cbtw
test
pushf
stc
clc
cwtl
jmp
movb
pushl
popl
pushf
movb
pushl
lea
jmp
jmp
test
mov
cmc
bt
mov
call
cmpl
pusha
call
mov
call
setle
jge
mov
pushf
lea
lea
jbe
mov
pusha
pushf
pushf
lea
jmp
mov
pushl
mov
mov
call
and
aaa
rdtsc
cmp
pusha
cmc
bt
sub
jmp
jmp
jmp
mov
pushf
lea
jmp
push
mov
cmc
jmp
lea
jne
bts
call
bt
pusha
cmp
mov
mov
pusha
lea
ja
sub
mov
lea
pushf
bswap
lea
aam
daa
setns
aam
sub
cmc
add
btr
lea
btc
and
and
rol
pushf
shl
sub
push
mov
push
jmp
call
add
movb
push
pusha
jmp
ror
shl
bsf
mov
jp
mov
add
mov
pushf
seta
mov
jmp
rcl
jmp
stc
mov
clc
jmp
jmp
aaa
aam
sub
mov
movsbl
push
shld
ror
mov
sar
pushf
sub
sbb
mov
cmc
clc
clc
push
add
movb
pushf
push
cmc
shld
pushl
call
xor
bt
cmc
shr
movzbl
stc
cmp
xor
push
bt
jmp
add
add
pushl
pushl
popl
pusha
pushf
pushf
lea
jmp
mov
mov
mov
pushf
pushf
call
mov
mov
pusha
pushf
push
lea
jmp
jmp
pushf
popl
jmp
mov
pushf
jmp
cmc
pushf
shr
test
bt
test
mov
or
cmp
xor
pusha
pushf
inc
push
call
call
movl
mov
pushf
mov
call
pushf
call
jmp
pushf
mov
call
mov
push
pushf
popl
pusha
pushf
pushl
popl
mov
pushl
lea
jmp
jmp
jmp
lea
jne
bswap
sar
rcr
ror
mov
clc
and
clc
cmp
push
lea
jne
btr
rcl
rcl
rcr
xorb
bswap
lea
push
mov
pushl
lea
jmp
pushl
mov
pushl
popl
mov
lea
jmp
push
mov
mov
jmp
call
push
pushf
push
mov
jmp
adc
bsf
mov
bt
xor
setno
dec
rcl
pushf
ror
ror
bt
add
test
bsr
xor
movzbw
dec
inc
add
shl
movsbw
and
mov
cmc
cmp
add
pushf
pushf
pushf
jmp
pusha
movb
pushl
popl
pushl
pushf
push
pushf
lea
jmp
call
mov
jmp
call
add
lahf
call
call
call
add
call
push
mov
pushf
mov
movb
pushf
jmp
push
divl
pushf
movb
mov
movb
mov
movb
jmp
mov
call
jmp
pushf
popl
pusha
mov
jmp
pushf
popl
pushl
pushl
popl
push
lea
jmp
push
pushl
mov
jmp
stc
lea
jno
stc
sub
call
pushf
call
pushl
call
pusha
pushf
mov
call
mov
mov
movb
lea
jmp
jmp
mov
mov
mov
call
call
cbtw
test
sets
xor
mov
bt
test
bt
sub
stc
add
jmp
btr
and
rol
sub
movzbw
jmp
call
mov
pusha
lea
jne
push
pusha
pusha
jmp
push
mov
call
pushf
popl
mov
jmp
pushf
mov
mov
pushl
movb
lea
jmp
push
push
pushl
popl
pushf
push
lea
jmp
mov
movl
pushf
jmp
movb
jmp
or
setno
or
pushf
mov
cmc
pusha
sub
push
mov
add
pushl
pushf
popl
lea
jl
push
pushl
popl
push
pushl
lea
jmp
shrd
mov
pusha
test
cmp
xor
push
sub
mov
cmp
push
bt
bswap
cmc
lea
call
pusha
call
pushl
popl
mov
mov
mov
lea
jmp
push
mov
pusha
movl
pushf
call
mov
call
pushl
popl
mov
pushf
lea
jmp
bt
sub
jmp
movzbw
mov
call
push
pushf
mov
pusha
pushl
mov
lea
jmp
push
mov
jmp
ror
mov
shrd
cmc
mov
jmp
mov
jmp
pushf
pushf
call
jmp
pusha
movsbw
mov
movl
mov
call
bt
push
sub
pushf
mov
mov
push
pushf
mov
lea
jmp
mov
pusha
mov
lea
jmp
jmp
pushl
popl
mov
mov
mov
lea
jmp
pusha
pushl
movb
mov
jmp
mov
movl
pushf
pushl
push
lea
jmp
movb
sub
pushl
mov
movb
push
lea
jmp
mov
pushf
pushf
pushf
mov
call
std
cmp
bt
pushl
popf
movb
movb
mov
lea
jmp
mov
mov
pushf
pushl
popl
movb
pushf
pushf
movb
lea
jmp
pushl
popl
pushf
lea
jmp
pusha
add
movw
call
stc
push
cmc
not
stc
xor
mov
inc
pusha
sub
mov
call
jmp
not
call
bswap
pusha
not
mov
pop
movsbw
movzbw
movzbw
mov
jmp
jmp
push
cmp
pusha
sub
pusha
push
bt
cmc
and
movw
call
stc
xor
add
call
pushf
pusha
pushl
pushl
popl
movb
mov
pushf
pushf
lea
jmp
jmp
pushf
mov
lea
jl
pushf
pushf
popl
jmp
lea
jl
push
push
push
mov
jmp
pushf
rep
jmp
push
call
call
mov
pushf
pushf
pushf
mov
lea
jmp
jmp
mov
pushf
movb
pushf
mov
call
pushf
popl
mov
push
call
test
jmp
cld
jmp
call
mov
push
mov
push
lea
jmp
mov
pushf
pushf
push
pushl
popl
push
push
movb
lea
jmp
pushf
popl
pushf
call
inc
push
mov
pushf
movw
movw
push
lea
jmp
adc
mov
xor
stc
test
mov
pusha
cmp
test
sub
jmp
call
div
pushf
pushf
call
dec
push
ror
cmc
add
push
call
bt
dec
and
btc
mov
neg
add
mov
cmc
bt
add
pusha
mov
mov
pushl
pushf
pushl
lea
jmp
call
jmp
pushl
mov
mov
push
call
cmc
bt
push
add
movb
push
lea
jmp
pusha
mov
mov
movb
pusha
mov
lea
jmp
pusha
add
jmp
jmp
mov
call
clc
rol
mov
test
call
pushf
popl
jmp
jmp
pusha
jmp
mov
mov
pusha
pushf
push
lea
jmp
mov
push
movb
mov
pusha
push
pushl
mov
mov
movw
mov
push
call
mul
movb
call
mov
push
movb
pushf
lea
jmp
call
bt
mov
pushf
mov
push
push
add
pusha
test
clc
shrd
call
clc
add
jmp
mov
bswap
bswap
pushf
movsbw
cld
push
cld
mov
pusha
movsbl
mov
pushf
lea
push
mov
pusha
mov
jmp
call
push
mov
call
mov
jmp
mov
jmp
neg
inc
bsf
aam
mov
jmp
mov
jmp
rol
rcr
shld
rol
mov
push
xor
bsf
add
cmp
mov
stc
bsf
neg
and
sub
clc
mov
add
btr
pusha
shrd
bsf
xor
ror
sar
btc
mov
pusha
test
clc
sub
je
add
call
