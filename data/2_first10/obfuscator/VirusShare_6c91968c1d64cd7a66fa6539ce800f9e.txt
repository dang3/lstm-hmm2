push
call
ret
ret
popf
insb
pop
in
shrb
pushf
jp
cli
and
mov
subb
pop
push
mov
dec
lds
movsl
pop
cmpsb
inc
sub
mov
pop
sbb
int
mov
fmuls
outsb
dec
dec
xchg
aaa
mov
hlt
jp
in
cmpsb
aad
repz
lret
addl
inc
pop
xchg
or
mov
push
scas
jmp
sbb
xchg
mov
jg
sbb
inc
cmpsl
aam
and
pop
fyl2xp1
jle
insl
outsl
rclb
jno
pop
scas
xor
fstpt
mov
sbb
add
or
ja
xor
pop
inc
dec
addl
and
jmp
xchg
adc
xchg
int
inc
ret
std
lock
or
pop
pop
pop
fdivrs
ss
cmp
pxor
movsb
pop
addr16
and
cmp
mov
sbb
xchg
xorl
popa
inc
nop
jno
test
xchg
fiaddl
aam
iret
nop
pusha
mov
pusha
pop
iret
add
sbb
cmp
ja
xor
rolb
ja
popf
push
inc
sbb
outsb
stos
xchg
mov
inc
push
adc
push
sbb
adc
das
sub
dec
dec
push
xchg
shr
scas
pop
lret
test
lock
test
add
outsl
insl
repz
fcompl
xchg
xor
outsl
jns
pop
loope
lock
mov
sbb
repnz
lret
xchg
lret
cmp
push
lods
aad
push
clc
or
sahf
push
in
bound
fistpl
mov
cmc
imull
outsl
xchg
inc
pop
stos
shll
imul
cmp
rorl
cmp
or
mov
fstpt
pop
xchg
insb
jno
out
testb
loop
sbbl
jns
jmp
xchg
mov
mov
add
jle
xor
and
add
pop
pop
and
out
mov
add
xor
xchg
lods
sbb
scas
outsl
fs
lcall
cltd
cmp
stos
mov
xlat
inc
sub
popf
cmp
inc
add
inc
sbb
jmp
pop
cmpsl
int
dec
pop
stos
aaa
les
sbb
outsb
shl
or
nop
movb
mov
ficoml
sbb
cwtl
mov
out
and
hlt
loop
lret
push
orb
pop
ret
test
les
mov
les
and
ficoml
out
add
or
mov
pop
mov
jnp
and
icebp
sbb
arpl
adc
dec
and
xchg
push
mov
xchg
fsts
popf
lcall
loop
insl
jmp
sbb
and
push
mov
push
mov
cltd
pop
xchg
int3
inc
cmp
xor
xor
mov
in
loope
add
cmpsl
pop
xchg
pop
test
push
aad
cli
sbb
out
dec
adc
jb
inc
in
add
xchg
sub
mov
dec
push
push
xor
into
neg
pop
data16
xor
add
xchg
xchg
push
pop
lock
pop
mov
aaa
outsb
jge
pop
outsl
xchg
pop
fildl
inc
pop
int
outsb
iret
test
push
xor
jbe
push
loopne
sbb
inc
in
js
xchg
push
test
dec
and
mov
pop
inc
mov
mov
jge
mov
mov
fisubs
mov
fs
and
push
xor
mov
shll
adc
xor
stos
lret
mov
negb
jl
shl
mov
xlat
sub
jmp
pop
fimull
insb
sbb
sub
jl,pn
mov
mov
in
inc
sahf
sbb
jno
cmp
jno
push
adcb
sbb
xchg
ja
adc
pop
push
lods
repnz
lret
pop
add
and
mov
stc
jbe
sahf
lcall
dec
dec
inc
sub
or
xchg
push
mov
out
scas
sbb
clc
roll
add
leave
aaa
test
cmp
leave
jg
mov
fisttpl
in
sbb
mov
cmpsl
sub
pop
call
push
aad
loope
pop
insl
out
fists
mov
jle
mov
jle
cmp
rcrl
add
pop
leave
pop
mov
ffreep
push
imul
jp
cld
orb
jne
push
jne
ds
push
movd
push
xor
sub
sub
sub
mov
in
mov
lret
sbb
mov
add
xor
jne
xchg
inc
mov
fisubs
out
mov
sub
mov
aas
movb
push
xlat
adc
dec
clc
les
adc
cmpsb
dec
aas
inc
xor
mov
pop
adc
cld
cld
fldt
pop
pop
out
adc
cmp
shlb
shlb
arpl
out
repz
mov
sbb
jge
push
test
in
xor
jae
jl
in
mov
adc
stc
imul
icebp
imul
push
mov
insb
shll
mov
add
pop
jg
dec
push
jae
adc
jbe
and
test
add
out
movsl
inc
insb
xor
ja
shr
pop
sub
test
xchg
xor
sbb
or
fiadds
sub
xor
addb
fldenv
inc
je
cli
aaa
push
and
fdivs
jge
lea
push
mov
out
shrl
mov
mov
aaa
cmpsb
xchg
mov
xor
mov
or
or
push
sub
xor
inc
outsl
clc
jmp
into
pop
pop
or
and
lahf
push
jg
pop
lret
arpl
jmp
push
push
es
pop
inc
outsl
mov
mov
push
mov
adc
movsl
sti
xor
call
mov
fistpl
sbb
jo
and
xlat
and
cmp
mov
sub
jg
sbb
sub
scas
and
sbb
mov
filds
xor
fcmovnu
in
mov
dec
sarl
in
xchg
movsb
xor
fldcw
or
in
inc
test
aam
and
les
mov
add
jns
push
in
subl
jo
inc
insl
loop
mov
insb
test
xor
test
data16
adc
mov
test
decl
cmp
test
cmpl
push
fbstp
sbb
je
sbb
shufps
in
jbe
mov
cwtl
aam
hlt
mov
popa
je
icebp
mov
fwait
adc
pop
insb
inc
cs
mov
push
fs
push
fbstp
outsb
movl
clc
cmp
and
adc
inc
ss
sbb
adc
mov
push
sbb
sub
dec
mov
outsl
cmp
dec
mov
inc
mov
adc
aad
leave
imul
sbb
popf
xor
sub
sub
xor
xchg
sbb
loop
sbbl
mov
leave
pop
jecxz
pop
out
sub
aad
mov
out
cmpsl
adc
out
mov
ljmp
sbb
cwtl
mov
ja
mov
out
nop
ljmp
fisubrl
mov
cs
dec
fmuls
aas
lea
xchg
popa
push
outsb
andl
outsb
cwtl
cmpsl
fwait
push
or
inc
sbb
and
test
xor
aad
xchg
mov
inc
shlb
clc
sbbb
iret
lret
in
add
fs
push
test
xor
lods
mov
mov
xor
jns
adc
js
repnz
push
rorb
mov
add
rcll
shll
cmpb
push
cmp
push
daa
mov
pusha
into
mov
pop
loop
bound
mov
sbb
ljmp
push
mov
filds
xor
scas
pusha
pop
out
push
in
decl
mov
push
out
imul
dec
pop
mov
mov
pop
jge
dec
xchg
clc
jge
sbb
push
jo
or
push
lods
scas
push
sub
aaa
je
add
and
rol
dec
fwait
ret
int3
mov
je
iret
jnp
xchg
fcmovbe
lds
jo
xor
adc
xor
insb
fmul
or
ror
into
mov
sbb
and
cld
das
fisubrs
fistps
jp
mov
sbb
inc
lret
nop
jnp
push
into
push
mov
ror
push
ljmp
lahf
mov
test
loope
scas
pusha
ja
add
imul
test
bound
jg
dec
mov
outsb
fimull
push
push
idivl
dec
into
das
mov
test
popa
repz
sbb
and
jnp
notb
enter
test
nop
js
shl
pop
aaa
inc
sbb
sbb
aad
xchg
xchg
movsl
push
neg
mov
xor
mov
dec
cltd
sub
mov
xor
or
je
dec
shr
xchg
mov
ss
js
xor
fs
out
add
outsl
jg
cmp
and
mov
mov
insb
shrl
add
mov
xor
cmp
sbb
cld
insb
mov
push
ljmp
jmp
add
mov
mov
cld
aam
shlb
mov
call
xor
add
pop
jp
or
add
lods
sahf
outsl
xor
popf
fisubrl
xor
call
mov
jmp
xchg
add
cld
mov
push
mov
mov
dec
pop
clc
add
mov
sbb
jnp
adc
or
loop
jmp
fcmovnb
xor
inc
xchg
ljmp
ljmp
add
push
lock
pop
popa
mov
cmp
pop
nop
or
addr16
push
stos
js
mov
push
add
ds
adcb
sbb
sti
out
repz
pop
in
rcll
sub
jmp
fidivrl
xor
shlb
stc
adc
or
lods
int
mov
push
in
or
sbb
lea
rolb
stc
popf
in
lods
in
dec
mov
stos
add
es
mov
fnstcw
and
inc
add
jmp
xor
pop
sbbl
pushf
jg
add
movsl
jb
je
mov
mov
mov
cli
mov
mov
lcall
test
pop
outsl
add
pop
icebp
in
leave
adc
aam
jo
ss
mov
dec
outsb
out
sti
pusha
mov
cmp
scas
pop
jp
or
insb
cmp
xchg
add
xchg
xorb
btc
mov
sub
adc
cmp
int3
dec
sbb
popa
adc
inc
sbb
std
or
int3
loopne
xchg
jg
lret
fs
mov
fst
das
imul
dec
rcll
sub
lods
cmp
iret
xor
jp
stc
hlt
pop
rorb
xchg
leave
jnp
jb
lock
aad
mov
mov
jae
pop
mov
cmp
jg
inc
lahf
orl
mov
or
fs
add
fldcw
rolb
fimuls
push
test
negb
movsb
test
pop
jo
cmpsl
out
jge
cmp
cltd
pop
cmp
fsubr
or
lcall
cmp
xlat
insb
cmp
xor
inc
mov
jne
mov
and
loope
and
std
cwtl
stc
test
jmp
sbb
and
mov
pop
fcoms
pop
or
movsb
das
test
bound
fdivs
je
push
rolb
cmpb
xor
xlat
fwait
sahf
sbb
xchg
sbb
xor
pop
push
insl
neg
xlat
shrb
push
and
das
adc
xchg
hlt
cmc
and
pop
sbb
incl
mov
sub
repz
pop
mov
in
inc
bound
ja
or
jle
xchg
mov
jnp
push
cltd
clc
jp
mov
xor
aas
mov
jecxz
test
xchg
aas
mov
adc
mov
out
nop
pop
jno
call
rol
inc
jno
jae
xchg
dec
stc
and
inc
push
sbb
shrl
dec
cmp
test
sbb
loopne
mov
fistps
mov
pop
dec
in
push
fs
cld
movb
shll
stos
mov
mov
xchg
fisubl
in
xor
mov
mov
mov
addr16
movsl
mov
sbb
fldcw
mov
cltd
adc
jmp
rcr
jb
fdivs
ret
mov
movsl
mov
pop
in
pop
push
add
jg
cwtl
pop
mov
jb
shlb
clc
ret
sbb
shl
mov
sub
aas
lds
jl
icebp
daa
cmp
xchg
xchg
adcb
mov
pop
into
jae
pop
sub
outsl
push
pop
add
and
xor
rcl
test
adc
adc
lret
pop
add
sub
push
cmp
mov
call
cmp
mov
inc
andb
push
inc
inc
in
nop
mov
xchg
adc
test
xor
add
lods
shll
push
cmpsb
ss
or
push
adc
filds
movsb
mov
movsl
adc
ret
cltd
test
jbe
pop
jnp
out
enter
daa
cmp
dec
addb
jne
xchg
sbb
xor
fs
mov
lods
jle
adc
sahf
dec
pop
xchg
test
mov
out
cli
mov
jmp
mov
rcll
aaa
cmc
sub
dec
bound
lods
cltd
mov
cmp
jg
and
lahf
sbb
adc
mov
popf
xchg
dec
mov
or
dec
sbb
inc
outsl
inc
xor
lods
mov
subb
mov
addb
xlat
mov
fldt
and
add
test
mov
inc
vpsrld
in
dec
mov
mov
jecxz
xchg
and
scas
xchg
inc
lock
in
mov
xchg
es
mov
mov
cld
xor
bound
push
test
push
fdivr
pop
xor
sub
mov
test
push
jns
mov
jae
imull
sahf
add
insb
aaa
call
xchg
xor
fisttpll
movsb
mov
push
inc
dec
lret
nop
jmp
mov
js
fstpl
add
dec
push
sub
pop
popf
popf
xor
or
das
cmc
loop
into
jmp
cs
sub
xchg
cmp
jecxz
mov
jae
mov
jbe
jg
mov
xchg
jmp
fistpl
adc
xor
dec
xor
mov
shlb
scas
xchg
ja
adcb
xchg
xor
scas
scas
in
cmpsl
sbbb
dec
gs
push
dec
ljmp
xchg
out
cmpsb
pushf
aas
insb
in
mov
das
lds
inc
push
xor
nop
ret
and
add
movsl
pop
sbb
into
pop
cmp
jnp
mov
daa
adc
out
or
pushf
or
div
mov
add
sub
movsl
bound
mov
test
sahf
mov
xor
and
jmp
inc
adc
jnp
adc
popf
divb
test
mov
inc
adc
xlat
shlb
in
shll
xchg
iret
ret
xor
push
das
lods
addl
or
push
mov
sti
or
sbb
and
push
xor
outsl
gs
xchg
and
dec
dec
fistpl
or
ds
sub
inc
popaw
dec
mov
jmp
arpl
xor
pop
shl
insb
push
jp
lret
cld
arpl
clc
icebp
data16
or
dec
mov
out
fnstcw
xor
movsb
inc
fisubrs
cmp
shrl
mull
shlb
cltd
sub
popf
bound
mov
lock
lock
ljmp
inc
sbb
add
in
mov
cltd
pop
jne
icebp
rol
ficoms
dec
lea
das
cld
dec
dec
cwtl
adc
xchg
in
sbb
mov
jp
dec
push
scas
lret
mov
and
cmp
icebp
adc
cmp
xchg
jmp
divb
icebp
test
jecxz
ss
cld
stc
in
scas
mov
push
jae
cmpsb
cli
mov
cltd
push
pop
mov
or
cs
or
fucomp
out
xchg
sbb
push
jmp
shr
enter
adc
out
jecxz
push
mov
outsb
int3
test
cmpsb
jg
mov
in
sbb
push
scas
repz
jae
aad
in
push
push
add
iret
inc
push
pop
dec
cmp
fcmovnbe
mov
int
ret
sbb
mov
loope
mov
lret
cmp
rcl
dec
cmp
cmp
pop
mov
pop
insb
inc
push
mov
lds
cmc
adc
lret
jmp
pop
rcl
mov
jo
outsl
scas
sahf
pop
pop
orb
cs
add
jg
and
jne
roll
clc
call
sti
shll
pop
or
dec
cmp
dec
fwait
push
xchg
push
pop
push
lcall
nop
ljmp
mov
test
add
int
movsb
imul
fildl
cmp
sbb
push
cmp
hlt
out
adc
sbb
js
insb
movsl
adc
cmp
jae
int3
lds
inc
repz
sbb
pop
std
mov
ja
mov
ret
in
cld
insl
js
or
jne
rep
stos
mov
mov
and
popf
scas
fidivrl
jl
lahf
mov
jl
dec
cmp
adc
xchg
and
loop
repnz
pop
jmp
xor
and
mov
add
mov
mov
pusha
faddp
fcomip
push
sub
push
int
xlat
pop
dec
inc
xor
mov
gs
in
mov
push
xchg
pop
cwtl
and
movsl
into
dec
push
fld
dec
icebp
testb
sbb
in
insl
jnp
cmp
jae
or
rol
orl
scas
sub
dec
sub
mov
pop
fildll
call
lahf
add
mov
je
lret
stos
sub
jb
aad
xchg
jmp
sub
dec
test
mov
das
pop
sti
push
clc
push
faddl
add
dec
xchg
pop
aas
push
push
pop
lea
mov
les
jl
insb
push
push
jge
outsl
divb
pop
std
inc
lock
jo
ds
movsb
jge
icebp
enter
imul
push
mov
and
jne
cmp
push
push
test
push
adc
or
xchg
fildll
push
fistpll
adc
std
mov
push
repz
out
sub
jecxz
lahf
pop
xor
push
cli
test
gs
nop
loope
inc
jns
add
fldcw
sub
dec
shl
cmp
jo
sbb
punpcklwd
sbb
mov
fsubl
or
inc
push
loopne
sub
mov
dec
imul
sub
scas
arpl
stos
mov
mov
xor
movb
xchg
xor
mov
in
cltd
and
and
xchg
or
call
jns
ficomps
push
ja
daa
pop
rcl
jb
fnstcw
add
fcmovu
bound
jge
es
pop
add
and
pop
inc
push
outsl
in
fsubs
fldcw
sahf
push
out
es
jg
pop
es
gs
test
xchg
rcrl
dec
addb
cmp
or
dec
sub
icebp
cmp
ljmp
lret
sub
cmp
cld
ljmpw
stos
xchg
pop
jne
push
pop
mov
shll
cmp
cli
pop
adc
xor
test
loop
and
gs
shll
xor
mov
imul
aam
jle
pop
sbb
push
outsl
or
push
insb
jle
mov
inc
xor
push
pushf
and
out
sbb
pop
jmp
mov
or
add
out
xchg
test
bound
jo
divl
xchg
mov
inc
or
loope
and
loope
mov
jecxz
int3
mov
loopne
test
sub
mov
pop
pop
pop
in
repnz
sub
loopne
flds
cmp
mov
mov
mov
xor
sbbl
ret
inc
test
xor
push
cld
add
and
fs
mov
xchg
std
shrl
fisubrs
mov
add
addr16
shrl
mul
jnp
xchg
xchg
fwait
pop
jbe
mov
add
scas
mov
fnstenv
scas
in
cmpsl
add
jp
cmc
sbb
int
inc
rolb
push
cmp
fsubs
aam
fisubrs
ss
jg
mov
xor
imul
adc
das
imul
stos
pop
lds
scas
loopne
es
popw
xchg
pop
inc
mov
in
lret
pop
inc
daa
sbb
add
aad
ret
cmpl
test
sbb
lret
jmp
xchg
sbb
dec
lock
sub
enter
xor
or
cli
pop
inc
std
or
add
jmp
clc
cs
pop
jnp
adc
sarb
mov
inc
flds
xorb
leave
sub
cmp
xor
in
sbb
adc
jge
in
mov
repz
push
fwait
jp
cs
push
out
popf
leave
out
lret
movsb
test
mov
jecxz
jg
cmp
test
inc
xchg
push
call
mov
and
clc
inc
dec
fiaddl
lods
int3
es
jno
xchg
int
xchg
mov
insl
lcall
xchg
cld
rcl
push
jnp
sahf
or
les
mul
adc
loopne
push
dec
test
cmp
sar
jne
pop
or
dec
sahf
add
push
imul
cmp
pop
mov
mov
sbb
mov
xchg
addb
dec
add
jb
mov
cs
stos
call
or
cwtl
test
aam
daa
add
lods
jmp
movsl
add
push
inc
nop
nop
clc
stos
push
test
icebp
xchg
fsubrl
mov
or
fisttpll
adc
inc
fmuls
sub
add
cwtl
lock
bound
inc
mov
pop
stc
movsb
inc
ret
jns
mov
mov
ffree
xchg
mov
sbb
rolb
xchg
lock
sbb
int
mov
inc
shrb
cmpsb
jl
pop
adc
je
fldl
subb
push
jl
lds
mov
cmovp
cmpsb
mov
xchg
inc
sbb
leave
movsl
pop
push
or
xchg
shlb
ret
sbbl
repz
inc
loopne
lcall
sub
test
test
idiv
test
int
dec
jl
xchg
loope
outsb
sbb
in
xchg
test
divl
add
aam
pusha
mov
mov
insb
leave
movsl
inc
in
lahf
shll
jb
lds
pushf
adc
mov
add
jb
stc
add
xchg
or
xchg
mov
mov
jae
xchg
sarl
pop
cli
nop
pop
lcall
popf
sbb
lods
xchg
push
jb
jmp
pop
adc
jns
jns
dec
xlat
or
push
adc
outsb
insl
xor
mov
sbb
shlb
sub
pushf
cmp
adc
sub
lds
leave
psubusw
mov
scas
cwtl
ljmp
in
sbb
mov
xchg
pop
pop
ljmp
shll
dec
xchg
xchg
loop
lret
les
dec
sbb
lahf
pop
mov
or
xor
scas
cmp
test
mov
sub
inc
movsl
in
fists
insl
xor
cld
cmp
outsl
mov
mov
mov
xchg
xchg
pop
jg
adc
mov
out
pop
insb
cmp
outsl
sub
or
mov
js
xchg
aad
push
jnp
imul
imul
ja
cwtl
push
inc
fcompl
xor
jne
push
mov
ret
es
int3
inc
sarb
scas
or
inc
jbe
hlt
xchg
sbb
rclb
es
pop
loope
xchg
into
ror
jbe
push
minps
lods
imul
rorb
fnsave
std
aad
jp
add
mov
imul
add
xor
cwtl
add
stos
sub
push
cmp
push
aam
outsl
sbb
ror
lea
hlt
jne
mov
mov
dec
xchg
hlt
mov
pop
add
pop
andl
cmpsl
pop
dec
mov
inc
inc
mov
pop
iret
shr
or
aas
mov
js
fcoms
pop
orb
or
in
lahf
mov
shlb
shll
jnp
pop
push
dec
mov
outsb
shlb
mov
inc
inc
mov
in
xchg
cmpsl
push
mov
sbb
jno
mov
dec
out
aam
pop
sub
add
hlt
sbb
mov
scas
sub
mov
imul
xchg
lea
fdivrl
jbe
mov
frndint
add
cmpsb
inc
nop
or
mov
cmp
pop
nop
outsb
popf
rclb
sbb
xchg
add
and
mov
sbb
mov
sahf
cmp
cmc
push
pop
mov
sub
or
mov
mov
inc
out
je
cmpsl
mov
setno
sbb
fst
or
cmc
fsubr
pop
in
in
jl
xchg
add
jl
xchg
jns
jecxz
mov
loop
push
lret
adc
arpl
xchg
add
stos
xchg
int3
lcall
push
jbe
adc
arpl
push
mov
lahf
cmp
pop
es
mov
out
or
jnp
mov
mov
pop
jo
push
aas
test
movsb
sti
push
gs
sbb
mov
ss
ss
cmpb
orl
scas
aam
cmp
mov
xchg
addr16
hlt
sbbl
mul
ficoml
or
lahf
lret
sbb
ds
sub
xchg
push
in
cmp
xchg
lods
aas
mov
iret
movsl
mov
xchg
xchg
mov
or
sahf
lea
and
ja
fdivrp
loop
xor
ja
mov
push
mov
sbb
into
pop
rcl
adcb
into
fwait
mov
jno
pusha
push
pusha
jl
sbb
or
test
xchg
out
cwtl
jmp
movsb
and
mov
shll
je
ds
xchg
mov
jns
mov
scas
loope
or
and
ret
scas
insb
sbb
out
adcb
inc
mov
dec
jp
mov
orl
out
inc
jmp
pop
in
push
push
arpl
or
and
pop
pop
out
clc
lea
sub
mov
push
ret
in
movsb
in
add
mov
sbb
cmpsb
pop
mov
repnz
dec
sti
cmp
jae
add
pop
mov
mov
jns
jnp
stos
lahf
inc
fs
add
enter
repnz
adc
mov
into
cmp
adc
inc
pop
cli
xor
iret
popa
push
rol
jge
jo
test
jl
jae
pop
fs
pop
pop
hlt
lock
jo
je
cwtl
repnz
lcall
pop
dec
lods
xor
add
sar
xchg
dec
adc
movsb
add
rcrl
iret
out
sbb
fsubs
xor
decb
les
sbb
cmc
in
sti
xor
or
sahf
jae
lahf
mov
or
lods
js
xchg
mov
fcompl
ja
sub
mov
inc
xor
iret
sub
push
sbb
xchg
push
icebp
sub
mov
sbb
xchg
dec
stos
ss
pop
bound
xchg
inc
aaa
add
adc
jo
insb
push
iret
pusha
jge
stos
and
pop
fsts
jge
cmp
mov
scas
sub
inc
fwait
imul
or
mov
jge
pop
shlb
push
movsb
js
jp
cwtl
inc
shlb
aas
loop
cmp
mov
xchg
lds
mov
cmp
sub
cltd
jl
cwtl
sbb
push
pop
and
outsl
je
adc
sbbl
ds
lcall
inc
push
mov
lods
cld
sub
dec
sub
test
mov
scas
in
cmp
jl
xlat
or
insb
and
repnz
pop
out
sbb
dec
mov
sbb
and
and
pop
push
fcoml
xchg
hlt
xchg
jno
cmp
dec
pop
and
int
leave
cmc
sahf
test
mov
xor
xor
pop
fst
sub
sahf
jne
push
pop
or
xor
incl
jmp
or
dec
mov
jl
ss
push
mov
leave
leave
sub
sbb
cld
js
add
jg
arpl
xchg
pop
cmp
daa
les
mov
sbb
or
fistpll
pop
movb
incl
jb
cmp
and
inc
push
sub
scas
fsts
fcmove
add
and
and
push
int
xor
mov
xor
dec
arpl
cwtl
cli
add
adc
dec
icebp
xor
pop
aaa
rclb
xchg
fidivs
xor
scas
xchg
lds
les
lea
ror
fs
lods
jge
aad
or
cs
lock
mov
jno
pop
roll
nop
pop
movb
push
jmp
xlat
dec
push
std
mov
movsl
rolb
cmp
sbb
in
jg
cmp
and
sbb
mov
push
lcall
mov
ds
fisubl
push
xchg
into
in
push
ret
outsl
pop
adc
imul
and
fsubrl
xchg
inc
seto
xchg
addr16
ret
fwait
aas
shrl
lcall
outsl
imul
pop
out
mov
std
popf
mov
mov
mov
sahf
nop
jmp
aad
or
ja
repnz
outsl
mov
inc
jmp
xor
lcall
pop
mov
xor
mov
jl
mov
mov
sub
repz
inc
mov
negl
jo
mov
sbb
in
jl
das
repz
push
push
push
add
insb
mov
xor
mov
sub
outsl
mov
and
aad
aam
cmp
mov
pop
add
push
jnp
hlt
xor
popa
cmc
xor
pop
out
push
pop
addb
mov
sbb
lahf
fs
push
dec
mull
pop
ljmp
lock
jns
push
fwait
rcrl
xor
stos
dec
push
xchg
idivb
mov
jg
pop
out
cli
or
fcmovnbe
mov
call
and
jbe
or
dec
mul
jno
shl
icebp
dec
pop
mov
xacquire
loopne
xor
outsl
push
inc
fsubl
pop
into
adc
or
out
xor
mov
sbb
or
cmpl
fs
mov
bound
push
scas
dec
mulb
mov
cmpsl
cmp
test
dec
mov
sub
mov
sbb
nop
jl
push
pop
push
or
xor
cmp
jp
test
inc
adc
mov
sahf
lahf
pop
out
aaa
scas
subb
jg
testl
xor
fisubrl
jnp
push
les
lahf
rolb
pop
lods
lcall
sub
bound
cmp
movsl
add
out
scas
stos
ljmp
daa
sbb
ds
push
xor
stos
fistpl
iret
mov
mov
inc
cmp
stos
xchg
add
daa
into
sbb
mov
mov
fs
xor
mov
cs
xor
test
push
dec
ret
cmp
repz
fnstsw
rcpps
lock
adc
mov
jae
jmp
mov
or
jl
in
sbb
push
add
arpl
xchg
sub
les
mov
xchg
xor
xor
mov
stc
sub
frstor
arpl
lods
mov
xor
fs
test
fnsave
lret
int3
enter
out
bound
lret
jl
repz
add
xchg
fisttpl
dec
cwtl
add
ret
mov
dec
sti
xchg
imull
orb
or
push
mov
push
and
adc
xchg
and
dec
pop
out
inc
mov
add
pop
lods
xchg
call
fucom
jno
aad
cmp
cmp
mov
scas
jle
push
mov
popa
out
hlt
pop
repnz
xor
aas
shrb
mov
push
jno
or
adc
dec
push
js
or
mov
mov
inc
fwait
std
psrlw
shl
cmpsb
sti
pop
sti
sub
scas
repnz
mov
push
mov
scas
jecxz
xor
push
sahf
jl
iret
adc
fistl
test
rcll
scas
out
sbb
cli
dec
pop
stos
pushf
push
mov
mov
imul
loopne
jns
cmp
rclb
jne
jmp
push
leave
inc
mov
rclb
inc
sub
xchg
test
mov
or
jb
jbe
dec
rolb
dec
ja
jp
push
sahf
ds
xchg
mov
dec
xor
cld
xor
push
xchg
sti
rcrl
fistpll
das
and
xor
fbld
dec
mov
ret
mov
imul
add
addl
les
push
mov
notl
fildll
jb
pop
out
mov
or
jmp
or
test
pop
jb
movsl
mov
add
add
imul
sbb
pusha
add
rorl
fdivl
outsl
pop
icebp
ja
cmpsl
push
xchg
outsl
push
jl
sub
je
fucompp
push
rcrl
inc
movsb
pop
stc
sub
gs
pop
mov
cmpl
ss
mov
imul
adc
push
stc
dec
sti
sbb
fwait
and
dec
fnstsw
in
and
adc
sub
sub
push
cltd
movsl
jg
test
dec
inc
loop
push
pop
cmc
sub
mov
mov
xchg
das
adcb
out
fstpl
mov
out
jb
inc
dec
mov
les
and
or
adc
pop
inc
mov
cmpsb
out
ret
and
fucomp
mov
mov
lret
xchg
stos
out
insb
or
cld
adc
int
jecxz
test
mov
jae
fcompl
add
sbb
mov
jno
xor
nop
xor
fnstcw
ud1
inc
inc
xor
xchg
and
fldt
lods
mov
jbe
mull
jp
nop
jb
aam
lock
cmp
loop
sti
nop
les
aam
into
roll
loope
int3
insb
jo
or
subl
jae
and
iret
pop
cmpsl
adc
sbb
in
mull
mov
adc
add
jbe
je
inc
sub
lret
xor
lahf
shlb
sub
jle
mov
or
fsts
dec
lods
ds
xchg
je
pop
xlat
ds
pop
mov
sbbb
fstpt
jmp
in
repnz
add
popf
xchg
dec
stc
and
mov
sbb
lods
mov
fnsave
add
test
call
inc
inc
adc
or
cmp
xchg
lds
mov
mov
jmp
cmpsb
loopne
inc
call
cmp
outsb
inc
jo
pushf
push
in
cmp
mov
scas
pop
loopne
data16
cmp
out
mov
fists
outsb
lret
orl
shl
mov
add
push
lcall
icebp
mov
mov
mov
inc
or
pop
repnz
dec
jmp
orb
lahf
ret
ret
sar
xor
sub
nop
xchg
aaa
mov
or
or
lea
jb
push
ret
add
dec
mov
xorb
shr
insb
and
cmp
push
jnp
stos
and
ret
xchg
inc
cmp
mov
lods
push
shr
jge
pop
push
ret
stos
es
mov
pop
cmp
and
xorb
cmp
ja
hlt
loop
adc
dec
pop
xchg
mov
outsb
and
imull
stc
mov
jp
repnz
mov
lock
fmuls
pop
sti
pop
insb
daa
lods
mov
stos
jmp
vphadduwq
movsb
leave
add
mov
test
out
inc
cmpsl
and
sahf
inc
lahf
mov
fldpi
fmul
lods
std
orl
shr
mov
aam
js
inc
dec
ret
and
mov
lds
pop
out
push
and
mov
ja
mov
fadd
loop
in
xor
and
jo
mov
fildll
dec
jl
aad
cli
xchg
mov
fsts
jae
mov
pop
dec
jae
insb
mov
add
mov
lcall
stc
and
push
push
hlt
sbb
loopne
xchg
add
push
xor
repnz
and
sub
movsl
sub
sbb
pop
cmovg
imul
in
xchg
stos
in
or
rcrl
ljmp
and
sub
frstor
push
insl
popa
mov
pop
stos
rorl
loop
shl
push
cs
jl
mov
cmpsl
dec
mov
dec
lock
xor
stc
fstpt
insb
and
mov
inc
pop
bound
fisubs
push
pop
xchg
mov
and
xor
add
mov
shl
pop
mov
cmpsb
mov
aas
arpl
mov
cmp
xchg
dec
xor
jle,pt
adc
jecxz
cmp
out
lds
leave
pop
jnp
sahf
into
jne
pop
mov
insl
adc
mov
jle
sar
add
pusha
stos
push
ja
cwtl
inc
jge
jge
mov
leave
and
push
imul
add
icebp
fsubl
dec
ds
loopne
and
xchg
cmp
fcmovnu
lock
push
shll
pop
arpl
addl
inc
in
int
mov
test
data16
mov
push
outsl
iret
mov
fildl
jae
test
stos
int
imul
and
aam
sbb
cs
pop
into
addr16
xor
and
xchg
pop
sbb
push
lods
or
mov
andb
mov
imul
lcall
pop
push
dec
cmp
cmp
stos
push
sbb
int
imul
cmp
addr16
aas
dec
push
inc
orb
add
push
jl
arpl
outsb
adc
pop
inc
imul
push
arpl
hlt
leave
cli
inc
or
loopne
icebp
mov
outsb
imull
jbe
in
addr16
xchg
or
cmp
daa
and
shlb
mov
pop
mov
push
out
popa
add
ret
mov
lcall
pop
xor
cmc
scas
insb
sub
cmp
inc
ret
inc
mov
in
and
rclb
movsb
aaa
outsl
xchg
das
loopne
aaa
gs
pop
inc
lods
arpl
and
mov
lock
cmp
lods
iret
imul
push
jnp
test
mov
push
mov
cmpsb
adc
out
shrl
sbb
in
cmp
out
pop
dec
cmp
xchg
jno
out
sbb
stc
mov
push
cmp
jno
mov
loopne
sbb
aaa
jle
mov
xchg
mov
adc
mov
adc
sti
idivb
cs
idiv
add
loop
lea
loope
jo
inc
ja
pop
mov
hlt
mov
test
mov
lock
adc
mov
push
add
dec
xchg
loope
mov
int
jns
or
jecxz
popl
push
cmpsb
je
push
push
inc
rclb
pop
out
movb
fsubr
and
icebp
sarl
sub
mov
cmp
jbe
mov
xchg
imul
adc
pop
dec
adc
insb
jl
mov
pop
bswap
or
out
jmp
or
dec
sbbb
or
jle
in
pop
cli
cmpb
or
addr16
jns
xchg
lahf
add
out
xor
pushf
or
jns
dec
cmp
ret
cmp
add
stos
mov
call
push
lods
jge
pop
cltd
gs
jnp
xchg
pop
lcall
xor
add
inc
rorl
loopne
es
dec
fstl
add
jg
lods
icebp
cwtl
mov
push
lock
push
mov
mov
seto
add
and
fcoms
mov
xchg
mov
leave
xor
dec
je
and
test
scas
jno
imul
add
dec
mov
sub
jmp
sahf
inc
xlat
ds
cmpsl
outsb
insl
jbe
sbb
cltd
jmp
adc
lahf
adc
cmpsl
push
out
xchg
push
bound
or
dec
xlat
pop
inc
xchg
and
sub
outsb
adc
pop
add
packsswb
push
mov
out
push
inc
scas
stos
sub
shll
jmp
insl
xchg
mov
inc
or
mov
bound
sub
xlat
mov
mov
dec
sarb
fisubrl
ret
lds
and
xlat
push
insl
adc
xor
js
imul
out
push
test
stos
xor
jno
out
test
mov
int3
cmc
imul
movsl
pop
jle
xlat
loopne
cmp
fsubrl
sti
add
popa
out
jno
addr16
dec
lds
js
ds
xor
push
pop
dec
xchg
outsl
jmp
push
inc
xor
mov
stc
or
popf
sbb
xor
lock
xor
xchg
rolb
sub
mov
inc
xor
jno
dec
push
jbe
adc
pop
movsl
add
aam
lret
out
inc
int
push
mov
fiaddl
bound
or
add
push
mov
popl
mov
or
jbe
adc
cmp
or
and
loop
shl
mov
pop
mov
repnz
addr16
sub
or
mov
jbe
out
pop
rcr
mov
push
push
sti
fidivrl
cmp
and
add
fdivs
and
add
cmp
adc
pop
test
decl
test
bound
and
and
out
int
dec
stos
cmpsb
push
jl
mov
cwtl
mov
xchg
add
and
dec
push
mov
rcrl
pop
cltd
mov
cmp
int3
push
hlt
ja
cld
cwtl
lea
or
leave
lcall
xchg
mov
mov
xor
xchg
ss
dec
inc
sti
xor
outsb
std
out
adc
data16
adc
sbb
popf
arpl
cmc
sbb
movl
push
pop
mov
and
sahf
xor
inc
mov
lahf
lds
xor
lods
dec
int
ljmp
aam
rcrb
movsb
cmp
push
fucom
jmp
outsb
clc
cmp
sbb
test
and
mov
sahf
shlb
xor
dec
inc
jnp
inc
pusha
clc
aad
fwait
jns
ret
pop
add
jbe
inc
loop
add
test
cmp
pop
pushf
shl
ja
push
xlat
xor
jnp
sub
push
insb
cmp
sahf
loopne
sbb
das
fwait
ss
divb
movsl
sbb
lds
cmp
rcrl
jo
and
pop
and
imull
xchg
outsl
test
jb
fcmovnu
xchg
dec
sub
test
jnp
jnp
jle
aam
jb
into
mov
jns
adcb
fistpl
nop
or
divb
pop
ja
xchg
jno
jne
sbb
inc
cmc
xor
pop
pop
aaa
jae
push
pop
pusha
call
sub
adcb
or
jae
adc
inc
pop
fwait
sub
dec
push
in
mov
sti
scas
jns
repnz
mov
jbe
aam
bound
dec
mov
mov
xchg
push
cmp
pop
or
fcompl
cmp
das
lods
push
mov
repnz
inc
sbb
mov
test
negl
test
daa
lret
push
sbb
and
cs
scas
sbb
adc
xchg
popa
lock
and
imul
push
add
fnsave
dec
xor
and
cwtl
ss
xchg
cmpsl
loope
mov
out
jecxz
bnd
inc
push
dec
jne
inc
mov
mov
andl
and
fcomps
mov
stos
addl
gs
fcompl
jne
push
je
mov
jb
sub
loope
or
adc
jbe
push
fidivl
out
inc
jnp
popa
pop
cmpl
push
xchg
mov
outsb
push
enter
sahf
lret
push
xchg
dec
push
popa
xor
mov
mov
mov
mov
shlb
and
and
jae
mov
stc
adc
hlt
sub
aas
push
dec
jb
xchg
loope
push
lret
mov
call
jnp
adc
or
sub
dec
dec
inc
stos
aam
addr16
add
and
ljmp
sub
les
nop
push
pop
or
aam
lea
and
out
stos
push
lods
int3
xchg
sub
pop
rorb
adc
jnp
fidivl
scas
das
mov
sbb
arpl
scas
push
lcall
push
xchg
jmp
mov
in
pop
cmp
inc
cwtl
inc
adc
dec
jbe
pop
orb
rclb
das
ds
mov
arpl
lds
dec
and
cmp
sbb
and
pop
xchg
or
lcall
ss
jl
je
inc
outsb
and
addr16
xlat
dec
push
pop
je
test
pop
test
sbb
ficoml
inc
or
clc
or
gs
and
int
mov
es
pop
sub
clc
xor
out
xlat
jge
or
mov
jl
out
mov
out
std
pop
mov
cld
jo
cmc
xlat
jecxz
add
sbb
cmpb
push
imulb
jae
sbb
cwtl
mov
inc
jle
icebp
mov
stos
cwtl
in
cli
mov
mov
ret
dec
cmp
jno
inc
aas
aaa
out
les
ficoms
cmp
jle
insb
or
je
out
fsts
mov
fwait
mov
aad
js
cmp
adc
repnz
adc
aad
arpl
push
and
cltd
rcrl
sbb
xchg
push
dec
mov
inc
jne
and
inc
push
nop
adc
inc
mov
mov
cmp
shlb
and
pop
lock
sahf
popf
dec
lret
jl
jecxz
adcl
popw
xchg
cmp
popf
movsl
adc
js
enter
iret
pusha
pop
clc
int
movsb
data16
fidivs
adc
insb
pop
gs
subl
mov
out
fidivs
sub
ds
cmp
fisubs
aad
fld
xchg
cmpsb
xchg
sbb
stos
xor
je
pop
and
test
dec
jo
xlat
adc
push
sbb
dec
pop
outsb
mov
cmp
add
mov
pop
push
outsl
test
push
mov
and
daa
int3
mov
dec
pop
adc
cmc
inc
popa
flds
sub
imul
xchg
dec
mov
repz
in
jle
ficompl
setne
mov
sub
fs
xor
lods
adc
jbe
stc
xor
push
rorl
xchg
mov
push
add
push
adc
bound
movsl
dec
int3
cltd
xchg
imul
adc
sub
push
andl
mov
or
cmp
enter
add
add
jae
scas
dec
mov
xorl
pop
xor
adc
mov
sub
xchg
cld
sti
inc
je
cli
xchg
frstor
sbb
arpl
fwait
add
ds
pop
es
fsubrl
mov
mov
jbe
int3
xchg
in
inc
shrl
inc
xor
movsb
push
mov
mov
xchg
xor
ja
imull
add
cmpsl
mov
or
and
insb
loopne
or
das
mov
popa
testl
mov
jne
xchg
inc
mov
ljmp
ljmp
add
lret
lret
pop
addl
lret
addr16
es
add
notl
lock
out
inc
subb
push
cmp
mov
mov
mov
xchg
xor
popa
insb
cltd
or
test
and
in
into
adc
scas
testl
sbb
mov
cld
cmpsb
jmp
in
inc
repnz
mov
arpl
inc
imul
nop
out
repz
jno
or
cmpb
sub
testb
cmp
sbb
xchg
mov
in
fdivrs
xchg
addr16
out
xorb
fdivrl
sbb
rcrl
in
out
pop
pop
mov
leave
loopne
mov
ja
int3
and
add
jb
push
cvtps2pd
xchg
int
dec
add
mov
inc
fcoml
sbb
loope
fcmovnbe
xchg
stos
or
ss
shl
pop
aas
xor
clc
push
or
xor
mov
push
push
xor
jb
inc
push
enter
es
rcl
test
hlt
fcmovnb
mov
in
stc
pop
cwtl
aas
int
sbb
stos
fidivrl
insl
cld
adc
jle,pt
int
jp
pop
pop
mov
inc
or
pushf
clc
cld
pop
es
push
es
jg
dec
sub
repnz
inc
jge
mov
adc
lcall
inc
int3
sbb
jp
jge
sub
int3
xchg
xlat
xor
jg
loop
mov
add
stc
xlat
pop
out
addr16
push
js
mov
or
aad
mov
or
xor
fwait
lcall
xchg
out
ss
dec
mov
mov
lods
add
jns
sub
cli
push
idivl
xor
fchs
iret
inc
push
daa
inc
mov
rcrb
repz
enter
sahf
aas
das
push
popa
fs
mov
loope
mov
aam
ficoml
mov
mov
enter
xchg
push
notb
ret
es
jle
dec
stc
mov
sub
scas
inc
lea
fbstp
scas
inc
movsb
dec
or
mov
scas
sahf
pop
std
mov
jmp
in
jecxz
lcall
cmp
pop
aad
je
cmpl
mov
mov
jne
push
jp
sub
adc
and
sbb
ret
shl
popa
mull
sbb
cltd
icebp
aaa
cs
lds
cld
cld
and
dec
into
cmp
adc
aas
xchg
cmc
inc
mov
imul
or
shlb
or
push
shrb
ret
or
andb
mov
xor
xchg
aam
pop
loopew
mov
mov
inc
nop
xor
xchg
ja
xor
mov
ret
inc
add
push
mov
pop
or
ds
dec
andl
sarb
mov
xor
jbe
aad
nop
ret
sub
sahf
int
mov
mov
inc
bound
mov
push
loope
xchg
sbbl
jae
mov
jo
lea
cltd
xchg
pop
lcall
mov
inc
enter
outsl
add
roll
les
pop
sbb
loop
fldcw
ljmp
jne
push
add
jecxz
into
cs
fstpl
push
insb
push
scas
mov
cmpsb
push
xchg
inc
sar
mov
sub
ds
mov
pop
cs
fmuls
cld
stos
and
fdivl
sti
xor
jne
std
pop
scas
dec
xor
fs
ret
xchg
icebp
cs
ret
cli
scas
or
jl
call
daa
insb
mov
dec
sbb
push
dec
jo
push
js
push
push
add
hlt
insb
cmp
inc
dec
mov
ror
sti
mov
and
cli
negb
adc
xchg
out
mov
std
iret
mov
jnp
push
mov
out
cwtl
sub
loope
lret
push
arpl
inc
and
lret
add
jp
inc
mov
faddl
movsl
dec
xchg
and
sub
popf
lock
add
movsl
enter
mov
or
push
pop
mov
int3
scas
shrl
add
clc
shrl
pop
mov
imul
sub
and
repz
push
sub
sti
sbb
sarl
mov
push
rorl
fiadds
or
int3
pop
and
add
mov
pop
lods
popf
mov
orb
pop
cmp
push
test
or
sub
cmp
xor
dec
fcmovb
jb
lret
cmp
dec
je
push
sbb
mov
popa
in
mov
sbbl
test
ret
pop
cltd
out
addr16
in
mov
dec
insb
fldt
inc
add
jbe
lock
dec
xchg
jecxz
je
loop
mov
inc
icebp
xor
dec
adc
xor
ret
popa
mov
xor
and
mov
sub
jg
adc
nop
dec
and
mov
or
notl
jge
sub
stos
popa
addl
int
rcrl
out
mov
jge
ljmp
in
mov
test
push
int3
imul
add
outsl
dec
ljmp
add
aaa
and
sarl
pusha
push
xchg
mov
shlb
jae
test
out
es
loop
jae
mov
xorb
out
xchg
leave
push
adc
cmp
mov
sbb
pop
nop
lea
dec
jbe,pn
imul
lcall
jmp
pop
dec
aad
dec
lds
jmp
ret
push
sub
addr16
and
mov
lcall
shll
out
jb
dec
fs
jo
stos
inc
gs
xchg
test
jg
addb
leave
push
and
dec
pusha
add
cmc
shrl
dec
fsubs
in
fisubrl
add
orb
stos
xchg
xchg
out
fwait
jle
addr16
test
pop
push
int3
jmp
adc
lds
jno
mov
or
cmp
cmpb
mov
roll
dec
cmp
int
fcoms
and
adcb
mov
pop
mov
popa
scas
add
push
adc
cmp
mov
loopne
into
jle
ljmp
inc
cmp
jmp
pop
xor
xor
incb
shlb
mov
xor
pop
mov
pop
dec
jg
dec
repnz
pop
repnz
pop
test
fiaddl
mov
fbld
cltd
mov
out
dec
mov
scas
fs
gs
or
xor
dec
mov
mov
paddw
lret
mov
outsl
add
add
inc
lsl
mov
mov
jae,pn
dec
jle
mov
repnz
or
std
or
test
aad
and
xlat
push
call
addr16
int3
insl
sahf
ret
jmp
and
sub
mov
mov
jge
xchg
xchg
inc
jo
sbb
sbb
js
push
jle
adc
mov
add
and
xor
je
orl
jae
cmp
push
imul
cmp
sub
cltd
test
jbe
stc
mov
sbb
les
jl
cli
jge
movsb
repz
mov
pop
ja
js
shll
notb
pushf
jbe
cmp
cmp
cmp
clc
xchg
inc
lea
sti
pop
sub
pop
mov
sub
jp
push
inc
pop
nop
lcall
lret
fstpt
and
out
out
mov
int
ljmp
jmp
faddl
repz
mov
or
mov
daa
mov
dec
ja
or
mov
imul
std
sarb
xchg
movsl
add
pushf
popf
notl
fnstsw
xor
rorb
sub
mov
xlat
mov
ja
inc
insb
push
ficomps
rorb
int3
add
mov
lods
inc
mov
sbb
cs
push
fnsave
sarl
inc
push
addr16
sub
repz
push
in
fisubrl
mov
lcall
fldt
sbb
aad
mov
inc
cmp
dec
inc
sub
jmp
cmpsb
add
stc
lcall
jg
loopne
movsl
xchg
test
lret
scas
or
test
insl
enter
pop
dec
icebp
pop
adc
in
lock
fadds
js
sahf
adc
loop
lods
jae
jp
mov
push
adc
inc
dec
inc
add
pop
ljmp
insl
mov
outsb
sahf
std
imulb
ljmp
mov
iret
xlat
pop
les
in
mov
imulb
or
mov
aam
push
cmp
mov
mov
mov
add
js
clc
jo
insl
push
icebp
jo
jns
insb
mov
pop
and
mulb
aas
push
push
inc
cmp
pop
jnp
repz
imul
pop
jae
loope
mov
adcl
pop
pushf
sahf
inc
ss
or
je
pop
mov
mov
sbb
jp
enter
in
int3
add
sub
mov
mov
add
cmpsl
pop
dec
out
pop
mov
pushf
pop
je
add
rorl
dec
ljmp
push
jmp
outsl
and
dec
loope
pop
xor
add
inc
xchg
mov
daa
pop
ss
stc
adc
lods
mov
dec
jae
jl
enter
xchg
jmp
enter
dec
cmp
add
sub
in
mov
jne
call
inc
and
sub
rorl
or
outsb
mov
in
in
cltd
mov
inc
loop
enter
and
inc
loopne
mov
pop
outsl
ficomps
mov
mov
aam
jge
lcall
cwtl
in
lds
jmp
jnp
xchg
lock
rcl
dec
stos
clc
mov
or
pop
jnp
mov
push
sub
mov
arpl
sbb
popa
outsb
outsl
movsb
mov
negl
shl
cmp
xor
gs
scas
sub
movsb
xchg
adc
xchg
pop
cld
divl
fdivrl
aas
and
fidivrs
or
push
stos
cmp
sub
insb
loopne
cmpl
dec
cli
mov
jo
out
outsb
add
stos
fmuls
push
loope
cwtl
push
fadds
js
rol
bound
pop
leave
cmp
aam
xchg
jb
data16
mov
inc
pop
mov
xchg
sub
scas
in
ret
insl
js
push
cltd
stos
fstps
aaa
xchg
mov
adc
daa
cmp
mov
das
push
stos
adc
adc
push
sbb
popf
mov
lcall
stos
ds
push
push
adc
add
int
push
jo
inc
pop
fwait
test
mov
adc
pop
push
imul
cld
movsl
xor
or
notl
mov
pop
mov
push
mov
and
mov
xchg
fs
mov
jb
pop
rorl
shlb
sti
mov
scas
add
andb
cmpsb
mov
nop
popa
imul
loop
dec
jbe
add
xor
mov
fcom
in
push
push
aaa
arpl
and
xchg
add
sbb
test
or
int3
and
andl
xchg
mov
dec
inc
fwait
jbe
xchg
loopne
leave
adc
cli
cmpsb
jmp
imul
sbb
jne
sub
ja
enter
mov
fs
push
in
test
mov
test
sbb
push
lea
lods
mov
push
add
insl
iret
adc
push
sbb
cmp
push
mov
pop
push
pusha
adc
fidivrs
xchg
jmp
jecxz
ja
test
leave
pusha
andl
jmp
sub
lahf
sbb
outsl
call
repz
into
ffree
cltd
lds
sbb
pop
push
mov
adc
push
cld
xor
pop
fistl
xor
pushf
or
mov
mov
sbb
or
or
pop
into
adc
stc
and
xor
das
pop
jns
add
and
scas
daa
jne
fucomi
inc
js
outsb
push
inc
sbb
aas
fistps
andb
ficompl
or
add
jae
and
dec
inc
lds
add
int
and
inc
sub
mov
jge
jne,pt
dec
enter
xrelease
cmp
sbb
mov
sti
ror
loopne
mov
add
pop
sbb
push
dec
roll
cmp
sbb
fcoml
xchg
lret
adc
int
inc
shlb
and
sub
iret
in
pop
pop
jp
stos
or
sbbl
xor
sub
test
rolb
iret
test
imul
int
in
loopne
enter
jg
cmpsb
maxps
out
mov
xchg
scas
enter
inc
xchg
rcll
mov
jl
lock
sti
fsubrs
ss
adcl
out
insb
mov
jg
mov
xchg
mov
movsl
iret
mov
mov
movsb
add
ss
pop
push
out
push
sbb
packssdw
cmpsb
push
into
lret
cmpsb
cmpsb
das
push
mov
jns
loopne
add
outsb
inc
rolb
pushf
inc
xchg
loop
pop
dec
inc
adc
add
mov
int
fucomip
jmp
pop
mov
rolb
xor
jbe
gs
pop
mov
popa
push
bswap
repnz
mov
jno
fsts
les
mov
push
mov
sbb
inc
jne
mov
xor
outsb
leave
loopne
fldl
inc
cmp
pop
pop
adc
aaa
ror
sub
pop
xlat
sti
cmp
mov
nop
dec
mov
ret
test
pushf
xchg
leave
sbb
sub
inc
es
into
mov
jae
pop
loope
cmp
sub
scas
or
push
pop
sub
push
inc
mov
addl
out
pop
jle
mov
jb
push
cmp
jb
xchg
loope
inc
cmpsl
mov
inc
inc
mov
decl
sub
pusha
ret
outsb
rorb
sar
jno
das
xchg
push
aam
or
loope
xor
mov
insl
enter
fdivp
push
pop
mov
dec
loopne
fsts
adc
lret
aad
hlt
outsl
mov
push
cmp
xchg
push
pop
fsubrl
scas
cmp
stos
loopne
sub
popl
cmp
cmpsb
xor
xchg
nop
fwait
cmp
mov
test
xor
stos
sub
andb
sbb
and
jne
push
adc
and
in
std
gs
jecxz
pop
jp
sub
and
push
addl
or
daa
xchg
dec
pop
pop
adc
mov
sarl
dec
push
push
xor
adc
repz
fxch
add
addps
insl
or
sub
xor
arpl
mov
jne
jmp
xor
cmp
adc
mov
rep
test
shl
sbb
pop
das
push
mov
mov
ret
add
nop
jne
mov
mov
cwtl
sbb
xlat
pop
add
outsb
add
jns
stos
push
dec
jnp
and
push
push
inc
sahf
fdiv
and
scas
sub
mov
adc
and
jge
push
nop
pop
jmp
in
adcl
leave
lahf
movsb
or
inc
jle
adc
adc
add
ss
scas
cmp
sahf
leave
jg
test
fisttpl
or
jb
push
repz
cmc
push
xor
outsb
ficoms
lret
push
je
test
and
dec
std
and
cs
fidivl
pop
cmpsl
and
int
rorb
repnz
xchg
repz
sub
in
ret
mov
mov
mov
flds
mov
add
cli
or
push
mov
mov
and
dec
aaa
mov
xlat
fsubr
xchg
mov
jecxz
sub
jmp
fwait
dec
and
xchg
in
scas
push
cmp
test
scas
arpl
xor
adc
movsb
pop
and
mov
push
mov
pop
data16
push
frstor
aad
cmpl
xorb
or
rclb
dec
jo
and
push
icebp
dec
xchg
ds
adc
inc
rorb
into
cmp
jnp
mov
and
ficompl
mov
int
or
cmp
cmp
pop
ret
jbe
push
dec
in
jnp
or
aas
fwait
push
cs
mov
sbbb
mov
leave
mov
or
sbb
push
jne
or
aad
push
mov
fwait
cmp
ja
sub
lcall
xchg
or
fs
jnp
fnstenv
movb
mov
mov
cmc
in
je
xchg
adc
loop
and
xchg
push
fs
pop
mov
push
mov
shrb
mov
sbb
das
repz
loopne
nop/reserved
hlt
inc
cmpsl
jns
cs
das
and
jns
int
jmp
insb
xor
mov
stos
cwtl
jp
cs
xor
mov
jae
xchg
aas
std
fwait
data16
jb
into
cmp
xchg
sbb
cmpsb
mov
cli
fadds
and
jne
rorl
xchg
or
mov
xchg
lret
inc
jp
jns
aam
mov
mov
int
fcomip
mov
mov
jo
or
xor
mov
scas
inc
mov
ss
dec
js
or
out
cwtl
mov
pop
out
xchg
jecxz
cmp
loopne
mov
mov
in
dec
pop
lods
mov
call
jns
push
mov
cld
xor
mov
xlat
jmp
or
pop
inc
pusha
mov
mov
jl
cwtl
rorb
test
adc
fmuls
jge
xlat
fs
push
jmp
cmc
sahf
insl
int3
in
cmp
insl
lds
push
movsl
je
cltd
cmp
lcall
mov
dec
and
aaa
inc
sahf
pop
mov
push
daa
pop
inc
out
shl
mov
fwait
outsb
push
stos
cmp
jmp
jp
fdivrs
push
jno
rcrb
movsl
and
fisubl
jg
adc
and
movb
pop
xor
fwait
stc
and
pop
push
sub
loopne
dec
pushf
jbe
repz
mov
inc
cli
mov
adc
scas
push
sbb
sub
ds
mov
mov
dec
cmp
jmp
cmp
xchg
addl
sbb
psubusb
in
repz
nop
out
loop
iret
icebp
and
je
jecxz
stos
std
push
adc
dec
push
add
add
add
mov
repnz
cmpsb
pop
sub
stos
repz
adc
ret
repz
lds
outsb
iret
bound
ss
sub
mov
jo
xor
dec
popl
dec
aad
cmp
test
mov
mov
push
jbe
push
mov
nop
sub
bound
adc
mov
sbbb
adc
hlt
xor
aad
push
sbb
jbe,pt
in
adc
ret
stos
mov
sbb
push
add
pop
xchg
pop
fsubs
negb
or
mov
mov
aad
xchg
jmp
inc
stos
fcmovnbe
std
jno
into
bound
mov
ljmp
or
sbb
dec
xchg
mov
loop
fwait
add
test
and
outsb
nop
enter
out
xchg
mov
test
pop
sub
mov
in
jmp
bound
stc
int
xor
mov
xchg
loopne
jp
in
push
mov
aas
pusha
lcall
pop
shrb
xor
aaa
pop
jno
jge
cltd
pop
mov
mov
stos
loope
sbb
test
stos
push
mov
xchg
pop
push
clc
stc
cwtl
xchg
jecxz
imul
cmc
jno
mov
adc
jnp
js
sub
adc
loop
jae
push
jecxz
xor
mov
xlat
mov
jl
xchg
adc
movsl
jae
out
push
test
sub
inc
jle
je
mov
sub
andl
pushf
add
jbe
push
and
xor
insb
cmpsb
jo
or
lods
inc
int3
adc
inc
or
mov
shrb
jbe
pushf
mov
mov
int
add
stos
xchg
jp
std
incb
das
ficompl
sub
cmc
pop
mov
test
test
aam
cmp
or
mov
dec
or
or
xor
fs
lds
or
and
pop
movsl
mov
and
jnp
shrd
jmp
jne
aaa
push
dec
loope
add
pop
sub
xchg
icebp
push
cmc
push
mov
add
mov
mov
ss
imul
xor
xchg
mov
mov
sbb
clc
push
push
push
sub
fstpl
push
jecxz
xchg
test
leave
cmc
fwait
nop
add
imul
outsb
aam
out
xchg
int3
dec
call
push
outsl
mov
jns
scas
mov
cmp
call
daa
xor
loope
loopne
clc
push
imul
mov
lds
push
fmul
out
xchg
cmp
mov
lcall
xchg
jl
rolb
dec
insb
jle
mov
sbb
in
sub
xchg
testb
pusha
leave
push
lcall
nop
aas
test
dec
lret
ja
xor
push
iret
pop
lock
jge
das
stos
mov
dec
fistps
and
or
push
cld
lods
and
mov
xchg
dec
jne
pop
push
add
mov
sub
aad
mov
fldt
testb
and
or
or
bound
lods
jl
mov
pop
or
sbb
mov
fs
pop
inc
aad
cwtl
das
push
stos
xchg
jne
sub
insb
and
test
es
adc
jne
decb
jb
push
xchg
mov
cmp
popf
adc
push
fstp
bnd
shll
frstor
in
inc
out
inc
pop
push
shll
jp
mov
hlt
push
push
inc
dec
jae
shr
mov
xchg
fcoml
mov
out
aam
shll
mov
ljmp
inc
lret
outsl
daa
out
loop
add
lret
jnp
xor
cmp
cli
mov
sub
stos
jmp
jne
adc
push
sbb
mov
test
xor
jo
pop
ret
mov
xchg
pop
pop
cli
scas
xor
mov
lock
stos
mov
divl
call
add
jecxz
mov
cld
inc
lock
gs
mov
sbb
and
xor
in
repnz
pop
adc
mov
dec
sbb
and
scas
xchg
xchg
ja
arpl
fistl
cmp
dec
xchg
add
xorb
ja
fdivs
sub
push
outsb
leave
dec
add
nop
dec
insb
inc
lock
repz
enter
mov
add
std
xchg
ja
stos
mov
sbb
mov
mov
in
sub
mov
add
sar
je
sub
push
jno
pop
rol
add
popa
pop
inc
mov
stos
in
dec
js
pop
shlb
mov
push
cmp
iret
sub
sbb
divl
icebp
pop
sub
mov
mov
test
xor
out
pusha
cltd
out
insl
sub
fwait
xlat
je
test
shr
jns
jmp
rcrl
into
mov
jg
mov
ret
dec
and
xchg
fiaddl
pushl
inc
cltd
jmp
dec
and
iret
in
jp
popa
or
dec
xor
rclb
jne
sahf
imulb
cwtl
test
hlt
stc
mov
subl
lahf
pop
rcr
dec
mov
or
andnps
mov
loope
arpl
mov
mov
pop
popa
aam
int
pusha
out
jp
movsl
outsl
cld
test
or
mov
pop
mov
rorl
jne
mov
aam
shll
sub
out
out
xlat
fidivrl
cltd
js
int
add
jge
clc
inc
or
xchg
jb
notb
aaa
sub
adcb
daa
out
xchg
inc
sub
cmp
inc
lret
mov
adc
add
mov
or
lock
jecxz
lahf
jecxz
aaa
xchg
lahf
lods
orb
pop
xor
mov
out
push
lds
mov
imul
imul
mov
stc
add
cmp
add
inc
test
adc
push
imul
mov
push
les
out
fimuls
subb
outsl
and
aaa
jno
js
pop
in
lcall
cmp
pop
test
mov
jmp
out
cmpsl
cli
and
cs
add
aaa
mov
jecxz
scas
sahf
adc
into
loop
mov
movsb
sahf
xor
xchg
pop
xchg
popf
aad
xchg
dec
xchg
sbb
std
nop
std
sbb
aam
xchg
jmp
or
or
jge
mov
push
jp
jo
sub
cli
adc
add
imul
mov
pop
jns
sbb
push
xchg
add
shll
inc
leave
lcall
add
push
ja
sub
pop
jb
or
mov
unpckhps
aas
adc
xor
lds
mov
add
into
repz
mov
mov
jmp
add
sbb
shll
jbe
in
lret
pop
cmc
mov
or
outsl
pop
or
mov
push
repnz
je
lret
xchg
ret
xchg
jl
mov
xchg
sbb
pushw
xor
rorb
inc
or
xchg
push
pop
cs
xchg
into
or
movsb
mov
sbb
mov
in
mov
and
xlat
xor
xchg
adc
add
fadds
adc
sarl
test
dec
inc
test
inc
in
stos
adc
ret
incb
stos
inc
scas
test
cli
mov
aam
neg
ja
mov
sbb
popf
es
add
negl
outsb
fistpll
pop
xor
cmp
xor
jb
dec
or
adc
mov
xlat
adc
sbb
dec
cwtl
mov
fwait
inc
inc
dec
mov
mov
sub
or
mov
cli
sbb
scas
sub
mov
pop
dec
daa
or
and
push
cltd
dec
jb
and
xor
or
lcall
xchg
in
icebp
pop
leave
sub
adc
push
sti
scas
mov
mov
add
test
gs
popl
shl
inc
lahf
xchg
adc
jge
or
ljmp
mov
dec
dec
add
add
jbe
cmpsl
mov
pop
nop
call
pushf
rol
add
scas
scas
adc
cmp
add
mov
jns
int3
call
xchg
ret
sbb
sbb
jne
outsb
cs
xor
enter
ret
mov
mov
rcr
pop
ds
dec
xor
pop
and
sbb
dec
pop
test
cwtl
cli
lret
addr16
mov
scas
aam
out
lea
test
or
xchg
iret
inc
les
adc
and
gs
repnz
xor
sub
mov
sbb
or
push
or
rolb
sahf
jb
rolb
or
rolb
fwait
divb
fsubrs
sub
sub
adc
into
ds
sub
es
insb
mov
add
cli
mov
filds
in
push
jle
dec
loope
jb
ret
push
mov
add
push
fnsave
add
sahf
or
or
in
cmp
push
inc
mov
popf
sbb
cld
nop
adc
out
fs
stc
pop
push
or
mov
push
push
pop
jnp
ja
add
insl
mov
movsb
jnp
xchg
dec
arpl
mov
adc
fcompl
sub
xchg
scas
pop
lods
sub
adcb
xchg
inc
pushf
iret
scas
lret
mulb
ss
mov
dec
jle
xchg
cs
popf
out
outsb
dec
movsl
movsb
hlt
cmp
leave
jns
add
pop
mov
cmp
sub
out
fnstsw
fwait
jecxz
or
cltd
cmpsb
fwait
or
insl
or
shrb
mov
sub
xchg
xchg
jmp
ja
in
dec
mov
and
mov
jno
out
clc
es
mov
jge
scas
pop
nop
mov
scas
inc
inc
rol
shll
movsl
and
sbb
scas
fiadds
test
push
dec
ds
or
orb
mov
xchg
mov
in
mov
fidivrl
lods
xor
movsb
imul
jl
pop
scas
call
jb
adcb
pusha
add
orb
mov
mulb
fs
sub
sub
stos
inc
adc
push
jle
dec
test
enter
or
lds
lea
movsl
jo
mov
pop
rcrl
test
rcl
or
fidivl
mov
xchg
je
sub
notb
mov
and
cwtl
push
pop
sub
repnz
outsb
pop
adc
push
mov
push
pop
filds
push
clc
mov
mov
in
loopne
loope
out
mov
or
stos
test
enter
scas
adc
test
and
mov
mov
sbb
push
insl
es
scas
adc
fcoms
pop
das
repz
js
insb
hlt
mov
add
push
das
pushf
cs
enter
test
cmp
fmul
inc
cli
cmp
in
subl
and
push
xchg
jae
pop
mov
mov
sahf
into
mov
repnz
inc
sub
aas
popf
lods
inc
inc
jae
aad
std
aad
dec
das
and
and
cs
popf
pop
out
adc
insl
cwtl
imul
and
ret
dec
pop
or
xlat
fmuls
repnz
pop
fcomi
aad
fs
mov
sbb
into
loope
xor
jge
adc
cld
push
and
sub
arpl
test
push
iret
js
mov
aad
jge,pt
loop
sub
lret
shlb
test
inc
hlt
stos
add
shll
aas
mov
popf
fwait
or
mov
hlt
push
loopne
add
cli
shr
xchg
push
jle
test
scas
xor
incl
sahf
sahf
outsb
lock
out
and
sub
decl
dec
ss
mov
push
jno
and
adcl
scas
in
addr16
ror
out
pop
int
popf
rcr
icebp
and
jno
sti
shrl
xor
fisubrl
in
int
or
movsl
or
sbb
cmp
jb
in
dec
jb
mov
or
cmpsb
cmp
stos
xor
cmp
bnd
xchg
pop
jge
xchg
sub
cmpsb
adc
jno
cmp
inc
outsb
mov
sarb
mov
ss
ljmp
lea
xlat
push
mov
push
sbb
mov
push
or
repz
stos
imul
and
mov
in
xorl
pop
mov
iret
dec
push
adc
in
test
repnz
jmp
insb
dec
inc
pop
and
xchg
lcall
scas
fcoms
stc
lcall
xchg
repnz
dec
ss
add
es
pop
mov
mov
je
hlt
add
jg
outsb
cmpsl
or
push
enter
and
pop
and
iret
adc
adc
mov
rcl
xlat
dec
in
add
push
and
or
xchg
and
fwait
repz
outsl
sbb
sti
cmpsb
scas
ds
and
mov
cmp
cmp
mov
adcb
or
test
mov
and
and
cli
mov
mov
rcll
mov
aas
les
sub
pusha
mov
and
mov
dec
inc
fidivrs
xor
lret
test
int
push
test
xor
sub
hlt
xor
sub
loopne
test
movsl
loope
add
roll
pusha
jg
lock
xor
test
fcomp
lods
sbb
or
xchg
pushf
sub
xor
xor
xchg
lahf
adc
jmp
repnz
insb
adc
test
mov
enter
icebp
insb
xchg
into
jmp
sbb
sub
pop
or
inc
push
jg
sbbl
fldenvs
mov
sub
jl
es
dec
xor
mov
sbb
adcb
sbb
incl
roll
dec
pop
in
xchg
xor
lahf
fstpt
mov
pop
pop
jle
cmpsb
sub
fwait
pop
ret
or
xchg
pop
fldl
ret
sbb
jne
subl
or
pop
stos
stc
cwtl
pop
mov
and
cmc
sbb
test
addr16
stos
addr16
or
mov
fsubl
or
cwtl
insl
xor
out
inc
jecxz
in
outsl
cmc
jg
shll
mov
pop
pop
mov
int
xchg
jmp
or
insb
aas
cltd
push
in
mov
cmpb
cmp
fldt
inc
jno
adc
xor
fistpl
xchg
dec
roll
dec
push
xlat
mov
mov
cmp
test
stc
je
cmp
lea
repz
andb
ret
in
mov
fiaddl
hlt
dec
or
mov
xchg
scas
sarb
xchg
sbb
xchg
inc
leave
mov
xchg
mov
and
sbb
mov
xchg
inc
aaa
cmp
mov
xor
xlat
push
in
adc
movsl
push
out
addr16
xchg
cli
test
jge
jp
and
frstor
mov
or
dec
pop
ds
jae
movb
xchg
mov
fwait
int
aaa
imul
mov
pop
scas
sub
and
leave
je
mov
jne
mov
xchg
push
fstps
push
inc
call
push
cwtl
and
aaa
jl
mov
sub
adc
pop
jb
arpl
lock
cmp
mov
sub
jne
inc
mov
adc
nop
mov
scas
je
or
bound
aas
dec
pop
cmp
inc
negb
outsb
add
sub
ret
mov
mov
scas
cs
adc
std
and
fdivrs
jp
cmp
mov
add
sub
imul
shlb
push
das
push
outsl
push
mov
cltd
mov
lcall
push
cmp
aaa
shlb
adc
mov
ficoms
loopne
mov
cmc
pop
filds
xchg
repz
mov
sbb
out
sbb
xor
mov
clc
leave
xchg
lods
fdivrl
outsl
sbb
push
mov
test
jecxz
push
pop
pop
sub
outsb
andb
dec
sbb
aam
cmp
lods
xchg
stc
pop
pushl
xor
pop
rol
clc
lahf
rcr
lret
cld
pop
int
fiadds
push
push
mov
loopne
roll
loop
xor
push
xor
mov
dec
daa
sub
daa
pop
into
fsubr
cmp
jb
inc
sub
out
ja
dec
lods
test
and
sub
inc
lds
sbb
xor
xchg
add
test
xor
clc
aam
mov
xchg
aaa
xor
sub
call
cmp
push
lcall
adc
add
and
cmp
dec
gs
mov
sarb
fsubr
fisubrl
jg
add
mov
clc
sar
cmp
in
push
mov
dec
cmp
scas
insb
mov
pop
jmp
cs
ljmp
mov
xchg
nop
cli
pmulhw
iret
add
mov
popa
sub
in
or
xor
fs
nop
popf
cmp
xchg
sbb
ds
xchg
mov
jae
test
pop
popf
dec
adc
pop
repz
add
inc
adc
jmp
cmp
adcl
std
dec
sahf
sub
cmc
ss
sbbl
out
inc
test
adc
addr16
mov
push
jl
dec
dec
fdivrs
cltd
xchg
sbb
bound
outsl
cmp
jns
push
jl
rsqrtps
mov
push
fucom
pop
test
sub
or
sub
xabort
or
or
mov
jle
adc
mov
xor
jp
dec
out
xchg
xchg
mov
lea
cli
add
test
push
mov
push
nop
loop
mov
or
imul
push
mov
adc
mov
xchg
popf
sti
mov
dec
movsl
out
clc
imul
and
jbe
mov
xchg
cmp
sub
xchg
dec
loopne
dec
mov
lock
sbb
std
jno
xor
stos
pushf
pop
ret
push
mov
clc
xchg
sub
sti
loope
loopne
pop
dec
adc
mov
fwait
pop
rcll
inc
or
int3
outsl
repnz
sarl
jle
or
cmpl
mov
cmp
sti
mov
rorl
push
cmp
fistpll
dec
push
shl
cltd
mov
test
subb
stos
or
mov
or
rclb
scas
pop
les
xchg
test
or
push
cli
mov
mov
fnstenv
mov
pop
and
negl
cli
push
inc
xor
and
loopne
xor
sti
addl
iret
mov
insb
nop
lds
adc
loopne
mov
sub
sbb
movntq
pop
mov
test
rep
cmpsl
movsb
sbb
jns
xchg
adc
jge
rorl
leave
jnp
cmp
in
push
xchg
pop
fcmovne
inc
fcoml
insb
jmp
fsubrl
daa
mov
sti
dec
sub
cmp
incb
scas
mov
pop
sahf
aad
out
es
outsb
popf
sbb
into
and
jb
add
mov
repz
shlb
sti
add
pop
ficomps
repz
popf
jae
push
mov
and
pusha
orl
loopne
insl
insl
cmp
adc
jle
pushf
cmpl
movsl
fstps
loope
addr16
adc
inc
cltd
adc
cmpsl
mov
fadds
push
das
lret
sub
fmull
pushl
shrl
loopne
in
fmuls
cmp
add
inc
lds
outsl
lods
ret
inc
xchg
jmp
lock
inc
mov
in
inc
shrl
std
add
cmp
xor
inc
inc
mov
push
add
push
sbb
sbb
outsl
fistpll
stos
lea
pusha
cmp
das
mov
les
fildll
iret
push
hlt
insl
add
dec
fdivrs
xchg
lds
push
mov
int3
sbb
xchg
adc
outsl
in
add
sbb
sbbl
in
xor
cli
jmp
jp
xor
stos
mov
arpl
xlat
and
cli
int3
pop
or
jp
dec
test
add
mov
pop
dec
xchg
inc
jle
and
mov
mov
lret
xchg
shrb
orl
scas
popf
loope
cmp
outsb
xchg
dec
ljmp
pop
pop
mov
daa
pop
clc
rcll
pusha
xchg
mov
les
movsl
xchg
mov
or
aad
and
xor
jl
and
insl
or
icebp
popa
test
sbbb
sub
cmpl
movsl
lahf
push
pop
inc
dec
dec
inc
dec
pop
enter
mov
and
add
call
mov
xor
stos
push
and
addr16
lods
ret
push
or
sub
mov
stos
or
pop
push
jbe
js
fbstp
mov
and
int
fs
les
sbb
adc
in
and
dec
inc
mov
leave
pushf
push
test
adc
mov
or
fwait
mov
loopne
fwait
push
xor
adc
lods
test
push
xor
xchg
mov
push
jg
imull
sbb
add
cwtl
add
cld
dec
mov
jle
and
push
pop
call
lock
stos
jns
popf
lock
push
shl
cld
insl
enter
and
and
es
js
loope
loope
sahf
addr16
push
push
jge
pop
ss
aaa
movsl
inc
mov
jmp
lcall
mov
sahf
sbb
stos
into
fchs
cmp
insb
shlb
int3
jge
repz
mov
push
mov
jae
sbb
imul
imul
test
xchg
adc
lock
inc
pop
test
jno
test
mov
or
enter
lock
sbb
xchg
cltd
xchg
mull
rcll
mov
push
mov
xchg
aam
loopne
ffree
cmp
or
sub
ja
add
mov
int
jle
dec
dec
fidivs
xor
pop
lods
cs
sbb
movsb
mov
push
rolb
push
push
fs
xchg
and
sahf
dec
popl
rorl
and
mov
lock
aad
insb
pop
sar
rclb
mov
cmp
pop
nop
js
xchg
mov
pushf
adc
inc
mov
sarl
lods
outsb
ret
iret
inc
iret
sbb
dec
pop
xchg
inc
cmp
xchg
add
xor
mov
lods
ds
and
lock
daa
sbb
push
xor
daa
cld
clc
mov
aas
lds
std
fdivl
nop
jns
je
mov
xchg
mov
and
std
pop
jnp
insb
cmp
lret
inc
pop
stc
adc
xchg
es
xchg
sbb
dec
xchg
popf
push
js
mov
cmpsb
inc
mov
data16
or
add
outsb
clc
ds
les
mov
add
rorl
nop
test
insb
push
das
mov
std
pushf
adc
loop
dec
inc
fsubs
sbb
ficomps
loopne
jle
sti
imul
iret
aaa
sub
icebp
aam
inc
inc
mov
stos
sti
mov
cmp
jl
ret
mov
or
jae
outsb
dec
mov
addr16
rclb
cld
mov
pop
mov
out
std
in
incb
in
in
loopne
or
in
push
dec
inc
mov
test
orl
sahf
lods
xchg
sbb
insl
lods
sub
test
mov
shll
sbb
enter
xchg
cmp
rcr
insb
or
cltd
ret
jno
rcrl
cmp
popa
das
ja
sbbl
into
sub
lcall
push
xor
push
shlb
inc
insb
push
cmp
push
pusha
adc
xchg
mov
icebp
sbbl
loope
cli
jmp
sbb
pop
jns
nop
add
adc
loop
mov
sbb
dec
pop
in
fsubl
mov
jge
insb
setge
cmp
mov
mov
mov
lds
mov
jne
mov
je
outsl
dec
xor
cmp
pop
mov
cld
xor
rcl
lcall
add
jb
and
scas
in
rorl
bound
mov
sub
adc
cs
addr16
shrl
int
push
add
fdivl
lret
popf
dec
dec
pop
ja
jb
stos
push
hlt
cs
les
adc
add
int3
int
fidivs
pop
loopne
mov
cmp
adcb
dec
cmp
xor
fcompl
cmp
rorb
mov
jp
mov
aaa
scas
lcall
iret
out
lcall
or
add
lods
icebp
xor
jecxz
lock
mov
pushf
insb
aad
pusha
int3
daa
jle
mov
mov
inc
xchg
sti
int
pop
ljmp
inc
inc
fdivl
addr16
lahf
and
cmp
mov
in
and
lea
rcll
mov
push
or
or
mov
mov
xchg
and
aam
adc
imul
push
enter
push
sub
adc
mov
fisubs
mov
cmp
xor
xchg
mov
movsl
xor
ja
in
or
fadds
shll
fadds
movsl
gs
scas
xchg
sti
adcb
outsb
lcall
push
lods
loopne
nop
xorb
jmp
negl
out
bound
push
insb
sub
jno
push
inc
pop
jnp
xchg
sbb
ss
out
mov
stos
cmp
inc
clc
pusha
repnz
shl
or
push
lcall
mov
dec
xchg
dec
mov
add
lds
jb
cmp
adc
test
mov
and
push
add
adc
jl
jecxz
lahf
cwtl
in
lods
movsb
lods
adc
sbb
lods
cmp
adc
dec
inc
lret
or
je
mov
cmp
cltd
lds
push
jbe
inc
aam
mov
mov
mov
cmpsl
aam
and
dec
dec
cmp
xchg
and
fstps
mov
dec
mov
ss
test
dec
push
mov
dec
movsl
sbb
dec
fistpl
test
js
mov
or
and
xchg
es
in
das
xor
gs
dec
test
arpl
cwtl
in
sbb
movsl
out
xchg
jbe
stc
pop
or
cltd
lods
xchg
test
cld
mov
add
add
jbe
mov
fistpll
mov
xor
fsts
mov
repz
je
dec
subl
mov
int
mov
adc
pop
xchg
cmp
aaa
xchg
rorb
fdivrl
push
xchg
frstor
mov
jne
inc
mov
fidivs
icebp
cli
lcall
scas
cmpsb
shl
push
shrb
test
scas
xchg
sub
cltd
cld
and
fcomps
fs
test
lods
fcmovnu
mov
pop
or
aad
fidivrl
ds
push
or
rcrb
in
loop
test
adc
jne
mov
outsl
mov
sbb
sbbb
fsubl
adc
sahf
ljmp
inc
jbe
iret
sahf
mov
cmp
cmpsl
ret
pop
hlt
das
ret
lock
pop
enter
mov
jae
sub
jbe
jns
and
or
out
mov
popa
insl
loopne
dec
movsl
jp
mov
iret
mov
cli
mov
mov
push
jo
sub
push
lds
adc
cltd
test
popf
in
inc
mov
xchg
dec
push
xchg
stos
jecxz
arpl
pop
sub
mov
ljmp
dec
adc
scas
push
clc
push
pop
fcom
or
ss
fidivl
jp
mov
repz
pop
mov
loopne
push
add
dec
clc
aas
jle
dec
cmp
adc
mov
xchg
cmp
hlt
subl
and
xchg
jo
lret
sar
dec
mov
cmpsb
daa
mov
movb
mov
and
rolb
mov
adc
loopne
sub
mov
mov
out
sub
out
mov
cld
out
mov
inc
fcmovbe
xchg
lret
in
push
push
and
xlat
mov
rcr
jb
cmp
sarb
sbb
or
cwtl
pop
in
add
or
testb
lret
icebp
cmp
and
jmp
flds
sub
jle
call
js
repnz
outsb
pop
sub
sbb
push
xchg
lcall
add
je
stos
mov
fs
xor
cmp
lcall
dec
sub
xchg
call
cmp
mov
imul
call
sar
dec
adc
scas
dec
in
mov
sahf
jbe
dec
lahf
dec
and
or
aas
int
pusha
lea
pushf
scas
jns
mov
and
add
jmp
and
les
shrl
xchg
sbb
sbb
repnz
xor
icebp
push
mov
js
xchg
xchg
or
pop
aam
cmc
pop
ljmp
xchg
xlat
lahf
mov
popf
jb
adc
lea
mov
arpl
and
mov
jle
and
push
out
mov
xlat
lret
pop
imul
mov
xor
add
stos
mov
push
in
pop
mov
add
leave
pop
mov
jmp
inc
stos
loopne
shlb
inc
add
pop
hlt
data16
jb
sbb
fwait
cmpsl
stos
ja
jns
imul
sbb
in
aad
sti
pusha
verr
xor
nop
stc
jge
dec
cmp
mov
xchg
inc
icebp
mov
fwait
push
or
cld
adc
mov
bound
iret
pop
and
and
jo
fildl
arpl
mov
lret
leave
fwait
lods
scas
subl
test
mov
aam
sbb
cli
faddl
rcll
inc
xor
sbb
aad
lahf
fwait
xchg
call
insb
push
mov
popa
out
mov
cs
jge
ret
aas
std
es
jl
into
shrb
dec
xor
mov
cmp
add
es
mov
pop
mov
imul
or
cwtl
scas
imul
push
jbe
xor
mov
pop
and
mov
cmc
mov
mov
dec
outsl
mov
mov
mov
leave
push
mov
subl
dec
imul
mov
pop
push
xor
jns
push
call
shlb
and
rclb
cmpb
jg
in
gs
pop
pop
bndldx
xchg
mov
outsl
cmpsb
push
addr16
cmp
mov
adc
gs
mov
dec
cmpb
mov
lret
or
adc
push
push
pop
mov
stos
movsl
sub
push
rcrb
and
sbb
out
dec
xchg
xchg
fists
push
mov
jns
out
mov
add
fimull
mov
scas
stos
xchg
adc
lea
add
sub
or
stc
fs
leave
jmp
lods
pusha
loop
js
mov
mov
push
dec
or
mov
adc
add
mov
mov
cmpsl
xchg
mov
cmp
sbb
xor
shrl
push
std
pop
inc
cmpsl
icebp
arpl
push
cmp
mov
les
rorb
inc
bound
dec
cwtl
aad
std
cmp
adc
or
jl
cmpsb
xchg
ljmp
mov
sub
mov
sbb
cmp
ret
xor
cli
lret
clc
in
dec
popf
push
imul
aam
mov
and
pop
jg
xchg
imul
xchg
scas
add
jns
insb
lahf
cmp
scas
stos
cmpsb
fisttpll
stc
adcb
mov
jmp
and
cmpsb
subb
fiadds
jmp
xlat
sahf
test
pop
fcmovu
shlb
ja
iret
cli
rol
xchg
mov
out
or
lods
into
sar
mov
aad
hlt
dec
mov
cmpsl
popl
jnp
sub
aaa
adc
push
and
fsubp
or
scas
scas
outsl
mov
cmp
sti
ja
lcall
fmuls
jo
jmp
arpl
pop
divb
mov
sub
pop
inc
push
addr16
sub
dec
push
mov
pop
nop
jg
and
fdivs
stos
scas
adc
cmp
clc
add
out
out
xlat
nop
hlt
negl
lods
ljmp
das
repz
cmp
fs
jnp
xchg
loope
shlb
sbb
dec
sbb
mov
mov
jge
push
int
in
and
out
ret
repnz
sbb
mov
jne
pop
shlb
hlt
mov
xor
pop
scas
aad
cltd
lock
xor
je
xchg
push
cmpsb
push
loope
mov
jae
movsl
mov
mov
nop
fsubrs
jns
call
push
dec
aad
mov
jne
mov
sar
lods
sub
xchg
clc
push
mov
inc
pop
xchg
push
mov
sbb
out
mov
and
enter
outsl
mov
iret
mov
push
gs
int
jae
hlt
pop
bound
pop
sub
pop
cmc
aam
hlt
mov
mov
in
jmp
sar
jle
mov
add
push
xchg
addl
pop
add
lods
push
fdivr
pop
movsl
push
out
call
andl
inc
fwait
push
sub
out
lret
adcl
sti
ret
imul
aas
pop
push
test
dec
sahf
aam
leave
jmp
dec
mov
cmp
sti
sbb
add
bswap
jmp
cmpsl
test
popf
mov
ret
in
fsubr
pop
lock
mov
stos
imul
lret
stc
mov
hlt
stos
cmpsb
push
or
jo
sub
adc
cmp
mov
mov
sub
lock
popf
ljmp
and
jle
aas
rcrl
iret
mov
jmp
rorb
dec
int3
jle
xor
push
push
mov
xorl
ds
ja
into
pop
xchg
mov
cwtl
and
cmp
mov
jp
lea
stos
xchg
imul
fldt
popf
dec
sbb
in
cli
xlat
dec
test
cltd
mov
ja
cwtl
add
adc
xor
movsl
sbb
fsubrp
sbb
sti
push
ja
dec
fstps
dec
mov
stc
iret
ret
lock
cmpsl
adc
out
sti
inc
jbe
mov
cmp
sti
pop
std
mov
outsl
sbb
xor
or
std
jp
arpl
xor
sti
clc
mov
push
enter
stos
iret
test
pop
push
xchg
hlt
divl
testb
pop
inc
out
xchg
pop
sbb
hlt
cwtl
add
ret
out
jo
push
push
mov
jbe
repnz
cmp
int3
ret
mov
insb
out
inc
icebp
test
sub
jle
imul
sti
ficompl
jb
sbb
lret
xor
mov
movsl
loopne
and
jp
sub
out
stos
fdiv
repnz
pop
ret
and
and
sar
bound
and
andb
scas
out
jge
jbe
sbb
lret
in
mov
jge
jmp
inc
mov
popf
add
jg
adcl
mov
mov
jecxz
adc
lods
or
outsb
xchg
add
xchg
aam
sbb
popf
shl
jno
or
xchg
pop
aaa
jo
loope
push
outsb
sbb
cmp
ret
insb
mov
pop
sbb
add
add
fidivrs
ds
adc
push
mov
jg
and
inc
push
clc
in
out
mov
mov
call
pop
push
xor
push
jno
hlt
stos
add
lret
cmc
pop
cmova
mov
jae
mov
lods
sub
mov
pop
insl
arpl
sub
sub
cwtl
xchg
jns
or
nop
jnp
sarb
test
lock
add
loop
lock
sub
or
je
xchg
adcl
mov
sti
ja
jmp
pushf
xchg
lds
dec
bound
or
icebp
xchg
push
filds
pop
pushf
scas
data16
call
mov
repz
shr
int3
mov
cltd
dec
hlt
test
lahf
cwtl
push
faddl
rcl
iret
je
or
fiaddl
sahf
sbb
inc
enter
adc
call
in
or
popa
fisubl
nop
call
inc
iret
cmp
dec
sub
mov
scas
jmp
aas
ljmp
leave
inc
xor
xchg
outsb
jnp
fdivl
shll
mov
mov
mov
dec
gs
add
fistps
aas
in
cmpb
jl
out
cmp
xchg
push
out
pop
jb
cmp
imul
push
jo
test
push
fidivrs
mov
loope
mov
fistps
loopne
addr16
or
cmp
pop
cmpsl
repnz
xor
in
dec
adc
scas
aaa
ret
ds
cmp
bound
sbb
sahf
push
imul
es
or
insb
pusha
xlat
ret
stos
das
ja
lahf
dec
icebp
dec
sti
and
out
jbe
fnstenv
mov
test
jne
and
sub
adc
icebp
lock
push
jo
in
out
ret
adc
jle
jns
les
addb
mov
sub
xchg
test
xchg
fists
in
sahf
imul
inc
rorl
mov
mov
mov
adc
mov
push
inc
lock
mov
sbb
or
xchg
dec
push
jnp
push
js
test
or
les
lock
mov
lcall
or
pushf
pop
sub
lock
push
dec
pop
sbb
push
daa
outsb
inc
sub
push
pop
add
fsubs
mov
xchg
pusha
adc
mov
pop
ja
xchg
inc
mov
xchg
push
cmp
dec
or
dec
pop
lcall
pusha
pusha
push
xchg
and
inc
out
adc
das
test
ds
insl
jmp
out
arpl
dec
mov
imul
and
xchg
cld
push
or
xor
data16
fcoms
and
das
lock
xchg
test
cli
push
dec
loope
sbb
dec
aas
or
mov
sub
daa
dec
xchg
inc
ret
push
fisubrs
adc
inc
lret
inc
jae
mov
out
inc
mov
mov
and
adc
inc
jns
pusha
out
mov
or
fisubrl
aaa
ror
test
or
into
in
test
fcmovne
inc
pusha
xchg
jnp
repnz
sti
test
bound
and
clc
mov
jo
imull
lret
dec
lock
mov
pop
and
fsubrs
mov
push
sti
scas
test
lahf
cwtl
movsb
and
cli
iret
sets
test
cli
and
dec
xor
push
mov
ret
icebp
mov
int
add
adc
cmp
icebp
scas
cltd
fcoml
xchg
cmp
lods
jecxz
lock
adc
aaa
in
cwtl
xlat
jne
adc
mov
pop
adc
hlt
in
js
loope
adc
fsubl
or
mov
sub
rclb
sub
lret
test
push
or
dec
mov
mov
or
loop
outsb
cmp
jp
adc
add
add
jns
and
outsl
std
sbb
inc
fiaddl
or
jmp
xchg
xor
movsl
push
fistpll
pop
xor
sahf
pop
push
cmpsl
mov
popa
sbb
xor
jg
push
cmp
cmp
ljmp
and
and
cmp
pushf
pop
jecxz
mov
stos
jb
les
lret
aaa
int
test
lods
icebp
movsl
xchg
pusha
and
imul
mov
lock
jp
mov
sbb
push
jmp
jnp
jno
aad
imul
adc
jbe
stos
test
loopw
inc
stos
cmp
sub
mov
adc
cmp
hlt
aam
lret
sub
mov
std
aad
sub
andb
enter
mov
dec
mov
xchg
outsb
jns
shl
jecxz
push
push
cmp
dec
incl
mov
push
dec
adcl
loop
sti
in
stc
mov
and
pop
push
movsb
xchg
pop
loop
dec
es
out
cmp
ljmp
push
ret
push
jmp
shl
mov
sub
sbb
gs
mov
sub
push
push
sub
xorb
xchg
inc
and
mov
stos
pop
pop
aam
ret
loop
sbb
fisttpl
imul
fdivrl
lds
sbbb
into
pushf
or
mov
mov
xchg
jmp
gs
out
test
ret
jo
hlt
cmp
aam
pop
cs
dec
sub
test
pusha
add
in
stos
xorl
fstpl
js
aad
push
and
loope
dec
mov
xor
aad
pop
je
test
mov
xchg
mov
pop
leave
dec
xor
xchg
out
adc
gs
adc
cmp
inc
xor
mov
add
lea
ss
fcoml
sbb
loope
mov
into
fistl
push
scas
out
inc
push
mov
lea
cmp
testb
testl
in
nop
hlt
lock
push
cli
ret
shlb
loope
mov
aad
add
outsb
mov
dec
shll
adc
or
stc
das
bound
loopne
xor
cmp
xchg
in
std
arpl
cli
jge
stos
mov
ret
inc
loope
jae
mov
dec
jp
test
arpl
fstpl
dec
daa
jl
nop
sbb
xor
add
mov
scas
fsts
insb
lds
aas
iret
lret
or
dec
mov
or
bound
pop
lret
arpl
sbb
enter
cmc
pop
sbb
out
push
cwtl
icebp
push
rcrb
jae
repz
int3
repnz
cmp
sbb
dec
es
jmp
jo
mov
pushf
call
imul
cmp
ds
lea
js
push
add
xchg
orl
movsl
jnp
mov
and
jle
aaa
mov
xlat
lea
into
scas
jo
ja
or
cmpsb
xchg
adc
stos
je
outsl
mov
gs
dec
popf
or
lock
pop
bound
push
lahf
icebp
rcrb
out
lret
xor
and
nop
aad
cmpb
fsubrp
ss
sbb
jne
outsl
jo
out
inc
xor
xor
jmp
loope
icebp
mov
pushf
sub
fisubs
imul
cmpsl
out
xchg
scas
test
rorl
je
cmp
fwait
and
scas
jne
xchg
loope
fisttpll
adc
test
stos
add
or
adcb
xor
icebp
ret
sbb
leave
add
pop
xchg
ss
xlat
adc
add
mov
pop
ljmp
xchg
stc
and
jg
in
and
test
shrl
xor
mov
jge
xchg
pop
add
inc
xchg
jb
xchg
inc
mov
or
loopne
leave
pop
das
xchg
cli
add
push
aaa
cmp
fstpl
add
xchg
mov
leave
cmp
inc
jo
lcall
test
je
jae
push
jae
adc
xlat
jl
jp
hlt
ljmp
sbb
pop
add
out
mov
dec
sub
mov
imul
xor
out
cmp
test
stos
mov
pop
sub
inc
push
sahf
push
dec
mov
and
cld
sarb
mov
push
dec
mov
pop
inc
sahf
xor
lock
jns
ret
push
add
fsubl
cs
mov
shl
outsb
nop
push
ret
jg
nop
or
xlat
jne
mov
lret
mov
jns
push
cmc
jmp
sbb
push
mov
mov
inc
iret
adc
xchg
shlb
popa
add
adc
jmp
std
js
pop
jg
mov
and
js
and
clc
pushf
popf
out
lods
imul
loop
mov
push
test
dec
addr16
cmp
dec
leave
mov
lcall
inc
mov
adc
add
jno
mov
faddl
call
jl
test
leave
sub
sarb
mov
pop
fs
mov
mov
xor
jbe
andb
movsl
out
enter
push
adc
mov
rcrb
loop
ret
push
cwtl
mov
andl
push
loope
cmpsl
sub
mov
stos
mov
testl
cs
jle
sbb
sbb
leave
lret
fsts
pop
dec
xchg
mul
xor
into
mov
imul
push
dec
lahf
mov
aam
scas
xchg
dec
jo
aad
and
repz
add
pop
notb
jno
pop
push
pop
ds
aad
adc
mov
cmpl
test
jl
shrb
push
test
aad
lcall
dec
arpl
push
nop
jle
mov
jle
mov
adc
pop
sbb
inc
movsb
cmp
notb
add
repz
arpl
push
inc
inc
adcl
cwtl
inc
dec
jmp
cmp
scas
aad
inc
int3
pop
daa
call
jo
popl
lret
insb
cli
ljmp
shll
sub
aam
xchg
adc
lds
loope
and
movsb
or
lahf
dec
lea
fwait
add
je
inc
jnp
ss
and
sbb
into
rcrl
movsb
xchg
adc
xchg
mov
adc
rcll
dec
call
shll
jns
mov
xchg
or
test
jecxz
out
and
test
fisubl
pusha
inc
int3
fcoml
flds
push
add
pushf
in
loope
and
dec
leave
mov
enter
in
adc
pop
test
fcoml
xor
outsb
les
int3
xor
lock
xchg
xchg
adc
xchg
ret
bound
add
cmp
cli
mov
or
push
jnp
push
subl
add
in
ficomps
stos
mov
rol
xor
rclb
lock
divl
imul
gs
mov
xchg
lret
imulb
or
test
push
xorb
in
imul
sbb
xchg
pop
icebp
mov
sbb
mov
imul
es
iret
xor
fadd
test
scas
shll
in
cmp
imul
xor
outsl
sbb
sbb
sti
lds
push
arpl
jno
inc
movsl
mov
pushf
sub
and
mov
ffreep
popf
push
push
sub
mov
sub
lods
aad
mov
xchg
pop
jmp
cld
sub
mov
push
in
imul
adc
movsl
sub
lea
sbb
in
mov
mov
mov
cmpsb
negl
jl
cmp
mov
repz
mov
xchg
mov
cwtl
push
mov
jl
stos
adc
cs
dec
test
xchg
jcxz
fwait
aas
inc
decb
lahf
xchg
mov
xor
sbb
xor
hlt
mov
rcl
in
mov
adc
jns
or
out
or
push
sub
int
fistl
and
sahf
addr16
xchg
cltd
xor
xchg
lret
jl
mov
xlat
push
push
inc
mov
out
aas
push
sbb
cmp
xchg
and
jnp
xor
popa
js
enter
out
pop
dec
xor
pop
jmp
dec
add
inc
and
xchg
sti
xlat
rorb
inc
int
xor
lds
cmpsl
loop
and
xor
into
js
inc
sub
xchg
movsb
adc
jl
pop
jg
mov
or
mov
and
cmc
shll
into
push
arpl
mov
fwait
iret
cld
mov
pop
jg
jne
stos
xchg
and
into
push
xchg
mov
mov
shrb
xlat
jl
xchg
adc
in
out
std
jecxz
stos
lret
sqrtps
jl
sahf
inc
fcomps
cmpl
xor
ret
mov
out
test
das
mov
repz
adc
mov
xor
test
cltd
fsts
sub
mov
mov
decb
mov
fxch
and
insl
aaa
test
xorb
sbb
sarb
jne
jne
push
or
jge
lds
out
mov
insl
leave
dec
pop
inc
dec
hlt
aaa
std
sub
pusha
dec
mov
divb
fbld
sbb
ret
and
push
or
outsb
mov
test
jne
pusha
outsl
xchg
jae
aam
in
add
pop
jmp
cmp
dec
pusha
dec
aad
and
dec
xchg
push
fsubs
and
or
neg
je
push
pop
xor
jo
out
adc
pop
and
xchg
xchg
push
loopne
mov
sbb
sbb
inc
and
pop
mov
xchg
dec
leave
inc
mov
mov
adc
xchg
pop
bound
decl
sti
adc
xchg
add
pop
dec
es
shll
mov
mov
pop
cmp
and
mov
stc
inc
jbe
add
int3
icebp
xor
nop
xchg
addl
test
jle
fwait
js
xor
std
sti
mov
adc
sbb
sbb
mov
mov
push
mov
dec
in
and
xor
pushf
movq
pop
stos
dec
jmp
xorb
xchg
sub
loop
sarl
push
into
add
sub
int3
adc
push
mov
sbb
jno
sbb
fs
jo
cs
into
popf
pop
push
in
stos
mov
and
jno
dec
inc
fwait
pop
js
push
fistl
decl
stc
arpl
pop
cmp
ja
fwait
pop
pushl
loopne
mov
shlb
fistpll
mov
push
lcall
lea
pop
jb
int3
cmpsl
out
loopne
or
dec
or
cs
cmpsb
pop
test
pop
push
loop
adc
fs
add
sub
dec
out
add
ffree
pop
add
mov
cmp
dec
mov
push
push
scas
js
jae
mov
adc
mov
mov
movsb
rcll
push
and
mov
add
adc
mov
nop
mov
sbb
mull
das
inc
fstpl
lods
dec
inc
add
das
fmull
mov
cld
and
dec
pop
test
and
adcb
xor
pop
fwait
lret
lcall
mov
loope
mov
cld
inc
add
and
mov
call
lcall
jae
orl
scas
mov
ret
xlat
ss
ds
and
cmp
xchg
iret
adc
stc
cmp
xchg
push
filds
inc
sbb
and
cwtl
aad
lods
mov
cmp
mull
das
loop
fldl
or
in
inc
lret
or
inc
aam
enter
mov
les
scas
jg
popf
out
and
scas
jg
xchg
loopne
xchg
jns
pop
bound
and
push
xor
dec
add
rcrl
dec
lahf
sbb
movsb
push
inc
call
out
popf
mov
dec
push
xchg
adc
mov
push
xchg
xchg
and
or
or
mov
mov
lahf
dec
jle
mov
sahf
es
inc
mov
int
and
dec
enter
mov
cli
inc
dec
stc
jecxz
sub
ret
outsl
or
enter
ljmp
xor
aam
iret
into
mov
bnd
pushf
sub
xlat
loope
push
into
or
dec
stos
std
pop
int
inc
push
sbb
in
sbb
sahf
loop
sbb
jle
fld
sbb
ja
fsubs
cmpsb
mov
pusha
inc
sbbb
lea
loopne
mov
cmpb
jae
inc
xchg
jle
mov
cltd
jp
xchg
int3
jb
scas
pushf
mov
mov
sbb
mov
xchg
test
sbb
bound
cld
dec
insb
dec
test
push
test
cmp
lret
subb
pop
mov
adc
sub
inc
mov
ja
sbb
sbb
dec
push
leave
adc
jge
call
enter
ljmp
arpl
xchg
sub
mov
mull
movsl
jmp
xchg
repz
mov
and
addl
stc
pop
dec
fs
cmp
daa
daa
lods
hlt
test
dec
lea
xor
cltd
jp
add
ljmp
push
sub
test
lcall
xchg
and
mov
or
dec
push
inc
aas
cld
add
xchg
mov
inc
push
add
icebp
mov
jnp
add
pop
lock
rcrl
jecxz
jl
pop
sbb
push
pop
mov
test
jge
push
push
xchg
roll
fbld
daa
xor
or
mov
and
mov
add
jl
decl
xor
stc
in
inc
insb
pushw
std
repnz
xchg
dec
pushf
pop
daa
or
out
jbe,pn
or
loope
cmp
mov
sbb
mov
lea
test
mov
and
repnz
adcl
cmp
loope
adc
sub
push
and
and
push
in
jl
sub
dec
int3
out
pop
icebp
mov
cmp
cld
mov
jbe
xchg
cs
fsubl
adc
stos
cmpsb
lods
int3
loope
sub
movsb
xorb
popa
aam
roll
mov
and
jns
push
clc
js
pop
in
test
sub
sbb
xchg
ret
stos
cmp
in
jmp
lock
movsb
adc
pushf
xchg
inc
xchg
sbb
mov
cmp
dec
stc
rorl
push
nop
jge
xchg
pop
outsl
insl
xchg
xchg
pop
call
jne
sub
leave
cmc
movsb
jle
and
fdivr
xor
cmpsb
mov
dec
inc
dec
mov
pop
adc
pop
mov
jb
pop
sbb
mov
repnz
stc
xlat
lret
imul
and
pusha
neg
adc
shrb
repnz
pop
pop
sbb
jge
xor
adc
xchg
cmp
call
and
pop
jno
das
adc
frstor
fsts
leave
push
mov
cmp
add
push
cli
dec
fsubl
pop
sub
push
pop
in
or
mov
ret
pop
push
cwtl
and
repnz
in
sub
rcl
push
sbb
test
sub
test
and
push
jo
out
fidivs
in
loope
jns
inc
sbb
sub
sub
mov
cmp
dec
ds
cmp
push
ss
test
iret
out
dec
insb
push
insb
mov
pop
and
lea
sub
insb
xchg
mov
ja
add
sub
mov
test
sbb
jns
add
mov
insb
mov
inc
fbld
push
mov
mov
cmp
mov
push
hlt
add
aaa
sahf
mov
adc
xchg
nop
or
or
adc
cmp
and
mov
push
lret
repnz
pop
sub
sub
lret
aad
mov
adc
pushf
add
dec
mov
popf
xor
add
shll
or
push
fdivrs
jne
fstpl
stc
movsl
imul
mov
cli
ja
xchg
pop
mov
xor
sbb
sub
ja
jp
mov
mov
xchg
das
jmp
sbb
mov
jl
imul
jge
or
jb
jl
mov
pop
les
jle
jnp
dec
clts
pop
stos
sub
into
mov
mov
test
jge
loop
cld
fldcw
adc
push
mov
adcb
lcall
prefetchw
push
mov
cmp
push
pop
cmp
cmp
stc
scas
sbb
mov
sub
push
mov
out
aad
or
mov
push
roll
test
fstpl
mov
into
push
icebp
scas
xchg
pop
hlt
and
sub
js
stos
pop
push
scas
or
mov
fcmovnb
bound
clc
sbb
cmp
cwtl
loope
sahf
and
sbb
sti
call
pusha
pop
push
out
mov
lret
stos
and
jnp
outsl
xor
push
in
cmp
enter
pop
std
jmp
and
dec
pop
adc
lahf
push
xchg
mov
in
sbb
idivb
sub
push
inc
clc
test
out
jnp
sub
loop
mov
xlat
out
jo
jecxz
push
aam
dec
sbb
mov
jnp
cld
ret
jmp
js
rcr
cmpsl
jnp
xchg
and
sbb
jge
ret
ja
lods
xor
dec
test
push
mov
arpl
pusha
mov
popf
add
testb
cmpsb
dec
sub
fcmovnu
es
call
xor
lret
lds
imul
fstps
push
mov
sbbb
mov
lock
lods
std
jp
rcrb
stc
sbb
inc
add
jl
mov
mov
ljmp
pusha
inc
or
enter
stc
jecxz
pop
adc
lock
lret
in
jne
mov
sahf
mov
rcrb
sub
leave
add
idiv
faddl
aad
cmp
pop
je
adc
add
jo
xchg
les
fidivrs
call
xchg
or
clc
movsl
rcr
call
gs
pop
mov
xlat
cli
push
gs
pop
mov
push
push
or
fwait
repz
push
jmp
xchg
cmp
int
sbb
jne
xor
xor
sti
pop
cmpsl
and
jle
xchg
jae
bound
out
andb
add
in
fwait
push
inc
cmc
jmp
jae
mov
pop
and
sub
push
jno
inc
or
mov
lcall
sub
cwtl
jmp
fwait
mov
sbb
adc
pop
jbe
dec
dec
mov
aaa
incl
lret
fisttpll
int
scas
xchg
add
test
xchg
mov
or
loop
adc
jo
stos
xor
mov
pop
adc
movsb
scas
sbb
lods
fidivrs
pushf
test
aad
xor
rcl
and
sbb
jae
orb
cmp
mov
mov
lahf
inc
sti
mov
push
aas
jmp
int
test
jo
rol
imul
addr16
mov
daa
cmp
mov
jnp
mov
shll
push
cmp
negb
xor
dec
cwtl
test
dec
xchg
dec
xor
fwait
mov
xchg
mov
movsl
pop
mov
adc
inc
mov
out
sarl
test
mov
ret
push
lahf
shrl
scas
dec
int
jne
dec
inc
mov
mov
xchg
sbb
es
dec
xor
adc
aaa
add
cmc
jl
sub
add
call
xlat
push
adc
dec
dec
aas
aad
and
cmp
ds
jp
inc
or
fwait
stos
pop
push
pop
mov
xlat
dec
mov
scas
pop
cli
sbb
pop
rcll
lcall
sbb
in
cmp
xchg
int
mov
inc
repnz
and
mov
movsb
add
mov
mov
mov
or
ja
xor
pop
jle
mov
mov
dec
mov
jmp
mov
decb
inc
testb
into
inc
leave
xor
mov
mov
gs
movsb
sub
pushf
cmpsl
pop
cli
and
orb
out
sub
cmp
fwait
sbb
cmp
pop
cmpb
daa
sub
xchg
mov
xor
sbb
lret
in
aaa
scas
es
jl
cmpsl
ljmp
dec
jno
jmp
cmp
test
pop
and
ds
pop
sbb
jmp
mov
dec
push
add
xchg
pusha
cmc
push
mov
mov
inc
mov
xor
in
pavgw
adc
mov
scas
stc
stc
mov
out
xor
ljmp
mov
push
xchg
cltd
outsb
add
ljmp
aam
fdivs
add
xor
stc
outsb
das
xchg
or
dec
js
and
repnz
jae
push
and
adc
push
adcl
adc
mov
aaa
pop
cmp
loopne
cmp
insb
lds
es
push
out
lods
jle
test
or
in
clc
sbb
mov
mov
loop
cmpsl
sub
sbb
pop
dec
scas
jecxz
data16
push
int
cltd
ret
cmp
jnp
push
mov
jns
dec
inc
cmpb
addr16
jmp
lcall
insl
push
cmp
or
add
inc
daa
xor
dec
lret
xor
pusha
xchg
in
push
faddl
mov
movsb
ds
mov
lahf
popa
cmp
jmp
mov
imul
and
sub
pop
jp
es
popa
sub
lods
ret
push
fistpll
cli
dec
mov
mov
jno
add
orl
dec
xchg
testl
fdivrs
add
mov
jge
push
push
cmp
mov
lock
mov
xor
addb
jp
jb
scas
stos
jle
gs
stc
lret
push
dec
cwtl
das
xor
hlt
dec
fimuls
adc
mov
jmp
mov
jmp
mov
popf
cmp
add
fwait
js
test
stc
fwait
push
into
and
sbb
jae
stos
arpl
test
sub
ds
xchg
inc
push
push
pop
out
jge
mov
push
outsl
cli
add
enter
popf
mov
inc
mov
inc
adc
adc
stc
dec
mov
jmp
test
mov
stos
mov
into
inc
jecxz
fisubrl
mov
in
jo
xlat
adc
insb
mov
pop
in
jo
inc
sub
jns
data16
sbb
ficoml
mov
sbb
sbb
cmp
loop
dec
ficoml
inc
mov
mov
dec
rorb
aas
sub
dec
rcrb
rcr
inc
pop
jne
xchg
pop
fxtract
insb
jno
add
fucom
mov
lcall
push
xor
and
loopne
test
cmp
testl
insl
ljmp
popa
mov
fiadds
imul
adc
sti
mov
mov
pop
frstor
lods
sbb
test
mov
sarb
mov
ror
mov
sub
add
xor
push
cmp
and
out
cmc
fstpt
ret
xchg
cmp
adc
mov
adc
jns
mov
and
mov
add
or
je
call
and
loope
insb
or
sbb
je
cmp
iret
pop
fistps
and
xchg
mov
or
pop
xor
cmp
xchg
lret
xor
pop
mov
add
push
pop
ljmp
ret
loope
subl
push
nop
lock
jae
cmp
cld
inc
jb
sbb
xor
sub
add
inc
mov
lods
xor
sbb
mov
inc
xor
hlt
pop
or
mov
test
loop
gs
out
hlt
stos
mov
mov
adcl
fbld
stos
dec
cltd
cltd
mov
imul
cmpsl
push
cmc
inc
pop
dec
outsl
mov
mov
sbb
rcrb
leave
repnz
mov
das
push
test
mov
dec
int3
sarl
mov
test
pop
xlat
roll
lcall
add
jnp
shl
dec
lea
adc
subl
cmpsl
aad
adc
push
mov
or
pop
ret
xchg
or
mov
dec
pop
sub
sub
mov
xchg
xor
cmp
bswap
and
stc
arpl
aad
xlat
gs
jb
adc
cmpl
xchg
add
xchg
sar
or
mov
mov
and
rcrb
enter
push
loope
lcall
fwait
repz
sar
and
pop
mov
cmp
xchg
and
jecxz
adc
push
mov
aad
cmp
fsts
in
mov
scas
gs
adc
ss
adc
jle
je
pop
inc
mov
aam
mov
lret
sub
inc
xchg
sti
loopne
cmpsl
pop
push
push
addb
cmp
test
cmc
fwait
xor
mov
jl
pop
into
js
or
out
mov
stos
dec
sahf
and
sbb
fimull
dec
shll
and
xchg
adc
sub
fwait
mov
fwait
xchg
ret
or
lds
jno
lea
iret
mov
repnz
cmpsb
xchg
sub
mov
ljmp
dec
push
mov
cmpsl
repnz
sub
jae
cmp
push
jo
mov
mov
loopne
cmp
mov
je
dec
mov
xchg
pop
sbb
leave
or
pop
pop
dec
ss
sub
sbb
repz
roll
es
cmp
xchg
dec
cmc
addr16
xor
aam
sbb
inc
lods
jmp
jl
decl
pushl
mov
fistl
pop
and
arpl
ret
ret
aam
mov
popl
sbb
or
ficomps
or
adc
ret
imul
imul
data16
jmp
mov
mov
pop
cmpsl
notl
inc
mov
and
jnp
ss
lret
movl
lds
cmp
and
daa
ret
push
and
add
dec
mov
adc
jo
xor
popf
sarl
mov
mov
sti
mov
call
jo
pushl
pop
out
cmc
mov
adc
out
mov
stos
xchg
sbb
dec
xchg
sbb
mov
in
orb
cmp
pop
pop
xchg
mov
adc
fidivl
fistps
mov
dec
mov
adc
mov
jae
adc
sbb
gs
scas
in
mov
loopne
xchg
inc
push
xor
test
cld
js
dec
jle
adc
fistl
add
xor
sarl
xor
filds
mov
lcall
imul
inc
lods
cwtl
adc
sbb
dec
dec
dec
ret
stos
clc
jnp
xchg
push
push
push
adc
push
push
add
je
adc
push
popl
aad
stos
gs
fcomps
add
push
std
and
sbb
mov
jb
and
xor
cmp
sbb
sarb
lret
out
inc
movsb
xor
mov
mov
add
movl
shl
jle
sarb
cmp
mov
jns
push
loop
or
js
xchg
js
add
mov
inc
loopne
adc
ljmp
orb
dec
add
int
in
fwait
jne
ret
ss
pop
jg
xchg
push
sub
imul
pop
push
mov
mov
fmull
jle
stos
cmpsl
aam
das
dec
and
aas
mov
movsl
xchg
loop
insl
repz
push
outsl
pop
mov
scas
xchg
sbb
jbe
xchg
mov
arpl
testb
in
and
xlat
int
sahf
and
inc
xor
xor
cmp
fisubl
aas
pop
sub
hlt
or
push
out
mov
pop
test
sub
dec
jno
jb
in
mov
and
cmp
insl
mov
sub
shlb
mov
xor
arpl
je
js
mov
adc
fstpt
mov
orb
loope
stc
loope
xchg
loopw
sahf
pop
xor
add
xor
test
ja
dec
filds
xor
mov
pop
nop
xchg
dec
cltd
mulb
cmp
outsl
xchg
xor
push
sbb
cmp
shll
sti
xchg
lds
cmpsb
xchg
push
xchg
xchg
push
dec
lret
mov
add
dec
daa
mov
mov
mov
inc
sub
lods
xchg
mov
push
leave
jb
inc
ret
adc
pop
push
sbb
cmp
out
inc
sub
sbb
lods
and
lahf
mov
ljmp
jb
xchg
cmpsb
dec
jmp
fs
das
imul
sub
das
jae
mov
out
das
adc
inc
popa
push
sub
sbb
scas
jno
xchg
sbb
stos
jmp
inc
lds
push
cmp
out
in
rorl
mov
mov
clc
pop
xchg
jnp
push
cwtl
push
movsb
sbb
iret
lods
insb
sarb
jmp
mov
je
insb
cmp
push
mov
fs
sub
andb
pushf
mov
adc
jmp
in
jo
jp
fimuls
fxch
rcll
dec
shlb
mov
into
mov
fildl
inc
cmp
sbb
mov
hlt
lret
xorb
shr
jb
leave
ds
lahf
xor
pop
and
into
jge
dec
jp
dec
and
mov
dec
pop
mov
sarb
movsl
push
inc
int
inc
lret
sbb
and
dec
mov
dec
pop
frndint
or
pop
and
les
sbb
dec
sub
inc
pushf
mov
aas
sbb
jbe
jg
sub
insl
add
in
xor
xchg
cld
imulb
push
ud1
mov
int
data16
ret
mov
xor
add
and
imul
outsb
shrl
and
push
mov
fnsave
loopne
jne
leave
fnsave
xchg
push
outsb
call
mov
jmp
or
rorb
pop
xchg
stos
jp
pop
mov
icebp
adc
fwait
xchg
lock
scas
daa
xchg
imul
cli
and
sbb
testl
mov
inc
cmp
dec
fldl2t
lret
mov
adc
mov
xchg
sbb
aaa
cmpsb
enter
sbb
pop
test
or
daa
mov
enter
rol
add
mov
dec
mov
push
ds
les
adc
stc
jl
sbb
pop
jmp
test
in
mov
mov
fnsave
push
mov
add
mov
shll
das
test
push
mov
enter
jecxz
mov
jmp
mov
and
hlt
scas
xchg
jmp
imul
mov
jmp
enter
imul
xchg
push
sub
pop
dec
pop
icebp
mov
imul
adc
aas
js
pop
xchg
cld
iret
adcb
arpl
mov
cmp
push
mov
mov
jns
clc
adc
pop
jne
mov
lods
mov
inc
and
pushf
ds
outsl
gs
inc
mov
cmp
push
push
mov
test
mov
or
mov
insl
lods
push
ljmp
sbb
popa
sub
mov
popf
pop
dec
sti
roll
les
inc
iret
xchg
mov
and
aaa
icebp
repz
aas
in
push
popf
adc
mov
orb
pop
inc
es
cmpsb
jno
imul
repnz
imul
mov
aad
and
and
inc
clc
jl
sbb
jge
pop
xchg
add
fcomps
cmp
lret
leave
dec
cmp
mov
ljmp
daa
cmpsl
or
pushw
or
rorb
ja
test
xor
ret
ljmp
dec
addr16
lods
jno
jl
push
orb
xlat
or
or
int3
adc
xchg
push
addl
pop
push
in
stos
lods
loope
push
and
std
ljmp
push
mov
fs
cld
shl
sub
pop
paddq
shlb
cmp
or
pop
mov
jle
repz
dec
jns
mov
pop
mov
stc
jle,pn
add
mov
sbb
and
pop
outsl
fs
jns
push
lock
dec
fmull
daa
mov
popf
repz
push
and
mov
stc
repz
outsl
sub
adc
fucom
testb
and
pop
scas
xchg
mov
or
dec
dec
xor
dec
add
dec
cmp
icebp
jb
ljmp
xor
sbbl
test
mov
sbb
data16
mov
outsl
sub
in
xchg
jg
push
repz
cmpsb
daa
rorl
jmp
push
jns
jnp
jl
dec
cmpsb
aaa
call
imulb
mov
outsb
sbb
mov
push
sbb
clc
addr16
mov
dec
test
lods
pop
and
subl
and
cmc
push
fnstcw
std
and
iret
pop
jno
cmpsl
and
mov
lea
jbe
and
mov
mov
jp
mov
pop
ljmp
mov
mov
dec
fstpt
dec
jecxz
sbb
aaa
rorl
inc
cmp
js
fs
nop
jnp
out
daa
adcb
in
xor
in
movsl
jecxz
mov
dec
mov
mov
jb
sbb
mov
mov
dec
mov
inc
inc
fs
out
push
int3
mov
or
ljmp
rcl
lods
fcmovne
xor
shlb
lcall
jmp
sahf
rcr
rorl
lods
lea
orl
es
iret
and
call
test
insl
mov
test
fistps
xor
out
stc
pop
push
mov
das
adc
xchg
dec
jne
inc
lcall
ja
rorb
pop
ret
dec
add
pop
out
push
or
jmp
lods
xchg
jmp
jle
movsb
push
xor
cmp
push
push
outsl
lods
pop
mov
stc
add
jbe
int3
adc
insl
pmuludq
sbb
add
adc
fwait
ret
inc
dec
outsb
les
sub
add
push
nop
jnp
ret
icebp
pop
mov
or
push
pushf
jno
mov
dec
jl
jmp
pop
mov
rorb
cld
stos
test
int3
insl
mov
ss
push
cld
loopne
mov
cmp
daa
mov
out
add
sahf
push
or
jl
cmp
pop
dec
test
out
lret
mov
insl
sub
mov
push
mov
push
inc
mov
insb
mov
loopne
and
in
mov
dec
stos
xor
xor
fsubrs
push
sub
jg
jle
mov
stc
repz
dec
into
add
lock
push
jnp
add
arpl
xor
mov
mov
sbb
xor
mov
adc
lea
sub
repz
xchg
fbstp
scas
mov
shll
cli
icebp
pop
leave
loope
mov
orb
jb
popa
push
xor
add
rolb
sti
fisubl
stos
sbb
ret
xor
lret
fs
sbb
fildll
fwait
stos
xchg
jecxz
pop
xchg
cmpsl
cmp
pop
iret
jmp
insb
psrad
iret
xor
mov
outsb
loopne
sbb
sub
scas
out
sbb
and
fisubl
and
inc
jg
enter
mov
or
push
icebp
jb
push
or
push
jmp
sbb
dec
dec
scas
movsl
and
or
jbe
loope
popf
sbb
gs
push
mov
xchg
dec
ljmp
xchg
inc
xorl
test
movl
stc
mov
adc
icebp
mov
movsb
mov
jbe
push
pushf
mov
cmpsl
dec
out
or
push
push
adc
addl
mov
cmc
bound
and
sbbb
push
jae
xchg
dec
outsl
mov
and
push
imul
icebp
insb
inc
adc
xlat
mov
xchg
mov
insl
sarb
jnp
and
lods
fstl
pop
and
jge
fdivrs
nop
sbb
mov
loop
and
pop
jb
das
xchg
loop
sub
fnstenv
fidivs
out
inc
lods
add
sbb
call
int3
shrl
outsl
mul
lahf
inc
inc
or
pop
push
outsl
pop
lcall
fidivrs
loopne
jle
and
and
gs
sub
in
out
xchg
ljmp
sbb
ffree
cld
cli
ffree
pop
dec
imul
push
cld
mov
insl
je
popa
jbe
xor
loope
ss
lea
test
out
andb
ljmp
sbb
stos
jnp
fcoml
pushf
xor
popf
cmc
outsb
std
jne
mov
loope
cwtl
lock
jns
fmulp
cmp
pop
cwtl
dec
jbe
std
jne
push
jnp
cmp
stos
sbb
xor
notl
lea
das
mov
bound
cmpsl
xchg
dec
push
or
dec
jo
push
cltd
jle
das
jae
cli
pop
fidivs
jecxz
adc
jmp
dec
or
push
in
ss
in
data16
lods
jbe
out
cwtl
sbb
push
push
mov
mov
or
sub
or
sbb
sbb
xchg
inc
cmp
out
push
clc
lods
pop
push
pop
mov
and
sub
and
mov
fs
inc
inc
fnstenv
ljmp
jnp
mov
call
inc
cmpb
cld
sbb
push
cmc
arpl
lret
aaa
mov
mov
ds
lock
mov
and
mov
shlb
jo
sbb
out
or
inc
jne
or
adc
mov
ret
rcrl
sub
adc
ja
sub
pop
cmp
pop
push
fidivl
cmp
push
jne
or
out
push
shr
in
stos
lret
cmc
mov
pop
cmc
dec
gs
mov
adc
mov
xor
inc
lret
test
mov
jae
jle
pushf
xor
mov
dec
insb
add
in
das
cltd
sub
cmpsb
and
div
pop
pop
call
push
movsl
add
insl
fidivl
insb
ret
inc
lea
cmp
push
int
jle
ficoms
testb
cmp
out
mov
and
bound
lods
or
inc
fisubrs
push
fisubrl
in
cmp
test
xor
push
addr16
in
ret
jg
dec
lahf
sub
add
inc
mov
ds
gs
xor
xchg
pop
cli
ret
ror
cwtl
std
mov
leave
jmp
sbb
xchg
adc
mov
xor
jbe
mov
out
inc
inc
into
lock
cmp
rcrb
mov
ret
cmp
xor
pop
out
push
mov
dec
in
arpl
push
add
jae
sbb
std
lea
daa
adc
andb
mov
mov
push
cld
xchg
lock
test
cmpsb
push
push
jns
sub
or
insb
mov
fldpi
adc
loope
mov
adc
pop
dec
jno
jecxz
pop
inc
mov
sub
rolb
call
loopne
ljmp
jge
mov
lea
push
shl
insb
add
hlt
cmpsl
jge
xchg
loopne
stos
mov
test
fsts
cmc
out
cmp
cwtl
clc
adc
out
mov
and
sub
orb
int
or
cwtl
stos
and
into
add
adc
adc
adc
adc
inc
ret
dec
jg
cwtl
mov
mov
popa
jl
jle
cmp
aas
pop
fidivrs
lods
ja
cltd
adc
push
icebp
ss
xchg
loope
mov
js
ror
mov
cmp
xchg
mov
loop
dec
push
mov
outsl
jno
out
and
or
xor
cld
js
and
cld
sbb
jns
xchg
sbb
loopne
leave
sbb
rol
idiv
imul
popa
icebp
sbb
adc
adc
andb
mov
sahf
xadd
inc
pop
or
mov
div
dec
sbb
dec
pop
int3
icebp
adc
pop
push
sbbb
xchg
push
push
mov
dec
inc
in
xchg
imul
or
push
push
sbb
ret
hlt
mov
cmpsb
adc
pop
inc
ds
fnstsw
out
mov
aam
sti
mov
add
push
sub
movsl
dec
mov
dec
inc
xor
in
xor
dec
js
push
push
hlt
mov
mov
fstl
movsl
das
ror
dec
sbb
clc
xchg
inc
inc
cmp
pop
or
xchg
js
mov
insb
fldlg2
data16
dec
or
bound
in
or
xchg
popf
clc
stos
dec
pop
shlb
aam
dec
ss
test
orb
enter
fsubs
mov
jl
inc
pop
push
aam
add
mov
dec
inc
xor
int3
insb
mov
dec
dec
mov
jno
push
xchg
push
nop
add
dec
lahf
inc
jno
mov
sub
xchg
fidivrl
push
inc
addr16
out
mov
divb
or
mov
cmp
push
stc
cmpb
call
xchg
mov
cmp
stc
or
lcall
mov
mov
mov
mul
out
inc
xchg
js
popf
add
lahf
ljmp
pop
shll
bound
push
out
out
into
aas
orb
lret
sub
adc
cmp
aad
hlt
lahf
iret
pusha
xor
in
pusha
divl
xor
fidivrs
subb
mov
das
or
aaa
pop
fsubp
xchg
jmp
adc
xchg
clc
cmpb
mov
pop
cmpsb
stos
cmpb
mov
or
adc
mov
push
push
adc
sub
ret
lock
jmp
mov
ret
xor
mov
repnz
inc
test
pushf
in
in
mov
jbe
cmpl
mov
mov
and
add
test
xchg
push
jns
popf
and
nop
push
xchg
mov
cmpsb
sbb
adc
arpl
xchg
jg
push
das
adc
xor
xor
push
out
loopne
mov
fimull
fsubrs
fisttpll
stc
add
pop
iret
dec
push
movsb
mov
pop
xchg
sbb
and
push
lcall
das
ret
cltd
add
jp
pop
xchg
jo
jle
mov
enter
fdivl
sbb
mov
scas
sahf
sub
jp
sbb
nop
les
mov
jl
out
iret
push
stos
push
in
sti
push
push
pop
mov
scas
dec
mov
push
inc
xlat
js
sub
cmc
cmp
push
lahf
inc
enter
mov
rcrb
cmp
add
cmp
enter
movsb
ds
xor
int
les
arpl
xor
hlt
sbb
xchg
push
sbb
pop
aam
jnp
std
or
mov
dec
icebp
fdivrl
fbstp
addl
lcall
mov
fldl
xchg
adc
add
dec
inc
mov
call
xchg
mov
outsl
cltd
lock
xchg
lock
ret
cmp
lock
dec
pop
inc
mov
in
xchg
xchg
pushf
insl
cmp
push
inc
pop
cs
xchg
aad
jmp
cwtl
jae
cmpsl
test
jno
and
movsl
jle
lcall
popf
jle
in
push
divl
mov
push
add
lock
add
inc
rorl
jg
ja
mov
popa
mov
xor
imul
psadbw
cs
dec
fcmove
scas
sbb
mov
out
mov
sbb
jae
and
adc
int
mov
gs
jnp
loopne
aas
fincstp
and
or
decl
test
add
or
push
iret
or
jle
movsl
aam
sub
popf
hlt
cmpsl
in
hlt
dec
aaa
mov
js
pusha
test
repz
mov
addr16
xor
pop
shll
aaa
add
mov
jle
mov
sbb
add
mov
stos
stc
xchg
fists
adc
push
mov
sub
movsl
and
pop
dec
cmp
cmpsl
jne
push
jecxz
inc
shlb
into
mov
pop
add
loope
jp
or
popf
jge
jecxz
shl
fstpt
iret
mov
ds
in
mov
cmp
and
xchg
mov
jnp
pop
idiv
sarb
cmp
jle
mov
xchg
pop
add
add
aam
int3
inc
aam
xchg
cld
inc
xchg
jne
or
dec
nop
sahf
pop
jb
mov
lret
push
pusha
xor
dec
sub
popf
daa
in
xor
add
xchg
cmp
and
mov
push
push
clc
insl
in
loope
cmp
js
jno
fwait
in
test
mov
push
sub
add
fmuls
out
in
and
in
outsl
mov
enter
js
xor
loopne
enter
jbe
dec
mov
lock
mov
xor
rcll
rorl
jmp
adc
or
push
mov
and
sbb
jno
jne
in
mov
add
pop
ljmp
fldt
mov
sbbb
fdiv
jecxz
out
leave
lahf
in
stos
stos
inc
sbb
or
mov
es
loop
je
and
jb
lahf
shlb
jb
jne
stc
sar
pop
loope
lcall
mov
hlt
cs
jl
add
iret
adc
lods
adc
cmpsl
jnp
push
sarl
nop
dec
lds
in
inc
pop
mov
push
dec
cmp
ja
xlat
lds
cltd
or
inc
in
enter
sbb
sbb
xor
fistl
stc
sub
sub
cmp
int3
mov
push
test
adc
jb
add
lcall
lds
call
mov
sbb
mov
jg
push
loop
fs
add
int
mov
sub
push
subb
cmpsb
mov
mov
cmp
xchg
add
dec
pop
add
cmp
frstor
lcall
je
in
xor
jl
mov
sub
mov
popf
mov
cld
cmp
mov
adcb
mov
mov
sub
enter
inc
jno
inc
testl
dec
jae
stos
cmp
add
jne
js
push
dec
mov
push
cld
dec
xchg
inc
xor
fisttps
out
loopne
push
loopne
xchg
pop
lcall
and
out
jge
ret
arpl
scas
add
jno
mov
pop
pop
sarl
xor
adc
stos
add
mov
mov
stos
rclb
movsb
mov
sbb
mov
sahf
inc
push
add
push
push
cmp
ret
jbe
pop
pusha
sub
and
inc
aad
subb
push
stos
out
fstpt
popa
push
addl
sbb
fistpl
or
mov
or
jbe
sbb
cltd
pop
xor
fs
lods
jle
add
dec
pop
negl
jge
in
jg
cmpb
das
insl
bound
mov
or
or
loop
or
lds
xor
mov
xchg
out
mov
lret
sahf
rolb
cmpsl
iret
push
jle
leave
mov
sub
rolb
out
ds
loopne
mov
jne
aaa
sub
test
scas
mov
dec
in
pop
out
push
dec
push
nop
push
pop
add
push
inc
cmc
xchg
lret
fisttps
adc
xor
jb
mov
leave
jle
adc
fildll
pushf
fstpl
mov
xorl
mov
pop
cmc
mov
enter
dec
sub
cmp
out
mov
pop
not
std
xchg
fistpll
inc
inc
inc
jmp
push
addr16
adc
arpl
inc
or
pop
xchg
mov
jmp
stc
pop
jmp
mov
ds
iret
mov
cmp
pop
xlat
imul
lahf
scas
jo
mov
and
cmp
jb
mov
sub
cmp
stos
push
leave
popf
mov
fcom
idivb
and
in
stc
mov
ficomps
add
movsl
iret
out
xchg
es
push
mov
test
icebp
iret
mov
cmp
push
ja
lret
and
xchg
mov
jb
pop
inc
xchg
cmp
jp
in
cmp
cmp
xorb
hlt
xor
out
test
out
push
jbe
aad
fwait
shrb
ds
xchg
mov
pop
pusha
xorl
nop
xor
sub
jecxz
fs
jg
movsl
in
sub
xlat
out
sbb
add
jecxz
xchg
or
lcall
mov
out
jbe
xlat
jg
jp
adc
push
js
pop
or
adc
mov
insb
gs
mov
and
xor
daa
or
jae
enter
aad
inc
inc
and
stc
jl
or
in
cmp
jge
add
cmpsb
mov
movsl
mov
pop
cmp
negl
roll
xchg
orb
mov
repnz
repnz
sub
idiv
jmp
xchg
cmp
lods
cmc
xchg
mov
cld
repz
mov
inc
imul
dec
xor
pop
ljmp
decb
inc
int3
jge
push
xchg
insl
sti
fnstcw
nop
mov
aad
jns
or
lods
sub
out
pop
push
sub
adc
rcr
add
sahf
popf
adc
leave
adc
adc
sbb
jle
adc
sbb
add
pop
popa
filds
mov
sub
fidivl
jecxz
or
sti
test
stos
data16
sub
jbe
test
rclb
inc
inc
out
and
pusha
push
cmp
adc
mov
xchg
or
cmpsb
mov
inc
jle
mov
lock
mov
sub
in
scas
xlat
nop
inc
std
popa
sub
xlat
sbb
jl
or
out
xchg
in
repnz
xor
repnz
xchg
xchg
test
sbb
mov
sub
xchg
popa
inc
loop
lods
push
rcrb
and
addr16
jle
jp
incb
push
daa
mov
push
inc
fldt
pop
popa
rolb
or
sbb
cmp
xlat
mov
adc
pusha
pop
dec
loopne
out
lcall
stos
sub
pushf
out
lahf
cmp
lock
repz
mov
popf
add
loope
clc
lods
shrl
call
sub
cmp
out
pop
push
push
push
cmp
int
out
xor
mov
lods
jno
cmp
aas
fwait
mov
ret
insb
les
mov
pop
aas
negb
sbb
arpl
in
icebp
push
icebp
test
inc
push
and
jns
inc
pop
cmpl
inc
leave
xor
stos
fdiv
and
mov
notb
push
sub
jbe
inc
or
jl
dec
cltd
daa
fbld
push
xchg
fmul
push
push
inc
jbe
lock
popa
test
mov
mov
stos
xlat
aam
std
sbb
insb
or
xchg
sarl
incl
nop
or
push
arpl
cmp
mov
lods
call
decl
addr16
int
call
pop
inc
or
aam
xchg
repnz
in
jmp
and
rol
stos
mov
shlb
insb
mov
add
sarl
movsl
xor
imul
mov
cmp
es
ficoml
jbe
xchg
cld
inc
pop
repz
dec
pop
fstl
jle
test
inc
int3
add
jne
insl
cmp
pop
push
jo
mov
xor
mov
mov
cld
push
iret
andb
int3
adc
mov
enter
xchg
andb
cli
jge
fisttpll
xchg
cmc
cltd
repnz
lret
pushf
popa
xchg
pop
mov
mov
add
jmp
idivb
cmp
push
pusha
lahf
push
jecxz
cmp
cld
test
sti
movsb
dec
cli
jp
adc
mov
jge
fwait
cmpsb
fadds
mov
jge
mov
push
dec
mov
fdivr
ret
arpl
cmp
and
xchg
mov
push
rclb
mov
std
leave
dec
jae
adc
jmp
mov
push
mov
mov
notl
fwait
lods
sbb
add
ja
xchg
mov
jne
in
pop
cmpsb
lods
ds
loopne
cmp
xchg
add
pop
mov
or
xor
pushf
pop
loope
hlt
lret
and
std
ret
std
stos
adc
add
lcall
jle
insl
inc
fcomps
jmp
ss
xchg
pop
test
push
pop
gs
scas
addb
pusha
mov
in
sbb
inc
dec
rorl
mov
fdivr
inc
lahf
push
lahf
lock
mov
mov
pop
stos
call
jmp
mov
fistpl
jae
out
mov
xor
ret
inc
mov
pop
mov
mov
push
add
inc
lock
mov
lods
mov
cmpsl
sub
nop
mov
sbb
sti
inc
sbb
out
in
mov
gs
movsb
call
push
push
int3
pop
adc
cmpsl
int3
sbb
lods
push
mov
xor
pusha
sahf
aas
lods
fdivs
xor
and
dec
bound
imul
ret
jns
test
mov
push
adc
or
out
mov
push
jno
jno
test
jg
adcb
push
sbb
pop
dec
pop
ja
push
pop
mov
adc
fsts
aaa
fldl
dec
sub
cltd
dec
pop
cmpsb
shlb
xchg
pushl
inc
jge
sbb
jne
cli
lahf
pushl
xor
dec
mov
inc
aaa
leave
sub
shufps
mov
mov
and
addr16
sbb
add
add
lock
mov
es
pop
lods
fwait
xor
mov
int
or
adc
roll
es
gs
adc
outsl
dec
in
mov
push
cmp
jbe
pop
pop
and
inc
enter
cmp
out
imul
pop
push
jle
icebp
mov
or
pop
repnz
xor
cld
subb
and
xor
push
add
fsubr
pop
dec
or
fs
fidivl
mov
adc
inc
inc
xor
sbbl
cmpsb
push
cli
add
jp
psrlq
cwtl
mov
shrl
sbb
xchg
mov
dec
test
cmp
sub
push
add
mov
and
fbstp
xchg
jo
jbe
push
idivl
sub
fisttpl
hlt
out
scas
dec
shll
pop
mov
xor
shr
lods
test
and
mov
adc
psraw
mov
pop
icebp
es
imul
ret
cmp
js
adc
bound
pushf
xchg
dec
dec
mov
xchg
cmp
and
cmp
sub
stos
repz
iret
pop
and
icebp
pop
push
add
pop
add
xchg
mov
icebp
test
add
cmp
fistps
mov
jb
mov
dec
dec
fwait
push
test
fprem1
fsubrs
xor
into
pop
sbb
in
arpl
mov
imul
inc
popf
jge
mov
fsts
sub
pop
mov
stc
lcall
scas
sbb
daa
or
cli
add
xchg
andnps
mov
mov
jns
xchg
sub
add
xlat
adc
adc
imul
xlat
jns
or
mov
loopne
in
mov
mov
das
cmp
add
xchg
pop
je
sub
and
loopne
mov
mov
or
test
repz
mov
cmp
fisubrl
pop
imulb
testl
sti
push
fadd
scas
out
mov
mov
inc
push
jb
lcall
clc
aad
ja
addl
cmp
stos
aad
popf
enter
divl
jbe
pusha
jns
jge
pop
fwait
jns
pop
lds
xor
mov
mov
mov
aad
push
bound
shrl
dec
outsb
or
mov
sbb
shl
in
mov
fsts
mov
repnz
and
sub
mov
fisttpl
les
jns
sbb
movsb
movsb
shl
ja
pop
in
ret
adc
mov
aas
mov
xchg
roll
xchg
pop
decb
xchg
into
jo
aaa
pop
adc
aaa
jbe
and
and
jno
mov
dec
fsubp
stos
xor
mov
xor
pop
fidivrs
bound
fbstp
and
xchg
lock
lods
cmp
dec
rcrl
test
in
stc
dec
sbb
outsl
add
pop
adc
stc
pushf
pushf
jg
sti
pop
cmp
push
mov
xor
adc
pop
push
loopne
orps
shll
xchg
lcall
mov
lock
xor
push
or
rorl
data16
arpl
cmpsl
fwait
pop
mov
inc
cmc
in
hlt
aad
jmp
je
fdivrs
fnstsw
jns
fisubrs
bound
xchg
mov
pop
insl
mov
pop
out
nop
push
int3
std
sub
cli
test
das
lret
into
es
popf
stos
aam
add
bound
clc
popf
dec
lods
dec
fnstcw
clc
shll
xchg
fstpt
mov
sbb
daa
sbb
xchg
or
xchg
ret
rdtsc
iret
nop
sbb
inc
xchg
movsl
in
imul
pop
ljmp
lea
shll
adc
daa
xchg
xchg
xchg
enter
ljmp
or
dec
mov
stos
mov
ds
stc
jne
notl
xchg
lea
xchg
add
inc
scas
and
inc
cmp
inc
test
jl
xlat
rorl
and
std
call
sub
mov
sub
mov
stos
mov
add
pop
nop
push
clc
inc
test
cmp
mov
pop
mov
mov
jl
fadds
cmp
jl
jne
mov
mov
and
xchg
push
mov
mov
and
add
into
mov
xor
sarl
test
jno
mov
cli
loope
push
call
jl
inc
ds
sub
and
push
and
dec
inc
aaa
adc
xor
push
pop
and
sub
push
push
push
xchg
add
enter
mov
das
idivl
pushf
cli
jae
sub
jg
roll
push
adc
mov
jne
xlat
in
mov
fs
out
cltd
test
mov
inc
push
dec
sub
in
icebp
test
movsl
xlat
imul
cmp
or
mov
test
jl
bound
sub
push
es
jge
sub
adc
int
mov
stos
sbb
add
cwtl
fs
out
pop
and
xor
out
mov
mov
stc
lods
pop
icebp
mov
scas
sub
add
nop
pop
out
test
cld
cmc
push
imul
in
shll
insl
push
dec
xorb
push
mov
fs
jmp
mov
lret
shr
mov
ja
out
dec
in
and
jne
sti
sub
dec
idivl
fisubl
sbb
xor
call
loopne
int
cmovp
cmp
sbb
inc
mov
mov
dec
outsb
mov
lock
std
xor
sbb
add
mov
mov
popf
sub
or
mov
mov
popf
adc
ss
rorb
dec
dec
jl
lods
aaa
aam
iret
add
lcall
push
loopne
outsl
gs
mov
in
push
sbb
loope
test
cwtl
mov
adc
stos
jmp
pop
aam
faddp
stc
push
xorl
gs
push
dec
jbe
rolb
mov
leave
adc
sub
loope
add
arpl
or
push
cmc
dec
jno
jle
sti
pop
cmp
aam
xchg
subb
xchg
mov
lock
fnsave
mov
xchg
es
and
jle,pn
outsb
mov
gs
xor
jo
or
sbb
cmc
inc
jl
int
mov
sbb
mov
out
aad
jno
movsb
lret
mov
xor
sbb
dec
pop
cmp
pop
jle
fs
inc
dec
inc
xor
inc
and
sub
arpl
mov
imul
push
jno
jecxz
or
and
mov
jbe
adc
sbb
xor
lahf
jmp
daa
mov
subl
movsl
dec
or
mov
mov
adc
or
xor
and
pusha
fstpt
leave
pop
push
push
nop
clc
fdiv
mov
test
test
out
mov
jle
nop
imul
ljmp
sub
push
out
aas
pop
enter
stc
or
mov
mov
pop
lock
mov
subl
dec
rorl
nop
cwtl
jns
push
mov
into
sbb
mov
adc
adc
adc
cmc
js
xor
jno
xchg
scas
cltd
push
imul
push
shll
in
sar
les
cld
push
lea
push
leave
int3
push
fdivrl
dec
and
aam
push
cmp
or
fadds
loopne
cs
pusha
xchg
ds
ja
leave
fcomps
insl
in
js
mov
jp
in
lahf
xchg
hlt
jbe
cltd
xor
adc
nop
jae
ret
cmp
mov
lods
xor
dec
mov
sub
stc
xor
cwtl
dec
push
sub
cmc
gs
jecxz
sbb
or
ja
shld
enter
mov
adc
push
push
adc
call
push
jmp
ret
push
hlt
pop
xor
pop
inc
scas
cmp
push
mov
popf
push
dec
dec
mov
pop
mov
xchg
shl
mov
sahf
into
push
mov
adc
shrl
xchg
mov
icebp
mov
sbb
or
push
stc
mov
stc
xchg
add
sub
push
sahf
adc
mov
divl
adc
lret
out
les
mov
fidivrs
push
dec
ja
aam
orl
xor
leave
jne
lahf
mov
dec
mov
jl
mov
xchg
xor
aas
push
ficompl
adc
xchg
movsl
divl
add
push
aad
mov
cs
leave
mov
jmp
xor
xor
into
xchg
and
push
fsubr
jge
jge
mov
stos
xor
bt
gs
ds
or
push
sbb
loope
scas
cmc
jg
pusha
push
ljmp
pusha
flds
xlat
cltd
in
ret
xor
aas
jbe
jmp
mov
adc
call
cmp
mov
jl
icebp
lea
lret
lret
sbb
vcvtsd2ss
or
sbb
mov
ljmp
or
addl
popa
sub
sub
lock
push
xor
and
pushf
pop
lods
and
jge
rcrb
movl
mov
jp
clc
jb
sbb
pop
fs
fwait
lock
mov
jl
fwait
mov
cmp
flds
addr16
in
shr
pop
sarl
jae
jae
arpl
aaa
adc
push
adc
lcall
push
mov
test
sub
adc
scas
pop
in
or
sub
pusha
mov
mov
sub
pop
ret
jbe
push
pop
ret
dec
jae
sub
aad
add
xchg
xchg
mov
loopne
mov
mov
jecxz
ja
lahf
mov
mov
fstpt
xchg
push
cltd
stc
xchg
mov
dec
into
mov
in
cmpsb
add
mov
stc
enter
jo
sub
or
jbe
mov
lds
mov
dec
movsb
mov
sub
andl
popf
lret
or
push
jbe
icebp
jne
das
cli
xor
es
imul
jae
sbb
cs
lods
mov
mov
out
sub
sbb
loope
ss
jae
dec
add
fidivrl
lods
xchg
fsubl
mov
in
outsb
lcall
mov
push
inc
ljmp
sbb
shll
fsubs
push
loop
ror
cltd
icebp
shr
add
xor
mov
leave
bound
jle
jg
das
insb
pop
mov
loopne
sti
lcall
adc
scas
aam
incb
jne
sbb
mov
rclb
pop
xchg
daa
stos
mov
incl
in
fcoml
aas
adc
xor
test
in
repnz
ret
push
adc
scas
push
sub
jge
dec
pop
push
or
xchg
sub
lods
je
mov
or
xor
imul
sub
mov
push
cmc
xchg
xchg
or
dec
mov
jo
sbb
xor
mov
testl
dec
mov
popf
pop
ret
lahf
jae
mov
popf
jae
pushf
mov
pop
adc
cmp
sub
pop
outsb
add
fcoms
aad
add
ds
lahf
enter
adc
add
pop
int3
xor
iret
hlt
iret
push
adc
shlb
dec
push
sub
push
orl
mov
push
mov
orb
scas
mov
sbbb
iret
icebp
push
cwtl
mov
sbb
fldt
inc
insl
fists
sub
mov
aaa
and
inc
cli
rorl
fsubp
inc
fucompp
rclb
push
jmp
cwtl
cltd
cmp
mov
das
inc
jle
push
in
pop
mov
inc
mov
loopne
push
inc
add
inc
ja
repz
cltd
ret
sub
inc
repnz
fsubr
sbb
lock
jp
outsb
jnp
mov
adc
and
jae
or
imul
pushf
lret
inc
inc
xchg
inc
sar
jmp
sar
or
jge
push
pop
sbb
mov
mov
pop
rcr
sub
pop
add
pushf
push
pop
lea
cld
xchg
inc
and
out
out
sub
adc
jge
and
lods
in
jo
repnz
insl
or
xchg
lock
ljmp
or
ret
fucomi
inc
xor
xor
fsubrl
inc
jl
sbb
mov
jp
sbb
cmpsb
fldt
push
es
pop
ljmp
pop
inc
add
cmp
sahf
out
or
bound
and
cmp
mov
add
xchg
rorl
enter
popf
sbb
cs
jno
ss
and
lret
pushf
jle
repnz
sahf
jmp
outsb
test
jge
inc
aam
enter
sbb
adc
push
inc
test
or
lods
cli
movsl
mov
cltd
lret
pop
out
sbb
adcb
aad
add
xor
rolb
and
add
repnz
pushl
sbb
int
fcomi
call
jb
js
sahf
cmpsl
cmp
mov
push
fistpl
movsb
bnd
push
cmpsl
jge
xchg
mull
xchg
pusha
mov
mov
cmove
xchg
push
or
fmuls
das
in
sub
add
jecxz
cmpsb
bound
pop
pop
inc
mov
mov
jne
mov
push
out
fadds
sbb
sbbl
sti
xor
and
fsubrs
fnstenv
mov
je
cwtl
or
test
add
mov
scas
enter
pusha
popa
sbb
xor
mov
orb
mov
push
xchg
nop
xchg
hlt
fwait
pusha
arpl
je
jge
xchg
aaa
push
xchg
push
inc
pop
sbb
repnz
in
outsl
or
leave
es
into
mov
rorl
sahf
jmp
nop
es
mov
pusha
mov
adc
sbb
stos
sbb
and
fxch
out
ja
mov
adc
sbb
push
mov
add
jnp
jns
mov
and
ljmp
and
cs
cmp
hlt
lcall
cwtl
sbb
sbbb
ret
mov
mov
aaa
jnp
enter
into
adc
pop
xchg
fistps
shlb
sub
movsb
sub
jp
rcrb
cmpsl
xlat
pop
addr16
and
jo
jae
movsb
cmc
mov
and
outsb
loopne
mov
out
loope
adc
xchg
loopne
fidivl
clc
imul
push
sub
leave
imul
mov
xor
and
add
sub
fdivl
add
test
movsb
cs
add
xchg
stos
scas
aad
stos
cld
dec
jmp
lret
cmp
test
sub
cs
outsl
pop
insb
lods
sbb
addr16
cmp
adc
push
xor
ss
and
fs
mov
enter
cltd
sub
and
add
es
ror
insl
push
test
loop
lahf
lock
add
inc
xchg
in
mov
mov
inc
out
in
ds
mov
push
loopne
test
dec
sub
mov
cmp
rcrl
cmp
xor
sbb
movsl
sub
mov
push
add
lea
pop
cpuid
mov
scas
mov
lods
jbe
nop
cld
out
xor
push
dec
mov
mov
fidivrs
sbb
imul
dec
out
xor
cmp
dec
arpl
or
mov
das
inc
popl
xchg
mov
js
orb
adcl
jecxz
pop
dec
out
cmpsl
dec
jns
sub
lods
inc
or
add
inc
cmp
or
jbe
jae
and
enter
pop
popa
pop
mov
cmp
test
pop
je
jnp
add
mov
mov
sar
insl
sub
cltd
push
cwtl
jle
lods
loope
cmpl
aam
jp
push
sub
roll
sti
aas
rcl
or
jp
jo
cmp
filds
das
dec
cwtl
daa
std
adc
aad
mov
cmpsl
adc
jb
and
add
cmp
jl
jl
or
ljmp
rcl
cmp
pusha
mov
movsl
je
inc
in
fadds
pop
cmpsl
or
xchg
pop
movsl
cli
mov
icebp
mov
test
mov
pusha
xor
rcll
add
aaa
frstor
aam
adc
mov
xor
lods
std
clc
jle
push
xor
mov
mov
fbld
cmp
mov
lea
icebp
add
clc
adc
ljmpw
sar
sub
outsb
mov
add
jnp
cli
lods
cs
adc
mov
mov
sub
in
mov
or
xchg
les
sub
les
lock
pop
adc
xchg
sbb
cmp
cmp
icebp
andl
popa
mov
insl
in
mov
fisubrs
adc
push
sub
cltd
sahf
les
je
popa
adc
pop
insb
fs
test
and
sub
adcb
testl
ljmp
and
cmp
cmpsb
pop
hlt
mov
js
xor
mov
xor
inc
inc
inc
mov
sbb
incb
add
push
in
sbb
ljmp
clc
sub
ret
aaa
outsb
shlb
mov
push
and
cmpsb
pop
popf
sbb
pop
imul
scas
sbb
lods
or
jge
mov
inc
push
pop
fisubl
adc
mov
test
pop
mov
mov
rolb
bnd
mov
fwait
stos
arpl
sti
dec
mov
out
push
inc
jl
test
mov
cwtl
aad
cltd
mov
push
mov
loopne
lret
push
mov
jge
mov
mov
ret
adc
mov
call
scas
clc
sub
bswap
in
jb
sbb
push
jmp
mov
add
in
insl
mov
out
mov
and
jnp
cmp
add
jns
push
xor
inc
or
jo
out
or
mov
or
push
jbe
push
mov
adc
sbb
in
sbb
lock
cld
cs
lds
imul
cmp
rcll
in
enter
and
xchg
ja
xchg
or
xor
add
and
adc
or
ss
pop
jne
add
mov
fidivrl
fisttpll
jle
roll
jbe
icebp
mov
xchg
mov
jmp
mov
shll
lea
add
push
adc
insb
and
inc
cmc
cmp
add
leave
jae
sub
dec
push
dec
pop
dec
fsubs
outsb
inc
dec
pop
icebp
gs
jns
adc
rcrl
imul
test
jo
inc
and
cmp
jns
push
addl
xor
sbb
sub
or
pop
subl
xor
test
jg
cmp
jg
xor
push
inc
fcmovbe
pusha
ja
push
cmp
in
test
sti
lock
aaa
jle
aas
cmp
sbb
daa
dec
stos
test
sbbb
mov
mov
pop
xchg
mov
sbb
enter
rcrb
and
loopne
roll
xchg
fidivl
ds
pop
xor
in
dec
cmp
push
std
mov
in
sti
jbe
sub
pop
add
jmp
rorl
lods
dec
mov
scas
jae
loop
jmp
iret
iret
mov
cs
in
lret
xchg
shlb
xor
fisubl
mov
fcoms
pop
pop
data16
hlt
xchg
data16
ljmp
dec
loop
xchg
ja
xchg
xchg
or
and
fisttpl
dec
repz
and
cwtl
mov
push
shl
push
sbb
inc
pop
cmpsb
adc
cmp
int
or
mov
in
add
pop
mov
int
lods
pop
pop
mov
add
or
mov
lsl
fsubrs
adc
mov
pop
fs
shrb
in
pop
movsl
pop
and
xchg
mov
push
pop
pop
mov
xchg
jmp
movsl
xor
in
imul
cmc
out
popa
inc
daa
testl
in
jmp
sbb
ljmp
jb
ret
scas
sub
and
jnp
cmc
fwait
xlat
loop
scas
and
push
add
jge
imul
xor
cmc
fs
gs
call
lret
in
bound
lods
dec
xchg
insb
hlt
and
pop
pushf
mov
mov
jle
pop
xchg
fstpl
dec
shlb
cmpsb
lock
and
pop
jp
rorl
xchg
push
cwtl
sub
adc
dec
mov
push
jne
mov
test
xor
xchg
jb
and
mov
xor
push
sub
sub
in
jmp
inc
jecxz
mov
xor
sub
lock
push
rorl
repnz
adc
loop
inc
jb
add
addr16
test
jne
in
call
fisubrs
and
stos
jmp
jp
das
pusha
out
xchg
test
iret
jg
testb
push
push
movsl
sbb
shrb
pop
loope
xor
xchg
dec
movswl
in
jmp
repnz
push
scas
rorl
icebp
popa
push
sub
xchg
jge
adc
fiaddl
pusha
pop
inc
cli
mov
xchg
xor
mov
pop
insb
sbb
loopne
fwait
sbb
mov
cli
bound
inc
cmp
int3
adc
xchg
mov
test
add
insl
jb
mov
xor
outsl
and
cs
push
scas
dec
and
je
int
cmc
lret
dec
cmp
in
push
in
adc
popa
out
sub
ds
cli
mov
ss
in
mov
leave
mov
ja
daa
hlt
pop
and
fsubrp
jp
out
xchg
sub
aam
mov
sahf
push
push
pop
mov
test
mov
jg
rorb
or
sbb
roll
sbb
push
test
jbe
push
cmpsl
out
mov
jl
sbb
fwait
popa
mov
or
sbb
pop
sub
out
int3
int3
cmp
cmc
and
pop
mov
repnz
pop
mov
mov
cld
les
mov
mov
int3
mov
push
shll
sub
jb
mov
and
shrl
and
and
mov
loopne
into
loopne
xchg
and
popf
push
and
lock
cmp
pop
ljmp
mov
aad
dec
cmp
push
je
ret
dec
mov
clc
push
and
adc
xchg
jmp
mov
mov
pop
cmp
add
sub
push
testb
push
lret
fs
es
xchg
jno
and
push
pop
pop
cwtl
and
mov
push
iret
popf
xor
mov
adc
jg
subl
xor
xor
mov
adc
mull
pop
test
sarb
push
call
xlat
je
scas
xchg
mov
inc
sbb
arpl
push
cli
aad
lea
push
pop
mov
std
outsl
add
mov
dec
iret
sbb
push
and
mov
outsl
mov
cmpl
jmp
movsl
adc
xchg
adc
into
push
dec
and
mov
jb
push
nop
adc
das
jnp
or
out
adc
xchg
or
daa
or
xchg
lds
push
insb
aaa
dec
inc
mov
add
int
sub
and
add
jmp
aad
xchg
dec
xchg
mov
sarb
test
xchg
nop
mov
cmc
outsb
pop
dec
add
xchg
shr
test
mov
adc
shlb
leave
xor
lods
pop
mov
xchg
mov
jb
add
and
add
mov
cmc
testl
fdivl
mov
cmp
sub
scas
shrl
pop
jle
in
xlat
hlt
lods
fs
pop
das
subl
aas
call
inc
and
testb
shrl
outsl
ja
jmp
xor
inc
inc
mov
je
adc
sahf
fidivs
stc
loope
dec
fstl
int3
cmpsl
mov
into
and
jg
shlb
jae
pop
xchg
fstps
jecxz
test
das
inc
sahf
in
mov
mov
cltd
inc
lcall
and
in
xchg
mov
mull
popf
idivb
jb
fwait
jg
mov
shl
jbe
cli
outsb
test
jge
inc
or
call
mov
pop
push
in
imul
push
pop
jmp
insl
imul
pop
and
imul
ljmp
sub
xor
jmp
or
and
xor
mov
out
lea
push
xor
jge
idivb
sbb
push
push
dec
fwait
adc
psubb
in
ja
fcompp
aaa
cmp
in
lds
cwtl
jns
mov
mov
xchg
fdivrl
fsubl
push
lods
and
cwtl
clc
jg
scas
xchg
ret
push
lret
add
jno
xlat
mov
lcall
repnz
sub
inc
push
xchg
mov
inc
xchg
bound
or
inc
js
mov
ss
fs
add
inc
hlt
pop
lea
xor
cld
cmp
divb
test
dec
int
cmp
cmpsl
mov
pop
cmc
out
jb
cmp
mov
xor
stos
test
in
mov
xor
add
sbbl
popl
bound
cmp
add
addr16
in
inc
adc
mov
or
pop
call
fs
fs
add
jno
xchg
mov
xchg
dec
out
and
push
push
xchg
sub
fbstp
cltd
and
test
cmp
mov
test
sbb
sbb
outsb
cmpsb
dec
add
test
sub
sub
outsb
sti
dec
fcoms
jle
addr16
cmp
pop
rol
pushf
cmp
sub
loop
adc
dec
mov
fdivr
aaa
shr
xor
imul
packuswb
xchg
jp
inc
push
das
enter
aam
dec
cmpsb
rcrb
push
ljmp
das
sub
mov
outsb
ret
cwtl
xchg
dec
lcall
test
stos
cmpsl
leave
dec
in
inc
sarb
xchg
in
sbb
sub
or
addr16
mov
mov
lahf
mov
sub
pop
ds
cmc
xchg
js
dec
xor
addb
add
cmp
test
popa
iret
stc
test
pop
xchg
scas
mov
xor
add
push
push
cmpsb
mov
dec
pusha
xor
sbb
cmp
mov
xchg
push
rorl
jae
lds
jmp
mov
cmp
mov
cmp
or
adc
cwtl
imul
xchg
or
jo
cmpl
cmp
addr16
inc
leave
outsl
sti
sahf
rol
push
jle
mov
mov
pop
cmp
inc
add
mov
lret
sbbb
dec
mov
cmp
popf
es
loop
or
pop
shl
test
inc
dec
js
add
popfw
mov
cli
sbb
push
xchg
cs
jle
clc
mov
icebp
pop
fimull
lcall
punpckhwd
pop
cmp
or
loopne
jnp
stos
aaa
mulb
addr16
xor
pop
mov
pop
pop
cli
int3
out
xor
sub
xchg
cmp
in
jge
xor
lods
mov
xlat
dec
xor
mov
sbb
xchg
adc
sti
mov
jae
repz
les
pop
or
jmp
mov
cmp
adc
mov
leave
icebp
sbb
repz
fnstenv
mov
test
dec
cmpl
pop
cs
outsb
add
arpl
and
pop
or
fisubl
in
inc
push
lar
mov
test
push
pop
adc
dec
xor
call
pop
cmpsb
lcall
xor
dec
mov
lds
cmpsb
sub
sub
inc
mulb
mov
fmull
imul
inc
scas
outsb
test
jge
jae
mov
xor
mov
out
mov
xorb
hlt
mov
sbb
loope
rcrb
push
sbb
cmpsl
and
dec
inc
dec
mov
sbb
add
push
xor
dec
imul
test
ljmp
jmp
mov
movsb
inc
xor
xlat
mov
sub
stos
lea
adc
clc
cs
cs
xchg
push
inc
addr16
cmp
clc
mov
insl
stos
in
mov
repnz
mov
mov
nop
adc
shl
movsb
mov
jecxz
inc
mov
mov
outsl
and
cmp
mov
fs
pop
xchg
fbstp
mov
cmpsb
iret
sbb
popa
jmp
dec
sbb
pop
cld
push
push
loope
push
leave
add
aad
addr16
and
and
stos
xchg
and
push
or
dec
scas
or
xchg
or
scas
pop
cmc
in
jae
out
mov
data16
adc
xor
add
jo
shrb
or
cmp
jo
cmc
lcall
mov
daa
jne
xor
cmp
jle
call
jecxz
cmp
pop
inc
lods
fs
inc
cmp
xorl
mov
mov
sbb
das
dec
pop
sbb
cmp
je
leave
push
pop
inc
inc
dec
call
sarb
fisubrs
jge
cmp
inc
mov
popa
mov
popa
les
or
or
mov
adc
pop
cmpsb
push
test
or
stc
insb
mov
movsl
fsubs
mov
xchg
mov
pop
imul
jo
cmp
test
out
add
adcl
xchg
push
lea
sarb
cmpb
iret
in
mov
jge
divb
faddl
ret
sub
and
cmp
mov
inc
jnp
jb
stos
mov
xchg
pushw
add
xchg
mov
xchg
hlt
xor
pop
out
fs
sbb
ret
jmp
stos
jne
mov
jmp
fucom
das
dec
pop
sti
jno
inc
movsb
push
cld
and
sbb
imul
stc
cmpsb
loop
push
imul
dec
ss
mov
das
rol
ficompl
sti
mov
xchg
es
xlat
cwtl
pop
dec
in
push
or
sbb
xchg
sub
mov
pop
in
rolb
ds
push
movsl
imul
or
inc
push
or
hlt
enter
jge
inc
mov
rep
inc
popa
insb
mov
sub
or
sbb
or
jne
mov
les
pop
test
pushf
xchg
cltd
fdivrl
and
add
dec
popf
call
aam
xchg
mov
insl
into
dec
fs
and
push
outsb
push
cmpb
ret
test
mov
add
add
pop
cs
mov
fwait
push
movsb
pushf
in
push
nop
das
add
mov
dec
push
int3
je
cmp
inc
mulb
push
xchg
mov
mov
cli
cmp
mov
inc
xchg
jno
mov
xchg
sahf
iret
mov
dec
jo
paddsw
stos
sti
cmp
or
sbb
nop
xor
imulb
in
and
or
mov
cltd
xchg
jp
jge
lock
das
test
mov
arpl
orb
mov
jns
insb
jp
out
push
movsb
in
repnz
ds
or
pop
sub
pusha
cmp
adc
out
or
enterw
mov
pop
mov
subl
data16
cmp
xchg
sub
mov
movsl
pop
inc
xchg
scas
xor
push
ds
jecxz
ffreep
psubq
rorb
fwait
daa
mov
adc
push
pop
xor
mov
pop
jb
cli
pusha
repz
pop
cmp
or
inc
dec
cmp
out
and
jb
mov
out
pop
xlat
xor
push
jnp
outsl
sub
mov
out
lcall
dec
ret
or
das
jo
mov
jp
pushf
push
jl
scas
sahf
adc
add
xchg
ja
mov
mov
xor
inc
aad
mov
add
out
sub
lds
xor
jg
popa
xchg
cmp
pop
jae
sbb
cmp
ljmp
enter
lds
fstp
movsl
gs
mov
xor
ret
pop
jo
mov
pop
mov
js
mov
call
cmp
out
sbb
or
aas
pop
inc
scas
addr16
mov
dec
jno
xor
test
leave
jno
cmpsl
xchg
push
push
rorb
dec
and
sub
inc
inc
xlat
arpl
dec
rdmsr
test
mov
std
addr16
out
test
lds
dec
push
cmp
xor
adc
hlt
mov
in
mov
lret
or
into
sbb
sbb
scas
dec
stc
mov
sub
mov
push
pop
cmp
inc
clc
mov
jb
stos
or
cs
cmp
xchg
lret
js
cmp
pop
gs
in
pop
cwtl
cmpsl
faddl
xchg
lret
cld
jp
xchg
lcall
mov
xchg
sbb
pop
sub
push
jae
outsb
outsb
sbbl
subb
xlat
xchg
and
cli
sbb
psllw
out
fisubrl
mov
lds
xlat
and
jns
mov
and
mov
lds
stos
lcall
jg
popf
in
fs
lret
iret
sub
or
lret
idivl
mov
mov
insl
loop
insb
jg
lods
mov
sbb
faddl
xor
jnp
push
jne
scas
dec
adc
cmpsl
fwait
push
test
enter
push
test
es
arpl
inc
test
mov
cmp
sub
mov
xlat
das
push
clc
push
lcall
jp
loopne
push
fs
or
out
incb
std
fwait
adc
adc
push
dec
push
push
push
dec
push
push
fistl
or
cmp
rcll
lahf
xor
dec
ljmp
push
inc
push
leave
out
sarl
movsb
fldpi
loopne
ljmp
outsb
inc
pop
cwtl
sub
rorl
cmp
cs
and
jae
sahf
js
cmp
in
lods
or
lahf
in
in
cmp
push
test
xor
jae
scas
push
fistl
jmp
and
shrb
mov
mov
or
jg
maskmovq
mull
les
and
popf
xor
out
xor
pop
jo
scas
sbb
push
in
inc
scas
outsb
cmp
lret
jo
push
lods
cmp
mov
and
xchg
insl
out
mov
and
mov
fwait
jno,pt
adc
adc
imul
mov
icebp
loopne
adc
pop
mov
push
repnz
fxch
and
aas
pop
aam
rorb
xchg
roll
mov
sub
add
rcll
outsb
es
lret
push
and
pop
lret
adc
pop
imul
and
and
inc
lods
sbb
pop
in
push
sbb
cmpsb
sbb
fwait
add
add
iret
mov
push
ds
hlt
fadd
and
mov
jle
adc
sbb
jae
inc
inc
sarb
enter
pop
pop
shl
add
data16
nop
mov
sar
sti
inc
mov
lea
scas
stos
mov
lcall
ja
lahf
out
pop
gs
rcrl
add
in
bnd
mov
xor
mov
mov
xor
or
aaa
sbb
sub
stos
and
xchg
clc
pusha
stos
mov
scas
xchg
pop
adc
bound
mov
leave
and
pop
adc
add
pushf
nop
hlt
loop
test
cbtw
jne
aad
and
push
pop
mov
mov
inc
cwtl
call
pop
repz
push
fs
mov
sbb
dec
popf
sbb
or
push
loop
push
dec
jne
or
mov
mov
jo
jg
scas
ljmp
loopne
popf
or
pop
cmpl
divl
outsb
adc
repz
sbb
icebp
cmpxchg
or
xchg
data16
imul
ss
movsl
jp
nop
sbb
test
dec
hlt
mov
lahf
inc
scas
gs
callw
in
inc
or
xchg
push
cmp
ds
lods
icebp
sub
aad
adc
pop
add
mov
xchg
jmp
pop
dec
idiv
push
cmpsl
or
jae
xchg
mov
add
mov
lods
dec
inc
sbb
ret
int3
jnp
sub
and
and
cmp
ret
cmp
xchg
cmp
pusha
lea
add
shr
popf
repnz
push
sub
sbb
stos
sahf
dec
sbb
test
jbe
outsl
inc
aas
pop
arpl
int
out
adc
pusha
adc
sub
lretw
orb
enter
jns
pushf
sub
lock
adc
xchg
add
pusha
pop
jns
cmpsl
push
or
das
xlat
out
push
addb
add
pop
insl
pop
jecxz
mov
arpl
jns
inc
popf
push
inc
xchg
mov
addr16
arpl
hlt
mov
xor
lods
mov
jo
mov
sub
jg
sub
sub
dec
jmp
push
inc
jl
test
dec
dec
mov
insb
xchg
ljmp
das
xorl
daa
push
ret
cmp
fldcw
sbb
outsb
jae
ret
sarb
fstps
jnp
push
in
push
jo
scas
xchg
mov
mov
hlt
mov
pop
sbb
mov
push
test
into
mov
pop
fcoms
notb
popa
xor
dec
and
xor
push
pop
or
jnp
movsw
filds
cld
dec
lahf
mov
jl
inc
jmp
push
adc
lea
or
mov
pop
sti
insl
addr16
movsl
add
inc
xchg
mov
scas
jns
add
faddl
mov
addb
xchg
fcmovb
adc
sarb
shlb
cmp
lods
fdivrl
push
arpl
pop
ret
cld
test
out
sbb
mov
xor
test
jle
and
bound
jo
jo
pop
movsb
pushf
pop
fs
ds
adc
popa
inc
dec
cmp
and
push
lret
mov
daa
pushf
scas
outsl
push
repz
mov
push
icebp
aaa
adc
inc
and
in
jb
pop
mov
ss
loop
popa
dec
push
cmp
mov
cld
xor
add
pop
cld
cwtl
mov
mov
mov
std
cli
sub
test
test
jle
insb
iret
push
stc
repnz
leave
mov
push
or
lea
cwtl
mov
jne
cltd
jecxz
lods
add
aad
add
jecxz
pop
leave
in
nop
popa
fs
movsl
xor
rclb
jb
push
and
and
arpl
sahf
call
cmp
cwtl
lahf
push
mov
ss
pop
xor
lods
adc
addr16
or
pop
pop
lods
sarb
add
repnz
nop
cwtl
jmp
push
mov
scas
test
leave
dec
mov
rcrb
sbb
in
iret
addb
lcall
jg
dec
jo
rorl
xor
mov
clc
repnz
push
adc
push
sbb
lahf
out
mov
in
push
arpl
jmp
shl
sahf
aas
xor
jl
in
fdivp
testb
in
data16
aad
xor
pop
rorl
fs
mov
jg
mov
movsb
fsubr
leave
fwait
xor
pop
fidivs
in
xchg
jne
push
mov
popa
mov
pusha
add
mov
xor
push
push
fcomi
push
jge
add
ja
ja
pop
in
nop
sbb
sub
push
xchg
adc
push
inc
cmpsb
outsb
and
lods
std
pcmpgtb
push
xor
subl
xor
cmc
cmpsb
in
mov
lock
in
or
push
jmp
dec
pop
stos
rorb
ja
pusha
out
pop
out
or
out
andl
cmp
inc
hlt
push
xchg
divl
pop
dec
mov
faddl
fcmove
loope
and
ds
xchg
sbb
into
insl
pop
popa
push
iret
pop
sub
rorl
rolb
pop
mov
out
loop
cmpsb
sbb
mov
pop
push
sbb
sahf
hlt
sbb
inc
cs
dec
push
xor
add
cmc
sbb
fs
nop
dec
cmc
and
mov
test
cmc
or
dec
inc
outsb
cwtl
in
mov
dec
fmull
nop
dec
sub
xchg
jge
outsl
jmp
test
inc
ja
cld
jmp
ret
xchg
shrl
test
nop
inc
add
cmp
hlt
sub
xchg
pop
pop
cmp
aad
bts
pop
pop
je
xchg
cmp
daa
outsb
dec
cs
adc
adc
add
xchg
fdiv
sub
push
call
sub
lea
gs
mov
addb
xchg
cmp
adc
adc
sbb
xor
stc
pop
mov
lea
mov
push
mov
out
lret
std
mov
pop
jecxz
stc
shll
fcomp
cmp
fistl
fdivrs
in
loope
push
pushf
stos
pop
mov
.byte
addr16
and
cmp
cmpl
jns
ss
subl
jbe
jns
add
lods
popa
mov
and
das
jns
outsb
test
cwtl
or
popa
mov
mov
push
mov
inc
std
adc
jp
pop
adc
leave
push
pushw
es
loope
mov
arpl
ret
fiadds
pop
mov
jecxz
or
cwtl
push
dec
andl
out
push
dec
test
test
pop
scas
jae
mov
test
mov
mov
imul
mov
lods
push
adc
popa
push
cmc
pop
add
clc
cmc
push
lock
sbb
or
push
ljmp
jmp
and
jo
mov
sub
jae
int3
adc
out
or
jl
aam
add
sbb
mov
cmp
fdivrl
insl
aas
mov
pop
lcall
fwait
pop
mov
xchg
movb
rcrl
daa
aam
pop
sbb
sub
xchg
or
or
xor
std
call
out
pop
jnp
mov
cmp
add
cmpsl
fcoms
cwtl
movsl
in
add
cmp
push
das
push
sbb
pop
incl
lds
or
loop
aam
lods
xor
mov
add
push
pop
sub
xchg
clc
negb
ficompl
aaa
pop
clc
sbb
testl
ficomps
inc
negb
scas
sbbb
insb
movsb
out
ret
mov
dec
add
aas
and
jge
rcrb
pop
dec
inc
outsl
leave
adc
mov
test
jmpw
dec
and
pop
sarl
jns
js
pop
sbb
shlb
ja
mov
fldl
mov
jns
iret
std
hlt
shrb
test
mov
ret
xor
mov
loope
xchg
das
mov
jae
out
jo
sbb
cli
leave
cmpl
jo
sbb
jecxz
jo
xchg
mov
xchg
fs
jg
stc
lcall
jmp
das
fcomps
enter
roll
mov
sarl
jl
mov
mov
adc
push
push
lret
pop
in
jnp
push
push
inc
xor
inc
lret
pop
and
rclb
cmp
fwait
jge
xchg
mov
sub
movaps
xor
test
mov
inc
and
js
sbb
call
fwait
jno
aad
sbb
ds
call
jo
push
clc
cmp
add
shrb
xchg
ja
sub
sbb
jo
addr16
xchg
pop
jbe
xor
cmp
mov
repnz
xchg
rorb
xor
out
fmull
sub
sbb
aaa
test
cmp
ret
mov
xchg
dec
test
movsl
sub
push
fists
cmp
pop
pop
xor
sbb
jnp
cli
mov
cwtl
sahf
xchg
test
in
mov
mov
adc
sub
rorb
imul
arpl
jp
mov
cmp
push
insl
jbe
ja
push
popa
jle
mov
sbb
imul
clc
insl
ljmp
mov
repz
mov
xchg
push
cltd
cmpsb
push
outsb
lahf
les
out
pop
sub
lahf
sbb
push
mov
repz
adc
cmp
mov
scas
inc
pop
jno
insl
jnp
and
out
pop
fldlg2
add
ds
pusha
mov
cs
in
xchg
push
sbb
addr16
mov
fistpll
adc
and
scas
stc
inc
dec
or
fwait
in
lcall
icebp
push
das
js
cmpsb
dec
aad
mov
pop
leave
cld
call
push
cmp
inc
lret
fiadds
in
sbb
in
lcall
das
fidivs
mov
iret
loopne
add
mov
pop
fcoms
sub
sarb
adc
loope
push
les
mov
mov
add
pop
outsl
push
xchg
push
in
xchg
icebp
jno,pt
push
leave
pop
in
ror
xchg
xchg
mov
dec
out
movl
adc
push
and
xor
mov
icebp
push
mov
mov
es
jno
mov
push
sub
inc
insb
jbe
imul
daa
push
cmpsl
ret
fbstp
mov
xchg
pop
jle
cmpb
lret
xchg
mov
xor
leave
ss
or
mov
ss
clc
lock
leave
xchg
sub
lea
jae
push
mulb
mov
add
mov
mov
jb
sahf
push
sbb
mov
pop
jbe
xlat
les
adc
pop
stos
and
in
dec
test
mov
pop
xorb
lret
out
cld
push
test
call
imul
std
fs
lcall
in
mov
lret
je
inc
int3
pop
cmp
test
ss
int
enter
rolb
pop
cmpsl
cmp
repz
int
clc
mov
cmp
mov
aas
pop
call
xchg
dec
mov
and
add
mov
add
xchg
int3
add
into
bound
dec
pushl
push
mov
test
js
std
lret
iret
mov
add
cmp
sbb
add
leave
mov
andb
add
mov
inc
icebp
add
es
shrl
stc
xchg
rcrl
jns
inc
test
idivl
es
push
cmp
cld
testb
and
outsl
and
repz
and
jne
ret
in
icebp
and
lods
pushf
mov
rcll
mov
dec
rclb
jnp
insl
mov
mov
adc
jns
mov
in
push
stos
mov
sub
xchg
cltd
out
mov
sbb
fdivl
data16
cmpsb
popa
sahf
rcrl
adc
das
sub
jecxz
daa
inc
negl
xor
pop
imul
xor
sbb
movd
sbb
push
pop
jns
movsb
int3
ror
cli
iret
pop
mov
xor
in
sbb
jbe
or
cmc
lcall
or
ret
repnz
daa
sub
sbb
fiadds
lret
jl
call
mov
sub
shrl
scas
push
into
adc
xor
fiadds
out
out
or
icebp
pop
add
xchg
and
aam
rol
push
mov
mov
xchg
cs
mov
test
push
xor
push
test
loop
mov
cmpsb
mov
lret
fs
xor
mov
inc
sub
dec
mov
jb
testb
fs
pop
lock
lret
aaa
mov
ret
pop
mov
adc
mov
inc
adc
mov
dec
add
push
xchg
ret
mov
div
pop
mov
xchg
push
mov
loop
lds
or
cwtl
push
fnsave
push
xor
adc
cli
adc
ds
stc
pop
mov
repz
push
adc
push
cmp
push
jb
xor
mov
outsl
icebp
jns
push
sub
jbe
popa
inc
lahf
jp
lret
sub
xchg
and
out
mov
movsl
xlat
lods
dec
movsb
cli
loopne
dec
iret
aam
pop
addl
stc
jo
dec
push
std
test
dec
jge
or
fs
jbe
push
cltd
lret
or
inc
pop
inc
in
enter
das
mov
jae
jmp
dec
pop
clc
mov
dec
outsb
and
test
popa
test
lea
inc
fldt
stc
jmp
lret
add
stc
enter
ljmp
mov
pop
insb
xor
orb
pop
inc
leave
cmp
fldl
fsts
pop
lods
fs
xchg
fs
test
jns
xchg
test
pop
mov
daa
mov
pop
lret
sbbl
gs
test
std
xor
sbb
mov
lods
cli
data16
nop
xchg
mov
inc
dec
xchg
or
ss
pushf
jne
lret
popa
in
loop
sub
ret
or
ror
ds
nop
ja
cmp
les
mov
rcrb
filds
mov
and
dec
out
in
dec
adc
xchg
mov
mov
faddl
sbb
xchg
test
scas
cmc
nop
stc
jno
call
pop
fisubl
daa
adc
sbb
les
enter
movsb
shrb
dec
pusha
mov
in
gs
or
adc
stos
leave
cli
cmpsb
aaa
jo
cmpsb
xor
push
lahf
loope
shll
bound
aad
inc
jb
xor
mov
sub
mov
andb
cmp
scas
mov
fadd
fcmovbe
push
adc
and
sar
xchg
mov
js
lods
fadds
stc
jge,pn
pusha
dec
sbb
jp
loop
xor
xchg
lret
in
int3
xor
orb
mov
fwait
lcall
sub
cmp
jnp
shlb
std
push
xchg
rorb
fidivl
xchg
inc
cmp
jb
clc
repz
iret
push
faddl
sbb
xchg
outsb
jae
dec
ret
xchg
pop
ror
push
mov
fdivr
mov
inc
xor
notb
cltd
ds
mov
sub
idiv
fwait
dec
mov
mov
fidivs
test
out
adc
daa
sbb
sub
aam
jecxz
mov
mov
jbe
imul
mov
lret
mov
aam
mov
pop
cmp
mov
scas
jae
xchg
test
pop
mov
in
xor
out
sarl
add
iret
cmp
sti
inc
ss
push
les
add
inc
jo
fsub
nop
in
popf
inc
int3
inc
sub
push
inc
into
pop
ss
mov
ret
icebp
inc
in
mov
mov
adc
jg
cmpsl
ret
fwait
add
push
and
popf
dec
aad
adc
cmp
out
add
adc
or
fildll
sbb
adc
lock
inc
mov
lahf
roll
mov
sub
add
sbb
push
sub
gs
xchg
sbb
or
inc
lret
dec
stos
dec
stos
fisubrl
add
xchg
push
insl
mov
and
addr16
ret
add
xchg
out
aam
aam
fwait
add
insl
pop
stos
sub
xor
gs
movsl
xchg
jae
add
and
iret
xchg
push
sbb
ficomps
mov
mov
mov
movsb
pop
into
push
mov
shlb
sbb
xchg
adc
pop
lds
shll
xchg
dec
sbb
cwtl
lcall
ror
je
and
add
sbb
inc
push
jne
push
cmpsb
push
fiaddl
subl
or
mov
mov
repz
scas
mov
into
cmp
aas
pop
mov
or
cltd
sahf
xor
jnp
push
and
jb
fldenv
inc
mov
sti
pop
mov
ss
repz
rol
into
pop
push
jne
js
mov
in
clc
es
scas
mov
hlt
jle
pop
clc
cmpsb
cmp
imul
ljmp
addr16
inc
mov
inc
sub
inc
xchg
mov
mov
or
dec
inc
push
fidivl
inc
mov
mov
xchg
cwtl
xor
sub
xchg
daa
add
xor
jecxz
sbb
inc
xor
repz
jo
sub
mov
scas
lcall
push
nop
aas
or
push
xchg
push
in
lret
or
push
bound
out
xor
adc
pop
push
and
popf
cwtl
jno
rorb
xor
mov
push
adc
clc
rol
repz
aaa
cmc
ljmp
pop
lock
mov
jge
lds
cli
jne
das
mov
cld
add
aas
jecxz
push
push
ss
les
xchg
arpl
lahf
lea
and
mov
jae
out
push
jp
push
hlt
lea
ljmp
xchg
adc
loopne
add
xchg
pop
xchg
mov
insb
push
add
ljmp
fistl
cmc
push
repnz
mov
or
sbb
jns
jae
mov
jecxz
sub
mov
cwtl
pop
std
loopew
or
fisubl
pop
into
adc
xchg
dec
inc
jns
mov
push
push
daa
add
jmp
add
rolb
fldenv
sti
std
lcall
call
mov
enter
test
mov
add
jg
popf
shll
xchg
xchg
pop
and
sbb
imul
add
lcall
lea
mov
in
xlat
cmpsb
lock
sbb
shl
outsb
lods
push
inc
dec
or
jge
push
push
pop
mov
lahf
adc
fildll
les
adc
loope
scas
mov
das
pop
jp
and
add
outsb
and
sub
jg
adc
aad
xor
sbb
sahf
jnp
mov
jne
cmp
xchg
jmp
pop
jecxz
in
repnz
adc
dec
mov
rolb
or
arpl
dec
jp
pop
lret
lahf
icebp
fstp
add
es
xchg
addr16
rcl
push
or
call
jno
cmp
mov
mov
test
pop
ds
sub
cmp
jae
fs
mov
std
jl
sbb
dec
inc
arpl
xchg
cmp
jg
addr16
push
add
and
imul
inc
data16
add
into
dec
pop
jno
lret
inc
xor
add
mov
insb
lds
mov
sbb
and
popa
rolb
cmp
je
fistpl
jns
push
loop
dec
push
add
aam
xchg
inc
add
leave
fstl
fdivl
fldln2
out
jmp
pop
out
xor
jo
adc
loope
pushf
fisubs
jno
lods
fadd
in
push
dec
pop
lods
push
cltd
fidivl
jo
incl
mov
leave
add
popa
icebp
dec
iret
adc
out
pop
dec
aaa
xor
add
adc
dec
sahf
shrb
rorb
jg
insl
insb
mov
xor
lods
lock
jmp
addr16
enter
mov
cmp
xor
adc
inc
xor
mov
jb
mov
repnz
push
mov
pusha
xchg
sub
ljmp
mov
push
lods
inc
into
and
fucomi
pushf
jae
dec
sbb
gs
aam
cwtl
mov
cmp
cltd
pusha
cmp
xchg
outsb
ss
push
jb
imul
addr16
mov
ljmp
xor
mov
ljmp
enter
or
leave
in
fcmovu
cwtl
rclb
sub
and
clc
mov
sub
mov
and
dec
push
iret
fisttpl
add
push
jl
imul
test
ret
out
cmp
push
outsl
out
std
push
pop
cs
dec
loop
mov
cli
aas
insl
ljmp
cmp
cvttps2pi
lea
scas
push
mov
mov
popa
fs
push
out
icebp
stos
add
movsl
ret
in
mov
inc
mov
hlt
orl
and
gs
mov
das
xchg
loop
dec
int3
popf
mov
icebp
adc
repnz
and
stos
or
fs
rolb
inc
gs
push
mov
jno
fildl
inc
jne
mov
xor
shll
mov
pop
or
cmp
out
out
aaa
mov
pop
mov
es
xor
loope
sub
push
mov
or
jno
and
fdivs
or
test
stc
lcall
push
inc
push
mov
in
loopne
add
jb
aaa
push
mov
lods
dec
stos
xchg
xor
xchg
pop
rcll
aad
dec
jl
pop
mov
add
jmp
push
clc
rcrb
lret
faddl
mov
popf
or
mov
jno
enter
enter
sub
and
stos
ljmp
rcrb
inc
arpl
jmp
insb
sbb
or
rcrb
xor
mov
xor
pop
jle
ds
lcall
pushf
lret
adc
mov
cmp
imul
scas
dec
cmp
lcall
mov
xor
roll
movsb
jbe
movsl
shrb
inc
aas
add
cli
cmp
and
decl
in
adc
fcomi
sbb
and
mov
in
enter
fsubrs
ret
test
push
std
ja
mov
xchg
mov
inc
inc
cmpsl
push
cwtl
enter
jb
arpl
loopne,pn
popf
pop
psrad
sub
mov
or
mov
mov
mov
sub
mov
sub
fistps
inc
mov
je
mov
and
imul
add
add
lods
push
pop
xor
push
inc
mov
cld
aas
out
push
sbb
sbb
adc
pop
shlb
adc
test
stc
cmpsl
sub
ficoml
mov
or
imulb
movsl
mov
inc
jle
rep
ljmp
test
dec
imul
pop
out
push
pop
push
mov
stc
call
push
cltd
push
and
cmc
add
cld
jp
or
jo
push
rorb
clc
pop
or
and
std
fwait
call
je
pusha
ror
insb
cmp
mov
imul
cmpsl
rcll
adc
and
mov
dec
or
aam
and
jp
stos
lods
nop
xor
xlat
sbb
cmpsl
ja
sbb
add
nop
aaa
leave
dec
sti
inc
lret
pop
bound
ljmp
add
jb
test
xor
mov
outsb
pop
pop
rol
push
mov
test
flds
xchg
sub
addl
mov
jmp
inc
push
sti
jl
add
inc
sbb
push
adc
loope
xor
ret
inc
xchg
xchg
inc
and
jbe
push
push
in
or
jns
ds
lods
dec
scas
push
push
data16
test
mov
or
pusha
inc
outsb
push
mov
test
icebp
xchg
cmpsb
cmpsl
fldl
dec
adc
sub
mulb
cmpb
pop
xchg
divb
inc
xor
mov
frndint
xchg
pusha
je
loopne
cmpsl
call
sbb
movsb
add
pop
pop
add
sub
int3
sarb
mov
imul
adc
popf
daa
sub
andb
push
pop
rcrb
int3
jo
gs
push
cmp
push
xchg
aam
imul
dec
jg
lret
inc
mov
subb
outsl
test
jmp
fisubrl
push
xchg
bswap
cmp
movsb
nop
mov
xor
lea
push
stc
mov
mov
std
mov
push
lret
cmc
in
pop
nop
inc
push
jle
sub
push
inc
cmp
cmc
jecxz
mov
xor
pop
pop
roll
jp
lds
repnz
jne
iret
push
scas
repnz
push
inc
bound
xchg
dec
sbb
sub
mov
inc
stc
pop
mov
sbb
xchg
addl
popf
mov
fsts
xchg
xor
xor
jg
jb
sbb
es
outsb
js
in
cli
lock
fwait
and
outsl
jp
pushf
jns
repz
pop
repz
xor
or
xorl
icebp
inc
push
mov
fisubrs
jmp
xchg
movsl
pop
nop
add
fldcw
cmp
push
outsb
insl
movsb
sub
das
lock
int
fwait
inc
fidivrs
sbb
push
adc
in
add
sbb
rcrb
sub
xor
jge
push
push
jae
mov
mov
inc
or
or
dec
mov
aaa
lock
inc
mov
pop
mov
test
sub
inc
push
cmc
adc
ljmp
xor
push
ja
add
xor
inc
xlat
push
add
xor
add
xchg
outsb
cld
fs
pushf
jle
out
sub
test
sbbb
and
hlt
rcl
fdivs
jb
icebp
or
jns
in
ret
dec
js
roll
testb
ds
stos
cmpsl
mov
in
ror
fdivrl
cli
lea
cmpsb
lods
sbb
mov
and
rorb
xchg
push
xchg
pop
subb
pop
jp
xor
cltd
popf
repnz
lds
pop
inc
lcall
mov
sub
shrl
cli
cwtl
mov
pop
add
dec
cmp
fistps
or
inc
add
addr16
xchg
ror
sahf
hlt
add
jno
in
clc
insl
xchg
cmp
and
mov
jns
sub
ss
aaa
add
repz
arpl
pop
outsb
inc
adc
mov
out
data16
mov
aaa
cltd
xchg
pushf
adc
adc
pop
mov
add
ljmp
iret
imul
jo
arpl
aas
jp
fisubl
mov
enter
inc
mov
add
sub
iret
.byte
xchg
jbe
add
cwtl
imul
and
sub
sbb
lcall
movb
call
rolb
fiadds
push
cmpsl
ds
dec
mov
push
mov
mov
cmpb
dec
pop
dec
movsb
xchg
pop
mov
mov
pop
mov
jno
add
add
filds
xchg
negl
jnp
sub
pop
dec
ss
lods
jmp
jge
test
cmpsl
lret
xchg
pop
int3
sbb
in
mov
rcll
test
aas
push
adc
je
fistl
or
jp
cmpb
hlt
mov
dec
and
cmpl
je
xchg
mov
nop
jp
cmp
into
repz
sahf
adc
int
ss
aaa
dec
cltd
pop
pop
mov
or
push
repz
add
sbb
push
jge
jmp
jae
mov
xor
add
icebp
cmp
outsb
jle
fstl
pusha
adc
add
mov
fwait
cmp
mull
addr16
pushw
push
inc
fimuls
adc
sub
in
xchg
or
mov
cmp
test
xor
fcom
cli
dec
iret
fsubrl
and
sbb
dec
jo
in
mov
add
sbb
and
push
inc
adcl
mov
adc
subl
clc
push
add
pop
or
scas
and
add
lock
mov
test
cwtl
hlt
or
fwait
call
jno
orl
hlt
mov
dec
sbb
sbb
and
std
add
mov
sub
jo
loop
repnz
sbb
adc
data16
lock
divl
int
lods
call
jmp
test
rcr
or
shll
push
pop
pop
xor
nop
sbb
popl
inc
mov
add
data16
ljmp
ss
push
sub
xchg
mov
call
mov
push
stos
pusha
ljmp
adc
ret
sub
icebp
aas
xor
adc
pushf
aad
xchg
inc
pop
stos
jno
push
xor
pop
mov
inc
xchg
movsb
test
xchg
and
ljmp
xor
sahf
outsl
lret
addr16
xor
repnz
in
dec
sub
jnp
add
sbb
pushf
adc
aaa
adc
jp
pop
jle
inc
inc
mov
xchg
mov
cwtl
outsb
subb
and
mov
or
sub
dec
jecxz
aad
sarb
sbb
hlt
test
cmp
std
sti
xchg
inc
xchg
pop
outsb
loope
push
pop
sub
stc
lret
cmpb
add
adc
inc
sbb
inc
jae
xor
loopne
cmp
push
push
negb
out
add
jg
call
xchg
sub
bound
and
mov
inc
xchg
jne
jns
add
mov
ficoml
iret
idivb
inc
push
or
add
cwtl
cmp
mov
mov
fwait
xorl
bound
xor
inc
mov
pop
aam
jbe
and
jnp
push
loop
sub
es
push
xchg
cmp
xor
jo
ret
mov
int3
addr16
adc
cmp
push
xchg
stos
xchg
add
sub
addb
push
mov
mov
jle
bnd
pushl
shr
iret
aas
aad
and
inc
or
in
ret
mov
insb
fwait
mov
out
xchg
xor
sub
sbb
pop
xor
mov
cmp
and
sub
call
mov
aad
add
mov
mov
xlat
or
pushf
mov
int3
das
push
mov
movhps
cld
xor
int3
add
dec
jne
push
mov
in
mov
sub
cmpsb
mulps
xor
push
push
xlat
cltd
xchg
cmp
dec
push
cmpb
sbb
imul
loope
mov
cmp
fildll
cs
mov
xor
add
and
push
jno
push
mov
or
sub
fidivrs
nop
ss
out
mov
sarb
aam
pop
and
addr16
hlt
jle
mull
adc
or
mov
jns
repnz
mov
das
aas
add
push
cltd
int
push
lods
sbb
aad
movsb
jnp
fs
dec
jg
aaa
sti
pop
mov
stc
sbb
xchg
add
ja
movsb
xchg
ja
sbb
test
stos
push
adc
in
hlt
mov
push
xchg
mov
pop
and
and
cmp
xor
loop
pop
jg
or
mov
dec
ficompl
mov
mov
push
xchg
test
in
pop
cmp
sbb
call
xor
mov
fcmovne
sub
push
daa
dec
retw
cmp
aad
jb
pop
leave
mov
scas
fdivl
stc
scas
lods
orl
out
mov
sub
out
jecxz
test
mov
lea
mov
ret
mov
fs
pop
mov
sti
push
in
in
nop
enter
jle
mov
sbb
insb
fcmovnu
das
movsb
ss
xchg
cli
in
lea
mov
mov
fwait
sti
jge
enter
in
pop
jo
ds
adc
dec
jnp
sarb
popa
mov
xchg
insl
mov
sub
cli
or
dec
adc
data16
lea
fldcw
inc
mov
mov
pop
or
imul
jno
adc
dec
jnp
lea
fldenv
and
push
ret
xchg
inc
popa
pop
mov
fldl
sub
cmp
test
inc
cld
int
lea
arpl
lea
dec
inc
jns
icebp
sub
inc
sub
push
cmp
call
bound
push
into
stos
sub
lahf
xchg
mov
aas
outsl
out
and
iret
push
push
push
ret
mov
mov
aas
xchg
mov
das
lock
xor
jmp
fwait
pop
aaa
add
inc
subl
int
aad
insl
pop
mov
add
push
dec
push
and
mov
xor
mov
addr16
sub
adc
pop
data16
sub
mov
inc
mov
daa
sbb
pop
mov
test
sub
cmp
xor
inc
je
fs
loop
sbb
dec
mov
dec
jp
pop
lods
mov
negl
into
test
pop
out
test
mov
out
xor
cltd
mov
popa
or
push
pusha
cmp
adc
xchg
stos
stos
inc
lods
fsubr
pop
in
pop
push
in
jb
subl
jp
mov
in
jno
xchg
arpl
add
inc
cwtl
jle
into
mov
ljmp
gs
cwtl
js
lods
push
aaa
xchg
jmp
sbb
ljmp
pop
xorl
sbb
fidivs
jae
js
pop
inc
scas
sub
xchg
xchg
cwtl
jne
mov
daa
icebp
jne
inc
inc
outsl
mov
inc
push
adc
lret
adc
scas
sub
pusha
xor
mov
mov
mov
adc
fs
jmp
adc
push
push
cld
jecxz,pn
cmp
aas
out
fwait
adc
les
lcall
push
xchg
or
mov
fldenv
and
adc
jnp
popf
cmp
jns
xchg
movd
sarb
out
aad
xchg
sbb
and
or
xchg
fisubrl
adc
mov
aas
push
mov
cmc
daa
cmp
out
and
push
xchg
jno
stc
xchg
inc
cs
lods
stc
jbe
inc
daa
sub
movsb
and
lods
es
jb
outsl
repnz
nop
dec
and
lahf
sti
scas
adc
filds
out
cmp
test
mov
addl
xchg
je
fbld
jb
add
clc
aaa
mov
add
add
addl
jecxz
setb
in
adc
cmp
pop
xchg
cmpsl
mov
mov
sbb
pop
inc
xor
jmp
mov
mov
imul
pop
add
pusha
mov
pop
mov
mov
stos
mov
daa
outsl
ja
cmc
and
push
loope
fbld
sub
movsb
xchg
ss
jns
mov
cli
in
fisttpll
idivb
hlt
xchg
clc
jns
jo
cmpsb
mov
rolb
sub
mov
leave
loop
dec
mov
imul
push
pop
sub
push
push
fimuls
xchg
sti
pop
lret
outsl
jo
dec
and
pop
push
insb
xor
sub
and
xchg
adc
or
loope
das
sbb
popa
inc
jecxz
sarb
xor
lods
xchg
mov
inc
mov
xchg
fsts
call
testl
insb
subl
movsb
cmp
xor
nop
iret
cmpsb
push
inc
je
imull
cmpsb
fists
mov
jecxz
test
xor
jnp
sahf
push
cmp
xchg
pop
testl
repnz
cld
js
dec
mov
sbb
xchg
bound
inc
push
pop
js
cwtl
sahf
jne
into
add
mov
lods
repz
add
cmp
mov
movsb
shr
lret
sbb
mov
jl
mov
mov
sbb
xchg
or
ret
push
ds
and
inc
nop
and
lods
push
outsl
or
test
xor
loop
test
cmp
push
sub
sbb
out
jbe
cwtl
popf
push
test
push
add
inc
insb
stos
ficoml
push
inc
loopne
icebp
add
ds
in
push
cld
ja
ljmp
mov
insl
mov
push
cmp
int3
repnz
rcl
push
imul
in
in
test
cmp
cmp
mov
imul
repz
or
je
lahf
jbe
out
jl
fs
lods
popa
test
or
leave
and
into
out
ljmp
in
inc
mov
adc
jnp
xor
leave
dec
jge
mov
jg
adc
or
ljmp
inc
pop
mov
xchg
fdivl
data16
add
pop
inc
int3
cwtl
imul
or
xchg
sahf
inc
mov
mov
inc
mov
add
scas
inc
mov
stos
mov
in
push
jmp
pop
jno
jg
cli
stc
or
fcoms
or
addr16
scas
mov
aaa
mov
in
test
shlb
jns
ret
jmp
lret
mov
sub
stc
push
sub
adc
xchg
repnz
and
dec
cmp
xor
xor
insb
add
andl
popa
lahf
xchg
insb
bound
dec
arpl
pop
loop
es
fs
dec
and
mov
mov
sub
inc
mov
xor
xchg
outsb
mov
mov
enter
fwait
roll
inc
mov
and
sahf
add
adc
fistpll
sbb
dec
ss
enter
repz
lock
out
or
xchg
mov
add
jp
jl
scas
inc
pop
sbb
xor
int3
mov
stos
fcmovbe
push
pop
xorl
sbb
jnp
ljmp
sub
incb
sub
inc
push
jecxz
mov
test
cmpsl
and
std
jno
push
add
mov
mov
mov
adc
es
cmp
jns
jg
cmp
xor
adc
flds
in
jnp
mov
push
cmp
aam
mov
fmull
test
or
mov
in
cs
or
jmp
rolb
sbb
pop
lret
scas
sbb
or
sub
dec
xchg
pop
mov
mov
dec
lahf
xchg
ljmp
dec
sbbb
scas
inc
sub
rcll
pop
jne
jne
test
sahf
pop
mov
pop
push
sub
ficompl
dec
in
sbb
mov
stc
bnd
js
sarb
sahf
sahf
sub
lret
mov
stos
enter
xchg
loopne
xchg
xchg
inc
xchg
stos
mov
sub
rorl
and
pop
adc
push
jno
cwtl
dec
mov
jae
arpl
push
mov
push
aad
dec
daa
push
sbb
sub
pop
or
add
mov
cmpsl
repz
sub
pop
pop
daa
aam
lods
add
dec
inc
shl
hlt
dec
lcall
std
dec
mov
inc
lock
sub
dec
inc
aaa
insb
in
sbbb
or
add
lea
adc
data16
out
imul
jg
mov
adc
add
jge
outsl
icebp
imul
gs
adc
je
pop
inc
cmp
jne
outsb
inc
fistl
dec
inc
push
neg
sub
mov
lea
mov
sub
loopne
out
shlb
sbb
pop
popa
fisubrs
cli
hlt
int3
cltd
popl
mov
xchg
sbb
mov
push
cmp
das
cli
sbb
jb
add
subb
and
pushf
cmp
filds
rcl
cmc
lret
push
pop
jmp
pop
lahf
inc
bound
mov
jmp
fdiv
int3
dec
sbb
gs
jmp
sarb
in
aas
ljmp
cmc
lods
push
ret
mov
adc
imul
lock
stc
push
hlt
orl
sbb
inc
popf
adc
or
xchg
lds
pop
dec
xor
and
mov
hlt
mov
sub
shrb
dec
incb
andb
pop
pop
ds
fucomi
dec
imul
out
icebp
lods
cmp
dec
cmpsb
stos
insl
cli
filds
xor
stos
inc
xchg
gs
sub
rorl
or
outsb
mov
dec
add
xor
test
orl
daa
pop
and
out
lds
in
cmp
stos
lcall
pop
in
out
adc
inc
mov
arpl
mov
sub
sbb
iret
cmp
faddl
test
pop
push
xor
mov
cltd
shl
aad
test
jp
mov
aas
jp
and
fidivs
push
sub
bound
ljmp
mov
pop
mov
jns
ss
mov
ret
sub
cli
mov
mov
push
sub
jg
pop
into
out
lods
sub
mov
lock
lods
mov
xchg
xor
lea
test
and
movsl
xchg
and
call
mov
shlb
sbb
xchg
ror
jne
aaa
xchg
push
dec
xor
jae
jmp
repz
stos
push
lcall
hlt
jbe
mov
mov
sbb
push
les
sub
loop
and
xor
fwait
add
and
push
inc
ljmp
cmp
sbb
sbb
push
fcmovnb
jl
adc
and
sbb
jg
addr16
and
in
rcrb
add
icebp
ror
pop
test
test
sub
repz
xor
das
not
int
jmp
jb
pop
mov
addr16
fsubs
je
inc
and
js
fistpl
xchg
sub
fldt
nop
int
add
flds
mov
xchg
notb
fsubrs
inc
rcll
dec
or
mov
mov
stos
xchg
inc
call
fists
xlat
in
es
fimull
inc
js
inc
add
cmp
imul
xchg
fsubs
adc
jo
repz
stos
mov
and
mov
dec
mov
or
xchg
mov
sub
stc
test
daa
jns
dec
in
out
divb
sub
pop
adc
lcall
jg
mov
subps
ljmp
jle
mov
imul
push
out
.byte
ss
and
sub
adc
addr16
icebp
js
aam
xchg
repnz
hlt
fdivrs
filds
sub
flds
stos
push
cmpsb
aad
shr
sub
xor
fisttps
cmp
adcb
ss
test
psrad
loop
sbb
daa
iret
popf
jo
js
inc
pushf
and
movsl
cmp
loopne
cmp
test
and
push
jnp
pop
popfw
loope
xchg
mov
or
inc
jle
cmp
movsb
ljmp
test
mov
or
rorb
pop
mov
pop
insl
pop
mov
stos
jecxz
push
or
cmp
insb
xchg
cmp
cmp
cwtl
pop
and
mov
sarl
mov
mov
idivl
inc
xor
in
ret
mov
or
in
jne
and
shrl
dec
xchg
int
ljmp
je
out
jo
ss
fbld
mov
aad
inc
lea
decb
lods
mov
xchg
shlb
jo
push
mov
or
and
mov
sti
idivb
and
xchg
mov
test
sub
jp
add
adc
inc
mov
std
or
fnstenv
insb
mov
aas
adc
add
xlat
lcall
adc
movl
pusha
push
enter
mov
inc
add
mov
adc
inc
dec
mov
in
jns
popf
fcomps
push
jo
xlat
nop
fistpll
aas
mov
nop
ljmp
add
mov
cmp
es
clc
mov
xchg
pop
ljmp
and
jbe
push
cmc
pop
inc
insb
mov
scas
inc
lock
jnp
or
jno
aam
inc
mov
and
sahf
in
pop
lock
mov
aas
inc
cmp
xlat
inc
shr
mov
mov
adc
in
lahf
xchg
in
mov
hlt
shr
push
fsubr
push
sahf
xchg
pop
sbb
hlt
mov
fidivl
sbb
sub
push
jge
inc
sbb
and
jb
mov
fsubrs
sbb
push
leave
in
das
jp
inc
mov
iret
push
cmpsl
add
pop
or
nop
insl
lods
and
sbb
lret
push
jecxz
ficoms
mov
jecxz
push
sbb
addr16
out
out
and
aaa
insl
mov
sti
lahf
cmp
inc
mov
xchg
dec
icebp
roll
dec
cmp
in
fbstp
popa
int3
xor
pop
subb
das
es
jae
mov
lret
cmp
cmp
mov
lods
dec
sub
imulb
scas
mov
xchg
pushf
cs
out
push
jmp
pop
addl
adc
inc
lcall
adcb
cld
scas
mov
jecxz
dec
cmp
push
jecxz
popf
call
stos
mov
test
xchg
sub
es
in
iret
pop
xchg
das
js
ret
cmp
inc
movsl
jle
shl
xor
test
jbe
repnz
test
sub
mov
enter
aad
stos
pop
rcrl
fcomps
in
mov
adc
ficompl
not
je
xor
or
xchg
or
adc
lret
pop
inc
inc
sub
insb
lods
push
or
and
mov
in
aaa
lds
jmp
adc
dec
sub
inc
pop
lods
adc
sbb
cmpsl
scas
sbb
pop
in
adc
inc
das
pop
pop
mov
mov
jmp
pusha
dec
cmp
inc
sub
jns
das
xchg
inc
pusha
cmpb
test
nop
dec
mov
mov
cltd
subl
outsb
lret
mov
pop
jl
int
repnz
icebp
inc
les
mov
pop
pusha
jmp
sub
push
fwait
push
push
sub
cltd
fmuls
add
jl
mov
lret
and
popa
xor
hlt
es
clc
bound
fisubs
test
insl
mov
jecxz
insb
xchg
xor
mov
into
outsb
add
inc
in
cmpsb
mov
mov
push
sbb
and
and
test
xchg
rorl
adc
daa
leave
lods
nop
lds
inc
or
xchg
jo
test
inc
shl
xchg
push
notb
fistpl
xchg
ja
mov
ss
xor
sbb
sub
pop
test
and
lods
arpl
jnp
push
sbb
mov
lretw
adc
addl
out
xchg
adc
imul
imul
lock
sahf
cli
daa
aas
jl
pop
int3
sahf
ds
xchg
stos
fimull
fisttpll
inc
sbb
shll
push
pop
data16
lods
pop
scas
lcall
push
jl
lret
push
mov
or
iret
add
mov
fiaddl
or
adc
inc
loopne
jl
shr
inc
lret
gs
gs
or
dec
mov
dec
inc
adc
arpl
shll
aad
mov
loop
in
pop
inc
out
jmp
push
adc
mov
loopne
pop
lock
xor
xcrypt-ecb
cmpsl
mov
mov
mov
in
adc
pop
sbb
push
subb
xlat
xor
ljmp
popf
fmuls
inc
stc
popa
lcall
ja
insb
ljmp
mov
cmp
cmp
jb
inc
xchg
adc
aaa
rcl
imul
cmp
pop
inc
pop
out
popa
sbb
xchg
sbb
xchg
mov
add
popf
dec
push
das
and
outsl
addr16
mov
bound
fiaddl
test
pop
pop
cmpsb
movsb
stos
pop
xchg
js
fs
rclb
sub
ret
cltd
push
js
add
jecxz
push
xor
cwtl
dec
ss
ror
cmp
js
jb
aas
mov
lret
mov
popa
pop
jl
jnp
cmp
add
mov
xor
cmp
jg
push
clc
and
xchg
dec
xor
add
mov
ret
les
mov
adc
sbb
scas
ds
into
lods
arpl
popf
jnp
push
sbb
fisubrs
pop
jbe
dec
mov
add
outsb
sub
jp
test
data16
push
cs
movsl
popf
ljmp
add
and
jo
cmpsl
inc
pusha
fprem1
xchg
fwait
lahf
add
insl
int3
sahf
arpl
sbb
jle
mov
adc
sahf
pop
scas
sub
mov
testl
push
jg
sbb
rcr
aaa
pop
sbb
pop
movsb
shll
xor
xor
frstor
pop
add
xchg
jb
lea
sub
lock
ja
ss
pusha
cmp
arpl
loop
in
push
lahf
lock
sub
xchg
into
xchg
sub
xor
movsl
adc
pop
jl
push
jae
popf
push
bound
xor
mov
out
mov
mov
rcr
fcompl
ljmp
push
pand
add
cmp
inc
inc
xchg
icebp
or
int
cmp
push
xchg
add
sbb
ret
pop
inc
gs
leave
repz
and
add
mov
mov
and
gs
lods
test
fucomp
push
inc
imul
cmp
into
movsl
into
mov
pop
ficomps
sahf
fbstp
repz
stc
rol
call
mov
or
rorb
pusha
xchg
or
sahf
sub
cmp
or
shll
jae
xchg
lahf
adc
in
mov
cmp
aas
mov
and
in
sbb
stos
mov
mov
in
es
mov
mov
jae
repz
outsb
pop
xor
jns
push
and
mov
test
dec
dec
mov
in
movsb
add
stos
int
fs
in
xchg
push
je
inc
movsb
loopne
or
in
jb
mov
mov
mov
iret
inc
sti
dec
adc
ret
cltd
xor
mov
mov
mul
jne
es
pop
mov
outsb
stc
mov
out
and
or
aaa
in
and
outsb
push
inc
out
leave
pmaxub
aaa
jno
sbb
and
std
cmpsl
stos
ret
push
or
mov
divl
shrl
mov
or
push
hlt
imul
push
mov
pop
lods
inc
out
inc
sbb
mov
aad
or
pusha
jg
inc
shrl
das
xor
rolb
scas
nop
sbb
negl
cmovl
mov
pop
and
in
and
push
cmp
repnz
lods
icebp
jg
out
shlb
sbb
lcall
shll
add
and
jne
test
es
xor
pop
imull
pop
sub
lods
lods
mov
in
std
test
int
cwtl
xor
pcmpgtd
std
fstpl
cltd
xor
xor
or
lods
push
mov
jb
or
push
out
fsts
jae
enter
and
xchg
mov
out
jno
jns
cmpsl
push
sub
pop
cld
adc
scas
dec
inc
push
mov
xchg
pop
pop
int3
leave
mov
in
ret
int3
andl
mov
xchg
stc
adc
push
jg
lock
pushf
movsb
jmp
and
in
inc
cmova
mov
lret
aad
mov
or
lret
mov
or
cmp
outsb
addr16
mov
hlt
fnstenv
call
mov
insl
pop
push
dec
lea
dec
into
sarb
scas
shl
fnstsw
jle
pop
dec
push
in
sahf
fsubrs
fstpl
rcrb
and
mov
cwtl
and
imul
rcr
mov
and
jbe
repz
push
movsl
mov
movsb
push
std
add
test
push
jp
cmpsl
and
mov
js
mov
aad
dec
push
jp
jl
leave
dec
push
xor
mov
mov
cli
les
mov
jmp
jl
inc
cmp
aad
mov
or
ds
or
dec
lock
sub
cmp
xchg
mov
sti
cltd
lret
lods
into
mov
sub
loop
lods
aas
sub
rcrl
mov
and
xor
sbbb
les
jle
loope
data16
fadd
sbb
fstl
dec
ljmp
sub
xchg
fbld
jae
mov
rolb
sahf
mov
add
jecxz
jne
jecxz
data16
push
lods
push
pusha
xlat
popf
popa
in
sbb
clc
and
or
or
lahf
ja
xor
movsb
dec
xor
xor
hlt
leave
xchg
fisttpll
xor
and
inc
addl
add
xchg
xlat
pop
insb
insl
push
in
lea
dec
ss
and
sbb
or
adc
sbb
ficoml
push
loope
cmp
bound
xor
push
dec
cvttps2pi
jb
ja
cmpsl
jg
push
sub
fidivs
add
rcl
cmp
mov
lahf
aaa
subb
or
mov
cmp
dec
sarl
push
push
mov
icebp
popa
cmp
fisubl
sub
xchg
jbe
sbb
jp
fdivs
and
lods
and
jp
mov
sub
inc
std
bound
cmpsb
in
outsb
int
fdivrs
popf
lods
jns
or
dec
stc
push
inc
icebp
test
xchg
push
adc
jge
xor
cmp
outsb
ljmp
jne
test
jo
sub
popf
mov
out
sub
fcompl
in
xchg
mov
pop
insl
mov
rep
jnp
fisttps
fsubs
xchg
lahf
mov
inc
adc
ja
sbb
jno
jns
and
js
sub
loop
mov
std
sbb
inc
icebp
dec
imul
cmp
lea
out
pusha
mov
test
icebp
pop
dec
mov
xor
push
ret
cmpsl
cmpsl
mov
push
les
mov
mov
jbe
mov
insb
sub
jns
xchg
sub
jl
test
out
jns
mov
cmp
dec
mov
push
adc
stc
popa
cmpsb
xor
push
add
adc
sarb
int3
idivb
stos
dec
mov
js
loopne
stc
xchg
call
cld
pop
push
fstpt
cmp
das
bound
sbb
cmp
inc
push
ret
cmpsb
cwtl
test
pop
fistl
dec
xchg
rol
out
mov
and
notl
jmp
inc
arpl
jg
mov
fwait
mov
and
rolb
adc
test
arpl
mov
pop
int
and
xchg
lcall
push
rolb
fsubl
pop
adc
push
pop
cld
and
mov
cmp
pop
pushf
add
cmp
inc
iret
jle
lods
popf
ret
adc
cmp
push
sbb
jae
push
stos
jg
sub
std
dec
aad
int3
in
lods
push
pop
xchg
push
xor
dec
mov
int
cmp
pusha
cmp
rcr
jno
push
jae
cld
pop
mov
push
scas
xchg
and
fbstp
adc
in
xor
mov
mov
cwtl
mov
mov
sub
xor
push
rcl
repnz
inc
lods
fs
pusha
aad
dec
cmpsb
jle
mov
loop
rclb
sbb
push
jecxz
jmp
push
inc
pusha
fadds
xchg
mov
mov
lret
and
orl
notb
sarb
loop
lds
lock
mov
push
xchg
or
mov
push
adc
or
inc
daa
fnstenv
xor
lea
xchg
xchg
out
in
pop
outsb
or
inc
adc
jne
movsl
outsb
xchg
popa
adc
adc
or
mov
aam
cmp
sbb
xchg
pop
loopne
mov
ret
pop
aad
mov
jnp
mov
xchg
or
xor
jb
shll
cmp
dec
aam
and
out
test
in
mov
push
and
dec
mov
stos
dec
push
aad
int3
out
xchg
lahf
dec
fisubrs
in
xor
mov
cmp
test
movsb
xor
cmpsb
testb
int3
pop
dec
jp
leave
je
jae
mulb
pop
push
out
fwait
push
jecxz
and
lods
call
mov
pusha
out
imul
xor
add
lahf
mov
int3
test
out
aas
jecxz
std
ds
fwait
mov
jmp
xor
movq
cmovae
insl
dec
jnp
loop
jmp
xchg
cmpsb
imul
repnz
and
sahf
aas
or
sti
dec
xor
sbb
or
jb
shlb
pop
jl
lcall
outsb
je
xorl
cmp
out
popf
xor
hlt
mov
adc
push
mov
mov
dec
fdivs
inc
dec
mov
mov
repnz
in
test
pop
ret
cmp
jge
push
mov
cmpsb
mov
lock
incl
mov
push
js
cwtl
test
dec
fmuls
out
xor
fsubrl
and
popa
addr16
jge
clc
inc
xchg
jae
and
out
imul
or
push
dec
sbb
loope
pushf
or
outsl
adcl
mov
pop
lods
js
and
xor
push
and
lahf
es
lods
aad
ret
cmc
jecxz
arpl
xchg
repz
loope
or
jns
mov
jl
test
mov
mov
insb
dec
mov
lock
dec
push
mov
jbe
jmp
stos
add
sti
in
mov
push
leave
cmpl
push
sbb
xorb
cmp
arpl
inc
into
inc
cmp
push
into
or
inc
repz
inc
sub
test
pop
cmp
mov
or
push
sbb
fstl
and
pop
fcompl
addl
dec
cmp
pop
jle
flds
xor
push
fisubrs
in
aas
inc
repnz
call
push
xlat
mov
or
jno
sub
mov
pop
je
gs
adc
loope
std
repz
adc
movsl
arpl
leave
jno
or
xor
rcl
jp
add
xor
subb
push
lcall
pop
mov
ds
inc
jecxz
pop
mov
dec
bound
jne
dec
mov
lods
or
dec
lret
mov
mov
leave
xchg
pop
push
push
lcall
movsb
imul
leave
idivl
pusha
ss
dec
inc
or
mov
xchg
dec
xor
mov
out
jae
or
xchg
inc
mov
repz
rorb
adc
mov
out
aam
outsl
sbb
out
jne
das
inc
add
mov
mov
inc
arpl
cmp
hlt
inc
sarb
sub
jmp
repnz
jnp
inc
sahf
ret
pop
jns
andl
negl
push
dec
out
nop
inc
imul
add
scas
jl
out
ss
add
push
nop
xchg
xor
jl
mov
add
and
sti
ror
inc
cmp
mov
seto
jmp
pop
in
test
lock
and
hlt
pusha
mov
imul
dec
push
add
xor
jne
push
adc
jno
aas
sub
fnstenv
out
push
xchg
jbe
push
fildll
xor
pop
cmp
lret
mov
mov
mov
mov
or
rcrl
jo
push
sbb
xchg
push
insb
out
pop
outsb
imul
lret
and
stos
dec
lahf
bnd
subl
xchg
stc
pop
or
dec
in
ja
sub
inc
adc
push
stos
and
fildll
lret
lahf
stos
pop
adc
stos
push
push
cwtl
imul
add
push
pop
cli
into
add
idivb
call
inc
or
cmp
loopne
mov
fucom
jg
aam
rclb
xchg
addr16
and
push
cmp
push
xor
push
jnp
test
sbb
lcall
mov
jmp
out
sahf
pop
push
mov
cmpsb
nop
insl
insb
mov
cmpsl
popa
adc
dec
fisubl
mov
ss
das
stos
inc
mov
fldcw
mov
das
aad
or
das
mov
int
pop
add
xchg
rcrb
jle
cli
cmp
add
add
test
and
nop
lcall
aas
jo
jle
xchg
ja
and
movb
jne
sub
mov
fadds
mov
icebp
aas
xorb
in
adc
test
mov
test
inc
xchg
sti
pop
or
movsl
or
inc
js
test
jo
das
push
repnz
mov
lret
sarb
out
and
inc
stos
hlt
add
inc
sbb
mov
xchg
cmc
jg
leave
lahf
cmpsb
push
jmp
mov
sbb
jg
sub
lea
pop
out
ret
pop
adc
push
lret
cmp
je
and
test
fs
or
pop
and
mov
shlb
in
stos
hlt
fbld
xchg
testb
inc
jbe
fst
sarl
outsl
adc
movsb
mov
imul
sub
addr16
arpl
sbb
enter
test
push
loopne
mov
enter
xlat
sub
out
mov
imul
mov
xchg
rorl
cmp
add
incb
dec
add
jmp
mov
in
xor
jmp
xor
sub
aaa
or
dec
shll
in
pop
xchg
out
mov
hlt
jp
and
ret
push
mul
lods
sahf
mov
in
sub
xchg
cmpsb
mov
pop
repnz
sbb
imul
rcll
loope
cli
pushf
stos
lret
nop
adc
sbb
mov
cmpsb
jmp
nop
mov
xchg
or
popa
movups
ret
sub
lock
fwait
mov
dec
push
dec
pop
push
leave
sub
movsl
jecxz
lret
das
inc
lret
pop
lods
das
jbe
gs
dec
adc
sarl
faddl
fdivr
xchg
push
into
pop
in
movsb
fldenv
push
clc
pop
mov
push
dec
push
je
cs
xor
mov
mov
pop
rclb
icebp
fnstsw
push
xor
mov
mov
rcl
cmp
push
mov
mov
xor
nop
add
aam
mov
lods
repnz
stos
add
cmp
ds
or
pop
cs
jne
pop
and
xorb
or
lds
ret
cmp
fwait
lahf
aam
xchg
aaa
into
jp
dec
or
add
inc
data16
fcoms
daa
daa
xor
mov
mov
roll
add
push
fucom
fs
push
sub
xchg
dec
fimull
jecxz
lahf
xchg
not
jmp
adc
jl
adc
and
xor
notl
push
xchg
jg
je
loopne
mov
dec
xchg
mov
mov
push
xchg
out
insl
pop
adc
hlt
xchg
das
pop
inc
gs
mov
movsl
cmp
xchg
mov
iret
repz
aad
push
out
das
jno
hlt
jg
sbb
inc
fwait
mov
xor
fwait
mov
sarb
stos
pop
mov
sti
sub
in
and
xchg
dec
pop
push
push
or
xor
adc
gs
test
loopne
pop
inc
or
or
fdivp
jnp
rol
popf
push
xorb
mov
fsubs
mov
adc
sbb
in
or
and
mov
and
inc
lret
loope
pusha
das
pop
jne
insl
inc
or
in
lahf
mov
leave
in
and
psubq
cmp
inc
dec
sbb
lods
mov
push
lock
mov
popa
dec
shr
mov
loope
adc
das
pop
outsb
rorb
pop
mov
inc
iret
or
negb
jo
andb
jge
dec
sti
dec
daa
jle
lods
cmp
je
scas
ss
mov
push
mov
jae
scas
jb
mov
dec
in
pop
mov
mov
sbb
fnstcw
jl
pop
gs
and
lret
aaa
inc
das
iret
pusha
adc
cltd
cmp
ja
jbe
pop
icebp
es
pop
xor
cmp
jae
and
lcall
and
add
jl
inc
int
and
orl
xchg
es
or
scas
adc
and
rolb
cmc
pop
aas
mov
sbb
fwait
pop
dec
shrb
outsl
cmp
iret
push
out
int
mov
imul
mov
movsl
fisubrl
sbb
int3
loop
fwait
insl
sbb
mov
push
insl
inc
mov
push
loope
mov
iret
adc
mov
jp
xchg
xchg
test
jb
in
jg
sahf
pop
pop
pop
mov
lret
stos
pop
xor
pop
jno
aas
aam
jns
scas
cld
cli
jno
aaa
or
sbb
nop
add
push
jge
cmp
add
insb
add
xor
adc
repnz
sub
js
hlt
cmp
xchg
jecxz
sub
shll
aam
adc
and
out
cmp
lock
xor
mov
pop
out
std
cmp
dec
sub
data16
xor
shrb
movsl
sub
mov
popf
jl
pop
cmpsb
outsl
fwait
sti
cwtl
xor
data16
repnz
xor
adc
or
in
or
sbb
popf
test
adc
addl
cltd
test
jl
sbb
mov
pop
or
aaa
inc
cmp
negl
or
ja
addr16
inc
xchg
adc
aaa
inc
sub
incl
stos
inc
xchg
andl
mov
mov
jb
mov
or
pop
shlb
xchg
imul
and
ljmp
imul
adc
in
nop
sbb
cmp
mov
insl
jb
cmp
inc
test
push
cmp
mov
inc
mov
aaa
jne
push
inc
cmp
popa
movsb
pop
mov
mov
inc
dec
pushl
test
loope
data16
or
cmp
jg
jl
shlb
popf
jno
pop
mov
xor
push
mov
mov
ret
dec
sbb
fscale
push
sti
dec
out
daa
in
add
xchg
std
iret
lods
out
js
xchg
jge
mov
jecxz
pop
imulb
out
and
fdivrl
lret
icebp
iret
xor
popa
dec
and
push
xor
and
lods
les
cltd
rclb
push
add
push
and
jge
sarb
jno
movsb
sbb
xor
mov
lcall
orb
rol
negl
xorl
xchg
in
inc
adc
inc
and
or
pop
imul
scas
adc
fimuls
inc
xchg
pushf
aaa
mov
stos
or
mov
cmp
jmp
in
xchg
and
ja
push
or
mov
push
push
fildll
mov
mov
in
inc
inc
bound
push
cmp
fistpll
dec
push
rcrl
xchg
popf
bound
push
daa
outsl
lods
jmp
xchg
adcb
fwait
adcb
xchg
mov
in
fcmovu
sub
call
lods
loopne
ja
leave
lock
ret
adc
mov
test
mov
push
xchg
dec
sahf
roll
sbb
call
mov
mov
imul
stc
inc
xchg
mov
scas
mov
inc
mov
adc
mov
mov
and
mov
mov
adc
lods
jge
cs
or
scas
add
mov
das
pop
std
jmp
add
and
mov
xchg
repz
xor
hlt
add
mov
pop
dec
icebp
dec
test
add
and
sarb
jnp
fstps
or
add
enter
scas
mov
dec
jg
aam
cld
aas
jg
sbb
div
dec
push
adc
or
fiaddl
fdivl
dec
lret
rcrb
lret
dec
jo
int
cli
adc
cmpsb
lahf
jp
cmp
xor
fcmovne
sub
sub
xor
cmpb
inc
lea
outsl
mov
lods
mov
mov
mov
mov
mov
test
aam
mul
push
jbe
or
jp
dec
mov
mov
and
push
cld
je
mov
xchg
fwait
andl
mov
cli
fcomps
and
inc
fcomps
mov
pusha
lods
inc
pop
push
pushf
mov
inc
and
cmp
fs
adc
jge
sbb
ret
and
aas
call
in
test
repnz
sbb
xor
mov
push
jae
pop
or
adc
in
cmp
loopne
ds
dec
sub
dec
das
jmp
jb
vandps
mov
pop
xchg
ss
stos
fbstp
stos
and
hlt
jp
push
fadd
movsb
fxch
pop
mov
adc
test
lret
cmpl
outsb
xor
dec
mov
lret
push
je
push
jae
xor
mov
hlt
sub
arpl
push
lock
mov
imul
xor
aam
mov
add
aaa
cmp
es
or
lret
stc
in
and
or
add
fbstp
push
mov
push
mov
pop
mov
push
out
xor
loop
in
js
fucomi
jp
adc
xchg
or
bound
dec
xchg
xlat
ds
ljmp
cmpsl
and
xchg
push
pop
push
mov
leave
adc
shrb
test
inc
dec
out
push
adc
out
xor
ret
adc
mov
pop
test
jl
mov
arpl
adcl
inc
lods
repnz
movsw
bswap
out
add
lcall
dec
mov
add
cmp
das
sbb
xor
sbb
mov
jo
movsl
fwait
and
jmp
dec
mov
add
adc
int3
fs
sbb
or
stos
adc
in
add
push
inc
outsl
shrl
testl
popf
gs
arpl
xchg
lahf
xchg
.byte
.byte
add
add
add
pop
add
or
adcb
addb
add
push
add
add
add
add
add
mov
add
enter
adc
add
sub
add
inc
add
addb
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
addb
add
loopne
add
clc
add
addb
add
sub
add
inc
add
orb
add
pop
add
orb
add
jo
add
mov
add
mov
add
add
add
add
add
orb
add
call
add
add
add
adcb
add
sbb
adcb
add
xor
adcb
add
dec
add
adcb
add
pusha
add
adcb
add
add
nop
add
adcb
add
test
add
add
add
add
add
add
or
add
add
add
andb
add
add
subb
add
add
subb
add
add
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
addb
add
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
sbb
add
xor
add
dec
pop
add
pusha
pop
add
js
add
add
add
add
add
add
add
add
add
nop
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
or
add
lcall
add
add
add
cld
add
in
add
add
add
dec
dec
push
add
add
in
add
add
add
movsb
inc
push
add
add
add
add
add
xor
add
add
add
add
add
add
in
add
add
add
in
sbb
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
hlt
ret
test
add
in
add
add
add
dec
mov
add
add
add
add
add
add
in
add
add
add
cld
mov
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
or
or
test
add
in
add
add
add
fs
add
add
add
add
add
add
in
add
add
add
adc
or
test
add
in
add
add
add
insb
mov
test
add
in
add
add
add
inc
test
sub
add
in
add
add
add
or
or
add
add
in
add
add
add
or
or
xor
add
in
add
add
add
cmp
or
add
add
add
add
add
add
add
in
add
add
add
aam
or
sub
add
in
add
add
add
add
or
push
add
in
add
add
add
insb
jecxz
add
add
add
add
add
add
add
or
addb
add
add
add
add
add
out
add
add
add
add
add
add
add
call
add
in
add
add
add
mov
or
cmpsb
add
add
add
add
add
add
ljmp
in
add
add
add
adc
or
dec
add
add
add
add
add
add
test
pop
add
add
add
add
add
add
test
and
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
test
and
add
in
add
add
add
cld
orl
add
add
add
add
add
add
orl
add
add
add
add
add
add
orl
add
add
add
add
add
add
or
push
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
cmc
or
loope
add
in
add
add
add
lods
clc
or
lcall
add
add
add
or
lock
add
add
add
add
add
cld
or
mov
add
add
add
add
cld
or
test
add
in
add
add
add
or
push
add
add
dec
add
dec
add
inc
add
dec
add
add
and
xorl
fistpl
pop
push
sbb
or
jg
aaa
clc
std
mov
sub
scas
cli
cmc
pop
jmp
or
sbb
push
sarb
dec
mov
add
and
mov
adc
fiaddl
mov
aad
sti
sub
xlat
dec
cmpsl
aas
mov
cs
inc
mov
shrb
stos
aam
test
xlat
push
xchg
inc
cmpsb
xchg
cmp
dec
out
mov
in
sub
aas
popf
sbb
add
gs
cmpsb
dec
in
inc
cmpsl
ds
inc
pop
pop
fdivrl
sbb
insb
dec
push
jns
sub
cltd
scas
out
jbe
mov
cmp
sti
inc
out
jno
in
cli
cs
dec
cmpsl
aam
mov
mov
mov
lahf
mov
sti
enter
add
xor
cmp
or
jae
adc
jb
pop
mov
in
push
xchg
mov
jno
and
and
push
ss
sar
add
test
mov
add
push
inc
movb
mov
push
cmp
mov
and
pop
std
sub
shrb
loop
sbbl
dec
scas
mov
and
xorl
mov
dec
inc
add
or
fwait
and
dec
movsb
shll
outsl
or
in
dec
adc
ret
rorl
jl
xor
insb
inc
cmp
ret
inc
enter
cmp
push
cld
imul
push
decl
call
mov
gs
les
jmp
push
adc
push
lods
mov
pop
fwait
xchg
mov
xchg
in
cwtl
rcl
dec
lods
fildl
adc
mov
cltd
mov
scas
les
repnz
fs
out
inc
add
push
mov
sbb
xchg
ret
mov
mov
enter
jb
stos
mov
je
push
sbb
push
adc
cmp
push
mov
rorb
cmp
or
push
or
jne
inc
ret
pop
xorl
mov
sub
and
xchg
mov
push
pop
pusha
rol
std
mov
add
loop
inc
sub
out
fsubs
jl
stos
stos
or
jbe
mov
fprem1
outsl
or
cmp
add
mov
jle
shll
out
mov
adc
repz
lret
sbbl
rcl
or
mov
mov
xchg
int
clc
push
add
cmc
sbb
add
lcall
pop
mov
inc
dec
pop
stos
pushf
push
lods
cmpsl
sbb
addps
xchg
pop
imul
lahf
cld
xchg
adc
outsb
mov
push
das
call
arpl
shll
gs
jp
dec
pop
lahf
in
pushf
xor
loopne
push
daa
test
fcomps
shlb
sub
in
push
stos
testl
gs
aaa
sub
xor
test
movsl
jg
rcll
jle
sbbb
mov
push
mov
stos
test
movsb
jo
popa
and
cmp
mov
sub
dec
out
icebp
pop
imull
fucomi
outsb
adc
xchg
inc
adc
jnp
out
mov
dec
outsl
out
jmp
cmpsl
mov
dec
xchg
inc
lcall
into
push
mov
xchg
cwtl
outsb
lods
in
xchg
mov
addr16
int
pop
xchg
sahf
cmpsl
test
push
lret
xlat
dec
nop
out
lods
cwtl
mov
stc
aaa
ljmp
jecxz
sbb
mov
sbb
jmp
daa
aas
adc
in
leave
xchg
imul
mov
add
inc
cli
dec
cmp
stos
ret
or
loopne
and
ret
mov
filds
pop
movsb
sbb
movsb
xor
sub
jge
jle
or
dec
dec
insl
jg
movsb
aam
mov
in
imul
imul
out
or
push
out
arpl
in
xchg
sbb
rclb
cmc
call
inc
ja
dec
add
pusha
xchg
mov
inc
pop
jno
push
jne
loopne
aad
pop
xor
outsb
pextrw
pop
shrb
sbb
xchg
daa
mov
vcvtdq2pd
mov
inc
aam
scas
cmp
add
xor
inc
xor
repnz
sahf
addl
mov
data16
cmc
aam
rclb
cmp
adc
repz
inc
jae
xchg
loope
add
notb
dec
hlt
sub
int3
nop
xor
add
or
test
fmuls
fildl
leave
arpl
repz
cmp
in
test
popf
lods
mov
and
jnp
jno
push
fucomi
test
lcall
and
in
xor
push
mov
cmp
and
std
stc
jle
mov
mov
loopne
ficoml
sbb
bound
push
inc
and
ja
cld
and
mov
jb
adc
adc
fucom
or
cmp
sub
pop
mov
fs
mov
lcall
repnz
pop
iret
add
std
xchg
mov
cmpsb
aaa
jno
imul
dec
and
push
pop
sub
jb
movsb
lret
addr16
jmp
mov
lahf
and
mov
pop
sub
addr16
pop
push
inc
clc
test
sbb
call
dec
std
and
sbb
jne
or
mov
lcall
inc
mov
xor
cmp
xor
or
fcmovb
push
fsubr
leave
pop
xor
xchg
push
xchg
mov
shll
xchg
xlat
mov
sbb
mov
imul
das
mov
imul
inc
sbb
jo
cmpsl
rsm
das
std
imul
mov
mov
pushf
pop
push
mov
cmp
es
push
and
add
push
jno
cmp
shll
fwait
or
icebp
dec
cmp
inc
pop
fidivrl
push
imul
daa
jmp
out
jge
test
repz
cmp
sub
or
sub
shl
sbb
cmpsl
aas
xor
call
add
jbe
and
idivb
lret
adc
adc
ret
and
cmp
push
cwtl
out
fcompl
and
mov
dec
xchg
sti
adcl
xchg
sbb
mov
sub
std
dec
mov
test
addb
dec
jg
adc
pusha
or
popf
mov
es
sub
sahf
mov
test
ret
sbb
jecxz
mov
cmove
push
cmp
rcll
test
imul
aas
push
sbb
mov
test
pop
clc
out
add
daa
loop
ds
pop
jae
hlt
fcomps
sbb
push
leave
mov
cmp
mov
test
test
cltd
fstpl
cltd
imul
cmp
in
shl
gs
or
arpl
sbb
jae
icebp
push
pop
and
insl
aas
sub
mov
cmpl
scas
out
lret
insl
dec
push
mov
sbb
sbb
js
scas
xor
cmp
sub
cwtl
imul
push
sti
cmc
xor
sbb
push
fdivl
fcoml
jmp
adc
xchg
pop
sti
test
lret
stos
sbb
lcall
rcl
xchg
into
cmp
pop
into
repz
add
in
xchg
cmpsl
push
scas
outsb
inc
mov
cmp
dec
hlt
not
ja
daa
cmp
call
fisubrl
add
pop
push
cmp
cs
fdivrs
jo
scas
inc
push
loope
gs
adc
sub
pop
ret
jns
movhlps
xlat
std
test
push
cmp
data16
sub
sti
cmpsb
sahf
sub
push
adc
inc
leave
xchg
nop
rcll
pop
js
insl
or
lds
inc
loopne
adc
dec
test
sbb
popf
cmpl
faddl
daa
repnz
fsubs
pop
ja
push
sub
repnz
scas
lahf
ds
stos
scas
xchg
pop
inc
inc
mov
mov
sub
jnp
pop
cmp
in
push
in
or
dec
pop
scas
inc
lds
mov
inc
or
je
pop
pop
mov
mov
cli
mov
and
adc
mov
in
aaa
xchg
stos
mov
push
or
aad
insl
mov
aad
and
mov
add
dec
sub
sub
mov
dec
aaa
add
sbb
mov
inc
cld
push
ret
cmp
pop
mov
aaa
lock
dec
sub
inc
ja
aas
inc
jbe
imul
and
ja
fsubrs
cmp
imul
mov
hlt
dec
mov
sbb
dec
sbb
fisttpll
pusha
je
lcall
sub
cwtl
inc
sub
push
cmpsl
nop
jge
lret
sbb
out
xor
imul
dec
rep
ja
lock
xchg
lret
or
pop
mov
adc
xchg
adcl
incb
xchg
sub
mov
inc
lret
lods
push
xchg
loopne
and
movsb
push
mov
lcall
adc
sbb
jmp
rclb
cmp
xchg
in
insl
jge,pt
xchg
inc
ljmp
sti
cli
inc
insl
jnp
test
xchg
repz
enter
jno
loopne
gs
fs
imul
inc
jo
sbb
mov
scas
add
jl
lock
xchg
popf
ja
dec
cmpsl
ret
push
dec
xchg
add
inc
cmp
adc
add
push
insl
fadd
in
pusha
sub
xchg
out
ror
jp
mov
pop
out
aaa
cmp
and
sbb
mov
xor
ja
iret
les
sahf
or
subl
mov
test
push
pop
dec
imul
mov
mov
movl
add
mov
pop
mov
orb
or
and
data16
jmp
xchg
stos
sub
dec
jno
js
subl
sbb
xor
lock
rolb
lea
out
clc
mov
aaa
xchg
sub
std
sbb
cmpsb
inc
rol
dec
mov
push
push
sbb
jns
sbb
insb
add
sti
or
movsb
ja
push
or
or
lahf
cmp
adc
iret
addr16
hlt
push
and
fiaddl
stc
xchg
lock
stc
int3
enter
ljmp
push
mov
pop
push
push
test
jg
in
push
dec
sub
adc
cmp
repz
hlt
xchg
xor
adc
add
lock
out
adc
test
fsubl
or
dec
pop
sub
aaa
jo
out
aam
or
lock
rcrb
aas
cmp
push
mov
sub
dec
xor
jl
xor
insl
aam
push
lock
jg
aam
sti
fisubrs
cmp
pop
sbb
data16
cmpsl
mov
dec
fadds
fsubl
sbb
stos
push
out
cli
jo
cs
xchg
in
arpl
das
push
mov
adc
pop
or
inc
jb
mov
popa
clc
lret
push
out
bound
cld
fimuls
and
je
mov
add
xchg
divb
mov
fs
bound
lret
xor
sbb
cwtl
leave
movsb
out
fxch
shll
inc
jne
hlt
add
enter
add
or
nop
insl
fdivs
mov
sub
int3
sbb
imul
cwtl
aad
push
jge
mov
rcll
jmp
dec
sbb
xchg
loopne
add
cmp
xchg
iret
mov
adc
inc
mov
jg
loop
fdivrs
lock
or
daa
clc
mov
shl
int
js
lods
jne
or
pop
aad
pop
repz
push
mov
or
mov
clc
clc
dec
xchg
push
cmp
inc
lret
sub
cmp
jg
push
imul
packuswb
push
or
pusha
or
add
cmp
leave
iret
add
test
cmc
stos
cltd
data16
cmpb
ret
mulb
ficomps
xor
xlat
dec
adc
repz
or
loopne
jmp
mov
push
shrb
andl
add
sbb
aad
xor
mov
cmp
lret
gs
mov
das
push
repz
cmp
rorb
mov
sti
adc
dec
mov
je
sbb
icebp
stos
clc
or
push
mov
scas
mov
aad
xchg
jecxz
inc
icebp
mov
nop
insl
bound
xor
insb
mov
fiaddl
test
clc
jb
je
mov
stos
test
frstor
push
loope
adc
dec
add
dec
ret
cli
xor
into
and
xchg
cmp
int3
cli
xchg
leave
xchg
xor
xchg
pop
outsl
scas
outsb
pop
jae
pop
imul
dec
mov
aad
adc
add
clc
cmp
ret
frstor
ret
push
xchg
dec
decb
out
xor
outsl
inc
scas
push
ja
adc
addl
nop
fstpt
add
aad
mov
ljmp
sub
jns
xchg
sub
lea
out
mov
cli
lods
adc
mov
cmp
or
sti
sbb
pop
sub
popl
push
adcb
push
jno
dec
sbb
gs
fisttps
stos
pop
cmc
sbb
lds
add
imul
xchg
jbe
out
loopne
push
cmp
inc
and
lea
xchg
sbb
inc
pop
mov
cmpsl
data16
mov
adc
fwait
ss
aaa
push
fmull
add
add
xlat
shr
and
add
inc
inc
sbb
inc
test
mov
shlb
inc
pop
enter
out
mov
loopne
dec
mov
pushf
mov
idivb
adc
mov
cmp
inc
rol
mov
add
pushf
jno
hlt
mov
pop
repnz
xor
and
insl
outsb
hlt
fidivl
pop
sbb
je
movsl
sub
mov
sahf
jbe
mov
test
scas
adc
movsl
cmp
insl
fists
popa
xchg
mov
mov
popa
bound
push
enter
pop
int
pop
cmovnp
cmp
cwtl
inc
push
add
cmp
push
cmp
push
imul
aaa
fs
scas
pop
or
sbb
mov
js
pop
sub
push
jmp
das
pop
std
das
inc
and
adc
lcall
jge
dec
pop
int
scas
mov
cmp
mov
inc
lahf
out
jmp
mov
add
inc
lahf
sbb
lret
dec
cmc
scas
inc
dec
repz
nop
lods
inc
cld
dec
enter
jmp
loop
xor
ficoml
std
pop
or
sub
sub
jp
pop
or
xor
dec
cmpsl
sub
fsubs
xor
call
out
mov
jbe
inc
aad
jo
testl
iret
in
mov
cmc
mov
add
mov
repnz
add
add
adc
ljmp
jp
inc
lahf
xor
idivb
mov
cmpsb
xor
sarb
mov
aas
mov
mov
addr16
sub
sahf
sahf
ret
dec
ret
mov
pop
pop
add
sub
sub
push
mov
xor
push
mov
or
int
jne
mov
rorb
sbb
idivl
cmp
pushf
stc
push
fdivrs
mov
cmp
jge
out
mov
xor
sub
xchg
push
dec
mov
imull
insl
sarb
bound
mov
and
pushf
frstor
cmp
xor
stos
daa
outsl
and
js
sub
jecxz
sti
cmpsl
jg
pop
and
dec
push
jbe
dec
fisubs
fidivs
inc
mov
lea
clc
sbb
shll
xor
clc
mov
sarl
push
mov
dec
mov
das
in
je
jno
xor
nop
xor
xor
jns
fildll
jae
and
and
outsb
xchg
iret
scas
cld
mov
jge
sbbl
dec
dec
mov
jecxz
mov
stc
leave
xorl
inc
fdivl
cltd
adc
push
int
mov
pop
shlb
or
mov
jl
mov
lcall
sarl
pop
push
jb
pop
mov
sub
test
push
xchg
cmp
hlt
int
popf
inc
sbb
push
ljmp
loopne
sbb
jo
xchg
enter
pop
add
cmp
and
shl
mov
popf
cmc
sahf
sbb
sbb
cwtl
shll
movsb
sub
jnp
movb
in
mov
cmp
sub
negl
mov
into
xchg
inc
out
xor
in
shll
pop
popa
sub
push
inc
daa
sti
inc
push
std
jno
pop
stos
xor
mov
pop
dec
jnp
dec
push
and
mov
hlt
dec
sahf
pop
cmp
xchg
mov
mov
ret
xchg
jo
pop
push
push
ss
jb
cmc
push
xchg
xchg
daa
nop
jmp
in
jb
pop
sub
or
and
std
inc
jg
in
mov
mov
rorl
xor
adc
and
fdiv
or
adc
insb
ja
push
nop
xor
dec
jnp
fisttpll
push
add
add
adc
cmp
loope
popf
mov
mov
mov
loop
sbb
js
jb
faddl
adc
add
div
lea
pop
or
ficompl
jle
mov
inc
xor
out
lea
pop
daa
sub
cmpsl
cmp
push
pop
insb
push
movsb
cmp
repnz
add
xor
dec
fcmovu
mov
push
dec
fisubrs
addr16
ror
test
insl
mov
mov
ret
mov
fcoml
add
mov
cltd
adc
jo
push
mov
mov
xchg
call
insb
or
and
fsubr
push
push
adc
dec
pop
add
xor
jns
xchg
push
mov
int
std
sub
mov
mov
xbegin
jbe
stos
test
xor
and
das
xor
jg
cmpl
in
aaa
enter
ror
mov
jmp
jnp
mov
lods
jle
stc
iret
iret
add
push
sub
jb
xor
jg
add
push
lods
enter
push
mov
test
jnp
repnz
xor
cld
test
dec
imul
mov
fnsave
movsb
xchg
mov
add
lret
or
lcall
fs
and
sub
sub
fmuls
inc
cmp
jmp
mov
push
sub
test
or
call
jo
dec
add
xor
jmp
ss
insb
insl
adc
movsl
sub
mov
mov
scas
pop
ret
adc
sbb
stos
pop
xchg
sub
jl
cmpb
shll
xchg
inc
icebp
notb
cmp
dec
out
or
sub
push
xchg
cmpsb
lea
cmp
add
popl
push
bound
addr16
push
or
mov
dec
dec
sbb
add
cmp
roll
sbb
mov
inc
pop
imul
mov
jl
sbb
leave
stos
ror
adc
lret
cmp
aaa
lret
and
in
out
jge
lahf
lock
fisubrl
mov
je
jbe
xchg
cmpsl
lds
test
xor
xor
cmpsb
mov
mov
fsub
or
iret
loope
loope
adc
pop
adc
or
mov
sahf
sarb
mov
mov
rcll
stos
sub
lea
or
push
push
jb,pt
iret
add
push
jno
dec
cmp
push
in
movb
inc
bswap
lcall
mov
adc
xchg
nop
inc
sub
jbe
test
sub
adc
jns
jmp
je
cmp
inc
pop
imull
xchg
fnstcw
mov
xchg
and
cs
cmp
mov
fldl
pop
push
or
jmp
add
pop
xor
ss
jnp
mov
icebp
or
and
icebp
cmp
ret
int3
sub
sbb
and
shrl
pop
lcall
pop
xchg
popf
fdivs
push
xchg
inc
lock
adcb
loopne
cmpsl
ss
out
sub
addl
inc
add
cmc
jns
cmp
fcmovnbe
test
movb
mov
push
push
inc
xor
adcl
xor
hlt
fistl
xchg
cmp
mov
popa
mov
xor
add
in
or
js
pop
push
test
sarb
in
sub
test
shl
inc
cmp
imul
dec
aam
jmp
inc
cmp
adc
inc
mov
ret
push
inc
pop
fcmovb
and
cmpsb
adc
cmp
les
stos
lock
mov
lahf
xor
jo
jns
dec
arpl
push
daa
xor
xchg
mov
jb,pn
std
das
in
popf
inc
pop
lods
mov
mov
or
xchg
push
and
adc
add
cmp
shlb
pop
jo
icebp
test
dec
and
fwait
mov
and
dec
jecxz
fadds
aas
js
aad
xchg
js
out
movsb
out
inc
push
mov
hlt
push
scas
pop
and
pop
pop
add
insb
insb
bswap
mov
push
into
jnp
mov
sbb
jne
mov
cmc
repz
repnz
out
add
pusha
pushf
fmuls
in
es
lock
and
cli
dec
movsb
ss
dec
dec
inc
jne
mov
mov
loopne
xchg
sahf
aaa
push
lods
mulb
cmp
loope
push
fninit
inc
add
sub
cmp
movsl
scas
scas
inc
setle
cli
loopne
lahf
out
addr16
sub
jle
lock
sub
cld
jns
je
lods
mov
sbb
ror
xchg
xor
xchg
gs
je
mov
add
adc
add
pop
insb
stos
rcrl
and
aaa
incb
and
mov
jnp
pop
push
inc
xchg
xlat
ja
cltd
push
mov
mov
and
mov
ret
xor
xor
xchg
inc
adc
cld
ss
add
test
mov
mov
inc
bound
out
pop
jge
and
and
xor
pop
fs
aaa
rorb
sub
nop
pop
jp
popa
ja
frstor
xchg
mov
out
adc
ja
mov
dec
xchg
adc
fwait
adc
push
mov
fdivl
out
cmp
jae
mov
mov
and
mov
sub
int3
insb
out
mulb
pop
aas
cmpsb
pop
adc
mov
mov
pusha
mov
jns
pop
add
es
sti
mov
mov
jno
xor
and
adc
adc
loope
sbb
cwtl
pop
andl
ljmp
jo
mov
in
mov
inc
scas
in
mov
dec
mov
call
add
outsb
inc
inc
shlb
push
stc
mov
test
xchg
movsb
rolb
sbb
inc
out
jecxz
xor
pop
out
sub
lahf
pop
addl
sbb
sbb
jg
adc
loop
ret
scas
mov
pop
fsubr
ja
sub
int3
sbb
in
xchg
mov
cmp
inc
sti
xchg
aam
push
mov
sbb
aad
mov
imul
jns
lret
pop
cli
addl
stc
lods
and
lea
cmp
inc
inc
pop
test
adc
dec
xlat
dec
lock
push
std
lds
dec
sti
lret
dec
add
xor
xor
call
and
out
aad
repnz
mov
fiadds
pop
stos
sub
inc
mov
iret
daa
fsubrl
mov
cltd
mov
pop
leave
stos
inc
dec
repz
mov
std
mov
cs
adc
imul
pop
pop
addr16
loop
aas
in
mov
jae
lahf
or
xchg
adc
mov
or
mov
int3
repz
xchg
pop
sbb
push
dec
lock
jae
rorl
and
mov
jno
lods
into
pop
test
mov
fcompl
fiaddl
cmpsl
xchg
ds
mov
popa
and
mov
jno
mov
fldcw
push
sub
test
cmp
dec
xor
ljmp
mov
push
push
sbb
xorb
insl
mov
adc
sbb
push
adc
inc
cmp
pushw
jbe
or
andb
dec
sarl
push
xlat
stos
jne
mov
add
dec
es
dec
mov
std
mov
insl
popa
rcr
push
cmpsb
pop
cmp
xchg
outsl
clc
dec
lea
dec
in
and
xchg
dec
cmc
sub
movsl
sbb
popa
lea
outsb
mov
sti
out
into
and
test
xchg
adc
lock
lock
aad
xchg
add
adc
mov
adcb
hlt
push
jle
xchg
push
xchg
outsl
xor
into
mov
bound
push
aaa
incb
mov
jl
push
cwtl
cld
filds
filds
icebp
inc
adc
add
lea
ds
xchg
push
icebp
imul
mov
ret
lock
addr16
test
enter
cld
dec
dec
add
pop
scas
hlt
xchg
subb
call
addr16
mov
cmp
in
push
imul
push
add
jne
stc
sbb
cmp
inc
lahf
lods
pop
xor
jae
jnp
inc
adc
cmp
adc
lahf
sbb
popf
call
cmp
not
dec
push
out
mov
sub
jns
jnp
enter
out
pop
hlt
cwtl
add
mov
xchg
lret
movsb
jno
inc
and
sub
push
mov
push
jb
jecxz
fsubrs
jmp
cli
mov
lret
into
rcl
xchg
pop
test
fisttps
subl
sbb
shl
daa
sbb
xchg
cmp
push
out
cs
test
jg
sbb
div
adc
cmovo
stos
sub
sub
inc
imul
inc
in
imul
outsl
cld
lcall
dec
sti
lock
mov
rorl
lods
sahf
int
xor
sub
fsubrs
jl
mov
mov
and
fstl
pop
sbb
cmp
sti
mov
pop
dec
jno
scas
mov
inc
adc
cmpsb
idivl
dec
int3
imul
into
hlt
pop
popf
pop
mov
outsl
sbb
icebp
sbb
pop
push
lds
mov
leave
add
stos
dec
push
nop
adc
sbb
sbb
lahf
jae
add
jae
rorb
enterw
arpl
jg
mov
jbe
std
jb
data16
inc
mov
es
xchg
punpckhbw
scas
pop
aad
mov
and
out
cmp
pop
sbb
leave
std
mov
aad
mov
or
fcmovu
and
testl
rcrb
adc
and
and
notb
xor
xor
or
mov
leave
add
add
ds
mov
pop
and
xor
jae
ret
pop
movsb
out
imul
push
pop
inc
xlat
add
inc
sub
scas
out
mov
and
inc
scas
pushf
nop
inc
lret
stos
sub
sub
outsl
enter
inc
cmp
xchg
sbb
loop
push
dec
je
movsl
adc
negb
push
push
stos
cmpb
add
das
adc
jge
jg
pop
sbb
std
sahf
pop
loopne
add
loope
mov
data16
adc
daa
pop
mov
jnp
mov
jecxz
cli
cmp
stos
mov
sub
push
rolb
inc
pop
dec
insl
or
jmp
nop
cmp
pusha
inc
and
test
xchg
cld
jno
pop
adc
jg
xor
mov
inc
sbb
in
addl
inc
xor
mov
data16
outsb
xchg
inc
lcall
add
sbb
icebp
jno
xchg
jl
xor
outsl
dec
mov
ficompl
cli
shrb
test
dec
cld
stos
push
aas
sbbb
rcll
fistpl
pop
or
fidivl
fstl
add
xor
cmp
lea
outsl
insl
xlat
jae
test
cmp
js
lods
dec
test
sbb
adc
and
add
sbb
push
jae
enter
sbb
pop
sub
out
mov
mov
xchg
addl
gs
icebp
frndint
dec
xchg
lahf
jo
add
mov
xchg
loope
inc
mov
and
mov
jmp
in
int3
loope
hlt
jo
sub
rcrb
push
cmp
js
sub
pop
dec
pop
stc
and
pop
push
int
fisubs
dec
jge
mov
fnstsw
scas
pop
sub
cli
fbld
adc
xchg
mov
outsb
lret
stos
xchg
or
nop
enter
xchg
xor
cmpsb
dec
addr16
inc
andb
loop
jnp
icebp
xchg
adc
js
cwtl
push
pop
and
sub
pop
dec
mov
inc
sub
sub
cs
iret
inc
adc
cmp
test
lea
in
sub
push
lret
sbbb
fldt
out
push
loop
outsl
jae
movsb
in
jle
add
into
ficoms
int3
jae
mov
scas
in
out
xor
jno
lcall
lahf
push
jns
add
cmp
nop
lcall
in
ja
mov
jge
loope
dec
and
out
pop
mov
sbb
and
cmpsl
add
sub
push
pop
out
fwait
inc
xor
xlat
push
push
cmp
incb
mov
outsb
jl
sub
adc
clc
sbbb
pop
jmp
sbb
lret
sbb
roll
pop
sub
dec
push
pop
sub
inc
adc
outsb
mov
fs
fucom
es
mov
stc
test
popl
add
and
lea
cmpsb
xor
sbb
movsl
jbe
dec
push
and
out
fildl
outsl
mov
in
imul
test
imul
test
lds
push
add
imul
icebp
mov
cmpsb
stos
inc
cli
rol
imul
xchg
add
mov
idivb
mov
mov
iret
or
mov
lods
push
mov
mov
jp
mov
pop
sbb
sti
xchg
adc
in
les
lcall
mov
insl
sarl
stc
or
xlat
xor
sub
mov
into
clc
mov
out
hlt
incb
lret
xlat
insb
adc
add
pop
cltd
mov
out
mov
and
inc
jbe
push
sub
test
xchg
dec
sahf
nop
out
lret
sbb
lret
pushf
mov
icebp
addr16
sbb
adc
movsb
jno
pop
mov
cwtl
inc
aaa
sub
mov
nop
jo
jae
hlt
xor
mov
add
xor
push
mov
xchg
pop
dec
adc
mov
mov
mov
sub
sbb
daa
cmp
daa
dec
cmc
jno
mov
mov
mov
and
and
rolb
test
pop
clc
std
mov
cmp
push
jne
or
pushf
push
jb
inc
xor
add
jl
cltd
mov
push
dec
fcmovb
inc
xchg
jbe
dec
into
imul
out
fs
out
dec
stos
arpl
out
inc
mov
or
cltd
push
in
xchg
mov
icebp
jnp
add
insb
sahf
push
dec
inc
aad
pop
mov
fs
cmpb
mov
dec
scas
push
push
shlb
push
mov
xchg
aam
cmpsb
out
or
adc
popa
mov
incl
push
icebp
pop
leave
dec
ja
mov
jl
iret
ljmp
add
test
xor
inc
sbb
imul
out
les
xor
fs
sub
ds
jecxz
das
pop
lret
push
dec
cmp
std
dec
clc
sbb
ljmp
lea
fcmovb
xchg
das
out
lret
jmp
insl
inc
mov
call
mov
ret
sub
pop
addr16
fistps
mov
jmp
pop
out
push
or
gs
sbb
sbb
sbb
sbb
mov
divps
lods
xchg
addr16
jnp
pushf
sbbl
sahf
movl
push
cmpl
jp
dec
aas
mov
fmul
fwait
data16
pop
or
ds
sar
fwait
push
sub
jmp
xor
daa
xor
maxps
dec
scas
fisttps
xchg
loopne
push
scas
scas
in
push
dec
test
add
pop
xchg
fs
fistps
int
scas
jns
add
data16
cmp
mov
mov
add
or
mov
gs
and
imul
add
jp
mov
out
iret
pop
scas
leave
cli
loope
lret
into
js,pn
lret
and
mov
add
movsb
jb
push
inc
loop
adc
out
lahf
shlb
jbe
ret
int
insl
push
jne
outsl
jbe
jge
sbb
jo
push
js
test
ret
out
dec
fidivrs
cmp
icebp
and
adc
sbb
jecxz
adc
mov
mov
cmpsb
mov
add
jb
adc
dec
les
xor
jmp
imul
in
fstpt
mov
and
sub
xor
outsb
ficompl
mov
mov
mulb
inc
cmpsb
adc
xor
test
das
dec
inc
sbb
jle
outsb
dec
test
push
xchg
or
jge
add
mov
fcomp
decl
cwtl
inc
sahf
jg
mov
clc
cmp
lret
ret
int3
popa
mov
es
lcall
arpl
out
cmp
in
push
data16
mov
daa
jnp
fmull
pop
xor
jl
push
sbb
js
mov
in
sub
push
lea
testl
dec
testl
lods
sbb
jne
movsb
xchg
adc
and
stos
dec
push
mov
mov
dec
adc
cmp
dec
nop
js
iret
inc
sbb
sub
xorb
pop
adc
popa
pop
adc
test
lea
sub
mov
xchg
addr16
cltd
das
dec
rorb
xchg
js
arpl
add
dec
mov
pop
mov
adc
dec
out
mov
jecxz
cmc
xchg
push
rorl
push
popf
sbb
push
rcl
sbb
sbbl
into
sbb
outsb
cltd
push
mov
out
sub
jmp
test
aam
insb
inc
pop
push
lahf
popf
rol
popa
pop
sbb
push
mov
dec
and
data16
lods
mov
fs
jno
leave
and
pop
dec
int
cwtl
scas
rcr
jne
adc
sbb
fs
rorl
nop
js
dec
in
cmp
fldenv
mov
insl
cmp
mov
fs
xor
rorb
sbb
and
sbb
out
das
pop
sbb
sti
imul
inc
xchg
mov
add
push
or
xlat
mov
mov
jb
add
mov
jmp
lds
lds
add
or
adc
mov
push
rcrl
dec
lret
enter
sahf
sti
pop
adc
sbb
jg
jnp
jae
cmpsl
mov
enter
ljmp
outsb
into
inc
stc
sub
pop
outsl
inc
arpl
pop
subb
xchg
stc
aaa
dec
scas
mov
push
mov
and
sahf
pop
mov
mov
push
jno
lahf
cld
imul
push
mov
cmp
into
xchg
sbb
push
sub
push
cli
mov
orl
data16
jo
mov
iret
xlat
and
icebp
in
out
jmp
popa
pop
push
xchg
push
call
jmp
mov
lret
xchg
pop
xor
sbb
cltd
inc
int3
subb
mov
sub
fimull
jg
fidivrl
call
hlt
jb
mov
mov
lcall
mov
nop
dec
data16
mov
arpl
inc
scas
pop
inc
pop
sahf
xor
lock
stc
movsb
mov
or
xor
clc
add
fwait
lret
pop
outsb
and
outsb
dec
fbstp
nop
mov
xchg
mov
outsl
pop
ss
xorb
adc
xchg
pop
fimuls
add
rorb
xor
fisttpll
jge
int
test
adc
repz
pop
adc
push
cmp
imull
daa
sahf
ficompl
sbb
aaa
cmp
sti
pop
xchg
popa
mov
outsb
sbb
out
jg
lcall
mov
fisttps
xor
mov
jmp
aas
jns
jg
sbb
mov
jle
fisttps
sbb
scas
or
mov
in
cmpsb
xor
mov
mov
lds
xchg
hlt
pop
sahf
lods
xchg
fsubrs
xchg
rorb
pop
cld
and
xchg
xor
leave
aaa
mov
cmp
inc
mov
push
cmp
ucomiss
mov
xor
xchg
jge
stos
inc
push
mov
cwtl
jb
sub
inc
scas
imull
pop
lret
dec
arpl
push
mov
lahf
iret
cmp
imul
out
leave
jnp
push
jo
outsb
or
call
adc
xchg
rorb
ds
fcomp
gs
adc
sub
xlat
push
dec
shlb
icebp
mov
repz
inc
xchg
decb
add
ss
xchg
in
add
pop
outsb
iret
fsubrp
loope
jle
and
jmp
cmpsl
lahf
ret
jmp
ror
mov
inc
jle
mov
js
cli
add
xor
sbb
sbb
and
mov
scas
or
adc
rcll
dec
out
and
or
push
test
jnp
mov
sub
add
cwtl
cmpsb
subl
sbb
jg
cs
fsub
scas
sbb
addr16
hlt
jns
popf
int
sarb
and
je
mov
mov
inc
repnz
test
mov
sub
mov
cmpsb
ljmp
inc
loop
repnz
out
mov
push
xchg
les
jmp
lods
fistpll
lcall
cmp
mov
sbb
popa
notl
outsb
fwait
psubusb
lret
mov
ds
addr16
andb
test
pop
xchg
addr16
cmp
pop
pop
pop
push
mov
insl
xchg
cmp
imul
mov
sub
int
in
lret
rclb
push
cmp
pop
popa
stc
jmp
les
jne
ja
mov
inc
dec
dec
aas
test
cmc
sub
sub
mov
cmp
subb
adc
xlat
aas
add
rclb
rcrb
jae
les
popf
loope
ja
pusha
fmull
cmp
push
sahf
outsb
jns
dec
mov
jbe
in
or
sbb
xchg
jp
sbb
shrl
imul
mov
daa
and
mov
in
jl
pop
dec
jb
aas
div
rclb
xchg
xchg
leave
das
dec
bound
sbb
jmp
push
mov
test
push
iret
pop
fnsave
fcomp
cld
mov
inc
mov
adc
jecxz
xor
mov
cltd
jb
pop
setp
sub
mov
comiss
fwait
mov
loopne
loope
mov
clc
enter
push
mov
xor
aas
dec
adc
je
ret
and
jne
push
xchg
daa
shrl
sbb
lahf
adc
xchg
mov
fcmovbe
adc
cltd
sub
loope
ds
shrl
int3
or
es
repnz
mov
mov
aaa
movsl
pop
lret
popa
and
push
fs
cmp
mov
mov
jl
add
and
in
ficoml
mov
in
or
fucom
adc
mov
out
add
pop
mov
je
cmp
into
mov
mov
loope
xor
add
inc
cmpsb
test
neg
add
ret
fisubl
sarl
addb
mov
popf
ror
jb
or
lock
aas
lret
mov
mov
call
xor
or
pop
hlt
mov
call
movsl
daa
clc
lret
es
mov
inc
mov
std
roll
or
in
les
sub
out
sub
stos
mov
ljmp
in
lret
sub
xchg
cmpsl
lcall
imul
dec
mov
and
iret
xor
mov
jmp
jnp
jge
xchg
ffreep
je
jo
push
sub
ljmp
jb
or
inc
int
pop
notb
mov
pushf
test
dec
sbb
jae
addr16
cmpsb
das
aaa
sbb
loopne
std
call
mov
mov
xor
lods
xor
cld
push
in
xor
mov
jne
jl
jle
imul
into
sub
xlat
cmp
lods
ja
mov
jb
add
cmp
mov
fcmovnb
xor
and
leave
int3
data16
sbb
aas
xchg
mov
addr16
inc
pop
popf
mov
xchg
xor
mov
leave
xlat
mov
cmp
push
push
insb
jg
sbb
xchg
movsl
lods
jp
inc
xchg
lret
stos
jno
scas
mov
popf
ficomps
mov
pop
int3
dec
jl
cmova
and
roll
insl
cmpsb
cmpsl
push
sub
dec
pop
sub
and
add
sbb
xchg
popa
aad
jp
inc
loopne
cmp
shlb
sahf
lock
mov
dec
sub
ror
popf
jne
popa
test
cwtl
mov
fisubl
jbe
jmp
cmp
into
mov
loop
pop
call
imul
fcoms
add
xchg
pop
mov
sahf
dec
jno
test
or
adc
ss
mov
sub
popf
fdivr
jle
mov
mov
mov
loop
pop
adc
stos
loopne
orb
aas
repnz
dec
pop
jbe
jmp
stos
iret
std
ret
and
sbb
mov
out
mov
out
movsb
sbb
mov
test
out
scas
adc
mov
or
lds
sub
shll
std
xor
jg
mov
rorb
repz
xor
repz
stc
aaa
or
icebp
cmp
add
push
mov
jecxz
aad
sub
nop
jp
in
push
pop
sbb
sub
xor
dec
mov
xor
sbb
xchg
leave
imul
dec
lcall
leave
jl
adc
jnp
mov
fstps
fwait
idivl
adc
add
fidivs
rcll
adc
in
mov
aad
sbb
enter
jecxz
loopne
mov
loop
mov
rclb
in
adc
lea
icebp
mov
int
lahf
dec
enter
lret
mov
dec
test
dec
add
add
cli
fisttpll
jmp
mov
cmpsl
cmp
fs
pushf
mov
loopne
in
add
rorb
xor
out
adc
iret
fdivp
xchg
lahf
sti
mov
push
cltd
add
sub
pop
pushf
ja
mov
movsl
scas
sub
iret
loop
arpl
je
aaa
mov
mov
pop
ss
popf
int
out
push
jne
lock
ret
and
mov
popf
dec
addr16
push
mov
jb
test
stos
dec
lcall
sysret
and
jno
in
aam
or
mov
cmp
into
mov
adc
shll
or
insb
inc
fldcw
imul
sti
push
push
xor
push
lret
shl
ds
std
ja,pt
mov
lds
stos
xchg
dec
mov
std
ljmp
mov
lock
mov
loope
add
cmp
mov
adc
movsl
sub
lds
inc
pop
ja
push
mov
rcrb
push
cmc
sub
mov
xchg
jmp
sti
inc
push
push
push
and
dec
repnz
insb
movsb
mov
filds
pop
popa
test
jl
adc
pop
scas
lds
xor
dec
lahf
stc
cwtl
push
sahf
vmovd
mov
das
mov
push
mov
fsub
cs
fwait
inc
repnz
js
fiadds
es
sbb
outsb
push
and
and
orl
fisubl
lds
and
popf
rcrl
jbe
les
inc
decb
sub
sbb
xor
in
sub
into
js
xchg
jge
or
cwtl
jl
push
sahf
mov
notl
sbb
mov
xchg
dec
push
cs
mov
push
sub
stos
je
xchg
mov
xorl
cmp
pop
movsl
adc
push
pop
dec
notl
repnz
outsl
addr16
std
push
pushf
pop
jmp
mov
xlat
jmp
fistpl
fwait
pop
mov
repnz
fldl
inc
insb
and
cltd
cli
sbb
inc
xchg
push
xchg
in
jne
mov
mov
xor
movsb
jmp
faddl
mov
test
data16
xchg
pop
pop
sahf
mov
mov
adc
jecxz
adc
pusha
repz
cltd
xor
jmp
lods
shr
xchg
in
les
imul
pop
push
cmp
movsb
movsb
mov
shll
xlat
daa
sub
xchg
int3
or
push
pop
arpl
or
dec
adc
pop
aad
jae
stos
bound
sbb
dec
jno
push
push
mov
test
add
orl
ret
xchg
mov
mov
mov
iret
push
inc
xor
push
xchg
pop
je
ljmp
stos
xchg
call
mov
push
mov
pop
dec
adc
inc
arpl
mov
xlat
or
push
pop
imul
dec
aas
jnp
idiv
pop
mov
xchg
sub
lahf
mov
inc
pop
cs
ret
int3
es
shrl
pop
xor
mov
lret
rcll
push
pop
xchg
stos
arpl
push
jb
dec
xchg
sbb
mov
loopne
pop
into
push
ret
push
negb
mov
push
pop
adcl
daa
xor
xor
movsb
mov
mov
cltd
loop
ja
cmp
cmp
cmp
in
and
xor
cmpsb
rol
dec
mov
loop
repnz
lret
mov
rcrl
mov
fucomi
std
adc
shlb
jne
loope
stc
mov
addr16
fs
roll
inc
insb
xor
fistpll
jno
mov
xchg
negl
ret
daa
mov
aas
fsubr
stc
push
mov
dec
mov
dec
ja
int3
xchg
test
dec
testl
dec
out
xchg
jo
inc
rcll
xor
les
adc
cmp
out
test
or
shl
or
loop
pop
add
sub
jl
inc
cmp
mov
stc
lcall
add
push
push
test
dec
and
adc
xor
push
insb
jnp
sbb
lds
clc
push
dec
fstpl
cltd
and
cwtl
into
ror
xchg
subl
outsl
push
psrld
int
xchg
enter
xorb
jmp
push
xor
movsb
rclb
int3
ret
jno
inc
scas
dec
aam
jo
rcl
jg
data16
bound
stc
ret
mov
imulb
cmp
adcb
push
xchg
adc
mov
xchg
fwait
aad
push
cmp
sti
xor
dec
xor
mov
loope
addr16
fldenv
dec
adc
in
xchg
sub
pop
dec
insl
adc
mov
test
pop
roll
popf
cmpsl
cli
enter
cli
lret
mov
cmpsl
xchg
adc
xchg
ret
push
jmp
and
push
mov
dec
push
iret
insb
daa
mov
and
mov
shll
xor
jno
or
jnp
mov
jge
sbb
ret
aam
inc
loop
add
adc
les
in
adc
push
xchg
rcrl
push
mov
sbb
lea
xchg
aaa
jo
adc
mov
roll
nop
mov
insl
imul
mov
jl
test
and
cmc
mov
push
cli
pop
add
jns
sahf
sahf
sbb
lret
push
dec
add
fwait
scas
pop
or
mov
pushf
test
ss
cmp
add
ds
sbb
inc
add
ds
mov
and
and
add
add
pop
mov
cmp
mov
cltd
mov
scas
sti
xor
add
xchg
mov
or
jnp
xchg
movsl
loopne
daa
and
inc
mov
in
aas
and
cmpl
xchg
ss
scas
fwait
sbb
and
jl
jmp
pop
sub
xor
repz
test
shrb
jnp
cmp
cmp
add
mov
std
sbb
xchg
sub
out
inc
lret
es
add
adc
dec
mov
in
push
dec
pusha
mov
push
adc
ds
push
dec
jb
es
mov
push
sbb
mov
into
pushf
mov
jecxz
dec
pusha
push
sub
jno
lcall
jge
cmpl
xor
jmp
arpl
pop
dec
jmp
lret
iret
cmpsb
sub
sbb
inc
mov
je
adcb
in
dec
sarb
xchg
nop
or
ror
in
mov
sub
and
cmpsb
stos
cmp
popa
rcll
test
mov
inc
xchg
inc
je
inc
lcall
inc
cmp
or
cmp
pop
sbb
loope
das
cmp
jge
das
les
add
push
push
ljmp
movsl
push
cltd
dec
mov
loopne
scas
jbe
out
cmp
les
gs
dec
mov
icebp
push
lcall
es
movsl
sti
xchg
or
mov
std
add
jns
lret
inc
std
push
jns
aas
cmpsb
repz
stc
lret
adc
sahf
or
outsl
loopne
xchg
je
jp,pn
insb
adc
popa
jmp
jmp
cltd
loopne
xor
scas
fistpl
aas
xchg
sbb
or
addl
lods
xchg
mov
mov
sbb
or
out
push
clc
ficoml
sbb
sub
jp
xchg
in
pop
xchg
adc
icebp
push
imul
xchg
leave
insl
loopne
lods
cli
jle
test
in
xor
stos
out
testb
arpl
mov
cli
sub
idivl
lret
ja
push
outsb
mov
push
jbe
jp
mov
mov
mov
int
inc
jmp
inc
bound
loopne
cmpsb
jg
ljmp
ret
push
pop
scas
pushf
lret
ret
dec
jnp
or
xor
push
cmp
int
xchg
sub
mov
add
jne
mov
imul
jne
movsl
pushl
inc
cltd
rolb
inc
add
mov
push
sub
cmpsl
jmp
mov
mov
jecxz
lcall
pop
adc
jnp
xor
ficompl
fstpt
add
lods
jmp
xchg
daa
js
ds
scas
andb
push
or
leave
mov
jae
xor
sahf
sbb
mov
or
or
hlt
outsl
add
xor
cmpsl
aaa
mov
into
roll
push
inc
dec
int3
or
mov
cmp
out
pop
add
adc
mov
stc
or
mov
dec
and
xchg
or
repz
lock
stc
push
ret
xchg
pushf
xor
int3
imul
cmp
lret
ficoms
dec
gs
pusha
pop
aam
mov
out
jno
xchg
xchg
mov
jmp
cmpsl
pop
adc
lret
and
xor
cltd
out
jns
orl
mov
dec
cmpsl
fucomp
lret
mov
test
xchg
movsb
sub
inc
pushf
ret
mov
dec
loope
xlat
or
jge
icebp
xchg
add
mov
and
sub
rolb
push
stos
je
or
or
idivb
cmpl
es
pop
movsb
xchg
push
inc
sar
dec
loopne
notb
fildll
rol
jb
movsl
aas
por
add
outsl
dec
and
das
shlb
lock
dec
push
add
ss
testb
lock
insb
bnd
dec
push
js
dec
and
scas
pop
and
and
push
testb
je
xor
xchg
out
test
or
and
hlt
ja
cmp
jecxz
outsl
sti
movsl
cmp
sarb
add
cwtl
pop
shl
or
cmpsb
aam
inc
sahf
aam
jno
adc
bt
jo
jbe
jns
fldcw
outsb
in
xchg
test
push
mov
push
xor
mov
aaa
ja
xor
xchg
adcl
pop
lock
insb
loop
test
and
fnstenv
icebp
aas
xchg
mov
lcall
loope
jo
dec
int
loop
rcrl
inc
pop
pushf
jno
jnp
add
xor
cltd
adc
cmp
mov
das
xchg
mov
mov
xor
dec
mov
xor
mov
jmp
inc
push
or
dec
inc
test
mov
xchg
dec
ljmp
xchg
jle
jno
and
aam
mov
xor
fs
sbb
jle
fcoml
and
cmp
inc
imul
rcll
ljmp
jmp
push
push
sbb
sub
pusha
and
les
mov
push
jns
roll
mov
das
loopne
sbb
xchg
pop
shll
stos
adc
cmc
mov
mov
pop
and
pop
fisubrl
add
daa
mov
push
push
orl
test
mov
sbb
xor
in
aas
xchg
in
cmp
mov
push
adc
lret
inc
push
add
push
mov
pop
cmp
js
mov
cs
lds
ss
rcr
loope
adcl
aad
outsl
mov
jle
and
ficomps
push
and
cli
mov
outsl
mov
lds
push
ja
jecxz
push
je
mov
lods
add
in
cs
popa
scas
lcall
mov
stc
inc
push
sbb
shlb
sbb
in
ss
adc
repz
inc
mov
lcall
lock
cli
mov
insl
rolb
or
sub
adc
stc
lock
sub
movsb
into
pop
flds
cwtl
sbb
loope
les
out
fstl
movsl
test
and
test
sub
sbb
xor
add
sbb
jnp
imul
xor
call
pop
scas
movsl
xchg
in
in
dec
dec
push
pcmpeqd
je
fldt
push
pop
mov
cmp
fistpll
incb
mov
and
add
arpl
xchg
dec
das
fcoms
push
jmp
push
mov
cmpsb
pusha
add
aad
sbb
enter
scas
out
sbbl
jns
test
arpl
mov
daa
loop
in
decl
xor
outsb
stos
push
mov
sub
aaa
push
inc
mov
gs
mov
jp
cmp
in
or
sbb
adc
ja
pop
and
andb
outsl
cmp
and
arpl
jl
aas
push
adc
imul
hlt
sahf
repnz
lea
mov
mov
in
roll
icebp
shlb
fs
lock
pusha
mov
xor
loope
movsb
int
push
sbb
adc
xchg
cmp
fwait
push
popa
xorl
test
popf
sbb
sbb
mov
mov
push
ret
hlt
or
push
fwait
lds
dec
clc
jg
vminps
push
in
imul
in
dec
rorl
pop
and
inc
mov
pusha
cwtl
outsb
dec
or
or
xchg
ja
mov
jb
imul
scas
sbb
inc
ret
sbb
or
pop
repnz
pop
inc
xchg
outsb
bound
js
xchg
mov
loope
inc
sbb
aad
sbb
push
pop
jns
pusha
push
push
es
daa
mov
movsl
cwtl
cli
sub
mov
sbb
add
iret
sub
lahf
add
cwtl
mov
aas
xor
pop
ss
xor
and
popf
sarb
stos
stos
mov
repnz
mov
mov
sbb
js
dec
sub
xlat
test
lods
lock
iret
icebp
ret
fldenv
pushf
and
and
pop
add
cmp
std
cs
popf
sub
shl
stos
xor
cltd
cmpsl
mov
mov
xchg
call
out
lcall
push
or
insb
mov
dec
push
data16
xor
pop
lea
xchg
jnp
sahf
sub
push
lcall
jns
cwtl
imul
ret
ret
dec
jns
inc
int3
and
hlt
pop
xor
int3
pop
sbb
cmp
stos
add
fisubs
or
or
xor
pop
clc
dec
out
dec
pop
lahf
cmp
xchg
bound
dec
mov
push
push
adc
dec
mov
xchg
xor
movsb
popf
sbb
shrb
adc
sbb
cmpsb
int
cld
sub
fucomi
filds
dec
mov
mov
inc
mov
fidivrl
fsts
xchg
push
and
stc
add
push
int
stos
xor
mov
lock
mov
and
sub
mov
xchg
scas
test
cs
dec
pop
aam
fwait
pop
popf
jno
cmp
insb
push
cmp
push
pop
adc
jp
cmp
mov
aam
addr16
in
cld
aaa
aam
xorl
xor
or
xchg
std
push
je
dec
mov
divl
adc
pop
pusha
icebp
pop
push
or
jbe
mov
notb
sub
scas
mov
js
and
out
lds
in
mov
hlt
scas
sarb
fsubl
imul
push
xchg
sbb
imul
rolb
sahf
scas
adc
leave
pop
mov
movsl
cmp
push
iret
xchg
sbb
dec
stos
mov
dec
insl
jp
cmp
and
lods
stc
aad
mov
or
jbe
add
mov
clc
inc
add
mov
fs
in
jg
sbb
or
add
jo
popa
dec
lcall
fwait
xor
mov
loopne
jns
mov
xchg
bound
cmp
popf
jns
xor
mov
std
pop
mov
jne
mov
xchg
push
jmp
and
enter
ja
leave
adc
and
cs
fisttpll
enter
ss
into
adc
jge
fldt
bound
adc
or
or
pop
xchg
mov
les
pop
adc
mov
test
mov
add
ds
jmp
and
inc
xchg
fists
jl
dec
fldt
mov
call
fcmovu
loop
add
pop
cmpsl
jmp
xor
imul
ljmp
cmpsb
test
mov
push
scas
scas
repz
outsl
sti
push
push
cmpsl
xchg
test
ljmp
sub
fcmovnu
lds
inc
pop
cmp
inc
jo
cltd
lods
jmp
mov
push
cmp
fisttps
or
ja
adcb
inc
xlat
lahf
cmp
aaa
enter
repz
stos
sub
pop
jecxz
pop
ficoml
adc
pusha
and
dec
xor
inc
clc
xchg
jae
dec
scas
push
in
je
pop
xor
xorl
or
int3
fld
sbb
shr
mov
fcom
add
pop
in
fcompl
sbb
shl
outsl
push
mov
sahf
mov
cld
cli
mov
xor
je
pop
daa
ror
inc
orb
stc
test
sahf
and
cmp
mov
into
popa
cmp
jl
lret
jnp
popa
jl
and
push
mov
in
mov
mov
andb
shlb
ret
cli
xor
mov
clc
or
or
push
mov
sub
insb
loopne
std
pushf
or
cli
push
xor
ss
or
rclb
push
out
pop
push
cwtl
test
add
das
sub
out
push
sbb
or
arpl
cmp
push
es
in
cmc
shll
outsl
cwtl
insb
fistpl
push
cmpsl
test
pop
cmp
xchg
int3
lods
cmp
fxch
loope
test
in
aas
in
lods
mov
ss
push
add
sbb
hlt
out
les
out
andl
dec
xor
jo
bound
and
in
mov
call
mov
push
mov
mov
xor
in
lret
cmp
int3
push
cmp
sub
push
adc
test
pop
lods
jbe
add
and
outsl
jmp
outsb
xor
jmp
xor
popf
scas
xor
xor
in
push
outsb
mov
adc
xchg
cmpsl
jnp
subb
dec
jle
imul
add
fnsave
aaa
into
sbb
shlb
pop
add
lock
imulb
add
sbb
leave
dec
push
shrb
icebp
mov
xor
insl
aam
adc
jae
mov
outsb
mov
dec
and
loope
cmp
or
imul
pop
arpl
test
or
fnsave
iret
xchg
scas
xor
mov
jg
cmp
pushf
int
sbb
lcall
arpl
jmp
mov
lods
test
leave
shlb
jmp
mov
imul
xchg
test
lods
jns
cwtl
aaa
js
movsl
mov
stos
popa
mov
add
jmp
fdivrl
push
outsl
xor
jo
insw
xchg
sub
btc
sbb
dec
in
xchg
stos
into
lahf
push
jno
ret
leave
lods
xor
cmp
jae
jge
sub
sahf
fldt
jge
mov
dec
mov
in
clc
testl
mov
mov
clc
nop
add
lods
mov
mov
mov
stc
clc
or
cmp
daa
xchg
adcb
aaa
lret
dec
add
dec
mov
cmp
iret
shl
add
inc
mov
inc
stos
icebp
lds
mov
push
fadds
ret
addr16
cmp
shrl
popf
lcall
jle
mov
jbe
add
lret
insb
jne
inc
nop
stos
in
xchg
push
in
lds
sarl
adc
jae
jne
and
mov
movsb
pop
and
jnp
mov
push
lds
and
subl
push
xchg
jb
insb
sub
dec
shl
test
sar
in
jno
rorl
mov
popf
push
jg
add
xchg
dec
fidivs
adc
mov
mov
mov
jae
ret
es
in
stos
test
pop
mov
cld
dec
cmp
pop
inc
out
mov
int3
aam
lea
das
push
out
pop
outsb
xchg
mov
in
sbb
outsb
arpl
jg
xor
adc
xor
dec
shl
jo
popa
fwait
stc
mov
inc
in
add
cltd
jns
dec
mov
sahf
stos
sub
push
loop
sub
inc
bound
mov
pop
pop
data16
test
pop
jmp
fdivl
ja
std
into
dec
jno
fcomps
filds
xchg
stos
jo
int3
add
lods
fists
pop
out
pop
push
out
scas
shlb
data16
add
sbb
stos
icebp
mov
push
das
sbb
jno
ljmp
mov
xchg
sub
xor
sti
add
ret
std
dec
imul
sbb
addr16
push
cmp
pop
fisttps
mov
ss
rol
xchg
dec
xor
leave
std
xchg
int
xchg
xor
sbb
scas
cmp
lods
pusha
adc
ja
sbb
or
pop
lds
decb
lret
push
and
fimull
mov
add
jmp
inc
pop
push
dec
pushf
stc
push
xor
inc
rcrl
or
call
cmp
movsb
arpl
imul
dec
repnz
in
shlb
ds
faddl
movsl
adc
dec
or
push
andl
mov
cmpsl
ja
icebp
aas
sbb
fldenv
leave
jae
sub
and
xchg
xchg
stos
jmp
loopne
and
sbb
loope
xchg
dec
xchg
jbe
or
loope
sbb
vpxor
push
lds
clc
pop
fldl
push
out
fwait
iret
mov
cmp
idiv
sub
pop
addr16
sbb
rclb
es
mov
dec
jg
mov
adc
sbb
shlb
cmpsb
xchg
scas
xlat
pop
fwait
test
cmp
xchg
dec
ficoms
test
jle
cmp
pop
test
cmpsb
loope
shlb
int
xchg
push
int3
cmp
mov
pop
movsb
mov
mov
xor
cwtl
sahf
imul
sti
jns
cli
cwtl
lcall
leave
dec
dec
sbb
sahf
push
aad
lock
popf
mov
mov
fists
insb
and
dec
or
out
ljmp
sub
and
push
mov
xchg
or
sub
adc
adc
push
outsl
cmp
jp
dec
lods
pop
dec
xlat
lss
inc
ret
imul
test
xor
pmaxsw
cmc
inc
push
sub
dec
mov
mov
leave
jae
out
or
dec
cmpxchg
xchg
push
sarb
iret
mov
pop
jo
lds
mov
add
jb
in
lahf
push
cs
pop
pop
adc
pop
jo
sub
xchg
jnp
loope
scas
gs
mov
xor
jp
rcr
cli
mov
pop
xor
xchg
ljmp
inc
je
mov
sahf
mov
adc
call
add
rcrl
out
cmp
dec
dec
jge
rcl
xchg
or
or
aam
jne
mov
or
clc
push
es
sub
arpl
rcrb
mov
mov
mov
jnp
ficomps
inc
gs
ficompl
arpl
sbb
call
cmp
mov
imul
cli
lret
addl
imul
das
mov
fs
sub
pop
mov
add
jnp
jo
test
frstor
sub
adc
outsl
pop
push
pop
testb
fistpll
jmp
loopne
cmp
addr16
roll
dec
mov
clc
or
inc
dec
insl
ds
jnp
mov
idivl
mov
xor
in
sub
dec
ja
adc
icebp
adc
pop
iret
cld
inc
dec
xchg
and
lea
push
mov
js
adc
out
jl
xchg
push
ds
lahf
into
gs
pop
sbb
cwtl
push
int3
daa
stc
or
ja
mov
xchg
mov
enter
cwtl
movsb
dec
jns
cmp
mov
inc
repz
push
icebp
ror
xor
sbb
sti
sbb
imull
xor
js
push
push
lock
or
das
outsl
dec
dec
das
nop
loopne
jmp
mov
xchg
lock
push
fprem1
jns
pushf
and
lret
pop
mov
cltd
dec
dec
sti
enter
sub
dec
test
and
std
fcomip
in
inc
es
pop
stos
xchg
xlat
cmp
push
arpl
dec
xor
stos
lock
dec
insl
insb
push
jnp
cmp
lret
lahf
adc
jmp
aad
clc
jne
mov
leave
cmp
push
and
push
aaa
sub
rorb
mov
jne
lret
mov
xchg
inc
push
clc
fdivr
mov
jle
outsl
xchg
pusha
popa
cmp
scas
arpl
aas
jle
in
outsl
mov
jl
aas
pusha
sbb
mov
sti
mov
jl
int
jg
mov
or
loopne
stc
sub
add
sub
dec
dec
out
rcrb
cmpsl
cmpsl
pop
pop
fildl
out
outsb
add
cmp
push
xor
sub
std
int3
int
adc
cmovs
mov
popf
sbb
test
sbb
fistl
jmp
add
cli
cs
arpl
jp
mov
add
pop
lcall
xchg
push
adc
jl
pop
push
pop
stos
mov
xchg
mov
and
pop
popf
lods
xchg
xchg
in
fimull
fnsave
cmc
and
test
fists
mov
mov
cmp
pop
adc
in
into
rorl
mov
xor
ja
fnstcw
jno
mov
sub
das
pushaw
dec
nop
mov
push
cmp
popa
jmp
sub
xor
fwait
cmpsl
insb
push
loop
in
pop
flds
aas
fldcw
andb
mov
les
fadds
daa
sahf
and
cmpsl
inc
test
clc
je
inc
fcomip
dec
sub
adc
dec
lods
roll
faddl
and
adc
test
mov
iret
test
les
cli
jecxz
aad
ds
aaa
sahf
sub
jb
cmp
inc
std
fs
or
mov
popa
mov
addl
push
or
lock
xchg
in
xchg
bnd
leave
pop
dec
div
leave
neg
sbb
lret
arpl
out
and
jl
adc
jnp
sti
js
push
xchg
sbb
push
cmp
push
pop
mov
testl
les
scas
cltd
sub
ficoms
push
sahf
scas
adc
mov
insb
fistpl
jne
daa
mov
cmp
aad
leave
jg
mov
jmp
jle
bound
add
xchg
push
insl
mov
sbb
lds
jb
xchg
shrb
dec
cmc
stc
jp
shrb
add
push
std
pusha
test
and
cmp
or
sub
sub
xor
and
mov
inc
xchg
pop
mov
mov
xchg
nop
js
push
push
pop
add
add
and
add
inc
mov
ret
push
loop
cmp
mov
xlat
pop
sub
aaa
pop
lock
adc
andb
repz
and
lods
or
in
pop
jge
ficoms
dec
add
push
jp
lods
fldl
fisttpll
cltd
lea
mov
sbb
das
mov
xchg
inc
add
add
mov
cmp
cwtl
jno,pn
cmpsb
or
jp
xor
rorb
ja
sub
pop
leave
mov
pop
ret
stc
jae
mov
inc
push
jl
pop
bsf
cmc
int
mov
push
or
sbb
inc
xor
fldcw
imul
sbb
mov
jg
dec
mov
dec
or
mov
jne
xlat
xor
fsubr
rcll
mov
lahf
add
leave
cmp
push
mov
das
mov
iret
insl
stos
mov
mov
out
cmp
jl
dec
sub
or
cli
out
mov
cld
or
inc
inc
int
sub
icebp
jecxz
outsb
out
into
pop
scas
enter
stos
repnz
mov
jecxz
mov
bnd
incb
addr16
imul
cmpsl
inc
or
mov
push
lret
xchg
pop
jbe
push
add
cmpb
or
pushf
jno
cmp
sub
jmp
add
push
fstps
lds
pop
vptestmq
cmp
dec
inc
inc
rolb
jp
add
or
mov
pop
shrb
dec
xchg
cmp
push
xor
fwait
adc
outsl
add
fsubl
sub
test
fdivl
cltd
sbb
pop
push
xor
aaa
clc
lock
les
pop
push
lds
mov
mov
test
push
test
pop
shr
mov
cmpsl
jo
mov
dec
stc
int3
lret
out
sub
es
mov
test
mov
mov
sarb
fmul
movsl
movsl
outsb
icebp
jl
scas
pop
sbb
pop
jecxz
pusha
and
hlt
sub
adc
out
movsl
push
test
mov
mov
xlat
and
sbb
fwait
test
fcomp
aaa
stos
push
and
leave
inc
mov
cmp
pop
aaa
pusha
xlat
cmpb
push
inc
leave
cmp
jecxz
loop
mov
push
fidivl
in
aaa
mov
add
jnp
push
popf
jmp
dec
std
xchg
xor
mov
or
inc
push
imul
fldcw
sub
mov
stos
iret
mov
repz
adc
adc
sub
call
mov
xchg
mov
fstpt
pushw
mov
in
xchg
push
stos
mov
adc
mov
push
mov
mov
jbe
in
or
mov
daa
inc
nop
sub
loopne
xor
cmp
or
repz
aaa
aad
nop
cmp
xchg
out
stos
lods
pop
icebp
or
pusha
aas
dec
out
popf
nop
inc
mov
repnz
movsl
xor
dec
sub
dec
jecxz
sti
nop
cmc
mov
scas
test
repnz
mov
icebp
rcr
popw
mov
int
pusha
insl
in
jle
data16
faddl
les
jnp
outsl
cmp
or
divb
frstor
aad
js
push
mov
xchg
mov
jo
jg
ret
push
lret
mov
sub
mov
push
addr16
lock
add
xor
or
inc
das
mov
dec
dec
inc
orl
add
pop
repnz
sarb
mov
add
mov
sti
not
loop
xor
xchg
cmpsb
shrb
and
lods
std
cmpsl
scas
or
mov
repz
and
es
mov
sbb
mov
push
add
popf
push
fdivrs
cmp
outsl
dec
xchg
fs
add
jmp
and
pushf
xchg
mov
jnp
call
inc
es
cmpsl
dec
add
cld
out
outsl
mov
push
sub
and
mov
test
mov
mov
mov
in
data16
fdecstp
lock
push
insb
pop
scas
cltd
inc
mov
adc
int
sub
pop
push
xor
aam
sahf
mov
xor
cmp
inc
mov
imul
out
imul
rcl
adc
daa
mov
cwtl
imul
adcl
loop
outsl
shll
shrl
scas
insb
repz
jl
jge
sahf
adc
ja
je
aas
pop
call
lahf
negl
cmp
sbb
or
lret
popf
dec
mov
je
test
dec
icebp
dec
add
mov
jb
rol
inc
add
mov
pop
and
test
imul
and
pop
or
add
icebp
divl
fsubl
sub
pusha
aad
cmp
ds
xchg
mov
pop
out
inc
adc
inc
bound
sub
fsubrs
cmc
or
adc
pop
cmp
mov
inc
inc
pop
cld
pop
pop
push
adc
push
je
push
lret
and
push
movsb
cmp
mov
imul
xchg
add
js
cmpsl
pop
jp
xchg
test
lds
fsubrs
aam
js
add
ret
sub
fldenv
xchg
xchg
jge
call
cmpsl
loop
jg
cmc
aam
or
add
insl
out
cmp
jbe
int
push
mov
xchg
nop
jno
stos
rol
and
add
xchg
arpl
push
aaa
xchg
inc
or
mov
mull
dec
ret
ss
push
inc
in
adc
jbe
xchg
repz
mov
movsb
mov
call
lret
test
sbb
fwait
cmpsl
cli
or
xchg
jns
pop
fwait
jge
add
lcall
arpl
jo
int
lods
leave
insl
negl
inc
outsl
jb
test
add
jns
push
aad
sub
lea
add
ss
adc
add
push
cwtl
sub
fsubs
add
bound
jle
repz
sahf
dec
into
rclb
mov
jg
dec
imul
fcmovnu
pop
inc
mov
test
mov
xorb
out
jae
add
and
movsb
arpl
push
inc
fs
ret
jo
push
fdiv
inc
sbb
mov
jb
out
lds
popa
outsb
and
lcall
clc
stos
push
dec
cmp
sub
mov
or
or
and
pop
sar
and
mov
sub
in
pop
cmp
jle
jle
out
out
ljmp
sbb
xor
dec
jle
aam
insb
jge,pn
pop
enter
repz
sub
lock
push
repnz
sbb
pop
adc
mov
out
lahf
call
test
pop
movsl
and
cmp
push
xor
sti
mov
and
xor
pop
cmp
pop
mov
test
and
cmp
les
mov
mov
lahf
cmp
fpatan
iret
pop
stos
cld
fiaddl
sub
iret
pop
xchg
cld
and
mov
iret
mov
pushf
pop
pop
shrb
test
cmpsb
pop
add
jns
mov
or
nop
xchg
mov
jo
mov
stos
adc
xor
cmp
jp
jg
fadd
out
mov
mov
rcrb
hlt
sbb
cmp
mov
xor
jp
cmpsb
in
sub
inc
push
loopne
cmp
jge
bound
and
push
sbb
xchg
scas
push
orl
cmp
adc
inc
fiaddl
mov
rclb
pop
mov
push
imul
push
lcall
cltd
mov
push
in
fwait
jmp
pop
add
in
enter
popf
repnz
cld
repnz
xor
and
mov
mov
pushf
xchg
movsl
adc
xchg
out
cmpb
int
xchg
loopne
push
xor
cltd
xchg
mov
adc
inc
lcall
std
mov
pop
xchg
cld
mov
adc
or
shl
jno
mov
gs
dec
mov
imull
sub
int
xlat
add
ss
popa
pop
aad
dec
loope
cmp
xchg
adcb
jnp
ret
sub
sahf
mov
divb
adc
in
push
inc
out
jp
mov
pop
test
or
rolb
sub
and
xchg
outsl
lods
sar
inc
pushf
fists
jb
sbb
jae
loope
lret
movsb
imul
cld
xchg
mov
sub
popf
xor
push
mov
jle
mov
cmp
pop
mov
scas
popa
mov
mov
sub
or
imul
and
gs
dec
sahf
jl
pop
push
movsb
cmp
push
jae
popf
xchg
into
push
sub
fisubl
dec
loop
movsb
mov
sub
sahf
fnstsw
imul
out
inc
lock
inc
inc
pop
jl
sub
ror
loope
or
mov
mov
loopne
adc
jbe
mov
xchg
inc
aam
adc
jo
lret
adc
icebp
aas
jmp
push
sub
or
cld
ljmp
sbb
push
jno
aas
stc
mov
mov
add
sti
mov
pushf
int
dec
lahf
dec
loope
mov
inc
cwtl
sub
cmp
lcall
ss
and
mov
jns
lahf
fstpl
sub
les
or
mov
imul
or
pop
lods
imul
cli
push
or
inc
adc
fidivrl
jns
jae
fsubs
push
lcall
pop
ud2
icebp
subl
mov
in
fiadds
adc
pop
push
out
inc
push
repnz
mov
repnz
push
push
sbb
mov
fmul
fdivrs
icebp
push
outsl
loop
push
push
inc
sti
and
add
jb
mov
cs
aaa
aaa
sub
aam
pushf
and
jmp
xchg
call
pop
add
fidivs
aam
add
mov
imul
adc
mov
dec
push
fcomp
adc
movsl
jg
dec
adc
out
iret
shll
xor
shl
pop
lcall
filds
daa
mov
xor
dec
test
dec
cli
mov
repz
dec
sub
enter
mov
xchg
mov
loop
push
nop
ror
pop
push
pop
add
mov
pop
sarb
mov
mov
or
inc
es
testb
inc
pop
cmc
jns
pop
xchg
lods
sbb
fwait
pop
add
adc
outsl
negl
xchg
and
pop
popa
in
adc
es
lahf
jo
sbb
xchg
mov
mov
xchg
xchg
and
cltd
insb
es
clc
push
mov
addr16
aam
add
adc
or
mov
or
xlat
ja
sbb
dec
ret
hlt
cmp
jo
mov
pop
fcomi
push
inc
sbb
hlt
cmpsb
lret
cmc
outsb
inc
xchg
mov
or
mov
aaa
inc
mov
cmp
push
or
stos
inc
stc
imul
ja
dec
xor
rclb
repnz
inc
adc
mov
jnp
jl
xor
push
sbb
nop
inc
xor
xor
jge
mov
jecxz
push
sub
aaa
mov
ret
jle
and
push
hlt
or
push
dec
and
jge
arpl
shl
enter
xor
in
mov
popa
fisttpl
mov
shll
mov
pop
xchg
xchg
xchg
scas
in
fistpl
fildll
hlt
xchg
xchg
movsb
pop
inc
stc
mov
arpl
ret
push
rorb
ret
lret
jo
hlt
imul
fadds
mov
cmpsl
imul
cltd
stos
fistl
inc
clc
inc
lods
add
pop
xlat
sbb
mov
pop
inc
test
aas
es
inc
pushf
add
gs
cwtl
push
cwtl
mov
cmp
std
cmp
dec
in
fwait
pop
pop
nop
fs
pop
fs
inc
mov
adcl
into
ljmp
scas
mov
inc
lods
nop
fildl
mov
xchg
mov
bound
repnz
aas
xchg
pop
imul
sub
lret
cli
ss
loopne
add
adc
lods
fwait
cmp
stc
mov
xchg
and
xor
test
sbb
hlt
xchg
fcmovb
jbe
xor
adc
inc
lcall
icebp
outsb
inc
pop
int
mov
xchg
xchg
sub
add
outsl
sub
mov
and
pop
in
mov
push
in
imul
mov
stos
lcall
sbbb
fildl
lds
icebp
or
cmp
clc
and
ds
int
out
aas
pop
inc
mov
and
xchg
adc
ja
pop
sub
bound
push
sbbl
pushf
cmpsb
xor
ret
shlb
mov
ss
insb
and
jae
into
mov
ds
xchg
cld
mov
jecxz
mov
cmpb
xchg
mov
sub
dec
dec
mov
xor
call
fadds
xchg
inc
mov
adc
out
test
pop
dec
mov
or
call
xor
and
fmuls
clc
mov
cmp
mov
psubusb
push
xor
cmpsb
mov
jle
stc
shll
hlt
in
subb
ja
pusha
sarl
imul
mov
push
mov
jmp
push
mov
pop
insl
and
add
mov
gs
ja
inc
or
jge
idiv
sbbl
jmp
ja
insl
icebp
aas
mov
bound
xchg
stos
inc
pop
fs
xchg
or
call
lea
aas
je
shl
xchg
xor
xchg
push
add
mov
leave
dec
ret
pop
cmpsl
out
inc
push
dec
loopne
push
mov
jp
mov
mov
in
fistpll
inc
mov
jne
repnz
dec
or
adc
adc
in
call
imul
adc
and
cmp
inc
and
loope
ljmp
pop
jecxz
jge
orb
ret
push
and
inc
and
int3
cli
inc
mov
repnz
push
inc
inc
ret
inc
gs
aas
push
sahf
inc
mov
into
fsubrp
jecxz
cmpsb
and
sub
into
or
in
cmpsl
and
lret
mov
mov
xchg
in
adc
es
inc
jno
dec
push
adcb
test
pop
in
popf
adc
push
fsubrl
push
mov
mov
rolb
out
aas
int3
push
jno
pop
xchg
or
sub
xor
into
lcall
xor
vandps
pushf
xchg
es
and
inc
testb
cmpsl
bound
xchg
mov
in
add
pop
cs
jl
xchg
and
loop
js
push
insl
insl
gs
add
andb
fiadds
xor
mov
sbb
test
cmc
pop
lret
add
cld
and
dec
pop
or
scas
daa
xor
lods
pop
mov
xor
inc
push
outsl
dec
push
xchg
scas
sub
jg
pusha
adc
or
mov
and
mov
gs
stos
fsubs
cmp
cmc
loope
mov
sbb
xchg
xchg
mov
es
scas
cs
cld
xchg
test
fwait
push
cmp
call
push
cmp
iret
lds
addr16
jecxz
and
fisubrl
lds
fnop
leave
push
add
pop
mov
rclb
mov
mov
dec
scas
dec
cmc
int3
xlat
inc
jae
add
gs
and
mov
icebp
inc
fcoms
xor
in
aas
xor
dec
or
jne
or
mov
jp
negl
out
popf
pop
aaa
cltd
mov
xor
and
push
jne
jp
push
xchg
leave
aad
adc
out
and
lods
add
ret
add
xchg
lds
lcall
mov
fisubl
sub
movsl
pop
das
mov
cmc
or
stc
sub
test
pop
pop
mov
and
sbb
sbb
aad
pop
sti
dec
mov
sbb
mov
sbb
or
mov
push
enter
int3
push
jns
dec
outsb
sub
pop
inc
mov
enter
sub
xchg
es
dec
mov
cld
enter
add
dec
mov
imull
push
roll
pusha
insl
pop
and
push
xor
imul
fidivs
icebp
or
enter
mov
xchg
out
lahf
inc
mov
xor
or
push
rep
stos
sahf
mov
xor
xchg
mov
rorb
inc
mov
popa
call
fcmovne
mov
test
icebp
mov
and
mull
add
loopne
push
and
pop
dec
cld
jo
cmpsb
xor
out
and
andl
addl
ds
xor
adc
xor
mov
les
je
inc
sub
fistps
mov
jae
pushf
out
data16
mov
lds
sbb
fists
jno
add
sbb
repz
mov
adc
lcall
dec
in
dec
mov
mov
mov
insb
push
sbb
cltd
out
mov
lock
aas
pop
std
test
cmpsl
adc
pop
mov
and
test
std
lea
dec
mov
movsb
outsl
pop
sbb
mov
repz
lahf
lahf
popa
mov
insl
inc
mov
imul
xchg
fs
push
dec
fcmovu
ret
and
mov
pop
jp
out
cli
imul
and
jl
dec
aad
pop
pop
xor
stc
jecxz
pop
mov
jmp
imul
arpl
popf
std
push
roll
adc
adc
push
stc
icebp
bound
push
outsb
dec
cmp
jbe
mov
ret
cli
jge
mov
jae
out
je
add
test
xchg
imul
ljmp
jmp
inc
data16
imul
out
inc
dec
mov
or
xlat
mov
ja
cs
inc
imul
lds
jecxz
sbb
lret
push
shrl
mov
insl
rorb
aas
sbbl
or
test
push
out
xor
and
enter
insb
test
aam
mov
lret
push
push
sub
outsl
std
iret
push
sub
insb
cld
push
pop
mov
lods
negl
mov
or
shll
out
je
test
cmp
das
mov
jle
jbe
jl
dec
outsl
iret
inc
xchg
cli
dec
loop
push
std
leave
cmpb
jo
dec
xchg
jb
adc
std
jo
fldl
test
xor
mov
inc
pop
mov
sub
fwait
inc
outsb
fsts
mov
sarl
mov
es
arpl
arpl
mov
leave
enter
repnz
test
mov
xchg
in
xchg
xor
aaa
test
xchg
pop
fwait
add
adc
inc
and
or
xlat
jbe
jg
sub
mov
rcll
dec
loopne
insb
mov
clc
fsubrs
add
test
ljmp
dec
sbb
push
repnz
and
incl
sti
scas
and
dec
shr
cmc
dec
push
out
nop
loope
cld
and
and
mov
dec
lods
fadds
pop
stos
mov
loope
jp
fstpl
aas
aad
test
enter
leave
ljmp
push
ja
std
outsl
mov
mov
push
fildl
add
add
ss
ret
lea
adc
addr16
int3
icebp
gs
sbbl
push
jg
or
sub
and
mov
fdiv
sub
push
mov
bound
ret
fiadds
sub
repnz
lock
sti
mov
jne
cmp
clc
int3
mov
call
jp
std
loope
xor
stos
xor
xchg
loopne
arpl
fildl
stos
push
jmp
mov
adc
insb
aam
testl
sti
xchg
enter
jo
frstor
popl
xchg
sbb
clc
rcrb
dec
xor
push
jno
test
outsb
lcall
shll
stos
aam
mov
and
and
add
adc
mov
mov
mov
popa
sbb
out
fisubl
lcall
cli
cmpl
xor
js
cmp
and
cmp
imul
out
jo
inc
cmpsb
lret
jmp
mull
lods
cmp
mov
call
int3
adc
sbb
cmp
clc
sbb
push
orb
pop
cmpsb
and
or
adc
push
dec
mov
pop
ucomiss
icebp
cmpsl
xchg
jo
push
xchg
aam
mov
dec
mov
mov
stos
popf
mov
popf
sub
push
cmp
xchg
movsb
cmp
and
pop
scas
aaa
iret
mov
in
sti
or
xchg
sub
mov
inc
sub
dec
dec
or
outsb
ficompl
sub
inc
pop
push
dec
stos
lahf
stc
cld
scas
jno
and
push
adc
jno,pn
hlt
cmp
in
dec
stc
mov
push
out
inc
pop
xor
jmp
fisubs
scas
aaa
dec
movsl
shlb
out
sbb
pop
ret
shr
lcall
jb
test
and
mov
js
xlat
lret
pushf
inc
sub
mov
jmp
je
sbb
cld
mov
mov
mov
jg
add
mov
jmp
push
lahf
loop
xchg
mul
lods
notb
insb
mov
leave
ljmp
jns
dec
jno
clc
fs
and
cltd
ret
push
pop
or
xchg
sub
scas
pop
sti
das
mov
insl
insb
sub
int
leave
and
inc
jnp
fcomip
mov
jae
mov
xchg
jb
outsb
sbb
cmp
push
pushf
xor
inc
ljmp
push
cmp
insl
adcl
xchg
ja
shrb
and
push
jnp
test
pop
cmp
testb
fwait
in
scas
into
or
and
aaa
mov
into
mov
movb
inc
and
or
popf
or
and
mov
mov
push
mov
adc
and
mov
sub
lcall
adc
inc
dec
ret
inc
hlt
fists
add
ss
inc
jecxz
xchg
stc
shrb
jmp
repnz
aas
lcall
aas
or
mov
adc
xor
xchg
cmpsl
push
es
mov
ja
push
lret
das
mov
nop
pop
js
leave
push
jb
aas
jg
ret
xor
jle
mov
xor
ret
mov
aam
xchg
shr
cli
or
movsb
pop
or
xor
test
pop
pushf
xchg
jg
hlt
and
inc
sub
bnd
negb
mov
jecxz
in
sbb
xchg
cmp
ljmp
jecxz
push
mov
push
and
and
add
dec
js
movsl
shrl
pop
jb
in
fsub
mov
addr16
add
jp
aas
test
pop
vandps
add
xchg
adc
or
mov
inc
inc
add
loopne
jns
sub
movsl
push
out
jg
lods
xchg
xor
inc
xor
sub
add
mov
adc
lret
incb
dec
adc
mov
fs
rcrb
lret
scas
into
jb
repz
in
repz
decl
jl
and
fcomp
fsub
outsl
xchg
mov
mov
test
sub
pop
pop
jge
push
dec
ja
sbbb
mov
sub
mov
mov
icebp
stos
mov
popa
and
and
and
mov
mov
and
and
cmp
popa
mov
inc
mov
push
in
mov
arpl
pop
shlb
test
std
xchg
lcall
mov
mov
xchg
mov
ret
sahf
inc
imul
das
ss
xlat
cmpsl
lea
iret
and
call
cmp
add
mov
xor
movsl
es
test
pop
push
arpl
sub
cs
adc
cmpb
cmpsl
sbb
shl
sub
mov
jl
jl
pop
mov
std
jle
mov
jbe
mov
inc
push
cmp
imul
divl
xor
or
pop
pop
pop
pop
roll
sbb
js
xchg
mov
pop
push
fcompl
shlb
fwait
jne
pop
test
pop
mov
mov
xchg
pop
sub
divb
insl
dec
inc
mov
sbb
in
mov
sbb
sbb
sbb
ror
mov
sarl
and
xor
sbb
sarl
or
jl
test
out
add
sahf
push
cmp
cmp
push
mov
mov
daa
or
jnp
xchg
push
sub
pop
das
sub
push
add
mov
aaa
add
push
pusha
xor
iret
loopne
pop
cmpsb
add
lock
and
fsubrp
std
inc
js
insl
mov
std
out
lods
in
mov
xlat
xchg
in
das
lret
cmc
add
mov
aaa
cmp
mov
scas
pop
cmp
or
in
jle
ljmp
movsl
mov
cmc
cmp
mov
icebp
adc
mov
jl
push
or
sbb
mov
xchg
jno
mov
iret
lock
jg
push
subl
andl
addr16
push
or
pusha
fiadds
bound
enter
popa
jne
test
add
gs
fdivrs
cs
mov
pop
lods
mulb
pop
subl
xlat
pop
lods
dec
mov
lock
push
mov
mov
sarb
imul
gs
mov
mov
push
aad
mov
push
aam
push
dec
push
cmp
push
mov
pop
test
jo
faddl
jecxz
add
jno
pop
out
mov
outsl
lret
and
aaa
jmp
aad
or
cmpsb
arpl
push
inc
adc
fstps
pop
fcmovne
cld
iret
addr16
lahf
insl
icebp
cwtl
je
xor
push
icebp
sbb
jo
xor
out
les
push
and
jne
jmp
repz
sahf
movl
mov
cmp
dec
jmp
fdivrl
mov
cmp
repz
sub
es
enter
pusha
fcoms
push
js
pop
sbb
outsb
data16
and
push
enter
xchg
push
test
adc
jp
jl
fcmovnbe
add
push
pop
stc
rorl
nop
imul
dec
ret
dec
cmp
push
cmc
lret
lods
ror
inc
xchg
popa
mov
or
ret
inc
adc
ret
cmp
rclb
sbb
leave
test
test
shll
push
jae
icebp
stos
jo
inc
mov
test
data16
push
jge
ret
adc
push
dec
pop
repnz
mov
lea
xchg
add
mov
pop
cmp
cld
and
test
inc
jns
or
and
icebp
add
jl
aad
push
mov
pop
mov
xchg
daa
ljmp
adc
aas
xor
adc
pop
xchg
notl
inc
rcrb
in
popl
lods
push
mov
or
ficoml
ss
add
and
xchg
ja
lea
jns
xchg
ficomps
daa
js
imul
push
mov
sub
inc
xchg
sahf
add
bound
int
in
xor
dec
icebp
sti
fcmovbe
cs
jne
dec
out
push
pop
in
mov
ret
mov
jecxz
fldl
jg
cwtl
cld
or
sbb
jecxz
sub
mov
loopne
xlat
pop
mov
es
in
pop
cmpsl
je
lea
fwait
das
sbb
pop
fs
rolb
jg
add
mov
dec
cmp
aaa
popf
aaa
jg
and
pusha
mov
sahf
sub
aam
push
pop
inc
imul
les
adc
mov
sub
push
int
fstpl
xor
sub
pop
pop
out
outsb
fldenv
or
pushf
xchg
cmp
pushf
lret
fsts
pop
mul
inc
push
ss
aad
cmc
xor
insl
mov
mov
ja
roll
in
clc
push
inc
pop
lock
add
push
adc
lret
jge
call
adc
push
inc
mov
out
pop
push
fcomps
aad
jge
imul
pop
jmp
mov
push
pop
stos
movsb
xchg
jnp
or
push
stos
fistpll
imul
xchg
rorl
dec
push
leave
cmp
sub
push
icebp
or
pop
inc
lods
iret
jecxz
dec
cmp
repz
xchg
call
pop
lret
fprem1
jmp
ret
inc
popf
and
mov
fmulp
sub
pop
sub
pushf
mov
daa
cwtl
ds
arpl
push
sti
vpunpckhqdq
fcoml
inc
push
lds
xchg
std
aam
sahf
dec
lock
sub
test
sarb
test
pop
lahf
fcom
push
pop
std
adc
arpl
inc
lds
inc
push
mov
cmpsl
inc
jae
mov
iret
pop
dec
outsb
sahf
fldt
xlat
or
cmp
sbb
orl
arpl
adcb
scas
dec
jno
xor
pop
add
cmp
or
push
push
mov
cmp
adc
repz
xor
and
jno
addl
test
inc
nop
adc
fmull
push
inc
mov
rcl
or
stos
dec
cmpsl
cmp
push
xchg
mov
cmp
xchg
dec
cmp
subb
lret
sub
jecxz
jbe
mov
loope
sub
xchg
pop
sub
test
pop
sbb
cmpsl
mov
xchg
and
insb
mov
bound
or
xor
and
lods
push
icebp
xor
aad
idiv
adc
or
inc
icebp
imul
mov
loopne
xchg
jecxz
adc
inc
es
jl
adc
rcrl
jmp
inc
movq
inc
pop
dec
add
test
stos
mov
or
xor
loopne
lret
push
jae
bound
stc
cmc
in
ljmp
mov
push
dec
push
mov
les
into
mov
cmp
into
jno
pusha
and
je
mov
lret
cmp
cmpsb
loop
test
xor
cmp
test
shlb
loop
mov
push
cld
jae
pop
push
sub
cmc
jp
adc
stos
jmp
lea
push
insl
mov
mov
push
fs
sbb
arpl
cmp
mov
lret
gs
out
pop
rcrb
xorl
pop
jle
cwtl
dec
and
scas
sbbb
das
mov
ficoms
fistps
nop
xor
add
daa
call
xchg
push
jg
cwtl
divl
repz
scas
or
out
arpl
inc
out
mov
aad
sbb
lret
cld
in
imul
iret
xchg
xor
inc
nop
scas
insb
stos
add
dec
or
inc
mov
and
js
xor
sub
cmp
mov
in
cmp
xor
fnsave
mov
xchg
into
int3
lcall
test
jg
and
mov
lret
inc
leave
lret
bnd
xchg
lods
fcmovbe
inc
push
xor
pop
adc
pop
inc
dec
cld
sti
push
lds
adc
inc
stc
gs
xchg
mov
jle
shll
cmp
pop
push
sub
stos
push
out
pop
aas
mov
ds
jae
sub
sub
dec
aaa
adc
leave
mov
xor
sub
sub
mov
loope
cmpsb
lods
adcb
loop
mov
jo
lahf
mov
ja,pt
test
fwait
xlat
pushl
push
popa
adc
jbe
fmuls
push
sti
or
ret
jle
lret
int3
addb
mov
push
fldl
jl
inc
mov
shlb
fisubs
inc
push
mov
fists
out
ljmp
daa
jmp
ja
pop
xor
fmuls
mov
popa
or
mov
xor
jo
popf
xor
daa
jecxz
mov
popa
jb
repz
rol
call
cmp
or
fsubrl
rol
push
xchg
sarb
lcall
stos
mov
sahf
icebp
cli
jne
add
scas
aad
ds
aas
outsb
adc
jno
mov
mov
pop
mov
push
loopne
sub
mov
xchg
inc
movsl
aaa
fisttpl
pusha
lds
or
adc
mov
mov
inc
cmp
jo
jb
push
fdivrs
adc
cmp
js
mov
xchg
loope
mov
push
pop
mov
fidivs
cmp
mov
xchg
sub
add
test
add
lea
fsubr
fiadds
idivl
jno
das
loopne
scas
cmp
add
inc
inc
movsl
xchg
mov
outsb
cmp
inc
loop
cs
stc
and
lods
inc
cmp
or
aad
or
data16
add
ror
sub
ror
jmp
mov
les
cmp
loop
loop
movl
imul
sub
loope
xchg
lods
sbb
fldcw
mov
cbtw
andps
daa
lcall
popf
int
sub
adc
jne
mov
adc
push
dec
mov
repnz
mov
pop
sub
push
int3
dec
mov
and
into
hlt
lea
int
sbb
pop
mov
mov
ret
loopne
mov
iret
and
jo
xor
subl
mov
sbb
jp
sub
mov
fsubrp
push
cmp
lods
fidivrs
ljmp
mov
cmp
out
stos
ljmp
jl
push
add
add
cmc
and
clc
ds
fucom
ja
xor
stos
repnz
lods
aad
ljmp
shll
fs
out
and
jb
imul
sub
push
loope
cld
inc
mov
push
push
daa
jg
lret
jp
xchg
dec
jae
lret
xchg
enter
push
pop
mov
repnz
pop
dec
in
insb
pop
mov
xor
adc
stos
push
dec
hlt
in
inc
fsts
add
pusha
pushf
sahf
sbb
adc
xchg
orl
sbb
xchg
push
sub
add
mov
mov
mov
pop
pop
mov
ja
push
add
iret
or
jge
pop
rorb
in
cmp
add
out
sbb
mov
sub
pop
pushf
jmp
ja
push
pop
fstpl
xor
aas
nop
lds
cmpsb
ljmp
adc
dec
mov
fsts
insb
pop
mov
cmp
push
mov
je
xor
mov
mov
inc
cs
adc
jle
clc
es
repnz
xlat
fiaddl
sbbl
pop
dec
adc
addr16
std
cmp
stos
mov
ret
add
rcrl
ret
int
pop
inc
cwtl
sbb
jno
push
pushw
adc
cmp
pusha
mov
es
dec
cltd
lahf
inc
jmp
repnz
push
aaa
mov
aam
icebp
sbb
lea
add
repz
faddl
dec
and
lahf
imul
jnp
es
pop
fwait
push
add
pop
movsb
pop
insb
in
rorb
adc
les
test
rorl
negl
js
inc
or
aam
sub
push
call
stos
adc
out
mov
arpl
lea
rorb
testl
dec
stos
fildll
cs
cs
mov
cli
mov
mov
fdivrl
test
xchg
rcl
ljmp
xchg
mov
sub
les
or
or
jl
in
in
cmp
lock
imul
mov
dec
loope
arpl
mov
shll
sub
push
xchg
idiv
dec
lea
mov
out
xor
test
mov
pop
lahf
ret
pop
jno
fstpt
adc
test
shr
xchg
int3
in
mov
jns
jo
mov
outsb
je
jl
pop
dec
out
js
rcl
dec
pop
cmp
pop
mov
pusha
ljmp
mov
jno
data16
pop
pushw
mov
push
fcom
inc
jmp
repnz
add
or
mov
outsb
mov
and
mov
jl
pop
or
addr16
rep
js
mov
sti
aas
mov
loop
mov
mov
pushf
fdivl
adc
hlt
test
insl
scas
iret
loope
jle
xchg
mov
adc
stc
outsl
ja
mov
xchg
xchg
jecxz
xchg
or
cmp
pop
leave
js
shlb
cmp
lds
dec
cmp
cmp
push
out
add
xchg
je
sti
mov
les
lret
inc
pop
out
add
sub
push
sub
mov
sbb
mov
mov
jnp
jl
jne
addr16
cmp
dec
xlat
icebp
int3
je
nop
mov
fbld
ror
stos
int3
mov
call
cmpb
stc
pop
push
je
mov
dec
or
ret
ljmp
pop
and
cmp
jo
insb
xchg
sub
lods
clc
lea
test
iret
stos
and
mov
stos
or
sbbb
lock
mov
lret
sub
mov
unpcklps
add
sbb
pop
cmpb
lods
movsl
push
or
stos
cmp
inc
pop
ret
jmp
enter
push
xor
xorl
cmp
mov
ds
pop
sub
fisubl
add
dec
pop
xorl
js
cmpsl
push
cmpsl
mov
add
mov
sub
jg
shl
push
dec
shll
pop
xor
shr
cmp
das
xchg
dec
xchg
and
cld
dec
rorb
xor
les
test
mov
fucomp
jp
and
pop
sub
insl
pop
jnp
xchg
in
mov
test
xor
jle
ret
mov
lods
and
ret
xchg
lods
xchg
inc
stos
sbb
cmp
bound
cmpsb
clc
push
xor
pop
lret
arpl
inc
lahf
jns
xchg
mov
das
iret
push
cmp
xchg
and
adcl
jnp
popf
ljmp
push
xor
sbb
inc
mov
push
pop
popa
imul
or
mov
rolb
mov
and
xchg
int3
add
mov
sbb
jb
sub
cli
add
fsubs
lods
lret
fldl
and
push
popa
test
es
out
stc
fwait
leave
push
dec
fstl
pushf
cli
push
lret
ljmp
hlt
cmp
xchg
jge
out
movsl
outsb
cmpsl
sbb
mov
sarb
fistl
push
inc
mov
lods
xchg
mov
cmpsl
lock
xchg
lods
jb
cmpsb
pop
int3
or
adcb
scas
aam
adc
jnp
mov
pop
sub
imul
xor
sub
adc
fs
js
lcall
lods
icebp
inc
aas
jnp
lcall
xor
xor
or
pushf
loopne
mov
cmpsb
and
sbb
clc
mov
ret
fcomps
and
pop
in
mov
push
and
mov
pop
and
scas
fstps
clc
jb
xchg
xchg
ret
xor
out
in
call
aaa
mov
imul
add
push
push
jb
mov
push
sbb
inc
add
xor
sahf
and
rcrb
fdivrl
int
cmp
stc
outsl
ficompl
mov
insb
cmp
imul
push
nop
data16
mov
ja
and
pop
cmp
pop
cmpsl
mov
out
int
jns
sub
add
sub
cmpsl
out
enter
dec
mov
stos
mov
xlat
jmp
divb
xor
jb
sbb
imul
scas
pop
sub
imul
repnz
jns
fistps
pushl
push
lret
outsl
or
sbb
sbb
adc
or
fcmovb
aad
or
clc
in
out
jns
inc
bound
mov
shll
sbb
mov
jg
and
out
testl
mov
ror
xchg
pop
push
std
lea
add
or
notl
dec
sub
mov
jae
mov
jne
lods
lret
sbbl
pop
mov
inc
lcall
lods
fsubp
add
int
fwait
sbb
push
inc
call
aam
sar
add
cmp
daa
mov
test
test
imul
pop
movsb
loop
aaa
pop
mov
inc
out
dec
mov
xor
push
xor
sbb
test
adc
mov
lods
pop
jns
push
inc
mov
lret
mov
jae
xchg
or
add
leave
shlb
dec
out
pop
xchg
jb
lods
and
fcmovbe
and
sub
jle
out
std
es
pop
xor
js
lock
mov
jmp
xchg
nop
mov
aas
lret
int
push
and
adc
addr16
add
jge
sbb
insl
mov
inc
addb
mov
mov
pop
dec
jne
stc
stos
jl
cmc
sbb
xor
inc
cmpsb
sub
test
sti
inc
arpl
sbb
cmc
cmc
rcrl
cli
xchg
mov
or
xor
dec
in
aas
rcrl
mov
cmpsb
and
or
and
xlat
sahf
lods
andl
xchg
out
mov
movsb
sub
out
xor
das
adc
sbb
jg
sbb
ret
ret
pop
or
xchg
mov
subl
push
xchg
inc
jp
in
dec
std
cmp
add
sbb
xchg
iret
insl
cwtl
pop
add
out
pop
dec
xor
hlt
je
in
sub
and
in
xchg
xor
int
cmp
mov
adc
cmp
xchg
ss
mov
or
mov
lock
out
or
adc
shrd
jno
push
xchg
xchg
mov
pop
lret
mov
and
mov
pop
in
xor
mov
scas
mov
jno
adcl
es
daa
hlt
das
inc
jnp
dec
js
push
mov
push
sub
cmp
pop
das
jbe
and
push
in
loopne
mov
xor
sub
mov
jp
inc
push
ret
fadds
insl
lods
mov
adc
daa
and
pop
dec
adc
movsb
xor
xchg
icebp
dec
pop
push
test
fidivs
sbbl
sbb
test
hlt
or
dec
mov
and
push
imul
loopne
xlat
jg
xor
jo
in
in
out
fldcw
addr16
ret
mov
pop
mov
sub
inc
adc
or
sbb
dec
xor
iret
int3
stos
mov
pop
sub
gs
movsl
icebp
loopne
frstor
lods
fimuls
cltd
divb
lods
leave
sbb
in
popf
ds
dec
shlb
popa
insb
add
push
outsb
in
scas
ds
xchg
sub
mov
movsb
xchg
loop
xchg
pop
xchg
and
in
divb
cmc
fisttpl
and
mov
ret
mov
lahf
pop
push
mov
adc
mov
inc
mov
mov
mov
js
xchg
cmp
dec
mov
cmp
mov
add
add
lea
cmc
pop
add
out
mov
jnp
gs
test
imul
adc
mov
sub
dec
adc
icebp
and
pop
adc
cli
xorl
push
mov
add
lock
push
jl
adc
hlt
outsb
xor
mov
hlt
movsl
test
fldl
push
int
rclb
pop
inc
scas
cmpl
lret
dec
fidivs
test
nop
adc
shl
adc
enter
jno
scas
push
dec
sbb
push
sub
xchg
fisubs
roll
fistl
xchg
or
pop
insl
aas
sbb
push
xchg
cmc
xor
sarb
into
pusha
inc
and
sar
pop
lods
jns
jb
inc
or
dec
test
jg
mov
jmp
and
and
mov
sarb
iret
mov
or
push
dec
addr16
fisttpl
pushf
fwait
inc
push
iret
icebp
dec
pop
push
xor
xchg
gs
sub
and
mov
mov
sbb
imul
movsb
xlat
and
mov
jnp
cmpsl
dec
cs
jg
mov
stos
popf
mov
cmp
iret
jnp
mov
cmp
fcomps
jb
adc
push
int3
inc
xchg
rorl
mov
xchg
mov
mov
mov
std
lret
addl
cmc
loopne
cmp
cmp
lcall
inc
mov
or
or
pushf
xabort
test
inc
insb
dec
jp
sub
cli
mov
mov
inc
pop
and
stc
pop
push
push
clc
int3
dec
leave
rep
jp
jecxz
xchg
outsl
jb
repnz
inc
mov
sub
mov
adc
jne
sub
negl
and
leave
in
addl
cmp
fimull
jl
and
out
fmuls
inc
xchg
outsb
mov
rclb
lret
add
or
cmpsb
in
mov
jl
jb
leave
mov
mov
mov
fidivl
add
fwait
shl
pop
lods
icebp
test
jle
call
cmp
mov
pop
lret
jmp
cmp
movsl
push
jb
les
jl
sub
fldenv
in
in
inc
cmp
daa
jnp
in
test
shl
stc
mov
inc
push
jbe
fs
roll
loope
les
dec
pop
gs
lods
add
lahf
sar
adc
enter
pop
pop
cmpsb
cwtl
add
mov
fldcw
cmovno
mov
xchg
insl
mov
je
into
xchg
lea
pop
loop
pop
ss
pop
mov
mov
cmc
jns
add
mov
das
insl
das
xlat
push
and
add
cmp
inc
jp
clc
mov
xchg
loop
in
xchg
dec
fisttps
inc
push
or
xchg
popf
xchg
or
outsl
pop
fwait
xor
hlt
cwtl
arpl
int3
fisubs
jg
jl
cltd
daa
fucomip
push
fsubs
scas
enter
mov
arpl
repz
mov
jbe
out
push
jb
sahf
and
stc
in
sbb
fld
mov
stos
sbb
mov
xchg
and
jl
sbb
mov
pop
call
mov
aad
loop
dec
test
jge
push
xchg
add
imul
push
xor
inc
fdivrs
loopne
fldt
xor
cmp
les
xlat
in
mov
or
rcrb
mov
mov
bnd
out
ds
jmp
testb
xor
insb
ret
mov
inc
scas
jg
stos
push
adc
pop
shr
in
cli
push
xchg
add
loope
xchg
mov
cmp
mov
dec
int
push
enter
pop
mov
cmp
mov
adc
hlt
loope
mov
jbe
lret
je
add
mov
pop
or
ror
cltd
xor
andb
out
das
mov
repnz
mov
cmp
add
jge
bound
cmpsb
mov
cmp
inc
mov
xor
sub
push
lret
ret
mov
mov
sbb
sub
inc
jns
add
push
inc
add
repz
jecxz
shlb
fisttpll
shrl
mulb
ffree
lods
sub
xchg
fimuls
inc
cs
lcall
inc
ja
aas
out
cmc
sub
test
pop
add
jg
test
into
mov
test
inc
sub
mov
add
mov
lahf
jnp
pop
movsl
pop
dec
sub
xchg
rcr
js
cs
push
pop
pop
hlt
sti
jo
mov
cli
jae
and
jne
pop
xor
adc
adc
stc
cmp
js
pop
push
dec
lret
imul
push
dec
adc
add
adc
test
push
add
add
add
inc
jp
movsl
aad
lahf
frstor
cmpl
fadds
clc
in
sbb
psrld
loope
add
icebp
cmp
mov
push
sti
mov
push
adc
cmp
inc
loope
and
icebp
stc
rorb
ret
or
push
fidivs
sahf
out
loopne
pusha
mov
add
mov
inc
out
aam
rcrb
sub
xchg
jmp
mov
adc
jmp
xorb
fs
aaa
aad
or
jl
fists
lahf
std
pop
das
push
in
mov
add
add
imul
dec
insb
loop
or
adc
dec
das
adc
push
cs
adc
pop
adc
or
jo
mov
stc
push
out
xchg
xchg
popf
mov
loop
aad
pushl
or
scas
dec
insb
fucom
stos
pop
fs
hlt
ret
sub
ret
daa
cwtl
bound
jmp
lret
jno
mov
mov
sbb
out
data16
sbb
cwtl
fs
dec
mov
lds
push
mov
adcl
pop
rol
mov
dec
aad
jns
das
js
mov
movl
call
int
inc
add
dec
mov
xorl
xor
add
push
cmp
jbe
inc
adc
jle
jbe
mov
xor
aam
inc
pop
pop
cmpsl
rcrb
loop
outsl
test
in
sbb
sbb
scas
cmpl
mov
jecxz
pop
cmp
cs
adc
dec
sahf
inc
cmp
and
lahf
dec
addr16
sub
cmp
outsl
loop
std
dec
xchg
jb
sub
pop
in
fsubs
ja
movsb
mov
mov
xchg
mov
sub
mov
shl
inc
rcl
or
pop
lcall
outsb
fwait
and
and
subb
adc
cli
push
bswap
mov
fimuls
xor
sub
jae
xor
daa
sub
sbbb
jmp
pusha
js
fnstcw
and
add
inc
jne
xchg
out
sub
movsb
add
lret
imul
addr16
pop
push
lods
or
clc
push
jae
or
sub
mov
orl
loop
pop
das
or
push
xchg
pop
in
pop
ss
stc
mov
pop
and
ljmp
je
xor
push
add
imul
arpl
loopne
les
jmp
loope
mov
xchg
or
movsb
pushf
push
stc
dec
ret
sahf
arpl
jbe
sbb
aas
out
stos
shlb
aaa
mov
imul
insl
mov
pop
bound
xchg
jecxz
cmp
in
mov
mov
add
loope
sarl
lret
dec
mov
pop
cmp
xchg
imul
sub
push
or
mov
cmp
insb
sbbb
insl
pop
shr
add
jp
loopne,pt
mov
test
andb
js
sub
sbb
xchg
and
lea
pop
imul
sub
test
popa
arpl
cmpsl
jno
and
add
adc
push
lock
mov
jae
pop
jbe
pcmpgtb
adc
mov
mov
push
or
mov
jle
arpl
popa
inc
mov
arpl
lret
cld
xchg
jg
jbe
test
push
outsl
or
aas
cmc
fidivrs
gs
adc
mov
sub
lret
jmp
nop
movsb
popa
imul
lods
ret
jnp
in
shrb
and
loope
roll
xor
ret
andb
jge
xor
sub
adc
or
pop
lret
jge
adc
ret
lods
cmpl
add
push
pop
sti
pop
jae
jmp
lods
cmpl
cltd
outsl
or
cld
gs
in
xor
inc
stos
mov
sarl
mov
mov
daa
iret
pop
xchg
mov
scas
pop
jns
ret
dec
add
dec
pop
or
cltd
cmpsb
pop
rcrb
pop
xchg
ret
outsl
ljmp
movsl
nop
dec
mov
mov
lcall
jg
ja
minps
cmpsb
outsl
jp
cltd
mov
arpl
mov
jb
mov
ss
repnz
jle
in
popf
lds
mov
insb
neg
dec
insl
ljmp
ds
jo
cld
mov
hlt
cmpsl
repz
push
stc
fisttpl
js
sub
pop
lret
push
cmpb
dec
outsl
xchg
rcr
mov
je
sub
hlt
pop
aam
xchg
in
sbb
sahf
add
add
sub
mov
xor
aam
insl
faddl
sub
xchg
sub
sbb
and
xor
inc
add
adc
sub
inc
jmp
xor
jnp
xor
out
jecxz
mov
dec
and
mov
les
in
mov
das
mov
loop
or
jge
add
loope
adc
push
call
jg
into
loope
sti
push
sarb
xchg
pop
jge
test
jmp
mov
or
sbb
sub
pop
inc
je
cmp
je
xor
dec
xorl
and
sub
outsl
jns
or
cltd
nop
mov
xchg
into
nop
ds
pop
xorl
jo
insb
cmp
mov
outsl
test
add
pop
imul
notl
ja
cmp
scas
xchg
mov
sbb
cld
inc
popa
xor
sbb
daa
xor
adc
scas
gs
outsb
sbb
cmpsb
je
mov
inc
movsb
and
das
cmp
push
shlb
imull
das
cmp
mov
subl
adc
sbb
mov
mov
mov
sti
push
call
push
xchg
scas
stos
pop
mov
adc
call
das
sbb
mov
xor
sub
sbb
pop
sarb
mov
insl
xor
jo
pop
js
jbe
lock
jecxz
mov
test
icebp
push
cmp
add
xor
clc
mov
cli
aas
mov
lahf
dec
jbe
out
jo
call
xchg
fs
jle
aas
cmp
lahf
or
push
into
stos
or
cmp
test
pop
and
xchg
jb
cli
add
push
dec
out
push
sub
xchg
jnp
scas
nop
xchg
xchg
addl
cmpsb
inc
cmp
nop
orb
or
push
repnz
sbb
sbb
add
call
push
xchg
mov
aaa
lret
fildl
and
cmc
roll
jge
ficoml
scas
jo
mov
mov
lret
sarl
fadds
mov
test
out
mov
das
pop
mov
cli
ds
or
xchg
clc
mov
mov
pop
ljmp
sbb
jp
sbb
call
jno
out
sub
dec
adc
sub
jp
sub
add
jg
repnz
cmp
mov
pusha
ss
sti
xchg
pop
test
icebp
cmpsb
in
push
push
pop
cmp
loope
push
push
pushf
cmp
pop
sbb
cwtl
mov
movsb
sti
ret
fnstsw
mov
aad
pop
rcrl
testl
dec
ficompl
cld
jnp
xor
push
add
addr16
inc
mov
jl
sub
adc
push
ret
dec
and
add
ret
in
cld
adc
push
int3
js
loopne
imul
lahf
hlt
fs
es
out
arpl
or
dec
aam
mov
sbb
stos
sarb
xlat
lods
xchg
push
addr16
int3
sub
cltd
pop
adcb
dec
jg
fsubl
je
jp
adc
fnstsw
xor
adc
leave
scas
push
sbb
in
scas
and
cmp
jecxz
mov
adc
lods
subb
xor
jle
jbe
popf
icebp
xlat
or
mov
pusha
mov
rolb
movb
cmp
das
xor
push
or
dec
mov
xchg
mov
jecxz
in
pmaxsw
cmp
nop
leave
push
lock
outsl
cmp
add
stos
inc
jmp
fdivr
sub
adc
ret
pop
push
dec
xchg
jg
arpl
cmpsb
push
jg
insl
fnstcw
ds
push
and
pop
xchg
jmp
ss
shl
mov
in
dec
sahf
inc
jmp
xchg
dec
sbb
lods
dec
ret
xor
adcb
sbb
insb
dec
stos
das
fwait
rclb
int3
dec
lock
pushf
pop
push
inc
arpl
cli
in
std
fmull
dec
mov
insl
iret
rcr
pusha
stos
and
sub
mov
inc
ret
add
dec
ja
lods
ds
adc
sahf
cli
mov
inc
mov
or
cmc
data16
fsubrl
sub
inc
leave
sti
call
sub
mov
sarb
enter
sbb
movb
scas
lock
mov
pop
push
mov
call
jmp
outsb
andb
lcall
daa
inc
cmp
mov
in
xchg
push
out
repnz
cld
cmpsb
pop
and
mov
mov
popa
jecxz
jbe
xor
sbb
inc
xor
push
loopne
and
rorb
mov
mov
cmpb
jbe
scas
mov
lret
rorb
daa
mov
les
adc
in
out
inc
xchg
mov
sbb
dec
pop
outsl
pop
in
xlat
jb
inc
call
aas
loopne
ret
inc
mov
sub
inc
mov
call
jb
jg
push
aaa
cli
push
pop
jp
lods
xor
jo
sahf
scas
mov
ret
imul
scas
push
sbb
pop
dec
or
adc
fcomi
jbe
xchg
lds
call
rcll
jg
scas
jae
sahf
jnp
in
mov
inc
pop
imul
js
ret
mov
push
mov
mov
adc
mov
insl
scas
scas
push
xor
jnp
shl
inc
fwait
adc
pop
dec
into
gs
and
popa
jg
daa
lahf
fnstsw
cs
or
mov
in
fsts
inc
fiaddl
bound
lock
mov
dec
lock
xor
lahf
cli
push
push
insl
call
dec
icebp
test
stos
push
adc
jo
dec
aas
popa
std
fdiv
jl
in
lock
outsb
adc
pop
int3
inc
loop
fs
pop
push
dec
cmovl
ds
cmp
cmpsb
mov
sarb
dec
cmc
nop
into
xor
ja
pop
mov
pop
into
cltd
mov
mov
je
out
hlt
push
subb
cmp
push
sarl
push
jle
cmpsb
and
pushf
lock
cmp
cmp
adc
loop
and
ret
fiaddl
mov
push
mov
adc
pusha
sub
dec
add
sub
repz
or
insl
loopne
sbb
es
clc
fwait
aaa
jne
lcall
aam
rcll
cmpsl
or
lcall
out
xor
fs
inc
mov
ljmp
mov
xchg
inc
imul
enter
sbb
cmp
ss
add
sti
pop
dec
or
jge
xchg
out
or
xor
into
sub
jne
and
xlat
movsl
movsl
jge
stc
in
mov
repnz
popa
inc
fistps
xchg
inc
jp
cmpsb
test
xchg
cmp
xor
imul
mov
aaa
lcall
mov
mov
jmp
sub
push
add
out
or
aas
sub
dec
xchg
fdivs
jmp
shrl
bound
pop
insb
jb
cmp
jo
or
pop
fildl
das
cmp
sub
rorb
shlb
and
inc
mov
faddp
mov
ljmp
in
rcrb
sub
leave
xchg
pop
adc
jns
ja
xor
dec
nop
pop
adc
fisttpll
push
cld
mov
icebp
inc
aas
dec
ljmp
bound
scas
aaa
imul
fiadds
std
cmpsl
in
cmc
pop
ss
mov
cmp
adc
pop
inc
ret
pop
cmp
fidivs
add
and
xchg
shrl
jnp
in
push
fcomi
aaa
push
sbb
cmpl
dec
mov
push
xchg
in
arpl
cmp
popa
pop
cli
dec
inc
fcmovbe
rorl
dec
aam
iret
mov
and
mov
cmp
shll
out
std
stos
bound
sub
xchg
sub
mov
js
aam
sbb
rorb
inc
and
insl
nop
sahf
mov
push
xchg
nop
out
je
movsl
and
lock
lahf
mov
addr16
xor
sbb
adc
and
jg
sti
jle
test
lea
mov
leave
cmp
mov
mov
mov
sbb
test
test
add
cli
rorb
sbbb
inc
or
cltd
jge
sti
fcmovne
or
mov
mov
xchg
imul
dec
stos
adc
jo
aam
push
testb
movsl
not
sbb
nop
or
js
movsb
xchg
inc
and
lds
dec
add
sub
dec
xchg
and
xor
loope
push
imul
ljmp
scas
fst
jl
mov
jns
iret
shrl
leave
sbb
push
sbb
addr16
sub
iret
aad
cmp
ja
mov
and
mov
adc
xor
and
jge
or
jmp
cmp
and
push
in
add
shl
jae
push
inc
loop
sub
mov
stos
add
movsl
filds
popf
mov
and
in
sbb
in
inc
push
mov
lods
push
adc
and
shlb
rcrl
adc
add
jmp
pop
sarl
icebp
adc
hlt
adc
sub
cmc
pushl
push
cmpb
inc
xorb
dec
sbb
jecxz
filds
into
cld
add
test
push
cmpsl
sub
popa
xor
int3
mov
mov
adc
popf
push
or
popf
orb
mov
sub
sbb
jmp
sub
xorb
mov
stos
daa
jge
push
lea
mov
cmp
rcrb
push
je
bound
mov
sub
repz
or
ja
push
shl
pop
and
sbb
mov
fdivrs
push
cwtl
push
dec
stos
leave
ror
movsl
testl
push
push
lret
test
ss
jmp
hlt
das
rcl
sub
sbb
mov
fbstp
pushf
inc
push
xchg
mov
les
xor
test
aad
mov
xor
sahf
xor
dec
in
dec
movsl
xchg
xor
sbb
shrb
jge
jno
cmp
and
inc
fsub
xchg
cmp
sti
dec
outsl
xorl
pop
cmp
popf
and
and
cmp
negl
xchg
pop
xchg
out
push
pop
stc
outsl
gs
enter
and
and
repnz
cmp
jne
mov
sub
lea
lods
push
jmp
or
aas
ret
fwait
push
imul
in
cltd
sbb
aam
mov
cwtl
pop
fcmovbe
divl
inc
jle
in
push
add
decl
xor
gs
jl
test
rorb
data16
int3
out
popf
pop
lods
lods
pop
out
popf
and
push
sar
ds
mov
and
les
mov
hlt
mov
popf
pop
movsl
cmp
push
jnp
jmp
xchg
fidivrl
jns
dec
imul
sbb
fmuls
hlt
sbb
cmp
mov
mov
movl
and
sub
push
out
movsb
pop
cmc
sti
and
pop
imul
pop
insb
addr16
pop
mov
mov
lods
dec
call
stos
xlat
add
mov
movb
inc
lods
mov
dec
jp
add
cmp
shrl
mov
test
aaa
leave
dec
into
repz
inc
fidivl
cmpsb
xchg
div
mov
jmp
mov
push
push
loope
jmp
in
xchg
pop
mov
ret
jns
jb
mov
xor
les
sbb
aad
xchg
xor
daa
out
add
fnstcw
shlb
sti
push
dec
ret
xchg
pusha
stc
jbe
lea
sub
adc
push
fcom
movsl
sub
mov
enter
add
sbbb
jnp
pop
pop
outsb
xchg
jae
jnp
cmp
or
cmp
dec
add
jecxz
pop
mov
add
jbe
int3
add
adcb
test
popa
cmp
jne
xchg
push
xchg
dec
add
pop
xchg
pop
add
iret
arpl
and
sub
leave
jb
push
push
rcrl
popf
shl
sti
ljmp
pop
and
mov
fcomip
mov
imul
jne
test
into
rclb
int3
push
push
imul
mov
shlb
loop
cmp
cli
mov
add
sub
or
int
fstp
cwtl
push
loop
mov
and
add
dec
repnz
aam
mov
mov
repz
cmp
mov
dec
bound
add
sbb
daa
jecxz
adcl
push
pusha
sub
dec
xor
xor
adc
rcr
cmc
jnp
push
mov
sbb
jecxz
lahf
arpl
or
push
and
mov
xor
cmp
dec
sbb
fs
sbb
jno
iret
popf
and
sub
icebp
and
gs
rcrb
sahf
jp
sbb
std
in
inc
sbb
jo
popf
push
ss
inc
imul
mov
pop
dec
xor
and
push
adc
nop
sbb
xchg
mov
scas
repnz
fs
add
xor
xchg
mov
inc
xchg
shll
mov
or
mov
adc
jge
addr16
xor
mov
xchg
out
jle
aad
cld
cwtl
inc
add
sub
mov
and
js
dec
cmp
add
adc
xor
aas
inc
or
mov
ret
insb
orb
roll
pushf
repnz
push
stos
sub
test
inc
sub
loop
push
pop
sub
cs
nop
bswap
pop
lock
mov
jg
shrl
sti
insb
lret
mov
mov
cld
outsl
cwtl
test
test
jmp
push
pop
jp
push
int3
gs
xchg
scas
js
adc
repnz
or
aas
jl
inc
sbb
outsl
mov
icebp
mov
mov
add
stos
xlat
mov
sahf
sub
push
push
mov
jge
decb
out
push
mov
and
popf
inc
mov
cmc
jnp
dec
cltd
fnstcw
mov
jl
dec
push
xor
rcrl
pop
pop
lods
in
popa
inc
mov
movsb
push
push
or
jmp
add
ret
cmp
mov
jo
xor
in
ja
mov
xchg
sbb
xor
je
pop
sbb
dec
inc
repnz
sbb
mov
or
fsubrs
mov
sbb
test
loope
shr
adc
fcmovb
push
pop
movsb
mov
mov
loope
dec
mov
mov
cwtl
mov
mov
into
test
and
push
or
js
icebp
divb
bound
pushf
cmp
inc
cs
stc
inc
pop
mov
push
inc
mov
out
push
jp
add
or
in
out
xlat
dec
cmp
mov
lea
sahf
sub
pusha
in
push
sbb
cs
call
pop
mov
sub
cmpsb
xor
lcall
aas
gs
cmpsb
cli
and
cmpsb
lret
shlb
sub
shrb
mov
cmpl
pop
sub
xchg
mov
pop
sub
aam
int3
cwtl
jbe
mov
jno
rcll
xor
sub
lock
inc
hlt
add
cld
call
insb
adc
mov
stos
fwait
and
inc
lock
imull
cmpsl
int3
pusha
jge
push
xchg
insb
cmp
sub
xchg
mov
outsl
push
scas
jno
add
fisttpll
ret
in
jmp
push
push
out
push
mov
push
push
icebp
mov
xor
sub
add
out
sti
divb
mov
pop
jae
ss
popa
cmpsl
push
in
cli
sbb
std
testl
mov
adc
popf
dec
pop
sub
popf
cld
fwait
adc
int3
pop
jb
lcall
imul
ret
inc
mov
nop
mov
adc
in
and
xchg
je
and
in
adc
movsl
cmp
mov
daa
pop
pushf
je
iret
adc
dec
cs
stos
mov
xor
dec
dec
icebp
call
sub
stc
cmp
mov
sarl
aaa
icebp
aam
pop
das
mov
jae
rorb
adc
fcmovne
xor
daa
lahf
insb
shrl
mov
push
dec
in
mov
inc
or
xor
mov
xlat
mov
xchg
dec
cmc
or
cmpsb
outsb
cmp
sub
es
daa
add
in
jno
or
jle
dec
xor
inc
or
add
mov
dec
mov
mov
xor
mov
inc
negl
nop
leave
cld
push
push
mov
fldl
or
repz
add
sbb
repz
add
jne
and
or
mov
mov
lahf
pushf
mov
aad
cmc
cli
mov
ret
inc
rep
mov
loopne
shrl
dec
shr
lods
popf
or
in
adc
inc
inc
mov
mov
das
mov
push
hlt
jns
subb
pop
mov
push
jb
dec
adc
in
mov
and
xchg
mov
lods
push
movsb
test
mov
add
loope
pop
mov
lds
jbe
dec
fwait
int3
mov
in
arpl
pop
lock
rclb
stos
imul
enter
pop
push
das
jo
arpl
shrl
add
push
xchg
or
bound
mov
insb
sbb
push
adc
lcall
ds
sbb
popf
push
cmp
sub
sub
add
mov
add
cmp
adc
repnz
sbb
nop
sar
mov
gs
dec
inc
fmull
fldcw
sbb
lods
aas
insb
xchg
xor
mov
lret
pop
inc
aad
fs
jns
mov
push
mov
mov
adc
cli
cmc
sarl
in
push
jg
dec
movsl
pop
int3
cwtl
dec
xchg
jl
inc
cmp
or
add
std
nop
or
out
sbb
inc
sbb
cli
mov
sbb
rcr
movsb
test
mov
lock
xlat
icebp
jns
repz
in
test
xor
xchg
push
inc
push
push
mov
push
or
xchg
into
lahf
jnp
pop
les
rorl
scas
call
into
push
mov
dec
imulb
faddl
scas
out
cmp
shlb
pop
mov
lret
not
xor
and
lods
mov
loop
adc
fnstcw
push
sub
daa
pop
test
mov
cmp
xchg
mov
cmp
push
dec
mov
aam
cmp
mov
jmp
dec
repnz
lock
popf
xchg
dec
jns
adc
lea
push
inc
icebp
clc
mov
fs
inc
or
jnp
dec
xchg
ljmp
test
enter
aaa
and
cmp
rcr
xor
clc
dec
sbb
inc
or
add
jb
cmp
lahf
cmpsl
jle
xorb
and
inc
push
mov
lods
inc
stos
pop
aad
imul
sbb
ss
dec
shrb
ret
jmp
xchg
and
mov
xlat
cmc
xchg
add
pop
or
pushf
fbstp
pop
mov
xchg
cmp
out
xchg
out
movsb
xchg
out
test
adc
push
out
out
icebp
sub
dec
xor
mov
jle
ss
pop
mov
mov
mov
xor
mov
int3
mov
and
and
cli
pop
cmc
adc
adc
int3
pop
loope
shrb
push
inc
dec
cs
sbb
in
push
pop
mov
pop
xchg
jmp
or
out
jb
add
stc
dec
imul
jno
pop
imul
ret
pop
cmp
dec
pop
movntq
xor
push
cmp
xlat
add
jge
inc
loopne
cmp
ljmp
inc
ret
jl
jne
dec
push
add
inc
mov
inc
sbb
popf
rcl
dec
jp
lods
arpl
les
repz
outsl
insl
inc
jmp
adc
sub
test
add
xchg
jne
popa
push
push
cli
adc
jge
inc
insl
push
xchg
clc
in
test
mov
pop
jl
xchg
movsl
lock
sub
mov
pop
sahf
xchg
cmp
inc
push
insb
sub
in
jo
je
in
or
mov
push
jg
jno
repnz
popf
inc
loopne
cmp
xlat
or
pop
fsts
jmp
fisttps
lahf
mov
push
int
mov
je
inc
xchg
aaa
ret
push
jns
lret
mov
dec
jno
push
lahf
push
int
lds
sub
xlat
sbb
mov
aaa
mov
pop
insl
mov
jg
ret
jno
mov
inc
cmc
sub
lods
test
pop
das
test
inc
enter
pop
jmp
cmpsl
xchg
cwtl
dec
push
cld
mov
mov
cmp
int3
mov
add
jno
test
mov
sbb
adc
mov
shll
pop
hlt
adc
dec
dec
stos
stc
pushl
dec
or
rolb
insl
xorl
dec
imul
lods
jl
pop
sbb
mov
stos
mov
ret
mov
gs
out
stc
mov
add
mov
stc
xchg
dec
clc
lcall
mov
jnp
push
mov
shl
data16
cs
pop
in
xchg
xlat
xchg
cmpb
jae
dec
ret
jo
stos
js
pop
pop
add
dec
in
mov
es
push
enter
call
test
iret
sti
xor
out
mov
xchg
repz
adc
int
lahf
or
stos
mov
outsb
cmp
inc
daa
cmp
je
popl
outsl
and
or
shl
int3
dec
mov
fsubs
and
aad
or
dec
dec
pusha
mov
stos
push
inc
cltd
sbb
out
movl
sub
xlat
in
sub
adc
insl
mov
movsb
cmpsb
psubw
cmp
xor
pop
addl
mov
out
decl
push
mov
xchg
fimull
dec
test
push
jg
inc
pop
shrb
fstp
pop
sbb
movb
out
add
cmp
push
ficompl
jae
aam
jne
jg
xchg
sbb
dec
jp
fsubrl
add
jnp
stos
cmc
add
iret
lds
jge
adc
cld
and
sub
lock
xor
xchg
and
cli
insl
shrb
mov
and
or
aas
mov
inc
dec
xor
dec
xor
and
jmp
sbb
pop
gs
cmp
cmpl
stos
jmp
lcall
aad
int3
aad
and
mov
dec
mov
lods
arpl
or
jg
jmp
inc
sbb
jecxz
test
lods
loopne
pop
mov
pop
dec
pop
xchg
in
jnp
push
je
loopne,pn
sub
pop
fisubl
add
inc
mov
shl
pop
jp
in
in
addr16
fidivrs
fstps
inc
test
ss
cmp
cmpsl
pop
adc
insb
mov
ljmp
mov
pop
add
mov
test
mov
sub
rol
movsb
mov
filds
dec
cltd
sar
outsb
mov
loopne
push
xchg
fxch
aad
inc
or
and
jmp
daa
adc
cwtl
mov
data16
mov
mov
mov
jno,pn
pop
popa
jp
inc
repz
loopne
add
xchg
aam
icebp
add
mov
push
inc
mov
xchg
add
cmp
scas
in
jnp
mov
xchg
movsl
xor
gs
adc
push
in
lods
jle
shrb
data16
xor
mov
push
inc
popf
sbb
fs
cmpsb
xchg
in
cmp
mov
fdiv
inc
lock
insb
mov
fldcw
jbe
mov
xor
jns,pn
mov
add
sub
cwtl
adc
repz
jmp
inc
xchg
push
out
push
std
jle
jle
jo
mov
inc
aas
jg
es
push
cmp
jns
and
adc
or
add
ja
and
das
xor
stos
lcall
or
inc
push
mov
jp
nop
pop
loope
or
push
idivb
xor
cwtl
sub
aam
cmp
out
cmp
mov
or
psllw
imull
push
or
test
shlb
push
push
cmp
scas
sbbb
pop
test
pop
mov
test
idivb
hlt
mov
xchg
in
cmp
sbb
and
sub
notl
xchg
sub
leave
sbb
mulb
push
push
shlb
lret
addr16
mov
cmp
cmp
push
or
pop
pop
adc
mov
jmp
lea
out
leave
fistl
inc
xchg
icebp
xchg
add
xlat
adc
sbb
sbb
fidivrl
mov
sahf
jo,pt
mov
pop
sbb
scas
jns
mov
and
lods
jbe
fldenv
es
push
inc
push
and
inc
jl
test
mov
negl
insb
xchg
popa
outsl
mov
leave
xchg
push
cmc
jmp
adc
out
inc
or
negb
xchg
mov
adc
jmp
xor
sbb
xchg
xchg
cmp
cs
xor
sbb
lea
ja
or
lea
mov
and
inc
or
dec
insl
in
enter
jae
incb
mov
das
call
mov
repnz
cmpsb
shlb
ds
les
enter
jmp
movsb
pop
dec
dec
rclb
dec
push
add
out
cmp
insl
jle
cmpsl
pop
sbb
test
sbb
sbb
mov
pop
movsb
mov
daa
add
inc
and
cmp
mov
popf
xor
shll
aam
test
imul
mov
out
inc
cwtl
inc
xchg
xchg
adc
inc
mov
inc
repnz
addr16
push
loopne
rclb
ret
dec
sbb
inc
pop
or
mov
and
xchg
imull
stos
xlat
btr
or
jg
add
dec
or
mull
out
adcl
jg
stc
sti
and
lds
stos
or
negl
pop
or
inc
push
insl
imul
pushf
test
push
cld
lret
sbb
dec
jg
mov
cmp
or
daa
or
pop
jns
inc
adc
lsl
jno
cmp
sarl
mov
pushf
or
dec
xchg
inc
js
stos
sub
sbb
insl
mov
ja
rcr
sub
iret
movb
pop
outsb
push
les
ds
cmp
sbb
dec
roll
sub
rol
iret
dec
mov
shl
jmp
sub
push
cmpsb
mov
mov
stc
je
and
cmp
ss
push
fidivs
mov
repnz
call
dec
call
rcrb
lret
clc
repz
add
fisubs
push
hlt
sub
ret
and
movsb
sub
mov
sub
movsb
addr16
xchg
sbb
mov
scas
adc
not
cli
popa
int3
lea
call
and
sysret
in
pop
loop
inc
jbe
or
push
mov
addl
xor
jp
adc
leave
aad
and
test
pop
jge
lret
enter
daa
stos
fisttpl
mov
das
in
push
enter
pop
mov
mov
out
imul
pushf
add
xor
arpl
lahf
fwait
pop
dec
loop
rorb
sbb
cmpsb
test
jmp
mov
lret
adc
and
mov
mov
mov
adc
pop
les
nop
pop
and
scas
xor
popa
inc
test
cmp
mov
lcall
test
dec
mov
pop
cwtl
mov
ror
lret
pop
popa
andb
hlt
mov
icebp
rcrb
pop
xor
mov
icebp
inc
dec
mov
jae
aaa
cmp
jb
dec
mov
hlt
cs
sbb
in
dec
lods
pop
and
data16
mov
shrb
cmp
aad
pop
fildl
xor
nop
or
jns
cli
sahf
xlat
arpl
movsb
out
push
jle
pop
sbbb
or
sub
jp
cmpb
test
xchg
and
sub
dec
xor
dec
xor
push
jae
pop
inc
sbb
ljmp
mov
rorb
cli
sar
pop
iret
push
inc
call
lods
fstpt
cmp
or
pop
ret
cmp
ja
int3
or
subb
jns
test
jnp
ret
push
rcl
in
sbb
jns
push
mov
jb
jb
scas
push
add
pusha
push
pop
xorl
pusha
mov
in
adc
cmpb
cli
roll
push
pop
and
dec
cwtl
mov
adc
rcrl
and
in
mov
lds
cmc
aaa
xor
daa
pop
xchg
lods
pop
mov
inc
iret
aaa
dec
roll
out
in
insw
adc
orb
and
pop
out
adc
mov
fsubs
or
mov
aad
sbb
lahf
or
fistps
xchg
ficompl
in
das
add
push
sbb
sahf
rcrl
lahf
cli
or
push
sub
adc
push
in
pop
add
loope
imul
cld
mov
sbb
mov
xchg
out
lods
aam
sub
pop
mov
sub
shl
inc
mov
imul
jecxz
push
cld
ds
hlt
sub
pop
fs
and
mov
inc
cmpsl
dec
jo
addr16
fistps
ja
mov
cmp
rorb
lcall
fcoml
adc
sbbb
xchg
out
adc
inc
add
xchg
mov
lods
sub
or
into
lcall
jo
adc
adc
imul
push
dec
imul
cld
and
xchg
mov
pop
jp
rorb
push
pop
sub
shrb
push
int3
leave
clc
or
sbb
pop
mov
insb
subb
jmp
test
mov
test
pop
mov
push
in
push
push
rcrb
push
mov
and
fs
dec
add
ret
mov
or
gs
xor
lods
sbb
repnz
adc
pop
push
fmull
pushf
mov
xor
mov
jmp
js
pop
mov
rclb
adc
mov
outsl
mov
pop
push
dec
repnz
out
mov
lods
dec
int3
xchg
jae
lret
pop
mov
cmp
andb
repnz
aad
insl
inc
cmc
stos
mov
or
out
jnp
lds
mov
lds
xor
fldt
add
cmp
je
dec
adc
ret
fs
insb
pop
xchg
add
push
jno
ficomps
adc
adc
mov
xor
lock
daa
stos
jno
xchg
mov
clc
jae
or
out
mov
outsb
lods
mov
outsl
xchg
ljmp
dec
sbb
xor
imull
aaa
shr
mov
pop
lds
inc
arpl
repz
mov
and
push
mov
and
inc
pop
inc
roll
xor
pop
nop
cmp
mov
jge
sub
sarb
jbe
lret
cmp
les
insb
fnstenv
jge
scas
fidivrl
or
lds
mov
popa
inc
mov
cs
loope
fisttps
iret
mov
jnp
cmp
in
cwtl
and
push
fisubrs
clc
sub
sub
push
mov
rcl
lcall
jno
call
inc
pushf
inc
cli
fimuls
leave
mov
fsts
js
sub
and
xchg
mov
pop
test
stos
hlt
push
in
mov
push
push
mov
repnz
ss
dec
xchg
pusha
mov
pop
xchg
pop
xchg
sbb
jnp
xor
inc
out
inc
inc
mov
ljmp
rcll
outsl
int
mov
xlat
mov
movsl
cmp
mov
cmpsl
push
mov
sarb
loope
push
insl
test
out
jecxz
aad
sub
int3
addr16
mov
pop
jne
lock
ljmp
ss
inc
mov
repz
cwtl
test
sahf
push
mov
push
cmp
int3
jmp
inc
out
mov
push
add
xchg
xor
adc
sub
mov
cmp
daa
or
gs
test
in
in
aad
fcoml
ja
mov
int
sub
jle
in
jle
bound
cmp
jmp
loopne
test
pushf
stos
mov
ret
fimull
cld
jmp
imul
sbb
enter
mov
outsb
pop
lret
bound
fsub
lcall
fsubrl
rcl
scas
insb
aam
mov
xchg
arpl
bound
lock
jle
push
xorl
clc
sti
jnp
push
into
stos
mov
xorb
cld
dec
scas
and
push
mov
adc
scas
jmp
and
cmp
ss
or
pop
mov
pop
out
pop
stos
dec
mov
daa
lods
cld
mov
fdivrl
push
sub
out
ret
xchg
popf
add
adc
xchg
jp
rcll
inc
xchg
call
pop
into
inc
insb
lods
call
pop
dec
mov
out
int3
push
mov
mov
ljmp
fcmovbe
lahf
rclb
nop
lret
andl
lahf
hlt
mov
sbb
lods
inc
popf
and
in
jp
sbb
push
and
faddl
adc
mov
cs
mov
cmp
outsl
inc
shll
popa
hlt
bound
add
ds
xchg
pushf
insl
xchg
fdivrs
mov
sbb
cs
imul
insl
push
cli
xor
dec
mov
mov
lds
lret
cmp
ss
sbb
sbb
in
mov
cmp
into
push
sub
in
mov
push
pop
test
andl
mov
push
cmp
mov
dec
stos
pushf
insl
jae
mov
cwtl
or
inc
and
fs
mov
in
movsl
cmp
push
pushf
inc
cmp
sti
enter
andl
les
cltd
cs
or
movsl
mov
adc
sti
sbb
pushf
inc
jno
or
in
jae
pop
out
xor
cmp
sub
lods
mov
iret
outsb
xor
xchg
mov
icebp
sbb
mov
mov
and
shrb
or
jecxz
dec
rol
nop
pop
mov
push
push
mov
cwtl
mov
xor
fnstcw
adc
insb
in
xor
mov
insl
movsb
mov
gs
mov
clc
xchg
sbbl
xchg
jl
push
aaa
add
inc
pushf
out
call
xchg
mov
mov
in
les
retw
ss
push
xor
push
dec
add
mov
test
les
jl
lret
into
sbb
aaa
mov
rcl
or
lahf
ss
test
lods
dec
inc
pusha
add
mov
popa
ret
mov
push
sbb
mov
shll
nop
pushw
fcoms
mov
repnz
cld
dec
aaa
dec
daa
cmp
mov
cld
add
daa
xchg
mov
aad
imulb
test
mov
in
ret
sub
fs
and
xchg
inc
jl
jne
mov
loop
test
push
pop
jp
das
stc
test
push
xor
mov
out
je
sub
lods
rclb
xchg
cmp
das
scas
mov
fs
pop
push
daa
sbb
or
xchg
xor
inc
pusha
popa
orl
pop
shr
and
insl
inc
cmpsb
sub
repz
mov
or
ffree
adcb
xchg
pop
pop
fstpt
outsl
rorb
repnz
jns
imul
pop
insb
scas
mov
lock
scas
xchg
mov
or
add
push
cmp
std
les
rorb
popf
pop
hlt
mov
cmpsb
mov
sbb
enter
xor
sbb
in
pop
cltd
pop
mov
sbb
in
fistps
jecxz
jge
mov
movsb
in
mov
jb
add
inc
jae
pop
aas
inc
in
fwait
out
cmp
aaa
xchg
add
clc
pop
jb
movsl
es
negl
sbb
sub
hlt
enter
mov
mov
orb
adc
mov
ljmp
addl
push
xlat
mov
mov
loope
imul
pushf
cld
mov
cltd
cmp
cli
data16
pop
jge
jae
push
xor
push
das
pop
add
cmp
sbb
ja
sub
cltd
mov
cs
cwtl
insb
or
xor
mov
cld
mov
push
pop
cmpsb
fwait
aad
call
inc
push
xor
jo
xchg
gs
lods
push
leave
icebp
add
mov
ret
out
add
test
dec
cmpsb
mov
dec
aaa
popf
les
jmp
lock
dec
nop
loopne
or
inc
sub
pop
mov
jns
adc
xchg
dec
ss
popa
xchg
ljmp
mov
divb
mov
and
jns
jne
mov
mov
int
sbb
jecxz
cmp
mov
bound
jae
xchg
mov
int3
xor
mov
cmp
aad
imul
and
xchg
hlt
add
xchg
or
jl
jbe
dec
lock
das
mov
inc
mov
leave
xchg
xchg
dec
pop
dec
mov
stos
test
movsb
ja
mov
shrl
cmp
cmpsl
mov
std
pusha
nop
fxch
stos
add
jg
insb
push
cli
int3
mov
pop
mov
mov
push
mov
shll
imul
xlat
fnstcw
or
cmpsb
mov
jo
les
iret
inc
xlat
lods
pop
sub
addb
pop
pand
iret
daa
scas
push
or
xchg
push
sbb
test
ss
aam
xor
pop
popf
mov
xlat
jecxz
in
pop
mov
sbb
xchg
mov
andl
lock
iret
dec
xor
push
std
lock
sbb
stc
jmp
sarl
out
pop
sbb
fdivrs
mov
mov
inc
mov
inc
mov
inc
aad
mov
and
inc
or
je
int3
cli
xor
and
and
sbb
lds
or
xchg
int3
scas
popa
std
lods
call
push
mov
mov
xor
mov
inc
cmc
dec
ror
mov
in
mov
xchg
fwait
fs
js
cld
sbb
andl
andb
es
add
pop
xchg
and
aam
fisubl
push
hlt
test
out
iret
movsl
adc
add
jb
mov
cmp
into
mov
dec
add
call
shrl
fwait
cwtl
popa
mov
mov
cmc
or
fcomip
adc
mull
push
mov
jle
clc
enter
xor
into
loop
mov
rorb
ja
gs
xorl
fisubs
stc
in
roll
and
mov
sbb
sub
outsb
shrb
mov
jp
sbb
call
mov
and
pusha
addr16
sub
data16
or
xchg
lods
sbb
jle
into
mov
mov
inc
dec
or
sub
lcall
xorl
xchg
jb
cmpsl
and
jl
add
cmpsl
mov
rol
or
mov
in
rorb
mov
repz
nop
int3
cmp
mov
jno
push
out
or
xchg
sbb
fs
scas
xor
fwait
rcrb
sbb
test
stc
bound
sub
push
adc
shlb
icebp
daa
clc
mov
xor
and
sub
imul
mulb
icebp
pop
jns
sub
movsb
dec
push
cmp
or
sub
mov
dec
in
leave
cmc
pop
mov
pushf
cmp
inc
imul
add
sahf
lea
inc
leave
stc
sbb
fld
js
js
jl
dec
xchg
lahf
mov
mov
jbe
das
repz
cmp
fidivrl
lahf
jge
inc
cs
mov
ficompl
test
cltd
dec
jno
jmp
mov
insl
mov
fwait
test
in
sub
lock
inc
xchg
loope
or
add
movb
dec
popf
sti
mov
dec
inc
int
and
and
inc
ja
in
cmpl
ljmp
mov
decl
fimull
pop
cmp
aam
adc
xchg
mov
fnstsw
repz
fnstcw
push
jle
into
test
cli
xor
jge
clc
or
std
pop
lea
push
test
add
mov
dec
aad
rorl
push
pop
push
mov
fcmovne
jge
es
rol
pusha
xlat
mov
clc
subb
nop
fildl
sbb
sbb
cmc
fwait
adcb
and
mov
outsl
aam
or
lods
lods
arpl
xor
cmp
mov
lahf
push
fldl
cmp
mov
jg
adc
push
push
jge
dec
subl
add
lahf
mov
inc
pop
addr16
push
add
leave
xor
pop
ds
cmp
dec
or
sub
xor
adc
icebp
test
xor
mov
stos
fildll
push
mov
add
and
scas
in
sub
cmp
aad
icebp
inc
or
movsl
fwait
add
int3
add
inc
aad
lret
mov
push
stos
xor
mov
fcmovnu
popa
ss
or
xchg
mov
mov
repz
jbe
shll
xor
das
testb
sub
test
or
or
mov
mov
in
and
adc
stos
xor
imul
in
fisubrs
mov
push
mov
or
sbb
dec
mov
lahf
dec
insl
fwait
imull
mov
stos
scas
mov
or
jb
sbb
xchg
mov
out
in
test
jne
or
add
sub
inc
mov
or
cld
in
xchg
cmpsb
cld
lcall
icebp
imul
imul
iret
fcomp
cmc
shl
add
mov
aas
cltd
lret
mov
ljmp
imul
push
push
gs
xor
out
lea
add
scas
std
add
fisubl
stc
xchg
rorl
sub
test
mov
mov
stc
push
sub
mov
stos
ret
inc
mov
dec
pop
icebp
in
pop
std
push
pop
add
lahf
loope
inc
xchg
cmp
ret
push
jmp
pushf
add
inc
or
mov
xchg
iret
mov
xchg
lds
push
sub
and
lds
jecxz
lock
and
cld
jge
cmpsb
sub
mov
pop
pop
pop
jecxz
or
ja
dec
xor
int
or
mov
sahf
sbb
xchg
gs
sub
cld
out
jecxz
or
dec
push
insl
dec
sbb
mov
cmc
inc
inc
adc
cmp
cwtl
and
cmp
push
in
repz
sub
cmp
mov
push
add
or
inc
test
xchg
test
fs
mov
jg
jb
or
lahf
xor
jae
and
and
stos
pusha
mov
mov
add
ljmp
outsl
rolb
cli
and
popf
sbb
rcrl
pop
fwait
sub
nop
and
add
in
adc
in
or
cld
pop
cld
xlat
lods
inc
add
data16
lret
sub
insl
inc
incl
je
mov
jne
or
out
bound
mov
xchg
fcoml
mov
out
adc
fwait
inc
mov
in
pop
inc
dec
adc
insl
cli
adc
jns
repnz
jge
add
push
cmovbe
inc
mov
push
xor
mov
mov
orb
mov
mov
cmp
in
rolb
out
addr16
loop
or
mov
cwtl
lea
lock
mov
jno
cmc
or
pop
xchg
hlt
mov
cld
sahf
in
ljmp
inc
mov
das
les
jl
lcall
lds
cmpb
or
nop
mov
imul
dec
popl
movsl
or
outsl
subb
arpl
into
add
fbld
jge
dec
les
mov
jge
test
xor
mov
call
or
cmp
les
neg
ja
outsb
mov
daa
xor
cmp
adc
jae
xor
jecxz
fbstp
push
je
out
add
cmc
and
jne
outsl
insb
in
leave
fdivrp
inc
jmp
loop
js
and
xchg
xchg
push
dec
sti
out
push
cmc
xchg
or
mov
jns
outsl
xchg
push
xorb
mov
popf
fsubrs
nop
imul
out
out
rorb
je
imull
push
mov
int3
repz
mov
nop
movsl
enter
xchg
ds
call
and
push
mov
xor
cld
popa
mov
mov
hlt
mov
rcr
dec
hlt
rcrb
arpl
push
push
adc
ret
mov
xchg
xchg
test
xchg
fdivr
pusha
fsubl
cs
std
mov
shll
or
and
xor
push
pop
mov
jne
fbstp
or
adc
pusha
iret
ret
pop
div
lock
scas
dec
xor
inc
je
subl
push
xor
movsb
cwtl
lock
into
dec
jbe
pop
cmp
jnp
xor
push
mov
jle
testl
jl
in
push
sub
cmp
stc
mov
js
mov
test
xor
enter
push
push
mov
mov
dec
jo
inc
mov
mov
popf
push
fsubs
and
cmp
or
jnp
xor
fdivrs
jmp
push
mov
repz
loope
and
push
or
inc
inc
in
sbb
mov
mov
aas
icebp
aad
or
data16
sti
push
mov
ficoml
mov
add
std
ljmp
jle
or
lahf
mov
dec
mov
pop
inc
shr
xor
jl
mov
mov
es
aaa
fyl2xp1
repz
data16
sarl
add
dec
jbe
jecxz
xor
iret
gs
dec
mov
push
push
push
rep
adc
push
cwtl
cmpsb
aam
cmpsl
mov
in
call
pop
ret
repnz
orb
xchg
jle
test
and
sub
mov
mov
xchg
roll
into
xchg
int
push
aad
pop
addr16
mov
push
shrl
mov
sbb
popf
sub
inc
lock
aaa
push
inc
sbb
jl
fistl
xchg
pop
outsb
inc
fmul
imul
movsl
in
test
jg
mov
hlt
iret
xor
xlat
mov
negl
les
call
or
xor
cltd
inc
dec
sbb
popa
out
adc
andl
add
push
cmp
dec
test
int3
aad
sub
mov
enter
ss
rcr
ljmp
pop
push
out
sbb
mov
add
jo
repnz
sbb
pusha
shll
rorb
push
popa
jecxz
hlt
call
mov
frndint
js,pt
aas
push
jns
popf
adc
pushf
lahf
mov
sub
push
mov
adc
jo
int3
ljmp
xor
test
lods
push
sub
dec
aam
in
cld
mov
ljmp
mov
dec
rorl
push
lea
mov
cmp
dec
push
push
fs
ja
divb
xchg
mov
push
mov
and
mov
rolb
adc
and
jae
rolb
pop
insl
push
gs
fcompl
rol
add
lea
ret
or
add
aad
stos
int3
pop
fldt
add
push
test
fstpt
call
icebp
lods
or
fcom
mov
mov
fadd
push
mov
push
lret
fyl2xp1
popa
fldenv
inc
inc
mov
icebp
dec
and
test
lea
cmp
push
dec
test
adc
arpl
fadds
mov
sub
cli
push
rorl
inc
mov
jns
in
inc
jae
mov
xchg
sbb
add
mov
mov
sub
aad
dec
push
push
rcll
icebp
aas
sahf
pop
inc
lcall
cmpb
call
jg
loopew
cmc
ss
fistpll
cltd
je
repnz
dec
ret
inc
sti
sbb
data16
fadd
cmp
mov
inc
int
push
add
dec
jmp
cmp
and
and
and
jmp
push
dec
jle
in
data16
dec
xor
icebp
insl
jle
xor
clc
lock
pop
mov
push
sti
add
in
dec
and
jno
mov
add
push
cmpsl
add
xor
push
pop
sub
mov
mov
mov
pushf
lds
repnz
inc
xor
movsb
lahf
je
xorl
ss
mov
push
andb
inc
mov
mov
jmp
mov
fbstp
push
shl
shlb
fsub
push
add
mov
cltd
adc
or
scas
fadd
cld
aam
or
push
lret
and
outsb
add
fildll
pop
or
xchg
mov
sub
shll
negl
mov
inc
inc
sbb
pop
in
js
sbb
lret
scas
xchg
xchg
mov
push
decb
adc
adc
push
or
rcrb
iret
outsl
lods
jnp
cmp
adc
xchg
insb
add
push
xchg
inc
repnz
jle
inc
negl
mov
pushf
sbb
popf
cld
fadds
add
add
in
adc
inc
add
and
push
sti
movsb
xchg
adc
in
mov
mov
mov
pop
test
pop
push
out
cmpsb
push
mov
xchg
cld
add
outsb
cmp
decl
pop
addl
test
xchg
mov
mov
aam
lret
in
repnz
loopne
add
push
pop
mov
enter
xchg
call
inc
pop
pop
fidivrs
int
shrl
add
mul
enter
mov
popf
xchg
inc
into
cmpl
es
dec
dec
xchg
sub
rorl
jg
lahf
mov
std
test
insl
push
and
inc
pop
sar
les
sbb
sbb
push
movsl
jae
or
lock
jg
mov
pop
jp
xor
rcl
inc
stc
data16
and
jg
aaa
je
or
andb
mov
imul
imul
mov
inc
adc
cmp
mov
shrb
cmp
mov
jbe
push
xchg
cmp
xchg
imul
out
repnz
mov
push
cmpsl
push
ss
mov
push
inc
je
xor
dec
out
lcall
stos
jg
inc
pusha
xor
jg
mov
in
aas
stos
int3
pop
pop
lea
push
and
adc
add
scas
aaa
nop
out
stos
fists
add
pusha
out
mov
outsb
inc
jg
leave
mov
je
dec
jbe
pop
int
pop
divb
lea
lcall
push
pop
out
loope
lahf
idiv
xchg
imul
sbb
fiaddl
sbb
aaa
xor
pop
fwait
sub
cmp
cmp
jle
xchg
ss
cmpsb
lahf
loopne
fistpl
ret
fadds
lds
xor
stos
fstps
xchg
ss
int
out
sarl
bound
fistl
int3
and
jl
mov
inc
lods
adc
adc
push
mov
push
mov
dec
sbb
repnz
mov
add
insb
xchg
adc
pop
and
pop
mov
mov
enter
pop
fcoml
mov
fs
pop
loope
xor
push
pop
movsl
sub
and
rcl
outsl
leave
mov
imul
inc
xchg
push
into
addb
testb
push
mov
cltd
add
mov
stos
insb
add
sti
js
pop
hlt
decl
ret
xchg
repz
xchg
adc
mov
mov
cmc
test
jb
cmp
adc
rcrb
movsb
adc
xor
adc
jo
xchg
xor
or
cmp
sub
popf
pop
push
adc
faddl
les
scas
lock
xchg
push
mov
test
pop
shlb
xlat
sahf
jmp
jnp
test
cmp
stos
inc
lahf
int3
jo
nop
aad
je
mov
adc
inc
fcmove
aaa
push
xchg
out
cmp
or
cld
andl
dec
push
push
test
out
jno
push
pop
loop
jg
push
test
inc
push
pop
adcb
movsl
icebp
jnp
gs
minps
pop
mov
test
push
mov
and
xchg
fidivrs
mov
aaa
out
xchg
xchg
ss
adcl
fcompl
push
inc
add
or
jno
or
ja
mov
ds
push
xor
xorl
hlt
in
cltd
add
adc
mov
gs
inc
js
les
mov
faddp
xchg
dec
xchg
ret
add
push
test
movsb
cltd
lock
add
out
or
cmc
adc
cltd
mov
cmpsl
ljmp
test
sbb
lcall
les
call
repnz
or
pop
seta
push
scas
add
jns
addr16
hlt
int
loop
and
mov
mov
cmp
fcoml
xchg
fldenv
sub
pop
das
or
jecxz
into
and
ljmp
ds
jle
xor
bound
out
pop
test
ret
das
mov
dec
sbb
adc
and
cmp
inc
addr16
mov
int
repz
push
inc
mov
into
sub
cmpsb
xchg
inc
xor
leave
dec
stc
jle
cmpsl
test
lcall
ja
and
adc
pop
adc
dec
call
xor
add
outsl
jmp
push
xchg
cmpsb
andb
inc
mov
insl
mov
mov
pop
adc
mov
inc
push
sbbb
mov
imul
popa
test
xchg
sbb
ret
xchg
mov
cmp
loopne
add
mov
out
dec
or
aaa
outsb
cld
mov
sub
test
mov
notl
dec
maxps
cs
mov
cs
push
popa
xchg
push
inc
dec
and
xorb
jmp
adc
push
stos
sub
stc
pop
cld
mov
xor
imul
sbb
add
sbb
repnz
cs
hlt
jno
dec
xor
jmp
test
push
aaa
xor
cmp
lea
jno
loop
push
sbb
mov
sub
arpl
push
fs
add
mov
cmpsl
xchg
mov
loop
daa
addr16
xchg
out
sti
in
lods
jne
mov
out
pop
xor
pop
ljmp
andb
sti
cmp
cltd
adc
dec
std
or
rol
cmp
xchg
pop
aas
dec
push
or
pop
addb
data16
fwait
sbb
dec
rorl
stos
and
cmpsb
xor
sbb
adc
pushf
or
adc
jecxz
xor
aaa
mov
rcll
inc
push
push
arpl
mov
xor
out
rcll
inc
rcr
insl
xchg
mul
cli
xchg
cmpsl
mov
sbb
lock
cwtl
push
inc
call
and
loopne
ja
lcall
ja,pt
adc
cli
xchg
or
jb
inc
sbb
xchg
push
ret
mov
jnp
int3
loopne
lret
xor
fwait
add
movsb
mov
cltd
jnp
inc
fsts
add
push
and
jo
add
data16
jo
add
xor
flds
in
div
xor
leave
filds
imul
fcompl
rorb
loop
out
enter
lods
jecxz
dec
sub
stos
lods
xchg
cwtl
rcrb
cmpsl
jge
pop
xchg
pop
inc
mov
pop
mov
jne
pop
pusha
ss
dec
jnp
mov
or
lods
pushw
outsb
in
pop
stos
cmp
sahf
cmp
jo
das
faddp
sbb
cmp
aaa
popf
xor
pop
and
fs
xor
lahf
mulb
adc
push
dec
fisubs
inc
jo
cmp
pop
or
imul
fdivl
jecxz
lahf
aam
loopne
mov
int
inc
and
mov
ds
jno
cmpsb
cmc
jl
mov
mov
cld
add
rcrb
sbb
sub
rcl
int
and
jp
std
loope
mov
or
in
mov
sub
ret
ret
cltd
cs
movsl
xchg
loop
sbb
add
lcall
imull
push
push
push
stos
push
sti
mov
xchg
test
and
or
fiadds
jl
mov
pop
xor
aaa
adc
xor
dec
inc
stc
bound
hlt
mov
push
dec
cmp
pop
cmp
fxch
nop
cli
fcomps
xlat
sti
push
mov
nop
dec
push
add
cltd
or
clc
or
aam
ljmp
mov
and
dec
lret
or
movsb
pop
test
mov
xchg
inc
cmc
sbb
in
pop
je
mov
out
push
rcrl
shlb
xchg
pcmpeqw
jecxz
dec
ret
cmpsl
jge
mov
xchg
jno
mov
inc
jp
jae
insb
cwtl
dec
movsl
fdivr
xor
or
push
inc
lea
cmpsl
je
ret
popf
pop
les
add
cwtl
insl
clc
xor
cmp
pop
test
lret
flds
jp
xor
pop
repnz
jmp
push
adc
addl
cmp
mov
and
jnp
js
stc
or
xchg
jno
scas
movl
add
push
aad
cmpsl
aad
sub
data16
testb
lret
xchg
repnz
les
mov
in
cwtl
ret
inc
adc
xor
xor
sub
movsb
mov
fbstp
mov
mov
daa
stos
loop
leave
fldenv
xchg
and
popf
lods
xor
mov
jg
fcom
add
mov
mov
push
mov
xor
insl
cmpsl
mov
je
aam
push
xor
inc
ss
xchg
dec
in
das
push
adc
in
xor
xchg
stc
inc
xchg
test
fsubr
out
add
cmp
fadd
pop
inc
aaa
fisttpl
dec
dec
push
or
xlat
mov
jmp
xchg
push
addr16
in
add
rcll
adc
mov
ja
shrl
adc
push
cld
xorl
mov
sub
outsl
xor
testl
fdivrl
jnp
out
or
and
repnz
mov
xchg
adc
pop
sbb
icebp
pop
test
cwtl
xor
test
icebp
jbe
insb
in
inc
inc
sub
lds
adc
xchg
aaa
aad
push
aas
fisubrs
mov
test
fstpt
sub
repnz
aas
out
imul
xchg
mov
pop
loopne
fistl
and
push
divb
je
mov
pop
rclb
jno
push
or
aad
iret
roll
fidivl
rorl
movsl
fldenv
and
xchg
dec
rclb
fst
jae
cwtl
sbb
clc
in
add
pop
jne
popa
enter
hlt
mov
sub
daa
push
jl
cmp
aam
push
xlat
test
cmp
push
add
push
lahf
sbb
jne
mov
and
icebp
cmp
add
cli
aam
sub
daa
shl
scas
xor
jns
loopne
and
pop
pop
mov
dec
loopne
vandps
jl
jl
add
cld
mov
and
pushw
cmp
sub
imul
add
and
into
filds
push
popa
mov
enter
pop
add
xor
data16
clc
shll
xor
in
in
js
dec
popa
test
xchg
or
ljmp
dec
mov
bound
dec
imul
jbe
call
cltd
sbbl
sub
or
lock
pop
ja
pop
hlt
xchg
lock
fcompl
lds
cwtl
daa
hlt
mov
mov
sub
sub
repnz
imul
jmp
jp
lods
push
mov
hlt
cs
ret
enter
ljmp
insl
cmc
cmp
dec
cwtl
xchg
mov
pop
sbb
xor
mov
repz
pop
daa
movsl
test
ficomps
push
and
arpl
pop
fs
cmpb
mov
pop
stc
and
fnstcw
mov
mov
andl
mov
movsl
dec
scas
dec
inc
pushf
int
cmp
loop
xlat
lcall
nop
in
movsb
stc
aaa
hlt
jmp
sub
inc
stc
or
jns
cmp
xlat
icebp
adcb
mov
xchg
out
jge
test
inc
adc
jge
xor
loope
ljmp
add
mov
sub
inc
cmp
clc
icebp
mov
or
add
decb
mov
mov
test
mov
mov
fdiv
jmp
and
jmp
ja
jg
pop
or
in
cwtl
das
call
pop
loopne
shlb
jb
sahf
andl
cmp
loop
bound
xchg
test
push
roll
jno
icebp
or
ljmp
in
int3
mov
cmp
cmp
xorb
scas
cmpsb
push
inc
outsl
xorb
dec
std
and
jecxz
xor
push
sarb
cmp
add
xchg
sub
shll
clc
cmpsb
xchg
inc
je
jl
out
add
mov
loopne
mov
and
ljmp
lds
sbb
jg
mov
out
cmp
mov
pop
sti
std
in
test
inc
rclb
or
pop
push
mov
adc
xchg
push
xchg
mov
cmpsb
mov
lea
and
pop
inc
push
rcr
push
into
jbe
aas
xchg
jecxz
push
mov
jo
sub
cmp
shrb
jo
lods
push
mov
ret
xchg
pop
dec
jo
pop
mov
movsb
stos
add
gs
out
xor
rcrl
ljmp
arpl
xor
jbe
pop
adc
xor
bound
xor
xorl
pop
shlb
pushf
adc
cli
xchg
insl
push
sub
mov
rsqrtps
xlat
jg
sbb
fdivrl
int
pop
icebp
or
mov
mov
aam
call
std
mov
lahf
add
or
xor
sti
data16
inc
lea
lcall
les
or
or
test
xchg
sub
test
inc
cmpsl
mov
cmpsl
pop
fucomp
adc
push
sbb
rcrl
lahf
jge
inc
mov
xor
sub
hlt
cmp
jae
mov
dec
xchg
jae
fbstp
xchg
mov
xchg
popf
repnz
jns
setne
pop
dec
mov
nop
add
dec
ds
fdivr
sti
rclb
movsl
mov
jle
leave
adc
inc
xor
mov
lahf
hlt
mov
mov
pop
or
dec
sub
push
cld
mov
xchg
out
jp
jle
std
xor
insl
rolb
loope
aad
adcl
in
dec
sbb
pop
insb
pop
int3
pushf
ljmp
jnp
fdivrp
cmp
stc
enter
fdivs
cmpsb
xor
ljmp
inc
test
dec
or
pop
fildll
nop
dec
popf
sbb
lahf
dec
sbb
xorl
and
or
mov
daa
cmpsl
stc
mov
jecxz,pn
lods
mov
mov
fidivl
xlat
loop
stos
lods
or
xchg
jbe
jnp
lock
mov
push
call
repnz
pop
cmp
and
clc
pop
ret
and
sub
pop
mov
mov
insb
popa
mov
stos
addr16
daa
jmp
hlt
sarb
in
negl
cmp
mov
addr16
xchg
sub
cmpsl
and
aad
inc
cmp
mov
sub
jecxz
mov
and
in
xchg
scas
cmp
mov
mov
repnz
repz
in
imul
nop
mov
stos
bound
dec
pushf
or
xchg
in
stc
mov
xor
fisttpll
out
loope
inc
and
jnp
pop
inc
out
xchg
fidivs
dec
dec
pushf
das
inc
mov
icebp
jge
out
pop
xchg
or
sbb
dec
fidivl
mov
sub
in
push
add
xchg
sbb
jb
cli
scas
add
xchg
into
lea
pop
mov
dec
pop
and
cltd
adcl
popa
inc
xchg
lret
insl
cmp
push
dec
lock
jno
and
fldt
sti
pusha
iret
fwait
orl
push
insl
cmpsb
fs
sub
mov
cld
aas
roll
push
sub
jmp
enter
dec
xlat
fldt
dec
addr16
out
xchg
in
mov
sets
cmovs
iret
add
inc
push
sbb
cmp
xor
add
cmp
int3
cli
ds
cmp
pop
lret
pop
adcl
sub
aaa
adc
mov
or
inc
mov
lea
mov
lret
imulb
xchg
jno
dec
mov
das
or
cmp
in
lret
push
imul
jbe
nop
xchg
xor
lea
pop
fnstsw
cmp
loop
mov
dec
popa
jecxz
cli
pop
data16
js
push
imul
loope
scas
mov
jbe
lret
and
popa
push
nop
cmc
into
mov
push
sbb
xchg
cld
loope
movsb
cwtl
arpl
mov
out
hlt
daa
out
sbb
jmp
dec
insb
adc
aaa
adc
es
rcl
inc
and
cmp
loop
out
das
mov
inc
das
push
cld
leave
dec
mov
hlt
int
sub
into
adc
loopew
stos
lret
and
lea
data16
arpl
jbe
clc
aad
mov
in
dec
jnp
or
insb
mov
rcrl
adc
lahf
jns
ret
popf
test
std
adc
inc
mov
sbb
sub
dec
xchg
popf
mov
push
pop
xchg
add
cmp
push
shrb
jge
je
add
ret
sbb
push
sub
int3
mov
inc
and
xchg
lock
iretw
pop
adc
jge
xchg
add
lret
and
add
dec
ret
dec
imul
ss
test
inc
mov
pop
push
mov
dec
mov
faddl
loope
divb
xor
pushf
daa
popa
scas
add
inc
inc
lretw
orl
jbe
leave
pop
idivl
xchg
cmp
outsl
mov
jbe
xor
or
ds
stos
xor
push
jb
mov
jno
lods
push
add
mov
js
add
add
ds
movsl
mov
inc
mov
adc
in
jmp
inc
mov
movsb
fsubp
mov
test
shl
mulb
jl
or
jl
movsl
jbe
orb
and
add
xor
add
jns
stos
movsb
gs
inc
dec
adc
dec
fdivl
int
gs
sub
and
cltd
cmc
dec
jbe
inc
movsl
iret
gs
mov
jbe
shr
insl
std
mov
fwait
add
sbb
push
jmp
cld
mov
xchg
push
dec
and
bnd
xchg
iret
in
jns
pop
sub
fnstcw
lret
sub
and
mov
bound
push
dec
lcall
mov
fistps
rol
cmc
mov
adc
mov
add
mov
ficoml
sbb
lret
roll
inc
data16
movl
xchg
mov
sbb
mov
cmpsl
push
hlt
fs
jb
mov
cmp
and
xchg
mov
enter
loop
clc
pop
cmp
cmp
push
mov
push
jmp
xor
bnd
loopne
lods
mov
fstpl
sbb
lahf
push
fxch
mov
or
out
push
dec
fldt
sahf
xchg
cwtl
or
inc
iret
dec
mov
lahf
and
scas
mov
test
repnz
pop
mov
gs
pop
dec
ja
imul
xchg
mov
pop
push
test
pop
test
dec
outsb
cmp
imul
jae
pop
push
push
clc
hlt
lcall
sti
popf
sbb
and
sbb
ss
aam
add
adc
jp
pop
fwait
cmpsb
sub
dec
popa
fistpll
xor
jo
aas
das
adc
jmp
pop
jae
xor
jno
push
ljmp
sahf
jg
mov
adc
mov
push
sub
push
cmp
mov
push
push
push
xor
jns
add
fldcw
push
jb
cld
outsl
mov
jno
dec
test
icebp
xchg
inc
std
sub
sti
mov
dec
sbb
out
push
dec
or
and
sub
sbb
sti
stos
mov
int
inc
or
mov
mov
or
mov
pop
jecxz
add
les
mov
add
or
sub
in
mov
adcb
ss
iret
add
mov
fildll
addr16
mov
pop
aas
inc
jnp
or
or
sub
cmp
jecxz
or
in
xchg
xor
sub
stos
jo
sub
in
cli
rcll
mov
aaa
adc
enter
mov
mov
fst
pop
push
mov
dec
popa
cmp
inc
xchg
pop
lods
pop
jne
jnp
cwtl
fwait
add
loope
push
jmp
inc
and
dec
adc
xlat
ja
mov
sahf
push
dec
mov
adcb
sti
fldt
xor
push
sbb
pop
adc
mov
hlt
push
adc
mov
add
adc
in
mov
inc
jmp
mov
mov
ret
xchg
test
xor
ret
fiaddl
je
daa
xchg
mov
or
fidivrs
mov
aas
xlat
add
sub
mov
or
repz
jl
mov
cmp
adc
test
rorl
fiaddl
push
jmp
pop
and
cli
test
sub
fcmovnu
xlat
pushf
mov
sti
dec
xchg
cld
inc
das
ss
lods
jmp
incb
fs
jg
rcll
cltd
test
mov
sbb
mov
pop
jmp
inc
push
cli
cltd
sbb
repz
cmp
sbb
mov
sti
test
sub
pusha
sub
orb
mov
xchg
in
or
xchg
pop
push
fs
loope
xchg
mov
roll
mov
lods
jecxz
mov
mov
dec
into
dec
push
rorl
push
mov
cmp
push
xor
dec
pop
sti
mov
loopne
xchg
mov
mov
add
push
ret
mov
pop
in
inc
adc
mov
inc
subb
cmp
jmp
lret
mov
lea
mov
cltd
jns
pop
xchg
adc
pop
sbb
and
shlb
pop
pop
mov
jmp
out
inc
hlt
int3
inc
inc
bound
push
lahf
cmp
pop
arpl
xchg
mov
inc
mov
sarb
adc
xchg
push
fsubl
fstpl
scas
sub
sti
xchg
pop
mov
dec
int
mov
cld
shll
push
repnz
add
mov
cmpsb
cmpsl
data16
xchg
xchg
sub
jmp
pop
into
inc
loope
dec
jecxz
call
fmulp
aaa
cltd
idivl
mov
xchg
add
inc
cmp
popf
ljmp
inc
push
fsts
stc
jg
imul
int
in
or
mov
je
mov
inc
cmpsb
push
bound
inc
mov
sub
lcall
sub
icebp
mov
rorl
jnp
negl
aas
ds
mov
adcl
addb
nop
dec
lret
or
in
scas
adc
xchg
pop
cmc
pop
push
popf
inc
icebp
cmp
cmp
ss
xchg
inc
cmp
mov
ret
aam
iret
dec
std
jecxz
std
xchg
push
mov
inc
sbb
mov
sbb
and
jb
daa
das
lds
jns
xchg
out
adc
icebp
sahf
mov
push
stc
xor
inc
cmp
add
and
inc
arpl
into
dec
cmpsb
mov
xor
sub
cmc
in
or
fidivs
decb
into
les
inc
or
dec
cld
ret
shr
addr16
test
sub
pop
int3
adc
out
imul
xchg
icebp
pusha
mov
mov
push
aaa
in
addr16
pushf
dec
adcl
fsub
pop
and
jno
fsubl
mov
inc
in
and
dec
jnp
or
mov
clc
mov
fmuls
stos
hlt
xchg
scas
addr16
mov
jnp
lret
sti
or
adc
inc
pop
xchg
movups
dec
or
ss
les
lret
mov
xchg
mov
xor
or
in
xchg
dec
mov
mov
sub
mov
xorb
xchg
mov
fs
add
outsb
mov
cltd
ds
lds
mov
mov
or
xchg
and
stos
jne
cmp
sub
pop
mov
sub
das
lods
ja
enter
jns
fidivl
inc
pop
and
int3
xchg
enter
sbb
das
xor
lods
int3
arpl
xchg
js
push
sbb
mov
testl
out
sahf
xchg
incl
push
add
out
lret
pushf
xchg
sub
mov
lock
cmp
mov
inc
push
or
neg
xlat
call
pop
call
pop
dec
mov
push
cmp
cmp
insl
pop
call
dec
mov
push
clc
aas
cltd
fisttps
push
sbb
jmp
and
xor
inc
aas
es
ficompl
sub
inc
addl
inc
cmp
or
pop
ret
aam
fildl
std
sub
jno
fcomps
insb
cmp
mov
jecxz
fistpll
sub
pop
cmpb
mov
or
sbb
insb
push
jb
stos
cwtl
mov
js
orb
mov
lods
js
jbe
enter
dec
adc
sbb
addr16
xor
cmpsl
cmp
jl
cmp
mov
push
mov
aam
mov
add
push
cmpsb
dec
jns
mov
outsb
or
lock
cmp
jb
aaa
or
push
or
jbe
mov
cmp
fcmovne
cmc
movsb
mov
scas
mov
mov
rol
push
and
fimull
fbstp
adc
mov
es
pop
movsl
shlb
popf
js
pop
inc
iret
gs
int
add
mov
testb
sti
into
insb
inc
rorl
xchg
cmp
mov
dec
jp
mov
inc
sub
icebp
das
stc
int
jg
or
lods
pop
fcompl
loope
mov
addl
cltd
adc
and
subl
pop
or
loop
out
mov
mov
mov
add
push
sbb
loopne
mov
das
icebp
std
xchg
inc
push
stos
mov
in
adc
dec
cltd
arpl
xchg
mov
and
cmc
mov
jmp
outsl
mov
outsb
pop
out
push
inc
cmp
pop
je
pop
pop
imull
leave
xchg
in
fstl
mov
sar
add
mov
mov
or
popf
aaa
out
push
mov
dec
fdiv
push
dec
dec
sahf
push
adc
mov
and
xor
in
imul
mov
mov
popa
dec
pop
push
pop
js
pop
in
lahf
gs
pop
xlat
fdivr
movsl
repz
ret
loopne
fs
cmp
ret
nop
fidivrs
stos
pop
loope
cld
pop
daa
outsb
cmc
jmp
inc
pushf
aaa
neg
push
pop
outsb
push
mov
ret
test
popa
sarl
or
enter
popf
ds
xchg
mov
enter
dec
mov
adc
push
or
mov
mov
jb
lea
daa
clc
sbb
adc
ret
loopne
mov
xor
dec
cmp
ror
sbbb
push
or
mov
pop
pop
popa
add
stc
push
xor
mov
stc
pop
fwait
cmp
hlt
fmull
xchg
cmp
xor
mov
fisubrs
sbb
roll
and
insl
cmp
test
lea
cli
rorb
jb
xchg
rorb
jge
push
stos
xor
mov
pop
cmp
xor
jg
outsl
push
clc
jae
stos
or
orb
nop
mov
xchg
jl
stos
xor
cs
orb
mov
rorl
mov
push
lods
int
push
cmp
or
pop
jge
aad
cmc
add
fnstenv
stos
mov
es
mov
or
sbb
and
pop
aaa
out
es
dec
bsf
sbb
push
sti
sub
test
mov
sbb
cld
and
xor
fsts
cmpsb
jge,pt
das
push
or
and
cmpsl
adc
fstpl
aam
iret
out
lret
pop
sbb
aas
cld
mov
int3
jg
in
ret
pop
adc
out
pop
mov
je
xchg
sbb
fcompl
lods
cmpb
xchg
mov
je
adc
mov
or
rorb
cli
test
loope
mov
addr16
sbb
inc
dec
arpl
mov
sub
arpl
mov
cmp
xor
mov
inc
inc
xchg
pusha
inc
jne
dec
pushf
mov
test
push
inc
xchg
fisubrs
xchg
dec
aas
mov
shl
repnz
dec
inc
sbb
jp
pushf
insb
push
add
cld
bound
leave
dec
mov
jg
movsb
test
inc
xchg
outsb
dec
lcall
or
loop
sahf
xor
add
sahf
xlat
roll
out
sti
ss
int
adc
push
mov
inc
lock
in
rorb
xchg
add
cwtl
adc
xchg
mov
stos
rorl
sbb
sub
dec
orl
outsl
mov
pop
pop
xchg
fcmovne
jbe
imul
sbb
jl
stos
push
sub
xor
mov
ds
sbb
jns
cmpsb
pushf
sbb
andb
dec
xor
xchg
out
and
xor
or
pop
fwait
mov
mov
add
enter
mov
adc
pushl
inc
cs
adc
in
add
in
or
adc
pop
f2xm1
scas
adc
cmc
pop
and
outsb
adc
jb
imul
jbe
and
adc
inc
mov
mov
rcll
out
bound
dec
mov
mov
cmp
arpl
movb
mov
daa
push
xchg
movsb
mov
pop
pop
fs
or
add
andl
sub
lret
jae
loope
testb
sti
int
mov
sbb
aam
stos
sub
jbe
add
adc
inc
mov
pop
add
sub
xchg
cmp
andb
xchg
mov
iret
shlb
sti
dec
xchg
lea
add
mov
je
dec
dec
cmp
mov
or
inc
loop
jge
into
lret
dec
lea
or
xor
loope
xchg
pop
mov
push
outsb
icebp
addr16
xor
pushf
outsb
adc
ret
jno
inc
add
xor
jle
das
dec
cmp
xchg
arpl
mov
fsts
bound
and
xchg
mov
addr16
test
sbb
andl
jns
or
mov
das
xchg
mov
aas
in
lret
pop
sbbb
fistl
dec
ljmp
push
and
pushf
inc
sub
lret
and
xor
sbb
pushf
inc
enter
inc
pop
push
mov
cs
dec
dec
and
mov
fmuls
jb
lods
inc
mov
jle
popa
sub
xor
sub
repz
sub
cmpl
mov
push
fcmovb
movsl
loopne
test
out
jle
notb
imul
loopne
push
xor
movsl
test
xchg
aam
adc
clc
sbbl
cwtl
stos
ret
push
rolb
dec
add
push
rcll
mov
xor
nop
and
sti
or
cwtl
mov
movsb
inc
mov
jns
ja
jl
insb
pushf
mov
ljmp
cli
mov
stos
fnstsw
sub
outsb
push
mov
popl
jle
cli
sahf
add
scas
xchg
xchg
mov
mov
mov
jmp
jp
inc
cld
fdivrs
xor
adc
xchg
mov
shl
fs
adc
in
jge
jno
and
pop
xchg
insl
mov
add
adc
xchg
js
xorb
mov
jmp
mov
les
pop
rorb
loopne
movb
jns
lret
rdmsr
scas
cmp
and
out
int3
jne
sbb
cmp
pop
fdivrp
mov
cli
popaw
push
mov
pop
lock
xchg
mov
jmp
ljmp
bound
push
push
rcll
and
dec
or
ret
out
sub
aas
lret
jl
inc
cmc
scas
pushf
cmpl
rclb
ds
frstor
push
sbb
mov
dec
movsb
outsl
mov
xchg
inc
rcrb
ds
push
shll
and
loop
push
outsl
popf
stos
mov
imul
push
inc
addl
and
fcmove
aas
test
pop
addr16
or
adc
adc
cld
ret
pop
insl
inc
xor
dec
jbe
mov
xor
lret
push
and
dec
dec
clc
sub
sbb
popa
push
mov
xchg
lcall
pop
sub
inc
or
mov
xchg
mov
xor
mov
add
pop
and
jnp
adc
and
das
xchg
add
pop
pop
xor
mov
aam
lea
scas
movsl
pop
jo
dec
fiaddl
mov
mov
jbe
pop
rcrl
or
fstpt
and
int
aas
daa
dec
stos
cltd
push
iret
loope
lcall
mov
adc
push
xchg
sbb
mov
or
das
mov
jge
xor
int3
xchg
imul
mov
pop
push
mov
pop
xchg
adc
lahf
jmp
insl
jp
loope
addr16
pop
cmp
mov
sub
xor
dec
cmp
out
inc
add
pusha
je
push
rorl
xchg
js
pop
push
insb
in
rorl
xchg
repnz
and
movsl
faddl
sub
push
aam
cs
cmp
sahf
sub
nop
pop
mov
cmp
jge
jle
mulb
xor
lock
dec
push
pushf
lods
jb
scas
mov
or
cmpsl
inc
repz
pushf
jl
or
mov
cmpsl
and
leave
adc
movsb
add
leave
pop
fcomps
into
xor
ss
push
je
push
and
cs
ret
fsubrp
rorb
inc
jmp
fwait
add
and
cmpsl
clc
dec
pop
es
push
fidivl
lds
mov
pushf
movsb
push
pusha
inc
idivb
or
and
dec
loop
and
xor
stc
icebp
and
fstl
lds
jne
bound
jl
pop
jnp
adc
lret
shrb
das
mov
loop
mov
xchg
inc
repz
mov
mov
insb
xchg
iret
mov
lds
testb
fcomps
lds
clc
out
jp
mov
stc
ret
lock
xchg
in
pop
pushf
mov
mov
jbe
or
leave
aaa
jmp
std
cmp
inc
push
lock
imul
mov
push
mov
mov
inc
leave
dec
aad
sbb
adc
ret
jbe
arpl
repnz
loop
hlt
sub
and
cmpsl
xchg
jl
adc
out
xor
pop
mov
sub
cmp
mov
push
scas
inc
jo
jge
test
aad
push
inc
and
test
push
jo
add
inc
std
xchg
les
loop
pop
xlat
ss
xchg
xor
cli
pop
dec
test
adc
pop
mov
mov
mov
fs
inc
mov
cwtl
pop
push
push
push
popa
repnz
pop
leave
mov
push
out
xor
pop
mov
jecxz
loope
push
addb
arpl
xchg
dec
in
aas
cmp
pop
mov
xchg
into
lret
xor
adcl
shl
stos
cmpsb
mov
mov
pop
ljmp
pop
mov
cltd
ss
jno
das
movsl
jmp
adc
scas
cli
xchg
pop
adc
pop
xor
sbb
pop
pop
dec
mov
outsl
or
jecxz
stos
dec
cmp
dec
pop
sbb
sbb
rorl
add
xchg
mov
or
sbb
pop
jae
cmp
repnz
movsl
bound
sbb
ljmp
sbb
in
mov
fnsave
inc
push
test
ljmp
add
movsl
repz
into
lea
xchg
add
sahf
shlb
fucomip
xor
push
fcmovb
xchg
jbe
push
movsl
inc
ror
pop
sbb
sub
and
xor
push
pop
nop
shlb
xchg
mov
mov
mov
pop
les
adc
lea
popf
in
shll
mov
jae
xchg
pusha
jl
sub
bound
mov
and
adc
leave
inc
mov
pop
or
jl
outsl
mov
sti
addr16
cltd
out
cmpsl
push
add
rolb
data16
pop
jge
cmpsb
icebp
scas
and
adc
sub
jbe
aas
sbb
es
dec
xchg
sbb
mov
insl
rorl
in
data16
adc
negl
std
mov
paddw
mov
sub
adc
mov
fwait
pop
mov
sub
xlat
mov
into
sti
cs
xor
push
adc
adc
popf
iret
addl
loop
cmpsl
jne
in
push
imul
daa
inc
and
cmp
mov
add
cltd
add
add
cltd
and
ljmp
jle
cmp
aas
sahf
fnstcw
jp
xor
mov
lock
in
pop
loope
xor
mov
subb
test
mov
pop
pop
sbb
flds
sbb
and
movsb
jno
push
paddusw
inc
sbb
push
push
pop
fistl
add
dec
pop
fldl
imul
outsb
push
in
add
mov
push
ret
xchg
xchg
gs
cmp
xor
cmpsb
int3
pushw
add
dec
cmp
mov
sahf
clc
xor
repnz
scas
leave
call
inc
xchg
sub
lock
dec
stos
or
aam
lcall
push
lods
mov
rcrl
add
shrb
clc
lahf
add
jb
std
mov
or
rcr
mov
adc
cmp
push
mov
pop
dec
hlt
push
sub
mov
push
std
mov
sub
out
or
scas
sub
inc
sbbl
loopne
cs
and
xor
aas
xchg
inc
scas
xlat
imul
lret
push
scas
or
int3
jl
movsb
movsl
dec
cmp
fisttps
and
scas
test
jne
push
mov
adc
pop
sub
cmp
push
out
cld
mov
pop
std
sub
mov
dec
shll
movsb
cmc
jmp
inc
add
sti
es
sub
stc
cltd
fs
pop
adc
ljmp
repnz
test
lods
pop
mov
inc
sub
sbb
mov
and
push
sbb
add
jmp
mov
idivl
or
outsb
xchg
scas
lea
inc
jne
aaa
pop
hlt
sbb
and
jl
mov
in
cli
sub
jle
out
sub
data16
mov
out
out
je
lock
mov
inc
mov
orl
stos
xor
push
jae
or
or
jb
dec
inc
jle
mov
outsb
and
jns
and
pop
inc
adc
out
int3
ds
cld
lock
mov
dec
jo
sbb
xchg
dec
lock
push
mov
cmp
out
pop
xor
xor
dec
inc
jmp
push
stos
push
sbb
dec
mov
dec
sar
cmp
mov
call
sbb
notl
in
insl
fwait
or
jge
inc
mov
push
xor
inc
push
adc
pushf
das
stos
addw
inc
cmp
adc
pop
lock
cmp
lret
jo
mov
cmp
jmp
das
xor
cmpsl
out
ljmp
xchg
mov
leave
loope
inc
fmul
movsb
into
das
add
fidivrl
insl
sbb
mov
cmc
ret
or
int
cmc
sbb
lret
lock
xchg
cli
or
jmp
push
dec
sbb
addl
fs
xlat
mov
inc
pop
xlat
sarb
or
push
icebp
enter
in
in
clc
xchg
sub
movsb
sub
test
push
mov
xchg
and
sub
outsb
out
push
lret
jnp
add
nopl
pop
out
xchg
data16
pushf
sbbl
mov
iret
sti
push
filds
cmpsb
sub
xor
lods
mov
lret
xchg
daa
mov
jecxz
push
nop
mov
addr16
test
addb
popa
shl
movsb
bound
int
sbb
call
scas
insl
loope
mov
mov
out
dec
ss
adc
cmp
mov
testb
ljmp
ds
sbb
sbb
mov
jecxz
push
push
adc
push
mov
test
jae
mov
das
test
cmp
cmp
sti
jne
sahf
inc
cvttps2pi
daa
js
and
ljmp
mov
mov
mov
out
ljmp
dec
cli
or
sub
adc
lret
cmp
mov
cld
stc
fisttps
mov
mov
fistpl
adc
or
adc
aas
shlb
out
dec
cmc
adc
test
mov
mov
pusha
xchg
or
addr16
pop
jmp
mov
imull
clc
push
nop
xlat
cmpsl
aaa
int
int
enter
adc
pop
inc
and
cmp
xor
jae
je
daa
fists
test
xchg
sahf
das
and
or
aad
cmpsb
xchg
mov
sbb
mov
mov
and
pop
mul
dec
fmull
jno
add
sub
pop
sub
cmp
in
sbb
jno
frstor
ja
adc
loop
xor
jmp
loopne
mov
mov
imul
shlb
push
icebp
out
into
or
pop
xor
call
xchg
jno
cltd
adc
sub
and
inc
jmp
pop
dec
and
gs
and
jecxz
pop
or
push
jno
dec
or
pop
sub
add
sahf
je
pop
xchg
lret
pop
or
icebp
jl
xor
xchg
add
test
js
inc
push
fisubs
pop
movzbl
lcall
cwtl
xchg
inc
outsb
cmp
add
mov
ret
and
jno
fs
xchg
imul
es
mov
add
repnz
pop
outsb
cmc
das
cltd
pop
xor
mov
or
add
sarl
imul
dec
lret
popa
add
popa
data16
clc
push
cld
add
push
dec
dec
jle
or
dec
stos
jge
jp
sbb
mov
and
ficoms
mov
sbb
popf
pop
push
out
call
ret
jmp
sub
adc
add
fcmovbe
xor
mov
push
sub
insb
push
inc
inc
loope
push
jb
lret
cld
fildll
fdivl
xchg
jne
sub
orb
mov
xor
jle
in
mov
push
dec
xchg
aas
outsl
push
fstpl
pop
mov
movsb
pop
xchg
fwait
pop
test
sub
xor
pop
jecxz
loop
sbb
xchg
jecxz
into
in
test
cltd
push
out
mov
test
cmp
add
mov
push
inc
dec
mov
xor
inc
fldl
jecxz
sbb
xor
cmc
inc
out
arpl
cltd
jns
push
shrl
test
out
and
ljmp
sbbl
andb
add
push
or
and
xchg
shlb
add
or
jp
push
dec
jns
iret
and
or
das
push
mov
mov
xor
adc
repnz
mov
pop
sbb
xchg
outsb
sub
sub
fsubrs
pop
int
add
xor
stos
pusha
jp
movsb
xchg
mov
outsl
rorl
into
or
dec
mov
mov
sbb
jge
lcall
mov
test
or
sub
aam
lcall
pushf
mov
pop
or
jmp
fisubs
js
into
pop
mov
and
ret
push
mov
and
pop
aad
lret
hlt
add
mov
add
xor
jnp
inc
negl
int
xlat
push
and
repz
stos
xor
out
sbb
clc
or
adc
adc
xchg
insb
and
outsb
pop
adc
pop
push
pop
pop
mull
ja
repz
pop
cmp
ja
push
add
gs
ret
xor
mov
jmp
pop
xor
shl
rcr
lcall
mov
int3
sbb
insl
test
ljmp
movsl
in
mov
cmp
xor
mov
cltd
pand
jl
mov
lret
divb
pop
out
or
mov
gs
pop
ljmp
mov
aam
mov
mov
xchg
jo
cltd
xchg
shrb
mov
push
out
adc
jb
in
jns
pushf
out
popf
notl
setb
adc
incb
or
test
aaa
movsl
jae
loopne
rorl
mov
test
pop
fistl
cmp
or
pop
jo
test
or
fnstenv
lcall
mov
movsl
pop
filds
cbtw
xchg
idivl
ret
cmp
or
jo
push
fs
pop
aaa
mov
test
repz
test
mov
dec
adc
lret
inc
insl
cmpsb
leave
xchg
adc
fsubrs
xchg
mov
out
bound
add
enter
call
cmpsb
cmp
jl
pop
jo
xor
mov
frstor
push
or
ror
fcomip
pushf
mov
ficoms
negb
scas
mov
inc
push
mov
sbb
int3
jns
adc
jo
fdivrs
shlb
in
cmc
outsl
mov
popa
divb
jae
push
dec
cmp
xor
stos
negb
lea
pop
and
stos
addr16
cmpl
je
imul
jmp
repnz
pushf
adcb
lea
adc
pop
enter
lds
add
dec
fisttpll
push
test
jmp
sbb
cld
dec
mov
stc
out
inc
push
clc
mov
dec
dec
andl
mov
pop
inc
mov
cwtl
jp
add
mov
movsb
movsl
sub
clts
ffree
aam
movsl
mov
call
mov
pop
fs
dec
pushf
add
int
out
pop
mov
jg
push
dec
mov
mov
xlat
pop
roll
icebp
mull
inc
popl
fs
inc
imul
mov
rcr
into
fdivrs
stos
mov
lods
xchg
ljmp
ds
pop
lea
push
frstor
int
sub
push
xchg
inc
mov
cmpsl
xchg
stos
lock
enter
mov
mov
or
xchg
in
icebp
out
fisubrs
sub
mov
dec
mov
gs
js
leave
and
mov
pop
and
out
pop
imul
dec
pop
xchg
push
les
aas
inc
or
andb
push
cmp
leave
mov
xlat
pop
loop
imul
pop
xchg
lock
aaa
bound
sbbb
jmp
and
popa
icebp
cmp
andl
sub
ljmp
out
popf
fsubr
int3
stos
cmp
mov
or
clc
pop
lahf
jae
jp
lcall
fldcw
adc
stc
push
xor
xor
loopne
add
int3
push
and
sarb
pop
or
comiss
movsl
fs
mov
pop
inc
mov
pop
scas
sub
push
ljmp
push
mov
fistps
sub
inc
shrb
adc
cmp
sub
shr
add
out
in
xchg
je
subb
inc
sbb
in
out
repnz
adc
shll
pop
out
jbe
xor
lea
jbe
jg
inc
jecxz
cmp
loop
stc
mov
int3
call
lods
jnp
inc
adc
mov
or
loope
je
add
xor
pop
out
ret
stos
lods
fisttpl
add
fsubrl
in
test
pusha
popa
dec
dec
test
divl
inc
xchg
mov
xchg
pusha
jbe
addr16
cltd
popf
mov
lret
scas
inc
dec
push
push
pop
inc
mov
outsb
cmp
xor
pop
inc
addr16
sub
mov
xchg
and
movsl
push
sbb
rorb
popa
lret
lds
pop
addb
sbb
pop
cltd
cmc
out
scas
lods
ljmp
mov
push
inc
add
jnp
test
stos
or
fwait
sahf
dec
rolb
popf
lcall
stc
ds
mov
je
lock
dec
les
adc
test
loopne
cli
pusha
cs
xchg
sub
jae
daa
pop
leave
adc
sarb
sub
pop
push
add
add
jmp
fidivrs
cmpsb
jl
imul
or
int3
jl
adc
cmpsl
inc
inc
xor
lds
and
movsl
mov
mov
lock
add
subb
or
aam
aad
inc
adc
jb
stc
push
mov
movzbl
sub
iret
in
inc
fsubs
cltd
mov
fldl2t
repz
leave
mov
add
aam
cs
shll
sub
push
push
dec
xlat
adc
lretw
scas
xchg
stos
xlat
dec
pusha
dec
fdivs
adc
cli
cmc
js
pop
and
sbb
or
cmpsb
sub
icebp
push
fsubs
lret
call
sub
out
jg
xor
loopne
sbb
icebp
mov
imul
mov
mov
add
mov
loop
mov
fldl
shl
cmp
xor
jmp
and
mov
cmp
add
lret
xchg
pop
neg
test
nop
cmp
cmpsb
jb
cmc
loope
icebp
iret
outsb
pop
lcall
negb
inc
mov
and
iret
sarl
sub
jae
xchg
rcl
insl
ds
mov
xchg
rol
jmp
fcoml
cwtl
cmc
xlat
cmp
call
mov
sbbl
xchg
into
leave
sub
adc
pop
xchg
movsl
pop
lock
add
mov
push
stos
add
adc
pop
mov
das
cwtl
pusha
xor
and
lret
pop
mov
and
testl
jns
mov
leave
popa
mov
sub
fisubs
jge
rcll
stc
mov
inc
push
int
test
push
sbb
xchg
imul
shl
jle
hlt
mov
cmp
ja
imul
push
inc
unpckhps
push
jl
sub
sahf
xchg
cs
add
call
mov
ret
ror
lea
or
mov
jmp
dec
and
clc
mov
pop
mov
mov
or
jbe
lock
es
jnp
loopne
leave
nop
mov
outsb
add
xchg
popf
mov
dec
xor
jmp
mov
or
scas
or
out
dec
divl
movsb
adc
jecxz
aaa
sbb
lock
ret
cltd
movsb
push
sbb
adc
roll
popa
sbb
xchg
jg
cmp
outsl
cmpb
cmpsl
lods
fwait
add
sub
cmp
cmc
mov
in
lea
inc
jbe
jns
or
scas
adc
addr16
lea
aad
mov
xchg
mov
hlt
adc
xorl
enter
call
sub
mov
xor
mov
je
dec
fsts
mov
adc
ds
mov
ljmp
gs
in
adc
jnp
mov
data16
out
push
mov
add
movsb
jnp
fisubs
popa
icebp
sbb
cmpsl
in
and
pop
push
mov
int
aas
scas
or
icebp
mov
push
adc
push
arpl
repnz
stc
jle
insb
adc
sub
jle
insb
adc
loope
mov
mov
lret
cli
push
shlb
ror
in
and
sbb
jnp
xchg
or
iret
xchg
pop
lods
imul
fdivp
cmp
sbb
push
enter
xor
stc
nop
jnp
jl
add
insb
in
sub
and
repz
mov
and
cld
loope
fidivrs
insb
mov
push
push
mov
adc
movsl
mov
out
insl
lahf
mov
jo
outsl
mov
insb
hlt
insl
in
mov
lods
add
mov
jmp
inc
sub
movl
int
stc
cmp
add
fs
jno
ds
loope
dec
pop
or
stos
or
mov
mov
pop
inc
pusha
mov
jae
add
mov
data16
push
cmp
or
das
push
insb
push
add
das
xchg
mov
das
sub
in
mov
pushw
inc
daa
xchg
inc
sbb
test
divb
fs
jae
aad
int
imul
shrl
lods
stos
shl
add
loope
push
sbb
or
das
jle
pushw
imul
cmpb
shl
xor
sbb
mov
mov
and
test
cmc
push
adc
xchg
repz
aad
add
mov
mov
inc
scas
jnp
cli
and
rolb
shl
cwtl
mov
sub
repz
loop
test
movsl
int
std
push
mov
xchg
push
lds
and
int3
test
nop
push
ret
mov
xchg
xchg
mull
fwait
mov
icebp
aas
test
lods
shll
mov
lret
mov
push
push
xchg
dec
mov
ret
movsl
fstl
idivl
lea
jno
int3
mov
int3
xchg
cmp
sub
cmp
xorl
scas
ds
push
jmp
mov
sub
ss
lahf
lods
lret
pusha
hlt
xchg
dec
pop
fcmove
or
lea
insl
xor
cli
and
or
inc
mov
jmp
pop
jns,pn
insl
jmp
push
inc
inc
mov
repnz
ljmp
cld
cmp
popf
sti
mov
in
divl
and
in
test
pop
mov
out
ret
lret
repnz
sbb
fnstcw
ds
std
mov
jge
and
add
aaa
inc
ret
adc
mov
pop
mov
xchg
loope
jg
adc
popf
data16
jbe
loopne
in
test
jbe
fidivrs
inc
mov
sbb
test
mov
lods
movsb
arpl
push
xchg
lret
lea
mov
and
mov
cld
or
mov
leave
jb
pushf
loope
scas
pop
jg
inc
in
inc
fwait
divl
popf
mov
outsl
push
out
iret
mov
pusha
xchg
das
ret
gs
jno
or
insb
in
cmc
adc
xor
and
xchg
cld
aas
pop
add
out
xlat
push
add
jae
insb
push
and
xor
lds
push
adc
sbb
or
sbb
addl
jp
stos
adc
outsl
push
fs
mov
fprem
stc
bound
xchg
fistpll
mov
lret
sti
std
sbb
xchg
jnp
cwtl
test
sub
and
xchg
add
jo
xabort
mov
mov
outsb
push
in
mov
outsb
testl
repz
pop
mov
sbb
out
push
jmp
mov
mov
or
add
call
push
cmp
mov
in
lock
inc
cmp
or
test
cmpl
in
push
imul
cs
out
cmp
lret
mov
cmp
fstl
cmp
or
sbb
push
clc
or
lods
jmp
clc
inc
loop
ds
arpl
mov
decb
jmp
insb
cmp
jge,pt
in
adc
test
and
adc
lret
out
or
and
push
and
cli
cmpsb
inc
inc
xchg
push
dec
out
loopne
sbb
pop
and
cwtl
and
bnd
fidivrl
xchg
pop
jno
pop
push
sub
pop
inc
ss
pop
fs
incb
adc
sub
jl
jg
lds
inc
movsb
inc
test
cmp
add
test
or
lock
roll
or
xchg
incb
mov
mov
cmp
in
cs
mov
mov
js
or
mov
sbb
mov
push
out
sbb
inc
stos
adc
dec
or
hlt
xchg
lock
std
jnp
addr16
iret
jle
mov
cld
sbb
fidivs
mov
ds
ds
lods
aas
cli
sbb
cmp
cmp
jge
xor
dec
inc
out
cmpsb
mov
xor
or
cld
add
inc
mov
cmpsl
mov
ss
les
or
xor
push
movsb
push
neg
xchg
out
out
xchg
fstpl
jmp
outsb
aaa
pop
pop
push
je
sbb
push
mov
inc
in
add
mov
mov
dec
push
jmp
inc
pop
inc
ss
mov
lods
test
ret
sub
insl
push
xchg
sbb
xchg
mov
ffree
loop
add
add
inc
or
and
pop
ds
popf
pop
icebp
adcl
xchg
dec
ret
lods
inc
jns
pop
xchg
scas
jne
sbb
shrb
xor
in
arpl
out
mov
stc
popf
jns
xor
fimull
pop
cmc
adc
and
adc
mov
lods
mov
scas
xor
mov
and
call
lock
fidivrl
push
cmp
mov
xchg
aaa
enter
add
inc
xchg
test
lret
out
pushf
sub
jns
movsl
dec
jo
dec
xchg
mov
mov
inc
mov
push
notl
and
imul
outsb
cld
sahf
nop
push
movsl
movsb
xchg
nop
xchg
mov
outsb
mov
push
fwait
or
imul
fistpl
pop
mov
and
add
mov
fidivs
pop
pop
pushf
mov
adc
lret
xchg
stc
loope
pop
mov
pushf
lahf
or
fxch
mov
push
cli
gs
daa
cmp
or
mov
dec
sub
out
sbb
sbb
popf
sub
push
xchg
ljmp
shld
cmp
dec
mov
fisttps
mov
sub
ret
pop
cld
xor
add
adc
mov
jbe
icebp
add
cmp
or
lods
shlb
cmp
xor
out
jb
mov
inc
push
lahf
int3
bnd
repz
mov
insb
pop
lcall
jmp
sub
cli
mov
repz
popa
jo
inc
cmp
or
das
mov
test
push
lret
lods
jne
cmp
insl
movsb
jp
dec
pop
sub
shrl
cmp
fmul
cmp
setb
mov
ficoml
cmp
mov
pushf
test
pop
lods
sti
sbb
mov
jmp
fcoms
dec
jns
push
cli
movsl
xor
das
mov
xchg
sbb
or
pop
xchg
jecxz
stc
xlat
mov
fnstsw
and
popa
mov
cmp
mov
add
xchg
and
scas
sbb
mov
es
imul
push
fdivs
add
insl
dec
mov
cltd
incb
or
dec
lcall
dec
scas
or
outsl
mov
sub
or
in
xchg
lea
or
shl
mov
xchg
dec
inc
sub
loope
push
fldcw
ss
inc
push
popf
pusha
push
or
and
cmc
insb
ret
mov
xchg
iret
dec
ret
cmp
mov
mov
and
pavgw
outsl
fcom
mov
popf
enter
int3
and
cmp
mov
adc
into
sub
sahf
cmp
fs
mov
pop
int3
popf
cmp
inc
mov
movsl
mov
lret
inc
jge
enter
test
add
dec
ss
sbb
in
jl
inc
je
faddl
xchg
jmp
dec
outsl
sbb
fucomp
lret
dec
add
push
jno
sub
xchg
lret
push
rcrb
fistl
dec
imul
stc
int3
push
push
push
xchg
mov
push
bound
jb
pop
or
loopne
lret
ror
sbb
movsb
cmc
sub
out
aam
imul
ret
rclb
repz
dec
mov
jnp
cmp
scas
sti
inc
mov
and
or
lods
mov
ret
fs
data16
mov
aas
incl
stos
dec
or
mov
out
mov
add
int3
es
adc
rorl
xchg
jns
xchg
out
add
pushf
outsl
lea
clc
dec
and
mov
sub
lahf
fldenv
test
pusha
clc
jbe
or
aad
mov
in
push
dec
inc
pop
add
pop
pusha
and
cmp
xor
arpl
mov
cmpsb
jno
add
outsb
push
imul
and
cmp
shl
es
inc
lret
pop
fsts
xchg
lods
lahf
scas
mov
loope
fsubs
and
or
inc
xor
pusha
pop
push
cltd
add
rcrb
psubd
div
dec
or
cmpsb
stos
out
test
push
flds
mov
xor
xor
out
fwait
pop
repnz
ds
or
xchg
cmpsl
data16
in
push
test
sti
lock
dec
jno
cmc
cmpb
adc
test
fsubrp
xor
or
cmpsb
sbb
jl
inc
mov
mov
push
out
rcll
pop
ja
mov
jbe
mov
movsb
enter
mov
xor
adc
cwtl
sub
fisubl
jle
daa
test
das
jecxz
jo
jl
int3
cli
pop
repz
lea
std
inc
add
push
leave
adcb
out
sub
jp
divl
inc
enter
jo
cmpsb
push
fistpll
jb
sbb
mov
stos
orb
xchg
jmp
scas
xchg
xchg
lret
mov
or
mov
adc
in
pusha
out
jnp
sti
movsb
fdivrs
inc
hlt
and
sbb
dec
mov
mov
cli
adc
add
mov
and
ja
xchg
jecxz
mov
data16
aas
push
and
xlat
fdivr
repz
add
fcomp
stos
push
mov
jns
add
jne
adc
sbb
imul
aad
add
int
xor
mov
shlb
push
iret
cs
dec
mov
rcrb
xorl
xchg
pop
jo
sti
out
mov
orl
std
or
flds
mov
scas
nop
data16
cmpsb
incb
into
inc
pushl
enter
jp
mov
mov
mov
fildll
mov
push
mov
cwtl
add
dec
inc
inc
jecxz
dec
fnstsw
mov
xchg
xorb
and
in
xor
fwait
out
in
mov
cmpsl
in
mov
adc
leave
ja
in
xchg
sbb
push
jecxz
sub
lahf
adc
sbb
or
push
cmpsb
and
xor
add
lods
sbb
sub
cmc
adc
scas
xchg
dec
stos
xchg
xchg
push
inc
pop
inc
fs
cmpsl
addb
fildll
movsl
mov
out
imul
dec
mov
inc
stos
aaa
mov
mov
loopne
adc
nop
sbbb
cmp
and
dec
adc
xchg
aas
stos
fwait
bound
jecxz
add
mov
testb
stos
cli
push
mov
jle
mov
pop
mov
lds
shrb
and
jl
loopne
es
dec
sbb
ljmp
xor
dec
pop
add
and
xchg
jae
sub
mov
mov
mov
cs
xchg
push
mov
lcall
push
inc
sbb
adc
in
bound
cwtl
push
mov
jno
xor
xchg
or
leave
iret
xchg
lea
imul
popa
cmpsl
cmpsb
or
cmp
mov
add
dec
jl
icebp
fadds
sti
lcall
jb
fsubp
iret
jnp
jne
mov
dec
add
adc
xchg
inc
leave
add
stc
dec
sahf
fistpll
or
push
inc
sub
push
xchg
aam
lods
or
inc
lea
xlat
add
in
push
icebp
pop
mov
xchg
testl
hlt
xchg
das
inc
xor
dec
clc
shlb
inc
loop
adc
and
stos
inc
scas
aas
mov
cmp
xor
sti
shll
clc
out
rcll
mov
xchg
sbb
jecxz
cld
inc
imul
lods
inc
jno
sbb
and
and
aad
adc
mov
ret
outsb
sbb
popf
fstpt
xlat
xor
out
mov
pop
ljmp
push
mov
inc
faddp
in
pop
dec
mov
cmpsl
push
sbb
xchg
scas
fs
out
jnp
jne
cmpsb
jl
sub
adc
mov
inc
addb
dec
pop
lret
lock
push
push
pop
xlat
jmp
adc
jo
push
mov
add
std
xchg
repz
cli
sbb
aaa
and
sbb
mul
sub
pop
xor
mov
stos
gs
push
in
in
xor
notb
xchg
sti
aas
push
xchg
cwtl
inc
xchg
inc
and
aad
add
xchg
jecxz
cmp
cmp
sbb
out
or
push
jae
daa
outsl
lods
stos
push
push
subl
int3
das
aaa
es
dec
in
xchg
xchg
xor
call
mov
es
ss
pusha
jge
xor
scas
jp
aad
mov
testb
mov
pop
sub
lret
jp
in
movsl
lcall
or
inc
jl
jne
nop
cmpsl
inc
jae,pt
pop
or
add
movsl
push
pop
pop
dec
or
jecxz
add
cmp
add
jle
dec
xor
xor
gs
xchg
and
pop
jp
jnp
adc
push
daa
iret
rol
mov
xor
in
insb
bound
loope
divb
pop
fimuls
test
inc
or
pushf
cmp
lcall
call
push
sbb
pop
or
lcall
or
sti
call
jns
xchg
outsb
push
fnstenv
pop
cmp
scas
xchg
sbbl
mov
xor
dec
or
divb
jp
pop
pop
dec
jp
in
xor
jmp
repnz
dec
test
daa
in
adc
jns
jo
adc
adc
ds
cmp
fimull
lods
lods
xchg
fwait
into
push
and
fstp
mov
xor
jnp
mov
jmp
int3
push
mov
outsl
push
pop
mov
and
imul
mov
pop
ss
cmp
imul
popa
cmp
cmp
fidivrs
push
mov
add
test
popf
mov
js
iret
pop
lcall
lret
dec
push
push
mov
cmp
mov
testb
ret
fisttpll
cmp
jb
add
in
flds
fisubrl
shrb
mov
int
dec
rorl
lret
out
out
fs
imul
cmpsl
filds
cmpsb
cmp
imul
push
fwait
aam
fimull
xchg
jp
inc
call
dec
jne
shrl
xchg
fidivl
out
mov
inc
pop
lahf
mov
add
cmc
call
ja
xlat
sahf
jb
xchg
jno
xchg
sbb
notl
and
dec
xlat
and
or
xlat
xchg
cltd
sub
cwtl
add
jle
rcll
dec
inc
push
mov
bound
in
inc
dec
mov
adc
mov
inc
xor
pop
xabort
sti
into
cmp
and
xchg
lea
xor
in
shll
cmp
jb
cmp
inc
notb
push
pop
push
clc
jle
add
dec
and
fwait
jae
and
pop
or
jns
inc
mov
rcll
pop
sbb
jmp
jmp
ret
mov
jl
mov
in
cmpsl
sub
gs
dec
or
rcll
rcll
popa
inc
insl
inc
test
mov
pop
mov
pushl
pop
add
sbb
push
sub
xchg
jp
add
adc
in
cmp
mov
adc
sbb
test
mov
sti
pusha
popa
cmp
xorb
sbb
add
mov
jmp
xor
sub
aam
dec
aad
arpl
idivb
ficomps
setg
xor
jae
scas
pop
mov
out
fdiv
stos
call
mov
adc
dec
test
jo
rcrl
loop
or
lock
xchg
cmp
cld
icebp
sub
std
jle
cltd
punpcklwd
push
sub
fs
in
cwtl
dec
lcall
outsl
sti
cmpb
xor
movsl
in
in
out
and
loope
insl
mov
xorb
mov
push
mov
sub
outsb
dec
iret
call
cmp
out
out
xchg
push
leave
mov
pop
inc
out
stos
push
cmp
sub
cwtl
jmp
mov
scas
popf
cmp
push
and
sub
imul
repz
in
or
cli
pop
pop
gs
imul
cmp
jo
jnp
daa
push
adc
pop
shrl
inc
xlat
mull
adc
or
push
fadds
mov
dec
in
jge
stc
xchg
hlt
das
and
leave
push
dec
push
les
iret
pushf
ret
insb
jo
or
pop
push
adc
push
mov
test
inc
cmp
jnp
imul
mov
inc
imul
nop
jmp
fsub
arpl
clc
cltd
xor
insl
aam
test
or
cs
shlb
test
fwait
cmp
daa
xor
test
inc
out
dec
cld
and
inc
aam
jge
jg
ds
push
js
add
in
mov
fwait
incb
cwtl
icebp
popf
xor
cs
in
shll
add
mov
popf
mov
jge
xchg
xchg
and
aaa
mov
pop
in
pusha
pop
sub
jnp
addr16
idivb
mov
jnp
pop
adc
scas
mov
sub
push
cs
cmc
add
jo
hlt
jnp
mov
addr16
enter
stos
cld
scas
jl
fcomp
test
arpl
jp
paddusb
xchg
xchg
adc
rorl
loop
add
dec
pop
cld
xchg
push
stos
into
dec
in
mov
jb
insl
push
pop
mov
lcall
or
pop
arpl
jbe
sbb
add
sahf
insl
cltd
add
xor
mov
jne
les
imul
pop
hlt
push
lock
loope
lahf
mov
call
jge
add
aaa
hlt
gs
cmp
jne
xchg
scas
sbb
clc
movq
sbb
sbb
iret
xchg
insl
xlat
dec
roll
stos
enter
mov
or
mov
push
mov
sub
sub
and
ja
jae
lods
js
jno
or
sub
dec
neg
or
out
mov
lods
jne
test
lret
xor
shlb
test
fmull
mov
jae
dec
inc
push
jbe
pop
js
mov
clc
inc
mov
repz
mov
std
cmp
sub
mov
jg
push
sub
pop
xor
loope
pop
cmp
mov
sub
and
push
mov
or
cmpsb
lcall
call
and
leave
bound
or
inc
clc
inc
in
push
stos
mov
lea
std
in
sub
fidivl
les
jae
mov
cltd
mov
lret
mov
mov
mov
dec
mov
or
sti
movsl
mov
aaa
clc
mov
adc
inc
movsb
cli
insl
cmc
add
jmp
and
dec
pop
out
mov
ljmp
movsb
jmp
ds
add
add
sub
lods
sarl
xchg
movsb
and
lods
lods
inc
aaa
add
pop
mov
jg
repz
pop
insl
mov
ds
push
aas
sbbl
xor
inc
rcrb
movsb
loop
pop
sub
and
iret
ss
insl
lea
jmp
std
dec
mov
outsl
jns
or
into
nop
mov
sbb
gs
popa
jl
aas
push
sub
shl
push
xchg
or
test
mov
jl
dec
and
sbb
and
cmp
rolb
add
imul
inc
cmp
cmpsl
push
and
inc
sbb
push
sub
call
lret
push
loope
add
gs
outsb
mov
outsb
stos
push
and
cmp
into
loope
test
cmp
fwait
add
cmp
mov
pop
jnp
lret
pop
aad
dec
mov
mov
es
shll
add
and
int
lret
push
ljmp
sbbb
sub
insl
mov
in
mov
inc
incl
lret
dec
loop
cmpsl
imul
leave
ds
cmpsl
push
cwtl
popf
or
jl
js
mov
jnp
sub
mov
mov
fidivl
mov
repnz
add
imul
xchg
xlat
push
data16
das
aaa
imul
in
push
pop
cmp
aas
movsl
ret
mov
or
outsb
test
imul
jmp
push
pop
roll
repz
fsubrp
fcomps
pop
fsubl
push
arpl
jp
in
add
lods
outsl
fldenv
arpl
or
mov
push
push
pop
pusha
adc
xchg
les
popf
lods
stos
jge
jae
int
dec
and
loop
mov
repz
pop
decb
dec
cmp
sub
rolb
pushf
mov
stos
loope
xchg
sbb
enter
lods
xchg
imul
imul
jge
sub
js
aas
test
lods
js
jae
mov
add
int3
repnz
push
repnz
push
out
les
sbb
push
daa
cmpsl
mov
pop
push
cmp
mov
add
sarl
test
pop
mov
xchg
lods
scas
stc
push
mov
xchg
ficomps
jno
pop
jp
lcall
es
mov
cld
inc
cltd
jnp
push
jle
push
inc
jmp
xchg
cmp
dec
push
dec
sbb
push
rorb
inc
in
cmp
pop
xor
cmp
or
xor
pop
mov
jnp
push
into
test
jmp
xchg
cmp
mov
mov
or
dec
xchg
lcall
aam
sub
mov
sub
mov
test
sub
lret
mov
mov
inc
xor
mov
push
jns
pop
cmp
and
inc
add
jg
mov
xchg
loope
push
pop
xchg
fs
jbe
lods
lock
sbb
inc
test
fisttpl
ror
jl
lea
lret
mov
repnz
and
repz
cmp
push
dec
repnz
scas
nop
jecxz,pt
dec
call
ja
into
mov
and
push
sub
mulb
popa
xlat
repnz
mov
or
adc
jecxz
mov
ja
dec
sahf
jle
loope
jbe
in
addl
jp
aas
jno
aaa
das
sub
std
and
rclb
imul
push
clc
push
dec
daa
or
je
mov
stc
shlb
xlat
movsl
pop
or
loopne
popl
cmpsb
adc
and
mov
jge
or
push
shr
add
arpl
push
fwait
daa
out
mov
sbb
into
je
sbb
pop
into
div
fmull
and
adc
ret
xchg
dec
inc
adc
mov
aas
cmp
test
cmp
mov
and
aas
test
jl
shll
cmp
aaa
push
imul
xchg
sbb
pop
fmulp
test
daa
out
inc
je
sbb
sbb
test
adc
out
sub
or
scas
clc
ret
xlat
daa
std
je,pn
cltd
cmp
data16
int
test
daa
xchg
pop
cli
jo
xor
add
sbb
out
in
movsl
dec
adc
fimull
inc
cmp
pop
imul
cmp
pop
push
dec
addr16
cmp
xchg
cmpsb
mov
lret
subl
mov
shlb
jae
lock
inc
pop
adc
or
jl
mov
gs
imul
or
fcoml
mov
aam
sub
sub
notb
jne
repnz
dec
lret
adc
sub
pop
dec
negl
dec
lods
lret
out
or
mov
xchg
hlt
adc
pushl
mov
xor
lock
dec
jecxz
lcall
mov
adc
out
sbb
jmp
out
test
leave
xchg
arpl
dec
mov
adc
and
cmp
cmp
add
sub
in
or
jno
ret
or
xchg
jecxz
loopne
sbb
lret
subl
inc
in
jns
icebp
add
cltd
add
dec
idivb
adc
add
inc
and
and
pusha
lods
pop
jb
sub
mov
inc
xchg
fs
and
sarl
ljmp
pop
sahf
xchg
testl
test
aam
dec
jmp
jmp
cmc
js
add
ret
cmp
xlat
dec
jecxz
mov
mov
lret
sbb
into
enter
inc
test
cmp
hlt
mov
push
faddl
loopne
daa
cmpsl
mov
dec
mov
addr16
add
fdivp
mov
imul
not
pop
pop
xchg
fistpl
dec
jecxz
popf
aas
in
lcall
cs
mov
dec
mov
sbb
or
fucomp
in
imul
inc
add
add
sub
enter
xchg
sar
cwtl
rcrl
sub
test
or
std
add
int
sbb
enter
mov
inc
out
xor
daa
ror
adc
repnz
subb
jns
mulb
insb
push
inc
mov
jle
xchg
mov
push
pop
daa
lcall
popl
push
xchg
jmp
pop
popf
mov
mov
sub
dec
sub
mov
loopne
pop
mov
repz
jg
adc
rolb
dec
outsl
jmp
dec
rolb
add
cli
jl
out
pop
fnsave
xor
push
push
fxch
mov
adc
movsb
dec
enter
sbb
sub
jo
je
leave
leave
inc
xlat
dec
cmp
xlat
lds
sbb
or
xlat
pushw
fsts
imul
ret
push
fdivl
or
mov
inc
pop
cmp
stc
and
dec
clc
inc
sbb
cmpsl
sub
ja
into
scas
lods
pop
or
or
xchg
and
add
fucomp
cmp
lock
dec
das
pop
mov
pusha
insl
daa
push
imul
dec
push
mov
enter
nop
hlt
lock
cmc
and
xchg
pop
pop
push
pop
push
pop
xchg
notl
sbb
xchg
push
sbb
push
pop
sbb
push
in
mov
in
loopne
daa
jp
inc
jne
pop
repz
inc
add
jo
ljmp
xchg
addl
test
jb
xchg
adc
fstp
int
ror
lcall
cmc
jg
xchg
xchg
inc
mov
aam
push
aad
lods
adc
ficoms
sahf
leave
daa
add
add
dec
cmp
iret
inc
outsb
pop
into
ss
loopne
xchg
inc
lods
jae,pt
enter
dec
or
push
int
mov
mov
xchg
ds
push
xchg
inc
mov
notl
stos
sbb
lods
pop
mov
es
and
push
or
call
pop
cmpsl
mov
jp
ja
cmpsb
movsb
xchg
lods
sarl
jns
xchg
push
outsl
xor
rcrb
mov
je
movsl
mov
pushf
jb
jl
das
mov
repnz
xor
add
loop
cmpsl
mov
jno
cltd
push
pop
xchg
int3
aaa
lods
pop
cmc
orb
lds
push
adc
push
adc
mov
push
mov
fisubl
sti
mov
jbe
cmp
repnz
in
iret
sbb
pop
ret
hlt
in
outsb
and
and
fsubs
add
outsb
sarb
pop
call
sar
rolb
mov
xor
mov
in
mov
ss
inc
mov
mov
popf
in
push
cwtl
ss
add
or
inc
mov
in
ljmp
fisubs
pusha
fs
mov
mov
test
rolb
sub
push
xchg
sub
dec
cltd
inc
divb
adc
out
jns
shrb
cmp
lahf
xorb
cmp
subb
loopne
ds
sub
sbb
dec
cmpsb
adc
push
mov
repz
out
imulb
adc
cld
stos
cmc
pop
jge
push
add
ret
jmp
jbe
sbb
mov
sarl
mov
in
adc
xchg
cld
dec
xchg
rcl
adc
sub
push
inc
hlt
nop
ljmp
addr16
and
mov
xchg
out
fadds
mov
push
mov
sahf
fistps
jp
adc
xor
aaa
in
mov
sbb
sbb
lret
lea
cmp
jns
lahf
sub
sub
cmp
pop
jbe
jbe
mov
xor
pop
xchg
cmp
sub
adc
jge
icebp
imul
cltd
mov
jmp
mov
iret
xchg
add
mov
call
jmp
xchg
dec
ja
rcr
sbb
mov
pop
and
loopne
mov
js
sub
xor
push
inc
lret
aas
add
cmp
dec
addr16
and
enter
add
jp
fistl
loope
jge
fistps
mov
rcrl
shlb
cli
lea
inc
sub
stc
jp
or
test
aas
enter
xor
pop
adc
ret
sub
mov
push
add
repnz
das
sbb
in
adc
lods
cmp
jmp
mov
xchg
push
lods
jne
popf
out
jecxz
fcomps
jnp
insl
in
adc
cs
stos
sbb
cmovbe
push
das
xor
xchg
jmp
stos
add
insl
ret
out
ja
jp
pop
cmc
std
fucomip
pop
cli
pushf
mov
iret
mov
sbb
jle
aad
mov
xor
pop
fmulp
int
fstl
mov
in
mov
mov
aad
imul
pusha
add
xchg
add
fsubr
lods
mov
jge
or
lea
int
push
leave
jge
bound
xlat
cmp
cmp
sbb
out
out
in
lcall
cmp
xchg
xchg
insl
out
icebp
imul
push
fstl
push
stos
adc
fwait
inc
jp
push
ficompl
ret
in
das
icebp
in
and
xor
mov
add
pop
ja
int
mov
xlat
pusha
jns
popa
dec
sbb
sbbl
sti
xchg
mov
cmp
aas
inc
sub
sbb
xchg
sti
bound
sub
bound
pop
mov
push
or
movsl
cli
mov
xor
xchg
hlt
ds
adc
or
mov
lret
dec
cmpl
push
add
fs
stc
xchg
cmp
cmpsb
je
push
jae
out
xor
jp
adc
insl
lods
inc
inc
in
shrl
imul
pop
mov
xchg
and
jns
sbb
ja
sub
jb
mov
nop
rcll
dec
cmc
fs
shll
add
mov
popa
cmp
data16
int
out
mov
push
lods
scas
and
xchg
add
adc
mov
outsb
jp
inc
imul
mov
jb
pop
out
out
out
inc
mov
outsl
xchg
xchg
sti
popa
rorb
sahf
movsb
lret
mov
or
sbb
pushf
sti
sub
xor
fs
mov
loop
mov
stc
cs
xor
scas
dec
sub
mov
adc
or
cmpsl
movsb
and
jmp
pop
push
sub
movaps
out
or
and
jo
xor
js
xchg
or
xchg
jne
xchg
push
fs
mov
push
mov
or
cmp
into
sbb
pop
sbb
xchg
lds
popa
insl
mov
push
lahf
addr16
sub
repnz
xchg
adc
mov
mov
sbb
sahf
jbe
mov
push
std
jp
and
shll
sub
pop
lret
pop
mov
repnz
add
aad
mov
push
xchg
in
and
cltd
push
push
test
leave
pop
or
and
xor
mov
clc
sbb
jge
adcl
rolb
xchg
fstpl
xor
push
jle
and
inc
insl
pop
lret
dec
das
in
mov
jne
mov
jb
mov
mov
mov
into
je
inc
in
leave
or
mov
dec
mov
out
push
adc
fcoml
into
adc
xchg
insl
aad
shlb
sbb
dec
push
nop
pop
fs
cli
pop
nop
add
enter
pop
fucom
outsl
out
out
adcb
mov
jnp
xchg
cmp
cmp
es
inc
es
nop
aaa
push
imul
adc
push
mov
into
sub
lcall
jmp
pop
addr16
bswap
and
dec
xchg
aam
mov
jl
jb
jo
sbb
jg
dec
or
std
popf
icebp
insl
pusha
rcl
inc
icebp
push
mov
push
jle
dec
inc
cmp
mov
daa
fisubrl
scas
sarb
push
ret
adc
cmp
jns
movsb
into
cli
sti
jg
in
jbe
mov
outsl
inc
cmp
mov
cld
cmp
fadd
lcall
data16
scas
lods
movsb
mov
sub
inc
roll
xchg
outsb
xchg
sbb
or
pusha
cmp
not
mov
or
xor
mov
add
and
mov
iret
mov
inc
cld
add
jmp
sbb
inc
mov
imul
call
outsl
pop
or
jae
cwtl
ss
xorb
xor
xchg
jns
test
push
aam
adc
mov
and
or
pop
mov
popf
dec
aam
jno
inc
test
adc
cmpsb
xor
and
scas
mov
mov
out
xchg
jbe
cltd
cwtl
jge
push
fisubl
fwait
fs
and
push
xor
repnz
icebp
pushf
stos
inc
sbb
enter
inc
and
jb
out
push
sub
cmc
mov
adc
popa
icebp
push
clts
mov
test
inc
mov
orb
sub
subb
stos
xor
enter
xor
xchg
pop
cli
cmp
pop
test
jp
pop
cmpsb
inc
jno
cmpsl
outsl
jns
cmp
daa
es
push
cmp
clc
dec
in
push
loopne
mov
fldcw
in
adc
add
shl
push
cwtl
cmp
lods
inc
inc
sub
rorl
inc
cmp
and
fdivs
out
in
insl
fcompl
dec
data16
aam
mov
and
cld
shrb
xchg
sbb
lret
push
push
cltd
imul
xor
jmp
arpl
inc
nop
das
push
imul
and
sbb
xchg
inc
lcall
ss
les
addr16
and
movsl
sub
inc
jno
stos
push
push
emms
inc
pop
stc
leave
inc
imul
daa
push
mov
imul
les
push
or
cmp
fs
insl
pop
mov
mov
push
push
mov
scas
idiv
or
in
mov
jg
cmp
adc
lahf
int
cwtl
xlat
mov
pop
je
push
call
xchg
pusha
stos
mov
and
adc
aad
cld
aaa
adc
jae
pushf
in
loop
sub
scas
mov
jmp
test
enter
add
lds
jle
xchg
les
enter
loopne
xchg
jmp
pop
arpl
rcr
movsb
jbe
pop
pop
cmp
jmp
inc
mov
sti
leave
xchg
frstor
inc
push
cld
cmpsb
rorb
ljmp
pop
fucomp
mov
js
add
inc
pop
push
jne
mov
mov
pop
sarl
scas
dec
inc
daa
cli
dec
out
xor
jg
xchg
push
jge
cltd
mov
sub
insl
mov
dec
outsb
adc
jnp
dec
std
and
sbb
xlat
outsb
or
stc
sub
shrb
sbb
ror
sub
cmp
pop
in
xor
pop
sub
repz
xchg
and
insl
dec
cwtl
push
in
jge
push
std
inc
mov
lods
xor
addr16
xchg
and
stc
push
sbb
and
std
call
inc
cmpsb
xor
cmpsb
cmp
shl
jmp
sarl
xchg
popa
in
pop
mov
xor
xchg
mov
lret
lahf
cwtl
outsb
inc
push
and
mov
cld
imul
sbbl
aam
or
in
punpcklbw
rolb
xchg
adc
sarb
push
xchg
popa
or
xor
mov
xchg
jnp
inc
mov
add
data16
stc
sub
cmp
cli
pop
movsl
addr16
mov
int3
fists
mov
fwait
jne
or
xchg
push
xchg
dec
mov
aas
jmp
add
adc
push
int3
pop
cmp
ds
mov
cs
jno
stos
stos
fs
incl
out
call
cltd
xchg
mov
add
out
cmpsb
stc
dec
mov
pop
sbb
cmc
out
outsl
dec
daa
and
add
add
push
mov
mov
mov
movsb
gs
or
cmp
xchg
pop
stos
xchg
cmp
xlat
dec
mov
push
roll
cmpsb
add
sub
mov
or
mov
mov
shrb
stos
dec
in
enter
fimull
pop
push
or
je
adc
into
aas
sahf
pop
cmc
cmp
shl
lcall
outsl
push
inc
lahf
mov
sub
icebp
popa
mov
insb
push
stc
push
or
test
fimuls
add
mov
test
inc
cmp
movsl
pop
mov
cld
xchg
cmpsb
dec
ror
mov
sub
xor
test
add
dec
cmpsb
hlt
les
inc
sarb
inc
scas
inc
jae
inc
jb
jge
or
int3
std
sbb
ja
aas
dec
sub
push
dec
xchg
mov
icebp
rcrl
sbb
outsl
insb
jle
sub
sti
push
mov
push
out
mov
lods
cmp
push
mov
dec
xor
out
gs
sbb
xchg
add
cmpsb
mov
lret
fcmovnbe
fadd
and
sbb
lahf
in
fs
fldenv
lock
mov
and
sub
js
lea
cwtl
addl
sbb
scas
je
jp
adcb
imul
sbb
mov
mov
repz
jbe
fxch
leave
xchg
shll
cmpsb
popf
sub
pushf
sahf
fwait
rorl
mov
adc
fstps
rcll
scas
fstl
pop
pop
aad
sbb
das
xor
sarb
adc
es
dec
lea
adc
jbe
ss
mov
fidivrs
push
addr16
or
fsub
push
lret
sbbb
cmp
pop
dec
add
sub
out
movsl
popf
fidivrs
jmp
or
mov
mov
data16
movb
push
enter
imul
jp
fsts
movsl
inc
push
dec
sub
leave
mov
subl
dec
enter
push
imul
xor
fwait
repnz
decb
inc
repnz
loopne
cmc
add
sub
xchg
lods
mov
mov
adc
xchg
popa
add
adcl
outsb
bound
mov
sub
push
movb
mov
xchg
xor
repnz
mov
or
clc
sti
lret
mov
cmpsl
int3
cmp
inc
in
jne
int
into
mov
mov
lock
aad
fdiv
or
dec
jno
stos
lcall
orb
sbb
orb
push
mov
pmulhuw
imul
cmp
bound
rorl
dec
imul
sbb
in
sti
mov
in
hlt
xor
sbb
push
cmp
ret
dec
sub
or
pop
scas
mov
cmp
push
sbb
jne
push
dec
daa
mov
cmp
mov
jb
repz
mov
and
xor
jae
dec
outsl
mov
scas
dec
scas
pop
xchg
ss
jo
jb
gs
pop
cli
call
insb
fdivrs
sbb
nop
sub
sbb
and
inc
mov
xchg
mov
clc
sbb
mov
xchg
adc
cmp
inc
mov
push
xchg
sbb
movsl
imul
in
and
mov
mov
sbb
push
rcl
and
es
jae
je
sub
pushf
incb
dec
jne
inc
gs
jp
mov
outsb
xchg
lahf
adc
xchg
in
ja
imul
push
inc
sub
push
pop
jo
xchg
or
out
movsb
test
or
xchg
xor
push
lahf
fmuls
leave
jo
sti
or
pop
cld
mov
enter
ret
sbb
mov
shl
mov
and
cs
ds
lcall
adc
xor
test
and
fsubrs
mov
repnz
add
cs
ja
sbb
mov
fcomps
rclb
inc
cli
movb
xlat
jne
mov
fwait
and
neg
test
loop
iret
cmp
push
int3
inc
xor
xchg
ret
lods
cltd
psllq
dec
mov
inc
jmp
push
jl
dec
fidivrs
mov
cmc
inc
popf
mov
dec
or
xchg
ret
cmp
cmpsb
addl
aad
or
or
dec
shll
mov
add
pop
lds
ret
cmp
int3
lods
dec
pushf
push
iret
adc
add
push
push
cmpsb
sub
pop
je
push
and
sub
daa
sub
out
hlt
jle
orl
mov
cmp
pop
cmp
add
mov
mov
ret
jne
cmp
mov
add
fmuls
sub
sti
cmpsl
jo
out
dec
sarb
pop
imul
imul
mov
stc
mov
sbb
jle
adc
xor
mov
lods
xor
insl
push
push
test
lods
fnstsw
popa
das
jno
mov
mov
cmp
test
mov
gs
add
leave
popf
pop
sti
addr16
push
and
xor
fnstcw
jge
add
pushf
adc
xchg
out
enter
lcall
frstor
xor
sbb
jge
jno
clc
cs
lds
add
loopne
lods
push
enter
or
lock
in
push
adc
cmpl
mov
add
in
test
xchg
icebp
je
scas
div
outsl
clc
pop
movsl
jne
fidivs
add
sbb
inc
xchg
mov
call
cmp
and
rorl
sbb
mov
leave
mov
lahf
lds
out
popa
mov
or
mov
cmp
xchg
lret
dec
dec
mov
rcl
insl
mov
jge
jae
push
cmp
stc
out
out
xor
pop
jle
cmp
sbb
inc
inc
mov
pop
je
test
push
mov
push
xor
and
aas
stos
inc
inc
pop
scas
jns
or
insb
xchg
jp
in
push
stc
loopne
sub
jmp
stc
mov
xchg
movsl
repz
pop
mov
push
ficoml
out
and
rcr
sti
jbe
and
call
mov
mov
sbb
out
popa
xchg
inc
jo
sbb
add
insb
retw
std
sbb
xor
fidivs
cli
lahf
and
mov
aaa
fcoml
outsl
adcb
push
fucom
sbb
push
mov
jb
jno
pop
mull
push
ja
add
dec
adc
mov
cld
cltd
pop
cmpsb
insl
mov
andb
ljmp
icebp
lock
pop
pop
jge
fs
jbe
sbb
insb
cli
aam
jecxz
mov
pop
mov
sbb
adc
cmp
sub
stc
es
and
push
xchg
sbb
lret
mov
add
std
add
and
cmp
js
sar
arpl
mov
inc
sbb
insb
jg
cmpsl
lahf
cmp
xor
jnp
jns
fimull
mov
jae
mov
sarl
movsl
loope
pop
sahf
imul
repnz
shlb
stc
daa
mov
add
mov
enter
add
ja
jb
jnp
das
xor
into
outsl
lahf
les
cmp
scas
cmc
xchg
mov
jecxz
xchg
inc
add
addr16
dec
cmpb
mov
cmp
test
dec
subl
mov
jns
inc
or
js
cmp
loop
mov
div
in
test
or
into
sbb
pusha
jnp
dec
mov
push
cltd
push
and
ss
xchg
inc
out
repnz
gs
adc
dec
imul
decb
into
into
mov
test
mov
pushl
mov
sbb
pop
jp
mov
testb
fldcw
adc
in
lods
jbe
mov
dec
pop
in
inc
test
ret
je
fsub
cmp
in
jmp
cmp
and
sbb
dec
push
popa
inc
clc
dec
jae
mov
imul
cmp
inc
jns
mov
dec
cli
add
or
jge
roll
xchg
ja
ror
jb
sbb
sub
nop
mov
dec
jl
xor
dec
inc
xor
imul
pusha
mov
sub
adc
xchg
add
shrb
stc
in
divb
lods
leave
repz
mov
adc
mov
jmp
sbbl
lret
ds
xor
pop
fisttps
gs
pop
outsl
and
dec
outsl
lds
mov
push
aam
push
mov
mov
push
pop
lret
xlat
adc
cmpsl
and
repnz
ds
mov
loopne
out
sbb
mov
cmp
jp
pop
outsb
mov
lret
int3
fs
enter
xchg
repz
fnstsw
enter
lea
lods
mov
add
stc
pop
cmp
xor
adc
lret
fwait
ljmp
leave
dec
sbb
add
sub
gs
outsl
inc
in
jp
dec
test
ret
daa
fildl
dec
fnstsw
cmp
sub
cwtl
ss
push
pop
aaa
popf
push
shlb
pop
mov
jl
pop
mov
sbb
pop
lret
fs
jg
add
mov
or
insl
bnd
mov
arpl
jo
fisttpl
cltd
adc
dec
testb
iret
xor
call
pop
mov
mov
pop
enter
sti
xor
and
mov
jnp
outsb
mov
repnz
ss
shl
adc
iret
std
push
out
bound
les
out
les
or
sbb
movsb
fimull
and
mov
or
pop
sub
jg
jbe
daa
sahf
mov
fstl
mov
pop
sub
mov
addr16
ja
inc
inc
mov
or
mov
in
dec
xchg
mov
sbb
sub
adc
out
test
mov
push
xlat
aad
dec
scas
and
mov
iret
in
in
movsl
nop
dec
adc
inc
rcll
inc
insl
aam
push
push
jbe
shrb
push
orl
jno
add
lret
mov
mov
movsb
and
movsb
lock
mov
fcoml
sbb
arpl
outsl
std
inc
push
bound
cmp
les
cmp
or
mov
cmpsb
or
fnstenv
mov
mov
adc
jo
sub
and
ds
dec
mov
decl
loop
ret
or
adc
sarl
arpl
lret
and
jl
sub
ja
jge
add
mov
fxrstor
into
roll
lods
mov
inc
mov
add
mov
jecxz
jmp
data16
and
pop
mov
int
xchg
in
push
pop
mov
xchg
shlb
stos
cmpsl
xchg
adc
adc
add
mov
inc
mov
out
aaa
popf
js
push
cmc
mov
std
cmp
movhps
negb
add
mov
sub
mov
pop
test
fcoml
repnz
divb
notb
dec
cld
out
mov
data16
push
xchg
and
inc
stos
mov
movsb
andb
xor
arpl
inc
cmp
cwtl
popf
cmpsb
add
testl
xchg
cmp
dec
lods
adc
and
into
sub
icebp
xor
dec
sar
movsb
adc
aam
cmpsl
test
test
sbb
cs
and
lock
xchg
sub
fwait
push
aad
push
pop
xchg
sbb
push
pop
enter
sub
jle
or
add
mov
jle
mov
pop
lahf
test
fistps
mov
loope
in
push
add
sahf
sbb
pop
leave
mov
sub
xchg
push
sub
adc
mov
and
lret
jbe
aaa
loopne
cmc
leave
or
mov
psllw
or
jns
mov
in
jecxz
dec
repnz
pop
jns
cwtl
data16
push
xchg
loopne
push
and
xor
inc
xchg
pop
loopne
popf
pop
arpl
add
cmpsb
mov
adc
icebp
push
lea
shl
and
jmp
rorl
or
aas
lret
dec
in
lock
mov
daa
out
xor
in
stos
ret
in
pop
lods
xchg
cld
rolb
inc
xor
jl
je
jmp
jne
dec
xor
dec
sbbb
scas
inc
adc
adc
pop
loope
lea
pop
jl
std
aas
sahf
mov
out
push
out
adc
push
aaa
xchg
outsb
jecxz
int
mov
pushf
in
pop
cmp
xchg
das
mov
test
sub
pop
push
jmp
das
push
leave
add
xchg
data16
lock
nop
cld
or
add
negl
or
sub
jbe
add
shll
mov
faddp
mov
cmpsb
inc
jno
sub
daa
mov
sbb
jmp
pop
loop
mov
sbb
pop
shll
leave
cmp
push
jg
xchg
icebp
fwait
jg
repnz
xchg
fiadds
fistpl
aaa
cmpsb
pop
jbe
inc
in
mov
int3
daa
jmp
mov
test
push
xor
lcall
mov
pop
ret
sahf
out
xor
negb
jae
arpl
inc
xchg
ret
test
outsl
or
adcb
outsl
push
fsubl
push
sub
dec
popf
add
adc
sbb
mov
xor
cmp
adc
inc
mov
fisttpl
push
xchg
hlt
mov
divb
and
scas
in
mov
xchg
adc
mov
repz
aam
das
test
out
inc
inc
test
pop
pop
xchg
jno
out
or
sub
cmpsl
sbb
xchg
int3
cmpsb
or
sbb
xor
iret
call
stos
mov
dec
adc
inc
sar
les
adc
mov
push
bound
pushf
sti
lock
xor
add
aas
lea
mov
fwait
loopne
fldt
data16
and
adc
mov
mov
jno
mov
cwtl
andl
lds
mov
sarb
cmpsl
mov
mov
or
ja
jp
push
ja
fsts
pop
and
xchg
mulb
push
in
bound
inc
fbld
enter
pop
mov
cltd
pop
mov
inc
xchg
fdivs
xchg
and
loopne
in
mov
mov
insb
add
xchg
scas
pushf
or
mov
cmp
xchg
and
push
in
mov
mov
sbb
into
imul
daa
test
cmp
cmp
xchg
flds
inc
jae
add
aad
cs
movsb
pop
dec
cltd
and
scas
mov
push
xchg
push
stos
lahf
pop
shrl
pop
mov
push
jno
xchg
jne
or
xchg
out
adc
or
frstor
mov
bound
xchg
out
mov
popf
mov
or
adc
dec
movsb
orb
mov
idivb
fwait
repz
cmpsl
test
jmp
repnz
or
xor
adcl
mov
insl
push
xchg
imul
test
mov
cmp
out
lds
lret
mov
sub
sbb
push
enter
fsubl
push
or
sbb
jns
sub
test
pop
xchg
inc
lea
rcll
es
or
mov
mov
insl
add
jnp
xchg
cwtl
cmp
orl
dec
jge
aaa
dec
pop
mov
loope
or
inc
or
xor
push
jne
cmp
enter
std
inc
jae
and
sub
jno
mov
push
add
cmp
clc
subb
add
setne
loope
push
and
sbb
and
popa
mov
xor
push
xchg
xor
push
mov
adc
cwtl
push
cld
push
iret
mov
lar
and
stc
push
sahf
out
fists
sub
out
out
sbb
pop
ja
in
inc
fcompl
jb
mov
cmp
popa
mov
movsl
mov
lret
shl
inc
pop
clc
pop
mov
mov
and
hlt
add
mov
ds
out
mulb
inc
pop
int
mov
add
out
loop
xchg
xchg
inc
lea
jns
lret
popa
int
bnd
jne
mov
lahf
cmp
xchg
in
and
xlat
ret
int
sbb
adc
ret
or
in
shlb
jb
or
repz
bound
lods
push
cmp
jle
sub
shll
jmp
int
push
adc
outsb
imul
dec
sarb
mov
xor
movsb
cmpsl
roll
and
or
inc
add
ja
imul
xor
xor
jnp
mov
ret
dec
into
and
movsl
ret
loopne
jmp
sbb
xchg
nop
mov
movq
loopne
jae
xchg
outsb
scas
push
cld
in
push
insb
ss
add
mov
dec
lcall
loopne
jmp
mov
inc
pusha
fsubrs
stc
idivb
imul
pusha
mov
add
xor
ljmp
aaa
in
insb
pop
jmp
mov
lea
or
xchg
jecxz
stos
cmpsb
lret
jmp
arpl
adc
sub
scas
cmpsb
mov
mov
rcr
cltd
push
push
outsb
je
jl
outsb
pop
add
ds
sbb
or
movsl
pop
jge
inc
jbe
out
insb
in
call
inc
test
les
lds
dec
fimuls
cmpsl
mov
out
push
add
or
xchg
neg
or
pop
xchg
add
scas
addl
shlb
cwtl
pusha
or
and
push
mov
add
sbb
adc
out
mov
scas
dec
xor
or
adc
push
mov
hlt
out
cld
in
gs
pop
daa
gs
mov
je
xor
test
fldcw
movsb
mov
es
fimull
loop
scas
cmp
loopne
out
lret
pop
sahf
stos
mov
es
jae
adc
xchg
movsl
pop
add
inc
mov
jmp
ljmp
cmp
mov
xor
or
lcall
add
aad
jle
test
data16
popa
adc
dec
sub
test
into
cmp
xor
add
mov
cmpsl
js
sub
addr16
jl
mov
add
jecxz
mov
pusha
sub
daa
sbb
mov
clc
pop
xlat
dec
test
push
in
or
jmp
out
in
shll
dec
lea
ficoms
sub
gs
mov
insb
mov
mov
lock
dec
and
das
cmp
stc
aad
jmp
pushf
fbld
adc
loope
adc
pop
jle
into
inc
mov
push
mov
daa
cltd
cltd
test
adc
cmp
in
pop
mov
sbb
imul
adc
addr16
insb
rcl
loop
popf
into
andb
loope
je
sbb
push
bound
dec
pop
push
xor
push
or
cld
mov
inc
sarl
jae
sahf
fldt
sarb
fst
je
test
insb
and
xchg
push
loopne
cld
loopne
mov
xchg
push
imul
addr16
sbb
mov
mov
stc
mov
adcl
mov
or
inc
out
iret
sub
and
jbe
mov
fsubl
jne
xor
out
inc
aam
adc
mov
mov
cmp
mov
pop
lods
mov
mov
push
jle
call
ds
sub
enter
jbe
xor
adcl
inc
stc
add
mov
inc
lods
jmp
hlt
push
inc
ss
add
adc
ret
push
add
scas
cmc
xchg
fidivs
mov
in
scas
in
out
xchg
add
mov
loope
push
pop
mov
hlt
pop
ret
or
and
lcall
fisttps
adc
imul
or
xchg
cmp
fwait
and
mov
fcmovnu
outsb
ret
mov
mov
fnstcw
test
mov
mov
cmpsb
and
xor
mov
pop
lret
ret
or
test
mov
and
aad
xor
stc
ja
or
leave
push
daa
push
and
testl
push
mov
data16
lret
mov
int3
int
lret
adc
mov
add
test
lods
data16
movsl
mov
aaa
inc
push
es
scas
aad
mov
add
dec
xchg
mov
fs
cmp
pop
or
cmove
ljmp
lret
lret
lcall
pop
inc
and
inc
ret
mov
es
popa
fisttps
inc
add
sub
mov
subb
lahf
movsl
andb
or
pop
mov
sub
cmp
popa
cmp
sbb
or
iret
mov
xchg
inc
or
fdivs
inc
inc
xchg
or
xchg
fildl
xorl
popf
xchg
out
mulb
adc
jp
push
test
outsb
imul
test
shll
sub
ss
fmull
mov
imul
outsl
xor
aad
cmp
sahf
dec
ret
push
fs
js
loopne
imul
or
addr16
insl
sub
jg
nop
test
xchg
aas
cmp
filds
dec
xchg
add
xchg
xchg
sub
aam
xor
pop
lock
mov
xor
or
aas
leave
adcb
dec
push
sub
push
jbe
push
pop
push
inc
push
sub
fs
push
and
jbe
xor
sar
fwait
iret
lods
pop
sbb
mov
jge
adc
sub
cs
or
ljmp
dec
into
pop
mov
clc
popf
or
test
inc
das
int3
out
mov
jecxz
fimuls
outsl
fdivp
xor
or
xor
pop
adc
mov
dec
cmp
int
popa
call
sbb
mov
push
pop
popf
adc
sub
testl
out
pop
pop
daa
jo
sbb
sbb
cltd
fs
xchg
pusha
push
cmpl
dec
inc
imul
dec
aad
scas
xor
or
inc
out
lods
cmp
mov
ds
pusha
addr16
xchg
xor
aaa
mov
inc
or
and
iret
je
mov
mov
lret
mov
or
dec
add
xchg
clc
adc
jb
adc
mov
lret
lods
aam
pusha
je
mov
sbb
js
xchg
mov
in
lods
or
mov
xor
je
ficoml
xor
push
sbb
outsb
gs
mov
cli
scas
cmp
insl
lret
jle
outsb
pop
pop
xchg
shrl
dec
aas
outsl
mov
push
sbb
pusha
fwait
push
push
aam
mov
xchg
sbb
pusha
cmpb
mov
fidivl
insl
xchg
jns
test
push
xor
rclb
pop
in
push
iret
je
fstp
fs
out
cltd
fucom
sarb
or
xlat
sub
loop
fs
jne
push
fstpl
or
movsb
in
xchg
pop
fidivs
imul
mov
mov
fldt
fidivrl
test
add
out
xor
mov
jo
movsb
pop
sub
jecxz
sahf
inc
add
xchg
pusha
out
pop
push
pop
add
inc
imul
pop
test
outsb
cmp
ja
loop
cmpsl
jae
scas
xor
cli
stos
and
xor
ja
add
or
mov
adc
out
mov
arpl
inc
out
add
xor
iret
xor
sub
adc
movsb
fildl
imul
pop
push
loop
loope
int
dec
stc
pop
subl
hlt
jecxz
ljmp
sub
mov
cmp
stos
std
dec
xor
jmp
push
sub
call
fisttps
movsb
mov
xchg
hlt
pop
sub
jnp
daa
sbb
imul
adc
out
cmpsl
jns
subb
mov
popa
dec
fwait
mov
jo
dec
scas
aas
andb
xchg
mov
push
data16
push
mov
in
mov
and
xor
repz
test
push
mov
shll
xchg
clc
mov
and
xlat
outsb
gs
xchg
jae
sbb
cmp
inc
popf
mov
aaa
hlt
fisubrl
xchg
stos
outsl
mov
mov
push
push
add
push
testl
hlt
int
xor
xchg
mov
jmp
in
movsb
hlt
xchg
std
test
inc
out
call
pushf
fldenv
mov
sub
addr16
jle
mov
insl
mov
and
jbe
or
cmp
aaa
mov
insb
adc
ret
cld
mov
push
mov
shrl
pop
outsl
fmul
adc
jecxz
mov
xor
out
fcmovb
scas
adc
mov
xchg
pop
jne
cmp
mov
enter
insl
ret
sub
mov
cmp
xchg
sbb
cmpsb
push
and
pop
jl
cs
out
ljmp
out
data16
ret
enter
sbb
push
push
fldenv
adcb
int3
ret
mov
add
fwait
pop
jmp
jno
sbb
out
mov
or
mov
pop
lahf
mov
fcoml
xchg
shlb
les
jl,pt
inc
adc
cmp
xchg
mov
in
push
jl
insb
lahf
sbb
xor
sbb
aaa
cmp
je
and
icebp
xor
and
pop
fwait
adc
xchg
out
jmp
or
ja
dec
pop
dec
xchg
xor
insb
imul
cli
mul
xchg
mov
es
adc
lret
cmp
inc
sub
popf
icebp
test
ljmp
jge
pop
jno
pop
sarb
xchg
adcl
rcrl
fabs
xchg
lods
aam
paddd
loope
out
jno
ja
push
xchg
test
icebp
imul
mov
dec
and
xlat
out
lahf
repz
stc
int
inc
push
pop
pop
cld
scas
ja
jmp
and
daa
inc
fidivl
or
jge
cwtl
insb
rcr
sub
ret
outsl
or
insl
xor
jmp
in
int
adc
add
sub
sub
sub
cmp
dec
sub
iret
mov
mov
fcmovne
mov
jae
add
cli
jns
mov
js
ret
dec
sahf
out
or
lock
jge
sbb
jns
xchg
inc
pop
repz
shrb
dec
scas
xor
xchg
roll
sbb
in
or
popa
pop
adc
gs
sbb
ret
sub
adc
loop
xchg
and
xorl
sbb
jno
inc
push
inc
sbb
mov
sub
jnp
test
movsb
and
into
pop
jecxz
xor
sub
sbb
or
push
roll
shll
inc
or
pusha
dec
jb
lock
mov
push
popa
enter
push
xchg
mov
js
jecxz
jle
lahf
add
fld
hlt
mov
jecxz
adc
mov
ficomps
filds
mov
inc
adc
mov
ss
scas
out
xchg
loop
cs
jge
mov
cli
mov
hlt
adc
xchg
popf
mov
mov
dec
data16
pop
xchg
or
cmc
cmp
cmp
jecxz
cs
pop
mov
pop
pop
outsl
or
adc
dec
inc
pop
repz
or
and
cmp
movsl
test
xchg
test
sub
scas
loop
outsb
cli
insl
scas
lcall
popa
add
mov
rclb
mov
xor
mov
xor
enter
xchg
andb
jnp
clc
sub
lods
mov
mov
loop
into
jecxz
xlat
dec
xlat
ljmp
and
icebp
cmc
push
mov
inc
jl
cwtl
sti
adc
inc
cs
xchg
mov
popa
push
lea
dec
sub
push
mov
aaa
hlt
sub
sub
pushf
xor
push
xchg
xor
flds
sub
int
inc
inc
add
adc
test
or
rorb
rorb
xchg
iret
rorb
lods
movsb
push
push
cld
bnd
dec
sarl
cmp
jge
jo
aas
clc
gs
test
rolb
cmp
fisttpl
rcl
xchg
iret
sub
adc
fidivrs
pop
add
push
mov
pop
scas
jo
dec
adc
or
pop
lds
setne
loop
fs
xor
jmp
pushf
mov
out
xchg
out
sub
mov
xor
in
test
jnp
cmp
xorb
aam
jmp
and
outsl
loop
jbe
push
xchg
xlat
and
aaa
cmp
rclb
test
in
mov
jmp
xchg
pop
daa
ret
sbb
xor
pop
adc
loop
mov
bound
sub
or
pop
scas
jb
push
outsb
pop
je
sub
dec
loop
enter
jge
xchg
push
add
icebp
jns
inc
pop
and
arpl
fsubl
mov
popa
ds
fs
sub
pop
lods
jbe
adc
repz
movsl
lret
push
xchg
stc
out
rcll
push
mov
add
sub
pop
sbb
and
xor
inc
test
jo
and
xor
shll
mov
add
rclb
loopne
add
dec
ret
cmpsb
adc
sbb
in
scas
daa
popa
mov
dec
push
imul
jbe
cmp
sub
pop
dec
stc
push
pop
xchg
stos
xchg
and
add
shll
adc
jmp
jge
xchg
add
mov
mov
cld
inc
std
push
mov
fdivs
loop
gs
and
in
fdivl
in
dec
roll
xor
and
inc
pop
mov
or
pop
lds
inc
pusha
rolb
sub
add
mov
push
les
xor
sbb
mov
cmpl
pop
push
fxch
lret
or
scas
addr16
es
xor
in
cmpsl
cmp
ret
pusha
add
mov
sar
push
mov
xor
push
dec
lcall
adc
mov
dec
and
in
jne
imul
jbe
fstpt
jl
test
sub
xchg
adc
iret
mov
lahf
add
push
xor
in
bound
sar
inc
sub
cmp
or
es
repz
hlt
fnstenv
mov
cmpsl
inc
mov
jae
mov
divl
fldcw
adcl
cmp
icebp
jg
pop
pop
sbb
fs
in
cmpsl
rcl
dec
and
dec
cmp
push
pusha
xchg
sub
clc
inc
fidivrs
jne
outsl
scas
repnz
xor
shlb
lock
add
jg
push
fidivrs
lret
loopne
scas
inc
pop
in
xor
loope
ret
sub
xor
std
fnstcw
pop
cmc
testl
shll
addr16
jo
mov
mov
xchg
std
inc
xchg
aaa
add
or
jge
sbb
sub
fistpl
jns
dec
iret
insb
mov
int
cmpsl
ss
daa
cmp
pop
inc
stos
mov
dec
loop
mov
mov
fstpt
stc
push
and
xorb
add
sbb
dec
lahf
ja
shlb
push
mov
nop
push
sbb
in
xor
jecxz
adc
lea
jbe
mov
hlt
insl
dec
sbb
xor
adc
jmp
dec
sub
out
inc
into
push
add
mov
out
lock
jg
loope
push
int
cltd
sub
xchg
adc
daa
daa
dec
loope
mov
in
testb
mov
add
sub
jnp
lea
cmpsl
sub
dec
sar
xchg
sahf
inc
pop
sbb
lcall
inc
aaa
sbb
icebp
pusha
push
and
mov
fdivr
add
insl
xchg
jno
ja
jno
enter
xchg
and
hlt
mov
mov
lods
mov
nop
adc
icebp
mov
push
pop
xor
add
cli
mov
into
scas
mov
push
adc
or
fcmovnu
or
outsl
inc
sbb
xchg
mov
in
lcall
es
hlt
sarb
or
cmc
dec
adc
cmp
je
imul
add
repnz
gs
and
jno
stc
pop
mov
shr
out
repz
cs
adc
pushf
xchg
dec
xor
scas
je
inc
mov
or
mov
xor
sarl
pop
in
push
dec
cmc
push
jle
and
mov
adc
pushf
jg
jge
scas
dec
shlb
loop
mov
push
sbb
ja
jmp
gs
cli
push
testb
das
push
in
in
mov
test
adc
icebp
subl
fsubrs
rcrl
mov
imul
shll
mov
push
jle
cmp
js
gs
push
rorb
fsubl
mov
add
inc
or
fwait
xor
dec
inc
mov
pop
push
mov
push
dec
or
inc
xchg
adc
mov
or
mov
add
jmp
push
or
mov
mov
adc
iret
dec
inc
mov
cmpsb
dec
orl
push
jmp
ja
mov
in
test
mov
push
je
shl
or
jg
sub
cs
out
stos
cmc
jg
fs
push
pop
or
sti
mov
and
add
push
or
cwtl
pop
mov
aam
add
jb
shlb
inc
adc
lcall
mov
push
popf
mov
int
rcrb
stos
xor
stc
das
jge
and
clc
inc
cmp
mov
xchg
es
sbb
ds
sbb
or
sub
nop
in
lods
jne
bound
dec
adc
popf
cld
adc
clc
pop
pusha
dec
mov
dec
test
sbbl
adc
enter
ret
sar
sarb
push
test
adc
pop
sbb
out
xor
mov
fnstsw
push
pusha
xchg
loop
push
test
loope,pn
sub
sub
mul
jg
stc
pop
dec
inc
dec
clc
jb
dec
inc
lahf
clc
stos
es
punpckldq
in
and
faddl
jmp
cli
xor
mov
and
jns
out
sbb
jge
popl
cmpsb
or
ret
das
fwait
adc
pop
ret
or
adcb
scas
jae
jecxz
stos
dec
cs
inc
sbb
or
adc
jae
cmp
inc
jg
inc
xlat
adc
or
roll
jg
aas
notl
pop
jns
notl
loop
cmpsl
lret
fldenv
in
pop
add
loop
mov
pop
out
push
adc
xor
adc
test
push
xor
xchg
pop
lahf
add
movsb
cmpsl
movsb
ss
jmp
dec
xchg
ljmp
lock
mov
pop
mov
daa
les
cwtl
rolb
xor
push
shl
fstp
int3
in
jno
ror
popa
sub
repz
dec
and
and
cli
jb
lret
xor
push
scas
imul
test
jmp
jl
shlb
xchg
lcall
es
das
rcll
pop
jge
dec
cmp
addl
jne
das
lea
mov
lods
mov
lods
mov
sbbb
sbb
sbb
movsbl
xor
inc
pop
jo
ja
mov
xor
inc
cld
push
notl
mov
pop
sub
jp
ja
lahf
mov
fwait
push
ret
addr16
lods
sahf
inc
jo
cli
in
int3
andl
lods
push
ja
mov
imul
lock
dec
test
andl
negb
test
inc
shrb
mov
mov
outsb
fstp
movsl
movsb
and
and
scas
dec
scas
mov
sub
adc
or
or
cmp
mul
ret
jp
mov
adc
dec
aam
adc
dec
xchg
jg
cs
adc
add
cltd
je
inc
ljmp
add
dec
cmp
xchg
out
mov
cmovae
arpl
mov
cmpsb
jns
js
xor
cwtl
xchg
inc
xchg
jge
dec
xor
mov
nop
cltd
xchg
int3
sub
aaa
pop
out
cltd
adc
mov
add
mov
repz
sub
xorl
xor
xchg
loop
adc
inc
ss
lock
shl
sub
es
rorl
sbb
int
sbb
jae
out
mov
mov
xor
fists
or
xorl
pop
push
adc
xor
cmp
clc
lods
mov
mov
ret
sahf
sub
mov
mov
movsl
mov
fucom
repz
ja
cld
dec
das
pop
int
xchg
outsl
in
icebp
ja
sbb
lea
jns
inc
pop
shll
cmp
jns
pop
sbb
dec
icebp
cmp
test
imul
push
mov
sahf
imul
leave
mov
cmp
hlt
mov
mulb
pop
out
inc
push
pop
jns
jnp
rol
cmp
and
hlt
pop
cmp
dec
rol
cli
push
lods
movsl
stos
inc
je
out
xchg
sub
popa
cmc
and
lcall
in
int3
jl
clc
mov
pop
inc
push
insl
or
fwait
mov
xor
pusha
adc
stos
decb
add
fcoml
out
insb
xchg
iret
sahf
push
push
adc
adc
dec
cs
pop
push
and
add
es
jo
mov
scas
andb
xor
cmp
pop
dec
lcall
stc
adcb
jg
stos
scas
test
xor
dec
xor
mov
cmp
popa
inc
pop
arpl
ljmp
mov
mov
int
mov
aad
cltd
mov
incb
inc
jle
int3
sub
xor
sbb
inc
xchg
push
and
mov
and
mov
andb
mov
insb
inc
lods
sahf
mov
dec
andb
fcmovnu
cmp
sbbb
gs
jae
jl
rorb
adc
add
cwtl
jl
daa
dec
sarl
subl
adc
adc
jmp
pop
aad
out
fildl
lcall
les
push
leave
jno
jne
push
cmp
nop
jge
fucomi
jp
push
pop
jl
mov
addb
cmpsb
int
mov
fsubr
mov
in
cli
or
adc
pushf
cwtl
push
sahf
mov
aaa
popf
jge
cmpsl
mov
inc
jge
cmp
fcos
lcall
adc
inc
clc
sbb
push
out
popf
mov
loope
mov
sbb
pop
add
mov
leave
ljmp
push
cltd
adc
mov
addb
cmp
adc
sub
inc
leavew
sub
adc
dec
repnz
push
std
aas
out
mov
out
repnz
pop
lods
fcompl
insl
xchg
ljmp
mov
lcall
insl
cmp
addr16
push
cmpsl
fidivrl
out
clc
cmc
les
imulb
int
aam
inc
lahf
incl
and
lret
xchg
dec
push
decl
inc
or
sarb
mov
fs
arpl
inc
lods
fdivr
xchg
ret
xor
mov
cmp
daa
xor
retw
cmp
fisttpl
lods
jns
push
pop
ja
adc
xor
aaa
pusha
pusha
cwtl
xchg
insl
scas
sbb
aad
jns
popf
jle
cmpsl
cmp
cltd
cmp
sbbl
fdivl
xchg
lods
pop
negl
lds
lret
in
lea
ret
cmpsl
aaa
and
insb
adc
clc
jb
add
scas
cwtl
imul
fisubl
dec
fidivl
out
sub
inc
lods
ss
xchg
mov
cmp
jg
aaa
js
mov
leave
mov
mov
xchg
aaa
ss
jnp
xchg
sbb
stos
jle
iret
or
mov
scas
addr16
iret
rclb
icebp
push
imul
mov
mov
mov
inc
stos
cld
dec
jmp
out
mov
push
jne
inc
rcl
add
cmp
jecxz
inc
outsb
jns
push
pop
push
inc
or
insb
mov
or
and
pop
xlat
stc
sbb
xchg
xchg
mov
mov
int
insb
xchg
push
adc
les
mov
cmc
or
test
outsb
mov
test
sahf
lods
adc
movsl
dec
mov
mov
jmp
pop
mov
xchg
cmp
std
out
push
nop
mov
xchg
xchg
push
popf
in
sbb
js
push
clc
outsl
or
push
xor
dec
rorb
adc
or
sti
mov
nop
mov
clc
lea
inc
sahf
sbb
imul
lret
add
xor
xchg
imul
and
les
push
mov
sahf
cs
ret
sahf
sub
inc
cltd
xor
add
cld
dec
mov
jge
pushf
xor
push
dec
stc
dec
push
add
xlat
pop
jno
pop
jns
add
add
adc
cmc
mov
mov
int
movsb
mov
sbb
or
cmp
sbb
bound
movsl
hlt
sbb
jmp
mov
pop
in
sub
xchg
movsb
adc
dec
insb
lcall
lods
outsb
adc
mov
jmp
mov
lock
inc
icebp
xchg
outsb
movsl
pop
jb
cmp
add
pop
pop
jne
call
fidivrl
xchg
mov
mov
push
jno
enter
test
sub
add
jecxz
sub
aad
inc
ljmp
inc
leave
pop
cmp
ret
movsl
popf
out
daa
into
enter
push
rorb
std
jmp
cwtl
fs
rclb
incl
xlat
mov
out
xchg
pushf
imul
inc
inc
int
jge
adc
das
insl
xor
inc
dec
stos
mov
lds
outsb
push
stc
fadds
push
fucomp
cmpsl
xor
sub
rcll
adc
xchg
push
in
pop
test
stc
add
lcall
and
ljmp
jmp
jb
jo
lods
dec
dec
adc
stc
cmpsb
push
das
jne
inc
adc
xor
xor
cmp
fisubrl
int
fwait
dec
and
xor
push
jp
in
repnz
dec
lods
mov
or
adc
arpl
imul
outsb
in
test
fsts
loop
sti
icebp
xor
scas
adc
daa
out
mov
xor
popa
cwtl
aas
shrb
inc
rol
mov
in
mov
sub
sub
icebp
rol
pop
insl
idivb
dec
flds
push
dec
mov
pusha
stos
sbb
inc
xchg
mov
pushf
ljmp
into
xlat
mov
repz
mov
or
stos
add
add
mov
inc
mov
jp
mov
inc
mov
mov
lock
or
xchg
push
fstpt
sub
or
sahf
mov
imul
jg
xor
xchg
add
sbb
aaa
es
pop
mov
and
inc
mov
imul
push
popa
dec
movsl
mov
fs
aad
jne
into
in
cli
inc
bound
repz
dec
push
mov
shl
and
jecxz
pop
fnstsw
adc
mov
mov
jmp
push
das
out
jmp
cmpsl
inc
ftst
daa
insb
pop
mov
and
or
test
idiv
insl
xor
mov
gs
xchg
push
or
mov
gs
rcrl
out
ss
sbb
mov
mov
jp
push
push
roll
es
fcomps
sub
mov
pop
cwtl
imul
or
bnd
xchg
mov
mov
inc
xlat
out
jle
fsub
popa
and
xlat
repnz
mov
or
xchg
hlt
inc
outsl
cmpsb
mov
sbb
data16
sbb
lea
mov
cmp
das
sti
inc
mov
xor
insl
ret
stos
jl
enter
push
dec
es
stos
jmp
cli
cmpsb
jg
in
mov
ficomps
enter
mov
jne
xchg
lcall
jo
repz
ret
insl
jb
inc
fnsave
mov
sub
or
mov
fnsave
xor
out
push
jbe
lods
sbb
mov
lock
leave
pmullw
sub
shll
pop
gs
mov
mov
dec
movsl
jnp
pop
add
and
pop
clc
cmpsb
xlat
adc
dec
inc
mov
lock
fwait
or
adc
sbb
aas
outsl
add
dec
test
aam
mov
sub
mov
sub
loop
mov
int3
mov
pop
decl
inc
cmp
jp
cwtl
add
nop
sbb
iret
pop
cld
hlt
cmpb
pop
push
jo
addb
dec
shll
jmp
sub
push
xchg
cltd
xchg
in
fs
ret
push
call
leave
xchg
fsubrl
sub
mov
pop
cli
push
jno
inc
mov
fldcw
mov
stc
push
in
mov
push
mov
jns
sub
repnz
and
loop
imul
mov
lahf
sbb
pushw
dec
loope
mov
sub
and
adc
cmc
stos
aam
push
or
xor
jecxz
and
repz
lock
movsb
decb
mov
cmp
pop
add
inc
aam
leave
lahf
inc
les
pop
cmp
mov
cld
xor
gs
or
insb
inc
mov
orb
cmpsl
sti
pop
out
jns
inc
cli
stos
pusha
push
xor
outsb
inc
popa
xchg
xchg
stos
out
call
pop
push
loop
scas
and
or
jbe
jb
arpl
mov
movsl
test
imul
iret
cmp
mov
je
lcall
bound
movsl
sub
and
pop
push
fisubrs
push
sbb
outsb
subl
mov
fucompp
loope
xchg
rorl
mov
sub
ja
lcall
inc
and
in
inc
stos
stos
lret
xorb
cmp
hlt
enter
das
sbb
mov
jmp
fadd
loopne
and
scas
dec
pop
sub
fisttps
ljmp
jl
jle
lds
mov
xchg
ja
push
push
imul
cmp
jne
mov
std
test
xchg
mov
sub
jl
sbb
je
mov
inc
push
es
or
jl
rorb
inc
mov
add
pop
jl
imul
cwtl
xor
stos
and
mov
je
icebp
dec
mov
xchg
imul
lods
loope
sbb
mov
push
pop
test
and
imull
shrl
mov
mov
mov
adc
jecxz
mov
test
xlat
mov
mov
imul
xorl
fbstp
inc
outsl
inc
inc
mov
not
sahf
pushf
imul
jae
xor
add
or
adc
movsb
mov
popa
and
mov
lds
pusha
rcl
iret
or
scas
push
aad
iret
dec
and
mov
or
test
scas
aaa
roll
mov
lret
pop
and
dec
adc
std
and
xchg
stos
adc
in
pop
test
outsb
cmp
mov
mov
adc
das
imul
inc
mov
adc
xorl
sti
pop
ret
jae
imul
mov
jl
rcr
jmp
dec
repz
rcll
popf
andb
xor
xchg
sahf
popa
mov
cmp
loope
test
rorb
inc
fadd
popf
popf
and
and
push
inc
fcoml
pop
add
sub
sahf
outsb
push
andb
xor
sub
xchg
int3
andl
das
imul
inc
mov
inc
loopne
repz
test
ja
popl
mov
or
insb
cmp
mov
insb
adc
jl
inc
std
repz
cli
arpl
aad
out
call
push
cmp
out
imul
jo
sarl
xchg
aam
clc
loope
mov
dec
pop
push
cltd
push
or
in
idivb
ficoml
cmp
cmp
cmp
stos
hlt
repnz
pop
push
and
jecxz
.byte
.byte
adc
mov
add
pop
or
sahf
mov
and
add
add
adc
adc
inc
mov
inc
repnz
mov
add
in
int
pop
or
mov
push
sti
js
pop
int
adc
jle
aad
xor
sahf
cs
sub
push
adc
inc
mov
pop
je
xchg
xchg
in
and
outsl
test
andl
daa
adc
fisubrl
test
fucomi
cmp
xor
sub
enter
mov
mov
imul
inc
stc
mov
pusha
mov
cmp
add
arpl
pop
mov
adc
add
aam
jne
mov
sub
rclb
icebp
xchg
add
xchg
inc
xchg
xor
loop
movsl
sahf
jb
lea
lods
adc
fadds
jecxz
clc
pop
xchg
dec
jbe
jmp
sti
mov
aas
into
adc
test
loopne
ret
inc
dec
cmp
lds
push
jle
xchg
into
mov
in
jle
dec
pop
inc
push
add
sarb
and
dec
hlt
xchg
xor
mov
mov
push
repz
in
adc
sarb
mov
pop
sub
add
cmp
push
and
dec
add
and
jmp
pop
and
pop
lea
stc
push
push
xor
insb
mov
and
cmp
and
stos
cmc
loopne
stos
mov
aad
adc
push
adc
or
in
test
in
or
int
mov
pop
xor
das
in
pop
icebp
std
addr16
lds
cli
cmpsl
inc
sub
icebp
hlt
mov
mov
in
sub
mov
movsb
subl
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
ret
or
das
cmp
sbb
inc
out
aam
jb
call
pop
insb
xor
xchg
pop
add
and
pushf
movsl
pop
pop
mov
add
mov
xor
jmp
fs
xchg
ror
into
out
cld
test
or
repz
ja
jmp
fildll
push
xlat
les
cs
pop
gs
jmp
loope
hlt
sbb
fidivrs
or
test
call
push
mov
and
inc
push
nop
mov
mov
mov
sub
or
add
jp
mov
cmp
jne
mov
jmp
push
and
fstps
fwait
cmp
jbe
in
add
mov
jmp
pop
mov
es
mov
roll
clc
xchg
mov
sub
and
xchg
pop
das
add
mov
rol
jo,pt
es
add
out
fwait
lcall
add
mov
jle
ss
test
ljmp
pop
xchg
pop
das
add
fcoms
jb
and
dec
sub
jp
push
and
xor
dec
lock
enter
xor
inc
push
mov
dec
das
add
fisttpl
inc
jo
ja
fmuls
lahf
sbb
cmp
movsb
imull
add
shrb
inc
xor
jb
icebp
fcmove
mov
sbb
xchg
sub
clc
pop
aam
icebp
jl
iret
sub
lret
jl
leave
test
sub
mov
xchg
mov
or
sub
dec
fmul
pop
popa
jo
push
loopne
mov
or
movsb
pop
or
push
jns
push
pop
pop
push
xchg
cmp
test
or
and
xchg
mov
adc
imul
and
popf
andl
test
sarl
pop
adc
scas
dec
arpl
and
sarl
push
fwait
mov
fisubl
lea
xor
enter
enter
cld
cmpsl
mov
scas
jg
sub
pop
mov
and
pop
lea
roll
ret
pop
out
test
sub
imul
xorb
loop
and
jnp
push
icebp
jge
test
push
inc
pop
bound
sub
mov
xchg
pop
mov
mov
inc
and
sarb
mov
cmp
std
cmc
push
cmp
lret
loop
daa
mov
test
inc
les
aaa
idivl
or
and
mov
outsb
cmpsb
arpl
jnp
mov
clc
outsb
mov
xor
pop
loop
pop
mov
xchg
int
out
push
cwtl
loopne
add
rolb
pushf
int3
mov
leave
loope
fs
xchg
aas
pop
push
pop
pop
sbb
xchg
push
cld
cwtl
aas
sti
lahf
pop
ficomps
iret
clc
insb
fcomps
cmpsb
cmp
call
fstpl
pop
pop
ljmp
cmp
popf
push
leave
mov
add
adc
jae
add
sti
cmp
jge
in
cltd
sti
leave
loope
sti
leave
loope
jne
sub
je
js
pop
xchg
cbtw
repz
cltd
sti
lds
xchg
enter
mov
dec
cmpsl
xor
loope
out
frstpm(287
test
fwait
mov
das
sbb
es
xchg
fldt
pop
or
lcall
loope
or
jae
and
loope
lahf
je
cltd
sti
xor
cltd
pop
leave
loope
and
fstpl
cld
or
or
loope
inc
mov
fsubl
sti
cmp
xchg
cld
leave
loope
lahf
js
cltd
sti
popf
dec
add
leave
pop
pop
mov
jmp
sub
cmp
push
mov
cmp
pushf
xchg
cmp
xchg
sti
leave
test
aas
test
xchg
cmp
xchg
sti
leave
pop
push
sbb
fwait
nop
pop
leave
loope
mov
loope
inc
or
cltd
sti
xor
dec
mov
mov
dec
adc
loope
imul
xchg
out
ficompl
mov
je
cltd
sti
stc
test
push
loope
shll
fwait
mov
and
fwait
nop
pop
leave
loope
loope
test
repz
jmp
pushf
jle
pop
push
loope
xchg
jmp
sub
cmp
mov
arpl
popf
sti
leave
mov
or
fmull
out
test
mov
popa
cwtl
sti
pop
fmull
sub
cwtl
sti
leave
loope
push
leave
loope
sti
leave
loope
int3
xor
sub
inc
push
cmpsb
cs
nop
jp
and
cmp
ja
pushf
cltd
stos
ret
cmpsb
dec
icebp
xchg
push
mov
xor
insb
fdivr
ja
pushf
cltd
stos
ret
cmpsb
dec
mov
loope
push
mov
xor
mov
out
mov
pop
mov
adc
ja
frndint
ja
pushf
cltd
stos
ret
cmpsb
dec
lods
and
out
movsb
mov
adc
loope
sti
pop
dec
adc
ja
frndint
ja
pushf
cltd
stos
ret
cmpsb
dec
mov
push
mov
loope
sti
pop
dec
adc
ja
mov
ja
pushf
cltd
stos
ret
cmpsb
dec
mov
dec
xchg
jno
adc
fwait
jo
loope
loopne
ret
mov
out
sti
leave
out
mov
pop
mov
adc
ja
scas
enter
mov
cltd
jno
dec
xchg
jno
enter
fwait
mov
loope
lahf
jo
and
gs
xor
mov
add
iret
jg
xchg
add
test
clc
or
inc
stc
add
mov
adc
movsb
popa
and
jno
leave
loope
sti
xor
cltd
sbb
add
or
push
lcall
scas
cmp
leave
test
cltd
rcr
pop
les
lret
xchg
sti
leave
lcall
cmpl
cltd
lret
xchg
xchg
sti
leave
leave
mov
leave
loope
mov
enter
jge
sub
mov
cltd
sti
xor
js
jg
xchg
pop
pop
mov
loop
ljmp
jle
fisubrs
mov
pop
pushf
pop
bnd
pop
mov
fcoml
cltd
mov
jge
popa
jge
mov
xor
push
or
je
inc
adc
adc
daa
mov
cmc
sub
mov
testb
data16
into
sub
mov
cmp
leave
loope
sti
leave
loope
sti
leave
loope
sti
leave
loope
sti
leave
loope
sti
leave
loope
sti
leave
loope
sti
shr
dec
test
mov
out
sti
or
lcall
loope
or
loope
sti
leave
loope
sti
leave
loope
sti
push
inc
mov
leave
loope
sti
leave
loope
sti
leave
loope
sti
leave
loope
sti
clc
es
movsl
cltd
fmulp
jno
mov
xchg
ss
repnz
iret
call
push
fists
mov
push
loop
loopne
sub
movsb
lds
jbe
pop
inc
fidivs
repz
cmp
mov
pop
sub
jl
xchg
xor
cmpsl
enter
mov
dec
xchg
cmc
mov
push
or
add
dec
inc
cmc
sbb
aaa
adc
mov
aad
sbb
stc
cli
insl
pop
or
lock
cmp
jns
jl
and
sbbb
icebp
mov
loope
add
cs
leave
pop
leave
fwait
inc
jg
in
gs
xchg
mov
cmp
and
orl
or
lock
je
mov
push
cmpsl
lcall
dec
xor
push
add
dec
cmp
mov
lods
mov
nop
aam
jp
ret
adc
in
xchg
mov
adc
lret
aam
push
cld
into
add
out
insb
test
xchg
add
je
cld
mov
lock
fistps
inc
repnz
out
pop
aam
push
je
adc
rol
pop
das
push
mov
mov
das
repnz
jne
pop
shlb
cmp
xchg
lea
insl
adc
jmp
js
xchg
pop
outsl
cmc
mov
mov
or
and
nopl
fisttpl
adc
dec
mov
out
dec
daa
or
mov
pop
cli
int
jb
xlat
and
in
in
push
xor
push
ret
mov
cld
cmp
jmp
pusha
mov
cmpsb
lcall
jl
pop
scas
rcr
and
imul
adc
aas
or
shrl
les
lcall
mov
pop
mov
ss
rep
jae
insb
push
adcl
cmpsl
outsl
jp
jns
fsubr
jbe
imul
xor
push
mov
mov
sbb
push
mov
mov
imul
lahf
sub
cld
out
pop
fcmovne
fnsave
sub
push
xchg
dec
push
jp
xor
adc
dec
es
jp
add
jae
iret
xchg
add
xor
adc
stos
mull
jmp
loope
shlb
aad
adc
jno
in
mov
xchg
xor
fwait
les
cmp
outsb
sbb
stc
je
pop
iret
xchg
punpckhdq
addr16
cmp
xor
inc
idivl
loope
stos
xor
inc
push
push
nop
out
jbe
push
outsb
stc
pop
popa
sub
into
cld
mov
jno
add
add
or
add
adc
jl
add
jl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jl
add
jnp
add
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
or
int
or
push
or
fidivrl
add
or
out
or
jp
or
repz
add
add
add
jge
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
imul
cs
insb
add
arpl
cs
insb
add
jbe
jb
cs
insb
add
gs
xor
fs
insb
add
imul
insb
add
insl
fs
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
data16
arpl
scas
arpl
mov
mov
imull
gs
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
loop
add
stos
jle
add
add
add
add
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
add
add
jg
add
add
add
jg
add
add
add
add
add
or
add
add
pop
jg
add
add
add
add
jb
je
add
add
push
imul
add
je
gs
inc
js
outsb
je
outsl
imul
add
inc
gs
popa
jbe
inc
imul
add
add
addr16
insb
outsl
jae
dec
gs
add
push
dec
inc
gs
popa
insb
insb
outsl
arpl
add
dec
insl
popa
addr16
imul
dec
arpl
add
add
inc
jb
popa
je
inc
jne
add
add
popa
jns
outsl
jne
fs
add
add
pop
inc
jns
push
outsl
data16
inc
dec
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
nop
add
add
add
add
add
add
xor
xor
bound
xor
add
data16
add
add
outsl
add
insl
add
outsb
add
add
add
push
add
and
dec
add
inc
add
and
push
add
push
add
add
dec
add
add
add
add
push
add
add
add
outsl
add
jbe
add
je
add
sub
and
mov
xchg
xchg
cwtl
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
imul
add
outsl
add
je
sub
dec
add
arpl
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
dec
add
add
push
add
inc
add
add
dec
add
and
push
add
and
je
outsl
add
add
push
add
add
add
outsl
add
jbe
add
je
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
bound
and
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
and
dec
add
inc
add
and
push
add
push
add
add
dec
add
add
add
add
push
add
add
add
outsl
add
jbe
add
je
add
add
add
dec
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
and
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
dec
add
add
push
add
inc
add
add
dec
add
and
push
add
and
je
outsl
add
add
push
add
add
add
outsl
add
jbe
add
je
add
add
pop
add
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
bound
and
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
dec
add
add
push
add
inc
add
add
dec
add
and
push
add
and
je
outsl
add
add
push
add
add
add
outsl
add
jbe
add
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
sbb
add
add
or
sub
add
push
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
or
test
add
adc
xor
add
add
and
test
add
adc
dec
mov
add
xor
add
add
or
test
add
adc
xor
add
add
and
test
add
adc
xchg
cli
add
add
add
xor
add
add
or
test
add
push
add
xor
add
add
add
add
add
add
xor
add
add
or
test
add
or
xor
add
add
and
test
add
or
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
or
test
add
pop
add
xor
add
add
add
add
add
add
push
add
adc
add
add
add
add
add
and
add
add
or
test
add
add
xor
add
add
or
test
add
add
adc
add
add
and
push
add
and
add
add
add
add
xor
add
add
add
add
push
sbb
add
xor
add
add
or
add
add
add
add
add
add
or
adc
or
sbb
adc
adc
adc
adc
sbb
sbb
sbb
and
sbb
xor
sub
sub
or
inc
add
adc
adc
sbb
adc
and
adc
and
adc
sub
adc
sub
sbb
xor
sbb
xor
xor
xor
adc
sub
and
cmp
and
inc
add
push
add
pop
add
push
add
add
add
add
add
pop
add
add
insb
add
je
inc
int3
insb
add
add
add
add
add
add
add
add
int3
add
int3
add
aam
adc
aam
sbb
aam
sbb
faddl
sub
int3
add
int3
add
aam
and
faddl
sub
faddl
xor
faddl
sub
faddl
xor
faddl
cmp
faddl
sub
in
xor
in
cmp
in
cmp
in
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
test
add
lods
add
aam
xchg
aam
movsb
aam
mov
int3
in
mov
in
add
in
add
in
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
rol
int3
aam
add
aam
add
in
hlt
add
hlt
cld
add
cld
cld
add
cld
cld
add
hlt
cld
add
cld
cld
add
cld
cld
add
cld
cld
add
cld
cld
add
add
hlt
adc
mov
cmp
add
incl
add
out
add
out
mov
add
add
add
nop
push
mov
add
add
sbb
add
add
add
in
mov
inc
add
add
add
add
adc
add
add
add
add
add
mov
or
std
add
add
add
add
add
sbb
test
stos
add
incl
add
add
test
stos
add
jae
add
out
cmp
add
add
add
fs
mov
scas
aam
add
add
add
add
add
mov
add
add
addb
add
add
add
add
add
add
sbb
add
inc
cmp
pop
push
add
jb
insl
jae
add
add
outsl
add
jb
gs
add
pop
add
outsb
add
outsl
add
add
add
add
add
mov
movsb
push
mov
add
add
or
mov
rclb
jmp
mov
cmpsl
add
add
add
mov
movsb
push
mov
add
add
aas
add
add
mov
in
mov
add
add
gs
add
add
add
mov
push
mov
cmpsl
add
ret
cmp
add
sbb
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
push
add
add
mov
nop
push
mov
mov
lock
sbb
out
incl
push
aad
add
add
mov
add
add
add
add
add
test
test
test
test
inc
pop
test
test
test
test
sub
inc
pop
js
test
test
test
push
dec
inc
cmp
sub
inc
pop
pop
test
test
test
jp,pt
push
push
push
push
push
dec
cmp
sub
inc
test
test
cmp
push
push
cmp
test
test
jno
imul
imul
push
push
sub
test
dec
inc
jl
insb
insb
insb
insb
insb
insb
insb
insb
push
addr16
js
test
test
insl
insl
insl
insl
insl
insl
insl
insl
insl
imul
test
test
jne
jb
jb
jb
pushw
test
test
cmp
gs
jl
jnp
imul
test
test
data16
cmp
cmpl
push
cmp
test
imul
imul
sub
or
or
pop
test
test
insl
insl
insl
insl
insl
insl
push
dec
or
sub
test
test
insl
jle
jne
insl
insl
sbb
sub
sub
test
xorb
dec
cmp
cmp
push
push
and
sub
and
test
bound
popa
cmp
push
pop
and
push
adc
pop
test
test
cmp
cmp
test
test
test
test
test
test
test
test
test
test
sbb
add
test
test
test
or
push
or
test
test
test
push
add
adc
add
test
test
test
adc
test
test
test
test
test
push
lock
push
lock
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
jo
push
add
aas
ret
lock
incl
lock
incb
lock
push
pop
lock
push
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
or
add
and
add
xor
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
sbb
add
add
add
pop
add
add
and
and
aas
mov
pop
pop
rcrb
pop
rolb
inc
lds
sub
stos
add
add
add
add
add
sbb
add
add
add
add
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
add
add
add
push
es
jae
mov
mov
inc
mov
cmpsb
cmpsb
cmpsb
js
js
xor
xor
add
add
xchg
scas
mov
mov
mov
pushl
mov
adc
adc
aaa
aaa
aaa
sbbl
fstp
jmp
loopne
jmp
loop
std
loope
loope
loope
loope
fstp
rcl
sar
lahf
lahf
lahf
decl
dec
int
add
insl
add
add
sub
sub
xchg
xchg
xchg
aad
aad
loope
loope
in
in
in
in
loop
loop
fcmovu
test
test
xor
add
add
add
sub
sub
xchg
xchg
cli
rcl
sar
jecxz
jecxz
in
in
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
lcall
mov
add
dec
add
add
dec
dec
dec
gs
call
jmp
std
jmp
jmp
jmp
loop
std
mov
push
push
xlat
add
add
add
push
imul
fstp
jecxz
jecxz
loope
loope
lahf
lahf
lahf
lcall
mov
loopne
loop
loop
fdivrp
leave
leave
leave
jb
jb
add
add
add
sldt
add
addr16
mov
jecxz
std
jmp
jmp
jmp
jmp
ljmp
rcl
sar
jl
jl
add
add
add
add
xchg
xchg
call
rcl
jmp
loopne
std
loop
loop
mov
insb
insb
aam
es
cmp
cmp
js
js
lods
lods
lods
std
loope
loope
fcomp
fdivr
lcall
cwtl
add
add
or
or
rcl
sar
loop
loop
call
ljmp
jmp
in
std
xlat
xlat
xlat
call
sbb
xchg
add
add
sub
sub
xlat
xlat
jmp
loopne
std
mov
push
je
add
or
add
add
addl
loopne
loopne
fcmovu
lods
lods
lods
pushl
xor
scas
add
add
xor
xchg
xchg
stc
xlat
xlat
xlat
loop
loop
out
out
out
out
out
out
out
out
in
in
fcmovu
cmpsl
cmpsl
cmpsl
cmp
cmp
add
add
add
add
sub
sub
cmpsb
cmpsb
cmpsb
call
xlat
xlat
std
fdivr
addl
add
add
add
add
add
insb
insb
insb
mov
rcl
fscale
mov
inc
inc
ret
add
cmp
test
xlat
loope
loope
in
in
in
in
in
in
in
in
jecxz
jecxz
fcmovu
mov
push
push
aad
add
dec
add
add
sub
sub
test
xlat
xlat
fcmovnu
mov
cmp
mov
add
add
xor
jo
mov
fcos
mov
dec
dec
enter
xor
add
add
pop
mov
std
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loope
loope
fcomp
fdivr
jmp
addr16
add
pop
add
add
sub
sub
test
test
aad
aad
fdivrp
fstp
rcl
sar
xchg
xchg
xchg
cli
push
push
push
dec
dec
dec
int3
test
enter
fcomp
fdivr
mov
dec
dec
enter
xor
add
add
test
scas
scas
dec
iret
iret
std
fcmovnu
loope
loope
loope
loope
loopne
loopne
fstp
rcl
sar
rol
js
js
push
push
push
dec
add
add
sub
sub
cmpsl
cmpsl
cmpsl
call
aam
fdivrp
fcmovu
rcl
sar
inc
ret
rcl
sar
fcos
fdivrp
mov
dec
dec
enter
xor
add
add
dec
pop
xchg
xchg
xchg
inc
vpaddd
rcl
fcmovu
fstp
fstp
fdivr
aad
aad
enter
movsl
movsl
movsl
call
push
mov
add
push
sub
sub
cmpsb
cmpsb
cmpsb
call
rcl
std
fdivr
fdivrp
fdivr
fcmovu
fcmovu
fcmovnu
fdivrp
fdivrp
aad
aad
mov
dec
dec
enter
xor
add
add
bound
mov
rcl
std
fsin
fscale
aad
aad
mov
jae
iret
or
or
sub
sub
movsl
movsl
movsl
call
rcl
fcmovnu
fdivrp
fdivrp
fdivrp
fdivrp
fstp
rcl
sar
mov
mov
dec
dec
dec
enter
xor
add
add
sub
inc
addl
aam
aad
aad
into
into
into
call
cmp
pushf
add
add
sub
sub
mov
int3
int3
std
fsin
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fcmovnu
rcl
sar
mov
mov
dec
dec
dec
enter
xor
add
add
mov
iret
iret
iret
rcl
sar
incb
add
or
add
add
sub
mov
lret
xlat
xlat
xlat
std
fcmovnu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovnu
fscale
into
into
into
pushl
dec
dec
enter
xor
add
add
jae
mov
mov
lret
std
int3
int3
int3
mov
addb
add
add
sub
sub
mov
enter
aad
std
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
xlat
xlat
xlat
std
int
int
mov
mov
dec
dec
dec
enter
xor
add
add
jae
mov
mov
mov
leave
mov
addb
add
add
sub
sub
mov
mov
aam
aam
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
dec
lret
scas
scas
scas
decb
dec
enter
xor
add
add
jae
lods
lods
lods
inc
vpaddd
mov
incb
pop
pop
imul
add
add
sub
sahf
sahf
sahf
inc
call
rcl
std
call
aad
call
aad
call
aad
std
aad
aad
aad
aad
aad
aad
call
aam
std
leave
leave
leave
ljmp
dec
dec
enter
xor
add
add
jb
stos
stos
stos
inc
ret
ret
std
pushl
addl
or
add
add
sub
popf
popf
popf
inc
ret
rcl
sar
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
rcl
sar
mov
lods
decl
dec
enter
xor
add
add
jae
stos
stos
stos
inc
rol
ret
ret
ret
pushl
xor
pop
pop
imul
add
add
pushf
pushf
inc
rol
iret
iret
iret
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
rcl
sar
std
stos
stos
stos
decb
dec
enter
xor
add
or
add
and
push
stos
test
mov
std
mov
mov
addl
add
add
add
add
add
add
fwait
fwait
mov
int
std
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
ret
ret
ret
ljmp
dec
dec
enter
xor
add
add
add
mov
sbb
lret
mov
das
push
sar
pop
std
ss
enter
ret
jmp
and
fldl
sbb
pop
and
add
add
sub
lcall
int3
int3
int3
std
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
into
into
into
std
ret
ljmp
dec
dec
leave
add
add
or
cmp
cs
sub
loop
pusha
cltd
out
jae
repz
repz
repz
ja
repz
repz
repnz
outsl
movsl
repz
call
inc
sar
add
insb
movl
add
and
add
add
lcall
lret
lret
lret
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
int
int
rol
std
cmpsb
cmpsb
cmpsb
decb
dec
lret
add
add
add
in
nop
in
incl
cli
nop
lret
sti
std
xchg
lret
sti
std
xchg
int3
sti
xchg
int3
sti
std
xchg
int3
sti
std
xchg
lret
sti
decb
ret
stc
std
ja
hlt
daa
pusha
add
lds
add
pop
add
add
add
add
pushf
pushf
mov
lret
iret
iret
iret
dec
iret
iret
dec
iret
iret
dec
iret
iret
std
iret
iret
iret
dec
iret
iret
std
iret
iret
iret
dec
iret
iret
dec
int
std
ret
ljmp
dec
dec
rolb
add
inc
add
add
add
xchg
xchg
aas
jl
jnp
idiv
xchg
cld
decl
sar
call
sar
std
xchg
sar
call
sar
std
nop
sar
decl
cli
std
outsl
lods
hlt
decl
dec
fdivr
add
mov
add
daa
xor
xor
lahf
lahf
mov
lret
into
into
into
dec
into
into
dec
into
into
dec
into
into
std
into
into
into
dec
into
into
std
into
into
into
dec
into
into
dec
int3
int3
std
ret
ret
ret
ljmp
pop
pop
filds
add
arpl
add
adc
add
or
cmp
loop
test
jns
sti
incl
into
std
std
xchg
incl
iret
std
std
xchg
incl
iret
std
std
xchg
incl
cld
std
jae
clc
cmp
incl
pop
mov
add
add
add
add
mov
stos
inc
rol
lret
lret
lret
dec
int
std
int3
int3
int3
std
int3
int3
int3
std
int
int
int3
int3
int3
std
int
int
int3
int3
int3
std
int
int
int3
int3
int3
inc
mov
mov
mov
lea
or
inc
add
add
add
adc
push
push
fdivr
lods
cmc
jb
cld
std
js
std
jp
jp
std
std
jp
std
std
jp
jp
std
std
jp
std
std
jp
jp
std
std
jns
std
std
jbe
std
insb
mov
lock
pop
mov
add
add
xor
xor
xchg
xchg
pushl
lret
lret
lret
std
int
int
int
int
int
int
lret
lret
lret
std
int
int
lret
lret
lret
std
int
int
int
int
int3
int3
int3
std
enter
mov
cmpsl
cmpsl
imul
add
add
add
add
add
adc
sbb
lcall
idiv
gs
ljmp
std
std
push
ljmp
ljmp
std
std
push
ljmp
ljmp
std
std
push
ljmp
ljmp
std
popa
mov
decl
icebp
incl
and
inc
add
add
add
addl
rol
dec
leave
leave
dec
int3
int3
std
int
int
int
int
int
int
lret
lret
lret
std
int
int
lret
lret
lret
std
int
int
int
int
int3
int3
int3
std
lret
lret
lret
inc
mov
pushf
pushf
lcall
pop
faddl
add
jp
add
and
add
sbb
push
fdivrp
dec
cmpsb
idiv
pop
mov
lcall
lcall
std
std
pop
mov
lcall
std
std
pop
mov
lcall
std
std
pop
mov
lcall
std
push
scas
cli
incl
icebp
incl
and
inc
add
add
add
add
add
add
pop
jbe
jbe
mov
mov
std
int
int
int
int
lret
lret
lret
std
lret
lret
lret
std
lret
lret
lret
std
int3
int3
int3
dec
lret
lret
std
int3
int3
int3
dec
lret
lret
std
lret
lret
lret
std
int3
int3
int3
dec
int3
int3
std
leave
leave
leave
std
ret
mov
mov
xchg
xchg
xchg
cmp
add
pop
add
add
add
adc
adc
inc
lahf
idiv
dec
mov
std
dec
mov
std
dec
mov
std
std
dec
mov
decb
std
std
dec
mov
decb
std
std
dec
mov
incb
stc
std
cmp
mov
add
add
dec
dec
dec
xchg
cwtl
cwtl
cwtl
mov
rcl
std
fcmovu
fdivr
fdivr
fcmovu
rcl
sar
int
int
lret
lret
lret
std
int
int
lret
lret
lret
std
int
int
int
int
lret
lret
lret
std
int
int
int3
int3
int3
dec
enter
mov
lods
decl
adc
cltd
add
add
add
add
add
add
add
adc
adc
pushl
cwtl
cmc
cmp
cld
cmp
mov
std
ds
ds
ds
std
ds
ds
ds
std
ds
aas
mov
ds
std
cmp
out
incl
and
inc
add
add
add
or
push
xchg
sar
aad
fcmovnu
fstp
fstp
fstp
fstp
fstp
fcmovnu
rcl
sar
int3
int3
int3
dec
lret
lret
std
int
int
int
int
lret
lret
lret
std
int
int
int
int
int3
int3
int3
std
mov
mov
lahf
lahf
pop
pop
pop
fildl
add
arpl
add
or
add
adc
or
sub
cld
pushl
lods
pushl
stos
std
std
xor
pushl
stos
std
std
xor
pushl
stos
std
std
xor
pushl
stos
std
sub
jle
incl
and
inc
add
add
add
inc
jl
lods
lods
call
rcl
fcmovu
fdivrp
fstp
fstp
fstp
fstp
fstp
fdivrp
fdivrp
fcos
into
into
into
std
int3
int3
int3
dec
int
dec
lret
lret
std
int
int
int
int
int3
int3
int3
std
lret
inc
ret
mov
mov
mov
or
and
add
add
add
sbb
dec
pop
hlt
jmp
lahf
cld
jmp
cmpsl
jmp
cmpsb
std
std
and
cmpsb
jmp
cmpsb
std
std
and
cmpsb
jmp
cmpsb
std
std
and
cmpsl
jmp
stc
lcall
jns
incl
and
inc
add
add
add
outsl
rol
xlat
xlat
xlat
std
fstp
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fdivrp
aam
aam
int
int
lret
lret
lret
dec
lret
lret
std
lret
lret
lret
std
int3
int3
int3
dec
int3
int3
std
mov
std
mov
mov
cwtl
cwtl
cwtl
cmp
cmp
add
add
add
sbb
mov
std
sbb
std
sbb
std
std
sbb
sbb
std
std
sbb
std
std
sbb
std
pop
xchg
clc
std
adc
add
mov
add
add
pop
addl
loopne
loopne
loope
loope
loope
loope
loope
loope
loope
loope
loopne
loopne
fdivrp
fstp
fstp
fstp
fstp
aam
aam
int
int
int3
int3
int3
dec
lret
lret
std
int
int
leave
leave
leave
mov
lahf
lahf
decl
dec
lret
add
add
add
add
sbb
inc
fdivr
or
sti
decl
sahf
call
lahf
std
std
setg
decl
sahf
std
std
push
sahf
decl
lahf
decl
lahf
std
std
push
lahf
decl
lahf
decl
pushf
std
std
push
clc
decl
jno
incl
and
inc
add
loopne
and
aam
fstp
loop
loop
loope
loope
loope
loope
loope
loope
loop
loop
loopne
loopne
fstp
fcmovu
fsin
fcos
fsin
fdivr
loope
loope
loopne
loopne
fcos
rcl
sar
rcl
sar
int3
int3
int3
inc
ret
stos
stos
stos
jmp
filds
add
dec
add
add
add
adc
movmskps
pushl
stos
cld
incl
decl
std
std
inc
mov
aas
mov
ljmp
test
std
or
incl
lcall
push
lcall
pop
mov
incl
and
inc
add
loopne
sub
fwait
fwait
cli
xlat
xlat
xlat
loopne
loopne
in
in
in
in
in
in
in
in
loopne
loopne
fdivrp
cmpsb
cmpsb
cmpsb
ljmp
imul
xchg
xchg
xchg
stc
iret
iret
iret
fdivr
loope
loope
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
fstp
into
into
into
jo
jo
add
add
add
add
add
sbb
pop
fdivrp
pop
lods
idiv
pop
mov
std
pop
mov
pop
mov
std
std
pop
mov
std
std
and
incb
cltd
std
std
add
std
incb
mov
std
add
add
mov
add
add
loope
loope
fwait
fwait
fwait
stc
fcomp
fdivr
loope
loope
in
in
in
in
in
in
in
in
loope
loope
fdivr
movsl
movsl
movsl
pushl
aaa
aaa
cltd
add
add
sbb
sbb
xchg
xchg
xchg
cli
fcomp
fdivr
loopne
loopne
in
in
in
in
jecxz
jecxz
in
in
in
in
fdivrp
iret
iret
iret
ljmp
outsb
in
add
inc
add
add
add
adc
and
mov
jmp
std
jmp
jmp
std
std
gs
gs
gs
retw
retw
inc
mov
std
adc
cwtl
incl
xchg
std
std
add
in
incl
and
inc
add
loope
push
xchg
xchg
xchg
repz
fsin
loop
loop
out
out
out
out
out
out
in
in
loope
loope
rcl
sar
jo
jo
add
add
pop
pop
pop
xchg
rol
in
in
out
out
out
out
out
out
in
in
lret
lret
lret
jmp
fiaddl
add
cmp
add
add
add
sbb
pop
je
clc
pushl
std
pushl
pushl
std
std
jb
pushl
pushl
std
std
jb
pushl
pushl
std
std
jae
lcall
call
std
arpl
cmc
incl
pop
mov
add
add
fcmovu
fiaddl
addb
loop
loop
out
out
out
out
out
out
out
out
loope
loope
aas
aas
aas
rolb
add
cs
lods
lods
lods
jmp
loopne
in
in
out
out
out
out
out
out
in
in
incl
inc
rolb
add
add
add
add
adc
sub
mov
std
std
jle
std
jle
jle
std
std
jle
std
std
jle
jle
std
std
jle
std
std
jle
jle
std
std
jle
std
std
jg
jle
sti
std
jbe
idiv
add
mov
add
add
add
add
jo
jo
into
into
into
loop
loop
out
out
call
call
out
loope
loope
cmp
cmp
add
add
sbb
sbb
scas
scas
jmp
loopne
std
out
out
call
call
call
mov
mov
xor
xor
add
add
add
add
add
sbb
gs
mov
stc
decl
sar
decl
sar
decl
sar
std
mov
decl
sar
std
mov
decl
iret
std
mov
sti
incl
pop
mov
add
add
add
add
inc
inc
inc
outsl
mov
mov
loope
loope
out
out
jmp
jmp
call
std
ret
ret
ret
cmp
cmp
sbb
sbb
lods
lods
lods
jmp
loope
out
out
jmp
jmp
call
sti
or
or
add
add
add
add
add
sbb
loopnew
cltd
lret
xchg
sar
call
aad
std
xchg
aad
call
aad
std
xchg
aad
call
aad
std
xchg
aad
call
sar
std
xchg
int
decl
mov
add
add
add
add
add
add
or
fstp
in
in
jmp
ljmp
jecxz
jecxz
ret
ret
ret
cmp
cmp
sbb
sbb
scas
scas
scas
jmp
loop
call
ljmp
out
out
jecxz
jecxz
rol
decl
dec
mov
add
adc
xor
jmp
std
std
mov
fsin
mov
fscale
std
mov
fscale
std
mov
fsin
mov
fscale
std
mov
sar
std
lea
mov
add
add
inc
inc
inc
jo
lods
lods
jmp
jecxz
jmp
out
std
ljmp
jmp
in
std
ret
pushl
aaa
aaa
mov
add
sub
add
add
sbb
scas
scas
scas
jmp
in
jmp
jmp
jmp
out
fcmovnu
lea
or
add
add
or
scas
sar
ljmp
fdivr
ljmp
ljmp
std
stos
ljmp
std
stos
ljmp
std
lods
sti
ljmp
in
incl
sbb
add
add
jae
jae
leave
leave
leave
jmp
in
std
jmp
jmp
in
mov
xor
add
sbb
sbb
stos
stos
stos
std
in
in
jmp
ljmp
in
in
cmpsl
cmpsl
cmpsl
cmp
cmp
add
stos
lahf
jle
out
pushl
pushl
pushl
std
mov
pushl
std
mov
pushl
cld
std
mov
cli
jmp
pop
add
and
add
add
adc
adc
test
jmp
in
std
in
in
jecxz
jecxz
stos
stos
stos
jmp
and
addl
add
add
push
push
sbb
cltd
cltd
icebp
loop
loop
out
out
out
out
in
in
lods
lods
lods
decl
dec
mov
add
adc
inc
fldl2t
popf
mov
sti
std
mov
loopne
std
mov
loopne
mov
loopne
std
mov
std
mov
fdivr
push
and
add
jg
add
add
add
add
and
sbb
outsb
leave
mov
mov
call
rcl
incl
pop
pop
aaa
add
add
jp
jp
iret
iret
iret
jmp
loop
call
rcl
lcall
inc
inc
xchg
add
add
add
rcr
popa
mov
ljmp
aad
mov
stc
mov
stc
mov
shl
call
pusha
add
mov
push
push
push
add
jge
jge
addb
inc
add
add
aaa
aaa
aaa
cmp
xchg
xchg
xchg
pushl
jbe
sub
sub
or
or
add
int
or
inc
int3
or
inc
int3
or
aas
int3
movb
int3
roll
cwtl
cwtl
add
inc
cmp
incl
add
incl
ud0
add
incl
add
incl
sldt
cld
add
incl
sldt
cld
add
incl
sldt
clc
add
incb
sldt
clc
add
incb
pop
add
clc
add
incb
pop
add
clc
add
incb
pop
add
clc
add
incb
pop
add
clc
add
incb
sldt
clc
add
incl
sldt
clc
add
incl
add
inc
aas
add
clc
add
inc
aas
add
clc
add
inc
aas
add
clc
add
inc
aas
add
clc
add
inc
aas
add
clc
add
inc
aas
add
clc
add
incl
sldt
clc
add
cld
add
add
clc
add
cld
add
add
clc
add
clc
add
add
clc
add
clc
add
add
clc
add
lock
add
lock
lock
add
lock
jo
add
add
add
jo
add
add
add
xor
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
push
add
add
add
add
add
add
add
orb
adc
add
add
add
add
add
add
push
add
add
add
loopne
add
add
add
push
add
add
add
lock
add
add
clc
pop
pop
incb
sldt
sub
add
xor
add
pusha
add
add
add
add
add
add
or
add
add
add
add
add
add
add
imul
imul
add
jne
jno
jge
jp
jp
jge
jge
cmp
add
dec
mov
and
add
dec
cltd
add
inc
mov
add
dec
mov
es
mov
add
lcall
insl
lods
add
mov
sbb
inc
faddl
add
dec
fadds
or
or
fldl
adc
rolb
movmskps
add
push
xlat
add
push
fldl
adc
push
fiadds
das
push
rolb
push
ret
add
pop
movl
es
fildl
and
add
pop
fiadds
daa
pop
filds
and
pop
flds
sub
add
pusha
filds
sub
fiadds
add
add
jno
add
je
add
jns
add
loop
xor
add
loopnew
and
add
js
add
jl
add
xlat
add
fadds
inc
push
add
faddl
addr16
add
ret
ja
add
xor
add
clc
add
clc
add
mov
add
hlt
add
xchg
std
add
xchg
sti
add
cwtl
std
add
cltd
incb
or
incb
sbb
std
add
lcall
cmp
cmc
add
cwtl
stc
add
lahf
cld
add
cwtl
cmc
add
mov
std
add
cmpsb
std
add
incb
das
movsl
cld
add
test
add
mov
std
add
lods
incb
cmp
cld
add
mov
add
add
out
push
nop
in
add
icebp
add
lock
icebp
add
add
jmp
add
in
add
testb
stos
cld
add
stc
add
testb
lods
testl
inc
mov
add
add
incl
dec
mov
add
std
add
incb
dec
mov
cld
add
add
incb
pop
mov
incb
pop
mov
out
add
repz
hlt
add
cmc
add
cmc
add
hlt
add
repz
repnz
testb
mov
add
cli
add
cld
add
stc
add
hlt
add
testl
je
clc
add
cld
add
incb
push
incb
insb
ret
push
incl
jb
std
add
incb
jne
std
add
sti
add
sti
add
std
add
std
add
std
add
test
add
mov
add
xchg
xchg
add
popf
popf
add
cmpsb
cmpsb
add
test
lods
add
mov
add
mov
mov
add
mov
clc
add
mov
cli
add
ret
stc
add
or
add
into
incb
mov
sti
add
int
add
lret
sti
add
int
add
sar
add
sar
add
enter
iret
stc
add
std
add
sti
add
frndint
add
shl
add
aad
add
add
cli
add
incb
mov
rol
add
lret
int
int
rcl
roll
aad
aad
flds
fstp
fldl
rcr
add
loope
add
in
add
jmp
add
add
pop
add
add
pop
stos
mov
jecxz
stos
mov
cmpsl
scas
mov
mov
scas
movsl
pop
add
jmp
jmp
out
add
add
jmp
scas
add
cmpsl
out
jmp
jmp
jmp
jmp
test
add
in
jmp
add
cmpsl
mov
jmp
out
stos
mov
jmp
out
test
jmp
in
in
in
jmp
mov
cmpsl
out
jmp
mov
jmp
out
add
add
add
add
add
in
in
in
out
pop
add
add
add
add
test
jmp
scas
add
add
add
add
add
in
in
jmp
stos
add
add
add
add
add
add
add
test
jmp
scas
add
add
add
add
add
in
jmp
jmp
add
add
add
cmpsl
out
jmp
stos
scas
out
jmp
jmp
jmp
jecxz
add
add
cmpsl
add
jmp
add
jmp
jmp
out
pop
add
add
out
jecxz
out
jmp
mov
add
add
jmp
mov
add
add
add
add
jmp
jmp
out
add
add
add
add
add
jmp
scas
out
jmp
jmp
mov
add
test
add
jmp
jmp
add
movsl
add
stos
out
jmp
jmp
scas
add
add
mov
add
test
out
out
out
out
jmp
add
mov
add
stos
jecxz
jmp
jmp
scas
add
add
mov
add
test
out
out
out
out
jmp
add
mov
add
test
out
jmp
out
out
scas
add
test
mov
scas
movsl
add
test
out
out
jmp
out
scas
add
movsl
stos
mov
scas
mov
add
test
out
out
out
out
out
jecxz
add
add
add
add
add
es
or
add
add
out
out
out
out
scas
add
add
aaa
insl
mov
mov
or
add
out
out
out
out
stos
add
sbb
mov
mov
mov
test
out
out
out
out
out
mov
add
add
add
add
add
nop
rol
lret
lret
lret
lret
lret
lret
lds
add
add
add
add
jecxz
out
out
jecxz
scas
add
add
add
and
lret
lret
popf
xchg
cmp
add
add
add
add
out
out
out
out
jecxz
movsl
add
add
add
add
and
popf
popf
popf
sahf
popf
sahf
cwtl
mov
add
add
add
add
jecxz
jecxz
jecxz
out
jecxz
scas
add
add
add
jb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
movsl
scas
jecxz
out
out
jecxz
out
out
out
scas
test
add
add
add
and
addb
addl
add
mov
jecxz
jecxz
out
out
out
out
jecxz
cmpsl
add
add
add
and
js
jnp
jnp
jnp
jnp
js
push
sldt
add
test
mov
jmp
out
out
out
out
out
jecxz
movsl
add
add
add
pop
arpl
fs
push
sldt
add
movsl
jecxz
jmp
jmp
out
jecxz
out
jecxz
stos
add
add
add
bound
bound
bound
pop
cmp
add
add
scas
out
jmp
jmp
out
out
out
jecxz
scas
movsl
pop
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
sldt
add
jmp
jmp
jmp
out
jecxz
jecxz
out
scas
test
add
add
dec
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
xor
movsl
out
jmp
jmp
jmp
jmp
jecxz
mov
add
inc
dec
dec
pop
dec
dec
dec
dec
dec
dec
dec
dec
push
inc
xor
add
add
jmp
jmp
jmp
jmp
out
out
scas
add
pop
jo
js
fs
dec
dec
dec
dec
dec
dec
inc
xor
add
add
jmp
jmp
out
mov
jmp
jmp
jmp
jmp
add
jb
addb
dec
dec
dec
dec
inc
xor
add
add
in
jmp
jmp
add
jmp
jmp
out
add
add
mov
xchg
xchg
xchg
fs
dec
dec
inc
xor
add
add
in
in
jmp
mov
stos
jecxz
in
jmp
jmp
jmp
add
xchg
cwtl
xchg
cwtl
xchg
xchg
xchg
xchg
sahf
xchg
sahf
jle
mov
movsl
jmp
in
jmp
add
add
add
scas
jmp
in
in
in
jmp
jecxz
add
add
mov
popf
lret
lahf
lahf
lahf
popf
fwait
sldt
add
in
in
jmp
add
add
add
scas
jmp
in
in
in
jmp
scas
mov
mov
lret
lret
lret
mov
add
add
scas
jmp
in
in
in
jmp
add
add
add
scas
jmp
in
in
in
jmp
cmpsl
add
add
cmp
int
int
int
int
int
lret
leave
mov
add
add
movsl
jmp
jmp
add
add
in
jmp
pop
add
add
xor
rcl
aam
aam
aam
aam
aam
shll
add
scas
jmp
in
in
jmp
add
add
add
scas
jmp
in
in
in
jmp
add
sub
aad
aad
outsb
adc
add
add
cmpsl
out
in
in
in
mov
add
add
add
jmp
cmpsl
add
add
add
fcmovu
fisubrl
add
add
add
add
scas
movsl
add
add
add
scas
mov
add
add
mov
loopne
loopne
loopne
ljmp
add
add
movsl
scas
jmp
add
add
cmpsl
out
out
cmpsl
add
ljmp
pop
add
add
add
add
add
add
add
cmp
ds
add
add
add
incl
add
loopne
inc
jg
add
cmpb
cmpb
add
add
incl
add
incl
add
incl
aas
add
cld
or
incl
pop
add
cld
push
pop
incl
pop
add
cld
push
pop
incl
pop
add
cld
push
pop
incb
pop
add
cld
add
incb
pop
add
cld
add
incl
pop
add
cld
add
incl
aas
add
cld
add
inc
jg
add
add
inc
incl
add
add
inc
incl
add
add
inc
incl
add
add
inc
incl
add
add
inc
incl
add
add
inc
incl
add
add
inc
jg
add
add
incl
pop
add
cld
add
incb
sldt
cld
add
cld
add
add
cld
add
clc
add
add
cld
add
clc
add
add
clc
add
clc
add
add
clc
add
clc
add
add
lock
clc
add
add
loopne
add
add
add
rolb
js
add
add
add
js
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
loopne
add
add
add
lock
add
add
add
clc
aas
add
add
add
jg
incl
add
add
add
add
add
add
and
add
add
andb
add
cli
hlt
add
in
xlat
daa
fistpll
popf
dec
xchg
dec
xchg
out
int
sti
dec
xchg
dec
xchg
dec
xchg
cmc
dec
xchg
int3
xchg
mov
std
fistpll
adc
std
repz
fnstenv
lcall
lret
cli
ret
cmc
mov
push
test
out
mov
cmp
stos
xchg
idivb
xchg
dec
cltd
dec
pushf
dec
cltd
out
shlb
std
sti
clc
add
add
add
hlt
ljmp
int
rcrb
push
lods
xchg
in
jno
fstpt
std
aad
pop
aam
pop
std
aam
pop
std
shrl
shrl
aam
pop
std
aad
pop
xlat
jo
std
fnstsw
out
jbe
repz
dec
pushf
dec
popf
sti
shlb
inc
jmp
lret
ds
fcos
rcrl
out
jbe
shrl
dec
popa
inc
std
mov
bound
lret
std
leave
arpl
enter
bound
bound
enter
leave
fs
std
lret
gs
dec
addr16
dec
push
push
fdivs
jmp
jle
cld
lret
fwait
call
sahf
sti
call
test
push
clc
icebp
add
call
lahf
repnz
into
sahf
jmp
outsb
pop
std
mov
cmp
jmp
cmp
jmp
push
xor
lods
dec
xor
cmpsl
dec
das
jmp
sub
test
das
ljmp
push
aaa
mov
pop
inc
std
enter
int3
gs
dec
push
pusha
std
out
lods
xchg
shlb
fdivr
out
cmp
add
add
stc
cmc
add
aam
lcall
cwtl
xlat
jp
dec
gs
std
rcrl
mov
aas
or
decb
xor
std
insb
sub
pusha
and
adc
push
and
adc
pop
and
std
bound
adc
jno
sbb
xorb
std
xchg
inc
daa
lods
dec
xor
mov
pop
inc
std
lret
dec
push
outsb
std
cld
int
shll
push
clc
repnz
std
stos
lahf
call
cmpsb
push
mov
dec
imul
rcrb
cmpsl
inc
adc
xchg
cmp
ud0
adc
dec
sub
and
sub
std
and
lcall
imul
std
pop
push
lcall
data16
pop
pop
and
sub
pushl
cmp
decl
sbb
popa
sub
jg
sbb
lahf
inc
sub
mov
aaa
std
ret
pop
inc
dec
bound
aad
pop
std
clc
les
cmc
std
loope
push
fnstenv
std
lock
dec
dec
inc
pop
aas
mov
inc
push
incl
sub
aas
cmp
sub
adc
decl
test
decl
mov
std
jp
and
adc
call
mov
decl
xchg
std
or
sbb
or
sbb
adc
and
cmp
sub
jge
sbb
mov
pop
cmp
pusha
inc
std
shlb
push
les
jmp
ljmp
jmp
les
test
dec
bound
rcrb
mov
xor
popf
inc
and
je
adc
dec
xor
std
and
call
mov
call
cwtl
xor
sbb
aaa
std
sbb
cmp
and
cmp
and
lcall
ss
push
cwtl
xor
adc
sub
std
js
sbb
push
addr16
std
pop
sub
pushl
pop
inc
call
jb
cld
iret
movsb
call
stos
fdivr
icebp
in
repnz
stos
jmp
int
dec
imul
mov
sub
cwtl
aas
sbb
bound
adc
cmp
std
sbb
ss
sbb
cmpsl
inc
sub
inc
std
push
insl
inc
std
mov
cmpsl
pop
cmp
cwtl
inc
sbb
mov
inc
adc
std
nop
aas
sbb
jp
and
push
pop
xor
jp,pn
sbb
cmp
push
cwtl
xor
adc
pop
and
das
and
mov
push
mov
xor
rcrl
fadds
stos
add
fadds
xor
lcall
es
std
push
mov
inc
std
and
dec
pushl
xchg
dec
pushl
inc
std
les
fistpll
jmp
jl
std
jecxz
dec
inc
pop
sub
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
push
ljmp
inc
adc
aas
imul
pop
xchg
cmp
sbb
sub
sbb
pushl
std
scas
dec
and
mov
pop
cmp
fldcw
inc
std
lock
fidivl
mov
dec
sub
mov
sub
and
dec
std
sub
pop
incb
dec
std
mov
inc
std
in
dec
in
dec
std
loope
dec
std
loopne
dec
in
push
std
ljmp
mov
push
and
mov
push
push
std
scas
dec
sbb
stos
dec
sbb
test
adc
mov
inc
and
xor
sbb
xor
xchg
xor
pop
std
mov
and
inc
inc
std
cli
iret
test
fdivrl
dec
insb
dec
pushl
sbb
decl
ljmp
scas
push
ljmp
enter
jnp
std
shll
jmp
orb
jns
std
mov
inc
lcall
push
ss
sahf
pop
cmp
mov
inc
flds
inc
inc
pop
sub
mov
es
cwtl
inc
sbb
ljmp
adc
jo
adc
jle
adc
xchg
cmp
call
dec
xor
mov
adc
lcall
jmp
dec
es
mov
xchg
jb
fnsave
inc
push
jmp
fdivl
mov
sub
scas
dec
and
pushf
cmp
std
popa
and
pushl
push
ljmp
leave
popa
pushl
into
data16
inc
mov
jo
std
call
jae
decl
dec
aaa
incl
inc
incl
dec
std
inc
outsl
inc
call
cmp
jle
cmp
les
mov
inc
and
pop
ss
inc
pop
cmp
std
cmp
inc
incl
call
pushl
push
std
xchg
cmp
jmp
cmp
std
lcall
ljmp
dec
daa
inc
pop
cmp
fistpll
add
jmp
mov
scas
dec
and
movsl
inc
adc
incb
cs
xor
gs
xor
gs
xor
dec
std
out
mov
sarl
orb
jp,pt
xor
arpl
xor
data16
xor
gs
xor
gs
xor
gs
aaa
xchg
push
push
push
aaa
std
push
inc
cs
xor
data16
xor
gs
xor
data16
xor
addr16
xor
dec
xor
sub
std
xchg
cmp
or
std
lcall
lods
inc
push
std
ret
std
jmp
fnstsw
adc
fidivrs
mov
inc
sbb
lcall
std
cmp
pushw
iret
lcallw
dec
std
ljmp
std
lahf
pusha
inc
cmp
data16
xor
pushw
int3
pushw
lret
xor
pushw
int3
pushw
int
std
xor
aaa
sub
aaa
cwtl
push
std
xor
pushw
int3
pushw
lret
fs
xor
pushw
int
pushl
int
pushl
int
std
cmp
dec
jge
das
call
ds
sahf
cmp
std
shrb
inc
pop
xor
roll
mov
dec
jmp
mov
ljmp
push
pushl
inc
xor
xor
pushl
int3
pushw
mov
dec
std
cld
xchg
gs
mov
bound
xor
pushl
lret
fs
xor
pushl
lret
pushl
int
std
xor
arpl
xor
std
xor
data16
cmp
popa
std
xor
pushw
int3
pushw
lret
gs
cmp
pop
pushl
enter
lret
gs
xor
gs
jae,pt
pushl
adc
lahf
aas
adc
mov
popa
cs
shrb
lods
inc
sbb
lret
insl
inc
cli
mov
ljmp
hlt
out
jmp
ret
cld
fsts
push
movsl
ds
std
pop
pusha
inc
xor
data16
xor
gs
xor
sbbb
pushf
imul
jg
cmp
gs
xor
gs
xor
addr16
ss
push
ss
decb
test
pop
adcb
shrb
cmp
insb
std
ss
xor
addr16
xor
data16
aaa
cltd
pop
movsl
push
xor
std
fs
std
xor
fs
xor
gs
xor
data16
dec
inc
xor
lea
paddw
inc
adc
xlat
jno
std
test
jne
cmc
int3
stos
loope
mov
std
hlt
jmp
std
lret
jmp
pop
sub
lds
decl
std
xor
pushw
into
decw
push
jmp
std
sti
mov
push
std
xor
push
cmp
insl
std
aas
shlb
inc
aad
call
pop
std
loop
push
fstps
arpl
inc
ja
inc
shll
aas
shlb
cmp
outsb
cmp
pop
ss
fdivs
call
js
std
xor
pushl
int
pushl
xor
jmp
pop
sub
mov
sbb
fwait
xor
xor
out
mov
ret
fildl
add
add
cmc
ljmp
gs
std
fnstenv
inc
imul
mov
xor
pushw
into
jmpw
dec
push
cwtl
imul
mov
pop
std
cmp
je
inc
aad
std
dec
xlat
jnp
dec
fildl
std
fsubl
nop
cli
mov
decl
decl
std
dec
xlat
jge
inc
jns
aas
cmpsl
data16
movsb
pusha
inc
out
movsl
jae
clc
stos
ja
lret
nop
insb
std
cmp
pushw
int3
data16
push
push
xor
lahf
inc
sbb
lret
data16
loop
dec
pushl
dec
sbb
jmp
cmc
cmc
jmp
jmp
sub
cwtl
xor
out
dec
std
les
std
inc
xchg
push
xor
gs
xor
gs
data16
std
out
pushf
insb
lods
jp
mov
mov
std
dec
fnstcw
dec
fiaddl
std
push
loopne
std
dec
xchg
data16
pushf
je
sti
xchg
std
dec
cwtl
inc
xchg
jb
push
mov
mov
push
faddl
std
inc
sarl
mov
std
out
mov
std
mov
cmp
xor
gs
xor
gs
cmp
push
std
mov
inc
std
notl
imul
mov
xchg
je
jmp
int3
incl
add
add
imul
pop
jmp
ljmp
xor
std
fidivs
dec
ja
incl
push
std
xor
pushw
into
lcallw
dec
call
mov
fstpl
push
push
fimuls
std
pop
loope
jmp
xchg
lcall
cmp
jl
push
xchg
call
mov
jmp
insl
jmp
xchg
std
pop
loopne
lcall
call
std
gs
fisubrs
std
mov
pushl
mov
pushl
int3
gs
xor
push
stc
mov
imul
pop
and
std
rclb
into
incl
add
add
imul
push
jmp
ljmp
xor
std
ret
pop
sub
loopne
push
decl
push
std
xor
pushw
into
decw
push
fcoml
cmp
mov
std
popa
test
pop
in
jmp
xchg
std
push
jmp
movsb
std
push
push
call
mov
std
xlat
movsl
std
not
mov
ljmp
popf
std
push
in
lcall
xchg
std
push
xchg
imul
cld
xchg
std
ret
xchg
std
leave
xchg
jb
mov
gs
xor
decl
mov
inc
lcall
cmp
std
fbld
sar
imul
inc
ljmp
fwait
xor
lods
inc
adc
out
push
std
pop
jle
xor
data16
aaa
shrb
inc
mov
mov
sti
mov
outsb
decb
xchg
std
insb
jmp
cmpsb
std
jne
test
jp
lods
mov
addr16
jmp
fsubrl
std
insl
aam
jb
movsl
std
insl
jmp
lcall
andb
xchg
std
dec
xchg
rcrb
pop
std
xor
data16
xor
arpl
xorl
mull
push
std
popf
ss
mov
mov
ljmp
std
imul
daa
in
xlat
cli
movb
std
movsl
aas
or
mov
sbb
jbe
aas
std
xor
imul
inc
mov
push
std
icebp
mov
out
cwtl
fs
sarb
jmp
pushl
stos
std
jl
scas
incl
hlt
mov
lcall
pop
lcall
mov
cmp
std
jge
scas
pushl
stos
pushl
movsb
std
addr16
pushl
pop
jmp
mov
pushf
std
int
jp
inc
xchg
pop
pushl
lds
xchg
clc
test
jbe
mov
sbb
mov
sbb
jmp
ljmp
std
sti
testl
movsl
test
fwait
xor
std
cmpsl
inc
push
ljmp
inc
and
cmp
ja
dec
faddl
std
lret
call
test
pushw
cmpsb
std
xchg
mov
call
test
xchg
fadd
jmp
pusha
std
popa
push
inc
lcall
push
incl
cmc
mov
jns
lods
std
jno
movsl
lcall
imul
lods
test
cli
rcrb
incl
fs
cmp
outsb
std
xor
arpl
cwtl
jnp
cld
scas
jge
ljmp
sub
sahf
cmp
std
hlt
xlat
sar
lock
out
fcmovnb
icebp
sarl
cmpsl
inc
or
std
lods
dec
sbb
dec
jg
std
dec
fidivrl
push
fiadds
decb
jne
stc
mov
mov
ja
jae
mov
ret
std
mov
call
out
mov
call
mov
jecxz
std
movsl
icebp
mov
mov
std
xor
stos
std
fs
jo
in
enter
andb
jo
aas
shll
aaa
mov
std
mov
mov
ljmp
and
std
ljmp
push
out
in
mov
sub
movsl
ds
scas
dec
push
pushl
dec
decl
jnp
pop
fisttps
std
pop
fs
pushl
leave
xchg
fsubs
std
test
aad
mov
in
ljmp
in
jmp
shr
mov
mov
jo
test
xchg
cld
int3
decl
hlt
mov
jno
movsl
decl
lods
test
insl
push
decl
cmp
dec
xchg
pop
jmp
cmpsb
jp
pushl
jnp
stos
inc
adc
int3
xchg
outsl
push
fcomip
stc
repz
stc
repz
repz
rcrl
or
scas
dec
adc
std
mov
and
pop
jns
lcall
nop
jmp
fwait
std
lds
std
enter
hlt
xlat
movsl
jmp
mov
cmc
jecxz
ljmp
cmpsl
mov
inc
out
dec
jmp
std
mov
mov
jmp
mov
fwait
incl
test
cmp
test
xchg
jl
std
push
pushf
outsb
call
xchg
inc
aad
std
jle
pusha
cli
mov
test
shlb
lcall
aad
push
in
std
sti
add
add
add
std
sti
add
hlt
call
jmp
adc
mov
sbb
mov
push
sub
push
stos
js
imul
std
jbe
stos
ljmp
mov
jo
dec
mov
fsubrs
push
ret
ljmp
ljmp
lods
test
mov
lods
sar
cmc
cmc
ljmp
icebp
in
stc
cmc
aam
cld
icebp
mov
jmp
insl
pop
std
pop
loopne
call
mov
dec
cmpsl
insb
std
into
mov
xchg
out
data16
movsl
cmp
inc
repnz
push
in
push
add
add
div
pop
push
in
std
lret
mov
test
dec
sbb
mov
pop
es
mov
std
popa
lret
js
lods
std
test
mov
std
popa
pop
dec
std
xchg
fs
dec
xchg
push
jmp
in
repz
std
stc
stc
repz
sti
cli
idiv
stc
stc
repz
div
lock
repz
fcmovne
inc
mov
gs
push
push
std
push
pushf
fs
std
push
aad
std
mov
xchg
std
icebp
scas
jnp
jmp
insb
fmull
mov
cld
stc
adc
add
add
std
cld
or
imul
enter
ljmp
dec
adc
mov
pop
sub
sbbl
insl
enter
idivl
jmp
jne
std
imul
ljmp
enter
xlat
sar
loope
fdivr
in
loopne
loop
fdivrp
fcomp
aam
mov
mov
std
popa
fs
jmp
jbe
js
stos
pushl
mov
ljmp
push
lds
inc
nop
inc
xor
repnz
jmp
je
add
add
sti
testl
mov
ljmp
dec
sbb
mov
pop
sub
enter
xchg
pop
cmp
insb
mov
std
cwtl
cld
into
pushl
lock
std
stos
enter
xchg
std
pop
pop
pop
pushl
pop
jle
jl
test
pushl
outsl
std
pop
pop
pop
lcall
pushl
std
mov
mov
jge
mov
push
popf
std
jno
insl
jmp
rcrb
fists
ds
sti
jmp
clc
icebp
fscale
std
sti
or
add
add
cli
hlt
xchg
stc
repnz
mov
mov
adc
mov
push
std
mov
pop
sub
int
xor
mov
xor
js
imul
shl
dec
icebp
lock
fdiv
idiv
in
sti
rcr
mov
mov
sahf
cmpsb
cmpsb
std
movsb
mov
std
stos
mov
fdivr
ret
lock
std
mov
ljmp
idivb
std
xchg
xchg
jns
not
cmpsb
std
fldenv
cld
xchg
std
shll
jmp
mov
stc
hlt
repnz
cld
stc
add
add
std
ud0
test
ret
pushl
push
and
rcrl
pusha
sub
std
fisttpl
push
incl
lret
int3
in
out
stc
std
out
sti
in
cld
cld
in
cld
cld
std
call
clc
clc
call
cmc
hlt
std
lret
mov
fstp
std
jge
sahf
incl
ret
fwait
jmp
mov
fisubrs
call
lahf
std
loope
addr16
movsb
mov
sti
idiv
cld
stc
jp
add
add
std
cld
and
cld
cli
fsqrt
lock
mov
push
and
rcrl
pop
sub
loope
gs
mov
shrl
std
mov
cmp
cwtl
outsl
pop
call
test
pushl
rcl
std
mov
iret
sar
sahf
mov
cmpsb
call
test
lods
push
mov
jecxz
std
fsubrl
fistps
xchg
cli
idiv
cld
cli
cltd
incb
std
daa
std
cld
fcos
stc
cmc
jmp
jb
roll
cmp
mov
std
cli
fsubs
out
jo
fnstsw
std
fldcw
in
sahf
std
iret
mov
mov
addr16
mov
push
jecxz
xchg
icebp
in
sti
lret
push
sar
out
mov
std
std
fildll
mov
and
loopne
cmpsb
std
sti
std
std
cld
lahf
incb
and
std
std
sti
jmp
sar
jmp
jle
les
out
jne
test
std
loope
std
in
mov
clc
fisubrs
fdivs
fdivs
std
fdivs
call
jo
call
outsb
cmp
shrl
call
jno
jmp
lods
jns
push
mov
jmp
mov
repnz
xchg
std
call
loopne
std
cli
std
mov
incb
decl
xchg
std
std
std
clc
icebp
push
lret
fstl
inc
call
mov
out
jle
in
mov
std
fadds
xor
iret
imul
dec
push
xor
lret
inc
pop
sub
ficoml
mov
push
xlat
test
in
iret
mov
jmp
push
incb
std
enter
std
cld
repz
jmp
mov
mov
fmuls
std
lock
roll
std
lds
inc
pop
sub
ret
pop
sub
ret
inc
pop
and
std
ljmp
mul
sar
stc
repnz
push
pushf
std
std
sbb
add
add
decl
std
pop
inc
std
cmc
std
cli
idiv
cli
out
in
std
out
xlat
jmp
mov
callw
mov
roll
pop
fisubs
fsubrl
mov
std
clc
clc
std
std
ljmp
das
incl
pushl
std
jp
std
idiv
cld
cli
std
sti
std
cld
std
cli
clc
std
cld
in
lods
pop
lcall
std
std
incb
daa
std
incb
push
pop
std
std
std
pop
std
push
cmp
sbb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
cld
add
aas
incl
add
lock
pop
incl
add
loopne
add
incl
add
addb
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
pop
add
clc
add
add
pop
add
cld
add
add
aas
add
cld
add
add
jg
add
add
add
jg
add
add
add
incl
add
addb
add
add
inc
add
pop
incl
add
lock
ud0
add
clc
add
aas
incl
add
incb
add
incl
add
jmp
ud0
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
orb
add
cmp
add
sbb
add
or
jb
or
jns
verr
add
adc
outsb
xor
add
adc
add
and
jne
sub
or
sbb
adc
add
dec
and
and
and
cmp
add
push
and
add
aaa
add
jp
add
das
add
add
xor
pop
dec
aaa
add
cmp
add
daa
add
cmp
add
cmp
cmp
inc
add
ja
add
pop
add
dec
add
add
add
dec
add
dec
add
pop
add
push
add
push
add
dec
add
inc
add
dec
add
push
add
pop
add
push
add
pop
add
add
xor
add
cmp
xchg
cmp
or
xchg
and
lcall
add
dec
sbb
mov
push
add
inc
and
pushf
push
sub
orb
mov
add
dec
sub
mov
sub
scas
push
sub
mov
dec
xor
test
push
xor
add
pop
sub
rcrl
pusha
sub
add
insb
cmp
lret
jb
add
jno
add
dec
add
imul
push
add
pop
add
inc
add
je
add
pusha
add
pop
inc
add
gs
add
jae
add
ja
add
push
pop
add
jl
add
jbe
add
jge
add
jp
add
test
add
mov
add
cwtl
xor
add
cmp
sub
xchg
dec
add
push
add
xchg
push
add
cmpsl
inc
add
stos
inc
add
dec
add
scas
push
add
movsl
pop
add
mov
add
mov
add
mov
push
sbbl
xchg
pop
add
imul
cltd
add
imul
test
test
gs
insl
add
jae
arpl
add
insl
add
js
inc
mov
add
add
add
pop
add
enter
lret
data16
shrl
aas
shll
dec
enter
aad
add
subl
test
xchg
jg
xchg
xchg
jns
movsl
andb
test
mov
movsl
xchg
je
mov
orb
test
xchg
in
dec
add
xchg
lock
lret
add
mov
lret
xchg
insl
add
xchg
data16
xchg
jae
cwtl
je
out
push
add
mov
out
ja
lret
add
movsb
jp
mull
js
cli
stos
js
out
jle
pushl
xchg
pop
mov
lea
dec
flds
add
xchg
add
mov
pop
loope
add
cltd
add
mov
add
cmpsl
add
lods
add
mov
mov
xchg
add
lods
stos
add
addl
movsl
mov
aam
mov
fldt
add
cmpsb
addl
stos
test
jmp
mov
clc
mov
add
mov
cwtl
add
mov
mov
add
ret
popl
ljmp
add
rcrl
add
enter
int
add
test
add
int
add
fnstenv
add
loope
add
out
add
icebp
mov
add
stc
leave
add
fnstsw
add
rolb
icebp
rolb
out
add
in
add
test
add
jmp
aam
lret
add
out
add
out
out
cli
repz
add
sti
stc
cmc
out
fnstsw
loopne
loopne
clc
add
add
loopne
xlat
aad
mov
loopne
cmc
add
loopne
mov
imul
insl
insl
mov
fnstsw
out
add
mov
gs
gs
gs
aam
loopne
add
add
imul
dec
dec
inc
inc
dec
dec
dec
dec
fs
cmc
loopne
insl
gs
pop
add
add
pop
or
inc
dec
fs
add
out
push
push
pop
add
adc
adc
add
add
inc
dec
fs
fchs
clc
loopne
gs
or
add
jo
outsl
outsl
outsb
outsb
movups
add
inc
dec
fs
add
add
fldenv
dec
inc
or
adc
jne
je
je
je
jno
outsl
outsb
adc
fs
add
call
cmp
adc
jne
jbe
push
dec
cmp
cmp
push
sbb
outsb
adc
insl
call
clc
out
dec
dec
cmp
adc
jl
cs
addr16
dec
aas
aas
aas
aas
aas
ds
push
jb
jb
or
out
add
out
dec
dec
ds
sub
insb
test
test
addr16
dec
inc
inc
aas
ds
pop
jne
cmp
dec
dec
gs
add
out
dec
inc
or
xchg
sub
movsl
pop
inc
inc
inc
pop
cmpsl
addr16
dec
inc
or
or
cmp
sbb
aaa
aaa
cmp
add
cmp
xchg
xchg
andb
inc
sbb
sub
sbb
inc
or
and
sbb
push
cmp
cmp
aaa
ds
push
out
ljmp
xchg
sbbl
xchg
xchg
xchg
xchg
jns
inc
sbb
jle
pop
cmp
cmp
aaa
inc
dec
aad
add
add
add
add
out
ds
add
test
xchg
xchg
xchg
xchg
xchg
xchg
orl
xchg
xchg
xchg
xchg
and
cmp
cmp
push
push
cmpsl
out
add
add
add
cmc
fdivrs
cmp
sbbl
xchg
xchg
xchg
xchg
adcl
xchg
xchg
xchg
sub
aas
gs
add
add
add
cmc
mov
ds
xchg
xchg
jns
mov
js
xchg
xchg
xchg
sbbl
xchg
xchg
jle
dec
sub
cmp
jecxz
add
add
add
cmc
push
dec
push
sub
jle
xchg
xchg
cltd
xorl
xchg
xchg
js
push
stos
xor
aas
aaa
push
fprem1
add
add
add
cmc
dec
cmp
adcb
sbbl
cltd
mov
mov
lods
jle
xchg
sbb
aas
aam
add
add
add
cmc
dec
aaa
test
js
xchg
xor
mov
fucom
lods
xchg
ret
cltd
pop
fnstsw
pop
mov
push
cmp
add
add
dec
aaa
imul
das
mov
mov
rol
ret
mov
mov
ret
ret
mov
frstor
mov
dec
aaa
lods
clc
add
add
add
clc
dec
aaa
dec
test
xchg
xchg
sub
ret
mov
xor
in
fwait
mov
ret
xchg
xchg
pop
mov
cmp
mov
add
add
add
clc
dec
aaa
ds
xchg
xchg
test
mov
leave
xchg
pushf
fsubrp
lahf
rol
les
test
aaa
dec
fdivr
add
add
add
clc
cmpsb
aaa
cmp
nop
pop
xlat
stos
movsl
xchg
leave
leave
fcmovnu
lahf
mov
mov
test
aas
inc
loop
add
add
add
clc
shlb
cmp
mov
pushf
out
out
in
sub
leave
mov
loopne
lea
push
cmp
std
add
add
add
std
repz
cmp
ret
xlat
fmuls
icebp
icebp
in
out
out
fcmovnu
fcmovne
mov
xchg
andl
add
add
add
dec
cmp
ret
lcall
cli
icebp
cli
icebp
cli
in
mov
fwait
iret
xor
mov
add
add
add
add
mov
ds
inc
das
ret
mov
jmp
cli
lock
int3
lret
lret
mov
ret
cltd
mov
mov
std
clc
cmp
aas
dec
inc
pop
leave
mov
div
into
into
into
into
repnz
cld
sti
stc
jmp
mov
mov
mov
pop
std
add
std
stos
cmp
ror
mov
sti
std
std
std
std
std
sti
repnz
arpl
mov
add
clc
dec
aas
inc
dec
dec
push
rcr
in
xor
into
loope
div
div
loope
popf
xor
loopne
push
fscale
call
ds
dec
dec
push
inc
mov
mov
mov
mov
mov
loopne
scas
dec
stc
std
std
stos
aas
aas
dec
dec
push
dec
xor
icebp
cli
repnz
int
into
lock
icebp
out
fstpt
fstl
incl
add
std
inc
dec
dec
push
push
cmpsl
pusha
lret
cli
cli
cli
out
int
fsubr
call
incl
add
add
std
xlat
inc
dec
dec
push
mov
push
dec
pop
lret
in
lock
into
int
int
jmp
call
incl
fcoms
mov
push
fsubrs
sar
div
jmp
call
incl
add
push
mov
jmp
call
push
push
push
push
mov
clc
incl
jmp
scas
push
cmpsl
mov
push
push
push
push
push
dec
scas
jmp
in
std
incl
std
loop
cmpsl
cmpsl
fisubs
dec
dec
dec
fsubr
clc
std
incl
add
add
std
stc
fsubrs
jecxz
out
incl
incl
add
incl
add
incl
add
incl
add
jmp
pop
incl
add
incl
add
incl
add
cld
add
aas
incl
add
lock
ud0
add
loopne
add
incl
add
addb
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
lock
add
pop
add
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
lock
add
pop
add
clc
add
add
pop
add
clc
add
add
aas
add
cld
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
add
add
jmp
add
ud0
add
clc
add
pop
incl
add
incb
add
add
inc
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
andb
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
push
adc
cs
inc
pop
jg
inc
pop
mov
inc
pop
mov
inc
pop
test
pop
sub
add
add
adc
add
or
add
add
add
or
push
sub
push
or
cmpsl
lds
xchg
test
incb
scas
loopne
add
loop
add
fdivr
push
fwait
lret
repz
je
add
pop
and
add
adc
add
add
add
or
or
jl
mov
add
jecxz
add
in
add
out
add
out
add
out
add
in
add
loope
add
loopne
add
pop
jle
add
push
cmp
add
adc
add
add
add
add
add
push
or
addl
fdivr
add
loope
add
out
add
ljmp
fdiv
incl
incl
fdivp
incl
fdivp
incl
fdiv
incl
xlat
out
incl
shr
incl
out
add
incl
cmpsl
incl
mov
mov
movsb
add
and
add
add
add
add
add
pop
or
cmpsb
add
fcos
add
jecxz
add
ljmp
loop
incl
ljmp
add
incl
incl
incl
sti
incl
repz
incl
out
incl
fucomi
incl
shr
incl
in
add
aad
add
incl
jbe
aam
sbb
inc
add
add
add
add
add
and
add
incl
mov
incl
add
in
incl
in
incl
hlt
incl
cld
incl
in
cli
incl
out
add
incl
jg
incl
xchg
mov
incl
fdivp
incl
icebp
incl
jmp
incl
fdiv
incl
lret
add
incl
fwait
int3
incl
xchg
lret
cmpb
add
add
add
add
add
jae
lds
mov
incl
mov
call
incl
out
cld
incl
fcomip
incl
lods
mov
incl
xor
add
add
incl
add
incl
add
incl
add
incl
add
incl
sbb
jp
add
add
stc
incl
int3
jmp
incl
stos
incl
pushf
int
add
mov
jb
add
or
add
add
and
add
pushf
sar
add
fdivrp
add
out
add
repnz
jmp
incl
mov
incl
sub
incl
add
incl
add
incl
add
incl
or
incl
sub
incl
aas
pop
incl
inc
pop
incl
xor
add
incl
add
incl
add
incl
add
incl
adc
add
incl
shl
incl
iret
out
incl
mov
xlat
incl
fwait
int3
incl
pop
incl
test
add
add
add
adc
push
outsb
cwtl
ret
iret
incl
mov
fdivr
add
in
add
cmc
incl
shl
incl
pop
jae
add
incl
add
incl
and
incl
xchg
movsb
incl
rcl
add
out
incl
cmc
cld
incl
cld
incl
cld
incl
idiv
incl
in
incl
rcl
add
incl
add
incl
add
incl
xor
incl
shl
incl
mov
aad
add
incl
jg
lock
inc
add
add
add
add
add
into
incl
scas
fdivr
add
loop
add
repz
ret
add
dec
incl
add
incl
or
incl
ret
add
incl
idiv
incl
incl
incl
incl
incl
incl
incl
fsubp
incl
fdivrp
add
daa
incl
add
incl
and
incl
mov
out
incl
mov
incl
mov
incl
mov
incl
insb
fwait
into
add
push
pop
add
add
add
xchg
incl
test
incl
mov
jmp
add
jmp
incl
add
incl
push
pop
incl
mov
incl
jle
incl
add
incl
push
and
add
cmc
incl
incl
cld
incl
cld
incl
cld
incl
incl
into
add
incl
add
add
incl
fdiv
incl
aaa
inc
incl
add
incl
or
incl
mov
add
in
incl
lods
fcos
add
ret
incl
mov
incl
add
or
add
add
push
addr16
mov
xchg
lret
sahf
into
incl
scas
add
in
add
repz
inc
pop
incl
add
incl
and
incl
mov
incl
incl
mov
add
add
add
add
incl
cld
incl
sti
incl
incl
cld
incl
ds
incl
add
incl
add
incl
cmp
add
incl
fcomi
incl
dec
pop
incl
add
incl
sbb
fdivr
add
aam
add
ret
jle
lock
and
add
and
dec
add
enter
sar
add
out
incl
test
incl
adc
incl
mov
incl
repnz
incl
sti
incl
out
add
sbb
incl
sub
incl
std
incl
cli
incl
incl
xchg
scas
incl
add
incl
add
incl
sub
incl
leave
fdivr
add
incl
repz
incl
enter
sbb
incl
add
incl
inc
pop
incl
mov
add
incl
xchg
incl
inc
pop
test
add
add
add
add
add
pop
addl
incl
xchg
lret
test
incl
mov
fdivr
add
add
add
incl
cmc
incl
jmp
incl
out
std
incl
repnz
incl
std
incl
jae
incl
add
incl
add
incl
movsl
mov
add
incl
cld
incl
incl
adc
add
add
add
incl
shr
incl
cld
incl
jmp
incl
out
incl
in
incl
mov
or
add
add
add
out
add
leave
incl
xchg
incl
outsl
mov
push
add
adc
imul
incl
test
jmp
add
add
add
xor
add
in
incl
jmp
cld
incl
jmp
incl
in
incl
cmc
incl
fdivrp
incl
das
inc
incl
add
incl
xor
add
ljmp
sahf
mov
add
add
add
add
add
incl
stc
incl
in
incl
call
cld
incl
loopne
incl
incl
push
outsb
incl
add
incl
pop
jne
add
incl
xchg
int3
incl
mov
incl
cmpl
add
add
add
cmpb
add
fdivr
add
arpl
add
add
add
incl
out
incl
fdivrp
incl
loop
incl
out
incl
call
incl
clc
incl
test
incl
add
incl
add
incl
cmp
incl
out
incl
dec
incl
add
incl
and
incl
aad
incl
out
incl
out
incl
jecxz
incl
incl
fyl2xp1
incl
incl
popf
mov
incl
adc
incl
mov
add
ret
test
incl
dec
jae
add
add
add
add
inc
addb
sar
mov
incl
cwtl
int
add
into
incl
adc
incl
add
incl
mov
incl
xlat
stc
incl
incl
fdivrp
incl
loopne
incl
loop
incl
in
incl
in
incl
imul
incl
daa
xor
incl
add
incl
sbbl
incl
incl
incl
frndint
incl
sar
incl
sar
incl
mov
incl
add
incl
imul
add
ret
incl
cmpl
add
add
add
add
add
nop
mov
jg
incl
mov
incl
xchg
int
add
cmpsl
incl
add
incl
push
and
add
cli
incl
iret
clc
incl
sar
incl
xlat
incl
fdivr
incl
fcos
incl
fcos
incl
incl
fdivrp
incl
inc
push
incl
add
incl
add
incl
add
incl
add
aam
add
incl
fsin
incl
xlat
incl
aad
incl
sar
incl
int
incl
enter
sti
incl
inc
arpl
add
add
add
incl
test
iret
incl
mov
incl
cmpl
add
or
add
add
incl
xchg
incl
xchg
int3
incl
test
incl
pop
jge
add
add
add
inc
incl
mov
idiv
add
clc
incl
leave
cli
incl
int
incl
aad
incl
incl
xlat
incl
sar
incl
fdivrp
incl
ja
incl
add
incl
add
incl
add
incl
sub
incl
int3
cli
incl
aam
incl
sar
incl
fdivr
incl
sar
incl
leave
sti
incl
xabort
add
idiv
add
std
incl
imul
add
dec
incl
mov
sar
add
mov
fiadds
push
or
add
or
add
add
incl
test
incl
lret
incl
movsl
in
add
incl
add
incl
cmp
incl
mov
incl
mov
incl
xchg
mov
incl
dec
pop
incl
imul
incl
iret
incl
cmp
add
incl
add
incl
add
incl
pop
jl
add
incl
lret
add
scas
incl
mov
add
cmc
incl
mov
movsl
incl
add
incl
cs
incl
pushf
fcos
add
incl
jle
incl
insb
mov
sbb
pop
or
add
in
add
incl
cmpl
incl
dec
insl
incl
add
incl
cmp
add
hlt
incl
sar
add
add
add
add
add
add
add
incl
pop
cmp
cwtl
int3
incl
adc
incl
add
incl
add
incl
add
incl
test
incl
add
incl
add
incl
sub
incl
mov
cli
incl
mov
incl
mov
incl
je
incl
add
incl
sub
incl
xchg
incl
nop
into
incl
test
incl
jl
incl
imul
add
or
add
filds
ja
incl
jle
incl
mov
incl
cltd
add
incl
add
incl
sub
add
hlt
incl
mov
incl
jmp
add
incl
jl
add
sbb
add
add
add
add
add
adc
add
add
add
add
add
add
add
or
incl
incl
incl
popf
incl
add
add
xor
add
icebp
incl
mov
incl
lods
repz
mov
incl
popa
mov
add
add
add
dec
incl
xchg
fdivr
add
sar
jnp
incl
push
loopne
push
or
add
xchg
mov
add
incl
test
incl
xchg
fdivr
add
incl
add
incl
adc
decl
lods
cmc
call
mov
call
mov
call
mov
call
mov
pop
call
or
call
or
call
adc
call
adc
call
or
push
call
mov
call
call
fs
adc
cmp
adc
stc
decl
test
pop
incl
add
incl
cmp
add
mov
incl
pushfw
aam
push
or
add
add
push
jnp
add
incl
js
incl
add
incl
js
incl
push
or
add
add
or
clc
lcall
mov
lcall
mov
lcall
mov
lcall
mov
lcall
mov
lcall
inc
pop
lcall
adc
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
dec
push
lcall
xorl
adc
lcall
cmp
sbb
clc
lcall
mov
incl
add
incl
push
jns
add
incl
jge
incl
js
incl
pop
mov
add
add
add
xor
add
incl
jbe
incl
jle
incl
xchg
incl
mov
incl
sub
add
jne
ljmp
mov
repz
mov
ljmp
mov
ljmp
mov
std
ljmp
sar
sub
sub
ljmp
daa
and
ljmp
sub
ljmp
and
ljmp
daa
daa
ljmp
daa
daa
ljmp
and
sbb
sub
ljmp
mov
idiv
sub
call
adc
incl
or
incl
mov
incl
add
add
incl
js
incl
dec
js
add
add
add
and
add
add
add
incl
add
incl
push
jle
and
adc
cmp
idiv
cmp
clc
cmp
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
cmp
aaa
cmp
inc
cmp
cmp
cld
cmp
clc
cmp
xchg
pushl
sub
pop
cmp
incl
aad
add
mov
incl
js
incl
aas
pusha
jns
add
add
dec
jbe
add
incl
ja
incl
jle
incl
xchg
decl
jge
decl
push
decl
inc
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
inc
lcall
jp
incl
mov
incl
add
incl
je
incl
jo
out
sbb
pop
add
aas
dec
add
incl
je
incl
jp
incl
jg
call
xchg
aad
popa
xchg
stos
jmp
pop
jmp
insb
jmp
fdivr
pusha
pusha
ret
pusha
clc
jmp
stc
jmp
jmp
ljmp
outsb
jne
pusha
jl
jmp
in
pusha
iret
jmp
jmp
jmp
jmp
jmp
cld
jmp
idiv
pusha
pusha
mov
jmp
jb
pusha
pop
push
jmp
xchg
sub
aad
add
mov
incl
jbe
incl
dec
jae
add
add
add
pop
adc
popfw
aad
jae
incl
jbe
incl
jp
lcall
xchg
into
pushl
pushl
pushl
push
pushl
jae
stc
pushl
idiv
jae
clc
pushl
pushl
mov
pushl
outsb
pushl
push
pushl
hlt
pushl
std
pushl
cli
pushl
stc
pushl
clc
pushl
idiv
jae
clc
pushl
in
pushl
mov
pushl
jg
jp
fcos
aaa
mov
sar
js
incl
je
incl
jb
incb
cmp
xor
add
add
incl
jne
lcall
mov
decl
mov
xchg
incl
mov
incl
sar
incl
movsl
mov
xchg
xchg
xchg
incl
aam
incl
sar
incl
sar
incl
cltd
mov
incl
mov
decl
popf
sar
add
incl
jne
incl
je
incl
popa
xchg
mov
add
add
add
mov
jne
incl
jb
decl
mov
jmp
fdivrp
fwait
mov
xchg
lcall
mov
in
lcall
fwait
pushf
pushf
lcall
cltd
cltd
lcall
fyl2xp1
lcall
fsqrt
lcall
hlt
lcall
movsb
test
lcall
ret
pushf
shr
jmp
xchg
leave
incl
jae
incl
jb
incl
insb
cmpsl
in
sbb
daa
add
ss
add
incl
jno
call
sar
mov
out
ljmp
shl
ljmp
lods
stos
ljmp
mov
ljmp
aam
ljmp
mov
ljmp
ljmp
fcomi
ljmp
int3
scas
mov
stos
ljmp
mov
ljmp
fcomi
pushl
lret
in
or
jo
incl
jbe
incl
inc
data16
add
add
mov
add
incl
ja
jmp
in
mov
loop
inc
aad
inc
ret
mov
mov
inc
leave
inc
lret
sar
ror
inc
int
inc
lret
rol
inc
rol
sarb
inc
rol
ror
inc
loopne
inc
jecxz
inc
loope
inc
loop
pushl
xchg
incl
insl
lods
incl
jne
incl
dec
js
add
add
add
or
dec
jne
add
cmc
add
decl
enter
icebp
call
jmp
dec
call
stc
dec
in
dec
dec
rcl
dec
rcl
dec
iret
into
dec
int
dec
int
dec
int
dec
int
dec
into
int
iret
rcl
dec
rcl
dec
fcomp
dec
loope
dec
ljmp
shr
cmc
fucomp
idiv
jle
add
incl
je
incl
pop
mov
add
pop
add
incl
imul
out
idiv
in
idiv
jmp
lock
fcomip
stc
fcomip
sti
fcomip
stc
fucomip
idiv
fucomip
repnz
fucomip
in
jmp
jmp
fucomip
in
fucomip
lock
fucomip
cmc
fcomip
stc
fcomip
sti
fcomip
cli
fucomip
clc
jmp
cli
call
scas
aam
add
incl
je
incl
pop
mov
add
add
add
inc
dec
add
fiadds
jb
ljmp
xchg
push
sti
cld
push
stc
std
out
idiv
in
idiv
in
idiv
in
clc
in
clc
in
clc
in
clc
in
idiv
in
idiv
out
idiv
push
clc
cld
clc
cld
mov
xchg
outsb
scas
incl
jae
testl
or
or
and
sub
pop
mov
add
decl
leave
ljmp
idiv
std
jmp
stc
inc
fsubrp
jp
xlat
call
jp
incl
imul
add
push
pop
add
add
aas
add
mov
add
call
jle
decl
leave
decl
fsubrp
fsubr
cmc
jmp
repnz
call
out
idiv
into
in
jmp
stos
sar
sbb
mov
incl
insl
mov
add
jecxz
inc
push
add
add
add
push
push
add
ss
add
leave
add
std
add
incl
jbe
decl
jp
decl
jl
decl
jnp
incl
jb
incl
outsl
mov
add
fldl
push
sbbl
push
push
or
xor
add
jbe
add
add
mov
dec
jns
add
mov
dec
js
add
addl
push
dec
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
clc
pop
incl
add
incl
add
incb
add
incl
add
clc
add
ud0
add
lock
pop
incl
add
rolb
add
add
incl
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
sldt
lock
add
sldt
lock
add
pop
add
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
lock
add
sldt
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
cld
add
add
pop
add
cld
add
add
aas
add
incb
add
add
add
incl
add
add
add
add
add
incl
add
rolb
add
add
inc
add
add
add
push
add
ud0
add
clc
add
pop
incl
add
incb
add
add
inc
add
incl
add
cld
aas
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
or
add
adc
push
push
push
add
sbb
add
adc
add
sbb
sub
add
xor
add
cmp
adc
es
add
cmp
add
sub
add
xor
add
inc
add
xor
add
dec
add
cmp
add
add
ds
add
inc
push
add
inc
pop
add
dec
pop
add
inc
dec
add
dec
pop
add
dec
add
dec
push
add
pop
je
add
add
pop
jnp
cmp
add
addr16
sub
add
inc
add
add
push
add
push
add
insb
add
add
outsb
add
jae
jae
jg
xchg
addb
mov
adc
add
add
jg
add
jno
add
imul
add
jbe
add
insl
lods
add
jne
add
jns
add
outsb
mov
add
add
jnp
add
jge
add
sahf
add
mov
add
add
orl
add
mov
add
cltd
scas
add
test
add
test
add
mov
add
xchg
mov
add
nop
mov
add
stos
add
xorb
sub
mov
xor
mov
and
mov
add
cltd
mov
add
lods
mov
add
mov
pusha
adcl
add
movsl
add
cmpsl
add
lods
add
mov
inc
nop
mov
dec
xchg
mov
dec
xchg
mov
add
add
mov
arpl
lods
add
mov
add
stos
add
add
mov
jbe
mov
jnp
mov
add
enter
movl
add
add
nop
rolb
xchg
into
add
lahf
int
pop
sahf
lret
mov
add
xchg
rolb
add
flds
add
aad
and
les
cs
leave
add
xchg
lds
sub
add
mov
iret
add
mov
aad
add
fiaddl
adc
roll
add
add
mov
fiaddl
add
in
add
in
add
jmp
adc
loop
add
jmp
add
scas
icebp
add
mov
add
mov
add
lods
out
sub
stc
add
movb
mov
fadds
push
cmpsl
rolb
lods
aam
jns
flds
dec
mov
add
add
in
je
in
add
aam
add
fiadds
add
fiadds
add
in
add
out
add
jmp
add
jmp
add
out
add
out
add
jmp
add
in
add
sti
add
add
repnz
fdiv
add
sar
add
add
sar
add
hlt
add
jmp
std
add
jmp
add
repz
add
std
incl
dec
sar
jae
in
add
sti
add
clc
add
incl
xchg
xchg
add
cltd
cwtl
add
lahf
lods
add
mov
mov
scas
stos
test
add
mov
movl
mov
roll
rcr
fwait
flds
scas
leave
fadds
mov
in
add
shr
add
fyl2xp1
add
shr
add
fcomi
add
enter
int3
roll
iret
aam
add
fucomi
add
loop
add
out
add
in
add
in
cmc
add
lock
add
out
testb
cmc
sti
add
std
incb
add
add
js
add
add
xchg
cltd
xchg
add
mov
mov
cmpsl
cmpsb
cltd
cwtl
xorl
add
add
popa
cwtl
cltd
cmpsl
mov
enter
sarb
insb
add
cwtl
cmpsb
mov
rcl
rcl
rcl
int
ret
mov
pop
add
add
cltd
sahf
mov
iret
mov
fwait
enter
mov
push
add
cltd
cmpsb
mov
cmp
add
or
rcrb
add
pop
mov
fwait
sldt
add
or
add
or
sahf
cltd
addl
add
xchg
cmpsb
mov
add
dec
mov
ror
mov
adc
addl
add
add
sbbl
add
rcl
rcl
rcl
rol
mov
xchg
shlb
add
cmpsb
ret
mov
rorl
or
rcl
rcl
sarl
add
cmpb
add
add
andl
xchg
rcl
add
dec
rcl
rcl
rcrl
add
push
iret
enter
cmpsb
cmpsl
xchg
addb
jle
xchg
cmpsb
rorb
rcl
rol
or
bswap
rcl
rorl
add
mov
add
jle
add
js
adcb
ror
rcl
sarl
add
fs
les
add
ret
ror
iret
iret
xchg
add
push
cmpsl
xchg
cmpb
add
adcb
iret
int3
iret
iret
ror
adc
pop
rorl
add
ror
iret
int3
lret
add
push
add
push
jle
xchg
test
add
lret
iret
iret
shlb
add
iret
and
push
ret
iret
int3
int3
lret
push
add
xchg
cltd
addl
add
add
add
push
addb
lret
int3
lret
int3
add
push
add
int3
lret
leave
test
add
mov
je
push
andb
leave
leave
leave
lret
lret
add
add
fwait
int3
leave
lret
leave
mov
mov
pop
dec
push
mov
mov
leave
lret
cmp
add
bswap
leave
leave
leave
leave
leave
lds
cwtl
mov
inc
inc
inc
jle
mov
stos
lds
and
cltd
leave
leave
sbb
add
daa
leave
lds
stos
stos
inc
add
mov
inc
inc
inc
dec
andb
stos
push
add
add
add
push
leave
lds
add
stos
stos
stos
stos
inc
add
mov
add
add
add
add
dec
jle
add
test
or
add
mov
stos
stos
test
mov
add
add
add
add
inc
jle
cmp
or
lcall
pop
lcall
lods
test
mov
inc
inc
jnp
inc
jle
inc
add
push
lods
stos
lods
lods
lods
lods
lods
pop
or
pop
pop
adc
push
push
adc
stos
lods
stos
movsl
or
mov
inc
pop
add
dec
jle
adc
cmp
lret
lret
lret
xchg
adc
adc
adc
adc
adc
sub
add
jle
inc
imul
add
add
add
add
dec
dec
mov
or
lods
scas
scas
scas
scas
scas
scas
scas
inc
and
sbb
adc
adc
sub
adc
mov
inc
inc
add
jbe
inc
dec
jle
sub
mov
rcl
rcl
mov
mov
jae
jae
mov
mov
mov
sub
dec
dec
inc
inc
add
add
inc
dec
lea
das
mov
aam
aam
mov
aam
aam
aam
aam
mov
dec
dec
inc
inc
jbe
add
inc
inc
inc
dec
test
aad
aad
jge
xor
imul
aad
shll
xor
inc
add
inc
jg
out
xor
in
in
in
xlat
xlat
fsubr
in
in
in
in
in
ljmp
inc
inc
inc
outsb
add
inc
push
jmp
jmp
fcmovu
in
out
jmp
fcmovu
in
out
out
out
out
call
in
lock
inc
aas
inc
add
add
mov
repnz
loopne
jmp
repnz
jmp
aas
inc
faddl
add
add
inc
lock
repz
loop
hlt
hlt
cmc
cmc
cmc
cmc
hlt
hlt
loop
loop
repz
xchg
aas
inc
jl
jl
aas
mov
sti
cli
sti
cli
div
div
hlt
div
div
div
idiv
cli
sti
sti
sti
mov
inc
push
add
add
xchg
cld
cld
cld
cld
sti
sti
std
stc
stc
stc
stc
stc
sti
cld
cld
cld
cld
cld
mov
inc
je
add
pop
out
push
mov
inc
faddl
add
add
inc
mov
cld
cli
mov
aas
pop
outsb
aas
inc
inc
mov
idiv
std
clc
lock
inc
aas
inc
fistps
inc
inc
push
inc
inc
push
inc
inc
inc
inc
jnp
add
inc
inc
inc
insb
faddl
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
aas
incl
add
inc
add
incl
add
incl
add
add
clc
add
pop
incl
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
clc
add
add
pop
add
cld
add
add
pop
add
cld
add
add
aas
add
incb
add
add
add
incb
add
add
add
add
add
jg
add
addb
add
add
incl
add
jmp
add
add
add
push
add
pop
incl
add
clc
add
pop
incl
add
incb
add
add
incl
add
clc
ud0
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
sbb
add
add
add
test
test
arpl
adc
or
add
add
adc
xor
xor
add
add
arpl
arpl
mov
dec
into
dec
into
dec
into
dec
into
dec
into
mov
into
lcall
add
add
or
arpl
arpl
add
arpl
arpl
lcall
into
out
into
out
jmp
div
div
repz
repz
repz
repz
repz
repz
jmp
out
into
dec
into
into
lcall
add
add
arpl
arpl
add
test
test
lcall
out
repz
repz
sti
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
sti
push
repz
repz
jecxz
dec
into
into
lcall
add
arpl
add
lcall
out
sti
sti
push
repz
repz
repz
repz
repz
repz
jmp
out
jmp
out
jmp
out
jmp
div
div
repz
repz
repz
repz
sti
push
repz
jmp
dec
into
into
lcall
arpl
add
add
lcall
sti
push
repz
repz
repz
jmp
out
out
into
iret
into
xlat
fsubrp
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
div
div
repz
repz
sti
sti
jmp
jecxz
into
lcall
arpl
add
iret
into
div
idiv
sti
sti
push
repz
repz
jmp
out
jmp
out
out
ret
into
lcall
arpl
gs
gs
gs
lcall
movsl
xlat
out
jmp
out
jmp
out
jmp
div
div
repz
repz
sti
push
repz
iret
into
add
add
arpl
add
add
iret
into
sti
sti
push
repz
repz
repz
jmp
fdivp
lret
movsl
into
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
fsubrp
jmp
out
jmp
div
div
repz
sti
sti
dec
into
add
add
arpl
add
iret
into
sti
sti
push
repz
repz
repz
jmp
test
into
gs
gs
gs
gs
gs
gs
lcall
arpl
gs
gs
gs
gs
gs
gs
lcall
out
out
jmp
div
div
repz
sti
sti
dec
into
add
add
arpl
add
add
iret
into
sti
sti
sti
push
repz
repz
jmp
into
lcall
xor
gs
gs
gs
gs
gs
lcall
push
repz
xor
gs
gs
gs
gs
gs
gs
lcall
out
div
div
repz
sti
sti
dec
into
add
add
arpl
add
iret
into
div
idiv
sti
sti
push
repz
repz
into
lcall
xor
gs
gs
gs
gs
gs
lcall
out
sti
sti
sti
dec
lcall
xor
gs
gs
gs
gs
gs
lcall
out
div
div
repz
sti
push
repz
add
out
into
sti
sti
push
repz
repz
into
lcall
xor
gs
gs
gs
gs
gs
xor
div
idiv
dec
lcall
xor
gs
gs
gs
gs
gs
gs
gs
xlat
div
div
repz
repz
sti
out
into
into
lcall
add
dec
into
sti
sti
sti
push
repz
jmp
into
lcall
xor
gs
gs
gs
gs
gs
gs
gs
lcall
idiv
sti
out
jmp
into
lcall
xor
gs
gs
gs
gs
gs
gs
gs
lcall
div
repz
sti
sti
dec
into
add
add
arpl
add
iret
into
out
jmp
sti
sti
push
repz
repz
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
xor
idiv
out
jmp
into
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
div
repz
sti
out
jmp
into
lcall
dec
into
sti
sti
sti
push
repz
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
arpl
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lret
movsl
div
div
repz
sti
sti
dec
into
add
add
arpl
add
add
iret
into
out
into
sti
sti
sti
out
jmp
into
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
div
repz
sti
out
jmp
into
lcall
add
dec
into
div
idiv
sti
sti
sti
push
lret
movsl
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lret
movsl
div
div
repz
sti
push
repz
iret
into
add
add
iret
into
sti
sti
sti
push
repz
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
into
out
into
test
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
idiv
sti
sti
dec
into
add
add
add
add
add
out
into
sti
sti
jmp
jecxz
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
xor
dec
into
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
xlat
div
idiv
sti
sti
out
into
into
lcall
add
add
dec
into
out
jmp
sti
sti
push
lret
movsl
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
xor
idiv
out
into
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
sti
push
repz
adc
add
add
add
iret
into
div
idiv
sti
sti
dec
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
xor
out
push
repz
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
sti
push
repz
add
add
add
add
iret
into
sti
sti
dec
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
dec
into
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
sti
sti
dec
into
add
iret
into
sti
sti
dec
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
arpl
out
push
lret
movsl
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
sti
sti
dec
into
add
iret
into
sti
sti
dec
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
idiv
push
lret
movsl
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
sti
sti
dec
into
add
iret
into
sti
dec
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
idiv
push
lret
movsl
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
dec
into
add
add
add
add
dec
into
sti
dec
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
push
lret
movsl
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
sti
dec
into
or
add
add
add
dec
into
sti
lcall
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
dec
lcall
xor
gs
gs
gs
gs
gs
gs
lcall
sti
dec
into
adc
add
add
add
lcall
push
lret
movsl
into
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
lcall
dec
into
into
gs
gs
gs
gs
gs
gs
gs
gs
lcall
push
repz
iret
into
arpl
arpl
add
add
add
lcall
out
into
into
lcall
xor
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
xlat
push
repz
xor
gs
gs
gs
gs
gs
gs
lret
movsl
out
jmp
dec
into
arpl
arpl
out
into
lcall
lcall
into
gs
gs
gs
gs
lcall
pushf
test
into
gs
gs
gs
gs
gs
gs
gs
ret
sti
sti
dec
lcall
xor
gs
gs
gs
gs
lcall
out
into
add
add
iret
into
sti
dec
into
lcall
lcall
into
gs
gs
lcall
fdivrp
sti
out
jmp
into
gs
gs
gs
gs
gs
gs
gs
xlat
sti
sti
push
repz
xor
gs
gs
gs
gs
gs
lcall
dec
into
adc
dec
into
div
idiv
lcall
lcall
lcall
into
lcall
out
sti
push
lret
movsl
into
gs
gs
gs
gs
gs
lcall
sti
call
xlat
into
lcall
xor
gs
gs
gs
gs
out
into
push
repz
iret
into
arpl
arpl
add
out
into
out
into
lcall
lcall
lcall
into
lcall
sti
push
lret
movsl
into
gs
gs
gs
lcall
push
repz
xor
gs
gs
gs
gs
gs
lret
movsl
out
into
add
add
dec
into
sti
dec
pushf
lcall
lcall
lcall
mov
sti
jmp
jecxz
dec
into
xlat
div
idiv
sti
jmp
jecxz
into
lcall
arpl
lcall
arpl
lcall
sti
dec
into
arpl
arpl
out
into
lcall
lcall
lcall
into
lcall
out
jmp
xlat
lcall
lcall
lcall
out
into
out
jmp
into
lcall
add
add
iret
into
div
idiv
dec
pushf
dec
pushf
dec
pushf
lcall
lcall
into
iret
into
div
idiv
sti
sti
out
jmp
xlat
lcall
lcall
lcall
dec
into
sti
dec
lcall
add
out
into
dec
pushf
dec
pushf
dec
pushf
dec
pushf
lcall
test
xlat
xlat
xlat
xlat
xlat
xlat
test
lcall
lcall
lcall
out
into
arpl
arpl
add
iret
into
out
jmp
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
test
test
test
dec
pushf
lcall
lcall
lcall
out
into
out
jmp
into
lcall
add
add
iret
into
div
idiv
dec
out
into
out
into
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
push
repz
dec
into
div
idiv
dec
dec
dec
out
into
out
into
out
into
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
dec
pushf
sti
dec
into
dec
into
div
idiv
dec
dec
dec
dec
out
into
out
into
out
into
out
into
dec
push
repz
iret
into
add
lcall
sti
out
jmp
dec
into
lcall
div
idiv
push
repz
out
into
dec
into
add
iret
into
out
into
div
idiv
sti
out
into
dec
into
add
iret
into
out
into
out
jmp
sti
sti
out
jmp
out
into
dec
into
add
iret
into
dec
into
out
into
out
jmp
div
div
repz
sti
sti
sti
push
repz
repz
jecxz
out
into
dec
into
dec
into
add
add
iret
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
dec
into
incl
add
inc
pop
incl
add
incb
add
incl
add
clc
add
aas
incl
add
loopne
add
incl
add
rolb
pop
incl
add
addb
add
add
incl
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
aas
add
lock
add
pop
add
lock
add
pop
add
loopne
add
add
add
rolb
add
sldt
rolb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
addb
add
pop
add
addb
add
pop
add
rolb
add
sldt
rolb
add
sldt
loopne
add
add
add
loopne
add
add
add
lock
add
aas
add
lock
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
ud0
add
loopne
add
incl
add
clc
add
incl
add
incb
add
incl
add
jmp
ud0
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
or
add
adc
add
add
add
arpl
into
xor
into
arpl
pushf
lcall
lcall
test
movsl
mov
mov
into
lcall
dec
pushf
add
lret
movsl
add
lcall
mov
add
lret
into
add
iret
into
add
xlat
add
add
iret
into
add
out
into
add
dec
add
jecxz
add
jmp
add
repz
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
push
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
push
pop
push
push
push
push
push
push
push
push
push
pop
push
push
sbb
adc
add
add
add
add
add
add
add
add
add
add
adc
sbb
push
push
push
push
sbb
push
push
push
push
pop
push
sbb
add
add
add
add
add
add
add
add
add
add
adc
pop
pop
push
push
push
sbb
sbb
sbb
pop
pop
sbb
add
add
add
add
add
add
add
add
sbb
pop
pop
push
push
sbb
or
pop
pop
pop
or
adc
sbb
push
pop
push
sbb
add
add
add
add
add
add
add
sbb
pop
push
push
push
sbb
push
push
push
push
push
push
push
push
push
push
or
sbb
pop
sbb
add
add
add
add
add
add
sbb
pop
push
push
push
sbb
push
push
push
push
or
or
push
push
push
push
push
or
sbb
pop
sbb
add
add
add
add
add
sbb
pop
pop
push
push
sbb
push
push
push
push
push
pop
pop
push
push
push
push
push
push
push
push
push
or
sbb
sbb
add
add
add
add
sbb
pop
pop
push
push
sbb
push
push
push
push
push
push
push
or
pop
pop
pop
or
push
push
push
push
push
push
or
sbb
adc
or
add
add
add
add
sbb
pop
push
push
sbb
push
push
push
push
push
push
push
push
or
pop
pop
pop
push
push
push
push
push
push
push
push
push
pop
pop
push
push
push
pop
sbb
add
add
add
add
add
pop
pop
pop
push
sbb
push
push
push
push
push
push
or
or
push
push
push
push
push
push
push
push
or
push
push
pop
pop
sbb
add
add
sbb
push
push
push
push
push
push
push
push
push
push
push
push
or
pop
sbb
push
push
push
push
push
push
push
push
or
adc
add
add
add
sbb
pop
pop
push
adc
push
push
push
push
push
push
push
push
push
push
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
push
pop
pop
sbb
add
sbb
pop
pop
pop
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
push
pop
sbb
add
sbb
pop
pop
pop
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
push
pop
push
sbb
add
add
sbb
pop
pop
push
or
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
or
add
add
add
pop
pop
pop
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
push
pop
pop
sbb
add
add
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
push
adc
add
sbb
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
pop
pop
push
or
push
push
push
push
push
push
push
push
push
push
push
push
or
pop
pop
push
adc
add
sbb
pop
pop
pop
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
sbb
push
push
push
push
push
push
push
push
push
push
push
push
or
pop
pop
pop
sbb
add
sbb
pop
pop
pop
or
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
or
adc
push
push
push
push
push
push
push
push
push
push
push
or
pop
pop
pop
sbb
add
sbb
pop
pop
pop
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
adc
push
push
push
push
push
push
push
push
push
push
or
pop
pop
pop
sbb
add
sbb
pop
pop
pop
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
pop
pop
pop
adc
push
push
push
push
push
push
push
push
push
or
pop
pop
pop
sbb
add
sbb
pop
pop
pop
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
adc
push
push
push
push
push
push
push
push
or
pop
pop
pop
sbb
add
sbb
pop
pop
pop
clts
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
pop
pop
pop
pop
or
push
push
push
push
push
push
push
or
pop
pop
pop
sbb
add
adc
pop
pop
pop
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
pop
pop
pop
sbb
push
push
push
push
push
push
push
push
pop
pop
pop
push
sbb
pop
pop
pop
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
push
or
push
push
push
push
push
push
adc
pop
pop
sbb
add
pop
pop
pop
pop
or
or
push
push
push
push
or
push
adc
push
push
push
push
push
push
push
adc
pop
pop
pop
or
push
push
push
push
push
or
pop
pop
pop
sbb
add
add
sbb
pop
pop
pop
sbb
or
or
push
or
push
push
push
push
push
push
push
pop
pop
pop
pop
push
or
push
push
push
push
push
nopl
pop
pop
sbb
add
add
sbb
pop
pop
pop
pop
or
or
or
or
push
push
push
push
push
or
pop
pop
pop
pop
or
push
push
push
push
push
sbb
pop
pop
push
sbb
add
pop
pop
pop
pop
sbb
or
or
push
push
sbb
pop
pop
pop
adc
push
push
or
pop
pop
pop
push
adc
push
push
adc
pop
pop
pop
sbb
add
add
add
sbb
pop
pop
pop
pop
adc
or
or
or
pop
pop
pop
pop
sbb
pop
push
pop
pop
pop
pop
sbb
push
or
or
or
pop
pop
pop
pop
sbb
add
add
pop
pop
pop
pop
pop
or
or
or
push
adc
pop
pop
pop
pop
pop
pop
pop
sbb
or
or
pop
pop
pop
pop
sbb
add
add
add
push
pop
pop
pop
pop
pop
adc
adc
or
push
adc
pop
pop
pop
pop
pop
sbb
or
or
pop
pop
pop
pop
pop
adc
add
add
add
pop
pop
pop
pop
pop
pop
adc
adc
or
adc
pop
pop
sbb
adc
or
or
or
pop
pop
pop
pop
pop
sbb
add
add
add
sbb
pop
pop
adc
adc
adc
adc
adc
adc
adc
adc
or
or
or
pop
pop
pop
pop
pop
sbb
add
add
add
add
add
push
pop
pop
pop
pop
pop
pop
sbb
sbb
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
push
adc
add
add
add
add
add
add
add
push
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
sbb
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
push
sbb
add
add
add
add
add
add
add
add
add
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
add
add
add
add
add
add
add
add
add
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
pop
push
push
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
incl
add
inc
pop
incl
add
incb
add
incl
add
clc
add
aas
incl
add
loopne
add
incl
add
rolb
pop
incl
add
addb
add
add
incl
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
aas
add
lock
add
pop
add
lock
add
pop
add
loopne
add
add
add
rolb
add
sldt
rolb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
addb
add
pop
add
addb
add
pop
add
rolb
add
sldt
rolb
add
sldt
loopne
add
add
add
loopne
add
add
add
lock
add
aas
add
lock
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
ud0
add
loopne
add
incl
add
clc
add
incl
add
incb
add
incl
add
jmp
ud0
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
test
and
cmp
and
das
and
or
pop
add
add
add
xor
add
add
add
add
add
add
add
and
add
inc
push
add
es
xchg
jbe
rcl
and
lret
xchg
cmc
cld
fsubl
call
mov
jmp
scas
cld
fsubl
not
scas
and
jbe
rolb
popl
add
add
add
and
add
or
add
add
add
add
add
add
pop
add
jle
inc
mov
lods
jl
call
popf
jmp
mov
push
sar
stc
int3
std
aam
std
fscale
fdivr
fdivr
std
fscale
std
aam
stc
int3
push
sar
call
popf
fildll
inc
mov
pop
add
add
add
add
sbb
add
add
add
or
add
sub
add
push
outsb
dec
cmpsb
icebp
mov
repz
lahf
jmp
dec
cld
int
std
cld
iret
std
cld
sar
std
std
std
fscale
call
call
dec
std
stc
ljmp
icebp
mov
rep
dec
cmpsb
add
add
add
sub
add
or
add
push
add
add
pop
adc
outsl
mov
inc
fisubrs
push
clc
std
cmc
std
out
sar
in
std
in
aam
std
out
enter
ret
std
sti
enter
std
hlt
repz
push
std
cli
enter
push
lock
inc
nop
inc
mov
pop
adc
outsl
add
add
add
add
add
add
add
xor
in
cmpsb
insl
lock
xchg
jecxz
in
mov
std
std
call
scas
cld
out
std
ljmp
std
jmp
std
jmp
std
std
jmp
icebp
sar
hlt
mov
std
jmp
std
std
out
std
jecxz
std
jecxz
std
std
jmp
mov
in
dec
xchg
jmp
insl
lock
sbb
add
add
add
or
add
xor
cld
mov
sti
dec
xchg
loop
std
jmp
mov
std
call
lahf
push
fcmovne
std
in
in
in
in
std
in
in
std
in
in
in
in
cli
call
jecxz
cld
ljmp
ljmp
std
loop
std
fsubrl
call
mov
std
jmp
mov
jmp
scas
dec
xchg
cld
mov
sti
push
aaa
and
add
add
add
add
inc
sub
jge
lods
imul
lret
xchg
fsubrl
std
dec
xchg
std
int3
cltd
std
call
lahf
call
popf
push
fcmove
std
in
out
out
out
std
out
out
std
out
out
std
in
in
jmp
lret
ret
fcmovu
cld
in
std
jmp
mov
jmp
mov
std
loopne
std
fsubrl
call
sahf
std
int3
cltd
std
dec
cwtl
fldenv
std
dec
xchg
cld
lods
imul
es
daa
add
add
add
add
and
popa
in
popf
pop
out
inc
mov
call
mov
std
lds
std
int3
cwtl
std
call
popf
call
fwait
in
aad
std
std
in
out
out
out
std
out
out
std
out
out
std
out
out
push
loopne
std
std
loope
jmp
iret
mov
std
loopne
jmp
lods
std
fisubrs
call
mov
std
int3
cwtl
std
inc
xchg
inc
mov
std
iret
cwtl
std
call
mov
jmp
pop
out
and
popa
add
add
add
add
add
add
enter
mov
popf
std
std
std
std
rolb
std
std
dec
xchg
std
into
fwait
std
rcrb
stc
ljmp
lock
std
lock
out
out
std
mul
sar
loope
std
std
fisubrs
repnz
std
std
mov
std
std
int
std
dec
xchg
std
std
std
ret
mov
inc
cmp
rcrb
dec
addb
add
aas
add
add
add
add
add
add
jno
and
inc
inc
mov
mov
cmp
inc
mov
std
xchg
std
dec
cwtl
dec
lcall
in
lock
std
icebp
icebp
std
push
icebp
push
icebp
push
ljmp
fisubrs
std
rol
ret
push
shll
std
call
mov
dec
cwtl
std
xchg
std
inc
mov
inc
xchg
std
rolb
inc
xchg
inc
ljmp
and
pop
add
add
add
add
or
add
lcall
inc
cmp
mov
ja
std
mov
test
std
les
std
enter
int3
cwtl
std
dec
xchg
jmp
lock
repnz
std
repnz
repnz
cld
out
icebp
stc
xlat
lods
std
fisubl
not
mov
std
shll
std
std
lret
cltd
std
std
enter
lds
std
std
roll
mov
jno
mov
jns
repz
add
add
add
add
orl
mov
push
pushl
jne
mov
cmp
ret
std
ret
mov
inc
mov
dec
xchg
dec
xchg
std
in
sarl
repz
push
repz
push
repz
repnz
neg
ret
rcrl
std
call
mov
std
iret
pushf
std
dec
cltd
dec
xchg
inc
mov
std
ret
mov
inc
test
mov
jns
mov
outsb
std
mov
std
mov
pop
incl
add
sbb
add
add
add
xor
pushl
imul
pushl
jb
mov
jl
inc
cmp
inc
mov
inc
dec
nop
std
repnz
mov
hlt
hlt
std
push
hlt
push
hlt
hlt
hlt
std
mul
dec
cwtl
std
rcrl
dec
lcall
leave
xchg
inc
inc
mov
std
roll
mov
ja
pushl
insb
std
mov
std
pushl
push
in
add
xor
add
add
dec
sub
insb
jmp
gs
std
lods
pop
std
mov
std
mov
std
std
mov
std
std
mov
js
std
mov
cmp
roll
inc
cli
rorl
hlt
hlt
std
cmc
cmc
std
std
cmc
cmc
std
cmc
cmc
stc
lock
cld
lret
dec
xchg
std
lret
xchg
std
std
enter
enter
mov
std
ret
mov
std
roll
std
mov
js
mov
outsb
std
std
mov
std
mov
std
lods
pop
std
mov
std
jmp
adc
add
or
add
adc
movsl
push
ljmp
std
scas
pusha
std
pushl
push
pushl
je
mov
jge
inc
cmp
std
ret
mov
inc
cmp
aam
cld
repz
std
push
idiv
push
idiv
div
std
std
cmc
idiv
clc
shrl
std
inc
nop
inc
mov
std
lds
inc
test
inc
cmp
mov
je
std
mov
std
pushl
gs
std
scas
pusha
std
ljmp
pop
jmp
es
add
add
add
add
fidivrl
movsl
dec
jmp
push
std
lods
pop
std
pushl
data16
pushl
outsb
std
mov
js
mov
jle
std
roll
lock
movsl
clc
icebp
repnz
push
idiv
push
idiv
std
div
std
idiv
push
inc
test
inc
mov
inc
mov
std
ret
inc
cmp
mov
jl
std
mov
je
pushl
imul
mov
pushl
pop
std
ljmp
push
jmp
xor
add
add
cmp
cmp
pop
lsl
mov
dec
std
std
test
pop
std
scas
pop
std
std
mov
std
std
mov
std
mov
std
mov
std
mov
ja
std
mov
jge
mov
xchg
out
jmp
stc
stc
std
std
stc
stc
std
stc
stc
stc
stc
std
clc
out
ljmp
roll
mov
jge
std
mov
ja
mov
outsl
std
std
mov
std
mov
std
mov
std
std
scas
pop
std
stos
pop
std
test
dec
std
mov
cmp
sbb
cmp
add
add
add
sbb
dec
xchg
cmp
mov
dec
jmp
push
std
ljmp
pushl
data16
pushl
insb
std
mov
jae
std
mov
jns
std
mov
sar
cli
cli
cli
cli
std
cli
cli
std
cli
cli
cld
clc
stc
stc
lds
mov
jp
mov
jae
mov
insb
std
pushl
data16
std
mov
std
ljmp
push
std
test
std
jmp
dec
mov
cmp
xor
push
dec
cmp
cmp
aaa
sbb
push
call
inc
std
jmp
dec
std
cmpsl
dec
std
ljmp
pop
ljmp
std
pushl
push
pushl
jo
mov
outsl
in
lret
scas
std
sti
clc
stc
sti
sti
std
sti
sti
std
sti
sti
sti
cld
clc
aam
std
mov
jbe
std
mov
jo
pushl
push
std
mov
std
pushl
popa
std
lods
pop
std
ljmp
std
cmpsl
dec
std
jmp
inc
lahf
inc
std
call
or
add
add
sbb
xor
popf
cmp
std
mov
inc
std
mov
dec
std
std
test
std
std
stos
pop
std
lods
pop
std
scas
pop
std
mov
std
mov
std
std
mov
std
mov
std
mov
std
mov
std
repnz
cmc
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
std
std
imul
loope
mov
std
std
mov
std
mov
std
mov
std
std
mov
std
std
mov
std
mov
std
scas
pop
std
std
lods
pop
std
stos
pop
std
test
std
std
cmpsl
dec
std
mov
inc
std
std
mov
cmp
call
pop
pop
aaa
sbb
push
call
cmp
lcall
inc
std
mov
dec
jmp
push
std
test
pop
std
scas
pop
std
ljmp
arpl
std
mov
std
pushl
push
std
in
ljmp
std
std
std
std
std
std
std
std
stc
sti
std
cld
mov
pushl
addr16
pushl
arpl
ljmp
pop
std
ljmp
std
cmpsl
push
std
jmp
dec
std
mov
inc
lcall
cmp
call
pop
push
sbb
push
decl
xor
lcall
cmp
std
jmp
dec
jmp
push
std
ljmp
push
std
ljmp
pop
std
scas
pop
std
pushl
arpl
lods
pop
std
out
fmul
std
std
std
std
clc
cwtl
ljmp
popa
std
ljmp
pop
ljmp
push
std
ljmp
push
std
cmpsb
dec
std
jmp
std
mov
cmp
cwtl
xor
decl
push
push
xor
add
sti
sti
xchg
xor
cltd
xor
std
fwait
cmp
pushf
cmp
std
sahf
aas
std
std
mov
dec
std
movsl
dec
std
cmpsl
dec
std
cmpsl
push
std
stos
push
std
std
stos
push
std
lods
pop
std
lods
pop
std
lods
pop
std
test
clc
xlat
mov
std
std
std
std
std
std
std
std
std
neg
std
test
pop
std
lods
pop
std
std
stos
push
std
std
stos
push
std
cmpsl
push
std
cmpsl
dec
std
std
movsl
dec
std
mov
inc
std
std
sahf
aas
std
pushf
cmp
std
fwait
cmp
cltd
xor
sti
xchg
xor
cli
xchg
stc
xor
add
add
add
icebp
jp
lock
mov
cld
xchg
xor
cwtl
xor
std
fwait
aaa
std
lcall
aas
lcall
inc
std
jmp
std
jmp
push
std
test
std
test
cld
mov
std
cld
div
std
std
stc
hlt
out
std
test
push
std
ljmp
push
jmp
dec
std
jmp
std
lahf
inc
std
lcall
cmp
std
fwait
aaa
std
cwtl
xor
cld
xchg
xor
clc
mov
icebp
jp
lock
add
add
add
aad
sbb
stc
lea
xchg
xor
lcall
cmp
lcall
aas
std
jmp
inc
std
jmp
stos
push
std
sti
lods
pop
call
int3
sar
std
loope
in
jmp
icebp
icebp
std
cmc
div
cli
cli
cli
cld
cld
cld
std
cli
std
stc
mov
pop
std
ljmp
push
jmp
std
jmp
aas
std
sahf
cmp
lcall
xor
cli
xchg
cs
stc
lea
aad
sbb
pop
add
add
mov
jge
push
xchg
std
clc
mov
std
xchg
xor
cltd
xor
std
fwait
ss
pushf
cmp
std
mov
dec
std
stos
push
std
std
scas
pop
std
mov
mov
std
stc
mov
std
repnz
ljmp
std
fcmovnb
lods
aad
sar
rcl
std
fucom
loop
out
cmpsl
std
mov
std
mov
std
std
scas
pop
std
std
stos
push
std
cmpsl
dec
std
mov
cmp
fwait
ss
cltd
xor
std
xchg
xor
stc
sub
std
cmc
xchg
std
repz
jmp
add
add
add
add
or
jne
push
jg
push
subl
testl
cs
xchg
xor
std
mov
push
std
stos
pop
std
pushl
addr16
std
mov
std
mov
jne
mov
jns
mov
ja
mov
jne
hlt
mov
mov
icebp
mov
jo
pushl
addr16
pushl
pop
std
ljmp
dec
xchg
xor
cli
xchg
cs
clc
mov
testl
es
jne
call
or
add
add
add
frstor
out
ja
push
jle
push
subl
push
mov
std
lahf
inc
test
pop
std
mov
std
pushl
jno
std
mov
jl
mov
test
inc
xchg
inc
mov
std
les
inc
mov
inc
test
mov
jle
std
mov
ja
mov
imul
ljmp
push
std
lahf
inc
std
testl
sub
bnd
out
ja
frstor
or
sldt
add
test
or
out
ja
out
jl
std
repz
push
mov
ljmp
pop
std
pushl
insb
std
mov
jp
std
sarb
roll
std
std
dec
xchg
dec
xchg
std
leave
xchg
std
dec
xchg
dec
xchg
std
leave
xchg
std
inc
inc
mov
std
roll
mov
je
std
mov
std
pushl
pop
stos
push
std
testb
out
jl
std
out
ja
in
outsl
push
incl
add
adc
add
jmp
outsl
push
jmp
pop
out
js
std
notl
pop
std
mov
std
mov
std
mov
jl
std
roll
std
enter
lret
xchg
std
dec
lcall
rcrb
std
rcrb
dec
xchg
std
xchg
std
std
xchg
std
inc
mov
std
les
std
std
mov
je
std
mov
std
std
mov
std
lods
pop
notl
and
jmp
pop
ljmp
ljmp
add
xorl
sbb
jmp
jno
push
xchg
cmp
pushl
imul
mov
jl
inc
test
inc
mov
std
lret
dec
lcall
rcrb
call
mov
std
rcrb
repz
std
div
std
jmp
sahf
std
inc
xchg
inc
mov
inc
test
std
mov
je
pushl
popa
std
notb
push
jmp
gs
xorl
add
add
add
in
sbb
out
sbb
repnz
pushl
std
mov
cmp
les
std
into
fwait
std
call
sahf
call
mov
std
call
mov
mov
std
std
sti
stc
idiv
std
int3
lcall
les
std
mov
jno
mov
std
repnz
jmp
push
jmp
fs
lret
mov
sub
add
xlat
push
adc
jecxz
push
jmp
mov
std
mov
cmp
std
lret
std
into
fwait
std
rcrb
std
std
fsubs
std
fsubrl
std
cld
fsubs
std
std
std
std
std
std
std
std
std
std
cmc
loope
std
dec
xchg
std
std
lret
inc
mov
std
rolb
mov
jmp
popa
push
xlat
push
adc
sub
add
pusha
and
cmp
push
adc
loope
adc
cmc
fwait
push
mov
xchg
std
enter
into
lcall
aad
std
call
movsb
fsubrl
std
jmp
scas
jmp
lods
push
fnsave
std
std
std
std
std
icebp
out
dec
xchg
dec
lcall
ret
xchg
mov
push
std
loope
adc
jecxz
adc
pop
and
cmp
add
add
dec
loope
maskmovq
pop
sbb
std
mov
std
lret
xchg
std
call
popf
call
mov
std
fsubrl
std
jecxz
std
jmp
mov
jmp
mov
cmc
fnsave
std
cld
cld
std
std
jmp
rcrb
std
lret
xchg
std
inc
std
mov
sbb
loope
maskmovq
divl
pop
dec
popa
and
in
fs
sti
mov
pushf
std
rcrb
std
fldenv
std
std
jecxz
std
out
std
jmp
mov
fstp
sar
icebp
icebp
repnz
cld
cld
cld
std
std
std
std
stc
stc
stc
std
jecxz
in
out
shrb
std
std
rcrb
sti
mov
and
rorl
in
pop
add
add
or
sbb
inc
or
cmpsb
outsb
call
mov
std
jmp
mov
std
jmp
mov
lock
fcom
leave
fcmovu
fcmovnu
xlat
aad
jmp
shlb
fsubs
push
cmpsb
outsb
fists
inc
inc
or
add
add
add
add
inc
or
in
xor
divb
scas
jmp
mov
call
mov
push
sar
test
push
sar
out
mov
std
icebp
fidivs
jmp
scas
std
jmp
scas
push
mov
jmp
outsl
xor
fildl
andb
add
add
adc
add
jg
add
cmp
sbb
ljmp
stc
aam
std
jmp
cli
std
dec
dec
std
cli
std
std
jmp
stc
aam
repz
push
fcoml
sarb
add
add
add
push
add
or
add
lcall
iret
xlat
inc
or
fimull
stc
fcoml
fcoml
fstl
fcoml
fimull
stc
xlat
inc
or
mov
sub
mov
add
push
add
or
add
add
add
adc
add
sub
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
adc
add
add
incl
add
push
ud0
add
incl
add
cld
add
aas
incl
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
pop
add
rolb
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
clc
add
add
pop
add
cld
add
add
aas
add
cld
add
add
aas
add
incb
add
add
add
add
add
incl
add
addb
add
add
inc
add
add
add
jmp
add
pop
incl
add
lock
ud0
add
cld
add
aas
incl
add
incl
add
incl
add
push
ud0
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
orb
add
push
sbb
fistps
add
push
push
add
pop
adc
loop
sbb
jecxz
push
add
sbb
call
push
add
outsb
sbb
add
pop
and
add
pop
xor
loop
and
ljmp
add
jnp
add
jne
add
jle
add
outsl
xor
loope
cmp
aam
dec
add
jnp
add
test
add
xchg
add
mov
stc
mov
sti
xchg
cs
xorl
add
mov
add
xchg
xor
cltd
xor
add
xchg
cmp
pushf
cmp
mov
mov
mov
nop
jge
scas
xchg
jg
mov
ja
mov
jg
fildl
push
add
xchg
inc
add
sahf
inc
add
mov
in
push
add
fwait
push
add
lahf
pop
add
mov
dec
add
movsb
dec
add
mov
dec
add
cmpsb
push
add
test
add
test
push
add
stos
pop
add
lods
pop
add
stos
pop
add
lods
pop
add
lods
pop
add
xchg
data16
mov
xchg
jb
into
pushf
jbe
in
mov
bound
std
scas
pusha
add
scas
gs
cmpsb
outsb
add
scas
insl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
stos
jne
std
mov
add
mov
add
mov
add
mov
jne
mov
jp
hlt
mov
jns
mov
jge
inc
jg
lea
addl
lahf
mov
add
mov
add
mov
add
mov
addb
mov
add
mov
addl
clc
mov
fwait
add
rolb
std
ret
mov
inc
mov
cli
rorl
inc
xchg
add
lds
std
leave
xchg
add
int3
xchg
add
cwtl
add
int
add
lret
sahf
add
lret
std
int
add
into
pushf
add
rcrb
add
aam
add
aam
add
ret
lods
add
cmpsl
add
lret
scas
add
mov
add
shrb
add
shll
add
aad
add
xlat
cmpsb
add
xlat
movsb
add
fsubs
add
shrl
add
fldt
add
fisubrs
loope
mov
add
sarl
add
fnsave
add
fidivrs
stc
loopne
add
loope
add
in
add
in
add
jecxz
add
in
add
out
add
call
mov
in
mov
cld
in
add
jmp
add
in
mov
add
hlt
mov
add
lret
rolb
lret
ret
into
les
fcom
leave
add
aam
add
fcom
add
fcmovnu
add
aam
add
aad
add
fmul
add
fadd
add
faddp
add
fcmovne
add
add
fcmove
add
add
add
fcmovbe
add
fcmovu
add
fstp
add
loopne
add
ljmp
cli
in
add
out
enter
roll
cmc
ret
repz
cmc
les
stc
lds
cli
enter
lret
add
stc
int3
add
std
int
mul
rolb
std
out
roll
std
jmp
aam
icebp
out
add
out
add
in
fiaddl
std
rolb
std
aam
std
flds
fldl
fucom
loop
loop
in
out
loop
add
ljmp
out
jmp
add
in
add
in
add
out
add
ljmp
imul
call
add
jmp
jmp
clc
out
ljmp
in
in
add
repz
stc
hlt
out
add
out
lock
out
icebp
add
lock
repnz
lock
add
icebp
icebp
add
div
add
repz
add
cmc
cmc
add
stc
testb
idiv
add
cld
cld
add
data16
arpl
add
jg
movsb
lods
lods
movsb
cltd
jg
sub
add
sub
lods
iret
aam
fst
iret
lods
xchg
sub
rcl
aam
fstp
fstp
aam
lods
nop
insb
sub
inc
ja
mov
rcl
fcomp
fmul
iret
aam
iret
iret
rcl
rcl
mov
jns
add
addr16
jl
scas
mov
cltd
call
call
lods
movsb
lods
lods
mov
lods
jl
add
add
jl
lods
cltd
nop
nop
shl
lock
lods
movsb
cltd
nop
nop
cltd
lods
movsb
jl
add
dec
jl
xchg
jl
xchg
lock
cltd
nop
nop
addb
dec
ja
xorb
addb
lock
movsb
fwait
lds
addb
dec
add
add
ja
jae
jl
xchg
sti
aad
cltd
mov
cltd
cltd
nop
nop
cmpb
ja
pusha
inc
add
dec
ja
pop
jae
ja
addb
sti
in
xchg
cltd
xchg
mov
nop
nop
addb
jae
dec
sub
add
add
pusha
jae
ja
cmpb
sti
sti
sti
cltd
xchg
nop
mov
ja
jae
pusha
pop
pusha
pusha
xor
add
add
add
add
pusha
push
push
pop
pusha
jae
ja
jl
popf
sti
sti
sti
sti
sti
roll
jl
ja
jae
pop
push
push
pusha
inc
sub
add
push
push
dec
push
pop
pop
pusha
jae
ja
jl
in
sti
sti
fiaddl
jl
ja
jae
pusha
pop
push
dec
dec
push
xor
add
dec
inc
dec
dec
push
pop
pusha
jae
jae
ja
loop
sti
sti
addb
jae
pusha
popa
pop
push
push
dec
inc
dec
cmp
daa
cmp
inc
dec
push
push
pop
pop
pusha
jae
ja
mov
xchg
ja
ja
ja
jae
pusha
pop
push
push
dec
inc
inc
inc
cmp
das
cmp
push
push
pop
pusha
jae
jae
mov
sti
inc
jae
jae
popa
pusha
pusha
pusha
pop
push
push
dec
inc
inc
inc
cmp
das
xor
cmp
push
push
pop
pusha
pusha
jae
outsb
in
push
jae
jae
pusha
jae
pop
pop
push
dec
dec
inc
inc
cmp
add
add
add
add
inc
inc
inc
push
dec
push
pop
pop
pusha
pusha
pusha
sti
jns
pusha
pusha
pusha
pop
pop
push
dec
dec
inc
inc
inc
cmp
and
cmp
cmp
push
dec
pop
pop
pop
push
mov
lcall
push
dec
push
dec
dec
inc
inc
cmp
and
add
add
add
add
and
cmp
dec
inc
push
dec
push
push
push
insl
sti
jmp
push
dec
dec
inc
inc
inc
cmp
and
add
add
add
add
and
cmp
dec
dec
dec
push
dec
in
lcall
dec
dec
dec
inc
inc
inc
inc
cmp
cmp
es
push
and
es
cmp
dec
dec
inc
mov
incl
inc
inc
cmp
es
sbb
and
cmp
cmp
cmp
mov
inc
cmp
cmp
ss
push
pop
push
push
and
es
cmp
cmp
push
cmp
cmp
ss
and
pop
cs
push
push
and
and
es
cmp
in
std
ljmp
cmp
es
and
add
add
add
inc
adc
and
cmp
cmp
pop
push
xchg
dec
dec
inc
inc
cmp
es
push
sbb
adc
sbb
push
push
and
cmp
pop
pop
pop
pop
pusha
pusha
pusha
pop
insb
push
push
push
push
inc
inc
cmp
sbb
sbb
add
adc
sbb
sbb
push
pop
pop
pusha
pusha
jae
jae
ja
jae
pusha
pusha
pusha
pop
push
dec
inc
cmp
adc
add
adc
sbb
pop
pop
popa
jae
ja
jl
jl
jl
ja
pusha
pusha
pop
push
dec
inc
cmp
adc
add
add
or
and
dec
pop
pop
pusha
jae
jl
addb
jl
ja
jae
pop
push
dec
cmp
adc
pop
or
and
pop
pop
pusha
jae
jl
addb
repnz
pop
push
dec
and
or
add
sbb
or
push
pop
pop
jae
jl
xchg
lret
jl
ja
pusha
push
dec
and
pop
sbb
add
clts
adc
jae
jl
nop
nop
xchg
cltd
cltd
cltd
cltd
mov
pusha
pop
adc
sldt
add
add
ja
xchg
cltd
lahf
std
fiaddl
xor
add
add
nop
xchg
cltd
cltd
lods
test
mov
pusha
add
add
or
jae
nop
nop
xchg
cltd
lods
lods
lods
scas
lods
mov
loope
xchg
add
add
add
cltd
test
iret
cmpsb
mov
mov
nop
dec
add
add
add
insb
cltd
lods
lods
scas
mov
iret
shrb
movsb
insb
push
add
add
scas
aam
aam
lods
xchg
add
add
inc
push
add
add
add
add
push
inc
add
incl
add
incl
add
incl
add
clc
pop
incl
add
incl
add
incb
add
add
clc
add
pop
incl
add
lock
ud0
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
clc
add
add
pop
add
cld
add
add
aas
add
cld
add
add
aas
add
incb
add
add
add
add
add
jg
add
add
add
incl
add
addb
add
add
inc
add
add
add
jmp
add
pop
incl
add
lock
ud0
add
cld
add
aas
incl
add
incl
add
incl
add
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
orb
add
addr16
inc
gs
inc
insb
jg
pop
imul
imul
jo
outsl
add
jno
outsl
jb
add
add
jne
jno
jns
je
jl
jnp
jnp
test
add
add
gs
add
sahf
add
insb
lahf
add
outsl
mov
cmp
add
jbe
add
pushf
add
jne
add
jnp
add
insb
mov
add
jae
add
test
or
test
add
jl
add
mov
das
jp
add
jg
add
jge
add
addb
jno
add
mov
pop
jp
add
xchg
add
xchg
add
cltd
add
add
mov
je
addl
jle
add
stos
add
xorb
sbb
mov
add
andb
and
mov
add
mov
add
xchg
mov
xor
mov
add
addl
test
add
xchg
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
xchg
fiaddl
adc
fadds
xor
movb
pushf
int3
add
lahf
int
sub
fiaddl
sub
ret
add
mov
lret
mov
flds
das
cmpsl
fiadds
cmp
test
aam
xor
fiaddl
aas
test
add
mov
in
sub
out
add
mov
icebp
add
mov
leave
add
movb
mov
add
aam
push
cmpsl
aam
push
lods
add
rolb
dec
mov
add
fadds
dec
mov
add
fadds
pop
mov
movl
outsl
mov
loopne
inc
mov
loopne
push
mov
in
aaa
ret
testl
xor
cld
add
std
add
flds
dec
ret
out
dec
ret
jmp
add
jecxz
inc
inc
enter
lret
inc
into
std
add
cld
add
lock
lock
cld
add
incb
push
shl
add
icebp
add
cmc
add
incb
pop
stc
add
add
incb
gs
jbe
in
vpblendmq
in
add
ljmp
aam
add
testl
jno
repz
incb
pop
call
in
add
cmc
add
incb
imul
add
add
add
cmc
add
incb
je
incb
jnp
incb
jne
incl
jge
incb
addb
add
xchg
xchg
add
cwtl
popf
add
xchg
add
fwait
fwait
add
sahf
sahf
add
mov
mov
mov
mov
add
cmpsl
add
mov
add
mov
mov
mov
mov
iret
add
xlat
lock
in
hlt
add
jecxz
add
repnz
mov
incb
test
incl
mov
incb
xchg
idiv
add
sti
incl
lcall
add
idiv
add
std
incl
stos
std
incl
mov
std
add
std
incl
ret
ret
ret
add
mov
lret
lret
lret
add
rcl
add
xlat
add
fcmovnu
add
fstp
add
hlt
repz
repnz
idiv
add
incl
lret
incb
sar
incb
fdivr
incl
jecxz
jecxz
call
jmp
add
incl
ljmp
add
cld
cld
cmp
cs
push
test
xchg
imul
sub
add
dec
push
outsl
loopne
popf
popf
sahf
popf
xchg
xchg
jno
pop
sbb
add
dec
push
mov
lods
sahf
sahf
sahf
sahf
sahf
popf
xchg
jo
xor
xor
add
mov
lods
lods
lods
lods
lods
lods
sahf
pushf
sahf
test
sbb
add
add
xchg
xchg
xchg
xchg
lods
lods
lods
mov
aas
sbbb
xor
add
add
insb
xchg
xchg
pushf
xchg
xchg
loopne
mov
mov
mov
mov
adc
adc
pop
mov
sub
add
xchg
pushf
pushf
xchg
xchg
xchg
loopne
mov
mov
mov
mov
adc
xor
xor
xchg
xor
add
jbe
xchg
popf
pushf
popf
popf
pushf
xchg
loopne
mov
mov
mov
mov
and
popa
mov
lods
sahf
xchg
insb
and
add
popf
popf
popf
popf
sahf
pushf
xchg
loopne
xlat
xlat
xlat
xlat
xlat
mov
mov
sbb
aas
arpl
push
sahf
popf
insb
add
jne
sahf
sahf
sahf
sahf
sahf
pushf
xchg
loopne
fcmovu
xlat
xlat
xlat
xlat
xlat
mov
sbb
lea
lods
xchg
add
jne
sahf
sahf
sahf
sahf
sahf
popf
pushf
fstp
fcmovnu
fcmovnu
fcmovnu
pop
xor
pop
and
lods
xchg
add
jne
sahf
sahf
lods
sahf
lods
sahf
popf
loopne
loopne
fcmovnu
fcmovnu
loopne
adc
xor
arpl
jl
mov
mov
mov
add
jne
lods
lods
lods
lods
lods
lods
pushf
loopne
loopne
loopne
loopne
adc
xor
arpl
mov
mov
mov
nop
add
jne
lods
lods
lods
lods
lods
lods
popf
loopne
loope
loope
loopne
loopne
xor
xor
pop
addr16
fidivl
add
jne
lods
mov
mov
lods
lods
loopne
out
out
loope
loopne
mov
aaa
inc
fstp
xlat
xlat
xlat
mov
add
jne
mov
mov
mov
sahf
loopne
jmp
out
loope
inc
and
fcmovnu
xlat
ficoml
add
jne
mov
mov
mov
lods
loopne
call
jmp
loope
mov
fcmovnu
fcmovnu
cwtl
add
jne
mov
xlat
xlat
xlat
lods
mov
loope
out
jmp
jmp
loope
loopne
loopne
loopne
cwtl
add
jne
fcmovnbe
fcmovnbe
mov
loope
lods
lods
lods
mov
loopne
out
out
out
out
out
loope
loopne
loopne
add
jne
fstp
fcmovnu
mov
scas
mov
sahf
sahf
sahf
sahf
lods
mov
loope
out
jmp
out
loopne
add
jne
loopne
loope
jl
inc
jb
mov
lods
lods
sahf
pushf
pushf
sahf
lods
fsubp
out
out
jmp
add
jne
loopne
mov
or
jl
mov
mov
lods
lods
popf
popf
lods
mov
out
call
add
jne
mov
loopne
sbb
movhps
mov
mov
sahf
pushf
sahf
mov
out
in
movsl
add
jne
fucom
loopne
sub
lock
lret
mov
xlat
xlat
xlat
mov
mov
lods
lods
sahf
sahf
in
movsb
add
jne
loope
jmp
ror
lret
mov
loopne
fcmovnu
xlat
fidivl
lods
loopne
movsb
add
push
fsubp
cmc
test
lock
iret
mov
loope
loopne
loopne
dec
adc
add
popa
test
add
add
call
lock
sarb
out
loope
aad
or
mov
stos
xchg
roll
add
add
fdivr
out
stc
jmp
rol
int
ljmp
add
in
leave
leave
les
pusha
popf
pop
jle
add
imul
div
cmc
cmc
ljmp
lret
or
mov
jmp
leave
into
cld
div
div
cmc
cmc
loop
out
in
lret
lret
leave
inc
push
roll
add
mov
in
leave
into
std
cld
clc
clc
clc
div
repnz
lret
mov
mov
out
lret
cld
std
cld
cld
clc
clc
repz
lret
mov
mov
out
int3
sub
aam
hlt
clc
clc
repz
rcl
iret
mov
leave
out
stc
out
lock
or
ja
imul
push
add
in
cli
lock
push
add
add
add
cmpb
mov
add
stc
stc
stc
out
push
push
add
add
add
mov
shlb
add
mov
stc
stc
in
push
add
add
jmp
add
add
cli
cli
cli
cli
lock
add
in
mov
add
mov
cli
cli
cli
cli
sti
out
leave
mov
push
sar
out
out
out
in
pop
mov
sti
sti
cli
stc
lock
stc
lock
stc
lret
mov
mov
sti
sti
sti
sti
cli
cli
cli
stc
stc
stc
jmp
add
add
sti
cli
cli
in
push
add
mov
sti
rolb
add
add
stc
sarb
add
incl
add
incl
add
incb
incl
add
cld
add
incl
add
lock
incl
add
loopne
add
incl
add
rolb
aas
incl
add
addb
ud0
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
rolb
add
add
jmp
add
pop
incl
add
lock
ud0
add
lock
pop
incl
add
lock
pop
incl
add
lock
pop
incl
add
lock
loopne
incl
add
clc
add
pop
incl
add
clc
add
pop
incl
add
cld
add
pop
incl
add
cld
add
pop
incl
add
incb
add
incl
add
incl
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
decb
incl
add
add
add
add
add
add
add
sbb
add
add
add
add
add
arpl
arpl
arpl
arpl
arpl
arpl
arpl
xchg
xchg
xchg
add
movsl
cmpsb
movsl
dec
dec
dec
or
or
add
add
add
add
or
or
adc
or
or
add
or
dec
dec
dec
movsl
cmpsb
movsl
imul
add
add
add
or
push
sub
mov
lods
push
sub
imul
adcb
pop
jge
into
jno
mov
and
sbb
sbb
add
add
imul
add
add
push
sub
mov
sub
jns
ficoms
out
ret
lods
out
lret
mov
lret
mov
lret
mov
lret
mov
mov
mov
fimuls
test
sub
add
jae
add
sbb
sbb
add
imul
gs
mov
mov
out
ret
lods
out
lret
mov
lret
mov
iret
mov
iret
mov
iret
mov
lret
mov
lret
mov
mov
mov
jns
xchg
dec
and
adc
add
add
add
sbb
sbb
add
or
or
arpl
mov
out
mov
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
mov
mov
mov
mov
lret
mov
lret
mov
lret
mov
lret
mov
lret
mov
mov
mov
ret
lods
out
test
jno
jnp
sbb
add
add
add
or
add
mov
jns
out
xchg
out
ret
lods
out
ret
lods
out
mov
mov
mov
ret
lods
out
movsl
out
pushf
out
xchg
out
mov
cmpsb
mov
cmpsb
mov
cmpsb
mov
stos
mov
mov
out
mov
out
ret
mov
mov
mov
mov
ret
lods
out
mov
mov
xor
adc
add
add
add
mov
add
add
or
movsl
dec
and
mov
mov
out
mov
out
ret
lods
out
mov
fisubrs
mov
test
xchg
push
xor
arpl
mov
mov
sbbb
dec
jne
mov
cmpsb
mov
mov
out
ret
lods
out
ret
lods
out
mov
out
test
insl
cmp
adc
add
add
add
add
add
mov
sub
xchg
imul
pushf
out
mov
out
mov
out
xchg
sbbb
and
lcall
sbb
popa
sub
dec
jnp
jae
mov
into
ret
mov
lcall
inc
ficomps
out
mov
out
mov
out
mov
jne
push
and
add
add
adc
mov
imul
pushf
out
pushf
out
movsl
out
pushf
out
xchg
fimuls
imul
xlat
jnp
fisttpl
inc
or
dec
inc
inc
jnp
jae
mov
mov
into
mov
into
sbbb
inc
out
test
mov
out
pushf
out
movsl
out
pushf
out
xchg
jne
dec
and
add
add
or
add
add
sbb
pushf
dec
and
mov
scas
xchg
out
pushf
out
pushf
out
pushf
out
mov
jne
mov
lods
sbb
mov
xchg
mov
xchg
mov
xchg
test
mov
jae
ret
inc
or
push
dec
dec
test
mov
movsl
mov
mov
stos
pushf
into
jno
fimuls
out
pushf
out
pushf
out
xchg
out
test
imul
add
sbb
sbb
add
add
adc
jns
out
mov
scas
xchg
out
xchg
out
xchg
ficomps
lods
xorb
mov
mov
jnp
test
mov
xchg
mov
xchg
test
mov
sub
sub
push
dec
dec
test
mov
faddp
mov
jns
sbbb
mov
scas
xchg
out
xchg
out
xchg
ficomps
add
add
add
jae
jae
add
or
into
insl
cmp
sahf
jnp
cmpsb
mov
stos
mov
cmpsb
mov
lcall
jnp
ret
mov
mov
test
mov
test
mov
jnp
test
test
imul
xor
xchg
sbb
push
sub
dec
mov
mov
mov
sbbb
push
out
test
stos
mov
stos
mov
cmpsb
test
xchg
cmp
lods
push
and
mov
mov
out
test
sahf
jnp
insl
cmp
mov
mov
mov
jnp
test
test
test
test
test
test
test
test
test
jnp
lret
pop
and
xor
pop
push
push
mov
ret
mov
xchg
mov
out
test
sahf
jnp
insl
cmp
adc
add
add
imul
add
pop
sub
jno
ficomps
ficomps
jns
pushf
imul
mov
mov
imul
jae
jnp
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
shll
push
adc
cmp
arpl
xchg
mov
mov
mov
sahf
jnp
sahf
jnp
sahf
jnp
mov
dec
and
add
add
add
and
xchg
xchg
jae
lcall
pop
mov
cmp
mov
mov
mov
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
arpl
imul
adc
cmp
arpl
pushf
mov
cmp
xchg
jae
lcall
jae
jno
sub
add
add
add
add
jnp
push
into
imul
xchg
jae
xchg
jae
xchg
imul
cmp
mov
ret
faddp
lods
mov
pop
iret
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
pop
iret
imul
cmp
inc
adc
cmp
arpl
movsl
popa
inc
into
jge
ficoms
ficoms
test
add
add
dec
add
add
add
test
jns
fimuls
fimuls
movsl
pop
cmp
ret
ret
mov
mov
push
lret
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
pop
xor
cmp
scas
sbb
jne
inc
inc
xor
mov
mov
mov
xor
add
or
or
add
add
add
push
fimuls
mov
insl
cmp
mov
mov
mov
mov
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
dec
pop
dec
push
sub
sub
arpl
xchg
pop
inc
mov
pop
jne
cmp
add
add
add
mov
xor
adcb
pop
xchg
adcb
xor
mov
mov
mov
mov
inc
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
inc
push
cmp
dec
and
xor
imul
pop
cmp
sbb
add
xchg
xchg
xchg
lods
xchg
insl
cmp
jge
adcb
push
jne
xchg
pop
cmp
ret
ret
ret
mov
mov
cmp
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
inc
ret
dec
cmp
dec
xor
inc
sbb
cmp
jae
sub
sbb
add
arpl
ficomps
jns
jge
jns
insl
cmp
inc
mov
movsl
mov
mov
ret
faddp
lods
mov
xor
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
xor
inc
sub
adc
add
add
add
ficomps
jne
jns
jne
imul
scas
lods
mov
mov
ret
faddp
lods
mov
sub
xor
xor
inc
ret
dec
dec
push
dec
push
dec
push
dec
push
inc
push
cmp
dec
cmp
inc
xor
xor
xor
xor
xor
xor
xor
and
add
add
add
mov
jne
into
jne
jno
imul
mov
mov
ret
ret
mov
mov
sub
inc
ret
dec
dec
push
dec
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
dec
pop
inc
push
cmp
dec
sub
sub
sub
sub
sub
sub
sbb
add
fisubs
into
jno
into
jno
into
insl
inc
into
imul
mov
mov
mov
ret
faddp
lods
mov
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
push
lret
pop
dec
push
cmp
dec
xor
and
and
and
and
or
fisubs
into
insl
cmp
insl
cmp
insl
cmp
xor
dec
mov
mov
mov
mov
mov
push
lret
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
pop
dec
push
cmp
dec
xor
sub
sub
or
fisubs
into
imul
imul
dec
inc
mov
movsl
mov
ret
ret
mov
mov
pop
lret
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
mov
and
and
sahf
test
jns
fimuls
ficomps
arpl
pushf
xchg
xchg
mov
mov
ret
faddp
lods
mov
arpl
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
pop
iret
imul
inc
sbb
or
add
arpl
sahf
jnp
xchg
stos
mov
cmpsb
mov
stos
mov
mov
dec
xor
mov
mov
mov
mov
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
jae
iret
imul
dec
sbb
mov
sub
add
xchg
xchg
xchg
out
iret
mov
stos
xchg
out
mov
stos
mov
mov
arpl
mov
mov
ret
mov
mov
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
jae
jnp
push
adc
mov
sub
popa
xor
xor
add
add
out
into
imul
scas
xchg
out
xchg
out
xchg
into
insl
cmp
inc
movsl
xchg
xchg
faddp
mov
ret
faddp
lods
mov
jnp
test
jnp
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
sarl
roll
pop
adc
mov
sub
popa
xor
gs
gs
xor
adc
or
add
add
add
jns
ficomps
out
pushf
out
pushf
fimuls
jae
imul
mov
mov
mov
mov
jnp
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
arpl
imul
sub
scas
inc
pushf
stos
mov
gs
gs
gs
gs
gs
imul
dec
dec
add
add
add
out
xchg
adcb
pushf
out
pushf
out
pushf
out
xchg
mov
xor
inc
lods
sahf
pushf
mov
ret
faddp
lods
mov
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
imul
and
pushf
mov
ret
mov
jnp
popa
sub
gs
gs
popa
sub
xor
add
add
add
push
out
into
popa
sub
mov
out
movsl
out
movsl
out
movsl
fimuls
arpl
mov
mov
mov
ret
inc
xchg
fistps
xchg
xchg
fistl
xchg
xchg
fistl
xchg
xchg
fistl
xchg
xchg
fistpl
pushf
jae
jnp
mov
xchg
mov
mov
scas
lods
gs
gs
jno
sbbb
jae
adcb
adc
add
mov
xchg
imul
lods
out
movsl
out
mov
into
insl
cmp
cmp
mov
mov
pushf
fbld
fbld
fbld
fbld
fbld
fbld
jecxz
test
mov
ret
inc
sub
mov
mov
jne
fimuls
out
movsl
out
mov
mov
add
imul
add
neg
into
gs
mov
out
ret
lods
out
ret
lods
out
mov
inc
xchg
xchg
lods
mov
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
movsl
jecxz
xchg
fistps
sub
faddp
mov
ret
lods
xorb
dec
out
mov
out
mov
ficoms
add
xchg
imul
arpl
mov
ret
mov
ret
lods
out
mov
sahf
jnp
push
xor
inc
xchg
xchg
movsl
cmp
dec
lods
out
lods
jecxz
lods
jecxz
lods
jecxz
lods
jecxz
lods
jecxz
lods
jecxz
lods
out
lods
out
pushf
fbld
scas
and
jae
mov
mov
mov
xchg
jno
out
mov
out
ret
lods
out
ret
lods
out
pushf
mov
sub
add
add
out
into
insl
cmp
stos
mov
lret
mov
mov
mov
mov
lcall
inc
test
mov
movsl
sub
mov
mov
out
mov
mov
out
mov
mov
jmp
lods
out
push
lret
arpl
mov
imul
ret
mov
mov
mov
movsl
jns
into
insl
inc
out
mov
out
mov
mov
mov
adcb
or
sbb
out
mov
out
ret
lods
out
lret
mov
lret
mov
mov
dec
cmp
imul
mov
lods
out
mov
mov
jmp
mov
imul
and
arpl
mov
mov
mov
mov
pushf
imul
lods
out
lret
mov
lret
mov
iret
mov
inc
sbb
or
add
out
test
jne
out
lret
mov
iret
mov
iret
mov
mov
into
insl
inc
jnp
xor
jno
dec
lret
pop
mov
into
lods
out
imul
sbb
mov
mov
mov
mov
movsl
xchg
xchg
mov
lods
pop
cmp
mov
lret
mov
iret
mov
iret
mov
cmpsb
mov
add
jge
jge
out
lret
mov
rol
out
rol
out
rol
out
lret
mov
xchg
jae
popa
xor
and
mov
sub
cmp
scas
mov
mov
mov
mov
movsl
pushf
xchg
xchg
test
test
movsl
pop
cmp
jns
out
pushf
out
rol
out
iret
mov
iret
mov
scas
xchg
mov
sub
or
add
jge
jne
out
lret
mov
rol
not
not
not
out
mov
lcall
sub
xor
cmp
inc
pop
dec
dec
pop
push
dec
pop
push
dec
arpl
jnp
inc
pushf
push
xor
pop
out
pushf
out
rol
not
out
rol
not
not
not
out
mov
add
cmpsb
test
imul
xlat
into
not
not
not
not
not
into
not
into
out
mov
stos
mov
xchg
imul
pop
fiadds
fiadds
out
jnp
mov
out
rol
not
into
not
into
not
out
xlat
not
not
into
out
rol
fimuls
sbb
adc
add
mov
fimuls
neg
into
neg
into
neg
into
neg
into
not
into
not
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
not
into
not
into
not
into
not
into
neg
into
not
into
out
pushf
jne
imul
and
jmp
xchg
imul
xor
sahf
test
rol
neg
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
into
neg
out
mov
lods
push
and
or
neg
mov
popa
sub
mov
mov
neg
neg
neg
neg
neg
neg
neg
neg
neg
neg
neg
out
iret
mov
jns
movsl
dec
and
sbb
add
add
out
out
out
xchg
jns
into
insl
cmp
sbbb
jnp
mov
out
ret
lods
out
lret
mov
mov
mov
ficoms
mov
sub
lods
cmpsb
movsl
mul
fsubrp
iret
mov
sahf
jnp
sahf
jnp
sahf
jnp
sahf
jnp
sahf
jnp
sahf
jnp
sahf
jnp
xchg
cmpsb
pushf
add
jmp
pop
incl
add
incb
add
add
clc
add
pop
incl
add
lock
pop
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
clc
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
ud0
add
lock
aas
incl
add
cld
add
jg
add
incl
add
add
add
add
add
add
add
or
add
add
orb
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
sbb
add
adc
add
sbb
add
or
add
adc
add
adc
add
sbb
add
sbb
add
sbb
add
sub
add
and
add
or
dec
and
add
adc
push
sub
add
sbb
inc
cmp
add
adc
imul
jae
sbb
jae
sbb
jnp
sbb
dec
cmp
add
sub
add
add
imul
add
push
sub
aaa
dec
xor
sbb
add
popa
sub
sub
add
insl
and
sub
add
xor
addr16
sub
arpl
add
xor
arpl
add
inc
add
inc
add
dec
add
dec
add
inc
add
dec
add
push
add
dec
add
inc
add
pop
add
push
add
arpl
arpl
add
imul
imul
jae
jae
test
add
sbb
test
add
sub
test
add
and
pushf
pop
sub
mov
add
xor
xchg
pop
cmp
movsl
dec
and
lods
push
and
movsl
push
sub
lods
push
sub
mov
and
mov
sub
mov
pop
cmp
mov
xor
mov
cmp
test
add
popa
xor
mov
cmp
into
popa
sub
xor
into
xor
into
imul
add
imul
add
push
add
push
add
inc
add
imul
mov
add
jge
add
insl
inc
add
jne
add
jno
add
jne
add
jns
add
jb
add
jne
add
jns
add
jp
add
jl
add
xchg
add
mov
add
lcall
adc
sbb
or
sbb
or
sbb
or
and
sbb
add
mov
add
stos
xor
and
xor
sub
cmp
xor
sbb
dec
xchg
add
and
inc
xchg
and
imul
add
mov
cmp
inc
add
pop
add
add
jae
xor
inc
add
ret
inc
add
ret
dec
add
dec
add
push
add
pop
add
add
imul
iret
jae
imul
add
jnp
jae
jnp
mov
jne
test
pop
add
adcb
adcb
test
fiadds
pop
add
andb
mov
mov
fimuls
imul
xchg
imul
mov
ficoms
jae
ficomps
jnp
jp
test
mov
mov
xchg
xchg
xchg
add
xchg
add
stos
mov
mov
mov
pushf
mov
add
cmpsb
movsl
add
movsl
movsl
add
mov
movsl
add
lcall
ficomps
test
fisubrs
pushf
add
mov
mov
out
mov
out
xchg
add
mov
add
mov
add
mov
add
mov
lods
add
mov
add
scas
mov
leave
mov
mov
add
mov
movsl
add
mov
test
test
mov
test
mov
mov
xchg
add
movsl
add
jecxz
add
in
add
ret
mov
add
mov
out
lret
mov
out
int
add
mov
movb
faddp
movb
into
add
rol
add
fmul
add
add
out
into
add
out
add
out
out
add
repz
add
add
add
add
add
add
add
add
add
add
mov
cmp
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
push
bound
scas
jns
pop
dec
sbb
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
lock
loop
mov
inc
or
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lock
loop
ja
or
add
add
add
add
add
add
add
add
add
add
add
push
mov
repnz
repnz
icebp
icebp
repnz
icebp
lock
add
add
add
add
add
add
add
add
add
add
add
lock
icebp
icebp
lock
aad
aam
aad
jecxz
icebp
icebp
icebp
icebp
lock
push
or
add
add
add
add
add
add
add
dec
mov
lock
shrl
inc
dec
imul
jecxz
lock
shll
add
cmpsl
add
add
add
add
add
add
add
loop
loope
lods
jge,pn
jnp
xor
enter
fmul
js
mov
loope
jbe
add
add
add
add
add
add
add
push
mov
fsub
fcom
mov
xchg
mov
xor
leave
hlt
div
clc
fsubrl
loopne
jne
add
add
add
add
add
adc
fcomp
fcom
jb
fisttpl
out
fwait
andl
div
not
jb
fcomp
xlat
shll
add
add
add
add
add
sbb
mov
xchg
out
mov
insl
lret
neg
js
aad
mov
add
add
add
or
aam
aam
bound
mov
out
mov
and
cmpsl
lret
imulb
shrl
add
add
add
rcl
sarl
test
mov
mov
jnp
xor
js
rcl
sarl
add
add
pop
jne
mov
div
lret
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
movsb
lahf
xchg
cmp
mov
add
add
add
dec
lods
mov
mov
div
test
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
mov
and
mov
mov
movl
mov
mov
insb
out
div
div
lret
xchg
mov
mov
mov
and
push
stos
inc
add
add
inc
ja
mov
jns
shl
div
test
mov
mov
mov
mov
andb
mov
add
add
mov
mov
data16
div
div
lret
mov
mov
mov
mov
lahf
lea
lods
jne
add
pop
stos
lods
lods
stos
push
insl
div
div
div
lret
xchg
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
popf
mov
sbb
mov
stos
jbe
mov
div
lret
xchg
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
popf
fwait
xchg
cmp
arpl
jns
aaa
leave
div
div
div
lret
xchg
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
fwait
pushf
pushf
fwait
lea
iret
arpl
jbe
ss
div
div
lret
xchg
pushf
sahf
lahf
lahf
lahf
lahf
lahf
pushf
pushf
xchg
mov
xchg
fwait
xchg
fwait
xchg
mov
shlb
jb
fs
div
div
div
lret
test
mov
mov
lahf
sahf
mov
lea
xchg
shlb
jb
arpl
div
lret
xchg
mov
mov
lahf
mov
mov
mov
arpl
arpl
lret
div
div
ljmp
mov
mov
mov
mov
lea
add
pusha
pusha
pusha
pusha
pusha
xor
div
div
div
ljmp
mov
mov
mov
mov
mov
and
iret
ja
mov
div
div
div
lret
mov
mov
mov
mov
mov
mov
add
aam
mov
insl
div
div
div
ljmp
mov
mov
movsb
movsb
movsb
mov
mov
pop
push
add
aad
push
cmp
div
div
test
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsl
cmpsb
lahf
xchg
add
std
arpl
arpl
shl
div
imul
lea
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
pop
pop
pusha
pusha
pusha
adc
mov
sub
div
lret
out
mov
mov
mov
in
mov
pop
pusha
pop
pop
pop
pop
xor
add
stos
fcomp
fcom
pop
xor
div
div
ljmp
out
out
out
out
out
out
movsb
mov
pop
pop
pop
pop
push
add
add
jmp
loope
loope
sub
test
out
call
call
call
mov
hlt
neg
pop
pop
jne
mov
adc
add
add
lods
mov
loope
fisubl
insl
out
div
ljmp
jmp
jmp
jmp
jmp
ret
hlt
div
fisubrs
fsub
loop
pop
add
add
pop
loope
lock
xor
jmp
in
in
in
in
in
in
in
in
in
call
div
div
test
jecxz
jecxz
mov
add
add
add
add
repnz
ljmp
in
in
in
in
jmp
div
div
fisubrs
lock
add
add
add
add
fs
repnz
repnz
out
out
out
out
out
in
out
in
mov
div
div
loop
icebp
icebp
icebp
stos
adc
add
add
add
add
loop
lock
cmp
cmc
out
mov
div
div
out
shll
repz
add
add
add
add
shll
repz
sub
xchg
div
faddp
insb
push
mov
repz
add
add
add
add
add
add
add
repz
stc
stc
stc
repnz
xchg
mov
fstp
lret
insl
cmp
fdivr
repz
xlat
push
add
add
add
add
add
add
jns
repz
cli
cli
repz
icebp
mov
xor
xor
aaa
dec
push
stos
fdivr
cli
stc
cli
cli
cli
aam
add
add
add
add
add
add
add
shll
cli
cli
cli
cli
cli
cli
cli
icebp
aad
scas
scas
scas
lods
mov
fdivr
cli
cli
cli
stc
cli
cli
repz
dec
or
add
add
add
add
add
add
add
add
add
arpl
cli
cli
sti
cli
cli
cli
cli
sti
cli
cli
cli
sti
cli
cli
cli
cli
cli
fdivs
adc
add
add
add
add
add
add
add
add
add
add
mov
mov
sti
cli
cli
sti
cli
cli
cli
sti
cli
cli
cli
sti
cli
sti
jecxz
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
repz
dec
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
lods
mov
repnz
mov
push
inc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
stc
mov
mov
add
add
add
add
add
add
add
add
add
add
jmp
pop
incl
add
incb
add
add
clc
add
pop
incl
add
lock
pop
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
clc
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
ud0
add
lock
aas
incl
add
cld
add
jg
add
incl
add
add
add
add
add
add
add
and
add
add
andb
or
add
and
add
sbb
add
or
add
add
add
add
add
add
adc
xor
adc
add
add
add
dec
add
add
add
add
add
add
push
sbb
dec
xchg
xor
jmp
cmp
std
jnp
es
pop
push
sbb
mov
add
add
add
dec
add
add
add
add
add
add
add
add
jge
dec
ljmp
insb
cmp
leave
gs
mov
dec
xor
mov
xor
popa
push
push
fnstcw
adc
mov
or
xchg
add
add
add
push
add
add
add
add
add
adc
add
push
insb
and
mov
dec
inc
dec
insb
ds
into
insb
cmp
dec
imul
int3
imul
mov
dec
xor
lahf
cmp
sub
and
fiaddl
adc
sbb
pop
xchg
push
add
je
add
push
add
add
add
add
add
or
add
add
add
add
cltd
shrb
mov
gs
std
iret
outsb
ds
iret
insl
ds
insl
cmp
std
int
cmp
int
cmp
int3
imul
mov
dec
xor
cmpsb
inc
xor
mov
sub
imul
adc
cltd
add
add
add
pop
add
add
add
add
add
pop
add
add
insl
and
movsl
les
dec
jl
pushl
jo
call
insl
aas
dec
outsb
cmp
dec
insb
ds
insl
cmp
int
cmp
dec
imul
imul
int
cmp
int3
imul
pushl
inc
xor
fwait
cmp
std
jno
and
dec
pop
pop
lds
or
mov
add
add
add
add
sub
add
pop
add
add
add
add
insb
and
mov
ja
inc
std
shll
call
outsl
ds
insl
aas
std
shrb
call
outsb
cmp
dec
insl
cmp
iret
insl
cmp
std
iret
insb
cmp
into
insb
cmp
into
insb
cmp
into
imul
imul
into
imul
int
cmp
leave
cmp
lds
mov
inc
xor
xchg
aaa
sub
out
sbb
sub
add
add
pusha
add
add
add
sub
add
add
add
add
jne
and
fists
push
dec
imul
into
outsb
aas
std
into
insl
ds
insl
ds
into
insl
ds
into
insb
cmp
dec
insb
cmp
iret
insl
cmp
iret
imul
into
insb
cmp
int
cmp
into
insb
cmp
into
insb
cmp
into
insb
cmp
into
imul
push
std
int
cmp
int3
imul
mov
dec
xor
pushf
cmp
sti
je
and
pop
sbb
pop
add
jg
add
pop
add
add
add
add
xchg
das
sub
jmp
lcall
mov
jns
call
ja
std
shlb
call
jno
dec
outsl
inc
dec
insl
ds
shrb
dec
insb
cmp
dec
insl
cmp
int
cmp
dec
insl
cmp
std
iret
insl
cmp
dec
insb
cmp
iret
insb
cmp
into
insb
cmp
into
imul
push
dec
push
std
int
cmp
lret
mov
dec
xor
movsb
aas
xor
subl
lahf
add
add
add
add
xchg
xor
rcl
xchg
loopne
cmp
pushf
jg
lods
push
inc
call
test
aam
pop
std
aad
push
call
jle
call
jl
call
jns
std
shll
call
jb
std
iret
outsb
aas
dec
insb
cmp
std
iret
insl
cmp
iret
insl
cmp
std
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
insb
cmp
iret
insb
cmp
iret
insb
cmp
into
insb
cmp
into
imul
imul
int
cmp
int
cmp
leave
gs
inc
pop
xor
mov
or
add
add
add
xchg
ss
rorb
jmp
movsl
mov
mov
dec
call
test
fmuls
pop
call
sbbl
pop
call
adcl
aam
push
std
aam
push
call
ja
call
jno
std
into
insb
cmp
dec
imul
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
insb
cmp
into
imul
pop
xor
mov
cs
daa
and
add
add
pushf
cmp
in
nop
js
jecxz
mov
out
mov
les
std
enter
ficoml
push
std
xlat
mov
xchg
xlat
xchg
aad
pop
sbbb
adcb
jle
aam
dec
std
shlb
std
into
insb
cmp
std
int
cmp
into
insb
cmp
lret
std
lret
std
into
insb
cmp
int
cmp
int
cmp
into
insb
cmp
int
cmp
int
cmp
int
cmp
into
insb
cmp
lret
push
xor
mov
aas
sub
lret
sub
add
add
add
lahf
inc
cmp
xchg
jle
in
jmp
stos
mov
fcoms
ficomps
jb
ficoml
imul
lea
arpl
fadds
pop
call
sbbl
sbbl
adcl
iret
jo
dec
insb
cmp
mov
push
sub
inc
addr16
into
insb
cmp
iret
insl
cmp
std
iret
insl
cmp
dec
insl
cmp
std
lret
push
xor
mov
pop
das
shlb
add
add
inc
ds
fcomps
xchg
std
out
xchg
out
std
scas
pop
dec
std
fstpl
jnp
ficomps
jne
fistl
outsl
std
fistl
push
fimull
xlat
mov
fadds
pop
xlat
test
outsl
inc
std
lods
pop
xor
mov
pop
das
std
mov
das
inc
addr16
into
insb
cmp
into
insb
cmp
int
cmp
int
cmp
int
cmp
into
insb
cmp
lret
push
xor
mov
gs
lcall
or
add
add
add
sbb
sahf
mov
call
mov
std
jmp
jb
call
lea
loope
xchg
fbld
cmp
fstpl
std
fstl
jae
ficoml
insl
fimull
push
mov
mov
jnp
mov
pop
das
std
mov
xor
addr16
into
insb
cmp
iret
insl
cmp
dec
insl
cmp
std
lret
push
xor
mov
sub
int
push
cs
cmpsl
pop
pop
pusha
sub
or
test
mov
fwait
call
mov
call
xchg
jle
mov
scas
xchg
jmp
stos
mov
loope
mov
loopne
xchg
loope
test
fbld
cmp
popf
jge
ficomps
ja
fcoml
push
roll
dec
xchg
jb
rclb
gs
jno
std
test
pop
xor
addr16
into
insb
cmp
iret
insl
cmp
dec
insb
cmp
lret
push
xor
mov
sub
int
xor
xchg
xor
repnz
push
cmp
dec
fbld
lahf
std
jmp
mov
std
in
xchg
std
mov
dec
call
mov
std
in
xchg
std
in
xchg
loop
nop
std
jecxz
loop
mov
loope
xchg
fbld
cmp
lea
rcrl
jnp
fcomps
jnp
rcll
jno
ret
jl
std
stos
pop
xor
mov
cs
addr16
into
insb
cmp
int
cmp
into
insb
cmp
lret
push
xor
mov
sub
int
data16
lods
inc
sub
mov
je
cmp
push
jmp
lods
cwtl
jmp
movsb
in
mov
lahf
in
mov
pushl
lods
xchg
call
mov
pushf
std
out
fwait
jmp
mov
std
jecxz
xchg
jmp
lods
xchg
jmp
stos
std
mov
cmp
mov
xchg
fildll
nop
std
loop
fstps
jnp
rcll
jno
mov
dec
std
mov
xor
dec
imul
into
insb
cmp
lret
push
xor
mov
sub
int
xor
pusha
xor
lcall
add
pop
jmp
mov
in
mov
cmpsb
std
in
mov
mov
std
int3
mov
in
ret
scas
ljmp
std
out
movsl
call
mov
jmp
mov
fldt
fsubrs
xchg
std
loop
cltd
jmp
mov
jmp
mov
std
in
xchg
jmp
scas
xchg
fisubl
call
lcall
roll
dec
jne
dec
insl
aas
std
lret
inc
pop
xor
mov
fs
int3
xor
int3
data16
mov
movsb
movsb
add
add
cmp
push
jmp
mov
std
in
ret
out
mov
cmpsb
std
in
mov
fwait
mov
pop
std
out
lret
mov
std
in
lds
std
jmp
mov
mov
fdivl
popf
std
in
mov
std
call
mov
out
popf
std
out
pushf
std
in
lcall
mov
test
rcrb
jb
lret
jb
xlat
xchg
jb
aad
arpl
enter
mov
bound
int
arpl
lret
xor
rcrb
xchg
cmp
jns
add
add
or
addr16
mov
mov
out
les
in
mov
test
jmp
shrb
out
int3
mov
in
enter
shrb
loopne
stos
std
fistpll
scas
jmp
mov
jmp
lods
ljmp
std
jmp
mov
mov
fsubrl
std
aad
mov
rcrl
jp
into
xchg
jp
xlat
cwtl
jp
aad
ja
rclb
insl
fcmovbe
jg
ror
outsb
ds
int3
data16
fwait
xor
call
add
add
jnp
jmp
enter
mov
out
lds
out
shrl
mov
pop
jmp
mov
enter
int
std
loopne
mov
in
mov
jecxz
mov
ljmp
in
lret
mov
jmp
mov
in
mov
ljmp
jmp
mov
mov
std
fsubrs
xchg
call
movsb
dec
lcall
aam
jle
aam
sub
mov
test
ficomps
ja
mov
pop
pop
pop
dec
adc
jge
test
jmp
mov
icebp
int3
mov
lock
mov
out
ret
out
ret
lods
std
fisubs
pop
std
mov
xorb
xchg
mov
mov
repz
leave
std
icebp
aam
std
icebp
rol
out
iret
sar
into
mov
in
leave
mov
std
in
mov
jmp
mov
std
popf
std
fldcw
cwtl
std
aad
xchg
dec
mov
xchg
xlat
movsb
mov
loope
nop
loope
stos
mov
loop
mov
loope
mov
loopne
test
nop
sub
lods
cmc
out
in
add
add
add
sbb
in
mov
repz
mov
std
lock
icebp
leave
mov
lock
mov
out
ret
scas
out
ret
lods
push
lds
std
xor
sbb
std
imul
jmp
jns
std
mov
xchg
xchg
fsubrs
scas
push
rol
push
rol
std
lock
out
rol
in
int3
mov
fistpll
stos
std
loope
lods
jmp
mov
mov
std
fdivs
xchg
aam
xchg
mul
mov
call
jecxz
xchg
loop
scas
xchg
loope
scas
xchg
loopne
fs
xlat
mov
add
add
push
cltd
int3
xchg
xchg
out
lret
mov
push
sarl
push
int3
mov
std
lock
mov
out
lds
ljmp
and
std
xor
incl
std
inc
inc
inc
inc
sarb
repnz
jmp
mov
std
popl
push
aad
std
repnz
lret
aam
jmp
lret
jecxz
mov
ljmp
in
int3
mov
fnstsw
cmpsb
fidivl
fwait
fidivl
mov
jecxz
mov
in
mov
jecxz
mov
cmp
jns
and
out
into
mov
std
hlt
aam
repz
std
repnz
icebp
leave
mov
out
mov
repz
mov
xchg
jnp
adc
cmp
aas
aas
aas
std
inc
inc
inc
std
ror
push
in
std
cld
icebp
jmp
push
out
std
mul
std
jmp
iret
ret
out
sar
rol
std
icebp
aad
icebp
aam
std
lock
std
out
rol
std
in
mov
fistpll
lods
std
fdivrl
mov
cmc
out
stos
ljmp
cmpsl
out
mov
inc
int
scas
scas
and
add
add
and
icebp
rol
push
fxch
push
xlat
std
repz
push
rol
push
sarb
push
int3
mov
push
int
std
lcall
std
xor
xor
xor
xor
xor
xor
into
lret
push
ljmp
lock
push
in
inc
cltd
xchg
std
mov
outsl
in
fcmove
in
fcmovbe
std
icebp
fst
push
push
fst
std
repz
push
fxch
push
xlat
lret
aad
std
out
mov
jmp
ret
mov
ffreep
mov
fstpt
imul
ret
mov
jmp
mov
in
les
loope
inc
cmp
add
and
fsubrs
push
fcmovne
push
fmul
std
cmc
xlat
push
aad
push
rol
std
repz
push
lret
mov
std
hlt
lret
mov
pushf
xorl
sub
sub
sub
sub
xor
das
inc
sarb
push
call
incl
inc
std
push
sub
decl
jg
shll
lods
ljmp
push
fcmovne
push
loopne
push
std
hlt
fst
jmp
jmp
int3
mov
jmp
mov
jecxz
mov
ljmp
ljmp
aaa
lret
fldl
jg
es
mov
push
fxch
std
neg
iret
std
neg
int
neg
leave
std
hlt
fadd
std
cmc
hlt
aam
std
repnz
std
repz
icebp
lret
mov
xchg
jnp
std
or
std
and
and
and
and
sub
sub
sarl
std
ds
std
and
and
push
pop
and
lods
mov
lret
mov
lcall
jge
std
mov
jo
std
lds
xchg
std
fldcw
test
std
jmp
enter
in
sar
into
sar
rol
out
icebp
aam
in
lret
fbstp
add
add
sub
loopne
lods
cmc
fmul
clc
loopne
push
std
neg
into
push
fcmovne
push
fxch
std
cmc
xlat
aad
push
rol
push
iret
mov
push
int3
mov
lcall
or
sbb
sbb
sbb
sbb
sbb
pop
std
push
push
push
lcall
sbb
lcall
sbb
std
mov
cmpsb
push
ljmp
lock
std
lock
std
icebp
out
repnz
repnz
cli
in
loope
out
aad
std
fdivs
xor
dec
pop
sbb
ljmp
sub
dec
inc
std
mov
jl
dec
lcall
loopne
pushf
out
pop
pop
mov
add
add
mov
sar
stc
jecxz
clc
loopne
std
neg
sar
neg
iret
push
fmul
std
neg
lret
fadd
push
rol
std
repz
push
iret
mov
push
into
mov
std
add
adc
call
adc
adc
adc
or
cmpl
stc
lock
sti
lock
cld
bnd
sti
repz
cld
repz
sti
repz
sti
repnz
in
jecxz
pop
push
push
decl
push
call
sbb
std
jns
jno
pop
pop
push
call
push
paddw
adc
ljmp
adc
pushl
push
push
sti
dec
push
adc
popf
xchg
jo
and
add
add
mov
push
fst
stc
in
stc
in
std
mul
aam
clc
push
std
neg
int
neg
leave
push
fxch
push
aad
std
repz
push
rol
std
repz
clc
sarl
incl
add
decl
or
std
daa
daa
daa
call
push
dec
mov
std
hlt
in
sti
repnz
std
std
hlt
in
std
hlt
in
sti
bnd
std
hlt
in
std
hlt
in
std
imul
call
pop
pop
ljmp
mov
std
clc
jmp
push
call
std
add
or
decl
or
incb
add
repnz
add
fwait
fwait
add
add
add
add
add
and
repnz
std
stc
out
std
clc
in
stc
in
std
mul
sar
clc
loope
neg
iret
std
neg
into
std
cmc
fcmove
std
neg
leave
cmc
xlat
std
repz
hlt
rol
std
repz
mov
cmc
int3
mov
std
and
and
jne
jne
outsb
outsb
outsb
std
imul
xlat
sar
push
out
std
sti
repnz
sti
repnz
std
sti
repnz
std
sti
repnz
std
hlt
in
std
clc
icebp
ljmp
imul
fcom
sar
clc
lock
sti
in
jecxz
sti
in
push
out
addr16
pop
std
add
add
pop
pop
pop
incb
add
clc
add
add
mov
add
ds
fs
in
rol
clc
in
cli
out
std
cli
out
clc
in
stc
jecxz
std
stc
loopne
clc
loopne
push
fmulp
push
fmul
std
neg
leave
push
fmul
std
hlt
aad
push
int3
mov
std
aam
call
nop
cmp
pop
push
cmp
cmp
jbe
jbe
jae
jae
je
je
fcmovbe
sar
push
lock
std
repz
std
hlt
out
std
hlt
out
std
stc
icebp
jmp
fwait
cwtl
xchg
ljmp
jo
jne
je
xlat
aam
clc
repnz
sti
repz
std
std
hlt
in
sti
icebp
jmp
std
std
out
in
imul
std
add
add
add
add
add
add
add
add
add
add
add
add
loope
mov
hlt
cli
jmp
cli
out
cli
in
std
clc
in
stc
loope
clc
loope
push
std
neg
into
push
fcmove
std
icebp
rol
call
xorl
and
lret
pop
mov
and
pop
sbb
incl
jns
jl
jnp
aad
push
icebp
cmc
out
std
imul
std
sahf
fwait
cltd
pushl
jbe
js
ja
fcmovu
aam
push
icebp
std
cmc
out
sti
repz
std
std
cmc
out
std
cmc
out
sti
hlt
out
std
cld
icebp
jmp
call
dec
std
add
add
add
add
pop
pop
pop
incl
add
fildl
add
sub
add
add
add
add
sbb
ja
jmp
std
mul
clc
out
std
stc
out
std
stc
out
stc
in
std
stc
in
std
stc
jecxz
std
clc
loope
neg
sar
repz
call
cmpl
add
add
add
add
cmp
xchg
addb
xlat
std
lock
out
mov
jge
std
addb
std
clc
repnz
std
hlt
out
std
cld
hlt
out
std
std
cmc
out
cld
hlt
out
std
cld
hlt
out
std
std
cmc
out
cld
cmc
out
std
stc
hlt
std
jb
jae
addl
add
adc
cmp
xchg
jecxz
mov
jmp
ret
rol
out
aad
std
icebp
fmul
push
fcmove
push
fmul
push
fmul
std
repnz
leave
ljmp
jg
sub
or
add
add
add
inc
inc
std
lea
mov
mov
mov
xchg
mov
fcmovbe
aam
stc
repz
cld
cmc
out
std
div
div
cld
div
std
div
div
cld
imul
std
push
repnz
in
jmp
call
mov
add
add
push
sbb
xor
inc
inc
sti
stos
pop
push
pushl
jne
leave
nop
mov
aam
fwait
jmp
mov
mov
fistpll
mov
mov
sub
xor
add
pusha
dec
dec
dec
cld
xchg
xchg
xchg
nop
nop
nop
call
lea
cli
cmc
div
cld
cmc
icebp
std
div
div
cld
cmc
icebp
std
div
div
clc
repz
in
jmp
lcall
xchg
xchg
fs
add
lods
dec
dec
dec
or
add
add
push
adc
or
adc
and
jnp
push
sbb
jns
and
sahf
inc
cmp
lret
add
pop
inc
inc
inc
clc
sahf
sahf
sahf
cwtl
cwtl
cwtl
std
xchg
xchg
xchg
fdivr
stc
hlt
std
cld
div
std
std
div
cld
div
std
cld
div
std
std
div
cld
div
std
clc
repz
jmp
in
popf
pushf
popf
std
pushf
pushf
pushf
push
add
movsb
dec
dec
dec
pop
and
sbb
sbb
add
add
pop
pop
pop
dec
dec
dec
cld
mov
sahf
sahf
std
mov
loop
stc
hlt
cld
div
std
clc
repz
clc
repz
cld
div
std
stc
hlt
out
jmp
jmp
mov
incl
add
cmpsb
push
push
push
or
add
add
cmp
pusha
dec
dec
dec
cld
lods
lods
lods
movsb
movsb
movsb
jmp
out
stc
cmc
std
div
div
stc
cmc
std
lock
ljmp
test
ja
add
add
push
push
push
pop
dec
dec
dec
stc
mov
mov
stos
stos
stos
std
stos
stos
stos
std
ljmp
std
cli
idiv
icebp
out
in
mov
mov
mov
mov
ja
ja
add
add
pop
pop
pop
pop
push
push
push
cld
mov
mov
mov
mov
mov
mov
call
jmp
pushl
mov
jl
jl
add
add
cmp
cmp
push
push
cld
mov
mov
std
mov
mov
mov
mov
mov
addb
dec
dec
dec
or
add
add
ss
push
push
push
cli
mov
ret
ret
incb
add
movsl
dec
dec
dec
or
add
add
push
pop
pop
pop
pop
std
leave
leave
leave
decl
add
cmpsb
push
push
push
or
add
add
imul
daa
fadds
add
xchg
push
push
push
pop
loopne
incl
add
ud0
incl
add
add
incl
add
add
incl
add
add
jg
incl
add
add
pop
incl
add
add
add
add
rolb
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jg
add
jg
add
jg
add
aas
add
addb
add
aas
add
addb
add
pop
add
addb
add
pop
add
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
cld
add
addb
add
push
inc
add
add
jmp
add
add
push
add
add
clc
add
add
cld
add
add
incb
incl
add
incl
incl
add
incl
add
add
add
add
add
add
or
add
add
orb
add
or
add
adc
movups
add
push
push
add
adc
add
pop
pop
add
and
add
and
das
add
aaa
aaa
add
sbb
push
and
add
sub
pop
xor
sub
addr16
cmp
add
dec
add
push
add
inc
add
dec
add
add
dec
add
pop
add
push
add
pop
add
pop
add
push
add
data16
insl
add
jo
je
je
js
je
jge
jnp
xchg
xor
add
xor
cmpb
add
xor
pushf
cmp
add
push
sub
add
inc
xor
scas
dec
xor
stos
dec
cmp
mov
xor
stos
pop
xor
stos
push
aas
add
push
xor
add
push
cmp
add
pop
xor
les
add
gs
add
cmp
leave
cmp
push
cmp
shrb
add
jo
add
dec
add
push
dec
add
push
push
add
dec
inc
add
dec
dec
add
push
dec
add
dec
add
push
push
add
pop
push
add
pop
push
add
inc
add
outsb
dec
add
bound
mov
push
add
pop
add
arpl
xchg
js
add
imul
mov
jb
add
jne
add
jp
add
ja
add
jns
add
outsb
inc
add
outsb
inc
add
outsl
dec
add
jo
add
jo
add
jb
add
jne
add
jb
add
jbe
add
jns
add
imul
jae
add
ja
add
jnp
add
je
add
jge
add
jns
add
jge
add
jg
add
js
add
jge
add
jl
add
jg
add
jl
add
xorl
leave
sbbl
aad
pop
add
andl
mov
roll
add
mov
aad
fs
xchg
xlat
mov
fmuls
outsl
add
lea
ficoml
ja
lds
jae
les
jl
lret
mov
rorb
add
nop
jno
xchg
jp
into
xchg
jp
rcll
jb
fstpl
jp
fistl
jl
fstpl
jge
xchg
lea
nop
nop
popl
cwtl
xchg
xchg
add
xchg
add
mov
cmpsb
add
mov
add
mov
add
nop
addl
pushf
addl
pushf
addl
lcall
fwait
xchg
add
pushf
xchg
add
popf
addl
aad
xchg
fisubs
mov
mov
shlb
add
test
xchg
add
mov
fwait
add
stos
lcall
mov
mov
jecxz
mov
in
xchg
add
scas
xchg
add
lods
cwtl
add
mov
add
mov
add
mov
add
mov
add
mov
movsb
add
lods
mov
add
mov
mov
out
movsl
add
mov
mov
add
shrl
jmp
lret
mov
add
mov
ror
leave
add
rol
add
xlat
roll
call
iret
rolb
rol
add
xlat
movl
hlt
add
loop
add
jecxz
add
jmp
in
cld
repz
div
add
and
and
sbb
dec
xor
aaa
xor
adc
and
add
add
inc
inc
aas
inc
cmp
sub
adc
add
jb
pop
inc
jl
inc
inc
inc
jl
inc
aas
cmp
das
sub
sbb
jo
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
aas
ds
sub
pop
push
andl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
xor
sub
push
dec
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
aas
aas
aas
aaa
xor
sub
push
pop
xchg
mov
pop
jle
inc
inc
jl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
sub
add
add
add
enter
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
add
enter
fwait
xchg
cltd
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
push
lods
fcomp
mov
xchg
cltd
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
add
dec
lods
fcomp
scas
pop
lods
stos
sahf
sahf
sahf
fwait
sahf
cltd
cltd
xchg
xchg
xchg
xchg
sub
inc
inc
inc
inc
inc
inc
cmp
dec
fcomps
mov
lods
stos
stos
sahf
sahf
sahf
sahf
fwait
cltd
cltd
xchg
jp
cmp
cs
inc
inc
inc
inc
inc
inc
inc
cmp
add
dec
fiaddl
mov
mov
stos
stos
sahf
sahf
sahf
nop
arpl
ds
inc
inc
inc
inc
ds
addb
add
loopne
loopne
sbb
lret
lret
mov
mov
stos
xchg
xchg
mov
sub
inc
inc
inc
cmp
xchg
jno
add
loopne
pop
loope
fcmovu
fcmovu
fxch
lret
lret
lods
mov
mov
inc
inc
inc
inc
inc
cmp
add
pop
fsub
out
loopne
fsub
loope
fstp
fstp
fcmove
test
lret
fxch
scas
test
inc
inc
aas
jne,pt
xchg
xchg
mov
add
add
add
in
out
loopne
movsb
jmp
jmp
out
fst
int3
rcl
fstp
fstp
fcmove
ret
scas
scas
xchg
arpl
aas
cmp
bound
imul
out
out
jmp
jmp
jmp
aam
loope
jmp
loope
fst
lret
mov
jp
xchg
fwait
addl
add
add
imul
in
in
out
pop
jmp
cmc
cmc
cmc
call
in
jmp
out
call
int3
ret
scas
stos
lret
fwait
xchg
pop
mov
jmp
in
in
in
lds
div
cmc
ljmp
in
in
jmp
jmp
loope
rcl
int3
test
scas
int3
fcmovu
xchg
mov
in
jmp
shlb
mov
div
div
cmc
in
cmc
in
in
jmp
ror
leave
rcr
fstp
fstp
imul
add
out
out
in
jmp
in
addr16
adc
pop
je
rcr
cmc
div
cmc
out
ljmp
iret
shl
out
loope
je
add
add
add
in
out
out
cmc
out
out
in
in
in
or
adc
jmp
shlb
hlt
ljmp
in
aam
out
jmp
fdivrl
add
out
imul
cmc
out
cmc
out
in
out
addr16
adc
lock
in
sti
div
hlt
div
div
imul
ljmp
jmp
insb
add
add
add
out
idiv
out
out
cmc
out
out
in
out
mov
or
lock
inc
jno
clc
clc
sti
stc
stc
div
div
ljmp
in
rolb
add
add
dec
jecxz
stc
div
imul
out
out
out
out
out
mov
or
or
clc
adc
hlt
idiv
sti
idiv
hlt
hlt
hlt
ljmp
add
add
dec
jecxz
stc
stc
stc
out
stc
out
imul
out
out
out
add
or
in
or
pop
mov
je
insb
mov
div
hlt
hlt
div
lret
add
inc
out
stc
stc
stc
stc
div
out
imul
out
cmc
out
mov
add
add
add
mov
std
mul
push
or
cmovs
leave
ljmp
out
sti
stc
stc
stc
idiv
imul
out
out
cmc
out
cmc
mov
add
add
std
adc
add
sbb
add
push
adc
add
add
stc
sti
sti
sti
stc
stc
stc
idiv
imul
out
cmc
out
out
mov
add
adc
mov
or
add
and
add
add
idiv
sti
sti
sti
sti
stc
stc
idiv
div
imul
out
out
mov
and
and
mov
and
std
sbb
add
add
add
add
imul
sti
sti
idiv
idiv
imul
out
jmp
lods
dec
or
and
repz
mov
and
std
std
sbb
add
add
add
add
stc
sti
std
sti
sti
sti
sti
sti
idiv
imul
jmp
dec
mov
sbb
mov
and
mov
and
adc
add
or
add
add
sti
sti
sti
sti
sti
sti
sti
div
cmc
mov
add
add
adc
mov
push
and
add
dec
mov
div
sti
idiv
out
mov
add
add
adc
mov
cld
mov
sbb
add
add
add
push
imul
inc
add
mov
mov
icebp
cld
mov
jo
push
dec
push
add
add
mov
cld
mov
and
add
adc
cld
mov
adc
cld
mov
add
adc
cld
mov
adc
mov
mov
add
mov
adc
adc
mov
add
adc
mov
add
and
add
add
incl
add
incl
add
aas
incl
add
add
incl
add
add
incl
add
add
incl
add
add
aas
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
rolb
add
aas
add
rolb
add
pop
add
addb
add
pop
add
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
addb
add
inc
inc
add
add
jmp
add
add
push
add
add
clc
add
add
cld
add
add
incb
incl
add
incl
incl
add
incl
dec
incl
add
add
add
add
add
add
add
and
add
add
andb
add
nop
sahf
pushl
pop
pushl
pop
pushl
jo
jo
pop
pushl
pop
pushl
pop
lcall
nop
sahf
incl
add
add
jo
decl
dec
decl
dec
lcall
dec
incl
jo
lcall
jo
lcall
pop
jo
dec
dec
dec
decl
dec
ljmp
das
das
lcall
pop
call
add
add
dec
pop
lcall
pop
lcall
nop
sahf
jmp
sahf
lods
push
sahf
lods
push
lods
lods
ljmp
ljmp
push
lods
sahf
jmp
sahf
nop
call
dec
dec
ljmp
das
das
incl
add
add
jo
call
adcb
ficoms
lods
jmp
sahf
mov
push
lods
mov
ljmp
push
lods
lods
jmp
lods
sahf
fisubrs
call
lods
cmp
nop
cmp
jo
ljmp
das
das
pushl
jo
sahf
lods
sahf
pushl
jo
addb
call
sbbb
ficoms
lods
ficomps
lods
jmp
sahf
lods
push
lods
lods
ljmp
ljmp
push
lods
sahf
jmp
lods
nop
fisubrs
call
lods
cmp
sahf
cmp
sahf
jo
jo
dec
ljmp
das
add
sahf
nop
nop
incl
add
add
jo
ljmp
lods
inc
jo
call
jo
call
sbbb
ficoms
lods
jmp
nop
lods
jmp
sahf
mov
ljmp
push
lods
lods
jmp
lods
sahf
fisubrs
call
lods
cmp
sahf
cmp
lods
jo
rcrb
jo
lods
sbbb
das
das
incl
add
add
add
add
nop
nop
call
add
add
adcb
pop
sahf
inc
jo
call
jo
call
sbbb
rclb
lods
ficoms
lods
jmp
sahf
lods
push
lods
lods
ljmp
ljmp
push
lods
sahf
jmp
lods
nop
fisubrs
call
lods
cmp
sahf
cmp
lods
jo
rcrb
pop
mov
pop
das
lcall
pop
incl
jo
pushl
jo
jo
jo
jo
jo
nop
nop
nop
call
pop
sahf
inc
pop
sahf
mov
pop
lods
inc
jo
call
jo
call
sbbb
rolb
lods
ficoms
lods
jmp
sahf
mov
ljmp
push
lods
lods
jmp
lods
sahf
fisubrs
call
lods
cmp
sahf
cmp
lods
jo
sahf
jo
lods
jo
sahf
jo
mov
sahf
pop
lcall
das
ljmp
add
pushl
jo
jo
jo
jo
jo
jo
jo
nop
nop
nop
incl
add
add
adcb
mov
pop
sahf
inc
pop
sahf
inc
jo
call
jo
inc
jo
call
jo
call
sbbb
ficoms
lods
jmp
sahf
lods
push
lods
lods
ljmp
ljmp
jmp
lods
nop
jmp
lods
cmp
lods
cmp
lods
jo
rcrb
pop
inc
sahf
jo
mov
sahf
pop
lcall
add
pop
dec
das
incl
das
add
dec
das
dec
pushl
jo
jo
jo
jo
jo
jo
jo
lods
lods
lods
lcall
dec
sahf
mov
dec
sahf
mov
pop
sahf
inc
pop
sahf
mov
pop
lods
inc
jo
call
jo
call
sbbb
ficoms
lods
jmp
sahf
mov
ljmp
push
lods
lods
jmp
lods
nop
fisubrs
call
lods
cmp
sahf
cmp
lods
jo
sahf
jo
mov
sahf
pop
lcall
das
incl
add
incl
add
incl
add
incl
add
lcall
pop
pushl
jo
jo
jo
jo
jo
lods
sahf
sahf
lcall
das
sahf
ljmp
sahf
ljmp
sahf
mov
pop
sahf
inc
jo
call
jo
call
sbbb
rclb
lods
jmp
sahf
lods
push
lods
lods
ljmp
push
lods
lods
jmp
lods
sahf
fisubrs
call
lods
cmp
sahf
cmp
lods
jo
sahf
jo
mov
sahf
pop
mov
add
incl
add
incl
add
incl
add
incl
add
incl
das
add
pop
dec
dec
pushl
jo
jo
jo
sahf
sahf
lods
call
das
sahf
lcall
das
sahf
ljmp
sahf
ljmp
sahf
mov
pop
sahf
inc
jo
call
jo
call
sbbb
ficoms
lods
jmp
sahf
mov
ljmp
push
lods
sahf
fisubrs
call
lods
cmp
sahf
cmp
lods
jo
sahf
jo
mov
sahf
pop
mov
sahf
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
das
das
pushl
cmp
jo
incl
add
add
sahf
sahf
lcall
das
nop
lcall
das
nop
ljmp
nop
mov
pop
nop
mov
pop
sahf
inc
pop
sahf
inc
jo
call
jo
call
sbbb
ficoms
lods
push
lods
lods
ljmp
push
lods
lods
jmp
lods
nop
fisubrs
call
lods
jo
rcrb
pop
inc
sahf
pop
mov
sahf
pop
ljmp
das
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
das
decl
dec
call
add
add
sahf
call
add
lcall
das
nop
ljmp
sahf
mov
dec
sahf
mov
pop
sahf
inc
pop
sahf
inc
jo
call
jo
call
sbbb
ficomps
mov
ljmp
jmp
lods
nop
ficomps
cmp
sahf
cmp
sahf
jo
sahf
jo
mov
sahf
pop
ljmp
dec
lcall
dec
das
incl
add
incl
add
incl
add
incl
add
call
add
incl
add
add
sahf
lcall
das
nop
lcall
das
nop
lcall
das
nop
ljmp
nop
mov
pop
nop
inc
pop
sahf
inc
jo
inc
jo
inc
sbbb
ficoms
lods
jmp
lods
lods
mov
lods
jmp
lods
nop
call
lods
cmp
sahf
cmp
lods
pop
inc
sahf
pop
mov
sahf
pop
ljmp
dec
lcall
sahf
das
lcall
nop
add
nop
sahf
add
add
add
add
add
nop
nop
das
decl
add
addb
add
pop
lods
lcall
das
sahf
lcall
das
sahf
lcall
add
lcall
das
sahf
lcall
dec
sahf
ljmp
sahf
mov
jo
inc
sbbb
ficoms
lods
push
lods
lods
ljmp
jmp
lods
cmp
sahf
cmp
lods
jo
sahf
jo
mov
sahf
pop
ljmp
dec
pushl
das
incl
sahf
add
sahf
nop
das
call
sahf
das
incl
add
lcall
das
pushl
das
lcall
das
ljmp
das
das
incl
add
add
dec
lods
lcall
das
lods
lcall
das
lods
lcall
add
lcall
das
nop
ljmp
nop
ljmp
nop
inc
pop
sahf
inc
jo
call
jo
call
sbbb
jmp
lods
lods
push
mov
sahf
fidivrs
cmp
lods
jo
sahf
jo
mov
sahf
pop
ljmp
das
lcall
add
jo
das
lcall
add
jo
add
nop
lods
add
sahf
sahf
das
call
add
incl
jo
pushl
add
dec
dec
das
call
add
add
add
add
nop
mov
lcall
dec
lods
lcall
dec
lods
lcall
das
sahf
lcall
das
sahf
lcall
add
lcall
das
sahf
ljmp
sahf
inc
jo
call
jo
call
nop
sahf
call
sbbb
lods
jo
ljmp
nop
call
lods
cmp
sahf
jo
mov
sahf
pop
ljmp
dec
lcall
add
jo
das
lcall
add
jo
das
lcall
add
xorb
nop
lods
das
incl
add
lcall
jo
call
subb
pop
dec
pop
incl
add
add
add
add
mov
sahf
jo
ljmp
lods
lcall
dec
lods
lcall
dec
lods
lcall
dec
sahf
lcall
das
sahf
lcall
add
lcall
dec
sahf
ljmp
sahf
mov
adcb
sahf
sahf
sahf
call
nop
nop
lcall
pop
incl
sahf
pop
mov
sahf
das
lcall
add
dec
pop
add
dec
das
add
pop
jo
pushl
das
pushl
add
jo
das
lcall
add
sahf
lods
dec
decl
add
add
add
nop
lods
das
pushl
das
lcall
lods
dec
ljmp
das
das
incl
add
add
add
add
rol
lcall
pop
mov
lcall
dec
mov
lcall
dec
lods
lcall
dec
lods
lcall
das
sahf
lcall
das
sahf
lcall
das
nop
ljmp
sahf
call
lods
lods
mov
mov
inc
mov
rol
sar
nop
sahf
sahf
lcall
dec
lcall
dec
das
incl
add
incl
add
incl
add
incl
add
lcall
add
jo
das
lcall
das
pushl
dec
call
add
decl
das
incl
subb
sahf
mov
pop
decl
das
incl
add
add
sar
sahf
jo
ljmp
mov
lcall
pop
mov
ljmp
lods
lcall
dec
lods
lcall
dec
lods
lcall
das
sahf
incl
dec
jo
nop
addb
sahf
sahf
sahf
lcall
mov
mov
inc
rol
call
rcl
mov
pop
dec
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
dec
das
lcall
das
pushl
dec
lcall
das
lcall
add
call
subb
adcb
ljmp
das
jmp
sar
mov
ljmp
ljmp
mov
lcall
pop
lcall
dec
lcall
dec
mov
lcall
dec
lods
incl
das
jo
sbbb
pop
jo
lcall
pop
lcall
sahf
sahf
mov
mov
mov
inc
mov
rol
sar
adcb
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
sahf
dec
pushl
dec
pushl
dec
incl
add
incl
jo
lcall
das
pushl
dec
lcall
das
decl
das
pushl
cmp
inc
mov
ljmp
ljmp
ljmp
ljmp
mov
lcall
pop
lcall
pop
mov
pushl
cmp
xorb
pop
jo
pop
jo
pushl
jo
sahf
sahf
sahf
mov
inc
mov
mov
rol
inc
mov
das
dec
add
add
add
add
add
add
add
add
add
add
add
sahf
pop
pushl
dec
incl
pop
das
incl
add
call
nop
das
pushl
dec
pushl
dec
pushl
dec
decl
das
decl
dec
call
rcr
inc
mov
sar
sahf
jo
ljmp
ljmp
ljmp
ljmp
ljmp
lcall
jo
dec
dec
pop
ljmp
add
jo
cmp
jo
lcall
pop
lcall
pop
lcall
jo
jo
jo
add
add
add
add
inc
mov
mov
pushl
jo
dec
jo
incl
add
incl
add
incl
add
incl
add
ljmp
dec
ljmp
add
pop
pop
dec
lcall
dec
pushl
pop
lcall
dec
pushl
pop
lcall
dec
decl
dec
ljmp
dec
das
call
inc
mov
sar
lods
adc
sahf
add
nop
pop
sahf
incl
pop
lods
lcall
jo
ljmp
sar
lods
adc
pop
dec
jo
add
add
add
add
add
add
add
add
jo
jo
pop
pop
pop
lcall
dec
pushl
pop
lcall
dec
incl
add
incl
add
incl
add
inc
mov
mov
pushl
jo
sahf
movb
jo
pop
ljmp
dec
das
incl
add
lcall
dec
pushl
pop
incl
add
incl
add
incl
add
incl
add
incl
add
call
sbbb
pop
das
decl
dec
fdivrp
mov
ljmp
sar
nop
pop
lods
lcall
cmp
dec
nop
lcall
cmp
dec
nop
lcall
sbb
lods
adc
lods
sbb
add
add
add
add
add
add
add
add
add
add
dec
das
dec
decl
dec
lcall
pop
decl
pop
lcall
dec
lcall
dec
incl
add
incl
add
mov
mov
mov
incl
ficoms
pushl
pop
incl
add
ljmp
dec
das
pushl
pop
lcall
dec
lcall
dec
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pushl
pop
decl
pop
call
fdivrp
lods
adc
lods
sbb
jo
cmp
dec
nop
pushl
cmp
dec
nop
pushl
nop
call
nop
fdivrp
lods
sbb
lods
nop
fdivrp
add
add
add
add
add
add
add
add
add
add
add
add
addb
lcall
pop
call
dec
dec
lcall
dec
pushl
jo
lods
lods
sahf
ljmp
lods
ljmp
das
lcall
dec
ljmp
pop
das
pushl
jo
add
add
jo
pop
pushl
pop
pushl
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pushl
dec
incl
mov
fdivrp
pop
das
jo
dec
dec
jo
das
das
dec
pushl
nop
pushl
sahf
lcall
nop
pushl
sahf
pushl
nop
ljmp
jmp
decl
jo
add
add
add
add
add
add
add
add
add
add
sahf
lods
lods
lcall
pop
lcall
pop
call
nop
nop
call
nop
sahf
call
lods
lods
ljmp
dec
incl
add
incl
add
incl
add
incl
add
incl
add
pushl
pop
pushl
jo
jo
pop
ljmp
nop
ljmp
jo
add
add
add
add
add
add
add
add
dec
pop
dec
ljmp
incl
add
incl
add
incl
add
incl
add
pushl
nop
pushl
sahf
pushl
nop
incl
sahf
jmp
ljmp
hlt
lcall
jo
add
add
add
add
add
add
add
add
rcl
fdivrp
pop
pop
dec
incl
addb
nop
nop
cmp
nop
nop
call
sahf
sahf
lcall
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
sahf
pop
incl
hlt
sahf
ljmp
nop
ljmp
nop
ljmp
dec
lcall
dec
decl
dec
mov
add
add
add
incl
add
incl
add
incl
add
incl
add
ljmp
das
pop
pushl
nop
pushl
sahf
pushl
nop
ljmp
hlt
mov
lods
hlt
mov
lods
ljmp
add
add
add
nop
lods
call
mov
nop
incl
adcb
sahf
nop
sahf
lcall
mov
add
add
add
add
add
add
add
add
add
add
add
lods
ljmp
lods
hlt
sahf
ljmp
sahf
ljmp
sahf
ljmp
nop
ljmp
cmp
dec
dec
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
mov
jo
incl
lods
hlt
mov
mov
ljmp
hlt
lcall
add
decl
jo
jo
lods
lcall
cmp
fdivrp
call
mov
rol
inc
mov
lods
mov
pushl
sahf
decl
pop
incl
add
incl
add
incl
add
incl
add
incl
add
mov
lods
jo
mov
hlt
sahf
mov
hlt
sahf
mov
hlt
sahf
mov
hlt
sahf
call
jo
incl
add
add
add
add
pop
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
lods
incl
lods
ljmp
lcall
lods
hlt
call
lods
jmp
pushl
lods
decl
cmp
jo
lcall
mov
decl
lods
decl
lods
decl
sahf
lcall
sahf
lcall
sahf
pushl
lods
pushl
sahf
decl
pop
incl
add
incl
add
incl
add
incl
add
incl
sahf
cmp
ljmp
lods
ljmp
lods
hlt
lods
mov
hlt
sahf
ljmp
pop
lcall
add
add
jo
add
add
add
add
add
add
add
add
mov
sbbb
lods
mov
hlt
lcall
lods
hlt
lcall
lods
jmp
incl
add
incl
jo
decl
lods
lcall
mov
ljmp
sahf
lods
incl
sahf
nop
decl
sahf
decl
sahf
lcall
sahf
lcall
sahf
incl
ficomps
call
add
lcall
mov
jo
lods
hlt
lods
ljmp
mov
mov
ljmp
sahf
ficoms
incl
add
add
fsubrp
jmp
incl
add
incl
add
call
jo
ljmp
lcall
lods
hlt
call
sahf
jmp
decl
jo
add
add
jo
decl
cmp
sahf
decl
mov
ljmp
sahf
sahf
incl
nop
sahf
ljmp
lods
nop
decl
sahf
decl
sahf
pushl
lods
pushl
sahf
incl
fisubrs
add
add
sahf
fisubrs
subb
lods
hlt
mov
mov
ljmp
lods
hlt
lods
call
nop
nop
incl
add
add
hlt
hlt
ljmp
add
pop
pop
jo
nop
add
jo
sahf
ljmp
jmp
lcall
lods
jmp
call
add
decl
jo
pop
nop
nop
decl
cmp
lods
mov
decl
lods
ljmp
nop
sahf
incl
sahf
nop
ljmp
sahf
sahf
decl
nop
lcall
sahf
lcall
sahf
pushl
lods
pushl
sahf
incl
lods
jo
add
add
nop
jmp
jo
nop
ficoms
lcall
hlt
lods
ljmp
mov
ljmp
jo
fsubrp
fdivrp
hlt
incl
add
call
sbbb
sahf
lods
hlt
lcall
lods
jmp
call
sahf
fdivrp
subb
dec
sbbb
dec
sbbb
dec
sahf
mov
incl
sahf
sahf
incl
nop
sahf
ljmp
sahf
sahf
decl
sahf
decl
sahf
lcall
lods
lcall
sahf
pushl
lods
pushl
sahf
decl
pop
incl
add
incl
sahf
jo
nop
fisubrs
sahf
jmp
lods
ljmp
lods
ljmp
cmp
nop
sahf
incl
add
add
add
lods
mov
sahf
call
lods
jmp
lcall
lods
fdivrp
nop
lods
fdivrp
subb
add
add
adcb
decl
cmp
jo
ljmp
pop
jo
add
ljmp
addb
das
sahf
sahf
ljmp
lods
nop
decl
sahf
lcall
sahf
pushl
sahf
pushl
sahf
pushl
lods
incl
add
decl
pop
lcall
jo
pop
nop
jo
nop
jmp
lods
lcall
jmp
lods
ljmp
sahf
incl
add
add
jo
add
add
nop
nop
fdivrp
pop
jo
lcall
lods
jmp
call
sahf
fdivrp
subb
das
pop
jo
add
add
dec
nop
nop
decl
cmp
jo
decl
cmp
jo
ljmp
pop
jo
add
incl
pop
jo
add
ljmp
pop
jo
das
jo
decl
cmp
mov
lods
pushl
sahf
incl
add
decl
jo
pop
xorb
lods
cmp
fisubrs
sahf
fisubrs
sahf
jmp
lods
incl
mov
add
jo
jo
lods
mov
sahf
lcall
lods
jmp
call
lods
fdivrp
subb
add
add
das
pop
pop
decl
cmp
jo
decl
cmp
jo
ljmp
pop
jo
add
ljmp
pop
jo
add
ljmp
pop
jo
add
ljmp
jo
ljmp
sbbb
jo
ljmp
sbbb
pop
dec
incl
add
lcall
jo
dec
nop
pop
lcall
jo
nop
fisubrs
nop
jmp
lods
lcall
sahf
nop
lcall
add
call
nop
nop
call
sahf
jmp
call
lods
fdivrp
sbbb
pushl
lods
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
dec
pop
incl
pop
jo
das
pop
jo
add
incl
pop
jo
add
ljmp
pop
jo
add
ljmp
jo
ljmp
xorb
jo
incl
dec
das
incl
add
decl
jo
pop
xorb
lods
cmp
shrb
nop
fisubrs
nop
lods
sahf
lcall
add
add
add
ljmp
jo
sahf
sahf
nop
incl
jo
decl
nop
call
lods
sar
sbbb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
dec
dec
incl
jo
decl
cmp
sbbb
jo
ljmp
sbbb
add
ljmp
dec
das
lcall
jo
dec
nop
pop
pushl
nop
incl
fisubrs
sahf
mov
nop
incl
add
add
pop
incl
add
call
jo
pushl
jo
nop
nop
nop
call
pop
nop
decl
cmp
pop
nop
pushl
sar
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
sbbb
xorb
rcrb
incl
lods
lods
ljmp
add
pop
pop
pop
pushl
jo
jo
jo
jo
jo
jo
jo
sahf
nop
nop
lcall
jo
lcall
cmp
sahf
sar
jo
pushl
lcall
mov
ljmp
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
jo
pushl
lods
lcall
jo
adc
incl
lods
lods
ljmp
add
nop
nop
nop
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
jo
addb
call
lods
pushl
sar
pop
lods
lcall
lcall
mov
decl
lods
decl
mov
ljmp
jo
incl
pop
dec
incl
dec
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
pop
pop
lcall
sahf
incl
lods
ljmp
mov
add
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
lods
sahf
push
hlt
hlt
inc
call
lods
mov
decl
lods
decl
mov
decl
lods
ljmp
sahf
sahf
ljmp
sahf
sahf
incl
sahf
nop
ljmp
sahf
sahf
ljmp
nop
jo
das
pop
pop
incl
add
incl
add
incl
add
incl
add
pushl
sahf
lcall
mov
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
fsubrp
jmp
jmp
sar
jo
decl
lods
decl
lods
ljmp
sahf
sahf
ljmp
nop
lods
incl
sahf
sahf
incl
nop
sahf
incl
sahf
nop
ljmp
sahf
sahf
ljmp
lods
sahf
decl
sahf
lcall
sahf
call
pop
pop
inc
mov
mov
add
add
add
incl
add
incl
add
incl
add
incl
add
add
rol
fdivrp
jmp
jmp
fdivrp
mov
mov
lods
mov
sahf
mov
sahf
mov
lods
sarb
call
call
mov
mov
mov
mov
add
pop
lcall
pop
incl
add
add
rol
inc
mov
sar
fdivrp
rcl
sar
rcl
sar
rcr
sar
rcl
sar
rol
inc
mov
mov
incl
add
add
jmp
pop
incl
add
incl
add
incl
add
cld
add
aas
incl
add
lock
ud0
add
rolb
add
add
incl
add
incl
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
lock
add
pop
add
lock
add
aas
add
loopne
add
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
and
add
incl
add
cmp
add
incl
add
aas
add
jg
add
aas
loopne
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
adc
sbb
sub
push
cmp
cmp
js
gs
jg
insl
jg
push
incl
das
xor
push
adc
adc
add
add
cmp
inc
dec
movb
test
mov
xchg
cltd
fcompl
popf
call
fwait
xchg
mov
jl
jns
pop
cmp
cmp
cmp
add
add
adc
sbb
sub
push
xchg
cmp
sbbl
jmp
test
push
mov
cld
mov
push
mov
jmp
pushf
jmp
lods
xchg
jmp
lods
mov
enter
xorl
imul
sbb
adc
adc
sbb
add
add
xchg
jbe
mov
jae
fadds
movsb
jmp
xchg
lods
jmp
lahf
scas
push
test
cld
mov
push
mov
jmp
pushf
jmp
lods
xchg
cmp
mov
push
jb
inc
call
movb
add
inc
inc
inc
jno
pusha
pusha
stos
and
and
adc
adc
push
xchg
inc
gs
ja
call
andl
loopne
movsl
jmp
xchg
lods
push
mov
mov
std
mov
push
mov
in
scas
lcall
lods
cmp
test
dec
movsb
ja
lret
movsb
jo
shll
pop
push
push
ljmp
pushl
jo
jo
jo
and
and
jbe
jo
pushf
outsb
nop
mov
popa
sahf
dec
imul
sarb
call
subb
out
movsl
push
mov
mov
std
mov
push
mov
jmp
lods
lcall
lods
cmp
test
dec
movsb
imul
movsb
imul
movsb
popa
call
aas
and
cmp
pushl
jo
jo
jo
push
push
push
stos
jb
outsl
stos
mov
inc
lcall
push
pushf
inc
popa
sahf
inc
movsb
dec
jno
call
jl
fmull
lods
out
lahf
scas
push
test
sti
mov
push
mov
jmp
lods
cltd
jmp
lods
mov
xlat
movsb
xchg
iret
movsb
jl
les
popa
call
adc
incl
add
incl
add
decl
ljmp
imul
dec
dec
stos
and
cmp
xor
ljmp
dec
pushf
pushl
push
sahf
inc
popa
sahf
dec
jno
call
jl
fmull
test
out
lahf
scas
push
test
sti
mov
push
mov
jmp
test
fsubrs
jl
movsb
jno
mov
lahf
pop
jnp
cmp
add
add
add
add
add
add
or
call
decl
dec
stos
lods
mov
xchg
lcall
pop
xchg
ljmp
inc
lcall
push
sahf
inc
popa
sahf
dec
insl
sahf
call
jl
faddl
lods
clc
stos
mov
sti
mov
in
mov
jmp
stos
mov
fldt
jae
enter
mov
mov
aas
pushl
xor
incl
add
incl
add
jmp
or
dec
dec
xor
inc
inc
inc
jno
add
add
and
call
adc
lcall
xor
pushl
push
xchg
inc
popa
sahf
inc
insl
sahf
dec
jl
faddl
lods
push
cmpsl
lods
sti
mov
in
lods
lcall
movsb
cmp
shlb
lods
sahf
dec
jmp
sbb
data16
jmp
and
pushl
xor
lcall
adc
cmp
cmp
add
add
add
add
jnp
sahf
dec
stos
call
xor
lcall
add
xchg
lcall
inc
lcall
pop
pushf
inc
jae
call
jle
jmp
xchg
lods
push
cmpsl
lods
push
scas
lods
jmp
scas
lcall
movsl
jae
mov
sahf
push
call
ja
jp
adc
xchg
xchg
adc
xchg
lahf
sbb
xor
ud0
and
addr16
pushl
das
adc
adc
sub
cmp
dec
lods
lcall
cmp
call
sbb
lcall
cmp
inc
pop
sahf
dec
jae
xchg
inc
mov
call
test
inc
lahf
pushl
ljmp
outsl
adc
imul
gs
jp
and
lahf
xor
sub
adc
jp
das
jmp
inc
jmp
and
inc
inc
inc
push
stos
mov
lcall
dec
scas
lcall
dec
stos
lcall
and
call
adc
jmp
xchg
pushl
nop
xchg
jmp
test
decl
ja
ljmp
popw
pushl
add
xor
add
pop
pop
adc
insl
jno
jmp
pop
pushl
xor
and
or
jg
xor
mov
inc
call
adc
push
xchg
fwait
xchg
scas
mov
jmp
mov
jmp
dec
mov
sahf
dec
mov
sahf
aas
stos
lcall
sub
xchg
push
cmp
xchg
xchg
jmp
mov
rol
dec
lret
enter
scas
jg
pop
call
or
add
add
add
add
sub
adc
gs
jmp
cmp
data16
call
sub
insb
xchg
call
cwtl
dec
jmp
push
into
leave
sar
mov
lret
arpl
jmp
ret
jmp
pop
mov
lcall
push
mov
ljmp
jp
jb
jb
pop
gs
call
mov
mov
ret
enter
test
adc
incl
add
incl
add
incl
add
decl
xchg
inc
pop
sub
pop
jne
jmp
cmp
imul
lcall
pop
dec
int3
xlat
pushl
jo
jmp
lret
jmp
jo
jmp
enter
pushf
lcall
outsb
jmp
jno
imul
pop
popa
pop
ljmp
call
push
ljmp
je
ret
fmul
inc
sar
decl
call
sbb
incl
add
incl
add
call
test
sbb
pop
ja
jmp
dec
ljmp
push
lcall
inc
cmp
cmp
rcl
aam
mov
aam
mov
mov
decl
js
ljmp
cmpsl
call
sbb
add
add
add
add
pop
bound
pop
pop
push
jmp
push
pushl
sub
incl
add
incl
mov
mov
incl
push
adc
mov
jo
dec
incl
add
incl
add
incl
add
incl
sub
dec
pop
decl
call
xlat
mov
je
ljmp
mov
insl
push
xchg
insl
push
mov
pushf
jl
ljmp
xchg
incl
add
incl
add
incl
add
pushl
xor
bound
jmp
ljmp
push
incl
cmp
mov
mov
mov
mov
bound
call
decl
inc
cmp
xor
insl
xchg
pop
pushl
inc
sub
add
add
add
add
add
add
add
add
and
jge
inc
mov
outsl
ljmp
sub
cmp
push
ljmp
xchg
ljmp
xchg
incl
lcall
cmp
dec
incl
add
incl
add
cmp
js
je
jo
xchg
xchg
call
test
call
push
incl
add
incl
add
incl
add
decl
inc
pushl
lcall
jmp
lret
test
cmp
daa
xor
sub
lea
cmp
add
add
add
add
push
push
jp
jo
xchg
incl
movsb
lock
cwtl
jb
cmpsl
jmp
es
cmp
xchg
call
addb
xchg
xchg
xchg
lcall
cmp
incl
add
incl
add
incl
add
ljmp
incl
in
ljmp
cltd
ljmp
xchg
jb
pusha
incl
inc
lea
or
push
or
or
add
add
add
add
cmp
push
incl
jg
pushl
mov
ljmp
lods
in
pushl
cmp
pop
addr16
pop
jo
lcall
rol
pushf
mov
mov
jp
movsl
lcall
cmp
adc
incl
add
incl
add
ljmp
jne
mov
xchg
mov
test
mov
test
mov
mov
ljmp
xchg
jae
sub
es
or
or
inc
cmp
add
add
add
add
cmp
push
incl
sahf
jecxz
lods
mov
jmp
out
decl
xor
outsb
mov
lcall
mov
aas
mov
lcall
rcrb
push
cwtl
insb
jmp
ss
jg
mov
jnp
xchg
scas
cli
scas
pushl
imulb
test
sahf
decl
dec
adc
adc
add
add
addr16
shl
cmp
push
incl
incl
mov
jmp
lods
in
call
subb
jl
call
stos
decl
pushl
xchg
movsl
decl
lcall
push
mov
movsb
jl
test
jg
sahf
pushl
dec
cmp
jne
test
int
jmp
scas
pushl
divb
incl
inc
jno
add
add
loop
incl
jns
stos
pushl
mov
mov
lods
in
call
pop
jb
pushl
dec
pop
decl
call
mov
dec
sahf
mov
and
lcall
mov
movsb
pushl
movsl
lcall
js
sub
ljmp
cmp
loope
lcall
cmc
scas
ljmp
out
decl
add
add
xor
ss
xchg
sar
xchg
jmp
decl
test
cmp
decl
jb
inc
imul
imul
gs
jne
decl
test
sub
mov
pop
mov
pushl
movsb
jmp
mov
pop
lcall
pushf
jmp
lcall
lock
call
xor
push
or
or
ds
decl
cwtl
sar
xchg
stos
out
nop
stos
subl
call
sub
cmp
cmp
lcall
gs
decl
call
pushl
ja
incl
je
dec
mov
sbb
and
push
lea
pop
lea
nop
fildll
lcall
pushl
jns
adc
sbb
add
add
and
lea
decw
sahf
mov
incl
movsb
xlat
jmp
cmpsl
incl
add
incl
add
incl
add
call
sub
or
dec
decl
inc
inc
incl
arpl
pop
jne
pushl
insl
ljmp
pop
push
decl
and
push
mov
pop
pushf
jl
sbb
test
xchg
enter
jle
movb
add
dec
dec
dec
jmp
pushw
jae
xchg
nop
lcall
ljmp
pushl
dec
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
and
call
daa
and
or
decl
adc
decl
jmp
mov
adc
movsl
jg
jg
adc
adc
add
add
and
cmp
adc
inc
inc
inc
decl
dec
pushl
jo
nop
mov
pushl
mov
jmp
ret
call
scas
pushl
pop
lcall
xor
comiss
incl
adc
add
add
add
add
add
add
add
add
pop
inc
xor
imul
sahf
lcall
lea
add
dec
stos
add
add
add
add
add
add
es
daa
daa
je
je
test
mov
mov
jae
enter
mov
cmp
mov
cmp
mov
or
lcall
arpl
sub
incl
add
incl
add
cmp
pop
call
shlb
adc
sbb
add
jno
add
stos
and
and
add
add
add
add
add
add
add
add
bound
jno
mov
mov
mov
jnp
mov
incl
scas
pushl
movsl
ljmp
scas
jg
lods
call
movsb
stos
jnp
test
and
and
add
add
sub
sub
sub
push
pop
push
sbb
dec
inc
push
jns
ja
iret
into
iret
dec
fcom
inc
rcl
inc
ror
inc
ror
dec
ror
dec
enter
inc
cmp
push
inc
add
incl
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xadd
add
addb
aas
addb
aas
addl
add
adc
add
and
add
add
and
add
add
inc
add
add
adc
sbb
cmp
lea
test
incl
xor
push
dec
dec
lea
xchg
repnz
clc
mov
jmp
lods
xchg
call
movsl
xchg
popf
andl
xor
adc
and
cmp
add
add
stos
mov
outsl
mov
jmp
xchg
cmpsl
push
movsl
mov
cli
mov
jmp
lods
xchg
fsubrs
outsl
ljmp
dec
dec
pushl
jo
sbb
sbb
add
add
inc
inc
inc
jno
inc
cltd
pushl
pop
lahf
call
ja
jmp
mov
push
mov
jmp
stos
dec
movsb
jl
shlb
incl
add
incl
dec
jmp
add
add
sbb
pushl
addr16
call
andl
fsubrl
imul
xorb
and
add
aas
cmp
lcall
push
push
cmp
push
jno
inc
stos
lcall
lcall
dec
lcall
xchg
movsb
fsubl
jne
mov
push
pushl
and
jnp
pop
jmp
sbb
je
sub
xor
sub
mov
push
mov
lahf
inc
scas
lcall
xchg
jmp
movsb
mov
lcall
sub
ljmp
xor
jmp
sub
push
pusha
daa
incl
gs
mov
imul
movsb
addr16
jmp
pop
mov
outsl
inc
jg
addr16
ljmp
mov
adc
add
add
xchg
ljmp
inc
call
inc
inc
mov
decl
xchg
jmp
xor
incl
add
call
lcall
dec
call
pushl
lea
cmp
xor
incl
add
call
push
or
dec
pop
inc
lcall
pop
loop
pop
and
pop
nop
lcall
jge
jmp
es
lcall
incl
xchg
pushl
incl
add
ljmp
mov
xchg
ljmp
pop
lcall
push
loop
sbb
lea
add
jmp
xchg
movsl
lahf
out
test
cmc
jmp
xchg
lcall
pushf
pushl
mov
ljmp
fwait
pushl
push
inc
incl
lcall
imulb
incl
lea
sbb
sbb
mov
jmp
test
incl
jae
push
andl
mov
mov
call
pop
call
clc
mov
popf
lret
pushf
call
adc
sbb
add
add
sub
mov
in
test
pop
cmp
js
sbb
call
je
inc
xchg
cmp
jno
call
insl
call
test
push
pop
push
lea
add
add
add
add
dec
loop
xchg
pushl
mov
popa
jge
incl
add
incl
and
decl
xor
dec
call
sub
call
jbe
mov
cmpsl
jmp
push
sbb
sbb
push
push
push
cmp
cmp
imul
nop
lods
mov
pushl
cmp
or
cmp
add
sub
decl
jl
stos
add
add
adc
jno
or
or
or
sbb
sbb
jl
lea
sar
mov
mov
stos
sub
sub
lock
loopne
add
rolb
add
add
add
add
add
pop
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
or
add
add
add
add
add
add
add
das
add
das
das
add
das
add
add
das
das
add
das
das
add
add
das
dec
add
add
add
dec
das
add
add
pop
dec
add
dec
pop
add
pop
pop
add
jo
add
pop
jo
add
add
dec
dec
das
add
das
add
das
add
das
add
das
add
das
add
das
add
das
add
add
das
das
push
add
dec
add
jo
add
add
push
pop
add
jo
add
jo
add
pop
jo
das
pop
jo
add
add
jo
add
dec
add
dec
add
dec
add
dec
add
pop
add
pop
add
pop
add
pop
add
dec
add
pop
add
dec
add
pop
add
pop
add
dec
add
pop
add
jo
jo
jo
dec
jo
add
jo
xorb
sbbb
xorb
nop
jo
add
pop
jo
xorb
jo
add
pop
subb
jo
das
add
das
add
sbbb
mov
push
mov
jo
push
add
jo
jo
jo
jo
jo
push
lods
jo
adcb
add
subb
fwait
cltd
das
add
das
add
xchg
dec
add
pop
add
lcall
mov
lods
dec
add
mov
dec
add
mov
dec
add
mov
jo
sahf
xorb
cltd
jo
lods
xorb
lods
jo
sahf
pop
add
lods
pop
add
sahf
jo
rcrb
jo
shrb
add
jo
add
test
jo
nop
add
test
jo
addb
jo
add
lods
add
lods
add
lods
add
add
add
das
sahf
add
das
lods
add
dec
fwait
add
pop
xchg
add
sahf
add
sahf
add
jo
add
jo
add
nop
add
dec
lods
add
dec
mov
add
mov
pop
sahf
add
jo
add
jo
add
pop
lods
add
jo
add
jo
add
pop
movb
jo
add
xchg
add
lcall
das
lcall
jo
popl
push
mov
add
sahf
add
mov
jo
lods
add
mov
jo
lods
add
sahf
add
sahf
add
lods
add
movb
xchg
leave
add
movb
lods
lret
addb
nop
xchg
addb
adcb
adcb
add
addb
sbbb
lods
sahf
sahf
add
lods
addb
lods
nop
add
xchg
add
lods
add
nop
mov
add
lods
add
mov
lods
add
mov
addb
sbbb
fsts
add
lods
addb
lods
nop
add
mov
xchg
add
lods
sahf
add
mov
sahf
add
subb
xchg
lods
add
sahf
lods
add
sahf
mov
add
mov
lods
add
lods
lods
add
mov
mov
add
cltd
add
aad
add
in
lods
add
nop
rolb
lods
adc
mov
add
fwait
in
add
scas
testl
sahf
mov
mov
iret
add
ror
add
jmp
fiadds
jmp
in
out
out
mov
xor
aaa
xor
xor
mov
sbb
mov
sub
add
mov
sub
rcr
loop
jecxz
into
push
es
add
add
fcmovnu
loope
jecxz
jecxz
aam
sarl
add
aaa
arpl
fndisi(8087
loope
jecxz
aam
ror
push
add
add
add
rcr
fcmovnu
loop
jecxz
aam
ror
insl
into
push
add
mov
mov
lea
fcmovbe
fucom
in
loop
xlat
fcom
rcl
ror
insb
imul
sub
add
mov
xchg
fcmovu
fcmovu
in
loop
aam
into
insb
push
push
pop
adc
aaa
aaa
aaa
aaa
mov
add
add
add
add
xchg
xchg
xchg
xchg
cltd
iret
fcmovbe
fucom
in
loop
aam
rcl
insl
imul
push
aaa
aaa
aaa
aaa
add
add
add
add
mov
xchg
fcmovu
in
loop
rcl
ror
insb
push
pop
adc
add
add
aaa
aaa
aaa
add
add
add
add
test
fcmovbe
fucom
loop
loop
aam
into
insb
push
push
add
add
aaa
aaa
add
add
add
ret
cmpb
addl
rcr
rcr
loop
jecxz
aam
ror
insb
push
push
add
add
add
aaa
add
add
add
mov
jl
test
xchg
rcr
loop
jecxz
fcom
rcl
insl
imul
pop
push
adc
add
add
adc
mov
add
add
leave
jnp
jns
jns
jl
test
cltd
rcr
fcmovnu
loop
fabs
aam
ror
push
pop
pop
push
push
dec
adc
add
add
add
add
add
jnp
jnp
jnp
jnp
addl
rcr
loope
jecxz
aam
ror
imul
push
dec
dec
dec
add
dec
or
int
jle
jnp
jns
jns
jnp
addl
fcmovnu
loop
xlat
ror
insb
push
pop
push
cmp
dec
dec
dec
push
add
inc
adc
add
add
int
cmpb
jnp
jnp
jnp
addl
loop
xlat
aad
insl
push
pop
push
dec
prefetcht0
push
dec
push
push
add
aas
adc
mov
jnp
jnp
jns
jnp
addl
rcl
imul
push
unpckhps
adc
add
push
inc
sub
add
xchg
xchg
nop
mov
jnp
jns
jnp
test
mov
cmp
push
or
unpckhps
sbb
pop
or
push
sbb
add
xchg
nop
xchg
nop
nop
mov
jnp
jnp
mov
cmc
clc
clc
mov
push
adc
add
add
sbb
pop
add
push
inc
pop
pop
adc
ljmp
xchg
xchg
xchg
nop
mov
cmp
rol
int
cmc
clc
clc
int
add
add
add
inc
xor
add
outsb
bound
mov
fwait
xchg
fwait
xchg
fwait
xchg
nop
xchg
nop
xchg
nop
mov
jg
sub
mov
int
cmc
clc
clc
mov
add
add
add
xor
pop
xor
inc
adc
cmc
popf
popf
pushf
popf
pushf
fwait
pushf
popf
pushf
fwait
xchg
fwait
xchg
xchg
xor
aaa
ror
clc
ljmp
add
add
pop
adc
push
inc
inc
inc
inc
adc
sti
cmc
popf
pushf
popf
pushf
popf
pushf
popf
pushf
popf
pushf
popf
popf
sbb
sbb
sub
ss
add
clc
clc
ljmp
add
out
out
sub
inc
inc
inc
and
out
pushf
orb
out
xor
add
add
sub
add
add
ljmp
or
inc
xor
add
add
outsb
xor
and
jo
jo
out
out
out
out
add
add
add
daa
sub
es
ljmp
inc
add
inc
inc
sub
add
add
add
inc
sub
sti
popf
out
jae
xor
out
out
add
add
add
mov
sub
leave
leave
leave
adc
or
inc
pop
inc
inc
mov
stc
sbb
sbb
jno
jno
repnz
add
add
enter
mov
mov
leave
leave
and
add
pop
out
call
add
lret
add
add
je
jae
repz
add
add
sub
mov
rolb
add
add
gs
gs
out
das
daa
int3
add
add
add
sbb
repnz
repnz
hlt
hlt
hlt
add
out
mov
mov
mov
mov
enter
add
add
addr16
out
out
and
add
add
bnd
hlt
hlt
hlt
hlt
hlt
hlt
repz
jb
clc
clc
clc
cmc
ljmp
add
in
addr16
call
call
add
add
add
hlt
jne
hlt
hlt
hlt
hlt
hlt
repz
jbe
lods
movsb
cmpsb
movsb
movsb
stos
lods
stos
sub
add
add
mov
in
in
call
add
dec
add
add
hlt
cmpsl
repnz
hlt
repz
repz
add
jb
test
mov
stos
jmp
jmp
dec
in
in
in
in
in
in
in
out
add
add
sti
sti
hlt
add
icebp
mov
hlt
repz
repz
out
xor
scas
jb
cmpsb
cmpsb
lahf
sahf
mov
jmp
dec
mov
in
in
in
mov
add
cld
hlt
add
repz
out
add
jo
lods
cmpsb
lahf
sahf
lahf
movsb
movsb
stos
lods
stos
stos
dec
add
dec
in
in
in
in
in
in
in
dec
add
add
add
stc
sti
add
je
repz
repz
icebp
out
add
mov
movsb
test
lods
stos
xor
stos
dec
jmp
jmp
in
in
in
mov
add
add
ljmp
repz
icebp
out
cmpsl
add
jb
and
pop
outsl
sahf
lahf
mov
lods
add
dec
inc
out
jmp
jmp
jmp
xor
repz
out
out
out
out
and
mov
and
and
and
mov
dec
inc
dec
jmp
jmp
lret
add
add
add
add
lret
repz
repz
out
mov
push
jo
and
pop
and
and
and
and
daa
add
inc
jmp
mov
add
mov
enter
out
scas
out
ja
add
add
push
and
pop
and
and
and
or
inc
ss
jmp
mov
mov
leave
dec
mov
je
out
out
scas
and
add
pop
ss
ss
add
inc
inc
movsl
stos
jmp
enter
sub
mov
dec
mov
jo
jo
add
add
inc
stos
jmp
add
add
aaa
aaa
dec
mov
je
out
mov
test
push
add
lods
dec
jmp
add
mov
add
add
leave
aaa
mov
mov
scas
scas
lods
lods
lods
cmpsb
cmpsb
mov
add
add
add
push
stos
jmp
add
add
add
add
add
add
sar
out
test
cmpsb
cmpsb
mov
lahf
inc
push
add
add
stos
imul
loopne
add
cld
cld
imull
sahf
sahf
sahf
mov
sub
lock
mov
add
stc
cli
cli
stc
div
div
div
clc
stc
cmc
ljmp
add
add
add
cmc
stc
stc
clc
clc
stc
clc
clc
lock
add
jmp
pop
incl
add
incl
add
incl
add
cld
add
aas
incl
add
lock
ud0
add
rolb
add
add
incl
add
incl
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
lock
add
pop
add
lock
add
aas
add
loopne
add
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
and
add
incl
add
cmp
add
incl
add
aas
add
jg
add
aas
loopne
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
xor
jnp
sbb
bound
or
bound
sub
add
add
stos
jae
xor
jnp
push
jg
add
jne
add
imul
mov
mov
dec
mov
add
mov
push
xchg
lret
mov
add
rorb
add
lret
xchg
mov
add
jnp
jae
jae
push
jg
push
xchg
shl
flds
fwait
fwait
mov
jae
flds
jnp
mov
mov
addl
xchg
jmp
add
mov
mov
jae
xchg
add
lock
add
shlb
fwait
lock
mov
add
rolb
mov
flds
mov
fwait
add
lock
mov
jae
mov
add
jnp
add
pop
add
jae
bound
add
bound
jae
lret
lret
mov
add
bound
imul
cmpl
mov
bound
xchg
mov
add
mov
push
add
jnp
mov
push
add
mov
inc
add
mov
add
xchg
jae
adc
add
dec
add
xor
jnp
stos
add
mov
add
addl
jnp
add
jae
add
cmp
add
mov
add
add
xor
jae
sbb
add
mov
jae
jnp
jae
jnp
jae
add
jnp
sbb
add
imul
daa
bound
cmpl
add
jnp
add
add
mov
jae
mov
dec
jae
ret
add
mov
fwait
jnp
add
jae
add
js
mov
jnp
add
jnp
add
mov
add
mov
xchg
jnp
add
add
mov
imul
stos
mov
add
mov
push
add
pop
addl
mov
xor
add
je
add
js
add
incl
add
add
add
add
add
add
xchg
mov
mov
add
add
cmpl
test
add
add
mov
addb
nop
jl
xchg
jge
add
add
js
mov
addl
lea
jge
add
jb
js
mov
jp
addl
xchg
jle
add
add
add
add
add
jb
js
mov
test
jge
mov
add
add
add
add
jno
jb
js
cmpl
mov
jle
outsb
outsb
jg
add
add
add
jno
jb
js
jns
jp
test
jle
jg
jbe
jbe
add
add
jno
jno
jno
jb
js
cmpl
xchg
mov
add
add
subb
insb
jb
js
addl
outsb
mov
jg
imul
imul
jno
jno
js
jp
jnp
jl
jle
outsb
jbe
jg
imul
add
imul
jno
jb
je
dec
inc
cmp
jbe
imul
add
pop
pop
add
imul
insl
add
dec
xor
imul
push
pop
pop
pop
pop
pop
add
arpl
inc
pop
inc
dec
pusha
dec
addr16
push
add
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
pop
inc
ss
dec
pusha
popa
bound
bound
pop
pop
pop
pop
add
dec
push
push
push
push
push
push
dec
push
dec
push
push
dec
inc
aas
push
cmp
dec
dec
inc
push
push
push
pop
push
push
pop
pop
pop
add
inc
dec
dec
inc
dec
inc
dec
xor
dec
xor
inc
dec
dec
inc
dec
push
inc
cmp
dec
inc
dec
push
dec
push
add
xor
xor
xor
add
xor
inc
inc
cmp
inc
and
cmp
inc
inc
inc
inc
inc
inc
dec
add
add
xor
cmp
add
add
and
cmp
and
inc
cmp
add
add
xor
xor
and
add
sbb
ss
and
cmp
cmp
add
add
add
daa
add
and
add
add
and
xor
pop
add
add
add
add
add
add
or
add
sbb
sub
sub
add
add
add
add
and
sbb
add
pop
add
adc
or
sub
and
sub
add
and
add
and
sbb
or
add
add
or
sbb
and
add
add
add
add
sbb
push
add
add
or
pop
sbb
and
add
or
push
pop
add
or
or
adc
sbb
add
add
or
add
adc
add
adc
adc
add
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
addb
incb
add
add
aas
clc
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
add
pop
hlt
add
aas
hlt
add
jg
add
push
jo
push
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
push
push
push
add
and
add
and
add
sub
add
xor
add
cmp
add
pop
and
add
sub
add
sub
add
xor
cmp
sub
es
add
cmp
add
xor
add
pop
add
and
dec
pop
das
add
daa
add
sub
ja
and
je
sub
inc
xor
add
push
dec
add
push
inc
add
jno
add
imul
jns
add
js
inc
inc
inc
add
dec
add
dec
add
dec
add
inc
add
add
add
add
inc
add
dec
add
pop
add
add
jae
outsl
inc
jg
popa
popa
popa
add
add
outsl
add
push
add
add
jge
jle
jle
xorb
xchg
jp
add
inc
add
pop
add
insl
add
jbe
jo
pusha
add
xchg
dec
add
sahf
push
add
xchg
popf
andl
lea
stos
xchg
shlb
add
movsb
outsl
add
movsl
jne
iret
movsb
jl
xor
addl
pop
nop
add
xchg
add
pushf
add
xchg
add
popf
add
mov
add
and
add
sub
cltd
add
dec
cltd
add
ja
add
bound
add
scas
add
pop
mov
mov
push
mov
add
pop
lahf
add
addr16
add
outsl
mov
add
ja
add
movl
cmpsl
jle
add
mov
lods
add
addb
mov
movsb
add
mov
imul
mov
add
mov
add
vprotq
lea
test
xchg
add
xchg
add
lcall
test
mov
fwait
add
mov
mov
add
movsb
mov
add
mov
add
mov
add
movsl
xchg
fsubrs
xchg
fsubl
popl
out
xchg
add
andb
ficoms
test
in
cmpsl
add
xchg
lods
add
mov
scas
add
mov
add
mov
add
mov
add
mov
add
movsl
mov
repnz
add
fistpl
add
aam
add
jecxz
add
test
scas
lock
add
mov
add
rolb
test
add
lahf
out
xchg
test
repnz
mov
add
mov
dec
cmp
add
add
mov
scas
lods
mov
add
add
mov
mov
popf
dec
inc
es
add
insl
jno
test
adc
imul
stos
sahf
dec
inc
cmp
pop
pop
pop
pusha
outsl
movsb
lahf
dec
inc
sbb
sbb
pop
pop
bound
sbb
inc
inc
shlb
xor
adcl
imul
add
sub
add
xor
push
mov
mov
add
mov
push
rol
push
jle
jns
sub
mov
ret
ja
cmpb
mov
mov
and
js
ds
xchg
add
xor
or
popl
add
add
cmp
add
mov
add
add
add
add
xchg
add
add
add
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
fcomps
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
pop
adc
aas
dec
push
add
add
add
outsb
xchg
aad
idivw
popa
mov
adc
cmpsb
sarb
andl
adc
xchg
sub
cmp
dec
lahf
pop
cmpsb
mov
jae
in
in
sbb
cmp
or
xchg
cmp
inc
fnstcw
icebp
cltd
jne
aad
fld1
sbb
inc
add
scas
inc
jp
adc
fldt
pusha
outsb
decl
push
dec
and
mov
daa
mov
jbe
sbb
orl
ljmp
jmp
int
inc
out
mov
test
pop
jg
mov
fisttpll
data16
pop
je
stc
leave
sarl
sub
mov
iret
jecxz
jae
push
or
jb
pop
and
cmc
ret
dec
cmpsb
testb
sti
mov
or
stos
fcoml
inc
xchg
mov
and
insl
inc
int
mov
xchg
pop
pop
test
lcall
push
clc
or
fadds
dec
dec
jg
sti
sub
jg
test
sbb
mov
stos
mov
inc
ja
cltd
sub
sbb
mov
cmp
xlat
jmp
jnp
mov
test
xor
push
addr16
inc
out
int3
loop
push
add
jp
pop
mulb
mov
cmpsb
lock
push
sub
movntq
mov
jmp
or
sbb
adc
andb
stc
pushf
nop
int
insl
cmpsl
sub
and
xor
loopne
jmp
lock
sub
lods
fwait
lret
and
sbb
movsb
fs
adc
dec
and
and
cltd
aad
pop
fidivl
insb
xor
js
stc
fwait
jl
mulb
aam
sbb
stos
rorb
cmpsl
cmp
je
subl
pop
inc
aaa
fwait
int3
mov
adc
jle
push
add
aad
and
es
aad
jnp
fidivrl
nop
jne
cmpsl
sub
lahf
push
ret
int3
jns
push
call
mov
xchg
and
scas
push
and
pop
icebp
lds
vmovupd
ss
xchg
xchg
outsb
cmp
inc
scas
movsl
repnz
loopne
je
xchg
adc
lcall
or
xorb
push
inc
gs
test
cmpsl
pop
mov
scas
sar
pop
mov
mov
les
xor
ds
cmp
pop
mov
xor
iret
xor
fstpl
addl
mov
sub
add
das
and
lret
iret
sbb
xchg
iret
fucomi
mov
and
ljmp
cmp
cmp
rorl
jecxz
lret
sub
jmp
sub
fs
jbe
dec
sub
nop
mov
mov
push
push
dec
cltd
jbe
inc
pushf
sbb
daa
sub
pop
aam
movsb
cltd
jp
pop
xchg
fstl
cmpsb
jge
rcl
cmpsb
mov
jl
aad
dec
or
cmp
fnsave
outsl
sbb
mov
mov
int
insl
movsb
and
add
xor
fwait
inc
aad
and
jbe
xchg
push
inc
pop
daa
cmp
rcl
mov
pop
inc
cltd
loope
mov
shl
mov
stc
enter
add
jmp
push
idivb
push
es
xchg
push
lods
lock
push
jo
in
repnz
lds
int3
lods
push
add
fnstcw
scas
adc
lret
adc
mov
xor
outsl
or
dec
xchg
fildl
mov
inc
pop
aaa
hlt
cltd
loopne
addr16
add
ss
idivl
jae
lods
das
xchg
mov
inc
ja
stc
jmp
jbe
lea
jne
or
inc
sbb
sub
dec
call
adc
adc
ds
adc
popa
xchg
mov
push
sbb
pop
cli
sub
ret
daa
adcl
sbb
js
xor
push
sbb
sub
cltd
in
dec
jns
out
insl
daa
ficomps
ss
outsb
ret
xlat
xchg
hlt
cmpl
not
dec
inc
int
je
push
jmp
dec
fnsetpm(287
pop
push
or
push
test
push
pop
sbb
sbb
aaa
pop
bound
das
loope
dec
and
push
pop
movsl
sub
xor
push
xchg
and
sbb
lahf
andb
jmp
test
lea
out
dec
pusha
fwait
sti
bound
and
stos
lret
dec
push
shrl
movsl
or
sub
lods
cmp
pop
pushf
and
imul
das
imul
or
or
shrb
data16
and
mov
aad
nop
bound
jle
jecxz
fidivs
push
push
add
fwait
outsl
jl
push
sub
and
xor
test
adc
or
dec
inc
outsl
std
xchg
inc
gs
sbb
pop
shll
push
ds
mov
mov
push
mov
mov
dec
and
mov
enter
cli
add
cli
loope
dec
aam
mov
pusha
jecxz
loope
xchg
inc
into
sbb
fcoml
dec
adc
add
inc
inc
mov
aad
inc
and
insl
xchg
mov
icebp
add
xchg
inc
xchg
out
in
jle
mov
xor
subb
pusha
jecxz
sub
jb
cltd
fidivrl
pusha
mov
sbb
inc
stos
xor
pop
jp
mov
loope
int
jne
or
aam
push
inc
jle
inc
leave
mov
jecxz
fsubl
test
xor
add
xlat
pusha
shrb
dec
dec
sub
pop
idivl
out
add
xor
adc
ficoml
enter
cli
cs
repnz
and
jle
in
imul
mov
andl
mov
lret
lcall
cld
pop
mov
cltd
andl
or
outsl
or
inc
jl
jae
inc
jae
cmp
movnti
lods
pop
push
xchg
xchg
test
sbbb
jp
mov
rcrb
inc
jg
scas
pop
pop
pop
adc
add
sbb
imul
push
loop
add
lret
rclb
push
faddl
movsb
push
fldenv
loopne
sbb
sahf
add
loop
stc
cmp
je
dec
xchg
adc
insl
cs
pop
mov
scas
push
cmp
je
stos
daa
mov
mov
and
adc
jmp
pop
push
stc
loopne
add
out
fistl
push
movsl
or
add
ret
jnp
mov
lods
sub
push
xchg
pop
lahf
pop
fnstsw
sbb
aas
xchg
shll
xor
f2xm1
mov
daa
cs
jle
and
out
loope
mov
push
xlat
jbe
push
and
out
sub
ljmp
inc
jge
idivl
jbe
out
jae
out
xlat
stos
and
push
pop
shlb
imul
inc
lret
xchg
les
mov
cld
leave
jne
bound
insl
sahf
outsb
inc
mov
add
stos
mov
xchg
dec
xchg
out
into
pop
mov
shrl
add
rorl
push
push
push
push
mov
out
jg
jg
test
pushf
cmp
push
fstl
insb
sbb
cld
in
sbb
mov
pop
or
push
add
test
jp
scas
cli
cmp
iret
mov
test
pop
and
jg
frstor
or
sub
cmp
inc
cltd
lcall
add
call
outsb
sbb
mov
mov
dec
dec
fs
mov
dec
inc
das
push
movsb
pusha
pop
push
push
divl
js
in
pop
jns
xchg
lea
sub
popa
shll
icebp
lahf
cmc
xchg
dec
and
roll
cmc
add
inc
lahf
jno
sub
xchg
cld
cmovge
xor
aam
out
sbb
rcll
hlt
jmp
jecxz
add
xchg
aas
ret
pushf
push
jle
cmpsb
jge
shl
fwait
xchg
mov
mov
cmc
cwtl
cmp
pop
cltd
mov
stos
icebp
arpl
inc
jl
fcmovnbe
mov
sub
mov
xchg
int
sub
insl
into
stc
cltd
cmp
sbb
or
push
rcl
add
jbe
cmc
add
cmpsl
mov
dec
es
sub
or
add
shlb
mov
lds
enter
fwait
xchg
movsb
and
push
and
fisttpll
cmc
test
rorl
mov
out
adc
dec
jae
sbb
mov
iret
inc
flds
xchg
push
mov
add
xor
shrb
mov
xchg
adc
stos
pop
jg
push
push
jno
jecxz
mov
xor
or
ljmp
ss
outsb
test
pop
adc
inc
inc
pop
cltd
cwtl
cmp
adc
adc
mov
cmp
mul
pop
jns
scas
push
inc
mov
mov
icebp
mov
adc
pop
dec
nop
sub
mov
sub
int
cmp
mov
xor
imul
xor
add
in
sbb
sarb
outsb
mov
mov
sti
pushf
mov
mov
mov
aad
out
cmp
pop
pop
jb
lods
and
sbb
je
sahf
out
or
jge
adc
mov
cmp
inc
add
jecxz
arpl
fs
jne
imul
jnp
fimuls
into
pop
pop
call
in
fwait
inc
fnstenv
and
jne
sub
das
aad
push
clc
and
xchg
sbb
out
lcall
dec
xor
sti
ret
and
enter
sarb
push
dec
test
inc
andl
ds
and
cli
inc
add
xchg
fcomps
add
fsubs
mov
lret
pop
and
sub
push
or
into
push
dec
cmp
mov
int3
adc
data16
shlb
sbb
jbe
sub
sbb
lret
jmp
test
mov
adc
lods
out
add
jbe
dec
dec
cld
cmc
add
out
shlb
adc
ljmp
jecxz
inc
pop
scas
xlat
lcall
gs
out
jle
inc
cmp
pop
add
enter
mov
nop
sbb
scas
shr
mov
cmp
mov
push
test
call
call
pop
sahf
sub
test
hlt
cmp
psubusb
xlat
mov
sub
fstl
cwtl
adc
push
aad
add
adc
ljmp
test
sbb
inc
cmpsl
xchg
mov
cmp
fildll
mov
lea
cs
arpl
jecxz
imul
loope
xor
mov
insl
fisubrs
aaa
popf
scas
mov
add
and
jo
pop
jmp
xchg
ljmp
push
xlat
jns
jmp
or
and
fdivrs
fsubrp
fdivl
lock
inc
fwait
aaa
add
inc
adc
imul
xor
push
popf
movsb
leave
inc
outsl
cltd
pop
inc
sub
into
into
adc
jg
jecxz
mov
rcl
mov
jge
pop
mov
ljmp
inc
stos
inc
fdivrl
testb
adc
pop
outsl
imul
mov
sub
cmpsl
mov
push
hlt
mov
cmpsb
push
in
pop
mov
sbb
ds
mov
or
clc
sbb
rcrb
leave
fidivl
or
in
mov
jecxz
pop
mov
insl
loope
mov
enter
adc
cmp
and
sub
loop
jae
imul
lds
push
fcoms
mov
popf
testb
dec
icebp
sbb
loopne
sbbb
mov
xorl
les
ds
push
push
repnz
test
push
jg
test
sarb
dec
sbb
adc
mov
les
adc
or
test
cmp
jnp
movsl
movb
loope
jp
inc
faddl
and
jg
fldenv
sub
ljmp
into
jnp,pn
pushf
dec
dec
and
pop
mov
or
push
clc
std
xchg
dec
ss
aad
lods
dec
dec
fimull
xchg
call
movsl
jle
add
pop
xlat
add
or
mov
inc
shrb
lret
fistl
mov
jno
call
cmpsb
pop
push
xchg
xchg
das
cmp
fnsave
or
stc
fdivrp
pop
outsl
mov
and
insl
ficompl
jmp
push
jo
cmc
inc
mov
pop
lods
mov
cmp
push
test
fidivrl
imul
pusha
fs
or
push
adc
mov
mov
and
ret
xor
add
shll
add
testl
into
in
ror
jmp
pusha
xchg
imul
mov
in
xor
cld
lods
jecxz
ret
roll
sub
repnz
cmc
pop
inc
push
inc
divl
sub
stos
js
mov
push
sahf
lds
mov
and
pop
adc
xor
dec
rol
ljmp
enter
xor
std
filds
push
or
ljmp
pop
out
mov
mov
jp
pop
fldl
jecxz
xchg
cmc
loopne
inc
mov
mov
adc
cmpsl
sub
out
mov
mov
xor
dec
lods
mov
cmp
mov
pushf
lret
les
mov
pmulhuw
jp
lcall
jg
in
xor
or
or
lods
aas
leave
sbb
inc
push
jle
les
stos
rcrl
or
loopne
push
xchg
mov
not
testb
jae
mov
ret
pop
flds
jp
int3
dec
pusha
and
or
call
fmull
jmp
lahf
dec
mov
frstor
jbe
and
out
cwtl
cmp
xor
mov
jmp
and
inc
sub
lods
xchg
sarl
pop
mov
shrb
xor
fimull
jmp
jle
cmp
in
dec
xchg
popa
call
xchg
cltd
jb
pop
pop
xchg
inc
movsl
outsl
add
mov
mov
add
hlt
das
insl
and
pop
inc
sbb
int3
mov
imul
adc
jge
adc
popl
aaa
mov
xor
in
xlat
stos
int3
cs
mov
sub
orl
push
or
xor
lock
jmp
xchg
pop
dec
sbb
xchg
les
out
std
out
fisubs
out
sbb
and
mov
xchg
notl
outsl
ss
cwtl
inc
inc
jnp
jmp
mov
les
mov
movsb
pop
pop
in
cli
dec
adc
inc
les
into
and
cmp
jo
add
xorl
sbb
insb
cmpb
mov
aad
adc
sub
hlt
cmpsl
filds
cwtl
dec
lahf
push
inc
add
outsl
cmpsl
cmc
xchg
dec
jo
mov
mov
mov
jge
enter
outsl
out
and
setne
loopw
mov
lods
je
xchg
push
clc
mov
ds
adcl
int3
in
out
bound
sbb
fildll
mov
test
fstpt
mov
xor
cmp
lods
cmpsb
cmpsb
dec
fs
lods
stos
xchg
mov
jnp
push
push
mov
jle
pop
lcall
fstp
mull
lret
mov
aaa
in
in
cmp
cli
movups
sbb
testb
call
gs
jnp
mov
sbb
into
sbb
lods
outsb
out
mov
les
mov
imul
xor
enter
xchg
ficoml
out
shll
leave
sarl
mov
mov
adc
cld
jle
jne
testb
loopne
movsb
pop
and
mov
out
mov
sbbl
dec
rcrb
out
call
test
mov
sahf
mov
sti
xor
pop
and
mov
adc
or
ja
dec
cli
aad
mov
jae
fwait
or
push
std
jecxz
mov
repz
push
inc
gs
fstl
mov
test
cmp
movsb
frstor
mull
fdivrp
push
xchg
push
mov
out
add
call
iret
push
cld
js
dec
mov
lahf
mov
int3
add
xor
sub
dec
fisubrl
dec
addl
push
out
xchg
cltd
out
cmpsl
in
daa
out
fucom
push
xor
dec
mov
xchg
mov
notb
inc
rcl
mov
js
test
inc
push
adc
adc
cmp
std
push
nop
mov
inc
mov
js
add
inc
inc
lahf
stc
inc
push
xor
mov
push
jp
cld
push
daa
cmp
shrb
pusha
xchg
push
xlat
cmp
lock
fiadds
and
pop
jp
inc
xor
xor
call
sahf
lock
cltd
ss
lcall
mov
stc
or
cli
mov
or
pusha
xchg
inc
insl
push
xor
in
push
xchg
lcall
or
sub
pop
dec
movsb
inc
sbb
pop
xchg
xor
scas
cwtl
or
popf
sahf
int3
lds
cmp
and
pop
xchg
in
outsl
push
pop
jl
xor
dec
outsl
mov
xor
in
adc
nop
data16
cmovae
fwait
cld
stc
lcall
imul
lock
test
jg
pop
and
negb
adc
xor
jbe
scas
push
cmpsl
adc
pushf
loopne
push
sbb
push
cmp
je
and
xchg
call
jge
cmp
cmp
mov
pushf
shll
or
je
and
ret
adc
mov
add
jge
sub
push
sub
pusha
clc
or
mov
and
jns
mov
je
xchg
pop
lods
cmovne
mov
aas
sbb
xchg
sahf
mov
push
sub
cmpsl
add
idivl
xchg
aad
clc
add
add
ficoms
call
mov
repnz
imul
addr16
adc
arpl
xchg
les
fwait
jae
pushf
adc
inc
inc
or
fs
push
mov
dec
cmp
fldz
scas
and
fnstcw
cmp
mov
mov
pop
mulb
add
lcall
push
out
scas
add
sarb
shll
pop
inc
fimull
mov
in
pop
mov
cmc
lock
add
sbb
mov
icebp
ret
pop
add
scas
jp
or
and
mov
ficoms
jno
cmp
outsb
repnz
xor
lods
pop
cmp
out
cmp
jno
popa
fcmovne
aas
loope
cmovnp
rcrb
ret
jb
enter
lret
lcall
push
lea
or
cmp
xor
js
fcoms
push
out
push
testl
xchg
pop
out
mov
jg
pusha
shrl
fidivrs
jecxz
pop
lods
pop
in
out
and
sbb
mov
or
pop
cmp
mov
xchg
mov
pop
push
xchg
fldenv
out
push
ljmp
or
cmp
inc
pop
scas
jle
call
movsl
out
fiadds
repz
fidivl
fnstsw
sub
mov
sub
dec
mov
int
or
xlat
sbb
jne
or
ss
icebp
lock
stos
jp
push
iret
ljmp
es
inc
pop
out
push
sbb
dec
adc
rcll
xor
mov
add
in
test
mov
mov
sbb
jns
jnp
fadds
dec
aas
xlat
inc
lret
movl
or
and
aas
fcoms
or
jmp
pusha
mov
or
pop
mov
arpl
insb
push
mov
jl,pt
lods
pushf
bound
mov
test
icebp
mov
or
and
push
jecxz
fmulp
orl
scas
xchg
stos
jno
inc
xor
test
repz
jge
js
shlb
push
jne
push
pop
cltd
mov
push
out
cwtl
stos
stos
push
and
shlb
jb
out
add
fbld
dec
fidivrs
sbb
push
cmp
jo
in
dec
xchg
jne
popf
outsb
jo
fs
cmpb
popf
pop
ja
ljmp
push
xor
mov
jge
mov
outsl
cmp
out
pop
sbb
xchg
popa
jecxz
push
pop
aaa
push
stos
jne
jl
pop
dec
call
mov
jmp
shlb
pop
mov
push
subl
or
xor
lahf
mov
stc
shrb
xor
popa
inc
les
adc
out
push
sbb
out
stos
insl
je
cmp
cmpsb
mov
or
sti
cs
inc
outsl
rol
test
mov
xchg
adc
inc
test
fadds
mov
jbe
repnz
fnstcw
xor
push
mov
enter
cmp
imul
hlt
ficoms
lods
shlb
popf
lcall
xor
sub
mov
nop
out
and
and
lea
inc
jb
push
xor
sub
inc
ret
cmp
int3
or
fwait
xchg
cmpsb
dec
aam
shrb
mov
rclb
test
test
movb
pop
sub
fnstcw
ja
mov
jno
mov
pushf
stc
aas
mov
or
pusha
pop
or
cmp
cmp
jno
cld
and
mov
adc
add
mov
test
add
jmp
cmpb
sbb
xchg
loopne
outsl
test
cmpl
xor
stos
or
popa
insb
enter
inc
dec
mov
shlb
xor
andb
mov
sti
movsb
lret
sbb
xor
xchg
xlat
outsb
adc
es
mov
jns
xchg
xor
rol
inc
add
mov
push
in
mov
xor
movsb
clts
dec
xchg
inc
push
movsb
xchg
sbb
pop
loopne
fidivl
out
push
adcb
jo
addr16
dec
js
mov
adc
cwtl
push
sti
sbb
or
and
outsb
adc
xlat
ljmp
jmp
mov
pop
rcll
lcall
push
mov
mov
mov
dec
mov
ljmp
pushf
mov
mov
mov
inc
sub
mov
adc
pop
mov
mov
pop
lcall
ds
xchg
jne
arpl
mov
cmp
mov
call
dec
jne
bound
inc
pop
mov
les
jecxz
jns
dec
cmp
pop
sti
dec
mov
and
test
mov
dec
loopne
mov
push
jns
adc
je
jo
sbb
cld
cmp
or
mov
fstps
bound
fiaddl
and
ret
out
sub
movsb
push
and
fsubrp
mov
jnp
pop
sti
xchg
pusha
test
mov
mov
push
imul
sub
jnp
jns
mov
daa
mov
mov
or
jnp
sti
hlt
pop
sub
ret
in
pop
dec
push
push
cli
mov
and
cmp
xchg
repz
ficoml
add
loope
js
xchg
push
in
sub
js
iret
ret
or
outsb
jbe
mov
inc
mov
test
mov
dec
iret
cld
and
dec
dec
cwtl
sub
mov
lock
loopne
mov
aas
mov
sti
mov
mov
push
sub
mov
push
push
mov
pop
pop
mov
mov
push
aaa
scas
leave
jno
xor
inc
repz
cld
scas
adc
and
stc
pop
aaa
les
inc
gs
ljmp
stos
pop
pop
mov
roll
and
aas
adc
push
pop
test
mov
sbb
repz
jae
mov
nop
push
sbb
sub
cmp
scas
es
insb
pop
xor
rolb
mov
stos
push
dec
dec
mov
int3
xchg
xor
jb
pop
lods
popf
nop
xchg
xchg
xlat
popf
push
push
out
mov
mov
pop
pop
pop
and
push
icebp
pop
push
mov
addr16
push
mov
inc
pop
out
cmp
sub
xor
mov
sub
jmp
fistl
ljmp
test
xchg
pop
test
lea
popa
in
rcrb
push
ret
sbb
push
cmp
clc
push
sbb
movsl
repnz
in
adc
push
das
aaa
gs
sub
fsub
push
test
sbb
dec
sar
pop
pop
shrl
out
outsb
cmp
push
iret
and
les
or
push
add
cmp
inc
sti
xor
mov
sub
mov
enter
sti
pusha
rcll
sbb
cltd
les
or
and
sub
into
std
mov
js
sbbb
jne
ja
jno
inc
cmp
je
lds
xchg
xchg
xlat
jl
in
shrl
pop
repz
data16
jno
dec
xchg
xchg
mov
lcall
int
insb
mov
jne
leave
push
pop
inc
sbb
dec
jle
sbb
fistl
ret
movsl
cmp
pop
sarb
inc
adc
aad
sahf
pop
add
aad
imul
or
mov
testb
push
cmc
xchg
mov
add
insl
inc
xchg
fsts
adc
test
lds
and
xchg
cmp
test
inc
outsb
testl
filds
js
ljmp
inc
shlb
sbb
cmp
sti
cmp
pop
lds
xchg
call
and
daa
inc
push
fldt
mov
out
jb
ficomps
int
faddl
mov
xchg
sbb
ss
loopne
push
xor
out
repnz
fdivrp
xor
loop
mov
cmpsl
imul
xchg
pop
add
sub
jmp
cs
push
les
adc
mov
sub
mov
inc
stos
ret
ret
jnp
arpl
push
xlat
cltd
loop
cmpsb
sub
cmp
lret
mov
lret
in
movsl
add
push
mov
sub
scas
add
or
lods
pop
adc
cmp
sub
sbb
xchg
fnstsw
mov
inc
dec
mov
cs
sub
add
out
xlat
repz
fsub
popf
and
outsl
xor
popa
dec
mov
pop
aad
mov
mov
or
and
or
push
mov
popf
fcoms
or
test
pop
push
cmp
lcall
lret
popa
xor
insb
fimull
inc
pop
cmp
adc
mov
mov
cmp
lret
or
outsl
and
sub
or
adc
lret
sub
stos
std
mov
add
nop
aad
mov
xor
fwait
sub
pop
pushf
inc
push
scas
and
sahf
jno
iret
dec
ljmp
data16
fdivrs
push
xchg
push
mov
hlt
adc
addr16
js
sub
add
mov
jnp
xor
dec
enter
lret
pop
mov
lock
js
xor
pop
loop
jbe
outsl
lods
lret
pop
or
cmp
cli
push
mov
xor
adc
fwait
enter
mov
cmp
test
pop
rorl
sahf
enter
push
jno
push
bound
sub
fs
mov
idivb
aas
pop
and
mov
clc
pop
jg
push
adc
cmp
jae
loopne
pop
push
sbb
mov
cs
jbe
mov
pop
aad
fisubl
les
les
push
mov
sub
sub
in
divb
inc
iret
xor
nop
les
insl
ffreep
fnstcw
and
mov
jp
imulb
pop
test
subl
adc
roll
lock
outsl
cmp
push
add
adc
pop
dec
bound
and
or
cwtl
mov
cmc
xchg
xor
add
mov
xlat
ljmp
pushf
or
fwait
cmc
push
dec
jmp
dec
mov
pop
in
push
or
jnp
mov
out
call
or
shll
inc
lock
inc
bound
shl
jo
xor
sub
cmp
andb
push
xlat
inc
rcrb
and
jno
jg
enter
inc
mov
ret
das
mov
xchg
rorl
arpl
loop
or
fs
sbb
sub
sbb
add
jmp
or
pop
pop
mov
jae
xor
xor
ret
sub
adc
out
fsubp
jnp
in
push
xchg
ljmp
aas
ret
or
mov
sti
jecxz
clc
fnstsw
mov
and
int3
scas
cmp
aad
push
int3
aas
or
shrl
mov
stos
dec
in
orb
pop
testl
ss
enter
mov
xor
xor
scas
gs
sbb
pop
mov
stos
sub
nop
addl
xor
out
xchg
cmp
daa
cmp
mov
sbb
movsb
cmp
xchg
cmp
xor
jbe
jns
push
add
cld
jae
dec
lcall
int
incl
aaa
aam
mov
or
xor
sbb
add
mov
push
inc
mov
lea
jne
push
push
sub
dec
clc
pop
sbb
lea
mov
sub
or
pusha
adc
sub
cmp
mov
cld
pusha
inc
jbe
pushf
adc
scas
xor
js
sbb
and
loop
cld
push
dec
dec
mov
shrl
popf
dec
xor
stos
dec
and
popa
fldcw
notl
rorb
imul
cmpsb
push
enter
cmp
and
aam
inc
out
or
ljmp
movsl
mov
jnp
stos
insl
pop
jb
and
push
dec
lock
cmp
lds
or
aas
aaa
loope
fimuls
in
dec
ja
sub
sub
pusha
lahf
xor
popa
xchg
inc
outsl
lds
fimull
mov
test
ficoms
in
call
push
jp
mov
scas
jno
mov
mov
mov
lret
stos
xchg
add
es
not
xchg
daa
sub
aad
push
push
mov
dec
fwait
ret
arpl
movl
or
into
cmovle
shlb
mov
data16
outsb
add
cmpsl
stos
sar
loop
mov
inc
push
imul
jle
and
push
mov
mov
lahf
mov
testb
push
call
jae
jp
insb
xor
add
testb
jp
jbe
mov
imulb
ljmp
sbb
mov
lds
rcl
mov
fwait
cvtpi2ps
jbe
dec
jecxz
xchg
jnp
push
mov
bound
mov
loope
mov
das
sbb
xchg
mov
test
ret
je
sahf
and
xchg
jecxz
js
leave
pop
xchg
push
jns
ret
and
mov
mov
and
push
lahf
out
adc
fdiv
lods
sbb
jmp
lcall
mov
inc
mov
sub
inc
ds
push
cli
scas
push
jge
shrb
rcrb
aas
rorb
cmp
cmp
jp
dec
push
mov
or
aad
gs
movsb
leave
int3
pop
xor
and
pop
ret
lock
xor
fcmovb
pop
lret
lods
xchg
fisubs
push
adc
mov
std
inc
hlt
popf
dec
test
js
imul
push
and
push
mov
or
data16
xor
aaa
mov
popa
loopne
jmp
push
mov
add
xlat
mov
mov
mov
lods
loopne
shll
imul
int
leave
decb
adc
sub
es
repz
mov
les
and
jns
or
fsubs
pop
mov
jmp
das
inc
hlt
push
pushf
shll
push
cwtl
sbb
ds
push
lea
roll
jmp
mov
mov
std
ss
test
je
add
loop
cli
std
pop
fsincos
data16
or
mov
std
mov
xchg
scas
cs
add
sub
cmp
jbe
add
sub
dec
adc
stc
dec
ficoml
pop
pop
fisubl
repnz
xchg
repz
lret
out
push
mov
mov
pusha
jle
xor
test
aaa
adc
mov
js
inc
shl
cmp
icebp
mov
cmp
xor
icebp
jnp
pop
jno
sbb
adc
and
xchg
xchg
and
cwtl
movsl
jl
divl
int
sti
in
fdivl
xchg
mov
inc
ljmp
lds
nop
jmp
lock
xchg
in
mov
push
in
push
mov
mov
mov
outsb
and
mov
lods
and
sbb
pop
sbb
push
bound
mov
sbb
mov
ja
insb
jne
push
dec
shrb
push
imull
icebp
and
mov
inc
mov
mov
std
mov
call
loope
in
sub
sarb
jmp
shl
mov
inc
lods
adc
or
shrb
mov
stos
fmull
jne
add
movsl
cmp
xor
out
loope
push
imul
enter
cmp
push
dec
dec
icebp
jbe
hlt
push
xor
in
shll
push
or
outsb
lock
hlt
sbb
mov
imul
fsubs
repz
fwait
jmp
sub
jnp
mov
jle
xchg
ja
sbb
lods
inc
les
xor
nop
repz
jmp
adc
inc
pop
pushf
adc
loop
and
and
mov
dec
fldl
int3
mov
pop
sbb
scas
mov
ret
loope
ret
out
pop
cmp
nop
test
addr16
push
mov
fmuls
add
out
and
jnp
mov
jae
sub
fcoml
push
mov
add
push
adc
aam
outsb
and
xchg
mov
jne
sbb
ljmp
pop
jle
into
test
inc
cmc
xlat
clc
cmp
push
adc
cmp
xchg
nop
mov
dec
adc
loope
dec
or
xor
daa
lahf
and
int
jno
jae
inc
mov
into
ret
dec
sub
out
hlt
add
popf
imul
mov
outsb
ds
push
xor
add
xor
popl
es
add
insb
inc
daa
and
sar
inc
cmp
and
into
push
jl
mov
loopne
ss
adc
sbb
test
popa
and
xor
pop
adc
lahf
ret
jge
push
xchg
xchg
mov
xchg
lcall
aas
loop
pusha
sahf
leave
jge
dec
popa
jmp
fstpl
loope
dec
jne
sbb
mov
test
test
xchg
aam
add
and
mov
jb
cltd
lds
pop
xchg
mov
sbb
and
pop
mov
out
loopne
mov
and
sbb
dec
mov
sbb
or
aad
test
loopne
loope
push
out
outsl
mov
scas
mov
js
pop
dec
jmp
insb
sbb
addl
pop
sti
dec
lock
pusha
xor
jle
cli
inc
mov
and
cltd
xchg
cwtl
popf
jecxz
mov
in
add
push
mov
mov
or
push
mov
lods
je
jb
movsb
addr16
das
xor
lods
add
addl
mov
xchg
jns
cmp
inc
pop
jg
outsb
dec
loop
jl
jle
pop
pop
pusha
cmpsl
cmpsb
push
imul
fildl
fldcw
xor
rcl
mull
sbb
pop
pushw
data16
rcrl
das
mov
dec
fdiv
cmp
push
in
mov
xchg
cli
call
rcrl
fsubrl
xor
scas
inc
mov
sub
dec
inc
adc
lea
addl
adc
cmp
ljmp
mov
and
or
xchg
pop
add
js
push
inc
push
mov
pop
ds
push
mov
movsl
jno
push
xor
pop
outsl
cmp
and
cli
sbb
test
daa
popf
mov
add
add
xchg
mov
cli
push
dec
ja
cs
insl
cmpsl
invd
dec
pusha
rclb
xchg
fcmove
mov
aaa
xor
filds
fcompl
or
ds
jge
mov
pop
xchg
dec
jl
orl
ja
stc
jo
jns
or
jg
mov
mov
pop
bound
push
jg
add
leave
adc
jb
cmp
in
xchg
xchg
neg
and
cmp
mov
jge
pop
test
movsb
int3
int
inc
inc
cmp
pop
roll
xor
xchg
sub
out
or
arpl
out
add
xchg
popf
inc
mov
push
pop
aas
mov
push
into
lods
add
jp
mov
in
sbb
xlat
lcall
jge
pop
andb
movsb
inc
pop
jno
ret
push
je
jb
jmp
pushf
pop
test
mov
add
fwait
rcl
and
subl
lods
mov
imul
jp
scas
pop
mov
xor
ja
inc
cmc
cmpb
int
mov
dec
inc
mov
leave
mov
xchg
mov
out
sub
out
cmp
scas
jnp
sbb
push
and
dec
xor
add
scas
cmp
dec
jbe
ja
cmp
adc
dec
mov
pusha
adc
inc
add
fwait
test
mov
subb
dec
ret
imul
push
mov
push
or
xor
jns
aaa
test
jno
cld
xchg
and
lahf
mov
in
scas
cmc
adc
outsb
cmp
gs
or
bound
arpl
xchg
push
fstp
mov
and
test
rcl
xchg
in
or
xchg
ret
inc
cmpsb
test
jp
bound
cmp
sub
push
les
pop
add
xchg
pop
out
mov
neg
inc
mov
push
pop
mov
popf
jmp
inc
outsl
movsl
xchg
dec
fldt
jo
sbb
stos
sbb
add
jb
in
sti
icebp
rcll
lahf
inc
ret
xchg
cmpb
lea
pop
add
push
pop
pushf
inc
inc
into
daa
sti
dec
int3
dec
xor
add
pusha
cld
jbe
das
lods
test
into
js
lods
cwtl
insl
mov
nop
addr16
jp
movsb
movsb
test
dec
mov
xchg
lds
popf
and
sub
add
les
dec
cs
lods
sti
cmc
scas
lahf
mov
shll
jle
outsl
mov
push
scas
push
loopne
add
sbb
stos
daa
dec
jne
sbb
fadds
inc
out
xchg
iret
mov
mov
mov
push
jp,pn
pop
mov
shll
lcall
mov
test
mov
icebp
sub
sbb
sbb
stos
and
imull
ret
loopne
jp
push
cmp
sbb
pop
push
jnp
inc
mov
scas
mov
insb
dec
rorl
sarl
pop
adc
pop
notl
addl
push
xchg
scas
andl
dec
xor
fmuls
sbb
pusha
or
mov
sbbl
mov
xor
lods
jbe
into
scas
add
test
sbb
inc
stc
or
mov
xchg
rorl
or
rclb
mov
rclb
loope
sub
mov
clc
pop
jae
push
push
stc
pop
jmp
push
cwtl
int
inc
popf
addr16
add
pop
xor
pop
mov
mov
inc
sub
push
push
xlat
data16
gs
fucomi
scas
lret
pop
xchg
lds
sbb
nop
cmp
push
mov
mov
aam
adc
push
pop
or
fwait
nop
push
rcll
ja
les
mov
fistl
out
push
pop
and
cmp
lea
stos
mov
cmp
mov
cmp
ffree
ret
call
pop
lret
mov
adc
pop
fstpl
lods
push
mov
enter
and
jns
insb
ds
dec
jns
push
stos
mov
mov
mov
repnz
pop
pop
push
iret
lock
addr16
int
and
out
imul
je
pop
dec
int
arpl
and
data16
notb
mov
mov
xor
or
scas
jnp
cwtl
pop
add
shlb
lods
dec
hlt
rcr
sahf
jle
xlat
push
int
pop
dec
ret
sub
mov
popa
ljmp
lcall
sub
inc
subl
cltd
adc
movsb
xor
inc
subl
sbb
xor
jge
sbb
xlat
xor
jb
xchg
lea
subl
xchg
cs
sbb
jno
jb
mov
jge
dec
sub
cmp
loopne
push
insl
add
lods
aas
push
imul
cmc
lahf
das
sub
jae
push
gs
inc
pop
or
xor
jb
and
imul
cwtl
sbb
sahf
push
jnp
fld
jmp
adcb
rorl
jle
cmpsb
inc
and
add
fs
fldcw
xor
jl
fcom
pop
pop
sub
dec
data16
ja
jne
nop
inc
mov
outsl
popa
imul
push
jbe
xlat
cmpsl
xchg
mov
repnz
int3
cli
cmp
mov
mov
push
not
mov
and
pop
dec
outsb
popf
add
in
cmp
cmp
movsb
loopne
cwtl
cwtl
test
outsb
lods
jp
lret
jo
adc
and
sarl
xor
xor
shll
in
push
lock
adc
adc
out
pop
test
adc
jle
leave
imul
xchg
jne
sbb
cltd
fisttpl
jns
mov
mov
mov
ss
xchg
test
xor
dec
xor
movsl
cmp
pusha
cld
jno
out
in
pop
das
push
mov
mov
jp
fsubl
into
je
adcb
jl
dec
sbbl
push
je
jbe
enter
dec
lods
fucomip
addr16
adc
mov
int
add
pusha
inc
and
cmp
test
mov
imul
xchg
adc
sub
and
fcompl
stos
push
mov
je
and
add
push
sbb
scas
pop
aaa
or
out
inc
or
ror
mov
or
stos
testb
nop
xlat
lods
sbbb
pop
jno
push
std
pop
fists
xorl
cmp
cmp
push
outsb
xchg
sar
dec
cld
fisubl
mov
inc
outsb
pop
xor
jg
fists
sahf
outsl
adc
cmc
fcmovnbe
call
push
push
add
sbb
mov
adc
ds
jns
aad
lret
add
fimuls
mov
lcall
add
movsl
test
jl
loop
cmc
xchg
shll
mov
test
and
or
out
js
adc
scas
pop
es
in
dec
cwtl
mov
cli
and
sbb
stos
scas
stos
clc
mov
sbb
mov
inc
es
test
sbb
mov
sub
cmp
arpl
inc
fcomps
jae
das
jb
out
test
loop
dec
dec
in
lahf
insb
mov
add
xlat
imul
jnp
push
jnp
cwtl
mov
sub
jae
lret
into
add
lods
mov
iretw
jecxz
jne
mov
dec
iret
or
xor
sub
xor
mov
ja
inc
push
repnz
push
lcall
fdivs
xchg
or
adc
lods
data16
stc
adc
sbb
mov
jne
push
loope
push
sbb
jecxz
hlt
mov
loop
icebp
pop
and
pop
out
push
and
mov
ret
fnstcw
dec
repz
add
bound
cmp
cld
pop
ret
jae
pop
loop
inc
je
pop
add
lock
lds
clc
dec
adc
iret
xor
iret
dec
xchg
inc
int
or
or
push
mov
jae
sbb
xlat
sub
cmp
xchg
popa
push
adc
subl
into
rclb
push
xchg
push
cmp
es
in
out
fs
mov
pop
test
xlat
mov
lds
cmp
cmc
aad
fs
jge
in
sub
xchg
insl
shl
stc
sahf
push
xchg
fstpt
cmp
int
xchg
jbe
mov
test
inc
inc
mov
push
inc
sbb
cmp
or
dec
inc
mov
aas
add
sub
inc
je
std
call
into
and
nop
cmpsb
int
cld
xchg
fsubrl
mov
fwait
push
fldt
jnp
jle
pop
inc
ds
imul
pop
repz
dec
pop
or
ss
inc
pop
mov
js
push
rol
or
push
cmp
add
ss
jne
fsubr
lds
imull
lods
stos
aas
dec
push
xchg
imul
lock
lea
pop
mov
sub
mov
and
in
arpl
loope
jb
push
push
sbb
cmp
cmp
mov
clc
cltd
adc
mov
mov
xchg
notl
adc
xor
test
ljmp
lea
pop
sti
sub
add
int
mov
jnp
sbb
cmpsb
repnz
lods
shr
call
mov
and
lea
dec
xor
arpl
divl
push
in
aam
pop
or
fsts
and
xchg
sub
cs
sub
test
sub
xchg
test
sahf
nop
jbe
fldcw
xor
aad
ret
fistl
fdiv
loop
add
mov
aaa
hlt
sub
call
adc
push
daa
in
cld
sbb
iret
pop
mov
mov
lret
add
xchg
xchg
xor
adc
rorb
and
xor
xorl
div
and
cmp
negl
ljmp
movsl
cmpsb
loop
lret
pop
test
add
sbb
xchg
cmp
hlt
ljmp
faddl
clc
shrl
mov
lea
fildl
mov
xor
scas
or
in
xchg
arpl
sahf
add
mov
subb
push
inc
push
enter
lods
aam
push
pop
inc
scas
sbb
addr16
enter
scas
mov
cli
sub
aam
jo
fwait
xor
push
sbb
push
ss
nop
xchg
ja
popf
insl
cmp
clc
inc
add
aaa
loop
mov
test
push
out
add
jmp
out
jne
dec
xlat
cmpsl
jg
rolb
sbb
int
adc
movl
cwtl
sub
loop
fwait
js
aad
imul
add
or
push
mov
add
mov
mov
jo
cmc
out
call
mov
and
dec
sar
sub
fiadds
shlb
mov
loope
loopne
sahf
jns
imul
and
fwait
or
iret
les
pushf
nop
push
js
push
loop
imul
jbe
repnz
stc
pusha
sub
xchg
jae
sub
xchg
mov
jo
sbb
inc
test
xchg
mov
pop
inc
lret
leave
aaa
cmc
mov
mov
outsl
xchg
jno
aam
clc
out
sub
dec
cmp
je
sbb
push
xor
inc
clc
rclb
in
fsubrl
push
test
outsb
dec
je
lahf
nop
rol
ljmp
out
jb
insb
push
xor
sbb
je
stc
fstps
mov
jne
icebp
cli
or
icebp
addb
and
dec
dec
int
out
or
movb
jmp
sarb
mov
lahf
push
sahf
ss
push
cmp
pop
add
sub
dec
movsl
jecxz
out
or
dec
test
hlt
push
insl
loopne
jb
mov
pop
icebp
xchg
lds
xchg
mov
cmp
mov
cmpsl
sbb
push
das
scas
mov
bound
mov
adc
and
xor
adc
cmp
add
mov
in
lahf
out
sub
push
or
jmp
pusha
push
cmp
mov
jg
or
mov
in
fldenv
sahf
insl
les
fisttps
mov
movsl
loopne
shlb
outsl
ret
cmpsl
imul
daa
cmpsb
cmp
xchg
jo
xchg
or
mov
inc
sub
mov
add
inc
sbb
push
push
in
enter
out
imul
int3
sub
cltd
pusha
jecxz
cltd
xor
inc
xchg
clc
add
out
sub
or
push
mov
loope
into
adcl
jmp
jle
ficompl
scas
out
cmpb
xor
adc
add
push
mov
pop
mov
js
inc
insl
xor
and
adc
push
add
fiaddl
pop
test
dec
icebp
sub
rorl
rclb
mov
in
xchg
jg
sub
lahf
or
js
out
add
inc
lds
test
adc
push
cltd
lods
fsubl
sbb
negl
and
mov
sub
inc
jae
popa
ret
push
jbe
xchg
bound
xchg
out
bound
stos
cs
enter
mov
repz
pushf
leave
bound
jne
and
push
dec
mov
loope
or
or
les
pushf
shr
cs
arpl
movsb
add
add
pop
inc
ror
add
pop
sbb
dec
std
scas
add
sbb
fs
int
outsb
fwait
popf
jno
inc
loopne
xor
out
xchg
enter
lods
mov
cld
pop
icebp
mov
movsb
js
jo
pop
mov
push
arpl
into
xchg
in
cmp
aam
insl
mov
bound
mov
mov
push
xchg
fstp
push
lods
int
hlt
or
outsl
mov
xor
jmp
xor
dec
sbb
daa
adc
mov
in
push
fbld
inc
push
and
dec
xchg
mov
push
jae
fmull
iret
inc
aad
mov
sbb
ja
push
xchg
cli
test
adc
dec
fstpl
outsb
xchg
xor
sbb
and
dec
inc
test
je
rcrb
out
ss
rcll
pop
cmpsb
cmc
les
mov
add
and
pop
fists
enter
pop
fwait
enterw
or
add
data16
push
fnsave
pop
movsl
pop
mov
adc
push
jge
out
pop
fidivrs
filds
enter
mov
dec
pop
out
loop
or
int
test
cld
adc
clc
mov
cmp
daa
in
out
xchg
faddp
data16
loop
xor
cli
cmpsb
stc
mov
inc
lds
cltd
cmpsb
loop
xor
jno
jmp
xor
scas
shlb
xchg
dec
jl
mov
xchg
lret
popa
movsb
inc
xchg
pop
gs
or
and
or
cwtl
mov
mov
mov
mov
cmp
test
in
pop
sbb
jno
arpl
mov
add
mov
jmp
leave
mov
pop
pop
push
mov
fnstenv
push
add
mov
and
icebp
movsl
xor
fsubs
push
xor
pop
mov
icebp
lods
int
sbb
dec
in
cmp
sahf
sub
inc
ret
sub
dec
rcll
mov
pop
out
sub
aad
int3
cmpsl
and
cmpl
cld
ja
and
pop
mov
add
daa
xchg
rclb
test
test
pop
adc
test
pop
stos
jae
scas
imul
es
in
xchg
in
aas
fisubrs
sub
mov
sub
loope
add
loopne
mov
dec
test
ret
cmp
sub
adc
mov
xchg
sbb
into
into
xor
repz
xor
sub
call
cmp
xor
in
add
iret
or
add
hlt
lock
insl
fwait
lock
movsb
bound
fidivrs
insb
push
pop
dec
jg
jo
pop
stos
addr16
shl
push
cmpsl
push
inc
sbb
sbb
xorl
or
pop
in
lods
insb
mov
jecxz
notl
ficompl
jle
inc
shrl
jle
popa
loope
mov
fsub
call
adc
pop
jecxz
sbb
sbb
cmp
or
leave
pop
aas
movsb
lods
scas
jl
stos
xchg
sbb
pop
lds
ret
loop
daa
lahf
into
loopne
push
pop
jnp
int
fidivrl
pcmpgtd
cmpsb
pop
jmp
sub
sahf
js
lock
push
jne
mov
mov
int
sahf
push
test
enter
movsl
xor
lods
sbb
inc
mov
les
xchg
push
mov
cmp
mov
dec
xor
mov
jp
dec
xchg
dec
jbe
mov
lock
loope
adc
je
mov
loope
jae
daa
sub
xor
dec
push
daa
cmp
fadd
subl
mov
insb
inc
push
xor
scas
out
fidivl
leave
or
leave
sub
insb
stc
mov
insb
cmp
jns
or
push
movsb
movsl
enter
cltd
dec
out
xchg
add
jmp
loopne
jg
lock
lcall
scas
sub
push
arpl
movsb
pop
stos
dec
mov
push
mov
mov
add
lahf
subb
movsw
in
and
lret
nop
xchg
dec
fwait
rcl
insl
fimull
les
inc
xor
mov
add
push
adc
cwtl
test
popf
xchg
popf
xchg
and
pop
sbb
sahf
imul
sbbb
in
push
jae
mov
mov
mov
lods
pop
jmp
add
bnd
cld
xchg
inc
out
xchg
call
jno
fcmove
jp
sub
and
push
jp
ret
stos
insb
dec
cli
sti
fldl
xchg
lea
mov
push
push
in
mov
jl
push
aad
aad
pop
jo
stc
and
fsubrl
fwait
jp
in
jno
or
ret
je
rorb
scas
mov
xor
lock
aaa
mov
adc
nop
ds
lcall
jo
push
fs
xor
data16
popa
aad
aas
add
outsb
xchg
in
push
faddl
and
mov
test
mov
fucomip
lock
test
adc
mov
xchg
repnz
xor
or
fdivs
enter
dec
pop
mov
sub
or
rolb
nop
mov
pop
sbb
cmpsb
int3
inc
push
dec
popf
and
iret
mov
or
sbb
sbb
popf
sub
and
push
or
insl
mov
and
or
movsb
jnp
lret
push
inc
pop
xor
mov
and
inc
xor
in
push
stos
lcall
mov
adc
xlat
sbb
sbb
adc
mov
cmc
pop
cvtdq2ps
clc
dec
or
rep
inc
push
push
adc
cwtl
push
not
movsb
ret
int
add
and
or
orb
test
xchg
fnstsw
xchg
add
mov
daa
cli
dec
or
aad
ja
ret
pop
adc
or
adc
jl
cmp
test
cmp
dec
js
nop
and
int
lds
xor
and
pop
cmc
je
leave
lcall
outsl
aad
inc
xor
mov
and
testl
bound
jp
and
cltd
aam
shll
push
add
aas
lods
imul
push
sbb
push
and
stos
dec
ss
and
jp
fstpl
in
cmp
push
add
or
mov
bound
mov
out
lret
adc
icebp
fisttpll
xchg
call
mov
clc
dec
mov
adc
sub
andb
mov
jmp
gs
arpl
loop
mov
push
shlb
mov
jbe
inc
scas
imul
popf
jbe
xor
test
outsb
and
lds
adc
inc
in
mov
or
daa
loopne
mov
xchg
cmc
pop
out
bnd
adc
adcl
repz
shlb
into
push
sbb
lahf
js
mov
fwait
enter
shlb
scas
pop
adc
aas
movq
add
orl
pop
ret
ljmp
mov
inc
mov
mov
fsts
stc
movsb
inc
rclw
cli
mov
xor
jge
mov
pop
xor
pusha
mov
shl
aaa
incl
adc
sbb
dec
popa
dec
aam
icebp
into
in
call
inc
aad
ret
pop
cld
push
stc
sub
mov
mov
call
jl
movsb
std
lea
imul
xchg
lret
jge
push
push
sbb
jb
mov
sub
ss
push
adc
loope
mov
scas
sbb
pop
push
lods
rolb
xchg
jl
push
jae
repnz
bound
xor
pop
in
fisttps
nop
mov
aaa
mov
lds
push
push
inc
hlt
insl
push
call
dec
or
cmp
inc
or
loopne
sbb
and
lds
cmp
inc
mov
icebp
jle
push
mov
mov
insl
repnz
int3
inc
cld
in
cmc
mov
popf
jmp
jbe
pop
hlt
insl
mov
fld
xor
icebp
aad
loop
sbb
and
sbb
shr
adc
shll
ffreep
add
mov
sub
cmp
cmp
mov
sub
lods
dec
and
mov
inc
imull
leave
sub
xchg
hlt
cltd
sahf
cmp
scas
das
xor
adc
sti
jge
icebp
sbb
cmp
jmp
test
cmp
arpl
mov
lock
imul
add
dec
dec
gs
xor
loopne
hlt
mov
jmp
int3
mov
xchg
dec
test
xchg
sub
fs
es
push
mov
test
mov
fildl
jnp
jne
xlat
adc
es
jmp
imul
jno
sub
mov
xor
cli
rcr
test
jb
mov
insl
fistpl
or
inc
fsubs
jno
cwtl
mov
mov
aas
in
and
aam
xor
jge
insl
and
dec
and
add
ret
adc
lret
std
test
adc
fldt
add
xchg
pop
mov
fucom
push
std
sbb
xchg
enter
arpl
xchg
cmpsb
pusha
std
jno
daa
int3
adc
mov
in
bound
inc
or
dec
mov
pop
insl
or
aam
sbb
mov
cmpsl
push
mov
and
std
jecxz
jno
mov
out
jmp
les
clc
pop
aaa
aam
ljmp
xchg
mov
dec
pop
mov
inc
jge
insb
out
jns
push
or
int3
push
dec
stos
fwait
std
hlt
dec
mov
xchg
mov
push
inc
lods
and
aas
mov
test
pushf
push
mov
sbb
test
jae
stc
movsl
push
cltd
pop
movd
lods
or
mov
bound
push
add
jle
mov
sub
imul
mulb
jmp
add
icebp
das
in
loope
mov
insb
xor
shlb
decl
jb
add
fisubrl
fistpl
sarb
cmp
negl
nop
xor
pop
dec
dec
insl
dec
mov
jae
pop
mov
inc
in
dec
ljmp
nop
xor
je
pop
sub
das
xor
xchg
movsl
ds
ret
sbb
adc
icebp
add
mov
movsl
xchg
stos
mov
bound
pop
mov
repz
sahf
shlb
inc
or
mov
inc
adc
es
je
lea
mov
cmc
xchg
xchg
imul
loopne
aaa
mov
out
fs
or
push
add
pusha
out
jo
leave
imul
ret
mov
fiadds
ret
mov
test
sahf
stos
xchg
fsubr
jae
cli
fisubrl
adc
jmp
mov
cli
add
addb
sub
xchg
scas
mov
outsb
sbb
mov
icebp
inc
aad
sbb
jae
push
leave
fldcw
cmp
lods
popa
add
cmp
xchg
testb
jge
lcall
jae
sbb
mov
mov
fidivrl
push
jne
mov
push
push
mov
mov
push
lret
mov
xchg
jg
mov
or
and
out
lods
shll
pop
pop
loop
stos
in
and
and
inc
das
jecxz
movsb
out
clc
add
inc
mov
sub
add
dec
xchg
mov
lahf
sub
lret
xchg
dec
rcr
sti
adcb
sahf
dec
and
je
sub
cld
test
mov
fimuls
add
decb
pop
bound
ds
cwtl
jle
mov
or
lea
adc
or
clc
xor
outsl
rcr
inc
sarl
subb
xor
mov
cmp
sub
pop
adc
dec
cli
push
pusha
sti
in
cmp
xor
pop
mov
sahf
mov
add
push
sar
shll
cmpsl
addb
or
js
mov
inc
push
xor
inc
xor
rorl
iret
mov
pop
sub
fbld
mov
repnz
mov
cmpsl
sub
icebp
out
ds
mov
jecxz
jno
cmc
popl
push
inc
addr16
jnp
cmc
fisttpl
roll
imul
add
fwait
lret
sbb
xchg
fisubs
dec
jb
in
sbb
insb
adc
leave
adc
nop
in
es
cmp
imul
add
add
lret
addl
test
int
neg
aaa
dec
je
add
xchg
cmp
fidivrs
adc
ds
mov
and
push
mov
clc
clc
imul
leave
nop
sbb
add
xor
cmpsl
test
mov
aad
aam
inc
xchg
cmp
pop
xchg
test
inc
das
push
jl
hlt
das
sbb
cmp
aas
pop
cmpsb
js
jnp
jne
fs
push
mov
cmp
cmpsb
sbb
push
jecxz
movsb
ret
and
ror
pushf
jns
pop
dec
ret
insb
pushf
fstp
add
add
and
inc
btr
icebp
sarl
sbb
pop
sahf
mov
repnz
sti
outsb
xor
addr16
pop
or
push
out
repz
push
pop
mov
lret
mov
cmp
mov
pop
push
pushf
pop
cmpsb
xchg
jle
dec
cmp
push
add
jns
or
pushf
ret
sub
insb
mov
fisubl
cli
subb
xchg
or
lods
rcl
push
dec
in
sub
jp
outsb
stos
shll
cld
in
lea
fiadds
jge
xchg
lahf
jno
aad
or
ss
mov
mov
push
mov
mov
rol
add
rol
addr16
jno
dec
pusha
dec
cltd
adc
cmc
pop
push
les
or
data16
push
cmp
repnz
mov
aam
jecxz
out
shrl
shr
ret
testb
push
cmpsb
popf
push
je
push
addr16
xchg
mov
jb
fmull
popa
mov
inc
xor
fistl
or
sarl
in
jnp
jb
adc
frstor
add
mov
dec
leave
pop
popa
pop
cmp
loop
out
dec
cmp
xor
stos
jb
fisttps
jb
pop
xchg
sub
inc
push
ret
mov
out
push
sbb
fmull
and
add
pop
loopne
sbbl
mov
aad
lea
pop
mov
jp
dec
sub
bound
push
or
mov
out
mov
shrb
movl
mov
pop
cmp
pusha
fildl
fadds
inc
out
lcall
mov
rorl
push
lods
push
or
lret
push
push
add
xor
push
and
push
mov
in
test
cmc
fistpl
imul
mov
bound
jge
jae
bound
mov
pop
orl
stc
jg
ss
scas
ficompl
lahf
dec
bound
add
ret
dec
and
or
jg
xor
inc
aam
sbb
mov
ffree
and
xor
jle
sbb
adc
int3
or
dec
mov
pop
out
cmpsl
cmc
fstpt
cmpsl
aam
xchg
rorl
lds
movsb
add
test
jle
aas
add
lahf
fbstp
aad
and
pop
lret
push
fsubp
jmp
and
call
repnz
push
inc
aad
xchg
out
sub
mov
cmp
pushf
ja
xlat
push
sub
and
loopne
mov
xor
std
sbb
insb
je
loop
sbb
popf
in
lea
dec
jae
gs
adc
add
in
fcoml
out
movsb
lret
adc
jg
jp
js
js
jmp
sti
sbb
das
xor
jno
lea
sub
mov
inc
test
aam
inc
adc
in
push
sarl
fldl
and
fwait
xor
ja
mov
mov
pop
cli
lds
inc
or
movsl
cs
dec
mov
hlt
mov
out
jecxz
fisttps
mov
jl
sub
mov
unpcklps
push
pushf
inc
out
push
xchg
repz
or
lret
ss
add
inc
les
pop
xchg
sbb
pop
movw
jle
nop
stos
ss
fnstsw
inc
sahf
sub
enter
cmp
mov
cltd
xor
push
int
cmp
mov
pop
imul
adc
fsubrs
jae
inc
pop
test
push
push
dec
sub
loopne
cmp
fadds
mov
sahf
lods
clc
jo
inc
sbbl
insl
or
mov
mov
int3
fstps
dec
aam
lahf
fisttps
test
cmp
jge
jmp
fs
or
lahf
dec
push
leave
ljmp
insb
lods
mov
cmc
jle
mov
add
dec
std
popa
and
lock
scas
mov
out
or
fdivr
ret
pushf
jo
jne
data16
ficompl
call
adc
xor
negb
xor
flds
inc
sarb
xorb
insb
mov
or
adc
cmp
sub
lock
pop
mov
cltd
sahf
test
pop
dec
orl
shlb
mov
jne
mov
or
or
xor
ss
dec
sbb
aad
inc
push
cmp
lret
cmp
push
jbe
imul
push
sahf
fcompl
push
dec
xchg
scas
jmp
dec
repnz
orb
pop
test
in
scas
mov
pop
inc
cmpsl
mov
mov
push
mov
rcr
and
push
push
cltd
test
or
jmp
ret
sbb
inc
aaa
imul
dec
cmpsl
lods
out
xlat
adc
cmc
push
add
cs
inc
mov
cmp
adc
xchg
sbb
cmp
adc
stos
popw
mov
je
lcall
push
sbb
pop
sub
insb
sbbl
ret
pop
int
pop
call
dec
jbe
shll
add
mov
test
mov
mov
or
xorb
pop
divb
movsb
adc
xchg
movsl
mov
mov
mov
mov
pushf
addl
cli
dec
cmp
in
add
sub
xchg
stc
lret
ljmp
addb
xchg
adc
and
int3
xor
cld
sahf
jle
ret
inc
mull
rcll
les
faddl
stos
inc
and
pop
xchg
xor
js
push
aaa
xchg
popf
mov
loop
jbe
mov
jno
mov
ljmp
mov
pop
xor
int3
fadd
sbb
or
xchg
sub
jns
push
sub
ljmp
jp
cmp
jge
incl
das
add
movsl
jge
loopne
lret
les
sbb
aaa
movsl
xchg
pushf
mov
lret
shll
js
xchg
pop
popf
xor
xor
cld
flds
and
jmp
mov
inc
pushf
cmpsl
dec
jae
jns
lock
or
pop
or
push
push
cmpsl
stos
pop
dec
or
cs
xchg
mov
adc
and
insl
add
test
mov
or
aam
inc
nop
jno
clc
and
rolb
jo
push
movsl
jge
fldenv
xor
outsl
mov
mov
ret
les
popa
jns
mov
mov
pop
jmp
stos
fstl
mov
push
dec
or
xor
xor
fstpl
orl
jg
fwait
sahf
insb
push
push
jl
pop
stc
pop
imul
ror
mov
jns
sub
push
mov
sub
insl
push
and
cmc
jnp
adc
sahf
dec
adc
pop
es
push
ds
fistpl
sti
sahf
stos
shlb
mov
push
pop
pop
je
in
in
sbb
mov
les
dec
or
lahf
jnp
mov
or
hlt
int3
mov
test
int3
jge
scas
loopne
arpl
jl
jmp
cltd
ss
or
enter
jo
push
ljmp
nop
jle
popa
sbb
inc
imul
jb
jb
sub
sbb
jmp
cmp
cli
sub
xor
jae
push
ljmp
clc
sub
enter
sarl
lea
sub
test
adc
mov
inc
push
push
push
inc
push
add
mov
sub
outsl
sti
mov
iret
or
loopne
movsl
mov
push
xchg
jns
insl
cmp
sbb
mov
mov
fisubrs
sub
and
mov
sbb
adc
cmp
sub
clc
push
cltd
shrd
and
sbb
mov
ret
imul
pop
push
sbb
sbb
pop
jb
sbb
or
xchg
roll
cmpb
sti
pop
out
sub
in
push
jmp
jp
ljmp
push
sub
fstl
movsl
adc
fnsave
cmp
cmpb
mov
sarl
jl
mov
rcr
out
jp
in
jo
push
and
call
iret
xchg
push
nop
daa
nop
not
xor
int
adc
cmp
xor
fldt
je
jp
push
inc
out
jl
cmp
xchg
push
xor
sbb
aaa
pushf
test
lret
mov
shll
daa
sub
imul
sub
outsb
aaa
les
or
mov
jp
xorb
enter
inc
sub
pop
sub
das
push
pop
jo
insl
fisubrl
dec
dec
mov
rcl
test
cmpsb
mov
mov
addr16
loop
test
out
mov
push
mov
push
push
sbb
hlt
pop
roll
push
mov
push
out
and
test
pop
jnp
xchg
in
jne
adc
inc
push
push
enter
out
push
xor
jb
ss
std
and
mov
inc
loopne
xlat
cli
das
pop
mov
fistpll
cli
jns
dec
divb
xlat
insl
mov
dec
out
daa
lret
aad
inc
aaa
lret
aad
test
popf
icebp
cwtl
dec
loop
cmpsb
adc
dec
sub
sub
cmp
test
sbbl
add
xor
jl
sahf
mov
jbe
adc
dec
inc
jae
sahf
add
adc
jae
pushf
cmp
cmp
outsl
add
pop
push
sbb
cltd
pop
push
mov
jno
push
cli
and
maskmovq
testl
xlat
sbb
loopne
dec
jecxz
sub
pop
mov
loop
fbstp
pusha
test
or
add
insb
pop
dec
cmp
mov
mov
lcall
je
lock
loopne
in
mov
mov
dec
rorl
dec
inc
or
repz
inc
insb
jl
sub
loopne
sti
xchg
jae
mov
jp
orl
lret
push
pop
mov
cmpsl
movsl
and
ss
inc
push
ret
jmp
pop
xlat
xor
xchg
push
fbld
shl
addr16
cs
in
popf
loopne
outsl
cs
in
out
movsl
fisubl
jge
out
lahf
xor
rol
jne
bound
inc
mov
subl
push
repnz
lahf
dec
xchg
mov
push
int
pop
dec
or
xchg
cltd
xor
adc
inc
pop
xor
nop
sahf
pop
scas
mov
popa
mov
aas
pop
lods
dec
xor
inc
lret
mov
dec
test
jne
or
inc
pop
enter
insb
mov
out
jo
scas
inc
popf
pushf
xor
mov
sub
arpl
or
mov
jns
out
mov
fs
mov
adc
ret
das
and
incl
lods
nop
push
pushf
stos
adc
jnp
mov
mov
roll
enter
ret
lock
sbb
add
rep
nop
test
fucomip
xchg
adc
xchg
scas
mov
cmc
inc
jo
test
inc
or
sub
dec
xor
les
push
push
ret
out
or
sbbl
aaa
ret
pop
out
es
mov
fwait
nop
js
xor
movsl
xchg
jge
cmpsl
in
test
out
insl
or
incl
dec
adc
mov
aaa
pop
and
sbb
pop
rcrb
mov
in
imul
das
imul
pop
inc
es
push
shl
filds
mov
shll
iret
adc
adc
inc
pop
xchg
jne
out
outsl
cmpsb
dec
or
cli
mov
dec
idivl
push
sub
mov
xchg
xor
jecxz
lods
cmpsl
outsl
cmpsl
sahf
and
sub
test
xchg
xor
stc
not
mov
jne
jns
imul
in
cltd
movsl
and
aad
lret
popf
and
mov
xor
add
into
stos
aam
lret
inc
jle
call
popf
insl
adc
xchg
add
out
xchg
pop
push
adc
pop
inc
pop
xchg
inc
jns
sahf
xchg
cmpsl
push
mov
lods
aas
inc
jg
pusha
adc
out
popa
cmpsb
or
sub
cmpsb
out
mov
nop
pop
jb
aas
les
add
repnz
call
mov
popf
loope
ret
hlt
xchg
sub
cmp
enter
stos
or
mov
mov
aad
ret
inc
cmp
push
nop
mov
sub
xchg
pop
nop
sbb
adc
int
push
push
ss
loop
mov
icebp
fisttps
xlat
pop
movsb
adc
orb
sahf
loop
push
outsl
popa
and
or
push
jg
mov
dec
cli
int
push
aad
sti
pop
inc
jecxz
add
pop
sub
cmc
add
inc
add
movsb
mov
int
mov
insb
ljmp
enter
out
sahf
pop
leave
xor
mov
adc
mov
jne
cmp
mov
pop
or
pop
push
cmp
dec
mov
es
pop
mov
xor
aaa
faddl
adc
xchg
mov
lods
sbb
shl
fcomip
or
loope
js
fucomp
mov
int3
mov
jl,pn
and
clc
xchg
adc
stos
mov
aad
add
out
fdivs
jne
pop
aaa
fstpt
adc
aaa
out
mov
je
add
jg
and
mov
inc
lret
lods
mov
lods
inc
jbe
in
insb
fwait
sub
push
xchg
xchg
mov
cmc
push
or
adc
cmp
pusha
ja
ja
aas
enter
je
xchg
push
jge
mov
pop
lds
out
inc
mov
outsb
mov
or
pusha
xor
fcmovb
xchg
dec
stos
push
mov
imul
push
and
pop
loope
cmp
adc
push
ljmp
sbb
ret
and
lods
add
sbb
lcall
movsl
fnstsw
fldenv
jl
bound
mov
fstpt
jmp
pop
ss
push
clc
and
push
testl
sarl
add
ljmp
fwait
sub
js
xor
sub
rcrl
arpl
je
push
jmp
dec
in
xchg
pop
fadd
lods
movsb
testb
icebp
sub
push
lahf
dec
loopne
adc
scas
pushf
cli
pop
lahf
sub
mov
push
inc
sub
add
in
pop
adc
cmp
pop
push
cmp
xchg
pop
js
push
ljmp
jmp
add
rol
aaa
lahf
pusha
or
pop
in
jge
scas
shlb
inc
aas
add
idivb
insb
hlt
stos
xor
xchg
add
adc
jne
pop
sahf
cli
clc
aas
outsl
mov
jg
jmp
cmpsl
fisttpll
pop
lret
sbb
xchg
mov
sbb
adc
or
in
mov
and
stos
dec
push
psadbw
push
es
pop
pop
das
fsubrl
jmp
fimuls
jge
ds
lds
test
cmp
cmp
mov
call
mov
dec
mov
test
stos
arpl
push
xchg
mov
sbb
sbb
addl
jmp
fsubrs
ss
test
outsl
clc
pop
je
dec
icebp
pusha
dec
movsb
pop
jns
or
test
xor
cmp
push
pop
mov
decl
out
xor
pop
pop
rcrl
inc
je
cmpsl
push
xchg
enter
dec
shl
das
add
imul
dec
inc
sub
jmp
jge
pop
pop
movsb
mov
test
mov
mov
into
sub
push
les
mov
mov
xor
dec
xchg
xchg
xchg
add
stc
push
dec
lds
xchg
inc
scas
or
or
add
in
jecxz
xor
pop
push
mov
nop
inc
sbb
lret
bound
out
es
or
lahf
insl
mov
adc
popa
ficomps
fcmovbe
or
mov
bound
xchg
xchg
jnp
sbb
xchg
int3
jbe
lods
pop
and
nop
push
or
cmovp
sbb
sub
xor
cld
mov
lret
test
into
enter
jae
je
pop
add
mov
mov
dec
call
push
sub
jecxz
jns
jle
stos
cmpl
movsl
popl
repz
add
push
out
int
pop
push
fmull
insb
outsb
xor
xchg
jle
lcall
dec
out
aaa
pusha
mov
add
xchg
inc
add
jbe
sub
les
popa
dec
sub
mov
lret
mov
mov
push
stos
pusha
aas
gs
in
pop
mov
mov
add
cmc
inc
test
jecxz
xlat
jno
pop
test
adc
fnop
clc
mov
cmpsb
test
int
ds
pop
xchg
test
in
push
or
sbb
notl
push
fimuls
shrb
jns
cmovnp
inc
dec
inc
and
and
or
stos
inc
xchg
mov
scas
sarl
xor
inc
hlt
add
xlat
cmp
push
fcomps
enter
xor
push
inc
fnstenv
test
xchg
mov
flds
ficomps
cmpb
and
mov
xchg
inc
xor
pop
and
inc
pusha
dec
lds
or
movsb
daa
sbb
inc
xorb
jbe
jae
mov
cli
cmp
jb
pop
push
sub
fwait
push
cmp
mov
adc
jge
lcall
les
fcompl
les
adc
stos
xchg
in
xchg
adc
stos
sbb
cs
mov
xor
fildll
std
pop
mov
push
xchg
xchg
pop
lods
imul
mov
int
xchg
bsf
pusha
sub
adc
pop
adc
and
shl
cmp
jne
lea
stos
outsb
ret
fwait
inc
loopne
daa
ret
lods
sbb
add
jmp
mov
das
pusha
fcmovbe
sbb
pop
stc
add
jne
stc
filds
fs
cli
call
imul
clc
mov
leave
sbbl
cli
sub
hlt
xor
inc
xchg
jno
std
stos
rorl
pop
adc
push
pop
inc
add
and
popf
test
and
sbb
loop
adc
add
mov
dec
sbb
loop
xor
es
sti
rorl
mov
mov
rcll
mov
fdivl
les
aam
outsl
out
jle
mov
push
mov
push
xchg
adc
jae
in
fst
stc
loopne
es
or
stos
pop
xor
frstor
arpl
jae
dec
repz
ret
xchg
pop
gs
jne
aas
pop
sbbl
pop
push
push
repz
cmc
test
daa
mov
jp
xor
push
les
and
stc
lods
and
int
shll
inc
pop
les
xor
jb
js
push
out
add
sbb
sbb
pop
jecxz
movsl
pop
xchg
ja
xchg
div
out
mov
sbb
loopne
in
sbb
rcll
push
out
dec
inc
ja
gs
jmp
mov
pop
std
in
jecxz
pusha
or
hlt
popa
push
add
shlb
add
push
das
xchg
and
dec
aaa
dec
xchg
insl
mov
sbbb
and
push
add
cmpl
adcb
xchg
sbb
cld
cmp
inc
fs
pop
stos
sbb
data16
jne
loop
push
in
xchg
out
hlt
fsubp
bound
xorb
or
mov
mov
add
cltd
enter
mov
jne
sbb
pop
xchg
cmp
add
fisubl
sbb
insb
adc
pop
jne
popa
adcl
in
mov
push
fdivrl
fdiv
fisubs
inc
jg
pop
mov
adc
jno
fbld
mov
imul
stc
sub
and
sbb
mov
cmc
xchg
pushf
cmp
sbb
add
dec
pop
lcall
mov
and
inc
or
popa
cmc
pop
scas
inc
das
testb
fwait
pusha
inc
sub
cmp
xchg
icebp
xchg
mov
mov
jge
jno
add
mov
enter
or
mov
pop
inc
shlb
cmc
cmpl
aas
xchg
mov
loopne
xchg
rcll
sub
ss
cmpsl
out
inc
scas
lcall
sbb
push
sbb
add
dec
jl
cmp
sbb
xchg
xchg
fsubrs
js
cmc
ja
lret
dec
and
push
testb
or
ds
test
xor
mov
lahf
enter
insl
inc
mov
mov
popa
es
repz
aam
or
jg
pop
insb
imul
fistps
test
dec
out
lcall
popf
inc
sbb
xchg
sub
dec
mov
cs
xchg
push
lahf
test
stos
xchg
xchg
sahf
cmpsb
mov
push
cmp
sub
int3
ljmp
lret
mov
jbe
mov
dec
inc
ja
add
ds
leavew
xchg
xor
mov
out
out
fcomp
lahf
iret
mov
dec
imul
xchg
repnz
push
or
sub
pmulhuw
mov
push
and
add
test
imul
dec
rcrb
sub
dec
cmpsb
mov
fcoml
jo
add
fs
shrl
mov
bound
mov
cmpsb
mov
lahf
jns
repz
sbb
lahf
adc
push
add
daa
test
mov
int
out
mov
lret
push
mov
mov
xchg
out
test
sub
jne
sbb
fsubp
xchg
add
lret
push
fidivrs
mov
fbld
push
shrb
addr16
pop
push
fiaddl
mov
mov
or
lret
movb
stos
jg
out
mov
xchg
testb
test
push
loop
clc
xor
adc
fwait
inc
int
cwtl
aam
and
shll
sbb
mov
add
sub
and
sbb
xchg
scas
lods
int3
jmp
and
or
ljmp
cmpsl
notb
fdivs
js
lcall
jmp
subb
push
dec
cmpsb
xlat
mov
pop
test
add
mov
sbb
xchg
ret
jg
inc
push
fdivrl
popa
pop
jbe
rorb
movsb
mov
iret
or
dec
pop
paddusw
in
cmc
ret
pop
cmp
cmc
fwait
adc
push
cmc
sarl
incb
pusha
jb
inc
mov
dec
popa
rcr
pushf
sub
mov
gs
outsl
loope
inc
sub
sub
mov
lods
stos
aad
inc
xor
inc
cmpl
movsl
clc
rorb
std
mov
jnp
mov
pop
sbb
ret
jnp
push
stos
jmp
dec
or
xlat
daa
mov
cmp
jne
fwait
pop
ss
test
push
push
test
repz
mov
adc
gs
add
shr
stos
mov
push
inc
inc
icebp
fidivl
cld
stos
test
and
mov
add
aam
pop
ljmp
dec
pop
cmpsb
adc
idivb
fnsave
add
je
xor
cld
sbb
mov
out
xor
dec
and
jge
pusha
push
adc
call
adc
jae
cmc
mov
cmp
add
bswap
dec
stos
jns
add
xor
dec
aaa
movl
or
out
pop
xor
int
push
xchg
jno
jne
mov
aam
shr
xor
call
sub
xchg
jmp
pop
pusha
inc
call
jb
icebp
sub
sub
mov
adc
xor
push
jne
inc
sahf
pop
push
jb
mov
or
dec
pop
ret
push
and
inc
inc
lea
or
sbb
add
lock
rcl
and
pop
mov
mov
in
jnp
loope
shrl
and
test
fwait
inc
sti
jbe
cli
fs
bound
aas
cmp
subl
arpl
jg
mov
pop
es
int3
fs
clc
hlt
sub
adc
push
fwait
and
hlt
std
clc
inc
mov
dec
lods
rorb
sahf
mov
sti
je
xchg
jge
rcll
sbb
jae
mov
pop
pop
sub
dec
leave
xorl
jbe
mov
test
mov
inc
jp
jl
out
or
push
push
in
call
lret
jne
fwait
test
adc
ljmp
xor
mov
je
enter
cs
or
pop
xchg
das
sahf
ljmp
dec
adc
jp
mov
cltd
mov
jg
rcll
mov
cmp
stos
sub
add
mov
lret
icebp
lret
mov
enter
testb
mov
rcrb
adc
pusha
and
je
push
hlt
orb
push
jae
incl
lods
decb
ret
scas
xlat
outsb
push
jge
cli
and
lcall
sbb
daa
loope
pop
clc
adc
fs
or
aad
and
and
out
loop
enter
and
inc
lret
mov
outsb
sbb
jnp
or
mov
or
pop
cwtl
jo
inc
push
cmp
adc
cltd
push
cmp
push
push
fwait
imul
dec
js
mov
inc
sahf
je
daa
sub
push
call
inc
xchg
xor
pusha
or
cmp
div
pop
push
add
imul
nop
addr16
sub
in
pushf
out
in
movsb
xlat
cs
divl
adc
hlt
int
inc
mov
cld
rolb
or
jmp
mov
cltd
icebp
mov
popa
jne
dec
mov
lea
sti
scas
add
push
mov
into
pop
push
arpl
ja
sub
sbb
inc
bound
xchg
dec
dec
out
sbb
dec
xchg
ljmp
es
cmc
inc
cmp
add
stos
and
xor
xchg
xchg
jbe
cmp
pop
push
ret
add
xchg
loope
jo
ss
dec
inc
jae
mov
iret
ljmp
cwtl
cld
xorl
pop
or
sar
inc
lcall
inc
cmpsl
fldcw
loopne
shl
xor
pushl
jp
mov
mov
insb
int3
mov
jne
loopne
or
add
xor
outsl
lds
dec
insb
or
fisttpl
adc
push
scas
jmp
inc
pushf
push
out
pop
call
push
pop
lds
int3
test
out
cmp
ja
add
cmc
movb
mov
loop
mov
jae
insl
adc
and
enter
jnp
aaa
jmp
mov
sub
aas
mov
or
and
jno
sub
xor
cltd
xchg
cs
inc
dec
mov
inc
repz
adc
pop
sarb
ds
push
das
mov
xchg
add
in
cmp
mov
jns
mov
sub
aad
fistpl
mov
movb
xchg
mov
hlt
push
jo
xchg
sarl
jnp
imull
out
mov
cld
dec
movsl
mov
adc
cmpsl
mov
mov
dec
xchg
jle
cmp
push
and
push
or
sbb
mov
adc
xor
add
test
xchg
stos
cmp
aaa
mov
sahf
sbb
xchg
test
std
pusha
or
ffreep
call
mov
or
mov
fnstenv
mov
mov
in
leave
outsb
outsb
mov
data16
push
std
lahf
xchg
test
or
or
pop
mov
xchg
sub
dec
inc
pop
sub
scas
push
mov
shr
in
popa
mov
int3
pop
je
sbb
dec
rorl
insl
test
adc
popf
mov
daa
loop
ja
jmp
ret
jbe
inc
inc
add
jp
cmp
clc
out
xor
cltd
and
adc
mov
fwait
pop
out
dec
mov
mov
lods
int
divb
mov
mov
mov
lods
push
in
sbb
into
jae
add
sub
enter
je
mov
mov
add
xchg
xchg
loopne
lods
std
divb
mov
jnp
or
insb
adc
pop
hlt
shll
inc
adc
mov
xchg
xorl
sub
in
sub
ret
sarb
loope
add
les
pop
cli
inc
pop
mov
dec
shr
cmp
jns
inc
jnp
mov
mov
lahf
movsb
dec
testl
ss
nop
das
out
sbb
lods
leave
ds
xor
ret
or
popf
std
arpl
fidivrs
fs
fsts
inc
cmc
int3
call
adc
adc
sub
cmp
cmp
stos
adc
insl
data16
aaa
outsb
xor
push
jae
or
add
jbe
outsl
bound
cld
mov
mov
lret
shll
fdivl
icebp
pop
push
mov
mov
sbb
inc
sbb
xor
pop
mov
fadd
xor
mov
ja
or
sbb
out
out
and
inc
xor
sbb
lods
fmull
sub
imul
cmp
arpl
sub
mov
shlb
adc
xchg
pop
sub
jle
repz
xlat
das
push
scas
push
lret
adc
cmpsb
jp
mov
fwait
lret
stc
xchg
add
scas
lret
dec
ret
es
and
lcall
push
stos
sub
inc
sbb
pusha
aad
call
add
divl
js
dec
mov
testb
sbb
push
das
out
lahf
popf
ja
in
xor
out
jae
fimull
xchg
jno
addr16
inc
imul
add
sbb
enter
js
fdivs
jg
jl
cmp
scas
pop
mov
fnsave
fcmovu
xor
xchg
pushf
stc
fbstp
idiv
mov
lcall
addr16
ja
push
pusha
jle
adc
mov
adc
mov
mov
and
or
shll
insb
or
test
and
rcrb
dec
data16
cmp
sub
mov
or
pusha
mov
cmpsl
int
popa
stc
stos
mov
sbb
mov
fiadds
add
enter
test
sub
cli
sub
jnp
je
orl
das
jmp
subb
push
sub
cmc
out
popf
xlat
arpl
add
ja
in
cwtl
into
mov
repnz
inc
dec
pop
adc
inc
jne
push
popl
cwtl
jmp
cmpsl
fmul
jo
jmp
fsubl
adc
dec
jb
pop
or
pushf
and
lret
clc
js
imull
jl
int
out
lods
jecxz
add
xor
push
shlb
xchg
aas
cmp
sub
mov
adcb
scas
daa
xchg
movsb
jle
cmp
std
xchg
lret
les
or
data16
push
test
fs
push
icebp
das
pop
je
xchg
adc
xor
imul
pop
xchg
cmp
test
fisttps
mov
mov
xchg
dec
mov
movsb
and
jbe
mov
mov
push
loopne
lds
imul
dec
das
fiaddl
mov
daa
incl
inc
js
lods
inc
and
enter
jl
mov
movsb
jmp
test
repnz
fiaddl
sbb
jp
push
add
in
popf
push
mov
bnd
xchg
mov
cmp
dec
xchg
xor
pop
icebp
xor
push
pop
mov
mov
mov
pop
xchg
and
mov
insl
in
sub
cmc
std
int
xchg
mov
loope
pop
pushf
js
mov
dec
mov
sbbb
add
clc
in
gs
add
aam
sbb
sub
cli
clc
mov
movsl
add
cmp
mov
fcomip
xor
pop
add
unpcklps
aaa
jno
jbe
outsl
push
mov
push
jmp
xchg
push
shll
bound
mov
data16
push
ror
sub
repnz
in
shll
test
cli
add
lcall
popf
dec
out
repz
les
fistps
xchg
push
std
mov
push
mov
cs
andl
loope
xchg
into
cs
adc
ljmp
orb
or
es
dec
mov
mov
adc
pcmpgtb
push
and
popa
aad
pop
aam
mov
in
in
mov
out
or
xchg
loopne
mov
jae
dec
push
stc
and
imul
inc
push
loope
or
pop
mov
mov
movsb
int3
fwait
dec
cs
dec
addr16
adc
mov
ja
subl
fsubs
in
inc
jo
cmp
fiadds
nop
mov
subb
adc
mov
mov
sti
adc
ja
pop
pusha
outsl
lcall
pop
mov
mov
lock
int3
fdiv
push
mov
inc
cmp
sub
js
popa
cmp
aad
fs
cmpsl
push
addr16
shlb
fadds
inc
sub
xor
test
data16
into
or
cmp
mov
jbe,pt
or
jbe
cld
pop
bnd
add
cmp
int
loope
mov
fstps
xor
lods
push
cmp
sti
fdivs
aas
test
or
push
sarl
fcom
lock
outsl
sbb
js
int
jecxz
cmc
inc
sti
out
push
xor
sti
pop
rorb
adc
xorl
adc
jnp
cmp
orb
in
popa
loope
jo
cli
add
push
inc
mov
inc
add
push
addr16
popa
mov
dec
rolb
ja
mov
rcrb
ret
gs
inc
jg
pop
push
add
pop
loopne
pop
imul
adc
rorl
in
ret
fsub
sti
sub
out
pusha
in
inc
cltd
mov
xor
ds
cmc
pop
xor
sub
loop
icebp
ficomps
or
addl
jae
popf
lods
and
pushf
lds
pushf
lahf
hlt
mov
rcr
int
incl
lods
adc
inc
or
fisttpll
aam
std
fdivrl
adc
dec
or
hlt
ljmp
shrb
out
inc
stc
stos
cltd
mov
push
push
pop
xor
or
cmp
mov
cli
pop
push
imull
test
sahf
repz
sub
mov
nop
and
testl
jl
or
and
push
mov
adc
nop
jge
test
mov
jns
mov
lods
jmp
jbe
dec
imul
push
shlb
push
push
sbb
sbb
dec
xor
add
repz
cs
sbb
cmp
cli
and
adc
test
add
out
xchg
mov
pop
lds
mov
xor
and
adc
push
xchg
push
sbb
jl
pop
pop
sbb
sub
mov
scas
inc
sbb
mov
or
jg
push
or
out
mov
push
ds
sbb
rolb
hlt
cmp
push
in
sbb
repz
dec
or
movsl
jecxz
xor
xor
cs
gs
repnz
push
test
orb
es
sub
gs
sub
add
andl
ficoml
xor
xchg
je
push
jecxz
fisubrl
sbb
add
lods
jno
jl
fbstp
pop
mov
sbb
pop
sub
pop
out
add
adc
out
pop
jg
or
repz
mov
jg
sti
jne
adc
push
mov
into
xor
and
loope
mov
sub
mov
das
jno
push
mov
mov
lock
repz
idivb
das
mov
and
mov
jl
test
aas
mov
in
ficoml
xlat
cmp
repz
push
fninit
xor
cmp
imul
xor
jle
jg
xchg
data16
jl
sbb
jno
ficompl
xchg
fldz
std
je
aas
icebp
push
and
adc
push
jg
mov
or
jg
xor
cmp
mov
xchg
push
repnz
mov
xor
and
push
imul
mov
jmp
test
push
mov
in
dec
or
add
arpl
loope
pop
or
shrl
loop
lret
shlb
or
lds
repz
lock
cli
sbb
lret
mov
cmp
das
in
sbb
movsb
mov
frstor
cmp
inc
outsb
add
mov
pop
outsl
imul
pusha
xlat
or
gs
shr
adc
or
inc
push
int3
cmp
jns
xchg
insb
lret
push
cwtl
push
gs
adc
fwait
xchg
cmpsb
mov
lahf
xor
pop
fmul
pushf
pop
sub
xor
int
push
movsb
test
add
arpl
dec
fldcw
enter
enter
dec
lret
ret
mov
or
bound
fwait
sarl
into
lea
push
jp
scas
pop
test
or
jb
sahf
sti
and
jbe
and
fldcw
dec
in
test
inc
xchg
aaa
sub
sarb
stc
mov
dec
loopne
lret
mov
and
mov
xchg
adc
dec
lret
xor
or
pop
pusha
in
hlt
daa
xlat
fwait
cli
aam
or
cmp
mov
or
cmp
mov
jno
loope
fiaddl
push
shlb
lcall
mov
test
mov
enter
xlat
mov
and
lds
or
mov
sub
and
jge
xchg
stc
mov
mov
shlb
adc
pop
stos
or
xchg
pop
sar
pop
or
sbb
pushf
mov
or
xchg
push
xchg
fnstcw
push
sbb
mov
loop
addr16
int
fisttpl
adc
xor
cmp
sub
xchg
mov
out
in
and
add
pop
cmp
lret
test
mov
shr
xchg
call
dec
xorb
cwtl
jmp
jmp
repnz
inc
in
dec
shrl
imul
xor
cld
loop
insl
dec
in
dec
xor
xchg
inc
and
mov
nop
mov
fidivrs
xchg
mov
inc
lods
loop
mov
push
mov
shll
xchg
jnp
add
lret
fs
repz
gs
sbb
cltd
xor
lret
loop
or
bound
mov
xor
inc
or
xchg
push
push
xchg
mov
pop
insl
aad
stos
dec
mov
jnp
aam
les
adc
pop
out
push
dec
mov
adc
dec
inc
jne
leave
in
aad
xor
int3
pop
int
mov
mov
jno
push
sbb
sub
push
fnstcw
ljmp
imul
dec
pop
xchg
test
push
sbb
xor
xchg
cltd
das
push
xchg
insb
jmp
insb
dec
dec
cs
loop
into
fmull
adc
push
arpl
sub
xchg
xchg
dec
or
and
stc
xchg
push
add
outsb
add
shr
jne
dec
cmpsb
push
push
mov
jecxz
fiaddl
cmpl
cmc
int
movaps
fs
daa
pop
test
ljmp
sub
cwtl
adc
jo
push
sub
pop
clc
add
out
xchg
inc
xor
ret
sub
pop
fildll
cmp
clc
scas
mov
fwait
call
inc
mov
xor
jae
out
int
ds
cmp
jmp
mov
xchg
add
or
cli
or
adc
loop
and
xlat
daa
enter
mov
mov
push
ja
dec
sub
xchg
push
mov
fst
sub
push
shll
mov
in
cmpsl
sbb
inc
xchg
mov
inc
sahf
inc
fs
movsb
jl
add
or
je
push
mov
xorb
cmpl
and
sbb
loope
stos
jne
jne
or
imul
pop
xchg
mov
mov
jns
sub
push
push
std
push
enter
pop
jl
adc
icebp
insl
pop
mov
mov
xchg
adc
pop
daa
call
xlat
movsb
sahf
xlat
ret
adc
in
inc
scas
inc
adcl
add
lds
jno
insl
mov
daa
and
dec
and
loop
std
frstor
pop
insb
loop
int
test
cmc
in
dec
imul
sub
jae
xchg
and
cmp
loop
inc
cli
clc
cmp
enter
xor
insb
pop
mov
test
push
push
xchg
adc
out
sub
add
sub
push
popf
lods
inc
adc
jno
fdiv
xchg
xor
cmp
cmpsl
jno
scas
stc
test
dec
dec
lcall
ficoms
or
inc
sub
rcrb
leave
orb
xchg
cmp
dec
cs
push
ror
cld
rorb
inc
data16
push
and
sahf
repnz
push
or
push
push
sbb
sub
pop
dec
mov
add
jae
fcoms
lods
mov
mov
dec
and
shll
stos
add
push
jmp
sub
jge
roll
sub
mov
cli
adc
popl
jmp
movsl
test
adcl
ret
call
fcomi
sub
jbe
mov
ja
sub
icebp
adc
loop
cs
test
aam
dec
inc
mov
in
lods
adc
stos
push
fldl
sub
mov
ljmp
mov
mov
cwtl
icebp
bound
es
dec
sub
sbb
in
xor
jp
mov
mov
aaa
add
ja
test
inc
ljmp
and
cmp
inc
xor
repnz
adc
inc
and
test
in
or
das
stos
mov
sbb
les
imul
test
scas
ja
add
inc
ss
sti
mov
mov
rorl
or
sbb
cmp
dec
or
xor
mov
adc
mov
sub
add
pushw
lds
add
adc
cmp
push
add
mov
pop
cmp
test
repnz
xchg
addr16
mov
add
jae
int
stos
fsubp
jo
mov
xchg
aad
enter
adc
dec
push
icebp
lods
call
mov
repnz
dec
cmpsb
sub
ds
call
aas
stc
jle
test
inc
mov
fistps
push
lcall
cwtl
loop
sbb
stos
xchg
cmp
int
jae
jnp
xor
movsl
mov
cwtl
aas
stc
or
filds
incl
xorb
sbb
cmp
inc
cltd
sti
enter
test
xchg
cmpsl
jne
xchg
lods
cmp
and
sbb
push
cmp
insb
cmc
push
jnp
test
in
lret
cmpsb
mov
jno
dec
xor
jle
mov
test
xor
sahf
xlat
divb
pop
sub
pop
mov
dec
mov
pop
scas
mov
xchg
adc
jo
ret
push
mov
adc
shll
cltd
clc
ret
cwtl
repz
jp
pop
inc
cmpsl
scas
cmp
hlt
dec
jl
push
rorb
or
enter
xchg
pop
and
lahf
lcallw
insb
pushf
dec
rcrl
mov
andl
xchg
aaa
mov
in
mov
cmc
cwtl
or
pop
xor
lock
inc
adc
fisttpll
adc
sub
lcall
das
fs
fisubrs
rcrl
fcomip
je
xchg
mov
das
dec
mov
ret
mov
rol
fwait
push
call
push
sbb
scas
lea
int3
jnp
int
cmp
or
jecxz
enter
js
mov
jne
lahf
fs
inc
movsl
mov
xchg
cli
data16
hlt
leave
mov
mulb
jno
arpl
ret
jno
jbe
lret
jl
xchg
loopne
push
pushf
test
mov
fidivrs
push
pop
push
mov
push
inc
xor
in
aam
xabort
jmp
mov
mov
cmc
dec
push
or
into
fs
or
movsb
ffree
add
pop
in
push
pop
jle
scas
roll
icebp
data16
lock
sub
pop
test
push
daa
data16
jb
push
aas
pop
scas
push
mov
and
test
jmp
mov
push
cmpsb
mov
out
push
or
sahf
add
mov
test
or
inc
out
repz
push
pop
roll
dec
xor
cmp
sbb
lods
add
out
mov
pop
xor
inc
js
stos
mov
das
test
sbb
pop
sahf
mov
xchg
inc
jg
mov
fdivrs
lcall
inc
mov
push
push
lret
and
int3
sti
sbb
std
mov
fisttps
test
cld
or
cmp
shlb
jo
lcall
enter
mov
adc
sub
jb
and
mov
lcall
cwtl
adc
aas
test
cwtl
xchg
mov
movsl
iret
add
cld
and
xchg
sahf
or
std
das
outsl
bound
imul
add
adc
mov
adc
cld
fistl
ss
mov
inc
fwait
inc
sahf
add
adc
test
cmp
mov
adc
fimuls
jo
and
in
movhlps
mov
mov
adc
aas
movsb
dec
aam
mov
cmp
add
arpl
or
jae
and
vshufpd
ds
aas
push
or
lock
repz
lret
push
repz
inc
adc
mov
adc
ficompl
stc
pop
inc
mov
das
lds
fsubrs
xor
xchg
mov
cmpsb
les
shl
aad
imul
lea
in
xchg
xchg
mov
mov
movsl
inc
addr16
lret
adc
aaa
sbb
xchg
aaa
in
mov
cmp
xor
popf
inc
xlat
lods
adc
lahf
cmpsl
bound
mov
xchg
jns
stos
mov
sbb
cs
sbb
mov
cwtl
add
test
sahf
and
push
pop
lds
daa
xchg
fistps
test
cmp
inc
sbb
jge
and
cmpsl
mov
mov
ja
xchg
or
xchg
jb
in
loop
adcl
mov
and
mov
sbb
into
dec
cwtl
jecxz
mov
inc
fcoml
adc
push
aas
dec
shl
cmpsb
fstl
bound
or
xchg
dec
jns
jbe
into
rorb
sbb
pop
add
in
xor
and
cmp
fildll
push
imull
mov
lcall
or
ja
xchg
mov
adc
or
dec
sub
cmc
ljmp
pop
arpl
dec
jno
hlt
aaa
jo
add
shl
sub
int
cli
addb
es
mov
sub
sub
ljmp
mov
sbb
ret
mov
adc
out
std
sbb
sti
fwait
mov
jle
cmpsb
aam
sbb
jnp
push
or
mov
test
into
cmc
push
sub
in
jmp
jnp
gs
mov
xor
or
sub
stc
stos
and
cmpsl
in
mov
pmuludq
dec
movsb
jge
sbb
inc
and
insb
and
insw
movsb
cmp
push
pop
int3
mov
add
fwait
push
lds
hlt
cmc
mov
out
cmp
xchg
mov
xorb
jge
mov
popf
ljmp
add
jns
iret
jp
sbb
jge
xchg
mov
mov
xor
cmp
lds
push
mov
enter
addr16
out
test
movb
sahf
sub
mov
pop
xchg
xlat
mov
gs
pusha
pop
fiadds
das
pop
adc
daa
xchg
push
push
cld
xor
sti
sub
in
shl
pop
fidivs
aaa
cmp
shrl
add
add
fists
dec
and
sbb
or
insl
mov
fnstenv
hlt
or
popf
inc
or
push
push
cld
stos
xchg
adc
pop
pop
int3
je
dec
jecxz
xchg
movsb
mov
jae
mov
mov
sysret
jns
pop
mov
lods
stos
cmpb
das
fidivrl
les
rcrl
and
shr
test
mov
push
xor
hlt
xor
mov
lds
lret
idivb
scas
push
dec
or
or
test
imul
pop
dec
adc
dec
ljmp
or
pop
and
xchg
seta
xchg
idivl
adc
mov
popa
sahf
addr16
rcr
mov
xchg
cli
mov
mov
ljmp
lds
cmp
scas
sub
cmp
or
jae
int
jae
icebp
daa
aaa
scas
into
or
mov
shl
jnp
jns
inc
std
stos
cli
jae
hlt
pop
aaa
ficomps
mov
aaa
push
cmp
dec
mov
call
and
aaa
dec
push
in
push
jp
insb
pop
btc
notl
test
push
add
mov
fisttpll
lahf
lock
xchg
xchg
cmpsl
pop
scas
jl
loope
out
sub
mov
mov
repz
cmc
jmp
scas
pop
testb
cwtl
push
adc
es
es
sbb
jmp
xchg
sub
rcll
xor
sahf
lcall
mov
add
push
cwtl
mov
add
mov
in
test
push
lcall
lcall
inc
mov
lret
xchg
push
sub
xchg
dec
mov
sub
push
ljmp
xchg
pop
mov
cwtl
mov
dec
mov
daa
jg
inc
in
fcmovu
imul
stos
ss
adc
inc
jbe
pop
pop
mov
dec
cmpb
cmpsl
sbb
sbb
mov
xor
pop
sbb
frndint
pop
push
mov
sbb
inc
add
stos
and
popf
imul
lea
sbb
mov
mov
int3
mov
mov
dec
cwtl
mov
stos
xchg
pop
paddsw
adc
inc
mov
insb
out
sub
or
das
enter
outsl
mov
push
ret
dec
test
or
dec
pop
stos
sahf
jg
fistpl
dec
mov
mov
jmp
or
in
inc
jno
xor
mov
inc
sub
xchg
test
int3
mov
push
mov
dec
aad
insb
sbb
cmp
or
xchg
frstpm(287
cwtl
mov
aad
sbb
iret
inc
loopne
mov
cmpsl
mov
pop
add
xchg
pop
shll
dec
adc
cmc
dec
mov
push
ret
jle
insb
mov
pop
pusha
jle
ja
loop
xor
lods
adc
outsb
cmpsb
nop
imul
scas
dec
inc
push
cmc
xorb
pop
imul
xchg
mov
inc
inc
repz
mov
int3
mov
das
sarb
xchg
xchg
inc
mov
and
inc
xchg
xlat
sbb
insl
mov
addl
js
and
pop
inc
shll
fbld
bound
sub
je
cwtl
jne
push
scas
or
shrl
ljmp
mov
cmp
pop
das
adc
mov
cli
in
loop
out
shll
roll
mov
cmp
mov
fsubs
adc
incl
pop
pop
sti
mov
sti
xchg
jae
xor
rclb
cmp
bound
dec
fistpl
pop
shrb
mov
lock
mov
les
out
mov
jne
sub
movsl
leave
xchg
xchg
loopne
cli
mov
je
mov
mov
sbb
sbb
mov
sub
push
dec
es
push
jbe
and
push
push
cmp
mov
or
mov
pop
aas
shll
mov
out
push
push
push
xchg
int
push
test
movsl
pop
mov
add
test
mov
mov
sbb
cmpsb
psrad
jno
xchg
popa
jle
dec
and
mov
sti
add
add
jne
outsl
call
pop
or
popa
adc
xor
idivb
add
push
stos
xchg
ret
add
adc
jecxz
jne
int
int3
out
push
insb
jbe
pop
lret
jge
sti
pop
xor
outsl
mov
sahf
adc
lds
gs
push
or
xchg
mov
shlb
jne
ds
repz
jns
adc
or
int
dec
mov
cmp
fcomps
call
dec
sbb
sub
mov
dec
or
xchg
stc
cmp
mov
mov
sub
call
cmc
mov
inc
stc
shlb
dec
dec
xchg
scas
adc
in
or
imul
mov
mov
mov
mov
cmpsb
jno
cli
add
insb
cwtl
lahf
dec
addb
out
stc
aam
cld
inc
mov
pop
or
inc
test
js
pop
test
adc
or
pop
cmp
aad
xor
sbbb
mov
fidivs
testb
int3
and
pop
lea
mov
cmpsb
lahf
adc
mov
pusha
fsubr
dec
aam
mov
jmp
ss
xchg
inc
scas
les
mov
push
jnp
movsl
lods
mov
cli
xchg
and
shlb
xlat
jp
jmp
daa
xor
jb
mov
inc
loope
fadds
jbe
cmp
mov
pop
push
and
repz
mov
xchg
jne
and
fimuls
lcall
adc
xor
sti
adc
mov
or
or
js
ret
cmp
testl
ljmp
mov
pop
mov
adc
inc
xlat
fwait
dec
xchg
call
shrl
push
xor
jns
push
shll
mov
add
stos
add
dec
xchg
andb
lea
mov
and
push
std
rcr
inc
sbb
and
xchg
xchg
xor
mov
cmpsl
jb
inc
inc
sub
xchg
mov
fstpt
repnz
jp
and
movsb
pop
adc
dec
add
ljmp
shll
andl
mov
dec
add
scas
mov
mov
and
xchg
movsb
cmc
inc
rcrl
sub
or
lods
inc
mov
xor
scas
xchg
sub
jb
sub
jns
movsl
outsl
cmp
mov
test
and
lahf
jno
mov
mov
cmp
adc
add
push
inc
mulb
call
dec
inc
xchg
movsl
data16
xchg
pop
or
popf
enter
scas
call
sti
push
daa
loopne
sbb
sub
xor
pop
aad
stc
pop
xchg
test
fwait
push
les
sar
inc
jg
xchg
jae
jg
sbb
stos
dec
iret
jle
out
fucomi
push
cmc
sub
and
add
fwait
dec
xchg
clc
fimull
scas
push
imul
inc
fidivs
xchg
in
push
jb
push
pop
mov
push
cmp
or
dec
pushf
fadd
lahf
shl
inc
mov
ret
xchg
fwait
aad
mov
addr16
ret
popf
mov
ss
out
push
popa
pop
inc
std
inc
add
loopne
adc
jmp
ffree
or
sbb
icebp
and
dec
or
lret
test
sbb
mov
pop
aam
or
and
insw
dec
fsubl
push
cmp
adc
loopne
push
movl
pop
dec
fmuls
or
sub
sbb
sbb
jle
ds
imul
outsb
xorl
js
push
push
fstps
in
imul
aaa
inc
int
jno
add
roll
test
dec
ret
lock
ficomps
jno
mov
cmp
add
cmp
xchg
or
inc
pop
adc
adc
cmp
test
sarb
xchg
push
push
es
and
pop
in
mov
ret
mov
ret
les
mov
arpl
es
adc
repz
insl
test
sbb
inc
adc
and
mov
jle
add
repnz
push
lock
mov
sbb
repnz
cld
cmc
cmp
in
sbb
xchg
popf
pop
hlt
insl
dec
and
cmp
sub
pop
push
call
sahf
mov
ja
fbstp
iret
fisubrl
in
sub
mov
mov
in
rol
sub
push
push
andl
scas
or
adc
dec
jbe
stos
lahf
in
hlt
les
movsl
add
scas
cs
cmp
das
xor
or
cmp
shrl
push
push
movsl
mov
jg
sbb
xchg
mov
sub
cmp
std
mov
xchg
adc
push
cmp
push
fnsave
jge
mov
mov
or
loopne
outsb
fistps
lds
pop
push
adc
neg
jns
push
aam
test
fstpl
test
je
xor
add
push
popf
es
stos
ds
push
jns
xchg
pushf
cs
popl
fistpl
sbb
xor
mov
lds
outsl
in
aas
add
pop
out
sbb
add
jl
imul
add
or
ficomps
addb
ffreep
dec
and
sbb
movsb
hlt
mov
xchg
inc
add
dec
cs
pop
test
es
jbe
imull
ficomps
pop
es
lret
mov
fadds
cmp
pusha
dec
aam
sbb
push
mulb
cmpsb
sbbl
dec
arpl
mov
gs
inc
add
adcl
fisubrl
jge
rorb
rolb
inc
out
out
andl
repz
out
jno
xchg
gs
jecxz
hlt
aas
stc
inc
pop
das
rcr
nop
mov
clc
sub
clc
xor
pushf
cltd
xor
jns
fs
movsl
xchg
and
js
mov
cmpsl
or
mov
out
les
xlat
ror
sahf
aaa
inc
xor
jnp
cmc
dec
icebp
in
jmp
dec
cmpsl
jg
sub
fsubs
ss
push
jae
mov
arpl
std
xchg
inc
test
jnp
stc
sub
xchg
push
scas
sub
pop
cwtl
push
jge
push
xor
dec
stos
xchg
dec
jp
mov
dec
js
out
lret
fstl
xor
arpl
jns
xchg
dec
adc
xor
out
adc
push
or
pop
insl
jo
xchg
aam
mov
or
fdivs
into
sbb
jnp
fxch
pop
cwtl
inc
cmpsl
mov
jae
mov
jnp
inc
push
mov
ljmp
cmpl
insb
out
ljmp
push
roll
lret
push
mov
out
cmpsb
daa
jnp
sbb
out
movsb
daa
in
inc
jle
jmp
dec
mov
scas
xlat
mov
sbb
dec
addr16
incb
adc
lods
or
ljmp
outsl
and
sub
add
or
pop
ficoms
add
mov
mov
iret
pop
push
add
out
dec
mov
dec
insl
or
adc
cmp
sub
sbbl
cmpsb
popa
inc
mov
sbb
jne
or
mov
test
pop
imul
mov
lods
xlat
ret
inc
push
jl
divb
mov
pop
movl
or
add
jg
jns
cli
adc
cmp
icebp
les
mov
rcll
pop
lahf
cmpsb
int
and
mul
mulb
xor
outsb
dec
test
repz
jae
mov
cs
lcall
push
loope
add
into
nop
cmp
sub
pop
imul
jne,pn
loopne
lds
shl
and
scas
push
mov
and
pushf
aad
push
sub
xchg
adc
dec
out
push
inc
loope
cmp
adc
movsb
add
lahf
stos
ja
dec
out
pusha
and
sbb
mov
cmp
sbb
xchg
dec
mov
inc
xchg
aaa
sub
pusha
or
sahf
sbb
xchg
icebp
add
mov
jo
pop
dec
movsb
push
sbb
data16
int3
cmp
or
movsb
cmp
xchg
jecxz
test
push
inc
sbb
xchg
sarl
leave
iret
in
lret
push
xor
mov
mov
jge
and
adc
data16
fldcw
cli
jmp
dec
cmp
imul
movsl
mov
push
enter
xor
mov
fisubrs
ja
pusha
mov
mov
fisttpl
xor
pop
data16
cmp
xchg
in
je
mov
loopne
mov
mov
inc
adc
dec
dec
mov
repnz
movsl
aad
mov
fidivs
fcmove
call
sbb
mov
iret
jge
inc
cli
out
push
ljmp
ljmp
pop
lahf
push
mov
mov
pop
jmp
mov
dec
lret
sub
sub
sarb
fsubl
xor
inc
push
dec
xchg
mov
scas
pusha
mov
ja,pt
sub
and
ror
fiadds
decb
das
mov
pop
and
dec
test
inc
fnstsw
mov
test
jae
pop
fcmovnu
enter
and
add
mov
xchg
or
ret
cmc
repnz
push
push
mov
scas
or
test
movsl
das
repz
int
mov
pop
mov
dec
cwtl
daa
out
add
push
cwtl
call
mov
movsl
lret
mov
nop
lcall
jno
mov
dec
movb
sbbl
adc
sub
test
add
pusha
adc
jmp
cmp
sub
ljmp
xor
mov
xor
adc
adc
iret
lcall
mov
ret
out
push
cwtl
xchg
jp
mov
cmp
fs
sti
adc
jp
lret
push
out
push
fistpll
xchg
cld
lahf
push
stos
sub
sbb
addr16
scas
xor
cmpsb
inc
cltd
insb
mov
shll
dec
or
xchg
or
or
loopne
loopne
jno
cli
aaa
lahf
sbb
sub
mov
fnstsw
cmp
jne
lods
mov
push
testb
jmp
fwait
push
sub
ss
cli
cmp
cld
cmp
adc
and
push
stos
cld
sbb
mov
push
xchg
dec
cmp
xchg
sub
add
ss
in
nop
pop
jb
xlat
or
dec
test
pop
and
dec
dec
clc
adc
pop
sahf
les
in
test
or
add
leave
xchg
and
sbb
and
rorb
ja
inc
pop
mov
mov
cs
push
push
mov
cmp
adc
cmp
movl
and
out
notl
rorl
sub
popf
icebp
add
sar
sarb
ret
cmp
sbb
addb
arpl
xchg
sub
ret
arpl
pop
lret
mov
cmp
xor
or
sub
or
in
into
popf
pusha
sbb
xchg
lahf
insl
xchg
xlat
cmc
ljmp
test
jne
movsb
pop
xchg
jmp
sbbb
stc
rcrb
icebp
mov
cmc
subb
xor
call
cmc
and
loop
pop
int3
in
sbb
xor
mov
je
into
call
adc
cmpsb
push
add
dec
or
jne
hlt
out
int
jmp
adc
mov
aas
in
lods
mov
or
outsb
sub
pop
adc
pop
fisttps
mov
adc
ljmp
sbb
rorl
std
lret
mov
cmpsl
rcrl
dec
test
xor
ja
xorl
cmpsb
pusha
scas
jge
mov
je
std
jmp
sbb
cmp
shrl
leave
pop
push
sub
push
or
cs
mov
popf
cmp
scas
fwait
daa
sbb
mov
repnz
xor
dec
cmp
jge
leave
ja
cmpb
stc
sti
lret
cmp
test
jge
repz
xchg
lret
xchg
lea
mov
push
inc
xchg
adc
enter
test
jo
aaa
cmpsl
dec
and
lea
faddp
xor
test
push
out
cs
xor
lods
pop
push
es
stos
and
lcall
fbld
push
sbb
pop
int
mov
mov
cmpl
add
faddl
inc
dec
addr16
es
lret
push
orb
inc
dec
int3
fimull
and
popf
jecxz
and
mov
jno
arpl
iret
std
cvtdq2ps
lcall
scas
sub
jae
jge
stos
imul
or
mov
gs
pop
movsl
adc
push
inc
inc
frstor
add
mov
dec
orb
insb
and
inc
dec
pushf
cmc
jbe
in
mov
sbb
lods
cmp
or
mov
insb
lock
fsts
push
nop
push
aad
adc
mov
scas
enter
jmp
cld
cmp
sbb
mov
xchg
mov
fsubp
jl
in
mov
dec
int3
push
mov
jno
and
cmp
inc
xlat
mov
call
dec
ja
test
mov
jmp
sbb
push
mov
xor
sbb
pop
push
mov
inc
stos
push
test
out
test
rorb
sarb
push
fimull
cli
clc
xor
xorb
mov
jle
movsl
pop
dec
jl
dec
lods
push
das
mov
pop
je
jg
jo
in
pop
jge
mov
fwait
xchg
push
cmp
call
movsb
ds
imul
cltd
loopne
xchg
cs
xorb
dec
sbb
pop
cltd
aad
fdivl
and
int
adc
fs
mov
cmp
mov
cs
call
jl
mov
inc
jge
pop
mov
js
rcll
jno
cmp
insb
cld
js
call
push
and
fstpl
repz
push
and
sub
les
inc
addr16
imul
popa
repnz
jnp
mov
sbb
loopne
dec
ret
pop
mov
int3
push
dec
lods
rcrl
pop
shrl
nop
sbb
outsl
xchg
inc
and
stc
pop
mov
fdivrp
push
and
sub
jbe
jl
paddsw
cwtl
sub
ljmp
cmp
mov
xlat
jge
push
gs
add
and
out
lds
addr16
addr16
add
icebp
inc
mov
aad
xor
inc
add
xor
and
push
cld
das
aas
out
pop
sahf
insb
dec
or
imul
int3
lahf
jbe
loope
and
jmp
stc
mov
xor
cmc
ret
xchg
lcall
jmp
or
dec
ss
jb
aaa
test
gs
cmpl
into
inc
popa
arpl
sar
adc
pop
and
loop
push
pop
sti
test
xor
loope
into
pop
into
xchg
lock
adc
cmpsb
rclb
mov
pop
loope
cmpsb
fadd
cmp
add
gs
push
sti
test
popf
popa
sbb
aas
test
cmp
push
add
movsb
insl
and
mov
mov
pop
or
movsl
xor
add
repz
inc
imul
cltd
lcall
lds
cwtl
cli
and
imul
sarl
sbb
jo
sarl
cmc
jne
cmp
fwait
test
and
inc
inc
popf
mov
push
fs
and
adc
jo
int
mov
cwtl
push
cmp
jecxz
adc
addr16
pushf
fucomi
xor
mov
movsl
push
pusha
stos
cmp
loope
inc
sub
fsubs
mov
into
pop
aas
push
pop
dec
ret
mov
adc
push
xchg
ds
jl
lods
repnz
inc
out
movsb
dec
sahf
xor
scas
cmpsl
add
xchg
mov
xor
cld
mov
movsl
nop
push
jg
or
hlt
scas
adc
adc
sbb
pop
int
iret
ret
add
sbb
fsubrs
loop
and
cmp
and
js
jne
sub
jge
xchg
dec
lock
dec
loop
test
jge
imul
dec
cmpsl
jnp
cmpsb
fptan
mov
pop
test
lret
mov
sub
inc
sub
jl
scas
jo
add
loope
pusha
mov
cmp
or
pop
mov
push
xlat
notb
lods
aas
dec
dec
movsl
icebp
mov
pop
add
mov
test
es
sarl
fisttpl
adc
and
pusha
shl
jae
push
xchg
rorl
je
int3
mov
gs
mov
call
jnp
mov
jno
ja
cmpsl
outsl
test
mov
sahf
or
enter
jb
jp
shr
push
fistps
xchg
dec
out
ljmp
out
fidivrl
jo
fimuls
lds
xor
ss
adc
sbb
cmp
jge
xchg
pushf
repnz
push
jl
cs
or
sub
movsl
sbbb
inc
mov
lcall
aas
in
movsl
cmc
xor
cld
sub
jns
mov
push
push
xchg
xor
xor
push
loop
inc
add
fldcw
cs
int
jbe
lods
ljmp
ja
xor
inc
aam
fwait
popa
xchg
or
jns
pop
stos
out
xchg
int
mov
fcomps
xor
es
lahf
xor
mov
test
dec
dec
sub
mov
xchg
xchg
pop
nop
pop
cmp
dec
inc
push
rcr
and
pushl
jmp
adc
xlat
push
into
rorl
add
insl
repnz
push
cmpl
out
cmp
cmp
aad
push
add
into
jne
jl
jmp
insl
mov
xor
adc
cld
xor
dec
movsb
jecxz
sub
xchg
sub
movsb
subl
jae
and
divl
pop
popa
fildl
js
stc
jns
daa
inc
insb
sbbb
scas
in
nop
aaa
mov
inc
add
cmp
or
xchg
push
cld
adc
add
test
xchg
cmpb
mov
lret
dec
xchg
js
mov
test
je
lret
out
mov
xchg
pop
xchg
xor
add
ljmp
lahf
repnz
adc
aam
inc
test
xchg
je
xor
jno
ss
inc
sbb
xchg
scas
imul
mov
add
lret
pop
outsl
pop
jle
mov
clc
std
je
sbb
jae
pop
pop
movups
inc
leave
icebp
adc
push
and
xchg
ret
ss
xchg
inc
addr16
or
xchg
push
sub
std
out
xlat
lds
and
adc
sub
bound
mov
jle
sbb
or
inc
call
adc
and
and
loop
or
js
lds
jno
push
jmp
xor
leave
test
mov
int3
or
pop
cld
ret
pop
shrb
mov
pushf
sub
lea
ror
jmp
inc
ds
cmpsb
icebp
mov
add
xchg
push
pushf
std
xchg
inc
fidivs
lds
std
mov
mov
push
or
insb
dec
sbb
add
adc
clc
add
fwait
das
push
into
mov
or
inc
push
or
mov
mov
pop
adc
stos
pop
adc
out
xor
xchg
jg
outsl
inc
clc
lret
ss
xchg
adc
pop
pushf
jno
or
inc
mov
or
or
hlt
mov
rorl
sti
decl
pop
and
cmp
addb
cmp
lret
adc
adc
mov
mov
aam
fisttps
ljmp
lahf
insl
out
hlt
cmc
adc
mov
and
shrl
push
rcll
jne
roll
mov
and
jl
aas
fisubrl
push
jae
xchg
pop
pop
iret
lcall
jmp
ret
movsb
dec
jge
cmp
adc
out
pop
mov
push
comiss
mov
pop
push
dec
pop
sub
push
sbb
sub
adc
dec
icebp
rcrl
inc
ret
addr16
sbb
lret
popf
push
mov
pop
sub
es
mov
cld
mov
in
inc
mov
movsb
sbb
mov
fiaddl
add
je
subl
pop
push
arpl
mov
add
int3
or
sbb
fmul
jns
dec
and
pop
pushf
xor
jmp
dec
and
or
testl
mov
push
jb
jmp
adcl
imul
mov
or
insl
sub
mov
pop
xchg
cmpsb
pop
call
mov
iret
int3
push
rorb
dec
mov
xchg
aas
ljmp
mov
movsb
aas
std
fs
pop
fdivs
ret
xor
hlt
lock
add
or
ficoms
mov
cld
sar
inc
sbb
repz
test
or
ss
orb
cmp
push
cmp
add
clc
dec
mov
enter
sub
pop
xchg
idiv
xchg
test
mov
pop
xor
xchg
sbb
inc
jnp
jo
imul
push
mov
ret
add
add
lock
fnstcw
sti
out
sbb
dec
pop
add
mov
jp
fisttpl
pop
mov
aaa
cmp
jg
sub
in
cmpsl
dec
dec
xchg
dec
cmp
inc
subb
notl
inc
mov
lret
test
or
aam
js
add
fdivl
mov
push
aad
pop
jp
pop
cwtl
adc
imul
jbe
jg
xorl
mov
cmp
ja
out
xor
pop
clc
int
adc
stos
mov
loope
mov
daa
lds
addl
out
xor
jle
jecxz
inc
mov
movsb
test
ljmp
mov
int3
loopne
mov
stc
mov
rol
mov
pop
push
ds
inc
inc
cmp
sub
push
les
js
leave
ss
dec
in
push
mov
mov
pop
pop
jmp
mov
mov
cltd
call
pusha
insb
jg
popf
mov
cwtl
fidivrs
inc
sub
pop
je
fdivrl
mov
mov
or
es
pusha
mov
hlt
mov
push
jb
add
popf
push
fisttpll
ret
stc
imul
mov
adc
fnstsw
aad
and
stc
sbbb
pop
outsl
bsf
mov
mov
mov
lahf
xchg
inc
adc
push
sahf
push
dec
jns
xchg
jo
push
outsb
sarb
adc
das
idivb
sub
add
dec
into
arpl
or
pop
xlat
mov
aad
xor
xor
es
mov
dec
mov
je
mov
dec
dec
test
dec
sarb
enter
addb
mov
repz
std
js
notl
int3
sarl
mov
cmp
fldenv
sub
mov
scas
cmpsb
or
and
add
mov
mov
xorb
jmp
mov
add
and
jmp
int3
fidivrs
out
sub
cwtl
mov
cmp
push
movsl
fnstenv
insb
fwait
sahf
sub
jmp
test
jmp
mov
int3
sahf
pop
and
xchg
outsb
mov
inc
addr16
sarl
out
shl
das
aam
dec
push
jecxz
mov
push
and
cmp
or
stos
or
jbe
and
mov
jno
mov
insl
inc
xor
sub
pushf
cmc
jl
adc
xchg
mov
addr16
add
outsb
push
cs
cli
dec
lret
jb
dec
test
ja
shlb
lcall
mov
test
cmp
adcl
mov
hlt
push
in
mull
dec
sbb
dec
xchg
arpl
mov
jae
mov
cmp
faddl
xor
imul
jo
les
daa
jge
cld
mov
jl
dec
fwait
cmp
or
mov
adcb
pop
mov
testl
mov
mov
jne
ficoms
fmull
test
mov
out
jne
mov
push
mov
xchg
xchg
out
sub
cmpsl
sub
popa
and
mov
cmp
js
cli
inc
sbb
std
in
movl
ret
xchg
lds
push
jno
jmp
xchg
pop
loope
stos
cs
xchg
mov
jns
arpl
or
loopne
mov
cld
jnp
jns
cs
lds
mov
mov
das
dec
in
lahf
hlt
clc
adcl
push
add
mov
jbe
dec
xlat
or
xlat
mov
adc
inc
mov
call
jmp
lods
mov
repz
das
cmpsl
push
mov
fs
mov
sub
xor
mov
dec
xchg
pushf
cmp
xchg
ja
cmpsb
push
sub
out
dec
mov
mov
dec
mov
js
push
mov
cmp
stos
daa
pop
pop
adc
orl
cmp
mov
aaa
adc
stos
leave
in
stos
cs
xor
sbb
sub
jno
mov
jl
sub
sbb
stos
int
js
mov
lahf
stos
ja
pop
sub
cmp
sub
pop
cmp
dec
add
add
inc
jbe
mov
push
pop
xchg
mov
aam
adc
fistpl
arpl
mull
pop
jmp
js
icebp
outsl
adc
ret
mov
cmpsl
outsb
pop
ss
mov
into
ffreep
adcb
jo
xchg
push
pop
jmp
xor
lods
call
lock
sbb
shrl
fistpll
pop
fs
mov
mov
andb
daa
jne
jg
ss
gs
test
mov
adc
fbld
cwtl
movsb
xchg
cmpsb
les
and
clc
fyl2xp1
jg
sub
add
stos
addr16
arpl
dec
mov
sarl
stc
sbb
adc
mov
out
int
rcrb
sub
lret
fs
cltd
lods
and
sbb
mov
ja
pop
push
addl
jg
mov
les
call
mov
popf
xlat
lcall
int3
fucomi
cmp
jle
out
xchg
adc
pop
int
push
jnp
sbb
repz
cmp
push
loopne
xor
fidivrl
lret
fwait
ljmp
imul
es
icebp
sub
xchg
sahf
les
mov
ret
notl
mov
cld
push
ficompl
arpl
rolb
mov
sub
fstps
push
shl
mov
movsb
or
loope
pop
cmp
adc
push
inc
mov
rolb
lahf
test
inc
dec
inc
insl
mov
in
lret
dec
repz
xchg
iret
rcrb
sub
inc
xor
movd
outsl
aad
mov
inc
aas
insb
jge
icebp
outsl
pusha
pop
or
movsl
fldcw
icebp
cmp
mov
or
mov
mov
dec
rcrb
pop
scas
pop
and
mov
and
imul
mov
aam
push
decl
pop
lahf
pop
rorl
cmp
gs
push
aas
imul
mov
mov
xchg
movsb
dec
mov
jnp
mov
fisubrl
cmp
ss
mov
fadds
mov
xchg
mov
in
xchg
iret
lods
out
cmpsl
fbld
xor
mov
das
or
sbb
sbb
cmpb
or
imul
cwtl
ret
mov
cmp
rcrb
jle
sub
cli
xchg
loope
rcrl
jnp
cmp
ja
addl
sahf
push
mov
and
sbb
nop
fnstenv
rcll
mov
add
outsl
insb
loope
popf
jp
xchg
push
add
lahf
or
dec
jns
loope
mov
sub
cs
mov
mov
orb
into
sub
dec
mov
xor
jecxz
cmp
xchg
jmp
les
dec
and
dec
outsl
push
add
mov
popa
lret
enter
je
lret
iret
clc
std
lcall
ret
push
in
inc
mov
inc
lock
fldl
das
ret
xlat
ja
dec
loop
ficoml
xchg
lods
rol
inc
mov
add
out
jbe
add
test
pop
dec
repnz
push
test
or
add
ja
out
cmp
jnp
aam
pop
cmp
xchg
mov
shll
test
fnstsw
xor
sub
pop
cli
xchg
xchg
inc
or
test
jecxz
cmc
add
cmp
lahf
addr16
mov
cmp
jbe
shlb
and
lret
xor
iret
lea
shll
inc
int
mov
sbb
fadds
mov
xchg
adc
jecxz
pusha
pushf
leave
pop
in
std
call
jecxz
lcall
adc
sbb
jge
cmpl
pop
out
jo
dec
int
xchg
or
push
idivb
loop
or
jg
mov
mov
mov
sbb
scas
in
orl
mov
lret
cmp
stos
mov
or
out
sbb
imul
mov
mov
sbb
iret
sti
decl
dec
xchg
das
in
jle
xlat
inc
inc
shlb
jmp
cmpsl
or
fisubs
push
jecxz
add
sub
xor
sub
shrl
sbb
sarl
xor
xlat
aas
cmpl
cld
cmp
push
mov
sbb
dec
loopne
rcrb
push
aad
mov
or
mov
adc
mov
add
jb
repz
les
push
lcall
pop
fldt
inc
sub
pop
imul
pop
sahf
repz
mov
mov
sbb
xchg
in
cmp
mov
mov
lahf
jge
lea
pop
mov
clc
inc
mov
xor
movsb
mov
pushf
mov
jnp
adc
xor
je
xorl
fwait
cmpsl
cmp
add
fiadds
mov
xchg
iret
in
xchg
pop
adc
mov
dec
sbb
enter
outsb
imul
xchg
inc
test
loop
mov
fldcw
and
pop
mov
mov
or
nop
cmp
pusha
push
inc
xchg
in
dec
or
popa
pop
nop
mov
test
or
cmc
push
hlt
testb
mov
in
xchg
cld
inc
shl
push
dec
stc
incb
addr16
sarl
dec
nop
mov
jb
xchg
lret
xchg
pop
or
ljmp
pop
adc
mov
pushf
and
sub
push
sbb
stos
jge
and
inc
pop
rcr
ss
insb
fwait
sbb
std
mov
hlt
push
mov
add
cmp
sub
stos
das
mov
test
cmc
mov
pop
mov
sub
rcr
mov
lcall
cmp
cltd
pxor
add
sar
aad
xchg
sbb
inc
inc
fstl
fidivrs
fldenv
lret
test
mov
xchg
inc
add
dec
push
push
popf
inc
and
push
outsl
jmp
popa
inc
jno
sub
fs
adc
or
xor
orl
shll
xor
mov
dec
popa
sahf
push
dec
ret
sbb
scas
cmp
pop
lea
xchg
inc
dec
mov
sahf
sub
pop
mov
adc
add
rorl
mov
cmpsb
push
inc
lds
sub
fwait
dec
sbb
lock
push
pusha
rorb
fcmovb
xor
loop
pop
stc
push
pop
xchg
adcb
call
add
gs
imul
push
push
inc
pushf
in
mov
pop
cmp
stos
xchg
push
mov
jne
ret
sbbb
out
imul
aaa
adc
clc
dec
push
jno
and
leave
pop
and
adc
jb
test
cmpsl
daa
leave
add
dec
int3
lahf
dec
fstpl
sbb
inc
bound
gs
ljmp
cmp
test
and
fdivrp
xchg
jl
push
aam
jo
pop
out
dec
lret
clc
icebp
inc
aaa
arpl
and
insb
or
out
or
cmp
add
stc
pop
sbb
repnz
lcall
repnz
testb
mov
pop
dec
dec
pusha
mov
pusha
inc
addr16
jae
call
fcomi
xchg
mov
inc
popf
xlat
in
fstl
popa
push
mov
jns
fwait
dec
gs
nop
lcall
xchg
mov
lods
movsb
add
push
jecxz
or
pushl
andl
jae
sbb
idiv
add
adc
sti
not
adc
nop
adc
loopne
icebp
add
sub
mov
outsb
adc
imull
popa
push
mov
icebp
and
call
or
add
scas
dec
loop
or
mov
sub
xchg
repz
std
cmp
sbb
pop
std
push
fs
and
jge
pop
dec
add
push
cmpsb
gs
addb
fisttpl
lock
pop
cmpsb
adc
loope
dec
pop
aad
sub
mov
test
lahf
mov
rcll
dec
or
loope
ja
test
cmc
cld
mov
and
cmp
pop
dec
lods
push
adc
adc
jbe
lret
adc
or
pop
and
imul
cs
sub
ret
xchg
push
jnp
call
lds
fcmovnb
in
push
dec
cltd
imull
xor
fwait
test
test
dec
mov
ret
push
jo
loopne
int3
addr16
scas
lcall
fs
stc
pushf
sbb
push
cld
test
lahf
or
inc
shll
xchg
enter
add
pop
fisubrl
jg
addl
out
out
in
lea
aad
testb
addr16
mov
add
out
out
imul
pushf
push
test
mov
daa
mov
cltd
aas
sub
sahf
repz
and
arpl
js
pop
add
out
jb
adc
lock
mov
test
out
lock
cmpsl
mov
stc
pushl
rclb
xor
aad
es
cmpsb
cmp
add
mov
mov
insl
insl
and
jmp
mov
lods
add
push
pop
xlat
pop
ss
xor
pop
mov
pop
arpl
xor
push
push
cmpsb
push
or
sbb
aad
sub
call
sbb
mov
inc
movsl
aaa
in
sbb
sbb
ljmp
jno
push
cmp
dec
or
frstor
out
mov
lods
fisttpl
cmp
sarb
fwait
orb
popl
test
popf
mov
in
and
test
dec
xchg
lods
pop
and
sbb
cmp
lret
ss
shr
jb
ljmp
cld
add
js
shrb
scas
adc
xchg
scas
lahf
subl
aam
jl
cwtl
and
shrb
dec
pushf
mov
push
xlat
sbb
scas
subb
aam
loope
and
jecxz
mov
cmp
mov
mov
aad
push
cmp
sarl
push
xchg
dec
fisubrl
cmpsl
dec
rcr
aas
inc
xchg
lcall
insb
adc
dec
cld
mov
cld
xor
jns
push
int3
dec
push
lock
rclb
icebp
sub
subl
push
fwait
xor
mov
jbe
aaa
lock
repnz
loope
mov
leave
loopne
or
insb
les
dec
or
sbb
fldl
jecxz
out
pop
fidivs
jmp
in
jo
inc
push
fimuls
adc
or
shrb
into
adc
mov
push
aaa
filds
xor
imul
lcall
sub
dec
fisubs
in
popa
lds
sbb
ret
into
push
jne
out
scas
inc
mov
jbe
pop
rorl
mov
jle
mov
or
les
xchg
mov
push
out
inc
stos
sbb
lock
push
insl
in
mov
and
lahf
inc
cld
push
inc
test
aaa
dec
cmpsl
and
cmpsl
xor
or
mov
adc
idivl
and
inc
inc
subl
sub
in
test
mov
add
aaa
stos
in
outsl
ret
dec
test
jbe
jmp
adc
sbb
imul
sub
lahf
daa
sub
mov
iret
add
repnz
ds
push
pop
mov
fstpt
ret
icebp
pop
enter
fildll
dec
fsubrl
orl
imul
mov
insb
daa
inc
or
insb
lods
sub
out
rorl
cwtl
pop
imul
mov
mov
cmc
out
mov
jbe
push
xchg
mov
sbb
mov
push
mov
adc
mov
sbb
ret
mov
add
pop
sbb
xor
sub
mov
movsb
lods
push
aad
xchg
or
fs
insb
add
enter
outsb
pop
mov
push
mov
es
pushf
decl
add
das
xorb
sub
jl
cmp
adc
andb
lea
aad
push
xor
cmp
loope
fdivp
or
addr16
test
add
jns
outsb
cs
cmp
xchg
jnp
sbb
inc
fmull
adc
jno
andb
fadd
inc
mov
sub
xor
inc
jno
enter
jo
jmp
pop
and
lcall
ret
lds
pop
mov
inc
rorb
and
add
pushf
pop
add
jnp
bound
cmpsb
outsl
icebp
cmp
dec
leave
mov
push
sbb
push
jb
not
sahf
pop
xchg
enter
mov
es
xchg
int3
dec
cmp
outsl
xchg
sbb
sub
mov
cmp
lock
ret
faddl
scas
rcrl
bound
sahf
add
or
das
inc
imul
pop
divl
cmpsl
and
rolb
cli
mov
dec
enter
bound
rcll
or
jno
cmpsb
dec
add
stos
or
inc
sahf
push
mov
int3
jmp
push
inc
shrl
subb
xor
pop
cli
mov
push
inc
xchg
out
mov
inc
and
and
sbb
cmp
push
xchg
fdivrp
pusha
mov
leave
lds
inc
repz
mov
xor
mov
inc
shlb
xchg
faddl
push
xchg
rcrl
push
sbbl
dec
jge
imul
clc
adc
adcb
jne
jecxz
xlat
adc
ja
std
nop
pusha
cld
sbb
sub
pop
mov
cs
add
adc
movsb
aaa
bound
shlb
cmpb
fdiv
rcll
in
std
pop
jb
and
mov
scas
or
popa
xchg
imul
lods
cmp
jae,pn
jmp
sub
mov
pop
lods
and
stos
and
jo
cmc
adc
mov
aas
ljmp
lret
call
xchg
mov
into
sbb
shlb
add
in
out
jp
outsl
outsl
out
ret
out
jno
std
imul
hlt
icebp
dec
daa
cmp
adcl
test
insb
pusha
push
out
push
mov
and
jle
loopne
cmpb
mov
push
xchg
xchg
ret
pushf
jae
ret
push
jb
mov
mov
call
adc
cli
insl
popa
xchg
cmp
outsl
push
orb
mov
push
pop
decl
aad
in
orl
dec
ds
push
push
orb
sub
shl
push
sub
fiaddl
fmul
pop
enter
pop
mov
into
push
int3
loop
and
mov
sbb
cmp
ljmp
jns
mov
imul
cmp
je
lahf
cmp
sahf
or
dec
push
loope
repnz
mov
mov
mov
shlb
mov
add
int3
loope
jmp
push
mov
jecxz
and
fisttps
cmp
dec
inc
lods
in
and
inc
jg
pop
cmp
cmp
lock
test
xchg
arpl
jbe
insb
jb
cs
addr16
add
imul
div
dec
out
sbb
mov
mov
cmpsb
adc
pop
out
int
jbe
adc
adc
dec
dec
jo
mov
or
repnz
push
rorl
dec
nop
cwtl
pop
mov
sub
call
fcoml
jge
test
lods
hlt
inc
fsubrp
out
jae
pusha
dec
inc
mov
cmp
pop
cwtl
and
int
cltd
into
jle
cmc
fnstcw
insl
addb
push
call
int
sti
jns
loopne
push
cltd
or
inc
int
or
push
stc
or
cmp
mov
fsub
push
aaa
inc
seta
mov
leave
jne
icebp
aas
cmpsb
push
out
jae
imul
mov
cltd
nop
cmp
add
test
xchg
cltd
xchg
in
hlt
inc
add
jecxz
jecxz
xchg
aam
ljmp
sarl
pushf
sbb
cld
cs
enter
cmpsb
out
std
cmpsl
adc
fwait
push
bnd
add
pop
sbb
sti
cs
fimuls
rcl
ret
cmc
mov
test
and
loop
outsb
push
es
loopne
pop
loopne
sbb
lret
xchg
clc
fidivrs
out
pop
cmp
movsb
pop
mov
sub
mov
rol
movsl
xor
pusha
mov
mov
or
iret
jo
push
push
dec
insl
adc
cwtl
arpl
popf
in
ljmp
cmc
or
push
jle
sub
jecxz
lock
sub
push
mov
dec
pop
loop
inc
xchg
jp
fucomi
insb
xchg
imul
out
sub
xor
mov
and
pop
shl
lret
pop
push
push
dec
sbb
js
in
out
pop
dec
divb
sub
lods
call
push
push
mov
aas
imul
arpl
mov
leave
test
sbb
mov
and
xlat
out
adc
jne
cmovns
jp
insl
jne
aam
leave
add
adc
push
cwtl
enter
sub
push
inc
daa
mov
mov
cmpsl
cmp
inc
imul
ds
jg
dec
pop
mov
mov
xor
inc
adc
sbb
inc
pop
cmpsb
imulb
shll
inc
fistl
dec
pusha
es
das
fistl
outsl
pop
test
dec
movsl
xchg
hlt
out
in
push
test
add
mov
cmp
cmp
clc
dec
pop
loopne
cmp
push
inc
dec
mov
mov
push
dec
jmp
jbe
clc
inc
int
jno
cmp
jp
mov
daa
imul
push
or
icebp
dec
pop
jb
sbb
mov
mov
xchg
and
pop
in
in
daa
call
xchg
and
jne
fiaddl
mov
addb
in
lcall
icebp
aad
mov
andl
roll
mov
movsb
lret
fisttpll
cmp
call
adc
fs
sub
sbb
fwait
cmc
jmp
loope
cmp
dec
sub
pop
cmp
cld
loope
xchg
and
rorb
sub
xchg
pushf
jno
jp
and
stc
mov
pop
cmpsb
inc
jmp
lock
dec
push
pop
push
and
jp
dec
xchg
pusha
dec
jp
jl
in
enter
loopne
clc
push
lgs
inc
lock
in
push
push
lret
dec
int
sahf
xchg
or
lds
lea
xor
clc
jp
mov
jmp
mov
xchg
out
out
test
jmp
sbb
xchg
aam
ret
insl
push
mov
repz
sbb
xchg
xchg
das
jnp
out
call
adc
in
mov
and
stc
decb
or
cs
or
idivb
nop
pop
inc
imul
inc
sbb
jle
push
jno
xchg
dec
shlb
sarb
incl
les
inc
mov
inc
test
das
test
mov
cmp
nop
nop
cmpsl
jmp
sti
inc
or
push
pop
pop
mov
adc
mov
out
jge
xchg
subl
sbb
es
xor
jecxz
push
hlt
xchg
out
test
inc
gs
pop
push
popf
addr16
scas
clc
adc
xchg
sub
push
mov
fs
mov
push
sub
mov
ds
adc
test
ror
push
xor
stos
pop
inc
in
jge
pusha
and
popa
pop
sub
push
addr16
sbb
lock
pop
mov
push
ljmp
loop
mov
out
cmpb
andb
test
lahf
push
test
push
imul
pop
ljmp
out
pop
xor
in
in
dec
sbb
and
mov
test
rcr
pop
sti
repz
inc
jne
mov
mov
sbb
gs
jmp
shrl
xor
mov
cmp
jnp
leave
imulb
push
nop
or
mov
pop
mov
pop
dec
pop
ss
dec
aad
sbb
or
leave
int
sbb
int3
in
sahf
sub
test
dec
dec
push
cmpsl
and
fiadds
xor
iret
or
sbb
dec
xor
adc
and
inc
adc
and
cmp
xor
inc
inc
test
mov
cld
stos
dec
sub
out
syscall
mov
or
repnz
sub
enter
xchg
jb
xlat
cltd
mov
gs
xchg
stos
fmulp
andl
stos
jo
sbb
rcrl
sbbl
xor
mov
sub
mov
subl
stos
das
cmp
iret
push
sub
movsb
ds
jecxz
mov
icebp
adc
popa
lcall
adc
out
mov
imul
pusha
cmp
clc
bound
push
mov
push
jp
mov
adc
dec
leave
inc
xor
dec
popf
xchg
jp
or
inc
cld
cmp
jge
mov
pop
inc
mov
into
jg
loope
push
mov
popa
lahf
dec
aas
or
cmp
in
cmpsb
sub
add
push
or
enter
rcll
nop
dec
jl
mov
das
mov
xor
mov
out
cmc
dec
cwtl
xchg
jno
mov
inc
mov
ret
add
out
pop
sbb
call
test
mov
test
add
jmp
stos
data16
xor
cmc
mov
aas
pop
mov
push
outsb
cs
popa
dec
cmpsl
mov
xor
mov
inc
test
lock
push
xor
add
js
push
mov
out
stc
out
or
add
ds
outsl
mov
cmp
lahf
xchg
xor
fcoms
push
mov
mov
lods
ljmp
dec
jae
sub
xor
push
mov
push
mov
xchg
jecxz
adc
iret
out
test
xor
sahf
ret
push
sahf
fisubl
icebp
filds
out
insb
cmp
pop
call
int
xchg
ja
mov
sub
xchg
mov
int
test
push
add
adc
xlat
jp
stos
les
cmp
mulb
fstl
ja
push
push
scas
sbb
xor
out
adc
in
sub
cwtl
cwtl
xor
clc
and
push
es
sub
inc
adc
stos
mov
push
xor
pop
push
jbe
mov
daa
xchg
sbb
jecxz
push
addr16
in
adc
push
jle
sub
fildl
mov
jns
cmp
xchg
mov
pop
popf
jmp
loopne
std
adcl
push
sbb
push
pop
pop
imul
inc
movl
shll
xor
push
adc
fildl
mov
ficompl
cmp
inc
mov
push
loope
pushf
adc
ret
and
fldcw
pop
lds
mov
dec
lret
aam
mov
pop
sbb
dec
sub
cmp
push
sub
pop
ja
push
in
cmpsl
data16
aad
loope
fsubs
xor
frstor
sub
rclb
fs
xlat
in
popl
test
adc
inc
lret
fidivl
inc
xor
adcl
lea
sub
add
test
orl
jb
or
mov
push
push
mov
ds
pop
mov
lcall
dec
xor
adcb
les
cmp
gs
das
push
mov
adc
into
mov
xchg
adc
mov
mov
dec
fcoms
nop
in
lcall
mov
mov
lret
int
push
hlt
jb
pop
outsb
push
jecxz
xor
add
popf
pusha
rol
jo
ja
setnp
xchg
xchg
shl
in
orb
not
mov
loopne
rorl
ss
push
dec
inc
push
mov
inc
cmp
imul
out
jle
add
shrb
xlat
mov
xchg
mov
inc
cmp
mov
inc
sub
sub
push
mov
mov
xor
lret
inc
mov
and
leave
icebp
and
dec
xchg
ret
sub
repnz
cmp
and
fwait
loop
lahf
fcompp
inc
call
repnz
jne
jge
push
mov
out
leave
adcb
ficoml
dec
fbstp
jbe
fsubl
dec
jecxz
and
add
sarl
or
mov
lret
roll
movsb
fisubl
sti
xchg
gs
fdivs
adc
shrl
push
pop
lock
and
shrb
out
test
jecxz
fisttps
jle
pop
outsb
popl
pop
loop
pop
out
mov
push
jp
in
arpl
cmp
mov
lods
sbb
mov
push
xchg
sbb
ja
xlat
les
notb
mov
lods
stc
ds
cmp
test
jl
cli
aad
mov
insl
cwtl
test
rorb
or
ret
into
clc
adc
mov
sbb
lea
pop
pusha
cld
les
loopne
cmp
pop
pop
cli
pop
inc
rsm
inc
xor
xchg
sahf
and
nop
or
fidivrl
and
jo
lahf
inc
ljmp
es
iret
das
pop
ljmp
sub
add
xor
test
add
scas
jae
xor
push
cmp
popa
cmc
popf
jge
call
sti
rcll
sbb
repnz
sub
mov
mov
jle
push
dec
mov
xor
insl
fisubl
mov
or
cld
push
cli
push
into
dec
xor
test
fldcw
popa
je
popf
sbb
enter
xor
push
inc
lods
int3
rolb
es
jbe
mov
clc
adc
data16
mov
xchg
outsl
sahf
addr16
or
push
push
add
popf
add
jl
scas
lods
lcall
outsl
sahf
in
sbb
bound
push
scas
gs
scas
js
dec
lock
mov
sub
dec
sbb
rolb
adc
and
jnp
mov
iret
pop
mov
mov
dec
cmp
xlat
sub
ret
inc
mov
popa
loop
sub
test
ljmp
xor
out
out
jle
inc
fwait
xchg
shrb
sub
mov
jmp
push
jmp
in
out
iret
mov
sub
loope
clc
adcl
pop
mov
jmp
inc
sub
pop
ud2
nop
dec
push
mov
jmp
ret
jmp
rorb
lret
cmp
cmpsb
inc
mov
aam
repnz
jnp
sub
add
xor
fldt
jg
mov
stc
lock
std
push
and
push
xchg
push
dec
inc
scas
jno
mov
xor
mov
ss
cmp
ret
cs
xchg
or
pop
push
std
stos
jg
stos
pushf
inc
jns
adc
and
icebp
sub
xor
rcrb
into
adc
push
or
les
mov
pop
shrl
lock
mov
lods
andb
xchg
int
pop
mov
lahf
sub
add
fcomi
nop
enter
or
push
inc
ret
inc
mov
mov
sahf
ret
ljmp
filds
sub
rcrb
cmp
rcrb
popa
jg
add
repnz
cmp
push
or
outsl
stc
pop
stos
jb
lods
ret
fcoms
fsubr
cmpsb
roll
ljmp
outsb
lret
xor
xor
pop
cwtl
insl
cmp
in
int
sbb
sbbl
mov
int3
jge
and
je
addr16
daa
cmpsb
sbb
scas
mov
popa
push
cwtl
ret
cmp
fwait
int3
push
lea
mov
daa
sub
mov
mov
lods
test
mul
jbe
mov
les
lods
cltd
jnp
clc
fldl2e
aaa
std
adc
sbb
out
and
lods
jae
xchg
jg
int
sahf
inc
lret
add
daa
outsl
sti
add
push
pop
sbb
lock
jmp
xor
push
in
call
push
jle
fcom
or
jge
xchg
dec
cmp
pop
hlt
cwtl
enter
push
loope
mov
lahf
sub
test
das
dec
fimuls
cwtl
and
pop
into
shlb
mov
dec
lret
add
rcll
pop
es
or
ja
ret
sub
push
mov
or
lea
cmp
jl
xor
popa
fisubrs
outsl
loopne
dec
and
stos
and
mov
and
imul
pop
push
test
jbe
bound
and
mov
inc
and
bound
push
mov
sbb
xchg
aad
rclb
jg
sbb
mov
fildll
xchg
std
xor
dec
inc
out
adc
inc
mov
outsl
test
ret
sub
sbb
outsl
popl
call
pop
inc
movl
sub
xchg
stc
fsts
shlb
mov
rol
fs
fnstenv
fmulp
outsl
inc
je
testb
push
das
sbb
jecxz
pop
in
idivl
in
mov
push
pop
ja
mov
jmp
pushf
mov
std
ss
dec
mov
xchg
or
pop
or
add
jbe
sbb
push
push
stc
js
pop
andb
sub
dec
add
dec
shrl
inc
mov
test
dec
das
inc
fldt
dec
das
and
sbb
mov
dec
hlt
sbb
or
inc
or
jl
mov
stos
add
aas
into
es
mov
add
andl
and
xchg
pop
test
es
out
rcr
xlat
jno
lret
loope
iret
jl
jecxz
pusha
jbe
sub
fildl
jbe
xchg
mov
insl
jbe
out
ret
fs
jno
outsb
shlb
ja
leave
adc
faddl
mov
lret
xchg
push
shrl
addr16
pop
popf
shrd
xchg
push
repnz
xchg
nop
xlat
fmulp
cmpsl
aaa
dec
pushf
pop
push
lods
jnp
push
repz
movsb
pop
std
mov
xchg
jae
jle
pop
mov
enter
loop
push
pop
mov
push
sbb
jge
push
leave
and
push
repnz
jmp
xchg
mov
push
xchg
call
and
pop
dec
pop
xchg
or
out
add
mov
ret
js
dec
push
inc
mov
jle
cli
cmp
cs
sbb
xchg
scas
mov
out
mov
in
imul
xchg
jge
jg
mov
and
addl
nopl
sbb
cs
rclb
mov
cwtl
push
repz
mov
clc
popa
pop
push
jae
or
int
das
jmp
aaa
mov
int
shrb
sub
loop
leave
out
pushf
mov
inc
fs
sahf
int3
nop
jae
mov
shlb
ficompl
sbb
xor
push
jl
in
pop
scas
fwait
les
pop
inc
cmp
and
ljmp
addr16
push
mov
out
int3
cmp
addb
dec
mov
xor
pop
jp
jbe
sbb
sbbb
jge
xchg
push
add
add
pop
cmpsb
lea
js
push
outsb
dec
bnd
cld
addr16
cmp
xor
imul
pushf
movsl
mov
jle
inc
add
lds
scas
mov
jmp
dec
lods
jecxz
aam
xchg
add
aas
pop
mov
test
sahf
faddl
js
int
lods
jecxz
nop
stc
adc
cmp
call
sbb
or
mov
xorl
mov
es
enter
lods
sbb
scas
dec
nop
popa
lcall
cmp
stc
dec
ss
shll
arpl
push
dec
mov
xchg
dec
call
adc
inc
cmpsb
xchg
or
cmp
cli
cld
push
pop
dec
daa
ljmp
jp
and
add
movsl
cmp
cli
xor
xor
insb
sti
inc
push
lods
inc
jl
les
push
mov
lods
lods
std
xor
xchg
cmpsl
stos
mov
cwtl
lock
sbb
sub
xor
pop
xchg
movsb
insb
mov
mov
cmp
stos
out
mov
pop
fcmovbe
adc
das
test
stos
mov
xchg
sbb
mov
mov
jp
pop
pop
xlat
cmpsl
sbb
repz
push
jae
fcmovu
das
ficompl
cs
rorl
stc
xor
mov
jbe
pop
dec
cmc
lea
push
fwait
jo
test
xor
and
loop
xor
jae
in
lock
scas
fsubs
lods
mov
xchg
fwait
scas
movsl
mov
sub
mov
xor
jmp
pop
test
fmulp
imul
push
in
outsl
pop
pop
mov
addr16
idivb
or
sub
aad
adc
lahf
mov
test
or
mov
fwait
inc
lea
insb
lret
test
lahf
mov
xlat
divb
xor
jo
push
divl
jle
into
jae
mov
xchg
daa
pop
xor
das
subb
hlt
cmc
add
mov
jge
adc
jecxz
arpl
xchg
fstpl
test
insb
xor
jp
test
mov
push
hlt
lock
dec
outsb
psllq
mov
xor
inc
cmpsl
sahf
icebp
inc
std
scas
jle
iret
gs
ret
lahf
movb
in
popf
adc
mov
or
jg
test
adc
cs
pop
sub
sbb
and
sbb
les
add
inc
fcmovbe
xchg
daa
sbb
xchg
popa
sti
lea
daa
dec
js
das
add
imul
inc
negb
push
mov
cmp
stc
and
loope
mov
imul
mov
lea
pop
es
mov
outsl
cltd
jo
mov
push
sub
sub
jl
xor
jae
mov
rcll
and
popf
test
sub
mov
push
cltd
sti
add
cli
cmp
jb
cmc
pop
mov
or
out
or
popa
pop
mov
mov
mov
xchg
mov
and
pop
mov
dec
jo
pop
inc
push
lahf
pop
imul
add
xchg
inc
dec
mov
outsl
mov
adc
jmp
push
push
stos
rcrl
enter
and
or
cmc
adc
enter
adcl
rcrb
pop
std
sti
mov
enter
adc
outsl
notb
adc
fs
bound
add
lahf
cmp
and
sti
cmc
sub
hlt
or
sbb
xor
nop
pushl
in
dec
iret
shr
sbbl
push
inc
repz
mov
jl
iret
jl
inc
outsl
lcall
push
cmp
ret
iret
jb
iret
pusha
and
into
mov
sbb
push
movb
mov
out
cli
icebp
and
data16
pop
push
sbb
out
pop
out
orb
cmc
jbe
addb
jmp
jp
rcl
pop
test
jg
mov
or
ret
dec
xchg
sbb
push
mov
xlat
or
jne
jl
push
mov
and
lea
and
add
imul
jge
add
mov
lea
mov
push
fcomp
mov
fs
repz
rcrl
xchg
mov
loope
ds
xor
outsb
aad
in
mov
das
sub
jne
push
fcoms
mov
lea
cmp
or
mov
insb
out
repnz
sbb
push
test
notb
inc
popa
loopne
popfw
das
fidivrl
dec
into
sbb
pop
es
addr16
and
neg
mov
pop
loope
xchg
pop
adc
fs
fwait
xor
sti
fwait
jb
jg
add
xor
xchg
cltd
fnstenv
roll
pop
data16
pushf
clc
lea
cmp
sbb
fwait
insl
jecxz
pop
js
cmp
sbb
inc
stos
jns
add
icebp
cld
outsl
adc
mov
icebp
int
jmp
sbb
mov
mov
cli
outsb
xor
push
and
sbbl
jb
pop
sub
push
xchg
pop
push
test
push
subl
mov
inc
push
adc
and
pushl
jg
mov
xchg
xchg
xor
push
cmp
insb
rol
scas
ret
movsl
mov
mov
or
sbb
fldcw
int
and
in
or
cmpsb
repz
roll
mov
mov
mov
scas
mov
and
data16
out
lahf
pop
jmp
xchg
sub
cwtl
xor
arpl
inc
jl
xor
mov
add
cmpsl
mov
or
je
arpl
xor
mov
ds
pop
enter
sbb
loope
fisttpl
jecxz
cmpsl
pop
bound
loop
out
pop
icebp
test
push
iret
jg
cmp
push
sbb
mov
pop
mov
xchg
pusha
repnz
jmp
push
shrb
and
jbe
test
mov
add
push
mov
push
mov
cld
insb
les
insl
les
rorb
push
repz
jp
mov
mov
jmp
lea
mov
popa
or
adc
jmp
cmp
das
mov
xor
imul
bound
mov
cmp
imul
push
dec
mov
inc
pop
sub
jmp
dec
in
leave
vxorps
cmpsl
mov
gs
cmp
cmpl
cmp
add
aad
adc
stc
cmpsb
popa
mov
fs
pop
dec
inc
sti
lret
xor
out
inc
rcll
fld
mov
and
imul
inc
into
mov
jo
mov
cmp
jns
jge
jmp
imul
jge
test
jg
push
mov
lea
jp
mov
adc
insl
aam
insb
mov
pusha
adc
pop
jge
jmp
lahf
pop
fbstp
ja
add
xchg
ret
xor
inc
test
add
ret
push
or
in
mov
testl
mov
add
popf
jne
fdivl
insb
fwait
lods
adc
cld
xlat
subb
push
cwtl
sbb
divb
inc
xor
add
pop
ss
adc
stc
cmp
inc
jg
stos
loopne
iret
fdivs
add
outsl
or
or
repnz
shll
inc
sbb
fmuls
cmp
fs
jo
fstpt
repz
cmpsl
fs
push
jmp
nop
dec
aaa
sbbl
mov
js
xchg
add
mov
or
cs
xor
fcompl
adc
jne
mov
dec
inc
enter
test
push
lret
push
mov
jne
into
in
add
clc
pushf
repnz
adc
gs
mov
fnstsw
popf
adc
xchg
out
int
sub
jg
test
stc
cmpsb
sub
or
shll
jns
mov
repnz
push
add
push
jo
loopne
arpl
rorl
sti
repnz
xlat
sub
cmp
push
out
dec
or
xlat
nopl
or
pop
jg
cs
jle
dec
pop
or
movsl
lds
pop
fs
cmc
daa
mov
sbb
loopne
xor
xchg
popa
add
and
aad
out
add
cmpsb
iret
sub
rolb
sub
pop
mov
pop
dec
pop
pop
jnp
adc
sbb
xchg
gs
dec
sbb
or
sti
pop
in
and
inc
fidivrl
sub
pop
sub
lret
movsb
or
mov
scas
pop
jle
mov
adc
sbb
and
movsl
rcrb
rcrb
icebp
rolb
int3
add
mov
or
addr16
scas
js
into
cmp
xchg
sti
in
push
jmp
sbb
add
cltd
shll
imul
loopne
push
pop
int3
dec
popa
jle
and
mov
leave
xor
xor
pop
cmpsl
mov
sbb
or
in
adc
mov
movsl
popw
jp
add
addr16
sti
jo
adc
nop
xchg
sbb
int
push
or
sti
xor
dec
cmp
add
ds
in
push
rcll
jns
mov
fsubp
xor
popf
push
push
add
pop
or
fs
insl
or
jns
aam
dec
push
or
cwtl
iret
daa
and
mov
or
push
adc
aas
lret
into
cmp
mov
rcll
or
push
jo
inc
dec
cmp
pop
jle
fisubrl
xor
xor
sahf
sub
ja
imul
mov
mov
roll
push
pushf
arpl
das
pop
mov
and
andb
cmpsl
fisttpll
and
push
out
xchg
loop
popa
loopne
mov
and
pop
mov
rorl
adc
pushf
cmp
add
xchg
jns
xor
jae,pt
leave
rol
pop
pop
dec
cmp
out
push
lahf
push
mov
mov
outsl
dec
add
pop
and
js
xchg
mov
and
mov
fwait
in
int
pop
subb
cltd
inc
mov
sub
adc
cmc
jbe
xor
imul
sub
xchg
call
pop
cltd
out
inc
rcr
rcl
dec
leave
repz
insb
xlat
sub
sarb
movq
jne
or
and
push
dec
jno
lcall
push
jae
sbb
push
push
rcr
test
jno
xchg
pop
mov
imul
cmp
fnstcw
and
and
lea
push
lcall
or
test
jp
dec
dec
xchg
loope
dec
jmp
or
inc
mov
lcall
aaa
test
add
pop
and
jecxz
daa
or
leave
and
xchg
mov
adc
push
cmp
hlt
mov
arpl
imul
stos
cmp
je
xor
push
or
mov
call
lock
mov
les
jnp
arpl
rcll
or
sbb
dec
stc
loope
mov
mulb
push
sahf
outsb
mov
std
sbb
cmc
icebp
pop
sarb
xchg
jle
loopne
sbb
adcb
add
mov
sahf
inc
repnz
adc
lds
aam
in
sbb
hlt
dec
jno
push
jmp
add
sub
pusha
and
rdmsr
cmp
mov
icebp
clc
sub
subl
idiv
cmpsb
cwtl
lahf
sub
in
lds
push
xchg
mov
push
aad
mov
pop
jg
inc
das
adc
imul
out
xchg
xchg
stc
cltd
sub
out
push
and
les
aam
test
arpl
sbb
loop
and
cmpsb
push
push
lahf
ds
pop
xor
aaa
xchg
add
adc
mov
jp
jp
out
and
push
inc
sub
add
mov
jecxz
loopne
cmp
fsubrs
mov
mov
inc
cmc
insl
xchg
int
cwtl
adc
jo
mov
xchg
enter
add
xchg
jns
and
jae
dec
xchg
mov
jo
sub
pusha
cmp
jecxz
inc
dec
roll
inc
xchg
push
data16
test
loopne
mov
sbb
mov
in
or
mov
testb
rcrb
mov
sbb
jmp
dec
shlb
add
inc
sbb
add
cmc
mov
roll
fistpl
orb
adc
pop
mov
fldenv
aas
aad
dec
jbe
xor
scas
or
addl
lods
mov
push
nop
dec
pop
data16
dec
mov
mov
add
sar
std
in
pop
xchg
cmp
xor
pop
mov
or
fbld
pop
mov
jmp
jb
add
divl
idiv
push
int3
test
pop
adc
aam
adc
clc
and
cmp
rclb
out
cmpsb
adc
add
xor
adc
ljmp
or
out
shlb
push
mulb
inc
pop
shll
push
int3
jbe
subb
add
push
mov
push
pushf
scas
sbbb
add
cltd
bound
cli
add
insl
testl
push
lea
dec
mov
mov
jg
jns
js
mul
jnp
dec
jmp
mov
fdiv
push
shl
xor
out
mov
stc
aaa
pop
lret
jge
cld
jo
mov
movsb
mov
pusha
js
daa
outsb
insb
mov
lret
cmpsl
mov
xchg
push
xchg
test
out
lidtl
shl
lods
test
hlt
call
mov
test
cmp
das
ret
mov
mov
out
in
aas
or
adc
lea
popf
jo
loope
or
testb
xlat
fcmovnu
dec
out
insl
fsubrs
in
loop
fs
scas
sbb
mov
jo
repnz
xor
add
and
icebp
std
in
cmc
jle
jae
inc
mov
repz
xor
ret
cmc
das
add
add
push
pop
and
push
pop
fwait
out
cmp
jae
cmc
aam
and
sub
pushf
and
push
sub
adc
xchg
das
or
pop
jle,pn
hlt
jp
jns
out
insl
sub
dec
pop
and
and
movsl
add
cmp
nop
ljmp
xchg
and
nop
inc
cmpsl
mov
jnp
xchg
pop
sbb
mov
adc
mov
ja
and
mov
xorb
in
inc
push
lods
dec
mov
inc
insb
mov
push
icebp
or
test
adc
sbb
mov
arpl
xchg
stos
mov
add
rclb
adc
popf
pop
mov
mov
icebp
sti
push
push
pop
int3
pop
fcomip
xchg
mov
mov
adc
jo
jmp
and
mov
cmp
repnz
cltd
popf
mov
xor
jmp
es
mov
adc
push
imul
jl
or
loop
mov
add
dec
mov
push
mov
sbb
dec
pop
daa
xchg
movsb
push
cmp
mov
or
imul
into
sti
cmpsl
sti
pop
jb
mov
jno
nop
aad
cli
push
mov
jle
mov
sbb
mov
pusha
or
jg
inc
jno
mov
push
daa
adc
mulb
xchg
test
and
sbb
out
das
cmp
sbb
ret
lock
cwtl
or
mov
mov
dec
pop
ds
pop
cld
adc
or
push
jno
ljmp
xchg
aas
mov
adc
pop
fbstp
pop
push
sub
out
jmp
xchg
and
mov
movsl
lahf
bound
cmc
rol
push
mov
dec
mov
mov
mov
mov
movsb
rcrl
stc
mov
sub
mov
sar
xor
pop
xor
xor
cmpb
lret
int3
jp
pop
stos
or
inc
andb
subb
aad
out
scas
loope
aad
aas
xchg
jle
das
jne
pop
lock
jp
stos
pop
cmc
scas
pusha
out
sub
add
loopne
andb
xchg
dec
loope
add
xchg
scas
xor
pop
jmp
mov
nop
lret
xchg
ret
sbb
pop
add
int3
push
push
or
jg
adc
ret
in
mov
adc
jne
test
lret
ret
jp
lahf
insb
adc
xchg
jp
cmp
mov
lock
aad
mov
xchg
jb
xor
mov
xor
test
test
or
test
cmp
lock
iret
adc
fmuls
fdivrl
inc
adc
dec
xchg
mov
xchg
icebp
mov
dec
outsb
xchg
mov
stos
mov
pop
pop
leave
dec
cmp
bound
in
ret
sbb
out
call
xor
jp
ss
int
aam
mov
pop
mov
ljmp
lcall
mov
cmp
push
add
and
movsl
mov
dec
aam
orl
or
or
push
lcall
sarb
mov
jae,pt
arpl
push
nop
push
stos
pop
cmpsl
cltd
movsb
xor
add
clc
fstp
or
sbb
into
inc
sahf
cmp
push
mov
jbe
repnz
cmc
jg
scas
cmc
call
cmp
mov
fistl
dec
les
jmp
cmp
movsb
test
push
sub
xor
inc
cmpsb
jb
mov
push
dec
mov
ret
flds
dec
mov
adc
or
adc
add
arpl
cmp
fstl
roll
sbb
sub
gs
test
dec
jecxz
push
out
movsl
inc
jl
jb
int
xorl
int3
iret
mov
sbb
lods
cmp
jl
cli
or
push
stc
inc
ret
in
jb
xchg
iret
sbb
mov
stos
pusha
push
xlat
cmp
and
das
mov
sahf
cmc
sahf
or
or
sub
xor
pop
test
js
cmc
xchg
inc
test
mov
jo
jle
pop
mov
imul
xor
jne
jl
xor
pop
xor
pop
iret
xchg
fldenv
jle
das
stc
mov
vmovlps
sub
mov
cmp
xlat
cmp
loopnew
sbb
js
pop
into
or
je
sub
push
push
sbb
cmovge
lea
dec
testb
cmpsb
aaa
sub
and
mov
sbb
xchg
and
cmc
inc
test
jecxz
xchg
sti
cli
mov
movsl
add
daa
mov
push
sbb
test
push
dec
js
out
ret
jae
inc
push
int3
inc
and
int
sarb
pop
sbb
or
lret
jecxz
dec
and
jne
xchg
insb
arpl
aad
xchg
mov
fidivs
mov
aam
mov
arpl
das
inc
out
not
pop
jbe
dec
jl
clc
push
imul
movsb
push
jnp
shr
cs
mov
loope
jne
jo
in
pop
outsb
pop
sbb
adc
bound
cmp
sti
xchg
pusha
pop
pop
frstor
add
dec
insl
pop
cmp
xchg
xchg
int3
or
jecxz
rorb
adc
push
cmp
shlb
sbb
add
nop
cmc
icebp
push
or
mov
inc
pop
xchg
add
ret
pop
repz
pop
lahf
mov
out
mov
jp
nop
mov
add
pusha
movsl
out
sahf
jnp
cld
xchg
jno
hlt
push
lret
sub
pop
lods
sbbb
pushf
fidivrs
clc
mov
js
lahf
adc
fwait
adc
adc
or
addl
adc
add
jge
sbb
adc
and
icebp
lahf
jp
sub
out
xlat
dec
jge
ljmp
xor
xchg
aas
testb
ror
sub
cmp
testl
adc
iret
int
call
lcall
hlt
test
xchg
add
popf
cld
fstp
ret
out
movsl
inc
aas
pop
test
in
push
and
or
push
mov
inc
mov
pushf
push
clc
ret
cs
sub
mov
xor
adc
punpckldq
push
outsl
les
mov
sub
out
leave
and
fistps
aas
push
push
inc
stos
ret
scas
pop
out
mov
fwait
imul
addl
jbe
shrd
mov
dec
aam
adc
imul
xor
sub
and
dec
in
data16
cli
mov
sbb
call
or
scas
push
xlat
rcrb
les
lret
cmp
pop
sbb
mov
adc
daa
add
iret
inc
sbb
inc
xchg
aad
cmp
or
ret
or
add
lock
shrb
fiadds
push
and
add
andl
rcrb
xor
push
mov
shlb
inc
nop
repz
mov
push
sbb
cmc
mov
loopne
cmp
repnz
sbb
inc
ds
jge
aas
sbb
inc
xor
ret
fcoms
mov
cs
adc
addr16
push
call
add
sbb
repnz
iret
daa
aam
loope
pop
fcmovnbe
lcall
push
std
mov
add
add
insl
sbb
loope
inc
mov
lahf
sub
sbb
xlat
mov
sbbl
fnstsw
negl
inc
out
push
mov
inc
out
and
scas
ljmp
sub
and
cmpsl
gs
push
test
pop
pop
mov
pop
std
or
ss
andb
and
jge
fistpll
mov
out
test
rorb
mov
push
mov
add
pop
cltd
dec
in
outsl
xcrypt-ofb
cmpsl
stos
mov
inc
mov
dec
in
and
sarl
dec
jl
subw
mov
or
inc
dec
lret
imul
or
dec
test
xchg
xor
pop
sub
int
and
mov
mov
bound
testb
mov
rclb
iret
sahf
popf
loope
jno
outsl
test
add
test
add
pushf
xchg
sbb
sbbl
jb
lods
and
jnp
jecxz
flds
xor
mov
rclb
out
or
inc
xorb
mov
mov
xor
cmp
inc
push
xchg
push
mov
loop
jns
adc
or
jno
lahf
pop
push
sbb
aam
scas
mov
daa
mov
push
loopne
pop
imul
ljmp
jp
nop
mov
adcl
adc
mov
dec
pop
dec
xor
sub
or
inc
adc
xor
xchg
fcomps
sbb
jno
mov
mov
cmpsb
cmp
sub
shrb
cmp
cmp
add
hlt
fimuls
shrl
clc
mov
mov
mov
push
cmp
sub
fs
in
ret
call
inc
out
and
test
imul
adc
and
jne
int
mov
repz
mov
shl
mov
lret
push
pop
push
test
xlat
aam
out
jnp
push
fmuls
xorb
lcall
out
fcomps
scas
cmpb
femms
cmpl
jnp
scas
dec
cwtl
pushf
pop
push
xchg
fistl
sbb
lcall
insb
inc
mov
fisttpll
mov
mov
cltd
lock
jae,pt
xchg
stos
push
xor
popf
roll
lock
scas
jge
jg
and
mov
lods
ss
rcrb
xchg
jo
mov
pop
mov
imul
roll
lods
sbb
adc
leave
mov
test
scas
cmp
dec
test
dec
sbb
icebp
mov
fcoms
rolb
jns
adc
pop
repz
es
sub
inc
das
std
xchg
rclb
mov
cld
xor
fidivl
sbb
pop
push
jle
repz
int3
adc
fmuls
mov
pusha
mov
cmpsb
les
jnp
enter
or
cmovne
clc
push
in
jnp
imul
push
js
imul
or
scas
xchg
xor
shr
mov
inc
mov
out
subb
xchg
add
cmp
les
std
inc
loop
dec
ds
pop
cmp
pop
ds
pop
aam
push
xchg
sub
incb
jb
mov
dec
in
icebp
lds
cmp
inc
inc
pop
incb
dec
mov
xor
fcmovbe
popa
int
int3
mov
push
mov
and
or
rclb
or
inc
lods
roll
and
pop
xchg
lret
sbb
dec
clc
pop
dec
test
xchg
lcall
popa
lea
les
cmpsl
sbb
test
mov
int3
test
pushf
inc
adc
add
repz
fdivs
sahf
dec
insb
test
add
add
and
push
mov
mov
mov
sbb
jns
cs
ja
aad
xchg
fwait
addr16
xor
loopne
stc
int
cltd
test
add
pop
adc
cmp
xor
inc
mov
shl
cmp
lods
addr16
cltd
mov
adc
add
arpl
and
inc
stos
sbb
clc
dec
sbb
push
dec
call
jns
call
mov
jo
add
push
xor
inc
leave
or
popa
push
mov
xchg
push
test
xor
imul
shlb
jno
jnp
les
popa
clc
push
xchg
gs
mov
lock
mov
jne
ds
cltd
jnp
or
jp
mov
mov
leave
mov
jmp
repz
stos
repnz
push
aam
rcrb
outsb
addr16
xchg
dec
cmp
xor
stos
pop
rorl
xor
dec
aaa
lahf
sti
lea
insb
jmp
stos
icebp
or
xor
ja
addr16
inc
iret
push
pop
xor
xchg
xor
ljmp
inc
data16
cs
std
adc
mov
fwait
xchg
test
imul
fidivs
dec
fwait
pop
lcall
mov
or
loope
arpl
out
sbb
cld
sbb
movq
push
sub
movsb
mov
negb
and
lods
insl
cmp
fildll
cmpsl
or
inc
jns
xor
stos
xor
pop
fstps
loope
cwtl
add
out
lock
mov
jne
aad
loopne
cltd
sbb
fcomps
jno
push
adc
test
xchg
repz
inc
mov
pop
xchg
pop
imul
and
stc
inc
pop
mov
fmul
stc
mov
fists
loope
stos
bound
sahf
pop
cs
jb
jbe
push
sbb
cmpsl
sti
out
push
imul
leave
or
std
out
orl
cmp
cwtl
bound
adc
aaa
lds
xchg
lahf
sahf
das
lret
pusha
mov
xor
dec
pop
rol
stos
sahf
fwait
outsl
mov
xor
and
add
fsubl
lahf
in
add
scas
aad
jl
xor
lods
outsl
add
jg
jae
and
or
lret
mov
lds
fcompl
pop
push
xor
in
or
or
test
mov
cmp
adc
enter
mov
mov
add
or
mov
push
push
mov
pop
icebp
outsb
movsb
lret
out
out
into
dec
pop
xlat
dec
xchg
lret
pusha
out
sbb
pop
dec
cld
jg
arpl
repnz
cmp
mov
repnz
pop
pop
daa
test
push
and
ja
negb
inc
xor
push
in
data16
lcall
stos
jb
cld
cmp
or
lods
or
add
scas
shlb
into
repz
mov
jg
inc
roll
inc
popa
adc
repz
mov
shll
jge
sbbb
fimuls
xchg
add
dec
xchg
mov
lock
icebp
scas
mov
sbb
inc
jle
cmp
sbb
mov
push
and
es
roll
ss
jle
inc
mov
pop
mov
pop
sbb
std
adc
cltd
xor
sub
ficoml
xor
ja
or
fiadds
adc
sub
lcall
push
ret
or
fists
adc
add
shl
mov
sub
lcall
mov
mov
jecxz
clc
out
int3
pop
stc
int
xor
push
ljmp
lahf
shrl
imul
xchg
jo
nop
inc
lret
or
add
fildl
xlat
mov
icebp
mov
pop
adc
ss
sbb
or
push
xor
stos
lock
xchg
stc
into
aaa
xchg
mov
insl
fsts
sbb
lcall
daa
test
mov
test
aam
push
xchg
mov
jecxz
dec
xor
in
xor
jle
mull
push
mov
fists
fs
sub
push
into
mov
dec
je
cmpsb
xchg
pop
dec
dec
xchg
or
sub
lcall
inc
ja
les
ja
mov
loopne
icebp
imul
test
std
sahf
pop
adc
cmp
or
add
sbb
sahf
js
out
xchg
cltd
sbbb
cld
clc
xor
pop
xchg
add
cmpsb
in
gs
fisubrs
mov
jp
push
pushf
movsl
fsubp
ret
movsl
xor
scas
mul
mov
ficompl
dec
adc
mov
adc
xorl
repnz
mov
mov
pop
xchg
arpl
dec
testl
mov
sarl
shrb
jmp
pop
push
inc
leave
mov
xchg
sahf
and
daa
pop
pop
fmull
scas
jmp
mov
add
movsl
bound
outsl
ljmp
mov
cmp
iret
pop
pop
inc
mov
dec
ret
dec
xchg
inc
cmp
aaa
jne
dec
xor
stc
lret
sbb
out
sbb
xchg
xchg
push
cltd
fiaddl
push
xchg
out
mov
jmp
adc
mov
sbb
adc
js
cs
cmpsb
cmp
cli
add
int
push
adc
jns
inc
or
or
pop
scas
loopne
adc
pop
sbb
imul
pushf
bound
xchg
jno
lcall
incl
repnz
sarl
aaa
enter
leave
fs
xchg
dec
cmpsl
xchg
sarb
jl
in
add
int
out
fidivrl
fisttpl
ss
cmp
jge
movsb
fs
xor
sbb
aaa
stos
rolb
pop
div
movsb
jbe
cli
dec
pop
fistpll
jbe
addb
cmp
add
subb
ljmp
fsubr
sbb
int
ja
cmp
jns
jmp
inc
out
popf
test
lret
fildll
loop
mov
dec
sahf
inc
cld
xchg
mov
jle
imul
push
cmpsb
not
inc
mov
cwtl
dec
mov
inc
jne
adc
test
pop
ret
cmpsb
sub
jns
es
fildll
into
jp
cmpsl
popa
pushf
mov
or
jge
push
sarl
cmp
push
int
inc
cs
mov
adc
fsubrl
cmp
insl
scas
fwait
jno,pn
and
imul
jg
in
aas
push
adc
fs
lock
repnz
rolb
loop
mov
mov
mov
sbb
arpl
push
int
das
ss
test
test
add
xor
and
sbb
jmp
cltd
jmp
inc
add
jno
stos
or
loopne
in
dec
lock
jmp
add
lcall
leave
pop
insb
out
aam
loop
dec
xor
shrb
imul
test
jp
lret
pop
mov
movsl
iret
stos
pop
sahf
lcall
fs
in
jns
adc
lahf
das
or
dec
ficoms
repz
lret
and
test
aas
and
sbb
xor
les
stc
or
scas
inc
lahf
dec
mov
pop
and
lods
inc
andb
setno
cld
mov
sahf
inc
push
bound
add
mov
test
pop
mov
cmp
lcall
imul
xor
ficoms
icebp
push
dec
inc
shrl
out
dec
pop
sbb
mov
movsb
push
inc
es
call
loope
mov
fists
mov
inc
sub
aas
add
out
push
fwait
test
mov
sub
rcrb
out
mov
adc
xchg
mov
stos
jecxz
lret
repz
rclb
and
push
xchg
jle
mov
aaa
dec
mov
push
push
hlt
dec
lea
daa
pop
or
inc
aas
mov
mov
dec
cld
jae
cmpsl
adcl
fdivp
in
mov
fisubl
mov
je
cmpsl
xchg
xchg
shrl
inc
inc
jne
push
pop
scas
ja
ja
insl
add
cmpsb
dec
mov
pop
fnstsw
xchg
inc
addr16
mov
xchg
cld
xorb
test
inc
nop
sbb
fildll
push
xlat
push
xor
jnp
jb
imul
popa
lock
or
cmp
cmp
mov
jge
lret
add
push
stos
addb
pop
scas
cmp
add
jb
pop
flds
cmp
jno
test
scas
push
sbb
jge
and
dec
lret
xor
xor
fsubl
dec
mov
mov
hlt
add
xor
sbb
adc
fldenv
inc
jle
dec
dec
or
mov
or
pushf
adc
mov
shrb
mov
mov
pushf
es
xchg
setns
jne
loop
inc
lock
lods
adc
cltd
dec
jno
data16
fisubrs
jecxz
adc
popf
imul
xchg
jno
insb
add
fldt
pop
push
fs
xchg
push
jg
call
ss
dec
add
fidivl
sbb
inc
add
cmp
pop
test
out
addr16
mov
adc
rcll
outsl
imul
aad
int
or
out
add
jns
cmp
add
es
adc
scas
test
or
cmp
data16
cmp
dec
push
mov
or
iret
rolb
movsb
out
int
aas
inc
in
or
jb
xor
test
insb
cs
nop
pop
xor
cmp
push
sub
cmpsb
mov
rorl
xor
xor
mov
leave
push
shr
cmp
push
imul
jge
stos
dec
add
pop
jmp
fs
and
call
jecxz
mov
mov
pop
pop
jecxz
loopne
loope
xchg
divb
ljmp
lock
dec
insl
in
into
jle
pop
cs
mov
sbb
pop
jbe
mov
lahf
mov
add
inc
sub
mov
test
insl
sbb
push
jns
ret
fmuls
fbld
imul
jmp
dec
mov
inc
and
mov
xor
out
inc
popa
push
jge
loopne
mov
jae
mov
xor
xor
jb
fnstsw
mov
dec
repz
xorl
data16
bound
ds
sbbl
mov
cwtl
sbb
pop
test
stc
pop
outsb
inc
jp
movsb
cmp
scas
insb
adc
pop
mov
push
mov
in
mov
lret
mov
sub
stos
pop
in
and
mov
pop
xchg
jo
inc
popa
push
jmp
filds
jb
or
fcoml
jnp
pushf
pop
add
sub
movl
mov
dec
and
jl
add
dec
and
jnp
sbb
sbb
inc
inc
imul
out
lret
add
or
xor
push
jbe
out
cmc
jge
lods
leave
fcomp
or
sbb
out
jns
jecxz
add
jmp
push
popa
das
pop
xchg
cmp
fnsave
cmp
lcall
icebp
shlb
pop
ds
inc
leave
push
clc
std
fwait
jp
mov
mov
jg
cmp
push
std
pop
cmpsl
nop
jle
jp
rcll
int3
out
mov
sub
adc
or
sbb
stos
adc
pop
mov
rolb
xor
into
ja
xlat
push
xor
sub
mov
enter
jecxz
in
inc
jo
invd
fidivrl
fisubrl
push
xchg
adc
and
out
std
jl
ret
lods
test
aas
dec
xchg
sub
xlat
xorl
mulb
pop
out
cmp
inc
gs
daa
or
cmpsl
add
inc
inc
mov
mov
or
fcomps
add
lods
sub
loop
pop
mov
sub
and
icebp
or
pop
adc
vphadduwd
enter
imul
and
addb
sbb
hlt
mov
repz
push
lret
xor
ret
in
aas
jbe
adc
dec
into
mov
jle
std
pop
fmul
fists
mov
and
ja
mov
out
lock
ss
jmp
jl
mov
inc
mov
mov
or
mov
sub
mov
mov
aad
sub
js
push
sti
jecxz
jg
movsb
out
pop
pushf
lock
mov
loopne
outsl
xchg
sti
xchg
push
shlb
or
pop
aas
in
mov
insb
ret
shll
out
je
or
das
jne
dec
pop
xor
imul
daa
mov
scas
rol
add
sbbb
xchg
jle
cmc
jge
inc
and
inc
or
cli
jb
inc
mov
add
or
js
xor
fcoml
or
iret
addr16
or
push
sbb
in
lds
mov
add
daa
dec
lds
xchg
hlt
jl
dec
mov
xchg
xchg
pop
imul
hlt
mov
adc
mov
add
jb
push
negl
out
add
in
andb
stc
jb
xor
jge
push
adc
and
pushf
jb
adc
mov
push
aaa
jmp
arpl
jne
insb
sub
shll
scas
and
sub
pop
mov
outsl
cli
push
or
fistps
fistpll
shrl
sbb
xchg
pop
out
enter
xchg
cmp
insl
xor
add
push
sti
cmp
fmul
lock
in
xchg
push
in
push
xor
mov
mov
sub
dec
add
jle
mov
cmp
inc
xchg
ret
push
mov
jp
aaa
loope
and
aam
or
and
or
gs
int3
ljmp
jne
jbe
cltd
pop
test
lcall
in
std
test
lahf
pop
adc
mov
js
inc
mov
out
xor
into
ret
mov
imul
add
mov
jp
add
inc
mov
jnp
jb
sub
enter
jmp
mov
mov
jo
cmp
and
insl
sti
aaa
stos
sbb
pop
dec
roll
sub
pop
imul
scas
mov
ret
cmp
mov
icebp
push
add
sbb
and
ja
fistl
dec
xchg
cmp
jmp
ljmp
loope
hlt
cmp
xchg
xchg
sti
jecxz
jecxz
push
imull
push
pop
push
pop
aaa
push
mov
stos
sub
addl
mov
cltd
mov
js
loope
and
pusha
fyl2xp1
out
mov
and
inc
sub
dec
fwait
loope
jno
pushf
icebp
sub
jmp
out
repnz
cmp
cmp
jne
aas
nop
add
cmpsb
dec
mov
dec
mov
push
int
mov
dec
cmp
aam
jns
xchg
sub
inc
cwtl
mov
int3
pop
dec
pop
lock
cld
aaa
and
mov
jb
pop
cmc
pusha
stos
mov
sbb
jge
aas
or
sbb
cmp
jecxz
add
sub
sarb
push
cmp
adc
push
dec
and
shrb
loop
adc
push
xchg
dec
inc
push
mov
rcrl
or
fisttpll
pusha
jp
xor
lods
push
mov
or
dec
or
aaa
fsts
dec
or
insl
pop
or
test
mov
iret
dec
jbe
jno
push
and
aas
sub
mov
test
jno
insb
jae
test
ret
push
call
jbe
loopne
out
ja
jb
insb
es
xor
shrl
out
mov
icebp
sbb
fldenv
pushaw
shll
jecxz
push
out
repnz
push
or
lahf
inc
xchg
jmp
push
fucomp
pop
mov
das
std
mov
lds
ror
or
fs
pop
mov
xchg
sub
gs
jnp
mov
push
addr16
jmp
inc
cwtl
jle
cmp
mov
ss
dec
nop
pop
xchg
out
or
outsb
out
pop
push
dec
movsb
cmp
fsubl
mov
mov
fnstenv
popf
inc
testl
ja
subb
loop
ss
aam
dec
out
inc
arpl
pop
xor
das
xchg
mov
jl
mov
inc
repnz
xchg
std
push
cmc
adc
lcall
jne
mov
mov
xor
push
push
cmp
sbb
mov
in
jb
fcmovu
push
xchg
sub
ret
adc
dec
test
ud2
jmp
and
sub
xabort
xchg
aad
or
sbb
pop
and
pushf
xor
in
sub
pop
cmp
stc
or
adc
out
test
shll
and
dec
sbb
cld
in
mov
aaa
fs
cmp
movsb
repnz
in
or
ret
xor
jbe
test
das
daa
in
scas
ret
dec
sbb
xchg
inc
inc
nop
sbb
push
fistpll
xor
mov
pop
mov
cmc
cmp
dec
push
and
push
jp
push
fdivp
dec
lcall
loopne
push
into
outsl
jp
dec
push
setae
aaa
sahf
scas
xchg
mov
ljmp
aad
add
xchg
pop
or
pop
stc
inc
test
push
mov
out
fwait
push
stos
into
sub
jae
pop
lods
adc
adc
adc
cmp
outsb
add
sub
add
pop
scas
cmp
mov
dec
push
int
lea
sub
pop
aam
addr16
mov
push
mov
or
icebp
xor
xor
adc
rorb
inc
repz
pop
decl
loopne
movl
jg
xchg
bnd
lea
xor
add
dec
lods
es
ljmp
test
mov
sub
enter
movsb
add
ret
cmc
or
mov
dec
or
jle
cmp
sti
scas
cmc
xchg
rcr
inc
pop
nop
adcb
sub
addr16
pop
pop
push
into
daa
cld
jne
adc
stc
sti
fdiv
int
xor
xlat
dec
mov
push
out
dec
repz
mov
andb
mov
mov
cli
xor
mov
sti
test
and
inc
rolb
jne
ja
mov
jmp
sbb
adc
sbb
mov
insl
lret
add
xor
ja
mov
dec
mov
mov
cmp
imul
ja
sub
add
cmp
adc
or
cli
aam
je
ss
cmc
ds
mov
xchg
cmp
movsl
and
cli
inc
scas
movsb
stos
rcll
cmp
jecxz
and
pusha
arpl
fwait
decb
loop
in
pop
push
mov
pusha
push
cmpb
int3
and
out
or
xchg
mov
mov
push
mov
add
fiaddl
cld
cmp
cmc
ss
out
mov
xchg
call
inc
xor
mov
imul
add
mov
pop
jae
cmpsb
sbb
push
daa
lahf
mov
or
mov
std
das
inc
adc
in
add
cs
xchg
jecxz
lds
adc
mov
push
divb
into
sbb
push
xchg
jecxz
and
sbbb
aam
test
sub
xchg
jmp
insl
in
mov
sub
mov
mov
lods
cwtl
xor
pop
std
add
stos
aaa
cmp
jae
pusha
movups
or
adc
xor
insb
ja
sbbb
je
dec
scas
xchg
cs
into
arpl
inc
mov
daa
and
adc
mov
dec
clc
leave
scas
xchg
add
ds
cltd
sub
loope
in
mov
rol
ds
and
xchg
cli
or
lret
lea
stos
push
inc
rcrl
shrb
in
inc
and
xor
mov
ds
dec
sub
sub
repnz
adc
or
addr16
pop
xchg
cmp
mov
popf
sahf
sbb
outsl
push
pop
stos
stos
fcomps
mov
loop
jb
sbb
mov
fistpl
xchg
sbb
jnp
es
sbb
leave
pop
adc
rcl
xchg
sarl
xchg
push
push
aam
testl
cmpsb
mov
lods
mov
push
ljmp
push
ret
jno
dec
pusha
and
push
in
pop
push
call
xchg
test
mov
outsb
mov
pop
sub
stc
mov
jge
pop
shlb
mov
mov
push
adc
mov
gs
aaa
data16
gs
push
fcompl
mov
fwait
and
adc
add
call
jne
test
push
inc
idivl
loope
les
mov
inc
sahf
mov
clc
sub
xchg
or
cmp
dec
dec
lret
add
adc
fisttps
inc
out
cmp
dec
inc
sub
dec
out
mov
subb
dec
imul
dec
scas
sbb
xchg
sub
arpl
mov
in
cmp
ljmp
cmpl
in
xorl
sub
sub
pushf
aad
add
and
imul
push
sub
shl
pop
sbb
nop
mov
mov
js
jo
rorb
rcll
jns
jle
out
or
pop
jbe
test
cli
lods
inc
dec
pop
sub
gs
mov
enter
ret
fld
pop
movsb
je
js
mov
lea
ds
lods
ljmp
insb
in
jg
mov
adc
jb
xchg
sbb
xor
stos
xchg
les
cmp
adc
jo
out
jno
cs
and
mov
mov
mov
ja
popa
or
mov
mov
push
xlat
inc
and
push
sarb
and
adc
leave
jl
cwtl
pop
scas
add
dec
push
dec
push
lahf
mov
jo
rorl
mov
fstps
lret
pop
adc
dec
or
mov
add
adc
jo
and
fnstenv
in
lret
mov
shrb
mov
adc
push
and
cmpsl
mov
je
xchg
dec
jg
cli
xlat
jns
mov
scas
push
pop
add
adc
ja
mov
or
repz
mov
imul
int3
fsubrs
add
popa
xor
cmp
aas
in
add
stos
lea
inc
cli
push
cmp
pop
xor
sbb
push
sub
int3
jb
cwtl
test
cmp
bound
adc
jg
addr16
mov
sub
mov
data16
mov
popa
in
jle
sbb
fisubrl
imul
cmp
das
pop
shll
testl
mov
dec
mov
mov
clc
jecxz
imul
jns
and
or
pop
aad
call
mov
or
int
cmpsl
sbb
clc
aas
fstpt
xchg
cmp
cltd
jns
xor
dec
push
je
or
in
xor
push
outsb
ja
sbb
sub
loop
std
push
pop
jne
lcall
add
push
add
xchg
pop
nop
push
pop
push
in
sub
loope
push
repz
jmp
fistpll
add
mov
pop
mov
push
adc
xchg
xchg
in
aam
xor
sarb
sbb
leave
sarl
jle
in
callw
mov
xchg
fcomi
xchg
test
pop
mov
inc
add
stos
cmp
hlt
fisubrs
stos
mov
mov
xor
xchg
xor
and
sub
aad
add
dec
add
pop
dec
cld
jmp
sbb
jge
pop
and
lret
out
mov
mov
cli
fimuls
ret
push
loop
sub
xor
xor
add
push
stc
mov
and
mov
jle
andl
shll
xchg
push
cmc
mov
lea
cwtl
add
add
outsb
scas
loopne
je
push
shl
xlat
mov
or
sbb
pop
dec
fldl
shl
adc
xor
cwtl
out
and
jge
test
dec
arpl
xchg
aad
aad
xor
hlt
xchg
jl
aad
sahf
fistpl
lods
ja
xchg
push
loopne
add
lahf
loope
xlat
movsl
inc
les
repz
pop
andl
icebp
sub
loopne
push
rcrl
cmp
and
mov
inc
arpl
popf
das
test
and
sbb
stos
out
mov
mov
call
das
lods
mov
aam
inc
pop
bound
push
cli
ret
inc
jno
lret
les
fwait
int3
scas
dec
xor
mov
push
cld
out
aad
fcmovbe
arpl
add
in
inc
and
dec
test
sbb
outsl
jae
add
sarb
ret
cmc
in
sub
test
add
lret
push
pop
cld
test
ja
sbb
or
dec
in
jno
push
inc
popa
lods
je
insl
dec
jno
insl
rclb
test
mov
adc
dec
pop
cmp
lcall
rolb
cwtl
int3
into
inc
push
enter
cli
adc
das
sbb
int3
adc
enter
sub
dec
dec
test
out
cmpsb
leave
ret
cltd
and
push
stos
jo
cltd
dec
mov
aas
pop
push
xchg
adc
pop
jmp
dec
fidivrs
sub
fistpl
push
sbb
push
movsb
in
and
sub
adc
fbstp
mov
add
cmp
lret
mov
fistl
pop
in
outsb
mov
outsl
or
lea
daa
jg
cmc
push
std
xchg
cmp
jmp
jge
add
arpl
pusha
add
sub
add
xor
enter
scas
sbb
jne
pushf
push
sti
sbb
test
aad
xchg
addl
push
pop
xchg
jne
sbb
jbe
popa
call
sbb
dec
adc
mov
cltd
dec
ss
jnp
lcall
dec
or
add
mov
sub
in
lods
enter
ret
xor
add
outsl
sbb
jbe
ret
xchg
cmp
fwait
mov
and
ljmp
cmpsl
mov
jae
je
xchg
pop
xlat
scas
push
dec
xchg
mov
dec
xlat
addr16
xchg
movsl
adcl
addr16
rorl
mov
push
dec
fimull
pop
and
out
roll
add
cwtl
ficoml
in
sub
movsb
lods
fdivrl
jae
std
and
push
add
sti
fwait
movsb
and
aaa
push
jbe
loop
shrl
cmp
je
int
icebp
lods
leave
sbbl
cmpsl
and
mov
xchg
push
adc
bound
adc
adc
pop
push
out
fisubrl
jge
in
push
mov
lret
jmp
adc
mov
lcall
push
jns
int
pop
loopne
add
fdivs
enter
in
mov
mov
mov
movsb
xchg
ljmp
call
lock
test
outsl
fildl
cmp
call
ja
imul
jmp
adc
ret
lret
mov
repnz
cmpsl
inc
adc
dec
imul
iret
sbbb
fnsave
pop
psadbw
daa
int3
push
adc
fstpl
rorb
sbb
and
cmpsb
push
out
xchg
clc
add
shl
or
aas
sbb
jns
and
out
sbb
push
push
fisubs
clc
lret
pop
or
dec
mov
out
ret
cmpl
lahf
pop
sub
stc
in
rolb
adc
test
lret
lods
adc
imul
pop
aam
and
ret
dec
adc
fisubrs
xor
sub
mov
stos
inc
scas
sti
js
shr
jl
in
mov
jge
jae
pop
stc
cld
lods
or
xchg
add
fcoms
dec
or
jg
bound
sub
lret
dec
lret
imul
xchg
test
jo
fsubr
fistpll
push
popf
stos
sbb
pop
push
mov
add
push
adc
cmc
fcoml
pushf
pushf
aaa
dec
outsb
and
mov
imul
sbb
cmp
pmulhw
testb
imul
sbb
sti
stc
cwtl
cmp
iret
push
lret
pusha
enter
pushf
jnp
fcmove
inc
xchg
incl
and
dec
cmpsl
pop
aam
add
mov
push
fsubrs
inc
leave
mov
xor
add
jo
sbb
cmp
test
sub
jmp
lea
cmp
inc
xor
imul
push
scas
out
adc
push
decb
addb
cltd
scas
outsl
stos
rcrl
call
xor
fisubrs
pop
imul
lds
or
in
push
dec
sbb
mov
jb
cs
cwtl
mov
and
call
inc
fldcw
dec
and
cmp
loopne
fs
imul
add
xchg
push
dec
in
jge
xchg
pop
rorb
lret
stos
push
or
daa
dec
test
pushf
mov
lcall
add
or
repz
sub
nop
jnp
mov
xchg
shrl
inc
jnp
cmp
xor
pop
dec
lods
ljmp
dec
pop
testl
mov
into
mov
cmc
xchg
ds
loop
pop
cmp
cs
xlat
ds
mov
push
loope
xor
arpl
mov
pop
lea
je
mov
add
lea
add
sub
jno
inc
mov
cli
lds
add
jmp
test
and
pop
lock
dec
xchg
push
clc
add
scas
into
rclb
push
lahf
mov
xor
std
pop
sub
inc
lret
pop
sbb
aas
jo
cmc
jge
movsb
jle
fstps
inc
inc
mov
imul
test
dec
shrl
push
dec
jbe
lret
push
inc
inc
lods
and
inc
fadds
dec
mov
daa
fildll
test
cmpsb
lret
fwait
inc
in
cmp
sarb
shll
fsubp
aad
push
jle,pt
mov
call
mov
popf
pusha
xorb
lret
imul
pop
inc
cltd
adc
ret
mov
jl
adc
ret
pop
pop
fnstcw
es
dec
lret
fistpl
add
aad
jl
sbb
or
popf
sub
pop
or
and
mov
adc
and
pusha
add
out
out
add
mov
sahf
push
push
cmp
lret
jmp
adc
movb
xlat
xchg
mov
jp
bound
ret
push
mov
hlt
int
insb
aam
repz
inc
in
xor
dec
cwtl
aaa
jp
adc
sub
std
aam
jecxz
push
pushf
xchg
adc
pop
outsb
jl
fistpl
adc
insl
rcrl
push
mov
in
lods
cmp
stos
frstor
or
out
cmp
sub
and
xor
mov
rcrl
pop
cmp
mov
push
add
pop
xchg
daa
ss
aad
test
cmp
mov
faddl
pop
cmpsb
add
cwtl
push
xchg
icebp
adc
add
lret
out
aaa
lods
test
push
sub
int
adc
pop
mov
leave
addb
shrl
sub
popf
mov
pop
mov
xchg
xor
cmpsl
mov
iret
jl
xlat
adc
add
mov
pusha
dec
loop
cmp
sbb
pop
bound
cmp
dec
push
les
in
fwait
jecxz
jge
aaa
and
pop
sub
cltd
sub
sti
jnp
fwait
mov
push
movsb
sti
cwtl
jbe
stc
addr16
negl
aas
pop
sub
aaa
mov
out
shrb
jo
and
insl
lods
popa
jb
movsb
dec
data16
dec
dec
and
rcl
data16
or
aam
inc
in
jl
push
fmull
ja
sahf
dec
std
add
add
push
and
jnp
cwtl
cltd
cmpsb
mov
lods
adc
shlb
jle
pop
adc
or
shlb
insb
mov
jmp
mov
mov
aaa
adcb
arpl
mov
stos
mov
pop
push
jnp
psubusw
outsl
add
negl
mov
add
mov
loope
jno
out
xor
addr16
das
idivb
lea
jl
xchg
cmp
cmp
add
adc
ret
daa
test
pop
dec
insb
pushf
mov
push
sbb
fisubs
pop
and
cmpsl
ljmp
jmp
adc
out
cmp
dec
icebp
dec
mov
sub
mov
dec
mov
xchg
pop
flds
in
xchg
sarl
cmp
xor
lock
xor
add
adc
ds
jl
cmp
pop
or
stos
sbb
lods
xchg
movsl
cmp
xor
xchg
pop
adcb
sbb
sub
pop
and
sub
mov
into
sub
adc
inc
xor
sub
into
cli
xchg
dec
daa
jae
xchg
fwait
rorl
xor
movsl
hlt
adcb
xchg
out
sub
fstpl
bound
in
jae
pusha
pop
lods
adc
mov
mov
mov
sub
push
iret
xor
clc
mov
inc
shl
and
push
cmpl
gs
stc
scas
pusha
sbb
lock
mov
les
pop
jecxz
out
push
adc
aas
icebp
lcall
add
es
pop
adc
sub
mov
cli
jns
arpl
xchg
lret
dec
push
push
fadd
mov
out
sub
cmc
and
aas
adc
dec
in
sub
pushl
mov
dec
jp
pop
test
push
movsb
sub
xchg
mov
push
mov
pop
mov
int3
inc
mov
pop
and
jmp
push
pop
pop
dec
add
pop
and
cmp
repz
push
fwait
push
lods
int
sbb
pop
dec
dec
jb
mov
inc
daa
scas
sub
add
and
push
xor
push
cmp
leave
mov
das
sub
movsl
lods
inc
jne
out
popa
rclb
mov
dec
mov
jp
dec
pop
mov
jge
sub
inc
lcall
push
mov
outsl
mov
sub
mov
sub
aaa
pusha
loope
test
leave
outsb
std
adc
enter
les
les
jge
out
pusha
inc
mov
cltd
data16
cmp
adc
or
mov
jno
pop
and
popa
mov
mov
mov
test
inc
push
cltd
fmull
out
data16
in
add
inc
xchg
dec
pusha
push
or
add
sbb
out
outsb
pusha
aaa
sbb
fimull
push
addl
inc
mov
pop
cwtl
call
cli
push
jle
push
adc
add
in
popf
cs
push
mov
add
inc
jnp
or
mov
xchg
dec
add
add
ss
imul
adc
or
xchg
roll
cs
and
insb
outsl
xchg
jb
pop
jo
insb
ljmp
icebp
dec
pop
ficoms
orl
rolb
xor
repz
fisttps
inc
in
jnp
push
mov
movsb
aad
lldt
in
jae
mov
push
inc
mov
iret
sub
sbb
adc
push
cld
lret
fiaddl
lret
mov
outsb
pusha
cld
push
out
jge
inc
shlb
stos
dec
ljmp
arpl
out
xorl
pop
sub
xor
jns
xor
cmpsb
xor
or
mov
roll
mov
push
mov
add
pop
movsb
push
xchg
mul
mul
jecxz
std
jnp
dec
sahf
fsubs
cli
pop
push
ret
cmp
jo
filds
pop
cmpb
insl
push
add
out
dec
pop
jle
sub
sub
dec
stc
sbb
call
roll
or
sub
scas
fs
mov
adc
lea
jb
aad
ds
mov
adc
dec
pop
lea
sbb
divb
popf
popa
lcall
sbb
scas
outsb
mov
mov
int
jge
or
pusha
inc
cmc
ffree
aas
ret
imul
insl
and
loop
add
stos
fwait
mov
sbb
hlt
test
sub
xor
into
xchg
lahf
cwtl
sub
dec
pop
fwait
stc
jb
inc
adc
lahf
xchg
fsubr
or
or
xchg
sahf
cltd
push
repnz
inc
test
dec
arpl
sbb
rcl
gs
or
push
test
jo
ds
daa
enter
fistps
mov
push
ja
rcll
sub
fs
xor
add
inc
out
daa
or
cmp
push
inc
scas
sbb
inc
jnp
aad
out
popf
or
pop
fsts
mov
stc
add
jle,pt
mov
push
sbb
push
sub
jb
int3
addr16
mov
lods
cmp
std
insl
sub
out
dec
aam
sub
stos
icebp
mov
cs
les
imul
iret
xor
out
sub
daa
add
les
add
jns
pop
jge
cmp
mov
nop
mov
jecxz
rcrb
inc
mov
test
xor
test
xchg
lret
sbb
mov
iret
aad
pop
inc
jns
scas
in
dec
sti
sbb
je
je
mov
addr16
cmpsl
mov
cmp
ret
pop
scas
fs
xchg
stc
and
cmp
cmp
jnp
pop
fwait
imul
cwtl
loopne
mov
sbb
pop
aad
stc
adc
aad
js
and
in
sbb
daa
adc
and
aad
gs
fsubp
sub
mov
push
jecxz
cmc
fdiv
push
daa
inc
add
call
inc
add
js
mov
xchg
dec
lcall
pop
inc
dec
or
clc
adc
sbb
xor
movsb
sub
divl
xchg
popa
out
aaa
mov
sbb
lahf
repz
stc
das
jge
icebp
icebp
sarl
xchg
adc
xor
mov
daa
ret
gs
pop
xor
enter
jbe
jno
push
push
cld
jne
test
add
adc
and
lds
push
inc
mov
mov
fnstsw
sub
cmp
dec
jo
mov
aaa
rolb
fstpt
xchg
jae
jmp
sbb
and
mov
mov
lcall
jge
sbb
jne
cmp
xchg
inc
femms
or
shlb
imul
xor
movl
jne
pop
pop
into
mov
lahf
sub
inc
popa
jecxz
and
cmp
int
aaa
in
push
ja
jge
push
leave
pop
mov
add
xor
xor
push
imul
js
outsb
cli
fidivs
jb
out
pop
mov
in
jnp
jae
or
js
out
mov
jge
dec
insb
jle
and
inc
pop
mov
dec
cs
dec
or
cmp
mov
rcrl
sbb
outsl
push
sub
mov
mov
pop
and
xlat
aad
mov
dec
jns
push
xchg
cmp
mov
or
cwtl
aad
or
lahf
push
rorl
loop
bound
fdivl
mov
insb
and
scas
mov
jne
adc
negb
popf
cmpb
push
pop
lcall
dec
mov
cmpsb
repnz
or
mov
pop
pop
pop
loop
sbb
or
popa
mov
dec
jge
in
and
addb
inc
ret
ss
imul
cltd
xchg
into
fldl
stos
arpl
lods
add
jp
inc
fcmovb
fwait
lret
jns
loop
jae
dec
clc
shll
or
pusha
lahf
push
jle
mov
addl
mov
mov
jbe
jb
or
lret
repz
xchg
out
sbb
lods
je
pop
jecxz
or
xchg
hlt
mov
sub
insl
xchg
mov
fs
aam
ficomps
mov
mov
pop
adc
lds
sbb
lahf
loop
mov
cmp
jecxz
sub
push
adc
adc
les
or
aaa
jl
and
add
mov
aaa
cmpsb
stos
mov
xor
test
out
sub
into
sahf
mov
roll
push
pop
test
sti
add
ret
add
mov
imul
lea
sbb
es
inc
imul
repnz
dec
mov
loop
push
jp
hlt
mov
negl
mov
call
mov
jle
into
inc
cmpl
cli
xor
ret
clc
inc
push
aas
pop
mov
push
sub
xchg
dec
jl
adc
adc
repnz
mov
inc
clc
popf
divb
jo
or
xchg
and
sbb
popf
push
das
cmpsl
lahf
mov
stos
xorl
movsl
sbb
or
addb
aas
sti
pop
repz
or
rclb
test
iret
xchg
jg
pop
sbb
push
mov
jecxz
cmp
xor
push
lea
dec
cwtl
jnp
ret
dec
sub
popf
or
adc
sub
fcmovne
into
cmp
add
jnp
inc
pop
movsl
and
loope
mov
cmp
or
cmp
call
inc
xor
icebp
jb
pop
mov
aas
push
jbe
xor
add
imul
xchg
rclb
mov
adc
cmpsb
push
imul
xor
mov
or
adc
dec
je
mov
sbb
mov
test
sbb
inc
jmp
jmp
es
mov
inc
or
and
or
jnp
in
cmp
shrl
daa
sub
mov
fcomps
jl
cmpsb
xchg
jge
push
bound
inc
imul
mov
fchs
mov
xor
xchg
mov
push
jecxz
je
imul
imul
pushf
outsb
xchg
rol
and
adc
dec
in
sbb
push
fwait
xor
mov
adc
int
pop
dec
inc
ds
leave
cld
js
bound
shl
xor
sub
sbb
jecxz
mov
and
push
dec
imul
and
jge
call
jmp
mov
scas
shll
lds
inc
rcl
xchg
mov
jge
pop
aaa
cmpl
ficompl
push
jo
outsl
xchg
imul
fcmovnbe
dec
cmp
xchg
jecxz
aas
pop
jns
icebp
shll
cmpsb
mov
add
je
adc
jne
sub
mov
pop
pop
mov
cli
or
jnp
mov
bnd
xor
daa
fcoml
mov
inc
sbb
add
stc
aas
mov
mov
lods
out
and
loopne
in
jb
push
jp
ds
insl
popa
jb
xchg
out
cmp
mov
push
adc
div
cmp
jmp
fs
cld
mov
cli
sub
add
xchg
sbb
adc
sarb
sti
sub
ss
ficoml
lcall
inc
mov
pop
sbb
shll
or
sbb
ss
jmp
cmp
mov
and
insb
mov
push
push
addr16
sbb
inc
cmp
lds
sub
orl
pop
and
dec
jp
and
orl
cmp
pop
add
jae
hlt
jp
push
imulb
icebp
fcoms
data16
mov
lret
cmpl
out
lock
pop
sub
lods
outsb
mov
pop
imull
xchg
hlt
es
fwait
movl
push
imul
mov
call
adc
ret
inc
sub
outsb
pop
cmpsl
xor
jb
push
imul
sarl
fsubrs
call
cmpsb
push
fnstsw
mov
in
dec
cmpsb
dec
push
xchg
fimuls
and
or
mov
fchs
xor
inc
pusha
or
cwtl
jp
fimuls
jle
nop
icebp
push
inc
cs
test
lret
movsb
fmull
pop
fstl
xor
push
fs
pop
lahf
sub
inc
in
cmpb
pop
mov
daa
jge
in
aam
xchg
fiadds
sub
call
aaa
xchg
mov
scas
in
push
mov
in
jecxz
cs
lods
sbb
test
aas
lahf
outsb
push
insb
pop
cmp
add
aad
ja
adc
inc
xchg
lret
cmp
jbe
mov
ss
rcrl
lods
jne
lock
mov
sbb
mov
js
imul
push
mov
scas
xchg
jle
xchg
inc
jl
stos
dec
arpl
adc
xor
push
adc
or
cmp
xor
or
int
jge
jle
cmpl
or
mov
jnp
sbbb
push
push
lahf
and
cmpsl
xor
in
jle
leave
cmpsl
stc
div
movsb
jb
mov
xchg
mov
mov
jno
mov
repz
ja
js
test
sbbl
mov
pop
stos
dec
or
xor
outsl
lods
mov
push
mov
mov
and
fwait
jne
dec
xorb
or
cmp
cmp
js
and
and
in
push
add
arpl
xor
and
in
into
in
hlt
xlat
dec
ljmp
sbb
pop
stos
addb
lahf
sub
gs
call
aad
sub
sbb
or
fcomip
sub
fs
mov
adc
lret
push
stos
push
sbb
lret
add
vmovss
shrw
jge
movb
outsb
add
cwtl
sbb
jg
push
jns
test
mov
cmp
addr16
pop
inc
xchg
repz
jl
ret
fwait
int3
rolb
outsb
pop
clc
or
push
or
push
cmp
imul
and
push
jo
mov
daa
stos
adc
popa
out
jo
push
aad
adc
add
jge
adc
or
scas
cmp
xchg
dec
nop
decl
shll
mov
pop
xor
loope
jne
sbb
xchg
pusha
adc
sarb
aas
scas
dec
adc
adc
movsb
sub
sub
std
add
mov
arpl
mov
dec
jb
ret
xlat
jg
sub
dec
pop
fistpll
pop
lods
setns
sub
dec
dec
push
or
scas
pop
imul
nop
leave
add
jle
push
adc
bound
dec
lret
pop
fs
lock
push
icebp
push
and
or
stc
aas
push
mov
jp
test
dec
pushf
jno
outsb
mov
cltd
insb
lock
shlb
cmp
adc
xor
incl
lods
pop
pop
repnz
cmp
sub
cld
insb
lea
cltd
jle
nop
mov
fs
jae
pop
dec
lds
dec
stos
insb
lods
pop
daa
and
and
in
lea
add
dec
push
mov
xlat
mov
dec
outsl
adc
loop
insb
pop
sbb
sub
loop
enter
mov
es
xor
add
int3
jbe
mov
gs
in
out
mov
inc
cmc
lds
xchg
mov
inc
or
dec
fidivl
add
xchg
je
jbe
outsb
out
jecxz
adc
mov
sub
mov
arpl
jmp
sub
jno
push
inc
ja
in
je
into
dec
addr16
or
cmpb
inc
mov
js
adc
repnz
fidivrs
jo
pushf
test
arpl
arpl
add
dec
sub
push
lea
pop
addb
push
aad
ss
dec
movsb
sub
jno
lea
call
aam
js
inc
xchg
lahf
sub
popw
pop
push
fldcw
jp
sbb
loopne
arpl
push
into
mov
mov
mov
and
aam
adc
push
data16
xchg
in
pop
xorl
xchg
add
sbb
inc
into
inc
imull
das
sbb
pusha
sbb
mov
jle
sub
push
add
xor
fnsave
pop
cwtl
out
mov
stc
aad
adc
mov
popa
sbb
or
cs
adcl
mov
in
push
and
mov
lea
or
jge
and
test
cwtl
ds
add
mov
dec
inc
ret
test
fstpl
mov
cmp
adc
cmp
fdivrl
adc
lret
int3
rclb
repnz
jne
mov
sahf
add
jnp
push
imul
jl
mov
imul
pushf
inc
rcrb
fsub
ret
mov
mov
orl
int
scas
pop
fcmove
mov
fwait
loop
shl
pop
and
insl
pop
cmp
sub
xor
mov
roll
testb
sub
iret
leave
pop
imul
daa
sub
icebp
ret
cli
cmp
cmp
int3
pop
in
pop
out
inc
jmp
cvttps2pi
mov
mov
sbb
fwait
in
mov
ret
insl
dec
dec
gs
int3
fsubrl
bound
push
rcrb
xchg
gs
jnp
es
add
mov
test
jp
mov
mov
shrb
leave
repnz
lahf
cmp
xchg
jecxz
sub
testl
stos
call
in
std
jecxz
insb
add
aad
xor
xor
stc
pop
inc
movsb
mov
loope
xchg
lret
cmp
subb
mov
test
or
cmpsb
xor
or
mov
xchg
std
mov
mov
mov
push
fmull
dec
mov
sbb
cmp
int3
xchg
push
push
or
and
pop
sbb
mov
mov
xchg
sbb
jg
pop
dec
je
sbb
jle
pop
test
or
cs
adcl
pusha
add
cwtl
lcall
repz
inc
jge
cmp
pop
mov
popa
sub
adc
dec
mov
pusha
cld
pushf
mov
lock
stc
cmp
inc
push
xchg
jae
test
jns
mov
in
fsubrp
stos
mov
push
test
in
inc
cld
repz
sarb
pop
add
mov
dec
add
ror
imull
dec
popa
cwtl
mov
xor
mov
add
test
js
sbb
mov
mov
in
push
pop
xchg
stos
lods
sarl
inc
fwait
push
xor
fcompl
popf
inc
mov
push
inc
dec
pop
fyl2x
mov
js
fildll
xlat
in
rclb
inc
ret
imul
or
push
inc
and
sbb
jns
lock
bswap
mov
jne
sti
jmp
add
bound
in
fbstp
add
mov
jmp
jnp
xlat
mov
jbe
or
stos
sub
mov
xchg
je
sub
fwait
dec
sub
movsl
pop
dec
adc
insb
in
aam
sbb
dec
repnz
xor
cmp
ret
sti
mov
add
imul
xorl
jae
xchg
adc
enter
divb
push
dec
lods
xchg
or
mov
mov
daa
clc
ret
fisttpll
test
out
lods
mov
lcall
test
sub
out
jg
inc
xor
mov
dec
dec
inc
bnd
movsl
fcomps
jl
push
out
adc
and
sub
les
and
or
mov
or
addr16
jmp
inc
imul
pop
pop
mov
pop
dec
cmp
xor
add
mov
jne
jg
cltd
push
in
ret
aaa
sbb
xchg
test
sarb
dec
insb
dec
cmp
enter
in
data16
pop
jno
mov
les
out
mov
shr
and
pusha
jl
adc
add
xchg
mov
add
cmp
mov
xor
movsb
dec
add
cltd
mov
imul
mov
in
push
hlt
adc
jb
stos
pop
test
fcmovu
mov
cmp
iret
mov
mov
dec
fdivrl
imul
into
out
mov
je
aad
out
subl
jne
mov
jl
sbb
pop
les
and
pop
cmp
cmp
rcr
fldl
lahf
imul
push
aas
push
xor
xlat
and
xchg
cmpsb
or
dec
data16
sahf
ret
dec
sbb
jg
pop
fisubrs
in
lods
shrb
enter
mov
mov
jecxz
sbb
shll
sub
push
push
in
out
aas
add
or
sub
in
popl
sub
ds
scas
push
je
and
in
adc
jns
pushf
add
sbb
pop
mov
pusha
adc
icebp
and
out
movsl
ret
xchg
insl
push
dec
aad
arpl
cmp
and
mov
sub
pusha
mov
idivl
jo
int
inc
push
push
jo
enter
jno
xchg
cmpsl
cmp
inc
dec
sbb
jb
sub
mov
xor
leave
inc
into
push
jmp
push
test
dec
arpl
and
xor
mov
fwait
xor
lods
xchg
jmp
add
xchg
jl
movsl
push
mov
inc
jae
test
add
xchg
cltd
mov
lahf
jle
iret
pusha
movb
aas
mov
adc
xor
pop
xchg
and
int
push
rcr
push
push
xchg
das
add
cmp
dec
in
fadds
or
dec
adcl
out
js
in
xor
outsl
jae
sub
fwait
inc
outsl
and
add
aad
out
cmc
aam
ror
xchg
shl
cs
rolb
lods
mov
cmp
mov
rcr
inc
mov
inc
push
lret
and
inc
loope
test
pop
and
or
add
outsb
push
into
icebp
jmp
insl
jl
pop
xchg
out
mov
sbb
adc
stc
sbb
fwait
push
add
jns
mov
or
repnz
ljmp
lcall
insl
and
adc
popf
mov
cmpsl
in
lret
fs
mov
loop
idivb
dec
xor
mov
test
xor
rcr
cmp
cmp
lds
jl
or
jne
lock
push
jmp
sub
pop
sbb
es
inc
shl
jb
push
popf
xlat
aam
jge
loop
mov
jmp
popa
sbb
lret
adc
xlat
mov
xor
mov
inc
adc
xor
push
xlat
xchg
outsb
jb
test
and
mov
jo
aas
inc
movsb
ljmp
dec
aam
sbb
sbb
mov
or
lock
or
fldl
cmc
and
lret
loopne
sbb
scas
je
push
stc
mov
xchg
adcl
dec
xchg
sub
mov
mov
mov
in
insl
cmp
push
sbb
xor
hlt
fisttpll
xor
hlt
iret
xchg
daa
rorl
jmp
out
out
scas
sti
cli
xlat
sub
xor
leave
into
mov
loope
jmp
jne
inc
repz
das
lods
in
addr16
pusha
mov
neg
out
sar
adc
lret
cs
mov
fwait
adc
int3
rcrl
push
fldt
repz
push
shrb
mov
es
xlat
mov
pop
in
mov
stos
push
xorl
xor
cmp
sarl
and
sub
roll
bound
bnd
cmp
adc
sub
test
out
dec
jge
stc
mov
lahf
and
pop
xlat
cwtl
outsb
movsl
pushf
lock
jle
rorl
mov
mov
pop
shll
pop
xchg
lahf
cmp
fidivrs
int3
add
in
mov
dec
scas
add
xchg
and
mov
test
push
shl
cmp
aas
out
jmp
mov
mov
lret
outsb
insb
mov
mov
jp
ret
jmp
andb
inc
jno
jno
jecxz
sarb
dec
jp
sbb
shrb
insb
xchg
or
cltd
mov
scas
repnz
add
add
sub
add
js
notb
and
xor
dec
mov
push
sbb
jl
pop
fwait
mov
mov
mov
ror
dec
ds
adc
pushf
sub
mov
mov
in
popf
and
jg
pushf
fstl
inc
ljmp
jnp
add
jmp
fiadds
mov
sbb
lret
xchg
call
test
cltd
push
icebp
mov
dec
pop
inc
xor
shrb
gs
inc
jge
outsb
daa
cwtl
xchg
inc
in
mov
loop
aam
sub
mov
dec
jle
fistpl
add
fs
mov
jb
in
aaa
sub
mov
rcl
add
outsb
mov
pop
ret
dec
pop
mov
mov
call
push
sahf
add
dec
fldenv
sahf
stos
adc
fs
and
movsb
sbb
in
mov
jbe
jecxz
cmp
mov
sbb
cmp
out
outsb
mov
push
sbbl
lret
lea
mov
cmp
inc
mov
into
popf
add
mov
insb
push
sbb
inc
aas
inc
stc
mov
je
jb
int
loope
push
ss
adc
pop
loopne
add
inc
les
arpl
mov
outsl
movsl
xor
in
cmpsl
mov
icebp
inc
push
pop
sbb
mov
jmp
jp
pop
outsb
rorb
lods
xchg
add
sbb
nop
lds
rorb
pop
jae
mov
sub
adc
inc
cltd
mov
and
scas
add
sahf
mov
repnz
pop
sub
mov
dec
flds
dec
pop
sub
iret
imul
fnsetpm(287
jg
cs
dec
inc
mov
fnstenv
fwait
xchg
mov
and
daa
cltd
sbb
sub
call
jp
bound
fisubl
or
call
stos
ret
push
jmp
movsl
push
mov
fidivrs
dec
xor
mull
fnstcw
push
fsubl
sub
ds
mov
push
jmp
xchg
fs
insl
hlt
sub
mov
fiadds
ds
mov
pop
inc
xchg
jns
jno
cmp
mov
lret
fistps
or
cld
add
mov
jbe
mov
pop
je
gs
add
iret
jg
out
pop
xor
adc
cld
push
xlat
sub
pop
or
and
xchg
mov
jb
inc
daa
pop
jns
inc
inc
bound
lock
cltd
mov
shrl
fsubl
popa
int
jg
shr
dec
xchg
cli
ss
outsl
mov
mov
movsl
cmc
idiv
int
fldcw
inc
mov
adc
lea
outsl
jge
fmull
lret
repz
call
adc
jg
dec
jne
aad
cli
jne
xchg
xor
jle
sub
jle
mov
sub
fistl
in
sbb
js
lods
inc
or
xlat
mull
xchg
shrb
test
mov
test
sti
popf
pop
xchg
aaa
push
loope
xor
nop
sub
pushf
sbb
and
jmp
cmp
in
incb
cltd
mov
test
mov
lret
aas
lahf
ret
decb
ret
and
cmp
xchg
popf
sbb
cmp
idiv
ficomps
and
mov
mov
jp
pop
sub
aaa
cmc
imull
and
xor
push
out
insl
imul
mov
sub
ljmp
sti
sbb
mov
popf
push
je
inc
mov
push
sbb
sti
jo
and
mov
call
pop
jnp
adc
mov
jmp
dec
arpl
mov
stos
fadd
mov
pop
mov
xor
std
pop
imul
adc
jge
call
xchg
leave
jmp
sarb
rorb
and
gs
clc
loopne
stc
and
aam
pushf
popf
inc
mov
cwtl
add
adc
in
loop
sub
bswap
push
dec
xchg
imul
pop
ret
fs
dec
cmp
mov
psraw
loopne
mov
dec
inc
jns
out
cmpsb
jno
addr16
roll
push
movl
daa
in
xchg
push
inc
cmpsl
mov
lret
cmp
sbb
sbb
xchg
ja
in
sbb
sub
push
std
out
xchg
cmpb
mov
push
das
sub
add
lea
add
adc
test
jae
shrb
fcomp
sub
mov
cltd
inc
loop
popf
fisttpl
call
mov
dec
mov
adc
mov
pop
mov
or
lahf
sbb
dec
sahf
mov
mov
shll
fsubl
or
ja
add
insb
repnz
js
xor
ss
ret
mov
out
mov
fstpt
cmp
std
jge
inc
daa
jae
mov
cmp
xor
add
ljmp
ret
repz
and
cwtl
fiadds
lea
lods
and
cmp
rorb
jecxz
dec
sub
arpl
or
mov
mov
repnz
cli
xchg
adc
sub
sbb
pop
scas
push
or
and
cmp
test
movsb
scas
or
dec
fbstp
add
leave
pop
dec
mov
int3
dec
xchg
inc
loope
and
lods
test
mov
xor
pop
xor
xchg
ficompl
jmp
dec
dec
stc
pop
jge
sahf
mov
inc
xorb
jbe
in
xchg
fs
jo
es
and
out
es
rcrb
mov
js
cmp
xor
js
pop
lds
ja
xor
in
mov
sbb
gs
ljmp
fwait
xor
outsb
sbb
push
test
mov
xchg
inc
mov
ja
adc
insb
jmp
sub
ss
rclb
addl
test
jno
xor
nop
scas
mov
mov
push
sub
aad
pop
loopne
pop
lahf
xor
cmp
loopne
sahf
mov
inc
sbb
repnz
lea
lahf
pop
lock
imul
rcrb
imul
sub
mov
aad
rcll
fwait
xchg
xchg
xor
test
das
movsl
mov
or
lret
mov
mov
es
test
bound
cli
push
test
test
shl
lret
mov
push
mov
nop
iret
mov
stos
mov
repz
movsb
call
xchg
hlt
stos
xor
jnp
cwtl
popf
mov
loope
cs
insb
adc
fdivs
test
xor
stos
add
add
xor
lret
jb
lret
cltd
movsl
push
mov
xor
hlt
xor
subl
mov
out
lret
insb
test
icebp
sbbl
int3
mov
bound
sbb
pop
sub
cmp
xchg
push
mov
fcompl
pop
push
xchg
in
jl
rcll
mov
mov
or
mov
stc
sbb
repz
mov
xchg
jge
mov
rcrl
sub
loope
xor
int
mov
mov
imul
push
sbb
sbb
inc
mov
bnd
add
in
in
jecxz
shr
push
cld
iret
xor
sbb
pop
adc
xchg
insl
lds
jno
int
cmp
out
jmp
enter
test
pop
dec
sbbl
inc
sbb
adc
dec
aas
xor
xor
ss
lcall
cmpsb
xchg
xor
inc
jnp
inc
xchg
aam
call
loopne
or
xchg
inc
stc
lods
cld
cmp
mov
inc
hlt
cmp
cmc
pop
gs
jmp
jg
in
cmp
sti
icebp
xchg
dec
pop
push
add
jp
xchg
push
ds
cmp
mov
fisubrs
jge
shl
aas
pop
loope
mov
xchg
sub
icebp
cld
push
mov
pop
or
dec
dec
mov
dec
mov
xchg
test
data16
loope
aam
push
loopne
add
out
lods
pop
pop
push
je
pusha
pop
sub
repnz
cmp
mov
xchg
in
xchg
xor
cmp
xor
inc
ret
push
and
cli
insl
int
enter
mov
inc
int3
jl
jae
mov
clc
lahf
filds
sub
roll
nop
test
ljmp
shrb
xor
popl
cld
mov
mov
dec
mov
pop
mov
aam
testl
outsl
es
jg
lahf
cmpb
mov
cmpsl
push
rcrl
push
and
jg
ret
push
and
lret
sbb
sub
sub
dec
das
and
push
insb
test
xchg
pop
jmp
enter
pop
mov
in
dec
jge
jbe
mov
jmp
jmp
inc
and
mov
mov
jo
and
ret
cwtl
xchg
push
add
xor
and
imul
jmp
nop
and
testb
push
jnp
adc
mov
lods
lea
jmp
test
and
dec
movsb
sub
push
mov
cwtl
mov
jl
test
int
daa
pop
dec
sbb
out
sub
sub
cmp
stos
xor
sbb
jae
ficoms
test
lcall
add
popf
ret
cmp
and
jnp,pt
ljmp
cmp
clc
pop
repz
inc
mov
adcb
pop
mulb
aaa
dec
cmp
outsl
aad
add
pushf
mov
xor
lods
lods
js
sub
shr
jb
and
fucomp
xor
push
stos
fistps
cmp
pusha
mov
std
and
mov
jne
enter
pop
xabort
mov
sahf
ds
cmp
jns
inc
mov
les
gs
add
lea
pop
cmp
cmc
push
push
push
add
push
andl
add
inc
pop
sti
xchg
iret
push
mov
ja
push
ljmp
or
addb
insb
jmp
sub
and
divl
repz
pop
xchg
cmp
test
inc
sbb
aaa
xchg
mov
xor
xchg
dec
pop
pop
fisttpl
mov
mov
pop
aad
in
lret
xchg
xchg
hlt
das
out
ss
scas
adc
sbb
and
mov
xchg
push
cwtl
ljmp
jbe
enter
mov
add
popl
mov
push
gs
cmp
mov
iret
cmp
lock
pop
mov
adc
cmp
js
dec
mov
cwtl
ret
les
sbb
in
stc
lods
xchg
mov
mov
movsl
mov
jno
lret
ss
push
mov
fldl
lea
cmpsb
push
xchg
rol
lods
pop
adc
and
adc
cmpsb
mov
jae
daa
inc
ss
mov
mov
push
out
and
dec
mov
add
pop
out
inc
xchg
into
inc
and
hlt
stc
test
mov
jb,pt
push
sub
out
fs
add
jno
adc
js
or
sub
push
adc
or
fdivs
push
aaa
or
mov
push
jle
adc
xchg
mov
jnp
add
insb
pop
cs
icebp
add
jge
mov
pop
cmpsl
imul
dec
fld
xlat
mov
cmpsb
sub
call
cltd
adc
pop
sub
jle
and
sbb
iret
dec
es
imul
sbb
inc
pop
outsb
mov
inc
cmpsb
add
lret
or
stc
aas
or
jmp
outsb
cli
std
sar
insb
mov
or
movsb
xlat
sbb
loopne
mov
inc
sbb
leave
xchg
dec
sbbl
int3
xchg
scas
push
frstor
pop
aas
jns
int
xor
mov
pop
notl
pushl
ljmp
aam
xchg
inc
dec
out
enter
xlat
pop
iret
pop
mov
pop
daa
push
xchg
pop
xor
jnp
enter
adc
out
jle
mov
pop
insl
xchg
adc
or
or
pop
add
mov
test
sub
xor
sahf
leave
xor
ret
dec
jecxz
jg
mov
nop
ja
insb
push
cmp
loopne
out
push
test
fstl
pop
sbb
jo
cld
sahf
xchg
inc
cltd
fildl
xor
jmp
gs
clc
jmp
popf
cmp
pmaddwd
or
jns
or
xor
scas
insl
scas
sub
shrb
fwait
pop
aas
out
out
out
sub
xchg
mov
mov
movsl
scas
cmc
fdivrs
scas
int
adc
cmp
cmc
int3
xlat
ret
mov
push
daa
mov
aas
shll
mov
add
cmc
hlt
cmp
fs
sbb
cmpsl
ljmp
cmc
sub
sbb
imul
pop
sbbb
jg
in
aaa
jne
push
pop
push
adc
mov
fisubrs
shrl
popa
cltd
add
stc
xor
outsb
rcll
sbb
ss
in
mov
mov
xor
dec
popa
push
cmpsl
outsl
mov
out
mov
ret
xlat
in
cmp
mov
push
sti
dec
mov
xor
jge
int
iret
pop
and
push
add
mov
xor
adc
push
mov
movsb
xor
scas
fcmove
mov
in
cld
rolb
sub
cmp
sarl
rcrb
mov
dec
inc
das
dec
xchg
cld
ds
lret
out
test
push
sbb
cmc
sbb
xchg
mov
outsb
test
sbb
push
or
shlb
test
dec
mov
fistps
pop
mov
jl
je
pusha
mov
out
mov
nop
incb
mov
mov
cmovns
and
shr
cmp
sbb
hlt
lcall
or
inc
push
push
inc
addb
ljmp
leave
xor
cmc
dec
inc
bound
jp
jmp
imull
sbb
mov
stos
lds
lods
leave
mov
aaa
aaa
or
loope
lds
mov
xor
jle
imul
mov
sbb
xchg
xchg
cmpsl
jecxz
mov
repz
cmp
cmp
mov
xchg
xchg
jmp
stos
lea
outsb
or
mov
roll
jl
imul
cli
out
push
jae
xchg
les
repnz
xchg
xor
pop
sarl
cmpsb
out
adcl
aaa
loop
cmp
pop
dec
xchg
sub
imul
or
push
scas
add
push
cmp
aam
je
sahf
or
mov
je
mov
inc
gs
xchg
ss
jecxz
lret
pop
mov
push
push
and
out
enter
and
rcr
dec
sar
dec
xchg
pop
in
addl
out
inc
and
into
push
leave
jge
scas
mov
addr16
adc
inc
xor
enter
xor
jecxz
add
sbb
sub
mov
or
inc
inc
jle
pop
les
xor
jl
adcl
mov
jae
mov
outsb
mov
popf
and
fdivrl
sub
lret
xor
pusha
mov
paddusw
inc
inc
cli
push
les
andl
push
lcall
shll
aaa
ljmp
cs
xor
lret
cmp
scas
mov
lcall
out
add
mov
dec
xor
loopne
and
adc
fdivrs
fildl
add
pop
aad
dec
cwtl
repz
je
ja
notb
aam
fistpll
in
mov
dec
jno
cli
xchg
mov
jnp
je
adc
lds
mov
fwait
popl
xchg
sbb
sbb
stos
dec
xchg
push
xor
loop
inc
or
loop
and
cwtl
xchg
jmp
ret
cmpsb
outsb
ja
sbb
pushf
xlat
lock
mov
bnd
repnz
testl
fwait
aaa
in
mov
sbb
pusha
lret
gs
rcrl
xor
sbb
lcall
pop
leave
adc
mov
adc
movsl
jbe
adc
or
dec
es
sbb
stos
outsl
xchg
xchg
jge
mov
mov
or
push
cmp
dec
outsl
call
jge
dec
mov
arpl
aam
addl
sub
inc
daa
pop
mov
andb
or
dec
mov
dec
mov
dec
sub
dec
inc
ds
push
ret
pop
pop
xchg
hlt
cltd
shlb
sbb
lcall
xor
add
cltd
insb
inc
das
and
adc
das
adc
jg
aaa
andl
iret
mov
in
lods
dec
jnp
clc
test
lock
mov
sbb
xor
js
xor
xchg
cmp
mov
dec
jmp
push
cmpb
mov
sub
out
mov
mov
inc
xchg
out
and
into
hlt
push
stos
dec
nop
loopne
jl
and
dec
loope
cmp
and
hlt
cmp
popa
fisubl
push
add
ficomps
xchg
mov
shll
lret
mov
mov
stc
fnstenv
or
ret
fs
lea
sbb
popa
push
repnz
cld
ljmp
inc
jne
jle
xor
sub
xchg
jne
sub
aaa
add
push
int
bound
push
or
sbb
jecxz
inc
jnp
cmp
ret
mov
sbb
push
dec
cmp
sub
int3
cmc
lea
mov
enter
jne
jmp
subl
jp
movb
push
ja
mov
test
testl
push
inc
ret
mov
pop
jecxz
jecxz
sbb
mov
and
mov
cs
popf
imul
rorb
jp
aas
adc
jne
cmp
xor
pop
mov
xor
push
inc
lea
in
test
les
imul
mov
sub
jecxz
xchg
adc
fs
enter
aas
lea
jp
movsb
mov
cmp
rorb
mov
mov
aad
sarb
jns
addr16
xchg
inc
jb
jo
mov
xlat
or
aaa
mov
pusha
lds
lock
adc
loop
outsl
push
stc
aam
rcrl
add
scas
test
pop
mov
inc
push
jbe
je
fimuls
lret
andl
popf
mov
dec
ds
outsb
call
xor
idivl
stc
fmul
mov
xor
cmp
push
and
cmp
cmp
add
sbb
mov
dec
ds
les
mov
sub
xchg
add
pop
lods
lds
and
mov
jg
sub
cmp
maskmovq
divl
lcall
jbe
popf
cmpsl
aas
mov
ss
cmp
push
imull
ficomps
xchg
stos
adc
push
out
arpl
sub
cmp
and
sub
cmp
ds
pop
mov
icebp
mov
int
and
scas
mov
mov
clc
mov
cs
sub
test
ficompl
jmp
push
rcll
lret
cli
lods
or
inc
cmp
mov
xorb
and
lret
pop
push
jo
je
add
test
push
out
pop
cs
mov
popl
push
insl
leave
lcall
dec
pop
jl
adc
ficoml
int
sub
pop
and
fwait
adc
pushf
hlt
cmp
mov
inc
outsl
imul
pop
ja
mov
ficoms
xchg
sbb
sbb
add
dec
mov
ret
adc
xor
add
adc
and
mov
into
fstl
mov
cltd
popf
jae
or
int3
decb
cli
cmp
fisubrl
push
cmp
ljmp
jae
cld
mov
mov
mov
insl
pop
repnz
cmp
cwtl
mov
xchg
scas
outsb
movb
jbe
dec
pop
pop
inc
stos
cwtl
mov
loope
fwait
inc
jo
mov
test
push
jno
xchg
mov
cmpsb
fcmovu
jnp
mov
mov
test
mov
ja
jecxz
pop
repz
testl
ss
insb
fcomp
cmp
mov
jge
sbb
sbb
dec
repz
sti
mov
push
lcall
push
pop
push
aad
or
push
sbb
rcl
sbb
lahf
sbb
xchg
neg
push
ja
mov
or
negl
sbb
fisubl
mov
sub
pop
mov
inc
dec
mov
mov
mov
addr16
sbb
mov
aad
xchg
rcrl
jg
stos
mov
fwait
push
stos
rcrb
dec
rcrb
insb
int
lock
mov
movsb
cmp
sub
inc
jge
xchg
cld
adc
sbb
mov
sahf
dec
mov
test
popa
jns
mov
cltd
xchg
xchg
dec
mov
push
pop
lods
xchg
push
mov
add
mov
icebp
cli
mov
mov
testb
jo
ret
sar
lods
sub
mov
rcrl
bound
les
lahf
pusha
ror
push
test
test
js
push
lret
adc
hlt
addb
mov
leave
fisttps
repz
daa
leave
gs
pop
jo
xchg
xor
mov
or
xchg
sub
stc
adc
or
popa
xor
sahf
lock
rcll
adc
push
pushf
mov
ss
cli
outsb
inc
add
cmp
mov
das
mov
shl
stos
dec
out
lods
xor
pop
insb
incb
cli
fwait
push
jecxz
mov
decb
jp
push
and
out
cmpsb
inc
adc
scas
fldl
orl
pop
jp
mov
daa
push
repz
push
pop
push
push
in
mov
push
scas
xchg
and
sbb
add
loop
push
out
shlb
inc
adc
cmp
push
mov
add
fwait
mov
push
push
xor
pop
cltd
incl
lock
es
rcrb
sbb
jo
jl
inc
sti
dec
push
and
jne
repz
push
std
xchg
jp
sbb
cmc
ret
jg
stos
push
cmp
push
sub
sbb
xor
sbb
xlat
fbstp
cltd
adc
leave
cmp
jmp
jle
cmpsb
popf
fsin
push
push
lea
mov
outsb
add
arpl
push
gs
xlat
xchg
adcb
sub
and
dec
insl
outsl
mov
loope
jnp
mov
jnp
mov
popa
out
pop
rorl
fnsave
mov
cltd
test
fistl
out
daa
gs
lea
das
xchg
stos
fistl
pop
push
data16
or
test
loop
pop
test
mov
out
mov
cmp
imul
lods
jo,pn
xchg
gs
cld
in
mov
jmp
punpcklbw
scas
pop
loop
mull
cli
lods
dec
popf
cs
or
imul
jne
pushf
popf
inc
add
mov
pop
add
xchg
out
pop
enter
inc
or
leave
aad
rolb
lcall
sub
xor
dec
pushf
cmp
bound
sub
push
bound
btc
push
pop
pop
lret
fiaddl
sub
outsb
sbbb
scas
mov
or
jb
pop
ljmp
xor
cwtl
addl
add
dec
outsb
and
cmp
sub
repz
mov
mov
or
lret
enter
mov
out
sub
dec
add
sub
dec
pop
xchg
mov
outsb
daa
fs
inc
mov
xor
push
ss
mov
add
or
pop
or
add
xchg
mov
dec
aas
aad
xchg
xchg
pushf
iret
or
gs
int3
mov
mov
hlt
inc
fisubs
mov
hlt
cmpsb
push
imul
push
pushf
out
push
cld
insb
or
cmp
pop
mov
xchg
imul
cvtps2pi
pop
push
fwait
int
mov
xor
and
je
mov
mov
insl
sub
mov
sar
in
out
inc
xchg
jne
push
push
adc
mov
out
and
fsubs
mov
xor
or
mov
loop
out
push
add
xor
sub
sub
lret
xor
pop
into
mov
std
pop
in
cmp
je
arpl
arpl
xor
fisubrl
cmp
xor
jecxz
jg
repnz
mov
mov
cmp
mov
sbb
aaa
pop
sbb
pushf
rcr
push
scas
push
stos
cmpb
or
and
add
jae
mov
mov
mov
lret
fwait
ljmp
pop
pusha
fcomip
aad
mov
adc
cmp
mov
push
faddl
scas
push
mov
fmull
jbe
cld
and
dec
ds
cmp
cmp
xchg
int3
mov
repz
dec
inc
xchg
inc
xchg
div
mov
xor
inc
test
mov
dec
data16
jmp
outsl
ret
ja
jmp
ss
sbb
pop
pop
cmp
or
pop
adcb
fs
adc
lea
mov
xchg
scas
iret
jb
or
stos
subps
arpl
add
mov
in
mov
xchg
fcomps
push
or
add
dec
sub
loop
sub
mov
lods
pop
mov
lcall
cwtl
or
pushf
int
pop
call
cmpb
fnstenv
jge
fistpl
push
push
pop
xchg
mov
bound
into
or
andl
fldt
andl
aad
shll
insl
cmovl
sti
insb
add
or
pop
test
shll
enter
adc
mov
push
cmp
jmp
pop
push
sbb
fadds
xchg
push
xlat
xchg
inc
outsl
sti
fmuls
lea
adc
fadd
mov
adc
push
stos
pop
les
or
mov
dec
adc
inc
xor
enter
add
mov
or
inc
popf
sub
or
adc
mov
fidivs
sahf
mov
jnp
pop
dec
test
lods
push
cmp
xor
lds
hlt
outsl
mov
xorl
inc
jno
cmp
lods
push
mov
lea
mov
shrd
lods
add
pop
divl
test
mov
push
mov
out
movsb
lret
shlb
push
clc
orb
mov
adc
adc
shll
jbe
mov
jmp
sbb
loope
mov
arpl
push
rcll
ja
or
pop
xor
aad
cmp
cmc
fldt
pop
fsubl
sti
mov
sbb
enter
mov
push
adc
push
ja
cmp
cs
repnz
outsl
hlt
rorb
add
jg
shl
ret
stc
mov
xlat
inc
lahf
cmpsb
inc
scas
adc
insl
cmovle
push
fucomip
inc
push
fldcw
fldenv
xor
ja
cmpl
mov
ret
mov
add
andb
sbb
add
test
outsl
cmpsl
add
or
xlat
out
or
mov
sbb
inc
outsb
mov
out
fwait
mov
jge
out
and
js
rol
or
pop
fs
pop
and
xchg
fwait
inc
sbb
stos
arpl
out
cmp
inc
xchg
pop
lret
dec
pusha
xlat
stos
gs
mov
arpl
pop
jge
push
jp
xlat
out
push
inc
ss
outsl
ds
push
xchg
in
pop
sub
testl
mov
push
mov
xor
xchg
xchg
rorb
lahf
jno
xor
add
stos
scas
in
jbe
aam
push
cmpsl
rcrl
sub
add
xchg
or
mov
pop
pop
in
stos
jb
mov
mov
jno
shll
mov
jg
scas
cmc
push
lods
sub
lods
jbe
ret
dec
mov
pop
pushl
inc
add
ds
and
js
shrl
mov
mov
mov
inc
shll
mov
cs
inc
mov
dec
ds
ret
or
bound
outsb
fsubrs
mov
test
dec
shlb
jbe
addr16
or
xchg
push
adc
jg
ret
xor
jmp
jne
int
getsec
xor
and
lret
insl
leave
or
ds
orl
std
sahf
dec
test
lcall
ds
inc
outsb
xchg
or
xor
xchg
ret
xchg
fdivs
ljmp
lret
jge
lret
cltd
icebp
in
outsl
ds
pop
cmp
pop
or
push
adc
sub
addl
xor
rolb
jp
dec
sub
sub
xchg
imul
jo
jnp
push
push
data16
push
repnz
mov
sbbl
nop
orb
xchg
rclb
mov
jl
dec
arpl
mov
icebp
sub
pop
nop
add
xchg
mov
or
je
hlt
inc
push
emms
push
and
cwtl
lds
push
cmpb
test
shl
in
pop
push
dec
xchg
push
jge
jns
or
dec
xlat
int3
adc
loopne
ret
cmp
xor
push
jns
xchg
nop
cmp
insl
mov
sbb
ds
mov
xchg
and
outsl
int
xchg
sahf
and
out
aas
dec
popf
xor
inc
dec
jo
insb
or
jnp
sbb
xchg
dec
popa
and
cmp
add
adc
imul
xor
sar
cmp
or
insb
inc
pushf
enter
or
and
sarl
cmp
jle
loope
mov
movl
lahf
mov
cmp
loopne
fxch
add
dec
aaa
inc
jge
push
imul
std
xchg
xchg
std
add
lock
cmc
into
icebp
sbb
and
stos
loop
cmpsl
xchg
push
or
loop
push
inc
loope
lea
ljmp
les
push
stc
and
lcall
stc
sub
xchg
leave
dec
aad
int3
xchg
cmpsb
fdiv
inc
movb
mov
cmc
iret
sbb
fsubp
mov
mov
jmp
ret
jmp
cmc
lahf
adc
inc
cmp
out
popf
gs
lcall
inc
stos
clc
dec
or
and
into
loop
and
pop
inc
insl
loopne
push
dec
jbe
std
dec
fldt
mov
cmp
in
sub
int3
xchg
push
mov
stos
loopne
sub
push
add
add
test
push
adc
fidivs
pop
scas
bound
add
cmp
addb
imul
adc
mov
loope
pop
mov
xchg
add
jle
divl
repz
popf
or
xchg
or
sbb
adcb
filds
movsb
push
pop
push
mov
xor
in
dec
mov
add
rcr
dec
xchg
mov
add
repz
jbe
ret
xchg
mov
int3
pop
addr16
cmpl
or
lods
mov
nop
test
enter
fdivrl
xchg
push
fdivrs
mov
pop
sti
cmpb
int3
pop
dec
sub
loope
jmp
cmp
jmp
mov
xchg
jle
sbb
xchg
jl
fsubs
ret
or
adc
dec
sahf
or
jnp
call
push
xchg
push
pushf
dec
divb
sub
xchg
lret
loop
inc
jmp
mov
fdivrl
push
cltd
gs
jmp
mov
push
imul
sub
inc
cmpsl
repz
in
int3
loopne
mov
mov
jg
mov
pushf
stos
rclb
cmpsb
cmp
cltd
les
pop
insl
mov
and
roll
xor
imul
sbb
orb
icebp
jno
sub
mov
add
test
pop
push
adc
bound
pop
out
ds
jns
pop
outsb
mov
pushf
movsl
inc
mov
xchg
xchg
js
mov
mov
push
xchg
mov
test
mov
imul
mov
xor
insb
in
push
jmp
jmp
loopne
bound
lret
rorb
insl
push
es
adc
jo
int3
xchg
andb
addr16
xor
jmp
movsb
aas
fwait
dec
add
fildl
or
cltd
mov
inc
stos
jno
adc
jp
inc
fidivs
jne
xor
popf
push
enter
test
lcall
bound
adc
mov
fldenv
pop
loope
push
test
cmpsl
insb
flds
jge
add
js
clc
cmp
ja
pop
jno
sbb
dec
push
icebp
pop
push
sub
out
popf
jbe
push
hlt
daa
or
pop
add
cli
xchg
jns
ffreep
loope
sub
in
subb
or
roll
or
loop
into
bound
inc
lret
lret
out
mov
dec
sub
outsl
push
shrb
add
push
pushf
inc
xchg
rolb
outsb
or
insl
sub
push
imull
test
dec
or
jo
and
adc
outsb
pop
rol
push
test
in
sbb
jp
sub
negl
mov
daa
addr16
lret
cmp
mov
push
daa
mov
push
sub
arpl
orb
jo
lahf
inc
push
mov
or
addb
pop
mov
jno
shll
imul
mov
addr16
inc
mov
gs
dec
add
or
ljmp
dec
outsl
je
and
sarl
inc
rorb
mov
jl
mov
pop
les
fnstenv
in
jg
push
cld
cli
enter
adc
sub
lret
lret
cmc
in
gs
mov
imul
pop
fnstcw
jle
and
scas
cmpsl
sub
outsl
out
int
xlat
cmpsb
jns
sbb
ss
mov
lret
in
cld
clc
shrb
lcall
into
insb
ja
andb
push
or
adc
mov
jle
adcb
xchg
outsb
jl
ja
pop
test
xor
stc
cltd
inc
inc
or
test
jge
add
cmpsb
xchg
rorl
pop
or
rcl
push
add
dec
and
xchg
dec
scas
gs
ja
adcb
or
sub
xor
mov
loopne
in
inc
in
push
adc
mov
nop
pop
inc
add
jns
jle
inc
cmc
pop
stos
xor
mov
inc
hlt
add
push
xchg
mov
jecxz
xor
inc
xor
jbe
leave
lret
aam
addr16
in
mov
xchg
dec
test
fisubl
aam
jl
dec
push
and
add
pop
jmp
adc
xlat
push
add
xorl
and
xor
mov
and
fisubrl
mov
cmp
popf
rcrb
std
xor
xchg
in
inc
fimull
ds
ljmp
faddl
push
out
cmpsb
lahf
mov
aam
ds
push
popf
inc
jae
cmp
xor
std
and
aam
inc
and
inc
xor
inc
loop
mov
jl
cmp
daa
lods
sahf
loop
cmp
jge
dec
shlb
cwtl
rcl
je
and
jp
fbld
fmuls
dec
insb
xor
mov
dec
out
mov
outsb
nop
bound
push
adc
je
or
adc
rorl
movb
hlt
mov
dec
loopne
into
insl
xlat
jno
ds
ror
lahf
and
push
dec
push
lods
cmpl
xor
dec
cld
outsb
in
adc
into
add
jbe
push
and
mov
fcoml
jo
lock
mov
or
mov
push
jbe
mov
cmc
int
pop
mov
xor
cwtl
push
mov
or
mov
mov
mov
mov
push
ficompl
xchg
or
push
imul
sub
loope,pn
sub
jae
cs
mov
je
and
sbb
insl
mov
push
loope
imul
xchg
and
jmp
pushf
mov
ss
cld
add
test
mov
mov
es
ret
pop
enter
jecxz
dec
ljmp
mov
mov
dec
pop
jg
mov
fucom
inc
pop
filds
mov
inc
in
mov
out
addr16
cld
incb
lea
mov
and
dec
and
or
pop
and
cmc
dec
mov
adc
jle
scas
jo
out
stos
mov
mov
lods
sahf
out
fldcw
inc
adc
sbb
cltd
inc
adc
imul
popf
scas
mov
mov
fistps
inc
cmp
mov
cmc
pop
sub
in
mov
mov
cmp
sub
dec
jnp
dec
pop
and
int
sub
xchg
pusha
dec
fisttpll
dec
movsb
ljmp
hlt
pop
popf
andb
xchg
icebp
adc
mov
shll
decl
sbb
cli
jmp
sbb
or
xor
inc
jae
in
dec
dec
aas
jge
aas
pop
fbstp
jne
dec
sti
xchg
or
icebp
shrl
jp
push
cltd
xor
pop
lds
lret
xor
movsl
lahf
add
lret
xchg
pop
mov
push
mov
out
inc
aaa
jae
inc
jno
popf
mov
pop
sbb
stos
enter
xchg
repz
push
sbb
and
and
dec
xorl
fists
clc
mov
add
fistps
and
mov
mov
cmp
mov
testb
insb
loope
cmp
mov
push
inc
rcll
ss
fistl
stos
xor
int
int3
repz
pop
imul
mov
jg
fistpl
mov
leave
xor
sub
sbbb
mov
int
dec
mov
xchg
and
xor
loopne
cs
push
xchg
and
mov
shr
add
xor
add
pop
sbb
sbb
mov
sbb
lods
adc
mov
mov
push
mov
pop
sub
jne
push
dec
xchg
mov
callw
cld
and
xchg
jbe
sahf
or
inc
add
mov
repz
outsl
pop
mov
lcall
out
clc
jb
loop
test
test
in
adc
dec
scas
mov
adc
stc
xchg
and
cld
imul
or
jecxz
jne
xor
and
push
call
shrl
les
cmp
inc
les
adc
jns
bound
ret
sub
lahf
sub
jl
inc
bound
xchg
jne
popf
test
xchg
xorb
sbb
popf
les
mov
lcall
les
cwtl
out
in
jbe
pushf
clc
mov
test
push
arpl
decl
add
imul
ljmp
loop
aaa
xor
jbe
nop
jnp
sub
aaa
dec
push
pop
mov
lret
cmpsl
lock
and
ss
js
hlt
imul
mov
add
lods
ss
sbb
scas
add
cmpsl
insl
and
mov
jle
and
cmp
inc
popa
mov
lret
add
int3
lock
stos
and
mov
inc
fnstcw
xor
pop
sub
stos
mov
adc
gs
leave
idivl
mov
pushf
xor
push
jnp
pop
xor
sbbl
jnp
mov
mov
pop
dec
mov
js
ljmp
mov
lcall
es
push
pusha
sarl
add
inc
dec
push
pop
adc
xor
xlat
dec
sbb
std
stos
add
push
mov
mov
dec
fsincos
or
sbb
mov
js
inc
xchg
cs
xor
stc
or
inc
mulb
push
xchg
mov
mov
lret
and
xchg
out
in
pop
popf
push
lea
sahf
std
mov
clc
xchg
negb
mov
pop
pop
es
add
sbb
or
inc
push
ss
jg
inc
loopne
xor
in
mov
push
mov
jp
push
faddl
out
pop
jnp
sub
ret
cmpl
pop
popf
or
subb
dec
dec
ret
cmc
out
lods
in
mov
push
out
fstpt
imul
inc
mov
mov
cmp
or
push
and
gs
fwait
icebp
pop
adc
adc
loopne
fisubl
sbb
mov
outsb
or
jecxz
mov
roll
jmp
push
push
movsb
push
in
xor
mov
lahf
mov
int
setnp
mov
cs
ds
push
adc
inc
cmpsb
pop
es
std
js
xor
cmp
sbb
outsb
pop
ret
xchg
push
mov
pop
inc
cs
pushf
fidivl
shrl
insl
in
jo
jg
push
movsb
pop
insb
xor
xchg
enter
aam
je
jge,pn
lods
xchg
sarb
in
call
push
popf
pop
and
loop
xchg
pop
cmp
adc
cmp
push
mov
imul
fstps
scas
loope
sti
mov
fnstenv
ret
jnp
jl
sbb
icebp
xchg
mov
lea
imul
cmpsl
mov
popf
cmp
push
xor
or
push
or
mov
pop
dec
sbb
sbb
clc
ss
repz
xchg
and
adc
inc
das
pop
cmp
jbe
fistpll
mov
jne
sbb
add
aaa
mov
sbbb
pop
arpl
popa
call
ret
or
shlb
dec
leave
hlt
mov
xor
fdivrl
xchg
test
outsb
shll
daa
in
add
das
leave
xor
or
push
aam
into
sub
enter
cwtl
mov
out
sarb
stos
mulb
push
xor
xchg
push
xchg
imul
mov
in
es
pusha
fistpl
push
std
fdivrs
repnz
add
sbb
xchg
addr16
test
movsl
sub
loope
and
jae
push
ljmp
or
mov
negb
addr16
rorl
mov
pop
cmp
xor
adc
sub
testb
pushl
ja
aas
out
push
mov
sti
mov
jae
dec
movsb
fadds
lret
mov
xor
mov
jmp
inc
cmc
fdivr
cmp
div
roll
push
imul
loop
inc
add
mov
fldcw
icebp
aaa
cmp
fwait
ljmp
int
es
cmp
sub
mov
xor
mov
or
add
setns
adc
xor
dec
aam
repnz
and
out
js
cmp
or
out
add
sub
lret
daa
repnz
jge
and
cltd
push
mov
jl
dec
lods
dec
and
ror
push
cmp
sub
inc
mov
pop
push
aad
popa
rcll
push
loopne
and
cmp
jecxz
mov
lret
xlat
inc
mov
jg
mov
mov
cwtl
xor
xchg
loop
sub
xchg
fimull
lcall
or
test
iret
cmp
adc
dec
out
or
std
lock
jp
add
inc
rcr
das
stos
jb
lahf
call
in
rcll
fdivrs
shll
imul
sbb
jne
jg
ficoml
fldenv
inc
adc
pop
stos
or
gs
mov
js
adc
repz
loopne
adc
int
jno
cli
rorl
or
cli
xchg
xlat
add
sbbl
out
mov
push
ficompl
and
outsl
mov
mov
push
jle
and
sbb
dec
decl
push
add
jmp
jbe
test
push
loopne
and
icebp
mov
cmpsl
cmc
outsb
in
ljmp
pop
push
jbe
pop
or
es
sub
lret
jl
and
xor
mov
and
jne
int3
mov
outsb
aas
xor
push
pop
or
sti
inc
mov
mov
sahf
pop
pop
push
out
and
xor
add
jmp
int3
jbe
jl
cvttps2pi
sub
or
mov
je
adc
out
xor
out
cld
push
dec
cs
std
and
movswl
mov
add
stc
es
add
or
cmpsb
std
test
es
leave
sbb
sub
aad
mov
fucom
shrb
mov
mov
dec
sbb
xor
pop
popa
or
and
bnd
jns
clc
mov
js
clc
mov
scas
inc
lods
dec
in
jne
in
or
mov
lock
cmp
daa
mov
mov
rclb
xchg
dec
dec
xor
les
dec
sbb
fs
rolb
inc
ret
mov
leave
jmp
mov
fdivl
int3
cwtl
ljmp
out
sahf
std
lods
cmpsb
test
add
pop
in
sub
addr16
lods
call
xchg
pusha
popl
iret
push
mov
pop
pop
pop
sub
scas
xchg
gs
cmpsb
stc
push
xchg
hlt
outsl
sbb
fildl
adc
jnp
and
pop
adc
mov
enter
mov
and
stos
mov
sub
cmp
mov
fs
insb
push
cmp
push
or
or
sar
ret
repnz
inc
mov
sub
sub
ja
vdivpd
mov
in
fidivl
add
xchg
jle
outsb
cmpsl
or
mov
inc
cmpsl
aad
icebp
lret
movsb
out
mov
sbb
in
mov
jmp
enter
loope
pushf
jl
inc
dec
jle
xchg
inc
js
pop
jb
ss
imul
repz
andb
inc
add
popf
mov
pop
dec
xchg
out
stos
xchg
mov
jg
cmp
lcall
mov
lods
pop
adc
jb
stos
mov
or
shll
int3
add
je
pop
aam
std
pop
fcoml
ror
icebp
pop
mov
icebp
push
ljmp
dec
jne
xchg
insb
faddl
push
dec
adc
notl
pop
add
cs
js
inc
add
push
lods
push
aas
mov
and
ret
fprem1
sbb
popa
out
or
mov
loope
in
jge
mov
or
pop
lcall
pusha
pop
pop
and
lret
push
movsb
int3
mov
addb
mov
and
test
add
loopne
frstor
push
mov
mov
cmpsl
inc
cli
mov
hlt
mov
xchg
nop
fadds
pop
das
lods
ficoml
dec
les
cmp
lea
dec
sub
js
mov
nop
out
inc
jno
mov
out
fbld
inc
jo
jae
dec
rorb
test
mov
lcall
inc
pusha
sub
lcall
fs
and
stos
imull
cmp
aam
int3
test
daa
loope
ljmp
mov
mov
adc
test
repnz
cli
or
push
loop
cmpsb
mov
cmp
scas
or
pop
sub
jbe
dec
sub
mov
loop
dec
inc
cli
incl
cld
cmpsb
sbb
scas
out
outsl
dec
into
lods
mov
ljmp
notl
add
jp
ret
sahf
test
xchg
imul
pop
adc
out
mov
sahf
fnstcw
loop
sbb
add
adc
xsave
cli
rcr
dec
loope
mov
lods
iret
mov
add
inc
out
fdivrs
xchg
jecxz,pt
cs
sbb
movsb
jl
cmp
add
fxch
loope
xor
std
sub
andl
mov
cmpsl
ret
inc
scas
aam
jo
push
push
push
dec
fstpl
push
notl
xor
cmpsl
sahf
push
mov
iret
scas
divl
gs
pusha
pop
inc
lods
jge
dec
ja
mov
inc
jp
mov
sti
sbb
push
les
rolb
xchg
aad
mov
in
jle
fcoml
push
js
ret
dec
fs
mov
fs
ja
test
xor
mov
shll
xchg
aam
shlb
popa
divb
es
jg
xor
lahf
push
fidivrs
ljmp
xlat
pop
adc
jbe
sbb
or
mov
inc
sbb
jl
push
in
popf
xchg
outsl
mov
ror
mov
mov
push
xor
or
inc
mov
or
scas
outsb
xchg
mov
hlt
pop
lods
xorb
dec
mov
jmp
fnstsw
pop
push
roll
aas
rcr
or
in
adc
sbb
movups
lret
lcall
adc
imul
cltd
jecxz
int
pop
xor
movsl
popa
jo
ds
aam
enter
pop
inc
pop
sub
sub
mov
cmp
mov
or
repz
es
mov
xchg
sti
pop
xor
xor
mov
aaa
outsb
jmp
divb
insb
lods
sbb
xlat
data16
jne
push
xchg
add
popf
inc
xor
lock
roll
imul
popf
call
imul
xchg
cmp
pop
xchg
xchg
push
add
repnz
icebp
cwtl
loope
sub
imul
mov
jb
idivl
daa
movsl
rclb
cmpsl
push
adc
out
add
arpl
je
pop
jmp
sub
fsubl
jp
int
in
loop
rorb
cld
bswap
fldl
pop
jge
rcll
add
push
arpl
insl
pop
cmp
xor
fmull
mov
ret
cmp
xchg
enter
mov
push
cmp
mov
jg
fisubrs
rcr
iret
shr
daa
div
mul
inc
daa
xorb
cltd
dec
pop
xchg
push
mov
arpl
ja
push
mov
addr16
outsb
imulb
push
leave
scas
cwtl
jp
outsl
pop
adc
shlb
test
popf
xor
mov
ja
mov
imul
push
jbe
add
fistpl
lds
ss
push
pop
loope
lret
notl
bswap
data16
loopne
lcall
push
lods
out
xor
sub
and
jb
xchg
add
mov
and
iret
cmp
cmpl
mov
dec
or
adc
or
fstpl
in
jb
lock
cmpsb
cwtl
imul
or
push
jp
pop
sbb
inc
pop
mov
mov
aad
sbb
mov
xchg
ja
adc
dec
xchg
int
mov
xlat
push
xor
fildl
dec
jmp
and
bound
lar
ds
xor
mov
mov
adc
inc
mov
xchg
aad
insb
std
lods
push
pop
lahf
dec
and
test
or
xlat
cltd
dec
sbb
mov
lcall
dec
pusha
xchg
int3
lods
mov
ljmp
lcall
push
jl
sbb
int
divl
popf
and
lahf
mov
jle
jnp
movsl
jge
cli
xor
add
cmp
mov
outsb
or
out
or
neg
push
push
lods
push
lret
call
aad
adc
xchg
in
mov
add
mov
and
jae
rorb
and
and
scas
sub
sub
shr
mov
mov
xor
mov
bound
sbb
pop
push
mov
adc
ret
sub
testb
mov
inc
mov
pop
pop
add
jne
idiv
in
sbb
mov
cld
xchg
scas
jbe
cmp
cmp
shrl
loope
les
inc
mov
xchg
sub
js
out
and
mov
addr16
dec
jge
ret
mov
cmc
and
lods
shrb
sbb
xor
mov
cltd
das
xor
xchg
imul
xchg
push
roll
fnsave
xorb
jae
movsb
dec
lds
sub
roll
jae
xor
cmp
mov
push
dec
add
or
cmp
jecxz
mov
test
fidivrs
divb
sarl
fwait
test
popa
mov
fdivs
hlt
xor
inc
cwtl
mov
aaa
out
mov
xor
cmc
sarl
outsl
lret
rorb
sub
je
cmp
das
sarl
divl
inc
cld
adc
push
xchg
das
lods
jae
fsubp
cmpsl
in
rclb
cmc
movsb
inc
aaa
lea
xchg
add
repz
les
rcl
mov
lcall
lea
or
rcrl
fidivrs
lret
imul
fadds
inc
lods
aas
mov
jb
sbb
enter
je
mov
sub
jae
enter
inc
cmpsb
mov
mov
fcoml
adc
arpl
ja
nop
adcl
xchg
lods
bound
in
pop
fwait
fs
out
dec
add
sbb
dec
xchg
cmp
mov
adc
and
mov
jmp
sub
xchg
daa
or
sbb
xrelease
mov
cwtl
mov
dec
ss
in
call
cmpsl
int
jmp
rorl
sbb
aad
pusha
les
add
push
add
or
stc
mov
sub
out
setg
jp
or
test
xor
fldt
ljmp
das
mov
push
jge
clc
sub
push
fs
push
and
or
mov
jecxz
in
cwtl
scas
int
adc
mov
add
cmc
pop
lds
imul
scas
fbstp
lds
mov
imul
cmp
cli
sbb
mov
nop
repz
js
loope
pop
gs
cs
mov
gs
pop
pop
int3
into
dec
or
addr16
mulb
jne
or
aas
jecxz
addb
and
dec
gs
jno
sub
std
sub
pop
lret
or
mov
out
jg
xor
or
test
es
mov
sub
mov
out
push
fdivrs
cmpsl
xor
push
sub
push
sub
mov
ret
push
je
fbstp
push
stc
jmp
jne
stc
sub
gs
jg
std
popf
repnz
or
push
mov
push
pop
xor
rcr
cmp
jns
mov
fwait
sbb
mov
mov
cmp
loopne
mov
test
xchg
or
push
xchg
lea
out
out
mov
jbe
leave
xchg
push
sbb
aas
xchg
les
inc
push
fadds
xor
or
in
jp
shlb
das
xor
xor
lock
test
imul
sub
dec
adc
push
mov
dec
jne
cmpsb
in
dec
les
bound
push
sbb
testb
add
cmpsb
jae
push
jl
mov
ss
js
adc
push
xchg
incl
jge
add
mov
loope
pop
adc
or
mov
loopne
std
in
cld
mov
shrl
cli
pop
rcrl
add
or
rcrl
fstps
pop
shl
cmpsl
pop
enter
jecxz
push
loopne
jle
aad
subb
sar
jne
sub
lods
es
fsubs
jg
mov
and
xor
loopne
je
cli
inc
xor
aaa
inc
sti
in
rolb
daa
repnz
pusha
dec
sbb
outsb
adc
mov
stc
add
xor
sub
test
aas
push
pop
out
rcr
lods
inc
enter
mov
xor
sub
cmp
aas
mov
mov
fwait
arpl
jb
mov
andl
mov
test
mov
loope
inc
inc
cmpsb
jbe
jns
aad
jno
and
mov
mov
stos
in
mulps
imulb
xchg
mov
sahf
xor
cmpsl
dec
dec
or
lcall
dec
push
mov
andl
daa
sub
outsb
dec
mov
xchg
ds
cmpsb
in
cli
repnz
fwait
sahf
pop
pop
adc
mov
pop
cmp
mov
idivl
adc
mov
fstpl
imul
xchg
and
aam
imul
push
xor
dec
push
ljmp
xchg
push
mov
dec
insl
hlt
lds
lods
push
or
mov
mov
xor
lea
outsl
clc
and
mov
sbb
iret
fnstcw
sbb
sub
in
jne
mov
into
les
enter
repz
xchg
mov
inc
dec
jb
sbb
cmp
push
ja
dec
or
mov
adc
outsl
and
ja
pop
repnz
push
mov
and
int3
mov
xor
addb
fldenv
cmc
movsl
rclb
mov
mov
dec
cmc
dec
add
adc
inc
jecxz
dec
pop
inc
mov
repz
outsb
out
ss
ret
cld
das
ret
mov
pusha
nop
ficoml
shl
gs
hlt
ja
jl
pop
mov
leave
push
data16
or
ret
iret
mov
mov
loope
fsts
push
push
inc
mov
addr16
lds
nop
push
stc
mov
push
jbe
mov
gs
nop
or
sbb
in
xlat
int
xchg
jp
nop
leave
je
jp
ficomps
call
mov
mov
pusha
push
mov
gs
gs
addb
pop
xchg
cmp
loope
leave
lret
out
sarb
sub
inc
pop
mov
xchg
sahf
dec
push
fcoml
lods
mov
jns
mov
push
mov
out
xchg
iret
dec
xchg
push
into
subl
xor
ja
subb
mov
pop
cld
popa
loope
loopne
pop
mov
cmp
test
xbegin
sbb
cmpsb
fidivl
fstl
mov
jno
bound
or
out
xor
in
cmp
pop
ret
cmpb
icebp
lock
aaa
insb
fs
mov
hlt
cmp
jmp
cmp
shrl
mov
jnp
mov
add
mov
sbb
mov
dec
push
popa
sub
les
repz
leave
sarl
or
mov
lea
add
sbb
in
pusha
int3
cwtl
jp
cltd
ss
in
mov
jb
pop
xor
mov
push
pop
and
mov
outsb
mov
xor
lret
inc
sahf
orl
dec
mov
mov
and
std
insb
je
xor
lcall
dec
cmp
pop
lret
adc
mov
xchg
mov
repnz
sti
cmp
lahf
push
ja
push
mov
test
xor
sub
popf
sbb
aaa
enter
movsb
lods
ja
xor
cmp
and
add
mov
push
daa
loopne
pop
adc
cmc
iret
out
test
xchg
cmp
stos
sbb
sbb
mov
cld
andb
aam
scas
out
push
add
mov
setns
mov
js
jns
jmp
push
stos
rcrb
out
arpl
mov
test
cmp
mov
ljmp
mov
sti
jl
out
out
popf
pop
push
call
aam
adc
shrb
fstpt
test
fildll
and
adc
pop
push
rcrl
push
jb
pop
jle
lods
jo
rorl
and
push
ss
imul
out
popf
sub
in
mov
movsl
fcomi
adc
push
lahf
icebp
fs
or
out
mov
daa
xor
inc
ret
data16
popf
pop
jb
and
subl
add
aaa
sub
stc
scas
es
mov
outsl
shl
daa
call
inc
fnstcw
adc
add
outsl
movsb
dec
imul
shrb
push
stc
pop
mov
fcmovbe
mov
inc
dec
lods
jb
sub
mov
adc
je
mov
add
and
mov
cmpsb
paddq
push
mov
push
jno
out
out
stc
jbe
scas
cmc
sub
ljmp
lcall
mov
out
sbb
iret
adc
insb
add
icebp
jno
mov
xor
inc
inc
cld
fcompl
fisttps
dec
aam
dec
mov
das
and
in
imull
test
xchg
negl
orb
jg
jae
pop
popf
push
sub
cmc
xchg
aaa
cmpsl
and
or
push
arpl
ret
inc
mov
outsl
or
adc
out
mov
cmpsb
test
ja
das
mov
divb
aas
sahf
inc
insl
xchg
rorl
imul
or
lds
cltd
add
lret
xchg
scas
insl
jle
sbb
ret
adc
and
dec
xchg
push
movsb
and
pop
scas
pop
je,pn
outsb
arpl
push
pop
fs
and
pop
int
and
xchg
movsl
jns
dec
jecxz
jg
and
inc
push
jnp
stos
xor
xor
imul
mov
adc
shrl
fwait
or
mov
addr16
dec
mov
test
outsb
mov
pop
xor
in
lds
jns
cmp
shlb
mov
jle
push
into
fdivr
adc
aas
mov
insb
testb
and
mov
ret
add
lahf
shll
in
movsl
bound
lea
jmp
ja
loop
lret
hlt
xor
loop
dec
sub
jl
dec
iret
adc
jbe
sbb
aam
inc
adcl
xor
push
adc
sub
les
pop
pop
or
sahf
mov
jmp
jb
inc
jge
fidivl
pusha
inc
mov
addb
mov
push
jno
call
movsb
xchg
fs
pusha
jnp
loop
std
jl
loopne
push
jecxz
roll
roll
cmc
or
popf
addr16
dec
cmp
xchg
cmpsl
mov
sub
jo
outsb
inc
out
jo
movsl
xchg
pop
dec
cmc
daa
jnp
iret
inc
xchg
xchg
mov
sbb
icebp
in
test
jle
pop
mov
and
inc
ljmp
sbb
add
hlt
out
test
jne
jae
hlt
bound
xor
or
lods
js
or
adc
sarl
dec
std
insb
loopne
push
push
jmp
add
jno
insb
popf
cmp
xchg
sahf
cmp
jl
mov
jb
test
divl
pop
and
and
inc
push
sub
fldenv
jno
xor
xor
inc
dec
repnz
cmp
stos
add
and
enter
mov
mov
xchg
mov
adc
add
sub
push
jmp
outsb
les
push
jae
mov
pop
cs
or
add
mov
sub
test
pop
jbe
cmp
insl
in
mov
aaa
mov
push
out
mov
into
mov
xor
dec
in
fcmovnu
mov
leave
or
popa
adc
lret
ret
mov
xlat
jmp
std
pop
insb
fidivrl
jnp
mov
xchg
push
add
and
or
in
sub
inc
shll
mov
gs
jo
push
add
push
xchg
pop
pop
shr
cmpsb
adc
xor
fmuls
test
push
ja
dec
out
fiaddl
icebp
pop
xchg
fs
mov
push
lods
iret
nop
cmpsb
xor
pop
xor
pop
cld
pop
dec
jae
ljmp
mov
and
mov
push
dec
testl
aam
xor
inc
int3
or
mov
sub
mov
popa
cmc
cmp
frstor
dec
jle
stos
and
pop
and
dec
sbb
cli
dec
add
shr
mov
inc
pushf
xchg
outsb
cmpsb
test
ret
add
xchg
jle
iret
ret
cli
dec
adc
fistpl
orl
xor
push
and
je
and
dec
mov
loopne
cmp
pop
in
ja
popa
jbe
iret
lods
and
jne
cld
pop
cmp
sbb
mov
inc
hlt
mov
cmp
push
stc
mov
sub
mov
mov
cli
dec
sbb
cmp
sahf
mov
jb
mov
aaa
push
ljmp
insl
push
aam
pusha
xchg
sarl
jl
mov
sbb
or
jp
sbb
xchg
inc
pop
testl
mov
enter
xor
inc
ror
nop
mov
out
rcr
jp
jne
pushf
call
lods
and
divb
test
dec
jns
inc
aaa
sbb
aaa
mov
add
js
xchg
or
dec
mov
mov
or
or
mov
push
das
xchg
sub
cld
sbb
or
hlt
loop
cmp
and
adcl
pop
imul
jge,pn
in
cmc
or
mov
pop
or
rcrb
adc
push
add
xor
enter
andb
jo
aam
dec
fisubs
mov
je
shl
mov
mov
adc
mov
ficomps
in
adcl
cld
cmpsb
sti
in
stos
sbb
out
mov
mov
push
xchg
add
push
jns
dec
sbb
gs
add
cmpb
pop
jb
data16
jb
jnp
lods
mov
imul
addr16
or
dec
ljmp
cmp
inc
pop
inc
jle
pop
add
push
loope
inc
pop
push
mov
aad
jno
outsl
inc
std
xor
sub
push
jmp
inc
push
and
jno
fwait
lea
icebp
cmp
dec
push
mov
andb
jae
cmpb
loopne
mov
bound
or
push
icebp
jne
mov
add
fwait
xor
jp
fldl2t
mov
add
popl
cld
add
je
int
mov
insb
lret
push
add
and
sbb
not
jle
das
xchg
xchg
lea
fwait
jl
mov
movsl
push
fildll
adc
cmp
sub
popl
mov
mov
loope
imul
dec
fidivrl
data16
sub
faddp
sti
jo
ss
adc
cmpsl
cmpb
push
cs
and
mov
inc
loop
lods
pop
scas
mov
mov
adc
mov
push
icebp
sub
pushl
ss
es
pushf
push
xchg
dec
test
pushf
xchg
push
dec
xchg
lock
cmp
mov
or
cwtl
jg
dec
stos
imul
mov
pop
cmpsl
cmp
lret
scas
cmp
vmaxpd
hlt
jns
inc
icebp
mov
adc
cmp
fnop
mov
xor
mov
inc
clc
pushf
jno
mov
adc
insl
repz
test
jo
repz
and
sbb
stos
adc
xchg
sub
stos
xlat
outsl
fwait
inc
mov
pop
mov
sub
sbb
adc
negb
sub
jb
lds
pushf
mov
sti
lcall
shll
push
fwait
mov
adc
lcall
fadd
jmp
adc
ljmp
cmp
jbe
jle
jmp
outsb
data16
push
aaa
xchg
xor
clc
cmp
xchg
pop
out
rclb
fwait
stos
jnp
xchg
ss
pop
aas
ds
push
movb
dec
in
test
or
xchg
dec
sub
push
mov
jle
lea
xlat
add
mov
inc
mov
mov
dec
int
dec
imul
test
jns
out
loop
pop
bound
sub
and
pop
adc
or
push
xchg
cwtl
nop
adc
icebp
mov
add
inc
mov
and
cmp
pop
out
mov
outsl
cmpsb
inc
out
fstps
sub
mov
dec
inc
xchg
inc
cmp
sub
xchg
mov
inc
aam
and
pop
push
sub
pop
insb
ja
xor
push
pusha
jne
adc
xchg
push
call
xor
pop
out
mov
xchg
stos
and
mov
shl
add
mov
mov
push
push
mov
or
fidivs
mov
mov
std
aas
push
sub
xor
sahf
add
cmp
addl
movsl
push
pop
repnz
popf
ljmp
xchg
jle
mov
sub
or
xor
in
push
mov
mov
insl
jne
in
aaa
mov
js
xchg
xor
int
xchg
repnz
or
sbb
lret
jns
mov
mov
aaa
or
ret
ss
jp
ret
jp
pop
lods
jmp
mov
jge
jge
xchg
sbb
jno
and
add
fwait
out
pusha
cwtl
mov
push
sub
push
pushf
xorb
mov
out
cmpsb
fisubrs
jae
in
adc
xchg
sub
cmp
loop
sub
push
xchg
imul
adc
mov
jg
pop
push
test
hlt
sbb
loopne
push
sbb
sbb
pop
ja
push
pushf
stc
adc
rclb
xor
pop
jg
imul
sahf
in
sbb
and
push
pop
lea
outsb
js
sub
jae
jge
push
add
lea
pop
dec
jge
int
test
nop
jae
imull
mov
and
cld
add
shll
call
ret
pop
call
add
in
xor
shl
loop
add
cmpsb
sarb
xor
mov
loope
rorb
gs
ds
mov
mov
dec
repnz
icebp
test
or
fldt
outsl
aaa
and
jp
popf
or
sub
insl
jge
adc
dec
dec
out
callw
aaa
fs
js
test
push
sti
sbb
mov
roll
subb
xchg
repnz
sarb
jmp
mov
xchg
in
push
aad
test
mov
mov
into
mov
xor
ljmp
fwait
dec
push
jb
arpl
mov
dec
mov
push
and
jg
xchg
push
stos
or
push
pop
sbb
in
hlt
lods
insb
das
dec
pop
lods
pop
lret
xlat
je
stos
adc
inc
inc
clc
or
xor
xchg
insl
sub
sub
cmp
push
sbb
sub
xchg
inc
sbb
jnp
add
bound
xchg
pop
xchg
push
sbb
push
popa
scas
shll
es
mov
inc
mov
vhaddpd
daa
in
ds
je
xchg
popa
arpl
ret
mov
fwait
lock
push
push
shrb
inc
push
jo
xchg
test
ret
or
in
aaa
repz
jnp
fisubrl
nop
lea
pop
pop
bnd
push
lock
push
pop
mov
push
lock
repnz
push
and
popa
xchg
mov
addb
test
rorl
jge
mov
sti
stos
outsl
jno
xchg
mov
popf
dec
jae
xor
cmp
add
push
outsl
xor
test
or
mov
push
mov
add
ja
jno
mov
es
popa
fnstsw
push
movsb
pop
aam
cmp
stos
outsb
sti
mov
popf
out
aad
or
mov
pop
ljmp
lock
add
outsb
push
sub
pop
adcb
outsb
adc
push
xor
lea
dec
dec
sub
mov
mov
or
je
out
iret
jmp
inc
mov
insl
pop
inc
sahf
lock
sbb
sbb
jecxz
call
fcoml
mov
lods
out
inc
popl
sub
jle,pn
lds
ljmp
jmp
gs
add
sbb
lret
sbb
nop
cmp
inc
pop
push
fnstenv
mov
lret
and
leave
sbb
std
cmp
cmp
cli
sti
adc
inc
addr16
or
repz
lret
shlb
xchg
repz
xor
xchg
push
push
orb
or
fimuls
xlat
sti
popa
lds
inc
lahf
xor
sbb
scas
pop
repnz
out
push
ficoms
mov
outsb
jg
or
mov
cmp
sub
xchg
cld
loop
div
sahf
insb
popf
in
aaa
test
das
pop
sbb
sbb
mov
cmp
sarb
pop
dec
add
mov
cmpsl
jg
xchg
add
push
sub
lock
les
xchg
test
sahf
stc
xlat
cmc
add
inc
and
push
leave
daa
cwtl
in
sub
hlt
push
ret
in
add
cmp
mov
sub
in
andb
adc
divl
xor
jmp
cwtl
inc
ds
pushf
lahf
add
ljmp
and
subl
dec
pushf
sbb
lds
roll
jne
dec
jo
pop
xor
or
pop
push
mov
les
cs
lock
pop
cs
shl
das
nop
es
cmc
push
pop
sbb
pop
into
dec
jecxz
dec
addb
pop
and
lcall
das
sub
clc
xor
mov
stc
std
xchg
push
or
mov
cmp
dec
roll
test
je
ss
das
and
cmp
cmp
out
adc
or
adc
stos
js
mov
pop
pop
or
push
pop
loopne
cmp
aas
fxch
sub
sarl
adc
mov
pop
loopne
and
xor
add
test
outsl
mov
push
fnsave
loopne
xchg
xor
push
sbb
shrb
test
popa
js
mov
lcall
clc
mov
pushf
hlt
mov
xor
sbb
leave
cli
and
lahf
popa
mov
stos
shrl
push
jge
imul
aaa
pushf
jnp
pop
ljmp
cwtl
hlt
ja
pop
sub
push
inc
mov
popf
and
inc
daa
loopne
rclb
mov
les
mov
jno
fcompl
fadds
add
xchg
ds
and
out
repz
es
sbb
push
cmp
in
ret
loopne
insl
push
mov
adcl
sub
rclb
lods
clc
mov
mov
dec
loope
dec
popf
adc
fcmove
jle
insb
sub
push
iret
xchg
jge
ret
xor
aad
aas
fistps
mov
mov
subl
jle
popa
notl
dec
cwtl
shrl
lret
gs
daa
jne
pop
and
mov
je
sub
movd
adc
out
push
leave
and
int
or
ss
rclb
in
sbb
daa
iret
outsb
inc
inc
jl
imul
mov
test
ss
in
dec
push
arpl
movsl
insb
and
add
inc
fimull
test
pop
hlt
cltd
dec
cmc
cmp
xchg
stc
rcrb
mov
leave
fmull
cmp
stos
mov
movl
inc
inc
add
fcoms
shlb
mov
icebp
pop
adc
pop
addr16
icebp
jbe
sbb
mov
mov
pop
and
adc
test
pop
push
jae
subl
mov
add
xchg
pop
lock
int
sbb
mov
pop
ds
insb
subb
lods
out
call
idivl
jp
pop
inc
xchg
lods
dec
mov
into
jno
in
mov
cmc
iret
cltd
fadds
dec
roll
xlat
int3
adc
pop
sbb
fnstsw
lods
jo
mov
lds
subl
aaa
add
push
sbb
mov
sbbb
mov
sbb
filds
aam
adc
dec
ficoml
test
sub
pop
or
jl
jge
mov
sub
in
pusha
lret
clc
scas
pop
pop
and
mov
cmp
xchg
add
loope
mov
xchg
in
mov
add
fsincos
test
frstor
xchg
cs
pushl
arpl
jecxz
pop
fdivs
test
ja
push
insb
add
lret
ss
movsb
pop
dec
mov
xor
int
js
ret
aad
movsb
push
out
dec
adc
sbb
movsl
adc
fpatan
shll
pop
adc
int
sub
jmp
out
pop
sub
lods
mov
movl
dec
push
loope
dec
test
das
das
add
fwait
mov
sbb
jo
adc
xor
or
ja
adcl
inc
test
push
into
push
inc
leave
inc
cmp
dec
sahf
imull
inc
xor
xchg
xchg
or
push
test
fbld
sub
inc
pop
in
scas
push
stc
cmp
jne
mov
sbb
stos
gs
jne
cmpb
in
sub
sti
mov
mov
sbb
iret
rcrl
and
pushf
jmp
out
in
jmp
flds
dec
clc
mov
sbb
jmp
push
xor
xorl
imul
popa
dec
xor
pop
cmp
in
dec
inc
xchg
icebp
movsl
imul
mov
ljmp
mov
xor
cli
ds
leave
fdivr
pusha
sbb
popf
mov
cmp
sub
xchg
push
out
pop
sub
jg,pt
push
cld
mov
roll
mov
inc
and
divl
and
push
inc
jg
dec
push
cmp
hlt
pop
push
pop
aaa
push
mov
xchg
and
lds
cwtl
cmpb
repnz
lret
mov
jl
cmpsl
mov
call
into
fisttps
and
push
movsl
movsb
idivl
sub
mov
addr16
int3
addr16
xlat
push
imul
jns
inc
enter
inc
and
jbe
dec
mov
inc
je
jno
std
xor
mov
xor
fsubr
mov
and
sahf
adc
xorb
iret
xchg
enter
adc
ss
loope
lods
ljmp
stos
fcoms
ret
and
or
xchg
sub
jae
pushf
repz
jg
mov
or
push
mov
or
icebp
add
mov
adc
fidivrs
pop
pop
xlat
enter
push
xorl
jge
pop
mov
fisttps
aad
mov
scas
in
outsb
in
lret
cli
push
repnz
fistpll
and
push
in
sub
nop
add
test
mov
sbb
fldcw
das
int3
pop
test
pop
adc
sbb
jg
jle
adc
insb
mov
push
push
into
mov
nop
or
loopne
cwtl
and
outsb
push
and
pop
push
push
dec
xor
inc
int3
loope
test
pop
dec
int3
daa
mov
int
pop
sub
mov
std
ja
adc
pusha
ficoms
cmp
xchg
inc
jo
xor
push
scas
outsb
adc
pop
jns
xchg
inc
ror
add
in
lret
out
pop
add
sbb
repnz
es
lcall
xor
ds
lret
mov
test
es
jmp
fadds
jp
dec
cltd
mov
fistpl
scas
inc
xor
lahf
iret
lods
pop
out
xor
jae
mov
cli
in
jecxz
sahf
jbe
out
pop
in
push
and
xchg
daa
mov
and
inc
cmp
int3
sbb
addr16
xchg
or
cmp
inc
jno
pop
sbb
and
inc
jg
clc
sbb
jno
fistpl
not
xor
out
mov
jno
jns
or
xor
mov
out
lock
into
icebp
dec
inc
lods
loop
cmpsl
jl
rolb
lods
mov
add
cld
mov
mov
out
arpl
out
push
or
jmp
pop
pop
mov
mov
mov
sahf
fisttps
sahf
es
lahf
mov
movsb
jns
cld
lret
imul
scas
sahf
mov
sahf
bound
lahf
fstl
and
mov
sbb
push
adc
push
in
jg
or
or
xlat
testl
pop
push
push
sub
xchg
dec
xor
fiaddl
test
stos
test
inc
sub
xor
push
push
sbb
mov
xor
test
jecxz
pop
out
lret
jbe
inc
sub
push
popa
hlt
xor
lods
aad
jo
jno
rorl
ds
sub
repz
nop
inc
mov
mov
jp
notb
dec
dec
dec
movsbl
popf
imul
dec
lds
leave
and
mov
push
fmuls
sub
jb
sub
xchg
fstpl
pop
or
out
das
subb
repz
arpl
jbe
stos
loopne
push
sbb
mov
test
sub
icebp
xchg
cmc
push
pusha
loope
inc
and
jp
and
mov
insl
inc
lods
andl
cmc
or
fcoml
movsl
sub
mov
xor
not
sbb
repnz
inc
jbe,pt
pop
ds
mov
cli
mov
inc
jmp
add
xchg
pop
mov
push
pop
cmpsb
cmp
xor
and
xor
add
push
daa
les
ja
idivb
push
stos
je
aaa
fucomip
imul
cmp
hlt
pop
push
lods
pop
lahf
cmp
xchg
sbb
mov
es
sub
ss
jmp
stc
cmpsl
dec
add
jnp
push
inc
mov
adc
mov
inc
mov
mov
je
jo
xchg
xchg
jo
jno
adc
shll
push
jge
aam
dec
fimuls
push
cs
leave
ja
mov
ss
cmpsb
jb
stc
mulb
sahf
lcall
inc
cwtl
push
out
jo
cmc
push
lret
mov
scas
pop
and
pop
inc
jb
js
add
jae
inc
fcomps
jmp
inc
jo
mov
into
shrl
mov
inc
daa
mov
add
lea
popf
jmp
repz
sbb
test
adc
mov
mov
mov
add
sub
test
sbb
dec
jb
les
xor
loop
cmc
js
mov
test
les
push
gs
add
repz
daa
jbe
inc
sbb
std
fwait
inc
jae
cmc
jle
cs
add
xchg
adcl
out
or
and
jno
lds
xor
sub
inc
cmpsl
adc
loope
sbb
cmp
outsb
lret
mov
fdivrs
or
ds
inc
fwait
stos
adc
daa
xor
pop
xchg
sahf
sbb
inc
clc
xchg
sub
and
lret
dec
das
pop
fidivrl
int3
stos
sub
and
cld
fdiv
outsb
jns
mov
pusha
out
fnsave
inc
aas
daa
mov
stos
dec
icebp
adc
addl
cmp
push
insl
mov
cmp
shll
or
jbe
movsl
or
push
test
add
xchg
imul
pop
das
loope
push
jne
call
incb
sti
dec
dec
jp
fidivrs
out
jne
ss
sbb
lea
cli
mov
int3
insb
outsb
jns
xor
mov
xor
je
shrb
in
mov
mov
cmp
bndldx
mov
jmp
pop
pop
or
xor
inc
loop
out
fildll
pop
cmp
pop
pop
or
cmp
rolb
outsb
aad
dec
mov
cld
mov
jae
imul
xchg
mov
ret
cmpsb
fucomp
pop
loopne
cmp
sbb
loopne
psubsw
xor
aaa
pop
jle
outsb
jecxz
push
mov
sub
addb
xchg
mov
incb
and
test
out
adc
push
arpl
mov
popf
fnstenv
adc
out
sahf
dec
enter
push
mov
lret
inc
xor
jns
das
popa
inc
push
popf
inc
add
xchg
cmp
xor
mov
popf
js
ss
cmpb
lcall
sbb
ret
mov
ret
lods
loop
iret
push
mov
outsb
lret
mov
cmp
mov
clc
cmp
dec
mov
fnstsw
lea
arpl
dec
jp
add
popa
cmp
insb
sarl
dec
jb
into
mov
ss
ljmp
lahf
or
cmp
adc
repnz
aaa
adc
out
gs
mov
lret
ret
jae
cld
and
outsb
or
mov
andb
push
or
pop
inc
pop
xchg
add
mov
nop
add
ret
inc
xchg
dec
mov
mov
mov
in
in
mov
fwait
add
insl
out
inc
and
pusha
mov
mov
xchg
gs
xor
fistl
cli
mov
push
push
pop
ret
or
in
xor
push
test
loop
xchg
mov
and
dec
fs
cmp
xchg
aad
and
fidivrs
push
packssdw
mov
or
je
fwait
xchg
stos
mov
aaa
rorl
movsl
out
dec
dec
xor
mov
xor
and
dec
mov
and
xor
orb
ret
repnz
push
jno
repnz
lea
and
orb
mov
dec
and
jo
imul
arpl
test
aas
ret
dec
orb
xor
lret
xor
pop
sbb
xchg
in
adc
lahf
xchg
incb
gs
jnp
out
addl
xor
inc
xor
iret
popf
add
mov
adc
out
fadd
jae
push
aas
pop
outsb
mov
xchg
leave
mov
mov
push
pop
and
shr
ret
sub
aas
in
movsl
movsl
sub
stc
jae
dec
pop
xor
stc
fwait
fs
das
inc
out
popa
cld
cmpsl
mov
xchg
sti
xchg
xchg
pop
in
in
mov
aas
mov
std
repnz
es
sub
jnp
sahf
xchg
aaa
jmp
inc
pop
adc
dec
rcrl
sub
dec
push
mov
aam
int
push
and
mov
addl
sbb
sarl
scas
pop
or
cmp
sbb
or
sub
clc
jns
repnz
stos
arpl
xchg
cli
cmp
in
rcll
adc
mov
sbb
aas
jle
mov
sub
cmpsl
push
int
enter
add
mov
add
daa
shr
sub
push
pushf
jns
xchg
gs
mov
adc
xorb
xchg
test
cmp
pushl
loop
rcll
jp
mov
jbe
decl
xor
sub
cmp
ljmp
popf
dec
cmp
or
insl
and
xchg
sbb
insl
cmovb
push
pop
fildl
leave
sbb
daa
sbb
mov
aam
sub
in
les
sbb
addr16
stc
mov
jbe
pop
out
push
pause
adc
jno
mov
push
enter
arpl
xor
sub
daa
fwait
insl
loop
sti
fs
jmp
stos
and
sub
aaa
push
test
ljmp
push
push
and
in
in
xchg
and
jmpw
dec
sub
gs
push
or
dec
mov
rclb
sbb
pop
imul
add
int
xchg
insb
pop
mov
add
add
mov
insl
xchg
ret
movsb
mov
test
loope
sbb
mov
lods
in
mov
inc
cmc
mov
sahf
xchg
popa
lea
ds
test
nop
fmulp
insl
imul
js
orb
rcrl
pop
pushf
insb
cmp
adc
xchg
xchg
test
or
lea
pushf
clc
pop
mov
jmp
mov
stos
rclb
mov
mov
push
popf
pop
dec
orl
push
pmaxsw
stos
push
xchg
pop
xchg
sti
out
push
xchg
dec
loope
imul
and
or
insl
pop
imul
xchg
stos
mov
cmc
fldz
lar
std
and
cltd
inc
unpckhps
dec
xor
ret
lods
xchg
jne
xchg
add
sbb
cmp
lret
ljmp
mov
inc
lret
inc
mov
add
xchg
xchg
sbb
jne
jecxz
sbb
inc
jns
inc
test
aaa
push
in
es
jl
xchg
test
aad
aad
push
ret
iret
bound
mov
hlt
mov
xchg
test
mov
fidivrs
js
fwait
mov
out
add
stos
and
lods
xor
push
cwtl
or
stos
aaa
fnsave
push
bound
pop
mov
fwait
rcll
or
add
test
mov
int3
ficoms
in
and
xlat
mov
andb
mov
push
int
adc
aaa
jae
or
pop
mov
sub
mov
mov
mov
mov
mov
sub
testb
lret
fscale
add
dec
sbb
mov
mov
pop
mov
or
sti
xchg
cld
jl
mov
xchg
ljmp
loop
in
dec
jno
arpl
dec
push
pop
sbb
push
decb
pushf
xor
pop
nop
daa
addb
std
shlb
test
stos
sub
mov
addr16
inc
mov
cmp
sbb
cmpsl
sub
mov
loope
ds
jmp
fiaddl
mov
mov
cmp
and
mov
and
aaa
cmp
or
or
add
icebp
xchg
pop
inc
out
sub
insb
loopne
into
pop
pop
cmpsl
pop
aaa
xor
scas
cld
push
pop
sub
cmp
lds
xchg
add
mov
call
and
sbb
xcrypt-cfb
cmpsl
pcmpeqd
dec
in
push
gs
jmp
mov
adc
loope
fs
test
movsb
in
lret
mov
lret
and
movsb
icebp
fsubp
and
jmp
xchg
xor
out
inc
push
enter
fnstsw
mov
mov
insl
mov
orl
sub
push
jb
mov
sub
push
xchg
gs
xlat
imul
rclb
aas
into
cmp
pop
mov
sub
in
cmp
mov
incl
roll
inc
and
or
mov
and
inc
dec
add
mov
icebp
or
mov
fldcw
xor
mov
cmpsl
into
jecxz
or
mov
or
lea
sub
das
rcrb
mov
sarb
aaa
and
xchg
push
js
push
lret
clc
and
aam
sub
xchg
jg
movsb
nop
push
jp
cmp
sbb
fstpt
pop
push
loope
cmp
lods
mov
adc
clc
rorb
movsb
mov
cld
sub
add
lods
and
ror
pop
xlat
insb
lahf
lcall
cmpsl
out
in
and
fdivrl
jb
loope
arpl
sub
push
lods
mov
scas
cs
mov
call
in
xchg
sub
jmp
popf
and
in
mov
or
mov
sbb
jmp
mov
aas
add
push
popa
ficoml
js
jne
scas
call
insl
mov
push
jle
rcl
cmp
insb
fwait
cmp
xchg
jne
mov
add
mov
es
xchg
or
mov
mov
push
push
adc
jno
sbb
push
push
imull
loope
lods
sbb
ljmp
push
or
iret
push
addr16
inc
and
cli
dec
pop
clc
test
cmp
jge
cmpsb
icebp
data16
enter
jl
xorb
sub
cwtl
jb
adc
leave
and
loope
dec
xor
xor
xor
mov
and
lahf
scas
fldenv
xchg
pusha
icebp
xchg
dec
lds
dec
nop
insl
inc
xor
loop
sub
repnz
jecxz
imulb
and
push
pushf
inc
loop
pop
jns
jo
lret
jo
mov
cmp
cmpsb
mov
mov
arpl
dec
inc
jl
clc
cli
cld
iret
hlt
pop
subb
push
aam
mov
je
dec
inc
rcll
mov
jle
repnz
push
aaa
and
out
cmpsb
aas
pop
and
pop
jae
je
sbb
xchg
inc
mov
mov
push
jae
and
shlb
enter
scas
loope
sub
shll
mov
and
push
mov
cmpsb
xchg
or
cli
lea
jp
inc
int
sbb
outsl
xchg
add
arpl
lret
aas
aaa
pop
mov
mov
push
ljmp
fnsave
icebp
jbe
fistl
je
xor
push
xchg
push
adc
loopne
sub
mov
push
mov
sbb
jb
outsl
fsubp
mov
jecxz
jns
mov
stc
rol
sub
pop
out
dec
and
push
push
jae
lcall
in
pusha
pop
fs
shlb
mov
xchg
mov
int3
sbb
jecxz
jbe
lahf
stos
jecxz
je
mov
ret
mov
in
aas
adc
test
inc
xchg
push
js
jg
test
sbb
mov
movsl
mov
in
or
mov
push
and
mov
pop
xchg
add
add
stc
push
jae
xchg
push
aaa
sub
fwait
sti
test
jnp
nop
out
add
mov
icebp
and
imull
ss
dec
fldenv
mov
loope
jns
ljmp
test
scas
mov
ss
jle
pop
inc
les
dec
push
into
rorl
lcall
fnstsw
mov
pushl
sub
popa
idiv
fdivrp
jmp
inc
into
and
mov
xlat
call
in
cli
lcall
leave
adc
xlat
in
out
jmp
scas
orb
lds
mov
stos
daa
jmp
cs
mov
jne
cmpl
shll
pop
inc
arpl
adc
in
cs
xchg
outsl
iretw
das
cltd
add
sub
dec
mov
les
xchg
mov
mov
js
outsb
mov
sar
cli
adc
sahf
leave
insb
out
adcl
xchg
arpl
shrb
cwtl
pop
dec
out
popa
mov
daa
arpl
jns
outsb
ret
stos
lock
leave
push
mov
xchg
sbb
subb
fsubrs
sti
cmp
jns
and
and
or
and
xchg
fdivr
jge
sub
add
int3
xchg
nopl
adc
imul
test
or
xor
adc
xor
mov
js
inc
sarb
pop
or
jecxz
bound
push
cli
cmc
movb
addr16
xchg
push
movsl
cmp
pop
xchg
add
test
xor
mov
push
fs
movsl
mov
mov
imul
lods
loop
sahf
and
or
and
mov
inc
loope
lods
test
mov
xlat
adc
test
js
out
pop
insl
out
sub
jns
rolb
fstl
lods
lcall
test
push
lcall
cld
out
notl
dec
popf
out
cmp
lds
insl
ror
mov
ljmp
repz
jno
sub
fdivl
clc
cltd
fcoml
push
or
js
ret
sub
sub
push
cmp
das
sarl
test
mov
js
repnz
aad
add
inc
pusha
and
andl
lcall
push
jae
dec
xchg
or
sti
jle
cwtl
inc
iret
lea
adc
pop
fs
jmp
loope
pop
and
lcall
push
stos
mov
and
lret
lahf
out
jmp
lret
mov
or
hlt
fsubs
mov
sub
push
inc
sub
and
and
popa
sahf
movsl
add
push
inc
jae
cmpsb
xchg
push
nop
mov
xchg
mov
push
call
je
sbbb
in
push
inc
call
dec
dec
rorl
inc
sub
xchg
out
xchg
xor
ja
or
xor
lock
mov
pop
adc
decb
popa
icebp
pusha
imull
fimuls
jns
lret
cmp
sub
cmc
fsubs
push
rolb
imul
out
jge
xor
sub
push
js
scas
idiv
mov
push
sub
repz
addr16
mov
pushf
out
mov
fdivs
sbb
jmp
ljmp
movsl
sbb
cmpsb
test
mov
lcall
mov
mov
bound
imul
sbb
push
pop
push
mov
in
lock
cmp
jno
int
or
xor
addl
shl
xchg
fdivl
es
push
dec
fsubrl
mov
and
ret
fimull
ret
loop
jle
outsl
rcr
push
sbb
pmulhuw
imul
adc
push
sbb
mov
fstps
sti
lret
lock
pop
pop
cli
cli
lds
aad
jge
cltd
lahf
aas
inc
xchg
xor
sub
pop
pop
or
or
lods
push
xor
aam
inc
int3
inc
adc
xor
es
loopne
popa
cld
add
xchg
adc
lock
pop
jmp
outsb
push
repnz
and
and
icebp
jecxz
int3
into
and
scas
enter
mov
dec
push
out
cli
int
and
mov
sbb
pop
inc
mov
sbb
xor
and
lcall
movsb
mov
pop
xchg
pop
xor
scas
mov
pop
inc
mov
pusha
lcall
loope
pop
nop
xchg
stc
jns
cmp
dec
sub
dec
and
sbb
lods
mov
xor
js
push
pop
int3
xchg
inc
arpl
mov
adc
rcrl
pop
mov
mov
and
cwtl
push
push
cmpl
push
pop
mov
gs
daa
sti
aaa
repnz
andb
gs
popa
dec
sub
jecxz
and
sub
lret
pusha
jge
aas
push
fxam
xchg
rolb
cmp
cmpsl
inc
sub
jmp
add
ss
jl
dec
mov
sbb
add
inc
sti
dec
jmp
adcl
movb
xorb
les
test
pop
inc
adc
std
xchg
addb
push
xor
out
mov
mov
add
mov
xor
nop
test
loope
lcall
mov
dec
mov
aad
pushl
bound
xchg
into
outsb
sbb
inc
push
mov
mov
repnz
adc
fistps
lea
push
mov
nop
repnz
fwait
add
outsl
loop
sub
cmp
das
hlt
pop
mov
out
xchg
popf
push
and
cltd
sarb
lods
sbb
lods
xor
es
in
hlt
xor
in
xchg
pop
jo
in
xchg
and
or
scas
pop
outsb
xor
int3
pop
sub
popa
call
xor
dec
xor
aaa
or
jp
repnz
dec
mov
or
dec
mov
and
bound
out
test
roll
cmp
pop
and
fistps
push
pop
dec
repnz
xchg
and
pop
sub
jne
mov
ja
jp
push
jg
pop
cs
aam
mov
addl
lahf
or
xchg
call
add
je
sub
shrb
cld
in
add
shl
cltd
xchg
adc
xor
test
xchg
out
clc
pop
loop
insb
xchg
sub
xchg
addb
and
mov
sub
or
pop
je
out
adcb
gs
arpl
mov
dec
sub
or
xor
cmp
inc
xchg
das
xchg
call
adc
gs
adc
inc
test
xorl
call
scas
pusha
adc
adc
imul
loopne
in
xor
xor
enter
sub
test
lcall
mov
xor
test
pushf
in
mov
cmp
int
inc
popf
mov
fidivrl
add
test
imul
sub
mov
scas
fwait
sub
loopne
pushf
mov
push
jbe
testb
fisubl
cmc
adc
push
cmpl
test
inc
ret
sub
mov
mov
jecxz
repz
xor
movsl
jb
jecxz
jne
jp
mov
cmp
mov
cli
shr
int
jns
jp
push
notb
stos
jae
scas
in
call
sub
mov
clc
hlt
ss
pop
dec
pop
push
xchg
cs
popf
inc
inc
lods
xchg
or
scas
lahf
test
xor
insl
push
jb
and
push
mov
cli
jg
mov
cmp
cmpb
xorl
shlb
hlt
inc
and
clc
mov
das
loope
ja
shrl
mov
ds
sub
sbb
sbb
jne
fs
push
mov
jbe
and
fwait
in
repnz
inc
out
add
negl
icebp
push
and
or
pushf
outsl
jge
and
enter
ret
aas
jb
mov
mov
sbb
icebp
xchg
sub
out
jns
or
xchg
popa
and
testl
outsb
jle
mov
ficomps
insb
add
repz
mov
mov
jp
cmp
jmp
pop
push
push
rol
outsb
push
pop
ret
cmc
sbb
repnz
xchg
lret
rcl
fstpt
popf
push
loop
sub
pop
ret
mov
nop
loopne
dec
xchg
clc
xchg
cmp
xchg
jg
fimull
dec
cwtl
arpl
xchg
inc
shlb
pop
and
stos
loope
fs
test
add
mov
out
pop
add
fnstenv
rolb
jno
and
cmp
mov
cmpsb
aaa
inc
int3
push
mov
aad
sahf
lret
sub
jle
jae
lret
inc
mov
xchg
nop
movsb
sar
inc
xchg
or
mov
sub
loop
ret
mov
in
popf
fwait
push
and
xor
jae
pop
inc
sti
inc
dec
rcrb
or
out
insb
sub
xor
lods
test
or
fmulp
xchg
fsubl
ja
mov
fisubl
aad
dec
fstpt
dec
mov
movaps
xchg
adc
icebp
sbb
add
jb
fcomps
ja
xchg
shlb
movsl
fisubl
lcall
or
and
xor
bound
push
xchg
sub
test
outsb
js
push
sti
and
sbb
icebp
lea
insl
popa
xchg
jmp
or
and
mov
out
pop
std
dec
lea
and
xchg
pop
imul
inc
dec
lret
or
lods
orl
jmp
xor
popa
and
fs
dec
or
adc
jecxz
add
test
pop
cmp
push
pop
pusha
xchg
mov
cmp
imul
push
cld
es
mov
push
pop
mov
gs
daa
and
jmp
cli
jb
sbb
push
call
and
pop
lahf
mov
dec
icebp
les
add
push
pop
jae
fnsave
mov
jb
and
pop
movb
dec
lds
and
dec
cmp
imul
aaa
dec
sbb
xchg
jmp
dec
jl
aad
or
mov
repnz
and
mov
mov
mov
arpl
pop
fdivs
fs
jbe
cmp
in
and
daa
cmp
cwtl
mov
decl
adc
cld
nop
scas
into
and
idivl
inc
into
fs
fsubl
mov
dec
add
sub
sbb
notl
andl
cmp
jl
mov
loop
mov
outsl
into
and
test
xchg
sbb
lret
mov
jl
mov
imul
xor
xchg
and
lret
push
call
cmc
pop
adcb
xchg
fldl
lcall
sbb
jo
rorl
sbb
xchg
fidivrl
out
mov
leave
dec
sub
inc
jbe
jbe
gs
xor
mov
push
adc
lods
add
aad
imul
cmp
adc
pop
iret
sub
insl
xchg
mov
adc
and
xchg
pop
out
scas
push
sub
or
test
aam
mov
loopw
push
inc
out
jb
jp
aas
jae
mov
ds
jle
cli
std
outsb
adc
push
mov
out
add
mov
dec
push
sbb
imul
test
xorb
xchg
sub
out
adc
pop
jg
rorb
jmp
push
fwait
jb
dec
dec
adc
lgs
je
lock
mov
insb
rorl
sub
nop
daa
jmp
arpl
ljmp
add
adc
fldl
lock
and
mov
test
das
xchg
sbb
push
lods
lcall
push
bound
daa
lcall
xchg
push
dec
enter
lock
adc
repnz
dec
cmp
xchg
jecxz
fsubr
pop
movsb
or
movsl
icebp
lods
jmp
cld
out
lods
andb
or
mov
push
adc
push
rolb
daa
lret
sbb
fistps
arpl
dec
mov
sub
xchg
inc
xor
push
ret
dec
mov
xor
adcb
icebp
push
fbstp
leave
sub
js
sub
jmp
lahf
in
add
scas
outsl
ds
addr16
jp
push
rdtsc
popf
sti
and
mov
sbb
sbb
js
mov
cmp
test
js
rcrl
addl
lret
aaa
push
arpl
out
sub
adcl
jno
loopne
inc
out
add
pushf
dec
insl
outsb
push
aad
mov
enter
nop
insb
adc
cmc
jmp
xchg
inc
cld
adc
data16
xchg
pop
sbb
sbb
mov
xor
mov
sbb
cld
dec
mov
add
xorl
jp
jae
sbb
xchg
imul
loope
dec
push
add
repz
mov
out
sarb
cmp
loopne,pn
sbb
rorl
bound
cld
sbb
js
fmul
and
lock
push
xor
xlat
loop
pop
lods
loope
imul
dec
das
jae
dec
jmp
rcrb
mov
cwtl
bound
jne
jmp
out
sahf
mov
add
addr16
push
ss
in
in
out
stos
popa
lods
in
adc
mov
mov
scas
dec
popa
cmp
into
mov
jl,pt
mov
inc
ljmp
ja
cmp
cmpb
adcb
pop
jecxz
and
add
mov
adc
ret
std
subl
pop
mov
cmc
aas
int3
test
dec
mov
jecxz
push
mov
int
enter
xchg
dec
xor
ss
lcall
xchg
xor
popf
fcmovu
xchg
mov
scas
push
scas
aas
insl
fs
enter
dec
call
pop
jmp
pop
sbb
and
pop
and
leave
or
pop
dec
sbb
enter
popf
inc
fwait
iret
and
pop
loopne
push
int3
in
inc
xor
out
xor
lock
pushf
or
jg
outsb
pop
scas
cmp
xlat
and
enter
push
push
mov
fisttps
int
push
movb
sbb
cwtl
dec
sahf
add
inc
je
mov
lock
inc
xor
sbb
or
mov
shrb
pop
jmp
push
pop
pop
pop
dec
jmp
xchg
test
sar
shl
add
inc
cmpsb
imul
scas
stos
or
jmp
sub
adc
jle
xchg
daa
lret
jg
das
xchg
jp
stos
or
stc
fidivl
adc
mov
and
xchg
clc
jns
adc
sbb
sahf
fisubrl
lea
sub
cmc
jmp
nopl
jmp
movsl
or
xor
jmp
push
mov
out
sbb
push
xorl
cmp
or
insl
inc
jecxz
pop
rcrb
add
arpl
ljmp
out
mov
ret
rol
aam
cmp
addl
jp
or
in
or
mov
repnz
adc
js
fstpl
pusha
jnp
jl
rcrl
mov
sub
inc
ss
xchg
in
xchg
mov
adc
xchg
cmp
outsl
or
ljmp
sub
pop
rcrl
sub
fs
jle
or
ljmp
sahf
cld
cmpsl
mov
int
lcall
lods
or
xor
xor
push
xor
jge
stc
repnz
pop
std
ficompl
and
fistps
test
jmp
mov
ja
cmpxchg
push
std
mov
aas
in
lret
mov
mov
into
cmp
bnd
adc
mov
dec
push
in
addb
cwtl
stc
stc
cmp
imul
sub
les
lock
js
push
adc
enter
xorl
lcall
scas
gs
push
jbe
xchg
xor
rol
mov
dec
fmul
fmulp
xlat
xchg
cmp
dec
mov
xorl
pop
or
inc
adc
pop
pop
aam
or
stos
out
xor
inc
nop
inc
ss
inc
loopne
gs
xchg
imull
arpl
mov
sbb
aam
es
pop
jns
pop
je
mov
pop
inc
pop
lods
push
rorl
cmc
cmp
mov
adc
bound
inc
mov
xor
enter
xor
arpl
dec
fidivrs
ret
bound
cmpsb
xor
mov
push
std
dec
insl
sub
shr
pushf
faddp
aad
jle
iret
cmp
ret
repnz
shlb
rol
push
xchg
fmuls
and
xor
aas
cmpb
js
call
push
mov
sbb
pop
test
jl
popf
inc
rcrl
mov
cltd
add
mov
mov
idivb
fnstsw
jo
lods
cmp
arpl
sarl
movl
aaa
into
xchg
jge
daa
scas
imul
push
inc
filds
aaa
insb
cwtl
sahf
mov
lcall
fsubr
adc
pop
gs
loop
xor
movsl
add
in
and
repnz
dec
out
mov
je
imul
sub
xor
inc
pop
lods
cmp
pop
push
mov
loopne
push
and
or
lea
jl
pop
push
xor
mov
add
in
pop
rcrb
pop
int
xchg
in
or
push
push
into
imul
pmaxub
les
fucom
in
aaa
or
pusha
stos
sti
mov
mov
aad
imul
pushf
scas
or
add
jb
adc
shll
lock
jg
pop
sti
xor
cli
popa
decb
arpl
xor
insl
fidivrs
test
cmp
push
inc
repz
adc
add
cmp
shrb
mov
cmc
test
ljmp
pushf
lods
jp
scas
and
push
outsb
push
aaa
ljmp
dec
and
dec
insl
xchg
std
fcmovne
stc
ss
lret
in
xchg
stos
ljmp
outsb
inc
xor
lods
mov
cli
mov
jl
push
insb
pop
mov
outsl
mov
es
lea
movsb
xchg
xchg
sbb
inc
sbb
cmp
mov
int3
or
or
cmp
xor
cli
popf
adc
loope
cs
push
or
nop
cmp
mov
je
xor
sub
or
scas
dec
push
push
add
xor
lds
xlat
scas
pop
and
and
test
pop
decb
loopne
push
les
pop
ljmp
mov
jo
iret
xchg
dec
jno
mov
mov
in
push
xor
or
add
pop
das
sub
jno
cmp
add
cs
insb
inc
inc
cwtl
mov
shlb
pop
mov
push
sbb
push
mov
out
neg
movsb
fisttpl
lock
dec
cmc
push
sti
scas
xchg
cmp
jp
push
adc
pop
das
or
adc
lret
mov
mov
adc
seto
clc
add
mov
dec
loop
lock
jo
sbb
adc
mov
xlat
cmp
mov
repz
dec
inc
adc
pop
int3
pop
and
sub
xchg
jbe
add
jg
cmp
cld
sub
mov
repz
mov
out
mov
lcall
lods
xor
and
mov
xor
test
adc
sub
arpl
imul
jg
jle
addr16
rolb
hlt
cmp
xor
stos
sbb
nop
aas
rcll
call
pusha
jp
mov
adc
cmp
inc
xchg
pop
faddl
nop
push
cmpsb
xchg
js
sbb
inc
mov
cmp
lret
imul
lock
pop
sub
pmulhuw
int
push
mov
pop
clc
or
ja
pushf
out
icebp
push
sti
mov
cmp
bound
mov
jns
cmp
mov
lods
adc
mov
mov
std
psllq
adc
mov
or
ret
push
cltd
jg
pop
ljmp
xchg
call
repnz
cmp
cmp
adc
mov
mov
push
pop
sbbl
pushf
adc
xchg
sub
test
mov
cwtl
jb
mov
adc
sbb
xor
pop
ljmp
hlt
adc
mov
rol
push
sub
incl
in
dec
mov
adc
cs
inc
test
pop
jno
mov
mov
out
rclb
or
clc
pusha
inc
sub
jae
inc
fidivs
sub
sbb
lea
mov
repnz
cmp
pop
fcmovu
std
stos
aaa
xor
stos
insb
mov
aas
lods
or
cld
rolb
lods
cmpsl
loopne
jo
sbb
test
stc
mov
repz
dec
adc
jne
lods
pop
xor
jecxz
ficoms
push
lret
xor
scas
incl
jge
scas
addr16
mov
pop
inc
pop
adc
addb
clc
adc
adc
lcall
dec
popf
and
test
jecxz
xor
shlb
push
xchg
fs
pusha
push
jmp
mov
in
fisttps
jge
xchg
jns
pop
lret
jo
xor
mov
xchg
scas
jle
cltd
jne
cmc
and
popf
push
mov
movsl
ja
cld
aas
imul
push
cmp
les
aas
adc
repz
dec
jg
add
js
mov
mov
mov
add
sbb
jbe
test
xchg
inc
push
sti
std
cmp
in
lods
cmp
xchg
mov
js
add
adc
pop
scas
lcall
das
jnp
pop
mov
pop
push
addr16
pop
insb
push
stos
mov
add
mov
mov
add
ja
pop
pop
stc
jne
and
movsl
mov
inc
je
or
mov
inc
dec
das
popl
add
fbstp
ret
add
push
jo
mov
pop
dec
call
nop
inc
neg
xchg
inc
push
xchg
push
pop
fdivrl
gs
push
push
ljmp
loopnew,pn
stc
or
int
cs
rorb
notl
aad
adc
mov
repz
push
push
push
mov
data16
icebp
adc
sub
dec
in
mov
push
dec
movsb
fistps
xor
lock
mov
pop
stos
das
popa
incl
mov
loope
cmpsb
mov
add
dec
fcmovnbe
data16
dec
out
pop
std
mov
outsb
mov
repnz
push
dec
icebp
xor
xchg
rclb
loope
mov
jl
jbe
dec
sahf
add
xor
add
adc
xchg
ss
lock
or
and
std
add
js
in
pop
in
inc
aas
mov
outsb
rcl
jbe
insb
mov
decl
popf
outsl
or
push
xchg
das
adc
mov
and
pop
mov
adc
into
roll
scas
cwtl
jp
jmp
hlt
mov
add
add
or
loopne
push
sti
sub
push
adc
add
bound
cmc
dec
gs
inc
xor
fdivr
mov
shl
push
mov
lahf
lock
adc
lds
jle
or
ss
ss
sub
orb
pop
dec
cmpsb
je
and
add
cmp
or
lods
orb
nop
push
ljmp
xchg
std
andb
push
pop
leave
in
iret
mov
out
addb
cmpsb
lahf
xorb
and
and
push
inc
je
popf
push
ss
gs
lcall
mov
inc
xor
sti
in
hlt
jg
daa
dec
test
in
fs
int3
sub
loope
push
iret
cmp
shr
loopne
insl
mov
xchg
fwait
cmp
pop
pop
mov
or
shlb
adc
lock
lds
and
inc
xchg
enter
mov
sub
push
andl
fdivp
sbb
push
push
pop
cli
ret
sub
inc
push
call
mov
inc
mov
sbb
pop
rolb
hlt
cmpsb
enter
ret
jl
hlt
imull
add
mov
push
adc
out
and
or
mov
mov
aaa
mov
dec
push
enter
aas
imul
xchg
fcoms
lcall
mov
sub
pop
lea
mov
cli
or
jmp
cmp
popa
inc
ret
mov
sahf
mov
dec
inc
mov
mov
push
mov
add
dec
lret
into
mov
mov
dec
mov
repnz
xchg
adc
js
cmp
xor
sbb
fs
add
fidivrl
xlat
jmp
xchg
popf
push
in
cmpsb
or
jecxz
mov
popf
int
pop
mov
negb
inc
mov
mov
jbe
movsl
cmp
mov
into
repz
or
jbe
ljmp
ljmp
fcompl
sub
adc
imul
push
push
fwait
mov
cmp
in
iret
shlb
dec
mov
mov
idivl
dec
pop
push
mov
or
or
push
mov
sbb
push
xchg
fs
shrd
cwtl
ss
pop
inc
xlat
jmp
dec
daa
add
aaa
adc
mov
xchg
cld
jb
cmc
adc
mov
int3
int
xchg
pop
jae
inc
decl
mov
stc
in
fsubl
sub
int
das
jle
dec
aad
aam
inc
jnp
je
fsincos
negb
and
nop
mov
sub
dec
push
and
add
mov
test
adc
sbb
ljmp
mov
int3
jmp
call
lahf
in
and
scas
jb
ja
cmp
ds
dec
adc
jne
inc
xor
in
iret
mov
int3
loop
aad
mov
leave
push
repz
sbbb
flds
aas
test
aas
dec
sarl
jg
mov
ret
dec
ficomps
lods
cmpsb
test
stos
pop
imul
stos
pop
lcall
mov
orl
inc
xchg
push
pop
int3
repnz
insl
lods
cwtl
sub
repnz
test
xor
mov
push
jo
mov
ja
insl
push
and
jle
xchg
cli
jno
icebp
push
test
lock
cltd
pushf
add
mul
clc
inc
testb
cmpsb
mov
ja
dec
adc
push
insl
das
jbe
mov
xchg
and
ficompl
push
mov
popf
cld
loop
out
dec
pop
and
seto
jo
mov
movsl
mov
loop
and
sbb
pop
nop
filds
pop
jnp
aas
shll
sahf
filds
in
cmpsl
rcll
aaa
cmp
mov
and
pop
sahf
test
jle
outsb
xor
in
mov
adc
fisttps
and
insl
jp
add
cmp
bound
dec
or
xchg
je
xchg
cli
add
nop
dec
mov
xor
movsb
lahf
cmp
gs
sbb
mov
jnp
stos
lret
lods
push
mov
mov
bound
xchg
adc
xlat
add
js
pop
stos
movsl
and
ja
ret
xchg
add
inc
push
or
xlat
mov
pop
test
sub
sub
aaa
push
dec
test
dec
aas
jmp
jns
mov
std
sahf
push
pop
jne
fidivrs
aaa
loop
push
lds
and
pop
lcall
mov
inc
and
jnp
jge
mov
xlat
popa
hlt
stc
movsb
insl
sbb
sbbl
xor
mov
dec
sbb
and
xchg
in
sti
sub
mov
xchg
insb
adc
xor
mov
sub
xor
adc
or
sbb
add
pop
cltd
fnsave
sub
pusha
pop
je
sbb
mov
mov
shlb
lcall
mov
out
mov
sub
add
fwait
jne
xor
mov
lret
cs
mov
pop
sub
mov
push
sahf
jle
and
arpl
jb
out
fstps
cmp
daa
in
arpl
das
aaa
push
cmp
sub
pushf
mov
popa
daa
xlat
mov
xchg
dec
imul
dec
fidivrl
or
movsl
imul
add
xlat
jecxz
or
jl
int
mov
lds
adc
push
out
arpl
scas
arpl
lea
jl
ds
notb
scas
jns
cltd
es
insl
test
mov
int3
jb
jb
and
out
sbb
andl
nop
add
movsb
pop
enter
jmp
xchg
les
aaa
jle
jecxz
loope
insb
fadd
es
jbe
push
fiadds
or
clc
cmc
ljmp
lods
mov
neg
push
icebp
push
or
int3
sub
mov
sti
cltd
sbb
lea
pop
lds
test
cmp
or
mov
jns
xor
andb
mov
js
sbb
orl
pusha
aaa
leave
jecxz
xchg
cwtl
inc
inc
jbe
lahf
xorb
add
scas
call
push
cs
pop
test
sti
dec
cmpsb
adc
adc
mov
loop
mov
popf
filds
and
push
mov
inc
dec
sahf
fstl
ds
push
inc
insb
xchg
leave
aad
std
js
adc
and
out
inc
jg
jmp
adc
jp
push
add
adc
mov
imul
jbe
and
xchg
in
push
std
clc
add
js
xchg
mov
mov
roll
mov
test
and
cwtl
sar
mov
inc
xlat
add
mov
pusha
xchg
and
mov
mov
mov
push
adc
cmpb
pop
icebp
xchg
mov
xchg
mov
repz
jle
mov
mov
pop
cmp
cmp
shll
push
in
in
push
out
jnp
test
bound
push
scas
aas
rorb
cli
test
and
and
push
aam
std
add
scas
mov
push
inc
fs
lret
in
sbb
mov
lea
negl
test
or
call
add
rcl
decl
push
enter
orl
push
jns
xor
push
test
clc
ret
bnd
xor
mov
inc
mov
or
ljmp
pop
aam
push
xchg
cld
sahf
dec
cmpsl
push
repnz
cmpsl
push
and
mov
dec
iret
cmp
jp
jmp
enter
xor
loope
stos
sub
jecxz
in
das
incl
cmp
cli
andl
sbb
loope
fs
inc
pop
popf
movsl
jne
adc
cld
lock
dec
outsb
xor
inc
push
mov
aaa
cmp
inc
shlb
add
jae
shlb
pusha
adc
fisttps
inc
std
add
mov
jl
add
pop
js
cwtl
shll
mov
push
flds
mov
pop
lods
push
in
adc
push
stos
cmp
es
insl
sub
mov
push
inc
mov
and
cmc
pop
in
shlb
inc
adc
pop
xchg
cwtl
jmp
xor
xor
pusha
or
push
jg
mov
jne
push
adc
mov
scas
dec
push
gs
mov
xor
push
mov
mov
mull
rcrb
inc
shll
mov
bound
cmpsb
loope
test
push
push
lock
dec
arpl
into
mov
and
mov
push
jge
rcrb
xchg
in
and
pop
insl
jmp
mov
xor
pop
push
add
imul
sbb
mov
std
call
sarl
je
pop
fists
scas
out
jae
imul
cmpl
test
and
rcrb
dec
hlt
scas
inc
pop
push
std
xor
sub
cmpsl
xlat
inc
imul
nop
dec
shrb
xchg
outsl
jno
cmovno
sub
sbb
ss
dec
adc
cmp
mov
call
lea
outsb
scas
lea
pop
imul
mov
jb
pop
mov
cmp
in
sub
cwtl
xor
je
test
cmp
adc
mov
inc
and
xor
ficoml
sub
mov
cltd
dec
xchg
jns
push
movsl
ss
ret
adc
addr16
lahf
pop
mov
outsl
insl
ss
jp
sbb
out
push
inc
fistps
enter
push
add
dec
inc
mov
xor
das
pop
daa
add
outsl
inc
fs
test
push
in
xor
in
jb
je
adc
mov
pop
loop
nop
mov
pop
dec
insl
icebp
adcb
les
fisubl
or
xchg
test
ficompl
sahf
gs
stos
orl
sar
in
test
mov
xor
dec
aas
sbb
outsb
enter
leave
adc
popf
scas
stos
enter
lahf
dec
test
inc
pop
xor
pop
adcl
jecxz
cmp
xlat
test
enter
pop
jl
xlat
dec
or
ret
xlat
scas
xor
insb
pop
cs
test
pop
stc
pop
jmp
mov
test
or
stos
je
jae
mov
push
movsb
sub
outsb
xchg
jo
push
mov
pushf
cwtl
rclb
mov
in
ret
or
fsts
leave
add
pushl
in
adc
gs
xor
jmp
mov
into
es
jp
pop
subl
ss
loop
mov
testb
push
daa
andl
ret
cld
mov
and
sub
rorl
out
mov
push
mov
xor
adc
lea
jecxz
loope
test
push
fdivr
pop
mov
mov
or
mov
das
and
and
mov
push
mov
in
jg
ret
push
or
mov
pop
mov
dec
cwtl
in
pusha
loopne
fwait
lods
cs
lea
jle
jle
sub
adc
add
enter
sub
xlat
aad
or
inc
test
dec
or
xchg
push
push
aaa
test
adc
push
mov
sti
xchg
dec
pop
outsb
xchg
gs
ficoml
mov
sbb
movsb
movsb
dec
adc
add
inc
mov
dec
arpl
jmp
repz
cltd
cltd
sbb
fcom
xchg
das
sbb
cld
mov
adc
repz
mov
or
aad
sbb
jle
out
pop
fcmovbe
int3
xlat
xor
fidivrl
jae
push
inc
fidivl
mov
lret
lret
into
enter
in
push
xor
xchg
pop
jl
roll
fistps
inc
imul
scas
in
pop
fcom
test
es
stos
pop
inc
jp
lods
xchg
popf
shl
scas
cwtl
mov
scas
out
int3
ja
repnz
fsub
push
jg
cmpsl
pop
mov
xchg
xchg
mov
dec
xor
pop
ret
jo
push
adc
test
xchg
inc
jl
mov
push
and
inc
popf
mov
ret
stc
adc
or
jbe
jge
xor
outsl
pop
inc
in
bsf
add
push
cmpsl
adc
pop
stos
xor
jg
dec
cli
push
push
mov
mov
fiaddl
or
add
sub
insl
das
addr16
sub
aas
enter
sahf
and
lret
dec
outsl
mov
mov
dec
xchg
adc
sub
shll
add
outsb
adc
mov
je
int
ret
lock
mov
andl
stos
jle
out
imul
enter
test
cmpxchg
dec
fcoms
pushf
push
jl
andb
pop
add
mov
mov
or
add
cli
mov
adc
mov
pop
mov
mov
add
cmp
push
cmp
lcall
add
jno
or
mov
pop
cld
xor
das
and
dec
arpl
sub
fcmovnb
add
sbb
xchg
pop
stos
adc
imul
push
cmp
and
rcll
push
daa
notl
scas
icebp
sbb
cmc
enter
xchg
cli
es
mov
jae
pop
add
xlat
daa
fisttps
lods
add
das
addl
test
xlat
out
dec
push
rcll
inc
pop
jle
hlt
cmpsl
mov
nop
outsl
push
mov
orl
lret
jle
call
pusha
in
in
popa
mov
andl
int
imul
sbb
mov
in
sub
fcmove
lods
jle
das
xchg
das
xchg
jge
fs
rcll
sti
bsf
xor
and
lods
sbb
push
mov
dec
adc
and
dec
cltd
rol
aam
scas
fisttps
out
jmp
adc
addr16
icebp
xchg
lahf
or
fistpl
pop
jae
jne
push
xchg
mov
jo
mov
repnz
sahf
cltd
xchg
stc
enter
cld
test
adc
cmp
call
add
inc
or
adc
filds
jnp
test
test
ljmp
jg
jae
and
loope
and
pop
outsb
inc
mov
jnp
rcrl
rcrl
pop
loope
call
roll
mov
jb
adc
insl
je
push
insl
cmp
jl
fmul
sub
data16
and
rol
xchg
pop
dec
daa
sub
pand
insl
data16
out
or
outsl
xor
sbb
jg
mov
mov
push
aad
xchg
mov
in
mov
xor
fdivrs
mov
or
adc
xor
inc
mov
mov
hlt
push
push
or
mov
dec
inc
imul
sub
add
push
add
sti
and
jae,pn
dec
mov
jno
dec
pop
ds
cmpsl
mov
and
ljmp
int3
adc
add
outsl
or
fbstp
push
fildl
xchg
mov
adc
pop
inc
cmc
mov
mov
sarb
inc
xchg
pop
cmpb
lcall
adc
sbb
data16
aas
xchg
roll
imul
test
push
mov
pop
dec
shr
pushf
inc
dec
sub
xchg
push
gs
outsb
cltd
test
pop
repz
das
testb
sub
inc
push
or
mov
xor
mov
cmp
add
mov
dec
add
inc
mov
mov
ds
lock
jl
testb
icebp
imul
ficomps
sbb
pop
add
jo
add
mov
and
xor
or
jns
daa
arpl
jmp
adcl
test
cs
sbb
cmp
add
fstpl
pop
xor
lods
pop
dec
jge
movb
cmp
cmp
pop
aas
push
data16
test
cmpsl
mov
xchg
sbb
or
insb
inc
imul
xor
in
or
jmp
imul
daa
mov
icebp
xorb
xlat
xchg
xchg
mov
xchg
ja
add
insb
cmp
dec
repnz
in
fcmovbe
cld
xor
sahf
pop
bound
add
xchg
mov
mov
orb
sbb
scas
ja
jns
dec
jle
jns
dec
scas
in
rcl
mov
add
xchg
addr16
add
cmp
inc
pop
sahf
ret
pushf
mov
jl
add
pop
or
iret
jg
ret
stos
and
insb
cld
je
mov
cs
jnp
int3
mov
mov
and
add
jg
outsb
sub
cld
lods
bnd
leave
lret
enter
sar
pushf
fiaddl
add
stos
add
das
js
cmp
lods
jl
roll
sbb
mov
repz
aam
movsb
dec
xchg
aad
jb
or
xchg
xchg
aad
mov
loopne
bound
xor
in
mov
inc
loope
cmpsl
or
pop
mov
pushf
aaa
mov
xchg
pusha
test
arpl
or
rcrl
jnp
and
sbb
insb
sbb
movb
out
movsl
adc
pop
mov
fstpl
cmp
insb
inc
mov
xchg
out
ja
pop
aas
cltd
addr16
lods
negl
jae
bound
lahf
test
in
mov
jmp
in
and
push
scas
test
rorb
lea
scas
push
fstp
flds
addr16
push
xor
adc
cmc
xor
fmuls
pusha
jns
mov
cli
andb
dec
sarb
shlb
enter
ss
mov
incl
xchg
push
movb
ljmp
jp
cmp
fiaddl
add
adc
jle
pop
sti
inc
fistps
pop
ficomps
inc
mov
lea
jns
sbb
mov
in
test
in
lods
inc
fidivs
notl
loop
dec
iret
xchg
in
fnstcw
jmp
push
pop
add
lret
scas
xchg
adc
cld
xchg
loope
mov
cmp
pop
add
push
push
pop
orb
inc
arpl
add
je,pt
mov
scas
rcrb
pop
faddl
imulb
pop
aaa
or
dec
push
and
in
jl
push
sbb
loope
aaa
add
add
jg
mov
cmp
into
mov
and
fldt
jo
leave
sub
lcall
cmpsl
sbb
ds
setae
dec
xor
xor
enter
pop
int
ret
mov
mov
jno
mov
fs
dec
movsb
or
ret
es
sub
push
movsl
mov
cmp
test
negb
loopne
andl
cwtl
bound
dec
out
test
jecxz
inc
and
jnp
xor
dec
push
rorb
dec
mov
pop
xlat
call
pop
or
in
push
lods
lods
xchg
fildll
mov
aad
adc
data16
jmp
sti
push
adc
sub
mov
scas
mov
icebp
roll
jbe
leave
popf
pop
testl
and
mov
inc
fdivl
add
test
xlat
jmp
call
hlt
cmp
cmc
out
popf
test
xchg
mov
and
out
cmp
dec
movsl
insl
fcmovnu
mov
push
and
xchg
ficompl
push
mov
inc
fistl
inc
iret
mov
aas
dec
pop
xchg
inc
cmp
inc
sub
jle
mov
mov
es
ret
dec
jnp
lock
dec
xchg
inc
or
or
jp
mov
aad
aaa
jle
mov
and
and
enter
xchg
push
int3
and
subl
ja
and
lods
sub
fiadds
out
sarb
and
pop
jb
mov
mov
and
cs
adc
or
sub
arpl
lret
cmp
repz
pop
jbe
sbbl
add
jbe
jecxz
adc
sysret
negl
psrld
test
sub
pusha
cmp
jmp
sahf
inc
popa
out
enter
or
xor
lods
push
rcrl
cltd
mov
and
mov
je
pop
mov
sub
and
add
movsb
and
add
ljmp
sbb
push
mov
lea
pop
jne
js
xchg
sarl
push
dec
xchg
jp
loop
mov
dec
inc
repnz
inc
shl
mov
or
sbb
jae
filds
jae
dec
insb
xchg
mov
xor
fcomps
nop
mov
in
clc
andb
sbb
faddl
fmuls
or
gs
sbb
ja
sbb
adc
addr16
mov
shlb
sub
sub
fldenv
add
insl
mov
sti
in
iret
ficompl
repnz
mov
cmp
icebp
cs
adc
imulb
clc
xchg
push
ret
cmp
sub
adc
cld
push
jo
cmp
roll
pop
jne
adc
sub
xor
mov
xchg
stos
ret
andb
cmp
or
fisttps
iret
inc
cld
int3
fldcw
pop
clc
xor
cmpb
xchg
mov
jnp
push
lock
cwtl
movsb
add
stos
cmpsb
sbbb
adc
sbb
leave
inc
out
aaa
pusha
ja
test
aaa
push
or
movsl
pop
fwait
daa
mov
aas
subb
push
pushf
jl
nop
push
cwtl
test
add
lods
fwait
push
lret
or
lea
aas
mov
mov
jge
pop
or
inc
push
add
sbb
jne
js
pop
stos
and
sub
lret
mov
jmp
push
sub
cmp
and
sub
jg
inc
in
mov
push
mov
mov
movsl
popf
sbb
or
iret
outsb
mov
mov
hlt
lods
mov
and
mov
cmpsb
rcrl
shll
xchg
jnp
in
stos
sbb
add
dec
xchg
aad
inc
test
fwait
adc
cli
jae
adc
bound
sub
fistpl
or
xor
ror
stos
jmp
ret
out
add
in
inc
mov
push
mov
mov
add
mov
jbe
pop
imul
xlat
and
ja
pop
or
loop
cmp
shlb
outsb
push
ja
rorl
fwait
cmp
imul
mov
xchg
push
aam
imul
add
push
lret
jnp
stos
xorl
daa
test
cs
push
pop
xchg
mov
sbb
in
pop
push
xor
inc
dec
inc
out
add
xchg
mov
hlt
mov
push
xchg
pop
test
icebp
repz
sbb
inc
loopne
push
stos
sub
iret
test
les
insl
cmpsl
jnp
movsl
mov
dec
roll
bound
cmpsb
sbb
push
adc
mov
test
lcall
cwtl
or
push
repz
outsb
add
sbbb
cmp
lea
outsl
dec
sbb
stos
pop
push
testb
cmp
jno
in
popa
cmp
lods
pop
inc
ja
fidivl
jb
jp
sub
xchg
mov
mov
cmpb
ds
enter
outsl
push
rorl
inc
jle
dec
movsb
std
repnz
inc
mov
jl
dec
aas
mov
imul
mov
jae
mov
aaa
add
pop
jmp
mov
imul
or
mov
adc
inc
clc
ret
jp
repz
clc
enter
arpl
pushf
push
cmpsl
loop
int
xor
adc
xchg
adc
adc
sbb
mov
xchg
and
out
in
push
scas
sarb
add
dec
test
popf
mov
push
or
pop
or
pop
sub
mov
shl
ljmp
sub
push
add
in
sahf
pop
int3
inc
movsb
jb
pop
sahf
sti
and
test
sub
pusha
xor
mov
inc
push
push
clc
mov
das
out
mov
mov
lahf
adc
cli
sub
mov
or
xchg
call
lret
in
xchg
xchg
sbb
pop
mov
shrl
repz
mov
inc
mov
fisubs
xchg
notb
rcrb
jno
inc
arpl
shl
dec
das
mov
push
into
sub
sub
dec
je
xor
jge
jns
mov
int
xchg
fmull
int3
xchg
push
clc
popa
insb
loopne
outsl
decl
imul
adc
in
shr
mov
inc
aas
adc
js
int3
ljmp
or
pop
fcmovne
xchg
cwtl
mov
repnz
add
out
cwtl
iret
setb
fidivs
filds
ss
jb
mov
into
sbb
mov
dec
cmp
loope
xor
in
loop
inc
jmp
mov
inc
cmpsl
adc
je
push
mov
int
fldl
mov
mov
movb
pop
pop
in
loop
sbb
sti
adc
sbb
jb
cmp
rcr
jle
pop
sti
jge
cmp
sub
mov
mov
inc
rcll
and
imul
sbb
mov
xchg
cmp
lcall
push
rclb
cltd
cltd
or
xchg
gs
mov
and
adc
jg
imul
faddp
xchg
add
fsubrs
in
test
loop
push
leave
divl
sub
pusha
and
cmp
pop
icebp
mov
cmc
movsb
mov
das
int3
mov
xchg
fisttpl
adc
imul
fldcw
imul
leave
movsb
or
jno
xor
push
mov
roll
xchg
daa
dec
out
outsl
dec
jns
imul
mov
cwtl
or
jns
fcmovbe
sbb
lods
mov
xchg
fbstp
pop
mov
lahf
mov
dec
mov
sbb
add
mov
testl
lcall
je
loopne
in
push
rcr
adc
cmp
and
or
ficoml
mov
aas
fidivrl
pop
jle
xchg
lods
and
xor
sub
pop
pusha
rcr
push
mov
int
jecxz
popa
xchg
das
inc
lock
inc
iret
add
mov
call
addl
jp
out
push
pop
subb
push
dec
jmp
cmp
shrl
lret
and
cwtl
cmc
push
das
nop
push
jg
push
adc
icebp
push
adc
xor
loope
xchg
mov
and
out
mov
icebp
cmp
jo
and
push
dec
ret
xchg
icebp
cmpsl
pop
fsub
pop
mov
and
jge,pn
mov
das
inc
mov
dec
outsl
mov
jae
push
pusha
cwtl
add
mov
loope
mov
pop
into
hlt
repz
scas
pop
or
inc
cld
xchg
repnz
sbb
jmp
or
push
in
sub
jo
sbb
nop
xchg
xchg
int3
testb
fsubr
shrl
loop
gs
icebp
push
adc
dec
cwtl
imul
xchg
mov
bound
movsl
ss
movsb
pop
mov
sbb
stc
inc
sub
adc
sbb
outsl
sub
push
xchg
xchg
dec
lea
inc
dec
int3
stos
or
pop
push
jns
out
adc
xchg
enter
jb
push
xchg
insl
jecxz
frstor
jo
sub
mov
sub
stos
scas
sbb
loopne
or
fs
icebp
es
in
jbe
add
mov
mov
jecxz
test
lock
rcrb
dec
jge
inc
out
cld
outsb
int
push
pop
push
rcr
out
push
or
sbbb
cli
cmp
jbe
ss
inc
cld
mov
mov
adc
stos
cmp
inc
xorb
xor
data16
pop
int3
xchg
xor
xor
imul
adc
lret
in
sub
imull
andl
shrb
fisubs
pop
add
dec
repz
adc
cld
jb
and
dec
lret
adc
enter
jns
and
inc
pop
pop
mov
in
and
add
pop
test
dec
mov
add
lods
in
fidivrl
cmp
sbb
cltd
mov
das
cmp
sbb
mov
fbstp
push
fsubrl
inc
loope
add
shrb
ja
cld
das
jno
mov
lock
push
data16
push
clc
adc
mov
pusha
int3
dec
mov
push
jae
das
lds
jns
mov
jl
jo
out
les
das
mov
xchg
push
sub
cmp
cmp
and
popf
popa
insl
repz
xchg
fcomi
pop
xlat
cmp
ret
add
jp
orl
ja
jo
xor
mov
aad
xchg
pop
popf
js
push
mov
daa
int
jae
mov
stos
pop
push
dec
test
test
popl
jae
inc
cmpl
and
rcrl
and
movsl
out
and
sbb
xlat
fldenv
or
filds
push
loope
test
rcrb
pop
movsl
les
and
pop
pop
push
test
mov
aas
push
ljmp
or
leave
dec
push
nop
cltd
jecxz
lea
test
aad
or
imul
sbb
push
shlb
test
sub
push
mov
je
pop
jns
lds
sar
sbb
xlat
push
jg
mov
mov
lret
imul
and
mov
ljmp
dec
es
notl
pop
mov
fnstcw
push
dec
mov
and
mov
pop
call
int3
out
xor
and
pop
sar
inc
mov
mov
or
jae
movb
dec
fdivp
mov
inc
add
nop
lcall
mov
pop
je
and
ret
call
bnd
mov
inc
or
sarl
and
mov
pop
sub
mov
fsubr
pop
and
cmp
mov
mov
xor
inc
mov
out
cltd
into
dec
jmp
pop
repz
ret
mov
outsb
sbb
cmp
adc
aas
in
xlat
out
or
in
xlat
lods
mov
or
fs
daa
ret
nop
mov
cld
in
jmp
inc
in
sbbb
outsb
push
inc
push
int3
stos
or
out
jmp
out
hlt
mov
aaa
jno
and
cmpsl
clc
cltd
and
mov
repnz
rclb
add
lahf
adc
test
rcrl
cmp
jae
subb
or
movsb
and
gs
mov
mov
xor
fldt
push
out
xchg
leave
cli
xor
arpl
lcall
icebp
out
inc
cmp
repz
mov
popa
xchg
jno
jmp
pop
mov
lods
notl
jecxz
dec
mov
cld
push
mov
push
pushf
hlt
es
jecxz
mov
leave
mov
dec
pop
shl
mov
mov
inc
bound
fimull
push
cmp
adc
xchg
xchg
outsb
jns
out
mov
mov
lods
and
repnz
lock
jnp
in
mov
and
xor
or
jge
ss
sbb
rorl
mov
xor
cmp
mov
jle
and
mul
leave
icebp
sub
addb
jae
sti
lret
push
jae
int
xor
lcall
mov
mov
add
pushf
add
ljmp
push
aaa
mov
mov
inc
mov
jmp
fistl
jp
mov
xchg
stc
cmp
lock
xchg
xchg
adc
adc
jecxz
mov
jmp
sbb
bound
sbb
mov
and
call
dec
nop
push
roll
aas
ror
shl
mov
in
cmpsl
ljmp
jno
add
gs
lret
insl
out
ret
inc
push
mov
icebp
pop
mov
test
pop
and
sbb
jge
push
add
pop
pusha
xchg
mov
ret
loop
insb
sbb
lahf
pop
jle
sti
adc
push
in
mov
loop
fucomip
stos
shll
cmc
xchg
or
cmp
vpcomb
adc
cmp
lods
pop
pusha
mov
push
add
xchg
dec
aam
push
daa
mov
mov
arpl
nop
mov
out
imul
sbb
arpl
adc
stos
lods
dec
pop
sub
aam
call
loope
pop
out
movsl
adc
mov
mov
dec
rclb
test
xor
stos
xor
and
nop
cli
daa
sbb
xchg
cmp
mov
and
fwait
xchg
outsl
cltd
push
and
arpl
pop
push
movsl
dec
daa
outsb
pushl
aad
in
jno
xlat
sbb
movsl
fs
pop
add
mov
cmp
subl
ja
sti
push
repz
or
cmpsl
sbb
jmp
jo
jno
fisubl
jp
popa
mov
les
sbb
xchg
cmc
xor
xchg
fistpll
push
and
lret
mov
or
xor
fwait
ret
cltd
enter
sbb
lahf
and
icebp
int
loop
inc
out
cmp
adc
jmp
pop
mov
aaa
pop
std
inc
xor
cmpsl
movsl
sbb
fs
fisubl
idivb
dec
inc
mov
ljmp
pop
mov
aaa
add
xor
mov
xor
es
pusha
push
push
loopne
push
mov
test
aam
clc
push
jle
push
or
jge
add
jo
add
std
jns
cmp
lock
in
lods
fcmovbe
mov
xchg
mov
data16
dec
jnp
es
mov
mov
pop
adc
sbb
call
jecxz
pop
lods
popa
sbb
cltd
cld
xchg
aam
mov
inc
mov
add
jo
adc
add
lea
mov
popl
and
xor
push
das
mov
cld
xor
cmp
inc
adc
xor
hlt
repnz
lahf
lods
popa
lds
in
lods
pop
and
mov
lods
mov
pop
fdiv
dec
add
adc
jo
jge
outsb
std
stos
and
jno
fwait
push
shll
cmp
movsb
stos
xchg
in
ds
push
push
lods
mov
int3
arpl
fmul
negb
dec
ret
inc
int
scas
bound
fmuls
nop
iret
and
xor
dec
imul
sub
xchg
cli
cwtl
roll
sub
in
dec
dec
push
mov
jne
push
push
fcmovbe
pop
cmp
sbb
and
imul
lods
add
xchg
mov
push
and
adc
inc
fwait
aas
in
sub
jo
cmpsl
lock
pcmpgtw
push
push
ffreep
add
add
aam
add
xchg
pop
jnp
insb
rclb
ficoms
mov
mov
xor
dec
sarb
in
pop
pop
out
nop
gs
xchg
adcl
add
scas
lcall
xchg
push
dec
push
outsb
and
jecxz
fisubl
nop
mov
arpl
out
rorl
pop
mov
cs
das
push
push
aad
test
ret
and
out
ja
push
clc
xchg
or
and
aad
arpl
pop
lahf
pop
dec
sbb
dec
inc
jl
jge
push
aam
pandn
sub
loope
movsb
inc
xor
test
movsb
outsl
pop
mov
jo
inc
sub
mov
jp
addr16
jne
xchg
jecxz
rcll
sbb
pop
jns
inc
jns
aam
pop
pop
jne
loop
pop
imul
cld
or
fisttpll
xor
mov
inc
ficomps
xchg
mov
adcl
je
push
jnp
movsb
xchg
jnp
sub
mov
shlb
jne
cmp
and
dec
jmp
inc
je
mov
testb
iret
shl
mov
add
or
sub
mov
movsl
lods
in
push
or
push
mov
add
sub
incl
mov
sub
je
pop
jb
jge
sub
loop
dec
cli
aad
and
inc
orl
dec
inc
imul
push
adc
and
ret
cmc
rcl
xchg
mov
xlat
outsl
aas
rol
cltd
xchg
mov
mov
out
inc
mov
imul
inc
loopne
addr16
nop
pop
call
or
mov
fcmovnbe
mov
sbb
dec
outsl
inc
or
cmpsl
sub
dec
pop
pop
outsb
mov
mov
pop
and
push
sub
insl
mov
xor
sbbb
and
or
add
pop
aas
stc
inc
cmpsl
lods
dec
jb
jl
std
insl
cmpsb
dec
aaa
scas
mov
in
and
mov
mov
cmp
add
mov
add
stos
xchg
jbe
call
push
and
jl
pop
fdivr
ds
sti
out
fidivrl
lcall
test
add
and
lret
push
push
pop
push
xchg
pushf
add
dec
cmpsb
popf
push
dec
dec
mov
dec
rcr
out
cmpsl
jp
or
add
stc
in
mov
and
les
dec
ss
test
std
pushf
aaa
negb
mov
js
push
fwait
pop
push
mov
inc
sbb
lock
dec
loop
mov
addl
test
adc
push
mov
cmp
jmp
ret
add
dec
fstpl
movsl
mov
stc
xchg
or
nop
sahf
add
sbb
pop
xchg
pop
lahf
or
jmp
into
aad
jb
mov
insb
test
fisubrl
add
loop
inc
push
dec
sub
pop
pusha
jl
in
fwait
lock
and
icebp
jge
leave
pop
push
cmp
jle
xchg
push
int3
pop
imul
sub
pop
shr
mov
xor
add
jne
push
cmp
add
sub
pop
jl
inc
mov
or
or
loopne
js
pop
in
or
mov
clts
xchg
adc
add
ret
ds
outsl
or
adc
sbb
sbb
lods
enter
into
lock
and
outsb
lods
pushf
mov
inc
or
push
popf
or
jg
push
jmp
sarl
ljmp
cmp
dec
sbb
sbb
lods
lret
lock
xor
repnz
jne
push
inc
inc
adc
jmp
imul
lahf
sub
test
loopne
pop
outsb
call
mov
xor
in
cmp
cmpsl
xor
addb
movsb
add
in
in
outsb
jns
gs
daa
loopne
dec
jnp,pt
or
fcomps
cs
sbb
lcall
idivl
stos
and
cmp
pop
mov
pop
inc
jecxz
inc
fisttpl
sub
cmp
pop
lods
mov
pop
ja
movsb
add
sbb
lcall
mov
pop
lcall
in
in
xchg
xor
inc
imul
ret
iret
sbb
rcll
sbb
inc
shl
add
jmp
push
rorl
sbb
out
ds
and
pop
pop
mov
adc
movb
scas
sbb
fistpl
sar
cmp
cmp
test
adc
sub
outsb
pop
pop
or
fldl
lds
xor
mov
jle
push
sub
js
push
pop
cwtl
icebp
sbb
addl
pop
adc
or
sub
test
pop
pop
sbb
sarb
jno
in
sbb
sarl
movsb
mov
shr
push
pop
pushl
sbb
or
out
aad
mov
adc
pop
or
push
testl
jno
cld
lahf
int3
pushf
fcoml
add
cwtl
jmp
in
mov
adc
pop
test
lret
and
pop
xor
pop
jecxz
inc
and
mov
imulb
cld
adc
pop
xchg
pop
test
lock
cmp
fsubrs
mov
insl
adc
inc
or
shr
pop
enter
mov
mov
in
push
das
lds
mov
adc
out
push
mov
mov
pusha
dec
fwait
call
std
cld
push
sub
inc
add
scas
mov
xor
and
cmp
je
push
scas
sti
xlat
inc
jp
xor
aad
daa
inc
fsubp
sti
cmpsl
jbe
insl
les
movl
lea
dec
aaa
pop
es
inc
or
shl
adc
xor
sti
xchg
xlat
xor
inc
dec
adc
es
lcall
adc
lock
add
fimull
nop
mov
mov
jmp
gs
in
xchg
jmp
cmpsl
test
jne
int3
arpl
sub
repnz
test
inc
pop
loope
sar
xchg
push
subl
lcall
and
xchg
lods
fsubl
pusha
adc
pusha
dec
stc
pop
xchg
mov
mov
fstpl
js
hlt
pop
cmc
xchg
add
scas
mov
cs
adc
subl
out
add
ret
mov
xor
xchg
jecxz
sbb
scas
fdivrp
sub
or
stc
or
cld
or
or
popa
stos
inc
es
or
rolb
mov
or
js
push
cmp
dec
xchg
and
pop
leave
push
push
push
jmp
or
cli
xchg
imul
out
jns
xchg
push
or
cmp
and
jle
cmp
rolb
jp
push
sbb
adc
lret
sbb
clc
add
pop
mov
xchg
cmp
cmp
xchg
xchg
jbe
pop
sahf
mov
movsl
push
out
inc
cmpsb
icebp
sub
add
sub
insb
aad
or
jp
jg
arpl
sti
adc
lock
or
adc
mov
push
jmp
insb
push
test
cmpsl
inc
mov
fidivrs
dec
js
out
rclb
sbb
dec
cltd
mov
pop
loop
xor
xchg
repz
pop
in
jo
jo
dec
std
out
push
cmpb
push
or
rclb
mov
jno
leave
clc
xchg
lock
movsb
call
ljmp
test
popa
std
ljmp
cmp
adc
mov
outsl
out
fdivrs
ret
xor
cmc
filds
jb
xchg
bound
push
cmpsl
ret
cwtl
xor
xchg
das
leave
clc
xlat
dec
adc
movsb
stos
jg
popf
outsb
fwait
daa
sbb
and
sbb
xor
cmp
lea
rorb
fs
jno
jg
pop
xor
lret
cwtl
lahf
test
mov
push
fisttpl
mov
fs
fstpl
push
pusha
outsl
pop
mov
adc
jmp
nop
add
pushf
int
xor
pop
std
cmc
cmp
adc
mov
popa
dec
pusha
pop
push
test
add
mov
pop
jmp
adc
cmp
xchg
lret
cmp
out
or
push
adc
aad
adc
fisubl
loope
jbe
adc
adc
inc
mov
shlb
mov
push
cmpsb
pop
push
out
scas
std
sbb
jae
sbb
adc
ss
lahf
mov
ds
adc
jge
jmp
pop
xchg
dec
cltd
cltd
add
adc
jge
lock
fsub
mov
out
cli
mov
or
in
rep
xchg
and
adc
xor
xor
aaa
cli
sarb
xor
test
xor
sbb
lret
stos
inc
pop
dec
dec
into
int3
icebp
scas
into
pop
sarl
std
adc
mov
je
rolb
dec
mov
cld
mov
ja
movsb
cmp
in
xor
xor
lods
ud1
stc
sbb
es
outsb
dec
loop
out
xor
xchg
push
fs
sub
fwait
loop
pop
lret
sub
inc
aad
push
in
fsubrp
sub
ss
mov
pusha
movsb
movsb
loop
xchg
inc
jl
and
shlb
loope
mov
or
sub
or
adcb
cmp
scas
js
pop
inc
sbb
fcmove
jae
or
jb
cmpsl
jl
jbe
cmpsb
mov
lods
dec
jmp
leave
repz
int3
pop
sbb
mov
mov
push
scas
cmp
clc
add
lret
xchg
pop
jecxz
cmc
inc
adc
daa
lods
lock
sub
xchg
jecxz
and
sahf
sub
lds
lds
xchg
mov
int
pop
nop
jle
sub
je
xor
xchg
or
jp
cmp
enter
stc
roll
add
cmp
adc
scas
test
fcmovnb
add
pop
mov
je
mov
jne
or
loopne
mov
into
push
sub
jnp
xchg
scas
nopl
jp
dec
jno
mov
mov
je
mov
cmp
imul
stos
push
outsl
bound
test
and
dec
xchg
test
pop
int
or
gs
jb
inc
pop
test
add
es
clc
inc
mov
out
imul
subl
fsts
mov
fs
push
iret
repnz
xchg
stc
int3
push
mov
pop
dec
pop
test
xchg
sub
inc
divb
xlat
lret
lahf
add
xchg
sub
cmp
inc
push
outsb
in
push
mov
pop
sub
fcmovb
mov
xchg
add
test
cmpsb
nop
loop
jo
sub
scas
int3
inc
in
imul
dec
inc
scas
mov
push
inc
push
ret
out
cmp
out
and
mov
push
loope
jb
ret
mov
dec
xchg
mov
cmp
lock
imul
jbe
scas
push
fmull
jge
adc
aaa
lret
pop
push
or
loop
jmp
orb
dec
cs
sbb
pop
inc
movsb
mov
push
inc
into
xchg
mov
dec
xor
xchg
lahf
sbb
popf
and
jnp
pop
cltd
xorl
xchg
add
and
mov
mov
ljmp
out
adc
ja
push
les
jb
pop
es
inc
sub
jns
adc
in
xchg
mov
mov
ret
xchg
out
lods
mov
pop
push
repz
leave
lods
add
mov
out
push
iret
jp
mov
pop
xchg
fdiv
out
pop
shll
out
arpl
imul
pop
and
into
iret
test
test
jb
lods
sbb
out
popa
clc
xchg
paddsb
faddl
pop
jns
sbb
cmp
add
stc
shlb
scas
int3
test
cmp
jbe
cs
mov
es
cmp
dec
mov
outsl
shl
call
inc
xor
xchg
or
sbb
sbb
xchg
sub
push
xor
xor
lods
push
shl
push
xlat
and
jmp
sahf
mov
and
xor
ret
ret
add
jmp
cmp
pop
jb
push
adc
cli
xlat
out
sub
repnz
dec
lret
push
lret
dec
je
test
outsl
dec
test
loop
movups
dec
cmp
sbb
nop
xlat
inc
nop
shl
enter
mov
push
out
sub
xor
sub
insl
xchg
jecxz
rcrb
mov
aas
push
push
pop
fisttps
mov
inc
push
std
daa
fwait
jmp
pop
adc
aas
add
arpl
push
sub
std
sbb
les
ljmp
fdivl
sbb
outsl
les
pop
push
addr16
pop
dec
add
mov
in
xchg
mov
jbe
roll
mov
fstpl
mov
cmpsb
dec
push
jmp
fnsave
lret
popf
push
iret
mov
mov
xchg
outsb
sti
lds
push
bswap
jmp
inc
cmp
data16
adc
mov
cs
adc
or
jp
push
xchg
pop
dec
sbbl
das
xchg
mov
xchg
mov
pop
or
adc
mov
push
int3
inc
fisubrl
shrl
mov
pop
adc
and
cmpsb
cmp
jb
dec
lret
sub
data16
mov
add
cmp
mov
mov
push
pop
adc
mov
inc
loopne
add
loopne
and
flds
pusha
or
in
ss
mov
xchg
mov
cmp
ret
sbb
loop
mov
or
cwtl
adc
lcall
outsl
fbld
adc
es
mov
out
jmp
adc
mov
or
decb
call
ss
and
fcomp
sbb
nop
loope
mov
inc
outsb
sub
ret
sub
or
imul
xchg
push
aaa
push
call
es
enter
sbb
mov
rorl
adc
mov
call
mov
movsl
adc
enter
nop
push
lods
dec
mov
ds
hlt
push
pop
sub
filds
push
ljmp
pusha
jmp
test
jbe
pop
pop
push
push
out
fs
cmc
add
pop
shll
out
mov
cwtl
xor
bound
push
jae
les
lds
sbb
divl
rclb
cmpl
mov
sti
add
nop
je
jnp
xchg
ret
cmpl
lretw
test
mov
sbb
pop
adc
cli
cmp
aad
arpl
pop
mov
dec
jne
and
lcall
addr16
and
test
sarb
ret
lret
lock
stc
and
repz
add
test
pop
aam
sub
or
repnz
xchg
into
pop
stos
and
sar
push
add
scas
pop
aad
mov
jns
cmp
nop
mov
mov
repz
je
sub
mov
and
jb
xchg
xor
mov
dec
jp
jnp
fwait
jnp
ja
call
mov
lods
imul
fs
inc
iret
mov
in
stc
jmp
loopne
xchg
rcr
shlb
testb
cmc
scas
paddw
xor
xchg
dec
ret
jle
and
mov
inc
push
test
stc
dec
inc
and
xchg
push
aas
gs
xor
adc
adc
xor
sar
add
mov
and
ja
add
andb
pop
sub
mov
push
jno
pop
pop
pushf
fistpll
mov
mov
inc
cmc
dec
pusha
pop
add
sahf
insl
sbb
and
sbb
xchg
bound
hlt
jecxz
and
inc
mov
nop
jnp
imul
jge
icebp
clc
or
out
mov
add
mov
cld
mov
xor
je
cmpsl
mov
mov
push
pusha
lods
cltd
pop
clc
jg
cmp
pop
repz
xlat
mov
jnp
dec
call
mov
insl
jno
dec
lahf
cld
jns
xchg
inc
push
and
orl
cmc
mov
dec
testb
iret
inc
mov
xchg
test
or
lcall
ret
out
inc
scas
cmp
movsl
xor
mov
sub
inc
lock
iret
and
pop
xor
cwtl
mov
push
or
cmpsl
fbld
fsubl
add
movl
out
aad
or
popa
in
fidivl
sbb
rolb
ficoml
inc
push
push
dec
inc
out
movsb
mov
cltd
push
cwtl
sub
jae
imul
inc
data16
xchg
or
hlt
mov
sub
fs
push
leave
inc
push
sahf
inc
adc
mov
loop
fisubrl
mov
cmc
outsb
adc
or
xchg
int3
lea
adc
xor
ficoms
in
jae
out
in
dec
push
dec
sub
lret
add
pop
mov
xchg
adc
xor
sbb
dec
pop
outsl
push
mov
mov
adc
shll
pop
jge
test
das
cmpsb
cmp
shr
addr16
repz
mov
and
xchg
inc
push
push
rclb
cmp
cmpsb
lret
imul
in
shrb
fcoms
dec
add
test
in
dec
fbld
lret
push
cmpl
sub
int
add
sbb
xor
aaa
mov
out
outsb
or
cmp
push
adc
sbb
push
and
add
and
stos
adc
cli
jae
cmpsl
leave
jns
jmp
imul
lods
cs
adc
lret
andb
jae
imulb
cmp
cli
jbe
fcoml
aas
addr16
pop
lds
pop
push
add
push
sbb
insl
sbb
bound
in
cs
in
aas
or
cmp
leave
xchg
out
test
jo
add
in
arpl
fisubs
sub
jl
jb
loope
add
insl
fisttpl
mov
mov
idivl
les
xchg
and
stos
sahf
mov
push
mov
and
mov
sbb
xor
fucom
sub
sar
lea
jecxz
jb
fwait
cmpsb
data16
xchg
sbb
sub
sbb
inc
hlt
adc
sub
push
jne
jecxz
mov
in
dec
mov
xor
shl
data16
in
aas
popa
add
mov
scas
rol
cmpsb
push
stos
or
mov
mov
and
dec
fldl
dec
add
xor
fimuls
int
mov
inc
push
fs
push
sbb
movsb
xchg
pop
inc
mov
sbb
lcall
popf
jl
or
cmpsb
mov
add
lea
sti
mov
inc
loope
sub
or
sbb
hlt
xchg
outsb
leave
lods
sub
mov
lcall
cwtl
enter
lods
dec
jge
gs
mov
sbbb
lods
into
sbb
cwtl
mov
mov
mov
push
pop
lods
aaa
jbe
or
or
je
pop
js
stc
mov
and
leave
adc
add
adc
pop
iret
movsl
mov
imul
adc
ja,pt
mov
fcomp
push
xchg
mov
sub
popa
outsl
dec
cmp
and
dec
mov
dec
sub
or
add
out
dec
inc
pop
sbb
sub
mov
add
inc
xchg
shlb
push
int3
pop
adc
test
hlt
dec
jecxz
xchg
mov
or
adc
sbb
leave
mov
in
adcl
stos
pusha
jecxz
nop
jle
popf
shrl
rcll
xor
jl
stc
stos
push
popf
out
push
fsubs
mov
out
in
mov
jmp
pop
jle
lahf
xor
jo
inc
inc
and
shll
pop
sbb
dec
push
pop
inc
dec
das
sbb
aas
ss
int3
cli
mov
call
rcll
dec
fsubs
dec
lret
imulb
and
dec
add
in
dec
rcl
push
movsb
cmp
pop
or
pushf
ret
dec
ljmp
dec
nop
ret
add
pop
push
lods
stos
ret
fwait
xchg
stos
ficoms
and
aas
mov
mov
sbb
xchg
lock
xor
int3
or
in
jae
dec
mov
dec
fidivrs
imul
xchg
jno
stos
inc
xchg
stc
mov
push
jge
push
xchg
xchg
jle
mov
bnd
outsl
adc
gs
int3
adc
pop
out
lock
hlt
inc
mov
push
mov
jbe
dec
fwait
ljmp
pop
rolb
rcll
bound
and
mov
scas
dec
inc
dec
outsl
xchg
les
lahf
lods
call
add
lret
pop
jle
clc
frstor
sahf
sbb
insb
mov
push
or
insb
mov
jno
jp
je
sarl
test
jb
loopne
cwtl
jle
scas
and
lret
inc
mov
dec
inc
push
or
and
mov
fdivs
nop
dec
jl
dec
cltd
mov
mov
outsl
dec
or
or
push
pop
add
cmp
ret
pop
push
add
xchg
jg
lcall
ret
cltd
rorl
js
mov
jno
add
stos
jl
jns
xchg
loop
pop
jge
xor
fisttpl
notl
add
push
iret
loopne
rclb
movsb
js
jb
add
mov
inc
mov
inc
loop
out
pop
sub
add
fs
adc
cmp
pop
orl
aas
ja
or
subb
icebp
clc
inc
jg
cmp
ljmp
fnstcw
inc
add
jle
mov
lea
femms
pop
cmp
push
not
xor
jmp
outsb
adc
mov
inc
clc
aam
push
in
dec
or
int3
xor
adc
pusha
xorl
push
mov
or
or
inc
mov
xchg
adc
sbb
mov
in
test
or
dec
out
cmpsb
lds
scas
popa
add
sbb
push
int
hlt
loope
jne
pop
push
pop
sti
hlt
in
inc
adc
daa
call
scas
mov
xchg
xchg
or
add
in
mov
std
or
or
push
enter
sub
test
jge
pop
lret
jecxz
adc
mov
ja
data16
lods
cvtdq2ps
jp
pop
jl
cmp
out
dec
aas
push
and
hlt
mov
pop
lods
pop
sub
fs
notl
adc
or
stos
mov
cmp
out
lahf
cmp
mov
cmp
cmp
adc
outsb
xchg
pop
cwtl
test
pop
imul
push
pusha
or
frndint
sbb
lods
pop
outsl
std
enter
pushf
inc
rcrb
xor
sbb
mov
loopew
mov
subb
adc
fsubp
shrb
jnp
mov
fs
mov
test
or
jmp
popa
inc
push
shl
jns
xchg
mov
or
int
loopne
jp
aam
popa
jp
lret
xlat
es
cmp
fs
xchg
scas
enter
mov
cmp
cmp
mov
push
in
cld
mov
clc
mov
mov
imul
ds
fwait
mov
xchg
in
shlb
es
ljmp
lods
prefetcht1
sub
sbb
pop
push
leave
push
pusha
imul
fs
and
nop
ss
repz
pusha
push
xchg
ds
inc
int3
cmp
dec
popa
sub
test
loopne
ss
xchg
push
pop
xlat
cmp
sbb
std
adc
fistl
push
jnp
fldl
cmp
rcrl
call
or
add
inc
jp
and
into
and
aaa
repnz
sahf
cwtl
icebp
mov
xor
mov
add
shlb
jae
xor
test
fildll
mov
shrl
rcrb
mov
mov
andl
dec
xchg
outsl
pop
cmp
cld
es
dec
dec
xchg
mul
mov
sbb
call
xchg
adc
lcall
sti
aam
shl
add
sbb
add
mov
lahf
mov
jle
jo
or
shrl
insb
sbb
pop
or
push
jo
call
nop
inc
and
mov
out
out
outsl
jno
into
mov
cmpsl
sarl
ds
xor
test
shrb
scas
rcrb
dec
jne
jmp
dec
and
mov
mov
xor
out
mov
xor
sbb
xor
test
in
xor
xor
imul
data16
addr16
addr16
mov
or
xor
add
mov
push
ffreep
add
mov
nop
test
filds
sarl
xchg
aam
add
cmp
inc
cltd
jns
inc
inc
mov
in
pop
mov
mov
push
mov
loope
adc
mov
cmpsb
ja
xchg
jne
cmpb
dec
sub
popf
xchg
sub
pop
shl
sahf
stos
test
jae
mov
movsb
ss
mov
jp
push
imul
stc
xchg
jg
repz
and
dec
add
jo
mov
and
or
xchg
scas
mov
cmpsb
jnp
ficoml
cmp
pop
adc
mov
lret
mov
jns
sub
fsub
enter
and
sbbb
mov
sbb
fld
xchg
dec
add
xlat
mov
inc
aam
ds
mov
sub
cmpl
or
mov
cli
lods
dec
mov
fcomp
outsl
enter
stc
adc
push
cli
sbb
lds
jno
clc
and
fs
xor
cli
lret
sahf
mov
int3
and
adc
insb
mov
mov
pop
into
scas
mov
mov
mov
inc
fs
out
stos
jno
cld
divb
or
pop
xchg
or
xor
mov
enter
xor
mov
mov
fdivs
aas
mov
mov
push
dec
fdivrp
jne
mov
dec
adc
cld
fdivrs
adc
jg
ds
jno
stc
je
xchg
adc
jge
into
shrb
movsl
jl
fsub
xchg
aas
aas
orb
jge
fcoml
jg
adc
rcll
lods
inc
imul
mull
dec
sti
lods
sub
xchg
mov
pop
shl
xchg
js
sbb
push
sub
mov
gs
lods
mov
cmc
mov
xchg
add
xchg
fcmovu
sbb
mov
xor
iret
mov
fcoml
mov
fcompl
pusha
jmp
inc
ljmp
xor
insb
xchg
ljmp
addr16
stos
loopne
fsubp
push
mov
fimuls
pop
inc
inc
bound
ljmp
add
enter
and
ljmp
cmp
nop
lock
jg
mov
add
jge
sub
nop
insl
adc
push
jecxz
inc
and
movl
lock
cli
iret
out
push
pop
ja
imul
out
rorl
pusha
sbb
jo
mov
ja
sti
inc
stos
cmpsb
popa
lock
mov
and
out
jg
test
mov
dec
aaa
jecxz
aad
push
add
loope
outsl
test
inc
push
and
mov
xchg
sub
sub
lea
pop
jge
jno
push
out
fmull
push
pop
or
hlt
cmc
add
jg
mov
in
sub
sarb
sbb
push
sbb
in
icebp
into
ljmpw
mov
call
sub
mov
jge
adc
mov
ljmp
inc
int
mov
mov
and
nop
pusha
xor
xchg
jb
aas
jnp
or
xor
imul
imul
gs
jecxz
rcl
sub
cwtl
dec
dec
out
jns
lods
lods
xchg
call
inc
dec
cltd
dec
iret
mov
fld
lret
lock
je
or
xor
je
push
int
ds
lods
cltd
and
adc
dec
je
adc
dec
fwait
adcl
les
stos
add
cli
int
inc
mov
inc
js
jbe
stos
add
test
sbb
mov
push
jae
dec
cmp
stos
push
add
pop
fidivrl
insl
insl
ret
fs
pop
push
es
sbb
pop
sbb
pop
sbb
dec
mov
hlt
ds
aaa
std
pop
sub
imul
out
cmp
adc
lock
push
lea
sbb
shl
mov
pusha
fsts
cmp
and
mov
lret
dec
insb
push
mov
jecxz,pt
mov
xchg
xor
or
jbe
add
push
cmp
pop
arpl
mov
loopne
add
cwtl
pushl
xor
gs
pop
sub
lret
pop
sbb
js
mov
adc
je
adc
dec
sub
jle
jb
mov
subb
xchg
not
add
fildll
mov
or
inc
inc
into
pop
push
lds
in
inc
and
popa
push
pop
sub
push
lds
outsl
wrmsr
into
xor
jg
jbe
dec
and
push
mov
add
pusha
inc
pop
mov
xchg
dec
adc
add
pushf
sahf
xchg
lret
adc
and
outsb
cmp
repnz
pop
lahf
push
mov
cmp
fidivrl
lock
mov
and
gs
stc
leave
sahf
sbbl
jecxz
push
or
mov
mov
pop
jns
dec
pop
xchg
mov
leave
mov
loopne
icebp
lret
mov
repnz
sbb
test
inc
push
mov
push
les
mov
rcr
mov
ret
movsb
lea
pop
aam
stos
movsb
add
mov
jecxz
or
ret
rorl
cmp
lret
repz
sar
xchg
mov
mov
add
int3
cmpsb
les
mov
subl
mov
add
jecxz
fdivl
xor
mov
or
aaa
jbe
icebp
das
pop
mov
and
inc
sahf
xor
jge
sbb
jnp
test
loope
mov
fidivrs
adc
pop
in
mov
pop
sub
scas
pcmpeqd
jo
sbb
pusha
mov
gs
movsb
and
mov
pop
pop
mov
fistps
adc
add
pop
sbb
and
and
pop
inc
sbb
pop
ljmp
cmpsl
outsl
mov
mov
xchg
push
shl
aam
sbb
mov
jmp
cmp
push
lcall
pushf
js
push
dec
xor
mov
out
out
fcomps
lahf
lahf
sarb
ret
arpl
mov
pop
loopne
push
or
fwait
mov
ret
push
out
test
mov
mov
pusha
arpl
and
pop
inc
mov
adc
dec
iret
ret
lods
in
inc
int3
mov
add
mov
mov
adc
mov
and
fisubl
mov
andps
loope
mov
mov
adc
imul
test
cmc
enter
dec
mov
mov
mov
pop
or
cmpsb
stos
sbb
cmp
lret
popf
push
xchg
mov
scas
inc
mov
adcl
pushf
mov
addr16
jae
mov
shrl
movsb
cld
scas
push
xchg
sbb
nop
inc
add
pop
rcrl
int
test
ret
jl
cmpsl
movsb
push
mov
mov
mov
les
data16
adc
inc
cli
adc
repnz
mov
adc
xor
loopne
cmpsb
lret
das
es
out
cmp
jg
ljmp
imul
je
into
mov
pop
inc
inc
xchg
imul
pop
mov
insb
out
jmp
jbe
sub
push
mov
add
roll
jb
xchg
dec
push
inc
aaa
repnz
mov
sbbb
mov
int
loop
cld
and
ret
cld
xchg
pushf
xchg
push
je
mov
xchg
sti
mov
mov
je
fstps
lahf
call
gs
and
pop
adc
scas
aad
dec
mov
add
cmp
lds
nop
jle
popa
pop
sti
cmp
in
mov
adc
add
shll
das
mov
dec
xor
popf
insl
hlt
jmp
or
mov
mov
xlat
inc
mov
or
setns
sbb
bound
fstpl
lahf
jns
shll
cld
mov
repnz
jmp
outsl
adc
push
ret
sbb
jbe
and
mov
shl
cmpsl
pop
icebp
ja
push
adc
or
add
inc
insb
push
or
or
jno
jne
push
loope
sti
mov
scas
dec
ret
pop
shlb
rolb
inc
add
popf
mov
fcoml
pushl
add
lret
fcomi
stos
mov
adc
pop
enter
inc
scas
je
flds
push
push
mov
adc
add
bound
js
cmpb
push
ljmp
mov
add
adc
stc
ljmp
pop
ja
jnp
scas
mov
xchg
dec
dec
stc
inc
add
nop
xchg
and
jle
push
inc
imul
call
leave
sbb
insb
add
mov
cld
ja
xchg
mov
jecxz
test
jmp
arpl
or
scas
mov
and
sbb
lahf
pop
push
xchg
lock
xor
movsb
mov
dec
mov
cli
stc
jl
jge
enter
mov
add
movsb
sub
scas
addr16
add
outsb
sarb
nop
mov
xchg
notl
test
or
test
pop
cmpsl
and
mov
ret
lahf
ss
test
in
test
lea
ljmp
mov
pop
and
xchg
lods
adc
clc
sahf
std
push
xchg
ds
mov
and
xor
xchg
iret
jp
insl
addr16
push
out
iret
sahf
sub
push
xchg
push
xchg
xchg
xchg
andl
sar
lods
push
subl
out
mov
or
sub
lea
icebp
cmp
and
out
push
js
or
cli
test
fsubs
call
imul
lock
lods
enter
dec
add
xchg
lods
pushf
pop
mov
xchg
call
jge
push
sbb
xor
dec
scas
mov
and
stos
sub
in
sbb
jo
fisttps
loop
xlat
inc
mov
and
test
cltd
jae
lods
pop
pop
mov
xchg
testl
sbb
movsl
cmp
dec
inc
les
aam
xchg
or
or
std
jge
adcl
jnp
dec
add
aas
and
repz
jle
arpl
mov
xchg
adc
mov
xchg
fst
inc
jle
aad
bound
pusha
sbb
lea
jle
mov
les
pushf
pop
add
outsl
cmpsb
xchg
and
in
imul
sbb
arpl
cmp
sub
cmp
icebp
push
loope
xlat
lret
xor
stos
xlat
in
jle
in
jo
xchg
inc
xor
ror
xor
ds
mov
ficoms
jg
nop
hlt
and
dec
sbb
fildl
lods
shrl
hlt
mov
jp
ds
int3
and
call
push
jbe
push
fdivl
xchg
sub
and
adc
dec
mov
mov
out
jnp
sbb
xchg
pop
and
loope
dec
popa
aam
mov
aad
jb
xchg
into
xchg
lret
loopne
pop
and
movl
mov
pop
aam
out
dec
ljmp
and
movsl
ja
ret
jnp
fst
cwtl
push
jp
xchg
add
sbb
pop
mov
insl
repz
jnp
mov
stc
decl
outsb
popa
loop
cltd
mov
lods
sub
xchg
fsubl
adc
scas
cmp
inc
aad
dec
dec
rclb
mov
xchg
xchg
or
jne
cld
jo
mov
push
or
add
subb
cmc
and
sti
lret
add
rcl
loopne
push
sbb
lods
push
ja
inc
imul
cmpsl
out
or
in
inc
push
mov
lods
ja
mov
pop
mov
mov
inc
in
push
idiv
inc
jo
mov
sub
sbb
adc
loop
dec
mov
das
xor
mov
mov
clc
xor
shrb
mov
jbe
subl
cmp
nop
pop
cli
mov
stos
test
out
cmpsl
insl
push
outsl
sbb
jb
iret
xor
loopne
pop
jmp
stos
cmp
loopne
in
adc
jge,pn
aaa
call
mov
jle
out
test
mov
xchg
dec
out
xor
xchg
and
dec
jmp
push
test
mov
shlb
loop
mov
dec
lcall
sbb
fwait
lahf
xor
movsl
ret
mov
pushf
xchg
dec
cmp
xchg
lea
fimull
enter
or
test
sahf
fiaddl
mov
enter
jb
adc
dec
adc
push
jl
ljmp
into
pop
fstl
pop
cmp
lock
sub
cmpsb
call
inc
xchg
push
push
mov
sbb
stos
cmp
dec
stos
cmp
ret
std
jbe
cmpsl
xor
leave
xorl
sar
int3
lcall
cmp
in
mov
mov
or
and
mov
cltd
pop
mov
mov
subb
scas
loopne
adc
leave
loope
jo
add
jmp
inc
inc
pop
mov
xor
pop
mov
mov
enter
mov
rcll
and
pusha
stc
test
jecxz
or
jge
mov
hlt
aas
and
mov
fstps
addr16
scas
fstps
sub
adcb
jbe
daa
mov
imul
mov
add
or
xchg
lahf
push
push
jae
sub
cmp
ret
push
fsubr
test
jl
push
and
mov
shrl
outsb
inc
inc
cmpl
jno
inc
idivb
cmp
push
adc
mov
xor
sub
mov
sbb
jne
mov
mov
mov
xlat
cmc
cltd
cmp
mov
imul
or
mov
out
jge
xor
mov
or
mov
mov
sti
xor
mov
inc
push
push
adc
sub
add
xor
lods
dec
ljmp
or
push
testb
jae
imul
leave
lds
inc
adc
dec
out
xchg
mov
orl
mov
mov
rcrl
mov
mov
adc
mov
shrl
ret
push
stos
add
arpl
jno
popa
mov
lods
mov
fcmovu
stos
int3
lods
inc
sahf
mov
notl
call
fs
inc
and
push
pop
sbb
repz
test
test
jbe
lret
mov
inc
jb
push
fdivr
pop
in
sub
test
lea
rclb
pop
repz
jmp
mov
cs
repnz
addr16
adc
hlt
jg
lret
ret
push
dec
rclb
adc
sub
fbld
stos
sar
jle
addr16
jp
stc
sbb
sub
fsin
adc
movsl
stos
test
sbb
pop
pop
mov
inc
aad
inc
call
aam
push
lock
jg
and
jg
daa
and
push
shlb
mov
mov
sbb
inc
arpl
dec
mov
xchg
int3
push
sbb
or
loope
fyl2x
push
out
sahf
scas
popf
pop
mov
push
ret
shll
add
inc
les
cmp
jp
sub
xor
push
repz
xchg
aam
test
xchg
xchg
out
inc
and
insb
xor
shrd
cli
dec
xchg
sub
mov
cmpl
div
jnp
inc
xchg
pop
je
stos
sbb
fs
xchg
into
inc
cs
dec
sbb
xor
xchg
and
cmp
in
ljmp
or
test
lds
sub
and
rorl
cwtl
xchg
adc
aam
das
mov
push
mov
lret
xlat
jecxz,pt
fldt
add
dec
lret
test
inc
lahf
dec
push
bound
jl
shufps
jne
adc
test
stos
int
test
push
mov
cmpsl
sbb
movsb
cmp
push
pop
dec
pop
mov
and
sub
push
push
inc
andb
push
dec
cmc
fs
or
mov
dec
in
ret
das
dec
test
and
mov
adc
cmp
sbb
das
mov
je
jne
insl
shlb
xorb
lret
ret
adc
stos
bound
ret
add
cs
jne
jl
mov
pop
dec
xchg
mov
icebp
sbb
inc
mov
dec
sti
aaa
stc
jmp
rcrb
fildll
icebp
out
out
cmp
sub
loop
in
mov
add
fnsave
xor
shll
dec
dec
gs
stc
pop
lods
add
test
lds
ja
pop
gs
sub
mov
mov
arpl
in
les
push
jp
ret
lods
push
test
popl
xor
or
aad
sbb
push
dec
lcall
dec
xchg
icebp
outsb
cmp
cmpsl
fildll
sbb
cli
imul
add
and
icebp
add
icebp
cld
xor
inc
cwtl
pop
add
fldl
push
xchg
orl
push
xor
lds
stos
sub
std
repnz
push
pusha
or
iret
fs
in
add
shl
lret
in
fiadds
std
jo
loopne
imul
add
adcl
imul
pop
leave
add
adc
sub
mov
jle
cmpsb
loopne
sbb
xchg
dec
xchg
or
xor
int
pop
mov
mov
mov
insl
lcall
out
arpl
push
cmpsb
fcoml
arpl
mov
inc
add
add
bound
int
stc
and
jo
ja
adc
scas
test
popa
push
ret
sbb
jg
add
lods
aad
xchg
jecxz
sti
mov
mov
push
fnstsw
aad
in
popa
daa
mov
outsl
pushl
mov
cmp
mov
aad
fs
dec
mov
inc
cltd
and
filds
push
imul
nop
std
out
dec
inc
test
push
ds
jbe
jl
out
add
in
insb
into
cmp
into
stos
loopne
cmp
fildll
adc
mov
pop
and
pushf
stos
inc
outsb
xor
call
xchg
lock
lds
addr16
mov
sub
push
movsb
lcall
sbb
ret
sub
arpl
fsubrp
adc
hlt
insl
cmp
mov
hlt
ja
jp,pt
pop
add
sbb
fs
fnsave
andb
cmp
pop
push
mov
pop
xchg
mov
pop
in
adc
and
cmpsb
popa
sahf
das
xchg
test
cld
xor
mov
and
cmpsl
ja
nop
mov
mov
xor
flds
or
dec
jmp
jo
popa
sahf
out
sub
stc
fcoms
inc
leave
adc
xor
inc
sbb
jg
pop
lods
push
imul
lret
js
sub
lea
pop
test
mov
jecxz
stc
jecxz
cld
xor
idivl
and
fstps
or
mov
or
ljmp
popf
aam
push
lret
dec
xor
je
repz
jne
popa
inc
xchg
test
inc
ffree
add
add
in
fimull
xchg
jp
in
mov
mov
xor
rclb
std
mov
xchg
out
cld
sbb
mov
mov
mov
cmp
sub
in
add
lcall
sub
insl
dec
push
ds
int
testb
testl
adc
jecxz
mov
inc
ljmp
jmp
dec
push
outsl
mov
out
mov
inc
sbb
or
jp
pop
cmp
fistps
hlt
aas
int3
mov
ss
mov
js
mov
cwtl
adc
sub
fimull
pusha
fimull
sub
mov
lret
sbb
pop
sub
ja
lret
in
push
popf
imul
add
fisubrs
jg
lods
test
adc
or
cmpsb
test
add
ja
popf
mov
sbb
mov
push
jle
jg
or
or
rcll
dec
xor
mov
sbb
sub
pop
push
push
inc
test
cmp
mov
cld
inc
cmp
mov
lret
and
mov
add
sbb
jb
adc
dec
mov
fcmovnu
xor
adc
ds
stos
jp
sbb
movsb
arpl
popf
push
gs
lahf
mov
xor
pop
testb
jmp
fmull
nop
out
cmp
pop
sbb
xor
enter
jae
lock
sti
sub
sub
mov
sbb
mov
push
mov
push
dec
das
jmp
add
push
inc
inc
inc
sub
push
dec
out
mov
push
add
imul
jmp
inc
dec
fs
mov
sti
dec
stc
fdivrs
or
or
out
mov
or
mov
outsl
ljmp
jno
pop
fiaddl
aas
xor
mov
imul
int3
xor
inc
divb
fsts
out
shl
xchg
in
popf
sbbb
fs
mov
es
mov
jmp
push
mov
stos
xchg
xor
ret
and
adc
jns
add
sub
push
adc
std
loopne
jbe
movb
outsb
dec
cwtl
mov
je
jecxz
push
fcmovu
add
ret
pop
pop
sbb
mov
lods
into
mov
push
dec
add
xor
stos
sbb
push
jo
repz
pop
add
lret
mov
jge
cmpb
sbb
push
ljmp
sub
shlb
data16
mov
testb
and
int
mov
loopne
ljmp
test
xorb
loopne
rorl
pop
arpl
push
movb
xor
adcl
sti
ja
imulb
cld
test
cltd
adc
sbb
or
mov
clc
mov
fstl
imul
cli
and
lret
aam
or
ja
fcomps
sub
in
cmp
pusha
test
iret
sbb
popf
je
dec
jecxz
mov
pop
enter
call
nop
scas
mov
aaa
jmp
dec
fmul
or
add
xchg
xor
mov
jb
or
xor
sar
mov
popf
pop
test
jecxz
out
inc
cltd
sbb
and
add
push
mov
pop
or
cmc
jnp
and
jne
sub
insl
aas
push
sbb
lea
int
mov
fsubs
jns
leave
xchg
jnp
imul
int
sbb
pop
xlat
aad
ja
jmp
add
and
pushl
mov
jle
adc
sbb
push
add
mov
inc
jge
arpl
add
stc
cmpsl
jo
cs
repz
aas
mov
dec
mov
mov
imul
lcall
sbb
mov
aam
or
sbb
imul
les
andb
fwait
and
mov
into
inc
mov
push
rcr
cmpsb
add
pop
or
ljmp
lods
mov
daa
adc
add
push
push
mov
add
add
out
arpl
push
inc
jno
jae
sub
cwtl
mov
imul
jo
pop
push
mov
jge
es
lret
dec
xor
rcrb
xor
daa
or
les
mov
in
test
cmp
mov
push
jle
ror
lock
aam
fsubrs
pusha
mov
popa
push
xor
imul
pop
dec
adc
repz
mov
cmp
add
aad
repz
repz
dec
pop
adc
cli
stos
fcomps
pop
cltd
xorl
xor
push
mov
or
movsb
shrb
push
in
pop
je
test
lea
add
ja
dec
mov
push
dec
pushl
xor
lret
jns
mov
popf
push
mov
push
orb
adc
dec
into
leave
aad
jae
sub
push
xorb
arpl
mov
push
or
lods
ret
loop
ret
add
les
sub
insl
sbb
scas
push
repz
or
mov
push
push
adc
out
ja
fmull
jnp
cmovp
ret
sbb
push
call
addb
sub
dec
out
stos
add
cmp
out
add
test
sub
sub
push
jecxz
repnz
add
xchg
hlt
std
in
cmp
mov
or
push
jbe
fidivs
pop
sbb
and
nop
aam
or
movsb
sub
xchg
or
js
into
adcb
das
xchg
addr16
mov
lahf
jge
cld
ja
dec
hlt
mov
into
push
in
inc
ljmp
pop
idivb
out
repz
pop
movsl
xor
sub
cmpb
mov
stos
jne
and
out
xchg
cmp
push
push
movsl
ret
aad
int3
cmc
pop
or
mov
or
adc
addb
add
sub
mov
mov
push
mov
adc
fucom
pop
les
cmpsb
mov
jb
and
inc
rorb
cmp
int
jbe
andl
jl
jge
dec
sbb
sbb
adc
add
loop
dec
daa
push
shll
sub
xor
rcll
sbb
lea
xabort
repz
fwait
test
out
jns
sbb
dec
push
mov
wrmsr
xchg
xor
in
data16
sub
cmpsl
mov
ds
or
scas
test
ljmp
xlat
aaa
inc
cmp
mov
test
pop
cmc
das
mov
mov
cmp
lds
aaa
inc
sar
mov
int3
and
movsl
stos
outsl
mov
jo
sub
insb
or
push
jle
les
cli
aaa
push
shll
xor
adc
loop
lods
sbb
movsb
push
pop
pop
shr
dec
adc
add
xchg
sarl
sbb
jne
mov
lret
shl
sahf
add
mov
sbb
cmp
xchg
or
movsl
cmpsl
movsl
mov
dec
scas
adc
dec
mov
cli
mov
fnstenv
popf
hlt
out
and
jmp
or
mov
push
sbb
cmp
pop
lea
xor
das
in
test
int3
inc
add
cmp
cmpsb
inc
xor
shrb
pop
imul
daa
xor
stos
and
lcall
cmp
fst
inc
xchg
mov
jle
sub
lahf
mov
adc
push
cli
adc
int3
repz
cltd
xchg
pop
jmp
ds
push
movsb
mov
iret
dec
mov
movsb
xchg
scas
rcrb
mov
push
pop
bound
xchg
inc
cmp
and
nop
lahf
push
sarl
inc
and
mov
xchg
and
movsb
adc
jg
fwait
mov
mov
xlat
adc
nop
loop
xorb
jp
lods
xchg
mov
sbb
call
mov
push
jae
inc
jne
pop
mov
loopne
pusha
or
mov
add
mov
pop
xlat
sub
sub
andb
adc
clc
in
cmp
fbstp
es
mov
cmp
pushf
push
mov
sbb
das
fildl
pop
rolb
jne
push
jo
loop
roll
sahf
xor
lock
dec
and
hlt
mov
xchg
xchg
mov
jg
lret
loope
mov
dec
lods
pop
sarl
rclb
dec
push
mov
in
xchg
or
mov
in
pop
dec
cmp
mov
sub
cwtl
jb
cwtl
mov
xor
adc
mov
cmc
sbb
icebp
cs
lret
pop
mov
and
loop
je
mov
sub
seto
enter
pop
dec
adc
xchg
ss
or
data16
cld
cs
sub
push
sub
jg
lretw
and
cmpsl
sub
push
dec
sub
sub
mov
jo
add
push
das
or
fistpl
int3
popl
fmuls
icebp
cs
pop
mov
out
pop
insb
mov
cmp
jb
call
mov
mov
mov
jecxz
push
loop
pop
daa
iret
and
xor
sub
pop
nop
jmp
test
sub
inc
mov
jo
loope
push
outsb
lods
pop
push
imul
lock
scas
das
pop
dec
push
in
and
cmp
sub
fwait
ja
adc
dec
mov
rorb
rolb
push
js
dec
in
daa
imul
pop
xchg
in
or
mov
pop
mov
mov
jecxz
ljmp
dec
adc
popf
into
or
jno
js
sbb
jo
pop
lahf
sbb
fisubrl
into
fnstsw
pop
lea
push
mov
or
repnz
jne
subl
out
adc
iret
inc
mov
or
sbb
sbbl
in
mov
mov
sub
aad
add
mov
mov
mov
outsb
sahf
dec
mov
mov
xchg
int3
sub
xchg
mov
call
sahf
cmpsl
and
in
or
shrl
jne
inc
dec
in
faddl
mov
lea
push
mov
shll
mov
and
sub
pushf
mov
out
enter
mov
cmpsb
push
adc
call
sysexit
lret
xchg
push
push
loope
ds
mov
repnz
push
fwait
test
dec
lahf
addr16
xchg
sub
mov
mov
adc
in
xorb
xchg
test
xchg
shl
inc
pop
jge
lds
adc
or
inc
das
xchg
dec
jae
idivl
loope
sbb
jmp
mov
jecxz
call
dec
add
fcom
and
dec
inc
mov
cs
jnp
pop
incb
inc
daa
andl
dec
leave
jae
dec
scas
push
stos
or
add
ljmp
xchg
push
mov
adc
and
inc
mov
mov
add
jne
mov
sub
push
ret
je
jle
test
xor
add
repnz
sbb
sub
mov
xchg
jmp
xchg
push
lock
jne
inc
sahf
aas
xchg
push
pop
mov
repz
and
jns
push
push
push
jae
ds
dec
mov
call
ljmp
fsubrs
cld
mov
iret
push
loopne
bound
lret
xor
mov
jne
or
push
lcall
inc
sbb
sub
inc
imul
inc
popa
push
jmp
cs
pop
inc
push
and
xchg
push
add
xlat
loop,pt
popa
and
cmpsb
adc
stc
das
jg
mov
imul
es
bound
jns
mov
rclb
inc
out
mov
mov
out
xchg
inc
add
lea
jb
aam
ljmp
and
dec
lods
push
dec
rcll
sbb
adc
test
pop
jp
sbb
inc
mov
sub
mov
fs
adc
es
lock
cmp
xchg
push
push
jge
cmpsb
xor
adc
iret
jo
mov
popf
cld
enter
or
ds
cmpsb
scas
mov
fisubrs
enter
ret
push
jle
mov
out
dec
ret
and
fnstcw
mov
loope
mov
pop
xchg
dec
sub
jbe
sbb
iret
mov
fs
mov
cld
inc
arpl
cmp
popa
ja
sbb
sub
pop
mov
idiv
mov
mov
mov
roll
adc
sub
push
mov
inc
fsts
jp
movsl
je
push
test
ja
das
lcall
mov
pop
arpl
outsb
jl
test
pop
and
scas
pop
sbb
cmp
sbb
jnp
jnp
test
mov
aas
mov
movhps
mov
mov
loope
stc
loop
adc
mov
js
jle
aaa
adc
jno
stos
ja
push
stos
dec
xchg
inc
push
pop
xchg
xor
call
sahf
inc
cmp
ficoms
xor
sbb
cmc
fldl2t
int3
in
xor
jmp
pop
xchg
xchg
js
push
rcll
add
and
inc
lods
adc
cltd
mov
es
adc
or
and
sub
icebp
or
cmpsl
int3
adc
dec
divb
jmp
cmp
dec
push
jnp
in
pushf
bound
and
jge
jg
sub
rorl
adc
in
push
ss
call
lret
or
jns
lock
push
arpl
arpl
jno
jecxz
push
mov
ljmp
xor
jne
scas
cmpsb
out
pop
xchg
js
xchg
and
outsb
sub
js
add
push
mov
xchg
fcmovnbe
fiaddl
outsb
pop
fdivrl
sbb
mov
jno
jo
pop
sbbl
cmpsb
push
cmp
daa
fiadds
lods
loop
pop
or
pusha
pushf
iret
push
pop
cmpsl
and
cmpsb
sbb
negl
jne
inc
pop
push
mov
subl
out
jae
sbb
lahf
jle
xchg
stos
loopne
sbb
jmp
pop
lret
stos
fwait
scas
xchg
push
mov
repnz
or
pop
ljmp
out
sahf
or
call
jno
loop
and
xchg
pop
lahf
jl
pusha
jns
je
mov
inc
test
das
or
inc
adc
in
jecxz
daa
xor
push
loopne
xchg
cmpl
leave
pop
int3
in
imul
outsl
enter
or
pop
xchg
insb
sbb
cwtl
scas
stos
jg
imul
sbb
test
sbb
mov
cld
and
repnz
xchg
sub
arpl
in
lahf
das
test
pusha
fcomps
mov
out
mov
cmp
lret
mov
xor
jp
repnz
loop
add
adc
xor
or
ss
out
ljmp
inc
test
mov
jmp
push
push
dec
fwait
inc
lock
ds
jge
inc
cli
jns
rclb
add
out
idivl
sbb
addb
and
popf
mov
jae
pop
pop
inc
fisttps
in
xchg
adcl
cltd
cmp
std
mov
inc
push
jp
test
xchg
push
or
or
and
mov
leave
sub
inc
jge
mov
pop
push
mov
lret
adc
test
jo
sbb
mov
enter
xor
icebp
xchg
insb
xchg
inc
scas
loopne
rclb
cmp
xchg
push
ljmp
dec
fs
mov
lcall
fnsave
aas
popf
xor
mov
dec
sarl
fadds
and
aaa
repnz
push
add
or
mov
in
add
mov
cmpsl
push
fstpl
xchg
aam
cmp
inc
jno
rclb
stos
push
test
sub
frstor
mov
popf
repnz
pop
scas
sbbl
fmull
addr16
fs
aam
sbb
stos
rcl
dec
or
daa
nop
pop
adc
imul
insl
xor
mov
add
stos
outsb
jo
jns
insb
outsb
movsl
jp
scas
ss
insb
mov
jmp
outsl
sub
fcmovnu
mov
adc
div
jbe
xchg
pop
pop
adc
icebp
push
cld
push
ret
test
out
adc
not
scas
mov
or
addr16
cltd
sbb
push
xorl
pop
or
int3
or
imul
cmp
mov
mov
hlt
ja
sbb
sbb
sub
popf
pop
fadd
dec
flds
mov
aad
add
lret
xor
xchg
incl
fimuls
sub
ja
popa
fdiv
in
nop
mov
loop
jo
test
aaa
daa
nop
test
mul
fsubr
fcmovu
imul
push
ret
mov
lock
stos
stos
fsts
movsl
fadds
xor
popf
xchg
adc
in
rolb
dec
shl
cmp
sbb
sbb
cmp
imul
in
mov
push
repz
fsubr
outsl
js
jp
jle
sbb
xchg
out
hlt
add
movsl
pushf
ds
into
push
xchg
sarb
sub
out
mov
pop
les
add
stos
dec
frstor
jnp
popf
daa
out
cmp
in
and
pop
mov
add
jo
shl
ds
sbbb
enter
push
add
push
lahf
mov
mov
enter
cwtl
rcrb
es
cwtl
stos
inc
pop
and
push
push
lret
in
mov
repnz
fwait
dec
enter
out
jg
mov
jmp
xor
sti
int
popf
mov
mov
jnp
xchg
jmp
cmp
out
fistps
cli
cmp
cmp
loopne
insl
lahf
add
divb
xor
fcomp
add
mov
xchg
push
fmull
inc
insb
popa
pop
dec
mov
popf
dec
test
ds
push
je
xor
push
pop
fisttpl
mov
pop
xor
test
es
lods
dec
push
and
jg
loope
hlt
int3
iret
fldcw
push
in
pop
dec
jne
imul
push
mov
repnz
cwtl
and
jmp
loop
leave
out
cld
cmc
xor
cmp
insb
scas
dec
jl
cld
mov
sbb
xchg
push
in
add
mov
cli
pop
mov
push
mov
dec
imulb
mov
in
pop
mov
or
mov
and
aad
or
pop
xchg
xchg
mov
xchg
lods
aas
push
mov
adc
adc
xor
jnp
mov
jno
add
mov
dec
or
jg
push
xchg
and
int
mov
cmpsb
sbb
xchg
jb
and
movsb
pop
mov
notb
pusha
xchg
jb
inc
cmp
xor
das
push
lcall
or
in
lcall
incb
lret
fwait
pop
test
cltd
and
out
je
mov
movsl
fld
xlat
leave
push
adc
dec
pop
arpl
mov
push
sbb
enter
mov
mov
dec
divl
je
loop
lods
lds
mov
dec
in
xchg
push
lret
push
inc
sbb
shl
sub
out
mov
mov
dec
das
cmpsl
add
fldenv
jbe
jmp
enter
call
sbb
adc
sub
xchg
arpl
push
test
pop
jne
movsb
shl
jge
icebp
pop
mov
outsl
outsb
jnp
inc
les
cmp
daa
pop
ficomps
cmp
hlt
mov
xchg
mov
mov
loope
jle
out
rcll
cmp
adc
ret
jnp
sub
jecxz
pop
sub
mov
adc
repnz
es
les
cwtl
arpl
inc
sub
pop
xchg
add
add
int
es
mulb
shll
jmp
push
or
jmp
or
pop
repz
hlt
ret
mov
mov
fwait
mov
xchg
cmpsl
xchg
mov
sbb
hlt
fnstenv
pop
cmc
jae
std
ljmp
pop
pop
fnstcw
cmc
and
cmpsb
dec
push
mov
leave
out
or
push
iret
cwtl
je
cmpsl
xor
xor
nop
push
pusha
aaa
push
hlt
adc
cmp
adc
add
push
lds
aaa
addr16
daa
nop
sub
cs
rep
inc
mov
pop
sub
es
cwtl
cmp
test
xchg
mov
cs
adc
fisubl
mov
sbb
mov
das
adcl
or
arpl
lock
pop
mov
test
movsb
ss
cs
aad
repnz
pop
mov
lret
ret
mov
enter
sub
mov
add
lcall
pushf
xchg
sub
push
pop
hlt
xchg
sti
cmpsb
fwait
movl
mov
mov
push
jae
pop
cltd
sbb
icebp
int
orb
sbb
inc
sbb
dec
cltd
inc
push
add
mov
sub
mov
scas
fisttpll
loop
cmp
pop
in
mov
xor
fcomps
les
push
dec
push
addr16
pop
xchg
imul
ljmp
sub
mov
mov
pop
jno
pop
popa
and
add
sub
jae
inc
xor
xchg
out
or
xor
dec
dec
je
push
loopne
cltd
mov
pushf
lods
out
inc
stos
push
or
shll
in
push
fwait
sub
or
inc
push
mov
xchg
xchg
xchg
mov
ljmp
aas
imul
out
into
pop
pop
pushf
mov
test
push
lea
inc
sub
out
pop
mov
fistpl
daa
cltd
mov
push
out
popa
mov
and
out
in
loopne
jne
and
jmp
test
fnstenv
xchg
je
mov
push
popf
das
mov
inc
xchg
testb
iret
fidivl
scas
sbb
sub
daa
movsb
arpl
adcb
or
movsb
mov
repz
ds
dec
add
adc
xchg
or
lret
push
adc
leave
adc
sbb
mov
add
pop
fisubrs
loope
xchg
out
jne
add
aad
jmp
cli
mov
cmc
not
bound
jle
mov
leave
dec
pop
aam
into
imull
push
sub
idivl
sub
lcall
fwait
icebp
icebp
dec
or
dec
sub
rorl
icebp
scas
push
arpl
xor
sub
in
outsb
cmp
add
add
leave
jo
jl
jl
and
mov
js
xchg
sub
xchg
std
jge
mov
xchg
cmp
jo
out
push
fcmovb
sbb
mov
ret
fistpl
push
std
lea
pop
dec
into
jge
pop
dec
mov
inc
jnp
and
mov
sub
cmp
mov
jle
lods
mov
sub
les
out
in
jmp
inc
push
icebp
dec
push
add
jmp
loopne
out
repnz
and
pusha
pusha
cmp
sbb
shl
fsub
sub
dec
or
push
sbb
mov
fstpl
inc
ss
adc
pop
dec
sub
and
pop
cltd
pushf
xorb
sbb
imul
lods
cmp
fs
push
add
fwait
mov
leave
inc
cmpsb
mov
and
pop
inc
shlb
scas
xchg
sbb
lock
clc
cli
cwtl
mov
enter
jo
dec
testl
ds
jmp
lret
inc
adcb
add
imul
lea
dec
dec
adc
mov
xor
in
add
in
rsqrtps
push
cld
vunpckhpd
xchg
test
inc
cmp
and
xor
push
mov
clc
out
mov
mov
push
mov
sub
outsl
psubusb
mov
jl
adc
sub
pop
xchg
test
cmp
inc
and
lcall
subl
data16
push
in
xor
out
pop
out
repz
inc
or
jne
sbb
pop
push
movl
lsl
in
outsl
pop
fwait
jge
je
cmp
mov
lret
ja
cli
popf
fnstcw
mov
fldenvs
xchg
popa
stos
cmp
inc
dec
movsl
cmp
dec
lret
sahf
lds
mov
push
and
repnz
shr
or
mov
ljmp
and
jne
xor
lcall
daa
add
add
loop
pop
lods
push
lcall
movsb
into
int
cltd
sub
xchg
lret
std
jle
or
push
add
cmp
mov
fwait
loope
dec
mov
rcrb
in
mov
dec
jge
sbb
ja
mov
xchg
daa
pop
ljmp
jmp
cltd
lret
jo
jbe
pop
clc
ss
daa
push
mov
lahf
cwtl
dec
mov
loop
insb
dec
daa
sbb
mov
dec
popa
or
pop
out
rol
cmp
dec
jb
jo
adc
dec
aas
cmc
data16
inc
andb
pop
outsb
lods
mov
mov
movl
mov
jp
imul
arpl
out
xchg
lret
int3
fs
scas
or
mov
pop
mov
inc
mov
mov
je
call
pop
xchg
out
repz
subl
mov
shll
mov
or
lcall
mov
jecxz
out
js
cmp
xchg
stos
adc
cld
arpl
aad
call
jns
inc
dec
notb
outsb
out
push
cmp
xor
mov
jnp
cmp
pop
shlb
fwait
loop
adc
ja
sub
in
das
jbe
aas
xor
iret
loope
out
jne
lea
xor
sub
jno
pop
xchg
jae
push
dec
pusha
icebp
out
imulb
adc
out
add
idivl
pop
adc
dec
push
stos
xor
push
add
rol
push
push
pop
or
jecxz
mov
pop
xchg
pop
mov
out
scas
outsb
xchg
mov
add
push
je
mov
in
cld
jmp
and
push
push
pop
ret
push
adc
test
repz
push
int
fcmovne
mov
pop
lret
mov
xchg
test
xor
stos
lcall
jae
xchg
pop
add
pop
inc
dec
xor
cmp
xchg
dec
pop
gs
xchg
cmp
xchg
and
jg
mov
or
mov
loope
pop
add
push
adc
daa
movsl
sahf
enter
fistl
sub
jle
in
ret
adc
sbb
push
cmp
cs
loopne
add
in
scas
push
in
fbstp
dec
jo
es
inc
xchg
in
sti
in
sbb
mov
xchg
clc
jmp
subb
mov
add
and
js
je
or
push
leave
or
cltd
jge
jle
xor
dec
adc
cmpsl
adc
push
push
mov
in
push
ss
cmc
enter
pop
mov
mov
lret
sbb
push
dec
hlt
out
mov
mov
pusha
in
mov
ljmp
cmp
mov
add
jmp
push
sar
push
lret
mov
jbe
xchg
ret
jae
shlb
xor
mov
xlat
out
push
mov
icebp
mov
or
cmpsb
cli
inc
leave
std
aad
fldcw
xchg
mov
push
jmp
clc
adcl
pop
dec
daa
enter
inc
mov
jmp
jg
psubw
or
fidivs
in
outsl
push
cwtl
mov
mov
mov
push
jmp
lods
mov
sbb
cwtl
mov
test
lret
daa
mov
push
in
jle
push
test
dec
hlt
adc
sti
aad
andl
jge
popa
adc
pop
lods
dec
es
jnp
test
pushf
push
jae
add
jbe
push
daa
mov
mov
cltd
adc
xchg
or
bound
es
sahf
cli
out
push
and
mov
push
daa
std
mov
mov
rcrl
jnp
sbb
cmp
in
and
arpl
pop
or
mov
out
inc
mov
pop
pop
cmp
sub
sarl
cmpsl
push
scas
push
fs
lock
or
mov
mov
mov
xchg
nop
mov
mov
and
flds
jne
ljmp
sub
pushf
in
sbb
add
popa
xchg
push
std
mov
push
lea
mov
jbe
ss
or
or
sarb
loopne
insb
outsl
lahf
nop
test
xor
jg
mov
dec
inc
mov
iret
ret
movsb
xchg
push
loopne
sbbl
cmp
sbb
cmp
mov
iret
insl
xor
pop
jnp
cld
sub
push
js
pop
lods
push
dec
lret
dec
pop
pop
std
ret
in
pop
hlt
insl
pop
shlb
or
jmp
and
out
arpl
adc
sub
popf
inc
dec
add
shll
sahf
sbb
dec
cmp
popf
insl
in
lcall
sbbb
arpl
les
or
cmpsl
add
add
call
pop
scas
xchg
movsb
sbb
ret
xlat
mov
aad
les
data16
inc
into
pop
in
imul
jl
out
test
shrl
xchg
or
mov
gs
stc
sbb
dec
gs
or
mov
or
movsb
cmp
mov
jno
mov
and
xchg
mov
in
fcmovnbe
rolb
add
pop
dec
push
and
leave
jl
xor
ljmp
test
and
pop
cs
test
push
mov
push
insb
neg
fwait
and
movsb
mov
sub
cwtl
test
sub
insb
push
push
cmpsl
test
mov
sub
xor
and
lahf
xchg
xlat
add
adc
es
data16
movsb
push
mov
sub
and
sahf
js
lcall
pop
jnp
fistpl
movsl
stc
ret
jle
mov
jb
fsubs
adc
in
xor
stos
fwait
push
xchg
popa
fcmovne
push
outsl
adc
adc
andl
fldenv
out
mov
mov
xchg
ss
pop
das
adc
dec
out
mov
mov
xchg
iret
and
in
jnp
scas
jl
out
push
sub
stc
or
sahf
lock
lock
mov
inc
jle
aaa
cmp
sub
test
fadds
test
mov
adc
lret
cwtl
cmp
cmpl
pop
aam
out
mov
xchg
mov
push
popf
pop
mov
xchg
repnz
imul
push
mov
icebp
aad
enter
fistpl
jbe
lahf
scas
adc
push
test
jp
ljmp
dec
adc
inc
jb
popa
setne
jmp
mov
das
pop
cltd
sub
lcall
addr16
lret
idivl
push
push
xor
and
ret
add
jno
xor
cs
rcl
mov
and
fdivr
clc
addr16
fs
push
inc
shlb
ljmp
xor
inc
scas
cld
test
scas
pop
push
push
add
xchg
dec
mov
cmp
cmc
sbb
dec
adc
scas
cwtl
pop
mov
mov
test
cld
scas
and
pop
adc
push
inc
push
stos
or
jb
push
xchg
pop
mov
ret
inc
xor
dec
fsqrt
nop
pushf
mov
stos
addw
inc
xor
ljmp
add
jecxz
or
mov
aad
xor
daa
xchg
iret
mov
scas
push
or
shrl
adc
pop
add
out
jl
xchg
jmp
push
pop
popf
add
adc
pusha
push
repnz
mov
jae
lcall
mov
jne
inc
sbb
cmc
mov
ret
dec
sbb
mov
and
stos
pop
subl
addr16
lock
cld
sbb
push
xchg
xor
testb
out
std
jo
out
push
dec
sbb
ret
mov
pusha
sub
addr16
xchg
xchg
sub
xchg
pop
adc
daa
cmp
xor
fs
int3
cmp
test
push
insl
repnz
mov
popa
inc
xor
stos
ret
cmp
std
nop
mov
adc
mov
sub
cli
ficomps
in
in
pusha
sbb
pop
sbb
es
lods
nop
cmpl
sar
push
mov
sahf
jp
dec
outsl
icebp
and
das
mov
cmpsb
inc
push
sti
fcomip
aaa
sbb
fidivl
cli
jmp
sbb
jp
ret
fisubrl
and
xchg
filds
rorb
inc
mov
cmpsb
adc
pop
inc
cmp
pop
test
inc
aaa
xchg
mov
lods
out
dec
xor
and
int
pop
scas
cwtl
dec
or
movsl
inc
fwait
aam
testl
sbb
inc
push
xchg
jne
in
xchg
das
int
sub
xchg
into
popa
sti
in
mov
pop
lods
inc
dec
jo
insl
cmc
popa
jmp
les
push
dec
jae
cmp
or
arpl
lods
sarb
mov
sub
sbb
test
jb
adcb
outsl
int
mov
inc
rol
inc
scas
mov
lock
dec
int
add
jecxz
mov
sub
sub
sbb
popa
inc
cli
insb
lcall
mov
ss
int3
adc
xor
out
xchg
nop
adc
mov
xchg
sbb
aaa
icebp
xchg
mov
sub
xchg
mov
jb
adc
leave
cld
or
call
xchg
scas
arpl
push
push
aaa
pop
in
and
ret
mov
stos
dec
lods
xchg
mov
pop
insl
sub
lods
add
mov
outsl
daa
mov
inc
fistpll
test
dec
into
and
je
mov
push
idiv
bound
test
mov
push
jecxz
jnp
cmp
and
or
shll
mov
bnd
sbb
add
fdivl
lock
lcall
ds
xor
xchg
cltd
xchg
mov
cmp
adc
jno
xorb
push
fs
push
cmp
test
std
loope
cmp
mov
mov
js
fs
push
sbb
movsl
fs
sbb
mov
ret
fs
ficomps
push
pop
iret
mov
into
out
cmpl
lret
cmp
out
mov
popf
sbb
lcall
shl
push
sarb
add
jecxz
jnp
aad
in
cmp
mov
jb
inc
in
pop
jne
mov
xor
outsb
loope
mov
lods
push
sub
sub
pop
rcrl
jns
push
add
out
pop
in
mov
pop
pop
aam
cld
push
shrl
push
addr16
lcall
enter
dec
orl
jno
out
jae
lcall
cli
nop
fimull
loopne
mov
movsl
sbb
inc
insb
and
jne
loop
nop
lock
adc
sti
outsb
aaa
pushf
or
repz
int3
aas
gs
mov
xchg
std
or
add
pushw
mov
xchg
movsb
adc
pop
fldcw
inc
jbe
and
pop
repz
notb
enter
jb
popw
es
adc
pop
mov
adc
test
dec
sub
bound
loopne
adc
mov
cld
xor
mov
ds
loop
add
xchg
test
ret
cmpsl
aaa
fisubrl
lea
pop
outsb
mov
cmpsl
ja
inc
xor
std
and
int
push
cmc
pusha
cmc
fistps
mov
fsubrp
adc
negb
idivb
inc
cmpsl
adc
mov
xadd
mov
and
dec
or
adc
fiadds
jecxz
stos
lock
arpl
and
dec
and
rcll
lds
ret
fcompl
test
mov
nop
insb
inc
loop
adc
icebp
call
mov
ds
adc
and
sti
ljmp
cs
int3
shl
movsb
dec
aad
stos
adc
in
ja
push
jno
decb
das
cmp
sbb
les
dec
imul
or
and
stos
es
nop
movsb
gs
jo
dec
movsl
jns
aas
or
cmp
adc
in
and
sbb
mov
adc
adc
out
rclb
test
fbstp
push
mov
cmp
mov
pop
cmpl
repz
inc
enter
push
and
stos
xor
ret
jns
inc
adc
repz
xchg
enter
add
mov
xchg
adc
inc
xchg
adc
lods
cmc
push
xor
fbstp
xor
sbb
inc
popa
cmp
mov
insl
mov
inc
insb
ficomps
out
inc
dec
aam
leave
pop
or
xchg
cmpsb
test
pop
cmp
pop
push
das
xor
je
leave
subl
mulb
jg
aaa
inc
insl
mov
mov
jl
in
mov
mov
icebp
sbb
sub
add
or
xchg
sahf
dec
cld
pop
dec
shll
jns
dec
push
cli
mov
jle
jmp
mov
repnz
in
movhps
mov
cmp
fs
jle
mov
imul
mov
xor
push
pusha
clc
push
cmpsl
mov
add
sahf
xchg
dec
std
adc
enter
pop
xor
fidivl
push
ret
and
test
std
xor
les
icebp
icebp
cwtl
mov
notl
out
loopne
mov
push
cmp
xlat
mov
jb
outsl
inc
fstpl
jne
inc
ja
xchg
clc
outsb
mov
rorl
add
leave
loopne
ficoms
clc
test
aas
int
sbb
ss
ret
push
mov
rcrb
mov
fs
scas
lcall
lret
fistpl
cmp
sahf
sub
cmp
sbb
fistpll
jo
icebp
inc
hlt
fsubl
or
inc
push
adc
repz
mov
lods
dec
les
testl
mov
mov
cmpb
pop
cs
push
xor
pop
cmpsl
xchg
dec
push
test
jp
mov
fcoms
mov
inc
mov
push
and
imul
lds
sbb
xchg
ret
imul
repnz
mov
push
out
mov
push
fisubl
push
xor
inc
inc
scas
jne
lods
push
repnz
push
mov
xchg
sub
push
mov
mov
push
mov
cltd
push
cld
xchg
jno
das
jmp
rolb
jmp
pushf
push
std
pusha
out
mov
inc
cld
xor
mov
jo
xchg
insl
mov
dec
inc
aas
xlat
mov
addl
xor
adc
imul
stos
mov
movsl
push
mov
cmp
lds
stos
hlt
push
add
stos
fs
add
push
push
outsb
dec
andb
fldenv
in
mov
and
jl
mov
out
dec
push
adc
lds
frstpm(287
pusha
adc
ljmp
pop
lcall
sbb
rcll
mov
push
in
je
fbstp
push
mov
gs
xor
loop
out
scas
dec
xor
adc
data16
stos
daa
in
inc
pop
xchg
jmp
fs
add
in
mov
or
call
clc
xchg
push
loop
mov
or
sbb
sbb
jecxz
fwait
in
and
add
sub
popf
mov
outsl
cmpsl
dec
pop
repnz
stos
mov
cltd
movsl
stc
pop
in
cmp
adcb
dec
lea
push
gs
in
adc
sub
push
push
ds
mov
jns
jmp
nop
mov
movsl
jp
ret
lret
cli
insl
inc
cmp
lods
xchg
jne
in
hlt
cmp
or
sub
mov
repz
adc
out
aas
stos
std
fsubrp
pop
popf
not
jne
les
dec
fs
add
dec
stos
sbb
xor
outsl
repz
pmaxsw
add
push
ds
adc
subb
les
out
pop
ret
clc
mov
push
call
ret
int3
test
cmpsl
popf
add
cmp
mov
push
jl,pt
into
aad
dec
push
cmp
loopne
movsb
mull
mov
xchg
jecxz
cli
imul
fwait
mov
xor
gs
sbb
jg
stos
fadds
and
add
negl
sti
push
sbb
pop
xchg
sbb
ficompl
sbb
cltd
insb
xor
mov
add
inc
iret
xchg
nop
xchg
push
adc
shrl
sbb
scas
cltd
xchg
mov
jp
iret
fstl
push
sbb
mov
xchg
mov
lahf
insb
int3
cmp
mov
outsb
mov
ss
pop
cmp
pop
lret
cmp
cli
and
dec
stc
cmp
aam
in
pop
das
push
lret
lea
in
hlt
sub
lods
and
and
decl
imul
mov
xor
push
sub
andb
iret
or
push
xor
rorb
xchg
mov
loope
pop
test
movl
fisttps
cmc
mov
mov
dec
js
mov
mov
test
hlt
inc
fcmove
out
inc
inc
pop
lods
std
pop
aas
bswap
loop
fbstp
je
jae
jl
fwait
dec
insb
cmp
adc
aaa
cli
cwtl
testl
and
data16
xchg
out
cmp
xor
outsb
aaa
push
jns
jbe
movsb
popf
out
in
or
mov
ds
lock
xor
stos
js
ret
xchg
in
xchg
insl
mov
mov
push
lods
test
test
xchg
fstpl
jl
sub
push
fildl
lret
pop
shll
and
loopne
dec
push
inc
fmul
fiadds
xchg
xchg
add
mov
ret
dec
mov
test
and
fsub
loopne
push
cmp
iret
arpl
mov
cmpsl
jmp
js
add
fimull
popf
pusha
jl
push
and
or
and
or
jecxz
cmp
or
mov
and
insl
js
stos
xchg
jp
divl
xor
pop
inc
leave
sbbl
pop
mov
out
cmpsl
push
lret
adc
xchg
inc
sbb
pushf
shrl
or
mov
xchg
xor
mov
fmull
add
mov
push
jmp
das
in
cmp
out
sbb
test
dec
imul
adc
jns
pop
stos
or
push
cmp
imul
push
inc
shrl
jmp
sbb
add
sbb
sbb
jno
popf
sbb
movl
mov
lret
out
cwtl
jmp
jne
lock
clc
fistpl
jne
pushaw
andl
lea
pop
or
inc
xlat
dec
xor
cli
mov
insb
ja
out
ja
xorb
fstl
les
test
std
sbb
push
and
sbb
jecxz
mov
cmpsb
sub
sub
pop
shrl
mov
arpl
nop
shll
push
jb
js
loop
pop
or
mov
push
lods
mov
xchg
cmp
out
insl
push
cmp
inc
push
in
mov
xchg
add
enter
or
es
aas
test
jmp
into
lret
push
jecxz
pushf
cwtl
xor
stos
push
ret
out
inc
cs
shrl
jp
daa
ret
sbb
and
addb
and
and
stc
jle
sbb
fnstcw
ljmp
in
add
or
dec
les
jecxz
loopne
je
les
lahf
xchg
orb
mov
lea
sbb
lret
pop
cmpsl
fsubs
movl
mov
pop
dec
test
cmp
insl
mov
ficoml
pop
or
inc
adc
cmp
scas
or
mov
xlat
xor
aam
fwait
dec
inc
pop
or
testl
dec
aas
pop
push
push
and
scas
xor
les
mov
divb
push
lret
jne
push
or
ljmp
push
push
orb
inc
push
adc
jp
in
aad
mov
jnp
pop
js
inc
insl
fldt
push
dec
push
and
push
xor
ljmp
je
aaa
cmp
xchg
mov
mov
data16
out
add
bound
arpl
adc
cmpb
sbb
inc
fidivrs
sbb
and
dec
nop
push
jae
xchg
sub
movsl
into
addr16
lret
xchg
addb
sahf
into
loope
jge
icebp
mov
adc
sbb
xlat
ljmp
pop
push
lds
je
adc
xchg
mov
or
call
or
adc
in
je
scas
sub
lods
cs
adc
out
adc
mov
mov
scas
mov
xor
testl
mov
repz
aad
seto
pop
mov
fiadds
push
ds
adc
adc
cmp
pop
leave
cmpsl
xchg
lock
stos
out
xor
and
mov
mov
aad
pushf
jo
adc
repz
fcmovnb
push
cld
and
cwtl
es
fs
call
es
int3
fcomi
mov
lcall
pop
bound
xchg
shl
pushf
mov
fcomps
sarl
dec
jmp
adc
cli
fdiv
loope
adc
lret
add
or
jmp
xor
mov
pop
data16
call
inc
outsl
jmp
mov
push
icebp
cmpsl
in
sbb
mov
dec
ret
idivb
push
xorb
push
jno
or
jns
sbb
jmp
xlat
pushf
push
mov
std
hlt
add
es
shrl
jmp
or
dec
insb
push
fcomps
xor
mov
or
or
cmpsl
out
lock
lret
outsb
ret
in
mov
daa
lods
mov
pushfw
cmpl
jp
out
insb
movsb
jl
insl
xchg
stc
pop
call
fcoml
or
pop
in
sbb
mov
mov
in
lods
dec
pop
mov
inc
adc
enter
cmp
dec
mov
add
ljmp
inc
jl
mov
xchg
mov
push
lds
jno
test
xchg
inc
jns
daa
das
lods
xchg
jecxz
xor
cmp
mov
scas
xchg
rcrl
dec
lea
mov
out
shll
add
cld
cmp
and
adc
fidivs
fsub
jae
imul
into
dec
mov
mov
mov
enter
xchg
inc
aam
add
inc
xchg
cli
pop
mov
lods
mov
add
imul
sub
jl
lock
movsb
int3
lods
and
aam
add
push
ja
sub
ret
sbb
jne
testl
xchg
mov
sarb
lds
mov
cmp
adc
imul
inc
pop
cmpsl
fwait
das
pusha
push
mov
and
and
push
fisubrl
inc
and
stos
sub
push
repnz
js
push
test
das
and
or
fs
nop
jns
rolb
sub
test
xor
ret
xlat
notb
pop
das
sub
push
cltd
push
fcmovbe
jne
nop
nop
leave
push
fcmovnu
xchg
jb
daa
aas
int3
dec
xchg
push
inc
and
inc
xchg
pop
ljmp
or
lea
and
jbe
cwtl
fadds
ret
mov
rolb
jns
pop
xlat
daa
je
jmp
and
cmp
std
ja
add
loop
lock
jnp
mov
ret
mov
sub
cmp
into
add
mov
mov
mov
stc
inc
push
pop
in
cmpsb
push
pushf
insb
or
out
pmulhuw
adc
jns
jbe
hlt
push
mov
sub
cmpsl
jge
inc
xorb
adc
inc
test
cmp
cltd
outsb
and
call
adc
sbb
or
jg
daa
test
or
jne
aaa
adc
push
imul
das
ret
subb
push
movsl
xchg
push
cld
jne
js
daa
dec
cld
ficoms
sbbb
je
test
sub
outsl
push
sti
outsl
fildl
push
f2xm1
lahf
inc
and
and
ljmp
pop
or
cmc
dec
mov
aam
lahf
adc
insb
or
clc
push
nop
shrb
out
jbe
xor
push
in
inc
out
test
inc
out
imul
out
int
or
mov
enter
outsl
out
imul
jge
jno
cs
shr
mov
mov
test
js
sahf
pop
push
dec
fcmovbe
ret
rcrb
or
pop
cwtl
in
scas
inc
addr16
pop
enter
pop
inc
adc
pop
sbb
mov
int
cmc
dec
notb
pop
movhps
pop
pop
sub
mov
xor
xchg
xchg
push
loopne
pushf
shrb
rolb
repz
inc
inc
mov
dec
mov
adcb
add
or
xor
adc
xor
std
enter
movsl
mov
js
mov
inc
cmp
cmp
cld
dec
vrsqrtss
and
xor
push
sbb
clc
cmp
cmp
stos
call
popl
and
fst
and
call
scas
mov
inc
sbb
inc
dec
fldenv
ficompl
pop
jecxz
stc
aad
xor
inc
cmpsb
stos
mov
inc
test
pusha
repnz
or
push
ss
aad
or
sbb
adc
mov
daa
in
inc
cmpl
lds
mov
adc
insl
subl
incb
es
cmp
fcmovu
scas
sbb
repz
jbe
push
cli
aaa
cld
mov
xchg
push
mov
rorl
sub
sahf
mov
and
rclb
sub
cmpsb
test
popf
inc
mov
push
inc
push
movsb
rcrl
jp
push
adc
lea
mov
mov
sbb
cmpsb
shrb
inc
pop
or
fucomp
pop
cmpsb
test
jle
icebp
push
jmp
xchg
add
jecxz
lahf
cld
sub
inc
ss
fidivs
fs
add
scas
aam
push
jns
imul
scas
into
aam
xorb
add
out
push
add
cmpsl
mov
mov
mov
add
xlat
into
xchg
int
ds
dec
bound
and
fildl
jle
aaa
loopne
jb
in
and
das
test
xchg
rclb
cwtl
out
mov
imull
pop
push
arpl
vpaddb
aas
fs
mov
or
jbe
push
xchg
scas
mov
cld
sub
loop
mov
andb
dec
lret
loope
mov
jecxz
out
hlt
and
or
cwtl
adc
mov
inc
ret
adc
shll
dec
inc
out
mov
pop
cs
idivl
mov
test
ss
or
stos
test
repz
push
pop
dec
xorl
insb
fdivrl
sarl
mov
divb
fdivrp
das
into
mov
ljmp
das
lods
or
mov
test
inc
in
cs
sub
jl
mov
sti
shll
push
sbb
dec
test
push
dec
les
call
adc
or
mov
ss
sbb
and
arpl
outsl
dec
arpl
notl
dec
outsl
es
mov
sbb
cwtl
in
fcomip
xchg
push
imul
adc
mov
cld
pop
mov
dec
nop
popf
mov
mov
add
mov
dec
and
xor
lods
sbb
pop
fmull
or
fdivs
cmpsb
inc
mov
shlb
push
and
inc
jge
popf
aam
inc
lods
aam
push
dec
xor
cmp
or
dec
sbb
nop
aad
aad
sarl
adc
inc
push
add
sbb
lods
jne
inc
clc
jns
cmp
popf
adc
cwtl
cld
test
adc
outsl
jne
xchg
aaa
bound
aaa
xchg
or
dec
pop
insb
sbb
lret
mov
push
or
ret
or
push
sbb
cltd
jp
in
js
sub
shl
xchg
testb
mov
sub
inc
jge
xor
movsl
dec
lock
adc
ret
scas
xor
xorl
mov
add
xor
pop
and
sub
mov
ds
cwtl
cmc
jb
xchg
dec
jb
sti
sbb
push
dec
ficomps
push
add
leave
idiv
movsb
sbb
add
pop
repnz
sbb
cmpsl
aaa
pop
sub
addr16
je
pop
int
pop
push
mov
mov
popf
sbb
mov
leave
sarl
push
xchg
addr16
sub
mov
push
fstl
les
in
or
stos
mov
mov
jnp
mov
push
mov
in
push
outsb
xor
jae
sahf
jne
sub
adcl
out
lcall
das
xor
idivb
push
or
adc
add
push
and
mov
rcr
ret
ljmp
push
scas
or
std
popa
int3
push
push
push
mov
push
xor
fmul
xchg
shrl
scas
mov
repz
xor
fcoml
imul
daa
fwait
xchg
imul
inc
mov
inc
and
jecxz
into
repnz
sub
jb
stos
pop
xor
pop
out
inc
jae
scas
cwtl
or
repz
das
cmp
stos
cmp
or
ret
fwait
xchg
shll
fmull
add
jge
add
hlt
dec
js
mov
sti
out
inc
cmc
mov
leave
cmp
out
and
pop
xor
andb
add
push
push
loopne
mov
push
pop
enter
mov
lds
xchg
mov
lds
inc
lret
andl
mov
loop
iret
enter
repnz
sti
ja
in
jno
adc
mov
cltd
scas
adc
fs
data16
out
pop
rorl
shl
out
jns
add
cs
adc
xor
cmc
add
mov
aam
inc
rcl
aad
stc
rcrl
lcall
stc
out
xchg
daa
and
hlt
test
or
popa
lock
test
fsubp
dec
cmp
inc
xor
gs
push
incl
add
mov
or
mov
ss
sbb
or
sti
xchg
mov
adc
mov
and
push
out
jge
cs
js
mov
packuswb
fcompl
cmp
lcall
imul
xlat
test
imul
jl
dec
daa
dec
idivl
add
jp
in
shll
jne
mov
push
ds
lcall
xor
scas
incb
or
dec
insb
loope
or
and
cli
mov
repz
sbb
mul
in
pop
mov
movsl
push
or
inc
mov
rorb
xor
cmp
loopne
jl
sbb
sar
cmp
repnz
fmull
loop
inc
sti
repnz
pop
cmp
data16
push
dec
pop
scas
leave
arpl
jp
lret
sub
bound
mov
fistpl
cmp
loopne
jge
out
dec
xor
inc
mov
jae
add
sub
imul
clc
enter
aam
bound
mov
sub
cmp
sbb
cmp
mov
lcall
pop
outsb
das
xor
into
xchg
dec
mov
cmpb
add
and
outsb
lock
pop
std
int3
sbb
test
aad
lcall
jo
lods
movsb
sub
into
push
aaa
pop
sub
push
xlat
scas
push
jecxz
bound
push
xchg
cmp
lods
fmulp
xor
shll
jle
ds
and
cwtl
push
mov
fsts
fsts
jbe
and
ret
mov
mov
pop
out
cld
sub
ret
int
lret
cmc
unpcklps
pop
cmp
mov
sub
xor
mov
mov
lods
sub
push
mov
test
push
loop
lret
lods
mov
pop
fsubrl
loope
movsl
dec
popf
data16
enter
mov
lock
sbb
rcl
mov
inc
int3
mov
jb
frstor
push
lahf
cld
inc
mov
out
and
cmp
or
js
or
rcl
addr16
pop
jle
dec
adc
add
repnz
clc
inc
cmp
repnz
dec
movnti
sub
jo
std
dec
xor
andb
mov
add
cs
enter
adc
ret
arpl
jae
insb
test
sbb
mov
mov
xchg
js
shrl
out
mov
mov
lds
jp
xchg
pop
ljmp
lods
jl
in
inc
lea
sub
sar
or
lds
movsb
or
insl
inc
mov
dec
mov
pop
mov
and
dec
xor
jnp
mov
imul
hlt
popa
and
jns
data16
jmp
test
outsl
mov
out
jge
dec
push
ljmp
sub
xor
push
mov
inc
add
and
addl
sub
cmp
dec
add
push
mov
push
xor
or
cmp
cmp
pop
iret
inc
mov
dec
mov
call
adc
jg
mov
mov
lret
and
or
and
in
cli
sbb
sti
pop
frstor
mov
cld
mov
xchg
notl
scas
movsl
shl
out
arpl
inc
sti
out
dec
xchg
jb
pop
inc
jl
add
fildl
in
pop
fnstsw
nop
add
int3
aas
adc
mov
pop
cmp
xchg
mov
scas
cmpsb
pop
jge
jmp
or
test
fbstp
ret
iret
mov
sub
bound
fcmovbe
out
lods
xor
dec
rcrl
or
jo
jo
xchg
pop
insb
repnz
pop
mov
insl
cmp
out
jo
xor
fnstsw
mov
jp
je
sub
and
pop
outsl
daa
scas
fnstenv
and
cwtl
pop
or
inc
sbb
xchg
sub
sub
stos
sbb
xor
or
je
shrb
mov
fists
gs
xchg
decb
jbe
dec
cs
cmp
push
sbb
and
mov
xchg
mov
pop
push
xchg
dec
push
push
movb
cli
bound
pop
sub
cmp
cmp
cmp
aad
not
jecxz
inc
jge
inc
sarb
jne
ss
sbb
out
and
sub
push
ds
mov
inc
ja
lods
or
mov
addl
inc
dec
negb
push
sub
in
sbb
inc
repz
dec
cmc
mov
xchg
and
lods
jo
mov
insb
mov
decb
pop
out
das
fisttpll
xor
pop
xchg
or
xorb
shl
mov
rcrl
sub
stos
cs
pop
imul
mov
ja
addr16
mov
lods
in
xchg
or
adc
pusha
add
add
mov
in
push
mov
push
push
xor
das
xlat
mov
movsl
xor
faddl
nop
inc
xchg
test
cmpsl
pop
sub
cld
shlb
inc
repz
mov
imul
out
shll
xor
sub
dec
lock
pushf
cltd
lahf
mov
shl
and
jle
pop
add
fnstenv
sub
insb
callw
xchg
iret
fidivs
xor
push
add
inc
and
or
int
jmp
in
dec
jne
mov
aas
imul
adc
and
xchg
test
lret
dec
mov
popf
enter
icebp
lods
jecxz
xchg
cli
adc
fst
dec
pusha
pop
push
pop
out
fsts
push
imul
inc
push
fadd
inc
dec
call
sbb
sbb
dec
pop
in
fwait
ficoml
push
xchg
dec
jg
in
sbb
hlt
jns
xor
pushf
or
push
inc
and
mov
stc
xchg
shrl
inc
mov
pop
or
mov
cmp
aas
lret
ret
lahf
xchg
fnsave
inc
pop
push
aaa
mov
add
jno
iret
cmp
push
sub
add
clc
cmc
fbld
je
divb
out
adc
jne
leave
addr16
dec
int3
repnz
enter
lea
shll
mov
lcall
sbbl
push
loopne
outsb
xchg
jnp
pop
sub
xchg
ret
aaa
xor
bound
in
ljmp
shl
pushf
adc
jbe
pushf
mov
out
jl
xchg
adc
adc
mov
sahf
mov
movsl
mov
mov
mov
dec
dec
dec
dec
int
lods
aad
dec
loope
call
outsb
repnz
push
dec
sub
dec
ss
sbb
mov
add
test
add
xchg
inc
lcall
cld
mov
std
in
insl
mov
gs
orl
push
mov
ret
pop
xchg
test
jae
fstl
cli
dec
xorl
cmp
or
sarl
pop
xor
clc
cmpsb
xor
addr16
in
add
or
adc
push
xchg
xchg
arpl
xchg
cmp
jne
leave
cmp
pop
lret
xchg
xor
jg
pushf
shrl
out
mov
cmp
pop
lea
push
pop
fcoml
rcr
repz
mov
cltd
stos
push
int3
hlt
stos
dec
fsubrl
cli
sbb
sahf
arpl
loop
orl
or
push
pop
jl
fcmovne
dec
cwtl
push
dec
lods
fwait
mov
cli
les
iret
push
xchg
hlt
fcmovnbe
mov
xchg
xchg
out
test
cli
jns
xchg
mov
xchg
push
movsl
inc
enter
insl
pop
mov
push
mov
ret
movsb
lcall
mov
daa
push
ret
sti
jmp
shll
add
pop
dec
or
jne
mov
daa
in
bound
fcomip
pop
wbinvd
fs
pusha
mov
shll
cld
jmp
push
inc
mov
inc
mov
mov
lods
enter
sbb
cmp
dec
or
sahf
cltd
mov
and
adc
xchg
jle
fiaddl
fs
leave
adc
and
and
push
lcall
lds
aad
and
pop
mov
add
and
mov
sub
jo
insl
and
pinsrw
mov
mov
test
call
lock
sub
sarl
add
pusha
dec
sub
jns
das
mov
fcmovu
xor
jge
out
ss
cs
mull
lds
mov
test
cli
add
xor
loopne
mov
shrb
lahf
lahf
shrb
pop
inc
adc
sub
fs
jne
mov
push
mov
in
push
dec
mov
js
xchg
adc
dec
cmp
addr16
mov
lret
dec
nop
pushf
inc
call
movsl
cltd
mov
mov
ret
sub
popf
jg
mov
jns
jecxz
or
cmovle
or
jle
push
cmp
mov
fcomps
inc
xchg
xchg
xchg
mov
jecxz
movsl
mov
cli
mov
jmp
fwait
call
lea
rcll
xchg
push
stc
or
pop
xor
inc
pop
fcomp
into
jo
pop
int3
cs
jo,pn
push
push
jbe
gs
jg
outsl
lahf
xor
pop
es
add
test
push
push
mov
mov
repnz
daa
lret
dec
mov
loop
mov
lock
cmp
int3
inc
xor
ss
pop
adc
mov
ficoms
popa
loopne
jge,pn
pop
sbb
js
sti
mov
out
daa
enter
call
inc
or
sti
int3
loopne
sbb
jp
pop
or
jno
pusha
and
popa
pop
dec
arpl
mov
sti
ficoml
rcrb
loop
or
aaa
in
movsl
insl
jbe
cmp
iret
mov
insb
jns
pop
rolb
stos
xchg
leavew
sub
add
dec
addr16
cmp
sbb
aaa
xchg
cwtl
xor
push
add
lods
dec
pop
jmp
jae
shll
fdiv
pop
add
test
ret
or
ja
lcall
add
pop
dec
push
scas
iret
adc
cmp
dec
pop
mov
or
les
xchg
cwtl
negb
push
imul
ss
clc
repnz
ret
loope
cmpl
stos
xor
les
jle
das
sbb
call
test
mov
les
aad
enter
mov
pop
or
mov
push
cld
out
sub
sub
int
cmp
mov
adc
mov
mov
jnp
push
jno
and
inc
xchg
jmp
pop
andb
shrl
or
push
std
int
mov
sbb
xorb
pop
divb
xor
jle
mov
dec
mov
sbb
pop
push
inc
push
lds
mov
aas
aam
cmpl
or
test
inc
dec
mov
jo
or
jl
sub
mov
movsl
jb
popf
jo
pop
outsb
adc
hlt
fwait
enter
mov
lods
out
inc
cs
xchg
ljmp
adc
lret
aad
cltd
xchg
sbb
dec
cmc
enter
inc
mov
jns
pop
cwtl
push
das
popa
fsubrl
mov
and
push
dec
int3
push
jbe
icebp
and
fidivl
jnp
pop
or
adc
mov
xchg
add
cmp
adc
cli
xchg
xor
jno
mov
enter
repz
or
and
arpl
xchg
callw
repnz
push
sub
insl
cli
lahf
pop
pop
scas
fildll
repnz
cmp
into
cmpsl
sbb
loop
movntq
lret
repnz
cld
lret
aam
push
test
xor
mov
dec
jecxz
pushl
jmp
sbb
out
sarl
shlb
cmc
push
mov
int
dec
jg
repnz
addr16
xorb
jmp
out
add
lcall
in
test
ds
dec
jb
orb
mov
sbbl
getsec
mov
outsl
in
ret
inc
pusha
mov
cmc
inc
mov
mov
cwtl
leave
add
xchg
mov
in
add
sahf
jge
inc
neg
sbb
test
lret
cmp
cmp
cs
pop
mov
ret
popf
xchg
adc
adc
push
xchg
dec
push
inc
push
pop
stos
pop
jns
sub
cmp
mov
in
fsubr
adc
push
test
push
into
push
push
cmc
mov
js
mov
or
xchg
lods
pushf
push
fists
cmpsb
movsb
mov
mov
xchg
add
cmp
sahf
inc
jns
mov
xchg
enter
pusha
je
call
mov
add
push
sarl
inc
sbb
push
pop
cmp
popa
rolb
test
nop
lods
pop
loop
pop
loope
fld1
push
and
or
das
adc
inc
xchg
shl
ret
test
pop
scas
mov
mov
push
mov
inc
bound
sbb
stos
sbb
or
fidivs
daa
xchg
adcl
fdiv
sbb
repz
jne
add
daa
cmc
mov
lds
fistpl
dec
sbb
imull
add
push
adc
mov
mov
inc
pushf
sub
shll
jecxz
sbb
subl
xchg
mov
sub
add
or
je
xor
mov
pusha
xchg
mov
mov
sub
ja
adc
xchg
dec
lods
out
jns
mov
mov
subb
mov
add
out
xchg
and
dec
mov
jb
ret
xor
in
enter
xchg
call
push
mov
cmp
iret
inc
pop
push
dec
cmp
add
mov
cmpsl
or
cmp
outsl
movsb
sub
lret
push
stc
or
sahf
clc
adc
fs
pop
fwait
test
jne
loopne
and
lods
inc
xor
sbb
xchg
jmp
add
mov
mov
aas
test
test
mov
cmp
mov
and
dec
push
ja
dec
cmp
pushf
jmp
jo
push
push
in
into
xchg
or
cmc
nopl
xlat
jp
sub
jno
out
inc
dec
inc
out
fisubrs
dec
jge
scas
sub
jp
mov
movswl
push
jmp
repz
lds
les
sub
incb
jmp
nop
scas
jle
cmp
insb
mov
xchg
aas
dec
and
cmp
mov
insb
dec
ds
add
mov
test
xor
insl
shll
push
and
inc
and
hlt
mov
inc
leave
pop
add
cli
mov
loopne
loop
inc
arpl
cltd
inc
cmc
addr16
pop
adc
shrb
push
cmpsl
test
iret
inc
or
ja
aad
xchg
out
cmp
mov
scas
test
mov
outsl
sbb
cmp
or
movsl
xchg
add
push
xor
lods
push
jo
stc
idivl
mov
cld
xchg
xor
popa
dec
mov
inc
aam
iret
loopne
cli
ds
ljmp
xchg
xchg
inc
cmpsl
jns
stos
cmp
int
mov
arpl
cmc
hlt
xlat
aad
mov
movsl
cmc
lret
in
int3
xchg
pop
mov
int
in
mov
lret
xchg
sahf
nop
cmp
out
pusha
and
dec
jnp
dec
std
outsb
into
or
mov
pop
and
test
sub
test
mov
ret
cmpl
loope
sub
push
lods
pusha
or
xor
mov
sub
or
xchg
xchg
ljmp
pop
into
jl
jne
ret
mov
jecxz
nop
xor
icebp
push
and
jnp
movsl
jbe
insl
cs
mov
rcrl
xchg
pushf
jbe
push
cld
loopne
mov
enter
xchg
mov
mov
repnz
dec
cmp
fcoms
adc
xchg
sti
in
shlb
je
sbb
ja
roll
cmpsb
dec
or
and
lret
fdivl
inc
mov
adc
cmpsb
enter
mov
push
rorb
jae
ret
scas
mov
lock
mov
pop
hlt
sub
out
xchg
pushf
push
sub
ds
sub
add
sbb
fs
mov
mov
mov
lock
add
outsl
cwtl
test
xor
ds
xchg
int3
movl
aam
ds
sub
and
push
xchg
shl
cmc
lcall
pop
add
mov
xor
scas
sahf
and
pop
jne
sbb
cmpsl
dec
jge,pn
loop
aas
nop
or
sub
mov
cwtl
sbb
test
repz
stos
mov
adc
pusha
aad
sbb
xchg
xchg
sbb
xor
add
sbb
push
fdivrs
in
lcall
dec
sbbl
fs
push
cmpsl
lahf
mov
cltd
ja
testl
jno
andb
and
pop
rcl
movsl
test
mov
dec
and
outsl
and
mov
dec
lock
pop
jle
mov
lods
les
int3
or
add
add
mov
lock
mov
sbb
cmp
cltd
lgs
sti
inc
ljmp
mov
inc
xchg
daa
sbb
mov
sub
jo
aaa
add
xlat
pushf
mov
aam
out
cmpsl
push
inc
dec
stos
jp
outsb
out
add
cmp
rclb
adc
adc
fildll
mov
and
mov
inc
jp
popf
inc
pushf
adc
cmpsb
adc
shll
cmp
and
ljmp
mov
into
je
inc
dec
ja
add
xor
shlb
xchg
gs
mov
mov
mov
mov
sahf
or
ss
daa
data16
jecxz
stos
shrl
icebp
jae
pop
add
cltd
cmp
lcall
andb
xchg
sbb
push
or
pop
mov
insl
addr16
xor
pop
inc
bnd
xor
pop
jns
lea
cmp
pusha
inc
into
pop
cmpsl
xchg
lret
ja
and
repnz
je
push
ss
cmpsl
cmp
or
xor
xlat
insb
jecxz
fwait
stos
add
lock
lock
sbb
loop
xchg
mov
dec
nop
push
jne
shlb
sbb
xchg
stos
sti
testb
dec
dec
movsb
out
aas
cmp
adc
sbb
mov
stc
dec
sbb
fildll
sub
sti
ss
mov
sbb
in
mov
in
jecxz
std
jae
in
or
add
mov
xchg
pop
mov
aaa
mov
addr16
sub
mov
jbe
dec
fst
mov
xchg
aaa
cli
push
fisubl
sbb
xor
lock
and
shrb
xchg
mov
mov
and
sbbl
xchg
stos
fsubs
pop
mov
imul
decl
add
inc
push
fwait
ljmp
jb
sub
push
jb
jb
xchg
in
mov
lret
adc
pop
fcompl
fisttpll
repnz
das
rorl
mov
fs
std
inc
pop
mov
test
clc
and
sahf
dec
aas
aas
rcrb
xchg
sub
dec
sbb
pop
nop
sbb
mov
into
push
cs
test
adc
shl
lods
add
iret
sti
mov
sub
popa
adc
jmp
pusha
mov
add
lods
push
mov
fstpl
xor
into
mov
mov
adc
in
rol
mov
ss
test
fisubrl
in
int
mov
mov
mov
mov
sub
outsb
or
into
adc
std
leave
push
dec
add
les
inc
call
test
mov
call
pop
out
mov
insb
lock
imul
lea
sub
adcb
ds
cmc
sub
and
cmpsb
clc
adc
push
push
push
xchg
mov
or
incb
push
jle
xchg
or
push
hlt
in
mov
add
and
mov
rorl
pop
stos
xor
fs
cmp
das
mov
mov
and
push
push
cld
cmc
mov
and
adc
ret
adc
sbb
int
loop
jbe
test
std
lock
mov
push
dec
add
or
sub
ror
or
pop
loope
ret
imul
outsl
sub
not
adc
outsl
mov
xchg
push
push
xor
movsl
insb
hlt
fsubl
xchg
imul
int
aas
repnz
pushf
aam
xor
adc
shlb
jo
outsb
jo
das
sub
or
call
out
push
js
mov
jnp
pop
xor
lret
daa
sbb
inc
adc
jae
into
jmp
push
push
sbbb
mov
inc
jne
mov
sub
dec
cmpsl
xlat
mov
cmc
or
push
mov
fidivl
lds
and
enter
cmp
and
xchg
fsub
je
aaa
test
mov
or
push
sbb
adc
popf
fistpll
inc
jne
outsl
push
xor
fdivl
and
popa
ret
daa
mov
ret
add
sub
xor
int
pop
movsl
or
mov
fsubs
daa
cmpsl
hlt
gs
jne
push
adc
xor
mov
lds
xor
pop
sub
push
outsl
into
ljmp
clc
xchg
nop
xor
dec
fsubl
or
mov
jae
or
jne
push
andl
stc
pop
xchg
inc
or
sbb
and
fdivrs
push
add
fnsave
dec
pop
sbb
shlb
int
sar
mov
mov
test
mov
push
shll
lcall
sub
xor
push
cmpsl
mov
adc
cmc
pop
rclb
xor
sub
or
adcl
adc
dec
cmpsl
fstl
cli
xorb
jle
push
into
stos
call
scas
mov
lods
jns
out
mov
jb
fcompl
es
mov
shlb
push
sbb
cmp
xchg
sbb
mov
mov
in
out
add
test
fdivs
xchg
sbb
iret
jl
mov
std
sub
sahf
xor
in
jmp
call
push
test
out
mov
out
addr16
lret
cmp
arpl
pop
mov
data16
lret
ljmp
gs
inc
cmpsb
push
jmp
cmp
xchg
movsl
mov
ss
out
in
and
jg
notl
push
pop
in
xor
rolb
js
mov
mov
xchg
sub
fwait
or
add
add
pop
pop
aad
cmp
clc
and
sbb
inc
outsb
sub
cmp
jne
bound
sub
andl
lret
fistpll
insl
jns
hlt
dec
fnstcw
jbe
sti
inc
sbb
ljmp
movsb
jno
xor
push
or
mov
jecxz
aam
pop
jne
mov
loopne
aaa
pop
lcall
xor
stc
pop
mov
cmpsl
imul
pop
sub
std
addr16
dec
jno
push
imul
scas
test
mov
jmp
repnz
add
sahf
push
push
movsl
imul
jae
sbb
xchg
mov
pop
mov
mov
xor
inc
test
mov
adc
pop
push
dec
and
popa
fisubrs
lret
mov
inc
adc
pop
dec
mov
dec
mov
mov
std
aad
xchg
arpl
jae
std
into
lahf
mov
je
andb
sbb
dec
imul
pop
sub
fidivl
sarb
jl
loop
ljmp
stos
rorl
sbb
iret
push
es
into
sub
fwait
push
push
fcmove
pop
sbb
andb
ljmp
ret
xchg
in
out
sbb
inc
and
sbb
repz
sbb
sbb
pop
dec
jbe
faddl
sub
xor
movl
rolb
jb
xchg
mov
mov
inc
movsl
sarl
sti
test
enter
ret
inc
in
push
dec
test
ljmp
test
inc
jl
fimull
insl
stc
popf
rolb
cmp
or
add
xchg
fucomi
pop
cmp
xor
sahf
sbb
pop
sbb
movsb
xor
dec
lock
xor
mov
sbb
scas
lret
lahf
enter
mov
adcl
das
ffreep
ja
dec
sub
push
inc
pop
push
fsubr
out
and
or
in
repz
rcrb
or
push
int
and
push
aaa
pop
imul
xchg
movsl
das
lds
adc
fwait
or
push
stos
fistpll
mov
imul
mov
sbb
fistpll
push
fst
sbb
jnp
jbe
xchg
jbe
sbb
std
lret
push
ret
lock
jae
pop
daa
jmp
repz
aam
or
imul
out
or
mov
jne
push
cmpsl
sbb
popa
pop
xlat
test
inc
mov
shrb
jne
stos
inc
test
icebp
pushf
dec
or
xchg
push
dec
scas
xor
push
fidivrl
ljmp
lahf
dec
and
lea
xchg
adc
fisubs
cmpsl
lds
and
pop
pushf
or
out
dec
xchg
call
shrl
inc
stos
iret
jmp
sbb
dec
test
divl
xchg
nop
jg
lock
stos
aad
aad
loopne
sub
dec
jmp
pop
mov
xchg
mov
mov
stos
and
cmp
lahf
add
rolb
jp
insl
jb
lret
jnp
xlat
cltd
out
andb
bound
xor
fistpll
inc
mov
ret
movq
fdivs
sub
dec
mov
sbbl
and
je
inc
cmp
movsb
or
xor
loope
adc
lds
pop
arpl
cmpsb
sbb
dec
pusha
mov
mov
addl
xchg
mov
sbb
add
arpl
push
or
int3
movsb
test
jo
scas
imul
or
xchg
dec
shlb
xchg
and
push
mov
pop
ret
into
sti
adc
setg
sbb
or
xchg
add
repz
push
sub
mov
adc
or
rcl
popa
add
inc
cmp
push
rolb
mov
jp
ljmp
gs
xchg
imul
gs
push
lods
lahf
in
mov
rcll
add
pop
jge
stos
or
xchg
repnz
pop
pop
ss
mov
dec
fimull
cs
mov
dec
popa
lret
mov
icebp
inc
pop
mov
jne
and
adc
push
pop
out
fldt
shrb
pop
sbb
mov
or
add
xchg
mov
les
scas
cli
sub
pop
mov
out
in
dec
and
inc
xor
jo
data16
sbb
jnp
test
cmp
push
cmp
mov
lret
ljmp
jns
xchg
inc
push
push
js
shlb
jno
mov
les
dec
ljmp
aas
jb
jns
pop
js
mov
pop
jecxz
cmp
int
push
nop
dec
sub
mov
xchg
mov
ret
mov
inc
data16
jnp
jo
mov
jns
aaa
adc
inc
adc
lret
aam
mov
mov
popf
mov
lods
sahf
lcall
xchg
das
add
mov
add
sub
sahf
ret
sub
repnz
fwait
or
std
dec
repnz
xor
shl
jne
ds
cmp
outsl
int
in
arpl
adc
inc
in
rcl
into
leave
jp
std
jns
outsb
jmp
daa
mov
mov
cmpsb
clc
rolb
cmp
xor
pop
inc
mov
out
jle
cmpsl
inc
mov
adc
add
cmpsl
div
loop
mov
ds
jae
shrl
pop
pop
fnstsw
or
mov
loopne
xor
cmp
ror
cvtpi2ps
out
sbb
jg
dec
mov
pop
loop
pushf
ss
pop
mov
cmp
xor
adc
rorl
cmova
test
cli
ja
or
std
nop
movsl
bound
mov
stos
xchg
add
cmp
or
add
xchg
arpl
repnz
fiaddl
pop
out
pop
adc
into
mov
jnp
adc
outsl
je
nop
in
aam
mov
insl
dec
adc
mov
push
dec
mov
sbb
loop
cltd
ds
nop
test
enter
xchg
push
arpl
jnp
addl
outsb
mov
shll
sub
popf
js
shll
add
xchg
push
and
imul
xchg
sbb
mov
enter
xorl
leave
int3
hlt
lods
mov
icebp
sbb
test
aaa
xor
push
add
pop
test
idiv
ds
push
jo
mov
mov
pop
test
xor
fadds
popa
mov
sti
aas
adc
aaa
movsb
mov
inc
and
rclb
in
cmp
mov
and
dec
je
jb
movsl
pop
sub
icebp
xchg
aad
iret
dec
push
pushl
jp
cltd
jno
stc
jg
add
fdivs
inc
sti
push
mov
testb
mov
mov
xchg
xor
mov
cli
filds
and
sbb
dec
dec
jb
outsl
jno
mov
testb
idivl
jae
xchg
aam
mov
js
je
movsb
jle
cwtl
std
push
cmpsb
pop
inc
sbb
jl
fisubl
mov
xchg
or
addl
lock
and
mov
out
mov
js
pop
enter
add
sub
inc
test
insb
jno
aaa
sub
push
sub
ret
or
jne
lods
xchg
xchg
add
outsb
xchg
mov
fs
rorl
arpl
mov
jecxz
fsubl
jp
pop
enter
sub
jae
dec
outsl
loopne
outsb
push
cs
dec
outsl
cmpsb
daa
push
mov
push
cmpsb
pop
push
sub
ja
pop
sbb
sahf
jns,pn
push
loop
mov
inc
icebp
lahf
cwtl
push
push
add
insl
xlat
dec
jecxz
dec
or
dec
insl
leave
push
mov
sub
into
icebp
cmp
add
xchg
xor
fs
daa
out
fstpl
insl
outsb
jecxz
shll
and
push
push
lds
dec
mov
sub
hlt
jno
cmp
jge
xor
mov
cmpsl
mov
cld
and
mov
loope
add
ret
sub
aaa
lcall
adc
mov
dec
push
inc
loop
test
inc
sub
testb
fucomip
repz
mov
xor
cli
out
push
aam
int
and
cli
xchg
adc
push
dec
xor
scas
fidivl
cmp
add
imul
pop
mov
jmp
mov
les
int
mov
cmpsl
pop
mov
ret
xchg
rcrb
cmc
out
in
or
lods
scas
push
scas
xchg
adc
arpl
repz
in
iret
mov
cmp
nop
ret
rol
pop
or
fadd
jae
or
sub
cmc
les
jmp
and
pop
xchg
lahf
jge
mov
or
leave
mov
ret
sub
popf
push
mov
pop
rcrb
mov
dec
stos
js
in
bound
fbld
push
add
leave
jmp
inc
cwtl
lea
sbb
lds
dec
out
pop
ljmp
xor
inc
leave
out
pminub
in
daa
mov
xchg
dec
lahf
sub
mov
dec
mov
es
mov
xchg
loop
rcl
sahf
shl
jnp
sub
ss
ficompl
test
outsb
sbb
lods
mov
int3
push
int
sub
mov
mov
cmp
jbe
imul
out
jge
add
pop
sbb
pop
std
aaa
into
push
adc
repz
cmpsb
jno
test
cmc
stos
icebp
sahf
jmp
outsb
pushf
push
bound
xor
mov
add
cmp
sub
out
xchg
mov
xchg
fisubl
xchg
lods
sahf
cwtl
adc
pushf
cmp
insl
inc
pop
xchg
repz
jl
sarb
and
inc
mov
popa
stos
push
sub
int
sub
aas
cltd
mov
push
jbe
push
sarl
arpl
fstps
fsubrl
mov
rolb
sbb
daa
xchg
mov
push
repnz
sbb
in
xor
ret
xor
xchg
jle
xchg
idiv
sub
in
out
stos
cmpsb
xor
inc
in
mov
dec
rorb
push
push
mov
inc
mov
or
inc
jo
out
nop
scas
cwtl
out
vaddss
sub
cli
dec
add
lret
outsl
lds
sub
ficompl
dec
inc
outsl
outsl
or
lahf
cmc
adc
loope
cli
dec
and
es
stos
sub
and
dec
js
mull
movsb
fistpll
push
and
add
orb
pop
lea
aam
cmc
jmp
add
push
repz
mov
pusha
push
cmpsl
sarb
add
jl
enter
pusha
ss
fs
xchg
sbb
pusha
insl
or
pop
in
imul
scas
inc
dec
hlt
daa
jmp
pop
xchg
dec
ror
push
stc
aaa
add
push
mov
add
push
je
clc
dec
pop
dec
jae
lods
bound
or
and
cmp
js
enter
aaa
ljmp
xchg
push
sbb
mov
iret
roll
std
xchg
or
push
pop
shlb
int
sbb
test
push
dec
mov
mov
divl
gs
cli
lds
pop
es
imul
xchg
jge
sbb
sbb
mov
insl
fs
cmp
in
xor
les
cmpsl
nop
js
test
dec
test
mov
cwtl
repnz
cmp
js
cmp
test
add
lods
push
inc
dec
fs
out
mov
out
pusha
aas
cmp
movsl
sub
push
je
push
xor
scas
mov
xor
cli
lea
scas
cmc
loop
inc
jno
lret
int
loope
enter
mov
divl
bound
jnp
or
mov
insb
pop
or
repnz
insl
ret
insl
in
mov
out
inc
xchg
cmp
repnz
and
dec
jmp
subb
inc
std
cmpsl
out
sbb
inc
mov
movsl
jns
imul
loopne
mov
imul
out
cmpsb
sub
insb
cld
es
roll
iret
cld
scas
clc
fists
or
and
inc
adc
pop
stos
daa
cmpsb
outsl
mov
add
lcall
jl
nop
inc
mov
pop
outsb
pop
pop
cmp
sar
and
add
stc
in
and
lcall
pop
or
inc
add
mov
xchg
outsl
in
sbb
or
fildll
add
xchg
jo
shrb
lock
xchg
lock
call
lahf
lods
jns
push
popl
insl
bound
mov
and
add
xchg
cld
sbb
mov
gs
dec
jns
cwtl
mov
imul
clc
fxch
subb
pop
xchg
pop
pop
scas
imul
clc
dec
mov
cmp
leave
sbbl
xor
pop
loope
cwtl
out
aam
jg
dec
data16
cli
ljmp
push
push
sti
xchg
in
sbb
xchg
mov
cmp
fstl
push
sar
jo
mov
sub
cld
xor
in
sbb
sbb
fmuls
addr16
xchg
sbb
add
cli
cmp
cmp
pop
daa
stos
push
mov
mov
sub
cs
push
mov
xchg
jnp
bound
mov
mov
in
mov
or
cwtl
fldcw
and
stos
int
vpmovmskb
or
jnp
std
inc
aaa
bound
pop
fld
mov
popa
call
cs
sub
scas
clc
cmpsb
pushf
cmp
xchg
add
pop
hlt
lods
push
push
test
inc
mov
add
fnstenv
insl
jbe
sbb
das
pusha
sarb
mov
adcl
rol
or
pop
aad
mov
mov
clc
xchg
or
mov
cmovb
xor
scas
pop
aas
je
or
lret
je
jne
lods
xchg
mov
imul
loop
mov
xor
into
sbb
jo
inc
pop
push
pop
shrl
lcall
jbe
dec
and
cmp
jnp
imul
cmp
out
out
clc
mov
es
fldenv
xchg
mov
imul
xchg
jle
loopne
fmull
mov
or
mov
xchg
pop
cmp
cltd
push
sbb
add
out
xchg
mov
mov
mov
aam
jae
push
mov
test
bound
mov
cmp
jne
in
icebp
repnz
vmovupd
enter
xchg
dec
mov
das
in
mov
lahf
pop
push
sbb
fdivrs
xchg
int3
push
adc
pop
out
sbb
xor
dec
mov
inc
sbb
fldt
out
inc
in
and
push
loop
fstps
out
cmp
mov
lcall
pusha
adc
lahf
mov
push
in
add
std
bnd
addr16
test
loopne
es
pushl
pop
adc
or
xlat
cmp
adc
ja
xchg
in
insl
mov
push
add
fildll
hlt
inc
fstpl
fsubrs
into
mov
mov
sub
test
and
int3
outsb
mov
pop
add
adc
mov
pop
stos
addr16
cmp
inc
jp
push
int3
shll
mov
and
sub
mov
dec
push
jmp
pop
negb
ds
out
pop
add
xlat
push
sti
insl
adc
push
mov
in
fs
adc
xor
add
lods
daa
pop
enter
into
mov
aam
mov
cli
sub
mov
scas
lock
lods
or
mov
fstps
push
jmp
lea
push
int
es
loope
cpuid
sbb
ud1
imul
sahf
push
ja
pop
jo
sub
ja
inc
adc
inc
mov
fucomip
lea
add
add
fwait
in
xchg
push
dec
adc
mov
add
scas
pop
insb
notb
sbb
push
icebp
jae
sbb
lods
pop
loop
jno
in
sub
push
lods
iret
mov
xchg
aas
jl
and
loop
icebp
movl
es
out
sbb
lods
jbe
int
loope
dec
or
push
fcoms
and
ss
push
jl
sbb
mov
inc
mov
testb
push
pop
frstor
out
iret
and
dec
or
int3
ds
push
sub
push
fstl
pop
or
cmpsb
mov
mov
pop
jo
and
adc
sub
fistl
mov
sub
in
scas
dec
popa
lret
add
jno
push
and
inc
ret
pop
incl
mov
fsubr
xor
ja
dec
and
out
into
jmp
dec
je
imul
jmp
mov
cmove
stos
mov
jne
push
push
daa
mov
jb
jnp
pop
es
movsl
arpl
cmp
inc
dec
cmpsl
sub
mov
mov
mov
mov
inc
add
imulb
push
jg
mov
in
push
call
pop
dec
mov
loope
mov
aas
inc
mov
addr16
sub
pop
xchg
adc
les
cmp
test
clc
cmp
pop
mov
xlat
push
push
es
jns
cmp
iret
sub
test
dec
mov
xchg
dec
cli
js
mov
out
scas
cmp
aas
and
sahf
add
mov
add
fs
sbbb
and
in
mov
ljmp
fisttps
inc
inc
iret
xor
mov
loop
push
jp
jae
pop
xlat
jecxz
sti
xchg
sbb
sub
or
popf
mov
icebp
xchg
mov
cmp
mov
sbb
or
sub
subb
and
xchg
icebp
pandn
aam
shll
leave
inc
fstpl
push
inc
jo
push
dec
cli
hlt
test
bound
fwait
dec
fs
mov
xchg
pop
fstps
xor
leave
adc
insl
xchg
jb
divb
hlt
jg
out
shll
in
ljmp
shlb
aaa
xor
push
gs
cld
or
js
xchg
xchg
out
mov
xor
push
pop
shlb
outsl
sub
xchg
call
mov
mov
inc
popl
cld
fistpll
imul
cmc
retw
sub
dec
jmp
insb
arpl
imul
xchg
fwait
add
pop
shr
mov
mov
out
fsubrl
addr16
movsb
imulb
and
bound
add
sbb
adc
pop
dec
adc
lahf
stos
movsb
shlb
loopne
lods
int
jp
xchg
fisubl
bound
mov
jmp
mov
push
fdivr
push
xchg
mov
inc
leave
lret
mov
test
pop
cmp
mov
add
pop
into
repnz
and
mov
adc
int3
sub
inc
adc
in
sbb
xchg
lea
dec
mov
lds
dec
adc
outsl
pop
repnz
cmc
and
inc
sub
mov
aad
push
js
xchg
xor
aaa
cmp
repnz
mov
movsl
mov
pop
cmp
pop
dec
pop
push
mov
and
mov
int
fs
jb
cmp
jae
sbb
adc
stos
or
pushl
cltd
pop
sub
pop
pop
and
pop
xor
je
loopne
dec
or
repz
push
fstp
push
sbb
cltd
pop
pushf
and
leave
mov
ja
sti
in
adc
dec
push
stos
inc
out
clc
dec
lods
jbe
jo
leave
mov
sub
jp
lods
push
cli
icebp
mov
std
pop
inc
hlt
pop
dec
popf
scas
addr16
movsl
mov
lea
xor
mov
cmpl
adc
push
inc
aas
sub
adc
and
popf
call
inc
pop
lock
jae
sub
pop
aaa
push
lea
scas
mov
mov
scas
andl
and
call
sub
pause
cli
daa
xchg
xchg
scas
clc
mov
imul
sbb
popf
popa
add
mov
repnz
inc
and
popa
imul
push
out
pop
lcall
xchg
fdivrl
gs
push
cmp
arpl
sti
cmpsl
xchg
out
popf
insl
sahf
lahf
cmp
aas
xor
mov
cmpsl
or
or
sbb
sbb
xor
pusha
mov
sbb
sbb
lods
adc
adc
mov
int3
pop
pop
nop
cmp
fdivrl
je
pushf
arpl
shlb
testb
mov
stc
test
jmp
sub
fs
aad
lret
push
stc
xchg
xor
push
mov
sub
cmp
pop
sbb
fs
repnz
adc
movsb
insb
out
test
push
ja
pop
icebp
test
call
xchg
fdivs
push
jle
pop
inc
nop
xchg
adc
or
mov
ljmp
dec
pushf
cmpsb
es
rol
daa
and
test
jmp
mov
add
and
push
imul
adc
inc
jbe
add
in
rcrb
mov
ss
inc
inc
sbb
scas
lret
jge
mov
jecxz
dec
movsl
or
dec
sub
das
clc
inc
adc
movsl
loope
dec
out
sbb
fisttps
sti
xor
xlat
in
repz
xchg
or
cmc
pop
repnz
inc
scas
jnp
mov
xchg
adc
adc
fmuls
jg
dec
mov
loop
cwtl
and
out
and
xchg
xor
add
xor
pop
xor
mov
stos
mov
inc
push
cld
or
inc
jno
fwait
cmp
mov
rorl
rclb
and
mov
jecxz
shrl
movsl
sub
sub
nop
mov
cmp
xchg
outsb
out
repnz
sub
mov
or
add
aaa
test
inc
dec
mov
xor
cmp
arpl
adc
and
push
jns
adc
mov
and
cmp
ficomps
popf
or
in
pop
mov
out
sbb
push
sarb
pop
mov
dec
cmp
jmp
cmp
aam
pop
or
test
jmp
int3
cmp
in
subb
mov
pop
out
sti
pop
addr16
or
sub
pop
testb
jmp
repz
decb
push
add
sub
adc
jmp
test
cltd
push
cwtl
push
in
nop
ret
sbb
and
cltd
mov
loopne
sbb
rol
arpl
pushl
jp
or
xor
adc
sahf
dec
xor
mov
or
mov
and
fs
das
adc
ja
outsb
mov
inc
popa
mov
adc
dec
xor
shll
repnz
insb
jne
mov
in
inc
in
xchg
dec
int
xchg
mov
adc
and
xor
xchg
dec
ficoml
dec
in
mov
test
mov
sub
or
sti
ja
sbb
pushf
dec
xchg
pop
jns
pop
in
stos
pop
and
mov
decw
push
imul
jbe
aam
loop
or
push
sbb
hlt
mov
loop
fldcw
or
jp
push
out
int3
icebp
mov
mov
arpl
pusha
jnp
inc
mov
mov
nop
ljmp
jnp
push
push
arpl
sub
hlt
adc
dec
pop
or
test
add
ja
mov
sbb
pusha
jnp
popf
lock
dec
and
sub
mov
sbb
xchg
pop
test
jp
lahf
cwtl
mov
mov
lcall
gs
mov
mov
aam
sub
mov
jns
aam
rcr
notl
xor
fidivrs
cmp
add
mov
and
adc
mov
mov
ss
out
ja
iret
ljmp
xor
pop
test
out
xchg
and
mov
mov
sbbl
or
jl
dec
jns
sbb
dec
lods
dec
pop
mov
popf
shlb
in
mov
jbe
loopne
xor
jns
filds
and
add
shll
nop
pop
imul
inc
fwait
xchg
jo
pop
push
pop
cs
pop
dec
or
pop
fadd
pop
xlat
sti
rorb
movsb
pop
push
inc
frstor
out
xor
cli
cmp
mov
inc
sub
movsb
arpl
dec
sub
xchg
lcall
das
jle
or
sub
fsubr
daa
enter
push
scas
leave
mov
nop
mov
loopne
or
mov
std
mov
dec
adc
dec
cmpl
mov
stos
push
into
inc
cmp
rcrl
outsl
cmp
imul
std
lds
insb
rcl
jns
mov
adc
pop
push
leave
cmp
data16
inc
test
int
inc
negb
dec
sbb
xchg
cs
fs
lods
scas
shrl
mov
loopne
adcl
xchg
xor
rcrl
mov
dec
cmp
aas
push
or
add
inc
mov
mov
cs
clc
jp
popf
adc
jb
cmp
aam
sahf
or
inc
push
bound
fs
adcl
dec
push
xchg
ret
sbb
and
jnp
loope
cmp
out
shlb
lods
repz
pop
inc
sub
cmp
mov
pushf
mov
xor
rcl
pop
lahf
inc
ljmp
jno
sub
sub
and
pusha
arpl
dec
mov
lods
in
mov
lea
jne
outsb
jmp
ja
incb
movsl
rcr
dec
test
and
add
mov
lcall
jae
lods
imul
iret
shrb
add
jp
bound
insl
lock
scas
fcoms
fcompl
imul
scas
sahf
adc
out
rorb
push
incb
mov
shll
shrl
sbb
mov
aas
adc
fwait
mov
jbe
adc
sub
push
push
jg
adc
xor
jb
add
and
repnz
xchg
dec
ds
pop
sub
jne
and
fsubrl
aaa
add
xchg
push
mov
fdivrp
mov
mov
test
add
sbb
ss
sbb
mov
int3
inc
insl
and
insl
mov
pop
jge
jg
push
push
push
popf
mov
dec
lret
lret
cmp
jmp
es
xchg
int
mov
push
fdivr
and
jmp
xor
dec
dec
mov
mov
call
mov
movsl
loope
movsl
xlat
xchg
jge
jno
mov
repnz
test
test
mov
ja
pop
movsb
ret
test
repnz
sahf
in
sub
mov
xor
arpl
dec
je
jae
and
out
out
loop
mov
aam
mov
aaa
dec
lods
mov
xchg
inc
or
test
clc
mov
stos
loopne
add
insb
test
sub
mov
dec
cmp
mov
gs
cli
dec
nop
xor
mov
or
mov
lcall
push
cltd
cmpsl
mov
cwtl
addr16
int3
jno
daa
out
push
push
in
lods
repz
sub
xchg
ljmp
addr16
fs
jbe
sub
loop
hlt
int3
and
push
mov
cltd
add
sbb
add
fwait
adc
push
pop
sub
fnstcw
add
mov
xchg
test
gs
mov
cmc
add
mov
sbb
scas
push
cmpl
cmp
aas
das
and
fisubrs
sahf
mov
or
xchg
shrb
inc
rcrl
mov
inc
cmpsb
inc
cltd
pop
and
xchg
out
mov
out
mov
and
es
xor
pop
push
loopne
and
cmp
pop
out
test
jno
push
xchg
mov
imul
or
test
mov
fucomp
push
pop
stc
stos
mov
adcb
cmp
jl
test
jno
cli
xchg
fmull
inc
out
pop
dec
mov
subb
in
iret
push
and
repnz
xchg
sub
leave
insb
ret
mov
mov
jecxz
loopne
fs
mov
lods
xchg
dec
in
jb
repnz
xor
out
xlat
jb
inc
dec
es
or
and
sub
push
dec
xchg
jle
xor
jne
sbb
pop
loop
add
or
adcb
call
adc
ret
sbb
mov
mov
idiv
inc
repz
enter
sbb
jmp
in
and
sbb
xor
out
mov
xor
push
int3
push
dec
hlt
rolb
sub
not
scas
inc
cli
gs
jp
dec
int
mov
cltd
lea
les
or
push
dec
push
sbb
pushf
xchg
jb
adc
add
pop
inc
mov
inc
outsl
inc
adc
or
adc
sbb
push
imul
mulb
cmpsl
xchg
sbb
cmp
push
xor
mov
add
shl
loop
sbb
sub
stc
mov
xchg
pop
leave
cli
nop
cmc
loopne
aad
std
sbb
mov
sbb
ret
adc
mov
push
dec
ror
mov
sbb
dec
add
push
xchg
divl
dec
scas
mov
and
xor
mov
in
mov
and
add
pop
xchg
and
push
pop
xchg
lahf
and
shl
jnp
ss
aas
fwait
mov
adc
adc
ret
ja
jne
cwtl
shlb
dec
xchg
pop
jl
xor
pushf
mov
add
sbb
sarb
push
xor
and
mov
jmp
mov
cmc
xor
sub
xor
shrl
scas
jo
insl
sbb
xor
xchg
ja
xor
int3
scas
jg
rcl
ja
idiv
push
cmpl
ja
negb
add
das
in
sub
add
mov
jge
sbb
bound
mov
mov
test
imul
and
cmp
dec
xchg
shll
sti
mov
movsb
repz
xchg
or
jns
sbb
pop
psubsw
mov
in
jo
ds
out
lods
xlat
fsubp
mov
cwtl
in
pop
jb
mov
scas
fstl
das
inc
out
mov
aam
fldl
aas
mov
mov
xchg
pop
inc
test
sahf
pop
scas
cld
roll
insl
or
shlb
ss
scas
data16
xchg
xchg
das
daa
andl
cltd
hlt
jne
in
es
in
shll
frstor
adc
js
inc
test
cmp
sub
aas
in
and
inc
adc
cmp
push
sub
and
push
lcall
add
push
push
lods
or
movsl
mov
ljmp
or
sub
inc
and
jnp
repnz
lcall
cmp
fwait
mov
ds
or
scas
pop
xor
jecxz
dec
shlb
pop
mov
adc
aaa
jb
mov
sbb
scas
stos
iret
and
sar
popa
sub
jl
add
fs
add
cmp
popf
pop
pushw
mov
fwait
je
insb
fistpll
gs
ljmp
xchg
adc
aad
aam
icebp
sarb
mov
jb
adc
ret
jg
out
pop
out
dec
cmp
jle
push
pop
mov
xor
push
dec
mov
lods
pop
ds
dec
jo
popf
test
or
cmp
or
jmp
adc
xlat
mov
jae
aas
mov
mov
int3
loopne
xor
inc
cmc
xchg
mov
cmp
lret
or
stc
fldt
jb
push
leave
mov
push
xlat
push
and
adc
fwait
jg
je
sbbl
mov
rclb
fldenv
imul
inc
scas
push
hlt
pop
adc
sahf
mov
pusha
fcompl
cmp
int
adcb
lea
mov
add
xor
cmp
popf
pop
daa
arpl
inc
lahf
cli
jne
lods
or
dec
inc
add
sub
jae
daa
movsb
pushf
mov
pshufw
xor
sub
jecxz
addr16
push
jae
in
out
jmp
cmp
sub
sbb
fs
inc
add
test
add
sub
push
lea
ljmp
add
mov
xor
fdivl
cmp
ss
rolb
mov
aaa
insb
fistpl
sbb
pop
test
subl
mov
sbb
repz
or
jl
rorb
or
sbb
mov
call
lcall
sub
sub
add
andb
gs
cld
sbb
loope
or
mov
lret
subl
loope
push
jle
dec
out
pop
adc
dec
insl
addr16
sarb
sbb
jle
stos
jno
or
xchg
xor
imulb
cmp
inc
inc
xlat
ret
sub
shl
push
jae
test
jne
pop
and
sbb
jnp
jl
cld
cmpl
add
or
test
std
sub
sbb
xchg
out
or
test
xchg
sahf
insb
test
pop
cmovnp
lock
out
stos
mov
push
insb
cmp
std
and
push
lock
mov
xor
jne
mov
add
dec
pop
outsb
xchg
push
not
stos
loope
mov
and
and
dec
repnz
stos
inc
add
idiv
outsb
and
icebp
push
fcmovu
in
jb
inc
pop
arpl
aas
lret
mov
lods
pop
xchg
loop
lods
lods
sbb
shr
lret
lock
packuswb
je
inc
loop
xchg
test
in
fs
dec
push
mov
in
inc
rcl
cmp
xchg
xchg
pusha
xor
outsl
push
cs
mov
pop
mov
and
mov
cld
inc
je
push
movsl
ss
hlt
aad
dec
out
lods
pop
movsl
add
test
mov
lret
es
enter
dec
sbb
or
sbb
loopne
adc
int3
loopne
shlb
loope
movsb
adc
xchg
lods
mov
mov
xor
add
mov
sub
not
arpl
leave
pop
in
jno
orl
or
cmp
mov
jae
mov
xchg
shlb
test
idivb
mov
jle
sub
imul
jle
repz
dec
sub
mull
out
sub
lds
and
jo
out
movsl
pop
aam
lcall
int
or
or
add
mov
scas
inc
je
imul
adc
leave
jnp
imul
xchg
add
test
popf
js
stos
cmp
mov
push
cmp
push
jne
fcomip
out
dec
shlb
sbb
inc
sbb
test
addl
cmp
pop
cmc
adc
push
test
fisubrs
xor
dec
clc
je
popf
cmp
mov
movsl
or
ja
cs
clc
sbb
xchg
fcoml
mov
dec
push
mov
cmp
and
js
cmc
pop
cmp
ret
nop
out
fwait
mov
hlt
loopne
add
xchg
cltd
jl
cmpsb
jb
cli
pop
es
outsb
cwtl
mov
std
test
mov
cmpsb
or
outsb
and
movsl
and
dec
push
imul
push
mov
cld
dec
sub
orl
xchg
cs
pop
ret
leave
imul
ss
mov
daa
push
pop
or
cmp
adc
inc
push
pop
add
sahf
inc
mov
jnp
sbb
or
mov
test
jle
sub
insb
cmp
loope
pop
scas
sti
ss
cwtl
mov
jns
push
in
sahf
nop
fimull
add
out
mov
shl
mov
adc
imul
inc
loope
xorl
mov
fldl2t
in
mov
nop
push
loope
xlat
cmp
adc
push
mov
push
mov
arpl
push
mov
push
orl
mov
pop
sbb
movsb
movsb
aam
bound
dec
adc
ja
icebp
lea
jb
mov
jecxz
jne
cmp
addl
sbb
fidivs
xchg
dec
push
cmp
push
jecxz
xchg
stos
sub
dec
stos
xor
in
xor
scas
stos
stos
push
outsb
hlt
xor
stc
pushf
mov
ficomps
push
test
xor
jle
jno
dec
cmp
rcll
pusha
mov
mov
stos
mov
add
imul
push
jb
clc
aas
testb
mull
fs
and
nop
xor
sbb
push
out
xor
mov
imulb
sub
les
aas
pop
fidivs
push
inc
je
dec
ja
enter
sub
fs
mov
insb
outsl
inc
adc
mov
push
push
xchg
inc
xchg
push
js
sti
ja
cmp
add
shr
out
shll
push
sbb
or
fldcw
fldcw
mov
inc
cmpsl
and
aad
adc
enter
jb
rorl
sbb
dec
sbb
xchg
xor
xchg
int
out
popf
daa
xchg
push
movsl
pop
imul
popa
les
jno
mov
pop
pop
into
xchg
mov
mov
mov
or
lods
fimull
jo
es
add
sbb
fs
cmp
xchg
xor
fistps
or
cmpsl
insb
insb
inc
sbb
adcb
mov
lods
push
xchg
int
inc
cmp
jns
sub
cld
loopne
cwtl
lcall
ljmp
add
mov
data16
cmp
lret
lret
push
jg
lods
cmp
gs
jbe
mov
repz
or
test
xor
cmpl
cmc
jg
pop
push
cmpsl
add
pushf
jle
mov
cmpsl
pop
push
scas
cld
fildll
aad
mov
orl
jg
aaa
mov
jbe
enter
pop
daa
push
inc
aas
cmp
sbb
ss
es
xor
mov
iret
lea
add
cmp
jge
out
cmpsl
loopne
pop
std
mov
jo
pop
jl
jmp
cmp
cmp
in
rol
dec
sub
std
push
mov
jl
jecxz
mov
ljmp
adc
cmp
out
std
sbb
mov
xchg
push
sub
stos
mov
add
cmp
push
sub
bound
and
xor
in
nop
cltd
mov
pop
mov
clc
arpl
push
pop
mov
mov
jae
cmp
popf
aas
xchg
mov
add
es
bound
inc
fbstp
sbb
testb
adc
je
dec
mulb
cmp
insb
adc
leave
je
push
and
inc
loopne
addr16
mov
mov
xchg
and
sub
repnz
mov
popl
inc
xchg
call
mov
out
adc
pop
aas
xchg
repnz
add
xchg
imul
xor
bound
xor
out
in
addr16
fwait
mov
push
es
sbbw
xchg
movsl
sbb
ficoml
inc
jecxz
add
out
insl
divb
mov
xchg
cltd
popf
add
lods
xchg
push
dec
lret
outsl
movsb
xor
das
mov
jb
jp
divb
xor
mov
outsb
imul
repnz
lea
mov
mov
in
pop
cmpsb
jno
shll
mov
jb
pushf
jo
shrb
outsb
mov
fildl
xor
xor
leave
fadds
repnz
pushf
gs
inc
push
jg
cmpsb
pop
inc
push
scas
insl
cmpsb
cmpsb
sub
stc
dec
dec
jge
jne
dec
fldt
data16
cld
adc
inc
adc
mov
shld
loope
mov
push
vpmulhw
ret
stos
lahf
nop
jns
pop
xor
and
inc
movsb
in
or
mov
testl
jg
mov
push
add
iret
add
mov
shll
mov
push
aad
arpl
mov
jbe
iret
jge
je
dec
popf
push
in
imul
add
dec
testb
mov
sarb
ret
fisubrl
jnp
adc
and
sbb
push
inc
mov
jmp
sbb
pop
mov
or
inc
cwtl
call
add
dec
int
pop
decl
jg
andb
mov
sub
jbe
mov
adc
inc
pusha
hlt
fistps
pop
and
xchg
jnp
repz
cmpsb
je
movsl
dec
pushf
scas
sbb
pushf
jp
dec
lret
or
push
das
sbb
in
clc
repz
or
pop
xchg
mov
mull
inc
dec
nop
push
xchg
std
sar
or
jecxz
scas
mov
cli
cmp
xchg
or
rcrb
cld
mov
sbb
lock
xor
xchg
fsubr
lret
scas
and
push
xchg
pop
shlb
cmp
dec
sub
stos
jo
popf
frstor
xchg
cmp
leave
push
push
ror
xor
inc
mov
popf
add
clc
mov
cwtl
mov
adc
xor
cld
add
xchg
push
mov
or
sbb
fimuls
cmpsb
test
pop
inc
mov
shrb
aad
sbb
mov
mov
ret
dec
inc
jp
add
in
push
dec
or
inc
dec
cmp
jbe
jno
push
daa
push
ret
push
insl
dec
add
rol
leave
daa
cli
pop
sbb
mov
dec
push
rcrl
jnp
lret
xlat
inc
aas
or
sbb
lock
inc
testl
fcompl
push
je
cmc
sbb
loop
inc
aad
sbb
push
sub
add
xor
xor
mov
add
lods
loop
jmp
mov
jnp
mov
dec
cmp
jge
lahf
mov
arpl
test
sub
sbb
adc
mulb
daa
sbb
and
jne
sub
sbb
stos
shll
loope
sti
and
inc
pop
push
fmuls
aam
mov
jge
mov
push
jge
hlt
jecxz
ss
lahf
cmp
and
ret
push
dec
outsb
in
add
and
mov
xchg
icebp
in
in
in
mov
dec
fisttps
and
add
adc
inc
or
rclb
pop
xor
mov
add
dec
mov
xor
pop
dec
mov
xchg
push
das
mov
jb
jge
addr16
imul
or
dec
xchg
push
push
lods
cmp
mov
add
add
pusha
insl
inc
jnp
in
sub
mov
sbb
sub
or
pusha
out
sub
lahf
popa
popa
fldt
cwtl
cmc
xor
add
outsb
out
fs
dec
gs
iret
in
and
sub
les
push
fcoms
lret
ret
mov
je
ljmp
inc
mov
loop
cmp
adc
sbb
sbb
sub
cwtl
or
inc
lahf
cmpsl
mov
sbb
mov
mov
add
cmpsl
sbb
popf
xchg
xchg
aas
aam
cmc
pop
mov
test
fs
sahf
pop
push
pop
pop
lret
mov
fwait
and
ja
xchg
je
mov
push
lahf
and
xor
fisubrs
imul
inc
mov
push
sub
stos
test
movsl
lea
in
lods
xor
jb
ja
in
cs
gs
push
dec
adc
push
call
jns
imul
stos
cwtl
cltd
add
xchg
cs
add
sahf
es
mov
enter
scas
cli
add
adc
aaa
les
jae
cmp
cwtl
dec
stc
or
xor
movsb
and
sub
pop
sbb
and
pop
pop
xchg
mov
pushf
ljmp
fidivs
fcomi
sub
xchg
je
imul
mov
sub
pop
lret
jnp
add
sbb
adc
outsl
inc
lds
out
or
sbb
jbe
xchg
jmp
scas
out
cmp
test
or
shl
nop
movsb
inc
les
mov
lret
xchg
sarb
dec
outsl
and
mov
rcr
adc
cwtl
into
lea
sbb
mov
scas
das
xor
pop
gs
repz
leave
stc
out
pop
lock
std
or
clc
cld
add
test
cmc
pop
aam
out
fadds
xchg
push
inc
dec
pop
imul
and
ror
cmp
dec
rorl
jge
mov
fistpl
jg
out
xor
mov
loop
mov
jp
in
cmp
xor
popf
mov
cmpsl
nop
cmpsl
pusha
nop
adc
pop
jp
test
mov
and
out
popa
xor
je
lret
out
outsb
and
sahf
test
dec
jecxz
cmp
fists
adc
rcll
lods
xlat
xchg
sub
jle
lods
test
ret
jb
xchg
xor
jp
and
sbb
out
cli
mov
nop
xchg
xor
ret
pop
xrelease
xchg
inc
mov
cmp
fistl
lahf
call
xor
in
pop
dec
dec
shl
icebp
jo
mov
test
xchg
mov
add
fisttpl
daa
xor
mov
or
arpl
inc
and
div
es
jae
cmp
popf
out
mov
ss
popa
xchg
push
into
adc
cwtl
mov
adc
add
frstor
or
ficomps
out
sbb
mov
pop
cmp
lock
lea
jp
jg
adc
sub
add
sahf
mov
push
add
fnstenv
dec
insb
push
sub
fdivl
data16
lret
push
xor
and
jae
iret
out
mov
push
test
stos
mov
int
inc
movsl
insl
xchg
out
jle
daa
inc
rol
xchg
mov
mov
add
push
pop
nop
jmp
loope
sub
fldenv
in
int
pop
xchg
adc
shll
faddp
xchg
and
sbb
mov
insl
jmp
loopne
cmp
test
cmc
loop
cltd
insl
in
mov
ja
in
fdivl
ret
out
inc
jl
xchg
rcl
cmp
pushf
faddl
repnz
pop
jae
hlt
popf
jmp
sbb
jp
mov
mov
mov
sub
cltd
lcall
sbb
jae
pop
std
inc
dec
cmovs
fistpll
mov
jl
sbb
pop
xor
popa
cld
call
inc
and
or
or
dec
loope
scas
or
aad
mov
inc
xchg
and
dec
dec
loope
pop
in
push
or
cmc
jecxz
mov
loopne
fisttpl
in
pushf
push
movsb
inc
lods
jmp
cmc
mov
or
sub
sarb
ss
insb
and
jns
jge
scas
std
int
xor
adc
push
ret
mov
imul
imull
into
mov
xor
sti
popf
add
and
mov
sahf
mov
pop
int3
dec
vpmaxub
xor
fadds
call
add
cs
inc
or
push
out
cs
scas
enter
adc
sub
xchg
sbb
and
sub
scas
xchg
shl
jmp
xor
jmp
add
popl
insb
pusha
dec
ret
mov
or
dec
xchg
clc
mov
loope
push
iret
add
fs
mov
mov
movsb
cltd
xor
sbbl
js
push
inc
adc
mov
push
lcall
mov
shrb
call
sub
scas
leave
in
cmp
lea
out
mov
add
adc
movsb
mov
add
xchg
test
cmp
add
pop
imul
repz
mov
mov
test
sub
xchg
fmull
mov
sbb
lret
push
out
ja
jle
xor
stc
popa
inc
repnz
in
int
add
ss
ret
pcmpgtw
cmpl
mov
adc
fwait
or
jl
mov
and
ljmp
mov
stc
pop
pop
out
cmp
cmp
jne
and
imul
leave
scas
aas
out
push
cld
add
xchg
in
frstor
addr16
xchg
scas
jb
mov
gs
arpl
push
mov
xor
cwtl
sahf
dec
jnp
cmp
push
inc
or
and
lods
pop
and
sbb
sbb
hlt
icebp
leave
cmp
addr16
addr16
mov
outsl
shl
push
ss
and
or
or
mov
xor
jg
mov
push
loopne
mov
cli
daa
cwtl
cmp
sub
call
jne
fistpll
fdivp
clc
cmp
pop
push
lds
inc
and
mov
outsb
jmp
imul
out
jmp
cmpl
js
mov
out
push
mov
rorb
or
push
shlb
lods
xchg
fisubl
shlb
test
nop
movsb
pop
fnstsw
pop
popf
dec
outsb
lods
ficomps
pop
sbb
jge
xor
adc
inc
mov
xchg
addr16
jo
add
outsb
push
imul
push
xor
ret
inc
add
cmc
mov
or
add
mov
ljmp
push
ret
dec
push
sbb
pop
cmc
lret
ss
mov
orl
aad
jae
in
sbb
out
insb
mov
xchg
push
rolb
rclb
add
outsb
mul
inc
mov
daa
fdivl
push
mov
sarb
inc
rcll
mov
push
and
lret
mov
pop
sub
add
or
rorl
xorb
dec
in
shlb
jnp
push
push
inc
loopne
shl
cmp
or
xlat
pop
mov
andnps
xor
negb
das
push
xchg
mov
cs
int
push
or
jmp
adc
add
sbbl
mov
jns
sbb
mov
jns
jp
push
xor
rcrb
jno
hlt
leave
add
int3
xor
lcall
pop
pop
test
bound
jle
cmp
lock
mov
je
cmp
fcmovnu
movlps
mov
daa
jmp
inc
gs
and
mov
rcrl
into
cmp
adc
mov
movsb
mov
dec
lret
mov
rcrb
mov
add
mov
outsl
je
mov
in
push
cmp
hlt
fxch
negb
dec
mov
inc
fstpt
getsec
and
adc
in
es
mov
xchg
inc
xchg
add
mov
fistpl
js
add
ja
jne
mov
xchg
sbb
sarl
rcrb
jns
adc
push
adcb
add
sbb
arpl
sub
sar
mov
ret
xchg
and
add
jo
xchg
sbb
sarl
jne
lret
adc
into
fwait
inc
mov
sbb
std
lock
rcl
adc
add
sti
mov
outsl
aad
popa
sahf
cmp
inc
xchg
mov
jge
pop
into
call
mov
jb
xchg
mov
subl
push
aas
mov
pop
push
sub
xor
push
push
icebp
hlt
shrl
adc
xchg
inc
lret
cmp
mov
adc
pop
push
pop
pop
inc
cld
adc
daa
rclb
ret
cs
pop
stc
mov
icebp
sahf
ljmp
into
sbb
or
inc
mov
cmp
push
sub
jbe
adc
int3
push
mov
lods
lock
push
mov
bound
cmpsl
dec
or
mov
in
out
sbb
jb
sub
pop
sbb
or
xor
inc
adc
rcrl
nop
mov
dec
mov
xchg
imul
xor
js
je
mov
call
jo
aad
scas
and
in
pop
out
jl
cld
or
inc
sbb
jne
je
stc
mov
xchg
pop
out
push
aam
xor
into
pop
mov
and
push
repz
aad
jbe
pop
and
shrl
jbe
dec
dec
bound
in
adc
sbb
icebp
sti
mov
add
sbb
pop
data16
mov
arpl
xorl
shrb
scas
mov
mov
lds
fnstenv
test
in
add
mov
shr
mov
enter
sub
adc
inc
dec
mov
aam
mov
xchg
mov
or
mov
xor
lret
stc
mov
lahf
sbb
std
repz
cmpsl
popf
bound
lahf
int3
push
jae
add
adc
push
jp
stc
fsubp
inc
push
stos
sbb
and
mov
out
and
ja
aad
popf
dec
int3
je
cs
xlat
mov
add
xchg
cmp
cltd
and
aas
mov
cmp
call
lret
aad
iret
cwtl
scas
or
dec
es
mov
and
adc
xor
mov
xor
jnp
xor
sub
sbb
lcall
dec
push
pop
mov
out
mov
test
push
push
fdivrl
movsb
lret
mov
divl
adc
sub
dec
ss
xor
cmp
push
and
fs
fisubrl
divps
jge
sarl
sub
add
xlat
xor
ljmp
mov
add
pushf
int
daa
hlt
cli
xor
mov
repnz
dec
fwait
test
es
xlat
in
mov
or
mov
mov
pop
dec
loope
mov
pushf
adc
call
cmp
shrb
pop
or
enter
or
mov
mov
inc
sub
push
jg
cld
lret
adc
xchg
pop
mov
sbb
push
inc
test
cltd
jp
dec
adc
push
out
mov
xor
jb
pusha
pop
push
mov
xor
sub
or
xor
mov
popf
inc
jnp
loope
push
jl
or
imul
lods
mov
xchg
ss
stos
mov
cmp
mov
dec
incb
add
mov
stc
jae
not
add
xchg
pop
data16
mov
out
inc
in
adcb
aam
inc
xor
fsubl
sahf
inc
push
jno
iret
sbb
sub
xchg
inc
cmp
sbb
lock
scas
jb
test
mov
adc
jbe
mov
inc
mov
mov
or
fldl
inc
out
push
repnz
mov
or
mov
mov
nop
sub
jns
mov
cmpsl
scas
pop
test
jmp
ror
and
sub
sbb
inc
jb
or
icebp
aam
xor
jbe
cmp
mov
dec
and
pusha
xchg
std
xchg
sbb
xor
test
andb
nop
xor
xor
cmp
movsl
mov
test
sub
jmp
sbb
dec
inc
fnsave
or
mov
aad
lret
rcll
cmpsl
std
rorb
push
mov
inc
mov
fdivp
sbb
aas
repnz
insb
pushf
and
push
sbb
inc
mov
ss
mov
call
add
push
test
mov
mov
cmc
in
lahf
push
mov
add
lds
mov
push
pop
sbb
dec
pop
pop
add
scas
int
jmp
pop
adc
mov
aas
shll
fs
dec
adc
and
mov
push
out
fnstcw
arpl
cmp
mov
mov
push
jbe
scas
pop
call
push
xorl
mov
repnz
sbb
jb
pop
std
or
roll
out
cmp
stos
imul
repnz
jnp
enter
sti
or
jmp
cs
pop
sub
sub
adc
mov
rcr
out
mov
dec
cmp
jne
outsl
mov
cmp
mov
pop
sti
out
adc
inc
sub
popa
in
mov
jle
xlat
cmp
push
jge
and
icebp
movsl
xor
dec
jle
cmp
adc
xchg
cmp
in
mov
cmp
xchg
sti
dec
jg
cmp
nop
mov
cli
lock
cmp
out
loope
push
ficompl
sub
hlt
stos
inc
sbb
cld
or
xchg
ss
leave
test
rol
xchg
or
mov
roll
into
icebp
jecxz
pop
testb
inc
xor
scas
xchg
cmpsb
xchg
test
mov
dec
and
xchg
mov
mov
iret
mov
lea
push
jp
and
push
fwait
cmp
cmc
mov
and
cmp
incl
inc
stc
xchg
adc
sub
lcall
push
mov
mov
mov
sarb
std
push
int
clc
mov
sub
inc
and
out
xchg
lret
arpl
mov
stc
sub
test
adc
divl
test
inc
sub
mov
out
sub
sub
scas
test
test
xor
nop
push
xchg
ds
xlat
add
mov
xchg
mov
jns
jl
test
push
lret
inc
lret
in
rcrl
ljmp
idivb
dec
sbb
mov
cld
imul
push
mov
inc
rol
dec
daa
jg
jns
cmp
mov
enter
mov
ss
jno
in
adc
pop
fs
jmp
shl
add
movsb
push
inc
cs
insb
es
imul
int3
test
jnp
aas
shl
ljmp
ss
ja
xchg
jg
call
enter
ret
mov
jge
xchg
sub
xor
pop
shll
adc
pop
ss
pusha
sbb
mov
jb
xchg
mov
shl
cmp
sub
lods
das
stos
fdecstp
and
idiv
into
inc
sub
sbb
insb
sub
cmp
adc
pop
push
jl
mov
sbb
mov
sbb
popa
xor
cli
jae
in
mov
cmp
data16
lret
lea
sbb
mov
xor
sub
mov
movsl
int
xor
and
inc
jb
fdivrs
dec
orl
fs
mov
movsl
into
into
clc
sbb
add
movsl
and
inc
call
in
cmp
sbb
xchg
mov
mov
xchg
mov
xchg
stc
add
test
push
mov
add
and
and
cmp
sbb
lahf
xchg
js
clc
adc
lods
xchg
fwait
cmp
jb
imul
icebp
out
inc
shrb
sti
mov
aam
add
stos
pop
push
adcl
pop
xchg
in
ret
lahf
mov
mov
mov
dec
jp
sub
cmp
rcr
xchg
and
hlt
cld
inc
aam
cmp
das
sub
clc
testl
out
ljmp
sbbb
mov
xchg
std
aas
imul
and
mov
or
into
imul
in
loop
stos
jg
xchg
add
xchg
mov
push
sar
push
sub
repz
mov
xchg
mov
or
jne
adc
xchg
addb
mov
ror
xor
shlb
sub
adc
adc
adc
dec
test
jbe
pop
and
lea
jp
mov
pop
int3
cltd
cmc
cmp
in
xor
pop
mov
sub
aaa
fwait
outsb
sub
jg,pt
lahf
lock
insl
sub
cld
xchg
push
push
xchg
sub
and
xor
fbld
addr16
dec
int3
sub
add
jne
mov
mov
lods
mov
movsb
scas
mov
add
int
int
cmpsb
adc
mov
pop
add
aad
inc
aad
jg
mov
xchg
push
pop
mov
pop
mov
or
mov
xchg
or
lods
dec
push
outsl
sbb
shll
jl
dec
adc
xor
aad
insb
sbb
inc
leave
pop
icebp
loope
xor
push
repnz
fisubs
popf
jecxz
sbb
test
repnz
pop
fcompp
cmp
xchg
dec
dec
aam
push
xchg
inc
jbe
rclb
mov
cli
pop
xchg
lret
nop
fnstcw
mov
push
dec
dec
stc
test
sbb
hlt
sbb
inc
movsb
ljmp
dec
std
dec
or
xor
mov
mov
insl
clc
imul
sub
stc
arpl
mov
mov
int3
cmp
push
scas
mov
push
bound
add
lea
aam
dec
pop
mov
out
adc
xor
push
loopne
add
mov
cli
rorb
xchg
aas
andb
fdivl
inc
into
push
adc
jb
inc
rcpps
repz
mov
hlt
inc
movsb
sub
adc
push
sarl
ds
jnp
inc
lcall
insb
leave
and
inc
xchg
pop
shrb
shl
jb
pop
xchg
sub
arpl
std
shl
fstpt
inc
mov
into
faddl
adc
sbb
dec
add
out
aas
or
out
xchg
stc
cmp
mov
jecxz
lret
es
mov
adc
jge
mov
mov
jnp
pop
sub
lods
and
inc
mov
and
ret
rclb
dec
hlt
inc
mov
cwtl
pop
mov
scas
and
or
fcompl
sub
mov
push
inc
xor
dec
pop
sarb
dec
mov
mov
jne
or
in
fidivs
dec
adc
jge
xchg
push
call
ds
jp
xor
ss
iret
xlat
push
add
jne
jge
loop
pop
scas
xor
divb
outsl
pop
xor
js
sbb
xchg
scas
stos
adc
bound
cwtl
data16
mov
dec
rolb
decb
pop
dec
out
cld
lea
pop
into
fsts
rol
pop
ret
lods
or
mov
loopne
inc
pop
fwait
mov
fdivrs
sub
fwait
dec
negl
fldenv
inc
xor
inc
add
cmpsl
movd
xchg
pop
test
xor
sub
xchg
xchg
sbbl
clc
cli
dec
repnz
push
inc
and
push
push
or
jb
mov
dec
pop
scas
pusha
rorl
out
mov
psubsw
dec
cmp
in
ret
out
mov
xor
loopne
mov
popf
out
das
xchg
sbb
inc
test
xor
jbe
inc
mov
out
dec
flds
mov
ret
lea
sti
jo
xchg
jle
mov
pushf
loope
add
aad
inc
mov
mov
cwtl
mov
cli
lret
cltd
pusha
das
mov
outsl
cmp
in
outsb
add
in
out
out
adc
xchg
jecxz
mov
sub
adcl
outsl
xchg
mov
repz
fs
sbb
fistpl
xor
repz
adc
mov
and
xchg
cmp
adc
gs
aaa
ljmp
lea
es
out
xor
xchg
inc
shll
outsb
dec
hlt
xchg
jne
shrl
mov
cwtl
xchg
push
fwait
popa
mov
fistpl
push
jp
jp
and
jp
out
call
pop
mov
test
fadds
sbb
mov
adc
and
mov
arpl
sub
adc
aas
or
mul
sahf
pop
mov
ret
jmp
fldl
xlat
addr16
jg
repz
mov
adc
mov
jo
bound
mov
xchg
and
test
pushf
fs
or
adc
jecxz
sub
pop
int
jl
js
std
cmp
mov
mov
adc
jmp
mov
mov
inc
pop
or
mov
pop
or
pusha
std
sub
adc
rcl
dec
xchg
jnp
and
test
daa
test
xchg
jns
mov
mov
pop
gs
and
stc
dec
fists
ds
in
jmp
ret
adc
addr16
je
sub
das
and
sbb
inc
sub
fisttpll
out
test
scas
cmp
mov
pop
in
ret
xor
pusha
bound
cmp
inc
cmc
and
cld
scas
dec
push
fs
in
jl
decl
sbb
mov
or
sbbl
push
jl
jmp
notb
out
scas
xchg
xchg
mov
mov
xor
fsubs
pop
shll
fbstp
jo
xor
loopne
fcomps
inc
push
test
fcomp
idivb
es
sarl
mov
aad
in
or
lock
xor
jae
cmp
movzbl
std
sub
leave
adcb
rolb
xor
inc
mov
das
xlat
xchg
dec
jg
jns
xchg
scas
pop
or
cmpsl
scas
inc
outsb
scas
sbb
repnz
pop
pop
add
jmp
lret
insl
lds
sbb
addl
popf
xor
push
cmpsl
lock
add
leave
xor
data16
push
pop
fadds
sub
add
and
fidivs
lcall
in
push
mov
add
add
cmp
dec
xchg
xor
test
push
int
adc
cltd
jl
imul
adc
clc
xor
xchg
das
cmc
pop
push
lret
hlt
inc
gs
cwtl
mov
test
mov
xchg
mov
fidivs
fmul
lahf
dec
dec
jl
test
cmp
fcmovnbe
lcall
dec
aam
pop
add
in
pop
insb
jl
sub
pop
mov
jle
sahf
mov
sbb
insb
out
movsb
hlt
lcall
jne
jmp
mov
xchg
jge
sbb
mov
dec
lahf
pop
mov
lret
xor
push
ds
jl
xchg
mov
cmp
xchg
mov
cmp
jecxz
aad
repnz
pop
adc
dec
faddl
pop
scas
push
int
xor
push
cmp
lret
stc
gs
mov
add
xchg
in
push
push
mov
movsb
pushf
sti
cmp
jmp
roll
mov
subb
inc
je
out
shlb
pusha
pop
mov
into
jno
lret
mov
mov
pop
sbb
test
pop
dec
out
cmp
jnp
pushw
test
jl
add
daa
jno
ljmp
fdivrl
test
fisttpl
mov
in
fdivrs
mov
shl
jns
je
lds
xchg
xor
add
jl
adc
out
cmp
and
lods
loop
ds
je
fstpt
popf
lcall
sarl
cs
mov
stos
dec
mov
or
ds
int
jecxz
cmp
lods
jae
mov
add
mov
fwait
push
push
push
fidivrl
lahf
jecxz
stc
test
xchg
scas
xchg
push
popa
inc
xlat
rclb
in
sub
sbb
icebp
xchg
jb
cmpsb
adcb
test
lret
mov
mov
mov
pop
lods
hlt
mov
xchg
mov
pushf
adc
aad
sti
jbe
mov
jne
popf
test
aam
mov
adc
aaa
xor
insb
cld
mov
outsb
leave
mov
test
jns
xchg
repnz
push
cwtl
out
loope
xor
inc
push
adc
sub
jnp
arpl
mov
iret
inc
shl
add
xor
inc
or
hlt
cmp
mov
lods
notb
bound
or
sbb
jmp
xchg
adc
push
adc
out
xor
push
subb
or
adc
aad
xor
push
cwtl
inc
sbb
sti
or
loope
stc
push
push
inc
xlat
shrl
dec
inc
add
xor
dec
sub
adc
mov
push
adc
push
sub
sbb
je
test
inc
cld
repz
mov
mov
test
push
add
imul
insb
ret
dec
pop
movsb
lods
cltd
dec
pop
push
jae
cmovo
stos
imul
addr16
ds
test
test
push
scas
xor
mov
jne
mov
mov
sbb
out
xor
xchg
dec
cmc
xchg
jnp
xchg
loopne
cmc
mov
sbb
push
add
in
mov
das
gs
gs
insl
scas
inc
cmp
enter
sbb
shll
sahf
push
fcomi
loop
adc
xchg
negb
divl
and
vpslld
push
or
jno
sarl
sub
mov
test
rcrb
xor
or
subl
mov
outsl
push
pusha
js
jnp
fisubs
loop
jnp
and
std
add
jne
test
push
sarl
loopne
out
mov
mov
inc
inc
push
inc
jp
xchg
mov
sub
jmp
or
out
adcl
pop
push
jmp
dec
outsb
imul
jecxz
cmp
mov
push
pop
daa
jmp
dec
mov
lret
pushf
cmp
push
shlb
lock
ds
dec
mov
push
shlb
pop
inc
lds
adc
pusha
test
pop
and
arpl
sbb
loop
imul
sbb
jge
inc
pop
iret
iret
mov
fcmove
loop
push
aas
fistl
push
in
jns
pop
dec
mov
cmp
sar
pusha
popa
test
or
test
les
sbb
mov
sti
call
jge
mov
push
add
scas
adc
mov
mov
push
mov
xor
popa
push
cmp
jecxz
fwait
and
dec
adc
ret
aam
mov
mov
in
cmpsb
inc
repz
jno
fiaddl
cmp
add
fcoms
in
enter
fisubrl
cmp
or
mov
pop
dec
nop
inc
add
scas
daa
loope
cmpsl
jg
fidivl
imul
jl
popa
mov
xchg
mov
out
lods
mov
adc
xchg
push
jns
iret
sbb
stos
or
xor
xor
inc
mov
or
stos
or
pushl
es
inc
cs
inc
jb
lods
and
in
arpl
or
cwtl
clc
mov
jl
pop
xchg
insl
mov
loopne
push
mov
std
push
cli
jecxz
cmpsb
push
inc
leave
pop
mov
dec
addr16
jp
addr16
and
xchg
test
movsl
mov
mov
rcll
mov
xchg
fmul
inc
adc
jns
and
push
mov
mov
mov
cmp
test
repz
xchg
push
cwtl
cmp
push
sti
hlt
sbb
fnstsw
lock
in
add
adc
sahf
adc
mov
shll
xor
lret
aaa
call
cmpsb
icebp
push
cli
and
push
mov
pop
mov
rolb
lds
push
loopne
inc
mov
mov
outsb
or
out
adc
xor
or
sub
jne
lahf
es
and
push
dec
adc
jb
mov
or
pop
mov
cmpsl
add
inc
jge
inc
dec
cmp
push
or
int3
mov
cmp
lock
imul
stc
shll
jp
jle
xchg
inc
dec
cmpsl
dec
fidivs
sub
pop
cltd
or
fstpt
or
jmp
pushf
jge
stos
bound
sbb
rclb
popa
test
ss
pop
es
bound
pop
lahf
add
pop
pop
pop
sbb
std
sub
adc
dec
dec
cli
pop
les
stc
add
pusha
seto
add
js
and
push
inc
xchg
pop
dec
addr16
push
sbb
add
and
jge
mov
int3
sbb
mov
dec
jle
shll
sarb
add
nop
sbb
outsb
xchg
push
jb
pop
xchg
pop
lret
xchg
fcomps
inc
je
or
jne
cmp
xchg
push
and
pop
mov
mov
pushf
ds
fdivs
hlt
and
arpl
fstpt
outsl
mov
xchg
test
or
adc
addr16
loopne
cld
pop
xor
mov
addr16
or
loope
adc
add
dec
sub
mov
std
dec
in
mov
int
test
inc
mov
or
insl
mov
add
stos
fisubrs
mov
hlt
call
xchg
cmp
mov
xchg
mov
push
jne
dec
jmp
cwtl
das
rcll
xchg
pusha
ljmp
and
repz
xor
xchg
gs
push
cltd
cmpsb
outsb
daa
push
add
dec
sbb
and
subl
pop
out
sub
push
inc
fisttpl
jne
sbb
dec
lahf
mov
cld
insb
xor
inc
pop
testb
fcom
stos
mov
jmp
aam
lret
push
nop
shrl
pop
in
ljmp
jge
shl
dec
push
jbe
sarb
adc
adc
push
loopne
mov
sbb
jb
das
xlat
add
rorl
cmp
out
xor
pop
push
mov
ja
sti
out
or
sbb
stos
xchg
bound
fidivrs
popa
push
jg
out
mov
and
and
xor
pushf
adc
jmp
lahf
xor
lds
mov
and
aad
xchg
leave
mov
fidivs
cmp
ds
ss
cwtl
mov
jecxz
loop
cmp
outsb
scas
cmp
mov
nop
mov
notb
inc
and
mov
fwait
push
jno
out
jmp
pop
dec
inc
push
jle
mov
icebp
adc
out
or
ja
subb
and
fbstp
popf
inc
sub
mov
leave
mov
or
mov
shrb
insl
sub
cwtl
popf
fwait
pop
fisubrs
inc
xorb
xor
ror
jb
fcom
jb
or
hlt
xor
cs
fmull
ret
rclb
addr16
push
addb
fisubrl
ja
stos
aam
shrl
fsub
daa
pushf
popa
mov
xchg
sub
sbbb
inc
jns
push
xor
cmp
mov
out
scas
pop
push
pop
je
sbb
pop
les
add
push
stos
scas
aaa
movsb
xchg
push
or
mov
adc
sub
jno
jbe
lahf
leave
shr
notb
inc
cld
ljmp
inc
dec
pop
and
mov
xor
inc
sub
daa
mov
push
ror
mov
xor
adc
push
sbbb
in
imul
rorl
cmp
into
mov
xor
shrl
xchg
sub
addb
rcr
in
xor
fimull
xor
ds
cld
rcrb
scas
call
sbb
cmp
pop
sbb
test
xchg
add
into
sub
scas
addl
popf
sub
test
mov
sub
or
and
pushf
mov
cmp
push
pop
scas
inc
mov
jp
les
data16
in
aaa
pushf
je
sahf
gs
push
mov
push
and
mov
sahf
xchg
sbb
sbb
add
mov
mov
dec
out
lret
addr16
sub
inc
push
outsl
push
cmp
add
dec
out
adc
cmp
jb
fldl
xchg
xlat
add
pop
adc
fnstsw
jno
gs
mov
ljmp
cld
mov
mov
ljmp
inc
mov
cmp
cmp
lret
pop
enter
cmp
sub
xrelease
dec
pop
and
dec
jmp
ds
enter
adc
js
ljmp
mov
fbld
and
cmp
pop
jecxz
out
mov
jnp
inc
faddl
xorl
outsb
dec
jb
into
lcall
xchg
insl
rcrb
lods
adc
mov
mov
dec
mov
std
mov
push
les
jecxz
push
ret
fsubr
cs
enter
cld
mov
lods
fildll
push
je
ret
and
int
xchg
pop
pop
gs
mov
sbb
repz
lahf
pop
popf
dec
seto
pop
mov
test
inc
jmp
xchg
mov
mov
in
mov
or
dec
std
mov
sbb
test
or
adc
outsb
dec
adc
int3
jae
cmpsl
jb
sub
vminpd
mov
adc
xor
jle
sbb
and
jne
lock
aad
les
sti
add
mul
and
mov
push
dec
adc
loope
pop
scas
pop
adc
ja
pop
pusha
mov
push
gs
jo
es
mov
or
push
enter
jnp
mov
inc
and
pusha
test
bound
scas
push
enter
std
cmp
jne
cs
jno
mov
pop
adcb
out
addr16
movsl
in
ds
add
sahf
mov
scas
inc
leave
jo
loop
in
nopl
arpl
cmp
jg
fistps
sbb
lret
push
inc
jno
xor
out
cmp
cmp
test
mov
or
cmp
add
sbbb
sti
and
mov
int
pop
popa
push
mov
add
xchg
aaa
in
or
cmc
imul
jae
outsl
push
fsubl
test
sub
js
cmp
enter
mov
loop
inc
aaa
add
das
mov
std
sbb
test
shll
inc
add
les
push
sub
repz
cmp
push
insl
call
in
das
enter
mov
dec
in
cmp
inc
adc
xchg
subb
mov
lods
add
mov
pop
jmp
aaa
dec
mov
cvttps2pi
mov
xchg
mov
xor
ud1
das
xlat
and
push
ja
iret
aaa
mov
add
stos
mov
ficomps
cmp
push
pop
cmpsb
pop
pop
subl
std
add
adc
in
jp
lahf
mov
popf
jg
sub
mov
scas
cmp
add
je
dec
pusha
lret
sub
aaa
insl
cmpsb
mov
jo
pop
ret
xchg
dec
add
xor
push
popf
fisttpll
ret
push
out
push
xchg
inc
push
pextrw
loop,pt
enter
sbb
push
add
push
or
pop
pop
out
xchg
cmp
imul
sti
scas
addr16
or
jbe
xchg
add
rcrb
ficomps
mov
jae
sbb
push
movsl
pusha
out
inc
mov
test
dec
and
inc
push
mov
pop
ss
ret
add
mov
push
cmp
push
insb
adc
sub
pop
repz
outsl
push
inc
insb
test
shlb
es
out
loopne
and
or
cli
xchg
sbb
sub
mov
push
int3
dec
cmp
mov
sub
mov
fldt
dec
pop
pop
js
mov
rclb
sub
andb
aad
xor
add
ret
cli
jnp
push
push
int
mov
cmpsl
pop
push
push
mov
aaa
cld
push
cltd
dec
mov
cmp
call
pushf
roll
orb
pop
sbb
jb
adc
and
je
addr16
out
or
mov
leave
inc
sbb
sahf
push
mov
fmul
aam
imul
negl
mov
push
adc
inc
movsb
popa
mov
popf
sub
call
shll
xorl
sarb
int3
and
inc
mov
loop
inc
xor
jmp
pusha
in
push
add
in
mov
aas
shrb
hlt
pop
and
dec
mov
aaa
inc
clc
fidivrs
jecxz
xor
xchg
push
add
inc
lret
xchg
push
push
rorl
cmpsb
aaa
xchg
xchg
mov
jg
lea
in
cmp
mov
jp
nop
mov
outsb
xor
hlt
das
sbb
outsl
jno
add
outsb
test
dec
popa
and
lcall
iret
xchg
mov
ss
out
cld
push
sbb
mov
daa
test
cwtl
lahf
insb
cmp
mov
or
push
fstps
dec
dec
jp
add
call
cmp
dec
and
ret
push
in
fcmovne
cmp
jecxz
pop
pop
inc
into
jmp
sbb
pop
cmp
mov
pop
mov
shrb
push
xchg
arpl
clc
int
push
cli
mov
das
icebp
push
mov
daa
leave
cmp
out
jns
shl
ret
pushf
lock
scas
add
mov
out
idivl
jp
dec
jecxz
dec
jae
adc
clc
data16
mov
es
dec
sbb
mov
adc
hlt
imul
mov
adc
imul
das
cmp
adc
aas
or
divl
cmp
mov
jno
out
cli
fyl2x
je
mov
test
imul
data16
ljmp
loop
out
push
out
mov
daa
int3
test
xor
sarb
addr16
scas
insl
rcrl
mov
dec
xchg
hlt
xchg
dec
cmp
dec
cmp
jp
push
or
push
xchg
cld
mov
enter
lds
push
ds
shr
lret
int
outsb
bswap
pusha
fnop
arpl
daa
cltd
movsl
sub
cmp
inc
das
dec
inc
adc
dec
lret
push
pop
es
das
and
jnp
imul
dec
jnp
movsl
push
inc
in
lods
and
mov
xor
jbe
aad
in
fwait
jno
stos
xchg
inc
xlat
dec
adc
sbb
scas
mov
dec
mov
pop
punpcklbw
dec
out
int
incb
cmpsb
imul
jno
stos
fs
dec
leave
lock
jb
mov
add
mov
xor
mov
pop
add
and
fwait
jnp
xchg
adc
ret
cmpsb
sbb
adc
cmp
jbe
jle
push
cmc
and
in
cmpsb
aam
jp
mov
test
ds
add
sub
je
mov
sub
rorl
dec
sub
and
and
shl
xchg
mov
int3
sub
scas
cmp
jp
lret
jb
jge
sub
mov
sub
std
cwtl
mov
pusha
mov
outsb
cmpsb
aaa
pop
dec
insl
sub
nop
lods
incl
icebp
jbe
mov
dec
scas
loop
loopne
int
lret
mov
aaa
aad
roll
in
pop
mov
cmp
cmpsl
add
es
jmp
ja
push
loopne
pop
inc
jns
lcall
mov
movsb
sbb
popa
inc
cmp
push
mov
push
push
pop
out
test
add
add
xchg
lret
out
fucomip
xor
subl
push
js
inc
push
loopne
adc
out
mov
stos
xor
repnz
fstps
and
xlat
xchg
loope
inc
push
jecxz
adc
filds
and
loopne
fidivs
popf
cwtl
mov
testl
enter
push
std
aam
outsb
in
push
dec
fdivs
mov
jge
test
int
cwtl
ljmp
inc
int
in
leave
dec
xlat
fidivs
mov
adc
mov
out
int
test
pop
out
push
mov
pop
sub
std
cmp
push
xor
xchg
xor
hlt
scas
sub
out
jmp
out
mov
fwait
loope
xor
int3
or
arpl
pop
imul
fs
lret
iret
test
pop
xlat
pop
test
sahf
je
cmp
xchg
pusha
ja
popa
lea
xor
sbb
jne
sbb
lahf
push
xor
pop
dec
push
push
mov
iret
cmpsb
rolb
push
cwtl
mov
rcr
outsb
mov
gs
and
mov
jecxz
dec
sub
xchg
xlat
cmp
aad
inc
repnz
data16
pop
sub
mov
xchg
or
xlat
imulb
fwait
aaa
lahf
test
xor
jo
xor
cvtps2pd
out
cmp
outsb
lret
es
cwtl
and
xchg
pop
mov
ljmp
add
and
pusha
inc
dec
fdivl
ror
xchg
or
shrb
push
aas
cmc
fimull
arpl
stos
push
mov
jo
cmc
and
mov
dec
add
cmp
push
or
mov
sbb
pop
popf
data16
add
arpl
sbbl
test
lcall
adc
ret
xchg
call
cmp
sbb
mov
add
in
jne
mov
out
loop
cmpsb
out
pop
add
js
xchg
lahf
or
enter
push
push
dec
sbb
mov
and
std
xlat
push
push
gs
lret
out
jle
fcomps
ds
daa
xor
test
jae
imul
xchg
je
adc
mov
ret
jno
push
mov
test
inc
jnp
jmp
jmp
jp
dec
hlt
and
pushf
dec
call
cmp
xlat
gs
push
push
add
mov
mov
cmp
dec
cld
gs
jg
mov
mov
or
test
adc
js
addr16
xor
lods
cltd
cmp
negb
pop
lret
add
stc
into
cld
movsw
lahf
sbbl
pop
adc
pushl
cmpsb
ret
xchg
jne
and
inc
cltd
mov
xchg
inc
outsl
cld
mov
cmp
sub
pop
lods
mov
aas
sbb
mov
xor
je
mov
cs
imul
dec
fs
std
jg
cwtl
in
dec
cmp
into
inc
repnz
or
fidivrs
ret
push
xchg
fcompl
mov
fsub
jmp
mov
mov
push
add
jns
fs
frstpm(287
or
adc
pop
mov
jg
nop
pop
and
int3
fimuls
mov
and
push
jle
ror
popa
fcomip
inc
cmp
cmp
add
jne
lds
sbb
xor
pop
xor
xchg
imul
and
cld
hlt
loope
jl
cmpsl
out
lock
out
fs
ret
lods
jo
insl
sbb
bound
inc
or
xchg
pusha
stc
cld
jnp
jb
ja
pop
add
test
push
test
ret
add
or
mov
inc
cmpsb
stc
pop
sub
push
inc
js
loope
xchg
movsl
mov
je
movsl
mov
pushf
cmc
xchg
int
jae
imul
leave
push
mov
mov
jecxz
aam
mov
dec
push
push
sub
jle
je
add
or
ljmp
shrb
mov
xor
pusha
pop
dec
ficompl
push
xchg
cltd
js
outsb
inc
xchg
mov
shlb
jnp
ror
lea
fucompp
or
jge
mov
jno
cmc
mov
fwait
cmp
pop
in
sahf
sbb
inc
sub
jno
add
jb
sub
xor
xchg
int3
js
rcrl
out
lahf
enter
lock
out
dec
loopne
cmp
mov
cmp
sbb
inc
add
clc
out
mov
and
or
aad
xchg
repz
iret
jmp
pop
jae
mov
lds
push
xchg
fsubl
xchg
pop
or
testb
inc
scas
and
xchg
inc
movsl
adc
push
repnz
add
pop
das
dec
or
and
pop
mov
adc
cmp
shll
sub
sbb
addl
xor
ret
mov
mov
inc
dec
adc
lcall
cs
pop
dec
jns
adc
adc
dec
sub
fiadds
call
cmp
adc
leave
aam
sbb
pop
stc
jle
push
dec
fcmovne
push
nop
je
pop
mov
iret
stos
sub
test
mov
ret
mov
or
std
cmp
aas
and
mov
mov
push
neg
pop
hlt
mov
adc
lods
and
cltd
fmul
and
cmpsl
loop
adcb
cmc
pop
adc
and
jp
sbb
mov
jno
push
std
je
or
ret
and
inc
leave
and
inc
cmc
es
dec
pop
mov
mov
mov
pop
in
mov
xchg
sahf
fistl
pushf
and
add
cmp
in
cwtl
popf
and
mov
fmul
movsb
lea
sarl
jno
sbb
call
mov
or
jns
lea
jnp
sub
mov
in
aam
dec
mov
movsl
add
jne
cltd
fcompl
mov
and
mov
push
lods
sbb
aam
loope
stos
mov
xchg
xchg
aam
lahf
or
lds
cmp
or
scas
test
testl
jmp
mov
insb
imul
add
je
and
push
sub
sbb
test
xchg
call
xchg
loopne
lret
addb
mov
jge
test
jp
adc
cltd
fwait
push
popa
mov
bnd
sbb
xor
and
bnd
mov
sbb
and
pushf
andl
adc
dec
je
jmp
cmp
adc
ss
cmc
cmp
cmp
inc
jp
add
sbb
mov
inc
inc
pop
inc
leave
jae
je
cmp
and
inc
cltd
and
ss
sbbb
ljmp
add
xor
xchg
xchg
popf
mov
add
jbe
cwtl
push
out
push
mov
fidivrs
in
in
xorb
lds
dec
ss
lar
aas
and
mov
pushf
aam
cld
cs
lock
inc
rep
sbb
jg
dec
sbb
dec
frstor
insl
out
fsub
and
movsl
ffreep
push
mov
fwait
mov
mov
orl
dec
xlat
mov
pop
ror
jg
dec
xchg
loopne
imul
mov
rolb
jp
sbb
jbe
xor
xor
orb
inc
sbb
nop
mov
sbb
cmpsl
xor
sbb
add
cmpsl
sbb
mov
dec
pop
lods
adc
aad
xor
mov
or
mov
imul
pusha
repz
rcr
aaa
kunpckwd
jmp
push
mov
and
xchg
cs
lahf
mov
data16
dec
in
pop
lods
test
add
out
out
jmp
andl
popa
cmp
repnz
addb
mov
pop
mov
xchg
shr
fdivs
cmp
cmp
je
popa
inc
sbb
mov
insl
stos
inc
jns
scas
jnp
aas
leave
stc
lock
jmp
xor
pop
pop
mov
fsubr
inc
inc
lds
filds
mov
lret
mov
cltd
inc
lea
push
sbb
out
fucomip
mov
xor
sbb
dec
add
xchg
or
sub
fldt
add
clc
pop
jb
xchg
mov
movsb
sub
push
xchg
or
mov
xlat
push
mov
in
das
add
mov
cmpsb
ret
je
sbb
insb
int
pop
stos
testb
pop
pusha
lcall
lret
pusha
push
bswap
loop
fsubrp
and
into
pop
add
sbb
add
inc
jnp
lret
imull
jl
adc
idivb
mov
cmp
inc
push
mov
incl
mov
jae
cmp
push
bound
push
jbe
rorb
lock
shlb
and
lock
jbe
add
in
ss
cltd
sub
or
ficompl
test
loop
jg
stos
xor
icebp
fmul
divb
mov
mov
mov
or
cmp
test
cwtl
xchg
xchg
cli
cmp
cs
sbb
xor
mov
ljmp
lds
lods
pop
ret
mov
movsb
iret
jle
pop
or
cmp
sti
and
test
cs
fs
jne
stc
cld
loop
lcall
dec
push
xchg
in
pop
scas
cmp
out
jle
push
inc
xchg
dec
inc
xchg
pop
outsb
xchg
gs
in
arpl
pusha
and
rorl
scas
pop
ret
fwait
cmpsb
mov
stos
xor
lea
dec
popa
stc
add
mov
stos
pop
push
pushf
xor
cmp
adc
stos
stos
pop
iret
jge
in
movsb
add
mov
aaa
xorl
xchg
das
pop
jae
loop
cs
or
push
mov
les
shl
sbb
sbb
int3
dec
cmpsb
imul
mov
jle
add
xor
out
lods
push
repnz
xchg
repnz
xchg
lock
sbb
adcl
negb
jae
dec
les
sub
xchg
addr16
rcll
and
dec
leave
cmp
xor
mov
jge
addb
aas
fildl
cmpsb
test
mov
loop
int3
sbb
or
inc
sahf
shll
test
sub
fwait
nop
cmp
shll
shl
in
int
push
std
or
sbb
mov
and
test
and
in
icebp
lret
mov
push
fisttpl
jg
inc
pop
out
push
add
dec
jp
mov
scas
xchg
pop
ljmp
push
or
rorb
adc
iret
jae
pop
pop
push
scas
scas
adc
push
mov
jge
mov
mov
jb
cmp
xor
stc
aas
and
push
outsl
stos
sub
inc
jnp
pusha
gs
shrb
test
push
ja
xchg
popf
cmc
sub
aaa
outsb
pop
mov
ftst
fdivrs
xchg
pop
sub
shlb
dec
mov
hlt
js
hlt
outsb
rorl
pop
push
divl
adc
push
insl
jb
pusha
sbb
dec
push
fisttps
cltd
and
or
sarb
push
lea
clc
imul
xchg
ficoml
jecxz
push
lods
mov
or
add
xchg
jno
sub
loope
and
dec
popf
add
pop
cmp
scas
rolb
xchg
in
mov
xchg
dec
outsb
cmp
fcmovb
or
lcall
lcall
push
call
xchg
js
leave
and
data16
fistl
inc
inc
xchg
jp
inc
out
xchg
and
dec
mov
stc
lds
add
push
cmovns
mov
adc
or
fwait
popa
xchg
sbb
in
popa
je
xchg
push
js
scas
sub
jmp
mov
pop
dec
xchg
adc
sbb
mov
out
pop
faddl
movsl
mov
cld
push
psllw
xchg
subb
in
add
test
mov
or
sbb
mov
cs
aas
loopne
pop
add
cmpsb
rorl
jnp
iret
jp
push
jge
ficoml
add
popa
vpaddq
arpl
push
aas
mov
cmp
push
sub
add
mov
mov
lds
push
ds
lret
adc
inc
cmpsl
fdivrs
loop
pop
sbb
loop
jb
daa
push
mov
xchg
mov
cltd
shlb
push
faddl
xor
out
jl
cmp
cmp
cmp
sbb
lret
and
int3
jno
dec
pop
and
in
sahf
mov
mov
xchg
pop
test
cmpsl
cmp
mov
cmp
sarl
mov
shlb
pop
mov
jecxz
pushf
mov
xchg
xchg
loope
andl
in
cwtl
add
test
int
into
push
aam
or
pop
jnp
fchs
adc
xor
bound
clc
imul
movsb
jg
inc
aas
sub
xchg
cmpb
les
fwait
decl
jge
les
mov
jecxz
cmc
inc
call
inc
pop
dec
adc
inc
int3
std
cmp
stos
dec
lret
fmull
sti
dec
add
mov
cld
in
inc
mov
into
icebp
in
outsl
cmp
jmp
adc
dec
dec
scas
movsl
outsb
shll
fst
and
enter
push
lea
imul
push
inc
imul
imul
insb
pop
loop
lret
mov
push
mov
dec
sti
idiv
imul
jecxz
in
push
push
mov
outsb
push
jmp
outsl
sbb
cmp
jae
and
clc
fcoml
ljmp
jo
mov
ja
and
adc
mov
pushf
aas
xchg
test
inc
mov
movl
dec
mov
add
movb
sub
adc
loopne
sub
mov
nop
push
inc
push
pop
push
shll
ja
test
clc
dec
popf
jns
adc
cltd
or
pop
arpl
push
popa
and
inc
fdivl
std
shlb
cmpsb
lahf
out
out
jmp
loope
mov
adc
in
xchg
int3
test
and
test
incb
xor
pop
and
fadd
fimuls
outsl
sbb
ficoms
push
sarl
adc
xor
or
call
jl
xlat
mov
aam
and
cld
push
leave
jp
push
mov
out
repnz
adc
outsl
mov
pop
sub
push
or
or
test
jmp
dec
adc
cmp
inc
jp
stc
cltd
cmpsl
mov
loop
ret
js
or
xchg
repz
pusha
inc
mul
aad
mov
lds
lock
movsl
pusha
push
sbb
push
mov
dec
mov
scas
add
pop
jo
rcrl
loop
xor
cmpsb
pop
push
inc
daa
lret
push
mov
jmp
pop
pusha
arpl
pop
mov
sbb
lahf
lret
lds
in
stos
mov
mov
mov
mov
pusha
sub
jmp
xor
mov
repnz
cmp
test
cltd
or
pushf
mov
mov
loop
fldl
das
sub
push
call
icebp
add
dec
imul
cwtl
sub
pop
and
daa
orb
xchg
add
sti
movsl
insb
add
xor
imul
mov
shr
mov
mov
sub
addr16
hlt
inc
mov
movsb
popa
jg
jne
xchg
popa
rorb
cmp
mov
sbb
xchg
jns
add
mov
adc
fidivs
or
pmuludq
sbb
lret
adc
aaa
jb
sbb
mov
ret
pop
adc
or
add
mov
mov
ljmp
sbb
lahf
add
bound
shrl
lret
ljmp
inc
fisubs
pop
out
andb
ljmp
sub
pop
mov
xchg
push
dec
int
mov
int
sub
add
and
xlat
cmc
repz
and
xor
dec
dec
inc
cltd
and
adc
insb
mov
popf
sbb
ja
popa
nop
push
mov
sbb
aas
mov
xchg
dec
pop
cmp
cmp
cld
notb
lock
rcr
and
je
notb
data16
mov
cmp
adc
jle
mov
mov
inc
lds
and
arpl
inc
sbb
daa
into
scas
sbb
sti
dec
stc
ja
push
lret
push
jg
jnp
dec
sbb
add
frstor
in
adc
mov
cmp
jo
ja
loope
inc
sub
fs
movsb
mov
add
test
sub
jmp
gs
notb
and
cmp
inc
fidivrl
nop
mov
pop
xchg
sbb
adc
mov
mov
call
popf
sbb
das
pusha
jbe
mov
fiaddl
shl
pop
cmp
inc
jmp
call
pushf
loop
cli
inc
sub
sbb
add
pop
aaa
ds
iret
icebp
in
aas
in
mov
shll
cld
je
add
aas
test
ljmp
pop
push
jo
xchg
cmp
pushf
popa
hlt
pop
xor
and
cmp
or
push
ss
ds
loope
cwtd
cmp
xor
inc
add
icebp
fildll
push
cmc
xchg
mov
int3
mov
data16
stos
xchg
xchg
pop
test
mov
int3
sub
mov
nop
pop
mov
push
inc
dec
push
sub
insl
stos
aad
push
sbbb
ds
repz
push
cmpsb
dec
clc
nop
sub
inc
daa
xor
adc
inc
arpl
lods
test
pop
cmc
push
adc
test
dec
add
push
and
and
fcomi
mov
frstor
sbb
dec
pop
sti
add
out
lret
daa
test
jg
pop
mov
pushl
and
imul
mov
jnp
cmp
arpl
leave
mov
scas
add
or
cmp
loope
mov
fidivs
lds
or
inc
mov
inc
and
sti
in
jbe
and
adc
adc
xchg
mov
popa
adc
mov
sar
leave
xchg
sbb
or
mov
mov
into
mov
pop
xor
jle
pop
aas
xor
shlb
cmpsb
push
ret
xchg
or
add
cmpsl
popa
in
scas
outsl
add
sub
and
hlt
or
adc
adc
mov
icebp
jecxz
fs
xchg
xor
fnstcw
sti
xor
subl
ret
icebp
loope
mov
add
je
int
jbe
xor
in
or
cltd
mov
and
fs
jns
fcom
xchg
xor
jnp
adc
xchg
jno
hlt
cltd
rclb
add
xlat
jecxz
notb
xchg
movsl
jbe
mov
jne
scas
adc
adc
adc
push
add
jo
ss
mov
mov
jne
mov
xlat
aad
pop
ret
push
and
adc
and
cmp
sbb
test
jg
cmc
notl
imull
daa
inc
movb
dec
jns
dec
sti
sub
and
out
flds
in
ss
shl
data16
es
mov
xor
int3
mulb
mov
idiv
jnp
clc
xchg
fnstenv
mov
imull
mov
ss
loopne
cli
mov
daa
divl
or
inc
shl
add
push
out
xchg
adc
or
mov
adc
or
js
dec
js
insl
clc
aam
in
add
movsb
mov
jne
pop
sub
jle
dec
dec
ljmp
stos
fsubp
pop
aas
pushf
xchg
push
addb
and
jo
pop
cmc
add
addb
push
add
xchg
mov
cli
or
xchg
push
cmpsb
stc
test
pop
out
repz
pushf
cmp
int3
nop
lods
fimuls
addl
xchg
mov
call
cmp
ljmp
push
adc
addl
popf
aam
movsb
scas
jmp
movsb
dec
push
jb
into
adc
sbb
inc
and
mov
mov
bound
ljmp
loop
ficoms
aaa
jge
js
jl
stc
mov
in
sbb
scas
xchg
xchg
cmpsb
aam
mov
mov
clc
mov
jns
das
push
and
jae
enter
leave
lea
sbb
ret
sub
jne
sbb
sti
and
dec
sub
xchg
and
push
fnstsw
pop
int3
mov
mov
mov
test
cltd
jno
dec
xor
fidivrl
mov
mov
mov
outsl
rclb
fisttpll
in
out
adc
movsb
cmp
adc
cmp
out
add
cmc
mov
pop
push
xor
jle
mov
or
lret
insb
mov
add
jne
fdivs
popa
sbb
pop
dec
into
shll
dec
mov
insl
xchg
inc
xchg
pop
jb
outsb
insb
mov
add
pop
aad
ss
pop
adc
fbstp
and
pushf
pop
lock
ja
dec
xor
stc
loop
mov
je
or
lea
mov
shlb
cmp
out
sbb
out
int3
inc
cld
cmc
push
lret
jmp
adc
decl
fistpl
xchg
adc
push
fwait
push
push
fwait
mov
mov
lods
pop
lods
mov
and
adc
cmpsb
xor
mov
push
outsl
mov
in
insl
loop
pop
sbb
jmp
dec
pop
mov
mov
std
pop
dec
movsl
in
xor
inc
fld
pop
int
cmp
ss
xchg
in
xchg
aaa
sbb
adc
les
in
jmp
inc
jae
adc
xor
and
nop
jo
mov
adc
dec
xchg
xor
xchg
mov
loopne
add
fiadds
loop
mov
shr
sahf
xor
das
rolb
cmp
mov
cwtl
add
inc
jp,pn
es
fisubl
inc
roll
shr
inc
mov
fdivrl
pop
popa
cmc
hlt
leave
mov
out
fmul
dec
inc
inc
sub
mov
subl
dec
enter
mov
mov
push
add
mov
add
dec
add
cmp
xchg
popa
mov
add
push
lcall
adc
jecxz
pop
rolb
incl
sub
vcvtss2sd
int
inc
sub
jbe
xchg
sbb
cmp
cld
cmpsb
push
lret
sub
mov
and
aaa
or
lods
ffree
adc
mov
lret
push
mov
jp
cwtl
push
sub
push
dec
repz
shll
lods
jp
push
clc
inc
and
daa
into
lahf
jo
sbbb
es
fchs
add
stos
idivl
jg
jnp
dec
mov
gs
dec
pop
inc
mov
sub
add
jp
dec
mov
sahf
xchg
xchg
sbb
mov
xchg
inc
insl
rolb
popf
shlb
inc
in
add
add
fcmovb
add
stos
sbb
xor
inc
imul
popf
cmp
cltd
push
outsl
icebp
xor
stos
pop
stc
iret
stc
push
sbb
lods
ret
rcll
mov
stos
fwait
ret
fiaddl
cmp
sub
in
icebp
ja
pop
cmp
dec
mov
dec
mov
mov
xchg
imul
nop
int3
cmc
movsb
stos
or
sar
or
fnstsw
and
imul
aas
push
inc
imul
jmp
add
jg
dec
subl
lret
mov
mov
sbb
ljmp
mov
cmp
push
inc
scas
pop
je
movsl
cltd
shrl
in
fsubrs
das
jp
push
pop
mov
dec
jge
insl
sbb
incb
aad
cwtl
xor
shrl
xchg
ljmp
repnz
es
xchg
mov
or
push
lds
movsl
mov
lea
lret
cs
mov
push
test
aaa
fadds
push
adc
or
mov
xchg
cmc
xor
add
roll
cltd
or
inc
push
out
mov
scas
fidivs
xchg
or
mov
mov
mov
fwait
fwait
into
jl
adc
or
xchg
sbb
js
inc
or
mov
loope
inc
pushf
ja
minps
add
mov
sub
aaa
or
jmp
mov
aaa
pop
shll
jno
push
or
sbb
mov
sub
xchg
fsubr
loope
divl
mov
cmpsb
jg
cli
inc
push
sub
out
outsl
adc
jbe
pop
mov
pop
adc
jp
test
addb
in
or
mov
aas
les
adc
push
scas
les
ja
fadds
jg
adc
fstpl
mov
and
shrb
in
orw
sbb
cld
ret
incl
mov
test
cmpsl
gs
insb
adc
mov
incl
sub
test
push
push
push
mov
mov
test
shll
cld
cmpb
insl
nop
in
xor
inc
sbb
dec
sub
push
outsl
clc
dec
lods
push
push
mov
dec
in
mov
imul
imul
jbe
cs
sub
mov
cwtl
adc
mov
psllw
loopne
jne
fisttpll
iret
addr16
je
pop
pop
mov
stos
imul
jo
adc
xchg
rcrl
ret
push
les
std
aaa
vmwrite
xor
adc
loop
test
xchg
std
mov
in
inc
dec
mov
enter
fistpll
adc
out
call
pop
popf
lods
jns
xchg
cmp
inc
xor
pop
xor
or
lret
bound
cli
sbbb
mov
pop
faddl
sub
outsb
xor
push
push
inc
xchg
mov
jmp
or
jge
iret
stos
jg
addr16
jl
xchg
mov
fwait
lcall
faddl
pop
or
push
shrb
cmp
xchg
push
xor
push
sti
into
xchg
popa
mov
iret
mov
loop
cmp
xor
inc
aad
jle
sarl
cmpsl
jns
jg
jbe
mov
xor
daa
repz
or
lods
scas
in
enter
fcomps
daa
adc
push
filds
into
mov
xor
adc
rcrb
stos
jg
loope
nop
mov
add
adc
jbe
cmc
xchg
mov
popf
mov
mov
mov
enter
pop
cltd
fisubs
inc
fnstcw
fldcw
xchg
sbb
cs
out
sub
or
outsl
push
mov
mov
out
push
dec
je
add
das
aam
push
inc
pusha
clc
shl
fstps
imulb
insb
xorl
adc
xchg
xor
mov
out
sub
pop
jmp
lds
cmp
cmpl
fdivs
cmpb
xlat
push
sahf
es
sub
cmp
inc
mov
mov
jnp
je
aas
pusha
mov
xor
mov
mov
repnz
xor
dec
xlat
gs
ss
inc
jno
mov
xor
pop
jae
sbb
xchg
lock
and
in
lods
lds
jle
xorb
sub
jle
xchg
sbb
sbbb
xchg
adc
and
pop
jne
pop
cmp
xchg
and
je
mov
pop
inc
out
cltd
loopne
dec
xchg
push
lods
clc
pop
rclb
neg
jmp
jns
push
jb
mov
mov
lcall
ret
sbb
std
cmp
sub
scas
daa
sub
dec
es
sahf
jns
stc
pop
popa
sub
inc
xchg
dec
inc
fbld
mov
pop
pop
pop
in
add
fists
jb
dec
mov
in
loop
add
aaa
daa
dec
sbb
pop
xchg
add
test
fcom
lcall
lods
addl
test
addb
add
loop
ljmp
insb
mov
mov
out
push
fimull
shr
jb
in
and
pop
mov
push
xor
xor
aad
loope
je
in
adc
fcompl
fildll
xchg
add
mov
or
pop
pushf
mov
je
sti
mov
xor
shll
lret
and
imul
es
das
push
sbb
sbb
adc
push
push
jns
stc
nop
jno
insb
iret
and
shll
add
xor
movsb
and
or
call
push
jle
lahf
sub
lock
add
xchg
xor
pop
pop
fs
pushf
or
dec
ljmp
ret
xor
dec
sti
push
push
aaa
inc
mov
ffree
lds
je
sti
test
cwtl
in
scas
cwtl
imul
stos
xchg
leave
push
xor
outsb
addr16
ret
enter
loopne
mov
popa
adc
popfw
ret
ret
in
adc
mov
repz
mov
add
ret
xor
testl
pop
dec
mov
sbb
mov
and
shll
or
imul
loope
jecxz
mov
pop
test
inc
shl
sbb
adc
and
mov
pop
imul
dec
ja
insb
or
lahf
into
out
push
in
mov
add
out
out
outsb
sbb
cmp
jne
loop
cmp
cwtl
test
addr16
add
fnstcw
xchg
fcompl
cmpl
fsubr
imul
jp
scas
rol
fnstsw
pop
xor
inc
js
fwait
dec
jl
daa
popa
xlat
enter
cwtl
push
out
cmp
dec
mov
insl
sbb
icebp
adc
mov
or
pop
sub
jp
mov
mov
lret
xor
mov
aad
mov
aam
inc
jb
stc
mov
sti
mov
std
mov
push
push
pop
xor
lods
push
pop
dec
sub
or
push
mov
cmp
decb
dec
in
pusha
fcoms
xlat
int
pusha
adc
lods
int
push
cmc
sahf
cwtl
xor
sub
sub
xor
cmp
dec
lods
insl
jae
mov
imul
movl
hlt
push
push
ret
out
sub
pop
aam
xchg
sub
add
add
out
aas
loop
scas
and
je
sbb
pop
dec
in
jle
jno
icebp
out
inc
adc
movsb
ds
lret
lods
cmpsl
add
negl
leave
ds
aam
pop
andl
movsl
js
out
shrl
mov
and
pop
fisubrs
clc
mov
adc
inc
push
jne
outsb
sbb
dec
in
add
xchg
xchg
adc
inc
movsl
and
pop
sub
jae
scas
andl
xor
pop
push
out
inc
cltd
std
inc
mov
in
add
xor
or
gs
jmp
pop
mov
int3
mov
mov
stos
repnz
inc
pop
or
test
mov
xlat
sbb
or
pushf
mov
cmp
add
fmull
out
gs
scas
xchg
jo
dec
lret
push
pop
mov
jne
cmp
lahf
leave
jns
xchg
shl
jne
adc
mov
add
mov
sub
hlt
in
push
inc
sub
lahf
sbb
int3
pop
popf
clc
cmp
adcl
popf
pop
dec
and
mov
je
ds
leave
sahf
jns
or
xchg
pop
bound
mov
push
push
enter
dec
sbb
mov
idivl
jmp
xchg
movsl
cmc
je
repz
cmp
or
mov
ret
xor
and
jb
jge
shl
xlat
mov
cmpsb
cmp
xor
out
rcrb
cmp
and
adc
mov
imul
arpl
dec
stos
out
push
testl
mov
adc
sti
dec
pop
dec
int
adc
stc
push
add
fwait
movb
jl
shrl
pusha
pushf
test
sbb
xor
movsb
jge
xchg
dec
push
dec
jae
mov
cmp
push
loope
pop
fcompl
lods
inc
adc
mov
mov
cmc
jnp
push
sub
icebp
shlb
dec
lds
mov
lcall
fs
insl
pop
mov
stc
out
inc
loopne
sub
pop
sub
popa
jg
mov
jo
mov
sahf
rorl
movsb
cmpsl
cmp
shlb
out
out
pop
jnp
hlt
jl
add
cmp
inc
jbe
dec
xchg
sbb
icebp
je
pop
pop
loop
out
jmp
test
lds
lods
mov
jae
pushf
ja
sahf
popa
hlt
ss
push
dec
stc
sbb
inc
enter
cmp
stos
pop
jb
push
jg
insl
cmp
outsl
pusha
xor
sbb
mov
jmp
pop
sbbb
mov
inc
ss
cmp
cmp
mov
cltd
push
repz
outsl
add
dec
pop
aad
mov
cld
jno
lds
mov
jbe
loopne
push
cmp
scas
outsl
out
popf
push
pop
push
repnz
and
xor
dec
push
xchg
cmp
xchg
jnp
fiadds
je
faddl
mov
icebp
fiaddl
and
lcall
test
sbb
mov
pop
or
mov
std
in
push
fsub
inc
or
dec
loop
sti
dec
add
jp
ds
push
mov
mov
mov
inc
dec
adc
fwait
cmp
inc
mov
rcl
mov
xchg
pop
jns
jg
push
xor
lret
jae
fwait
lods
lahf
and
das
shrl
or
or
data16
xor
add
dec
mov
ret
jo
stos
dec
mov
out
jmp
jmp
mov
das
pop
cmpl
xchg
mov
sbbb
int
in
sbb
ja
xor
sbb
insb
fimuls
rcrb
cmpsb
mov
and
fldl
mov
push
add
xchg
mov
pushf
enter
xchg
add
and
and
add
mov
shr
xchg
xchg
xchg
jmp
xor
ja
fstl
sbb
lcall
mov
aam
dec
dec
inc
sbb
loope
das
ficoms
int
out
xlat
cs
mov
dec
mov
movsl
ret
mov
into
jge
sub
aaa
ret
push
addl
sub
lret
insb
cmp
xor
test
sub
xchg
push
cmp
pop
adc
or
decl
add
mov
cs
jns
cmpsl
fmull
sub
mov
xchg
sahf
mov
jo
cltd
ds
xchg
mov
ds
pusha
shll
jae
pushf
jo
pushf
dec
pop
scas
daa
fwait
ss
lcall
out
mov
sub
sbb
push
hlt
pop
shll
test
fcmovb
add
stos
pop
jle
subl
push
dec
sahf
in
and
fdivl
xchg
add
jecxz
mov
inc
rep
movsl
pop
jp
mov
enter
mov
fdivs
es
roll
mov
xor
sub
and
sbb
add
mov
cmp
add
mov
pop
pop
push
or
cmp
pop
cmp
add
dec
cmpsb
filds
sbb
rclb
add
fs
hlt
push
dec
mov
pop
call
pop
adc
hlt
flds
sahf
or
xor
inc
jns
pop
jmp
sub
dec
jl
jmp
add
push
mov
fsts
jle
pop
xchg
mov
fisubrs
fisubrs
mov
jp
aad
in
jle
cld
inc
jne
stc
mov
xchg
jne
xor
inc
nop
xchg
clc
arpl
cmp
adc
adc
jge
push
mov
mov
mov
jbe
outsb
jg
sub
enter
push
fwait
cmc
cmp
out
loopne
xchg
jns
movsb
xchg
gs
fimuls
xor
dec
xchg
les
xchg
sahf
ret
ret
iret
xchg
frstor
xlat
int3
das
lahf
cmp
xor
jle
rclb
adc
mov
inc
in
das
xchg
cs
in
jno
mov
inc
filds
fnstsw
mov
sub
les
shl
out
pop
mov
test
and
xlat
add
mov
mov
sub
scas
xchg
and
fwait
push
test
xchg
rcll
jp
add
std
insb
sarl
loopne
add
adc
pop
or
pop
pop
inc
sti
mov
lds
sub
xor
mov
clc
adc
adc
mov
inc
cmp
push
lahf
adc
movsl
sbb
lret
adc
cmpb
enter
mov
mov
call
jl
int
insb
mov
inc
cmp
xchg
mov
aaa
ja
push
dec
out
inc
stos
rcr
cmpsl
mull
pop
stos
je
or
mov
ret
call
jecxz
into
sahf
cmp
and
cmc
add
xor
pop
shr
jl
mov
iret
fcmovne
shrl
push
cmp
lcall
pusha
sub
inc
mov
xor
sbb
dec
sti
mov
mov
pop
and
cmpsl
fisubl
push
mov
add
xchg
aad
sbb
mov
cld
mov
rol
sub
xchg
maxps
dec
pushf
or
sub
cmp
repz
push
fsubp
arpl
cmp
push
jno
inc
push
insb
add
pop
in
dec
loope
push
out
jmp
sub
testb
mov
aaa
jnp
lahf
cmp
xchg
mov
ds
mov
enter
popa
rorl
lods
lods
daa
and
les
lret
pusha
notl
imul
fcompl
ret
xchg
mov
fildll
add
call
into
je
into
push
movsb
push
incb
stos
das
pop
pop
jno
or
jg
popf
jmp
call
dec
xlat
pop
lds
lcall
fildll
add
push
adc
fsubrp
jle
test
jno
mov
fsubs
dec
scas
daa
jle
mov
push
jns
jl
addl
jge
xchg
fwait
ret
insb
xchg
jle
jns
cmp
paddsw
xor
xchg
and
mov
ja
movsb
fidivrs
jae
fsubrs
lods
xchg
mov
stos
jle
cmp
cmc
push
jbe
jl,pn
outsb
pop
mov
sub
adc
lahf
xchg
dec
in
jae
mov
push
fcomps
inc
loope
fdivp
mov
jmp
push
pop
ret
xchg
xor
mov
mov
lods
and
shlb
adc
or
rorl
mov
add
lcall
cmc
es
cli
movsl
inc
xorb
mov
test
jb
push
aad
sub
cmp
jne
mov
movsb
dec
and
xlat
popa
push
ret
hlt
outsl
iret
pusha
lret
sbb
mov
sub
call
in
adc
in
xor
imul
and
jl
pop
lods
clc
in
sbb
cmpsb
sbb
dec
or
or
cmp
and
pop
test
rorb
ss
dec
add
cmp
push
adc
fldcw
mov
repz
mov
xor
adc
mov
ret
and
mov
pop
jle
push
cmpsl
and
sbb
sub
and
mov
ret
mov
fisubrs
iret
push
outsl
je
orb
addr16
cmp
mov
and
mov
cmpsb
cs
mov
shlb
lahf
cmova
sub
xchg
stos
sbb
stos
pop
mov
