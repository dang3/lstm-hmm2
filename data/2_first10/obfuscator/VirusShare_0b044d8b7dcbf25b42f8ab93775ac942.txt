push
call
ret
ret
xor
divb
and
fwait
gs
cmp
mov
sbb
pop
mov
mov
sbb
adc
or
jo
inc
ror
mov
xor
sbb
jg
and
push
inc
jno
mov
out
cmc
outsb
push
stos
and
cmp
adcb
pop
cmp
push
sub
jne
aas
sbb
or
xor
and
repnz
jp
pop
sub
sbbl
arpl
mov
ljmp
push
lret
je
testl
or
add
rcr
jnp
cmp
xor
into
popf
mov
inc
test
lods
mov
outsb
adc
sub
xchg
and
cs
dec
jge
xchg
push
out
push
sub
outsb
fnsave
inc
mov
enter
ja
mov
test
push
dec
or
push
adc
insl
jmp
inc
inc
inc
loope
lock
and
push
dec
mov
insl
sar
test
cmpsb
lret
or
mov
repz
cld
ret
mov
daa
lock
mov
xor
ret
in
in
sbb
lret
ffree
je
mov
push
sahf
les
mov
pushf
movsl
mov
movsb
les
pop
or
jae
test
or
lock
jle
adc
push
or
lahf
test
add
mov
xor
lret
xor
lods
mov
lcall
mov
inc
or
dec
insl
lcall
dec
dec
pop
int3
cmp
xchg
imul
jno
stc
push
movsl
cmp
mov
lret
xchg
test
xor
push
mov
mov
das
jae
sub
fs
xchg
and
pop
mov
jb
adc
into
idiv
rcl
xchg
test
dec
lds
in
ds
pusha
pop
test
sub
sbb
adc
insl
rcr
cmp
aas
cmp
sbbb
out
mov
push
add
ret
cs
lea
mov
cmpsl
test
dec
incb
imul
jge
fisubrl
pushf
xor
adc
jecxz
call
mov
fs
xchg
pop
push
cmp
imul
cmp
lahf
into
mov
pusha
loope
popa
mov
pop
cmc
test
sahf
movsb
and
inc
mov
push
cmp
cld
jne
inc
xor
pop
pusha
ja
dec
push
es
negl
in
sub
push
jns
incl
sbb
in
fstpt
mov
xor
sahf
sbb
adc
das
jg
sub
and
dec
bound
js
xchg
repz
popf
pop
pop
je
inc
dec
sbb
fadds
arpl
add
into
insl
or
jp
aas
into
mov
pop
mov
and
or
les
or
mov
push
loop
shrb
clc
adc
lahf
push
sarl
icebp
les
lea
fstl
ds
cmp
lods
pop
xor
or
shlb
push
pop
sbb
mov
cmp
add
test
cld
int3
mov
inc
repz
mov
push
jae
aad
xchg
inc
mov
rcrb
sarl
cmp
leave
mov
adc
and
aas
mov
and
fcoml
into
sub
out
jl
aad
sbb
cli
cmp
add
pop
test
dec
lods
sbb
cmp
rcrb
mov
pop
bound
cmpsb
jbe
aam
les
mov
mov
jle
das
mov
fnstenv
pop
push
cmpsb
lcall
jl
leave
iret
divl
add
jp
mov
cld
or
shlb
lods
and
sub
icebp
inc
dec
xor
shr
mov
xor
addr16
push
out
mov
inc
inc
push
push
mov
sub
add
and
aam
inc
shlb
js
mov
xor
scas
jb
cs
pop
mov
pop
mov
mov
out
mov
jle
adc
sub
fimuls
push
popf
dec
cli
add
jae
dec
les
sbb
sbb
es
call
cmp
push
aam
push
mov
lds
xchg
sbb
in
loope
dec
popf
xchg
mov
jmp
sahf
mov
sub
jmp
out
push
call
stos
cmp
cmp
loopne
jns
jo
add
test
pop
test
mov
fidivs
mov
or
mov
lcall
loopne
sbb
leave
or
test
loop
mov
aad
inc
stc
mov
in
fucomi
out
sahf
mov
sbb
mov
mov
aam
mov
hlt
inc
insl
jge,pn
adc
out
inc
push
push
mov
jge
dec
loope
dec
dec
xchg
stos
lcall
loope
sub
push
fidivs
outsb
arpl
rolb
and
push
cmpl
mov
int
test
stos
fucomp
inc
adc
aaa
loope
stos
mov
sbb
mov
insl
xor
push
cmc
cmpsb
mov
mov
xchg
push
cmpsl
xchg
push
cmpsl
mov
rol
jae
sti
cs
lds
and
cmp
sub
lods
and
cmp
popf
xchg
scas
push
add
enter
pop
out
push
jns
and
xlat
fidivrs
add
addr16
mov
add
loopne
rorb
ds
loop
pop
xlat
jne
jmp
or
adc
or
lcall
sub
or
addr16
int
inc
and
test
test
jge
xlat
movsl
lea
mov
loop
pop
push
outsb
lea
daa
mov
addr16
jle
out
sti
add
sub
in
orl
jg
test
jb
leave
or
int
cmp
xor
xchg
jae
bound
dec
out
and
in
and
cli
add
add
pop
adc
jne
in
xchg
adc
xor
jl
movsl
xchg
pushf
popa
fidivs
mov
pushf
xchg
mov
mov
adc
adc
inc
ror
jle
je
add
out
xor
push
mov
fmuls
jl
add
mov
test
cmpsb
inc
xchg
mov
push
inc
xchg
dec
add
cltd
repnz
out
ja
push
add
out
sarl
dec
nop
fidivs
leave
aas
dec
or
push
mov
sub
lds
push
jb
xchg
in
insb
cmpsl
out
pop
cli
cmpsb
lods
loopne
adc
outsb
aad
mov
pushf
cmp
cld
mov
xchg
movsl
lea
adc
xlat
imul
shrb
stos
psrad
jns
mov
mov
add
lds
mov
cli
or
cli
movsl
sub
das
out
cmc
jbe
push
xlat
sbb
xor
cwtl
cmpsl
sti
sbb
sub
loopne
enter
push
inc
dec
addr16
mov
add
add
mov
ljmp
jl
mov
pop
movsl
in
es
pop
cltd
or
and
push
js
mov
and
popa
sbb
push
fnstcw
outsb
and
filds
mov
cmp
xlat
sbb
pop
test
cmp
mov
inc
fisubs
sbb
cmp
int
ljmp
add
add
lock
fimuls
idiv
cmp
rorb
mov
push
add
sti
adc
into
stos
bound
dec
pop
mov
ficomps
cmpsb
movsb
or
jb
ja
pop
hlt
xchg
cltd
sti
ljmp
repz
sbb
mov
das
cld
imul
xlat
dec
sbb
lret
sahf
cmp
pop
adc
int
out
das
mov
mov
rol
cld
xchg
sbb
mov
test
lahf
jno
out
adc
xor
fstpl
dec
je
push
mov
aas
mov
sub
cli
into
dec
cmpsb
in
xor
inc
sti
aam
lret
fwait
mov
dec
mov
in
repnz
pushf
add
mov
sub
cmp
xor
pop
stos
arpl
test
push
in
lods
movsl
fs
testb
sarb
jl
out
mov
lods
push
pusha
fadd
or
icebp
inc
pop
fucomp
sub
inc
add
or
iret
pop
jle
push
sbb
jge
jle
xor
andb
stos
mov
or
shll
dec
pop
lds
testl
lret
idivl
xchg
jbe
daa
test
insl
dec
in
adc
vmovups
rcll
pop
push
push
aam
push
lods
or
mov
out
push
jg
loopne
ret
dec
xchg
lea
aas
bound
and
fdiv
jg
push
shlw
inc
fisttpl
je
add
add
aad
xchg
arpl
lock
pop
js
inc
leave
out
lods
mov
jne
sub
dec
mov
dec
add
ret
adc
out
lods
pop
mov
arpl
lcall
sahf
dec
cltd
out
push
loope
jne
in
adc
dec
loop
shrb
jnp
inc
iret
shll
xor
inc
in
movsb
inc
aam
jb
shrl
jbe,pt
jle
xor
addr16
into
push
iret
pop
pusha
fldt
ret
loope
in
and
aas
mov
mov
sbb
sub
cmpsb
ficompl
xor
xor
sub
dec
popf
js
pop
dec
sbb
into
push
ret
or
push
test
in
or
pop
xor
out
data16
xor
or
cmp
outsl
rcrb
sub
xor
nop
mov
or
fucomip
push
dec
dec
jp
enter
jmp
xchg
out
mov
xchg
repz
aad
repnz
add
add
mov
inc
push
dec
sbb
sub
bound
addb
xlat
stos
aam
xchg
pop
dec
cmp
fsubrs
fnstenv
mov
out
jnp
push
mov
notb
outsl
movsl
xor
ret
movb
or
push
xor
scas
out
or
cmpsb
lahf
popl
dec
jnp
and
sub
push
sub
addr16
jmp
imul
ffreep
mov
test
aad
fidivrs
sbb
jne
subb
xchg
pop
movsl
or
scas
adc
clc
push
sti
test
pop
rol
cmp
cmp
fldt
add
jp
pop
or
cltd
js
fidivrs
sbb
jne
or
pop
insl
lods
and
or
mov
bound
ficoml
inc
addb
ds
test
fists
xchg
xchg
pop
xor
push
xchg
xchg
or
xchg
inc
xor
add
addr16
adc
cmp
xchg
ja
out
mov
xor
aaa
mov
ss
lock
inc
cld
mov
popl
push
cmp
or
es
das
and
pop
test
mov
js
aaa
adc
out
pop
movsl
push
stos
mov
mov
scas
cmp
mov
ret
std
hlt
mov
xor
in
ficoml
arpl
popa
in
jmp
call
xchg
dec
push
popa
adcb
leave
pusha
sbb
shlb
insl
stos
jecxz
pop
pop
push
lock
or
sbb
mov
call
and
int3
jp
cmp
insb
xchg
xorb
add
movsl
and
pop
int
fdivrl
int3
in
cmp
repz
imul
jb
xor
fdivrs
mov
loopne
ret
gs
xchg
lock
or
out
push
pushf
add
mulb
outsl
jmp
and
int3
hlt
scas
lahf
cmp
loope
fdiv
aaa
lcall
mov
push
nop
lods
pop
insb
popf
sbb
xchg
arpl
pop
dec
lahf
sub
fisubrl
mov
cmp
add
int3
stos
xchg
pop
mov
shl
adc
and
pusha
adc
push
push
pop
aad
mov
push
push
dec
push
or
rolb
mov
shrl
pop
lret
pop
or
jle
cmp
inc
inc
and
cmp
mov
loope
popa
xchg
sbb
dec
les
ficomps
call
je
ljmp
push
inc
adc
loopne
fs
leave
sub
adc
sub
push
pop
or
mov
jle
push
and
jne
inc
movsb
xor
sbb
and
ret
mov
cmc
sbb
push
dec
sub
xor
fldenv
dec
mov
sbb
or
mov
jecxz
rep
ficomps
mov
xlat
push
pop
es
lcall
xor
sub
pop
fmull
push
repz
add
cli
stos
icebp
lcall
mov
push
xchg
repnz
add
shlb
and
or
ja
mov
movsb
sbb
push
pop
jg
cld
inc
int
add
xchg
idivb
mov
hlt
icebp
push
mov
mov
and
jne
addl
shl
movsb
jb
insb
int3
cmp
xchg
mov
dec
sarb
mov
sahf
pop
push
sti
paddusb
icebp
in
ret
jno
repz
push
and
ljmp
fisubrl
out
fldcw
jle
fadds
sub
and
jo
mov
mov
cmp
pop
sahf
cmp
pop
or
pop
sub
cs
aas
stos
stc
jae
xchg
xchg
pop
mov
xlat
das
enter
mov
cmp
jecxz
stc
mov
cwtl
inc
pop
subl
dec
fwait
out
xor
mov
jle
imull
ljmp
ret
xchg
push
in
jbe
push
jno
xchg
mov
pop
dec
mov
pop
cmp
mov
sbb
and
cmc
cli
mov
gs
jge
and
shlb
add
sti
pop
lret
adc
ret
add
out
out
xchg
mov
mov
arpl
sti
andl
imul
rolb
and
push
lcall
pop
sbbl
and
jb
adc
cmovb
pop
pushf
cmp
push
fnsave
or
jmp
xor
dec
je
in
fadd
out
stos
pop
popf
mov
jns
aam
dec
sbb
mov
adc
test
jo
cld
das
adc
mov
pop
push
cmp
xor
gs
push
and
jb
out
push
popa
fsubl
lcall
std
ficompl
push
test
cmp
je
sub
pop
and
inc
cmp
fistps
sbb
mull
cmp
stc
xchg
sbb
xor
mov
mov
sub
push
sub
inc
mov
cmp
mov
mov
lods
cwtl
mov
icebp
int
push
mov
ret
push
push
xchg
ret
sbb
sub
shrl
sub
cmp
sti
scas
stos
jbe
adc
andl
xor
movsl
jge
rolw
fisubs
mov
rcll
jae
or
loop
enter
je
out
cltd
xlat
lea
mov
inc
mov
shrb
test
std
mov
dec
ljmp
fisubrs
leave
inc
jecxz
inc
aas
cmp
jmp
inc
icebp
add
push
inc
add
cmpsl
push
in
into
test
push
mov
mov
push
jno
orl
adcb
rolb
aas
decb
push
repnz
rclb
inc
inc
or
outsb
lods
jbe
pop
addr16
sbb
jl
shll
mov
jg
outsb
xchg
jb
jmp
nop
clc
mov
enter
dec
lock
test
fbstp
out
aaa
rcrb
test
call
mov
add
ficoms
push
jecxz
bound
lock
leave
loop
pop
ret
imul
xchg
push
xchg
mov
cmp
mov
daa
mov
inc
ss
stos
outsl
xor
pop
push
add
sub
push
lahf
push
mov
gs
xor
fs
stc
andb
cmp
cmpsl
mov
pusha
enter
adc
lret
push
or
mov
mov
cwtl
lcall
aad
stc
mov
in
pop
mov
add
mov
lar
ss
cmc
out
movsb
or
xchg
mov
aaa
lods
aam
sub
dec
and
int3
stos
sti
xor
or
addb
pop
mov
inc
call
inc
nop
aam
and
sbb
sbb
or
inc
adc
push
cli
icebp
pop
je
sahf
mov
xor
fisttpll
inc
xchg
out
inc
push
and
adc
popa
cltd
pop
lret
outsb
add
mov
add
xchg
mov
in
pop
popf
rcrl
je
lret
rorl
xor
jecxz
jecxz
push
xchg
nop
push
leave
pop
das
les
popa
pop
xchg
popf
add
fildl
movsb
pop
fs
sub
cmp
in
or
arpl
and
xchg
add
mov
dec
push
inc
push
push
movsl
xchg
pop
mov
pop
ror
cld
imul
push
dec
pop
arpl
stos
out
nop
stos
cwtl
cld
mov
adc
xlat
mov
pop
xorb
push
xchg
sbb
mov
lahf
stos
add
repnz
sub
or
mov
sbb
jnp
add
mov
inc
cmp
nop
push
mov
sbb
mov
and
and
jmp
lret
aam
lret
test
test
xlat
std
and
aas
mov
sti
mov
mov
jo
std
xchg
adc
dec
std
adc
mov
clc
push
pushf
jmp
cli
add
test
dec
and
xchg
push
or
and
fcmovbe
popf
pop
sub
lods
mov
push
ds
inc
mov
insl
repz
ret
cwtl
jo
insb
orl
mov
sub
popa
push
iret
dec
push
push
mov
ret
clc
stc
jg
xor
or
xlat
mov
stc
push
fs
repnz
test
int3
sub
bound
cld
int
jl
rcrb
xor
add
incb
pop
sti
xchg
sbb
sub
xchg
inc
in
aad
or
mov
jmp
mov
or
adc
xor
scas
xor
xchg
push
jns
aas
jbe
pusha
das
dec
imul
xchg
sldt
jp
insb
mov
pushf
stos
aas
aaa
mov
and
into
xor
scas
fiadds
xchg
roll
and
shll
add
xor
negb
ret
int3
out
xor
sub
push
ret
or
jg
movsb
and
pop
pushf
test
inc
repnz
mov
mov
stc
jb
pop
stos
fldl
adc
popa
xchg
push
mov
inc
inc
or
cmp
les
cwtl
xor
pop
jmp
sub
lods
insb
jg
sub
dec
dec
ljmp
xchg
popf
jns
jns
push
outsl
fwait
cmpsb
js
loopne
add
fimuls
sub
sahf
lea
dec
mov
fisttpll
add
dec
insb
cmp
cmp
hlt
xchg
idivb
mov
movsl
test
pop
and
sub
xchg
pop
push
push
mov
cmc
cmp
fstl
mov
and
rorl
and
rorb
mov
loop
inc
xchg
sbb
pusha
mov
sbb
ret
cmp
jno
adc
xchg
and
sbb
pusha
in
stc
pop
gs
xor
jbe
add
arpl
out
mov
dec
sbb
cmp
mov
mov
test
pop
loopne
push
cmp
mov
insl
jb
rclb
or
insb
mov
ror
test
push
xlat
std
movsl
call
jle
pusha
imul
pushf
or
pop
fsts
xchg
mov
cltd
jae,pt
ljmp
mov
dec
call
mov
adc
and
push
xchg
mov
mov
inc
adc
or
sbb
jae
scas
cmc
mov
movntq
xor
mov
icebp
in
cmpsl
iret
out
aaa
jmp
insb
dec
mov
shrb
jecxz
adc
xchg
fidivs
testb
fstp
mov
nop
sub
push
leave
adc
call
pushf
imul
mov
dec
mov
mov
mov
and
insl
repz
xor
lds
lods
and
mov
pop
fcmovnu
insl
popa
adc
imull
xor
out
into
add
dec
push
sub
lods
out
aad
dec
cmpsb
mov
subb
pop
adc
fdivp
inc
sbb
shlb
and
sarb
and
jo
sub
hlt
shrb
jl
pop
lret
mov
xchg
scas
aam
test
pop
les
jo
mov
fidivs
pop
mov
jle
and
xchg
sub
mov
add
stc
out
leave
sbb
lock
test
mov
stos
cmpsl
fstl
out
loopne
adc
mov
in
adc
or
mov
sub
push
mov
enter
bound
inc
sub
out
mov
dec
mov
loopne
cli
add
dec
sbb
les
sbb
and
pop
xor
in
jb
in
mov
movups
add
pop
xor
adc
insb
stc
popa
stos
adc
aaa
inc
repz
sbb
jle
test
or
sub
aaa
mov
mov
leave
or
and
xor
mov
mov
dec
mov
mov
ret
cli
inc
pusha
shll
popa
dec
sbb
scas
movsb
sar
fs
movsb
mov
in
mov
pop
out
jle
mov
or
add
xchg
inc
mov
ret
cs
sbb
sarl
stos
mov
jbe
jg
movsb
or
jmp
shrb
stos
jbe
lods
or
ror
dec
mov
pop
test
lock
mov
inc
sub
xchg
pop
repz
mov
insl
pusha
adcl
shll
mov
sbb
iret
mov
nop
nop
mov
shrb
fldt
imul
leave
popf
adc
push
scas
jmp
dec
pop
dec
lds
ret
arpl
jae
fbld
push
cmc
in
xchg
dec
and
leave
rorb
cli
pop
aaa
rclb
in
mov
xchg
dec
add
lret
inc
adc
aam
sub
pusha
outsl
ret
mov
xchg
ljmp
adc
std
loope
cmpsb
fwait
pop
mov
ss
push
mov
adcb
in
mov
inc
dec
ja
push
adc
mul
call
or
inc
mov
add
daa
and
sahf
mov
push
repz
sub
jl
aad
adc
pop
mov
cwtl
loopne
insb
dec
mov
fs
add
pusha
ret
pop
cmp
arpl
cmp
sbbb
or
enter
jmp
or
testl
jecxz
cvtdq2ps
imul
jbe
les
imul
sbb
jns
shr
mov
sbb
fld
rcrl
and
imul
pop
cld
pop
jl
fistl
out
xlat
ret
ret
sbb
adc
ja
sbb
imul
imul
into
mov
xchg
rolb
shrb
dec
or
sbb
fwait
add
outsb
es
dec
push
ret
add
mov
int3
xchg
ret
imul
iret
push
in
pop
jae
mov
call
sub
adc
cmp
push
and
stc
fldt
mov
in
imul
test
xchg
cmp
pop
rcrl
adc
jle
test
pusha
xor
test
sbb
icebp
iret
adc
sub
pop
xor
das
xor
jg
mov
ljmp
jmp
lods
push
and
mov
add
mov
cmc
jmp
pop
mov
fwait
cmp
pop
mov
cmp
and
imul
add
add
fwait
movl
inc
or
rorb
adc
cmp
shrb
sub
cmp
mov
push
add
jmp
leave
notl
loope
rcll
leave
aas
push
xchg
cmp
lret
lock
jecxz
or
lcall
ret
pop
jo
movsl
mov
adc
imul
and
out
ja
insb
sbb
xor
clc
sti
bound
add
insl
add
pop
sbb
sub
test
inc
inc
test
loop
sbb
xor
jne
push
orb
cs
out
movl
mov
sub
push
jo
pusha
push
ror
push
popa
mov
iret
aas
stos
push
xor
clc
sti
adc
push
es
pop
push
jmp
xlat
dec
in
ja
mov
lcall
inc
or
ret
or
dec
stc
js
dec
xchg
push
stos
add
cmc
aam
mov
pop
xchg
int
cmp
adc
xchg
in
jp
movl
or
pop
pop
pusha
mov
andb
outsl
sbb
or
push
mov
mov
cmp
cmp
adc
jo
sub
and
fwait
stc
out
ds
mov
xchg
repz
or
add
sar
js
je
scas
push
ds
push
pusha
jg
enter
pop
adc
aaa
in
inc
sbb
ret
pop
jp
xchg
bound
adcl
insl
ljmp
aaa
mov
jg
adc
sub
fnstsw
inc
insl
inc
lret
mov
arpl
fistpll
adc
daa
xor
popa
jne
xor
and
sub
mov
lahf
jb
cmp
scas
jbe
pop
mov
loop
test
loop
repnz
xorl
or
cltd
mov
pop
push
popa
jp
mov
xchg
cmp
and
sub
or
mov
ljmp
fmuls
loope
jae
sub
icebp
into
mov
data16
rolb
aad
mov
xchg
leave
lods
and
push
les
test
popw
pop
push
sub
pop
test
push
jno
movsb
es
cmpsb
gs
pop
mov
push
mov
and
test
cmp
mov
mov
lcall
repnz
ja
pop
fistpll
jg
xchg
out
iret
test
mov
jno
imul
and
movsb
push
mov
out
inc
push
jae
stc
mov
iret
hlt
xor
test
in
sbb
cmpsb
xchg
push
shl
fcomi
repnz
or
psrad
sub
out
xor
xor
xor
lret
test
cmp
iret
or
cmp
pusha
and
mov
int3
push
js
inc
out
mov
pop
test
ss
cmp
add
and
xorb
mov
sub
dec
mov
imul
hlt
pop
and
cmc
into
inc
xor
shrl
sub
lret
mov
outsl
cmp
repz
mov
cmp
fnstsw
jbe
out
mov
shll
loopne
dec
out
fdivrs
lods
out
mov
ss
arpl
xor
sub
aam
cmp
jb
jl
mov
push
dec
fnstenv
dec
and
mov
in
fdivrl
fsubr
mov
pop
flds
aam
pop
inc
sarb
cwtl
gs
fcoms
fimuls
outsl
imul
hlt
dec
fcmove
push
mov
jmp
adc
xchg
test
daa
add
leave
sarb
mov
xchg
popa
iret
lret
sub
in
push
push
xchg
jmp
les
push
rclb
jno
xchg
dec
jmp
push
sub
and
pop
pushl
lret
sbb
jne
jle
add
hlt
xlat
roll
testl
mov
dec
lcall
mov
sbb
or
push
popa
imul
ret
mov
push
subl
outsb
fs
sub
cmp
aas
dec
shr
ret
arpl
xor
mov
dec
movsl
push
aam
or
push
popf
adc
xchg
add
lret
call
sbb
loope
jg
or
xlat
xchg
pop
sahf
inc
or
mov
xchg
dec
rol
sbb
push
cmp
vmwrite
push
gs
xor
cmpsl
in
add
inc
jg
pop
neg
cmc
movsl
loop
mov
stos
sbb
pop
mov
jmp
dec
ds
rdpmc
add
shlb
xlat
sahf
in
cmp
scas
mov
imul
sub
inc
and
iret
loop
stos
mov
ret
or
lret
gs
sarl
dec
mov
dec
stos
or
push
mov
xchg
adc
in
sbb
outsl
adc
mov
xchg
xor
aaa
inc
dec
iret
inc
sbb
mov
push
in
int
and
xorb
xchg
pop
arpl
cmpsl
mov
pop
mov
xchg
and
or
ret
in
loope
sub
inc
jo
jge
scas
imul
pop
hlt
jo
jo
jge
sub
call
xor
cs
or
push
je
shll
incb
mov
jp
in
inc
push
ss
pop
cmp
sub
jae
or
mov
pop
lret
js
pushf
sbb
jle
sbb
ret
pusha
pop
adc
add
les
in
nop
js
xorl
xor
cmp
mov
addr16
daa
out
sub
fstps
push
dec
clc
gs
lds
scas
or
leave
pop
test
pusha
hlt
pop
dec
xlat
movsl
push
sub
jge
scas
push
loope
outsl
pop
mov
mov
and
stc
mov
pushf
jo
stos
pop
mov
sub
mov
or
shrb
int3
mov
mov
sahf
cmp
dec
cmp
fdivrs
dec
in
call
mov
sub
or
sahf
out
jecxz
mov
jg
adc
mov
add
lcall
dec
jbe
pop
call
jecxz
sahf
mov
pusha
outsb
repz
jg
pusha
popa
in
popa
add
pop
fisubl
push
jne
cmp
add
xchg
add
lds
add
in
push
inc
loopne
fidivl
gs
dec
jne
jne
cmp
cli
mov
cmpsb
or
adc
rcl
push
testb
mov
and
sbb
int
mov
inc
adc
jmp
pop
fistl
cld
and
mov
lret
cmpsl
out
and
push
fdivs
pop
arpl
ds
test
mov
sub
add
xor
pop
clc
addl
in
mov
cmp
lret
es
cmp
cmp
xor
xorl
fucomi
mov
int3
test
icebp
int
mov
jns
jecxz
jl
movsl
pop
lods
jle
sahf
jae
sbb
cmc
mov
jmp
shl
jae
imul
cld
cmp
cmpl
gs
adc
enter
mov
lock
enter
out
stos
sbb
xlat
data16
inc
and
cld
loopne
repz
outsb
or
inc
xchg
dec
dec
rcrl
js
xchg
push
mov
inc
mov
mov
adc
loop
testb
test
xor
xchg
test
jge
call
icebp
mov
mov
jo
sub
mov
mov
add
rcll
and
cmpsl
and
clc
and
insl
ljmp
or
and
shlb
dec
lock
or
imul
mov
and
xor
push
pop
sub
jmp
and
sub
cmpsb
push
rorb
outsb
pushl
clc
stos
fisttpl
mov
testb
mov
xchg
popa
or
mov
popf
les
pop
mov
das
sbb
push
hlt
push
pop
xchg
cmp
adc
xchg
cld
push
jl
adc
push
lds
or
aam
mov
xchg
mov
rcl
fnsave
sbb
ja
jne
pop
nop
int
cmpsb
add
push
adc
int
mov
jl
dec
mov
ljmp
mov
movsb
scas
not
popa
dec
cmpsb
jne
popa
fcmovnbe
jle
fcoml
call
lret
fmul
loopne
or
inc
pop
outsb
pop
cmp
mov
test
jae
out
mov
aam
add
jo
stc
dec
outsb
add
shlb
arpl
int
cltd
pop
push
fsub
aam
or
ja
sti
shll
push
in
mov
dec
xchg
stos
pop
push
test
into
mov
xchg
hlt
stos
imul
and
mov
and
shlb
push
in
add
sti
int3
add
mov
hlt
xchg
xchg
inc
das
jb
xchg
add
test
mov
cmpsb
or
add
lahf
mov
andb
mov
inc
leave
jne
clc
js
jne
mov
jle
das
in
aam
mov
xlat
ljmp
mov
out
xor
stc
dec
xlat
sbb
jge
insb
je
int3
fcom
aas
insb
and
ljmp
jmp
pop
ret
xor
sub
int3
mov
shlb
pop
inc
sti
lock
inc
or
insl
insl
aas
in
inc
jl
jmp
shl
pop
xchg
mov
and
mov
dec
jmp
inc
push
lcall
loope
sub
pop
outsl
lahf
mov
je
jl
fmul
lea
imul
jmp
fcmovnb
push
jae
jle
stos
mov
iret
cltd
mov
stos
cmc
mov
cli
jmp
xor
sbb
sti
lahf
adcl
pop
loopne
fildl
sub
lret
les
push
push
adc
subl
xchg
es
insl
test
mov
cmp
push
out
lods
adc
in
lods
push
fisubrs
push
xor
mov
xchg
lahf
pop
mov
ss
mov
gs
inc
dec
cltd
aas
imul
ror
add
push
cli
gs
or
jno
or
je
jl
lcall
xchg
mov
popf
cmpsb
mov
clc
push
xchg
add
sub
jbe
xchg
or
repz
mov
pop
scas
add
pop
lret
lods
rorb
inc
test
lds
out
sub
cmp
mov
inc
push
pop
mov
dec
idivb
punpcklwd
push
mov
push
out
and
rcrl
aad
test
lock
sbb
in
dec
hlt
stc
jecxz
hlt
shll
test
decl
das
outsl
cld
shll
cmp
mov
ret
inc
xor
or
loop
cmc
rcl
outsb
loopne
clc
sub
xlat
hlt
adcl
xchg
aad
push
or
clc
dec
push
std
jmp
shlb
fucomip
sti
scas
les
test
push
sub
sub
xor
pop
sbb
test
fstl
sbb
mulb
adc
outsb
mov
scas
jle
sbb
inc
std
or
shll
or
lret
hlt
shlb
xor
es
xor
mov
add
dec
inc
mov
mov
out
push
imul
test
jecxz
mov
nopl
adc
mov
inc
xchg
movsl
adc
stc
cmp
mov
jno
out
mov
stos
cli
pop
pop
out
push
dec
addr16
repz
cmp
mov
scas
pop
dec
fiaddl
or
cmp
jle
lds
inc
cld
les
push
add
popa
outsb
inc
ret
mov
dec
jb
mov
sbb
in
mov
idivl
mov
rorb
int3
inc
inc
ret
sarl
dec
push
ret
sbb
js
imul
jp
popa
or
int3
cli
add
loopne
jo
loop
outsl
xor
aam
ficomps
and
adc
mov
xor
jecxz
adc
and
jg
rclb
stc
pusha
pop
pop
xchg
pop
bound
push
adc
pop
jns
outsb
les
sahf
mov
xor
punpckhbw
outsb
or
adc
ror
flds
std
or
push
fs
pop
xchg
cmp
icebp
or
xor
xchg
cmp
dec
xchg
add
xchg
adc
lods
xchg
stc
cmpsl
xor
xchg
mov
pop
and
dec
iret
pop
push
adc
dec
fimuls
lods
fs
mov
xchg
adc
xchg
andb
lock
mov
adc
aad
fcomi
pop
clc
pop
sbb
xor
and
mov
out
mov
push
push
and
sub
inc
inc
or
je
cmp
and
scas
out
mov
insb
stos
xchg
and
push
dec
aaa
xchg
pop
lret
or
int3
int
xor
cmpsb
mov
dec
inc
loope
stc
pushf
xor
scas
push
pop
lea
mov
bound
cmp
mov
xchg
sbb
bound
sbbb
pop
push
mov
fistpll
in
adc
loop
cwtl
dec
out
pushf
sarb
repnz
std
cmpsb
add
cmp
push
and
and
mov
mov
ret
sbb
sbb
or
inc
push
inc
test
leave
sahf
popl
cmp
cmp
aad
jns
test
mov
mov
mov
dec
sub
clc
xor
in
arpl
pop
adc
repz
and
lret
pop
enter
mov
sbb
aaa
fisubrl
repnz
into
mov
test
jmp
lcall
nop
leave
xor
out
loop
xor
lahf
aad
and
loop
mov
dec
mov
xor
icebp
ljmp
mov
lods
repz
add
repz
movl
rclb
imul
mov
je
aam
outsb
mov
iret
xchg
icebp
cmp
es
sti
push
loope
pop
lahf
dec
sub
popa
scas
xor
push
ds
inc
fmul
decl
test
sub
lahf
fs
lret
test
mov
ss
fwait
enter
and
pop
cwtl
pop
jae
pushf
bound
and
xor
outsl
adc
rcll
or
movsb
inc
fiadds
add
fiadds
pop
mov
add
lcall
pop
js
cmc
stos
ftst
out
sbb
leave
push
adc
outsl
pop
dec
push
jmp
push
cmp
cmp
mov
fstpl
jns
jge
ja
add
dec
movsl
adc
aad
je
aam
adc
cmp
or
es
inc
popf
mov
xor
inc
inc
std
popw
xchg
mov
sbb
cmp
and
loope
cmp
inc
pop
bound
ss
add
cmp
stos
ljmp
pop
cmp
push
mov
inc
movsl
jo
cmp
xchg
int3
pusha
jmp
fsubrs
mov
push
dec
xchg
mov
loope
pop
jg
mov
push
mov
lods
pop
std
inc
cmp
mov
movsl
and
scas
push
fsubs
add
sbb
outsb
dec
sbb
add
sub
mov
and
insl
leave
insb
mov
ret
dec
sub
lods
test
fdivs
sub
cmpsl
and
movsl
xchg
push
ret
bound
dec
dec
je
pushf
xor
inc
push
pop
push
cmp
in
sarb
sbb
xor
xchg
sbb
adc
ret
repnz
sbb
iret
nop
lds
mov
rol
mov
and
addr16
mov
xor
shlb
cmp
out
mov
and
sub
cmp
and
add
repnz
outsb
insl
fldl
repnz
sti
jle
in
ja
movsb
aad
cmp
push
call
test
pop
sbbb
cmp
xchg
xchg
mov
xchg
cmp
and
scas
pop
loope
fldt
add
lret
ja
mov
sbb
pop
outsl
sub
aad
pop
xor
mov
jle
arpl
fldt
add
push
adc
sub
pop
out
shrb
outsl
mov
pusha
inc
into
or
adc
call
les
cli
sti
jmp
hlt
loop
ret
movzwl
cli
outsl
add
sub
xchg
sub
push
jmp
sub
lahf
jnp
out
dec
fdivrl
cmpsl
out
push
sub
int
jle
sub
push
jae
lret
adc
jo
cmp
jecxz
add
sahf
les
popa
sub
stc
shrb
sbb
xor
jl
adc
and
xor
pop
inc
jno
adc
and
inc
mov
pop
inc
xchg
scas
mov
mov
dec
in
aad
push
jnp
and
inc
push
sbb
mov
cmp
pop
inc
cmc
jl
sbb
push
out
fnstenv
add
das
inc
fxch
xchg
popf
add
dec
cmpl
fcoms
push
movsb
lret
push
aaa
add
push
aas
xor
cmp
xor
outsb
xor
xchg
flds
lcall
mov
ljmp
in
mov
add
mov
aad
xchg
aaa
fldcw
scas
imul
addr16
lods
divb
pop
push
loopne
call
inc
imull
push
call
test
dec
hlt
pop
ret
xchg
pusha
sarl
stos
push
sub
sbb
sbb
ss
and
dec
adc
jb
jle
push
push
cmpsl
mov
mov
in
je
jo
adc
nop
sbb
xor
inc
xor
adc
rol
mov
je
std
or
loopne
repz
out
cld
daa
enter
imul
cmpsl
test
cmc
sub
jae
inc
incl
jbe
push
cvtps2pi
fwait
and
mov
cmp
lahf
pusha
orl
pop
inc
sahf
das
push
add
jg
incl
loopne
and
rcrl
push
outsb
cltd
sub
out
pop
lret
adc
in
gs
cmp
add
xchg
int
sub
xor
mov
mov
dec
scas
jmp
sbb
sbb
xorl
xlat
mov
sbb
lds
in
sbb
cmp
push
fcmovu
mov
xchg
mov
ret
sub
cs
pop
test
cmpsl
cld
and
aaa
mov
jne
fs
xchg
int3
lock
filds
aas
push
sbb
jecxz
pop
scas
mov
popf
push
sbb
test
int
xchg
push
imul
xor
or
ja
cmp
loop
pop
jbe
mov
add
sub
inc
dec
imul
add
push
jp
mov
mov
pop
cltd
pop
ss
mov
jl
lds
arpl
ficomps
cmp
fbstp
jne
adc
mov
testb
mov
xor
rcll
lcall
sub
adc
repnz
cmp
and
mov
pop
iret
mov
jne
mov
or
adc
cwtl
push
and
leave
cmp
cmp
fisubrs
into
loop
mov
pop
cli
push
xlat
test
jp
lcall
cmp
sub
inc
adc
sti
mov
mov
cmpsl
cli
mov
pop
rclb
jg
sbb
rorl
jbe
in
pushf
or
cld
mov
xor
lock
mov
inc
movsb
in
fsubl
sub
adc
lret
xchg
into
movb
push
loop
cmp
inc
push
cmp
dec
into
and
adc
xor
lahf
sub
daa
xor
fcmovnbe
out
jl
clc
sbb
cmp
aaa
mov
cltd
add
imul
int3
mov
incl
xchg
inc
cltd
add
sbb
fdivr
popa
mov
pop
in
push
add
mov
leave
push
mov
jae
aas
mov
ja
je
cmp
popa
sub
mov
aaa
sub
add
out
mov
enter
fs
outsl
cmpl
mov
cmp
fs
cmp
sbbl
or
or
iret
jp
push
loopne
daa
and
xchg
push
mov
cs
xor
and
inc
pop
inc
add
movsl
cwtl
out
and
sti
bound
dec
mov
testl
mov
sub
sbb
fidivl
jp
dec
loop
and
or
pushf
loop
mov
lret
xor
dec
ret
dec
pop
inc
jbe
popf
adc
in
add
stc
scas
sbb
shrl
mov
xlat
bound
mov
adc
stc
fldl
pop
add
mov
ror
and
lds
lods
scas
out
imul
jmp
xor
stos
popa
mov
gs
cmc
dec
enter
jbe
pop
fcos
jo
and
cli
sub
ds
ffree
and
sbb
dec
lds
cmpsb
mov
push
xlat
xchg
fwait
add
dec
push
xchg
bound
xor
jne
out
arpl
adc
movl
mov
pop
js
cmp
inc
sti
pop
nop
and
loope
push
jns
sbb
lahf
lods
push
mov
ret
inc
fsubrl
lret
mov
rcr
push
aaa
jo
pop
mov
sbb
shll
pop
fsubrp
rcr
ljmp
in
add
cmp
mov
push
fistl
adc
mov
enter
test
push
pusha
lock
pop
in
xor
add
in
add
movsl
lods
lds
es
pop
lret
cmp
imul
out
ficompl
pop
pop
decb
push
stos
loopne
cld
jb
xor
ret
lods
or
push
shrb
ret
and
pop
adc
loop
adc
das
pop
push
or
push
inc
aam
push
mov
not
movsb
pop
mov
sbb
pop
mov
mov
fcmovu
test
mov
shll
adc
pop
jge
ja
mov
dec
je
rorl
pop
jecxz
sahf
jge
aam
push
icebp
decl
in
sub
lret
cwtl
inc
push
push
mov
fs
sbbb
mov
sbb
mov
and
add
imul
adc
cltd
lret
jne
jg
fisubs
repz
in
or
inc
jne
cmp
insl
fwait
mov
test
leave
sub
mov
xchg
jno
and
jo
jge
push
pusha
fsubrs
cmc
fisttps
inc
jns
fsubrs
and
push
push
pushf
loopne
pop
loopne
or
aad
cmp
mov
addl
jae
push
lahf
jno
incb
repnz
ret
popf
popf
mov
popa
mov
lods
pop
inc
cltd
xchg
or
loope
aam
inc
inc
rcrb
push
mov
pushf
sarb
shrb
dec
adc
lods
sbb
push
push
mov
pop
mov
ret
test
sbb
divl
std
xchg
ret
pushf
popl
pusha
insb
ja
push
mov
lock
cmp
mov
mov
jge
ficoml
dec
pop
mov
add
sbbb
adc
inc
and
in
and
enter
add
sbbb
dec
lret
loope
aam
scas
mov
push
push
lods
daa
ss
dec
in
add
sbb
pushf
inc
push
call
pop
adc
push
rcl
and
mov
insl
push
mov
popa
lods
clc
das
sub
hlt
leave
icebp
dec
inc
clc
mov
punpcklbw
pop
adc
pop
lret
pop
add
lahf
cmp
loop
inc
sti
mov
repz
xor
xchg
sub
nop
dec
add
cmpsl
notb
ficoml
or
out
mov
mov
andl
sub
pop
fs
sub
rorb
enter
aaa
pop
out
xchg
lock
out
fistl
mov
pushf
and
ret
dec
add
out
push
mov
or
dec
dec
outsl
add
aas
xchg
mov
mov
int3
jns
and
dec
inc
inc
int3
jbe
xor
mov
rorl
adc
mov
mov
aad
movsb
jb
push
xchg
xchg
jb
pop
mov
and
gs
push
or
jecxz
and
xor
loope
add
ficoms
jae
js
or
push
enter
cmp
aaa
pop
inc
lock
mov
jle
xchg
jle
xlat
dec
lcall
ds
popf
cmc
popa
inc
into
lahf
loopne
es
pusha
movsb
push
mov
aaa
jp
push
out
mov
outsb
insl
into
addr16
xchg
outsl
adc
sub
sub
jl
int3
adc
jmp
imul
adc
sub
aas
cltd
jbe
pop
or
sub
loop
xchg
sbb
and
sqrtps
shlb
lret
mov
lds
adc
and
or
mov
push
and
cltd
mov
retw
loopne
cmpsb
faddp
inc
rcpps
push
pop
cld
pop
mov
out
xchg
mov
adc
in
shrb
scas
ljmp
pop
mov
jns
fstpt
mov
js
imul
xor
adc
mov
mov
adc
mov
jmp
jp
in
mov
sub
lret
insl
stos
cli
mov
daa
sub
mov
cmpsb
and
andl
mov
sub
jbe
xchg
jo
lds
jl
dec
insl
push
xchg
inc
cmpl
ss
cmp
xchg
jmp
lock
fcmovnbe
dec
mov
idiv
popf
ret
popl
jb
inc
dec
pop
and
push
jp
inc
das
scas
rcll
mov
cmpsb
jbe
lea
out
rsqrtps
in
adc
xchg
push
sahf
icebp
or
rolb
out
ret
mov
mov
push
pop
dec
cwtl
cmpsb
pop
mov
cmp
test
or
mov
add
pop
adc
mov
icebp
les
in
and
js
int3
shrl
dec
xchg
and
jne
in
xor
or
imul
jno
outsb
pop
cmp
cs
jp
sub
clc
sub
mov
xlat
movsb
sarb
insl
stos
mov
add
mov
mov
pop
sbb
notl
xor
add
pop
test
adc
std
loopne
adc
adc
sti
sub
outsb
mov
push
mov
loop
loopne
cs
push
cwtl
jg
mov
dec
popf
add
testl
mov
out
sub
jae
xor
xchg
jecxz
scas
roll
sbb
scas
mov
cmp
inc
adc
mov
stos
sti
imul
fmul
mov
in
into
add
fbld
xchg
fcomps
loope
dec
dec
test
push
xchg
or
lock
in
xchg
test
mov
addr16
cltd
inc
ss
adc
inc
xchg
sbb
repnz
adc
pop
inc
scas
xchg
in
jge
mov
mov
ret
jb
xor
clc
mov
or
push
out
repnz
test
leave
lods
add
neg
dec
loopne
out
mov
push
and
cmp
xchg
iret
shrb
pop
and
jmp
mov
xor
inc
cmpsb
sub
add
cmpsl
outsb
inc
in
xorl
cmc
loop
and
dec
arpl
mov
mov
xchg
scas
dec
or
xchg
negl
or
stc
nop
xchg
iret
insl
mov
pop
xchg
pop
jne
or
jmp
xchg
push
add
imul
inc
cmc
lahf
mov
imul
cmc
int3
fimuls
push
and
or
in
push
rcll
push
xchg
adc
pop
push
loopne
add
push
jg
jo
jl
inc
xor
lock
mov
mov
cmp
inc
sbb
sarl
xor
dec
sub
sbb
test
pop
stos
or
xchg
fldt
xchg
lock
imul
test
pop
je
adc
sub
or
testb
fdivrs
mov
mov
jbe
mov
pop
adc
test
sbb
xor
je
ljmp
stos
ja
loop
insb
and
ret
mov
scas
jp
pop
fwait
sbb
mov
sbb
js
xor
sti
jo
cwtl
das
rcr
int
sbb
insl
pop
dec
int
push
xor
jge
and
mov
cmp
hlt
xlat
push
clc
dec
push
fists
test
jmp
subb
jg
popa
push
sti
mov
in
fistl
xor
sarl
bound
pop
je
daa
sub
outsl
shl
aas
adc
and
out
push
jnp
stos
xor
push
mov
jp
in
sub
rolb
cmp
adc
scas
test
mov
mov
js
jecxz
mov
pop
mov
or
movsl
add
in
inc
fwait
mov
mov
pop
add
xor
in
lods
or
sub
cmpsb
dec
adc
sbb
js
test
fbld
push
stos
popf
sti
dec
addl
push
ljmp
mov
loope
add
sbb
mov
and
jno
mov
mov
xor
xchg
xor
cmovae
push
push
test
push
sarl
and
cmpsl
fdiv
mov
pop
add
testb
mov
mov
mov
arpl
out
aas
fdivr
out
adc
xor
cli
popa
sbb
cmpsb
push
mov
sbb
pop
jle
and
rcr
roll
add
dec
dec
dec
or
xchg
cmp
ret
hlt
jnp
mov
and
insl
iret
shl
dec
jp
nop
sti
inc
cmp
push
mov
jp
adc
insl
pop
sahf
inc
rcl
std
lret
fstpt
push
sub
pop
cmp
cmp
std
in
adc
dec
scas
or
das
sti
out
daa
mov
in
loopne
push
adc
cltd
mov
add
divl
add
adc
jns
and
mov
sub
insl
mov
jbe
push
jmp
ss
insl
fsubrp
adc
xchg
aad
pop
stos
addl
sub
mov
clc
xchg
adc
aam
adc
mov
mov
jb
cmp
std
sub
cmp
cmpsl
outsb
sub
inc
leave
rcrb
les
push
dec
aaa
pop
loope
lcall
add
test
cmp
lods
adc
lahf
rorl
mov
outsb
dec
dec
sbb
fwait
adc
push
leave
add
or
mov
push
or
dec
mov
sub
sub
fidivs
repnz
pop
subl
stc
sbb
ret
sub
int
lret
daa
and
sbb
rcl
test
add
add
outsl
inc
sub
pop
adc
xor
out
fdivl
in
imul
jge
sbb
xor
sub
jg
sbb
sbb
pop
xor
cmp
and
jae
es
cmp
ljmp
and
jbe
mov
rcrb
jnp
subl
shl
or
jo
sub
jl
mov
jg
jle
or
xchg
insl
bound
fldcw
jle
out
les
cmpsb
mov
and
xchg
jne
dec
cmp
mov
sub
and
dec
mov
cli
fadds
mov
gs
mov
fstl
add
lods
lahf
mov
adc
xchg
cli
clc
adc
addr16
fmull
mov
clc
sbb
shll
pop
rcll
and
cld
xchg
outsl
dec
add
cmc
js
enter
add
lds
insl
inc
xchg
xor
ds
cld
cmp
add
negl
arpl
and
mov
out
scas
and
movsl
and
lret
push
add
and
add
nop
loop
cli
dec
lret
push
push
and
test
rcrl
and
add
jno
jno
test
ds
ja
jg
aam
dec
loope
adc
sbb
add
xchg
mov
mov
adc
jg
insl
pop
icebp
xor
idivl
pop
int3
je
lds
xchg
sbb
jg
ret
lods
dec
dec
xchg
sub
cmp
xor
adc
rcll
call
sub
pop
push
loopne
out
out
les
sbb
arpl
enter
fstp
and
jmp
jg
rcrl
jbe
jle
sbb
push
jge
std
test
icebp
xchg
add
mov
or
hlt
or
test
lcall
test
dec
js
lret
push
daa
nop
inc
inc
cmp
and
lret
imul
enter
je
orb
lea
pop
pop
mov
fists
sbb
scas
xor
lds
loop
push
repnz
jg
pop
popa
mov
loopne
mov
fdivrs
mov
and
out
inc
mov
test
push
movsl
clc
lea
jnp
inc
xor
mov
out
loop
loopne
adc
pop
pop
sbb
cmpsl
aam
dec
dec
ret
mov
pop
aaa
mov
dec
popa
dec
cmp
test
jmp
rcll
sub
out
jne
jecxz
iret
inc
add
jecxz
shr
cmp
xor
lods
or
adc
mov
cmp
xor
icebp
mov
pop
jg
push
sub
or
aam
imul
in
inc
push
loope
dec
adcl
stos
sbb
mov
or
fwait
sbb
lret
dec
movb
int
mov
pushf
fwait
inc
sub
inc
mov
inc
dec
call
lods
arpl
inc
idivb
fldcw
mov
pop
stos
aaa
outsl
rcrl
and
pop
mov
jmp
jle
test
jo
pop
xchg
push
cli
dec
iret
mov
test
add
or
push
sahf
divl
push
ficomps
jmp
jnp
cld
and
rcrl
jecxz
lods
mov
cmp
aad
mov
sub
jmp
faddl
test
mov
mov
xchg
dec
pop
iret
xor
outsl
iret
dec
nop
jge
psrld
push
jno
cmpsl
stc
push
popf
sar
pop
imul
movsl
loope
das
icebp
xchg
dec
ljmp
dec
ja
mov
cld
mov
sbb
cmp
mov
inc
push
imul
and
out
stos
aas
call
fstpt
mov
popf
in
mov
pop
clc
or
push
and
sub
mov
mov
mov
dec
std
cmp
cmp
mov
add
sub
js
std
dec
cmp
sbbb
push
pop
bound
mov
push
aam
inc
cmp
mov
rorb
stos
fistl
loop
adc
jmp
pop
mov
sub
repz
push
push
outsb
push
movsb
and
dec
cmp
cltd
addr16
jl
xor
in
dec
bound
into
pop
and
push
sub
idivb
pop
hlt
cmpsb
and
mov
sub
mov
pushf
stos
aam
xor
xorl
fdivrl
sbb
mov
bound
cltd
jnp
cmc
lret
push
aad
insb
mov
shr
mov
lcall
lock
psubusw
sbb
shll
scas
dec
jecxz
in
pop
cmpsl
sbb
inc
push
mov
push
xor
cwtl
imulb
lret
inc
faddl
lock
into
sbb
or
es
test
mov
mov
pusha
arpl
dec
sub
mov
push
test
mov
popa
push
mov
jns
repz
mov
addb
mov
mov
adc
xchg
pop
mov
add
xor
cmp
das
ret
inc
lahf
popa
pop
ror
dec
sbb
dec
xchg
call
push
pop
dec
add
or
xor
jno
stos
ljmp
out
arpl
mov
hlt
aas
mov
icebp
inc
sbb
dec
pop
xor
lods
in
pop
nop
ret
or
pop
gs
add
stc
push
push
lods
ds
rclb
pop
jae
out
out
adc
imul
movl
insb
clc
int3
jmp
inc
sub
out
and
sbb
rcll
adc
es
mov
xor
pop
jo
daa
mov
dec
add
pop
cmp
pop
movsl
dec
and
scas
add
ss
adc
pop
sub
jno
movsl
xor
arpl
stos
bound
fstps
mov
lahf
cmp
addr16
aad
imul
and
ret
sbbb
push
and
movsb
sbb
stos
in
in
lret
shr
xor
je
sub
cld
adc
call
std
xchg
ljmp
es
dec
mov
jnp
in
loope
xor
test
call
mov
imul
popf
add
sub
mov
adc
mov
mov
dec
nop
test
dec
cmp
add
sarb
xchg
xchg
inc
in
popa
out
fidivs
wrmsr
xor
ljmp
or
in
call
sti
dec
jg
lods
push
cwtl
jl
andl
adc
xor
inc
ror
push
inc
popf
mov
or
lahf
sbb
shll
jno
ret
clc
dec
js
mov
jmp
ja
sar
rolb
aas
mov
rolb
fldcw
out
lds
xchg
sar
cmc
sar
in
mov
mov
jg
cmp
daa
pop
pop
jmp
lret
sbb
aas
jmp
sub
ret
cltd
dec
sbb
dec
cli
iret
fists
paddw
pop
sub
pop
mov
insb
aas
sbb
stos
mov
or
dec
push
into
mov
mov
sbb
sti
or
inc
sbb
div
jo
das
sub
cltd
push
rcl
lea
das
pop
fisttpll
sbb
or
outsl
jbe
or
mov
xchg
or
out
mov
xchg
shl
out
adc
sbb
jle
stc
out
divl
aas
scas
sbb
fimuls
xor
ss
push
jo
pop
std
mov
jp
ja
pusha
xchg
mov
test
lcall
mov
stos
cmpsl
rcr
cwtl
inc
nop
mov
loop
stc
in
in
movsb
shr
imul
cltd
std
nop
bound
add
xchg
ljmp
ds
jmp
mov
mov
sub
sbb
add
mov
daa
push
lahf
pop
sbb
mov
push
movb
or
push
push
push
into
xor
cmpsb
subb
mov
mov
lret
inc
cmpsl
jae
lds
mov
xchg
push
pop
push
xchg
out
shrl
adc
lds
and
mov
sub
imul
pop
and
add
mov
sbb
out
scas
sti
push
movb
push
xchg
jl
jbe
aad
adc
adc
cmpsl
loope
dec
in
test
and
inc
rcr
jnp
or
hlt
gs
adc
pop
int
lret
inc
xor
aas
pop
mov
cld
jae
mov
dec
dec
pop
mov
inc
call
sub
addr16
scas
lcall
inc
enter
les
lods
pop
push
orb
iret
mov
nop
scas
inc
or
repnz
out
ret
pop
addb
xchg
xchg
stc
push
call
jp
push
pop
or
leave
inc
aad
pop
repz
sub
cmp
mov
insb
xor
fisttpl
ljmp
push
lcall
ss
repz
rcrb
test
decb
push
xchg
cli
mov
cmpsb
outsl
hlt
mov
dec
jae
pop
mov
lds
pop
lds
loop
lock
mov
inc
sbb
int
dec
mov
sub
adc
or
or
repz
push
xor
inc
push
mov
clc
or
push
in
pusha
dec
inc
pop
js
loop
loope
adc
arpl
mov
adc
or
out
hlt
mov
inc
das
inc
mov
pop
negl
into
mov
mov
inc
jns
sub
mov
dec
pop
xchg
shrb
jo
xor
cld
cmp
jp
test
sub
add
add
call
adc
jmp
inc
pop
cmp
add
pushf
icebp
in
mov
push
pop
lea
mov
pop
lret
int
shrl
pop
inc
lods
sbb
hlt
sub
xchg
shlb
loope
out
in
jl
mov
xor
lret
or
out
jmp
leave
test
mov
and
ljmp
in
xchg
xchg
mov
in
pop
or
add
or
data16
lods
push
xchg
sbb
mov
cld
xor
shll
lds
jecxz
rcrb
movsl
scas
fmull
mov
outsb
mov
jmp
or
pop
mov
jno
adcl
idivl
adc
sarb
fisubl
add
push
sti
movsl
xor
les
and
outsl
or
mov
mov
faddl
fistpll
cmp
adc
leave
test
lret
push
out
mov
lods
int3
push
jns
rcll
push
mov
push
add
pop
jmp
sbb
cmc
mov
loop
movsb
outsl
adc
popa
or
int3
xchg
add
jns
or
or
mov
xchg
pop
loop
pop
enter
cmc
sbb
xchg
push
cmp
push
mov
xor
jne
add
das
popa
mov
icebp
mov
cmc
add
dec
mov
sub
out
sbb
in
lds
cmp
les
push
mov
xor
dec
push
popa
popa
cltd
sbb
pop
in
and
movsb
stos
fcoml
sbb
or
addb
xchg
scas
mov
xorb
xor
mov
add
dec
xchg
push
pop
inc
inc
scas
mov
js
clc
dec
in
mov
xchg
cltd
dec
pop
fwait
push
add
or
sub
cmpsl
popf
dec
jo
nop
sahf
mov
and
push
decl
stc
mov
cmp
mov
fmuls
jmp
loopne
dec
add
or
sbb
xchg
stc
jmp
mov
shlb
mov
popa
pop
push
mov
inc
leave
cwtl
pop
imul
movsl
fiaddl
inc
mov
dec
test
pop
int
dec
in
add
jnp
cmpsl
and
sub
xor
into
cmpsl
mov
push
or
fdivl
aam
inc
cs
jle
ret
mov
adc
pop
pushf
stos
and
pop
xchg
push
or
rcrl
lods
sub
pop
xchg
push
cmp
test
push
imul
int3
push
sbb
mov
push
lret
lcall
lods
mov
adc
sub
aam
adc
inc
stos
xchg
and
aas
xor
cmpsl
cmp
in
std
rolb
push
pop
aam
lahf
insb
jns
mov
jl
imul
mov
inc
je
popa
pop
loope
mov
inc
jl
leave
inc
push
popa
push
in
dec
jnp
jnp
push
cmc
das
jecxz
mov
aad
rorb
inc
add
ret
call
inc
push
push
push
mov
inc
mov
jno
negb
sub
jno
rcrb
jle
adc
das
mov
jno
xlat
mov
fstl
jo
mov
ss
or
mov
sub
sar
dec
jg
and
and
xchg
loope
push
imul
pusha
aad
cmp
scas
xchg
push
inc
mov
ja
mov
push
xor
pop
rorb
adc
mov
les
test
scas
aad
inc
lods
in
lods
fcmovu
mov
mov
pop
nop
int
pop
stc
pushf
movsl
lods
subb
fs
sahf
add
adc
hlt
push
aaa
sarb
loopne
aaa
hlt
in
cld
lret
push
or
aas
rorb
std
jg
out
push
jns
dec
out
pop
test
xor
cmpsl
repnz
add
ja
cmp
mov
into
add
xchg
mov
sub
mov
js
stos
nop
enter
loopne
sti
sbb
cmc
adc
push
and
sbb
mov
pop
dec
ds
ds
lods
fsts
xorb
enter
ret
arpl
jo
pushf
into
imul
add
js
xor
shl
mov
movsl
ja
arpl
lret
addl
adc
stc
inc
xor
negl
sub
shrb
pop
cmp
push
cs
jge
int3
inc
jmp
sti
loopne
not
pop
sbb
pop
sti
cmp
sarl
fildll
addr16
mov
stos
cmp
mov
cmp
xor
int
or
mov
std
pushl
pop
xchg
sbb
into
sbb
add
popf
add
jmp
jnp
jae
adc
xor
int
jecxz
cmc
sub
out
cli
ficomps
andl
push
test
mov
sbb
call
lock
cmp
ret
fisubs
les
lret
hlt
xchg
inc
pop
jg
out
orl
mov
sub
push
or
push
dec
gs
and
mov
out
cmp
les
push
sub
es
jl
imull
fldl
xchg
ja
and
es
call
xlat
xchg
in
incl
adc
subl
push
loope
aam
test
jbe
daa
push
pop
test
jbe
adc
hlt
jp
push
hlt
les
or
mov
xchg
lea
insb
mov
mov
insb
js
lcall
sub
sbb
jo
loope
mov
inc
xor
xchg
je
and
cmp
jnp
in
mov
cmpsb
xor
sbb
fbstp
out
or
jle
inc
mov
sub
jne
lds
call
xchg
lds
mov
ret
add
imul
test
call
test
cmp
jo
dec
nop
adc
in
stos
dec
call
mov
mov
test
mov
nop
inc
or
ljmp
js
mov
test
cwtl
pop
je
call
mov
enter
mov
addl
out
xrelease
ljmp
cs
mov
push
cmp
mov
lock
add
clc
test
loop
mulb
xlat
dec
test
adc
mov
mov
dec
or
mov
and
xchg
clc
inc
or
xchg
xchg
jge
cmp
nop
shlb
rolb
mov
and
push
cmpsb
sbb
fildll
dec
cmpsl
arpl
mov
dec
imul
inc
repnz
mov
bound
mov
insl
xlat
imul
test
push
jb
je
lock
rorb
jp
pop
xchg
xchg
and
hlt
xor
inc
or
jne
bound
lcall
les
leave
fs
fstl
jnp
xchg
lcall
mov
push
test
cltd
xor
enter
outsb
adc
push
mov
dec
and
enter
push
out
out
lret
inc
ror
and
in
loope
fimuls
cwtl
push
mov
add
sub
mov
push
mov
cmp
out
add
es
mov
cmp
into
lods
add
ljmp
cmp
inc
int3
dec
mov
cmp
and
mov
icebp
fst
add
sbb
rcll
inc
cltd
and
add
lods
loop
mov
jb
and
xchg
sbb
mov
lock
push
in
add
pop
inc
sub
adc
sub
fcoms
cmp
mov
mov
gs
add
je
roll
pop
popf
xchg
inc
outsl
pop
jns
clc
adc
loopne
push
xchg
mov
std
fstpt
out
push
dec
cltd
popf
push
cmp
fidivrs
inc
fucomip
jp
call
cmpsb
cli
sti
jb
xchg
inc
pop
cltd
pop
jmp
ds
xor
or
pushf
push
ja
mov
rcrl
test
push
in
aad
add
jns
fisubrs
push
sub
jmp
push
jmp
sbb
xor
lahf
mov
test
scas
dec
cli
aas
xchg
push
pop
xor
fsubl
scas
push
addb
je
mov
xchg
clc
cmp
insl
sub
fwait
push
jae
jns
out
cmc
mov
mov
xchg
push
sub
mov
mov
std
push
jl
and
jl
add
testb
ljmp
movsl
xchg
dec
adc
pop
or
sbb
ret
push
sbb
xor
iret
and
jne
outsl
shrl
lock
lods
or
dec
push
ljmp
ret
movsl
mov
clc
mov
test
cmp
scas
js
jno
std
js
fs
test
pop
push
xchg
xchg
scas
adc
enter
mov
mov
sti
pop
mov
out
cltd
test
xchg
outsl
rorb
je
cli
and
push
mov
push
lock
shl
dec
dec
dec
aas
push
clc
mov
sub
or
push
stc
mov
mov
push
loope
in
sahf
or
in
xchg
lea
cwtl
adc
std
sar
ljmp
pop
ds
sbb
cmc
fwait
rclb
and
jmp
lea
inc
pop
pop
pop
mov
clc
mov
push
ret
xlat
xchg
dec
enter
pop
pushf
les
lods
push
jne
cmpsl
cmp
jge
inc
add
jbe
jl
rcrl
aas
xchg
sub
popf
in
mov
popa
inc
xchg
repz
stos
cmc
cli
xor
and
ret
inc
out
add
pop
sub
sbb
mov
adc
xchg
jmp
popa
fidivrs
ficoms
mov
icebp
mov
xchg
pop
scas
jo
fidivrl
cmpl
jns
sti
stos
popl
or
mov
shrb
or
xchg
adc
inc
xor
sub
enter
in
jmp
jge
imul
in
xchg
jmp
mov
sbb
xchg
call
fwait
xchg
rcll
ret
loope
scas
lods
insl
jmp
popa
aad
bound
mov
add
sbb
add
mov
jmp
pop
inc
mov
mov
ret
xor
loope
pop
xchg
jmp
aam
outsb
dec
adc
push
inc
sbb
push
mov
ret
and
fwait
push
jmp
test
xchg
xor
aam
xor
xor
and
nop
decl
mov
xor
xchg
loope
sarb
pop
aas
stos
add
xchg
sarb
cld
inc
int3
xchg
cmp
inc
shrb
sub
in
fildl
fs
int
push
test
stos
add
lods
jbe
loop
add
add
sbb
shll
mov
out
xchg
lcall
push
mov
loope
push
bound
hlt
inc
mov
rcrl
jns
pop
dec
push
lods
mov
push
mov
mov
mov
push
out
push
ret
push
inc
repnz
lds
dec
hlt
insl
mov
lret
in
mov
imulb
insl
add
mov
adc
lahf
mov
dec
imul
decl
push
mov
mov
ret
add
mov
xchg
inc
sahf
ret
mov
xorl
sbb
push
push
and
push
cld
psubw
dec
pop
and
jno
sti
les
add
movsb
and
adc
outsl
loopne
fildll
mov
cmp
repnz
aad
mov
insb
mov
push
outsb
mov
rorl
out
sub
xchg
sahf
popa
les
mov
cmpsb
stos
cwtl
xchg
push
cmpsl
inc
dec
cmp
lock
mov
aam
sbbb
nop
imull
pushf
xor
loope
pusha
or
inc
push
jp
jne
leave
mov
in
jecxz
loopne
fimull
jns
push
dec
pusha
popf
jno
sahf
lods
pop
adc
sarl
rclb
xchg
cmp
adcl
lcall
mov
movsb
mov
add
pop
in
int3
stos
cmp
mov
cmp
mov
mov
out
aaa
pop
stc
syscall
sub
fadd
loop
adcl
fsubl
push
mov
mov
stos
out
test
ret
pop
ss
inc
xchg
jg
dec
test
push
pop
insb
enter
jecxz,pt
mov
push
fisubl
pop
call
nop
sbb
sbb
push
fdivrp
out
xlat
data16
jecxz
dec
lds
and
outsl
out
popa
and
xchg
aas
xor
stc
nop
jle
add
push
mov
mov
insb
lea
dec
adc
hlt
sub
repz
stos
jge
xchg
add
jno
pushf
inc
fidivrl
lcall
jecxz
jmp
flds
jae
cltd
testl
fstpl
and
imul
test
stc
sbb
movsb
cs
call
shrl
xchg
xchg
imul
iret
jne
push
push
cli
lea
mov
fsts
pop
ficomps
js
xor
scas
jo
mov
and
or
leave
jb
mov
jg
and
test
mov
popf
dec
cli
stc
adc
int
dec
xchg
cmp
push
sub
sbb
into
loope
pop
cmp
mov
loopne
std
int
ja
sbb
dec
pushf
add
dec
bound
in
mov
and
ja
push
jno
cmp
dec
movsb
sub
out
xor
cmpb
dec
iret
mov
ja
popf
add
ret
stos
xor
daa
mov
pushf
mov
out
mov
movb
jg
aaa
cltd
cmp
ds
mulb
ret
jns
mov
mov
pop
xchg
add
cmp
push
outsl
sti
push
ja
mov
jge
int3
insl
call
fs
sbbl
inc
iret
adcb
inc
loop
and
out
mov
push
fimull
ds
insl
cltd
sub
jmp
jmp
mov
lods
je
ret
push
mov
ja
pop
dec
lret
pop
pop
xor
inc
or
or
pop
lcall
inc
adc
adc
jecxz
jnp
fs
stos
xor
je
test
and
jae
mov
into
lock
lock
stos
cmp
out
cld
jmp
sbb
jmp
dec
push
mov
pop
push
repnz
mov
enter
aad
mov
cltd
or
and
mov
scas
pop
xchg
mov
sub
shrl
adc
xchg
frstor
loop
add
push
stos
fdiv
sahf
pop
sub
das
mov
stc
sbb
fimull
push
je
lcall
sarl
pop
inc
inc
xor
xchg
push
loope
cmp
rcr
inc
add
pop
arpl
pop
idivl
cmp
adc
and
test
push
das
jne
sub
inc
jl
adc
xchg
lods
sub
mov
test
jne
xorb
add
roll
push
inc
imul
push
xchg
imul
into
fidivs
pop
inc
xchg
mov
dec
and
xor
movsb
push
test
dec
ss
or
jns
daa
imul
out
dec
add
sub
aad
adc
cmp
inc
cmpsb
sub
dec
movl
insb
fisttps
cmpsl
xchg
das
popa
mov
sub
mov
xor
arpl
int3
jae
xor
dec
call
iret
inc
xchg
lret
fs
adc
sbb
push
or
loopew
mov
jmp
flds
jnp
hlt
in
das
dec
sbb
outsb
sbb
cld
sahf
pusha
les
cmp
dec
fsubrs
scas
out
test
shr
cmp
xchg
repz
in
sbb
pop
mov
icebp
iret
aas
mov
sub
ret
xchg
jp
in
movsl
mov
push
inc
mov
hlt
push
test
addr16
pop
stc
ficompl
lds
inc
sub
push
mov
mov
xor
test
pop
fnstcw
add
xchg
je
xor
xchg
jne
nop
aad
and
jmp
add
cmp
mov
popf
mov
fmul
lock
lret
mov
adc
or
outsb
daa
add
and
pop
negl
call
adc
repnz
pop
pop
pop
icebp
add
add
add
adc
add
dec
mov
je
push
pop
cmpsb
sub
xor
mov
xchg
or
rcr
jmp
ljmp
mov
or
jp
pop
jg
push
lea
jp
popf
int3
nop
pop
pusha
inc
dec
sar
mov
rolb
mov
adc
lds
xchg
or
mov
out
insl
hlt
xlat
pop
pop
xor
les
push
fisubs
inc
push
jb
dec
fcmove
ja
outsb
mov
cmp
and
pop
mov
inc
aas
jecxz
sbb
cld
mov
out
jno
mov
inc
pop
cli
fs
xchg
cmp
add
fnstsw
in
jb
dec
jecxz
jle
dec
scas
jecxz
cs
sub
add
push
lret
mov
test
xchg
repnz
dec
push
adc
push
mul
es
jp
cmp
xor
jno
test
push
inc
lods
sub
push
je
sbb
ds
movsb
mov
pop
setae
js
inc
xchg
cmp
dec
mov
sub
jns
push
in
rolb
ffree
fdivs
stos
outsl
stc
jecxz
xor
out
jg
movsb
and
xor
jle
jle
cmp
mov
sub
push
and
movsl
and
lahf
add
imul
lods
int3
push
xchg
inc
rorl
scas
cmp
incb
jnp
xor
call
mov
cmpsl
sub
inc
imulb
cmpsb
jb
cmp
mov
ret
jb
push
insl
cltd
add
subb
out
fisubrs
inc
mov
xor
and
mov
aad
std
pop
jnp
and
aad
mov
sbb
je
pop
xchg
movsl
ja
pop
push
jecxz
in
lcall
pushl
xor
jg
add
decl
aas
popf
jb
cld
inc
rolb
shlb
sbb
mov
jmp
lret
push
ljmp
mov
std
imul
lahf
ret
in
push
pop
int
fmull
mov
or
xor
aad
xlat
cmpsl
in
lahf
jmp
push
inc
fidivl
sbb
stc
sub
fsub
rorb
jbe
push
mov
test
push
xor
in
mov
and
js
or
or
rolb
or
mov
lret
fstpl
xchg
idivb
lods
push
push
cmp
aaa
std
mov
mov
out
push
sbb
fidivl
hlt
pop
jno
popa
mov
cmp
sbb
inc
xchg
out
mov
pushl
or
pop
push
inc
lret
add
xor
mov
cli
inc
loop
mov
cmp
imul
pop
aad
addr16
mov
stos
iret
sub
adc
push
mull
cli
cmpb
add
dec
add
push
out
lock
shll
aaa
inc
cmp
and
push
jp
push
sbb
and
push
repnz
test
jo
cltd
cmpl
cmpsl
adc
cli
mov
xchg
mov
fstps
mov
repz
pop
outsb
subb
pop
jge
xchg
repz
aas
lods
repz
cmp
adc
dec
cmc
js
flds
xchg
in
xor
movsb
xor
and
or
jg
xor
addr16
rclb
shrb
cmp
adc
imul
test
and
sub
ja
lahf
icebp
adc
jno
mov
add
mov
or
andl
jp
aaa
out
pop
mov
mov
push
mov
push
sbb
aam
jae
xchg
rcll
fcmovnbe
loop
add
and
jbe
outsb
xchg
adc
fs
jbe
in
mov
inc
and
jns
test
dec
xchg
inc
shrb
push
mov
sub
out
movsb
cli
mov
popf
sbb
mov
subb
xor
cs
cwtl
cmp
jae,pn
jb
add
mov
push
push
pop
cli
jo
outsl
repz
sub
cmp
cs
mov
dec
xchg
pop
or
jns
mov
cmc
pop
loopne
cmp
mov
dec
adc
sub
push
lret
sti
or
movsb
push
pop
ret
and
lcall
imul
loopne
cmp
sub
fidivrs
movsb
jne
inc
mov
cmp
jb
cmp
cltd
inc
mov
cmpsl
std
faddl
or
imul
sub
clc
leave
and
cmp
outsl
xchg
pushf
pusha
pop
ror
mov
jb
cmp
iret
dec
sub
out
push
and
add
sub
ljmp
xchg
sub
mov
mov
jno
in
cli
and
pop
in
mov
jmp
pop
mov
idivb
cmp
sbb
movsl
pusha
rcll
loopne
or
ss
jae
dec
clc
daa
test
xor
pop
iret
cmp
pop
je
jmp
push
pop
and
in
pop
xchg
and
jl
or
imul
pop
mov
adc
addr16
in
dec
inc
mov
scas
lret
sbb
into
sbb
shlb
mov
jecxz
push
jae
cld
mov
lock
jmp
cld
cltd
push
nop
in
push
push
dec
adc
mov
xor
mov
mov
sti
out
addr16
int3
decb
cwtl
push
mov
and
mov
jnp
xor
in
int3
lods
adc
sbb
cmp
mov
push
mov
sub
adc
aaa
add
nop
pusha
xchg
jb
pop
rcrl
in
daa
xchg
jb
data16
sbbl
into
pop
testb
loopne
pop
cmp
cwtl
mov
cltd
repz
ja
sub
icebp
and
scas
dec
mov
js
sti
jp
jb
inc
fidivrl
sub
and
movsl
push
leave
cmpb
ror
stc
push
ds
add
sbb
xor
jno
sahf
js
outsb
popa
inc
cmc
xchg
cli
movsb
or
sbb
mov
push
add
call
mov
mov
rcr
inc
in
add
dec
or
stos
mov
adc
xor
adc
scas
sub
mov
adc
pop
adc
sub
mov
and
incl
movb
mov
ret
aas
sub
mov
and
popf
bound
pushf
pop
xchg
jle
mov
push
arpl
pop
das
pusha
fsts
dec
call
adc
incl
jno
int
mov
dec
mov
in
mov
mov
and
or
leave
cmp
xchg
or
fistpll
pop
xchg
popa
adc
ja
dec
ljmp
ficomps
sub
outsl
xchg
stos
in
fildl
aad
lock
loopne
inc
ss
sub
jle
xchg
push
push
leave
push
xchg
jo
scas
out
add
les
out
fldcw
cltd
ret
sti
mov
bound
add
std
cs
loope
or
gs
xchg
mov
push
fisttpl
jae
push
stos
mov
pop
add
fldt
mov
cli
cmpsb
gs
or
rolb
pusha
nop
push
xor
cmp
into
icebp
mov
lcall
ret
fwait
iret
mov
jno
mov
jbe
sub
cmp
or
adc
out
sbb
cli
pop
push
and
add
push
cwtl
aaa
dec
lock
mov
rcll
or
icebp
xchg
lret
inc
aas
out
inc
test
cli
loope
inc
add
xor
repnz
xor
popa
scas
adc
outsb
add
out
stos
adc
xor
push
mov
dec
addr16
mov
or
aam
mov
push
sbb
jnp
fimull
fnstcw
dec
cmc
push
leave
call
sub
cmc
sbbl
mov
mov
popf
clc
in
or
mov
out
in
and
inc
stc
mov
int3
outsb
pop
inc
iret
clc
in
jb
aad
es
inc
lods
or
jmp
lock
or
mov
pop
scas
cmpsb
adc
sub
shl
dec
jecxz
cwtl
stc
adc
mov
mov
push
in
movsl
push
popa
and
popf
or
fdivrs
jle
std
sub
or
stc
mov
push
sub
xorl
cmp
imul
jno
jno
and
mov
pop
popf
sahf
jae
add
push
mov
or
pop
pop
push
in
or
and
ja
push
add
mov
sahf
xor
cli
push
pop
or
jo
mov
fcmovu
or
das
cmp
inc
push
jg
or
sbb
xlat
fsub
outsl
mov
pop
jae
inc
std
mov
mov
data16
xchg
loope
mov
mov
push
les
cmp
mov
sarl
jae
es
repnz
inc
sahf
ret
dec
inc
xor
jl
pop
mov
bound
lcall
popf
mov
roll
stos
mov
loop
pusha
cmpl
adc
aaa
lret
mov
push
push
mov
movsb
inc
nop
xor
stos
leave
jp
jno
jmp
push
std
pop
cmp
pop
addr16
sti
mov
xchg
ret
jecxz
cmp
pusha
insb
stos
pushf
lods
lea
loopne
cmc
pop
pop
jae
fwait
pop
cwtl
sti
mov
jns
popa
adc
mov
lret
scas
stos
jbe
das
in
adc
add
es
xor
xchg
and
inc
mov
pop
mov
loope
out
in
push
xchg
scas
sbb
pushf
subl
xchg
into
push
jne
jecxz
lcall
orb
test
or
pop
ss
inc
dec
out
pop
inc
pop
dec
shll
xchg
cld
sti
xacquire
dec
sbb
dec
std
push
fcomps
imul
adc
ja
addr16
sub
js
or
add
sbb
jns
push
pop
cwtl
cmc
into
or
dec
dec
out
mov
mov
out
fsubl
cmc
stos
xor
cmp
js
je
jmp
sub
test
dec
inc
inc
push
add
adc
lods
inc
rcrb
xorb
movsl
mov
adc
jbe
test
lahf
divl
mov
fcompl
kmovw
mov
adc
xlat
test
imull
xchg
ret
pop
in
test
adc
pop
mov
mov
lea
movsb
ja
movsb
jb
inc
cmp
cmp
ljmp
xchg
test
lahf
pop
jp
stos
rcll
sti
dec
dec
fs
xor
insl
lcall
pop
mov
sbb
mov
cmpsb
jo
push
or
mov
pusha
pop
sahf
sbb
es
hlt
cmp
sub
or
xchg
pop
popf
loopne
decl
inc
or
add
fistl
shr
inc
movsl
inc
scas
insb
es
cs
jne
cmc
mov
jp
jno
inc
fcmovbe
aad
and
mov
sub
adc
jbe
stc
cmc
lret
repz
or
jp
cltd
cmpsb
xor
pop
xor
jns
xlat
shlb
lods
or
imul
push
scas
dec
adc
push
mov
and
in
jo
sub
lods
cmp
cmp
cmp
and
or
mov
ljmp
xchg
xor
in
xor
gs
ja
lahf
fistps
pushl
hlt
les
out
shl
dec
icebp
jb
or
jge
sub
cwtl
mov
stos
dec
cmp
pop
fldt
inc
add
pop
jbe
sub
rcr
mov
movsl
enter
jmp
jl
xor
imul
orl
clc
shll
xchg
jmp
pop
jb
lds
hlt
dec
dec
ret
test
add
jbe
andl
or
jne
jl
test
dec
jmp
xchg
sbb
cwtl
xchg
mov
cs
cmp
add
stos
mov
xor
push
sub
mov
popf
loop
mov
enter
pop
jo
lock
mov
in
shlb
push
xchg
xlat
lods
lds
not
and
inc
popa
and
xor
test
mov
fbstp
pop
xchg
mov
inc
lds
leave
jne
sbb
cmpb
stc
fnstenv
jns
daa
lea
push
and
sub
sub
jne
shrl
mov
clc
imul
sub
mov
jl
jnp
xchg
movsl
into
rolb
dec
pushf
dec
mov
fdivl
cli
cs
cmp
insl
sarl
cmpsl
daa
in
cli
push
xor
dec
addl
and
xchg
scas
or
add
mov
xor
mov
mov
test
addr16
dec
hlt
movsl
push
pop
xchg
jle
mov
dec
fadd
pop
clc
mov
pop
test
sti
jle
push
xor
stos
dec
dec
jge
mov
lahf
cmpsb
pop
enter
lods
in
mov
in
js
mov
ret
sbb
imul
xchg
inc
dec
xor
lea
push
mov
push
adc
and
and
jnp
fndisi(8087
mov
cltd
adc
jnp
push
ljmp
aas
das
aas
xchg
jl
fs
jns
test
in
mov
mov
jmp
sbb
js
add
push
mov
mov
cmp
push
out
pop
testb
sub
mov
inc
jnp
cmp
lahf
xor
filds
insb
aad
and
arpl
xorl
cmp
movsb
mov
testl
jo
stc
mov
out
or
xchg
movsb
je
pop
xchg
out
or
pushf
jbe
jp
inc
and
ljmp
pop
pop
dec
xor
mov
push
push
sti
cmp
rcl
dec
push
stos
cs
jl
jp
popf
leave
pop
inc
fwait
roll
decb
mov
cmpsl
inc
das
or
in
sbb
jecxz
movsl
xor
les
mov
mov
sub
push
xchg
xor
jns
addr16
out
repnz
test
rolb
push
daa
mov
ljmp
repz
das
sub
inc
js
xorl
sarl
mov
int3
andb
rcrb
and
aaa
sahf
data16
arpl
dec
sahf
xchg
mov
jl
cli
add
fcmovnbe
and
mov
xor
mov
inc
inc
mov
call
push
mov
popf
mov
push
and
sub
fldenv
bnd
outsl
jmp
iret
and
js
xchg
cmp
andps
xor
mov
sbb
fmull
xor
imul
sub
cwtl
mov
or
sub
mov
push
mov
xchg
ljmp
mov
testl
cmp
aad
fstpt
ja
add
decb
pop
add
sub
ss
pop
push
inc
popf
bound
cmpsb
or
add
push
inc
pusha
add
fcompl
dec
sub
cld
popfw
je
mov
push
popa
fwait
pop
mov
test
dec
aad
jl
mov
nop
xchg
jbe
imulb
loop
sub
push
ja
cmp
sub
inc
fwait
xchg
push
adc
xchg
xchg
xchg
cmp
je
clc
xor
cmp
jne
aas
cmp
dec
shll
jl
push
inc
xchg
mov
in
int
xor
pop
xor
xchg
insl
mov
int3
lods
jnp
inc
sti
mov
fiadds
mov
inc
inc
aam
pop
xor
mov
in
div
mov
xchg
in
sbbl
je
repnz
lret
jns
mov
scas
xchg
mov
cmc
fdivrl
push
mov
fmull
jbe
add
xor
daa
push
fcomps
push
or
xor
jb
shl
sbb
xchg
stos
je
xchg
inc
rcrl
test
leave
sbb
nop
mov
mov
pop
inc
clc
arpl
leave
call
stos
ss
sbb
lea
mov
loopne
jecxz
aam
ret
sub
push
loop
cmpsl
aam
std
xlat
mov
ret
shlb
ds
add
negl
imul
push
xchg
pop
imul
ljmp
lcall
stos
mov
iret
in
push
rclb
xor
aam
pop
xchg
insb
push
and
jle
inc
xchg
imul
xchg
jnp
push
mulps
aam
or
mov
fidivrl
jle
ja
mov
push
pop
ja
sti
mov
jecxz
les
inc
sarb
adc
xchg
mov
jecxz
pop
adc
add
fxch
push
outsl
pop
cmp
stos
sbb
sahf
adc
dec
cmp
ja
test
sub
lahf
fidivrs
cmpsb
daa
orb
add
push
mov
xchg
sbb
mov
shll
jl
decl
lret
enter
fsubrs
cld
adc
sahf
imul
lahf
dec
decb
outsb
divl
clc
jne
subl
lret
cmp
add
and
pushf
out
daa
or
push
mov
mov
mov
addr16
dec
and
pop
lcall
pop
pop
adc
inc
jg
push
icebp
cmpl
sub
imul
mov
mov
ret
je
pop
fwait
pop
and
repnz
in
and
out
js
xor
xchg
leave
call
mov
stos
inc
into
push
loopne
jno
ljmp
adc
mov
dec
out
jmp
add
shl
js
in
rcll
sbb
call
insb
sub
test
outsb
call
idivb
call
mov
or
mov
add
icebp
out
or
jmp
test
repnz
adc
pop
push
inc
ficoml
mov
ljmp
adc
decl
mov
dec
sahf
dec
stc
inc
dec
mov
mov
outsb
mov
cmp
mov
jecxz
std
insl
ss
imul
les
cmp
lods
movsl
mov
sahf
pop
daa
lret
xor
adc
loope
aad
fs
mov
xlat
push
repz
add
push
jecxz
ja
xor
jnp
xor
cmp
scas
pusha
xchg
je
sbb
test
test
mov
out
mov
adc
push
leave
add
cmpsb
stc
push
adc
adc
fisttpll
fld
int3
in
movsb
inc
loopne
pop
pop
push
mov
push
imul
outsl
jl
arpl
std
sub
stos
pop
repz
lock
mov
das
stc
mov
sbb
add
sahf
imul
pop
jne
jmp
std
cs
push
xchg
lods
mov
add
int3
daa
or
mov
les
fwait
popa
outsb
adc
call
fwait
sbb
jge
cmpsb
cmp
pop
jle
fildll
outsl
push
loope
outsb
out
aas
inc
mov
sub
inc
test
movsb
clc
and
cmc
and
adc
jae
sahf
xor
sbb
mov
xchg
adc
aas
scas
adc
out
shrd
daa
pop
sbb
jae
cmc
arpl
mov
shrl
mov
xorb
fidivrs
push
or
lcall
sbb
in
enter
cmc
jmp
inc
inc
lds
cwtl
xor
push
aad
jno
dec
scas
es
sbb
mov
imul
and
iret
xlat
test
pop
test
stos
pop
aaa
xor
lret
adc
add
push
cmp
sub
dec
xchg
or
outsl
adc
xchg
xchg
aas
sarl
in
mov
push
or
sub
sub
add
fsubrs
xlat
jg
mov
ret
and
addr16
add
jp
mov
test
arpl
mov
xor
add
jmp
adc
pop
xchg
sbb
test
pop
adc
push
insb
cmpsl
and
repz
sti
push
fisubl
mov
sbb
lret
mov
ret
flds
mov
xor
sbb
sahf
in
and
movsl
arpl
ret
aad
dec
push
out
adc
pop
and
cmp
call
scas
adc
jge
xchg
adc
adcb
or
cmp
jecxz
cmp
mov
insb
xchg
pop
fadds
js
cmpsb
cmpl
mov
xchg
rol
jg
scas
fs
btr
lds
lock
lret
test
dec
xor
jge
inc
or
sahf
fisubl
inc
xor
inc
rcrb
adc
push
scas
jge
mov
push
and
jnp
sub
sbb
ret
test
inc
push
out
pop
inc
cmp
cmp
test
into
in
jecxz
call
xchg
js
add
cmp
outsl
rcr
fstl
repz
clc
ss
nop
ret
mov
movsb
and
jo
mov
std
xchg
add
dec
shll
test
lea
mov
jle
inc
mov
lds
rclb
xchg
cmc
imul
cmp
stos
xor
fcmovb
into
imul
cmp
das
mov
insb
fcomps
insl
dec
xchg
outsl
outsb
aaa
aas
xchg
adc
ret
xchg
xor
dec
mov
jge
aas
popf
insb
shr
lahf
lods
sbb
test
lods
push
cs
mov
pop
out
adc
addr16
mov
fnstcw
pop
jnp
sub
shlb
ja
add
sbb
adc
or
gs
scas
add
xchg
push
lret
ret
xchg
xor
mov
add
mov
das
push
or
inc
dec
imul
jmp
pop
mov
scas
arpl
xor
sbb
or
popf
add
mov
push
repz
jmp
push
es
fidivl
xchg
in
mov
cmp
push
or
fsubl
jge
pop
mov
shr
mov
repnz
pop
shll
imul
dec
outsl
push
mov
sub
xor
jp
jg
push
nop
push
xlat
outsb
sub
jg
movsl
cmpsb
and
sbb
xor
mov
pop
nop
xchg
inc
lret
in
pop
pop
lods
jecxz
nop
adc
sub
stc
lock
bound
cmpsl
aad
imul
jnp
mov
xor
loop
pop
dec
ficompl
push
add
sub
mov
adc
and
sahf
jne
movsl
adc
mov
insl
xor
push
sub
xchg
rorl
jbe
insl
add
stc
xor
cmp
push
add
int
aam
pop
mov
cmp
sub
in
pop
cmp
icebp
mov
sbb
mov
or
inc
or
mov
cld
pop
pushf
clc
js
sbbl
call
cmp
daa
movsl
shlb
xchg
popa
scas
in
js
enter
and
cltd
and
cs
testb
inc
test
gs
sub
fdivr
je
pop
xchg
sbb
push
std
push
push
xchg
inc
cmc
sbb
push
fists
xor
mov
mov
mov
iret
cwtl
inc
add
cltd
sub
pop
dec
ljmp
pop
jmp
jnp
fcmovbe
lret
add
movl
inc
jno
mov
ficoms
lds
jle
sub
inc
add
fmuls
dec
xor
dec
pop
enter
mov
pushl
pop
stos
bound
test
popa
sbb
test
dec
jecxz
scas
sub
and
inc
cmc
aam
and
cmp
mov
pop
sbb
fmul
movl
ss
mov
pop
xor
jg
mov
faddl
lods
jbe
lcall
and
mov
mov
mov
push
lret
cmpsl
lcall
pop
loopne
sbb
or
fsubrs
inc
cmp
mov
in
add
push
incl
xchg
ds
int3
popa
jne
jmp
jae
inc
mov
jl
mov
inc
mov
test
xchg
sbb
loop
es
pop
ret
xor
out
add
add
aam
xchg
push
gs
mov
inc
jmp
sbb
into
and
jle
xchg
imul
pop
or
daa
xorl
pop
sub
mov
addr16
or
cmp
mov
aaa
test
jne
ljmp
add
not
sti
xor
mov
pop
enter
hlt
leave
hlt
mov
das
in
xchg
lds
lret
adc
jbe
dec
inc
rorl
jge
or
xchg
mov
nop
add
and
and
mov
push
cmpsb
std
cmp
lock
xchg
cmp
outsl
aad
mov
cld
movsb
mov
cmp
dec
aam
jnp
jbe
adc
push
mov
xorl
loopne
xchg
mov
cli
mov
sub
mov
mov
inc
popf
push
or
movb
into
pushf
inc
mov
jno
jecxz
mov
in
cmp
lods
dec
pop
and
sbb
push
pusha
mov
lret
fisttpll
lret
scas
lahf
in
std
cmpsl
sbb
cmp
jo
pop
push
cmp
mov
push
addl
daa
les
and
and
ret
in
in
xorl
or
cltd
icebp
ja
pop
mov
rolb
fs
cmp
sbb
std
mov
dec
sbb
fdivl
lock
daa
hlt
shlb
sarl
test
arpl
or
push
ljmp
dec
cmpsb
add
xor
sbb
inc
std
xchg
jnp
push
aas
stos
es
pop
call
orb
mov
sbb
rcrb
sub
mov
jnp
pusha
mov
cmpsl
fldcw
add
pop
mov
jmp
popa
sub
dec
je
mov
rcll
movsb
xor
adc
mov
push
cmp
cwtl
jbe
or
xor
scas
xor
cs
mov
xchg
add
mov
sub
lret
sbb
repz
jge
out
push
pop
shl
insl
xorl
mov
mov
scas
mov
push
into
pop
in
hlt
mov
add
jbe
rorb
lods
or
sub
ds
jmp
lcall
out
fistps
or
pushf
mov
leave
and
or
sbb
cld
subb
ficoms
dec
xchg
cwtl
add
outsl
ja
mov
dec
xor
in
mov
xor
in
jecxz
mov
into
push
sub
out
stc
or
mov
push
add
imul
adc
arpl
stc
add
sbb
out
add
xchg
lcall
jle
xlat
lock
lret
lds
outsl
mov
arpl
xor
loop
pop
pop
mov
test
dec
mov
fisubrl
jne
fmuls
popf
cmp
lahf
inc
xor
loopne
test
fwait
push
movsb
jne
je
test
sub
mov
in
jmp
push
es
cli
or
adc
xchg
jmp
or
xchg
pop
test
movsb
xchg
movsl
inc
dec
pop
sti
mov
xchg
push
sub
das
xchg
imul
push
bound
mov
xor
cmp
jns
cmp
push
cltd
lds
les
addr16
ljmp
test
push
pop
arpl
pop
mov
cmp
addr16
test
xchg
lea
jns
nop
mov
xchg
add
xchg
xchg
pusha
jg
xor
mov
push
cmp
push
mov
cld
lds
pushf
xor
mov
out
loopne
add
inc
sub
lock
mov
mov
test
mov
sarl
mov
out
xchg
lds
sub
out
ret
bound
stos
in
pop
mov
enter
dec
movsb
pop
int3
mov
jb
mov
inc
je
ja
pop
adc
dec
push
dec
sbb
mov
mov
lds
jp
clc
mov
das
insl
add
dec
flds
xchg
rcll
cmp
sarb
sarb
out
cwtl
loope
lcall
dec
jb
add
jnp
push
popa
lods
fildll
repz
jmp
dec
repz
shl
push
mov
pop
paddsb
pop
push
add
sub
pop
mov
stos
loopne
sbb
in
jg
inc
imul
sarb
in
outsl
dec
cmp
add
dec
cmp
adc
iret
pop
out
xchg
hlt
movsl
xchg
hlt
add
mov
jp
add
aas
dec
mov
add
lret
jns
adc
inc
subb
dec
xchg
sbb
push
fwait
cmp
jecxz
mov
ljmp
movsb
cmp
xchg
xchg
scas
fidivrs
cmpl
or
sbb
mov
aam
mov
add
inc
cmp
add
in
dec
sub
pop
andl
popf
fisttpl
loop
fisubrs
ret
xchg
shlb
popa
lcall
popa
popa
std
inc
dec
sbb
loope
adc
adc
js
in
mov
lock
loop
adc
orl
call
lods
loop
cmpsl
adc
push
mov
cltd
pop
or
mov
stos
lcall
in
bound
cltd
pop
jge
sub
fwait
dec
jae
scas
leave
add
mov
mov
or
or
arpl
pop
js
mov
test
inc
mov
imul
lahf
xor
cmp
adc
dec
stos
xor
out
sbb
inc
fldl
add
cmpl
sahf
inc
les
adc
inc
push
pop
add
lret
into
pop
or
cmp
pop
in
mov
in
cld
cmp
or
cmpsl
fadds
mov
mov
aas
mov
mov
loope
mov
gs
leave
push
xchg
inc
xor
popl
imul
fidivs
push
arpl
rolb
mov
sbb
adc
test
fsubrs
push
pop
jns
dec
mov
repz
jmp
jne
iret
cs
mov
xchg
enter
cmovo
aas
sbb
pushf
test
nop
inc
jg
popf
or
insb
cmc
aaa
cltd
sbb
mov
mov
pushfw
mov
or
and
jp
out
cmc
rcrb
push
test
in
imul
ss
incl
mov
or
rolb
fdivs
test
sbb
dec
repnz
jbe
dec
pusha
dec
rcrl
mov
aas
push
test
std
push
out
push
and
incb
jmp
xor
daa
and
out
data16
xor
pop
or
lea
andl
inc
inc
push
int
xchg
fdivl
sti
int
push
nop
iret
hlt
ljmp
incb
and
inc
mov
jns
jecxz,pt
mov
cmp
lahf
pop
xchg
lcall
bts
dec
push
adc
ret
jns
mov
pop
jle
push
std
pop
testb
push
and
cli
inc
or
in
or
leave
lods
xor
nop
and
outsl
outsl
dec
std
cmp
repnz
or
mov
mov
xor
sbb
das
mov
test
jecxz
fstpt
mov
or
cltd
loope
lds
std
fisttps
loop
lret
int
xchg
sub
call
jp
fnstenv
mov
pop
jge
lods
in
jle
fwait
xor
nop
cmp
and
mov
mov
xchg
mov
loop
inc
and
jp
aaa
in
inc
pop
cld
loop
loopne
and
mov
pop
mov
arpl
mov
pop
movsb
out
mov
push
xchg
adc
mov
fstpt
sahf
push
pop
jl
imul
mov
or
jmp
ljmp
ljmp
aaa
or
add
dec
push
fildl
mov
ss
movsb
pop
adc
jg
addr16
xchg
fs
sub
add
or
adc
repnz
test
adc
gs
sti
pop
loop
sbb
dec
mov
xchg
in
out
adcl
xchg
inc
cmpsl
jb
dec
out
lods
pop
mov
movsl
hlt
fisubrs
loope
xor
push
fdivrl
loopne
jmp
xchg
ret
pop
add
pop
push
lock
pop
mov
push
mov
jb
sbb
lods
pop
in
gs
push
adc
cmp
notl
pop
mov
pusha
lret
xchg
cli
or
ret
xor
adc
push
inc
popf
sub
sahf
xchg
or
out
dec
testl
push
inc
ret
lret
bound
gs
ds
mov
add
inc
insl
call
ss
pop
neg
iret
iret
xchg
jecxz
outsl
mov
sbb
test
cs
mov
mov
jnp
mov
std
sti
repnz
clc
jo
add
repz
scas
addr16
mov
insl
push
out
repz
and
insb
nop
mov
sbb
ds
push
iret
mov
nop
andl
mov
stos
pop
outsb
cmp
sub
inc
push
data16
adc
test
mov
movsb
data16
test
xor
lahf
inc
sbb
push
push
pop
int
dec
ss
jmp
clc
insb
ja
outsb
jp
mov
shl
sub
lcall
decb
test
es
shlb
jne
push
mov
test
cmp
mulb
cmp
sub
dec
cmp
mov
mov
or
aam
mov
and
pop
pop
popf
sahf
rolb
adcb
scas
add
xchg
dec
sbb
xchg
or
push
mov
jg
push
mov
shlb
or
push
fiadds
jg
ljmp
repnz
push
outsl
mov
xchg
aaa
add
pop
jno
or
cld
movsb
mov
jae
je
movsl
out
sub
cmp
aad
jmp
xor
cs
ficomps
sbb
cs
vmovlps
xchg
lahf
inc
pop
ficoms
xchg
xchg
and
shlb
sbb
outsb
jl
and
aam
inc
leave
mov
cmp
mov
fdivl
mov
lods
gs
roll
lahf
xor
test
mov
fwait
gs
and
jecxz
xchg
out
mov
movsb
sub
and
cmp
adc
aad
sub
and
and
aas
jns
adc
fldl
movsl
or
or
nop
or
xchg
out
scas
xchg
add
icebp
les
inc
lods
clc
arpl
daa
jne
pop
je
lods
sub
fmul
outsl
push
and
lea
add
pop
std
pop
pop
hlt
leave
popa
push
add
mov
pop
adc
andl
cmpl
negb
add
pop
popa
subb
dec
mov
pushf
mov
cmpsl
dec
ret
hlt
lahf
push
pop
push
lea
and
push
imul
and
jl
adc
mov
cli
in
xlat
pop
lds
adc
pop
mov
daa
in
jecxz
negl
test
fwait
cwtl
lcall
xchg
xor
bound
aas
xchg
mov
xchg
and
push
stc
sahf
pop
xchg
rclb
pop
jns
bound
fwait
jnp
aam
into
js
pop
xchg
dec
pop
lods
cmpsb
repz
ret
cmp
mov
mov
pop
pushf
sahf
cmp
or
xor
inc
add
add
dec
movsl
cmp
fiadds
outsl
neg
or
into
dec
sti
dec
inc
icebp
inc
ficoml
outsb
xchg
pusha
repnz
je
mov
add
mov
out
mov
mov
pop
sarl
stos
ja
adc
pop
push
and
push
adc
cmpb
sub
or
push
fbstp
js
clc
push
add
cmpsl
xor
xchg
sti
int3
movsb
cmp
pop
es
das
das
xchg
inc
arpl
dec
jg
subb
add
fists
sbb
push
sbb
js
pop
fidivrl
xor
mov
in
adc
scas
push
sbb
rclb
or
push
lock
adcl
pop
mov
adc
dec
xchg
lret
mov
and
sub
adc
setnp
sbb
popa
inc
rcrb
out
fcmovnbe
push
pusha
scas
lcall
rcrl
and
cwtl
push
xor
dec
sbb
mov
push
push
sti
pop
xlat
arpl
loop
dec
popf
mov
jmp
fldlg2
inc
xor
mov
or
clc
jae
cs
lret
and
ret
adc
repnz
cmpsl
cwtl
mov
pop
pop
inc
in
inc
sbb
dec
inc
mov
mov
mov
xchg
xchg
jo
jnp
sbb
dec
sbb
sahf
cmpsl
dec
xlat
mov
jnp
movsb
fbstp
ljmp
xchg
hlt
jae
add
cmpsl
lds
inc
clc
pop
test
jb
daa
pop
mov
cmp
sub
rorb
gs
aam
jmp
and
sbb
js
pop
pop
out
and
insb
ret
cmpsl
push
jmp
fimuls
shr
inc
lea
cwtl
xchg
enter
push
loop
je
fs
scas
inc
clc
or
dec
push
cld
mov
jo
rcrb
lret
repz
mov
sti
mov
les
outsb
adc
push
push
lea
sbb
das
stos
fildll
pop
fdiv
aaa
add
pop
mov
aad
push
data16
lds
dec
add
mov
enter
xor
fbld
enter
sbb
repz
pop
mov
sti
hlt
pop
cmpsl
cmpsb
or
into
sbb
inc
dec
cmp
push
mov
pop
orl
mov
bound
inc
test
mov
stc
cmpsl
jmp
data16
jl
pop
out
dec
in
test
xchg
xchg
xchg
pop
fdivs
lock
xor
adcb
jb
insb
test
xor
test
push
xchg
into
pop
out
addl
shl
add
das
dec
fdivrl
stos
inc
xor
jge
imul
add
inc
repnz
sub
xor
and
jmp
xchg
stc
aaa
stc
adc
inc
rolb
pushf
inc
movsl
adc
insb
imul
int
sub
push
dec
addl
leave
mov
push
cmpsl
sahf
pusha
sub
dec
mov
loop
packsswb
cs
and
shrl
into
dec
jp
or
mov
adc
add
shld
roll
scas
jmp
sub
pop
inc
loopne
sub
lea
repnz
pop
cli
pop
sbb
jns
mov
repz
jno
jb
nopl
daa
and
add
mov
push
cmp
push
mov
mov
mov
mov
sub
pop
sahf
out
jle
push
ja
aad
pop
or
xchg
pop
in
xchg
pop
ud0
lahf
adc
aam
test
test
in
rol
test
pop
cmc
icebp
rolb
cwtl
add
fs
pushf
lea
mov
pop
ret
adc
sbb
mov
mov
pmuludq
dec
test
and
jle
enter
clc
dec
push
push
aad
outsl
inc
hlt
mov
inc
mov
pop
pop
imul
cltd
inc
lahf
in
fcmove
out
xor
push
xchg
xchg
dec
shrb
mov
mov
lods
push
pop
push
dec
pop
pushf
add
sub
mov
in
addr16
sbb
ret
push
and
daa
and
call
mov
sbb
xchg
push
jo
adc
push
jg
pop
aam
outsl
inc
xchg
push
sub
sbb
loop
in
cld
loopne
or
bound
sbb
ret
pop
stc
mov
je
inc
or
ret
shlb
das
inc
cli
mov
xor
xchg
sbb
add
das
pop
scas
mov
jbe
adc
cs
pop
lret
imul
mov
dec
push
jne
mov
hlt
pop
shl
add
or
in
vunpckhps
push
push
pop
pop
jbe
and
in
mov
out
fdivl
xchg
loopne
popa
adc
and
push
pop
sbb
stos
mov
nop
mov
inc
pop
push
push
lret
mov
sbb
sbb
lahf
xchg
lods
push
push
adc
or
cmp
mov
mov
pop
inc
mov
out
sub
jae
or
shlb
subl
adc
inc
sti
imul
in
test
cmc
xchg
mov
mov
push
jp
mov
test
lahf
test
xchg
insl
int3
cmc
sbb
mov
mov
push
jne
pop
dec
xchg
out
xchg
sub
int
pop
xchg
pop
jecxz
leave
cmc
sub
in
inc
add
or
sbb
mov
aam
mov
divb
test
jbe
shl
jl
call
adc
dec
jne
mov
call
mov
mov
test
lods
pop
jge
insl
movsb
mov
inc
stos
popa
out
xchg
and
pop
test
loopne
movsl
mov
arpl
inc
in
mov
mov
mov
lcall
out
cmpsl
xlat
mov
aad
jg
xorb
push
mov
ss
aam
iret
jp
fisubrs
xchg
add
mov
xchg
dec
jmp
shlb
dec
shll
mov
lret
mulb
jae
jmp
xor
dec
xor
inc
xchg
jno
repz
push
mov
mov
popa
imul
lea
and
pop
xchg
push
sub
aaa
or
pop
shl
dec
push
fisubrl
or
fs
in
mov
adc
stc
inc
in
or
sub
ret
stc
scas
pop
out
sbb
dec
aaa
jg
movsb
sub
mov
add
or
call
adc
jb
movsl
mov
arpl
fistpl
adc
xor
xchg
push
lea
and
sbb
insb
repz
jno
test
in
xchg
push
in
pop
xor
mov
scas
mov
call
push
cwtl
ss
jo
jl
mov
loope
pop
or
jle
jne
mov
loope
push
sub
cmpsl
fisubl
xor
sbb
push
inc
sub
sbb
push
inc
inc
dec
mulb
or
movsl
xor
or
fs
sub
pop
enter
arpl
dec
mov
jo
push
dec
call
ljmp
push
les
mov
aam
mov
ss
loopne
pop
nop
loopne
sub
shlb
shl
inc
leave
mov
sub
cmp
rdpmc
jge
sbb
mov
sub
push
nop
dec
ficoms
movsb
or
add
popf
std
dec
xchg
lret
jmp
mov
test
out
push
cmp
addr16
mov
inc
int
xchg
xchg
dec
jmp
cmc
arpl
ret
jne
dec
add
fdivrl
and
mov
outsb
xor
xchg
std
sbb
or
mov
mov
out
into
out
shlb
push
fcmovnbe
cmpsb
frstor
xor
and
ret
inc
std
inc
xor
cmp
dec
bound
cmp
into
shr
or
push
int3
movsb
adc
adc
ljmp
sbb
rorl
inc
and
leave
adc
push
arpl
sub
popf
adc
sub
push
cli
cmp
inc
or
fcmovnu
les
dec
jl
call
add
cmp
data16
ja
into
enter
dec
sbb
xor
pushf
js
push
mov
fst
add
sti
imul
testb
jge
idiv
int3
xchg
scas
nop
dec
ds
xchg
test
mov
movsb
mov
sub
negb
inc
jne
pop
sbb
shrl
outsb
xlat
dec
mov
das
sbb
loop
mov
push
sbb
xchg
sub
inc
add
arpl
out
inc
jbe
mulps
xor
movsb
fisubl
mov
inc
jb
addr16
icebp
xor
cltd
int3
popa
cltd
into
cmp
sbb
add
jns
sbb
xor
cmp
pop
pop
scas
adcl
icebp
push
inc
rcrb
pusha
test
mov
cwtl
xor
cmpsl
or
adc
repz
cmp
icebp
int
pop
clc
mov
jecxz
in
cmpsl
adc
jl
imul
jae
add
jge
pusha
enter
sbbb
stos
dec
lock
insb
imul
out
je
inc
ss
into
cmp
adc
dec
jp
icebp
xchg
push
push
shrl
xchg
loop
push
incb
and
loope
mov
mov
dec
cmpl
js
and
loope
out
cmpsb
jbe
sarl
cmp
mov
or
cld
call
mov
and
xor
cmp
push
jle
push
mov
cmp
aaa
inc
and
jg
and
arpl
inc
cmp
in
sti
data16
leave
das
cmpsb
add
in
inc
mov
mov
cltd
adc
or
call
xchg
jmp
cltd
xor
jns
push
mov
rcll
cmc
pop
inc
jne
sub
mov
ficoml
out
sahf
jne
outsl
push
push
ds
ret
stos
popf
dec
xor
repnz
mov
ret
pop
cmc
fsubrl
dec
fdivrl
push
sub
mov
outsl
out
mov
cmpsl
mov
stc
dec
in
push
fdivr
xor
loop
repz
sarl
ljmp
cld
fidivs
mov
xchg
scas
jmp
jl
mov
mov
mov
jmp
in
sub
sub
xor
jns
add
sub
pop
add
rcr
int3
xor
mov
push
pop
xorl
inc
movsl
imul
or
cs
inc
test
pop
mov
in
out
mov
xchg
shll
pop
shlb
mov
repz
cld
add
mov
xchg
inc
adc
cs
dec
imul
push
or
jmp
cld
int
aad
rclb
adc
jbe
jp
fimull
add
jle
mov
push
ficomps
jbe
pop
pop
jl
out
sbb
or
cld
int3
and
sarb
fldenv
cmp
daa
jecxz
jb
adc
mov
into
in
sub
pop
sahf
cmp
js
push
adc
push
push
loopne
pop
cwtl
jns
xchg
nop
leave
sub
xchg
jo
xor
scas
shrb
insl
lret
aam
mov
mov
add
jge
insl
fadd
pop
shlb
push
sub
inc
dec
pop
xchg
movsl
and
loopne
movsb
cmp
popa
aam
pop
fucomip
jb
push
aaa
dec
insb
mov
pop
outsl
jecxz
add
cwtl
iret
fsubp
repz
lret
into
stos
mov
jae
imul
xchg
sbb
sbb
mov
jbe
das
mov
loope
sbb
sbb
mov
jb
fwait
mov
insb
xor
sub
arpl
lock
push
pushf
cs
xlat
jns
pop
add
imul
idivl
add
push
popa
mov
dec
pop
fmull
mov
popf
inc
das
add
test
mulb
dec
sahf
sahf
push
xor
cmp
jecxz
gs
cmp
xchg
jnp
fmuls
add
jno
jno
ljmp
pop
mov
xchg
cmp
in
push
popa
pop
mov
xchg
cmp
into
mov
jnp
push
mov
fisubl
andb
jmp
jb
cwtl
lods
mull
pop
das
jo
popa
outsl
out
mov
out
out
aas
push
cmp
cmp
lret
loopnew
aas
cmpsl
notb
cmc
aam
or
pop
xchg
add
outsl
jne
adc
inc
xor
clc
add
jmp
rcrl
iret
inc
pop
in
iret
add
outsl
mov
call
push
or
xchg
mov
jle
mov
not
push
sub
jecxz
in
outsb
enter
xchg
mov
push
mov
pop
stos
fucomi
rorl
or
xchg
xor
sbb
sub
jae
cmp
int3
mov
sub
adc
roll
int3
pop
xor
out
lret
add
je
rorb
shrl
inc
sub
jg
mov
lods
mov
sbb
sub
int
xor
push
mov
dec
sbb
mov
mov
add
pop
xor
cmpsb
xor
in
mov
cmp
pop
jge
fimuls
add
sub
pop
pop
int3
jb
adc
pop
insl
pusha
sub
mov
cmp
cmp
fistpl
sub
je
pop
iret
or
mov
mov
clc
jl
dec
push
pushf
xor
or
lahf
lods
mov
mov
dec
ds
das
movsb
pop
dec
xor
mov
sub
test
push
jbe
daa
jmp
adc
push
scas
in
and
lcall
inc
aas
mov
sub
and
mov
inc
test
popf
and
mov
mov
jp
adc
mov
lock
hlt
sub
or
push
ljmp
xor
jb
adc
xor
fidivrs
xor
movsb
inc
xor
ss
test
pop
lret
adc
sub
mov
lahf
add
iret
lock
rorl
pop
push
jns
jnp
jno
pop
sub
inc
insb
or
scas
inc
jmp
loop
sub
loop
mov
and
popa
adc
insb
mov
call
xchg
mov
and
aad
jecxz
loop
sbb
dec
pop
fisubrl
js
sti
mov
cli
mov
fidivs
pusha
loopne
cltd
es
cmp
imul
xor
cmp
insb
or
pop
jmp
push
inc
mov
jne
xchg
jmp
cmp
insl
dec
repnz
xchg
adcb
ret
iret
push
xchg
icebp
mov
out
imul
or
dec
push
sub
dec
lock
ljmp
es
call
dec
mov
sbb
stc
inc
adc
dec
jp
mov
ficompl
jns
adc
lock
add
std
mov
iret
inc
fistpll
rcrb
mov
ljmp
sbb
mov
lds
test
mov
shlb
dec
clc
subb
cld
subb
push
lods
pushf
jl
nop
scas
pop
movsb
xor
sub
and
sti
xchg
outsb
push
mov
jp
dec
fisubrs
repnz
and
cs
sbb
pop
out
add
push
jecxz
pushf
and
data16
or
fldenv
push
add
and
sti
sub
xchg
and
and
xor
sbb
std
sahf
xchg
fucomi
out
jle
jbe
ret
pop
add
sbb
jecxz
jp
lret
sbb
es
jmp
sbb
hlt
inc
mov
ffree
xchg
and
cwtl
lds
xchg
mov
ljmp
xor
cmp
imul
outsb
inc
and
inc
std
xchg
push
fs
pop
repnz
cmp
jge
mov
mov
imull
xchg
dec
mov
popa
enter
sub
cmp
aaa
jmp
dec
cmc
pop
rol
les
mov
repnz
arpl
sti
mov
push
mov
rorl
insl
ljmp
outsb
mov
mov
lea
cmp
adc
mov
je
inc
cmpl
mov
jg
inc
push
notb
shrb
loopne
movsb
gs
add
arpl
xlat
adc
dec
sub
bound
sti
fisubrs
fsub
push
pop
in
cwtl
or
mov
jno
bound
mov
add
pop
aas
push
cmpb
and
jb
mov
push
and
lahf
xchg
in
push
jne
lahf
gs
js
jae
ljmp
mov
ja
jmp
add
mov
adc
popa
loop
add
cmp
xchg
lds
push
enter
js
mov
in
pop
test
rorb
xchg
jnp
cs
lock
jle
leave
mov
cltd
mov
add
roll
aad
mov
xchg
lret
mov
push
xor
neg
pop
pop
sbb
fdivrp
inc
fstpl
stos
out
sahf
sub
sub
mov
dec
add
cltd
lret
call
add
loope
mov
loope
sbb
jecxz
cmpsl
push
jb
aad
sub
push
jae
inc
lret
sub
jge
jo
int3
insb
pop
aas
rorl
fdivrl
mov
and
jbe
in
sbb
add
dec
jne
sub
in
jo
mov
les
and
loope
mov
outsb
cmovp
test
fbld
push
shll
cmc
or
xchg
push
int3
inc
lods
jb
js
xchg
and
cmp
xlat
or
adc
xchg
jge
into
push
push
jbe
pop
out
scas
stc
testl
push
test
xchg
fidivrs
push
cmpb
inc
cmp
das
movsl
filds
stos
pop
fstpt
push
mov
mov
jp
loopne
lock
pop
xchg
or
mov
xor
adcl
mov
data16
movsl
xchg
mov
iret
in
js
in
xchg
je
lret
incl
cmpsb
es
aad
jle
fisubl
sub
lds
pop
scas
mov
sbb
ljmp
repnz
mov
mov
js
in
enter
call
sbb
pushf
dec
jb
inc
push
pop
mov
sub
mov
inc
adc
cltd
fisttpll
add
pop
sbb
in
mov
jg
movsl
pop
sub
or
repnz
hlt
mov
push
repnz
cmpsb
fmuls
lds
xchg
sbb
sbb
push
cmp
shlb
mov
les
mov
sahf
ja
fcompl
and
lea
xor
cmp
loop
mov
jecxz
push
sbb
pop
ja
sbb
sbb
mov
lea
stos
dec
pop
imul
sub
aad
dec
outsb
add
fistpl
inc
mov
cmp
cmp
ficoms
xor
mov
sub
push
test
pop
aad
or
int3
pop
lcall
fldl
xchg
jne
in
out
mov
sub
and
add
bound
outsl
sarl
jns
rclb
repz
xor
mov
jg
dec
je
int
shll
mov
sar
cs
xchg
adc
mov
je
adc
push
and
xchg
lock
and
push
cmp
sub
jb
sti
dec
movsb
sarl
dec
lahf
xor
dec
popa
ret
repz
sub
cmpsb
test
xchg
pop
mov
mov
mov
testl
jbe
pusha
inc
jo
push
mov
mov
adc
lds
push
scas
jmp
inc
jns
jmp
test
aad
filds
jne
sub
cwtl
lods
adc
cli
scas
mov
out
pop
mov
add
lahf
scas
pop
and
mov
push
outsb
jb
mov
shll
dec
in
pop
or
dec
dec
scas
gs
dec
adc
mov
add
push
mov
pusha
decl
fiadds
inc
pop
leave
jge
mov
mov
sbb
fistpl
push
addr16
cmp
xor
adc
sti
repnz
adc
cmpsl
test
mov
dec
pushf
push
xchg
insb
pushfw
imul
movsb
add
mov
int3
xor
inc
sarl
sahf
imul
sbb
xor
inc
push
xchg
cli
aad
push
leave
sbb
sbb
sub
fcoml
fisubrs
cmpsb
aam
out
cmp
dec
and
insb
test
xchg
add
outsl
inc
addr16
push
daa
and
pop
out
mov
adc
in
ret
js
ret
ret
adc
xchg
add
popf
adc
fwait
dec
int
fwait
jae
ss
cmp
adc
std
xor
bound
jns
cs
fiadds
jmp
out
adc
stc
data16
and
sbb
push
fs
sbb
push
movsl
mov
std
kmovb
sub
inc
leave
fldcw
std
xor
xor
popa
xchg
adc
inc
sbb
mov
lcall
call
cmp
ss
jmp
lret
in
sub
test
sub
in
fsubs
jo
test
stos
or
mul
out
inc
adc
pushf
lcall
xchg
cltd
inc
aaa
fs
jmp
js
xchg
dec
repnz
rcrb
dec
pop
dec
sti
sub
sbb
push
mov
insl
and
dec
test
cli
inc
mov
jo
test
fistl
xor
jmp
dec
mov
pop
insl
fistpll
lock
mov
lret
test
mov
cmpsb
loop
and
ror
and
leave
lock
push
popa
jb
mov
aaa
addr16
ja
add
sti
js
into
je
cmp
fs
or
cmc
sub
and
dec
mov
dec
pusha
jge
dec
lea
aaa
stos
jge
shlb
cwtl
sbb
jecxz
lds
das
enter
and
js
add
inc
pusha
clc
les
movsl
cs
mov
xor
enter
ja
push
mov
addr16
pop
sbb
add
and
cmp
scas
test
out
addr16
lods
movsb
jo
dec
mov
cmp
mov
xor
xor
jge
jge
icebp
add
push
test
shrb
clc
jo
jne
mov
fsubrs
rol
ljmp
cmp
cmp
push
push
jl
sub
cmpsb
xor
sub
mov
xor
fadds
mov
lahf
cmp
xor
pushf
ss
sub
push
or
pop
mov
clc
xlat
call
pop
fwait
or
adc
mov
inc
outsb
xchg
mov
sbb
adc
pop
push
xchg
and
and
xchg
inc
mov
mov
in
push
cmp
push
jne
inc
jge
mov
aas
imul
sub
aas
mull
or
imul
push
js
shll
test
cmp
test
cld
or
mov
mov
xchg
push
daa
push
ja
mov
xor
out
idivl
bnd
push
mov
add
xchg
mov
jecxz
repnz
insl
push
xchg
add
pop
xchg
mov
aad
xor
or
adc
lock
clc
push
dec
aam
sbb
xabort
fcomps
dec
push
or
jg
je
dec
test
hlt
je
adc
rorl
adc
pop
or
stc
testb
jg
subl
sub
adc
and
cmp
stos
jg
cmpb
pop
push
sbb
out
insb
ja
cmpsl
push
lods
inc
xchg
sbb
xchg
clc
cmpsb
sarb
mov
scas
cli
pop
ret
or
mov
sbb
dec
mov
add
pop
in
repz
dec
push
out
push
ljmp
add
push
fisttps
call
push
dec
cmp
jns
xor
out
inc
lret
jmp
leave
iret
mov
push
push
cmp
loope
mov
xchg
into
fldl
fs
fstl
sbb
cmp
cli
cmc
cmp
shl
dec
scas
cmpsb
sbb
inc
mov
shll
popa
mov
ds
cs
sub
fwait
pop
fsubp
pop
enter
adc
push
push
mov
test
jns
shll
icebp
adc
nop
sbb
dec
in
pop
cmp
mov
or
and
mov
cmp
add
inc
and
sbb
xchg
mov
cmp
add
stos
fwait
mov
xchg
outsb
inc
nop
stos
imul
pop
jne
bnd
or
pop
stc
add
inc
cld
fwait
fs
push
sbb
outsb
pop
daa
sarb
jne
fidivrl
addr16
icebp
mov
shr
add
sub
dec
inc
adcb
and
lea
gs
and
adc
imul
push
push
js
jecxz
sub
outsb
mull
inc
test
sbb
pushf
xor
sbb
or
outsb
imul
daa
xlat
aad
cmp
std
jo
cld
arpl
movsl
push
jle
add
sbb
mov
fidivrl
or
jg
push
dec
popf
cltd
push
inc
out
push
addb
fisubrl
xchg
test
sub
jge
addr16
xchg
jb
sub
stos
cmp
in
lahf
inc
cmpsb
int3
lret
add
dec
pusha
pop
push
mov
sbb
mov
mov
sub
xchg
jg
mov
repz
or
pop
lock
nop
and
mov
cmpsl
push
lret
outsb
mov
scas
sbb
and
push
cltd
mov
in
shlb
cmpsl
int
mov
leave
sub
push
jecxz
scas
sbb
adc
mov
out
sahf
mov
pop
inc
push
loope
popa
jp
inc
dec
faddl
mov
lcall
sbb
fsub
les
dec
insb
or
cmpsl
enter
mov
jle
mov
xor
jecxz
fdivs
sbb
dec
scas
jns
out
test
pop
aam
jecxz
mov
push
insb
pop
cmpb
jae
icebp
fwait
cwtl
dec
dec
inc
sub
das
pop
ljmp
cmp
cs
push
add
sahf
jns
in
xchg
outsl
loopne
jo
int
jno
cld
clc
lea
add
insl
jno
mov
aas
push
lret
arpl
adc
dec
jno
cmc
cmp
aas
roll
ss
sbb
inc
mov
xchg
fildl
sbb
jne
and
shl
bound
leave
mov
andb
inc
sbb
mov
mov
fxch
mov
xchg
cmp
mov
jl
mov
addr16
nop
fcmovu
out
lods
xchg
sahf
jae
jp
sub
clc
cld
inc
orl
push
push
or
jb
adc
mov
inc
stos
push
jle
fiadds
mov
inc
dec
fadds
insl
lcall
arpl
dec
push
in
popf
es
stc
fdivr
mov
cmpb
aam
call
pop
cli
sbb
int3
les
xchg
and
push
push
mov
xor
testl
xchg
stc
bnd
cmpsl
fstpt
imul
push
sbb
mov
inc
ja
loopne
imul
and
aam
sbb
cmp
sub
movsb
fwait
xorb
adc
push
pop
push
cmpsl
push
cwtl
mov
out
inc
or
sub
pop
fs
and
outsl
rclb
repz
outsl
in
push
add
test
pop
pop
adc
clc
xor
xchg
lcall
faddl
add
mov
mov
push
loop
pop
imul
clc
push
cmp
dec
cmp
jbe
mov
mov
cmc
outsl
xchg
movsb
sarl
cmp
shll
jle
sarb
xor
xlat
pusha
jne
call
stos
jno
mov
add
xor
or
fidivrs
lahf
hlt
jns
or
adc
adc
cmpsb
nop
xchg
xchg
push
mov
pop
cltd
jg
push
gs
neg
jle
repnz
stos
xorl
adc
incl
cmp
sbb
insb
stos
inc
push
jecxz
adc
jo
mov
dec
aad
int3
js
dec
xchg
jbe
scas
mov
mov
mov
xor
mov
ficompl
cld
mov
push
jmp
mov
movsb
push
insl
dec
sahf
imull
fdivrs
or
pop
cmp
xchg
push
dec
rcr
ret
in
push
jmp
pop
jecxz
pushf
call
enter
xor
cmpsb
mov
push
movsb
xor
jecxz
xchg
add
xor
dec
ljmp
mov
movsl
stos
das
and
xchg
test
mov
or
fwait
xchg
mov
dec
fdivrl
lret
pusha
loope
dec
arpl
int
mov
in
pop
sahf
mov
imul
cwtl
mov
je
lods
inc
scas
loope
popf
sbb
mov
jne
xchg
xchg
pop
mov
cmp
inc
jo
rcll
push
xor
cmp
loop
and
in
sarb
sub
lds
jae
bound
jg
testb
cwtl
loope
cmp
cmpsl
dec
sbb
pop
icebp
pop
xor
in
lods
dec
out
ss
test
mov
xlat
subb
aaa
xchg
bound
in
lea
pusha
mov
setle
push
lcall
sub
add
sti
xchg
stos
rcll
mov
fmul
cmp
nop
jg
inc
dec
push
mov
xchg
je
in
fwait
inc
xor
gs
lods
jp
sbb
sub
xlat
xlat
addr16
aad
jo
cmp
lahf
pop
and
loop
shr
xor
pop
push
incb
jb
insb
in
out
loopne
sahf
je
adc
stos
sbb
cmp
cmp
mov
pop
sbb
xor
mov
fbld
enter
negl
cmp
cmp
sub
mov
inc
movsl
into
push
int3
sbb
pop
std
cmpsb
pop
ret
cli
jl
mov
mov
in
cmp
inc
xor
imul
lds
test
adc
inc
inc
sub
and
popa
mov
lods
addr16
jnp
inc
push
sbb
test
sub
inc
and
mov
jp
sbb
jmp
insl
xchg
pusha
push
aad
ja
push
jge
xlat
pop
fidivs
shlb
mov
sbb
sbb
jae
hlt
dec
out
loopne
xlat
xor
adc
shlb
push
scas
jecxz
out
hlt
dec
add
out
and
in
shlb
sub
jle
fs
jecxz
mov
cmp
mov
fistpl
mov
filds
out
push
std
push
scas
dec
adc
movl
dec
push
ljmp
out
int3
inc
les
mov
push
pushf
add
fildll
je
inc
loop
jmp
out
inc
ja
lea
or
and
sbb
fidivrl
xor
cmpl
push
fsubrs
or
iret
xor
inc
je
cmp
or
mov
es
mov
fwait
es
xchg
mov
mov
ret
fwait
lds
outsb
adc
call
insl
pop
loopne
sahf
inc
out
cmp
and
stc
inc
icebp
rcl
outsl
fs
mov
movsl
pop
lret
push
popf
jbe
adc
andl
cmp
cmp
sbb
cmp
push
sub
pop
or
mov
mov
xor
mov
popa
mov
xchg
sbb
in
push
jp
mov
jg,pn
push
por
add
aam
into
jbe
push
jl
jnp
mov
fisttps
das
js
mov
cmpsb
jne
test
addr16
movsb
jg
inc
cs
adc
repz
in
insl
jmp
xchg
jp
lea
test
or
inc
jne
sub
in
not
jns
test
stc
pusha
jno
js
and
aaa
jnp
push
mov
jo
push
out
inc
sub
mov
jo
cmp
stos
cmpsl
fsubs
clc
insb
cli
fildll
cmc
loop
sub
test
mov
mov
jae
mov
in
loope
xchg
push
mov
sbb
ja
rol
or
push
or
in
mov
pop
out
ret
fcomps
fidivs
push
push
and
jge
add
push
imul
pop
dec
pop
adc
add
pusha
aam
mov
arpl
mov
push
mov
mov
lods
fwait
mov
stc
push
jae
mov
mov
mov
push
fsts
xchg
add
push
pushf
mov
dec
xor
loope
aam
stos
cmpsb
fistl
pop
out
repz
fs
jp
test
pop
or
icebp
es
arpl
test
xchg
lds
and
nopl
pop
xchg
inc
mov
dec
imul
sbb
lahf
dec
mov
add
shlb
insl
mov
fcompl
or
xlat
repz
cmovne
or
sarb
push
cmpl
cltd
xor
ds
fdivs
pusha
mov
nop
es
mov
loop
dec
insb
adc
push
lods
pop
std
pop
dec
test
rcr
popf
jno
sbbb
cmpsl
inc
add
mov
out
inc
sbb
jns
inc
inc
subl
inc
int
fsubrl
xor
repz
jmp
sub
pusha
add
dec
fdivrl
test
mov
ja
and
mov
add
dec
inc
and
lahf
hlt
mov
mov
ret
jnp
push
dec
sbb
cli
push
int
mov
sbb
lahf
shl
push
pop
enter
sti
mov
fcoml
cmp
js
inc
dec
mov
mov
mull
adc
cmp
lods
xchg
mov
push
push
jp
mov
popf
pop
xor
dec
mov
mov
dec
test
jp
das
jns
js
aam
fsubrs
mov
into
sbb
pop
fstpt
xchg
inc
outsb
jg
jmp
mov
adc
sbb
shrd
cmp
popa
adc
mov
mov
mov
xchg
movsl
lret
iret
outsb
push
cli
xor
aaa
cltd
popa
push
mov
push
out
leave
xlat
nop
and
decl
jb
pop
inc
mov
fldenv
push
cltd
pusha
add
loope
loop
sbb
adc
loop
pop
mov
addr16
or
xchg
ret
sub
and
jo
and
in
cli
imul
mov
outsl
xor
fmuls
sti
mov
adc
add
xchg
add
aam
pop
pusha
pop
push
inc
push
mov
cmpsb
pushf
xor
stos
clc
pop
mov
jle
js
inc
mov
imul
jns
inc
lock
in
jge
adc
rcr
sbb
mov
cmp
imulb
jnp
lds
xlat
add
int3
and
sub
dec
mov
out
stc
ss
xchg
xchg
jecxz
xor
std
into
add
add
cmpsl
dec
sbb
inc
xlat
xchg
stos
mov
jo
adc
mov
and
mov
nop
ret
xor
cmpsl
js
popf
in
pop
cmc
inc
mov
inc
pusha
std
lret
gs
icebp
movsl
xchg
sbb
je
pop
dec
cs
ret
sbb
mov
ss
and
int
xor
gs
cld
aam
jecxz
jo
test
leave
add
rol
sbb
out
sti
pop
push
ja
xchg
or
cli
cmp
dec
lahf
xchg
pushl
push
push
cmp
ds
dec
and
xchg
adc
adc
or
outsb
sahf
arpl
movb
sub
xchg
cmpsb
adc
movsb
gs
mov
insl
lea
xor
outsl
inc
add
subb
adc
dec
loope
iret
dec
cmpsl
jle
fnstcw
add
xor
int
fimull
add
push
hlt
mov
jnp
shrl
mov
pop
jle
leave
lds
jg
push
jo
xchg
sarb
xchg
pushf
add
stos
push
in
scas
pop
push
push
lcall
ja
in
mov
icebp
adc
enter
xchg
adc
imul
cmp
and
cwtl
xchg
nop
popf
lret
mov
sbb
dec
add
out
push
js
cmp
sbb
xchg
notb
in
pop
data16
push
mov
or
ja
mov
jno
std
push
cmp
fld
jne
sbb
or
les
fcoml
pop
aas
inc
sub
idiv
repnz
jecxz
mov
dec
pop
das
ss
xchg
popf
out
jl
rol
ja
loopne
les
or
mov
pop
cli
pop
mov
fildll
cmp
pusha
outsb
nop
cwtl
ds
pop
sub
and
scas
mov
icebp
push
push
mov
loope
cmpsl
mov
adc
adc
jge
andb
rcr
lret
cmp
push
enter
inc
lret
aad
dec
daa
cli
mov
adc
push
mov
shrb
sub
fisttps
fldln2
fldenv
loopne
cs
ret
mov
sub
ljmp
test
pushf
jno
inc
out
std
xchg
and
mov
mov
mov
aad
pop
dec
adc
and
add
pop
mov
push
jle
cltd
pop
and
lods
sbb
sti
movb
and
cs
movsb
cld
cmp
pop
dec
popf
cli
jmp
cmpsl
sub
aad
and
cmpsl
xlat
data16
mov
icebp
jge
cmp
stc
aad
data16
cmp
mov
push
jle
fistps
mov
pop
daa
jle
push
jnp
gs
mov
pop
pop
add
xchg
repnz
cltd
int3
popa
pop
loop
sbb
inc
sub
push
mov
pop
xchg
cld
and
mov
mov
sarl
pop
lods
add
int
pop
mov
cmp
push
mov
shrb
iret
cmpsb
jnp
lahf
jge
jns
fimuls
ret
xor
loopne
sub
xchg
mov
scas
div
lret
dec
pop
mov
inc
and
pop
fstl
and
sbb
sub
fisttps
ret
inc
mov
jg
xor
sub
mov
xchg
leave
inc
dec
cltd
mov
clc
xor
aam
sahf
dec
movb
decb
in
sti
out
fwait
stc
ss
inc
clc
enter
test
jbe
imul
daa
mov
ja
iret
pop
ret
hlt
arpl
leave
xor
in
cltd
fcmovnb
and
or
fsubrs
mov
cmpsl
fiaddl
mov
or
xor
out
cmp
sahf
push
hlt
fadds
pop
and
lea
xchg
imul
xchg
fcompl
dec
adc
xchg
jne
mov
popa
push
push
inc
or
stc
mov
mov
push
rcrl
int
push
nop
dec
das
and
or
lods
fadd
pop
xor
lds
mov
test
imul
popf
mov
scas
push
inc
aad
sub
xchg
ss
mov
pop
mov
sbb
int3
gs
subb
aas
lods
xchg
mov
in
int3
sbb
adc
call
push
sbb
push
and
push
shl
mov
cli
mov
loope,pt
scas
subb
adc
add
jle
xchg
call
mov
mov
leave
cltd
fnsave
sub
loope
cmp
jo
in
cmp
inc
test
add
jns
cltd
mov
cmpsl
cwtl
scas
mov
fnstenv
jo
fistpll
mov
je
push
das
in
xchg
mov
or
jae
mov
lea
pop
sub
lcall
mov
xchg
pusha
repz
sarl
loope
fdivrl
inc
sub
mov
jo
movsb
movsl
ret
orl
xor
leave
ret
repnz
mov
std
or
pop
mov
pop
testl
jmp
sub
pop
js
xor
jo
jb
and
testl
sarb
and
cwtl
and
xor
ret
scas
pushf
jne,pn
push
xor
mov
and
stos
push
inc
push
std
xchg
insl
mov
cmpsb
pop
jne
jg
sbb
cmp
std
jbe
in
or
sbb
imul
or
lock
pop
cmc
repnz
sti
lods
jmp
mov
jb
push
test
mov
leave
sti
pusha
push
cltd
bound
or
mov
and
popa
jge
test
inc
popa
fstps
insb
or
fimuls
mov
call
dec
pop
mov
adc
out
add
xor
xchg
pop
aas
out
adc
loope
jmp
dec
adc
frstor
ret
inc
push
je
lret
rorb
add
dec
sub
pop
and
ret
loop
mov
aam
lahf
dec
mov
add
mov
fisttps
xor
cmp
mov
mov
stos
lods
lahf
add
movsb
cmp
sbb
push
dec
pop
fcomip
xchg
pop
sbb
dec
push
out
fwait
mov
xor
repz
out
loopne
dec
in
mov
xchg
fidivrl
inc
push
lahf
sbb
call
xor
imul
pop
mov
add
push
jmp
push
push
jno
sub
es
cwtl
lods
inc
dec
add
call
loope
push
js
iret
fnstenv
adc
and
push
in
dec
test
inc
mov
es
mov
cmc
push
mov
push
lods
cld
dec
push
jge
fsubl
xor
lea
fistpl
add
fldl2t
push
xchg
mov
or
icebp
dec
cli
mov
fiadds
fs
mov
sbb
xor
cwtl
or
or
pusha
ret
pop
and
dec
sub
and
shl
mov
repz
adc
sub
pop
mov
ficoms
pop
and
or
call
push
daa
mov
fs
lcall
es
pop
out
mov
push
std
cltd
mov
stc
cwtl
iret
xchg
outsb
aam
push
jmp
jecxz
fnsave
lcall
ss
adc
movsb
adc
mov
pusha
adc
sub
inc
jne
mov
out
xor
je
sbb
sbb
stos
in
sahf
xor
xor
mov
inc
cmp
fdivrl
xchg
cmp
jle
into
nop
ja
xor
adc
xchg
push
pop
js
mov
test
pop
inc
test
mov
aaa
xor
lock
dec
jno
stos
push
std
xlat
addb
hlt
mov
lret
pusha
adc
stc
test
mov
inc
sbbl
dec
or
repz
adc
movsb
mov
xor
xchg
jbe
out
sbb
mov
mov
cmp
and
mov
dec
les
shll
dec
imul
push
inc
out
xchg
cmp
mov
fmull
cli
xchg
out
dec
popa
xor
cmp
ljmp
sub
lods
test
xchg
out
pop
and
and
adc
mov
inc
jecxz
in
xor
or
pop
out
xor
pop
leave
mov
popa
adc
roll
rorl
arpl
movsl
jne
sub
in
rclb
and
inc
mov
sub
cs
or
add
idivb
test
stos
fistpl
sub
scas
add
in
adc
dec
repz
sbbl
icebp
lods
icebp
cld
ret
rcrb
and
cmp
data16
aas
enter
mov
inc
aas
jbe
push
aaa
mov
aam
lret
mov
std
mov
lahf
pop
rorb
call
jecxz
fistps
jnp
mov
inc
js
fiaddl
std
pop
bound
jg
adcl
das
lds
adcb
jge
xchg
mov
and
mov
cmp
data16
leave
push
mov
jl
loope
or
dec
sub
cmpsb
ret
xchg
sub
fwait
or
aam
test
dec
sub
add
sub
incb
stos
das
stos
fmul
leave
out
jo
lds
mov
mov
xor
rol
repz
and
add
mov
out
popa
xlat
and
mov
push
negl
pop
stos
fdivrl
leave
shll
ja
daa
push
or
out
sarl
xchg
ja
cli
mov
xchg
stos
mov
fisubrl
mov
push
jg
scas
and
fcompl
pop
cli
pop
sti
push
jp
repz
insl
sbb
push
cmp
xchg
lahf
xor
pop
sbb
push
jl
cmpsl
or
scas
stc
add
jns
mov
nop
mov
xor
adc
push
sbb
pop
xchg
insl
add
int3
das
mov
xchg
inc
add
fcmovbe
test
jns
pop
and
pushf
add
leave
call
fwait
imul
or
inc
mov
rcrl
or
xchg
jae
inc
cmp
outsb
pusha
sub
or
loope
and
scas
xchg
out
dec
daa
in
sub
ds
xor
cmpsb
xor
xchg
or
test
pop
sub
inc
mov
sahf
push
pusha
pop
test
cmpsl
repnz
sbb
xorb
bound
jo
cli
jno
daa
push
cmp
repnz
adc
and
pop
push
outsl
or
cmp
add
lret
mov
nop
in
repnz
out
shl
fimull
fidivl
push
xchg
mov
mov
and
mov
jo
xchg
popa
add
push
shrl
hlt
pushf
jl
outsb
shl
dec
add
add
sbb
insl
jnp
sbb
leave
loope
pop
in
mov
mov
std
mov
mov
add
xchg
lock
loopne
insb
mov
int3
mov
jl
dec
lods
int3
cmp
push
cwtl
xor
mov
pop
mov
and
dec
push
hlt
aaa
jmp
dec
sbb
pop
sbb
sahf
sbb
and
jne
pop
mov
iret
sbb
adc
adc
cmp
ret
adc
and
jnp
cmp
inc
mov
cmp
mov
mov
pop
cmc
push
dec
ja
pop
jne
imul
rorb
decb
loope
inc
sti
jmp
sbb
pop
aaa
xchg
jle
aaa
mov
mull
loopne
adc
hlt
inc
pop
cmp
mov
int3
push
xchg
adc
mov
sub
mov
sbb
imul
xchg
mov
cmp
cld
cld
mov
mov
mov
xchg
in
stos
in
jo
pop
dec
ffree
mov
data16
mov
cld
neg
cmp
xchg
sub
sbbb
dec
or
push
shlb
pop
inc
xor
and
dec
test
lret
xor
sub
js
mov
ljmp
pusha
icebp
jne
outsb
xchg
sbb
and
js
mov
mov
sbb
jo
jp
mov
rcll
sbb
test
pusha
push
orb
ret
sbb
push
out
pop
ljmp
scas
fstpl
fistpl
aas
dec
pushf
adc
in
jp
add
cwtl
mov
sbb
cmp
pop
cmp
jle
daa
push
mov
jae
hlt
dec
fstpl
xlat
mov
stc
cwtl
imul
cmc
push
cmp
mov
adc
mov
mov
stos
add
test
jae
dec
and
imul
iret
or
fistps
mov
and
lock
in
je
pop
mov
leave
mov
test
test
jmp
out
subps
push
leave
aam
add
adc
fcomp
xor
inc
cmp
arpl
cwtl
rcll
pushf
jbe
or
and
inc
shlb
ss
adc
or
dec
mov
in
adcl
xchg
push
jp
inc
mov
and
testl
pop
sbbl
mov
dec
popf
rolb
popf
jl
and
push
push
in
daa
adc
inc
jl
mov
xlat
je
out
out
push
and
push
sar
jmp
cmp
pop
sbbl
cmp
inc
push
adc
cwtl
lds
lret
bound
add
dec
mov
fcoms
popa
cmp
icebp
jb
inc
push
pop
mov
jle
sbb
sub
dec
shll
cmpsl
les
cmpsl
pop
jecxz
xor
jl
in
lock
insl
pop
imul
adc
push
mov
ja
sub
leave
mov
aad
or
xchg
jg
dec
sub
scas
push
xor
push
sti
pop
jae
mov
cltd
xor
cmp
lea
mov
iret
in
scas
sbb
cmp
lcall
in
je
adc
pop
fistl
fwait
dec
aaa
sub
jle
stc
sub
sbb
subb
adc
mov
into
push
cmp
popa
dec
jae
adc
jge
enter
adc
repz
jp
negl
sbb
pop
dec
mov
inc
and
push
ljmp
cmp
xchg
pop
dec
xchg
sti
mov
sahf
adc
mov
xor
fdivl
inc
push
int
jecxz
add
imul
pop
outsb
stc
push
shlb
jo
xchg
mov
imul
jecxz
cmp
mov
and
arpl
sub
rcr
loope
lods
push
cmc
push
push
shlb
fidivrl
cltd
inc
out
lods
mov
mul
jecxz
in
add
jecxz
pusha
xchg
mov
rcrl
dec
movsl
push
sti
cmp
insl
test
ret
pop
sarb
nop
cwtl
es
mov
and
dec
aam
imul
xchg
sbbb
or
add
pop
hlt
scas
push
or
and
ret
shrl
fcompl
jns
mov
in
dec
xchg
std
pop
std
leave
mov
fiadds
in
dec
data16
xchg
xchg
scas
add
and
insb
es
sub
out
sub
imul
sti
in
xchg
mov
inc
mov
push
pop
add
and
dec
mov
scas
imul
orb
or
push
lahf
inc
cmp
fwait
lret
fimuls
popf
loope
cmp
xor
mov
enter
repz
add
sub
inc
ret
push
das
jbe
outsb
xchg
leave
sbb
push
packssdw
xchg
out
dec
pusha
pusha
test
dec
mov
mov
ds
mov
push
outsb
sub
mov
mov
call
loope
cmpsb
fisttpll
pushf
imul
pop
decl
into
xor
ret
sub
sub
jns
pop
das
out
pusha
into
pminsw
ljmp
lock
add
mov
test
inc
adc
sub
test
inc
dec
sub
cmpsl
or
clc
xchg
adc
jns
into
mov
imul
jo
ss
sbb
cmp
pop
lret
addr16
xchg
fisubs
dec
je
dec
sbb
xor
and
shll
push
mov
daa
adc
add
fistpl
aas
mov
leave
add
cmc
and
xchg
sbb
lock
jb
sarb
xchg
adc
sbb
arpl
lods
and
cmc
insb
xlat
adcl
mov
pop
inc
xchg
shl
loope
fcmovnbe
js
sbb
jg
inc
mov
leave
push
inc
fsub
sub
jnp
test
xchg
dec
div
ret
sbb
outsl
xchg
dec
gs
xor
in
gs
rolb
mov
jbe
xchg
cmp
pusha
movsl
push
dec
repnz
sbb
mov
fsubrs
mov
add
xor
pushf
inc
and
stos
test
jp
shr
imul
enter
sti
out
mov
and
jns
xlat
fildll
leave
dec
xchg
fsubr
and
xor
pop
in
loopne
mov
leave
mov
enter
xor
loop
mov
pop
push
cli
jle
mov
add
inc
pop
adc
ret
mov
outsb
jb
dec
clc
xor
insl
sbb
subl
push
repz
mov
and
mov
cmpsl
and
imul
or
xor
xor
push
popa
test
lea
mov
scas
mov
mov
push
es
sbb
adc
je
dec
mov
sub
mov
xchg
mov
ljmp
push
jne
es
mov
cwtl
and
cmpsb
xchg
sbb
enter
mov
adc
scas
fsubrp
xor
sbb
pop
mov
jae
rcrl
popa
insl
jmp
lds
scas
or
fcomi
sahf
out
int
fiadds
mov
jb
jmp
cmc
mov
or
pop
popw
or
jl
sub
sti
ljmp
jecxz
leave
lods
movl
dec
scas
fidivrl
jns
jb
test
mov
dec
stc
int3
in
adc
rorb
incl
push
ljmp
dec
fs
mov
jmp
dec
jbe
stos
mov
sbb
aaa
ret
cli
mov
jle
sbb
sub
arpl
push
lea
lcall
dec
xchg
call
js
dec
sub
inc
repz
scas
lods
mov
mov
inc
jbe
jno
mov
add
or
inc
in
xchg
dec
es
daa
sbb
sub
repz
int3
imul
movsb
sbb
mov
or
lcall
dec
xchg
es
jno
xor
sub
lea
out
std
int3
adc
and
les
sbb
ss
xchg
cmp
imul
ss
xlat
test
out
add
in
test
or
int
popa
nop
sbb
es
outsb
ret
testl
je
jnp
sub
jmp
ffree
je
movsb
test
pop
insb
mov
pop
ret
incb
imul
mov
mov
jmp
adc
jmp
or
in
mov
pop
mov
out
jg
sbbb
jmp
push
sub
mov
xor
cmpsb
adc
xchg
loopne
pop
xor
sarb
ja
repnz
jmp
in
dec
sub
mov
cmp
fistl
mov
pop
pop
lea
cmp
ljmp
ljmp
mov
inc
test
mov
daa
push
rclb
ficomps
das
lret
test
mov
or
pop
mov
sbb
shll
jecxz
cmp
xorb
packsswb
cmp
cmp
fisubs
rorb
cli
xor
mov
cmp
test
mov
flds
add
push
out
sbb
push
jl
std
cs
adc
nop
jne
lea
dec
push
lea
or
scas
jns
stc
and
js
mov
pop
xchg
push
mov
orb
jmp
dec
mov
iret
aaa
iret
outsl
or
shlb
jns
cmp
sahf
inc
push
sub
in
test
into
mov
xor
xor
mull
jp
popa
iret
imul
add
mov
call
sub
lcall
pop
xchg
aam
leave
cmpsb
ljmp
pusha
cmc
mov
cmc
push
lea
push
sbb
les
inc
shlb
jmp
js
mov
sub
aaa
fldcw
rolb
rcl
int3
arpl
mov
lret
mov
aam
push
jno
push
lahf
mov
mov
loop
cmpl
push
push
fnstenv
xor
cmp
add
pop
push
jg
jge
imul
int3
cmp
test
cmc
sub
xor
xor
pop
ret
gs
pop
inc
jne
jg
mov
aas
flds
inc
sarl
or
fstpt
pop
mov
push
dec
push
sbb
testb
push
stc
or
mov
shlb
jnp
mov
add
or
aaa
lods
xor
jno
repz
dec
loop
pop
mov
pop
push
and
add
popf
fisubrl
lcall
stos
add
outsb
and
or
movsb
call
jp
popa
scas
int
adc
xlat
stos
or
subb
push
sub
shlb
pusha
mov
scas
lds
in
inc
inc
pushf
xor
push
icebp
dec
lcall
loopne
icebp
and
sarl
ja
xchg
cld
jmp
sbb
aaa
add
cmp
arpl
es
fcmovnbe
ja
xor
jbe
adcl
sbb
sti
push
or
add
popa
test
or
xor
test
je
jl
test
lods
and
xor
out
mov
jecxz
std
jbe
sbb
shll
mov
mov
in
cmc
mov
outsb
adc
les
sbb
lcall
pop
mov
xchg
loope
ror
xchg
fstp
jb
subl
jp
xor
rclb
ficompl
xchg
mov
inc
lock
jb
leave
inc
adc
xor
bound
ljmp
inc
inc
dec
and
jecxz
xor
mov
cmp
jnp
sarb
mov
inc
xchg
scas
cmp
ljmp
jle
inc
stc
js
test
popf
cltd
and
scas
ds
fidivl
push
pop
xor
fstpl
and
js
inc
out
ret
testb
xchg
add
test
test
ljmp
loop
mov
stos
xor
pop
out
push
aam
jae
adc
pop
shll
and
aaa
mov
fiadds
leave
shrb
add
push
mov
jmp
cmpsb
into
scas
adc
std
sub
mov
in
or
aas
aas
dec
lret
popf
lds
cs
imull
inc
les
cli
out
addr16
lret
mov
mov
pop
sub
stos
mov
xchg
fs
ret
int3
inc
scas
and
mov
test
jbe
js
inc
pop
in
or
adc
xchg
cmpsl
pop
addb
ja
mov
test
addr16
je
sbb
js
and
repz
outsb
dec
add
hlt
adcb
add
xchg
int3
add
jne
in
nop
push
mov
das
faddl
mov
filds
cmpsl
aad
or
mov
mov
out
add
jns
or
test
arpl
adc
cmp
mov
shlb
out
sub
sti
mov
nop
stos
jle
das
push
imull
xlat
jae
push
mov
sbb
add
daa
sbb
push
sub
push
iret
mov
aaa
gs
rolb
imul
mov
jle
pop
jne
shrl
in
jne
je
xchg
lahf
add
mov
les
std
pop
add
sbb
push
xor
orb
push
sub
xchg
push
mov
loopne
cs
iret
cmp
and
lcall
xlat
data16
or
jb
xor
aam
fcomi
sbb
hlt
jp
scas
loopne
push
lods
adc
leave
cmp
insl
out
or
repz
xchg
je
lock
mov
lock
dec
adc
push
call
fsubs
dec
fisubrl
mov
out
and
loopne
ret
xlat
xchg
scas
mov
and
xlat
inc
or
dec
mov
xor
leave
jg
btr
and
andl
fsub
xchg
and
fldt
mov
mov
sti
dec
aas
xchg
lahf
cltd
dec
jg
sbb
aaa
pop
inc
or
mov
cmpsl
fisubs
adc
pop
movsb
scas
or
or
icebp
and
out
push
les
cld
adc
pop
jecxz
push
and
pop
lods
mov
push
test
adc
std
mov
and
sbb
pop
pop
dec
push
stos
sbb
mov
sub
rorl
pop
xor
test
mov
and
jno
and
out
or
nop
cmc
iret
in
test
push
push
push
mov
neg
xchg
mov
and
test
mov
mov
in
add
and
jecxz
mov
jo
outsl
mov
mov
cmp
mov
stos
push
inc
and
jnp
dec
adc
cmp
outsl
aad
and
or
outsb
mov
inc
mov
adcl
lret
scas
clc
shrb
dec
add
jo
sbb
arpl
xchg
clc
loope
push
imul
dec
and
dec
movsl
aam
adc
scas
push
sbb
xor
mov
cmpsb
pusha
pop
push
mov
into
push
loope
aam
insb
push
mov
push
fcmovne
adcb
test
fidivrs
ret
out
mov
fisubs
jmp
and
repz
cmp
repz
jns
pushf
dec
shrl
dec
mov
sbb
mov
jecxz
push
fcmovb
dec
cs
sarl
fwait
idivb
out
sti
ret
add
or
clc
jnp
jae
or
pop
mov
js
imul
je
mov
mov
imul
test
mov
mov
fildl
inc
push
mov
lcall
sub
dec
mov
dec
cmpsb
add
and
or
jl
lea
sbb
mov
das
jno
in
jmp
jb
xor
xchg
push
jns
or
pop
xchg
fistps
pop
mov
jne
jnp
lea
cmpsl
mov
pop
mov
outsl
lock
arpl
cmpsb
fimuls
ss
jnp
inc
decb
jno
mov
dec
aas
mov
nop
pop
mov
adc
js
cwtl
inc
decl
xchg
push
inc
sub
enter
sbb
test
dec
stc
fimuls
fistpll
push
jle
orb
add
pop
mov
pop
lea
outsl
pop
nop
fisttpll
sbb
rcl
insl
adc
outsl
clc
jb
mov
inc
xchg
into
stos
cli
cmp
xchg
out
sub
xor
pushf
test
sub
push
cmpsl
pop
mov
push
into
jmp
pop
add
insl
push
sbb
xchg
mov
inc
mov
dec
je
shrl
cmpsl
mov
mov
std
ljmpw
sub
sub
pop
sbb
mov
cmp
pop
in
inc
lds
lret
stos
jle
cld
outsb
adc
xor
jbe
subl
adc
test
sbb
cltd
rolb
push
cmp
push
es
jmp
pop
inc
xor
adc
flds
mov
dec
aam
popa
out
addr16
mov
sub
or
pop
jne
xor
cld
xor
jecxz
jb
cld
outsl
enter
fwait
stc
js
loop
popf
or
jl
or
pop
mov
and
data16
or
ljmp
and
movsb
push
and
mov
rclb
sahf
popf
pop
adc
nop
jns
ljmp
mov
sbb
xchg
mov
inc
pushf
push
cmovs
lock
testl
cmp
jp
pop
pushf
mov
out
out
push
xor
mov
push
loope
push
out
push
mov
sbb
adc
inc
pop
fidivs
ja
jecxz
cmp
cld
mov
and
inc
inc
in
mov
push
movl
lods
jae
aam
and
lret
ljmp
add
jae
xlat
in
ret
repz
outsb
fdivrl
iret
mov
xor
popa
push
mov
xchg
loop
cmp
or
add
sub
adc
jl
or
inc
jnp
imull
mov
pop
mov
shl
push
pop
xor
int3
clc
in
dec
mov
push
push
hlt
and
shlb
repnz
mov
mov
dec
and
movsb
inc
and
mov
push
les
xchg
adc
xchg
js
xchg
xlat
xchg
das
loopne
mov
aam
mov
adc
jo
inc
or
xchg
shl
push
cmp
jne
pop
nop
movb
jnp
mov
sti
jmp
xor
jecxz
inc
inc
inc
sub
mov
xor
add
je
sahf
push
and
sahf
subl
jne
xchg
into
push
xor
sbbb
push
inc
outsb
das
dec
pop
flds
jl
sub
xchg
mov
and
xchg
ret
lahf
pop
mov
jg
add
push
inc
repz
outsl
in
mov
negb
sbb
movsl
popf
pop
inc
xchg
xchg
bound
cwtl
cltd
arpl
xor
cmp
fsubs
xchg
mov
jo
mov
test
sub
ret
out
hlt
push
jle
int
or
jmp
pop
daa
cmc
sub
push
adc
dec
mov
dec
cmp
in
fnstcw
dec
add
adc
push
xlat
shll
push
shrb
call
xor
idivb
adc
addr16
push
push
sbb
mov
sbb
add
shll
int
iret
xchg
in
pop
fsubr
dec
mov
inc
sbb
jg
filds
bound
loope
inc
in
ss
loope
subl
mov
adc
pop
mov
jg
or
fdivl
std
movsb
fistl
hlt
stos
jns
dec
mov
sub
cmpsb
mov
out
dec
cmpsl
adc
push
xor
addr16
or
insl
in
cmpsl
mov
movsb
out
fsubl
add
mov
push
add
add
inc
pushw
and
sub
inc
cmpb
rcr
push
pop
push
pop
outsl
js
cmpb
mov
mov
insb
jae
pop
or
roll
xor
cmp
jp
std
add
popa
sbbb
jmp
jae
popf
imul
and
in
xor
cs
mov
es
mov
mov
bound
fcomps
sahf
adc
xor
push
or
jo
cmp
aad
and
jl
sbb
xor
jmp
fdivrl
pop
fdivrs
dec
fwait
jp
cmp
lea
lods
es
ret
test
xchg
in
lods
cmpsl
xorl
or
cmpsl
sub
daa
ljmp
js
sarl
sub
loop
jl
mov
mov
dec
jbe
mov
jg
mov
jge
rcr
inc
and
pushf
mov
adc
hlt
inc
add
test
mov
jb
jl
out
lea
orl
mov
jp
fisttpl
or
push
aaa
inc
insb
add
and
xor
add
and
fstpt
orl
add
dec
push
xchg
int3
test
mov
ja
popf
pop
lret
cltd
xor
sbb
insb
pop
sbb
xchg
and
rorl
mov
inc
push
leavew
push
and
push
inc
dec
enter
cmp
repz
call
aas
jnp
lret
mov
xchg
pusha
dec
je
dec
sbb
adc
in
scas
out
cld
mov
jp
popa
sub
mov
sub
cmp
mov
jb
aas
lret
lock
jp
and
and
fldt
xchg
xchg
jl
cmpb
call
xchg
sbb
sbbl
sbb
mov
add
pop
and
fwait
inc
pusha
test
fildll
test
ret
mov
fsubrl
cmp
cmpsl
pop
inc
mov
rolb
push
lahf
sbb
hlt
inc
mov
dec
popf
popl
lods
popf
mov
movsb
push
idiv
lahf
sbb
aaa
imul
out
sub
mov
inc
popa
sub
inc
sub
insb
in
lret
mov
add
adc
dec
das
fnstsw
and
mov
pop
pop
push
mov
push
gs
lcall
adc
rorl
test
sahf
inc
insb
and
mov
xlat
lds
movsb
negl
fisubs
into
rol
sbb
das
arpl
int
loop
rorl
in
aaa
or
aas
jecxz
stc
aaa
dec
cmp
je
rorl
jecxz
dec
hlt
shll
hlt
jb
shll
or
jp
insb
outsb
insl
sub
mov
andb
outsl
inc
cmpsb
movsl
inc
pop
dec
es
mov
fstl
pop
fidivrl
sbb
mov
inc
mov
stos
mov
cmpsb
adc
sub
arpl
test
mov
std
push
inc
xchg
dec
sbb
test
xor
push
cltd
stc
and
adc
jae
mov
mov
addr16
inc
insb
push
xchg
aam
dec
scas
fldt
mov
pop
das
shlb
cli
mov
iret
mov
add
loope
cmpsb
stc
and
cmpsb
add
xor
clc
push
push
imul
jl
pop
sbb
xor
scas
call
pop
nop
call
js
xlat
adc
xchg
mov
nop
pop
push
ja
shrl
mov
xor
cmp
mov
xor
mov
int
fnstsw
jecxz
cmpsb
es
push
mov
ljmp
xor
inc
fs
push
xchg
test
and
pushf
ja
pop
lret
icebp
add
and
mov
mov
mov
push
aaa
subl
mov
mov
outsb
loope
pop
test
jg
mov
stc
insl
cwtl
inc
daa
sub
mov
jecxz
cld
and
lret
mov
fs
dec
loope
cltd
insl
insl
adc
lock
cmp
loope
dec
add
mov
icebp
insl
pop
and
adc
loope
push
xchg
into
and
mov
test
xor
pop
inc
fcompl
addr16
das
cmp
cmpsl
and
dec
cmp
cli
inc
pop
jno
ss
push
sbb
js
xor
and
divb
fsubs
icebp
rol
imul
add
das
fadds
punpckhdq
shrl
les
loop
sbb
mov
shl
aad
pop
push
cmp
mov
sahf
mov
lock
fmuls
pop
or
ds
mov
push
inc
xorb
and
xorb
sbb
inc
add
icebp
xor
dec
call
mov
add
pop
or
stos
imul
insl
cmp
hlt
pop
stos
jae
pop
lock
fnstsw
in
sbb
inc
sub
insb
xor
ds
out
xchg
pop
mov
xchg
movsl
dec
ficoms
and
push
add
fdivl
lahf
jge
sub
sbb
test
mov
cli
pop
aad
mov
pop
dec
ss
mov
sbb
adc
dec
jp
mul
jg
mov
jbe
xor
push
cmp
stos
fistps
and
xchg
maskmovq
mull
and
sahf
pop
pop
mov
stos
adc
xchg
xchg
cmpl
cmp
sarb
xorb
push
xlat
adc
lods
gs
mov
popf
jno
repz
dec
aad
les
test
insl
orb
cmp
adc
into
ljmp
inc
xor
mov
bound
popa
push
or
ljmp
iret
nop
divb
mov
push
cmp
mov
out
aas
ljmp
loopw
xor
push
arpl
push
test
repz
nop
jbe
stc
and
in
sti
fbstp
push
mov
push
mov
push
xlat
mov
xor
daa
mov
adc
cld
dec
xorl
adc
je
jae
sub
rclb
sub
sbb
sti
push
int3
mov
add
and
test
jecxz
mov
fisubrs
gs
pop
lea
inc
or
inc
mov
xchg
vhsubps
push
mov
popf
xchg
fstl
movsl
std
fisubl
ficoms
adc
mov
loop
test
dec
xchg
lock
sbb
loopne
das
mov
mov
dec
xchg
mov
sub
cmp
ja
xor
add
es
mov
sub
cmp
sti
outsb
inc
js
mov
sbb
mov
rcrb
mov
cmpsl
sbb
rcrl
and
ds
and
rorl
push
fcom
sub
int
inc
mov
out
and
and
xchg
in
and
loop
test
mov
jp
pushf
and
pop
jg
mov
loopne
mov
lock
fisttpl
and
mov
ret
sbb
enter
popf
fistpl
mov
int
test
adc
ret
adc
lods
into
vmovntpd
cmp
data16
mov
pop
loopne
and
test
imul
in
push
sbb
xchg
mov
xor
pop
lods
adc
mov
xchg
ds
fwait
mov
mov
xchg
xor
cmp
inc
popf
gs
cli
inc
call
and
loopne
enter
inc
adc
movsl
insb
movsb
nop
jne
rolb
cmp
loope
pop
sub
enter
mov
iret
fcmovnu
pop
aad
jge
add
loopne
and
and
xchg
push
scas
pop
nop
das
jb
cmp
hlt
out
out
sbb
test
mov
and
imul
inc
dec
and
divb
dec
punpckldq
inc
xor
repz
mov
mov
test
call
inc
mov
fs
divl
cmpsb
jbe
cmp
insb
scas
mov
sub
pop
adc
jo
stos
scas
out
fcomps
jns
pop
push
cmp
loope
aam
pop
dec
push
mov
ja,pn
jbe
mov
sar
rcrl
dec
inc
clc
cs
dec
loop
mov
push
mov
and
mov
out
sbb
shll
xor
mov
xor
pop
pushf
stos
and
adc
cmp
inc
dec
mulb
push
sub
stos
xor
scas
xchg
dec
jns
incb
cmp
cmc
ffreep
daa
inc
clc
js
in
jge
dec
outsl
cmp
xchg
out
pop
sub
outsl
hlt
inc
jl
xchg
adcb
sub
repnz
daa
add
sarl
fs
mov
aas
sbb
ja
xor
mov
frstor
in
add
cmp
mov
sar
mov
pop
mov
push
and
xor
cmp
lods
or
add
jmp
inc
cs
pushf
daa
ja
pop
fwait
ret
fwait
icebp
jnp
pop
in
xchg
jle
xor
icebp
pop
cs
sub
in
jno
idivl
outsb
jno
cmp
adc
or
in
mov
loopne
xor
call
leave
sti
cmpsl
pop
insb
idivl
popa
pop
nop
lcall
das
in
fxsave
jnp
mov
xor
jb
pop
cmpsb
jnp
cmp
xchg
adc
dec
out
mov
sub
jge
xchg
fstpl
aad
pushf
inc
adc
pusha
ss
xor
fimull
push
aas
pusha
jbe
out
cmpsl
push
lret
jecxz
sub
jbe
subl
and
cld
pop
test
jecxz
stc
lods
test
jg
fsubl
cltd
jns
fimull
cmp
mov
sbb
mov
jo
fs
fsubs
and
movsb
xchg
std
les
or
out
test
mov
cld
call
dec
jecxz
arpl
mov
mov
sub
imull
cmc
cmovg
in
lcall
jmp
ljmp
mov
sub
xchg
cmpsl
sub
mov
or
cmp
add
dec
or
inc
or
xchg
jmp
sti
mov
rolb
shlb
sub
fs
sbb
and
int3
dec
inc
push
pushf
fwait
pusha
mov
loopne
push
out
lods
repz
out
mov
imul
cmc
int
mov
mov
sbb
xchg
jg
sti
xchg
jg
sub
dec
push
pop
cmpsl
inc
and
cmpsl
loopne
push
mov
loop
push
jo
popa
jno
fldz
xchg
inc
cmpb
jo
adc
mov
add
inc
mov
rclb
in
out
jnp
std
addr16
jmp
mov
fadds
dec
xlat
xor
sbb
jl
adc
lea
hlt
xor
ss
cmpsb
aam
arpl
test
outsl
adc
clc
imul
lcall
ficoml
inc
in
ds
orb
cld
mov
add
jno
push
and
outsl
and
cmp
pop
cmp
xor
mov
pushf
sti
in
icebp
pop
cltd
imul
les
movsb
pop
xchg
clc
push
mov
pop
and
dec
push
inc
pop
mov
movsb
test
xlat
lcall
mov
fmull
std
sbb
adc
xchg
adc
inc
shl
dec
popf
leave
ljmp
pushf
in
jnp
pop
jg
and
dec
jge
cmp
ret
mov
and
push
pop
mov
mov
sub
lock
jbe
movsl
xchg
inc
or
fadds
add
xor
fimull
push
and
sub
add
dec
mov
mov
dec
addr16
xor
jo
sub
out
cld
adc
and
fs
jg
sbb
movsl
inc
mov
fwait
aaa
sub
imul
loope
pop
stos
and
sub
das
sbb
and
loop
push
lods
jecxz
add
xor
aad
icebp
cmp
icebp
push
dec
stos
sub
adc
adc
orb
lcall
adcl
ret
lret
inc
add
pop
pushf
mov
sahf
push
ja
sbb
fwait
insb
push
mov
sub
push
fisubs
adc
nop
js
inc
mov
testl
xor
les
addr16
mov
test
outsl
mov
pop
xor
in
jecxz
sbb
dec
mov
ja
jns
cmp
sub
mov
lods
cltd
loopne
dec
mov
xchg
popf
pop
xor
jns
leave
cs
insl
and
mov
lret
cmc
add
in
mov
fisttpl
addr16
adc
jnp
jno
lods
addr16
jecxz
fs
cmp
int
lret
fstl
inc
aas
add
fbstp
jb
out
mov
dec
cmpb
sub
xor
jae
in
mov
leave
xor
das
pop
shll
pop
mov
out
cmp
mov
push
xchg
add
ss
pop
loop
fsubs
inc
data16
xor
adc
inc
das
lock
lret
fnstenv
mov
int
dec
cli
mov
subb
movsl
repnz
outsl
mov
xor
jb
ret
push
pop
cmpsb
xchg
leave
je
arpl
sbbb
adc
pop
arpl
pop
mov
enter
sbb
mov
inc
or
mov
sbb
fisttpl
cmp
push
ds
xchg
xor
sub
jl
call
jbe
inc
cld
clc
shlb
mov
insb
jecxz
and
push
arpl
sahf
mov
jl
stc
rcr
pop
dec
jmp
push
cmp
xchg
nop
cld
addr16
push
adc
scas
cmpsb
insl
test
push
cmc
push
pop
xlat
mov
dec
cmp
mov
cmp
and
push
in
dec
popa
rolb
fcoml
mov
cmc
xor
arpl
adc
jns
adc
fisttpl
push
push
adc
sub
pusha
shll
lahf
aas
loop
mulb
cmpsl
add
push
mov
or
mov
mov
cmpsb
jl
mov
push
pop
test
movsl
lods
jl
mov
or
stc
scas
ja
mov
lea
pop
or
xchg
dec
icebp
leave
loop
mov
mov
cltd
gs
ret
xchg
lcall
pop
stos
mov
jns
roll
jb
cmpsl
decb
js
scas
and
aam
mov
xor
pop
rclb
and
adcl
das
addr16
inc
jo
cmp
or
test
scas
out
cmovge
jg
pop
loope
inc
pop
push
in
jg
sub
pusha
imul
xor
cltd
into
inc
xchg
fidivs
in
movsb
xchg
lea
jo
inc
and
pop
mov
nop
push
ja
add
mov
shll
popa
jno
pop
rorb
mov
adc
test
insb
mov
sbb
shlb
insb
cmp
shl
pusha
pop
or
add
dec
movl
push
mov
jbe
push
xorb
insb
and
and
jne
subl
jae
fidivrs
pushf
fwait
pop
call
out
pop
add
jmp
mov
fisttps
mov
int3
ja
jb
pop
outsb
cwtl
loop
mov
arpl
adc
shlb
sub
andl
xchg
mov
and
repz
in
outsb
add
xorb
adc
add
xlat
xor
in
sbb
insb
lods
inc
dec
sar
movsl
int3
aam
mov
mov
test
lahf
ljmpw
mov
jle
sbb
lahf
jno
fsts
inc
pop
or
add
cmp
testb
and
lods
call
test
pop
rcl
movsb
sbb
mov
rcl
in
push
adc
out
call
ds
inc
adc
push
insl
inc
lahf
jge
repz
arpl
cmpsl
dec
pop
fdivp
dec
test
add
out
mov
pop
dec
mov
or
lock
fildl
movsb
popf
ret
jl
jns
mov
lahf
test
adc
and
and
subl
sbb
xchg
mov
aad
sbb
jp
das
and
sub
mov
popa
enter
pop
sub
pop
sbb
jecxz
mov
int
add
out
mov
pop
mov
or
into
imull
and
mov
imul
movsb
ja
insb
lock
fistpl
or
and
test
jmp
pop
std
mov
add
jae
sbb
js
hlt
test
mov
insl
or
pop
pushf
sub
pushf
jle
jge
inc
cltd
mov
sub
imul
in
mov
mov
les
pop
cmp
enter
stc
push
jmp
sub
cmp
and
cmpsb
iret
jne
push
mov
pushf
mov
or
push
push
aad
mov
mov
xor
cmp
mov
mov
lds
xor
cmpb
js
loop
dec
aaa
inc
stc
push
sbb
jmp
dec
mov
stos
movsb
inc
int3
sub
xor
cltd
pop
les
sahf
mov
sbb
dec
loopne
xor
mov
addr16
sub
test
movsb
push
mov
popf
or
ss
sbb
aaa
lret
gs
xchg
pop
jecxz
jp
mov
stos
pop
aad
push
dec
call
jae
mov
pop
lds
mov
fcmovbe
pop
es
int
stos
mov
mov
adc
aad
xor
dec
mull
mov
adc
daa
lcall
cmp
mov
leave
sub
dec
leave
and
lds
fsubrs
jmp
fs
das
cmpb
ficompl
out
or
pop
xchg
xorb
aaa
leave
loopne
xchg
mov
pusha
lock
test
xchg
ds
jle
std
loope
dec
pop
jp
xchg
mov
leave
loope
sub
sbb
in
fiadds
std
nop
pop
mov
sbb
inc
sbb
cli
adc
add
shlb
dec
cmc
inc
mov
mov
lret
rcl
andb
mull
cmp
jg
dec
mov
sbb
jmp
popa
int3
sbb
dec
test
aad
or
mov
aaa
fcmovnbe
lds
add
sub
jnp
add
xor
lock
mov
in
sub
ds
cmp
popf
daa
mov
bound
mov
xchg
pop
push
push
jo
or
push
out
mov
inc
mov
cs
mov
pop
cli
setle
lcall
sub
mov
ret
gs
cmc
adc
das
repz
in
popf
aas
dec
cmp
sub
scas
xchg
mov
push
xlat
mov
out
mov
inc
es
mov
jno
out
cmp
pop
ljmp
call
call
pusha
lret
adc
lret
jmp
repnz
imul
mov
pop
inc
arpl
es
xor
lret
mov
out
sub
xchg
dec
out
in
jnp
fisubrl
lods
int3
test
mov
aam
pop
iret
imulb
divb
imul
mov
push
fiadds
push
insb
push
lods
lds
das
push
hlt
int
xchg
adcl
adc
cmp
stc
inc
aas
orl
mov
sub
sub
popa
call
dec
std
mov
or
insb
jnp
inc
enter
dec
cmc
mov
and
jnp
leave
insl
call
inc
mov
mov
and
in
pop
enter
es
mov
mov
inc
mov
dec
in
xchg
xchg
repnz
adc
fsubs
leave
movsl
xor
add
dec
test
fidivs
pop
dec
icebp
add
ret
add
nop
movsl
lods
cwtl
mov
cltd
jb
jge
xchg
or
cmpb
aas
or
mov
fnstsw
adcb
xor
inc
in
and
loope
and
push
push
arpl
cs
daa
pushf
push
outsl
arpl
out
insl
mov
cmp
adc
into
cmp
inc
push
or
add
aaa
lds
adc
adc
stc
insl
pop
pop
movsb
lods
xchg
ret
callw
jmp
pop
imul
shrb
or
inc
lret
mov
xor
mov
push
xor
enter
movsb
clc
xlat
pop
rcrb
arpl
jg
enter
pop
js
inc
pop
sbb
iret
cwtl
or
bound
ret
mov
fidivrs
jb
adc
test
nop
nop
dec
ss
xor
into
aad
sbb
mov
add
dec
pop
cmp
push
cmp
push
icebp
pop
mov
sub
or
movsb
xor
mov
mov
cmp
jne
jo
repnz
dec
inc
addb
mov
dec
add
mov
and
aad
and
cmc
aad
and
shrb
nop
ds
pop
sub
fcomps
jmp
or
out
mov
cmp
stos
mov
mov
and
out
jae
addl
cmp
xchg
or
or
jp
incl
ss
mov
aam
pop
cmpsl
pop
test
aam
mov
mov
in
push
ds
pop
pop
fwait
outsb
push
gs
pop
adc
fwait
aad
lods
adc
ror
in
and
cltd
mov
sub
inc
cs
lods
dec
mov
cmc
aaa
ffreep
stc
addr16
pop
popl
das
jne
das
and
sub
mov
in
rcl
and
xchg
insb
fidivrl
jnp
out
dec
inc
ja
jge
sbb
mov
or
xchg
jb
cwtl
rcrb
stos
imul
cmpsb
pusha
fsts
add
fisubl
in
frndint
jge
stos
inc
sub
test
mov
dec
pop
rcrl
daa
in
mov
add
sub
xor
sbb
mov
or
clc
inc
pop
add
gs
xor
inc
mov
cmpsb
inc
popa
and
jno
xchg
adc
cmpl
jle
dec
sti
sbb
cwtl
and
jecxz
in
mov
loop
mov
sbb
jno
scas
sbb
or
jge
push
inc
dec
je
ret
xchg
lea
mov
xchg
push
sub
idivl
test
pop
push
inc
test
les
dec
test
popa
or
sub
shlb
ficomps
loopne
xchg
inc
repnz
or
push
sbb
std
scas
addr16
sahf
jno
adc
ret
fwait
jge
push
mov
jbe
adcl
xlat
out
or
mov
mov
and
add
daa
xchg
lea
sahf
mov
shl
push
dec
test
je
push
sbb
outsb
xor
pop
lods
addb
mov
int3
mov
jno
fisttpll
mov
out
insb
int
ret
jne
cmc
test
pop
pop
add
sub
aas
mov
mov
mov
inc
sbb
outsb
adc
inc
inc
repz
das
xor
mov
xlat
int3
fnstenv
jae
cmc
movsb
stc
fisubrs
fists
std
add
fs
popa
xchg
mov
inc
iret
in
clc
or
inc
rorb
dec
or
adc
arpl
jmp
insb
inc
xchg
into
inc
scas
notb
cmp
push
lret
inc
xchg
adc
scas
push
push
rclb
lods
sub
sarb
adc
sbb
xchg
push
arpl
lea
cmp
cmp
ror
xchg
mov
addl
jnp
add
add
cmp
fstpl
lea
sub
cmp
mov
and
pop
jo
sbb
cli
mov
pop
test
dec
mov
pop
xchg
outsb
outsl
inc
mov
push
movd
addb
in
push
icebp
popf
jmp
bound
call
mov
subb
mov
cltd
out
sub
adc
push
xlat
adc
mov
cmpsl
hlt
and
stos
fcoml
imul
mov
dec
lds
pop
jl
hlt
jno
push
stos
test
testb
inc
je
jno
cs
jmp
adc
xor
lret
test
in
adc
fwait
bound
push
test
sub
push
xor
movsl
insb
mov
shl
push
test
out
jae
js
adc
fwait
sbb
pusha
sbb
pop
int3
xorl
dec
cmp
sub
lods
push
cli
sti
mov
loope
sahf
jnp
fwait
sbb
jp
or
xchg
add
mov
jmp
pop
mov
stos
mov
shrl
xor
inc
mov
inc
arpl
fistpll
out
pop
xchg
jae
cmpsl
sti
push
cmp
jge
sahf
xchg
cltd
inc
inc
xchg
inc
mov
sub
adc
mov
inc
mov
adc
xlat
movsb
xchg
push
lods
xor
call
sbb
xor
idivb
or
insl
insl
cmp
test
sbb
cld
out
lret
fcmovnbe
adc
jl
pusha
stc
cmp
push
or
out
loope
mov
mov
scas
das
call
sub
idivl
sub
inc
lret
pop
test
in
push
xchg
xor
mov
and
add
mov
dec
pop
dec
adc
mov
daa
add
inc
lcall
scas
rcll
dec
pusha
jl
sbb
fs
sub
dec
cmp
outsl
cwtl
pop
je
mov
or
mov
je
test
and
std
and
xor
nop
xchg
push
imul
sbb
call
popa
out
cs
sub
aaa
hlt
dec
aad
inc
sbb
cmc
dec
sub
test
cmpsb
les
dec
inc
sbbl
pop
rclb
outsb
add
mov
inc
ds
mov
cmc
inc
outsl
int3
aaa
lock
jne
cmp
sub
outsl
in
icebp
gs
xchg
cmp
xchg
add
arpl
pop
ds
push
push
jg
jns
sbb
xchg
stc
nop
sub
adc
sti
mov
push
stos
sbb
sti
cmp
fsts
idiv
orl
pop
repnz
shlb
sti
cltd
ljmp
cmp
mov
adc
nop
fidivs
xchg
xor
jno
aad
jns
cltd
xor
adcb
adc
fmulp
add
inc
andl
or
ss
scas
mov
sub
das
mov
nop
pop
es
in
shll
push
xchg
and
jbe
or
sub
insb
ficompl
mov
cmpb
sbb
pop
add
add
dec
mov
xchg
cwtl
fcompl
mov
pop
xchg
mov
push
out
add
inc
and
cmpsl
pop
xor
xor
cmc
xchg
sbb
roll
adc
pop
or
in
or
jo
xchg
push
mov
pop
popa
add
daa
add
mov
pop
imul
testb
scas
shrl
cmp
inc
stos
jb
inc
sub
pop
add
outsb
sti
mov
hlt
dec
shufps
fsubrs
divb
ds
sti
mov
out
in
xor
cwtl
push
adc
mov
and
aaa
adc
dec
push
ja
pop
arpl
fs
pop
xchg
jnp
and
or
push
in
in
ret
mov
inc
adc
mov
aas
xchg
add
lea
sbb
pop
fisubrl
cmpsb
decb
lock
pop
call
iret
mov
sub
sbb
push
mov
mov
push
push
jbe
fst
mov
cmp
outsl
cmp
push
subb
shl
xchg
mov
xor
cmp
push
inc
mov
push
adc
and
out
sub
fnstenv
pop
inc
cli
lret
ljmp
pop
mov
movsl
jg
push
jmp
aam
loope
arpl
mov
nop
jle
insb
mov
jae
jo
cld
mov
push
fnstenv
sarb
xchg
or
lahf
fsub
inc
movsl
inc
push
pop
out
sub
xchg
inc
xor
dec
lods
pop
fistpll
jp
pop
cmp
clc
insl
xchg
and
lock
jbe
iret
push
dec
repz
mov
push
mov
push
jb
cmc
aaa
mov
inc
add
or
outsb
lds
push
test
insb
cmpsl
jae
pop
in
mov
adc
or
and
aad
loopne
push
add
dec
icebp
push
fs
jnp
loope
xchg
xor
lcall
sahf
popa
data16
fs
ljmp
mov
push
jecxz
push
add
or
add
xlat
xchg
and
or
xchg
lods
adc
pushf
dec
in
outsl
pop
xor
jno
daa
xchg
rcrb
lds
int
pop
lret
in
sub
cmp
loop
mov
ja
fxch
mov
inc
xchg
ds
inc
jno
outsb
inc
cmp
notb
loop
outsb
jb
pop
xchg
push
test
subb
push
lret
xor
sbb
outsl
xchg
jnp
sub
jp
popf
aas
adc
mov
add
gs
jg
sbb
es
xchg
and
pop
test
fmull
fsub
fcmovu
dec
inc
mov
xor
movsb
aad
xchg
sub
sti
sub
mov
mov
jbe
rcr
sbb
cmp
fcomps
add
arpl
and
cli
add
or
adc
rcr
nop
ret
and
sbb
test
sbb
pop
fdivrs
lock
fisubrs
or
hlt
mov
xor
lds
adc
mov
test
push
dec
push
js
mov
insl
or
push
mov
aam
sbb
cmpsl
or
pop
add
sbb
incl
jnp
scas
iret
pushf
nop
clc
push
fwait
push
aas
inc
jae
pop
mov
pop
sub
jle
or
int3
mov
test
cwtl
adc
xchg
sbb
inc
or
hlt
push
insb
test
sar
in
std
out
out
xchg
xor
inc
jp
mov
xchg
mov
lahf
jno
inc
cmp
mov
and
test
cltd
mov
mov
mov
dec
ret
popf
imul
xor
mov
scas
push
push
outsl
add
mov
out
test
add
cld
loope
ficomps
data16
inc
js
icebp
xor
lods
shrb
pop
imul
cli
loop
jge
imul
mov
in
mov
sbb
iret
test
das
inc
or
call
cmpsb
xor
in
hlt
xor
aad
cmpsl
push
mov
cmp
ljmp
add
mov
or
repnz
loop
push
jo
and
jnp
pop
imul
sbb
cmp
shr
cmp
sbb
sbb
xchg
mov
sbb
push
xchg
mov
add
test
or
fists
out
fcoml
jns
movsl
fld
subl
out
mov
cmpsb
inc
out
jg
scas
xor
push
pop
fdivrs
lret
adcb
and
sbb
and
mov
pusha
punpckhwd
neg
lods
mov
jno
movsl
dec
pop
jp
add
int
gs
fldl
cmp
push
mov
imul
out
xchg
adc
cli
movsb
inc
sub
adc
mov
adc
push
push
pop
out
xchg
not
lea
push
jmp
movsl
mov
mov
in
mov
shrl
shlb
pop
movl
in
pop
sub
xor
sbb
pop
jg
xor
sbb
jne
lcall
dec
clc
mov
cmp
jmp
add
std
xor
stos
pop
and
mov
fsubs
and
mov
pop
dec
push
mov
push
out
dec
pusha
cld
into
push
xchg
in
imul
in
jg
mov
adc
sahf
xchg
sbb
cmp
fld
lret
fsubl
push
inc
lods
mov
mov
xor
jne
mov
pop
sahf
clc
fwait
rorl
pusha
pop
cmp
jo
jl
sahf
leave
dec
xchg
adc
int3
or
enter
sbb
pop
je
outsb
in
icebp
movb
hlt
and
jns
pop
mov
loopne
mov
cmpsb
lds
mov
icebp
cld
jo
pop
aam
or
js
scas
jne
iret
stc
sbb
mov
push
popa
or
test
loope
call
enter
xchg
dec
mov
mov
push
and
mov
in
insb
fldl
mov
mov
sbbl
mov
push
lods
lods
xchg
mov
ficompl
mov
cltd
xchg
cli
je
pop
test
pushf
jb
inc
pop
mov
mov
outsl
mov
out
call
pop
or
test
es
cmc
cli
mov
jecxz
cmp
add
push
mov
fisubl
cmovae
pusha
sub
xchg
loope
cmpsb
mov
lahf
loop
aaa
jb
mov
add
mov
arpl
add
sub
inc
adc
push
adcl
push
xchg
sub
add
inc
xorb
mov
mov
lahf
lods
roll
xchg
shll
int3
ret
aad
sub
jbe
bound
and
sub
into
dec
in
mov
stos
lds
jno
shll
dec
stos
inc
or
fcomi
bound
stos
rcrl
mov
jecxz
add
mov
arpl
cmpb
mov
xor
daa
repnz
sub
push
mov
jbe
lods
or
jbe
jp
pop
xor
cli
aaa
fscale
mov
fldenv
scas
mov
push
fnstcw
imul
pop
lock
hlt
jne
pop
mov
or
add
data16
enter
or
jne
out
xor
sbb
idivl
pop
lret
lahf
insl
mov
push
rorb
mov
xor
mov
dec
adc
jae
inc
pushf
pop
pop
cli
pop
daa
mov
xor
cltd
adc
roll
aaa
call
test
sahf
xchg
jg
in
add
and
sub
jae,pn
jl
mov
incb
jl
rclb
int3
mov
xor
push
fildll
nop
ja
icebp
jmp
insb
pop
xchg
push
add
flds
mov
and
push
mov
lahf
pop
iret
aad
or
pop
rcll
cmp
je
cmp
stos
pop
cmp
cmp
jp
dec
fld
sbb
rorl
and
fmul
fisttps
jns
jae
xchg
sar
movsb
shlb
lock
bound
and
cmc
aaa
push
xchg
jae
or
mov
pusha
into
das
mov
mov
pop
mov
adc
outsb
cs
cmpsl
loop
arpl
sbb
mov
shll
scas
and
insb
mov
or
xlat
or
xchg
imul
xor
pop
fcoml
dec
lock
lock
ljmp
jmp
subl
ds
jl
mov
aaa
dec
sub
adc
dec
mov
add
push
or
add
pop
cli
lods
or
rorl
pop
aad
lods
imul
call
xorb
cltd
mov
cmpsl
loope
or
push
sub
xlat
shll
adc
rcr
and
pusha
pop
cmpsb
cltd
mov
mov
das
jae
pop
hlt
pop
ljmp
jecxz
push
mov
push
and
jge
rorb
ror
xor
int
inc
inc
hlt
push
lret
ficomps
xchg
test
jp
adc
xchg
push
daa
sub
sub
cli
cltd
call
xor
jnp
push
or
lods
pop
mov
jnp
cli
jle
mov
mov
dec
jb
dec
mov
shl
sbb
jae
js
xlat
push
xchg
mov
outsb
lahf
jmp
mov
std
imul
sbb
inc
mov
cli
sahf
push
mov
fsub
sub
rolb
dec
dec
inc
cmp
pop
adc
out
das
into
pop
in
fisttps
xchg
popf
pop
ret
hlt
popf
jno
sub
push
or
in
push
push
stos
dec
sbb
repz
popf
mov
xor
test
sub
ja
jo
or
push
cld
sbb
shlb
push
pop
adc
and
fcmovnbe
in
stos
adc
je
daa
insl
fnstsw
in
jnp
sahf
es
aaa
push
jnp
push
icebp
sarl
xchg
and
fdivrp
xchg
jecxz
jmp
inc
mov
int
xor
call
xor
add
and
pop
push
mov
xchg
or
inc
sub
jno
sahf
pop
jne
mov
cld
cmp
cmp
lret
daa
aaa
mov
int3
shll
pop
int
cmp
shll
sbb
push
inc
pop
inc
aam
or
js
insb
aad
dec
es
add
les
cld
movsb
push
cmpsl
push
cld
mov
shl
jecxz
sti
mov
xorl
cmpsl
repnz
cwtl
sub
push
mov
sub
pop
sub
xor
push
push
xor
je
push
cmp
dec
xchg
mul
xor
sbb
into
jl
adc
jns
fildll
sahf
add
mov
add
jnp
lret
fstps
xchg
ret
adc
mov
fs
imul
push
xchg
add
addl
addr16
jl
push
jmp
rcll
cmp
sahf
icebp
dec
cwtl
inc
sub
pop
cwtl
pop
mov
push
stc
xchg
xchg
inc
xchg
lcall
dec
pop
mov
xchg
mov
jmp
adc
mov
or
jo
lea
mov
jb
int3
inc
adc
jg
pop
jns
rcrb
loop
xor
inc
scas
int3
mov
mov
and
xchg
jecxz
xor
push
ja
cmp
push
xchg
pop
lcall
xchg
das
mov
daa
outsb
and
push
xchg
pop
sub
cmp
icebp
repz
adc
jecxz
jp
or
cltd
test
cld
pop
sbb
mov
or
pop
clc
xchg
addl
test
in
stos
inc
push
mov
inc
aam
lods
das
aad
push
scas
fs
adc
dec
leave
dec
add
mov
scas
jnp
in
mov
xchg
and
repz
cli
into
inc
inc
scas
jae
adc
frndint
aas
fsubrs
jecxz
cmc
push
mov
push
int3
aas
fsubrl
js
xchg
outsl
adc
push
xchg
or
xchg
outsb
sbb
out
push
jb
sti
popl
out
xlat
cwtl
inc
jnp
jge
sahf
jae
in
in
jns
and
mov
mov
mov
rolb
push
insl
cmp
push
xor
out
rorb
jmp
out
push
out
push
mov
sub
mov
clc
jb
cwtl
jecxz
add
loopne
jns
lock
cmc
ret
mov
jmp
test
into
dec
inc
xchg
xchg
mov
jb
adc
xacquire
aam
inc
rorl
lret
dec
call
jno
test
fdivrl
fdivp
inc
fimuls
mov
fwait
out
adc
mov
mov
stos
pop
testb
mov
pop
loop
mov
cmp
outsl
push
xlat
leave
push
sub
notl
popa
invd
out
xor
or
and
in
fisubrs
and
pop
jbe
lret
mov
incb
lods
cmp
scas
mov
dec
mov
enter
jb
push
mov
pop
out
sub
adc
jge
jl
lcall
pusha
xlat
test
add
add
scas
lock
test
nop
loope
jge
mov
lods
std
sbb
fldt
xchg
movsb
pop
sbb
cmp
mov
stos
mov
in
and
mov
nop
cmpsl
pusha
aam
mov
push
or
push
fwait
lock
jg
push
push
arpl
fs
sbb
cltd
mov
arpl
popa
cmpsb
insl
inc
or
je
push
adc
jns
loopne
sub
std
dec
push
mov
push
mov
xchg
sbb
mov
in
lods
imul
je,pt
and
out
pusha
fcomi
in
or
out
xchg
js
push
push
in
icebp
sbb
pop
fildll
mov
or
bound
loopne
push
mov
call
mov
cmpsl
mov
inc
in
fldl
dec
mov
mov
ljmp
pop
fistpll
std
test
shr
in
pop
insl
mov
or
lcall
lret
pop
inc
mov
jle
cmp
mov
rorl
xchg
das
pop
cwtl
outsl
js
jo
dec
test
fdivr
mov
or
mov
sbb
lret
adc
add
cltd
lods
cld
mov
mov
mov
call
pop
into
std
push
iret
orb
sbb
adc
in
pop
in
jmp
cmp
jge
dec
inc
mov
orb
pop
cmpsb
xor
ret
aas
scas
xchg
sbb
pop
pop
aam
bound
push
pop
and
shl
insb
iret
ret
mov
insl
pop
data16
push
xor
sub
jecxz
pop
loop
pop
movl
sbb
mov
lds
mov
xchg
hlt
aas
dec
jo
dec
push
lahf
cld
add
lahf
mov
fstps
pop
adc
dec
insb
mov
and
sahf
pushf
xor
pop
addb
pop
push
je
jmp
subb
push
xlat
jae
aaa
xorl
into
sub
push
in
inc
test
outsb
push
stos
loop
xchg
scas
lods
jbe
test
sbb
pop
scas
and
adcl
fmuls
mov
mov
or
mov
push
in
lods
ds
mov
jmp
push
sub
xchg
xchg
and
pop
inc
fcmovnbe
cwtl
popa
jp
lods
int3
dec
mov
cmpsb
push
sbb
lret
rorb
rorl
ja
dec
lea
mov
and
lcall
insl
enter
insb
push
data16
adc
sub
popf
inc
leave
sbb
lods
jno
push
in
jo
jle
xchg
and
mov
adc
pop
les
mov
dec
fsts
inc
rorl
loope
ffreep
pop
and
adc
imul
shlb
hlt
in
scas
jecxz
jae
mov
fdivr
insb
rcll
shll
sub
aam
sbb
lock
xor
mov
out
cmpsl
or
xchg
mov
nop
xchg
jb
sti
sbb
and
insl
adc
sub
jbe
jns
dec
loopne
out
cmp
sub
sbb
cmp
mov
push
bound
push
push
iret
movsb
sub
sub
pop
mov
sbb
add
call
cmp
std
stc
or
decb
mov
stc
aam
push
lock
std
cwtl
inc
popf
push
loope
sub
add
stc
dec
popa
das
sub
xchg
ljmp
in
push
les
inc
sub
add
aaa
data16
cmp
mov
sbb
int
movsl
pop
cmp
sbb
sbb
repz
dec
pop
cmp
mov
mov
xchg
repnz
ret
mov
addr16
loop
add
fsts
cmp
int
aam
push
pop
fidivrl
xchg
test
scas
inc
int3
adc
ljmp
cmp
dec
push
test
add
mov
mov
sub
jb
and
xchg
inc
pushf
sbb
insb
imul
ds
push
aad
pop
add
push
pop
mov
loop
dec
or
mov
adc
xor
out
les
sub
in
rclb
scas
dec
inc
sbb
pop
rcrb
cmpb
xor
and
pop
ret
int
arpl
out
lret
outsl
xchg
cli
cmp
add
push
dec
mov
xchg
in
paddsb
push
jle
mov
in
mov
push
or
addr16
or
sbb
mull
sub
pop
je
mov
outsl
popa
nop
roll
ret
popf
sbb
push
or
arpl
js
mov
xchg
loopne
pop
mov
xchg
movsl
and
jmp
aaa
xchg
and
repz
fldenv
stc
lahf
push
nop
test
push
es
sbb
push
or
push
xor
das
lret
sbbl
jmp
xor
mov
fidivs
jecxz,pn
divb
pop
mul
cmc
dec
adc
out
sub
pop
sahf
cli
fisubs
rorl
xchg
lret
and
dec
test
cmp
pop
xor
push
pop
push
dec
roll
lret
ret
jne
flds
std
add
or
sub
movsl
sahf
shll
std
and
mov
sub
out
sti
cld
mov
lcall
addr16
aad
mov
sti
pop
pop
jb
lahf
cmp
jno
push
rol
aaa
push
inc
ret
push
and
fdivr
lods
repnz
lds
aam
int3
jo
dec
aad
push
lret
shlb
and
loop
xchg
int3
stc
shrb
mov
xchg
jnp
mov
push
insb
and
and
outsb
cld
mov
cld
inc
sti
push
aad
push
insl
shl
lods
xchg
sbb
fldenv
add
outsb
repnz
negb
sbb
in
sub
cltd
mov
data16
fnsave
xchg
out
sbb
push
lea
call
mov
jmp
cmpsl
mov
sbb
or
inc
and
push
adc
iret
push
push
popa
les
adc
inc
lock
daa
mov
inc
hlt
loope
jl
inc
idivl
stos
jmp
sub
shl
mov
xor
aam
in
cltd
dec
in
clc
into
sbb
mov
int3
idivl
sbb
dec
aad
jo
int
dec
mov
dec
sbb
rorb
cmpsl
mov
mov
es
pop
cld
arpl
stc
pop
addb
ja
arpl
orb
or
ret
outsb
movsl
jne
pop
add
push
clc
scas
dec
pop
jno
js
mov
arpl
mov
shr
or
push
lods
popa
sub
dec
fucom
xlat
fdivl
push
cmp
sbb
negl
dec
rorl
ret
xor
xor
sbb
aaa
mov
cmovbe
fmuls
mov
bound
stos
and
jo
out
jne
psubusw
mov
adc
xchg
add
or
dec
inc
rclb
fsts
subb
loopne
and
ds
dec
xor
mov
jne
jge
mov
test
pop
dec
ror
cli
dec
adc
or
xchg
sahf
vorps
mov
sub
lds
add
pop
inc
icebp
jb
and
inc
sub
stos
movsb
cmpsl
je
fsubrl
outsb
sub
cltd
jl
stos
js
push
bound
daa
sub
js
xor
mov
rcr
xchg
gs
mov
or
mov
jne
push
daa
push
scas
push
out
cmp
sub
test
fwait
adc
or
loope
jmp
nop
xor
dec
xchg
and
fsubl
into
xchg
jo
jg
sub
movsl
xchg
adcb
loop
loop
shrl
cld
mov
int
inc
imul
push
cmp
mov
scas
popf
mov
in
rcrb
jne
imul
popa
in
outsl
mov
mov
mov
push
push
fiaddl
stc
call
ss
push
lods
pop
adc
mov
movsl
cmp
mov
arpl
fisttpll
test
dec
jno
or
or
cmp
mov
dec
mov
and
ret
in
and
adc
mov
cli
js
outsb
jno
cmpsl
xchg
shl
iret
xor
ds
mov
scas
fiaddl
jl
enter
fidivl
push
jp
lods
aaa
insl
lmsw
test
je
and
push
repz
das
jecxz
sub
lods
dec
test
popf
shr
push
dec
daa
push
xor
push
loop
jbe
lret
add
xchg
mov
sub
inc
cmp
lcall
dec
enter
loope
mov
lret
or
bound
mov
lret
sti
lret
orb
add
or
addb
popf
sbb
push
xor
dec
cmpl
shrb
mov
js
mov
mov
push
daa
mov
out
clc
jl
sub
sbb
aad
xchg
mov
and
bnd
xor
pop
jnp
popa
jge
mov
in
push
xchg
jmp
repnz
inc
stos
lock
stc
sub
aas
jns
xor
decb
push
fldl
pop
stc
jg
imul
sbbb
sbbl
jne
test
lret
mov
aaa
out
push
jbe
and
xchg
ffreep
or
xchg
fsubrl
test
hlt
xchg
mov
loop
push
sbb
ja
adcl
dec
jnp
es
sub
and
xchg
f2xm1
shlb
mov
add
scas
inc
cmpsb
cmc
jmp
and
testl
jle
mov
xor
inc
sbb
sbb
cmp
roll
or
mov
mov
stos
movsl
jecxz
jecxz
cltd
xor
add
adc
and
int3
mov
or
lods
mov
loopne
scas
or
into
cmp
jg
xchg
sbb
pop
pop
mov
xor
adc
int3
das
cmp
iret
or
cmp
pop
incl
repnz
sbbl
dec
jl
mov
xlat
imul
loop
dec
or
out
mov
gs
add
pop
loope
sbb
inc
faddl
xor
jle
xchg
fiaddl
jecxz
in
stos
mov
jl
cld
pop
lods
pcmpeqw
pop
aam
aas
lock
or
push
mov
mov
icebp
adc
outsl
lcall
repnz
aaa
jo
lahf
das
lods
mov
addr16
in
dec
push
jne
xchg
adc
xor
mov
xor
iret
pop
imull
cmp
xor
xor
test
iret
int3
test
ret
mov
movb
stos
add
test
je
mov
scas
sar
icebp
adc
pop
add
dec
xchg
ret
xchg
mov
sub
mov
ja
push
mov
xor
and
cld
cmp
xchg
push
mov
push
sbb
inc
or
mov
aaa
add
adc
cld
pop
arpl
add
push
daa
mov
loopne
aas
out
mov
insl
xor
jmp
inc
popl
inc
adc
pop
sub
or
and
xor
arpl
dec
inc
add
in
jg
stos
jno
lods
fsubrl
mov
add
mov
jle
stc
mov
xchg
sub
loopne
push
testb
or
mov
jmp
lds
mov
aad
sarb
xchg
outsl
sbb
cltd
add
xor
xchg
pop
pop
ss
xor
cld
addr16
mov
or
xor
inc
es
jle
js
or
popf
int3
jae
jge
adc
jns
lret
imul
je
cmp
pop
sub
and
sbb
cli
xor
fidivs
add
xchg
and
jp
sub
jbe
xchg
loope
cmp
and
xchg
cmp
sub
push
mov
sbb
rcrb
fisttps
mov
call
orl
dec
std
imul
mov
push
push
ja
cmpsl
lahf
sub
fsts
jge
ja
inc
sub
sbb
std
bound
mov
jnp
js
mov
pop
orb
jbe
cmp
popa
test
dec
movsl
hlt
lahf
xchg
movsl
push
pusha
dec
into
in
jbe
add
or
mov
rcrb
mov
mov
inc
mov
and
lret
imul
nop
inc
sahf
ljmp
ja
leave
mov
mov
inc
andl
xchg
test
stos
aam
dec
fnstcw
popa
lock
jae
test
and
rcll
repnz
jae
test
sbb
loop
adc
add
jbe
jb
and
xchg
shll
jle
jp
jge
mov
lcall
lret
mov
mov
cmp
xchg
or
fdivl
add
xchg
or
icebp
mov
arpl
pushf
fcomip
ficoml
in
cmp
out
mov
icebp
in
out
icebp
aad
pop
and
sbb
pop
and
cltd
push
aad
fstl
dec
fisttpl
test
sub
mov
jg
pop
movsl
add
in
cmp
mov
repnz
lret
test
or
fstpl
dec
or
cmp
sahf
frstor
mov
test
push
jns
dec
andl
sub
lock
ret
lds
sbb
pop
fists
jmp
jbe
lret
bnd
into
xchg
push
push
inc
mov
sbb
fbld
mov
fldt
cmp
add
pop
test
outsl
or
out
movsb
stos
pop
incl
xor
je
pop
fsubrs
cmp
popa
sbbb
push
test
jmp
mov
or
pusha
loope
push
popa
mov
dec
in
dec
fcmovnb
scas
imul
out
aam
jnp
inc
test
jl
lret
subb
jno
fs
mov
adc
enter
rcrb
jg
inc
jns
push
stos
arpl
sub
pop
push
xor
int
pop
mov
add
in
lret
xchg
and
fistpll
outsl
push
dec
add
pop
jmp
mov
lahf
push
sub
arpl
cmpsl
int3
mov
pop
loop
sub
cmpsl
adc
pop
mov
push
mov
repz
sub
shl
xor
push
xor
aad
idivl
loopne
popf
adc
leave
dec
int3
call
fdivl
test
pop
les
xchg
push
int
out
shr
xor
push
insl
push
out
xchg
xchg
or
xchg
mov
jecxz
push
lods
pop
rclb
sub
adc
shrl
mov
jl
call
pop
push
fsubrl
push
shrb
ret
aam
push
mov
repz
lods
inc
roll
sahf
out
test
jae
adc
pop
dec
dec
daa
xchg
inc
rclb
cwtl
add
loopne
fsubrs
imul
cmp
jno
pop
mov
cli
dec
cltd
insb
addb
jns
popa
pusha
fdivrl
popf
fwait
in
push
pusha
out
inc
adc
in
popf
dec
jne
or
push
ja
push
popa
push
xor
mov
add
movsl
lods
mov
push
pop
repnz
push
jne
jp
xorb
cmp
jo
adcb
mov
push
mov
inc
xchg
sub
test
popl
dec
sarb
movsb
imul
mov
mov
out
push
xor
mov
cmp
lahf
inc
push
cmp
fwait
jge
push
pop
scas
in
mov
adc
mov
xor
popf
in
cltd
outsb
lock
push
cltd
test
push
bound
or
mov
push
out
imul
lds
xchg
movsb
aad
mov
decl
or
icebp
xor
rcrl
xchg
xlat
lahf
add
sbb
sub
mov
inc
movsb
pusha
sub
or
sbb
cmp
pop
sub
adc
mov
test
pop
fs
dec
inc
orl
xor
push
cmpsb
cmpsl
sub
adc
add
push
pop
adc
sbb
add
fxch
jmp
dec
dec
mov
inc
repz
movsl
loope
bound
push
call
mov
mov
in
sbb
idivb
cli
lods
lahf
gs
out
push
xchg
addb
xchg
cmp
inc
adc
fdivrl
insb
mov
imul
mov
and
orl
les
cld
xchg
sub
or
addr16
mov
orb
or
jnp
mov
je
inc
mov
xor
ret
addr16
sbb
ds
push
add
jbe
xor
adc
jp
gs
test
movsb
inc
mov
pop
mov
orl
repz
push
cli
ja
out
sbb
dec
inc
imul
sahf
call
in
fstpl
push
mov
push
mov
jp
movsb
scas
sarl
ljmp
call
xor
push
adc
xor
aam
js
mov
lret
mov
xchg
mov
js
mov
jmp
popa
mov
mov
dec
xchg
jo
enter
gs
mov
es
pop
inc
jo
pusha
inc
mov
jmp
ret
or
pop
insl
sbb
sbb
jge
popf
je
mov
mov
jae
shl
out
inc
jg
mov
inc
int3
ljmp
movsl
inc
pushf
fldcw
sbb
push
arpl
fbld
aam
push
rcrb
pop
push
in
mov
icebp
frstor
cmpsl
mov
insb
adc
test
insl
push
dec
jp
push
daa
cwtl
xor
insl
push
jecxz
leave
scas
sbb
and
xor
mov
pop
jecxz
std
movsb
mov
xchg
or
in
fstps
jg
pop
stos
scas
int
mov
icebp
mov
mov
add
pop
inc
sbb
sbb
mov
cmp
xor
sbb
pop
jno
clc
rclb
std
je
sub
decl
rorl
jecxz
int
out
cwtl
push
cwtl
jmp
or
jmp
mov
and
push
xlat
dec
push
notl
jecxz
leave
adc
test
out
mov
pushf
cmp
adc
adc
mov
jae
mov
icebp
inc
mov
aas
lods
fsubs
aad
loopne
xchg
mov
orb
popa
sbb
push
and
pop
sti
orb
cltd
xchg
push
adc
mull
cltd
push
outsl
das
add
sub
cmpsb
js
out
pop
call
inc
push
pop
sbb
mov
mov
xor
jo
pop
cwtl
inc
test
pop
call
inc
jl
test
xor
mov
cld
xor
bound
dec
pop
jne
mov
jae
fcoml
lods
inc
aad
jg
mov
arpl
fildll
xchg
add
mov
pusha
dec
out
and
outsl
cmp
lods
fisubrs
ja
test
or
mov
sbb
cmp
mov
mov
ja
leave
scas
xchg
pop
mov
iret
sahf
mov
pop
xchg
ljmp
faddl
inc
repz
xchg
into
leave
in
dec
adc
inc
outsb
loop
dec
sarb
out
jo
repz
xchg
cld
movsl
and
push
cmpsl
sbb
lcall
iret
or
not
cmp
sub
fldl
movsb
dec
push
push
xor
adc
jb
cs
movsb
adcb
loopne
flds
or
sub
dec
lcall
loop
cmc
fnstenv
daa
add
jb
aad
inc
out
xchg
pop
divl
or
ror
lock
daa
scas
or
sti
lfs
cmp
jp
lret
mov
daa
aad
pop
cmp
loop
mov
es
pop
shl
push
je
jmp
sarb
ret
test
dec
cmp
fildll
xchg
mov
cmp
ljmp
ljmp
ret
sub
lds
push
shl
clc
pop
rol
in
or
sbb
and
fs
and
ret
pushf
fiadds
sub
call
pop
sub
mov
pop
maxps
aaa
mov
icebp
add
sub
cltd
and
aad
pop
gs
pop
das
adc
fsubrl
lds
pop
pop
push
push
jl
mov
sub
inc
loope
mov
incl
in
adcb
leave
testb
jle
cmp
ja
sbb
wbinvd
sub
fcomps
add
adc
hlt
fcompl
inc
test
lea
sbb
out
into
add
in
aas
dec
scas
push
pop
sbb
cld
adc
cmpb
sub
sub
mov
xchg
je
aam
mov
add
aaa
fstl
out
xor
pop
scas
or
out
aad
cmpsl
jo
pushf
mov
dec
loop
roll
cmp
je
jp
and
std
insb
jle
push
cltd
xchg
pop
push
lcall
fnstsw
mov
mov
out
mov
mov
inc
outsl
mov
lods
out
mov
add
fcompl
mov
adc
cld
cmc
and
ds
pop
ret
test
in
xchg
xchg
rorl
cmp
jo
adc
push
mov
nop
nop
and
mov
loope
iret
mov
dec
cmp
int
mov
and
adc
fmull
repz
xor
movsl
dec
and
cmc
inc
and
lret
xchg
stc
jecxz
sbb
jno
adc
cs
fsubrs
xor
mov
jns
insb
leave
pop
mov
in
cmp
test
jns
leave
pusha
adc
call
or
mov
xor
xor
out
jbe
jmp
std
jne
and
cmpb
cltd
hlt
and
ret
adc
push
mov
fcmovbe
std
cmp
inc
lds
and
cmpsb
mov
sbb
in
pushf
out
xlat
and
inc
gs
into
popf
sub
int
or
stos
inc
xchg
scas
jb
sub
jl
inc
add
cli
ret
jbe
popf
sar
lcall
mov
rol
xchg
and
xor
movl
loopne
imul
adc
mov
sub
sbb
fistps
out
jae
xchg
sbb
in
clc
inc
pop
ss
lcall
adc
pop
jge
push
xor
loope
push
popa
mov
push
loope
fisubrs
dec
push
test
mov
pushf
shll
and
and
fcoms
in
cltd
lea
enter
addr16
lahf
mov
mov
sub
and
push
inc
inc
vpaddw
mov
daa
dec
test
out
and
rcrb
mov
data16
xchg
nop
or
inc
pop
subl
xchg
push
lods
shlb
in
sub
fiadds
test
out
popa
je
pop
cmpsl
dec
push
xchg
out
add
leave
push
cmp
ss
dec
imul
pop
xchg
pop
inc
popa
fbld
sbb
fldenv
aad
add
and
push
inc
pop
nop
lcall
push
cmp
scas
jns
das
in
ljmp
ja
sahf
arpl
mov
ret
cmp
cli
addr16
cmp
xchg
mov
adc
es
xor
jle
pop
pop
mov
js
arpl
jb
les
jge
cld
in
test
orl
jge
and
jns
call
andl
adc
mov
xchg
xchg
jle
sub
mov
jae
les
icebp
pop
popa
dec
in
adc
push
lods
or
push
mov
cwtl
daa
sbb
cmp
sbb
test
notb
lcall
sbb
cli
or
add
and
cmp
add
mov
mov
rorb
jo
mov
cmpsl
push
or
icebp
xchg
jecxz
add
xlat
sub
jp
out
xor
mov
mov
xor
inc
mov
mov
inc
cmpsl
pop
pop
mov
adc
adc
out
xor
pop
xchg
cmpsb
out
mov
cltd
xor
cmp
pushf
shrb
and
test
lea
addr16
push
mov
iret
pop
mov
jge
adc
hlt
inc
sbb
and
mov
out
dec
aas
stos
jecxz
imul
daa
mov
inc
in
inc
outsl
dec
and
adc
pop
inc
loope
mov
cmpl
and
mov
jmp
pop
enter
fidivrs
andl
jp
aaa
pushf
jne
cmp
push
popf
mov
lahf
mov
adc
inc
and
sbb
xchg
jmp
mov
outsb
mov
cmpsl
cmp
xorl
jo
imul
push
filds
xchg
stos
cmp
bound
mov
out
xor
dec
jne
pop
movsb
and
adc
hlt
insb
pop
mov
inc
sbb
stc
cli
enter
nop
fisubs
cld
push
fidivl
xor
lahf
dec
pop
popf
arpl
clc
stc
and
sub
jae
or
and
push
pop
scas
movsl
ret
mov
fwait
enter
popa
add
test
frstor
jo
add
loopne
lret
in
jbe
sbb
mov
cmp
push
aaa
fisubs
arpl
sub
loope
pop
aaa
sbb
dec
mov
push
cmp
idiv
lret
stos
pop
xor
or
dec
or
jns
clc
lahf
shrl
mov
or
xchg
pop
dec
mov
jg
mov
mov
sub
add
and
test
sub
ret
adc
pop
int3
sti
repz
repnz
cmp
mov
or
add
scas
les
popa
inc
or
movsb
push
cs
xchg
jns
sbb
xchg
pop
lahf
adc
dec
dec
shll
dec
mov
addb
push
xor
jns
into
mov
pop
xchg
mov
pop
test
xchg
insl
mov
pushf
lock
scas
add
lds
fs
popf
leave
nop
cwtl
mov
mov
ds
xchg
mov
mov
enter
jmp
ret
sahf
jns
xor
fwait
pop
fcomip
or
roll
pop
lods
sub
xchg
mov
in
ret
insb
lcall
aas
ss
ss
loope
daa
movsl
add
or
lret
jno
adc
sbb
xchg
outsl
mov
mov
cmpsb
dec
jne
lret
xchg
add
jp
aaa
arpl
sub
xor
int
inc
xor
push
and
fbstp
pusha
flds
in
sub
xor
es
pop
cmp
scas
in
out
ret
dec
jl
iret
jo
pusha
sti
fs
pushf
sbb
out
sub
sub
gs
cmp
push
push
jae
shll
lods
sarb
mov
jae
xor
push
pushl
xchg
dec
xchg
aas
xor
inc
mov
xchg
and
insl
in
jmp
imul
repz
mov
inc
mov
mov
fdivs
pop
cmp
or
adc
sbb
sub
push
addr16
out
pusha
sub
in
push
outsl
fwait
inc
popf
aam
fnsave
mov
cltd
cld
mov
jns
push
sub
mov
pop
in
je
push
shll
adc
dec
aad
adc
and
adc
push
sbb
jnp
ret
and
mov
add
xor
lcall
cwtl
inc
lret
into
mov
jno
or
imul
add
inc
rcrl
add
xor
or
aas
sahf
push
adc
adc
cmp
scas
xor
mov
mov
cmp
or
shufps
lock
popf
daa
dec
mov
adc
scas
movsl
js
loop
or
sti
or
lods
sub
mov
pop
cli
out
in
loope
push
das
cmpsb
lods
fisttps
inc
and
fmull
popa
push
adc
mov
and
adc
in
cli
push
sub
mov
xchg
push
cmp
sahf
xor
out
push
arpl
enter
xchg
pushf
lds
xchg
xlat
xor
push
add
mov
pushf
dec
cli
repnz
pop
mov
test
in
xchg
test
ret
sti
jae
mov
pusha
or
call
jne
pop
loope
shll
movsl
dec
and
or
jns
ret
stos
test
jmp
cld
pop
test
les
mov
test
out
sbb
jae
call
xchg
or
pop
dec
loope
inc
xchg
cmpsl
cmove
pusha
sahf
lds
and
cwtl
scas
push
daa
arpl
xor
pop
mov
inc
push
int3
ds
push
and
das
jge
addr16
sbb
and
ror
mov
mov
or
in
sti
inc
adc
push
into
inc
sbb
sub
dec
push
push
cmp
xor
idivb
out
je
jl
pusha
dec
std
ds
push
xchg
insl
add
pop
mov
mov
xchg
mov
mov
loopne
shrb
call
clc
fiaddl
mov
lods
sbb
dec
cltd
subb
ljmp
js
sub
les
in
mov
cmc
sbb
je
cmp
mov
lcall
mov
nop
xchg
push
adc
mov
cld
jecxz
mov
or
pop
ljmp
jl
rolb
cmp
shll
and
jb
sub
cmp
cmp
cmp
jecxz
daa
push
jb
cmp
jne
fsubrs
push
pop
inc
add
test
sub
mov
push
mov
ja
inc
cmp
sub
punpckhbw
fstpl
sbb
xlat
cmc
ficoms
std
or
xchg
mov
inc
add
xchg
cmp
mov
mov
sbb
mov
das
fstl
or
cltd
out
xlat
lcall
cli
push
jne
xchg
insl
mov
jnp
daa
pop
in
movsb
mov
jp
sub
xlat
jmp
jae
sbb
adcb
pop
test
mov
mov
xchg
or
mov
aas
inc
popa
cmp
cmp
std
hlt
fistps
mov
cmp
xchg
outsb
std
scas
inc
jl
cmp
or
push
outsb
mov
add
mov
int3
push
lcall
insb
inc
add
dec
addr16
sbb
ljmp
push
sbb
leave
gs
arpl
insb
int
ljmp
mov
mov
sub
pop
jnp
aad
xorl
xor
mov
lock
stos
push
xor
std
and
test
or
push
or
scas
and
or
cmpsb
lahf
mov
mov
pop
xchg
inc
outsb
pop
jmp
adc
fsubs
mov
xchg
js
lcall
stos
nop
in
push
mov
push
jmp
aaa
sbb
xchg
adc
ds
cmp
iret
mov
scas
test
or
pushf
cmp
add
enter
mov
mov
mov
out
fsubl
sub
push
dec
jge
sbb
add
sub
outsl
mov
mov
sahf
sbb
inc
pop
xchg
scas
jnp
ja
xchg
sub
pop
imul
push
mov
sbb
je
lock
das
inc
or
dec
gs
mov
enterw
pop
movsb
mov
gs
mov
and
or
mov
outsl
stc
push
push
sbb
jge
enter
add
in
pop
jecxz
pop
ljmp
outsb
out
jne
mov
fists
mov
pop
aaa
add
sbbl
dec
jns
jle
cltd
sub
int3
add
push
xor
leave
or
setl
repnz
cmp
add
jo
std
and
loop
xor
ja
sti
xchg
and
mov
mov
xchg
push
stos
push
mov
mov
orb
cmp
dec
cld
cld
shlb
mov
je
test
adc
sar
lahf
ficoml
ljmp
jns
in
push
cltd
ljmp
add
mov
movsb
int3
pmulhuw
movsl
cmp
rcll
int3
dec
cli
mov
loope
sbb
xor
pop
mov
jo
inc
sub
push
fcoml
icebp
pop
orb
or
pop
popa
jecxz
pop
push
in
fildll
subl
jbe
or
ljmp
xchg
dec
inc
push
cwtl
or
stos
xchg
into
cmpsl
adc
aad
add
xor
test
jg
dec
ljmp
ret
call
jmp
daa
arpl
add
xor
call
or
cmpsl
xor
imul
fildll
stos
cli
enter
shl
inc
xor
sbb
dec
adc
stos
pop
and
test
popa
data16
xchg
insb
dec
lds
mov
or
ret
bound
push
ret
outsb
sub
dec
xchg
pcmpeqb
loop
xchg
aad
cmp
sub
pop
push
and
push
adc
test
cmp
lahf
stos
jno
arpl
jns
push
mov
rorl
ret
cmc
aas
in
fs
stos
push
out
leave
and
jae
inc
and
mov
sbb
sbb
leave
das
jmp
outsb
in
mov
inc
ret
mov
push
adc
xor
insl
test
test
sub
sbb
jp
mov
inc
inc
inc
sub
push
loope
mov
cmc
xchg
or
mov
sbb
mov
dec
add
jo
pop
push
push
out
mov
push
hlt
jmp
xchg
fidivrs
aam
shr
out
dec
outsb
lret
xor
and
lock
es
scas
in
jne
in
in
cmp
sbb
in
mov
lea
ret
push
pop
repnz
shlb
insb
adc
xchg
ljmp
add
push
cmpsb
add
push
nop
lods
sub
xchg
push
adc
pop
or
xlat
xchg
pop
pop
scas
outsb
mov
orps
aaa
cmp
jle
in
in
add
jno
push
push
mov
mov
scas
shrb
repz
nop
dec
pop
adc
ret
fnsave
pop
jne
inc
mov
jns
xor
inc
ja
push
lretw
xor
push
shll
jle
cmpsl
adc
call
mov
jecxz,pt
imul
jge
xchg
fcompl
rcl
jo
int
fnsave
and
jb
ret
mov
pusha
test
imul
lods
loop
dec
addr16
adc
int3
repz
adc
adc
in
mov
xlat
orb
jmp
xchg
add
int3
xor
lcall
jns
popf
out
pop
subb
sub
xor
or
inc
pop
pop
aad
test
mov
js
sub
pop
shl
sarb
into
pop
pop
xchg
mov
in
lods
jne
stos
jo
adc
ja
push
jmp
in
test
in
lcall
pusha
fimull
mov
hlt
mov
and
add
adc
sbb
dec
rcll
sub
mov
daa
mov
unpckhps
outsl
ljmp
loop
xor
cld
sub
nop
jmp
pusha
push
or
lret
add
test
mov
lds
xlat
punpckhdq
inc
sub
mov
adcb
stos
dec
jecxz
lahf
pop
sub
push
xchg
divl
or
insb
icebp
mov
lret
int
insl
pop
pop
fsubrl
cli
repz
je
cli
cs
jno
dec
mov
pushf
pop
cmpsl
cmpsl
lahf
push
jnp
sbb
xchg
jno
inc
cld
js
sbb
mov
scas
mov
sub
xor
mov
and
fwait
pop
pop
mov
mov
dec
dec
add
xor
fwait
xchg
push
sbb
xor
fisttpll
xor
sbb
mov
arpl
xor
lea
inc
roll
test
into
ds
iret
mov
fdivrl
or
ret
stos
pop
stos
stc
cmc
cmp
adc
enter
fsubrs
pop
sub
jge
xor
add
fcoml
test
sub
dec
mov
adc
pop
ret
cltd
xchg
aam
fldcw
outsb
aad
sub
cmp
lods
and
popf
pop
sahf
mov
divl
and
test
testl
xchg
btl
xchg
fisubs
das
popf
jo
mov
cmp
je
xor
pop
ds
push
pop
dec
aad
outsb
imul
fsts
mov
and
mov
frstor
stc
jo
in
ret
imul
test
lahf
push
push
lcall
sbb
dec
fisubrs
or
cmpl
call
adc
ss
rolb
test
sub
not
movsl
or
push
mov
xchg
cmp
push
pop
or
pop
mov
xchg
hlt
dec
mov
xor
insb
xorl
push
xor
inc
cmp
sub
xlat
jmp
pop
push
fisubrs
sbb
add
outsl
rorb
or
leave
pop
jge
dec
cld
in
xchg
or
and
out
add
fistpll
add
mov
stc
dec
stos
dec
les
in
jecxz
fdivrl
movsl
mov
and
push
subb
lahf
mov
adc
lret
cmpsb
daa
pop
les
imul
sub
fadds
push
sahf
adc
in
pop
roll
stos
add
daa
dec
jns
jno
adc
fadd
cmc
mov
inc
sub
cld
push
lcall
pop
leave
dec
push
stc
pop
adc
add
movsb
dec
lods
daa
cmp
push
mov
mov
fadd
fdiv
xor
add
fsubs
pop
xchg
adc
sahf
adc
sub
imul
mov
adc
jg
mov
fldt
sub
adc
das
pop
sbb
xorl
add
push
andb
xchg
lret
xor
bound
push
mov
push
rcrl
into
lods
out
arpl
adc
mov
mov
cli
dec
out
xor
imul
cmp
subl
lea
sbb
popa
cwtl
into
jno
insl
adc
mov
fsubl
pop
pop
xchg
mov
mov
arpl
repz
roll
shll
lea
cmp
jge
jmp
test
subl
iret
xchg
or
mov
fistl
cmpsl
pushf
adc
out
add
pop
mov
push
pop
xor
adc
ret
clc
push
cmp
lret
jnp
pop
and
cld
vmaxsd
mov
cld
repz
xchg
push
pop
fwait
enter
pop
scas
out
pslld
addl
mov
mov
adc
pop
ja
cmp
pop
sbb
add
push
sti
shl
pop
mov
call
add
push
adc
mov
adc
jae
mov
jle
add
adc
xchg
shlb
iret
fisubrs
mov
xchg
popf
mov
dec
inc
mov
dec
lea
jecxz
sub
cmp
jb
and
mov
cmpsl
or
fsubl
aaa
dec
or
call
test
das
mov
mov
ljmpw
push
jo
adcl
jno
insb
push
scas
inc
pop
push
in
bsr
mov
sarb
iret
fldt
testl
imulb
les
imul
fucomip
nop
out
lds
xlat
jecxz
mov
test
stos
lods
icebp
push
mov
rcrl
shrb
adc
in
push
push
adc
mov
ds
pop
imul
shrb
push
out
aad
mov
filds
xchg
adc
cmovl
xchg
push
cltd
popf
movsb
imul
je
lods
ja
pop
aam
adc
inc
mov
pop
div
ficoml
roll
jnp
mov
fadds
pop
shl
pop
movsl
add
aam
or
daa
add
cmp
ds
push
mov
ret
decb
lcall
cmp
insl
loope
cmp
sarl
sub
or
in
mov
rcll
call
fldt
jae,pn
aad
mov
push
imul
movsl
in
aas
lods
pop
jae
mov
and
mov
test
les
xor
movsl
hlt
sub
pop
pop
cmpsl
les
data16
and
lods
ret
int
insl
mov
icebp
xor
shlb
inc
pop
shlb
or
mov
jge
jp
fdiv
xchg
sbb
pop
rclb
lcall
out
sub
cmp
jle
pop
bound
or
mov
add
clc
dec
adc
jge
or
or
dec
mov
cmp
cmp
sbb
or
stos
cmpsb
and
mov
jmp
sbb
ss
stos
inc
cmpsl
jge
cmp
inc
sbb
rcll
data16
ja
repz
xor
outsl
aas
mov
inc
inc
imul
dec
push
push
in
jb
lds
outsb
mov
std
sub
lods
jl
js
fwait
mov
inc
movsb
cs
adcl
repz
js
and
lods
or
mov
loop
add
mov
or
stos
sbb
adc
outsl
test
jbe
sbb
pop
xlat
orb
pop
scas
gs
into
sahf
shll
fdivrl
in
ds
cld
repz
xchg
in
mov
cmp
adc
dec
dec
fcom
std
add
sub
lcall
lods
in
xchg
and
cwtl
jo
mov
cmc
xor
xchg
xchg
orl
push
or
sub
mov
dec
jecxz
and
xor
mov
cmc
push
dec
sub
pushf
cmp
test
aam
lcall
add
cmp
out
mov
inc
movsb
inc
cmp
lock
sbb
loope
popa
mov
leave
bound
scas
cld
pop
sbb
dec
movsb
fisubrl
test
pop
popa
call
add
dec
cli
cltd
xchg
hlt
cli
cmp
sub
cmp
int
xchg
lcall
mov
cmpb
jae
and
xor
xor
xchg
outsb
flds
xchg
pop
je
in
jecxz
inc
in
jno
sbb
lcall
rcrl
cmp
mov
dec
jne
jge
int3
pop
sbb
mov
in
mov
insb
push
outsb
cmpl
adc
enter
xor
mov
pop
cwtl
out
push
daa
dec
pusha
pop
mov
push
cmp
nop
mov
insb
fld
daa
ret
jle
pusha
inc
mov
mov
mov
negl
xor
fists
dec
push
jno
sub
cmpsb
lcallw
lcall
xor
loopne
pop
jnp
je
and
sbb
gs
mov
sub
je
fimull
aas
mov
rcrb
idivb
js
cmpl
lds
cmp
dec
test
dec
js
fisubl
cmp
test
lods
xchg
cs
xchg
cs
add
movsb
mov
addl
adc
push
hlt
jg
dec
shrl
mov
shrb
js
add
daa
cmpb
or
fs
adc
inc
stc
rcll
cltd
scas
aad
js
cmpsb
push
xchg
mov
mov
popf
add
pop
cmp
inc
jl
cmp
rcl
inc
movb
stc
shrl
les
adc
xor
addr16
into
xchg
and
dec
lret
xchg
mov
cmp
push
push
sub
and
xor
js
mov
dec
into
rclb
push
xchg
bound
cmp
in
rcrl
sbb
mov
push
mov
sbb
fildll
in
sub
es
inc
and
xchg
dec
inc
sub
fiaddl
mov
cmp
push
fadds
repz
push
and
sub
repnz
dec
nop
mov
lock
cs
daa
jne
nop
cltd
lret
adcb
into
orb
dec
sub
xchg
mov
mov
ret
adc
sub
icebp
lret
push
pop
clc
cmp
lahf
pushf
push
mov
ds
shlb
mov
call
or
dec
lods
push
stc
data16
sbb
jbe
pop
sbb
addb
mov
push
ds
outsb
push
inc
mov
stos
ss
pusha
les
push
mov
or
aas
fnsave
adc
mov
pop
xor
cmp
pusha
cli
or
cmpsb
shlb
cmp
pop
aaa
xlat
push
and
ret
cmp
push
inc
cmp
inc
adc
push
xor
xor
cmp
in
mov
xchg
or
sbb
mov
lds
sub
xchg
sahf
xchg
or
cli
xchg
xchg
bnd
pop
scas
je
cmp
cmpsb
stos
mov
dec
insl
enter
lock
cmp
mov
out
fbstp
test
push
test
pop
inc
xor
cmp
rolb
sub
jbe
jbe
adc
inc
das
mov
jb
add
repnz
ja
dec
fldenv
add
inc
jmp
ljmp
xor
lods
bound
cs
and
cmpb
movsb
imul
mov
jb
push
jl
inc
inc
int
mov
cs
pop
push
push
insb
and
movb
pop
sarb
or
jmp
jne
mov
lea
dec
test
inc
bswap
xchg
push
jae
sbb
and
jmp
cltd
cmpsl
mov
push
xchg
jne
dec
mov
mov
pop
repnz
push
xor
add
repz
jge
push
pop
jl
in
icebp
push
popf
sti
test
outsl
mov
cld
ds
dec
in
movsl
jg
nop
jle
push
xor
in
out
cmp
dec
inc
ret
idivb
stos
sbb
stos
mov
fwait
mov
mov
gs
mov
dec
test
mov
popa
insl
rclb
add
int3
xchg
xchg
pop
inc
movsl
fs
jg
int
in
inc
jne
test
roll
fs
adc
jle
sub
sahf
pop
push
out
enter
dec
mov
and
jne
or
or
sub
sub
icebp
ja
cmpl
imul
nop
xchg
adc
pop
in
popa
fsubrp
pop
push
and
mov
icebp
push
jmp
sahf
sub
add
and
lods
jg
add
push
dec
fs
in
hlt
mov
push
push
mov
ja
pushf
mov
sbb
in
mov
insb
pop
xchg
dec
mov
add
in
push
cltd
dec
xor
adc
sbb
cmc
xor
xchg
cmpsl
xor
lds
dec
incl
push
and
xor
push
xor
and
xor
stos
lods
add
mov
pop
jne
cwtl
js
out
inc
cwtl
cmp
lock
repnz
mov
mov
jb
insl
enter
adc
or
adc
lods
loopne
pop
sub
push
test
mov
cwtl
outsl
flds
push
rolb
iret
sbb
push
sbb
insb
mov
pop
cltd
push
outsl
fdivrl
aam
mov
add
out
shrb
call
mov
mov
insb
pop
pushf
lcall
xor
in
jp
sbb
in
iret
or
dec
push
mov
not
mov
loopne
ljmp
mov
idivb
lcall
or
push
sarb
es
sub
movsb
adc
xchg
imul
loop
add
ret
in
or
jge
pmullw
inc
push
je
push
aaa
in
add
out
popa
mov
clc
shrb
dec
les
xchg
iret
test
ficoms
scas
push
leave
iret
or
ss
lcall
or
jecxz
cwtl
sti
push
add
fiaddl
and
mov
cwtl
jecxz
or
int
cwtl
push
ljmp
popa
fstl
sar
repz
mov
lods
jp
arpl
test
repz
jae
jmp
add
xchg
push
sbb
icebp
outsb
mov
pusha
orl
sbb
pop
xor
jge
dec
xor
cmp
in
icebp
pusha
ss
test
cmp
cmp
pop
scas
dec
prefetch
push
test
cmp
mov
loopne
mov
ljmp
les
enter
mov
ror
insb
dec
icebp
or
xchg
sbb
mov
xlat
mov
xchg
cmp
sbb
push
subb
sub
fimuls
pusha
lds
add
xorl
lds
xor
dec
fdivs
into
adc
repnz
cs
push
sub
jecxz
xlat
cmp
lds
lret
or
lcall
lds
adc
cmp
inc
outsl
xchg
rorb
mov
xchg
xchg
add
pop
es
or
push
aas
loopne
stc
out
sub
notb
cmc
insl
icebp
and
js
push
movsl
or
popf
adc
das
leave
inc
rorl
cwtl
sbb
jmp
insl
repz
jno
scas
xor
hlt
shlb
in
fwait
jmp
adc
mov
cmp
mov
sahf
xchg
testl
mov
adc
jg
test
jg
push
fmulp
mov
sbb
rorb
shl
mov
dec
or
jle
repnz
push
dec
mov
or
add
test
fdivrl
stos
pop
fwait
mov
xor
mov
cltd
insb
xchg
sub
ficompl
jnp
jp
movsb
mov
call
pop
push
push
xor
cmpsb
push
shufps
mov
notl
sbb
add
xor
mov
inc
mov
push
pop
shr
hlt
fdiv
xorl
or
lcall
in
add
xchg
push
add
mov
inc
lret
jnp
push
frstor
push
js
adc
outsl
rolb
imul
orb
inc
sbb
xchg
xchg
leave
cltd
cmpsl
lahf
sbb
and
and
xchg
leave
or
mov
cltd
rorb
rorl
js
sbb
xchg
or
lods
ljmp
mov
test
mov
sbb
cmp
inc
rcr
not
lds
add
mov
inc
inc
sub
inc
and
sub
xchg
pushf
and
mov
in
out
pop
or
pushf
mov
and
shr
stc
loopne
outsl
hlt
das
es
cli
xchg
jg
int3
and
into
jnp
std
repz
fldenv
inc
mov
stos
mov
pop
push
loope
mov
sbb
ret
mov
jno
subl
jge
pop
pop
sbb
push
aas
out
mov
test
loope
jle
lret
sar
sbb
jne
cmpsb
mov
cmp
pop
ret
rcrb
mov
hlt
js
aad
pushf
ja
fbstp
repz
out
popa
loop
sbb
lret
xchg
and
mov
or
pop
pop
pop
push
fidivrs
scas
mov
out
jl
and
test
ja
in
pop
push
adc
daa
pop
jle
dec
dec
inc
ja
cmc
pop
xchg
mov
sub
outsl
test
add
lret
or
lock
add
mov
lods
adc
sub
xor
jb
pop
mov
in
fistl
sub
scas
lock
mov
hlt
and
mov
sub
es
mov
mov
bound
int
into
mov
js
add
mov
push
std
lods
fdivrp
pop
cltd
outsb
mov
cmp
pop
mov
adc
or
pop
push
add
cmp
repz
mov
mov
and
xchg
bound
repz
mov
sahf
loope
mov
inc
xchg
mov
das
cmp
push
dec
xor
js
inc
pop
cmp
cltd
pop
cmpsb
subl
cmc
shll
test
test
enter
ds
sub
lret
std
jg
mov
jmp
cltd
cmp
push
xchg
rcrb
mov
pop
mov
sarl
pushf
sub
xor
pop
lock
mov
lods
jmp
jne
pop
dec
dec
jbe
cs
in
adc
hlt
mov
ja
jecxz
pop
mov
dec
cmp
call
loopne
popa
jg
std
push
jp
xchg
xchg
push
cmpsl
outsb
or
incb
jae
push
int3
push
cld
negl
xlat
jg
add
jge
hlt
js
les
fsubrp
xor
cmp
jmp
cmp
jmp
sub
pop
das
cli
dec
jnp
mov
mov
push
sbb
call
jle
gs
sub
jae
lds
negb
mov
dec
rcrl
rcr
mov
add
imul
test
imul
in
js
cwtl
ljmp
jecxz
sti
cmp
xor
aaa
adc
jne
xor
pop
sbb
cmp
shr
sahf
nop
aad
add
and
mov
and
inc
ror
aam
and
ficoms
sti
repz
mov
cmp
cli
in
clc
stos
test
ja
mov
and
and
jne
lods
inc
stc
scas
test
dec
cmpsl
and
pop
lret
jns
xorb
outsb
or
sub
pop
mov
inc
int
lock
add
std
jbe
lahf
ret
push
mov
mov
push
clc
or
je
hlt
and
pop
insl
pop
loop
jo
ljmp
dec
fisttps
push
mov
add
mov
push
cmp
fiaddl
cmc
sti
dec
jl
mov
jmp
stos
mov
sbb
pop
inc
push
xlat
adc
jbe
inc
outsb
mov
shll
push
dec
cli
js
push
adc
jmp
loope
cmp
out
call
xchg
testl
in
mov
inc
std
outsb
ficomps
dec
pop
sbb
sub
sbb
mov
xchg
pop
fnsetpm(287
movsl
and
jno
push
xor
sub
xchg
fcomps
stos
jecxz
ret
or
nop
add
fxch
stc
test
aam
inc
scas
ljmp
add
sti
sbb
push
rcr
lock
clc
out
in
dec
hlt
or
aam
sub
mov
shll
xor
lahf
adc
inc
dec
pop
sub
xorb
jbe
or
daa
cmpb
mov
push
add
cs
aaa
out
mov
and
and
mov
or
jmp
ja
sbb
lea
insl
cmp
xor
fsubr
enter
sub
jns
sahf
lcall
ds
sub
cmp
mov
out
inc
and
icebp
add
adc
ds
int3
mov
sbb
cs
lahf
push
push
lcall
stos
mov
jno
cmp
or
leave
sbb
pop
movsl
negl
mov
inc
xchg
movsl
push
inc
std
cmp
stos
pop
pop
sbb
mov
dec
or
leave
xchg
mov
cmp
xchg
jbe
addr16
outsb
popf
adc
shrb
jne
jmp
hlt
xor
movsb
xor
and
shll
fwait
dec
iret
icebp
stc
pop
aas
adc
mov
movsl
dec
outsb
or
jb
mov
daa
iret
or
or
fisubs
dec
insl
mov
repnz
aaa
out
lea
sbb
mov
dec
sub
lock
loopne
sarb
mov
out
xorl
nop
aaa
adc
and
mov
lcall
shr
xchg
push
test
test
or
mov
jp
repnz
mov
loop
adc
pop
pop
gs
popa
xchg
push
addl
sub
and
sbb
cmp
fdivrs
push
adc
sbb
pop
addl
mov
jl
lock
getsec
data16
iret
add
movsl
fsts
jo
push
cmc
inc
scas
repnz
mov
lds
movsb
xor
test
inc
pop
sub
jb
sub
cmpb
mov
jg
sbb
mov
fldenv
in
jecxz
fs
daa
mov
clc
pop
cmpb
push
mov
jecxz
movsb
add
push
cmpsl
xchg
mov
mov
les
pop
andb
or
sub
inc
faddl
sbb
mov
pop
cmp
mull
cmpb
bound
loopne
mov
stc
mov
pop
lret
enter
nop
jp
stc
xor
pop
ljmp
mov
imul
mov
imulb
popa
fcom
aas
outsb
mov
sub
and
daa
xor
mov
call
lahf
jb
pop
inc
out
jnp
out
sub
xlat
fdivs
scas
hlt
pop
xor
adc
or
mov
sub
adc
mov
mov
inc
aad
rorb
mov
loopne
rcll
int
jo
sbbl
and
js
lret
sbb
jne
xchg
fistpl
add
lret
arpl
xchg
xchg
push
push
jecxz
cli
idiv
lret
outsl
and
or
xchg
stos
loope
and
pop
pop
or
mov
lods
sub
inc
aam
ret
lret
es
adc
or
jg
push
cltd
enter
jne
aam
scas
ror
enter
mov
pop
cmpsl
movsl
imul
fistpl
and
dec
dec
inc
jl
or
xor
and
push
jmp
push
mov
mov
lock
or
arpl
loope
cmpsb
insl
jae
sahf
sub
adc
xchg
add
cmpsl
sbb
fwait
jo
stos
sbb
jmp
xor
jo
sbb
xchg
inc
out
pushf
inc
jo
dec
fwait
lahf
adc
xchg
test
test
clc
insl
cmp
mov
fdivrs
mov
cmp
das
fistl
mov
or
shrb
out
inc
adc
dec
sub
addr16
jb
push
adc
test
push
jg
dec
cmpsl
dec
mov
cld
and
push
cmp
pusha
sub
clc
fiaddl
out
int3
jns
ret
dec
inc
pop
inc
pop
jne
mov
pop
test
mov
jnp
imul
test
sbb
rcrl
jp
pop
test
pushf
xchg
cmpsb
movsb
cmc
push
lea
cmc
lret
mov
pop
popf
cmp
jbe
inc
xor
fucomip
xchg
mov
mov
mov
inc
cmp
dec
xchg
popa
xchg
lahf
jno
call
inc
das
xor
jp
leave
std
inc
cli
cmpsb
fsubrp
int
mov
loop
filds
xchg
data16
push
stc
icebp
cmp
mov
aaa
into
jge
jnp
push
loope
test
push
lahf
dec
inc
aad
dec
cmp
add
rcll
icebp
dec
jnp
push
pop
sbb
and
js
jle
cs
shrb
add
pushf
dec
dec
movsl
aas
idivl
xchg
push
es
call
mov
mov
lahf
xor
push
insb
popf
mov
xchg
cmp
cld
out
fcmovbe
aam
test
mov
lds
mov
fwait
adc
sbbl
into
test
movsl
pop
jge
dec
jb
test
mov
outsb
dec
adc
jge
mov
push
xlat
sub
jae
jo
popa
pop
mov
loope
jne
mov
mov
sub
addr16
ret
mov
jae
leave
jne
sub
cltd
loopne
fnstcw
mov
imul
push
adc
sbb
mov
add
pop
inc
push
dec
les
ffreep
sub
test
mov
cli
pop
sbb
lock
and
insl
fsubl
dec
imul
imul
dec
imul
scas
icebp
and
into
and
add
pop
xchg
jp
mov
out
movsl
pop
sbb
push
test
xor
cmp
das
dec
sahf
push
je
push
jge
sbbb
mov
aad
ret
cld
adc
int3
mov
jo
movb
lods
loopne
test
out
xchg
jecxz
bound
aaa
mov
push
adc
inc
stos
test
mov
div
mov
sti
inc
lcall
mov
and
mov
cmpsl
sub
dec
stc
and
lret
fcompp
in
cmp
dec
fbld
inc
jnp
push
jns
ret
mov
fists
xor
jmp
ret
mov
lock
cli
mov
leave
xchg
ds
addr16
cmp
sahf
jns
pop
jecxz
cmpsb
mov
mov
push
mov
movsl
add
sarb
out
add
push
add
push
test
xchg
mov
bound
dec
icebp
aaa
ds
mov
sub
dec
fbld
adc
xchg
push
push
es
sbb
or
fldenv
sti
mul
out
jae
cmpsl
pop
repz
mov
mov
addl
pop
dec
repnz
inc
mov
shll
lods
loop,pn
xor
cmc
push
push
sbbl
cmpps
mov
cmp
or
lahf
lcall
ret
add
in
inc
bound
pop
push
cltd
pusha
pop
pop
stos
inc
je
push
mov
add
pop
cmp
pop
dec
int3
fisttps
mov
insb
int3
adc
pop
mov
push
jno
mov
pop
mov
in
test
fwait
sub
lods
repz
inc
mov
icebp
or
sarl
sbb
adc
loopne
aam
das
xor
cmp
push
xor
mov
inc
sub
fdivrs
sub
jecxz
push
ror
idivl
lds
or
sbb
outsl
xchg
inc
and
xchg
sub
and
adc
loop
add
sbb
sub
pop
and
adc
hlt
vandps
pop
scas
push
xor
shl
es
pop
test
inc
cmp
sub
ret
push
dec
cli
fwait
icebp
cld
icebp
push
and
jg
out
lahf
add
push
sub
cli
insl
js
mov
movsl
and
push
sbb
pop
loope
lcall
dec
push
mov
push
jmp
repz
stc
ds
mov
inc
adc
or
nop
and
mov
ljmp
fistl
xchg
push
pop
push
push
test
xchg
cld
pop
pushf
es
inc
xlat
add
in
jge
mov
popa
cmpsl
fstpl
jge
xchg
push
out
dec
xor
mov
cs
mov
clc
sbb
negl
xchg
jle
adc
lods
or
pop
xchg
filds
stos
add
mov
push
sti
jb
arpl
fnstsw
inc
jbe
mov
cmp
scas
mov
movsb
je
and
insb
jmp
es
imul
scas
pop
mov
xchg
and
adc
mov
pop
push
sarb
jle
scas
push
mov
pusha
jns
pop
fidivs
test
fstpl
fists
cmp
fdivrl
sbb
stc
push
stc
mov
and
inc
push
sbb
jge
jecxz
lock
stc
stos
jno
ret
pop
adc
sahf
or
jo
jge
lea
popf
add
and
loop
push
rep
push
add
insb
mov
and
add
adc
das
orl
les
pop
dec
stc
mov
fwait
inc
push
adc
push
or
pop
push
icebp
jmp
lock
jmp
and
clc
test
enter
pop
dec
xchg
outsl
inc
cmp
mov
stos
cmc
fists
push
vmovlps
adc
add
enter
cmp
jnp
es
add
addl
pop
lock
out
sub
jg
jne
fstps
and
sub
cmp
lods
mov
nop
imul
add
icebp
fimuls
sub
shll
das
cmpsl
cs
mov
pop
in
scas
call
fimuls
mov
test
inc
ret
xchg
test
or
jno
mov
xchg
pop
fisubl
inc
es
pop
lea
addr16
push
cld
daa
and
push
xchg
or
ret
dec
mov
push
sbb
pop
and
jae
lods
mov
lcall
mov
jae
sbbb
add
mov
jae
mov
cmp
aad
ljmp
push
sub
jmp
mov
rorb
es
sahf
pushf
lahf
sub
and
add
sub
sub
push
lock
das
xchg
mov
jle
xchg
and
shll
out
sub
dec
sarl
pop
scas
pop
in
ja
pop
mov
add
insl
pop
sub
pop
addb
lock
mov
insl
and
and
lret
mov
es
dec
and
aaa
movsl
aaa
scas
stos
sub
cs
jnp
push
dec
gs
fimull
daa
pop
xchg
icebp
pusha
cmp
lahf
mov
xchg
jbe
sub
push
cltd
adc
mov
sbb
sub
adc
das
cmp
iret
out
call
and
nop
adc
testb
fwait
sbb
cld
js
mov
cmp
xchg
clc
repnz
inc
test
push
fcomps
les
repz
mov
jne
jae
cmpsl
jge
push
int
gs
jmp
mov
and
jmp
sbb
adc
ds
lcall
adc
mov
or
push
cmp
gs
das
jp
mov
mov
mov
repnz
mov
mov
lcall
and
adc
adc
xor
rclb
lcall
movsl
adc
and
mov
and
push
adc
dec
jns
shl
aaa
mov
or
mov
repnz
iret
lds
lahf
pop
enter
nop
mov
pop
scas
jo
mov
push
cmp
add
out
stos
cld
in
sbb
paddw
sbb
mov
pop
add
add
push
lret
dec
call
inc
mov
ret
enter
les
imulb
inc
iret
jbe
and
jne
mov
les
add
xchg
sbb
mov
addr16
repz
jp
or
scas
lds
leave
fisttpll
jae
aas
add
mov
inc
fsubrp
mov
push
mov
rorb
cmp
addr16
jle
xchg
fidivl
mov
nop
loope
aas
sub
shlb
popa
mov
loop
xchg
add
popa
lret
mov
mov
addr16
and
outsb
push
fidivs
testb
push
or
and
sub
dec
sub
mov
jmp
mov
push
repz
or
mov
or
shrl
jl
lock
jmp
imul
test
pushf
and
out
rolb
repnz
xchg
cmp
add
xchg
gs
dec
mov
dec
mov
enter
ja
ljmp
adc
stos
mov
pop
or
cmpsl
sub
dec
les
fadds
push
stos
push
cmp
jbe
lods
xor
pushf
or
sub
je
mov
cli
loop
mov
jnp
shll
fwait
pop
nop
aad
bound
cmp
mov
xor
xchg
and
bound
pop
pop
mov
xor
adc
add
xchg
sub
jae
sub
mov
pop
test
mov
into
dec
mov
mov
jg
or
imul
out
mov
repz
cmpsl
cld
mov
daa
es
mov
cwtl
stc
inc
dec
xor
sbb
andl
insb
xchg
and
js
dec
inc
jb
sbb
lods
push
and
or
mov
mov
lock
adc
cmp
scas
out
lds
pop
mov
pop
fadds
xor
mov
cwtl
mov
xchg
cmp
mov
cmp
inc
lock
jb
aaa
adc
aaa
int
cmpsb
dec
movsb
push
fs
stos
push
sbb
das
les
inc
mov
lcall
push
lret
adc
xor
daa
pop
jae
pop
jae
loopne
test
dec
and
mov
test
icebp
stos
mov
aaa
je
aad
iret
mov
lea
and
add
mov
add
xchg
dec
dec
mov
shr
and
shll
adc
loop
movl
repz
cli
and
xor
cld
mov
out
adc
fwait
add
mov
mov
xor
sub
rol
cmpsb
cmp
imul
push
jl
mov
or
pop
mov
xchg
repnz
clc
rcll
aaa
xchg
dec
adc
repz
fistl
add
adc
pop
push
out
xchg
imul
xlat
mov
adc
mov
es
stos
push
imul
adc
xchg
xchg
adc
pop
sub
ja
sbb
out
in
mov
dec
dec
jle
adc
xchg
inc
loope
add
clc
xchg
shl
popf
cmpsb
dec
mov
push
sub
es
js
daa
cwtl
dec
add
mov
inc
cltd
sub
mov
inc
shlb
or
lods
mov
subl
pushf
mov
scas
movsb
hlt
movsl
insb
outsb
dec
movsb
and
test
cltd
test
outsb
mov
lods
shl
shl
or
xor
dec
mov
lock
jge
sub
adcb
test
mov
pop
es
mov
les
aas
roll
xor
mov
xorl
xorb
dec
mov
pop
mov
sbb
inc
inc
push
mov
das
imul
pop
jne
test
or
cmp
add
add
stc
jb
jle
pusha
push
or
orl
jle
mov
int3
fisttps
sub
add
pusha
dec
add
sub
inc
push
sub
ljmp
pusha
cmp
adc
or
sti
cmp
xor
xor
mov
mov
pop
js
cmp
imul
jbe
jle
aad
js
mov
cld
push
mov
mov
pusha
pop
repz
stos
xchg
movzbl
inc
rorl
mov
in
stos
push
icebp
push
sub
outsl
fistpl
xor
xchg
fwait
push
pushf
int3
mov
push
into
pop
test
shl
cwtl
mov
dec
adc
fcoms
xchg
pxor
sub
leave
jg
add
ja
pop
jl
jg
dec
mov
adc
das
fst
fistpll
pop
push
xorl
jb
imul
std
rcll
add
mov
sub
into
mov
dec
dec
adc
jns
fistpll
lods
xchg
adcl
sbb
xchg
repnz
mov
dec
in
insl
es
movsb
cmp
pop
xchg
sbb
xlat
adc
test
jns
fisubs
mov
and
daa
dec
sub
in
sahf
lcall
dec
xchg
xchg
icebp
les
scas
cmp
jp
mov
iret
sub
mov
sub
int3
fld
adc
pop
xchg
and
inc
cltd
push
xchg
out
lds
xor
dec
push
loope
je
dec
dec
nop
mov
jp
mov
vphsubdq
mov
mov
mov
cmp
fmulp
les
in
cs
xchg
in
push
cs
movsl
loope
scas
xchg
jp
sub
lock
out
xchg
push
ljmp
push
ja
outsb
mov
fisubs
sub
lea
pop
dec
sbb
lret
adc
je
out
sbb
add
lcall
or
shlb
in
jne
das
sbb
sahf
aas
add
jns
cmp
sub
push
fidivl
nop
lcall
iret
adc
pop
call
push
jne
mull
nop
inc
xchg
mov
jno
cmp
sbb
das
js
mov
lods
xchg
xor
inc
inc
sarl
mov
pop
test
stos
enter
daa
ret
add
pop
xchg
fldt
std
insb
pop
repnz
outsl
adc
les
lods
popf
cmp
std
rorl
dec
inc
sub
xchg
dec
mov
enter
dec
xchg
mov
arpl
jp
mov
sbb
push
hlt
es
leave
stc
adc
bound
push
movl
addr16
mov
mov
scas
and
cli
mov
mov
pushf
js
les
addb
pop
jnp
pop
cmp
jp
inc
xor
cltd
inc
test
push
add
pop
arpl
sub
fnsetpm(287
sbb
push
loop
test
aaa
push
das
rorb
mov
hlt
xor
cwtl
mov
cltd
add
mov
sarl
dec
add
jmp
mov
push
push
shrb
xor
and
push
inc
xor
xor
mov
stc
cmp
sbb
out
mov
loop
fs
pop
das
add
xor
sub
xchg
mov
ss
adc
cmpl
add
mov
divb
inc
cmp
ds
arpl
push
leave
xor
test
mov
repnz
mov
adc
push
cmp
in
clc
inc
mov
repz
push
orl
dec
aaa
fs
jl
fldt
mov
dec
decl
jne
or
into
dec
fdivrl
push
and
clc
popf
add
cmc
adc
fnstenv
popf
aad
pop
add
into
in
test
lods
lahf
mov
ljmp
and
push
fwait
cmp
lds
repnz
sti
add
jp
sbb
arpl
addr16
mov
jecxz
prefetch
mov
or
pop
pop
xchg
sub
faddl
push
inc
ret
mov
inc
imul
repz
ljmp
inc
imul
add
fildl
aam
ja
mov
or
ljmp
es
hlt
sahf
sbb
push
or
or
imul
jle
hlt
jle
sub
pop
dec
push
outsb
test
adc
cmp
lods
gs
jecxz
cmpsl
cli
arpl
dec
xor
adc
loope
adc
jnp
xor
imul
or
add
mov
inc
movb
fldl
out
inc
mov
jns
jne
mov
jns
out
cmp
mov
daa
into
or
xchg
insl
lcall
adc
je
sahf
cmp
cmp
pop
dec
ja
jle
pusha
xor
lret
mov
sub
ss
bsf
loop
icebp
mov
inc
or
into
push
pop
jg
out
mov
fucomi
repnz
mov
popf
mov
cmp
repnz
push
test
and
cmpsb
enter
rcrl
xchg
and
jle
cltd
cmpsl
fs
jp
sub
sub
mov
adc
sbb
fmull
lret
dec
inc
pop
inc
les
sub
insb
das
mov
pextrw
popa
cmpsb
jne
or
jne
sub
clc
andl
jne
push
add
dec
orb
and
sub
mov
ds
fistps
jno
rorb
les
xor
add
inc
jle
aaa
or
jp
sub
lret
jnp
sbb
sub
fimull
mov
xchg
mov
nop
push
or
lods
jge
out
lretw
jne
hlt
or
pop
imul
cltd
int3
inc
mov
pop
test
fidivrs
adc
fdivr
cltd
or
out
daa
sbb
mov
aad
add
adcl
fcoml
push
mov
or
mov
outsl
xorb
aaa
lods
cmp
add
and
xchg
enter
xchg
nop
nop
inc
sub
mov
in
sarb
ljmp
push
cmp
sub
push
inc
push
insl
or
xchg
cs
and
lds
dec
inc
push
dec
xchg
cmp
or
mov
pop
jmp
jl
in
cmp
push
cwtl
ret
test
testb
cltd
mov
fldcw
sbb
out
cltd
nop
dec
push
lods
mov
dec
fmull
xchg
leave
cmp
lock
mov
fdivrs
cmp
movsl
cmpsb
imul
sbb
sub
add
aad
and
daa
out
cmp
push
pop
fildl
fldt
lret
inc
mov
mov
shll
xchg
rorl
push
mov
inc
xchg
mov
lods
imul
daa
out
mov
cmp
scas
mov
arpl
imull
cmp
push
xchg
lahf
aas
or
scas
xchg
loope
movsl
pusha
jg
cld
cli
cwtl
inc
insl
mov
bound
cmp
mov
sbb
das
int
pusha
clc
out
mov
loopne
pop
mov
nop
mov
lds
and
jb
rcr
dec
mov
repnz
mov
rclb
cli
fisttpll
idiv
repz
addr16
movsl
xchg
rol
adc
push
jp
daa
mov
inc
ja
aam
xor
add
flds
or
dec
aaa
lret
inc
test
pop
aas
pop
pop
mov
mov
movsb
ficompl
imul
add
shr
lcall
push
arpl
loop
dec
add
mov
xor
mulb
push
in
lock
test
mov
and
adc
pop
xchg
pop
jbe
hlt
xchg
sbb
jge
pop
bnd
sub
inc
imul
jnp
adc
xor
xchg
lcall
xchg
mov
arpl
dec
mov
sub
test
mov
push
pusha
inc
mov
das
inc
sbb
mov
sahf
dec
pop
jne
aam
scas
addl
out
ss
sub
repz
aas
sti
xchg
push
mov
xchg
mov
loopne
lahf
pusha
int3
out
add
lea
or
inc
inc
pop
jno
jo
push
push
sbb
fcomp
loop
shlb
jne
aaa
ja
sbb
mov
mov
mov
sub
xchg
lea
sub
sbb
pop
inc
divb
push
sbb
xchg
stos
scas
std
rclb
sbb
dec
pop
test
jne
push
mov
sub
or
sbb
mov
cs
add
dec
inc
cmc
mov
jno
roll
fdivs
sbb
repz
mov
call
sub
vmwrite
loop
lea
iret
fildll
std
push
gs
jp
leave
dec
pop
inc
dec
stos
add
hlt
fdivr
insb
mov
push
pop
jg
push
push
jle
addr16
or
movsl
lods
in
int
cmp
fisubs
mov
in
ret
outsb
jo
xor
fwait
pop
imul
nop
dec
pusha
mov
jp
or
push
mov
xor
jnp
mov
pop
jmp
adc
les
xor
jne
ja
push
push
pusha
ret
cmp
and
sti
pop
clc
dec
mov
rorl
jae
mul
outsl
fs
jp
mov
dec
pop
dec
add
xor
xor
xor
mov
sahf
into
fcomps
ret
dec
popa
sub
das
pop
adcl
xchg
xor
out
push
ficomps
add
leave
rol
xchg
mov
jecxz
mov
pop
pop
punpckhbw
add
inc
leave
in
or
loop
mov
loop
cmp
pop
xor
push
test
mov
shll
lods
adc
arpl
addb
pop
das
adc
xchg
xchg
fsubs
pop
push
sbb
clc
mov
pop
out
sbb
sub
push
dec
rolb
adc
inc
cmp
jo
xor
adc
lret
add
sbb
cmp
cli
pop
sub
mov
jbe
cmpsb
push
push
xor
insb
xchg
outsb
xchg
xchg
sbb
jbe
sbb
mov
movsb
jne
xor
mov
scas
popa
mov
push
add
mov
push
and
add
fisubrl
mov
movsl
test
repnz
xchg
push
je
adc
mov
xchg
push
push
xchg
mov
mov
fidivrl
stc
xor
add
add
pop
mulb
ficomps
std
pop
xor
leave
xor
aas
jae
ficoml
mov
mov
stos
daa
adc
mov
int3
stc
jb
mov
xlat
movsl
mov
insb
sbbl
pop
ss
aam
jnp
ret
ss
and
lods
mov
jmp
xlat
dec
inc
xchg
add
ja
pop
dec
lret
sarb
imul
lret
cli
xor
pop
gs
shll
imulb
xchg
inc
outsl
mov
leave
jbe
shll
and
cmpsl
pop
out
out
mov
cmp
and
and
add
mov
dec
out
dec
cwtl
jbe
shrb
sbbb
mov
mov
push
mov
cmp
mov
lock
xchg
sub
test
sbb
clc
cmp
jl
inc
pop
dec
scas
leave
or
pop
loope
stc
inc
xor
cmp
subb
mov
sbb
int
add
movsl
jecxz
sahf
dec
fs
adc
add
inc
int3
mov
add
cmpsl
incb
aas
sti
imul
jl
adc
and
or
sub
jmp
rcl
mov
mov
adc
dec
imul
vmaxsd
cmpsb
adc
xor
inc
mov
inc
push
add
jp
in
cmp
inc
pop
repz
cmp
in
imul
bnd
pop
pop
jno
add
xchg
cs
shll
push
cmp
mov
push
mov
or
test
sub
fisubrs
pushf
pop
pop
shrb
aam
out
cmp
clc
orb
out
or
repz
xchg
push
inc
xor
scas
rolb
xor
dec
or
inc
xor
sub
adc
jb
clc
cmp
shl
xor
in
jno
sbb
data16
push
or
mov
xor
dec
imul
inc
cli
dec
repnz
inc
sub
adc
mov
xchg
xor
add
xchg
cmc
shlb
sub
xor
int
lds
sbb
xor
mov
dec
shlb
pop
rcrl
orl
push
repnz
lods
pop
mov
dec
ss
adc
int3
mov
cli
int3
push
pushf
sub
into
xor
sub
and
repnz
test
lcall
insb
inc
out
xchg
gs
push
ret
lods
iret
xchg
in
jle
adc
imul
fiadds
mov
mov
ror
into
maskmovq
ret
test
sbb
jns
add
or
leave
push
sbb
adc
shlb
mov
cmpsl
push
loope
push
sub
fisubl
test
pop
pushf
repnz
push
scas
cltd
inc
push
inc
cli
movsb
sub
fs
into
in
sub
mov
sub
jne
cli
adc
test
aad
xchg
or
and
mov
call
lret
loop
mov
shlb
mov
sarl
mov
nop
or
adc
pop
mov
sbbl
shlb
sub
mov
filds
outsb
pop
enter
mov
in
sub
sahf
and
jns
jbe
mov
repz
scas
mov
push
inc
jnp
call
js
lret
mov
pop
add
sbb
xchg
fs
mov
repnz
xchg
arpl
mov
mov
and
call
xchg
sbb
jp
mov
adc
loope
jmp
idivb
mov
mov
xchg
pop
add
addb
inc
adc
push
xor
lods
mov
out
xchg
and
pop
and
fcomps
xlat
out
and
pusha
xor
xchg
cwtl
loop
test
daa
mov
mov
xlat
lock
xchg
scas
sbb
in
dec
xchg
push
add
mov
in
addl
sbb
sbb
lret
jo
int
cmp
sar
jecxz
cmp
mov
and
insb
fwait
xor
cwtl
popl
push
aam
push
daa
into
mov
leave
rep
loopne
and
out
push
and
inc
inc
xor
hlt
xchg
adcl
aas
mov
insb
aam
movsl
cmp
mov
sbb
xor
fwait
mov
sub
ret
out
mov
or
aam
xor
stos
out
mov
sub
and
sub
adc
jns
out
xlat
sbb
inc
xchg
sub
popf
mov
adc
outsb
dec
push
mov
jmp
mov
rolb
daa
pop
jmp
adc
lock
insb
dec
scas
repz
gs
aaa
push
gs
ror
add
add
inc
or
adc
add
mov
xchg
cs
popf
pusha
gs
negb
adcl
test
dec
add
js
test
push
aad
sub
lods
pop
push
in
pop
stc
pop
ficoms
mov
adc
aas
adc
dec
push
or
mov
fcmovnbe
rcl
and
repnz
out
rcll
jecxz
lahf
cmp
mov
mov
or
out
das
scas
aaa
mov
xchg
pop
hlt
sbbb
or
jg
loopne
ret
sbb
cmp
sbb
insl
insb
pop
call
mov
mov
mov
scas
mov
xchg
outsl
push
and
mov
iret
adc
pop
lret
lret
xor
adc
in
repnz
fs
push
inc
loopne
fs
mov
arpl
jmp
inc
cwtl
fistpl
push
bound
sbb
mov
aaa
inc
or
or
mov
xchg
out
sbbb
or
xorb
sbb
fsubrl
cwtl
sti
inc
sbb
sbb
cmp
jp
pushf
arpl
fadd
sub
into
nop
xor
push
das
push
ljmp
push
push
pop
pop
into
mov
inc
call
and
push
lea
dec
pop
pushf
mov
dec
ja
test
mov
iret
cmp
pushf
jne
inc
imul
or
in
imul
call
fidivs
lea
lret
fs
test
jle
or
mov
orb
or
jl
mov
call
and
cmp
test
outsb
mov
cltd
lods
in
jg
pop
jo
xchg
dec
and
cmp
and
andb
test
cmpsl
jmp
dec
mov
mov
fstcw
push
adc
add
std
dec
adc
roll
lea
inc
sbb
rolb
insl
mov
cmpsb
sbbl
stc
sub
pop
add
push
out
fcomip
mov
dec
stc
orl
es
leave
hlt
sbbl
jne
test
xchg
or
out
sbb
sbb
sbb
sti
rcr
js
dec
inc
mov
inc
cli
cmpsb
ret
xchg
dec
mov
lea
inc
sarb
scas
xor
inc
sub
inc
bound
or
imul
dec
add
sbb
cmp
mov
or
mov
test
pop
lods
mov
lock
cwtl
mov
dec
in
outsl
aaa
aad
mov
popf
mov
and
icebp
sahf
push
mov
add
mov
jmp
jl
push
insl
dec
repz
push
jmp
push
scas
xor
in
pop
dec
sbb
xchg
and
xchg
push
push
mov
jp
inc
leave
mov
xchg
adc
dec
test
adc
loope
xchg
ret
clc
jb
in
xor
out
adc
inc
push
xor
fcoms
sub
popf
sub
or
lock
xor
outsl
stos
or
leave
les
xchg
push
pop
inc
pop
les
cld
jno
out
pop
mov
stos
inc
icebp
xchg
int3
mov
push
inc
add
leave
add
outsl
jne
wbinvd
aad
insb
jmp
frstor
or
cmp
cli
aas
cwtl
xor
insl
cmp
pop
sbb
push
ror
shll
stc
sti
test
jb
inc
sub
push
cmp
repnz
push
pop
leave
repz
push
testb
jb
and
push
ret
push
xchg
test
and
dec
popf
in
inc
ljmp
and
repz
inc
mov
repz
jo
scas
fsubrs
pop
stc
mov
adcb
dec
dec
lock
mov
imul
mov
movsl
and
xor
pop
call
pop
sbb
inc
pop
sbb
xor
jo
mov
lahf
push
adc
insb
rorb
xor
xchg
hlt
dec
xchg
stos
and
jge
mov
flds
add
inc
and
outsl
out
or
add
fnstsw
jg
push
into
xor
lcall
stc
sahf
mov
lods
inc
lods
inc
jl
mov
inc
xchg
pushf
pop
xor
mov
mov
scas
sbb
sub
xor
lahf
pop
call
adc
lcall
jae
or
cmpsl
sbb
push
out
push
in
test
into
in
sbb
stc
adc
cmpsl
jne
pop
jns
into
shll
outsl
mul
pop
lods
mov
and
pop
sub
and
xchg
es
dec
mov
push
jle
pusha
and
sbbl
call
in
sub
pop
shrl
cld
pushf
or
cmp
jmp
inc
mov
jge
mov
sbb
sbb
push
xchg
and
mov
or
aad
std
mov
adc
fwait
push
pushf
idivb
rcrb
add
xchg
insl
subb
adc
cmp
nop
ret
aaa
stos
dec
sbb
mov
inc
dec
pushf
cmpsl
stos
icebp
lods
and
fcmovu
adc
jge
in
push
or
mov
jo
lds
mov
add
hlt
shl
notw
or
push
rcr
call
cmp
xor
out
hlt
in
push
inc
xlat
adcl
and
add
stc
or
lods
lret
loopne
sbb
movl
in
fwait
or
mov
dec
movsl
mov
rcr
dec
loop
sbb
dec
push
sbb
mov
pop
cltd
xchg
outsb
loopne
aam
jbe
jb
xor
xchg
enter
in
nop
xchg
cld
fisubl
push
adc
xlat
sub
lret
cli
cmp
xchg
pop
adc
sti
adc
mov
js
pop
pop
mov
cmp
sarb
jl
cld
cmp
call
ds
sbb
or
in
jae
ret
mov
data16
sbb
divl
inc
sub
cmp
xor
dec
out
movsl
int
shl
repnz
test
and
out
pop
inc
sahf
insl
cmpsb
jge
out
cli
add
mov
or
mov
push
fdivrs
in
mov
inc
add
adc
pop
ja
mov
fistpll
dec
es
aam
popf
sub
mov
call
push
mov
imul
arpl
push
mov
insb
pop
mov
stc
jo
cld
sub
ljmp
push
mov
scas
jg
mov
sarb
std
test
cmpsl
rolb
fdivs
aam
call
outsb
cmp
sti
add
clc
pop
jl
bound
rol
pushf
xchg
sbb
cwtl
imul
mov
fisttps
sahf
sub
sub
xor
sbb
or
je
aas
data16
and
jp
ds
lea
mov
pop
push
hlt
mov
rclb
add
popf
dec
inc
adc
sarb
shrb
sbb
iret
add
cmp
sub
mov
adc
arpl
cmp
rcll
inc
in
shlb
lret
mov
sbb
into
test
push
lods
push
das
ret
cmp
sub
popa
in
xchg
shlb
cwtl
mov
nop
aad
sbb
test
lahf
inc
xor
lret
mov
arpl
pop
aam
push
pop
mov
mov
add
mov
mov
dec
or
or
jge
pop
movsb
xor
aad
ja
int
mov
clc
push
fbld
xchg
push
fwait
mov
add
es
shlb
mov
pop
dec
imul
pop
push
rorb
sbb
jle
cmp
rcrb
dec
push
out
lock
add
test
ljmp
pop
fmuls
jne
pop
push
fisubl
pop
push
jge
xor
sar
and
sbb
mov
rcll
and
test
add
mov
pcmpgtd
push
loop
mov
hlt
call
arpl
jns
sub
scas
aad
mov
add
scas
gs
jbe
movsl
xchg
jb
les
inc
cmp
imul
lods
cli
imulb
mov
lcall
cwtl
insb
xchg
pushf
cmpsl
cwtl
pop
ja
out
pushf
xchg
add
xchg
ret
loop
pop
loop
mov
pusha
jmp
sbb
stos
mov
mov
cmp
push
mov
loopne
gs
adc
sbb
scas
int
cli
xchg
mov
or
xor
fisttps
adcl
scas
lahf
aaa
jnp
pop
add
mov
sub
sbb
jmp
jp
clc
pop
popa
imul
xchg
lods
add
lret
idivl
mov
call
xor
lcall
sbb
mov
lcall
mov
or
dec
xchg
fwait
dec
mov
cltd
arpl
imulb
stos
and
inc
and
sub
aam
push
dec
fisttpl
lret
stos
out
jmp
rclb
mov
xchg
xchg
ljmp
cmc
push
xchg
insb
repz
push
orb
dec
sahf
shll
pop
test
hlt
or
cmc
jle
out
cld
int3
test
scas
or
fmull
mov
push
imul
call
pop
sti
mov
cmc
mov
lods
inc
xor
push
xor
mov
pop
dec
dec
jno
out
cwtl
int3
mov
dec
sub
and
mov
add
dec
dec
lods
mov
xlat
shll
pop
or
push
loop
inc
cmpsb
mov
rcr
adc
popa
jp,pt
mov
cli
out
dec
fwait
lock
in
pop
les
sbb
xchg
and
test
or
or
and
dec
sub
mov
sub
movsb
sar
pop
movsb
ljmp
pop
mov
pop
jns
push
out
out
xchg
xor
in
push
push
out
out
mov
mov
and
push
push
aaa
aad
lock
pusha
push
and
bound
push
mov
test
push
xor
dec
cmp
mov
mov
fwait
loope
mov
lret
and
loop
mov
fimull
jnp
inc
je
xlat
leave
jp
cmp
or
mov
js
push
ss
shlb
xor
outsl
push
stos
push
dec
xchg
cld
fs
mov
and
push
adc
cmpsb
cli
xchg
scas
imul
add
fadd
mov
jns
jl
lock
push
pop
fidivrs
int
inc
jns
mov
mov
mov
xor
adc
ds
les
stc
push
xor
mov
jmp
js
rorl
fs
sti
in
jo
push
mov
pop
mov
sbb
xchg
or
and
cmp
in
imul
popf
sub
mov
movsb
pop
aas
sbb
mov
mov
mov
lock
test
xchg
insb
sbb
inc
or
jecxz
pop
sbb
sbb
test
mov
inc
adc
sbb
inc
ficoms
mov
pop
cld
test
rolb
mov
repz
rcll
xor
lret
push
dec
cmpsb
mov
inc
cmpsb
jns
sbb
mov
pop
daa
sub
cltd
enter
push
insl
insl
mov
pop
add
stc
cmp
sbbl
xchg
mov
fcomip
pushf
lret
dec
sub
js
call
adc
sub
xchg
inc
test
negl
jo
das
inc
xchg
in
clc
addl
sbb
cmc
push
fcmove
fdivl
incb
das
popa
dec
inc
xchg
les
xor
mov
cmpsl
add
nop
sbb
roll
xchg
sbb
lcall
jno
push
mov
into
add
pop
in
leave
pushf
aam
mov
in
cmp
cmp
mov
add
icebp
and
fldl
mov
leave
repz
jmp
aaa
sub
rorb
mov
fs
stc
add
popf
dec
andl
pop
es
nop
aad
cmpsb
repz
lret
pusha
and
pop
rorb
jbe
out
pop
push
pop
je
icebp
aad
push
jg
inc
lcall
scas
jne,pn
in
int3
or
bound
and
jl
mov
inc
jmp
loope
inc
jae
sub
jno
mov
inc
jae
and
out
sub
cmp
popa
pop
ja
mov
inc
lods
fwait
in
adc
cli
xchg
cmp
cltd
imul
mov
lahf
or
mov
movsb
test
gs
jno
mov
xrelease
dec
clc
shll
xchg
nop
insl
mov
cltd
sbb
pop
jmp
mov
scas
mov
jecxz
xor
and
inc
enter
bound
sub
lcall
dec
sub
imul
pop
mov
add
add
cmp
enter
outsl
outsl
pop
mov
into
add
pop
pop
shlb
inc
imul
mov
xchg
xor
cmc
popf
add
test
mov
ret
pop
pop
xchg
cli
jne
arpl
fiaddl
pop
lods
pop
daa
mov
popf
int3
jne
shrb
xor
scas
and
call
xchg
adc
dec
push
cmpsl
les
xor
rep
pop
add
aaa
fcoml
movsb
or
insl
cmp
in
add
ss
jbe
test
stos
or
lds
jge
aas
or
mov
and
iret
or
and
inc
cmpb
mov
mov
or
or
sti
dec
inc
or
jo
insl
inc
negb
add
dec
not
pop
and
outsb
subb
pop
pop
adc
scas
shlb
ds
outsb
sub
mov
shrl
sbb
movsb
fsubrl
mov
loopne
in
mov
rorl
mov
pop
in
icebp
add
xchg
push
movnti
rolb
mov
mov
jp
mulb
jl
mov
sbbb
sahf
insb
and
dec
xchg
aad
je
xchg
ljmp
icebp
mov
cmp
shll
push
sub
sub
shl
jnp
cld
mov
pusha
hlt
orl
std
lret
outsb
mov
clc
mov
sub
je
mov
xchg
jge
push
lds
stos
daa
notl
in
sbb
lret
lock
push
cltd
add
fidivrl
or
lahf
dec
push
enter
pop
pop
cltd
dec
xchg
pop
add
out
stc
lahf
leave
outsb
out
mov
daa
inc
mov
mov
arpl
inc
sub
repnz
sahf
xchg
push
mov
jmp
pop
lds
int
lret
xchg
pop
wrmsr
inc
cmp
aad
jnp
sub
xorl
sub
jecxz
push
dec
mov
xor
repnz
inc
loop
roll
jle
add
call
mov
ja
in
test
inc
in
shl
out
pop
or
cmp
cmp
jnp
fwait
clc
sbb
cltd
dec
lcall
pop
ja
neg
test
xor
push
xchg
stos
fsubrs
ja
mov
int
lcall
adc
ljmp
jbe
pop
dec
mov
adc
add
or
subl
mov
mov
sbb
mov
and
lds
cmp
in
loopne
in
mov
sahf
pushf
cmc
jmp
popa
mov
imul
lahf
cmp
pop
dec
popa
push
jns
clc
daa
in
jo
out
mov
ret
sub
cld
repnz
inc
ds
jae
sbb
adc
shlb
aas
mov
mov
pop
outsb
xchg
mov
add
and
dec
dec
mov
or
bound
cmp
or
scas
int
pop
xchg
fstpl
dec
arpl
ja
test
push
or
loop
mov
or
fs
sbb
data16
sub
push
xchg
cmpsb
mov
xor
out
loop
pop
ja
stos
mov
xor
stc
ucomiss
mov
jmp
inc
dec
push
aad
je
xor
cld
test
mov
call
mov
js
and
xor
insl
or
addr16
leave
call
ret
xor
mov
push
faddp
and
jne
imul
mov
push
mov
cmp
xchg
cmpsl
push
push
cld
push
punpckhbw
jb
clc
pop
loope
adc
movsl
mov
push
add
mov
hlt
adc
xchg
fs
fdivl
jo
in
inc
mov
pop
mov
out
pop
mov
mov
lret
enter
add
loope
pop
sti
or
cltd
das
jno
xchg
lods
pop
daa
lock
sbb
mov
adc
adc
sub
sarb
je
ja
sub
lret
mov
push
jo
insb
imul
mov
xor
insb
add
orb
jne
daa
jge
inc
fidivrl
psadbw
movsb
lods
or
inc
mov
shll
or
sub
mov
cmc
mov
je
int
stc
ss
push
xchg
leave
pusha
xchg
pop
xchg
fcmovu
pop
or
xchg
mov
daa
popf
add
push
adc
inc
xor
inc
pop
inc
outsb
sti
xor
fwait
xor
lea
ss
pop
stc
xchg
sbb
ja
inc
dec
sbb
dec
inc
std
xchg
aas
out
pop
mov
pop
mov
jle
icebp
push
int
add
sbb
jecxz
sub
out
adc
popl
push
inc
inc
and
nop
ss
iret
mov
fwait
sub
cli
cmp
xor
nop
lahf
mov
mov
cmpsl
and
int3
cmp
pop
dec
sub
cmp
subb
cmp
adcl
aam
scas
repz
lret
ljmp
mov
arpl
dec
insb
pop
jp
xchg
aaa
inc
dec
add
cmp
lods
subl
push
dec
fs
mov
mov
or
loop
mov
in
aas
xchg
sbb
adc
fistpl
or
xor
sarb
inc
push
ljmp
mov
push
insl
in
sahf
jge
ror
adc
cmp
popf
pop
dec
sbb
test
sahf
test
ret
aas
push
mov
mov
push
andb
ja
jl
dec
jg
mov
divb
and
fadds
xor
std
sarb
pushf
js
ds
test
adc
icebp
and
and
jecxz
dec
xor
test
rcrl
dec
pop
mov
jmp
stos
mov
pcmpeqb
div
sbb
push
xor
push
adc
adc
jecxz
and
pop
mov
mov
jns
ljmp
cmp
dec
les
sub
popa
cmp
pop
es
test
lea
xchg
mov
dec
xchg
mov
lock
pushf
ss
andb
mov
fcmovne
dec
negl
and
mov
or
cmp
frstor
pushf
jp
lods
inc
aad
xchg
jge
cmp
lcall
adc
clc
cs
aas
cmp
or
leave
xlat
push
daa
in
mov
or
in
je
pop
mov
and
pop
mov
cmpsl
fwait
push
sti
push
xchg
push
xor
das
and
cmp
jmp
or
addr16
or
cmp
mov
sub
add
mov
pop
mov
enter
cmpsl
shll
aad
and
jbe
mov
addl
mov
jae
xchg
out
inc
dec
mov
lea
movsb
cmp
int3
aaa
aad
shrb
or
pop
and
loopne
cmc
ljmp
aas
inc
mov
pop
mov
and
mov
or
cwtl
loop
xor
cmpsb
cli
mov
sub
xchg
in
jne
shrb
and
or
lds
dec
adc
subl
mov
jnp
sbb
jne
push
into
add
cli
lret
test
inc
dec
insl
push
mov
adc
push
xor
in
or
inc
add
pop
aaa
and
jmp
or
mov
dec
mov
incl
pop
inc
test
add
sbb
cmpsb
pop
faddl
and
test
lods
lret
xor
xchg
jb
std
pop
xchg
jge
cs
dec
adc
mov
cmp
arpl
mov
scas
insl
dec
sti
aas
mov
and
or
jno
cmpsl
push
xor
popa
xchg
jl
push
add
fstpl
push
sub
pusha
aaa
jne
repnz
add
lret
xchg
fs
loopne
clc
out
rcrb
repz
add
push
test
inc
fs
cwtl
fsubl
inc
int3
add
push
repnz
xchg
loop
sarl
mov
jo
loop
test
mov
mov
loope
sub
mov
inc
inc
sbb
sbb
pushf
aad
xchg
rorb
test
cmp
pushf
es
ljmp
stos
dec
lock
pop
push
movsb
popl
mov
loopne
dec
in
mov
push
sub
push
jnp
adc
inc
xor
mov
movsl
mov
jle
mov
mov
mov
sub
scas
je
dec
push
push
mov
add
dec
shl
loope
mov
mov
stos
pusha
sbb
out
and
sbb
push
jecxz
repz
xor
push
pop
test
dec
iret
pop
sub
pop
js
mov
xor
daa
in
stc
les
adc
cli
dec
xorb
mov
fcmove
jle
leave
icebp
fistl
mov
das
mov
mov
add
adc
loopne
scas
jg
shlb
jmp
cltd
mov
aam
aas
lods
cmp
in
pop
lcall
xor
and
adc
pusha
push
sti
adc
jmp
fsubl
aaa
adc
xchg
rcr
sub
pop
lock
jbe
pop
test
push
cmc
xchg
test
dec
aad
jo
add
notl
pusha
pushf
ja
sahf
rorb
mov
les
xor
push
mov
andl
stos
outsb
int
rol
repnz
jno
fnstcw
fstps
xchg
test
cs
adc
and
jp
inc
les
je
xor
fsts
or
and
mov
pop
or
pushf
test
and
repnz
push
nop
fmull
jns
lret
cld
les
enter
fs
cmp
dec
loop
sub
or
pop
cli
cmp
in
leave
js
inc
mov
loop
filds
test
push
push
sub
dec
push
xor
cmc
daa
jae
dec
or
decb
imul
and
or
cmp
cmp
mov
jmp
pop
lds
xchg
and
push
pop
dec
daa
test
mov
xlat
cmp
jns
and
aaa
jo
mov
clc
adc
mov
mov
sahf
je
pop
sub
pop
testb
dec
dec
fdivrp
sbb
jle
call
mov
aaa
adc
scas
stc
inc
mov
mov
xchg
adc
or
xor
mov
aam
cli
dec
dec
inc
xchg
insl
lods
pop
mov
neg
lods
out
sti
cmp
dec
mov
mov
pushf
sub
pushf
mov
xor
xorl
cmp
ljmp
hlt
jl
rorl
sbb
jmp
outsb
fisubs
xor
or
gs
fimull
inc
andl
push
fcos
mov
out
inc
fidivrl
mov
jmp
rclb
cltd
dec
xchg
fnsave
mov
inc
outsl
fsubrl
mov
adc
jmp
fnstcw
mov
and
sar
inc
mov
mov
lahf
imul
pop
inc
test
lret
call
into
sub
lret
xor
cwtl
daa
incb
and
iret
dec
cmp
mov
mov
xchg
push
push
je
rcll
outsb
repz
loopne
aad
lods
dec
stc
xlat
mov
dec
jne
or
in
mov
popf
faddl
mov
adc
ljmp
pop
push
mov
and
sahf
xchg
sub
sbb
inc
ljmp
js
add
andps
in
mov
sbb
faddp
jnp
push
push
jne
lods
ss
rol
mov
xchg
cli
faddl
mov
loope
movsb
push
add
in
in
or
aam
and
inc
cmp
push
lcall
jb
cs
mov
jp
and
shll
popa
pushf
push
lahf
mov
mov
xor
ficoms
push
sbb
dec
ja
push
testl
jecxz
subl
add
shl
rcr
xlat
dec
outsb
icebp
lahf
in
dec
cmp
jb
imul
jne
test
outsl
fld
movsb
movsl
xchg
add
jns
pminub
jle
loop
leave
mov
inc
sub
je
push
mov
rcrl
jo
int
cmpsb
negb
add
int3
movsl
fwait
sarb
mov
cwtl
pop
loopne
fs
cmp
arpl
inc
pushl
and
sub
inc
mov
xor
sbb
es
cltd
pop
mov
mov
es
sub
mov
lock
cli
mov
lea
adc
mov
mov
mov
xchg
out
inc
jl
mov
stos
insl
stos
out
push
repz
dec
xor
loop
adc
or
je
pop
loope
mov
adc
sub
rcrl
mov
ds
clc
shlb
aas
addr16
ss
in
jle
sub
adc
mov
mov
jle
sub
rcll
aas
in
xchg
stos
pop
hlt
sub
mov
rolb
push
add
ljmp
pop
and
inc
push
xor
or
lea
ficomps
in
xchg
jmp
mov
mov
and
cltd
xchg
push
daa
cwtl
loope
jo
ljmp
or
movsl
adc
and
sbb
dec
mov
addr16
daa
lock
call
mov
int3
cmp
ss
cli
stc
push
mov
int
or
xor
cltd
scas
sarb
push
jl
push
inc
and
mov
xlat
mov
call
inc
or
stos
test
sub
xor
cmp
add
fiadds
or
outsl
out
lock
subb
inc
sbb
incb
jle
push
push
rclb
sbb
or
jmp
cmp
in
push
in
cmp
leave
push
test
enter
cmpsb
fsubs
in
gs
or
imul
mov
sbb
mov
add
hlt
xor
add
dec
jp
sub
sub
stos
ret
mov
jl
out
xor
xor
cld
jmp
or
repz
stos
aas
and
push
out
daa
and
test
mov
push
pop
test
and
sub
dec
cltd
jnp
cmp
call
sbb
mov
push
or
lret
rclb
xchg
enter
and
call
xchg
cmpsb
pop
lsl
insb
push
jno
jg
jb
inc
sbb
jae
pop
arpl
inc
scas
sti
in
sbb
push
test
fisubrl
dec
sub
call
int3
sbb
cld
mov
xor
into
cs
or
loope
and
ja
mov
mov
mov
push
mov
lcall
stos
mov
pop
or
jbe
push
add
or
jb
mov
pop
lret
test
ja
xchg
callw
mov
jbe
dec
sahf
adc
jno
negb
jmp
aam
lock
jg
data16
lock
bound
sub
arpl
scas
pop
xor
mov
in
jo
fistl
fldcw
gs
test
addr16
call
stos
push
in
xor
sbb
ds
std
cmp
sub
pop
notl
mov
into
xchg
ss
inc
jle
xorb
cli
mov
es
lahf
loopne
out
push
in
and
shl
cld
je
loope
imul
mov
push
loop
aam
xor
imull
aas
outsl
int
lahf
iret
jbe
xor
test
fisubrs
fs
xchg
adc
mov
mov
push
addr16
scas
gs
inc
inc
movsl
mov
js
nop
jle
lret
scas
pop
bound
jle
je
xchg
mov
dec
pop
fcmove
push
jbe
xor
push
mov
cmp
jp
push
inc
jmp
adc
in
out
lcall
adc
stos
inc
jne
lock
sti
push
scas
xrelease
push
fbstp
jns
push
sbb
sbb
and
das
data16
popf
std
sub
jae
jg
cli
out
das
shlb
hlt
lahf
sub
jge
jp
fsub
cld
aad
lret
cmp
add
das
adc
pop
push
mov
xchg
sbb
cmpsb
adc
lds
subl
cwtl
dec
push
inc
or
xchg
dec
add
push
lcall
push
push
popf
arpl
sti
push
fisubs
fwait
and
push
iret
or
int3
mov
mov
adc
xchg
icebp
mov
sub
pop
ljmp
push
aam
push
dec
lcall
cmp
cmp
jl
mov
pop
lahf
jb
jmp
cmp
inc
pop
in
andl
mov
scas
cs
pushf
add
cmp
mov
pusha
jns
dec
jle
daa
adc
out
sbb
inc
fcmovnbe
or
ror
and
push
jecxz
pop
out
inc
fnstcw
and
mov
dec
std
mov
stc
sbbl
mov
int
cmp
jnp
xor
mov
dec
rcrl
mov
dec
int3
lods
fsts
js
xchg
lods
outsb
subl
sub
pop
js
dec
imul
jo
mov
ds
sub
adc
and
add
xorps
push
popa
loope
push
daa
and
sbb
in
push
and
and
mov
sbb
call
idivl
lods
data16
fists
and
push
aas
jmp
fwait
dec
cmp
mov
cld
outsb
add
inc
sub
inc
jbe
cmpsl
test
lcall
pop
jle
sbb
and
mov
sub
lahf
into
cmpsl
in
test
lahf
aas
outsl
or
bnd
pop
mov
ret
popa
pop
sarl
ret
rorb
lock
push
fimull
fldl
lret
add
push
je
cltd
dec
add
loop
adc
adc
lcall
addr16
pop
xchg
int3
aaa
dec
js
adc
push
test
cmp
push
mov
das
aam
pusha
repnz
stc
ds
cmpsl
push
inc
pop
inc
pop
jmp
enter
sub
in
fimuls
sti
ret
lcall
bound
int3
mov
sbb
push
dec
shrd
xor
pop
push
fistpl
sub
rclb
test
or
pop
jbe
mov
push
sub
fs
sbb
add
sub
test
jbe
cmpsl
xchg
adc
mov
mov
pop
aas
rorb
jge
data16
mov
adc
push
add
cmp
or
add
add
sbb
adc
cli
pop
in
lahf
mov
stos
aam
jle
or
test
cli
push
push
test
call
cltd
sub
push
lcall
vrcpss
pop
jbe
push
jmp
inc
jbe
adc
scas
je
push
xchg
xchg
mov
pop
cmp
jg
mov
addr16
lods
pop
dec
je
xchg
cli
or
daa
js
xchg
data16
push
mov
and
xchg
ret
mov
pop
jo
pusha
jl
pop
push
repnz
jmp
movsl
enter
mov
clc
mov
push
addr16
push
push
mov
fisttps
es
fwait
adc
in
sbb
xor
adc
jno
adc
test
lret
jnp
aad
mov
adc
fistl
and
xor
iret
mov
imul
jl
sub
in
mov
addr16
in
and
lock
aaa
imul
mov
out
xor
movsb
mov
and
lcall
lahf
inc
and
and
mov
add
sub
call
adc
sub
sahf
jg
xchg
cmp
mov
jle
daa
out
cmpsb
in
pop
inc
add
push
and
mov
or
test
hlt
push
xchg
and
xor
lcall
fbld
pop
inc
sbb
jge
cmpsb
sub
cmp
lods
mov
mov
testl
jno
pushf
ljmp
inc
movsb
aaa
cld
push
mov
shll
fucom
stos
inc
bound
movsb
scas
adc
push
pop
scas
mov
sar
inc
movsl
bts
rclb
xor
loop
popa
xchg
lea
addr16
fxch
sub
insl
jmp
lea
je
outsl
dec
jecxz
and
mov
and
mov
cmp
dec
sub
mov
rcll
or
lcall
cmpl
lock
push
aad
sbb
shrl
inc
xchg
xor
popa
mov
or
push
or
ret
push
mov
repz
pop
and
and
pop
sbb
xor
pop
and
aad
adc
add
pop
insl
ja
lret
cmp
pop
mov
xchg
dec
popf
mov
pop
pop
mov
mov
mov
cmp
js
adc
mov
rcll
sbb
pop
push
out
movsl
enter
icebp
or
mov
jge
lds
jns
rcrb
sbb
inc
push
jle
dec
das
nop
jcxz
jb
paddsb
jo
cmp
in
adc
adc
cmp
xchg
dec
popf
loop
scas
or
jnp
lods
mov
dec
sbb
fldt
inc
xchg
mov
lret
cmc
outsl
pop
lds
jle
int3
push
sbb
ret
sbb
iret
icebp
lock
push
inc
jmp
rolb
dec
data16
fs
loop
adc
sub
dec
jg
push
jae
xlat
pop
push
mov
xchg
push
or
pusha
or
mov
and
mulb
sbb
and
and
ljmp
sbb
arpl
xchg
hlt
sbb
sub
addr16
sub
lods
dec
adc
mov
cmpsb
xchg
pop
out
in
imul
lods
push
mov
cmpb
adc
adc
and
and
into
or
pop
cli
pandn
test
lds
fnstenv
sbb
and
mov
enter
mov
stc
in
fs
imul
or
or
xor
movsb
push
pop
jns
adc
xchg
fs
sbb
inc
inc
subb
mov
cltd
xchg
pop
inc
push
pop
jnp
arpl
lret
dec
jo
testb
jmp
lret
idiv
das
jmp
sbb
adc
sbb
and
rcr
add
push
pop
add
dec
add
xchg
nop
and
xchg
in
cmp
dec
inc
and
js
xchg
test
lret
cmp
and
cld
testb
imul
sub
into
push
xchg
sbb
mov
dec
js
and
and
cmpsl
cli
push
jne
and
inc
das
jns
rolb
mov
mov
sbb
mov
mov
pop
shll
dec
mov
adc
or
push
xor
imul
iret
pop
dec
ret
xor
idiv
adc
sub
gs
or
inc
cwtl
leave
fsubrl
cmpsb
jo
in
xor
test
into
hlt
in
orb
cmp
and
cwtl
cmp
push
cli
inc
mov
sub
addr16
push
pop
in
movl
in
repz
sti
in
nop
in
in
clc
in
push
inc
pop
out
jb
shrb
xor
and
out
mov
add
inc
mov
inc
ret
inc
bound
inc
jl
push
cltd
push
lret
inc
lods
pop
jb
lea
loop
pop
mov
cld
jb
xchg
add
and
ja
push
lods
cmpsb
jle
mov
push
jne
mov
les
jecxz
adc
lretw
lock
rolb
cmp
adc
daa
pop
mov
sub
xchg
mov
repnz
ja
xchg
sub
cmpsl
adc
rcrl
in
dec
inc
mov
push
sti
ljmp
adc
sbb
pop
sbb
sarl
cmp
arpl
fwait
inc
xchg
push
lahf
test
nop
pop
rorl
mov
push
test
jg
call
stc
out
fistpll
pusha
sub
imul
xchg
fcmove
dec
repz
inc
shl
xor
mov
cmp
sub
sub
add
repz
dec
pop
push
inc
fsubrs
scas
pop
icebp
sub
arpl
cmp
cli
stos
jg
enter
aaa
std
daa
lods
les
mov
mov
adc
cmp
ficompl
imul
loop
cmc
pushf
adc
rcl
cmpsl
loope
sahf
sub
xchg
cmp
in
sbb
in
jae
repnz
sbb
xchg
adc
std
rcll
push
repz
push
cmp
fstl
mov
inc
addl
dec
movsb
movsb
sub
jns
mov
sbb
adc
or
aaa
push
repz
mov
stc
adc
dec
mov
out
add
push
lods
push
pop
pop
mov
mov
jecxz
add
jle
popf
loop
andb
sbb
scas
mov
jge
sahf
mov
add
inc
insl
lock
cmp
cmp
mov
cmp
jge
xchg
idivb
mov
and
movsl
adc
insl
outsl
cld
pop
shl
mov
in
pop
cs
push
imul
mov
dec
push
cmpsl
push
out
dec
cmp
push
hlt
sbb
jo
shrl
inc
dec
jl
push
aas
xchg
pop
rcrl
out
jns
pop
and
test
add
loopne
pop
push
fisubrl
mov
add
cmp
xor
mov
mov
fmull
jns
dec
out
sub
or
jno
xchg
mov
out
cwtl
pop
and
rcl
out
sbb
out
cmp
push
sub
outsl
jle
sbb
pop
and
xlat
lea
incl
xor
in
test
xchg
mov
xor
pop
xor
aas
movsl
adc
or
adc
sub
xchg
xchg
aam
out
scas
jae
pop
mov
rorl
xchg
or
cmp
sti
mov
push
push
xchg
hlt
ficoml
or
cs
shlb
jo
mov
nop
sbb
cmp
sarb
cmp
jp
shrb
sahf
adc
jl
or
jo
mov
push
or
xor
xor
aaa
std
fsubr
in
push
jecxz
cwtl
loope
jg
mov
sahf
leave
test
add
xchg
mov
fdivrs
cs
and
fcompl
roll
clc
or
negl
cmp
pop
mov
mov
mov
lock
add
bnd
and
mov
inc
add
adc
nop
sti
in
adc
minps
in
and
lahf
xchg
jl
arpl
or
push
push
outsl
xchg
and
mov
jbe
and
incb
pop
mov
in
xchg
mov
jp
les
dec
stos
into
xor
dec
or
push
jg
out
cmp
mov
repz
and
adc
fdivrp
js
push
inc
jle
insb
dec
or
jg
and
stc
je
outsb
adc
icebp
jb
les
jmp
test
dec
das
stos
inc
pop
xor
mov
mov
xchg
push
pop
or
jno
icebp
in
mov
lea
enter
mov
adc
out
dec
xor
lret
sbb
arpl
shr
inc
cmp
aaa
lret
pop
and
inc
lods
jno
mov
mov
jbe
lds
mov
cltd
add
test
shrl
push
jnp
pop
daa
push
dec
pusha
xchg
jnp
scas
inc
sub
divb
std
bound
int3
sub
push
jl
fs
movsl
mov
push
jb
sbb
adcl
clc
js
or
mov
mov
push
insl
mov
push
and
jle
aaa
push
or
mov
mov
js
sub
xor
inc
dec
loope
xor
iret
nop
push
insl
aas
aaa
cmp
and
inc
xlat
frstor
sahf
cwtl
idivl
fsubl
aas
cmp
das
add
pop
outsl
or
xor
mov
push
xorl
mov
movsl
sahf
jbe
cs
cmp
pop
repz
lea
addr16
xchg
sub
mov
movsl
pop
or
enter
ja
mov
popf
mov
xchg
movsl
push
ret
push
or
mov
and
dec
cld
repnz
xor
mov
cmpb
data16
iret
dec
in
mov
adc
js
add
clc
xchg
imul
jmp
adc
outsl
push
fwait
mov
fildl
cs
adc
xchg
fcompl
or
addr16
push
faddl
repnz
repnz
imul
out
dec
xchg
add
cmc
jg
mov
insl
loopne
mov
push
popa
int
shr
lahf
cmp
jle
ror
iret
in
add
cs
dec
xlat
mov
pop
out
fstl
stos
sub
clc
cld
imul
out
sub
push
repz
rclb
inc
popa
inc
std
pusha
roll
inc
sbb
data16
mov
adc
in
cli
ficoml
jo
and
lret
das
xchg
dec
cmpsl
les
mov
inc
mov
fldenv
js
lods
and
call
movsl
add
test
inc
adc
and
ljmp
push
mov
or
and
push
jo
fs
shll
scas
mov
xchg
xchg
cmc
jle
add
fidivrl
push
or
scas
xor
sbb
add
ficoml
leave
jl
jl
or
mov
inc
mov
stos
or
push
cmp
insl
xlat
insb
mov
es
cmpsb
mov
outsl
loopne
call
cmpsb
sbb
subl
push
pop
dec
adc
clc
jle
iret
adc
mov
cmc
fisubrl
sub
push
addb
lahf
push
sub
or
mov
stos
into
hlt
fs
jmp
add
pop
xchg
pop
mov
fstl
loope
insb
mov
mov
dec
push
push
mulb
cwtl
cmpsb
ret
je
or
add
cmp
mov
mov
cltd
out
inc
sbb
jle
in
stos
sub
cli
cmp
loopne
icebp
in
xor
pop
test
stc
push
sub
dec
sbb
enter
mov
adc
sub
outsb
push
les
inc
add
pop
movb
push
mov
sub
sub
ljmp
in
jl
jae
inc
jae
lret
insl
nop
mov
cmpsl
xchg
lret
mov
movsl
clc
push
mov
inc
adc
sbb
bnd
push
rorl
add
mov
or
stc
lidtl
dec
push
int
mov
popa
clc
lea
inc
and
mov
fwait
jl
rorl
stos
dec
dec
or
neg
nop
cmpsb
jo
mov
sbb
add
dec
jmp
mov
std
jecxz
test
mov
xor
push
inc
in
sti
or
xor
ret
sbb
out
or
push
std
push
push
xor
and
pop
jl
and
daa
push
dec
jbe
xchg
sub
fisubrs
or
mov
jo
jle
hlt
mov
sub
push
xchg
jl
popa
iret
dec
jnp
xchg
push
in
add
cmc
std
lock
shrl
fsubl
ja
lods
fidivrl
js
mov
andb
stos
pop
in
push
xor
mov
push
ret
sbb
sbb
mov
pusha
mov
sub
js
into
scas
mov
aad
and
gs
add
xorl
addl
aaa
fsubl
js
adc
inc
shll
bound
out
xchg
pop
les
fidivrs
cmc
inc
in
bound
in
sbb
loop
les
xor
dec
outsl
sbb
jbe
pop
clc
pop
subl
data16
je
xchg
cltd
mov
mov
sub
lret
add
xchg
lret
popa
scas
nop
push
insb
loop
ret
pop
arpl
frstor
ljmp
dec
adc
shl
xchg
dec
sub
std
rcrb
mov
push
and
xorb
cmp
dec
push
rcrl
pusha
push
repnz
aad
int
scas
cwtl
cmp
lahf
cmp
jns
push
and
cmp
cmpsl
andl
push
cmp
mov
rcrb
and
in
sub
push
mov
repnz
xchg
das
enter
movsb
call
fists
test
test
push
sbb
cli
and
movsl
std
cmp
inc
enter
faddl
js
notl
push
sarb
xchg
enter
clc
jb
jmp
pop
sub
pop
or
add
jns
push
xchg
inc
jp
push
pop
mov
in
jl
mov
push
push
pop
loope
push
xchg
jmp
adc
pop
mov
adc
aas
mov
and
mov
mov
sub
mov
pop
sti
pop
jl
inc
dec
pop
jns
add
loope
sbbl
outsb
cmpsb
and
xor
and
dec
out
pop
xchg
addr16
orb
incb
mov
repz
push
jg
pop
jae
mov
fisubs
pop
push
clc
sbb
mov
xchg
cmpsb
shlb
sub
stos
xor
pop
out
rclb
into
imul
ret
loop
jbe
mov
sub
dec
out
mov
pop
in
push
adc
pop
jae
lret
or
inc
push
sbb
js
mov
mov
dec
inc
inc
dec
es
push
jg
cld
lret
gs
insb
xchg
adc
jnp
inc
ja
or
int
dec
cmp
out
pusha
cmp
mov
das
outsl
xor
into
adc
out
mov
xchg
icebp
popa
xchg
and
dec
inc
loop
cwtl
in
cmp
or
std
mov
cmp
push
xchg
cli
cmpsb
mov
jl
aas
pop
dec
add
xchg
stos
xchg
dec
bnd
pop
add
imul
lods
mov
add
dec
stos
ljmp
xor
arpl
xlat
in
lahf
jnp
xlat
mov
testl
mov
mov
mov
mov
push
push
rcrb
mov
jae
pop
or
gs
imul
jp
jle
xlat
stc
dec
push
sbb
jbe
add
lret
sbb
out
out
fisubs
mov
loopne
xchg
das
and
inc
cmp
sub
jo
mov
push
lea
shrb
mov
jmp
mov
test
js
mov
add
adcb
xor
mov
push
xchg
in
stos
dec
cwtl
and
or
xchg
jno
or
adc
lret
out
sete
shll
mov
lcall
cmp
shl
sub
jb
sbb
jecxz
jmp
cmp
sbb
pop
inc
aad
mov
inc
mov
std
fwait
pop
popa
inc
pop
daa
push
jle
xor
mov
les
in
pop
mov
xchg
mov
enter
add
push
fadds
fcmovne
sbb
mov
cmc
jge
jmp
mov
mov
mov
add
aad
ds
outsl
jg
dec
mov
rcl
jns
mov
jmp
pop
call
push
push
dec
inc
and
ds
jmp
sbb
xor
imulb
dec
into
lret
mov
add
pop
cs
add
sbb
dec
pop
xchg
cmc
add
filds
in
jne
pushf
push
ds
shll
inc
xchg
pop
pop
mov
inc
cmpsb
lea
sarb
mov
or
in
pop
jb
cwtl
pop
adc
leave
push
popf
std
sbb
insl
int
jnp
jmp
xor
sub
into
or
mov
xchg
dec
stc
fmull
inc
add
push
test
mov
nop
dec
push
push
fs
dec
mov
mov
lods
repnz
push
out
repz
shll
pusha
in
aad
inc
mov
inc
sub
sbb
fnstcw
mov
movsl
gs
ret
cld
fwait
arpl
xor
iret
pop
in
cmp
lret
and
imul
ffree
fsubrl
lcall
inc
sub
out
xchg
or
js
ja
cli
sbb
std
mov
iret
or
inc
xchg
mov
or
cmp
inc
subl
ret
mov
cmp
gs
mov
fldt
mov
push
shl
push
in
out
addb
push
icebp
movsl
adc
setne
test
out
icebp
dec
out
push
push
mov
gs
mov
xchg
lock
and
in
ss
and
sbb
or
and
add
dec
push
testb
mov
shrb
inc
pop
jne
mov
inc
cmpsl
stos
loopne
mov
test
cmpsl
mov
cmp
fisttpl
cmp
mov
mov
icebp
cmp
repz
sub
sub
lods
je
mov
add
cmp
mov
push
shl
or
fstpt
aas
inc
ficoms
mov
repnz
pop
mov
lret
pop
hlt
xchg
mov
rclb
or
pushf
out
addr16
jo
pushf
mov
xor
mov
mov
inc
ret
out
push
mov
addl
pop
stos
icebp
std
stos
xchg
stos
or
je
in
push
mov
pop
lea
pop
and
lea
test
mov
pushf
insb
and
mov
mov
inc
add
mov
or
leave
mov
clc
sahf
push
or
cmp
pop
imul
notb
inc
ficoms
movsb
test
xchg
shl
jp
mov
lret
jg
or
add
mov
push
mov
stos
mov
scas
lret
jecxz
arpl
out
or
pop
adc
add
pop
loop
scas
cld
outsb
leave
mov
imulb
mov
dec
jmp
push
xlat
out
xor
cltd
xchg
lret
inc
shll
popa
sub
nop
mov
inc
add
cmc
loop
jl
push
adc
inc
cmc
mov
mov
into
or
push
push
jns
out
in
dec
jb
push
das
mov
push
inc
cmp
mov
inc
mov
xchg
mov
into
lods
or
cmp
mov
inc
inc
scas
in
cvtps2pi
push
mov
or
mov
stc
ljmp
lcall
ret
sbb
jne
enter
xchg
in
xchg
das
add
mov
not
add
clc
das
push
cmp
pop
mov
adc
or
mov
pop
cwtl
mov
iret
add
out
mov
cld
inc
cmpsl
inc
sbb
cmc
out
repnz
jne
mov
xor
cltd
adc
popf
cmpb
aad
sbb
xor
adc
loopne
stc
lcall
mov
mov
mov
ljmp
mov
cmpsb
pop
mov
fwait
push
in
jns
dec
push
clc
adc
jecxz
daa
hlt
rorb
rorb
mov
call
mov
xor
aad
ja
lods
or
push
pop
xor
je
dec
cmp
mov
xlat
in
gs
jmp
dec
iret
aas
xchg
mov
cmp
out
sahf
pop
mov
jo
mov
cmp
repz
stos
cmp
jecxz
mov
mov
xlat
ret
mov
pop
imul
imul
pop
mov
enter
ud1
leave
ss
fldcw
mov
mov
add
mov
mov
pop
in
add
push
mov
js
mov
inc
and
aaa
jp
rorb
in
cwtl
xchg
jg
push
rolb
out
pop
sarb
call
jp
and
mov
xchg
xchg
movsl
inc
mov
bnd
ja
fcoml
cwtl
xlat
mov
fdivl
leave
lahf
fisttpl
cmc
cmc
xor
outsb
xchg
out
ljmp
jg
arpl
or
or
add
pop
pop
ljmp
sub
xchg
add
xchg
jp
iret
ja
mov
adc
sub
rcrl
mov
das
adcl
push
stc
jae
jl
flds
mov
ss
in
dec
shrl
lahf
out
mov
add
and
sbb
outsl
ret
test
mov
xchg
add
adc
aas
insb
test
les
fnstcw
cwtl
add
mov
mov
adcb
in
les
in
ja,pt
fmull
out
mov
cmp
daa
dec
js
dec
jmp
add
and
mov
dec
mov
aam
test
hlt
or
xor
mov
push
test
xor
mov
jns
stc
mov
inc
imul
and
lahf
or
xchg
fmull
cmc
icebp
sbb
nop
sbb
rcll
add
add
jg
xchg
adc
not
stc
jl
repnz
mov
lock
push
cmp
in
std
sub
pushf
fisttps
xor
mov
and
sbb
cmp
jle
push
mov
inc
jecxz
add
fstpl
lea
xlat
push
push
pop
push
cmpsl
inc
stos
mov
iret
xor
lods
push
add
adc
aas
push
les
negb
push
mov
test
add
sbb
aad
in
jno
inc
jns
jne
add
xchg
jb
test
push
inc
pop
sbb
pause
out
xchg
or
pop
cmpsb
dec
lods
out
xorl
push
in
in
sub
iret
dec
movsb
pop
es
lock
xor
pop
fcmovnu
dec
push
mov
mov
push
mov
js
add
lret
outsl
push
pop
das
xchg
push
push
sbb
xlat
adc
fnstsw
xchg
ret
pop
aas
xlat
lahf
cld
dec
nop
xchg
pop
mov
pop
xchg
pop
mov
pop
les
icebp
ja
rcll
movsb
mov
sarb
xchg
sahf
mov
mov
ds
leave
shll
sbb
jge
push
xchg
std
arpl
scas
add
shrl
xchg
xchg
ja
adc
sbb
pop
mov
cld
pusha
push
mov
dec
jb
dec
fnop
inc
lods
mov
add
pop
popf
pushf
fdivrp
inc
mov
test
je
push
cmp
leave
imul
pop
movsb
in
xchg
scas
push
testl
or
sahf
mov
mov
fsubl
mov
shl
mov
sahf
xchg
inc
cmp
lret
cmp
ja
cmc
daa
cwtl
push
jmp
jne
xchg
call
xlat
xor
movsb
and
sub
int
xchg
psrld
shll
bound
movsl
gs
pop
cmpsb
cmp
mov
cmp
inc
adc
and
push
mov
jmp
ljmp
mov
dec
mov
orl
clc
add
sub
push
push
pop
fucomip
push
inc
jae
sub
pop
les
jo
stos
mov
mov
jae
int3
dec
je
popa
or
inc
mov
cmp
out
mov
dec
lret
hlt
movsb
movsl
fldl
fsubp
inc
pusha
xor
out
icebp
in
xor
push
and
cmpsb
out
jmp
ficoml
mov
sahf
mov
jmp
sub
xchg
dec
rcr
xchg
je
mov
insb
outsl
jecxz
imul
fs
and
cmc
mov
jl
pop
inc
ss
fnstcw
mov
sub
mov
pop
dec
enter
adc
add
mov
push
ficompl
pop
sub
dec
das
mov
out
cli
or
add
jns
mov
push
fcompp
rorl
jae
mov
sub
and
ljmp
fisttpll
xchg
xor
sub
std
ds
push
jb
dec
pop
lcall
cmpsb
mov
dec
sbb
lea
notl
jle
adc
shrb
push
mov
das
and
inc
dec
and
push
cmp
pop
cli
rclb
add
imul
dec
in
out
push
repz
negl
fwait
add
test
js
dec
fisubs
jmp
rcll
fistpll
dec
fdivrl
scas
js
cltd
in
xor
xchg
fdivr
or
subl
mov
inc
les
inc
shl
lods
pusha
mov
mov
aad
in
sub
das
xchg
jo
or
inc
mov
jno
popf
lcall
std
jg
popa
fsubs
sub
mov
cli
add
in
int3
cmp
cmpl
rorb
cs
push
mov
gs
loope
jnp
clc
mov
or
inc
fs
movsl
inc
cltd
dec
pop
mov
mov
popa
cwtl
jl
mov
lret
cltd
icebp
mov
pop
mov
das
pop
jne
push
xor
cli
push
xchg
imul
popa
mov
jmp
pop
mov
cmpsw
jo
addr16
or
dec
mov
pusha
pushf
dec
outsb
push
push
sub
adc
call
jmp
das
clc
cwtl
mov
rol
sti
insb
jl
sbb
movq
cmp
sub
pop
nop
dec
sarb
push
add
repz
pop
rcl
or
push
inc
adc
mov
or
shll
mov
inc
shlb
add
imul
js
out
xlat
bound
ret
sub
add
rcl
gs
subl
pushf
sbb
out
adc
mov
push
insb
adc
cmc
sub
loopne
add
cld
mov
push
cmp
dec
dec
mov
aas
push
add
jl
or
push
push
das
dec
addb
ljmp
sbb
inc
pop
les
lods
push
add
jmp
lahf
sbb
cli
int
rol
lods
lods
cmp
xchg
ret
pop
and
loop
push
loop
rcll
jnp
sarb
in
in
rcpps
fld
jl
mov
inc
push
movsl
add
sub
and
xchg
and
icebp
pop
adcb
loop
dec
les
adc
outsl
int3
or
arpl
pop
iret
adc
mov
lret
popf
push
lods
pop
int
mov
or
xchg
popa
lcall
mov
sbb
pop
mov
adc
imul
cltd
les
sub
aad
mov
mov
sub
cmp
test
inc
bound
mov
inc
pop
mov
dec
pop
aaa
pop
daa
in
ds
cmpsl
cs
shlb
mov
xchg
xor
and
mov
mov
ljmp
sahf
jmp
push
jo
outsl
lods
and
aad
shrb
xchg
das
cmpsb
xor
mov
inc
push
insl
inc
fnsave
loop
jne
scas
pop
add
dec
dec
adc
fxam
jge
push
adc
decb
cmp
rclb
pusha
jle
dec
pop
lret
xchg
std
aam
std
lret
fisubrl
out
mov
xchg
sahf
loopne
or
sbb
in
icebp
adc
mov
xor
mull
testb
aam
orb
push
push
dec
or
frstor
cmc
jo
mov
aaa
cmpl
or
in
stc
mov
hlt
dec
pushf
jmp
and
fcoms
call
sub
push
push
jmp
rcrl
mov
and
or
addr16
adc
xchg
pop
aas
enter
ficoms
inc
add
push
adc
cmpsb
add
and
fiadds
inc
xor
sbb
insb
movsl
loop
inc
sbbb
loopne
fdiv
jle
lahf
sbb
and
cltd
push
sub
xchg
icebp
pop
idivl
xor
enter
and
imul
lock
stos
daa
xchg
outsl
cmp
sub
pop
lahf
jp
test
or
in
add
clc
ret
inc
stc
xor
into
repnz
xchg
out
rolb
push
ret
jno
fistpl
insb
pop
nop
adc
xor
or
loope
sbb
ljmp
cs
cmp
sub
movsl
jmp
fidivl
fs
lahf
cld
insl
mov
notl
stc
mov
gs
js
ret
aaa
cs
rorl
jae
lods
push
sub
jecxz
adc
lcall
mov
lea
xchg
pop
add
mov
out
mov
ficoml
and
xor
out
imul
aad
ret
pop
add
dec
movsl
pop
cmp
lds
jb
jle
in
push
xor
loope
pop
aad
push
cmpsl
inc
repz
sub
dec
imul
out
in
adc
add
rorb
outsb
aam
jg
push
dec
loop
dec
loop
lea
cmp
inc
pop
adc
ljmp
stos
add
or
xor
xor
loope
push
adc
int3
test
dec
rorb
inc
push
and
loop
pushf
adc
xchg
movsb
push
mov
and
or
xlat
loope
pop
inc
push
xchg
push
outsb
mov
mov
arpl
fildll
xor
test
cld
push
lea
clc
sbb
or
sub
stc
cmc
or
adc
lcall
les
and
push
jb
clc
sbb
or
loopne
sbb
cmp
mov
in
fsts
movsb
and
cmp
adc
cmp
pop
rcll
cmp
xchg
mov
push
test
sbb
fs
jmp
adc
mov
idivl
mov
ret
cmp
xchg
mov
icebp
insl
and
shrl
push
std
sub
cmp
jo
cmp
adc
push
cs
test
or
in
add
pop
das
mov
sub
ss
lock
cmp
pop
sub
pop
arpl
cmpsb
pop
fisubrs
clc
push
shl
mov
imul
dec
sahf
dec
lahf
inc
cmpsl
adc
xchg
fstps
stos
sbb
pop
popf
push
cmp
sarb
inc
sub
mov
ja
cmp
and
jno
lahf
aam
je
push
mov
xchg
mov
in
add
popa
xor
dec
dec
sbb
sub
lahf
iret
jbe
mov
cli
out
mov
push
pop
inc
pop
pop
and
jo
cmp
lods
or
mov
fsubl
mov
in
cmpsb
mov
test
or
lcall
and
jnp
roll
ja
jo
dec
rclb
mov
xlat
mov
iret
stos
push
push
nop
inc
lock
pop
mov
fwait
je
out
fisttpl
dec
clc
or
outsb
mov
and
sbb
rolb
mov
jnp
aam
mov
lock
xor
cmpb
call
out
mov
scas
shr
cld
insl
iret
rorl
jno
sbb
in
ds
insl
push
clc
xchg
mov
cmp
pop
mov
stos
pusha
mov
pop
popf
inc
push
mov
jbe
ficoms
cwtl
push
cmp
repnz
lret
xrelease
dec
or
adc
sbb
cmp
in
imul
fildll
mov
xchg
jp
jle
scas
or
pop
jp
or
mov
jne
mov
test
dec
std
sbb
inc
push
xchg
mov
xchg
mov
shll
adc
fdivl
adc
adc
and
pop
push
lds
imul
lds
sub
mov
cwtl
shlb
les
add
sbb
and
dec
and
sbb
jo,pn
sbb
jp
cmp
xchg
cltd
or
lahf
push
lods
outsb
dec
mov
sub
pop
jns
cmp
cwtl
mov
cwtl
push
cbtw
loope
inc
negb
jae
out
and
pop
jo
stc
or
and
mov
lock
rolb
loop
out
in
test
jge
push
scas
stos
ja
and
fistps
sub
add
int3
dec
pop
dec
aaa
dec
idiv
cwtl
mov
fsubs
setbe
in
sbb
xor
sub
add
mov
push
adc
inc
and
stc
jl
dec
push
shll
ret
mov
cmp
jmp
call
ja
in
fiaddl
std
sahf
ficoms
xor
pop
test
push
in
das
popa
aad
cmp
mov
mov
dec
jge
ljmp
fdivrl
je
test
xorl
idivb
fbstp
popf
scas
push
mov
jl
mov
adc
iret
pop
movsl
cmp
xchg
lock
cmp
inc
lock
mov
test
sbb
add
ljmp
push
outsl
jo
sbb
imul
hlt
push
xchg
fisttps
xchg
mov
or
hlt
in
iret
test
jecxz
aad
jae
mov
adc
test
arpl
pop
mov
sbb
roll
nop
cmp
in
xor
xlat
jnp
cld
cwtl
xor
or
cmpb
mov
push
repnz
pop
sub
js
mov
sbb
stos
dec
jns
dec
out
push
mov
sbb
or
dec
fldcw
dec
or
sbb
push
in
mov
mov
xchg
insb
inc
aas
aam
xchg
sub
xchg
loope
mov
jo
pop
mov
popa
call
add
cmpl
cmp
imull
daa
into
popf
cmp
mov
arpl
pop
mov
int3
enter
jp
test
xor
rol
push
jg
jmp
cmp
push
cmpsb
or
test
or
insl
add
mov
cltd
notl
push
and
inc
jno
mov
add
insl
ja
mov
and
push
fcomi
imul
pop
jge
int
movsl
aad
sbb
jecxz
movsl
addr16
and
pop
jecxz
ljmp
cltd
ljmp
jp
dec
dec
dec
sbb
jg
movsl
fidivrs
pop
lods
adc
cmp
dec
in
pop
int3
test
jmp
lcall
shlb
cmpsl
jns
dec
mov
pop
lds
mov
lret
cmp
sub
lahf
xor
outsl
std
pop
std
add
outsb
add
mov
je
xor
ja
adc
xlat
arpl
and
jbe
xor
test
add
dec
and
push
or
scas
int3
cmpl
jecxz
adc
xchg
movsb
sbbl
jle
mov
gs
add
mov
mov
cmc
push
pusha
ret
mov
fstpl
mov
andb
and
or
or
test
cmp
gs
hlt
lds
inc
mov
scas
int
sti
push
ss
mov
fs
enter
sbb
cwtl
mov
aaa
push
ret
lret
adc
dec
mov
ffreep
jb
jge
push
bound
push
jo
daa
ljmp
and
fbld
xchg
fstpl
mov
adc
pusha
aaa
shl
pop
xor
inc
arpl
pop
lds
cmp
adc
pushf
pop
jle
inc
mov
cmp
leave
addl
and
adc
out
inc
or
loop
movsl
xchg
jecxz
mov
push
lods
cmp
inc
lods
rolb
push
xchg
jb
mov
and
sub
insb
pop
cli
gs
dec
push
and
push
ret
rclb
dec
xor
pop
cli
dec
repz
xchg
mov
fiaddl
call
sub
lea
or
ja
mov
insb
shrb
aam
add
imul
and
insb
or
dec
xor
push
shll
test
jo
in
or
mov
lods
cmp
mov
adc
inc
lods
mov
mov
add
add
cmc
or
or
dec
pusha
sub
fadds
jle
clc
add
mov
shlb
sub
mov
std
iret
sub
scas
shrl
mov
and
test
lahf
mov
sbb
es
push
pop
fistps
je
test
xchg
ds
or
xchg
ljmp
stc
or
push
xchg
clc
and
lea
push
fists
inc
push
arpl
sti
or
ds
jno
sbb
pop
or
outsl
test
pop
test
clc
rcrl
fmuls
adc
mov
pop
pop
inc
mov
in
mov
icebp
lret
push
inc
cmc
test
jge
fisttpl
xlat
shrl
mov
or
cmpsb
push
or
sbb
mov
push
insb
ret
xor
shrb
mov
jno
movsl
jecxz
mov
decb
jne
add
and
mov
fsub
scas
data16
cli
inc
push
inc
jbe
lcall
jne
loopne
in
pop
xor
ror
clc
mov
loop
je
mov
int3
je
lahf
cltd
sub
nop
repnz
adc
ljmp
mov
sbb
into
rclb
pop
sub
mov
sbb
mov
sub
cmc
lret
sti
mov
sbb
js
pop
push
inc
lret
push
ds
pop
cwtl
pusha
xchg
mov
call
push
mov
lock
hlt
cmpsl
addb
pop
out
sub
inc
and
xor
lret
and
and
sub
aad
or
ja
lret
add
aaa
lret
mov
xchg
mov
mov
sbb
cltd
push
inc
js
adc
push
ds
mov
jb
push
cmc
cmpsl
scas
xor
mov
sub
mov
imul
imul
pushf
jl
sahf
inc
jne
mov
add
jecxz
mov
dec
push
insb
sbb
pop
pop
jg
fwait
push
mov
or
xor
adc
mov
rolb
mov
movsl
leave
cwtl
push
or
mov
fincstp
inc
jmp
jne
icebp
xchg
scas
pop
cmp
xor
es
cmp
inc
adc
aaa
outsb
push
xlat
mov
push
lods
out
cmp
js
fistpl
pop
test
or
rcrb
add
jo
mov
mov
repnz
push
xor
adc
push
push
ret
mov
cli
std
push
jbe
shrl
popf
cld
outsb
cmp
int3
pop
push
and
jp
mov
psubb
aam
mov
int
fadd
call
cmp
xchg
in
in
push
inc
jno
lods
mov
bswap
pop
hlt
ficoml
fisubs
push
aaa
xlat
push
insl
lock
out
xor
dec
imul
xor
mov
movsl
clc
mov
and
dec
pop
cs
add
cmc
mov
ret
pop
jae
movsl
xchg
cmp
xor
adc
in
dec
negb
dec
movsb
mov
mov
test
sbb
call
sub
not
add
test
jno
jp
enter
es
adcb
jb
subl
and
push
jp
mov
push
xchg
jno
mov
mov
or
stos
scas
sub
pop
and
lods
lods
imul
sbb
std
mov
aam
stc
push
fadds
jb
xchg
shrb
fcoms
mov
repz
shl
pop
sti
jo
icebp
push
pop
mov
out
fsubrs
jo
push
leave
fistl
push
jge
cwtl
dec
adc
xchg
jb
mov
and
mov
stos
jo
imul
ret
jnp
shufps
add
add
adc
jecxz
inc
mov
or
add
adc
sbbl
ds
fstps
nop
xor
dec
ljmp
add
fimull
cli
jno
push
das
cmc
pop
dec
xor
adc
out
dec
das
push
inc
sarb
divl
jb
inc
add
sbb
mov
insb
lds
xchg
inc
leave
cltd
jno
sbb
xor
xchg
xchg
or
das
repnz
fldl
xor
push
enter
xchg
mov
test
xor
scas
jnp
and
repnz
inc
insl
inc
inc
lahf
adc
and
fisttpl
aad
mov
mov
mov
adc
imul
pop
aas
lcall
into
add
push
xchg
clc
cmp
sbb
ret
add
inc
insb
bound
incl
aam
adc
test
sbb
inc
mov
mov
sti
test
adc
mov
iret
xor
jg
cmp
pop
mov
jge
test
push
mov
or
sbb
cmc
in
rcl
leave
movsl
das
std
movsl
in
xlat
iret
push
mov
push
cmpsl
iret
ljmp
cltd
cmp
ret
lods
push
lods
int
inc
jae
rcrl
add
fidivl
push
loop
fcoms
add
push
daa
add
cmpsb
push
push
dec
scas
xor
shrw
fucom
push
ror
inc
mov
push
loop
sbb
xchg
and
push
sbb
imul
out
and
test
sbb
cli
shlb
cmpl
mov
aad
mov
mov
dec
ss
lods
andb
movsl
xchg
test
leave
int3
inc
test
mov
mov
out
add
js
stos
adc
and
adc
mov
fidivrs
cld
adc
bound
divl
lock
cmp
inc
xchg
jmp
inc
or
imul
push
scas
push
popa
test
push
mov
sbb
ret
test
mov
in
stos
cmpsl
pop
xlat
mov
push
in
setl
adc
jecxz
outsb
add
push
in
xlat
xor
testb
fisubrl
lret
jns
fisubrl
loopne
sbb
scas
jne
rolb
and
lret
push
push
test
pop
jmp
cmp
adc
jmp
out
or
test
data16
test
aad
mov
push
jnp
xlat
mov
or
gs
enter
push
je
nop
push
aaa
out
pop
xchg
mov
sbb
xor
xchg
push
mov
cmp
inc
xor
inc
fwait
std
push
js
pop
loop
or
popf
mov
subb
or
cmpxchg
arpl
sub
pop
aaa
movsl
in
inc
lds
in
dec
add
sub
mov
pusha
xor
add
add
pop
sbb
mov
add
or
mov
jl
arpl
mov
or
addr16
int3
sub
cmp
insb
nop
jg
fucomi
dec
popf
pop
cmp
sbb
add
sub
rcrl
cs
aaa
jp
aaa
xor
pop
and
inc
adc
andps
movsl
roll
xor
mov
dec
test
in
test
inc
add
lret
sbb
xchg
and
mov
dec
jbe
test
imul
pushf
leave
mov
scas
sub
pop
dec
hlt
xchg
subl
jmp
out
sub
pop
mov
xchg
jns
cltd
add
das
adc
jnp
jae
xor
mov
popf
mov
mov
fistpll
mov
mov
xchg
test
nop
movsl
sub
cs
inc
in
mov
add
mov
mov
and
sbbl
in
dec
jge
ss
lahf
shrl
xor
inc
out
sti
xchg
push
test
gs
pop
out
and
push
push
jmp
stos
repz
mov
scas
andb
lcall
pop
adc
jnp
mov
xchg
fcomps
sub
ret
push
bound
fnsave
aaa
in
negl
sbb
lea
lock
out
pop
cs
sub
xor
push
mov
icebp
adc
aam
push
dec
ret
addr16
rcrl
xchg
pop
scas
mov
movsl
add
sbb
ret
leave
mov
sub
jmpw
mov
mov
jl
and
outsb
cmp
aaa
fisttpll
push
mov
pop
pop
repz
aas
and
cmc
outsb
adc
aam
dec
mov
imul
mov
pushf
sti
cmp
pop
movsl
pcmpeqd
fsts
adc
xchg
sbb
and
imul
scas
std
lcall
push
mov
test
adc
imul
mov
enter
cli
stc
stc
push
les
lret
sbb
push
ds
fisttpl
mov
adc
or
xor
xor
and
lahf
lahf
in
insl
pop
rcrl
lcall
aas
loope
ss
push
data16
pop
and
lea
jo
insb
or
pop
jmp
xchg
or
mov
fcomp
push
mov
pop
jne
repnz
sub
je
scas
aad
loop
shlb
in
lock
mov
jnp
and
je
out
cmp
xor
or
ljmp
mov
nop
int3
or
inc
mov
pusha
imul
adc
jecxz
dec
sub
mov
push
cmp
pusha
shrb
xor
sahf
xchg
jns
notl
dec
mov
mov
mov
inc
xor
test
loopne
enter
test
cmp
rol
outsb
lea
test
mov
popa
pop
xchg
and
scas
lock
lods
jnp
add
xor
imul
test
mov
pop
cmp
in
mov
incl
ja
push
les
cmpsl
push
inc
dec
mov
mov
or
out
sbb
popf
and
stos
mov
xchg
adc
inc
rolb
call
cmc
sbb
popw
imul
push
movsb
pmulhuw
shlb
imul
or
sbb
jl
sub
rol
jnp
lahf
and
fcompl
pop
out
aas
clc
adc
nop
mov
add
lods
movsl
sbb
loope
lahf
cmp
push
jb
int3
push
dec
mov
xchg
jp
or
push
mov
int3
sub
xor
mov
lods
enter
jmp
mov
fidivl
inc
dec
fmull
out
notb
hlt
movsl
jb
in
les
or
xchg
data16
popf
jne
mov
or
loopne
cmc
mov
movsl
movsb
repnz
out
mov
pop
out
dec
fyl2xp1
lea
test
rcrb
cmpsb
pop
ss
repz
negb
mov
fdivs
ds
ljmp
cwtl
dec
inc
test
dec
add
xchg
scas
mov
sti
or
adc
nop
push
jecxz
fs
mov
xchg
pop
mov
pop
mov
cmpsl
xlat
dec
inc
inc
mov
nop
and
xor
rcll
outsl
cmp
ffree
adc
xchg
fs
pop
imul
push
lods
daa
inc
adc
add
cmp
sbb
sub
xor
movsl
scas
fisttps
push
pop
imul
into
insl
cmp
pop
inc
lret
imul
pushf
shrb
mov
imul
sbbb
loop
shll
add
and
jnp
dec
add
mov
push
inc
jmp
out
xlat
cmpl
scas
js
xchg
dec
add
das
and
xor
mov
cli
jp
vmovaps
add
insl
sub
loop
cld
xchg
and
pop
mov
push
mov
cmc
sbb
ss
push
mov
dec
jbe
push
idivl
stos
add
cmp
ret
lods
pop
mov
push
xlat
sub
fiaddl
push
stc
aaa
pusha
movsl
add
scas
pusha
insb
inc
push
int
pushf
ret
inc
cltd
adc
das
pop
and
lret
mov
subb
xlat
scas
jae
int
cmp
inc
cmpsl
scas
pop
rcrb
rcrb
hlt
lds
push
jl
ja
cmp
mov
dec
xchg
aad
or
xchg
sbb
push
mov
inc
test
push
test
fwait
xchg
adcb
lods
adc
ret
sahf
add
mov
mov
shrl
xchg
in
inc
push
pusha
outsb
ljmp
push
xor
sahf
lods
jbe
pop
pop
inc
outsl
aas
mov
xchg
pushf
leave
sarb
inc
jecxz
cmp
add
lret
enter
scas
pop
pushf
adc
gs
inc
jp
sbb
ficoms
inc
adc
jo
adc
fcompl
mov
icebp
pushf
lods
push
push
push
movsb
decb
sub
cmp
pop
loop
mov
test
subl
inc
pop
mov
cli
sub
sbb
xchg
pop
jo
push
in
pop
stos
pop
mov
mov
inc
push
dec
mov
cld
xor
cltd
movsl
or
sbb
mov
fnsave
mov
push
fstps
xchg
jb
jno
aas
sbb
ret
inc
lock
ret
mov
sahf
js
sub
inc
pop
and
lahf
daa
jo
int3
and
or
and
mov
push
jge
xlat
push
jbe
insl
adcl
rcl
jmp
call
loope
inc
push
loope
sti
jle
sbb
ret
sub
cs
adc
push
js
fcomip
xchg
push
jae
or
inc
xor
mov
push
mov
inc
jb
fwait
aam
xor
es
nop
outsb
int3
push
insl
out
jae
ds
mov
cs
jmp
ljmp
scas
sub
das
das
mov
nop
test
aad
imul
movsb
or
sub
stos
and
repz
or
aaa
or
stos
in
ja
cmc
xchg
call
ss
lcall
int
fs
leave
mov
mov
add
out
inc
push
cmpsb
pop
ret
movsb
adc
cwtl
pop
xchg
push
pusha
movsl
xor
ret
jnp
sub
jne
mov
mov
mov
lods
aas
mov
add
outsb
mov
icebp
shl
mov
pop
mov
mov
leave
mov
lcall
jnp
in
dec
jae
sub
subl
mov
cs
in
jecxz
int
pop
add
fnstsw
fimull
sahf
sub
out
cmp
rcrb
pop
lret
push
loop
cmpsl
sub
mov
cmova
stos
negb
shl
fistpl
mov
fs
adc
xor
pop
add
pop
add
pusha
pop
int
jp
xor
push
cmp
xor
aad
sbb
sub
adc
mov
xchg
rorl
lahf
fwait
xchg
fmuls
sub
push
sti
movsb
shl
scas
iret
je
int3
mov
xchg
fs
outsl
push
xchg
fmull
or
cli
xchg
icebp
and
sbb
mov
xlat
in
xchg
repz
sbb
popf
push
inc
push
sub
inc
std
mov
pop
shll
jbe
das
in
mov
dec
mov
jp
pop
and
xor
fistpll
enter
add
popl
fbstp
inc
jp
jl
xchg
inc
pushf
popa
loopne
sub
inc
and
push
mov
cmp
inc
adc
inc
pusha
aaa
das
xor
xchg
roll
test
add
mov
fistl
add
pushf
pop
or
les
rorb
nop
xlat
cwtl
sbb
idivl
cmc
jnp
mov
push
pusha
fwait
test
lret
orb
cmp
push
cmp
mov
adc
xor
push
mov
xchg
adc
adc
test
rcrb
mov
imul
add
and
sbb
push
or
fcoms
dec
mov
scas
push
cmp
cmp
jae,pn
lahf
cmp
jo
test
sub
notl
sbb
sub
cltd
sub
cmp
jae
sahf
imul
adc
enter
cmpsb
lock
push
pop
loop
mov
fcmovu
push
mov
mov
in
int
sbb
fildll
jge
rolb
xor
cmpsl
inc
out
pop
xor
fldl
adc
fsubl
subb
mov
sub
mov
shl
rorl
ja
int
lret
push
int
inc
imul
movsb
outsb
imul
out
sub
out
lods
popf
pop
les
lds
shrl
cli
xorb
aas
xchg
mov
movb
pop
into
outsl
sub
mov
shll
inc
daa
mov
lds
loope
fmull
fwait
cmpl
or
inc
jo
cmp
mov
loopne
ficoms
cmp
xor
jbe
sbb
jle
ss
push
xchg
dec
dec
pop
dec
clc
filds
xchg
adc
fwait
mov
jmp
std
les
jne
mov
cld
popaw
push
subl
cwtl
int3
data16
cmc
fildl
or
cmpsb
fcmovu
cmp
outsl
adc
cld
pop
in
push
or
int
out
add
cmpsl
shrb
fnsave
shrb
sbb
aas
loopne
cmp
mov
xor
jmp
pusha
jp
ljmp
xchg
push
arpl
cs
aam
push
dec
jecxz
cmp
leave
add
fisttpl
les
xor
fildll
into
daa
dec
adc
or
lret
adc
xor
je
adcl
stc
insl
movsl
push
mov
mov
in
mov
jge
loope
push
mov
sub
int
adc
jecxz
xchg
std
jno
xchg
jb
les
and
jne
mov
cld
dec
fdivrl
pop
cmp
and
push
lods
mov
callw
pushf
cmpsl
mov
mov
mov
push
mov
sub
imul
test
and
scas
inc
out
loopne
jge
mov
push
adc
je
adc
in
inc
cmpsl
cmp
shrb
test
test
fnsave
idivb
in
pop
push
cmp
push
loopne
push
mov
mov
pushf
scas
test
je
jne
jl
xor
mov
stc
enter
xlat
clc
mov
ljmp
filds
xchg
or
aaa
in
mov
dec
cmpsl
jl
lahf
stos
push
je
scas
dec
dec
mov
mov
sbb
sub
xor
push
sahf
dec
mov
ds
arpl
loopne
cli
xor
jmp
inc
mov
pop
pop
std
and
xchg
cmp
mov
cmp
xor
jne
add
mov
shll
pusha
jne
push
lea
cmp
mov
stc
in
inc
sarl
mov
out
adc
lcall
std
les
mov
sub
jne
or
sub
std
arpl
test
fs
scas
pusha
inc
xchg
out
cwtl
mov
jg
mov
imulb
jb
movsl
pop
lahf
movsl
inc
lds
ss
adc
dec
leave
inc
mov
sar
push
das
inc
aaa
push
xchg
test
movsb
push
call
out
rolb
add
push
inc
enter
pop
jg
imul
ss
jbe
les
out
and
sti
inc
cmp
ss
sub
push
notb
sbb
push
imul
scas
mov
cmp
bound
pop
mov
cmp
sub
adc
jns
xor
int
sbb
mov
stc
xor
jae
jne
jp
jnp
mov
xchg
inc
mov
imul
test
jp
cmp
jmp
inc
and
inc
shll
addr16
and
dec
stos
fistpl
das
push
add
lds
pop
insl
iret
stc
insl
rol
lock
cmpb
or
loop
lods
or
cmp
cwtl
mov
call
pop
or
gs
movsl
mov
arpl
cmp
out
popw
xchg
pop
jle
fcompl
inc
pop
mov
lods
push
movsl
enter
mov
jp
bound
lea
mov
jg
scas
push
aas
in
xor
orl
pop
or
sbb
jb
mov
rorl
test
push
cmpsl
pop
fwait
leave
movsb
inc
sbb
rcrl
mov
pop
mov
inc
dec
lret
sub
pop
test
cwtl
jnp
xchg
enter
and
or
outsl
filds
aas
pop
pusha
cwtl
jbe
cmc
add
mov
in
fisubs
jl
push
mov
push
fs
dec
xchg
sbb
ds
rcl
or
stc
lds
sub
adc
fwait
jbe
or
sub
dec
sbb
sub
mov
add
ljmp
sbb
inc
rcrb
cmc
je
pop
push
mov
mov
inc
sbb
cmp
jl
sbb
sbb
cld
int3
jae
jb
cmp
int3
cwtl
repnz
inc
rcrb
dec
jmp
xchg
fimull
cltd
jecxz
imul
sub
jmp
add
enterw
ds
shlb
cmpsl
inc
out
pushf
add
mov
or
xor
inc
adcb
push
mov
and
inc
sub
repnz
mov
or
mov
out
xchg
test
and
cmc
std
daa
xchg
ret
cli
scas
shll
in
jmp
sbb
scas
nop
lret
add
mov
mov
ja
imul
inc
xor
xchg
push
fmuls
xchg
dec
dec
mov
cs
sub
pusha
pop
cmp
inc
int3
add
nop
sub
mov
jae
xchg
mov
mov
pop
into
repz
mov
mov
jge
or
mov
push
mov
fwait
sbb
jbe
js
js
hlt
out
xor
mov
mov
outsb
and
and
sub
adc
adc
mov
scas
and
adc
mov
pop
popf
push
imul
push
adc
test
push
inc
add
mov
push
mov
cltd
sti
xor
data16
mov
daa
or
xor
rorb
and
out
xchg
mov
push
lret
cwtl
add
ljmp
push
fsubp
push
add
pop
sbb
subb
jb
mov
lret
nop
in
imul
sub
or
inc
loop
push
das
loop
fdivrs
mov
divb
data16
or
lods
ror
lret
mov
adc
jg
push
fdivrs
test
pop
push
dec
mov
xchg
fdivrl
subb
push
xchg
mov
pop
adc
xor
cmp
sub
insb
or
mov
dec
pop
adc
mov
push
xchg
cli
ss
cmpsl
mov
pusha
mulb
jl
arpl
lea
aad
push
mov
outsb
fcmovbe
mov
dec
jl
pop
jb
movsl
push
xor
cltd
push
es
das
lds
popa
cmc
fstp
jp
mov
mov
icebp
mov
filds
aam
aad
fwait
rcrl
out
xor
and
repz
jns
iret
lahf
fistl
or
std
jp
push
in
push
mov
jnp
mull
in
rcrl
cli
xchg
ja
push
xor
pop
ljmp
shrb
int
sub
shrb
xchg
jae
lods
sarb
inc
imul
sahf
test
mov
push
pop
les
mov
rol
lods
enter
jmp
inc
mov
sahf
push
jp
popf
fs
dec
xorb
jle
imul
repnz
dec
mov
xchg
xor
inc
push
or
insl
pop
aaa
push
inc
scas
xlat
cmp
mov
pop
sti
cli
popl
mov
popl
push
mov
mov
mov
cmc
cmp
inc
test
adc
sbb
sarb
xchg
cmp
push
dec
aas
and
pop
add
adc
sbb
pop
test
pop
cmp
stos
fwait
inc
and
push
ja
in
mov
pop
movsb
outsb
das
inc
mov
jmp
mov
sub
mov
mov
lahf
add
lahf
ds
cmp
mov
lds
ret
popa
mov
add
popf
lds
pusha
stos
jle
or
inc
mov
push
add
inc
sbb
or
ja
and
stc
ficoml
push
jle
and
cmp
scas
data16
push
xchg
jp
or
data16
scas
mov
mulb
shrl
push
in
insl
sbb
int
jle
rorl
adc
push
pop
stos
xchg
sahf
stc
and
fidivs
or
fwait
push
mov
mov
fisttpl
push
arpl
push
pop
js
sub
imul
xor
in
push
hlt
inc
jmp
push
mov
push
lds
fucomi
push
xchg
test
pop
test
out
jge
jl
rclb
stos
andl
insb
int3
nop
xor
inc
xchg
mov
pushf
inc
sbb
fdivrs
adc
cmp
fildl
pop
mov
or
fmulp
sbb
loopne
jns
mov
add
lcall
jle
scas
into
cmpsl
outsl
pop
or
cmp
shrb
or
aaa
push
jmp
sahf
adc
lods
aam
mov
imul
jns
pop
int
jnp
das
xlat
mov
adc
leave
pop
jg
into
xchg
mov
push
jno
int3
popf
xor
pop
das
vpunpcklwd
xchg
add
or
sub
push
xchg
sub
je
lahf
cltd
cmp
loop
out
dec
and
cltd
jo
loope
xchg
pop
add
pop
cmp
sbb
lret
outsb
adc
mov
aaa
insl
adc
push
insl
das
ss
dec
xor
sub
loope
dec
pop
dec
sahf
out
rcl
enter
fs
int
in
lahf
sub
mov
in
sbb
loop
fiaddl
movsb
test
das
jg
mov
mov
mov
fidivrl
jecxz
stc
xor
test
jnp
push
mov
clc
dec
add
pusha
adc
inc
cmp
lcall
lahf
add
mov
sbb
sbbl
sbb
fdivs
out
test
fsubl
cs
ret
das
pop
movsb
sub
jecxz
callw
xor
adcl
jecxz
sub
in
inc
mov
xchg
stos
push
sbb
rorl
dec
fcoml
inc
lcall
cld
mov
daa
sub
out
or
leave
std
add
add
call
clc
cmp
or
stc
xchg
sti
cmpsb
data16
mov
push
lcall
aam
ret
jbe
adc
aaa
cmp
pop
js
inc
inc
jmp
dec
pop
inc
aas
dec
jp
mov
sbb
aad
add
movsl
mov
sahf
sub
sahf
sbb
cmp
add
sub
and
in
jp
inc
iret
push
mov
js
movsl
pusha
xor
xchg
aam
movntps
repnz
push
sbb
pop
or
mov
enter
sbb
cmp
in
mov
pop
cmpl
inc
adc
inc
lahf
jg
in
aas
pop
mov
xchg
jmp
in
add
dec
in
leave
dec
mov
fstp
or
daa
xchg
outsb
cmpsl
nop
jle
scas
ds
clc
aaa
nop
or
jne
testl
repnz
and
fcoml
loopne
faddl
bound
mov
sbb
cltd
mov
iret
sbb
sti
repnz
fsts
bound
pop
push
jmp
sub
jne
mov
pop
push
cmpsb
test
add
add
jmp
and
or
and
dec
sbb
jmp
pop
fwait
hlt
popa
jge
aaa
imul
jo
in
and
cmp
cltd
mov
sub
ss
in
or
shrl
pop
push
pop
inc
and
sub
fistps
sub
enter
into
inc
lods
cs
pop
push
lea
popa
inc
insb
xchg
mov
in
jne
hlt
xchg
and
cmpl
push
mov
push
int
shrb
das
aas
sar
sahf
jg
mov
scas
xor
add
push
les
hlt
sar
icebp
mov
lock
rolb
movl
outsl
movsb
std
in
je
lock
xor
mov
into
push
dec
es
xchg
sbb
shrb
dec
sbb
sub
int3
pop
movsb
pop
fisttpll
test
enter
push
mov
ret
es
mov
xor
jl
mov
popa
faddl
cmp
jmp
mov
flds
jb
int
push
xor
sub
outsl
int
lock
or
insb
pop
sahf
push
out
xor
cltd
aas
loop
adc
insl
sahf
addl
int
mov
loopne
mov
xchg
sbb
lock
jno
popf
dec
cmp
mov
jno
inc
adc
pop
into
int3
pop
jmp
cmpsb
fadds
mov
fnstsw
pop
nop
pop
sbb
xor
jae
dec
sub
add
loopne
outsb
mov
mov
jnp
test
aaa
dec
jno
dec
or
popf
sub
mov
jge
xor
loope
scas
pushf
and
and
pushf
leave
lret
stc
adc
cmp
arpl
cmp
test
std
sti
mov
popa
enter
std
cmp
or
sbbl
cld
sub
popa
mov
mov
std
lock
out
sub
stos
in
pop
jge
stos
roll
pushf
test
std
testl
ret
jne
push
xlat
mov
inc
push
mov
addr16
sarb
in
mov
mov
mov
in
and
mov
jp,pt
or
add
push
loop
and
rol
pushf
add
mov
sub
mov
fwait
jge
shrb
in
cmp
mov
sbb
out
icebp
into
aas
add
je
mov
fimull
jmp
xchg
mov
push
test
out
fcomps
add
pop
inc
mov
sarl
sub
je
lcall
adc
jns
push
lods
cmp
filds
mov
fistps
jecxz
imulb
imul
scas
sbb
das
test
mov
test
out
out
repz
xchg
push
mov
pop
inc
lret
lret
fisubrl
and
mov
pop
insl
cmpsl
pushf
cli
mov
popf
ss
adc
lret
stos
dec
xor
dec
loopne
add
mov
enter
out
mov
shll
fisubl
mov
sbb
push
sbb
lretw
inc
xchg
fcmovne
subb
cli
cld
and
push
ja
dec
data16
dec
pop
or
mov
dec
movhps
data16
add
test
in
mov
scas
mov
jb
pop
es
dec
and
in
mov
repz
lea
push
jge
mov
call
push
pop
cmp
or
inc
and
mov
rol
bound
jns
adc
jae
scas
push
push
pop
insb
out
insb
inc
fiaddl
pop
xchg
xchg
push
stos
js
jae
push
ljmp
mov
cmpsl
mov
jns
in
jl
ret
sbb
movaps
mov
subps
mov
sub
fisttps
loop
pop
xchg
adc
fdivrs
movsl
shll
cld
mov
ja
mov
adc
push
adc
adc
fwait
dec
xchg
nop
ret
jbe
or
enter
mull
adc
stc
xchg
stos
test
enter
mov
movsl
xchg
jne
popf
mov
or
pop
adc
add
insl
fisubrl
inc
out
ds
sahf
shlb
ljmp
fmul
popf
cmc
mov
pusha
jnp
out
mov
or
push
xor
jbe
shl
cmpsb
sbb
mov
xchg
lcall
push
cli
scas
int3
je
sbb
mov
rolb
hlt
test
pop
pop
pusha
add
inc
push
shr
push
je
mov
icebp
dec
adc
xchg
cmp
cmpsl
repnz
adc
lcall
andl
es
ret
adc
add
leave
out
sbb
das
imul
pop
ljmp
push
cwtl
cmp
cmp
insb
push
ret
out
fldl
orb
test
xchg
mov
loope
cmp
mov
cltd
sbb
divb
pusha
push
xor
jno
mov
xchg
and
jp
jl
push
adc
fisttpl
xor
fildll
cltd
adc
shlb
push
jge
jl
and
and
pop
dec
sbb
fsubrl
jne
jmp
pop
shlb
sbb
push
adc
cmp
daa
enter
xchg
jo
lods
in
mov
pop
call
xchg
lahf
mov
pop
outsl
fcom
push
ds
and
inc
mov
int
cmc
or
push
aaa
mov
lahf
add
jp
xchg
jp
mov
test
xor
lds
dec
add
sub
call
jl,pt
bound
stos
test
int
mov
les
ss
adc
test
movsl
mov
stos
ja
loope
movsl
hlt
push
sti
cmp
or
insb
push
push
mov
mov
cli
cmpsb
pop
nop
mov
pop
push
add
mov
popf
push
jg
lahf
sub
or
adcl
xchg
jno
mov
cltd
popa
pop
in
loop
mov
dec
out
and
mov
pop
test
mov
xor
add
inc
pop
xchg
lahf
ja
mov
jecxz
cmc
mov
adc
lcall
pop
sub
daa
jp
addr16
cmp
sarl
mov
aad
ss
in
xchg
test
cmp
xor
inc
adc
fidivs
inc
popf
adc
rorl
and
mov
mov
mov
daa
aad
fwait
pop
fbld
int3
add
fiadds
popa
cwtl
lock
out
jnp
movsl
push
out
sbb
addr16
inc
push
enter
andw
fwait
adc
rorl
push
mov
fmul
xchg
cmp
mov
jecxz
cli
push
movsl
sub
iret
jp
loop
jne
mov
pop
inc
fsubs
mov
cmp
mov
xchg
in
jo
rclb
push
cmc
xor
ret
dec
push
imul
dec
aas
inc
sub
push
xchg
push
xor
jp
jae
pop
mov
rcrl
mov
fnstenv
lock
push
cmpsb
add
push
push
call
adc
lods
inc
mov
inc
fs
test
nop
mov
push
adc
sub
mov
push
lret
mov
pop
stos
andl
into
js
cmp
es
xor
shll
xlat
iret
sub
jno
jle
or
push
mov
sub
leave
jle
les
mov
in
lock
out
fdivl
add
cmpsl
rorb
sub
cmp
add
fbstp
in
sahf
repnz
xchg
jns
jg
add
xor
inc
jl
loopne
in
dec
mov
test
in
sbb
ret
ficoml
movsl
cmpl
dec
or
scas
adc
out
idivb
test
sub
and
cmp
fidivrl
xchg
cmp
or
mov
aad
das
lcall
cwtl
mov
andb
jl
pop
shll
mov
push
sub
mov
pop
int
divb
dec
mov
push
mov
inc
jae
ficomps
rol
sub
mov
sbb
data16
das
pop
adc
popa
scas
jo
xchg
mov
mov
dec
push
cwtl
cmp
push
add
ja
lret
pop
xchg
sbb
mov
mov
ret
jg
hlt
pop
pop
ret
cmp
mov
add
lcall
inc
jmp
in
jmp
repnz
dec
jge
in
movsb
sarl
jb
or
xchg
out
das
push
dec
add
mov
fdivs
stos
pop
ret
lahf
xlat
je
ss
leave
dec
lea
jb
stc
shlb
mov
fisubl
das
jge
getsec
push
int3
sahf
fstl
xchg
pop
cltd
nop
and
adc
jo
cmp
mov
fistps
mov
mov
stos
sbb
push
jb
sbb
push
fwait
imul
inc
push
pop
inc
pop
xor
mov
repz
pop
and
cmpb
mov
test
add
es
icebp
aad
pusha
outsb
jae
jle
dec
adc
xchg
mov
frstor
cmpsl
mov
sub
and
xor
scas
mov
mov
mov
cltd
or
test
loopne
flds
and
fisubl
dec
fdivs
dec
outsl
sbb
mov
dec
dec
pop
pop
lods
sub
imul
adc
pop
adc
push
push
test
add
pushl
pop
loop
add
jo
jecxz
daa
add
sbb
lods
dec
outsb
ret
insl
push
sub
arpl
gs
xchg
or
mov
faddl
or
mov
mov
daa
les
ret
mov
dec
lahf
scas
dec
or
xor
sbb
mov
inc
add
add
stc
imul
push
push
push
mov
cmp
out
sahf
cmp
mov
bound
mov
iret
or
imul
push
mov
lret
aaa
stos
les
addr16
cmp
and
ja
and
and
das
mov
sbb
push
into
rcl
sub
mov
or
mov
mov
pop
or
xor
fwait
pop
xchg
addr16
movsb
xchg
xor
test
add
push
mov
push
shlb
jl
push
imul
ss
outsl
and
loope
inc
popf
dec
mov
xchg
scas
test
cli
fcompl
repnz
dec
aaa
push
push
jg
pop
or
sbb
pop
push
nop
jo
mov
cmpsl
pop
xchg
pop
aad
subl
clc
inc
mov
fldenv
test
adc
popa
jge
lret
mov
sbb
lods
movsl
mov
jno
add
cs
inc
subb
mov
push
bnd
sub
add
inc
sub
inc
xlat
cwtl
push
orb
sub
popf
adc
movaps
pushf
pop
xchg
add
pop
fstp
fistl
mov
sbb
xlat
mov
cmp
inc
inc
xchg
ds
mov
or
loopne
add
daa
and
lods
mov
mov
into
sbb
mov
pop
mov
mov
sub
shlb
adc
ss
xchg
inc
stos
loop
hlt
mov
jo
sahf
or
stos
scas
sahf
ss
xlat
dec
data16
mov
cltd
pop
inc
add
jne
inc
sahf
adc
dec
fldcw
add
das
or
jecxz
jbe
mov
cs
and
inc
sti
push
inc
sub
mov
dec
jge
cmp
lock
jg
lea
aad
dec
out
push
imul
mov
lea
pop
xlat
xchg
mov
andl
jns
jnp
mov
stos
mov
push
mov
fnstcw
dec
cs
aaa
sub
mov
inc
add
mov
test
sti
fistpl
popf
cmpsl
in
add
mov
inc
cmpsb
push
outsb
sub
aaa
test
lret
xchg
mov
fidivrs
inc
pop
pop
pop
adc
mov
lods
adc
pusha
pop
jno
gs
std
js
push
enter
es
jbe
add
lods
push
ss
adc
push
dec
mov
xchg
xor
add
jl
fdivrl
jge
rcll
pop
out
adcl
mov
inc
scas
dec
cwtl
mov
fisttps
or
or
daa
sti
push
std
addr16
jbe
jbe
movsb
mov
sbb
and
pop
xchg
or
lock
jae
imul
scas
ja
jns
sbb
xor
mov
push
sahf
mov
dec
push
jbe
shrb
or
sub
popa
mov
rcrb
repz
xor
push
jmp
adc
cmp
jg
aam
and
out
mov
lock
add
push
lahf
cli
jg
ret
fiadds
fidivrl
and
mov
pop
cmp
inc
mov
sbb
inc
mov
jecxz
insl
data16
adc
and
std
icebp
add
sarl
jecxz
jmp
lret
sub
ret
sub
lahf
mov
cmc
inc
ja
hlt
out
jae
mov
into
adc
loope
scas
ds
cltd
mov
call
dec
imul
mul
or
lods
dec
popa
xchg
pop
sarl
jmp
sub
inc
or
ss
lahf
imul
rcrb
push
push
mov
xchg
iret
cmp
push
jnp
sub
pop
lret
push
ret
insl
out
dec
mov
lock
mov
outsb
xchg
inc
lock
pop
mov
mov
add
fisttpll
pop
push
jb
mov
out
addr16
push
mov
inc
dec
mov
shll
lods
jmp
das
cltd
nop
js
mov
movsb
ret
es
fimuls
pop
push
hlt
popa
sub
mov
cmp
aam
fisubl
pop
inc
xchg
inc
mov
push
aam
in
test
mov
lret
xchg
mov
and
imul
adc
cli
shl
ljmp
mov
dec
cmp
mov
stos
jecxz
pop
pop
push
das
jo
xchg
pop
cmp
cmp
subl
popf
cmp
out
xchg
mov
shrl
or
inc
mov
mulb
pop
ss
sbb
cmp
pop
and
loop
xorb
mov
add
xchg
jne
ret
pcmpeqw
test
sub
leave
ds
sar
scas
repnz
jge
js
mov
cwtl
and
fiaddl
shll
or
and
iret
mov
lret
fldl
jp
call
and
out
movsb
and
or
lcall
mulb
pop
or
popw
in
lock
mov
push
xchg
repz
push
adc
and
daa
adc
sub
xchg
mov
scas
outsl
idivl
fdivl
cmp
and
cmpsb
and
imul
fisttpll
fsubrs
cmp
aam
xchg
sub
xchg
inc
std
dec
pop
insl
sbb
je
jne
jo
adc
and
jg
mov
jg
jo
int
pop
jge
out
mov
jl
out
jae
mov
popf
pop
imul
jl
cmp
push
outsl
sub
dec
jae
sub
mov
mov
xchg
shlb
mov
and
leave
xor
xchg
or
jns
cmp
movlps
jmp
push
test
or
lock
add
pop
imul
or
icebp
lods
inc
sub
add
jae
xchg
or
scas
pushf
xor
inc
or
decb
gs
sbb
cmp
adc
sbb
inc
clc
push
xor
subb
sub
push
jne
cmpb
jnp
xor
inc
xor
jno
fs
imul
leave
ljmp
out
rcr
rclw
scas
mov
insl
mov
imul
push
test
xor
mov
mov
adc
mov
in
xchg
shl
dec
in
or
sbb
jl
cmp
movsb
lret
xchg
push
iret
jno
ljmp
js
fildl
data16
xchg
aaa
cmp
mov
pop
pop
xor
jae
and
lods
pop
repz
lcall
mov
pusha
stos
push
fcoms
test
cs
dec
sub
out
or
and
mov
repz
das
push
xchg
cltd
and
lahf
xchg
sbb
mov
inc
into
shlb
jmp
xor
mov
movb
or
sub
push
add
jle
into
in
inc
adc
imul
psadbw
add
add
lret
jbe
in
popf
loop
jo
pop
adc
cwtl
sti
in
mov
out
pop
testl
cmp
cmc
push
pop
cmp
xchg
insb
fs
xchg
enter
mov
rorl
mov
or
lock
enter
int
inc
xchg
xchg
ffree
push
data16
outsl
js
xor
adc
call
xor
daa
add
push
xchg
sti
scas
cs
sti
int
adcl
pop
jmp
test
popf
out
data16
jae,pn
jbe
pop
adc
ret
mov
les
jg
stos
ds
test
push
je
push
jl
scas
fdivrp
mov
les
mov
lods
sbb
in
leave
pushf
mov
les
or
cmp
jo
inc
arpl
jmp
or
mov
lds
pop
mov
jle
popf
pop
and
scas
int3
in
iret
test
in
sbb
mov
repnz
jg
es
subb
enter
in
andb
enter
add
dec
stos
xchg
jbe
cmp
cwtl
xchg
in
fdivrp
daa
orl
mov
pop
pop
push
mov
xchg
cmp
push
sub
loopne
mov
dec
adc
ss
push
leave
out
fstpl
push
and
std
jbe
inc
std
and
pop
rolb
and
push
data16
push
out
mov
in
pmuludq
mov
sarb
jno
mov
in
iret
jbe
inc
push
out
adcb
das
jns
scas
pushf
ja
out
hlt
aas
lahf
jl
inc
mov
enter
push
cmp
loope
out
fnsave
outsb
add
pushf
cltd
repnz
dec
pop
push
push
and
fidivs
mov
jp
cmpsl
icebp
movsb
jle
int
mull
push
sub
shll
ret
xor
js
push
fwait
jns
clc
mov
and
loopne
push
loopne
mov
repz
shll
cmp
loope
add
repz
je
in
cmp
scas
int3
inc
jnp
jg
mov
outsb
ret
rolb
dec
shl
icebp
adc
in
jp
dec
repnz
mov
and
push
mov
cwtl
arpl
jo
popa
cli
into
pushf
in
ljmp
sbb
in
lods
pop
dec
lret
pop
xchg
or
adc
jle
insl
inc
out
jae
push
f2xm1
adc
cmp
pusha
lahf
jno
inc
loop
xchg
popa
test
sub
and
dec
outsb
xchg
cmp
hlt
xor
pop
pop
mov
stos
pushf
cmpsl
jmp
mov
lock
xor
pop
pusha
in
sub
cli
and
aaa
push
test
in
jge
div
cld
lahf
imull
pop
cmp
dec
mov
enter
lahf
mov
sub
adc
add
lcall
cmpl
xchg
cmpsl
mov
int
repz
or
rolb
aaa
push
push
lock
push
add
or
mov
std
xor
xchg
sbb
out
movsl
test
popa
jge
sahf
inc
or
push
cli
sbb
ja
fwait
mov
dec
int3
jmp
cs
and
pop
ss
jno
or
mov
mov
arpl
inc
lock
enter
pop
push
xchg
adc
sub
rcr
pusha
aad
loopne
mov
mov
sbb
jmp
dec
pop
xlat
and
repnz
bound
cltd
scas
push
loop
pushl
adc
rcrb
loop
push
push
mov
push
in
mov
aad
out
mov
das
rol
inc
pop
sbbl
dec
cld
xor
jb
cmp
pop
xor
into
add
mov
mov
mov
inc
add
sar
mov
ljmp
mov
sbb
cmpsl
mov
imul
arpl
pop
rorl
test
shlb
add
rcll
mov
stos
out
cmc
mov
es
push
scas
xchg
jg
jl
sbb
pop
ja
jns
pop
sbb
sbb
sub
movsb
fldcw
or
push
dec
push
out
adc
mov
ret
test
arpl
push
rorb
push
cmp
lahf
lcall
sub
mov
jle
int3
stos
xlat
mov
gs
into
mov
mov
mov
rdpmc
xor
push
mov
push
cli
push
cmp
xor
fmull
mov
lock
sbbl
test
xchg
fdiv
inc
dec
out
test
mov
dec
fstpl
sbb
mov
int
inc
stos
stc
pop
cld
adc
imul
mov
loopne
jbe
ljmp
mov
fsubrs
push
inc
aam
nop
cwtl
and
fnstcw
cmpsb
pop
dec
and
nop
pusha
inc
stos
xchg
repz
pop
dec
mov
outsb
scas
fwait
jle
adc
movsl
pop
dec
aad
call
or
pop
xor
sub
jmp
jae
aas
fisubrs
arpl
dec
popf
lcall
lods
enter
mov
fwait
negb
dec
inc
dec
xchg
jae
cs
call
sti
out
xor
shll
push
test
xchg
sub
inc
lret
sti
inc
sub
cld
in
mov
in
push
jecxz
daa
dec
lods
sbb
int3
stos
and
int
fidivrl
push
jne
gs
mov
mov
addr16
xchg
mov
scas
xor
inc
setae
mov
adc
rcrl
cmp
stc
mov
sub
xchg
hlt
mov
fnstcw
jo
imul
cli
inc
sbb
arpl
out
jmp
mov
ret
xchg
sub
frstor
ret
xor
mov
adc
int3
inc
adc
adc
sbb
rorl
push
mov
push
cmp
shlb
fisttpll
push
imul
aaa
repnz
pop
mov
pop
dec
addb
orl
xchg
movsl
les
cmpsl
push
sub
popf
repnz
stos
in
push
xchg
stos
push
pop
ds
pop
aas
and
mov
jne
xor
dec
out
mov
mov
das
outsl
in
fwait
imul
sub
addr16
mov
rcll
jecxz
test
enter
stos
leave
adc
in
xchg
data16
sti
imull
xor
or
dec
mov
in
jmp
lcall
jnp
rcrb
repz
sub
sbb
mov
insl
jbe
pop
xor
pop
sarb
cmp
or
inc
cmp
cmp
xchg
or
popf
scas
ret
mov
test
mov
imul
dec
jg
push
addr16
out
jnp
sbb
push
or
inc
inc
std
loope
in
test
inc
and
movsb
icebp
ret
repnz
xor
push
mov
mov
es
dec
lret
cmp
jae
bnd
inc
mul
adc
lret
push
and
andb
mov
lcall
scas
jg
mov
adc
sub
pop
dec
js
sub
inc
xchg
add
ret
enter
jno
push
cmp
loope
loope
xor
lods
cmp
mov
mov
loope
dec
movsb
mov
aas
jle
stos
ja
mov
sbb
mov
call
ss
inc
les
out
ret
mov
push
mov
ficomps
mov
mov
mov
fcmovu
pop
pop
mov
inc
push
xchg
mov
fbld
mov
lea
dec
movsb
sahf
push
jo
add
mov
jnp
loopne
cli
insl
cwtl
mov
addb
xor
inc
mov
stc
jbe
jecxz
add
jle
outsb
mov
js
sbb
cwtl
mov
in
mov
in
jecxz
icebp
dec
cmp
ror
inc
push
or
aas
aam
pop
dec
xchg
adc
loop
notb
call
push
aas
test
adc
jp
test
inc
popf
adc
xchg
jecxz
pusha
pushf
push
sbb
inc
jge
inc
mov
test
insl
lret
sub
xchg
movsl
popa
adc
outsb
cltd
pop
lock
aaa
dec
fldt
mov
mov
in
bound
pop
jb
mov
addr16
add
and
and
out
jmp
dec
xchg
add
jecxz
or
sbb
xchg
into
movsl
ds
or
je
inc
loop
jb
mov
lahf
pop
out
push
or
add
xchg
and
add
aam
xchg
and
je
es
repnz
add
jns
das
mov
xchg
cwtl
popf
pushl
push
repnz
je
fistl
push
das
out
ja
enter
or
jp
push
fdivl
xchg
and
jmp
iret
rolb
test
movsb
mov
clc
filds
imul
add
enter
les
inc
push
lods
sub
jno
xchg
xor
daa
shl
test
mov
fadd
scas
xorb
and
jbe
dec
loop
ja
jno
clc
jl
sbb
insl
es
xor
cmpsb
push
dec
xor
cmpsl
push
test
mov
dec
sbb
mov
xlat
pop
loope
or
out
adc
push
add
jae
or
lock
mov
lahf
and
sub
push
mov
inc
mov
mov
dec
sub
mov
stos
in
or
xlat
or
inc
xchg
cmp
outsl
push
xchg
fsts
or
ds
mov
xchg
mov
movsl
ds
add
sub
cs
das
lea
dec
shll
dec
inc
jg
and
lcall
adc
cmp
jns
mov
xor
xchg
xchg
inc
ret
push
test
inc
rcrl
rorb
nop
fistpl
rcrb
gs
pop
dec
push
jae
scas
push
push
test
adc
inc
in
dec
pop
mov
mov
cld
and
pop
sbb
inc
rcl
or
push
cmpsl
rorb
dec
rcr
in
repnz
ret
out
jmp
jmp
mov
test
xchg
or
insb
push
leave
sarl
jne
popw
dec
test
push
or
jbe
mov
cmpsb
push
xor
or
add
rclb
cmpb
jg
xchg
mov
test
cld
lahf
xchg
lods
out
cs
mov
clc
cmp
sbb
pop
in
clc
cmp
mov
imul
icebp
sarl
push
pusha
or
mov
les
mov
pop
insl
fdivrl
dec
repnz
mov
mov
mov
arpl
stos
jecxz
dec
mov
sti
inc
arpl
scas
inc
and
xchg
mov
fs
decb
and
dec
cmpsl
dec
mov
pop
jb
lcall
insl
add
mov
cld
in
cld
insb
loopne
cmp
stos
loope
lea
nop
imul
daa
fnstenv
cs
loope
xchg
add
mov
add
or
add
lcall
pop
adc
xchg
out
scas
push
adc
divl
mov
test
int3
fsubr
imul
rcll
or
les
aad
and
je
pop
push
jo
out
sbb
sub
pusha
fwait
ret
orl
xlat
rorl
cld
frstor
xor
lcall
push
pop
shrb
add
fdivl
and
jns
fsubr
out
cmp
inc
cmpsl
sub
outsl
add
push
add
mov
int
cmpb
dec
push
xchg
cwtl
jl
mov
daa
xchg
jae
mov
fimull
cwtl
xor
ljmp
aam
aad
xchg
enter
pop
test
xor
lods
jmp
aam
enter
loopne
testl
xchg
jnp
dec
lahf
arpl
xor
pop
in
sub
jle
adc
xor
cltd
pop
ret
cmp
sbb
into
aas
movsl
add
je
stc
stc
repnz
out
or
mov
add
in
inc
dec
add
xor
mov
lods
mov
pusha
aam
push
lcall
dec
xor
outsb
mov
int
dec
cmc
cmp
pop
or
pop
push
leave
xor
xchg
add
jle
mov
ffree
aas
roll
sarl
or
loope
push
je
sub
mov
out
sbb
rorl
test
inc
test
mov
pop
inc
pcmpgtb
or
movsl
sbb
fdivs
inc
sbb
lds
les
shll
add
shrl
testb
nop
fildll
faddl
or
pop
xchg
fdivrs
xor
scas
notl
stc
sub
aam
sbb
lods
xchg
mov
fcmovu
popl
aad
icebp
cmpsb
mov
mov
lds
add
cmp
xchg
outsl
aad
inc
mov
out
pop
mov
push
mov
shr
imul
mov
push
ja
and
cs
xchg
test
out
je
jmp
dec
icebp
xchg
lods
mov
xor
xor
mov
lret
test
out
mov
mov
sbb
lock
xchg
loope
mov
adc
xor
fidivs
popf
pop
outsb
cmc
mov
enterw
add
add
mov
cmpsb
fidivl
sub
test
or
adc
inc
incb
xor
pop
jle
insb
shlb
inc
movsb
add
leave
inc
out
data16
mov
lods
mov
insb
mov
pop
repnz
loop
mov
andb
or
mov
dec
cmpsl
pop
xchg
dec
in
pop
arpl
ljmp
pop
enter
inc
push
push
movsb
or
add
pop
cmpsb
or
xor
cs
or
fistpll
test
pop
jns
lahf
daa
cmc
or
xor
inc
std
popf
sub
mov
out
hlt
lret
jnp
dec
loopne
aaa
or
xchg
mov
jae
add
test
mov
push
mov
imul
push
and
cmp
push
outsl
xor
lret
loopne
xor
decb
push
jo
loop,pn
mov
pop
pusha
sub
push
cli
add
iret
mov
scas
mov
add
xor
add
mov
loopne
das
and
inc
adc
push
adc
pushf
cld
inc
idivl
cmp
push
testb
test
pop
adc
jl
inc
inc
inc
add
movsb
pop
jno
dec
xchg
cmpsb
xor
stos
mov
jns
clc
cmp
mov
inc
movsb
mov
ret
stos
pop
in
add
and
mov
stc
lret
jmp
bound
repnz
add
sub
repz
dec
inc
aaa
push
in
jmp
push
and
in
sbb
mov
jmp
sahf
call
inc
jl
loop
lds
lods
pop
lock
push
into
push
xor
in
add
mulb
and
push
push
mov
cmp
mov
sbb
dec
cmp
mov
repz
push
lret
in
sti
pop
pop
push
sub
mov
inc
adc
xchg
mov
clc
add
out
sbbl
or
scas
jns
push
mov
lahf
incb
sbb
inc
aam
aad
outsl
pop
sub
xorl
sbb
out
jmp
jne
imul
jne
xor
mov
pushf
aas
sbb
test
lret
pop
adcb
push
mov
cmp
sbbb
cmp
adcb
mov
dec
daa
jns
jnp
insl
iret
and
call
inc
xor
mov
out
pushf
push
xor
popf
push
adc
pusha
pop
nop
mov
test
and
inc
insl
inc
std
arpl
add
pop
mov
mov
push
sbb
sbb
and
aam
rcrl
xchg
mov
incb
pop
dec
sub
dec
les
pop
sti
xlat
test
outsl
xchg
adc
mov
sbbl
jl
lock
ja
jmp
scas
loopne
or
js
xchg
inc
xor
push
and
cmpsl
gs
cs
mov
int3
cmp
shr
enter
jns
xor
repz
adc
jno,pt
and
jne
or
mov
push
jne
or
jp
mov
jge
jle
stos
mov
cwtl
mov
pop
xchg
add
xlat
pop
push
pop
dec
cmp
add
mov
ljmp
inc
les
cmp
mov
lods
into
jecxz
sub
loop
rcrb
shlb
outsl
cmpsl
dec
pop
pop
pop
bound
out
push
adc
add
push
and
fsubrl
in
and
pop
rorl
stos
xor
movsl
stos
movsl
fcmove
insl
mov
dec
fmuls
jae
dec
cmp
gs
mov
jae
in
dec
loope
scas
pop
iret
lea
and
mov
mov
fisubl
cmp
lds
xlat
adcl
adc
fcmovnbe
mov
leave
xchg
mov
iret
dec
fstps
cmp
into
dec
mov
inc
rorb
sbb
or
fidivrl
aad
lock
push
enter
lret
iret
mov
add
mov
repnz
xchg
sub
cmp
inc
adc
jnp
daa
push
xor
xchg
int
add
cmp
pop
fcoml
repnz
std
push
push
ret
xchg
loope
jo
dec
xor
fwait
in
cld
out
jle
sti
or
dec
test
dec
and
hlt
gs
sub
adc
mov
cmpsl
fimull
out
outsb
cltd
sub
inc
jne
mov
shrb
aam
sbb
cmpsl
ljmp
mov
aas
mov
lods
cmp
pusha
ljmp
addr16
dec
enter
jno
stos
lret
fwait
insb
xor
fsubl
pop
sbb
pop
jge
aas
sbb
adc
rcl
sub
outsl
icebp
fmuls
push
ja
jl
push
mov
inc
lret
or
cmpsb
sarb
jbe
loop
ret
sarl
and
mov
sub
or
jecxz
sbb
xchg
negb
test
leave
jmp
adc
add
roll
mov
cltd
lock
and
sti
add
mov
cmp
and
mov
bnd
cmp
and
xchg
and
shrb
scas
rcrb
jmp
cwtl
push
hlt
inc
inc
lahf
dec
shr
mov
push
stc
int3
outsb
and
mov
cmp
xchg
add
dec
aaa
pusha
push
imul
call
adc
cltd
out
push
jbe
in
mov
test
stos
mov
cmpb
js
mov
mov
push
int3
xor
test
roll
in
and
ds
adc
data16
cwtl
jmp
ljmp
mov
in
movsl
xor
je
pusha
mov
inc
xchg
test
jmp
repz
repz
fimull
or
mov
ljmp
std
hlt
jo
push
movsl
mov
mov
loop,pt
test
mov
idivl
or
clc
not
inc
add
fwait
scas
mov
sti
xchg
push
inc
sbb
push
xchg
lods
sub
ljmp
fwait
jl
out
lods
and
mov
cmp
dec
cmp
pop
jbe
mov
pop
iret
packssdw
lret
add
sbb
fisubrs
push
xchg
mov
into
in
push
or
leave
pop
dec
mov
push
inc
daa
out
popf
out
rcr
es
ficompl
adc
mov
mov
je
outsl
addr16
push
leave
add
push
inc
cmpsb
xchg
popa
jg
mov
nop
rclb
jo
dec
mov
sti
arpl
imul
jne
push
aam
sbb
js
test
je
or
pop
and
xchg
fldl
aaa
fdivs
mov
call
ret
sbb
sub
sbb
out
adc
cmp
mov
sbb
mov
adc
js
add
dec
push
xchg
in
js
ss
cwtl
sub
shlb
cltd
xor
rclb
inc
push
test
sarb
in
sub
jmp
push
ljmp
xor
clc
in
xchg
sbb
icebp
jno
xchg
mov
or
clc
and
adcl
jns
mov
jbe
pop
orb
shll
adc
mov
int3
mov
add
shll
xchg
out
stos
popf
adc
jmp
insl
mov
jae
pop
arpl
jns
adc
xchg
and
add
shrb
sbb
xchg
mov
cltd
inc
int
cwtl
daa
bound
mov
xchg
lds
inc
cli
xchg
mov
mov
sub
cmp
fwait
int
mov
fidivrl
fs
and
xchg
std
enter
and
sbb
ja
adc
in
cmp
push
pushf
lds
dec
or
call
pusha
jb
fisttpl
sbb
lods
push
and
and
dec
in
fisubl
ds
xchg
jo
mov
mov
lea
xchg
aam
insb
addr16
xlat
insb
in
je
jmp
dec
dec
fisttpl
clc
stc
mov
in
insb
ss
ja
ret
mov
in
inc
cmpsl
mov
or
orb
les
xchg
mov
es
inc
add
pop
into
xor
xchg
sbb
aas
jmp
dec
int
es
repz
sahf
mov
cmp
sub
fsubrs
int3
dec
scas
lea
jmp
push
mov
mov
pop
lods
push
sarl
push
test
or
hlt
cmpsb
adc
scas
fldenv
aas
rol
push
xchg
in
or
push
ret
ja
mov
jns
mov
sbb
pop
dec
mov
insb
cmp
pop
pop
cmpsl
inc
push
in
xor
out
mov
adc
ss
sub
push
out
nop
bound
xor
sub
stos
lss
add
mov
lods
in
mov
cwtl
sbb
mov
sbb
popa
dec
iret
mov
movsl
scas
mov
out
jbe
std
mov
dec
andb
sahf
lret
in
lahf
jecxz
jge
lods
push
mov
push
adc
mov
mov
mov
xchg
sbb
push
outsb
shlb
mov
inc
shrb
aas
dec
popa
add
addr16
jle
sub
dec
xchg
pop
sub
stos
xchg
sbb
pop
mov
fdivp
lret
test
sub
and
add
mov
push
fsubrs
mov
ljmp
add
jne
cmp
mov
rclb
fldcw
cmp
sbb
lret
fnstenv
mov
xchg
sub
pop
andb
repz
mov
mov
mov
mov
xor
add
adc
sub
push
rcrb
je
or
shl
in
mov
lahf
jecxz
cmp
pop
in
sbb
iret
ss
lcall
pop
pop
imul
jecxz
aam
mov
mov
xchg
cmp
stos
gs
cmp
push
lret
call
enter
cld
push
cmpsb
int3
xor
inc
xor
xor
mov
mov
into
and
pop
or
inc
mov
aad
dec
test
shrb
imul
push
sub
mov
pop
aaa
in
addr16
shrb
aad
and
ret
fcomps
xlat
call
jmp
outsl
in
fsin
jb
mov
push
pop
jo
dec
ret
int3
mov
popf
mov
pusha
mov
lea
lahf
leave
pop
pop
mov
inc
adc
add
push
pop
adc
and
cmp
hlt
jmp
mov
scas
dec
daa
icebp
pop
hlt
testb
sub
jb
call
sub
gs
stos
outsb
mov
jnp
sbbb
jno
loopne
iret
faddl
cmp
out
mov
stos
popf
cmp
mov
mov
shl
lret
mov
inc
mov
dec
nop
insl
daa
popf
ret
xchg
jecxz
push
ja
lods
inc
ret
movsb
dec
test
mov
mov
cltd
fwait
mov
into
shl
orl
bswap
mov
mov
sahf
mull
pop
cltd
push
cmpl
dec
adc
rclb
ret
xor
pop
add
push
jae,pn
shlb
jmp
popa
scas
rcrb
imul
movsb
iret
jae
pop
jg
in
push
filds
and
pushf
or
mov
mov
pop
and
xor
gs
daa
je,pt
sarb
mov
shrl
pop
insb
push
cmp
inc
xchg
lret
dec
sub
or
push
adc
aas
test
repz
or
jmp
test
or
fwait
jns
xchg
or
and
rcll
xor
mov
aad
mov
movsb
add
add
and
push
outsl
and
outsb
bound
nop
xchg
mov
or
call
fstp
sub
repnz
inc
out
mov
cmpsb
lret
leave
out
lods
loop
jmp
push
mov
out
and
jnp
jne
std
bound
push
inc
inc
outsb
dec
dec
mov
lahf
sbb
or
pop
add
pop
arpl
push
shl
fnstenv
xorb
mov
lds
loope
cmp
shrl
fmuls
sbb
jmp
and
push
cmpsl
xor
divb
or
xor
or
jmp
dec
or
incl
jg
ljmp
jp
xchg
shrl
jmp
jne
inc
jnp
sub
mov
dec
or
push
cmc
or
add
sub
fldcw
sbb
sub
stos
xlat
sti
or
mov
mov
sahf
stc
pushf
mov
push
cmpsb
fs
popa
sub
add
aad
cwtl
mov
sbb
xchg
out
and
sbb
xor
subb
mov
shrl
cmpsb
xchg
and
ljmp
add
mov
movsl
push
es
out
adcb
in
nop
push
mov
cld
mov
mov
mov
pop
lcall
or
lds
inc
out
or
xchg
mov
addr16
mov
outsb
scas
pop
flds
ja
mov
push
mov
dec
xor
repz
cld
mov
fiadds
mov
pop
cwtl
popf
cmc
popf
jnp
movsb
clc
jb
lods
sub
pop
and
cwtl
and
push
lret
xcrypt-ecb
cmpsl
or
lods
decl
clc
inc
outsb
out
adc
mov
insl
into
dec
pop
arpl
pop
mov
lock
loop
push
pop
insl
ja
cmp
iret
add
cltd
das
push
insl
das
hlt
ds
stc
lret
lahf
adc
stos
xor
xchg
pop
stc
push
xor
ret
xchg
inc
fwait
inc
out
pop
adc
addr16
movsl
lea
dec
ret
mov
pop
pushf
shlb
pop
movsb
nop
add
push
mov
negl
mov
shll
neg
pop
inc
clc
jl
xorl
dec
in
mov
fistpll
nop
pusha
scas
lcall
lea
xor
iret
push
lods
aad
in
addl
js
inc
push
lods
jmp
and
mov
mov
push
adc
adc
sbb
pushf
in
sbb
mov
and
jg
dec
push
mov
jge
cmp
in
xor
fidivrl
or
pop
fimuls
xchg
cmp
pop
inc
mov
iret
scas
push
adc
sbb
movzwl
into
xchg
mull
inc
fdivl
loopne
mov
push
aas
scas
mov
imul
inc
dec
xorl
fs
lods
mov
cs
adc
ljmp
add
or
jns
mov
mov
fdivrs
jnp
cmp
in
mov
out
dec
mov
jo
in
xchg
int3
push
jle
dec
inc
and
lcall
mov
stc
lret
xchg
test
les
ret
dec
jne
cmp
and
xor
rorb
cmp
adc
mov
mov
sub
scas
mov
mov
repz
fadd
leave
mov
in
andb
daa
int
insl
sbb
sti
mov
cltd
cli
mov
sub
inc
test
or
add
jge
push
je
jg
push
js
test
add
push
insl
jmp
mov
out
mov
jne
jns
pop
out
inc
loope
cmp
xorb
pop
fcos
mov
push
test
add
xor
cld
push
test
dec
pop
ds
fldenv
cli
in
inc
fisubs
mov
add
in
or
jmp
push
and
pushf
push
push
mov
in
or
or
and
fisubs
jle
inc
fcoms
shrb
jae
cli
rcll
inc
fmul
lahf
lds
daa
std
popf
cmpsl
jb
push
inc
mov
ja
dec
mov
sub
or
test
jno
cld
mov
and
pop
ss
mov
cmc
xor
lods
lods
in
popf
stos
lock
aas
ja
sbb
and
rcrl
loope
or
lods
mov
je
dec
sub
clc
scas
bound
popf
sub
ds
or
jecxz
and
out
js
mov
or
add
or
mov
sti
push
sarb
sahf
cmp
cwtl
repnz
ja
sarl
xor
lret
pusha
or
add
ljmp
pop
test
dec
dec
xchg
and
outsb
adc
push
ret
imul
pop
in
adc
shlb
lcall
pop
adc
data16
fldl
inc
pushf
lock
add
aaa
clc
les
mov
aas
push
fs
xchg
push
mov
je
mov
stc
arpl
bound
popa
or
dec
push
mov
adc
lods
fs
mov
or
push
lret
mov
jno
cmp
pop
sar
pop
cli
dec
shll
xor
dec
add
push
cld
or
mov
mov
ss
cmp
jmp
push
push
div
fstpl
movsb
mov
or
sti
ljmp
sub
out
mov
xor
xor
adc
adc
shlb
adc
es
xchg
cwtl
mov
xlat
arpl
outsb
sub
adc
dec
push
movhps
movsl
pop
filds
mov
mov
cmpsb
pop
mov
jmp
fwait
lret
push
jbe
xor
pop
mov
outsb
mov
add
mov
push
gs
dec
xchg
icebp
test
popf
jmp
dec
jmp
popa
and
mov
mov
insb
xor
inc
or
nop
dec
pop
mov
ljmp
pop
rclb
pop
insl
xchg
push
lea
out
lods
mov
jne
jns
movsl
mov
scas
inc
jge
pop
adc
mov
mov
cmpsb
das
icebp
sbb
ficompl
mov
imul
inc
int3
les
xor
out
mov
inc
je
test
inc
sub
fs
xor
lret
sub
shll
jge
and
dec
lds
in
cld
pop
add
jp
lret
inc
push
mov
test
stc
lcall
mov
lea
movsb
pop
fucomi
adc
inc
scas
andb
xchg
jmp
sub
dec
fldenv
test
xchg
std
aaa
sti
sbb
mov
push
mov
xchg
mov
stos
pop
into
mov
mov
jb
cltd
fdivrl
negb
rol
cli
dec
sub
add
push
mov
pushf
cwtl
inc
shl
jnp
clc
std
cltd
and
jnp
cmpsl
pusha
mov
cmp
sahf
ret
pop
jo
mov
mov
jle
loopne
lret
and
dec
dec
mov
nop
repz
cmpsb
repz
iret
and
lea
push
or
cmp
hlt
cmp
in
or
mov
push
push
and
rcll
or
scas
cmpsb
inc
cmc
and
push
repnz
xor
jb
jl
sahf
cmp
icebp
and
jmp
out
and
enter
and
pop
in
jl
ja
in
loopne
xchg
incb
movsl
xor
ret
enter
pop
jmp
mov
int
mov
ds
fnstcw
call
aad
jmp
mov
fsubrl
aas
mov
or
jg
or
and
arpl
jns
inc
lret
ficoms
test
outsb
mov
insb
mov
das
adc
ret
xchg
add
out
jae
or
cmc
push
xor
cld
pop
pop
dec
inc
negl
xchg
dec
repz
popa
mov
out
mov
dec
lds
int3
rcl
incb
xchg
js
inc
mov
and
mov
cmp
ret
mov
mov
aad
push
ret
push
pop
add
stc
rcl
mov
dec
mov
sbb
and
test
inc
call
std
push
and
loop
cmp
imul
aam
je
add
add
insb
mov
mov
mov
sbbl
pop
sahf
pop
inc
jae
sbb
push
xchg
das
push
inc
jg
mov
nop
jae
mov
scas
outsl
movsl
les
popa
das
lds
or
mov
incl
dec
sub
gs
push
xchg
mov
mov
push
cmpsb
jo
cmc
test
mov
mov
dec
push
sti
cmp
adcb
in
in
icebp
cmp
mov
dec
mov
out
jbe
and
add
mov
mov
clc
sysret
cmp
fsubrl
stc
and
adc
dec
les
pop
xchg
xchg
nop
pop
shl
hlt
lcall
mov
pop
add
or
jle
orl
lds
adc
lea
inc
movsl
pop
repz
pop
add
and
repnz
adc
test
or
arpl
jmp
outsb
pop
mov
fisubs
inc
cmc
jae
gs
out
jg
dec
sbb
movsb
cmp
nop
xchg
call
xchg
aaa
sbb
lcall
sub
iret
push
out
mov
mov
sub
in
sub
pop
and
shrb
loopne
into
xchg
inc
loop
jbe
mov
scas
shl
inc
pop
xchg
jecxz
or
xor
dec
enter
or
jb
rdpmc
movsl
jns
rcrb
ds
cmp
lds
aam
and
jo
outsl
loope
outsl
gs
les
adc
fimull
repnz
xor
dec
mov
mov
out
imul
push
roll
inc
cld
andl
popf
push
and
test
mov
add
sbb
outsb
sbb
aam
mov
pushf
dec
adc
push
aaa
xchg
repz
pop
lahf
sub
pop
sbb
xor
test
std
sub
idiv
dec
and
cmp
cmp
push
jbe
leave
dec
outsl
dec
push
subb
loop
stos
std
adc
cli
sub
lods
push
xchg
push
xor
loop
sub
sbb
jbe
mov
fstpt
rcrb
push
shl
out
cmc
jnp
fdivrs
mov
shlb
mov
shrb
and
dec
push
out
leave
jp
sub
xchg
iret
divb
scas
jp
dec
xlat
mov
lods
jg
mov
fiadds
insl
js
push
add
int
lods
jnp
cs
pop
jl
sub
pop
xor
cwtl
mov
popf
out
fcomi
dec
sbb
cltd
iret
mov
inc
jl
dec
mov
hlt
bound
add
push
stos
inc
xor
mov
mov
cmp
aaa
or
rorl
int3
ret
fdiv
mov
faddp
jl
push
jnp
daa
mov
dec
aas
jo
mov
jo
in
sbb
out
push
mov
pushf
dec
add
lahf
inc
or
out
push
xchg
rolb
pop
mov
push
les
decl
lcall
fsubrs
insb
scas
jecxz
pop
adc
adc
xor
imul
push
leave
push
push
jo
andb
jl
aaa
cmpsb
sbb
andl
and
jb
popf
pop
add
push
das
ret
pusha
lret
in
sbb
ret
pop
pop
fsubrp
and
cmp
pop
dec
cmpsb
jb
movsb
push
gs
sbb
sbb
in
sbb
xor
xor
or
shl
outsb
lret
add
bound
ror
adc
xlat
sub
and
add
out
into
movsb
loope
jb
push
popa
xchg
loop
push
and
pop
fisubs
or
aam
lahf
lea
ror
jge
dec
inc
xchg
fwait
arpl
push
xor
push
bound
mov
lret
cmpsl
shl
jge
jl
mov
jge
movsl
cwtl
jo
jne
mov
and
sqrtps
stos
fidivs
dec
movl
pop
and
inc
mov
mov
mov
scas
data16
pusha
ss
xchg
shrl
xchg
rorl
sbb
and
dec
dec
enter
fucomi
inc
mov
mov
adc
iret
call
ret
sbb
jns
cmp
dec
mov
test
sub
aaa
jbe
dec
sub
add
out
addr16
sbb
and
add
les
icebp
clc
push
cmp
leave
mov
iret
mov
add
sbbl
inc
movsl
pop
stc
cmp
fmull
xlat
clc
adc
push
fbld
insl
mov
bound
sub
and
push
aaa
rcr
test
ret
hlt
sbb
andl
mov
jbe
iret
mov
jo,pt
inc
je
out
cltd
and
das
xchg
mov
cmp
mov
and
push
mov
xchg
hlt
xchg
xor
shll
xorb
xor
sbbb
xor
addr16
sti
fisubl
pop
adc
imul
jmp
and
testl
push
sbb
inc
mov
mov
mov
mov
cli
dec
xlat
mov
stc
xchg
jne
int
testb
iret
cmc
cmp
arpl
sti
jno
push
imul
inc
cmc
ret
mov
inc
cld
sub
jae
ljmp
stos
sti
mov
mov
lea
int
xchg
dec
add
cmp
mov
cltd
ret
inc
jmp
bound
inc
cmpsl
repz
add
jge
fsts
adc
add
or
int3
pandn
hlt
sahf
xor
mov
pushw
insb
sbb
sbb
ret
mov
xor
pusha
hlt
fnstcw
aaa
push
inc
fidivrs
xchg
adc
aaa
mov
pop
lret
sub
lcall
jns
add
ja
pop
mov
insb
fdivr
nop
movsb
jg
cmpsb
fisttpl
imul
fs
sahf
jmp
and
int
mov
mov
inc
xor
movsb
cmp
fiaddl
call
enter
sub
xchg
cwtl
cli
mov
pushf
or
imul
loopne
repz
add
add
push
pop
fmull
jae
popl
and
push
add
or
fucomip
sub
xlat
in
mov
lods
mov
or
fisttps
repnz
mov
push
fsub
cli
pop
sahf
mov
xor
mov
pop
or
inc
loop
xor
nop
and
push
imul
jno
loop
mov
out
mov
push
fs
lock
shrb
adc
daa
adcb
in
hlt
popf
jno
mov
ret
inc
shll
shl
xchg
outsl
pop
sub
hlt
dec
xchg
imul
stos
xchg
and
adc
mov
aam
cmpsb
lret
leave
std
add
in
and
movsb
lret
lds
mov
mov
mov
mov
out
inc
clts
out
in
cmp
es
movsb
out
cmp
orb
int
lods
pop
out
xorb
push
scas
icebp
lea
mov
xchg
imul
das
lea
call
adc
sar
ffreep
push
or
pop
fwait
pop
inc
dec
pop
push
lods
mov
arpl
push
and
or
xchg
inc
cld
cmp
aaa
jae
jae
add
mov
xor
jl
jno
pop
mov
sbbl
popf
sub
loopne
sbb
out
dec
stc
nop
pop
daa
mov
pop
push
mov
insb
jnp
imul
incl
test
add
push
jle
repnz
ljmp
leave
cmp
pop
cmp
adc
pop
stos
mov
and
nop
xor
or
shll
lahf
in
sub
mov
cli
pusha
inc
mov
scas
inc
cmp
inc
jo
aas
out
or
push
js
xorl
aas
dec
pop
mov
jp
pushf
dec
dec
test
stos
and
orb
je
repnz
stc
inc
cmp
repz
ja
push
mov
out
mov
pop
xchg
pusha
adc
in
push
ja
bound
jg
jb
rclb
in
jnp
rcrb
outsl
mov
xchg
jnp,pt
mov
movsl
out
mov
xchg
sbb
fs
je
cmp
jo
push
sub
mov
ret
dec
movsb
pop
jle
das
xchg
mov
in
pop
mov
sti
xor
lods
sub
rclb
sbb
jmp
aaa
xor
jge
mov
push
push
xor
mov
sub
mov
scas
mov
cld
or
subl
cmc
lods
mov
in
cmc
test
push
aas
das
xchg
fnstenv
cli
and
in
jae
cltd
pop
push
sub
movsl
xor
inc
into
addr16
into
xchg
jne
xorb
movsb
out
jne
pop
dec
icebp
imul
fdivl
fiadds
lods
jmp
adc
adc
dec
scas
jns
pop
test
push
dec
dec
cwtl
cmp
fildll
xor
aas
es
sub
mov
orl
fistpl
enter
cmpsl
cmpsb
pop
pop
scas
xlat
pop
xor
xor
inc
fwait
or
cmpsl
loopne
test
sbb
add
push
mov
frstor
cmp
push
and
jge
add
inc
in
aad
jmp
test
fstpl
scas
xor
add
push
test
xchg
mov
outsl
dec
nop
lahf
mov
sti
xor
jecxz
adc
sbb
mov
aad
pop
mov
call
sub
push
mov
in
sahf
fcompl
jbe
outsl
add
mov
test
fs
add
mov
adc
mov
jnp
inc
push
jno
sbb
push
mov
scas
dec
cmp
arpl
in
fadds
scas
sbb
test
loop
mov
push
xchg
dec
inc
pop
fsubl
mov
loop
stos
push
js
cmp
or
ja
cmp
jl
mov
stos
fistl
xor
leave
xchg
jecxz
js
lea
pop
lods
call
int3
out
cmc
mov
nop
ficoml
cmp
mov
xor
repz
jnp
add
mov
notb
aaa
push
rorb
fwait
dec
xchg
std
pop
jecxz
or
cmp
loop
or
cltd
or
xchg
dec
lods
mov
insb
xchg
dec
ss
lock
aas
les
mov
jbe
sub
in
cmp
cmp
cmp
inc
fldenv
icebp
inc
mov
lea
or
outsl
jnp
es
mov
clc
xor
imul
test
sbb
cmp
gs
repz
test
mov
sub
cld
sbb
ficomps
xchg
or
aaa
push
mov
dec
mov
mov
out
sub
pushf
and
push
test
lods
aaa
mov
in
xor
sysenter
jp
data16
hlt
mov
and
popf
add
mov
enter
pop
push
push
adc
push
jl
mov
cmp
and
lahf
test
les
sbb
jnp
dec
imul
popf
inc
repnz
mov
push
bswap
xchg
adc
jle
mov
pop
mov
js
mov
pop
add
mov
mov
inc
or
cld
repnz
sbb
mov
push
popl
pop
movsb
xor
lods
sbb
icebp
pop
mov
mov
sbb
cmc
aad
loopne
add
mov
test
nop
pop
jge
cmc
or
insb
or
les
and
inc
mov
int3
sahf
mov
pop
testb
mov
lods
daa
sbb
call
aam
push
daa
sub
ret
or
sub
pop
mov
sbb
xor
mov
mov
or
shlb
enter
mov
or
das
add
push
pop
mov
sahf
stos
xor
sub
fs
jp
inc
test
xchg
xchg
dec
sbb
repz
jnp
enter
mov
lock
lods
not
sub
insb
pop
loope
pusha
addr16
jl
aaa
aaa
test
rol
mov
or
jnp
push
pop
bound
stos
push
inc
sub
lcall
pop
jo
nop
fisubl
pop
ljmp
and
pop
jg
jbe
scas
fwait
xchg
xor
mov
repnz
mov
pop
cwtl
ljmp
pop
sbb
lahf
int3
push
xor
inc
inc
rorl
xor
pop
loopne
shrb
hlt
cmp
and
and
sub
fistl
sbb
xor
idiv
cmp
or
adc
lock
pusha
leave
xchg
mov
mov
imul
cmp
mov
ss
scas
sbb
pop
scas
push
mov
lret
daa
pop
mov
insl
mov
sub
lret
loop
pop
pushf
push
or
rorl
pop
insl
pop
enter
sahf
adc
add
cmp
dec
clc
jp
jns
and
jo
push
scas
fnstenv
pop
sarl
sub
popa
repz
and
shlb
inc
out
lahf
aad
xchg
scas
fistps
cmp
jge
inc
into
dec
adc
mov
call
mov
scas
or
jg
xchg
mov
mov
and
stos
mov
fsubrl
push
fucom
movsw
adc
xor
callw
pushf
or
sti
jmp
xchg
xor
dec
sbb
jle
addr16
iret
mov
sub
sbb
mov
lds
sahf
mov
xlat
pop
roll
push
xor
leave
xor
outsl
pop
xor
mov
xchg
push
data16
push
cmp
test
out
js
fsubrl
daa
dec
xchg
dec
jecxz
out
adc
mov
inc
or
mov
aaa
jb
inc
cmp
push
push
outsl
sbb
sahf
pop
stos
xor
cmp
sub
cmc
or
or
sarl
adc
std
inc
insl
jl
jecxz
call
mov
mov
aad
xor
jb
push
mov
add
inc
mov
xor
pop
sbb
mov
jecxz
mov
mov
roll
push
inc
stos
jle
test
mov
pusha
or
loop
dec
and
inc
repz
cmp
inc
cld
mov
adc
fwait
xor
add
sbb
js
mov
or
mov
aas
or
mov
repnz
mov
xchg
ret
mov
sub
mov
stc
mov
cltd
mov
mov
gs
sub
leave
bound
pop
adc
lock
in
push
sbb
scas
mov
imul
mov
int
pop
lret
pop
push
addr16
cmp
outsl
lock
add
add
push
jnp
aaa
cmp
std
rorb
push
cmp
mov
pop
cltd
push
inc
cmpsl
loope
mov
imul
mov
pop
ljmp
adcb
jbe
xchg
rorl
rclb
dec
mov
cmp
mov
adc
popl
mov
cmp
inc
adc
xchg
fcompl
imul
mov
lcall
out
inc
sub
adc
dec
mulb
and
cmp
pop
jnp
push
inc
cmp
jle
jno
outsb
jp
cwtl
inc
addr16
push
cli
pop
data16
sub
loopne
lock
xchg
mov
in
sbb
pop
not
insl
lahf
xor
mov
mov
lods
xchg
push
mov
pop
lret
insl
lods
jmp
push
adc
push
out
popf
and
mov
mov
imul
add
push
xchg
jae
sub
out
push
jno
sbb
fs
pop
mov
adc
addr16
jmp
jne
add
jecxz
js
xor
or
inc
outsl
loop
xor
aaa
fidivl
int3
gs
je
cmp
pop
pop
jge
sub
int
test
popa
out
push
push
shlb
add
mov
enter
cmpsb
sbb
adc
lahf
sub
jne
sbb
push
dec
ljmp
je
mov
pop
cli
test
push
ret
mov
loopne
test
pop
rcll
xlat
push
sarb
cmp
not
mov
insl
int
mov
pop
repz
in
sbb
add
jno
cli
or
lcall
fs
mov
adc
mov
xchg
subl
dec
ds
lds
pop
mov
jecxz
mov
or
lahf
dec
test
xlat
shl
repnz
leave
iret
or
jg
jae
mov
mov
stos
andb
xchg
mov
dec
lods
mov
adc
popw
and
jnp
push
aad
mov
lret
jmp
rorl
or
push
in
cmp
pop
into
add
outsl
adc
aad
and
push
inc
mov
movsb
je
frstor
push
push
loop
adc
cwtl
mov
sbb
rcl
dec
and
aad
mov
stos
xchg
jae
fsts
xor
lea
xor
sbb
add
mov
or
mov
push
xchg
pusha
jns
aaa
xchg
iret
bound
cmp
loop
push
jno
imul
xor
loope
movsb
call
mov
jmp
pop
dec
jns
jle
pop
mov
jp
push
aam
jmp
adc
test
icebp
movsl
add
mov
jp
mov
popa
jmp
xor
hlt
and
and
pop
cmpsb
movsl
mov
ret
inc
dec
jo
cld
push
lock
push
lock
mov
inc
jmp
test
mov
inc
jle
ljmp
mulb
adc
xor
nop
mov
int3
arpl
dec
push
pop
cwtl
dec
adc
mov
pop
mov
sbb
aaa
data16
xor
push
addr16
add
push
add
in
in
push
xor
lods
dec
jg
fstl
js
xlat
add
out
inc
inc
lret
add
cmp
pop
popf
jmp
jo
enter
and
sub
mov
cmpsl
fcomip
subl
push
xor
jl
inc
and
jnp
push
in
inc
adc
jle
and
adc
pop
jmp
imul
je
xchg
jo
mov
test
les
pop
in
inc
mov
lea
jp
decl
cmp
jno
jmp
add
jns
incl
mov
stos
pop
jg
ror
hlt
jno
fldcw
pop
adcb
mov
scas
or
loopne
mov
cmp
ret
sub
in
jno
loope
adc
inc
pop
js
xchg
leave
xlat
push
imul
push
loop
fsub
leave
out
or
js
hlt
in
fisttpll
imul
lret
data16
xor
lcall
js
pop
repz
push
in
js
xor
std
shll
ret
or
inc
insl
scas
sbb
popf
repz
mov
popa
inc
add
shrb
pop
popa
push
addr16
imul
insb
jns
sub
add
pop
mov
inc
mov
pusha
sub
xchg
and
jbe
sahf
or
push
xchg
dec
int3
outsb
inc
jb
test
out
mov
aas
cwtl
in
je
jbe
inc
lcall
ss
idiv
xchg
mov
push
dec
mov
add
jg
lcall
aas
or
jg
xor
js
pop
call
sbb
adc
stc
mov
inc
jp
pop
push
mov
lock
cltd
or
pop
lock
mov
jecxz
stc
cmp
notl
mov
test
pop
inc
sub
jecxz
pusha
xchg
aaa
cli
lds
out
into
jle
inc
push
pusha
mov
sbb
push
pop
jp
add
or
stos
jmp
dec
dec
pop
test
push
stos
cmc
cmp
dec
cmpsb
jecxz
xlat
pop
push
dec
push
mov
inc
mov
xor
rcl
in
add
mov
rorl
inc
inc
shll
jl
repnz
outsl
dec
popf
add
in
cmpsb
lods
stos
sub
pop
pop
push
and
mov
cmp
inc
scas
pop
ret
xchg
lret
xor
sub
mov
mov
xorl
inc
in
and
push
jl
mov
scas
and
add
rorl
int3
popa
lret
inc
repz
clc
push
test
repz
pop
xchg
jo
dec
test
ret
lahf
mov
mov
mov
sahf
std
pop
mov
outsl
test
mov
mov
dec
je
in
inc
call
ds
insl
mov
xchg
mov
jnp
cld
stos
mov
inc
dec
pop
dec
sub
push
jns
mov
mov
or
pusha
data16
mov
push
sub
sub
mov
aad
aaa
mov
or
lds
sub
adc
xchg
repnz
fimull
pop
mov
dec
jo
ret
add
xor
das
repnz
ret
cmp
pop
sub
xchg
and
outsl
add
dec
gs
mov
ss
int3
jno
lea
xchg
inc
mov
inc
dec
loop
inc
and
sahf
not
cmp
pop
mov
cwtl
sub
mov
mov
aad
pop
lods
test
xchg
dec
cmp
sbb
xchg
inc
test
pop
cmc
into
adc
mov
push
dec
mov
inc
out
xlat
aad
cmpsl
or
fld
das
adc
xchg
sbb
out
cmp
in
cltd
mov
lahf
out
mov
add
mov
add
jb
mov
jg
mov
and
shrl
aam
add
daa
cltd
xchg
sub
xchg
sub
mov
rorl
cltd
push
in
add
adc
xchg
jae
fwait
cmp
test
xlat
hlt
xor
jns
nop
leave
mov
add
pop
testl
dec
mov
cmp
mov
lret
negb
mov
rorb
subl
or
mov
test
icebp
ffreep
push
test
ret
jb
dec
imul
jl
push
lret
imul
or
sub
inc
xor
setb
add
inc
movsb
push
inc
pushf
test
push
cwtl
and
mov
jle
jnp
dec
scas
dec
cmp
or
push
repz
jl
or
xchg
xchg
stc
test
inc
add
jno
sub
adc
sub
adc
ja
rorb
jp
mov
xor
bound
push
test
xchg
fiaddl
or
sub
pop
xor
test
ss
gs
test
pop
sbb
adc
and
cli
loop
fsubrs
rcll
iret
in
pop
pop
test
lea
shr
popa
fs
mov
lret
dec
out
mov
mov
inc
cmpsb
sbbb
sub
jp
pop
movsl
insl
clc
adc
sbb
mov
dec
aad
int3
cmp
or
int3
hlt
mov
hlt
mov
scas
cld
adc
cmp
sub
aas
lock
cmp
ds
ljmp
add
jp
test
push
ret
lahf
pusha
addr16
in
push
dec
dec
sti
inc
jbe
inc
int3
push
pop
and
dec
jnp
push
sbb
jl
pop
sti
push
add
packuswb
xchg
dec
jecxz
and
cmp
jbe
cmp
inc
xchg
sbb
aam
flds
pop
das
jbe
scas
or
cld
and
push
and
or
fstl
mov
mov
cmp
call
ss
or
hlt
pop
enter
sar
adc
jne,pt
dec
sub
int
sbb
imul
sub
cmc
mov
mov
mov
sub
mov
jo
push
cmp
sub
insl
aaa
push
idiv
push
jns
das
popf
aaa
mov
mov
jle
outsb
test
data16
adc
mov
cld
adc
xlat
roll
mov
jl
aam
aam
sbb
scas
iret
int3
popf
les
sub
jnp
into
mov
stos
dec
les
pop
aad
pop
mov
dec
std
cmp
dec
enter
dec
subb
enter
lods
lahf
xor
lea
push
cmp
jo
push
dec
inc
dec
adc
ja
ffree
pop
jp
cmp
movsl
test
popa
sbb
cmp
jnp
cli
jnp
cltd
xchg
add
mov
inc
sub
adc
sub
cwtl
xchg
or
repnz
incl
mov
jge
cmpb
push
mov
dec
and
cmpsb
xor
fwait
rolb
andl
cmp
dec
mov
jae
sub
pop
rclb
aad
sti
in
in
xchg
jmp
cmpsl
not
adc
jb
mov
cmp
mov
mov
mov
cmp
push
lahf
sbb
mov
push
jle
pushf
dec
jmp
jo
cwtl
dec
cmp
bound
testl
cs
fistpl
andb
cmpsb
fs
inc
rorl
fidivs
stc
push
lahf
rolb
das
adc
dec
movsl
sti
lret
out
and
jg
xor
das
jb
aaa
or
std
inc
test
xchg
notl
pop
mov
movsb
popf
push
sarl
mov
or
scas
sub
sub
out
jmp
cmp
int3
inc
iret
fs
aad
push
scas
adc
pop
mov
adc
mov
jmp
insl
fisttpl
and
mov
xchg
out
add
mov
jle
push
loop
sub
repnz
pop
in
out
rcl
push
sbb
push
sarb
push
sbb
movsl
rcrl
cmp
adc
push
into
lret
dec
call
sub
rcll
pop
xor
pushf
cltd
call
in
and
adc
xor
insb
jbe
andb
sbb
cmp
and
jno
push
aaa
and
sub
fadd
jnp
cltd
rcll
sub
enter
pop
movsl
int3
ja
in
pop
outsb
push
cmp
dec
cmpsb
or
xor
mov
cld
inc
cmpsb
dec
cmp
jo
fs
sub
fisubrl
mov
daa
mov
sti
sbb
int
and
aaa
pop
sbb
cmc
mov
mov
aaa
xchg
arpl
xchg
cmpsl
push
pop
add
popa
pop
lea
cmp
inc
mov
inc
scas
and
xchg
lret
lret
in
push
cli
psubsb
adc
xor
movsb
mov
leave
jnp
or
shlb
dec
adc
leave
sbb
pop
fimull
cmpsb
lock
flds
hlt
pop
ret
push
rclb
pop
aaa
xor
fnstsw
add
jle
add
cmpb
into
push
xchg
cmp
call
jecxz
jmp
fdivs
call
mov
cltd
out
mov
push
iret
es
cmp
test
or
dec
outsl
push
add
outsb
orl
movsl
jb
jl
scas
mov
cld
fbld
repnz
movsb
aaa
fnstcw
mov
test
int3
mov
insb
pusha
or
ficoms
rcr
jns
aad
test
or
push
mov
push
xchg
mov
push
mov
sub
and
outsb
insb
ss
cld
jmp
mov
cwtl
cmpsl
add
mov
insl
push
pop
jne
add
sub
out
xchg
mov
inc
enter
pop
subl
flds
pop
adc
int3
pop
jp
outsl
mov
inc
aam
add
mov
xchg
hlt
mov
jge
dec
cltd
mov
add
loop
flds
xchg
fidivrl
mov
cmc
inc
mov
fnsave
mov
daa
lahf
mov
mov
push
outsb
inc
ret
decl
addl
mov
cwtl
push
stos
sbb
xor
dec
add
push
mov
testl
inc
or
faddl
xlat
xchg
das
mov
and
leave
incb
push
fnclex
stos
inc
ret
sub
push
ret
add
lret
std
inc
sbb
cmp
mov
push
xchg
loopne
add
test
mov
clc
loop
stos
sbb
jbe
inc
cmp
mov
mov
cmp
push
fidivrs
or
fwait
pusha
sahf
hlt
rorl
pand
sti
inc
scas
or
incl
into
jno
int3
sub
mov
outsl
fadd
jge
xlat
outsb
fdivs
imul
js
dec
xchg
mov
inc
ja
push
in
cmpsb
cli
push
cli
jno
dec
cmp
xorl
mov
add
int3
out
inc
jmp
xor
stos
stc
mov
sbb
pop
jl
int3
mov
loopne
andb
mov
xchg
enter
dec
rcll
in
mov
testb
and
test
jne
imulb
insb
in
cwtl
dec
sar
xchg
sbb
shl
gs
jmp
dec
shr
pop
arpl
mov
inc
adc
xchg
dec
fldl
addl
add
dec
jb
or
push
lahf
xorb
jecxz
aam
movsb
add
and
cld
adc
sbb
paddw
cltd
push
xor
add
sbb
mov
jl
cmp
jecxz
popa
mov
inc
mov
adc
or
outsb
add
in
push
je
loopne
xchg
push
mov
leave
inc
add
fldenv
xor
xchg
inc
jo
add
shll
loopne
mov
adc
cmp
out
fnstsw
dec
xor
mov
inc
sbb
or
xchg
aaa
xor
into
outsb
or
addb
xor
push
cmp
cltd
mov
aam
jb
xchg
jo
popa
daa
mov
jne
mov
sub
push
call
cmpl
dec
cmp
hlt
adc
xchg
mov
mov
jns
in
into
fcmovbe
loopne
leave
lods
cmpl
outsb
ja
cmpsb
sti
mov
fdivl
inc
adc
fsubl
ficomps
pop
xchg
pop
add
roll
ja
rol
push
sbbb
es
push
sbb
dec
mov
cmpsl
dec
es
cwtl
sub
idiv
xor
cld
pusha
in
rclb
or
and
loopne
jp
fidivrl
lret
sbb
sub
xor
jg
mov
pop
add
mov
sub
jo
arpl
jmp
push
aad
xor
sub
cmpsl
mov
outsb
dec
jg
mov
xchg
push
xorl
shll
xchg
pop
mov
jecxz
add
ficoms
xor
mov
test
pop
lods
bswap
pop
xor
sub
xor
pop
aaa
sub
dec
cli
pop
loopne
xor
sbb
stos
pop
push
cwtl
push
mov
mov
mov
cmpb
and
mov
js
roll
cmc
xchg
xor
cmp
dec
xchg
pushf
or
out
mov
and
call
mov
pushf
dec
adc
sub
dec
scas
mov
push
push
inc
dec
push
jnp
cli
out
jmp
mov
outsb
out
jle
jmp
push
and
or
push
inc
int3
test
sahf
rol
and
and
scas
lcall
jecxz
cmp
lahf
cmpb
pop
insl
adc
testl
popa
icebp
lds
out
jnp
int
cmpsl
das
push
adc
repz
dec
jl
mov
fcmovnb
ja
cltd
nop
mov
scas
arpl
push
movsl
cmc
das
je
imul
pop
out
inc
pop
push
sbb
lods
mov
ret
aad
nop
loopne
dec
inc
fisubl
and
push
add
movsb
inc
dec
lods
jge
ja
shlb
fdivr
adc
pop
aaa
call
pop
ds
std
or
mov
cmc
lcall
sbb
push
mov
dec
cmp
icebp
imul
xlat
xor
sbb
xchg
lret
fstpt
xor
mov
xchg
sub
cltd
jo
shrl
fs
adc
std
jecxz
call
or
out
lock
sub
jno
sti
inc
fstps
jbe
popf
cltd
jecxz
movsl
cltd
push
les
dec
push
sbb
push
in
push
jmp
push
cmpsb
push
xchg
jno
cmpsb
cmpsb
mov
dec
add
cwtl
popf
inc
push
sti
call
add
test
mov
std
das
in
test
leave
es
div
xchg
int
jns
jb
int
in
or
stos
fsts
xchg
mov
loope
icebp
in
movsb
jmp
and
inc
fstl
push
in
mov
jb
dec
xor
sbb
mov
or
cmp
or
push
add
pop
push
ja
fwait
sub
fmull
push
pusha
xorb
xor
jl
popa
gs
jge
out
out
xor
cmp
push
sub
mov
jno
addr16
sbb
repnz
adcl
push
ss
andl
xchg
scas
pop
pop
inc
fwait
jae
pop
sti
call
jb
push
and
xor
pop
push
sub
jl
mov
mov
jg
add
aaa
icebp
mov
lret
sbb
insl
int3
mov
xchg
and
leave
xor
stos
nop
mov
ror
inc
out
in
mov
mov
outsb
stc
and
pop
mov
xor
sti
test
scas
fwait
ret
pop
test
out
subb
pop
cmp
cmp
mov
movsl
int3
sti
dec
inc
int3
xor
mov
cmc
mov
bound
lods
arpl
es
mov
inc
and
or
add
jle
xchg
add
std
pop
inc
insl
pop
adc
mov
scas
push
mov
test
adc
fs
hlt
pop
xchg
adc
fisubrs
ficomps
jae
xchg
lods
pushf
call
push
addr16
mov
sbb
jg
cli
mov
push
cs
ja
imul
pop
ror
test
xchg
es
popa
jnp
push
pusha
add
fstpl
test
sbb
mov
hlt
pop
jmp
pop
push
push
ret
int3
das
cli
sti
cltd
mov
ljmp
jne
add
mov
push
cmp
jg
push
mov
xor
mov
inc
mov
rorl
popa
xchg
mov
inc
push
les
lea
fsubl
pop
cmp
or
jne
xor
mov
iret
fcoml
jmp
pop
xchg
jae
int3
mov
sbb
dec
jmp
test
add
sbb
push
ret
inc
insl
sbb
mov
xor
mov
scas
nop
pop
and
push
inc
cwtl
in
mov
pop
jge
cmpsb
and
popa
insl
out
mov
xorl
iret
and
hlt
lds
pop
jecxz
xchg
insl
cwtl
lret
inc
lock
sbb
ret
push
dec
aas
mov
jae
ja
mov
psadbw
popf
xor
ss
ret
mov
xor
ja
mov
push
shr
mov
sub
fnsave
xor
lock
cmpsb
out
jp
mulb
xor
ret
sub
dec
cmp
push
mov
out
xor
jge
push
or
lods
andl
jns
mov
push
jae
mov
outsl
inc
icebp
leave
sbb
dec
imul
mov
mov
xor
into
and
sub
push
lods
pop
xor
cld
call
xchg
daa
loop
aam
sbb
ljmp
idiv
jbe
lds
pop
mov
mov
cmc
stos
jne
push
sbb
imul
lret
push
test
outsl
or
jbe
jbe
popf
jmp
push
and
dec
out
cltd
dec
pop
cmp
lret
inc
rcll
mov
arpl
mov
sbb
cmp
push
push
xchg
cmpl
mov
ja
pop
movsl
fisubrs
stc
ret
mov
ds
loop
cmp
in
hlt
mov
lds
repz
xchg
dec
and
lods
loope
jo
shlb
divb
outsl
addr16
cmp
js
and
xchg
repnz
jl
lret
scas
fnstcw
cmc
repnz
sub
sub
inc
divb
xor
imul
jae
or
dec
scas
xor
shrl
hlt
pmaxsw
pop
pop
aaa
jo
inc
aaa
mov
sub
lret
and
in
or
in
sub
and
dec
sbb
std
test
pop
adc
out
inc
jb
fisubrl
aam
mov
jp
aas
mov
jg
jbe
xchg
shl
pop
dec
sbb
push
pop
pop
iret
xor
dec
adc
push
nop
rolb
xlat
jge
ja
cmpsb
rclb
mov
xchg
mov
push
scas
movsb
and
dec
aad
push
stos
xchg
imul
sbb
mov
cmpsl
fwait
lea
lock
xor
jecxz
das
test
imul
or
scas
stc
jl
and
lods
mov
or
shrl
xor
mov
jnp
adc
sub
mov
jle
cmp
adc
mov
sub
lahf
xor
mov
call
xchg
icebp
pop
mov
adcl
push
xor
or
mov
mov
insb
inc
in
mov
mov
cli
mov
xchg
xchg
adc
in
leave
adc
insb
dec
push
inc
inc
pop
icebp
ficoms
jmp
sbbl
sahf
push
out
push
fcmovne
push
xchg
ja
pop
pushf
add
rclb
out
push
lds
dec
pop
nop
xchg
cmp
pop
pushf
pop
pop
xchg
iret
mov
out
push
outsb
dec
inc
adc
cwtl
popf
popf
and
sub
insb
inc
sbb
repnz
pop
xchg
popf
in
js
jns
ds
xor
cmp
cmp
cmp
xchg
lcall
data16
dec
rcll
cs
mov
pop
jmp
movsl
mov
pop
daa
sub
fs
xchg
sti
ret
pop
out
icebp
negl
in
mov
ljmp
sti
sbb
inc
lds
sub
push
imul
push
jl
aaa
pop
jae
dec
jge
out
les
mov
test
imul
pcmpgtd
fcmovnu
mov
dec
fsts
xor
xlat
mov
and
mov
push
sbb
sub
push
call
dec
sahf
xchg
cmp
pop
mov
dec
idivb
in
jmp
es
lea
xchg
icebp
icebp
mov
in
xchg
imul
out
push
test
xchg
sub
adc
jmp
int
push
fnstenv
nop
mov
mov
inc
roll
pop
add
pop
in
or
cwtl
icebp
dec
rolb
jg
fcoml
or
lock
cmpsl
stos
test
sbb
xchg
mov
xchg
ss
cs
mov
xchg
and
outsb
inc
inc
jnp
aad
gs
lret
movsl
pushf
cmpsb
xor
jo
inc
fs
mov
or
lahf
and
push
test
adc
sbb
sbb
leave
push
sbb
sub
cmp
dec
push
ds
loop
push
jecxz
shl
xor
jbe
cltd
pop
pushf
pop
daa
shll
mov
dec
stc
sub
cli
cmpsb
fisubrl
adc
and
out
cmpsb
jnp
shll
out
mov
hlt
fs
dec
shlb
loopne
movlps
imul
jo
adc
sub
push
add
fcmovnu
push
push
sti
push
pop
dec
inc
lods
or
sbbb
fs
or
jns
cmp
fildll
pop
sti
repnz
negl
ret
adc
bnd
xor
pusha
xchg
jbe
lcall
adc
adc
jmp
or
popf
addl
shll
lahf
fcoms
mov
pop
movsl
fists
dec
sub
fsubr
call
clc
addr16
xor
mov
fcompl
inc
cmc
fildl
les
fxch
bound
mov
jnp
push
push
ljmp
jge
jl
pop
xchg
lock
cmp
jno
ds
loope
pop
popf
lods
arpl
movsb
inc
dec
cmp
cmpsb
daa
cmc
lods
mov
or
mov
repz
cld
rcr
arpl
mov
adc
fimull
movsl
or
jl
mov
outsb
arpl
lds
cs
stc
icebp
or
pop
dec
pushaw
adc
adc
dec
dec
stc
daa
iret
inc
mov
enter
aas
jle
sub
lahf
mov
push
gs
jnp
loopne
adcb
aad
imul
das
mov
xchg
sub
test
lds
and
in
fs
mov
mull
sbb
push
dec
adc
and
mov
mov
sbb
lds
xchg
iret
sahf
jl
roll
sub
xchg
inc
jae
cld
push
push
popa
sbb
cmpsb
int
sbb
xchg
mov
mov
nop
pop
mov
inc
int
popf
notb
popa
imul
cmc
cltd
loopne
pop
pop
sub
push
nop
data16
ds
adc
sbb
xor
mov
pop
cmovge
pop
xchg
fsubs
je
push
into
rcrb
repnz
in
cld
out
and
or
int3
xchg
xchg
pop
inc
popa
insb
jbe
scas
cld
jg
insl
sbb
imulb
sahf
cld
testl
pop
add
out
ss
outsb
or
push
iret
adc
or
xchg
push
pop
jns
mov
inc
aas
arpl
cwtl
add
xor
jne
outsb
mov
out
add
dec
sub
rclb
inc
call
fs
rorb
xchg
andb
xchg
pop
push
es
pop
test
aam
cmp
jmp
pop
xor
out
mov
insb
xor
or
pop
cmp
and
out
add
xorl
xchg
flds
mov
push
adc
sub
adc
mov
dec
cmpsb
add
gs
inc
insb
das
adcb
sbbl
aam
xchg
cmpsb
subl
dec
jae
jecxz
mov
mov
mov
ja
adc
nop
ja
or
inc
mov
pop
dec
xchg
pop
imul
ret
push
lods
mov
loope
or
enter
ret
and
jecxz
or
into
shlb
faddl
mov
sbb
xor
jae
sbb
xor
and
std
mov
sahf
inc
lods
add
pushf
int3
jno
daa
mov
mov
cmp
xchg
inc
pop
cmp
insl
dec
jnp
fidivrl
xor
and
inc
insb
ret
mov
mov
data16
dec
outsb
shrb
sahf
xor
mov
fistpll
pop
rcll
test
add
cld
mov
sub
ret
jno
aaa
xor
or
dec
test
or
ds
xchg
and
or
pop
pop
or
gs
mov
add
fstpt
inc
or
fidivl
jmp
xor
fmuls
jae
jne
mov
into
push
call
add
sahf
hlt
xchg
jne
stos
mov
adc
mov
out
cli
pop
mov
aam
cmp
stos
push
lds
inc
outsl
pop
jle
shlb
cmp
aaa
ficompl
mov
test
dec
cvtdq2ps
stos
gs
xchg
aas
add
inc
fstp
lds
ficoml
in
cwtl
push
movsb
outsl
inc
dec
and
sbb
adc
inc
push
mov
rep
adc
add
into
and
xchg
jnp
cmpb
push
dec
movsl
frstor
add
bound
bound
sbb
decl
inc
mov
add
and
jge
xlat
enter
mov
dec
xchg
sbb
cmc
add
xchg
sub
test
adc
xor
jno
xchg
push
sbb
mov
or
mov
es
adc
and
push
fisttpll
hlt
xchg
xchg
cwtl
fiadds
dec
aam
aaa
jno
push
sub
xlat
push
push
jo
pop
mov
rolb
lret
cmp
inc
ffreep
push
mov
imul
xchg
adc
negb
pop
cmpsb
push
clc
xchg
fisttps
adc
mov
mov
and
dec
pop
pop
mov
add
into
push
fistpl
fwait
int3
out
inc
jo
xchg
into
lret
sahf
cmpsl
shrd
imul
mov
rclb
jno
addr16
xor
cmpsl
dec
push
add
adc
or
imul
imul
outsb
dec
movsl
push
add
inc
out
mov
xor
enter
mov
data16
xor
dec
or
cmpsb
jge
or
add
cmc
or
xchg
daa
stos
mov
cmp
aaa
popf
lods
into
mov
aad
xchg
rcrb
add
das
scas
mov
es
adc
jl
or
adc
add
inc
stos
cmp
push
mov
sub
xchg
ljmp
cmpsl
add
cmc
pop
repnz
mov
mov
int3
xor
out
jle
out
mov
mov
ds
aaa
cwtl
imul
mov
test
in
pop
std
mov
pop
inc
adc
ja
cs
sub
push
arpl
lret
xor
std
jnp
cmpsb
or
pop
aam
scas
push
sbb
mov
jmp
xchg
test
das
add
scas
mov
stc
je
cmpsb
push
int
mov
mov
outsb
insb
sub
and
aas
and
and
and
push
inc
test
daa
mov
xor
or
sub
sub
push
pop
or
xor
xchg
sbb
loop
xor
out
jmp
pop
inc
call
daa
push
add
cmc
call
xlat
jae
and
movsb
aaa
dec
push
jno
leave
in
and
xchg
cs
iret
aaa
lea
outsb
cmc
xor
out
fcomps
mov
or
fwait
popf
sbb
push
sub
aam
push
push
lret
in
xorl
addl
jns
sarb
aad
sub
imul
icebp
fsubr
ret
rol
out
stos
cwtl
cltd
popf
cmp
push
push
add
addr16
or
iret
xchg
lcall
jp
push
ja
outsl
sbbl
dec
cld
lods
loope
mov
fnsave
push
jae
andl
cld
testl
sbb
push
push
test
ljmp
mov
popa
sti
rolb
ret
add
call
sub
push
fisttpl
mov
sbb
jne
icebp
mov
aad
inc
adcb
ucomiss
sbb
adc
jecxz
or
movsl
into
dec
add
out
test
or
mov
lahf
jns
jg
xchg
pop
pop
adc
lods
add
es
mov
adc
mov
pop
js
in
mov
cmp
incb
out
aam
rorl
push
cmp
jnp
stos
cmp
rcr
movsb
iret
es
mov
push
mov
adc
aas
lret
mov
test
cmp
mov
or
cmpb
repz
cmpl
and
xor
jp
push
dec
cmpb
adc
xor
xor
add
xchg
pop
push
in
les
repz
push
into
cmp
inc
imul
lds
add
rolb
push
pop
sbb
nop
dec
add
fisubs
dec
je
add
dec
inc
cmp
out
or
xchg
nop
data16
das
mov
dec
mov
xor
pop
xor
push
das
cwtl
push
push
xor
mov
loope
jo
inc
cld
push
cmp
cmpl
fistps
ret
repz
jge
xchg
andb
pusha
jge
xlat
xchg
push
lods
shl
and
fdivs
jbe
aad
jl
lds
lret
cmpsl
dec
sahf
sub
mov
xor
mov
ret
inc
sbb
scas
repnz
inc
cmpsl
scas
jmp
fiadds
lahf
lea
push
pop
inc
scas
mov
fs
ret
orb
or
xor
xor
sarl
and
test
inc
sub
stc
repz
mov
lods
or
call
push
xchg
outsb
aad
or
pop
sub
dec
inc
test
and
cmp
cwtl
das
insl
cwtl
add
sbb
jg
dec
cmp
sub
adc
sti
jno
jmp
and
push
sub
ret
push
das
push
sar
mov
mov
mov
sub
push
push
popa
jae
adc
mov
repz
outsl
dec
lret
jl
mul
cmc
mov
add
mov
xor
and
jge
loop
in
jge
rclb
xchg
les
mov
dec
stc
das
aas
aas
cmp
xchg
cld
insl
mov
mov
es
pop
adc
enter
hlt
mov
pop
adc
and
out
push
bound
lods
or
leave
test
fstl
and
lea
jecxz
ret
dec
movsb
xchg
mov
push
outsb
adcb
rcrl
std
rcr
push
mov
outsl
pop
adc
mov
aad
inc
jne
inc
cmpsl
fisttpl
je
lods
loopne
sbb
lea
cmp
test
pop
mov
xlat
mov
adcl
mov
jae
mov
push
push
cmc
push
loop
ret
cltd
popa
sub
jg
jo
sbb
outsb
in
mov
cmp
insl
rolb
dec
jle
jno
aad
shll
roll
inc
bound
add
push
adc
es
int
jmp
repnz
mov
add
lds
mov
cld
or
pop
stos
adc
push
rcl
jo
pop
cmp
pusha
repnz
popf
fucomi
mov
mov
out
sarb
push
xchg
add
lcall
lahf
jmp
aam
outsb
mov
mov
xor
ljmp
cmpsl
test
push
and
xor
push
sub
push
jl
je
push
psadbw
aam
and
js
ljmp
shll
insl
in
aad
jo
shlb
fwait
adc
insb
dec
out
subl
jbe
push
jmp
cld
mov
gs
cli
dec
lcall
mov
fisubl
dec
out
xchg
jl
in
hlt
es
dec
clc
push
add
jb
movq
mov
cmpl
jecxz
cmp
pop
jae
add
popf
cmp
mov
pop
ljmp
lcall
sahf
stc
push
and
cmp
jo
xor
or
mov
adc
cmp
jge
out
sub
cld
scas
les
xor
cmp
gs
mov
xchg
arpl
cmpsb
int
xor
aas
lods
mov
mov
or
pop
mov
push
fdivrs
push
add
aaa
fisubrl
push
xchg
stos
lret
adc
popf
xchg
outsl
into
outsl
pusha
and
call
inc
test
mov
cmp
push
ljmp
loop
stc
andb
fwait
add
cmp
jecxz
mov
pop
out
jo
add
cs
jmp
scas
enter
xor
ljmp
and
sub
sbb
and
sbb
xchg
cwtl
ret
inc
iret
cmc
in
imul
inc
xchg
insl
lods
in
std
or
jg
in
sarl
cmp
jo
or
or
adc
pop
call
adc
pop
pop
aaa
aas
push
loop
add
pop
cmp
mov
dec
out
jnp
jg
push
xchg
lret
mov
leave
add
and
xchg
mov
hlt
imul
loop
mov
sbb
inc
rolb
jg
loop
lds
outsl
jl
stos
sti
mov
lds
out
jne
push
cmp
mov
dec
cmp
test
push
pop
call
les
out
imul
ljmp
fdivrl
push
push
addl
xchg
jnp
dec
std
insl
fsubr
dec
cmp
push
add
sbb
mov
fcmove
call
outsl
lahf
mov
out
inc
int
stos
cltd
and
and
pop
mov
inc
jnp
divl
int3
sub
cwtl
mov
cmp
mov
and
adc
mov
shll
cli
xor
shrb
fs
fldlg2
dec
ljmp
gs
rorb
or
scas
out
addl
xchg
and
ret
jge
cmpsb
push
push
movb
pop
lds
xor
mov
ds
mov
cmpsb
sub
sub
push
or
adc
mov
cmp
pop
test
stc
jp
mov
loope
or
cmpsl
xchg
xchg
popf
push
lods
aas
icebp
push
add
ret
and
jno
or
sub
andl
rcrl
and
add
in
aam
and
push
sahf
mov
sbb
mov
es
dec
inc
adc
jg
cs
cltd
aaa
out
cmp
mov
into
insb
stc
cmp
mov
dec
shlb
shl
std
xchg
push
adc
test
add
add
and
xchg
sub
pushl
xor
xor
sahf
sub
aad
pop
xchg
pop
xchg
jbe
pop
sbb
push
add
dec
jnp
call
or
inc
pop
xchg
iret
divb
rclb
pop
pop
push
xor
xor
cmp
mov
ds
push
adc
cmp
xchg
xor
jle
icebp
aam
pop
outsb
out
ljmp
sbb
inc
fwait
aaa
push
dec
rclb
mov
adc
push
aad
lret
cmp
dec
push
pop
inc
aam
dec
sub
push
incl
shll
pop
add
in
fs
push
addr16
adc
test
leave
gs
fsubr
inc
push
mov
and
clc
cmp
jae
jnp
arpl
nop
xchg
sub
nop
sbb
jle
xchg
mov
pop
into
iret
inc
mov
fisttps
test
fdiv
ret
stc
xchg
dec
test
lea
inc
ljmp
mov
mov
lods
das
pop
aas
ds
xchg
stos
inc
clc
pop
lahf
xor
int
pop
sub
jae
or
cmp
fbstp
cmpsb
aad
dec
daa
sqrtps
cmp
outsl
mov
stos
or
dec
mov
push
leave
sub
arpl
dec
mov
jle
dec
loop
lock
orb
fldenv
cmpsb
jne
mov
shll
sub
mov
cld
ja
in
imul
add
dec
add
fwait
jle
gs
dec
push
subl
sub
add
stos
pop
sbb
mov
pop
cmc
test
les
inc
push
inc
insl
icebp
adc
popf
push
repnz
into
lret
je
cmpsb
inc
jae
lcall
pop
iret
jbe
push
jbe
mov
mov
inc
pop
mov
shll
or
push
in
call
push
ljmp
mov
xchg
lahf
jle
aas
inc
out
xchg
aad
jg
into
sarb
pushf
fldt
addr16
mov
aaa
stc
mov
outsb
lods
pushf
jg
call
pop
push
lock
add
sbb
push
sub
mov
cltd
insl
xchg
rolb
es
mov
daa
pop
loop
fucomi
and
pop
or
insl
mov
cltd
sub
pushf
sti
outsl
and
add
adc
cltd
pop
pop
mov
shrl
or
jae
pop
sbb
jecxz
nop
mov
mov
pop
cmpsb
push
lret
or
ja
cwtl
inc
xchg
fwait
mov
cs
ror
inc
insl
scas
xorb
leave
mov
pop
fildll
sub
shl
clc
ret
data16
popa
repz
push
mov
lcall
adc
xchg
inc
jb
sahf
add
xchg
dec
out
daa
scas
jmp
and
imul
insb
shlb
in
or
aas
lea
leave
fwait
mov
mov
push
push
cmp
aam
hlt
sti
pushf
add
push
lret
push
sahf
pusha
xchg
popf
adc
lea
adc
dec
xchg
ljmp
and
sti
sarl
sarl
push
or
js
push
gs
out
pusha
dec
or
mov
inc
pop
or
les
dec
sub
push
push
jl
rcll
push
xchg
loopne
push
mov
or
in
aam
add
jo
xchg
mov
xchg
testb
js
js
cli
sub
add
sub
test
call
icebp
xchg
imul
mul
pusha
add
mov
cmpsl
inc
jmp
add
inc
icebp
dec
icebp
hlt
out
rorb
cmpsl
inc
jg
adc
fisttpll
hlt
fldz
cmpsl
out
mov
pop
sbb
loop
je
add
repz
pop
push
aaa
test
jno
xor
push
or
dec
or
bound
les
rclb
cmp
xchg
and
pop
popf
fldcw
out
lret
scas
cs
aaa
popa
test
or
hlt
inc
shrl
into
mov
ret
cltd
inc
mov
cmp
xchg
and
leave
iret
xchg
adc
push
pop
in
mov
ret
pop
outsb
or
mov
pop
aas
sbb
stc
sub
jns
cmpsb
int3
into
dec
into
test
jne
sub
sub
mov
aas
ljmp
and
mov
mov
cld
out
xchg
inc
push
inc
adc
mov
jb
repnz
jl
data16
pop
push
jge
mov
lock
xchg
jp
jl
rcrb
scas
xchg
icebp
xor
inc
dec
or
cli
xchg
aad
cmc
lea
mov
cwtl
inc
ljmp
ss
sub
jo
imul
int3
sbb
ja
test
xor
ret
mov
jecxz
jnp
pop
jno
inc
stos
lcall
cmp
scas
ja
add
negb
les
add
dec
and
cmp
aam
arpl
dec
jl
sbb
inc
and
pop
in
aam
xor
mov
or
test
repz
ja
mov
scas
jl
push
mov
lds
jmp
xor
cli
xchg
pop
sub
jae
pop
dec
in
sbb
or
lret
dec
idivl
cmc
adc
mov
shll
das
jns
sub
insb
inc
add
jae
dec
or
pop
jp
scas
mov
and
dec
repnz
aam
xchg
ret
add
xor
les
insb
outsl
adc
and
fadds
fwait
jne
movsl
mov
cmp
popf
sti
pop
pop
addr16
les
outsl
adc
cmp
or
sahf
clc
test
cmovbe
jmp
dec
cs
iret
adc
sbb
pop
xchg
movsb
mov
loope
stos
fs
inc
mov
stos
idiv
pop
lahf
or
pop
adc
add
mov
je
sbb
xor
lret
mov
push
xchg
xchg
test
orl
inc
fnstenv
mov
mov
add
pop
into
xchg
fwait
out
cmc
out
xchg
push
push
in
cmc
dec
loop
std
rclb
das
dec
jb
inc
data16
lcall
gs
xchg
hlt
xor
iret
inc
pushf
jle
lret
insl
es
shll
add
pop
arpl
fdivrl
test
inc
push
pop
lods
decb
xchg
adc
fchs
cli
dec
or
push
stc
or
inc
or
aam
sub
aas
sti
xchg
xchg
jl
sahf
add
sbb
aaa
add
jne
hlt
mov
lds
shll
mov
sbb
xor
lock
aaa
jmp
movsb
pop
leave
cmpsl
dec
dec
lea
push
mov
setb
cwtl
call
jg
das
das
inc
cs
std
jl
and
mov
out
decl
and
xorl
lock
inc
mov
cmp
int
aad
ret
cmp
ret
cli
or
icebp
in
add
jecxz
sub
sub
scas
loopne
dec
jmp
mov
cmp
fiaddl
cmp
out
push
out
sti
fsts
sbb
clc
fs
or
orb
rcll
mov
test
xchg
xchg
xchg
shrl
inc
lahf
shrl
mull
sub
roll
std
add
sbb
cmp
cmc
jo
jecxz
fildl
adc
fs
jecxz
lret
dec
mov
mov
mov
mov
out
punpckhbw
add
xchg
mov
mov
sub
mov
fisttpl
dec
js
pop
sbb
popf
aas
jae
std
mov
subl
xchg
xchg
lret
ds
ljmp
sbb
xchg
cmp
push
or
cmc
incb
mov
cld
repnz
addr16
loop
or
jmp
pop
mov
or
inc
rorb
shrb
test
inc
in
adc
push
iret
faddp
mov
ds
lret
lahf
mov
mov
xchg
mov
fnstenv
pop
cli
pop
scas
inc
clc
ret
cmpb
rcrb
std
imul
imul
rcrl
adc
movl
push
stc
bound
pop
pop
pop
cwtl
pop
int3
outsb
add
pop
inc
pop
pop
push
pushf
scas
sbb
das
adc
xlat
into
jg
fsubs
nop
sub
mov
test
push
mov
sbb
rcl
add
pop
mov
xchg
mov
push
sbb
stos
stos
divl
jp
xor
addr16
je
cmc
fs
push
push
xchg
mov
dec
nop
mov
dec
and
rcrb
jp
mov
pop
jb
mov
adc
fisttpll
fcoml
and
mov
cwtl
int3
jge
mov
mov
loope
jo
in
stc
fs
mov
add
movsl
lock
aam
mov
mov
adc
mov
jl
adc
in
dec
jo
adc
fldcw
imul
stos
adc
cmp
daa
test
push
mov
dec
sbb
data16
mov
test
cmp
and
xlat
inc
push
insb
movsl
push
jp
loopne
adc
push
sub
mov
cld
les
insb
shrl
inc
jns
mov
inc
dec
in
mov
mul
shl
mov
icebp
jne
jae
sahf
mov
int3
dec
sub
in
jo
inc
js
dec
into
xor
iret
subb
in
dec
cmc
imul
pusha
test
cmp
push
mov
jnp
movsb
sbb
cmc
jl
add
int3
js
xchg
jge
cmc
pop
pop
xchg
cs
das
add
shl
mov
cmp
adcb
aad
test
in
mov
jge
adc
dec
mov
jnp
dec
shrb
mov
popf
data16
xor
adc
sbb
jmp
fwait
ret
jne
repz
dec
jmp
mov
mov
outsl
cmpsb
test
out
out
mov
sub
dec
sub
ljmp
ds
or
rorb
out
cwtl
cmpsb
add
jbe
pop
push
pop
pop
xchg
mov
lret
and
into
and
test
call
mov
adc
pop
inc
cld
ret
icebp
fwait
push
test
subl
in
adc
push
or
cmp
les
movsl
sbb
or
ror
jp
jo
sbb
repz
stos
mov
lock
cmp
cmp
andb
jp
test
sahf
and
xchg
lock
jns
or
stos
push
inc
xchg
jecxz
cltd
and
pop
jae
enter
dec
in
out
and
push
mov
push
jbe
pop
dec
push
mov
and
mov
out
in
je
or
sbb
push
mov
cmp
rcrl
dec
es
aam
mov
bound
out
shll
cmp
and
mov
inc
inc
js
ret
and
mov
sbb
xor
shrl
mov
add
inc
sbb
jp
aaa
pop
dec
xchg
paddusw
add
stos
adc
jp
jno
pop
icebp
jl
and
add
xchg
xor
xorl
std
fiadds
data16
shl
clc
dec
les
clc
test
and
jbe
push
aad
scas
clc
xchg
stos
mov
and
and
cli
mov
lcall
movsb
ja
and
or
dec
aam
iret
or
cmp
xchg
jnp
ret
lock
inc
fildl
lea
addr16
lds
cmp
jmp
cmp
dec
scas
rcr
pop
xchg
popl
test
sub
xor
inc
xor
mov
cmovg
js
in
adc
in
shl
xchg
mov
xor
loope
leave
inc
movsl
sbbl
jmp
mov
mov
rclb
gs
cmp
sbb
andl
mov
scas
xor
subb
mov
lret
xlat
sbb
pop
stos
sub
aaa
test
movsb
mov
in
jns
xor
outsb
xchg
les
lock
inc
gs
lcall
sub
pusha
loop
sub
inc
sahf
dec
sbb
cmp
fdivrl
adc
in
in
xor
out
push
subb
lahf
push
insb
pop
iret
ret
add
arpl
mov
jb
pop
jp
sbb
adc
scas
cmp
sub
sub
mov
mov
mov
jno
call
pop
popa
js
mov
ret
dec
fisubl
adc
scas
pop
xor
push
adc
jne
sub
loop
xor
test
push
dec
movsb
xchg
xchg
lea
decl
xchg
cmpl
loope
gs
mov
rcll
jp
inc
cli
mov
cltd
pop
pushf
xchg
popa
aam
xor
loopne
in
push
add
jge
sub
das
mov
mov
mov
in
xorl
idivl
js
pop
fs
pusha
cld
stc
jecxz
jne
pop
add
mov
xor
cmpb
or
cwtl
imul
test
test
dec
gs
cld
pop
dec
test
xchg
jbe
es
cwtl
out
lret
adc
add
sti
ja
jb
fimuls
push
pop
and
mov
jl
repnz
fcmovb
mov
pop
pop
pop
mov
add
stc
arpl
ss
jle
and
jnp
sar
adc
icebp
lea
xor
cmpsb
ret
int
call
and
add
cmp
dec
sbb
push
lds
mov
loope
leave
mov
mov
xlat
mov
pop
sbbl
push
loopne
push
push
int
shrl
sub
adc
test
in
or
xchg
ja
rcr
aas
mov
push
stos
ss
aas
sub
test
insb
js
xor
jo
mov
fsubrs
inc
stos
push
adc
and
jp
lret
inc
call
sub
push
dec
adc
inc
loopne
sahf
xor
insb
mov
insb
mov
test
ds
addr16
xor
fisttpl
movsb
lods
pop
sbb
cmp
or
inc
flds
fstps
cmc
dec
sarl
sti
lock
movsl
stc
scas
ret
fimuls
in
jge
pop
mov
pushf
adc
sti
aad
test
cmpl
adc
adc
ljmp
out
into
dec
jns
mov
fs
pop
aas
mov
sub
and
mov
mov
mov
dec
mov
adcl
and
add
sti
imul
aad
andl
pop
xchg
loope
push
jmp
jmp
mov
stos
sarl
fsubl
xor
mov
mov
pop
call
pop
dec
lods
cmp
fmul
stos
ror
or
sbb
or
xchg
ljmp
mov
xor
push
or
popa
arpl
xchg
fsubr
push
and
xor
xchg
add
divb
push
inc
fdivrs
call
pop
sub
or
popf
jp
pop
sbb
jmp
addr16
mov
aam
mov
pop
insl
js
mov
mov
jb
mov
push
or
fld
mov
test
sub
add
insb
mov
out
jns
sub
rcr
mov
mov
push
inc
jp
lods
xor
testb
jecxz
addr16
outsl
fistl
xorl
cld
dec
fwait
les
and
pusha
sahf
scas
sub
sahf
in
je
loope
lds
mov
decl
cmp
std
out
sbb
pushf
fs
outsb
sub
cmova
cltd
xchg
mov
dec
add
nop
scas
mov
or
mov
in
iret
mov
outsl
lahf
lock
and
lock
mov
les
loope
mov
outsl
fdivs
stc
fnstcw
add
outsl
daa
sub
push
push
in
in
addr16
inc
cld
iret
adc
fdivp
cmp
rcll
movsl
fsubs
push
mov
add
fnsave
push
ja
pop
mov
lock
loop
imul
mov
cld
cwtl
aam
jl
jae
adc
add
add
push
stos
jae
nop
push
insb
inc
sub
shll
mov
push
cmp
and
movsb
ret
mov
mov
sub
and
ja
adc
jbe
call
hlt
push
add
and
push
cmp
in
push
dec
mov
sbb
cwtl
lods
aaa
sub
pop
mov
xchg
test
lds
outsb
sub
mov
sbb
push
xor
push
push
and
mov
loopne
jnp
or
mov
or
leave
sbb
push
sarl
dec
fidivs
adc
pusha
inc
or
cld
sbb
add
sub
xchg
cmpsb
sahf
push
and
or
xchg
pop
push
push
into
sub
std
leave
pop
xchg
bound
mov
rorb
adc
cmp
mov
add
imul
and
popa
xor
rolb
scas
cmc
rolb
lahf
outsb
mov
shll
clc
push
pop
popf
test
lret
out
nop
call
out
jnp
xor
cmp
out
sbb
ja
fcmovu
test
popa
xor
push
mov
xchg
test
loopne
mov
sti
jle
shl
xor
daa
jl
popa
mov
push
iret
pop
mov
push
int
cmpsl
pop
mov
cmp
aam
sub
inc
xchg
pop
add
inc
rolb
movsb
rcr
push
lahf
dec
and
loope
add
mov
dec
push
mov
fwait
stc
jge
sbb
sub
das
aaa
xchg
mov
outsb
push
imul
outsl
dec
in
mov
sub
lea
int
xchg
in
adc
mov
mov
cmpsl
pop
add
mov
xor
mov
rorb
add
pop
test
pop
loope
cmp
fs
xor
test
lock
pop
fdiv
lods
cmp
stc
xchg
int
and
dec
out
mov
adc
movsl
js
daa
jecxz
mov
ljmp
mov
mov
into
adc
pop
add
jp
pushf
in
dec
sbb
daa
xchg
mov
sub
data16
push
insl
adc
mov
ljmp
fsts
dec
add
pop
loop
jo
test
mov
and
push
mov
sbb
push
ja
scas
xchg
cs
ljmp
add
xchg
mov
es
push
mov
in
xchg
ret
movsb
fnstenv
sahf
pop
push
push
pop
sbb
outsb
and
adc
or
push
adc
xor
xchg
fsubs
insl
lock
imul
bsr
sbb
pop
sub
cwtl
cwtl
mov
std
or
xchg
adc
cmpsb
cmp
out
test
subl
pop
leave
pushf
cmp
and
push
fucomi
mov
std
or
gs
hlt
mov
movsl
mov
add
into
mov
loop
fdivp
fwait
xchg
mov
in
les
dec
mov
push
xchg
and
inc
cltd
in
xor
fs
and
outsl
out
mov
mov
pop
adc
lret
js
int
jecxz
test
xor
or
push
insb
mov
pop
shrl
or
scas
aaa
cmp
out
mov
inc
inc
add
imul
add
cwtl
test
jmp
data16
jnp
testl
andb
jno
jae
rolb
in
fwait
pop
sti
mov
xchg
popa
lea
faddl
inc
int3
jge
push
mov
addr16
cltd
aaa
jnp
xor
inc
cmp
sti
movsl
shrb
or
lea
ja
dec
subl
jecxz
les
or
pop
fsubrs
insl
jp
pop
pop
xor
mov
inc
fwait
out
sub
ljmp
pop
and
jae
ret
add
cs
loopne
cmp
cmp
xchg
mov
lret
out
imul
movsb
jo
mov
push
dec
xchg
and
arpl
aam
xor
aad
push
insl
js
push
mov
outsb
imul
add
fildl
mov
fsubl
dec
push
add
pop
test
sbb
add
adc
jp
lock
out
out
mov
cmc
jle
scas
stc
xor
ss
cmp
imul
gs
leave
aam
loope
jb
add
subl
out
push
dec
call
stc
cmp
adc
jmp
aaa
mov
xchg
cmp
cli
jbe
sub
stos
xchg
mov
xchg
sbb
cmp
mov
mov
add
pop
stos
ljmp
cmpsl
loop
or
das
mov
outsl
mov
pop
jo
mov
mov
mulb
test
or
dec
ficoml
push
pop
adc
stc
fxch
jne
stos
mov
out
push
cmc
push
out
sub
xchg
daa
mov
pushf
inc
and
les
ret
enter
and
mov
jb
xchg
out
shrl
xchg
sahf
enter
inc
lea
dec
jle
xchg
mov
xor
push
mov
insb
sub
pop
xor
add
pop
sbb
lcall
cmp
mov
mov
xor
inc
outsb
jnp
add
xchg
push
std
dec
imul
sub
inc
sbb
into
xor
arpl
push
xchg
jbe
mov
lcall
insl
repz
add
jmp
mov
sub
ds
pop
scas
mov
push
cmp
push
bound
int
xchg
fmull
push
clc
cmpsl
inc
outsb
mov
insl
leave
mov
nop
push
call
loope
fisubl
scas
inc
or
dec
data16
sahf
test
push
or
mov
imul
push
xor
lods
insl
lahf
std
inc
ss
or
clc
or
push
push
pop
test
scas
push
hlt
int3
or
xchg
inc
cmp
imul
std
out
scas
dec
notb
lock
gs
jae
mov
or
lahf
adc
dec
fwait
mov
jns
and
subl
jl
clc
lea
xor
outsb
dec
sub
rolb
movsb
fwait
sub
shll
je
packsswb
add
mov
or
js
jle
cmpsb
outsb
pop
cltd
cmc
jmp
push
adc
xorl
pusha
jns
fnstcw
ds
int
xor
popf
pop
mov
les
and
jno
push
dec
xchg
and
insl
inc
pop
or
or
in
xchg
sbb
shlb
addl
scas
scas
push
inc
popa
jae
xlat
mov
dec
inc
lahf
test
jp
pushf
xchg
andb
negl
fwait
out
aam
gs
mov
int
loope
out
loop
leave
mov
insb
gs
jbe
enter
push
and
add
bswap
mov
dec
shlb
cmp
inc
or
push
nop
dec
lock
fisttpl
inc
cs
test
dec
aaa
in
clc
mov
pop
insl
ja
cmp
sub
call
adc
pop
inc
and
jns
push
call
pop
add
sub
les
into
pop
adc
jecxz
pusha
inc
dec
jp
outsl
shlb
or
rolb
fdivrs
pop
cmpsl
stos
stc
sub
es
xor
push
js
adc
iret
fistpll
xchg
dec
mov
xchg
addl
xchg
xor
stos
int
xchg
mov
ret
mov
fucomp
mov
sub
push
pusha
leave
dec
sbbb
js
push
mov
aas
rclb
cmp
xchg
mov
test
ja
mov
sub
andb
and
fsubrp
in
popa
jg
mov
js
and
loopne
imul
leave
cltd
ss
push
insl
scas
sbb
cmpsl
xchg
lea
ret
repnz
xor
xor
lcall
adcb
fisubrl
xchg
jb
push
sub
cld
ror
sub
dec
xchg
lret
sbbb
push
xchg
mov
add
inc
cmp
and
shl
push
test
jne
inc
mov
xor
cmpb
mov
mov
add
or
fldcw
shll
adc
mov
ss
lahf
popf
and
inc
mov
sbb
aas
xchg
in
mov
pop
rclb
fstpl
test
pop
fwait
or
ljmp
imul
xchg
push
ret
lahf
push
add
mov
popa
mov
out
push
push
adc
movswl
or
icebp
and
mov
in
fisubs
out
rcrl
pop
pop
enter
arpl
xchg
scas
fistps
mov
mov
xor
xor
xchg
andl
fwait
popf
adc
stos
ds
imul
xchg
cmp
lahf
jns
icebp
mov
dec
mov
xor
sub
mov
ror
pop
out
test
push
xor
mov
gs
xor
jp,pt
xchg
loop
add
out
je
sub
daa
ret
inc
inc
xchg
arpl
jnp
imul
out
or
mov
mov
fdivl
jge
inc
fisubrl
lock
push
inc
sub
pop
xor
inc
test
loopne
insl
dec
jno
and
lods
xor
cltd
in
lret
cmp
dec
cwtl
lret
xchg
lods
pushf
mov
shrb
pop
mov
xor
loopne
jns
pop
add
das
scas
fs
mov
mov
inc
adc
in
push
lahf
and
mov
stos
cmp
xor
xor
movsb
adc
lahf
adc
sbb
push
out
fsub
jns
cmpsb
mov
insb
movsb
lret
out
sub
and
jl
in
cwtl
pop
fidivs
fldln2
or
lret
insl
pop
int
std
cmp
rolb
shl
lret
fsubrp
xchg
pop
andl
dec
mov
dec
sub
loopne
or
cwtl
mov
lock
ret
inc
push
stos
inc
in
cmp
dec
pop
inc
xchg
fisttpl
mov
mov
ja
inc
add
repz
or
inc
sahf
or
push
adc
and
rcll
mov
mov
jmp
rcll
je
ret
out
dec
outsb
test
mov
fimull
popa
pusha
sub
jecxz
push
xchg
push
push
mov
mov
push
sarl
in
cld
out
mov
shll
daa
adcl
ret
or
sbb
push
popa
xchg
dec
add
inc
adc
jno
sub
ror
sbb
dec
sbb
in
jecxz
mov
ljmp
sbb
jns
ljmp
decb
int3
in
add
cli
push
fistps
out
cmp
mov
mov
les
jb
push
add
mov
mov
sub
es
lods
insb
test
push
xor
mov
jns
add
enter
loop
imul
daa
or
or
xor
mov
nop
not
mov
dec
pop
shrb
and
xchg
mov
and
lahf
testb
sbb
cmp
xlat
xchg
clc
lcall
sub
lahf
mov
xlat
xchg
gs
push
mov
jb
shll
xchg
out
push
out
jo
or
into
xor
xor
inc
ss
cmp
inc
inc
mov
jle
or
push
imul
sahf
out
xchg
shrl
sti
add
push
sarb
pop
push
aam
jno
mov
loopne
push
sbb
insb
adc
inc
lods
xchg
mov
xchg
scas
fisttpl
aaa
push
adc
xor
jne
sbb
aas
jbe
outsl
packuswb
push
out
add
cwtl
mov
lret
add
xor
in
sub
in
test
push
jns
push
movsl
mov
aam
ret
fsubrs
sbb
and
cmp
pusha
mov
sub
es
push
daa
xlat
or
ja
movsb
xorb
jp
inc
adc
jb
adc
mov
jecxz
fimull
xor
shlb
mov
ljmp
gs
out
inc
and
je
xor
stos
xor
cmpsb
dec
dec
icebp
pusha
or
lds
mov
lahf
shlb
push
aad
push
andb
sbb
lcall
ficoml
sahf
or
das
jns
popa
dec
sbb
je
sbb
in
lds
vpand
sbb
mov
or
hlt
lods
inc
and
jge
jno
sub
shrl
cmpsb
in
mov
mov
adc
and
rorb
stc
ret
aas
jo
jbe
and
popa
ret
jmp
push
dec
icebp
sbb
mov
outsl
inc
aad
mov
xchg
mov
movsl
fisttpl
and
add
xchg
jge
cwtl
mov
add
notb
xor
stc
enter
outsl
sahf
add
or
pop
cwtl
cmp
in
push
dec
hlt
xor
sub
mov
sub
dec
shlb
imul
mov
jb
ret
popa
fwait
adc
test
xor
sbb
ret
and
outsb
shll
shlb
pushf
pop
pop
inc
sub
sbb
test
testb
dec
adc
adc
fs
jne
xorb
pop
lcall
and
jle
lret
enter
xor
inc
pop
push
out
pop
cmc
or
dec
lcall
lock
rclb
ljmp
fwait
clc
mov
inc
mov
call
out
test
out
sti
in
and
adcb
cs
pop
leave
call
outsb
mov
test
iret
in
das
lds
movsb
or
scas
subl
jg
fnstsw
mov
mov
adc
into
dec
scas
adc
cld
ja
xchg
repnz
cltd
mov
ljmp
pop
aaa
aad
cmp
mov
fs
adc
xor
push
mov
outsb
sub
mov
arpl
addb
pop
pop
fxam
out
xchg
jnp
mov
lret
stc
sub
rcll
rcll
sbb
sti
jecxz
loope
cwtl
pop
ja
stc
push
xorb
lock
push
mov
xor
lea
jle
mov
cmp
jge
jmp
sub
dec
iret
jns
add
sbb
push
jmp
rcrl
sub
mov
in
fildl
xchg
dec
jecxz
pop
xor
xor
mov
cmpsl
in
or
sbb
sbb
pop
dec
push
repnz
sarl
xlat
mov
scas
xchg
stos
mov
dec
jg
xlat
pop
stc
pop
jnp
ret
andb
pop
mov
cmp
ret
lahf
popf
movsb
pusha
mov
lock
inc
stc
test
or
cs
or
push
inc
or
cmp
fsubrs
call
dec
loop
stos
jp
rclb
in
rcrb
outsb
cmp
pcmpgtb
or
inc
cwtl
inc
push
cmp
jnp
or
out
mov
sbb
scas
push
jo
dec
xor
xchg
dec
mov
push
in
dec
lahf
imul
mov
mov
inc
xchg
xchg
leave
xor
push
lret
or
lcall
out
test
mov
inc
test
icebp
int3
lcall
in
test
pop
in
xchg
sbb
cmp
jmp
loope
inc
dec
loopne
push
ljmp
out
mov
push
mov
scas
inc
cmp
add
enter
in
mov
mov
stos
mov
add
mov
scas
dec
imul
sub
testl
nop
rcrl
movsb
and
xor
pop
imul
push
ss
pop
out
adc
mov
add
dec
xchg
test
rcrb
mov
cmp
lds
sub
jp
std
xlat
lock
sti
bound
mov
adc
pusha
push
scas
mov
push
das
mov
dec
or
inc
dec
jae
mov
cmp
aas
sbb
popa
push
xchg
pop
dec
mov
mov
repnz
sbb
push
ljmp
mov
subb
mov
dec
shrl
shrl
cmc
jl
cmp
mov
dec
dec
jp
aaa
outsl
mov
inc
jbe
mov
test
mov
test
and
hlt
or
mov
imul
pop
stos
xor
popl
adc
jae
ja
xor
addr16
cmp
inc
xchg
or
loop
jo
test
dec
push
ss
xor
outsb
jb
xchg
sbb
push
mov
mov
cwtl
jmp
aas
icebp
mov
add
dec
mov
xor
inc
pop
and
test
imul
inc
cwtl
icebp
add
lods
sbb
les
cmc
rorl
jmp
jne
sti
lret
cmp
test
or
mov
imull
jge
mov
push
leave
sbb
mov
fcomps
aad
sbb
mov
or
add
inc
arpl
data16
imul
xchg
rorb
sub
hlt
cs
and
mov
movsl
and
addr16
adc
sahf
inc
outsb
add
adc
xchg
sbb
and
stc
dec
adc
sub
outsl
mov
inc
push
movsl
xchg
inc
pop
inc
xlat
mov
pop
stos
lds
xorb
inc
arpl
clc
cld
push
aaa
test
orb
jno
call
push
enter
push
mov
jg
and
or
cmp
leave
test
sarl
imul
dec
mov
js
mov
lahf
and
mov
arpl
fldl
or
test
push
lcall
jp
testb
sbbl
jg
arpl
adc
mov
cmpsl
add
vunpckhps
insb
enter
push
pop
push
or
sahf
addl
inc
ret
in
dec
cmc
lds
jmp
fwait
es
push
into
xor
das
fbstp
inc
leave
inc
mov
fimull
mov
cli
sub
ljmp
aas
inc
jmp
aaa
push
ret
idivl
nop
loop
push
scas
sub
int
xlat
inc
add
rorb
daa
lods
mov
dec
add
mov
arpl
pop
mov
popa
push
test
or
ret
out
sub
cltd
sbb
mov
jo
mov
fwait
ret
aas
push
mov
out
ljmp
dec
test
lret
sti
xchg
popf
adc
fld
push
inc
sbb
xchg
mov
xchg
cmpsl
pushf
pop
cs
test
sub
sub
out
pop
fidivl
andb
jmp
test
push
ret
add
notb
jns
insl
subb
nop
or
lret
mov
addb
mov
sbb
push
xor
cmp
jmp
add
mov
mov
lods
inc
repnz
mov
cltd
cmp
mov
repz
xor
inc
or
arpl
adc
adc
or
add
ret
fnstenv
nop
mov
jecxz
mov
pushf
and
pop
pop
addr16
stc
adc
cmp
adc
negb
popf
ret
xor
mov
mov
scas
pop
pop
cmp
in
adcl
sub
repz
and
xchg
aas
mov
repz
cmp
popf
and
addb
cld
in
in
je
stos
iret
dec
bound
sbb
fcomip
pop
xorb
daa
lock
pop
adc
and
insb
adc
add
cmpsb
sub
xor
scas
loopne
pop
enter
inc
fsts
call
add
pop
jg
xor
repnz
dec
inc
xlat
dec
outsb
and
sub
daa
push
nop
cli
inc
lods
loope
shll
incl
std
iret
cmp
xor
add
mov
icebp
cmp
push
jnp
aam
push
sbb
add
xorb
fcoml
ret
cmp
jp
push
out
inc
cmpsl
push
test
and
push
xor
xor
add
jo
sub
xor
das
sub
xchg
fldcw
xchg
loope
sbb
mov
jb
xor
bnd
dec
scas
or
xor
push
out
inc
xchg
loopne
jle
bound
filds
mov
jb
cli
mov
mov
ret
scas
fwait
pop
adc
xor
test
jge
cmp
aam
sahf
inc
add
leave
pop
fcomps
dec
rcrl
xlat
push
rorb
shlb
out
pop
xchg
adc
pushf
push
in
bound
and
mov
lret
or
mov
push
xor
or
addl
scas
mov
pusha
pop
fdivs
in
cltd
mov
lods
cld
into
and
lret
sub
dec
daa
imul
xor
dec
fwait
stos
mov
sub
es
daa
outsl
mov
mov
cmpsb
cmp
xlat
jae
adc
or
insl
outsl
pop
mov
shr
out
jmp
add
mov
add
je
cmpsl
iret
jmp
lahf
lahf
aad
sbb
push
mov
or
mov
test
lods
insl
jo
push
sub
ret
dec
sbbl
mov
jge
jle
andb
bound
adc
xlat
out
test
mov
jns
outsb
repnz
cmp
sbb
cmp
mov
test
fldl
lret
push
and
aaa
adc
mov
push
pxor
rol
out
mov
cmp
adcl
adcb
mov
imul
add
push
mov
inc
sub
iret
ret
mov
pusha
mov
ds
jl
and
and
sbb
test
xor
or
enter
cmp
adc
imul
fisttps
fwait
ljmp
xor
sbb
xor
jecxz
jmp
push
cmpb
push
test
stc
cmp
xchg
fdivrl
mov
jg
xchg
movsl
in
xor
cmp
sti
lods
sbb
xchg
mov
mov
cmpsb
jmp
repnz
insb
inc
in
into
mov
mov
cmp
sahf
out
test
jg
fldl
jb
push
loopne
mov
ljmp
call
jecxz
mov
aaa
fcoms
xor
mov
mov
sbb
xor
cmc
iret
rclb
inc
aad
call
pop
in
mov
dec
pop
jno
xor
dec
popa
cmpb
inc
xchg
test
inc
lret
jno
xchg
xchg
pop
pop
xor
mov
push
shlb
cmp
jp
lock
and
aaa
pop
jp
je
rcl
js
cs
loopne
fidivrl
push
test
test
imul
loopne
leave
sub
pop
mov
stos
and
push
std
jnp
in
add
addr16
pop
les
push
fwait
js
cmp
inc
aam
roll
sub
test
int
pop
movsl
ds
mov
dec
mov
push
mov
mov
ja
insl
inc
pop
or
iret
aaa
mov
jmp
fistpl
movsl
loopne
sbb
sub
mov
scas
adc
jmp
stc
cmpsb
ret
jmp
stos
sub
cmp
pop
cmp
mov
add
jnp
adc
in
ds
repz
pop
sub
loopne
push
inc
push
sbb
adc
inc
jle
loop
push
mov
daa
or
jae
and
push
dec
pop
xchg
mov
sub
call
mov
xlat
pop
push
or
in
pop
sbb
xchg
orl
in
or
int
pop
sbb
pushf
sub
mov
push
daa
or
and
lods
repnz
and
inc
stos
dec
push
sub
add
out
popa
jns
push
je
idivb
cmp
iret
aad
or
mov
daa
bound
adc
or
mov
push
popf
mov
mov
lret
cld
xchg
sub
cmp
out
push
rcr
test
cmpsl
adc
jle
enter
and
pop
outsb
cld
cli
sub
ja
xchg
shlb
sahf
fcomps
je
jle
mov
adc
int
dec
outsl
mov
mov
decb
or
int3
jbe
jle
daa
or
sbb
cld
popa
arpl
sub
stos
mov
imul
xchg
addr16
shlb
jl
sub
push
inc
popf
pop
xor
cmp
dec
fisubrs
roll
dec
jmp
inc
call
mov
sbb
mov
outsl
push
je
xor
pop
inc
dec
test
cmp
aas
xchg
mov
cmpl
jns
xchg
ficomps
jnp
sbb
scas
hlt
ja
jns
not
add
pop
cmp
push
inc
sub
mov
mov
aas
or
push
jecxz
ss
push
push
test
lds
xor
or
pop
xor
jl
test
push
pop
or
call
sbb
lahf
mov
sarl
shr
xor
fbld
in
cmp
cltd
add
ljmp
repz
mov
std
outsl
rolb
push
push
out
xor
xchg
shrb
arpl
sarb
or
add
and
add
addl
repz
pop
xor
andb
jg
push
sub
shlb
xchg
sbb
into
ret
repz
and
pop
jl
aas
iret
out
mov
outsb
add
stos
mov
mov
insb
stc
xchg
cld
push
aam
movsl
stos
clc
shll
int3
mov
cmc
pop
jbe
jle
repz
push
jg
xor
stos
mov
movsl
cmp
icebp
dec
pop
jb
ja
test
fisubrl
cmp
ficompl
lds
adc
sbb
inc
out
pop
out
xchg
adc
xlat
push
cltd
leave
mov
stos
ret
xor
addr16
lret
testl
mov
dec
mov
sahf
roll
into
aad
push
push
inc
out
sbb
je
push
lds
stos
out
aam
mov
push
ljmp
and
pusha
push
sub
jle
test
mov
subb
insb
and
ljmp
sbb
cwtl
shl
int
pop
lods
daa
orl
jmp
jmp
ss
or
rorb
std
test
cs
xchg
icebp
jbe
popf
inc
or
out
pop
std
or
xor
pusha
sbb
in
repnz
sub
cmp
cmpsb
xchg
sbb
insl
pop
and
or
jb
aad
test
cmp
sbb
in
mov
mov
adc
cwtl
int
jl
sub
mov
adc
xchg
test
jecxz
adc
mov
insl
lea
pusha
sarb
mov
scas
sub
add
dec
imul
xchg
jecxz
cmpsb
scas
or
xchg
add
test
lcall
and
sub
jne
mov
insb
nopl
or
out
jmp
stos
push
mov
sbb
dec
or
dec
mov
inc
loope
sub
sub
in
mov
cmp
negb
jb
adc
push
jge
mov
lcall
and
cli
and
lret
test
mov
jmp
sub
pop
outsb
or
dec
dec
or
pop
cmp
es
bswap
enter
mov
loopne
lcall
loopne
insl
pop
jae
loop
adc
fstpt
dec
ret
enter
fs
mov
add
mov
test
push
jnp
call
add
jne
jb
inc
adc
push
mov
mov
xchg
add
push
mov
int3
push
fwait
fwait
jns
cwtl
xchg
pop
add
cmp
jge
push
lea
les
add
or
shrb
scas
fisubrl
in
xor
sbbb
xlat
aaa
jl
imul
mov
pop
cmp
outsl
test
jg
std
loopne
lds
jmp
mov
cmp
cmp
xor
popa
mov
sbb
push
push
fstpt
add
fiadds
or
pop
rol
add
into
sbb
jnp
jmp
add
cltd
idivl
out
push
sbb
jg
or
jmp
arpl
add
cld
clc
and
add
sbb
lret
es
outsb
xor
mov
jo
pushf
dec
loopne,pn
test
jno
add
jo
push
stc
test
dec
jmp
xor
jecxz
xchg
out
inc
fisubrs
fsubrl
loope
mov
es
cmp
add
mov
cmp
adc
mov
fwait
cwtl
push
sbb
ds
mov
sbb
or
xor
orl
jge
gs
sbb
subl
jle
mov
insb
add
push
pop
jo
xchg
outsb
mov
stos
or
std
sbb
insl
jp
push
negb
mov
inc
push
inc
cld
push
repnz
popa
icebp
xchg
in
adc
xor
pop
cwtl
lcall
dec
cmc
shll
dec
movd
cmpb
pop
sub
cmpsb
std
push
aas
test
int3
nop
shlb
add
dec
pop
pop
xchg
pop
jmp
xor
inc
out
ja
mov
fsubr
leave
aaa
cs
nop
pop
out
or
insl
inc
jo
xchg
popf
pop
mov
jnp
fwait
dec
das
addl
popa
orl
orl
push
nop
fwait
push
sbb
xor
loop
mov
push
cwtl
lret
or
sarb
mov
sub
mov
mov
ficoms
pop
test
inc
pop
add
in
icebp
xor
jge
and
xor
sbb
fidivrl
test
inc
jo
gs
mov
popa
fstl
mov
sub
es
mov
mov
test
les
outsl
pop
nop
int
inc
pop
cs
ds
scas
repz
fprem
in
movsb
xor
push
dec
js
pop
mov
rorl
and
into
insb
repz
add
adc
push
push
mov
adc
imul
shll
into
stos
mov
daa
lret
mov
pop
and
mov
adc
mov
cmpl
add
cltd
push
imul
inc
out
mov
jle
or
adc
sub
aad
mov
pop
stos
dec
andl
xor
push
jae
jmp
sub
js
mov
dec
mov
xchg
pushf
or
test
pop
cmp
jle
leave
es
push
movsb
addl
and
addr16
or
stos
push
lds
js
fbld
cmpsl
adc
cmp
orb
enter
bound
jns
mov
and
lahf
imul
adc
mov
sbb
xor
xlat
mov
lea
ds
add
ret
push
push
sbb
push
mov
dec
cmp
jno
sub
clc
adc
out
push
mov
and
push
pop
in
xor
push
push
enter
cmp
fs
into
pop
xchg
sbb
ss
out
clc
jb
lock
outsb
sbb
ss
and
inc
sub
pop
fnstenv
in
idiv
rcr
add
xchg
iret
xchg
and
jmp
lea
fiadds
lods
mov
lret
loope
mov
hlt
xchg
add
inc
ds
orb
aam
sub
jge
ss
in
mov
scas
xchg
fbld
adc
out
jb
jle
in
jno
lahf
lock
xor
or
add
pop
mov
and
inc
sbb
mov
push
je
mov
or
cmp
sti
dec
add
incb
mov
and
and
outsb
jl
xchg
jecxz
jg
gs
es
test
xchg
jb
out
sbb
xor
or
mov
notl
cwtl
lahf
adc
jmp
cmpsl
or
stc
leave
imul
or
lret
pop
dec
movsb
scas
aad
outsl
mov
cli
dec
mull
xor
rcr
add
mov
test
stos
mov
pop
pop
outsb
dec
push
subl
imul
test
pop
hlt
fsts
mov
cmp
push
int
cmp
repz
or
ficompl
dec
pop
out
lahf
jmp
cmp
rcll
out
pop
or
pop
push
mov
mov
jmp
cmp
cmpl
jne
fstl
ret
js
pop
outsb
push
inc
pushf
and
inc
cwtl
add
push
xor
xor
mov
xor
sbb
sub
shrl
pop
movsb
add
mov
ss
pop
pop
shll
cmpsl
fs
insb
pop
cld
xor
lahf
mov
inc
add
fadds
insb
into
sbb
sbb
fildl
sub
sub
loope
fwait
mov
xor
push
popf
xor
xor
lock
lahf
mov
insl
dec
gs
and
fisubl
xchg
pop
repz
push
or
sub
into
cmpsb
fcomps
pop
flds
cmp
mov
iret
fisttpll
pop
xchg
insb
xorl
cmc
jge
nop
and
aas
sub
aaa
mov
movsb
or
xor
mov
repz
sub
lock
push
inc
cli
sarl
xchg
adc
push
xchg
push
jno
in
and
and
xor
cmp
sbb
sbb
jmp
clc
andl
sti
mov
imul
sub
sub
xchg
push
or
mov
push
fnstenv
out
ljmp
imul
inc
repnz
pushf
in
add
fcmovne
mov
pop
insb
sahf
mov
insb
ja,pt
stos
push
push
or
outsl
adc
xor
add
xchg
sbb
pop
movsb
das
shl
adc
cmp
jbe
or
lea
jle
fstpl
adc
cmp
adc
clc
into
out
test
lds
push
adc
aam
bound
pop
inc
cmp
or
fists
nop
or
testb
pop
stos
ret
mov
jbe
add
pop
xlat
arpl
inc
pop
xchg
pushf
add
push
daa
mov
outsl
cli
push
mov
shrl
inc
xchg
pushf
add
add
pushf
pcmpgtd
shl
fidivrs
dec
pop
subb
xlat
xor
mov
cmpsl
push
xor
push
sti
push
mov
repnz
pushf
dec
outsl
gs
outsb
xchg
pusha
lods
out
es
add
mov
and
ret
mov
lahf
mov
xor
jmp
push
fsubrl
outsl
jg
sub
inc
stos
adc
in
lret
pusha
or
pop
mov
push
xor
or
jecxz
mov
les
mov
leave
nop
or
int3
dec
and
xchg
mov
xchg
jmp
bound
xor
in
xor
mov
inc
mov
negb
jns
pushf
jbe
sub
fs
es
in
jge
stc
popf
ret
orb
movsb
andb
fcmovu
ss
push
sub
dec
loop
push
lcall
mov
mov
test
jg
ret
addr16
xor
hlt
bound
lret
insb
inc
lcall
out
add
cmp
ljmp
adc
xchg
test
in
mov
cmpl
push
add
fwait
lods
arpl
add
in
ret
insb
cmpsb
mov
push
test
daa
lret
adc
cmp
addr16
out
xor
jae
xchg
jle
cmp
adc
cmc
cmp
push
inc
ss
jl
or
add
mov
mov
inc
jl
mov
pop
push
dec
adc
orl
mov
fwait
cli
jmp
or
xor
int
les
sbb
in
mov
clc
pusha
mov
push
repz
out
sub
xsha1
cmpsb
les
loopne
or
xor
cmc
dec
mov
inc
ljmp
inc
jo
and
mov
pop
popa
cs
sti
xchg
sub
inc
arpl
jle
cs
in
fwait
sahf
lds
lds
arpl
rcrl
sbb
mov
xor
nop
cmpsb
adc
xchg
stos
mov
adc
pop
fwait
adc
int3
xchg
sbb
mov
into
or
rcrb
sbb
mov
das
jnp
jno
call
inc
pop
and
and
ss
loop
shrb
in
frstor
test
out
ss
call
fwait
cld
jnp
jmp
add
jle
arpl
xor
mov
mov
inc
jge
adc
loopne
dec
sbb
mov
add
xor
test
jo
ja
adc
pop
clc
xchg
mov
stc
in
sub
mov
add
test
js
cmpsl
push
sub
jecxz
jb
negl
and
push
sbb
xor
xor
dec
xor
xor
cmpsl
push
push
rcll
neg
dec
adc
jns
mov
test
sub
adc
dec
pop
mov
repnz
mov
push
dec
lea
enter
fcmovnu
std
push
test
stos
pop
and
pop
subl
in
fsts
xchg
testb
adc
sahf
xchg
cli
jnp
dec
jp
addr16
add
pop
push
push
lea
cmp
imul
push
cmc
mov
movsb
fstpl
jnp
jl
mov
cmove
xor
lock
cmc
jb
testl
adc
notb
loop
in
inc
mov
jg
pop
pop
push
shll
fcmove
in
jle
push
jbe
cmp
loope
inc
insb
sti
fwait
cmp
andl
sbb
xchg
stos
xchg
dec
and
call
sarl
xlat
sti
dec
xchg
and
pop
frstor
sub
xorb
mov
gs
decl
outsb
jo
jge
or
jno
pop
dec
scas
test
andb
fwait
into
push
sbb
loopne
in
ss
jecxz
pmullw
es
fldenv
push
in
int
push
lock
fisubs
cmp
iret
or
cmp
mov
inc
sbb
fadd
insb
xor
pop
ss
int
imul
notl
insl
add
outsb
testb
stc
pop
in
fadds
sub
jb
mov
cmp
sbb
jne
scas
pop
data16
xchg
aas
dec
mov
cwtl
out
jg
in
out
andb
pop
push
sti
mov
cmp
inc
ret
inc
push
cmc
mov
inc
sbb
lods
or
jmp
das
dec
mov
movsl
jle
sahf
dec
shlb
ds
inc
xor
aas
inc
cmc
sbbl
and
add
push
out
mov
jecxz
cmp
mov
std
push
mov
movsb
jmp
data16
decb
imul
rorb
in
iret
or
xor
cmp
inc
popf
gs
xor
stos
out
cmpsl
ret
pop
lods
ss
lret
mov
jno
nop
dec
aaa
dec
fs
xor
hlt
movsb
mov
clc
xchg
cmpsl
jle
dec
pop
sbb
mov
stc
mov
cmpsl
fs
dec
add
arpl
fdivl
aas
fdivs
enter
lahf
sub
push
add
jne
mov
movsl
ja
cmpl
add
sbb
cmp
stos
test
ror
adc
ds
cld
sti
dec
adc
xor
cmp
sbb
mov
sbb
sbb
hlt
iret
mov
push
ljmp
xor
add
ljmp
jg
dec
lds
loopew
adc
push
pop
aad
out
insb
add
inc
push
pop
jmp
cmp
aaa
dec
pop
or
pop
xchg
inc
add
cmpsb
out
push
addb
or
dec
or
adc
lea
rorb
fistps
lret
mov
hlt
andl
das
cmp
add
imul
repz
or
xlat
cmp
mov
jge
pop
faddl
dec
push
lcall
sahf
cld
mov
ljmp
sub
push
dec
out
negl
in
hlt
scas
fdivrp
pop
adc
ret
mov
push
fnop
xchg
xor
mov
ljmp
ss
idivl
add
out
jno
jg
mov
mov
les
movsb
sub
lods
mov
pop
dec
sub
and
in
ret
or
pop
sub
or
outsb
mov
mov
jns
rcll
mov
jl
sub
aam
cmp
or
lds
add
sub
outsl
pop
xchg
mov
rcll
out
push
test
xchg
aaa
cmp
mov
sti
mov
xchg
sar
add
test
jge
gs
mov
cmc
mov
and
xor
xor
test
add
jnp
roll
mov
pop
int
clc
add
int
stos
jge
inc
mov
hlt
pop
pop
clc
or
daa
sub
int3
and
mov
push
cli
add
in
stos
mov
jmp
pop
mov
pusha
push
jns
cmc
add
jge
mov
xchg
out
push
mov
loop
js
push
dec
mov
iret
cmp
mov
jae
dec
and
sbb
jmp
int3
xchg
adc
jno
rclb
cwtl
and
rclb
lea
mov
ret
movsl
dec
dec
outsl
clc
fnsave
or
into
inc
inc
test
pop
cmpsb
jo
push
pop
sbb
and
pop
sbb
push
jbe
and
mov
push
test
daa
cvtps2pd
fstps
fmul
adc
in
pop
in
jge
mov
or
pop
out
lods
push
jno
inc
cmp
out
pop
adcl
add
fsubs
imul
mov
loop
inc
and
push
insl
jecxz
loopne
ljmp
sbb
mov
add
mov
dec
xchg
into
mov
jmp
movsl
sbb
movsb
cmp
add
mov
cs
pop
jnp
xor
lcall
imul
bound
int
inc
or
push
jo
push
lret
mov
cmc
popf
cmc
dec
or
lods
fiaddl
lcall
mov
enter
aas
add
jmp
lods
cld
sub
mov
mov
sub
or
fldcw
lea
pop
lcall
lcall
rcrb
mov
lods
pop
das
outsl
inc
stc
inc
jp
icebp
and
shl
ja
mov
fmuls
sbb
add
mov
mov
icebp
xchg
sub
dec
add
in
push
xcrypt-cfb
cmpsl
xchg
fistps
nop
add
add
mov
add
ret
inc
shlb
adc
add
or
jns
int3
fdivl
ret
mov
pushf
dec
es
sub
in
sub
and
dec
in
jp
les
fsubs
fnstcw
popf
sbb
sbb
lods
lcall
mov
test
ret
outsb
sub
add
out
fists
pop
aam
lahf
add
jle
scas
dec
jo
inc
sub
aad
mov
fiaddl
and
dec
nop
xor
cmp
sbb
cmc
and
jae
or
jbe
sbb
enter
jno
int3
pop
out
and
insl
popa
jle
incb
xor
push
stos
iret
es
and
inc
in
and
imul
nop
iret
inc
dec
pop
add
or
dec
or
loop
data16
pop
imul
cltd
xor
aam
decb
xorl
std
data16
mov
dec
jne
ret
aad
scas
fisttpl
mov
out
push
mov
dec
loopne
dec
int
dec
bound
movsl
in
insb
xchg
adc
cld
fisubrs
sbb
popa
int3
add
sbb
ret
mov
lods
shlb
mov
mov
pop
and
mov
leave
xchg
and
sti
je
ret
add
jnp
adc
fstps
test
inc
mov
and
and
in
out
pop
sub
orl
pop
dec
in
jns
pop
xchg
add
sbb
xor
incl
int3
inc
dec
cld
jp
aaa
pusha
not
arpl
cmp
pop
xor
int3
and
mov
and
push
mov
incb
adc
lret
or
add
inc
repnz
xchg
or
dec
push
sub
lds
cmp
sarl
dec
andb
icebp
fmull
mov
add
jno
movsl
add
jmp
loopne
js
les
mov
imul
adc
xor
adc
shr
mov
jle
or
mov
add
lret
out
push
add
sbb
cld
in
roll
xor
sbb
mov
pushw
xlat
lret
aam
js,pn
xor
in
pop
int
mov
aam
adc
dec
and
add
adc
inc
xchg
push
or
icebp
xchg
cmpb
mov
sub
shll
dec
hlt
sbb
mov
sarl
jle
adc
jecxz
int
or
insl
sbb
sub
dec
je
imul
sub
shrb
lock
mov
add
or
out
and
mov
hlt
xchg
dec
sarl
inc
call
sahf
cmc
rcl
iret
cmp
sub
jo
inc
xchg
and
mov
loop
jle
xchg
add
lret
adc
mov
data16
inc
in
mov
pop
sbb
dec
mov
ds
imul
adc
mov
add
fcoms
scas
sti
xor
mov
xchg
lcall
jge
pushf
lret
push
imul
rclb
mov
lods
mov
gs
lock
fldln2
add
test
pop
adc
and
cmc
data16
call
mov
jnp
pop
xor
and
jp
mov
dec
mov
cld
lods
fisubl
cmp
inc
inc
mov
in
les
mov
cmp
dec
pop
pop
pop
in
ja
in
dec
enter
add
cmp
fcomi
roll
cs
mov
mov
aaa
mov
pop
pop
stc
xor
and
shrb
adc
push
sbb
xchg
ret
popf
je
xchg
inc
sbb
mov
icebp
hlt
fwait
cli
sbb
dec
xchg
or
or
pop
sbb
mov
mov
test
es
jno
push
push
cmpsl
cmpl
mov
sahf
push
fnstcw
pop
ret
inc
xchg
sub
jo
lret
jg
mov
push
test
lcall
cmp
dec
pushf
mov
jge
pop
insl
sti
ja
push
jecxz
xchg
inc
xchg
icebp
xor
cmp
mov
roll
inc
sub
pop
repz
or
inc
jmp
mov
mov
jns
insl
aaa
outsl
and
mov
jb
fwait
nop
sbb
pusha
loopne
in
pop
xor
nop
enter
mov
cmp
out
in
divl
cs
adc
imul
add
scas
adc
dec
push
sahf
jae
push
or
hlt
gs
mov
imul
loope
aaa
mov
cmp
pop
gs
mov
lock
or
out
or
outsl
lret
or
ret
je
or
mov
test
addr16
or
sub
outsl
inc
cmp
mov
fmulp
daa
jae
sub
and
and
aad
adc
cli
pop
and
mov
dec
sbb
sbb
adc
xchg
inc
rcl
adc
popf
adc
lcall
outsb
shr
cmpsb
push
adc
push
in
mov
pop
xchg
int
xchg
incl
and
sub
lahf
shrl
dec
lods
or
dec
push
dec
jmp
or
sbb
and
ja
or
sarb
lods
std
add
inc
adc
std
dec
push
in
in
inc
add
dec
fmuls
cmp
cmp
pop
push
pop
add
pop
jecxz
out
in
mov
dec
pop
jo
inc
pusha
cmp
jecxz
dec
or
mov
sub
dec
cmpsb
mov
insb
adc
sub
mov
sub
adc
adc
nop
adc
test
xchg
cmp
jg
fmulp
call
ficompl
stc
aad
imul
sbb
fisubs
ja
add
dec
mov
mov
jne
loope
cli
hlt
fisttpll
xlat
es
addr16
inc
cmp
loopne
lods
lock
leave
iret
unpcklps
cmp
fists
cli
or
mov
mov
icebp
cmp
mov
jo
sarl
fbstp
mov
mov
aas
ds
pushf
fstpl
xlat
stc
jno
negl
xlat
adc
mov
inc
sbbl
and
loope
jno
lods
jno
push
cltd
and
pusha
cmp
xchg
lock
cmp
movsb
imul
loopne
loopne
scas
add
frstor
inc
mov
pop
xchg
imul
cmp
fldl
sarl
fisttpll
mov
sbb
pop
sub
add
cld
push
pop
outsl
jbe
push
sbb
mov
sbb
xchg
data16
insb
dec
push
fidivl
pusha
mov
arpl
jne
or
cmp
or
mov
not
rcr
ficomps
pop
sbb
shrb
or
pop
addr16
lahf
subb
int3
outsb
rcr
jbe
fwait
lods
cmp
jbe
ret
pop
fisubl
pusha
sbb
stc
mov
mov
lret
jbe
push
dec
pop
mov
mov
push
cmp
test
adc
dec
icebp
pop
mull
dec
jae
push
dec
call
stos
repz
jg
mov
xor
mov
ret
jo
ljmp
push
nop
dec
sahf
popf
cwtl
fistl
iret
push
xchg
jmp
push
and
jmp
sbb
jno
sub
mov
lret
sbb
ja
sbb
nop
out
das
inc
stos
and
and
frstor
subl
lock
dec
leave
and
dec
dec
cltd
sub
subb
or
jnp
fcoms
outsl
xchg
push
les
cwtl
cmp
sti
popa
dec
adc
arpl
mov
imul
outsb
inc
out
addr16
outsl
ja
mov
and
iret
adc
add
ret
sahf
push
inc
xor
ljmp
das
lret
pop
sahf
je
xchg
loopne
ret
jo
and
mov
movsl
xlat
notb
mov
push
into
adc
cli
fsubl
js
pop
in
sub
dec
in
lods
mov
jb
sub
mov
cmp
or
scas
sub
test
sub
cmc
sub
xchg
push
push
mov
pop
data16
or
mov
mov
andb
dec
xor
push
mov
int
mov
scas
cli
cmp
add
mov
cmpsb
fsub
cmp
push
jp
popl
es
push
and
dec
xor
push
fidivrs
adc
or
movsl
int3
enter
addr16
in
and
xchg
fisubl
ret
cld
test
movsb
cmp
lea
or
push
mov
inc
insl
push
jl
sarl
jge
xchg
inc
adc
xchg
xchg
cli
int3
decl
dec
loopne
daa
pop
push
jne
sub
test
sar
pusha
rclb
xor
js
and
xchg
sbbl
and
dec
ret
mov
sbb
xchg
push
inc
mov
in
jecxz
lock
lds
and
sbb
cmpsl
pushf
lret
inc
hlt
pusha
xchg
popf
mov
mov
push
jcxz
ja
mov
sti
test
inc
mov
fdivr
sub
xor
push
and
call
pop
insl
or
mov
xorl
adc
mov
dec
ds
mov
scas
sbb
push
mov
cwtl
fs
mov
pop
imul
sub
loop
ficompl
pop
addr16
cmp
pop
lcall
cmp
mov
adc
aad
aas
shr
movsl
arpl
icebp
ljmp
xor
xchg
and
sub
fisubl
mov
stos
lock
sub
lret
push
cmpsl
lods
popf
inc
mov
push
ret
xchg
imul
dec
mov
jl
adc
inc
push
mov
jg
mov
andl
ss
xor
popw
fmuls
sbb
push
stos
loope
pushf
push
leave
lahf
sbb
mov
mov
mov
xchg
jle
xchg
push
cltd
sbb
loope
movsb
mov
lret
cmp
pop
pop
outsl
mov
movsl
cmp
mov
lock
imul
sbb
fwait
repnz
sahf
cmp
cwtl
int3
xor
adc
popf
xlat
int
xchg
insb
cmpsb
dec
push
mov
mov
and
cmp
dec
das
mov
dec
cmp
fisttpl
into
out
test
movsb
jae
fisubs
sub
out
jns
sbb
cmpsl
pop
in
negb
mov
dec
dec
xor
and
cli
cmpsl
in
sub
out
addl
sub
rorb
xor
imul
push
fwait
rclb
or
cs
add
inc
mov
ds
loopne
pop
sbb
pop
pop
lds
mov
inc
aaa
push
repnz
inc
adc
push
and
divps
aam
jmp
loope
outsb
aad
push
insb
and
mov
cmpsb
mov
adc
negl
jecxz
inc
inc
pop
sahf
xor
arpl
test
pop
add
rol
sbb
push
push
lds
les
jae
imul
lods
lret
add
dec
inc
mov
pop
movb
and
push
retw
pop
int
mov
mov
mov
or
inc
push
ja
mov
imul
cltd
clc
das
xor
inc
mov
xchg
sahf
sbb
sub
mov
jne
push
jbe
jne
icebp
aaa
xor
xlat
mov
stos
dec
sub
scas
jecxz
ja
dec
jp
push
mov
push
addr16
jecxz
lret
mov
adcb
sbb
fcmovnbe
jb
add
cmpsl
pop
mov
sti
clc
mov
jmp
ficoms
out
jp
jge
loopne
mov
xchg
lcall
pop
push
push
jo
imul
push
add
es
dec
adc
rorl
rolb
push
out
xchg
jl
adcl
mov
imul
shrb
idivl
adc
scas
test
xchg
cmc
adc
add
jae
je
mov
jb
mov
jno
push
add
nop
flds
in
ret
push
test
addr16
push
mov
aaa
ret
adc
lret
in
subb
scas
add
bound
repnz
sbb
mov
ret
jle
pop
xchg
testl
jl
xchg
iret
mov
out
dec
test
addr16
popa
arpl
xor
sub
daa
inc
clc
arpl
cwtl
inc
jl
and
inc
iret
cltd
sbb
mov
insb
add
dec
imul
scas
call
test
stos
mov
push
mov
cwtl
sbb
add
mov
jle
addr16
mov
in
nop
jo
lret
addb
mov
and
cli
jmp
mov
pusha
inc
bound
je
es
fneni(8087
cmp
mov
or
loop
rcrl
jne
pop
mov
in
aaa
mov
mov
adc
iret
imul
push
jl
fistpl
inc
pop
daa
inc
sbb
addr16
add
cmp
aad
pop
notl
xor
inc
ds
jecxz
push
sbb
data16
test
push
sub
cmpsl
xor
loope
mov
arpl
mov
xor
and
xchg
sub
int3
lods
popa
mov
pop
into
nop
sub
and
in
test
mov
stos
mov
jmp
stos
mov
in
stos
adc
and
repz
sub
in
push
dec
and
mov
inc
mov
repnz
fwait
movsl
adc
movsl
xchg
jl
lcall
sub
push
aaa
pop
and
mov
inc
mov
jge
into
out
enter
movsl
sti
andb
call
imul
cmp
aad
xor
lods
mov
stos
mov
push
mov
adc
inc
fmull
insl
mov
adc
and
xchg
aad
jns
cmpsb
icebp
cli
test
jns
and
and
jp
jnp
insb
dec
int
xchg
jle
fcomp
sub
dec
lret
jl
inc
jno
or
mov
inc
xchg
fnsetpm(287
mov
sub
mov
xor
lock
and
test
rolb
and
cmp
fbld
int
test
loope
cs
lods
aam
xor
iret
mov
imul
dec
jecxz
out
and
mov
mov
fmulp
push
sbb
test
out
push
push
push
daa
inc
jge
sub
je
rcll
push
jns
mov
aad
ljmp
lds
inc
dec
dec
sub
jo
inc
xchg
sub
push
push
test
or
insl
ficomps
pop
out
std
sbb
inc
xchg
xlat
out
and
or
mov
cmp
mov
fwait
scas
dec
xor
cmp
popa
shl
stos
xchg
lds
pop
incl
fidivrs
xor
jle
insb
or
adc
in
pop
mov
loope
leave
nop
mov
adc
sub
dec
es
xlat
sub
lods
inc
int
aam
mov
aaa
in
inc
xor
sbb
jecxz
cmp
adc
sub
shrl
mov
aad
out
add
enter
rcl
fcoml
pop
dec
mov
rcrl
cmp
xchg
jns
cmp
dec
std
adc
mov
insl
or
mov
mov
jno
mov
sbb
inc
mov
and
or
and
and
popa
push
mov
push
push
movsb
push
aas
addr16
fistpll
sub
imul
cld
les
dec
stc
or
cmp
mov
test
mov
sbb
jne
pop
test
adc
mov
loope
pop
jb
pushf
movsb
inc
or
andl
cmp
and
pop
cwtl
lcall
dec
xchg
pop
decb
push
fisubs
mov
dec
xor
add
inc
fiadds
bound
popf
pop
push
adc
dec
cs
aam
xchg
pushf
sub
mov
lret
pop
jae
cmp
xor
inc
daa
add
push
mov
fidivs
xchg
bswap
lahf
inc
mov
inc
test
sarb
stc
lods
dec
jb
mov
xchg
jns
test
pop
xchg
fidivs
mov
mov
out
cmp
aas
js
mov
mov
and
mov
jnp
stos
outsb
pusha
in
sub
ret
scas
mov
repnz
jle
pop
inc
sbb
rclb
push
dec
test
dec
xchg
fsubr
sti
call
sub
int
jne
xchg
mov
fwait
das
lods
lds
push
cld
test
rorl
rep
xor
jo
inc
mov
int
adc
imul
ljmp
shl
xor
xchg
mov
das
xchg
lret
pop
fcmovbe
or
andb
test
call
jge
call
lret
cs
add
test
icebp
mov
ret
imul
std
sbb
jmp
cli
fdivl
rcll
mov
nop
or
mov
fdivl
sbb
inc
cmp
push
ds
xor
loopne
mov
and
add
mov
push
sbb
inc
mov
ffreep
call
loopne
jno
or
fsubr
mov
mov
pop
outsl
dec
lcall
push
fnsetpm(287
neg
xor
cld
xchg
mov
mov
sahf
aad
add
jno
dec
das
pop
push
daa
outsb
jo
mov
jl
adc
ja
jg
xchg
notb
adc
ja
fadds
dec
imul
stos
push
mov
jecxz
in
cli
cmp
insl
sbb
xlat
xchg
lods
mov
dec
into
add
out
jno
pushf
cld
mov
aaa
jecxz
lock
jmp
cltd
stos
sbb
mov
jae
or
pop
arpl
or
jge
cmp
into
sub
sahf
pushf
push
jne
sub
addr16
push
out
add
xor
sub
testl
lret
outsb
sub
ss
data16
aas
inc
adc
mov
les
cmp
les
outsw
push
pop
shl
int
mov
inc
out
lock
ffree
xor
not
jmp
mov
je
int
push
add
and
mov
adc
leave
ffreep
jecxz
pop
adc
jbe
fdivp
or
adc
out
dec
fisubrs
rorb
in
lock
lahf
sub
jmp
cmp
jo
pushf
fstl
test
pop
adc
sbb
adc
mov
push
inc
add
push
or
and
cmp
push
mov
add
loop
test
adc
ja
hlt
pushf
cmp
icebp
aas
pop
lods
add
sbb
stos
in
adc
popa
push
divl
stos
es
daa
filds
loopne
adc
xor
xchg
test
push
xor
mov
and
fistpll
push
cmp
mov
jp
sbb
ficomps
xlat
shll
aad
xor
mov
insb
rcll
sti
jp
jl
pop
xchg
xchg
inc
pop
xchg
pop
xorb
lcall
inc
stc
clc
adc
inc
int
push
int3
pop
sub
jns
or
add
mov
fdiv
sbb
pop
scas
jns
mov
push
popa
insl
mov
mov
lea
ffree
pop
mov
or
pop
mov
mov
pop
or
lret
shll
dec
test
pop
out
xchg
mov
add
lea
xor
add
ret
adc
mov
push
pop
mov
loope
dec
lcall
mov
jmp
aas
aam
jns
lcall
les
cmp
into
imul
sahf
sub
mov
adc
je
out
pcmpgtd
pop
inc
adc
or
add
jecxz
inc
pop
cmp
lret
xlat
sbb
lea
or
or
fmuls
cld
pop
xchg
popa
jp
xor
dec
std
pop
icebp
mov
mov
cld
test
or
fsubrl
mov
outsb
push
cmpsl
ret
xor
sbb
std
enter
add
aam
xchg
subb
jmp
and
fcoms
or
out
insl
and
aam
int
loope
imul
sbb
xchg
xor
cs
mov
dec
jge
mov
mov
pop
cmp
icebp
jmp
push
push
xchg
mov
or
cli
aaa
insb
int
in
xchg
pop
xchg
ds
or
push
dec
or
jno
and
push
xchg
mov
lret
cmp
mov
inc
ret
cmp
pop
jmp
dec
pop
and
jne
push
lods
mov
fmull
dec
je
out
lret
les
subb
lock
lea
push
cmp
pop
fbld
sbb
mov
mov
sub
inc
fs
or
xor
lret
and
int3
lret
dec
andl
test
cmp
mov
pop
add
fimuls
mov
push
in
test
nop
dec
les
outsb
lods
fisubs
cmc
jg
fisubs
cmc
cltd
mov
subl
into
insl
and
cmc
pushf
hlt
ljmp
lahf
ja
inc
dec
pop
imul
xchg
pop
shl
lea
test
inc
stos
shr
sarb
ret
cmc
add
or
cmp
push
jno
xchg
xchg
jbe
and
push
or
jne
imull
cltd
cli
int3
sbb
stos
aad
fbstp
repnz
add
push
daa
gs
mov
fs
adc
and
jg
imul
testb
xchg
sarl
scas
sbb
gs
pop
aaa
inc
mov
inc
out
mov
sar
mov
das
lods
sub
les
jnp
mov
bound
sbb
sub
inc
outsb
add
xchg
fs
subb
daa
imul
ds
mov
cld
add
mov
lods
fstpl
and
scas
shl
jmp
mov
mov
dec
je
add
je
mov
sti
add
pusha
mov
or
jb
das
int3
cmp
movsb
lea
dec
inc
call
je
push
repnz
mov
push
or
arpl
stos
cmpsb
xlat
rorb
fwait
out
mov
mov
out
mov
pop
xchg
xor
aad
mov
cmpb
iret
push
jp
mov
and
jb
ljmp
ret
mov
xor
subl
in
jns
mov
push
ja
lea
cmpsb
imul
sub
push
repnz
inc
aaa
cmp
add
xchg
icebp
pop
hlt
scas
cmp
mov
xchg
mov
ficompl
shlb
ret
mov
rcll
pop
cld
push
into
jb
cwtl
mov
xor
xor
and
sti
adc
stos
push
xchg
decl
aad
xchg
popa
jg
call
and
pushf
sarl
in
sub
xor
cmp
repnz
mov
mov
mov
shl
rcll
pop
gs
cmp
jo
xlat
pop
data16
pop
cmp
xchg
xor
stc
cmp
hlt
mov
push
sub
sub
mov
jne
inc
push
scas
or
pop
int3
movsl
dec
sbb
inc
push
inc
push
call
push
sti
and
test
popf
jp
mov
jecxz
and
loopne
or
fisttpll
rorl
sbb
inc
xor
aam
pushf
sbb
mov
sub
mov
cli
test
pushf
and
insl
fwait
repz
push
popf
push
or
aad
jle
pushl
fisttps
outsb
adc
mov
mov
sbb
in
addb
bound
mov
mov
or
pushf
data16
aad
xor
scas
push
xchg
dec
and
lahf
mov
jl
add
jne
add
es
push
xchg
cmp
mov
loope
push
scas
pop
dec
in
pop
push
mov
inc
add
std
dec
lea
test
aam
jae
xorl
aaa
jns
rolb
loopne
test
xchg
xchg
hlt
nop
outsl
adc
movsl
xchg
ljmp
inc
loope
sbb
mov
or
xor
and
push
loope
test
xchg
sub
jmp
jnp
pop
pop
mov
dec
daa
xchg
mov
or
adc
add
js
fcmovnbe
scas
mov
aas
cmc
sub
add
cmp
daa
push
cmpsl
xchg
jb
mov
xchg
cmpsl
xlat
mov
imul
mov
sbb
cltd
repnz
dec
popa
adc
adc
mov
call
fimull
cmp
sub
pusha
aas
xor
inc
or
push
or
jle
test
mov
jg
dec
mov
pushf
inc
jae
adc
xchg
dec
scas
jg
jne
push
mov
jmp
adc
test
imul
mov
imul
jne
adc
je
jne
js
gs
filds
push
test
add
xchg
push
dec
dec
jnp
je
ljmp
sub
dec
int
cld
test
or
mov
pusha
dec
mov
xchg
and
adc
mov
daa
sar
test
push
in
lahf
sub
lahf
cmpsl
xor
dec
jae
push
cltd
shll
or
movsb
adc
sub
leave
cmp
ret
sub
adc
adc
or
mov
sub
mov
ja
or
jmp
in
jge
hlt
push
daa
in
push
sub
ja
push
xchg
mov
fcmovbe
fsubrs
push
loop
push
stos
enter
inc
jl
aas
adc
push
ljmp
test
mov
movsl
jb
xor
or
or
pushaw
inc
fisttpl
dec
cmp
inc
or
cmpsb
mov
push
cltd
test
or
lahf
mov
add
jne
xchg
jge
lahf
test
pop
push
mov
pusha
inc
iret
mov
and
shll
test
mov
insb
push
fists
pusha
popf
aaa
push
jmp
mov
and
call
fisttpll
xor
jo
xor
mov
lret
sti
fwait
push
cmp
mov
fisubrl
inc
sbb
cmp
bound
jne
test
jbe
sbbb
push
cmpsb
dec
mov
stc
ficompl
fisubrs
push
inc
push
push
aam
cmp
sbb
add
sbbb
cmp
jl
sbb
dec
scas
add
xor
ret
jae
scas
xor
das
sub
xor
andb
test
or
jecxz
mov
push
sahf
cli
std
jg
jecxz
or
call
xchg
sbb
aad
in
int
insl
inc
xor
inc
ss
test
popa
out
pop
mov
lock
cmpb
je
les
jp
andl
mov
or
int3
popa
adc
jnp
pop
jl
aaa
inc
lods
imulb
adc
sub
add
sub
mov
lret
cmp
fwait
xor
cltd
mov
xor
dec
xor
cmpsb
mov
sub
xor
adc
mov
and
jns
xor
xor
fstps
or
inc
sbb
adc
adc
push
xor
lods
lahf
aam
test
and
push
lahf
enter
je
push
dec
mov
xor
lods
inc
pop
arpl
dec
mov
or
and
daa
cmp
or
fcmovnu
mov
jp
stos
aas
imul
sbb
sbb
pusha
pop
or
popa
pop
xor
mov
push
out
ror
sub
pop
sub
std
test
fildll
adc
and
adc
js
and
pop
addl
mov
lds
push
and
push
push
rcrb
dec
xchg
mov
adc
stc
ds
lcall
push
pop
xlat
ret
sub
fisubrl
or
pop
je
dec
cmc
inc
add
cmp
xchg
into
aas
jo
es
daa
div
sub
imul
cwtl
lret
out
idiv
and
into
inc
bound
in
mov
fsubrl
push
xor
xor
int
xchg
sbb
fisubrs
mov
orw
pusha
lock
fistps
mov
pop
popa
mov
repz
movsb
mov
dec
sub
shl
dec
dec
pop
ss
cmp
xchg
shrl
inc
mul
or
push
and
jns
and
repnz
jo
xchg
or
mov
lahf
xor
push
nop
mov
out
fnstsw
pop
jmp
insb
mov
imul
dec
xor
xchg
inc
stos
mov
pop
les
cmp
pop
shlb
imul
lret
xchg
jmp
mov
or
popf
mov
or
in
loopne
push
lods
testb
das
notb
adc
std
jae
sub
dec
movsl
incl
push
cld
pop
sub
inc
stos
fwait
jns
add
pop
pop
ficoms
mov
adc
add
jbe
mov
push
dec
loop
or
adc
jge
ja
lret
xchg
andl
push
sub
clc
icebp
fcomps
mov
pop
mov
out
in
fisttpll
adc
test
dec
jge
je
andl
fcmovbe
lret
mov
aaa
dec
and
xor
pop
and
pop
ficoml
imul
movsl
xlat
cli
add
xor
sub
pop
jns
and
stos
mov
ds
aaa
sbb
outsb
jle
jbe
les
mov
call
int3
in
pop
xchg
mov
inc
stos
aad
mov
pop
daa
mov
sub
sub
push
dec
xchg
pop
cwtl
js
inc
mov
scas
sbb
rclb
inc
arpl
cmp
mov
movsl
sti
pop
or
testl
ja
ss
mov
fidivs
cmpsb
loop
push
pop
inc
adc
fimull
in
push
into
inc
scas
adc
sti
jno
cmp
or
inc
int
rorb
push
sub
sbb
dec
fnstenv
xchg
sub
lcall
mov
test
popa
cmp
pop
cmp
push
pop
pusha
inc
and
loope
add
inc
cmp
sub
aas
xor
add
sbb
cld
icebp
sub
addb
aaa
sbb
pusha
xor
fmull
jne
out
lock
push
push
pushf
cld
addr16
in
repnz
leave
mov
and
cmp
loope
xor
and
xlat
inc
mov
inc
xchg
hlt
mov
pop
std
add
mov
scas
cmp
adc
push
fadds
data16
sahf
sub
jmp
dec
jbe
add
icebp
mov
iret
mov
mov
cs
int
mov
jmp
das
pop
mov
in
push
push
std
mov
je
sub
mov
xchg
cmp
ror
add
insl
push
cmc
adc
cmpl
adc
or
outsl
frstor
dec
gs
call
sbb
inc
aad
test
push
aaa
xchg
mov
add
pushf
sub
test
mov
stc
mov
sub
cs
lods
pusha
add
test
jge
push
cwtl
xchg
inc
sbb
jo
dec
push
mov
test
dec
cmpb
sbb
sbb
ret
cwtl
xchg
push
lods
push
fildl
pop
lcall
push
pop
jb
xor
clc
aaa
fists
es
mov
cmpsb
stos
cs
dec
xchg
inc
lret
xor
jae
inc
lcall
js
push
clc
cmp
push
test
test
xchg
sahf
mov
xor
cmpsl
dec
pop
insl
lods
mov
adc
xor
pop
mov
jnp
sub
pop
movsl
mov
and
jns
jbe
mulb
inc
cld
sti
icebp
push
and
xor
cmpl
nop
cmpsl
pop
dec
add
or
movsl
xor
mov
call
mov
test
jl
popl
mov
inc
xchg
pushf
jle
insb
adc
scas
mov
xor
add
sbb
push
shlb
fstpt
inc
or
add
fsts
movsb
xchg
mov
fldcw
mov
inc
dec
and
sbb
add
inc
jns
popl
xchg
dec
fstps
or
movb
hlt
fwait
dec
outsb
int
and
rorb
idivl
clc
mov
stos
jo
adc
lds
mov
xor
out
loop
xlat
mov
push
adc
outsb
jle
testb
popf
scas
mov
out
mov
mov
xchg
imul
and
jg
lret
orb
jp
xor
push
sbb
pop
mov
shll
lea
xor
push
xchg
xor
push
int3
movsl
int
mov
in
and
bnd
xor
inc
cmp
scas
jmp
shll
daa
push
and
cld
push
orl
into
push
mov
fisubl
add
lret
xchg
xor
push
cmpsb
inc
mov
fdivrl
cmp
lods
bound
jl
push
repz
daa
add
cmpl
lds
int
insb
jnp
outsl
push
inc
xor
or
adc
cld
xchg
xchg
iret
mov
repz
scas
push
mov
pop
cmp
sbb
mov
cmp
dec
stc
pop
insb
inc
push
sbb
lcall
mov
sub
les
in
mull
filds
loopne
adc
sub
lret
jbe
fisttpll
and
inc
hlt
lods
jecxz
or
jne
lea
sbb
ret
pop
inc
add
pushf
sub
pop
xchg
xchg
jno
inc
mov
mov
sti
mul
stos
pop
rolb
push
faddp
out
pop
bound
add
and
arpl
dec
into
push
ret
mov
mov
mov
cli
or
sub
inc
out
xchg
push
imul
cld
daa
mov
inc
mov
fisttps
loop
dec
ret
mov
mov
sub
andb
dec
lea
and
rol
xor
imul
mov
insl
in
xor
pusha
or
test
data16
mov
xor
and
shlb
pop
add
out
mov
add
or
jge
inc
mov
sub
stos
iret
jb
arpl
sbb
mov
ret
sti
xchg
xchg
sub
mov
xchg
lcall
out
cmp
sbb
mov
mov
jne
roll
out
inc
stos
movsb
pushf
notb
xor
inc
pop
cltd
popf
ss
mov
sbb
pop
leave
pop
pop
xor
adc
punpckhwd
sbb
xchg
sub
sub
add
mov
or
xchg
sub
call
ja
add
and
mov
repz
cld
dec
jns
insb
add
or
pop
xor
les
jo
add
jle
mov
or
negb
sbb
pushf
loope
pop
xchg
xor
pop
mov
push
or
jmp
outsl
push
fidivs
dec
shll
and
or
test
stos
inc
loopne
out
pusha
insl
xchg
xor
sub
sbb
mov
das
popf
add
repz
stc
push
push
fnstsw
pop
jmp
leave
enter
mov
gs
cltd
mov
adc
clc
push
aad
mov
mov
filds
sub
outsl
rclb
adc
in
lods
mov
xor
push
mov
pop
daa
scas
idiv
jno
xchg
lret
xchg
xor
mov
add
sbb
inc
sarb
lahf
clc
pushf
or
scas
jno
lods
pop
adc
sahf
adc
ja
jle
ja
addr16
repnz
cwtl
push
movsl
and
in
add
mov
adc
hlt
jg
cwtl
jne
addl
mov
push
mov
lea
out
push
dec
rorl
xchg
dec
bound
mov
add
sbb
lcall
in
add
and
xchg
aaa
inc
jp
je
mov
sahf
addr16
mov
and
divb
sub
ds
int3
mov
bound
mov
out
loope
xchg
mov
lret
data16
imul
call
sbb
sbb
mov
nop
outsl
fwait
jg
out
dec
xor
sbb
or
out
or
cwtl
and
adc
maskmovq
jbe
fs
xchg
scas
push
aaa
pop
mov
inc
sbb
addl
imul
xor
sbb
orb
xor
inc
pushf
test
or
int
orl
xchg
stc
outsl
fwait
mov
sti
and
xchg
mov
or
std
xchg
enter
and
sbb
jmp
mov
in
mov
loopne
faddp
or
push
adc
fmul
xchg
or
adc
ljmp
fists
test
daa
fs
mov
push
add
and
out
mov
sbb
push
mov
jl
mov
lcall
mov
pop
jae
ss
fs
iret
jp
lcall
mov
lret
inc
jg
out
sbb
cmp
push
xchg
rorl
fwait
jecxz
adc
xor
xchg
rcl
pop
sub
pop
add
sub
pop
jg
outsb
ficoms
rcll
pop
jbe
inc
lahf
mov
insb
arpl
push
jecxz
sbb
scas
inc
mov
cwtl
lods
dec
cli
shll
jmp
sti
xchg
movsb
stos
out
push
push
or
mov
sub
dec
add
and
cmp
movsb
cmp
testb
inc
mov
shll
adc
add
pushf
inc
inc
into
outsb
fwait
cmpsb
add
adc
iret
call
sahf
addr16
mov
movsb
gs
popf
and
mov
add
lahf
and
cmp
add
pop
mov
mov
negl
in
js
aaa
xchg
jge
push
push
lods
pop
sbb
aaa
repz
jno
test
aam
lods
mov
stos
add
or
lock
sbb
imulb
loopne
rcrl
mov
stos
addr16
or
pusha
push
and
lods
push
shlb
and
insl
adc
rclb
aaa
xchg
lds
loope
je
hlt
ficoms
test
and
or
cmp
mov
add
and
lret
mov
cs
jge
and
cmp
imul
pop
sbb
js
into
cs
sbb
jns
icebp
cld
dec
jno
or
push
mov
pop
enter
sub
rep
ljmp
dec
fsubl
enter
and
xchg
push
cmp
movsb
cmp
adc
subb
pop
pop
paddusw
or
lock
sbb
mov
mov
sahf
mov
cmc
inc
jno
lods
push
jmp
in
lcall
cwtl
push
insb
push
in
dec
jae
pop
cmp
and
cmp
stos
and
scas
sub
pop
addr16
jne
sbb
fldpi
es
imul
add
push
xchg
push
add
cli
mov
aaa
inc
jnp
jl
sbb
cld
lcall
call
ja
sub
or
lahf
dec
xor
inc
int
cs
aaa
dec
out
loope
push
jae
clc
jb
adc
jb
ds
js
out
dec
andb
sbb
or
shlb
xor
sub
mov
dec
sbb
cmc
pop
mov
insb
mov
cmp
jbe
push
shlb
adc
cmp
gs
lahf
es
hlt
sahf
mov
mov
scas
push
jae
daa
pop
sti
pop
out
ss
dec
and
mov
popf
cwtl
out
adc
insb
inc
jbe
xor
xchg
xlat
push
dec
cwtl
movb
sbb
and
fdivrl
repnz
and
xor
es
mov
and
jg
pop
cmp
jo
pop
nop
inc
push
popa
xchg
pop
pop
shl
sbb
xchg
insb
sub
je
fbld
sub
push
cmp
jp
popf
hlt
leave
fsub
mov
subb
or
sub
mov
or
inc
mov
and
aaa
lret
int3
fisttpll
imull
cmc
sbb
sub
mov
mov
fnstcw
ficoms
mov
test
aas
lock
fmul
xchg
push
mov
loop
and
pusha
add
mov
and
nop
jns
fst
mov
mov
mov
sbb
add
out
sub
icebp
out
jmp
and
mov
jp
xor
out
xchg
dec
cmp
push
inc
pusha
mov
jnp
cmp
fs
mov
pop
mov
ss
add
in
jae
loop
mov
dec
movsb
push
xor
jno
enter
push
aam
dec
lret
rcll
data16
mov
xchg
or
cmp
fistps
popf
add
int3
lret
mov
ds
ret
and
sbbb
xorl
dec
push
cltd
push
mov
mov
pop
int
and
sbb
jne
inc
or
loope
cwtl
cwtl
jmp
add
fcoml
dec
in
fs
dec
jmp
push
adcb
mov
fwait
lds
xchg
jne
sbb
adc
cmpsl
lods
negl
cmp
sub
sbbb
lcall
cmp
fbld
enter
push
ds
adc
xor
add
rcrb
pushl
sub
popf
push
dec
jle
pop
mov
orb
adc
daa
xchg
xor
xor
adc
aaa
test
pop
fildl
jbe
xor
jbe
dec
mov
adc
dec
rcrb
jle
pop
inc
mov
scas
aad
jo
push
mov
mov
sbb
mov
push
and
mov
inc
xor
mov
mov
out
lret
pop
inc
inc
sub
xchg
mov
fcmovnu
iret
repnz
inc
ds
mov
xchg
dec
xlat
out
push
mov
mov
test
sub
mov
push
push
pop
int
enter
sub
cmp
adc
negb
movsl
cmpsb
int3
mov
mov
insl
mov
jmp
sbb
push
jge,pt
fsubr
jns
fisttps
dec
sbb
bound
repz
and
lods
add
xchg
cli
push
sub
gs
adc
imul
idivl
mull
jmp
pusha
addr16
mov
mov
push
movsl
fwait
xchg
adc
adc
stos
in
sub
jle
jecxz
add
wrmsr
subb
gs
jno
negl
push
add
lcall
cmpsb
jno
addr16
inc
rcl
cli
clc
adc
cmc
pop
xchg
bound
gs
xor
lods
mov
mov
adcb
out
sub
mov
pop
sub
mov
xchg
outsl
push
shrl
mov
repnz
std
or
mov
nop
pop
clc
cmpsb
ljmp
mov
sbb
adc
repnz
mov
ret
pop
scas
fcompl
ja
cmpl
dec
lods
jle
int
mov
jae
pop
out
dec
shrl
mov
add
notl
push
xchg
in
lods
mov
push
into
sbb
and
mov
stos
cli
pop
sahf
call
cli
cmp
jbe
insb
or
pop
in
pop
xlat
test
repz
xchg
push
leave
aad
cmp
adc
xor
dec
push
scas
lcall
jge
test
fistl
adc
mov
in
pushf
and
or
xchg
dec
xchg
xchg
and
inc
ss
imul
aam
test
pusha
iret
mov
lret
shll
push
ja
mov
mov
or
mov
arpl
push
decb
jo
rclb
in
pop
repnz
jns
aam
jmp
cli
mov
cli
fs
pushf
push
std
inc
js
jbe
data16
nop
je
repnz
dec
and
mov
add
mov
pop
sbb
ror
push
jp
sbb
jecxz
mov
insl
aas
adc
call
pop
je
ret
or
in
mov
and
gs
das
in
or
imul
inc
lds
movsb
jb
popa
stc
rcrl
jnp
and
outsl
xor
mov
and
insl
cmc
shll
cwtl
addl
sti
inc
std
lret
data16
push
push
loopne
cltd
lea
test
icebp
dec
mov
mov
stc
mov
mov
js
gs
ja
aaa
js,pt
ds
es
fdivs
sbb
scas
push
xor
imul
mov
outsb
push
mov
push
loope
pop
arpl
lds
push
lods
scas
or
fdivr
rclb
cvtps2pi
dec
inc
xor
dec
pop
cmp
mov
iret
push
andb
sbb
pop
decl
scas
sahf
fwait
jecxz
mov
dec
pop
dec
mov
sbb
lret
stos
adc
and
add
out
in
loopne
sbb
icebp
dec
outsb
push
dec
adc
mov
dec
mov
leave
mov
xor
dec
mov
add
cmpsb
cld
xchg
ja
outsl
mov
jae
pop
shrb
cmp
pop
push
ret
ficoml
pop
dec
cli
jnp
fsubl
mov
mov
lret
mov
xlat
iret
mov
cmp
cltd
add
pop
push
push
ficoms
xor
add
jne
call
adc
movsl
int
mov
gs
push
les
xchg
test
cwtl
inc
xchg
push
icebp
rolb
outsl
jecxz
push
sqrtps
icebp
stos
inc
pop
mov
aad
fstpt
xchg
pusha
dec
scas
ret
pop
arpl
xor
addr16
int3
pop
roll
push
cmp
insb
pop
call
sub
dec
inc
cli
add
inc
ret
fnsave
lods
imul
inc
adc
int
outsl
cmp
out
dec
in
push
inc
stc
call
je
repz
push
lock
inc
pusha
gs
mov
push
cmp
loope
fwait
mov
and
jecxz
xor
pusha
movl
mov
mov
pop
repnz
jmp
mov
fwait
sahf
les
or
jl
mov
push
sbb
test
xorb
pop
pop
insb
das
cwtl
fisubrs
add
outsl
xlat
and
mov
mov
xchg
lods
aaa
lahf
addr16
mov
fldt
lock
dec
outsl
cmpsl
or
xchg
out
mov
xlat
sub
xlat
or
sub
lea
sub
pushf
rolb
fimuls
xor
push
jle
mov
aad
jl
inc
xor
pop
and
inc
nop
push
and
jge,pt
mov
ret
cmp
loope
subps
push
mov
xor
inc
and
add
mov
imul
and
mov
jo
lea
pop
or
xchg
or
rclb
mov
inc
push
or
mov
bound
sarl
mov
cmp
and
xor
sbb
sbb
popa
call
test
add
aaa
or
push
loopne
mov
and
sarl
mov
cmp
leave
adc
or
inc
xchg
sub
push
mov
cmp
lahf
cli
popa
sub
out
jmp
pop
pusha
mov
ds
jl
jno
xchg
rorl
shrb
inc
js
notl
scas
popf
sub
push
leave
das
fwait
lods
popf
std
mov
repnz
insb
mov
repz
add
outsb
xlat
cmp
sbb
jo
push
mov
pop
loope
negb
jmp
aas
cmp
cmp
xor
mov
pop
dec
je
ljmp
pushf
int
outsb
fwait
in
js
xchg
xchg
sub
leave
mov
sub
cmc
pushf
push
dec
insb
stos
test
fisttpl
and
adc
std
enter
xchg
es
push
stc
sbb
pusha
add
ret
scas
in
mov
cmpsl
pop
push
fcoml
pop
sub
xchg
jbe
add
cli
ljmp
pop
xchg
testl
mov
mov
adc
jae
cltd
xchg
xchg
push
jne
jno
cmp
adc
cwtl
lret
jnp
push
test
and
jae
sbb
mov
push
push
pusha
mov
jbe
iret
fdivr
shrl
aas
xchg
into
jne
addb
mov
inc
ds
sahf
lcall
in
jne
out
lods
mov
or
sbb
je
sarl
sub
dec
sbb
adc
cmp
dec
xchg
sub
xor
pop
ret
inc
lret
cmpsb
clc
mov
adc
hlt
je
ret
mov
push
js
xor
xchg
add
push
in
xchg
add
shrb
stos
sbb
pop
hlt
pop
fcmovbe
in
and
addb
pop
xchg
xlat
les
repnz
addl
mov
rclb
cmp
in
mov
jno
sub
fimull
and
fldcw
mov
pmullw
sbb
add
sarl
jecxz
test
mov
repz
add
ljmp
ficompl
dec
icebp
mov
in
sbb
xchg
cmpsl
xchg
sti
repz
and
sub
lret
int
mov
aas
shlb
outsb
ss
cmpsl
sub
xor
iret
enter
adc
in
into
pop
pop
jae
dec
lods
pop
call
aas
and
inc
mov
xchg
ror
sarb
sub
es
imull
data16
ja
ffreep
out
adc
add
xchg
add
popf
mov
push
mov
pop
or
mov
insl
sahf
inc
add
notl
imul
jb
mov
push
add
lds
mov
aas
cmc
int
cli
fwait
les
and
mov
cs
cmp
divb
jmp
test
nop
into
out
lcall
lcall
mov
mov
dec
rclb
mov
dec
mov
dec
lods
push
push
pop
jp
mov
stc
sub
iret
outsl
dec
dec
add
xabort
and
push
lock
in
fisubl
out
xchg
inc
pop
mov
aaa
je
adc
mov
cli
sub
adc
out
sub
mov
movsl
xchg
mov
mov
pusha
mov
mov
add
xor
mov
mov
push
jecxz
shl
les
jno,pn
pop
dec
mov
pushf
ror
jo
inc
test
fsts
mov
mov
data16
inc
push
movsb
inc
adc
stos
mov
xor
push
cmp
xchg
push
jp
dec
das
test
fisubl
loopne
fwait
jnp
repz
push
cmpsb
out
add
add
ljmp
mov
shrb
jo
mov
xchg
xor
sbb
scas
ss
jle
incb
mov
fs
xor
adc
mov
movsl
lea
fwait
rcrl
lahf
xor
xchg
je
sub
xor
pop
or
or
xor
dec
aam
pop
scas
push
inc
fwait
jb
das
inc
lahf
fisttpl
ljmp
adc
cwtl
and
mov
pop
jno
xchg
xchg
push
jo
cmpsl
lcall
add
cmp
aad
lock
push
lret
roll
jmp
or
pusha
pop
cltd
test
js
lock
int3
push
fldl
push
out
jbe
xor
mov
mov
dec
adc
in
mov
shlb
sbb
push
cmp
cld
stos
push
ret
add
fisttpl
cmp
mov
fcompl
mov
adc
inc
js
repz
pop
out
stos
loop
shr
inc
cwtl
lret
dec
iret
dec
fwait
vpunpcklbw
sbb
jg
cmp
in
into
cmpb
gs
add
pop
pop
inc
add
adcl
mov
popa
pop
leave
mov
or
clc
push
push
insb
stc
in
repz
and
or
dec
bound
and
int
pop
lcall
xchg
sbb
ret
mov
add
xchg
adc
add
cmpsb
sbb
cwtl
mov
ret
cmpsl
adc
or
cmp
pop
mov
or
addl
sti
pop
cltd
xchg
fcoms
jb
fwait
adcl
in
stos
jl
test
addl
jo
mov
or
std
cld
lock
cld
or
out
in
add
insl
arpl
push
fs
stos
xchg
xor
leave
imul
push
jmp
xchg
cld
add
cmpsl
addl
xor
add
adc
or
test
gs
stos
icebp
es
div
inc
pop
xchg
insb
enter
add
xchg
push
jg
mov
or
jnp
js
pop
xchg
enter
into
push
test
lods
pop
iret
test
jae
mov
push
adc
inc
push
or
addl
je
jne
mov
xchg
xchg
int3
jb
int
outsb
mov
sbb
ja
imul
dec
and
imul
or
mov
addl
data16
je
fs
sub
cs
push
or
xchg
push
outsl
subl
repz
jle
add
or
lods
inc
pop
and
test
stos
fs
imul
das
arpl
xor
popf
outsl
adc
enter
cwtl
inc
jo
jns
out
jge
mov
les
jle
pushl
lock
mov
dec
or
repnz
subb
fldcw
sbb
sub
gs
adc
push
jecxz
stos
adc
dec
ficompl
fstpl
jmp
leave
adc
scas
ror
xchg
sahf
jb
sti
fwait
out
nop
mov
andl
jge
jae
ret
movsb
subl
test
inc
cmp
dec
inc
out
jmp
cmp
lds
fs
sti
mov
cmc
leave
mov
mov
jne
std
cmp
mov
inc
sarl
sbb
pop
mov
push
adc
inc
jmp
out
cmp
pop
adc
adcl
bsr
inc
inc
dec
sub
sti
ret
pop
adc
mov
mov
and
icebp
cmp
jle
jae
ror
out
or
test
jne
push
adc
sbb
rol
or
cmpsb
pushf
cmpsb
gs
out
mov
mov
sbb
fbstp
scas
push
gs
and
cmpsl
cmp
pop
xchg
lea
sahf
xchg
sbbl
lret
xchg
xchg
pop
or
adc
xchg
cmp
scas
inc
mov
and
push
mov
pop
sti
add
movsb
movb
scas
stc
pop
cmp
mov
sub
mov
jne
push
jle
pop
jns
sub
popf
inc
mov
cmpsl
scas
rcll
jecxz
add
xor
ficompl
inc
sarb
divl
inc
ljmp
xchg
frstor
shlb
jne
bound
aam
fs
lret
dec
outsb
rcll
clc
lret
outsb
xor
jns
sbb
fucomp
jp
sub
jb
adc
adc
test
sahf
mov
sti
popa
cwtl
xor
pop
leave
dec
cmpsl
xor
or
push
lods
mov
xchg
and
fisubrl
jae
stc
inc
mov
mov
popf
xor
mov
clc
rorl
xchg
clc
add
pop
aaa
jl
xchg
jmp
lods
push
add
aaa
dec
push
call
mov
lea
jmp
movsl
mov
mov
adc
scas
mov
test
outsb
aam
adc
int
sbb
jno
or
jnp
in
xchg
and
mov
popa
mov
nop
dec
xchg
mov
mov
faddp
xor
push
das
lahf
fimuls
dec
sarb
mov
push
mov
sub
pop
lret
mov
int
repz
xlat
enter
bound
pop
fidivrl
adc
outsl
popa
xor
mov
leave
mov
cld
fmul
jmp
or
leave
sti
test
sbb
pushf
and
clc
scas
fisubrl
dec
cmpsl
xor
adc
sbb
scas
js
sub
pop
popf
fs
lret
cmp
xor
jmp
aad
dec
push
mov
mov
dec
inc
stos
add
inc
bnd
push
mov
inc
dec
mov
cmpsl
push
push
mov
bound
daa
cmp
mov
inc
lds
jge
inc
mov
int3
roll
bnd
mov
and
enter
or
or
sbb
adc
and
pop
mov
xchg
cmp
fnstsw
push
pushf
jns
adc
call
adc
scas
rclb
movsl
jns
cli
jp
test
insl
stc
call
inc
cli
push
pop
push
or
push
data16
inc
pushf
or
pop
mov
sahf
and
into
mov
mov
lret
out
dec
in
ja
dec
movsb
xor
call
mov
push
xor
sub
sub
mov
cmp
push
adc
enter
loope
xchg
pop
inc
jmp
iret
leave
mov
xchg
sub
rorb
lods
inc
bound
pop
inc
test
bound
lods
add
das
or
subb
testb
orb
pop
adc
xor
pop
push
rcrl
and
push
add
sbb
cmp
repz
into
pusha
sbb
arpl
repnz
inc
xchg
adc
int
sbb
mov
int3
insb
push
rclb
shr
je
test
inc
jns
lcall
mov
cmp
jmp
inc
sub
fldl2e
cli
mov
test
push
rorb
xor
adc
push
call
and
leave
test
sarb
test
add
adc
inc
cmp
mov
mov
cltd
and
sbb
and
adc
cmp
xor
mov
push
aas
addr16
and
jle
je
pusha
andl
insb
dec
dec
aam
add
push
dec
xor
mov
scas
adc
xchg
lods
add
lcall
lahf
sub
loope
adc
iret
sbb
les
xchg
popa
add
mov
loop
lods
ljmp
adc
test
das
movsb
and
insb
adc
xchg
mov
or
notl
xchg
stos
clc
pop
pop
sub
pop
enter
add
push
jp
pop
subl
jl
mov
imul
test
add
cltd
inc
cmpsl
mov
aam
sti
jecxz
push
test
out
test
mov
mov
pop
fsubp
mov
pop
ljmp
xchg
push
into
lods
fimull
mov
lahf
std
cmp
outsl
lret
cmp
mov
lea
imul
inc
xchg
decl
mov
add
mov
adc
adc
jnp
dec
cmp
mov
jp
xchg
and
pop
pop
test
jae
lret
movsb
add
inc
test
lahf
sbb
pushf
sbb
inc
in
ds
jge
mov
in
mov
int3
lods
sti
mov
cli
mov
or
les
orb
lret
pop
fadds
mov
dec
push
out
jb
int3
and
ret
ret
pop
and
btc
cmpsb
imul
divb
pop
sbb
jo
cld
stos
sahf
fsubl
inc
push
popa
imul
imul
add
shll
jge
test
mov
adc
cmp
stos
xlat
inc
xor
inc
test
mov
cmp
push
popa
notl
jge
outsb
stos
test
notb
jg
ret
pushf
cltd
mov
int
aaa
mov
sub
test
movsb
ss
fisttpl
mov
sub
lods
daa
test
sub
aam
mov
cmp
pop
pop
es
mov
jo
loop
ljmp
mov
sub
loopne
out
pop
decl
lock
icebp
cwtl
lods
mov
arpl
insl
jmp
sbb
inc
sbb
push
movsl
push
jg
xchg
mov
dec
insb
lods
js
leave
and
cmp
lock
add
and
xor
or
jecxz
jbe
test
xchg
push
lcall
mov
sbb
mov
addb
test
fldcw
movsb
mov
lahf
jle
and
cli
push
adc
sbb
daa
xchg
dec
pop
cmp
cs
scas
fsubl
inc
jb
in
dec
pop
test
mov
mov
rcrb
rcrb
pop
gs
mov
aaa
rcr
and
roll
aaa
hlt
test
adc
mov
addb
cmc
and
sar
ljmp
sbb
mov
inc
and
fisttps
inc
or
push
outsb
adc
jg
dec
je
and
ret
sub
and
pop
cmp
rcr
pusha
fwait
push
ficoms
inc
push
xchg
adc
push
fnstsw
mov
add
in
jnp
inc
jge
lods
aam
sbbl
iret
push
test
inc
jmp
shll
jb
inc
or
in
adc
test
cli
xchg
mov
jo
xchg
ja
imul
pop
hlt
sub
adc
out
adc
inc
mov
lods
cli
jno
mov
in
adc
test
sti
notl
add
and
dec
sub
lahf
sbb
fmul
add
mov
out
adc
xchg
shlb
ljmp
mov
mov
cld
inc
in
dec
sbb
mov
fsts
add
rcrl
cmp
iret
stc
push
inc
shll
gs
jb
adc
xor
or
or
inc
and
ret
xchg
mov
dec
hlt
xchg
adc
xor
pop
cmp
sbb
mov
xor
lods
loop
dec
test
shlb
dec
lahf
sbb
insb
jo
mov
xlat
fistl
les
sbb
inc
mov
outsl
cs
pop
xchg
int
decl
mov
mov
cmp
cwtl
stos
and
jo
icebp
cwtl
ret
sbb
orb
ss
pop
mov
stos
pop
lods
jnp
loop
lock
icebp
leave
ljmp
xlat
outsb
mov
mov
sbb
lahf
mov
and
mov
outsb
xor
push
or
ss
mov
and
bound
jb
jns
and
cwtl
sbb
fcoml
stos
push
jb
sub
daa
and
xchg
pop
cmp
repnz
push
mov
or
repz
mov
imul
in
xchg
andl
pop
dec
inc
xchg
into
notb
repz
push
icebp
lods
in
or
cwtl
sbb
imul
fwait
rolb
xchg
or
pop
and
and
aaa
lret
add
dec
out
adc
arpl
inc
pop
push
adc
mov
leave
add
es
mov
inc
dec
or
or
dec
jecxz
or
fidivl
test
pop
rclb
test
ds
stc
stos
and
popa
hlt
pop
pop
mov
mov
adc
fnstsw
inc
pop
mov
cmp
lock
in
or
repnz
mov
mov
pusha
cmp
rcrl
inc
inc
push
xchg
cs
adc
cmpsl
daa
mov
rcll
and
xchg
in
sbbb
or
sub
add
mov
loop
sub
pop
ss
insb
xchg
inc
mov
das
dec
scas
sbb
cld
adc
add
stos
cltd
push
insl
xchg
sub
cmpsl
and
scas
lret
cmp
enter
xchg
loope
cmp
xchg
pop
push
rol
pop
cmp
aam
mov
mov
fwait
cmp
cmp
insl
jecxz
mov
cmp
lret
push
imul
sbb
test
mov
mov
test
add
mov
dec
pop
leave
fwait
insb
jecxz
push
mov
add
std
dec
sbb
cmp
ds
push
mov
aad
jg
sub
pushf
fsts
sbb
stos
fisttpl
nop
xchg
mov
sub
jae
adc
and
and
in
stc
out
pop
les
in
sbbb
push
xchg
loopne
daa
and
js
push
push
pop
fisubrl
mov
outsb
jns
imul
insb
arpl
jl
inc
insb
data16
adc
add
lds
xchg
pop
scas
fsubs
mov
and
pop
or
xor
div
mov
in
lcall
stos
sbb
mov
push
imul
aad
popf
ljmp
cmp
push
test
cld
inc
pop
sahf
mov
mov
add
inc
in
aam
push
outsb
push
adc
sub
push
xchg
subb
push
lock
dec
xchg
mov
cs
arpl
pop
iret
cmp
les
movsl
sub
lret
mov
adc
mov
fdivrs
shlb
jbe
adc
ljmp
lret
cmpsb
cli
jbe
xchg
sub
mov
aas
jmp
shlb
ret
jne
mov
ljmp
jb
mov
cmc
mov
out
jecxz
in
ja
cli
mov
xchg
psubsb
jp
repnz
push
aad
add
outsl
mov
dec
jmp
int
and
int
or
sbb
sub
jmp
or
xlat
js
mov
in
int
pop
jle
xlat
into
xorb
add
pop
addr16
push
popf
mov
insb
aas
cmpsl
roll
test
fyl2x
cltd
aad
insl
mov
int3
xchg
rcr
mov
add
mov
cmc
mov
pop
cmp
shlb
mov
mov
sub
mov
pop
int3
push
lahf
cmp
pop
pop
jmp
xchg
jb
outsl
mov
adc
push
pop
jns
mov
and
notl
loope
add
cmp
call
mov
icebp
rorb
ficoms
movsl
mov
les
shr
add
nop
mov
fld
xor
push
cmp
add
insb
mov
inc
cmp
pop
mov
dec
mov
pop
in
daa
jmp
inc
push
sbb
dec
fisubl
stos
push
dec
mov
dec
ret
mov
dec
idivl
fxch
xchg
inc
jecxz
cmp
xchg
loope
dec
adcl
aaa
push
shlb
test
pop
fdivl
test
test
cmp
adc
fs
stos
inc
mov
xor
fiadds
aaa
sub
adc
ljmp
shlb
lock
dec
jg
shlb
xchg
out
rcl
gs
loop
fwait
mov
js
aam
sub
or
pushf
clc
int3
in
xchg
adc
jge
sub
mov
inc
lds
mov
fmull
sub
cmc
adc
scas
dec
cmp
lock
mov
in
les
mov
out
adc
mov
sub
mov
dec
push
mov
adc
and
push
xorb
bound
imul
int3
sub
lods
pushf
cltd
shlb
in
sbb
pop
mov
lcall
and
xchg
addr16
sbb
and
xor
scas
sub
repz
dec
imul
int3
hlt
popa
jb
jno
shlb
insl
in
mov
jge
jmp
adc
ja
mov
jb
xchg
jle
xchg
jae
shll
std
xor
lahf
fisubs
dec
inc
lods
in
mov
mov
lcall
icebp
adc
repz
lret
push
push
sbb
ficomps
push
pusha
iret
sub
lcall
paddd
push
inc
cli
mov
lahf
out
fwait
jle
push
and
rorb
testl
test
dec
fidivrs
mov
push
sbb
sbb
fidivs
fsubrl
jno
adc
push
fdivrs
stc
clc
cmpsl
ficompl
push
daa
dec
jo
popf
dec
movsl
lods
enter
enter
mov
jecxz
stc
addr16
push
xlat
add
pop
pop
xor
sbb
pop
inc
and
jmp
testb
dec
mov
insb
js
dec
lods
push
insl
je
push
or
xchg
jno
inc
pop
out
cmp
inc
iret
sub
jle
addr16
mov
clc
cli
adc
bt
in
jns
mov
out
mov
and
mov
and
cli
pop
mov
pop
and
jmp
nop
loope
leave
in
inc
or
jmp
adc
xchg
add
adc
je
ss
push
aas
hlt
mov
icebp
mov
daa
loopne
push
arpl
nop
mov
push
insl
adc
adc
xchg
rcll
xlat
xchg
out
dec
sbb
jnp
fistps
mov
add
and
adc
dec
pop
dec
xchg
filds
pushl
sub
push
div
add
filds
pop
jne
dec
mov
pop
mov
jb
out
inc
cltd
sbb
and
cwtl
mov
orl
inc
sbb
jl
sbb
dec
sahf
xor
mov
cmp
mov
pop
js
dec
lea
mov
pop
pop
lods
shll
inc
mov
les
sti
pop
push
nop
orl
and
mov
dec
and
out
xchg
shll
repnz
cmp
test
call
int
inc
mov
mov
and
scas
out
sti
adc
addr16
stos
and
daa
ret
ds
jl
movsb
push
pop
adc
enter
jno
push
dec
jge
sbb
xchg
jecxz
mov
mov
pop
cs
sbb
push
jb
xchg
xchg
test
fidivrs
fstpl
mov
mov
ss
mov
orl
or
iret
out
push
mov
or
js
cmc
cmc
mov
cs
jno
cmp
cmpsb
stos
cmp
mov
jbe
mov
xchg
fidivrl
ja
mov
xchg
in
xchg
lock
fmul
movb
ss
pushf
popf
mov
mov
fwait
xchg
in
sub
movb
in
je
adc
jp
adc
rorl
ljmp
mov
dec
dec
jns
xchg
jg
ljmp
mov
adc
xchg
dec
mov
pop
jb
outsl
push
dec
sbb
mov
ss
or
inc
stc
call
in
es
inc
test
fwait
mov
sbb
xchg
inc
and
adc
pop
daa
pop
dec
xor
or
mov
mov
sbb
xchg
pop
mov
lcall
mov
pop
outsl
jp
inc
faddp
dec
lock
inc
nop
insb
mov
fsubrs
sbb
xor
rolb
mov
push
xor
push
jecxz
add
adc
std
call
idiv
xor
subl
mov
xor
pop
rcrl
cld
push
xchg
jns
xchg
add
adc
into
and
sbb
mov
pop
subl
inc
cli
mov
add
cmpsl
sbb
lods
and
mov
sbb
shlb
cmp
add
mov
push
out
mov
clc
ror
push
lods
stos
lret
cs
fiadds
inc
add
scas
adc
jne
addr16
add
push
add
push
mov
cmp
aas
fdivrl
fstps
aas
jp
fbstp
and
lods
out
out
repz
orb
call
scas
loopne
or
or
imul
pop
pusha
fbld
mov
pop
stos
int3
mov
arpl
stc
mov
mov
pop
iret
sub
or
mov
fisubrl
rolb
setns
xor
loope
xorb
mov
sti
jge
fisttpll
pop
aaa
loopne
inc
negb
sub
inc
dec
or
mulb
push
popa
int3
xchg
and
or
mov
int3
outsl
ds
je
push
out
mov
in
les
mov
shrb
divb
mov
insb
shlb
popa
or
ret
pop
adc
std
sti
sub
jne
pop
fs
add
jns
ret
ja
loope
rorb
jg
xor
and
xor
mov
or
xchg
or
popf
dec
jl
mov
movsb
les
push
pop
loop
xor
mov
sbb
push
mov
leave
push
jge
add
ret
loop
out
pushf
stos
push
subb
out
inc
cs
jno
or
push
and
add
dec
lret
mov
xor
mov
mov
sbb
lret
out
pop
cmc
in
sbb
pop
adcb
ss
adc
repz
jnp
jnp
inc
add
std
pop
xor
mov
cld
cld
insl
inc
stc
stc
mov
gs
xlat
jne
lret
xchg
add
adc
jo
sub
test
js
cmpl
fldenv
jg
lods
sub
rcll
filds
pop
pusha
es
sub
je
div
int
xchg
jecxz
fst
dec
mov
int3
mov
sub
and
push
in
nop
mov
add
adc
dec
xlat
cmc
pusha
push
in
pusha
hlt
jmp
test
or
bound
cmp
jecxz
inc
dec
dec
jno
decb
inc
and
lret
or
lea
cmpsb
xor
adc
stos
mov
icebp
xor
sbb
xchg
ja
aad
fldt
jmp
and
out
notl
outsl
push
outsl
sub
pop
lock
imul
daa
loopne
neg
pop
sti
popf
and
jno
out
decb
adc
pusha
mov
push
pop
movsb
ljmp
js
cmp
sub
xchg
xchg
xor
cmp
cmc
cmpsl
push
imul
pushf
mov
out
pop
pop
outsb
and
mov
adc
sub
cmp
push
pop
mov
popa
adc
enter
mov
mov
xchg
jne
aad
jmp
pusha
fistpll
mov
rorb
mov
sbb
outsl
sub
inc
jnp
sarb
sbb
ja
into
push
mov
sbb
cmp
mov
xchg
sbb
inc
inc
vphadduwq
mov
or
iret
and
push
jne
jmp
in
insb
mov
add
lea
pop
inc
nop
loope
mov
pop
outsl
pusha
jp
shl
xor
dec
push
enter
xor
loop
sar
das
inc
scas
pop
sti
push
mov
stos
jnp
xchg
or
mov
out
cmp
and
mov
mov
mov
xchg
xchg
int
xchg
xchg
cld
adc
sub
mov
adc
loope
loopne
add
ds
xor
fs
call
icebp
and
inc
cmp
out
pop
xorb
xor
pop
std
decb
mov
into
pop
out
inc
test
jecxz
pop
into
or
push
push
hlt
cmp
xchg
and
int
hlt
xor
loopne
movsl
bound
inc
jge
nop
sbb
shrb
fwait
cmc
movsl
mov
mov
idiv
pop
dec
sahf
cmpsl
push
pop
dec
test
cmp
inc
ss
fbstp
daa
ret
mov
sarb
mov
test
xor
je
sub
rcrl
out
or
scas
mov
loopne
mov
dec
adc
jl
fsubrs
push
out
in
cmp
sbb
sbb
rorl
sub
mov
lret
inc
addb
lcall
add
jne
clc
shrl
jbe
cmp
leave
test
and
rclb
aam
cltd
out
fisubl
daa
popf
mov
stos
sbb
sbb
addps
pop
mov
jle
in
add
sub
int
jnp
dec
sbb
xorl
cmp
xor
cmp
cmp
sub
subb
jb
cmp
scas
dec
mov
je
xor
into
call
xor
pop
dec
mov
mov
das
andb
xlat
aaa
sbb
xchg
ficoml
dec
outsl
imul
std
iret
arpl
jp
pop
xlat
flds
cld
ret
dec
fdivrl
add
out
pop
lods
and
lret
cmc
test
mov
mov
cmp
jo
out
or
jbe
push
stos
xlat
mov
mov
scas
adc
xorb
mov
xor
lea
or
pushf
fstps
push
inc
shl
mov
inc
filds
pop
mov
mov
xor
data16
scas
xchg
imul
lahf
out
inc
mov
mov
fstl
xchg
or
std
add
loop
jl
sbb
push
mov
xchg
aas
dec
sbb
jecxz
lret
dec
in
sub
sub
inc
jbe
add
xchg
and
or
shlb
mov
push
cmpsl
mov
in
call
mov
jle
addb
mov
idivb
jl
pushf
jge
cmpsl
mov
sbb
dec
add
clc
fdivs
add
mov
mov
pop
mov
in
sub
sub
or
dec
das
out
mov
sti
inc
arpl
push
loop
hlt
clc
insb
cmpsb
scas
sbb
js
inc
push
jne
sub
jecxz
int
xchg
mov
or
dec
fxch
mov
cmpsl
pop
repz
pop
stc
jae
cmc
mov
dec
out
or
xchg
pusha
sub
jg
cmp
push
bound
or
dec
or
mov
mov
mov
mov
sub
notl
jb
jg
mull
sub
je
mov
insb
push
enter
push
into
xchg
repnz
loopne
dec
inc
jle
ja
xchg
repnz
mov
add
icebp
sarl
add
pop
mov
mov
jmp
xchg
pushf
test
jne
jg
out
mov
icebp
rolb
in
inc
and
jne
push
and
shll
mov
mov
push
bound
push
in
add
stc
push
das
push
fistl
divb
mov
xor
add
das
or
mov
xchg
imul
pusha
dec
inc
in
insl
push
pop
mov
xor
pop
orb
orl
mulps
push
adc
jp
mov
sub
cwtl
add
sub
cmp
jecxz
sub
and
pop
movsl
pop
jo
out
mov
in
shll
pop
and
cmc
loopne
add
jmp
xor
xlat
cmpsb
popa
addl
subl
jle,pn
aas
adc
jecxz
leave
insl
lock
mov
pop
push
jle
icebp
ficomps
sub
lods
insb
adc
dec
flds
and
mov
add
xchg
inc
test
aam
int3
and
lcall
roll
adc
mov
cli
test
out
mov
inc
enter
pusha
sub
cmpsl
inc
sahf
xlat
jge
sub
imul
cltd
test
adc
sbb
xchg
cwtl
sub
lret
call
rclb
js
cmp
xchg
cmp
push
popf
inc
push
sub
aas
inc
aas
or
dec
pop
jnp
cmp
sub
inc
cltd
rcr
cmp
hlt
mov
push
scas
and
xchg
pop
xor
dec
lret
jnp
jmp
lahf
scas
cmp
adc
cltd
mov
mov
in
into
push
ljmp
adc
mov
call
and
sub
cmc
push
pop
test
add
loop
ja
mov
jb
je
aaa
sub
out
mov
enter
push
and
js
mov
and
repnz
push
mov
insb
xchg
cld
jge
or
daa
lea
mov
or
mov
dec
arpl
stc
aad
bound
pop
ret
pop
test
insl
jg
push
lret
aaa
sub
sbb
sbb
adc
js
xchg
adcb
movsb
cli
sti
mov
dec
jnp
xchg
insb
jmp
pushf
loope
pop
call
push
jge
mull
sahf
in
jg
repz
mov
pop
jbe
pusha
add
mov
in
das
cmp
imul
dec
push
push
outsl
ljmp
lret
lret
jl
data16
js
jg
out
pop
dec
stc
inc
dec
into
lds
push
mov
in
mov
sbb
push
xor
inc
xlat
enter
sub
mov
imul
into
fwait
push
mov
stc
movsl
add
and
lcall
adc
cmp
mov
outsl
dec
push
nop
movsbl
cmp
lods
int
aas
add
jno
bound
adc
mov
add
fimuls
pop
nop
sti
add
pop
sahf
jns
sub
imul
es
xor
adcl
adc
jae
out
shll
pop
cmp
loop
cmp
popf
mov
and
outsb
fwait
xor
adc
roll
fcomps
iret
test
imul
fucomi
fwait
lahf
mov
mov
fisubs
add
aas
mov
rcll
sbb
cs
jge
nop
xlat
aaa
aam
xchg
jmp
sub
cltd
jb
jecxz
das
push
mov
xor
mov
rorl
shll
cltd
cs
cmp
push
mov
inc
rorb
jge
in
or
loop
loope
loope
or
mov
mov
addr16
test
ret
push
ss
xchg
cmc
scas
fsubr
lahf
imul
mov
mov
outsl
sub
or
or
fsubrl
rolb
mov
sub
lods
idiv
mov
loopne
dec
insb
push
sub
daa
pop
and
leave
fcmovne
iret
jle
or
clc
fdivs
leave
repz
jo
cmp
lahf
in
scas
push
inc
insl
les
sub
xor
push
cmp
xor
ss
push
imul
mov
fcmovnu
cmc
dec
outsl
mov
setne
pop
loope
fsubl
stos
lods
push
mov
cmc
movsb
cbtw
mov
or
add
lcall
jg
sar
in
imul
add
cmp
orl
ss
push
dec
pop
dec
mov
mov
mov
mov
clc
sbb
jnp
mulb
sub
xchg
loop
stc
pushf
pop
fs
cld
mov
inc
shll
repnz
in
pop
mov
loopne
imul
fdivs
lahf
jns
dec
dec
mov
pop
fwait
cmc
scas
cmp
and
negb
push
in
ffree
inc
and
lods
mov
sub
jns
clc
or
or
outsl
aaa
pop
call
int
mov
fistps
mov
insl
jno
lret
cmp
sarb
getsec
imull
mov
stos
rep
sar
dec
xchg
jbe
lea
pop
or
jge
test
jne
in
cmpsl
in
lods
xor
push
outsl
popf
test
and
inc
ja
fisttpl
cmp
fistpl
roll
and
xchg
push
mov
in
in
mov
imul
movsl
mov
xor
mov
clc
imul
or
rcll
sbb
iret
pop
pop
xacquire
nop
sbb
push
jns
pop
movsb
dec
cltd
jle
rcr
dec
pop
je
aaa
sbb
dec
inc
loope
lock
loope
out
jns
pop
es
sti
jg
push
xchg
push
in
adc
movsl
fdiv
cmp
pop
or
out
fwait
insb
add
mov
adc
fidivrs
fcomip
jns
out
mov
stc
jne
mov
dec
jl
test
mov
aad
rorb
lcall
jmp
adc
dec
cmp
adc
movsb
jge
and
imulb
inc
std
add
push
pop
jle
inc
lods
cmp
ret
imul
test
and
add
jae
mov
std
mov
mov
lcall
and
clc
in
sbb
dec
popf
aad
loopne
adc
repz
xlat
sbb
rorb
push
andl
in
mov
jo
mov
adc
dec
and
popf
movsl
xchg
gs
test
ficomps
lds
cmp
scas
push
sti
rol
js
xchg
shl
push
xor
ljmp
mov
adc
dec
mov
inc
mulb
mov
imul
and
out
mov
in
outsb
pop
cli
mov
pop
jnp
mov
inc
rol
out
ljmp
xor
pusha
cmpxchg
fidivl
mov
mov
lods
clc
fisttpll
test
pop
in
jl
mov
int
fbstp
jae
pop
fsubrl
ret
xor
lods
push
mov
jl
mulb
pop
fwait
dec
xor
or
jp
sbb
pop
and
aas
mov
inc
inc
pusha
xor
mov
push
aad
icebp
rolb
cli
test
mov
lea
mov
loopne
sub
push
lret
mov
dec
je
out
xchg
jp
fs
mov
stc
hlt
mov
xchg
mov
lock
mov
add
das
aas
push
jns
loopne
adc
mov
ss
test
insb
sub
dec
mov
in
in
iret
pop
insb
mov
jo
fimuls
mov
mov
in
outsb
push
pushf
push
je
xchg
test
pop
vcvttss2si
test
jg
mov
shlb
mov
imul
and
add
std
lock
jno
push
push
in
and
mov
dec
aaa
test
xchg
btr
js
push
xchg
mov
daa
pushf
rcr
dec
bnd
arpl
jmp
in
out
sbb
inc
in
pop
cld
sti
sub
into
sub
jge
jmp
aam
dec
leave
lahf
sbb
mov
mov
cltd
aas
cmpsb
shrl
sub
testb
shrb
leave
sub
xchg
adc
pop
test
movsb
popf
cmc
cmc
mov
bound
dec
xor
add
in
jae
xchg
rclb
in
push
nop
cmc
jno
sub
icebp
nop
filds
popf
and
pop
mov
cli
repnz
icebp
daa
fwait
vprotd
adc
test
aam
test
mov
out
in
jmp
jnp
ss
add
insb
stos
mov
lret
mov
mov
stc
xor
aas
loop
pop
push
inc
push
shlb
icebp
lock
fcoml
add
iret
popa
and
dec
mov
sub
imull
stos
loop
pushf
mov
pop
sarl
into
jmp
outsb
xchg
mov
loope
out
xchg
mov
inc
nop
pop
or
imul
hlt
int3
and
in
push
into
sub
pop
jl
sahf
test
leave
jo
inc
jge
mov
cmp
or
inc
insb
mov
fldt
or
mov
and
rcrb
xor
in
dec
pop
aam
lock
sarb
cli
lea
xor
dec
loop
enter
cmp
xor
sahf
shr
scas
sbb
pop
inc
mov
pop
fidivs
dec
aas
or
test
push
mov
cmp
rol
aad
inc
movsb
mov
int3
insb
mov
repnz
mov
clc
jge
outsb
jle
push
dec
lcall
push
je
jbe
shlb
mov
imul
gs
mov
push
adc
mov
sub
push
addb
mov
xlat
add
fwait
dec
and
add
sbb
inc
cwtl
and
add
pop
shlb
push
sbb
cltd
data16
jo
scas
loopne
into
subb
fdivs
mov
popf
or
pop
and
pop
pusha
movl
sbbl
lds
mov
dec
add
imul
xor
jo
mov
hlt
pop
and
cmp
vdivpd
xor
cs
jo
dec
sbb
push
cmp
xor
adc
dec
es
xchg
orl
dec
imul
cmp
cld
clc
xchg
add
shlb
shr
jp
and
testl
pusha
int3
push
jns
mov
in
xchg
insl
adc
dec
nop
and
hlt
xchg
incl
pop
shrb
aad
test
sub
leave
pop
and
ja
add
movsl
push
clc
gs
cltd
push
test
push
pop
jecxz
xlat
pop
shll
or
mov
cs
sub
add
pop
roll
ss
push
push
mov
loop
and
shll
loopne
dec
pop
fwait
and
or
dec
push
rcl
gs
sub
push
mov
mov
push
iret
adc
inc
mov
mov
hlt
ret
js
push
push
adc
inc
mov
adc
movsl
ret
inc
cmpsl
pop
fwait
test
dec
out
bound
adc
pop
dec
jecxz
push
call
add
das
mov
imul
lods
dec
jb
xor
or
insl
xchg
roll
ljmp
test
out
fisttps
pop
stos
cmp
inc
sub
cmpsb
sbbb
sub
cmp
cltd
out
push
cmp
rolb
xor
hlt
xlat
mov
ljmp
mov
and
test
xchg
or
cltd
add
fisubrl
pop
add
jl
rorl
mov
push
jg
sti
cwtl
divl
mov
popf
push
cmp
fdivl
inc
jl
aam
es
xlat
or
cwtl
pop
lds
lret
inc
stos
jb
insb
aas
jns
or
pmulhw
mov
fcmovnu
jno
fdivp
add
push
or
mov
or
xor
gs
sub
psraw
mov
loopne
dec
mov
stos
aaa
into
cmpsb
insb
dec
inc
jmp
movsb
pop
mov
jge,pt
cmp
push
pop
lods
lods
test
mov
push
lods
scas
and
mov
sbb
and
pop
insl
imul
sub
rorl
jle
out
xor
dec
add
or
add
test
pop
jo
lock
inc
sub
push
aas
add
sbb
push
xchg
and
test
inc
dec
insl
dec
addb
lds
xchg
adc
inc
dec
mov
dec
push
or
sbb
lret
ja
test
aad
mov
sbb
outsl
mov
pop
add
cmpsb
ret
stos
sahf
mov
xor
mov
pusha
ljmp
jmp
jbe
add
mov
sbb
das
push
jne
daa
out
jge
sti
sbb
shrl
dec
xchg
std
add
jle
cld
inc
cwtl
and
dec
pop
xor
cs
inc
daa
int
xchg
mov
push
sbb
and
data16
es
sub
cmpsb
dec
pop
dec
push
lcall
out
rcrb
cmp
sub
pop
xor
sub
cmp
jns
dec
jns
lret
xchg
add
jne
xor
cltd
mov
popa
mov
sbb
std
lcall
cmp
push
jmp
aam
mov
in
std
pop
pop
jae
mov
dec
cmpsl
out
les
xchg
sub
dec
ret
xchg
xchg
mov
inc
ss
ljmp
out
cmp
mov
mov
or
mov
lret
pop
cmp
int
mov
and
lret
jge
jecxz
adc
jg
les
add
inc
cmp
sbb
gs
mov
push
out
lret
mov
inc
mov
rorb
out
sub
sub
adc
add
pop
lahf
test
add
insb
jne
sub
sub
adc
fwait
and
adc
das
push
inc
jb
cmp
fwait
in
xlat
jbe
fs
mov
pop
or
out
push
in
sar
cs
mov
jmp
ljmp
xchg
cmp
xor
aam
pop
andl
movsl
mov
idivl
jo
rclb
xor
jg
or
push
mov
sahf
push
loopne
jns
into
cmp
xlat
fwait
int3
pop
out
mov
add
pushf
gs
cmp
or
test
mov
daa
in
or
daa
push
orl
daa
mov
and
fidivrl
xorb
mov
popa
enter
iret
popa
xchg
leave
daa
mov
cmpsl
and
jne
pop
inc
push
icebp
aas
pop
inc
jbe
addr16
dec
jo
sub
sub
cmp
push
lea
fimull
incl
lock
sbbl
addr16
movsb
and
mov
js
xor
push
popa
push
pop
nop
js
roll
imul
in
inc
jmp
or
push
add
pusha
lea
das
stc
loope
fcoms
sbb
mov
adc
jno
into
mov
mov
mov
repnz
and
dec
jl
xchg
hlt
dec
aam
sbb
movsb
inc
adc
mov
sub
dec
jae
mov
or
imul
dec
push
mov
nop
shrl
leave
cmpsl
mov
jg
add
xor
not
je
mov
jle
repz
mov
mov
addb
ja
push
scas
pusha
mov
mov
mov
xchg
mov
and
mov
adc
enter
push
xlat
add
lret
loopne
lcall
mov
adc
pop
in
push
xor
inc
jge
sub
add
sti
dec
xor
ret
ljmp
dec
pusha
add
imul
shl
lea
and
mov
dec
ret
add
fldenv
cmp
into
test
pop
mov
mov
nop
test
push
fstp
int
fisubrl
or
lcall
xor
rorl
fbstp
lock
mov
push
mov
cmp
and
fs
mov
and
mov
mov
fnstenv
add
mov
mov
xor
lcall
out
xorb
lret
cs
and
inc
outsl
and
sbb
and
mov
cltd
mov
shrb
jge
push
shll
in
jno
inc
std
repnz
xchg
lcall
nop
insl
es
dec
sub
xor
xchg
adc
sbb
lods
and
push
enter
and
fisubl
inc
xchg
mov
xor
test
clc
and
ffree
mov
add
rclb
lods
inc
or
leave
mov
xchg
dec
dec
aam
ss
sbb
insl
movsl
stos
cmp
cmp
push
cmp
xchg
mov
aas
cld
repz
aam
mov
cmp
and
mov
into
lods
jp
enter
xchg
int3
mov
loop
mov
negl
out
lods
push
push
xchg
sahf
xchg
or
adc
scas
iret
and
push
add
push
push
imul
mov
cmp
mov
mov
inc
mov
fisubrs
xchg
imul
nop
leave
call
loop
inc
mov
or
fbld
xlat
adc
push
xchg
rcr
adc
cs
lret
pop
fcmovne
inc
push
pusha
nop
divb
data16
imul
dec
xchg
dec
mov
cmp
fisubrs
or
aam
cmp
push
lods
loopne
arpl
sub
xchg
hlt
pop
rcrl
out
mov
repz
test
lods
cld
insb
iret
mov
jp
or
shlb
std
sub
mov
in
mov
xor
xchg
std
test
shl
clc
dec
ror
shll
mov
pop
out
xchg
add
jmp
adc
add
int
adc
jb
cmp
aad
dec
or
rorb
insl
mov
push
loope
cmpsl
lret
xchg
push
mov
xor
xor
add
out
mov
cli
in
hlt
cmp
iret
mov
lahf
stc
cmc
sbb
adc
dec
ret
gs
inc
or
lods
inc
sub
push
stos
cwtl
cmp
cltd
call
mov
lea
mov
or
into
adc
lods
dec
test
dec
adc
enter
cli
in
jns
adc
sub
out
adc
jnp
loope
test
loop
mov
xor
xchg
xchg
inc
clc
pop
jle
lock
fwait
jns
in
pop
inc
out
and
or
xor
xor
push
mov
arpl
jne
gs
arpl
or
xor
popw
and
mov
xchg
ds
or
dec
imul
mov
iret
xorl
scas
jbe
loopne
aas
fdivrl
and
xchg
and
add
add
mov
in
mov
or
cltd
dec
adc
out
mov
rcl
pop
inc
add
or
into
lds
aad
sbb
gs
cld
pusha
cmp
dec
cmp
sbbb
or
adc
aaa
push
es
sahf
mov
dec
pop
and
xchg
lods
dec
imul
je
inc
xchg
cmp
pop
pusha
or
inc
neg
jno
adc
sti
popa
test
or
push
cmpsb
xor
and
dec
add
fbstp
sub
leave
mov
lods
aam
out
fldcw
xor
add
xchg
stos
inc
lods
cmp
inc
inc
and
mov
mov
cmp
int
pop
inc
add
mov
pop
push
es
jno
or
jae
in
xor
mov
add
mov
sti
sbb
jae
ds
sub
les
inc
pop
dec
xor
mov
ds
rcll
lahf
ret
add
test
mov
xchg
lret
orl
daa
add
fisttpll
dec
rorb
pop
cmpsb
sbb
verr
or
es
insl
je
jbe
inc
pop
mov
jbe
pop
cld
call
int
sub
push
std
stos
lret
div
push
fidivl
xor
int3
int
jae
xor
ds
fstl
xor
or
adc
add
jmp
std
int3
js
dec
mov
imul
cltd
push
push
cmp
add
aaa
shlb
xor
jp
xlat
mov
inc
andb
adc
xor
daa
xchg
lds
roll
hlt
and
imul
pop
mov
enter
pop
cli
fsubr
or
inc
push
push
lods
sub
fcoms
in
adc
movsb
lcall
cmc
fldenv
lock
lret
adc
sbb
pop
and
insl
rorl
mov
mov
xor
cmp
sub
nop
repnz
sub
mov
xor
sub
gs
sti
aad
fcomps
aas
out
gs
xor
jo
mov
insb
fmul
or
pop
movl
jge
xor
mov
inc
jne
cs
ss
sub
mov
jecxz
mov
inc
push
cmpsl
shrl
pushf
adc
inc
clc
repz
add
and
mov
daa
in
lret
ret
pop
pop
arpl
stc
addb
and
push
xchg
cmp
js
jecxz
jno
cmc
loopne
addr16
mov
dec
cmp
add
or
mov
mov
cmp
push
or
add
dec
and
cmp
xchg
add
xchg
inc
icebp
pop
shrl
sub
dec
out
jl
cmpsb
add
shll
cmp
mov
mov
xchg
and
scas
aaa
push
out
cmp
mov
xor
inc
int
test
test
mov
fiadds
leave
push
adc
popf
push
iret
fiaddl
test
adc
fstpt
test
ja
icebp
inc
cmpl
daa
add
push
jne
adc
popf
dec
push
jne
cmp
into
enter
dec
and
push
stos
faddl
jge
loop
popf
sub
push
jno
cmp
add
cwtl
push
xor
fistpl
mov
sbb
add
fisubrs
xor
test
cmp
sahf
sti
stc
jae
inc
cmpsl
cwtl
pop
imul
xchg
pop
fcom
rcl
daa
mov
inc
std
push
cmpsb
sbb
add
mov
lock
pop
mov
clc
and
and
enter
xchg
adc
jns
cmp
jno
loope
xchg
xchg
in
movsl
add
adc
lret
pop
xchg
jl
stos
das
jecxz
add
test
and
inc
push
xor
cmc
ja
mov
std
cmp
mov
jge
fcomi
imul
shlb
sub
pop
or
andb
jl
and
pop
dec
fstpl
es
push
pop
imul
mov
leave
int3
cli
dec
push
idivb
sbb
ljmp
popa
sub
out
and
inc
push
pop
adc
cmpxchg
push
in
jge
cmp
pop
pop
pop
cli
adc
push
ljmp
cmp
push
decb
mov
loopne
adc
sti
in
mov
pop
mov
dec
sbb
pop
sub
das
jmp
cmp
cwtl
fistpl
xchg
dec
out
int3
push
lods
es
ss
mov
mov
sti
add
or
adc
cli
aam
mov
rclb
add
ffreep
dec
push
js
fistpl
mov
jmp
jns
cmp
fcoms
mov
cmpsb
aas
mov
dec
mov
add
push
call
or
das
aaa
rol
dec
test
or
mov
daa
sub
test
xchg
lds
sahf
rcrl
mov
mov
loope
loope
cmp
jmp
leave
xchg
mov
cli
or
test
jno
mov
insb
jecxz
cmp
popa
xorl
push
push
enter
pop
cmp
push
pop
and
sub
into
mov
in
lcall
sarl
push
cmp
fldcw
mov
mov
xchg
imul
add
push
push
mov
jle
jge
and
ror
les
mov
lahf
rorl
mov
mov
ds
ret
imul
adc
inc
enter
call
xor
andl
repnz
test
xor
pop
roll
xchg
stc
subl
or
cmp
cld
ljmp
ss
cmp
xchg
jae
adc
sbb
les
push
sub
push
push
sub
sub
stc
push
inc
pop
out
je
adc
dec
xchg
mov
out
add
cld
add
mov
cld
sub
fistpl
push
pushf
in
jb
ja
std
call
jnp
mov
je
cmp
push
fcomps
xor
stc
push
lret
mov
scas
jmp
mov
push
mov
ss
into
stos
js
aad
cmp
add
pslld
es
dec
ljmp
pushf
jecxz
hlt
xor
xchg
divps
test
mov
push
mov
fimull
xor
dec
mov
pop
mov
aam
push
push
data16
cmc
aaa
cmp
fwait
mov
and
jl
lea
mov
movsb
pop
ret
scas
cmp
out
xor
lods
inc
cwtl
cmp
adc
push
add
xor
pushl
or
jne
insb
jb
dec
dec
xlat
std
loopne
xor
push
aam
lret
out
cld
arpl
or
add
jne
xchg
mov
xchg
cmp
cmp
and
add
loop
mov
int
imul
pop
clc
inc
cmp
mov
inc
jb
mov
dec
leave
jno
lds
pop
adc
mov
add
sbb
ret
and
push
scas
sbb
mov
dec
ja
jecxz
adc
jae
test
sbb
sub
inc
mov
jmp
scas
add
fidivl
mov
mov
fs
icebp
jb
sbb
imul
fwait
add
jg
outsl
sbb
push
adc
fld
fldenv
pause
movsb
cmp
out
mov
push
cmp
int
mov
and
popa
jno
cmpsl
in
adc
test
out
sub
lcall
jb
std
push
inc
inc
ret
sub
cmp
test
or
mov
pop
fnsave
cmp
data16
scas
cmpsl
scas
movsl
repz
pop
and
dec
out
imul
leave
pop
sub
mov
les
addl
xor
pushf
hlt
sub
mov
adc
dec
cltd
cmpb
sbb
cmp
into
dec
mov
shr
push
push
mov
mov
jbe
lods
mov
dec
test
add
loope
and
ret
jns
inc
and
xchg
scas
imul
or
shl
popf
out
cmp
not
mov
repnz
adc
orl
and
mov
jmp
test
mov
callw
or
gs
dec
jne
lea
and
dec
pushf
mov
imull
shl
adc
xor
adc
push
inc
dec
fbstp
sahf
mov
jmp
push
dec
sbb
out
or
cmp
into
lret
test
jl
mov
ret
mov
fsubrs
xor
jae
les
xor
sub
fimull
push
cwtl
xor
int
repnz
xchg
in
inc
fs
jmp
lret
imulb
mov
insl
lret
xchg
jne
jecxz
sbb
mov
mov
and
jmp
adc
pusha
pop
les
mov
pop
mov
push
test
push
std
movsb
clc
sbb
mov
ret
mov
jp
mov
outsb
xchg
stos
add
pop
mov
xchg
lret
stos
mov
push
mov
mov
mov
add
mov
or
outsb
fisttpl
aad
and
dec
push
sub
pop
ret
mov
xlat
pop
aam
hlt
es
orb
mov
test
out
aas
jns
xlat
shlb
lds
out
mov
sub
cmp
lret
shlb
cmp
in
mov
mov
xor
sahf
pop
mov
insl
jecxz
pop
pop
outsl
add
mov
pop
fidivs
mov
fimuls
inc
jmp
inc
cmp
divb
mov
addr16
cmp
mov
or
fnstenv
in
xchg
xor
pop
nop
test
fwait
cld
pusha
nop
sbb
sbb
mov
mov
int3
shlb
stc
lods
push
lea
vpsllq
add
xchg
mov
stos
fsubs
push
lock
sub
lock
xor
mov
cmc
fs
lds
push
loope
fsubl
or
ljmp
mov
sub
arpl
js
lds
fsubr
insb
dec
sahf
clc
pop
push
loop
fwait
add
rcll
shll
popa
test
in
inc
ds
add
xchg
cmpsl
loop
shlb
pop
adc
pop
push
mov
lods
cmpsl
and
rorl
popf
and
stc
mov
neg
or
push
push
dec
cmpb
insl
iret
repz
out
andl
mov
cli
and
cs
cmc
inc
ljmp
pushf
inc
xor
mov
jne
movsb
test
mov
or
mov
test
test
jbe
or
jnp
xor
add
adc
loopne
bound
out
les
add
out
out
jne
xor
sbbb
jmp
sub
imul
loop
push
out
push
sahf
fs
repz
in
jns
daa
xor
andl
das
popa
xchg
pusha
xchg
pop
mov
fisubrl
mov
push
lcall
popa
hlt
imul
mov
and
mov
aad
add
jno
fdivl
push
cltd
scas
cmp
dec
or
paddusb
pop
iret
mov
rcrl
lock
xchg
xor
imul
sahf
mov
movsl
outsl
push
inc
push
scas
and
out
push
insb
insl
inc
es
aaa
loope
xor
sbb
ja
inc
pop
xor
outsl
pop
and
cmp
push
push
cmp
push
inc
cmp
add
aaa
cmovo
out
lret
fs
repz
stos
icebp
daa
rorl
lods
out
adc
jg
push
xor
or
push
or
mov
push
in
push
mov
stos
dec
insb
loopne
test
addb
aad
mov
sbb
cs
aaa
dec
outsl
add
lret
jecxz
mov
mov
sarb
mov
movsb
fistps
jb
leave
aam
push
mov
xchg
push
and
sbb
repz
repz
add
mov
loopne
ror
cmp
dec
cmp
in
jp
adc
dec
lcall
lret
ret
clc
outsl
push
and
dec
pusha
add
or
fsubp
and
arpl
into
adc
loopne
jno
rorb
movsl
mov
sbb
pop
cmpsb
inc
test
mov
mov
adc
gs
cmp
inc
cltd
dec
pusha
add
jmp
popa
pushf
jl
or
push
cwtl
add
ja
sbb
cmpsb
adcb
fs
filds
push
jo
push
imul
insl
lock
test
push
xchg
jge
cmp
cmpsb
mov
test
mov
mov
jno
mov
jp
in
pop
imul
cltd
dec
jecxz
cmp
dec
xlat
es
hlt
into
js
jmp
inc
inc
pusha
pop
or
mov
das
cwtl
nop
lahf
mov
jecxz
stos
jl
sbb
cld
je
cmp
int
mov
inc
adc
pop
mov
pusha
adc
je
jnp
mov
loope
icebp
mov
cltd
leave
out
inc
adc
pushw
pop
out
adc
sub
jle
push
jecxz
mov
ljmp
test
out
test
and
mov
popf
pminsw
out
test
out
mov
dec
in
enter
fxch
ds
mov
das
cmp
in
xor
dec
adc
loope
imul
jmp
mov
das
sbb
jle
jg
stc
imul
pop
mov
aam
daa
lods
pop
das
cmpsb
lahf
rcrl
test
jbe
ds
bound
pop
lock
add
push
ficoms
xor
and
mov
repz
sbb
pop
verr
mov
mov
es
mov
ret
adc
jmp
lahf
cmp
push
xchg
dec
inc
add
movsl
scas
or
jbe
push
data16
lock
jb
xlat
jl
outsl
rorb
adc
lret
out
mov
mov
mov
xchg
aas
clc
cwtl
mov
mov
ficomps
or
rorb
mov
mov
stc
sub
pop
push
cmpsb
scas
adc
clc
xchg
push
xchg
xchg
fsubs
in
sbb
xchg
lds
enter
jg
and
adc
adc
jno
inc
dec
rclb
test
aaa
cmp
xchg
dec
pushf
lods
popf
dec
fcmovu
mov
push
icebp
sub
sub
movsb
clc
pop
mov
jae
sbb
cmp
xchg
push
cmp
push
in
stos
pop
xchg
jae
dec
sahf
iret
jp
mov
cmp
jne
mov
lcall
lcall
aam
or
sub
inc
imul
loope
aaa
outsb
mov
or
pusha
dec
xor
call
mov
lds
aas
fisubs
scas
mov
jge
andb
mov
ret
stos
mov
lret
ljmp
inc
mov
inc
mov
and
cmpsl
repnz
insb
lods
dec
xor
jl
test
push
xchg
in
mov
negl
xor
fcoms
into
shl
xchg
das
and
jns
iret
je
push
add
aad
cltd
sbb
outsb
sub
push
cmp
cltd
es
or
mov
xchg
xor
arpl
sub
out
add
mov
dec
mov
jns
outsb
pop
bound
sti
xchg
pop
pop
insl
push
int3
push
js
xchg
jne
or
mov
jg
popa
or
aad
sub
adc
aas
pop
in
cmpsb
insb
loop
ljmp
lahf
jmp
push
jmp
jmp
add
cmpsb
mov
cmp
xchg
mov
mov
insl
push
int3
pop
enter
inc
sub
mov
sahf
sbb
lock
dec
test
insb
cli
dec
bound
mov
jmp
push
imull
cmpsb
cltd
xchg
clc
pop
push
sahf
loop
out
cwtl
mov
insb
and
jns
in
push
adc
mov
ljmpw
shll
arpl
dec
push
push
dec
inc
aaa
mov
loope
push
xchg
jmp
dec
jno
pop
sub
push
push
lods
jnp
shrl
push
call
movsb
push
push
cmc
mov
aas
scas
pop
sbb
inc
pop
add
xor
popf
sbb
mov
xchg
loop
pushl
jp
jp
pop
dec
pusha
dec
ljmp
loope
imul
add
mov
pop
add
cmpsl
mov
lods
dec
out
xor
rcrb
adc
repnz
ja
js
pushf
push
cmpsb
push
adc
mov
insb
loopne
push
fidivrl
subb
add
add
ljmp
dec
xor
in
rorl
inc
or
je
cli
jmp
js
je
mov
push
lods
imul
sarb
jne
jecxz
fsubl
jmp
xchg
cli
fcoml
sarb
sub
xchg
sbb
xchg
push
shrb
add
shrb
inc
jg
loopne
ds
and
xchg
stos
push
movsl
or
mov
popa
das
push
xchg
sbbb
xchg
lret
fs
and
hlt
mov
cs
xor
dec
ja
mov
lahf
add
ljmp
push
inc
shrb
or
xchg
jmp
iret
cmp
mov
andl
inc
loop
mov
mov
adc
loope
rclb
xchg
sahf
lcall
popa
ss
aas
xor
pop
inc
xchg
les
sub
mov
aas
push
jle
clc
jnp
ret
or
imul
movsb
ja
lds
clc
outsl
add
imul
ret
jle
xorl
mov
pop
and
dec
call
lcall
pop
or
mov
inc
and
add
or
popf
push
out
sub
ds
jmp
lret
mov
mov
ficomps
cltd
test
fstpl
loop
pop
shl
push
in
or
adc
mov
aaa
fmull
jb
xchg
loopne
or
push
mov
and
mov
pusha
xchg
cmpsl
fidivrl
movsl
cmp
pop
push
add
pop
fisttps
sbb
cmc
fnstsw
mov
movsl
cmp
rcrl
ljmp
jg
pop
in
lahf
add
inc
mov
daa
xchg
stc
and
xchg
outsb
fwait
clc
push
arpl
into
add
or
hlt
mov
xchg
imulb
ljmp
cmp
fnsave
cmc
mov
ljmp
mov
into
push
xchg
add
orl
outsb
ret
xchg
in
add
aad
daa
xchg
jnp
xor
sbb
or
mov
test
clc
cmp
adc
mov
cmc
loopne
mov
daa
pop
xchg
lock
xchg
sub
aaa
out
push
xor
jg
das
pop
shlb
mov
sti
aad
xchg
in
shl
inc
pusha
sbb
adc
repz
aaa
inc
add
insb
insb
cmpsb
add
sub
decl
pusha
push
pop
pop
inc
pop
mov
aaa
jo
mov
mov
loop
flds
push
mov
je
pop
mov
aaa
icebp
jp
sbb
loop
inc
cmp
dec
xor
push
push
push
xor
mov
jno
movsb
sti
mov
mov
lret
enter
stos
dec
add
icebp
in
xor
add
dec
daa
sbbl
fs
cld
popf
jecxz
push
shrb
sarb
jmp
outsb
out
push
shr
mov
push
aaa
lahf
test
loopne
dec
mov
call
dec
mov
xchg
sbb
and
aaa
or
ja
aas
fxch
loop
add
or
sbb
aad
or
daa
mov
frstor
pop
es
cmp
popf
outsb
outsl
inc
xor
test
addl
ret
jle
or
pop
adc
popf
aam
fcomps
cmpsb
xchg
push
imul
or
cs
test
add
cmp
xlat
rcll
wrmsr
ret
cmp
sbb
shlb
repnz
sahf
dec
cmp
cmpsl
jno
shll
jns
pop
push
in
and
mov
mov
pop
in
or
cmc
xor
sub
mov
add
mov
popa
scas
add
ljmp
dec
mov
mov
je
xchg
bound
mov
and
mov
mov
pop
mov
push
jo
pop
bound
mov
cld
pop
jg
loopne
mov
enter
push
push
bound
adc
scas
jecxz
add
sarl
adc
lds
and
ja
pop
call
xchg
mov
xchg
jmp
sub
aas
push
cmpsb
xlat
mov
ror
popa
pop
pop
xchg
cmp
jbe
cmpsb
pop
scas
jbe
sub
and
popa
lea
sbb
leave
mov
lcall
sbb
pop
inc
into
add
rcrl
popa
outsb
jg
dec
aad
push
imul
push
ret
add
icebp
xor
fcoml
scas
push
lcall
arpl
cmpsb
mov
stos
pusha
subb
out
cli
pop
pop
into
popf
ret
fildll
aad
jmp
aam
add
ds
cltd
jno
dec
fidivs
or
xchg
and
pop
push
sahf
out
fcmovnbe
jbe
test
mov
push
cmpsb
inc
xchg
sbb
xlat
xchg
test
int3
mov
sbb
pop
xlat
loopne
lcall
subb
lods
mov
ror
stos
pop
cmp
es
pop
cmpsl
pop
jne
or
imul
ja
inc
test
cwtl
cli
xchg
stc
cmp
sbb
adc
mov
out
lods
or
jecxz
out
mov
sysret
push
sub
pusha
cmc
ror
mov
lret
add
movsl
sbb
cmpsl
test
shll
push
cmp
jp
mov
in
adc
jg
add
out
leave
popf
or
pop
jns
shlb
inc
insb
in
push
xor
popa
fldlg2
xor
dec
out
push
fs
jge
and
push
inc
sub
cmc
pop
mov
pop
inc
clc
xor
lods
pop
sbb
aas
insl
movsb
xor
lret
out
push
jmp
push
aam
jno
or
jbe
xchg
sarl
inc
mov
call
lock
rep
test
lock
sub
push
xor
jae
mov
ss
push
in
rcrl
out
jp
jle
movsl
inc
in
inc
outsb
lods
fcmovnb
stos
js
cmpsb
sarb
mov
jne
sarb
repnz
push
aam
dec
sub
data16
xor
mov
mov
cwtl
sbb
cli
jo
gs
sub
push
add
mov
jb
in
mov
jmp
clc
loope
popf
dec
scas
mov
mov
cmp
push
pop
cmp
xor
add
stos
sub
movl
daa
stos
pop
cmp
adc
pop
stos
adc
push
outsb
nop
popa
test
lods
shlb
or
or
mov
sbb
rcrb
fnstsw
sahf
add
adc
cmp
rolb
int3
mov
xchg
into
jecxz
std
xchg
js
adc
les
cli
stc
xor
rcll
filds
dec
out
cld
mov
leave
js
test
and
subl
add
xor
mov
cmp
sub
sub
xchg
pop
jbe
cmp
scas
psraw
insb
push
ljmpw
fidivl
imul
adc
sub
sbb
xchg
pop
xchg
mov
je
in
add
push
lahf
in
inc
fisubs
xchg
jl
rolb
shl
cwtl
cmp
dec
mov
cmpsb
notl
or
mov
adc
xor
and
add
mov
mov
mov
orb
mov
pop
popa
mov
xor
xchg
cmp
mov
pop
xor
pop
mov
dec
enter
inc
iret
dec
stos
loopne
pop
mov
orb
mov
xor
cmp
adc
jbe
cli
lds
aad
cmp
mov
jnp
rorl
push
adc
xchg
fsts
out
sub
pushf
mov
lea
inc
mov
arpl
je
aaa
stc
insl
repnz
mov
arpl
je
lcall
shlb
sahf
icebp
push
imul
push
jo
and
ja
ficoml
outsl
fmul
and
inc
addr16
xor
int3
inc
and
dec
fstp
pop
sub
or
inc
mov
outsl
lahf
xor
adc
xor
xchg
in
fdivrs
mov
jge
push
mov
xchg
cmp
nop
push
in
push
div
popa
mov
enter
mov
or
mov
pop
nop
cmp
rorl
sbb
nop
orb
mov
inc
pop
fiaddl
push
dec
insl
inc
mov
fnstsw
scas
out
and
add
pop
mov
lcall
arpl
fs
icebp
hlt
mov
rcr
in
inc
mov
les
cmp
hlt
stos
pop
add
fldt
int3
mov
imul
push
push
mov
mov
mov
jge
in
dec
mov
xor
xor
mov
fistpll
out
add
cs
mov
std
sar
out
insb
aad
push
sub
lds
sub
addr16
int
xchg
fiaddl
xchg
mov
sbb
sub
fidivs
jmp
shrl
fs
push
cmp
push
scas
or
inc
pusha
out
lods
mov
sub
ret
push
lods
sub
pop
imul
aaa
std
fistps
xor
imul
sub
popf
xor
xchg
xchg
mov
inc
roll
sub
add
mov
mov
aad
aad
idivl
int
call
inc
adcb
xor
out
mov
fnstcw
adc
cmp
sub
sub
dec
lret
dec
mov
repnz
jb
lret
cmp
stos
xor
dec
inc
andb
adcb
in
aad
fidivrs
jp
cld
mov
xchg
fldcw
jge
mov
in
inc
clc
pop
push
xchg
xlat
lcall
dec
mov
sub
cwtl
xor
inc
aam
pop
movsl
in
repz
imul
sbb
dec
pop
jnp
push
xchg
lods
popa
cmp
jge
les
cmc
or
and
movsb
dec
inc
adc
int
rcll
push
loopne
add
inc
popa
xor
add
aam
dec
jecxz
inc
gs
pop
mov
sub
icebp
test
sti
and
ds
repnz
xchg
sbb
sbb
shrb
imul
sbb
repz
ret
jl
or
inc
inc
xor
jne
jle
mov
add
push
pushf
xchg
xchg
fdivrs
in
xchg
add
pushf
and
sarb
mov
outsb
pop
addl
fbld
subb
scas
scas
cmpsl
int3
sbbl
pop
testb
cmp
cltd
pop
pop
dec
clc
inc
cltd
fldenv
lods
jb
hlt
hlt
xchg
adc
int3
adc
mov
scas
mov
subb
inc
mov
rcrb
jns
dec
mov
lret
mov
jp
or
xor
test
lahf
test
movsb
aaa
ljmp
fisttpl
mov
fbstp
cmp
mov
mov
jne
push
fs
or
outsl
mov
ss
mov
repnz
add
jbe
pop
loopne
aas
push
pop
out
sbb
sti
das
rorb
std
dec
dec
or
ss
xchg
shrl
ja
jno
jbe
push
pop
jnp
adc
mov
xchg
xchg
mov
push
shlb
pop
xor
mov
adc
cld
jo
lahf
ffreep
mov
fldenv
xchg
sub
adc
dec
mov
test
pop
mov
roll
sbb
imul
cwtl
push
dec
dec
adc
in
lock
sbb
lock
shlb
cmp
jns
or
push
mov
xchg
jb
mov
icebp
xchg
out
and
push
sub
frstor
mov
mull
pop
iret
shrb
mov
lods
cwtl
add
dec
aad
clc
pusha
sbb
scas
or
fmuls
out
mov
ds
aam
je
push
mov
leave
xchg
push
int
loope
xchg
es
mov
push
push
xchg
insb
add
xor
push
sbb
fstpt
out
popf
xlat
std
sbbb
jle
cwtl
jecxz
pop
mov
fidivs
sti
test
rcll
fstp
sbb
mov
test
inc
inc
sub
push
inc
sbb
add
divl
mov
dec
in
adc
movsl
jmp
cs
scas
pop
rcl
jae
cmpl
and
call
je
mov
repz
jne
add
fdivp
pop
sahf
push
inc
ret
ret
fimuls
rol
push
cs
mov
jecxz
cmp
les
jns
cmpb
adc
cmpsb
mov
add
adc
mov
cs
add
fmuls
xchg
ljmp
fists
rorl
jnp
adc
outsl
testb
add
sahf
xchg
stos
sub
arpl
or
rolb
cmpsb
ret
leave
ds
pop
sub
jp
orl
lock
add
cmc
loop
inc
mov
mov
idivl
fisubrs
fcomip
jnp
mov
mov
lahf
push
push
jg
jg
add
arpl
shll
leave
icebp
mov
lods
or
add
fcoms
xchg
ret
in
data16
out
das
push
in
bound
les
fcomps
fidivl
add
ret
mov
push
in
insb
lock
pusha
push
cmp
or
mov
add
cmpsl
sub
add
out
or
sub
bound
adc
dec
add
and
fs
leave
xchg
in
rorl
ljmp
shr
or
out
fmuls
mov
bnd
fs
stos
aaa
sub
cmpsb
ja
into
loop
dec
adc
jle
mov
pop
fcmovnbe
out
dec
in
xor
loope
data16
mov
repz
mov
je
into
push
mov
hlt
sbb
xchg
push
loopne
mov
xor
push
add
mov
fcomps
or
iret
into
jb
fstpl
mov
push
cmpsl
outsb
xchg
test
mov
aaa
cltd
pop
pop
and
out
in
xchg
fwait
test
mov
mov
outsb
mov
pop
pop
cs
cwtl
in
dec
jno
ret
rclb
sahf
lahf
sub
addr16
jns
cwtl
jmp
fsubrl
cmp
outsl
aas
imul
out
inc
cmp
jns
cmp
push
in
push
xchg
push
iret
pushf
sbb
or
ja
jp
cmp
rorb
mov
dec
jp
and
push
pop
in
in
sub
or
stc
cs
cmp
dec
push
daa
pushf
jo
aad
cli
inc
mov
clc
test
push
lock
hlt
and
cwtl
out
in
in
movsl
dec
or
and
iret
push
adc
fnstsw
jp
adc
mov
mov
mov
push
incb
push
xchg
aad
mov
enter
fisubrs
pop
je
int3
xorb
push
mov
test
lahf
fmuls
push
in
repz
push
scas
sbb
jno
call
jle
scas
inc
daa
pusha
jl
jl
xor
ja
mov
sbb
jmp
movsl
insl
pop
mov
movsb
insl
adc
ja
lods
xchg
popf
and
rorl
nop
mov
inc
clc
test
jg
push
jl
pushf
add
fisubrl
cmpsl
mov
loopne
or
scas
ret
loop
mov
cld
test
imul
push
sbb
adc
ljmp
add
rcrl
fdivl
imul
test
jmp
push
fistpll
pushf
arpl
xor
add
jne
lahf
sarl
inc
push
lds
lods
movsl
in
roll
mov
mov
das
or
jb
mov
mov
xchg
aad
lods
dec
pop
sahf
dec
cmp
add
or
push
jne
pop
mov
sahf
cmp
jno
shrl
pop
insl
sti
mov
stos
push
push
gs
arpl
or
pop
iret
xchg
xchg
and
lret
or
sbb
sbbl
aas
push
pop
lock
fistpl
in
or
jnp
lods
jns
iret
fs
popa
icebp
cmp
iret
sbb
roll
ljmp
lahf
fcmovnbe
or
dec
adc
shll
roll
out
addr16
aam
cli
mov
fsubrl
int3
sbb
mov
or
and
and
pop
and
popf
lret
in
stos
outsb
out
or
ja
jno
mov
stos
mov
mov
ja
ss
insb
xor
rolb
cmpsl
scas
shlb
pop
sbb
jmp
push
rol
mulb
sti
out
mov
lret
fs
lgdtl
jns
ficomps
pushf
fistpl
mull
xor
jo
pop
adc
add
in
fs
sbb
repnz
les
int3
ss
outsb
idiv
mull
loope
nop
aad
add
es
js
adc
dec
mov
dec
mov
test
in
push
push
jae
mov
sub
mov
push
jmp
mov
loope
pop
shlb
cmp
and
mov
mov
fisubrl
adc
or
jmp
sahf
in
pop
or
inc
decb
ljmp
scas
sub
cmp
cld
push
in
jg
mov
inc
test
add
xor
cmp
cmpsl
shl
popf
push
xchg
push
hlt
mov
movsl
mov
or
push
loop
push
push
dec
pushf
repz
daa
addb
xor
sahf
jmp
aaa
sarl
pop
add
mov
lcall
mov
stos
enter
das
ds
pushf
sbb
lea
adc
pop
jnp
inc
or
and
jmp
jmp
notl
push
xchg
sti
imul
sahf
jl
mov
jae
push
jo
ret
loope
stos
lcall
mov
inc
lods
or
mov
iret
cmpsb
pushf
inc
test
add
xor
lds
outsl
sbb
repnz
rclb
bound
ljmp
push
cltd
mov
call
jg
outsb
or
idivb
jo
iret
add
leave
push
xor
xor
cmp
mov
fwait
add
fs
or
mov
push
adc
rclb
xchg
push
jmp
cs
dec
lret
sbb
dec
lds
fs
out
adc
or
adcl
dec
mov
shr
fstl
adc
lods
and
stos
clc
xchg
jecxz
sbb
lods
js
mov
subb
cmp
fwait
in
xor
test
cmp
pop
sbb
test
mov
adc
xchg
mov
aam
lea
test
call
or
ret
sub
or
cmpsl
mov
sar
int
xchg
sahf
cs
xor
pushf
xchg
in
xchg
dec
fcoms
popf
es
jb
push
fwait
leave
sarb
and
dec
shl
mov
inc
sub
enter
inc
leave
fimuls
and
jnp
dec
outsw
test
sbb
and
ljmp
xchg
jb
mov
in
pop
mov
xchg
rclb
cs
sub
and
daa
mov
mov
in
inc
out
movsl
sub
hlt
filds
dec
push
and
pop
std
xchg
stc
aad
std
cli
mov
fucom
mov
and
in
scas
daa
sub
ss
hlt
or
adc
cmp
insl
xchg
sub
mov
fnstcw
mov
add
clc
cmc
add
ss
mov
test
int
xchg
dec
sbb
ljmp
xor
cli
insl
insl
and
sarb
outsb
movsl
fnstenv
aad
mov
mov
lcall
dec
and
rolb
mov
sahf
imul
bound
or
sbb
or
jns
call
in
pop
inc
ret
scas
sbb
inc
outsb
aam
or
pop
out
stc
leave
stos
mov
mov
cwtl
scas
sub
jmp
pop
imul
push
pop
js
rolb
and
inc
pushf
sub
fbstp
mov
cltd
repz
aas
pop
ljmp
adc
insl
int
gs
fscale
stos
or
lret
push
insl
mov
mov
popa
ds
xchg
sub
mov
leave
out
mov
fwait
div
dec
mov
mov
mov
mov
cmpsl
mov
lea
pop
test
mov
xchg
sub
push
out
jnp
dec
mov
or
das
rolb
cmc
std
dec
movsb
in
mov
pushf
test
imul
cmp
mov
jle
test
stos
out
pop
int3
adc
push
or
sti
sbb
mov
push
jb
daa
xlat
xchg
push
fmuls
into
bound
or
adc
call
out
cs
mov
jnp
in
pop
mov
enter
daa
aad
stos
into
push
inc
ja
repz
dec
in
mov
jb
int3
mov
ds
out
mov
lock
aaa
adc
jns
pop
fwait
mov
push
xor
pop
xchg
movsb
icebp
in
xor
xor
clc
and
jle
lock
xor
inc
dec
pop
shlb
mov
rep
aad
add
out
sbb
mull
fdivs
loope
int
dec
or
mov
push
jecxz
pop
xor
jle
add
push
xchg
pop
fmuls
sbb
idiv
push
cmpsl
add
dec
mov
decl
lock
inc
loop
stos
insl
in
hlt
xchg
push
xchg
aas
mov
sbbb
js
xor
adc
mov
xchg
insl
add
imul
mov
inc
mov
ret
inc
stos
sbb
pop
push
shlb
fs
adc
xchg
xchg
mov
addl
mov
outsl
sub
clc
push
push
adc
test
and
inc
xchg
mov
shl
fxch
add
push
mov
in
dec
mov
mov
xor
mov
jge
fst
xchg
fcomps
dec
cmc
jb
adc
pop
pushl
pop
aam
lock
outsl
lret
adc
iret
mov
mov
pop
lock
imul
jo
xor
mov
adc
fistpll
push
or
push
add
mov
hlt
and
push
jo
gs
add
sbb
mov
jne
pop
std
push
mov
sbb
out
mov
mov
or
ds
into
rcrl
sbb
inc
jmp
mov
pop
fisttps
xor
jmp
in
bound
stos
fdivrs
jne
and
in
jo
push
inc
jo
sbb
and
fs
pop
pop
pop
fidivl
xor
and
mov
fs
gs
add
cmp
lds
mov
push
or
stos
and
mov
bnd
in
mov
mov
mov
outsl
mov
jmp
in
loopne
pop
sub
dec
ljmp
dec
push
dec
and
sbb
test
pusha
aam
and
jmp
inc
sti
jno
lcall
imul
lods
sarb
fidivs
pushf
pop
xchg
iret
stc
fiaddl
sbb
pushf
add
mov
or
and
dec
adc
dec
cmp
dec
in
mov
cltd
add
subl
rolb
sti
in
stos
lods
mov
push
pop
popa
xchg
xchg
in
into
dec
adc
cmp
or
or
mov
shll
iret
xor
pop
sbb
xchg
jg
pop
mov
xlat
jge
inc
and
sbb
out
out
jno
inc
mov
sbb
adc
jno
xor
fmul
add
adc
mov
mov
inc
aaa
xchg
popf
call
add
mov
jo
add
test
cmpsb
mov
xchg
inc
rorb
dec
mov
cmp
les
repnz
rcrb
push
lds
mov
movntps
mov
mov
mov
addb
cmc
cwtl
sbb
push
adc
test
movb
jae
ss
pop
push
inc
aam
mov
push
mov
sbbl
pop
mov
and
inc
notb
jne
jae
xchg
mov
mov
xor
push
nop
ss
inc
ljmp
fistps
xor
rcll
ss
xor
clc
push
cmpsl
inc
cs
add
dec
fisubs
adc
fsubl
scas
sub
adc
mov
cmp
xor
mov
pop
cld
add
insb
mov
pop
inc
loop
or
fisubrs
test
divb
sbb
dec
mov
lock
cmpsl
mov
icebp
sbb
fisttps
pop
pop
xor
cmp
in
pop
ss
arpl
mov
ds
xlat
jl
sub
dec
rcll
call
sbb
mov
xchg
ds
xchg
cmpsl
out
jns
inc
out
jge
test
pusha
inc
sub
cltd
int3
jne
add
pop
push
addr16
add
inc
and
int
out
mov
std
cmc
scas
mov
xor
push
dec
fdivrs
wbinvd
clc
jbe
das
mov
adc
frstor
jg
inc
xlat
adc
mov
ja
ljmp
jmp
sbb
mov
mov
mov
inc
int
in
jbe
pusha
cmp
aam
fisttpll
adc
int
mov
mov
fucomip
push
in
adc
xchg
enter
insb
rcrb
adc
loop
shll
shll
push
cmpb
dec
fisubl
sub
aam
jmp
dec
or
mov
mov
dec
add
lods
rcrl
mov
dec
pop
outsb
cld
gs
bound
inc
int3
scas
gs
cmp
sbb
es
hlt
daa
cld
scas
mov
lock
push
adc
xchg
adc
jb
out
cltd
or
inc
mov
add
aaa
test
in
mov
test
lods
push
pop
pop
std
out
cmp
lret
movsl
pop
jmp
fdivrl
pushf
xor
sbb
jle
pop
adc
shl
mov
ja
repz
fistpll
int3
loopne
shl
mov
cmp
inc
add
sub
dec
cmc
into
sub
sar
mov
test
aas
fadds
enter
mov
imul
mov
aam
rcll
cld
mov
mov
xor
jae
clc
sbb
push
sub
fidivl
dec
outsl
pop
sub
cwtl
shlb
pop
and
mov
les
ret
inc
mov
sub
mov
gs
imul
das
mov
ret
jnp
fs
push
inc
cmp
or
addr16
leave
imul
and
subb
rclb
rorl
ret
xchg
repz
jo
pop
cld
out
gs
and
inc
leave
sbb
sbb
ds
dec
scas
mov
cltd
mov
jns
dec
or
test
cli
clc
shll
xorb
add
push
out
xchg
mov
xchg
xor
dec
fldl
fwait
mov
lods
ficoml
mov
ret
or
pop
push
jl
mov
and
hlt
mov
sbb
stc
mov
movsl
aad
add
bound
fcomps
cmc
xor
add
mov
inc
call
mov
push
aam
or
and
pop
add
subl
and
inc
shll
mov
dec
pop
xchg
cmp
loopne
push
mov
popf
outsl
sbb
sbb
ret
inc
cmp
mov
mov
xchg
sbb
enter
fmuls
jecxz
aaa
mov
and
daa
loope
or
cmc
mov
pop
jno
rcrb
sbb
ret
hlt
sbb
inc
cmpsb
pop
pop
lret
add
imul
add
shll
lds
negb
adc
sbb
or
sbb
jb
or
mov
test
es
mov
adc
jb
ljmp
pop
out
pop
mov
orb
icebp
xchg
nop
leave
pop
push
mov
imul
sub
push
or
subb
fisubs
aad
xlat
imul
inc
clc
cwtl
jl
jno
sti
cmp
dec
enter
dec
ss
cmp
mov
ja
jae
or
jmp
jp
or
and
lods
sbb
mov
inc
outsb
in
pop
sub
sub
roll
lods
sbb
addr16
out
inc
mov
dec
sbb
or
xor
mov
xor
pop
xlat
call
dec
add
mov
mov
scas
nop
cld
adc
cld
adc
jne
outsl
inc
sub
inc
or
adc
jo
scas
aad
lock
jle
dec
push
jae
loop
jg
iret
dec
push
jle
and
jne
addr16
push
fcompl
push
jo
xchg
movsl
sbb
dec
loopne
xlat
add
jno
nop
adcb
or
or
loope
mov
bound
jae
lret
xor
push
out
fwait
cmp
subb
sbb
jns
pop
scas
cmp
add
or
inc
xchg
popf
ss
mov
jg
pop
pop
mov
fstpl
mov
inc
jo
mov
pop
cmpsb
jmp
cs
leave
add
aaa
shrl
in
cmp
rclb
pop
add
cli
ljmp
scas
das
loope
stc
mov
jp
movsb
push
pusha
rcll
mov
jnp
adc
mov
loopne
je
inc
mov
scas
iret
pop
leave
dec
xchg
fs
mov
cmp
pop
sbb
ljmp
and
scas
xor
addr16
jns
stc
jle
fwait
and
icebp
sahf
mov
inc
jecxz
ja
mov
popa
jae
fcmove
push
sti
in
cmp
mov
xchg
idivl
xlat
jo
or
repnz
pop
int
push
iret
add
mov
adc
rcll
je
hlt
pop
je
jbe
xor
cld
icebp
push
movsl
shlb
ljmp
imul
jo
cmp
lods
hlt
ficomps
add
fs
sbb
mov
xchg
sub
mov
xchg
es
adc
jecxz
insb
jl
push
jb
mov
cmp
push
jo
loope
outsl
pop
sbb
fdiv
dec
inc
push
popa
repz
sarb
cmp
sub
movsl
loopne
fstpl
add
or
call
fs
enter
pusha
sub
inc
test
scas
adcb
int3
hlt
inc
mov
daa
lock
cmpsl
clc
ror
insb
mov
ljmp
jno
add
cli
cli
jecxz
mov
andb
push
cmpsl
aam
ret
and
sbb
test
push
adc
mov
cmpb
cmp
addl
dec
aas
cmp
mov
daa
and
and
xchg
push
scas
mov
nop
loope
arpl
pop
mov
sbb
je
jecxz
imul
jge
push
or
adc
mov
mov
test
jne
dec
mov
push
movsl
cltd
inc
xorb
in
cmp
jnp
push
adc
test
xchg
pusha
fmuls
data16
shr
cmp
sub
cmpsl
rclb
or
stos
add
cli
or
mov
xchg
pop
cltd
lret
sub
inc
and
add
and
movsl
push
call
sub
push
mov
movsl
call
ja
xchg
or
sbb
movsb
mov
shlb
ret
pop
jo
ficomps
pop
les
adc
jb
mov
pop
and
jecxz
std
mov
aaa
test
xchg
push
jmp
les
mov
repz
les
mov
sbb
adc
push
stc
jnp
xchg
xchg
push
icebp
pop
test
pushf
stos
enter
bound
xor
ds
shll
imul
jge
xchg
pop
push
test
shrb
xorl
lahf
cmp
cmp
jle
sub
repnz
aad
es
sbb
xchg
xchg
dec
fcmove
mov
inc
push
and
lods
js
xor
and
cmp
mov
cmpsl
push
mov
mov
rclb
loopne
cmp
rcll
adc
xchg
xchg
ret
pop
cmp
pop
call
pop
lods
enter
sahf
ret
dec
leave
jl
out
add
rorl
mov
or
popf
jmp
xor
ret
lcall
xor
test
aaa
xor
lea
jecxz
sarl
mov
sbb
xor
mov
inc
lcall
cmp
xchg
mov
enter
jnp
xchg
jno
mov
inc
in
push
mov
jg
adcb
push
cld
aas
jne
imul
cmpsb
std
jl
or
sbbb
cmp
fisttpl
mov
or
sahf
pop
sar
add
xchg
inc
lea
das
test
icebp
cwtl
icebp
bound
bound
inc
xchg
mov
out
in
scas
push
rcr
into
enter
mov
cmp
stc
cli
bound
ljmp
cmp
out
mov
adc
mov
dec
lds
loopne
xor
ss
dec
mov
aad
pop
adcl
stos
aas
pop
mov
jecxz
push
mov
outsb
push
fiadds
sub
fdivs
leave
jp
xchg
fistl
mov
movsl
adc
xlat
lods
mov
sbb
rcr
mov
pop
pop
in
cwtl
out
adc
pop
inc
pop
ret
out
or
ds
push
ret
inc
cmpsb
cli
sti
aam
jne
mov
in
inc
int3
cld
ljmp
lods
sub
fsubrs
pop
mov
fcom
insb
aad
lods
stos
mov
mov
dec
int
jo
add
mov
aaa
out
aaa
pop
out
je
cwtl
cmp
dec
or
jp
test
jnp
push
push
scas
pop
jmp
outsl
sub
jnp
movsl
dec
nop
dec
sahf
or
ss
mov
and
cmp
stc
popa
xchg
cmp
pop
sahf
fld
hlt
shlb
inc
hlt
ds
jns
jo
jne
xor
cmpsl
cmp
pop
sbb
int
call
push
push
push
mov
cmp
rorb
gs
add
sbb
fdivrl
int3
push
enter
jnp
jbe
stos
bound
dec
test
pop
add
pop
xchg
cmp
sub
icebp
out
ds
aas
jle
test
cmp
cwtl
fcmovne
repnz
out
leave
scas
jo
inc
push
sar
test
mov
and
pop
sti
mov
and
inc
int
mov
fcoml
push
jo
addl
inc
popf
add
mov
mov
ret
jge
gs
aas
mov
int3
daa
inc
pop
and
and
add
js
mov
xor
outsl
fiaddl
sarb
sbb
mov
add
ja
sub
xchg
push
or
cli
adc
xchg
rolb
fisubs
inc
sbb
das
jns
cmp
mov
mov
lock
adc
jnp
jle
sbb
aad
popf
pop
inc
inc
push
hlt
jo
push
push
xchg
ret
dec
xor
jge
push
test
movsb
test
enter
into
cmp
scas
scas
int
outsl
jo
adc
in
fdivs
punpckhdq
add
jg
icebp
mov
ljmp
cmp
adc
dec
jmp
sahf
xchg
xchg
sbb
add
cmp
push
push
push
repnz
mov
mov
add
orl
inc
lret
xchg
mov
pop
lret
addr16
adc
inc
mov
iret
fwait
fwait
add
jl
fcmovne
xlat
fwait
sahf
dec
pusha
dec
sub
add
inc
imul
pusha
faddl
push
dec
add
ljmp
int3
or
sbb
pop
jecxz
push
gs
fcomps
mov
jns
lcall
fisttpll
jmp
test
jl
data16
cmpsb
xchg
adc
mov
pop
add
outsl
xchg
dec
aad
fs
insl
aam
dec
pop
ds
std
test
sub
mov
mov
sub
scas
sar
lea
jp
imul
push
push
mov
pusha
cmp
push
push
mov
and
pop
or
nop
push
hlt
cmp
scas
sti
dec
popf
cmp
xchg
jns
pop
ret
or
movsl
or
mov
sti
dec
lea
pop
lahf
movsb
pop
xchg
ljmp
fsubs
leave
pop
lds
bound
and
adc
minps
or
jns
mov
hlt
dec
cmpsb
mov
popf
stc
push
lret
add
push
inc
ljmp
cld
leave
mov
or
mov
push
lret
lret
fldenv
and
arpl
out
pop
jb
fnsave
sub
int3
les
hlt
test
add
imul
mov
jle
rorl
inc
nop
sarb
sahf
inc
mov
pop
fwait
mov
lods
mov
int
pop
rcrb
in
sub
push
and
xlat
push
jge
mov
and
sub
jecxz
testb
ret
in
mov
jnp
in
dec
push
inc
je
xchg
aad
mov
pop
jl
sbb
frstor
icebp
lret
jle
lret
push
arpl
xchg
movsl
jp
adcb
mov
add
subb
or
fcoml
fsubrs
and
cmp
add
xchg
jecxz
jnp
xchg
shrb
loope
test
out
lcall
cmc
or
cmp
enter
mov
scas
out
mov
xor
pushf
arpl
cli
outsb
arpl
jo
enter
mov
popf
mov
mov
stos
pop
lea
scas
cmp
jne
cmp
mov
aas
nop
cmp
outsl
rorb
dec
push
in
pop
or
mov
leave
pop
jl
repz
aad
pushf
pop
jbe
or
fs
and
imul
out
mov
push
subl
mov
sub
out
xor
out
insl
adc
loopne
jno
insb
xchg
nop
push
stos
mov
call
push
stos
push
mov
adc
imul
fildl
cld
sbb
repz
xor
imul
andl
addr16
xchg
ret
lock
cmp
in
daa
pop
adc
aam
adc
adc
ljmp
sub
lss
es
repz
out
repz
in
test
cld
adc
inc
sbb
push
cltd
testl
pop
inc
ds
mov
out
adc
fs
orl
daa
or
ss
inc
jae
mov
in
dec
dec
mov
or
sbb
add
or
test
mov
or
les
xchg
jb
and
inc
jo
and
jno
popa
mov
out
mov
mov
xchg
fimuls
push
lea
jecxz
lretw
add
jne
mov
cmp
out
push
or
repnz
jl
fs
mov
pop
push
push
fsts
inc
lock
xlat
cmp
cli
xor
and
in
dec
jg
pop
dec
in
xor
inc
cmpl
adc
cmp
push
in
pop
test
push
jp
xor
cltd
mov
hlt
test
loop
cmp
xchg
out
inc
push
ja
xor
mov
adc
popf
xchg
cmp
scas
fsubl
pusha
xor
adc
cwtl
test
scas
pop
dec
push
pushf
inc
push
dec
sub
pop
sub
scas
in
jb
rol
cs
jmp
pop
dec
lods
jno
push
icebp
mov
fs
pop
ds
xor
arpl
jno
sbb
or
sbb
in
jle
sbb
pop
push
pop
leave
inc
and
cmc
xchg
aad
jmp
ja
fsubl
mov
push
add
lea
in
mov
divl
call
imul
add
out
cmp
inc
dec
out
and
jns
lods
jl
faddl
std
jp
lret
mov
gs
mov
jae
inc
cld
or
or
xor
sbb
outsb
jl
test
add
pop
and
mov
mov
ss
xchg
xchg
int
xchg
in
outsl
dec
pop
xlat
xchg
movsl
cmpsb
xchg
mov
xchg
mov
jecxz
lret
sbb
enter
or
cmp
sbbl
jl
sbb
rol
jne
sbb
mov
ficoml
sub
out
dec
mov
shll
pop
pop
into
mov
lret
pop
sarb
adc
scas
adc
sbb
adc
ljmp
jmp
pop
jae
jnp
jb
mov
jbe
xchg
mov
pop
fmull
into
mov
jo
jmp
icebp
daa
imul
mov
jbe
dec
pusha
inc
xchg
je
sub
testl
inc
sub
mov
push
cli
leave
cmp
negl
lods
xchg
dec
sbb
cmp
clc
outsl
imul
cs
in
xchg
addr16
pop
jae
test
shlb
xor
imul
aaa
ljmp
push
cltd
test
iret
or
sahf
aas
loope
mov
mov
insb
lock
dec
mov
mov
mov
mov
inc
stos
sti
sar
dec
dec
sbb
xor
inc
dec
mov
sbb
xchg
hlt
mov
or
jle
in
fimull
rorl
jl
enter
ret
push
ror
ljmp
loopne
xchg
push
fldl
rcl
xor
popf
mov
inc
jg
sbb
ds
mov
push
imul
sub
bound
mov
in
add
xor
popl
jmp
push
add
mov
fsubl
dec
mov
iret
pop
aad
push
or
sbb
jge
rcr
push
out
fs
and
or
sbb
mov
jge
and
lret
dec
stos
leave
sub
push
mov
sbb
lods
push
xor
mov
out
dec
fisttpl
pop
pop
jno
cmp
cs
repnz
in
mov
inc
pop
daa
orb
loope
nop
inc
insb
push
jmp
and
dec
in
ds
cmpsb
lcall
in
ret
cmp
divl
outsl
shll
sub
daa
rclb
mov
push
push
out
mov
inc
pop
jns
cmp
ds
in
orb
dec
sub
push
xchg
pusha
pop
xor
xor
xchg
out
lret
aas
add
mov
add
cmpb
mov
jle
filds
outsl
fildll
movsl
inc
hlt
loope
pushf
or
cmp
add
je
scas
inc
cmp
idivb
subb
dec
out
cmp
add
cmp
mov
xchg
push
dec
outsb
xor
and
inc
xchg
pop
xor
mov
mov
in
pop
jg
jne
jge
out
pushf
rolb
lret
cmpsb
lock
dec
fldl
xchg
clc
and
lahf
pop
xchg
jo
xchg
shl
enter
in
sub
inc
fdiv
cltd
mov
ud1
out
clc
inc
jecxz
sub
inc
jbe
cmp
sbb
push
push
imul
mov
js
inc
into
rcrl
aad
les
push
pop
or
insl
xchg
pop
pop
pop
aaa
push
xchg
sub
sbb
adc
aas
or
xor
cltd
pop
inc
jg
xchg
pop
sbb
or
xor
jno
shll
or
add
lahf
stos
add
cmp
cmp
mov
in
or
lcall
add
lcall
xchg
mov
sbb
movsb
shl
pushf
int3
mov
xchg
push
fmuls
lock
dec
xchg
in
xor
mov
mov
icebp
test
push
ja
and
outsl
pusha
xchg
lea
loopne
xor
or
jmp
cmp
pop
lret
mov
pop
mov
inc
sbb
subb
rolb
fs
push
mov
push
push
mov
xlat
jb
js
jbe
push
stc
sub
push
scas
loopne
xor
sbb
ljmp
testb
out
sbb
repz
fistps
jecxz,pn
scas
sub
aas
xlat
jbe
imul
out
js
sti
cli
out
sub
shl
xchg
jae
cmp
int
int3
mov
mov
imul
push
pop
sub
sahf
jns
test
rcrl
push
dec
lods
in
and
sbb
xchg
subl
outsb
out
lret
jbe
xor
shrb
jno
inc
jo
and
add
cmp
mov
dec
movsb
ds
mov
dec
stos
mov
pop
dec
out
pop
test
std
orb
xchg
data16
dec
mov
loop
movsl
test
jecxz
outsb
out
addr16
adc
dec
add
mov
jp
shr
leave
or
sub
push
int
loop
adc
pusha
sarl
mov
jnp
xchg
repz
enter
pop
movsl
fadds
xchg
xchg
loopne
add
lcall
push
dec
lods
test
adcl
dec
test
mov
pop
inc
or
add
out
pop
sti
and
pushf
push
into
jg
cltd
pop
in
xchg
xchg
in
push
movsl
inc
push
js
adc
cmp
adc
add
sar
imul
cmpsl
cmpsl
cmpsb
dec
jge
cmpsb
aad
jns
pop
ds
movsl
fwait
mov
mov
pop
xor
in
stc
cmpsl
or
add
pop
pop
xchg
clc
add
xchg
test
cltd
dec
imul
popa
push
mov
stc
xchg
fwait
lcall
mov
add
jp
outsl
addr16
int3
cltd
arpl
jns
es
mov
fldt
adc
cs
cmpsb
nopl
and
pop
cwtl
les
push
push
xchg
stc
pusha
mov
and
mov
ss
mov
sbb
push
push
scas
pop
daa
xchg
stos
sbb
xlat
dec
outsl
inc
data16
iret
repnz
push
pop
lods
les
mov
mov
push
jbe
jno
lods
aas
pmuludq
pop
xchg
dec
lcall
xchg
jp
cld
pop
push
mov
cmp
cmp
into
aas
or
loope
sbb
jns
jmp
sbb
adc
test
and
clc
aam
inc
adc
and
push
cmpsl
popa
jne
push
adc
xchg
andl
xorl
and
sub
sub
movsb
test
lret
pop
mov
xchg
test
ficomps
cmpsl
inc
xchg
ret
shll
shl
jae
xchg
add
sub
push
repz
jge
dec
fwait
ljmp
jecxz
jecxz
pop
push
mov
mov
jle
pop
pop
popa
jbe
insl
mov
nop
dec
ja
jo
sti
gs
aam
and
dec
rol
pop
int
sbb
xchg
mov
lret
push
and
loopne
pop
and
addr16
ss
div
testb
cltd
in
lahf
imul
lods
fstl
or
cmpsl
decb
andl
jbe
repz
sti
or
cwtl
lds
mov
mov
push
add
cmc
loopne
nop
or
adc
in
pop
or
subb
adc
popa
fstl
jmp
popa
enter
dec
jbe
icebp
daa
mov
push
ss
add
rcll
mov
pop
jb
inc
je
lret
js
out
push
add
outsl
mov
xchg
inc
cmp
push
push
lret
xchg
or
scas
nop
inc
dec
jp
or
inc
insb
and
hlt
cmp
mov
out
out
inc
stos
stc
out
and
dec
push
pop
pop
cli
jl
xchg
adc
jecxz
mov
pushf
lret
mov
cs
mov
das
in
push
or
add
fstpl
inc
xchg
lock
sbb
scas
xchg
xchg
jecxz
enter
adc
fcmove
inc
fidivs
int
aad
mov
dec
inc
not
xor
dec
outsl
int
push
pushl
xchg
push
push
cld
mov
jns
imul
imul
icebp
dec
inc
mov
pop
mov
sub
shr
jns
mov
leave
push
or
sbb
push
cmp
fnstcw
dec
sub
les
xor
cmp
fs
repz
imul
cmp
pop
mov
cwtl
dec
clc
sub
mov
sbb
dec
loopne
push
test
fdiv
pop
mov
mov
sub
subb
nop
out
stos
mov
mov
jl
jns
mov
nop
sbb
push
mov
daa
cmpsl
add
fildl
or
dec
jg
pop
push
addr16
adc
int3
or
mov
ficompl
stos
sub
xor
dec
sti
mov
jecxz
lahf
jl
dec
cltd
xchg
mov
phsubw
inc
pop
sbb
push
sarb
jle
mov
jnp
adc
outsb
push
push
scas
sbb
sub
leave
jns
xor
jge
xlat
push
cmp
fs
sbb
stc
jns
out
sub
mov
mul
push
jge
sub
xchg
ret
push
dec
arpl
mov
subb
outsl
int3
je
popf
jno
jo
inc
lock
test
jmp
popa
iret
mov
mov
stos
ds
push
xor
loope
mov
mov
cli
mov
das
xor
or
fwait
or
and
mov
sbb
dec
jb
add
xor
push
in
pop
int
push
movsl
dec
jno
pop
je
mov
sbb
mov
cs
call
out
mov
aas
fistpl
popl
ljmp
mov
test
mov
push
push
scas
cmp
lret
fs
mov
sbb
int
xor
and
cmp
pop
xchg
xor
sarl
mov
out
in
jg
push
fwait
cwtl
sub
scas
pop
sub
stos
dec
inc
cltd
fs
mov
ja
xchg
loopne
iret
add
insl
bound
mov
shlb
pusha
add
ja
mov
sub
xor
cmc
or
std
js
shr
mov
in
push
add
call
aas
out
fisttpll
adc
out
das
cwtl
push
jle
std
fmul
lods
mov
cmp
icebp
mov
pop
cli
cli
xchg
adc
int
sub
dec
adc
push
movsl
cmp
sbb
mov
mov
add
cmpsb
mov
push
jg
out
out
in
or
arpl
sub
cmp
ss
in
notb
cmp
mulb
push
mov
cmovb
adc
dec
fmull
dec
fsubl
push
lds
inc
shlb
imul
sbb
mov
sbb
ficoms
push
stos
shlb
mov
add
sub
pop
in
dec
gs
or
in
adc
inc
jge
jge
rol
fsubl
mov
aad
pop
xorb
mov
adc
cmpl
in
adc
in
jo
lcall
je
or
dec
pop
jecxz
push
inc
insb
fwait
and
filds
pop
fstpl
into
aam
jno
inc
lret
sub
fdivp
mov
jl
jl
in
pop
test
xor
fsubl
adc
push
sub
xor
mov
insb
cld
jge
cmp
xchg
repnz
jno
inc
adc
mov
out
inc
and
mov
fucomi
or
and
jmp
pusha
mov
test
shlb
loop
adc
pushf
mov
in
push
data16
lods
sbb
adc
mov
aaa
jmp
mov
jae
mov
call
adc
mov
jo
ficoml
xor
sbb
imul
lock
stos
repz
mov
fcompl
mov
pop
adc
lret
push
add
jl
xchg
adc
xchg
fbld
and
adc
mov
mov
scas
jg
push
leave
call
inc
push
mov
addr16
cmp
fsubs
fsubl
and
push
mov
sub
jae
xor
mov
test
fs
scas
add
pusha
or
ljmp
call
adc
mov
push
fsubl
mov
mov
daa
ja
dec
xchg
pop
in
enter
ljmp
pop
pop
adc
lock
rcr
test
mov
pop
cmpsb
fs
stc
mov
mov
push
xchg
pushf
pusha
adc
push
in
int
sub
dec
int
xchg
movsl
daa
nop
fwait
xor
out
jno
repnz
sbb
outsl
xor
std
jns
pop
xchg
jl
pop
fdivr
push
mov
aaa
push
gs
aaa
lods
sub
mulb
sub
sti
test
and
mov
in
jmp
fucom
add
nop
bound
int
xor
cmp
loope
add
fildl
mov
popa
or
out
test
fidivs
pop
cmpsl
rclb
movsb
adc
scas
les
sti
loop
and
or
push
add
cwtl
push
ret
sbb
imul
lds
nop
arpl
aam
fistpl
add
gs
mov
ja
cld
xlat
mov
inc
mov
xchg
mov
push
sbb
sbb
sbb
mov
popf
jb
jbe
ja
mov
inc
scas
fcompl
mov
fwait
xor
pop
xchg
js
fbstp
fistpl
mov
dec
aaa
data16
mov
and
cwtl
pop
enter
cmp
xchg
adc
mov
arpl
cmp
mov
pushf
inc
and
pop
jge
cmpsb
jecxz
dec
call
in
mov
cmp
idivl
inc
stc
dec
pusha
xor
adc
cmp
call
jp
cwtl
xchg
into
ja
sbb
rcl
addr16
jns
xchg
arpl
in
add
push
pushf
add
prefetch
mov
iret
mov
mov
push
stos
and
mov
adc
lds
inc
xchg
cmp
jmp
inc
test
aam
insl
ds
xor
mov
call
cmpsb
jmp
xor
sub
das
cld
inc
jo
cld
sti
ror
bound
jecxz
inc
shlb
test
loop
sti
lea
adc
pusha
iret
repnz
adc
fsubp
gs
fmull
popl
jnp
cwtl
xor
sub
pop
push
mov
or
out
sub
movd
mov
loopne
mov
dec
sub
mov
movsb
inc
xchg
shlb
push
mull
or
addr16
sbb
jmp
stos
and
cltd
rol
pop
xchg
xor
add
jecxz
mov
or
add
mov
add
xor
dec
cli
gs
xlat
xchg
loope
mov
xor
sahf
pop
movsl
dec
out
int
cmp
sbb
movsl
jmp
push
jno
or
adc
jae
dec
ljmp
loopne
stos
push
xorl
add
jbe
imul
cld
jnp
mov
mov
pop
movsb
dec
xor
aam
jno
sbb
cmp
lods
shlb
addr16
push
adc
lahf
test
or
fists
xor
pop
idivl
pop
call
mov
push
pop
cmp
jecxz
test
mov
or
adc
mov
sbb
cmp
adc
inc
xor
sbb
sar
cmpsb
out
fcompl
push
mov
sub
into
jno
cli
push
aam
js
push
inc
mov
push
push
ror
inc
testl
xchg
sbb
jbe
fimuls
cmp
pop
pop
cmpsl
mov
and
and
pop
imul
test
clc
sete
iret
push
stos
sahf
aaa
mov
push
aas
test
das
inc
inc
adc
insl
les
rcr
fstps
sbb
xor
xchg
mov
je
in
sahf
pop
inc
aaa
mov
enter
pusha
mov
outsb
jo
xbegin
pushf
mov
jge
push
scas
fnstcw
push
js
nop
movsl
imul
and
add
jmp
aaa
mov
fwait
and
lahf
sarb
xchg
xchg
fs
pop
int
shll
movaps
pop
mov
pop
add
xor
das
insl
int3
loope
or
adc
lods
lret
adc
cmp
sub
arpl
arpl
gs
jle
adc
push
xchg
push
int
push
test
lock
cmp
orb
and
xchg
jmp
jb
add
and
loop
lods
je
adcl
xchg
fnstcw
add
lods
sub
lods
sarb
addr16
pop
add
faddl
lret
and
inc
adc
hlt
fisttps
push
adc
bound
mov
sub
test
std
sbb
mov
rcrb
in
rcr
or
xlat
imul
sub
xlat
imul
xchg
notl
cmp
adc
jo
mov
fcos
cmp
xchg
jg
into
pop
cmp
mov
sahf
imul
push
enter
testb
inc
call
insb
ret
sbb
scas
in
test
imul
xor
mov
shl
cmp
imul
mov
sbb
in
je
push
sbb
add
ds
leave
out
add
push
or
adc
jp
adc
mov
das
jle
and
leave
dec
stc
repz
inc
mov
into
sub
dec
jl
mov
inc
add
nop
fisubrl
lods
je
cltd
aaa
inc
jle
in
adc
pop
jle
les
popa
sbb
out
int
mov
hlt
ret
lds
adc
out
sub
and
xchg
fsubl
cltd
frstor
jns
cli
cs
and
fistpll
sub
std
inc
stos
cwtl
pop
into
in
jns
inc
sub
pop
sub
sbb
cmp
pop
inc
scas
mov
pop
push
aam
adc
pop
lcall
and
lret
ja
stc
and
jae
xor
scas
repz
dec
push
fwait
sub
aaa
lock
cs
lock
cmp
push
mov
and
mov
lret
dec
xchg
clc
mov
fcmovnu
ficompl
xchg
adc
bound
jo
out
movsb
shr
pop
lcall
jb
jge
mov
shlb
xchg
jne
mov
push
movsb
call
enter
mov
cmc
and
pop
mov
jbe
jae
iret
jb
mov
daa
addl
sub
scas
scas
or
mov
outsl
cmc
dec
fiadds
sub
pop
pop
cltd
scas
icebp
inc
icebp
cs
add
ss
add
cli
add
pslld
push
and
adcl
jp
xlat
fwait
jo
cmp
pop
adc
inc
imul
mov
cmpsl
lahf
add
scas
jb
sbb
cmc
xchg
jp
and
cmp
xor
pop
push
sbb
nop
mov
jae
jge
cltd
stos
pop
or
sub
cwtl
out
jnp
cmp
data16
push
subl
ss
inc
and
push
sub
cmp
add
dec
sub
testl
aaa
sahf
sub
je
loopne
int3
sahf
daa
mov
shll
fdivrl
mov
or
out
xchg
jbe
xchg
dec
jnp
sbb
cmp
dec
lds
xchg
out
outsb
dec
test
push
jae
mov
movsl
in
sub
movsl
xlat
jge
add
adc
icebp
iret
insl
lcall
jl
js
xchg
movsb
lea
sub
sbb
mov
push
push
mov
jnp
xor
add
lods
imul
or
pop
xchg
ss
iret
cmp
sbb
jno
jne
rorb
add
mov
arpl
jecxz
int3
xor
ja
add
hlt
adc
mov
dec
add
sbb
rol
and
and
jo
jns
stos
mov
scas
cld
pop
mov
in
mov
pop
mov
pop
rolb
sbb
fisttpl
sub
shr
add
adc
popf
dec
mov
xor
pop
cmc
sahf
lock
mov
push
rclb
ljmp
dec
push
insb
aas
xchg
int3
imul
or
lock
mov
adc
mov
cmp
xchg
addl
movsb
ret
shrl
cmpsl
pop
mov
enter
xor
les
or
ret
or
push
stos
pushf
gs
mov
dec
or
sub
adc
dec
jne
pop
fiaddl
pop
cltd
inc
into
sbb
cmpsb
sbb
popa
mov
sbb
push
aaa
mov
loopne
daa
rol
fisubs
adc
and
xchg
inc
jnp
es
xchg
adc
std
push
add
mov
arpl
xchg
outsl
fstpt
mov
mov
dec
test
or
lds
aaa
pop
mov
sarl
mov
ds
dec
adc
pop
jl
ret
mov
mov
sub
mov
dec
jecxz
push
pushf
fmul
insl
lods
inc
mov
int
imul
xchg
jle
bound
cwtl
mov
cwtl
or
and
and
xchg
xchg
lds
xchg
fdivr
adc
insb
pop
adc
sbb
adc
rcrl
adc
mov
mov
dec
mov
xchg
sahf
ret
iret
add
addr16
loop
aas
popa
jae
insl
push
xchg
xor
outsl
mov
sbb
mov
xchg
into
push
mov
sarb
xlat
fmuls
xor
ror
cmpsl
iret
jno
jae
and
push
fildl
pop
insl
addl
jo
loope
push
pop
hlt
rorl
sbb
test
movsb
repz
push
movsl
and
cmc
shlb
retw
inc
call
or
outsl
iret
xchg
icebp
lcall
cmp
xlat
or
inc
push
insl
or
jbe
ret
mov
pop
dec
cwtl
aam
mov
ds
and
scas
ljmp
pop
icebp
mov
sti
add
cwtl
mov
sti
ret
inc
popl
faddl
cltd
je
mov
sbb
dec
loope
lds
arpl
fdivrl
jne
int3
inc
sub
pop
andl
adc
aam
sbb
push
scas
inc
jnp
das
xor
lods
xchg
fildll
in
repz
jg
pop
aam
dec
incb
dec
mov
leave
ss
jle
cmp
and
add
mov
add
es
add
adc
sub
mov
daa
aam
test
xchg
cmp
test
jne
mov
cltd
shlb
test
leave
mov
cmpl
andl
mov
jle
out
pop
sub
nop
sbb
xor
mov
inc
js
push
adc
mov
rclb
mov
mov
mov
nop
xor
aaa
mov
lods
iret
pusha
shll
into
test
mov
int3
xor
aam
out
cmp
iret
adc
or
sbb
pop
adc
mov
ficoms
add
negb
test
movsb
sarl
mov
sub
sub
faddl
and
nop
or
scas
mov
push
cmpsb
adc
push
sti
jnp
aad
cwtl
pop
xchg
cmpb
pop
push
outsl
sti
sub
mov
adc
inc
mov
xor
adc
imul
jb
loop
push
add
pop
mov
clc
xorl
push
adc
mov
pusha
mov
inc
fucom
repnz
mov
adc
lcall
inc
add
movsl
out
enter
out
cmp
movsb
or
inc
insb
and
js
movsl
jge
pop
push
add
mov
and
fcomps
jecxz
adc
call
dec
shr
mov
adc
dec
adc
dec
push
xchg
or
push
dec
sub
jge
inc
push
or
fs
mov
in
xor
sahf
dec
fnstenv
repz
jecxz
fildl
fsub
pop
xlat
adc
test
imul
sbbb
movsb
test
addr16
test
jl
in
shr
xor
mov
inc
fwait
pop
test
cmp
inc
adc
out
pop
loop
out
aad
int3
xchg
xchg
add
push
fdivrs
ds
fisttpll
in
adc
jecxz
sub
scas
jae
push
sahf
mov
inc
pop
repz
stc
repz
pop
sbb
sbbb
test
sbb
fists
stos
xor
lret
addr16
xlat
xor
cltd
aam
xor
jae
int3
or
pop
popf
imulb
mov
scas
mov
orl
adc
push
cs
lret
lea
arpl
call
jmp
test
leave
call
mov
fsub
jle
pop
hlt
ljmp
lock
sub
in
out
scas
notb
ret
push
pop
ss
ret
inc
xchg
out
sub
adc
repnz
and
mov
jg
push
movb
dec
pop
mov
in
neg
das
loop
inc
outsb
scas
in
data16
and
out
jae
xchg
pop
test
xchg
fisubrs
cmc
adc
cmpsl
int3
cmp
ja
cmp
sub
sub
push
push
or
loopne
sub
jbe
lahf
push
or
jg
lret
sbb
xchg
fistl
jge
cmp
out
stos
add
push
cmp
ficompl
rorl
mov
sbb
sub
cltd
jb
jmp
fdivl
fcmovnb
sbb
push
call
push
adc
cmp
test
xchg
mov
dec
inc
popa
mov
jo
dec
sub
paddsw
mov
inc
dec
pop
or
push
jne
insb
cmp
push
jno
aaa
push
repz
add
lcall
stc
lea
aas
mov
jae
pop
mov
add
and
aad
fistl
sub
mov
pop
stos
aad
jmp
mov
lahf
addr16
popa
xchg
mov
test
call
inc
je
inc
jecxz
push
cmp
xor
gs
inc
fs
ret
out
sbb
pop
and
ljmp
test
xor
ret
mov
aam
testb
fisubrl
aam
jb
outsl
adc
loopne
shlb
aad
mov
jl
xor
ljmp
lds
mov
lea
xchg
fstpt
out
jecxz
fwait
inc
test
ret
popa
push
mov
add
adc
ss
popa
and
xlat
cmp
adc
sbb
shll
and
jg
lock
movsb
cmp
sub
int3
ja
sbb
mov
ficoml
push
outsb
adc
xchg
out
shr
dec
lods
int3
in
outsb
jns
addl
icebp
pop
or
jnp
or
fwait
cli
das
in
mov
xor
mov
jns
pop
leave
mov
lret
ljmp
pop
mov
xchg
ja
lea
in
mov
aaa
dec
add
mov
outsb
test
mov
fistps
cmc
inc
inc
jp
scas
jg
aad
or
cld
jae
not
jno
mov
or
pop
xor
or
popa
lret
aad
ret
inc
test
sbb
call
jmpw
mov
imul
mov
and
cmp
lret
sti
add
and
cmp
mov
hlt
pop
test
cmp
mov
inc
inc
jmp
inc
mov
mov
sbb
mov
lds
push
pop
pushl
clc
push
sbb
rcrb
arpl
dec
mov
xor
xor
movsl
adc
mov
in
dec
dec
cmp
push
and
shlb
sub
shrb
cwtl
push
lret
loopne
pop
leave
push
or
das
push
aaa
add
mov
lcall
jae
xorl
shlb
fwait
sbb
xor
test
push
test
in
inc
gs
add
int3
scas
ds
mov
push
jno
mov
les
pop
gs
cli
mov
push
mov
psllq
loop
int3
in
clc
mov
mov
int3
cmp
sbb
add
xor
cltd
addr16
add
cmp
ja
lret
sbbb
dec
and
mov
xor
test
int
adc
mov
sbb
shrb
insb
stos
mov
lret
sub
repz
dec
jl
popa
scas
xchg
iret
pop
inc
ds
push
push
adc
dec
cmpl
adc
aaa
jnp
cmp
ret
lods
push
mov
sub
push
sarl
mov
das
dec
push
arpl
in
pop
xchg
test
cs
andb
popf
adc
add
xlat
cmp
pop
adc
imul
xor
scas
leave
icebp
repz
push
lcall
xor
xchg
loopne
add
rorb
ss
mov
pop
cs
xchg
xlat
sbb
sub
pusha
xchg
test
cmpl
popf
insl
and
insb
sbb
xchg
fstl
ja
adc
lds
cmp
lock
fcompl
mov
es
in
lods
loop
jae
outsl
xchg
ja
in
call
into
cvtps2pi
mov
dec
push
jns
pop
out
and
cmp
aas
inc
rol
add
mov
out
and
xchg
xchg
out
repnz
mov
aad
push
and
xlat
xchg
pusha
lcall
leave
adc
mov
xchg
sub
aam
leave
cmp
push
aas
pop
inc
sub
fisttps
add
test
push
xchg
and
push
jg
loope
jbe
jne
and
adc
pop
cmp
icebp
lea
fmuls
lret
sub
ljmp
loopne
cmovns
dec
cmp
pop
jecxz
push
dec
jne
mov
int
int3
mov
add
jmp
loopne
imulb
std
adc
adc
sub
pushl
mul
outsl
das
jge
mov
sbb
xchg
or
imulb
cmp
mov
pop
dec
shrb
dec
mov
dec
jmp
aas
dec
ret
or
add
pop
jl
je
imul
dec
xchg
jp
adcl
sub
sbb
leave
xchg
movsl
ret
mov
inc
push
nopl
cmc
push
jne
mov
sbb
loopne
test
mov
rclb
push
in
nop
and
cli
decb
mov
addr16
add
iret
mov
push
mov
in
daa
add
dec
jne
mov
cld
pusha
ljmp
jnp
pop
call
mov
jbe
dec
dec
std
adc
rcll
and
cmc
adc
roll
dec
sub
lods
xchg
repnz
lret
dec
lret
xchg
shr
mov
mov
sarl
shlb
xor
sahf
dec
popl
jbe
aas
and
pushf
pop
subb
test
addr16
int3
inc
in
adcl
je
sti
jns
popa
in
pop
mov
mov
pusha
lock
bound
mov
xor
in
insb
data16
xor
mov
test
and
cmp
imul
add
insb
into
arpl
dec
jbe
scas
in
es
xorb
lock
mov
sahf
pop
jl
mov
enter
sub
lret
mov
jno
lea
out
and
inc
insl
mov
pop
cmp
insl
lods
vpshuflw
mov
daa
mov
xor
les
cltd
sbb
das
push
push
sub
pop
fimuls
ja
fwait
or
fildl
push
mov
mov
cmp
xchg
mov
jne
xor
std
cmpsl
stos
clc
dec
push
mov
insb
mov
mov
push
in
add
in
scas
dec
repz
lea
ret
sbb
inc
sub
mov
es
sti
cmc
in
jmp
das
mov
adc
mov
xchg
call
xor
add
mov
js
mov
loope
add
test
cmp
mov
mov
bnd
dec
add
mov
sub
jno
or
cltd
es
dec
sbb
xchg
xchg
dec
faddl
stos
sahf
mov
enter
xchg
sub
and
xchg
inc
jbe
dec
test
lea
push
push
sahf
int
or
adc
pop
cmp
adc
dec
mov
fs
lock
pop
xchg
lods
xchg
sub
pop
lret
insb
jne
aad
pushf
add
sub
fadd
xchg
push
cltd
cltd
not
adc
outsb
mov
sbb
out
push
imul
or
int
je
cs
pop
cmp
xchg
imul
jbe
lret
inc
pop
clc
pop
pop
mov
in
insl
fmull
gs
in
push
div
and
mov
sub
std
daa
ret
hlt
test
roll
imul
fadds
clc
fs
add
js
dec
dec
outsb
adc
movsl
ds
and
in
mov
xlat
int3
imul
data16
adc
scas
jle
es
dec
aaa
ljmp
jo
xchg
arpl
addb
xor
jecxz
pop
xchg
loopne
xchg
dec
push
or
divl
and
adc
fdivs
push
out
sub
or
ljmp
jl
ficoml
or
out
in
dec
push
jl
jns
xchg
push
jg
cmp
xchg
xchg
aas
daa
aas
into
bound
rcrb
add
fwait
add
aas
push
cmp
fldl
mov
ret
xor
or
or
cmp
add
mov
cmp
lret
aas
adc
mov
add
hlt
jecxz
cmp
push
cmpsb
xor
adc
rcrb
push
out
in
add
aas
int
jo
xchg
or
add
insb
jg
jmp
xchg
fisttps
mov
and
add
pop
outsb
sub
xlat
cmc
and
mov
shrd
pop
mov
mov
mov
jno
aas
push
lcall
sub
mov
pop
mov
lret
int
lea
jnp
mov
fimuls
lret
xchg
int3
leave
sub
idivl
movsb
repz
mov
decb
clc
cmp
repnz
out
test
call
jb
push
pop
js
sbb
add
idivl
jecxz
adc
xchg
mov
loop
xor
movsb
test
and
icebp
into
pop
sub
xchg
mov
icebp
mov
fcoml
inc
test
enter
pusha
sub
in
and
push
test
insl
aas
andl
sbb
xor
pop
stc
cmc
lock
jp
ljmp
xchg
inc
fwait
sti
push
dec
iret
fnsave
roll
pop
shlb
daa
popa
jl
mov
out
movsb
stos
jmp
pop
ds
mov
or
test
sub
adc
movsl
pextrw
insb
ret
pop
sbb
fs
movsl
leave
mov
inc
in
in
lea
dec
mov
mov
scas
mov
inc
xchg
sub
call
out
sub
call
push
and
sarb
fwait
cmp
scas
mov
loopne
test
mov
jne
dec
aam
xor
or
xor
xor
inc
outsl
roll
lds
mov
int
pop
out
aas
xor
imul
out
push
insl
cltd
iret
ret
sub
xchg
subl
loope
xor
mov
roll
cmc
pop
sbb
pop
mov
jge
dec
add
shll
mov
rorl
or
int3
jo
cltd
pop
mov
loope
inc
add
mov
clc
fwait
adc
fsub
pop
ljmp
mov
imul
in
adc
int
add
imul
pop
adc
mov
or
push
sti
or
sub
jns
popf
and
aam
sbb
inc
std
es
sub
jle
cmp
std
addr16
xor
push
es
and
ret
and
pop
testl
inc
cli
mov
cmp
lahf
scas
pop
fsts
stos
jb
xor
jne
mov
pushf
push
mov
inc
sbb
and
fadd
mov
nop
cmpsl
jp
dec
fwait
cmp
test
sbb
sbb
out
into
xor
sub
popf
das
or
mov
sarb
jnp
pop
shr
xor
es
xor
jle
mov
push
or
pop
inc
jne
idivb
mov
push
sub
out
pop
arpl
incb
xchg
scas
dec
jg
push
addr16
fwait
sbb
cs
fldl
xor
xchg
push
out
push
push
inc
xchg
outsl
cmp
lahf
dec
loopne
sar
out
xchg
xchg
xchg
in
and
pop
jno
pop
cltd
mov
fwait
jo
push
pop
jp
mov
sub
ret
jecxz
xchg
scas
xor
dec
sub
rclb
inc
push
pop
mov
and
in
sbb
das
rcll
add
and
jp
mov
ds
in
mov
fidivs
jmp
imul
leave
jno
shrl
xchg
pushf
popf
sti
mov
out
or
popf
and
ja
push
pop
ret
scas
loopne
jbe
repnz
popf
hlt
or
gs
lods
xor
dec
add
int
outsl
adc
jnp
push
or
pop
fstl
sbb
add
in
add
push
test
bound
add
stos
lcall
push
jmp
mov
and
ret
mov
in
mov
ss
insb
mov
jbe
cmp
xor
pop
or
mov
out
and
jo,pt
icebp
xchg
push
push
and
mov
insl
daa
movb
scas
ret
pop
mov
lods
rcrl
int
ss
lret
push
cmp
xor
cwtl
rorl
xlat
adcl
sub
les
or
xchg
or
mov
jg
xor
pop
mov
jnp
mov
test
pushf
mov
dec
sbb
push
fisttps
add
fdivr
and
int
mov
inc
rcr
xchg
inc
cmp
push
pop
adc
add
or
pop
add
aad
cli
sub
inc
pushf
sub
lret
insl
shrb
adc
xor
push
add
xchg
into
pop
in
inc
mov
jno
lcall
jns
or
sub
pop
add
ror
mov
int
imull
movsb
pop
jmp
fstp
jne
jecxz
xchg
or
aad
mov
jg
mov
jg
mov
stc
lcall
lea
jmp
sub
adc
in
push
cli
mov
repnz
mul
cmpsb
sbb
adc
push
mov
cs
repnz
outsl
jp
fmulp
in
in
enter
mov
je
or
adc
dec
roll
test
adc
ljmp
inc
pop
xchg
push
or
push
fdivl
dec
pop
cli
mov
in
es
pop
repz
fwait
add
pop
mov
jl
in
lea
shlb
lcall
cltd
ret
adc
push
lahf
xor
test
add
cmpsb
and
add
js
sahf
or
loopne
xchg
jl
out
popa
nop
xor
notl
les
test
pop
call
in
daa
cmpsl
push
dec
dec
xchg
in
push
pop
outsb
int3
scas
sbb
inc
push
mov
add
gs
lcall
repz
push
daa
iret
lods
stc
and
push
popa
stc
das
insl
mov
jmp
fwait
cmpb
add
sbb
int3
call
lahf
pusha
jno
mov
imull
add
scas
jo
repz
inc
sub
dec
mov
jmp
push
sub
cmp
lock
and
outsl
sub
push
and
mov
stc
or
jl
jmp
push
pusha
insl
xchg
xchg
popf
mov
mov
sti
cmp
mov
dec
andb
mov
or
ret
std
pop
icebp
ret
mov
loop
outsb
cltd
jno
mov
pushf
pop
outsl
push
cwtl
push
pop
sub
jno
dec
inc
insl
jbe
lret
adc
cmp
push
mov
inc
xchg
mov
and
aad
push
fs
jnp
mov
xor
out
or
cmp
mov
inc
mov
test
xlat
add
push
roll
test
adc
xchg
sub
test
js
sbb
pop
and
fucomip
int
out
mov
dec
fcom
arpl
aam
push
ficompl
ss
shrl
cmp
std
cmp
or
test
adc
xchg
mov
add
xchg
je
mov
push
mov
insb
add
popf
ds
ja
out
es
xor
negl
fildl
cmp
test
mov
nop
cmc
cmp
mov
aas
and
leave
test
lock
push
push
xor
cmp
mov
cld
mov
pop
cmp
jle
iret
mov
push
push
stos
jnp
pop
cmp
fisubl
shlb
xchg
mov
mov
lods
add
jnp
clc
xor
movsb
cli
push
and
sub
popa
adcl
push
dec
push
getsec
dec
popa
or
pusha
pop
jno
pop
pop
mov
mov
xchg
sub
lret
cwtl
rolb
fcmovnbe
lcall
movsl
lods
std
fnsave
daa
cmp
inc
sbb
add
adc
pushf
xchg
das
stc
pop
push
ds
popl
mov
pop
sbb
mov
orl
pop
adc
jnp
cs
cli
stc
aaa
test
test
stos
xchg
out
test
aam
inc
jno
jl
push
sub
fs
sbb
jb
pop
cltd
repnz
lea
inc
cld
dec
add
adc
pop
push
gs
stos
jl
fisttps
dec
adc
cwtl
push
inc
out
ss
icebp
xchg
iret
sub
mov
sub
xlat
pop
mov
loop
nop
repnz
jnp
cmp
jbe
and
ret
lret
lds
adc
test
in
scas
mov
pop
mov
repz
mov
cmp
push
lahf
xor
mov
lret
stos
sbb
decl
rcll
into
cmp
aam
sub
adc
outsl
pop
imul
lea
push
xorl
inc
into
stc
fisubrs
mov
inc
jns
fcoml
popa
das
adc
fildll
inc
pop
sbb
fsubs
popa
stc
sbbb
cs
lea
ficomps
mov
jg
subl
out
shl
stos
sub
or
sub
repz
std
pop
xchg
mov
mov
and
mov
sbb
jecxz
xor
jnp
clc
ret
mov
mov
jp
into
loopne
in
fs
aaa
mov
sub
rolb
lock
mov
ret
sar
mov
fs
xchg
cmovbe
adc
dec
mov
mov
inc
stc
xor
aaa
bound
dec
popa
mov
orb
push
mov
adc
mov
nop
jmp
push
stos
sub
push
push
jb
aad
mov
stos
xchg
mulb
bound
jno
aaa
mov
in
push
arpl
dec
repz
mov
popf
mov
pusha
and
mov
movsb
mov
leave
add
iret
in
pusha
push
dec
lahf
inc
das
fisttpl
fsubl
add
test
push
test
sub
dec
xchg
xor
mov
in
insb
sub
lds
mov
jae
push
mov
add
add
mov
sub
xchg
sbb
enter
mov
cmpsl
jp
out
inc
test
jl
sub
inc
dec
leave
iret
cmp
jmp
cwtl
add
jbe
mov
mov
xlat
je
in
clc
add
or
pop
in
push
add
add
mov
cli
fucomip
sub
xchg
loop
out
mov
popf
mov
les
push
fisubs
movsl
and
push
push
cmp
or
or
mov
test
jo
lods
enter
jmp
pop
pop
mov
rclb
lea
dec
or
psrlq
sbb
lret
xor
hlt
inc
mov
adc
and
sarb
mov
dec
xchg
adc
dec
dec
adc
xor
add
popf
fldl
aad
and
icebp
jge
xlat
pop
xchg
push
lods
into
xchg
loopne
es
daa
lock
adc
cmpsb
jno
mov
mull
stc
sbb
push
adc
add
jb
addr16
out
jnp
stos
mov
test
and
sbb
push
xlat
or
out
fincstp
and
mov
xchg
xor
push
adc
pusha
inc
fs
xchg
nop
inc
aad
xor
das
lds
cmp
xor
fwait
or
dec
je
mov
sub
stc
mov
and
iret
bound
jb
mov
hlt
add
mov
mul
add
subb
movsl
mov
test
outsb
inc
adc
sbb
push
out
mov
push
inc
rclb
les
push
ret
sub
and
jne
sub
popa
xor
mov
or
jmp
jb
loopne
add
sbb
pop
fistpl
aad
roll
or
ret
adc
mov
fstpl
or
sti
jmp
or
push
dec
cmpsl
dec
jne
arpl
addr16
orl
call
out
jo
sub
sbb
fistpll
paddb
test
or
pop
fwait
gs
inc
push
pop
mov
or
sub
cmp
or
rcl
pop
dec
fnsave
dec
push
cmp
les
fsubs
enter
arpl
sbb
mov
aad
push
lcall
mov
mov
cs
lea
jns
or
push
repz
in
aaa
push
stc
fs
lods
mov
loop
sub
push
mov
push
xchg
xor
sub
gs
jle
loopne
xchg
jge
and
mov
imul
scas
xchg
cmpsb
dec
lods
xchg
dec
push
dec
daa
loope
in
jno
cwtl
pop
addb
int3
mov
mov
in
sahf
outsl
lcall
lods
out
mov
xchg
out
or
pop
mov
mov
in
subb
pop
gs
inc
xlat
mov
test
pop
cs
scas
fs
jo
call
insl
sub
fdivs
jns
rolb
in
jbe
lcall
mov
and
pop
lret
jecxz
mov
incb
std
data16
ss
xchg
int3
aaa
rdtsc
faddl
std
dec
movd
cmpsl
mov
and
fistpll
mov
ret
in
cmp
jl
lock
arpl
add
dec
add
fldcw
push
les
sbb
adc
push
xlat
sahf
sub
je
mov
and
cltd
sbb
lcall
dec
iret
jge
jns
inc
fiaddl
in
jmp
mov
push
insl
popf
insl
out
pop
adc
iret
out
xchg
inc
mov
pop
fsub
push
push
adc
mov
lcall
push
mov
jno
es
les
fistpl
rorb
mov
jmp
jg
mov
and
loopne
add
xchg
or
das
mov
rolb
mov
inc
sahf
sti
mov
popf
les
add
out
xor
cmp
pop
or
repz
mov
pop
add
movsb
sbb
shrl
xor
cld
xchg
mov
test
clc
popa
push
sub
shlb
std
dec
lcall
xor
adc
cltd
xchg
sub
outsb
loop
mov
jbe
out
das
or
shrb
js
iret
push
fnstenv
sbb
fisubrl
test
cmpsl
cs
dec
jg
or
or
gs
aam
push
xor
hlt
pop
sahf
cmp
fidivs
adc
cmc
jmp
fwait
dec
push
adc
stos
xchg
int3
inc
mov
int3
jg
out
adc
loope
imul
mov
fsts
mov
mov
xchg
outsb
xchg
mov
pop
mov
xlat
aad
ret
les
xchg
in
and
scas
das
mull
int3
aam
add
mov
add
das
mov
mov
mov
xlat
je
test
repnz
testb
lcall
push
lret
shll
lea
outsl
and
pop
insb
loope
lock
mov
pop
roll
or
pop
jmp
rorl
push
push
aad
lods
dec
out
xchg
mov
test
stos
jle
jo
cmp
jge
jmp
sub
andb
ds
xor
cltd
fdivrs
lock
lds
into
mov
mov
shr
pop
sbb
mov
push
pop
sub
sub
jb
loopne
cmp
push
ljmp
push
jmp
lcall
std
aad
aad
pushf
fcmovb
mov
popl
jb
daa
ret
es
mov
cmpl
xchg
lcall
sbb
mov
std
loop
nop
jmp
adc
subl
ja
sarb
aaa
sbb
and
cmc
sub
xor
movsl
cmp
cmp
adc
je
das
add
push
xor
xor
lods
or
repz
cs
std
loopne
sub
jns
lds
mov
into
jnp
ljmp
xchg
aas
mov
jnp
loop
test
lea
and
cmp
xor
vpaddsb
mov
pusha
add
imul
ss
stc
fsubr
sbb
mov
add
lret
jle
pop
mov
push
fadds
sub
cmp
cld
repnz
scas
or
jae
sbb
cmovp
jno
adc
sbb
or
fsubr
sbb
push
sbb
xor
mov
cmc
cltd
lods
cmp
bnd
imul
movb
cmp
in
fs
mov
mov
mov
int3
rol
mov
xorb
in
call
aas
cwtl
sub
les
and
outsb
in
push
frstor
incl
arpl
pop
push
push
adc
ja
das
dec
push
mov
mov
inc
shrl
inc
cmpsl
or
xor
outsb
cld
xor
sahf
or
daa
and
push
jo
sub
out
test
sbb
xchg
popf
popa
int3
jmp
inc
adc
idiv
push
jmp
std
cld
daa
insl
into
dec
mov
xor
xor
sahf
push
or
inc
sbb
push
shrb
jo
add
fnstcw
push
mov
sbb
mov
scas
jbe
xlat
jns
jmp
pusha
and
outsl
outsb
inc
negl
pushf
lcall
dec
das
pusha
adc
bound
stos
outsb
mov
xchg
mov
mov
or
pop
sbb
dec
mov
les
into
mov
clc
int
xchg
push
stos
mov
mov
jae
pop
arpl
cmpsb
adc
fistpll
mov
xor
aad
add
and
mov
mov
xchg
out
mov
xchg
lcall
cltd
inc
jg
jp
mov
inc
rclb
cld
fcoms
pop
es
xchg
mov
hlt
dec
mov
mov
std
or
push
in
sbb
aas
ds
add
mov
adc
addl
test
enter
mov
push
dec
lret
fsts
mov
fisubrs
arpl
mov
fstp
and
adc
and
sbb
fwait
dec
ljmp
out
rorl
shrb
mov
add
xor
sbb
xchg
jo
pop
push
push
mov
xchg
dec
js
jmp
add
stos
imul
mov
pop
lea
fisubrl
push
fisubrs
dec
mov
test
adc
mov
sub
bound
jl
xor
or
push
jl
loope
pop
xchg
jbe
cmpsl
jns
and
stos
xchg
and
divps
lcall
insb
add
cwtl
cmpsl
shlb
sub
mov
dec
outsb
push
inc
inc
cmpsb
pushf
inc
sub
sub
pop
and
jns
fcomi
sub
loop
mov
stos
inc
mov
sbb
stc
jne
jecxz
pop
pop
sbb
inc
mov
daa
fdivs
or
adc
mov
sbb
das
nop
mov
or
mov
mov
cwtl
jno
insl
inc
mov
jmp
push
cmp
push
stc
adc
jp
cmp
pop
out
jl
jmp
aaa
das
adc
sbb
xchg
ljmp
insb
in
dec
cmp
mov
sbb
rcrl
sbb
inc
or
popa
das
sub
and
lahf
icebp
pusha
dec
sub
test
ret
xor
or
shll
popa
mov
pop
jg
cmp
adc
mov
les
leave
dec
adc
div
popf
xchg
and
mov
push
and
cmp
leave
or
lds
or
inc
pop
cmpsb
xlat
fwait
enter
stos
dec
leave
popa
mov
cmp
dec
sub
sahf
scas
mov
cmp
push
imul
shlb
adc
in
sbb
and
and
lret
aam
fidivs
pop
cltd
das
xchg
nop
ffree
stc
imul
inc
test
push
out
jmp
sbb
or
mov
lcall
inc
cltd
int3
cmp
adc
push
cmpsb
cmp
mov
leave
test
and
xor
or
add
push
or
ret
mov
pop
outsb
xlat
sahf
push
add
fnstsw
lods
jge
loope
mov
ds
mov
iret
lock
xchg
push
not
and
push
mov
addr16
and
xchg
imul
out
cli
lods
push
hlt
and
aaa
cmp
xor
and
test
bound
push
xchg
xor
pop
shll
inc
sbb
hlt
inc
fdivs
movsb
mov
pop
jne
loope
dec
les
movsl
sbb
call
mov
fs
sub
idivl
lods
mov
mov
sub
lock
test
das
daa
mov
je
ret
xor
xor
arpl
outsl
repnz
adc
call
push
pop
and
fsubs
lea
rclb
pop
inc
inc
hlt
fcmove
shll
lods
add
cmp
sub
cmp
adc
loope
daa
inc
testl
int3
shll
cwtl
mov
jecxz
jno
pop
sahf
add
cmpsb
stos
movl
imul
stos
clc
jno
push
enter
pop
call
cmpsl
insl
jbe
xor
inc
xchg
aad
sub
movsl
outsl
arpl
fadds
push
call
dec
insb
sub
data16
dec
enter
out
cmc
or
and
nop
xchg
rcr
or
adc
adc
mov
dec
imul
mov
add
cmpl
fcmovnbe
in
int
pushf
js
ljmp
fstpt
adc
xlat
loop
fwait
or
in
adc
sbb
sbb
or
aam
popf
fiadds
cmp
push
mov
push
enter
adc
xor
push
cs
sbb
sbb
scas
and
mov
movsb
sarl
push
and
jno
jl
lods
fwait
inc
in
ret
xlat
adc
push
pop
cmpsl
cmp
mov
sahf
cmp
into
aad
push
ffreep
pushf
add
and
xchg
lret
in
sbb
insl
adc
lods
bound
test
add
push
lods
and
pop
aaa
or
ret
pop
movsl
mov
push
loope
jmp
and
pushl
jp
jo
and
lds
dec
shll
push
movsb
in
insb
cmpsb
dec
sbb
add
sti
mov
repnz
adc
lcall
stc
cltd
pop
cmp
insl
lcall
adc
mov
scas
inc
adc
inc
xchg
es
xchg
into
pop
cli
dec
jbe
test
out
mov
xchg
add
sbb
movsl
mov
into
jns
loop
cmpsl
lahf
ljmp
or
pop
inc
mov
jl
pop
nop
adc
stos
in
xchg
out
int3
mov
loop
mov
aad
repnz
push
fstl
dec
xchg
lock
push
mov
into
mov
push
roll
imul
mov
das
in
movsb
repz
pop
sub
in
lret
mov
in
jge
mov
pushf
or
hlt
insl
push
scas
dec
mov
loop
push
fmuls
inc
adc
and
or
push
movsb
fstpt
jge
das
les
add
push
mov
cld
cld
jbe
dec
sbb
out
clc
xor
sbb
in
cmp
cmp
cltd
pop
and
push
insl
xor
fadds
and
outsb
popf
or
add
mov
dec
fcomp
pop
movsb
leave
outsb
call
jle
xchg
fldl
popa
push
arpl
pop
jnp
popf
pop
pusha
scas
leave
leave
and
cmpsb
or
out
fwait
into
rorb
jns
movsb
push
mov
mov
mov
cmc
loope
sbb
lds
add
loope
aaa
shlb
push
jge
inc
insl
divl
xchg
cmpsl
int3
dec
outsb
sarl
shrb
push
cmc
ljmp
lock
mov
and
fimull
mov
add
mov
in
bound
lds
jge
js
loop
pop
repz
sub
and
rcll
inc
rolb
and
cmp
jmp
aam
movsl
fwait
popa
or
xchg
fiadds
sbb
xchg
inc
add
mov
out
pop
outsl
and
and
cltd
xchg
push
jl
xor
jae
inc
xchg
stos
pop
sub
std
shr
xchg
lods
std
popf
fcompl
xor
aas
cmp
xor
repnz
aaa
inc
stc
mov
pop
ss
pop
test
aaa
lahf
cmp
cmp
dec
fs
adc
sub
jmp
adc
out
inc
in
mov
sbb
movsl
cmp
fiadds
stc
xor
push
imul
addr16
aaa
mov
jl
ret
les
dec
push
adc
iret
xor
sarl
movsl
dec
addr16
shlb
outsb
dec
test
xor
nop
sbb
xor
inc
and
cwtl
rorb
pop
pop
and
cld
fwait
inc
jmp
mov
mov
xorb
popf
add
sbb
mov
pop
add
add
mov
lret
or
xor
xchg
ret
xchg
xor
mov
lods
dec
lret
mov
in
inc
loop
fstl
aas
ficomps
cmpsl
shrb
xlat
movsl
push
xor
adc
xadd
aas
shrb
jbe
fimull
lahf
sbb
mov
xor
mov
lret
adc
movsl
and
pop
pusha
jp
fs
lods
jecxz
xchg
int
out
jle
push
xchg
or
pop
ds
pusha
jbe
fisubrs
outsl
fnsave
inc
mov
dec
lret
lods
jo
std
push
mov
jne
dec
mov
sbb
xor
ds
add
outsb
fcoml
xorb
dec
test
sub
dec
jge
loop
jge
test
int3
mov
faddp
xorl
fcomp
push
or
and
hlt
mov
fidivrl
sti
movsl
and
cmc
jbe
push
in
jno
fnstcw
into
push
inc
in
idivl
mov
mov
ss
inc
popa
sub
dec
mov
mov
rorb
aam
cmp
loop
and
dec
popa
pop
push
or
pop
push
fiadds
rcr
mov
std
mov
pushf
dec
jae
adc
mov
inc
inc
cs
mov
stos
sub
scas
add
push
cmp
add
adc
out
pop
mov
cmp
mov
movsl
mov
and
inc
mov
jbe
adc
faddl
adc
or
sti
inc
inc
jmp
subl
call
mov
or
mov
dec
sbb
mov
adc
mov
push
int3
or
test
add
js
inc
cwtl
inc
div
jne
imul
es
jecxz
or
and
pop
xchg
pop
lds
daa
filds
add
mov
adc
pop
repz
inc
xlat
test
mov
fdivs
adc
test
out
imul
int3
jbe
mov
popa
and
pushf
mov
push
lods
ljmp
icebp
mov
sub
ret
sub
pop
and
or
popf
clc
mov
jecxz
ds
stc
out
nop
inc
mov
sbb
xchg
popa
add
sub
sti
xchg
xchg
sub
xor
sub
inc
je
shll
nop
loope
cmpsl
mov
lea
scas
xor
movsl
lock
jg
dec
jmp
or
cmp
push
je
inc
xor
push
lret
mov
xor
subl
jmp
das
inc
or
and
cwtl
push
lds
pop
loope
dec
mov
loop
ds
lret
or
cwtl
ret
iret
mov
test
mov
fimull
adc
fstpl
lret
aas
push
les
call
jecxz
movsb
lods
jmp
mov
ret
dec
jle
fildll
pop
arpl
xchg
pop
repnz
or
into
mov
sbb
test
add
inc
dec
inc
add
pop
push
xchg
lret
add
cmpsb
stos
rorb
call
int3
insb
aam
mov
sbb
loop
cmp
push
ja
xchg
inc
aad
pop
sti
iret
inc
adc
xor
push
data16
addr16
lret
clc
mov
cmp
sub
leave
cmovg
push
cmp
loopne
mov
dec
sub
out
cmpsl
dec
out
sbb
adc
sbbb
mov
mov
and
xchg
xlat
jne
lock
out
xchg
jl
mov
pop
enter
pop
rcr
mov
int
ret
pop
cmp
hlt
jmp
adc
cltd
outsl
cltd
push
mov
cltd
add
outsl
outsl
arpl
js
call
cmp
cltd
sub
xor
cmp
fidivrl
daa
mov
or
mov
inc
sti
pop
in
sahf
repnz
in
mov
testb
push
or
and
mov
mov
ret
les
pop
inc
adc
adc
movsb
adc
rcr
bound
adc
jp
xchg
fstl
insb
test
imul
inc
sbb
mov
cmp
mov
out
lods
mov
fcomps
dec
sub
iret
mov
xor
loope
test
fimuls
lods
mov
push
divb
lret
ljmp
cs
clc
loop
int
cltd
imul
iret
stos
loop
lods
push
jo
xor
movsb
lods
inc
mov
adc
popl
hlt
xchg
xchg
ds
out
out
fcomi
loop
xor
mov
cwtl
mov
inc
pop
fs
gs
lret
adc
mov
sti
mov
push
add
add
sarb
insl
push
push
test
test
xor
leave
aam
sub
push
out
aad
push
icebp
add
imul
cmp
add
jo
and
jg
push
push
lea
fwait
pushf
repz
xchg
xchg
fistpll
mov
push
mov
std
push
in
sub
mov
xor
imul
out
jo
cmp
push
jae
out
stos
inc
outsl
mov
subl
out
xchg
decb
into
cmp
sbb
dec
cld
add
jle
mov
inc
ror
mov
jo
arpl
sbb
jo
call
sahf
rcrb
mov
scas
insl
test
sub
adc
pop
fldcw
sub
mov
fidivl
mov
xchg
jp
pop
int3
imul
repnz
jb
lea
and
jecxz
rclb
arpl
icebp
mov
inc
mov
sbb
mov
call
xlat
aas
push
test
cli
ret
cmp
lods
xchg
lcall
stos
cld
jmp
outsb
lea
ds
pop
faddp
pop
cmp
xor
je
repnz
dec
int
lahf
adc
cli
aam
insl
sbb
lods
jbe
scas
jb
xor
sahf
mov
sbb
and
jg
xor
arpl
int3
jl
and
dec
repnz
in
push
je
addr16
stos
sbb
mov
es
rcll
mov
sub
ljmp
outsb
ds
mov
imul
sahf
pop
inc
inc
pop
jnp
jae
cltd
popf
jae
fdivrs
push
arpl
fisttpll
pop
pop
mov
mov
sbb
std
mov
and
cmp
dec
out
mov
arpl
jnp
ljmp
imul
fs
xor
fidivs
sub
pop
pop
jl
vpcmpeqd
push
popa
inc
pop
sarl
jge
inc
enter
mov
scas
std
and
lret
jns
add
sub
incl
enter
push
xchg
clc
push
mov
lret
ljmp
sub
shrl
pushf
xchg
push
clc
andl
cld
xchg
fs
fsub
js
inc
pop
mov
adc
es
sbb
add
mov
xor
cmpsb
dec
adc
push
and
mov
lods
hlt
inc
sarl
test
cli
lock
and
fisubrs
ss
push
insb
push
andb
jae
popa
push
sbb
icebp
test
cmp
jne
jae
pop
arpl
int3
push
inc
fwait
aaa
dec
jb
add
imul
cmc
fiaddl
and
jne
mov
insb
data16
test
sub
sahf
sub
push
hlt
push
mov
insb
test
lods
fcomip
pop
adc
std
and
push
ret
in
jo
notb
pop
jp
loope
insb
lret
ret
ficoms
cmp
cld
leave
fxtract
pop
jl
outsb
xchg
or
jecxz
mov
arpl
daa
mov
fmuls
aam
out
add
std
jne
mov
mov
xor
pushf
aam
push
mov
cmp
adc
push
mov
push
ret
sbb
jle
or
lods
out
movsb
sub
add
cld
out
sbb
lock
sbb
or
xchg
cld
dec
mov
cmc
mov
push
xchg
ljmp
js
mov
fstps
sbb
mov
add
out
cltd
mov
xchg
inc
xor
add
aas
fstl
repz
fnstsw
repnz
pop
push
pop
ljmp
push
stos
mov
mov
add
in
call
pop
les
fsubrs
int3
jae
pusha
sbb
stos
xor
popf
rcrb
movsb
adc
adc
push
sar
and
aas
lret
adc
flds
in
add
fdivs
sarl
mov
mov
and
add
andb
push
jno
and
popa
sbb
push
inc
and
sub
dec
fsubl
adc
fimuls
or
fstpl
outsb
sbb
pop
xchg
lds
std
clc
fmull
jle
sbb
inc
jle
lea
aad
inc
imul
bound
arpl
cld
mov
mov
outsb
push
fsubl
pop
cld
dec
js
sub
xchg
add
stc
dec
jg
cld
loope
and
aad
jle
cmp
or
sahf
mov
mov
and
push
xchg
pop
cmc
imul
cmp
inc
sub
jge
push
lods
mov
xorl
repz
sub
pop
fcomps
adc
xchg
ljmp
test
and
aaa
outsl
ss
mov
fwait
and
xchg
and
pop
in
push
shll
pusha
imulb
jno
loopne
shl
rolb
test
pop
movl
mov
xor
adc
dec
push
push
ds
mov
cld
ja
rcrb
pop
sbb
cltd
add
in
mov
movb
jne
push
mov
xchg
fdivs
inc
fbld
scas
test
sub
xchg
repz
iret
in
int3
dec
mov
inc
cltd
pop
sbb
jo
xor
stos
add
mov
xchg
lret
call
sbb
stos
cmp
outsl
mov
lret
pop
push
jle
pusha
inc
cld
scas
sti
xchg
xor
lret
add
aad
test
push
adc
jmp
dec
jle
add
sbb
test
xchg
xorl
orl
clc
dec
scas
outsb
test
push
mov
dec
stos
push
adc
add
test
out
outsl
sub
inc
inc
aad
stc
cmp
dec
repnz
clc
or
andb
movsb
mov
cmp
lret
xchg
dec
sahf
add
es
imul
cmp
pop
xchg
pop
adc
push
dec
jl
shlb
mov
pop
sbb
xor
ficompl
arpl
stc
lea
test
xchg
testb
repnz
adc
mov
sbb
pop
mov
xor
xchg
inc
in
sbbl
rclb
loope
enter
fiadds
rorl
push
pop
stos
inc
xchg
sub
rcll
test
int3
cmp
and
xchg
sub
lahf
dec
pop
ret
dec
daa
mov
add
js
dec
out
jecxz
sbb
pop
sub
mov
xor
sub
in
mov
pushf
and
push
fstp
push
mov
adc
fcoml
and
popf
mov
cld
sti
outsl
cs
lret
call
clc
mov
test
mov
out
mov
push
mov
add
xchg
push
aas
test
stos
lock
or
xor
movsb
cmp
pop
mov
mov
test
fsts
outsb
push
push
lret
stc
adc
leave
xchg
pop
fs
out
jnp
popa
sub
push
fwait
das
cmpsb
xchg
bound
lds
mov
movsb
mov
fxch
push
loopne
inc
or
dec
or
mov
in
popa
popa
jne
pop
pop
or
mov
push
testl
dec
test
cltd
jns
mov
scas
pop
daa
cmp
pushf
lcall
adc
mul
scas
inc
add
push
pop
add
mov
xor
jmp
jae
add
out
cmpsl
jno
repnz
pop
lret
cwtl
js
xor
inc
subb
mov
cmp
xlat
push
inc
movsl
mov
fcmovbe
pop
adc
loopne
std
scas
divb
fimull
mov
xchg
and
jb
je
mov
stc
daa
adc
push
lds
mov
jne
bound
fcom
in
mov
repz
dec
cmp
sub
and
ds
filds
ja
js,pt
mov
pop
fidivs
fldcw
loopne
pusha
jnp
es
pop
faddl
sub
int3
jae
push
dec
sub
xchg
in
pop
mov
xchg
cmp
push
lcall
mov
sbb
fisttpl
sub
jmp
push
or
mov
lods
inc
cmp
mov
mov
sbb
adc
adc
les
lcall
fsub
incb
stos
mov
sub
into
inc
or
pusha
out
test
jbe
lea
fidivrl
stos
jmp
mov
jne
js
lock
ja
jg
in
or
push
scas
data16
add
push
into
dec
mov
sahf
xchg
mov
leave
xor
push
lock
xor
push
jnp
xchg
addr16
ljmp
pushf
pop
pusha
jp
lods
mov
outsb
xchg
mov
push
or
mov
sbb
mov
add
std
pop
jae
pop
cmp
or
in
mov
and
sahf
lea
add
push
sahf
add
or
clc
imul
sti
pop
sbb
iret
cmp
iret
jno
pop
sub
xchg
sbb
insl
jb
fidivs
cmpsb
fwait
inc
adc
lock
mov
mulb
idivb
add
or
pop
jecxz
repz
add
insl
sub
mov
add
lods
push
pushf
jge
or
lea
dec
mov
push
cmp
aas
push
xlat
add
pop
inc
int
inc
mov
add
and
daa
icebp
loopne
insl
arpl
add
mov
or
xor
and
lret
dec
mov
mov
dec
sbb
dec
fiaddl
jp
mov
std
jecxz
push
ljmp
xor
pop
addr16
inc
push
xchg
xor
iret
push
jl
repz
mov
mov
add
cmp
adc
lods
cltd
nop
jp
add
mov
inc
jp
lods
daa
sub
sub
jb
lds
push
loope
in
mov
pop
push
mov
sbb
jmp
fsubrl
pop
clc
fidivrl
aad
lods
es
cmp
pushf
lds
jl
popa
add
push
pop
test
call
sub
fistl
outsl
cmp
push
out
inc
mov
testl
pop
pop
in
test
dec
inc
testl
aad
and
aaa
push
loop
popa
sbb
mov
xor
popf
inc
and
or
pop
roll
std
or
cmpl
in
retw
push
mov
pop
lahf
xor
push
sbb
cwtl
mov
add
gs
mov
sahf
jb
push
mov
shlb
jbe
cmp
sub
inc
test
mov
aad
xor
ja
insb
popa
int3
xchg
xchg
icebp
xchg
cli
push
push
pop
int3
je
push
aas
clc
push
cmpb
mov
push
ljmp
push
int3
loopne,pt
jl
sarl
mov
jnp
out
push
ds
rcrl
push
xchg
dec
ja
inc
scas
cmp
repz
inc
add
jmp
adc
adc
pop
aas
into
inc
and
out
cmpsl
dec
mov
cwtl
jbe
repz
scas
push
pushf
jl
popf
mov
or
xchg
inc
sbb
pop
hlt
sti
cmpsb
int3
cmp
ss
mov
lahf
dec
push
gs
addb
loop
pop
ljmp
and
jae
arpl
jns
popa
mov
insl
cmpb
repnz
pop
dec
adc
repz
fwait
xchg
ud0
lret
mov
imul
mov
scas
add
stc
in
out
adc
movsb
xor
dec
shr
mov
inc
jecxz
testl
sub
stc
xor
mov
jge
jns
in
fs
std
mov
lea
cltd
in
mov
loop
xchg
push
call
push
jle
dec
adc
cmp
mov
inc
es
jno
flds
push
shlb
mov
xchg
test
out
lods
and
push
ret
cmpsb
shl
daa
repnz
mov
dec
cltd
clc
mov
daa
add
shr
mov
xorl
push
jge
mov
shll
sbb
dec
sbb
out
mov
test
jmp
imull
in
and
dec
repnz
pop
add
mov
dec
scas
xor
cmp
push
mov
in
cwtl
les
xchg
or
sub
xor
scas
mov
pop
pop
ljmp
xor
mov
je
dec
hlt
push
iret
adc
cltd
dec
fildll
pop
pop
sbb
xlat
mov
arpl
sub
jle
and
popf
xor
xor
notb
mov
aaa
adc
test
dec
inc
mov
inc
int
cmp
int3
lods
or
mov
xor
loope
ret
push
add
sbb
aam
inc
lods
mov
mov
popw
sub
mov
out
pop
and
mov
push
in
sub
clc
sti
jb
rcl
mov
mov
pop
push
rolb
mov
jp
lock
ret
cmp
test
pop
push
jmp
loopne
sub
loopne
test
push
sbb
cmpsl
mov
push
dec
fs
dec
inc
lock
test
inc
xchg
push
push
jge
pop
out
cmp
mov
push
pushf
nop
mov
mov
push
rclb
rcll
mov
mov
xor
or
inc
fdivs
les
xchg
push
xchg
movsb
inc
and
xchg
clc
adc
pusha
mov
cmp
bound
andb
xchg
jnp,pn
test
jl
sub
push
and
out
dec
cmp
adc
lcall
mov
mov
dec
lret
sub
cld
int
test
andb
ja
adc
push
rol
les
ljmp
adcb
out
jmp
ficomps
mov
xchg
mov
mov
mov
lcall
or
popa
std
mov
jecxz
retw
ret
sarb
into
xlat
dec
jbe
addr16
sbb
dec
repnz
cs
push
push
dec
mov
stc
insl
leave
into
push
data16
cmp
arpl
sahf
cmc
push
mov
ja
mov
popf
adc
hlt
pop
pop
in
je
insl
xlat
lret
mov
lret
test
fs
ljmp
stos
xchg
aaa
mov
mov
mov
cwtl
sbb
add
ljmp
mov
jno
or
or
mov
sarl
sub
in
xchg
sbbl
sub
xor
jl
outsl
in
mov
inc
push
sbb
loop
lds
clc
sub
imul
push
sbb
test
jmp
cs
sub
js
pop
sti
in
sbb
mov
sub
in
xlat
jb
mov
ja
inc
inc
sbb
fdivp
mov
push
pop
mov
mov
cmp
sub
stc
js
int
bound
lods
cwtl
int3
rcrl
jbe
mov
int
das
lcall
pop
stc
cmp
push
das
loope
sidtl
cmp
hlt
les
or
aaa
cmpsb
and
pop
aaa
insb
dec
and
push
push
lcall
jns
pop
pop
repz
mov
push
nop
addl
mov
xor
mov
xchg
jp
xor
lock
js
inc
cld
addr16
fcompl
adc
ljmp
sbb
add
dec
sub
xorb
sti
int3
jg
sub
mov
push
je
loopne
lahf
ds
push
gs
mov
shll
cmp
dec
cmpsb
lods
out
adcl
es
push
xor
dec
sub
pop
inc
mov
jb
loope
xor
lahf
jb
loope
leave
sub
and
dec
bound
inc
ljmp
mov
insl
ljmp
loopne
dec
push
imul
sbb
push
addr16
xchg
test
dec
xchg
out
xor
and
out
and
push
cli
aaa
jnp
dec
pop
das
in
xor
dec
and
ljmp
mov
sub
sub
orl
test
inc
inc
fmul
sbb
sahf
insb
fwait
cmp
stos
pop
dec
add
icebp
sbb
inc
into
mov
jmp
cmova
scas
pusha
rclb
add
sbb
nop
sbb
outsl
jae
into
jno
dec
and
lds
sbb
mov
enter
push
mov
jae
sub
test
sarb
inc
cld
dec
js
push
leave
mov
add
cld
push
xor
xchg
add
xchg
stc
dec
lock
mov
xchg
dec
cmpsl
inc
subb
outsl
add
lcall
xchg
add
xchg
cmp
mov
loope
out
mov
sub
popf
or
mov
inc
push
mov
mov
stc
fs
adc
lds
aaa
sarb
dec
addr16
movsb
cmp
jg
in
rep
fisubs
and
adc
adc
pop
movb
push
cli
shl
incb
dec
push
adc
es
daa
push
inc
or
dec
pop
jno
in
jle
xchg
xchg
lret
jecxz
inc
pop
push
sbb
sbb
lahf
xor
mov
pusha
ja
lea
cmp
cmp
mov
jmp
xor
lea
cmpsb
mov
and
loop
dec
ss
repnz
mov
hlt
and
call
outsl
cld
add
sub
inc
mov
cmpsb
inc
jne
mov
scas
jle
hlt
xbegin
xchg
out
push
iret
or
das
scas
arpl
jns
lret
push
and
popf
and
stos
leave
rclb
mov
pushf
add
add
insl
les
cmp
inc
mov
add
and
popa
jb
xchg
cmp
push
sti
subl
mov
cwtl
orl
mov
fcoms
dec
inc
dec
jbe
cmp
push
cmpsl
push
cmp
add
sarb
mov
lock
fcoms
aaa
lret
ss
les
sbb
pop
mov
nop
fwait
in
dec
repz
jecxz
ret
test
ret
mov
sbb
popa
push
in
movsl
mov
rcrl
je
rolb
jb
es
in
xchg
push
lcall
push
lea
fbstp
mov
and
addr16
jp
push
clc
sti
add
loope
fwait
jp
adc
push
incl
jnp
push
insl
lods
in
daa
jbe
mov
mov
push
xchg
and
xchg
and
lock
fcmovnbe
jl
push
clc
and
repnz
mov
mov
ret
int3
jl
pop
xor
or
insb
or
xor
sub
fwait
mov
and
jmp
and
inc
pop
mov
and
mov
xchg
cmpsb
dec
jb
pop
in
inc
insl
sahf
add
xor
outsb
clc
jmp
int3
mov
fadds
sbb
neg
ret
adcb
mov
mov
cmp
dec
sbb
ret
int3
pop
in
pop
in
lahf
jne
jg
repz
inc
and
jge
scas
int3
in
mov
cwtl
dec
pop
jno
mov
mov
sbb
xchg
sub
stos
sbb
sbb
inc
stos
and
xchg
insb
sbb
enter
xlat
cld
add
rcrb
clc
aas
push
mov
add
jl
pop
mov
jecxz
std
cmpl
rcr
xchg
sbb
inc
imul
pop
sub
imul
and
and
sbb
mov
lock
adcb
shlb
outsb
leave
sub
sar
dec
mov
sti
cmc
js
pop
sub
iret
mov
and
filds
pop
outsb
cmp
xchg
push
and
movsb
sahf
stc
cld
jp
aam
lds
adc
andl
jne
test
pcmpeqd
push
les
in
cli
pop
sub
rol
out
cwtl
push
push
scas
roll
and
push
leave
cli
inc
enter
iret
pop
mov
aaa
scas
xor
rolb
jno
test
mov
cmp
sarl
cs
lods
leave
shll
lods
or
push
iretw
adc
cs
cmpl
outsb
in
push
sbb
scas
popf
jmp
cmp
mov
cmp
lock
or
inc
icebp
adc
dec
aad
cmp
adc
fs
fwait
cs
insl
test
jb
xchg
mov
lods
sbb
enter
lcall
sub
in
xor
shr
das
xchg
sub
stos
push
push
dec
out
pushf
push
xchg
les
in
fcoms
inc
movsl
mov
inc
shl
sub
rol
cmp
inc
push
add
ljmp
pop
jnp
mov
mov
jp
cmp
mov
ss
shlb
fstl
mov
aad
push
or
pop
loopne
mov
cs
in
data16
xchg
mov
lret
adcl
push
mov
ljmp
inc
sbb
inc
inc
adc
jno
add
add
or
sarb
fsub
mov
out
ja
adc
bound
xchg
sub
add
pop
lcall
push
and
lock
inc
cltd
aas
fisttpl
mov
add
lods
movsl
jns
mov
mov
sti
push
add
adc
add
shlb
out
pop
mov
xchg
fcoms
or
cmp
cmc
mov
popw
test
mul
lods
xchg
insb
aam
xor
xor
outsb
push
xor
and
pop
repnz
pop
dec
xor
daa
add
xor
cli
xchg
loop
adc
imul
cmp
mov
inc
sarl
ret
sub
shlb
cld
sahf
lcall
addl
nop
shll
test
daa
popf
push
lahf
aaa
notl
jmp
push
push
pop
imul
data16
xchg
sub
push
std
jnp
dec
andb
in
mov
bound
andl
outsl
pop
popf
mov
or
ss
and
test
test
mov
add
push
in
mov
inc
mov
push
arpl
and
jecxz
fstl
icebp
ss
fs
shll
cmp
add
arpl
bound
popa
adc
push
jle
push
jns
xor
testb
in
cltd
js
sti
pusha
jbe
lret
sarl
sarb
pop
jp
adc
fcompl
cmpsl
mov
add
movsb
mov
adc
mov
sbb
ret
ljmp
movsl
jno
dec
jne
lock
or
xor
push
inc
cmc
sub
adc
ja
rcll
xlat
mov
mov
sbb
fisubs
inc
push
imul
mov
jle
xchg
mov
mov
rcll
test
sbb
inc
adc
cmp
jmp
jo
jae
scas
adc
movsb
mov
call
into
sarl
dec
cltd
or
fs
sub
inc
lock
or
sub
sti
cmc
sub
or
sub
cld
ret
jns
cmpsl
push
outsb
and
cmp
in
xor
icebp
push
jns
push
inc
bound
popa
mov
xchg
int3
sbb
in
mov
xor
sbb
inc
sbbb
jns
ds
rcr
rcl
clc
xor
daa
cltd
jp
das
jne
add
pop
or
outsb
iret
xor
lret
data16
test
xor
fnstcw
pop
xorl
jmp
inc
out
and
sbbl
adc
leave
pop
scas
pop
add
pop
shlb
out
movsl
xor
sub
xor
push
jns
negb
fildl
dec
and
sbb
out
push
cli
in
mov
push
mov
leave
adc
add
test
mov
or
call
push
mov
adc
mov
add
pusha
add
dec
clc
lea
push
xchg
mov
cli
and
mov
pop
pop
cs
mov
pop
cli
add
imul
mov
int3
pusha
mov
outsb
iret
fists
xor
sub
bound
pop
orb
sahf
movsl
notb
lods
inc
lock
lea
inc
clc
xchg
dec
push
out
filds
jmp
adc
loopne
sbb
les
xchg
icebp
mov
fst
inc
movsl
cmp
sub
aad
ret
aad
pop
pop
jno
or
xor
push
mov
sbb
xchg
xchg
xor
daa
iret
mov
shrb
xor
cmpsb
dec
or
addr16
cmpsb
cld
add
adc
fwait
pushw
out
scas
test
sub
cmp
cmp
or
mov
popf
int3
dec
stos
scas
mov
cmpsl
dec
jns
inc
lods
push
adc
sbb
inc
pop
dec
rcr
mov
xchg
dec
jb
jp
xchg
out
rol
leave
das
pop
push
lods
inc
fstpl
push
faddl
add
lods
push
xor
insb
sub
dec
call
daa
fldt
jle
loop
stc
jl
cs
mov
leave
cwtl
jb
adc
fisubl
out
add
dec
lret
cmp
fsubr
or
lahf
fisttps
out
shlb
sub
push
add
jl
nop
xor
mov
stc
mov
stos
mov
jg
data16
sti
cs
xor
ret
inc
xchg
dec
icebp
cmp
push
xor
stos
or
arpl
pop
cmpb
xchg
test
push
push
inc
ljmp
jecxz
mov
arpl
iret
push
jbe
ja
popa
xchg
or
ljmp
les
das
add
add
mov
ss
repnz
cmpl
add
add
xor
scas
mov
pop
subb
dec
xchg
or
mov
call
push
mov
jmp
mov
and
pop
xor
adc
xchg
imul
repz
sub
dec
mov
stos
dec
sbb
ljmp
outsl
sub
pop
cwtl
in
lds
shll
pop
or
sub
mov
loop
jmp
pop
xor
aam
or
and
xor
cmc
ficoml
stos
arpl
ret
inc
lret
in
retw
xor
iret
bound
mov
and
out
jne
mov
and
mov
xchg
rolb
pop
push
pushf
pop
fs
sub
loope
jb
xor
lock
ja
es
roll
ss
cmp
xor
xor
mov
ja
xchg
cs
xor
adc
adc
push
adc
fisttpll
orb
cli
add
jo
mov
add
das
mov
adc
js
push
push
xchg
or
cmpl
xor
push
adc
cltd
push
fwait
and
arpl
jle
or
mov
sarl
mov
cmp
xchg
jge
add
dec
pop
mov
or
aad
pop
mov
movsl
cmpsb
aad
lea
lods
xor
mov
ss
dec
adc
inc
pop
inc
mov
cmpsb
cwtl
dec
call
add
cmp
pop
out
sub
mov
frstor
icebp
push
jae
movsb
sbb
inc
enter
jo
push
fldcw
add
or
sub
fstl
mov
mov
flds
or
jo
je
mov
add
fcmovb
push
stc
movsb
daa
mov
int3
movsl
cmp
hlt
xor
into
push
push
pushf
inc
in
pop
pop
dec
aad
inc
mov
lock
int3
mov
push
insl
jge
sub
xchg
ficoml
dec
sub
xor
leave
push
sbb
xchg
add
pop
fs
sub
mov
loopne
jl
sub
xor
inc
repnz
mov
popf
dec
mov
inc
jmp
sub
ljmp
js
test
cmpsb
pushf
mov
or
aam
dec
loopne
inc
movsb
push
push
sti
movsb
fwait
aad
test
jle
mov
mov
mov
or
test
inc
test
mov
out
jp
out
iret
imul
in
xchg
es
push
inc
mov
cmp
xchg
in
pop
or
adc
arpl
test
cmp
dec
xchg
mov
jecxz
jno
test
shll
popa
pusha
cli
add
outsb
or
aaa
xadd
cmp
inc
jnp
andnps
cs
out
adc
or
leave
mov
mov
ficomps
ljmp
ljmp
es
jne
rolb
aaa
cmp
pop
outsb
daa
push
test
adc
cmp
inc
rorl
xchg
test
push
into
jb
sub
std
sub
test
in
iret
jae
mov
xlat
sub
cmp
mov
out
outsl
cmp
inc
test
imul
out
mov
mov
push
cmc
mov
adcl
nop
adc
push
inc
fisttpll
imull
arpl
pop
stos
movsl
or
adc
ret
loopne
pop
mov
andb
mov
insl
aaa
sub
daa
sub
mov
lods
push
cmp
idiv
outsb
neg
ret
mov
sub
ret
into
mov
movsl
push
dec
jnp
and
push
push
je
lods
fildll
int3
test
lods
lret
lea
mov
mov
mov
ljmp
dec
cmc
loop
sbb
imul
popf
dec
push
xchg
loop
repz
outsl
dec
pop
jp
pop
js
pusha
loopne
in
pop
lods
fcompl
pushf
sub
dec
out
jg
xchg
jne
sti
jecxz
fisttps
fidivs
mov
iret
sub
sub
scas
cmp
lock
mov
dec
pop
mov
int3
jp
arpl
mov
fistl
clc
sbb
add
jno
clc
aas
push
rolb
mov
pusha
push
jae
adc
mov
push
notb
adc
pop
lock
out
push
sub
jl
enter
mov
xor
mov
mov
stc
push
pushf
scas
xchg
enter
push
adc
dec
sub
repnz
push
fistl
nop
mov
fstl
ret
aaa
repz
mov
mov
popa
fwait
mov
sahf
mov
fiaddl
inc
dec
and
lods
outsb
and
sub
dec
and
xchg
mov
sub
push
push
scas
sahf
decb
sbb
adc
or
arpl
or
in
add
shrl
insb
movsb
rcrl
xchg
das
xor
je
push
insb
fistpll
mov
pop
shll
push
test
jle
fildll
pop
mov
push
pop
enter
mov
mov
popf
pop
ror
mov
xchg
in
test
std
push
cwtl
jmp
movsb
imul
xchg
pop
loop
jb
clc
jmp
and
arpl
inc
add
test
divl
push
cmp
and
or
in
insl
lret
fcomp
mov
dec
jecxz
lea
inc
pop
mov
hlt
push
cmc
dec
sbb
jmp
or
arpl
xchg
das
mov
lds
cmpl
mov
add
lret
ret
inc
dec
pop
fisubl
bound
andb
sub
dec
stos
scas
shr
xchg
cs
fstp
fs
loop
xor
iret
hlt
add
sahf
scas
jle
aad
push
push
stos
jb
mov
cmp
pop
jge
mov
sbb
mov
aad
mov
aaa
xchg
push
mov
popf
out
cmp
js
jne
sbb
loopne
loopne
ljmp
sub
sbb
mov
or
ja
cmp
je
paddsw
sarb
lahf
rolb
sbb
mov
orl
lret
sbb
ljmp
lock
push
mov
cmp
inc
adcl
jnp
std
jge
or
mov
inc
lcall
std
sbb
mov
adc
stos
sub
inc
push
xor
ja,pt
jae
sbbb
addb
and
pop
sbb
mov
sbb
inc
ss
lock
xchg
dec
push
push
inc
adc
pop
pushf
pop
xor
popf
mov
lret
filds
pop
lods
and
jg
lds
pop
xchg
outsb
addl
inc
inc
or
lods
cmpb
push
pop
scas
test
or
dec
lcall
xchg
stc
pop
pop
mov
out
loop
enter
sub
cmp
mov
add
jnp
inc
mov
ja
mov
fwait
rol
insl
or
insb
mov
daa
imul
fnstsw
data16
mov
cmpsl
out
imul
out
xchg
mov
cld
push
pusha
jle
push
adc
sbb
or
in
dec
ljmp
rcrl
cld
icebp
pop
dec
cli
enter
mov
xor
test
push
cmpsl
insl
out
fisttpl
dec
jno
fisubs
mov
mov
std
out
push
ret
inc
movsl
daa
push
scas
cmp
mov
mov
inc
inc
es
cmp
sub
sub
jl
mov
popf
cmp
pushl
jmp
lea
nop
test
adc
pop
daa
dec
jno
xor
cmp
mov
sbb
aam
daa
adc
push
sbb
mov
push
rcrb
cmp
icebp
mov
inc
daa
js
mov
test
inc
roll
std
or
and
jnp
pop
dec
cwtl
pop
push
enter
xchg
lods
xlat
roll
mov
sbb
or
cmp
lret
data16
jle
jne
push
jbe
jl
sbb
fnstenv
pop
mov
loope
icebp
lods
lds
xchg
ret
iret
repz
or
sbb
push
mov
pop
cltd
mov
loope
lahf
mov
in
push
jecxz
or
add
jae
jns
add
fs
sub
lret
lcall
add
cli
cli
push
and
repnz
mov
inc
cwtl
or
out
lods
mov
or
daa
add
jb
mov
shrl
movsl
and
cmp
push
xchg
lret
jg
je
add
out
sub
jns
cwtl
inc
add
mov
mov
cmp
fwait
cmp
or
mov
and
nop
sbb
imul
dec
ret
mov
xchg
pop
or
int
jno
cwtl
push
push
xchg
pop
push
sbb
push
add
dec
adc
pusha
inc
mov
pop
push
arpl
in
jbe
add
out
gs
ret
push
and
pop
mov
push
fstpt
sahf
cmp
daa
inc
or
andl
and
into
imul
inc
adc
jp
add
inc
pushf
fldcw
fisttpll
sbb
ss
dec
mov
bound
jmp
xor
sarb
mov
cs
into
inc
das
jl
sbb
push
and
jns
or
and
mov
push
and
in
daa
cmp
sbb
push
data16
mov
cmp
pop
sub
pop
loope
jl
and
push
push
and
or
or
pop
xor
lock
mov
push
adc
or
icebp
pop
cs
lea
xchg
and
inc
inc
fs
inc
add
and
mov
jmp
pop
outsl
imul
loopne
pop
mov
add
push
int
fwait
mov
xor
cmp
mov
push
repnz
push
fdivr
dec
lret
push
mov
or
push
pusha
sar
mov
cltd
and
fs
sub
mov
mov
inc
push
arpl
lea
pop
nop
sbb
lea
imul
inc
inc
cmp
xchg
push
into
inc
push
mov
dec
fisubs
pop
and
xlat
sub
ljmp
adc
push
nop
decl
sub
dec
out
cs
aad
pop
jg
sbb
push
dec
jecxz
outsb
jo
push
repnz
and
lcall
sub
ret
std
jl
mov
movsl
popf
dec
fst
cltd
mov
or
or
or
cmpsl
sub
lcall
insb
out
cmp
test
xor
ljmp
pop
cltd
xchg
mov
pop
adc
popf
test
pop
or
fcoms
adc
xchg
and
rorl
in
adcb
mov
jle
mov
ret
js
push
test
je
dec
cmc
mov
xor
addr16
scas
imul
sub
sbb
push
xchg
pusha
loop
cmp
pop
insb
sbb
jg
js
xor
mov
fsubr
push
add
lds
cmp
dec
in
mov
add
outsl
jb
fdivrp
pusha
push
mov
mov
out
and
xor
cmpsl
mov
test
mov
into
pusha
test
push
sub
push
arpl
or
xlat
aas
cmc
ficoms
sub
test
scas
cmp
jecxz
xchg
fldl
cmp
daa
mov
xchg
jno
mov
pop
cmpsb
enter
xchg
sub
shll
sahf
cmp
sub
push
aad
sbb
add
or
jne
mov
add
rcrl
call
fxch
adc
popa
ljmp
and
sbb
pop
aam
mov
lock
inc
dec
jb
push
inc
xor
rorl
out
sti
dec
enter
imul
pop
imul
jecxz
jge
out
inc
imulb
icebp
mov
dec
addr16
jl
stc
leave
aad
mov
adc
mov
sbb
cmp
movsl
cltd
mov
push
xchg
cli
pop
imul
dec
out
xor
pop
mov
pop
movsb
mov
inc
sub
mov
aas
cs
ret
jl
lock
or
sbb
xor
test
mov
popa
cmp
sbb
push
adc
icebp
mov
in
pop
pop
mov
add
xor
xchg
pop
jno
inc
pop
sbb
jp
mov
jbe
data16
cli
dec
mov
dec
shrl
popl
repz
xor
lret
jge
push
dec
pop
push
push
or
push
or
pushf
test
shrb
jp
into
push
cmp
out
cmp
mov
mov
mov
aaa
xor
inc
cwtl
cmp
mov
std
notl
xchg
jle
xchg
dec
data16
dec
push
or
je
jmp
cmp
stos
jmp
dec
addr16
push
jns
shlb
xchg
lock
subb
adc
mov
mov
cwtl
cmpsb
adc
mov
ja
roll
sub
push
jge
xlat
adc
add
ds
add
es
or
pop
lahf
jb
daa
stos
das
jbe
mov
lcall
push
lcall
mov
xchg
push
lock
xchg
testl
cmp
insl
es
js
rcl
dec
int3
fnsave
pop
cld
sbb
hlt
or
loopne
orb
xor
or
sti
leave
int3
sub
imul
adc
outsl
pusha
jle
orb
outsl
jg
jmp
push
adc
lock
aad
repnz
popa
pop
out
nop
and
lcall
adc
subb
push
sbb
adc
sahf
cmp
adc
fnstenv
jns
outsb
fcomp
or
addr16
or
mov
jg
cs
jae
int
fwait
dec
das
sub
out
shr
enter
lds
mov
je
in
mov
mov
loopne
lods
fnstsw
ss
hlt
sbb
adc
pop
in
inc
mov
lea
sub
push
orl
iret
arpl
fwait
sub
dec
gs
mov
xchg
or
cs
mov
lcall
adc
leave
repnz
mov
sbb
pop
iret
and
sub
sarl
adc
jge
and
dec
js
stos
xchg
iret
add
inc
cmp
out
mov
in
mov
jg
and
pop
adc
imul
mov
mov
pop
lods
ljmp
data16
dec
mov
sub
xorb
and
xchg
or
repz
lods
mov
inc
push
jno
inc
addl
popf
inc
push
notb
sub
or
inc
jb
aas
bound
lret
push
sbb
stc
imul
xor
xor
inc
addb
aas
jmp
lret
lret
cmpb
cld
js
jo
mov
jl
jb
jle
outsb
bound
aad
xchg
add
out
add
cmp
add
xlat
jp
hlt
subl
in
adc
je
add
outsl
lea
sahf
fldenv
repz
lods
pop
popf
hlt
insl
ret
jle
mov
jg
in
insl
jl
stos
mov
mov
xor
jle
loope
test
xchg
in
inc
fldcw
cmpb
das
xchg
ret
fnstsw
cmp
insl
data16
jo
cli
shll
and
fnstsw
sub
movsl
xchg
pusha
fidivl
cwtl
ljmp
and
clc
and
lret
jmp
jns
paddw
mov
faddl
jl
popa
mov
jp
cmc
stos
jns
push
adc
idivb
jmp
in
dec
out
mov
cmp
ds
arpl
jae
xchg
rorb
dec
mov
sbb
cmp
jle
cli
or
addr16
push
dec
loop
dec
sbb
das
and
sub
add
ret
subps
or
xor
mov
mov
inc
xlat
lret
and
ss
pop
je
mov
mulb
xorl
pop
push
jge
ss
pop
stos
scas
cmp
aaa
dec
shll
xchg
rcr
and
xor
xchg
xchg
insl
cs
lret
pop
shlb
lret
xor
repnz
shr
or
nop
mov
lcall
int
lahf
outsl
fdivrl
fs
dec
or
ja
mov
loope
out
sbb
or
lods
lahf
fisubrs
aas
les
cmp
mov
add
and
mov
inc
adc
sub
test
dec
jle
outsl
adcb
frstor
mov
je
in
lahf
sbb
cmp
lods
dec
movsb
adc
lcall
cmp
xor
ds
outsl
jge
xchg
or
mov
icebp
mov
mov
inc
cmp
push
faddl
jle
push
jns
in
or
fwait
les
push
mov
pop
adc
test
cmpl
cmp
addr16
sti
lahf
mov
jb
repz
push
xchg
pop
loop
lock
mov
lock
clc
cmp
test
fidivl
fwait
pop
xor
iret
cltd
insb
aad
lret
push
xor
fldenv
cmp
sub
pop
xor
adcl
pop
add
mov
les
xor
mov
ret
sarl
mov
bound
movsb
popf
mov
or
push
lahf
push
lods
pop
clc
inc
cltd
push
jmp
cltd
iret
test
pop
sbb
pop
test
pop
adc
xchg
fwait
lock
sti
aas
sbb
mov
pop
xor
jmp
test
insl
add
add
pop
repz
pop
lock
jmp
xor
inc
popa
sbb
insl
mov
shll
aas
stc
scas
cmp
ret
iret
mov
pop
iret
mov
into
das
decl
sub
mov
and
shll
scas
inc
sbb
test
pop
sahf
int3
mov
in
mov
cmp
fs
bound
mov
insl
xchg
imul
lahf
sbb
lret
rdpmc
inc
cwtl
test
popa
mov
mov
dec
cmpsb
push
xchg
pop
fsub
fstl
jmp
cld
xlat
jmp
sub
jp
sub
push
pop
push
push
sub
insl
stos
rol
mov
pop
mov
xor
and
xchg
insb
stos
dec
arpl
lods
cs
jnp
mov
lods
mov
add
arpl
movsl
push
push
sbb
inc
jp
pop
stc
lea
loop
jbe
pop
pop
rdmsr
inc
jns
push
imul
cmc
pop
push
outsb
jmp
or
mov
cwtl
fwait
test
mov
loop
mov
or
ljmp
pop
sub
mov
in
fadd
sbb
add
mov
inc
mov
push
inc
imul
sbb
push
mov
je
faddl
aam
fnstenv
loopne
mov
xchg
mov
movsb
pop
sub
mov
cld
mov
mov
xchg
outsb
int
cmp
inc
in
inc
sti
out
dec
lds
dec
push
xorb
das
int3
adc
in
bound
movsb
xchg
fstps
les
incb
aam
scas
xor
or
or
and
push
pop
pusha
adc
sbb
sub
pop
sub
jge
push
cmp
adc
and
mov
cmp
cmc
mov
out
in
hlt
pop
cli
mov
enter
insb
into
fwait
pop
int3
ds
sub
js
mov
push
sub
inc
ret
mov
add
rclb
or
lds
add
adc
sahf
and
push
in
xchg
rcrl
outsl
adc
lahf
or
stos
aas
push
inc
or
insl
sub
test
mov
fmull
xchg
cld
sahf
stos
xor
sahf
inc
roll
xchg
mov
mov
sahf
jne
pop
pop
jmp
xchg
sahf
xor
adc
jne
push
cmp
cmc
dec
push
push
cmp
push
loopne
jmp
dec
pop
mov
cmp
idivb
setbe
xchg
shll
jb
jle
jecxz
adcb
push
or
push
fs
mov
inc
les
jb
jo
or
push
dec
pop
clc
sbb
cs
mov
xor
xchg
push
ss
sbb
pop
push
mov
jb
xchg
aaa
jns
dec
lock
xlat
or
jns
xor
inc
divl
orl
aas
push
push
jmp
dec
lret
mov
lea
xor
lcall
add
mov
mov
cwtl
ret
mov
sti
and
test
mov
inc
xchg
push
xchg
imul
mov
imul
adc
and
into
loop
cmp
and
pop
push
test
enter
fsubs
pop
mov
mov
scas
negl
sub
push
shll
insl
sbb
sbb
inc
push
out
lock
add
xchg
cmp
adc
in
cmp
inc
lock
jne
loopne
shl
mov
and
xor
fadd
insb
mov
lods
push
movsb
das
xor
das
jmp
lret
pop
adc
push
movsb
nop
jnp
jmp
dec
fsubl
or
icebp
addr16
in
test
xor
pop
mov
cli
stc
pop
xchg
leave
xchg
sbb
add
mov
ror
xlat
sub
fiadds
ja
dec
fisubs
xchg
cltd
mov
jno
sbb
adc
cli
insb
pop
xchg
jp
das
aad
jl
sti
pop
mov
cld
xor
mov
test
xchg
pop
scas
addr16
jg
xchg
ja
xor
sbb
jmp
push
fisubs
jge
scas
jp
jnp
add
push
loope
mov
push
mov
imul
ja
jl
xchg
mov
xchg
in
ds
xor
sub
insb
jno
mov
fs
int3
push
ss
pusha
jecxz
or
xchg
and
ret
je
adc
mov
movsl
jne
mov
cli
int
lahf
pop
aad
sub
and
mov
and
aad
xchg
cmp
mov
loopne
mov
insb
push
xor
outsb
stos
daa
xchg
enter
sub
fsubp
sbb
inc
orl
sbb
gs
push
xor
sahf
subb
insl
cmp
pop
mov
leave
and
cmp
push
cld
xchg
pop
mov
pop
xchg
ja
sahf
inc
outsb
xchg
sub
test
pushl
sbbb
fs
or
or
sub
shlb
xor
ljmp
sub
adc
scas
dec
sbb
jle
cli
fstpl
pop
ljmp
nop
leave
in
ds
sti
or
out
addr16
jl
add
inc
xor
inc
movsb
fdiv
xor
inc
test
sub
enter
and
stos
les
rcr
mov
pusha
pusha
pop
test
adc
mov
rcll
adc
sub
push
mull
push
push
push
and
inc
cmp
and
cmp
and
adc
fisubl
pushf
scas
arpl
loopne
sti
fsubrl
ja
sub
xchg
jecxz
test
xlat
std
xor
test
bound
inc
ljmp
shlb
jbe
divl
cmp
jmp
stos
lret
mov
nop
push
push
jmp
pop
xchg
mov
xchg
shll
push
rclb
and
dec
out
push
pop
test
gs
movsb
jl
pop
repnz
out
lods
std
and
jae
xchg
xor
xor
dec
and
mov
movsb
dec
fiadds
movsb
cmp
and
les
xor
out
je
sbb
sahf
lret
nop
add
iret
mov
sub
push
mov
and
xchg
and
sub
aam
cmp
jae
sub
push
sahf
mov
xchg
or
jmp
mov
mov
or
aaa
lods
cmpsb
sbb
faddl
call
aam
push
jns
sbb
add
rorb
addr16
cmp
and
and
xchg
or
push
in
jle,pt
out
jb
dec
ds
cli
jecxz
jge
sub
pop
sar
ja
mov
in
sbb
push
mov
sahf
or
jns
loope
daa
es
rcrl
xor
pushf
adc
or
mov
sbb
inc
dec
cltd
cmc
pushf
pusha
sub
fwait
dec
mov
lods
xchg
adc
push
es
jecxz
insl
outsb
mov
jo
push
dec
jnp
dec
jmp
in
imul
mov
lret
mov
fadds
repz
fisttps
and
jbe
stc
mov
mov
jecxz
stc
push
push
xor
arpl
mov
jo
dec
testb
push
aas
sub
adc
xor
out
push
popf
popf
xor
pop
in
inc
enter
imul
and
enter
dec
sub
sbb
int
outsb
sbb
push
push
cwtl
jp
andb
cltd
sbb
aaa
adc
stos
arpl
inc
mov
dec
shl
pushf
sbb
adc
mov
cltd
inc
mov
lea
aad
cmc
sbb
inc
ss
lcall
xchg
and
adc
test
ds
cli
rcrb
pop
pop
jle
out
add
loope
enter
das
in
mov
rol
and
xchg
enter
ret
lea
sub
fcmovbe
lret
xor
cwtl
decl
pop
insl
pop
mov
pusha
sub
push
outsl
and
jne
inc
sarl
dec
xchg
jmp
sbb
xor
push
imull
sbb
dec
jmp
xchg
lahf
mov
cmp
cmp
fstl
in
ret
mov
mov
dec
js
fimuls
sbb
dec
lret
pop
mov
push
jnp
das
mov
dec
mov
addr16
push
enter
pop
scas
andb
scas
out
inc
nop
jne
mov
sub
stc
xchg
mov
dec
push
sub
mov
dec
flds
das
test
sub
gs
in
sbb
dec
and
pop
cmp
add
or
insb
sahf
out
xor
or
or
lock
xor
mov
addr16
pop
and
cmp
fnstenv
dec
xor
mov
jo
incb
jb
adc
rcrl
sbb
and
jae
pop
les
push
pusha
xchg
in
fcoml
inc
jp
xchg
pop
sub
sbb
leave
mov
das
adc
or
adc
lods
ja
xchg
fldl
rorl
xchg
xor
hlt
or
pop
add
xlat
aam
sub
xchg
mov
mov
and
lret
mov
mov
rcrb
fsubl
shl
popf
push
and
cmp
mov
fdivl
xor
cmp
adc
jbe
sub
and
mov
inc
incb
int3
int3
jp
out
xchg
int3
and
out
ljmp
call
in
inc
popa
cli
cmp
aas
cltd
add
rol
mov
push
push
jo
adc
lcall
mov
xor
mov
xor
xor
enter
in
sub
mov
jbe
mov
ds
outsb
dec
push
jp
int3
mov
push
cmp
pusha
jae
call
ret
rcll
repz
js
dec
pushf
mov
mov
jno
ljmp
push
pop
jae
mov
add
nop
or
bound
repnz
push
pop
mov
les
cltd
add
sub
adcb
mov
fwait
jle
cmpsb
adc
xlat
mov
and
and
out
mov
push
jp
xchg
jns
stos
cwtl
fdivl
lahf
stc
bound
rcr
ret
into
loopne
mov
add
xor
adc
adc
push
mov
leave
mov
mov
xchg
icebp
shrb
sbb
gs
mov
and
xchg
shl
out
popa
aad
xor
mov
and
popf
test
test
jl
fdivs
repz
fsubp
mov
arpl
cmp
sbbb
jne
xor
xor
popw
leave
daa
shr
jecxz
lret
movsb
lret
or
pop
pop
int
popf
jb
mov
pop
or
stos
push
movsl
jle
push
sub
lods
aas
pop
xor
stos
das
aas
icebp
cmp
and
xchg
jns
pop
push
xchg
loope
mov
mov
dec
aas
mov
rclb
insb
out
sbb
mov
or
mov
loopne
pop
sub
clc
mov
mov
cli
nop
mov
clc
dec
jmp
inc
add
ss
xchg
add
xchg
loop
test
cmp
bound
pusha
cltd
or
sub
sub
mov
inc
imul
inc
mov
in
loopne
cmc
cmc
jb
lods
divl
inc
pushf
pop
jmp
cmc
jo
dec
xchg
pop
or
and
test
or
cmp
cmpsb
inc
jmp
in
negl
xor
cmp
rclb
add
xorl
inc
shll
mov
ds
js
loopne
lock
inc
xor
div
pop
out
outsb
das
push
ds
mov
fbstp
leave
add
add
rcl
sub
outsl
cmpsl
add
inc
ret
pop
daa
xchg
sbb
sub
loopne
mov
cli
dec
pop
cmc
push
adc
lds
inc
sub
jb
inc
cmp
push
fninit
out
lret
pop
stc
icebp
hlt
xchg
pop
adcb
lods
jg
iret
movq
lret
push
cmpsb
into
mov
loope
pushw
and
xchg
add
cmp
stc
mov
pop
jo
ja
mov
push
gs
mov
push
xor
lret
adc
les
mov
movsb
mov
stc
xchg
adc
lret
pop
xchg
andl
negb
les
movl
test
cwtl
daa
in
arpl
dec
push
in
test
repnz
insl
repz
aam
loope
push
outsl
or
test
cli
iret
push
add
cmpsl
sub
lea
push
xorb
pop
xlat
mov
ret
repnz
shll
mov
push
xchg
mov
in
adc
clc
popaw
movsl
imul
test
inc
call
pop
mov
push
filds
sbb
fidivrs
push
cwtl
mov
adc
adc
cmp
cmpsb
sub
jge
sarl
stos
out
mov
cmpsb
xor
mov
adc
clc
push
push
push
mov
add
pop
ja
jo
mov
data16
pop
sbb
ja
outsb
inc
out
or
jp
icebp
lock
xor
inc
fs
add
push
dec
sbb
scas
push
xchg
iret
jmp
inc
add
lods
jl
aam
int
or
fsubrs
clc
lcall
mov
imul
inc
outsl
cmp
cmp
shl
scas
add
aad
and
js
cmc
lahf
imul
in
int3
in
inc
add
sbb
int
pop
js
repnz
ret
cmp
mov
hlt
inc
jnp
idivb
in
inc
mov
inc
sbb
adc
lods
mov
cmp
imul
sub
xchg
mov
push
adc
adc
fldt
push
stos
cmp
fiadds
test
push
xorw
loope
sub
sub
sub
in
jmp
aam
loopne
aad
sar
std
and
dec
cmpsb
jmp
add
data16
es
adc
hlt
push
xchg
fists
inc
sub
imul
fstpl
mov
into
daa
mov
stos
enter
or
negb
sub
cltd
xlat
adcl
xchg
lea
cltd
sub
pop
cmp
mov
jp
inc
imul
mov
sub
sbb
js
cmp
gs
inc
dec
movsl
shl
push
or
stos
ret
jl
xlat
xor
movsl
pop
sub
scas
mov
out
fwait
jae
mov
jecxz
mov
sbb
clc
inc
add
xchg
pop
test
rclb
jno
out
and
ret
in
adc
inc
adc
mov
push
inc
scas
xor
divl
movsl
in
repz
jne
mov
mov
hlt
aam
aas
push
jge
mov
push
pushf
daa
mov
sbb
dec
xchg
push
add
pop
bound
adc
push
out
sub
popa
mov
or
pop
js
add
dec
add
cltd
out
in
call
and
push
rcrl
lods
in
lahf
jmp
mov
test
xchg
outsl
je
ljmp
inc
lds
xchg
cmp
loopne
call
out
test
adc
imul
jb
mov
aaa
or
shlb
cmp
scas
pop
push
cmpsb
adc
push
popa
jg
mov
test
jnp
loope
pop
cltd
loopne
addl
xor
cmp
dec
mov
or
fidivs
pop
scas
arpl
or
pop
lods
pop
adc
xchg
pop
jbe
cs
adc
ret
daa
pop
or
out
cli
adc
push
enter
pop
inc
call
popa
xor
jp
pop
in
push
lcall
cmpsb
xor
dec
gs
xor
xchg
or
stc
aaa
popl
cmpl
outsl
movsb
push
enter
mov
jp
sar
sbb
insl
pop
xor
imul
push
jns
add
mov
inc
cltd
push
mov
jmp
jle
inc
xor
out
push
pusha
inc
call
clc
xor
shll
test
mov
ror
mov
push
add
adc
adc
and
jae
je
jmp
test
icebp
xlat
inc
loope
xchg
pop
fistpll
iret
add
dec
xchg
in
mov
cmc
jno
out
addb
xchg
sahf
cmpl
pop
mov
mov
xor
mov
std
lret
movsl
jmp
decb
jne
jle
jb,pn
leave
inc
shrb
sarb
int
outsl
sub
push
les
out
mov
jmp
aad
jg
xor
mov
xor
push
jnp
xchg
jecxz
sbb
and
jns
dec
push
pop
jle
mov
mov
push
push
loop
les
int
test
push
cld
push
stos
in
sbbb
push
frstor
mov
lret
dec
enter
fstl
pushw
cmp
jbe
lock
pop
sub
add
in
jnp
aaa
add
xchg
orb
mov
cmp
js
test
xchg
jp
cltd
xchg
dec
scas
in
mov
ljmp
mov
out
cmp
leave
xchg
andnps
xor
mov
enter
lods
add
mov
or
mov
dec
repz
popf
mov
pop
fisttpll
rclb
dec
aas
insb
orl
mov
mov
scas
pop
cltd
lock
lea
arpl
inc
push
dec
in
lea
xor
int
mov
sbb
or
clc
das
movsl
inc
bound
mov
hlt
cmp
cmp
xchg
xchg
push
iret
mov
push
out
jo
xorb
xor
xchg
cli
orb
xchg
fldenv
xchg
rorl
notb
jecxz
mov
cmpsb
add
stc
mov
notb
jg
test
xchg
xor
jno
rorb
jg
jne
cmp
jp
mov
jbe
xor
mov
ljmp
fmuls
adc
xchg
idivl
push
jmp
xchg
insb
fwait
cld
fwait
adc
sar
cs
mov
testb
xlat
pop
mov
daa
xor
jb
adc
lea
xchg
data16
cmp
pop
dec
call
adc
xchg
sarl
push
adc
pop
icebp
mov
push
pop
or
pop
dec
jne
es
pop
icebp
add
test
xchg
dec
push
loopne
scas
cmp
call
add
adc
or
xchg
xchg
fnsave
xchg
dec
adc
mov
loopne
push
test
aaa
mov
dec
iret
inc
xchg
jbe
lret
enter
sbb
pop
dec
divps
inc
popa
xor
cltd
inc
int3
aam
repnz
sub
mov
xor
xor
mov
mov
lods
das
sti
imul
je
adc
imul
sti
fcomp
cmp
xchg
movsl
test
push
push
stc
std
inc
or
fcompl
cmp
inc
divl
mov
lret
lret
pop
dec
data16
outsl
lahf
roll
shlb
test
xorl
adc
add
mov
dec
lock
test
pop
hlt
sbbb
jecxz
and
push
dec
jns
in
sbb
pop
es
sbb
xorb
adc
push
dec
cld
push
ret
cmp
ja
xchg
bswap
fistps
pushf
add
or
jmp
aaa
cmp
stos
xor
lea
test
push
sbb
out
mov
leave
cmp
test
bound
andl
jp
mov
mov
xchg
pop
jae
inc
dec
sbb
into
cwtl
popa
loop
jl
push
dec
and
mov
popf
xor
pop
aas
fstps
lahf
ficomps
stos
out
ds
xor
out
fstp
and
inc
or
out
push
inc
xchg
stos
inc
or
outsl
pop
pop
shll
xor
and
adc
jae
call
rcrl
push
int
push
int3
or
push
lods
ss
inc
sbb
push
pop
mov
dec
jns
or
and
mov
lret
mov
ficoml
aas
jp
out
stc
mov
lretw
loop
add
and
adc
imul
pop
repnz
push
jnp
cli
aam
jmp
popf
fstl
add
pop
insb
ds
out
fnstenv
mov
add
in
cltd
mov
add
mov
cmpsb
mov
xchg
inc
add
xor
mov
es
hlt
test
lods
arpl
jge
movsl
jbe
hlt
popf
das
adc
das
push
fsubrp
add
mov
inc
popf
aad
addl
in
cli
movl
dec
jo
dec
lahf
mov
cmp
mov
mov
mov
cmp
ja
jg
mov
sbb
mov
fldt
call
jne
xor
cwtl
dec
dec
add
push
or
dec
scas
sahf
pop
sub
sahf
pop
pop
or
inc
add
mov
mov
push
jo
inc
dec
inc
mov
cmc
repnz
inc
and
push
in
loopne
inc
sarb
insl
stos
mov
dec
add
push
xchg
pop
push
in
push
adc
xchg
mov
push
jae
hlt
sbb
mov
sub
hlt
xchg
mov
mov
sahf
mov
sub
cmpsb
pop
adc
loop
adc
jnp
movsl
inc
mov
call
pop
pop
mov
icebp
mov
aas
ror
push
sbb
pop
adc
dec
imul
push
xchg
sub
leave
mov
bound
xchg
and
idivb
jp
push
and
sub
and
sahf
add
sub
jno
inc
lret
and
xchg
pop
push
stos
mov
aad
pop
push
add
into
cmp
aaa
outsl
mov
inc
rclb
add
dec
sub
push
inc
sbbl
or
in
pusha
jmp
sub
or
add
mov
das
jg
pop
pop
mov
sub
imull
or
pop
int
lods
mov
pop
in
adc
push
divl
lcall
icebp
cld
pop
icebp
xchg
imul
in
push
pop
cmpsb
sbb
stos
in
lret
dec
inc
fsubl
gs
lock
movsl
xchg
gs
jo
mov
xchg
xchg
lock
pop
sbb
cltd
je
out
stos
adc
or
popf
pop
inc
mov
sti
jle
mov
mov
jg
jg
jmp
fadds
xchg
sbb
and
stos
push
push
imul
lods
js
stc
into
push
std
pusha
inc
mov
or
loopne
xchg
movntq
out
lds
and
jbe
inc
add
adc
xlat
and
and
pop
es
xchg
mov
addr16
dec
mov
ja
or
outsb
lea
mov
insb
xorb
loopne
jo
bnd
jecxz
gs
and
movsl
jg
ds
jge
insb
xchg
dec
rcrb
out
xorl
imul
push
adc
lock
and
ret
pop
xor
jns
xchg
xchg
insl
sub
add
fimuls
xchg
lods
movsb
pop
imul
pusha
sub
xchg
lea
add
mov
rcll
add
sbb
fstps
ficomps
enter
cmp
in
and
fists
stos
push
jle
mov
cmp
jo
or
dec
movsb
fiadds
cld
sub
lock
mov
in
std
pop
insb
fcmovne
jns
gs
shlb
jg
scas
jle
pop
mov
pop
movsb
and
pop
sub
sub
xchg
xor
or
xchg
sbb
and
sbb
mov
cmp
lahf
cwtl
ret
xchg
or
push
push
imul
out
jo
or
push
and
sti
mov
jb
cmpsb
adc
cmp
dec
jp
sbb
loopne
pop
daa
jp
insl
jmp
xchg
sbb
and
hlt
or
popa
lds
mov
stos
out
push
xlat
je
testl
pop
outsl
adc
push
popf
push
push
push
jae
jno
mov
call
sub
fcompl
inc
pop
mov
loop
fndisi(8087
nop
andl
adc
pop
sub
outsl
cmp
mov
dec
push
or
jno
imul
sub
mov
shll
mov
in
in
push
fisttps
or
scas
xor
insb
mov
popf
loop
xchg
sub
jo
loope
or
aad
mov
dec
inc
cli
jmp
push
hlt
dec
pop
test
xor
dec
adc
inc
sarl
shlb
dec
xchg
inc
in
mov
inc
or
dec
dec
scas
mov
cmpsl
or
inc
movsb
mov
mov
icebp
and
xchg
xchg
sti
mov
push
pop
inc
icebp
fmull
test
sbb
clc
pop
mov
int3
sbb
aas
roll
daa
je
mov
xor
xlat
arpl
dec
or
push
jno
xor
dec
pop
mov
imul
sub
pop
pop
push
sub
adc
push
and
leave
mov
adc
stos
lcall
dec
loope
fmul
xchg
inc
shlb
mov
test
aas
mov
into
repz
rclb
xchg
mov
das
add
fidivs
mov
mov
push
in
mov
roll
leave
xor
cli
add
xchg
sbbl
repnz
loop
in
xchg
xchg
add
jae
mov
xor
lods
outsb
dec
jg
out
stos
out
mov
pop
adc
iret
sahf
mov
inc
cltd
in
inc
and
sahf
jp
mov
jg
dec
pop
adc
rol
roll
in
add
mov
daa
dec
je
add
mov
pop
int3
mov
or
jno
jno
pop
cmp
cmp
dec
sub
ljmp
sub
push
add
cmp
popf
cmp
dec
jmp
into
int3
mov
outsb
dec
imul
xor
negb
loopne
out
sti
lahf
mov
sub
dec
test
mov
enter
stc
out
fs
in
push
pop
aam
mov
sub
push
mov
xor
js
fmull
test
mov
int
pusha
dec
mov
jg
ret
push
dec
dec
shll
addr16
mov
imul
push
push
ss
insb
fbstp
mov
lods
into
mov
and
repnz
dec
out
pusha
or
inc
dec
push
rcll
pop
xchg
rorb
push
mov
mov
or
dec
sub
cmp
in
mov
cmp
adc
jo
flds
pop
mov
das
js
negl
xchg
mov
test
mov
lret
into
shrl
xchg
ljmp
add
test
sub
fildl
mov
bound
lea
jg
inc
mov
inc
scas
sub
sbb
mov
jmp
mov
popa
inc
or
fbld
sub
call
enter
repz
cltd
push
fmull
jbe
push
nop
sbb
inc
jp
in
test
repz
mov
xchg
xlat
dec
out
pop
out
repz
jno
add
mov
or
mov
cmpsl
add
push
fld
add
mov
pop
sti
outsb
aaa
outsb
xor
pop
pop
pop
in
out
xor
ja
push
and
xchg
pop
pop
int
loopne
dec
sub
push
lods
out
scas
sti
insl
in
fstpl
xor
imul
pop
insb
cli
mov
pop
sub
jne
sahf
test
cmp
int
rcrl
insb
ljmp
mov
cld
pop
jg
gs
movb
fstpl
mov
ds
jmp
mov
mov
xlat
repz
cmp
and
mov
data16
and
lea
mov
in
mov
pop
ljmp
fs
fimuls
dec
mov
movsl
pop
test
sbb
pop
push
shl
jb
pminsw
dec
cltd
mov
jecxz
aaa
imul
mov
inc
in
int3
ss
int
nop
xor
xchg
ljmp
cmp
jb
mov
push
mov
push
dec
mov
add
pop
nop
lea
inc
les
cltd
iret
sbb
sti
xchg
cs
push
pop
push
mov
out
inc
pop
adc
mov
shll
sub
push
cmp
je
pop
out
inc
ret
dec
sbb
mov
lock
mov
lock
mov
ss
xchg
sti
jle
jl
sub
lods
xor
sbb
test
or
or
repnz
push
movsb
dec
imulb
add
pop
push
cld
orb
scas
xchg
mov
mov
in
add
sbb
mov
jl
repz
addr16
mov
daa
dec
insl
or
out
xor
out
fldt
jecxz
vpshaq
jmp
andl
lock
adc
repz
movsb
push
sub
ficompl
stos
mov
cs
iret
jle
ss
push
xor
mov
outsl
sbb
dec
mov
popf
loop
pop
movsb
sti
imul
movsl
add
jb
fiadds
sbb
lret
xchg
add
js
dec
mov
test
sub
fs
mov
mov
push
add
orb
scas
dec
ret
dec
addr16
in
add
mov
sbb
out
test
shrb
loope
cmpsl
rol
xchg
dec
out
stos
test
mov
dec
add
mov
xor
xor
movsb
fcmovnb
and
in
sarl
push
push
xchg
insb
call
mov
or
lret
test
sub
pop
mulb
or
insb
cwtl
xchg
sbb
mov
rolb
icebp
sub
pop
in
fcom
sub
in
adc
xchg
pop
or
and
nop
dec
fwait
arpl
ss
pop
dec
mov
or
jo
sbb
lret
and
mov
clc
mov
jl
or
fs
outsl
xchg
rcll
xlat
std
jno
pop
lods
in
add
mov
dec
dec
lcall
lods
gs
stc
inc
clc
stos
mov
lahf
xchg
incb
daa
mov
jmp
imul
sbb
jg
cltd
aaa
dec
in
push
mov
pop
test
push
imul
enter
imul
jno
cmpsb
jbe
jbe
dec
outsb
cmp
repz
pop
es
mov
push
sub
pop
cld
mov
mov
or
xchg
test
insb
add
adc
std
adc
jecxz
cmp
dec
add
mov
xchg
add
lret
mov
inc
and
cmc
pop
jo
or
pop
sbb
jno
subl
pop
aaa
sbb
stos
xchg
loop
mov
mov
out
cmp
sbb
pop
sub
sbb
out
aam
jle
xchg
sbb
jno
lea
xchg
push
out
aam
test
cmp
jbe
js
repz
pavgb
fcomi
sbb
xchg
ficoms
orb
enter
shlb
out
popa
fsqrt
add
pop
sahf
cmp
lcall
outsl
mov
popf
sbbl
inc
sti
xchg
xor
lret
push
out
stc
mov
xor
mov
mov
icebp
aas
in
push
xchg
das
addr16
call
or
cwtl
jp
in
cmc
dec
fmull
mov
dec
idiv
jno
xchg
repnz
lock
repz
imul
push
adc
arpl
rcrl
adc
add
aas
addb
add
push
mov
adc
mov
jne
xchg
repnz
cmpb
mov
fwait
je
pop
out
fs
clc
sub
jg
test
or
lock
dec
imul
sub
sarl
pop
lret
xor
push
mov
xchg
nop
js
inc
mov
inc
mov
sahf
jmp
mov
decl
orb
push
dec
and
cmpsb
dec
movsl
sub
push
jl
fwait
sub
xchg
mov
cmpl
push
xchg
adc
mov
sub
mov
sub
jmp
scas
adc
xchg
mov
adc
jle
dec
lods
push
das
mov
add
hlt
bound
sub
cmp
mov
xchg
sub
xor
cmpsb
fdiv
in
or
sbb
lods
ret
mov
or
sbb
movsl
add
dec
cmp
loop
les
sbb
pop
xor
inc
pop
lds
xchg
in
or
in
push
push
fmuls
scas
imul
mov
pop
js
into
dec
sbb
cwtl
inc
mov
or
dec
mov
pop
insb
jbe
mulw
mov
in
filds
jnp
or
ljmp
ds
frstor
xor
scas
inc
loope
sahf
mov
mov
xchg
jp
lods
mov
mov
or
adc
mov
les
xor
mov
mov
das
mov
jae
sarl
aaa
jl
leave
fisttpl
movsb
mov
or
stc
lcall
int3
aas
and
out
ja
js
sbb
adc
dec
and
and
ror
test
jmp
fwait
inc
fmulp
xchg
dec
ret
psubd
das
cltd
sbb
fldenv
pusha
iret
adc
das
pusha
stc
lret
push
jmp
jo
scas
ret
pop
das
lds
sbb
repz
sahf
push
jno
mov
and
loope
mov
out
sbb
sahf
in
cltd
cmp
mov
fsubrs
adc
out
negl
or
cld
pop
pop
jmp
xchg
pop
fists
out
xor
aam
icebp
and
mov
mov
mov
xlat
ret
sub
insl
movsb
daa
mov
xchg
mov
cmp
out
das
jmp
xor
cmpl
mov
sub
push
lock
mov
sti
bound
or
push
insb
icebp
cltd
pop
and
adcl
mov
sub
push
push
pop
mov
jb
xor
scas
pushf
xchg
push
dec
je
mov
pop
xor
add
mov
sub
mov
push
mov
aas
cs
xchg
pop
adc
in
popf
push
clc
das
jae
int3
pop
dec
adc
lock
push
adc
xchg
shrb
mov
cmp
jns
movsb
and
dec
mov
dec
lods
aaa
rolb
cmp
sub
aas
outsb
inc
push
call
mov
pop
jmp
xchg
clc
rcrl
xlat
jno
fsubp
mov
sahf
sahf
int
std
lcall
rep
aas
popa
adc
mov
ds
ficompl
sub
cmp
std
pop
lahf
fadds
negl
and
cli
cmp
push
aas
jecxz
popa
xor
mov
sub
mov
adc
decl
mov
xchg
xchg
pop
dec
fstps
mov
aas
fs
movsl
mov
and
aad
dec
and
enter
and
popf
outsl
push
data16
into
dec
inc
into
and
ror
outsl
xorb
cld
fiaddl
and
gs
js
lock
neg
into
xor
lcall
test
dec
inc
sbb
pop
stos
jmp
cli
out
pop
cwtl
xor
test
mov
lret
cmp
and
pusha
mov
insl
arpl
in
xlat
ficompl
mov
adc
dec
xor
jo
mov
ja
int
mov
icebp
inc
push
lock
push
and
jp
fdivs
mov
xchg
pop
sbb
cwtl
push
mov
aad
mov
mov
xchg
sbb
or
dec
and
xor
je
inc
mov
sub
xor
jb
mov
or
push
testl
jl
dec
loope
gs
and
push
or
sbb
xchg
cli
and
mov
cmp
mov
xor
fnstcw
loope
imul
pushf
add
and
cmpsl
lret
push
lea
adc
std
xor
pop
int3
mov
out
fwait
xchg
push
add
cs
mov
xchg
daa
in
mov
sbb
test
jae
es
and
jbe
sbb
ds
scas
jne
addr16
fwait
jbe
test
push
js
jmp
popf
cld
mov
push
dec
xor
pushf
dec
pusha
std
fwait
pop
pop
fdivrp
fcmovu
sbb
and
or
outsb
cmpsb
or
or
pop
lods
inc
lret
gs
pop
dec
push
sbb
std
aam
int3
xlat
add
fcomi
jnp
popa
mov
push
sbb
int
cmp
cmc
mov
and
push
push
lcall
xchg
addr16
xchg
push
imul
dec
test
cmp
mov
hlt
sub
inc
jo
inc
xchg
in
adcl
add
mov
pop
dec
dec
test
pop
scas
cwtl
mov
mov
pusha
cmp
decl
addr16
inc
sub
xor
scas
aam
jg
int3
or
pusha
jg
xor
fwait
push
lds
sub
jp
cwtl
xchg
sbb
sub
clc
pop
jp
das
jne
and
xchg
or
xor
lods
lret
xchg
lock
sti
dec
roll
bt
fdiv
xor
mov
pop
nop
jae
adc
cwtl
jecxz
ljmp
addr16
jl
jns
dec
lret
push
push
pop
in
lods
icebp
sub
jb
inc
and
loop
test
insb
jns
sub
cmp
push
jnp
dec
hlt
xchg
cmp
sub
push
lret
lret
fidivrl
mov
cltd
jg
cmpsb
test
shrb
arpl
dec
dec
add
test
pop
mov
adc
clc
mov
testb
in
xchg
push
fnstenv
and
loopne
inc
lods
out
imul
ficoml
mov
or
lret
dec
push
jbe
das
mov
and
fisubs
lahf
lcall
mov
sub
rcrb
mov
xor
push
jg
lret
mov
movsb
daa
jb
movsb
mov
rorl
or
dec
fcomip
daa
jns
ljmp
imul
cmp
push
and
mov
test
cmp
cmp
add
adc
jg
and
and
mov
xor
add
push
dec
iret
int
cmpsl
mov
xor
dec
clc
stos
sub
shl
push
test
aam
cmp
and
cmc
cli
dec
sbb
aaa
jl
push
and
loope
xchg
lahf
mov
fistpl
nop
jne
adc
scas
into
sub
mov
js
mov
subl
lods
adc
lcall
outsb
mov
jb
mov
clc
inc
test
fs
fdivr
int3
movsl
fstp
xchg
loopne
das
push
push
jge
add
pop
or
jnp
test
mov
mov
clc
popa
push
bound
xchg
fisubrs
in
push
and
aaa
jb
add
mov
mov
dec
out
adcl
lock
add
test
addl
mov
clc
xor
leave
xchg
aad
dec
fidivrl
pop
aaa
and
push
inc
mov
add
xchg
lcall
push
in
out
mov
aas
inc
out
sbb
dec
push
cmp
pop
lods
ret
push
or
lret
add
inc
out
aad
mov
xor
xor
push
jb
mov
testb
mov
scas
and
mov
add
inc
jmp
lcall
inc
out
lcall
sbb
inc
mov
movsb
das
pop
jbe
arpl
cmp
pop
lods
and
add
addr16
pop
js
scas
jp
mov
push
in
fsubl
pop
push
ds
js
pop
shl
add
je
aad
xchg
popf
leave
mov
mov
cmc
adc
and
adc
xchg
pop
xor
mov
cmp
or
inc
add
in
lds
jmp
stc
inc
pusha
xor
adc
mov
popa
cmp
adc
mov
mov
or
jo
imul
pop
lret
sbb
mov
jbe
dec
lock
dec
enter
jp
mov
incb
rorb
in
pop
xor
or
call
push
pop
stc
mov
shl
cmp
and
jnp
push
orl
fdivs
and
mov
ret
gs
stc
jle
xlat
stos
int3
push
lcall
or
in
mov
scas
clc
shrb
mov
mov
leave
fistpll
adc
mov
or
sbb
sub
jno
cmp
sub
sub
pop
sub
fsubr
push
cltd
fsubs
in
mov
mov
rcrb
std
cmp
inc
test
out
sub
xchg
insl
call
shrl
inc
data16
cs
jge
mov
fs
outsl
mov
xchg
out
xor
rclb
adc
jb
cmpsb
xchg
xchg
pop
add
xlat
stc
in
mov
push
popf
aas
dec
imul
jo
por
fwait
addb
pushf
inc
inc
mov
jecxz
mov
adc
xchg
pop
icebp
push
mov
cmp
movsl
popf
mov
popa
fistpll
cwtl
sub
jmp
add
insb
stc
std
mov
mov
inc
out
psubsb
sti
aaa
jb
cmp
loopne
mov
inc
into
ss
xchg
mov
inc
and
fadds
std
push
cmpsb
rclb
mov
dec
in
pop
add
lcall
cmp
xor
sti
test
lret
insl
push
pop
stos
bound
aam
mov
jmp
lahf
notb
dec
mov
sbb
sub
es
jge
mov
adc
push
push
mov
imul
adc
fisubl
aaa
sbb
nop
jbe
insb
inc
jns
push
in
mov
stc
cmpsl
adc
lods
out
xchg
inc
into
mov
and
cmp
mull
ret
xrelease
leave
test
inc
or
xchg
pop
xchg
into
fcmovu
pop
xchg
dec
stc
les
dec
mov
fsubs
out
ds
inc
push
inc
push
ja
lods
pop
xchg
adc
dec
stos
and
or
aas
xchg
push
fiadds
shll
gs
out
sti
aaa
mov
inc
mov
fisttpll
outsb
int3
xor
or
lahf
xor
in
outsb
rcl
jg
jl
popl
or
ss
call
add
arpl
imul
aas
sahf
jnp
push
xchg
lods
loope
mov
lahf
add
out
jb
je
push
or
dec
rolb
arpl
movsb
and
pop
inc
jmp
jne
movsl
adcl
jae
jb
push
sub
test
mov
sarl
pop
jle
push
add
rep
into
push
push
outsb
jecxz
cmc
imul
test
aam
adc
pop
addr16
add
mov
pushf
mov
mov
and
push
cmc
dec
adc
inc
loop
mov
xor
mov
push
or
jns
in
rorb
imul
scas
enter
mov
mov
mov
xor
mov
adc
add
out
scas
xchg
sub
push
inc
push
fcmovne
jo
sbb
jbe
test
aaa
xor
cmp
mov
insl
dec
fcomps
xchg
pop
push
pop
lret
pop
mov
mov
jae
sti
xlat
ret
xchg
mov
cmp
stos
mov
xor
push
sub
xchg
adc
or
and
mov
inc
push
cli
enter
push
jno
sbb
mov
xchg
sti
mov
add
adc
jnp
lock
jge
jne
repnz
ret
idivl
sti
and
pop
dec
jno
outsb
out
xlat
cvtpi2ps
in
dec
mov
cmp
in
test
pop
jb
mov
mov
loop
int
ret
mov
stos
sub
push
inc
xchg
xor
pop
cltd
dec
jge
mov
pushw
clts
fcmovne
add
add
xor
in
mov
jb
adc
cwtl
movsl
jbe
push
sbb
inc
push
enter
jp
les
or
les
ret
push
ret
pop
bound
mov
cmp
inc
mov
arpl
add
cwtl
xor
jo
add
ljmp
xor
int3
mov
test
jl
sub
dec
stos
pushf
mov
mov
jae
mov
jbe
xchg
mov
xchg
mov
mov
mov
push
cmp
mov
sub
or
stos
push
sbb
cmp
adc
xor
lea
mov
lods
dec
lcall
imul
mov
pop
clc
js
js
xchg
mov
jo
cmp
jne
push
divb
and
xor
lods
jbe
pop
rcr
mov
push
pop
xor
test
out
mov
mov
das
jae
mov
into
jl
fmul
adc
and
or
dec
dec
outsb
jb
rolb
inc
xor
mov
mov
jl
xchg
mov
xchg
dec
xchg
fdivs
enter
hlt
scas
faddl
stos
clc
add
in
push
rolb
test
inc
pusha
jg
xor
dec
scas
scas
sbb
sbb
test
push
call
stc
adc
mov
sub
xor
push
pop
addr16
daa
mov
sub
and
push
inc
cmpsl
or
dec
mov
push
in
cmp
push
into
dec
lret
das
pop
cs
in
or
inc
inc
cmp
mov
xor
and
insl
xor
sbb
xor
scas
das
jnp
push
imul
shll
pop
push
outsb
rolb
loope
aaa
mov
out
cli
cltd
mov
fidivl
jecxz
cmp
int
inc
jns
lahf
mov
test
jle
lret
mov
push
inc
or
mov
pusha
cmp
cld
dec
or
sub
xchg
dec
and
es
into
movsl
test
dec
push
pop
in
mov
and
repnz
xchg
dec
adc
jg
push
mov
repnz
std
shrl
rcr
mov
cmc
notl
rcr
lret
jmp
bound
or
incl
jle
sub
cmc
in
jecxz
js
and
out
xchg
sbb
std
and
inc
jp
mov
movsl
cmp
hlt
ret
lock
mov
dec
mov
jmp
in
insl
movsl
xchg
leave
out
jnp
imul
pop
xchg
cld
loop
je
addl
es
and
notl
push
adcl
cltd
lods
or
pop
jp
les
je
inc
dec
out
loop
cmc
jbe
inc
sbb
cmc
nop
stos
inc
dec
cmpsl
dec
out
lods
xor
xchg
push
xor
clc
rol
fcomps
xchg
xchg
fadd
cmp
or
sbb
mov
adc
mov
dec
xor
sub
iret
stos
xorb
in
movsl
inc
out
in
push
push
daa
pop
dec
jns
dec
dec
shll
test
push
mov
mov
mov
xchg
ja
icebp
lds
cmp
xlat
mov
pushf
mov
lret
xchg
cmp
test
jle
rcll
lds
jno
fistps
scas
cmpsl
pop
cmp
sbb
aam
iret
push
ret
stc
xchg
and
mov
fucomi
or
imull
ljmp
mul
popf
inc
fwait
cmp
shlb
mov
pusha
pop
mov
not
movsl
dec
cmp
mov
xlat
dec
jne
stos
adc
or
addr16
mov
insl
sbb
popf
mov
subl
xchg
cmp
idivl
enter
adc
sarl
fisubrl
movsl
pop
ljmp
enter
shlb
and
jge
ljmp
icebp
xlat
jns
fwait
jl
aam
mov
nop
movsl
jno
cmp
pop
dec
imul
fsubl
aad
rorb
imul
push
xchg
cli
scas
jge
add
inc
adc
scas
movsl
or
aam
xchg
jae
aad
jmp
std
std
mov
std
xchg
xorl
pop
pop
sbb
cld
jg
fiadds
sub
cltd
mov
mov
popf
cwtl
jo
mov
sub
fs
sbb
int
fwait
aaa
xchg
add
inc
das
js
rorb
xor
rolb
insl
fistpll
cmpb
xor
xor
or
mov
push
js
testb
push
bound
mov
dec
inc
xor
stos
scas
outsb
in
jle
inc
test
mov
cwtl
and
xchg
cmpsl
insl
aam
sahf
or
pop
nop
loopne
dec
and
adc
bound
decb
roll
outsl
bound
in
mov
leave
adc
xlat
or
dec
jmp
pop
punpckhdq
orl
stos
sbb
add
push
clc
daa
mov
jl
push
iret
enter
fsubrl
mov
into
inc
into
rorb
in
bnd
or
jg
push
xchg
inc
add
push
push
aam
out
xchg
sbb
sbb
bound
in
cltd
jge
das
xlat
out
and
pop
pop
pop
int
dec
int
xchg
cwtl
mov
fdivs
or
mov
arpl
push
enter
lock
mov
mov
notrack
jecxz
push
in
loopne
insb
cmp
pop
clc
push
imul
insb
cmpsl
lea
sub
pop
mov
into
inc
inc
xchg
test
stc
push
pop
lret
movsb
in
mov
adc
stos
mov
cmpsl
push
cmp
adcl
data16
sbb
mov
push
xchg
xor
ret
xchg
std
and
or
pop
add
jo
sub
insb
mov
mov
and
lahf
mov
xchg
sbb
mov
adc
jl
jp
lea
add
into
add
stc
int3
dec
aam
ja
clc
and
sbb
rorl
fs
outsb
fldcw
mov
lea
jmp
je
xor
movb
fsubs
fisubrl
jo
mov
imul
sub
mov
jns
inc
jl
and
insb
push
inc
cltd
fnstenv
pop
in
mov
dec
aas
push
int3
mov
lea
arpl
push
incb
repz
push
or
jne
jnp
dec
sub
fsub
stos
jge
loopne
jg
pshufw
popf
jo
cltd
sbbl
std
sahf
ljmp
cwtl
mov
mov
js
xchg
mov
rorl
popf
test
add
mov
sub
mov
fcomps
and
pop
ljmp
data16
inc
cmpsl
cmpsl
cmp
mov
cwtl
pop
jl
cmp
sub
sub
scas
shll
xor
shl
sbbl
mov
mov
or
and
jns
jecxz
mov
testl
inc
lds
pop
xchg
loope
pop
leave
push
scas
cmp
ds
sub
ret
out
xchg
jbe
push
mov
and
jge
cmc
xchg
aam
shrl
pushf
cmp
aam
out
cmp
out
in
dec
dec
adc
pop
push
xor
cwtl
adc
jns
adc
flds
jne
imul
xchg
xchg
imul
mov
and
inc
dec
in
repnz
bound
mov
push
sub
popf
je
add
cmp
in
jo
ljmp
push
xchg
cmc
cmpsl
test
jecxz
inc
rcrl
pop
pop
mov
pop
sbb
cmp
stos
roll
adc
dec
mov
call
mov
scas
mov
imul
mov
shll
or
das
nop
lock
cmp
inc
pusha
in
or
adc
add
push
outsb
bound
add
pop
mov
dec
and
lahf
push
adc
in
mov
les
ret
js
cmc
push
add
inc
xchg
out
daa
loopne
cmp
fidivrs
lea
cltd
mov
and
cltd
cmp
push
mov
aam
dec
pop
mov
out
pop
cmp
jge
gs
mov
stos
mov
sbb
jne
inc
mov
add
jb
mov
sub
pop
or
stc
xor
loopne
bndldx
mov
sub
or
cmpsl
lahf
inc
add
mov
mov
outsl
mov
pop
icebp
fsqrt
shll
inc
aad
cmp
out
pop
xchg
lea
mov
gs
pop
mov
lea
mov
add
aas
sbb
mov
pop
in
push
and
loopne
jle
ds
out
sbb
and
jno
jae
out
ficomps
andb
repz
jbe
or
xchg
dec
xor
xchg
add
rorb
jmp
ds
mov
xchg
jmp
pusha
mov
nop
dec
inc
mov
cld
mov
in
ljmp
lock
lods
jg
stc
mov
cmp
cmpsb
fadds
sbb
mov
add
push
jns
add
cmp
push
inc
fdivrs
aaa
shrl
nop
add
popf
dec
sbb
push
sub
test
xor
leave
lock
and
aad
xchg
adc
pop
movsl
scas
shl
into
pop
dec
push
lret
xchg
mov
test
xchg
stos
lock
push
fiadds
adcl
es
mov
mov
ljmp
lea
pop
outsl
ret
lock
daa
insl
addr16
or
add
xor
dec
movl
notb
insb
adc
xor
mov
js
push
jp
jmp
adc
fnsave
sub
in
xchg
or
cmp
in
stos
lods
inc
aad
add
jl
out
add
or
xchg
push
in
pushf
adc
pop
mov
decl
dec
mov
sub
xchg
imul
mov
adc
jge
inc
sbb
dec
mov
and
cwtl
mov
out
adc
inc
jbe
shlb
add
aam
sub
cmc
int3
les
mov
cmpsl
push
mov
add
dec
imul
adcl
pop
sub
lahf
out
jae
sub
testl
xchg
sub
dec
or
xchg
mov
and
xchg
lea
cmp
lds
adcb
mov
adc
xchg
call
xchg
xchg
jmp
lcall
clc
js
or
jns
xchg
lods
push
in
iret
int
push
jle
push
sub
cltd
dec
push
xchg
jle
sbb
das
daa
imul
mov
hlt
xchg
mov
xchg
xchg
dec
int3
mov
xor
lods
shll
outsb
cmc
pushf
ljmp
ret
sti
js
rorb
adc
lods
in
js
dec
cld
negl
in
mov
loopne
packsswb
test
pop
hlt
mov
fadds
jnp
mov
mov
shrb
ss
xor
cmpb
add
loopne
cmc
xchg
lcall
es
repz
imul
sub
xchg
mov
xlat
nop
jnp
lock
shll
adc
popl
xor
adc
push
xor
pcmpgtb
ficomps
push
push
fisubl
and
and
gs
test
dec
cs
inc
fdivrl
fnsave
fnsave
insb
or
adc
lea
mov
add
xchg
xchg
jnp
inc
xor
push
lcall
dec
push
xor
loop
push
sbb
cmpsl
pop
cmpsb
call
mov
shlb
dec
scas
dec
inc
inc
in
lds
pop
jle
shll
test
lods
shrb
push
fcoml
les
pop
pop
and
fst
test
xlat
and
add
or
fs
xor
xchg
repz
jnp
ret
out
xchg
loop
sbb
iret
lcall
addb
mov
sbb
jo
and
fcmovnu
push
push
jmp
orl
or
insb
and
fmuls
jo
inc
outsl
movsl
imul
les
push
push
adc
in
idivb
mov
ja
pop
lods
lods
in
lds
lods
in
add
cmp
mov
mov
mov
add
negl
pop
jge
mov
mov
mov
call
xchg
in
xchg
or
jo
cmp
mov
enter
rcl
imulb
mov
xor
mov
sar
fs
mov
iret
fldl
dec
sbb
fcmovbe
cmp
icebp
out
sub
pop
shrl
arpl
sarl
mov
gs
inc
std
jnp
jg
jge
insl
pop
add
add
aad
outsb
rcl
lds
fiadds
loopne
sub
inc
cwtl
mov
xor
idivl
out
adc
mov
add
test
xchg
je
cmp
mov
dec
sub
xchg
cmp
inc
jg
xor
in
xchg
pop
fsubs
jecxz
xor
xlat
lcall
das
addr16
lahf
mov
mov
adc
jns
repnz
fbld
cmp
mov
cmp
pop
cld
sbb
test
ljmp
imul
mov
mov
sarb
hlt
in
mov
or
adc
aas
and
mov
in
adc
mov
mov
std
adc
adc
pop
adc
stos
mov
push
push
lods
cmp
pop
loope
sbb
rcr
add
sub
addr16
out
mov
xchg
mov
mov
sub
cmpsl
cltd
push
pop
xchg
or
sbb
shlb
in
ds
mov
scas
inc
cmc
dec
hlt
das
mov
addr16
fneni(8087
movsb
ret
arpl
sbbl
sub
mull
pop
xor
fistps
or
in
loopne
push
imulb
nop
mov
xor
hlt
jbe
int3
sub
insl
lds
sbb
sbb
pushf
aad
push
adc
movl
ret
or
xchg
inc
sti
dec
inc
pop
jb
cmp
subl
mov
das
xchg
dec
sti
xor
loopne
daa
inc
mov
mov
jle
repz
sub
mov
test
push
shlb
clc
mov
mov
xchg
xorl
push
test
fstpl
jo
sbb
or
cmpsb
cmpsb
push
hlt
stos
or
cs
jo
adc
mov
pushf
xor
popf
xchg
imul
push
push
daa
mov
xorb
into
pushf
sbb
shll
fcoml
int3
pop
mov
in
je
int
popa
pop
xor
xchg
push
sti
dec
mov
lahf
stos
lock
pop
inc
icebp
out
cmp
mov
push
dec
pop
imul
je
aad
notb
mov
scas
xor
pop
jle
inc
pop
lahf
lods
out
pop
fsubrs
pushf
mov
xlat
push
pop
scas
scas
jecxz
lods
les
pop
dec
pop
adc
mov
xchg
leave
cmpb
repz
in
inc
sti
jge
aad
cmp
push
push
aam
cmp
mov
xor
sub
iret
popf
xchg
jp
xchg
xlat
cltd
push
push
insl
sub
mov
mov
or
and
lret
mov
data16
icebp
notl
jle
adc
movsl
adc
dec
mov
std
xor
and
cmp
in
or
mov
mov
push
cld
push
cmp
adc
fcmovu
mov
outsl
jmp
cmp
pushf
hlt
mov
inc
mov
stc
movsb
push
jbe
pop
lcall
flds
sub
out
sti
mov
sub
ljmp
lahf
out
lea
imul
cli
jl
iret
mov
mov
xchg
sahf
xor
jb
mov
call
sub
mov
cmpsl
push
call
pop
fwait
in
repz
dec
xor
mov
mov
or
and
adc
bound
jge
pop
cld
cmpsb
in
lahf
mov
pop
cli
xor
testb
jae,pn
popl
lret
xchg
xor
cwtl
ja
jno
jo
cmpl
push
xchg
jg
int
pushf
adc
in
xchg
sbb
dec
out
xchg
in
inc
out
mov
mov
mov
pop
xchg
fcmovb
xchg
dec
xchg
mov
pop
sub
fstpl
add
cwtl
sbb
push
subb
mov
adc
mov
cmpsb
ret
sub
push
loop
mov
xor
mulb
cmp
ja
pop
sbb
sub
sbb
rclb
jl
cmp
adc
imul
fdivrs
in
mov
sub
cli
cmc
aas
ds
mov
lock
stc
pavgb
push
mov
cmpsl
xchg
clc
jb
xchg
or
std
mov
shrl
lods
inc
cld
mull
cmp
inc
or
xchg
add
push
push
lods
sub
xchg
push
add
pop
xor
mov
int
inc
lahf
inc
xchg
test
test
and
lret
aam
add
imul
cmp
inc
and
jge
sub
imul
incl
cmp
xor
in
pop
mov
cmc
and
push
out
xor
or
fdivl
gs
pop
mov
add
mov
xchg
ljmp
jne
mov
mov
and
sbb
xchg
xchg
stos
dec
adc
jb
into
pop
xor
pop
or
xor
xchg
icebp
push
sbb
loop
test
jg
mov
cmpsl
xor
test
adc
int
mov
pop
pop
or
nop
cmpsb
jmp
jle
push
mov
stos
loop
xchg
mov
outsb
daa
fildl
mov
sub
pop
lea
cmp
into
lods
xor
in
mov
out
adc
pop
jge
popa
xchg
iret
add
jge
das
lods
sub
pop
dec
rorl
popl
sub
mov
or
insl
sahf
mov
xchg
mov
mov
mov
mov
mov
lds
fistps
mov
dec
outsl
aas
fistl
xchg
dec
cmp
mov
xchg
cwtl
mov
leave
insl
xchg
pop
mov
xor
adc
push
call
in
pop
xlat
cltd
mov
or
sbb
cwtl
mov
jle
cltd
test
stos
fstl
or
mov
pop
add
mov
dec
push
sbb
fisubrl
adc
mov
and
in
sub
add
mov
into
add
mov
xor
push
mov
repnz
push
test
into
lods
lahf
pusha
add
stos
dec
xchg
mov
push
or
and
es
pop
icebp
mov
gs
aam
mov
sub
je
js
and
push
out
rorb
fisttpll
test
rcrl
push
in
fidivl
sahf
scas
test
cmp
adc
cld
and
or
stos
fst
pop
push
call
subl
aam
sub
adc
pushf
out
pop
xor
sbb
out
ret
sbb
jmp
lods
outsb
cmpl
std
dec
mov
inc
lods
icebp
push
xchg
mov
mov
and
ljmp
fcmovnbe
in
sub
xor
cwtl
xchg
rolb
jb
push
inc
add
insl
push
inc
lret
xor
je
aad
jo
mov
cwtl
test
test
and
push
out
lahf
insl
sbb
jg
fistps
sti
mov
loop
dec
outsl
outsb
mov
xorl
scas
xlat
int
sbb
xor
mov
rorb
ficomps
ror
mov
sub
test
stc
stos
and
mov
inc
test
mov
lods
sbb
or
and
add
inc
mov
jmp
test
shl
bound
sbb
sahf
jnp
je
mov
test
mov
scas
fmul
dec
sbb
cltd
push
mulb
mov
adc
adc
aaa
movl
lods
in
incb
jae
fstl
frstor
incb
cld
pushf
inc
xchg
and
cmp
lods
hlt
ljmp
push
outsb
jns
cmp
jbe
sub
ret
cltd
pop
mov
out
xor
popa
movsb
xlat
insl
repz
movsb
dec
xor
repz
ror
mov
cmp
ss
out
repnz
pop
dec
sahf
push
and
inc
ja
lods
lcall
jno
dec
test
fstl
adc
fisttpl
add
addr16
push
add
jmp
loope
dec
dec
cmc
in
ret
mov
pop
ja
xchg
ds
push
adc
mov
test
sub
inc
bnd
jne
jge
stc
movsb
scas
loope
pop
and
outsb
js
sub
cmovo
call
mov
xchg
jecxz
mov
bound
das
xchg
and
stc
popa
push
fdivrl
mov
aad
lock
jmp
stos
ret
dec
inc
adc
mov
push
sub
sbb
xchg
inc
inc
cmp
jo
push
push
jae
cmp
pop
in
aas
jl
cmpsl
xlat
push
into
sbbl
pop
jae
xchg
mov
adc
insl
and
ds
mov
sbb
xor
mov
into
push
loop
lds
mov
test
imul
or
push
mov
dec
xlat
out
or
dec
in
inc
andb
push
roll
push
mov
cmp
and
jl
std
xor
notb
pop
adc
or
clc
mov
outsb
sbb
adc
movsl
imul
sub
jle
lahf
out
mov
aam
insl
hlt
lea
push
ljmp
xchg
fldcw
inc
fldcw
in
cmp
xchg
popa
adc
cmp
sub
mov
das
pop
cmp
mov
pop
or
cmpsl
call
push
adc
push
paddusw
xchg
fists
or
xor
int
mov
loope
jnp
sbb
negb
repz
and
add
aad
jmp
cli
aas
daa
pop
cwtl
scas
cmc
jo
les
pushf
jae
mov
push
mov
xchg
icebp
inc
jp
ljmp
and
outsb
push
fildll
or
mov
dec
iret
fcmovu
insl
ss
adc
mov
push
je
cli
imul
fldl
ret
lcall
pusha
push
clc
mov
popf
insl
inc
out
and
sbb
das
xor
jle
jo
jp
hlt
sahf
ret
push
pop
xlat
add
inc
shr
push
push
scas
pop
lds
fcoml
ss
sub
pop
cmp
loope
or
fdivl
mov
or
fisttpl
imull
xlat
out
xor
and
iret
daa
dec
andl
xchg
pop
adc
and
xor
popa
sbb
pop
and
ja
in
add
jmp
aad
test
jb
scas
mov
test
add
sub
or
popf
xchg
shlb
add
ret
lret
dec
pushf
ss
out
clc
xor
aam
push
adc
jmp
fdivl
dec
popf
hlt
in
das
push
loop
pop
mov
ja
push
test
mov
ret
mov
call
xor
mov
mov
es
aad
sti
sub
test
and
leave
sub
inc
jmp
mov
adc
icebp
inc
lds
pushf
mov
lahf
fdivs
fcoms
loope
fcompl
mov
in
jbe
sbb
inc
push
cs
push
pushf
jnp
cmp
clc
pop
jbe
inc
add
stos
push
cmp
ss
icebp
movsl
pop
adc
sarl
inc
jb
cwtl
mov
lahf
repnz
xchg
jns
call
mov
ljmp
push
xor
ret
xor
pop
inc
out
je
lea
inc
subl
sub
imul
push
mov
bound
lock
and
sub
sbb
scas
xchg
xor
shlb
ja
inc
and
test
cld
adc
fidivrl
add
cmpsb
pop
mov
or
shlb
mov
mov
jae
push
andb
arpl
lahf
ret
loope
jp
mov
insl
in
lret
inc
push
lock
in
or
mov
fcmovb
mov
cli
aas
rcll
sbb
shlb
jmp
adc
mov
mov
loope
dec
not
out
sahf
inc
dec
test
fsubs
aas
or
cmp
sbb
sbb
sahf
daa
je
cmc
cltd
sarb
add
std
pop
mov
adc
jbe
mov
add
lock
out
das
in
testb
inc
sarb
pop
mov
das
jns
lock
jo
shrb
mov
ja
popa
add
cmp
fisubs
test
adc
push
les
incb
pop
or
ds
adc
push
es
xchg
int
cmpxchg
adc
inc
mov
or
les
push
jnp
rclb
popf
jno
cmp
push
das
int
mov
jb
out
outsb
notb
fldcw
stos
iret
andb
push
push
cwtl
mov
mov
inc
jmp
inc
pushf
fcomps
lret
push
cli
adc
cwtl
sbb
mov
mov
pushl
je
sub
mov
sub
push
xor
in
cltd
sti
ret
jecxz
jns
stos
xor
xor
dec
mov
sbb
js
repnz
and
xchg
add
push
mov
add
jae
xor
loopne
lcall
fiadds
sti
push
pop
out
and
push
push
leave
xchg
mov
xor
inc
fwait
xlat
sbb
mov
out
ja
sbb
pop
int
jbe
pop
jbe
in
mov
mov
push
inc
notb
into
xchg
inc
cmc
lret
push
adc
xchg
mov
and
and
call
push
mov
pmuludq
jle
dec
gs
sahf
and
sub
pushl
add
movnti
dec
cmp
out
xor
aam
ds
js
nop
xchg
testl
movb
add
arpl
fimull
pop
mov
mov
dec
leave
push
imul
mov
in
add
data16
divb
xor
mov
and
scas
jmp
push
sub
and
std
cmpsb
stos
add
std
mov
adc
jnp
hlt
dec
aas
test
xor
fs
scas
dec
pop
or
maskmovq
imull
insb
xor
add
shrb
xor
jge
popf
negl
mov
or
add
pop
and
and
test
mov
mov
adc
and
jl
dec
dec
mov
test
out
xchg
pop
ret
setne
jle
imul
dec
lcall
mov
mov
icebp
mov
mov
push
sbb
or
ss
pop
pop
cmp
mov
adc
repnz
clc
repnz
xchg
sub
or
add
jbe
stos
aam
jns
dec
push
stc
mov
fsubr
in
and
out
push
fidivs
fsubrl
or
cld
imul
and
popf
addr16
enter
daa
xor
inc
sub
or
adc
push
mov
aaa
jnp
jo
fisubrl
es
jge
jo
int3
and
out
lods
dec
idivl
fs
dec
mov
mov
cwtl
int
mov
lahf
add
pop
fisubrs
test
fisttpl
mov
out
push
cli
inc
lods
imul
lods
jle
mov
int
inc
and
repnz
hlt
inc
pop
sub
adc
je
xchg
shlb
decb
mov
xor
lods
call
jae
insl
push
sub
in
xchg
add
pushf
jae
idiv
icebp
fcmovnb
scas
scas
into
cmpsl
add
sub
movsl
sub
sbb
mov
bound
push
pusha
mov
loope
fnstcw
aam
push
mov
xlat
pushf
adc
xor
sbb
sub
sub
mov
into
jb
adc
ljmp
movsb
xchg
dec
lods
xlat
pusha
xor
out
out
and
aad
iret
stos
pop
bnd
loop
lret
cmp
sbb
pop
push
ret
xlat
mov
mov
jge
sub
cmp
xor
mov
addr16
mov
dec
outsb
movsl
push
loop
mov
testl
test
and
mov
scas
cmpl
push
mov
pop
fwait
dec
sahf
lds
lret
mov
and
adc
pop
xor
fwait
and
sti
or
lret
jg
inc
out
xchg
lret
add
xchg
lds
dec
hlt
fcmovu
repnz
mov
push
pop
push
aas
loop
cmp
xchg
mov
test
aaa
mov
cmp
xlat
push
pusha
mov
xor
frstor
call
mov
sbb
sarl
jl
xor
and
icebp
sbb
pop
ret
inc
icebp
jae
xor
push
mov
lods
aas
pop
xor
pop
and
stc
ret
sahf
ss
pusha
sbb
mov
xor
fiaddl
mov
or
jge
iret
mov
cmpsb
lods
jge
mov
hlt
xlat
addr16
mov
cmp
adc
inc
mov
dec
call
xor
pop
outsl
repz
int3
movsl
dec
sbb
lcall
sbb
cli
adc
fadds
cmp
data16
roll
imul
jl
cmpsl
sub
cli
add
pop
pop
adc
loope
andl
fldenv
dec
jae
leave
or
mov
mov
movsl
push
cmp
icebp
pop
loope
fsubrl
cmp
clc
dec
cmc
mov
fcomp
add
fwait
pop
fmulp
inc
mov
aaa
dec
pop
fxch
aas
push
jmp
movsb
sbb
imul
dec
inc
dec
inc
mov
shll
push
mov
outsb
shlb
loop
ja
dec
push
xchg
and
add
sub
lock
push
or
push
cs
dec
lock
push
and
aaa
stc
jecxz
es
ret
popf
pop
inc
mov
cwtl
add
sbb
jne
cmc
rcr
push
std
or
xchg
movsl
aas
fcmovne
mov
push
inc
adc
subl
lahf
mov
repnz
data16
out
mov
dec
sahf
in
cmc
insb
cmpsb
mov
out
mov
pop
cmp
mov
fisubrl
sbb
add
jne
jo
pop
inc
jnp
cs
inc
pop
xor
inc
add
jle
repz
adc
aas
push
pop
sub
enter
negl
scas
lods
jns
add
ss
fbstp
fisttpl
mov
sbb
mov
lock
ljmp
inc
movsb
inc
xchg
mov
fldl
xchg
aaa
icebp
pusha
cwtl
xor
int3
pop
jmp
sbb
mov
cmp
insl
scas
popf
sti
mov
sub
xchg
cs
hlt
adc
add
ja
jne
jg
xchg
cmpsb
pop
sbb
out
lcall
sub
movl
iret
lcall
ficomps
fwait
scas
test
add
mov
cmp
mov
mov
mov
out
fstpl
pop
xchg
sti
arpl
dec
out
in
cld
push
dec
inc
sub
and
das
mov
or
xchg
mov
push
cmp
mov
push
pop
xchg
mov
clc
xchg
jne
les
in
pop
je
std
pop
ss
push
call
mov
ret
out
cmp
sub
cmpsl
adc
ja
lods
fmulp
cmpsb
cmp
cmc
mov
mov
and
inc
mov
pop
enter
push
daa
repz
or
jl
fisubs
lret
cs
nop
mov
in
lods
fs
and
push
push
push
xchg
iret
fs
jnp
lret
mov
rorl
push
lcall
pushf
subb
movsl
add
push
push
jbe
cmp
lock
daa
sbb
jl
cmp
arpl
and
sahf
xchg
dec
pop
je
mov
mov
dec
pop
dec
clc
shrl
scas
xlat
dec
jb
cld
fisttpl
fidivl
jne
mov
jnp
sahf
lahf
pop
out
mov
clc
mov
xor
out
xlat
mov
sbb
movhps
out
and
in
daa
dec
cmp
and
std
xchg
std
lods
out
pop
into
jnp
push
es
neg
adc
loope
mov
hlt
pop
loop
xlat
xor
in
jmp
jg
dec
js
adc
mov
sub
ljmp
dec
int
int3
inc
arpl
dec
je
or
mov
cwtl
mov
cvtps2pi
leave
sti
addr16
inc
sti
pop
push
mov
sub
dec
jp
imul
loopne
lret
fildl
fdivrl
shr
add
pop
stc
fsubs
subb
leave
push
mov
xchg
dec
push
jmp
lea
or
xor
pop
pop
jo
or
mov
orb
loop
scas
xchg
lds
xor
movsb
cmp
and
and
ret
nop
xchg
popf
jno
cmp
cwtl
icebp
ror
loopne
out
out
lret
or
out
subb
adc
popa
push
imul
sub
xchg
xchg
pop
cmp
cmp
insb
mov
cmp
dec
ja
push
dec
sysret
jp
daa
sbb
enter
aad
add
mov
xor
cmp
je
das
mov
hlt
iret
pop
cld
mov
loop
call
popf
cmp
fwait
mov
fiaddl
dec
mov
mov
pop
push
ljmp
mov
shl
das
sub
out
ja
xchg
push
test
rcr
aaa
mov
xchg
pop
pop
or
mov
mov
jl
fnsave
adc
pop
inc
pop
inc
fwait
jno
addr16
push
sub
int3
out
adc
pop
lret
jbe
cmpsl
jb
ljmp
push
dec
mov
ljmp
in
cmp
test
jle
or
xchg
push
jp
sahf
into
fcomps
clc
mov
into
dec
jo
stc
inc
xchg
xor
filds
in
cli
shrl
jbe
push
add
mov
push
js
ret
imul
inc
lcall
sbb
sbb
enter
pop
push
cmpsb
push
push
lea
mov
mulb
fwait
add
xor
pop
jecxz
and
sbb
ljmp
jne
pop
std
push
push
mov
cmc
out
mov
nop
in
lods
test
fwait
jmp
popa
jp
jae
pop
call
sbb
into
inc
adc
mov
jl
pop
fwait
in
xchg
add
add
std
into
inc
jmp
dec
mov
dec
mov
test
pop
jo
rorl
add
in
xchg
xchg
mov
hlt
sub
adc
sbb
clc
ret
xor
and
hlt
jae
inc
das
cmpsl
inc
inc
xchg
lret
mov
push
loop
lods
add
mov
in
int
cltd
sahf
xor
lret
sti
mov
dec
stos
jns
mov
inc
divb
jle
fwait
das
outsb
pop
xor
mov
push
cmp
inc
ds
lret
repz
in
push
outsb
pop
dec
dec
dec
fs
jo
lcall
cmpl
outsl
clc
and
clc
xor
or
xchg
or
dec
add
inc
es
push
push
jbe
test
sbb
or
cmp
mov
fadd
jge
cmc
and
icebp
in
dec
and
shl
sub
rcl
sub
enter
outsb
in
fisttpll
xor
adc
mov
pop
xchg
and
pushf
cld
imul
mov
inc
insb
mov
sub
jecxz
in
inc
mov
inc
popa
sbb
jne
sahf
sbb
jo
inc
and
fs
dec
jns
mov
sub
jbe
roll
sbbl
add
lods
mov
jp
ret
cmpl
mov
fldl2e
mov
dec
jbe
push
xchg
sbb
sbb
xlat
mov
add
sarl
xlat
sbbl
movsb
adc
dec
loope
daa
clc
imul
in
popa
pop
cmp
xchg
movsb
insl
mov
adc
das
add
ret
lods
stc
dec
mov
xor
mov
sub
and
std
pushf
bound
pop
cltd
xor
inc
mov
out
cwtl
xor
push
lock
or
mov
pop
inc
jbe
xchg
mov
jbe
push
cs
pop
insb
sti
dec
and
je
mov
shlb
xor
push
lahf
jns
hlt
fwait
xorb
insb
gs
adc
clc
pop
subl
xor
pushaw
add
adc
sbb
inc
fistps
in
sarb
jnp
ja
fiaddl
jg
addr16
adc
lock
mov
pusha
jle
shr
push
sbbl
push
ja
scas
and
cs
mov
test
adc
lds
push
mov
orb
add
icebp
popa
movsl
fisttps
push
push
or
sub
and
repnz
push
ja
xor
loop
aam
loop
mov
nop
movsl
divb
fucom
cmpl
mov
mov
sub
sahf
push
adc
movb
lds
push
push
js
out
sti
mov
int3
addr16
negb
cmc
jno
outsb
flds
lahf
roll
insb
aad
sbb
mov
jno
test
mov
mov
cmpsl
cwtl
pusha
mov
cs
outsb
sbb
scas
ret
and
je
in
push
outsl
inc
pop
add
or
jle
inc
cmp
adc
xchg
nop
orb
into
jle
pushl
imulb
sbb
mov
sub
mov
add
sbb
adc
pop
push
fdivrs
xor
pop
xor
popf
fldcw
xchg
dec
push
fbstp
sbb
ficoms
lret
sub
dec
repnz
out
aam
fwait
cmc
inc
push
inc
sub
jg
cmp
dec
push
xchg
sbb
out
mov
scas
ret
imul
loop
je
jo
ret
cmp
mov
int3
sbb
cmp
cmp
mov
ret
mov
aad
mov
sahf
mov
cmpsb
and
popa
cmp
mov
mov
loopne
mov
dec
xchg
data16
incb
test
repnz
movb
lahf
mov
cmp
jno
adc
xchg
xchg
mov
jge
pushf
jmp
stos
jl
stos
cld
or
add
cmp
test
xorb
pop
add
mov
ss
lcall
xchg
push
xchg
jae
add
mov
test
stos
adc
inc
mov
inc
lcall
aad
mov
xor
or
cmp
dec
lahf
int
xor
and
pop
sub
enter
pushf
scas
dec
mov
sbb
xchg
lcall
lods
enter
sbb
loopne
adc
mov
mov
adc
lret
test
pop
repz
adc
loopne
dec
ret
movsl
xor
imul
xchg
push
inc
sub
jg
lods
inc
lea
pop
xor
dec
cltd
lret
inc
divb
xor
mov
jne
inc
adc
pushf
cmp
fidivl
sub
clc
mov
stc
and
dec
cmp
movnti
jo
inc
mov
add
in
cwtl
push
cld
lods
mov
inc
loopne
adcb
and
je,pn
movl
push
sbb
and
lock
loop
and
cmpsb
dec
xchg
jbe
pop
pop
fisttpl
jecxz
insl
fldt
cli
das
mov
mov
mov
insl
rol
pop
mov
push
repnz
testb
cld
add
cs
dec
or
outsb
inc
xchg
dec
mov
mov
shl
push
ret
inc
cltd
int
mov
sarl
inc
add
xor
std
jb
cli
repz
mov
xor
sbb
jne
mov
dec
inc
sbb
sahf
fs
push
movsb
loope
fs
icebp
add
or
jl
daa
out
and
cs
and
mov
dec
nop
jns
pop
cltd
lea
inc
mov
xor
and
ljmp
lods
scas
add
test
lret
xchg
into
adc
insb
test
test
sbb
ds
pushf
inc
call
cmpsl
pop
repz
jg
les
leave
test
aaa
adc
aam
pop
push
or
loopne
lds
arpl
rclb
fs
icebp
adc
or
add
and
cmp
inc
test
inc
sub
inc
inc
outsl
pusha
sub
pop
push
outsb
imul
jge
sub
and
jg
popf
sbbb
in
cmp
mov
jae
cltd
pushf
mov
dec
adc
sbb
inc
in
cmpl
push
insl
mov
pushf
pop
fimull
and
movsl
nop
aaa
dec
out
and
sub
or
je
in
fbstp
and
subl
test
mov
adc
jge
pop
pusha
mov
add
cwtl
test
xchg
aam
jmp
and
xor
xchg
xchg
outsb
lods
mov
sbb
adc
pop
imul
and
cld
scas
stc
mov
inc
adc
mov
mov
push
mov
test
push
stos
dec
lret
mov
inc
jbe
in
xchg
lods
rorl
pop
loope
sarb
imul
dec
jno
test
jno
push
stos
flds
int
mov
out
or
and
xor
fdivs
aaa
or
mov
cltd
cmp
mov
adc
popa
push
sbb
fs
les
int
inc
mov
leave
cwtl
lock
pop
jp
jns
and
subb
nop
in
fwait
sti
test
ret
pop
or
call
mov
mov
or
ret
outsl
leave
in
push
sbb
jl
sbb
sbb
shrl
lock
or
fdivrl
scas
add
daa
jl
es
and
pushf
dec
in
cmpsl
jl
stc
jae
gs
inc
sub
pop
xchg
mov
or
outsl
xchg
mov
xor
xor
jae
int
cld
ja
shll
cmp
lret
xchg
and
dec
push
imul
insb
cli
rcll
pop
sbb
lcall
cmp
pop
movsb
mov
stos
push
test
add
inc
pop
lods
pop
ja
imul
les
cmp
mov
inc
hlt
repz
adc
int3
jmp
mov
push
fwait
mov
jmp
in
lock
lods
ds
iret
jno
mov
out
nop
lock
data16
lods
cmp
icebp
gs
lcall
xor
xor
stos
mov
inc
loope
lock
js
mov
pop
insl
pop
cmpsb
shlb
sub
cmp
jns
mov
xor
push
dec
cld
int
add
daa
jecxz
lret
inc
imulb
push
std
ja
jbe
fs
sbb
inc
jl
pop
popf
xor
fisubs
push
scas
fwait
push
test
pop
xor
fidivs
sub
or
inc
push
pop
lret
jg
push
or
mov
or
lahf
mov
push
movhlps
inc
nop
cld
test
iret
lods
jnp
cmpsl
push
outsb
ret
test
cmp
adc
and
daa
sbb
lahf
rcrb
or
in
push
ret
dec
in
lock
xchg
mov
das
mov
mov
insb
jp
mov
cwtl
adc
insb
cmp
push
inc
loop
cmpsl
fwait
push
xor
mov
lods
das
pop
xor
or
cmp
inc
dec
cmp
cwtl
insb
sti
mov
pop
das
jne
dec
push
xchg
clc
sbb
and
or
fdivr
popl
cmc
rcl
popa
or
xchg
das
aad
sub
xchg
add
cmp
pop
and
lock
mov
push
mov
fcoml
movsb
pop
ljmp
pusha
ficompl
or
jo
or
cmp
subb
loopne
insb
mov
mov
adc
push
repz
out
and
into
loope
adcb
dec
std
jne
or
shr
add
pop
ret
or
dec
std
pushl
xchg
sub
mov
sbb
xchg
std
xchg
fs
lods
aad
movsl
push
adc
pop
aaa
adc
mov
adc
sub
into
enter
push
pop
pusha
jns
pop
jecxz
das
inc
push
cmp
mov
lea
arpl
add
mov
in
lret
popa
out
pop
inc
jb
ljmp
push
mov
lcall
dec
inc
mov
mov
or
pusha
cld
shll
shrl
pop
pop
cmp
loop
outsb
push
mov
push
scas
dec
enter
popf
gs
orl
andl
scas
jg
xchg
movsb
xchg
outsb
sar
adc
inc
push
jne
imul
adc
dec
shr
notl
divb
imul
inc
das
popl
cmp
mov
sahf
push
clc
add
sbb
xor
cld
or
imul
inc
jae
adc
aaa
fdivs
pop
call
push
push
imul
mov
cmp
pushf
jge
add
test
rclb
nop
pusha
adc
pop
sbb
cltd
push
inc
push
fxch
mov
mov
dec
jo
sub
insb
or
or
push
pop
cli
mov
inc
ret
add
dec
subl
pusha
loope
outsl
mov
xchg
cli
js
sbb
iret
jae
lcall
jo
outsb
cmpsl
sub
jmp
filds
outsl
inc
xor
test
into
adc
cmp
aam
or
mov
fisubrl
iret
out
sbb
sarb
fiaddl
insl
shll
scas
dec
and
jbe
cmpl
push
mov
xchg
cmp
clc
lods
inc
je
push
mov
pop
cmp
or
andb
js
test
imul
aad
lea
stos
pop
push
and
leave
jb
stos
scas
mov
lea
in
fs
rcll
or
pop
xlat
movsb
jge
std
out
shll
stos
cli
pushf
mov
add
xchg
xchg
cltd
push
cmpsl
ret
ja
inc
std
cwtl
or
sub
cmp
pushf
push
adc
inc
mov
mov
and
xchg
cli
and
inc
inc
gs
inc
les
jae
mov
iret
xchg
jnp,pt
sub
icebp
das
and
fsub
and
mov
nop
cld
ret
and
xor
mov
stos
andb
cmp
popa
cmc
fdivp
xchg
aaa
jl
sbb
int3
nop
inc
popf
dec
lds
inc
test
jl
mov
xchg
rclb
xor
ds
and
pop
cld
mov
sarb
fdivl
insw
adc
popf
imul
xor
cwtl
cmp
pop
and
clc
add
sub
jbe
ds
push
jae
xchg
out
adc
enter
div
push
adc
movsb
test
jmp
gs
jnp
mov
mov
int3
ror
mov
mov
and
test
ljmp
lea
dec
jbe
fwait
jb
ret
add
nop
insb
jl
enter
sub
mov
cmpsl
ljmp
sub
enter
jne
add
stc
sub
xor
es
int3
mov
mov
sub
mov
cmp
mov
pop
inc
jecxz
cmp
movsb
les
pop
pop
ss
cwtl
lahf
out
sbb
jo
insb
pop
lods
jo
test
inc
mov
add
push
or
stos
insb
addb
fwait
jp
xchg
pop
andl
clc
js
jecxz
xor
jnp
ret
sbb
or
gs
insb
pop
outsl
test
push
pusha
pushf
adc
mov
mov
test
lret
cmp
add
sub
arpl
push
incb
dec
jno
stc
sub
dec
pop
sub
lea
stos
inc
scas
inc
add
sbb
pop
bound
lock
mov
cmp
mov
data16
xchg
xor
xor
orb
add
ja
xchg
in
ljmp
hlt
jne
mov
ret
out
imul
pop
cld
cmp
loopne
fwait
inc
inc
add
mov
fisttpll
icebp
cli
iret
pop
movsl
sub
cwtl
cmp
push
and
dec
sub
mov
mov
push
lret
loope
out
stc
pop
sbb
inc
imul
and
push
inc
cmp
mov
xlat
fcoms
lock
pop
cmp
or
sbb
pusha
xor
add
aam
movsl
fs
push
ja
cmp
jmp
pop
mov
jmp
pop
or
jbe
xchg
xorb
lahf
iret
ja
ja
push
adc
mov
cmc
mov
pop
mov
pop
and
push
cmp
mov
daa
add
mov
pop
lcall
mov
movntq
out
das
pop
push
out
pop
stc
jbe
leave
popa
xor
xchg
and
loop
pop
and
xor
dec
dec
test
cwtl
mov
xchg
dec
jg
mov
insl
scas
push
scas
popa
inc
leave
jbe
add
lds
divl
adc
dec
sub
xor
and
cld
lods
jbe
push
mov
lcall
repz
or
das
arpl
lahf
fwait
out
aaa
sub
adc
pop
jae
xor
push
mov
push
daa
les
inc
cmp
jge
in
sbb
lods
insb
xchg
fsubs
movsl
add
jle
pop
pop
push
prefetchwt1
adc
mov
mov
mov
adc
adc
push
fistl
mov
inc
mov
nop
mov
loope
or
xor
cmp
sahf
pop
mov
in
add
arpl
aaa
push
in
add
subb
mov
fsubs
pop
mov
mov
clc
dec
jp
rorb
jg
sbb
push
jno
add
sbbb
nop
mov
lret
fadds
jmp
push
add
cmp
mov
push
xor
stos
xor
xlat
or
out
aam
leave
movsl
mov
mov
sbb
push
mov
ret
mov
fnstsw
int
inc
fisubs
jmp
icebp
lret
cmpsl
gs
cli
leave
jmp
loopne
mov
sub
pop
sub
lret
shrb
inc
orb
add
fisttpl
nop
pushf
pop
lods
aas
insb
push
lds
fistl
add
mov
inc
fmuls
int
ret
rcrl
jbe
sub
jmp
or
sahf
dec
push
sub
out
inc
push
mov
aam
inc
mov
iret
mov
mov
adc
push
xor
cmp
int
mov
inc
cmp
xor
add
dec
xlat
shrl
push
out
push
stc
cmp
pop
inc
fidivl
xchg
adc
jecxz
sbb
dec
jge
jo
sub
in
insb
and
sahf
push
aas
add
insb
cld
push
cmp
pushf
cmp
dec
xchg
push
dec
imul
fcmove
scas
and
mov
or
cmpsl
mov
js
jge
aaa
sahf
adc
dec
mov
xchg
pop
adc
push
xor
das
sub
cmp
sub
outsb
jle
filds
sub
sahf
inc
call
inc
ds
mov
orb
pop
rcrl
aad
addr16
mov
fbld
mov
out
addr16
andl
inc
mov
inc
or
idiv
sbb
adc
or
ret
iret
mov
imul
mov
gs
mov
pop
loope
dec
inc
or
lods
mov
js
cmp
pop
ja
cltd
push
addl
rclb
jecxz
pop
int
repz
cmp
cmp
mov
jecxz
xchg
test
pop
and
xor
ret
pop
ss
imul
fimuls
jle
push
mov
push
loop
cs
sub
subl
adc
xchg
or
mov
sub
lock
shr
loop
lahf
pop
cltd
jmp
bnd
xor
shlb
mov
jmp
jge
mov
xor
and
jmp
push
sub
and
ss
std
xchg
dec
mov
into
andl
repz
xchg
cli
xor
and
lcall
xchg
aaa
fstpt
cmpsl
jl
notl
in
push
pushf
stos
xlat
push
mov
enter
mov
mov
test
popa
orb
jno
and
push
mov
inc
cmp
mov
jbe
push
xor
in
gs
xchg
fisubl
mov
ficompl
mov
shrl
insb
lock
aam
cmp
jns
mov
mov
mov
rcr
enter
xor
stc
aam
pop
push
mov
cmpsl
xor
xchg
rcll
push
pop
lods
stc
push
mov
push
iret
xor
mov
cltd
inc
fdivp
add
cld
cmp
sbb
gs
dec
outsl
div
sbb
lret
mov
outsb
sbb
orl
dec
mov
ds
dec
jg
xor
mov
outsb
mov
xor
adcb
loopne
shrl
push
mov
repz
loope
sbb
int
cmp
aad
dec
sub
add
fstpt
lret
push
inc
in
jb
xor
imul
mov
hlt
gs
flds
xlat
jbe
flds
or
mov
scas
pop
sarb
jmp
mov
stc
jns
insb
pusha
mov
mov
and
xchg
gs
cmp
mov
ret
cld
cmc
push
pop
movsl
mov
dec
sub
fwait
mov
cmp
fs
cmp
test
lret
jg
mov
fnstcw
jno
jne
push
sbb
int3
add
add
test
cmpsl
mov
push
and
push
int
dec
sbb
ficompl
push
lock
repnz
or
repnz
out
push
mov
ja
inc
dec
dec
into
cmp
data16
sbb
aaa
push
mov
sub
enter
adc
cmp
push
sbb
iret
in
shrb
test
cmpl
and
insl
push
loopne
aam
fsts
pushf
add
int3
inc
xchg
jmp
cmp
lcall
loop
mov
sub
aas
dec
pop
sub
xor
stos
dec
xor
sarl
jp
mov
in
pop
pushf
ss
adc
movsl
lahf
mov
decb
jb
and
loopne
into
xor
add
rcl
push
ljmp
add
push
push
dec
dec
jns
jg
jns
add
lock
fdivr
or
sbb
mov
cmp
jmp
sbb
xchg
insb
xchg
mov
rclb
push
lahf
and
cmc
jg
fscale
sbb
ret
jle
push
loopne
mov
mov
mov
push
pushf
fs
pop
dec
sub
movb
pop
and
adc
stc
xchg
lcall
cmp
scas
loope
mov
jae
arpl
pop
inc
sub
fildll
sti
jnp
adc
and
lret
ljmp
xchg
jb
int
adcb
imull
jae
shll
or
mov
xchg
pop
lret
popf
dec
cmp
les
sub
fcompl
cmp
test
out
in
jns
xchg
mov
test
in
iret
fistl
sub
movsb
test
aaa
pop
js
add
lahf
call
cmp
jno
in
ljmp
js
cs
stos
mov
sbb
mull
or
jnp
push
xor
mov
mov
daa
push
ss
outsl
enter
inc
in
xchg
mov
and
test
int
jae
test
in
stc
jl
sub
shlb
enter
xor
sti
outsb
ds
push
jnp
inc
imul
mov
inc
pusha
push
inc
xor
push
inc
into
mov
mov
push
lret
scas
hlt
jp
adc
outsl
jb
or
or
sub
cmp
inc
roll
mov
stos
sub
xor
popa
in
adc
push
dec
test
xchg
ret
sub
xchg
and
cmp
add
xchg
hlt
notl
add
pop
faddl
call
lcall
ret
pusha
jae
push
dec
movsb
mov
fistl
lds
xor
mov
push
or
inc
xor
mov
xlat
sahf
xchg
int
jne
movsl
or
mov
fldt
inc
xor
hlt
out
outsl
dec
rcl
mov
sub
push
push
negl
ds
mov
jp
and
cmp
shrl
clc
dec
push
jmp
out
push
pop
jbe
repz
out
xor
ds
mov
mov
loop
out
xchg
inc
fs
sti
ljmp
push
pop
and
icebp
ffreep
jge
ds
insl
scas
into
mov
mov
pop
sbb
inc
sub
divl
pushl
push
inc
sub
movsb
mov
jecxz
jne
and
and
es
out
subl
cwtl
out
add
movsb
test
addr16
hlt
cmp
test
bound
lahf
or
push
gs
and
pop
jno
movsb
sbb
test
adc
jae
xchg
sub
popa
cli
cli
stos
inc
dec
in
js
ret
lret
mov
loope
outsl
cmp
nop
ds
in
sbb
lcall
dec
fstpt
je
xchg
jmp
cwtl
pop
lea
gs
out
in
gs
stos
cmp
in
and
xor
loopne
and
cmp
lret
xor
sub
aad
pushf
cli
insl
jnp
gs
jg
jecxz
xor
jp
aam
repz
add
sbb
out
add
mov
sti
jbe
or
cmp
and
lods
mov
push
lahf
push
hlt
out
aam
int3
xchg
adc
loopne
and
outsl
add
aad
jp
gs
mov
in
adc
insl
pusha
loop
std
hlt
adcl
lret
test
shl
repz
jno
clc
aaa
inc
stos
movsb
cmp
add
std
out
hlt
push
lret
jl
sub
push
xorl
decb
jb
out
dec
popa
adcb
add
adc
pushf
arpl
out
sbb
in
rorl
lds
lahf
inc
data16
int
mov
dec
sbbb
push
xor
mov
pop
aas
xchg
jb
mov
adc
mov
mov
adc
jbe
adc
sbb
sub
xchg
and
dec
xchg
adc
imul
gs
sbb
fstl
sub
les
or
stc
in
dec
sub
xchg
testl
adc
xchg
outsl
push
mov
push
mov
jl
mov
test
pusha
dec
or
fstpl
inc
add
out
aad
outsb
inc
push
cmp
sub
out
and
sbbl
addr16
fbstp
xchg
rorb
mov
fldt
mov
sub
mov
mov
xor
jae
mov
imul
and
mov
test
mov
insl
leave
sti
imul
adc
in
pop
cmp
clc
jno
sub
test
ret
fdivr
add
push
mov
cmp
mov
and
fistl
mov
js
jo
dec
rol
cmp
push
icebp
jg
femms
sub
push
lods
add
pop
addr16
xor
outsl
sub
enter
pop
insb
lods
mov
add
jne
mov
sbb
lds
jb
mov
sbb
mov
sbb
dec
adc
int3
xchg
xchg
jne
pop
mov
mov
nop
add
pusha
cld
adc
add
fldcw
and
add
add
cltd
pop
xchg
mov
pop
js
aaa
stc
bound
dec
add
and
shrl
std
push
sbb
int3
insb
std
arpl
adc
mov
push
ljmp
cmpl
and
ljmp
jmp
idivb
push
dec
add
mov
push
hlt
movsb
adc
out
mov
sbb
or
mov
jne
jno
jge
sub
mov
movsb
and
mov
in
mov
mov
je
sbb
or
mov
stos
loop,pn
outsl
cltd
adc
or
dec
jmp
lcall
subb
jg
int
jecxz
pop
fnstsw
sub
loopne
or
pop
inc
xchg
cli
out
pop
lea
inc
mov
push
fsts
in
testl
cltd
mov
mov
stc
test
shrb
dec
lahf
dec
mov
inc
shlb
or
shl
dec
mov
or
and
push
xchg
das
dec
dec
out
out
mov
pop
xor
testl
into
stc
outsl
ds
mov
mov
out
lahf
and
fistpl
dec
aam
inc
inc
dec
add
xor
pop
pop
cmpsb
cltd
leave
aas
dec
push
sbb
mov
inc
inc
in
mov
roll
mov
loop
xor
push
xor
mov
push
sahf
or
pushf
popa
lret
popf
add
sbb
pop
inc
jecxz
aas
loop
ds
push
cwtl
and
lahf
daa
dec
cs
cmp
xor
gs
mov
pop
js
mov
mov
das
mul
mov
fsubrs
cltd
add
jge
pop
push
ficoml
pop
mov
fcomps
xchg
xor
lds
fildll
mov
adc
call
jne
ja
xchg
ss
sbb
js
push
std
movsb
sbb
pop
and
das
xchg
lock
icebp
xchg
sbb
mov
incb
sbb
cld
cwtl
test
inc
adc
test
aad
test
enter
sbb
clc
cmpsb
roll
and
adc
es
arpl
xchg
ret
add
xor
fcmovbe
jb
insl
and
inc
popa
popa
scas
mov
cmp
cmc
out
pop
inc
pusha
and
push
mov
pop
mov
cmp
lods
mov
pusha
int
mov
push
leave
fxch
fwait
movsb
pop
cld
lea
xor
push
cltd
and
pop
stos
xor
in
push
jge
cwtl
movsb
cmp
or
xor
and
test
in
or
into
jl
xor
and
pop
sbb
fistl
daa
imul
insl
std
jno
cmpsl
xor
lcall
dec
cmpsl
in
dec
cwtl
in
add
sarb
mov
adc
mov
mov
xchg
adc
imul
lret
dec
push
sbb
sbb
add
out
lock
test
sub
in
rclb
sub
fs
ja
leave
mov
pushf
lcall
idivb
movsb
aaa
insl
add
decb
lcall
jae
aad
shrl
lock
adc
mov
rclb
jge
pop
mov
sbb
push
ret
decl
xor
add
push
sub
leave
icebp
ljmp
rclb
dec
jl
jb
pop
inc
mov
fildl
iret
or
out
loop
imul
dec
adc
repz
or
cmc
bound
rorl
imul
add
xchg
jp
xchg
aam
xor
jge
mov
dec
inc
push
ret
pop
mov
enter
call
xchg
xchg
sbb
into
sbb
cmp
jecxz
push
xchg
jle
mov
sub
and
fisttps
sti
jg
outsb
mov
jp
dec
mov
pop
add
iret
test
inc
sub
test
cmc
repnz
jbe
aas
ficomps
mov
test
push
inc
fldenv
gs
in
iret
jp
push
or
in
test
mov
addr16
shr
mov
jl
mov
and
push
ds
pop
lcall
imul
scas
sbb
xchg
xchg
aam
xchg
sbb
loopne
mov
inc
ficompl
and
fmull
cmp
rcrb
dec
shrb
std
add
pop
push
xor
inc
push
scas
and
push
push
aaa
push
add
icebp
pop
stc
mov
call
shrb
mov
enter
cmc
mov
js
or
lock
mov
inc
add
loopne
loopne
fs
or
add
push
fs
das
test
or
mov
jno
jp
je
lock
cmp
stc
sub
fiaddl
fdivr
mov
aas
addr16
add
fisubs
and
push
inc
inc
xchg
hlt
cmpsl
fs
mov
sbb
sar
xor
dec
fs
dec
int3
bound
pushf
adc
mov
cltd
pop
mov
mov
sub
adc
das
xchg
mov
dec
or
add
mov
lock
mov
lret
push
inc
sbb
adc
mov
inc
sbb
mov
shrl
adc
into
and
sub
push
push
mov
fwait
jno
rcrl
pop
xor
mov
mov
cmpsl
lret
cmp
xor
pop
fsubrs
pop
xor
fadds
gs
ljmp
mov
scas
mov
pop
loopne
fcmove
fmuls
out
fs
movsl
icebp
push
dec
test
lock
leave
les
les
sahf
sub
or
ss
or
push
or
and
lods
in
mov
inc
testl
in
pop
popf
shlb
mulb
inc
pop
addb
xlat
push
pop
fdivrs
fstpl
add
out
cmp
xor
lds
cli
clc
xchg
xchg
push
loopne
mov
mov
nop
jge
mov
ds
dec
xchg
push
pop
das
int
push
push
lahf
scas
ja
rol
jne
nop
inc
sti
mov
xchg
xor
or
cmp
jp
jbe
loop
adc
sbb
int
jle
inc
arpl
push
mov
mov
pop
add
subl
mov
out
xchg
dec
sbb
repz
out
idivl
aas
jb
and
dec
rorb
jge
add
inc
dec
push
cmp
add
push
or
jbe
pop
jno
cwtl
fs
mov
xchg
sahf
inc
scas
sub
jle
mov
xchg
mov
popa
xchg
jmp
mov
ljmp
jl
inc
call
jnp
int3
out
sti
in
popf
lret
ljmp
loopne
push
adc
test
add
mov
inc
jg
mov
cld
scas
sub
and
imul
movsl
jns
int
mov
xchg
pop
inc
xchg
inc
pop
dec
pop
xlat
jno
sub
pop
cmp
adc
pop
leave
mov
adc
pop
push
popa
mov
adc
rep
mov
subl
int3
scas
stc
aaa
addr16
lahf
ja
and
or
and
rorb
adc
icebp
inc
pusha
adc
cmpsl
pop
jmp
fdivrs
push
jb
cmpsl
cli
fwait
ror
cltd
add
cwtl
mov
das
add
pop
pop
in
lret
push
leave
sarl
clc
pushf
mov
shrl
xor
scas
aaa
test
sub
xchg
loopne
push
pop
mov
dec
add
aas
xor
mov
into
fdivs
mov
or
inc
jbe
cmp
mov
mov
imul
jl
in
or
popf
insb
sbb
and
movsb
sub
dec
mov
fistl
dec
inc
jb
lds
test
icebp
jb
jns
pop
in
pop
push
dec
dec
movsl
mov
mov
les
jae
adc
and
popf
jnp
loop
and
lock
clc
dec
mov
sbb
pop
mov
push
repz
sti
test
daa
daa
ja
iret
daa
push
cwtl
inc
shlb
jg
jnp
aas
es
dec
jg
and
insl
jne,pn
dec
test
pop
push
outsl
nop
loop
lods
push
inc
mov
jno
mov
in
inc
mov
add
cwtl
sub
mov
data16
andl
in
fmull
test
pop
cmpsb
push
out
and
dec
mov
or
divl
jge
push
fsts
pop
in
das
data16
mov
dec
dec
js
add
cmpsb
clc
in
push
ret
std
scas
jb
mov
lods
dec
adc
cltd
push
out
xlat
xchg
lds
inc
inc
pop
lcall
mov
int3
inc
shrl
fcomip
cld
imul
xchg
cltd
sbb
es
es
adc
das
inc
loope
pop
std
lock
mov
or
fwait
cld
mov
aas
fldenv
nop
testb
or
out
add
leave
pop
int3
sub
outsb
mov
cmpsb
rorl
sub
fnstcw
outsl
fidivrs
cld
int
rcr
test
push
dec
sub
inc
int3
loopne
pushf
pop
mov
ror
lret
lods
out
jo
xor
jmp
divb
inc
xchg
rolb
fisttpl
mov
dec
ja
jno
in
test
mov
bound
mov
xor
inc
mov
push
push
jle
or
popf
ljmp
imul
nop
sbb
sbb
xchg
mov
fs
jae
adc
lret
mov
std
cld
inc
cmc
stos
xchg
inc
jbe
xor
inc
or
adc
rorb
or
cs
fcmovnu
lahf
pop
loopne
and
stc
ds
push
push
sbb
dec
std
loopne
cmp
scas
mov
ficompl
jo
push
inc
lahf
push
dec
jno
ds
pop
mov
cltd
scas
push
push
out
push
mov
shl
iret
mov
cwtl
xchg
incb
cli
stos
push
sbb
or
add
pop
or
nop
xchg
or
addr16
cmc
sarl
sar
fidivrs
and
inc
daa
scas
inc
xor
jl
add
insl
cmp
pop
and
aas
aaa
rcll
dec
cmp
sub
ds
nop
jae
push
jo
daa
movsb
sbb
pop
fidivrs
pop
or
sub
and
cli
imul
sub
xchg
fmull
fprem1
call
pop
cwtl
xor
fwait
jecxz
xlat
lea
mov
fld
ret
imul
pop
push
jp
jbe
adc
lods
pop
bound
jbe,pn
iret
dec
jp
cmpsl
lock
ja
stos
cs
jne
sub
xchg
push
pop
jnp
lea
subb
movsb
and
ds
cltd
pop
iret
mov
aas
icebp
xor
jge
and
push
sbb
push
cmp
outsb
push
ljmp
cwtl
or
in
outsl
ja
sahf
scas
hlt
cmpsb
enter
lods
test
xchg
popf
xchg
adc
arpl
sub
aaa
pop
cwtl
sbb
mov
nop
sbb
mull
xorl
cmc
movsb
sbb
into
push
mov
add
test
pop
sarl
pop
stos
mov
sub
adc
jae
xchg
das
cli
cmp
clc
jle
mov
insl
or
lcall
popa
sub
lcall
in
push
cmpsl
mov
jg
fimull
add
mov
mov
repz
inc
repz
enter
and
adc
out
inc
push
jg
aaa
jmp
add
and
or
jo
leave
lret
rcl
mov
pop
ljmp
out
xchg
lods
icebp
je
sti
lret
jge
mov
out
push
loopne
dec
xchg
pop
pop
dec
inc
fbld
fstpt
icebp
inc
inc
inc
mov
les
out
fidivs
testb
fcoml
sbb
sbb
mov
mov
jbe
pop
cmp
stos
add
mov
and
push
xchg
mov
pop
adcb
lock
insl
push
mov
leave
add
or
xchg
fidivrl
jns
jno
mov
sbb
hlt
or
or
pop
clc
es
mov
daa
repz
mov
inc
mov
out
test
cmpsb
ja
js
sbb
std
push
data16
cmp
popf
and
dec
shlb
xchg
cbtw
lods
mov
mov
loop
jge
dec
fs
push
aam
and
inc
cltd
sarb
clc
aas
pop
inc
push
mov
je
and
dec
push
lods
jbe
ljmp
fwait
xor
cmp
xor
sbb
jge
jae
lods
sbb
pop
lret
dec
rep
cmp
inc
dec
neg
imul
or
clc
pop
movsl
aaa
mov
enter
test
adc
mov
imul
cltd
xorl
sub
jp
mov
fdivp
add
pop
aad
fcomip
cmpsb
jnp
in
fdivrs
insl
subl
push
decb
xchg
jg
adc
jp
movsl
test
lods
xor
fisubs
inc
add
dec
xorb
fldenv
aas
xor
pinsrw
jmp
pop
addr16
aaa
jge
jg
mov
sub
lods
sbb
mov
jns
fcomp
mov
pop
cmp
imul
int3
or
mov
js
faddl
xchg
xor
xchg
mov
mov
sub
pop
push
out
rorl
mov
fucomip
out
sbb
divl
and
popf
ss
and
dec
push
cmpl
push
adc
fldcw
pusha
mov
mov
mov
filds
cmp
scas
aaa
push
pushf
xchg
lods
cmpl
inc
mov
cmp
xchg
mov
and
clc
xor
jp
test
sahf
movsb
shrb
aas
xchg
addr16
out
dec
xor
pop
ljmp
and
outsl
lahf
add
movsl
adc
jmp
out
aam
xchg
int
imul
or
mov
add
rcll
xchg
scas
mov
dec
pop
jne
xchg
lds
bound
cmp
inc
dec
fistps
call
mov
rcl
mov
pop
out
pop
sbb
xchg
popa
cmp
mov
xlat
out
push
je
jmp
ret
mov
push
sbb
andl
cwtl
in
or
loope
ret
lret
jp
or
sub
outsb
jne
data16
pop
mov
pop
pop
ret
or
mov
ror
out
inc
in
shll
adc
jnp
arpl
leave
lea
rcll
xchg
fidivs
xchg
int3
ficompl
push
or
data16
imul
jb
adc
rcl
fidivrl
mov
cmp
loope
push
int3
adc
movsl
out
xor
ljmp
daa
int3
outsl
jmp
mov
aam
sarb
dec
test
mov
jo
loop
ljmp
mov
stos
xlat
mov
and
out
scas
stos
fmull
call
mov
fisttps
outsl
fcompl
push
pusha
or
adc
fsubr
cmc
inc
addr16
mov
test
sti
pop
pop
fmuls
ljmp
mov
bound
std
test
jecxz
in
hlt
and
sahf
pop
into
mov
arpl
shlb
xlat
das
push
and
push
test
nop
enter
mov
mov
jo
in
mov
pusha
sub
dec
cmp
cmp
mov
and
mov
ret
sbb
cwtl
sub
add
scas
sahf
xchg
adc
mov
adc
and
cmp
add
xor
push
push
sub
mov
js
add
dec
imul
pusha
jne
fidivs
movl
out
ficomps
shll
mov
inc
inc
inc
xchg
ja
and
adc
imul
int3
mov
jne
inc
pop
xor
test
in
adc
mov
ja
adc
or
aad
cmp
and
insl
cwtl
xorb
sbb
push
test
sahf
push
mov
lea
dec
insb
mov
es
fmull
mov
addr16
add
adc
inc
push
xor
jne
push
pop
cmp
push
popa
pop
aad
xchg
cltd
push
cwtl
addl
jbe
push
ret
lret
dec
and
xlat
push
sbb
push
sbb
xchg
packuswb
sub
cmpb
daa
fdivrs
test
mov
nop
jne
mov
xor
cmp
dec
push
dec
cmp
in
jmp
cwtl
adc
and
jno
fadds
out
adc
lea
inc
enter
lret
sbb
fptan
mov
fisubrs
test
sub
xlat
inc
cli
xor
add
lock
jmp
pop
adc
or
fdivl
movsl
ljmp
leave
push
je
adc
fmuls
sbb
and
mov
lea
mov
orb
mov
cli
inc
arpl
cmp
and
mov
mov
mov
pushf
or
jg
inc
xchg
test
mov
xor
outsl
fisubrs
test
xor
lahf
popa
xor
imul
insl
inc
lods
scas
mov
cmpsb
jmp
or
jns
push
xor
in
enter
mov
jl
xchg
lret
mov
sub
push
jl
jns
outsl
or
mov
push
arpl
cltd
jmp
mov
daa
ret
and
aad
rorb
ret
add
push
push
mov
inc
lds
or
pop
xchg
cmpsl
jns
flds
es
in
outsl
xchg
add
cmpsl
dec
mov
call
xchg
cmp
daa
push
inc
int3
mov
popa
out
and
inc
out
push
mov
jg
jmp
test
or
inc
push
loop
xchg
push
cmp
rcr
loopne
out
in
mov
xor
mov
cmp
hlt
xchg
jnp
push
jp
jb
mov
shrw
test
test
sahf
lds
rorl
mov
and
fs
int3
pop
inc
pop
in
push
xchg
sbb
adc
push
sub
sub
mov
dec
xchg
sbb
loopne
add
sbb
repz
test
xchg
pop
mov
dec
lods
xor
push
hlt
arpl
xchg
pop
js
cmc
inc
pop
pop
fcmove
gs
jle
xchg
fs
sub
xchg
fisubs
loop
add
push
imul
call
jnp
in
xor
adc
jbe
mov
scas
rcll
cmp
jmp
cmp
popf
mov
fwait
stos
jmp
test
mov
in
and
jne
mov
push
into
add
dec
aas
cld
test
fs
adc
inc
ret
sbb
mov
repnz
mov
sbb
jg
or
pop
fwait
push
aaa
loopne
leave
jmp
mov
je
bound
outsl
dec
jle
out
adc
mov
pop
ret
jmp
inc
loopne
pop
dec
daa
push
cmp
sbb
push
jne
addr16
insl
aaa
mov
hlt
aaa
test
gs
rcrl
push
cmpsb
xor
arpl
dec
lods
jbe
lcall
pop
add
mov
dec
stos
scas
and
mov
lea
fwait
xor
imul
sbb
jge
push
mov
pop
xchg
mov
dec
int
push
jmp
jp
pop
mov
jne
xor
inc
hlt
jns
mov
and
pop
std
jge
and
gs
dec
sbb
mov
rorl
xchg
xor
xchg
and
popa
lods
movsb
ret
push
test
mov
fldenv
inc
lret
jle
mov
outsl
push
mov
xchg
mov
out
sub
xchg
call
int3
push
xchg
dec
addl
sbb
push
mov
iret
pop
mulb
ds
jne
xchg
fdivrp
cmp
js
fildll
pushf
push
ffree
push
jp
adc
add
xchg
lret
popa
cli
negb
neg
int
outsl
add
lahf
jle
adc
cli
inc
lcall
cmp
cmpsb
outsb
jg
movsl
mov
pushf
sub
movlps
inc
mov
push
outsb
push
mov
insl
in
or
aad
jmp
mov
sbb
or
push
push
add
xor
dec
mov
lcall
mov
mov
mulps
xchg
inc
or
popf
inc
mov
bnd
sahf
test
xorl
gs
adc
add
push
cs
push
jae
mov
insl
xor
mov
cmp
mov
cmc
js
sub
cmovbe
jmp
jne
add
addl
stos
jno
push
mov
dec
rcll
out
mov
mov
push
jb
scas
vpackssdw
sbbb
inc
lds
ret
push
jne
lcall
pop
or
push
stos
repnz
popf
jp
es
mov
nop
and
lods
sub
xchg
cmp
pop
mov
ret
testl
sti
or
jge
aam
xchg
and
icebp
pop
ds
dec
mov
mov
sub
mov
xor
ljmp
and
les
inc
inc
fsubrl
xor
jae
jmp
push
sub
push
add
add
mov
ds
push
add
sahf
jp
pop
dec
cmp
pop
pushf
dec
lods
cmp
or
movsl
sti
movsb
xchg
cmp
xorb
mov
mov
or
out
sub
popa
jae
and
out
jl
stc
and
adc
jno
sub
xor
in
pop
into
xor
inc
mov
jae
push
in
shrb
daa
xor
mov
jno
inc
aad
inc
xor
mov
scas
stos
rcrl
sub
sbb
sbb
cmp
call
xor
gs
loop
aas
mov
inc
jns
inc
adc
cmp
stc
rorl
sub
mov
enter
in
fstpt
stc
out
mov
insb
add
nop
ret
fldcw
mov
movsl
push
inc
add
pop
push
dec
dec
adc
sub
ljmp
mov
loope
pop
mov
jle
pop
ljmp
shll
hlt
sbb
jne
pop
sbb
mov
arpl
shl
or
shlb
sbb
std
repz
and
cmp
adc
or
loop
fwait
mov
ljmp
cmp
lret
mov
out
sbb
adcb
icebp
or
sbb
dec
pusha
aam
mov
sub
or
imul
enter
aas
loop
pop
inc
and
mov
or
mov
andb
out
inc
cmp
add
cmp
daa
bound
sub
in
xor
jp
dec
and
push
push
push
jbe
pop
pop
cmp
popa
mov
mov
int3
mov
xchg
out
dec
push
xor
or
pop
lods
outsb
add
xor
mov
setle
pop
adc
jno
push
pop
cmp
repz
sub
jg
push
mov
lds
or
cmp
jb
pop
mov
mull
ss
xchg
outsl
iret
adc
cwtl
dec
sahf
je
xchg
sbb
mov
add
mov
sub
mov
or
jp
std
and
xor
out
dec
test
call
in
arpl
xchg
mov
mov
lahf
xchg
scas
fildll
jns
mov
xchg
sbb
pop
popf
test
shrb
jmp
roll
push
add
xchg
push
cmpsl
mov
xchg
int
and
fsubl
push
mov
in
divl
nop
dec
lock
mov
insb
add
ja
fstl
and
fistl
or
cld
mov
out
into
pop
and
mov
cltd
int
lret
lcall
and
pop
push
aam
into
cld
adc
mov
mov
push
dec
arpl
aaa
test
aam
xchg
outsl
pop
pop
dec
push
scas
fildl
xabort
inc
xor
inc
sub
fwait
mov
push
sbb
shlb
std
fnstcw
lods
jo
in
ljmp
xchg
movnti
lret
pop
fimuls
push
rorb
jns
inc
stos
addr16
decb
push
sub
mov
jg
jb
pop
int3
jmp
fsubp
sbb
lea
pop
andb
push
ficompl
lret
ret
dec
xchg
fsubrs
adc
push
cmp
outsl
hlt
jae
xchg
and
movsl
arpl
mov
add
mov
pop
in
adc
scas
es
in
or
mov
ja
das
jae
sarl
dec
sbb
xchg
mov
loope
and
or
jae
add
in
mov
dec
inc
sahf
mov
jle
out
sbb
lock
sbb
mov
or
nop
filds
stc
sbb
mov
ret
mov
cmp
xor
lret
in
xchg
fwait
xchg
sub
in
setg
ljmp
imul
test
cmc
pop
mov
cmpl
movsb
xchg
mov
mov
lea
add
roll
test
add
jno
inc
inc
jae
mov
adc
sbbb
int3
std
cmc
les
dec
stc
out
dec
scas
outsl
cld
jae
push
aam
pop
sub
outsb
fsubl
ret
pop
adcl
xchg
out
mov
sbb
or
inc
mov
mov
xchg
add
mov
sahf
sub
xor
pop
std
cmp
mov
ficoml
add
adcb
mov
daa
hlt
mov
or
or
imull
jmp
and
inc
and
or
push
movsl
scas
sbb
test
sbb
pushf
adc
cli
aaa
aad
xchg
push
sbb
lock
adc
movsl
pop
in
lret
mov
enter
sahf
mov
xchg
dec
and
fisttps
dec
add
or
out
daa
xchg
mov
mov
dec
in
jmp
scas
insb
jp
jl
push
sub
sbb
push
cltd
jle
dec
xorl
out
sti
lock
or
inc
push
jb
loopne
imul
inc
repnz
or
fldl
iret
das
ret
and
xor
mov
stc
push
shll
ret
cltd
fdivrl
mov
mov
dec
inc
xlat
aam
stc
fwait
xor
out
xchg
xor
imul
and
fwait
pusha
dec
xchg
mov
insl
sub
xchg
pop
mov
aad
push
pop
xchg
insb
mov
jne
insb
data16
addr16
ss
andb
icebp
jge
and
push
ss
andb
ficomps
ret
dec
cbtw
lcall
movsl
rcll
mov
out
inc
push
adc
xchg
idivb
xchg
jbe
dec
lcall
sub
mov
adc
push
hlt
cmp
aaa
rorl
cli
popa
push
mov
cmp
gs
mov
das
les
rcrl
out
ja
sub
lea
insl
ret
leave
jb
cmp
loope
mov
nop
aaa
xchg
sub
inc
fwait
sub
stos
mov
out
pusha
mov
push
mov
in
xor
imull
jno
out
inc
mov
shrb
test
orb
mov
aad
lahf
ds
std
push
cmp
sbb
push
nop
int3
sub
pop
mov
inc
imul
clc
sub
ret
test
dec
xchg
std
sub
testl
or
add
dec
xchg
in
pop
movb
cwtl
mov
cmpsb
mov
shrb
ret
push
cs
add
fwait
pop
inc
fistpll
pusha
addl
xor
sbb
dec
push
jle
in
mov
add
lock
lods
xchg
xchg
lock
xchg
icebp
ret
cs
adc
movsl
mov
enter
lods
out
arpl
in
inc
movsb
jno
add
cmpsl
sbb
pop
pop
jns
in
jnp
jne
gs
mov
mov
xlat
int3
loope
idiv
dec
adc
testb
cmp
loop
jle
jne
jp
xlat
ret
xor
les
shll
cltd
testb
xchg
je
xchg
mov
cmp
cmp
pushf
test
data16
mov
clc
jmp
jo
adc
dec
inc
aad
jg
adc
jle
es
adc
fisttpll
popf
xchg
in
fldl
cmp
mov
pop
adc
int3
lea
jmp
cmpsb
adc
pushf
mov
dec
jns
push
xlat
dec
jb
add
push
aad
fsubl
adc
addr16
repnz
xchg
in
nop
movsb
add
jmp
add
adc
ficoms
xchg
pop
pop
jnp
or
push
cltd
jg
jb
or
mov
add
mov
cmp
ja
cld
int
loop
loop
xchg
outsl
repz
call
outsl
adc
jg
push
xor
int
push
mov
cmp
scas
ds
push
test
fs
add
mov
std
cmp
mov
in
es
pop
pop
sbb
cmp
into
xchg
int
xchg
or
cmp
mov
push
push
jg
jmp
add
xlat
les
mov
add
lods
or
mov
add
inc
xchg
jp
fldl
lods
shrl
mov
jae
xchg
mov
jo
and
push
or
mov
lret
dec
jb
lret
cmp
dec
mov
mov
int3
sbb
in
movsl
ficompl
mov
cld
mov
jge
mov
adc
adc
in
xor
daa
mov
loop
adc
fcomi
in
pop
into
popl
dec
add
add
adc
fwait
mov
addb
mov
addr16
out
pop
pop
and
add
mov
add
inc
icebp
pop
xchg
add
xor
rcrb
cmpsl
jg
in
jbe
insb
and
xchg
mov
mov
test
stos
mov
cld
sahf
fsts
or
xor
or
or
sub
out
mov
xor
js
or
jns
fisttpll
sbb
mov
xchg
sub
add
jle
sub
inc
int
mov
jmp
sub
test
cmp
test
test
lods
fs
hlt
ds
mov
or
push
scas
lods
pop
sbb
push
mov
ljmp
push
mov
scas
or
or
enter
jno
fbstp
dec
mov
xor
test
int
adc
aad
jo
mov
out
hlt
ja
into
ja
pop
rcl
cmp
mov
cmp
cltd
pop
fisttps
cwtl
cwtl
mov
aas
push
push
out
cwtl
fsubrp
cmc
loope
pushf
mov
insb
mov
mov
imul
mov
clc
enter
mov
fstpt
adc
or
cmp
and
or
jg
mov
mov
loopne
lds
clc
or
push
jno
sub
cmp
lahf
in
out
dec
push
and
stos
cmp
push
enter
sub
and
mov
es
xchg
mov
cmc
arpl
fdivl
ret
add
ljmp
and
test
test
es
and
xchg
lea
scas
addr16
lcall
lea
mov
sbb
out
inc
adc
jb
push
insl
fimull
pop
dec
ret
mov
mov
mov
jp
jmp
push
or
pushf
jmp
ss
mov
dec
jnp
mov
mov
loopne
jo
xchg
cmp
sbb
add
lock
jecxz
rcrl
pop
and
xor
scas
xchg
out
pop
cld
test
mov
add
sub
faddl
arpl
xchg
in
loope
scas
adc
int
adc
dec
ss
jne
add
jg
pop
iret
push
cld
mov
dec
dec
loop
aam
mov
sub
add
pop
push
repz
lds
cmc
and
or
cmpl
sbbb
pop
andl
or
xchg
jge
data16
inc
pusha
or
dec
xor
jae
push
xchg
push
lret
cltd
js
lds
out
outsb
xchg
js
inc
push
shlb
jg
xchg
lods
sbb
mov
ss
sub
dec
test
xchg
scas
fiaddl
add
cwtl
aaa
in
dec
push
or
bound
pop
adc
and
cmp
sbb
data16
push
mov
adc
enter
es
repz
icebp
jne
inc
ljmp
cmp
out
lea
pop
rorb
jno
and
cmp
lock
jmp
xchg
cmp
in
imull
aas
cmpsl
sub
icebp
xorl
sbb
and
out
pop
xchg
jecxz
mov
or
xor
addl
in
adc
push
push
sbb
xchg
push
iret
shrl
ss
fcoml
dec
fs
cmc
fmul
inc
mov
pusha
and
jg
adc
test
mov
cmp
test
sub
or
xchg
jmp
mov
adc
xor
sbb
std
fcmovnb
jecxz
punpckhbw
jno
scas
push
lock
xchg
inc
xor
push
enter
test
xor
ds
cmp
dec
aaa
sbb
cmp
daa
pop
mov
stc
fisubrl
popf
lret
fbld
push
cmp
or
popa
imul
or
repz
push
ljmp
shll
jno
mov
and
or
test
dec
jge
stc
lret
sti
pop
xchg
lret
nop
adc
decb
test
add
fcoms
pop
pop
cmp
dec
sub
adc
shr
loopne
ret
nop
mov
incb
cmpsl
dec
mov
cs
into
les
jns
in
pop
mov
jl
in
pusha
out
es
inc
pop
stc
sub
outsb
mov
dec
xor
lock
stc
inc
lea
push
subb
sub
jb
sub
scas
aam
aaa
je
mov
fwait
test
popf
fildl
inc
mov
adc
mov
adc
mov
test
sub
push
loopne
out
cltd
push
loop
ja
push
mov
repnz
dec
or
and
mov
jp
adc
lahf
jbe
push
out
adc
pop
sub
int3
add
mov
push
fisubrl
test
mov
aad
roll
fsub
inc
into
sbb
scas
jns
adc
insb
adc
loopne
out
lret
xchg
out
shll
int
mov
bound
mov
add
mov
les
mov
mov
mov
pop
orb
dec
xor
xchg
mov
push
orl
scas
cmp
jle
in
dec
mov
add
adc
jge
sbb
addr16
mov
jmp
or
xchg
fstl
lret
out
mov
ffree
sahf
cli
dec
xor
shrb
jns
mov
sbb
mov
inc
clc
insl
push
clc
outsb
out
sbb
mov
jae
sub
enter
out
xor
push
mov
cmpsb
sbbb
ss
fs
jae
lea
or
cld
mov
ljmp
push
push
in
shrb
out
cmpsb
ret
mov
or
js
mov
sbbb
mov
roll
mov
out
and
lret
inc
sub
les
shrl
out
insb
lret
lods
scas
xchg
jno
mov
sub
std
dec
sbb
out
push
xor
mov
mov
inc
stc
rolb
jne
push
sti
jns
mov
pop
push
outsl
dec
and
decb
dec
fisubl
jmp
add
leave
push
xchg
sub
push
xor
mov
pop
filds
cmp
sbbb
sbb
xchg
ds
jnp
filds
jmp
pop
cld
loop
push
mov
sbb
into
test
lret
jge
mov
mov
repnz
aam
jo
scas
cmp
hlt
xor
pusha
testl
fsubrl
int3
repnz
inc
outsb
xorl
xchg
mov
adc
mov
jmp
insb
into
sub
lcall
mov
lock
test
and
call
pop
lret
dec
or
or
sub
mov
cmp
mov
arpl
and
xcrypt-ofb
cmpsl
testl
faddl
leave
ja
sbb
jns
sbb
jecxz
int
cmp
dec
and
jae
aam
sbb
mov
pusha
popa
shrl
repz
cmpsl
mov
movsl
pushw
mov
out
shll
call
sub
ret
sbb
aaa
dec
dec
repz
stc
pop
in
bound
mov
ror
push
cmpsb
icebp
sub
leave
mov
pop
out
lcall
clc
xchg
mov
into
mov
mov
test
rorl
lock
stos
fisubrs
std
sub
loopne
mov
add
xor
mov
std
gs
xchg
xchg
hlt
fisttps
xchg
xchg
lods
jb
cmp
mov
fsubrp
insl
dec
sbbl
bound
cmp
data16
jo
jecxz
rcll
int3
add
cmp
icebp
sbb
stos
int3
pop
fsubr
xchg
lret
xor
push
loope
flds
stc
shr
inc
neg
mov
jns
xor
adc
enter
xchg
cmp
adc
std
aad
icebp
fisttpl
in
sti
data16
enter
int3
hlt
push
dec
or
sbb
nop
out
aam
xchg
rol
loop
testb
jne
and
pop
mov
mov
ret
and
push
add
cli
test
out
imul
testl
jns
fidivl
jmp
and
je
sbb
xchg
and
and
cwtl
push
fldenv
cltd
das
cli
push
jno
xchg
mov
mov
cli
iret
push
jmp
ficompl
repnz
xchg
jge
stos
repz
lock
insl
aas
pop
adc
sarb
and
imul
jp
lret
fldenv
add
aaa
mov
mov
cltd
aad
pop
es
sub
mov
popa
mov
add
ja
and
decl
lods
or
pop
xlat
jecxz
push
pop
push
dec
add
lret
imul
push
fcomi
or
test
mov
scas
add
ss
cmp
mov
scas
pop
addl
in
jecxz
dec
js
mov
pop
mov
out
fwait
add
insb
jmp
mov
enter
out
or
mov
mov
inc
fdivl
sub
sub
cmpsb
pop
les
sbb
cmpsl
jge
ficompl
dec
dec
xchg
xchg
xchg
stos
in
xor
lods
dec
fdivr
push
xor
adc
inc
mov
movsl
dec
fiadds
fimull
mov
push
dec
aaa
addr16
outsl
shrl
cmp
add
mov
lret
push
adc
test
sub
popf
sub
rcr
pop
ds
es
jmp
mov
push
dec
pop
into
and
packssdw
in
xor
into
les
sub
out
or
into
mov
std
xor
push
fsubrp
mov
jp
inc
xor
or
fs
mov
fs
and
sbb
scas
sbb
sti
dec
mov
pop
jne
mov
and
jo
mov
test
push
in
and
inc
add
and
jne
sar
xchg
push
lock
data16
ret
test
and
lcall
sarl
push
mov
clc
mov
jbe
and
adc
std
insl
bound
xorb
into
bswap
mulb
xchg
dec
lcall
cmp
ds
jno
into
push
xlat
mov
aad
outsb
xchg
lods
out
jmp
adc
das
adc
mov
jle
test
or
or
sbb
mov
push
jno
mov
push
xchg
rcll
sti
fwait
sub
push
repz
inc
fcompl
test
insb
xor
movsl
dec
sbb
loop
push
add
push
cmpsb
sbb
xchg
add
sahf
xor
inc
add
xchg
cmp
es
stos
pop
in
inc
setp
mov
adc
or
xchg
fcoms
fidivl
lds
data16
movsb
out
rcll
push
inc
lods
inc
mov
push
into
lret
mov
cmp
mull
movsb
and
xchg
test
lahf
push
rolb
or
cmpsl
cmpsl
adc
sub
mov
daa
xlat
xor
push
pop
mov
lret
mov
out
ficompl
loope
jno
jno
out
push
popa
jae
push
cmp
adc
pop
mov
repnz
mov
loop,pn
pop
or
gs
in
aam
cmpsl
mov
sub
mov
mov
shr
push
or
aad
xor
mov
lret
scas
push
mov
ffreep
xchg
and
out
test
sbb
hlt
ljmp
pop
mov
pop
popa
es
push
and
in
fmull
stos
sbb
cmp
icebp
sarb
sub
xor
jg
loop
ja
cmp
addr16
movsb
cmc
stc
sub
pop
pushf
sub
sbb
sbb
in
mov
test
popa
out
mov
mov
cltd
fwait
popa
ljmp
xorb
dec
faddp
dec
repnz
std
ss
insl
mov
xor
jbe
or
cmc
lret
mov
mov
add
push
jp
scas
push
jns
dec
sbb
or
in
push
loop
int
mul
out
icebp
jb
test
add
sbb
adc
shrb
dec
stc
adc
aas
rclb
add
test
test
or
lock
adc
jle
mov
xor
jmp
adc
cmp
test
cltd
push
pop
pop
mov
test
sub
or
je
and
cmp
fsubl
loope
outsl
jg
inc
lcall
in
push
data16
int
and
fidivs
pop
mov
add
xchg
fidivrs
dec
add
xor
mov
mov
nop
enter
pop
stc
or
flds
jmp
dec
or
lcall
cltd
cld
rcrl
fs
js
sbb
xor
popf
fsts
jne
dec
popl
test
mov
dec
nop
xlat
push
aam
scas
mov
addr16
pop
movsb
sub
movsl
pushf
inc
lret
push
pop
jg
mov
int3
push
inc
ja
mov
add
adc
inc
lcall
dec
stc
hlt
outsl
pop
mov
xchg
and
pop
cmpsl
inc
mov
add
lret
test
ljmp
in
cs
outsb
xor
xchg
ss
push
ds
int
enter
lods
imul
xor
add
mov
mov
das
std
cmpsl
cmp
push
or
jb
or
popa
mov
or
jo
mov
sub
lock
xchg
mov
sahf
xor
aaa
movl
cs
mov
xchg
cmp
mov
sbb
outsl
mov
enter
out
mov
jbe
adc
cmc
test
mov
cmp
das
xchg
xor
xor
pop
into
mov
jp
mov
subb
dec
aaa
sub
mov
mov
xor
test
cmpsl
pushf
sub
pop
push
pop
xor
mov
pop
mov
enter
inc
popa
sub
cmp
enter
mov
cwtl
mov
push
mov
pop
leave
inc
gs
les
repz
movsl
adc
arpl
stos
adc
scas
sti
jl
repz
nop
ss
inc
push
add
push
push
stc
adc
xchg
fsubrl
testb
mov
mov
and
xchg
mov
push
imul
sub
mov
mov
xor
dec
mov
jne
es
out
sti
xchg
mov
fmulp
or
mov
imul
hlt
fcmovnu
mov
gs
je
lods
jg
test
es
push
sahf
std
sbb
cwtl
and
and
das
mov
nop
or
xchg
dec
lds
inc
dec
fldcw
push
loope
iret
movsb
shlb
data16
push
lock
sub
xchg
mov
out
test
mov
push
mov
inc
out
das
and
outsb
jl
roll
aam
mov
inc
jecxz
popa
hlt
or
jnp
bound
cmp
xchg
sub
sub
adc
sbb
loop
lock
fmulp
ja
jecxz
ss
test
das
jecxz
fnstcw
ss
notl
lcall
inc
dec
cmc
iret
mov
hlt
push
ja
insb
lret
pop
xor
pop
push
test
lea
mov
jo
mov
add
pop
and
loop
loop
test
popf
sub
or
shlb
and
aas
es
out
or
hlt
testl
arpl
mov
pusha
pushl
xchg
add
hlt
aaa
pop
jmp
mov
nop
in
add
push
sbb
pop
dec
jno
ss
aaa
xor
lods
push
cmp
mov
insl
in
std
bound
pop
fbstp
xor
daa
inc
pop
lcall
xor
xor
mov
xor
outsl
jno
in
add
sbb
xchg
add
imul
dec
cmp
shlb
fnstsw
add
ret
xor
push
leave
aaa
cmp
out
add
movsl
sbb
into
mov
es
aas
mov
push
adc
xor
inc
push
in
insl
and
xlat
mov
sahf
orb
dec
sub
mov
lahf
clc
and
out
test
mov
push
cmp
push
adcb
notl
or
aas
sbb
sbb
aaa
adc
xor
shrb
outsl
popf
fstps
xor
or
mov
popf
mov
add
mov
loope
sarl
push
imul
ds
jae
loopne
lret
cmp
push
cmc
push
jg
addr16
das
or
and
repnz
xchg
jecxz
sbb
test
pop
mov
xlat
mov
icebp
or
mov
dec
insb
lret
mov
dec
insl
test
in
je
sti
add
aaa
jae
jne
fnstenv
xchg
out
jb
dec
or
jmp
mov
mov
and
int
std
cmp
aam
mov
and
or
push
mov
enter
mov
int
and
test
out
cmp
cmp
je
test
mov
cmpsl
daa
pop
lret
aad
cld
enter
pop
fidivrs
mulb
push
push
outsb
lock
std
lea
xor
fstpl
icebp
push
mov
data16
sub
adc
push
dec
pop
mov
dec
faddl
shlb
fsubr
mov
insl
xor
call
fs
add
insl
aas
imul
or
out
insl
dec
fnstcw
add
jo
in
push
jmp
imul
sub
mov
and
mov
icebp
pusha
xor
lock
mov
xchg
aas
stos
xor
xchg
xor
stos
lcall
outsl
orb
cmp
arpl
cli
rcll
add
hlt
loop
and
cli
xchg
and
fnsave
rolb
cs
jae
sahf
jle
xchg
jmp
mov
scas
xorl
pop
mov
add
sbb
in
stos
mov
ret
in
mov
sbb
aaa
sub
jp
cld
flds
in
sub
xor
xchg
fiaddl
into
push
orb
icebp
js
jne
adc
out
pop
sub
cmp
pop
out
sub
scas
mov
in
mov
xchg
lods
pop
cmp
fstp
inc
orb
xchg
add
popf
or
add
daa
idivl
call
stos
jne
mov
mov
push
aaa
mov
scas
loopne
pop
popa
mov
sbb
ret
call
clc
push
loopne
pop
roll
push
jbe
mov
adc
stc
testl
ja
jnp
roll
movb
sbb
arpl
lret
lcall
adc
outsb
dec
lret
inc
out
and
push
push
jo
push
and
and
fyl2xp1
sub
enter
dec
jle
mov
cwtl
cmc
sahf
jns
mov
pop
ror
add
cmp
adc
ja
xor
dec
dec
or
clc
and
sbb
inc
jo
pop
xchg
and
ljmp
addl
int3
add
cli
jp
xchg
xchg
into
mulb
jns
stc
push
pmullw
out
mov
ret
int
int
and
push
mov
imul
insl
dec
sub
out
inc
lds
and
push
pop
pop
insb
push
jmp
pusha
inc
pop
lahf
adc
jb
lods
in
sub
inc
mov
cmc
sarl
and
scas
mov
jb
stos
jbe
inc
insb
sub
testl
xor
or
mov
pop
mov
addr16
and
inc
lcall
stos
rclb
xchg
movsl
addl
push
out
fs
jae
xor
inc
imul
xchg
pushf
or
mov
mov
pop
and
jne
in
fsubr
cmc
mov
cmp
fiadds
mov
xor
and
movsl
xchg
mov
xor
movsb
test
enter
aas
add
stc
loop
cs
sbb
pushf
and
outsl
sub
cmc
mov
or
hlt
inc
xor
or
out
jo
pop
inc
fistpll
flds
or
je
mov
roll
rep
roll
loop
jb
mov
into
mov
add
sub
add
xchg
stos
lds
movsb
xchg
popf
pop
pop
cmp
lods
pop
xchg
shl
cmp
lret
in
jno
std
cmpsl
and
push
mov
adc
pop
cmp
sub
sbb
aas
jo
sub
inc
xchg
add
in
cs
jmp
cmp
psllq
xchg
ret
cwtl
dec
shlb
or
adc
std
push
pop
pop
daa
fwait
sub
ja
adc
pop
mov
sbb
adc
subl
cmc
shrb
outsl
mov
adc
lcall
mov
xchg
enter
jmp
jle
out
and
mov
rcll
das
bnd
sub
jl
dec
in
xlat
insl
aas
aam
ss
lock
cmc
or
xchg
bound
inc
xor
or
jbe
sub
pop
daa
add
mov
loope
dec
xchg
add
aad
sub
sub
add
ss
aam
cli
add
hlt
mov
mov
sub
out
js
insl
xchg
fsts
popf
sbb
fwait
lock
adc
ljmp
lahf
mov
call
pop
mov
mov
data16
dec
mov
in
inc
les
push
mov
ds
loop
sub
lds
pushf
lock
test
add
mov
loopne
cltd
dec
inc
xchg
cmp
mov
cwtl
in
xchg
ret
pop
or
into
jno
adc
pop
or
fwait
popa
bound
sarb
cmp
outsl
xor
inc
fs
sub
test
pop
inc
test
adc
push
fsts
sbb
lods
stc
and
add
shlb
aam
sti
mov
cmp
call
mov
push
es
mov
add
imul
push
or
fadd
cmp
popf
clc
insl
lock
pop
cmpsl
stos
jno
mov
sahf
dec
sub
aaa
add
pop
xchg
mov
lcall
mov
xchg
inc
xchg
xchg
leave
shr
out
add
orb
or
ret
inc
cmp
movsl
cli
jns
mov
xor
and
xchg
in
rorb
mov
jmp
push
inc
jo
inc
mov
mov
mov
mov
lods
xor
cmp
or
daa
aas
add
dec
repz
pop
lret
push
fistpl
or
push
sub
inc
and
inc
sub
ret
xlat
lock
out
sti
cmp
loope
popa
pop
movsb
jge
daa
ret
out
push
fidivrs
js
pop
lds
push
jp
cli
mov
aas
mov
jns
mov
or
mov
dec
mov
push
scas
jb
jmp
inc
in
sub
mov
push
xorb
loope
mov
sti
xor
push
sbb
or
xchg
jecxz
scas
test
xchg
xchg
rcll
jmp
out
inc
pop
sti
std
push
test
xchg
call
sub
fucompp
cmc
cmp
adc
scas
mov
and
xorb
or
mov
cwtl
ret
int3
sub
mov
cld
push
scas
mov
aad
jecxz
test
test
push
pop
mov
pop
push
cmp
fistps
cwtl
aad
lods
out
test
insb
es
jns
es
dec
movsl
pop
xchg
pop
mov
nop
sbb
aad
repz
cmp
out
adc
xchg
fsts
in
dec
jecxz
xchg
push
mov
push
sbb
sbb
cmp
lods
jp
dec
andb
pop
rdmsr
push
inc
or
adcl
ja
xchg
push
out
adc
lcall
rorl
and
pop
fsubrl
mov
and
sub
add
sbb
subb
and
mov
and
dec
push
stos
sbb
mov
and
mov
sub
push
shll
sbb
jle
in
aam
into
and
push
jecxz
and
insb
dec
addr16
mov
sbb
neg
fs
cld
adc
insb
or
fdivl
sbb
scas
scas
mov
mov
gs
or
adc
enter
mov
out
das
in
jnp
jo
lds
cwtl
lods
pop
dec
out
into
mov
ficomps
lea
out
inc
xchg
aam
test
xchg
cmp
pop
xor
mov
pop
out
fnstsw
xchg
frstor
pop
adc
dec
dec
pop
cltd
jns
pushf
xchg
mov
popa
mov
sub
push
sbb
inc
pop
jne
sub
sub
std
andl
push
pop
stos
stos
dec
mov
scas
add
int
pushf
bswap
push
pop
add
lcall
shld
sub
mov
inc
les
js
int3
insl
fwait
add
stos
adc
sub
xchg
ljmp
fimull
and
pop
iret
popf
sbb
clc
ja
fldenv
lret
shll
cltd
pop
or
mov
xchg
jo
fiaddl
inc
out
pusha
sub
push
mov
insb
movsl
iret
xchg
lods
pop
popa
add
jnp
mov
ret
add
ja
jno
cmp
fcoml
fsubl
xchg
cmp
out
mov
std
sub
cmp
fldl
mov
fcompl
xchg
pushf
push
push
lahf
pop
mov
ss
dec
rorl
sub
xor
je
push
stos
fldl
out
push
push
sbb
or
mov
jo
hlt
mov
pop
aad
pop
es
add
hlt
inc
nopl
pop
cltd
or
jmp
sub
outsl
rcll
nop
push
lret
xor
jg
lods
fldenv
jle
cmp
push
xchg
sub
jg
scas
push
addr16
jae
inc
or
cltd
cmp
ss
and
sarl
bnd
addr16
cmp
and
pop
pop
xchg
push
lods
inc
dec
add
rorl
sub
jno
loopne
rcrb
shrl
cmovp
xchg
mov
inc
popl
xchg
movsl
jbe
push
fadds
aad
out
shll
mov
xchg
lds
jge
dec
arpl
jle
jl
lea
movsb
sbb
sbb
arpl
cmp
aaa
pop
lret
loopne
js
ds
mov
aad
fcoml
lret
add
fldenv
pop
repz
daa
popa
pop
addl
inc
hlt
jle
or
pop
push
jo
xchg
imull
pop
mov
loopne
inc
or
pop
mov
push
xchg
xor
faddp
pop
jge
jns
push
imul
pushf
pop
or
orb
mov
push
jge
mov
aas
pop
pop
fs
mov
in
cmp
out
jp
cli
xchg
fmull
cmp
pusha
jmp
or
jb
jle
sarl
push
cli
mov
repnz
mov
insl
stos
es
fsub
mov
cmp
add
pop
push
lods
sbb
adc
and
cmpsl
pop
or
out
cmp
xchg
aad
sbb
fldt
dec
iret
jmp
push
in
push
mov
inc
scas
bound
or
add
mov
nop
fnstenv
jp
sbb
bound
stos
in
jae
inc
orb
xor
orl
aas
push
xlat
into
out
jne
arpl
cs
or
rcll
inc
and
adc
pop
rolb
addl
lock
icebp
add
movsl
daa
sub
iret
clc
mov
xchg
sub
jmp
mov
cmc
push
jmp
daa
andb
pop
dec
jge
sbb
sbb
loop
mov
fnstsw
inc
jne
shrb
pop
in
pop
lcall
pop
cmp
jle
xor
push
jb
sarl
in
mov
pop
mov
andl
movsb
lock
and
out
xchg
mov
leave
dec
outsb
out
cmp
daa
pop
xchg
xchg
xor
dec
lock
xor
iret
data16
push
add
movsb
lds
js
mov
add
lds
lea
pop
fs
adc
pushf
xor
adc
push
push
and
test
and
push
mov
in
mov
mov
mov
jg
sub
xor
or
loopw
fstl
add
push
push
in
and
or
xchg
cltd
cs
dec
andb
addr16
mov
cmc
sub
cmpb
cld
mov
push
sbb
add
testl
mov
xchg
movsl
push
out
inc
cld
ds
dec
popa
mov
or
push
jle
notl
mov
sbb
movsb
and
out
mov
ljmp
jp
sub
dec
ja
ret
pop
inc
xor
fwait
in
jbe
dec
sbb
in
mov
mov
inc
insb
cmp
mov
popf
inc
movsb
and
and
out
bnd
movsl
or
es
ret
stos
pusha
xor
ss
cmp
rep
and
rcr
adc
out
shlb
lock
dec
test
in
mov
cmp
xchg
push
rcl
aas
push
ja
shrb
and
sub
mov
push
arpl
stos
add
aas
adc
arpl
nop
insb
jecxz
mov
and
xchg
mov
mov
adc
and
and
mov
push
inc
sbb
js
mov
scas
jl
xchg
and
cwtl
movsb
movsl
or
push
or
incb
push
mov
dec
fcomi
fists
lret
push
movsl
cmp
mov
test
fbld
and
adc
and
mov
pop
jno
inc
push
push
dec
jnp
jge
jo
or
out
push
adc
mov
jbe
mov
and
adc
and
mov
mov
adc
or
sub
fstl
out
xchg
shlb
jecxz
cmp
ss
je
mov
cmpsb
movsb
fsts
lea
inc
sbb
lods
cmp
pop
adc
lret
in
push
fdivrl
inc
cmp
fsts
jnp
jne
scas
mov
adc
jmp
lretw
add
test
or
clc
inc
xor
test
pushf
test
repz
mov
mov
xchg
xor
test
sub
dec
pop
dec
pop
jmp
inc
cmc
pand
cmpsl
fmull
repz
mov
movsb
xlat
insl
dec
xchg
fs
insl
xor
and
fsubl
push
cmpsl
fwait
jge
int3
call
adc
aas
loope
aad
xor
cmp
mov
jl
ljmp
jp
jbe
xor
out
adc
imul
jo
in
int3
push
xor
mov
out
test
fnsave
adc
fs
fstpt
insl
test
cmp
rorb
adc
iret
orl
scas
sub
imul
pusha
jae
mov
lock
push
fmull
add
inc
test
and
clc
mov
and
mov
lds
jb
pop
xchg
mov
ja
cmc
or
into
jmp
ds
or
lret
cmp
test
push
pusha
jl
test
in
xor
fwait
sub
pop
xor
cmp
mov
scas
fwait
jae
leave
mov
mov
cmc
scas
sub
sub
and
xor
dec
scas
mov
lds
test
or
out
ja
push
icebp
pop
rol
cmc
pop
xchg
adc
or
int3
dec
sub
imul
add
fmull
or
lea
fstpl
xor
imul
cmp
sbbb
es
mov
xchg
stc
add
mov
out
daa
jbe
aam
loop
repz
add
xor
mov
push
mov
mov
popf
cmovs
jbe
icebp
insb
xor
jp
push
add
xor
xchg
sbb
insl
mov
fs
fistpl
les
pop
leave
ror
mov
xchg
xor
push
sbb
in
iret
push
inc
mov
xchg
or
mov
add
xchg
fwait
push
scas
mull
or
into
inc
sub
mov
stc
mov
stos
outsb
je
enter
cmp
jo
cmp
jl
inc
cmp
outsl
inc
mov
pop
fsin
xchg
test
rcr
mov
shr
hlt
xchg
add
es
out
mov
int
rcll
cmpl
jae
fildll
xlat
enter
aas
pusha
or
add
std
push
push
mov
push
insl
lahf
loop
xchg
sbb
cmc
aam
xor
xorl
out
inc
cmp
clc
mov
push
mov
int
bnd
cmp
out
inc
cld
test
mov
adc
cmp
xchg
push
pop
cld
in
lock
loopne
jecxz
or
jb
xor
mov
lcall
stos
jno
dec
push
daa
cmp
in
pop
std
mov
les
sub
jge
fistps
cmp
mov
shrl
jnp
test
inc
das
roll
shlb
dec
les
and
ffree
mov
les
adc
dec
pop
repnz
ds
xchg
jnp
insl
inc
xlat
or
dec
mov
int3
movsb
jle
iret
dec
cmp
sti
je
jae
test
nop
jp
jns
adc
movsl
rcrb
sbb
call
cmc
mov
xor
call
jb
call
dec
jb
popf
data16
dec
testb
fdivrl
push
jo
inc
aam
idivb
and
minps
add
or
movsb
pop
and
push
pop
movsb
jne
push
outsl
int
ds
dec
mov
cltd
test
mov
xchg
sahf
hlt
sahf
addr16
ljmp
stc
fiaddl
pop
cmp
add
shll
inc
cld
mov
lods
lahf
daa
fimuls
pop
sbb
dec
mov
std
sbb
xchg
addr16
xchg
bound
aam
and
aas
cwtl
outsb
mov
into
sbb
mov
mov
or
jb
sbb
xchg
dec
add
jbe
mov
rcr
cmc
ficoml
loop
dec
imul
and
loopne
insl
adc
into
scas
mov
pop
xor
jnp
out
stos
insb
fsubp
gs
std
enter
sub
add
fistpl
mov
hlt
imul
mov
adc
loope
repz
push
adc
cwtl
jae
push
cmpsl
aaa
jbe
dec
dec
aad
ret
jge
jmp
movl
pusha
jge
in
cld
mul
es
push
push
rol
push
jge
orl
push
insl
mov
scas
jle
inc
test
into
pop
and
sbb
lock
xor
in
or
call
dec
pop
cmp
mov
loop
imul
push
loope
mov
mov
and
leave
push
mov
jecxz
sbb
sbb
mov
pusha
sub
push
jno
jns
lahf
add
mov
movsb
int
or
cmp
hlt
push
sub
and
pushf
jbe
in
push
add
or
and
in
inc
sub
jno
mov
insb
pushf
inc
iret
sbb
movsb
aad
mov
inc
or
stc
mov
in
sbb
jmp
not
xor
in
std
pop
pusha
add
cmp
sub
stos
mov
xchg
bnd
in
out
or
xchg
stos
sbb
aad
pop
mov
adc
loop
push
add
xor
test
imul
jbe
in
shll
sbb
or
adc
cmpsl
andb
sahf
leave
icebp
aas
pop
mov
inc
cwtl
inc
mov
jbe
xor
add
xchg
xorb
push
sti
xchg
adc
push
push
test
mov
xor
adcb
dec
rorl
inc
fimuls
mov
mov
cmp
in
push
push
pop
into
shll
mov
jp
out
sbb
push
and
lret
jno
fwait
pop
arpl
mov
fidivrs
sarl
pop
clc
lahf
mov
pop
push
hlt
jmp
and
push
push
lds
pushf
icebp
mov
andb
mov
add
clc
add
mov
insl
mov
out
add
test
or
fs
ficoms
jbe
inc
and
lahf
pop
imul
and
jp,pt
xchg
repz
xchg
int
mov
fdivl
and
outsb
sbb
sahf
cs
cmc
aad
loopne
inc
pop
movsb
mov
dec
or
inc
fdivr
inc
mov
aas
jb
out
fcomp
or
inc
dec
insb
test
lods
dec
xor
rcrl
loop
inc
pop
jnp
sub
cmova
jecxz
insb
dec
into
pusha
scas
push
xor
jmp
mov
adc
sbb
shrb
push
roll
or
cli
lret
sbb
xchg
cmp
pop
adcl
test
sbb
or
and
sub
fstpt
in
pop
mov
sub
xchg
inc
inc
clc
push
enter
or
loopne
and
test
das
pop
mov
add
and
push
add
lock
pushf
test
repnz
cmpsb
mov
stc
das
xchg
and
inc
rorb
mov
mov
fmuls
sub
mov
push
sub
pusha
scas
scas
cli
xor
or
mov
cwtl
jl
xchg
inc
stos
add
cs
loopne
mov
subb
push
lahf
out
and
in
cmp
cwtl
out
out
inc
outsb
push
andb
loope
std
out
xlat
cmp
lcall
dec
jmp
in
sub
outsb
pop
jge
jns
push
mov
xchg
or
cmp
in
push
fstl
cmp
add
int
fwait
pop
test
out
xchg
orl
jne
loopne
xchg
xchg
xor
sbb
adc
jmp
in
mov
les
sbb
xchg
dec
ds
loopne
cltd
sti
and
cmp
mov
les
and
leave
mov
or
xchg
push
sbb
repz
cmp
ficomps
es
mov
sahf
stos
pop
mov
jne
push
xchg
fnsave
inc
jbe
out
fldcw
or
sub
push
int3
mov
adc
xor
mov
jp
dec
es
shr
dec
cld
xchg
push
daa
mov
or
xor
xor
and
test
sbbb
mov
cmp
dec
xchg
or
inc
arpl
cmp
push
fbld
cltd
outsb
and
shr
add
inc
in
call
addb
aad
in
push
mov
fsts
test
fs
jl
insl
call
out
adc
cs
xchg
or
dec
scas
adc
scas
or
adcb
pusha
xchg
test
std
xchg
xor
inc
jno
orb
xor
loopne
pop
outsl
dec
repz
dec
push
jae
fistl
ljmp
subb
jns
dec
dec
sub
jns
fdivs
out
insb
xchg
jp
cwtl
jmp
mov
push
pop
sbb
out
push
and
xchg
cltd
push
adc
repnz
ss
imul
push
imul
lods
jbe
or
dec
inc
push
pop
sbb
lds
fdivrl
sub
pusha
fistps
pop
call
repnz
pop
sti
ret
mov
fnstenv
aad
fnstcw
mov
mov
mov
movsl
call
xchg
aaa
inc
cltd
test
in
add
push
pop
xchg
addr16
add
cmc
icebp
orb
hlt
call
xor
push
and
or
icebp
jmp
xor
insb
cmpsb
add
jmp
cwtl
scas
adcb
push
lds
xchg
mov
repz
ret
and
insl
inc
test
jge
mov
rolb
jmp
mov
fbld
lcall
shll
in
jo
lahf
mov
loope
xchg
xchg
push
jo
jne
popf
mov
sub
repz
into
inc
repnz
rol
addl
inc
jle
lret
fsts
and
cld
pop
out
fcmovbe
xor
in
adc
xlat
hlt
or
xchg
push
sbb
sbb
sub
xor
mov
js
out
rclb
call
mov
xor
mov
push
jne
jae
daa
mov
outsl
and
pop
or
rolb
xor
ljmp
pop
sbb
cld
fistps
je
mov
dec
es
push
in
sbbl
sbb
aam
lods
lret
mov
jnp
outsl
les
xor
jns
add
jecxz
js
pop
les
inc
mov
fisttpl
sub
mov
je
stc
push
sbb
push
inc
fimull
xchg
and
jg
dec
jo
pop
or
and
call
loope
sti
movsl
repz
shlb
out
inc
mov
shlb
imul
sub
xor
mov
cltd
xchg
jnp
adc
sub
push
jmp
inc
cwtl
aaa
pop
mov
stos
cwtl
arpl
mov
inc
arpl
sahf
or
popa
dec
mov
or
inc
fwait
sub
jbe
xorl
repz
mov
shll
jo
icebp
pop
adc
or
sbb
leave
mov
mov
sub
mov
out
out
mov
ss
cwtl
bsf
and
jp
cmp
and
in
sub
jmp
stos
lldt
inc
push
arpl
les
movsb
jo
popf
cwtl
pop
dec
jbe
inc
into
xchg
fs
test
loopne
jl
dec
xor
pop
stc
cmp
inc
jb
sbb
mov
push
ja
adc
mov
add
scas
std
adc
sarl
dec
sbb
popa
jae
jecxz
ret
pop
mov
jne
mov
imull
xchg
xchg
dec
xchg
shll
jae
push
nop
mov
jne
in
fimuls
xchg
add
fcoml
out
xchg
scas
cmp
loope
inc
dec
cmp
xchg
cltd
xchg
mov
filds
cmc
pop
in
int3
aad
test
mov
loope
and
mov
xchg
into
loopne
scas
jnp
pop
mov
int3
xor
std
pop
xor
icebp
addr16
lret
aam
repnz
cmp
pushf
lahf
in
or
add
fimuls
shr
scas
and
mov
fwait
add
das
add
shr
jno
mov
jns
stc
pop
mov
into
mov
lret
jl
mov
add
xlat
jge
add
jnp
jecxz
jge
mov
in
dec
pop
fdivp
iret
jbe
inc
mov
movsl
and
mov
setg
push
inc
pop
ficomps
lcall
into
and
jg
mov
pop
mov
lock
ret
sub
dec
push
inc
cmp
stos
dec
testb
xchg
test
sbb
lahf
cmpb
sub
jbe
mov
xchg
cmp
xor
adc
or
pop
push
fsubr
push
mov
cmp
js
insl
stos
or
push
mov
mov
aad
fmull
scas
mov
push
stc
adc
data16
cmp
cmp
popf
stos
sub
out
dec
and
lahf
test
movsb
xchg
or
in
jecxz
fldt
or
out
fsts
inc
push
adc
fnstsw
iret
aaa
leave
frstor
push
ja
push
out
int
add
push
xchg
dec
out
rorb
push
cmpsb
or
in
andb
cmp
xor
inc
in
cmp
insl
repz
xorb
inc
mov
pop
xchg
and
inc
out
loope
jns
push
aad
adc
lahf
dec
dec
xchg
bound
jmp
lret
push
lods
gs
addr16
mov
ja
push
stos
jecxz
ds
and
test
push
jecxz
icebp
sti
dec
and
pop
pop
or
add
sahf
les
and
mov
jmp
stos
sub
ds
xchg
fmull
jmp
lock
testb
mov
xchg
mov
mov
jne
shl
movsb
cmp
imul
stos
sub
jle
cmp
xor
negb
out
nop
xor
dec
jae
ret
cld
data16
outsl
jmp
xchg
fnstsw
int
mov
cmpb
mov
mov
pop
sbb
lahf
pop
cwtl
lcall
inc
xor
sub
repnz
fs
pop
daa
sbb
push
push
add
ljmp
lret
xor
push
addr16
adc
int3
ficoml
cs
xchg
and
mov
add
jnp
mov
imul
xchg
push
lods
mov
sub
int
mov
xorl
cli
into
lahf
sub
sub
adc
mov
bound
fstpl
in
add
das
push
pop
addl
add
inc
cmp
outsl
push
pop
shll
pop
and
dec
push
jb
add
fwait
js
lock
jmp
mov
inc
mov
aaa
mov
jp
mov
xchg
popf
xchg
adc
out
xor
je
mov
mov
xlat
push
fstl
test
fdivrl
pop
fidivrl
repnz
lds
into
sbb
jns
dec
cmpsb
call
lahf
xchg
das
adc
ss
cmp
dec
scas
pop
or
in
rcr
aas
cmp
orb
sar
cmp
sbb
adc
int
aaa
xchg
int
or
push
cld
mov
jnp
outsb
adc
mov
dec
jno
mulb
hlt
mov
in
mov
ret
nop
pushf
mov
sbb
add
lcall
mov
xor
push
jbe
pop
test
arpl
and
test
dec
orb
fsubl
mov
xor
fxch
ret
out
xchg
out
test
push
mov
loopne
pop
cmp
adc
sbb
cmpsb
leave
pusha
mov
mov
testb
outsl
mov
mov
cmp
jge
sbb
outsl
cltd
push
and
adc
and
inc
test
dec
in
mull
sbb
in
push
or
xchg
enter
inc
dec
lds
test
adc
sbb
jecxz
scas
cmc
inc
ret
jnp
add
add
inc
out
fsubs
inc
leave
in
inc
jno
cmpsb
mov
add
aaa
idivl
lret
repz
jmp
aam
add
adc
ret
fst
xor
adc
push
js
xlat
ret
stos
cmp
jmp
jecxz
popf
ss
sar
xchg
mov
cmp
add
scas
out
mov
test
add
mov
mov
repnz
sbbl
and
cs
add
pop
jmp
lods
jbe
mov
jnp
dec
sub
inc
rolb
add
shlb
subl
stos
jl
ljmp
cmp
push
xlat
jge
fiaddl
xchg
test
or
mov
repz
negl
adc
lret
xchg
or
or
dec
les
dec
in
xchg
mov
popf
imul
xchg
int
mov
xor
mov
enter
pop
xchg
addb
pop
mov
stos
call
aaa
jne
pop
jmp
leave
out
fidivs
xchg
cmp
and
rsm
mov
dec
adc
arpl
loope
das
adc
subl
inc
jnp
imul
clc
dec
and
jle
ja
xchg
inc
fiaddl
mov
jno
push
adc
rolb
out
movsl
xor
cli
imul
es
sbb
push
popf
into
aad
sub
std
cmp
or
jno
das
add
jb
xor
inc
add
push
das
push
mov
mov
adc
insb
and
cmp
repnz
mov
jno
sub
push
xlat
inc
fsubs
test
rcrb
sub
movsb
xor
outsl
fistl
cmpsb
xor
ja
xchg
es
push
push
lcall
mov
and
lods
cld
filds
gs
xchg
inc
movsb
cmp
in
inc
push
mov
pop
pusha
clc
push
add
or
xlat
pusha
dec
pop
jg
shlb
icebp
jl
pop
ss
cltd
loopne
aad
lahf
sub
or
xor
push
pushf
mov
push
in
mov
dec
mov
sar
jne
int
adc
and
sete
js
dec
jge
cltd
inc
loope
rclb
mov
fsubs
pop
rolb
push
push
into
push
das
mov
pushf
pop
out
xor
shll
and
pop
dec
jo
xchg
add
jg
in
dec
pop
ljmp
mov
cs
mov
out
repz
or
sbb
add
divl
or
cwtl
mov
cmp
sub
call
sbb
lcall
push
scas
ds
call
xlat
shll
stc
mov
ds
mov
imul
or
and
adc
sub
pop
shrl
and
adc
mov
mov
in
xchg
bound
mov
sub
imul
out
adc
inc
sub
dec
jne
mov
xchg
sti
or
pop
xlat
dec
inc
cmp
aad
mov
test
or
fistpl
dec
sub
bnd
add
in
and
imul
sbb
mov
ficompl
pop
enter
mov
push
jmp
push
testl
push
mov
jge
imul
jge
push
adc
imul
mov
xchg
or
push
lock
push
push
and
sub
mov
pop
hlt
and
lcall
or
imul
mov
aad
movl
add
shl
ret
adc
stc
dec
std
call
jbe
mov
dec
sbbb
jmp
cmp
pusha
in
lods
into
jo
and
add
jecxz,pn
jl
dec
sbb
call
shl
push
cmpsl
cmp
cmp
fsubr
stos
dec
push
mov
test
add
mov
sbb
ljmp
mov
and
pop
jns
mov
cmc
inc
mov
cwtl
xor
adc
dec
nop
mov
inc
lock
push
aas
test
enter
xor
enter
inc
add
hlt
xor
loopne
xchg
pop
outsl
lret
mov
bound
into
add
loop
pop
lret
dec
stos
adc
sub
in
cmpsb
push
movsb
xor
or
shlb
pop
inc
mov
sbb
sub
iret
mov
or
cwtl
mov
jge
fdivrl
jns
negb
xor
cld
and
adcl
adc
dec
mov
xor
das
or
pop
add
stos
pop
fdivp
popa
nop
xor
jne
movsl
pop
faddl
sub
sbb
sub
mov
cmp
imul
leave
mov
mov
cli
mov
push
xor
dec
cmp
mov
adc
dec
addb
pop
jecxz
sbb
mov
push
pusha
clc
movsb
int
stc
enter
xchg
xchg
pop
ret
pop
shl
dec
loopne
pop
gs
in
and
ficoms
scas
jmp
lds
xchg
cmpsl
xor
idiv
clc
sarb
and
jge
xlat
pusha
or
stc
push
jmp
fisubl
mov
sub
stos
jl
push
es
stos
adc
scas
and
pushf
jbe
and
mov
xor
pop
hlt
je
push
add
and
rolb
nop
push
loop
add
add
push
jecxz
lahf
arpl
dec
les
scas
cmp
jnp
and
daa
add
add
incl
sub
data16
imul
cmpsl
mov
mov
lret
jae
xor
pusha
lret
inc
mov
sbb
or
leave
jp
clc
push
movsb
inc
faddl
out
repz
out
mov
enter
ror
dec
cld
xor
mov
mov
lahf
sahf
xchg
pop
clc
jge
stos
outsb
mov
gs
adcb
mov
mov
gs
sub
aas
push
mov
adc
arpl
dec
jecxz
xlat
sbb
adc
pop
out
stos
andb
lret
push
mov
cmp
rolb
dec
xlat
add
add
leave
jecxz
and
test
out
mov
sbb
stos
dec
dec
xchg
fadds
inc
cmpb
sub
lcall
dec
cmp
int
pop
and
mov
jmp
sub
adc
cmp
mov
and
movsb
cmp
outsb
mov
scas
inc
pusha
icebp
lret
dec
pop
movsl
jns
les
adc
or
or
adc
xchg
sub
out
add
push
fwait
mov
addr16
add
mov
hlt
and
test
iret
mov
xor
mov
sahf
sahf
test
outsb
subb
test
movsl
cmp
mov
movsl
pop
mov
lret
ja
shl
icebp
aam
loopne
pusha
inc
int
das
mov
xchg
ljmp
stos
push
push
dec
xor
and
xchg
cwtl
testl
sbb
jbe
mov
or
inc
add
mov
adc
and
push
dec
dec
lea
and
adc
or
jo
lds
leave
int
jbe
stc
xor
cmp
jae
leave
cmpsl
aam
push
jmp
insl
mov
push
push
lret
out
lds
push
jb
sbb
pop
pop
sub
rcrl
aam
arpl
add
dec
iret
add
lock
ja
xchg
mov
inc
enter
inc
in
xor
gs
cmp
fdivrl
adcb
cli
test
mov
cli
pop
mov
push
xchg
inc
aam
xchg
fbstp
add
lcall
ret
add
and
pusha
sbb
jmp
push
push
mul
jle
cmc
jmp
inc
loop
aaa
je
pop
in
push
push
jl
gs
adc
dec
stos
lahf
out
pop
shlb
and
mov
mov
push
jae
mov
xchg
mov
scas
sub
inc
push
loope
sbb
mov
pop
mov
pop
insb
cmpsl
mov
loopne
jge
insl
enter
call
and
movsb
jecxz
sarb
cld
leave
xchg
das
rcr
push
cmp
imul
sub
imul
mulb
dec
mov
sub
pop
shlb
mov
pop
outsl
arpl
scas
sub
jns
jbe
bound
add
or
add
pop
dec
fistl
movl
sbb
ss
ja
jmp
add
xchg
call
fdiv
cmpsl
jl
stc
adc
jb
sarb
fiaddl
xchg
lahf
inc
cmp
pop
xor
jge
ret
inc
sub
fidivl
sbb
out
push
dec
cwtl
mov
loope
int
mov
mov
dec
mov
pop
je
xor
aaa
adc
pop
addr16
je
out
lret
fnstcw
sbb
mov
sbb
jno
xchg
cld
pop
mov
xor
mov
xchg
outsl
ds
or
out
int
push
or
movsb
cwtl
mov
jb
pop
and
mov
mov
ss
sarb
pop
adc
cwtl
ja
subl
loope
arpl
jb
unpcklps
into
fstpl
stos
add
cmc
and
xor
jb
cmp
pop
addr16
pop
sub
mov
shrb
and
sbb
dec
leave
xchg
imul
lock
add
daa
mov
rcrb
stc
sbb
ret
cltd
addl
mov
pop
mov
stos
sbb
lock
scas
cmp
sbb
pop
stos
jnp
pop
subl
hlt
lcall
fimuls
lock
je
test
pop
lret
inc
pop
pop
pop
jmp
repz
mov
xchg
add
pop
sbb
xor
push
adc
xchg
jmp
xor
add
pop
dec
or
out
cmp
mov
cltd
lods
add
sub
in
jecxz
dec
mov
addr16
mov
mov
push
xor
xor
adc
xchg
mov
xchg
pop
and
mov
or
stc
inc
mov
ficoms
adc
jle
dec
les
nop
xchg
int
ss
mov
xchg
jbe
sub
or
enter
lods
xor
mov
jne
adc
sbb
lret
push
mov
pusha
lcall
dec
mov
sub
nop
mov
daa
cltd
lock
nop
fadds
fcompl
in
sub
sti
or
aas
pop
addr16
jne
cwtl
leavew
pop
addr16
add
sahf
movsl
fisubrl
xchg
call
xchg
adc
push
xchg
mov
cmp
xchg
rol
and
sbb
jo
lods
or
dec
popl
pop
and
adc
fadds
jmp
icebp
xor
jb
pop
in
rorb
inc
faddl
sbb
scas
aaa
sbb
mov
addl
pop
or
cmp
xchg
pop
pop
or
out
and
scas
and
cmpsb
sub
test
jmp
adc
ret
inc
inc
test
subl
inc
jge
mov
in
pop
cmpsl
or
and
xchg
fmulp
scas
cli
xchg
mov
add
das
jle
mov
jnp
out
repz
sarb
push
mov
in
shl
fstps
ja
orl
lcall
cmp
pop
sti
or
aaa
mov
lea
call
push
jg
sub
inc
jge
sub
pushf
decb
movsb
les
push
pop
cld
sub
lock
in
cmovbe
dec
xchg
stos
sbb
cwtl
jle
in
in
leave
ret
mov
inc
test
mulps
repnz
mov
aad
cmpsl
dec
adc
sub
push
jb
xchg
or
pop
pop
popa
in
ror
ficompl
xchg
ret
movsl
cmpsl
out
test
incb
push
xchg
cmp
subb
push
add
add
mov
sub
stc
out
jl
in
dec
xchg
imul
arpl
mov
and
xor
lds
lcall
movsl
mov
lahf
push
xor
push
jg
adc
dec
xor
bound
jb
add
subl
inc
xchg
mov
adc
lock
pop
insb
mov
jp
in
scas
mov
pop
lea
fisubl
sub
rcr
cltd
jp
add
jns
dec
out
mov
in
ret
test
sarb
mov
mov
xlat
cmp
out
rorl
in
scas
nop
xchg
ja
xchg
dec
aad
inc
cmpl
inc
push
in
ds
jns
pop
or
adc
and
mov
add
insb
ficompl
fmull
jg
leave
sub
xchg
int
int
sbb
sbb
stc
shr
popl
outsl
shrb
and
adc
jne
cltd
ror
xchg
shl
mov
sti
dec
stos
add
scas
ficompl
ss
push
lahf
xlat
inc
outsl
movsl
sbb
out
add
out
int3
ss
stc
mov
lock
dec
imul
inc
stos
xlat
lret
jp
pushf
pop
push
rcr
call
and
adc
les
ret
filds
mov
and
pushl
lods
into
test
jp
movsl
mov
xchg
shll
cwtl
xlat
mov
or
call
insl
loopne,pt
jne
out
popf
lret
mov
icebp
add
push
aaa
xchg
mov
shrb
leave
popf
lods
jp
xchg
sbb
dec
nop
jp,pt
adc
and
xor
enter
lods
aad
popf
pop
add
and
fnsave
cmp
cmp
jle
fwait
std
mov
fcompl
pop
push
or
xlat
sbb
pop
pop
popa
xchg
cmpsl
xchg
xchg
dec
or
mov
mov
and
stos
leave
mov
jp
xchg
es
xchg
outsl
shll
cmp
cmc
aad
mov
sbb
xor
mov
inc
jbe
ret
aam
adc
jne
cmp
pop
cli
dec
mov
mov
mov
incb
push
sub
push
outsb
data16
adc
inc
jmp
fucomi
jns
xchg
xchg
in
in
cmp
push
pop
les
scas
xchg
jge
ljmp
decb
cmpsb
mov
movsl
shl
or
iret
xchg
lock
push
push
filds
cwtl
int3
out
sbb
xchg
out
sarl
adc
add
xchg
jge
outsb
dec
cld
ret
nop
cmp
xchg
andb
sbb
jp
insb
insl
adc
cmpsb
cmpsl
lret
cli
rcl
faddp
fildll
pop
aaa
out
test
xchg
push
sub
cmp
push
daa
daa
xchg
jns
scas
add
in
frstpm(287
xor
lods
add
rep
and
js
movsb
dec
mulb
aad
mov
scas
jo
jae
sub
mov
dec
mov
addr16
xor
push
movl
xor
pop
sbb
js
ds
fadd
sub
jns
lret
fsubrl
xor
and
cmp
lret
ret
fstp
push
scas
popa
sbb
leave
int
aas
es
inc
fiadds
cmp
cmp
test
out
aad
repnz
data16
push
ds
dec
push
xchg
jmp
fsubs
adc
into
mov
pop
cli
and
pop
icebp
pop
insb
sbb
jl
cmp
or
inc
add
cmpsl
push
lods
addr16
inc
mov
loop
aas
mov
ror
stos
push
jg
sub
mov
out
call
xchg
adc
into
and
mov
dec
fcoml
pop
and
hlt
dec
cli
loop
bound
xchg
ja
int
ss
lods
cmp
lods
add
enter
cmpsl
je
ret
cmp
mov
mov
or
xor
add
lods
pop
jp
sub
in
push
test
adc
les
inc
or
xor
mov
in
xchg
fisubrs
rcll
dec
cmp
out
jbe
xchg
dec
jne
inc
adc
mov
mov
sti
cli
mov
mov
mov
mov
testb
push
dec
xor
xchg
jecxz
int3
mov
mov
pop
push
into
das
sub
dec
push
pop
sub
stos
leave
push
push
jg
cmc
insb
and
xchg
mov
lock
xlat
mov
in
xchg
movsb
sub
mov
jnp
test
pushf
dec
stc
and
sub
imul
add
inc
push
stos
adc
shl
movsl
push
inc
push
sbb
dec
mov
icebp
fdivp
xchg
sti
ss
rorb
jae
sub
int3
pusha
adc
jecxz
loopne
jns
movsb
cmp
dec
sbb
std
pop
fstp
neg
jb
jg
fidivl
test
sbb
jo
fstps
fstl
aad
and
push
xor
mov
fsubr
lods
cld
or
fiaddl
adc
lods
js
js
mov
pop
cmp
jle
sub
xchg
cwtl
sub
add
orl
mov
sbb
push
jg
sub
mov
pop
pop
sti
pop
mov
and
push
push
ja
cmp
ds
addr16
shll
inc
dec
adc
loop
sti
mov
repnz
mov
hlt
sub
or
jbe
cmpsl
inc
add
cmp
call
pushf
mov
ret
arpl
cmpsl
scas
push
lret
loopne
sbb
jbe
xor
pop
hlt
inc
adc
aas
loopne
mov
push
xchg
jno
popa
mov
stc
out
popa
out
out
movsb
and
mov
sub
out
outsb
ss
insb
clc
dec
jecxz
sbb
push
in
pop
dec
adc
orb
lret
popf
not
outsb
sar
adc
outsb
push
push
xor
mov
in
mov
dec
push
jl
push
jae
mov
mov
popa
mov
scas
test
sarb
fstps
mov
pop
xor
pop
push
jns
shufps
movsb
adc
lret
sarb
cmp
adc
lods
rcl
xchg
mov
add
test
mov
rcrl
cwtl
addb
push
sub
xchg
push
dec
sub
es
popfw
inc
decb
pop
inc
lret
test
cwtl
mov
jg
sahf
hlt
cmp
mov
xchg
xchg
cmp
adc
push
and
mov
popa
sbb
insb
jbe
push
cmpsb
lds
out
push
int3
shlb
into
sbb
mov
lock
and
jno
push
nop
cli
icebp
fnstsw
loope
icebp
lret
loope
test
sti
fdivl
frstor
sub
js
outsl
push
cmpsb
imul
movsb
jne
sbb
jnp
jecxz
push
nop
inc
cli
iret
jnp
cld
mov
mov
or
dec
sub
mov
pop
data16
mov
outsb
int3
sub
inc
xorb
out
pop
fimuls
outsb
lock
int
ret
dec
dec
jns
add
sub
loope
mov
repnz
mov
rorb
ret
dec
mov
add
frstor
and
clc
push
add
loope
jne
sbb
or
sbbb
jne
pop
jno
arpl
subl
outsl
push
imul
into
push
aad
sbb
jl
mov
clc
rcll
shl
or
pop
in
out
lcall
dec
xchg
fstpl
mov
sub
jl
jns
pop
js
mov
or
mov
push
aad
out
adc
sarl
jns
push
fsubs
aas
mov
icebp
clc
sbb
push
pushf
pop
xchg
fistpl
leave
shlb
inc
sbb
pop
je
jns
lcall
xor
or
push
mov
inc
jns
out
pop
cwtl
xor
mov
or
jg
aam
xor
lcall
push
and
leave
add
loopne
movsb
test
lods
cs
or
lret
call
in
mov
xorb
fcomip
call
inc
push
dec
push
add
sub
ja
cld
pop
jae
cltd
or
fsubr
sbb
int3
push
scas
hlt
jbe
mov
push
pusha
bound
mov
push
mov
jae
push
scas
cvtps2pd
test
scas
adc
sbb
xor
iret
add
and
pusha
js
das
test
xchg
push
push
cmp
lods
rorb
jnp
bound
dec
daa
int3
and
lea
jo
cmpsb
and
stos
push
insb
push
sbbl
or
sarb
iret
cmpl
popf
push
leave
lods
or
push
nop
xor
in
sub
rclb
add
jmp
mov
fidivl
jle
out
sbb
pop
mov
enter
popf
or
cmp
jne
mov
dec
cwtl
mov
jle
or
bnd
test
add
cmc
xchg
xchg
jecxz
pop
int3
mov
push
dec
cmp
inc
or
decb
mov
and
jp
push
repnz
push
sub
xor
jmp
xchg
lret
js
push
fcoms
daa
jge
pop
fst
lcall
ret
scas
fmull
adc
and
sbb
popa
xor
out
stos
pushf
ror
jno
outsb
pop
aas
mov
fcomps
sbbl
repnz
scas
dec
out
push
fwait
or
sub
pushfw
mov
add
xchg
or
inc
call
lds
insl
cmp
mov
incb
leave
lock
or
xor
lea
loop
cs
jmp
lods
nop
inc
aam
in
and
int
sahf
and
pop
out
jne
jge
cld
sbb
je
ljmp
mov
repnz
cmp
xor
xchg
sub
iret
popf
dec
push
xor
push
cli
jl
jbe
xchg
xchg
outsl
push
arpl
mov
fadd
outsb
fnclex
sub
clc
inc
inc
das
mov
arpl
jg
andb
adc
jecxz
jg
cmp
dec
pop
ds
pushf
xor
add
gs
into
rol
arpl
push
mov
outsl
pop
sti
mov
jecxz
adc
movsl
adc
xlat
jle
lret
cld
jbe
jl
inc
test
pop
inc
dec
cmp
jno
call
ljmp
cmpsl
xchg
cmpsb
mov
jns
and
inc
fistpll
cmp
iret
enter
add
add
mov
push
mov
pop
add
mov
mov
imul
leave
or
add
mov
mov
pop
lods
bound
lret
lret
cmp
mov
pop
lods
pop
scas
cli
inc
inc
or
sbb
inc
dec
cli
push
pop
sar
mov
jmp
incb
repz
outsl
jle
pop
sbb
pop
test
sbb
mov
cli
popa
int
pop
pusha
mov
adc
in
test
ret
imul
in
mov
outsl
mov
dec
lret
divb
sub
jo
mov
sub
pop
xor
or
add
sbb
jae
jg
cmpl
stos
xrelease
jns
mov
push
test
iret
out
sbb
dec
fwait
push
mov
push
lods
mov
lock
movsl
and
push
mov
mov
xchg
nop
mov
add
sbb
mov
repz
clc
cmp
inc
push
in
add
cmc
inc
dec
jg
cld
jl
lcall
loope
push
clc
sub
rorl
incl
lcall
cmpsl
addl
or
jp
test
sbb
imul
push
je
cmp
and
pop
inc
adc
cmpsb
fistl
xchg
dec
sub
hlt
popa
jbe
mov
fwait
xlat
xor
repnz
repnz
cmp
adc
push
mov
sti
and
stc
xor
pop
add
fnsave
xchg
and
pusha
incb
cltd
fnstcw
or
adcl
sahf
xor
jns
xor
xchg
mov
push
inc
popf
mov
mov
scas
push
cmp
cs
aas
sub
jno
and
sbb
loop
popf
lcall
and
cltd
push
iret
popf
test
or
or
jnp
sbb
lcall
push
pop
js
inc
mov
pop
mov
rcll
repz
mov
insb
divl
push
cmp
outsb
lahf
dec
call
xor
loopne
and
jg
push
clc
xchg
dec
ja
sbb
ljmp
push
pextrw
pop
mov
adc
cmp
jle
pop
movsb
sub
insl
xor
add
jge
dec
push
pop
rcrl
into
mov
pushf
int
mov
pusha
leave
fidivl
out
fisubrl
sub
in
call
and
sub
dec
add
testl
popf
or
ja
jg
sbb
mov
sub
and
in
jg
cmp
or
stc
and
jge
je
cmpsb
push
movsl
mov
xchg
and
jg
push
andb
insl
hlt
and
adc
pop
aam
out
outsb
add
mov
imul
daa
sahf
flds
pop
jl
dec
test
sbb
pop
out
addr16
clc
shl
mov
pop
mov
push
xchg
sbb
add
mov
cmpsl
pop
dec
test
int
out
inc
dec
mov
add
xlat
mov
inc
dec
mov
out
xchg
dec
lods
add
mov
cmp
mov
stc
mov
mov
sub
adc
mov
mov
dec
out
lcall
aaa
sbb
push
sbb
push
fsubl
mov
cmp
jge
sbbl
mov
mov
scas
lea
push
fisubrs
mov
movsb
or
shlb
push
and
stos
sbb
adc
inc
outsl
fmul
sar
cmp
lea
jge
xor
insb
out
aaa
sbb
sub
sar
add
repnz
cld
out
fnstenv
cmpsb
jae
xchg
add
sub
gs
mov
jle
or
mov
cmp
sub
mov
inc
lcall
aas
loop
call
iret
dec
xor
arpl
jg
push
push
push
push
mov
ljmp
ljmp
fcmovnb
out
dec
shrb
je
push
mov
push
mov
mov
fs
sbb
inc
les
loop
dec
das
int
xlat
dec
dec
je
lds
mov
pop
lea
cld
jecxz
subl
mov
mov
mov
sbb
lcall
fxam
popa
daa
xor
cmp
imul
or
imul
out
push
dec
adc
xor
aaa
js
dec
mov
mov
fstpl
sub
push
bound
sbb
sbb
adc
scas
inc
fsubrp
add
mov
cmp
adcl
inc
in
mov
xchg
jp
sti
lds
pop
mov
cmc
daa
mov
or
lods
int
imull
xlat
sbb
addr16
call
clc
cmc
rclb
mov
loop
mov
push
sub
clc
gs
aas
loop
mov
mov
iret
lods
das
int
xor
fcomps
leave
repnz
jb
pop
mov
sahf
fdivs
xchg
inc
pop
daa
mov
loope
pop
xor
and
adc
imul
stos
aam
insl
add
dec
inc
scas
dec
nop
cmp
orl
push
push
aad
lods
or
scas
out
ljmp
cwtl
into
rcll
mov
jp
inc
push
sti
cmp
sub
into
lcall
scas
out
scas
enter
ja
or
test
jno
xchg
add
dec
fadds
ds
xchg
sub
sub
or
jo
nop
dec
cld
push
or
mov
addr16
dec
f2xm1
or
cwtl
in
int
jnp
in
in
adc
xlat
add
add
sbb
mov
pop
inc
scas
test
or
pop
jmp
lahf
repz
inc
fwait
popf
loopne
nop
push
jmp
sbb
lret
mov
adc
and
pushf
insl
js
pop
mov
in
jge
add
test
cmp
sti
loopne
dec
pop
insb
movsl
inc
jmp
int
xor
push
pop
shlb
iret
in
adc
jno
adc
add
in
fstps
mov
sub
lahf
push
mov
mov
jo
or
add
pop
push
and
les
idivl
push
test
fstpt
add
daa
out
stos
and
ljmp
push
loop
fistpl
push
jmp
sub
xchg
frstor
xchg
pusha
ret
or
mov
mov
push
out
jmp
sub
roll
enter
arpl
out
xchg
jl
adc
in
jle
neg
sub
push
inc
filds
call
dec
stos
push
add
mov
sbb
inc
adc
std
fiaddl
sahf
dec
movl
outsl
pop
pop
es
xchg
rorb
js
sbb
or
lods
pop
cmp
std
jecxz
and
sub
lcall
fmulp
xor
fcomps
idivl
add
fmuls
and
nop
adc
add
xchg
int3
hlt
xchg
adc
repz
pusha
pop
lods
add
mov
dec
or
fs
lret
sbb
jmp
out
jmp
fmull
sub
in
cmp
xchg
jp
xchg
inc
cmp
inc
inc
push
insl
inc
push
add
or
jmp
mov
push
mov
xchg
sub
push
inc
inc
lds
les
push
pop
mov
and
hlt
pop
sub
xlat
test
mov
dec
push
lret
mov
pop
fsin
push
aam
cmp
push
outsb
or
lcall
gs
ja
pop
lret
cmp
insb
cmpsl
repnz
cmp
sbb
jns
test
iret
mov
fdivl
rorb
push
xchg
push
xor
xchg
mov
mov
push
test
push
lret
pop
xor
sbb
test
dec
mov
aad
out
out
lret
test
mov
sbb
ret
mov
push
cmc
sbb
lods
adc
xchg
aam
lock
jnp
dec
imul
in
xchg
dec
mov
adc
pusha
scas
jl
es
pop
inc
or
scas
push
cmp
sub
mov
cmc
jb
aaa
or
rdmsr
test
sbb
inc
pop
sbb
sub
mov
mov
stos
sbb
out
mov
mov
cld
call
xor
xchg
xchg
inc
pop
pop
xchg
cmc
fdiv
jl
popf
xor
mov
xchg
std
sbb
out
idivb
aam
xchg
scas
jno
loope
push
loope
fstl
sbb
xchg
cwtl
sub
cmp
in
outsb
aaa
sub
mov
loopne
stos
cltd
dec
imul
jmp
call
cmp
pop
push
imul
mov
or
mov
pusha
or
shlb
xlat
pushf
stos
jge
or
addr16
xchg
sahf
xor
xor
shl
sti
subb
lahf
jno
mov
repz
insb
gs
lds
mov
stos
add
or
idivb
lods
dec
xor
adc
lock
ja
lahf
and
leave
pop
mov
lret
dec
rorl
outsb
fidivrs
cmp
mov
sbb
js
lods
mov
stos
sub
sahf
test
or
js
dec
std
loop
call
neg
lods
sbb
js
mov
push
jmp
jmp
xor
cmpsb
add
lods
inc
adc
or
orl
popa
aaa
sub
sub
push
push
jb
and
lds
jle
xor
and
dec
scas
das
inc
sarl
cmc
jae
loop
xchg
and
or
add
stos
push
fsub
xor
movsb
or
mov
jg
das
in
scas
ds
lods
lret
xor
mov
test
xchg
fsubr
test
flds
jnp
movsl
ror
jecxz
mov
out
push
add
dec
sub
enter
jae
fcomps
cmp
jecxz
inc
dec
jne
push
loopne
and
mov
and
repnz
push
add
mov
xchg
sub
shrl
xchg
adc
push
pop
xor
mov
inc
pop
add
incb
sbb
loop
jmp
and
repz
jp
push
or
mov
jle
jnp
jle
pusha
add
das
fdivrl
adcb
sarl
je
lds
or
js
jb
xlat
in
loopne
scas
insb
mov
xchg
xchg
pcmpgtw
jp
je
mov
cli
add
in
push
shll
mov
lea
push
mov
xchg
inc
loope
nop
les
jno
and
sbb
sarl
call
push
decb
into
cmc
pushf
popa
cmp
sbb
sahf
sub
dec
data16
movsl
les
enter
in
sbb
es
push
push
dec
push
hlt
out
add
push
mov
dec
cmp
push
inc
xchg
xchg
adc
stos
push
lock
out
inc
xchg
mov
je
mov
popa
jbe
push
xor
pop
mov
sarb
repz
ljmp
dec
jbe
mov
mov
in
adc
pop
or
in
push
xorb
test
insl
std
sub
jne
cmp
cld
popa
test
fucomip
cmp
in
shll
int3
into
and
cmp
sub
sbb
mov
mov
cmp
cmp
inc
andb
pop
pop
pop
sahf
lds
mov
pushf
xchg
push
push
sub
sti
mov
cmp
push
lock
push
push
aaa
push
call
aas
jb
lret
hlt
bound
adc
adc
outsl
sbb
jmp
jl
dec
in
mov
mov
jns
xchg
adc
jb
enter
jge
scas
mov
inc
jecxz
sbb
popf
bound
push
addr16
sub
xchg
jl
or
aaa
inc
cmpl
mov
shr
scas
fdivs
ss
or
inc
je
sti
adc
mov
mov
pop
dec
push
sub
mov
mov
loopne
test
add
jp
dec
lds
ss
pop
add
dec
aaa
inc
pusha
mov
mov
mov
test
cli
sbb
fisttpll
ljmp
call
mov
mov
or
loopne
pop
mov
mov
jae
add
or
popa
mov
inc
dec
add
shlb
cmp
jae
fldcw
mov
fidivs
jb
outsl
inc
sbb
fmulp
pop
scas
sub
and
dec
dec
cmpsl
lret
add
mov
push
add
and
cmpsb
nop
mov
xchg
call
lea
aad
fcomip
mov
mov
gs
add
cmp
pop
sar
inc
adc
jo
mov
enter
fs
sahf
pop
xchg
mov
sbb
daa
lods
jg
sahf
sbb
sbb
mov
iret
repz
fidivrs
dec
sti
rorb
mov
jne
enter
jns
mov
cmp
inc
mov
xchg
test
daa
cmp
divb
popa
pop
enter
movsb
test
nop
enter
fwait
in
stos
mov
sub
adc
pop
sbb
cmc
neg
and
jg
push
or
and
fxtract
sti
sub
and
xor
fimuls
icebp
push
add
shlb
or
lds
scas
sti
ficoml
pop
shll
push
sub
out
dec
idivb
mov
movsb
adc
xchg
jbe
imul
test
shll
xorl
cmc
mov
sub
lret
inc
test
scas
shrb
inc
fdivl
sbbl
test
pop
adc
loop
inc
jnp
mov
lea
mov
imul
adc
fs
shlb
cmp
push
cli
cmpsb
cmpsb
add
lret
fdiv
jecxz
dec
or
mov
mov
mov
push
out
imull
test
test
dec
adc
scas
scas
add
sub
mov
fucomp
pushw
inc
or
adc
xor
sahf
repz
xchg
mov
xchg
leave
jp
dec
push
loop
ljmp
dec
jge
ror
sbb
xlat
add
lea
ja
pop
icebp
pop
sub
jp
je
and
jge
loop
pop
lcall
inc
sub
imul
pushf
add
jle
dec
fdivr
daa
inc
inc
sbb
dec
and
ja
pslld
push
and
jmp
loop
stos
mov
lds
jp
pop
push
jp
cwtl
cld
fwait
mov
sahf
and
pop
push
aaa
shl
pop
mov
adc
push
pop
std
fsts
imul
mov
pop
outsb
mov
test
sbb
hlt
scas
stos
dec
adc
push
out
push
adc
jb
push
mov
popa
addl
mov
andl
pop
sbb
xor
fbld
adc
cmc
jbe
pop
sub
insb
std
test
xchg
lahf
sub
or
shll
fcoml
test
push
jg
je
data16
sti
dec
repz
cmc
xchg
sub
mov
leave
sbb
test
in
test
mov
scas
es
in
in
mov
mov
jns
jecxz
into
out
cmpsb
inc
mov
popf
mov
mov
and
enter
cmp
cmp
mov
leave
add
mov
sti
xor
xor
mov
xacquire
rclb
movsl
xchg
sub
inc
call
negl
jbe
pop
sub
and
nop
mov
mov
xorl
repnz
mov
mov
fcmovnb
clc
xor
ljmp
xor
test
push
not
sbb
test
pop
mov
mov
add
and
pop
pop
push
pop
repz
fcmovb
vmovaps
ffree
aad
subl
daa
adc
adc
leave
hlt
mov
popa
fwait
xchg
adc
dec
out
ret
ss
into
dec
dec
leave
ret
nop
mov
loopne
mov
enter
push
sbb
cmp
adc
pop
dec
mov
mov
sbbl
mov
inc
test
adc
pop
addr16
push
mov
cmpsb
insl
mov
ret
jg
insl
cmovae
jp
adc
ljmp
sub
cmp
popf
jp
jne
imul
hlt
ss
into
enter
inc
pop
cmpsl
sub
adc
sti
sbb
mov
fs
pop
add
jo
orb
sti
lret
mov
movsb
mov
fwait
popf
jge
add
cmp
pushl
mov
xor
in
or
pop
mov
nop
jge
add
fmull
mov
pop
or
pop
sarl
das
cmp
xor
adc
inc
xchg
inc
fldz
scas
and
adc
inc
xchg
cmp
pop
imul
or
mov
stos
xchg
jne
stos
jmp
sbb
inc
pop
push
inc
pop
fs
xchg
je
jmp
cmp
pop
ja
dec
out
or
pop
mov
jge
cld
jg
add
sub
cmp
add
inc
sar
inc
leave
xchg
add
int3
and
nop
xchg
or
pop
test
inc
movsb
in
fisttpl
pusha
mov
aad
jbe
dec
das
xor
jbe
push
daa
xchg
jo
push
mov
sub
cmp
std
pop
std
not
jae
pop
lods
dec
sbbl
mov
add
cmp
stc
pop
lahf
push
aaa
icebp
push
or
mov
pop
outsl
jp
insb
jne
pop
int
mov
int3
push
ss
icebp
xchg
adc
mov
push
jno
cmp
push
ja
in
fwait
push
push
inc
sub
mov
sahf
mov
adc
pushf
pop
pop
outsb
in
cmp
inc
cmp
loope
xor
mov
pop
mov
leave
or
sub
or
cmp
dec
dec
dec
xlat
rcrb
andl
inc
stos
cmpsl
sub
and
dec
push
outsb
jp
jl
sub
mov
mov
pushf
adc
test
cmp
imul
pop
out
jle
jmp
sub
aad
sub
into
add
mov
daa
into
enter
js
jno
mov
call
popf
nop
xor
xor
ljmp
pop
inc
shrl
mov
jne
push
sahf
push
and
push
icebp
lds
shlb
stos
sti
mov
sahf
jl
sbb
sub
or
mov
divb
subl
sbb
push
sub
pop
jbe
das
mov
or
xor
lock
out
lcall
rcll
es
fnstsw
jg
insl
in
fists
mov
or
ss
jae
jge
pop
mov
arpl
cmp
add
sbb
movsb
or
mov
sbb
mov
in
int
adc
mov
jecxz
pop
sarb
mov
mov
pop
ja
xchg
dec
cmp
mov
inc
push
lods
in
popa
cwtl
push
add
fs
and
sub
dec
cmp
cmp
cmp
jmp
call
movsb
aad
out
addr16
dec
pop
mov
sti
cmp
in
inc
adc
aas
in
adc
ffreep
sti
cmp
push
je
ret
push
mov
dec
jecxz
jg
cs
fildll
xor
pop
loop
jmp
pop
shll
jmp
push
imul
ljmp
or
stos
ret
stos
daa
lret
push
pop
xchg
movsl
sub
cmp
setp
inc
inc
sub
in
xchg
je
loopne
out
xor
jb
xor
push
or
jle
pop
rorl
push
ljmp
pusha
dec
dec
xchg
loop
sub
int3
into
test
ds
xor
add
and
xor
and
js
stos
cmpsb
push
cli
cmc
mov
stos
or
xor
adc
popa
mov
pop
pop
pushf
enter
fcmovnbe
scas
hlt
push
jo
cs
xlat
inc
mov
pop
pop
pop
ja
dec
xchg
push
add
lahf
hlt
sbb
or
in
mov
aad
push
aaa
pop
sbb
outsb
loop
aas
arpl
mov
fs
out
jbe
and
or
xchg
rcrb
ret
or
jb
xchg
movsb
inc
inc
mov
mov
add
pop
mov
pop
mov
negb
out
sarl
mov
int
add
add
std
jne
bound
lds
sub
fsubp
sub
inc
mov
mov
inc
and
mov
mov
lods
aaa
sub
jecxz
js
test
push
dec
mov
les
mov
inc
cmp
dec
pop
js,pt
aad
mov
inc
mov
aad
adcl
in
sub
pushl
push
int3
lea
push
xchg
arpl
inc
push
rolb
push
jne
leave
adcb
test
call
pop
jnp
shlb
pusha
outsb
and
pop
inc
and
pop
out
addl
test
pop
fsub
or
xchg
scas
lret
inc
jno
cmp
dec
xchg
push
or
js
mov
sub
lods
xchg
mov
mov
add
mov
repz
cmp
inc
add
ds
pop
dec
adc
dec
js
push
dec
outsb
scas
mov
cmp
mov
mov
push
xor
dec
fs
bound
into
push
sti
pop
pop
fwait
push
nop
or
fcompl
fucom
dec
push
mov
cmp
sbb
stos
xchg
pop
xchg
idiv
shlb
js
lret
jno
pop
loop
mov
mov
mov
and
aas
xchg
xchg
add
sbb
jg
pushf
shll
cmp
mov
mov
stc
xor
rcrl
outsl
stos
adc
int3
and
add
and
xchg
popf
add
xchg
popa
int3
dec
cmp
xchg
mov
ret
in
cmc
push
out
outsb
and
xchg
lea
adc
sbbb
cmp
sub
jp
mov
sub
or
sub
jecxz
push
fldt
mov
insb
loope
mov
rcl
push
mov
stos
cs
test
mov
mov
fiadds
pop
or
cmpsl
js
in
js
pop
fwait
rolb
mov
ds
cmpsl
inc
push
call
jmp
lret
xchg
cmp
xor
addr16
dec
or
lods
test
xchg
sub
gs
xchg
icebp
mov
fdivrs
adc
cltd
hlt
fimull
cld
cmp
sqrtps
xchg
mov
xchg
mov
lock
stos
fsubl
sbbl
pop
push
lret
mov
add
scas
sub
dec
mov
mov
jle
cs
mov
fldl
call
les
rcl
mov
loope
or
ljmp
out
imul
push
arpl
mov
ss
jl
insb
test
ret
pop
shr
mov
dec
inc
push
adc
xchg
fisttps
mov
cli
cmpsb
pushf
std
sub
push
sub
repnz
arpl
lcall
out
lcall
insl
fadd
lret
loop
fnstenv
pushf
scas
adc
pop
xchg
in
push
out
cltd
cmp
and
inc
lock
adc
add
fldpi
xchg
cmp
inc
xor
xchg
mov
xchg
or
mov
into
outsw
jo
stos
notl
cmpsb
test
xchg
fidivs
add
rolb
sub
dec
xlat
cmc
rorl
sub
sbb
fcompl
cmpsb
xchg
adc
scas
cmpsb
cld
inc
into
xchg
mov
or
std
xor
and
push
lea
or
std
push
cmpsb
jmp
jb
in
outsl
or
aas
and
fs
pop
mov
pusha
adc
iret
mov
movsl
push
cmpsl
sub
xchg
and
pop
or
pop
inc
shlb
clc
sbb
cld
testb
mov
in
xor
sub
cmpsl
lcall
stos
int
in
jg
loop
cs
push
pop
jb,pt
fcoml
adc
ret
dec
jl
sub
sub
nop
jns
push
lcall
ja
dec
add
xchg
adc
and
test
or
and
scas
push
sbb
mov
add
xchg
push
mov
xchg
emms
mov
cmp
icebp
pop
mov
sbb
inc
push
test
fnstcw
cli
popa
mov
pop
xor
in
sub
sbb
into
xor
cmp
lret
cmp
ficoms
aaa
ror
lock
xor
dec
fisttpll
aam
cs
test
std
sub
mov
dec
rcl
adc
jg
mov
xchg
test
mov
test
xchg
rorb
iret
jne
jle
and
rolb
mov
addb
ja
sbb
mov
call
mov
out
mov
pop
push
inc
call
rcrb
aaa
insl
sbb
xchg
sti
in
xchg
fldenv
push
cmpsl
mov
mov
inc
insl
cmp
mov
aam
fwait
sbb
push
stc
mov
dec
jge
dec
or
fwait
data16
mov
je
pop
xorl
or
inc
mul
ret
push
add
hlt
jne
mov
imul
pop
lahf
cmp
sbb
nop
mov
inc
jle
stos
mov
sarl
pop
dec
ja
pop
jmp
cmp
imul
aad
pushf
repnz
or
cmc
cli
and
imul
jns
and
std
mov
dec
jle
lahf
mov
psrad
shrl
outsl
and
sub
mov
aad
dec
repz
cmpsb
inc
rcll
or
sbb
out
nop
loop
scas
out
sub
mov
rolb
cmp
cli
aam
xor
shll
jge
xchg
dec
pop
scas
mov
jmp
adc
sbb
xchg
lods
jbe
divb
test
jmp
popl
fcompl
daa
cli
xchg
ss
sahf
xchg
pop
popa
ss
stc
popa
je
push
icebp
push
jnp
inc
lds
and
test
or
lret
adcl
stos
in
cmp
cmpsl
inc
leave
je
xchg
in
pop
cli
and
lea
dec
stos
add
addr16
call
mov
mov
lock
sbb
cmpsl
add
das
call
sti
rcll
stos
loope
lods
ror
out
in
cmp
les
ds
test
iret
aam
cli
mov
mov
leave
insl
stc
insl
ret
gs
pushl
stc
aam
mov
cld
ja
or
push
outsl
pop
xchg
mov
pop
call
push
jcxz
inc
test
xchg
sub
mov
loope
xlat
iret
add
subb
dec
popf
sbb
test
fisubrl
push
int3
loop
inc
mov
enter
cmc
bound
dec
pop
fs
xchg
adc
leave
inc
jbe
or
xor
xor
popf
cmp
xchg
inc
lods
sbb
out
divb
jle
dec
inc
push
add
popa
jae,pn
jg
popf
cmpsl
lods
sub
sub
fisttpl
pop
mov
test
mov
rorb
cs
mov
cmp
lds
cli
sub
jae
call
inc
xchg
out
ret
mov
repnz
fimuls
inc
or
cmp
lret
in
aam
push
mov
mov
fisttpl
rcll
orl
mov
sbb
xchg
mov
ss
cltd
inc
pop
push
aam
clc
in
out
shl
jmp
nop
pop
pop
xor
cmpl
scas
mov
insb
add
ret
into
leave
fldl
ljmp
adcl
dec
xchg
and
out
cmpsl
push
enter
add
and
iret
xlat
push
gs
lds
pop
sahf
insl
add
inc
mov
flds
insl
das
pop
jnp
push
fsubl
out
mov
lahf
hlt
push
jno
xlat
jmp
out
pop
inc
inc
adc
xchg
fstl
scas
inc
mov
sbb
aam
lds
call
jl
in
push
scas
movsb
outsl
cmpsb
jmp
test
movsb
jo
rolb
dec
dec
xor
movsl
or
lret
or
mov
leave
push
testb
push
sbb
testb
into
movsb
jns
sub
mov
into
sub
pop
sbb
push
arpl
sti
jecxz
or
popa
cmp
push
pushf
mov
pop
xor
das
xor
gs
mov
sbb
jecxz
insb
loope
mov
xlat
push
xchg
jp
mov
insl
andl
loope
sbb
jns
or
add
insl
pop
sar
mov
mov
repz
lret
mov
out
test
int3
jmp
push
test
sti
sub
and
sbbl
mov
sub
sbb
fwait
mov
push
out
mov
jns
mov
lret
push
aad
stc
jecxz
rorb
fildl
sbb
jmp
dec
sti
cli
test
cmpsb
or
push
sarl
cmp
insb
sub
stc
enter
lahf
rcrl
ljmp
fisttps
lds
sbb
mov
enter
and
incl
call
je
jl
xchg
sbb
mov
cltd
enter
xchg
mov
or
testb
xchg
xor
push
cmpsb
ret
sub
cmp
pop
push
dec
xchg
and
pop
nop
xchg
cmp
push
or
pop
popf
insb
fs
xor
dec
jb
cmp
movsb
rcll
popa
pop
in
xchg
fistpll
out
out
xor
popf
scas
inc
stc
pop
fcoms
dec
inc
stos
push
mulb
mov
aas
fisubrs
sub
out
pop
cmp
sti
xchg
mov
push
dec
cs
mov
test
cmp
inc
inc
jno
outsb
inc
and
sub
lds
adc
add
mov
jno
sbb
mov
or
jno
jp
dec
call
jns
push
dec
test
pop
scas
test
mov
pushf
pop
les
add
pop
loope
aaa
test
scas
xor
cmp
fstl
int
sbb
sarb
push
test
out
push
dec
or
or
inc
add
adc
mov
dec
and
dec
xchg
pop
mov
rclb
aad
jmp
mov
mov
push
mov
test
add
data16
iret
fldt
popf
mov
pop
lods
out
pop
clc
inc
negl
lret
push
pusha
mov
dec
in
pop
pop
xchg
imul
or
push
in
push
adc
mov
xchg
cmp
jecxz
lds
jo
jp
pusha
xchg
adc
xorb
dec
mov
inc
cmpsl
sub
pop
movsb
xchg
mov
xor
mov
jne
stos
adc
out
shlb
xchg
psubd
fsubrs
out
push
mov
sti
adc
push
cmpsb
sub
cmp
jmp
test
add
sti
push
lods
push
leave
ja
insl
pop
jge
arpl
loop
xchg
xor
sub
push
mov
aaa
repz
nop
stos
jo
sahf
mov
cmp
mov
mov
and
mov
jl
int
lods
test
sbb
push
pop
popa
and
and
aas
mov
outsl
xchg
cli
adcb
fwait
dec
bound
dec
or
arpl
popa
and
adc
and
jl
dec
lock
cmp
mov
cmp
out
cmpsb
add
cli
and
jge
push
cmc
dec
xor
cmp
jge
adc
inc
clc
sub
sar
and
in
pushf
aam
js
adcb
mov
xchg
inc
lahf
nop
in
and
outsl
jp
push
and
stos
mov
es
pop
lock
popa
inc
xorl
pop
cmp
pusha
xchg
xor
xchg
in
divl
out
leave
dec
jnp
push
jno
pop
pop
popf
lea
shl
jb
mov
sahf
mov
dec
lcall
pop
mov
adc
call
mov
test
mov
dec
sbb
cmp
xchg
movsb
lcall
je
pmaxsw
mov
cmpsb
mov
lahf
inc
clc
lods
cli
add
cmpb
sub
pop
ljmp
jecxz
enter
scas
mov
faddl
ds
xchg
xchg
movsl
out
es
repnz
mov
outsl
test
js
and
sti
popa
mov
mov
cmp
aas
mov
aaa
out
stos
mov
lds
out
push
idivl
push
scas
nop
outsb
test
out
jg
stos
iret
mov
push
jg
mov
mov
orl
cli
pop
test
pop
std
insl
out
fwait
jecxz
aam
mov
push
dec
mov
lock
sbb
es
xchg
and
xchg
pop
add
push
sub
xchg
xor
cmp
lret
adc
pop
push
xor
inc
sbb
dec
push
jp
dec
lods
cld
dec
jb
sub
jmp
xchg
push
jnp
lea
mov
das
scas
push
dec
filds
ja
je
popa
inc
rcrl
cli
sbb
pop
stos
mov
in
push
leave
les
cmc
rcrl
fnstenv
daa
lahf
jp
xchg
mov
pushl
push
jecxz
scas
icebp
andb
int
adc
xor
aas
add
mov
jp
mov
lds
inc
push
mov
or
out
and
jle
xor
imul
pop
mov
inc
adc
sbb
stos
add
inc
ret
test
fnstcw
stos
mov
adc
out
jae
lods
inc
ja
or
andb
sub
dec
mov
fxch
mov
stc
mov
mov
mov
int
cmpsl
clc
jns
jo
pop
sub
arpl
mov
inc
sub
aam
cmpsb
add
bound
and
mov
les
roll
cmpb
es
jb
cmp
cmpsl
sub
add
leave
mov
jecxz
lcall
out
pop
je
leave
cltd
cmp
fs
push
xor
sub
push
movsl
pop
push
cmp
mov
and
xor
push
mov
pop
int
sub
faddl
mov
stos
mov
out
std
ja
xor
jns
lret
jmp
add
sub
mov
add
ds
push
popf
push
insb
test
xchg
leave
mov
cwtl
xchg
data16
add
and
xchg
push
sarb
stos
jo
cmp
jle
add
push
test
mov
mov
jp
test
and
cmpsl
sub
icebp
jge
fcmove
add
push
ss
mov
decl
fisubs
or
and
cmp
and
hlt
add
adc
repz
sahf
push
jo
ss
xor
shr
pop
pop
xchg
push
or
xlat
int
mulb
pop
push
and
and
mov
popf
jb
or
aas
xchg
inc
and
movsl
test
mov
jecxz
or
mov
jle
cs
out
sbb
pop
mov
sbb
add
cltd
inc
push
or
out
test
push
push
loop
addr16
dec
sub
dec
sub
aam
out
mov
ffreep
iret
fs
sub
repz
cmpsb
dec
stos
int
sub
mov
inc
mov
rcll
mov
lods
mov
mov
movsb
adc
cs
and
cwtl
out
lahf
lret
fwait
pusha
movsl
mov
mov
mov
xor
add
scas
mov
and
pop
sub
out
xchg
pop
aaa
inc
gs
dec
cltd
mov
loopne
mov
je
test
mov
or
jg
pushl
cmc
out
sarb
es
pop
jno
sbb
outsl
sahf
repnz
imul
mov
mov
xchg
xchg
xchg
and
out
mov
int3
sub
mov
mov
jbe
test
cli
in
and
or
mov
pushf
enter
incb
inc
negl
aas
cmp
jae
mov
xor
sub
movsl
push
add
mov
aam
repnz
dec
mov
and
inc
cmc
push
sbb
jo
das
fdivrs
mov
rorl
mov
or
jl
mov
fwait
lcall
fisubrs
fimull
mov
add
in
jbe
movsl
pop
xor
ja
imul
jp
push
fiaddl
test
and
addr16
xor
dec
lcall
jg
test
call
jns
fidivrs
out
add
pop
cli
ret
dec
xchg
sub
inc
loopne
adc
inc
sbbl
mov
in
idivl
leave
lret
cli
mov
testl
xchg
add
or
push
icebp
cmp
sub
mov
pop
sbb
cwtl
dec
int3
jno
inc
cmp
inc
jno
cltd
icebp
xchg
and
push
mov
and
cltd
xchg
mov
pop
and
fwait
cld
inc
ret
mov
cmc
jl
ret
cmpsb
cmpsb
and
adc
ret
push
mov
mov
bound
fwait
mov
gs
lods
jle
test
pop
cmc
jbe
adcb
call
jno
shrl
test
push
push
test
call
int3
mov
fisttpll
jb
cli
pop
es
xchg
jl
sbb
pop
push
outsl
jl
stc
push
or
cmp
xchg
add
in
in
je
hlt
rorb
xchg
icebp
jne
mov
fistpll
fs
scas
pop
lods
repnz
add
pop
jae
mov
mov
shlb
clc
mov
sub
xchg
jmp
loopne
out
sar
mov
sub
push
push
insb
push
xor
mov
xchg
adc
sbb
in
fists
repz
jno
and
cmp
clc
call
add
in
aaa
lock
ja
pop
out
mov
aad
push
ret
dec
inc
push
add
sub
adc
jl,pt
out
mov
daa
push
ror
mov
or
inc
xor
push
insb
sbb
xor
and
fdivl
mov
sbb
hlt
repnz
call
mov
add
push
jge
jne
jnp
inc
in
xor
das
loope
cmp
push
mov
xchg
iret
cmpsl
daa
insb
sbb
sbbl
in
into
adc
xchg
cmp
mov
add
out
inc
gs
out
push
aad
pop
outsb
jecxz
test
js
enter
loop
sub
mov
nop
mov
int3
mov
xor
or
jo
rcr
jae
iret
push
jnp
ret
inc
push
and
cmp
jge
mov
sub
dec
outsl
lret
sar
inc
lods
push
xchg
and
cmp
enter
shl
mov
jl
test
pop
stc
pop
les
dec
pop
xchg
xor
movsb
test
and
adc
enter
fisttpl
adc
rcl
out
mov
xchg
aad
in
std
mov
mull
negl
mov
xchg
pop
stos
mov
loope
mov
fwait
add
add
lret
in
in
clc
sbb
push
in
imul
sbb
xchg
das
insb
std
sahf
ret
hlt
pop
lock
out
cmp
hlt
inc
lock
fwait
pushf
mov
and
or
jg
mov
jae
pop
push
mov
jb
push
push
neg
jnp
inc
jb
xor
pushf
aam
sub
mov
push
mov
mov
mov
mov
push
bound
loop
sub
enter
xchg
jo
in
sbb
imulb
inc
test
or
fdivrs
repnz
jbe
dec
sbb
dec
dec
push
mov
test
lret
mov
mov
out
shll
pop
and
out
mov
inc
or
sarl
mov
xor
cld
or
gs
mov
sbb
iret
xor
pop
or
push
cmp
jmp
mov
ror
jae
jmp
fisttpll
mov
mov
inc
enter
fistpl
mov
icebp
imul
push
insb
jnp
out
stc
xlat
ljmp
mov
outsb
cmp
push
pop
lcall
cmpsb
xchg
movsl
cmpsb
adc
sub
sbb
lea
jne
ret
movsl
push
add
lret
pop
gs
mov
call
sub
xchg
cmp
inc
neg
pop
int3
sbb
stc
dec
dec
or
out
adc
cltd
push
jae
loop
test
int3
insl
push
repz
stos
xlat
ja
test
inc
jl
adc
data16
in
mov
in
xor
mov
out
lock
ds
jg
push
and
sub
movsl
xor
iret
mov
mov
xlat
aas
cs
test
into
push
js
cs
xchg
mov
dec
pop
ficompl
and
faddl
je
and
push
dec
fdivr
dec
std
fstp
add
dec
fnsave
sub
sub
adc
rcl
mov
rorl
mov
aam
adc
int
fwait
cmp
stc
ret
fcoml
clc
aad
inc
dec
js
lret
sub
cli
scas
cmovg
ret
mov
dec
ror
pop
cs
pop
sbb
aam
or
test
movsb
repnz
test
add
imul
pusha
daa
notl
cmc
mov
cmp
das
cmp
fsubl
in
lcall
push
aaa
or
das
sub
lea
mov
iret
sbb
sbb
or
push
xorb
call
dec
mov
sub
add
cltd
or
rorb
push
xchg
push
push
roll
add
dec
inc
lock
xchg
push
ret
jae
xchg
push
inc
loopne
cli
pop
mov
and
lret
push
push
cmp
out
inc
xchg
cltd
aam
add
mov
movsl
cmpl
mov
lods
inc
or
xor
xorb
push
adc
xor
pop
in
icebp
sbb
fwait
jne
sbb
loopne
cmp
div
push
xor
in
sbb
or
je
cmpsb
lcall
jne
mov
cmp
xchg
add
mov
push
divb
mov
mov
push
inc
pop
imul
inc
push
inc
test
mov
ja
pop
mov
lds
xor
push
xchg
lds
movsb
daa
mov
push
mov
xor
test
push
adc
cmpsb
pop
lret
aas
fisubl
push
jo
and
icebp
xor
jl
sub
mov
ds
pop
pop
push
mov
mov
add
bound
pusha
xchg
outsl
lds
or
or
cmpsl
pop
mov
loopne
ja
mov
out
in
stc
mov
sar
cld
push
mov
stc
push
xchg
repz
mov
aaa
pop
xlat
xor
lds
bound
stos
inc
mov
repnz
jecxz
je
push
sub
mov
adc
mov
fs
xchg
xchg
mov
mov
hlt
push
jle
sbb
aam
adc
repz
xor
das
inc
into
lret
or
and
cwtl
push
inc
add
hlt
jge
sbb
shrb
ds
jae
subl
outsl
outsl
sbb
mov
adc
lahf
xchg
iret
or
inc
xchg
mov
mov
dec
xchg
ret
scas
pop
mov
fcomi
and
inc
out
dec
or
stos
mov
push
adc
lret
xchg
add
pop
daa
dec
mov
jnp
repnz
stc
inc
xor
imul
xor
inc
call
jb
cwtl
jmp
aas
push
mov
mov
jne
sbb
jge
arpl
push
mov
jns
xor
inc
int
shlb
fldcw
in
leave
push
les
mov
popf
cli
cmp
sarb
leave
pop
xor
addl
idiv
movl
dec
iret
scas
out
fistl
mov
bound
leave
inc
push
fsubrs
rolb
mov
mov
sbb
or
test
mov
sbb
out
addb
fdivl
loope
sarb
popf
adc
repz
mov
sarl
jmp
xor
dec
ljmp
imul
loope
jg
imul
pop
push
push
xor
cmp
push
pop
inc
data16
jecxz
loope
cs
lds
out
push
sub
and
cltd
int
mov
sbb
jecxz
and
testl
mov
call
jne
ss
shr
mov
xchg
inc
aam
add
push
push
mov
out
xchg
and
in
jmp
fcomp
adc
and
stos
mov
aas
inc
js
xchg
loop
dec
hlt
or
mov
in
sbb
adc
aam
mov
push
cltd
pop
xor
imul
mov
pop
xchg
push
les
rcrl
add
das
xchg
xchg
cmp
lahf
int3
push
lea
fbstp
push
scas
aaa
mov
push
lods
mov
push
call
sbb
xor
scas
adc
pop
pop
pop
mov
sbb
loope
mov
syscall
mov
daa
inc
mov
scas
nop
inc
xor
sub
jmp
or
mov
jne
stos
jae
mov
jmp
stos
jp
push
mov
testl
lds
imul
fdiv
movsl
sub
jecxz
xor
call
cld
aas
cld
in
lret
fwait
xchg
dec
stc
mov
push
xor
jae
and
pop
insl
aam
xor
sbbl
out
cltd
pop
mov
xchg
xchg
cmpsl
mov
or
stc
jb
sbb
daa
add
jb
leave
jno
popa
adc
stc
faddl
stos
dec
jo
mov
fucom
in
cli
jb
cmp
cmp
mov
mov
and
in
xchg
in
notb
orl
cmp
mov
mov
add
shll
ds
in
pop
cmp
push
les
rcrb
mov
xchg
xchg
pop
mov
push
mov
jo
psrlw
out
mov
xor
mov
sub
lds
in
push
or
movsl
repz
test
lods
sarb
push
adc
test
mov
xor
jns
add
fcmovnb
addr16
cmpsl
sub
mov
call
push
ljmp
orb
sbb
sub
and
gs
popf
mov
xchg
movsb
pushf
hlt
inc
int3
cli
xchg
sub
in
and
mov
sub
push
xor
mov
imul
xchg
not
inc
outsl
imul
sbb
xor
or
and
into
test
std
in
xchg
or
dec
cmp
mov
mov
ret
xchg
xchg
cmpsl
add
or
shrl
add
inc
test
fs
out
xlat
rcrl
adc
fadd
scas
lea
fisubrs
inc
ret
sbb
mov
mov
dec
jg
cltd
lret
push
mov
pop
mov
enter
out
push
sbb
jp
push
std
popf
mov
iret
dec
lahf
mov
pop
bound
clc
pop
dec
pushl
push
rcll
sub
jle
mov
push
out
loop
gs
or
lods
push
test
out
inc
xor
in
outsl
adc
mov
add
adc
aam
flds
jge
add
push
and
in
xor
mov
out
cmp
and
pop
cmp
mov
or
lock
sbb
cmp
mov
push
push
mov
cwtl
jo
or
pop
pusha
jecxz
jns
lods
cltd
rorb
insl
pop
dec
ljmp
subl
pushf
sub
imull
into
xchg
jno,pt
sub
mov
mov
stos
outsb
sub
cltd
das
ror
xchg
loopew
push
leave
mov
sbb
divl
mov
popf
inc
mov
imul
mov
in
les
jmp
stos
mov
and
test
dec
and
push
lret
adc
jnp
jmp
ds
cs
cmp
enter
inc
push
mov
xlat
stos
lods
xor
daa
xlat
inc
cmp
ljmp
into
mov
in
xchg
inc
lahf
mov
rolb
jl
cmpsl
mov
popf
mov
xorl
pop
xchg
arpl
mov
jmp
inc
test
sub
add
call
mov
jmp
or
lods
rolb
sub
dec
push
fiadds
push
sub
outsl
mov
lcall
roll
mov
fsubrs
adc
lds
out
ret
mov
fsubrl
sub
jne
fidivrl
xor
lcall
fsubrs
dec
out
push
out
cmp
out
cltd
addr16
mov
bound
lret
imul
or
repnz
ficompl
dec
fildl
xchg
in
stos
xor
icebp
add
xlat
mov
aaa
cli
or
sti
adc
cmc
push
loopne
fnsave
test
ljmp
cmpsl
dec
fimull
or
xor
jno
sarl
dec
xlat
lret
xchg
mov
je
sub
dec
xor
clc
je
in
pop
adc
mov
fisubl
mov
add
push
mov
movsb
shrb
jo
xor
imulb
outsb
negb
data16
or
dec
jne
pop
adc
sub
xchg
lea
pop
popf
dec
mov
je
nop
jg
or
das
inc
sbb
mov
inc
dec
pop
nop
sub
fiadds
mulb
inc
pop
inc
cmp
movsb
call
ja
clc
sti
je
repz
stos
loope
enter
cs
pop
test
js
movsl
mov
movsb
pop
sarl
enter
cltd
int3
sarb
sub
aam
pop
aaa
inc
ss
adc
fsub
xchg
popf
push
cli
dec
ja
jns
xchg
jp
jle
push
test
ds
push
pop
flds
test
inc
pusha
add
insl
mov
push
mov
jp
pop
or
xor
add
add
ficompl
lret
dec
stos
push
add
lods
push
mov
popa
repz
mov
lea
shlb
dec
push
mov
inc
xchg
jge
addr16
xor
cltd
mov
xor
push
stos
fcompl
mov
sbb
pusha
lods
pop
es
add
sub
stos
sub
add
repnz
dec
push
cltd
in
das
xchg
enter
xchg
xchg
push
hlt
and
outsl
push
mov
aad
and
ss
pop
dec
les
popf
movzbl
sahf
in
insb
iret
mov
mov
enter
cmpsl
push
pop
fcoml
mov
xchg
pushf
sbb
lods
adc
pusha
cmp
shlb
outsl
push
fwait
out
test
out
xlat
fcmovb
push
xchg
pop
sbb
push
shlb
hlt
icebp
imul
imul
fdivrs
jno
adc
in
das
es
xchg
arpl
cmp
pop
xchg
mov
dec
outsb
sub
mov
pop
fwait
movsb
std
ja
mov
pusha
lock
sub
xchg
imul
lcall
or
call
test
cltd
sub
addr16
fidivrl
mov
leave
std
std
leave
mov
mov
inc
in
mov
rcl
enter
adc
xchg
push
loope
inc
ss
jle
pusha
jg
out
mov
adc
aad
sahf
cwtl
xor
ljmp
lds
stos
mov
push
aam
xor
pop
hlt
iret
push
lds
sbb
cmp
pop
mov
fimull
imul
andb
push
adc
scas
aas
add
dec
lods
cmpsl
mov
inc
sub
sub
dec
mov
popf
orl
and
jge
jo
pop
rcr
aad
mov
pop
jnp
adc
mov
xchg
int3
sahf
push
pop
daa
jmp
test
jg
mov
xchg
pop
lods
gs
cmpsl
fadd
inc
adc
sub
idivb
xor
pop
jmp
jno
or
mov
aas
jmp
xchg
rclb
mov
jb
shll
or
loopne
pop
out
jnp
dec
xor
jp
or
scas
lods
or
xchg
pop
imul
and
pop
xchg
sub
mov
lods
push
pop
lock
insl
sahf
sub
add
out
xchg
movntps
mov
mov
loope
movsb
es
dec
lret
pusha
cmp
cmp
iret
push
jns
xor
pop
mov
dec
pop
jp
xor
xchg
pushf
outsb
dec
rcl
lahf
dec
mov
aam
xor
mov
and
lcall
dec
fcmovb
xchg
pushf
xor
adc
ds
sahf
pop
stc
gs
ficomps
adc
pop
inc
or
rclb
and
lea
int3
inc
add
fisttpl
iret
in
xor
cld
movsl
jle
add
ret
sub
pop
cmp
arpl
dec
shrb
sub
mov
sub
rclb
and
jmp
dec
hlt
lock
xchg
or
fsubrs
xbegin
in
and
std
mov
cltd
cli
lret
imull
roll
mov
xchg
popl
sarb
data16
pushf
and
pop
es
bswap
cmc
dec
or
dec
fadds
imul
sbb
add
xor
inc
pop
dec
lahf
in
cmp
xor
loope
push
sahf
clc
sti
push
jecxz
push
leave
mov
aas
or
mov
mov
or
push
sbb
popf
dec
out
repnz
loope
fwait
pop
popf
fistps
push
into
in
mov
ds
popf
or
pop
dec
iret
faddl
popa
or
pop
in
popf
adc
dec
push
inc
push
ds
lret
dec
mov
dec
jns
cmpsl
clc
inc
pop
push
mov
dec
inc
push
pop
mov
mov
adc
test
icebp
add
stos
or
push
fwait
cltd
cmc
in
fiaddl
mov
out
mov
stc
loope
outsl
icebp
rep
rolb
cmp
mov
sbb
insb
subl
fdivrp
out
jbe
repz
adc
out
sub
in
xchg
sub
test
jae
sbb
adc
cld
pusha
mov
adc
push
mov
xchg
xchg
aas
enterw
jae
sbb
mov
pop
push
mov
pop
sbb
push
cmp
call
pop
push
stos
adc
ljmp
cwtl
aas
add
lock
jp
mov
ss
cmp
movsb
into
hlt
push
push
jl
sub
lret
clc
adc
les
xor
ja
push
jbe
mov
nop
mov
jb
and
push
iret
je
add
xor
mov
or
or
inc
mov
sbb
stos
jp
dec
jmp
jbe
test
iret
sbbb
mov
iret
cmp
fidivrs
sbb
mov
jmp
movsl
pop
out
lret
imul
or
mov
mov
and
dec
mov
icebp
cmc
adc
out
pop
dec
push
sbb
xor
mov
mov
jle
mov
inc
push
mov
leave
sub
sub
mov
in
int
in
iret
mov
sbb
cltd
das
icebp
call
es
mov
aas
and
jo
xor
or
add
das
add
stos
mov
idiv
pop
lds
add
and
nop
outsb
cmp
mov
nop
hlt
jl
iret
xchg
out
scas
mov
inc
jmp
mov
es
stc
into
clc
bound
arpl
and
scas
pop
ret
loopne
cmpsb
adc
xchg
cmp
and
mov
pop
je
mov
adc
popa
mov
push
and
jge
add
lods
inc
push
dec
aas
mov
hlt
or
dec
jg
mov
xchg
std
ret
les
lcall
pop
dec
xor
dec
stc
mov
xor
and
rcrb
sbb
out
mov
pushl
inc
out
jle
loop
xchg
push
mov
push
fsubrl
push
stos
cwtl
pop
shl
adc
mov
and
ficompl
xlat
bound
mov
pop
insb
xor
repz
xchg
pop
loope
mov
mov
jmp
js
addr16
jp
push
bnd
cld
inc
cmp
pop
push
sahf
adc
mov
and
push
jg
add
stos
insl
scas
mov
insl
pushf
icebp
mov
out
add
dec
xor
inc
arpl
inc
lret
mov
arpl
pushf
lret
push
adc
out
aaa
sbb
inc
sbb
leave
ret
inc
dec
mov
xchg
cmp
lahf
inc
fistpll
pop
cs
pop
movsb
mov
js
cli
scas
sub
mov
jge
and
fistpl
mov
adcl
dec
pop
push
loop
stos
lds
ljmp
cmp
shr
pop
ret
adc
cld
or
imul
and
pusha
jno
jno
movsl
ret
dec
xchg
cmc
ljmp
sbb
mov
sub
xchg
mov
ss
out
pop
or
mov
push
add
roll
xlat
cli
jb
mov
push
stos
daa
ss
call
pop
outsb
pop
sub
inc
adc
sahf
adc
pop
xchg
shll
pop
scas
cmpsl
add
xchg
dec
jb
lods
xchg
pop
frndint
in
aas
outsl
divl
fs
mov
insl
ja
pop
stos
stos
mov
mov
fildl
pop
dec
cmc
test
arpl
rcr
lret
sbb
jb
add
push
loop
mov
mov
aas
xor
outsl
faddp
rorb
and
pop
in
mov
mov
inc
addl
and
adc
push
hlt
insb
rolb
fstp
imul
jge
sub
pop
or
fcoms
loop
jne
leave
test
and
cmpsl
out
cmp
mov
cmp
inc
sub
cmp
enter
in
push
lods
cmpsb
pop
jb
mov
xchg
inc
push
ds
dec
sub
add
cmp
pop
or
pop
movsl
mov
push
or
or
add
push
sbb
jbe
pop
insl
or
mov
loop
xlat
testb
pop
fs
sub
pop
jne
adc
xchg
ss
mov
mov
add
iret
adc
mov
loope
imul
xchg
aaa
loop
add
lock
pop
fidivrl
std
sub
mov
add
xor
xor
adc
rorb
cmp
popa
lahf
test
pop
cwtl
xchg
test
mov
xor
jne
lret
lret
sub
jne
into
fisttpl
movsb
sti
sub
sar
mov
jne
and
pop
dec
add
lds
jmp
xor
cltd
pop
dec
cld
jecxz
popf
inc
je
fwait
inc
xlat
mov
dec
ljmp
push
inc
inc
xor
or
dec
sub
das
movsb
jnp
sti
pop
int3
lcall
fs
jb
loopne
lea
lds
push
scas
xor
fisubl
cmpsb
ss
xchg
test
mov
or
out
jmp
stos
jg
add
insb
dec
pop
mov
pop
mov
sbb
stc
inc
dec
xchg
cmp
out
mov
push
sub
jno
imul
xorl
or
mov
out
fs
mov
in
push
xlat
pop
dec
fcomip
or
popf
xor
inc
mov
loope
testl
and
repnz
cmp
sub
xchg
stos
xlat
mov
xchg
mov
addb
mov
pop
mul
cmp
cli
xor
jge
repnz
shlb
jle
xchg
rcrl
clc
dec
xor
repnz
cmp
push
jge
push
jne
xlat
fmulp
inc
test
dec
or
push
popa
les
das
lcall
sahf
ret
lahf
pusha
jne
stos
mov
jbe
dec
mov
cbtw
popa
int
xor
cltd
push
idivb
js
call
cwtl
insl
out
aam
into
lret
aas
mov
rcrl
jg
push
mov
sar
xrelease
ss
jno
es
jmp
mov
mov
sub
imul
inc
test
rcrb
les
int
xlat
cwtl
call
lret
adc
das
clc
pop
xor
mov
rolb
pusha
cmp
shr
aaa
adc
bound
push
and
mov
imul
sbb
push
fldenv
ja
jnp
call
test
adc
mov
jbe
in
inc
pop
push
fbstp
dec
dec
bound
shl
pop
inc
scas
sub
test
in
outsl
xor
adc
push
scas
jnp
shl
popf
sub
popf
loopne
inc
cmpsb
movsb
repz
cmp
cld
iret
enter
sbb
mov
jp
add
lcall
clc
mov
insb
cmp
or
sub
xor
es
mov
lock
testl
pop
adc
out
xlat
test
test
lds
aaa
inc
idivb
mov
scas
or
mov
dec
sub
inc
lahf
loopne
pop
sub
pusha
cli
faddl
xor
mov
fwait
inc
mov
inc
imul
cs
test
fcoml
in
jmp
xchg
jmp
hlt
sbb
mov
rcrl
imulb
inc
add
jnp
stc
out
xlat
push
jg
repnz
push
fs
sub
adc
pop
mov
adc
les
mov
mov
mov
pop
and
jo
jp
std
push
dec
dec
jae
lea
lret
jns
mov
push
cmc
mov
cmc
jl
mov
addb
mov
mov
and
out
inc
jge
mov
jmp
div
shll
out
fwait
decl
fwait
imul
cmp
mov
enter
fisubrl
daa
pop
push
adc
jo
out
andb
sbb
sub
test
jbe
add
inc
mov
mov
xchg
adc
dec
cmp
shl
js
and
and
pop
jbe
inc
pop
out
sbb
xor
cmpsb
dec
cmpl
jbe,pn
push
push
stos
or
je
aam
mov
imul
or
std
pop
in
pop
adc
sbbb
dec
movsl
push
cmpsl
inc
jp
adc
addr16
lods
in
or
and
mov
loop
rorl
or
xchg
cmp
inc
fbld
leave
push
dec
mov
pop
test
xchg
subb
aaa
pushf
and
dec
stc
mov
test
pop
out
jl
sbb
repnz
cmc
fnstcw
ds
xor
jne
inc
and
xchg
cld
fcmovne
addr16
lea
lea
into
inc
mov
and
orb
sub
sub
mov
cmp
int
outsl
xor
js
sahf
dec
std
push
xadd
adc
jle
jb
mov
add
cmp
add
repnz
movsb
and
lret
icebp
ss
clc
je
das
test
ffreep
mov
push
sbb
divps
adc
xor
lds
enter
stc
mov
and
lahf
int3
sub
ret
mov
enter
leave
add
adc
jmp
je
ja
jb
pop
cs
mov
cmp
popa
inc
push
add
fildll
lds
addr16
adc
icebp
ds
pop
cltd
rcrb
pop
inc
dec
cs
mov
jo
fidivs
adcb
add
out
cld
xchg
xchg
faddl
stc
lds
or
dec
and
pop
dec
xor
sub
mov
mov
cmc
push
hlt
sub
inc
cmc
scas
aas
jbe
subl
fnstsw
mov
or
mov
xchg
gs
in
mov
shl
icebp
mov
push
pop
ret
popf
mov
cmc
cmp
mov
mov
insb
push
decl
iret
icebp
cmp
fldt
out
xor
pop
adc
sbb
sti
mull
push
loopne
fistpl
jle
mov
jo
pop
int
fsubs
cwtl
shll
cmpsb
adc
stc
jno
cmp
push
sub
sti
sbb
in
cmc
pop
dec
lcall
inc
sub
out
mov
jne
xor
push
mov
lods
adc
inc
mov
dec
sub
or
xchg
mov
out
cvtpi2ps
add
jo
lods
xchg
inc
les
jns
lahf
and
out
push
jmp
ss
pop
or
xor
and
pop
das
in
out
push
sti
pop
add
sbb
dec
push
push
jmp
or
mov
pop
adc
lret
dec
lret
fisubrs
or
add
leave
ret
jl
pop
in
sub
mov
iret
and
and
and
or
ja
ja
adc
int
or
in
mov
add
xchg
mov
cmp
ss
cld
sbb
mov
loop
ss
mov
mov
cmc
cltd
sbb
or
arpl
mov
xchg
adc
pop
sub
jo
jo
inc
test
test
push
fs
mov
loope
test
sti
jne
jmp
aad
aam
cli
stos
scas
add
or
jle
pop
mov
orl
mov
mov
cmpsl
lcall
outsb
leave
xchg
sahf
insb
cmp
les
inc
fcoms
mov
imul
mov
aas
xchg
loop
sub
filds
fst
cmpsb
sbb
push
inc
scas
psadbw
pop
int
into
xchg
lock
add
add
das
cmp
scas
lea
int3
jge
lret
lods
int
pop
xor
shl
pop
in
sbb
dec
outsb
sbb
lods
xchg
shl
repnz
sbb
rolb
cmp
push
mov
xor
xchg
inc
movsl
xchg
lahf
mov
outsl
and
cmpsl
pop
jns
je
pop
cltd
sbb
add
jmp
push
push
mov
mov
push
jno
out
ret
addr16
dec
cmpb
xchg
mov
jecxz
dec
addr16
int3
push
adc
dec
and
or
mov
pop
sbb
scas
outsl
cmpsl
xor
inc
fs
mov
imul
rol
cltd
cltd
hlt
inc
stc
lret
fisubl
cmpsb
or
push
sbb
arpl
dec
cltd
jecxz
fwait
push
shll
jno
lret
cmpl
es
ds
popa
cmpsb
mov
mov
pusha
mov
orb
pop
xlat
adc
push
pop
mov
adc
stos
out
pop
mov
or
or
rol
fisubs
out
pop
data16
xchg
in
and
inc
adc
stos
pop
out
adc
sub
inc
mov
pop
ja
add
sahf
xchg
mov
push
pop
push
cmp
dec
lods
xor
xchg
cmpsb
decl
xchg
scas
outsl
or
out
das
ret
sub
ja
cmp
push
mov
dec
dec
pop
or
shlb
das
cwtl
sti
int
adc
jo
sub
dec
test
or
mov
mov
sub
mov
and
and
push
mov
pop
inc
loope
cld
testl
rcll
inc
fdivrl
dec
aas
mov
sub
mov
test
and
or
inc
scas
pop
mov
cmpsl
sbb
ds
andb
jno
sti
loopne
or
insl
hlt
adc
aaa
inc
mov
jno
ror
faddl
arpl
jnp
push
push
mov
mov
sti
inc
dec
sarb
lcall
shl
and
in
jns
lods
orl
jg
jb
xor
aad
dec
mov
xchg
out
cld
and
test
mov
addr16
mov
stc
jg
xchg
and
mov
fbld
or
adc
cmpsb
or
pop
hlt
out
xchg
dec
out
test
ret
pusha
adc
fs
xchg
mov
push
cmp
jno
popa
leave
pop
push
lret
ds
push
out
mov
push
outsl
pop
fisubs
mov
add
mov
clc
out
or
loopne
out
or
push
popa
fs
push
mov
jge
adc
sbb
aaa
dec
inc
sbb
dec
adc
das
cld
jle
mov
sbb
stos
vmovapd
adc
cli
fs
mov
xchg
negl
inc
lea
outsb
test
cs
iret
pop
cmpsl
xchg
repnz
loopne
cli
cli
in
popw
jns
sub
xor
dec
mov
out
icebp
lea
sub
hlt
xor
xor
arpl
mov
or
xchg
jle
aas
xchg
and
fwait
sub
es
loop
in
sbb
aad
repz
into
adc
pop
cld
cld
popf
aas
jae
push
mul
adc
add
iret
push
dec
sbb
pusha
cli
in
mov
daa
and
adc
adc
add
mov
cltd
bnd
lea
cltd
inc
jmp
pop
jae
stc
je
pop
sub
dec
xor
mov
inc
mov
out
push
mov
addl
test
fldt
xor
ss
jnp
mov
test
pop
mov
push
jge
scas
push
pop
jle
mov
xchg
add
fnstenv
es
outsb
fucomp
jns
aas
lret
out
andps
xchg
cmpsl
dec
mov
jns
icebp
jl
mov
sub
or
lods
inc
mov
jnp
orl
scas
jns
sub
mov
out
leave
sbb
cwtl
mov
pop
shlb
pop
cmpsb
test
cmp
hlt
cltd
imul
and
arpl
push
insl
rcrl
rolb
outsl
aam
test
popf
mov
hlt
sub
sbb
mov
loopne
dec
ss
adc
out
sub
xlat
test
cmpsl
push
xlat
in
lcall
push
xchg
sub
pusha
mov
xchg
cmp
mov
adc
dec
movsl
mov
adc
xchg
jle
jo
sahf
xchg
mov
imul
push
out
sub
add
aas
pop
inc
cmpl
out
cs
mov
decb
push
je
inc
cmp
fidivrs
lcall
lcall
jb
pop
lret
jge
add
nop
add
es
pop
je
cld
xchg
in
inc
dec
mov
roll
movsl
push
push
mov
std
mov
inc
out
adc
pop
ja
push
dec
cmpsl
inc
mov
addr16
ss
cmpb
jne
test
lods
fistpll
fwait
ret
mov
loopne
clc
mov
and
pop
mov
shrb
dec
jg
sbb
mov
dec
mov
adc
scas
mov
lcall
jg
orl
xchg
imul
fisubs
mov
or
xchg
sub
push
jae
arpl
adc
cld
push
jl
xchg
int
mov
cmpsl
repz
pop
daa
adc
jne
push
jae
pop
imul
jmp
sbb
int
add
mov
inc
adc
lahf
adc
ret
xor
sub
jns
jg
dec
cmp
sub
ret
dec
aad
push
fsubrs
pusha
mov
cmc
mov
mov
sbb
idivl
sarb
dec
xchg
cmpsl
xor
cmpsl
mov
fnsetpm(287
push
mov
insl
dec
int3
out
pop
jns
xchg
pushf
pop
in
mov
imul
sub
dec
push
inc
mov
sbb
sti
pop
imul
mov
pushf
mov
sar
adc
or
mov
cmp
push
mov
movsl
mov
mov
xor
inc
mov
movsl
mov
mov
or
or
call
je
ja
inc
add
mov
daa
mov
mov
leave
aas
or
imul
xchg
dec
push
test
arpl
scas
aad
xlat
jle
subl
mov
pop
mov
nop
mov
subl
cmp
ja
xchg
inc
xor
ret
sbb
outsb
cmp
xchg
out
jb
sub
sbb
mov
adc
xchg
or
xor
mov
data16
fsubrl
pop
mov
jle
int
fdivr
test
xchg
out
mov
xor
addr16
out
insl
cld
and
aas
aam
pusha
adc
cmc
adc
cmp
mov
outsb
movsb
test
sbb
adc
pop
js
pop
add
aaa
test
je
pop
fwait
mov
mov
test
pop
stos
movsl
xchg
or
je
inc
xchg
and
lcall
push
pop
mov
jg
lods
fwait
mov
jne
pushf
and
std
pop
dec
add
clc
jl
out
scas
frstor
cmp
shr
cmp
sbbl
push
xchg
in
add
sub
leave
dec
or
inc
inc
repnz
xchg
cmp
add
out
adc
mov
hlt
mov
cmp
xchg
nop
inc
lds
mov
stos
clc
jne
pop
sbb
pop
cmpb
or
inc
daa
std
sub
scas
idivb
and
cmp
test
jge
std
mov
cmpl
mov
dec
test
out
in
fsubl
inc
xchg
loop
nop
inc
leave
les
inc
mulb
push
xor
movb
jl
pop
js
jp
mov
lods
mov
in
ret
jecxz
dec
das
push
inc
mov
push
std
push
adc
cli
dec
cld
mov
xchg
jne
cltd
fwait
loopne
mov
add
push
int3
mov
rorb
cmp
in
pop
movsl
mov
test
adc
lahf
lahf
outsl
push
repnz
push
mul
jae
adc
icebp
add
mov
xchg
sbb
ss
test
mov
int
cmp
lods
and
subb
out
pop
shr
fwait
pop
and
jp
jg
sbb
xchg
rcl
sub
jo
add
xchg
lds
les
pop
ffree
mov
sbb
popa
std
adc
xor
js
lret
call
iret
scas
iret
fmuls
popa
xchg
dec
push
outsl
loop
or
mov
push
xor
mov
cmp
test
nop
mov
push
adc
jne
sbb
jne
add
cmc
dec
inc
pop
jbe
jg
daa
popa
xchg
sbb
outsl
shlb
pop
subl
jo
push
adc
dec
into
dec
fcompl
sbb
daa
cmp
sub
sbb
cmpsb
xchg
iret
jp
rcrl
jle
mov
mov
arpl
push
and
stos
mov
adc
add
dec
or
out
loope
loope
sub
dec
pusha
mov
jo
mov
shlb
xchg
pop
movsb
push
cltd
xchg
fwait
adc
bound
add
adc
out
data16
inc
mov
mov
sti
sbb
xlat
cmp
mov
mov
push
stos
inc
rcr
leave
out
sub
sub
sub
cmp
mov
in
mov
and
push
nop
xchg
or
add
inc
jp
xor
xor
jb
jmp
jne
outsl
jle
inc
and
jl
repnz
das
mov
jge
jbe
jae
imul
sub
push
xchg
inc
mov
lar
inc
mov
popa
sbb
scas
in
movsl
mov
xchg
cmp
shlb
cli
outsb
es
popf
lcall
mov
inc
pop
ret
je
outsb
pusha
mov
xchg
or
addl
decl
push
push
push
js
ds
ds
adc
mov
cs
add
fildll
jg
pop
std
into
mov
ret
push
push
cmp
dec
int
loope
lahf
fistl
push
or
xlat
mov
ljmp
in
in
sub
inc
daa
dec
add
ja
add
xchg
cmp
shlb
lods
mov
add
pop
lock
in
jbe
cmp
xor
enter
popl
push
cmp
add
in
test
push
dec
rclb
inc
dec
fsubrs
sub
fpatan
int3
push
mov
int
call
jno
scas
sub
frstor
int
cli
scas
std
insb
popa
popl
jb
cmp
ret
push
mov
out
popa
adc
or
mov
mov
xor
mov
xor
mov
bound
xchg
inc
xchg
pop
sub
inc
aaa
dec
jns
rcrb
cli
sub
pop
xchg
inc
les
loope
dec
lret
cmp
jnp
push
ret
pop
xchg
sub
and
lret
jae
cmc
push
mov
inc
and
cmpsb
cli
sub
jae
scas
aas
test
mov
push
data16
jno
addr16
pop
add
out
pop
insb
sub
aas
xchg
mov
daa
repz
push
insl
rclb
dec
jno
and
mov
pusha
sub
test
shll
inc
bound
xor
and
pop
cmpsb
sahf
push
lods
or
cmp
push
stos
ret
xorb
cmp
mov
sbb
movsl
es
les
movsb
ror
cvttps2pi
imul
xor
aad
insl
outsb
rcrb
in
int
lcall
fwait
adc
push
sub
gs
mov
movsl
adc
in
sub
rol
mov
repz
sub
mov
test
mov
icebp
js
xchg
cmpsl
and
adc
fidivs
ds
mov
ljmp
std
jns
lock
pop
mov
xlat
daa
cwtl
jae
divl
cltd
flds
push
fs
dec
imul
arpl
sbb
push
add
push
cmpsl
push
add
frstor
loope
ja
outsb
mov
dec
cmovp
xchg
push
and
jmp
jnp
sarl
scas
loope
cmpl
mov
or
adc
or
jmp
test
adc
sbb
mov
xchg
adc
xchg
fcompl
mov
mov
lock
hlt
cmp
and
test
xchg
mov
jmp
out
fstpl
das
arpl
mov
ror
dec
cmp
mov
cmp
stc
add
es
or
out
dec
adc
jmp
xor
or
jo
in
xchg
xor
sbb
mov
xchg
fidivl
imul
test
inc
mov
xchg
jl
pop
jle
outsl
fidivrl
aad
add
ret
cmp
movsb
or
cmp
and
lahf
xchg
hlt
test
xchg
jmp
sbbl
arpl
lods
xor
and
push
loopne
push
xchg
lcall
jo
pop
inc
cmp
sub
iret
jb
cli
arpl
cld
jge
xor
mov
xchg
jae
jle
sub
frstor
lods
mov
push
push
cli
mov
ja
js
push
xor
and
pop
sub
loopne
ss
xchg
sahf
xchg
jbe
push
sbb
bound
jmp
sub
scas
iret
ret
sti
insl
pushf
cli
xor
push
arpl
push
out
test
out
lret
shlb
or
xor
lea
in
mov
inc
insl
inc
push
adc
mov
or
aaa
push
mov
aad
mov
out
hlt
add
fistps
pop
aad
lods
cmpsb
mov
sbb
add
lods
inc
add
popa
pop
outsl
sar
sbb
lea
inc
pop
or
jg
adc
mov
jne
insb
rcrl
call
cmc
mov
repz
xor
filds
mov
js
insb
lock
dec
lcall
popa
arpl
xchg
insb
loop
mov
jb
push
jp
cmp
and
aam
pop
xor
inc
inc
loope
push
mov
inc
mov
std
and
cmp
lock
addl
bound
and
push
adc
loopne
push
rorb
test
shrl
sahf
test
daa
mov
mov
push
fidivs
inc
xor
mov
xchg
push
mov
mov
mov
aas
jmp
push
cmp
sbb
inc
lcall
inc
xchg
aam
pushf
dec
pop
jns
mov
mov
jno
adc
jno
push
xchg
cmp
insl
in
out
movsb
mov
in
bound
jg
leave
andb
push
addr16
sub
out
pop
mov
lods
xorb
mov
adc
sub
jp
dec
arpl
fldlg2
mov
push
out
je
jo
stc
popa
xchg
xchg
fcmovu
mov
jge
push
incb
pmulhw
test
ds
mov
ljmp
stc
ret
and
adc
outsl
dec
xor
fstpt
test
es
mov
test
enter
mov
sbb
lahf
jo
sub
ja
mov
cs
dec
sub
insl
leave
in
addb
mov
inc
loop
sbb
pop
or
or
cmpl
push
loope
pushf
das
fisubrs
icebp
int
ja
dec
lock
scas
rolb
hlt
scas
aas
add
repnz
dec
cmp
sbb
cmp
mov
fucomp
jg
mov
cmpsl
movsb
inc
sub
les
inc
add
test
fwait
sub
xor
add
add
aas
sbb
out
es
or
cmp
out
rcrl
int3
es
negb
push
or
pop
fidivrl
ljmp
xchg
js
imul
fcomps
adc
movsl
clc
jb
je
xchg
jp
mov
push
or
xor
fisubs
jp
inc
mov
mov
pop
mov
loopne
jae,pt
mov
daa
ljmp
pop
sbb
sbb
mov
dec
sbb
frstor
adc
jge
mov
lods
jmp
fistpll
adc
or
and
outsb
cli
and
cwtl
push
mov
aaa
sbb
clc
cmpsl
inc
ret
adc
call
aam
xchg
jnp
push
and
cmp
fwait
add
sbb
ss
and
imul
push
cli
jb
mov
and
popf
rorl
cmp
pop
pop
push
shrl
push
imul
push
xor
outsl
clc
test
pop
fisttps
xchg
sahf
movsl
andl
mov
fistl
pop
jmp
enter
push
popa
aaa
inc
fnstenv
add
mov
mov
sub
or
stos
fidivrs
pop
inc
call
cld
xor
push
cmp
sahf
add
push
push
repz
std
dec
rcr
lahf
mov
jne
push
outsb
pop
ss
sub
popf
sub
pop
or
fisttpl
cmp
jge
mov
outsl
fnstenv
lea
jo
test
rclb
lcall
pop
ret
adc
adc
xor
mov
lret
xchg
jle
leave
addr16
pushf
xor
sbb
out
ss
dec
clc
pop
pop
xor
push
lods
stos
repz
and
mov
movsb
lret
cmp
add
lods
and
xor
icebp
inc
pushf
in
jge
xor
inc
incb
xchg
pushf
ds
les
pop
dec
jno
xchg
mov
sub
sbb
and
loope
sbbl
cmp
popf
das
or
insl
test
lret
popl
sbb
cld
jns
pushf
cmp
sbb
lea
add
lret
add
dec
dec
shll
pop
xchg
xchg
aam
adc
cld
pop
data16
mov
call
sbb
pop
or
rorl
sti
xor
adc
leave
stos
push
xchg
cmc
test
rolb
lcall
nop
test
xchg
cli
fcoms
add
add
test
shl
test
push
push
aas
scas
mov
push
imul
enter
mov
dec
pop
cmp
in
adc
or
scas
jae
sub
dec
or
and
push
inc
bound
mov
mov
icebp
pop
xlat
push
sahf
andl
inc
leave
mov
adc
arpl
mov
icebp
jnp
in
cmpsl
sub
push
lcall
pop
mov
push
mov
incl
and
push
cltd
bnd
fsubs
xchg
mov
inc
test
cmp
aas
fs
rorb
xor
and
mov
or
js
bnd
cs
clc
fdivl
push
xor
ja
mov
jmp
add
cld
lds
add
das
pushw
or
adc
mov
mov
lret
loope
adc
push
rclb
pop
pop
cmpsb
loop
sahf
int3
mov
sbb
iret
mov
mov
jns
mov
ljmp
push
outsl
push
mov
push
pop
popf
and
test
daa
fiaddl
mov
xchg
imul
adc
orb
cltd
rol
mov
sub
cltd
fldcw
jge
adc
insb
repz
jnp
arpl
mov
out
fbld
pop
jmp
data16
xchg
fwait
push
stos
cld
sbbb
cld
mov
sub
rcrb
lds
lahf
scas
push
add
daa
jl
and
xchg
and
pushf
adc
addr16
bound
loope
mov
ljmp
insl
lret
or
ds
rep
pop
in
iret
stos
inc
add
les
ds
arpl
xor
sbb
sub
push
scas
or
sub
stos
or
hlt
mov
adc
cld
fildll
and
sahf
imul
mov
inc
mov
jmp
jnp
inc
xchg
repnz
or
rcrl
mov
lds
xor
test
lds
inc
push
std
data16
sbb
mov
clc
movsb
rorl
lahf
adc
dec
jge
jbe
mov
cmp
mov
fidivl
iret
mov
imul
cmpsl
dec
cltd
mov
loopne
int3
pop
fimull
mov
mov
lock
xchg
mov
fldl
pop
pop
inc
stos
inc
and
inc
mov
xchg
pop
xchg
adc
mov
shr
add
mov
cmp
add
fs
xchg
sti
push
test
aaa
inc
sbb
dec
mov
jo
je
sub
lret
js
pushf
push
dec
pop
inc
arpl
and
sbb
vpsllq
sbb
jp
orb
adcb
push
mov
adc
inc
and
mov
mov
lcall
fwait
loopne
cli
in
cmc
out
lock
ffree
sbb
push
ret
int
stc
popa
loop,pt
mov
in
cld
push
xchg
mov
mov
std
and
out
pop
pushf
lea
ret
mov
inc
nop
out
bound
or
sub
cmp
jmp
nop
or
fdivp
lods
scas
popf
roll
loope
and
call
outsl
cmc
dec
xchg
mov
push
push
enter
mov
popf
push
xor
xor
dec
cmp
pusha
imul
jns
pop
ljmp
fsubrp
cmpsl
cmpsb
ljmp
push
or
or
xchg
lea
test
js
fwait
jnp
add
jns
movsb
adc
push
lock
out
es
mov
outsl
fstpt
xor
out
push
shlb
xorl
sti
pop
shll
int3
addr16
sub
lods
or
push
pop
mov
rclb
adc
jle
mov
fadd
xchg
xchg
popa
adc
rolb
shrb
loope
xor
aad
mov
jb
mov
jg
test
inc
sub
int3
mov
sti
inc
add
jb
sbb
out
jg
xor
mov
insl
inc
add
mov
fwait
aam
mov
insb
cmp
cli
cmp
xor
sarl
mov
sahf
mov
inc
cmp
and
mov
pop
loop
aam
adc
sub
sub
inc
cmp
nop
fdivs
js
mov
inc
cmp
in
call
lahf
and
mov
in
add
jae
sub
subl
cwtl
pop
imul
jae
aas
xorl
clc
loopne
xor
jnp
pop
dec
loop
adc
and
cmp
dec
test
or
xchg
pop
xchg
stos
test
loope
inc
sub
sub
clc
add
xchg
cld
add
sub
dec
and
fcmovne
sbb
sti
sbb
or
jnp
jle
xchg
repz
xchg
mov
insl
in
insb
aam
sbb
std
addl
cmp
jmpw
jno
cmp
adc
and
stos
or
test
xorb
jge
cmpsl
mov
sbb
inc
in
push
adc
mov
nop
orl
push
or
mov
xchg
shll
mov
sti
mov
aad
sbb
ret
jl
hlt
jb
das
scas
sbb
sub
jmp
sbb
hlt
test
mov
dec
lahf
lods
shrl
or
dec
jns
lods
mov
push
fstps
ss
inc
inc
sub
or
push
loopne
pusha
and
mov
rcrb
rcll
aaa
decb
mov
loope
imul
or
dec
sbb
sub
mov
fdivrs
sbb
cli
aad
in
ret
out
push
js
push
mov
or
stos
in
sbb
cs
clc
push
dec
outsl
mov
popa
dec
lret
jecxz
sbb
enter
push
daa
dec
mov
inc
jge
cmc
inc
sti
cmc
push
and
xchg
sbb
xchg
jo
fwait
popf
mov
xchg
sub
imul
add
movsl
xchg
dec
cmp
in
adc
test
data16
loope
mov
bound
xor
divl
dec
jbe
roll
or
mov
and
ja
mov
dec
mov
ret
xchg
sub
shrb
daa
mov
enter
jnp
rclb
mov
filds
xchg
mov
pusha
cmp
or
in
push
cld
add
mov
mov
leave
lahf
loopne
adc
in
movsb
jecxz
daa
int3
pop
mov
sub
cmp
jle
pop
mov
stos
setl
lods
inc
and
cs
or
xor
in
shlb
mov
inc
in
and
xor
add
dec
shlb
pop
mov
repz
cli
cmpsb
sub
sbb
int
and
mov
insb
shll
xor
adc
add
movsb
xlat
in
ljmp
cmp
inc
push
mov
push
mov
loope
lret
cli
sub
or
xlat
aas
xchg
sti
ficoml
or
push
push
mov
aam
jmp
pop
shl
jmp
int3
rep
les
add
popf
jmp
popa
pop
adc
push
loopne
mov
outsl
sub
xchg
pop
into
les
insb
jp
lods
or
jbe
mov
jno
ss
cmpsb
ret
sub
popf
xchg
js
inc
je
popa
push
cwtl
sbb
rcr
scas
data16
bound
mov
jg
popa
ljmp
cmpsl
lds
and
loop
adc
push
mov
xchg
stc
xor
into
int3
xor
dec
cwtl
cmp
mov
and
dec
mov
dec
cmp
xchg
loopne
in
lods
mov
andb
int
into
dec
insl
jmp
hlt
dec
sub
inc
ret
jecxz
sbb
cmp
fidivrl
pop
jp
xchg
add
lds
imul
jmp
shlb
add
mov
pusha
mov
mov
adc
fidivl
ljmp
mov
fildll
rolb
iret
mov
push
clc
sbb
addr16
jbe
add
das
cmp
add
aaa
mov
mov
dec
out
lahf
inc
sbb
sbb
mov
sub
icebp
cwtl
repnz
insl
in
add
scas
lret
or
lret
adc
cmpsl
lds
stos
pop
inc
jg
stos
jp
rcrl
jecxz
inc
cli
pop
xchg
cmp
inc
test
addr16
adc
and
mov
repz
nop
aaa
movsb
jne
frstor
xchg
add
fwait
das
dec
push
out
push
flds
dec
roll
leave
inc
leave
hlt
lods
push
cmp
xchg
lods
push
sbb
cmp
sub
iret
scas
xchg
lcall
jp
repnz
dec
sbb
pop
addr16
and
inc
mov
leave
jge
jae
and
mov
loop
add
out
pop
adc
mov
push
fsubr
push
inc
inc
dec
out
out
adc
or
mov
iret
jns
cmp
jo
mov
rcl
jmp
push
aaa
fimuls
sbb
xor
je
jne
cltd
pop
arpl
shrb
in
inc
push
insl
shl
dec
lcall
xor
clc
cmpsb
shl
push
sbb
test
dec
cmc
and
scas
daa
ja
mov
xchg
fs
sbb
xor
sub
inc
in
add
icebp
inc
sub
push
in
daa
pop
sti
push
incl
scas
popf
or
pop
cmp
nop
jmp
xorb
pop
jp
add
test
mov
rcrl
loope
addr16
sbb
fs
fbstp
shrl
loope
es
lock
pop
push
lss
test
sub
cmpsl
and
ss
scas
mov
fimull
mov
rcrb
int3
jle
mov
movsl
jl
or
shrl
mov
and
sbb
lods
add
jns
jo
xchg
mov
jbe
adc
dec
loope
out
lock
lea
fdivrl
xor
ljmp
mov
out
add
fmuls
jo
pop
movsl
mov
leave
mov
imull
in
ficoml
arpl
cwtl
ds
ds
data16
lret
rorl
lahf
rcll
mov
cmp
icebp
lea
or
loop
outsb
inc
rcll
cmpsb
mov
push
fldt
xlat
stos
cmp
leave
push
call
lds
push
addr16
rolb
addb
mov
sbb
shll
jecxz
ret
outsl
sub
mov
mov
jae
mov
sub
icebp
ja
mov
pop
fidivrl
inc
xchg
enter
popa
dec
or
cld
stos
jns
ljmp
cmp
jecxz
sbb
into
mov
mov
cld
and
sub
sbbb
pushf
jne
push
subb
adc
mov
dec
lret
xor
push
or
cmc
jecxz
daa
push
out
dec
adc
adc
jmp
add
cmpsb
jne
jno
pusha
movl
adc
hlt
jp
out
jle
retw
pushf
add
push
aaa
es
outsl
hlt
frstor
call
inc
js
mov
lods
cmpsl
or
test
out
push
fs
sub
dec
push
mov
sbb
jbe
mov
and
xor
or
lods
or
push
xor
push
dec
insl
test
sbb
jle
add
lret
test
arpl
cli
cmpsl
rcrl
jecxz
repz
mov
imul
adc
call
sahf
cmovae
push
loop
push
add
fstpt
sahf
push
cli
mov
fwait
in
push
mov
adc
sbb
push
or
xchg
xor
test
pop
sub
cmp
sub
cs
dec
cwtl
inc
fwait
pushf
sbb
ds
jne
xor
mov
cmpsl
mov
or
fldz
xor
add
inc
jl
dec
dec
scas
xchg
pop
fisubrl
add
jno
loop
xor
mov
and
shll
and
and
mov
mov
lret
or
sub
bnd
nop
adc
xlat
outsl
xor
into
sbb
xor
pop
subb
test
mov
sbbl
adc
sub
dec
or
dec
out
push
ret
mov
inc
in
mov
mov
xchg
jbe
inc
push
aad
ljmp
jecxz
mov
movsl
imul
es
sub
les
test
pop
bound
test
jl
mov
fidivrs
dec
adc
lods
pop
sub
mov
jns
andl
idivl
ret
or
xchg
daa
enter
rorl
out
aas
stc
jne
xchg
pop
je
mov
jg
xor
das
or
fcmovu
testl
popf
mov
push
sbb
sbb
sub
mov
ja
sub
pcmpeqw
xchg
mov
cmc
aad
mov
sub
iret
jae
mov
das
mov
cwtl
pop
xchg
mov
cmp
jae
push
cli
xor
test
pop
mov
arpl
pop
or
or
sub
add
dec
push
scas
gs
lods
pushf
sysexit
cmp
ja
outsl
mov
pop
cmpsb
inc
and
shl
shl
movsb
aas
out
sti
fstps
mov
push
js
xor
daa
jmp
add
mov
imul
mov
pop
pop
gs
cli
push
xchg
inc
test
cmp
jne
adc
fbstp
and
dec
mov
xchg
insb
cli
stc
gs
lock
jl
jle
jbe
sub
add
std
pop
clc
xor
mov
lret
inc
scas
int
into
pop
inc
xchg
jne
shr
pushf
push
imul
ret
inc
fcmovbe
pop
lea
inc
and
sub
mov
pop
movl
shll
push
dec
into
xchg
mov
loop
adc
je
test
data16
fadd
loop
sub
ss
psubusw
movsl
das
lahf
add
dec
sub
sbb
shrl
inc
jnp
or
sti
mov
add
sub
add
push
shrb
rorb
aaa
jl
or
xchg
adc
dec
inc
or
pop
or
pop
ja
fidivrs
pop
or
lds
cmp
pop
push
andb
push
mov
jae
inc
icebp
and
ret
add
int
mov
sub
das
in
mov
cmpsl
xor
jb
inc
cmp
sbbl
jl
mov
add
cmp
sbb
sbb
addr16
imull
test
ficompl
cmp
outsb
sub
les
in
jle
fistps
ret
push
xor
scas
and
ja
or
jne
pop
das
lret
xorb
dec
inc
popf
xchg
js
ror
out
push
pop
mov
pop
cmp
lea
inc
mov
xchg
aam
adc
add
xlat
out
or
xor
les
loopne
push
sub
jge
sub
cmc
test
push
enter
add
sahf
cmp
mov
push
mov
and
out
call
movsl
mov
mov
in
out
sbb
add
mov
lock
mov
cmp
push
mov
lock
add
ja
push
test
in
int
fs
mov
xor
xchg
pop
jne
scas
loop
and
outsb
sti
lods
pop
out
sbb
xchg
icebp
inc
and
sbb
sub
cwtl
imull
sub
clc
enter
sub
fsubrl
clc
aad
push
bound
shll
mov
bnd
das
fnstsw
xchg
xchg
lock
lods
and
inc
mov
add
stc
sub
or
push
ss
out
mov
lcall
and
xchg
xor
insb
adc
es
movsb
inc
cmp
xchg
test
mov
adc
sub
ficoml
mov
xor
mov
mov
inc
rcr
fsubrl
mov
leave
ret
pop
inc
imul
mov
xchg
idivb
out
scas
inc
ja
fdivr
into
mov
bextr
inc
or
mov
mov
and
jge
jl
jns
sahf
jo
stc
loopne
js
jecxz
shl
sub
jmp
repz
fcoml
lret
mov
fwait
loop
fmul
div
fcomp
push
cmp
sti
cltd
mov
or
or
inc
mov
icebp
add
dec
dec
ret
pop
mov
sbb
mov
pop
and
adc
popf
sarb
jne
mov
jns
push
cmp
ret
roll
sbb
mov
jecxz
dec
stos
xlat
pop
sub
jle
repnz
aad
pop
lahf
and
je
in
mov
cmc
movsb
add
pop
icebp
addl
shlb
cmp
gs
push
sub
in
cmp
adc
scas
sahf
sub
xlat
scas
addr16
iret
push
or
mov
push
std
fmuls
mulb
xchg
and
or
sbb
sbb
out
push
push
adc
rcrb
jo
ja
jno
addr16
cs
movsl
stos
stc
push
push
inc
inc
mov
push
lods
cmp
push
jge
popf
cmpsb
or
inc
jecxz
andb
test
add
jo
push
lock
aad
mov
movsb
mov
and
mov
xor
fists
test
mov
and
cmc
aad
mov
dec
or
addr16
testl
pop
icebp
xchg
xchg
negb
mov
inc
xchg
fistps
add
push
ja
or
idiv
loop
sub
lods
dec
sbbb
cwtl
jns
push
or
lret
or
loopne
push
scas
call
cmp
rcll
ret
pushf
lds
test
pop
xor
inc
and
shrb
sbb
or
jl
xor
sti
sub
xchg
daa
pop
mov
psubsb
mov
push
sahf
repz
sbb
es
arpl
cmp
mov
push
fld
mov
dec
lock
in
andb
sub
mov
out
gs
fimuls
adc
cmpb
pushf
jmp
je
xchg
pop
stos
das
repnz
repz
lret
sbb
inc
outsl
mov
push
mov
dec
sub
shrb
push
stos
sbbl
mov
ljmp
mov
lea
mov
cli
and
sbb
push
dec
data16
mov
sbb
and
arpl
lea
adc
clc
xchg
dec
push
or
mov
out
cmp
lods
loop
or
les
insl
in
lds
add
out
or
test
add
incb
test
cmp
aam
int3
insl
dec
ja
fildl
in
sbb
jmp
mov
sub
ja
and
or
xchg
add
in
mov
ja
sub
cmp
sbb
gs
xchg
stos
jns
test
push
out
imul
les
shrl
push
addr16
das
sub
or
shlb
pusha
cmpsb
push
dec
sbb
push
xor
ljmp
jnp
mov
bound
dec
push
and
fnstcw
subb
or
mov
les
push
pop
fdivs
clc
adc
fstpt
cli
sarl
xchg
push
repz
cmpsl
ret
add
addr16
fiaddl
movsl
loope
sub
pop
xchg
xchg
or
icebp
mov
xchg
imul
in
mov
push
nopl
mov
mov
mov
push
das
fadd
cmp
dec
pop
cmp
jb
pushf
pusha
repz
and
ret
dec
pop
cmp
xor
into
jle
cmp
lods
cld
fsubrs
sarb
mov
jne
bound
inc
dec
inc
ss
mov
mov
repz
lods
mov
in
sbb
js
popa
aam
xor
adc
arpl
mov
mov
rcrl
xor
mov
mov
sbb
push
pop
into
add
bound
jbe
sbb
fcoml
jg
aam
and
inc
adc
sbb
and
cmc
out
xchg
mov
fmull
push
cld
add
in
jge
push
stos
mov
adc
jne
addr16
inc
mov
sbb
push
es
dec
insl
jle
adc
lods
push
xor
nop
push
mov
movsb
xor
in
lahf
pushf
test
enter
aad
insl
lock
repnz
mov
sbb
xor
mov
pop
sbb
sub
movl
and
clc
lcall
daa
nop
aam
call
mov
mov
inc
in
add
bound
mov
je
dec
dec
js
mov
insl
test
mov
mov
cld
cwtl
fnstsw
push
test
hlt
xor
shll
dec
cmpsb
fcmove
ds
xchg
nop
or
mov
xchg
add
adc
or
mov
mulb
jg
shr
movsl
jnp
fwait
xchg
sbb
inc
rclb
cs
ret
cmp
add
std
xchg
and
lods
xchg
icebp
push
inc
jl
out
gs
and
mov
inc
or
cmp
in
repz
les
dec
xchg
xor
mov
lret
jg
pop
dec
mov
sti
fisttpll
or
push
or
push
pop
outsb
xchg
mov
push
fdivrs
imul
mov
xor
cmpsl
add
dec
inc
xlat
fs
cmp
pop
add
lock
loopne
mov
mov
aad
or
push
push
jg
fs
mov
jne
les
in
add
push
stos
xor
xchg
in
cwtl
jle
xor
mov
lods
sbb
sti
mov
imul
mov
fidivrl
pop
loope
push
ja
sbb
xor
insb
xor
mov
pop
leave
jg
mov
imul
aas
iret
outsl
cmp
mov
inc
push
out
pop
ds
jns
leave
addr16
cwtl
scas
imull
popa
push
jecxz
mov
adc
dec
push
lea
insl
cmc
xchg
pusha
int3
mov
hlt
stc
adcl
jl
rol
call
in
sbb
jge
js
mov
out
and
loopne
sbbl
shrl
and
pop
mov
inc
mov
in
hlt
f2xm1
out
out
and
cmpsl
iret
jle
test
mov
xchg
mov
jns
jp
nop
js
jp
dec
out
mov
mov
inc
and
in
popf
cmpsl
jle
lea
adcl
in
dec
pop
inc
cmp
dec
jns
fnsave
xor
sbbl
pop
popa
out
sub
mov
icebp
sahf
or
inc
xchg
rorl
sbb
adc
jae
ds
scas
mov
jl
je
test
ret
mov
pop
sub
cmp
imul
mov
mov
lea
icebp
bndldx
fisttpl
outsb
sbb
mov
lret
mov
scas
cltd
mov
scas
ss
stos
jge
out
sbb
mov
add
ss
dec
pop
fnsave
or
mov
fwait
xorb
add
sub
add
hlt
out
mov
mov
aas
sbb
mov
cld
sub
mov
xor
cmc
testb
adc
sbb
leave
sbb
adc
fisubs
pop
xchg
jae
loope
mov
add
mov
jg
fcomps
arpl
cmp
ja
mov
or
jl
popa
inc
cmp
sbb
daa
subb
dec
cli
sbb
mov
jno
pushf
leave
movsb
out
pop
sbbb
and
sub
xor
ret
notl
sahf
in
and
fs
sub
arpl
adc
mov
pop
inc
aaa
cmp
outsl
and
test
repz
popf
pusha
int3
leave
pop
inc
movsb
pop
rorl
sbb
mov
leave
cld
pop
cltd
data16
fbstp
ret
xchg
adcl
movzwl
pop
mov
hlt
mov
iret
mov
push
jl
push
jne
fwait
pop
add
or
fcoml
jno
sbb
rol
sbb
insl
nop
or
xchg
repz
sbb
iret
mov
mov
xlat
mov
ljmp
sub
mov
push
jbe
fstps
js
lds
scas
jmp
mov
jb
jns
outsb
add
mov
sbb
sbb
add
inc
or
pop
jg
pop
or
xchg
arpl
sub
add
pop
jp
dec
mov
xorl
movsb
mov
sbb
mov
std
adcl
push
out
push
pop
out
push
adc
mov
int3
pop
lods
mov
ljmp
daa
pop
lcall
mov
xorl
mov
dec
mov
das
pop
sbb
ja
stos
aaa
sub
ret
mov
jecxz
fwait
popa
add
dec
iret
movsb
push
int3
es
xchg
enter
movsb
icebp
pop
inc
testl
movsb
js
push
add
jp
cmc
sahf
into
ja
xor
shl
cmpsl
int3
lret
sarl
inc
ret
mov
gs
ret
call
test
mov
imul
bound
fidivs
test
and
xor
fcmovnb
xchg
push
repnz
add
jmp
xchg
sahf
mov
add
jbe
cli
sub
int
adcl
add
les
insl
movsb
fs
or
xchg
push
push
pop
std
fs
mov
loopne
inc
int3
pop
sbbl
ja
mov
fildl
push
or
jp
mov
js
mov
lahf
insb
sbb
in
aas
xchg
mov
cli
pop
shlb
and
push
imul
sub
lods
negb
add
lods
mov
inc
push
mov
jnp
xor
lods
mov
mov
inc
es
jne
or
into
fsts
cmp
loopne,pn
pop
lret
sbb
xchg
mov
adc
pop
loope
mov
or
andb
mov
inc
movsb
mov
imul
cmpsb
jno
iret
in
jge
aas
vdivsd
inc
mov
adc
inc
sbb
loopne
scas
xchg
adcl
mov
stos
popa
sahf
dec
jnp
lcall
sti
mov
cmp
insl
in
test
fcoml
popf
cmp
xchg
outsb
jae
fwait
or
cs
mov
sbb
mov
xchg
je
sub
in
in
orb
add
aas
pop
push
stc
aas
sub
and
push
cmc
and
jne
pop
outsl
dec
in
sti
scas
loop
sub
iret
out
or
mov
div
cs
pop
push
xchg
xor
pop
fsub
cld
les
loope
popf
aad
pusha
or
push
push
lcall
ds
jecxz
movsb
sbb
ds
pusha
leave
mov
mov
push
jns
test
icebp
adc
mov
dec
xor
nop
push
stos
shll
push
mov
insb
idivl
xchg
in
lret
cmp
imul
push
cli
mov
out
sbb
insl
or
in
and
or
jl
aaa
mov
test
jge
rcrb
cmp
rorl
into
je
stos
push
repz
push
push
mov
inc
mov
loopne
inc
imul
sbb
xchg
inc
inc
pop
push
or
lods
adcl
mov
aad
mov
jp
jp
dec
pusha
loope
dec
roll
mov
pushf
test
lea
lods
lret
mov
sahf
into
ss
pop
jne
mov
repz
cmp
sbb
loop
add
lcall
mov
jae
mov
smsw
rclb
repz
xchg
xor
push
sbb
mov
les
jge
imul
mov
mov
ljmp
mov
cs
repnz
stos
cld
cmp
mov
push
adc
loopne
push
inc
adc
inc
mov
mov
jge
jo
out
loope
jno
aam
or
cmpsb
pop
cmp
repz
or
or
loope
shlb
daa
out
cltd
fimull
add
push
ds
and
mov
int3
pop
mov
jl
lret
fisubl
outsl
xchg
xor
adc
cmp
push
lret
mov
repz
in
xor
sbbl
or
in
inc
pop
mov
fdivrl
push
ja
xchg
adc
push
xchg
or
inc
rorl
push
mov
or
popf
and
cmpsl
fmull
jns
popa
nop
ds
mov
mov
stos
cmp
mov
sbb
jmp
xchg
bound
aad
lea
out
jbe
cwtl
jl
aam
outsl
or
adc
shl
icebp
jns
xor
notb
mov
adcl
mov
or
add
xchg
adc
into
sub
and
push
adc
jg
punpcklwd
pop
rolb
push
into
jne
adc
popf
jnp
in
sub
xor
add
xchg
push
mov
stos
mov
ja
data16
jp
lock
insl
sub
cmp
movsb
xchg
and
rorl
xor
insl
je
jbe
mov
sub
and
iret
in
repz
test
sub
push
hlt
out
push
lcall
mov
xor
push
xchg
mov
push
shrl
cmp
fld
dec
aad
jmp
mov
js
cmpsl
fimuls
dec
mov
lret
jne
jne
jbe
cmp
rol
mov
fisttpl
leave
aam
movsl
inc
xchg
mov
push
ss
xchg
push
dec
dec
or
insl
pusha
push
pop
add
mov
jns
and
inc
mov
jae
stos
pushf
lahf
xchg
in
dec
mov
jmp
inc
sub
mov
aad
cmp
xchg
dec
shlb
add
xor
and
mov
add
inc
mov
arpl
daa
testl
ljmp
and
dec
add
xchg
cmc
insl
push
loope
movsb
int
jns
push
sbb
das
test
lods
mov
mov
sbb
ja
movsb
jns
adc
inc
sub
outsb
jle
movsb
mov
add
outsb
out
and
push
fiadds
sbb
sub
mov
jle
jns
sbb
scas
mov
mov
data16
in
lcall
pop
hlt
cld
adc
movsb
adc
push
aam
cmp
push
fstpl
test
xchg
mov
dec
mov
shll
pop
int3
pop
rorb
arpl
gs
xor
jne
repz
nop
pop
push
or
xchg
push
lret
add
clc
xor
jge
nop
popl
iret
popf
mov
pop
gs
stc
and
dec
orb
outsb
xchg
pop
lea
ss
ret
cs
repnz
imul
cmpsb
inc
sub
movsl
sub
adc
fnop
or
mov
jg
xchg
outsb
or
cmp
incl
mov
push
sub
jne
push
ret
fidivrl
and
movsl
or
lcall
push
rcrb
dec
movl
int
adc
jp
das
jb
popa
xchg
loop
into
mov
loope
xchg
mov
dec
fiadds
fs
scas
inc
lods
ljmp
and
jne
and
ss
xchg
pop
push
xlat
sbb
mov
out
mov
jb
icebp
sti
lret
and
mov
pop
popf
mov
sti
cwtl
fmul
xor
out
cmp
cmp
lock
sub
call
xchg
xor
fchs
xchg
sahf
dec
test
dec
push
inc
jle
adc
xor
mov
adc
int3
rolb
mov
add
cmp
arpl
jns
insb
ltr
into
add
jb
jp
mov
sbb
push
adc
stc
sub
xlat
lods
or
adc
mov
inc
mov
ds
mov
gs
jns
mov
fcoml
icebp
insl
sarl
xchg
lods
pop
cltd
clc
sub
out
popa
mov
mov
pop
cs
int3
jle
or
mov
jb
es
jecxz
lea
pop
sbb
cmpsl
adc
or
adc
cld
sub
negb
incb
dec
inc
rcr
pop
or
xchg
or
lcall
push
sbb
test
scas
mov
inc
inc
mov
pushf
inc
loopne
pop
mov
add
ficoml
loope
mov
push
cmp
aas
xor
push
scas
cltd
test
xor
mov
lahf
data16
call
lahf
xlat
mov
test
ja
repnz
mov
loopne
dec
push
mov
inc
sarb
popf
inc
mov
add
or
inc
or
in
ds
pop
or
cmpxchg
in
dec
imul
mov
jge
cmp
inc
sub
jno
pop
push
test
and
imul
mov
dec
inc
jns
mov
cmp
xchg
fdivp
insl
inc
test
les
es
cmc
dec
enter
or
push
call
push
mov
mov
sub
inc
mov
add
repz
xor
inc
mov
mov
mov
cmpsb
insl
xor
pop
shr
lret
ds
in
aaa
inc
sbb
fs
cwtd
adc
adc
cltd
pop
push
stos
adc
cmp
xor
inc
mov
lret
gs
xor
xchg
addr16
in
mov
inc
mov
jne
mov
in
jmp
push
aad
stos
push
and
lods
add
sbb
decb
dec
adc
shlb
gs
nop
adc
or
in
loope
dec
xchg
xchg
mov
jle
push
in
and
or
push
jmp
pop
xchg
cmc
sub
cwtl
test
loopne
push
push
test
int3
insl
xor
nop
inc
cld
cmp
add
jmp
int
insb
shrl
sti
mov
add
leave
call
and
js
pop
aam
pop
inc
dec
ss
jmp
pop
xchg
mov
in
movsb
ljmp
out
es
mov
jbe
fsubrl
jbe
inc
jp
pop
mov
loope
je
popf
pop
sbb
cmp
pop
rolb
std
lret
or
sahf
mov
mov
movsb
xor
inc
aad
inc
inc
cmp
sbb
fbstp
push
sarl
dec
rcrb
js
xchg
inc
xchg
out
je
mov
dec
es
mov
cmp
sub
dec
jecxz
pop
add
pop
add
add
adc
push
out
mov
inc
and
inc
imul
pop
sbb
adc
adc
pop
dec
push
adc
outsl
rorb
and
gs
lock
int
in
cwtl
mov
cli
stos
jl
inc
loope
sub
rcll
popf
mov
mov
jmp
inc
cs
sub
std
lcall
push
bswap
cs
dec
nop
adc
xor
xor
xor
pop
mov
push
mov
pop
in
add
leave
sub
lcall
testl
shrl
jp
mov
xchg
ret
shr
roll
test
pop
cmpsl
call
stos
and
push
pop
insl
iret
js
testl
pop
cmpsl
rclb
nop
pop
les
mov
xchg
jae
leave
test
mov
sahf
adc
repnz
fxch
pop
repnz
fwait
inc
lret
mov
mov
dec
push
fnstcw
dec
mov
out
push
xchg
cmpsl
rorb
cmp
cltd
xchg
mov
imul
notb
push
mov
cmc
mov
out
mov
mov
inc
fistps
test
or
je
mov
or
fidivrl
pop
out
shlb
mov
jbe
xor
in
cmc
mov
or
push
das
inc
and
stc
loop
test
into
scas
push
adc
sub
mov
xchg
jle
movsb
ror
dec
mov
push
sbb
sub
bound
aad
inc
lret
mov
sub
pop
test
sub
std
push
or
xor
test
push
test
pop
and
xor
aaa
fidivs
xchg
mov
or
mov
mov
and
inc
in
mov
je
cmp
cmpsl
push
xlat
imul
inc
mov
std
aad
jne
jne
int3
test
xor
orl
arpl
fstl
js
jg
mov
pop
xchg
mov
mov
pop
dec
sahf
cmp
mov
mov
push
into
rcrb
rorl
decl
jb
rcr
mov
add
stc
and
lock
push
mov
mov
inc
mov
fs
imul
jns
mov
test
mov
out
loopne
das
pop
loopne
shl
cmp
cmp
push
std
adc
lock
inc
xchg
and
ljmp
gs
ja
sub
loope
rcr
jge
jg
lock
lret
cs
or
mov
enter
xchg
jge
jl
adc
ds
push
inc
and
push
daa
decb
adc
push
jle
cmp
xchg
insb
mov
aaa
fs
cmp
jmp
daa
popf
ljmp
sbbb
xlat
add
push
jl
adc
call
cmp
dec
xchg
divb
xchg
stc
push
sbb
xchg
jp
or
adc
adc
out
popa
divb
adc
outsb
ret
cmc
je
cmp
fisttps
or
xchg
icebp
pop
xor
push
adc
mov
outsl
mov
push
andb
fwait
sbb
xchg
rcrb
rcl
and
xchg
mov
pop
ds
add
ss
repnz
pop
insb
xchg
pusha
jns
movsb
sbb
xchg
fcoml
daa
inc
sub
add
inc
hlt
imul
fs
sub
scas
dec
cmp
lock
and
out
xor
aam
pop
out
rolb
popf
loopne
in
add
xchg
xchg
fildl
lods
lret
out
mov
cld
cli
daa
aas
xchg
push
mov
sbb
mov
dec
lea
out
test
inc
movsl
dec
jp
dec
nop
icebp
loope
test
xor
dec
pop
jge
sahf
push
data16
add
inc
sub
andl
xchg
mov
dec
cmp
fwait
xor
xchg
out
sub
mov
xor
in
jne
sub
dec
and
mov
loope
pop
cmp
in
ja
outsl
and
cmp
inc
xor
mov
mov
int3
in
mov
push
das
sbb
xchg
mov
push
push
and
inc
pop
scas
xchg
xor
inc
ret
sub
out
fsubrs
mov
dec
outsb
or
std
fsub
dec
popa
pop
packuswb
xchg
cltd
or
ficoms
sub
testb
mov
push
add
mov
push
into
pop
mov
xor
jnp
bound
insl
mov
push
xor
nop
mov
les
shlb
out
fildll
mov
aas
sub
inc
call
push
pop
pop
push
push
push
std
outsb
sbbb
stc
push
fcomp
movsl
int3
jl
ds
dec
ds
mov
jmp
rolb
movsl
sbb
jbe
dec
jbe
sbb
push
pop
fdivrl
lods
sbb
mov
mov
xchg
scas
ds
dec
mov
mov
xor
push
std
xchg
push
sub
test
push
es
dec
pusha
out
js
add
pop
xor
cmp
xor
adc
js
lea
jle
les
push
sar
int
sbb
loopne
pop
or
negl
jbe
mov
sub
js
sub
mov
pop
lcall
mov
popa
lcall
mov
divl
xorb
not
hlt
gs
xchg
mull
adc
movsb
fildll
dec
fcomps
roll
out
mov
jnp
popa
sub
ret
mov
fsubrs
hlt
jmp
and
sub
mov
lds
and
cmpb
call
fmulp
mov
test
mov
movsl
sub
fwait
or
ret
mov
test
iret
popf
enter
out
jmp
push
mov
inc
mov
enter
mov
scas
mov
insl
inc
mov
test
mov
mov
dec
mov
jge
mov
sbb
mov
mov
xor
out
mov
jl
pushf
ja
mov
leave
sbb
push
cmp
mov
int3
rorl
stc
in
inc
xchg
xor
push
repz
xchg
cmc
in
lret
jae
jbe
xchg
mov
pusha
addb
mov
mov
xor
sbb
loope
fs
or
outsb
iret
and
sbbb
jns
pop
dec
jno
sarb
lods
aam
das
push
cmp
jge
int
mov
jne
pop
xchg
cmc
movsb
scas
cmp
and
sti
mov
mov
sbbb
sbb
out
inc
sbb
xchg
stos
test
mov
lea
negb
mov
testb
orl
mov
push
cli
idiv
stos
fwait
scas
and
in
sub
cmp
fdivrp
adc
sub
add
addl
sbb
call
inc
pop
cmc
inc
cmpb
and
je
jge
adc
xchg
mov
adc
in
jle
jno
xchg
ret
sbb
xor
push
inc
or
je
mov
inc
hlt
sbb
adc
sub
add
les
adc
mov
adc
xchg
stc
mov
sub
xchg
xchg
jne
pop
stos
dec
fidivs
mov
push
clc
push
inc
lds
mov
and
lahf
adc
jb
add
movsb
bound
push
push
and
jecxz
and
aas
and
xchg
leave
clc
jnp
sahf
movsb
je
outsl
divl
mov
addr16
test
in
and
mov
xor
ret
popf
icebp
test
sbb
add
sbb
shll
mov
cli
mov
jb
jns
jl
xor
rorb
fcomps
outsl
mov
push
sarl
repz
cmp
add
out
cwtl
hlt
ret
in
popf
loop
and
popa
sarl
pop
xchg
mov
pop
jge
and
inc
fcomps
mov
xchg
gs
mov
inc
xlat
shrl
or
gs
sub
inc
jo
xor
outsl
pushf
mov
insb
pop
push
inc
iret
out
mov
loopne
add
mov
jns
add
inc
fyl2xp1
ljmp
xchg
dec
mov
aad
ret
mov
jmp
test
repnz
xchg
mov
scas
or
mov
lock
push
jg
mov
push
pop
add
mov
in
pop
loop
pop
and
and
pushf
or
adc
clc
or
rcrl
repnz
cltd
add
pop
mov
enter
imul
addr16
mov
leave
aam
dec
das
mov
push
mov
addr16
clc
jns
ljmp
cs
push
adc
jnp
xor
cmp
cmp
sub
nop
insl
fs
into
jge
data16
std
cmc
jne
jge
in
pushf
push
xchg
mull
push
lret
imul
push
mov
pop
lret
dec
dec
pusha
ja
aad
push
stc
pop
jg
dec
xor
xchg
in
and
jmp
je
clc
daa
push
pop
mov
ret
fistps
ret
enter
jl
push
push
mov
pop
xor
jp
jmp
ds
cmc
add
inc
loopne
dec
pusha
jmp
mov
dec
jb
jge
cmp
loopne
stos
sbb
mov
sub
jo
sbb
push
mov
sub
dec
in
jecxz
mov
loop
es
adc
pop
xlat
dec
repnz
xchg
out
fwait
cli
mov
fadd
test
mov
imul
mov
and
insl
inc
jae
xchg
ficoml
dec
mov
adc
pop
sbb
or
push
notl
ja
js
in
pusha
xchg
push
dec
mov
aaa
xchg
xchg
dec
insl
sqrtps
push
rorb
test
cmp
xchg
call
jns
dec
sub
into
or
dec
dec
inc
pop
cpuid
out
sbb
inc
lds
sbbb
test
push
adc
cmp
stos
movsb
add
aaa
cwtl
stos
and
scas
cmpsb
in
incb
jne
xor
jl
pop
or
rolb
icebp
jnp
pop
push
inc
int3
iret
sti
lret
or
cmp
mov
inc
adc
push
filds
cs
fsubrl
add
fnstenv
cld
and
add
xor
enter
mov
in
clc
sub
or
inc
pop
push
cwtl
imulb
loope
aam
mov
mov
jb
call
add
repnz
mov
lods
and
xor
ret
insb
scas
mov
mov
sub
add
das
scas
rolb
add
dec
xor
jmp
cs
call
jae
sbb
int
mov
jge
gs
cltd
int
lods
lods
stos
rcll
fs
mov
adc
inc
mov
sub
jno
lea
lret
dec
icebp
mov
sub
imul
movsl
sbb
adc
inc
imul
icebp
addr16
lds
xor
or
outsl
cmp
mov
out
dec
loopw
or
pop
out
ljmp
mov
inc
in
lods
lds
outsl
adc
inc
xchg
push
dec
inc
and
leave
loop
push
xor
cs
in
shll
add
subl
in
hlt
sti
add
andb
aam
cmc
mov
ror
lds
les
les
ss
adc
shrl
lret
mov
jmp
cmpsl
add
fcmovne
sbb
popf
jbe
inc
mov
cmp
lret
lea
mov
xor
and
adc
ficompl
xor
dec
xor
mov
add
fimuls
in
pop
rclb
int
fisubs
ja
xchg
xor
xor
into
daa
pop
mov
int
clc
jns
popf
imul
mov
adc
cmp
mov
jl
fidivs
movsb
sbb
and
icebp
sbb
mov
cmp
addl
push
fnstsw
arpl
and
cwtl
push
mov
stos
dec
mov
inc
out
jmp
add
mov
jb
jne
push
les
andb
fwait
dec
or
mov
inc
jne
pusha
mov
sub
gs
mov
aas
loopne
xchg
pop
dec
cmp
jne
sub
repz
fadds
jge
dec
cld
mov
mov
fcomps
lods
loop
icebp
jo
sbb
loopne
jo
cmp
dec
pop
ja
rcrb
mov
dec
push
dec
iret
mov
movsb
loope
cwtl
int
xchg
aam
stos
es
sbb
xor
jbe
sub
sub
push
shrl
mov
ret
xlat
jecxz
movsb
lret
cmpsb
xchg
test
xchg
pop
dec
rolb
popf
mov
pop
pop
in
mov
cmp
out
inc
movsb
stos
mov
popf
and
xor
add
js
jne
sbb
cmp
addb
xor
mov
mov
or
subl
dec
jl
scas
fdivrl
ret
mov
cmp
push
fs
xchg
lahf
sbb
xor
jl
mov
push
dec
xchg
cld
cmp
jns
popa
movsb
and
ds
push
adc
call
out
out
inc
adcl
mov
sub
dec
jnp
xchg
jno
ss
push
sub
ret
clc
xchg
and
test
jne
nop
loopne
push
mov
clc
sarl
xchg
push
into
dec
cmp
imul
mov
in
add
push
mov
imul
pop
icebp
add
add
lcall
popf
push
out
sub
jecxz
xor
add
adc
xchg
pop
sub
mov
mov
add
xchg
call
cmpsb
push
xlat
imul
in
out
clc
mov
lea
xchg
adc
in
pop
lock
dec
inc
mov
adc
scas
test
dec
repnz
test
daa
mov
xor
pop
fiadds
xor
xchg
lock
cmp
mov
call
rorl
es
sbb
repz
sbb
push
sti
ret
andl
push
pop
fsubrp
xchg
hlt
xchg
cmp
mov
sbb
fldl
mov
xchg
aam
sub
xchg
xor
idivl
xchg
sub
pop
or
stc
es
aas
pop
mov
popa
cltd
jno
xlat
out
js
loopne
xchg
mov
add
in
pop
scas
add
push
push
scas
arpl
and
sbb
das
iret
iret
or
jecxz
inc
jecxz
call
psubq
imul
cmpsb
xor
inc
addr16
ljmp
jle
sahf
mov
xor
xor
adc
fs
add
ja
fnsave
adc
loop
ficoms
sarl
cli
jne
icebp
mov
clc
notb
mov
jp
popa
loop
outsb
cli
cmp
mov
lret
test
sub
fs
pop
je
cmp
cmpsb
xor
pop
mov
test
adc
stos
mov
pop
loopne
add
mov
inc
xor
not
enter
dec
mov
popf
xchg
xor
mov
sbb
add
jmp
pop
xor
jle
test
xchg
jne
cs
negl
mov
jmp
aad
mov
inc
cli
aas
ja
push
xchg
repz
dec
fs
xchg
sbb
insl
jno
xchg
cmc
jg
cmpsl
arpl
mov
mov
lret
fstps
cld
ret
pop
pop
dec
mov
mov
in
jmp
push
and
test
xchg
jb
cwtl
sub
les
fwait
loop
pop
movzwl
in
adc
jecxz
das
icebp
add
es
push
imul
icebp
xor
xchg
push
mulb
jmp
mov
push
stos
sub
push
add
jo
test
rol
mov
lock
and
xchg
adc
out
mov
std
add
idivl
cmp
aaa
lahf
test
jecxz
sti
mov
mov
movsb
xchg
mov
xchg
hlt
icebp
add
pop
mov
cmp
inc
lret
clc
sti
subl
add
enter
movsl
cwtl
addr16
iret
jbe
pop
pop
mov
xor
pop
inc
nop
xor
fnstenv
or
sub
jb
add
test
mov
jg
inc
xchg
dec
adc
notb
fsts
sbbb
jl
or
xchg
mov
mov
insl
jne
incl
sbb
mov
idivb
ret
push
mov
mov
xchg
adc
xchg
sbb
out
sub
lret
icebp
mov
push
mov
adc
daa
cmp
int3
jbe
dec
lods
mov
mov
lock
push
leave
cs
insb
add
mov
xor
push
std
pop
xchg
pop
lcall
jno
push
pusha
jg
cli
movl
mov
imul
jbe
mov
dec
jl
add
dec
inc
lahf
insb
xchg
jbe
aas
pop
shl
repnz
icebp
mov
jge
daa
push
mov
and
mov
add
or
xchg
js
lds
jmp
jno
sahf
mov
out
lea
mov
push
scas
lcall
jae
jns
sub
mov
pushf
inc
loope
lret
movsl
imul
add
iret
call
pop
sub
pusha
int
nop
xchg
lock
ret
lods
daa
std
aam
xchg
shll
sbbb
sub
orb
jge
cltd
sub
add
xor
rorl
xor
insl
jnp
push
fbstp
push
mov
imulb
push
fwait
and
insl
jle
scas
cmp
stc
push
daa
cmp
push
mov
lds
fiadds
jl
and
xor
mov
fxch
sbb
repnz
xor
aad
call
sbb
add
gs
sub
add
dec
xchg
and
jo
sub
jg
push
arpl
sub
enter
jecxz
test
add
out
test
lcall
xchg
leave
xchg
movsb
mov
roll
lahf
or
mov
and
or
inc
sbb
inc
ds
sbb
push
pusha
pop
fsubl
gs
push
add
cmp
mov
xchg
cmp
stos
push
or
shll
aad
dec
cmpsb
aam
jecxz
ret
inc
dec
push
subl
js
hlt
mov
je
mov
imull
aam
pop
inc
shrb
inc
jae
sti
or
pop
push
call
js
inc
mov
push
sub
imul
add
sub
sbbl
iret
push
popa
dec
addr16
out
add
jno,pt
mov
jecxz
fnstcw
xchg
and
push
pop
rcll
outsl
pop
inc
jns
fcompl
cld
xchg
fisttps
xlat
xor
mov
mov
push
mov
xchg
mov
ja
jecxz
cltd
sbb
push
shr
lea
aas
dec
pop
xor
test
int
popf
xor
rolb
leave
movsb
imul
sbb
out
test
loop
push
mov
xchg
xor
dec
daa
add
leave
inc
xorl
sar
and
fisttpl
in
mov
movsl
lcall
lret
mov
loop
or
movsl
fisubrs
or
in
cmp
cs
mov
das
push
push
leave
inc
rcrb
nop
mov
push
mov
mov
jle
test
inc
jne
frstor
fucomi
adc
das
push
iret
aas
repz
cmp
push
mov
pop
out
xchg
popf
ljmp
fbld
add
icebp
out
lods
or
icebp
or
stos
mov
subl
jge
cmp
push
es
cltd
aaa
push
ficoms
cli
cwtl
fs
ret
cmpsb
aaa
and
fsubrp
mov
add
or
repz
inc
push
mov
mov
push
cmpsl
arpl
xor
insb
es
sbbb
in
out
mov
popf
or
jmp
xchg
jbe
scas
out
xor
sub
mov
sub
ret
pop
add
push
jbe
jecxz
rorb
jae
mov
jp
ficoml
sahf
cwtl
lea
add
mov
pop
sub
ret
sub
std
push
inc
push
push
add
cmc
lret
push
aam
idivl
dec
dec
sub
bound
pcmpeqb
and
int
movsb
aaa
xchg
iret
push
popf
add
cmp
fisubs
mov
ss
jg
add
stos
mov
inc
movsl
aad
ljmp
mov
loopne
jp
pusha
lds
mov
cmp
jecxz
push
loop
mov
dec
cwtl
mov
and
push
jns
inc
insb
xor
sbb
out
mov
fs
mov
repz
adc
fwait
jmp
lds
test
jle
or
sbb
mov
scas
mov
push
nop
push
stos
aad
cs
adc
mov
imulb
push
loop
adc
adc
add
daa
xor
push
jnp
testl
xor
xor
sbb
std
je
cmpsl
imul
loop
fcomip
mov
repnz
into
fistl
xor
in
xchg
sarl
aaa
adc
or
adcb
adc
pop
lahf
pop
cmpsb
out
mov
inc
data16
inc
fs
inc
dec
dec
jmp
jno
or
in
push
jmp
jmp
lret
popf
inc
inc
popfw
out
and
push
shll
cltd
and
mov
pop
mov
adc
push
sub
push
dec
test
push
cmc
mov
pop
orl
and
cmp
mov
dec
adc
daa
lcall
rcrb
cs
adc
leave
std
int
lret
pop
fisubl
cmp
cmc
shll
mov
aaa
andb
mov
loop
lahf
sbb
rcl
jb
out
cld
add
fildl
ja
push
xchg
jp
add
les
movsl
xchg
jnp
push
test
ret
adc
pop
xchg
leave
pushf
outsl
ja
das
sbb
into
lock
sbb
mov
fmuls
pusha
dec
call
jns
insb
sti
jae
mov
cmc
jp
push
mov
subl
aas
mov
mov
inc
add
nop
pop
arpl
add
pop
pop
pop
jne
insb
aam
ss
ret
cmpl
je
push
int
lsl
sbbb
cmp
adc
or
pusha
popf
add
addr16
decb
pop
cmp
call
cld
jmp
dec
frstor
roll
popf
fstpt
in
movsl
jo
pop
jnp
mov
mov
jb
or
hlt
push
inc
in
in
aam
in
out
les
shl
daa
inc
fisttpl
andl
push
xchg
notl
xchg
push
mov
out
andl
aaa
stos
push
jo
or
push
mov
int
push
sbb
mov
or
xor
es
fwait
mov
dec
repz
lock
insl
popa
and
jge
inc
xchg
pushf
and
ss
sarl
jmp
xchg
enter
and
in
ljmp
js
pusha
in
mov
sbb
out
enter
xor
cmp
add
icebp
outsl
pop
jmp
cmp
clc
rep
pusha
test
push
test
shlb
add
hlt
mov
enter
rcr
popa
add
and
xor
mov
adc
adc
xchg
xchg
sub
cmp
mov
jl
sar
out
jo
clc
mov
sbb
pop
cmp
out
sti
xchg
jae
lcall
ror
dec
fidivrs
mov
sti
lock
mov
ret
sub
xchg
enter
inc
nop
sbb
dec
pushl
push
fbstp
cwtl
cmc
cmpsb
mov
xchg
mov
push
nop
jb
std
movsb
arpl
mov
mov
and
insb
clc
push
jns
out
mov
stc
jp
jecxz
jge
jl
shr
outsb
dec
div
sbb
add
lret
push
movsb
je
cmp
dec
cmp
pop
pop
jmp
xchg
stos
push
subl
cmp
cmp
in
stc
push
push
adc
std
adc
fiaddl
jl
in
ret
pop
jle
ret
and
mov
xchg
mov
pushf
test
cltd
bound
mov
jge
cmp
mov
mov
cld
inc
sub
or
mov
addr16
sbb
add
dec
or
xchg
xchg
fs
roll
pop
push
lahf
cmp
mov
jb
add
je,pn
jne
xchg
mov
imul
add
sub
mov
sub
xor
mov
leave
mov
call
push
jge
or
cmc
mov
pusha
or
sbb
lea
adc
pop
xchg
insb
mov
push
outsb
sub
lea
mov
cld
lahf
fsubrp
jp
add
mov
xchg
in
mov
es
xlat
cs
add
stos
ficompl
in
loop
jle
je
cmp
loopne
adc
push
in
cmp
pop
andl
mov
notb
mov
adc
shll
sbb
cltd
arpl
xchg
inc
sbb
mov
popa
push
jp
jae
mov
psrlq
repnz
orl
les
mov
lahf
mov
and
test
or
inc
iret
jp
xchg
mov
mov
mov
jne
jb
into
in
test
std
jl
lods
insl
jnp
in
call
stc
ret
and
repz
pop
sbb
ljmp
je
push
mov
and
int
add
lds
in
imull
jb
and
stos
mov
push
in
mov
into
pop
cmp
out
xchg
jg
test
inc
mov
jae
repnz
push
cmp
mov
push
jl
and
testl
mov
sub
jmp
pop
add
push
mov
loopne
lret
loope
sahf
add
dec
out
mov
push
cli
and
xchg
imul
push
jo
imul
sahf
xchg
mov
push
lahf
sbb
in
popa
into
xchg
pop
loop
js
add
fsub
sub
aam
dec
or
repnz
push
fcomps
aad
inc
inc
inc
jl
mov
es
or
cmp
lcall
or
addl
adcb
inc
xor
add
test
xchg
inc
cmp
out
leave
pop
push
loope
clc
mov
test
shl
jl
pop
in
jl
ret
mov
pop
pushf
dec
pop
pop
and
cmp
outsl
out
inc
jl
repz
or
fidivrl
xchg
add
add
loope
imul
ja
pusha
mov
push
out
pop
dec
cmp
pop
cmp
outsl
cli
push
sub
cwtl
xor
out
mov
sub
idivl
adc
dec
jnp
cli
xchg
aad
xchg
repz
rcrb
sbb
leave
scas
or
cmp
addl
xchg
mov
xchg
stos
push
xchg
push
movsb
cmp
jecxz
mov
jecxz
xchg
adc
xchg
pop
mov
mov
imull
xchg
cld
int3
xchg
sub
aam
inc
push
xor
rcll
loopne
mov
fmul
sub
sbb
or
pop
ss
repz
aad
imul
mov
sahf
sarb
rcl
dec
sbb
push
fmull
fnstenv
test
idivl
and
mov
xchg
rcll
jmp
and
inc
in
xchg
popa
test
scas
shlb
lea
sbb
xor
cwtl
or
dec
or
mov
insb
int
fistl
popa
in
mov
push
stc
fsts
cltd
xchg
nop
sbb
xchg
daa
in
insb
arpl
mov
mov
xchg
lret
pop
mov
mov
sub
fidivrs
clc
mov
call
jae
enter
sub
inc
lahf
push
cli
mov
xor
cmp
popf
gs
add
mov
nop
xor
push
adc
in
xchg
cmpsl
pop
xor
mov
cmc
dec
pusha
or
and
cmpsb
pop
jnp
cmp
cmp
out
inc
test
dec
fiaddl
pop
xchg
xor
divl
push
pop
outsb
cmp
imul
in
sub
gs
inc
jnp
cmp
sub
loop
stc
mov
int3
cmp
sbb
nop
jae
add
in
stc
sbb
xor
cli
push
jp
outsb
outsb
test
jg
shl
int
sbb
iret
sbb
sub
leave
jns
xor
adc
xchg
mov
imul
cwtl
outsl
cs
es
loopne
xchg
or
sbb
imul
xchg
dec
mov
adc
mov
dec
imul
ficoms
cmp
pop
aad
inc
ret
int3
in
jp
inc
inc
les
adc
xchg
repnz
dec
dec
xlat
sub
adc
sub
and
push
cs
movsl
lahf
push
pop
cmp
out
or
cmp
cmp
leave
scas
sbb
out
inc
sub
into
out
sub
mov
je
call
das
or
cld
call
jp
mov
sti
fidivs
lret
outsl
outsb
insb
mov
js
cmpsb
orl
mov
stc
cli
popa
add
stos
add
push
xor
dec
mov
pop
clc
push
ffreep
fdivrs
int3
fnstenv
pop
jnp
popa
enter
ss
leave
call
in
dec
stc
inc
push
ret
fcom
sahf
sahf
std
dec
orl
sub
adc
and
push
ljmp
aas
stos
sbb
movsl
xor
imul
loopne
fcmovu
sbb
test
xor
xchg
xchg
or
and
mov
aaa
dec
jp
add
or
das
insl
fidivrs
xchg
iret
sbb
mov
pop
loope
xor
inc
outsb
add
mov
sbb
fmuls
push
sbb
fwait
ret
push
push
xor
and
in
mov
lret
cs
cmpsb
pop
add
popa
arpl
cli
mov
in
rclb
cmpb
clc
xchg
popf
mov
jne
shlb
fwait
mov
and
xchg
cwtl
popf
dec
pop
int3
jle
mov
lea
icebp
int
ret
aaa
adc
jmp
inc
mov
or
fwait
pushf
movsl
test
sbb
imul
call
jmp
pusha
sub
push
das
subb
mov
jmp
es
cmc
leave
and
jge
sub
mov
dec
mov
add
jnp
jns
lea
mov
andb
fisubl
xor
add
cld
rolb
and
loop
sti
mov
dec
jo
shrl
jb
mov
rcrl
mov
das
inc
sub
arpl
bound
fwait
push
mov
ja
xchg
aam
sbb
mov
adc
mov
pop
pop
int
icebp
push
stos
data16
sub
nop
push
mov
jl
mov
adc
adc
add
mov
pop
add
shll
jno
ja
adc
out
insb
mov
mov
sbb
adc
fwait
sbb
and
mov
cli
jae
sub
es
getsec
les
rorb
aas
lds
subl
repz
add
mov
lcall
xchg
lahf
imul
dec
mov
xchg
stos
pop
cltd
loop
push
stc
sub
fldl
dec
xor
mov
fmul
ss
mov
dec
fstpt
movsl
sti
mov
sti
daa
dec
xor
test
roll
mov
push
lods
add
cld
mov
mov
fisttpl
xor
lods
xor
pop
loopne
fldl
lods
insb
je
mov
mov
repnz
das
sbb
adc
jmp
pop
lahf
sub
cmp
inc
movl
fs
dec
inc
sbb
cmp
sbb
dec
sbb
test
xor
les
repnz
je
pop
mov
xlat
xchg
pop
push
pop
xchg
mov
stos
xor
repnz
icebp
inc
sbb
jg
cwtl
mov
bound
ja
push
xorb
pop
stos
lods
in
scas
pop
jecxz
mov
jle
sbb
fimuls
pop
pop
mov
lods
mov
jg
inc
inc
aam
icebp
jmp
imul
lds
repz
or
psubq
cs
mov
push
xor
int
cmp
scas
outsb
sti
out
loope
test
jo
lea
fisubrl
pop
shll
push
and
inc
xchg
jae
mov
push
xchg
lahf
or
push
mov
in
cli
xor
pop
adc
bound
jbe
sar
lds
sti
or
imul
pop
mov
in
mov
lods
daa
lock
data16
cmp
and
daa
add
push
pop
setle
cmp
or
or
push
xchg
cli
add
jg
pop
lds
stc
push
mov
cmp
xor
sub
in
in
add
decb
loope
sub
cmp
jp
movl
mov
adc
inc
dec
sub
fstpl
add
insb
and
mov
sub
mov
xchg
shlb
jb
fsubrl
mov
out
arpl
pop
daa
int3
je
out
in
mov
stos
jle
push
push
adc
shlb
mov
xorb
div
cmc
cwtl
dec
sub
loopne
adc
adc
pusha
test
ds
inc
and
lock
fwait
ret
decb
adc
aas
sub
aas
test
mov
cwtl
fcom
arpl
xor
outsl
or
leave
mov
add
push
xor
lahf
fstps
test
inc
pop
fstl
push
push
jecxz
mov
mov
pushf
cwtl
mov
ja
mov
and
sub
pop
repz
and
aas
xchg
xor
xlat
mov
mov
fs
sub
nop
mov
aad
faddl
std
push
fcmovne
or
adc
into
adc
jecxz
and
adc
sbb
jbe
frstpm(287
cmc
push
arpl
int
add
lret
enter
xor
cli
test
xor
lds
sti
jmp
test
mov
pop
imul
in
jbe
in
imul
out
rdpmc
add
lods
jl
enter
sub
sti
aad
xchg
xor
jge
clc
sti
jecxz
fmuls
jp
das
sub
cmp
lret
pushf
adc
rcrb
adc
outsb
fbld
sti
aam
xchg
test
or
out
adc
add
iret
dec
ret
dec
stos
hlt
dec
inc
int3
dec
dec
popa
mov
call
test
and
ja
lahf
inc
mov
sti
loope
lods
mov
and
dec
sub
test
mov
divl
fldl
lret
lret
inc
cmpsl
divb
movsb
filds
sbb
cli
lea
int3
int
add
mov
jno
into
jno
inc
mov
repz
sbb
cmp
fstp
data16
pop
xor
hlt
fistps
les
pop
adcb
or
ret
repnz
movsb
fsubrl
mov
lcall
mov
adc
dec
sub
lcall
push
mov
cmp
xchg
enter
cli
fisubrs
insb
push
xchg
loopne
jl
testb
out
mov
cmp
pop
fwait
popf
outsl
mov
in
lret
mov
and
pop
xchg
sub
pop
jnp
xchg
pop
sub
ret
push
or
addb
dec
in
out
insl
aad
push
jbe
rorb
ret
iret
and
xor
add
jg
arpl
nop
popf
sbb
bndldx
enter
mov
rcl
mov
lahf
cwtl
loopne
push
pop
ds
fucomip
inc
leave
sub
jbe
xchg
push
xchg
cmp
pop
rol
test
push
or
adc
inc
and
and
jno
clc
imul
lock
lods
in
popa
pop
mov
aam
imul
xchg
arpl
mov
push
ret
add
jne
js
xor
mov
rcl
sub
test
bndldx
sub
lea
movsb
xor
movsb
enter
inc
jae
repz
or
fbld
call
lods
cmc
xchg
inc
lods
sbb
dec
mov
push
sub
mov
insl
movsb
sbb
xchg
cwtl
pop
mov
jae
pop
rcl
sbb
ret
test
mov
clc
rcrb
adc
jb
in
xchg
cmpsb
dec
popa
add
push
xor
adc
loop
pusha
in
iret
arpl
inc
mov
dec
cmc
add
out
jg
sbb
or
sbb
jae
ss
xor
shlb
andl
xor
mov
cmp
xor
push
stos
pushf
data16
pop
push
insb
xor
sbb
repz
andb
xchg
leave
inc
fcomp
jno
jns
push
lret
ficompl
lcall
adc
repnz
test
lods
sbb
sub
push
dec
gs
adc
outsb
mov
lcall
inc
rclb
out
adc
and
adc
imul
js
pop
sub
pop
fwait
dec
imul
push
xchg
fisubrl
and
andb
movsl
stc
les
test
sarl
cmp
cltd
out
and
cmp
out
mov
bound
xchg
test
jmp
and
mov
out
adc
dec
out
adc
xchg
push
cmp
lahf
clc
jbe
fs
les
pop
cmp
sbb
push
ja,pn
aad
aam
add
in
fidivrs
lcall
shlb
mov
jns
icebp
repnz
jge
adc
mov
mov
mov
push
aas
sbb
fsubl
add
add
shl
ja
cmc
popa
cmpsl
or
jo
push
or
dec
int
testl
aas
lret
jl
sarb
mov
and
mov
andb
or
xchg
lods
lahf
or
xor
sbb
and
loope
mov
cmp
dec
sub
xor
roll
js
cmp
or
rol
je
mov
dec
popl
add
inc
xchg
sbb
fdivrl
jecxz
clc
push
lods
stos
lahf
sbb
std
cld
cmp
fstpl
scas
or
cmp
outsl
cmc
inc
cmp
mov
sbb
cltd
or
inc
fs
pop
mov
outsb
es
std
adc
test
xor
stos
je
ss
mov
test
dec
jmp
pusha
cld
mov
and
jbe
scas
negb
dec
lods
ja
popf
adc
inc
jecxz
mov
es
pop
cltd
pusha
addr16
adc
cmp
mov
in
or
jo
push
cmp
pop
pop
cs
addr16
xor
ljmp
sbb
pop
cmp
popa
jmp
dec
es
dec
push
cwtl
adc
pop
jge
out
push
dec
inc
out
repnz
sub
outsl
xchg
xchg
sti
xor
lods
cmp
fldl
es
mov
sbb
add
fisttpl
fucomi
inc
adc
js
es
mov
sbb
fbld
insl
dec
fldl
outsl
test
xor
notb
mov
adc
xchg
jae
mov
fwait
into
into
adc
inc
or
neg
mov
jno
or
and
mov
lret
loope
and
inc
movsl
aam
push
mov
lods
and
xchg
and
cmp
add
cmp
dec
js
xor
cmpsl
dec
mov
sub
mov
lock
shl
rcrl
aas
call
ljmp
dec
leave
pop
lcall
ja
cmp
cltd
mov
movsb
xchg
jmp
push
jae
dec
repnz
jmp
stos
jo
lods
rcll
popf
ret
push
out
dec
sub
mov
inc
aaa
clc
jmp
xor
mov
fwait
cwtl
pop
pop
inc
mull
lds
cld
ja
push
sbb
sbb
cmp
inc
out
jmp
push
add
push
inc
and
lret
adc
std
xor
push
sbb
inc
sahf
cmp
xor
pop
hlt
mov
jle
rolb
bound
ds
insl
sahf
divl
es
sub
pop
add
and
lcall
popf
mov
daa
es
das
std
inc
dec
mov
pop
sbb
xchg
jecxz
pop
cmc
dec
pushf
es
push
adc
scas
fldcw
idivl
dec
xchg
int3
push
push
out
insl
pop
repz
insb
push
mov
out
loopne
repnz
in
aaa
imul
fcoms
cmp
sbb
inc
nop
pop
mov
push
inc
mov
fldt
add
jge
fdiv
add
jle
pop
push
fildll
icebp
mov
fwait
push
adc
mov
add
rcrb
cmp
cld
daa
xchg
mov
or
push
pop
lea
pusha
ret
sub
sbb
fisubs
repnz
imul
mov
dec
pop
adc
mov
sbb
push
mov
lret
mov
test
in
fs
jmp
test
ficompl
push
push
dec
hlt
mov
push
data16
mov
aaa
nop
test
adc
hlt
xor
icebp
lods
xor
rcrb
inc
sbb
std
out
iret
mov
mov
adc
pushf
sbb
test
jbe
xor
mov
inc
pop
xorl
sub
add
sbb
in
lret
mov
and
outsb
xchg
sub
lods
xor
ret
enter
sub
lods
fistpl
loop
pop
in
jnp
mov
xchg
jb
inc
vmovdqa
mov
mov
scas
pop
and
xchg
ds
popa
push
xchg
scas
scas
pop
inc
xchg
cmp
mov
mov
aam
push
jge
add
push
jbe
sbb
sub
clc
sub
popa
jecxz
adc
jg
call
adc
std
and
cwtl
stc
fwait
sbb
enter
icebp
out
mov
cmp
shl
in
out
lock
inc
cmp
leave
repnz
pop
shrb
mov
sub
jmp
jne
xchg
pop
push
pop
jl
ret
add
aam
and
lahf
mov
cmpsl
je
gs
fcompl
je
push
out
shrl
clc
ljmp
add
adc
loop
rolb
ss
loope
imull
clc
sarb
and
pop
mov
dec
out
data16
sub
jne
enter
and
hlt
aas
mov
icebp
data16
outsb
pop
dec
icebp
xor
aaa
ja
sahf
aas
push
push
inc
jmp
xor
mov
inc
test
stc
inc
dec
icebp
cltd
repz
jb
sub
jle
sbbb
adc
leave
out
xchg
mov
cmp
sub
mov
pop
dec
inc
shlb
and
cltd
xchg
in
arpl
dec
out
push
mul
inc
xchg
mov
mov
xor
jne
sbb
mov
iret
sti
pop
stc
ss
xchg
pop
fs
add
mov
mov
test
xchg
mov
fsubrp
movsb
ljmp
testl
mov
loope
dec
cmp
add
lods
popa
cmp
stos
fcomp
jmp
movsb
out
cmpsl
xor
push
or
call
or
add
out
xor
jns
inc
mov
int3
inc
rep
ret
cs
ja
mov
das
inc
roll
or
add
call
mov
sub
jno
mov
mov
enter
mov
push
js
inc
xor
mov
fcomp
jg
cmp
pusha
inc
pop
sahf
cmp
xchg
push
and
icebp
das
jo
loop
std
pushf
adc
xchg
mov
cmpsl
pop
xchg
push
aam
notb
pusha
js
pop
aam
cli
or
shl
aam
testb
add
mov
xchg
pop
mov
adc
jl
jmp
inc
jge
popf
xchg
add
push
test
data16
dec
les
jo
mov
pop
sahf
stos
push
stc
pop
push
and
xor
sbb
out
cmpsl
psraw
inc
adc
les
lea
lods
jmp
sbb
cli
push
ss
shll
mov
mov
jp
in
fucomp
pop
cmp
dec
icebp
mov
and
daa
js
lcall
in
dec
cmp
stos
mov
and
sbb
and
cltd
jbe
jbe
fwait
xchg
dec
push
pop
movsl
jbe
in
stos
inc
xor
out
rorb
dec
jecxz
fsubrs
sbb
inc
sub
pop
xchg
in
xchg
dec
and
mov
and
lcall
adc
mov
sbb
jp
shl
add
dec
push
sub
lcall
dec
arpl
int3
test
cwtl
xorl
push
jl
int
xlat
and
ljmp
push
jbe
mov
sub
stc
mov
push
ljmp
add
mov
lock
adc
arpl
xorl
inc
lea
out
fstpt
push
jecxz
dec
pop
hlt
and
sahf
je
sbb
in
mov
popf
mov
ss
sahf
popf
mov
mov
mov
cmp
ljmp
sub
push
ret
int3
mov
das
cmp
sub
and
add
sbb
into
mov
iret
jge
insl
and
xchg
and
cmp
psadbw
bound
mov
push
jno
xchg
popf
jmp
sbb
jne
cmpsb
push
dec
loop
imul
arpl
pusha
addb
pop
adc
sbb
and
xchg
fs
in
cmc
cli
pop
call
rolb
mov
push
xchg
push
lds
and
adc
movsl
mov
jae
adc
dec
inc
in
arpl
or
stos
cmc
testl
xor
fwait
icebp
lds
pop
popl
stos
xlat
subl
test
out
jns
adc
xor
sbb
call
xor
nop
int3
fstl
cmp
sub
fidivl
dec
mov
sbb
ret
mov
fisubl
mov
sbb
or
fsubl
xchg
or
sub
mov
insl
stos
push
test
adc
aad
dec
ja
mov
addr16
mov
add
clc
cmpsb
mov
insb
clc
add
bound
inc
out
cmpsl
sbb
xchg
fxch
and
ror
push
adc
mov
jnp
in
jno
jno
lods
jae
mov
sub
mov
lock
popa
cli
inc
aaa
push
mov
sbb
sahf
mov
sbb
push
lods
pushf
aas
mov
jle
pop
fildl
add
ret
cwtl
in
lcall
jle
add
inc
les
out
es
loop
pusha
jge
dec
pop
adc
mov
mov
mov
sub
push
aad
dec
dec
and
repnz
imul
scas
mov
icebp
pop
shr
enter
shrb
inc
mov
mov
mov
adc
shrl
adc
xchg
jo
shlb
xchg
xchg
inc
mov
inc
cwtl
pop
sub
add
or
js
jp
xor
mov
in
xor
pop
in
in
adc
out
lahf
dec
jl
frstor
push
pop
popa
fcompp
jl
cmc
or
jg
pop
jae
add
cltd
movsb
hlt
inc
stos
cld
mov
ja
inc
outsb
sub
xchg
loope
mov
movsl
neg
mov
sbb
mov
mov
lods
pop
pusha
shlb
mov
out
call
mov
clc
xor
idiv
insl
outsl
repnz
test
test
arpl
bound
out
add
rcrl
or
pusha
and
shrl
movsb
sbb
stos
sbb
or
test
inc
ret
sbb
repnz
fs
pop
cmp
push
mov
sbb
jno
pop
lds
xchg
sub
lcall
pop
fidivs
aam
in
push
ss
or
sub
sub
clc
push
xchg
movsl
into
stos
int
subb
mov
add
push
jge
lret
movsb
cli
add
adc
jg
xor
in
les
xchg
dec
xchg
dec
ja
inc
pop
lods
pop
loop
mov
push
rcrl
jmp
shrb
sbb
xchg
imul
sub
test
xchg
mov
sub
jl
dec
cmp
pop
sbb
iret
adc
mov
jmp
jb
sub
mov
and
sub
stos
std
es
ret
lahf
fs
sub
lds
mov
xlat
stos
jno
imul
cmpb
je
xchg
ds
bound
xchg
negb
test
pop
mov
nop
lea
jmp
cmp
mov
jecxz
xchg
fnstenv
cli
inc
pop
mov
fnstsw
adc
pop
inc
adc
sub
int3
jb
jne
push
xchg
test
mov
xor
insb
pop
sbb
xchg
pop
js
mov
int3
fmuls
sti
inc
cmp
push
test
xchg
repz
xor
mov
xchg
cmp
pop
mov
cwtl
repnz
jns
loop
cltd
jp
mov
cmp
ss
clc
jae
inc
sarl
lock
rorl
test
mov
and
lods
push
pop
rcll
inc
xchg
bound
jns
pop
mov
jo
sbb
ret
ret
pop
or
out
cmpb
imul
loop
out
dec
or
sbb
push
and
and
and
aam
mov
cmp
arpl
mov
xor
jmp
xor
std
or
xchg
jno
cmp
test
mov
lds
mov
dec
pop
in
mov
mov
push
roll
int3
data16
push
es
inc
jae
sbb
xor
cli
insl
shlb
ljmp
nop
xor
lcall
roll
push
insb
add
testb
test
pmullw
jge
rclb
mov
stc
cmp
sub
sub
mov
lock
push
movsb
or
dec
arpl
in
ss
outsb
or
sbb
jmp
pop
mov
mov
frstor
pop
adc
or
xchg
push
or
mov
out
jb
es
das
add
cwtl
into
jle
ja
movsl
push
mov
jne
lods
insb
push
xchg
stos
cs
ljmp
pop
cmc
cltd
das
jae
fs
aas
mov
popf
cmp
cmp
fs
sbb
aas
rep
test
mov
xchg
flds
push
lret
notb
or
out
movsl
ds
dec
and
mov
xchg
sbb
mov
pop
aaa
xchg
dec
les
pop
push
clc
sbb
and
dec
insl
out
enter
sbb
adc
push
mov
cs
adc
cld
cmpsl
lods
mov
scas
cmp
pusha
jb
jg
out
sbb
out
test
xchg
ljmp
push
test
mov
inc
or
insb
mov
nop
rcll
repnz
push
icebp
mov
mov
cwtl
aas
aaa
int3
stc
shlb
ret
mov
cltd
les
adc
dec
lock
push
dec
push
call
xchg
pop
repnz
mov
xor
decl
add
loopne
or
sub
lcall
fdivs
xchg
xor
cwtl
daa
das
jge
bound
sub
test
inc
sti
xchg
pop
je
xor
push
xor
jb
mov
mov
lods
jmp
push
int3
jne
in
clc
shlb
fdivrp
nop
mov
push
push
dec
or
mov
dec
andl
leave
daa
loope
movsb
sub
loop
xchg
daa
pushf
jmp
or
jp
loopne
pop
iret
jecxz
jb
std
int
ds
cmp
imul
outsl
scas
subb
leave
mov
jb
addr16
xor
loop
cmp
pop
xor
into
fistpll
jno
xor
or
sub
push
pop
frstor
and
lret
stos
lret
and
inc
mov
and
outsb
dec
mov
push
adc
ja
lret
xor
scas
sub
sbb
cwtl
adc
in
cmp
shlb
jae
fidivrs
iret
daa
mov
and
stos
pop
clc
pop
hlt
jne
pusha
test
icebp
cld
dec
adc
testl
push
xchg
out
sbb
inc
xor
mov
icebp
sbb
out
cwtl
popa
inc
mov
dec
xlat
pusha
pusha
mov
imul
and
pop
das
sub
xchg
jl
mov
xchg
and
lds
lcall
inc
mov
xchg
adc
addl
lret
test
and
dec
fs
pusha
aam
cwtl
lock
fwait
lea
mov
and
movsl
and
xchg
mov
rclb
ja
test
jb
mov
inc
popa
pop
xor
or
jne
mov
add
inc
mov
xchg
sbb
push
or
xor
mov
mov
and
xchg
in
sbb
inc
adc
cmp
fcompl
aas
in
les
das
clc
in
mov
fstpl
dec
imul
cs
ljmp
mov
aaa
aaa
not
bound
fwait
and
xchg
inc
clc
ret
ficomps
test
data16
out
sarb
int
ss
bnd
je
stos
push
sub
cmp
test
ja
xchg
dec
mov
pop
shlb
push
mov
test
inc
lods
rcl
icebp
pop
rorl
adc
and
or
dec
pop
dec
push
or
cmpl
pusha
fidivrl
mov
outsb
lret
push
push
test
mov
xchg
inc
imul
test
pusha
xchg
fcomip
cmp
mov
sub
xor
shrb
cmp
pop
sbb
fidivl
jle
xlat
pop
or
pushf
adc
dec
and
cmp
imul
xor
cmp
icebp
iret
rorl
pop
insb
aad
loop
cmp
ss
rcrb
test
pop
xchg
sbb
int
mov
stc
ret
pusha
loope
adc
xor
int
or
add
sbb
and
out
sarl
test
jecxz
imul
mov
fildl
mov
pushf
aam
dec
mov
sub
iret
mov
mov
push
xchg
shrb
xchg
cltd
mov
int
mov
adcl
mov
fiadds
imul
rcll
xchg
adc
ret
popf
inc
push
mov
lahf
push
cltd
push
and
jne
repz
dec
imul
js
stc
cmp
cmp
pop
jge
int
push
or
xchg
stc
dec
stos
add
sbb
in
lret
cmp
dec
jecxz
into
into
addb
or
js
fbld
mov
cmc
cmp
push
jns
addr16
scas
testl
outsb
faddl
pushf
push
scas
mov
inc
std
loopne
xor
sbb
roll
mov
ljmp
pop
jg
fld
inc
jbe
xor
iret
dec
sub
cmp
fwait
stos
pop
mov
cmp
inc
lods
pop
pop
add
mov
push
out
inc
mov
pop
or
adc
ret
repz
popa
notl
cld
cmp
lods
mov
movb
jp
add
cli
cs
push
dec
push
out
xor
sub
scas
pusha
int
mov
jns
js
loopne
jns
aad
mov
adc
push
aad
xor
mov
aam
mov
xor
mov
add
inc
insb
call
inc
fnsave
jecxz
leave
cmp
adc
flds
mov
and
std
sarl
sub
movsl
cmp
push
dec
mov
pusha
sbb
int
cmpl
push
sub
cmp
dec
bound
movsb
push
jbe
adc
nop
dec
and
dec
fwait
adc
sbb
jp
mov
adcl
mov
push
and
aas
sbb
pop
dec
jmp
cmp
jmp
push
lcall
mov
inc
xor
adc
adc
outsl
pop
jnp
div
shrb
mov
pop
lret
popf
mov
addb
lea
sar
mov
in
call
fadds
adc
push
and
add
int3
jns
dec
lock
mov
cmc
insb
pusha
sbb
out
adc
adc
push
mov
pop
shrl
inc
inc
push
movd
sbb
pop
xchg
or
cmp
mov
mov
leave
rcll
ret
dec
or
dec
nop
pop
les
xor
movl
pop
repz
ljmp
xchg
adc
aam
mov
cwtl
aas
mov
loopne
mov
pop
push
fwait
jl
rcll
cmpsb
rolb
xchg
xchg
call
xchg
fxch
popf
jge
lret
add
and
push
xor
in
xchg
clc
ds
push
pop
dec
xor
mov
mov
sbb
pop
dec
mov
loope
jecxz
pop
aam
pop
xchg
cmpsl
popa
mov
fs
push
insb
mov
out
jle
sbb
inc
mov
inc
ret
mov
pop
xchg
popl
out
mov
stos
stos
jns
jbe
pop
shl
ja
ljmp
jl
push
mov
addr16
cmp
or
jb
cmc
pop
cmp
xor
pop
mov
in
imul
add
add
mov
adc
in
sbb
adc
xchg
repz
aad
out
std
rcrb
sbb
mov
and
testb
leave
xor
inc
push
sbb
repnz
ljmp
call
add
cmc
shll
mov
sbb
or
fs
cmp
mov
call
add
bound
loop
cld
movsl
mov
fdivs
and
outsb
sub
xchg
sub
fs
mov
sarl
and
xchg
mov
push
outsl
movsl
orl
es
popf
scas
xchg
jne
sub
es
repz
xchg
lods
add
push
adc
movl
out
sub
ja
lds
mov
sbbb
fldt
daa
inc
jmp
aad
cmp
stc
sbb
mov
into
jle
decl
imul
inc
dec
dec
xor
xchg
in
push
into
shlb
mov
cld
and
and
fmuls
movsb
jbe
mov
push
aaa
pop
push
filds
xchg
jb
pop
aad
xchg
mov
lock
lcall
pop
out
mov
es
lds
fadds
cmp
pushf
andl
bound
pop
sbb
in
cmp
lret
test
add
imul
popw
dec
xor
sar
pop
fcomi
xchg
idivb
and
icebp
leave
clc
js
mov
fadd
mov
adc
dec
mov
enter
stos
insb
aam
mov
loop
and
int
nop
jmp
jne
lea
in
jne
paddusb
ret
pop
mov
into
arpl
mov
movsb
xchg
repz
add
pop
je
enter
xchg
xor
out
mov
mov
iret
inc
in
lahf
mov
sub
jnp
mov
mov
fdivs
in
mov
pushf
jo
shlb
pop
fisubs
xchg
jns
or
test
sbb
cwtl
cli
int
add
pop
fs
jecxz
cld
push
clc
daa
cmp
shll
mov
jecxz
adcl
pop
mov
push
adc
out
insb
and
mov
push
rorl
cmpsb
cmp
mov
add
cli
es
sbb
jp
stc
xchg
in
adc
fwait
divl
pop
cmp
adc
and
or
xor
incb
cli
lods
xchg
les
cwtl
mov
ss
inc
xchg
fisttps
outsb
aad
adc
int
jmp
ret
into
cli
cli
push
jbe
sbb
jo
out
sbb
dec
out
jp
enter
dec
pop
push
jmp
sbb
roll
test
mov
xor
cmpsb
std
icebp
mov
test
inc
mov
stc
fisubl
mov
xchg
fistpll
std
inc
ljmp
sub
inc
jae
add
mov
lea
mov
in
push
sub
mov
cmc
add
ss
ss
jbe
inc
or
add
mov
test
mov
jge
sbb
xchg
push
cmp
nop
adc
ret
pop
lock
andb
and
mov
cmpsl
fadd
jo
xor
xorb
inc
int3
jecxz
mov
or
cltd
push
mov
add
aam
pushf
inc
aad
add
xchg
xchg
lcall
pop
out
aam
pop
inc
dec
jbe
imul
mov
stos
test
out
popf
adc
jne
xchg
hlt
das
and
insl
push
mov
and
cmpsb
add
addl
mov
in
jmp
andb
pop
jne
xchg
pop
lcall
push
stc
or
mov
pop
icebp
dec
push
imul
movsl
cltd
or
xchg
sti
add
movsl
bswap
not
lret
mov
scas
fucom
dec
stos
xchg
add
lahf
test
fdiv
mov
push
pop
lret
pop
faddp
sbb
pop
cli
mov
jge
push
outsl
icebp
mov
xchg
xchg
scas
shll
in
dec
inc
jl
iret
dec
daa
sti
test
jp
mov
mov
mov
push
es
adc
and
repz
and
xor
loope
ss
mov
jnp
negl
dec
mov
cmpsl
daa
push
repz
cmc
xchg
pusha
mov
stos
gs
test
push
mov
repnz
call
pushf
adc
cmpsb
pop
adc
lcall
icebp
mov
xor
or
xchg
fs
fwait
movsb
mov
xor
ret
inc
pop
jl
mov
shrb
mov
inc
fcomp
je
adc
mov
addr16
call
adc
outsl
xchg
icebp
js
adc
mov
add
or
cmc
push
push
add
pop
mov
mov
push
ljmp
ss
push
cmpsb
push
mov
jg
push
ret
mov
dec
bound
inc
fsubr
xchg
pop
mov
stc
adc
enter
mov
push
sbb
shrl
dec
cwtl
sbb
movsb
adc
pop
jmp
sub
xor
xlat
inc
push
cld
cs
call
dec
push
and
mov
mov
sub
lds
lahf
fwait
cmc
mov
adc
insb
pop
sub
ljmp
cmc
or
cmpsl
and
and
push
repz
inc
sti
outsb
jnp
in
inc
cmpsl
and
rorl
movsb
or
sub
cmpsb
scas
cwtl
fld
sub
inc
clc
push
jne
nop
lock
lds
bound
pop
pop
jmp
jno
sbb
mov
hlt
dec
inc
aam
inc
imul
dec
les
xchg
loopne
jae
orl
push
cmpsb
push
repnz
xor
fdivrl
movsb
inc
ss
rorl
pop
adc
pop
jb
movsb
mov
mov
push
sub
sub
mov
cs
mov
aad
xchg
jns
fldl
jp
mov
push
bound
jmp
xchg
lods
mov
fs
test
dec
gs
add
mov
aad
mov
sub
in
fwait
test
aam
cmpsb
out
cmc
push
mov
mov
cs
icebp
rcl
ret
outsb
mov
fnstenv
sub
or
and
mov
push
jns
icebp
inc
das
push
roll
pop
popa
shrb
out
ds
or
jmp
clc
dec
jl
mov
adcl
in
xchg
mov
or
lea
imull
lahf
inc
loopne
lods
fwait
lea
xchg
dec
push
jne
adc
test
call
lea
inc
jb
imul
lret
cltd
movsb
mov
cmp
lods
lret
mov
xchg
xlat
aad
pop
pusha
and
ds
sub
push
lcall
notb
ss
pop
jns
push
scas
pop
scas
aad
push
in
push
fistpll
cmpsb
iret
adc
push
test
adc
jmp
push
mov
sbb
mov
fisubl
int
mov
fld
jl
in
orb
out
xchg
xchg
adc
adc
xlat
cli
jno
mov
cwtl
inc
or
sub
jmp
int3
jge
or
lods
dec
stos
inc
push
sahf
sbb
cld
ss
or
arpl
xchg
and
sub
push
cmp
daa
ja
add
mov
xor
movsl
je
mov
aad
repz
inc
mov
jp
inc
xchg
outsb
rcll
cld
arpl
inc
xor
push
sahf
into
loop
add
push
mov
pop
clc
xchg
mov
xor
or
add
lret
test
ss
sub
push
mov
out
pop
pop
mulps
mov
mov
mov
xchg
inc
dec
xchg
rcrl
sbb
mov
xor
rorb
cmp
aad
ds
data16
jbe
xchg
shlb
or
mov
push
sti
ret
and
lret
shlb
xchg
mov
cmp
jecxz
add
dec
clc
daa
mov
and
mov
mov
lock
ss
or
aam
subl
cmpsl
inc
cwtl
daa
out
add
test
dec
mov
in
movsb
or
jbe
test
sub
ficoms
rcrb
aas
test
xchg
sbb
rorb
xor
dec
fs
push
sub
loopne
icebp
push
je
jle
lahf
sbb
loop
pop
gs
jl
xchg
or
xchg
nop
shl
push
pusha
xchg
mov
daa
pop
testb
pushf
dec
fwait
jmp
repz
sub
lahf
xlat
xlat
ret
mov
xchg
lahf
cmp
das
xchg
or
rorl
add
test
mov
jg
out
inc
stos
pushf
loope
sbb
daa
xchg
rorb
add
cmpsl
adc
mov
cmp
sbb
fidivs
notl
cmp
stc
mov
lock
cmp
out
dec
in
pop
cmc
test
call
pop
lds
mov
subl
add
aam
shll
ja
xorb
in
or
mov
aad
repnz
in
pop
jbe
js
into
cltd
adc
xchg
lret
js
sbb
mov
stc
or
adc
mov
xchg
jecxz
xor
iret
inc
aas
xchg
pop
add
cmpsb
call
push
cmovne
loop
push
push
scas
lret
sbb
movsb
mov
jae
mov
mov
test
xor
hlt
push
jb
fmulp
sub
push
jne
inc
cmp
mov
push
es
arpl
hlt
arpl
fcoms
push
popf
fistps
cmp
mov
push
jno
xor
std
stos
ret
mov
xchg
push
test
push
movsb
shl
sbb
adc
aad
mov
mov
test
push
shrb
inc
mov
sub
add
cmp
addr16
mov
arpl
aad
or
cltd
xor
add
mov
aas
lret
mov
xchg
jmp
dec
add
sbb
aad
jbe
pop
ljmp
push
out
lret
xor
lahf
push
sub
dec
inc
ja
repnz
in
in
pop
mov
push
jl
rorb
or
aas
jmp
mov
jg
push
dec
cmp
sbb
push
and
sbb
gs
sub
hlt
out
mov
cs
movsb
filds
in
xchg
sbb
mov
sbb
jl
lods
gs
rcl
mov
or
add
xchg
mov
aas
jne
inc
jp
sbb
test
add
push
jno
in
std
fwait
sbb
add
add
jp
subb
nop
pop
insl
sbb
pushf
dec
mov
and
mov
out
fs
xor
fcomps
jnp
jmp
imul
aad
dec
fists
shr
xor
icebp
push
in
jecxz
cmp
or
pop
bound
ja
fs
pop
adc
scas
lods
fistpll
scas
and
push
mov
push
mov
pop
js
cld
jp
mov
push
xchg
adc
jmp
ret
jmp
lds
into
pop
mov
mov
ficompl
xor
sti
mov
dec
in
lock
xor
mov
jp
cmc
sub
dec
mov
mov
and
stc
sub
xchg
sbb
lret
mov
add
pop
cltd
push
adc
cmpsl
lcall
sbb
ret
mov
fwait
in
decl
push
dec
out
xchg
aas
popf
add
jl
adc
or
jmp
xorb
jp
test
and
push
xor
add
jl
loop
call
mov
out
pop
test
lahf
enter
lds
pop
inc
push
insb
aas
mov
dec
pushf
rcrl
iret
mov
dec
ret
arpl
pop
cmpsb
inc
clc
sub
fnstenv
mov
ret
pop
dec
call
ja
sti
gs
mov
inc
std
mov
mov
mov
insb
jbe
outsb
imul
push
adc
mov
imul
inc
loope
cmp
jg
add
cmp
fcmovnbe
or
and
and
pop
addr16
sbb
pop
outsb
hlt
dec
dec
std
icebp
insb
ss
adc
fs
pop
rolb
adc
insl
pop
mov
pop
mov
inc
das
sub
mov
adc
and
adc
sub
addr16
sub
mov
jg
pop
lret
sbb
lods
push
pop
jmp
inc
cmp
lahf
add
int
loop
mov
add
shlb
je
push
adc
and
fdivl
xchg
sbb
popa
repz
fstpl
cmp
or
in
scas
stos
test
dec
mov
push
dec
inc
sub
repnz
cmpsb
out
imul
jbe
sub
and
adc
add
mov
mov
xchg
or
test
shlb
enter
cli
and
jp
adc
dec
gs
mov
ljmp
or
jge,pn
and
xchg
add
and
mov
push
je
jg
jnp
xchg
fnstcw
add
addl
in
inc
xchg
cmp
shld
pop
repnz
push
dec
testb
or
rolb
dec
and
cli
cmpsb
stc
adc
aas
pop
fwait
stos
addl
imul
nop
add
jae
sbb
sbbl
xchg
mov
das
sarb
inc
orb
xchg
in
mov
push
cltd
xchg
and
push
sbb
aas
cmc
xchg
mov
jae
popf
mov
lret
push
pop
xor
lods
and
out
inc
clc
test
icebp
scas
pop
and
xlat
out
adc
sbb
cmpsb
cltd
ds
test
popa
shrl
jo
cmp
dec
arpl
daa
pop
fwait
aam
adc
movsl
clc
and
sub
jno
mov
cli
rcrb
mov
inc
xchg
adc
aas
cmpsl
jnp
add
push
daa
inc
clc
add
fwait
push
dec
xor
cmpsl
mov
sti
fs
push
pop
lcall
push
pusha
ja
fsubrl
ljmp
lahf
mov
and
add
lcall
add
fucomp
mov
lods
jno
add
pop
stos
jae
sbb
pop
add
fmul
inc
lret
adc
loope
sbb
icebp
fcoms
mov
lods
adc
jne
xor
xchg
mov
or
je
push
mov
sbb
aad
pop
andb
dec
cmpb
sub
sub
pop
movsl
sarb
fcompl
nop
aam
inc
mov
popf
pushf
nop
inc
jmp
jecxz
std
jnp
push
xchg
add
ds
roll
jmp
push
push
in
sub
in
lds
fistpl
push
cwtl
roll
arpl
mov
xchg
sub
outsb
subb
mov
adc
add
cmpsb
test
cmp
js
sti
fmul
and
das
xchg
jb
pusha
xor
shlb
dec
pop
jg
pushf
fnstsw
rep
push
rcrl
mov
mov
imul
push
sub
push
mov
cmp
movsl
jb
aas
or
cmp
loop
mov
in
jg
ret
or
jl
and
jae
mov
mov
pop
bound
movsb
fimull
jp
lds
mov
mov
fildl
dec
add
mov
xchg
push
dec
add
in
mov
les
arpl
sbb
add
add
xorl
nop
mov
test
jg
mov
ja
fwait
rcrb
inc
adc
mov
push
adc
mov
push
icebp
xchg
sub
fwait
sar
int3
addr16
dec
dec
add
pop
mov
xchg
test
jl
std
lahf
cmc
and
jp
scas
cwtl
scas
pop
jle
stc
js
cmp
cmp
xlat
and
mov
add
std
outsl
dec
inc
dec
mov
loopne
lret
aad
push
shll
fsubl
cmpsb
lods
cmp
pop
es
ficoms
pop
mov
inc
sbb
xchg
loope
je
xchg
popf
out
movb
sbb
mov
aaa
je
mov
adc
jno
and
sbb
dec
lods
bound
sbb
xor
out
sub
push
xchg
scas
frstor
adc
ds
ret
push
iret
sbb
scas
outsb
frstor
mov
rorb
je
insb
xchg
xor
push
sbb
imul
stos
jp
sub
mov
inc
cmp
add
add
stos
out
pusha
out
es
sub
in
test
mov
iret
adc
shlb
sbb
cli
xchg
or
lahf
or
mov
stos
addr16
outsl
imul
adc
fxch
sbb
jno
cld
mov
mulb
push
mov
and
inc
mov
jno
cs
or
add
repnz
sub
mov
or
jo
pop
dec
dec
xor
outsb
outsl
mov
xorl
add
pop
jae
jbe
sbb
sbb
and
test
cmpsl
mov
mov
mov
jmp
into
in
adc
int
add
rep
and
popa
cwtl
sub
jl
mov
push
sbb
mov
or
cli
ja
in
mov
pusha
and
sahf
dec
popa
outsl
mov
add
jns
push
cmp
xchg
add
and
cli
xchg
fmuls
push
xchg
cltd
xor
adc
out
outsl
mov
ljmp
fxch
clc
mov
adc
outsb
out
js
mov
cmp
cli
pop
mov
ret
insl
mov
int3
lods
loopne
repz
rcrb
mov
push
negb
pushf
xchg
enter
push
int3
adc
mov
xor
fbstp
add
dec
in
sbb
pop
cmpb
sahf
mov
jle
xchg
xchg
xchg
in
out
adc
jb
mov
in
in
push
int3
mov
rcrb
dec
add
clc
cmp
dec
into
pop
sarl
decl
adc
adc
inc
loop
mov
mov
sbb
ret
mov
jge
pop
sub
shll
pop
cmp
out
rcrb
xchg
fldcw
sarl
add
rorl
push
mov
lret
pop
xor
sub
icebp
in
ljmp
outsb
inc
mov
sub
scas
adc
xchg
sub
mov
mov
dec
mov
and
sbb
hlt
in
dec
or
sti
loopne
ret
sbb
ja
test
sub
sti
push
push
adc
sub
sahf
add
pushf
mov
ret
scas
cmpsl
out
push
incb
xchg
and
pushf
es
daa
testb
cli
add
and
sub
pusha
pop
mov
in
mov
push
jecxz
addr16
rclw
icebp
sub
pop
or
psubq
insl
xor
stos
pushf
add
dec
inc
push
test
icebp
sub
cld
iret
testl
mov
addl
mov
or
or
mov
pop
test
in
testl
fists
or
jb
stos
push
xchg
scas
pop
mov
adc
jae
daa
mov
mov
shlb
push
imul
add
dec
aad
enter
sub
mov
cmp
add
shlb
mov
pop
push
repz
adc
mov
cs
push
xorl
cmp
cltd
inc
mov
sti
mov
imul
push
jmp
lods
cmp
cld
sub
mov
jae
inc
shll
push
sbb
adc
stc
mov
xlat
jae
inc
sbb
mov
sti
incl
insl
insb
xlat
es
jg
inc
jno
daa
rclb
scas
push
gs
in
shlb
data16
cmp
add
fimull
push
scas
cltd
ret
popa
inc
cmpsb
nop
arpl
scas
fwait
push
inc
lods
jg
dec
xor
add
pcmpgtw
and
pop
test
aaa
int
mov
mov
bound
pop
cmpsb
mov
cmp
stos
adc
imulb
pop
icebp
sbb
xor
xchg
test
shrb
inc
lock
fisttpll
or
inc
iret
pop
push
mov
lock
push
popa
pop
inc
sub
push
dec
add
fisttps
sarb
xor
ss
inc
stos
outsl
dec
aas
adc
xchg
out
outsl
xchg
sbb
push
dec
iret
fidivrs
and
fucomp
mov
aam
jb
enter
sub
mov
inc
xchg
sbb
lock
adc
xchg
in
jb
push
int
jle
mov
aad
filds
fsubp
andl
insb
movsb
cmp
add
inc
push
xchg
push
gs
rclb
outsb
adc
add
xchg
inc
repnz
lea
lods
sbb
push
mov
and
mov
cmp
mov
mov
pop
ja
addr16
jb
int
shr
xor
sbb
les
sbb
cmp
mov
les
inc
mov
jbe
sub
imul
je
adc
insb
repz
lret
cmpsb
pop
insl
jbe
ss
stc
add
mov
push
sub
dec
orl
push
adc
add
jnp
into
mov
lds
cmpsb
fiaddl
aaa
xchg
xor
or
mov
add
mov
xchg
test
and
sti
and
add
lcall
daa
in
xchg
mov
xchg
xlat
add
rcrb
or
shll
in
call
dec
in
leave
cs
dec
cld
cmp
push
sub
xor
aad
xchg
jmp
icebp
push
aad
jne
hlt
int3
sbb
icebp
mov
push
pop
pop
js
add
bound
mov
adc
orl
cmpsl
dec
inc
mov
and
mov
sub
es
rol
sbb
dec
inc
push
test
or
aas
pop
or
cmp
add
loope
fdivr
push
or
adc
xchg
dec
cmp
inc
dec
xchg
fcmovnu
rcl
in
addr16
enter
stc
mov
sub
xchg
shrl
pushf
fcoms
dec
in
movsb
mov
or
inc
daa
mov
sahf
scas
fmuls
push
or
insb
dec
mov
andl
loope
mov
out
inc
dec
mov
cmp
sbb
lahf
aam
mov
cmp
push
cli
ficomps
aad
dec
dec
sub
xchg
sub
pop
jns
faddl
xlat
xor
jmp
fldenv
and
mov
mov
xchg
stos
out
notb
push
adc
or
dec
and
les
lock
scas
xchg
ljmp
outsl
repz
ss
je
or
xchg
push
adc
jbe
ljmp
pop
insb
jecxz
dec
mov
cli
jbe
mov
imul
testl
mov
xor
add
inc
add
mov
jnp
imull
jb
sahf
xlat
cmp
out
mov
xor
stos
scas
scas
xchg
pop
or
lock
lcall
lcall
xor
mov
mov
clc
dec
pop
jns
test
and
mov
std
cmc
xchg
or
add
mov
jecxz
daa
cmpsl
addr16
jo
fstpt
movsb
popf
call
inc
aas
in
sar
sub
fstl
out
insl
fs
add
xchg
mov
mov
lret
inc
add
push
sbb
mov
out
inc
mov
stos
div
and
fimuls
cltd
repz
shlb
and
repz
stos
aas
into
xchg
imul
test
jb
fadd
cmp
jmp
popa
clc
lods
hlt
push
in
cmpl
lea
xlat
aas
jp
mov
das
out
lcall
scas
lds
out
mov
ljmp
gs
scas
push
not
aad
jg
jmp
sbb
mov
imul
mull
xor
aas
sbb
lea
repz
mov
mov
iret
and
or
loop
pop
fnstcw
inc
shll
sti
jecxz
mov
add
int3
aad
insb
addl
pop
sub
ret
inc
mov
lret
aaa
subb
aas
out
int
movsb
jbe
in
add
and
test
notl
mov
repz
jns
pusha
loope
push
cmp
mov
fucomip
jnp
out
adc
cmp
leave
mov
adc
repz
addr16
adc
dec
pop
aas
dec
dec
outsl
loope
fdivrl
int
pop
add
jnp
and
bound
data16
mov
xchg
fs
cmc
out
test
dec
adc
jle
adcl
sahf
in
cltd
xchg
xor
dec
and
xor
dec
aad
and
jle
daa
inc
sub
sub
inc
push
pusha
pop
inc
ss
sbb
sub
int
cld
push
xor
dec
ret
xor
xor
in
mov
sarb
adc
add
mov
in
pop
fnstenv
cmp
arpl
add
jo
mov
xlat
adc
inc
movsb
or
jg
stos
and
inc
mov
cmpb
les
adc
std
aam
les
or
ljmp
rclb
pop
orb
cmp
int
and
jb
sbb
nop
add
sub
pusha
add
sbb
roll
mov
sarl
in
sub
or
lcall
mov
inc
cltd
or
cli
mov
xor
lret
mov
pusha
mov
int3
shll
inc
es
dec
xlat
mov
dec
sub
lods
sbb
sub
adc
mov
push
fisttpl
dec
or
xchg
pop
push
adc
repz
xchg
dec
push
jb
popa
xor
mov
add
cs
daa
fiadds
aas
scas
rcr
cmpsl
loop
mov
fistps
sar
dec
xor
shll
repz
cmp
into
dec
divb
jle
fabs
jle
push
jb
enter
or
push
xchg
xchg
mov
sbb
loope
jne
cwtl
adc
in
adc
es
push
rcrl
fcoml
pop
jae
sbb
aaa
adc
push
and
dec
test
mov
into
fisttpl
inc
pop
jl
nop
out
cs
sub
test
sbb
jmp
pusha
popa
mov
inc
pop
and
ljmp
mov
mov
pop
ds
sub
aam
mov
cmp
inc
mov
mov
jo
enter
in
jb
filds
loope
enter
xor
lret
push
sub
gs
and
jmp
mov
push
jns
push
xchg
and
aam
and
add
pop
mov
cvtps2pi
cwtl
loop
lds
pusha
xlat
lods
jbe
sbb
daa
pop
xchg
cli
pop
jmp
fsub
inc
adc
out
push
in
mov
loop
lret
loop
sub
push
jmp
in
add
sti
or
adc
sub
shlb
test
and
mov
cli
push
sahf
mov
push
push
or
or
jne
adc
pop
jg
add
ret
lock
pop
push
jns
push
cmpsb
fadd
xchg
stos
imul
add
call
subb
dec
xor
inc
outsl
cmc
mov
pop
es
test
clc
push
test
scas
mov
test
mov
or
shll
stc
int
mov
pop
pop
ja
push
orl
sub
mov
dec
xchg
jmp
xor
sbbb
jle
push
leave
mov
aam
xchg
cmp
arpl
pop
xor
mov
movl
push
sub
mov
mov
pop
jnp
jns
fimull
aam
or
push
test
xlat
lahf
nop
clc
loopne
mov
or
std
repz
dec
jns
push
add
ss
ds
lock
iret
pop
daa
mov
jnp
pop
sbb
jo
insl
test
in
xchg
or
ds
push
into
cmp
xor
push
mov
in
fwait
pop
in
add
insb
test
cmc
sarb
push
jg
or
adcb
test
xor
lret
jmp
out
shrl
and
dec
out
shlb
jge
test
movsb
leave
std
ret
xchg
pop
fisttps
mov
xchg
inc
stos
pop
adcb
fstp
lods
stos
push
and
mov
call
outsb
dec
fdivrl
stos
mov
out
mov
cwtl
mov
and
add
int3
ret
fcom
dec
xorl
popf
arpl
lret
mul
mov
push
xorl
mov
mov
test
fs
push
xor
and
xor
mov
jl
inc
xchg
aam
xor
dec
and
popf
push
cmc
pop
scas
and
scas
mov
pop
in
cmpsl
test
inc
rep
pop
lea
out
mov
aam
and
dec
adc
pushw
push
or
mov
or
xor
fwait
xor
data16
or
pop
cmpl
add
movsl
push
pop
inc
jbe
aad
mov
sbb
adc
sbb
jmp
mov
ret
mov
les
adc
mov
push
shlb
pop
sbb
hlt
cmp
imul
add
fistpll
cmp
flds
push
dec
pop
add
xchg
pop
cmc
dec
jge
mov
and
daa
push
lods
mov
daa
push
mov
push
xor
xchg
ljmp
push
jns
or
inc
fcomp
sub
lret
sub
test
pop
xchg
push
sti
inc
jbe
push
xor
mov
inc
loop
cmp
cmc
cli
xchg
notb
xor
inc
cmp
jnp
xor
ds
mov
jae
mov
lret
dec
loope
jno
and
outsb
pop
adc
mov
ficompl
add
fwait
out
loopne
push
push
jl
movsl
add
dec
pop
push
xorl
cmpb
adc
push
xchg
cmp
cmpsl
gs
mov
aad
add
sub
std
idiv
adc
jb
xor
pop
loopne
lcall
fwait
push
push
les
jmp
pop
xchg
ds
adc
and
loope
aaa
cmp
dec
inc
push
jae
loopne
cld
hlt
bound
adc
cwtl
int
sub
jecxz
negl
or
mov
insl
cmpsl
xchg
js
ljmp
add
mov
mov
cmp
jle
jns
jo
and
mov
mov
stos
call
xor
aaa
dec
push
pushf
inc
outsb
mov
mov
mov
loop
xorl
movsb
loope
mov
sarb
test
popa
fwait
and
ret
data16
bound
pop
jg
dec
add
ss
outsl
push
lock
dec
add
in
movsb
jo
add
mov
mov
mov
jmp
icebp
xor
adc
mov
or
lret
xlat
test
mov
fisubl
and
cmp
dec
sbb
mov
sbb
data16
pop
cmp
push
fmull
pop
outsb
xchg
xchg
push
jg
addb
loope
ret
test
cmp
push
dec
mov
repz
and
sbb
sar
dec
in
fcmovnbe
mov
jns
popf
in
data16
jmp
fwait
push
movsl
cli
stos
mov
mov
mov
inc
pusha
loope
das
rcrb
sub
push
cs
out
sub
ret
dec
mov
stos
lahf
lret
sbb
in
mov
adcb
mov
lock
and
nop
push
in
enter
popl
ret
fadd
or
mov
pop
cmp
mov
or
and
inc
mov
les
jg
push
std
mov
pusha
dec
xor
stos
push
pop
adc
mov
cmc
fidivrs
xor
jno
push
adc
push
xchg
push
mov
mov
inc
adc
xchg
shll
xchg
pop
cmc
out
and
add
dec
mov
jecxz
jp
xchg
mov
push
mov
jae
and
mov
push
adc
mov
and
xor
cmp
mov
in
inc
aas
ja
or
adc
sahf
fildl
cmp
out
addl
pop
dec
add
mov
fcmovnbe
repz
pop
dec
out
dec
div
xchg
sub
idivb
cmpsl
sub
jmp
mov
pop
inc
imul
mov
clc
inc
or
adc
fwait
jl
in
dec
addr16
rorb
xor
jno
mov
lods
sub
dec
fiaddl
xchg
movsl
add
lds
loope
mov
jae
mov
mov
inc
cmp
mov
dec
sub
sub
subb
mov
xor
sahf
aas
lahf
cmpsl
push
inc
jns
lret
into
sbb
in
addr16
iret
lea
les
add
iret
adc
adc
dec
jae
and
xor
sti
in
lahf
jno
mov
out
xchg
and
aad
fmuls
adc
add
icebp
rcrb
sbb
pop
test
mov
pusha
lahf
xchg
cs
jmp
pop
xor
jg
daa
bound
or
insb
in
ja
mov
xchg
and
jp
and
mov
adc
ret
arpl
cld
push
cltd
insb
fsts
or
pop
mov
and
mov
inc
xchg
cmpl
idivb
leave
xchg
push
stos
in
jecxz
sbb
shrb
push
or
nop
filds
mov
rcll
push
and
js
pushf
jp
fistl
mov
popf
push
lods
dec
push
lcall
fiaddl
icebp
in
loop
movsl
fs
cmp
sbb
test
insl
dec
imul
rolb
ds
push
jo
cmp
test
push
sub
ret
popf
dec
outsb
jne
adc
jbe
and
insb
and
sahf
imul
or
push
shll
push
cmpsl
mov
addr16
and
push
jp
jp
cmp
pop
mov
test
push
bound
pop
dec
dec
mov
mov
xchg
pop
push
loop
xchg
xlat
xchg
pop
testb
lds
les
imul
and
sar
ss
fwait
push
mov
mov
scas
add
sub
xor
int
push
mov
sti
jmp
fcoms
in
jp
xor
test
sub
das
add
stos
js
imul
push
enter
ljmp
rorb
cmp
and
mov
cmp
cmpsl
mov
out
testb
ds
cmp
cmp
lds
outsl
xchg
int
sbb
pop
pop
stos
test
stos
arpl
stc
pop
call
sbb
push
nop
gs
jb
mov
mov
bound
pop
push
adc
sub
lods
dec
stos
mov
inc
mov
mov
xchg
adc
in
scas
stc
mov
xchg
cmp
icebp
fbstp
insl
scas
mov
jo
and
lea
xchg
mov
push
xlat
mov
les
inc
jge
shl
adc
clc
push
popf
mov
xor
adc
push
jmp
jnp
fs
fdivs
xchg
pop
dec
xchg
shll
rcr
or
mov
xchg
loopne
mov
sub
push
mov
xor
mov
mov
mov
jp
cmpb
or
push
in
adc
cs
and
stc
pop
xor
in
int3
jle
or
add
xlat
push
jg
mov
mov
xchg
bswap
jecxz
out
dec
adc
mov
popa
inc
pop
mov
sub
mov
out
dec
xchg
insl
sub
cwtl
out
daa
jmp
xchg
mov
add
fucom
stc
je
imul
jmp
addr16
sub
pushf
out
ret
nop
mov
add
pop
add
mov
jle
ja
scas
jmp
addr16
cli
rcrb
aas
popa
sub
stos
or
mov
jle
push
add
sub
jns
sub
inc
lret
mov
pop
icebp
jno
adc
push
xor
sbb
out
or
mov
add
jno
or
dec
addr16
push
sbb
shll
leave
xor
sbb
or
push
jbe
xchg
imul
divb
sub
mov
pop
dec
add
pop
mov
adc
movsb
sbb
mov
ss
push
in
xchg
mov
mov
cmp
movsb
mov
fldenv
punpcklbw
mov
lret
jle
xor
cmp
mov
xchg
jp
pop
in
and
pop
inc
test
lea
sbb
jmp
inc
ror
dec
or
xchg
and
outsl
outsl
gs
aad
lret
push
mov
jg
cmp
pop
xchg
and
add
mov
push
cwtl
sbb
shlb
add
lahf
jle
cs
push
out
mov
out
jns
out
lahf
out
mov
xor
adc
out
stos
dec
adc
dec
sub
loop
mov
mov
push
push
add
pop
add
pop
lcall
aad
dec
in
adc
scas
movsl
mov
ja
pusha
scas
cld
notb
jns
sahf
cmp
dec
je
push
popf
leave
dec
jecxz
stos
or
push
sbb
dec
movsb
es
cmpsb
lret
fstps
test
sub
mov
pop
or
mov
sahf
fistps
les
outsb
xchg
push
inc
hlt
cs
cmp
xlat
mov
sbb
and
lcall
xchg
nop
xchg
jg
outsl
sar
mov
pop
movsl
mov
push
popf
sbb
je
lcall
jnp
cmc
outsl
imul
sub
ja
ss
push
and
loop
xchg
push
add
jnp
mov
or
cmpsb
jno
sub
stos
jne
sub
fcmovnu
mov
cs
cmp
out
rorb
incb
pop
or
add
dec
cmpb
int3
in
or
pop
sahf
xor
aaa
push
push
aam
mov
insl
jecxz
xchg
into
lcall
addb
pop
enter
ja
cmp
out
lods
mov
xor
jae
mov
and
es
sarl
push
add
cmp
push
mov
or
sub
inc
js
lcall
mov
int
and
cmpsl
sbbb
sahf
jg
insb
ljmp
lcall
popf
sub
out
pop
jbe
clc
hlt
ret
repnz
fdivl
and
jp
mov
outsb
frstor
add
rclb
push
and
loopne
sbb
decl
or
scas
mov
dec
fcomps
scas
pop
pop
jmp
lods
loopne
jl
nop
fadds
mov
test
and
clts
and
or
mov
ret
xchg
gs
js
sub
pop
push
divb
ret
mov
xor
xor
and
jb
imul
fst
ds
pop
sub
aad
pusha
out
mov
lods
xchg
mov
xchg
or
jmp
out
dec
push
mov
addr16
xchg
xor
loop
cmp
test
jge
pushf
les
das
and
fldt
loope
push
mov
mov
lock
push
adc
fcmove
mov
and
xchg
and
mov
mov
shrl
push
cmp
sbb
pop
mov
cli
mov
lds
cmc
sbb
mov
jne
or
push
add
mov
cwtl
jmp
lds
int3
jle
daa
cli
sbb
push
mov
mov
sbb
rclb
sub
fstl
dec
sub
ret
in
fcoms
jp
pushf
fdivrs
test
inc
add
mov
inc
dec
sub
push
lds
iret
out
cmc
scas
lret
cmpb
mov
repnz
out
cmp
dec
xchg
inc
cmc
hlt
sub
mov
mov
jae
fisttpl
inc
aam
sbb
cmpsb
ss
xchg
and
test
xchg
pop
daa
sub
je
imul
jb
lret
cli
sahf
mov
popa
ds
scas
leave
pop
bound
movsl
sub
aad
int3
pop
cmp
pop
dec
fwait
push
xor
cmc
ficoml
repz
flds
cs
out
inc
insl
mov
addr16
xor
cmovge
mov
dec
scas
mov
addr16
adc
lods
add
jns
sbb
pop
push
aas
out
pop
mov
out
pop
xlat
sbb
leave
testb
mov
pop
mov
inc
dec
push
mov
sbb
or
lock
inc
inc
cwtl
mov
int3
jb
aam
sub
ret
fldl
jno
or
xchg
sub
mov
mov
in
jb
push
popa
xchg
mov
negl
out
aad
add
in
dec
aam
nop
cmp
add
pop
pop
sarl
adc
cmp
add
lret
out
xchg
adc
add
loop
add
add
lret
stc
repnz
dec
jns
or
loope
jae
and
mov
mov
dec
mov
mov
das
xchg
and
push
jmp
loopne
jnp
mov
pusha
adc
ljmp
mov
imul
mov
out
out
loop
pop
loop
int
mov
les
leave
adc
and
mov
rcrb
outsl
and
popf
push
mov
sbb
xchg
in
mov
mov
mov
mov
mov
jne
xchg
and
jo
xchg
fnstsw
and
repnz
shlb
xorb
scas
mov
ss
dec
sbb
jmp
mov
ja
insb
xchg
cmc
pop
es
sub
dec
ror
jecxz
popf
pusha
mov
dec
or
xor
push
pusha
sti
push
inc
aam
mov
fdivrp
pop
xor
movsb
cmp
cltd
jge
ds
xchg
xchg
and
cmpsl
ja
lret
les
call
aad
sar
xlat
call
and
push
in
ja
or
mov
add
jne
xchg
in
stos
mov
mov
inc
imul
mov
adc
sub
insb
call
or
xlat
jnp
nop
adc
push
lea
xor
adc
adc
pop
push
imul
mov
out
push
bound
shlb
dec
cmp
sarl
xor
ficoms
jnp
in
sbb
cs
imul
jle
mov
sub
sub
aad
xor
lock
xlat
cmp
sbb
das
arpl
sbb
cwtl
fiaddl
add
cmp
into
cwtl
mov
je
inc
mov
sub
jae
mov
add
fidivl
ficomps
and
aam
test
jl
add
mov
cmp
dec
xchg
adc
or
jecxz
mov
lret
or
loop
xchg
cmp
pushf
mov
cmp
pop
pushf
mov
fadd
movsb
sub
stc
outsl
pop
test
rol
or
and
pop
fsub
in
icebp
xor
iret
xchg
popf
xor
test
insl
pxor
push
inc
inc
popf
pop
int3
xchg
push
iret
ret
fisubs
aam
pushf
stc
std
jns
cltd
jecxz
pushf
push
inc
movl
or
push
xchg
rcrl
mov
xchg
lahf
xor
ljmp
and
dec
mov
inc
aad
nop
sbb
cmp
popf
stos
test
out
sub
sub
ret
leave
push
jbe
xor
ds
or
fistps
push
loope
pop
pop
mov
js
mov
pop
dec
les
int3
mov
daa
call
or
lock
mov
sub
fiadds
data16
push
pop
push
xor
inc
out
xchg
repz
ljmp
add
sti
pop
mov
jo
lock
std
les
hlt
push
pop
push
adc
scas
int3
mov
sahf
or
repnz
mov
mov
xor
hlt
cwtl
xor
pop
pushf
inc
mov
pop
or
push
test
inc
divb
jle
jge
inc
and
add
insb
icebp
aam
adc
jnp
movsb
sbb
xor
rorb
xor
mov
pop
fsts
bound
lods
fcomip
or
push
and
repz
and
scas
cs
push
hlt
pop
xor
imul
push
mov
jbe
js
lock
add
push
pop
inc
mov
or
decb
sub
inc
cmc
cmp
mov
or
test
pop
sub
xorl
pushf
repnz
mov
pop
mov
dec
clc
push
mov
pop
push
je
cmp
fmull
arpl
arpl
int
xor
or
pushf
fsubrs
mov
cmp
push
inc
or
lcall
andl
or
fnstenv
popa
fdivs
mov
mov
loopne
dec
sub
mov
mov
xor
jle
in
stos
mov
and
popa
int
jle
ret
in
inc
repz
jl
fsub
dec
inc
out
pop
bnd
mov
outsb
imul
mov
pop
cmp
shll
cwtl
fwait
mov
fcmovbe
mov
loop
cwtl
rol
or
and
mov
push
scas
push
movsb
pop
nop
mov
xchg
std
sbb
incl
and
nop
dec
and
lds
inc
loope
sbb
jmp
test
inc
adc
or
iret
and
xchg
cltd
and
clc
pop
adc
or
nop
lods
clc
lods
repz
int
cmpb
pushf
mov
cmc
and
sbbb
push
test
cwtl
mov
push
add
jo
scas
nop
les
dec
ss
ljmpw
movb
mov
dec
fucom
les
adc
push
inc
test
call
fisubrs
lahf
fwait
xor
cmpxchg
aaa
inc
xchg
cmc
test
rolb
cmpsl
and
add
mov
repz
loop
repz
mov
pop
insb
adc
andb
int
push
imul
sahf
xchg
inc
xor
nop
jnp
jbe
dec
aam
and
repnz
in
mov
andl
rorb
push
ja
test
aam
jmp
loop
lock
lret
jb
bound
mov
mov
mov
sarb
bound
xchg
cmp
pop
outsl
das
scas
push
dec
xor
sbb
cs
cli
dec
lock
sahf
mov
push
dec
jns
xor
ds
xor
shlb
inc
pop
adc
rcr
xchg
ss
lret
push
es
xchg
adc
negb
inc
int3
leave
mov
sbbb
dec
sbb
rep
dec
pop
mov
enter
or
dec
xchg
inc
cwtl
daa
xor
andb
jnp
stos
or
xchg
push
mov
jle
lcall
mov
hlt
cmpsl
sub
aam
in
sub
push
bswap
pop
pop
adc
fdivr
hlt
stc
popf
imul
pop
jle
ja
iret
daa
scas
out
pop
pop
push
imul
mov
push
inc
mov
dec
adcl
in
push
add
fidivrl
sbb
bound
push
fcmovu
ds
or
jg
cmpsl
dec
inc
sub
mov
lahf
stos
cwtl
sub
sahf
mov
push
pop
jb
in
sbb
cs
sbb
ja
es
addr16
push
in
loopne
pop
cltd
or
clc
out
sbb
sti
xchg
lock
int3
fwait
fwait
ret
inc
enter
repnz
loope
stos
push
cld
xchg
arpl
pop
nop
mov
aaa
daa
cmp
sub
pop
shrl
mov
adc
test
insl
sbb
mov
pusha
mov
mov
mov
adc
cs
push
insl
out
xor
into
inc
or
xchg
cmp
enter
popf
std
out
outsb
enter
lods
or
lds
arpl
and
add
push
rcrl
lea
int3
jae
cmc
aas
and
lcall
mov
xor
stc
dec
cmpsb
xchg
jmp
inc
rcrb
icebp
fstps
out
aam
mov
mov
add
jno
push
xchg
mov
or
adc
push
push
cltd
sub
daa
cwtl
in
test
hlt
add
int
jne
divb
stc
jecxz
pop
cld
lea
hlt
jnp
je
jne
scas
test
and
push
ds
nop
xor
mov
outsb
dec
push
pop
ficoml
stos
xor
sub
stos
inc
js
lret
ss
dec
push
or
insl
push
mov
jnp
int
jne
es
sub
sahf
out
lock
sub
test
inc
inc
sbb
mov
or
mov
xor
int3
and
je
clc
lret
inc
repz
mov
push
mov
jmp
pop
aam
mov
cs
mov
xchg
or
scas
or
sub
push
fidivrs
and
insb
adc
arpl
iret
jno
fdivl
sub
into
sarb
sub
adc
cltd
cmp
push
shll
xchg
add
outsl
sbbb
pop
cwtl
insl
cmp
fsubs
and
inc
int3
xor
out
xchg
jecxz
ret
mov
jo
push
sub
or
rcrb
movl
gs
ret
popf
jnp
jg
sarl
out
insl
xchg
sbbb
mov
xor
or
aam
nop
mov
and
jecxz
push
leave
imul
mov
cwtl
dec
push
call
mov
and
pop
je
xchg
mov
lods
push
add
sahf
loope
cmpsb
cmc
ror
push
mov
mov
jmp
xchg
ja
mov
sbb
push
imul
scas
iret
lods
add
pop
push
repz
movsb
je
movsl
jecxz
pop
mov
adc
xor
roll
xchg
sbb
inc
inc
icebp
dec
jle
mov
int3
jne
pop
insb
and
add
push
rorl
adc
mov
into
jecxz
lods
in
les
pop
push
or
cmpsl
iret
or
mov
fdivl
mov
movsl
arpl
jge
xor
pop
dec
call
xor
loope
test
pusha
frstor
int3
roll
scas
fistl
ror
ds
jno
subl
leave
push
lea
and
stos
push
filds
jp
arpl
ss
jl
or
mov
ficoms
xchg
andl
pop
repnz
cmp
fnsave
out
fcmovnu
out
in
fsts
rolb
or
js
or
sbb
add
divl
dec
cmovno
inc
xor
cmp
test
push
pop
iret
sbb
in
mov
aad
mov
mov
repz
sub
out
jno
push
jbe
jbe
xchg
pop
xchg
xchg
sub
jl
jae
mov
sahf
jp
aam
into
pop
xchg
cmc
aad
negl
dec
fisttpl
mov
dec
xor
mov
lods
hlt
test
and
mov
cld
orl
push
sbb
js
fistpl
lea
gs
and
inc
fmuls
pop
sbb
jno
mov
in
pop
inc
into
jecxz
xlat
fdivs
mov
pop
and
test
into
std
dec
stos
stos
fwait
xchg
rcrl
push
pop
jle
scas
fldcw
shll
and
dec
jae
xor
cmpsb
aas
xor
popa
std
mov
aad
mov
jns
xchg
jno
je
push
mov
xchg
push
mov
call
mov
lea
push
pmaddwd
adc
inc
inc
inc
int
xchg
inc
and
mov
fsubrs
aam
adc
aam
jl
cmpsb
xor
mov
es
mov
movsl
jbe
add
sub
ret
jmp
shll
pop
jge
push
daa
jp
xchg
or
mov
push
adc
and
les
in
push
cmpsl
ja
dec
pop
cmp
into
xchg
pop
test
jo
inc
adcl
popa
fimuls
jno
repz
jecxz
or
mov
lret
sub
adc
inc
fwait
mov
dec
and
sbb
cmp
and
ret
stc
cli
push
inc
dec
pop
insb
call
inc
inc
mov
test
repnz
and
pop
loop
mov
lahf
aaa
sbb
and
inc
mov
es
xchg
scas
mov
dec
and
aad
adc
sbb
pop
sti
add
sbb
gs
bound
pop
js
mov
sbbl
scas
xor
jl
mov
xchg
sahf
mov
xor
adc
mov
daa
in
outsb
or
sahf
xchg
xchg
in
pop
les
sti
loope
bound
cmp
jae
add
xchg
push
sub
push
notb
cld
sub
fisubrl
out
mov
xor
and
movsb
out
or
divb
sub
leave
out
ret
jne
test
and
cmp
xchg
js
pop
jnp
clc
sbb
imul
sbb
mov
mov
push
or
ds
jns
sub
enter
out
inc
mov
out
mov
adc
int
dec
mov
mov
ja
adc
mov
push
and
jle
jo
test
xchg
bound
mov
or
mov
ja
inc
add
dec
test
inc
mov
sbb
mov
add
das
rolb
jl
dec
cmc
jecxz
add
jb
sub
repnz
in
mov
pop
aam
inc
pop
adc
scas
dec
mov
sti
inc
pushf
loopne
out
das
movsb
fcompl
add
pop
aaa
test
insb
cld
xchg
cmp
in
lret
mov
clc
sbb
cli
jmp
jns
or
pop
sub
push
xchg
fisttpll
or
mov
shl
jge
stc
jae
in
lods
push
mov
cmp
outsl
lret
call
inc
mov
enter
out
popf
xchg
movsb
adc
cmpsb
pop
adc
lea
test
fs
mov
call
mov
mov
scas
cmovle
push
mov
mov
fs
insl
scas
cmp
ljmp
adc
and
ja
or
dec
ds
shlb
sbb
jo
jl
mov
jmp
and
and
clc
repnz
orl
fstps
loope
mov
out
pop
lods
mov
and
repz
cltd
adc
movsl
cmp
mov
and
gs
dec
xor
sbbl
jp
test
adc
fstpt
dec
fs
xchg
sub
cld
add
repz
jg
cmp
mov
and
lcall
sub
mov
adc
mov
sbb
mov
fsubrs
mov
sbb
loop
mov
lea
sbb
jae
push
out
test
setne
gs
mov
popf
adc
sbb
lock
cmp
and
test
lds
adc
dec
mov
sbb
cmp
or
stos
enter
or
xchg
jg
mov
dec
nop
xchg
cmp
jl
sti
mov
jmp
test
xchg
adc
or
js
lds
add
mov
cmpsl
pop
arpl
mov
iret
leave
xor
cmp
jne
subb
out
adc
add
adc
fildl
push
lock
dec
xor
fmull
add
imul
lret
loope
aam
push
or
jecxz
cmp
cs
dec
clc
inc
mov
cmp
push
inc
sbb
sub
insl
push
aad
aaa
mov
inc
aas
sbb
or
or
push
sbb
xor
or
and
test
jns
add
hlt
dec
popa
test
aad
sarl
pop
mov
xchg
push
subl
pop
adc
push
rorl
rcrl
dec
sub
cli
sahf
icebp
dec
dec
jecxz
xor
dec
cmp
adc
xor
pop
int
and
mov
cmc
lods
outsb
jmp
ja
jl
jecxz
repnz
lcall
pop
ja
xorb
movsb
pop
push
and
jo
rolb
jbe
imul
mov
push
in
xor
jo
nop
in
cmp
out
jl
cwtl
or
ret
arpl
push
sets
dec
sub
mov
cmc
dec
test
loopne
lret
test
mov
push
dec
sbbb
push
icebp
add
pop
call
add
xor
sahf
das
in
mov
cltd
mov
xorb
sub
or
dec
aam
xchg
les
lahf
in
orl
cmpsb
sti
mov
xchg
int3
mov
out
repnz
dec
mov
jnp
fwait
mov
mov
jmp
lock
xchg
cmpsb
fstp
fidivrs
pop
ret
jae
inc
xor
sub
cmp
sbb
aad
sbb
lds
pop
rclb
testb
or
dec
mov
fistpl
adc
dec
scas
add
mov
test
imul
cmp
mov
cmc
or
xor
mov
test
mov
lret
adc
bound
xchg
ret
arpl
cmp
popl
loop
aad
lock
xchg
rcrl
add
daa
into
or
out
stc
out
mov
push
lods
pop
popf
out
push
push
adc
pop
pop
xchg
stos
out
fldenv
retw
int
inc
xchg
insl
repz
push
addl
mov
adcl
lods
into
inc
mov
ret
add
xor
sub
sbb
push
mov
andl
jmp
scas
pop
jno
into
bnd
push
rcrb
in
mov
sbb
stos
dec
repnz
call
mov
cmpsl
sub
jnp
bound
jecxz
add
jg
sbb
in
pushf
xchg
aam
repz
add
xlat
cmp
pop
in
aad
and
and
jmp
jb
fiadds
and
in
test
jecxz
cmpsl
push
dec
cmpsb
add
pop
gs
lahf
loop
or
fldt
jo
cli
or
jbe
outsb
or
dec
xchg
xlat
mov
sbb
pop
clc
call
fsubs
adc
iret
int3
sub
daa
lock
data16
xchg
push
dec
sbb
adc
pop
out
xchg
pop
cmp
call
stc
icebp
rorl
inc
mov
cwtl
imul
lods
jg
sbb
int3
add
sbb
or
xchg
mov
sub
mov
in
sbb
stos
loop
sub
and
loope
pop
xchg
add
sbb
leave
jle
push
popf
push
inc
jns
or
xor
pop
mov
jmp
xchg
pop
jmp
push
adcl
js
jb
dec
push
je
stos
enter
add
sub
mov
cmpsb
es
jnp
cld
xor
sbb
arpl
popa
add
inc
dec
gs
bound
or
inc
mov
leave
xchg
jecxz
fbstp
enter
jbe
sarl
or
add
inc
iret
mov
xchg
dec
pop
xchg
xchg
jo
adc
lret
fsubl
push
adc
and
dec
dec
jge
or
adc
lds
xchg
subb
jbe
jle
pop
pop
mov
push
mov
popa
mov
pop
roll
scas
bound
dec
inc
adc
inc
inc
mov
dec
mov
jecxz
fwait
xor
iret
mov
or
out
repz
nop
popl
sbb
push
fisttpl
hlt
xchg
aad
mov
mov
adc
cwtl
adc
sub
stos
mov
ds
adc
mov
sahf
rcr
outsb
mov
sub
dec
jae
bound
mov
pop
out
xlat
inc
push
pop
fsubrs
stos
or
int
orl
int3
sbb
dec
daa
xchg
subl
push
mov
iret
in
push
bound
fidivrs
mov
enter
outsl
mov
jl
pop
fisttpl
sub
ret
mov
rorb
mov
push
sub
xchg
sbb
mov
outsb
and
pop
xchg
xchg
pop
pop
int
insl
aam
adcl
mov
jle
std
out
lret
mov
cmp
cmp
and
pop
mov
lods
cmpl
adc
mov
inc
mov
out
xor
cltd
std
clc
aas
cmp
cs
loopne
xchg
jne
movsl
lahf
mov
mov
in
mull
mov
ss
xchg
cmp
ja
gs
or
xchg
or
push
outsl
call
inc
mov
dec
mov
push
dec
cmp
xor
pop
dec
outsb
outsl
jo
into
inc
sub
push
mov
je
rcr
and
leave
and
add
je
aaa
push
pop
cmc
jns
div
cmp
or
neg
mov
sbb
cmp
xlat
sub
sub
enter
into
shll
lock
dec
lahf
mov
test
and
jge
and
xor
shr
fldl
iretw
sbb
outsb
sub
scas
in
dec
adc
or
test
test
testb
aam
or
xchg
inc
add
push
mov
cli
enter
ret
fcoms
mov
inc
push
or
dec
fneni(8087
fucomi
xlat
xchg
xlat
imul
jl
xchg
pop
xor
lds
mov
xor
imulb
push
shll
daa
mov
sbb
cmp
std
in
fimuls
dec
in
leave
jg
stc
fcmovbe
mov
movsl
lea
popf
enter
jl
inc
cmpsl
push
fsubs
and
and
mov
pop
cs
push
adc
push
lret
sub
or
ljmp
imul
addb
push
push
dec
mov
lods
out
dec
push
jge
scas
pop
jmp
inc
push
and
imul
jbe
lea
cmp
jae
mov
inc
xchg
sbbb
inc
jno
les
nop
mov
das
ja
and
mov
jb
jecxz
imul
dec
xor
lahf
insb
in
jecxz
rorb
ds
shrl
js
sub
clc
cli
xchg
rcll
sahf
scas
adcl
in
inc
hlt
movsl
or
rcrb
rcrb
std
imul
mov
lea
addb
or
sbb
fadds
mov
xchg
xchg
out
lock
cmpl
popa
push
sbb
or
imul
lods
loopne
push
push
inc
push
inc
andl
mov
push
add
sti
adc
adc
in
aad
and
sti
aam
rclb
test
popf
and
xor
cmpsb
and
inc
dec
add
dec
ret
loope
jnp
push
mov
sub
in
test
imul
jo
cltd
pop
mov
shll
pop
xchg
ret
pop
or
mov
sbb
popa
cmp
lret
test
nop
out
add
push
xchg
or
cld
mov
add
sti
shrl
dec
in
cmp
jmp
mov
inc
push
xchg
aad
push
shrl
jb
lret
cmc
rorl
fimuls
add
addl
in
and
cmc
sbb
jne
xchg
and
jge
mov
into
das
jns
stos
or
dec
test
jp
call
arpl
sbb
repnz
xchg
call
aam
pop
fimuls
cs
cmp
mov
mov
jnp
cwtl
inc
out
out
xor
shll
daa
std
mov
mov
and
shll
in
fsubrs
lret
clc
dec
repz
aad
xchg
fnsave
leave
push
sub
out
xor
in
push
mov
lds
add
or
mov
push
cmc
mov
dec
in
mov
es
aam
dec
lcall
nop
outsb
jae
cmpsb
subb
jg
or
push
push
call
in
aad
or
mov
push
lock
pop
inc
in
shll
mov
and
sub
mov
inc
popa
mov
lret
sub
and
push
add
xor
aas
dec
xchg
orb
loopne
je
aas
je
inc
lret
lods
out
ffree
xchg
pop
and
cltd
stos
adc
lret
mov
sub
jmp
pop
pusha
stos
and
xor
pop
adc
ret
and
cmp
mov
jne,pt
xchg
call
shr
inc
repz
sbb
repnz
mov
fidivs
shlb
or
test
lret
pop
pop
cli
or
pop
push
cmp
dec
inc
hlt
into
cmp
dec
add
cmp
mov
aam
repnz
adc
popf
or
in
out
nop
mov
dec
jo
std
pusha
bound
inc
imul
scas
out
inc
jmp
inc
outsl
lods
jle
xchg
pushf
js
fdivl
sbb
sub
xchg
and
push
popf
jnp
mov
icebp
imull
mov
in
mov
and
lahf
jne
loopne
dec
jae
hlt
repnz
shll
in
lret
sahf
or
xchg
inc
jne
addr16
movsl
lods
in
xchg
popl
test
jge
out
pop
into
or
scas
add
nop
out
cmpsl
dec
mov
xchg
lret
sub
push
fucomi
daa
sub
push
lahf
in
mov
inc
jb
cmp
shrb
push
negl
xchg
out
cmp
loopne
push
xchg
and
mov
jae
push
xchg
inc
gs
test
mov
pop
pop
out
fildl
mov
inc
dec
fisttps
repnz
push
notl
fs
xchg
fidivrs
cmp
dec
cmp
das
imul
mov
fwait
mov
mov
sarl
outsl
call
cmp
dec
xchg
insl
push
xchg
stc
lock
lea
add
inc
pop
adc
mov
shll
jmp
js
inc
movsb
cmp
pop
push
or
pop
pop
repz
das
pop
repz
in
loopne
inc
mov
push
xchg
dec
push
cmp
pop
divl
call
sti
pop
or
sub
pushf
pop
ljmp
inc
mov
bound
pop
sbb
repnz
add
lret
enter
pop
add
into
je
daa
mov
inc
sub
jmp
shrb
push
jnp
mov
sti
loopne
adc
leave
mov
test
push
mov
out
mov
jae
popl
push
insl
cmpsb
mov
loopne
sub
add
cwtl
mov
sahf
inc
jp
scas
mov
mov
mov
in
fisubrl
ss
xchg
jp
daa
shll
add
aad
mov
push
jbe
inc
jge
cmc
jns
repnz
pop
fisubrl
ror
and
jle
mov
pop
mov
xchg
sbb
cmp
imul
inc
xlat
mov
sub
das
movsl
adc
add
out
cltd
jg
shll
adc
mov
into
nop
int
int
dec
xchg
push
ret
jl
cmpsl
je
in
fcmovu
clc
mov
jnp
jl
push
pop
test
mov
mov
push
hlt
enter
loopne
subb
lea
dec
cmp
push
mov
pop
outsl
sub
push
inc
mov
inc
jbe
push
pusha
aam
nop
clc
aaa
cmp
xor
add
dec
in
daa
sarb
pusha
mov
sub
push
sbb
int3
in
inc
loope
push
arpl
stos
invlpg
inc
int3
add
cmp
in
jne
cmp
push
pop
or
add
arpl
mov
mov
xchg
loope
lods
push
cmp
adc
cmpsl
rclb
insb
bound
lea
xchg
enter
pop
pop
outsb
sub
push
cmc
mov
pop
mov
xchg
mov
and
mov
inc
fimull
pop
push
mov
or
mov
cmp
jno
mov
cmpsl
mov
sbb
and
inc
mov
jbe
cmp
add
inc
xorl
icebp
shlb
pusha
ret
fnstcw
out
add
popf
ret
testb
inc
jp
ds
cmpsb
movsb
aaa
int
inc
push
mov
arpl
dec
push
mov
push
fdivrs
insl
cli
test
push
push
loope
and
push
div
xor
mov
add
jp
lods
in
outsl
fsubrs
cltd
mov
xchg
cmp
mov
adc
pop
pop
sti
pushf
pop
inc
cmp
mul
in
sub
mov
roll
imul
inc
arpl
sahf
push
daa
icebp
fiadds
sub
cs
addr16
xchg
bound
icebp
dec
insl
lret
inc
and
ja
or
mov
in
cmc
or
mov
jae
xchg
jnp
xor
clc
addr16
or
out
addb
out
mov
leave
mov
mov
push
shlb
xchg
stos
gs
adcl
xor
xor
enter
psadbw
negl
pop
mov
or
inc
mov
push
sbb
mov
and
in
push
mov
add
mov
stc
std
mov
cmp
insl
jne
xchg
int
movsl
mov
and
push
cmp
loopne
imul
xchg
sarl
pusha
rcll
mulb
xchg
jbe
xor
mov
aas
push
jge
scas
push
push
adc
shl
in
mov
lcall
mov
shlb
xlat
and
and
sub
xchg
adc
scas
stos
mov
dec
sbb
out
jb
xchg
inc
roll
adc
fs
mov
mov
mov
lods
lods
adc
mov
outsl
cmp
scas
lret
aaa
inc
sbbl
stc
xorl
fsubrp
sub
and
sbb
jns
aas
hlt
lahf
add
cmpsl
inc
sbb
das
je
movsb
fldt
js
cmp
ficomps
in
jbe
xlat
mov
pop
clc
leave
mov
repnz
push
addb
ret
addr16
push
mov
jns
dec
roll
or
pop
call
inc
into
dec
jg
test
dec
xor
xchg
cmp
sbb
add
jo
cmp
mov
cmp
loop
jg
inc
or
lods
cwtl
cs
push
bound
and
add
sub
fiaddl
push
mov
cmpsl
into
dec
add
mov
fs
aas
test
lcall
sbb
stc
jnp
cld
or
out
aaa
outsl
xchg
or
mov
jmp
imul
or
jb
cmpps
mov
ffree
imul
and
xchg
inc
int
dec
leave
fldcw
mov
rcrb
and
or
fnstsw
push
jno
mov
aam
rorb
ljmp
cmp
sub
cmp
pop
xorl
mov
cmpsl
dec
jmp
jle
ret
in
movntq
and
dec
sbbl
imull
mov
out
cmp
sbb
imul
adc
push
pushfw
stc
xlat
pop
xor
push
faddp
mov
and
stos
mov
mov
mov
adc
stos
sbb
and
jmp
out
sbb
sub
popa
push
sbb
jbe
data16
xchg
xchg
pop
push
pop
in
stos
fistps
fidivrl
divl
loope
addr16
and
outsb
rcrb
mov
rolb
xor
inc
mov
sub
daa
fldt
xchg
add
jne
mov
das
leave
pop
cmpsl
and
adcl
cld
pop
xchg
mov
das
mov
pop
sub
adc
and
inc
mov
cmp
lret
sub
dec
mov
push
mov
gs
push
sbb
loope
loop
out
pop
fwait
sbb
push
dec
xor
repnz
in
outsl
mov
clc
outsb
and
pop
in
add
addr16
decb
sub
sti
dec
inc
add
sbb
scas
sbb
je
fs
add
xor
test
imul
sti
fidivrs
push
inc
sub
sub
cmpsb
mov
in
ds
xchg
inc
aaa
test
test
inc
lods
or
mov
lcall
insb
cmc
es
sub
mov
lea
jnp
sarl
stos
aaa
xor
mov
jge
mulb
cmp
mov
xlat
mov
xor
push
ret
jno
mov
fldt
jno
mov
jecxz
cmpb
mov
sbb
rolb
lahf
loop
add
iret
jp
dec
insb
mov
add
xchg
or
es
leave
adc
dec
jne
fld
divl
push
cmc
or
scas
lock
cmp
out
pop
mov
push
ds
mov
stos
dec
movsb
rorl
dec
pop
inc
movsb
sbb
addr16
sahf
std
xor
mov
mov
ror
mov
push
imul
xor
xchg
in
dec
push
add
jnp
fsubs
adc
or
inc
fs
pop
sub
pop
arpl
push
push
arpl
aam
cmp
mov
and
push
push
divb
and
add
enter
je
xchg
jmp
cmpsl
enter
dec
movsb
mov
pop
fldenv
stc
inc
pop
jnp
ljmp
and
dec
icebp
xchg
push
xor
cwtl
pop
push
adcb
adc
jge
repnz
add
gs
sub
push
push
fsubrp
push
andl
cmp
dec
mov
into
sbb
outsl
test
repz
int3
cmc
adc
loopne
jl
shll
mov
lds
divps
mov
and
mov
dec
stos
popf
mov
mov
shlb
cmp
jnp
pusha
xor
jecxz
insb
and
lahf
hlt
pop
insb
fwait
jp
imul
rorl
dec
lahf
repz
mov
and
inc
mov
jmp
maxps
into
mov
subb
lret
push
bound
xor
lcall
daa
push
push
les
sbb
movsl
in
inc
test
lret
add
popf
imul
or
jns
sub
in
push
movsb
fstpt
adc
dec
dec
fstpl
scas
xor
in
repnz
loopne
mov
rclb
push
test
daa
fsqrt
leave
rcr
iret
mov
shrb
sbb
fstpl
fisubrl
xor
repnz
imul
repz
out
or
fistpl
cltd
popa
aam
shrb
sbb
lods
test
and
jae
and
mov
sbb
mov
cmc
inc
imul
loope
mov
sbb
test
jne
aam
and
push
lods
jb
cmp
or
out
out
in
arpl
and
or
cmc
adc
push
aaa
mov
loopne
ret
iret
mov
add
lret
lea
mov
les
frstor
dec
leave
xchg
sub
sub
push
int
rorl
adc
pop
inc
mov
or
fs
lahf
pop
mov
cld
push
jb
mov
divb
aam
movsl
mov
inc
pop
outsb
arpl
lods
loope
jbe
hlt
jno
cwtl
loopne
dec
cmp
leave
mov
icebp
scas
pushf
popa
mov
rcrb
xor
or
nop
insb
data16
loope
inc
fldt
and
ret
aas
pop
add
movsl
pusha
js
push
out
inc
push
mov
repz
out
cmp
cvtps2pd
inc
xor
test
and
js
adc
mov
mov
jle
rolb
inc
mov
aam
fidivs
xchg
push
popf
aam
daa
sbb
dec
and
lahf
imul
aad
xchg
lret
inc
into
add
stos
push
push
add
cmp
fiaddl
rolb
call
mov
aam
repz
repnz
mov
inc
xor
fistps
adc
inc
push
test
lea
cmp
xchg
xor
gs
mov
and
sub
cmp
sahf
pop
pop
xor
cltd
lds
push
lea
js
push
fstpt
push
dec
and
ljmp
and
out
mov
pop
roll
and
pop
in
imull
test
pop
push
movsl
loopne
jb
jno
rcll
in
and
es
mov
lcall
or
xchg
sbbl
cmp
out
ja
mov
shll
sarl
or
sub
arpl
cltd
inc
mov
les
test
adc
cmp
mov
mov
dec
sar
call
mov
mov
and
pusha
dec
aaa
aad
mov
inc
fadd
lret
das
sbbl
jno
cmp
dec
mov
cli
mov
lret
xchg
cmc
orl
push
hlt
push
cmp
jecxz
add
dec
mov
in
xor
andl
pop
in
lcall
int
or
lret
mov
jge
scas
call
cmc
mov
inc
dec
mov
lods
push
add
out
bound
sub
mov
mov
stos
fcompl
insb
adc
js
jae
add
negl
adc
cwtl
popf
outsb
test
pop
inc
outsl
xor
cmp
lahf
cmp
cmp
repnz
push
mov
fadds
mov
jl
jl
jno
call
lret
test
and
push
mov
push
push
shrb
repz
xchg
mov
popf
or
dec
inc
pop
inc
icebp
mov
sahf
stos
mov
xchg
add
mov
pop
fildl
scas
into
pop
outsb
cmc
call
arpl
jae
add
adc
mov
xor
jne
lock
es
imull
push
cmpsb
mov
test
rcrl
stos
lods
push
fsubs
inc
nop
in
ficomps
into
jne
dec
inc
add
scas
or
in
in
loop
pop
mov
sbb
pop
leave
push
jg
adc
push
cld
cmp
stc
lock
inc
nop
inc
imulb
jb
ja
mov
mov
xchg
cwtl
ljmp
pop
push
pop
imul
cmc
jg
dec
mov
add
test
hlt
pusha
mov
pushf
lods
ljmp
hlt
fmuls
dec
push
and
mov
add
cmpsb
jecxz
xchg
pop
dec
sbb
push
lods
mov
xchg
xor
rclb
push
arpl
add
cmpsb
sti
sub
rorb
js
std
mov
cmp
fidivl
shll
xor
aaa
dec
mov
jecxz
jo
dec
cmovae
push
dec
pushf
pop
push
jb
lcall
aas
movsl
cwtl
jl
pop
mov
and
decb
imul
insb
pop
mov
push
mov
inc
arpl
pop
stos
dec
arpl
lods
and
ljmp
dec
bound
leave
inc
imul
add
add
std
call
lret
mov
dec
and
pop
rcl
les
push
mov
sub
mov
fidivl
andl
les
mov
jle
jnp
out
decb
lods
pushl
adc
cltd
dec
rorl
sbb
arpl
mov
inc
lcall
in
mov
or
xchg
or
cmpsl
cmp
mov
negb
dec
sti
std
cwtl
dec
pop
cmp
mov
sbb
cmpsb
call
sub
test
sbb
movsb
sarl
stc
inc
pop
fs
xor
inc
adc
ljmp
push
adc
sub
into
imul
push
or
inc
adc
stos
add
cmp
jl
sahf
add
cmp
inc
daa
or
mov
mov
or
int3
mov
cmp
cmpsb
loope
and
enter
cld
jns
jns
mov
addr16
cs
mov
divl
addl
mov
mul
ret
xchg
out
sbb
push
sub
in
add
into
or
cmp
pop
cmp
adc
cmpsb
pop
jb
je
cmp
jno
and
mov
pop
jae
push
or
cltd
xchg
xchg
fmul
xor
mov
adc
mov
bound
fsubrs
cmpsl
daa
sbb
mov
adc
mov
inc
xchg
sbb
xchg
lds
push
sub
xor
jmp
scas
cli
std
sub
jns
adc
xor
rcrl
adc
mov
mov
add
jl
test
and
or
lods
notb
pop
mov
in
mov
insb
aas
aaa
or
imul
jmp
adc
sub
cmp
orl
pop
inc
sub
inc
xchg
stc
pop
push
sahf
inc
enter
add
rorb
inc
nop
je
push
aaa
mov
inc
lahf
or
mov
insb
insl
inc
or
push
or
rol
jnp
sbb
lock
insl
mov
push
jo
jge
mov
fistps
faddl
mov
pop
fcoml
fsub
add
pop
lds
lret
jl
ret
add
mov
in
fdivrp
cmc
stos
mov
pop
fstps
mov
in
cltd
dec
mov
sub
add
fistl
jp
mov
add
les
fidivrl
dec
or
sbb
lcall
push
out
push
and
call
push
mov
sbb
fdivrs
out
xchg
dec
push
in
popf
push
or
mov
divl
aaa
not
push
cmp
into
rcrl
cwtl
and
test
sub
push
push
jp
mov
cmp
cmc
xchg
add
push
mov
inc
jp
cmp
shl
push
lods
int3
lock
push
pop
inc
js
aas
cmp
mov
mov
cld
mov
pop
pop
test
scas
mov
sbb
imul
dec
sarl
push
loope
leave
dec
sub
adc
adc
jbe
mov
and
sub
pop
adc
andb
or
and
in
lahf
push
add
and
neg
nop
mov
lods
fucomp
xchg
fcmove
jns
sub
out
das
dec
outsb
add
inc
inc
arpl
dec
fisubrl
sbb
cltd
sub
sbb
cwtl
rorb
jne
and
adcb
mov
scas
add
out
sub
xchg
popa
es
or
loope
or
int3
adc
lods
inc
or
cs
pop
cmp
sub
xchg
nop
insl
pop
pop
xor
hlt
jns
adc
fs
dec
ficoml
add
cmp
shrb
and
jp
mov
push
sbb
inc
sbb
fbstp
pop
mov
mov
in
bound
push
xor
xchg
mov
fidivl
cmp
jne
xor
mov
out
data16
and
decl
hlt
push
xor
sub
xor
imul
jno
imul
inc
sub
cmc
cmp
sub
xchg
mov
icebp
stos
sub
adc
push
jo
lret
leave
aas
sbb
jbe
out
or
cmpsl
mov
jmp
fimuls
add
xchg
sub
adc
jb
mov
mov
bound
push
pop
sub
mov
outsl
sbb
cmp
cmpsl
xor
nop
pop
popl
addb
adc
mov
mov
add
lcall
fs
mov
enter
fcmovu
test
das
mov
mov
mov
dec
mov
mov
add
jnp
outsl
pop
out
bound
jnp
dec
pop
stc
lock
inc
xchg
jp
lcall
xchg
xchg
push
rorb
in
push
frstor
sbb
mov
arpl
sub
in
imul
adc
outsl
pop
fidivs
data16
mov
sahf
jnp
rcrl
push
movsl
addb
in
imulb
xchg
add
call
ret
aas
push
and
mov
ret
sti
loope
nop
dec
cmc
pop
push
mov
jg
imul
sub
jl
lods
cmp
test
xor
inc
push
sub
scas
dec
cmp
imul
aad
insl
test
pop
loop
cmpsl
sbb
inc
cmp
xchg
popf
ljmp
out
sbb
das
mov
mov
xchg
dec
pop
and
mov
dec
fdivr
or
jl
dec
pop
jns
cmp
movsl
inc
jmp
test
pop
and
sbb
lret
movsb
jae
fstpl
push
and
neg
sbb
jns
pop
outsb
mov
mov
fimull
cmc
add
sbb
push
insl
jecxz
fimuls
push
sbb
xor
jno
aaa
xchg
push
shll
pusha
push
xchg
push
shrb
and
xchg
jb
outsl
push
pop
add
inc
imul
daa
bound
scas
jmp
sub
mov
mov
mov
fildll
mov
icebp
test
fldl
shll
sub
add
pusha
sahf
mov
decb
cmp
jge
std
movsl
inc
xchg
stos
es
or
pushf
jl
push
rorb
cmpsb
xchg
pop
insb
xchg
shll
test
loop
bound
inc
push
leave
pop
es
loope
loope
mov
jp
xlat
pop
int
pause
movsb
hlt
xchg
int
mov
pushf
nop
lcall
or
push
rolb
xor
shll
sti
jnp
dec
pop
adc
mov
sub
sti
test
fwait
pop
movsl
add
fiadds
scas
push
in
fisubrl
pop
test
jle
sbb
mov
jbe
pop
push
testb
sbb
fldenv
fdivrs
je
test
xchg
jne
mov
leave
mov
mov
test
xor
fwait
nop
inc
sub
cmpsl
adc
clc
mov
mov
xor
push
inc
mov
mov
cli
std
dec
add
test
lret
or
sub
inc
jmp
inc
cmp
sbb
ss
int
sub
cmp
inc
jne
stos
mov
insl
or
push
fmulp
push
xor
inc
xacquire
and
pop
iret
cmp
sbb
lods
sub
ret
and
xchg
jns
aad
pop
xchg
or
xchg
cmp
in
in
lret
xor
jmp
gs
push
dec
push
out
shrl
imul
xchg
push
test
loop
mov
mov
aaa
sbb
popa
out
int
xor
out
pop
push
xor
or
sbb
in
dec
xor
cmp
adc
dec
test
outsl
stc
imul
inc
movsl
inc
xchg
ds
or
ret
and
test
fiaddl
repz
jmp
lcall
es
sbb
aad
idivb
dec
mov
ss
cmpsb
imul
decb
dec
cmp
nop
aam
add
mov
imul
lods
ss
jge
or
xor
and
mov
std
call
js
inc
push
in
mov
mov
push
pop
mov
rcrl
hlt
mov
inc
scas
mov
rorb
and
or
and
int3
jmp
loopne
jb
mov
pop
lahf
or
or
sbb
push
out
push
mov
push
cmp
jbe
mov
push
sbb
pushf
push
cld
push
xor
pop
cmpl
stos
and
fnstenv
cld
dec
pop
jg
fimuls
in
mov
dec
jae
inc
jns
pop
sbb
adc
xchg
sbb
arpl
sbb
mov
push
jo
mov
fnstenv
aam
mov
sbb
cli
lods
mov
out
dec
hlt
hlt
push
push
pushf
or
mov
or
mov
scas
ret
dec
add
mov
dec
int3
nop
call
sbb
add
sahf
push
jb
std
push
jae
std
mov
push
cmp
mov
arpl
imul
arpl
bound
repz
cld
pop
jae
nop
inc
inc
pop
jl
xchg
out
movsl
mov
xchg
xchg
push
sub
aad
shll
in
cli
inc
mov
cmp
lds
pop
mov
daa
data16
jo
jle
or
adc
xor
call
pushl
scas
mov
nop
ds
and
xor
mov
pop
nopl
leave
and
cli
lret
pop
sbb
movsb
and
xchg
mov
add
add
cmpsb
cmp
sbb
dec
fsubrs
mov
dec
push
pusha
adc
push
sti
adc
push
data16
push
sti
fimull
add
sub
in
cli
mov
imul
adc
aaa
data16
or
fs
mov
xchg
popa
pop
add
xlat
dec
je
stos
cmp
push
or
xor
or
adc
jno
sar
ljmp
les
mov
add
imulb
sbb
inc
cmp
filds
mov
mov
sbb
sub
or
mov
jne
rorb
popf
test
js
lods
mov
push
pop
addl
nop
adc
sub
pop
mov
cmpsl
call
xchg
stc
int
sbb
shr
cmpsl
sti
lock
in
pop
in
sub
cmpsb
mov
dec
sub
sbb
lea
into
add
sbb
cld
xor
call
dec
lock
jae
mov
out
idivl
test
xor
les
xchg
xor
call
ljmp
cmc
cltd
mov
ja
xchg
inc
hlt
das
pop
cwtl
test
cmp
mov
mov
or
mov
mov
jle
xor
xchg
loop
in
jl
sti
inc
mov
aaa
mov
testl
jbe
mov
loope
adc
xchg
inc
pop
imul
aad
cmc
std
mov
shrb
inc
xchg
sub
out
call
inc
push
mov
into
xchg
clc
cmpsb
mov
cs
jne
jmp
repz
enter
adc
or
in
dec
clc
push
sti
out
dec
cwtl
pushf
scas
in
sahf
xor
fdivs
mov
in
inc
fwait
mov
mov
in
mov
add
scas
call
inc
in
inc
mov
subb
xchg
jne
xor
arpl
js
in
sbbb
mov
sub
subb
and
xchg
fistpll
or
cmp
mov
cmp
shl
mov
lds
xchg
jp
push
xchg
imul
lahf
push
out
sub
iret
int
mov
jmp
ret
cmpl
mov
fwait
push
jle
out
mov
xor
out
add
lods
jmp
nop
mov
scas
and
divl
cmc
std
mov
xchg
std
rcr
shll
pop
pop
les
adc
push
stos
repnz
lds
mov
xor
stos
jb
mov
add
scas
cmp
jmp
mov
and
mov
pop
mov
jo
popf
or
pop
jmp
stos
in
stos
test
std
or
xor
add
push
loop
sbb
out
dec
fsubr
jle
scas
cmp
popf
xorb
pop
xor
mov
xor
iret
push
test
jp
dec
rcll
stos
sbb
fstps
dec
xlat
dec
pushf
lea
mov
adc
sbb
les
rcr
lods
shlb
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
push
adc
sub
add
mov
add
addb
add
add
add
enter
sub
or
and
add
add
add
lock
addb
add
add
add
or
add
in
or
add
add
and
add
add
add
arpl
mov
dec
es
jae
loop
xchg
mov
sbb
pop
mov
adc
ss
mov
add
push
inc
jno
or
rolb
lds
mov
leave
in
cmp
ret
xor
push
popf
out
mov
and
sub
mov
rol
cltd
mov
or
lds
js
add
pop
adc
and
or
add
mov
pushf
xchg
xor
cmpsl
and
loope
fsubp
sti
cltd
lret
outsb
repz
shrb
addl
aaa
mov
test
icebp
ljmp
mov
sub
push
or
insl
jl
mov
sbb
adc
movsb
shlb
xchg
cmpsl
push
.byte
or
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
or
pop
call
mov
es
mov
cmpb
or
push
inc
sub
scas
dec
fsub
pop
push
mov
pop
add
mov
push
mov
pop
sub
mov
jge
add
add
push
push
call
ret
inc
jns
pop
insb
xor
stos
sbbb
fwait
sahf
fmull
push
push
ja
mov
pop
popl
add
sub
adc
add
dec
jne
call
call
cmp
jle
sub
mov
jbe
movswl
pop
xor
popf
subl
and
sbb
and
lock
nop
cmp
and
testl
xor
cmpsb
sbb
jo
pop
shlb
push
sbb
rclb
flds
mov
lret
in
pop
jo
daa
in
pop
add
arpl
icebp
roll
mov
pusha
jmp
sbb
sahf
aaa
push
sub
in
arpl
icebp
shufps
movsb
push
jmp
icebp
out
aam
movsb
add
jmp
es
sbb
jo
push
or
std
add
inc
popf
sbb
xchg
ret
jg
mov
in
int
xor
leave
inc
pushf
ljmp
push
push
mov
pop
jge
pop
mov
rcrb
jp
pop
push
mov
insl
and
xor
mov
jbe
adc
adc
push
mov
pushw
mov
and
jbe
cmp
push
push
mov
fs
setae
pop
jl
cmp
iret
dec
imul
sbb
sbb
xchg
stc
mov
pop
pop
cwtl
lods
xchg
cld
shufps
xchg
mov
loope
push
jg
or
in
lods
xor
mov
out
aaa
cmp
mov
icebp
mov
add
pushf
mov
sar
mov
rcll
imul
test
orb
or
repz
add
push
inc
adc
daa
xchg
lahf
xchg
xchg
jmp
outsl
imul
sbbb
jmp
data16
sub
bound
cmp
ret
mov
xchg
insb
lds
lods
mov
out
lods
xor
fisttpl
inc
mov
inc
adc
add
sti
jl
or
cld
inc
xor
adc
pop
adc
roll
test
dec
ror
pushf
push
push
or
or
incl
cmp
xor
adcl
out
push
push
out
mov
fcoms
sub
psllq
pop
sbb
push
and
aam
in
fidivrs
inc
xlat
test
push
repnz
sub
loopne
push
repz
cli
mov
movaps
mov
dec
aaa
imul
push
pusha
lock
jnp
xlat
lahf
xchg
test
rorb
pop
sarb
adc
loopne
in
rclb
pop
out
add
adc
fisttpl
aad
xchg
sub
or
lods
pop
rorb
imul
jmp
shr
data16
bound
in
adc
cmc
mov
cltd
pop
in
lds
push
insl
push
xlat
insl
adc
bound
pop
movsb
stc
mov
mov
in
mov
pop
or
mov
in
enter
lds
xor
in
mov
adc
enter
in
inc
pop
in
inc
pop
jmp
repnz
out
aaa
or
adc
in
xchg
sbb
bound
pop
in
cmp
iret
and
pop
in
in
rclb
dec
add
pushf
orl
bound
and
inc
daa
in
movsb
or
inc
pop
out
movsb
mov
push
xlat
test
in
shrb
filds
in
aad
insb
push
lcall
repnz
pop
pop
xor
in
sbb
pop
out
sbb
bound
pop
push
xlat
push
xor
inc
sahf
pop
scas
dec
pop
in
xlat
push
sbb
xor
in
mov
call
bound
and
mov
int3
int
mov
push
repnz
pop
push
xchg
sub
in
mov
dec
mov
inc
int3
mov
bound
mov
push
inc
pop
dec
xchg
jecxz
fcmove
filds
lahf
rorl
test
in
aad
dec
mov
pop
in
shrb
sbb
xchg
mov
pop
push
push
rclb
xchg
cltd
mov
in
pop
pop
jmp
fcompl
in
xlat
fistl
in
mov
ror
xchg
sbb
bound
out
sbb
out
in
lahf
or
in
sar
inc
xchg
in
sbb
add
sahf
ret
in
inc
aas
in
inc
pop
mov
bound
in
sarb
int
sbb
sbb
rcrl
push
inc
sub
and
mov
inc
push
sti
pop
movsb
push
push
inc
sub
and
cwtl
andb
fisubs
adc
pop
sub
xchg
ret
cwtl
adc
xchg
adc
in
push
mov
sub
sub
and
xlat
mov
int3
fwait
insb
dec
pop
pop
rolb
pop
in
inc
jmp
adc
movsb
push
push
inc
sub
and
shlb
lods
fistpl
jmp
adc
xchg
push
push
inc
sub
and
rolb
mov
insl
add
movsb
int3
pusha
lcall
dec
jp
push
in
inc
sbb
cwtl
adc
xchg
sub
in
push
mov
dec
data16
inc
dec
in
clc
xor
test
push
add
mov
xor
in
insl
jno
movsb
int3
pusha
aad
dec
mov
enter
rol
add
or
int3
pusha
add
xlat
insb
push
or
arpl
inc
mov
lods
add
or
int
add
call
dec
mov
pusha
repz
int3
push
inc
pop
in
rclb
insl
pop
in
movsb
adc
bound
push
in
sbb
add
in
int
in
inc
mov
and
dec
outsl
fsubr
xchg
sbb
bound
xor
iret
mov
jecxz
inc
mov
jecxz
inc
mov
sub
xchg
arpl
xchg
dec
filds
in
shlb
jnp
jns
jae
mov
inc
pop
pop
mov
add
cmp
fsts
imul
pusha
les
add
jecxz
xor
rcll
jp
jecxz
inc
sbb
jmp
repz
imul
cs
xlat
mov
pop
push
mov
sbb
aaa
add
dec
insb
jns
push
mov
adc
inc
test
xor
adc
pop
in
inc
pop
in
inc
pop
in
inc
pop
in
inc
pop
in
inc
pop
in
inc
pop
in
push
adc
add
sbb
lods
or
adc
bound
in
inc
pop
in
inc
pop
in
inc
pop
in
inc
pop
in
inc
sbb
in
inc
pop
in
inc
pop
in
inc
pop
in
fiadds
jl
lock
lock
dec
incb
add
insb
test
adc
jle
pop
sub
pop
out
sbb
movsl
xchg
add
es
dec
sbbl
pop
fimuls
je
pop
ja
push
pop
jmp
sub
xchg
sarl
lret
jecxz
clc
in
sub
jle
ja
cld
and
rcrb
insb
lods
mov
leave
pop
xor
in
mov
imul
arpl
adc
mov
adc
sub
hlt
std
mov
xor
sbb
jle
dec
leave
mov
mov
sbb
pop
xchg
pop
cmpsl
push
std
sbb
pop
fs
jmp
sub
sbb
int3
bound
std
pushf
loopne
push
leave
cli
jp
jbe
push
stos
adc
sbb
jle
repz
sbb
pop
popa
mov
push
mul
stos
test
mov
push
cmp
dec
jl
mov
sub
inc
mov
and
test
xchg
pop
cmp
int
fsubr
int3
repnz
sbb
nop
test
dec
cmpl
xchg
out
ds
insb
sub
xor
jb
ja
cmp
nop
add
jae
xchg
scas
pop
clc
dec
movb
fidivrl
inc
pop
mov
push
inc
and
cltd
stc
lock
ds
mov
xlat
mov
dec
adc
jmp
mov
sub
enter
sbb
mov
sbb
pusha
imul
sbb
fsubrl
sub
inc
mov
out
inc
cmp
jle
decb
insb
xor
js
dec
lods
adc
dec
xchg
jp
sbb
sub
mov
andl
sub
dec
sub
jge
cltd
pop
rclb
mov
mov
cmp
mov
adc
pop
dec
daa
inc
arpl
adc
shl
sub
xchg
les
jb
lods
test
xorb
fiadds
pusha
lock
fldt
sbb
repnz
jl
mov
repnz
cwtl
and
bound
jns
mov
mov
pop
ja
out
out
cld
sub
sub
push
lret
mov
scas
mov
sbbl
inc
outsb
or
xchg
loopne
xor
gs
mov
push
dec
mov
adc
cwtl
nop
pop
insl
push
xlat
push
arpl
inc
pop
cmp
xchg
adc
cs
fcomps
rdmsr
aad
rcrl
std
xchg
je
insl
loop
push
addr16
cmp
mov
push
les
rclb
es
cmp
pop
cmp
call
int
mov
pushf
movsl
enter
add
in
jb
rcrb
push
add
add
add
or
add
adc
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
cwtl
or
add
add
add
or
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
add
or
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
ret
subb
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
mov
add
add
add
xlat
xchg
and
inc
inc
in
daa
inc
push
lret
dec
push
and
in
jge
roll
add
addr16
mov
out
popa
pop
add
push
repz
stc
and
jno
push
jno
sbb
cli
xchg
lcall
lahf
inc
mov
inc
jnp
mov
mov
cmp
adc
sar
aas
shll
jb
pop
loopne
aad
sub
outsl
cltd
lea
ffreep
loope
std
adc
mov
mov
jle
dec
insl
jge
fiadds
xchg
pop
out
mov
mov
sub
xchg
xor
mov
loop
xchg
mov
jo
mov
addr16
ja
push
into
lods
int3
fsubrs
mov
mov
cwtl
add
push
ret
mov
subl
iret
mov
pop
mov
and
or
cmp
inc
or
test
push
adc
push
fldcw
int
in
fisubrl
fcompl
cld
ljmp
xchg
sti
repz
xchg
cli
pop
inc
sbb
jbe
push
sbb
addb
data16
mov
in
mov
sbb
fists
test
push
js
or
out
pop
loope
into
sbb
data16
push
sub
or
cld
mov
inc
test
ret
push
shlb
jo
or
in
xor
out
xorl
popa
jne
repnz
mov
inc
sbb
pop
add
ds
aaa
inc
or
ret
lret
pop
adc
arpl
fisubl
push
mov
pop
sahf
jp
arpl
mov
push
mov
push
pop
faddl
mov
ljmp
xchg
sti
inc
mov
shrl
aaa
xchg
cmp
adc
inc
or
add
cmp
push
roll
imul
stos
add
push
dec
sbb
lcall
test
xchg
mov
and
inc
in
jb
jp
xor
push
mov
push
aad
sub
jp
push
idivl
out
je
icebp
leave
pop
fistpll
sub
das
jae
mov
pop
sbb
and
test
pushf
outsl
scas
int3
shlb
fidivrs
lods
out
mov
pop
test
adc
scas
mov
or
imul
jecxz
inc
push
mov
adc
push
int3
fs
out
repnz
or
int3
add
insb
cmpsl
pusha
test
in
mov
movsl
fcmovnbe
mov
inc
cmpsb
xchg
cltd
sbb
popa
faddp
cmpsl
mov
xorl
sti
xor
je
movsb
outsb
loope
int
dec
pop
and
pop
cs
xchg
fisubl
cmpsb
mov
push
lock
aad
arpl
jne
fmull
in
cmp
push
mov
inc
aam
adc
arpl
stc
add
inc
fisubrl
vshufps
pushf
pop
stos
adc
mov
and
ja
mov
push
jl
shll
xchg
test
add
push
rorl
jmp
fimuls
stos
in
jmp
inc
adc
cmp
popa
and
fisttps
push
lock
adcl
and
decl
cmc
jno
ja
jl
faddl
loop
mov
inc
mov
sbb
inc
mov
cmpsb
or
ljmp
xorl
fwait
xchg
jbe
insb
lock
std
and
dec
push
or
into
sub
stc
push
ss
push
push
cmp
mov
add
adc
bnd
xor
test
cld
out
in
push
add
dec
dec
xchg
sbb
push
or
out
adc
insl
pop
fistpl
push
mov
mov
mov
fdivrs
cld
add
push
cs
loope
xchg
aaa
mov
push
mov
repz
stos
adc
lods
mov
sarl
arpl
jmp
subb
adc
pop
sbb
cld
push
dec
xchg
sub
lret
les
cmp
jmp
inc
push
call
pop
es
js
dec
jecxz
xchg
cmp
inc
movsb
push
scas
cmc
fwait
int
add
cmp
cltd
sahf
sti
xlat
mov
dec
add
mov
add
sbb
aad
cmp
mov
sti
pusha
sbb
mov
cwtl
and
test
inc
insb
icebp
rclb
hlt
cwtl
imul
test
push
out
mov
sub
ror
mov
xchg
jle
ds
loopne
adc
neg
cmp
lret
mov
stc
xor
mov
mov
clc
out
stc
adc
jl
xchg
add
aad
mov
push
adc
push
dec
scas
movsb
aas
sti
andb
mul
aad
les
add
or
in
int
outsl
mov
mov
pusha
push
cmpsl
adc
or
add
and
mov
jge
add
shll
aad
lods
and
xor
add
ret
aas
pushf
ret
sbb
addr16
or
push
inc
leave
iret
push
adc
sub
mov
sbb
fldenv
pop
lds
ds
mov
aas
mov
jg
pop
cmp
shll
pushf
fsubl
sbb
push
lret
jb
jno
sbb
rolb
stc
or
jb
stos
cli
out
std
clc
cli
out
jg
cmpsb
mov
cmp
test
test
and
cld
popa
cmpsb
add
fidivrs
or
lahf
pop
push
flds
push
scas
sbb
imul
std
andb
out
dec
jl
sub
not
inc
outsl
pop
pop
bound
out
fidivrs
add
dec
aad
movsl
push
pusha
daa
fcoms
movsl
popa
add
movntq
std
outsl
adc
mov
cmpl
cmpsl
js
fldenv
push
inc
xor
in
mov
mov
fildl
push
cmp
mov
cwtl
mov
fmull
in
fnstcw
into
in
rep
mov
ds
sbb
test
dec
stc
dec
add
fucomi
cmc
les
sar
repnz
jns
mov
mov
repz
movsb
pop
pop
dec
xor
scas
jne
sub
gs
mov
rcrl
fucomip
xchg
in
inc
add
leave
xor
pop
popf
outsb
sbb
fisttps
fnop
lock
lods
fnstenv
mulb
adc
mov
and
sub
lods
cwtl
lcall
sub
test
push
cmp
ja
xchg
inc
xchg
popa
mov
iret
mov
inc
and
jns
dec
into
and
in
jno
adc
imul
cmp
cmc
testb
xor
addr16
push
data16
and
mov
mov
int
add
push
pop
hlt
adc
mov
cmp
mov
loopne
aad
or
jecxz
stos
adc
mov
mov
insl
mov
ljmp
cmp
out
scas
daa
cli
popl
inc
jbe
dec
inc
popf
xchg
dec
sbb
xor
lret
imul
test
push
test
gs
and
fimull
cmp
movsl
cmp
mul
rcrl
jg
popa
push
mov
repnz
add
and
mov
adc
bound
jae
pushl
lds
in
stos
mov
jno
add
out
fidivrs
push
es
aaa
pop
mov
xchg
popa
lods
iret
bound
mov
enter
sub
cmp
pop
cld
mov
jp
stc
xchg
lcall
rcl
add
or
mov
jecxz
jmp
lea
push
enter
pop
mov
jl
aaa
ret
mov
lret
fnsave
inc
mov
lds
insb
into
pop
push
cmp
cmp
cmovs
arpl
push
dec
xchg
sub
stos
shll
movb
in
inc
xor
pop
xchg
cmc
fstl
pop
scas
sbb
or
jmp
add
arpl
out
lcall
dec
stos
jge
shll
out
and
sbb
cmp
and
mov
outsb
pop
shr
idivb
push
in
xchg
adc
loopne
nop
fisttps
call
test
outsl
mov
xchg
push
mov
loopne
cmc
negl
jle
cmp
nop
xchg
fdivrl
push
clc
add
mov
loopne
xchg
call
cmp
int3
adc
fs
sarl
dec
ret
aad
lock
insl
sub
push
ljmp
jo
jns
int3
int3
or
shll
add
mov
xor
push
sahf
pop
push
mov
ret
std
or
lea
insl
adc
push
cmp
xchg
outsl
jne
dec
mov
push
mov
add
jp
jb
adc
in
loope
adc
and
int
pop
fldenv
clc
out
adc
rcrl
das
xchg
outsb
std
add
jbe
ret
cmp
dec
mov
les
dec
xchg
add
push
and
sbb
stc
movsl
xchg
fprem
ja
push
mov
and
sbb
dec
ret
out
jb
inc
or
ss
xlat
sbb
icebp
arpl
inc
movsb
pop
adc
push
jg
xchg
mov
sbb
mov
rcrb
test
push
fs
or
cmc
pop
daa
lods
aaa
pop
and
sub
xlat
mov
mov
mov
imulb
sub
pop
jg
dec
in
nop
jl
fsubrl
sbb
cmpsb
stos
push
lds
mov
outsl
not
js
mov
clc
xchg
sub
notl
in
sbb
int
cmp
sbb
lahf
gs
data16
pop
cmp
xor
mov
aaa
mov
push
inc
arpl
push
mov
loop
stos
addr16
fnstenv
lock
mov
xor
popa
rorb
sub
shl
mov
push
mov
jbe
jge
sahf
test
jns
add
jmp
dec
pop
cltd
mov
inc
ret
and
lcall
sub
sbb
ret
cli
inc
pcmpeqd
fldcw
repnz
aaa
pop
jge
jmp
aam
bound
ljmp
insb
int
jp
pop
cmpsb
es
xchg
push
push
out
fldl
out
cmpsb
js
mov
and
pop
mov
push
ret
mov
inc
cwtl
aas
pop
mov
push
out
cmpsl
bound
fists
sti
add
testb
lcall
rcrl
out
mov
inc
or
out
dec
pop
jecxz
sub
imul
mov
mov
push
jnp
xchg
test
fs
clc
rorb
ja
jne
out
das
cmp
push
scas
lahf
in
call
aam
sub
out
and
dec
leave
mov
dec
fucomip
mov
push
add
cmp
ret
pop
movsl
outsb
add
cltd
mov
push
and
sub
mov
adc
in
in
sbb
jecxz
pusha
or
adc
and
and
icebp
ss
or
or
xor
or
mov
adc
mov
hlt
adc
mov
je
push
out
cmp
ljmp
aaa
daa
xor
aaa
xchg
sub
test
sub
nop
xchg
dec
sahf
and
sub
mov
cmc
add
adc
add
mov
xchg
repz
xor
jmp
jge
les
cld
dec
rcrl
lock
out
jne
xchg
jno
push
sbb
push
and
mov
pushf
int3
xchg
push
repnz
stos
mov
loopne
push
frstor
push
mov
cmpsl
ja
sbb
int
or
push
push
xchg
pop
push
popa
and
cmp
cmp
xor
test
cltd
jns
mov
jmp
fcoml
shlb
push
sub
xchg
push
mov
fsts
push
lods
movsl
sub
cmp
hlt
push
test
stos
in
subl
adc
lods
or
insb
cltd
xchg
or
enter
jo
idivb
sub
pusha
das
xchg
xlat
aad
jne
mov
lcall
movsl
ljmp
cmp
outsl
sbb
sbb
cltd
sbb
sub
icebp
iret
mov
mov
sahf
cltd
push
adc
stos
mov
mov
mov
or
mov
dec
dec
dec
adc
lock
cld
and
pop
xor
pop
adc
jne
pop
push
mov
in
or
lret
test
in
and
fldl
scas
lcall
call
movsl
mov
mov
push
scas
lcall
mov
mov
imul
loope
xchg
in
mov
xor
shl
inc
jp
ret
ret
push
or
fildll
mov
aaa
ja
xchg
jp
in
test
mulb
jmp
imul
push
inc
cmp
es
jp
xchg
inc
jg
add
loop
pushw
int3
psubq
out
fadd
jge
out
sbb
int
les
les
mov
mov
scas
imul
add
mov
leave
into
outsb
sahf
pop
sub
adc
jge
push
sarl
stos
scas
sub
iret
add
subb
subl
std
cwtl
test
ret
ljmp
hlt
xlat
outsb
sti
cltd
cmp
fiaddl
mov
adc
jmp
push
inc
dec
fisubrl
sbb
xor
lock
push
pusha
push
inc
jge
or
lods
inc
cmp
or
aaa
add
sub
fwait
lret
ss
cmpsb
clc
or
mov
or
in
inc
iret
adcb
xchg
mov
pop
lods
sub
lds
xor
jge
push
and
idiv
and
ss
cs
jl
int3
add
out
jecxz
scas
rcrl
jle
jmp
es
subb
cltd
mov
sub
push
cmpsl
imul
mov
shll
xor
xchg
jne
inc
jle
test
mov
sub
addb
xor
inc
repz
cs
pusha
adcl
loopew
or
sbb
push
dec
mov
nop
nop
out
adc
std
pop
fistpl
arpl
cs
fmull
pop
and
pop
aam
adc
sti
subb
cmp
pop
pop
incl
cmp
mov
cmp
divb
out
loop
dec
jl
cmp
int
xchg
cmpb
in
and
add
xchg
repz
aas
add
mov
lea
inc
bound
sub
pop
mov
mov
dec
pop
sub
lea
or
fsubrl
scas
testl
aam
inc
test
mov
jnp
push
data16
shlb
mov
add
or
cld
mov
sub
mov
push
es
cmc
fwait
lret
data16
outsb
leave
outsl
pop
xchg
xor
addr16
stos
aam
pop
aaa
arpl
and
je
fmul
xchg
push
dec
jnp
xchg
mov
dec
fs
mov
push
pop
xchg
call
cmp
ds
aam
aas
aas
stc
xchg
cmp
and
std
loope
mov
xchg
mov
sub
sbb
popl
enter
les
lock
lods
mov
mov
lahf
pop
pand
icebp
dec
aad
sbb
mov
add
mov
jmp
push
cmpsb
notb
cli
loop
or
adc
mov
jg
jmp
push
add
out
push
add
ficomps
dec
call
sbbl
inc
addb
into
sbb
mov
scas
ljmp
notl
push
add
fisttpll
mov
dec
mov
xor
aad
loope
mov
cmp
cs
inc
xchg
jns
add
and
xchg
adc
inc
inc
inc
inc
int
stos
xchg
out
push
dec
mov
fcomps
imul
mov
inc
and
push
jp
int
push
in
mov
icebp
lea
sbb
inc
ja
lds
sti
push
add
jae
xchg
xchg
movsl
shlb
or
jo
sub
ja
pop
pop
xchg
in
lods
out
decb
xchg
xchg
fistl
lahf
push
sub
dec
cmp
shll
int3
push
mulb
sahf
ds
leave
mov
test
cmp
mov
sbb
xchg
mov
aam
cmpsb
mov
sub
loop
mov
dec
add
pop
das
xor
sbb
into
lock
mov
leave
mov
pop
iret
aam
xchg
jl
cmp
ds
jns
lret
mov
jnp
sub
sbb
cld
in
mov
in
or
pop
out
cmp
dec
fwait
js
js
mov
fsubl
pop
mov
jp
mov
jbe
lret
test
test
mov
pop
jb
xor
aam
mov
testb
aam
mov
ja
mov
lea
fildll
lahf
gs
data16
ja
cld
adc
out
bound
popf
push
test
sbb
cmp
cld
add
push
cwtl
and
push
insb
sbb
insb
xor
nop
imul
repnz
test
out
pop
imul
sub
rolb
cltd
ret
adc
jno
sub
push
mov
xchg
daa
mov
not
xchg
repz
mov
or
pop
xor
mov
pushf
addr16
cmp
insl
adc
or
cmp
sub
shll
pop
jb
mov
adc
push
add
cltd
xor
jle
adc
ljmp
adc
aam
push
arpl
jle
xor
and
sbb
adc
xor
cli
and
xlat
jbe
jmp
insl
ret
mov
rcr
sti
push
xchg
mov
and
movsl
cmp
in
andl
mov
test
imul
out
push
je
mov
cmpl
xchg
pop
jo
mov
mov
sbbl
push
and
out
push
lret
xchg
xchg
mov
enter
push
outsb
jnp
mov
les
pusha
incl
or
cli
sub
out
mov
dec
and
mov
in
mov
fisttps
mov
cmc
jge
std
sub
addr16
jp
mov
icebp
pop
dec
ffree
and
push
jle
ljmp
cld
xchg
ret
or
int
cmp
add
push
leave
fimuls
sub
test
sbb
inc
jne,pt
cld
mov
popf
mov
dec
cmpsb
mov
ret
xor
cmp
sbb
cmp
or
adc
stc
xor
test
adc
xchg
jo
sarl
pop
or
loope
movsb
arpl
out
call
mov
bound
stos
inc
rclb
xchg
sarb
fisttpll
ss
xchg
dec
stos
mov
push
lcall
clc
insl
inc
push
stos
push
js
xor
fbstp
mov
add
adc
scas
mov
pop
jle
lret
sub
mov
push
cmp
fildll
adc
jp
adc
dec
pop
sub
inc
adc
pop
sbb
es
std
sti
mov
xor
int
or
jg
cltd
mov
js
dec
add
divb
out
mov
in
jae
mov
in
jp
scas
cmp
dec
inc
outsl
movsl
sti
aam
pop
loopne
lods
pushf
out
xchg
mov
jns
ljmp
dec
mov
lahf
repz
mov
fscale
sbb
fsubrl
mov
pop
fldl2t
movl
add
cwtl
daa
sbb
lahf
xchg
push
mov
loopne
lods
out
hlt
scas
shl
cltd
pushf
mov
stos
add
mov
testl
insb
out
cmpsl
inc
pop
xchg
fsub
cmp
mov
lds
add
mov
adc
stos
enter
and
outsl
mov
pop
adc
pop
mov
cmp
xchg
ss
jno
sub
ss
and
jle
cwtl
ss
daa
jle
xchg
sahf
mov
and
sbb
pop
hlt
or
jmp
bound
push
ret
cli
pop
loopne
hlt
sub
adc
cli
sub
je
mov
sbb
mov
loopne
inc
sbb
xor
push
call
and
shl
xchg
sbb
push
je
scas
dec
mov
pop
sub
ret
sahf
pop
mov
call
cmp
and
test
dec
insl
rcrb
shl
cld
popa
dec
and
pop
push
fidivs
xor
out
jp
pause
mov
and
fidivrl
dec
adc
or
mov
xchg
int3
and
jmp
xor
sahf
jge
push
pop
xor
rcrl
fadds
je
mov
mov
mov
dec
aaa
loope
insb
and
repz
sbb
mov
mov
cmpsb
jb
test
mulb
push
xchg
cmp
and
out
pusha
jae
add
test
ret
sub
mov
xor
xchg
scas
jmp
and
push
movsl
fisubs
dec
cmp
mov
add
pop
pop
push
inc
in
loopne
cmc
repz
sarb
sub
jb
xchg
jae
add
mov
test
push
inc
jle
adc
movsl
push
add
mov
add
adc
fcmovbe
loopne
sub
stos
add
mov
or
es
adc
out
pop
icebp
dec
and
xchg
test
inc
and
sarb
pop
fisubrl
and
jg
stos
mov
imul
shll
ds
adc
mov
addb
sub
push
loope
mov
inc
loope
xlat
int
mov
xchg
repz
jp
xchg
pop
pop
mov
callw
es
add
or
lret
push
and
push
in
sub
mov
fisubrl
mov
out
out
aas
test
lahf
jno
pop
dec
jns
push
pop
test
popf
mov
insl
xor
or
xchg
pop
leave
negl
ljmp
fcoml
cmpsl
test
pushf
or
dec
mov
mov
mov
lock
and
push
sbb
xor
aaa
xchg
mov
pop
lods
push
das
xchg
ja
pushf
fcmovne
xchg
call
ljmp
push
push
imul
mov
jbe
icebp
adc
and
sub
testl
ret
int3
imul
hlt
rcll
fwait
fwait
outsb
push
or
cld
pop
mov
or
cmpsb
iret
add
fistl
fucomi
ffree
mov
mov
lcall
mov
dec
dec
int3
pop
ss
lahf
das
in
repnz
dec
push
and
cmp
pop
jmp
les
mov
xchg
or
push
jge
fcompl
dec
imulb
mov
jns
push
dec
stos
inc
and
inc
jecxz
xchg
sub
mov
mov
xchg
out
jbe
dec
mov
loope
cmp
jns
std
pop
das
sbb
aam
addr16
jg
or
mov
jbe
int
inc
mov
stos
jle
mov
mov
out
jg
cmp
xchg
mov
xor
mov
mov
xchg
fldenv
jmp
outsl
cwtl
push
mov
sbb
gs
or
stos
fcoml
mov
cmpsl
repz
xor
add
mov
loopne
pusha
adc
mov
jle
xchg
out
inc
xchg
notl
sub
and
lds
test
hlt
sub
push
mov
mov
dec
ret
daa
sub
push
es
int3
xor
std
outsb
in
pop
push
test
rcrb
subb
je
add
lock
mov
push
mov
test
add
xchg
sub
sub
mov
pop
pop
mov
das
sub
test
arpl
test
pushf
inc
cwtl
push
xchg
stc
sub
jge
xor
jle
fwait
push
and
enter
push
icebp
es
jg
lea
rorb
inc
mov
aad
loope
dec
or
mov
xchg
and
adc
std
ja
fcomps
mov
or
gs
jge
jmp
fwait
pop
dec
lret
stos
cmp
push
paddusw
jns
aaa
add
sbb
add
cmp
lret
and
aad
lcall
testl
movsb
mov
nop
push
sbb
cmp
push
pop
xchg
and
xchg
popf
sub
add
rcrb
loope
fcomip
add
fwait
jecxz
nop
xchg
mov
addr16
int
outsb
cmp
pop
das
xor
mov
sub
cmpsl
cmp
stos
adc
call
inc
sub
test
mov
dec
push
add
mov
jno
push
pusha
or
jl
pop
ljmp
mov
adc
mov
jb
test
adc
mov
mov
mov
pop
pop
stc
fidivl
pop
add
mov
mov
cmp
rolb
lcall
test
je
push
dec
rorl
jg
mov
xlat
mov
mov
xchg
jns
aas
in
xor
cmc
xchg
push
aas
les
lret
sbb
push
and
ja
loop
mov
sub
push
pushf
cmpsl
jb
gs
sbb
in
jle
mov
lock
popa
push
outsl
dec
fsubl
aad
pop
cmpsb
in
jns
mov
in
fs
shlw
faddl
fisttpl
popa
and
push
or
imul
or
mov
enter
xor
mov
pop
add
jns
dec
rolb
push
cmp
add
add
adc
fyl2x
shll
ret
loop
sarb
jno
xchg
xchg
out
fdivl
fisubl
push
pop
inc
loope
cwtl
xor
imul
int
jmp
data16
dec
les
ret
or
stos
cmpsl
xlat
fstpl
xor
add
fnstsw
push
xchg
ffreep
ds
leave
icebp
sqrtps
dec
shll
jns
cmp
pop
mov
or
pop
std
fildl
push
xchg
popf
aas
mov
cmp
cltd
ljmp
in
push
adc
mov
adc
xchg
mov
mov
lret
fcmovnb
inc
inc
fwait
jae
loop
insl
mov
mov
jb
cltd
lcall
inc
dec
and
mov
rcl
xchg
mov
movsb
xchg
leave
xor
jb
push
in
mov
push
je
adc
cmp
sbb
sbb
xchg
movsb
pop
aaa
lds
jl
fcomps
mov
or
sub
adc
jge
pop
xlat
mov
and
ljmp
out
lds
lock
in
mov
nop
pop
adcl
ds
push
fadds
js,pt
jecxz
sarl
faddl
inc
lock
inc
dec
in
repnz
aas
subb
lea
sub
mov
mov
aad
sbbl
jb
inc
dec
cmp
out
xchg
lret
pop
add
sbb
sub
ljmp
stos
mov
push
mov
je
mov
mov
lds
cmp
xchg
iret
jge
xlat
cs
pusha
out
dec
clc
mov
inc
pop
and
dec
out
push
out
out
test
shrl
imul
xchg
loop
popf
and
sub
in
sarb
nop
push
mov
adc
addr16
mov
pushf
or
mov
sub
insl
fwait
sub
call
mov
inc
dec
adc
xchg
pusha
dec
push
fwait
enter
dec
ds
sub
mov
bnd
xchg
jo
push
lods
insb
dec
sarb
mov
pop
xchg
sarl
add
add
jns
xchg
imul
loop
push
ret
inc
frstor
jge
lret
scas
lcall
sti
mov
pop
test
pop
push
addr16
cmpsl
repz
mov
add
test
loope
into
lret
adcl
pop
into
pop
or
push
into
sbb
aas
pop
mov
mov
popa
test
cli
lods
cmp
and
out
xchg
mov
addr16
add
mov
push
sbb
inc
xchg
inc
xlat
aaa
pushf
add
repz
enter
mov
mov
jno
jg
cmp
dec
out
push
js
xlat
test
mov
mov
xchg
pop
cmp
out
mov
xchg
dec
jns,pn
bound
jp
mov
gs
and
push
imul
mov
adc
movlhps
call
ljmp
adc
fstpt
pop
mov
stos
pop
rclb
nop
shll
dec
or
xlat
mov
mov
sbb
ficoms
aas
jg
ficomps
inc
jp
stc
lcall
push
clc
fldl
mov
xor
mov
scas
fidivrl
in
xchg
ja
clc
lret
dec
jb
add
data16
push
sbb
xor
movsl
xchg
scas
mov
mov
or
mov
pop
mov
or
pop
jne
test
jmp
mov
add
cmpsl
xchg
push
mov
rorb
subl
inc
cmp
mov
cmpsl
pop
test
das
mov
icebp
loop
adc
dec
les
lret
xchg
test
mov
mov
mov
mov
pop
mov
push
rclb
or
jmp
xchg
lods
test
xor
add
iret
ja
inc
out
adc
out
pop
or
xchg
shrd
pop
jmp
test
pop
mov
arpl
notl
in
imul
lea
xchg
adc
sub
fimuls
xchg
jo
imul
pop
sbb
clc
imul
imul
fsubl
mov
test
fistl
out
jp
cmp
loope
adc
pop
test
shlb
dec
loope
lahf
cmpb
fildll
mov
lods
popa
push
lcall
xor
adc
call
cli
std
sbb
push
mov
movsb
test
outsb
adc
inc
gs
iret
mov
dec
addr16
mov
cmpsb
clc
fimuls
inc
popa
mov
mov
push
jl
mov
xlat
jg
into
rcl
aas
xchg
jns
push
sub
xchg
mov
sbb
test
inc
pop
xor
popa
pop
adc
and
mov
aaa
jecxz
imul
nop
push
jl
nop
int3
xor
sub
push
sub
xor
adc
test
xchg
test
je
pushf
aas
push
xorb
cmc
push
mov
xor
xlat
add
lods
stos
xchg
jp
fs
cltd
mov
jge
sub
xchg
sub
loope
pop
gs
insb
xchg
or
dec
mov
fdiv
adc
inc
push
shrb
xor
mov
repz
lret
sbbb
sub
jo
outsl
inc
loope
movsl
arpl
adc
invlpg
sbb
xor
pop
lahf
add
in
scas
fbld
mov
das
or
das
sbb
adc
lcall
fisttps
aam
shl
dec
in
xchg
adc
mov
incl
scas
int
std
incb
add
xchg
sbb
and
fidivl
xor
inc
shlb
jns
in
xchg
fwait
and
call
push
mov
dec
xchg
incl
pop
pushf
push
inc
adc
sbb
push
mov
and
jp
daa
push
imul
ljmp
and
or
pop
mov
sub
and
mov
mov
sahf
xchg
xchg
test
out
ficomps
cmp
scas
jecxz
xor
out
add
cld
push
popf
ret
mov
xchg
inc
jmp
addr16
xchg
dec
jge
inc
xor
out
popl
stos
mov
sub
push
cli
push
scas
jmp
mov
inc
andb
cmp
das
jbe
pop
push
pop
sub
mov
or
fnstcw
scas
inc
out
mov
loopne
xchg
das
jge
pop
add
add
lret
fs
mov
jmp
dec
adc
mov
cwtl
mov
pop
fidivs
pop
into
jb
movsl
xchg
xlat
jb
xchg
push
cmp
xchg
ljmp
or
cmp
add
sahf
xchg
fbstp
inc
faddl
call
push
nop
inc
push
fcomp
adc
add
scas
push
adc
jne
pop
test
cli
cmp
subb
lret
mov
mov
insb
or
fisubl
adc
mov
out
inc
mov
add
jle
cmp
jg
sub
cld
into
and
fcoms
and
push
mov
js
sti
xor
stc
push
cmp
out
negb
inc
dec
pop
and
clc
inc
xchg
xchg
stos
pop
ret
mov
inc
pop
lds
cmpsl
xor
test
xor
mov
out
cmp
int
adc
push
and
ror
add
xor
adc
dec
into
and
mov
jge
fistps
sbb
push
inc
pop
es
dec
cwtl
mov
jne,pn
aam
xor
movsl
xor
enter
bnd
aam
aad
arpl
ja
jecxz
sti
fisubs
jb
xchg
in
pushf
mov
insl
leave
pop
or
push
lea
dec
pop
push
sbb
xchg
add
cs
mov
mov
stos
mov
dec
shrb
arpl
arpl
in
imul
int3
lods
cmpsb
sub
mov
dec
test
bound
loop
cmp
ja
xor
xor
or
mov
in
mov
nop
xchg
mov
arpl
aam
jp
dec
sub
dec
bound
icebp
sbb
mov
push
repz
dec
mov
xor
jl
addr16
mov
mov
aaa
mov
ficoms
fldcw
adc
std
mov
jns
ja
fsubrl
testl
mov
mov
cwtl
xchg
movsb
push
shll
fadds
sbb
pop
push
rcl
xlat
mov
inc
xchg
es
aas
sbb
lea
jmp
stc
push
add
sti
gs
pop
jg
pushf
dec
sub
mov
mov
fisttps
add
mov
mov
pushf
inc
jo
xor
enter
mov
adc
mov
insb
add
sti
add
stc
xor
cwtl
fwait
lahf
out
pop
popf
addl
js
pop
pop
icebp
out
push
xor
mov
xchg
lcall
push
test
stos
pop
sbb
inc
jge
arpl
jb
push
gs
inc
mov
add
je
adc
jbe
pop
sub
lods
lods
or
add
test
scas
mov
push
out
mov
out
mov
sbb
cmp
lret
fmull
mov
bsr
push
fstpl
mov
push
xor
cmp
or
test
ret
cmpsl
xchg
xchg
jno
pusha
rcrb
sub
repnz
lock
popa
sbb
stc
int
aad
dec
in
sti
push
movsb
fimull
popaw
js
sti
icebp
int3
jg
mov
insb
js
xchg
movl
mov
adc
sar
dec
dec
std
jecxz
or
xchg
outsl
loop
shll
xor
fadd
test
repnz
pop
mov
gs
cltd
out
dec
sarb
mov
outsl
in
insl
jns
add
inc
adc
repz
lods
inc
cmp
cld
cmp
shrb
pop
xchg
sub
sti
nop
in
in
imul
inc
pop
push
push
inc
ret
arpl
popa
dec
test
and
xor
or
xchg
enter
outsl
sub
loop
in
sbb
mov
pop
rcr
sub
dec
adc
adc
jno
sub
adc
fs
pop
rorl
adc
mov
loop
jns
mov
ret
jo
xchg
jae
dec
inc
and
sarb
icebp
cmc
iret
hlt
pop
xchg
jnp
in
jo
mov
mul
xchg
les
lret
mov
in
mov
mov
jne
pop
jmp
cld
subb
jg
mov
or
xlat
mov
xchg
cmp
test
addr16
scas
sub
mov
cmp
sbb
pop
mov
out
xor
dec
les
push
dec
jmp
cmpsl
imul
xchg
sbb
xor
test
sub
mov
xchg
jne
fbld
jae
les
lds
adc
out
mov
ret
sbb
jbe
adc
pop
jl
inc
inc
mov
add
cmpsb
add
int
xchg
ljmp
dec
jg
imul
inc
mov
sbbl
gs
js
sub
push
js
stc
xchg
rol
xchg
xchg
adc
xor
arpl
or
dec
pushf
jno
add
xor
insb
xchg
jge
iret
jbe
das
mov
test
sbb
stc
sbb
orl
shrl
push
rorl
push
inc
movsb
xor
and
pop
pop
ja
cmp
ja
sbb
bound
fwait
adc
cmovno
aaa
data16
mov
and
pop
insl
mov
test
adc
push
dec
push
push
in
cli
idivb
add
fwait
pop
push
loop
lahf
and
push
repz
scas
sub
repz
push
pushf
xchg
enter
mov
test
ss
push
in
adc
mov
loope
xchg
sbb
repnz
in
into
iret
notb
or
fldt
fstl
nop
push
clc
cltd
pop
int
ret
cli
fadds
mov
flds
in
leave
adc
loope
lea
mov
sub
push
sbb
sub
mov
inc
mov
jle
xor
or
or
sete
cli
stc
mov
dec
sub
call
rcl
xor
lret
push
rorl
outsb
or
into
pop
or
mov
popa
and
push
mov
dec
pushf
daa
mov
outsl
jns
xchg
bound
ja
andl
addr16
mov
lret
add
frstor
loope
inc
imul
lods
push
jmp
rclb
je
mov
in
notl
dec
adc
jle
lods
dec
sahf
and
jg
mov
call
aas
mov
pop
dec
dec
test
hlt
cmp
mov
cmpsl
cmp
stos
pop
sub
mov
scas
jl
sub
xchg
xor
mov
outsb
or
lods
lret
ljmp
mov
sub
xor
and
jge
mov
dec
fdivl
add
sti
sbb
add
jb
scas
and
push
xchg
push
fsubs
sbbb
inc
decl
fcomps
adc
cmp
ja
adc
test
push
les
mov
sbbl
aas
push
mov
lock
mov
cld
adc
in
xchg
test
fstl
push
lahf
or
jle
leave
jl
insb
mov
loope
loope
pop
jl,pn
push
ja
pusha
out
insb
jl
stos
xchg
or
xchg
sti
aad
sbb
adc
gs
scas
xchg
and
add
insl
and
aad
jo
mov
ljmp
ja
xchg
inc
or
fimull
push
sub
inc
dec
ficoml
xor
xor
outsb
sub
cmpsl
jne
inc
jg
mov
mov
int
or
lock
push
mov
mov
pop
sub
mov
xchg
dec
cmc
ljmp
xchg
call
imul
into
std
inc
popa
jle
dec
data16
or
sarb
or
xchg
daa
mov
dec
mov
lret
mov
fsub
fisttpl
cmp
xor
and
pop
cld
xchg
nop
dec
mov
orl
shlb
cmp
andl
dec
mov
jp
lret
fsubr
xor
sub
xchg
mov
jl
lret
or
iret
std
cmp
fbstp
cmp
daa
mov
or
mov
xchg
fildl
fsubp
orl
xlat
stos
bound
enter
jo
push
or
ficompl
into
in
jle
add
lcall
in
rol
xchg
pusha
jnp
andb
lods
add
xlat
xchg
outsl
and
add
and
and
pop
into
push
ffreep
push
cmp
out
and
mov
sub
loope
sub
jmp
out
cmp
pop
hlt
test
insl
test
or
pop
sahf
stc
push
test
test
sbb
xchg
cmc
mov
jb
lcall
rcrb
pop
cltd
sti
aam
lahf
clc
mov
and
inc
stos
outsl
xchg
ss
cmp
mov
sbb
in
sbb
daa
test
xor
ljmp
gs
mov
fs
daa
ljmp
sbb
xor
or
int3
outsb
cli
insb
gs
in
jnp
or
insl
jb
xchg
jo
dec
ljmp
aaa
sub
xor
enter
jp
nop
xorb
xlat
sahf
mov
push
and
int
aaa
or
sbb
imul
mov
jno
fisubs
rclb
pop
clc
mov
ret
push
push
jmp
das
adc
push
daa
lea
roll
test
mov
xchg
arpl
mov
add
mov
or
loop
pop
stc
ds
pop
xor
pusha
add
push
icebp
neg
enter
jb
lea
mov
cmp
or
and
sbb
or
cmpsb
adc
sarl
sbb
xchg
sub
mov
insl
cli
mov
push
pop
xchg
in
sbb
pop
mov
inc
pop
repnz
xchg
popa
lods
imul
cmpsb
sbb
pusha
popa
dec
sub
test
lea
loope
cmp
pminub
pop
dec
adc
xor
jecxz
outsl
stc
inc
xor
push
jecxz
int3
in
cmpl
xchg
push
and
and
xchg
inc
jnp
aam
cmp
dec
adc
loop
jecxz
push
xchg
mov
sti
push
mov
les
sbbl
ficoms
xor
jbe
sbb
sub
mov
lcall
push
cmp
xchg
xchg
dec
sbb
ret
lcall
add
test
or
jb,pn
in
or
mov
mov
jle
pushf
cmp
test
pop
dec
hlt
dec
cld
out
in
adc
xor
hlt
sahf
subl
loop
pop
xor
sahf
std
add
push
and
inc
push
mov
arpl
mov
xchg
dec
into
js
inc
ja
gs
fsts
sub
and
inc
outsb
test
add
xchg
xor
cmp
pop
ja
and
jbe
or
sub
jae
xor
adc
xchg
in
scas
and
mov
leave
mov
ja
dec
cmp
cmp
jns
xor
sbbl
dec
out
dec
add
pop
lock
in
mulb
aam
sub
push
xorb
insb
mov
and
mov
in
movsl
pop
mov
cli
in
sbbl
mov
and
imul
cmc
repz
push
push
cmp
rcrb
add
je
sbb
jo
adc
aas
testl
adc
inc
mov
dec
in
mov
repz
push
push
out
das
mov
inc
cmp
cmpsl
pop
xor
fs
adc
sbb
xor
mov
test
mov
movsb
fnstsw
add
daa
cmp
mov
lret
xor
sbb
xorb
mov
icebp
aaa
ss
dec
mov
sbb
add
lret
fisubl
xchg
adc
into
frstor
enter
dec
jmp
pop
mov
int
mov
inc
outsl
sahf
push
in
xchg
sahf
insb
lds
cltd
sub
or
jge
add
shrb
icebp
push
jp
lahf
lock
out
or
out
cltd
xchg
jge
mov
adc
sub
dec
push
push
mov
sbb
sbb
ret
pop
xchg
sbb
inc
mov
push
shr
ja
stos
mov
jae
aas
les
movsl
aam
outsb
add
mov
in
icebp
icebp
scas
aad
jg
cli
push
mov
pop
in
sub
sbb
jge
testl
stc
and
cmp
mov
xor
xor
shl
cwtl
loopne
shlb
icebp
int3
imull
adc
fwait
and
inc
ss
shrw
mov
push
mov
cmpsl
outsb
add
adc
rol
movsl
xor
xchg
dec
sahf
mov
jecxz
dec
out
std
push
call
outsl
xor
lcall
push
fidivrs
adc
mov
dec
cmovno
les
push
shll
pop
in
dec
lea
pop
out
pop
add
outsb
rcl
mov
jns
inc
cmp
btl
push
cmp
roll
mov
imul
and
adc
jne
cmp
nop
ret
shlb
inc
push
mov
sti
shrb
jns
cwtl
cmp
sub
jae
pushf
lcall
inc
jle
clc
cmp
jbe
hlt
sub
jb
cmp
testb
add
cli
and
das
enter
mov
out
push
push
adc
das
pop
mov
fldt
sbb
pop
dec
fmull
rclb
dec
xor
xor
pop
xchg
push
xchg
mov
std
mov
insb
xor
cmp
push
cltd
dec
cmpsb
aam
in
pop
movsl
or
inc
dec
mull
repnz
or
fs
mov
scas
jg
pop
xchg
push
mov
sbb
push
or
sahf
int
addl
xchg
cmp
mov
std
mov
pop
into
pop
push
mov
cmp
scas
mov
jecxz
rolb
adc
xor
jo
imul
fisttpll
movsb
popf
xor
icebp
out
push
pop
dec
out
cmpsl
jecxz
mov
insb
mov
enter
xor
out
pop
add
lcall
js
adc
mov
jecxz
or
push
sbb
push
ss
jae
xchg
idiv
rol
push
adc
jb,pt
jp
out
inc
jl
cli
cmp
dec
out
inc
lock
int
or
lock
in
cmp
or
test
sbb
push
adc
mov
mov
sbb
jle
daa
ljmp
stos
pop
lds
jl
adc
xor
adc
ljmp
jge
dec
arpl
xor
icebp
bound
add
xchg
scas
inc
cmp
and
xor
push
fsubrl
out
les
andb
jns
jle
adc
fs
pop
cmpsl
push
inc
ja
xchg
pop
push
enter
enter
mov
popa
movsb
lahf
inc
or
xchg
lock
mov
pop
mov
xchg
sbbl
mov
das
loope
jle
stos
aaa
call
sub
cmp
add
sahf
push
adc
adc
lods
dec
orb
icebp
mov
into
scas
loopne
xchg
sti
ret
sbb
sti
adc
data16
push
jbe
mov
es
mov
and
mov
addl
sbb
popf
add
pop
shl
int3
popf
or
dec
push
mov
aaa
imul
sub
jge
push
xor
outsl
mov
fsubrs
fiadds
mov
mov
lret
lods
sbb
jle
mov
bound
mov
cwtl
notb
mov
pop
shr
movsb
add
in
inc
loopne
stos
sbb
mov
pushf
sub
in
test
and
sbb
sbb
aam
cmp
jae
movsb
or
jne
in
cmp
mov
sbb
and
outsb
shlb
out
sbb
icebp
xchg
nop
test
cmp
jo
mov
daa
popf
enter
outsl
imulb
test
mov
and
xor
popa
lods
aas
mov
jne
cld
mov
out
data16
mov
sbbb
jo
repnz
xor
mov
pop
data16
int3
movsb
in
and
dec
shlb
clc
mov
clc
cmp
jl
adc
xchg
xchg
ss
inc
fldl
pop
test
dec
lret
out
mov
cmp
arpl
lcall
inc
xchg
dec
ja
inc
popf
pop
lds
test
shrl
dec
cmpsb
jecxz
mov
sub
push
outsb
cmp
shlb
mov
fnsave
xchg
sbb
inc
je
cmp
sbb
push
jbe,pt
mov
sub
dec
add
je
outsb
stc
adc
fcompl
push
out
lret
adc
fdivs
dec
push
pop
leave
clc
ret
mov
je
cs
lea
imul
repz
clc
and
cs
lret
and
cmp
mov
dec
aad
mov
and
orb
cmpsb
jle
out
inc
adc
clc
aas
mov
jae
sub
adc
jg
lods
fbld
sbb
sahf
out
std
xchg
mov
jb
mov
sub
mov
mov
and
bound
push
pop
mov
sti
push
dec
lcall
scas
push
fidivl
mov
fwait
rcr
or
enter
dec
mov
jae
scas
ja
xchg
xchg
out
cmc
jecxz
and
je
daa
add
push
mov
fcoms
arpl
outsb
xchg
inc
or
aad
cltd
ret
mov
mov
or
xor
pop
fs
lods
clc
fmul
pop
and
mov
ret
xchg
and
mov
sub
idivb
sbb
cmp
pop
jge
sbb
movsb
nop
push
sub
out
les
fs
scas
and
nop
enter
outsl
leave
mov
in
mov
mov
adc
xor
mov
jns
loopne
dec
jb
adc
pop
mov
fstl
xor
cmp
std
insl
mov
daa
jle
push
sbb
inc
adc
mov
pop
mov
enter
mov
cmp
lods
daa
aaa
add
lcall
roll
out
mov
mov
jmp
stos
pop
push
repz
mov
or
pop
xchg
fnstsw
sbb
scas
shlb
pop
ljmp
aad
and
std
nop
adc
xchg
fidivl
push
lods
movsl
ds
outsb
pop
in
pop
nop
pop
inc
fsubr
sub
mov
out
mov
dec
int
jno
imul
sbbl
insl
dec
or
xchg
add
leave
xchg
test
pop
fs
sarl
cwtl
out
out
inc
inc
mov
xchg
and
lcall
ja
mov
nop
fwait
sub
test
jb
lahf
cld
stos
lea
test
les
or
loopne
inc
nop
loopne
iret
imul
test
push
lret
or
ljmp
sub
adc
inc
inc
jle
popf
push
push
dec
dec
js
sbb
add
and
lods
add
pshufw
stos
xor
cmp
push
inc
jnp
shrl
sbb
das
xor
push
lahf
js
mov
leave
ret
mov
das
loop
test
sbb
je
lock
mov
and
sahf
aad
sub
cltd
dec
arpl
aas
mov
call
pop
adc
ja
cmp
xor
cmp
inc
push
das
lods
test
pop
xor
popf
sub
ret
loopne
enter
jmp
adc
sbb
and
adc
cmpsl
cmp
imul
sub
and
imul
pop
mov
sbb
mov
mov
lret
xchg
rclb
ljmp
rclb
dec
xchg
cs
push
cmpsl
psllw
sub
cmc
cmp
hlt
gs
int3
mov
cmpsl
lods
pop
cmc
mov
wbinvd
lock
cmpsb
icebp
mov
and
test
daa
mov
sub
pop
sub
pusha
lods
testl
mov
das
pop
stos
mov
adc
gs
pop
cmpsb
subb
out
adc
pop
add
out
jge
pushf
lret
lds
xor
inc
sbb
shll
push
jns
imul
mov
addr16
mov
mov
ss
jle
inc
ret
sar
lcall
xchg
cmp
fistpll
jle
lods
sub
icebp
push
cmpsb
xchg
sub
pop
out
push
or
loop
jl
sub
rolb
mov
repnz
jns
pop
jecxz
ljmp
and
cmpsb
sub
faddl
cmpsl
cwtl
cmp
or
jp
dec
into
inc
push
in
jo
leave
sbb
aam
fcoms
pop
arpl
mov
fwait
lret
iret
fisttps
dec
cmp
int3
pop
fcmovu
cmp
flds
inc
mov
cwtl
mov
sub
jb
lock
ljmp
icebp
dec
sbbl
cmp
sub
stos
adc
imul
pop
jle
and
pop
mov
or
ljmp
shll
or
adc
lds
adc
fstpt
lods
movsb
pop
mov
int3
incl
cmp
movsb
sub
pop
push
addr16
or
mov
testl
shll
or
xchg
xor
mov
adc
push
mov
xor
jg
aam
std
imul
stos
out
or
je
xor
test
setp
cmp
in
xchg
clc
icebp
rcrb
mov
movsl
mov
dec
add
pop
jnp
push
pusha
mov
mov
rcl
sub
mov
jbe
dec
cmp
adc
pusha
adc
mov
adc
lods
jb
push
dec
imul
cs
lret
push
sub
iret
jmp
cmpl
in
imul
add
mov
clc
inc
popf
inc
xchg
dec
jo
mov
sbb
mov
adc
dec
ds
sti
int
cmp
scas
lods
sbb
cmp
aam
jmp
popf
sbb
mov
sbb
pop
push
int3
and
pop
xor
pop
xor
jp
ja
mov
cli
xchg
fnstsw
xchg
sbb
mov
in
sbb
push
out
cmpsb
push
inc
xor
mov
pop
fistpll
mov
imul
mov
sbb
inc
mov
xlat
pop
inc
mov
insb
push
jne
jecxz,pn
jo
jno
clc
fdivrs
adc
int
popa
dec
out
dec
jnp
insb
jno
sar
push
add
into
lock
cmp
adc
pop
inc
xor
in
xchg
sahf
sub
adc
lahf
cmp
mov
jl
pop
adc
ja
push
fprem
jne
loope
clc
sbb
clc
jl
jp
test
push
jb
jg
mov
ficoms
cmpsb
jo
xchg
inc
pop
out
mov
sbbl
mov
jle
hlt
sarl
aaa
movsl
imul
and
xor
xlat
xor
add
jo
test
adc
inc
xchg
mov
sbb
shl
sbb
sub
repz
mov
adc
outsb
jl
cmpb
cmpl
adc
push
jge
pop
mov
mov
pop
mov
int3
jno
stos
out
push
sub
mov
mov
sbb
cmp
inc
addb
orl
loope
xor
fcoms
cli
push
out
lret
inc
aas
jo
push
adc
mov
in
jge
push
push
mov
movsb
push
call
add
cmp
shlb
loopne
add
mov
mov
push
outsb
xchg
xchg
loope
mov
inc
cld
lret
insb
add
dec
pop
push
mov
xlat
ret
arpl
dec
cmp
pop
idiv
cvtdq2ps
sti
out
fisttps
repnz
jmp
je
jb
cmpb
dec
push
adc
xchg
cli
in
xlat
jge
aad
jnp
jnp
inc
popa
das
mov
lea
je
add
enter
jg
jae
push
popa
iret
rolb
adc
movsl
adc
cli
cltd
out
add
push
fs
cmp
cmpsb
js
mov
outsl
xchg
cs
fmull
aad
mov
dec
xor
aas
lods
inc
mov
loopne
jo
roll
jecxz
add
add
adcb
mov
ficoms
ret
push
dec
adc
mov
out
xchg
incb
inc
pop
mov
sti
sub
in
fistpl
or
repz
js
lcall
loopne
mov
push
repnz
adc
cvtps2pi
add
jns
fdivs
cli
cmpsb
cmpb
mov
jp
loop
push
push
adc
sbb
push
dec
lods
push
jl
cmp
cmpsb
cmp
lock
inc
or
dec
sbb
sub
add
mov
scas
sbb
jmp
jl
mov
jbe
je
xor
mov
jnp
adc
aas
rcll
jge
mov
out
adc
or
cli
je
mov
stos
lea
test
pop
add
cmp
js
mov
jmp
jg
pop
adc
stc
ficoms
jne
rcr
push
xor
mov
pop
mov
es
insb
xchg
dec
imul
scas
int3
and
push
adc
movsb
rcl
sbb
mov
setp
insl
pop
lea
test
flds
jecxz
jp
inc
cli
adc
sub
adc
outsb
mov
mov
push
mov
insb
fstpt
jns
adc
dec
and
jp
cmpsb
lods
jbe
xchg
sub
lock
push
ss
push
or
sbb
scas
dec
xchg
push
fbstp
fmull
out
adc
call
pop
xchg
scas
push
outsl
ficoms
out
daa
inc
mov
adc
or
and
aas
ja
lock
and
lret
add
xchg
pop
mov
sub
add
pusha
mov
adc
add
adc
inc
lret
or
loop
jmp
mov
dec
mov
int3
unpcklps
cwtl
pop
popa
testb
testl
push
push
xchg
popf
add
dec
mov
xchg
xlat
xchg
xchg
cmp
push
sbb
cld
jge
testb
imul
sub
imul
mov
and
mov
test
or
pop
adcb
sbb
jmp
iret
push
pusha
mov
jnp
lods
push
inc
inc
mov
xchg
daa
fldt
scas
pop
insb
mov
and
xchg
push
pop
jo
sub
in
push
ljmp
repnz
testl
sub
ljmp
cmc
ljmp
mov
test
test
sbb
pop
fwait
pop
imul
sbb
sub
xchg
jnp
adc
sahf
pop
in
rolb
and
jns
jle
inc
jb
cs
pop
mov
andl
subl
inc
mov
add
jnp
les
adc
js
mov
lcall
pop
or
sub
fcmovbe
test
add
jno
shr
jge
stc
daa
arpl
mov
frstor
and
adc
aas
fld
adc
adc
or
add
cli
je
gs
cwtl
ds
stos
dec
js
out
ljmp
call
sub
sub
lods
mov
movaps
xchg
add
lret
push
inc
fsubs
sbb
pop
mov
mov
lret
hlt
push
int3
adc
test
clc
arpl
pop
cmc
lea
pop
jmp
rcr
out
nop
insb
pop
imul
push
jp
sub
push
addr16
push
jne
pop
or
add
xor
pop
into
and
outsl
mov
xor
mov
add
inc
cmp
mov
loopne
cld
push
mov
pop
cltd
pop
and
xor
xor
and
into
pop
ja
dec
push
fnstenv
aaa
add
xor
daa
xchg
mov
out
arpl
sbb
pushf
sarl
or
mov
fmul
aad
icebp
or
xor
push
or
loop
repz
shrl
imul
adc
test
mov
mov
mov
mov
ret
daa
cld
xchg
stos
jb
cmp
sbb
dec
leave
lahf
xchg
das
mov
mov
mov
jb
jb
dec
lahf
fdivs
stc
bound
push
adcb
pop
repz
dec
enter
inc
jmp
fstpt
push
data16
jp
mov
cmpsl
lahf
cmp
je
xor
and
sub
les
pop
int
push
or
cli
cmp
mov
add
jnp
shr
mov
ljmp
movsb
xchg
imul
dec
sbbb
cli
push
out
sbbb
dec
sahf
roll
aas
push
xlat
lods
arpl
xchg
add
or
nop
add
adc
ret
mov
inc
std
inc
lods
push
fildl
add
lea
jae
mov
dec
add
cltd
mov
jl
insb
pop
push
add
pop
and
test
ret
orb
or
sbbl
add
xor
mov
cld
in
jecxz
jne
sub
jecxz
cmp
cmp
sub
outsl
and
jne
ja
in
lods
pushl
shl
xchg
clc
dec
mov
iret
cld
out
mov
dec
sti
jne
repz
shl
test
lods
mov
xchg
and
and
adc
test
inc
test
mov
pop
mov
mov
mov
adc
inc
xchg
push
mov
jp
jmp
jns
leave
lret
idivl
sub
lret
int
and
ja
pushf
dec
inc
pop
jmp
xor
rol
in
sub
sub
ljmp
or
and
ror
or
je
fisttpl
nop
ss
dec
inc
sub
xlat
xchg
push
fldt
cmp
shlb
adc
ljmp
mov
mov
or
cld
in
sub
fsubrl
cli
mov
or
test
mov
or
or
xor
push
xchg
jb
test
fcomps
les
xor
and
inc
ja
stc
mov
dec
dec
push
sbb
push
in
scas
leave
ret
or
les
in
pop
and
mov
mov
adc
iret
imul
mov
mov
rol
repnz
adc
push
and
mov
popa
sub
push
cmc
add
jae
jno
and
cmc
push
mov
gs
cmp
loope
cmc
std
pushl
stos
or
test
xchg
inc
in
push
cwtl
outsb
das
bound
cli
and
cmp
or
scas
ficompl
sub
shrl
push
mov
sarl
jp
jae
pop
sbb
add
into
shlb
jmp
dec
imul
lahf
adc
jl
add
inc
adc
cmp
es
sub
mov
lret
int
xor
mov
jns
jnp
stos
jo
int3
push
or
add
sub
std
pop
idiv
cmpsb
push
push
xchg
jnp
sbbb
dec
and
in
outsl
adcb
jo
jg
and
lds
aas
jo
and
dec
xchg
sub
jmp
sarb
adc
arpl
mov
pop
fisubl
push
lock
lock
push
sub
imul
test
inc
fsubl
leave
inc
aaa
lret
lret
scas
or
jne
bound
stc
pop
les
mov
push
scas
fidivrs
popa
arpl
mov
xchg
mov
jns
and
mov
mov
int3
test
fwait
lods
add
repnz
xor
push
lods
dec
add
inc
or
insl
xchg
push
fdivrp
aaa
mov
mov
xlat
fwait
xlat
std
mov
insl
movsl
xor
loopne
cmp
mov
outsb
stc
mov
test
insl
je
movsl
jg
sub
xorb
mov
subl
scas
rcrb
add
call
lcall
or
lcall
pop
sub
mov
and
cmp
cmp
leave
jae
jne
sub
dec
popa
ds
testl
push
push
pop
sarl
dec
and
jae
mov
mov
mov
pop
mov
xchg
mov
loope
int
mov
loopne
call
int
add
fxch
mov
inc
mov
sbb
loopne
cmpsb
inc
jns
jecxz
or
mov
fadds
std
std
sbb
and
or
add
mull
sbb
iret
in
movsb
inc
in
call
lods
or
mov
cmp
sti
add
js
bound
pop
jno
into
xlat
call
pop
push
adc
push
pop
pop
dec
rorl
fdiv
mov
test
fnstenv
repz
cmp
xchg
jne
cwtl
or
add
sbbl
pusha
popf
test
or
sbb
mov
inc
cltd
mov
sbb
or
hlt
fcomps
cmp
jne
sub
pop
in
nop
adc
clc
repz
mov
test
mov
mov
xor
dec
fsubr
mov
fcompp
out
fdivrl
inc
adc
ss
cmc
jnp
cmp
loop
idiv
out
rcrl
sbb
in
into
cld
xchg
add
inc
orl
mov
mov
lea
sbb
movl
or
stos
jo
aas
xchg
iret
dec
and
mov
mov
ficomps
enter
inc
push
and
lea
inc
inc
dec
adc
mov
push
push
stos
pop
or
sbb
mov
movsl
fcmovnbe
lahf
cli
pop
pop
push
inc
sbbb
imul
push
xor
in
add
jnp
aaa
sub
andl
jge
imul
pop
jb
in
stos
sub
push
or
les
into
jns
add
in
adc
into
mov
lock
out
jmp
cmp
push
insl
fimuls
daa
mov
jae
cmp
xor
leave
ljmp
cmpb
jle
ret
imul
sub
xchg
inc
jmp
or
sub
jmp
adc
mov
popf
dec
xlat
xchg
stos
les
insb
rcll
cmpsb
mov
scas
lcall
jbe
mov
int3
pushf
shl
mov
cli
lahf
test
popa
and
mov
loopne
xor
fistpl
scas
dec
mov
push
inc
add
sti
jnp
std
dec
dec
in
push
dec
shr
loope
fstpt
adc
cmc
lret
dec
push
mov
out
add
popl
movsl
scas
ss
add
enter
jl
fwait
cmp
xor
mov
imul
stc
sub
icebp
or
push
mov
push
mov
adc
xor
push
into
mov
xchg
xchg
cli
pop
mov
pop
insl
clc
das
shr
pop
mov
outsb
push
mov
jmp
cmp
movsl
andb
jg
xor
adc
cvtdq2ps
into
sub
es
cmp
scas
lea
push
sub
lcall
xchg
pop
dec
and
jo
dec
daa
xchg
adc
mov
cmc
sub
dec
inc
sahf
test
test
fdiv
out
adc
lret
add
lods
imulb
pop
cmpsb
popa
mov
cmp
in
jo
push
inc
inc
cmp
repz
adc
cmp
push
push
in
pop
es
push
or
xchg
cmp
push
or
inc
xchg
into
movsb
pop
scas
inc
or
addr16
adc
addr16
scas
ret
mov
pop
pop
sbb
mov
cmp
sti
add
enter
sahf
and
sub
mov
int3
jecxz
xor
pusha
js
shll
jns
xor
jmp
aad
or
mov
ja
push
push
icebp
jecxz
pop
sbb
inc
loop
cmp
sahf
xor
pop
js,pn
subl
pop
add
je
cwtl
jp
jl
icebp
aam
push
ds
xor
mov
mov
mov
je
shlb
adc
test
je
inc
xor
stos
mov
imul
and
pop
insl
or
jg
push
xchg
cs
dec
shll
sbb
jo
add
push
jl
in
dec
mov
dec
push
jp
add
mov
cmp
xchg
clc
mov
mov
pop
mov
movsb
rcll
std
dec
loopne
jns
jns
addr16
ficoml
push
and
int3
data16
inc
xchg
jp
je
fldt
lock
mov
cmp
mov
cld
dec
jecxz
mov
insb
int3
adc
ja
mov
fcmove
jb
loope
or
mov
cwtl
add
sub
pop
outsl
fistl
push
adc
fldenv
mov
lods
cbtw
xchg
xchg
lcall
fistps
adc
sbb
je
cmp
sbb
push
sub
test
shll
pusha
mov
cmp
repz
xchg
xchg
and
nop
xchg
lret
cld
and
cmp
push
add
add
xchg
push
rcr
or
pop
pushl
xchg
test
cmp
sbb
or
pop
inc
and
popa
mov
or
add
mov
inc
stos
aas
lods
mov
shld
dec
mov
rol
jle
add
pop
ss
push
sahf
mov
push
sub
gs
popf
jl
mov
stc
cmp
hlt
pop
cs
inc
rclb
and
push
pop
jle
fnstcw
leave
dec
mov
testb
lret
jge
addr16
cmp
cmp
mov
iret
inc
mov
sbb
inc
fdivr
stos
and
out
mull
jae
sbb
sub
out
sbb
rcll
popf
mov
cltd
push
in
mov
xchg
hlt
push
or
lods
mov
outsb
test
and
or
bound
xor
pop
inc
xor
pop
into
sbb
mov
popa
pop
stos
mov
mov
insl
cwtl
cmpl
sub
or
push
loopne
fdivl
in
loopne
mov
fs
push
mov
mov
sub
or
xchg
addr16
fisubs
push
mov
cltd
imul
adc
pusha
negl
fs
sub
lea
cmp
jp
dec
out
loop
inc
jg
xor
iret
jp
dec
popa
inc
ss
lcall
mov
cltd
or
enter
in
sahf
sbb
and
push
sbb
shl
xlat
lods
je
push
cmp
jg
pop
loop
inc
pop
xor
inc
stos
sbb
cld
sbb
das
cmp
and
loopne
pusha
insl
popa
mov
sub
adc
jbe
mov
fwait
jle
fcoms
nop
out
call
pop
push
stc
cld
sti
cmpb
lret
movsl
out
xor
push
pushf
scas
decl
mov
cmp
inc
pop
shl
mov
mov
popf
test
sbb
mov
add
cmpsl
inc
inc
cmp
dec
push
movsl
popa
lds
int
sub
inc
dec
mov
outsl
xor
addr16
aas
add
xor
inc
jmp
lods
rolb
dec
or
xor
out
popaw
and
and
push
pop
xchg
repnz
fidivrl
inc
lods
shlb
xor
test
sub
add
mov
push
or
pop
and
jo
or
mov
lret
lea
mov
hlt
les
inc
enter
pop
into
ficomps
and
dec
sub
mov
lahf
scas
inc
pusha
repz
ficompl
dec
stc
mov
shll
xchg
sbb
mov
daa
mov
cmp
out
add
sub
or
arpl
out
lds
adc
dec
lock
aam
clc
mov
sub
and
inc
xchg
movsb
add
jne
mov
aad
mov
test
ss
sbb
push
jnp
iret
je
mov
mov
mov
and
daa
mull
imul
fdivp
push
movsb
rcrb
dec
out
lea
loope
sub
mov
dec
cwtl
fbstp
rclb
mov
cs
sarb
jne
add
cmpsl
repnz
pop
rcll
jge
jle
mov
in
scas
je
cmp
sub
es
mov
jnp
cmp
push
icebp
bound
pop
xchg
ret
sub
hlt
loopne
xor
sbb
mov
sub
mov
lods
mov
repnz
adc
mov
and
icebp
push
stc
cli
outsb
mov
mov
xor
fs
and
repnz
in
inc
cs
xchg
sbb
pop
je
stc
mov
xchg
adc
outsb
push
scas
test
lods
iret
pop
cwtl
lds
xor
jp
mov
cmpsb
fiaddl
jg
adc
jp
mov
stos
in
cmpb
out
rol
in
leave
cmp
mov
cmpsb
sahf
mov
mov
cmp
mov
pop
lock
xchg
sti
ljmp
jbe
lret
rclb
lahf
mov
mov
mov
lahf
cmpsl
fnstenv
inc
add
es
ljmp
faddp
in
sbb
push
push
cmp
js
push
fldpi
imul
dec
xchg
icebp
dec
sbb
and
inc
add
dec
jne
jge
cmp
inc
jge
or
pop
jns
shl
mov
fiadds
jp
cmp
cmpsl
enter
inc
push
adc
std
movsb
pop
aaa
and
je
stc
ds
clc
lret
mov
in
jns
cld
dec
sbb
mov
subb
mov
and
cmp
in
decl
loope
push
push
cmp
sbb
sbbb
sbb
daa
shrb
xor
xor
ds
imul
not
scas
int3
cmp
paddw
out
les
cmp
mov
lea
fmul
inc
sub
jmp
cmp
xor
mov
test
cmp
xchg
sbb
xchg
and
cmp
bound
fidivrs
push
idiv
push
add
rcr
shl
inc
imul
lahf
mov
inc
inc
fs
xchg
inc
or
sti
and
ret
jo
cmp
mov
imul
jp
xchg
je
into
ss
fmuls
test
add
gs
sbb
lahf
iret
add
stos
jns
jbe
or
xchg
mov
pop
push
jbe
mov
adc
adc
mov
cmp
ficoms
nop
dec
mov
inc
test
pushf
into
or
addb
negl
es
jmp
jmp
cmp
mov
push
add
push
pop
inc
mov
fs
xchg
ja
faddp
mov
lds
push
inc
loop
ret
and
push
xlat
mov
test
ds
xchg
cmpsl
mov
loopne
push
mov
ds
aad
jp,pn
mov
xchg
mov
xchg
mov
mov
xchg
rorl
mov
ficompl
lds
je
mov
rclb
leave
lock
cmc
outsl
stos
in
shl
movsb
mov
fsubrs
mov
in
call
int3
dec
pop
stos
pop
jns
mov
jecxz
pop
adc
dec
dec
dec
icebp
mov
imul
outsl
popa
stos
es
pop
inc
sbb
outsl
or
orl
mov
in
mov
dec
popf
inc
movsl
inc
jno
dec
sub
dec
sub
jle
sbb
or
fsubr
add
adc
fcompl
rclb
dec
xor
loopne
sti
xlat
cmpb
xor
sahf
add
lods
pop
mov
xchg
pop
adc
fistpl
fwait
testb
mov
test
out
add
fcomp
cmp
pop
jg
mov
aaa
dec
cld
dec
loop
hlt
jecxz
repnz
movsb
inc
in
lret
sahf
inc
rclb
mov
mov
push
cli
das
popf
jbe
adc
pop
pusha
push
stos
iret
imul
dec
mov
inc
out
rorb
adc
aam
xchg
cmp
ljmp
dec
stc
mov
mov
push
sti
mov
cmc
imul
sti
shrl
roll
jns
inc
jle
leave
mov
aaa
arpl
orl
jo
push
xlat
lds
jl
or
iret
add
sbb
mov
mov
mov
push
mov
data16
lret
cmp
jb
gs
push
mov
cmpsb
mov
je
mov
movsb
jne
test
addb
xchg
dec
or
jb
cli
xchg
jl
inc
das
sub
inc
stc
aam
fsts
pop
dec
jne
call
mov
jmp
mov
jae
imul
cmp
andb
push
neg
push
rcrb
mov
je
test
fisubrl
jecxz
out
arpl
lahf
sbb
add
dec
pop
cmc
xchg
stos
add
pop
inc
lret
out
lret
pop
cmp
jecxz
sub
in
out
fwait
int
je
and
xchg
jle
imul
js
xor
loop
fmull
movsb
shll
lock
push
push
xor
iret
rorb
mov
adc
fstl
stos
fwait
ja
rorl
or
jae
inc
sbb
mov
cmpb
add
inc
ds
xchg
arpl
fidivrs
out
sub
pushf
jmp
dec
out
outsl
cmp
aam
mov
inc
mov
push
jge
jae
fs
pop
vpsrlq
pusha
jnp
stc
mov
es
mov
dec
and
into
popf
int
jb
mov
fcomi
in
jne
dec
loop
lahf
pop
cmp
popa
insb
dec
and
lds
sub
mov
add
in
in
ret
arpl
cmp
ljmp
call
mov
lods
ficompl
leave
cmc
pop
jmp
jb
and
movsl
sub
fstpt
bound
push
aad
pop
adc
mov
pop
orl
push
jo
dec
gs
sahf
cmpsb
push
in
subb
xchg
sbb
hlt
jp
lds
push
sub
push
mov
dec
add
xor
mov
ror
pusha
dec
add
xor
out
lcall
adcl
sub
mov
jp
adc
mov
addr16
lea
fcomps
testl
and
mov
push
xor
in
idivl
aaa
sbb
and
arpl
sti
es
and
in
push
or
mov
dec
mov
xor
mov
jl
fisubrs
lea
pop
mov
ljmp
enter
add
mov
push
ret
and
and
shrl
out
and
mov
test
subb
out
cs
insb
jne
das
push
iret
aaa
loop
data16
cmp
rcll
mov
mov
imul
adc
sub
je
sbb
das
add
fcoms
add
sbb
and
and
aad
pop
jno
je
jp
or
sbb
push
loope
jns
inc
mov
and
jno
les
in
push
xlat
dec
ficomps
and
add
mov
push
outsb
jp
inc
and
and
outsb
cs
or
std
ret
rorl
cmove
sbb
dec
mov
scas
jae
adc
enter
in
dec
push
fcoms
cmp
nop
movsl
test
lahf
shr
bnd
xor
cmpsl
aam
call
fs
fsubp
mov
daa
mov
test
pop
mov
int3
int3
adc
add
lahf
mov
pop
cmc
jecxz
lahf
adc
xorl
or
jmp
mull
add
add
jne
fcmovbe
addr16
jle
xchg
and
mov
jecxz
mov
lahf
xor
sbb
fcmovnbe
mov
jno
add
or
clc
lods
cs
or
cli
adc
xor
les
std
xchg
aad
xor
xchg
into
lods
jge
sub
push
push
clc
ljmp
inc
sbb
pop
aam
inc
cmpsb
dec
mov
shl
fldenv
mov
in
lcall
adc
xor
or
jg
pop
lret
jl
enter
pop
cmp
cmp
leave
cmpsb
sub
lods
mov
cwtl
ret
mov
xor
aaa
addl
dec
adc
inc
sbb
test
mov
test
adc
mov
ret
pop
xchg
jne
fnsave
mov
sbb
cmp
sbb
xor
adcl
imul
mov
mov
sbbb
shlb
popf
jle
jecxz
push
bound
dec
ss
shrb
xchg
push
or
push
or
and
fisubrs
mov
push
cmp
inc
sbb
mov
adc
scas
in
insb
adc
jbe
pop
movsb
outsb
xchg
mov
mov
inc
add
cmp
sub
mov
test
std
arpl
mov
std
movsb
or
xlat
fs
out
sbb
mov
or
aam
jle
int3
out
xor
lcall
or
xchg
out
or
pop
bound
mov
and
jecxz
xchg
daa
test
out
sub
stos
aaa
push
mov
sbb
rcrl
fcmovb
cmp
iret
mov
nop
test
mov
pop
push
mov
test
jae
jno
push
dec
sbb
call
aas
inc
out
fadds
jb
add
sub
rcrb
xchg
jmp
sbb
dec
mov
jo
ja
xchg
pop
mov
xor
push
orb
mov
push
aas
stos
aad
pop
xchg
into
mov
gs
push
jne
push
out
out
dec
jae
cmp
sub
loopne
in
lods
outsl
mov
jnp
jle
gs
std
vpmaxsw
cmpsl
adc
jmp
fdivl
mov
jnp
pop
addr16
das
inc
push
addr16
inc
clc
jns
pop
les
dec
aad
and
xlat
cmp
call
dec
rcrl
mov
mov
out
sub
arpl
je
test
mov
jbe
popa
imul
clc
test
jae
pop
cmp
movsb
xchg
dec
pop
xchg
lahf
nop
insl
sub
cmpl
shlb
fimull
sbbb
inc
dec
xor
pop
inc
jecxz,pt
mov
push
dec
repz
and
dec
sub
test
and
mov
out
sub
nop
pop
ret
mov
cmc
repnz
pop
jns
and
mov
daa
push
cmp
jae
movsl
std
pop
lods
mov
xchg
ss
sub
push
jo
fwait
cld
sub
jo
cmc
cmp
xor
and
negl
stc
enter
fildl
in
mov
shl
sub
sahf
sub
sub
xor
ljmp
outsl
mov
jo
in
dec
push
xchg
inc
fmul
in
fadd
lea
mov
mov
icebp
pushf
sub
into
push
adc
test
cmpl
xchg
push
or
push
int3
int3
stos
push
ljmp
push
cltd
mov
adc
les
hlt
lds
scas
mov
sbb
inc
pop
push
lahf
pop
dec
mov
ljmp
dec
push
xor
push
xchg
das
xor
das
cmp
xor
mov
push
and
loopne
push
sbb
mov
lcall
or
clc
aam
std
sub
outsb
imul
in
xchg
fists
in
and
cmp
sbb
xor
mov
repz
inc
mov
lods
incl
jno
cmpsl
mov
sbb
stc
aas
cmp
mov
movsb
push
or
xchg
sti
fldcw
xor
fildll
scas
push
xchg
jl
mov
inc
in
jmp
fldenv
add
add
test
aaa
in
cmpsb
push
out
dec
cmp
and
sbb
fwait
pop
fs
sub
clc
enter
inc
push
inc
fmull
dec
aas
test
sub
pop
or
dec
and
roll
xchg
push
mov
mov
sti
and
push
lahf
jae
cmc
pop
push
scas
or
or
andb
mov
ret
dec
push
sbb
fimuls
mov
inc
pop
pushf
and
pop
ljmp
mov
push
shr
lcall
ret
and
daa
inc
adc
jb
sub
cmp
jbe
mov
sahf
pop
movsl
sub
lods
mov
push
mov
push
xchg
movsl
fucomp
or
jne
push
into
cmp
sub
pop
mov
inc
xlat
arpl
pop
pop
jae
into
test
sbb
mov
inc
nop
pop
xchg
xchg
inc
inc
fiaddl
mov
push
add
lock
or
stos
jne
push
das
jecxz
or
sbb
cmpb
sbb
sti
inc
mov
movsb
mov
sbb
xor
sub
shlb
ret
lcall
pop
fs
fstp
popl
rcrl
sub
mov
xorb
mov
lcall
dec
fadds
enter
ja
jae
iret
rcll
aam
add
xchg
aam
sbb
out
insl
jmp
into
dec
js
jl
fwait
inc
idivl
movsb
ret
mov
xchg
iret
scas
cmp
push
push
stos
jo
in
mov
push
out
push
or
mov
icebp
mov
push
pop
sarl
outsl
scas
sbb
rol
insb
addb
lea
jb
sub
fidivrs
inc
mov
push
mov
xor
das
dec
fsubl
add
test
and
lds
fwait
es
test
sbb
mov
xor
fcompl
int3
fs
cmp
inc
sbb
insb
movsb
in
daa
adc
pop
aam
push
jns
xorb
mov
sub
lret
fwait
jns
mov
cmpsl
out
pusha
cmpsb
test
hlt
shr
js
xchg
leave
pop
stos
pop
int
aas
add
ja
test
sti
in
cltd
mov
adc
inc
push
pop
jns
mov
jae
inc
push
dec
lods
mov
jns
sbb
mov
cmp
inc
xchg
stos
cmc
dec
xchg
outsl
aaa
inc
inc
push
scas
in
and
push
fisttps
int3
imul
fiaddl
mov
insb
test
pop
sbbl
in
iret
pcmpgtw
sub
lods
clc
mov
jno
loopne
adc
ds
mulb
add
and
mov
pop
insl
pop
sbb
jl
loop
scas
xchg
jmp
inc
out
stos
jbe
jmp
pop
mov
dec
ss
aaa
mov
and
sub
inc
hlt
or
inc
or
fstl
pushf
adc
lcall
test
jmp
push
iret
bnd
jno
ret
cwtl
adc
ss
mov
in
nop
mov
cltd
cld
sub
cmp
add
sbb
xor
or
dec
loopne
std
fwait
js
movsb
xchg
inc
sub
fs
push
jns
or
lods
jecxz
xor
adc
repnz
cwtl
ret
mov
js
sbb
xchg
pop
aaa
aaa
test
xchg
sub
lret
int3
lret
out
vmwrite
xor
sub
test
pusha
popa
mov
push
sub
xchg
sahf
mov
mov
and
out
mov
mov
lock
mov
nop
push
xchg
adc
rol
mov
xor
push
sbb
xchg
pop
mov
nop
mov
insb
in
out
imul
push
push
fwait
mov
xchg
lcall
pop
push
xchg
mov
lods
adc
jmp
arpl
dec
jno
inc
jns
lret
jmp
icebp
and
adc
mov
mov
mov
sti
sub
cmp
bnd
movsb
movsl
pop
es
jo
data16
outsl
jecxz
xor
mov
sbb
movsb
mov
mov
or
mov
sbb
adcl
mov
jl
in
mov
in
test
pusha
std
sub
pop
ljmp
cmp
and
pop
mov
pop
lods
into
pop
xor
inc
push
sub
sbbl
cli
inc
inc
add
jmp
dec
orb
cltd
into
push
cli
cmp
mov
scas
jle
sarl
sub
push
das
insb
xchg
xchg
sbbl
hlt
div
jns,pn
cwtl
sub
fwait
xchg
rcrl
ja
out
add
faddl
fwait
call
or
mov
fmuls
lcall
push
cwtl
clc
push
mov
mov
jb
jb
mov
scas
jb
adc
test
jnp
push
ljmp
dec
inc
aam
out
inc
es
jmp
push
ret
pop
xor
push
push
hlt
push
mov
insb
xchg
inc
fsubrp
xchg
insb
sub
or
lods
loope
and
cmovle
push
in
sbbl
imul
incl
mov
sub
sub
lock
dec
rcrb
lock
add
in
xor
scas
fmul
or
aaa
adc
adc
push
mov
push
lods
add
pop
xor
jae
or
push
rcll
ldmxcsr
ret
hlt
lods
mov
bound
ret
push
ljmp
add
cmpsl
cltd
cli
ja
dec
sub
inc
mov
xor
mov
lock
mov
sub
sbb
outsb
sbb
inc
mov
loopne
enter
push
jns
inc
jno
fs
stc
arpl
mov
sub
fs
call
fwait
pushf
dec
ret
test
jne
into
popa
cli
test
cmc
imul
fcmovb
push
inc
push
mov
je
mov
int
jl
mov
pop
in
ret
dec
mov
xchg
scas
cli
sub
test
ds
xor
push
fs
test
inc
xchg
loop
inc
loope
mov
imul
dec
jmp
std
mov
imul
leave
les
cld
dec
gs
lahf
dec
out
xor
ds
fstl
popf
or
gs
icebp
aam
adc
mov
sub
roll
pushf
jnp
dec
leave
jns
cli
cmc
rclb
mov
lret
push
insb
add
rcl
stc
inc
adc
add
mov
pop
ror
hlt
push
outsb
cli
sbb
jmp
push
xlat
lcall
adc
aaa
push
jne
es
cs
mov
mov
dec
inc
lahf
stos
inc
sbb
cmp
push
mov
lock
mov
pop
stc
repnz
adc
add
mov
fcmovne
adc
pop
jecxz
xorl
out
mov
sbb
bound
mov
xor
popf
jb
outsl
add
add
not
push
popa
test
xchg
mov
add
and
mov
das
int3
cmpl
pop
pop
orl
and
test
loop
jg
in
xchg
pop
sub
sahf
pop
and
lahf
sub
mov
popa
push
mov
fistpl
bound
mov
add
jb
pusha
xlat
daa
fimull
ljmp
imul
stos
xchg
jbe
pop
or
ret
mov
and
jecxz
movsl
rcr
dec
jmp
pop
pop
fmull
cmp
mul
xor
mov
in
sbb
leave
sbb
cwtl
out
xchg
imul
cli
xchg
mov
sti
jecxz
dec
sub
pop
shrb
and
pop
rorl
pop
jnp
cld
cld
sub
mov
loope
scas
mov
movsl
mov
sbb
pop
inc
jecxz
mov
sahf
or
or
out
mov
sahf
mov
push
pusha
mov
sbb
leave
outsb
xor
in
pop
insb
dec
test
adc
adc
push
mov
loopne
lock
fcompl
cmp
mov
into
fwait
cmp
je
push
shrb
sbb
pop
lahf
mov
sahf
ret
lahf
andb
jle
sbb
mov
sub
cmp
jnp
lahf
lret
fdiv
inc
stos
xchg
mov
jl
mov
jae
dec
iret
iret
push
xchg
xchg
push
lods
xor
hlt
sbb
pop
xor
xchg
mov
loope
jmp
scas
add
mov
adc
subb
mov
xchg
add
xchg
mov
and
pop
mov
inc
push
pop
std
mov
pop
loopne
lcall
sarl
shrb
ret
or
sub
mov
mov
test
test
cmpsl
lea
aaa
jg
and
mov
insl
sub
dec
add
jns
add
pop
inc
cmpsb
pop
dec
mov
imul
add
xor
shl
nop
add
push
lcall
test
cmp
dec
push
rorl
arpl
out
int3
pop
out
adc
or
fwait
inc
adc
das
addr16
adc
jge
stos
fs
inc
shr
fwait
xchg
pushf
movsb
xor
mov
adc
rol
lock
cmp
jle
sub
xor
mov
aad
cmpsl
cmpsb
mov
dec
cwtl
hlt
mov
or
lcall
outsb
xchg
push
inc
xor
mov
dec
movsb
inc
str
aaa
aam
imull
aam
out
pop
mov
inc
inc
add
lret
push
lock
ret
mov
rclb
push
mov
idivl
jb
test
inc
test
cmpb
mov
mov
sbb
call
cmp
xor
imul
and
dec
adc
xor
jbe
dec
mov
test
enter
aam
mull
xchg
cwtl
sub
cld
push
xchg
nop
into
pushl
sbb
sub
jge
mov
lret
jp
cmp
loope
ffreep
sub
inc
dec
test
lea
xchg
outsl
mov
and
das
mov
aam
imul
push
iret
fistps
cmpsb
mov
cs
xchg
fildl
out
mov
xor
daa
test
pop
test
xor
mov
xor
iret
cmpsl
jecxz
fnstsw
mov
xor
mov
mov
bound
sub
ljmp
dec
fdiv
push
js
fdivl
xchg
jae
mov
lods
dec
mov
lock
call
or
stos
or
repnz
cli
xor
out
sbb
rol
arpl
sub
and
dec
adc
out
out
out
sbb
inc
push
stos
push
xchg
dec
jle
insb
dec
add
mov
aas
cmp
sub
lret
into
mov
xlat
mov
cmp
pop
out
daa
jge
pop
pop
push
adcl
mov
mov
mov
cmp
xchg
aas
les
xor
inc
xor
pop
push
xchg
out
pusha
lret
sub
xor
push
fsubl
outsl
fsubl
lds
ret
push
repz
pop
push
mov
idivb
insl
int
aas
mov
es
cmpsl
dec
inc
fwait
mov
sbb
fdivr
push
stos
mov
mov
shl
add
push
pop
push
outsl
fcompl
in
mov
mov
or
stc
addb
xchg
orl
xchg
fimull
pop
shr
into
fnsave
out
rolb
inc
mov
add
loope
push
stc
jne
sbb
or
add
ljmp
mov
in
mov
pop
jmp
icebp
xor
mov
fldenv
jnp
pop
test
cld
outsl
adc
cwtl
cmc
pop
lcall
adc
les
jge
push
push
hlt
mov
add
jge
es
dec
cmp
ds
dec
out
jae
ljmp
and
addr16
stc
jle
xchg
test
nop
push
jp
jg
push
jg
stc
inc
loopne
pop
test
ljmp
xchg
add
popf
sbb
pop
lret
xor
or
and
xor
mov
cmpsb
mov
stc
push
pop
test
in
negb
test
push
scas
lret
mov
hlt
sbb
popfw
negb
adcb
jge
leave
loope
cmp
adc
push
mov
cltd
adc
bound
lds
cld
inc
push
enter
shll
int
push
adc
ja
lods
sub
mov
pop
icebp
jmp
adc
lcall
push
mov
imul
jbe
hlt
xchg
jmp
cmpl
shlb
add
sub
push
mov
fnstcw
insb
dec
xchg
mov
outsl
je
mov
or
call
int3
push
andb
cmp
into
cmpsl
ret
inc
in
ljmp
mov
mov
cmp
ja
or
fwait
push
inc
sbb
sahf
clc
add
push
cli
decb
icebp
jmp
push
jno
adc
lods
dec
inc
aaa
icebp
in
fsubrl
lahf
xchg
and
adc
sub
shr
cltd
xor
std
mov
mov
test
mov
push
std
push
push
lds
lea
dec
mov
sfence
mov
inc
push
clc
sbb
and
ja
mov
popf
xchg
es
xchg
pop
sbb
pop
add
sub
gs
xchg
xchg
xor
mov
repz
xchg
xchg
adc
and
mov
pusha
lahf
xchg
in
test
cmpsb
pop
jb
jno
pop
jne
push
fwait
sub
aam
arpl
cmpsl
cbtw
pop
jns
jns
fwait
xor
outsl
imul
clc
aas
cmp
mov
jnp
and
jno
dec
add
cmpxchg
mov
add
cmp
or
pop
mov
adc
pop
and
bound
mov
jl
gs
xorl
xor
loope
int
add
in
pusha
test
lods
pop
jle
aam
sbb
cmp
out
dec
cmpsl
jb
add
mov
aas
inc
popf
jns
ds
lahf
sub
pop
rcll
daa
je
pop
mov
cmpsb
jmp
dec
push
inc
add
shll
and
or
inc
adc
loopne
sub
mov
je
insl
mov
nop
mov
xchg
xorb
or
xor
test
fisttps
sti
in
clc
je
sub
fld
addl
cmovnp
test
jnp
jae
test
lcall
insl
or
push
lds
cmp
nop
and
xchg
ss
shll
push
xchg
xchg
add
stc
and
and
mov
test
in
idivl
pop
xor
orl
imul
cs
add
jne
add
and
xchg
aam
push
sub
mov
rorb
adc
xor
sti
shll
xor
scas
mov
jg
sub
nop
add
adc
jns
out
xchg
jae
push
aad
jae
xchg
ficompl
or
mov
xchg
cwtl
xor
stos
clc
and
xchg
jo
js
filds
push
ljmp
push
lock
sbb
insb
mov
or
xchg
push
pop
adc
push
call
scas
cltd
mov
pop
mov
cmc
pop
divb
andl
lods
fs
sbb
mov
push
mov
xor
addr16
cmp
mov
jb
mov
jg
cmp
cld
xor
loope
xchg
scas
imul
repnz
mov
loop
add
out
xor
aaa
stc
ret
mov
hlt
sub
pop
inc
outsb
jp
push
inc
sti
sbb
jne
mov
test
mov
mov
push
and
cmp
push
not
xchg
dec
or
sbb
add
mov
aaa
repnz
in
in
jmp
arpl
push
int
pop
les
mov
aad
jb
inc
test
mov
fwait
iret
shll
mov
inc
mov
add
mov
stc
mov
mov
jge
leave
filds
inc
test
test
ret
cli
xchg
loop
mov
mov
aaa
call
data16
sub
daa
adc
iret
out
movb
insb
lock
mov
insl
or
dec
aam
mov
mov
add
or
call
out
arpl
aad
mov
xchg
clc
xchg
lcall
jecxz
hlt
sub
stc
pop
std
jno
inc
adc
jbe
push
lret
xor
lret
orb
rclb
icebp
pop
movsb
pop
mov
pusha
ss
mov
mov
mov
hlt
fstl
outsw
mov
sbbl
es
cmp
movsb
mov
lea
in
dec
fnsave
aas
xor
dec
cmp
inc
xchg
xlat
mov
or
call
icebp
pop
xchg
repnz
lea
popa
inc
in
pop
sbb
in
int3
cmp
orl
divb
fcomps
jo
mov
xchg
xor
mov
push
mov
mov
ficompl
dec
inc
xor
in
xor
ja
rorl
jno
iret
leave
sbb
loopne
test
cmp
jno
enter
push
jnp
jmp
mov
cmc
mov
add
fidivrl
inc
xor
cmp
or
popa
aam
push
dec
mov
movb
out
jo
push
aaa
push
in
popa
pop
sbb
pop
mov
scas
mov
clc
dec
sub
sbb
and
cmp
jle
fbstp
dec
inc
inc
xchg
out
decl
dec
inc
mov
sti
or
pop
mov
pusha
mov
in
xor
pusha
repnz
sbb
sbb
dec
out
mov
dec
rorb
push
mov
pop
test
adc
outsb
cwtl
scas
dec
sub
fdivrl
or
sarl
sub
sub
add
pop
and
mov
shlb
rcrl
sbb
inc
add
push
sbb
or
xchg
cld
test
aaa
and
pop
mov
call
push
repnz
xchg
cmp
movsl
daa
xchg
mov
push
popf
int
and
cmp
xchg
add
mov
movsb
loop
scas
jmp
jmp
add
fldt
cmp
loope
mov
popa
adc
push
je
sahf
shlb
in
rorl
jge
xchg
sbb
push
icebp
mulb
xor
out
mov
imul
ja
dec
xchg
pop
sub
xor
inc
sub
iret
insb
sarl
shlb
xor
xchg
or
mov
xchg
push
movb
loope
adc
xchg
jecxz
jae
rcl
mov
xor
dec
lret
pop
fstps
cltd
je
loope
cmpsb
pop
hlt
adc
sti
fistps
pop
adc
cmpsl
sbb
jmp
jb
scas
jo
aam
aas
cmpsl
jge
push
mov
mov
lcall
jae
pop
ret
push
hlt
mov
mov
testl
pop
mov
add
sub
ret
call
jle
push
repnz
aad
or
push
jg
mov
inc
lret
cmp
xchg
and
ror
scas
rorb
mov
push
cmp
jl
ret
popf
ss
inc
xor
add
or
or
mov
push
mov
xlat
sub
mov
push
jo
push
mov
push
push
adc
and
inc
xchg
xor
ret
in
jnp
cwtl
nop
inc
addb
jo
fs
mov
aad
pop
xchg
fistps
out
rcll
mov
jb
and
xchg
gs
mov
nop
aad
mov
dec
pushf
jge
lock
fistl
stos
pop
in
jne
xor
sub
adc
loop
sbb
pop
push
loope
lock
and
push
fidivl
mov
bound
out
clc
jns
sub
inc
mov
ret
cld
lret
cmpsb
xor
ss
cmpsl
pusha
inc
mov
fwait
ss
addr16
mov
out
pusha
aam
in
out
icebp
sahf
lret
sbb
xor
or
xor
cmp
mov
daa
push
fcomip
fisubs
adc
arpl
sbb
daa
jp
add
ficompl
jnp
jb
mov
loope
cmpsb
testb
scas
mov
cltd
lcall
dec
xor
mov
sub
wbinvd
mov
jbe
push
fwait
sub
mov
push
cmp
jne
in
mov
rcr
lock
adc
xchg
xor
dec
sbb
jg
sbb
sub
into
sub
mov
ljmp
xchg
or
rcl
adc
fidivl
fnsave
jecxz
mov
sub
sahf
aam
cmpsb
test
or
xchg
sbb
addb
pop
jmp
fwait
outsb
cmp
mov
cmp
ja
negb
shrl
jmp
cs
test
loop
pop
mov
stos
sbb
lcall
aad
loope
mov
mov
adc
daa
popa
sub
mov
std
xchg
or
mov
xlat
mov
fsubrs
inc
scas
mov
stos
outsb
lock
pop
gs
mov
jg
inc
xor
sub
pop
enter
dec
fsubrs
test
lahf
xor
addr16
data16
call
cmpb
and
insb
cs
in
movl
pop
daa
std
push
dec
and
cltd
inc
jmp
ret
adc
mov
adc
mov
out
movsb
sbb
add
cmp
dec
pop
jne
cltd
inc
fistpll
std
int
mov
jecxz
mov
cmpsb
or
lods
fs
inc
dec
jge
cld
scas
or
test
aam
hlt
xchg
cmp
frstpm(287
fldcw
sub
push
es
cmp
stc
out
mov
push
cmpsl
lock
push
test
cli
jne
daa
push
pop
movsb
adc
and
push
aam
push
pop
hlt
fcomps
xor
add
icebp
mov
or
jno
jmp
cmpsb
aas
fldenv
fisubrs
adc
mov
in
imul
mov
jmp
xor
mov
pop
mov
xchg
push
test
push
cmpsl
xor
rcrb
or
dec
imull
insb
fcmovnb
pop
pminsw
pop
lds
push
mov
scas
inc
outsb
jmp
pusha
mov
testb
bnd
and
in
add
sub
fnstsw
pop
in
xor
jo
pcmpgtw
test
mov
and
cmp
pop
adc
and
push
aad
dec
add
lock
dec
das
dec
adc
stos
outsb
shrb
jne
mov
rolb
cld
nop
xchg
cmp
enter
cmpsl
dec
jp
sub
insl
jb
leave
fdivrp
inc
jmp
lds
orl
add
fcmovu
pusha
add
xchg
les
ss
pushf
ss
cmc
je
add
fwait
addr16
jns
jmp
imul
or
jl
add
sahf
pop
push
lret
xor
dec
test
movsl
pop
mov
lea
paddd
mov
sbb
pusha
adc
jnp
inc
inc
cld
in
mov
rcrl
pop
xor
fisubrl
jo
imul
ljmp
faddl
stos
mov
sbb
fsubs
dec
rcll
mov
dec
sub
sub
mov
rcrb
gs
xchg
shrl
dec
pop
xlat
or
sbb
ret
cltd
push
jbe
inc
adc
das
push
lahf
pop
pushl
stc
loope
jge
adc
push
js
and
pop
scas
adc
addr16
ficomps
rol
ror
movsb
repz
ffreep
dec
jo
mov
roll
dec
outsw
xlat
sub
call
mov
pop
lcall
dec
outsb
mov
addb
jmp
repz
xor
inc
out
mov
or
jno
sti
mov
xchg
mov
ljmp
popl
xor
xchg
mov
movb
xor
fildll
adc
xchg
add
pop
out
loope
mov
addr16
test
xchg
add
stc
jns
sbb
int
cmp
rcrb
sub
dec
xchg
ss
xlat
test
movsl
mov
pop
mov
sarb
cltd
jb
loope
and
push
clc
mov
repnz
jmp
pop
jge
lods
jbe
int
sub
out
sti
or
cmc
sub
or
out
lods
das
inc
mov
inc
xchg
in
in
shrl
in
imul
popa
movsb
sarl
outsl
xchg
inc
cmc
pusha
xor
icebp
shl
cmp
cmpps
fs
test
add
fiadds
lahf
daa
xor
sarl
aaa
mov
adc
pop
push
movsl
sub
repz
pop
scas
mov
fsts
push
test
cld
xor
lock
lock
outsl
mov
fisttps
push
aaa
push
and
mov
xchg
mov
mov
jg
gs
jge
jl
jge
pop
call
lret
jbe
mov
cs
sbb
lea
add
xor
inc
and
in
mov
inc
jge
dec
call
aas
or
push
pop
ss
aam
sbb
std
pop
pop
and
jle
arpl
mov
adcl
xchg
add
push
dec
adc
std
mov
fldt
lods
test
ficoms
add
mov
dec
lds
mov
push
lret
into
cmp
stc
rcl
loop
pop
ja
cltd
pop
jg
push
icebp
paddsw
sbb
cmc
jno
pop
in
sbb
pushl
mov
inc
cmpb
lods
dec
mov
gs
inc
push
jmp
lods
rolb
call
xor
notl
mov
gs
pushf
jnp
jmp
cmp
jnp
or
popa
popa
out
xchg
xor
cmpsb
jne
dec
fs
movsl
out
popa
popa
out
xor
adc
fsubs
mov
repnz
lods
cmc
xchg
ret
outsb
mov
hlt
jle
xchg
fnstsw
xchg
out
xor
aam
loope
in
iret
data16
sti
ja
movsb
and
cld
lcall
adc
repz
sbb
adc
jno
jns
push
loopne
mov
xchg
and
xchg
cwtl
loope
add
imul
aad
or
and
lds
addr16
mov
stos
popf
xor
call
aad
ljmp
mov
js
dec
scas
or
adc
and
neg
arpl
rcrl
test
jae
gs
jge
fbstp
jmp
bound
adc
das
lret
sbb
inc
es
adc
sti
inc
shrb
mov
scas
bound
jns
sbbl
mov
sub
sti
outsb
int3
cld
sbb
xlat
data16
sbb
cmp
in
lea
mov
je
push
add
aam
lods
push
mov
jo
adc
movsl
pushf
or
cmp
add
mov
xchg
pusha
push
pop
inc
mov
adc
lea
cmp
and
sti
mov
xor
pusha
push
sbb
fsts
push
popa
pop
mov
icebp
push
hlt
jno
jno
and
xor
fdivrs
aas
daa
jg
jle
leave
out
sub
cmp
cmp
push
popa
fisttpl
outsl
adcb
sbb
shll
inc
mov
lods
mov
mov
loopne
sbb
dec
adc
imul
lcall
adc
cmpsb
inc
pop
flds
xchg
pushf
xor
jne
loope
push
out
jp
xchg
or
adc
outsl
in
mov
stos
pop
int3
or
test
sti
jnp
fiadds
mov
dec
or
jns
dec
mov
mov
jo
push
fcomi
mov
cmc
and
ja
pop
mov
and
xor
sub
adc
lods
mov
mov
xchg
push
push
ss
pop
jno
mov
sbb
test
in
add
adc
int
sbb
push
sahf
cmc
aas
adc
fldl
xchg
cmp
ret
addr16
pop
iret
insb
inc
dec
and
clc
pop
push
xchg
inc
notl
rcll
mov
cmp
add
xchg
lcall
lret
pop
loop
sbb
mov
inc
mov
aam
push
repz
push
ljmp
sbb
xlat
cmp
das
mov
push
repnz
push
mov
push
jle
mov
sbb
loopne
mov
push
or
xor
xchg
loopne
sub
loope
rclb
push
mov
or
test
sub
cmp
ds
aaa
cmp
decb
mov
ljmp
fsubr
sbb
les
sub
sbb
ljmp
mov
in
adc
xchg
mov
stos
jle
stos
sbb
inc
jle
push
loope
shlb
pop
andl
pop
fldcw
pop
push
je
mov
or
imul
mov
pop
rcrb
xchg
adc
cmp
push
faddl
push
int
daa
dec
inc
popa
inc
ror
cmp
fcoms
dec
sahf
mov
jb
rorl
mov
mov
dec
cs
mov
test
icebp
pop
dec
add
aas
sbb
rcll
or
push
mov
hlt
fistl
sub
in
jge
es
arpl
pushf
fisttpl
push
adc
sahf
dec
inc
shl
xor
or
inc
dec
subl
outsb
clc
or
add
mov
cmpb
sub
xchg
adc
popf
lods
lret
nop
in
pop
xor
jecxz
mov
push
rolb
push
pop
repnz
mov
in
ss
aam
ret
out
loope
jge
cmc
xchg
mov
pushf
inc
pop
sub
fmulp
std
jle
jb
xchg
popa
adc
gs
fs
fstpt
cmpsl
bound
mov
xchg
in
js
out
jp
xchg
ror
scas
xchg
stc
jne
xlat
ss
xor
xchg
or
or
fcom
cmp
ljmp
xchg
xchg
push
jns
hlt
scas
mov
inc
jmp
pop
mov
rclb
inc
out
mov
sarb
xor
sbb
sarl
add
shl
sbb
mov
mov
inc
mov
mov
mov
pop
les
cli
inc
adc
jmp
loop
pop
add
mov
hlt
or
sbb
mov
lds
pop
repz
aam
je
or
cli
adc
add
shrb
in
cmpsb
mov
lahf
lods
repz
pop
rcrb
mov
xlat
fnstcw
cltd
cmp
and
cmp
inc
movzbl
loopne
jle
test
and
or
lea
mov
pop
std
adc
cmp
cmp
dec
push
pop
cmpsl
ja
add
pusha
sahf
stc
xchg
sbb
lret
leave
push
cmpsl
jns
add
push
stos
sbb
sbb
pop
enter
cwtl
jmp
pushf
adc
stos
xor
lock
push
jmp
imul
lods
mov
jbe
jp
test
cmc
inc
iret
out
shrb
jnp
repz
push
adc
pop
daa
mov
xor
xchg
in
test
icebp
or
in
insl
mov
inc
lds
mov
and
lods
dec
repnz
add
sbb
icebp
jmp
inc
sahf
inc
int
push
push
mov
mov
repnz
int3
xor
and
xchg
lret
mov
pop
xchg
cmp
out
inc
inc
leave
xor
andb
adc
add
aaa
data16
or
mov
lods
out
repz
mov
lea
pusha
mov
inc
xchg
mov
pop
lock
cmp
mov
in
cltd
and
lcall
adc
xchg
into
sub
aas
scas
pop
out
sarl
cs
sub
shll
ja
cld
pop
in
insb
mov
xchg
mov
lcall
lcall
sub
fs
out
sub
push
add
xor
addr16
xchg
shrl
jno
and
xchg
rcll
fisubl
aas
jmp
mov
pop
leave
inc
mov
hlt
sbb
jmp
ficompl
dec
sbb
fucomip
add
mov
mov
mov
inc
inc
jge
xchg
daa
mov
inc
das
inc
mov
insl
pop
fsubrl
pop
or
call
jl
push
jge
incb
int
jno
lahf
push
or
cld
mov
mov
mov
or
push
out
shl
fistl
jne
clc
jb
stos
add
add
loope
mov
shll
pushf
es
pop
xor
sti
jb
testb
sti
pop
xor
adcb
psubq
repz
mov
sar
gs
in
pop
pop
dec
mov
fbld
mov
fstpl
sbb
push
rcll
dec
mov
rcrb
mov
inc
mov
mov
jp
in
cmc
sub
inc
subb
lcall
mov
mov
fcompl
jnp
loopne
cmpsl
mov
mov
pop
lea
pop
add
push
loopne
pop
mov
sbb
test
xchg
sbb
or
dec
adc
stos
and
pop
sahf
repz
push
es
scas
mov
imul
add
int3
dec
mov
sbb
sbb
jbe
jae
mov
pop
add
pop
jle
mov
in
push
inc
stos
dec
fsts
pop
in
scas
adc
aad
xchg
cli
pushf
mov
aaa
fisttpl
or
push
adc
xchg
outsl
cmpsl
or
cmp
daa
ja
inc
jge
mov
xor
adc
stc
shrb
cmp
stc
aas
rorb
and
out
int3
addr16
sbbb
test
iret
push
testb
sbb
into
lds
cli
jo
jno
jl
push
out
xchg
cmp
test
bound
xchg
rcr
sbb
xlat
add
cmpsb
popf
push
inc
sub
fs
js
or
testb
xchg
hlt
rcl
ds
dec
loop
lea
mov
loop
repz
movsb
ds
scas
jge
push
mov
inc
lcall
fdiv
jno
push
jle
inc
cmp
sub
mov
pop
adc
lahf
mov
ret
and
pop
rcll
mov
lcall
jl
or
push
cmp
mov
insb
inc
fcmovnu
stos
aad
out
sub
sbb
addps
pop
add
cmpsb
pop
dec
shlb
xchg
xorl
dec
aad
fsubrs
iret
fst
fs
aaa
in
aas
xor
int
push
clc
push
xchg
repnz
mov
stos
and
out
pop
in
xchg
stos
xchg
loop
and
mov
mov
arpl
dec
lahf
jl
in
xchg
xchg
add
mov
imul
sub
ret
jle
sub
pop
xor
subb
pushfw
js
ja
sub
xor
sbb
mov
mov
and
enter
je
out
dec
add
test
jb
inc
iret
in
push
adc
icebp
lahf
lret
mov
pop
jl
inc
loopne
and
pop
xor
lods
pop
mov
inc
push
mov
mov
mov
xor
lods
ret
or
lods
cmpsb
push
shlb
jmp
rcr
cwtl
pop
insb
loop
xchg
pushl
cmp
aad
rcll
xor
mov
fldcw
test
sub
mov
int3
insl
mov
jno
lds
daa
ret
cld
sub
xchg
notl
sub
adc
jecxz
les
es
mov
leave
mov
inc
shl
ljmp
hlt
negl
mov
pop
cmc
out
xchg
dec
inc
repnz
icebp
test
mov
and
or
cmp
stos
mov
clc
mov
inc
cwtl
testb
adc
insl
or
shl
add
mov
xchg
mov
in
rorl
loop
test
jmp
rolw
pop
pusha
mov
mov
pop
mov
mov
dec
add
js
push
pop
lods
inc
add
push
inc
push
aam
icebp
mov
imul
aas
out
out
sub
adc
mov
js
popl
sbb
xchg
inc
push
ret
pushf
and
add
add
fbstp
clc
or
mov
repnz
in
push
lea
sub
cltd
push
sbb
adc
jecxz
or
jg
pop
fnstsw
add
pop
daa
movsl
ds
outsb
test
add
fisubrs
lods
cmp
lds
ficoms
int
sbb
xor
pushl
faddl
inc
mov
clc
mov
xor
sarl
push
xlat
add
rcl
icebp
mov
add
or
repnz
mov
push
pop
push
lock
mov
addb
divb
add
or
rclb
push
and
outsb
or
inc
or
push
iret
add
pop
mov
xor
sbb
sbb
dec
mov
pop
outsw
pop
push
jno
outsb
add
mov
psrld
stos
adc
xor
insl
test
xchg
sahf
inc
nop
jbe
or
in
dec
inc
aaa
out
cltd
push
dec
inc
xor
lahf
mov
mov
mov
insb
jns
push
mov
in
jae
test
pop
mov
cmc
jp
fs
jle
popf
lcall
sub
sub
push
push
into
aas
cld
enter
xchg
pop
out
daa
dec
sub
je
xchg
jl
dec
sub
and
sahf
pop
xlat
mov
sbb
mov
and
iret
and
xchg
dec
push
and
jae
lahf
clc
aas
outsb
sbb
xor
js
insb
pop
sbb
push
jmp
call
lret
popa
pop
pop
sahf
cli
mov
loopne
cwtl
or
xor
fsubrs
flds
push
jmp
inc
or
pop
jge
shlb
mov
leave
mov
cmpsl
push
mov
push
pop
cs
sub
jg
sub
cmpsl
cmp
cli
mov
xchg
or
pop
adc
std
add
repz
xor
movsl
movsb
cmp
jmp
in
mov
imul
mov
jmp
aam
int3
mov
lock
push
dec
cmp
addl
into
cmp
inc
jge
stos
pop
mov
sbb
popa
xor
or
sub
pop
popf
mov
dec
mov
add
mov
out
iret
ds
adc
pop
dec
stos
inc
imul
rorb
pop
sbb
js
sub
sti
cmpsl
stc
mov
adc
sahf
mov
adc
outsb
or
xlat
arpl
xchg
or
fs
push
test
sarl
dec
or
stos
fldenv
enter
imulb
lds
clc
cmp
inc
test
jne
test
inc
add
mov
xchg
pop
lret
adc
jg
jmp
jne
xchg
xor
adc
or
xchg
add
in
aam
dec
push
sbb
icebp
fs
insb
je
stc
sbb
pop
add
ja
aad
xchg
js
repz
fcmovbe
movsb
add
mov
cmp
mov
aaa
jle
jne
dec
jne
cmpsb
hlt
in
cmp
pop
scas
fistps
or
shlb
sbb
jb
cmp
outsb
xchg
mov
dec
add
push
jae
lock
ret
pmaxub
sub
jmp
lea
push
pop
stos
and
imull
enter
pop
js
and
push
mov
push
mull
test
hlt
adc
pop
enter
in
repz
test
pop
jo
jb
in
push
orl
aas
repz
shll
xchg
lds
rorl
adc
jg
fwait
ds
popa
movsb
push
leave
ds
inc
cs
adc
dec
sbb
mov
sub
jl
mov
jmp
into
jmp
adc
push
js
or
jp
inc
mov
xchg
loopne
addr16
les
js
push
das
mov
push
fsubrs
or
leave
aad
inc
and
scas
cmp
adc
test
xchg
pop
mov
shl
aad
in
clc
call
xchg
popa
pop
add
insl
xchg
mov
add
mov
fsubr
jne
adc
xchg
loopne
scas
popf
addl
into
adc
dec
mov
sub
test
pop
into
or
mov
out
scas
dec
inc
and
mov
dec
in
push
dec
mov
sti
push
ss
jecxz
xor
sub
adc
es
int
mov
gs
in
inc
xor
jl
and
and
hlt
je
or
cltd
jae
pop
movsb
out
out
dec
test
jl
data16
fstps
adc
mov
jns
inc
push
cmpsb
jp
cmp
iret
mov
jne
cmp
adc
jnp
push
enter
cmp
mov
subl
loopne
aaa
jmp
xchg
xchg
imul
push
enter
inc
cmc
dec
and
mov
into
push
sahf
add
aad
mov
jno
add
daa
jno
push
or
xchg
sbb
cwtl
mov
jnp
pop
lds
dec
cmp
sahf
jns
fs
and
cli
xor
adc
mov
inc
imul
push
repz
sbb
and
xor
movl
lahf
push
sarl
jae
push
popf
int3
cmpsb
loopne
fisubs
cwtl
push
cmc
mov
push
flds
inc
in
xchg
call
push
sub
xchg
cld
lods
push
xchg
aaa
popf
xchg
adc
or
mov
cmpsl
popa
cltd
std
add
cmc
call
mov
test
xchg
aas
add
lahf
dec
popa
push
leave
ret
pop
notb
addr16
daa
xchg
jo
movups
jmp
sub
repz
xor
jo
cmp
push
push
in
popa
stos
shl
xchg
mov
sub
fsubs
pop
xor
fidivrs
aaa
gs
mov
jge
std
xchg
loop
xchg
jge
jl
leave
push
mov
or
mov
cmp
sahf
xchg
jnp
push
push
cmp
fdivs
add
aaa
pop
xor
push
cmp
sub
std
xor
xor
jg
loopne
sub
das
sub
popf
dec
cmp
xor
incb
dec
mov
mov
rcll
cmpsl
lret
lds
ljmp
jle
mov
pop
data16
popa
mov
push
jl
pop
nop
sub
daa
test
out
roll
xchg
aas
dec
enter
ret
mov
outsl
loope
pop
push
mov
cltd
mov
insb
mov
fcoms
dec
lods
and
or
add
sbbb
loope
pusha
in
adc
sbb
adc
hlt
enter
pop
popa
fsubl
jp
repz
mov
loope
or
inc
clc
ret
mov
dec
aad
or
jno
jg
mov
jg
sarb
sbb
mov
mov
pop
mov
mov
cltd
fistl
adc
cmpsb
test
jne
mov
adc
mov
sahf
stc
sub
cmp
add
movsb
cli
inc
lock
pop
daa
inc
out
fistps
lret
ljmp
and
sub
ret
imul
mov
ds
fdivr
inc
add
inc
daa
mov
insl
sbb
fsubrp
pop
movsl
push
and
lcall
lds
and
rcrb
in
pop
fildl
add
dec
aad
adc
cli
loope
mov
into
les
and
stos
jnp
and
jmp
jmp
mull
or
push
pop
cmp
jmp
sbb
and
push
xchg
lods
mov
pop
mov
adc
push
ja
inc
cmp
jo
fsubl
mov
movsl
and
stos
aad
aas
jns
and
inc
sbb
push
adc
loop
dec
jl
jp
pusha
cs
test
pop
nop
in
push
and
pop
cwtl
pop
rcrl
or
and
pop
xchg
clc
mov
test
xor
xorl
mov
js
mov
ret
mov
jg
daa
xchg
call
push
mov
push
data16
jecxz
addl
je
mov
insb
mov
jl
aas
xlat
inc
xor
dec
mov
inc
or
aad
xchg
cmp
mov
insl
xchg
or
clc
sbb
popf
jnp
mov
ficompl
jnp
ljmp
xor
mov
ret
pop
std
shrb
cmp
mov
or
mov
fs
cmpsb
cmp
imul
fsubrp
xor
imul
xor
sqrtps
rcr
cwtl
push
sbb
lock
cmp
cmp
mov
test
test
cs
pop
test
push
cmp
les
add
and
outsl
push
dec
inc
int
rcll
jge
add
jmp
cmp
jo
int3
nop
int3
pusha
push
adc
daa
cmpsb
xlat
cmp
mov
adc
aaa
fiaddl
add
and
inc
xor
nop
jg
ss
inc
sbb
add
insl
mov
in
sbb
mov
and
xor
dec
xchg
mov
lock
xor
adc
movsl
mov
bound
pop
jmp
xchg
shll
loope
rol
adc
mov
fldlg2
adcb
imull
pop
pop
mov
pop
or
ss
rcrl
sbb
scas
add
sub
pop
inc
add
incl
xchg
mov
xor
cmpl
push
adc
lock
nop
adcl
and
dec
push
jp
jo
stos
fs
dec
enter
xor
or
aad
out
sbb
push
dec
mov
mov
jbe
fdivrp
mov
mov
pop
dec
xor
push
cs
aad
pop
loopne
subb
cmp
xlat
movsb
mov
icebp
push
adc
js
std
lahf
mov
push
out
pop
lods
mov
notl
das
call
es
inc
adc
jl
push
mov
mulb
les
xchg
push
sbb
lods
stos
sbb
xor
icebp
sub
sbb
lret
and
xchg
push
mov
ret
dec
jp
fnstenv
mov
push
inc
jno
mov
mov
pop
ss
daa
or
jge
divl
sub
mov
cmp
pop
das
ljmp
push
cmp
push
jne
je
mov
inc
cmpsb
mov
lret
sub
into
lret
dec
aam
xor
data16
sub
xchg
in
or
or
stos
xchg
pop
mov
mov
pop
xchg
mov
paddb
stos
jle
cmp
xor
scas
cmpb
popa
add
lods
mov
js
mov
dec
or
orb
sti
or
xchg
adc
les
push
mov
adc
repz
dec
xlat
jle
dec
and
addb
fldenv
xchg
or
sub
cmp
pop
jnp
add
and
addr16
inc
add
push
inc
in
stos
or
and
fsts
pop
jg
or
movsb
hlt
jecxz
pop
and
nop
stos
cmc
jns
scas
fnstsw
jg
or
lret
mov
sbb
cmp
jecxz
aas
imul
jle
lds
jo
int3
push
mov
and
hlt
dec
cli
jmp
pop
add
or
iret
insb
ljmp
stos
jp
xchg
sbb
lret
in
cmp
sub
pop
xor
jnp
cmpsb
imul
scas
push
hlt
push
jle
icebp
insl
daa
mov
out
push
jae
into
jns
adc
cwtl
fs
inc
sub
ds
ret
ret
and
sub
cmc
cmpl
imul
adc
add
adc
adcb
jno
cvtpi2ps
mov
add
shll
xlat
adc
push
jp
dec
pshufw
loope
lds
inc
mov
outsb
ljmp
pushf
popa
aas
add
mov
xchg
cmp
inc
lea
cmp
jecxz
addr16
push
pop
mov
mov
ss
push
push
dec
mov
xorl
jnp
fimull
lock
gs
ficoms
jns
shl
adc
cwtl
out
mov
cmc
and
ds
jae
pop
das
inc
xor
sub
outsb
xchg
je
mov
cmp
ja
cmpsb
stc
inc
cmp
jne
jp
or
mulb
dec
inc
into
test
or
mov
mov
jo
jb
adc
xor
dec
dec
push
into
in
add
in
cmp
xorl
out
lahf
pop
dec
shlb
scas
rolb
mov
sbb
mov
xor
xor
cmpsb
adc
loop
dec
xchg
les
sar
mov
cwtl
loopne
dec
into
popf
rcrb
xor
and
jp
xchg
jge
int
dec
in
dec
fstpt
xchg
pop
sub
push
dec
sbb
dec
gs
int
adc
and
repnz
fisubs
xchg
jle
loop
outsb
adc
nop
push
rcrl
lret
dec
sbb
fsubr
fnstenv
setno
bound
fadds
out
jo
dec
test
mov
dec
movsl
inc
scas
stc
out
cmc
jle
loopne
inc
adc
or
or
jle
pop
pop
jns
mov
test
leave
jnp
xor
cmc
repnz
pop
pop
mov
in
inc
jmp
leave
and
sub
nop
dec
mov
out
and
mov
mov
movsl
ljmp
xchg
sbb
cmpsb
add
jmp
inc
xor
mov
push
loop
fcmovne
loopne
adc
out
or
lahf
xchg
pop
and
shll
mov
cwtl
push
xor
ret
push
repnz
sbb
pshufw
loop
and
push
sbb
sti
jmp
jle
push
dec
push
adc
int
sahf
add
sar
cmc
cmp
xchg
adc
sbb
push
cwtl
leave
test
mov
sahf
inc
or
data16
sbbl
or
jb
push
cmp
pop
jns
add
sbb
jne
outsb
daa
mov
fnstcw
lods
inc
pop
xchg
jg
or
pop
out
jns
test
movsl
and
or
sub
mov
push
lcall
scas
mov
lods
adc
jnp
fldcw
das
fstpl
mov
mov
and
in
pop
int3
cmc
test
adc
rcrb
xchg
xorl
int3
fmulp
loopne
push
popf
cmpsb
sub
dec
roll
and
dec
inc
push
idivl
jns
xchg
fisubrl
in
test
dec
xchg
stc
pusha
in
dec
sbb
sub
push
aam
hlt
push
mov
out
xor
add
dec
shll
push
adc
mov
or
test
insl
mov
cmpsb
add
loopne
add
cmp
jmp
repnz
bound
es
sahf
mov
fmull
movsl
sub
adc
mov
mov
stos
push
ret
popf
out
push
jno
xchg
loope
mov
lock
jo
out
fildl
mov
popa
cwtl
fstpt
xchg
ficoms
imull
adc
in
fwait
aaa
mov
iret
mov
adc
jl
es
cmp
cwtl
in
mov
sbb
jmp
shlb
jae
mov
les
xchg
rcr
subb
mov
mov
loopne
in
mov
nop
push
out
inc
pop
into
xor
mov
pop
mov
fdivrl
sbb
inc
or
pop
inc
and
das
pop
pop
cld
lea
into
mov
xchg
mov
sub
popl
sub
or
lahf
pop
jl
test
jmp
cs
stc
fstpt
cmp
fwait
xchg
sub
push
clc
ja
mov
add
jmp
mov
jl
lods
sub
aad
sub
dec
repnz
mov
xchg
pop
mov
ret
inc
dec
push
pop
xor
rcll
pop
xchg
adc
mov
jne
and
shr
loope
xchg
push
sbb
lds
mov
repnz
mov
mov
mov
dec
pop
inc
ss
aad
ret
pop
popa
lock
mov
sub
jmp
xchg
adc
out
mov
arpl
lahf
push
fisubl
out
xchg
fdivrp
inc
aam
rorl
xchg
push
mov
inc
aaa
adc
pusha
inc
mov
or
cmp
adc
fadds
and
stos
dec
test
ficomps
push
mov
sbb
xrelease
xchg
add
xchg
and
rcll
fsubrl
jmp
into
dec
inc
jge
imul
jb
pop
cmp
jp
popa
adc
movsb
insl
out
aam
or
insl
cmp
or
movhps
sbb
in
nop
sub
sbb
out
inc
lea
into
movsb
jmp
jecxz
add
push
in
pop
mov
bound
scas
sbb
stc
push
adc
aaa
jb
scas
push
scas
inc
testl
push
adc
and
dec
into
mov
roll
jne
xchg
pop
xor
cltd
pop
xor
sbb
lods
out
jge
jmp
mov
out
mov
lods
add
arpl
repnz
movsb
sbb
ret
add
xor
inc
add
jl
add
rol
adc
repnz
lret
xorb
and
fildll
pop
cwtl
mov
sbb
dec
inc
mov
xchg
loop
pop
cwtl
shrl
ja
popa
popa
cmp
data16
jo
in
adcl
pop
mov
in
fdivs
lock
in
add
add
cmp
enter
fisttps
sub
leave
jns
fwait
sbb
jne
cmpsl
stos
rcrl
mov
fs
shl
leave
movsl
movb
jp
pop
loopne
jnp
add
push
mov
jae
ret
dec
popa
push
lret
push
pop
shrb
movsl
lea
fistpl
push
lahf
mov
iret
movsb
negb
inc
jnp
xchg
arpl
sahf
stos
test
xor
outsl
and
mov
inc
adc
adc
pop
jns
push
sbb
push
pop
sbb
popa
cmpb
mov
shlb
stc
dec
fucom
jo
lahf
lea
cmp
jcxz
mov
push
roll
sbb
add
push
mov
pushf
xchg
gs
test
rcrl
mov
mov
mov
ficoml
or
lcall
flds
cld
sub
pop
inc
loopne
mov
jge
and
mov
scas
pusha
pusha
lahf
call
jp
scas
jecxz
std
pop
and
testb
outsl
insl
dec
mov
jns
movsl
daa
shl
insl
mov
add
test
mov
jbe
pop
mov
mov
loopne
stos
push
iret
lcall
out
dec
push
in
cs
mov
dec
dec
mov
inc
mov
lods
add
imul
psrld
mov
roll
aas
sub
jo
push
xchg
push
ficompl
mov
sub
imul
scas
popf
push
mov
in
push
pop
pop
sbb
cltd
rcrb
loop
mov
mov
movsbl
mov
addb
mov
fucom
pop
das
mov
add
ret
mov
xchg
fsubrl
outsb
push
arpl
xor
jnp
popa
cmp
sahf
xchg
dec
fisttpl
jbe
adc
js
stos
cltd
cs
xchg
test
push
imulb
loope
and
push
push
rorl
cmpsb
in
icebp
add
in
fiadds
adc
and
xchg
idivb
mov
shll
imul
cmpsb
clc
cmp
pop
in
xor
adc
push
cmpb
stc
xor
inc
push
test
test
mov
inc
mov
ret
xchg
and
rorl
push
pushf
gs
push
push
and
add
adcb
out
ret
fwait
test
sbb
popf
sub
add
mov
pop
mov
out
cmc
xchg
rclb
int3
dec
lods
imul
xor
std
cmc
roll
mov
jnp
imul
ret
cs
pushf
cltd
and
mov
mov
adc
jae
push
lret
adc
inc
gs
das
shl
and
lret
mov
insl
stos
loopne
outsb
pop
int
and
and
fs
loopne
or
sub
jge
mov
push
xchg
js
addb
pop
mov
in
dec
mov
rol
pop
jne
movsb
mov
cmpsl
ds
jns
xlat
sahf
test
popa
jnp
in
xor
outsb
sbbb
mov
jae
lret
call
mov
add
subl
sti
arpl
xor
or
jne
adc
xchg
fldcw
int
or
shr
and
cmpsl
adc
pop
and
mov
jnp
outsb
cmpsl
mov
dec
jae
aam
sti
aad
ljmp
call
jl
test
stos
divb
or
out
cmp
aam
mov
ljmp
lret
dec
add
lahf
push
add
and
enter
lahf
divb
mov
les
out
iret
push
fcomi
cld
push
cmp
shll
add
rep
mov
jns
fdivs
imul
cltd
xchg
cmp
cmp
notl
das
xor
or
ja
cmp
jb
rol
xor
cmp
dec
into
ja
hlt
lea
xchg
lcall
frstor
jle
call
clc
aam
mov
cmp
popa
xchg
cmpsl
stc
fisubl
sub
popf
lods
test
jne
and
cmp
xlat
imul
xlat
or
cmp
add
fidivs
cli
sbb
push
pop
scas
cmp
lahf
fwait
xlat
jns
xchg
fiaddl
mov
fldz
jae
cmp
sbbb
inc
mov
pop
push
xchg
pop
xor
outsb
fnstenv
push
js
popa
dec
xchg
scas
jno
out
xchg
repnz
cbtw
adc
test
inc
lcall
fidivs
mov
xchg
push
lods
cmp
enter
roll
xor
lds
mov
mov
sbb
mov
mov
jbe
lahf
mov
sti
loopne
loope
js
mov
pop
mov
inc
mov
adc
fs
jg
hlt
dec
aaa
rcr
push
sub
inc
mov
pop
and
inc
inc
addr16
js
aaa
pop
jo
xor
push
loope
push
xor
xchg
lahf
sbb
les
mov
xchg
imul
pop
xor
out
std
adc
sbb
cld
aad
jg
arpl
loop
out
imul
cmp
sbb
or
and
add
dec
outsl
cltd
rcll
js
and
pop
mov
push
mov
repz
ja
mov
negb
cs
gs
mov
and
sbb
out
shrl
filds
pop
sub
in
jge
inc
mov
lds
popl
mov
cltd
pop
loope
test
or
xchg
mov
ficompl
mov
scas
loope
dec
fbld
stos
cwtl
loope
dec
adc
sbbb
or
add
push
inc
xchg
inc
lret
mov
test
xchg
in
adc
fcompl
test
pop
adc
mov
xchg
data16
daa
in
icebp
push
cs
adc
outsb
nop
sti
add
sub
hlt
es
pop
outsl
shrb
ret
jb
xchg
leave
jns
xchg
jnp
sbb
mov
xlat
add
and
and
aas
ret
dec
out
mov
fsub
loopne
sub
mov
fs
mov
jnp
call
jle
jnp
adc
xchg
cmpsl
rcll
das
or
xor
mov
cli
mov
adc
inc
test
into
add
adc
ffree
repz
ret
movsb
xor
sbb
xchg
outsb
hlt
xlat
xchg
into
xchg
or
dec
fsubl
xchg
out
loop
cmp
or
jle
jg
sub
loope
repz
mov
xorb
fisttps
sbb
xchg
add
sti
pop
ret
inc
push
inc
mov
jecxz
push
shrl
push
scas
incl
pop
test
dec
mov
stc
daa
pop
sti
push
xchg
test
dec
call
sub
mov
repz
xchg
adc
fwait
test
mov
lea
in
arpl
add
es
idivb
cmp
sub
mov
push
mov
idiv
and
fs
mov
dec
insb
jg
loop
sub
and
es
adc
out
adc
icebp
sarb
jae
jmp
push
mov
xchg
mov
in
xchg
icebp
mov
cld
sub
insl
dec
mulb
cli
push
int3
out
ret
or
push
mov
inc
iret
imul
jge
jno
sti
subb
push
aaa
sub
sti
loop
or
fdivs
jmp
mov
sub
ja
bswap
adc
or
mov
and
mov
inc
je
int3
lea
and
jae
sbb
shrl
out
adc
popa
in
or
adc
jp
loop
pop
insb
adc
pop
out
adcb
sub
loop
jp
sub
imul
lods
adc
mov
aam
and
hlt
add
mov
pop
test
xlat
push
testb
mov
in
aam
int3
jo
jo
ds
test
fldl
jne
ret
das
dec
pop
inc
fwait
cwtl
pop
pop
or
das
cs
xchg
cli
dec
xchg
notb
out
fs
mov
xchg
pop
add
push
jae
dec
dec
pop
pop
fldt
lret
mov
je
pop
jb
mov
xor
xor
push
mov
cmp
jno
xchg
or
and
jmp
mov
fsub
imul
lea
out
xor
aaa
jbe
std
jg
push
clc
pop
sti
and
int
inc
mov
xchg
stos
fistl
or
and
pusha
rcrl
xor
sbb
fidivs
test
int
add
icebp
xchg
lods
mov
sti
jecxz
ficoms
pusha
aaa
xor
xchg
cld
sub
mov
mov
push
fs
lcall
add
push
cmp
push
mov
mov
outsb
cmpsl
and
sbb
jmp
fs
fsubp
push
mov
xchg
pop
add
add
aas
bound
pop
movsl
sub
arpl
pusha
xchg
psubsw
fcmovnb
mov
call
popf
loop
repz
adc
mov
jbe
lods
out
mov
jecxz
imul
or
ret
lea
xor
push
nop
rcrl
popf
xor
jecxz
cmc
jae
adc
push
and
pop
inc
outsb
dec
cmp
inc
inc
jo
sub
shlb
cmp
ret
pop
xlat
in
popa
movsl
aas
pop
and
scas
jno
push
xor
pop
rcrl
push
xchg
push
int
popa
orl
dec
jge
push
and
jbe
mov
lods
addl
fsub
not
sarb
pop
cmp
xchg
scas
or
leave
sbb
fsubrs
dec
mov
jecxz
push
into
xorl
fsubl
dec
dec
dec
std
test
jmp
int
data16
popa
add
xor
cmpsb
dec
sub
and
mov
out
loope
sahf
mov
add
aad
pop
jbe
xchg
dec
inc
aad
das
nop
inc
mov
clc
je
adc
pop
cwtl
push
sbb
sti
sub
js
les
or
in
mov
push
dec
lret
push
fcmovnbe
add
test
movsb
cmp
inc
and
push
call
lcall
aam
mov
push
rcrl
loop
int
inc
ja
mov
fsubs
mov
sbb
out
sbb
push
sub
push
fbstp
mov
mov
and
rorl
sub
mov
jmp
jns
iret
nop
out
mov
sbb
sahf
imul
and
fs
insl
add
jb
sqrtps
dec
sub
xchg
ret
dec
mov
jle
iret
lret
adcl
add
inc
cmpl
mov
dec
xchg
xchg
call
or
repz
movsl
sarl
mov
and
out
ret
std
sub
jbe
push
pop
inc
dec
and
push
mov
jecxz
inc
sbb
xchg
loop
jg
in
outsl
push
adc
sub
shlb
cli
sub
lea
inc
repnz
jg
dec
lods
les
das
or
push
jnp
inc
pop
ljmp
fdivr
ljmp
pause
sbb
xor
mov
icebp
add
test
dec
sarl
sub
cmp
andl
and
mov
sbb
adc
outsb
into
int
movsb
fnstcw
cld
popa
inc
xor
fstp
and
test
lods
pop
aad
add
lds
iret
into
xchg
ss
xchg
jmp
repnz
shl
daa
mov
imul
dec
int3
rcrb
mov
jge
pop
outsl
pop
jecxz
in
or
andb
pop
dec
das
jge
std
test
mov
push
xchg
push
cmpsl
mov
and
sub
adc
jmp
xor
mov
addr16
subl
mov
xchg
in
mov
jle
cmpsl
mov
sbb
cmp
push
push
xlat
lret
push
ficomps
adc
or
sbb
daa
int
xlat
jle
mov
push
mov
push
neg
jp
pushf
lret
xor
pushf
outsl
mov
cmp
sub
mov
xlat
in
scas
sar
jmp
jle
xchg
rcrb
fsubrl
push
ret
push
les
add
and
stc
je
mov
adc
icebp
enter
xchg
mov
mov
daa
mov
ret
adcb
es
lods
repnz
mov
ret
jge,pn
mov
addb
fwait
adcl
popl
scas
pop
jle
mov
je
loope
fistpll
les
cwtl
js
jg
jg
jge
sub
fwait
dec
fsubs
mov
lret
adc
std
mov
hlt
insb
pop
fcmovb
and
bound
jle
push
cmpsb
or
inc
pop
sub
fs
cmpsl
cld
mov
fs
je
xchg
cmpb
mov
dec
scas
sub
je
mov
pop
call
repz
lar
mov
dec
mov
ja
xor
pop
jp
loope
popa
add
mov
pop
call
pushf
cltd
push
loope
or
clc
outsl
pop
sti
adcl
inc
je
xchg
in
stos
pop
mov
mov
jns
lea
xchg
sti
cli
movsb
and
mov
mov
cli
test
pushf
pop
pop
lock
inc
pop
mov
cmp
or
les
fimuls
sub
pop
icebp
jbe
ficoml
add
or
inc
mov
and
pop
and
lcall
divl
xchg
js
and
ret
mov
cmpsl
scas
rcrl
adc
inc
sub
dec
xor
sahf
dec
mov
leave
mov
add
jp
and
movsl
loopne
xchg
ja
adc
add
jae
in
mov
sbb
addl
mov
add
dec
decl
inc
arpl
sbb
ss
or
stos
sbb
fldl
loope
inc
jbe
adc
xor
adc
sub
bound
xchg
testl
push
push
in
lcall
pop
add
sbb
out
jge
jb
adc
push
xor
dec
jl
dec
daa
lds
or
test
addr16
adc
decb
xor
lods
jns
cmp
adc
cmp
cmpl
mov
int
sti
adc
and
and
stos
or
sbb
call
rorb
lods
sbb
arpl
xchg
fisubl
mov
add
jbe
stos
or
adc
test
popa
cmp
sub
dec
and
addr16
inc
mov
sti
jl
loopne
popf
mov
daa
lods
punpcklbw
es
sub
dec
cmp
sbb
fisubrs
dec
xorb
enter
push
jge
push
sbbb
or
je
lret
sub
repnz
ficomps
test
dec
jg
out
hlt
orl
mov
adc
loopne
push
push
mov
outsb
xlat
ret
sar
mov
mov
sti
testb
or
push
test
xchg
loope
das
sti
cmp
jg
sbb
mov
dec
test
add
dec
incb
movsb
jecxz
pop
pop
shll
jecxz
push
xchg
test
jae
adc
jmp
mov
fcoml
pop
mov
jbe
mov
push
fimull
dec
cmpsl
dec
insl
pop
xchg
and
sti
outsl
add
cli
clc
sahf
fstps
out
test
stos
jmp
sbb
and
adc
and
add
sbb
push
pop
scas
cmp
inc
addr16
or
lock
dec
pop
xchg
testl
cli
lret
mov
cmpsb
pop
out
fisubrl
jbe
aad
sbb
dec
jbe
add
loop
adc
push
inc
push
cli
jnp
push
cs
pusha
xchg
bound
outsb
in
mov
jns
sub
jmp
popf
scas
insl
ljmp
xchg
lds
ds
add
ja
mov
pop
out
cmp
loope
insl
inc
ficompl
cmp
repnz
mov
xchg
in
push
pop
out
sahf
mov
pop
fs
jns
cltd
adc
loopne
cmp
cwtl
int3
mov
or
fcos
js
fcompl
and
sub
inc
pop
or
mov
and
push
iret
xchg
lret
int
movsb
hlt
xchg
loop
mov
mov
mov
pop
jle
test
das
sub
rol
cltd
testb
xchg
movsb
add
cmpsl
divl
mov
push
pop
dec
cmp
dec
pusha
das
ret
or
stos
rolb
inc
mov
outsb
add
cmp
sti
dec
pusha
xlat
xchg
jns
icebp
pop
sbb
xchg
mov
incl
outsb
into
jne
dec
dec
mov
flds
or
mov
adc
stc
notl
xchg
adc
aam
xchg
shr
xor
push
aas
outsl
push
lcall
sbb
push
inc
stc
and
jb
repz
cmp
and
push
aaa
stc
cmp
fldt
sub
jns
fistpl
xchg
das
inc
movsb
pop
push
nop
mov
cmpsl
arpl
inc
lods
xor
data16
clc
es
sbb
push
mov
scas
xchg
sbb
jnp
in
roll
sub
pop
mov
jnp
inc
lcall
push
gs
dec
cmpsl
mov
inc
xor
xchg
aaa
rcr
or
xor
push
xchg
filds
in
mov
push
stos
mov
sub
scas
dec
push
movsb
arpl
sbb
or
imul
mov
lock
dec
subl
je
test
test
out
inc
aaa
fimull
movsb
add
loopne
inc
dec
add
dec
push
adc
jg
mov
shl
pop
ss
sbb
jnp
lds
adc
cmpsb
sub
xchg
mov
lock
mov
push
mov
mov
pusha
push
imul
fucomi
sbb
cmpsb
ja
dec
jmp
push
xchg
fmull
das
lea
outsb
ret
pmulhw
xchg
cs
lds
hlt
loopne
rolb
jnp
jb
imul
add
jno
lock
lret
aas
xor
adc
call
imul
call
mov
into
outsl
push
hlt
enter
int3
dec
gs
js
xchg
add
or
jae
mov
pusha
sarb
inc
fnstsw
mov
scas
push
mov
push
mov
mov
add
test
cmpsl
mov
pop
out
outsb
mov
movsb
and
inc
cmpsl
lock
rolb
pop
stos
sbb
notb
in
sub
xchg
jmp
xor
xor
push
clc
fiadds
cmp
or
cwtl
idivl
add
andl
inc
cltd
xchg
xchg
sub
mov
insl
clc
ja
lcall
lods
mov
cld
rcrl
jno
iret
loop
mov
divb
jmp
dec
and
jecxz
cmc
iret
sub
stos
shll
push
cmp
aas
adc
and
lret
test
cmp
mov
xchg
and
xchg
mov
ja
add
dec
mov
inc
scas
call
xchg
sbb
mov
rorl
scas
cmpsl
xchg
lret
sub
mov
arpl
mov
inc
repnz
clc
rorl
sbb
mov
or
inc
jbe
test
das
daa
cwtl
xor
or
pop
sahf
add
insl
cmp
and
test
es
push
popf
or
rcrl
adc
loopne
mov
in
cmpsb
cltd
aas
mov
pop
mov
pop
mov
pop
out
cmp
sub
adc
les
jae
xor
fstps
cmp
pop
popf
jbe
push
xor
sbb
cltd
inc
loope
xor
outsb
mov
fisttps
ret
or
or
push
jg
rcrb
jmp
push
adc
in
xor
adc
sub
in
ret
out
dec
and
inc
cmp
push
mov
daa
inc
dec
out
dec
cltd
ret
mov
add
adc
inc
mov
inc
pop
lds
xchg
sti
inc
lea
dec
xor
xor
xchg
mov
jmp
mov
mov
or
push
dec
push
cld
icebp
mov
fsubs
jmp
rorl
movsl
add
xor
sbb
repz
cld
sub
out
mov
push
dec
cmpsl
sarl
push
sub
sub
push
dec
push
frstor
dec
xchg
sbb
mov
js
jmp
shrl
mov
pop
sarb
or
inc
push
int
lods
out
add
cmpsl
je
loopne
push
ss
fcmovnb
fisubrs
pusha
mov
mov
mov
lcall
xor
push
sub
mov
mov
jmp
movsl
int3
leave
or
and
and
cwtl
inc
mov
repnz
rolb
xchg
cld
and
ret
repz
push
mov
sbb
aas
or
dec
popa
test
adc
cmp
test
xor
mov
cmp
test
dec
stc
ljmp
push
mov
push
push
cmpsb
push
jmp
dec
cmp
sbb
jp
scas
fisttpll
arpl
out
lea
mov
inc
cli
aaa
sar
pop
fcoms
shll
in
movsl
dec
pop
xlat
lea
mov
test
les
inc
mov
mov
mov
je
int3
in
bound
scas
inc
ret
in
inc
adc
into
adc
out
incb
xchg
lods
dec
roll
into
outsb
loop
pop
mov
pushf
js
ret
ficompl
pop
mov
mov
jmp
inc
push
cmp
inc
sub
out
jl
pop
xchg
int
mov
mov
adc
xchg
adc
xchg
repz
pushf
jno
mov
and
jne
dec
xchg
mov
or
dec
in
ss
sub
dec
xor
mov
sub
loope
out
cmp
call
and
mov
fsubrs
and
dec
pop
jmp
jbe
xchg
pop
in
jbe
loopne
mov
cmp
int
shl
dec
sub
jne
mov
popa
les
shr
cmpsb
xchg
fwait
leave
aam
loope
jge,pn
lea
dec
sub
call
notb
push
dec
dec
out
xor
pop
jae
mov
rclb
sub
shrb
cmpsl
loopne
das
pop
or
jge
mov
into
out
fisttpl
mov
or
out
rolb
inc
push
adc
outsb
aam
stos
and
pop
or
or
rclb
push
inc
outsb
jle
mulb
fidivrs
mov
jmp
incl
ds
cmp
das
xchg
inc
icebp
aaa
mov
inc
lds
mov
xchg
scas
jnp
stos
cltd
test
js
gs
sub
lret
out
mov
xchg
into
out
ljmp
and
mov
in
jbe
lahf
rorb
addr16
and
inc
jb
scas
lahf
pop
push
fisubrl
out
jle
or
sbb
repz
fwait
jge
or
es
or
adc
test
jmp
pusha
push
jbe
sti
jge
pop
add
test
fadd
mov
cmpsl
fsts
push
clc
mov
popa
rorl
sub
scas
test
push
mov
jmp
xlat
sub
in
addr16
cmp
add
or
or
jp
push
jg
xchg
sub
cld
cmp
mov
fsubp
clc
jae
mov
outsl
jnp
or
mov
dec
xor
or
inc
jg
fwait
dec
and
sbb
fidivrl
pop
dec
std
lock
mov
nop
stc
out
mov
outsl
popf
add
out
dec
into
out
or
fisttps
lahf
or
adc
imul
jmp
push
shr
and
lea
xor
inc
xchg
sub
pop
imul
push
xchg
rorb
gs
sub
popf
adc
jmp
addb
arpl
ret
repz
jecxz
xor
ljmp
ds
cmpsb
in
dec
daa
rol
mulb
mov
push
jmp
and
xchg
jp
repnz
out
mov
pushf
cmp
or
push
std
fcompl
int
lock
mov
pop
xchg
loopne
pop
inc
daa
aaa
test
enter
pusha
sbb
les
cwtl
mov
xor
arpl
mov
iret
fidivrs
add
aaa
dec
nop
and
incl
jp
mov
xor
jae
mov
dec
cmp
in
jbe
jns
jb
nop
movsl
or
and
aas
add
adc
cmp
xchg
mov
jl
mov
fnstcw
adc
add
pop
lret
ja
xchg
cmpsb
pop
in
jo
icebp
sub
ss
sub
dec
cmp
nop
inc
pop
or
mov
clc
lahf
mov
sub
sbb
inc
fisubs
popa
adc
cmp
sbbl
frstor
mulb
call
cmp
out
push
fadd
sub
dec
push
inc
cmp
in
or
aas
adc
mov
cmpsb
add
subb
loopne
stos
mov
jnp
and
jo
push
xlat
lret
jae
mov
fwait
xchg
repz
and
pop
cmp
xchg
or
jmp
mov
movsl
add
mov
test
xchg
int
sub
mov
xchg
imul
mov
movsl
inc
pusha
sbb
iret
insb
mov
clc
or
mov
sti
and
push
sub
jmp
mov
pop
add
mov
adcb
out
pop
cmc
mov
mov
sub
pop
jge
loope
mov
outsb
mov
ficomps
movsl
push
pop
and
adcl
ss
out
pushf
add
or
pop
pop
jne
pop
inc
cli
lahf
and
sub
in
mov
inc
int3
mov
insl
and
push
mov
outsl
in
inc
out
dec
aad
push
mov
mov
xchg
orb
aam
push
mov
mov
icebp
xor
push
and
sbb
push
mov
aad
rclb
nop
sub
sbb
dec
push
sbb
mov
fisttpl
js
add
push
outsb
fs
sub
lods
mov
ja
loope
cltd
sbb
sbb
sbb
jl
and
orl
scas
bound
pop
test
xor
sub
pop
gs
mov
scas
sbb
sbb
sub
cmp
pushf
mov
incl
in
or
and
clc
in
jbe
cli
inc
mov
jb
fdivrs
and
adc
dec
pop
in
fisubrl
mov
int
add
add
push
cmp
stc
loop
pusha
inc
imul
adc
ljmp
clc
out
add
es
insl
int
xchg
out
and
push
cmp
fwait
xor
popf
daa
push
adc
int
add
movsl
sub
in
mov
mov
push
mov
add
negl
pop
ja
xchg
int
jmp
jl
sub
or
xchg
jge
dec
sbb
lahf
dec
or
jp
imul
testb
add
adc
sbb
rolb
xchg
inc
arpl
fdivr
inc
mov
xchg
jg
fldenv
lahf
sbb
sbb
ss
ljmp
jmp
push
out
mov
iret
add
pusha
pop
mov
notl
out
xor
std
push
fists
xor
ja
das
mov
pop
test
or
pop
fs
mov
push
aaa
sahf
cmpsl
sub
pop
xchg
sub
js
push
testb
mov
sahf
popf
or
add
clc
mov
mov
sub
notb
jmp
faddl
xor
loopne
sub
sub
scas
inc
aad
pop
xlat
cmc
mov
sbb
orl
cmc
dec
aas
repnz
sbb
jne
shll
cltd
insb
ficompl
jmp
popf
xchg
and
outsb
sub
mov
xor
push
cltd
cmp
mov
xchg
aas
jge
je
mov
adcb
in
dec
inc
and
add
inc
loopne
dec
dec
mov
lock
adc
shlb
xor
and
or
mov
mov
call
jp
fs
jne
add
sub
push
mov
xor
mov
xor
cmp
mov
cmp
std
imul
fcmovnb
loope
fdivs
in
imul
push
fmull
insl
and
and
dec
xor
dec
fmulp
add
lods
mov
push
lock
int
aaa
in
lock
sub
fldcw
shrl
cmp
je
pop
jns
jno
add
and
jb
mov
pop
outsl
pop
dec
aaa
pop
rorb
adc
pop
xchg
call
mov
ret
mov
orb
cmp
lret
sahf
in
aaa
or
fsts
push
mov
jg
jne
xlat
leave
fdivp
arpl
mov
mov
cmp
sub
cld
pop
lock
imulb
aam
push
add
adc
and
cmp
cmp
and
scas
or
aas
push
not
cmp
adc
clc
test
orl
rorl
ds
cmp
bound
cmp
cmp
xor
add
cmp
inc
stos
cmc
jl
out
sub
push
or
sbb
loop
lods
lret
aaa
insl
lea
stos
add
in
clc
or
cli
es
mov
mov
pusha
push
and
out
sub
mov
lods
mov
pop
cmpsl
bnd
stos
cmp
pop
or
pop
lret
sub
xchg
jge
or
lcall
test
dec
pop
cs
pop
mov
dec
mov
data16
enter
xchg
stc
std
nop
pop
imul
pushf
and
sbb
add
dec
movsb
sahf
sbb
out
and
pop
sbb
inc
cs
push
mov
cmp
mov
or
add
arpl
inc
ret
jne
hlt
lcall
pop
arpl
dec
pop
sub
xorl
popf
mov
and
jp
pop
sbb
rcrl
jae
push
shlb
or
sahf
adc
ja
jg
cwtl
pop
add
repnz
sti
inc
add
add
fstps
jge
movsl
inc
cmpl
imull
aad
sbb
rcrb
xchg
dec
add
mov
in
mov
insb
insb
xor
push
lock
sahf
repz
rolb
pop
xchg
push
jne
lds
sub
mov
insb
fsts
mov
scas
negb
mov
testl
xchg
lods
adc
push
stc
push
jg
test
ja
ffree
dec
sbb
add
gs
leave
cli
jbe
dec
pop
or
push
sub
jb
data16
popf
adc
jae
jnp
dec
int3
xchg
bound
in
mov
in
pop
jge
mov
ljmp
push
sahf
jno
into
gs
popf
mov
lcall
outsl
pop
dec
in
pop
pop
nop
test
mov
mov
dec
cmp
nop
loopne
and
add
pop
pushf
ret
out
xor
repz
in
jo
je
fcompl
scas
adc
pop
cld
sbb
xlat
cwtl
adc
sahf
bound
repz
jge
fimuls
xchg
mov
sub
cmp
fstl
clc
out
fbstp
xlat
vmovss
lret
mov
lock
mov
fcomi
js
insb
push
lods
std
push
add
into
mov
mov
adc
xchg
pop
mov
or
inc
adc
or
jl
adc
aaa
adc
shll
cmp
aas
pop
pop
iret
inc
sahf
push
mov
andb
fiaddl
imul
inc
cs
in
stos
cmp
rcrl
test
test
incl
dec
jp
lods
outsl
pushf
fsub
push
adc
push
add
add
push
inc
insl
inc
or
clc
pop
pop
mov
mov
cmp
lods
roll
inc
or
fstl
adc
sub
pushf
push
cmpsb
lahf
xchg
cmp
pop
adc
mov
add
ja
push
fidivl
mov
test
xchg
std
and
outsl
in
cmpsl
ret
mov
and
test
popf
adc
mov
out
lds
mov
lds
sahf
mov
lds
into
mov
cwtl
xchg
or
inc
or
and
out
cmp
mov
ror
clc
sub
jo
cmp
mov
push
popf
xchg
cld
je
xor
test
jns
popf
add
cmc
or
pop
cltd
cltd
popf
push
jb
pop
mov
test
push
or
xchg
mov
inc
jmp
xchg
pop
mov
pop
out
lock
mov
pop
sbb
xchg
mov
js
stos
sti
cmc
mov
sub
sub
xchg
sub
lahf
xor
mov
mov
xor
dec
ret
sub
mov
inc
mov
iret
jnp
xor
pop
jb
pop
fcmove
sahf
xor
jg
iret
mov
ja
call
pop
inc
fistpl
ja
or
dec
xchg
stos
out
push
ret
dec
xchg
add
jecxz
inc
cli
mov
add
pop
fprem
jne
lret
jle
adc
xchg
mov
mov
outsb
sbb
icebp
xchg
pop
test
pop
icebp
lds
jmp
outsl
mov
pop
fwait
test
sub
or
fs
in
xchg
cmp
mov
push
es
push
xor
inc
xchg
mov
inc
xchg
mov
nop
pop
cmpsb
test
loopne
imul
pop
ficomps
mov
mov
lahf
xchg
movsb
call
lds
iret
adc
adc
jle,pn
mov
push
stc
pop
add
xchg
pop
stos
leave
mov
or
pop
inc
xchg
rcll
pop
outsl
sub
cs
lahf
jmp
xor
shl
inc
jne
cli
idiv
inc
dec
movsl
mov
jbe
pop
sbb
xchg
jle
ret
cmp
sarl
and
dec
sbb
add
add
pushf
jnp
std
out
sbb
scas
push
mov
jae
inc
sahf
jno
loopne
mov
dec
fdivrl
jp,pt
int3
dec
shrb
push
test
data16
mov
adc
jmp
pushf
fdivl
cmp
adc
and
ss
int3
sbb
jo
push
aas
jp
push
and
lods
mov
pop
jmp
aad
rep
push
dec
popf
mov
mov
jmp
push
outsl
push
adc
pop
and
mov
cmp
jns
jo
arpl
mov
jne
push
cmp
and
dec
out
push
loopew
cwtl
cmp
in
out
mov
fyl2xp1
pop
jmp
in
or
and
and
mov
icebp
enter
cmpb
les
push
adc
xor
out
inc
sbb
jnp
lahf
loop
imul
inc
jb
and
hlt
insl
aam
sbb
jns
mov
fistpl
push
fidivs
stc
inc
push
mov
es
data16
xchg
shlb
rcll
dec
xor
scas
or
cld
xchg
shrb
push
idivb
mov
ss
xor
scas
mov
jle
decl
test
sbb
add
out
and
stc
call
xchg
xchg
jl
int
adc
lret
test
mov
ret
enter
mov
rcrl
jo
pop
fsts
mov
cmp
mov
sbb
iret
outsb
pop
mov
and
pop
test
lret
xchg
or
movsl
insl
push
xorb
cld
fstps
stos
jecxz
xchg
and
repz
or
cld
or
mov
aas
jmp
leave
int
mov
movsb
loopne
push
daa
inc
nop
lods
sbb
std
mov
addl
loop
inc
mov
xchg
sub
out
loope
mov
fwait
enter
mov
jg
arpl
jo
or
stos
loop
psrlq
nop
ret
jmp
adc
sbbl
and
shlb
shll
mov
dec
lea
jp
push
or
les
inc
cmp
notl
mov
jns
xor
inc
lret
bound
sbb
push
and
sbb
add
adc
and
test
cmp
cmp
cmpsb
les
sub
shrb
notb
push
add
dec
lret
insl
scas
push
xchg
cmp
inc
gs
lods
inc
cmp
sbb
loopne
or
and
sub
sbb
stc
in
xor
scas
or
in
push
fidivl
cmp
add
test
pop
sbb
lret
jnp
xchg
add
dec
aaa
mov
test
push
fmul
icebp
shr
push
call
mov
into
out
int3
lock
mov
sbb
mov
fisttps
lea
ret
pushf
imul
in
dec
movsl
pmaxub
fdivrp
and
loopne
push
xchg
mov
dec
mov
mul
aam
je
mov
pop
sbb
pop
pop
mov
dec
cld
mov
cmp
mov
dec
inc
inc
imul
je
mov
arpl
adc
mov
mov
lods
xorl
xor
pop
stos
out
loopne
xor
xlat
cmc
add
or
lret
movsl
loope
popa
cld
lds
rcl
rcll
shll
popf
decl
jnp
repz
fldenv
jle
shlb
xlat
dec
xchg
jecxz
popf
fwait
mov
loope
in
xchg
xor
xor
push
js
stos
jno
xchg
inc
mov
mov
bound
add
xchg
test
and
scas
dec
or
sbb
and
jbe
shrb
jl
std
call
and
or
ds
adc
add
push
adc
cli
mov
cmc
fisubrl
imul
mov
es
pushl
cmpsl
mov
push
jle
lcall
nop
and
cmpsl
jmp
jae
mov
sub
inc
lcall
lea
pop
inc
sbb
cmpsb
xchg
lea
add
into
bound
mov
adc
mov
pop
shlb
push
inc
pop
push
lods
cmc
int
ret
xchg
mov
jmp
aas
xor
inc
push
dec
sub
fdiv
adc
sbb
insb
leave
push
adc
ficomps
pop
cmp
xchg
in
jge
sbb
loop
fimuls
adc
or
outsb
mov
insl
test
xlat
cs
test
adc
sub
lock
jge
push
add
cld
pop
dec
pop
aaa
cmp
xchg
xchg
cltd
mov
rcl
xchg
xor
lea
adc
in
jbe
add
or
xor
in
imul
inc
mov
shlb
xor
incb
mov
xor
ljmp
xchg
xor
loope
xlat
das
in
je
pop
mov
and
leave
aad
out
xchg
fmull
mov
xchg
test
push
jae
jl
scas
sub
fisttpl
xchg
imul
sar
xor
jle
cmp
pusha
repz
lahf
loopne
movsl
cld
lcall
sti
adc
imul
in
out
ffreep
fisubl
push
es
jae
and
mov
aad
dec
cmp
ret
mov
stc
dec
sahf
cmp
push
call
sub
loope
decl
call
pusha
rcr
mov
rcll
shrl
jno
pushf
les
and
in
bound
push
or
or
scas
xchg
push
stos
out
jle
push
push
aaa
cmp
es
mov
lret
and
mov
shl
gs
sbb
push
and
cmpsb
adc
xor
inc
js
jg
xchg
dec
jne
out
fisttpl
jns
mov
lods
lock
out
jl
xchg
stos
sbb
xchg
lods
lret
lods
mov
repnz
rcrb
sbb
push
xchg
mov
iret
jno
fsubl
jne
cmp
dec
xchg
jl
xor
xlat
jbe
cmp
loopne
mov
aaa
and
dec
jno
fwait
stc
jle
mov
fs
sbb
add
shl
fistl
adc
xor
lock
jae
jmp
fisttps
ret
and
es
xchg
scas
mov
mov
sarl
movsl
rcll
mov
dec
push
push
jns
je
and
stos
jge
and
in
push
test
scas
jmp
enter
out
mov
outsl
or
mov
pop
mov
ja
out
or
push
pop
clc
dec
lods
stc
filds
aad
mov
jmp
gs
jnp
jp
sbb
mov
add
cltd
sbb
sti
cmc
and
hlt
jg
es
lds
push
loop
fnsetpm(287
sbb
lods
std
loopne
or
in
pop
cmp
popf
stos
fsub
leave
pop
mov
popa
or
les
cmp
loope
push
sbb
fwait
inc
aam
adc
movsl
jnp
sub
popa
bnd
push
iret
shll
scas
iret
sbb
push
daa
es
add
cmp
ffree
pop
sbb
mov
cmp
push
push
ret
push
or
xchg
push
mov
subb
pushf
int3
enter
sbb
jb
std
jp
in
mov
jecxz
lahf
mov
jge
std
cmp
jge
dec
addb
cmp
int
xor
pop
ljmp
mov
repz
and
sub
mov
cmp
sbb
ljmp
lds
dec
out
es
sbb
sub
or
loopne
ja
push
cmp
mov
sub
mov
sub
stc
jbe
mov
imul
daa
push
sbb
pop
loopne
xchg
stos
inc
push
mov
stc
dec
cmc
add
mov
jbe
mov
sbb
mov
sub
into
mov
xor
jmp
pop
mov
cmpsb
sahf
pop
mov
cmp
imul
or
iret
shrb
clc
leave
sub
and
imul
push
xchg
dec
fcmovnbe
lock
xchg
and
aaa
lods
shr
and
push
mov
mov
sarb
sub
mov
test
ss
aaa
out
jecxz
int3
sbb
mov
cmpsb
cwtl
pop
movsl
cltd
adc
add
sub
jnp
push
sbb
mov
dec
mov
repnz
test
xlat
je
in
xor
mov
repz
adc
push
rol
fcoms
cmpsl
out
fldcw
fs
out
rorb
jge
sbb
insb
xor
xchg
fidivrs
mov
xlat
cmp
in
push
dec
lods
test
xlat
int3
or
cmp
ljmp
mov
pop
mov
pop
jg
hlt
sub
stc
repz
or
std
mov
aas
std
jbe
add
push
in
pop
mov
mov
movsb
jnp
mov
dec
insl
dec
dec
push
cltd
jp
femms
fmul
push
sbb
push
or
pop
and
add
dec
mov
mov
mov
or
jp
jae
jne
icebp
mov
sbb
enter
adc
loop
idivl
push
adc
inc
mov
mov
cld
mov
jl
inc
and
out
ja
add
push
push
jno
mov
pop
cmp
ss
mov
mov
sbb
xor
stos
js
pushf
daa
dec
inc
xor
mov
add
repnz
and
fildl
pop
mov
jae
inc
sub
pop
stos
das
push
sub
mov
loopne
adc
adc
stos
cwtl
xlat
dec
int
mov
add
mov
hlt
sub
das
and
ss
adc
ljmp
xor
jg
add
ret
xchg
xchg
nop
mov
fsts
fsubs
icebp
xchg
mov
inc
dec
pop
xchg
sub
xchg
mov
sbb
adc
xor
mov
sbb
gs
or
cmp
jnp
xchg
nop
std
sbb
stc
jno
jbe
mov
loope
jmp
pop
xchg
dec
jno
testl
je
lret
enterw
aad
clc
xor
outsb
and
gs
imul
dec
ljmp
jne
fisubrs
lods
popf
inc
stos
pop
push
imul
imul
cmp
xchg
fcmovnb
and
xor
es
mov
mov
lret
cmpsb
das
js
mov
adc
idivb
lds
dec
push
data16
stos
cld
mov
daa
lock
cmp
cmp
adc
ret
xorl
jae
xchg
mov
push
test
push
aam
jbe
int
popa
xlat
lahf
out
cmpsb
xor
dec
fistl
out
mov
fldenv
cmpsb
adc
sub
sub
das
sbb
mov
out
mov
adc
inc
and
push
push
ficoms
mov
sbb
adcb
jnp
loopne
pop
mov
mov
jmp
mov
cmp
or
cmp
cmpsb
xor
enter
xchg
aad
push
sub
pop
pop
xchg
addl
mov
shl
jmp
add
jge
xchg
mov
mov
test
in
jb
stos
mov
lret
lea
jb
mov
or
jb
shl
lret
inc
pop
bound
stc
imul
js
mov
jge
lock
add
add
stos
sbb
and
js
fdivp
stc
adc
shlb
xor
scas
sub
ss
adc
mov
mov
seto
jno
xchg
fldl
ret
push
loopne
mov
cmp
mull
imul
mov
movsl
out
sbb
adc
cmp
and
movsb
adc
cltd
adc
or
xor
sub
addr16
pop
dec
dec
out
nop
push
bound
inc
sti
xor
stos
push
cmp
jno
in
inc
repz
call
mov
in
icebp
popf
pop
xchg
movl
xchg
pop
lahf
jecxz
jnp
iret
add
lcall
lods
iret
popa
jne
dec
and
pop
push
or
mov
jp
jo
jns
ffreep
shrb
mov
mov
jp
ror
inc
cmp
ja
mov
dec
push
cmp
subl
inc
dec
xchg
and
push
ffreep
and
push
mov
clc
es
push
stos
push
sub
push
ror
ficompl
inc
lock
in
fnstcw
cmp
lcall
push
lahf
sub
push
jns
fbld
mov
cmc
scas
out
hlt
push
ffree
out
jp
jmp
outsl
les
push
cwtl
and
mov
mov
mov
mov
daa
sbb
mov
or
mov
rorb
sub
mov
lcall
rcrb
movaps
lcall
jmp
jmp
or
push
xor
pushf
pop
sbb
test
xchg
pop
cwtl
bound
ds
and
popa
adc
rcrb
mov
pop
mov
mov
cli
push
and
sahf
xorl
dec
push
add
jg
add
loope
popa
fwait
es
inc
imul
mov
sbb
sbbb
xchg
sbb
jo
sbb
shl
mov
cwtl
shll
or
sbb
out
shrl
mov
adc
call
jl
fwait
mov
nop
ret
in
repnz
pop
pushf
jne
sti
outsl
data16
pop
add
jmp
sbb
pop
dec
dec
hlt
jae
adc
jp
in
pop
jbe
imul
fisubl
lea
sub
mov
mov
add
sbb
loop
push
jg
ds
les
insl
addr16
push
adc
adcb
fsub
xor
int3
je
test
xchg
push
inc
jmp
lods
sti
mov
in
and
js
xchg
xchg
adc
mov
inc
ss
js
aad
mov
inc
aam
movsl
adc
dec
out
mov
repnz
repnz
mov
out
cs
es
test
imul
fisubrs
adc
push
and
mov
and
movsb
pushf
jmp
aam
leave
sti
push
stc
data16
add
imul
cld
ret
sti
fidivrl
jbe
rcrb
or
lods
loopne
js
test
jmp
pusha
fimuls
rcll
dec
jo
dec
push
jp
mov
inc
push
add
ss
mov
call
sub
mov
or
icebp
je
popf
mov
pop
pushf
push
xchg
and
cmp
cld
xchg
xor
or
out
into
sub
xor
jb
push
xor
sbb
in
daa
mov
and
test
sub
add
pushl
xchg
ret
je
mov
pop
adc
jg
aad
sub
and
in
cld
into
aad
jno
pop
punpckldq
mov
jno
adc
pop
sub
cmp
sub
mov
inc
xlat
loop
loop
cmp
push
mov
or
gs
dec
stos
sbb
movsl
in
adc
leave
jne
xchg
or
aaa
jle
shlb
out
popf
call
popa
jno
fs
jp
psubsw
xlat
cmp
cmpsb
jnp
jne
and
mov
arpl
pop
xor
and
bound
sbb
pop
js
and
adc
dec
mov
inc
in
jle
xchg
in
sarl
mov
mov
out
cmp
jg
int
sub
jns
loop
sbb
dec
daa
cli
dec
cwtl
call
mov
sub
add
and
mov
adc
insb
loopne
aas
and
fldl
xor
aaa
loopne
jg
imul
out
aaa
lock
pop
scas
aam
mov
pop
mov
push
test
sarb
fsubs
shlb
adc
iret
dec
mov
sbb
mov
fdivl
sahf
and
enter
imul
repz
mov
out
ja
in
add
lods
inc
int3
xchg
scas
repnz
push
loope
and
stos
icebp
cmc
xchg
push
loope
mov
and
lret
sub
mov
jo
hlt
jb
les
out
adc
stos
xor
cmpsl
push
jns
jle
jp
loop
adc
dec
bound
or
gs
and
adc
push
jne
cwtl
rorb
fisubs
mov
dec
sub
lret
lods
sbb
jp
pop
push
xchg
inc
sahf
sub
push
mov
sahf
mov
pop
cmpsl
repnz
add
cmp
mov
adc
or
dec
sub
mov
push
aam
mov
lcall
lods
arpl
popa
fucomi
loop
sub
sbb
push
js
mov
add
les
xchg
xchg
das
out
rorb
mov
movsb
notb
add
add
cmp
test
inc
fstps
sbb
incb
repnz
and
mov
add
rcll
lret
dec
insl
lock
mov
mov
daa
out
aad
mov
in
cld
and
add
outsl
sti
jl
add
idivb
xor
shr
insl
ret
xchg
push
lret
mov
adc
sbb
mov
add
fstp
sysret
int
or
xor
nop
fcoml
push
mov
mov
gs
in
cmp
movsb
xor
push
push
clc
mov
clc
xchg
push
movsl
ret
cld
cmp
js
pushf
lahf
push
je
mov
pushf
ja
pop
xchg
mov
mov
add
push
icebp
jns
mov
lock
inc
adc
jne
mov
mov
movsb
andl
xor
push
je
out
sbb
or
nop
insb
adc
mov
xor
in
inc
mov
jecxz
xchg
rorb
daa
mov
cmc
hlt
test
and
pop
jo
jmp
dec
inc
push
push
icebp
leave
jae
incb
pop
sbb
xchg
lods
popa
scas
jae
addl
xor
mov
lahf
xor
mov
les
and
jne
int3
jne
add
mov
jle
icebp
xchg
test
push
out
outsl
jmp
outsl
xor
lds
mov
ja
lret
xchg
inc
lret
hlt
lock
repnz
movsb
fwait
lea
cs
or
clc
repz
fld
xor
xor
in
pop
mov
fcompl
hlt
pop
pop
out
out
das
cmp
cmpsb
into
cwtl
leave
daa
mov
fistpl
fdivl
adc
enter
in
pop
aad
mov
out
push
outsl
add
cmpb
xchg
xchg
stos
push
arpl
iret
out
jnp
lret
or
clc
jb
push
add
inc
xchg
sub
movsl
pop
pop
clc
cli
xchg
xchg
push
push
les
mov
cmp
add
and
lcall
mov
pop
cltd
test
sbb
jo
and
push
mov
cmpsl
cmp
pop
dec
and
loop
inc
dec
popf
or
push
div
cs
popf
xlat
insl
adc
movsb
jle
out
pop
ror
icebp
dec
fistpl
mov
pop
lock
jne
add
xchg
std
cmp
aaa
lret
mov
jae
es
and
add
in
dec
ret
out
dec
roll
mov
leave
mov
negb
xchg
cmp
mov
jl
sub
jo
jmp
insb
mov
or
in
push
call
lret
cs
jp
rcrb
pop
in
aad
mov
lahf
and
fstps
mov
or
push
sub
sahf
ret
loopew
mov
test
fists
rcrl
fdivr
aam
xor
jbe
icebp
daa
out
cmp
add
mov
idivb
dec
ds
pop
and
insl
lods
fnsave
mov
pop
inc
das
ljmp
lret
mov
and
or
int
cmp
cmpsl
imul
adc
filds
subl
xchg
jp
ss
inc
push
add
xchg
pop
in
mov
outsb
sti
lret
pusha
push
pop
xchg
xchg
imul
popf
sbb
test
cmp
push
cmp
stc
in
and
fwait
xchg
pop
mov
mov
aas
lahf
mov
lods
inc
mov
stc
mov
xlat
cwtl
add
fs
ss
outsl
push
out
and
dec
es
xor
lods
mov
or
int
add
mov
cmp
stc
dec
mov
mov
dec
mov
cs
loopne
add
mov
ja,pt
push
adc
xchg
faddp
insb
xor
xor
sbb
jmp
add
sbbb
pop
lret
sub
and
xlat
sbb
mov
sbb
in
pop
cltd
mov
fldcw
ja
sbb
mov
adc
xchg
cmp
out
das
sub
and
and
fisubs
sbb
lea
loopne
enter
cwtl
inc
rol
or
xchg
in
jle
test
lcall
jns
sarl
testl
dec
lods
add
dec
add
push
std
xor
xor
push
sti
mov
fwait
scas
sahf
mov
negb
ror
sub
rcr
mov
cmc
subb
outsl
sahf
pusha
cs
pop
cs
popa
mov
popa
mov
ret
popf
dec
and
jg
push
das
jecxz
es
cli
pusha
arpl
add
push
pop
into
mov
push
pushf
fdivl
fildll
lods
pop
daa
push
cld
push
mov
pop
pusha
lds
or
push
aaa
mov
or
fcoms
xchg
add
call
ss
stos
inc
in
test
mov
push
inc
xlat
fwait
push
and
cmp
push
pop
cmp
sbb
aad
dec
mov
xor
sahf
clc
lret
mov
pop
icebp
testl
outsb
fidivrl
pop
adc
movsl
fs
adc
mov
cld
outsb
gs
sar
int3
das
jge
mov
add
inc
sub
test
gs
or
incb
push
cmpsb
dec
sub
push
or
or
int
sub
push
les
add
jnp
ljmp
sub
iret
jbe
cmpsb
je
mov
mov
outsb
adc
aam
dec
jb
add
stos
sub
push
jge
lcall
mov
jge
imul
inc
fwait
inc
adc
mov
faddl
push
dec
adc
mov
nop
in
dec
jbe
sbb
test
inc
insl
push
test
jbe
jmp
das
sub
mov
aad
jmp
jbe
loope
call
pop
lods
xchg
out
movsl
cmp
fwait
cli
mov
cmp
xlat
sub
movsb
inc
mov
cli
cmpsb
mov
lods
mov
inc
call
cmpsb
test
loop
jp
dec
pop
arpl
inc
and
mov
shlb
daa
sbb
adc
inc
dec
aaa
repnz
cli
mov
sbb
dec
xchg
hlt
jo
std
sbb
jmp
cmp
and
adc
push
andb
test
shll
push
mov
test
dec
lret
bound
loope
les
ljmp
ja
in
test
add
pop
lods
cmpsb
xor
mov
add
fxch
cmp
test
adc
adc
shl
lods
mov
jecxz
pop
aam
inc
nop
inc
push
in
fiaddl
mov
mov
adc
decb
dec
pop
push
test
test
sbb
adc
fsts
fwait
inc
int3
push
stos
imull
ret
cmc
xchg
loopne
fs
mov
test
outsb
imul
mull
or
aad
cmc
jns
daa
ret
mov
mov
and
push
cld
sub
pop
jo
sti
dec
mov
sub
repz
push
gs
mov
jl
fstps
adc
or
mov
imulb
movsl
jns
xor
lret
aam
pop
inc
fadds
popf
lock
movsl
cmp
fisubrl
gs
out
fwait
cmp
push
fs
mov
push
sbb
aam
dec
imul
add
jecxz
or
add
filds
arpl
test
rolb
sbb
mov
aad
mov
lcall
push
sbb
or
xchg
out
mov
mov
movsl
xlat
les
aaa
scas
cld
cmpsb
sti
test
sub
pop
outsb
xor
sub
pop
and
inc
aam
xor
mov
inc
mov
jb
insl
sbb
loope
dec
mov
jle
lcall
mov
stos
xchg
test
jne
cwtl
lods
stos
lcall
push
xor
add
add
adc
mov
xchg
xchg
fstpl
jb
repz
scas
mov
xor
pop
jnp
push
push
sbb
cmc
xor
or
pushf
lods
dec
std
ds
xchg
scas
mov
vrcp28sd
repnz
add
rolb
xchg
es
stos
popa
mov
xlat
das
cmpsl
or
bnd
mov
fsubr
jno
push
sbb
fwait
lcall
sahf
pop
scas
enter
add
gs
scas
clc
mov
rcrl
imul
cmc
movsb
mov
xor
pop
push
sahf
fs
data16
sti
shr
pop
test
push
inc
cmpsl
ljmp
add
mov
jb
andb
sub
xchg
pop
dec
loopne
dec
sbb
aam
sbb
sbb
pop
pop
ret
add
pop
pop
addl
loop
and
pop
mov
add
pop
icebp
sbb
push
ss
add
bound
mov
ficoml
rorb
mov
sub
aaa
xchg
rcr
add
inc
mov
daa
out
sarb
jo
js
xlat
pop
iret
xor
add
outsl
call
inc
std
lret
or
rcrb
cmpsb
sub
es
and
movsl
pop
or
int3
inc
test
rol
ret
add
add
xor
clc
mov
pop
repz
jmp
mov
and
imul
xchg
movsb
inc
stc
test
jmp
sti
mov
xor
pop
xchg
mov
lods
xchg
sarl
push
mov
mov
or
ficomps
jbe
jmp
outsb
adc
popf
fsub
fs
jmp
cmc
inc
or
push
push
pop
push
in
int3
data16
and
int
pusha
push
pop
xor
aad
jge
sub
les
idivb
rcrb
xchg
jbe
push
ljmp
stos
imulb
ret
jns
add
push
repz
aas
xchg
mov
inc
inc
dec
dec
das
and
sbb
jmp
mov
mov
jg
push
jb,pn
sarb
cmp
and
fistl
rcll
outsb
sub
pop
pop
into
jne
cmp
stos
inc
sub
pop
sbb
fcompl
movsl
aas
bnd
sbb
dec
mov
xor
fldt
mov
clc
push
and
jae
dec
iret
cmp
and
int3
xchg
add
leave
mov
adc
lds
dec
lret
lds
mov
mov
rcll
inc
cmp
push
dec
dec
inc
jmp
inc
loopne
xchg
repnz
adc
mov
add
jnp
jmp
xor
xchg
in
mov
mov
or
ds
subb
gs
insb
int3
sub
jne
mov
lret
add
arpl
cmp
lds
int3
xor
cmc
inc
shll
dec
outsb
test
dec
sub
cwtl
mov
lahf
sti
lcall
shlb
ss
pop
scas
rol
daa
testb
adc
mov
mov
scas
sub
mov
cld
add
mov
movsl
adc
out
jecxz
cli
mov
mov
ja
dec
cli
mov
lods
mov
xor
push
mov
sub
addr16
jmp
mov
loope
scas
nop
mov
test
mov
push
xchg
xor
sbb
push
ljmp
mov
fldl
pop
ljmp
ljmp
mov
stos
push
in
aad
jge
test
stos
loope
flds
lods
push
out
cmc
sbb
mov
aas
cmp
pop
mov
cmp
pop
dec
lods
xlat
sbb
and
jmp
xchg
sub
jmp
sbb
lcall
mov
xchg
jge
inc
rcr
cmc
dec
gs
xchg
xor
xlat
dec
xor
rcrl
adc
push
cmp
add
fistps
scas
fucomi
sbb
loope
and
loop
mov
wrmsr
jmp
inc
aam
cld
adc
daa
cmp
or
pop
cltd
das
xchg
sub
mov
pop
f2xm1
popf
loope
leave
jo
mov
xchg
jecxz
mov
pusha
fs
or
pop
iret
or
sbb
mov
insb
push
idiv
or
pop
pusha
inc
pop
imul
jnp
adc
popf
mov
pushf
mov
mov
push
loop
and
cmp
inc
xor
inc
and
push
rcrb
outsl
cmpsb
and
push
mov
push
push
push
or
fldcw
mov
cmp
jns
adc
sbb
psubsb
sarb
mov
cwtl
pop
lds
sbb
jp
sub
jle
notl
test
pushf
mov
pop
imul
int
cs
dec
stos
mov
mov
enter
roll
xchg
and
in
insb
repz
ret
cltd
jg
jp
push
mov
add
and
rorl
adc
shll
jae
jmp
aam
cmp
ror
dec
dec
mov
or
mov
jae
pusha
sbb
adc
push
push
cmp
nop
es
add
or
mov
cli
push
pop
mov
adc
pop
sbb
lods
imul
ss
pop
jecxz
fldt
les
push
mov
stos
nop
into
cmp
cwtl
adc
adc
test
mov
in
push
mov
or
xchg
and
dec
pop
mov
pop
mov
imul
scas
out
popa
lock
xchg
mov
pop
lret
mov
xor
mov
lea
xor
movl
aad
in
cltd
mov
in
pop
roll
jecxz
fadds
push
aam
aam
inc
mov
push
jnp
mov
dec
inc
fsts
les
sub
and
add
movsl
mov
cmp
lret
loope
xor
pop
push
ss
jmp
imul
ss
lret
pop
out
popf
sub
xchg
repnz
mov
inc
mov
pop
cmpsb
sbb
fcoms
and
push
std
or
pop
cmpsl
sbb
in
repz
sbb
xchg
cli
adc
mov
push
jmp
xchg
push
and
rcr
sti
mov
add
mov
jns
mov
push
faddl
insb
and
ds
or
jle
int3
rcll
scas
addr16
jp
mov
add
mov
dec
fiaddl
data16
xchg
dec
cwtl
iret
cmpsb
pusha
dec
inc
js
ret
es
xor
out
lds
inc
xchg
cmp
mov
ja
js
mov
les
dec
arpl
add
out
sarb
lock
inc
enter
cs
inc
cmp
movsl
stos
cmc
subb
and
pop
xor
push
push
inc
sbb
cmp
add
cld
mov
divl
dec
sub
xchg
outsb
nop
cmp
loop
dec
in
adc
out
jg
mov
repz
push
sahf
sub
and
push
imul
ret
sbb
xchg
sarl
or
sbb
add
iret
mov
mov
mov
les
push
xchg
cmp
mov
mov
sahf
imul
outsl
cmpsl
jae
mov
push
inc
pop
nop
ljmp
push
or
or
mov
jne
adc
cmp
lods
or
adc
arpl
jbe
pop
cld
data16
es
sbb
cmp
stos
sub
xchg
add
sub
cmp
sbb
sbb
mov
mov
shll
ja
jbe
lret
in
adc
fdiv
inc
imul
scas
fbstp
int
arpl
add
mov
or
push
cmpsl
es
out
xor
negl
stc
dec
sbb
icebp
filds
mov
jns
loopne
xor
mov
aam
xchg
jle
mov
pushw
ret
sub
pop
dec
fistl
sbb
pop
rorb
push
mov
xchg
xor
cmp
lds
stc
std
aam
pop
pusha
bound
adc
fdivr
fdivrs
jp
cmpb
aas
cmp
mov
jge
pop
negl
inc
cs
fildll
stc
push
xchg
pop
push
loop
push
cmp
andb
jb
jb
sub
es
clc
or
push
mov
mov
push
pop
push
pop
inc
fadds
mov
xor
test
mov
fstpl
loope
scas
stc
fistpll
js
or
pop
mov
stos
mov
iret
cmp
lcall
std
pmaxsw
cmp
push
outsl
aaa
int3
xlat
outsl
out
std
int
push
dec
pop
ret
mov
dec
cmc
pushf
bound
sub
lock
mov
fisttps
adc
cmpsb
push
mov
xchg
mov
sub
dec
das
adc
popf
mov
push
pop
insl
loopne
inc
mov
insl
sbb
loope
fwait
cmp
scas
push
aas
fnsave
pop
adc
sti
xchg
push
in
dec
imul
out
sbb
sub
and
fprem1
xchg
push
cmp
filds
and
mov
jo
fwait
popf
out
push
mov
mov
les
mov
xor
rorl
into
xorl
xlat
or
xor
adc
cmp
movsl
and
rorl
jl
in
in
and
pushf
jmp
mov
push
lahf
mov
int3
sub
les
pushf
scas
dec
mov
push
mov
or
sbb
push
les
mov
imul
dec
lods
xchg
pop
xor
inc
loopne
ret
sahf
stos
repz
mov
iret
jns
pop
into
xor
pop
jne
cmp
mov
sub
movsl
and
shll
sbb
sbb
add
dec
popa
ret
insb
add
ret
filds
test
out
ljmp
adc
shl
movsl
cmc
adc
xchg
les
dec
mov
jb
jo
adc
enter
out
mov
ret
push
fucomp
roll
sub
lret
test
pop
subb
cmc
bound
xor
je
xor
xor
mov
pop
stc
pop
sti
in
and
loop
call
or
xor
dec
cli
xor
sbb
and
push
mov
aas
pop
pushf
shlb
scas
mov
aad
adc
hlt
call
int
shr
cmp
rolb
data16
leave
repz
and
cltd
inc
cltd
outsl
in
pop
rcl
popf
test
add
aas
sbb
pop
mov
cli
in
push
push
out
pusha
mov
fwait
lock
jmp
inc
push
push
stc
int3
icebp
std
jae
cmp
push
and
sbb
add
into
test
pop
ljmp
dec
dec
pop
js
sbb
push
mov
sub
cmp
faddl
mov
test
test
fwait
in
aad
dec
xor
imul
and
pop
inc
jge
in
loopne
sub
hlt
orl
adc
jbe
popl
cmp
add
cmp
adc
sti
scas
sbb
or
inc
or
fnstsw
push
adc
adc
add
icebp
xlat
stos
int
insb
outsb
push
jb
pop
mov
add
dec
outsb
and
push
add
mov
mov
cwtl
xor
loopne
cmp
lcall
cmp
mov
sub
fwait
pop
js
ss
test
adc
xchg
add
popa
push
jl
push
mov
iret
jno
mov
jg
sub
into
repz
das
push
fsubl
imul
lods
aam
sub
jbe
lret
out
cmp
insb
sbb
idiv
pushf
pop
icebp
es
push
adc
pop
xor
cmp
out
ss
insl
inc
fnstsw
sbb
jo
mov
das
push
hlt
jl
stc
dec
cmpl
dec
xchg
xor
add
bound
push
jnp
ljmp
push
test
lods
jne
xor
loope
xor
add
or
out
daa
mov
ljmp
fwait
ret
sahf
hlt
push
dec
adc
test
jecxz
sub
dec
xchg
xchg
pop
mov
sbb
out
cmp
lods
ja
dec
js
movsb
adc
xchg
inc
dec
arpl
pushf
or
fwait
mov
push
jle
lret
adc
push
inc
icebp
mov
fistpl
sbb
jg
ljmp
aam
inc
bound
mov
pop
add
into
mov
aam
sbb
push
xor
mov
dec
push
jle
sub
or
popa
fldt
cmpsl
cltd
xor
mov
out
jns
mov
fidivrl
xchg
scas
mov
push
push
inc
cltd
jecxz
add
jg
dec
xchg
sub
pop
cmp
iret
mov
dec
or
arpl
jmp
push
xchg
test
fdivrs
jne
and
aas
inc
jne
add
sub
ret
pop
outsb
xchg
xor
cmpsl
dec
xchg
gs
and
sub
push
and
outsb
lcall
pushf
movsl
cmp
shrl
pop
push
out
scas
cs
test
test
pop
mov
fimull
fnstcw
sub
pop
aam
sub
dec
push
in
sub
dec
insb
movsl
ljmp
in
lcall
jnp
es
loopne
pop
cmp
bound
jge
xchg
mov
aas
ret
or
iret
mov
ss
sbb
test
loopne
leave
cmpsb
aaa
dec
dec
jl
loop
ja
mov
cld
mov
test
pop
mov
cs
icebp
mov
adc
mov
inc
or
inc
cmpsb
rcll
jae
inc
xor
sub
jge
jo
jo
movl
ss
xchg
mov
xchg
sbb
sbb
ljmp
jb
sti
jg
insl
loope
xchg
aas
iret
test
pop
int
lret
cmp
dec
xor
cmp
mov
mov
fisttpll
stos
mov
push
or
xchg
shl
sti
imul
lock
push
cmpb
test
jo
sub
mov
les
stc
stc
mov
je
sub
cmp
pop
dec
repnz
push
fwait
lea
adc
out
cmp
add
inc
sbb
cltd
scas
test
cld
adc
mov
or
in
clc
stos
outsb
mov
mov
lds
cs
sbb
jp
and
jle
filds
loope
lods
adc
jnp
fnstsw
xlat
xchg
push
fcoml
lret
push
aas
femms
jno
push
jno
jno
popf
xor
sub
jno
dec
or
push
flds
insl
insl
mov
aas
sub
mov
cmpsb
testb
xchg
mov
out
outsb
xor
mov
movsb
sbb
push
cmpsl
mov
cs
mov
push
or
nop
ss
pshufw
mov
pop
ret
add
sub
call
imul
cwtl
inc
xchg
jl
xchg
loope
add
add
sbb
loop
mov
cli
rcl
pop
adcb
ss
jmp
dec
into
jp
mov
jp
mov
jae
aas
loop
outsl
jbe
in
jmp
fcomp
and
popa
sbb
lods
insl
mov
iret
pop
and
and
and
cli
mov
mov
call
mov
ret
xor
sbb
gs
pop
cmp
insb
fidivs
inc
pop
xor
pop
cmpl
dec
sbb
adc
push
adc
adc
es
test
fistpll
push
clc
pop
in
sti
mov
xchg
and
cli
popa
sub
dec
add
mov
inc
and
pop
iret
mov
add
sub
xchg
mov
incl
mov
stc
mov
mov
aam
inc
mov
cli
in
cmp
and
pop
mov
adc
mov
pop
xchg
mov
sub
fs
test
and
pop
adc
es
jecxz
repz
add
push
arpl
jmp
push
test
test
and
xchg
mov
fnstsw
jmp
xor
addr16
fisttps
add
es
cmpsb
push
stos
jbe
mov
popa
xor
jns
repnz
fnstsw
mov
inc
in
push
fsts
les
pop
adc
jb
call
nop
push
lcall
test
mov
cmpsl
dec
dec
ret
clc
xor
aam
fwait
mov
cmp
nop
sahf
and
lret
adc
in
pop
ljmp
leave
in
pop
decl
mov
outsb
pop
es
xor
fildll
ret
loop
je
push
xor
mov
imul
aaa
jno
inc
subl
mov
scas
or
imul
jmp
test
btl
add
mov
push
dec
icebp
je
sbb
cld
std
pop
aas
mov
mov
jg
insb
pop
shl
test
subb
lock
bound
add
jae
pop
mov
int3
push
mov
sub
dec
push
xchg
xor
pusha
shll
mov
mov
add
call
sahf
mov
adc
rorb
cs
out
inc
xor
notb
mov
xchg
mov
daa
mov
and
and
inc
mov
sbb
loop
cmp
call
stos
ja
mov
cmp
ss
lock
pop
mov
sti
inc
jb
lods
gs
ss
pop
adc
inc
mov
mov
pop
adc
pop
lods
mov
adc
mov
fistpl
test
mov
xchg
insl
cmp
test
addb
sbb
es
insb
les
popf
push
jae
lock
sub
push
iret
jecxz
adc
rclb
fdivrl
push
mov
call
cmpsb
xchg
and
icebp
les
inc
inc
add
cmpsl
push
js
push
hlt
dec
push
aam
das
add
out
sbb
sub
mov
fwait
push
inc
test
roll
mov
push
push
jo
mov
xor
aam
dec
jl
mov
push
cwtl
and
pop
cltd
adc
pop
mov
jnp
mov
sbbb
std
jl
repz
sbb
mov
dec
sbb
add
mov
aas
aas
cmp
sub
add
or
loopne
inc
mov
sub
sub
jg
imul
cmp
dec
sbb
push
or
test
mov
vmptrst
xchg
xchg
xchg
mov
jns
imul
call
jno
and
pop
jo
jg
ss
pop
jmp
out
xchg
scas
shlb
iret
dec
or
pop
fnstenv
test
scas
stos
sti
push
repnz
fisubrl
sbb
bound
fldt
int3
sub
insl
dec
mov
xorl
jo
pop
scas
or
not
cmc
mov
repz
push
jl
mov
adc
adc
cmpsb
subl
push
pop
hlt
xchg
cld
nop
imulb
sarl
adc
inc
daa
jg
stos
rolb
adcb
dec
repnz
ds
mov
or
mov
cld
mov
cmp
mov
mov
push
xchg
push
xchg
or
jge
ljmp
out
dec
aad
add
repnz
or
jno
mov
pusha
dec
or
popf
out
fcoms
enter
dec
sarb
lret
int
aam
pop
sub
add
aaa
movsb
test
cmp
jmp
fcompl
inc
cmp
add
mov
out
mov
shr
and
mov
pop
nop
imul
shl
jl
js
xor
sbb
stos
dec
add
mov
pop
push
mov
adc
ss
cmp
cmpsl
jae
mov
sub
jbe
out
dec
mov
jnp
lcall
call
jle
fs
push
aaa
rcll
cmp
pop
cwtl
and
push
movsb
cmp
fists
imull
out
sarb
daa
xchg
xor
adcl
mov
sub
jle
cmpsl
lea
jbe
jmp
arpl
arpl
mov
cs
out
das
ljmp
imul
push
jl
aaa
outsl
insb
jmp
aas
sarl
push
outsb
mov
xchg
aaa
dec
leave
xchg
cmp
rorb
lret
pop
push
leave
faddl
mov
or
push
push
mov
aaa
in
mov
push
sbb
lods
adc
jne
ffree
jge
sbb
mov
popf
bound
in
shlb
sbb
jne
add
push
push
out
adc
jmp
arpl
in
scas
jno
daa
mov
mov
pop
aam
jg
cmpsl
xchg
in
and
hlt
mov
movsb
adc
outsl
mov
dec
fisubrl
mov
mov
nop
jge
rcrl
mov
cwtl
xchg
fcmovne
movsb
insl
mov
jg
cmpsb
mov
int
in
aaa
scas
cwtl
in
and
push
xor
jmp
jmp
push
push
or
jp
adc
sub
dec
inc
add
shlb
arpl
push
pop
outsl
mov
imul
leave
inc
fs
or
sbb
iret
xor
xor
mov
lea
pop
repnz
fcmove
mov
test
dec
loopne
aas
insl
lcall
mov
inc
cmp
filds
mov
cmp
sar
mov
hlt
setg
cmpsl
xchg
push
daa
xor
cmpsb
or
xchg
xor
mov
add
or
and
into
aam
outsb
lods
mov
or
fisubs
jl
dec
and
loope
test
clc
push
push
ja
xchg
dec
inc
push
cmp
mov
in
add
std
popf
shll
xchg
movsl
jne
mov
aam
inc
push
mov
jae
xor
mov
xchg
aaa
adc
les
out
dec
rclb
mov
mov
and
jne
bound
ss
in
daa
cmp
jmp
clc
sub
cmp
sub
mov
enter
push
es
xor
dec
aad
jb
bound
pop
js
gs
xchg
js
xor
jg
xchg
movsb
or
jge
imul
lock
lods
mov
mov
pop
xor
add
insb
or
lds
mov
jne
outsl
addb
lods
imul
sub
xor
mov
push
fistpll
cmpsl
test
in
imul
aas
cmpsb
loop
sbb
push
fidivl
inc
mov
jb
dec
push
inc
xor
packssdw
movsb
mov
sahf
les
nop
neg
lods
push
ljmp
add
dec
idiv
ffree
inc
cmp
les
sub
call
cmp
sub
add
add
xchg
imull
stc
aaa
rcll
dec
in
arpl
lret
outsl
adc
push
sbb
lods
add
popa
push
test
or
xchg
pop
add
out
std
push
leave
es
mov
push
out
or
sub
dec
xchg
jp
clc
repnz
xor
push
daa
outsb
or
jecxz
jno
lret
dec
push
sub
mov
lock
addr16
imul
cmp
lods
fwait
jnp
dec
add
clc
sbb
ds
jg
lds
mov
lock
test
cwtl
adc
repnz
sub
xor
inc
cli
jb
mov
pop
sbb
mov
adc
imul
pop
sbb
cmp
jecxz
cmpsb
rclb
xor
test
mov
dec
repnz
dec
in
or
push
lcall
sbb
jno
icebp
mov
xlat
add
cmp
dec
jbe
mov
jnp
push
mov
insb
leave
out
les
aad
jg
fidivs
inc
adc
das
out
mov
je
pop
dec
pusha
mov
loop
jmp
pop
mov
inc
into
stos
push
pop
decl
iret
xor
or
inc
sahf
jp
adc
or
incb
sub
mov
adc
loopne
divb
inc
outsb
jmp
push
ret
and
es
mov
cld
or
xlat
ja
dec
xlat
inc
lahf
lea
mov
clc
adc
mov
add
cltd
add
push
idivl
mov
sub
adc
sbb
adc
cmp
pop
jb
subl
nop
inc
out
mov
inc
shrb
pop
mov
and
pop
lahf
je
ja
xchg
in
or
out
out
mov
pop
mov
adc
insb
xor
jne
in
sbb
nop
cmp
movsb
pop
jnp
sbb
aaa
mov
shl
mov
jle
pop
in
das
adc
ror
out
aas
sbb
lods
test
icebp
movsl
dec
lock
les
arpl
shrb
ljmp
xchg
and
popa
adc
lock
into
neg
stc
pusha
test
aam
aam
movsb
lods
push
xchg
jne
and
or
lret
inc
pushf
cmp
mov
loopne
rolb
adc
mov
in
loopne
js
jbe
push
call
mov
test
cmp
sbb
lcall
stos
bound
inc
add
xchg
dec
push
movsl
sub
std
lods
sbb
inc
jne
fstl
rolb
out
int3
icebp
jbe
cwtl
mov
xlat
into
push
pop
js
sar
hlt
add
lods
sub
shll
imul
pop
lock
insb
cmpsl
or
mov
mov
incb
fistpl
cmc
popf
cwtl
mov
js
xchg
push
push
imul
jge
sti
jae
fisttps
xchg
bnd
dec
scas
dec
nop
test
cld
sub
add
add
int
repnz
mov
push
jp
xor
pop
xchg
pop
aam
mov
and
dec
sbb
roll
xchg
adc
iret
dec
jge
xchg
push
test
adcb
les
jb
ret
sbb
cmp
sbbb
mov
mov
cmpsb
aam
sbb
stos
mov
xchg
mov
cwtl
dec
mov
stos
inc
or
aam
cwtl
push
fwait
jmp
pop
pop
mov
jno
mov
insl
xor
mov
repnz
jbe
sub
dec
jns
mull
loope
hlt
sbb
pushf
pop
jb
pop
push
inc
xchg
push
js
insl
pop
dec
push
push
test
xchg
xor
popa
aaa
loopne
imul
and
cld
sub
mov
sbb
iret
cmp
sahf
cmp
mov
sbb
sbb
adc
push
and
aad
ja
jp
je
hlt
inc
or
mov
jp
movsb
loop
mov
cmp
pop
cmpsb
test
aad
addr16
mov
pop
xor
lods
loopne
adc
testl
mov
sarb
push
cs
sbb
mov
test
jno
lea
js
jp
sbb
mov
enter
cld
stc
movsb
pop
aam
push
mov
mov
mov
cs
sbb
inc
roll
daa
dec
inc
sbb
mov
push
push
sahf
into
dec
or
sub
pop
jns
shl
imul
jns
mov
leave
lret
xchg
inc
sbb
xchg
inc
pusha
fstl
xchg
stc
jns
mov
scas
lret
adc
fistpll
test
push
lock
sbb
sbb
mov
jne
outsb
rorb
mov
mov
push
inc
and
sub
dec
movsl
pop
dec
dec
outsb
mov
push
jl
das
mov
sbb
adc
add
mov
loop
and
sarb
push
cli
sub
aad
outsl
mov
mov
inc
push
mov
insb
out
lret
je
pop
ljmp
int
test
adc
lcall
cs
add
adc
dec
cmpsl
ds
pusha
mov
movsl
jle
and
stos
push
xchg
lods
pop
stos
pop
xchg
stos
gs
pop
adc
aas
jo
xchg
jno
or
adc
mov
ret
mov
std
push
cmc
pushf
mov
sbb
imul
push
jmp
imul
sbb
js
jbe
mov
mov
lods
test
jno
mov
push
push
xchg
js
inc
pop
adc
fs
pusha
jae
xor
call
or
mov
cli
cli
movsl
push
mov
shrb
inc
sbb
icebp
dec
ja
jae
scas
xor
aam
add
mov
and
cltd
loopne
xor
mov
pop
sub
jp
es
popf
sub
loopne
xor
movsl
repnz
jo
jo
xchg
sub
scas
lret
int3
sahf
adc
sbb
inc
xchg
inc
pop
aaa
jle
movsb
cmpb
add
sbb
inc
dec
mov
lods
stos
mov
inc
dec
shlb
loopne
mov
insl
pushf
mov
mov
mov
out
xor
rorb
add
sbb
push
jo
fisubrl
or
fnsave
popf
inc
mov
mov
push
mov
mov
shll
sbb
sub
fldcw
jb
stos
xor
jns
ret
lds
bnd
mov
and
mov
movsl
xchg
add
loop
or
inc
pop
push
aad
pop
cmpsl
arpl
popf
pushf
cwtl
dec
lods
and
and
lods
test
arpl
mov
cmp
fsubrp
inc
loope
add
cmpl
mov
cwtd
add
push
adc
lahf
leave
dec
adcl
cmp
cld
xor
jo
rcrl
out
filds
mov
sti
addr16
push
pop
push
fcoml
outsl
dec
xchg
cmpsb
push
in
int
mov
ret
sub
sub
jnp
lahf
sbb
add
xchg
stos
jno
cmpsb
jno
push
inc
cmpsb
adc
rsm
sbb
pushf
les
fdivrs
repnz
push
jne
movsb
xchg
cltd
push
dec
xor
add
rcll
rcrl
cld
xchg
sarl
arpl
jmp
in
lret
xchg
lods
inc
fiadds
cmp
aaa
jo
push
sub
sub
repz
fdiv
call
cwtl
xor
xchg
enter
pop
shll
rorl
jle
aas
xor
stc
or
outsb
pop
mov
sub
cmp
sub
lea
aad
adc
mov
mov
xorb
mov
js
movsb
in
dec
push
adc
popa
dec
arpl
and
inc
das
mov
sub
xchg
mov
movsb
cs
loopne
pushl
js
adc
fbstp
test
add
xchg
mov
lcall
mov
mov
or
fcompl
push
xor
jl
dec
mov
sti
and
or
ss
mov
rcrb
movsl
in
and
pop
mov
mov
lcall
mov
cmpsl
mov
aaa
pusha
cmpsl
out
cld
js
lahf
orl
cmc
adc
aas
sbbl
cwtl
xlat
into
ret
mov
ret
mov
push
ja
or
mov
and
outsl
adc
fwait
jmp
jbe
mov
ret
mov
data16
xchg
arpl
lds
rcrl
mov
jle
js
adc
popl
xor
insl
push
or
or
or
out
and
xchg
repnz
pop
movsl
dec
repnz
or
xorl
lock
xchg
aaa
pop
sbb
pop
mov
stc
faddl
fildll
out
lods
out
outsb
scas
sub
test
jl
inc
daa
sub
mov
sbb
cmp
lret
xor
cmp
mov
xchg
xchg
arpl
std
call
stc
sbb
push
and
imul
dec
push
push
inc
sub
jo
and
dec
xlat
insl
mov
imul
push
movsb
jmp
enter
mov
int
out
xchg
lret
mov
add
add
movsb
gs
sbb
mov
outsl
mov
push
je
ljmp
xchg
jno
test
jae
mov
cli
loopne
jecxz
aam
fsubrl
pop
iret
mov
push
push
addr16
jg
push
mov
lahf
addr16
cmp
adcb
or
das
sarl
pushw
cmp
mov
popa
xchg
pop
popf
sbb
arpl
or
lcall
addb
incb
sbb
xchg
sbb
dec
mov
nop
add
pop
cmp
mov
mov
cmp
xor
or
xor
xchg
dec
std
pop
and
xor
push
dec
dec
addr16
lret
xchg
dec
pop
cltd
in
mov
jecxz
push
and
cwtl
xchg
mov
xchg
bound
mov
pop
flds
gs
repz
popa
cmpsl
jne
dec
les
push
add
inc
dec
pusha
jge
icebp
sarb
lock
xor
sub
out
add
jle
jnp
inc
es
or
xor
mov
in
push
dec
adc
sub
divb
int
out
rolb
add
jbe
push
mov
mov
xchg
andb
cmp
lock
hlt
cmp
pop
xchg
xchg
jmp
xor
sub
add
mov
xlat
add
out
data16
adc
mov
lds
dec
jmp
adc
mov
mov
test
arpl
aas
stos
loop
jle
xchg
and
pop
mov
cmp
stos
aaa
out
xchg
pop
jbe
xor
fcoml
daa
cmp
cmp
ja
xchg
xor
inc
dec
cmpsl
jl
ja
out
out
stc
rcll
mov
add
push
jle
rclb
mov
rorl
jo
repz
les
ja
lret
aaa
in
aam
adc
popa
sar
ss
out
sbb
bound
or
sub
jns
mov
mov
or
cmp
fisubs
or
and
js
ret
int
daa
xor
insb
push
mov
xor
popf
es
xor
or
dec
popf
adc
push
popf
sbb
iret
mov
repz
out
icebp
sbb
mov
xchg
sbb
pop
insb
mov
jns
out
lret
test
xor
pop
add
sbb
jg
inc
popf
cmp
out
in
mov
test
pop
orb
dec
test
insl
bnd
adc
gs
sbb
pusha
sti
xchg
mov
sbb
loopne
leave
fsubrs
mov
daa
cmp
xchg
nopl
pop
ja
repnz
mov
jb
std
punpckhwd
fnsave
roll
ljmp
push
inc
inc
mov
ret
add
jnp
jmp
add
ja
arpl
ficoms
loop
push
out
xor
pop
sub
dec
shlb
lret
ss
enter
je
push
out
xchg
sub
push
lcall
add
shll
clc
or
sub
pop
js
lret
adc
mov
std
sbb
add
test
cli
cld
and
int3
add
add
call
jbe
test
cltd
add
adc
cmpsl
or
js
xorb
xchg
push
mov
rcrb
cmp
dec
leave
jg
movsl
xchg
data16
jb
cmp
dec
push
xchg
xor
lret
les
jl
pop
sub
push
popf
std
popa
jge
pop
mov
push
loopne
mov
mov
test
or
arpl
rcr
xchg
jg
es
inc
ret
dec
mov
jge
movsb
cmp
das
fnsetpm(287
not
inc
mov
or
test
stos
cs
sub
pusha
jnp
mov
and
xor
sub
cmp
je
popa
inc
lea
push
jo
outsb
xchg
add
in
in
daa
and
fisubrs
xchg
rcl
enter
dec
out
ret
shl
jns
or
mov
outsb
mov
and
mov
int
daa
scas
sbb
cmp
pop
fldt
mov
xrelease
or
xor
mov
jmp
add
aad
rcrl
cld
dec
fldl
inc
xor
mov
or
push
and
push
ret
popf
das
ret
popf
cmpsb
sub
jne
adc
sbb
sbb
popa
push
cmc
xchg
fidivrs
xchg
dec
adc
shrl
data16
js
push
cmp
or
bound
sub
test
lahf
mov
jnp
mov
mov
movsl
or
nop
inc
sbb
add
pop
xchg
leave
xchg
nop
jnp
xchg
sbb
out
test
call
std
dec
sbb
pop
adc
xor
sahf
add
sbbb
mov
lret
sub
cmp
xor
int3
inc
mov
adc
mov
imul
pop
xchg
mov
data16
fxch
xchg
popa
push
gs
pop
bound
add
pop
icebp
je
lea
int3
sbb
movsl
movsl
inc
sbb
rcl
push
enter
sbb
xor
test
popl
gs
jbe
dec
jle
lock
and
mov
fisubrs
mov
mov
sbb
subb
stos
nop
test
cmp
pop
mov
loope
dec
test
nop
inc
inc
vminsd
cltd
xor
push
jp
insl
pop
add
inc
dec
and
cmpsl
pusha
sbb
fistpl
enter
div
add
outsl
sub
push
int
sbb
inc
shl
xor
test
cmc
ja
push
movsb
insb
push
sub
jl
xchg
outsb
lock
xchg
push
adc
pminub
xchg
repz
jns
cmp
inc
cmp
mov
mov
xchg
mov
int
cmpsb
fists
ljmp
clc
fwait
lcall
push
sti
pop
inc
push
inc
add
adc
lahf
dec
pop
mov
mov
inc
data16
mov
loop
cmpsb
test
xchg
cmpsl
std
xchg
clc
push
aad
push
mov
fldcw
xor
int3
and
aad
ljmp
inc
sub
and
fs
stos
cmpsl
xchg
cmp
and
inc
cltd
lock
xchg
les
sbb
pushf
aaa
scas
into
fwait
shll
mov
push
adc
or
aas
fcompl
xor
sti
add
daa
lock
pop
add
in
rcl
lret
mov
inc
fcomps
lret
stos
mov
ret
cs
sbb
pop
inc
mov
sbb
rorb
push
pop
push
int3
jg
cwtl
cmp
lret
push
adc
pop
mov
sub
sbb
fildl
xchg
jle
lea
pop
fisubs
push
ds
aad
dec
sbb
lods
out
jecxz
mov
ss
dec
shlb
jl
xchg
lret
call
pop
jae
in
mov
dec
movsl
ljmp
movsb
cmpsb
adc
adc
mov
cmp
iret
pushl
and
jmp
dec
dec
push
sub
dec
mov
push
mov
mov
mov
sub
mov
imul
out
push
mov
add
mov
jne
std
nop
mov
bound
push
andb
fidivrs
dec
mov
mov
loop
xor
xor
adc
xor
sbb
sbbl
inc
add
and
int3
mov
push
sbb
in
mov
add
and
mov
mov
xchg
gs
or
lods
lods
in
popf
in
xor
cwtl
arpl
shr
mov
scas
stos
push
imul
push
nop
add
pop
xor
call
push
push
inc
mov
repz
mov
and
ljmp
xor
sbb
or
mov
push
scas
ljmp
mov
cmp
xchg
and
cmpsl
cmp
and
outsb
rcrb
jl
mov
stos
sub
out
mov
das
icebp
mov
ljmp
arpl
pop
arpl
push
dec
push
mov
andb
pusha
aas
lock
sub
inc
mov
cmp
mov
hlt
ja
mov
jnp
push
pop
push
ljmp
mov
mov
xchg
icebp
sub
mov
sbb
outsl
pusha
cmp
call
add
jnp
pop
movsl
adc
ss
mov
mov
xor
ja
jle
mov
ljmp
push
ret
stc
xchg
icebp
adc
xor
andl
mov
mov
or
push
jne
pushf
xor
loopne
push
and
cmp
push
add
fisttpl
xchg
cmpsb
xchg
add
mov
jno
add
mov
pusha
stos
adc
mov
leave
shlb
lcall
into
sbbb
negb
popa
pushf
add
popa
repz
xchg
adc
sysexit
cmpsl
lock
xchg
jae
sbbl
mov
mov
sub
fnstsw
mov
dec
inc
xor
adc
jmp
xchg
mov
shll
jns
jo
push
lea
mov
xlat
or
movsl
jbe
cmp
scas
sbb
fs
adc
inc
test
addb
push
mov
lret
es
cld
ds
pop
enter
fisttpll
dec
or
les
in
sarb
fisubl
adc
repz
mov
sbb
shrl
sbb
push
out
in
test
pop
inc
adc
dec
in
leave
mov
jmp
lods
leave
mov
push
inc
mov
sub
xchg
sub
cmp
sbb
out
sub
xchg
push
and
mov
gs
fsts
dec
or
das
mov
popa
dec
test
mov
mov
sub
jo
mov
cmp
lahf
mov
inc
push
jle
iret
cmc
out
mov
gs
lea
cmp
cmp
mov
add
ret
dec
inc
sub
cmp
pop
sbb
xchg
cmp
jbe
mov
add
fsubr
cmp
aas
ss
out
push
mov
or
sbb
mov
mov
rclb
fs
lods
arpl
ds
pop
insl
dec
push
inc
push
out
jge
inc
inc
push
add
cmp
idivb
out
loope
das
mov
cld
pushf
jbe
imul
sub
dec
cld
in
xchg
hlt
inc
out
rcll
movb
xchg
dec
cwtl
pop
dec
imulb
push
rep
aam
fs
testl
or
lds
test
scas
int3
lea
js
push
or
fwait
into
xchg
stos
jmp
inc
or
mov
mov
idivb
dec
outsl
fidivl
std
shr
mov
mov
mov
xchg
mov
sahf
xchg
xchg
sbb
stc
pop
xchg
pop
pop
cmp
sub
push
arpl
test
nop
or
andl
in
mov
mov
pop
jmp
jbe
jbe
call
sbb
stc
loopne
push
fwait
push
sbb
or
pop
add
hlt
lods
adc
popf
mov
sub
stc
dec
dec
outsb
push
imul
adc
mov
insl
inc
mov
aaa
jnp
inc
mov
mov
and
jmp
cmp
rolb
xlat
std
mov
inc
jmp
lea
jb
push
xlat
std
jg
iret
mov
xchg
notl
outsl
lcall
push
cmova
pop
mov
inc
xor
and
sub
icebp
xor
repz
dec
test
sbb
enter
mov
arpl
in
movsl
inc
in
js
aad
pop
stos
jmp
or
ret
dec
and
loope
test
loope
mov
jae
xchg
cwtl
adc
gs
in
sub
mov
push
cmpsb
int
xchg
mov
push
lods
push
mov
mov
pop
fwait
xchg
dec
mov
sbb
mov
adc
test
sub
insl
adc
enter
fsub
and
xlat
repnz
mov
das
mov
or
and
dec
cmp
filds
inc
sub
arpl
dec
mov
mov
push
aad
arpl
jb
mov
push
pop
shlb
aad
push
fs
stos
nop
and
pop
in
and
aaa
loopne
adc
insl
mov
hlt
push
or
leave
test
mov
jle
sbb
in
dec
mov
mov
push
inc
lods
pop
cmc
fstps
fdivrs
push
jo
lahf
mov
ficoms
fdiv
js
cltd
inc
sub
jmp
sbbb
fs
xchg
cwtl
mov
jp
pop
testl
jns
sub
and
and
add
xlat
mov
decl
xchg
rcll
mov
clc
out
fists
xor
adc
test
push
sbbl
lret
bnd
and
imul
or
inc
inc
dec
popa
rcrb
test
test
jne
cmp
pop
inc
lods
out
int3
mov
sbb
jge
add
pushf
cmc
push
inc
lods
jns
dec
stc
and
jecxz
aas
ret
cmp
dec
xchg
scas
lock
fstl
dec
and
popa
stos
adc
subl
insl
test
jno
fistpll
test
sbb
sub
cmp
clc
aam
pusha
movsl
mov
outsb
cmp
add
int3
dec
xchg
dec
or
je
std
cltd
pop
repnz
xor
ret
jb
sub
stos
aas
rorb
mov
mov
dec
adc
xchg
xlat
int3
sbbl
xor
leave
cwtl
arpl
mov
and
lock
test
push
dec
outsb
out
jb
aas
loope
cmc
push
scas
cli
push
add
scas
inc
movups
xchg
nop
xor
lahf
and
enter
jmp
push
int3
in
mov
mov
dec
mov
insl
in
or
push
jge
xchg
js
sbb
sub
pop
and
bnd
and
sub
push
mov
mov
inc
scas
xchg
cld
ret
mov
popf
push
aad
daa
mov
mull
pop
mov
imull
jno
cld
push
xor
jno
jae
xlat
lcall
or
stos
je
inc
or
je
cmp
pop
or
ret
rolb
push
inc
ss
ss
mov
jae
fdivrs
shr
cmp
sub
movsl
adc
ljmp
insb
jmp
or
inc
and
push
fldenv
pop
mov
adc
pushf
pop
mov
ret
push
mov
xor
jo
mov
cmc
loopne
lret
insl
pop
decb
scas
and
xor
out
stc
xchg
ret
test
outsl
repz
out
adc
xchg
outsl
dec
and
push
into
insl
push
sahf
cwtl
pop
cmp
repz
sub
sahf
mov
test
ja
sbb
lea
add
es
jmp
push
fisttpl
mov
push
cmpsl
lds
jmp
fisubl
jnp
cltd
dec
mov
inc
sub
ljmp
insb
cmp
jecxz
adc
pushf
inc
xor
pusha
or
frstor
and
daa
cmp
push
invd
test
sahf
jo
and
test
jle
stos
lods
push
xchg
and
add
adc
pop
jecxz
mov
adc
mov
fsubr
mov
push
push
sbb
scas
jne
or
sbb
push
rorl
gs
iret
sbb
jl
add
cmp
mov
mov
jl
fildll
mov
int3
cmp
xchg
fadds
xchg
enter
leave
test
mov
dec
sub
ret
rcr
rcll
imul
outsb
adcl
adc
push
xor
lods
lods
jo
daa
fnstcw
clc
xchg
out
xchg
xchg
adc
dec
mov
cwtl
pop
lods
sub
hlt
sarb
subl
je
jns
inc
cmp
pop
xchg
adc
sbb
test
jecxz
xor
mov
xchg
adc
into
push
js
in
xor
fistps
mov
xor
or
fisubrs
xchg
and
push
pop
jl
stc
xchg
idivl
mov
icebp
jmp
cwtl
das
xchg
mov
hlt
fidivrs
inc
pop
adc
pop
ss
int
aas
fnsave
mov
sbb
lcall
loop
in
movsb
arpl
push
sub
dec
clc
push
and
jmp
dec
ret
jmp
or
xor
cld
cmp
cwtl
repz
outsl
enter
push
xchg
xchg
sub
cs
xchg
push
clc
mov
xor
xchg
sahf
and
xchg
mov
or
lcall
sub
sbb
fldt
pop
outsl
xlat
lds
inc
dec
add
sub
scas
pop
jl
test
xchg
test
ja
mov
sub
daa
mov
sbb
lods
inc
leave
repz
stc
add
dec
data16
mov
rorl
cld
cmp
outsl
cltd
dec
push
jle
outsl
jb
popf
leave
notl
lods
and
movsb
sub
ds
subl
ficompl
lods
cltd
mov
lods
sbb
jo
dec
int
lret
and
mov
fcoms
xor
push
imul
jmp
cmpb
dec
sub
jp
mov
sub
mov
mov
cmp
shr
jnp
stc
cwtl
insb
lret
or
jae
pusha
adc
mov
jno
out
test
mov
lcall
mov
outsl
dec
sbb
insl
scas
aaa
insb
sahf
in
and
sbb
pushf
mov
in
stos
or
xchg
pushf
mov
mov
nop
dec
push
sub
jl
dec
xchg
jmp
and
mov
mov
push
sbb
repz
fidivs
xor
pop
filds
js
in
push
adc
sbb
enter
repnz
sub
loope
out
jge
sub
out
call
inc
sahf
sub
test
inc
mov
jbe
sbb
mov
push
aam
pushf
aad
clc
cmpsb
jbe
ljmp
lret
int3
scas
stos
xchg
fincstp
dec
aad
and
loopne
iret
cmp
mov
add
push
popa
dec
cmpsl
js
and
cmp
sbb
push
mov
out
fisubs
pop
fldt
in
cld
push
mov
or
dec
setns
mov
mov
loope
lret
jb
push
mov
fbstp
sbb
cmp
adc
stc
sbb
stos
sarl
mov
lods
or
movsl
add
pop
nop
push
dec
sarl
push
mov
roll
popa
add
gs
gs
int
push
sbb
hlt
movsl
jg
xor
aas
leave
aaa
push
jecxz
inc
dec
ret
mov
int
jno
jge
pop
adc
ret
mov
sahf
cmp
test
mov
adc
mov
xor
pop
repnz
or
or
add
adc
dec
dec
xchg
cld
shlb
fisttpl
lods
rorb
mov
inc
aas
lods
sub
sbb
mov
jnp
std
jnp
xchg
add
push
inc
pop
mov
jge
repz
lds
and
pushf
jecxz
jmp
jl
mov
das
xchg
cs
sub
or
xor
cld
sar
es
into
mov
mov
insl
pop
fwait
jne
mov
ds
push
aaa
push
fadd
test
mov
xor
je
test
cmpsl
inc
cmp
out
xchg
mov
jle
sub
mov
pop
scas
sarb
mov
sub
jo
dec
cmp
popf
cmpsb
cmp
and
clc
mov
sub
inc
call
cld
adc
adcl
mov
fnsave
cmp
or
or
adcl
push
sarl
rorb
sub
mov
cmp
push
sbb
test
lds
lret
or
pop
mov
mov
add
jge
adc
stos
fstpl
jb
xor
rcr
jmp
push
ja
out
push
repnz
or
inc
out
ljmp
ds
or
lret
sub
mov
int3
jnp
sbb
mov
repz
lahf
jecxz
mov
mov
cli
or
lods
insb
pop
loope
pushf
sahf
inc
outsb
xchg
dec
rcl
and
mov
sub
js
mov
mov
cmpsl
in
sbb
sbb
cmpsb
std
lea
xchg
and
lods
stc
sub
cwtl
xlat
or
ret
les
addr16
pop
jne
fstpt
mov
insl
push
lcall
jge
mov
dec
mov
pop
sub
adc
add
negl
loopne
jp
inc
push
push
xchg
jmp
xchg
hlt
cmp
int3
cmc
repz
push
je
sbb
icebp
xchg
cmp
and
gs
sahf
rcrb
push
test
mov
shrb
or
lret
and
add
das
ss
cmp
loopne
int
mov
and
inc
xor
outsb
cmpsb
xor
std
add
or
cmp
pop
cmp
aam
xor
insb
mov
sub
xchg
scas
nop
aam
je
mov
xchg
addl
mov
xchg
sbb
mov
cmp
inc
fidivs
add
dec
scas
fdivrs
out
mov
es
cwtl
inc
sub
lahf
insl
test
and
addr16
sub
aas
or
imull
pop
stc
add
mov
aam
out
rcr
push
sbb
pushf
mov
cmp
repz
xchg
shll
sbb
mov
test
ds
addb
mov
lds
repnz
cs
pop
sub
movsl
pop
mov
sub
sub
outsb
ret
jg
mov
rorb
sbb
insl
lret
cmp
inc
clc
hlt
negb
ret
pushf
mov
pop
and
cmp
fstl
sbb
or
add
lock
mov
popf
cs
mov
mov
push
pop
lock
inc
out
sub
add
push
bound
inc
push
inc
lahf
pop
negl
cs
sub
out
decb
daa
and
js
stos
inc
and
fnstenv
mov
dec
and
add
stos
push
cld
and
and
pop
sbb
sub
lods
push
and
add
jg
inc
push
sub
iret
pop
pop
or
sbb
jns
jae
mov
cwtl
xlat
cltd
pop
stc
push
insb
push
imul
enter
daa
push
fs
push
inc
jne
xlat
cmp
xchg
lcall
xchg
lret
mov
in
xchg
inc
repz
xor
fwait
xchg
sbbb
fidivrl
aas
dec
stos
mov
shlb
iret
push
scas
mov
inc
or
fs
in
cltd
mov
out
ret
add
gs
adc
fstpl
ds
icebp
call
inc
xor
jecxz
mov
notb
mov
push
loopne
inc
lcall
mov
xchg
cmp
jl
sbb
jmp
lods
dec
jo
mov
daa
cmc
xor
mov
lds
mov
lods
pushl
scas
mov
adc
xlat
ja
jbe
imul
cli
hlt
sub
clc
mov
insl
out
imul
dec
adc
and
shll
add
jecxz
test
fcom
lret
out
mov
mov
popf
mov
push
mov
inc
mov
push
es
roll
pop
xor
xchg
dec
test
mov
pop
cmp
xchg
out
bound
ret
arpl
push
and
xlat
insb
mov
cmp
rcll
jg
loop
in
je
lahf
mov
shlb
or
ja
sub
pop
cmp
outsl
lahf
add
push
pop
add
aas
loope
test
jnp
gs
fdivl
pushf
jbe
cli
sbb
mov
mov
mov
mov
pop
adc
mov
mov
inc
jl
xor
pop
jns
icebp
in
xchg
lds
pop
icebp
push
lock
inc
sub
push
add
ftst
jno
and
in
sub
lds
rolb
and
dec
insb
jp
inc
jg
cmp
jae
xchg
loopne
movsl
test
cltd
test
cmp
pop
ret
out
mov
mov
mov
fdivs
xor
xchg
les
inc
loope
pop
dec
push
lods
add
mov
enter
xor
ljmp
lcall
movsl
rclb
mov
fs
xor
mov
cs
movl
loopne
leave
mov
inc
xor
roll
or
push
roll
adc
fcmovb
jge
sbb
add
cmp
mov
sbb
or
pusha
sbb
mov
cmc
or
jnp
pop
jbe
mov
cmpsl
fisubs
adc
test
adc
xchg
cmp
push
rsqrtps
lcall
fcoms
xchg
lock
xchg
dec
cmp
sbb
in
lahf
inc
call
dec
orb
icebp
mov
outsl
loopne
and
nop
mov
insb
mov
mov
ret
test
add
faddp
leave
sbb
loop
pop
pop
and
pop
sub
xor
push
mov
outsl
sub
xchg
scas
lock
mov
cwtl
fimuls
into
sbb
pushf
cmc
inc
mov
ret
xchg
cmp
andb
inc
or
add
dec
or
or
popa
push
push
push
and
pop
adc
shll
mov
jae
testb
xchg
scas
movsl
insl
in
lods
rcll
js
mov
pop
test
daa
pop
bound
cmpsb
jo
pop
ret
mov
ret
repnz
mov
xor
cltd
mov
pop
and
into
and
xchg
jbe
mov
sarl
mov
inc
lea
mov
ljmp
fdivp
xor
int3
adc
adc
sbb
test
dec
cli
mov
notb
pop
clc
mov
sub
fidivs
adc
fs
dec
lds
dec
rcrl
mov
into
aam
cltd
cmp
jle
push
dec
push
sbb
stos
pop
inc
pop
stos
inc
sbb
mov
pop
stos
test
scas
cmpsb
out
push
jnp
fmul
push
call
int
adc
iret
ss
add
pop
idiv
add
rorl
mov
imul
cmc
sub
jle
sbb
push
ret
cs
mov
mov
std
mov
inc
push
add
push
sbb
lods
xor
cmp
sarl
jb
and
adcl
mov
pop
and
mov
jle
mov
mov
sub
adc
fcomp
mov
icebp
jbe
in
popf
shll
jo
cmp
push
sbb
push
pop
rcrl
cmp
mov
jecxz
notb
out
jge
data16
pusha
pushf
fistps
add
js
lods
cwtl
push
xor
cmp
xor
push
xchg
pushl
cli
pop
xchg
repz
push
xchg
inc
repz
push
cmpl
jp
jmp
call
pop
ret
xchg
sbb
ja
cmpsb
push
sbb
dec
cmp
rolb
or
pop
lock
pop
sbb
mov
mov
xchg
cmp
int3
ficoml
sbb
shll
mov
xchg
cmp
inc
mov
lcall
jle
mov
in
std
xchg
mov
cmpsb
outsl
inc
es
lea
xor
add
jle
ror
fdiv
mov
cs
jo
cmp
lret
lock
imul
lds
lcall
mov
icebp
push
inc
dec
add
or
jg
pop
xor
dec
and
cmp
mov
sbb
push
cmp
mov
push
aaa
push
sub
rorb
xor
ljmp
imulb
mov
jle
sarl
inc
inc
adc
xor
das
or
adc
test
insl
mov
enter
out
les
pop
aad
rorb
mov
pop
ficoms
pop
pushf
scas
and
icebp
fucomip
jno
or
sub
ror
popa
pop
push
cmp
arpl
pop
ljmp
fsts
dec
test
xlat
sub
push
xchg
push
jo
mov
pop
and
ror
cmc
push
in
test
subl
mov
sahf
int
cmp
xchg
mov
pop
push
inc
push
xchg
sub
jb
jne
rcrb
xor
jp
orl
fiadds
imul
dec
loopne
rcl
mov
pop
pop
lods
add
testb
inc
movsb
mov
mov
rorb
xchg
fcomps
maskmovq
notl
xchg
add
mov
dec
push
mov
and
test
mov
gs
mov
lahf
clc
jo
add
mov
xlat
popf
sub
push
dec
xchg
or
in
add
xchg
xor
push
call
push
sbb
inc
cli
xchg
mov
dec
add
lret
lods
into
insb
lds
sbbl
cld
push
divb
jb
mov
nop
out
inc
adc
mov
cmpsl
sub
mov
stos
push
pop
movsb
cwtl
mov
jns
out
xchg
adc
in
add
je
jb
out
inc
pop
in
sbb
dec
mov
add
stos
mov
jl
fcmove
push
mov
and
repnz
ljmp
and
pop
cmpsl
inc
rcrb
stos
ret
cmpsb
and
fnsave
pop
mov
cld
add
arpl
jg
in
popf
pop
jns
sub
pop
out
out
mov
movsb
in
push
mov
maskmovq
mull
cld
mov
scas
lret
cmp
fs
and
sahf
sahf
adc
mov
arpl
outsl
xchg
in
push
mov
jne
arpl
cld
loope
inc
adc
shl
lret
lcall
call
mov
xchg
cmpsb
xchg
xchg
inc
int
fwait
mov
xor
leave
sub
popf
scas
adc
cmp
fnstcw
fs
mov
gs
mov
inc
xchg
xchg
xor
das
mov
lods
inc
sub
push
push
pop
in
in
rcll
faddl
ret
push
movsl
xchg
and
pop
sub
mov
dec
test
out
std
jno
sbb
cmpsb
adc
in
xchg
add
and
jmp
xchg
ret
mov
xor
out
ja
jecxz
inc
jg
pop
out
sub
or
dec
add
lods
dec
mov
lds
jmp
cmp
insl
adc
es
sahf
call
mov
es
xlat
pop
adc
fs
adc
fmul
rolb
jl
movsb
sub
cmp
movsb
mov
push
xor
mov
mov
add
mov
push
sarl
ljmp
sub
sub
push
cmp
sub
out
cmp
cmp
in
loopne
outsb
in
shr
adc
xor
fdivl
addr16
fisubs
rorb
out
cli
adc
push
out
roll
lods
dec
jo
push
inc
js
insl
aas
aam
jmp
push
adc
jecxz
mov
inc
or
lret
push
pop
scas
lds
sub
aas
pop
xchg
loop
push
lock
mov
xchg
leave
icebp
xor
std
je
push
repnz
cli
cmp
shrl
outsl
or
in
loop
or
leave
frstor
lods
lds
pop
or
mov
outsl
pushf
and
pop
dec
mov
inc
push
jno
xor
add
xor
repz
and
insl
add
pop
and
enter
mov
xchg
add
outsl
ret
dec
xchg
jge
push
int
jae
cmpsb
fidivrl
bound
push
data16
xchg
push
sub
bound
mov
push
lds
mov
inc
rclb
push
xchg
int
mov
insl
les
lahf
ret
js
mov
adc
addb
pushf
cmp
addr16
inc
dec
xor
xchg
xchg
adc
scas
outsb
jae
cmp
testb
rolb
call
insl
xchg
imull
pop
fists
or
mov
aas
aam
xchg
xchg
xor
pop
push
sbb
push
out
adc
in
cmp
and
cwtl
xchg
movsl
sbb
or
add
enter
jge
jnp
inc
sbb
loop
stos
mov
jmp
gs
lds
hlt
mov
movsb
cwtl
xchg
xor
xor
xchg
sub
jp,pt
xor
int
and
loopne
add
sbb
xchg
pop
data16
js
mov
imulb
xor
mov
js
xchg
pop
xor
je
fwait
pop
jo
cs
push
into
xor
xlat
add
out
dec
loope
rcll
mov
mov
fwait
and
fidivl
loop
pop
lods
cltd
dec
and
repnz
sarl
mov
mov
popf
jmp
add
xchg
outsb
insb
sti
ss
mov
jg
inc
jno
and
push
xchg
push
movsl
adc
test
test
insb
imul
jno
lret
test
test
sar
adc
sub
push
push
loope
dec
and
lods
popa
aad
int
push
ljmp
push
into
ffree
xchg
mov
push
push
stos
arpl
jg
insb
ljmp
push
or
jle
rorl
cmc
jmp
mov
cmp
in
mov
and
dec
iret
decb
xchg
dec
stc
aam
cltd
push
subl
push
or
inc
out
leave
sbb
std
orb
add
xor
sarl
jno
sub
pop
mov
dec
mov
imul
scas
fmull
test
add
cmp
push
sbb
add
push
push
pop
xchg
sub
fildl
stos
sub
add
sbb
loope
pop
inc
sub
xor
and
in
mov
adc
into
shrl
orb
or
pop
repnz
and
sbb
data16
dec
icebp
mov
mov
dec
xchg
xor
lea
pop
fbstp
sub
or
push
pop
iret
mov
inc
stos
jl
lahf
mov
jns
inc
lock
xchg
aam
movsb
shlb
ja
jecxz
sbb
cmp
test
sbb
add
inc
and
or
mov
inc
cmp
testl
insl
cmp
and
popf
hlt
jge
subb
sbb
dec
test
frstor
jmp
loopne
add
mov
pop
jb
scas
movsb
clc
test
lret
imul
lret
mov
sub
aad
sub
cld
or
sbb
jge
mov
xchg
jp
out
int
fildl
inc
jne
adc
jle
lahf
inc
add
push
inc
dec
cmp
cmp
lods
and
push
add
sbb
fwait
mov
push
push
outsb
in
shrb
adc
pop
sbb
orb
dec
add
mov
adc
jbe
inc
sbb
xchg
lods
popf
mov
inc
jg
push
jge
push
test
sub
xchg
jle
or
cltd
outsb
in
lods
sub
lahf
pop
pushf
mov
push
sbb
in
lods
sub
xor
push
dec
sub
and
cwtl
and
cwtl
xor
popa
in
add
xchg
arpl
sbb
pop
push
pop
iret
stc
mov
mov
ja
cmp
pop
das
loop
jg
outsb
arpl
pop
ret
fs
mov
in
psrlw
iret
test
lds
pop
jae
push
aam
xchg
iret
xorb
mov
mov
sub
add
mov
lea
sub
rorb
inc
pushf
lret
test
in
pop
mov
out
shlb
cmc
dec
push
scas
test
shr
cmpl
push
loope
imulb
lods
aam
jecxz
adc
sbb
insl
pop
in
mov
fistl
cmp
jmp
cltd
inc
mov
sahf
std
aas
repz
cwtl
js
cmp
addr16
and
push
mov
test
push
fadds
imul
cwtl
int
arpl
inc
cmp
pop
sbb
xor
shrb
movsl
or
std
pop
push
and
sti
push
mov
shlb
int3
std
inc
dec
xorl
outsb
xchg
nop
bound
shr
sbb
mov
imul
sti
cld
loopne
bound
ror
movsb
fcoms
jmp
sub
ds
mov
lock
jmp
fildll
insb
jae
pop
mov
sbb
jns
mov
ja
test
pop
pop
pop
inc
out
out
insl
push
or
ss
std
dec
push
jle
test
lock
sbb
int
inc
in
adc
lret
adc
mov
popa
mov
out
fimuls
push
lods
or
jle
pop
test
lods
add
out
in
flds
jmp
imull
mulb
xchg
scas
inc
addr16
sbb
pop
mov
loop
pop
add
jns
add
dec
mov
in
lret
sbb
mov
push
mov
mov
jb
jb
mov
hlt
xchg
cmp
push
xchg
add
cli
cld
and
pop
jns
loopne
push
lcall
into
xor
in
jecxz
pop
sarl
mov
into
mov
scas
mov
sub
cmp
xor
pop
mov
mov
pop
jg
xchg
xor
push
inc
hlt
aaa
adc
int
jno
pop
les
push
jno
fidivl
fadds
stos
fyl2xp1
jbe
mov
js
aas
push
and
xor
and
test
sub
ret
jmp
hlt
pop
aad
cwtl
push
imul
sub
jmp
mov
cmpsl
xchg
push
fisubrl
mov
pop
jb
mov
mov
movsl
fs
xchg
or
dec
movsl
jmp
xchg
jno
test
push
mov
out
stos
pop
xchg
gs
ficoms
cltd
adc
dec
jl
push
inc
mov
roll
push
dec
pop
jns
popa
jp
push
cmp
push
adc
jno
lds
xor
adc
daa
pop
fsubrl
jg
js
sbb
ret
or
adc
jo
hlt
aam
push
das
fisubrs
lret
xchg
cmp
mov
jecxz
jbe
sar
cmp
rcr
mov
dec
cmp
or
popf
and
stos
mov
test
fs
inc
movsl
or
or
pop
dec
cmpsl
inc
icebp
fmull
jmp
imul
test
jae
sub
adc
xor
addr16
inc
and
xor
rcpps
adc
jns
aaa
imul
in
adc
test
cs
dec
test
pusha
movsl
push
pop
jge
add
in
sub
popf
mov
sbb
sti
fisubs
adc
cmp
ret
stos
insl
nop
test
clc
cmpsb
xlat
sub
mov
push
xor
stc
or
pop
aaa
jl
ror
dec
popf
iret
cmpsl
ljmp
inc
sub
movsb
lock
jmp
mov
mov
sub
popa
push
ja
sub
imul
adc
les
fwait
lcall
out
cs
pop
and
cmp
aaa
in
or
push
cmp
bound
enter
or
lret
int3
roll
xchg
jge
mov
and
pop
sub
stc
nop
push
jne
cmp
insb
push
lahf
push
sub
ja
fisttps
add
stc
jae
add
inc
cmp
fiadds
xor
jo
fldcw
rcrb
in
add
dec
loopne
jo
ss
cld
je
sbb
sbb
aam
or
das
cmpb
enter
and
jp
fmulp
dec
mov
fsub
movsb
lret
cmp
movsl
stc
or
fcomip
movhps
iret
mov
add
sbb
ret
and
sub
add
xor
lods
and
ja
jg
pop
cmp
push
inc
cmpsl
cmp
mov
mov
jne
jmp
stc
inc
std
mov
cmc
mov
movsl
inc
mov
lock
pop
mov
lock
adc
ret
add
insb
xor
mov
insb
dec
lret
sub
cmp
mov
sub
sbb
out
add
push
mov
sahf
cmpsl
mov
jo
cli
shll
push
add
xchg
cmpsl
mov
pop
cwtl
mov
in
push
or
or
fwait
jae
add
cmp
lds
hlt
mov
test
xlat
js
lret
clc
pop
mov
xor
mov
sbb
cmp
cs
mov
aam
aas
pop
xchg
std
and
data16
mov
insb
pop
test
add
adc
iret
inc
and
dec
iret
stos
xchg
xchg
and
adc
out
movsb
xor
int
or
push
sbb
jmp
push
ss
sub
push
jno
outsl
cmp
rorb
shll
xor
lods
ljmp
xchg
cmp
int3
xchg
test
out
xor
jne
insl
dec
dec
loopne
xor
sbb
in
adc
dec
dec
lret
stc
and
daa
add
mov
mov
push
pop
mov
cwtl
lcall
ror
int3
aad
mov
jne
add
adcl
leave
lahf
jge
negl
jge
lock
sbb
inc
xchg
and
cmp
test
push
xor
push
repz
and
rclb
inc
jnp
push
push
cmp
int3
repnz
xor
out
sub
cmp
fidivl
clc
add
push
xchg
dec
pop
jb
fimuls
add
stos
rcr
mov
std
xor
cs
mov
mov
xchg
mov
lock
add
push
push
into
and
out
cwtl
and
sbb
ljmp
hlt
cs
int3
xor
push
icebp
push
pop
xchg
pop
out
pushf
shrl
ficompl
dec
push
cmp
push
cmp
shlb
xchg
subb
cli
push
inc
clc
xor
stc
test
movsb
jecxz
or
push
mov
mov
sub
jge
test
pop
adc
pop
jno
adc
test
jl
frstor
inc
push
jg
cmp
rol
mov
push
or
daa
sub
push
push
lods
out
dec
nop
mov
mov
outsb
pop
push
in
or
ret
lret
insb
xor
adc
and
or
inc
cmp
pop
mov
pop
aaa
jp
sbbl
add
push
lret
lods
clc
push
andb
or
mov
cmp
mov
jno
mov
outsl
hlt
lods
jmp
scas
pusha
out
mov
into
testl
add
cli
sbb
sub
repnz
test
xchg
mov
test
ror
es
in
jne
xor
cmp
ret
sbb
inc
enter
test
push
sub
add
xor
xchg
enter
lcall
dec
xchg
xor
cli
mov
lret
mov
sbb
loop
jg
push
sbb
mov
lahf
lcall
ret
push
test
subb
insb
sti
sahf
lock
xlat
add
outsl
mov
jmp
pop
xchg
in
push
pop
repnz
std
mov
cmp
es
xor
pusha
rcl
mov
lcall
sbb
pop
jbe
fs
sbb
cmpsb
cmp
and
mov
or
pop
sbb
clc
imul
sbbl
std
add
clc
adc
pop
add
jle
xlat
insl
setge
cmp
push
jo
and
popf
pop
jge
ja
lock
std
mov
test
pop
jae
mov
int
fwait
inc
mov
sahf
sub
xchg
jne
ret
add
loopne
mov
rcrl
stc
xor
mov
inc
stos
adc
mov
add
decl
rcrl
repz
int3
cmp
popa
sahf
jbe
bound
mov
insl
mov
lea
pushf
daa
push
inc
sbb
inc
pop
or
mov
mov
push
xchg
div
insl
mov
aas
xchg
das
pop
hlt
inc
adc
daa
rcrl
lea
and
daa
dec
push
scas
add
ja
fwait
and
lods
add
test
icebp
arpl
or
push
addl
and
jle
out
push
lea
jbe
ss
sub
scas
movsb
aaa
aaa
mov
xor
or
je
jge
cs
mov
push
lock
ja
jl
push
dec
cmp
pop
xor
sahf
mov
popa
xchg
mov
dec
cld
das
xchg
int3
pop
and
sub
xchg
popa
pop
test
push
sub
mov
dec
cmp
xchg
xor
jae
inc
vpavgb
pop
movsl
es
shrl
lods
fisubrs
stos
das
lock
jnp
js
xchg
xor
mov
dec
push
pop
aad
vpmovsxdq
xor
pop
movsl
sahf
data16
sbb
outsb
mov
push
inc
out
mov
in
inc
xchg
inc
push
daa
shll
mov
fs
pop
xchg
xor
cmp
cmp
test
stc
or
imul
or
lock
and
cmp
and
repz
flds
sahf
aam
rcl
pusha
xchg
dec
mov
mov
in
sub
xchg
cmc
leave
in
int3
adc
enter
fisubl
js
jno
adc
sbb
mov
ret
mov
jb
subb
adc
fcoms
inc
push
repz
int3
stc
insb
mov
fisubl
mov
mov
test
subl
stc
rcrl
or
and
rcl
or
ret
pop
jmp
xchg
out
adc
pavgb
pop
lea
in
inc
mov
sub
fbstp
push
dec
mov
gs
push
adc
int3
pslld
stc
es
adc
into
std
addl
ret
mov
imul
xor
cmpsb
inc
aas
ret
testl
push
enter
nop
cmp
int3
aaa
mov
lcall
and
out
push
stos
cli
mov
mov
adc
cmp
adc
sbb
scas
dec
mov
addr16
pop
add
daa
ss
call
pop
xchg
cwtl
out
mov
pop
pop
inc
and
aas
sbb
xchg
pop
sbb
push
jo
mov
leave
insl
dec
push
dec
dec
jle
sahf
dec
xchg
popf
repnz
fnstenv
xor
dec
sub
sub
xlat
imul
cmp
mov
js
cmpsl
pop
adc
xchg
in
sbb
fistpl
mov
in
lret
fsin
scas
popa
ljmp
lret
call
jp
jbe
jmp
mov
cld
cmp
mov
adc
lods
mov
mov
or
bound
imul
fxch
out
pop
jns
inc
mov
int
into
movsb
mov
lods
fwait
lock
addb
adc
add
out
imul
mov
lcall
daa
push
sbb
icebp
or
push
mov
xor
xchg
jg
repz
fnstsw
jmp
inc
cmpsb
test
push
bound
push
sbb
push
jl
push
sbb
or
cmpsl
jbe
push
cli
pushf
push
loop
int3
dec
js
in
push
push
stc
xchg
out
popf
aam
sbb
and
lret
icebp
mov
or
inc
arpl
jecxz
add
jno
sub
rolb
mov
adc
inc
leave
cmp
scas
outsl
inc
insl
rcrl
mov
mov
loopne
adc
xor
mov
pop
add
hlt
pop
push
add
test
sub
mov
lock
cs
xchg
jbe
pop
aam
lahf
fcompp
imul
xchg
mov
xchg
add
js
ds
ja
cmpsb
jle
dec
jle
nop
dec
xlat
pop
out
sbb
mov
rcll
out
jmp
mov
cmp
clc
sahf
div
lock
jae
fldl
rclb
movsl
add
fs
pop
push
popa
lock
adc
outsb
stos
rcrl
sub
jl
test
inc
jl
mov
data16
push
aad
cmp
adc
push
scas
jb
or
sbb
xor
pop
ficompl
mov
pop
arpl
jge
sbb
push
pop
gs
lds
sub
nop
js
cmp
lahf
pop
fldcw
call
mov
lret
cli
cmp
xlat
pop
pushf
inc
repnz
mov
dec
das
xchg
cltd
bound
cmpl
je
ret
lcall
ret
mov
sahf
inc
mov
repnz
jle
cmp
cmpsb
sbb
les
push
mov
push
int3
rorl
and
cltd
and
cmpsl
mov
and
leave
dec
mov
sub
iret
enter
xor
push
fistpl
xor
andb
pop
mov
ss
mov
add
lods
out
loop
decb
inc
ss
adc
std
fadd
jns
pop
cmp
inc
inc
jle
pop
jge
push
cmp
cmp
cmp
xchg
mov
jge
jg
ss
or
pop
and
test
mov
xor
adc
mov
mov
pop
sti
test
lret
adc
jl
fmuls
or
mov
pushf
int
outsb
aad
push
mov
popa
xchg
xor
dec
sub
lret
xor
jp
out
loopne
mov
jno
mov
mov
pop
loope
inc
iret
sub
fs
ret
mov
adc
data16
add
add
xchg
scas
sar
xor
pop
jmp
xchg
popf
push
jg
scas
push
mov
out
out
jmp
pop
and
sub
gs
fwait
adc
cltd
dec
int
les
test
xor
add
add
jno
dec
sbb
dec
jns
imul
fidivs
data16
sbb
mov
movsl
mov
jp
lea
adc
jp
pop
out
push
loopne
testb
push
repz
xchg
xlat
std
hlt
fsubrs
popa
cmc
jns
jmp
pop
bound
pop
xchg
xchg
xorb
fmuls
cwtl
out
or
pop
test
push
jmp
fs
dec
icebp
pop
cli
push
jmp
sub
pop
xchg
imul
jb
add
pop
jnp
rdmsr
es
js
mov
in
dec
into
aas
sbb
xor
xchg
cmp
lods
sahf
mov
lret
inc
cli
cmp
xchg
jecxz
inc
gs
js
sub
jnp
test
repnz
xor
stos
jmp
outsb
lods
push
sub
add
lds
inc
pop
xchg
or
or
push
mov
jp
xchg
inc
stos
inc
jns
insl
cmovnp
pop
pop
movsb
popa
sub
out
xlat
xchg
jbe
lods
aam
push
ret
add
push
ret
mov
mov
shll
into
test
jle
cli
lds
or
rorb
xor
push
pusha
sarb
xchg
loopne
inc
cmpsl
int
adc
sbb
push
and
inc
test
adc
out
xchg
mov
and
lahf
das
fisubl
dec
jns
or
sub
inc
ljmp
xlat
les
out
gs
inc
ret
xchg
rorl
orl
add
xor
fstps
in
lock
mov
in
jns,pn
cmpsl
inc
repz
mov
push
dec
adc
push
sbb
dec
daa
inc
aam
lds
rep
call
cmp
outsb
movsl
push
push
mov
sub
xchg
lret
inc
test
jp
in
fs
pop
pop
add
or
mov
pop
addb
jnp
xchg
jbe
adc
lock
cmc
push
out
or
test
cmpsl
ljmp
push
sub
mov
cli
inc
loope
xor
inc
loopne
shl
pop
pshufw
dec
int3
jbe
loope
mov
lds
insb
mov
mov
fmull
pop
test
pop
scas
dec
addr16
sar
lcall
dec
pop
add
pop
mov
inc
adc
sti
leave
cmpsl
popf
and
adc
ss
mov
or
shrb
sub
stos
dec
int3
inc
push
enter
mov
mov
adc
out
pop
xchg
and
cmp
mov
jl
jnp
test
pop
sbbb
fisubl
test
jmp
fs
test
mov
xchg
daa
jns,pt
movsb
adc
cmp
dec
mov
or
cmp
mov
ljmp
jns
xor
out
fstpl
jl
js
dec
sbb
rorb
cmpsl
jmp
arpl
push
push
adcb
xchg
fisubrs
pop
and
sbb
adc
out
in
movsl
gs
test
and
and
in
mov
enter
loopne
dec
jno
xchg
sbb
cmp
dec
lret
jb
sbb
inc
int3
mov
xchg
aas
bound
cmpsb
push
pop
lods
push
and
push
push
movsl
or
arpl
sub
mov
int
fmul
sub
push
inc
xchg
icebp
xchg
cld
les
jne
xchg
and
in
lds
mov
in
mov
faddp
mov
and
in
mov
sarb
mov
adc
and
adc
pop
dec
dec
push
imul
dec
push
mov
cmpsb
pop
inc
mov
sub
xor
xchg
xchg
in
es
clc
imul
mov
inc
enter
mov
addr16
jmp
lds
xchg
cmp
leave
xlat
arpl
je
pop
es
xchg
sarl
pop
cmp
test
lcall
mov
std
hlt
xchg
inc
xchg
lds
bound
xchg
imul
sbb
fmull
je
sbb
movsb
sub
movsl
mov
jl
aas
in
aad
push
rcll
or
pop
ret
fwait
pop
icebp
mov
fmull
jle
xor
sub
fisttpll
inc
xor
loopne
iret
sbb
push
outsb
lcall
sub
or
push
mov
mov
fdivp
pop
std
arpl
leave
ret
mov
sti
push
sub
jb
lea
pop
leave
push
add
jl
inc
in
insb
inc
out
sub
cmp
outsl
sub
imul
icebp
rcrl
icebp
add
mov
sbb
rclb
imul
call
cld
add
call
mov
pop
movsl
sub
jge
ret
mov
shll
into
jne
add
inc
mov
out
cmpsl
cmp
mov
mov
add
push
stos
jg
iret
xlat
sub
mov
adc
das
dec
and
dec
push
imul
mov
adc
and
into
ss
outsl
xor
cmp
dec
pop
pop
outsb
in
arpl
sbb
pop
sti
aam
hlt
outsb
xchg
insb
jo
inc
inc
jmp
jo
imul
iret
adc
xchg
ja
inc
pop
mov
or
cmpsb
pop
stos
lcall
gs
movaps
mov
lea
cmc
popf
ljmp
push
lcall
lcall
sbb
sub
xchg
push
rcrb
out
push
xor
filds
mov
dec
and
inc
mov
inc
pop
fmull
out
in
cmc
shl
stos
fdivr
dec
int
pop
pop
mov
andb
mov
mov
fsubs
inc
mov
imul
fisubrl
mov
mov
enter
in
lahf
adc
push
in
loopne
mov
xchg
cmpsb
dec
jl
enter
xor
outsb
xchg
inc
mov
cld
ljmp
mov
and
jno
pop
jmp
mov
xor
in
fldt
cmp
pop
sbb
push
repnz
imul
dec
jno
cmp
jae
aam
into
add
mov
sbbb
push
movsl
pop
aas
int
adc
or
stos
add
dec
divb
pop
or
or
push
fsubs
dec
imul
mov
dec
and
mov
push
pop
out
fdiv
sti
popa
xchg
jae
xor
cli
dec
xlat
jns
pop
xor
xor
sub
or
or
mov
cwtl
in
xchg
lods
xor
jl
xor
xchg
pop
testb
fmul
ret
test
or
icebp
push
push
dec
frstor
pop
sbb
push
mov
pop
add
test
repnz
cmp
mov
std
xlat
xchg
jge
pusha
iret
push
mov
or
and
lcall
jge
pushf
jmp
and
sbb
shl
push
or
cli
dec
jo
push
and
repz
ljmp
sarl
cmp
pop
dec
and
cs
in
sahf
idivb
jns
out
or
std
or
sub
out
or
dec
ficoml
pusha
out
cmpsl
sub
stc
cmp
aam
mov
xchg
xchg
add
pop
xchg
and
loop
in
fisttpll
adc
xor
lahf
test
xchg
adc
xchg
pop
pushf
push
push
sub
mov
sub
sti
mov
fnstcw
cmpsb
pop
enter
mov
pop
mov
adc
pop
cli
xchg
stos
movsb
mov
mov
call
mul
or
lcall
or
out
dec
aad
add
xor
loop
add
push
outsb
daa
cmp
loopne
subb
mov
sarb
push
push
lock
in
sub
pop
mov
ja
or
nop
adc
sti
test
push
popf
sub
mov
mov
push
push
pop
push
add
inc
ds
mov
sbb
pop
mov
les
mov
xchg
repz
inc
and
mov
sbb
call
mov
daa
pop
jle
pusha
lret
es
lods
dec
and
adc
lcall
arpl
aaa
out
cs
jb
xor
pop
dec
fwait
ret
rcr
sub
rolb
dec
addr16
cli
iret
mov
mov
mov
xlat
shl
mov
jbe
add
sub
test
fisubrl
sbb
dec
add
sti
lods
ss
mov
push
xor
jg,pn
test
fistpll
adcl
sub
add
xchg
mov
mov
cmpsb
ficomps
and
mov
imul
dec
lods
inc
stos
in
inc
mov
add
inc
jbe
sub
xor
xchg
imul
cmc
sbb
jle
mov
cmpsl
push
jl
inc
push
loopne
mov
andb
insl
inc
mov
repz
mov
pop
add
push
jns
or
imul
lock
in
call
add
push
mov
jo
cmpsb
pushf
jbe
xchg
add
xchg
jge
subb
inc
mov
mov
dec
mov
add
push
ret
xchg
sbb
pop
bound
adc
mov
xchg
in
ja
aaa
das
push
sub
outsl
jno
int
repz
mov
pop
jb
ljmp
arpl
push
repz
inc
sbb
je
dec
scas
in
push
enter
xchg
pop
and
sti
mov
cmp
cli
cmpsl
sub
pop
and
out
test
jmp
in
cmp
pop
push
sub
adc
cmp
mul
std
adcb
stos
aaa
rcl
mov
sahf
and
sbb
add
fistpll
jmp
jg
cli
fistpll
lret
sub
js
dec
test
out
mov
rcrb
push
add
push
in
pop
fcom
stc
lds
das
lahf
stos
jp
daa
subl
ret
xchg
dec
lods
std
mov
adc
fiaddl
xlat
loop
xor
rorl
sbb
pop
jns
arpl
dec
lret
and
rcrb
data16
sub
jo
mulb
out
jno
sti
and
popf
cmp
inc
add
push
and
das
jae
icebp
lret
xor
cmp
int
int3
arpl
or
test
xor
jae
jb
mov
push
xchg
cmp
adc
sbb
lods
jne
and
mov
iret
push
adc
outsb
leave
sahf
std
or
or
jb
divb
iret
xchg
push
aas
and
and
pop
dec
inc
jno
sub
jmp
cmp
ja
jle
test
fidivs
lods
subb
push
jl
sbb
ljmp
and
lret
xor
adc
repnz
pop
pop
inc
or
jae
lea
pop
cmpsl
and
xchg
pop
xchg
sub
mov
mov
sbb
aad
lods
add
xor
ret
fwait
cwtl
push
sub
mov
lahf
xchg
loopne
jne
es
int
sbb
bound
mov
cmpsl
push
mov
fiadds
outsl
cmp
loope
xchg
cld
dec
icebp
stos
jne
int
inc
push
mov
sti
imul
cs
aam
std
sub
or
lods
xchg
nop
mov
in
andl
sbb
cmpb
mov
movsb
adcl
nop
mov
mov
js
data16
mov
and
lret
repnz
scas
mov
cmp
test
mov
xchg
cmp
push
mov
xor
mov
leave
mov
ds
gs
jnp
int3
pop
jno
imul
cmp
xchg
popa
push
jnp
jae
js
xchg
lret
mov
pop
test
inc
movsb
pushf
mov
pop
cmp
scas
lods
lret
idivl
add
daa
cli
mov
pop
cmp
mov
es
imul
jmp
lds
add
test
xchg
leave
jge,pt
jg
daa
addb
pop
push
or
stos
into
add
inc
or
cld
cmp
jno
mov
cltd
insb
add
sbb
in
repz
xor
cmp
add
sub
hlt
lcall
sub
sbbb
in
mov
lds
popa
sub
test
push
sbb
repnz
xlat
cld
fwait
orb
pop
jl
xor
jl
adc
jbe
pop
imul
adc
movsb
mov
inc
test
shlb
sbb
pop
in
or
iret
push
and
int
mov
popf
push
xchg
pushl
ja
cmp
es
into
pop
in
mov
or
sub
push
test
sarl
or
jae
das
push
pop
sub
pavgb
shll
xchg
mov
fadds
stos
sarl
test
stos
mov
divb
mov
push
sub
in
lret
inc
adc
cmp
lds
sbb
mov
mov
jl
ja
push
or
pop
push
mov
lret
scas
outsb
shl
add
outsl
lcall
and
cltd
mov
push
xchg
fistl
push
and
inc
in
cs
and
ja
jg
sub
pusha
insl
cmp
pop
fstl
cmpsl
mov
clc
scas
repz
outsl
mov
xlat
sarl
sub
dec
adc
adc
sub
test
je
dec
xchg
mov
decl
mov
scas
inc
add
les
leave
xor
mov
mov
ficoms
data16
fcoms
imul
das
mov
inc
add
adc
push
mov
mov
xor
in
mov
lods
sub
or
xchg
mov
fwait
es
and
clc
rcl
adc
and
adcb
or
mov
idiv
dec
pusha
scas
sbb
lret
or
adc
ficoms
mov
rcr
sub
sarl
sbb
jo
ljmp
or
or
orb
pop
cmp
push
iret
ror
xchg
icebp
cmp
dec
data16
gs
push
or
dec
insl
fmul
pop
stc
inc
psubq
bnd
or
mov
mov
sti
jecxz
negl
rcrl
test
pusha
bound
bound
imul
out
inc
xor
imul
mov
bound
xchg
stos
loop
adc
cmpsb
mov
subb
fstpt
js
fcoml
pop
xchg
sub
fsts
jge
jg
fdivrl
pusha
lret
xor
or
lods
std
outsl
or
add
add
sub
sbbb
sub
inc
xchg
jne
mov
imul
ljmp
fadds
iret
mov
sbb
js
mov
fdivrl
sub
in
cmpsl
sbb
je
adc
xchg
push
push
repz
scas
jecxz
dec
jnp
loopne
mov
neg
aam
mov
mov
aas
mov
into
cld
daa
aam
lods
loope
mov
mov
or
or
stos
andl
push
lret
lret
inc
push
int3
lcall
loope
push
insl
loope
push
cmp
outsl
xchg
test
mov
bound
push
push
push
mov
dec
icebp
jmp
xchg
dec
mov
imul
mov
cmpl
jle
xlat
pop
cwtl
icebp
scas
loope
in
test
mov
mov
cmc
in
mov
lret
xchg
dec
jb
xchg
push
sbb
test
js
into
xchg
and
div
dec
pop
stos
popf
dec
into
lock
add
lock
or
push
jecxz
iret
xlat
or
xchg
push
or
sub
bound
ret
mov
inc
pusha
dec
fldl
movsl
scas
mov
mov
mov
addb
das
sub
push
xor
jbe
mov
mov
mov
xchg
repnz
push
outsb
shrl
lods
mov
sbb
inc
loope
sahf
popf
mov
pop
push
xor
or
mov
xchg
lock
push
out
rol
cmp
dec
loope
or
pop
push
test
add
add
jbe
and
and
insl
lret
sbb
andb
ret
mov
mov
out
lcall
iret
xor
pop
imul
filds
daa
sbb
leave
test
pop
pop
adc
mov
shr
and
pop
xchg
pop
shll
std
inc
mov
inc
hlt
pusha
mov
dec
mov
sbb
sarb
in
cmpsb
xor
pop
out
sarl
pop
in
sbb
std
adc
and
outsl
sub
fsubl
cmpsl
mov
les
xchg
enter
inc
rorb
cmpl
or
mov
test
js
inc
negb
cwtl
leave
pop
xchg
xchg
int
dec
cli
daa
or
or
aas
in
add
in
in
cltd
fildll
xchg
dec
dec
sub
cld
mov
insl
in
mov
cmova
xchg
test
sbb
enter
enter
movsl
lea
scas
mov
sbb
fstpl
jb
jecxz
insb
jle
lods
fsubrl
dec
sbb
ret
movsl
test
rorl
les
adc
daa
jns
inc
mov
jo
insb
out
fwait
or
lods
mov
testb
popf
lret
adc
roll
sar
je
in
fstpt
sub
mov
pop
and
popa
cmp
xor
pop
in
jle
push
push
dec
xchg
enter
idivl
jae
insb
arpl
and
testl
pop
mul
insl
jle
popa
cmpsb
mov
xor
hlt
push
add
cmp
popf
mov
cmc
loop
test
sbb
cmp
mov
out
jnp
fnstcw
movsl
dec
loope
push
inc
push
std
or
push
test
fimull
das
sbb
imul
lods
xor
dec
lret
sub
outsl
ret
push
fldl
and
xor
repz
cmc
mov
pop
cmp
adc
roll
push
or
lahf
mov
pusha
mov
movsl
dec
and
iret
sub
cld
nop
das
mov
mov
push
jl
ja
xlat
inc
iret
rolb
dec
bound
xchg
ss
ja
push
inc
dec
dec
dec
je
jg
adc
and
lcall
cld
xchg
and
jae
and
push
pop
ret
or
das
pop
popf
loopne
mov
or
popf
add
mov
js
xchg
sbbb
imul
xlat
sbb
and
shll
jp
outsb
inc
dec
dec
pop
cli
int
sub
mov
mov
incl
or
inc
rcl
mov
arpl
mov
cltd
dec
xchg
imul
pop
bound
loop
jle
movsb
sbb
lods
push
jb
inc
pop
xor
bound
mov
cmpsl
pop
or
push
adc
cmpsl
cmp
sub
add
xchg
lds
mov
push
add
mov
cmpsb
and
enter
cmp
aad
or
cmp
and
nop
pop
daa
mov
test
and
pop
mov
sti
dec
adc
iret
mov
lcall
in
sub
inc
inc
pop
and
mov
sub
xchg
sahf
sbb
dec
xlat
movsl
xor
mov
stc
jbe
mov
xchg
sub
out
lahf
jnp
rcrb
xchg
cmp
xchg
dec
daa
out
push
sub
xchg
mov
dec
mov
out
mov
rclb
lahf
pop
push
das
jbe
sub
adc
idivb
mov
push
mov
in
test
iret
xor
jle
mov
xchg
mov
mov
in
lret
push
cmpsl
mov
rol
fwait
push
mov
xchg
fdivs
icebp
imull
mov
lret
jl
outsl
out
repz
or
jg
xchg
inc
idivb
loopnew
ficoml
cwtl
sbb
xor
pop
pop
xor
int3
sub
inc
push
add
ret
sub
outsl
adcb
stos
insb
gs
insl
jb
dec
xor
pushf
or
int3
insb
fmulp
jmp
mov
sti
or
and
xor
outsb
cmp
pop
int
mov
jecxz
fdivl
ljmp
xchg
adc
sub
mov
xor
loopne
mov
sub
dec
cwtl
arpl
dec
insl
ds
xchg
dec
outsb
sahf
mov
call
sub
hlt
add
xor
pop
mov
mov
stc
or
push
into
call
cmpsl
xor
clc
sub
fnstenv
out
jnp
add
test
cli
push
pop
and
inc
sub
nop
adc
in
pop
out
mov
mov
jno
mov
sub
mov
mov
or
inc
add
outsl
jbe
jne
mov
or
sbb
inc
and
stos
hlt
rorl
loopne
push
sarb
nop
fs
mov
data16
test
xchg
pop
mov
and
mov
std
enter
fdivrs
lds
addr16
xchg
int
cmpsb
mov
ds
or
dec
test
fnstsw
mov
mov
push
faddp
mov
pop
frstor
jmp
daa
test
push
pop
js
jmp
xchg
xor
or
sbb
sbb
push
sbb
pop
enter
testb
sbb
incb
xchg
adc
shll
cmc
int
div
jae
xor
mov
fwait
sub
divb
jmp
jbe
dec
in
jl
outsl
out
in
mov
dec
dec
jmp
sahf
lock
shlb
mov
ds
and
popf
out
frstor
loop
loop
adc
es
mov
andb
shlb
push
in
lret
pop
dec
repz
xchg
loop
pop
rep
and
xchg
adc
dec
test
xor
std
xor
dec
xchg
jns
cwtl
arpl
or
mov
outsb
mov
fcoms
sbb
dec
dec
cmp
shll
shrl
pushf
mov
stos
add
xlat
xchg
adc
repz
or
nop
sbb
sti
inc
lock
fnsave
outsl
bound
ss
xor
not
jnp
or
out
lock
pop
les
in
imul
cli
hlt
stc
nop
xor
bound
daa
jl
mov
or
xor
repz
lcall
push
shlb
push
and
mov
push
add
test
iret
pop
mov
cmp
int
pop
mov
push
dec
add
add
popf
movsb
push
cmpsl
das
pop
ss
cmp
jo
and
ret
mov
sbb
or
fwait
push
ret
add
outsl
scas
and
sarb
xor
fisttps
mov
andb
push
ljmp
or
xor
shlb
leave
mov
pop
lret
ret
je
jae
out
xor
or
mov
xchg
sub
mov
ss
dec
lock
out
and
pop
std
mov
pop
xor
mov
xchg
adc
hlt
insb
push
mov
fisttpll
int
pop
outsb
pop
sub
xchg
fmull
jb
jae
pop
mov
shrl
aaa
add
lds
leave
cmp
mov
cmpsb
xor
jno
into
cmp
jge
sub
jnp
lahf
mov
loop
pop
pop
test
inc
sti
inc
push
pop
sub
insl
sbb
mov
ret
jg
mov
jbe
imul
fld
and
jbe
mov
mov
jo
xchg
mov
movsl
flds
lcall
add
lock
dec
cmpsl
jae
mov
mov
jns
pop
aas
or
xor
imul
outsl
dec
iret
stos
push
aam
push
mov
or
mov
shl
hlt
pushf
sahf
int3
mov
inc
inc
cmc
ret
mov
sbb
dec
xchg
bnd
push
pushf
sti
mov
and
mov
into
sbb
scas
pushf
push
mov
xchg
arpl
cltd
ret
mov
in
test
fimull
popf
das
pop
mov
out
into
test
jle
stos
pop
int3
imul
mov
jno
lcall
push
pusha
and
mov
je
lcall
cmp
repz
mov
pop
das
adc
jno
outsl
ret
push
sbb
jg
add
inc
daa
imul
jg
shl
sub
adc
xchg
pop
lods
mov
rorl
lret
mov
cltd
in
loope
inc
sbb
push
cmp
xchg
jg
mov
pop
mov
sub
sub
or
popf
cmpsl
push
mov
bound
movsl
jl
jnp
adc
push
ljmp
and
js
sub
or
dec
enter
dec
je
inc
cmp
jnp
scas
push
andl
jo
movsl
or
jns
push
cmp
pop
adc
repnz
mov
push
pop
jge
xchg
or
loopne
push
push
sahf
lcall
pop
push
leave
mov
outsl
sbb
hlt
fmull
shll
sub
fsub
rcll
pop
adc
sarl
in
mov
jp
and
sub
adc
jp
mov
and
imul
insb
movsb
fwait
jl
lds
clc
jo
test
shr
cmp
sbb
add
xchg
mov
out
jnp
movsb
cmp
sbb
jbe
inc
test
lcall
lret
enter
sti
xlat
dec
call
hlt
dec
and
cmp
pop
and
shrl
pushf
push
arpl
push
sub
mov
mov
aad
addr16
xorb
clc
std
test
jecxz
lcall
xchg
add
jmp
cmp
cmp
sahf
xchg
int
cmpsb
jns
scas
mov
mov
jmp
mov
inc
sbb
jle
mov
pop
mov
mov
loopne
daa
add
loop
push
movsb
or
lods
cmpsb
push
clc
insl
int
or
pop
insl
aad
sbb
sub
pop
or
cmp
test
xor
inc
mov
insb
test
ljmp
pop
ss
insl
inc
repz
daa
sub
cltd
push
ret
mov
loope
and
clc
push
inc
ds
and
inc
xchg
test
mov
loopne
pop
rcrb
das
int3
iret
jge
sbb
pop
jo
sbb
lahf
mov
addb
push
iret
sub
sbb
out
imul
divb
not
pop
push
adc
lods
repz
jmp
pop
lret
inc
lahf
mov
out
int
mov
lret
xabort
push
inc
xchg
mov
cmpsl
shr
hlt
mov
mov
jnp
jbe
mov
dec
lret
xchg
sbb
cld
xlat
add
test
jge
movsl
adc
xor
out
sub
sbb
or
lea
inc
movsl
mov
jle
xlat
xchg
fsubrp
out
fildll
mov
mov
adc
test
ds
push
stos
dec
pop
sbb
fcmovu
add
negl
int3
pop
ficomps
jo
mov
repnz
xor
dec
scas
ja
mov
and
lcall
movsb
aam
in
or
out
dec
push
js
or
fstps
dec
dec
js
jge
ret
sub
dec
mov
ja
push
nop
daa
pop
and
push
jl
inc
xchg
cmpsb
pop
lods
xor
mov
das
outsb
into
pop
push
sub
fstl
pop
lds
dec
inc
fwait
mov
xchg
xchg
test
dec
push
adc
add
stc
rolb
repnz
mov
lahf
inc
add
insb
std
push
in
pop
pusha
mov
shr
jns
movb
sub
and
arpl
inc
int3
jnp
push
fnstcw
leave
out
cld
mov
js
data16
mov
in
icebp
lock
rcrl
sub
cmp
jl
fcom
pop
movsb
ret
in
in
jecxz
out
push
or
add
jnp
push
xchg
push
sbb
inc
sahf
dec
test
pop
aad
loopne
xchg
das
notb
cli
xor
pop
iret
push
xlat
jl
pusha
pop
xchg
mov
pop
add
xchg
ficomps
cwtl
inc
xchg
out
sti
fsubrl
xchg
test
dec
outsl
fisubrs
dec
xchg
repnz
iret
and
inc
mov
dec
sub
aam
adc
outsl
mov
and
arpl
mov
jo
daa
out
jg
xor
xor
dec
insb
and
sahf
iret
mov
jne
inc
push
jp
popa
enter
les
int3
mov
es
sti
pop
add
in
call
ficoms
xchg
mov
add
sbbb
dec
push
dec
fnstsw
pusha
dec
inc
test
or
inc
pop
jae
scas
mov
or
push
jecxz
adc
or
pop
stos
inc
test
cmpsl
sub
mov
add
mov
aam
int3
mov
lea
add
outsl
lods
insb
fisubrl
repz
test
cltd
leave
adc
lret
movsb
push
ret
jnp
inc
inc
jg
push
mov
sbb
pop
stos
cmpsl
inc
testb
dec
outsb
mov
pushf
jg
scas
adc
in
or
pushf
mov
sub
sub
push
clc
pop
dec
pop
aad
loope
lods
xchg
jge
icebp
mov
dec
test
mov
xchg
ret
popf
and
hlt
adc
add
data16
xor
in
add
das
lods
xchg
mov
xchg
and
sbb
pop
lock
pop
mov
int3
mov
add
cmc
pop
test
cwtl
out
es
cmc
pop
jb
pop
mov
lock
xor
sbb
aam
sbb
popl
ficompl
push
out
sahf
enter
ss
sbb
sbb
cmpsl
sbb
inc
das
dec
les
cmp
jg
mov
or
mov
dec
dec
cmp
cmp
inc
push
push
in
out
aaa
loope
stc
jno
outsb
rcrb
pushf
push
push
popa
movsb
xor
mov
insb
pcmpgtb
pop
inc
mov
jle
jo
insl
int3
fwait
add
jae
movsl
xor
arpl
push
cmpsl
scas
mov
es
notb
jo
sub
iret
mov
xor
jno
and
leave
push
dec
lahf
pop
inc
fmull
push
addr16
loop
fimuls
lods
and
lahf
lods
or
ja
push
in
call
add
pusha
xchg
mov
sbbl
and
outsl
imul
push
mov
int3
or
mov
mov
jl
rcrl
ljmp
fsts
or
xor
sub
fdivrs
xacquire
pushf
inc
sbb
push
pop
popa
dec
aaa
push
lds
dec
lcall
mov
sbb
push
fs
and
pushf
movsl
leave
sahf
fwait
pop
or
push
push
xor
pop
fadd
mov
sub
mov
popf
add
lret
pop
adc
xchg
xor
inc
jl
jnp
loopne
mov
mov
movl
push
fucom
out
test
push
mov
lret
rcrb
int
push
cwtl
sbb
nop
lods
ljmp
xchg
push
sub
into
insb
xor
jae
in
daa
push
test
std
pop
mov
xchg
xchg
sahf
sbb
leave
pop
lcall
dec
and
in
lret
jl
lret
mov
cs
inc
xchg
mov
mov
not
pop
cmp
imul
ja
push
adc
shlb
jmp
jmp
xchg
dec
cwtl
xor
stc
mov
mov
lods
clc
pop
mov
das
xor
pushf
xor
inc
ja
sub
scas
dec
xor
clc
push
sub
cmpsl
je
ds
movsb
ds
icebp
and
sbb
cmpsl
scas
jp
lds
sahf
jno
test
ficoml
and
mov
add
push
mov
dec
cmp
add
cmpsl
std
jg
orb
xchg
imul
ret
imul
sub
pop
inc
jle
lods
mov
and
mov
mov
mov
sti
cmc
mov
jecxz
jecxz
popf
into
roll
lods
cmc
test
std
or
subb
mov
xlat
jecxz
mov
push
shll
xor
repnz
jecxz
jo
rorb
cld
mov
notl
clc
push
in
adc
push
cmp
add
cmp
and
pop
insb
pop
mov
jecxz
cmpsl
js
outsb
sub
mov
inc
jae
scas
or
inc
sub
sub
pop
xchg
test
or
inc
mov
fs
mov
xchg
sbbl
push
lds
push
das
add
cmpsl
mov
pushl
mov
ljmp
clc
pop
and
repnz
ss
jmp
push
xchg
fnstsw
loopne
fwait
add
and
pop
cmp
xchg
mov
insl
sbb
cmp
je
mov
jne
pop
icebp
or
xor
lods
adc
cs
pop
inc
pop
jle
sarb
mov
dec
dec
lods
sahf
fiadds
xor
mov
repz
sbb
icebp
lods
sub
aas
sahf
movsb
lret
pop
inc
in
and
movsl
notb
or
das
and
jb
jl
jne
aad
cmpsb
mov
sbb
sbb
dec
insb
daa
push
ljmp
and
push
daa
push
sub
mov
xor
xchg
sub
sarl
xchg
xchg
cmp
sub
inc
negb
mov
cwtl
pop
fisttpll
out
xchg
pop
test
pusha
iret
sub
add
and
adc
hlt
out
cmp
or
imul
gs
adc
ret
bound
and
bound
mov
nop
sti
cmc
push
out
in
jge
pop
cmp
xor
repnz
mov
inc
mov
mov
mov
inc
xchg
clc
dec
add
or
sub
xchg
jp,pn
ja
adc
jg
out
adc
pusha
inc
sub
imul
push
mov
xchg
shlb
jnp
ljmp
lea
repnz
cmc
arpl
scas
cmpsl
test
int3
push
and
fs
inc
xor
inc
sub
ljmp
pop
cmp
ret
adc
sbb
cwtl
fwait
and
jge
sub
jg
cmc
xchg
add
inc
fs
int
das
or
sti
push
jl
or
jb
iret
add
sbb
cwtl
movsl
fcmovne
in
rorb
fs
cli
jbe
xchg
jge
inc
inc
mov
jge
int
mov
rorb
mov
sbb
stos
jmp
push
loope
sbb
stc
xchg
es
xchg
dec
push
jecxz
and
sbb
mov
lods
insb
lret
insb
and
pop
pop
mov
dec
mov
mov
mov
shrl
leave
mov
lret
cltd
in
aam
out
dec
push
es
test
in
stos
loopne
mov
pop
pop
sub
jae
lcall
mov
outsl
insl
and
das
jnp
jmp
xor
dec
sbb
or
inc
int3
pop
cltd
dec
xchg
jno
xchg
ljmp
cmp
cmp
add
mov
aas
mov
or
or
gs
lahf
mov
xchg
dec
hlt
bound
sarl
pop
inc
iret
pop
and
je
xor
xor
dec
shrl
xchg
adc
or
xchg
xor
outsl
fistpl
lock
std
pop
mov
xor
add
test
aas
in
and
mov
mov
push
pop
cmpsl
xchg
mov
loop
out
out
jbe
inc
mov
int3
mov
gs
xchg
pusha
xor
push
jg
push
push
sbb
jge
hlt
into
xor
imul
xchg
pop
or
shl
dec
rcll
mov
add
adc
sbb
mov
scas
mov
das
lahf
subl
mov
insl
js
shl
jp
adc
cwtl
test
xchg
cmpsb
dec
pop
xchg
stos
xchg
xchg
idivl
inc
gs
lret
inc
aad
sbb
dec
mov
mov
in
sbb
inc
add
pop
lea
mov
nop
loope
adc
mov
cld
out
or
enter
cmp
sbb
mov
cmp
jno
mov
outsl
mov
stos
and
jg
add
out
out
cltd
shlb
and
add
out
jns
jle
fnstsw
div
jmp
fists
sub
jg
inc
test
sti
xchg
jbe
dec
dec
outsb
push
das
test
pop
out
lret
sub
dec
dec
or
and
inc
arpl
sub
lock
dec
pop
dec
xchg
aas
call
icebp
xor
jmp
sbb
data16
add
xchg
pop
xchg
sbb
ljmp
imul
push
sub
lods
int
ja
mov
or
icebp
cmc
and
loop
aaa
mov
sbb
pusha
bound
sbb
ds
sbb
arpl
imul
pop
mov
xor
push
stc
inc
dec
mov
jmp
pop
cmpl
mov
cld
jno
cli
stc
das
mov
jns
pop
push
leave
inc
xchg
jg
xchg
out
xchg
jmp
pop
int
mov
ds
pop
out
adc
sub
mov
cmpsl
jl
xlat
xchg
pop
fsubrl
inc
and
int3
adc
je
orb
push
push
addr16
nop
andl
orl
sub
mov
aaa
add
test
daa
ja
aas
dec
sub
sti
cld
inc
and
mov
jmp
adc
push
int
add
jg
mov
pop
dec
int3
xor
or
mov
mov
icebp
sarb
repz
push
mov
push
push
je
xor
ret
ss
dec
mov
cmp
pushf
jmp
repnz
fbld
mov
jl
sub
imul
pop
rolb
iret
mov
adc
sbb
jbe
sub
aam
daa
insl
push
sub
int3
pop
dec
sarl
mov
xchg
hlt
xor
pushf
aam
xchg
cmpl
add
in
ret
xchg
jno
jns
xchg
loopne
into
vdivpd
aas
cli
push
sub
or
imul
enter
iret
sub
sbb
pop
daa
hlt
push
xor
out
scas
mov
cltd
sub
testb
and
mov
enter
or
inc
push
xchg
push
bound
sub
clc
adc
ss
and
fistpl
call
test
and
adc
pop
mov
jecxz
xor
roll
inc
mov
or
or
jle
lcall
jne
sbb
dec
pop
test
insb
repnz
adc
or
addr16
adc
fadds
mov
jp
sbb
lahf
call
jnp
cmp
xchg
xchg
jp
push
inc
push
aas
adcl
fsubs
ljmp
xor
and
push
sbb
or
mov
aad
mov
fadds
mov
hlt
xor
loop
jae
cmp
xchg
push
mov
sub
jl
and
jg
xchg
aas
rcll
xchg
insl
cmc
iret
mov
push
xchg
rorl
icebp
sbb
jae
cltd
clc
pop
sub
repnz
or
sub
mov
iret
repz
xor
enter
dec
mull
sub
and
sbb
shll
imul
insb
mov
inc
repnz
ret
mulb
shrb
mov
inc
addb
jecxz
sub
sub
xor
cs
shl
mov
mov
fistps
inc
adc
pop
lods
loope
outsb
fidivrl
dec
pop
call
xchg
scas
clc
mov
int
cmp
movsb
push
rolb
rcrb
fbstp
mov
test
rorb
cmp
sub
cli
popa
push
cmpsb
out
xor
jl
aad
pop
mov
jno
mov
cmp
xchg
sbb
add
mov
call
lds
or
lcall
rorl
test
fmuls
pop
lock
pop
mov
sbb
fs
or
movsb
xor
mov
test
sar
popa
push
dec
je
pop
ror
cmp
sahf
pop
and
cmp
popf
popf
leave
xchg
mov
dec
and
subb
xchg
filds
pop
fwait
dec
repz
push
js
and
inc
into
les
push
mov
cli
push
jb
pop
pop
imul
dec
cltd
pop
clc
jae
push
das
adc
in
cmpsb
jp
push
push
mov
mov
xor
pop
je
repz
fisttpll
in
or
js
out
add
enter
outsb
fs
jbe
pop
xchg
fucomp
mov
imul
dec
push
mov
ljmp
push
xchg
fwait
mov
cs
or
les
dec
pop
rcrl
or
pop
jns
xchg
outsb
fwait
leave
in
mov
mov
jo
mov
addb
cld
lcall
mov
or
xchg
push
mov
shlb
data16
movsl
inc
lret
into
loop
sbb
in
mov
test
fcompl
push
mov
jmp
fisubs
fwait
push
xchg
dec
adc
adc
neg
lea
push
adc
test
subl
cmp
dec
push
inc
movsl
sbb
mov
jbe
iret
subl
inc
lcall
xor
dec
push
pop
pop
pop
adc
pop
cmp
dec
push
shlb
sbb
xchg
cwtl
std
dec
push
inc
and
xchg
inc
test
test
inc
loopne
rcll
mov
jge
and
push
push
sub
rcr
or
add
stos
fyl2x
inc
lods
insb
lods
mov
daa
jmp
lock
je
ret
fabs
shl
xchg
add
ret
lods
negb
in
fists
jno
fcoml
and
jne
and
ja
iret
jp
xor
sbb
jb
pop
mov
fs
adc
push
cmp
or
pop
inc
lret
int3
add
mov
mov
lea
rcrl
jmp
lcall
fistpl
mov
add
decl
fdivrs
scas
sbb
sbb
in
push
into
mov
pop
cmpsb
xor
pop
mov
lret
inc
scas
sbb
scas
xor
sbb
in
mov
pop
cli
add
and
cmp
xchg
sahf
mov
push
dec
mov
push
pop
mov
jnp
mov
xor
dec
or
xor
fmul
stos
push
mov
inc
inc
mov
aas
pusha
icebp
mov
and
xchg
sbb
icebp
popa
ficoms
inc
jno
mov
cltd
inc
aad
and
aam
dec
dec
cmc
dec
hlt
dec
cwtl
mov
dec
and
dec
and
xchg
data16
loopne
mov
xchg
cli
mov
ret
js
ja
jmp
sub
sti
call
dec
sub
cli
imul
pop
pop
shr
pop
mov
cmc
mov
addl
out
mov
mov
mov
in
mov
pop
insl
sub
shlb
jae
push
call
in
mov
fildll
pop
and
dec
pushl
int3
icebp
add
ret
mov
les
fistps
add
mull
cmp
imul
jmp
fnsave
call
leave
sbb
inc
push
xchg
jnp
lret
jae
xor
test
xchg
out
cmp
pop
mov
nop
movsb
inc
sbb
popf
rorl
inc
dec
xchg
scas
push
rolb
mov
dec
mov
rolb
inc
cmp
in
outsl
cmp
movsl
lea
mov
adc
out
pop
dec
sahf
mov
push
push
pushf
inc
push
push
jle
lods
pop
cmp
scas
aad
jg
jo
cmp
cmp
add
cs
jno
jmp
iret
jbe
ficompl
mov
es
push
aad
inc
sub
insb
mov
mov
xor
pop
and
mov
adc
fistl
jns
cltd
outsl
xchg
js
push
xchg
mov
push
add
gs
push
adc
and
add
pusha
divl
mov
add
xchg
add
add
push
cmp
arpl
or
jecxz
dec
jecxz
mov
xor
push
adc
bound
stc
into
int
iret
push
dec
fdivl
mov
aam
out
sbb
mov
js
fcmovne
and
jecxz
dec
inc
adc
dec
mov
fnstcw
stos
arpl
popa
add
mov
mov
sbb
loopne
xchg
dec
xor
outsl
sub
pusha
lret
inc
or
and
pop
lock
jle
mov
ljmp
adc
fs
sbb
jp
sbb
inc
cmp
push
enter
in
adc
into
xor
xchg
cmp
push
iret
les
xor
imul
cmp
mov
cmp
loope
les
xchg
stc
add
mov
dec
adcl
adc
pop
pop
addr16
ficoml
jl
xchg
ret
push
and
dec
pop
iret
bound
sub
jg
inc
jne
insl
es
leave
ss
sub
push
push
push
insb
push
add
lret
adc
mov
rol
xchg
fdivs
dec
movsl
lret
cld
jle
lods
lock
mov
jbe
push
inc
add
jo
dec
and
jns
push
pop
sub
dec
add
pop
mov
and
dec
push
jbe
cmp
push
test
sbb
les
out
xor
out
loope
or
test
dec
pop
jmp
in
xchg
mov
inc
inc
sbb
leave
mov
adc
xchg
in
in
cld
push
mov
mov
flds
and
fsubs
jbe
test
mov
sub
inc
push
loope
sarl
js
dec
roll
jns
mov
add
jg
bound
pop
pop
imul
femms
vpshlw
pop
dec
cltd
test
mov
call
hlt
or
lods
dec
roll
pop
loope
lcall
pushf
pop
cmc
in
sub
movsl
arpl
rcrl
ret
push
clc
adcb
dec
inc
adc
push
test
leave
dec
loop
add
push
xor
loope
mov
ja
cmp
jbe
data16
push
leave
loop
xchg
es
dec
dec
cs
mov
cltd
shlb
gs
jbe
mov
push
push
fs
adc
sub
sbb
nop
jmp
lahf
mov
sbb
dec
xor
iret
test
je
jae
jle
rorb
ja
and
xchg
fldl
aas
out
xchg
packsswb
sahf
in
sbb
ret
or
in
mov
mull
test
leave
push
add
fwait
out
xor
mov
mov
mov
jle
fs
mov
outsb
jns
sbbl
fs
xor
roll
xor
scas
xor
jmp
dec
cmp
not
sbb
sahf
es
pop
or
mov
xchg
mov
jecxz
mov
jl
rorb
jmp
into
in
inc
addr16
mov
mov
or
sar
cmpsb
rcrl
inc
mov
shrb
into
add
sub
aas
push
pop
xor
xchg
scas
imul
pop
mov
jl
or
inc
or
push
xchg
sub
mov
sub
jae
jp
dec
fidivrl
out
lds
insl
jns
out
lods
mov
dec
xchg
mov
icebp
sbb
test
fidivrs
frstor
fwait
es
test
decb
push
pushf
xor
add
pop
movsl
cwtl
lahf
ret
clc
xor
cli
lods
lcall
cmpsl
loop
lods
xchg
push
cmp
imul
and
jbe
fiaddl
xchg
insb
cmp
xchg
jmp
sbbl
add
or
popa
mov
int
aam
lret
push
xchg
xchg
mov
inc
fs
cmp
subb
push
xor
je
sub
aaa
movsl
sbb
sub
mov
pop
pop
ret
aas
lea
xchg
mov
push
repnz
and
xchg
mov
xor
fwait
jnp
lods
and
cld
cmp
pop
pop
divl
fldt
mov
fldl
es
nop
mov
inc
inc
imul
dec
push
xor
mov
push
loopne
inc
insb
xor
aas
out
mov
push
cmc
sbb
push
add
jne
xchg
add
mov
inc
stc
pop
cs
test
xor
repz
lret
xchg
mov
sbb
and
cmp
jmp
movsl
inc
xor
test
pop
int3
ja
push
ret
lock
mov
sub
fdivrl
cmp
jmp
cwtl
sub
roll
xchg
jmp
push
ret
call
add
xchg
inc
rcr
jle
cmp
cltd
xor
lds
aad
pop
call
sub
dec
inc
movsb
xchg
push
jns
pop
jae
lods
popa
mov
mov
bound
mov
xchg
xor
shlb
in
popa
or
jg
adc
push
out
push
leave
lods
push
es
push
lds
aaa
icebp
mov
gs
fiadds
sbb
push
inc
shrb
inc
cltd
cwtl
push
push
mov
or
shll
adcl
or
sbb
sti
mov
popa
add
sbb
imul
and
jmp
out
inc
sub
cld
shll
adc
in
insb
adc
or
cs
cmpsb
mov
pop
in
sbb
rolb
lods
les
jnp
subb
mov
mov
xchg
fs
jbe
popa
inc
fistl
xchg
das
jnp
cmp
ds
sbb
out
in
imul
div
mov
stos
add
xchg
cld
cltd
sbb
fmull
dec
xor
icebp
aad
hlt
inc
enter
add
in
xchg
pop
fwait
ljmp
loopne
xlat
jno
jo
lods
inc
lods
popf
or
cli
or
adc
stos
mov
lret
xchg
xchg
sbb
mov
jmp
push
pop
xchg
divb
int
fists
stc
mov
or
nop
and
lahf
pusha
or
aam
in
and
mov
pop
inc
int3
mov
inc
imul
ret
sub
xlat
aad
icebp
es
mov
cmp
dec
hlt
addr16
scas
lret
inc
adcb
test
dec
rcl
sbb
mov
gs
scas
xchg
cmc
test
push
adc
push
or
xchg
lret
lret
cmp
ret
mulb
sti
pop
mov
cmp
imul
inc
sahf
test
test
roll
lea
insb
out
xchg
sub
inc
cmp
scas
pop
push
lock
lds
cs
stos
loope
jne
popa
push
lds
fsubrl
andl
jle
push
xor
add
lock
js
stos
cli
jnp
cmp
out
fstp
in
cmp
mov
xor
xlat
cli
insb
push
inc
add
adc
xor
dec
stos
ljmp
cmp
gs
cmc
and
pop
rcll
and
jne
adcl
mov
pop
mov
push
popf
fcmovnu
roll
in
xchg
fidivrl
mov
xchg
mov
shlb
push
scas
add
stc
fbld
cmp
pop
adc
outsb
mov
push
push
data16
add
jp
mov
inc
loop
xorb
add
ja
cmc
pushf
dec
cs
arpl
adc
mov
jl
daa
repnz
in
fcmovnb
sbb
pop
mov
xor
aas
je
loopne
aaa
aad
and
pushf
shrb
aam
aad
negl
add
adc
lea
popa
cmc
jo
jle
dec
inc
int3
hlt
mov
jae
rcl
mov
adc
xor
dec
xchg
and
sub
popa
pop
lds
cmp
inc
in
cmp
fisubs
repz
jmp
cmp
out
lahf
lea
xadd
pop
aaa
fmul
pushf
ljmp
shll
in
gs
testb
sti
insb
jo
xor
subb
mov
inc
out
and
lahf
mov
dec
out
push
insb
pop
add
sbb
inc
push
sub
hlt
add
dec
in
mov
cmp
cmp
jne
ljmp
xor
dec
mov
mov
insb
pop
notb
or
data16
loope
aaa
pop
fs
mov
lret
test
rcrl
jg
js
adcl
inc
inc
xchg
gs
enter
repz
test
orl
cmc
push
push
or
push
out
sub
adc
into
mov
jns
jmp
jnp
push
sbb
pushf
enter
icebp
dec
enter
sub
mov
int
test
ret
xchg
cs
scas
xchg
xor
mov
xlat
and
adc
sub
push
imul
jo
push
mov
std
int
mov
aaa
push
pusha
mov
inc
aas
sbb
call
lods
inc
inc
cmp
pop
jl
fisubl
xchg
in
out
fsubl
shlb
jmp
pushf
cltd
xor
sbb
js
loop
test
pusha
inc
push
add
shl
or
lods
xchg
inc
xchg
sub
push
sbb
jge
inc
fmull
mov
insb
aam
cmp
pop
or
popa
repnz
bound
xchg
rcrl
fld1
sbb
push
xchg
mov
adcb
lds
andb
out
gs
adc
aam
mov
push
cs
or
jge
lds
lds
fcomp
lds
mov
cmp
push
adcl
jmp
lock
fs
cmp
add
inc
lods
xor
push
mov
dec
loope
fs
es
dec
imul
jg
fldt
stc
mov
mov
jbe
stos
adc
add
pop
push
into
lcall
jbe
pop
mov
sti
jb
in
dec
fimuls
add
push
xor
sbb
jb
inc
imul
inc
adcb
dec
xchg
xor
jl
loope
xor
dec
pop
test
dec
push
andl
add
pop
addb
in
push
push
popa
jb
in
insl
ljmp
mov
gs
push
imul
mov
rcll
add
mov
js
dec
cltd
mov
jp
mov
gs
rorb
lret
mov
loopne
sahf
popa
mov
call
or
xchg
push
scas
out
lcall
adc
int3
jno
cmp
stos
or
test
and
add
push
sbb
xor
hlt
shrl
cmpsb
lods
sbbb
xor
dec
loop
loop
sbb
xor
cwtl
xchg
push
jae
cmpl
and
push
mov
in
xchg
xchg
cmc
das
add
xor
imul
scas
push
cld
sub
mov
movsb
and
test
scas
inc
inc
add
stos
mov
lds
lret
sbb
fldt
insb
scas
xor
lds
inc
inc
or
and
mov
dec
mov
dec
xchg
fdiv
daa
mov
mov
std
and
xchg
cmp
push
cmp
rcll
mov
psraw
jmp
adc
xchg
cmp
fisttpl
dec
enter
adc
lret
or
dec
pop
in
adc
add
loope
mov
mov
test
mov
sbb
sbb
cmp
pop
fwait
push
cmpsb
lret
xor
add
sahf
pushf
testl
aas
mov
xor
in
jle
mov
adc
imul
add
cmp
sbbb
mov
adc
pop
or
popf
mov
pop
in
ret
adc
mov
cmp
mov
pop
push
sub
cmp
rcrl
xlat
push
mov
sti
mov
js
xchg
mov
add
divb
dec
add
pop
inc
fs
cmpsb
out
mov
inc
mov
xchg
push
or
xchg
lret
jg
test
test
fimuls
dec
jo
xor
xor
in
jno
test
dec
xchg
inc
clc
and
sarl
outsl
lret
inc
and
mov
pop
ds
cmp
cli
push
xlat
cmp
fmull
xchg
push
dec
mov
add
ret
jl
sti
adc
movsb
add
jne
xlat
sbb
xor
popf
lods
addb
ficoml
pusha
sbb
pop
sahf
mov
stos
jo
int3
push
push
clc
cli
jmp
add
jle
mov
adc
inc
adc
out
adc
test
lds
add
push
xchg
aaa
addb
inc
xchg
push
shrb
inc
or
clc
push
push
jge
fisttps
out
xorl
sbb
nop
test
mov
fsts
push
stos
cmpsl
movsb
ret
outsb
cmp
fcomps
dec
xchg
repz
xchg
cmp
loopne
push
test
frstpm(287
add
icebp
roll
pop
ret
adc
imul
dec
sti
mov
fisubrs
add
ss
fisubl
inc
les
xor
jge
sbb
mov
mov
dec
or
jmp
push
int
push
mov
mov
dec
movsb
stc
sub
add
sub
lea
es
jp
icebp
xor
push
or
xor
mov
push
xor
das
xchg
adc
mov
pop
repnz
or
mov
sbb
pop
out
push
push
sbb
fidivs
adc
dec
inc
push
fsubrl
enter
daa
lods
or
mov
xchg
dec
mov
xchg
dec
rorl
in
pushf
jle
dec
loope
xchg
pop
jbe
adc
pop
and
setnp
imul
sarb
pusha
jb
push
push
sub
mov
rcrl
sbb
xor
shufps
add
lahf
sub
push
ss
popf
sbb
hlt
sub
xchg
imul
jns
xchg
lea
repnz
cmpsb
cltd
lea
xchg
push
shll
stos
outsb
mov
jae
push
inc
ret
pop
ljmp
mov
push
sub
je
xchg
xchg
add
xchg
add
out
push
bound
push
lahf
xchg
mov
test
lea
jle
push
pop
inc
xchg
mov
push
and
mov
or
inc
pop
pinsrw
loop
jb
fsubrl
loop
cmp
and
stos
mov
icebp
fdivs
jmp
dec
adc
test
sub
inc
jge
jo
mov
es
or
xor
nop
sub
dec
jae
out
imul
imul
dec
fistpl
or
jns
js
in
imul
bound
pop
std
adc
cmp
xor
imul
mov
add
lea
iret
pop
push
ficompl
add
out
repz
test
repz
stos
dec
sub
in
or
and
fwait
xor
rcrb
sub
inc
mov
mov
mov
stos
sbb
pop
insl
repnz
sbb
or
leave
sbb
outsl
jmp
sub
repz
or
adc
cmp
cld
cs
or
jns
push
push
inc
mov
cmpsl
inc
mov
int3
jge
jecxz
lds
dec
or
fisubs
dec
out
mov
mov
sbb
bound
mov
jbe
repz
or
and
notb
into
int
jns
push
daa
shll
dec
mov
sti
xchg
cld
adc
inc
or
and
or
xor
add
mov
outsl
dec
push
dec
sbb
cwtl
fcmovnbe
shrl
jmp
and
nop
sbb
or
stos
std
jno
sbb
ret
push
and
push
out
mov
or
mov
scas
popf
cmp
push
aad
ret
ljmp
push
hlt
aas
adc
pusha
sub
mov
jl
inc
mov
xchg
stos
mov
sub
jmp
imul
lret
add
std
mov
int
mov
popf
mulb
jns
mov
mov
jmp
pop
mov
inc
or
mov
adc
pop
int
insb
push
aam
push
int3
add
pop
inc
cmpsl
add
pxor
scas
popf
or
in
insb
in
arpl
and
shll
je
cmp
lret
xchg
adc
inc
xor
popa
gs
jno
lock
mov
out
call
sbb
roll
inc
mov
push
sub
dec
mov
out
loopne
mov
jecxz
pop
jno
addr16
in
fisttpl
pusha
ja
xlat
inc
mov
mov
std
and
xchg
push
add
out
push
mov
ja
dec
pop
sbbb
add
and
and
xor
daa
stos
jb
adc
add
loopne
int3
sub
jno
stc
lock
das
jmp
lock
sbb
loopne
call
jnp
mov
stos
mov
pop
aad
xor
ja
sbb
popf
lods
pop
es
out
xchg
mov
mov
popf
outsl
xor
pop
or
xor
and
orb
adc
sbb
add
lods
inc
into
mov
rcrl
pop
jnp
jl
fld
and
xchg
inc
daa
hlt
cmp
lds
push
add
dec
cmp
rcll
mov
sub
pop
aam
jne
int
add
cmp
push
and
test
outsb
orb
inc
jge
or
outsb
mov
mov
dec
mov
add
fisttps
dec
jmp
leave
sbb
or
pop
ss
adcb
orl
arpl
inc
data16
movsb
sub
jle
enter
xchg
pushf
sbb
outsb
sahf
std
cltd
fst
es
adc
or
add
sub
push
cmc
shlb
aad
imul
dec
out
scas
fwait
pop
aas
mov
jno
dec
sarb
mov
or
cli
and
fmulp
xlat
adc
enter
jno
push
sub
push
push
xchg
lds
int3
stos
fldl
arpl
sti
mov
fs
mov
ds
insb
into
loopne
push
in
sahf
pop
mov
testb
and
pusha
in
jle
add
and
pushl
and
xor
outsl
lret
ret
loopne
cmp
add
test
pop
rolb
movsl
xor
push
jmp
pop
rcr
clc
jmp
push
mov
push
mov
push
je
sbb
adc
push
stos
jb
mov
fstpt
inc
mov
xchg
jmp
adc
std
adcl
repz
xchg
inc
gs
add
jmp
outsb
into
icebp
out
int
ret
cmc
and
pop
daa
mov
stc
mov
jmp
xor
mov
movsl
sahf
mov
insl
adc
sahf
add
push
test
in
add
sbb
das
pushf
mov
cmp
push
mov
sbb
aad
fsubl
push
pop
incb
repnz
xchg
xor
rcr
sub
aad
in
mov
pop
ss
fstpl
dec
xor
lods
pop
decl
imul
push
mov
pop
mov
mov
dec
out
roll
mov
dec
pop
leave
ljmp
mov
rclb
lcall
jo
xchg
frstor
adc
cwtl
mov
outsb
scas
pop
jne
das
and
add
gs
add
or
xchg
popf
mov
adc
mov
in
mov
test
cmpsl
shrb
aas
jbe
or
aas
repnz
mov
xchg
mov
pop
scas
pop
jmp
test
push
mov
lock
aaa
adc
fiadds
cwtl
inc
and
cmpsl
les
push
stc
aam
fists
pushf
xor
clc
dec
cs
jmp
lahf
push
adc
mov
cltd
and
mov
pop
aam
sub
or
mov
cmp
addl
sub
xor
and
xor
ret
sahf
loopne
std
xchg
dec
or
dec
jo
jl
sbb
orl
xchg
xor
dec
inc
lcall
ficomps
rorb
fidivrl
and
jb
jbe
sbb
or
fwait
test
push
out
mov
imul
int3
sarl
lret
push
je
cmp
lret
lret
jecxz
lods
mov
int3
std
cmpsl
sahf
sbb
add
inc
enter
ds
pop
jns
sarl
push
out
dec
aad
mov
sbb
xorb
sub
adc
loopne
jns
ror
loopne
out
jo
mov
daa
mov
mov
in
dec
test
insb
jno
mov
addb
lock
sbb
xchg
add
sbb
into
or
inc
imul
xor
lret
add
inc
insl
aad
fld
jecxz
in
or
mov
sub
and
mov
stos
loopne
bound
xor
pop
sbb
lods
daa
out
xorl
cmp
pop
mov
cmp
xor
jno
mov
lahf
addr16
xchg
mov
test
xchg
sbb
cwtl
xor
dec
or
dec
into
dec
insb
jmp
xor
mov
lahf
and
insb
pushf
pop
addr16
inc
lds
sub
push
ljmp
xor
in
pop
cltd
ret
fstpt
sub
mov
in
into
jecxz
test
insl
lcall
jae
sbb
add
cwtl
mov
scas
pop
daa
test
push
xchg
in
addr16
std
in
xchg
xor
sub
test
xor
imul
inc
adc
or
jno
pop
stos
pop
dec
notb
mov
dec
in
bound
ds
or
in
xor
loop
pop
leave
mov
and
addr16
mov
adc
data16
pop
lea
inc
cmpsl
add
lods
scas
sbb
js
pop
js
in
xchg
lea
call
ficompl
cmpsl
sets
inc
in
and
cmp
or
xor
ret
jmp
fcmovnu
adcl
dec
lahf
pushf
int3
outsl
push
repnz
cmp
add
out
push
sti
shrb
xor
outsl
cmpsl
xor
inc
jne
cmp
sub
push
cmp
in
mov
push
add
leave
test
push
sbb
in
popf
out
push
mov
xchg
xorl
xchg
out
loopne
shll
das
add
jne
repnz
daa
dec
out
addr16
mov
xor
out
jp
push
in
adc
push
fmuls
cmovl
movsb
ss
pop
push
ljmp
popa
mov
fisubl
fs
mov
dec
jge
jl
shlb
in
sti
push
sub
sti
js
jp
dec
adc
movzwl
lds
jns
mov
jle
mov
scas
adc
jl
pusha
add
ret
fs
mov
jg
cld
xlat
or
push
mov
and
mov
ret
lret
addr16
adc
pushf
iret
in
bound
out
dec
call
leave
sahf
jnp
das
push
ret
fidivl
jb
xlat
fcoml
aas
xor
cltd
or
test
pusha
fidivs
pop
popa
out
push
pop
adcl
aam
rclb
lock
push
mov
movsb
add
xor
mov
or
jns
in
sbb
sub
cmp
xchg
test
pop
mov
add
in
clc
push
cld
int
cmp
repz
cmpsl
repnz
stos
movsb
xor
stc
pop
lds
enter
push
jnp
rcrl
inc
push
and
push
xor
call
shl
pop
mov
into
adc
enter
jmp
popf
mov
push
push
and
je
fsubr
subb
xor
mov
xchg
fwait
notb
push
and
insb
mov
mulb
push
adc
popa
rcl
dec
dec
aad
mov
das
loop
cmp
jne
jl
fidivl
ret
xchg
sar
sar
fmull
dec
adc
push
sbb
jmp
fcoml
jmp
pop
ffreep
ja
mov
pop
jns
faddl
in
pop
es
call
jp
mov
je
xor
cmp
movsl
out
and
dec
mov
pusha
fsubrl
bound
xchg
lcall
jo
clc
xlat
adc
push
daa
sarb
rcrl
rol
pop
mov
adc
jle
aam
pop
sbb
adc
xchg
js
int
pop
pop
pop
mov
xor
or
xchg
or
cmp
stos
inc
xlat
sub
mov
popa
test
push
lock
negb
mov
mov
shlb
add
ja
push
mov
lret
scas
jmp
xchg
fdivs
insl
sbb
mov
sbb
sbbl
movsl
or
in
and
xor
push
cmp
inc
movl
xchg
sub
test
push
js
push
jae
mov
dec
rorb
cs
jmp
fwait
addr16
adc
pop
xchg
stc
icebp
jecxz
cmp
fstpt
js
std
shll
sub
mov
test
scas
jl
cmp
xor
fldenv
cld
mov
lds
inc
inc
rclb
pop
int3
or
xchg
fwait
inc
mov
stc
iret
sbb
daa
mov
jae
mov
xchg
xlat
mov
jne
mov
std
jne
pop
inc
push
sarb
ret
or
jecxz
cmc
and
and
aas
push
sub
cwtl
mov
in
outsb
addr16
repnz
xchg
xchg
mov
adc
into
outsl
mov
ret
inc
cmp
pusha
push
insb
xchg
and
and
push
xchg
dec
mov
jge
mov
loope
icebp
inc
imul
inc
and
test
jecxz
aaa
pop
call
js
ljmp
pop
mov
pop
push
icebp
push
sub
int3
or
imulb
sub
xor
or
or
hlt
xchg
repnz
add
cmpb
aam
xor
and
add
scas
shlb
pop
mov
mov
mov
mov
push
leave
out
scas
xor
xchg
cs
out
inc
inc
cmp
in
and
imull
sbb
mov
bnd
lea
cmp
ret
inc
fdivr
dec
pop
lods
mov
pop
cwtl
add
push
roll
je
sarl
dec
mov
fsubrs
jmp
icebp
add
cmovae
repz
lea
in
out
and
add
jno
xchg
je
cmp
pop
add
push
test
fwait
pusha
idivl
or
cmc
outsb
mov
outsl
test
test
in
jno
xchg
js
lods
repz
mov
jnp
int
dec
inc
cld
popa
ds
inc
stos
out
add
mov
repnz
in
test
jnp
or
mov
jmp
sbb
pop
adc
adc
aam
xchg
mov
add
mov
and
jo
or
aaa
mov
sub
lods
sbb
cmp
popf
mov
fs
mov
into
daa
xchg
outsl
jae
shl
sbb
pushf
in
add
ja
sbbb
xchg
mov
sub
sub
pop
ja
shlb
rcrl
inc
or
test
dec
mov
add
mov
cltd
repnz
cmp
std
enter
pop
xor
xor
mov
jo
push
test
adc
cmpb
mov
pop
mov
push
push
adc
cmp
es
inc
xor
push
mov
mov
inc
fnstcw
out
inc
dec
ds
pop
sbb
lock
pop
jg
into
push
jb
add
pop
cmp
fsubp
mov
stos
push
in
int3
int
lods
lret
dec
aaa
mov
pop
sbb
into
or
scas
pop
fadd
cmc
push
iret
mov
jle
lods
in
cmp
xchg
adc
mov
jge
sub
mov
mov
out
or
inc
iret
mov
mov
push
inc
xchg
sub
int3
pop
jae
movsb
loope
dec
xchg
and
sub
cmpsb
scas
loopne
cmp
test
lcall
lahf
ljmp
xchg
dec
hlt
je
mov
push
sbb
dec
cmp
les
nop
sub
mov
stos
mov
mov
in
jmp
inc
cmp
aas
xor
ficoms
jnp
sarl
sbb
data16
jl
into
pop
fimull
cwtl
leave
xor
adc
add
loope
xchg
notb
mov
and
cmp
pop
sub
stos
or
mov
xor
or
xchg
pop
lods
loopne
jge
fsubp
xor
imul
jnp
sub
cmpsl
jle
mov
mov
xchg
sbb
dec
jbe
lock
lahf
clc
and
cmc
inc
in
les
pop
mov
scas
dec
inc
inc
dec
add
ja
mov
mov
leave
negb
scas
pop
add
xchg
jne
pop
adc
adc
mov
fnstenv
adc
sub
repz
lods
setg
jns
sub
pop
lret
xor
xorl
js
pop
and
push
pop
pop
js
lods
loopne
mov
inc
vmovsldup
and
xor
and
or
or
push
xor
enter
inc
into
mov
adc
mov
enter
push
push
xor
sbb
cltd
lock
loop
pop
movb
inc
and
dec
shll
lret
bound
and
lcall
inc
gs
ret
testl
test
sbb
cld
aas
jnp
push
or
dec
xchg
mov
sub
call
stos
gs
leave
push
and
cltd
test
popa
call
push
cltd
out
or
dec
in
icebp
xlat
add
in
xor
push
xchg
fwait
sub
fcmovu
rorb
xchg
pusha
jns
dec
jmp
pop
and
xlat
repz
ja
mov
fcoml
dec
jnp
sub
cmpsl
xchg
cld
fdivl
sub
loopne
sbb
mov
cld
xchg
outsl
stos
roll
ljmp
arpl
mov
lret
in
imul
mov
push
mov
repnz
cmpsl
les
cmp
mov
ficoml
pop
xor
mov
test
nop
or
xlat
aas
inc
jp
jmp
sub
push
jge
fcoms
cs
stos
jp
insl
pop
and
addl
movsb
hlt
arpl
push
orl
test
fimull
adc
xlat
dec
mov
mov
and
ja
push
jns
jo
ret
cmp
sbb
into
mov
and
call
mov
fcmovnb
push
cmpsl
shll
popa
xchg
pop
push
fstps
fdivl
and
sub
inc
test
xchg
data16
xor
or
cmpsb
lods
inc
mov
push
pushf
mov
push
xchg
mov
arpl
test
sub
adc
in
add
xchg
aam
inc
mov
ret
xlat
test
or
fxch
into
dec
xor
repz
loop
int3
mov
movsb
scas
cmp
push
test
jle
cwtl
xor
sub
mov
dec
clc
pop
mov
test
lret
dec
xlat
or
dec
pop
mov
mov
stc
movsb
push
jns
aas
int
rorb
mov
fmulp
inc
cmp
mov
scas
mov
jle
gs
leave
inc
adc
ret
add
pop
scas
cmp
inc
ret
out
mov
fdivs
cmp
in
and
jbe
dec
roll
mov
mov
cmp
push
insl
mov
or
nop
or
jae
sar
outsl
mov
jo
dec
pop
lret
mov
or
ficoms
xor
sub
mov
lahf
or
enter
mov
push
adc
push
pop
or
fisubrl
dec
push
cmpsl
insl
popa
fiadds
sbb
mov
ja
rcl
jae
popa
fmul
mov
adc
mov
dec
pushf
ja
mov
add
cmp
push
in
mov
lret
cmp
js
out
cld
test
out
push
xor
fadd
xchg
cli
inc
sbb
add
or
call
in
mov
xchg
adc
lcall
icebp
shl
xor
xchg
cmpl
sahf
inc
packssdw
push
mov
sub
cmpsb
or
pushf
outsb
pop
inc
clc
aaa
ds
int3
cmp
ret
lahf
push
mov
jg
push
and
xor
mov
xchg
mov
addr16
mov
cmp
scas
and
cmp
bound
fcomps
dec
pop
mull
dec
mov
xor
jo
clc
lret
jbe
hlt
push
pop
filds
fidivrl
les
jbe
or
add
and
iret
adcb
and
dec
sbb
imul
xlat
or
js
stc
test
xchg
xor
sbb
mov
lea
sbb
add
sbbl
pop
iret
jnp
inc
insb
adc
imul
xor
pop
lods
scas
lret
mov
mov
mov
cli
dec
cld
int
add
iret
fadds
sbb
or
jne
fwait
jle
les
xchg
sbbb
hlt
movsl
and
pop
loope
lea
in
fnclex
xchg
hlt
inc
cmp
les
std
jne
adc
xor
in
cmpsb
sarl
pop
flds
pop
andnps
cli
inc
or
lods
cmpsb
aam
rcll
inc
add
ljmp
push
test
arpl
push
sub
lods
insb
shl
pushf
sbb
lret
lds
xor
fisubl
out
inc
inc
aad
fwait
xor
sti
into
inc
xor
les
xchg
cltd
push
xor
or
mull
dec
or
dec
mov
jl
cli
rcl
into
movsl
dec
jge
jne
and
aam
loopne
in
pop
ret
mov
jecxz
sti
sub
and
mov
dec
js
addr16
push
sub
mov
lret
cmovbe
xchg
pusha
mov
xor
sbb
adc
push
xchg
fwait
stos
dec
jmp
fistps
test
pusha
mov
ror
out
or
add
xor
lahf
inc
jle
loop
gs
pop
pop
shrl
movsb
jo
push
mov
ficoms
cld
out
cmp
and
iret
scas
xchg
sub
insl
ds
int
mov
fisttps
inc
mov
add
aaa
shld
cmp
lods
jo
add
mov
inc
icebp
ret
imul
test
adc
xor
and
and
sub
in
ja
je
mov
sarb
mov
pusha
addb
adc
mov
pop
stos
pop
pop
dec
ret
rorl
push
sub
push
ljmp
pop
and
in
ds
mov
mov
aas
pushf
xor
leave
jb
pop
loop
sbb
dec
ret
mov
fisubrs
xor
stc
xchg
jb
cmpsl
dec
fistpll
mov
xchg
cmp
adc
loopne
aam
sub
mov
pushf
pop
sub
sbb
idiv
rcrl
out
mov
push
movzwl
in
dec
xchg
nop
push
shl
push
xor
stos
mov
push
aad
inc
push
js
mov
mov
sti
xchg
cmp
xor
inc
xor
sub
inc
test
fmul
js
jecxz
mov
cltd
or
test
push
xchg
leave
cmp
inc
pop
and
pusha
mov
sarl
push
pop
cltd
cmp
mov
mov
test
lods
divb
out
xor
dec
inc
jp
adc
and
dec
inc
ficoms
xor
std
xchg
les
cli
pop
mov
hlt
sub
mov
aad
popf
jp
xchg
lods
xor
sbb
push
fimull
rolb
fstpl
decl
in
fldt
pushf
ss
push
push
fdivs
stos
add
dec
inc
dec
adc
mov
xchg
mov
push
out
sbb
pop
jp
pushf
mov
decl
hlt
gs
enter
and
ret
nop
push
push
cwtl
bound
cmp
outsb
inc
std
jecxz
add
adc
jg
aaa
mov
mov
sti
jbe
xchg
icebp
inc
cld
dec
jne
xchg
fnstsw
fistpll
lock
gs
int
pop
icebp
cmc
mov
inc
add
pop
mov
rolb
jnp
loop
mul
pop
in
mov
lcall
push
mov
add
aam
xchg
adc
in
xchg
mov
imul
mov
or
jmp
mov
ret
adc
inc
push
and
jnp
pop
insl
inc
and
xor
es
cltd
inc
insl
push
mov
and
es
and
mov
outsl
cmp
ret
and
and
rol
cld
cmp
mov
jns
pusha
inc
ss
sub
or
push
fs
into
push
inc
jecxz
jecxz
scas
pop
xchg
xor
stc
mov
rolb
xchg
ljmp
sub
sub
std
mov
icebp
lock
out
adc
or
or
mulb
popf
shlb
mov
lds
pminub
movsl
out
or
sub
mov
push
jb
imul
dec
test
cmp
jg
out
jb
push
jmpw
push
sbb
stc
mov
scas
mov
out
jb
sub
mov
ja
jmp
imul
dec
and
sub
lds
push
iret
cli
scas
push
jmp
je
sub
mov
pop
test
ljmp
pop
divl
data16
dec
add
push
inc
cwtl
rcll
fucomi
push
jns
mov
cld
pop
adc
mov
leave
jmp
adc
pop
push
add
leave
xchg
sbb
scas
lcall
mov
and
ss
mov
movsb
testl
hlt
ljmp
les
push
test
xor
rolb
and
lcall
test
loopne
fst
adc
add
and
enter
data16
sub
dec
sbb
movsl
mov
fnsave
sbb
popa
mov
hlt
fcomps
adc
lret
frstor
mov
cmpsb
and
push
jp
or
dec
jo
cmp
nop
iret
lahf
sub
dec
into
fnstsw
mov
test
aam
pop
leave
subb
or
add
hlt
jmp
lahf
jae
cmp
in
fninit
mov
arpl
stos
mov
xor
loope
push
repnz
arpl
in
or
and
aaa
aas
packuswb
mov
repnz
cltd
pop
add
out
mov
pop
movsl
sarl
pop
imul
rcr
jb
test
or
loopne
fdivs
in
dec
xor
into
dec
and
lods
iret
xor
in
jns
mov
and
or
mov
aaa
rcrb
mov
lods
and
popa
imul
loopne
push
or
inc
xlat
and
in
mov
inc
sti
push
push
popa
outsb
sbb
xchg
sub
sysenter
adc
test
fcmovu
lods
xor
jnp
lcall
mov
ficomps
sub
cmp
cmp
lds
xor
cmpsl
push
lea
lods
xchg
xchg
mov
xchg
je
popf
movsb
shl
pop
pop
out
dec
or
mov
push
mov
push
ret
mov
mov
add
pop
xor
adc
in
orb
cli
dec
xor
adc
mov
es
xor
pop
pushf
loop
adc
inc
popf
adc
out
add
jne
cmp
faddl
adc
add
mov
loop
in
hlt
or
push
pop
and
mov
jo
sbb
ss
adc
stos
dec
mov
fisttps
jecxz
or
rcll
xor
xchg
and
out
xchg
jbe
add
pop
cmp
data16
push
cmc
pusha
push
xchg
mov
or
cmp
sahf
xlat
inc
push
lcall
data16
movsl
jle
out
mov
jbe
fldt
adc
das
inc
mov
out
cwtl
into
inc
push
sub
adc
adcb
das
daa
sbb
xchg
sub
fldcw
mov
xchg
shr
movsb
test
push
cld
adc
mov
cmpsb
mov
iret
mov
outsl
arpl
aas
pop
mov
and
mov
inc
cmpsl
repz
push
or
adc
dec
loope
jne
pushl
cmp
adc
iret
vpmacsdqh
cs
mov
cld
mov
sahf
sbb
dec
in
in
inc
fwait
add
adc
jecxz
mov
mov
fcmovbe
int
and
repz
iret
push
mov
or
outsl
dec
mov
fucomi
mov
lods
inc
rcrb
sub
cmp
mov
popf
fisubl
test
aad
pop
outsb
push
or
dec
sub
repnz
inc
cld
add
sub
xchg
dec
and
cmp
iret
push
mov
sub
sub
inc
cmpsl
pop
fs
in
jl
cmp
cltd
jl
mov
add
pop
mov
and
push
lret
pop
fsubrl
cmp
push
stc
aas
jo
rcrb
repnz
mov
repz
into
nop
and
es
shlb
cmc
or
jo
out
lea
aaa
mov
in
leave
push
dec
mov
xchg
mov
clc
sti
inc
inc
mov
xchg
hlt
jl
xchg
int
dec
test
mov
icebp
in
js
subl
push
sub
xor
in
jl
add
fdivr
xchg
push
mov
push
loopne
mov
jge
outsl
aaa
xor
sub
push
or
push
mov
xor
inc
lcall
pop
mov
adc
pop
iret
fstpl
out
in
jo
jecxz
addr16
or
mov
cmp
dec
cmpsl
sbb
imul
cmp
xchg
mov
inc
jl
pop
rcrb
adc
testb
sbb
mov
xchg
mov
mov
xchg
sbb
ret
xlat
jno
lahf
fwait
mov
mov
mov
and
cwtl
ja
xchg
mov
test
xor
idiv
xor
jecxz
repnz
insl
and
mov
mov
sub
lret
add
mov
imul
add
into
loope
shll
rorl
repnz
pop
dec
fildl
movsb
stos
push
mov
mov
sahf
or
jo
sbb
mov
std
sbb
pushf
push
inc
xchg
mov
and
in
jmp
enter
and
loopne
in
stos
lret
inc
mov
adc
push
inc
sub
mov
jne
and
movsb
loopne
mov
cltd
iret
xor
cs
mov
or
sbb
test
dec
hlt
pop
daa
fxam
nop
jne
dec
and
push
ss
mov
jnp
sbb
mov
or
xor
jnp
inc
roll
out
push
cwtl
cmc
mov
sbb
push
test
mov
stos
out
xchg
popf
mov
inc
lret
testl
xor
stos
inc
sbb
shlb
in
ja
out
mov
adcb
lahf
sbb
es
inc
in
xchg
pop
jge
orl
shll
push
pop
fsts
mov
bound
popf
sub
cs
push
js
push
push
mov
push
dec
mov
cmpsb
push
push
pushl
cmpsl
push
jle
fisubrs
pop
icebp
lock
lahf
dec
mov
pop
or
lock
jmp
xchg
dec
ja
in
adc
and
ror
mov
aaa
aas
push
push
inc
and
pop
add
mov
out
cmp
outsl
add
xor
les
mov
cmpsb
lcall
sti
arpl
lcall
clc
cmpsl
mov
popa
push
or
and
orb
jl
mov
aaa
xchg
sub
push
and
jecxz
pop
mov
push
movsb
xor
popf
loop
jl
loopne
mov
pop
out
mov
and
out
lods
sbb
xchg
jb
xchg
loop
jp
and
jne
sub
das
cli
aam
call
or
dec
cmc
iret
test
xchg
mov
push
jmp
sbb
or
dec
popa
cmp
int
fcmovu
jno
movl
mov
adc
scas
push
std
adc
repz
sbb
add
negl
jae
jmp
popf
and
jb
rcl
pusha
sbb
cmp
and
andl
pop
xchg
xor
dec
lods
frstor
sbb
decb
mov
jge
mov
popa
inc
sbb
mov
mov
xchg
cmp
xchg
xlat
push
fsubrl
mov
rclb
mov
jg
movsl
pop
sbb
bound
pusha
jo
and
popa
loope
lcall
lods
outsl
add
adc
lea
jle
push
and
jecxz
test
mov
mov
mov
push
lds
push
xchg
popa
lret
add
jno
pop
nop
push
cmp
call
jo
mov
xor
xchg
out
ljmp
mov
cs
sqrtps
add
inc
dec
add
cmp
in
iret
rcrb
pop
sub
jb
jns
movsl
inc
xchg
dec
inc
test
inc
adc
jp
jb
mov
jg
mov
jl
subb
dec
out
sub
enter
jp
lods
filds
sub
mov
and
popa
inc
or
dec
mov
lds
inc
lcall
cmpsl
jge
inc
sysret
jo
pop
stos
mov
test
neg
pop
icebp
jl
sbb
clc
xchg
jno
pop
and
movsl
mov
mov
jns
push
test
stos
cmpsb
sub
roll
pop
xor
insb
mov
lods
pop
or
mov
mov
inc
push
test
std
xor
sub
mov
jns
adc
repz
xchg
or
add
lock
test
insb
fs
cltd
push
mov
imul
orb
fildll
mov
adc
adcb
pushf
sbb
inc
jae
addr16
lcall
sbb
dec
pop
cmc
add
daa
pusha
xchg
adc
add
add
mov
inc
out
jns
scas
cmpsb
xchg
out
test
icebp
inc
sbb
cli
pushf
sub
lcall
push
faddl
sbb
aas
mov
sub
adc
xchg
icebp
and
loope
inc
repnz
aam
and
shrb
cmpsb
movsb
mov
cmp
js
jle
push
add
enter
sub
mov
or
dec
js
sub
sbb
push
sarb
cld
sbb
push
pop
int3
cmp
or
pop
int3
jns
shr
jmp
jl
in
pop
mov
subl
fwait
xlat
sub
mov
push
in
iret
in
out
or
in
inc
pop
clc
jns
loop
fcoms
daa
popa
xor
adc
cli
in
adc
lahf
or
out
or
inc
rcr
sarl
std
mov
xchg
ret
pop
cli
add
in
or
dec
mov
add
inc
add
scas
jmp
dec
movsb
sub
les
add
push
leave
and
sbb
xchg
xchg
cmpps
push
adc
ljmp
jbe
dec
mov
icebp
sti
jnp
fisttps
mov
rcrb
sbb
push
cmp
aam
fstpl
fldcw
mov
hlt
adc
or
or
adc
out
mov
ds
dec
std
pop
es
sahf
popf
orl
pop
sbb
arpl
pop
xchg
clc
insl
mov
outsl
xor
pop
xchg
lret
jb
mov
mov
xor
negl
sub
jo
pop
push
lcall
or
cs
mov
mov
js
sbb
mov
andl
das
es
out
aam
bound
ja
lcall
outsl
cmpsb
mov
pop
mov
andb
sub
cs
enter
pop
jnp
mov
pop
sbb
jb
xchg
inc
cmc
cmp
cs
or
lahf
pop
data16
xor
add
ja
cli
jo
std
or
push
or
out
jmp
xor
in
xchg
xorb
inc
pop
fnsave
cmc
mov
and
inc
adc
sub
jne
adc
adc
jl
orb
sub
mov
mov
imul
ja
dec
xor
push
mov
jecxz
or
dec
lods
stos
xor
jp
jnp
sub
add
jl
mov
cmp
sbb
lret
clc
les
mov
jp
divb
xchg
lock
mov
lahf
fdiv
dec
xor
loop
lea
notb
stos
aam
cmp
push
in
mov
pop
sti
inc
pusha
test
mov
cmpsl
cli
pop
test
xor
xchg
add
adcb
pop
lods
in
xor
enter
movsb
or
mov
xchg
int3
or
mov
pushf
int
xor
bound
fs
push
jg
mov
sub
jg
sbb
popa
mov
push
push
push
sbb
mov
in
lcall
dec
add
js
out
mov
sub
inc
push
pop
jl
stos
imul
or
shll
adcl
push
outsl
pop
dec
and
push
popf
sub
outsl
bound
ret
jnp
xchg
in
fstpl
xor
pusha
xchg
repz
lahf
xchg
cmp
xor
repnz
popa
cmpsb
and
adc
pop
and
cld
cmpsb
mov
sbb
mov
push
adc
lret
aad
push
inc
push
ds
dec
gs
xor
and
mov
and
mov
sub
mov
push
out
pop
add
addb
test
ret
fidivl
pushf
push
fildll
in
mov
fbstp
push
sbbb
xor
sbb
jnp
dec
ficomps
icebp
int
arpl
mov
and
sbb
sub
mov
push
cmpsl
movb
sbb
push
mov
xchg
cltd
adc
pop
pusha
mov
lret
orb
das
hlt
rcrl
stos
loopne
mov
push
xchg
sbb
push
mov
jo
sbb
and
mov
mov
and
loope
lods
sbb
mov
pop
and
outsb
test
and
add
bnd
jns
repnz
and
rcl
sub
mov
cs
sbb
daa
arpl
or
fbstp
cmp
pop
mov
addr16
rorb
push
or
fwait
fwait
lea
sbbb
sbb
dec
mov
cmp
push
sub
cmp
dec
aaa
aas
cmp
add
add
dec
sub
icebp
imul
cli
iret
sbb
enter
adcb
stos
mov
wrmsr
dec
sahf
fs
fsubrs
shlb
push
inc
cmp
adc
aad
inc
dec
adc
jl
das
hlt
lret
icebp
pop
ret
push
add
ret
stos
cmp
jbe
cmp
and
xchg
pop
or
pextrw
cmp
lods
sub
dec
pop
out
push
ficoms
enter
pusha
jg
xchg
push
out
sbb
jno
xchg
cltd
pusha
test
inc
aaa
cmp
add
test
xor
mov
dec
sub
movsl
mov
mov
jns
mov
pop
lods
xchg
inc
mov
mov
cs
mov
and
addr16
sbb
aas
aas
imul
icebp
dec
push
mov
or
loop
inc
adc
fdivl
mov
mov
cmp
test
xchg
sahf
sbb
shll
inc
push
fiadds
es
cmp
outsl
cmp
hlt
pop
pop
aad
fs
mov
lods
fmull
sarl
fisttps
cmpb
movsb
fimull
add
and
inc
jnp
fisubl
cld
aam
cltd
push
pop
mov
jae
lods
mov
lods
aas
loopne
test
int3
jge
lcall
out
stos
mov
or
jb
cmp
mov
mov
paddusb
sub
stos
stc
movsl
fsub
cmp
cs
repz
pop
aaa
and
out
xchg
leave
xor
inc
pop
dec
sarl
dec
push
scas
add
mov
lods
aaa
jae
adc
mov
fldcw
dec
lret
add
mov
cld
mov
or
jns
orb
fs
jns
es
or
fs
loopne
fs
xor
push
data16
pop
xchg
add
inc
popf
ja
test
mov
andl
inc
push
lret
pusha
inc
xor
and
mov
push
mov
aad
dec
sbb
mov
or
call
iret
popa
shl
std
pop
repnz
rclb
lret
fistl
dec
test
or
and
insl
imul
imul
xchg
stos
cwtl
into
pop
pusha
stos
pop
inc
xchg
loopne
mov
rcrb
insb
mulb
mov
fadd
push
das
divl
imul
lods
scas
dec
mov
out
push
fstpl
sahf
lea
ds
jb
dec
mov
inc
sub
mov
scas
addl
loopne
ss
cmp
mov
sub
inc
in
jns
nop
dec
repnz
ljmp
push
push
push
cmp
lret
sbb
rcll
adc
jg
or
push
out
cmp
out
fmulp
popf
and
into
idiv
fdivp
inc
je
or
inc
sub
push
ret
push
adc
aaa
pop
and
adc
andb
mov
or
in
xchg
jmp
ret
cmpsl
push
push
inc
fwait
jo
js
mov
inc
in
scas
into
clc
jecxz
pop
enter
sahf
sbb
ja
pop
fcomp
and
cmp
xchg
inc
and
loopne
and
xchg
and
adc
adc
mov
mov
sbb
xor
or
xchg
mov
mov
adc
add
sub
repz
sbb
push
xchg
push
lcall
and
movsl
ja
loopne
or
push
sub
daa
mov
sub
or
into
gs
ret
addr16
cmpsb
daa
mov
mov
lock
mov
icebp
sbb
loopne
fwait
in
mov
subb
cltd
pushf
arpl
clc
and
mov
lods
mov
popf
inc
inc
sbb
mov
jecxz
mov
adc
mov
add
lcall
and
cmpsl
out
aaa
xchg
sub
rcrb
push
dec
xor
ljmp
stc
leave
nop
mov
pop
jo
adc
shlb
sahf
fsubrl
push
jge
inc
add
add
sub
xchg
in
pop
shll
jp
inc
ja
xchg
dec
imul
addb
repz
movups
xchg
and
daa
fwait
lea
xchg
dec
fdivs
cmp
sbb
jnp
adc
inc
je
sbb
xor
inc
int3
repz
dec
shrl
scas
add
xchg
pop
notb
or
cld
enter
test
inc
cmpl
mull
pop
int3
aas
mov
dec
aaa
mov
push
cmp
sbb
mov
inc
pop
out
cmp
jb
xchg
inc
add
mov
lcall
sarb
mov
ret
xlat
pop
inc
jle
pop
and
add
test
xchg
xor
sub
leave
jo
hlt
push
mov
imul
cs
lret
inc
sti
sub
loope
mov
jo
ja
in
das
pop
je
fdivs
cwtl
cld
mov
stos
clc
and
push
jl
aaa
cli
adc
sti
lcall
lcall
in
and
xor
mov
lods
stos
jl
out
mov
dec
xchg
cli
dec
aad
rorl
outsl
sub
mov
add
sbb
sahf
mov
outsl
jnp
nop
xchg
ja
mov
adc
bound
adc
shlb
sbb
dec
dec
add
ljmp
ja
es
pop
test
jne
test
xchg
sqrtps
push
mov
fildll
jae
lock
jns
mov
imul
divl
fdivp
sub
mov
imul
xchg
jge
pop
adc
jg
dec
lahf
pop
inc
mov
push
repz
jne
cmp
ljmp
pop
lea
or
int3
in
scas
sbb
aam
andb
jp
push
iret
jnp
add
movsl
cmp
shr
mov
xor
aam
bound
fs
aam
in
sub
and
pop
out
jecxz
mov
jmp
add
cli
bswap
mov
mov
and
or
mov
fsubrs
push
dec
jl
jmp
icebp
shll
in
xor
xor
negl
pop
cs
pusha
inc
leave
jg
call
adc
ficoml
and
ret
cmp
test
xchg
xchg
sbb
cmpsl
sbb
mov
mov
xchg
ret
push
inc
mov
std
sbb
int
aas
and
cld
bound
xchg
add
int3
mov
inc
stc
test
or
shll
addr16
lcall
xchg
push
push
arpl
xchg
cltd
loope
mov
lcall
sbb
fcoml
dec
xor
popf
sbb
shrl
int
xor
je
xchg
mov
mov
scas
cmp
mov
vprotd
cmp
sbb
lahf
xchg
mov
cmpsb
pop
out
int
mov
lahf
bnd
cmc
inc
add
outsb
xchg
xchg
scas
sbb
call
cmp
insb
xchg
insl
rol
mov
in
fidivl
and
shll
cmp
inc
mov
scas
and
inc
aas
dec
in
jae
mov
mov
or
xchg
xor
mov
xorl
lds
aas
mov
test
jbe
cwtl
lds
lock
push
mov
and
test
mov
sbb
jg
pusha
cs
imul
outsl
sub
js
cltd
insb
adc
pop
mov
jg
pop
push
jle
add
pop
neg
les
leave
inc
aam
xor
inc
test
jnp
ret
cmp
mov
jb
pop
pop
sti
std
mov
ljmp
ret
mov
add
cmp
push
xchg
mov
xchg
loop
add
js
jbe
sbb
mov
loope
sti
es
ljmp
adc
arpl
and
sub
pushl
movsb
lret
test
jbe
aas
xchg
or
pop
sbbl
aad
popa
inc
pusha
cmc
add
or
sar
loop
imull
cmp
jmp
mov
outsl
jmp
iret
cs
fldenv
add
adc
inc
inc
and
dec
jae
xor
sub
pop
jb
test
jle
push
push
push
das
cmc
inc
or
test
in
cmp
inc
pushf
sbbl
outsb
push
mov
xor
xchg
or
mov
mov
cmpsb
and
divb
iret
call
push
cli
mov
inc
sbb
sub
outsl
cmpl
dec
jmp
lret
fists
js
mov
shrl
push
xor
and
into
mov
push
or
xor
push
movsb
sub
jnp
and
mov
cld
or
ret
mov
out
and
mov
ja
out
pusha
aam
loopne
cmpsb
xor
imul
and
pop
in
xchg
aaa
movsb
jae
ljmp
mov
lock
push
mov
xchg
lock
cwtl
cmp
xchg
and
in
cwtl
xor
repz
dec
ds
xchg
add
jl
add
clc
inc
fdivrs
sti
int
sub
mov
mov
loop
lret
repz
fldt
sub
mov
loopne
xchg
in
mov
or
pop
pop
insl
jo
insl
and
lret
movsb
sub
addr16
or
rclb
jno
fnstenv
subl
lret
test
pop
stc
sahf
jns
mov
add
in
xor
push
out
adc
xor
cmpsb
mov
xor
push
mov
test
cmp
clc
call
cld
jmp
mov
xor
dec
xor
mov
and
iret
fidivs
add
out
inc
out
aas
xorb
add
and
sti
push
mov
cmpsb
daa
mov
xor
scas
pop
loope
mov
dec
pusha
xor
scas
pop
mov
fucompp
mov
cltd
in
mov
push
cli
mov
scas
inc
xchg
scas
lods
sub
popf
sbb
lods
shrb
lock
fwait
in
dec
cmp
cmpsl
push
cmpsl
negb
mov
adc
adc
dec
add
lock
push
sbb
dec
and
dec
rorl
lahf
icebp
imul
or
out
insb
ja
call
fmull
push
dec
xchg
dec
sub
aad
mov
loop
xor
mov
es
mov
shrb
xchg
xor
rcrb
cmp
addb
push
in
or
repz
call
je
dec
cli
loope
or
add
les
clc
fidivl
fimull
dec
sbb
add
les
pop
out
test
imul
andb
lock
xor
cmpsl
adc
js
arpl
cmp
jbe
int3
das
pushf
xor
shlb
aam
mov
mov
jecxz
fadd
sub
xchg
push
mov
adc
lock
int3
fcoms
sbb
mov
dec
das
xchg
add
mov
inc
bound
fs
scas
fld
adc
pop
mov
sub
jge
xchg
out
push
or
clc
rolb
popf
cmp
cmp
xlat
fcmovu
xchg
push
mull
push
inc
jbe
xchg
and
or
cwtl
not
cmpb
nop
pop
jp
fstl
ret
rorl
fnstenv
push
pop
ror
shrb
inc
imulb
or
cmpsb
sbb
in
inc
cld
cld
mov
outsl
loope
ucomiss
std
push
add
fisubl
sub
je
cmpsl
ret
dec
dec
sbb
push
push
mov
jno
xchg
das
adc
or
cmp
push
xor
xor
movsl
mov
dec
mov
pop
adc
js
or
inc
pop
dec
test
int3
shll
notb
dec
jno
inc
arpl
test
or
mov
dec
shll
mov
or
je
xlat
imul
scas
cli
in
dec
mov
movsb
fcompl
repnz
loopne
lds
mov
cmp
xor
xor
or
dec
jl
jg
add
imul
cmpsl
inc
aas
fidivrl
jne
xchg
into
or
pop
push
in
jns
lahf
mov
push
add
testl
sbb
popa
outsb
mov
cmpb
aaa
loop
or
adc
icebp
mov
add
sbb
in
test
out
adc
or
je
das
or
in
and
out
inc
xchg
ds
ret
or
cmc
or
push
xor
push
ud2
xor
cmp
rolb
lods
popf
mov
xor
inc
mov
adc
hlt
int
pop
inc
adc
outsl
jbe
push
shl
xchg
cmp
xor
scas
idiv
add
jnp
adc
adc
fidivs
jle
xlat
mov
jl
test
cmp
out
sbb
sbb
jp
push
cltd
aam
and
leave
adc
sub
cmp
testb
iret
mov
leave
mov
pop
and
xor
dec
jb
mov
push
sti
or
stos
pusha
sbb
sarl
xlat
cwtl
jne
fimuls
sbb
inc
jae
int3
jecxz
insl
roll
aaa
js
xor
sbb
inc
outsb
test
lahf
push
pop
test
bound
mov
imul
lahf
mov
movsb
popf
push
xor
xor
add
sub
mov
push
ret
add
pop
push
lahf
stc
mov
pop
inc
push
jns
test
rcrb
bnd
nop
inc
xor
ljmp
dec
push
nop
push
fldl2t
scas
inc
cmp
add
xchg
mov
xchg
add
xor
jbe
add
into
fcoms
xor
lea
sahf
mov
or
add
sub
sbb
outsl
xor
mov
lcall
mov
mov
int3
cmp
cmc
jne
loop
mov
insb
enter
add
in
cwtl
rcr
pop
aad
adc
push
inc
sbb
cmpsl
fstpl
or
jb
test
sub
ljmp
mov
mov
adc
into
sub
mov
std
in
fwait
icebp
std
popf
sbb
in
stos
sti
push
lock
loop
and
loop,pn
bound
cmc
mov
out
test
jecxz
jno
sbb
cmpsb
out
mov
and
inc
jle
xchg
inc
jge
pusha
adc
sbb
in
inc
sub
imul
xchg
push
test
test
adc
mov
cmp
sub
push
loopne
jecxz
imul
fsubrs
cs
leave
enter
add
adc
add
stos
xor
pushf
lcall
lret
xor
push
imul
loopne
add
les
sbb
inc
sub
rep
stos
xor
dec
popa
or
mov
lret
xchg
scas
fsubr
sub
push
push
cld
mov
mov
or
sub
jge
xor
push
inc
push
shrl
cli
add
mov
and
jmp
mov
xor
push
and
mov
aaa
loop
sarl
into
test
mov
or
push
or
jb
push
mov
bound
out
push
adc
sub
fistpl
movsl
and
jp
orb
das
push
mov
mov
push
mov
pop
adc
subl
cmpsl
insb
or
mov
lods
mov
pop
mov
popf
sub
fists
mov
lea
testb
gs
int3
push
les
mov
mov
xor
ja
ret
fidivl
cs
movsb
leave
mov
fidivl
lea
repz
stc
sub
lock
add
daa
and
xchg
mov
jne
jmp
pop
jmp
ljmp
aad
cld
dec
std
cli
fldt
push
push
jnp
test
adc
lock
fsubrl
mov
sbb
sub
js
xchg
add
sbb
or
mov
cli
loopne
popa
and
xchg
ret
jno
dec
leave
jnp
insl
bound
popf
jno
fidivs
iret
adc
mov
movsb
and
mov
xor
loopne
call
test
scas
stos
xchg
pop
adc
inc
mov
mov
fcomp
sbb
inc
insb
push
das
loope
cwtl
xchg
imull
sub
in
mov
and
sbb
ret
enter
ffreep
hlt
sbb
jne
xchg
pushw
sar
mov
jg
test
adc
popa
lock
lock
mov
or
int3
inc
movsl
xor
sti
cwtl
jecxz
inc
sbb
test
jp
xor
cmc
pop
aas
jge
or
arpl
shll
rolb
add
pushf
jno
pop
fs
push
sbb
aas
or
dec
mov
sbb
add
loop
or
in
mov
rcrl
leave
test
pop
adc
sti
lock
call
imul
outsb
ret
out
adc
pop
xor
popa
fisubl
push
mov
xchg
inc
mov
lcall
cld
das
sbb
xor
mov
lock
mov
jg
dec
sarb
jno
test
push
mov
adc
mov
and
add
jge
mov
int
xchg
arpl
sbb
out
jge
mull
mov
out
xchg
pushf
sub
repz
jnp
sbb
xchg
sub
xchg
cmp
xchg
pminsw
mov
stc
dec
pusha
das
push
mov
or
ja
lahf
fsubrl
adc
test
aam
mov
insb
aam
and
inc
insb
aam
repz
jns
and
adc
sbb
sbb
enter
shlb
cmp
xorb
mov
sahf
ret
insl
mov
sbb
fnsave
in
lahf
fimull
pop
sbb
push
cmpsl
js
jg
loopne
scas
jg
and
ret
in
addr16
aas
xor
jl
outsb
add
jge
hlt
sarb
mov
xchg
xchg
repz
ret
sub
push
in
xor
sti
ja
xchg
test
pop
ljmp
pusha
cmpsl
mov
push
sub
aam
pop
pop
pop
or
insl
pop
push
mov
adc
xor
cmp
loop
push
inc
sbb
stos
push
and
pop
idivb
or
push
inc
ja
jg,pn
dec
cmpsb
xchg
fidivs
mov
jb
jb
or
pushf
loope
jl
pushf
push
mov
sub
repnz
xor
mov
call
or
cmp
aas
pop
dec
fs
pop
subb
add
sar
adc
hlt
add
jns
loopne
sub
cmp
pop
pop
cmpb
pop
xchg
inc
xor
insb
sbb
inc
out
sub
sbb
jnp
jnp
in
xchg
dec
imul
mov
sbb
shrb
mov
push
test
sbb
xor
scas
cltd
sbb
mull
mov
inc
stos
sub
pop
cmpsb
sub
in
mov
xchg
lret
popa
sbb
pop
insl
mov
stos
adc
jmp
std
repnz
out
arpl
cmp
out
stc
ret
xchg
jns
rcll
mov
repnz
outsb
icebp
push
jbe
jns
or
or
xchg
xor
lahf
mov
jbe
mov
lock
frstor
pop
stos
sbb
dec
inc
rolb
imul
outsl
je
dec
loop
adc
cmp
addr16
rol
movsb
je
mov
call
xchg
insb
adc
mov
mov
inc
cmp
xlat
add
dec
rcll
xor
sahf
jbe
iret
cmp
sbb
outsl
mov
popl
adc
jne
mov
fcmovnu
lds
dec
movsl
push
mov
ficompl
nop
mov
push
mov
ljmp
cwtl
aam
ja
pop
pop
or
lret
stos
add
inc
xchg
mov
out
push
push
insb
or
cmc
push
adc
adc
pop
dec
sti
imul
mov
add
and
jg
mov
inc
sub
enter
pop
jecxz
push
push
lret
dec
loop
jno
mov
jecxz
lret
ja
pusha
dec
loope
aam
rcr
int3
jns
stos
leave
cwtl
sbb
loop
rclb
xlat
push
icebp
jns
lret
push
mov
push
addr16
mov
mov
fucom
fimull
mov
ljmp
ret
pop
jnp
sti
in
es
call
lods
add
jae
sub
cwtl
pop
add
pop
sbb
xchg
in
adc
inc
push
sub
xlat
shrl
stos
xor
fadds
jmp
dec
cmc
cmp
sbb
add
and
int
es
xor
fstpt
push
int
std
repz
les
lahf
bound
js
jl
push
addr16
sahf
and
testb
mov
sbb
arpl
jge
divl
pop
xor
dec
cld
nop
sbb
mov
lret
pop
xchg
sbb
inc
pop
jp
je
and
sub
fninit
popf
jecxz
jmp
pop
mov
stos
mov
mov
cmpsb
rorb
add
and
ds
and
jmp
in
les
cltd
push
push
push
fstl
in
frstor
dec
sarl
cs
bound
mov
pop
adc
fsubrl
push
dec
add
addl
xchg
or
dec
negl
leave
lods
fwait
out
or
frstor
imul
lock
jmp
je
xor
cmp
xchg
sbb
push
cmpsb
dec
insb
and
movsl
sbb
dec
cmp
cld
sbb
fdiv
lds
inc
add
jbe
push
mov
inc
jle
stos
add
and
ja
mov
scas
jo
scas
sub
cs
or
gs
mov
push
insl
mov
add
scas
pop
add
fsubrs
div
or
icebp
pop
adc
out
adc
nop
or
dec
out
je
mov
dec
test
add
jno
stc
dec
cwtl
jmp
push
sub
icebp
movsl
mov
cmp
aas
sbb
sub
gs
stos
int3
popf
adc
adc
or
pop
mov
mov
out
addr16
loopne
dec
cmpb
in
ja
add
jecxz
pop
icebp
jge
xor
mov
ja
cltd
mov
mov
fs
xchg
mov
gs
adc
cmp
jecxz
pusha
sahf
pop
mov
or
lret
jp
stc
std
lret
jns
imul
repz
test
mov
loopne
imull
ss
xchg
adc
les
roll
jns
lods
pop
dec
ss
mov
lret
arpl
popf
das
stos
cmp
fucomip
sarb
lods
stos
movsb
int3
fcomip
mov
sahf
outsb
inc
stos
fstp
bound
pop
test
in
jg
sahf
cmp
adcb
mov
cmpsb
pop
sbb
inc
aam
gs
jmp
cs
out
cli
or
pusha
int
pop
add
cld
sbb
pop
and
jg
out
dec
inc
xchg
pop
dec
enter
add
cwtl
xchg
dec
push
pop
push
cmp
psubsb
jmp
add
sub
mov
xor
sti
cwtl
fwait
mov
loopne
xchg
ret
mov
insb
mov
inc
sub
xchg
sub
out
mull
push
es
adc
add
mov
aam
pop
pop
jo
repz
and
jge
scas
push
pop
inc
loop
ds
lock
xchg
mov
imul
cld
mov
shlb
jg
shll
add
mov
xor
or
mov
sbb
int3
adc
jmp
add
pop
subl
dec
pop
or
mov
imul
push
mov
cmpsb
jns
insb
cmp
inc
mov
and
popf
lods
inc
sub
dec
dec
push
pop
pop
mov
adc
scas
xchg
mov
enter
mov
xchg
jmp
or
sbb
pop
cmp
rcl
stc
pop
dec
pop
shlb
cli
push
movsl
inc
sub
push
sbb
push
cli
divl
xchg
cmp
das
stos
and
fidivrs
dec
mov
push
scas
mov
leave
scas
sti
data16
out
jo
in
sarl
clc
fmul
in
inc
xor
int3
arpl
leave
in
xchg
inc
cmp
lcall
inc
mov
out
popa
fists
and
pop
or
add
sub
lods
pop
dec
jbe
xchg
sbbl
clc
jp
and
xchg
xchg
mov
cli
jno
jecxz
mov
mov
ljmp
jne
adc
add
ror
aas
call
test
rol
adc
add
lods
icebp
push
mov
mov
pop
and
mov
sti
nop
inc
subb
cmc
out
hlt
aam
inc
inc
sbb
mov
dec
push
imul
or
repz
test
and
cmp
mov
jbe
test
mov
jbe
scas
out
jb
jmp
aas
cltd
stc
dec
addb
dec
pop
leave
in
bound
stc
mov
imul
mov
enter
jle
js
adc
xlat
out
jo
rol
loop
ret
ds
inc
rol
aam
adc
inc
sbb
aaa
enter
xchg
sub
loope
lcall
in
dec
and
lahf
ret
jge
xchg
out
in
fs
loop
adc
movsb
jne
cmp
mov
fs
sub
and
mov
ljmp
nop
ljmp
mov
dec
icebp
xchg
and
sub
je
shl
xor
popa
shr
inc
nop
adc
in
pop
aaa
testl
cmp
pop
push
aas
in
jae
incb
mov
repnz
adc
sub
aam
jae
lret
adc
test
mov
ds
repnz
outsb
dec
aam
jno
fildl
outsb
and
or
imul
in
cmp
test
jne
inc
mov
dec
icebp
ret
push
adc
or
test
lea
cmp
inc
sbb
stos
insl
xor
lds
or
pop
movsl
or
popf
std
js
pop
or
bound
mov
stos
mov
push
cmp
cli
lret
rcll
and
clc
iret
dec
sbb
mov
mov
testl
pop
fisttpl
jmp
popa
push
ljmp
jle,pt
cmp
mov
jbe
andl
test
push
aas
dec
push
mov
push
xchg
mov
pop
test
test
inc
lods
scas
ljmp
loopne
jle
or
shlb
mov
imul
ret
pop
xchg
mov
out
int
dec
call
insl
data16
cmp
loop
cmp
and
lods
test
addr16
mov
jge
lods
add
in
mov
cmc
and
test
sbb
imul
xor
and
pushf
cmp
das
loop
movsb
daa
fdivrl
or
test
in
dec
sbb
and
adc
cmp
cmp
pop
out
aas
loopne
xor
cmp
cltd
pop
in
aad
dec
into
cmp
out
enter
pop
jle
cs
pop
inc
imul
in
pop
mov
cltd
ret
or
dec
ljmp
and
aam
sub
adc
mov
outsl
dec
lock
lret
das
in
lods
pop
test
jmp
xor
mov
add
out
fs
xor
xlat
andl
bound
imul
jecxz
in
adc
xlat
cs
fdivrl
xchg
fmul
dec
pop
pop
mov
filds
ss
mov
xchg
sbb
pushf
cmp
inc
lods
mov
mov
andl
push
mov
jl
xorb
adc
add
push
xor
lea
xor
sbbl
dec
repz
jmp
mov
dec
jns
outsb
add
dec
mov
test
outsl
push
push
cmp
sbb
clc
bnd
adc
or
sbb
or
pop
or
mov
call
outsl
cwtl
cmp
testb
push
arpl
rorb
add
ret
mov
cli
mov
test
add
ja
shl
das
fnstcw
sbb
or
gs
pop
les
es
or
outsl
mov
movsb
mov
add
inc
mov
clc
sub
fldt
inc
mov
push
add
loope
lds
movsl
or
add
dec
hlt
pop
sbb
clc
mov
mov
lock
pushf
adcb
add
sbb
jp
mov
pop
dec
call
popf
cmp
and
xchg
cmpsl
add
mov
jae
inc
push
sahf
cmp
movsl
stos
adc
push
jbe
or
mov
add
pop
outsb
sti
add
pop
aad
xor
cmp
test
push
mov
repz
jp
lret
mov
ja
dec
inc
mov
loope
dec
aad
or
and
mov
bound
lahf
lods
roll
or
dec
inc
mov
repz
iret
aas
outsl
ret
fwait
push
xor
push
inc
jmp
push
push
stos
jno
mov
stos
xor
xlat
pop
lret
es
cltd
push
add
cmp
sub
test
dec
mov
cmp
fcoms
xor
push
loope
fs
push
fidivs
sbb
lcall
shlb
pop
cmpsb
int
ret
pop
adc
mov
cmp
outsl
popf
mov
lret
aaa
xchg
jbe
mul
not
es
mov
stos
cmc
int
push
int3
addb
adc
es
movsb
ds
mov
and
add
sub
out
inc
xchg
xor
sub
jl
in
and
xchg
pop
mov
xor
push
mov
cmp
cltd
xor
ja
leave
dec
adc
pop
or
scas
mov
fcmovb
sub
jle
lock
les
lret
pop
call
inc
sub
insb
push
xchg
xchg
and
or
cli
mov
stos
icebp
fwait
xor
popf
lock
clc
in
cmp
push
cmp
adcb
and
pop
popa
jbe
sti
adc
outsl
test
cwtl
sbb
dec
push
aaa
sti
shlb
inc
ficomps
in
icebp
xor
cmp
xchg
inc
leave
sbb
outsb
and
fbld
push
mov
test
xchg
xchg
sub
jecxz
pop
push
in
push
mov
sarl
add
xchg
sub
outsb
pop
gs
or
pop
repnz
sbb
lock
call
dec
outsb
dec
pushf
cmp
addr16
adc
xlat
std
mov
mov
enter
jg
shl
movsb
movb
mov
push
sti
push
xchg
dec
push
in
stos
xchg
outsl
clc
int
push
xchg
jns
push
leave
dec
mov
mov
push
dec
leave
icebp
xchg
fidivl
sbb
ds
or
scas
adc
xor
lret
jb
sub
mov
aaa
mov
push
enter
pop
pushf
scas
sub
je
dec
aad
lea
arpl
out
or
out
je
shlb
cltd
mov
mov
xchg
push
pop
test
mov
xchg
jno
ret
lds
leave
repnz
add
adc
mov
test
dec
jp
imul
mov
or
xchg
popf
cltd
loope
pop
lcall
jmp
sbb
pop
cld
xlat
test
enter
movsl
jo
or
cltd
sub
xchg
xlat
pop
scas
cmp
int
add
push
mov
mov
xchg
rorb
jae
pop
and
mov
daa
cs
pop
mov
shrb
push
sti
mov
jle
loopne
es
scas
jns
pop
enter
sub
mov
sbb
aam
mov
loope
dec
sbb
inc
xor
arpl
xchg
mov
in
push
sbb
sbb
pushl
jns
push
test
cmp
out
jae
das
and
inc
sahf
movsb
fs
xlat
fisttpll
les
je
fildl
pusha
or
push
js
int
xchg
not
dec
outsb
adc
insb
xchg
cmp
mov
mov
sub
xor
imul
push
cmp
jp
test
jnp
les
pushf
std
fildll
adc
fstpt
fbstp
clc
push
xchg
enter
inc
inc
ja
test
inc
pop
sub
mov
subb
jmpw
mov
mov
xor
xchg
loopne
sbb
dec
orb
in
clc
xor
lods
or
lret
jmp
dec
das
sub
xchg
add
mov
push
push
sbb
and
idivl
shrb
dec
cmp
ret
out
vpacksswb
cmp
mov
jmp
ds
mov
jge
sbb
and
xchg
aad
xchg
sbb
int3
into
popf
jno
or
inc
jmp
push
adc
test
dec
repnz
sti
jp
out
jne
jne
outsl
scas
mov
xor
je
cmp
std
shll
xlat
cmpsb
repnz
or
cmp
adc
sti
test
push
fimuls
lods
xchg
push
add
dec
incl
xor
pop
push
fs
xchg
arpl
push
lock
dec
adc
sub
mov
clc
xchg
jl
mov
sub
dec
and
out
scas
addr16
mov
jno
ret
mov
idivl
cs
and
push
sub
leave
leave
cmpl
adc
xchg
rcrl
or
dec
leave
mov
mov
daa
or
cmp
cmp
imul
sub
loopne
lea
mov
jb
and
lret
aas
add
sub
inc
fldt
int
jle
lods
xchg
mov
xchg
inc
mov
mov
jp
cld
cs
fcoms
cmpsl
in
dec
or
mov
xor
cmpl
jp
push
and
mov
dec
cli
leave
xchg
rep
insb
sub
push
dec
out
fcom
leave
mov
or
sbb
sub
xchg
or
push
ds
pop
nop
aaa
jbe
sbb
mov
jmp
out
adc
sbb
and
leave
xchg
inc
iret
insl
fdivrl
addb
out
pop
cli
sub
xor
lds
daa
das
loope
arpl
mov
aas
xchg
std
push
sbb
or
aam
dec
adc
ss
cltd
cmp
sub
cmp
mov
inc
jne
inc
mov
mov
std
cmp
push
sub
push
inc
mov
dec
xchg
mov
sub
sub
jg
pushf
movb
stos
jge
mov
xor
cmp
repnz
es
aad
cmpl
and
cltd
push
mov
xor
and
cmp
pusha
jo
shrb
and
jmp
bound
fs
inc
push
fisttps
jbe
daa
jl
adc
fwait
dec
cmp
inc
stos
or
out
fistl
and
mov
loop
mov
cmpsb
hlt
xor
cmp
mov
push
cwtl
pop
add
loop
ljmp
cli
sbb
or
mov
mov
pop
push
repnz
hlt
xchg
lock
lods
sub
cmp
jge
insl
iret
pusha
lret
dec
lcall
mov
inc
jbe
push
push
je
repz
cli
jle
jne
mov
aaa
jmp
ljmp
dec
pop
sbb
inc
jb
sbbl
add
ret
movsl
mov
pop
mov
ret
jae
inc
sub
mov
add
js
jecxz
loopne
or
insb
ror
sbb
ljmp
and
xor
pop
or
and
fstl
xorl
xchg
mov
fs
dec
mov
lods
cmp
addr16
push
ror
jne
xchg
add
add
and
dec
fsubrl
sbb
int3
iret
in
adc
and
or
dec
sahf
ds
outsb
imul
pop
test
jmp
lahf
adc
loopne
xor
pop
and
xchg
out
lret
lods
bound
add
mov
rcr
adc
add
neg
mov
push
stc
adc
les
xchg
pusha
lods
in
imul
ret
cmc
push
data16
jae
outsb
ficoms
jno
pop
das
and
pushf
pop
gs
dec
mov
sub
cmpsb
ss
call
mov
lds
pop
sarb
mov
fwait
or
in
hlt
inc
jmp
adc
into
shll
mov
and
out
cld
dec
mov
ss
aas
mov
pop
pop
decl
fiadds
sbb
cs
and
add
add
pop
lds
in
ret
xlat
inc
aad
xor
bound
mov
sub
or
mov
imul
cmpsl
adc
push
mov
mov
push
ja
push
jbe
hlt
mov
out
mov
push
xor
xor
xchg
pop
adc
jne
push
xor
stos
lock
ja
shr
shrl
mov
and
aam
jg
arpl
test
jbe
sub
int
sbb
pop
sub
xor
or
cmpsb
cld
outsb
or
add
cmc
mov
sbb
mov
cmp
mov
stos
stos
iret
in
inc
dec
jno
ds
dec
inc
outsb
pop
fisttpll
gs
push
lds
push
xchg
xlat
rorl
jne
sbb
aad
xorb
arpl
add
mov
sbbl
mov
xor
daa
jns
ljmp
adc
jmp
into
stos
cmpsb
inc
xor
fisttps
dec
sbb
cs
jp
inc
push
add
call
testb
lds
mov
daa
fwait
ljmp
test
and
mov
inc
mov
repnz
loopne
movsb
fcompl
lea
mov
sbb
mov
sarl
or
xchg
cmp
sbb
arpl
mov
bound
fbld
cmp
icebp
movsl
out
sub
sub
je
fsubrs
mov
sbb
rol
add
add
or
mov
or
jae
jnp
or
cmpb
hlt
adc
in
in
aad
sbb
xchg
ror
setae
adc
addr16
sbb
pop
sub
sbb
adc
mov
or
pop
add
mov
dec
push
js
jbe
mov
mov
test
push
pushf
xor
and
add
lods
fstp
jecxz
or
rcll
xor
dec
push
out
iret
roll
in
xchg
add
or
push
popa
mov
jecxz
mov
pop
xchg
push
loope
jle
or
insb
daa
dec
int3
jmp
push
jge
outsb
push
ljmp
xchg
cmp
popa
jbe
pop
and
out
pop
xchg
jbe
jae
or
inc
clc
lcall
or
or
sub
in
scas
ja
xor
repz
xorb
push
cltd
int
fdivrs
loope
cli
movsb
daa
mov
lods
jo
mov
stos
dec
jl
xchg
xchg
dec
sar
gs
xchg
outsb
jecxz
mov
rcll
stc
push
lods
sub
jg
pop
outsw
out
movsl
fcmovnbe
cmp
jbe
and
test
push
xlat
cmp
fnstsw
dec
cmp
pop
add
push
in
cli
stos
pop
add
insb
stos
cmp
imul
fcmovu
pcmpeqw
mov
mov
sbb
std
popf
loop
mov
mov
pop
fimull
xchg
subl
xor
add
in
and
sbb
mov
adc
mov
dec
push
adcb
pop
ds
pop
or
ret
sub
sub
mov
sub
leave
push
inc
adc
icebp
jno
mov
jge
mov
adc
push
xchg
inc
and
or
sbb
enter
lcall
inc
inc
call
mov
lock
and
dec
fcomps
and
mov
and
pop
pop
pop
mov
adc
mov
xor
scas
adc
lock
jno
xchg
xchg
es
xchg
cmp
and
add
sbb
xor
mov
movl
push
ret
into
cmp
cltd
push
lea
push
and
pusha
out
call
outsl
inc
xor
and
mov
shrl
cmp
xchg
popf
imulb
in
mov
mov
cmp
cwtl
jle
incl
xor
jnp
test
addr16
daa
mov
popf
or
lcall
pop
rolb
and
out
or
add
mov
adc
xor
inc
mov
xorl
imul
cmp
push
mov
pop
mov
int3
movsl
mov
pop
or
push
inc
ret
call
lock
mov
sub
push
mov
dec
xchg
mov
arpl
shrb
lods
xorl
jnp
movsb
shr
sbb
stos
sbbb
aas
push
push
push
and
pop
je
repz
mov
test
jne
arpl
and
jg
std
cmpsl
lock
mov
or
neg
movsb
in
push
xchg
sub
cmp
in
jle
movd
push
push
sbb
rcll
or
adc
adc
cmc
lea
outsb
enter
sub
mov
jae
ljmp
lock
xor
mov
sub
or
sbb
repz
xchg
inc
sti
and
sbb
lcall
xchg
shlb
dec
jge
mov
lds
loop
adc
rcrl
sub
in
xor
sub
or
pop
sbb
scas
mov
xlat
and
lds
aad
mov
popw
and
lea
pop
xor
scas
and
arpl
mov
shl
xchg
jae
les
mov
movaps
aad
xor
imul
xor
add
mov
pop
fscale
loopne
mov
dec
adc
mov
jmp
push
adc
jns
movsl
dec
imul
jg
rorl
popa
cld
add
scas
cmc
outsl
push
sahf
mov
pop
ficoml
xor
shll
aaa
out
jae
fs
ljmp
pusha
sbb
push
mov
roll
inc
xchg
push
or
push
sahf
fdivs
gs
popa
js
clc
das
cmp
pop
fistpll
es
fiaddl
push
sub
sbb
sti
sti
inc
cld
jns
and
add
cmc
xlat
xor
xor
fnsave
sar
ja
loopne
xchg
xor
adc
aaa
fistl
lret
jnp
imul
push
jmp
add
mov
xchg
cmpsl
mov
mov
insb
lret
ret
jge
lret
lcall
push
pop
int
add
add
int3
cmp
cli
lea
pop
loopne
pusha
pop
jbe
loopne
iret
outsl
sbb
jge
sub
or
cmp
mov
adc
filds
filds
jne
mov
xchg
movsl
sub
push
push
pop
das
or
bound
add
sti
hlt
fstl
test
fnsave
add
jecxz
addr16
cmc
in
hlt
sti
push
xchg
dec
ja
mov
shll
popa
stos
fidivl
mov
push
xor
push
xor
lahf
mov
push
into
inc
push
add
mov
inc
outsl
xchg
or
das
jle
xlat
fldcw
dec
pop
jnp
cmovge
test
inc
insb
dec
into
xor
arpl
lods
jg
cs
mov
jg
sarl
ret
mov
in
push
outsl
out
mov
dec
pop
test
call
sbb
jno
out
cmpsb
push
movsl
fbld
loop,pn
dec
sbb
xor
mov
loope
shll
mov
mov
dec
fcoms
aad
shll
adc
fildl
jbe
jo
push
sub
push
ret
addr16
leave
lcall
push
ret
out
jo
push
xchg
aas
jp
mov
sub
inc
mov
dec
pop
cmpsb
cmc
in
push
fsubrs
adc
lea
lcall
jg
lcall
call
pop
mov
or
jae
shlb
out
add
imul
jmp
and
sbb
xor
and
or
fwait
cmp
sbb
call
je
das
fstl
sub
clc
ret
push
enter
push
jae
nop
dec
jge
movsb
jns
js
daa
in
shll
fcompl
push
xor
out
cltd
int
mov
inc
cli
xlat
and
jecxz
mov
rep
clc
in
scas
arpl
fstl
aam
mov
or
inc
and
xor
repnz
pop
jbe
pop
jnp
stc
sub
cs
ja
bound
cmc
sbb
repz
sbb
jl
mov
fnstsw
popf
or
mov
into
push
xor
push
sbb
fdivl
stos
dec
adc
ds
jle
fdivr
hlt
test
shlb
push
inc
inc
stc
imul
cmp
pop
dec
lcall
sbb
jl
sbb
repnz
notl
push
push
insb
jnp
push
sahf
adc
mov
pop
aad
mov
jg
lcall
lea
jl
xchg
nop
jg
mov
or
rol
je
push
jecxz
call
inc
mov
mov
inc
mov
out
mov
mov
ljmp
push
mov
mov
mov
mov
stc
jge
mov
cmc
push
sub
inc
pop
xor
movsb
sahf
js
mov
daa
mov
ja
jbe
sbbb
and
std
lcall
pushf
sub
push
xchg
mov
out
mov
or
nop
cmp
inc
inc
sub
dec
adc
shrb
xchg
in
xor
test
js
js
xchg
cwtl
out
and
pusha
pop
mov
cmp
fcmovne
lea
pop
mov
lret
test
imul
or
sbb
lahf
push
mov
aas
enter
or
leave
adc
mov
jae
js
int3
call
nop
lods
addr16
jnp
test
loop
cmc
pusha
xor
and
dec
pop
dec
mov
adc
popf
jno
je
push
in
dec
mov
mov
test
stos
push
xor
pusha
out
push
test
or
movsb
and
and
pop
pop
jne
mov
jnp
xor
pop
repz
addr16
test
dec
mov
cmp
xchg
shll
dec
shrl
push
inc
mov
push
xchg
cs
movsl
xchg
mov
xchg
lret
mulb
xchg
pop
pop
rcrb
mov
test
mov
jge
cmpl
inc
xor
and
or
xchg
orl
in
adc
and
pop
inc
aad
dec
and
insb
and
and
mov
addb
xor
sbb
jbe
into
mov
add
mov
push
cmpl
and
fdivs
dec
or
and
hlt
xchg
cld
push
insb
ss
xor
mov
addb
cmc
jb
add
lret
testl
test
jae
push
outsb
jle
push
adc
mov
or
sbb
mov
inc
mov
test
sbb
cmc
je
add
imul
lock
xorb
stos
repz
ljmp
icebp
rcrl
xchg
lods
jmp
clc
inc
or
leave
loopne
cmc
push
xor
aam
jecxz
dec
pop
adc
shrl
gs
lock
insb
fimull
loope
mov
dec
pop
sahf
or
cmp
mov
stos
push
je
fs
mov
stos
aam
xchg
pop
jmp
push
mov
cmpsb
jle
lods
gs
mull
cltd
inc
clc
into
add
rcrb
scas
repnz
add
sub
sbb
jno
lea
or
mov
test
xor
dec
cmpsb
mov
cmpsl
mov
out
pusha
insb
pop
cld
xchg
shrl
jnp
or
cltd
mov
adc
sub
cltd
xchg
out
cmc
mov
rclb
cmp
stos
jl
add
xlat
andl
aam
shr
ds
inc
mov
xacquire
push
dec
xchg
mov
cltd
sub
out
add
or
pop
out
sbb
mov
ja
xlat
pop
xor
pusha
sbb
in
adc
movsb
gs
inc
mov
cmp
ds
xor
lret
cmp
cmp
mov
int
test
push
xlat
stc
cs
xchg
cld
mov
imul
pop
mov
fnstenv
fldt
mov
outsb
inc
sub
xchg
and
cmc
adc
hlt
rorb
xlat
mov
push
add
xlat
xchg
and
popf
inc
lods
dec
sbbl
js
iret
inc
xor
push
in
pusha
push
sub
call
jns
push
mull
in
popf
mov
sahf
and
mov
jmp
fisttpl
push
adc
in
sub
xchg
arpl
lods
xor
add
adc
xor
jge
sub
mov
orl
mov
hlt
jl
hlt
repnz
lret
fnsave
push
mov
mov
push
adc
addr16
or
push
int3
inc
sbb
adc
jo
push
push
and
lahf
mov
lds
jg
jne
out
mov
xchg
fists
and
pop
cmp
push
mov
xchg
stos
shr
add
outsb
xchg
stc
imul
or
ret
inc
cli
cli
out
std
xchg
cli
mov
dec
dec
cmp
rol
insb
mov
popa
lcall
pusha
mov
or
mov
je
inc
lods
inc
cwtl
push
lret
xchg
mov
pop
inc
xor
idivl
push
xlat
sarl
adc
fdivrs
inc
and
sub
test
orl
movsb
cltd
jbe
push
mov
xchg
jg
jg
jb
daa
cmp
test
jne
fbld
in
xchg
add
mov
add
mov
inc
adc
loopne
jl
jge
dec
sub
popa
dec
cmc
call
adc
inc
in
frstor
push
xor
test
xchg
sub
inc
decl
jne
fsts
cmp
jmp
es
imul
pop
test
jp
shlb
and
dec
fwait
jle
adc
out
pop
jmp
mov
out
sub
dec
lret
mov
lcall
lods
test
cmpsb
jp
inc
pop
lret
pop
pop
fidivrl
mov
int3
push
hlt
ja
sbb
cmp
testl
in
push
cmpsb
lds
sub
and
sub
notl
pop
adc
leave
lock
scas
adc
dec
push
jmp
dec
rorl
push
fwait
xor
out
js
fstl
out
ja
pop
push
add
adc
and
and
cmc
cltd
or
lds
in
aam
lcall
jnp
fldt
daa
inc
jmp
pushf
outsl
adcl
adc
lcall
pusha
in
sbb
pop
sbb
aad
out
push
xchg
enter
call
out
pushf
jbe
cwtl
into
idiv
xchg
sub
mov
mov
sub
ja
mov
adcl
test
sbb
in
lods
xor
pop
jle
push
mov
mov
sub
ret
add
imul
and
enter
sub
or
ffreep
mov
xor
and
jns
mov
mov
add
shll
and
xchg
sub
xchg
xchg
mov
out
mov
adc
mov
mov
push
jne
mov
inc
out
dec
pop
inc
cmp
pop
pop
out
shrl
mov
popa
aam
ja
shlw
test
fiadds
and
in
dec
inc
push
mov
xor
outsl
xchg
shl
cs
xchg
aad
adc
shrb
mov
sarb
popf
ja
movsb
mov
jns
sbb
clc
push
scas
adc
mov
jle,pt
cmc
jecxz
bound
shrb
das
rcr
ss
sti
cld
jecxz
lods
mov
divps
loope
push
pushw
fwait
inc
inc
popf
insl
mov
das
pop
outsb
leave
dec
ret
adc
stos
in
push
cmpsb
xlat
xchg
mov
pop
daa
sbb
lret
jmp
pushf
xor
pop
pop
gs
dec
les
fsincos
out
jo
jg
jmp
lods
dec
outsl
sub
inc
dec
aas
and
inc
adc
int3
sub
add
dec
push
xchg
xor
lret
mov
shlb
dec
pop
out
call
adc
inc
les
popa
movsl
push
je
scas
test
int3
fisttpl
data16
sbb
add
jne
xchg
fdivr
add
stos
or
loope
mov
lods
add
nop
imul
shl
incb
sbb
cli
dec
in
dec
xchg
adc
repnz
rclb
push
out
and
cmp
cmp
mov
sahf
stos
push
fadd
ret
lahf
imulb
xchg
fmuls
ret
fstpl
dec
add
sub
incl
cli
test
xor
sub
mov
mov
or
aas
mov
push
xchg
sbb
scas
inc
fs
ljmp
icebp
sbb
and
cmp
sbb
shll
iret
bnd
ret
gs
std
cmp
lods
xor
sub
push
push
and
jp
cmp
inc
stc
fwait
cmp
xlat
rcrl
leave
roll
pop
cmp
pop
mov
sbb
and
ror
aaa
jle
idiv
jecxz
jns
aam
sbb
mov
jg
mov
mov
mov
jb
repnz
pop
cmp
jg
sub
adc
push
hlt
movsl
add
mov
push
sbb
mov
or
mulb
cmp
dec
pop
jecxz
pop
add
sahf
jne
lcall
ljmp
repz
addl
loop
mull
xor
mov
fwait
adc
popa
js
mov
shlb
xchg
test
mov
test
lds
jmp
popf
insb
push
cmc
push
dec
popa
mov
pushw
mov
pop
in
rclb
in
sub
addb
call
fcoms
jb
mov
fidivs
mov
add
pop
or
adc
nop
leave
into
sub
daa
leave
push
je
adc
lods
dec
stos
xchg
enter
mov
or
mov
xor
iret
sbb
cmc
push
movsl
ret
mov
pushw
out
sub
mov
and
imul
cmpsb
jbe
fisttpll
cmp
push
jbe
cmpsb
addb
cmp
pop
add
pcmpgtw
shrl
inc
repz
and
sbb
jnp
or
push
ljmp
fadds
gs
push
arpl
sti
jo
adc
mov
jbe
ret
out
push
shll
andl
out
or
cmp
test
fnstsw
mov
sub
shll
test
dec
cmc
add
cld
clc
cmpsb
adc
mov
mov
sarb
mov
int3
ja
xlat
pop
loop
mov
cmpsb
xchg
inc
mov
push
push
ss
dec
push
lahf
scas
pop
cmc
jp
inc
cli
jae
add
or
pop
pushf
test
jmp
and
subl
outsb
push
inc
dec
iret
xchg
mov
jbe
shll
test
cmpsb
dec
call
ss
fs
add
sub
out
stc
ror
leave
test
mov
mov
add
dec
xchg
aad
testb
mov
lret
pop
xchg
xchg
or
stos
mov
xor
xor
mov
fdivl
xor
sbb
inc
hlt
xorl
xchg
test
mov
add
ret
or
fcompl
inc
mov
testb
subl
ljmp
inc
int3
mov
mov
test
xchg
push
hlt
aaa
pushf
shll
and
mov
jg
loope
bound
enter
push
jl
and
mov
or
inc
xchg
scas
lret
aam
mov
scas
or
outsl
jb
lcall
je
jae
icebp
xor
aam
fnstenv
xchg
xchg
int3
mov
mov
pop
pop
fwait
xchg
adc
ds
xchg
pop
test
in
or
add
aam
push
and
fsqrt
imul
push
mov
sarb
daa
push
mov
std
sbb
dec
cs
jge
enter
ljmp
dec
mov
shl
dec
jnp
inc
sbb
ss
dec
repnz
scas
adc
xchg
jnp
movsb
imul
push
repz
bound
adc
fimull
jo
mov
lods
enter
mov
xchg
lods
sbb
fdivrs
mov
jecxz
mov
addr16
push
inc
lret
test
add
mov
and
mov
pop
push
cmpsb
or
add
loope
cli
in
push
inc
mov
mov
insl
add
xchg
xor
fidivrs
enter
jo
icebp
or
push
mov
cli
out
push
mov
or
xchg
outsl
adc
xchg
repnz
and
or
sbb
push
or
andl
dec
lahf
sub
rolb
jle
test
dec
hlt
jnp
lods
add
xchg
daa
cmp
jge
std
aas
std
int
roll
xchg
mov
cld
imul
jns
ljmp
mov
lock
mov
mov
fildl
sub
mov
dec
cli
inc
hlt
xchg
xchg
mov
test
xor
cs
or
sbbl
cmp
into
add
ss
clc
lcall
sarb
shlb
push
je
test
int3
or
imul
das
jb
hlt
stos
fcmovnu
pop
mov
inc
iret
sbb
push
inc
push
lods
jns
mov
in
inc
inc
mov
cwtl
outsl
xchg
test
cld
and
mov
loop
xchg
mov
dec
push
jns
or
es
xchg
loope
mov
dec
pop
pop
outsb
or
dec
push
sbb
adc
mov
enter
and
je
in
mov
sbb
gs
clc
aas
and
pop
lahf
mov
ljmp
xor
push
sbb
push
out
and
pop
in
in
repnz
push
rcrb
test
cmpsb
xchg
jecxz
jb
mov
into
jmp
pop
aad
push
test
out
dec
cmp
xchg
jbe
ja
inc
and
push
fwait
mov
dec
xchg
push
xor
jl
jo
sti
mov
adc
lcall
or
enter
lods
cwtl
sahf
hlt
dec
cld
jns
add
jo
dec
aad
mov
xorb
js
mov
push
dec
clc
cmp
cwtl
aad
push
int3
pop
lods
inc
xor
movl
je
xchg
pushf
out
lcall
push
or
jbe
sbb
add
and
cmp
pusha
jecxz
pop
shll
sub
div
pop
insb
cltd
jp
ret
mov
mov
out
pop
push
ja
cmpsl
sahf
cltd
push
jle
sub
mov
jle
pop
mov
repnz
leave
push
xor
ret
pop
push
and
scas
and
sbb
sbb
mov
xchg
push
push
ss
ljmp
sti
cmp
adc
pop
mov
fucomp
icebp
adc
cltd
les
or
push
leavew
adc
lock
test
inc
in
sti
out
mov
push
xor
sahf
mov
rclb
into
xchg
roll
movsl
xor
gs
fwait
inc
push
fnstenv
orl
cmp
pop
leave
cmp
aad
rorb
sbb
js
icebp
dec
das
add
lahf
or
xor
vxorps
arpl
je
loop
mov
xchg
or
pop
cltd
add
ja
shr
popf
lahf
vpunpckhbw
lret
scas
lods
mov
inc
repnz
xchg
subb
pop
pop
and
or
push
repnz
or
test
data16
pop
xor
negb
jbe
fwait
sti
xchg
ret
lret
xor
imulb
fistps
std
icebp
or
ds
arpl
mov
out
out
stos
shll
idivb
pop
xor
sti
out
pop
sbb
mov
jne
fistpll
sub
xchg
out
dec
fcmovu
ljmp
adc
adc
loopne
call
nop
mov
sub
cli
adc
jge
mov
es
sbb
bnd
cmp
sub
pop
pusha
mulb
fcompl
sbb
xlat
jle
cmp
inc
inc
in
sbb
je
mov
lahf
or
cmp
inc
stos
push
dec
mov
test
sub
out
mov
mov
ss
and
adc
push
jmp
cmp
daa
mov
sbb
sub
push
mov
mov
in
sbb
mov
mov
add
sbb
jns
hlt
loope
sub
jb
mov
movsl
iret
cwtl
movsb
notb
inc
push
loopne
lds
xlat
add
scas
mov
out
rolb
pop
xor
jo
xchg
fists
or
mov
stc
cmp
jp
mov
pop
shrl
cmp
es
pop
mov
stos
daa
inc
ja
pop
dec
xchg
cmpb
inc
icebp
xor
nop
or
dec
jne
mov
out
mov
mov
xor
sub
popf
jo
push
dec
mov
add
out
and
sub
cmp
or
cmp
pop
xor
mov
mov
dec
sub
lea
sbb
push
pop
sbb
adc
lods
iret
push
pop
sub
inc
dec
jno
jge
loope
pusha
aas
mov
into
mov
int
add
mov
jnp
cmpsb
jg
imul
sbb
push
adc
cmp
jb
cmp
cmp
cmp
push
xchg
in
mov
mov
or
add
popa
mov
fwait
jne
ljmp
repz
xchg
orb
pop
hlt
filds
xor
or
pusha
leave
out
adc
jns
and
stos
mov
fwait
sbb
ss
mov
and
movsb
int
dec
scas
xor
jp
lahf
and
mov
leave
stc
insb
push
mov
dec
jne
mov
movsl
sarl
gs
dec
js
scas
cmp
and
cli
add
pop
jne
cld
dec
cmc
mov
xorl
les
mov
out
mov
mov
repz
popa
adc
test
hlt
fcomps
rclb
jecxz
scas
xchg
and
mov
ret
ljmp
and
ljmp
imul
mov
aaa
stos
pop
sub
shl
lea
ret
lret
xor
mov
mov
dec
lods
inc
sbb
xor
vcvttpd2dqx
aas
ljmp
sbb
stos
jmp
cltd
outsl
aam
mov
sub
insl
bound
mov
cmp
lcall
xor
aam
mov
mov
mov
je
hlt
jbe
mov
push
testl
or
or
adc
stos
pop
out
ja
adcb
sbb
push
rcr
scas
lds
pop
jb
lret
cmp
push
inc
and
cmc
pushf
add
or
dec
add
xchg
push
imul
sbb
jecxz
in
push
and
xchg
test
scas
push
cltd
sbb
movsb
jb
xlat
cmpsb
pop
jg
cmpsl
fimuls
mov
arpl
lahf
adc
pusha
imul
push
jle
mov
not
xorl
or
addr16
movsl
pushf
adc
xchg
sbb
aad
les
out
and
scas
dec
aaa
sarb
ja
sbb
xchg
lea
clc
es
lret
sbb
fidivrl
jbe
mov
inc
push
cmp
jg
push
fwait
jb
ds
mov
imul
pusha
decb
inc
das
jl
test
jl
int3
xchg
inc
insl
xchg
sub
and
lods
or
cltd
stc
pop
clc
sub
jle
and
mov
adc
fcomp
cmp
outsb
xlat
rcll
or
push
testb
iret
sbb
fs
arpl
jecxz
push
push
add
sar
fwait
popl
outsl
rolb
inc
scas
pop
fwait
icebp
cld
rcl
sub
ljmp
push
sarl
ds
mov
inc
mov
loope
sahf
rol
xchg
dec
mov
insb
jns
xchg
lret
data16
xor
add
lods
nop
or
arpl
cmc
call
pop
xchg
cmp
pop
inc
movsb
mov
sbb
sbb
cmpsb
lea
dec
sbb
test
push
ret
addr16
test
mov
cmpsl
mov
push
mov
nop
int
aaa
push
or
dec
pusha
pop
pop
xchg
arpl
lret
loope
scas
call
xchg
adc
push
nop
mov
xor
jb
stos
cltd
dec
sbb
mov
repnz
xchg
imul
aad
xchg
add
sub
or
ficompl
add
imul
adc
xchg
ffree
sub
mov
je
and
or
shl
rcrl
stos
sti
sub
andb
mov
cltd
leave
mov
sub
cmpxchg
les
xchg
fs
div
fsubrp
fidivrl
arpl
jne
ffreep
movsb
scas
add
or
push
adc
subl
iret
shl
divb
xchg
cmp
and
fwait
loope
sbb
fdiv
sub
and
or
leave
out
mov
or
fimull
sbbb
push
negb
js
sbb
mov
shl
or
jae
mov
lcall
shll
adc
pop
or
cmp
nop
jns
jo
mov
dec
push
mov
lcall
jae
mov
lcall
ret
xor
jbe
pop
rcl
pusha
xchg
jnp
out
add
mov
aam
inc
add
adc
les
cmp
mov
cmpl
arpl
xchg
inc
xchg
mov
xchg
shll
or
xchg
mov
add
push
adc
mov
mov
loop
sbb
mov
sbb
out
cmp
add
ret
jne
fwait
push
shlb
dec
inc
pusha
xchg
repz
mov
scas
xchg
or
andb
movsb
jbe
in
jbe
or
in
push
shrl
mov
dec
fst
or
mov
das
mov
dec
mov
lds
mov
push
and
pop
push
pop
mov
adc
lret
xchg
sub
fucom
shl
jle
dec
ret
and
mov
mov
sarl
sub
mov
les
bound
cmp
xor
aaa
je
fnstsw
ret
lds
pop
dec
rol
fidivrl
movsb
xlat
mov
mov
cmpsl
inc
xchg
lds
jp
ret
mov
xchg
mov
xchg
aad
sub
dec
jl
insl
dec
lret
imul
adc
sub
push
rorl
fwait
jle
shlb
and
add
push
mov
mov
sbb
mov
pop
mov
and
cltd
jle
xor
dec
test
cmp
pop
mov
adc
iret
neg
daa
push
xchg
jecxz
lods
nopl
xchg
ret
xchg
call
ret
xchg
test
int
add
jmp
cltd
out
ja
push
into
scas
sbb
xchg
repz
and
leave
lret
mov
int
and
push
iret
add
iret
cli
aad
and
push
ja
xchg
pop
push
inc
test
loop
and
push
rclb
ljmp
cs
lea
add
hlt
sbb
movsl
mov
jl
adc
addr16
pop
addl
test
ret
push
neg
adc
xchg
addr16
adc
jle
xlat
push
add
cwtl
in
mov
or
sbbb
xor
sbb
add
in
sbb
xor
mov
es
icebp
pop
jecxz
test
inc
mov
push
loop
divb
cmpl
xchg
xchg
push
pop
in
les
adc
and
nop
cmc
inc
scas
aad
in
pop
mov
ficompl
repz
inc
adc
or
cmpsb
dec
das
jl
pop
xchg
sarb
rorl
pop
xor
inc
adc
clc
push
rorb
push
jle
scas
mov
add
mov
aad
into
cli
shlb
gs
shrb
xor
mov
roll
push
daa
mov
and
fnstcw
imull
cld
mov
and
aam
loop
push
xchg
out
ficompl
cli
fsub
add
flds
mov
push
mov
sbb
imul
ret
cmp
sti
add
mov
movsl
jns
jp
outsb
sbb
andb
jb
shll
in
lret
popf
add
add
sbb
jae
fidivrs
sub
pusha
and
das
aam
cmp
test
fstpt
xor
mov
fists
lock
mov
adc
roll
pop
inc
jmp
fs
pop
lods
cs
jnp
hlt
cmpsl
pop
call
jns
mov
out
pop
call
mov
sbb
fs
sub
mov
and
jne
xchg
rcl
sbb
pop
testl
test
ret
xchg
shrb
mov
fdivr
loopne
rsm
mov
jae,pt
inc
sub
pop
mov
dec
push
lret
test
sbb
aas
cmc
jp
gs
xor
loope
mov
sub
out
xchg
jo
fbld
pusha
daa
mov
dec
xor
push
mov
adc
inc
lds
cwtl
das
aam
adc
dec
push
mov
xor
scas
push
ljmp
ja
mov
inc
addb
cwtl
mov
mov
mov
mov
sti
ret
mov
jmp
pop
cmpsb
cmc
mov
mov
or
inc
ror
or
loope
inc
test
push
sub
xchg
ja
jg
ja
cmp
pop
stos
insb
adc
xchg
dec
shlb
jg
scas
dec
cmp
daa
into
jnp,pt
or
sub
fldcw
push
cmp
add
push
mov
xchg
inc
add
jno
daa
mov
push
setb
mov
sbb
adc
mov
rorb
jb
push
xor
inc
dec
fldt
and
jecxz
sbb
dec
mov
lea
adc
adc
jne
adcb
push
push
dec
int3
movsl
mov
fnstsw
scas
inc
lcall
or
ljmp
xchg
in
mov
push
pop
cltd
push
push
dec
in
clc
lds
pop
adc
jp
sar
pop
xor
cmp
in
leave
lods
mov
int
ja
inc
dec
repnz
pop
fst
lcall
and
call
xor
lds
out
cmp
mov
sub
push
das
jmp
sub
push
push
mov
repz
push
or
imul
stc
ret
pop
push
xchg
das
xchg
jp
nop
mov
cmp
mov
out
dec
mov
lret
ljmp
jo
sbbl
or
mov
sahf
push
out
adc
inc
mov
add
inc
adc
xchg
xorb
imul
ficompl
cld
add
dec
jnp
or
add
loop
lahf
ss
xchg
movsl
cs
out
das
out
lds
xchg
fnstsw
xlat
sahf
pop
inc
cs
pop
and
sbb
push
rep
push
arpl
lcall
add
jno
insl
xchg
push
std
fiadds
jae
test
fdivrs
or
inc
xor
rolb
cmpsl
xor
ret
ss
pop
popa
in
fcoms
imul
call
fcoms
cmpsl
push
mov
inc
repnz
pop
in
mov
scas
mov
pop
adc
lock
and
ds
cmp
fs
iret
enter
test
mov
mov
jle
inc
pop
divl
jb
nop
cmp
lods
lds
negb
cmp
mov
sbb
inc
push
or
fstpl
es
dec
lret
pop
dec
enter
cmp
push
ret
mov
or
mov
xchg
popa
xchg
lea
mov
jg
push
jne
mov
mov
idivb
dec
repz
aaa
popa
fldenv
cmp
test
lds
stc
daa
arpl
mov
lcall
jmp
or
dec
pop
adcb
mov
pop
mov
or
aas
gs
test
mov
push
rol
push
xchg
fsts
adc
xchg
cmp
or
hlt
xchg
pop
js
stc
pop
jge
subb
clc
rcrl
xchg
mov
lds
add
inc
dec
push
add
loop
ret
push
adc
add
or
inc
int3
fistpll
cltd
std
mov
call
xchg
insl
sbb
dec
add
aaa
sub
fsubrs
test
push
pop
addr16
int3
nop
lods
xor
push
sub
idivl
imul
out
in
xchg
cmpsb
adc
inc
xor
add
and
xlat
adc
pavgb
dec
lret
clc
jge
test
cld
xchg
jns
pop
xchg
divl
push
mov
movsb
fiaddl
rclb
sbb
test
stos
repz
in
fs
dec
cmc
lods
and
cmp
dec
jbe
cltd
xchg
xor
js
sub
cmp
mov
jge
mov
shl
mov
and
mov
lods
insb
and
je
movsb
ljmp
lds
ret
in
popf
js
scas
sbb
pop
sub
sub
cmpsb
mov
cmp
rorl
in
push
mov
out
jecxz
movsb
pop
mov
xor
sub
int
jb
test
mov
mov
imull
push
cmp
xchg
cmp
adc
icebp
xchg
xchg
xor
jg
lcall
adc
jl
mov
clc
push
pusha
loopne
mov
testb
push
lea
rolb
add
je
and
ds
pop
dec
pusha
push
movsb
in
jecxz
push
hlt
mov
mov
arpl
jecxz
xchg
xchg
xor
jo
insb
jl
outsl
push
jnp
pop
pop
sub
jmp
inc
aaa
xchg
into
lret
mov
push
call
sub
ret
pop
fcmove
xor
movsb
shlb
xchg
and
into
fdivl
add
dec
lods
sbb
pop
lods
fcoms
xchg
sub
or
dec
dec
inc
inc
pop
js
call
sbb
clc
in
divb
mov
push
movsb
mov
sub
and
dec
loope
lods
pop
cmp
jg
repz
int3
repnz
inc
sbb
imul
push
in
lahf
xor
mov
adc
and
shl
imul
fwait
nop
xor
xchg
xchg
rorl
jge
aam
xor
mov
movsb
jg
cli
cmp
mov
xchg
outsb
mov
push
and
pop
aam
jmp
popf
hlt
add
push
cmp
add
jae
adc
xor
not
add
daa
mov
mov
cli
daa
push
clc
cmp
imul
test
and
stos
jge
retw
roll
bound
out
scas
rcll
sub
xchg
xchg
aas
test
movsb
or
icebp
add
movsb
push
ret
data16
and
jp
push
mov
push
mov
sahf
icebp
jae
add
ret
xchg
icebp
fwait
mov
in
xor
jne
xor
push
orb
dec
loopne
test
mov
mov
mov
lret
lods
lods
or
aas
mov
fwait
sub
lret
mov
adc
dec
movsl
or
adc
jb
cmp
loop
pusha
imul
xchg
xor
inc
lds
pop
or
call
movsb
pop
test
cmpsb
fmull
pop
imul
nop
daa
idivl
mov
imul
jp
test
jae
xor
in
cli
and
dec
outsb
push
push
inc
push
xchg
cmp
and
roll
add
mov
pop
xlat
jg
jecxz
push
pop
je
je
fwait
pop
insb
aad
icebp
inc
xchg
and
fwait
test
pop
cmp
dec
ret
scas
out
pop
dec
pop
mov
mov
push
pop
pop
shll
inc
fidivrl
into
dec
jo
inc
inc
or
mov
das
pop
and
sub
subb
movsl
mov
sub
push
cmp
fdivrl
dec
push
dec
sbb
lods
cli
xchg
cmp
call
xor
fs
daa
pop
and
imul
int
ljmp
sub
jo
leave
fcmovb
fldcw
or
sub
jmp
pop
or
and
push
mov
and
and
lcall
jo
pop
hlt
mov
lcall
cmp
data16
and
xchg
jbe
scas
cli
je
aas
clc
enter
cmp
lods
xor
cmpl
pop
push
adc
sub
add
jp
imul
and
mov
addl
dec
push
mov
inc
jl
dec
cli
cs
mov
xor
aam
loopne
sbb
adc
push
ja
bound
mulps
sub
cmp
insb
sahf
push
insl
fisubrl
imul
xor
inc
sub
mov
test
cli
inc
xor
sbb
push
cmpsl
mov
mov
jmp
xchg
jo
add
add
add
add
push
inc
mov
mov
jmp
lock
push
or
das
adc
lods
daa
fmull
and
dec
pop
nop
xchg
jl
xor
loop
sti
incl
sarb
rorb
test
loop
xchg
test
mov
cmp
jmp
fdivr
lock
add
jge
sub
ds
rclb
fdivs
mov
cmp
push
ds
movsb
mov
sbb
pop
cld
xchg
mov
js
std
lret
jmp
fdivrs
lods
xor
cmp
and
pop
dec
js
sub
sub
popf
jecxz
stc
lea
imul
jmp
mov
jbe
sbb
arpl
dec
cmp
mov
and
sbb
lret
pusha
cmp
adc
adc
scas
fcoml
inc
cmpsb
icebp
ret
cmc
dec
mov
xchg
mov
cwtl
jg
lock
test
in
icebp
outsb
ds
pop
mov
mov
arpl
sbb
fadd
out
sub
lret
jb
mov
test
dec
sub
inc
in
dec
out
jne
xlat
lret
jns
and
lcall
je
test
dec
sbb
dec
loopne
into
lret
jb
lods
sub
scas
jmp
loopne
mov
pop
xchg
pop
mov
pusha
adcb
sub
mov
js
cmp
fcmovb
lods
inc
cmp
mov
inc
and
jmp
in
aas
popf
adc
sub
cmp
ss
ss
mov
mov
scas
test
jecxz
icebp
int3
adc
push
sbb
pop
imull
and
xor
cmp
push
cwtl
insb
pop
add
xlat
lock
jmp
test
jg
loop
add
dec
mov
cld
or
lock
xchg
mov
mov
shl
cli
jge
pop
stos
call
inc
rorb
addl
mov
out
clc
or
push
or
data16
adc
jne
addr16
mov
dec
mov
push
data16
cmpsl
inc
or
or
je
cmpsb
mov
daa
and
sbb
mov
and
pop
sbb
push
repz
aad
dec
mov
cli
in
sub
jmp
adcb
fwait
test
dec
fwait
inc
stos
inc
loopne
and
push
fucomip
addr16
mov
lock
xchg
add
ret
or
insl
inc
enter
sub
testb
xchg
adc
jne
cld
sbb
xor
xchg
or
cmp
scas
sbb
or
cs
testb
push
xlat
cwtl
adc
inc
popa
js
popa
inc
mov
push
inc
fsubrp
mov
cmpsb
add
push
xchg
test
test
int
sbb
mov
arpl
clc
and
pop
addr16
sub
mov
push
stos
bound
cltd
in
xchg
dec
xchg
int
push
sbb
lret
push
and
popa
pop
outsl
repz
cmp
aad
sub
enter
cli
mov
in
fxch
loope
jo
scas
push
mov
inc
add
clc
popf
cltd
daa
xchg
clc
push
push
cmp
addr16
mov
mov
push
jbe
jae
into
mov
mov
adc
push
es
inc
fistpll
jns
mov
and
xor
js
lahf
ss
push
mov
test
fwait
int
or
fwait
dec
stc
rorb
sub
sub
js
mov
cli
cmp
mov
adc
inc
jne
in
add
imul
xchg
add
mov
dec
aaa
lcall
insl
add
cmpsb
lahf
jp
pop
and
jb
mov
xor
scas
and
cmc
in
mov
insb
out
xor
cld
jge
and
dec
mov
mov
pop
insl
push
out
std
ret
or
mov
xchg
sub
mov
jg
es
xlat
test
cmc
rcrl
clc
enter
outsl
das
lods
fcoml
xchg
adc
xchg
xor
xor
add
aad
lcall
pop
xchg
push
push
pop
or
sti
add
and
push
cmc
aaa
adc
aaa
fs
icebp
xchg
mov
mov
in
aam
dec
in
iret
sub
cmp
dec
dec
out
shrb
out
jge
ds
inc
dec
inc
mov
and
adc
lcall
xchg
out
xchg
rcrb
imul
sub
ret
xor
out
je
loope
int3
dec
adc
pop
cmpsl
nop
xchg
repnz
xchg
daa
push
cmc
jmp
sub
or
rol
loop
call
cmc
aam
in
in
xchg
in
nop
xchg
inc
dec
ljmp
sbb
jne
call
pop
outsb
imul
aad
sahf
jo
jge
loope
data16
cs
mov
mov
shrl
dec
xor
mov
mov
mov
mov
out
adc
xor
jmp
sahf
lahf
sbb
outsl
aas
cmp
gs
jmp
flds
mov
mov
xchg
clc
in
fisubs
data16
or
cmp
gs
push
repz
movsb
in
pop
cld
mov
in
sub
cmp
mov
push
scas
or
addr16
xchg
add
imul
push
pop
jle
lea
ret
cld
push
enter
icebp
push
xchg
jns
repnz
cmc
hlt
mov
into
push
sbb
xchg
push
int
orl
and
lcall
testb
pop
adc
js
mov
ds
cld
mov
aas
sub
cmp
cmc
dec
add
cmp
sahf
mov
outsl
dec
push
xor
call
jp
call
iret
shlb
out
in
pop
cmp
cli
int3
out
add
out
notb
add
ja
shll
iret
or
lea
dec
or
or
mov
fisttpl
pop
xlat
cld
xchg
or
in
sub
out
pop
jnp
inc
dec
sbb
repz
fwait
xchg
lods
faddl
jo
nop
sarb
lret
add
shll
xor
stos
cltd
mov
dec
mov
or
dec
repz
mov
mov
pop
ds
jg
imul
cmc
negb
cmpsb
push
adc
mov
icebp
cmc
inc
or
adc
or
test
mov
sub
xlat
shr
mov
popa
shlb
and
incl
bound
dec
pusha
jb
mov
inc
mov
sbb
in
push
xor
xchg
and
or
xor
loope
xchg
hlt
mov
iret
pop
xchg
leave
stos
mov
lock
pop
movsl
mov
fwait
pop
shr
cmpsb
cmp
sub
out
int3
stos
jb
add
jg
std
cmp
stos
imul
loop
addr16
sbb
sub
into
cmp
cmp
jae
xchg
cmp
sub
adc
sbb
xchg
iret
icebp
jecxz
cld
or
xchg
lock
push
out
repz
icebp
test
mov
pop
mov
sbb
fs
pop
jp
stc
mov
sti
add
test
fdivrs
xor
call
mov
in
imul
adc
cli
inc
inc
xor
daa
push
jmp
cmpsl
sub
or
enter
test
mov
jle
pop
dec
mov
sbb
pop
cmp
xchg
int
fdivr
push
cmpsb
pop
inc
xchg
ljmp
dec
out
mov
add
pop
xchg
shlb
mull
lret
cwtl
andl
std
push
pop
mov
jnp
das
ljmp
arpl
lds
push
adc
jp
aam
rolb
jo
or
push
scas
sahf
lea
pop
pop
fwait
xor
cli
jae
out
xor
sbb
mov
cli
jp
jnp
xor
js
loop
fcmovnu
jge
rorl
add
cli
ficomps
xor
addr16
arpl
movsb
push
mov
dec
pop
call
int
and
rorl
jl
aaa
xchg
dec
adcl
into
in
dec
mov
pop
or
es
int3
xor
test
shrl
pop
cmpsb
dec
movsb
sub
or
add
jnp
sbb
outsb
fcomp
mov
xor
bound
sub
mov
nop
sub
scas
lods
inc
in
xchg
xchg
imul
ja
inc
or
pusha
iret
bound
mov
cmp
add
notl
jecxz
mov
lret
add
scas
xor
cmp
push
fildll
pop
add
fistpl
inc
movsl
loopne
repz
movl
push
xchg
int
divb
filds
aad
rclb
xchg
pushf
imul
mov
mov
rcrb
ja
jne
out
inc
jl
ljmp
neg
cs
inc
dec
ja
clc
sub
adc
mov
or
jne
addl
mov
mov
aas
lock
jl
and
stc
and
test
add
sbb
repnz
movsl
ljmp
test
ret
mov
jle
xor
das
shlb
out
out
inc
mov
mov
jae
inc
dec
loopne
push
mov
outsb
jge
or
dec
mov
jbe
les
sub
inc
hlt
xor
in
cmp
cwtl
addl
loope
cwtl
mov
pop
adc
sbb
sub
push
and
xchg
cmp
push
adc
stc
iret
sub
jo
fistl
in
lds
adc
adc
add
push
lcall
ret
push
adc
js
cmp
mov
callw
negb
adc
jmp
int
fcomip
mov
sbb
pop
gs
into
rorl
std
mov
outsl
es
dec
lahf
int3
test
enter
sub
int
js
mov
sti
jl
ja
adc
aaa
mov
or
push
adc
imul
inc
and
sub
in
in
dec
out
mov
pop
repz
inc
and
pop
mov
pusha
in
fnstcw
mov
xchg
add
xlat
xor
adc
mov
xchg
mov
push
ret
jbe
xlat
notb
ret
jle
pop
add
pop
sbb
sbbb
mov
xchg
outsb
and
lods
fs
mov
xchg
pop
fsubr
nop
inc
mov
pop
scas
xor
out
rorb
hlt
outsb
ret
repnz
dec
ds
mov
insl
inc
xchg
push
cmpsl
daa
pusha
xor
iret
clc
dec
and
cmpsl
push
je
mov
fwait
mov
adc
xor
hlt
test
cmpl
jnp
mov
sub
mov
dec
mov
and
addb
sub
sub
lock
fwait
push
add
mov
cltd
mov
pop
add
adc
loopne
sub
adc
inc
sub
test
insb
imul
insb
stos
aaa
mov
adcb
xor
scas
jne
push
stos
out
cmc
or
cld
cmp
sub
clc
jne
push
subb
mulb
inc
or
outsb
sti
test
into
test
clc
cmpsb
mov
xchg
mov
sarb
into
dec
pop
rorl
mov
imul
aas
mov
enter
lods
and
mov
mov
push
cmp
adc
fidivrs
add
jle
arpl
in
stos
cltd
shll
test
xor
popa
dec
lret
pusha
lret
mov
es
int3
mov
clc
int
stc
andl
loopne
je
call
adc
imul
int3
lret
push
ficoml
push
lret
std
dec
mov
imulb
out
jb
lock
adc
xor
inc
loope
xor
ss
jnp
inc
into
mov
mov
adc
rorb
cmp
mov
flds
push
sarb
dec
adc
dec
nop
jge
fisttpll
cltd
js
cmp
not
outsl
sbb
pop
scas
fimull
inc
inc
mov
lds
out
je
push
mov
add
div
out
mov
inc
jbe
sub
in
in
loop
iret
xor
in
loop
mov
pop
setns
cmpsl
lods
and
repnz
mov
or
push
xor
push
xor
add
push
lahf
inc
inc
mov
pop
mov
aaa
iret
push
inc
call
lds
in
stc
xor
fisubrs
and
mov
pop
xor
mov
xchg
inc
or
xchg
jbe
arpl
mov
scas
test
imul
enter
ja
call
fdivs
xor
inc
addb
mov
jbe
hlt
jge
adc
movsl
or
pop
mov
mov
pop
xchg
cltd
imul
mov
loop
icebp
bound
scas
das
fmuls
dec
popf
enter
jb
xor
pop
aad
mov
data16
cmp
iret
jne
out
scas
repz
pop
lods
aaa
testl
scas
jle
or
inc
mov
lods
fsubrp
scas
pop
stos
sbb
outsl
nop
daa
and
jg
sarb
dec
mov
outsb
gs
and
mov
xchg
ljmp
dec
add
jno
shrl
cmp
rcll
imul
and
xor
pop
negb
imulb
adc
pop
push
push
in
jle
clc
cmp
cmc
fnstsw
or
sarb
dec
adc
dec
jl
sti
xchg
adc
inc
mov
mov
sarb
scas
test
push
jl
mov
push
xchg
inc
xchg
leave
and
mov
ljmp
mov
in
jnp
mov
dec
inc
mov
mov
fstp
ret
lcall
sub
push
jmp
mov
call
fnsave
xlat
ss
int3
ja
mov
inc
xor
rcl
inc
call
push
loope
data16
xor
rcrl
and
xor
daa
sahf
add
xchg
xor
cmp
or
adc
mov
lods
push
sti
jmp
shlb
ja
lock
dec
cmpsb
mov
jl
loop
andl
xchg
rorb
cli
push
imull
adc
pop
mov
sub
fwait
xor
scas
hlt
ja
aas
push
mov
dec
add
adcb
push
popf
pusha
and
jo
jg
push
jp
and
cmc
popf
mov
stc
sahf
xchg
dec
sbb
es
mov
and
ja
or
das
xor
lods
aam
inc
dec
cli
sub
jne
std
xor
xor
xchg
dec
mov
ljmp
dec
jmp
mov
pop
stc
fcoml
adc
mov
mov
adc
sbb
and
into
jne
or
lcall
enter
shll
jnp
push
cmpsl
scas
push
lea
pop
adcl
adc
fnstcw
inc
les
std
shrb
mov
jle
mov
sub
push
div
popa
xchg
ds
notb
loope
xchg
jae
sub
repnz
add
ret
nop
jle
gs
lds
sbb
repnz
xorb
mov
mov
sbb
inc
mov
pop
in
jge
xchg
cltd
fldenv
orl
shlb
in
scas
imul
stos
mov
xchg
dec
and
push
out
out
sub
fnstsw
lret
test
out
jecxz
inc
test
adc
sub
jbe
loop
sbb
dec
subb
mov
and
outsb
jne
rolb
sub
mov
fldt
cmp
loope
and
ss
mov
outsb
shrl
xchg
sahf
dec
jne
mov
clc
into
lahf
mov
cmpsb
nop
mov
dec
js
jmp
push
pushf
inc
mov
jb
arpl
aaa
xchg
in
mov
mov
loopne
pop
inc
pop
repnz
or
mov
mov
xor
inc
sbb
adc
jmp
jb
mov
jbe
stos
or
ljmp
sbb
push
mov
sub
and
out
mov
push
inc
daa
repnz
push
and
test
lahf
adcl
dec
push
outsb
in
add
adc
dec
xor
roll
sub
xchg
fs
in
jmp
outsl
push
sbb
iret
mov
das
lahf
ds
jne
pop
fcompl
jbe
pusha
xlat
push
pop
test
leave
leave
dec
imul
arpl
xor
jbe
daa
int
push
lea
decl
adc
leave
sbb
loopne
pop
sbb
dec
sbb
mov
iret
insl
outsl
and
fisttps
in
addb
loop
cmp
repnz
add
stc
rcrb
push
ficomps
sub
jp
stos
push
bound
jge
shlb
or
fnstenv
cmp
test
imul
jo
push
push
fs
popf
repz
mov
push
inc
or
and
push
sub
cmp
aas
ljmp
dec
add
cs
or
out
jbe
xor
data16
fdivl
add
clc
insl
or
push
shrl
sbb
adc
orl
dec
stos
dec
loop
rolb
fstl
in
imul
clc
pusha
mov
cmc
add
dec
gs
pop
mov
mov
add
push
mov
sahf
sar
roll
sub
dec
and
lea
ja
cld
cmpsl
or
out
mov
cwtl
jae
aam
sub
out
stos
mov
mov
fists
pop
jbe
mov
cmp
inc
aad
repnz
lock
es
bound
mov
push
jmp
test
mov
push
cli
fs
les
js
rcrl
adc
cmp
test
push
icebp
push
and
mov
test
push
jns
inc
dec
ret
sbb
add
sub
xor
cli
ret
ss
cmp
push
pop
movsb
outsb
sub
jns
mov
dec
push
push
sub
push
adc
push
mov
push
jne
mov
xor
mov
push
mov
mov
push
sub
ja
sti
add
adc
scas
out
inc
sub
ds
mov
sub
or
hlt
js
shl
jmp
push
jmp
mov
jb
repz
xor
pop
pop
push
inc
lods
dec
sub
pop
sub
lds
inc
insl
jo
xor
adc
pushf
fldenv
add
cs
iret
out
jb
pop
jae
ja
imul
inc
mov
jbe
dec
dec
cmp
sarl
icebp
ja
shr
stos
mov
std
cld
push
fmuls
and
enter
xchg
xchg
adc
sti
lods
shlb
btc
mov
lea
or
inc
aam
ds
pop
jae
mov
mov
pop
lahf
dec
leave
sahf
cmp
and
push
daa
cmpsb
xchg
pop
test
pusha
jg
lds
aas
sar
cld
mov
push
fndisi(8087
jbe
push
and
pop
fs
sub
stos
jmp
test
lahf
or
cli
ja
insb
rcl
test
mov
aas
popa
lea
scas
rclb
sub
notb
ret
out
data16
pop
shlb
in
add
mov
inc
and
mov
enter
fwait
cli
xor
out
xchg
fadd
arpl
loopne
push
jl
push
mov
push
push
inc
xlat
sbbb
testb
and
mov
pushf
xchg
daa
push
push
out
popl
sarb
insl
hlt
dec
dec
pop
jg,pn
dec
inc
push
xchg
sub
push
dec
xchg
add
jnp
mov
jmp
inc
mov
stos
jno
fs
jmp
xor
jo
sbb
xchg
cmp
mov
push
lods
mov
fisttpll
das
push
sbb
ja
inc
movsl
js
orl
imul
xlat
hlt
jb
xor
cmp
sti
jg
or
push
cmpl
or
es
test
enter
pushf
das
addb
and
aad
pop
inc
in
fidivrs
and
sbb
inc
js
inc
es
push
out
jp
push
ret
aam
jno
push
orb
aas
xor
clc
push
inc
sahf
cmp
push
pop
adc
pop
push
jo
jno
mov
adc
or
dec
adc
add
xor
test
sbb
aam
inc
mov
outsl
xor
mov
pop
scas
aam
ljmp
and
dec
push
sub
aas
cvttps2pi
push
imul
lcall
int
sub
inc
fisubrs
adc
xor
out
dec
or
das
dec
loop
cld
push
outsb
ficoml
loop
mov
aam
xor
enter
test
push
pushf
push
mov
inc
xchg
movsl
jno
mov
pop
in
push
adc
fisttps
movsl
jbe
push
add
je
cmp
mov
mov
leave
cmp
mov
mov
mov
adc
cmpsb
lcall
jge
pop
and
xchg
scas
add
mov
push
jo
lret
mov
dec
xor
dec
inc
xorb
cltd
push
dec
and
fdiv
push
cmp
adc
sbb
xlat
aam
in
cli
insl
popf
xchg
and
push
cmp
dec
icebp
mov
dec
add
cld
jb
aad
fnstenv
lcall
mov
orl
mov
push
lea
inc
scas
push
mov
xlat
lea
add
cmp
pop
or
and
imul
shr
fstl
mov
das
or
cmp
sahf
pop
jnp
mov
hlt
lds
mov
aas
ljmp
xchg
pop
scas
sahf
xchg
addr16
fsubp
repz
pushf
out
jmp
or
push
mov
ret
test
mov
mov
movsb
jno
jae
clc
xorl
push
mov
pop
jle
stos
ljmp
adc
xchg
cmc
inc
cmp
sbb
es
cmp
mov
dec
cmpsl
fisubrl
shl
test
sbb
mov
adc
push
inc
dec
push
mov
and
das
dec
cmp
fs
or
mov
test
imul
out
cmp
loop
std
sbb
mov
push
lcall
fmull
mov
loop
cmp
cld
mov
mov
hlt
add
daa
cmp
lods
into
test
cmc
rcll
test
push
and
xor
subl
dec
mov
push
rcrl
add
mov
roll
sbb
add
movb
pop
sarl
cmp
out
mov
aas
out
mov
xor
das
inc
or
mov
mov
test
and
and
and
adc
cmpsl
or
movsb
js
stos
sub
stc
icebp
ljmp
mov
dec
incb
and
mov
push
loope
push
mov
mov
mov
mov
mov
mov
fildll
or
push
test
push
xchg
andb
mov
ljmp
inc
mov
loopne
loop
xchg
mov
test
xchg
mov
movsb
pop
hlt
mov
inc
xchg
sbb
repz
or
fadd
pushf
int
data16
fdivrs
je
std
mov
iret
out
inc
push
mov
es
xchg
adcl
sbb
mov
adc
pop
mov
pop
push
out
and
scas
cmpsb
out
lret
cmp
xchg
jl
xor
rolb
push
sub
shll
out
xchg
jo
mov
jmp
pushf
or
outsl
iret
or
sub
push
mov
test
and
aam
pop
adc
inc
pop
and
testb
lea
incb
arpl
enter
dec
inc
in
lds
roll
js
adc
add
add
xchg
popw
js
loopne
mov
sub
or
push
push
call
adc
dec
imul
test
shll
dec
in
inc
add
js
push
movl
stc
inc
les
stc
push
leave
mov
mov
pop
jae
mov
enter
inc
les
inc
js
push
movsl
out
adc
add
enter
scas
xchg
loop
test
jl,pn
mov
testb
outsl
mov
mov
push
xchg
mov
lret
aas
adc
push
aas
lret
or
scas
sub
or
fisubs
and
sub
out
xor
mov
jg
hlt
ds
mov
loopne
sub
insl
xchg
paddusb
push
mov
neg
lea
adc
in
xchg
xchg
xor
push
adc
pop
fstpl
xor
pop
dec
and
shl
mov
rolb
fidivl
inc
add
repz
fcmovu
in
sarb
lock
test
sub
adc
fs
pop
ret
movsb
test
scas
fsubl
mov
test
lock
cwtl
lret
push
gs
mov
sub
cmpsl
popa
pop
push
in
outsb
test
push
add
add
push
ljmp
loopne
mov
sub
xlat
jecxz
clc
fists
dec
mov
add
push
rorl
lahf
shrl
cltd
cltd
xchg
fnstenv
loopne
push
jg
sbb
ds
ds
popa
shl
xchg
sahf
jae
push
roll
inc
das
or
movsb
inc
xor
push
add
aad
mov
rolb
sub
stos
or
repnz
mov
jae
adc
adc
pop
ljmp
call
mov
and
ret
pop
jg
cmp
cmp
push
xor
xor
lret
addb
jg
lods
sbb
cs
push
xor
push
subb
mulb
gs
push
ret
movsl
pop
dec
jns
in
cmc
cwtl
in
dec
mov
and
js
outsl
push
mov
dec
mov
test
add
add
popa
add
sub
std
add
push
mov
and
dec
subb
jg
push
lods
push
outsb
adc
aas
scas
adc
hlt
fwait
stos
xor
outsb
or
push
ret
add
adc
insl
push
outsl
inc
ret
mov
pusha
xchg
xchg
in
xchg
xchg
inc
cs
mov
popf
xor
mov
add
pushf
sub
pop
aam
mov
scas
movsb
xchg
test
mov
mov
movsb
call
flds
pop
inc
ret
fbstp
ss
int
cmpsb
mov
out
sti
test
lds
subb
aas
jb
push
add
push
push
cmp
cmp
ret
rol
test
push
lahf
jle
int3
pop
lea
jmp
out
adc
mov
out
dec
out
jmp
nop
xchg
sub
rcl
mov
pop
icebp
cmp
mov
mov
adc
fst
pop
dec
pop
bound
mov
iret
jnp
gs
shrl
loope
stos
arpl
loop
enter
mov
and
sahf
fiadds
stos
or
xchg
pop
cmp
lds
mov
inc
and
leave
cmpsb
fmull
fisubl
inc
sbb
rcll
or
or
push
push
xchg
cmpsb
or
cmp
sbb
push
aam
mov
fs
jecxz
xor
repz
sbb
shll
mov
pushf
rcrl
popl
adc
ficomps
movsl
sub
jnp
shr
popf
mov
inc
cmp
mov
sbb
jmp
pushf
xor
cmp
pusha
mov
cs
inc
cmc
adc
push
or
add
jmp
fimuls
xor
hlt
cli
cmp
int3
ret
ret
sbb
andl
popf
push
dec
fadds
int
mov
in
aad
les
fdiv
lret
or
addr16
sti
mov
test
mov
mov
lds
pop
sbb
cmpsb
jb
or
lahf
add
je
stos
lret
pushf
mov
xlat
cld
ljmp
out
hlt
cmp
sub
cli
mov
add
fildl
xlat
pop
or
imulb
cmp
sbb
sets
scas
js
out
pop
mov
sub
and
adc
xchg
js
mov
sub
pop
mov
or
sbb
jle
and
mull
shll
ja
stos
sub
out
jl
out
notl
jne
jno
stos
xor
nop
add
dec
mov
dec
push
mov
jg,pt
and
xchg
adc
aam
leave
cmp
sbb
fstpl
dec
sub
mov
mov
dec
lea
in
adc
and
pop
movsl
int
push
testb
loop
jg
roll
cmp
mov
push
aad
jnp
sahf
lods
testl
popa
xor
aam
xchg
fldenv
add
jo
int
cmpl
cmc
sahf
sbb
pusha
mov
fsts
or
mov
jno
loop
ljmp
fisubl
iret
shlb
mov
fildl
scas
bound
push
fadd
mov
dec
hlt
mov
xlat
stc
loopne
cltd
jmp
inc
and
pop
insb
jns,pt
adc
cmp
dec
repnz
cltd
test
cltd
pop
and
mov
push
call
fs
test
inc
outsl
icebp
inc
dec
outsl
jns
mov
aas
shlb
add
test
push
imul
cmpb
sbb
mov
test
les
pop
pusha
out
dec
cmpsl
cmp
jns
and
add
lret
and
aad
xchg
popf
mov
dec
iret
aas
cmp
mov
sub
aas
pop
clc
jecxz
dec
imul
cs
sbb
repz
xor
shll
pop
rcr
push
iret
pop
adc
mov
pop
scas
enter
push
into
dec
stc
pop
insl
add
ljmp
insl
jmp
dec
lret
or
aam
mov
arpl
dec
xchg
xlat
mov
push
aas
adc
sbb
test
mov
push
add
ds
fcmovnu
dec
jmp
aas
push
mov
jl
sub
mov
mov
pop
shl
iret
rcl
inc
or
rclb
adc
dec
sub
cmpsb
negb
icebp
insb
sub
fwait
pop
psubsb
cmp
popf
lret
sbb
push
mov
jg
aaa
cltd
aam
inc
lahf
stos
add
adc
inc
aam
sbb
shlb
test
int
push
add
loop
pop
jle
sub
inc
les
stc
add
mov
or
mov
sbb
sub
mov
lea
jecxz
inc
adc
mov
cmpb
jno
or
sub
in
cwtl
inc
xchg
js
subl
mov
cwtl
in
sbb
xchg
add
fs
and
data16
or
mov
aas
cltd
cmp
leave
jecxz
or
in
les
out
in
call
mov
rolb
cli
xor
test
lret
fdivrl
pcmpgtw
imul
jge
inc
stos
cmp
pop
jns
bound
adc
lahf
cmp
xchg
xor
in
adc
rep
dec
mov
das
fcmovbe
idiv
pop
js
pop
xchg
cmpsl
or
je
jbe
and
in
shlb
mov
or
mov
mov
dec
loop
cmp
in
cmp
mov
ja
inc
push
dec
mov
inc
pop
sbb
scas
dec
jl
sbb
push
jge
sbb
jl
inc
scas
push
sti
call
cmpsl
jmp
stos
push
test
push
lods
inc
lds
xchg
jmp
and
mov
ljmp
nop
cmp
xchg
mov
inc
fisubrs
jge
in
mov
in
jno
cmp
cmp
pop
adc
dec
int3
insb
or
ret
xchg
or
lods
push
xchg
xchg
in
outsb
mov
mov
dec
ja
pop
in
das
fincstp
or
outsb
push
and
fisttps
cld
test
pusha
movsl
ja
inc
nop
dec
jo
lcall
jb
xchg
movsb
or
flds
or
pop
push
mov
jecxz
scas
outsb
pop
mov
sbb
sbb
jae
aam
cltd
arpl
pop
inc
std
cmp
inc
mov
stos
cmp
test
scas
push
mov
mov
and
mov
pop
icebp
xchg
mov
and
xchg
push
pusha
sbb
test
and
mov
hlt
jg
enter
je
xchg
dec
push
shlb
cmp
sbb
push
js
in
and
aam
mov
test
or
xchg
arpl
push
mov
mov
and
addr16
mov
dec
mov
daa
cmp
lahf
pop
insl
faddp
test
aaa
dec
mov
std
shrl
lods
jnp
ljmp
call
jecxz
inc
jnp
aaa
lcall
jne
lea
jno
imul
xor
mov
push
sub
cmc
gs
rolb
xchg
mov
test
mov
pop
cwtl
push
jg
inc
cmp
aaa
cmp
mov
out
xor
mov
mov
repnz
sahf
sbb
cmp
lods
jl
ficomps
and
mov
or
fcoml
repnz
movsl
and
jns
jmp
mov
arpl
pusha
sbb
loopne
pop
dec
xor
and
out
mov
fcoml
in
pop
into
xor
push
mov
aaa
stc
sbb
pop
arpl
and
sub
pop
fsubs
popf
inc
aad
sub
pushf
cmp
fwait
mov
or
xchg
shlb
sub
es
stos
push
ja
int
pop
push
aas
lock
movsb
add
adc
cmp
sti
imul
push
xchg
jo
je
adc
cmpsb
dec
subb
mov
jno
or
push
or
pop
xor
scas
aaa
push
repz
mov
inc
mov
jmp
sub
mov
rorb
jbe
push
out
xor
imul
daa
cmp
enter
outsb
xchg
out
lahf
movsl
mov
pop
enter
aas
iret
jp
aad
insb
movsl
rolb
pop
dec
sbb
sub
push
fsubrl
xchg
sub
sbb
adc
bnd
ds
add
inc
test
push
clc
in
divb
mov
pushf
jmp
sti
jecxz
push
test
lds
jno
lret
mov
aas
and
divb
mov
inc
sbb
call
ds
icebp
xor
pop
pop
std
mov
lcall
dec
and
sarb
push
push
repnz
fwait
inc
sub
sbb
xlat
mov
cltd
xchg
lds
pop
pop
lods
jmp
pop
scas
insb
pop
pop
rcll
jb
push
in
data16
mov
pushf
lods
ret
adc
cmp
icebp
push
pop
jmp
lods
popf
sarl
cmpsl
jp
lods
jle
out
dec
clc
andb
pop
sub
in
shll
lret
fldenv
xchg
iret
movsl
xor
mov
mov
dec
push
sbb
and
sub
fstpt
incb
or
mov
cltd
xor
int3
and
xor
push
sbb
sti
push
shlb
mov
jl
add
jge
pop
in
popf
xor
rclb
rorl
sbb
ljmp
adc
jne
push
dec
dec
loope
fdivrp
cmpl
jb
sar
fbstp
or
idivb
pop
adc
icebp
mov
enter
dec
lahf
pop
adcl
shll
jecxz
and
pop
test
inc
sub
ja
lahf
dec
aad
inc
add
jae
dec
or
inc
enter
sahf
sub
jg
mov
mov
aad
mov
cmp
adc
mov
add
pop
faddl
inc
sti
gs
mov
int3
repz
mov
ss
mov
mov
les
ss
ljmp
in
jo
pushf
push
les
int3
xchg
mov
mov
add
xlat
in
mov
mov
out
bound
les
cmp
pop
xchg
mov
sbb
xor
dec
push
mov
sarl
push
popa
inc
mov
and
std
int3
int
xor
add
mov
xchg
leave
sub
call
mov
jmp
mov
fimuls
cmp
jmp
movsl
cld
sbb
add
sbb
sub
push
out
loopne
and
sub
mov
cmp
out
dec
adc
out
xlat
push
mov
sbb
dec
mov
shlb
sbb
or
movsb
mov
add
push
xchg
dec
mov
push
in
inc
inc
in
mov
fwait
sub
addr16
dec
xlat
imul
hlt
sbbb
scas
pop
mov
mov
lds
pop
dec
les
lock
pop
scas
pop
xor
data16
ficoms
xchg
punpckldq
xor
std
sbbl
arpl
mov
testb
rorb
mov
inc
daa
jl
push
mulb
jb
outsl
scas
mov
popf
std
add
pusha
mov
jo
push
push
sahf
daa
or
mov
pop
sub
push
cmovg
xchg
repz
cmp
jae
and
test
or
push
mov
fiadds
pop
sbb
icebp
sbb
sub
out
icebp
enter
mov
xor
shrb
push
movsl
fmull
sbb
adc
push
stos
push
movsl
inc
cmpsl
push
cmpsb
mov
jo
les
test
dec
xor
cltd
push
clc
fsts
mov
iret
dec
insl
ret
push
or
movsb
mov
push
aam
push
jo
in
fldcw
cs
jl
jns
xor
ljmp
lods
jg
and
adc
sub
push
jl
lahf
add
lret
add
xor
jmp
into
daa
cmp
fistl
pop
pop
scas
adc
jno
pushf
sbb
jp
in
add
insb
sub
or
ja
sub
add
ret
mov
pop
jl
push
in
push
inc
push
sbb
nop
out
and
push
mov
popf
repnz
mov
jb
scas
int
nop
stc
data16
ret
imul
xor
sub
pop
aaa
xlat
sbb
pushf
outsl
inc
cmp
stc
push
and
add
fisubrl
inc
call
aam
jbe
cld
mov
pop
imul
sub
loopne
rorl
sbb
test
lcall
call
shl
out
pop
mov
sbb
sahf
ljmp
fmull
xchg
js
pop
jo
and
pop
stos
sbb
cmp
in
out
mov
push
and
int
push
push
xchg
cwtl
sub
and
mov
rorl
mov
and
mov
mov
dec
inc
pop
aad
aaa
xor
repz
sbb
sbb
rolb
in
arpl
repz
out
cmp
imul
filds
jnp
or
js
xchg
xchg
cmpsl
scas
sahf
icebp
mov
lods
and
das
in
sti
mov
ret
loope
lds
or
pop
jle
sub
es
push
mov
pop
add
inc
ds
repnz
mov
jmp
lods
lret
or
daa
mov
and
lock
test
mov
pop
add
scas
dec
push
pop
mov
jg
xorl
aas
in
adc
jecxz
fdivl
cs
adc
inc
sar
bts
sahf
jne
js
xchg
add
lret
xchg
jo
mov
jne
leave
movups
loopne
xchg
je
dec
stos
testl
inc
cmp
mov
iret
cmp
aas
push
jb
pop
add
mov
cmp
adc
xchg
add
lahf
out
pop
cltd
lock
mov
inc
popf
loope
cmp
xor
roll
mov
cli
icebp
jo
adc
jmp
inc
outsl
push
outsb
sub
aam
push
push
xlat
mov
jp
repz
pop
add
or
xor
or
popf
push
imul
push
daa
mov
and
cmpsb
sub
outsl
inc
dec
pusha
mov
test
bound
pop
jbe
jmp
hlt
movsl
xchg
lea
sarl
orl
aad
cld
mov
stc
fs
cld
aaa
addr16
or
sub
mov
inc
bnd
mov
adc
xor
add
imul
jns
scas
add
inc
push
lret
xor
or
call
gs
out
out
pop
push
test
outsl
pop
cmpsb
jns
lret
inc
or
add
scas
fidivrs
hlt
mov
xchg
scas
pop
cmp
pop
inc
int
mov
iret
mov
mov
aas
adc
movsb
xlat
mov
mov
scas
adc
mov
or
fcmovu
push
mov
das
jmp
xor
cmp
adc
cs
sub
sbb
insl
lods
mull
mov
dec
loope
shll
movsl
outsl
inc
add
push
mov
fadds
jno
js
fs
mov
sub
cmp
shrb
incb
sbb
or
and
rcrb
lret
arpl
fidivl
and
shlb
dec
lods
cmp
mov
lds
imul
lret
pop
lret
or
add
roll
lret
push
inc
iret
cmp
xchg
lea
call
jmp
sahf
lods
out
in
lcall
pop
mov
lea
cmpb
xorb
adc
sub
mov
mov
and
shr
adc
lods
js
loop
dec
fstl
loopne
data16
jle
pop
sub
dec
out
cmp
sub
mov
cmp
lock
sahf
pop
cmpsb
xchg
sub
mov
dec
jmp
cmpsl
leave
ja
jne
mov
xor
insw
mov
sbb
xor
loope
xchg
insb
mov
fsubrl
dec
and
enter
mov
push
out
and
xchg
adc
xchg
mov
mov
xchg
stos
xor
mov
push
aas
pop
ret
xor
lock
dec
mov
or
sub
push
clc
rorl
dec
xorb
cmp
dec
add
int
push
dec
sahf
mov
sti
jae
clc
loop
push
or
das
rcrl
mov
add
mov
ljmp
lret
mov
adc
mov
and
inc
pop
sub
mov
xchg
lds
sbb
in
xchg
sub
inc
xchg
sbb
mov
mov
imul
jmp
push
mov
and
rolb
mov
sarb
xchg
dec
xchg
in
ror
xor
into
std
and
shl
inc
out
xchg
or
inc
pop
mov
lret
xor
lea
cmp
rclb
push
add
dec
int3
les
cwtl
daa
dec
call
pusha
sbb
sbb
pop
or
push
mov
push
leave
movsb
and
fiadds
dec
xlat
jge
push
std
push
and
mov
pop
ret
or
ret
rcrl
scas
or
imul
cwtl
mov
jmp
push
bound
adc
dec
out
test
mov
test
lods
fildl
or
mov
cmp
sbb
inc
lcall
test
loope
pop
daa
pop
fsub
das
cmp
int
and
adc
mov
push
jmp
push
test
push
xchg
insl
cmpsl
xchg
or
test
js
dec
xor
mov
mov
xchg
les
fsubrs
push
leave
outsl
cmp
pop
hlt
gs
ret
push
pop
bound
mov
jmp
sbb
inc
cwtl
mov
mov
xchg
mov
or
scas
pop
idiv
sub
pop
pop
fwait
scas
lods
sub
inc
imul
dec
adc
sub
sub
out
ljmp
lret
call
inc
nop
adc
mov
adc
sarl
hlt
or
sbb
cmp
into
mov
sti
mov
adc
lahf
push
rol
mov
mov
mov
test
fdivr
cmpsl
sbb
dec
xchg
jb
mov
test
std
mov
push
xor
cmpsl
addl
xchg
test
pop
and
sbb
int3
aam
mov
lret
es
jne
or
pop
movsl
mov
cld
xor
lea
pushf
mov
xchg
aam
jg
sub
and
sbb
jecxz
rcrb
std
mov
pop
mov
ss
jo
mov
cltd
fdivr
add
dec
out
xor
push
movsl
fmuls
insl
mov
jne
lcall
adc
xchg
stos
fldcw
sahf
insl
cs
xchg
fisubrs
inc
test
out
mov
jo
sbb
or
mov
or
or
out
int
ret
pop
scas
xor
stc
sahf
mov
addr16
mov
hlt
frstpm(287
and
icebp
adc
jae
push
pusha
cmp
out
loop
inc
mov
jl
add
pop
mov
jecxz
jmp
and
test
mov
cmp
cmc
insl
and
push
popf
push
shr
cmpsb
dec
shlb
jp
add
push
fwait
jns
mov
cmp
adc
nop
pop
lods
les
and
cmpsb
jns
sub
out
stos
adc
sub
dec
push
jae
add
sub
add
mov
scas
or
pop
pop
insl
mov
mov
jne
addr16
xchg
mov
cmp
test
adc
mov
xchg
mov
repnz
sbb
shl
adc
inc
pop
leave
mov
pop
pop
xchg
xchg
jo
mov
scas
sbb
inc
out
push
jl
incb
test
adc
imul
push
cmc
roll
lcall
adc
cmp
jge
add
cmp
mov
aaa
adc
dec
mov
and
cmpsb
push
jo
imul
jae
mov
sbb
pop
mov
add
adcb
add
adc
jl
xorl
mov
pminsw
xchg
jb
mov
sub
jnp
jecxz
adcb
sub
xor
fst
aas
repz
push
adc
leave
or
decb
imul
cltd
adc
xchg
cwtl
sbb
stc
or
or
adc
or
jl
jp
dec
stos
bound
cmp
notl
nop
jl
jp
pop
fs
pop
jecxz
loop
out
pop
push
jno
imul
mov
cmp
sbb
dec
xchg
add
jp
into
cmp
inc
cld
jnp
insb
inc
mov
mov
sub
stos
notb
fadds
cmp
sub
push
jl,pt
pop
fsubrl
iret
test
jmp
repnz
xor
jbe
sbb
dec
add
iret
inc
cli
pusha
jl
outsl
fs
cmp
jnp
hlt
in
and
ja
pop
mov
sub
sti
mov
pop
jmp
dec
adc
orb
js
in
lds
imul
sbb
or
ret
xchg
add
dec
xchg
xchg
mov
inc
jno
jno
jno
daa
lock
dec
not
sbb
jbe
fmuls
shll
add
sub
mov
cmp
sub
sbb
xchg
test
sbb
xor
sbb
in
dec
stc
insl
push
pop
cmpsb
lahf
in
mov
enter
or
in
cmpsb
jle
icebp
scas
sbb
stc
dec
mov
lret
jle
negl
pop
sarl
nop
sbb
add
mov
mov
pop
shlb
jo
loope
add
xchg
dec
iret
outsl
adc
fildll
mov
repz
jecxz
mov
shrb
shlb
sbb
adc
cmp
add
insb
jp
sbb
arpl
push
pop
fs
ret
or
aas
mov
xchg
int
test
mov
gs
clc
add
xor
out
int3
or
aaa
cmp
rcrl
insl
xorb
cmp
pop
xchg
inc
dec
push
icebp
repnz
and
xchg
cmpsl
dec
xchg
sbb
in
mov
adc
out
jo
gs
arpl
push
aaa
mov
pop
mov
mov
out
rol
in
cmp
ret
push
pop
call
rorl
jmp
ret
add
lods
mov
sbbl
jmp
fisubrl
in
pop
xchg
pop
lods
test
jl
or
in
cwtl
mov
imul
jno
xlat
cltd
int
xor
adc
cmp
ret
roll
mov
jns
jne
add
xchg
testl
sahf
nop
mov
stos
das
bound
lods
test
sub
mov
imul
xchg
in
cmpl
mov
mov
adc
push
xchg
fwait
in
dec
inc
mov
xor
pop
call
xchg
aaa
mov
pop
sti
loopne
mov
test
pop
je
push
or
sub
cmpsl
inc
and
inc
mov
divb
and
mov
arpl
mov
dec
adc
pop
std
addl
int
out
sub
jmp
add
rorb
les
xchg
push
jge
mov
les
sub
fwait
js
pop
sti
pop
jmp
outsb
in
sbb
arpl
mov
push
mulb
sub
xchg
inc
cs
std
cmp
pop
sub
imul
stos
movsb
sbb
loop
mov
scas
xchg
or
pushf
mov
xorl
mov
jmp
pop
stos
mov
idiv
ret
adc
jp
mov
mov
sub
inc
pop
push
mov
mov
jne
sub
repnz
mov
xorl
fldl
outsb
sub
arpl
pop
lds
das
gs
sbb
jmp
lret
adc
mul
push
lret
jo
inc
pop
xchg
lods
cmpb
cld
sbbl
mov
ret
dec
mov
lock
xor
movsl
jmp
stos
ret
arpl
push
mov
xor
sbb
movsl
push
stos
and
adc
mov
je
cli
inc
push
mov
ja,pt
or
dec
lret
fnsave
inc
hlt
dec
or
mov
gs
repnz
fcomps
insl
pop
test
fdecstp
std
push
rclb
mov
stos
xchg
sub
mov
xchg
adc
push
pop
sti
pop
int3
popf
into
mov
fstps
dec
xchg
dec
inc
lret
add
fistps
mov
out
cmp
loop
aas
mov
daa
cmp
inc
adc
rol
lods
push
xor
mov
xor
sbb
mov
in
xchg
aas
cmp
es
dec
add
imul
or
lret
push
cli
xchg
or
aas
sub
lahf
dec
fisttps
stos
cmp
xchg
lds
in
pop
sub
dec
mov
inc
ja
out
ja
jg
lea
stos
mov
lods
pop
sti
mov
cltd
lret
jmp
aam
add
inc
nop
dec
or
fs
and
jne
jp
clc
hlt
loope
mov
and
scas
push
pushf
repz
cmp
push
mov
mov
out
mov
add
test
pop
addl
dec
mov
std
jo
pop
jp
xchg
iret
xchg
inc
stos
out
outsl
mov
add
fdivrs
dec
push
fcompl
mov
dec
sarb
sbb
inc
daa
sbbb
ljmp
push
ss
push
mov
sbb
push
mov
inc
out
pop
cwtl
mov
pop
cmp
push
adcl
cmp
std
popf
lret
insl
jmp
test
fisubl
test
out
sub
and
push
push
adc
cltd
loopne
xchg
and
and
jne
inc
ret
xlat
jl
push
pusha
add
push
aaa
call
push
pop
push
xchg
jne
mov
mov
and
orl
aas
lcall
xlat
push
cltd
es
aas
mov
xchg
out
aad
jae
push
aaa
stos
jne
fistpll
out
dec
sub
xchg
push
xchg
pop
mov
sbb
inc
dec
stc
sub
and
xchg
xchg
icebp
mov
xor
mov
inc
sbb
js
xchg
dec
xchg
adc
mov
movsb
gs
es
call
pop
sbb
xchg
lea
rcll
insb
int3
ds
adc
add
outsb
int3
or
push
data16
repz
cmp
jae
xor
sahf
push
rcrl
js
fisttpl
test
xor
lds
or
out
cli
repz
int3
popf
rol
add
loope
enter
sub
xchg
dec
lcall
xchg
mov
mov
lahf
aad
and
sub
pushf
fcomps
mov
roll
movsl
push
mov
cmp
sti
mov
sub
ds
movsl
add
jmp
mov
adc
test
mov
mov
sub
sub
jb
sbb
mov
jmp
or
adc
aam
or
mov
jnp
pop
xor
scas
jbe
xchg
pop
push
mov
mov
adc
cmp
mov
inc
rorl
xor
es
mov
out
mov
test
cmp
shlb
in
jecxz
xchg
shrb
cmpsl
inc
in
jae
arpl
mov
mov
out
xchg
loopne
add
addr16
or
popf
xchg
jecxz
mov
sbb
jae
aam
enter
into
shrb
mov
dec
jno
cmpsl
mov
inc
cltd
negb
push
fdivl
cmp
adc
mov
pop
pop
pop
fcomps
popa
dec
add
sub
jl
lret
add
inc
dec
push
or
call
scas
or
roll
imul
dec
push
jle
mov
adc
cmp
movsl
mov
cmpsl
ja
out
imul
adc
sahf
lock
push
sub
into
sbb
aam
cltd
sbb
xchg
xor
fnstcw
ret
inc
add
jp
cld
repz
divb
addr16
lods
iret
xor
push
sub
pop
inc
lods
jge
insl
or
cmpsl
mov
test
jmp
in
andb
shll
pop
iret
adc
pop
fcoml
push
mov
aas
add
dec
or
es
cltd
sbb
aas
mov
icebp
sbb
outsb
inc
push
add
mov
jnp
adc
cmp
sbb
loope
adc
pop
xor
in
push
xchg
fdivrl
in
inc
clc
mov
mov
dec
mov
icebp
cmpsl
xor
ds
sub
push
inc
pop
lret
sbb
jo
daa
pushf
dec
mov
or
jnp
cmp
cmp
test
or
mov
sbb
sbb
faddl
sti
imul
inc
mov
fstl
int3
sbb
in
push
push
in
stos
fnstsw
jb
sbb
daa
loope
jl
mov
jno
jo
dec
add
jae
adc
inc
out
adc
movsl
mov
ficoms
je
xor
xchg
sub
cmp
rclb
pop
pop
jmp
psllw
orb
out
rcl
stos
mov
or
add
fists
cmp
jae
mov
scas
aaa
and
fs
lods
lock
fwait
sub
fwait
pop
gs
and
inc
mov
addb
dec
mov
jo
xor
sub
out
pop
lds
fiaddl
fdivp
push
and
xor
mov
outsl
mov
push
mov
sbb
mov
or
adc
cli
cwtl
loop
test
popa
icebp
add
cld
and
mov
xor
or
lds
daa
jb
cltd
loopne
inc
mov
push
cli
cmp
es
mov
mov
in
lds
ret
pop
add
mov
sub
test
mov
fwait
xor
inc
mov
sub
imull
adc
imul
lahf
push
push
pop
shll
stc
test
lret
mov
mov
jo
fwait
mov
jp
xlat
in
inc
xchg
inc
inc
test
pop
ret
jo
aam
lcall
icebp
test
or
in
aas
stc
xchg
adc
push
adc
leave
aaa
push
xchg
cwtl
and
xchg
lock
scas
insl
sahf
mov
mov
es
daa
xchg
sbb
push
and
addl
shll
add
inc
sbb
incb
xchg
jnp
xchg
push
xor
pusha
xor
push
dec
nop
inc
dec
ja
adc
or
fdivl
push
loopne
pop
aad
and
or
mov
xor
sbb
xchg
jo
dec
ja
popf
sbb
out
cmpsb
in
dec
daa
push
fstpt
xchg
pop
ret
test
mov
sbbb
adcl
push
fs
insb
push
rclb
cwtl
xchg
push
jnp
idivl
jnp
push
stos
mov
xchg
mov
inc
and
mov
sbb
xor
jmp
sub
push
fiaddl
mov
jb
lcall
mov
push
mov
lods
mov
jg
test
loopne
jp
push
arpl
sarl
cli
ljmp
mov
int3
sahf
inc
pop
outsl
cmp
cmp
mov
add
add
sti
aam
out
std
sbb
sub
inc
fsubs
mov
lret
aas
ljmp
cwtl
pop
mov
lds
or
push
insl
pushf
pop
cmp
jge
push
push
pop
add
std
xchg
sbb
fs
insl
les
mov
leave
xlat
sub
adc
pop
jno
daa
adc
in
into
jns
pop
ja
out
cmp
bound
mov
xchg
clc
enter
pop
mov
dec
jne
dec
stos
int3
adc
and
lock
mov
and
fistps
sbb
xchg
add
sub
or
cmp
loop
cmp
shll
cld
mov
out
adc
or
and
fiadds
loop
arpl
cmp
stos
jle
test
orb
aad
xor
insb
jae
mov
push
icebp
lods
je
and
xor
std
xchg
xchg
dec
dec
push
xchg
push
hlt
dec
pop
inc
out
or
add
jbe
insb
in
fcompl
push
les
cwtl
aam
or
mov
mov
in
cmpsb
popaw
movsl
popa
cmp
push
fstpt
lret
dec
mov
add
mov
hlt
negb
xor
insl
push
jne
xlat
sub
cmc
mov
add
out
push
fdivs
pop
and
lea
xor
lods
xchg
or
pop
xchg
bound
xchg
xor
dec
and
out
ja
push
pop
cmp
inc
fnclex
test
pop
push
orb
mov
shll
in
in
dec
rclb
adc
jle
mov
scas
jnp
mov
or
std
xchg
jbe
mov
les
pop
rcrb
jge
push
sbb
gs
jle
pop
xor
loop
xchg
jmp
xchg
aam
cs
mov
ljmp
adc
inc
jb
jns
jl
sbb
repz
movsb
lcall
iret
or
gs
pop
add
inc
mov
cmp
add
repnz
mov
push
push
iret
adc
lret
out
sbb
jl
jg
and
add
mov
int3
fiadds
mov
or
jmp
lret
sbb
push
jno
punpcklwd
push
xor
adc
inc
int
mov
sub
lds
dec
andb
mov
cmp
repnz
das
imul
xchg
push
and
psraw
xor
insl
lods
lods
push
sub
cltd
pop
test
jp
and
mov
mov
cwtl
add
adc
sub
sbb
aam
fstp
aad
or
out
bound
cmpb
stos
or
sub
sub
and
subl
push
dec
dec
sbb
aaa
jmp
xchg
pusha
push
mov
lock
ret
insb
cmpsb
pop
jno
outsl
jmp
sbb
adcb
and
mov
jno
push
jg
xchg
add
mov
loope
movsl
into
mov
in
mov
ljmp
dec
xor
push
sub
cld
stc
into
inc
and
mov
sbb
fsubrl
iret
pop
jecxz
xchg
or
mov
arpl
xchg
add
push
add
mov
sbb
inc
pop
mov
mov
adc
call
aad
push
sub
sbb
push
cltd
jle
mov
mov
hlt
inc
xchg
cmpb
xchg
push
shrb
cmpsb
add
push
pop
sub
sub
jmp
enter
je
les
mov
mov
mov
adc
and
shlb
std
orl
fisttpl
out
in
pop
aad
dec
aam
insb
add
xchg
aam
push
jae
add
or
cwtl
outsl
dec
jne
xchg
pop
gs
orl
fdivl
cltd
lcall
out
aad
jbe
xchg
mov
andl
movsb
roll
ror
arpl
mov
imul
in
inc
sub
add
cmpl
scas
jle
xor
or
inc
dec
mov
mov
leave
push
jge
je
inc
jne
imul
lods
sub
ljmp
push
ljmp
pop
xchg
lods
psubq
enter
xchg
xlat
daa
jmp
dec
dec
or
out
cmpsl
sub
mov
mov
add
pop
icebp
dec
ret
push
sbb
loopne
mov
lods
fwait
sbb
mov
jns
jle
ret
pop
sbb
mov
sti
xchg
cs
mov
pop
xchg
cmp
inc
mov
pop
movsl
popa
xchg
jle
push
outsl
int3
popa
or
dec
mov
sub
outsb
push
cmp
push
fcomi
aad
int3
out
dec
adc
push
xchg
sti
mov
jmp
jbe
icebp
fisubrs
lret
mov
enter
cs
loop
mov
stos
mov
cmp
arpl
stos
cli
nop
xchg
nop
adc
std
xchg
pop
imul
pusha
push
movsl
lahf
mov
or
mov
cltd
or
shr
xor
arpl
xchg
jecxz
mov
jno
mov
insl
mov
leave
xchg
adc
in
addr16
xor
lds
popa
adc
mov
cmp
add
or
lret
sub
nop
inc
scas
xor
mov
mov
imull
xchg
xor
jecxz
lcall
push
fnstsw
mov
pop
lcall
pop
movb
out
shrb
ds
jecxz
mov
sub
ret
fidivs
scas
jno
lock
divb
jae
lock
ffreep
lret
in
push
mov
push
pop
test
adc
mov
sahf
clc
inc
mov
incl
dec
pop
aaa
fimull
xor
int3
sub
xlat
xchg
push
xor
in
pop
cmp
push
ja
ljmp
mov
cmpsl
adc
dec
ljmp
std
xlat
xorl
jmp
xchg
dec
stos
cld
inc
daa
mov
cmp
xor
or
cmc
cmpb
sbb
loopne
dec
lods
stos
cmpb
outsl
jle
aaa
mov
mov
test
cld
mov
mov
jecxz
xor
cmpsl
cmpsl
movsb
jp
pop
cmpsl
sbb
pop
pop
sub
add
inc
das
or
bound
addb
push
loop
cmpsb
cmp
push
dec
movsl
and
jnp
idivl
insl
push
xchg
jb
pushf
popl
icebp
and
cltd
or
cmp
lcall
pop
mov
stos
mov
fsubs
sub
sahf
mov
lock
loope
les
or
cmp
mov
inc
cmp
insl
sub
pop
ljmp
insb
pop
cmp
cmp
mov
and
int
sub
mov
jle
test
out
jbe
inc
or
loopne
xor
fidivrs
test
xlat
pop
mov
mov
bound
pop
pop
popf
cmp
aad
scas
adc
inc
test
xlat
or
orb
into
insb
addr16
xor
adc
lret
add
das
pop
xchg
shl
cmp
gs
dec
push
xchg
inc
lods
roll
sbb
jb
push
fs
arpl
cmp
cmp
mov
xorb
push
in
add
dec
jmp
out
dec
mov
mov
jmp
jo
std
in
loop
sahf
shll
cld
or
loope
flds
xor
repz
ja
test
pop
and
mov
mov
push
add
fisttps
dec
or
in
jno
mov
cmp
push
rclb
cmpsb
add
or
dec
or
int3
rcll
mov
jmp
cmpb
cld
xchg
movsl
xor
dec
adc
xchg
loopne
cltd
mov
adc
cmp
sbb
addr16
mov
xchg
xchg
sbb
mov
inc
add
je
mov
add
fsts
pop
in
pop
push
sbb
fwait
in
bound
adc
or
jne
int3
stc
pop
xchg
inc
dec
xchg
lret
xchg
pop
adc
dec
lea
jmp
push
dec
cmp
jb
ret
int3
stos
aad
outsb
cmp
add
rcrb
loop
adcl
scas
ss
xchg
adc
aam
add
mov
push
xor
lock
enter
mov
xchg
push
inc
loop
sbb
pushl
stos
push
add
push
popf
push
add
adc
outsb
xchg
aam
js
adc
std
cwtl
leave
cmp
mov
aad
or
or
and
popl
ljmp
mov
push
dec
sub
sub
pop
mov
lahf
ret
mov
mov
and
mov
push
fisubrl
cmp
xlat
pop
xchg
pop
cmp
dec
push
ljmp
enter
pop
aas
stc
addr16
aaa
les
mul
sbb
test
xlat
jo
aas
fnsave
jnp
test
sub
jecxz
loope
inc
jne
inc
repnz
push
or
mov
js
push
rorb
inc
int3
or
jae
out
aaa
jmp
das
sbb
ror
and
jo
push
jcxz
jnp
fadd
dec
ret
inc
mov
mov
cld
jmp
fidivrl
sbb
jecxz
xchg
pop
mov
mov
and
aam
xor
xor
inc
jnp
lret
lds
xchg
or
das
add
jmp
mov
pop
adc
popl
mov
loop
dec
xchg
inc
pop
adc
adc
out
mov
dec
pop
and
xor
stos
cmpsl
roll
push
sub
mov
jg
int3
loope
xchg
into
add
pop
jb
push
jns
jl
jbe
insb
pop
shlb
mov
into
cs
ljmp
inc
ljmp
push
loope
aas
jg
aas
mov
adc
add
mov
jmp
add
xchg
mov
cwtl
pop
shll
add
mov
cmp
add
shl
cmp
push
pmulhuw
cs
adcl
jno
or
lods
pop
push
imul
lcall
mov
jg
jecxz
orl
fmuls
arpl
push
xorb
add
and
loop
imul
pop
nop
mov
jmp
push
mov
ja
jae
scas
xchg
popl
mov
push
into
std
jbe
mov
push
xor
jmp
into
dec
fs
loopne
int
arpl
adc
ja
ds
lds
jns
testb
idivl
fs
incb
in
push
jns
movsl
out
clc
andb
push
popf
sbb
sub
push
setl
lret
xor
sahf
mov
xor
sbb
mov
dec
push
ja
icebp
in
js
rcrb
fs
clc
xor
sbb
hlt
xor
lods
add
add
mov
in
xchg
xor
outsl
pusha
rcr
push
insl
inc
aam
arpl
mov
scas
lods
std
inc
mov
lea
dec
sub
cmp
les
inc
push
fldl
xchg
jp
cmpsb
fidivrl
mov
loopne
call
add
xor
jecxz
mov
testl
inc
xchg
mov
jo
lods
test
jmp
stc
pop
int
or
sbb
dec
dec
jns
shl
pop
push
and
lahf
xor
dec
add
jno
lret
jae
ret
loopne
fadds
and
lock
or
adc
fisttpl
lods
ss
fcomps
inc
pop
inc
sahf
lea
mov
fidivl
pushf
repz
adc
addr16
mov
ds
outsl
mov
mov
iret
int3
aaa
xchg
fldl
mov
jl
pop
out
push
cmp
test
lock
jge
js
and
rcrb
ss
scas
xor
dec
sub
fwait
mov
add
into
adc
push
scas
jnp
pop
push
cmp
loopne
je
xor
xor
or
mov
insb
pop
ss
fidivs
stos
aad
pop
push
in
and
sbb
inc
xor
mov
in
mov
xchg
jp
jnp
gs
stc
retw
jbe
add
stos
stc
fimuls
bound
cld
cwtl
push
xchg
push
sbb
jl
mov
jo
or
dec
adc
sub
or
rorl
orb
jnp
add
bound
test
xlat
fiaddl
and
out
inc
cli
add
addb
dec
mov
sbb
leave
inc
cmc
fmuls
into
arpl
int
xchg
mov
test
lods
add
shr
inc
cmp
lock
dec
cmp
outsl
lds
popa
xchg
pop
inc
popa
xor
es
ret
aas
jnp,pt
inc
dec
cmp
cmp
fcomps
jns
sub
and
add
sbb
mov
xlat
je
push
clc
aad
mov
in
add
sbb
decb
push
cmp
mov
jp
outsl
je
push
out
jg
imul
cli
dec
cltd
std
lea
rolb
sbb
int3
aad
adc
and
jno
testb
dec
and
xchg
ljmp
dec
jle
lahf
push
mov
cmp
leave
dec
jbe
sahf
aas
mov
lods
aam
mov
xchg
and
jecxz
mov
gs
jmp
mov
inc
add
add
add
lods
mov
je
push
jno
lods
fistl
addr16
and
xchg
fildl
jge
out
out
mov
inc
jae
adc
and
pop
push
mov
jmp
lret
mov
push
xor
jecxz
jge
in
roll
test
xor
push
daa
mov
adc
add
loopne
pushf
cmp
push
sti
jo
xchg
int3
leave
mov
scas
adc
mov
fwait
je
ljmp
mov
pop
out
xchg
cltd
std
les
jg
jecxz
loope
pop
inc
and
ja
repnz
xchg
bound
fistl
push
inc
push
bound
aam
ja
scas
xorl
mov
bound
xor
mov
roll
mov
and
mov
xor
loopne
repnz
inc
push
pop
sbb
dec
ja
movsl
pop
fwait
xor
lds
adc
test
push
iret
enter
sbb
mov
or
aas
icebp
std
ljmp
hlt
mov
cli
inc
jl
lahf
iret
arpl
mov
imul
cmp
sub
xchg
daa
adc
dec
jbe
mov
aas
add
dec
imul
jl
push
push
push
rol
push
test
push
push
fs
mov
mov
add
pop
dec
loop
out
insb
cmp
xchg
jge
or
fists
dec
fs
shrb
pop
sbbl
jmp
jnp
cmc
push
xchg
shlb
adc
or
decl
xchg
scas
mov
sub
arpl
aaa
and
inc
sbb
mov
inc
stc
mov
insb
dec
add
add
dec
pop
mov
and
adc
outsb
aad
jp
pop
ret
in
add
sub
xchg
js
dec
xchg
stos
push
in
in
sbb
lods
add
outsl
or
cmp
and
dec
lods
sbb
mov
cmpsb
push
shlb
adc
mov
or
mov
test
xor
add
arpl
mov
stos
cmp
pop
lods
fadds
add
pop
out
in
cmp
sub
add
mov
add
mov
dec
and
cli
cltd
fisubs
imul
fsubp
cmp
mov
ja
fsub
lcall
mov
stos
mov
lds
xor
mov
mov
out
mov
jo
call
ret
add
sar
scas
test
pop
cmp
js
out
and
cwtl
pop
ret
sahf
aas
xor
jae
fs
add
push
adc
inc
movsb
fcoms
mov
int
add
das
cmp
clc
popa
fsub
stos
imul
pop
int
lock
test
sub
mov
mov
lods
adc
lods
movsl
or
or
inc
mov
repnz
cmc
shrl
mov
ss
jecxz
rcrb
lods
in
roll
pop
jbe
and
push
sarb
inc
test
sarb
inc
jge
jp
inc
lock
add
in
movsb
cmpsb
jnp
es
bound
and
out
or
or
mov
mov
dec
mov
and
jle
imul
push
mov
pop
push
jns
xchg
jns
rcl
mov
inc
pop
fcomps
or
adc
movsb
or
enter
adc
or
xor
pop
adc
es
scas
cld
inc
icebp
cmc
addr16
lahf
jecxz
or
arpl
lret
cltd
push
mov
add
sub
mov
push
sub
leave
aas
push
sub
push
and
pushf
loop
aas
cld
cltd
mov
outsl
in
mov
mov
or
shl
mov
lods
mov
ss
xor
push
cwtl
stc
push
movsb
enter
pop
xchg
psubsw
sub
lock
pop
and
popa
push
mov
mov
push
sarl
dec
aaa
cmp
movsl
pushf
out
test
xor
push
cmpsl
shlb
or
pusha
aas
gs
ljmp
cld
nop
loopne
xchg
hlt
rol
or
jg
xchg
addb
and
xchg
imul
and
lock
add
or
lahf
outsb
test
fcmovnb
arpl
gs
scas
das
insl
push
movsl
inc
lcall
add
nop
xlat
inc
and
mov
adc
cmp
jno
mov
add
push
and
xchg
repz
add
push
xchg
jnp
and
xlat
lds
or
aas
lock
mov
inc
popa
inc
bound
fdivl
or
sbb
xchg
xor
in
rclb
sti
sbb
mov
adc
dec
or
les
les
sti
cs
or
adc
sub
xor
aam
inc
div
add
call
xchg
and
mov
pop
add
addr16
push
push
cld
in
push
inc
fisttpll
jns
jp
cltd
leave
cmp
xchg
cmpsl
repnz
sub
in
mov
adc
jmp
and
test
add
mov
cmc
xlat
mov
ret
mov
ja
lods
sub
lret
push
dec
pop
repnz
fldcw
leave
dec
loope
loopne
dec
jp
in
push
mov
roll
stc
orb
dec
das
enter
data16
cmp
mov
imul
adc
aam
adc
nop
cmp
cld
jmp
sbb
jno
adc
xchg
add
hlt
bound
cltd
xor
jle
rclb
push
aam
mov
xchg
pop
dec
fs
ds
stos
jne
pop
lods
mov
test
ret
popa
push
test
pop
mov
sub
jl
lods
imul
jp
in
jo
push
push
xor
xchg
cmpsb
inc
loope
xchg
outsl
and
or
imul
scas
add
push
xchg
popf
add
sbb
lods
and
scas
iret
adc
fxch
repz
lret
sub
pop
or
jns
lret
loop
fbld
cltd
adc
mov
pop
or
jae
pop
xchg
or
sbb
push
mov
pop
arpl
or
outsb
xlat
imul
das
aad
push
mov
lcall
in
out
pop
test
and
ret
xchg
scas
stos
mov
test
mov
movsl
inc
gs
sub
out
push
cmp
mov
lahf
cli
jl
imul
sbbb
inc
mov
repz
ljmp
sub
in
push
xchg
movsl
mov
or
fiaddl
lds
in
in
rol
cli
xor
inc
mov
sbb
cltd
scas
xchg
lret
jns
push
gs
pop
pop
leave
mov
dec
pop
loope
sbb
sbb
sarb
push
sub
push
adc
mov
cmc
cmp
loope
jmp
fildl
or
popf
xor
mov
sbb
mov
and
test
jbe
dec
cmpsb
xchg
dec
repz
stos
cwtl
xor
mov
sub
mov
shl
popf
xchg
mov
dec
movsb
test
inc
adc
push
lock
jb
in
jl
test
mov
mov
or
movsl
leave
das
test
add
adc
fwait
inc
adc
cmp
ret
inc
fmulp
push
and
fiaddl
movb
jo
insb
cmpsl
jne
aaa
mov
sti
roll
mov
shll
imul
sahf
aas
aaa
mov
add
nop
test
insb
push
or
aam
mov
enter
notl
push
orb
and
out
ret
jnp
sar
mov
lret
cmc
mov
sbb
xchg
cmp
jae
xchg
pop
sarb
push
test
orb
loopne
test
in
adc
inc
jne
int3
ss
xchg
jnp
pop
js
sbb
inc
out
or
js
ret
mov
scas
adc
sti
fsubs
lods
mov
cli
add
jp
sub
fildll
pop
jb
or
imul
stos
jne
aaa
xlat
adc
sub
insl
popf
lcall
loop
pop
cmpsl
data16
fsubr
xor
ret
in
aas
jbe
fs
mov
xchg
aad
in
pop
aad
into
mov
lods
mov
adc
ds
fdiv
cwtl
movsb
adc
adc
std
inc
ret
cmp
cltd
push
fldcw
test
ds
repz
aad
scas
icebp
aaa
gs
ljmp
idivl
hlt
jne
add
scas
mov
das
std
mov
imul
sub
loope
mov
fidivl
popa
inc
xchg
nop
bound
xchg
push
xchg
xor
test
xchg
inc
in
int3
ret
out
ret
stos
pop
outsl
xchg
push
and
movsl
es
and
sub
lret
jnp
test
xchg
roll
cmp
push
lret
jbe
jno
sub
pusha
jns
add
pop
jp
push
and
pop
cmp
push
or
fdivrp
mov
xchg
fnstenv
ret
cmp
or
das
pop
ret
sbb
dec
fwait
loop
out
mov
mov
mov
into
and
mov
push
push
cld
fdivrl
cs
mov
sbb
fcmovb
pop
inc
pusha
mov
out
out
pop
push
cld
jg
xchg
push
xchg
push
nop
sbb
ss
hlt
jns
jmp
mov
imul
in
testl
inc
sub
vpaddd
inc
jmp
pop
jne
push
and
mov
stos
dec
fwait
or
das
sbb
lahf
mov
push
inc
xchg
xchg
mov
ret
aad
mov
arpl
push
dec
bound
repnz
shlb
cld
fwait
push
ret
push
daa
inc
addr16
cmp
sub
push
dec
icebp
pusha
test
movsb
inc
test
cli
mov
lcall
aam
xchg
push
sahf
subl
mov
adc
dec
leave
sahf
push
push
popa
mov
rcr
lcall
sub
adc
mov
incl
inc
ret
shr
mov
xor
jge
jg
inc
in
in
repz
inc
push
mov
mov
mov
sbb
rolb
jo
jecxz
jg
test
jne
sbb
pop
cmp
adc
lock
sti
dec
inc
push
mov
roll
in
jbe
inc
cli
mov
mov
mov
jmp
and
dec
and
mov
lahf
xor
ret
repnz
call
inc
jns
dec
fcmovb
push
pop
cmc
shll
mov
les
adc
mov
vpsubq
loop
scas
scas
push
mov
inc
je
adc
adc
cmp
int3
loope
enter
ljmp
shll
nop
addl
adc
mov
jne
push
jmp
lods
lret
dec
addb
iret
inc
stos
push
pop
dec
xchg
sub
test
pusha
hlt
or
fcomi
or
sub
shll
mov
cmp
pusha
sbb
in
rcll
mov
sti
mov
sbb
shlb
pop
xor
sub
push
mov
or
lds
add
data16
mov
dec
xor
call
push
and
repnz
mov
lock
lods
mov
mov
outsl
stc
push
outsl
xor
out
movsl
fbstp
xor
insl
mov
add
repz
or
add
xchg
or
ja
mov
mov
pop
int3
popf
pop
repz
lahf
into
pop
cmpsl
dec
insb
mov
jle
mov
inc
xchg
xchg
sub
add
and
add
push
pop
daa
test
out
push
adc
or
inc
xchg
stc
cmp
pop
scas
pop
push
repnz
cmpsb
push
sub
mov
call
inc
sti
inc
mov
out
push
movsb
mov
lret
sub
push
into
push
loop
mov
mov
xor
inc
stos
mov
cs
or
mov
jge
jno
mov
scas
jae
popf
xchg
and
orl
xchg
xor
dec
iret
jne
xor
out
frstor
popa
loopne
dec
cli
jmp
fs
xchg
loop
rorb
fimull
mov
jns
jg
hlt
aas
sbb
or
int3
cmpsb
mov
push
nop
out
out
xchg
add
push
lahf
je
data16
addb
pushf
jns
mov
ret
jl
repz
inc
add
aad
mov
jns
ja
sbb
out
fwait
cmp
jae
dec
ljmp
cmp
pop
jmp
inc
push
jle
or
addb
imulb
js
gs
ljmp
jg
push
sub
fcompl
test
jo
jo
adc
lcall
mov
sub
push
mov
lcall
adc
cmpsl
jmp
mov
mov
test
iret
sbbl
js
in
push
fcoms
mov
xor
add
ret
mov
movl
repnz
xor
and
cmp
jns
sahf
dec
dec
ja
mov
daa
bnd
pusha
iret
stc
mov
pop
push
mov
xlat
in
add
fldl
xor
cld
and
mov
xchg
jae
ror
in
mov
loop
out
jns
loope
xchg
mov
addl
inc
xor
xor
xchg
or
inc
xlat
xchg
ret
fildl
ja
or
in
rcll
testb
sub
mov
inc
pop
xor
dec
iret
mov
shl
push
xchg
and
movl
ss
cmp
lcall
jns
adc
mov
repnz
cmpsl
mov
in
aam
jle
push
xchg
dec
cmpsb
cmpsl
repnz
shll
xor
lods
cmc
adc
lods
inc
mov
test
in
and
cmpsb
inc
inc
andl
stc
xchg
cmc
mov
pop
pop
jle
hlt
cmc
popf
push
xor
push
or
jnp
sahf
inc
dec
sahf
xchg
repnz
and
mov
dec
loop
dec
ljmp
enter
or
mov
sarb
daa
xor
mov
int
loope
mov
mov
and
into
nop
add
push
dec
pop
ja
mov
inc
add
xchg
inc
jg
xor
mov
pop
xor
cmp
enter
andb
add
sub
mov
pop
or
call
cmp
ja
xor
aad
adc
xchg
sti
popf
adc
bnd
jb
je
or
xchg
loop
imul
outsl
sub
cmp
stos
cmpsb
and
aaa
movsb
movsl
or
loop
int
or
mov
filds
sahf
adc
add
mov
insl
pushl
sub
jne
sbb
test
aas
data16
inc
mov
mov
push
outsb
xchg
in
jae
cwtl
decb
xchg
fcmovb
sbbl
sub
or
add
push
aas
jmp
cmp
jo
aaa
cld
pop
xor
push
xchg
xor
repnz
xchg
das
loop
and
inc
aad
mov
add
aaa
mov
and
xorl
adc
repz
aas
dec
cld
ja
pop
movsl
pop
js
insb
in
add
sarl
and
mov
dec
mov
pop
push
jecxz
sub
xchg
outsb
mov
mov
sbb
in
sbb
pop
je
adc
std
rcrl
ja
js
mov
scas
and
std
sub
sti
add
push
add
insl
pop
push
xlat
jnp
jmp
popa
push
jae
mov
popf
add
push
pop
clc
pop
int
cs
or
xor
ror
add
sub
mov
out
jge
mov
aam
ja
push
dec
cmp
mov
fwait
test
fimull
pop
clc
pusha
rclb
stos
cwtl
cmp
sub
aas
jl
push
loope
aam
jae
push
push
popf
gs
xchg
ficompl
popf
lea
mov
daa
sbb
das
sub
inc
adc
add
testl
pop
insb
out
icebp
loope
push
clc
add
aam
in
sub
cmp
xor
imul
fwait
clc
ficoms
in
ficoms
push
pop
ss
push
rcr
jo
ljmp
xor
inc
sahf
in
mov
adc
out
jbe
push
fnstcw
jge
test
or
or
arpl
xchg
aas
xchg
sarl
loopne
dec
dec
addr16
cmpsl
or
fsubp
push
mov
inc
cmp
xor
mov
test
roll
pop
xor
mov
ret
jge
data16
mov
xor
adc
je
lods
lret
int
sub
push
mov
adc
dec
cs
sbb
jne
or
mov
ror
mov
lret
inc
test
mov
add
pop
xor
mov
inc
add
rcrl
scas
popf
mov
pop
sub
pop
dec
leave
fbstp
xchg
scas
push
outsl
or
lcall
inc
insl
sub
in
sbb
inc
adc
repnz
sahf
mov
add
sbb
push
daa
dec
cli
or
pusha
pop
es
cmp
adc
fiadds
scas
andl
inc
mov
idivb
int3
ds
cmp
jecxz
stos
movzbl
sub
ja
mov
sahf
jl
or
inc
mov
pop
inc
js
mov
add
cmp
out
pushf
in
jg
xor
cmp
push
sub
mov
xor
mov
lret
ljmp
xchg
xor
xchg
push
cmovae
stos
insb
cmpsl
out
add
adcl
lock
pushf
pop
pop
out
ret
sbb
cmp
aad
push
out
inc
subl
inc
out
cmovbe
lahf
cltd
cli
add
jne
divb
push
jle
iret
fdiv
jo
mov
mov
dec
inc
ret
mov
leave
adc
jns
loope
shll
mov
mov
call
sub
clc
insb
jmp
imul
fidivs
pop
ret
stos
test
out
lcall
testl
dec
mov
sub
insb
sbbb
push
cmp
jmp
inc
popa
adc
adc
mov
inc
shl
and
pop
add
outsb
mov
loop
mov
ss
repz
jle
test
mov
into
mov
push
idivb
aad
rorb
push
stos
jmp
push
add
stos
out
aad
add
cmpsl
push
add
sub
cs
ljmp
test
fcmovbe
xchg
push
mov
cmp
push
neg
sbb
dec
inc
mov
xchg
pop
jae
push
lds
xchg
icebp
mov
sti
dec
pop
mov
push
shl
pop
or
rorl
in
xlat
sbb
test
adc
dec
sti
and
push
lods
lods
mov
xor
dec
jecxz
shlb
fucomip
mov
xor
xlat
sbb
rorl
seto
aam
xor
cmp
mov
jg
xor
inc
ljmp
fwait
and
push
sub
sbb
push
jmp
enter
es
mov
rclb
sbb
ss
leave
cmc
xor
pop
xchg
push
cmp
and
popa
aad
mov
jmp
mov
fldt
cmc
in
outsl
enter
sub
or
lds
fwait
outsl
outsb
aas
scas
sub
clc
aad
setge
or
and
sarb
push
push
xchg
and
shll
in
scas
fsubp
mov
lds
imul
sarl
add
lcall
test
and
js
ljmp
lods
adc
adcb
cmpsl
sub
out
cmp
stos
jp
push
xor
mov
xchg
in
inc
je
lock
pushf
imul
ljmp
fwait
push
inc
add
jnp
in
dec
rcll
imul
jmp
loope
les
jmp
adc
adc
dec
adc
push
and
and
xor
ds
sbb
lret
out
fdivs
sbb
pop
cmp
and
mov
push
xchg
out
push
js
xor
pop
mov
or
push
out
jecxz
aaa
mov
mov
stc
pop
imul
pop
mov
mov
cwtl
popa
mov
rclb
pop
adc
mov
aam
sub
into
imul
aaa
lret
dec
sbb
jae
push
loop
inc
sbb
imul
or
repnz
dec
ja
loope
andl
pop
in
mov
mov
or
lods
mov
aad
out
dec
push
popa
dec
int
loopne
push
ret
push
lds
push
fwait
jns
push
jg
mov
and
lods
loop
adc
inc
aas
and
mov
hlt
pop
hlt
arpl
sbb
fsubs
cmpsb
adcb
dec
setno
stos
dec
sti
jg
cmp
pusha
in
and
gs
xchg
add
push
mov
push
push
pop
xchg
inc
inc
in
cmp
inc
jns
or
xor
and
jo
movsl
pop
xchg
cwtl
pop
addr16
dec
add
and
inc
or
jmp
mov
jl
pop
mov
sub
mov
xrelease
repz
mov
clc
pusha
push
mov
sti
addb
jmp
sahf
push
cwtl
adc
pop
xor
popa
inc
in
push
fwait
inc
call
sub
std
push
cmp
add
dec
cmpl
inc
push
jp
cwtl
xchg
sbb
repnz
loop
test
xor
cld
fs
cmpsl
sub
addr16
cs
imul
or
movsb
aaa
and
fsubrl
movsb
cld
dec
fldl
adc
aam
and
mov
fsubr
or
lcall
xorl
xchg
push
movsl
cltd
int
jno
sahf
pop
mov
xchg
adc
push
inc
rol
out
mov
popf
and
xchg
scas
lock
aam
jae
push
movsl
les
call
sub
test
cmp
lods
xchg
cs
push
sbbl
or
out
bound
mov
mov
inc
adc
inc
push
pop
lret
inc
adc
in
movsb
xchg
aam
mov
or
mov
adc
pop
jns
sub
leave
mov
andb
adc
jns
inc
dec
jbe
stc
imul
inc
push
push
inc
imul
test
int
mov
xchg
dec
mov
push
gs
mov
dec
cltd
pusha
xchg
les
out
xchg
sti
dec
push
insl
push
insb
adc
in
outsl
xor
mov
lods
xchg
icebp
sbb
testl
sub
movsb
lock
mov
dec
test
jmp
shlb
jno
pop
add
mov
xchg
dec
test
xchg
shr
and
inc
cmp
fdivl
xchg
mov
xchg
jne
mov
lods
in
es
mov
imul
cmp
imul
lock
sub
lcall
xor
xchg
cmp
push
repz
add
lods
insl
xchg
push
scas
movsl
faddl
adc
xor
add
mov
jno
jnp
mov
sbbb
push
rorl
stos
pop
shl
pop
pop
lods
rolb
inc
fistl
xchg
jbe
xorb
mov
popa
jae
xor
subb
loope
jp
lret
lods
dec
and
mov
lods
cmp
cmpsl
mov
cmp
stos
mov
loopne
push
mov
inc
and
sub
dec
or
adc
sahf
frstor
fildl
enter
cli
stos
or
xchg
lds
in
cmp
leave
sti
rolb
sub
mov
mov
sti
inc
sbb
stc
testb
cli
or
jb
data16
adcl
adc
adc
pusha
pop
fdivrs
cmpsb
fadds
push
rorb
mov
dec
test
cmp
repnz
add
mov
rorb
adc
cltd
jno
rorl
push
das
pop
cmp
xor
jb
mov
int
xchg
inc
mov
jno
aaa
jmp
pop
fcompl
push
and
imul
sarb
shrl
loope
push
jno
rcll
mov
xor
sub
add
xlat
cmpsb
or
loopne
mov
mov
scas
aam
movsl
sub
sub
pop
fcom
orl
jg
adc
inc
mov
sbb
popf
xor
in
jecxz
sbb
mov
xchg
pop
std
xor
push
mov
sub
lea
jo
pop
xor
or
call
loop
and
push
xchg
xor
les
xchg
pop
pop
cmc
sub
jno
mov
push
fbld
push
aam
movsl
inc
cmp
mov
sub
nop
sbb
mov
mov
xchg
cmp
xor
mov
adc
mov
pop
and
sub
aad
xor
data16
icebp
bound
jmp
loopne
mov
push
fs
xor
fucomi
arpl
addr16
xchg
sbb
aaa
cmp
js
xor
or
push
mov
inc
cmp
outsl
and
sbb
stos
mov
mov
adc
imul
dec
inc
xor
xchg
mov
call
cmp
push
cmpsl
cli
ffree
add
add
test
ja
mov
lcall
mov
push
mov
xor
xor
lds
adc
inc
aas
dec
cmc
pop
mov
or
jle
bound
push
aad
imul
lahf
sbb
xor
pop
mov
mov
lcall
ret
leave
mov
push
fistps
loope
mov
push
sub
js
jne
out
adc
inc
adc
and
pusha
jmp
lock
in
mov
cmp
les
push
jle
xchg
lods
into
mov
test
mov
add
dec
mov
adc
or
sahf
and
jg
xchg
push
sbb
fsubrp
pop
xchg
testb
je
push
inc
mov
jp
sbb
aas
pop
in
jae
push
pop
mov
dec
or
cmpsl
filds
aaa
or
stc
or
cmp
jo
pop
inc
in
adc
sbb
adc
mov
push
jmp
sbb
cmp
ffree
xorl
lahf
into
decl
dec
push
addb
dec
mov
xor
hlt
sbb
xchg
out
mov
mov
cmp
ja
mov
pop
sub
cmp
ja
pusha
not
dec
pop
sbb
mov
mov
lds
pop
ss
adc
js
pop
jbe
sti
add
jnp
xchg
shll
and
sub
mov
fimuls
sub
stos
outsl
mov
fisubs
lods
xor
les
pushf
sub
xor
add
clc
iret
add
mov
gs
mov
scas
cs
mov
xchg
push
out
xchg
outsb
into
in
inc
lea
and
sbb
pushf
mov
std
lahf
fisttpl
dec
dec
lcall
jb
fcoms
add
or
add
ljmp
mov
or
clc
xchg
sbb
xchg
inc
mov
jle
punpcklbw
mov
lea
pcmpgtw
imul
mov
aam
pop
xor
je
cmp
xchg
mov
jne
push
mov
cld
or
jns
fdivrp
cmp
das
les
jp
push
push
add
add
push
fs
push
pushf
adc
dec
inc
cmp
loopne
pop
std
inc
mov
rol
inc
pusha
mov
push
push
mov
mov
sub
hlt
addr16
mov
repnz
test
loopne
sub
lods
xchg
test
add
test
mov
jp
xchg
outsb
ds
das
xor
push
je
dec
mov
and
add
out
jns
out
mov
mov
or
outsb
or
cmpsl
lahf
mov
ja
inc
stos
inc
pop
fmuls
sbbb
das
pop
xor
scas
daa
in
mov
push
mov
sti
inc
fildll
cmp
lret
sub
std
in
flds
shll
pop
adc
mov
movnti
pusha
aaa
xchg
out
xor
add
sub
dec
xor
rorb
or
xchg
dec
and
push
jno
pusha
mov
lods
xchg
xor
ds
pmullw
or
push
jns
inc
pop
xchg
mov
enter
add
pop
mov
test
push
mov
sbb
sbb
pop
add
enter
xor
sahf
mull
bnd
fsts
pop
xor
adcb
test
cmp
jbe
sbb
cltd
inc
clc
jmp
adc
lahf
ja
mov
add
movsl
push
decb
adc
inc
enter
adc
nop
fldl
adc
jle
ljmp
cmp
dec
lock
xor
bswap
or
lock
repnz
loopne
cmp
xchg
daa
jae
cltd
fmull
mov
movsb
push
repnz
add
pop
mov
mov
add
lods
out
inc
push
lret
das
lcall
mov
pop
mov
dec
adc
xor
inc
mov
or
cmp
out
and
out
xchg
addb
shll
stc
arpl
add
inc
push
outsl
andl
mov
inc
mov
pushf
ret
sbb
mov
add
pusha
jb
add
int
dec
idivl
imul
mov
add
popf
cmp
adc
lods
xor
hlt
mov
dec
jno
out
stos
push
xor
dec
stos
mov
out
iret
lods
xchg
cmp
pushf
fstpt
nop
insb
cmpsb
test
cmp
std
cwtl
sbb
fistl
pop
sub
jle
push
push
aas
xchg
testl
push
out
ret
loope
stc
jnp
aam
fnstsw
jle
sbb
pop
inc
cmp
sbb
push
sub
das
test
pop
cmpsb
sub
fisubs
icebp
jle
ja
icebp
fsubrs
inc
inc
dec
leave
push
cmp
out
repz
mov
mov
mov
xchg
inc
mov
loop
outsl
les
imul
jno
sbb
mov
push
jp
imul
inc
mov
xor
push
scas
xchg
ror
pop
pop
ret
xorb
sbb
aam
jg
aam
lret
mov
repz
lock
mov
jbe
adc
stos
cmp
mov
sub
push
jnp
ret
mov
imulb
jmp
pop
push
dec
sbb
pop
fwait
es
mov
jg
push
rol
dec
lods
shll
mov
sbb
dec
repz
or
scas
add
sub
imul
fcmovnu
enter
mov
adcb
fisttps
xchg
push
xor
icebp
insl
nop
jno
aad
fldcw
jne
scas
aaa
and
pop
stos
insl
adc
or
push
or
out
sbbb
add
stos
les
push
cld
adc
xchg
or
dec
mov
xchg
inc
jo
push
repnz
mov
sti
add
das
adc
push
in
popf
jne
pop
push
out
push
rcll
sbb
and
dec
inc
test
out
popl
adc
adc
test
stos
mov
enter
dec
scas
sub
icebp
imul
xorb
xor
sbb
call
test
outsb
sbb
cli
pop
pop
cs
leave
leave
notl
dec
mov
stos
jge
sti
xor
stos
push
dec
pop
adc
imul
lret
and
loopne
mov
sbb
fimuls
mov
or
popa
and
maskmovq
divl
enter
cmc
cltd
xchg
add
repz
cmp
xor
scas
pop
mov
call
repnz
cmp
jae
testl
cli
sub
fiadds
push
mov
jg
in
int
push
push
cmp
jge
mov
pop
dec
pop
outsb
fistpl
xchg
inc
fistps
dec
jbe
cmp
sbb
dec
jg
jle
enter
leave
movl
add
shll
xchg
out
scas
push
pop
dec
push
push
enter
subl
bound
sbb
dec
test
jl
int3
fcoml
call
je
mov
les
shlb
repz
aaa
push
cmp
push
sbb
xchg
arpl
dec
insl
nop
mov
arpl
adc
daa
jbe
or
inc
fdivrp
out
stos
test
or
or
movsb
sbb
loop
pop
pop
dec
gs
imul
push
inc
pop
jmp
mov
cwtl
mov
lret
xorl
adcl
mov
or
pop
dec
xor
and
xchg
out
mov
xchg
or
fdivl
mov
xlat
or
add
inc
stos
stos
lds
data16
cmp
mov
shlb
adc
mov
dec
lret
push
sub
push
push
test
push
ss
cmpl
push
addr16
fs
iret
pop
pop
outsl
sbb
lock
aad
fwait
popa
in
dec
popf
mov
out
lret
sub
insl
lcall
mov
ret
data16
loop
jl
mov
call
push
xor
movd
fldlg2
cmp
pop
out
dec
push
pop
add
push
xlat
insb
jns
dec
sbb
popf
mov
mov
das
jmp
roll
push
jmp
inc
xchg
push
cld
insl
shl
push
adc
push
data16
lahf
pop
sbbb
shlb
leave
orl
or
pop
jmp
std
xchg
sahf
nop
sub
pop
jne
repnz
xor
xor
dec
inc
inc
lock
cmp
mov
jg
sbb
mov
shlb
sub
mov
ret
daa
les
sbbl
inc
pusha
xor
cmp
fistl
pop
mov
mov
inc
ret
xorl
add
nop
and
or
pop
jno
mov
cmp
jns
int
xchg
mov
and
and
sub
fdivrs
xchg
mov
stos
icebp
loope
int
cmp
mov
loope
inc
int3
mov
mov
mov
mov
sbb
xchg
popf
lds
je
jp
jbe
adc
aaa
add
addl
jo
xor
ror
ss
loopne
out
pop
cmp
mov
test
es
xlat
mov
adc
les
inc
mov
cmp
subb
out
add
je
repz
stos
jecxz
cs
outsl
pop
push
outsl
rcrl
lcall
pop
pop
pushl
jo
rorl
mov
aad
dec
out
fdiv
or
movsl
sbb
sar
jl
mov
pop
mov
sbb
test
lds
mov
mov
leave
fidivrl
jmp
fcomps
pop
cld
mov
push
nop
mov
and
pop
mov
data16
test
dec
jo
test
cvtdq2ps
js
mov
movsb
xchg
ds
xchg
sub
push
jge
int
xchg
lds
mov
shll
inc
cld
inc
ljmp
cmpb
jae
lret
in
into
mov
inc
ds
adc
pop
fstl
ret
pop
roll
int
aam
jecxz
push
mov
fstps
dec
test
xchg
push
mov
push
shl
leave
mov
dec
xor
mov
jmp
mov
push
aaa
imul
cmp
sub
ret
mov
movsl
mov
adc
or
iret
adc
dec
sbb
push
jno
scas
bnd
lock
sbb
pop
test
cmpsl
ljmp
cmp
sbb
push
xchg
cmp
add
rorl
cmp
je
xchg
mov
or
mov
test
sub
iret
jo
fisubrs
test
pop
dec
test
or
imul
sbb
lock
fwait
jp
sub
sbb
das
cmp
arpl
lea
imul
fstl
mov
push
ret
stos
mov
test
mov
sbb
xchg
sub
es
jo
pop
sbb
into
add
in
add
sub
dec
mov
movsl
push
xchg
aam
add
out
aad
or
das
leave
sbb
inc
test
dec
mov
sbb
lret
aam
pushf
and
call
rolb
push
fmuls
pop
pop
mov
je
dec
ror
test
inc
daa
into
imul
inc
mov
inc
ret
jbe
pushf
test
sbbb
jmp
mov
cmpsl
add
mov
mov
lock
lcall
stos
cmp
inc
adc
pop
sub
inc
imul
lods
fs
out
xor
lds
lds
dec
push
repnz
test
sbbb
mov
push
or
out
jp
pop
hlt
xor
pop
sub
inc
add
fisttpll
repz
sub
xchg
push
pop
dec
mov
arpl
add
mov
mov
clc
js
mov
xchg
fstl
xchg
mov
pop
loope
test
sbb
fxch
xchg
leave
inc
aam
lods
mov
xchg
imull
push
ja,pn
adc
insb
add
das
leavew
fsubs
pshufw
adc
sbb
pop
aas
repnz
aad
daa
xchg
and
rcrl
fadd
arpl
pop
dec
dec
mov
mov
aaa
shlb
andl
jecxz
int
js
lock
insb
stc
fidivrl
stos
mov
mov
sub
addr16
push
repnz
pushf
sbb
xor
js
dec
shr
aam
and
adc
pushf
es
or
lahf
stc
nop
dec
in
add
mov
cmpsl
mov
sbb
pusha
hlt
dec
icebp
je
pop
in
adc
std
or
inc
js
push
mov
jle
push
or
lcall
popa
add
mov
or
mov
stos
repz
subl
icebp
xchg
xchg
clc
aas
add
pop
insl
dec
lret
and
mov
out
out
or
or
lods
add
pop
clc
mov
and
sbb
adc
aas
or
test
pop
adc
push
dec
pop
hlt
jb
mov
push
test
aas
push
inc
inc
pop
leave
jbe
add
les
enter
repz
add
scas
aas
fidivrs
inc
xor
or
imul
mov
add
ds
xchg
daa
sbb
adc
mov
int
jno
inc
fwait
xchg
mov
out
xor
loope
mov
mov
repnz
pop
adc
movb
push
pop
xchg
jp
inc
hlt
test
sub
cmc
adc
mov
mov
pop
jl
cmpsb
adc
out
sub
push
sub
dec
add
jbe
out
lea
and
and
ret
xor
out
outsb
mov
repz
imull
sbb
sahf
jge,pt
jmp
cmp
jo
adc
xlat
das
pop
aaa
lret
mov
fidivs
dec
in
push
cmp
jmp
shrb
push
shlb
test
jg
loopne
dec
and
pop
push
cmp
add
fs
fdivl
sti
jle
push
daa
add
jo
pop
jnp
shll
in
jmp
test
cmovb
lock
cmp
add
jecxz
adc
aas
sarl
or
or
rep
scas
sbb
or
mov
sub
add
std
arpl
mov
cs
sub
adc
sub
or
adc
not
stc
dec
pop
std
sbb
add
pop
shr
jae
lds
sub
xchg
add
cld
mov
and
roll
inc
mov
mov
xchg
mov
xchg
negb
inc
push
movsb
stos
rorl
inc
test
dec
sbb
rcl
sbb
movsl
jb
scas
mov
or
ret
push
out
ja
adc
mov
inc
rorl
push
out
fstps
hlt
lock
out
pop
sub
dec
int3
sub
push
dec
xlat
stos
xor
aas
data16
aas
cmp
pop
fmul
jae
adc
bound
pop
mov
repz
jb
lock
jno
sti
sbb
or
mov
dec
and
insw
syscall
adc
lods
adc
scas
in
lods
fprem1
push
pop
push
shlb
sbb
or
and
mov
cmpsl
aas
mull
inc
shlb
lods
jle
jns
dec
loopne
xchg
aad
xor
jmp
insb
xlat
call
and
adcl
rclb
stos
cli
mov
rorb
push
add
jl
push
icebp
xor
lock
cmovg
jae
add
push
pop
sti
aas
dec
enterw
lret
repz
pop
cmp
sbb
enter
add
mov
jp
push
jmp
mov
sub
sbb
lea
test
jae
mov
icebp
pop
out
fisubrs
imul
dec
aam
clc
orl
jb
mov
rorb
cmp
movsb
cmpsb
lret
icebp
inc
mov
sbb
jo
in
fsts
dec
loopne
add
xor
scas
aam
cli
add
sahf
cs
mov
repnz
mov
inc
push
movsb
jge
and
jge
mov
add
jge
sti
cwtl
sahf
mov
not
movsb
gs
cmp
cmpl
leave
cmp
xchg
js
cmp
sbb
jg
je
xchg
cmpsb
stc
dec
push
lret
jp
adc
sub
mov
jo
mov
dec
popa
stos
push
popf
test
inc
push
adc
les
cltd
pushl
inc
fucomip
cmp
jp
inc
jmp
mov
out
shlb
cltd
xor
fcoms
dec
sbbl
add
and
into
pop
loopne
int3
xchg
es
xor
cmc
repz
mov
test
push
stos
int
cmp
dec
or
repnz
faddl
iret
mov
pop
adc
clc
add
js
and
adc
mov
out
sub
inc
sub
lret
jle
add
inc
push
in
imul
jbe
call
cld
sub
aam
or
fstl
or
mov
cwtl
aaa
pop
xchg
pop
sbb
and
fisttpll
in
inc
cmpsl
pop
jo
push
sub
sbb
fsubr
fimull
mov
jp
std
pop
dec
cmp
mov
int3
mov
int
pop
pop
in
ja
outsl
xor
pop
hlt
repnz
push
and
mov
fyl2xp1
test
std
dec
mov
xor
adc
scas
cmp
dec
movsl
lahf
je
dec
test
pop
add
push
and
dec
cmp
fimull
mov
xor
das
pop
ds
fucomi
push
jg
jge
xor
test
pushf
add
out
jl
xor
adc
aaa
ss
mov
adc
dec
cmpsl
insb
adc
adc
xor
dec
or
arpl
mov
popf
jl
jg
xchg
and
pop
xchg
xor
jecxz
int
fimull
aas
cltd
push
mov
inc
lods
test
sub
dec
inc
mov
or
sbb
repz
xchg
scas
dec
push
xor
cmpsl
mov
xchg
scas
cltd
mov
fldcw
sbb
inc
inc
mov
inc
pop
jl
pop
shrl
dec
xchg
adc
fistpl
add
sbb
mov
setle
pop
aam
add
loope
clc
pmovmskb
pop
adc
mov
fimull
dec
or
jns
or
mov
mov
fsubl
push
sub
imul
or
add
and
out
mov
lea
mov
mov
movsb
and
testb
cwtl
in
lods
push
addl
scas
stos
lods
shl
inc
lea
aad
sbb
add
xorb
mov
clc
mov
jle
mov
daa
mov
stos
movsl
sbb
cld
dec
aad
pop
xchg
ficoms
bnd
or
or
lods
adc
gs
sub
cwtl
and
js
cli
into
xchg
aam
out
lahf
cwtl
stc
ret
dec
movsb
scas
xor
pop
lret
jle
add
ret
sub
pop
xor
lahf
icebp
cmp
mov
aad
adc
mov
sbb
fwait
or
out
daa
int
sbb
mov
or
aam
xchg
xchg
aam
or
data16
negl
xchg
dec
loope
idivb
xor
enter
jae
js
lcall
movb
inc
frstor
and
xor
cmp
sar
cmpsb
das
leave
test
mov
enter
icebp
xor
decl
mov
jge
inc
jbe
inc
push
jp
cmp
mov
pop
cmpsb
cli
add
lock
mov
das
roll
sar
sub
xchg
repnz
sti
test
push
xchg
mov
nop
add
xor
ret
dec
xchg
adc
lds
lea
lahf
xor
test
movl
sete
cmp
cmp
les
sahf
aam
bound
shlb
ja
jmp
jg
and
lret
xchg
dec
mov
pop
sbb
int
sub
push
shr
or
out
jne
add
pop
subb
ja
imul
in
push
jg
push
je
cmp
pop
jae
jmp
in
xchg
jp
mov
mov
lahf
out
insb
lods
add
lods
andl
pop
add
and
push
jbe
cmp
divl
and
out
xorb
jnp
shlb
stos
xchg
mov
ljmp
pusha
xor
fstpt
mov
mov
mov
outsl
loop
mov
and
push
outsb
add
adc
insb
sub
fwait
inc
cwtd
cmpsb
adc
das
mov
cwtl
inc
or
sub
adc
inc
daa
inc
loopne
movsb
jbe
xchg
dec
pop
and
rclb
inc
sub
lret
and
xorl
dec
bound
add
lods
cli
adc
mov
inc
scas
inc
ss
pop
push
mov
and
add
faddp
dec
pop
sbb
jbe
xor
add
xor
lret
dec
dec
add
xchg
jno
xchg
add
mov
in
mov
add
jl
rorl
dec
jnp
push
fadd
sub
inc
pop
mov
mov
add
inc
cmpsb
call
je
andl
arpl
pop
push
enter
mov
gs
mov
outsl
pop
mov
lods
out
cmpl
mov
out
sub
mov
mov
mov
pop
jbe
adc
les
pop
sarl
add
shrl
imul
clc
jp
je
shlb
gs
sarl
fstpt
add
jmp
imul
mov
mov
lahf
mov
faddp
dec
push
cmp
inc
mov
mov
add
mov
imul
and
push
jb
fwait
jecxz
add
insb
cli
into
fs
movsb
clc
mov
loopne
lock
mov
jg
jnp
xchg
shr
scas
ja
inc
in
iret
add
repnz
cwtl
xchg
mov
inc
sub
mov
into
push
lea
add
fwait
jg
sbb
stos
sahf
stc
mov
test
nop
fmul
imul
fcomi
mov
in
ljmp
ret
mov
lock
or
call
mov
cmp
popa
and
xor
gs
adc
cmp
mov
outsb
sbb
cltd
mov
xchg
xchg
sub
dec
push
mov
pop
sub
xor
out
or
mov
call
mov
neg
mov
jmp
xchg
hlt
aaa
push
xchg
cmp
fcomps
into
pop
cmp
cli
sub
sbb
xchg
insl
roll
movzbl
jecxz
out
add
dec
pop
mov
movsb
push
fdiv
inc
or
xor
fwait
aaa
and
stos
pop
jo
adc
das
xchg
and
add
xor
xchg
push
outsl
int
or
add
mov
fistps
fbstp
ja
xchg
and
xchg
cmc
sbb
inc
mov
pop
fwait
mov
hlt
adc
fildl
or
mov
arpl
notb
jb
pop
shll
xchg
fsubr
or
stos
int3
rolb
aas
je
mov
out
mov
into
rorl
sbb
dec
cltd
mov
or
mov
add
mov
mov
jb
cmp
mov
ret
mov
mov
xor
pop
xor
data16
rorb
push
pop
jp
shl
neg
pop
mov
fnstsw
rcr
xchg
push
inc
jno
and
out
xchg
popa
inc
xchg
imul
aad
sbb
jb
fs
lcall
cmp
xchg
mov
mov
xor
mov
jle
lods
lea
stc
scas
or
xlat
fwait
mov
sbb
add
adc
mov
rcr
push
jmp
push
lock
adc
sti
mov
.byte
