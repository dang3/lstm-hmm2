push
call
ret
ret
jmp
popa
or
test
sbb
add
dec
test
popa
sub
bound
in
xlat
cwtl
mov
rcl
xor
xor
inc
adcl
cmp
int3
loope
jo
and
xchg
jge
dec
xchg
repz
incl
jne,pt
sbb
jae
jmp
mov
or
dec
das
inc
dec
repz
dec
pop
mov
test
add
or
je
gs
inc
in
sbb
lcall
stos
jg
mov
lret
test
into
rclb
scas
loop
xchg
scas
push
sub
lods
pop
int
pusha
and
call
dec
jmp
inc
ss
je
inc
ficompl
testl
sti
movsb
mov
xchg
add
dec
cmp
dec
rcrb
lea
arpl
xchg
js
fdiv
cmp
ret
lret
pop
jecxz
leave
sbb
test
sbb
jge
xchg
lret
jl
and
push
push
push
movsb
dec
jns
inc
lahf
test
mov
or
test
test
stos
dec
add
add
icebp
gs
jmp
loop
loope
dec
push
cs
dec
insl
jo
sub
and
push
nop
pop
imul
insb
jle
cmp
push
or
fildl
push
std
xchg
movsl
sub
mov
xor
shll
cmpsl
dec
sbb
in
sahf
fs
pop
pop
sub
idivb
xor
cmpl
hlt
add
aad
mov
aas
xchg
clc
push
mov
add
lret
sbb
or
adc
xchg
xor
jnp
xchg
mov
jnp
mov
int
mov
xchg
sub
lock
loope
int
mov
in
lods
fldt
dec
lret
mov
or
pusha
adc
bound
push
xchg
push
inc
inc
jge
cmp
or
inc
movsl
mov
je
cld
fcmovbe
pop
cs
adc
xchg
xchg
pushf
xchg
jne
pop
rolb
mov
mov
mov
sub
push
outsb
jo
popa
mov
rorb
and
ja
push
add
jecxz
cwtl
enter
mov
adc
adcl
pop
in
cmp
pop
sub
sub
mov
xchg
jmp
add
xchg
jle
call
nop
xchg
mov
inc
xchg
rol
shrb
outsw
dec
cld
mov
push
fs
fcomps
mov
sbb
enter
mov
jle
mov
push
faddl
jp
in
out
stc
ljmp
add
inc
test
jo
cld
shlb
orb
sub
push
or
jno
push
mov
aam
out
xchg
rol
gs
mov
add
pop
int
into
in
push
push
shll
adc
xor
fisttps
aas
push
pop
jmp
dec
movsb
sub
aam
pop
stos
adc
inc
pop
in
movsb
mov
jbe
dec
cld
imul
lahf
mov
sub
xor
rcrb
clc
push
test
fs
push
or
cmp
dec
imul
xor
lds
lret
sbb
jb
lds
dec
cmp
adc
lods
inc
stos
out
pop
xchg
lods
jle
push
sti
inc
inc
mov
mov
cld
inc
inc
enter
adc
xchg
push
cmp
movsl
or
dec
jno
adc
push
int3
mov
push
pop
enter
lods
fs
ja
icebp
loope
jne
dec
mov
jae
cmp
loopne
ja
fldt
inc
inc
or
adc
mov
ds
aad
push
pop
add
cmpb
pop
sub
nop
push
add
cmp
fs
xchg
mov
adc
mov
jb
outsl
adc
pop
adcl
xor
jg
xor
jp
imul
push
js
mov
cld
je
cmp
adc
hlt
das
inc
sahf
mov
stos
fnstcw
enter
loope
cmp
outsl
xor
lds
jg
inc
xchg
arpl
lods
mov
push
dec
icebp
mov
cld
rclb
lcall
and
jecxz
popa
popf
push
es
pushf
insl
fiadds
dec
arpl
push
or
test
fisttpll
adc
jne
sbb
loop
in
lods
and
mov
push
adc
inc
xor
or
jo
cmp
cltd
scas
dec
popf
lret
or
mov
es
aam
je
popf
mov
push
call
movsl
add
dec
cld
dec
xor
dec
rclb
mov
ds
inc
fisubrl
movsl
bsr
cld
add
xchg
rclb
push
or
loope
sub
jbe
sbbl
fisubrs
add
cmp
bound
dec
imul
js
repz
pop
sbb
pusha
cmp
inc
mov
xchg
cwtl
adc
gs
popf
mov
ret
dec
in
iret
pop
cmp
cmpsb
fldt
js
js
cmp
jne
sbb
push
inc
push
dec
sub
adc
pop
jb
aam
add
mov
fwait
pop
outsb
jo
test
inc
int3
std
popf
or
xor
push
stc
dec
mov
mov
or
jae
cmp
cmp
aas
jle
pop
xor
mov
cmpsl
mov
mov
push
cmc
adc
pop
dec
scas
icebp
cmp
adc
mov
adc
icebp
sbb
dec
adc
sarl
jg
aad
and
sbb
icebp
mov
push
dec
insl
insl
mov
into
cmpsl
or
inc
lret
stos
ss
jg
jle
fabs
mov
pop
pop
cli
popa
aaa
mov
lds
xor
mov
cmp
dec
dec
mov
xor
jmp
cmc
pop
stos
and
popa
and
dec
aaa
cltd
push
clc
push
inc
push
sbb
pop
movl
xor
int3
sub
dec
lret
dec
ret
and
push
or
subl
sub
cmp
out
out
inc
inc
ljmp
xchg
sbb
mov
push
scas
nop
cmp
fs
pop
pop
data16
lds
jne
mov
sbb
or
mov
fldenv
cmc
dec
push
dec
and
jbe
iret
dec
pop
push
cli
fnstsw
add
and
mov
mov
jno
and
sub
pop
pop
add
push
add
pop
bound
clc
cmp
pushf
jecxz
jl
test
ret
xchg
pop
lods
fmull
add
xor
rcr
jns
push
aaa
ret
jge
jmp
in
dec
jmp
pop
lea
pop
xlat
inc
test
fwait
push
mov
mov
jo
xchg
mov
sub
mov
add
pop
push
popa
fs
fisttpl
xor
loope
jp
repnz
cmp
fsubrs
pop
out
nop
test
ret
push
cmp
xchg
jns
scas
sbb
stc
inc
adc
add
mov
jp
and
cli
aad
adc
mov
test
xchg
loopne
cs
fildl
in
xchg
sahf
imul
out
push
popa
imul
mov
movsl
mov
es
fwait
mov
lods
test
pushf
je
mov
inc
or
cmpsl
xchg
cs
push
leave
leave
mov
mov
repnz
divl
dec
push
sub
pushl
mov
pop
out
cmpl
and
xor
push
mov
int3
in
and
xchg
das
jne
push
mov
inc
lret
insb
mov
sbb
scas
into
rcrb
sub
out
popf
jno
fldenv
inc
jp
out
adc
sbb
inc
int3
xchg
dec
xchg
daa
loopne
mov
xchg
daa
in
push
addb
push
inc
dec
icebp
or
cltd
ljmp
sbb
iret
ror
pop
mov
loopne
mov
xchg
int3
adc
jno
lods
test
add
dec
imul
pushf
popf
mov
fldt
xor
cmp
inc
or
psrlw
push
fwait
jo
adcb
mov
inc
xchg
xchg
aad
jo
movsl
cmp
das
inc
xchg
xchg
jg
orb
xor
adc
orl
iret
subl
xchg
int3
popf
ficomps
and
and
cli
adc
lods
lret
or
mov
dec
jo
lds
fdivp
scas
pop
or
imul
xor
sub
inc
int3
sarl
inc
xor
jg
and
iret
das
lods
jb
repz
push
in
xchg
push
cmp
dec
ret
movsb
pop
add
or
xor
mov
ret
rorb
lods
daa
daa
fisttps
scas
jg
dec
mov
jmp
arpl
mov
insl
and
push
leave
out
arpl
iret
xor
insb
es
mov
pop
imul
xchg
add
bound
pusha
ret
or
ljmp
mov
mov
out
and
das
lods
fsubl
mov
jne
mov
mov
stos
out
int
loopne
iret
pop
cmp
imul
out
xchg
mov
xchg
mov
push
xchg
lods
jg
mov
mov
das
int3
outsl
jl
fbld
xor
fwait
test
sub
loope
sbb
shlb
int
push
mov
imul
push
inc
cmp
lods
sbb
adc
call
dec
lret
ja
xchg
loop
xlat
sarb
xchg
imul
call
hlt
out
adc
fs
add
aad
mov
or
out
ficoms
pushf
aad
icebp
adc
mov
enter
fadds
lcall
ret
lret
sbb
ret
cmp
mov
mov
bound
pop
popa
jl
ret
movsl
push
lcall
loope
jns,pt
and
inc
cli
mov
lahf
inc
jp
cmpsl
jmp
scas
lods
dec
adc
push
lods
lds
pop
outsl
imul
and
and
or
fldl
fmuls
jns
cmp
inc
loope
inc
sbb
jne
pop
js
stc
xchg
inc
int
movsl
outsb
sub
inc
in
jnp
clc
in
js
push
cmp
adc
inc
loope
sub
rol
insb
mov
fisubs
into
fimull
mov
fisubs
pop
mov
jp
adc
jle
mov
arpl
xchg
mov
inc
sti
cli
sbb
movsb
fcoml
inc
enter
add
sub
sbb
js
cmp
jb
cld
mov
lcall
xchg
shlb
and
pop
or
or
test
jge
rorb
loop
dec
clc
mov
aad
js
out
sahf
pushf
repnz
shll
into
or
or
or
iret
cmpsl
orl
shl
xor
lea
sbb
or
negb
popf
dec
jns
lock
jp
sub
add
ds
dec
cs
pusha
add
enter
sbb
sub
rcll
sub
daa
ss
test
adc
je
cmpl
iret
std
sarl
stos
imul
sub
hlt
jl
sub
mov
push
iret
test
pop
aas
repz
jg
addr16
lods
dec
lret
out
sbb
lret
stos
mov
out
push
push
sub
sub
pushf
ja
mov
xor
fmuls
fdivrp
test
xchg
xor
xor
cmp
shr
sti
add
xor
xchg
push
xorl
sub
mov
pop
inc
or
pop
push
adc
sti
cmp
in
xchg
mov
jno
cmp
loope
sahf
adc
mov
ja
call
mov
jne
pushf
lds
movl
cld
sti
and
frstor
push
dec
lcall
popf
mov
stos
cmc
std
push
lcall
rorl
mov
mov
enter
xchg
js
inc
mov
mov
mov
pushf
jb
ret
dec
rolb
add
ds
jnp
cmp
sub
out
mov
and
mov
loope
xor
ja
clc
je
xor
jmp
mov
cmp
xchg
pop
shll
fmulp
push
or
xor
cld
pop
or
add
or
lock
mov
adcl
cld
lret
inc
push
fwait
cmp
les
int3
and
or
cmp
loopne
leave
in
lds
jecxz
adc
stos
xor
and
and
and
xchg
je
sub
call
cmp
push
call
popf
add
movsl
sbb
outsb
lds
adc
push
inc
mov
add
pusha
adc
movsl
lea
sbb
xor
leave
fstpt
push
fdivrp
mov
out
shlb
nop
in
sahf
ljmp
out
or
xor
pop
sub
push
dec
xchg
xchg
stos
leave
shlb
stos
inc
jb
loope
je
loopne
jne
ret
jmp
fnsave
sub
rcrw
aam
xchg
mov
and
and
dec
cmpsb
enter
inc
lods
rcrb
inc
stc
mov
and
int
or
jne
adc
je
enter
mov
cmpsb
rcrl
nop
sbb
adc
mov
cmp
or
call
or
std
or
dec
rcll
fsubs
jge
fcomi
jl
insb
jp
dec
xchg
push
ljmp
cmp
ss
xchg
xchg
dec
clc
xchg
sbbl
mov
dec
jbe
xchg
outsl
xor
pop
std
faddl
cmp
aad
adcl
addr16
or
add
jmp
inc
xchg
in
jo
or
xchg
cmp
mov
pushf
ja
and
out
mov
push
dec
push
arpl
lahf
imul
mov
outsb
jo
int3
sti
inc
scas
mov
sbb
fdivp
ss
jo
iret
push
cwtl
loope
stos
and
push
cmp
fs
ret
adc
mov
arpl
nop
cmp
mov
orb
jns
lods
mov
aaa
scas
mov
out
test
ja
leave
test
scas
loope
inc
cmpsl
aas
divb
sarb
in
mov
imulb
xchg
and
aam
cld
inc
cmp
fbld
fldt
mov
rol
roll
add
pop
mov
jae
ret
xchg
lcall
test
lahf
xor
test
push
mov
out
test
out
dec
dec
mov
jecxz
xchg
jmp
xor
mov
push
mov
add
mov
mov
xchg
pushf
cmpsb
popa
lret
adc
mov
mov
into
sbb
outsb
rcr
push
mov
insb
outsb
lods
mov
and
and
sub
mov
js
ja
loope
push
lcall
and
movsb
loope
inc
pop
lods
hlt
scas
roll
dec
inc
add
jle
movsb
xchg
flds
imul
push
loop
cmp
out
cld
mov
in
lock
pcmpgtw
and
xchg
cmpsl
gs
adc
dec
sub
les
cli
out
cli
mov
pop
in
mov
adc
loope
in
dec
xchg
fstp
push
cmp
mov
ja
outsl
mov
js
xlat
add
enter
mov
mov
push
dec
enter
popa
lret
push
inc
cmpsb
xchg
std
sti
pop
addr16
pushf
outsb
rep
cmc
and
sbb
or
sbb
add
mov
mov
and
push
mov
mov
push
sbb
or
popa
out
je
outsl
xor
cmp
jbe
mov
and
aaa
jb
xchg
loope
cmp
mov
imul
in
sti
fmull
push
pop
out
pop
stos
fdiv
jnp
mov
cmp
jmp
in
shlb
cmp
dec
pop
xor
sbb
push
sub
pop
push
lret
pshufw
inc
adc
dec
hlt
aas
cmp
iret
jg
and
fdivs
adc
cld
dec
sub
in
fnstcw
popa
js
pop
orb
and
sub
movsl
lcall
gs
jl
xchg
cmp
mov
shr
daa
lods
lahf
bound
dec
cli
movsl
arpl
mov
rclb
xchg
sbb
cltd
adc
cmpsb
dec
add
fiadds
fdivrs
pop
sarb
xchg
pop
shrl
push
imul
dec
xchg
lods
ds
loop
rdpmc
xchg
mov
adc
flds
ficompl
enter
subb
dec
outsl
add
test
mov
mov
push
xor
push
jae
xchg
ljmp
xor
mov
jbe
sub
movsb
ret
lret
sub
xor
imul
pop
loopne
in
dec
xor
mov
adc
aad
jo
cli
roll
or
fadds
mov
xlat
mov
roll
lea
mov
add
movsb
lret
or
repz
jmp
xor
in
and
adc
ret
stos
mov
fwait
out
jae
lcall
mov
add
lds
add
enter
arpl
adc
mov
fsubrl
test
xor
sbb
push
xchg
push
insb
mov
es
push
ds
in
popf
sahf
arpl
adc
inc
xor
cmp
push
movsb
in
roll
lret
test
jne
xor
cmp
xchg
xor
pop
adc
dec
sarb
jg
out
xor
js
js
cwtl
pop
test
sahf
push
cld
inc
insb
or
movsl
or
sarb
pop
stos
dec
iret
or
loop
js
movb
jmp
pop
mov
lret
jg
cltd
add
mov
scas
mov
xchg
xchg
push
fnstenv
sti
xor
out
lret
mov
enter
mov
add
addl
adc
lahf
lods
popa
out
mov
dec
imul
cld
pop
fcomps
and
add
fisttpl
mov
daa
scas
rorb
cmp
repnz
mov
mov
dec
mov
mov
pop
leave
js
dec
cld
in
ja
das
ljmp
test
jo
shll
popa
inc
repnz
add
mov
sbb
mulb
xlat
rcll
xchg
xchg
add
roll
sub
test
pusha
stos
jbe
push
cmp
mov
imul
push
push
mov
or
clc
inc
aad
xor
cmp
test
xchg
loope
push
mov
dec
jae
in
ret
mov
push
lods
pop
mov
push
xor
out
jo
clc
xor
das
adc
mov
out
scas
mov
shrl
push
jge
sub
jbe
mov
sbb
into
sub
hlt
mov
mov
call
jbe
mov
xor
loop
xchg
sbb
dec
mov
xchg
in
push
int
push
jae
cwtl
sub
fildl
sbb
add
adc
call
xor
nop
in
xchg
jns
jl
repnz
cli
shrl
sbb
cli
out
mov
or
pusha
imul
xchg
repnz
push
mov
mov
cmp
push
aaa
out
popf
jg
orps
sbb
pop
and
jnp
shll
sti
insb
pop
cli
jecxz
xor
icebp
loopne
sub
push
sti
clc
lods
push
push
cld
jno
jle
cmp
out
sbb
sub
lods
daa
les
lret
stc
dec
out
inc
sub
pop
sub
test
push
jo
push
xchg
lret
mov
out
add
lret
pop
add
push
stos
outsb
test
rcr
insb
pushf
repz
jcxz
mov
push
sbb
adc
push
stc
xchg
jns
pop
mov
lret
and
push
add
ror
jle
mov
pop
mov
xchg
mov
push
cwtl
int3
cwtl
sbb
lods
mov
sbb
jnp
pop
es
dec
stos
and
xorb
rorl
jno
jl
add
adc
stc
push
jg
xchg
jmp
pop
push
sbb
fildl
aas
stos
cmp
mov
jg
mov
push
xor
fdivs
cmp
mov
je
rol
bound
fstpt
lock
or
out
scas
in
add
nopl
fiadds
jle
aas
les
mov
adc
cwtl
gs
or
xchg
dec
push
shr
jl
loop
cvtps2pi
xchg
and
into
adc
lahf
mov
lcall
pop
lcall
xor
cmp
sbb
out
mov
pop
lods
stos
icebp
sub
add
js
and
leave
sub
pop
je
xchg
js
call
mov
nop
repnz
push
xchg
dec
scas
in
nop
or
enter
data16
lcall
outsl
sti
mov
in
into
fxch
aaa
pop
iret
add
imul
push
test
pop
orl
dec
fistpll
pusha
cli
fsubr
or
sub
cmc
push
and
shl
mov
in
cmp
sbbl
lods
rclb
lret
lea
sub
outsl
and
lahf
dec
push
sti
dec
inc
jno
mov
das
pop
or
xor
cmpsl
push
push
cltd
push
or
call
adc
rcll
mov
icebp
xchg
cs
sbb
cmp
or
mov
jb
je
in
loopne
sub
rcr
xchg
faddp
xchg
or
xor
lahf
pop
insb
movsl
jno
mov
lods
in
dec
adc
mov
xchg
jns
xchg
jmp
cmc
outsl
adc
mov
inc
push
cmp
fs
nop
dec
push
int3
inc
dec
das
xor
push
add
dec
sbb
stos
cltd
lahf
mov
cmp
lds
lcall
add
mov
pop
inc
xchg
jg
ja
sub
mov
push
sarl
mov
jmp
sahf
idiv
loop
adc
adc
mov
sub
xchg
cmp
setp
rcll
jg
subl
ficoms
dec
add
inc
mov
test
push
into
jne
sbb
dec
mov
aas
sbb
sub
dec
inc
xchg
push
fwait
call
add
jmp
mov
jno
daa
mov
stos
xchg
outsl
jne
nop
mov
scas
pop
in
xchg
fiaddl
rorl
mov
in
adc
xor
and
shl
ja
data16
fs
and
addb
mov
push
test
dec
into
into
dec
lcall
faddl
aad
popl
sbb
or
mov
fisubrl
jae
inc
cmpsl
dec
cld
push
and
xchg
push
push
sub
pop
je
lret
fcomi
loopne
xor
cli
adc
loop
orb
imul
add
les
mov
mov
repnz
lods
enter
in
xchg
push
push
aas
add
fsubl
daa
inc
fwait
ja
or
push
dec
test
mov
xchg
out
jmp
rdpmc
and
pop
and
es
adcl
push
inc
and
xchg
hlt
mov
xchg
fcompl
lods
xchg
loope
sub
iret
and
jo
mov
scas
xchg
scas
scas
dec
les
mov
pop
jp
pop
adc
lcall
into
push
push
js
movsb
scas
sbb
leave
dec
fists
jb
leave
lods
adc
shlb
dec
cmp
aaa
mov
fnsave
pop
cmpb
jge
dec
xor
ret
xor
xor
lods
imul
in
push
mov
mov
mov
sbb
test
in
pop
loopne
sahf
cld
repnz
rorb
in
add
jnp
jbe
jmp
cwtl
push
mov
pop
cltd
mov
outsb
lret
es
popf
fnsave
xlat
loope
je
mov
pop
vcvtdq2ps
cmp
addr16
xor
inc
jne
pop
pop
cmp
push
fcmovnbe
xchg
imul
movsl
xchg
shll
gs
xor
xor
sub
sbb
push
into
aad
xchg
shr
xchg
pop
inc
jo
adc
gs
cs
fdivl
and
mov
gs
pop
dec
inc
sbb
adcb
hlt
and
pusha
cmp
pop
ret
dec
cltd
ds
into
mov
stc
loopne
movsl
mov
stc
mov
int3
adc
ds
enter
rclb
repnz
push
push
jle
xchg
sti
out
mov
addr16
adc
negb
sub
ss
mov
cmc
push
add
jge
gs
shl
subl
cmp
and
lahf
sub
repz
enter
scas
or
push
in
mov
or
cmp
std
cmp
dec
mov
ret
inc
lret
stos
jnp
incl
or
push
jmp
aaa
mov
std
lods
test
stos
jbe
stos
pop
sub
mov
xorl
and
inc
ret
pop
mov
adc
jnp
push
lods
pop
iret
push
ret
jo
mov
push
sub
adc
mov
ret
in
jge
daa
push
andl
adc
loope
mov
adc
das
sahf
movsl
push
pop
or
cltd
mov
xor
mov
lret
pop
sbb
clc
add
lods
push
stc
shll
dec
jb
xor
in
add
mov
xchg
lret
sub
mov
mov
addr16
lds
fstl
fs
mov
nop
and
mov
arpl
movsb
and
popa
dec
lea
cmpsb
fistpll
call
sahf
pop
stc
shlb
xchg
loope
mov
push
or
jno
inc
stos
xchg
stos
sub
test
xchg
cmp
cli
push
rolb
jns
test
jl
pand
lock
mulb
inc
rcll
mov
mov
xchg
scas
push
lret
outsl
nop
js
pop
jmp
shll
fadd
pop
fadd
stos
mov
shll
push
sub
sbb
push
repnz
sbb
jnp
lods
lods
int3
inc
push
mov
ja
aaa
add
test
or
jle
mov
sub
cs
jge
cmp
cmp
adc
dec
or
std
mov
lods
and
ret
pop
in
mov
cltd
dec
jge
xchg
and
pop
inc
pop
mov
xor
mov
in
js
jl
or
fmuls
add
and
add
mull
xchg
sbb
out
ret
cmpsb
lea
clc
mov
clc
sbb
pop
xchg
pop
rcrl
subl
adc
movsb
xchg
cmpsl
push
push
pop
jmp
mov
inc
cwtl
mov
jle
push
in
jnp
cmp
dec
addr16
adc
stos
add
dec
jo
outsb
test
sub
test
js
ret
mov
inc
add
xor
pop
lods
xor
cmpsb
jo
cltd
sub
lret
std
sbb
mov
pop
mov
jbe
cmp
dec
xchg
push
lds
xchg
aad
mov
outsl
lret
mov
mov
dec
cmp
mov
pushf
add
pop
mov
loop
xchg
mov
pop
and
xchg
or
jp
cmp
aad
push
jp
adc
stos
sub
insb
sbbb
dec
test
jns
mov
jge
jb
clc
loopne
jecxz
and
int3
mov
mov
and
dec
aad
cmpsb
fcoms
jae
xchg
fildll
jns
pop
aas
or
mov
inc
leave
sti
push
aaa
push
and
je
mov
push
sahf
pop
mov
xchg
decl
sbb
bound
dec
dec
xor
lcall
loop
ret
je
sbb
ds
repz
adc
cmp
jg
rcr
cmpb
sbb
in
pop
inc
xor
test
pop
pushf
push
xor
pop
sbb
lea
sbb
mov
gs
dec
sbb
inc
stos
insl
sbb
out
rclb
fsub
in
cmpsb
push
add
jb
jnp
xchg
rcll
cld
jne
or
push
pushf
mov
add
pop
cmp
mov
imul
cwtl
mov
repz
aam
ret
pusha
jle
xchg
mov
aam
rol
lock
jb
add
xchg
je
xorb
jmp
std
or
mov
sbb
mov
xlat
fistl
in
sbb
push
fistps
xor
aas
and
jno
xchg
sbb
or
cwtl
clc
or
enter
fldl
shrl
cmp
shrb
stc
mov
push
sub
lods
popa
adc
inc
pop
arpl
xchg
push
pop
mov
stos
in
scas
imul
in
xor
pushf
aam
sub
jbe
mov
sbb
mov
arpl
mov
fists
enter
xor
les
and
add
or
adc
push
fwait
int3
mov
scas
adc
pop
or
data16
repnz
jno
xlat
push
sbb
xor
sub
adc
loop
dec
fsts
mov
adc
or
fldt
mov
jg
add
stos
fisubrl
inc
pop
data16
jno
xor
icebp
mov
xchg
in
xchg
popa
mov
adc
xchg
push
iret
and
dec
iret
fwait
addr16
int3
sub
lret
cli
sbb
sbb
jmp
jg
push
jp
mov
rol
in
add
clc
adc
mov
push
fcmovb
push
std
push
jnp
lcall
ss
lret
mov
push
aaa
das
adc
into
push
arpl
mov
xchg
sbb
lea
test
pop
mov
fnstcw
out
pop
mov
je
int3
mov
iret
fbstp
lock
stos
outsb
jae
in
ja
out
enter
rorl
loop
aam
add
test
loop
enter
pop
jl
sub
jl
push
mov
jo
js
xchg
sub
fisttps
jno
xor
push
push
cmp
jae
imul
add
out
les
sbb
dec
stos
adc
adc
dec
push
dec
mov
xchg
jg
or
shrb
ljmp
mov
sbb
push
pushf
dec
lds
cs
lret
call
jle
data16
scas
push
pusha
cli
movsb
jl
sub
sti
cmp
push
adc
mov
sub
pop
xchg
in
mov
and
sub
outsb
pop
and
mov
int3
test
pop
add
xchg
jle
lods
stc
push
sar
mov
test
add
sahf
lret
cmp
mov
stc
adc
push
inc
push
cld
fldl
pop
outsb
mov
mov
push
iret
pusha
adc
xor
daa
mov
jmp
scas
add
sbb
sbbl
or
inc
ficompl
jmp
adc
aam
push
scas
pusha
push
xchg
ss
jmp
xor
or
or
lret
lret
popa
aad
scas
testb
xchg
rcrl
mov
cmpl
cmpsb
dec
adc
stc
hlt
shl
out
ret
mov
adc
lcall
out
loope
mov
rolb
mov
push
push
popl
daa
sub
add
xchg
ret
mov
push
sub
stos
dec
sbb
xchg
js
xchg
mov
mov
ret
pop
mov
jns
iret
xor
lret
mov
fcompl
add
sbb
notl
cmp
push
dec
mov
add
movb
xchg
push
xor
jmp
icebp
cmp
addr16
adc
addb
pop
mov
scas
sbb
dec
dec
cmpsb
adc
xchg
push
mov
jg
xchg
or
xlat
mov
aad
js
out
add
xchg
xlat
nop
jp
scas
mov
out
fstps
rcr
xchg
jl
xchg
jg
jle
mov
or
xor
mov
test
out
push
or
es
dec
lahf
clc
pop
dec
add
sub
pop
mov
jbe
sbb
push
pop
dec
in
scas
xor
ficoml
sub
mov
mov
mov
icebp
addb
xchg
orl
mov
xor
and
and
inc
dec
sbbl
cmp
fs
adc
pop
in
js
and
cmpsl
sbb
jmp
pop
das
sub
cli
loop
sub
sub
cmp
jbe
inc
mov
cltd
lock
mov
shrb
out
mov
int3
scas
iret
sbb
dec
cmpsl
xor
or
pushf
imul
add
sub
add
int
mov
and
adcb
ret
inc
xlat
sahf
add
insb
mov
push
out
dec
ljmp
fcomps
and
lock
das
pop
fisubrl
xchg
leave
ja
je
dec
test
in
movzbl
dec
mov
mov
into
addr16
sub
adc
sub
stc
jmp
mov
popa
fsubp
cmpsb
jnp
out
push
sbb
incb
pop
jbe
lret
pushf
adc
shll
sub
imul
mov
mov
xor
and
and
cmpsb
repz
lock
add
sbb
jle
dec
jae
and
add
mov
cmp
cmp
aaa
xor
push
sbb
ror
nop
dec
sub
push
stos
popa
xchg
mov
sub
fsubl
pcmpeqb
pop
stc
sub
nop
lods
push
repz
enter
sub
cmp
testb
cmp
xor
jns
xor
insb
sbb
ja
sub
pop
lret
std
movsb
hlt
rclb
mov
mov
or
or
aam
test
arpl
mov
lea
shrl
outsb
and
ficompl
inc
sub
inc
faddp
pop
cmpsl
cli
inc
fisubl
add
cmc
cld
adc
int
push
sub
dec
inc
xchg
cmc
cmpsl
test
sbb
jecxz
dec
and
jnp
ss
fdivs
mov
mov
scas
cmpsb
jo
push
adc
dec
cld
push
cmp
roll
jnp
out
xorb
fildl
jecxz
fiadds
leave
sar
dec
pop
mov
mov
sbb
dec
shl
or
sbb
or
push
test
sarb
jae
cwtl
xor
mov
cmpsl
outsb
cwtl
add
jae
fwait
lret
pushf
cld
or
jns
jno
out
jmp
pop
test
dec
cwtl
and
cltd
xchg
pop
pop
mov
out
cltd
mov
push
les
mov
shll
push
mov
jno
les
rcr
hlt
xlat
hlt
adc
cmc
pop
sbb
dec
mov
sahf
mov
sti
or
pop
incb
mov
fstpl
pop
daa
lcall
dec
sub
dec
add
dec
sub
adc
subl
xchg
sbb
or
fadds
bound
test
cmp
ljmp
inc
fistpl
jg
sub
xor
add
nop
outsb
jg
ljmp
and
cltd
inc
fsubs
adc
aad
out
stos
inc
add
mov
pop
lcall
lods
js
and
jo
divb
fst
ljmp
xchg
cld
fnstsw
fcomps
test
inc
mov
outsb
pop
mov
mov
inc
jmp
adc
adcb
sub
sub
mov
xlat
xor
adc
shrd
mov
cli
in
scas
jbe
out
xorb
cltd
push
iret
mov
rcrb
pop
jns
mov
ficompl
xchg
mov
lcall
test
mov
aas
jle
lds
rorl
jmp
repz
scas
or
out
jmp
test
out
cmp
sub
ret
fwait
mov
push
push
cli
call
sub
sbb
jl
sarl
lret
sbb
aad
dec
jmp
cmc
xchg
lods
add
jg
pop
xor
jno
jle
xchg
mov
xchg
into
clc
scas
stc
jecxz,pn
pushf
mov
jecxz
clc
jg
stc
fs
icebp
cmp
jbe
scas
cmp
and
adc
cwtl
repnz
das
xor
inc
in
or
out
sbb
add
test
scas
pop
aam
cmp
cmp
hlt
and
popf
out
pop
lea
pop
ret
mov
push
cmpl
lods
xchg
out
ss
int3
cs
sub
cmpsb
inc
out
sahf
jle
dec
daa
dec
in
sub
in
pop
outsb
mov
pop
inc
mov
xchg
sbb
enter
and
ret
push
out
jo
mov
rcr
lods
loop
mov
mov
addr16
jae
dec
ds
clc
ret
hlt
rcr
push
add
test
cltd
mov
jno
jb
movb
mov
fsubs
test
popa
xchg
loope
imul
cmp
test
nop
adc
ret
call
add
push
shl
inc
cld
hlt
sahf
mov
insb
aad
mov
loop
sbb
rorl
and
add
mov
lods
jnp
jmp
mov
insl
out
fisubrs
add
test
pop
lahf
scas
int
mov
mov
sbb
add
in
jl
xchg
dec
mov
xor
sub
mov
loope
idivb
dec
mov
xchg
mov
xchg
pop
loope
pop
cld
cmpsb
and
hlt
fdivrs
test
shlb
jmp
pop
ljmp
or
es
push
cmpsl
lods
pop
jne
pop
lcall
or
cmp
cli
add
adc
push
add
sub
out
mov
cmp
jle
sbb
sub
into
xor
mov
lods
in
push
fs
fwait
fwait
lret
cmp
icebp
lods
push
lcall
popf
insl
add
jle
cmp
inc
push
mov
mov
fisttps
outsl
mov
adc
inc
mov
pop
cmpsb
sbb
dec
movsb
or
fadd
adc
call
mov
pushf
pop
sahf
sbb
flds
sub
push
cmp
out
mov
hlt
aad
and
xchg
push
and
ja
and
rcr
out
mov
push
in
cmp
imul
scas
xor
ja
inc
sahf
jae
cmc
inc
or
arpl
clc
iret
pushf
dec
lcall
lret
out
cmc
in
adc
insb
cmpsl
fwait
xchg
lea
dec
adc
inc
test
fidivrl
push
push
xor
pop
mov
adc
fdivrs
xlat
or
cmp
shrb
mov
icebp
sti
xor
aad
in
testl
jmp
js
or
stos
iret
xchg
in
mov
dec
addr16
movsl
jmp
aaa
sbb
xchg
mov
and
cli
xchg
jbe
jns
test
push
push
xchg
in
xchg
out
xorb
sub
aam
and
aaa
in
pop
push
push
pop
xchg
and
xor
add
xor
xchg
nop
cmp
xchg
jecxz
pop
push
dec
mov
dec
dec
lret
leave
jo
in
fldcw
mov
xchg
xor
les
dec
mov
js
push
adc
or
or
fstpt
nop
sti
mov
mov
scas
popf
in
and
test
pop
ds
and
cli
xchg
mov
sub
outsl
popa
call
div
sti
out
and
mov
and
movsl
std
lds
mov
ljmp
sbb
fbld
xor
mov
mov
outsb
dec
lods
push
inc
push
repz
data16
sub
sahf
xor
daa
push
add
cmp
and
and
jge
js
sahf
cmp
cmp
pop
jae
lods
mov
das
mov
mov
dec
lds
xchg
inc
fcmove
dec
pop
pop
lret
mov
das
jno
xchg
push
sbb
mov
adc
dec
pusha
les
rol
mov
and
jp
add
push
bound
lods
cli
pop
shrl
das
adcb
aas
insb
imulb
js
xchg
xchg
adc
lds
ss
mov
loopne
mov
and
add
push
shlb
mov
mov
mov
sbb
xor
mov
push
call
dec
pop
mov
inc
in
test
movsl
mov
lods
aas
jno
ret
fnsave
nop
jnp
mov
lock
into
test
ret
xor
push
and
mov
dec
jne,pn
jp
daa
mov
inc
aad
xor
nop
mov
cmp
in
cmc
mov
mov
sub
aas
pop
insb
mov
jbe
idivl
jno
ret
in
lods
cltd
popa
fimull
filds
daa
jae
lcall
test
add
js
ss
out
push
jge
aaa
ss
mov
outsl
divl
dec
inc
dec
and
sbb
jecxz
pusha
mov
lock
xor
xchg
cmp
mov
fbstp
cmp
test
lock
sbb
pushf
dec
pop
jne
xchg
push
bound
cmp
jecxz
testl
cmpsb
shl
cmp
sti
int
insl
nop
js
ljmp
xchg
inc
lods
xchg
hlt
mov
inc
jecxz,pn
sbb
test
inc
mov
mov
or
jl
stc
fimuls
pop
sahf
cmp
and
or
in
test
int3
fiadds
aaa
ds
add
fimuls
pushf
push
scas
and
in
fs
aaa
testl
dec
jns
xchg
xlat
mov
sub
mov
inc
xor
xorl
pushf
lds
out
pop
jbe
les
cltd
xchg
add
add
xchg
push
sbb
or
mov
gs
lods
inc
sbb
mov
clc
add
ja
sub
adc
inc
dec
repnz
cmp
test
mov
jge
cmp
push
arpl
sbb
lods
lods
jne
sub
cmp
push
mov
jp
popf
leave
xor
dec
cmp
jecxz
xchg
mov
fmuls
repz
sub
cli
jecxz
push
pop
sub
dec
imul
dec
xor
add
int
ficompl
inc
adc
inc
pushf
xchg
insb
daa
mov
and
jge
jns
stos
mov
stos
push
xchg
adc
inc
mov
mov
mov
les
pop
iret
insb
adc
std
or
sub
add
cwtl
sbb
gs
repz
adc
dec
mov
adc
scas
xchg
pop
xchg
lcall
mov
adc
mov
lret
jbe
icebp
xchg
adc
mov
loope
cmp
cwtl
jecxz
pop
sahf
or
lods
addl
imul
pop
mov
mov
ret
jge
add
lock
in
icebp
and
idivl
sub
pop
arpl
jnp
add
xor
mov
adc
scas
mov
jmp
xor
stos
insl
inc
sti
inc
mov
push
mov
lock
stos
sti
add
xchg
addr16
outsl
fmuls
push
mov
sbb
mov
mov
xsaveopt
dec
push
and
enter
divl
imul
mov
insl
xchg
les
pop
sub
pop
pop
pusha
adc
bound
and
sarl
mov
push
sbb
out
adc
movl
and
or
and
mov
bound
xor
int3
loope
or
mov
pusha
stc
addl
aaa
neg
mov
adc
scas
int3
call
sub
xlat
pop
add
jge
sub
and
test
pop
inc
out
mov
es
sub
push
movsl
add
repnz
jne
das
push
fwait
dec
out
push
inc
rcll
inc
adc
mov
dec
es
or
mov
cmc
pop
add
inc
add
loopne
and
std
iret
shrl
inc
ljmp
or
dec
add
dec
jle
mov
pop
add
pusha
scas
sbb
cmc
push
clc
xchg
in
cmpsl
sbb
ds
inc
jno
sarb
sub
cmpsb
mov
mov
cs
pop
enter
xchg
lcall
sti
dec
rorb
sahf
lock
and
pop
mov
adc
xchg
scas
push
lcall
fidivrl
out
sbb
stos
pop
data16
lahf
mov
sub
stos
add
push
xchg
lret
push
ds
js
icebp
mov
xor
rol
adc
inc
pop
fdivrs
cmp
aas
fwait
sub
or
xchg
notb
jg
out
iret
add
mov
fistpll
cmc
cmp
inc
sar
mov
sbb
outsb
call
imul
cltd
or
lds
xchg
lods
das
xlat
enter
out
cmp
shrl
pusha
fucomi
es
popa
xor
js
hlt
add
in
jl
bound
lea
adc
out
mov
cmp
cmp
mov
inc
mov
imul
xor
sub
popl
sbb
jg
push
mov
jb
pop
mov
ja
push
push
push
mov
insl
cwtl
and
xchg
pop
mov
test
andb
cmc
mov
mov
add
add
push
loopne
mov
iret
and
adc
fwait
mov
adc
lea
xor
in
fdivrs
push
push
push
cmp
dec
mull
outsb
push
int3
scas
imul
fsubrl
dec
ja
out
movsb
or
cmp
jo
fstpt
insl
mov
add
push
pop
jnp
insl
sbb
in
jge
jae
cld
mov
les
or
call
arpl
fistpll
mov
mov
outsb
xchg
pop
sbb
sbb
gs
lea
adc
pop
fcomi
or
push
push
shrb
aas
xlat
xchg
push
cmp
into
outsb
or
mov
mov
adc
cmpsl
ret
cmp
mov
lds
cmp
sub
pop
scas
xchg
int3
push
lret
push
mov
xchg
push
mov
fs
scas
shll
ljmp
sub
sbb
in
lahf
jns
cmp
dec
jns
jmp
fcompl
js
jo
xlat
ret
inc
sub
xchg
sub
out
xor
fsub
movsl
rcrb
testb
push
scas
mov
push
cld
std
mov
popa
clc
add
sub
inc
cmp
daa
addr16
push
and
outsl
mov
xchg
and
jnp
adc
jo
or
sub
jns
sub
jge
popa
negl
shrb
outsl
call
dec
bound
insl
jmp
push
std
xchg
mov
jecxz
mov
jno
out
jo
outsb
aam
movsb
dec
pop
fs
std
ret
mov
push
stc
mov
in
ljmp
dec
js
pop
scas
lock
clc
in
js
inc
push
and
mov
loop
xchg
jge
out
adc
loopne
mov
cmp
dec
loope
je
sbb
ljmp
addr16
movsl
adc
loope
out
iret
inc
movsl
shrd
inc
sbb
mov
ret
rcrl
jnp
jno
jno
mov
dec
out
jbe
adc
and
mov
mov
fistpl
inc
lea
cmp
cmp
sub
cli
and
std
inc
pop
or
aam
or
mov
dec
loop
xchg
arpl
dec
int3
mov
lods
push
pop
mov
ds
mov
pop
push
mov
adc
out
mov
divl
arpl
insl
leave
or
xchg
push
or
sahf
or
inc
sahf
cmp
in
lea
test
testl
test
mov
ror
mov
mov
leave
scas
data16
xor
sub
in
sub
sub
and
subb
ret
mulb
push
xchg
mov
ja
xor
dec
add
pop
pop
ret
std
out
inc
ds
pop
add
add
ljmp
jnp
int
jns
pop
add
in
sub
popa
mov
adc
sbb
add
jecxz
sar
sti
imul
mov
and
es
xor
pop
pop
roll
ljmp
stc
mov
pop
cmc
adc
mov
or
mov
mov
pop
or
jmp
lahf
adcb
cmpsl
lods
xorb
hlt
dec
insl
push
data16
dec
xchg
mov
and
and
stc
adc
aad
out
xchg
fstpt
cmp
jle
add
xor
in
xor
inc
push
mov
es
mov
lret
shl
je
imul
lock
mov
mov
decl
pop
aaa
test
jmp
dec
enter
cwtl
movsl
iret
je
cmpsb
out
push
dec
push
aad
outsl
mov
out
lret
mov
jmp
arpl
mov
sahf
jbe
jle
pushl
pop
sub
push
mov
and
mov
or
mov
je
aam
in
mov
movsl
gs
push
ret
in
cmp
dec
mov
dec
mov
stos
pop
aas
push
and
jmp
and
or
jl
lahf
and
adc
xlat
outsl
xchg
jecxz
inc
div
test
jg
pop
mov
dec
jge
popa
fstl
adc
movsl
sbb
fwait
into
pop
addr16
sahf
dec
mov
cmp
movsb
inc
aam
mov
stos
adc
jbe
stos
outsl
xor
sbb
push
ds
pop
mov
sbb
push
gs
in
loopne
cmp
fisubs
push
xor
pop
jo
push
call
or
sbb
inc
int3
lahf
jno
push
jg
cmp
mov
mov
pop
popf
dec
dec
les
push
pop
fldt
cmpsl
fwait
scas
lock
or
fidivl
xchg
push
test
andb
pusha
mov
stos
push
adc
pop
in
inc
adc
addr16
mov
ljmp
insl
push
dec
xor
cmp
fsubp
mov
sbb
pop
xchg
push
mov
xchg
jp
adc
jl
jo
and
push
dec
push
xchg
jne
fisttpll
shrl
insb
lods
mov
in
data16
clc
call
xchg
xchg
sbb
btr
std
add
mov
inc
push
lods
push
mov
lock
lods
enter
fdivrl
test
xchg
xor
xor
insl
scas
movsl
mov
mov
push
pop
gs
fiaddl
cs
jae
adc
shrl
inc
pop
cs
xchg
outsb
fisttps
mov
dec
mov
imul
xor
dec
xchg
push
cmp
int
insb
clc
or
inc
notl
inc
sbb
inc
sbb
sub
icebp
cld
ljmp
push
push
add
gs
inc
inc
ljmp
push
inc
and
aam
lds
ljmp
loop
das
push
dec
das
mov
cmp
inc
loop
fists
in
leave
popa
imull
pop
push
fwait
inc
dec
aaa
sub
leave
xchg
aaa
pavgb
lock
loope
je
aaa
es
adc
add
sbb
fwait
inc
push
int
cmp
push
pop
mov
lods
or
arpl
lods
scas
sbb
outsl
push
movsb
xchg
stc
scas
sub
js
jno
add
ficomps
mov
add
es
mov
daa
lea
cmp
les
lret
dec
add
dec
mov
test
or
inc
call
dec
push
sub
lods
push
or
addr16
fcompl
adc
mov
mov
or
add
out
lret
outsb
fidivl
mov
insb
push
jge
es
rorb
clc
repnz
mov
xor
and
test
lea
xor
adc
stos
add
mov
mov
cmp
sub
mov
data16
sarb
out
mov
push
mov
je
cmp
jmp
dec
dec
jecxz
addr16
add
lds
pop
in
push
mov
adc
xor
pop
addb
lret
iret
test
dec
push
pop
and
fsubs
fcomps
mov
mov
daa
popf
jl
ret
mov
add
cmp
adc
enter
inc
aam
rol
test
jmp
stos
int
jle
mov
repnz
add
ficoms
xchg
adc
mov
das
mov
sub
lret
outsl
push
cmp
sbb
adc
addr16
cmc
loopne
int3
cmp
loope
roll
in
cmp
ljmp
addr16
xchg
push
lea
mov
jns
pop
dec
cmp
dec
int3
cmp
push
or
ja
repz
dec
outsl
rorl
add
imul
dec
xor
xchg
sbb
cs
sbb
rcrl
lods
jb
push
jge
dec
xchg
test
loopne
imul
mov
pushf
scas
aaa
sbb
out
push
adc
icebp
out
frstor
inc
or
gs
dec
push
hlt
mov
insl
push
mov
adc
adc
pop
outsb
addr16
pushf
stc
mov
xor
iret
xchg
mov
data16
scas
inc
sbb
cmpsb
push
int3
push
or
adc
es
mov
xchg
cmp
loopne
pop
movsl
div
ror
ret
jae
sub
push
mov
sahf
sbb
ret
cltd
sbb
popa
cmp
mov
adc
push
subl
lods
sub
mov
out
sbb
notl
dec
xor
add
popf
sahf
xor
ja
cmp
pusha
adc
sbb
pop
loope
lret
mov
notb
pop
aas
in
push
ds
dec
xor
sbb
jns
sub
push
pmaxub
in
imul
mov
lea
mov
sbb
inc
fisubrl
out
sub
pop
lods
or
mov
repnz
and
dec
xchg
negb
addr16
aas
and
mov
xor
xchg
out
inc
inc
xor
aas
cmp
jo
mov
sbb
iret
into
imul
mov
inc
sbb
test
test
mov
sbb
das
leave
fdivr
xor
test
xchg
xchg
inc
subl
enter
in
inc
sbb
jecxz
or
xchg
mov
xchg
in
xchg
loopne
int3
cmpsl
mov
sub
sub
stos
dec
fsubl
adcb
mov
popf
xor
fistpll
jbe
lret
sub
je
aas
and
fwait
stos
mov
ljmp
mov
sub
fwait
pusha
testb
imul
mov
call
cmp
mov
sbb
fbld
mov
fwait
add
cli
push
lock
ljmp
mov
xchg
jbe
mov
mov
xchg
mov
mov
xor
stc
pusha
aaa
ljmp
jnp
cmp
mov
mov
out
int
mov
sbb
pop
sbb
pop
jo
sbb
out
ss
pop
and
push
xchg
add
sub
and
xchg
movsl
jp
rcl
sub
dec
push
dec
push
andl
jmp
sub
jb
inc
pushl
lcall
lret
loope
es
ret
cmp
mov
and
stos
pop
dec
and
shll
and
in
jg
mov
test
lock
xchg
pop
push
jbe
pop
in
sti
or
sub
cmp
lcall
out
aaa
arpl
andl
lock
cmp
dec
adc
or
xchg
xchg
and
pop
cmp
mov
inc
sar
out
and
es
mov
cmpl
int3
bound
mov
push
cmc
push
in
dec
cltd
sbb
pop
cli
fs
sbb
jno
pextrw
inc
daa
adc
mulb
jl
incb
push
scas
push
jb
jae
fwait
lds
call
or
mov
or
push
ja
sub
in
stos
loop
mov
ja
sub
popf
fimull
movsl
rcl
mov
std
sub
sub
push
xlat
pop
xor
mulb
inc
in
mov
lods
push
lcall
and
cli
hlt
cmp
or
pop
dec
inc
jb
test
sarl
repnz
sub
push
call
nop
mov
rol
jmp
idiv
std
push
stos
push
sarl
dec
in
jle
cmp
popf
or
test
push
jmp
jl
jg
mov
mov
rolb
call
mov
les
imul
lock
dec
test
xor
mov
cli
dec
out
sti
aaa
out
filds
daa
inc
mov
mov
xchg
mov
ss
jp
scas
jo
cmp
lea
mov
js
mov
push
in
cmp
aas
icebp
testl
push
inc
dec
sub
and
xlat
cmp
cmpsl
stos
adc
nop
xlat
rorl
in
add
das
lahf
movsl
enter
and
sbb
add
and
lahf
jne
push
ret
out
insl
cmc
push
mov
hlt
mov
aad
std
int
mov
sti
pushf
test
addr16
pop
ret
cltd
dec
imul
movsl
ljmp
fistpll
xchg
fs
cwtl
or
sub
inc
sti
fisttpl
lahf
and
movsl
inc
sti
jns
rorb
push
push
jne
test
popa
and
jo
sbb
roll
or
lea
mov
xchg
arpl
out
xor
mov
repnz
xchg
mov
out
sti
dec
mov
mov
out
in
inc
jecxz
pop
in
lods
xchg
or
adc
dec
mov
dec
mov
xlat
in
cwtl
push
lcall
ror
minps
and
xor
and
add
ds
cmp
lods
movsl
loop
push
imul
pop
pop
mov
inc
inc
ret
or
sub
jge
stos
in
or
and
lea
jmp
lret
mov
loop
dec
outsl
movb
and
rcll
es
dec
xchg
enter
roll
dec
adc
and
je
and
dec
adcb
test
movsl
bound
mov
xchg
cmp
scas
jnp
dec
fst
sub
mov
fisttpll
adc
jmp
jo
inc
sbbl
pop
push
mov
push
mov
add
sbb
and
cmp
dec
and
pop
xchg
lea
and
loope
jo
cwtl
inc
in
adc
adc
jb
lock
fistpl
sub
pushf
movsb
mov
jnp
cmpsb
push
add
dec
ja
pop
nop
jle
js
jle
popf
push
adc
sti
jmp
repnz
jo
mov
xor
jmp
and
jmp
inc
nop
cmpsb
push
popf
es
sub
aam
out
inc
insl
mov
std
mov
sbb
ja
sub
int3
lds
sub
lret
jg
pop
in
push
sbb
hlt
jbe
adc
cld
jns
pop
or
or
jb
cli
cltd
addb
dec
sub
into
mov
or
divl
int3
adc
or
ja
lods
imul
rcll
lret
jns
into
sub
adcl
fwait
jmp
mov
in
mov
loope
jne
or
jge
and
sub
push
movsb
test
mov
int3
mov
mov
pop
cmp
xchg
ret
mov
cmp
mov
out
jecxz
scas
fidivs
ds
sub
jne
imul
arpl
inc
or
fldenv
mov
imul
or
push
aas
push
out
pushf
ficompl
push
cwtl
push
cmp
sub
dec
mov
mov
rcrl
data16
push
lock
and
scas
pop
adc
cmpsl
call
mul
jmp
dec
push
inc
jl
rorb
mov
aam
das
scas
dec
xchg
cmc
mov
inc
fsubs
adc
ficomps
fisubrs
pusha
cmp
mov
cltd
addr16
cmp
xchg
loopne
aas
scas
mov
loopne
or
add
rcrb
aad
addr16
mov
movsl
adc
xchg
mov
mov
ficoms
cmpsb
jne
fucomi
or
mov
cs
int3
jmp
or
xchg
cmpsl
xchg
dec
cmpsl
leave
out
add
jp
jb,pt
jo
popf
mov
lcall
dec
push
cs
out
movsl
lock
mov
inc
insl
mov
test
jecxz
mov
mov
xor
xor
inc
pop
inc
rorb
or
inc
imul
rcl
lods
test
jg
sahf
or
dec
bound
or
shl
sbb
sbbl
std
adc
cltd
outsb
push
mov
lret
pop
dec
xor
mov
xor
test
inc
or
jmp
xor
lahf
inc
test
rcll
inc
rcll
pushf
call
fisubrs
or
jae
aad
iret
popf
dec
or
test
sub
mov
sar
hlt
imul
mov
aad
mov
sub
fwait
mov
in
mov
in
test
jb
aas
cmp
mov
mov
jge
out
mov
cmpsb
out
xor
ljmp
sbb
xchg
pop
hlt
out
mov
add
shlb
inc
or
mov
pusha
jns
mov
mov
out
and
mov
aad
cmp
lret
fcmovu
hlt
es
jnp
cmp
scas
inc
insb
add
test
mov
imul
add
aam
jb
sbbb
mov
mov
sti
std
sbb
lds
jg
mov
in
dec
jmp
xchg
nop
arpl
cld
mov
mov
mov
aaa
jl
lds
pop
repnz
arpl
xchg
inc
xchg
dec
dec
sub
cmpsl
leave
mov
inc
xchg
push
and
pop
push
imul
inc
insl
popf
nop
or
movsb
fs
das
add
sub
hlt
sub
ficompl
lods
arpl
mov
in
clc
in
movsb
in
aad
loope
jnp
movsl
lods
je
subb
aas
outsl
cmc
cwtl
ffree
stos
out
or
out
ljmp
repnz
addr16
mov
scas
sub
jnp
fstl
mov
sti
and
mov
inc
mov
cmp
or
push
inc
add
jmp
daa
adc
pop
clc
mov
add
ds
ljmp
and
mov
mov
call
mov
mov
in
cltd
sahf
push
jnp
dec
stos
test
adc
lcall
cmp
or
pop
mov
bound
sub
stc
das
popf
std
sub
mov
xchg
pop
cmpsl
add
rclb
push
push
hlt
and
andb
pop
xchg
call
dec
mov
int3
sbb
cwtl
pop
sub
cmp
mov
xchg
add
arpl
push
cmp
fistl
int
dec
loop
pop
mov
lea
movsb
pop
iret
int3
sub
jge
mov
rcrb
iret
ret
scas
repnz
mov
cmp
orb
aaa
dec
push
mov
dec
jl
cmp
push
sub
icebp
pop
cmp
mov
mov
adc
es
lods
pop
lds
rcrb
aaa
imul
mov
jmp
jne
mov
xor
lea
xchg
mov
test
insl
mov
shlb
mov
mov
push
popa
sbb
aas
lret
imul
add
aaa
jae
out
out
mov
pop
iret
lcall
jg
or
out
sbb
addr16
cmp
cmp
mov
movlhps
jne
addr16
sbb
insl
cld
cli
daa
or
xor
sub
adcl
or
add
rcll
vpminub
je
add
repnz
adc
and
push
xchg
xchg
adc
and
sub
lds
jnp
mov
addr16
cmpsb
inc
xchg
add
push
shr
inc
xchg
subps
sbb
mov
int
sub
aad
sbb
adc
in
or
inc
push
aaa
xor
inc
mov
or
cmp
fistpll
fadds
and
fnstenv
lea
stos
mov
in
xchg
aaa
js
dec
test
dec
nop
push
outsb
out
dec
mov
into
test
mov
xor
xchg
add
call
wrmsr
lock
add
imul
hlt
and
fistl
cmp
lret
into
mov
or
sahf
sbb
idivb
mov
fbld
les
data16
lds
mov
inc
mov
out
add
mov
popa
mov
insb
repz
cs
out
or
mov
inc
ret
mov
inc
cld
xor
pop
or
mov
push
mov
adc
loop
xor
ds
push
pop
mov
mov
es
pop
push
and
push
test
xchg
pop
fcmovnb
mov
mov
push
add
jne
test
push
lods
and
and
ret
cmpb
loope
es
xchg
orl
or
dec
push
sub
cmp
loopne
out
jle
xor
dec
popf
jp
in
push
leave
cld
push
into
fsubrs
popf
ret
xlat
add
lcall
and
jb
pop
mov
aaa
and
aad
xchg
mov
inc
jl
push
inc
aad
and
sub
sub
popl
mov
xor
fnstsw
dec
add
loope
lcall
xchg
adc
out
xor
xor
rorb
xlat
movsl
je
xor
mov
sub
pop
ja
mulb
add
xor
push
cmp
pusha
inc
mov
notl
ret
cmpsl
lret
sbb
out
pop
les
icebp
mul
idivb
repz
movsb
xchg
pop
ja
mov
inc
sub
popa
add
js
xor
out
xchg
out
test
or
scas
cmc
ljmp
xchg
dec
lcall
aam
mov
xor
pop
jbe
mov
and
das
ss
or
stos
jno
pop
cltd
filds
clc
mov
cmc
pop
mov
hlt
push
stc
adc
pop
into
aam
jmp
decl
lds
or
mov
iret
lods
clc
lods
pop
bound
mov
push
jo
xlat
stos
cmp
iret
cmpsb
cwtl
std
or
in
cltd
mov
add
cmp
enter
xchg
adc
push
clc
lret
out
fists
ss
test
fcmove
push
clc
mov
sbbb
fsubrl
out
scas
ret
inc
hlt
fcmovne
xor
and
loop
les
mov
imul
std
adcl
in
scas
addr16
movsb
dec
add
les
repz
lods
inc
jp
fnstsw
jb
sarb
push
lahf
dec
jne
jae
lock
dec
jmp
xlat
mov
fdiv
out
adc
or
push
adc
lahf
test
daa
dec
mov
sbb
adc
hlt
mov
inc
incb
sbb
or
pop
xchg
insb
dec
cli
rcll
cmp
inc
clc
or
cmpsl
and
cmpsl
lret
add
or
pop
pop
scas
stos
call
push
push
mov
jge
inc
popa
mov
add
in
fcmovnu
mov
xchg
cmp
ss
jo
addr16
push
jo
pop
lods
aad
dec
sub
ljmp
int
aad
inc
out
mov
pop
dec
mov
fcmove
aad
movsl
mov
mov
or
ret
xchg
xchg
xchg
pop
xor
std
in
loope
clc
jp
fistpl
into
out
sub
push
repnz
sar
push
sub
dec
jg
xor
cmpl
jbe
or
xchg
lock
hlt
in
adc
mov
enter
mov
insl
xchg
xchg
loope
xchg
pop
pop
cmpsb
jne
jg
cmpsl
jae
add
add
or
mov
pop
addl
push
outsl
push
bound
loope
les
imul
push
xchg
mov
jns
in
dec
int
inc
es
sahf
fbld
mov
repz
inc
cmp
notb
dec
push
or
lods
dec
cld
mov
and
stos
int3
fistps
pop
dec
xor
outsl
and
sahf
pop
and
aas
cld
fadd
mov
or
sub
inc
pop
pop
leave
mov
insl
xor
push
fistpl
dec
inc
icebp
sti
and
shll
inc
pop
stc
ret
xor
incb
out
adc
mov
sti
lahf
jo
loop
or
jne
jns
xor
imul
dec
push
in
in
outsb
test
adc
rorb
sarb
loop
aam
jl
outsl
add
stos
ret
sub
test
dec
sbb
lret
xor
cvtdq2ps
fcompl
repnz
cltd
push
mov
push
cmp
dec
sub
in
push
push
dec
mov
fistpl
mov
or
inc
pop
cwtl
popa
sub
in
add
outsb
jecxz
pop
pop
mov
js
pop
in
sbb
loope
xor
mov
hlt
ret
ljmp
pushf
int3
or
pop
xchg
negl
jmp
sahf
jmp
scas
movsb
mov
dec
mov
pusha
test
mov
loopne
stc
adc
xchg
mov
mov
loop
xchg
rorl
mov
mov
pop
loopne
mov
pushl
or
pop
and
xlat
out
das
pop
and
and
scas
dec
stc
jo
test
sbb
mov
jecxz
out
xchg
int3
outsl
xchg
fcmovnu
push
sub
mov
pop
aam
lea
scas
sbb
cmpsl
fstps
jno
leave
les
adc
mov
data16
mov
inc
mov
push
or
daa
or
mov
cmp
int
rcll
or
stos
or
rcr
mov
loope
dec
and
xchg
ret
loopne
push
jp
xor
outsb
mov
popf
xor
ljmp
add
loope
mov
sbb
sub
es
cs
flds
dec
cmpsl
ja
jae
movsl
mov
push
cli
jnp
loope
sti
ljmp
jg
fstl
mov
adc
repz
xlat
adc
dec
aam
adc
push
adc
or
mov
pop
mov
inc
jmp
pushf
sahf
push
cli
jge
mov
push
push
out
sub
pop
push
mov
pop
push
or
.byte
.byte
cltd
.byte
popf
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
xchg
add
sbb
sub
in
aas
mov
data16
jecxz
das
pop
cs
cmp
imul
sbb
imul
sar
pushf
insl
xchg
ficoms
cmc
test
jge
or
adc
jl
stc
fcmovb
ret
mov
jg
sub
xor
in
sahf
in
fs
mov
test
xlat
xchg
dec
jo
xor
fsubrs
dec
pop
fisttps
test
xchg
inc
cmp
aam
icebp
ret
mov
push
iret
jecxz
jae
jl
cmp
shll
.byte
.byte
pop
add
add
ds
add
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
ds
add
add
add
add
add
addb
add
ds
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
enter
add
add
add
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
ds
add
add
add
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
ds
add
add
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
ds
add
add
add
add
add
add
ds
add
add
add
add
add
inc
add
add
ds
add
add
add
add
add
push
add
add
ds
add
add
add
add
add
pusha
add
add
ds
add
add
add
add
add
jo
add
add
add
ds
add
add
add
add
add
addb
add
enter
add
add
add
add
add
nop
add
add
ds
add
add
add
add
add
mov
add
add
enter
add
add
add
add
add
mov
add
add
add
ds
add
add
add
add
add
rolb
add
enter
add
add
add
add
add
rolb
add
ds
add
add
add
add
add
loopne
add
add
add
ds
add
add
add
add
add
lock
add
ds
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
adc
add
add
add
ds
add
add
add
add
add
and
add
add
add
ds
add
add
add
add
add
xor
add
add
add
ds
add
add
add
add
add
inc
push
add
add
add
ds
add
add
add
add
add
push
push
add
add
add
ds
add
add
add
add
add
pusha
push
add
add
add
ds
add
add
add
add
add
jo
add
add
add
ds
add
add
add
add
add
addb
add
add
add
enter
add
add
add
add
add
nop
push
add
add
add
ds
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
push
add
add
add
ds
add
add
add
add
add
add
push
add
add
add
ds
add
add
add
add
add
add
push
add
add
add
ds
add
add
add
add
add
add
push
add
add
add
ds
add
add
add
add
add
add
pop
add
add
add
ds
add
add
add
add
add
add
pop
add
add
add
ds
add
add
add
add
add
add
pop
add
add
add
ds
add
add
add
add
add
add
pop
add
add
add
ds
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
addb
add
add
in
add
add
add
clc
sbb
add
add
in
add
add
add
adc
add
call
add
add
add
add
adc
add
in
add
add
add
inc
pop
add
test
add
in
add
add
add
cwtl
incb
add
add
add
add
add
stc
add
push
add
add
add
add
and
add
add
add
loopne
add
test
add
in
add
add
add
js
add
push
add
add
add
add
add
in
add
add
add
dec
pop
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
scas
add
add
add
in
add
add
add
sub
add
and
add
in
add
add
add
push
scas
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
in
add
add
add
fs
add
pop
add
add
add
add
add
add
add
add
in
add
add
add
jo
add
or
add
in
add
add
add
jl
add
add
add
in
add
add
add
subb
add
add
add
add
add
add
in
add
add
add
mov
add
in
add
add
add
hlt
mov
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
xor
sbbb
or
adc
mov
cmpb
les
jge
mov
in
orl
insl
ret
inc
xchg
mov
in
fdivrs
pop
jge
cmp
rcll
xchg
dec
es
xchg
and
inc
jns
push
dec
hlt
and
mov
mov
das
shrb
sub
pop
mov
es
repnz
lahf
dec
and
mov
sbb
mov
js
xchg
fisubs
lock
sub
lock
mov
pop
loope
pop
mov
je,pt
dec
shll
fst
mov
jmp
and
test
loopne
sarb
mov
push
bound
mov
out
jmp
scas
lcall
lahf
dec
andb
and
es
fs
adc
push
in
pop
mov
rclb
inc
pop
cld
xor
ffree
roll
xor
inc
loop
jns
cwtl
arpl
and
mov
jg
insl
aas
jae
pop
loope
repz
mov
ficoml
cld
imul
int
int3
pop
pop
hlt
int
and
ljmp
xchg
xchg
je
ret
mov
movsl
aaa
adc
cmpsl
das
sahf
and
and
jnp
aaa
sub
cmp
push
int
nop
cli
mov
push
adc
sub
push
mov
lds
and
xor
repnz
fildll
ss
push
fstpl
cmp
push
sbb
cwtl
outsl
mov
clc
xchg
aam
imul
lret
mov
sbb
mov
test
add
lea
cmpsl
lock
pop
dec
dec
scas
inc
dec
jne
pop
jl
inc
fistps
cmp
mov
lods
sub
mov
jno
arpl
les
mov
fwait
mov
lds
fadds
repz
and
xlat
fdivrl
jge
pop
xchg
mov
cmp
pop
lret
sub
pop
lcall
jb
gs
xor
or
xchg
mov
push
push
adc
pop
xor
cmp
rcrl
cmp
sbb
mov
data16
dec
xor
addr16
push
jns
lods
lret
xor
add
enter
sti
mov
xchg
fnsave
into
addr16
gs
sbb
or
sbb
xor
in
jnp
add
cwtl
and
cmp
lds
cmp
inc
fs
add
and
dec
mov
popf
icebp
inc
testb
sbb
mov
inc
insb
mov
mov
push
lock
mov
sub
daa
cltd
addr16
iret
cmp
xchg
roll
stc
into
xchg
test
in
cmp
add
ret
jae
mov
pop
popa
xchg
mov
lret
and
push
cmp
fisubrl
sbb
jg
shlb
cltd
popa
mov
xchg
call
iret
das
cmp
mov
or
mov
in
arpl
push
pop
jns
cmp
mov
sub
lock
adc
sbb
outsb
jno
pusha
add
pop
cmp
pop
sub
leave
dec
iret
cmc
sub
cmovbe
ja
hlt
lods
jmp
fcomps
movl
push
mov
adc
xchg
jb
mov
dec
in
dec
cmpsb
mov
inc
pop
jns
lahf
xchg
adc
xchg
push
lcall
int
push
jb
dec
pop
movsl
clc
out
shl
sbbl
add
sbbb
popa
hlt
jmp
and
mov
cmp
mul
xchg
out
dec
jb
dec
ja
lds
outsb
push
push
sahf
inc
inc
inc
cmpsl
adc
mov
inc
sbb
ja
inc
adc
jnp
cmp
mov
das
iret
gs
ds
les
test
test
push
aam
int3
fcompl
inc
xchg
test
push
outsl
sbb
pushf
mov
xchg
arpl
test
xchg
adc
or
or
lods
xchg
iret
mov
movsb
mov
cmp
jmp
ss
popf
nop
add
mov
aaa
push
pop
test
stc
xor
push
orb
shr
cli
jno
jecxz
enter
sub
call
mov
call
mov
out
inc
mov
jl
call
int3
insb
scas
movsb
js
sbb
daa
test
inc
dec
rorb
cld
inc
mov
gs
xchg
fnsave
cmp
mov
xlat
lahf
ret
sub
daa
iret
pop
fists
je
push
inc
aaa
mov
aam
fs
mov
pop
cltd
fiadds
sarl
mov
push
sub
pop
push
cli
or
mov
shlb
push
push
xchg
mov
xor
outsb
mov
sub
adc
fwait
cmpb
cmp
insb
movsb
fsubs
aad
pusha
sub
dec
adc
xor
stos
sub
in
test
lock
push
les
add
jecxz
and
jbe
popf
insb
cmp
shrl
cmp
dec
arpl
sbb
iret
ret
xchg
stos
pop
std
mov
les
out
mov
notb
sub
sti
xchg
xchg
clc
nop
xor
xchg
popa
scas
sbb
jmp
das
add
jl
movsl
sub
adc
movsl
xchg
add
cmp
lds
cltd
xor
shll
dec
pop
jge
insb
xchg
sbb
mov
jle
or
pusha
pop
and
subl
nop
sbb
mov
jl
fisubl
and
bound
test
popl
mov
mov
test
xor
loope
sbb
sbb
push
shrb
push
fidivrs
cmp
in
jp
xchg
test
addr16
xchg
lahf
mov
inc
add
xchg
xor
gs
jne
mov
mov
xchg
adc
fbld
mov
fiadds
fists
fsubrs
jne
fwait
nop
mov
lea
loopne
out
into
and
outsb
cmp
xor
mov
and
mov
and
ret
call
rorl
jns
push
orl
or
add
jae
push
jle
cmp
jo
jmp
out
rcrl
les
clc
push
pusha
push
jge
repnz
loope
cmpsl
loop
repnz
pop
rcrb
lahf
xchg
mov
hlt
sti
and
lret
and
add
adc
inc
mov
inc
dec
push
loopne
ret
test
add
hlt
jno
push
fiaddl
into
mov
int3
xchg
pusha
mov
mov
js
inc
cs
leave
cmp
daa
sbb
loop
out
dec
fldt
ficompl
loop
pop
mov
scas
xchg
dec
and
test
in
gs
lret
mov
sbb
push
bound
es
in
xor
sub
ja
lcall
aas
fisttpll
and
popa
test
aad
in
cmpsl
adc
add
mov
fisttpll
out
xchg
and
mov
shll
sub
jl
std
pop
out
push
shll
adc
fwait
xlat
frstor
shr
inc
scas
push
inc
in
sti
sbb
daa
jne
xchg
js
and
mov
imul
add
bound
inc
pop
fmulp
xchg
adc
stc
push
in
scas
jg
ja
xchg
or
push
xor
and
scas
out
popa
shll
xor
xor
dec
mov
lcall
inc
cmc
cld
test
or
cmpsb
ds
imul
mov
pop
lea
adc
lods
jg
repz
xchg
inc
adcb
dec
test
push
jb
mov
in
mov
lret
mov
push
mov
cmp
movsb
stc
movsl
addr16
inc
fdivrs
jo
shrl
loopne
cmp
xchg
jbe
mov
mov
xor
stos
add
pop
sub
and
das
sub
cmp
jbe
inc
scas
leave
fistl
jl
out
js
jecxz
push
xchg
mov
sti
cmp
js
push
aad
subl
xchg
insl
push
nop
and
test
movsb
jp
mov
mov
jne
pop
xchg
cmpsl
mov
ficoml
adc
shl
cmpl
cli
adc
fcoml
sub
inc
in
pop
cmp
jnp
fldl
mov
pop
jnp
out
mov
aaa
inc
add
sbb
lea
xchg
std
in
xor
mov
pusha
mov
rcrb
fs
adc
loop
adc
sahf
mov
rol
inc
sbb
jmp
mov
cld
rolb
fmull
mov
dec
sub
ja
cmpsb
add
or
out
insl
pop
push
and
test
mov
test
dec
in
xchg
hlt
pop
adc
repz
cmp
sbb
mov
dec
cmc
and
flds
divl
int3
jb
sub
xchg
and
ss
jmp
insl
sahf
add
pushf
bound
pop
jle
lahf
and
icebp
pop
aas
jbe
cmp
sbbl
test
lds
push
test
add
adc
jno
inc
xchg
into
jge
mov
add
or
ss
scas
mov
sub
loopne
jmp
xor
push
pop
jne
dec
in
daa
or
jbe
rol
out
sbb
das
pop
cmpsl
pop
fadds
mov
adc
ret
jbe
int
rolb
loopne
sub
mov
inc
pop
xchg
adc
pop
in
repnz
jle
mov
stos
stc
or
int3
push
repnz
cmp
cmc
inc
jns
call
inc
sbb
adc
sub
sbb
inc
mov
fcoms
cs
ret
pop
adc
rclb
sbb
setbe
lcall
fsubl
sub
ja
in
pop
xchg
mov
add
sti
lods
and
cmc
movl
les
mov
imul
sub
push
ret
mov
mov
orb
adc
xchg
cmc
fs
mov
stos
mov
loope
adc
hlt
cs
das
and
lods
shll
xor
sub
xlat
les
mov
adc
aaa
int
sbb
in
jne
popf
fwait
adc
pop
and
and
add
mov
or
add
aas
mov
mov
in
mov
inc
mov
push
das
mov
test
add
xchg
cmpsl
popa
divb
dec
add
test
into
lahf
iret
xlat
jno
das
cmpsb
mov
lods
mov
push
pushf
test
ss
sub
fmul
das
ss
adc
rolb
bound
adc
xchg
out
dec
in
push
sub
xchg
pusha
stc
and
imul
fwait
mov
int3
int
push
mov
mov
imul
jo
and
or
xor
loop
inc
je
xor
movsl
xchg
cld
and
pop
rcrb
out
push
sbb
mov
lods
sbb
add
mov
addr16
popf
xlat
insl
int3
xor
int
loope
das
mov
mov
clc
insl
mov
or
xchg
inc
jo
lods
movsl
push
mov
push
xlat
ss
ficomps
test
out
and
arpl
je
outsl
pop
cmp
fwait
jne
fadd
lret
out
xchg
icebp
push
aam
sarl
adc
inc
insb
cmp
jno
push
dec
cmp
or
mov
sbb
js
push
sahf
repz
add
out
stc
xchg
in
add
call
and
xchg
cmc
cmp
mov
mov
rcll
popf
mov
add
repz
negl
jge
sub
insb
jo
imul
cmp
ja
out
mov
or
aad
movsl
dec
adc
and
pop
dec
mov
sbb
fiadds
jp
pop
out
mov
dec
push
push
xor
mov
jb
xorb
adc
xchg
or
xor
movsl
jg
stos
fmuls
stc
icebp
push
inc
or
mov
fidivl
push
leave
repnz
push
xor
pusha
mov
jne
xchg
or
hlt
push
add
inc
shrb
popl
nop
jmp
xor
out
cmpb
cmc
xor
jno
xchg
mov
dec
jecxz
mov
and
xlat
jmp
sar
lea
test
mov
xor
in
cmpl
mov
lahf
mov
adc
popf
pop
sbb
aam
call
adc
stos
cmp
push
dec
or
or
xchg
push
push
ret
mov
jns
shl
pop
jl
sub
sbb
or
adc
fstl
or
inc
xor
pop
fwait
dec
sub
orb
fnsave
cltd
dec
mov
sub
negb
mov
pop
cmc
test
and
add
push
jecxz
sbb
or
sub
ret
mov
pop
mov
or
push
or
and
sub
adc
lcall
aas
aas
dec
mov
push
xchg
sbb
dec
push
inc
dec
xchg
inc
adc
ret
dec
sub
fsubrs
xor
xchg
icebp
ret
push
fisubl
stos
and
inc
cmpsb
jb
mov
shll
xor
fisttpl
xchg
xor
frstor
mov
adc
outsl
call
cli
aad
idiv
sbb
mov
lahf
and
lret
mov
mov
sbb
pop
into
pop
mov
ret
sub
or
shl
xchg
push
jmp
ss
sub
pop
cmp
xchg
ljmp
les
mov
cmc
push
ds
fsts
xchg
movsb
movsl
lea
lods
rclb
sub
out
adc
mov
pop
xor
in
push
out
fcoml
or
xorb
jnp
rcrb
lcall
inc
sub
inc
jb
push
jb
xchg
imul
xchg
sub
cwtl
mov
mov
push
std
icebp
cli
imul
out
sub
inc
push
and
call
cmp
int
pop
cmp
pop
inc
cmpsl
adc
int3
push
nop
jmp
test
loope
pop
adc
xchg
jb
mov
std
jecxz
push
xchg
push
insl
orb
jbe
pop
test
mov
dec
sar
or
rolb
repz
push
cmc
lods
sub
and
in
adc
ds
lea
int
inc
add
and
dec
sub
jbe
jl
idiv
mov
mov
jno
sub
sub
add
push
iret
in
cmp
xor
stos
inc
das
jp
and
dec
adc
and
push
add
fistl
fiadds
ja
adc
test
mov
pop
mov
adc
repnz
sub
mov
mov
aas
mov
pushf
hlt
pop
cmc
imul
sub
sub
sub
out
push
ss
out
test
mov
dec
jae
ss
dec
inc
push
lds
fnstsw
jne
mov
es
and
dec
insb
xor
jmp
subb
push
and
fidivs
and
loop
add
ja
jnp
xchg
adc
iret
popa
pop
push
sub
sbb
xlat
jp
jl
imul
shll
in
jns
dec
xchg
popf
gs
jecxz
leave
dec
dec
mov
mov
mov
push
ret
push
lret
cmc
loopne
sbb
ds
iret
xchg
pop
add
int
dec
and
bound
mov
mov
mov
add
sub
xor
cwtl
lret
int3
add
jae
adc
dec
out
sbb
dec
push
pop
inc
or
xlat
xor
pop
pusha
lret
pop
outsl
mov
lret
sub
leave
idivb
in
xchg
jg
cs
test
cmpsl
fists
and
testb
in
pushf
mov
dec
push
lea
push
dec
adc
add
orb
xor
and
dec
push
jge
pusha
mov
sbb
jnp
shlb
fisubl
cli
cmp
movsb
lret
sarl
mov
cld
lods
jo
sub
in
rcrb
pop
les
iret
or
int
jp
aaa
adc
insb
pop
sahf
sbb
into
fnsave
mov
lods
push
lcall
in
out
inc
push
cmp
xlat
mov
lcall
rol
sbb
repnz
cltd
mov
loop
xchg
and
mov
negb
fwait
and
mov
jmp
lods
test
cmpsb
out
out
xchg
loopne
push
cli
mov
ljmp
mov
sbb
test
cmp
lock
xor
xlat
jnp
movsl
roll
jmp
stos
cmp
test
lret
jae
mov
je
flds
mov
pop
and
or
lahf
arpl
xchg
and
fistpll
xor
mov
xchg
test
scas
dec
pop
fsubr
scas
xchg
xor
mov
out
out
sbb
jno
mov
stos
push
inc
test
push
add
fildll
push
jns
inc
dec
fisubrl
popa
jnp
cli
xor
mov
jmp
lds
jne
ljmp
inc
aam
cmpsb
fcmove
int3
iret
ret
jae
fdivp
sahf
sahf
stos
mov
or
pop
daa
cmp
add
sahf
fisubl
jg
push
xchg
adc
dec
popf
in
add
mov
cli
addr16
test
xchg
psubsb
push
adc
dec
xor
popf
dec
pop
lea
cltd
add
popa
xor
or
xor
sub
mov
inc
push
push
clc
sbb
lock
cmp
divl
stos
int3
mov
cld
mov
loop
std
js
arpl
lock
push
mov
mov
xchg
ljmp
mov
jns
idiv
sub
shrb
popa
jno
aam
stos
das
mov
mov
dec
add
mov
dec
enter
mov
pop
daa
loop
push
fbld
lahf
mov
mov
mov
sbb
mov
adc
mov
fadds
xchg
addl
arpl
stc
negl
xchg
ds
sbb
in
sub
lahf
inc
rorl
jg
dec
xchg
inc
push
pop
pop
cltd
shr
push
sbb
sub
daa
adc
add
dec
mov
ret
adc
aad
pop
jbe
stos
xchg
adc
in
mov
or
mov
or
jnp
push
ljmp
fdivl
pop
aas
push
fsubl
icebp
jl
jmp
repnz
ss
out
jo
je
fsub
in
mov
test
mov
mov
pushf
adc
mov
and
jns
mov
aam
in
daa
mov
daa
mov
aas
mov
cmpsl
push
adc
imul
sub
jge
cmp
notb
xchg
mov
les
jp
in
into
test
jo
fsts
bound
sti
stos
test
jnp
fdiv
dec
and
stos
sbbb
fwait
insb
sbbl
add
mov
adc
cmc
mov
adc
sbb
cmp
stos
mov
dec
jg
in
push
sub
lods
pop
inc
ja
aas
sbb
dec
mov
and
out
lret
mov
mov
sub
shll
or
stc
dec
add
inc
mov
pop
jns
mov
mov
inc
pop
jbe
jp
jb
stos
push
outsl
sub
pop
insl
sbb
arpl
inc
call
inc
lock
or
rcll
sub
jb
bound
sub
lock
fs
add
sub
dec
cmc
cmp
loopne
mov
arpl
jno
popf
je
imul
jecxz
xor
and
inc
bound
rcrl
adc
cmc
fidivl
mov
aad
fcmovnb
fwait
imul
sbb
rcrl
pop
push
repnz
mov
xor
pop
adc
or
rcrl
cli
sbb
mov
mov
fwait
mov
and
adc
sub
into
cmp
mov
das
push
mov
fcmovnbe
lock
pushf
sahf
cwtl
adc
adc
aaa
mov
mov
adcl
jecxz
mov
or
div
ret
adcb
mov
sub
cli
shrb
ljmp
push
adc
sbb
in
xchg
xor
fistpl
sbb
roll
gs
push
std
movsl
adc
arpl
movsl
call
rcll
aaa
cmpsl
xchg
ljmp
xlat
jnp
addr16
pop
divl
xor
cmpsl
stos
cwtl
out
sub
test
push
push
adc
xor
cwtl
mov
mov
das
pop
pop
dec
sbb
or
pop
das
xor
rcrl
pop
xchg
fwait
bound
adc
pop
jmp
and
adc
mov
in
jnp
dec
adc
mov
repz
lods
mov
ja
push
pop
pop
sbb
enter
arpl
sbb
or
pop
in
mov
stos
fstl
rcll
les
stc
in
push
or
or
ljmp
bound
adc
jecxz
std
adc
inc
pop
sub
mov
loope
lods
aad
das
daa
xor
push
std
mov
sbb
mov
xchg
filds
add
jno
or
pop
pop
sub
inc
daa
cmp
pop
xchg
and
shrb
jecxz
in
shl
sub
xchg
cmp
imul
movsb
cmc
mov
mov
leave
jb
add
xlat
sar
fsubrs
aad
mov
push
push
dec
xchg
jmp
sbb
cld
pop
mov
inc
lock
fisttps
jb
and
xor
outsb
stos
add
dec
and
mov
xchg
outsb
imul
and
cmp
and
leave
lods
pop
subl
js
pushl
pop
movsb
int
xchg
je
pop
sub
insb
push
sub
jbe
jns
int3
xor
arpl
lea
dec
call
cmp
pop
jne
test
add
daa
add
int
pop
mov
and
mov
fcmove
popa
enter
sbb
cmpsb
je
loopne
dec
jae
bound
int3
mov
aas
es
push
mov
push
add
cwtl
ss
loopne
jmp
xchg
cmp
scas
jnp
psubsw
xchg
push
popa
lret
dec
call
or
movsl
cli
imul
sub
push
cmp
mov
in
outsb
mov
je
fcoms
and
cmp
mov
mov
sbb
mov
sbb
imul
inc
loop
cli
js
lret
pushf
js
xchg
dec
inc
adc
andb
sbb
push
mov
inc
push
shl
cmp
inc
ret
dec
jge
sub
sbb
lods
jne
mov
mov
mov
fildl
and
pop
xchg
adc
xchg
lock
ljmp
sub
or
ret
jl
ret
in
out
adc
xchg
insb
or
outsl
cmp
or
scas
out
mov
shlb
outsb
insb
xchg
ficompl
bound
pop
lods
cmpsl
and
pop
es
lds
dec
mov
test
pop
cmpsl
mov
stc
imul
std
and
lea
aad
inc
shl
dec
popf
jnp
aaa
sbb
dec
js
adc
xchg
jo
fwait
setl
adc
or
out
data16
mov
sbb
aaa
loop
jecxz,pt
scas
fcoml
pop
scas
jle
aaa
and
mov
jnp
cmp
sbb
movsb
push
clc
cmp
push
xchg
ds
push
cmpsl
stos
lret
mov
add
and
test
push
mov
outsl
xchg
aad
jns
decl
mov
std
pop
repnz
std
ret
mov
add
loope
aad
inc
mov
sahf
dec
fsubrs
and
adc
xor
xor
jae
push
mov
sarl
les
mov
xor
sub
xchg
sub
stos
fs
or
mov
inc
imul
int3
icebp
sub
cli
aas
aaa
inc
mov
push
jo
test
imul
jl
lea
insb
cmpsl
mov
or
aas
jne
movsb
sub
mov
push
inc
movsb
addl
outsl
subl
jg
cmp
mov
shll
xchg
inc
pop
ja
outsb
popf
mov
sarl
xchg
xchg
loopne
push
xor
or
jne
and
adc
js
loop
imul
pushf
sub
jno
or
test
xorl
fwait
inc
mov
adc
ljmp
in
xorl
mov
movsb
push
ret
push
cmp
cmc
push
test
in
xor
or
pop
int
dec
adc
push
adc
xchg
cs
sbb
fwait
xchg
mov
cmp
dec
pop
fidivs
test
cmp
mov
mov
xchg
xorl
jb
mull
scas
outsl
push
das
sbb
lea
jmp
into
sub
mov
sbb
mov
loope
push
out
fbld
mov
pop
setge
pop
xchg
mov
aam
pusha
sub
orl
inc
out
cmp
xchg
arpl
adc
dec
push
arpl
jns
xchg
or
jnp
int
sub
fstpt
xchg
add
mov
mov
mov
push
popl
or
sahf
push
jmp
hlt
icebp
mov
add
insb
lcall
ljmp
pop
pop
mov
movsb
jg
xchg
popa
iret
push
mov
mov
jns
lret
mov
test
test
lods
or
lods
xchg
mov
enter
pop
mov
sub
mov
fildl
andl
test
clc
jge
lds
xchg
ljmp
aaa
add
sahf
roll
pop
pop
sub
sub
stc
into
ja
shll
add
das
ds
jp
mov
je
cld
in
pop
into
xchg
dec
rclb
xchg
outsb
lcall
mov
cwtl
and
xor
push
shrb
loop
mov
dec
in
test
push
shl
push
pusha
push
ja
cltd
mov
mov
cmp
add
add
daa
out
nop
pop
pop
decl
fisubrs
xor
cli
xor
cld
xor
sbb
movsl
adcl
jmp
xor
inc
lea
addl
cmp
pminsw
mov
int3
out
stos
jg
int3
adcb
mov
sub
ficoml
movsl
pop
push
pop
addr16
or
push
out
movsb
dec
popa
mov
cld
cli
shlb
lea
mov
mov
pop
inc
repz
push
and
mov
or
jmp
repz
push
add
xor
mov
outsb
dec
push
inc
jmp
sbb
int3
push
mov
cmp
sbb
xchg
push
cmp
leave
push
jnp
gs
cmc
jp
mov
mov
or
inc
pusha
pusha
repz
inc
aad
dec
cli
jo
bound
or
mov
loop
sbbl
inc
mov
xor
pop
mov
mov
mov
xor
aam
stos
cmpsb
adc
adc
stos
pop
imul
sbb
dec
ljmp
je
bound
sub
lds
xor
loope
out
xor
les
in
pop
xchg
pop
icebp
xor
cmc
out
push
icebp
mov
sbb
shr
movsb
xchg
test
popa
aad
mov
and
xchg
sarb
test
jle
push
sub
and
ljmp
push
mov
add
and
and
mov
lcall
mov
pop
repz
sub
out
dec
adc
adc
sub
xchg
xchg
mov
jb
jnp
sbb
or
ja
loop
mov
enter
ret
repz
aaa
push
out
data16
push
pop
sbb
ret
loope
push
xchg
loope
push
mov
mov
cltd
lods
stos
aam
adc
pop
les
leave
xchg
rcll
int3
dec
fmull
lea
cmp
sub
inc
push
push
insb
enter
in
dec
call
shrb
pop
mov
das
mov
out
xchg
mov
mov
popa
mov
ret
mov
ds
shrb
sub
and
aad
adc
xor
pop
mov
push
jmp
mov
ljmp
xorl
cmpb
pushf
aas
rcrl
imul
sub
hlt
xchg
shrl
push
movsb
or
jle
imul
js
xor
and
pusha
rcl
vmwrite
fistl
mov
popf
or
sti
in
mov
inc
movsl
and
pop
shrb
mov
call
dec
pusha
push
sbb
lcall
mov
icebp
xchg
xor
push
ret
fsubs
push
jno
jbe
sbb
int3
add
push
xchg
push
inc
add
and
mov
outsb
xchg
inc
scas
mov
addb
fcoml
mov
mov
pop
xor
je
shlb
push
push
dec
sbb
xor
jg
mov
je
decl
pop
xchg
popf
fcmovnu
inc
mov
ljmp
sti
insl
shl
lcall
ljmp
insl
stc
mov
add
xor
mov
pop
dec
icebp
cwtl
sbb
std
xor
and
lcall
inc
pop
sti
fbld
or
test
cmp
jecxz
rcrl
mov
mov
cmp
mov
pushf
imul
subl
repnz
push
lock
push
cmp
and
mov
push
fs
stos
fdivrl
call
ret
rorl
push
push
enter
wbinvd
pop
lock
xor
movsl
jp
or
fprem1
dec
xor
shr
inc
stc
lock
scas
mov
ud2
push
sub
sahf
jo
jnp
movsl
xchg
inc
and
arpl
inc
jg
push
fisubs
xchg
cmp
das
lahf
jge
adc
stos
fcomp
jle
scas
xchg
fildll
adc
dec
arpl
js
andb
mov
subb
xor
or
and
stos
insb
loope
mull
lcall
dec
lods
and
ret
mov
add
shll
aas
adc
fs
iret
mov
fwait
and
mov
daa
cmpsl
or
xor
aaa
sub
push
jle
xchg
fisubrl
repz
andl
sti
xor
or
movsb
pextrw
push
xor
push
vpunpcklwd
je
rclb
pop
jo
jno
inc
scas
and
push
push
xor
cmpsb
inc
sbb
mov
cmc
mov
jno
cmp
dec
repnz
dec
call
jge
pushf
or
js,pt
mov
jno
pop
pop
filds
sbb
data16
ljmp
aad
pushf
jmp
mov
inc
xor
inc
mov
jmp
push
lds
mov
sub
add
shlb
cmp
insb
adc
mov
cwtl
push
jns
or
sarb
stos
enter
into
es
inc
jl
orl
orb
jno
cwtl
jno
dec
cs
adc
add
xchg
rolb
pusha
ja
mov
subb
xorb
adc
cmpsb
dec
in
fsubs
inc
add
daa
hlt
and
inc
xorb
loopne
cld
jecxz
fisubrs
rcll
repz
and
fldt
jmp
sbbb
arpl
out
sub
vmwrite
jbe
xchg
insb
mov
jo
out
jbe
mov
insb
insb
fwait
std
adc
clc
jp
push
xor
sarl
pop
lret
ret
xorb
cmpl
dec
scas
mov
adc
leave
mov
pop
sbbl
pop
pop
jns
fsubp
adc
mov
cld
lods
lods
mov
jb
jns
lds
mov
incb
adc
imul
clc
push
loop
xchg
imul
lahf
sahf
mov
ret
or
push
les
mov
or
pop
ljmp
sti
int
cmpsl
es
aas
shlb
sbb
push
push
popa
out
xor
xchg
andb
lret
dec
test
jl
mov
push
jns
push
push
icebp
jne
adc
push
jl
popa
mov
sbb
insl
or
mov
lods
dec
sahf
aad
dec
sub
mov
sarb
inc
jb
out
into
push
rorl
pop
dec
inc
push
shll
mov
test
cmp
jmp
lods
fmuls
out
arpl
lea
outsl
sbb
mov
push
shlb
rorb
cmp
ret
sub
or
mov
push
shll
cmc
enter
sti
aam
ret
pop
cmc
stc
cmp
xlat
inc
cmp
lret
outsb
or
or
pop
in
popf
movl
cltd
cwtl
cmp
xor
xor
adc
mov
ficoms
sub
adc
divb
jmp
jg
pushf
add
push
xchg
sbb
pop
cli
std
mov
push
jno
arpl
xchg
sbb
cmp
push
pop
dec
outsl
into
pop
fs
sar
sbb
in
movsl
xchg
xor
dec
sarb
sub
or
les
mov
movsl
loopne
fmull
mov
mov
push
cmpsl
popa
add
mov
jl
and
xchg
mov
scas
sar
aad
lods
mov
sub
sbbb
and
push
fldcw
mov
cmc
mov
cmp
je
rcll
mov
mov
jl
arpl
gs
testb
sbb
shll
fnstenv
decl
push
pop
and
ljmp
sub
sbb
jle
fidivl
mov
sub
cmpb
push
insl
lods
sahf
cmp
sbb
pop
jne
adc
cmp
xchg
xchg
ljmp
mov
pop
jb
lods
inc
push
jmp
gs
lahf
cmp
sbb
pushf
nop
in
push
pop
ds
push
jp
das
adc
dec
sub
adc
sub
popa
mov
fucomp
sub
sub
dec
xor
outsb
and
bound
xlat
mov
pusha
mov
repz
sbb
ret
push
mov
mov
lds
xchg
or
and
ja
dec
push
idivb
mov
dec
int
inc
adc
cltd
loopne
mov
call
out
jns
mov
mov
sti
xlat
mov
mov
lret
pusha
aaa
and
std
je
fsubl
sbb
pop
add
lods
test
daa
inc
daa
add
mov
add
pop
faddl
mov
adc
iret
ds
je
sarl
inc
xchg
jl
call
mov
dec
mov
rcr
inc
push
les
stos
sub
ljmp
push
mov
mov
loopne
setnp
dec
popl
in
xchg
lds
in
pop
notl
push
movsl
fwait
cmp
jge
das
xchg
test
sti
stos
aaa
fdivp
adc
cmp
insl
ljmp
sub
out
aad
sahf
into
insl
test
xor
ljmp
cmpsl
jl
fildll
xor
shrb
xor
icebp
stos
dec
sbb
repz
jnp
cmp
out
lds
loop
mov
cmp
xchg
add
push
fs
xchg
icebp
lock
jge
mov
pop
push
inc
shl
xchg
negb
cmc
bound
jmp
test
dec
push
lock
xorl
adc
lret
cmp
and
sbb
add
mov
push
sub
sti
repz
dec
and
cwtl
mov
test
in
push
mov
loopne
or
fsubrl
sahf
mov
xchg
cmc
push
mulb
aas
mov
push
inc
outsb
lds
sbb
dec
jo
orl
mov
xor
jmp
mov
pop
xchg
sub
es
aaa
adc
ja
xor
sub
int3
out
lock
or
cmc
add
ret
sbb
mov
lock
aas
sbb
push
and
jb
push
lahf
and
dec
lcall
add
mov
fwait
mov
mov
mov
arpl
pusha
das
jnp
pop
lods
xchg
push
mov
and
jle
adc
fcomps
pop
and
shlb
mov
inc
xchg
lret
dec
or
pop
pop
pop
or
inc
mov
jp
cmc
aam
cwtl
cltd
mov
loop
adc
sti
aas
fstp
or
add
mov
xor
mov
call
ljmp
adcl
lock
push
push
iret
adcb
cmpsl
rcl
out
dec
mov
or
inc
adc
fisttpl
fidivrs
loope
sbb
dec
push
mov
hlt
pop
pop
fisttps
insb
mov
sub
test
int
pop
int3
pop
xchg
mov
mov
pusha
xchg
push
js
cmp
or
fidivrs
addr16
or
repnz
xchg
add
mov
int3
ljmp
ret
xor
test
aad
mov
mov
mov
orl
sbb
jg
add
and
add
dec
xchg
mov
add
dec
inc
addl
cmpsb
fsubrl
inc
push
bound
orl
push
sbb
sub
add
and
out
jg
out
sub
xorl
ja
sub
iret
xlat
pusha
sub
mov
add
pop
xchg
sbb
xor
lahf
inc
clc
clc
sbb
mov
jnp
scas
xchg
add
cli
mov
loope
jl
xor
dec
aad
ds
or
sbb
clc
xor
js
mov
jno
cmp
xchg
xor
add
lea
test
nop
push
pop
cld
cli
or
out
xchg
imul
es
ja
pop
daa
xor
in
and
movsb
sbb
jbe
cmp
xor
inc
cs
xor
xchg
or
push
sbb
pushf
gs
pop
icebp
mov
aaa
cmp
lcall
ds
jecxz
xchg
add
imul
out
xchg
imul
cmp
insl
shlb
xchg
fimuls
pop
or
mov
mov
pop
es
fisubs
sub
test
adc
jns
cmp
adc
cmpsl
or
jecxz
xor
or
mov
idivl
and
and
jbe
inc
add
xor
mov
lcall
fs
les
loop
mov
sbb
sub
xchg
jmp
jmp
adc
ja
mov
je
xchg
mov
pop
inc
les
js
jg
pushf
pushf
call
lea
cmp
stc
pop
in
jae
aas
sub
cld
pop
cmp
dec
clc
adc
cmp
icebp
push
xchg
fdiv
mov
jp
xor
in
call
in
dec
pop
adc
int
jmp
push
sub
sbb
or
shll
lret
aad
inc
push
xchg
inc
in
jno
call
sbb
mov
mov
pop
stos
in
cmp
es
lcall
fcomps
pop
xor
lods
out
mov
gs
or
mov
je
and
rcrb
sbb
cli
je
jge
sahf
mov
xor
dec
cmp
lock
pop
loopne
jmp
cmp
stc
jne
insb
cmpb
pop
ficomps
or
aaa
push
cmpsl
ss
cmpsl
sbb
xchg
push
test
pop
xor
xchg
sub
cltd
push
lret
repnz
dec
mov
arpl
xchg
ds
in
test
xor
and
dec
dec
enter
loop
sub
outsl
push
mov
add
adc
add
inc
xchg
and
cmc
mov
mov
jbe
in
and
ljmp
jb
push
sub
out
les
ljmp
outsb
sbb
sbb
sub
dec
outsb
into
mov
lahf
cmpsb
xchg
sti
in
rolb
or
sbb
inc
inc
push
arpl
mov
and
ds
cmp
add
das
mov
dec
mov
testl
shlb
and
addr16
es
fmuls
xor
ret
jae
adc
mov
jno
push
xchg
fbstp
mov
in
push
jg
in
jg
jno
loop
pcmpgtw
lea
ds
pusha
mov
adc
data16
push
add
push
das
adc
sub
pop
inc
mov
test
leave
xchg
ds
xchg
sub
mov
xor
xor
cmp
stos
push
setl
test
rcl
out
xlat
addl
test
imul
sub
int
jmp
shll
nop
xor
jns
das
icebp
pop
call
and
mov
mov
adc
scas
out
int
out
lret
pop
aam
je
cmpsl
dec
jno
dec
xchg
push
push
insl
cli
cmp
pop
aas
cmpsl
es
loope
iret
rcl
mov
js
orl
jb
push
add
lret
adc
out
add
lret
pop
lods
lret
or
add
mov
push
jbe
nop
or
jae
add
cmp
mov
pusha
cmp
xchg
pop
aam
xor
into
movsl
clc
cli
pop
bound
push
and
mov
outsl
div
lock
dec
or
xlat
mov
jae
xchg
inc
js
bnd
sbbb
iret
in
or
notl
nop
les
sub
lcall
mov
push
mov
or
cmc
jb
lods
js
mov
mov
aaa
icebp
push
or
iret
rorl
jmp
push
xor
cwtl
addb
or
or
shl
imul
and
fists
sbb
lret
mov
in
and
arpl
jmp
xchg
lods
out
out
mov
push
lea
xchg
mov
scas
lcall
fmull
xor
jecxz
mov
adcl
in
sub
mov
mov
cmp
push
inc
scas
mov
test
pop
daa
stos
pop
das
xchg
fimull
lcall
insl
lcall
cs
inc
mov
mov
mov
test
xlat
push
jo
movsl
scas
dec
jg
hlt
sarl
or
cmp
loop
dec
and
inc
xor
stos
es
imulb
out
repz
jmp
stos
push
scas
xor
mov
mov
daa
enter
hlt
push
pop
shl
dec
repz
xor
xor
sbb
jecxz
loopne
stc
scas
or
and
ja
jecxz
inc
in
mov
outsb
cmpsl
stos
mov
daa
test
mov
pop
popa
insl
stos
ds
insb
sbb
jo
imulb
je
adc
pop
sub
push
insl
fldenv
adc
sbb
sub
fcmovbe
inc
cltd
jl
and
lods
dec
dec
inc
in
fists
dec
push
push
cmp
add
cmpsb
mov
xor
and
pusha
flds
rcr
sbb
xor
arpl
lods
movsb
mov
pop
inc
je
xchg
jmp
jl
push
pop
cmpsl
inc
cmp
dec
mov
add
aas
imul
jo
or
and
push
clc
mov
test
fst
xchg
addr16
sbb
mov
dec
stc
les
cltd
mov
fildll
xchg
fdivrl
stc
insl
mov
or
loop
dec
mov
idivb
dec
es
push
jne
pop
cmp
mov
popa
push
fnstsw
stos
cmp
cmp
call
adc
das
jecxz
dec
fdivrs
scas
fs
leave
int3
pop
sbb
jns
push
shlb
mov
mov
push
xchg
in
hlt
mov
jae
fs
mov
sbb
fld
mov
or
xchg
cwtl
cmp
mov
and
andl
shlb
sarl
lods
subb
jge
pop
leave
xor
arpl
push
insb
pop
ja
cmp
lahf
scas
jno
in
xchg
out
xchg
xor
xchg
push
push
insb
rolb
ret
pop
call
or
push
adc
orb
and
pop
mulb
leave
movsl
cmpsb
cld
fidivrs
dec
or
push
imul
fnsave
xchg
cli
mov
into
aas
jecxz
mov
push
movsl
xchg
fcomps
mov
aas
ret
aas
pushf
imul
test
jbe
icebp
mov
cmp
inc
or
popf
cwtl
dec
fwait
insl
xor
sub
call
out
ss
mov
aaa
push
dec
xchg
cvttps2pi
sarb
push
cmpsb
fwait
push
jmp
fidivrs
outsl
das
pop
sub
jmp
stos
movsb
inc
xchg
adc
jbe
fisttpll
mov
decb
push
push
loop
jnp
sub
into
popa
loopne
pusha
nop
enter
stc
iret
sarl
pop
nop
das
cs
in
sbb
cmp
sub
push
hlt
movsb
xchg
jnp
fildll
sbb
adc
enter
rcrb
adc
bound
loop
das
lret
mov
xchg
mov
clc
fisubrs
ds
lea
push
sbb
xor
fidivrl
push
xor
push
test
fnsave
lods
pop
pop
icebp
sbbl
cmc
sub
adc
ljmp
xchg
pop
mov
mov
rol
jo
in
and
xchg
and
in
cld
shlb
call
shll
out
jg
mov
jb
push
jnp
cmp
test
push
cwtl
sbb
pop
cmpsb
cwtl
fs
push
popa
or
shl
rorl
mov
ja
stos
jno
adc
mov
insl
data16
test
in
loop
imul
lretw
dec
and
aaa
mov
jo
shrl
adcb
cmp
hlt
jbe
sub
ret
das
inc
test
xor
ficompl
jae,pt
pop
jmp
test
rolb
xor
adc
mov
cmp
aam
jl
fcmovu
mov
pop
adc
stos
mov
movsb
push
adcb
mov
stc
sbb
dec
sub
jb
sarb
xchg
aam
mov
xchg
dec
mov
xchg
test
mov
cli
push
mov
lods
icebp
and
shll
dec
sub
imul
sahf
pop
out
mov
add
jns
xor
mov
mov
je
xor
mov
and
pop
in
pop
sub
int3
nop
push
out
rcl
mov
push
mov
cmp
addr16
mov
cmpsb
dec
push
push
sbb
std
xor
outsl
pop
loope
xchg
stc
dec
mov
or
or
sub
imul
xchg
mov
jno
mov
mull
stc
idivb
out
mov
rcll
les
outsl
pop
loopne
cmp
cwtl
das
fs
mov
test
dec
push
fcmovbe
pop
bound
pop
insb
mov
push
sbb
sbb
loope
xorl
lods
jl
dec
bound
leave
outsl
cs
push
cli
mov
add
xchg
mov
mov
ret
out
test
push
sbb
jns
dec
cli
scas
mov
sbb
add
push
jb
call
in
lods
sar
xchg
arpl
sub
and
lea
mov
mov
ds
mov
xor
dec
ljmp
cmp
dec
dec
data16
bound
stos
or
xlat
mov
jg
ljmp
pop
mov
jns
testl
xchg
cmp
jno
out
mov
scas
stc
push
add
fwait
int
cmpsl
pop
jae
push
sub
stos
xor
dec
xlat
imul
push
and
fidivs
mov
scas
inc
mov
mov
es
ss
pop
mov
xchg
cmp
andl
add
xchg
pusha
xor
mov
lret
xor
and
add
cmpsb
pushf
push
jmp
adc
add
xchg
or
mov
jae
and
loopne
pop
lods
test
lods
dec
or
mov
sbb
add
jge
imul
sub
xchg
jbe
dec
xchg
xor
sub
int
sub
xchg
add
pop
sbb
pop
pushf
gs
xchg
sbb
or
ret
es
lret
rep
lahf
out
ja
out
mov
dec
out
cltd
add
xchg
enter
inc
pop
mov
xchg
dec
sub
fwait
cli
dec
inc
xchg
fxch
sbb
mov
mov
test
push
cmpsl
mov
subl
xchg
mov
loope
inc
mov
lods
cmp
adc
jns
imul
adc
sbb
mov
mov
mov
cmpsl
in
std
test
inc
ljmp
fldl
sbb
push
icebp
jp
add
sbb
push
push
jp
add
push
cli
sahf
pop
repz
arpl
sti
pop
jmp
mov
mov
gs
jns
movaps
test
or
out
pop
xchg
sbb
shll
leave
sbb
pushf
pop
mov
add
add
push
add
push
frstor
stos
out
and
cltd
test
pop
mov
in
lods
or
mov
sub
pop
dec
hlt
push
ljmp
addr16
mov
inc
and
lods
inc
pop
cltd
in
xlat
mov
add
movsb
pop
push
lret
test
sub
clc
out
ljmp
or
push
lcall
sub
movsb
jbe
scas
inc
push
inc
cmp
pop
inc
push
xor
jne
mov
mov
les
loop
icebp
imulb
data16
mov
aad
mov
push
push
sbb
push
pop
and
stos
inc
fsts
and
clc
fildl
push
cmp
mov
inc
int
xor
dec
mov
sub
in
in
mov
test
jecxz
xchg
in
fcomp
cli
push
cmp
scas
jbe
movsb
pop
xor
pop
xchg
jne
test
and
mov
jl
mov
sahf
call
stc
mov
dec
pop
out
mov
cltd
int
push
pop
push
jp
scas
cmp
clc
outsb
cwtl
or
pop
add
outsl
pop
adc
arpl
leave
dec
sbb
sub
xor
sbb
test
fisubl
popa
into
inc
mov
cmp
or
mov
leave
mov
jmp
nop
hlt
adc
rol
mov
xor
sub
xchg
fsubrs
cltd
mov
dec
out
lock
pop
jnp
inc
mov
xchg
and
mov
push
jne
pop
pop
ror
stos
adc
rclb
jns
push
insl
push
lahf
aaa
jle
mov
add
movaps
cmp
cli
inc
insb
clc
popf
sub
cli
mov
shlb
mov
data16
leave
or
cmpb
popa
jbe
jb
pop
rcl
xor
inc
inc
pushf
movsl
out
cwtl
pop
xchg
inc
and
cmpsl
ja
ja
cltd
cld
sbb
or
es
popf
mov
push
aaa
std
inc
mov
inc
imul
add
andl
jo
or
sub
or
xchg
imul
aam
ja
xchg
add
add
jp
inc
xor
stos
sbb
insl
loop
or
and
and
ja
mov
sub
pop
mov
mov
and
dec
or
sbb
daa
data16
jmp
add
pop
cltd
data16
js
or
mov
jle
dec
scas
lret
dec
xor
jecxz
xchg
xchg
xchg
jne
pop
jmp
rorl
mov
ja
insb
pop
cmp
filds
jae
mov
push
ja
ret
dec
lahf
test
mov
pop
pop
xchg
dec
imul
lods
lods
into
std
lret
test
lods
fmull
lret
pop
fists
sub
lahf
insb
notl
lods
push
outsb
shll
das
ficomps
movsb
pushf
push
loopne
or
mov
push
lds
aam
lahf
jg
ret
inc
sbb
pop
sbb
adc
push
fidivs
dec
pop
mov
xchg
dec
jnp
xor
sti
jns
xchg
lds
jmp
ja
inc
data16
repz
rep
sbb
push
aad
lcall
pop
rcrl
clc
inc
xor
lea
mov
loop
std
or
sbb
add
imul
dec
gs
aaa
sub
adc
daa
jl
gs
out
sbb
mov
pop
pop
ret
push
dec
xchg
mov
imull
mov
addr16
mov
loopne
cmp
test
xchg
jg
les
push
cmp
rorl
push
addl
or
xor
pop
mov
out
int
fnstenv
mov
aas
jnp
xor
shlb
ja
mov
pop
inc
mov
fsubr
sub
push
lret
or
lods
push
add
mov
ja
xchg
pop
mov
js
or
mov
jmp
les
dec
mov
paddusb
stos
gs
rcll
out
cmp
inc
sti
ret
jmp
in
mov
pusha
icebp
lret
loope
inc
aam
xchg
dec
jmp
jae
pop
jmp
mov
aas
dec
je
jnp
push
bound
pop
fsubrl
imul
dec
ljmp
xchg
pop
and
or
sub
test
push
aam
push
imul
in
inc
jle
push
adc
add
aam
pop
enter
mov
out
sub
shll
push
and
clc
iret
and
cli
shrl
xchg
jnp
sahf
fistpll
sahf
jnp
jae
cmp
and
lods
imul
or
push
and
pop
mov
pop
jo
pop
push
dec
jmp
push
add
fimull
test
cmp
mov
movsl
subb
ret
loop
jp
enter
pop
mov
sahf
add
sbbb
cs
je
pusha
popl
cmp
loope
pop
dec
outsb
mov
hlt
mov
mov
jle
jge
ret
pushf
fstl
popa
add
inc
and
sub
sbb
scas
outsb
pusha
frstor
mov
sbb
and
fisubs
cmp
insb
das
rorb
mov
xor
pop
jns
jnp
mov
push
popa
sub
push
aad
push
push
jb
mov
inc
xchg
add
jp
sub
cs
popa
mov
xor
test
ss
sahf
sbb
sbb
jmp
cli
enter
adc
or
jae
jmp
test
jo
testl
push
addr16
ret
add
rorl
mov
jnp
fcompl
psubd
std
imul
mov
sub
sarl
loope
lods
call
push
in
push
int
xor
sbb
pusha
push
mov
or
or
test
aam
pushf
repnz
inc
into
gs
ror
jge
sbb
mov
cld
clc
lods
mov
addl
push
int3
sub
testb
dec
mov
fwait
pop
fisttpll
mov
mov
icebp
test
mov
jge
xchg
sti
add
cmp
mov
inc
pop
in
sub
dec
cld
jns
mov
sbb
pop
outsl
fisubs
jmp
xchg
push
repnz
ljmp
mov
cs
push
and
sub
repnz
and
fmuls
pushf
int3
xchg
xchg
fidivs
andb
ret
pop
jecxz
lods
xor
xlat
repz
pop
ficoml
push
push
adc
filds
mov
push
inc
inc
dec
push
mov
jb
hlt
cmp
shrb
inc
cli
out
repz
adc
dec
and
push
pop
fists
lahf
testl
ret
inc
xchg
cmpsl
loope
jle
mov
cmp
sbb
push
sub
fnstenv
mov
dec
inc
push
push
dec
imul
pushl
mov
lea
lods
sub
rorb
push
data16
mov
aam
sbb
aaa
iret
jnp
lock
xchg
stos
leave
inc
sbb
leave
inc
outsl
pop
pop
sbb
fstl
mov
dec
xchg
jg
mov
xor
les
mov
sbb
sbb
pandn
aam
fucomp
dec
dec
jl
sbb
pop
mov
inc
popa
jbe
cmp
cmpsb
jp
xchg
mov
mov
and
fldl
and
mov
aam
xor
jbe
inc
adc
cli
pusha
add
sub
outsb
jo
in
icebp
imul
mov
sub
sahf
stc
sahf
mulb
imul
rcl
push
sub
adc
popf
pop
cmp
inc
dec
into
pop
jge
and
out
shr
mov
aaa
ret
daa
out
in
call
mov
addl
or
jg
jmp
sub
stc
dec
mov
ret
jns
jle
jbe
enter
test
popf
pop
cli
fildl
mov
push
movsb
fst
inc
push
cs
dec
mov
ss
mov
pop
fnstsw
jb
push
incb
mull
je
push
dec
loop
fisttpll
dec
or
push
test
push
mov
ja
or
adc
ffreep
stos
movsb
mov
test
aad
es
cmp
mov
mov
int
scas
mov
mov
leave
icebp
fistl
lock
adc
fstps
sbb
fst
into
data16
repnz
jecxz
add
dec
cld
and
inc
jnp
fwait
or
pop
bound
cld
lret
push
pusha
mov
pcmpeqb
jno
mov
in
ret
lret
rolb
dec
lds
or
push
imul
jecxz
inc
and
test
jl
cmc
insl
paddusb
xor
and
nop
adc
xor
add
pop
movb
les
jbe
sub
fs
mov
push
adc
sbb
fdivrl
xchg
or
das
mov
xchg
popf
dec
adc
or
sbb
xchg
jns
jg
xor
sub
dec
in
inc
shlb
xor
mov
mov
push
mov
pop
cs
stos
xor
clc
test
mov
or
jl
inc
pop
jmp
outsl
or
stos
dec
out
cmp
cmp
push
mov
dec
xchg
lds
and
loop
xchg
aad
sahf
xor
mov
imul
xchg
js
jmp
cs
and
pop
push
xor
aam
je
loop
pusha
popf
jb
lahf
fstps
stc
sub
int3
jle
cmp
lcall
dec
sub
and
leave
sbb
push
jne
mov
push
pushf
jecxz
jle
je
and
scas
and
adc
ds
pop
in
adc
test
and
push
dec
popa
fcomip
mov
dec
mov
jae
enter
cwtl
cmp
add
es
flds
in
jno
pop
pop
lea
cmpsb
sbb
dec
hlt
ljmp
dec
stc
xchg
xor
test
mov
int
push
push
dec
or
imulb
pop
jb
push
jle
jge
sarl
dec
mov
lods
ret
es
xchg
enter
in
mov
dec
in
or
lcall
mov
or
popa
add
daa
popf
repnz
mov
sbb
xchg
lahf
pop
pop
testl
std
mov
inc
cld
or
inc
or
mov
xchg
call
das
les
sub
adc
into
mov
into
ss
mov
push
stos
std
push
add
aad
pop
ljmp
jbe
ljmp
push
push
inc
sub
sbb
aam
incb
out
and
loop
outsb
xor
pop
insb
sbb
std
pop
push
jb
test
jns
stos
pop
pop
test
es
xor
xor
test
rolb
shl
cwtl
mov
jo
sub
adc
pop
fs
pop
xchg
test
mov
ret
shl
pop
sti
sbb
xor
cmp
jge
mov
inc
lahf
lds
int
adc
xchg
pop
loope
out
ret
cmp
xchg
rorl
je
aaa
push
inc
fadds
fs
out
enter
dec
jecxz
and
jo
dec
jp
arpl
mov
cwtl
mov
sub
add
and
or
push
push
jns
push
hlt
mov
jmp
jg
inc
cmpsl
divl
jmp
mov
lods
push
enter
fidivs
out
add
add
pavgw
cwtl
jo
lret
xchg
stos
pop
sub
mov
insl
adc
mov
add
jge
fcomp
pusha
cwtl
mov
cmpsb
xchg
pop
fdivrl
test
arpl
pop
add
sub
inc
ror
sub
mov
fstp
mov
push
movsl
leave
jmp
adc
dec
mov
data16
andl
repnz
mov
out
push
sub
call
mov
push
sub
test
sti
inc
lods
mov
mov
mov
arpl
mov
call
cmp
and
lcall
mov
dec
addr16
lea
inc
sbb
mov
xorb
jbe
scas
xor
mov
movsl
ds
jb
xchg
shlb
lret
xor
push
call
xor
cmp
lret
mov
and
lret
jno
loope
jl
sub
cmp
jmp
rorb
fcoml
sbb
mov
cmp
int
mov
test
xchg
shr
jmp
dec
add
cmp
movsb
fnsave
pop
mov
dec
and
sub
arpl
mov
and
pop
xlat
out
sbb
icebp
imul
mov
nop
jne
push
stos
gs
cmpsl
fists
and
mov
xor
cmp
jg
cmc
mov
xor
inc
adc
cmp
nop
adc
fnsave
das
xchg
push
pop
in
add
outsl
jecxz
scas
inc
clc
stos
ret
jg
dec
or
or
cwtl
or
and
gs
adc
fstl
out
outsb
dec
divl
fistpl
call
in
cs
lds
inc
lcall
sbb
in
push
pushf
adc
andl
jbe
into
ror
mov
fmull
jg
lahf
lea
cmp
or
imul
in
xchg
arpl
data16
push
sbb
xchg
mov
or
mov
std
push
cmp
and
inc
imul
push
and
sub
adc
test
and
or
inc
shrl
adc
mov
xchg
incb
out
cmp
out
jp
adc
dec
stos
mov
mov
push
push
push
lock
scas
jle
out
bound
scas
scas
hlt
and
shr
jnp
adc
arpl
test
outsl
imul
mov
outsb
mov
mov
push
push
int
pop
loop
cmp
mov
leave
sub
into
movsl
loop
mov
pop
sbb
stc
xor
pop
repz
cmp
mov
test
jo
and
jns
jecxz
xchg
loopne
mov
jecxz
and
or
iret
sub
push
push
dec
ret
xor
cli
dec
add
insb
popf
add
int
mov
fildl
cmpsb
and
int
pop
xlat
jno
inc
loope
scas
xchg
int
dec
inc
cmp
insb
mov
popa
outsl
push
dec
jmp
mov
or
xchg
adc
or
mov
jmp
pop
or
rcrb
sub
mov
cltd
sti
sbb
sahf
pop
pop
jl
cmpsl
push
lods
mov
into
adc
push
adc
lcall
ljmp
adc
sbb
aam
jmp
xchg
mov
mov
push
out
into
mov
outsb
mov
int3
popa
dec
add
cmp
hlt
jb
xor
inc
popf
and
xor
mov
stos
jg
jge
stos
mov
or
ss
sbb
sub
test
inc
mov
sub
out
lods
push
mov
mov
fiaddl
notb
cmpsb
fildl
or
je
shlb
fildll
push
jbe
sbb
roll
outsl
test
mov
cmp
jae
mov
int3
mov
pop
jbe
mov
ja
nop
daa
cli
pop
or
cmp
arpl
movsl
pop
adc
push
jbe
or
leave
sbb
lret
nop
cs
scas
ja
lret
xchg
lea
call
scas
mov
cld
mov
hlt
into
dec
sbb
push
mov
xchg
and
push
bound
jbe
mov
mov
sbb
cmpsb
into
fildll
xchg
add
mov
ficoms
sub
cmp
sbb
and
outsl
inc
int
mov
roll
test
jb
out
jge
push
cmpb
arpl
or
movb
pop
jecxz
add
xor
sti
cmpsb
repnz
not
loopne
sbb
xor
mov
push
inc
movsb
mov
mov
cld
push
les
nop
shl
mov
mov
fsubp
lcall
jle
dec
js
mov
mov
ds
shl
pop
test
mov
mov
push
adc
or
enter
dec
sarb
cmc
pusha
adc
lret
inc
fildll
adc
les
loop
ds
mov
test
pusha
inc
loope
cmp
shrb
dec
pop
arpl
test
sub
scas
cmp
jge
pop
cmp
and
je
sub
xor
ficomps
pop
fdivrs
cltd
jb
stos
xchg
arpl
call
and
arpl
and
pop
xchg
imul
jmp
mov
clc
adc
jbe
adc
sbb
jno
mov
mov
pop
adc
hlt
dec
pop
pop
or
add
xchg
xlat
lea
jmp
scas
pop
dec
add
inc
jno
or
repz
stos
out
popa
cmpsb
incl
out
cmp
roll
jns
push
xor
js
jne
and
jge
fcomi
in
xchg
fsubs
jbe
dec
decb
jns
cld
int
add
in
xchg
ja
adc
cli
imull
cwtl
movsl
mov
push
jbe
cmp
mov
scas
outsl
lods
rcrb
pushf
add
std
push
or
scas
mov
in
adc
pushfw
push
sub
cmp
cmpsl
insl
adc
mov
xchg
xor
lods
adc
jecxz
fsubs
lret
cltd
cs
dec
lods
xor
fdivrl
popa
clc
xchg
stc
mov
xchg
pop
cmp
or
jp
dec
data16
insb
gs
test
cld
pop
cmp
sub
jo
mov
and
out
int3
nop
xor
or
in
adcb
jp
cmp
xor
sbb
inc
xor
mov
cmpsl
shll
dec
rcrl
subl
cmp
and
out
pop
enter
test
je
stos
arpl
adc
mov
out
jo
int3
inc
std
loopne
stos
sbb
mulb
lret
out
push
sub
cmp
jp
test
mov
cmp
mov
rorb
adc
daa
xchg
xor
outsb
or
icebp
cmp
pop
lods
mov
fsts
inc
mov
scas
test
fldenv
pop
js
and
jl
popf
repnz
int3
jne
fucom
iret
pop
and
iret
xchg
test
xchg
mov
popa
add
pop
jmp
sub
mov
popf
push
inc
sbb
cmp
sbb
adc
push
xchg
add
jno
cmp
jno
icebp
inc
mov
js
or
push
and
shrl
fists
pop
cmpsl
add
pusha
cli
andl
jecxz
test
adc
lret
jecxz
push
aas
mov
outsl
lods
hlt
mov
mov
faddp
adc
mov
dec
cmp
push
arpl
xchg
in
fisttpll
add
jge
xor
adc
jg
fidivrs
aam
mov
xor
je
mov
fmuls
dec
sbb
pop
outsl
fcoml
push
xchg
fidivs
fstl
cmp
push
pop
mov
dec
push
das
adc
not
push
jae
cli
push
xlat
xchg
jne
movsl
push
jmp
push
testl
in
dec
xor
int
mov
cmp
lret
scas
stos
into
sub
or
scas
rcll
pushf
scas
or
cmp
fisubs
inc
sbb
inc
lahf
mov
lcall
aaa
cmp
or
inc
xchg
fisubs
sub
and
fcmovnb
lahf
sub
and
fstpt
mov
mov
pushw
addr16
mov
inc
ljmp
inc
fstps
sub
and
sbb
das
push
push
int
sbbl
stos
lahf
pop
sbb
ja
adc
lret
mov
loope
insl
mov
std
dec
cmpb
scas
mov
push
nop
jl
shll
fiadds
xor
pop
dec
and
dec
aam
out
lcall
in
jle
mov
in
and
stos
and
shrl
xchg
cmp
fs
aaa
push
inc
ss
fidivrl
sub
lret
inc
cmp
icebp
shll
push
cmpsb
add
or
repnz
das
mov
xchg
shrb
xor
stc
fcoms
fnsave
test
sub
imul
pop
pop
push
push
stc
push
push
insb
push
pop
and
mov
mov
andb
das
mov
iret
sbb
dec
xchg
movl
or
push
sbb
mov
cltd
jmp
fcompl
fistl
std
adcb
cmc
fldcw
in
and
int
jle
mov
mov
outsl
in
scas
push
stos
cmc
sbb
pop
sarl
xor
add
mov
mov
xor
jbe
cld
dec
or
and
fidivrl
das
add
push
adcb
xor
and
daa
std
xor
and
mov
nop
ret
or
inc
arpl
inc
cltd
sbb
jp
scas
push
xchg
sbb
popa
lahf
push
fistpl
xlat
lret
fisubrl
stos
inc
pop
sbb
rol
jp
sbb
adc
dec
add
fildll
xor
add
daa
jb
mov
adc
and
inc
sub
bound
jno
addl
jmp
and
jmp
inc
aaa
jae
lods
pop
in
sub
dec
mov
iret
addb
aam
adc
mov
mov
cmpl
idivl
push
jmp
inc
mov
dec
xorb
pop
sbb
jecxz
push
mov
gs
clc
push
mov
into
fidivrl
movsl
jmp
adc
or
jbe
push
add
aam
push
pop
xor
adc
cmp
cli
mov
pusha
stos
loopne
fiadds
fimuls
mov
pop
imul
or
dec
push
ljmp
in
enter
negb
inc
fwait
stos
enter
add
dec
adc
into
push
push
dec
and
popf
aad
ret
decl
cli
mov
add
pop
inc
cmp
fildll
mov
ficomps
lods
lret
int
mov
mov
push
ficompl
idivl
clc
mov
test
mov
jne
sbb
or
fnstenv
mov
out
xchg
push
jo
dec
test
sub
pop
ljmp
cmp
mov
int3
repz
ja
push
aas
imul
mov
movsb
insb
dec
outsb
imul
popa
pop
in
addb
sti
shrl
les
mov
cmc
mov
sti
push
scas
loop
int3
fwait
push
and
mov
shlb
pop
loopne
sbb
icebp
popf
sub
jle
or
mov
jae
jnp
test
test
mov
xchg
loopne
aam
dec
aam
sub
push
test
add
ss
bnd
adc
fwait
inc
call
push
stos
xchg
sub
jp
stc
or
jle
inc
lret
pop
and
or
mov
adc
enter
ss
loop
sub
ja
sbb
js
and
aaa
aam
mov
xor
push
cmpsb
xchg
lcall
es
ja
out
inc
add
stos
or
push
xor
sub
jnp
sbb
aad
jg
and
inc
out
out
cwtl
scas
jnp
push
aas
and
clc
bound
in
ja
inc
arpl
daa
mov
jmp
lods
call
cltd
adc
imul
xchg
repnz
lret
popf
xchg
lods
int
nop
in
mov
test
fildl
mov
mov
lds
push
bound
pop
mov
addr16
fcoml
fimull
mov
xchg
mov
inc
dec
mov
addb
fsts
mov
roll
mov
mov
ret
test
mov
xchg
popa
cmp
cmp
es
hlt
xchg
mov
cltd
push
sub
and
out
pop
repz
outsl
mov
notl
cmp
xchg
xor
cwtl
mov
push
fidivrl
mov
push
fldt
fdivs
xor
push
mov
cld
pop
mov
in
test
mov
popf
shlb
xchg
enter
test
stos
xchg
and
push
rcll
bound
fstl
sbb
or
pop
inc
in
in
fwait
repnz
jae
push
int
jnp
js
push
cmp
cmpsl
cmp
and
mov
jl
test
sub
jge
fadds
lahf
int3
loopne
mov
mov
xor
mov
dec
pop
push
cmpsb
clc
das
and
fnsave
jmp
adc
movsl
insb
rclb
inc
sub
cmpsl
and
jne
out
xchg
ss
in
adc
idivb
jle
sahf
push
jge
cwtl
push
adc
sbb
cmpsl
sbb
jle
jb
in
mov
mov
ljmp
std
push
dec
nop
mov
dec
cmp
mov
imul
sbbb
popa
push
popf
stos
sarb
arpl
fadd
jb
mov
and
dec
lahf
mov
dec
movsl
dec
adc
nop
stc
sub
mov
add
aam
xchg
or
bound
syscall
into
cmp
and
cs
fisubs
pop
inc
xchg
cmp
leave
or
mov
cmp
push
stos
xorl
and
pop
jne
jbe
cwtl
sub
sub
sbb
mov
mov
js
add
push
int
dec
in
inc
clc
push
pushf
pushf
adc
clc
mov
or
sub
sub
pop
adc
dec
mov
cmp
mov
es
gs
aad
dec
cmpl
xchg
jmp
cmc
mov
movsl
xchg
pop
sbb
mov
pop
sub
xor
jo
cmp
adc
xchg
lret
xor
sbb
lret
push
mov
pop
sub
jmp
xchg
cmc
in
xchg
int3
ss
mov
notb
mov
std
mov
pusha
cmpsb
mov
aad
in
inc
aas
cmp
sbb
mov
out
push
bound
add
push
pop
jmp
lret
sbb
push
push
push
push
lods
lret
fs
sbbl
aam
shrl
or
add
xchg
xor
sbb
aas
push
negl
loope
into
jnp
adc
outsl
inc
push
mull
lods
adc
mov
jno
xchg
adcl
imul
das
push
xor
sub
lods
xchg
push
std
lcall
ret
or
cmp
lret
push
repnz
sti
dec
sub
dec
cmp
mov
lods
out
mov
xor
xor
mov
loop
mov
ret
dec
nop
sub
xor
cmp
int3
scas
icebp
push
out
data16
or
fstpt
add
adcl
sahf
mov
sahf
adc
aaa
or
adc
js
and
ret
jnp
out
pop
cmpsb
out
jo
pop
std
pop
fcom
xchg
fwait
movsb
js
mov
ret
aad
pop
lahf
cs
sahf
mov
cmp
out
xchg
mov
insl
fsts
in
dec
leave
mov
mov
mov
mov
ficoms
dec
jecxz
rorl
lret
adc
mov
push
out
mov
scas
hlt
sbb
cmpsl
sub
jp
into
mov
jbe
cmp
xchg
xchg
jae
mov
mov
or
loop
jbe
cmp
lcall
inc
leave
push
jns
jb
sbb
jl
xchg
pop
repz
push
push
sub
repnz
aaa
std
or
dec
or
mov
dec
pushf
test
xchg
loop
push
fs
and
adc
cli
sarb
sub
sub
push
and
sbb
out
xor
mov
sbb
cwtl
loope
xchg
cmpb
call
add
cli
les
pop
test
mov
mov
pop
xchg
lcall
xchg
mov
loop
fnstcw
fildl
out
frstor
ret
jmp
aas
hlt
nop
sbb
push
xor
push
push
mov
iret
jb
xacquire
sahf
imul
ds
cmpsl
cmp
cli
mov
loope
sub
lods
adc
pop
nop
cwtl
popf
pop
mov
xor
push
ss
cmp
subb
jl
push
add
movsl
adcb
fstl
test
es
mov
lds
inc
fstpt
movsl
das
sub
fcmovbe
adc
sbb
push
jg
subb
test
mov
inc
popf
rol
imul
push
repz
push
xchg
test
sub
cli
in
jns
lahf
fisubrl
fildl
lods
add
cltd
les
mov
movsb
dec
xchg
call
jnp
lea
mov
sbb
mov
cmpsl
or
adc
ss
fstps
leave
cmc
sub
fidivrl
fs
cmp
mov
aad
fnstsw
xor
in
xchg
mov
adc
xchg
out
add
xor
push
cmp
xchg
out
push
std
add
imul
iret
adc
jbe
mov
loopne
je
cmp
into
aad
insb
cmp
dec
cmpsl
outsl
jl
test
add
adc
das
pop
lret
sbb
dec
xchg
cwtl
subb
or
mov
jecxz
lahf
push
xchg
ffree
ja
faddl
sahf
xchg
out
adc
dec
sbb
inc
jg
stos
enter
xlat
lea
and
add
ja
or
and
ds
jmp
xchg
lock
fnstsw
xchg
addr16
and
rcl
inc
das
test
icebp
std
int
mov
jle
sub
out
clc
bound
sbb
jl
loope
dec
imul
adc
sbb
scas
out
push
rorl
xlat
fistpl
jmp
push
xor
js
cwtl
adc
fsubl
lea
in
pop
addr16
mov
mov
dec
sar
xchg
js
daa
cmp
xorb
inc
fisttps
fdivrl
enter
push
jmp
dec
pop
repz
or
fcmovbe
clc
inc
mov
sub
lods
sbb
and
nop
loopne
mov
cmpb
push
pop
push
pop
inc
aam
xor
pop
nop
xchg
mov
mov
or
pop
sbb
popa
push
rorb
pop
adc
fisttpll
jns
push
push
add
mov
popf
push
add
jg
frstor
jno
jbe
mov
cmp
aas
outsl
icebp
clc
fistps
inc
sarb
fsubl
out
jmp
cwtl
xor
ret
sbb
cld
mov
inc
or
adc
cmp
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jb
mov
call
dec
outsl
jl
pop
mov
es
mov
call
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
je
jmp
je
adc
loopne
pop
aas
or
push
pop
pop
sub
add
mov
mov
mov
pushl
call
jns
pop
insb
xor
jge
sub
sub
movswl
sub
adc
xor
mov
push
mov
popl
push
mov
pop
sub
mov
add
mov
dec
jne
jmp
push
xlat
les
jne
mov
adc
mov
xchg
dec
push
fwait
push
inc
jo
lcall
pusha
push
insl
mov
adc
aaa
sub
xor
mov
and
enter
pop
cmp
mov
adc
fnstsw
loopne
repz
and
xlat
popa
int3
jmp
std
adc
xor
or
inc
mov
test
repz
jne
push
fistpll
mov
and
inc
leave
ja
pop
in
sahf
pusha
adc
cmp
xor
xlat
in
mov
mov
sub
adc
nop
jecxz
pusha
adc
sbb
mov
adc
lcall
mov
mov
fcmovnbe
imul
pusha
adc
dec
jp
aam
cmpsl
push
pop
mov
jnp
mov
sbb
jae
movsb
xor
test
test
sub
push
and
jae
clc
dec
test
adc
lcall
sub
xchg
dec
ret
inc
dec
lods
sub
popa
aas
cmp
into
push
adc
lods
sub
dec
mov
dec
sub
loop
mov
mov
jns
and
sub
mov
sub
mov
sti
inc
insb
ljmp
sub
loop
cmp
aad
cmpsl
cmp
mov
stos
rcrl
sub
pop
fistps
lret
dec
cmpsl
subl
inc
popf
sbb
das
aas
dec
mov
sub
out
or
cs
loop
loop
mov
adc
sbb
test
sub
lods
sub
sti
or
ja
arpl
fnsave
inc
aaa
stos
sub
stos
mov
inc
dec
shll
rolb
jge
adc
xlat
mov
arpl
adc
out
insb
insb
hlt
out
inc
push
ss
lahf
scas
shlb
lock
push
pusha
loope
fucomip
outsl
dec
add
test
lock
rorl
repz
dec
pushf
adc
cmp
push
adc
inc
shlb
xchg
inc
xchg
mov
jmp
dec
xchg
int3
fs
adcl
add
cmp
cmpsb
xor
cmpsb
sbb
cmp
add
cmp
mov
test
aaa
push
mov
add
cmp
xchg
cmp
or
mov
hlt
fwait
xor
add
add
iret
popf
lea
mov
test
add
sub
add
in
mov
and
mov
cli
decl
sub
mov
or
cmp
enter
pushf
xchg
xchg
xchg
scas
sbb
sti
sbb
add
pop
xchg
xchg
scas
repz
jle
add
dec
lds
and
cmc
add
jle
jae
sbb
andl
jle
sub
and
pusha
mov
scas
jle
andb
nop
jge
jle
sub
scas
jle
xchg
adc
xlat
and
and
int
loope
scas
xchg
jno
scas
jle
add
jmp
xchg
popa
jl
imul
mov
mov
pop
adc
jb
adc
shl
loop
jbe
ret
jge
loopne
adc
dec
sbb
jp
xchg
jle
cld
lahf
jp
xchg
repz
mov
jp
xchg
insl
scas
jle
mov
scas
add
xchg
ljmp
jle
or
jns
xchg
repz
mov
xchg
inc
dec
pop
xchg
repz
mov
repz
insl
scas
jle
leave
ret
ljmp
lock
sarl
add
or
jp
xchg
dec
or
push
mov
xchg
jle
sarl
pop
jl
mov
ja
adc
pusha
xchg
or
popf
rclb
or
repz
mov
scas
bound
rorb
movsb
jp
xchg
jns
or
jp
xchg
cmp
inc
xchg
push
xchg
sbb
mov
inc
mov
xchg
repz
mov
jmp
test
jge
mov
or
push
adc
push
push
mov
ljmp
jge
fisubrs
xchg
scas
jle
xchg
and
icebp
into
test
xor
hlt
xchg
ret
rcl
in
shll
jl
or
lcall
add
shll
pusha
xchg
mov
mov
adc
xchg
mov
xor
cmp
mov
xchg
js
jp
jns
fadd
filds
rcl
add
xor
cmpsl
icebp
or
aaa
jne
bound
xchg
jae
insl
add
jns
fadd
filds
rcl
out
arpl
pop
fcmovnbe
out
bound
xor
insl
add
jns
fadd
filds
rcl
out
arpl
icebp
pop
mov
xchg
iret
push
xchg
push
int3
sub
pusha
mov
xor
cmp
sahf
pop
cmp
jae
insl
add
cmp
shrl
jge
xchg
icebp
pop
mov
xchg
punpcklbw
and
and
lea
jle
test
dec
inc
xchg
mov
jnp
mov
add
lea
jle
test
mov
fwait
sub
xchg
pop
testb
jle
xchg
jge
xchg
iret
jecxz
pandn
push
sarb
xor
mov
inc
push
scas
daa
fildll
sarb
cmp
mov
jge
add
fisubs
pop
test
stc
xchg
mov
push
fisttpl
mov
js
add
js
pop
int
pusha
xchg
fwait
roll
fcmovnb
clc
mov
ror
inc
cmp
lahf
adc
shlb
mov
or
mov
in
stc
nop
cmp
pop
dec
xor
cmp
push
popa
xor
cmp
out
mov
shrb
push
and
das
pop
xor
xchg
jle
xchg
jle
xchg
jle
xchg
push
cmc
mov
jle
mov
jle
xchg
jle
xchg
jle
add
jle
xchg
jle
xchg
gs
jnp
sahf
test
push
in
scas
adc
lods
ret
rorl
icebp
push
dec
stos
push
and
pop
xchg
jnp
and
fdivrl
fnstcw
pop
out
lods
xchg
dec
aam
push
in
xchg
clc
adc
les
xchg
out
popf
lret
pop
aaa
in
dec
sub
cmp
aaa
pop
mov
inc
popa
mov
adc
push
sub
push
movsb
inc
push
push
mov
jnp
xchg
push
dec
mov
jl
mov
jnp
cmp
scas
add
mov
ja
outsl
insl
push
shll
xchg
fcompl
mov
fadd
cmp
mov
in
mov
mov
inc
std
js
mov
mov
sub
andl
lret
and
in
xchg
push
mov
movsb
rol
mov
xchg
arpl
sbb
or
adc
add
mov
mov
push
push
push
mov
add
daa
fsubr
mov
xor
cwtl
mov
sub
cmp
shll
xchg
sarb
dec
ljmp
mov
adc
imul
mov
sbb
out
subl
in
adc
adc
hlt
fsubr
jmp
mov
and
je
shll
pop
movsl
mov
pop
pop
jp
orb
lock
xor
out
ret
or
adc
push
push
xor
pxor
out
out
iret
arpl
xor
xor
repz
stc
neg
lahf
jmp
test
mov
sbb
push
xchg
mov
mov
mov
push
lcall
jle
xchg
inc
lret
scas
out
push
push
jbe
jle
scas
jle
add
xor
xor
jno
lods
lcall
js
mov
jl
sub
scas
orb
test
mov
in
mov
jmp
or
mov
mov
or
sub
or
mov
xor
add
stos
aas
clc
pop
gs
push
adc
pop
xlat
xlat
popf
mov
push
aad
popf
not
imul
inc
pop
xchg
sub
ret
sub
shll
sbb
mov
or
add
les
scas
cmp
push
popf
fsts
iret
imulb
pushf
sbb
pop
test
out
cli
adc
ljmp
insw
clc
inc
sub
sbb
jl
adc
dec
xor
subb
fistpll
lods
push
pop
clc
test
movsb
mov
ds
leave
daa
cmp
add
add
or
add
adc
mov
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
cld
mov
add
or
add
adc
add
push
mov
add
sub
add
aaa
mov
add
inc
mov
add
popa
fs
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
add
leave
mov
add
fistpll
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
sti
cmpsl
push
push
add
add
add
inc
repnz
adc
mov
es
andb
pop
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
dec
sub
mov
jp
aas
fsubr
inc
mov
fnclex
cmpl
pushf
xlat
std
push
fsubrl
cld
dec
lods
mov
mov
sbb
or
mov
sub
into
jl
pusha
mov
ja
adc
dec
mov
movsl
dec
jmp
lds
addr16
out
nop
adc
mov
mov
imul
pusha
arpl
cwtl
loopne
insl
xchg
pop
fst
sub
push
sti
cmpl
repz
xchg
inc
adc
inc
push
nop
fs
xchg
push
test
xchg
insl
push
cmovbe
sti
fidivrs
std
movsl
xor
mov
and
push
std
mov
lret
cmp
aas
pop
pop
fnstcw
pop
xor
fwait
sbb
inc
ss
push
fwait
cmc
xchg
leave
in
push
mov
pop
test
pop
sbb
xchg
jmp
push
xchg
loope
push
jo
sub
rep
aas
jge
fdivp
lea
and
or
adc
add
dec
lods
ja
pop
ss
clc
cmp
lea
mulb
aam
testb
xor
add
mov
arpl
lret
lods
out
pop
jmp
jb
sbb
mov
push
lock
popa
adc
cs
sub
loope
cmp
sbb
js
pop
rcll
mov
push
fcmove
in
outsl
xor
add
jb
xor
je
push
mov
cwtl
ss
xlat
cwtl
inc
pop
aaa
jle
loopne
push
pushf
push
in
or
shr
fimull
lret
js
inc
push
mov
mov
pop
ret
popf
or
add
into
jmp
insb
jno
jnp
cli
jb
jg
push
ror
aam
mov
mov
sbb
fistps
pop
enter
ja
jae
setg
jle
jo
jo
outsl
mov
sbb
int3
and
xor
sarl
in
cmp
sbb
mov
push
inc
ljmp
jnp
mov
in
jb
add
add
into
pop
in
daa
mov
push
push
jbe
stc
dec
shll
pop
cmp
fstp
jp
mov
sbb
movsl
jge
in
dec
adc
jne
mov
xchg
je
inc
push
shrb
mov
stos
cmp
dec
dec
icebp
sub
inc
scas
es
sub
mov
sar
and
inc
sbbb
bound
and
gs
mov
pop
ret
pop
xchg
andl
jne
mov
inc
add
loopne
orb
dec
outsl
mov
movsl
or
xchg
test
pop
lea
mov
aam
out
mov
sbb
call
push
pop
out
daa
push
stos
sub
and
cs
fimuls
and
mov
jnp
stos
mov
jl
fwait
xchg
lahf
cwtl
lcall
cmpb
ljmp
sub
mov
jmp
outsb
pushf
lcall
fists
jmp
ffree
je
out
fstp
inc
imul
sbb
inc
in
fcoml
xchg
fldenv
cmp
pop
cmp
call
jg
test
aad
and
into
stos
pop
aam
inc
scas
out
pusha
cmp
and
stos
and
pusha
xchg
push
ljmp
xchg
mov
fisttpl
cltd
fistps
popa
popa
jecxz
call
xor
jge
neg
test
roll
fwait
out
inc
adc
push
daa
inc
mov
add
jge
sub
mov
xor
sbb
pop
mov
jg
mov
jmp
mov
xor
inc
and
stos
add
cmc
into
or
jmp
dec
jb
adc
ret
dec
mov
push
sbb
out
xor
push
sub
mov
push
iret
ja
scas
cwtl
mov
cmp
jne,pt
jo
jb
jnp
push
lea
jge
adc
ja
in
and
add
aaa
xchg
scas
or
dec
push
loopne
pop
subl
cmp
jecxz
mov
cli
ret
sub
mov
icebp
cmp
mov
pop
sbb
adc
push
push
divl
xchg
dec
push
inc
cmp
jo
jno
pop
test
cmpsl
pop
xor
or
hlt
xchg
out
and
mov
gs
cmp
push
inc
imul
adc
mov
in
insb
scas
mov
in
movsb
mov
jle
daa
or
jae
rcrb
shll
gs
jecxz
shlb
pop
push
jge
dec
cwtl
mov
push
mov
inc
pop
mov
mov
imul
add
ret
fwait
jge
orl
inc
xor
push
sbb
adc
imulb
aam
push
push
lock
pop
shlb
adc
ds
adc
jecxz
push
jo
push
pop
adc
or
push
dec
inc
pop
push
popa
cltd
rorb
push
xorl
dec
aad
inc
xchg
mov
leave
jle
std
cmp
notl
sbb
scas
into
outsb
jmp
cmpsl
sub
xchg
data16
ret
pop
std
cmp
fdivp
xchg
lcall
xor
sub
ljmp
int3
outsb
popa
cmc
loop
mov
or
jne
sbb
call
sub
das
xor
mov
cs
xorb
push
aam
cmp
sti
jge
add
pop
mov
ret
dec
cmp
stc
ja
jno
jp
jg
int
adc
sub
cmp
loop
lcall
hlt
popa
mov
jno
fsubl
lret
out
insb
lds
xor
mov
int
stc
jnp
in
or
push
and
inc
adc
iret
aad
add
push
repnz
orl
or
dec
ret
aam
pop
mov
int3
mov
xorb
sbb
cmp
repz
js
pop
call
jns
rcll
mov
repz
inc
dec
push
fistpl
scas
push
cli
cld
cs
mov
pop
adc
test
adc
sbb
jb
push
rcrl
lahf
cmp
adc
inc
lds
sahf
pusha
cmp
xor
adc
popf
bound
cmp
lock
imul
leave
clc
push
outsb
cld
imul
lods
jns
mov
and
daa
movsb
jno
repz
cltd
popf
cmp
dec
jp
ljmp
inc
sub
je
daa
lock
shll
and
stos
ja
cmp
dec
test
je
test
inc
xchg
aad
mov
enter
popf
mov
pop
fcoml
mov
rcrl
mov
loopne
dec
rcrl
mov
cmp
mov
sbb
sahf
inc
lock
xchg
in
out
mov
jnp
lea
test
mov
addr16
mov
aas
test
loope
xchg
stc
adc
mov
mov
push
add
push
xor
aas
lds
sbb
lahf
adc
xchg
dec
int3
mov
xchg
xchg
imul
stos
push
int3
xor
cmp
adc
sbb
in
jl
mov
insl
adc
or
adc
xorl
add
mov
dec
xor
pop
adc
xlat
jno
daa
push
shl
and
add
xchg
pop
xlat
cmp
sub
xor
dec
out
xchg
dec
pusha
push
pop
shlb
ret
xchg
or
gs
jecxz
ja
adc
ret
xchg
cwtl
sbb
mov
test
fldenv
pusha
add
add
xor
xor
mov
lds
jno
fidivl
test
fwait
sub
or
es
jbe
addr16
xchg
daa
mov
jbe
test
filds
add
mov
stos
mov
mov
push
xlat
les
jns
push
add
lcall
stos
leave
insb
repz
mov
sbbb
decb
out
and
in
jl
mov
cmp
xchg
add
mov
dec
pop
hlt
loop
sbb
xchg
sub
xor
pusha
shll
xor
je
xchg
std
lods
dec
ret
lock
aaa
sahf
test
mov
push
sbb
cli
ja
subl
add
das
push
add
mov
pop
jg
jnp
sbb
pushf
adc
cmp
push
cwtl
aam
mov
in
adc
sub
push
mov
notl
aad
pusha
sbb
and
repz
fnstcw
shll
imul
ja
out
xor
loopne
psubusw
cwtl
mov
pop
in
mov
adc
jae
xor
sub
lock
jmp
filds
jl
sbb
jge
outsl
ja
dec
mov
push
push
sub
and
or
call
mov
fnstsw
scas
lcall
sbb
nop
fldt
mov
loope
fisubrl
pop
mov
sbb
add
stos
push
test
outsb
clc
sbbb
fcoml
and
push
jo
pop
and
xchg
callw
popa
repnz
pop
pushf
ljmp
call
adc
or
sbb
lods
aas
cmp
jno
enter
mov
inc
lea
sti
add
inc
inc
mov
arpl
jl
arpl
xor
gs
push
dec
xor
jnp
int
insl
imul
pop
jbe
rol
push
repnz
lea
in
loopne
test
cmp
push
xchg
out
mov
fisubrl
scas
ja
cwtl
inc
cmpsl
push
lods
mov
sbb
stos
xchg
cmpsl
push
inc
mov
ficompl
pop
xchg
push
test
cmp
jmp
das
fsubrs
cmp
adc
lret
nop
sub
mov
addr16
test
arpl
add
inc
pop
popf
hlt
pusha
mov
movsl
push
pop
push
fwait
inc
adc
mov
mov
fmull
push
inc
mov
pushf
nop
sub
fimull
call
loopne
xchg
or
mov
test
dec
arpl
daa
es
scas
mov
cmp
xchg
dec
arpl
aas
sub
fildll
sti
mov
add
inc
push
rol
pop
sbb
xlat
sbb
pop
sub
addr16
cs
aad
xchg
in
push
xlat
mov
lret
mov
push
shll
lret
mov
fadds
fadd
mov
push
adc
test
mov
inc
incl
dec
dec
push
push
mov
imul
cmc
cmp
jb
push
or
outsb
cmp
std
rclb
jns
je
loopne
mulb
xchg
inc
outsl
movsb
inc
rclb
mov
imul
in
test
lcall
push
and
pop
fdivs
and
pop
fldenv
dec
je
jbe
call
mov
sub
mov
pop
scas
movsb
dec
out
pop
jmp
out
test
xchg
jl
test
das
cld
and
add
push
lret
shrb
fisubs
insl
shl
and
mov
arpl
aad
jnp
test
mov
scas
mov
mov
lods
mov
pop
rol
lahf
repnz
pop
int
mov
je
fmuls
xchg
jp
cs
js
mov
add
mov
lret
mov
outsb
mov
addr16
cmp
sarb
lods
fistl
jmp
inc
clc
inc
loop
lods
push
lret
ficompl
pop
stos
out
in
lahf
or
push
sbb
cmp
cmp
outsl
sub
sub
cmp
dec
int
push
xchg
pop
dec
xchg
push
xor
cltd
shlb
aas
es
mov
mov
mov
stc
les
jne
rorb
pop
add
mull
dec
repz
repz
in
int3
cmp
inc
sub
bound
imul
mov
test
in
mov
in
lahf
xor
mov
repz
es
xchg
or
dec
mov
cmp
call
push
test
pushf
cmp
or
xor
in
dec
jecxz
out
adc
scas
into
shll
push
xchg
jg
js
cmp
push
mov
and
fs
nop
insb
arpl
shl
aam
jg
iret
jmp
pop
jae
rolb
pop
jae
xlat
or
test
cs
mov
fs
pop
cmovne
mov
inc
lods
call
lcall
into
aaa
mov
adc
or
inc
daa
xchg
inc
mov
bound
mov
inc
ds
inc
scas
cmc
cmp
inc
jns
cmp
sbbl
jnp
icebp
scas
xchg
pop
push
pop
adc
and
push
cmpl
sti
cmp
xor
jo
pop
mov
in
push
and
pop
adc
mov
jmp
stos
and
mov
and
sbb
pushf
and
jle
push
add
pop
bound
mov
out
cli
sbbb
ret
iret
mov
jge
sahf
sub
push
loopne
cmp
mov
sub
aad
mov
xlat
and
add
aaa
pop
cwtl
jmp
push
sub
push
xchg
ljmp
imul
dec
jo
js
addr16
leave
or
push
push
xchg
xor
stos
cmp
divl
imulb
nop
addb
dec
sub
fistpl
inc
jnp
mov
and
fwait
aam
test
jle
inc
sbb
fldt
jb
inc
xchg
mov
das
mov
jae
mov
inc
mov
in
push
mov
mov
arpl
ret
ss
jns
arpl
or
xchg
mov
sub
out
adc
into
push
push
push
inc
iret
cmpsl
push
aam
ss
mov
iret
push
std
out
gs
dec
ss
int
and
decb
jbe
jge
lds
pop
test
enter
push
jo
jo
dec
dec
shrl
lock
in
jb
cmp
pop
xchg
jecxz
and
dec
fcoml
jne
sub
xor
xchg
loopne
cs
push
sub
or
fld
out
flds
ljmp
lods
inc
bound
vpsubsw
aad
daa
hlt
test
popa
and
cmp
dec
push
stos
bound
enter
outsl
stos
push
pop
sub
loope
dec
fiaddl
negb
push
jle
lcall
mull
out
inc
or
hlt
lock
sbb
mov
add
notl
aaa
xchg
dec
out
sbb
ret
push
ret
jo
pop
cmp
inc
je
aaa
jne
xchg
sub
mov
sub
push
pop
and
jecxz
mov
inc
nop
daa
mov
mov
cmpsb
xchg
inc
push
pop
cmc
mov
in
sbb
add
lret
add
push
jmp
hlt
ljmp
xchg
in
shll
push
aaa
dec
sub
xchg
push
pop
cmc
lods
jns
lds
push
lods
pop
divb
shll
lahf
cmpl
dec
test
jbe
sbb
dec
test
mov
mov
and
das
sti
inc
loop
jle,pt
cwtl
mov
mov
jmp
les
mov
xorb
scas
fists
mov
loopne
and
push
dec
nop
xor
mov
or
adc
sub
iret
inc
rcl
popf
push
cmpsb
mov
imul
fiaddl
lcall
das
dec
jmp
shll
lods
jnp
insl
lea
out
add
cmp
lods
inc
in
test
ja
inc
pop
sbb
push
dec
push
adc
inc
sahf
inc
jno
adc
pop
cltd
lods
xchg
in
or
sub
mov
jmp
inc
push
cmp
push
mov
and
fwait
js
imul
mov
outsb
mov
lock
sar
es
arpl
fldl
fs
push
loope
mov
pop
je
adc
sub
mov
jbe
out
mov
add
ljmp
cwtl
stc
inc
ret
jno
mov
xor
pop
das
sbb
inc
loopne
fwait
repz
out
push
mov
rcl
insb
stc
or
inc
pop
adc
in
movsl
xor
lahf
mov
or
in
lds
fsubrl
mov
or
mov
in
movsl
pop
fidivrl
mov
add
inc
repz
addr16
cs
aam
mov
outsb
and
adc
js
xchg
sub
popl
bound
dec
fldenv
popa
out
pop
jmp
clc
add
adc
cmp
pusha
into
cmp
pop
mov
sub
std
or
dec
cmpsb
aaa
sahf
pop
cmp
mov
push
mov
xor
sub
daa
dec
fdivs
aas
adc
pop
or
cs
cwtl
imulb
ja
roll
dec
dec
jecxz
pop
add
out
dec
sbb
lock
loopne
pop
cwtl
cli
out
rcr
add
xchg
xor
jp
xchg
mov
and
xor
mov
sarb
xchg
out
jg
fsubl
enter
inc
mov
inc
stc
adc
popa
dec
adc
stc
out
mov
lds
mov
sub
rcl
incl
mov
cmpsb
add
popa
loop
pop
imul
adc
adc
pop
dec
leave
bound
out
xchg
mov
jmp
es
jg
in
andb
ljmp
in
cmp
pop
inc
sub
adc
mov
repz
or
sub
jmp
jg
dec
push
jns
movb
xchg
aad
mov
inc
ljmp
mov
lock
fnstsw
fcmovnbe
xchg
fldl
shll
es
xchg
push
or
jno
mov
faddp
mov
jle
push
cmp
pop
fiadds
in
add
or
xlat
leave
cs
pop
hlt
in
add
sub
mov
loop
dec
jbe
pop
jb
adc
xchg
pop
xor
mov
cmc
sbb
stos
je
sbb
pusha
add
adc
jmp
mulb
imul
xchg
sub
je
js
and
cmpsl
fists
and
popf
add
mov
jbe
jo
mov
pushl
movsb
je,pn
in
out
cmp
gs
out
jp
aas
xor
sbb
mov
sub
push
push
insb
xchg
lock
adc
cmp
fsubs
or
mov
pop
je
sarb
out
lahf
sbb
imul
cs
std
loope
aas
das
pop
cltd
dec
xchg
lods
cli
cwtl
in
dec
cwtl
pusha
fisubl
xchg
cmp
add
mov
adc
push
push
mov
movsl
sahf
or
jnp
lods
jp
aad
clc
cmp
call
cmp
out
dec
das
mov
test
push
and
int3
inc
mov
sub
and
inc
jl
sub
mov
mov
mov
addr16
and
sbb
ss
int3
ja
mov
jmp
out
int3
cmpsb
mov
or
mov
aas
std
arpl
cld
sub
or
popa
imul
imul
sub
sbb
ja
add
fisubrl
add
or
mov
jecxz
lcall
mov
jp
cmpsb
pop
jp
add
mov
out
dec
loop
mov
lds
pop
not
clc
mov
daa
insb
inc
mov
add
sub
sahf
leave
xchg
aas
xor
pushf
mov
movsb
cli
outsl
adc
xor
dec
push
mov
or
mov
popw
xor
cwtl
mov
jno
inc
iret
mov
std
xorb
push
add
subb
sbb
loope
and
push
xchg
ret
mov
push
dec
fsubs
mov
add
or
test
push
insb
and
push
sub
pop
xchg
push
sahf
mov
xchg
out
lret
mov
pop
into
mov
scas
add
xor
and
mov
add
mov
lret
dec
movsb
cld
insb
mov
test
xor
enter
test
das
popf
rcl
pop
movsb
push
xchg
xor
inc
xchg
mov
adc
lret
rolb
mov
mov
lret
ret
out
adc
jmp
or
clc
jns
cmpb
ret
test
in
pop
scas
in
and
mov
scas
push
jno
ss
loopne
popa
scas
fnstcw
cmp
push
xor
mov
jns
in
sbb
cmc
out
push
cmp
jnp
dec
fdiv
lock
sbb
sbb
scas
push
gs
iret
stc
fstpl
mov
and
jp
imul
inc
jl
push
mov
repz
mov
loop
les
add
test
xor
jne
jno
mov
xor
into
lret
mov
pusha
sub
bound
rclb
sbb
cmp
cli
and
push
inc
xchg
push
and
xchg
arpl
jns
aad
mov
movsl
dec
jno
cmpsl
gs
jmp
out
js
sub
sarl
mov
movsb
sbb
sub
dec
or
jns
xchg
leave
inc
adc
pop
fsubr
test
and
xchg
jmp
xchg
mov
fists
addr16
popf
fwait
pop
add
and
sub
lods
or
jns
adc
leave
ret
pop
paddusb
inc
jb
jle
add
imul
int
int
addl
sti
ss
or
enter
fstl
jae
jo
push
push
mov
pop
and
xchg
jl
adc
pop
in
mov
adc
dec
add
dec
sti
mov
mov
stc
and
xchg
movsb
cmp
sahf
jmp
or
mov
out
fmul
or
dec
xchg
das
pop
shl
adc
notl
xlat
incl
pusha
loopne,pt
in
or
sarb
inc
jbe
fisttpll
movsb
xchg
das
les
movsl
push
mov
xlat
xchg
adc
mov
sub
sbb
jmp
je
clc
imul
icebp
xchg
rcrl
test
dec
xor
push
es
testb
jecxz
fs
lahf
pop
push
and
movsl
xlat
ss
cmp
fbld
dec
mov
negl
pop
add
js
jmp
int
popa
mov
inc
add
push
jbe
push
pushl
leave
mov
xchg
sbb
js
fdiv
sahf
add
enter
bound
fstps
push
int3
js,pt
scas
insl
and
ret
fidivrl
adc
fimull
test
gs
scas
push
pop
sub
inc
mov
inc
cmp
jmp
mov
pop
and
add
pop
fcmovnbe
jno
sub
push
pop
mov
xor
cmp
jl
test
movsb
mov
push
push
push
ret
pop
stc
xor
test
jmp
mov
icebp
xchg
dec
cmp
xor
movsl
inc
mov
or
push
dec
int3
adc
mov
pop
and
movsb
pop
jg
pop
add
int3
mov
dec
daa
and
mov
mov
lods
in
cmp
movsb
mov
xlat
and
cmpsl
pop
xchg
xchg
pop
push
fnstsw
inc
aas
movsb
and
adc
out
jp
loope
cli
jno
std
jge
shl
add
jg
and
lcall
mov
xchg
out
imul
test
shrb
inc
and
aaa
stos
xor
fsubr
es
stos
or
roll
test
lods
inc
push
push
test
es
stos
pop
das
ret
into
push
inc
jns
aaa
sub
xor
in
xlat
xchg
xchg
mov
aaa
or
test
std
inc
scas
jne
push
cmpl
cmp
sbb
shlb
mov
sbb
lods
cmp
mov
sahf
inc
sub
int3
jl
cmp
mov
imul
cmp
lds
mov
jno
jno
adc
shrl
int
cmp
rclb
add
mov
mov
inc
arpl
xlat
mov
out
sahf
repnz
sbb
dec
in
xchg
insb
pop
mov
arpl
ret
loope
pop
cmp
push
cmp
inc
or
hlt
outsb
or
outsl
xor
sarb
xchg
dec
push
ds
jmp
mov
jnp
jecxz
sbb
addr16
in
in
dec
pop
in
repnz
insl
test
pop
adc
adc
adc
rcrl
mov
or
xor
dec
movb
movswl
push
aam
imul
das
insl
pop
in
ja
jl
mov
sub
or
adc
notb
stos
fimuls
and
lcall
test
cmpb
sub
dec
mov
mov
inc
arpl
outsl
pop
popa
aas
xchg
jl
push
in
cmpl
mov
pop
lret
sbb
push
or
add
pop
pop
cmp
js
pop
push
push
xlat
xchg
loop
mov
mov
popa
jle
int
ret
pop
push
mov
aaa
bound
adc
cmp
cli
ss
jo
in
stc
ret
push
scas
pop
stos
rcr
jmp
mov
sub
movsl
sbb
int3
ja
fcmovne
pop
jmp
or
xlat
jns
cs
cmc
mov
jb
mov
xor
mull
mov
add
mov
sub
jle
lds
adc
addr16
mov
push
test
xor
popa
insl
aam
push
inc
icebp
mov
push
push
fadd
shll
and
lahf
gs
pop
and
sbb
mov
and
mov
popa
pop
inc
inc
sti
out
pop
out
mov
rcll
or
jno
sbb
in
fcmovu
inc
mov
push
push
sysenter
mov
jecxz
dec
movsl
mov
xor
jmp
pop
push
fadds
adc
xor
pushf
cmp
lods
cs
test
sti
mov
or
int3
sbb
pop
inc
in
pop
call
pop
cli
ja
arpl
scas
test
cmpsl
or
mov
hlt
enter
mov
pop
sbb
mov
cld
insb
mov
push
pop
inc
add
push
dec
xor
add
mov
inc
push
gs
popa
scas
aam
mov
icebp
lret
add
popf
and
sbb
pushf
dec
dec
lock
pop
pusha
hlt
pop
adc
xor
pop
lcall
xor
or
mov
es
inc
dec
imul
xchg
aam
mov
es
bound
clc
sbb
dec
sub
push
xchg
in
out
enter
shlb
adc
neg
in
sub
adc
mov
imul
mov
or
mov
xorb
cmpsb
xchg
sahf
xor
mov
jge
xchg
shl
jbe
rolb
rol
enter
lods
adc
mov
sub
loopne
stc
cmp
jae
mov
fnsave
es
addb
lock
or
leave
mov
dec
in
xchg
repz
sub
jo
push
jo
mov
or
shll
cmc
hlt
adc
push
bound
and
in
cli
inc
loop
mov
inc
add
xchg
or
mov
jne
sub
inc
mov
lcall
add
and
dec
cmp
nop
inc
adc
push
btsl
stos
push
clc
pop
imul
adc
loop
notb
and
xchg
arpl
pushf
arpl
push
das
lret
leave
lods
iret
in
adcl
lcall
daa
rorb
inc
sti
addr16
das
mov
jae
faddl
jecxz
mov
sbb
mov
xor
insb
push
ja
push
adc
xchg
pop
inc
mov
push
jp
jb
dec
adc
out
push
out
cli
mov
aam
aam
xor
mov
aaa
xchg
test
or
icebp
xlat
insb
mov
shll
and
jp
loopne
movl
and
test
cmpsl
sbb
sbb
rol
dec
cli
fadd
pop
aaa
jbe
lea
cmp
cmp
idivb
ss
push
cli
cmc
int
pop
in
fwait
push
cli
push
or
mov
pushf
sub
cwtl
inc
jp
ljmp
stos
dec
pop
mov
fmull
out
cmc
cltd
cmp
fisubs
sub
jno
mov
popf
out
mov
jb
mov
in
stos
sbb
pop
lods
cmp
push
xchg
jae
cmp
mov
mull
mov
pusha
or
and
lcall
sahf
or
cs
inc
jnp
scas
out
adc
pop
xchg
fucom
xor
pusha
sbb
sbb
cmp
addr16
test
inc
adc
and
in
loope
and
push
mov
dec
aas
pop
add
adc
loope
sub
in
adc
in
mov
xchg
or
lds
out
lahf
mov
mov
dec
repz
jns
cmpsl
outsb
add
pop
sbb
dec
adc
sbb
idivl
jecxz
adc
fistl
fsts
jmp
lods
push
dec
inc
fucom
adc
into
inc
int
xchg
pop
es
sarl
mov
js
jns
sbb
ds
clc
push
cmp
jne
loop
rorl
dec
push
xchg
cld
sahf
iret
push
out
adc
test
rcll
loopne
shlb
rolb
lods
xchg
mov
push
cmpl
mov
lock
ss
jge
and
in
lahf
outsl
xchg
pop
mov
ja
loope
pop
ljmp
fdiv
mov
sbb
pusha
add
jge
ret
inc
jge
stos
pushf
shlb
xchg
inc
enter
inc
dec
mov
lret
lods
inc
fstps
inc
out
outsl
adc
data16
add
int
sbb
nop
dec
adc
mov
test
cmpsl
xchg
leave
sub
jae
lock
negb
pop
mov
mov
in
leave
stc
jns
in
repnz
sbb
mov
cltd
push
cs
adc
push
lret
scas
ja
xchg
pop
jmp
dec
xor
xchg
push
roll
jmp
pop
dec
pop
stos
xor
sub
pop
sbb
insb
lahf
in
cmpsl
adc
lcall
xor
xor
lea
addr16
mov
imul
repnz
inc
in
sbb
stc
pop
bound
mov
test
stc
faddl
std
into
push
xor
xchg
out
jmp
push
repz
inc
jecxz
int
push
rcrb
aam
lret
mov
into
adc
and
pop
adc
adc
push
shrb
call
bnd
mov
and
pop
inc
mov
push
push
or
sbbl
pop
ret
mov
es
fcomip
sbbb
sar
fdivs
shrl
out
clc
in
xchg
scas
lea
imul
add
aad
push
mov
mov
mov
cld
jmp
sub
cmp
mov
repz
mov
push
incb
dec
scas
jnp
lea
add
aad
call
add
cld
xor
adc
jecxz
and
out
roll
mov
mov
sbb
ret
and
fnstenv
popf
test
lds
shlb
mov
test
sar
int
sub
ss
dec
or
aam
in
fnstsw
mov
add
lea
shll
jge
lods
xor
lcall
mov
into
test
or
test
test
sbb
stos
popf
int
add
fsubrl
lea
lahf
mov
js
cmp
sti
mov
and
ror
fldcw
lcall
popa
mov
jp
jecxz
ficoms
movsl
outsb
insb
mov
out
xchg
mov
mov
int3
scas
xor
mov
std
lock
inc
sbb
mov
lret
jae
movsb
pop
dec
popf
mov
mov
dec
adc
mov
push
ret
xlat
jp
insb
pop
push
in
jns
xor
adc
jle
add
sbbb
mov
nop
cmp
es
xor
pop
hlt
cmpsl
jp
pop
push
sub
pop
jno
cmp
pop
test
mov
cltd
bound
and
fisubrs
data16
std
push
sub
mov
cmpsb
int3
mov
jae
mov
xchg
cwtl
push
xchg
jo
dec
mov
dec
and
cmp
fs
dec
dec
mov
popf
ret
and
outsl
pop
cmp
addr16
cmp
fistpll
mov
dec
cli
hlt
aas
add
outsl
push
cmp
xchg
pusha
movsb
mov
bound
mov
int
jb
adcl
mov
push
call
loopne
pop
lods
repz
mov
cmc
sbb
inc
pop
push
adc
mov
imul
push
or
sub
add
xlat
mov
cmpsb
inc
jmp
xor
icebp
push
loopne
cmc
mov
int
mov
mov
ljmp
lahf
dec
jne
pop
pop
sbb
fisubs
xchg
mov
popl
lret
dec
or
and
in
outsl
fxch
gs
aas
push
pop
mov
xor
dec
push
mov
push
pop
mov
scas
in
cltd
push
ret
pop
push
data16
pusha
sbb
not
push
scas
imul
cld
or
mov
pcmpgtd
mov
cmc
dec
repnz
cmp
jo
jb
and
mov
dec
adc
ret
in
mov
mov
pushf
lahf
js
cmp
fwait
mov
in
xor
or
sahf
lods
fildll
pop
or
imul
xor
mov
mov
data16
fists
mov
sti
test
loopne
sahf
aam
jge
std
xchg
cmovb
je
ja
shlb
push
pop
dec
out
sahf
cmp
cmp
in
or
xchg
shll
mov
shll
ds
sbb
jno
das
fisubl
out
icebp
cmp
movsl
fadd
lods
xchg
cmp
cmpl
outsl
or
xchg
movsl
rorl
js
inc
mov
movsb
aam
push
imul
xchg
ret
push
jne
jno
popf
jb
fcomps
dec
jmp
out
cltd
aad
dec
in
incb
jp
js
je
sub
pop
lods
xchg
and
rcll
or
pop
push
std
decb
xchg
into
enter
ret
test
jbe
test
lahf
cmp
sti
imull
aam
pop
loop
sbb
and
ret
dec
cwtl
mov
push
shr
inc
jmp
movl
ret
mov
insb
sub
dec
jmp
jo
data16
pop
dec
cmp
or
aad
inc
and
ljmp
xchg
clc
shll
ficompl
lea
sti
dec
orl
out
add
mov
cmp
or
invd
cwtl
or
imul
stc
mov
aas
shl
movsl
gs
bound
jno
mov
jecxz
repnz
lret
jno
lods
stos
movsl
cmp
dec
stos
lea
jns
les
std
mov
inc
mov
and
adc
sbb
inc
pop
jno
loop
lret
ja
push
push
jge
push
cmpsb
int3
mov
lock
adc
jl
rolb
stc
fwait
ret
shrl
sub
push
dec
std
shlb
pop
or
or
xchg
addr16
hlt
xchg
inc
mov
adc
cmp
and
pop
mov
or
jl
idivl
addr16
sarl
jno
bnd
ffreep
repz
testl
dec
clc
js
leave
ss
adc
xchg
pusha
jae
loopne
inc
mov
push
pop
pop
xor
aaa
inc
push
pop
or
adc
mov
call
ret
mov
mov
repz
lea
and
fnstcw
inc
jle
insb
cmpsl
rorl
mov
fidivrl
lea
adcb
cmp
push
or
test
mov
ret
jbe
ret
mov
notl
sbb
mov
daa
push
cmp
add
mov
incb
shrl
bound
pop
dec
cmc
mov
adc
cwtl
jns
mov
daa
cmp
xchg
adc
add
ja
xchg
xorb
gs
jp
f2xm1
lret
loop
lret
leave
sarl
lret
pop
add
and
xor
imul
inc
xchg
or
push
push
testb
and
les
in
or
jg
add
movl
ss
pushf
xlat
add
lcall
in
shr
inc
lcall
ret
inc
fwait
and
pop
fwait
aaa
sub
lahf
cltd
addb
xor
or
sbb
xchg
pop
aam
push
sarl
or
lret
pop
or
cmc
stos
mov
xor
out
cmp
cwtl
mov
jl
cmp
aas
cmp
cltd
std
mov
jge
les
mov
dec
xor
push
insb
sub
movsl
dec
or
lret
mov
inc
scas
cmp
and
push
rcrl
test
xor
mov
or
pop
jbe
push
or
or
mov
push
jae
push
and
int
out
decl
cmp
pop
cmpsb
lods
xchg
hlt
xchg
mov
fs
aad
fwait
lcall
lea
cwtl
cs
jns
and
push
push
cmp
adc
imul
xor
jg
mov
mov
call
add
sub
inc
std
xchg
push
cmc
fistpl
lods
lds
out
jns
xor
sbb
mov
mov
ret
ljmp
push
out
fwait
sub
adc
push
and
mull
or
lret
negb
xchg
cmp
fistl
mov
hlt
mov
xchg
cmp
rol
addr16
cs
outsb
in
cmp
xchg
into
dec
iret
aas
and
add
lods
mov
push
fistpll
mov
imul
pop
jns
nop
push
movsl
das
xchg
xor
push
or
ret
push
mov
arpl
dec
mov
mov
repz
out
aad
or
stos
push
rolb
mov
inc
push
sub
dec
or
test
dec
movsb
push
clc
dec
fisttpl
dec
pusha
lds
outsl
andl
jnp
dec
lods
lret
add
push
inc
sub
xchg
xor
inc
lods
pop
pop
cltd
jne
test
mov
push
test
or
movb
sti
mov
mov
or
sahf
add
and
loop
mov
mov
sbb
addb
add
mov
cmp
add
mov
addr16
xchg
pop
movsb
add
mov
sub
test
arpl
out
mov
cmc
pusha
lock
cld
out
or
stos
cwtl
mov
jl
sub
fcomps
lock
push
dec
xorb
dec
call
fcom
loope
popf
jle
mov
call
test
pop
push
inc
xor
pop
pusha
mov
insl
lret
pop
push
shlb
cmp
jno
mov
pop
enter
ljmp
and
das
pop
pop
mov
push
shlb
jne
push
outsb
mov
sbb
lock
ja
xlat
ds
sbb
lods
sbb
rclb
jecxz
xor
inc
inc
and
int
int3
xchg
mov
cmpl
enter
jle
mov
idivl
ss
mov
std
lret
and
in
adc
aas
jns
dec
fists
mov
and
inc
fs
lods
jnp
das
loopne
jg
cmpb
test
mov
ljmp
cmp
cmc
or
sub
inc
aad
test
inc
ss
xchg
mov
ret
bnd
mov
mov
xchg
mov
mov
inc
iret
and
cltd
jp
pop
ret
mov
mov
in
and
adc
scas
loope
das
xor
mov
movsb
pop
movsl
stc
cmp
inc
push
or
test
outsl
push
incb
xchg
push
sub
enter
dec
loope
inc
inc
push
add
xchg
inc
dec
pop
xor
loop
sbb
fisttpll
ret
pop
push
pop
add
mov
dec
loopne
repnz
jo
xchg
mov
cmp
inc
stos
xor
xchg
xchg
into
mov
repz
xchg
jge
xor
aad
movsl
pop
jmp
inc
push
cs
mov
fisttpl
mov
in
aas
mov
in
stos
je
or
loop
mov
pop
mov
pop
fidivrs
inc
adc
or
loope
cmp
fsubrl
sbb
jge
loopne
pop
push
divb
push
push
jmp
sbb
in
in
pop
into
movsb
push
and
xor
xor
cltd
stos
bound
pop
cltd
push
mov
jo
inc
jae
and
jl
jo
mov
or
dec
or
iret
mov
add
add
and
push
xchg
hlt
sub
xor
mov
sub
enter
inc
jle
xchg
cs
ficoms
adc
loop
lods
sbb
int3
les
std
cli
push
adc
shl
ds
ds
test
jne
push
and
xchg
dec
stc
mov
out
testl
mov
stos
mov
or
ret
mov
push
in
outsb
inc
and
add
mov
mov
mov
cli
or
int3
dec
aaa
xlat
jns
pop
daa
lahf
add
in
ljmp
push
and
cmp
jle,pt
aam
mov
fstl
dec
imul
test
or
adc
pushf
adc
pop
push
into
mov
popf
hlt
repnz
gs
xchg
and
pop
pop
mov
aam
nop
fwait
imul
push
dec
add
fcmovu
rol
mov
jecxz
pop
pop
mov
xor
repnz
jno
pushf
icebp
sbb
sub
add
pop
shll
fwait
mov
aaa
jmp
arpl
and
adc
pop
jns
cmpsl
pop
pop
xor
std
fistl
cmp
push
push
cmp
rolb
push
add
xlat
cld
jle
adc
adc
das
add
bndldx
movsl
pop
sub
push
push
int3
int
dec
je
push
jae
pop
adc
mov
inc
and
adc
push
rcrb
dec
cmp
cmpl
mov
and
add
mov
xchg
dec
mov
rcrl
loop
sub
fxch
inc
ja
fimull
add
ljmp
in
mov
adc
dec
xchg
and
sub
lods
sub
mov
and
jecxz
mov
or
jns
lcall
and
xor
mov
xor
cmp
mov
jge
adc
xor
bound
ret
aas
daa
jno
int3
cmpsb
push
clc
sarl
mov
adc
inc
add
jbe
or
pop
leave
clc
add
pop
aad
push
sbb
push
and
and
mov
fisubl
mov
iret
cmp
inc
out
mov
popf
stos
cmp
hlt
inc
dec
stos
or
inc
sub
xor
pcmpgtb
xor
inc
or
inc
rcrl
pop
cli
mov
lea
leave
addr16
sub
mov
push
jne
and
popa
jp
pop
fisubrs
adc
or
jo
push
sbb
int3
sub
pop
or
lods
xchg
sub
ret
jbe
sbb
in
inc
push
push
adcl
push
or
test
dec
shrb
es
jne
mov
inc
add
push
movsl
out
xor
push
cmpsb
sub
mov
aam
mov
rcrl
pop
xor
jl
cli
dec
jo
hlt
push
and
and
hlt
push
fidivrs
loopne
inc
mov
pop
push
or
jne
stos
mov
xchg
daa
pop
sbb
inc
addr16
cmp
sub
je
cmp
loop
movsb
pop
imul
cmp
adc
out
aaa
cmp
pop
mov
shlb
stos
cwtl
test
les
dec
repz
jno
or
in
mov
outsb
int3
cld
arpl
lock
clc
cmpl
jecxz
dec
lds
imul
mov
pop
mov
push
pop
push
push
inc
and
test
rorb
pushf
lcall
lock
les
cmp
sub
adc
xchg
xchg
adc
popa
push
jne
dec
test
lcall
dec
mov
mov
or
cmpsb
pop
loope
sbb
push
push
mov
adc
test
xchg
push
sbb
pop
insl
outsb
mov
dec
push
sti
cmp
lods
cmc
push
mov
add
ja
inc
sub
popa
fwait
ret
sbb
ljmp
push
push
jp
out
sbb
lret
and
daa
pop
fwait
push
mov
test
add
cmp
imul
in
or
dec
fisttpl
loopne
sub
movsl
sub
es
test
adc
outsb
push
in
jo
sub
mov
daa
stos
pop
das
repz
popa
imul
adc
in
jae
push
mov
push
mov
sbb
aam
faddl
hlt
aam
fs
lock
or
jle
mov
xor
int3
cmc
lock
xor
push
cmpsl
lret
or
ja
push
add
dec
dec
cmpsb
addl
bound
jbe
rclb
xor
ret
inc
push
and
mov
pop
loop
out
cmp
mov
jae
in
inc
jp
cmpsb
xchg
jg
mov
and
iret
pop
or
xchg
or
jae
push
cmp
jnp
addr16
xchg
leave
and
jae
push
lock
push
sub
mov
adc
push
repz
out
cmp
lea
int
lret
movsb
and
sub
xor
adc
ret
and
movsb
fsubl
leave
mov
ljmp
in
or
imul
out
ja
sbb
js
jecxz
cmpsl
dec
mov
iret
pop
cmp
dec
stos
insl
xor
mov
cs
js
jo
mov
ror
xor
outsl
das
movsl
repnz
scas
inc
mov
test
pop
push
push
push
mov
dec
mov
loopne
and
lods
inc
xchg
xor
adc
push
fisttpll
adc
fwait
ret
mov
leave
add
cmp
mov
dec
lods
push
adc
mov
hlt
adc
xor
adc
pop
iret
mov
call
faddp
cmp
icebp
xlat
dec
dec
xor
sbb
sti
push
pop
jno
in
mov
out
icebp
lea
adc
xchg
loope
loope
outsb
lods
or
mov
outsl
lahf
jp
pop
movsb
loop
mov
mov
insl
aad
dec
mov
cltd
int
push
icebp
stc
and
ds
faddl
xchg
jle
negb
xor
adc
dec
movsb
add
gs
mov
clc
push
xor
pop
pslld
lods
fldcw
outsl
dec
push
subb
lods
sbb
sti
adc
imul
std
push
and
scas
aam
cmp
test
insb
loope
sahf
sahf
mov
push
push
cmpsb
inc
jmp
push
stos
and
imulb
mov
mov
sub
dec
jo
out
and
or
add
out
jnp
movb
hlt
rcr
xchg
push
push
fwait
mov
pushf
iret
fs
aam
or
shl
mov
dec
sti
lcall
cld
add
pop
enter
cmpsb
jmp
movsb
mov
xchg
insb
push
adc
sbb
xchg
xlat
adc
repnz
mov
inc
iret
mulb
or
pop
jns
pop
rolb
adc
dec
or
arpl
out
push
gs
dec
xchg
jo
push
mov
rorl
cmp
mov
jno
mov
jge
inc
shlb
dec
adc
mov
fnstenv
jb
or
cmp
jge
les
dec
repnz
aam
adc
mov
enter
fcompl
push
rcll
and
rcll
fisttpll
or
sbb
push
sub
push
jno
ja
sbb
dec
jae
dec
nop
iret
sahf
mov
rcll
mov
or
add
add
pop
pop
scas
test
mov
adc
rolb
mov
cmp
in
int3
push
add
inc
dec
sahf
push
dec
mull
push
data16
xlat
sarl
aaa
pop
pop
jg,pn
shlb
sti
mov
sti
or
mov
ds
lcall
repnz
mov
outsb
repz
out
sbb
mov
mov
shll
sarl
lcall
or
push
xorl
jl
test
cmpl
aam
out
test
mov
mov
subb
mov
out
pushf
and
add
add
fdivrl
push
dec
fwait
jl
mov
dec
shlb
and
out
xrelease
pop
scas
pop
xchg
and
jp
adc
push
rolb
out
cs
shlb
pusha
inc
xlat
pop
pop
cmp
aas
test
mov
mov
je
jp
sbb
adc
adc
add
int3
jp
aas
jno
leave
loopne
mov
push
mov
out
pop
addr16
test
pusha
jno
inc
xlat
push
es
inc
inc
dec
jno
sub
and
out
add
jb
cmp
add
daa
adc
or
pop
pushf
movsb
js
lcall
sub
fstpt
stc
mov
push
jnp
xchg
adc
xchg
add
dec
adc
cltd
hlt
adc
in
out
mov
js
and
fisubs
push
sbb
out
shl
sbb
popf
pop
mov
sbb
xor
aam
jae
es
lret
cli
aam
pop
fists
in
dec
cltd
leave
mov
xchg
inc
inc
push
adc
outsl
pop
inc
imul
test
sub
das
mov
int
pushf
lret
mov
jp
xchg
lcall
rcr
add
or
jbe
in
sub
pop
sub
or
jecxz
or
fmull
add
popl
gs
imul
pop
adc
jno
sar
xor
enter
iret
push
aam
fcmovb
test
lcall
pop
sbb
pop
outsl
and
scas
les
pop
out
jmp
aas
bound
popa
mov
or
xlat
push
xchg
or
cmpsl
cmp
cmp
in
xchg
dec
aad
sar
xor
inc
scas
je
push
es
xor
scas
xchg
adc
notb
lock
rclb
sub
ret
pusha
jecxz
xchg
mov
in
pop
cmc
cwtl
out
xor
fimull
and
inc
and
movsl
aam
dec
imul
and
mov
sbb
icebp
adc
xchg
jl
test
repz
int3
in
and
lock
mov
mov
jecxz
mov
cmc
adc
jmp
xchg
push
inc
cmp
lea
add
pusha
imul
mov
scas
push
out
cmpsl
rep
jle,pn
or
cmp
pop
test
cs
scas
fcmovnu
arpl
mov
mov
push
popf
enter
fbstp
test
add
add
mov
aaa
mov
xor
add
xlat
jne
hlt
adc
push
or
insl
cwtl
push
aad
mov
xchg
xchg
push
cmp
fidivrl
add
aaa
add
push
lock
xchg
rol
adc
cmp
xchg
push
lret
not
lahf
sub
fwait
xchg
fildll
inc
and
dec
inc
fdivr
test
aam
add
xchg
incl
and
cmp
adc
cmovge
ss
stc
ds
and
add
sub
push
ret
stos
adc
jne
cmp
push
mov
enter
push
enter
daa
inc
rol
pop
xchg
jb
jae
ret
arpl
inc
pusha
sub
aaa
in
fdivl
push
aaa
movsb
dec
imul
pop
inc
pop
adc
imul
or
xlat
rorb
lcall
gs
push
mov
xor
outsl
mov
mov
or
sub
test
fsubrs
xchg
or
shlb
mov
lret
or
ss
roll
dec
sub
jbe
mov
sub
fld
icebp
push
sub
or
jmp
mov
popf
iret
add
or
imul
mov
mov
pop
sahf
or
push
or
mov
out
xchg
push
push
add
enter
mov
push
lea
aad
adc
jbe
xchg
jb
nop
clc
mov
and
dec
xchg
fincstp
pop
cmp
jecxz
mov
mov
pop
xchg
lea
dec
sbb
in
mov
cmp
cmpb
in
divl
ret
pop
cs
jle
loopne
jb
cmp
sub
test
std
cmpsb
jge
push
sbbl
adc
adc
pop
mov
cmp
or
lods
inc
sbb
call
lcall
jo
jno
pop
adc
out
mov
sti
cmpsb
dec
fsub
in
call
or
adc
aad
imul
je
sbb
push
inc
pop
mov
dec
jg
push
adcl
sti
pop
movsb
pop
out
mov
sbb
out
int3
imul
adc
nop
xchg
add
fidivrs
mov
lahf
js
sub
cmp
cli
ja
rcrl
push
dec
imul
fidivrl
sbb
mov
jl
sbb
cmp
aad
out
xchg
inc
add
fiadds
out
lret
jo
lret
xchg
icebp
dec
inc
test
scas
incb
and
fdiv
pop
cwtl
negw
sha1msg2
subb
xlat
int
jp
mov
outsl
sub
mov
stos
sahf
sub
sar
movb
mov
in
or
jl
push
jo
mov
xor
test
fildl
ret
inc
je
in
lods
dec
cmpl
je
pop
adcl
cmpl
aam
es
mov
adc
sub
fs
out
popf
test
in
push
arpl
push
adc
push
addr16
jns
jns
in
lcall
daa
mov
xor
pop
mov
movsl
cmp
das
push
test
ficompl
mov
dec
bound
xchg
sti
adc
in
mov
call
xor
mov
dec
add
loopne
ljmp
adc
lds
cld
lods
push
pop
shll
shrl
lcall
ret
jo
andb
add
dec
lret
xchg
xchg
je
imul
inc
xor
mov
jne
cmpl
test
daa
orb
ja
aad
xchg
sub
sti
stos
mov
add
xchg
add
clc
cli
sbb
jp
stos
pusha
pop
jmp
cmpb
in
add
cmp
outsl
lock
dec
pop
push
movsl
aaa
orl
adc
lss
dec
imul
lahf
push
jae
test
sbb
dec
data16
cmp
push
rorl
inc
repnz
stos
nop
mov
push
rcll
xor
sbb
push
arpl
mov
mov
loop
mov
push
adc
and
ljmp
mov
popf
or
lods
dec
rcrb
divl
adc
xchg
aaa
mov
inc
out
sub
out
sub
pop
mov
sbb
test
out
sti
sbbl
mov
ljmp
jmp
add
lods
das
mov
call
mov
cmp
stos
cmpl
pop
sbb
xor
adc
les
or
cmpsb
inc
pop
scas
mov
fsubs
or
fidivs
sbb
jno
and
cmp
pusha
rolb
adc
pop
std
aam
xor
jo
push
shll
mov
jle
mov
lods
xor
cmp
mov
or
mov
sub
mov
lcall
jae
sbb
push
and
mov
lahf
test
mov
dec
loope
sarb
mov
cs
jmp
adc
jge
stos
clc
and
lods
or
cmp
fisubrs
xor
pop
sub
stc
adc
sbb
adc
aaa
pop
imul
and
shll
push
in
les
mov
inc
push
cmp
faddp
rclb
cmpsb
lods
mov
sbb
insl
pop
xor
test
push
cmpsl
movsb
in
arpl
stc
movsl
mov
or
mov
xor
sbb
pop
mov
dec
xor
mov
jo
or
add
mov
cmp
add
inc
test
lret
inc
push
loope
inc
outsb
mov
adc
scas
fstl
and
push
sub
movsl
mov
pop
lret
lock
test
into
mov
in
sub
cs
scas
push
mov
lahf
sti
inc
cmp
cmp
adc
pop
ret
icebp
js
sbbb
ds
mov
cmp
cli
jae
aad
and
push
testb
adc
daa
xor
mov
or
aam
rcrl
lock
in
out
mov
mov
push
into
dec
push
fadd
push
mov
imul
xchg
push
mov
xor
mov
outsl
ret
es
cmpsb
mov
aam
jmp
push
mov
scas
inc
int
pop
loopne
add
inc
loope
es
xchg
gs
adc
jmp
pop
loopne
leave
fnstsw
dec
adc
and
test
jb
out
xchg
inc
test
mov
shl
aaa
loopne
out
mov
pusha
movsl
jecxz
pushf
cmp
add
or
cwtl
repz
push
add
sti
push
cmpsb
clc
subl
sub
dec
push
inc
loope
mov
cmp
js
lea
xchg
adc
jmp
mov
loopne,pt
mov
ja
push
bound
mov
dec
mov
adc
stos
int3
cmp
and
sbb
add
repnz
sahf
inc
sbb
jp
negl
repnz
pop
je
gs
push
dec
lahf
cwtl
sarb
add
dec
lahf
mov
lods
or
sahf
add
dec
cs
jae
inc
jge
sub
sub
ret
inc
cmp
jp
js
and
jo
sbb
nop
es
xchg
mov
ret
xchg
inc
xor
notl
test
mov
add
bound
mov
ficomps
mov
decl
outsl
adc
imul
test
push
mov
lods
mov
mov
push
xchg
mov
pop
cmp
enter
inc
add
leave
cmp
mov
jl
push
test
or
out
ja
cmp
ja
mov
jo
cmp
jmp
jecxz
sub
shr
fsts
call
sub
adc
pop
test
push
xchg
shrl
jg
icebp
lea
cmp
stos
sbb
in
ljmp
dec
jl
cmc
loop
rorl
and
cs
scas
loop
pop
dec
mov
dec
call
sbb
jne
mov
insb
push
mov
pop
push
xor
dec
inc
mov
inc
sbb
sbb
sub
push
adc
sahf
in
rcll
addb
and
int
negl
jno
push
rcrl
and
lods
fisttps
rep
sti
mov
shlb
sub
ret
xchg
sub
out
aas
inc
js
mov
fisubl
jb
pop
es
xchg
cmp
pop
popf
fucomp
push
inc
adc
add
push
test
mov
es
xor
xchg
add
sub
out
andl
cmpsl
push
sub
leave
xor
mov
jp
cmpsb
jmp
mov
jl
adc
rorb
in
push
add
pop
cmp
insb
sub
addr16
inc
lock
jmp
and
adc
outsb
jp
pop
push
outsl
arpl
and
ja
mov
ret
cmpsl
insl
pop
rorb
or
out
and
jle
scas
nop
pop
push
sbb
das
pop
das
inc
cltd
es
jl
inc
add
push
xorl
std
xor
fnsave
sub
jb
hlt
stos
gs
jbe
xor
xor
hlt
test
inc
in
sbb
mov
xchg
adc
adc
jo
mov
adc
imul
jo
sahf
mov
loop
pop
cmpsb
push
push
or
add
faddl
icebp
push
les
fxsave
xchg
pop
and
out
pop
mov
popa
jle
mov
mov
xchg
sub
lods
test
inc
loop
flds
pop
mov
mov
sub
lcall
lahf
inc
or
sarl
mov
sysexit
and
and
repnz
push
sbb
inc
mov
mov
adc
mov
xchg
int
inc
mov
sbb
roll
lea
pop
into
mov
outsl
mov
pop
popa
or
push
and
roll
daa
mov
dec
mov
add
lea
mov
push
xor
inc
push
inc
or
mov
js
and
jmp
cmpsb
mov
pop
push
ja
push
xchg
sub
mov
inc
sub
or
inc
pop
mov
icebp
dec
mov
dec
jae
cmc
ret
push
jge
dec
jg
mov
and
scas
shl
dec
out
mov
jl
mov
loop
xchg
test
leave
jns
pop
pop
mov
dec
out
jne
mov
sub
xchg
loopne
adc
add
rorl
lods
cmpsl
roll
pop
pop
jbe
dec
jecxz
mov
mov
cmp
icebp
and
adc
jo
clc
mov
sub
shl
test
xchg
addr16
fwait
pop
lea
push
cmpsl
movsb
pop
cmp
push
xchg
sbb
test
test
jl
mov
cmpsl
scas
cmpsb
xor
add
aad
jns
mov
xor
cmp
aam
popf
push
jl
add
push
mov
fdiv
pop
mov
int
clc
xor
outsl
pop
nop
sub
xchg
clc
xchg
mov
sbb
or
negl
sahf
mov
and
lds
ljmp
mov
ljmp
sbb
xchg
mov
cmpsl
xor
and
fcoms
dec
push
aas
fidivrl
and
add
mov
adc
xor
frstor
inc
sar
pop
insb
ljmp
mov
sbb
lahf
es
xchg
lcall
mov
test
mov
ljmp
shrb
in
xor
fsubrs
test
ja
mov
mov
pop
arpl
out
mov
mov
rol
sub
add
fiadds
mov
mov
movsb
xor
cmp
bound
jbe
int3
pshufw
add
dec
xlat
pop
push
adc
xor
mov
in
stos
rcr
sub
and
sti
ds
int3
xchg
jmp
cld
mov
adc
shr
test
sub
insb
cmpl
sahf
xchg
repz
add
cmp
dec
sub
iret
je
sbb
popa
popf
xor
mov
push
xchg
jno
cmp
pusha
add
dec
call
jae
insl
les
test
xlat
aam
cmp
xchg
push
xchg
test
push
insb
jae
jnp
fcmovb
sub
adc
mov
ljmp
repnz
cmp
daa
scas
push
mov
xor
push
addr16
iret
rcrb
cs
insb
sbb
iret
cmp
scas
xor
cmp
push
push
mov
loope
arpl
leave
cltd
mov
xchg
lods
mov
xor
pusha
sti
dec
cmp
lods
cmp
fisubrs
test
jge
xor
xchg
ret
stos
jmp
sbb
jb
xor
faddl
push
mov
es
bound
loop
std
lock
sub
mov
mov
sub
aad
std
sub
cmp
adcl
addl
adc
dec
movsl
popl
cld
xchg
jle
push
ja
pop
int3
xlat
repz
mov
popa
fiaddl
aad
loopne
push
or
inc
mov
les
pop
ret
or
es
and
gs
adc
mov
and
enter
jmp
xchg
fstl
insl
fcomps
pop
ret
push
mov
jb
xor
fsts
imul
mov
mov
fdivl
sbb
pop
cld
dec
popa
mov
push
push
dec
xlat
adc
mov
jecxz
jle
fs
cmp
fists
mov
daa
aaa
mov
sub
xchg
in
xor
nop
lahf
hlt
xchg
lcall
aad
bound
cvtdq2ps
xor
pushf
sbb
cmp
sub
cwtl
mov
int3
pop
inc
inc
pop
in
std
in
mov
imul
icebp
bound
cmp
add
or
bound
shlb
fistpll
sar
mov
sahf
ds
mov
dec
lcall
arpl
adc
mov
int
mov
inc
nop
sub
xchg
mov
pop
repnz
aam
ret
pop
cmp
xchg
and
arpl
sub
out
imul
addb
fdivrl
mov
hlt
ret
sbb
xchg
push
jno
cmc
scas
mov
stos
negb
jo
ret
xchg
popf
and
adc
jnp
enter
mov
in
or
jge
mov
out
lods
mov
or
lock
pop
mov
cs
sbb
inc
ljmp
sahf
mov
iret
popa
adc
xchg
stc
in
rcrb
adc
add
push
testb
pop
test
sbb
rcrl
xchg
or
add
mov
shl
mov
call
pop
mov
clc
jbe
clc
xor
in
xchg
cmp
adc
movl
mov
mov
xchg
xchg
mov
jp
adc
arpl
xchg
lock
mov
xchg
cmp
and
inc
arpl
cmp
stos
push
mov
lods
xor
ret
add
adc
test
jne
out
test
into
mov
bnd
enter
jecxz
mov
les
icebp
or
pop
sahf
rcll
rolb
pop
inc
dec
jp
xchg
lret
jae
stos
sub
push
inc
push
aam
xor
inc
add
mov
mov
xchg
ds
add
xor
mov
dec
pop
mov
jmp
cmp
sbb
daa
xor
add
into
cmp
aad
push
pop
mov
fwait
out
das
inc
mov
shrl
adc
test
mov
mov
ja
pushl
and
jle
pop
jno
pop
adcb
push
movsb
dec
pop
mov
adc
pop
add
mov
test
xchg
dec
dec
lret
lea
daa
inc
les
test
nop
in
cmp
mov
dec
mov
and
cmpsb
jne
enter
loop
das
ds
add
adc
repnz
mov
jns
adc
adc
lds
loope
fsubrs
cmp
imul
sub
arpl
mov
and
das
scas
dec
pop
xor
jle
push
xchg
sub
cs
out
out
das
jnp
insb
pop
mov
test
shlb
outsb
xlat
arpl
lahf
xchg
mov
fsts
in
xchg
mov
push
les
test
les
rcrb
jmp
test
fwait
imull
arpl
sub
lods
pop
gs
std
mov
fistps
fnstenv
mov
jle
adc
sbb
push
xchg
pop
pop
mov
inc
addr16
or
xlat
jno
mov
push
pusha
testb
clc
neg
insb
cmc
pop
mov
pop
jmp
cli
push
sbb
test
es
addr16
and
aad
cmpsb
xchg
out
lea
or
packuswb
fs
into
push
pop
fdivrs
sub
or
or
xchg
push
adc
push
lea
mov
lds
jbe
addr16
and
pop
sub
es
mul
int
adc
sbb
mov
add
popf
push
and
ret
cmpsl
lods
xor
pop
or
inc
cmp
jecxz
test
std
addr16
mov
lcall
inc
add
out
and
xor
and
xchg
gs
jns
or
ficoms
push
push
lock
add
popa
loope
mov
insl
sbb
cmc
addl
jb
cmc
bound
dec
pop
xor
pop
and
adc
sarb
sub
test
sub
fucom
ljmp
cmp
mov
in
je
idivl
int
inc
mov
add
loop
mov
in
jns
lods
fsts
int3
in
lcall
cmp
or
jb
stc
inc
xchg
scas
and
in
insb
add
xchg
daa
ret
cmpsl
test
nop
mov
xchg
and
and
rclb
ret
in
mov
stc
mov
mov
jmp
mov
sub
push
jl
insl
dec
xor
mov
mov
xchg
mov
jl
jmp
xchg
push
jecxz
xchg
lock
inc
cld
ja
icebp
xor
out
pop
fdivrl
bnd
repz
mov
mov
mov
sub
loop
imul
subl
mov
jne
mov
movsb
sub
fmuls
pop
sbb
jb
adc
add
jno
fwait
add
mov
rorb
jbe
repnz
jo
into
ds
xor
loope
push
fs
rcrb
cmp
popf
cli
xchg
cmp
sub
js
inc
aas
mov
sbb
push
ljmp
jp
movb
mov
in
notl
mov
cltd
mov
dec
mul
lret
adcb
pop
adc
jo
int3
push
fldenv
fisttps
jmp
cmp
faddp
loopne
fldcw
popf
js
andb
mov
xor
push
dec
cmp
push
cld
inc
dec
jmp
mov
pop
xchg
dec
insb
mov
push
jp
bound
jo
testl
cmp
mov
fnstenv
jmp
push
sbb
fwait
push
sub
movsb
mov
sbb
sbb
jle
push
int3
mov
pop
pop
and
shrb
insl
dec
out
xorl
ret
fildl
shl
jo
imul
inc
pop
xchg
add
and
call
push
fistps
dec
add
outsl
mov
xor
jmp
add
mov
je
cmpsl
cmc
cltd
pop
imul
ds
repz
in
ret
xor
xchg
out
call
add
xchg
cli
adc
sbb
stos
cmpsl
movsb
div
jne
adc
mov
daa
and
cld
mov
cli
int3
jb,pn
call
xchg
lods
ret
push
xchg
pop
inc
lods
cmp
mov
stos
and
aam
fwait
fs
sub
outsb
out
outsl
pop
icebp
push
addr16
inc
push
xlat
mov
dec
xor
push
aad
leave
push
xchg
lret
ljmp
push
outsb
sahf
adc
and
jno
sbb
mov
xor
mov
les
loop
pushf
mov
lea
mov
test
xchg
arpl
cmp
sbb
cwtl
clc
mov
ficomps
aad
in
pushf
push
mov
add
mov
jmp
stc
aad
add
mov
js
jg
out
movb
faddl
inc
push
xor
mov
adc
cmp
adc
pop
xor
adc
shrl
and
adc
jbe
std
lea
mov
xchg
outsl
icebp
jmp
je
pop
jo
fs
pop
jmp
xchg
in
mov
jo
aam
lods
xor
mov
lcall
push
jmp
jp
jbe
loopne
push
jae
pop
aas
call
lret
cld
sbb
sbb
xor
push
in
test
add
sub
es
xchg
sub
and
push
jmp
rcr
fyl2x
and
clc
pusha
jne
xor
fwait
sub
push
inc
aaa
aas
lods
insl
and
inc
ficoms
imul
in
lret
pop
lret
in
mov
pop
repnz
jl
jnp
xchg
lcall
xlat
loope
cmp
inc
and
sbb
fs
push
push
mov
xor
mov
sub
add
out
jnp
inc
lcall
out
mov
adc
aad
rolb
pop
test
js
xchg
add
pop
leave
insb
xor
or
sbb
scas
sub
in
mov
or
pop
ja
cmp
push
inc
inc
xor
xchg
and
pop
add
mov
daa
outsb
into
xor
imul
int
mov
mov
add
mov
push
in
test
mov
dec
gs
clc
lods
lret
cld
xor
fcompl
sbb
pop
cmp
in
xchg
and
rclb
mov
or
dec
jo
mov
pusha
xor
es
xor
cmpsb
inc
pop
jno
sbb
push
sbb
xlat
icebp
in
dec
pop
int3
ret
mov
or
pop
fldenv
mov
mov
mov
mov
mov
cli
movsl
push
sti
aas
iret
or
orb
mov
inc
imul
popf
pop
xor
jae
xchg
dec
push
fdivrp
shlb
or
push
mov
mov
aaa
add
aas
in
stos
sub
rcl
jmp
js
push
in
dec
mov
insl
mov
push
jp
incb
xchg
sub
negl
dec
push
icebp
inc
imul
dec
xchg
mov
mov
add
mov
divb
push
mov
icebp
aas
add
mov
pop
inc
sub
pop
xor
fidivrs
pop
pop
mov
sbb
lods
in
mov
push
cmpb
in
cmpsb
leave
mov
cwtl
cmpsb
push
xchg
ficomps
jmp
dec
data16
jno
add
or
jecxz
cmp
xor
sarl
jp
outsb
mov
out
icebp
shlb
jecxz
xorl
lahf
and
cs
fistpll
inc
mov
sub
inc
iret
pushf
clc
cmp
pushf
fisubl
xlat
pop
popa
inc
push
push
pushf
push
lret
inc
or
sub
lret
int3
push
fists
xchg
xchg
rorb
lock
jmp
pusha
jp
jbe
xchg
jge
into
ret
jnp,pn
cwtl
out
arpl
aam
loopne
sbb
xchg
jae
out
adc
mov
dec
mov
push
mov
iret
leave
sbb
clc
mov
lahf
mulb
rorb
ljmp
cmp
add
orb
imul
jno
mov
mull
call
push
insb
int
int3
shrb
jg
sbb
mov
loope
das
inc
lcall
imul
adc
and
mov
js
les
pop
xchg
or
dec
icebp
dec
mov
movl
mov
scas
mov
pop
mov
call
push
rclb
lock
cld
push
insb
cmp
addl
and
repz
fimuls
xor
lock
enter
lock
dec
shl
cmp
or
sarl
mov
jge
sarl
lock
or
int3
mov
decb
jns
sti
cmc
test
sbb
inc
lock
or
iret
xor
dec
mov
std
push
pop
shlb
aam
dec
inc
xor
fs
mov
adc
mov
rcrl
fcomps
pop
pop
addr16
lret
cmc
daa
lods
sub
fadds
subb
ss
cli
stos
ret
push
in
push
repz
cmp
rol
inc
shrl
cmp
scas
sub
jbe
outsb
pop
ds
push
xchg
adc
fldenv
loopne
push
enter
sub
jae
lods
frstor
jns
sbbb
push
test
push
loope
pop
enter
insb
jnp
jne
jg
sub
adc
cmpsl
bound
clc
testb
push
jne
push
mov
inc
inc
push
push
scas
test
cwtl
pop
into
shrl
mov
cmp
mov
or
sahf
mov
lahf
sub
bound
add
pop
and
je
xchg
jecxz
lock
xor
inc
push
test
and
push
cmp
mov
jg
ret
mov
loopne
lahf
stos
cmp
lods
sbb
xchg
aaa
movsb
and
lock
pop
clc
pop
divb
cmp
mov
outsl
xor
sbb
cmp
out
mov
mov
sbb
das
daa
test
xorb
hlt
cmp
je
lods
rcr
cmp
mov
fsubrl
xchg
jbe
sarl
iret
pop
mov
adc
ret
lret
and
in
jg
aad
stos
dec
or
sbb
push
imul
jg
mov
pop
jb
imul
mov
es
data16
loop
mov
jge
inc
bound
test
daa
sub
cmpsb
cmp
sub
stos
pop
mov
cltd
xor
lea
inc
and
in
test
inc
imul
test
pop
add
popf
inc
aam
xor
cmpsl
add
mov
loope
mov
inc
add
add
fbld
pop
and
insw
lahf
icebp
sahf
and
out
loop
fwait
jg
out
andb
aaa
out
aaa
xor
mov
das
jo
insb
imul
sbb
mov
xchg
out
sbb
or
lea
jle
lret
fwait
cmp
sub
sahf
cmp
cmp
movsl
push
call
out
mov
test
rclb
dec
jl
inc
sbb
cli
pop
mov
enter
arpl
div
stc
test
pop
inc
mov
push
sbb
pop
mov
es
pop
dec
fnsave
imul
je
pop
sub
add
mull
and
pop
mov
lret
pop
pushf
cwtl
xchg
clc
outsb
xchg
dec
rol
test
dec
add
test
cmp
pop
add
jg
cwtl
jns
aas
aaa
push
in
mov
inc
pop
sti
imul
mov
pop
pop
sti
mov
jge
sub
xor
sti
mov
in
popf
lret
int
jns
xor
dec
cld
insb
inc
push
lods
clc
repz
jns
xor
or
adc
jnp
and
cmpsb
xchg
mov
push
and
test
lret
add
and
add
dec
mov
or
inc
inc
sbb
mov
das
daa
inc
inc
mov
cmc
mov
scas
lret
jo
push
aam
sti
sahf
nop
mov
fdivl
sarb
dec
xorl
icebp
lcall
inc
xor
cli
mov
push
popf
mov
inc
dec
xchg
les
scas
mov
notl
scas
sbbb
in
xchg
pop
add
mov
mov
clc
inc
mov
or
jl
fsub
or
xchg
inc
mov
xor
aas
rorl
push
fwait
inc
or
fimull
and
push
rcl
int3
insl
pop
pusha
push
out
jne
rcll
jp
sub
dec
shrl
mul
je
pusha
insb
mov
push
cmpsb
or
mov
sub
mov
iret
aad
mov
pop
incl
add
cli
pusha
fisubrs
ds
sbb
jnp
lock
cmpsb
xor
or
mov
add
outsb
sbb
or
rorb
xchg
jbe
and
mov
jo
and
stc
insl
sub
lcall
dec
or
mov
bound
mov
outsb
pop
fcmovu
mov
cmp
push
fcomps
mov
leave
test
xchg
in
mov
xchg
repz
movsl
ds
cltd
ss
mov
mov
add
or
lret
cmp
popa
cli
enter
nop
movsbl
int
cs
or
pop
adc
jl
jbe
ja
imull
cmp
cmpsb
mov
jo
das
fldz
lcall
stos
jb
xor
out
shll
scas
iret
mov
cmp
sub
imul
pop
jmp
jae
out
stc
mov
cmp
mov
lea
fisttpll
sub
sbb
gs
cmp
out
daa
cmp
fdiv
pop
push
arpl
out
cmpsb
xor
lods
push
scas
in
in
mov
xchg
jle
js
inc
lods
push
mov
add
lds
cmpsb
xor
jmp
add
js
rcl
xchg
lahf
insl
mov
xchg
and
sbb
out
jno
ja
popa
test
and
ret
mov
push
dec
fbld
cltd
add
sbb
push
sub
ja
in
push
push
call
xchg
movsl
adc
jle,pn
push
call
jmp
imulb
mov
dec
cmpsl
jbe
imull
and
int
aam
push
mov
shr
test
cmpsl
out
inc
imul
sbb
jle
jecxz
push
dec
addr16
or
ret
xchg
or
dec
sarl
dec
idiv
insb
addr16
mov
subl
pop
push
insl
xrelease
insb
cmpsb
inc
mov
std
and
mov
dec
cmp
inc
es
pop
pop
cmp
sbb
xlat
mov
es
sub
inc
loopne
xor
adc
push
pop
js
loopne
mov
pop
mov
xchg
test
hlt
xlat
shr
mov
push
fmuls
xorl
cmp
push
clc
xor
sbb
lock
ljmp
jle
mov
pop
mov
call
inc
mov
mov
cmp
pushf
aam
push
mov
mov
sub
lds
mov
or
mov
jb
jne
addr16
jg
mov
mov
and
iret
adc
dec
dec
sub
arpl
in
cmp
xchg
ja
fistl
add
push
lods
popa
movsb
adc
sub
inc
packsswb
lods
dec
sub
mov
stc
lds
xchg
imul
jecxz
push
add
xchg
lods
mov
dec
push
mov
cmp
inc
sbb
dec
je
inc
push
add
push
pushf
xchg
popa
insl
out
push
cld
push
push
adc
nop
out
cli
xchg
stos
pop
mov
sbb
sub
xchg
ljmp
rorl
and
xor
or
cli
xor
lock
mov
nop
aaa
test
xchg
sbb
test
and
mov
add
cmc
pop
sub
adc
pop
dec
and
or
cld
fs
cmpsl
xchg
xchg
sub
mov
jo
and
mov
xchg
jmp
outsl
or
add
adcb
xor
fsts
xrelease
mov
adc
sbb
sub
fiaddl
repnz
cmp
cmpsb
mov
push
mov
sbb
loopne
nop
arpl
sbb
cmp
test
ret
cmp
push
dec
scas
mov
mov
jns
mov
dec
rclb
std
mov
mov
stos
clc
mov
mov
xlat
jg
push
movb
inc
loope
arpl
cmp
sbb
or
jne
jmp
icebp
cmp
sub
mulb
dec
xor
std
sub
gs
inc
add
jb
xchg
sub
pop
das
mov
int3
in
inc
inc
aad
imul
push
dec
sub
sub
arpl
bound
push
xchg
cli
adc
sti
mov
jne
pop
sbb
pop
inc
pop
sub
lea
mov
xchg
mov
push
xor
xorps
icebp
pusha
mov
int
bound
xor
mov
xchg
adc
outsl
ficoms
adc
mov
xor
cs
cwtl
mov
jb
xor
ficomps
xchg
lret
sub
mov
push
int
xchg
sahf
push
jae
dec
sbb
leave
sub
fstps
fldt
mov
jge
sbbl
dec
imul
pop
leave
adc
jo
cmp
jl
shlb
mov
jae
popa
icebp
mov
loop
push
pop
jno
mov
cmp
xor
std
and
mov
movsl
mov
cli
jae
sbb
sub
cmp
jmp
and
or
in
xor
sbb
out
sub
and
out
imul
xchg
iret
es
call
notl
cmpsl
jo
dec
sbb
sub
mov
jno
es
pop
xlat
dec
inc
sbb
xchg
insb
fisttps
fcmovnb
pop
cltd
mov
cmpsl
inc
push
sub
jb
and
jae
fsubrl
sbb
jne
enter
test
and
pop
outsb
dec
int3
scas
sbb
mov
shrl
stos
ficompl
sub
insl
bound
xchg
movsb
jg
add
and
xor
inc
leave
iret
inc
xor
cmp
push
cmp
mov
xchg
or
jo
loopne
sub
cmp
and
mov
inc
sbb
fistps
jge
jno
and
shll
push
outsb
mov
or
out
pop
mov
adc
aaa
xchg
int
jmp
notb
into
pop
add
push
push
lea
idivl
lods
adc
ljmp
out
jns
push
jne
in
fstpt
mov
in
in
xchg
cmp
push
mov
pop
adc
rcll
leave
pop
mov
es
push
loop
aaa
mov
push
adc
and
andb
xchg
mov
ret
repnz
add
pusha
mov
cmp
inc
xorb
inc
mov
loop
in
or
cli
dec
inc
inc
mov
test
call
call
cmpxchg
idivl
popf
add
push
sub
mov
addl
pop
xchg
pusha
jge
or
and
cwtl
shr
xchg
shl
or
arpl
inc
jo
insb
repz
popf
je
call
pop
je
pop
push
sub
pop
jae
test
mov
scas
mov
jno
sbb
ds
test
jbe
movsb
jne
outsb
xchg
xchg
pop
fcomp
pop
cwtl
push
fcoms
sub
rolb
outsl
cltd
stos
outsl
add
roll
int3
aas
call
mov
mov
pop
clc
adc
adc
pop
insl
or
repz
mov
pop
pop
jecxz
and
sub
ss
mov
jb
mov
or
test
hlt
movl
repnz
cmp
es
cli
pushl
jae
cmp
add
adc
push
xor
lcall
jg
in
xor
xor
mov
xchg
in
adc
or
or
int
data16
xor
les
cmp
sbb
adc
popa
pop
pop
jmp
aad
fisubrl
arpl
out
jo
jo
sahf
xchg
adc
aaa
or
ret
sbb
and
leave
mov
jg
xchg
cmp
mov
push
push
mov
cmp
aaa
push
xchg
outsl
seta
call
cmp
popf
sbb
pminsw
iret
sub
scas
push
and
cmp
daa
dec
mov
int3
call
es
sbb
stos
cmp
mov
movsb
lock
pop
jg
adcb
pop
fs
cmc
fimuls
jmp
or
dec
jbe
lahf
dec
pop
push
jecxz
pop
mov
jge
fsubrl
loop
pop
xor
test
movsb
push
dec
xchg
dec
jae
loope
add
fidivrl
mull
rclb
adc
push
mov
jmp
jno
pop
lods
daa
push
sub
jno
jb
sub
pop
and
mov
scas
lock
test
adc
adc
mov
lcall
ja
popa
ja
jp
mov
cmpsl
inc
sbb
gs
sub
pop
ds
nop
bound
push
test
dec
in
cmc
in
dec
push
dec
ret
test
leave
in
aam
sbb
int3
mov
pop
mov
mov
push
in
adcb
mov
jg
xchg
aas
push
dec
rclb
test
mov
or
lret
clc
icebp
fs
cli
in
xor
js,pt
pop
imul
pop
xor
inc
mov
aam
mov
leave
mov
sub
cltd
jno
cmp
mov
inc
jl
lds
add
or
int3
dec
sarb
loope
jb
dec
into
xchg
pushf
cmp
loopne
fyl2xp1
inc
je
sub
push
ret
push
cmp
mov
movsb
jecxz
ss
lcall
lret
loopne
outsl
pop
add
mov
andl
sub
add
cmp
rcll
cld
or
xchg
popl
bsf
mov
push
xor
inc
lock
push
adc
xchg
insl
mov
inc
pushf
lods
imul
fimull
out
shl
add
or
icebp
adc
cltd
xor
lret
pop
xlat
mov
cmp
add
cmp
cld
sti
fucom
mov
mov
push
ljmp
movsb
popa
ljmp
test
cwtl
xchg
sub
loop
sub
pop
mov
push
adc
stos
das
repz
jle
lods
push
xlat
das
les
mov
jle
and
sub
pop
push
xor
insl
and
das
adc
in
pop
add
pop
pop
fsubrp
sti
push
call
cmpl
push
cmp
mov
dec
add
jl
loopne
cmpsl
dec
inc
scas
stos
mov
cmp
sub
xlat
xchg
add
aad
dec
js
sahf
push
sbb
cmp
movsl
jp
mov
test
cmp
jae
ret
xchg
add
int3
cli
adc
cmp
data16
pop
ja
into
ljmp
cwtl
sub
dec
sahf
jo
add
or
iret
fcos
scas
inc
cmp
xchg
frstor
xor
push
push
fisttps
sbb
out
test
dec
lock
addl
insl
sub
sub
jmp
shl
cmpsl
sub
jb
stc
cwtl
mov
mov
loope
push
es
or
adc
out
inc
addr16
cmp
cmpsl
outsb
outsb
mov
push
or
xchg
fwait
adc
mov
ss
add
not
test
push
cmp
mov
rorl
imull
jae
rorb
fisttps
mov
int
lods
xchg
sbb
add
ljmp
add
js
jb
pop
add
gs
cmpsb
in
push
mov
arpl
cltd
or
nop
xor
je
stos
orl
push
pop
bound
xchg
xor
cli
adc
ret
add
sbb
pop
sbb
loopne
sbb
and
movsl
mov
mov
adc
pop
sbb
scas
stos
dec
or
dec
call
mov
mov
mov
push
push
orl
inc
shl
pop
sub
lret
jl
imul
jge
inc
xor
push
ret
sarb
popa
hlt
pop
adcb
pusha
cmc
push
in
mov
pop
inc
loop
in
and
push
out
mov
outsb
dec
lds
arpl
xchg
sbb
add
outsl
lret
adc
xchg
sub
test
les
fists
sarb
sbb
das
shrb
mov
nop
mov
and
int
outsb
mov
pusha
in
push
rcll
aaa
push
mov
dec
aam
test
ds
std
push
jg
rcrb
hlt
lds
push
jbe
push
mov
stc
in
sub
out
mov
repnz
mov
daa
sub
aas
mov
sub
xchg
add
clc
add
push
dec
movsl
pop
stos
ficoms
in
inc
mov
push
cmp
or
ja
dec
stos
inc
mov
and
inc
push
xorl
lock
push
cli
mov
nop
adc
cmc
leave
sbb
cmp
push
mov
pop
push
xor
insb
pop
push
and
rcrl
and
nop
pop
xor
push
icebp
in
xor
lods
fldt
xchg
mov
ficoms
mov
orb
push
sbb
or
mov
bound
jmp
outsl
ds
push
popa
push
cmp
dec
rcrb
pop
fwait
xchg
cld
xor
sbb
incl
push
lret
mov
push
cmp
cmp
push
out
bound
xchg
test
xor
jae
mov
xchg
in
sub
mov
xor
mov
addr16
sarb
and
loop
or
xlat
in
sub
mov
sbb
sbb
sbb
outsl
xchg
sarl
xchg
in
add
push
mov
js
loopne
xchg
lock
jne
pop
push
loop
xlat
jle
dec
inc
sub
xchg
pop
xor
add
or
in
arpl
shrl
std
xor
femms
jecxz
pop
andl
pop
dec
pop
pop
cmp
orl
aad
jb
les
and
imul
jb
ret
mov
sbb
pusha
loop
daa
popf
pop
repnz
push
loop
fcomps
out
xchg
sbbl
subl
push
inc
mov
insl
mov
mov
cld
fsub
pop
addr16
dec
inc
xchg
xchg
mov
fcoms
sub
je
and
jecxz
imul
jg
cld
lea
push
and
jmp
jns
ffreep
imul
into
mov
iret
je
aas
cmp
addr16
rcll
inc
cwtl
mov
push
push
lret
xor
js
cwtl
adc
les
lcall
pusha
shl
jmp
mov
nop
out
jecxz
mov
cmp
into
or
adc
jo
or
cmc
add
les
mov
pop
ret
cld
mov
adc
aad
sbb
jae
gs
rorl
inc
std
nopl
jbe
stos
in
fs
xchg
cli
pop
insl
jg
mov
mov
int
idiv
xchg
adc
roll
push
ret
lea
out
mov
test
test
cmp
and
inc
mulb
inc
rcl
mov
pop
fidivs
add
pop
sahf
clc
sbb
jmp
add
pop
cmp
and
hlt
sbb
mov
popa
out
adc
cwtl
dec
leave
ljmp
or
dec
pop
inc
repz
shll
dec
icebp
sbb
scas
int3
jmp
add
movsb
js
xchg
pushfw
ja
push
adc
adc
jae
pusha
fstpl
mov
xchg
aam
rorl
nop
fwait
dec
shll
jns
arpl
adcl
cmp
cmp
jbe
fidivrl
xlat
mov
push
pop
xor
xchg
push
scas
sub
iret
ret
mov
add
scas
negb
cmp
jb
idivb
in
test
dec
adc
add
fnsave
cmp
xor
and
push
leave
aad
add
push
mov
enter
or
push
xchg
inc
inc
adc
sti
dec
push
jle
into
stos
add
inc
mov
sub
fsub
mov
inc
jge
imul
jge
add
and
insl
insl
jl
fcmovbe
data16
dec
jb
sbb
adc
popa
push
out
je
jns
jbe
sbb
sbb
pop
fwait
subb
jp
xchg
pop
clc
subl
pushf
rcll
daa
pop
push
inc
adc
adc
call
inc
jmp
call
adc
mov
xor
fdiv
mov
std
pop
push
movsb
jns
dec
sub
xor
adcl
das
mov
push
scas
fwait
cltd
jbe
cmc
push
mov
lock
jge
ja
mov
incb
xor
push
aaa
inc
repz
cmc
mov
sub
cmp
int3
ficoms
cwtl
int
inc
or
jno
xchg
add
jno
xchg
jmp
sahf
mov
imul
xchg
sub
dec
inc
mov
jl
sbb
add
stc
add
sbb
xor
outsl
dec
clc
sti
aaa
fs
jnp
dec
dec
mov
fcompl
outsb
inc
jno
and
cmp
jmp
push
fistl
ret
repnz
push
std
pop
test
sbb
movsb
mov
push
stos
cmc
cmp
xorl
mov
jae
lahf
xchg
push
daa
pop
inc
rclb
je
adc
icebp
pusha
out
sbb
mov
jb
fs
sub
push
negb
aaa
and
shrb
dec
call
and
ret
fbstp
leave
pop
mov
xchg
mov
lods
xchg
ja
pop
mov
xor
mov
js
js
and
fcmovnbe
inc
ljmp
add
mov
je
sub
inc
jo
jae
add
imul
push
cvtps2pd
adc
ja
shrb
outsb
push
cmc
mov
icebp
or
inc
or
lods
fdivrs
mov
xor
jle
push
cli
das
add
ds
sbb
aaa
inc
mov
xlat
inc
xchg
sbb
insb
repnz
repz
dec
call
xchg
sbb
std
test
fucomp
outsb
mov
testl
int
jecxz
mov
fndisi(8087
mov
lock
insb
fwait
jp
in
push
and
aam
mov
test
xor
sbb
push
mov
ficomps
rcll
cwtl
xor
cwtl
fcomi
ja
sbb
daa
es
lret
nop
jg
mov
lahf
jno
xchg
out
lds
filds
and
hlt
fwait
pop
mov
std
cs
dec
mov
fs
cmpsl
cmp
std
into
dec
ficoms
rorl
push
lock
xor
pop
add
arpl
in
mov
xor
sbb
dec
aaa
cli
aad
adc
inc
push
pop
sub
push
or
clc
and
in
and
sbb
jne
jmp
mov
mov
pop
out
pop
add
pusha
dec
push
cmc
inc
icebp
aaa
fs
negb
lret
sub
rolb
mov
fistpl
inc
push
aam
test
pop
imul
xchg
stc
adc
xor
or
pop
pushf
dec
orb
sub
xor
test
add
push
sbb
xchg
fsub
ud1
adc
icebp
sub
cmp
insl
sub
hlt
popa
fcmovnbe
aaa
std
fwait
les
movsl
mov
clc
sar
push
jle
xchg
adc
pop
adc
arpl
pop
outsb
leave
dec
fcoms
in
inc
test
push
fstpl
push
sbb
mov
mov
push
mov
sub
cli
ljmp
or
pusha
fcomip
cltd
xor
iret
es
imul
and
mov
scas
mov
or
f2xm1
mov
mov
mov
inc
mov
mov
int
sub
sub
rep
daa
je
lds
mov
push
mov
inc
orl
call
mov
hlt
mov
mov
lret
popf
faddp
inc
fistl
loope
test
cwtl
mov
inc
inc
ds
in
xor
test
jge
and
imul
mov
xchg
insl
pop
lahf
bound
jle
mov
xchg
out
enter
mov
jge
sbb
cmpsb
adc
aaa
test
inc
cmpb
inc
push
je
jnp
imul
fdiv
jmp
shll
int
inc
lret
in
lea
fnsave
ja
shrl
decb
add
dec
jno
adc
rcrb
mov
test
cmp
into
inc
rcl
fcos
or
out
push
cmpps
orb
lds
repnz
cmp
and
cmpsl
jae
mov
jmp
mov
jb
push
mov
and
jbe
shll
jb
adc
shll
mov
jecxz
shrl
inc
xor
push
cmp
mov
cmpsb
mov
shll
xor
clc
into
xchg
shll
mov
adc
cmp
sub
dec
xchg
fdivrs
inc
in
mov
nop
lahf
dec
add
mov
ds
mov
dec
jmp
push
or
fidivrl
fwait
jbe
cmp
push
stos
pop
mov
lret
iret
rorl
xchg
imul
test
xchg
mov
iret
scas
in
dec
mov
or
and
adcb
cwtl
test
ja
fwait
sub
or
sbb
or
sbb
xor
sub
aaa
lods
shll
popf
and
rcr
mov
inc
fsubp
lret
cmpsl
pop
fisubs
ja
daa
shrl
mov
mov
push
pop
jbe
xor
inc
sub
xor
into
sub
add
insl
lcall
rcll
hlt
aaa
cmp
xor
shrl
xchg
hlt
pop
stos
jecxz
xor
imul
jl
fdivrp
push
aas
or
popa
push
push
jmp
pop
aam
adc
cltd
rcrl
pop
insl
inc
jp,pn
pop
ja
imul
mov
push
cli
cli
pop
aaa
clc
mov
push
cltd
cmpsl
xlat
fcomi
das
jno
inc
xor
cmpsb
jno
mov
stos
mov
clc
xor
fsubs
mov
mov
add
inc
cmp
cmpsb
addr16
les
xor
and
xor
aaa
adc
pop
mov
pop
xor
mov
lods
mov
repnz
fs
and
push
ljmp
and
mov
xchg
xlat
mov
sbb
cmp
push
push
insb
or
inc
dec
lea
loop
pop
jmp
stos
push
negl
pop
mov
testl
std
lock
fwait
jns
popf
in
mov
ds
les
jns
xchg
iret
xor
pusha
jbe
out
mov
aaa
pop
repz
test
push
sub
in
es
lcall
call
push
jecxz
pop
pop
push
xchg
popf
in
sbb
xor
jecxz
mov
sbb
jae
clc
test
pushf
push
sbb
iretw
in
sbb
js
movups
lods
daa
mov
push
data16
lock
push
mov
aas
fs
push
and
inc
roll
clc
dec
enter
jae
pop
push
push
imulb
movsl
je
fstl
arpl
fildl
ss
loopne
decl
cmp
sti
in
dec
mov
iret
hlt
cmp
or
mov
jns
mov
add
dec
sub
scas
jg
jp
xor
je
jbe
nop
xchg
mov
mov
jae
mov
imul
in
shlb
and
int
cmp
and
fstps
dec
orb
ss
mov
ret
insb
jmp
aaa
les
xor
call
inc
lods
or
loopne
testb
xor
dec
rclb
aam
shrl
mov
push
cmc
push
popf
ds
adc
addr16
mov
sub
jl
pop
xor
in
sahf
shlb
icebp
xor
lock
movsb
mov
mov
aaa
movsb
push
cld
xchg
dec
lahf
outsb
sub
loop
shll
push
ljmp
pop
test
and
sub
enter
and
out
inc
jne
ret
leave
test
scas
xchg
ds
xor
mov
push
lods
push
mov
add
mov
mov
bnd
insl
dec
mov
cmp
enter
popf
fdivrs
sbb
je
dec
xchg
pop
pop
fwait
mov
bound
fdivl
movsb
retw
mov
idivb
leave
ss
negb
push
push
xchg
fwait
inc
imul
xor
divb
push
mov
push
notb
add
out
jmp
icebp
in
adc
jg
je
enter
movsl
je
xor
mov
daa
cmp
inc
nop
ret
fimuls
dec
dec
cli
into
test
jg
or
imul
cmp
cwtl
idiv
sub
dec
jne
pop
inc
out
rcrl
fcmovnu
xchg
pop
out
mul
sahf
mov
pop
mov
rcrb
jle
push
in
xor
fdivr
and
inc
scas
imul
les
outsl
sub
pop
pop
mov
mov
ljmp
mov
pop
or
rolb
imul
insl
shll
and
mov
cmp
add
setle
pushf
jge
add
js
push
aam
movsl
arpl
jecxz
dec
repnz
adc
add
lcall
pop
std
lock
cltd
clc
mov
out
xor
rolb
rol
mov
bound
testb
pop
or
neg
mov
mov
fwait
mov
repz
addr16
xchg
dec
in
cmpsl
sbb
push
je
mov
adc
aas
scas
pop
lods
addr16
int
mov
pop
xchg
cmp
sub
xchg
jae
mov
sbbl
jae
ds
lret
test
iret
mov
testb
pop
rcrb
xchg
jae
mov
push
mov
iret
adc
jge
out
insl
add
dec
stos
fs
adc
inc
mov
mov
aam
lret
inc
orb
sub
xchg
lods
xor
sub
mov
push
and
mov
out
pop
ljmp
add
cmpsl
int
xchg
push
mov
sub
mov
ficompl
jg
std
push
inc
cmp
mov
push
test
adc
dec
cld
xor
mov
arpl
mov
shll
jecxz
push
add
cltd
add
push
es
enter
sub
es
push
adc
cmp
or
loopne
mov
fists
jb
pop
cltd
lea
cmp
push
into
bound
push
jne
mov
sar
pop
sub
and
cld
iret
push
adc
incl
mov
mov
jae
stc
dec
mov
jge
shlb
outsb
inc
dec
push
daa
push
jle
mov
push
mov
movsb
add
dec
jecxz
pop
mov
cs
dec
insl
das
and
xor
cmc
in
int3
add
jp
adc
inc
ss
xor
sbb
cmp
xchg
inc
ss
popl
pop
ret
or
into
cltd
lods
and
mov
inc
jecxz
ss
fsubrs
pop
test
or
jns
sbb
inc
sub
bound
aas
bound
add
cmc
es
jmp
out
out
pop
jge
enter
xlat
fs
mov
pop
aaa
and
jge
or
mov
mov
lods
jne
push
dec
popf
outsb
xlat
push
xchg
fcoml
dec
jae
out
inc
jecxz
fcompl
xchg
xchg
push
xor
cs
dec
and
gs
daa
jl
les
outsb
lret
roll
pop
mov
lds
jae
rcl
movsl
lock
xchg
inc
xchg
les
push
xor
popa
lea
iret
pop
icebp
jle
jns
sbb
sub
subb
mov
inc
xchg
cmp
mov
mov
inc
dec
mov
cmc
xorl
jg
push
fcompl
pop
dec
enter
jo
lcall
mov
mov
or
outsl
pushf
jbe
xlat
mov
pop
or
mov
nop
loope
mov
lcall
add
push
pop
jp
sbb
cmc
loop
loopne
rcll
adc
inc
xchg
push
insb
lods
cmc
scas
xor
nop
leave
fisubrs
test
pop
cli
dec
pop
insb
test
test
xor
jl
daa
xor
mov
cmc
negb
and
pop
jmp
daa
lea
popf
stos
xlat
push
jp
dec
jne
sub
jge
mov
add
iret
cmp
pop
int
adcl
push
movsb
dec
mov
fimuls
mov
push
lcall
je
xor
xchg
push
push
xor
les
ds
movsl
mov
lock
leave
add
xlat
or
movsb
loop
push
push
nop
or
cld
or
jg
xchg
fs
sub
or
push
cmp
rcll
negl
mov
fstp
adc
shrb
mov
dec
mov
aad
jne
xchg
cmpsl
imul
cmp
outsb
jge
cmp
pop
fld
cmp
mov
cmp
nop
in
inc
push
dec
mov
mov
push
sub
cmpsl
test
mov
push
rorb
jns
mov
in
aas
and
scas
inc
loope
dec
adc
pop
sti
xchg
sahf
jns
imul
mov
and
fwait
inc
pushf
fcomps
aas
pop
jno
mov
test
aad
jbe
push
jg
lret
mov
xor
xchg
pop
ss
jo
and
sbb
mov
mov
cwtl
pop
fcmovnbe
cmp
cmpsb
push
dec
aam
dec
arpl
fisttpl
stos
inc
xorb
mov
enter
stos
js
xchg
orl
jge
das
sbb
test
cmpsl
out
jno
rcrl
fwait
adc
adc
sub
aad
fldl
push
inc
pop
pop
arpl
jbe
ljmp
dec
sub
outsl
xchg
sbb
pop
or
and
cmp
pop
add
or
fcomps
test
jp
sub
pop
mov
repz
sub
xchg
aad
dec
mov
cltd
cli
mov
mov
sbb
dec
outsb
mov
repz
out
and
rcr
or
sti
xchg
ret
cmp
xchg
shrb
aaa
scas
xor
outsl
cmpb
enter
pop
in
pop
lret
or
cwtl
imul
xchg
dec
fisubrl
sub
lret
cmp
adc
add
xchg
dec
inc
les
mov
cli
mov
test
pop
mov
cs
sub
lret
out
lds
imul
in
in
mov
pop
xor
cld
add
mov
pushf
push
mov
mov
cli
pop
jg
in
rcrl
or
out
test
xor
lds
outsl
sub
push
test
int
pop
testb
repnz
cmc
adc
cmp
cmp
cltd
adc
mov
dec
fdivr
mov
and
or
repz
and
sub
cs
out
lea
sbb
es
cmpsb
jge
mov
push
aaa
outsl
fists
pop
sti
daa
and
js
xchg
pop
push
push
adc
cmp
xlat
cltd
sahf
push
mov
mov
jnp
mov
lret
adc
lcall
adc
fcmovnbe
loop
adc
icebp
negl
fdivr
mov
loop
roll
loope
jecxz
fidivs
bound
mov
stos
or
movsl
jecxz
mov
divl
xlat
mov
lods
mov
lcall
mov
hlt
lods
sbb
imul
in
push
xchg
lods
xor
and
repnz
cmp
mov
jmp
test
icebp
add
cmp
push
xor
pusha
jge
add
cltd
adc
aam
adc
jne
mulb
fdivrl
mov
stc
pop
push
pop
daa
stc
jo
xchg
pop
or
mov
ja
pushf
cmp
adc
sbb
push
sub
cld
sbb
push
rolb
pop
mov
jne
pop
mulb
cli
xchg
and
and
inc
call
pushf
or
cmp
xchg
data16
fwait
mov
cld
xor
dec
pop
cmp
icebp
call
lods
loop
pop
fidivl
ss
inc
dec
mov
jbe
cmp
arpl
test
sub
ljmp
xor
es
sti
pop
mov
loope
lahf
mov
jns
in
loope
stos
jbe
orl
jecxz
jae
pop
imul
shl
mov
imul
dec
jge
push
aam
test
movsb
aaa
adc
daa
jl
or
loop
js
jmp
in
outsl
insl
fnstsw
sbbb
js
jns
out
stos
ljmp
mov
and
fiadds
jmp
pop
xlat
test
adc
jo
sbb
xor
or
lret
mov
xor
xchg
aad
xor
mov
push
fmul
add
rclb
push
leave
dec
xchg
and
jp
iret
inc
push
push
push
lds
push
jg
inc
xor
mov
cli
xchg
fdivr
push
jno
jge
or
add
jmp
mov
jmp
mov
pop
xor
mov
add
es
shr
xor
repz
js
aad
sub
test
pop
push
scas
gs
jge
movsl
xor
jle
sub
loop
lret
xchg
sbb
sbb
icebp
repz
scas
mov
inc
insb
mov
push
add
mov
push
and
int3
popf
cli
test
push
pop
sbb
ret
ds
cmp
or
dec
mov
adc
jbe
mov
hlt
or
dec
lods
or
jecxz
scas
mov
mov
loope
rorl
jp
adcl
mov
sub
xor
pop
xor
mov
orl
inc
out
xchg
es
jp
daa
test
sub
data16
push
push
or
in
pop
and
daa
pushf
dec
xchg
subl
mov
inc
fwait
mov
fists
into
jbe
dec
dec
scas
movsb
fcomps
hlt
or
fcompl
mov
xor
cld
xor
leave
int
jge
pop
aas
push
in
mov
cmc
popf
jge
cwtl
xor
bound
mov
mulb
or
je
xchg
adc
pop
call
ja
inc
std
jnp
mov
ljmp
pop
and
nop
mov
mov
mov
mov
in
lret
pop
cmpsl
jb
mov
jne
mov
inc
loopne
or
mov
cwtl
rcrb
shll
push
in
xor
cmp
xor
xchg
inc
test
out
inc
shlb
test
add
js
mov
jb
loopne
cmp
aad
mov
mov
mov
sahf
inc
inc
xor
and
lret
ret
push
cmp
fldt
xlat
ss
mov
pushf
pop
das
cmp
repz
and
xchg
xchg
push
push
push
or
or
idivb
dec
test
aad
mov
mov
add
outsb
std
cmp
fisubrl
or
outsl
cmp
sub
cmpsb
mov
mov
hlt
int
cmp
push
aad
jge
lret
and
faddl
insl
xor
jnp
ljmp
add
ret
frstor
mov
outsl
mov
sbbb
popf
adc
adc
add
or
mov
inc
leave
cli
jge
jge
mov
push
xlat
stos
repnz
testb
jle
shll
lods
mov
push
into
cmp
inc
inc
rolb
lods
pop
dec
fmuls
jnp
jg
or
in
inc
loopne
icebp
in
loopne
add
aad
cli
sub
jle
sbb
xchg
mov
dec
sbb
xchg
add
adc
cmpsb
ja
or
mov
fs
adc
add
lea
fadd
fs
jl
lock
xorl
mov
nop
and
sbb
into
xor
push
xchg
lea
and
dec
sbb
icebp
rolb
dec
mov
push
imul
mov
xlat
hlt
inc
movsl
xor
sbb
fwait
mov
pop
push
lret
les
pop
lahf
adc
cmp
jae
xchg
daa
add
pop
imul
fwait
push
push
fs
jnp
fs
mov
xor
arpl
cs
mov
add
int
adc
in
aad
sbb
push
pop
mov
inc
out
mov
dec
sub
mov
repz
dec
dec
xchg
or
ljmp
stos
shrb
push
mov
sbb
and
push
pop
int
aad
bound
lock
mov
loopne
cmpsb
hlt
ficompl
addr16
or
sub
lret
inc
mov
divl
aam
lods
fistpl
inc
fcoms
or
push
inc
gs
mov
cmp
lods
xchg
mov
lods
cmpsb
scas
push
mov
mov
sbb
and
jle
push
imul
scas
inc
adc
inc
jl
cmc
jmp
sti
jge
aaa
ret
das
jg
adc
lods
fistps
lods
rcr
enter
mov
sub
pop
nop
rcrb
rcll
cltd
rclb
loop
aad
aam
call
pop
mov
pop
dec
insb
jnp
mov
loop
lods
js
negb
out
mov
pop
cli
pop
mov
into
and
es
jge
xlat
fistpl
mov
add
and
push
add
mov
lea
fsubrs
and
filds
adc
ds
jge
int3
pop
icebp
fistpl
add
push
test
xor
push
aad
scas
repz
inc
jnp
pushf
test
aam
sbb
cs
add
movb
cwtl
sahf
cmp
sarl
pusha
sbb
jge
aad
sbb
push
imul
add
xor
dec
fnstsw
jl
jmp
or
or
int3
fcmovb
fisubl
mov
inc
push
mov
push
sub
mov
sub
sub
mov
in
orl
cmpsl
add
insb
pop
sbb
cmp
das
loopne
xchg
mull
iret
xor
pop
popf
cmp
repnz
xlat
dec
mov
push
hlt
lock
lods
sbb
hlt
lods
jg
pop
shlb
stc
push
cli
jecxz
or
cli
shrb
test
or
sbb
xchg
push
mov
movsb
cmc
es
sahf
lcall
or
test
jge
lock
mov
mov
inc
stos
jle
jnp
inc
stc
shll
pushf
lret
mov
mov
iret
pop
ret
adc
cmpsb
lea
sbb
data16
cwtl
cli
in
push
nop
lahf
lea
dec
or
sbb
call
pop
push
pop
or
pusha
ficoms
xchg
mov
mov
cmp
add
fadds
rcll
leave
sub
mov
rorb
fnstsw
mov
jne
jbe
pop
mov
notb
prefetch
or
bound
pop
orl
cmp
mov
fs
xchg
pop
dec
xor
fiaddl
stos
pop
shl
mov
push
ret
popa
mul
adc
mov
rol
pop
test
cli
xor
pop
inc
mull
enter
hlt
das
xchg
xor
cmc
jbe
xor
ret
push
dec
test
lcall
lret
jne
pop
cmp
loop
cmp
fiaddl
mov
out
pop
enter
cltd
jmp
mov
adcb
icebp
imul
mov
jl
out
int3
stc
sarb
ljmp
pop
test
stc
sub
ss
adc
sub
mov
orb
aad
es
pusha
test
femms
pop
fwait
adc
iret
ss
into
jae
push
push
iret
jns
test
or
mov
mov
push
test
inc
cld
je
nop
pop
mov
jno
cltd
mov
es
andb
push
movsb
andl
jbe
jns
xchg
in
add
lret
fwait
pop
mov
dec
or
adc
fildl
lret
dec
cli
cli
out
and
cmp
frstor
add
mov
out
dec
inc
mov
jns
mov
xchg
mov
dec
dec
test
xchg
add
sahf
xor
mov
jge
fnstenv
lret
dec
out
cltd
mov
mov
pop
sbb
js
add
cmp
mov
jae
cli
sub
pop
add
mov
or
outsb
sbb
pinsrw
mov
mov
stos
jb
mov
xchg
mov
aaa
andb
movb
cmp
mov
lcall
or
aad
incb
dec
xchg
out
aad
mov
xchg
inc
dec
outsl
dec
iret
incl
in
mov
mov
std
test
lret
and
ss
sub
cmpsb
sbb
inc
aam
xchg
mov
adc
icebp
ret
mov
iret
mov
mov
xor
pop
loop
loopne
sbb
mov
and
fimuls
xchg
lods
shlb
lods
cmc
lcall
adc
inc
add
jle
xchg
insl
in
pop
xchg
fcoml
cmp
mov
stos
notb
lret
mov
aas
cmp
dec
shl
les
cmp
sbb
push
imul
mov
data16
popa
dec
dec
frstor
pop
jmp
dec
shll
xor
push
icebp
iret
push
xor
mov
fdivrl
push
lock
push
xchg
push
mov
push
test
in
push
push
mov
jne
sar
sti
and
mov
daa
xchg
test
adc
popf
xchg
sbb
sub
dec
int
pop
inc
adc
fstps
out
imul
mov
inc
xor
hlt
mov
fs
pop
push
xchg
lahf
lahf
aad
add
jae
mov
pushf
ret
ficoms
fstpt
in
mov
sahf
cmp
popa
pop
sub
es
stos
cmpl
loope
jmp
cmpsl
call
mov
xor
xchg
lea
lds
sbb
ss
rolb
lods
int3
mov
lahf
and
adc
ljmp
fwait
out
mov
cmp
jge
push
mov
addr16
scas
mov
scas
rep
icebp
xor
mov
or
dec
mov
jb
cmp
lcall
xchg
or
movl
jno
in
loope
or
dec
stos
loopne
push
xlat
dec
gs
rcll
sbb
fisubl
inc
add
add
sub
push
xlat
out
in
aas
xor
sahf
push
push
inc
adc
inc
push
xchg
jno
rcrb
in
pop
loope
push
xor
bound
adc
add
loope
pop
xchg
sbb
push
iret
lret
call
lea
out
cmp
faddl
testb
sbbl
pop
sti
xorl
aam
aad
in
xor
push
cltd
rcll
mov
dec
sbb
pop
lods
repz
lahf
push
jmp
xor
mov
insl
and
mov
adc
stc
int3
xchg
sti
pop
xchg
jo
mov
and
cmpsl
arpl
inc
jo
in
mov
js
or
pop
loope
push
cmpsb
mov
lock
xor
adcl
int
stos
repz
or
jae
sub
fwait
js
adc
cmp
jp
mov
jnp
and
ja
jbe
mov
out
cmp
and
dec
push
int
mov
jge
lret
movsb
jecxz
pop
call
and
adc
xor
sbb
pop
out
inc
mov
cwtl
call
insl
inc
icebp
inc
sahf
xorl
sub
loope
inc
adc
rorl
loop
ja
imul
bound
out
push
int
push
mov
mov
in
insl
jb
data16
mov
adc
jno
mov
mov
xchg
ret
mov
das
iret
mov
aaa
cmp
insb
sysenter
mov
lea
or
mov
push
dec
ja
insb
xchg
lret
lea
add
cmc
int3
jl
test
iret
push
lods
jo
xchg
cmpsb
cwtl
mov
mov
or
add
leave
cmovge
sub
push
mov
and
fildl
stos
test
mov
cs
sahf
jnp
mov
cld
data16
cmp
sub
or
mov
outsl
int
mov
sbbb
mov
fmuls
cwtl
push
call
aam
pop
and
hlt
xor
scas
int3
push
lea
cmpsl
lret
out
cwtl
and
decl
pop
pop
aas
xchg
mov
and
in
adc
cltd
mov
xchg
cmp
push
sbb
jmp
movsb
sub
add
popf
xchg
jo
mov
adc
imul
aas
mov
adc
into
mov
dec
mov
lcall
fldcw
cmp
mov
fisttpl
dec
bound
repnz
lods
cmpsb
lods
sbb
push
scas
dec
mov
push
idiv
clc
pop
ja
pop
ret
sub
movsl
sbb
adc
out
jmp
stc
aas
and
push
sbb
or
int3
and
mov
lfs
push
cmpsl
sub
gs
aas
mov
mov
push
leave
and
sub
dec
lds
cmp
shrl
leave
mov
cmp
inc
or
bts
shll
aad
jmp
adc
cmp
adc
iret
lret
popl
cmp
sub
scas
sbb
lock
pop
insl
jo
inc
sar
daa
fsubrs
xor
push
push
pop
cmp
repz
iret
or
rcrb
rol
cmp
inc
pop
and
inc
pop
in
or
xor
test
mov
test
mov
mov
mov
daa
jle
es
dec
dec
imul
icebp
popf
push
cmp
add
fucomip
pop
jg
xchg
mov
cltd
xor
lods
ljmp
test
mov
cmpsb
sub
pop
cmp
push
aaa
fs
loope
pop
cmp
jo
mov
pushl
and
enter
outsl
scas
dec
push
bound
xor
push
pop
inc
push
fidivrs
outsb
dec
mov
imul
inc
xchg
pop
dec
jp
scas
jecxz
imul
jle
gs
pop
mov
fstps
aam
and
sahf
fistpll
addr16
xchg
je
dec
xor
xor
test
inc
cmpsb
push
outsb
inc
imul
mov
rcll
pop
sbb
adc
pop
lods
call
mov
jne
push
push
push
rcl
arpl
push
or
test
in
mov
dec
mov
int3
inc
icebp
mov
xlat
je
add
pop
ss
jmp
mov
sub
cmc
jle
insb
xchg
mov
rorl
push
mulb
mov
shlb
test
ret
hlt
jle
or
xchg
mov
dec
clc
aad
dec
into
push
into
lock
mov
pop
adc
lock
in
les
into
fsubs
insl
leave
or
mov
push
cmp
movsl
jl
inc
repnz
jnp
pop
add
xor
out
fucom
xchg
mov
inc
push
popf
stos
cld
in
and
mov
mov
sbb
jge
add
call
inc
mov
lahf
scas
cwtl
sub
fbld
lods
pop
std
das
fists
inc
ja
fwait
pusha
rcrb
out
sbb
sahf
pushf
sbb
adcl
pop
cwtl
or
ror
pop
xor
xchg
mov
cmp
pusha
dec
push
xchg
cmovo
xor
fwait
rorl
dec
push
jae
aas
or
outsb
dec
cmp
sbb
daa
adc
jnp
or
cli
icebp
cmp
lahf
xor
lret
dec
aam
scas
pop
pop
pop
cmp
cli
sarl
movsl
lock
int3
xor
lahf
cmpsl
fbld
mov
bound
mov
adc
adc
in
sbb
lds
test
mov
mov
mov
lcall
dec
hlt
xor
je
mov
shrb
xor
out
fcmovnbe
lods
cwtl
aam
mov
cmp
and
aad
mov
push
mov
or
mov
loop
push
stos
push
push
pop
jae
lds
mov
mov
int
jnp
in
lods
and
mov
jl
out
sbb
lock
sbb
adc
aas
lret
fcomps
ljmp
dec
sbbb
rorl
add
jp
mov
sub
push
or
test
pushf
mov
in
push
stos
dec
ss
clc
xor
inc
mov
mov
sub
mov
add
push
rorb
push
mov
hlt
ret
gs
push
cmpsb
movsb
jb
mov
loope
roll
loopne
das
add
add
mov
pop
mov
movsl
mov
push
or
jbe
aad
push
movsl
lods
xor
daa
xchg
xor
mov
into
insl
iret
xor
push
jp
popf
mov
lds
xchg
clc
sbb
xlat
cmpsl
push
in
std
aad
push
bound
and
dec
icebp
add
ret
lds
scas
data16
mov
scas
push
mov
in
ret
pop
ret
aad
xchg
xor
adc
sub
push
lea
outsl
ss
or
int3
inc
xchg
clc
movsb
aas
mov
jae
jno
xlat
cmc
adc
and
rcrb
xchg
scas
and
xlat
lea
test
leave
mov
stc
stc
jnp
jae
and
mov
mov
adc
adc
and
int3
lret
rcrb
pop
sbb
mov
jge
leavew
mov
xchg
pop
add
arpl
jecxz
bnd
leave
gs
jae
dec
fstps
push
pop
test
test
mov
ljmp
insl
lret
vmovaps
jmp
imul
pusha
sti
mov
push
in
mov
imul
test
orl
push
push
out
xchg
or
in
ds
sbb
push
jae
cmpsl
and
push
test
xchg
outsb
pop
aad
mov
insb
dec
xor
xchg
adc
sub
cmpsb
sbb
push
xor
dec
or
mov
lock
adc
jl
lcall
dec
add
push
out
push
sub
sbb
roll
lock
in
in
push
pop
dec
testb
push
pop
das
test
lret
or
clc
jo
into
push
sbb
mov
cltd
adc
cwtl
push
xchg
fiaddl
orl
push
shr
insl
fmul
xchg
xchg
out
push
mov
pop
repnz
fs
clc
aad
outsl
clts
fstpl
lcall
stos
sbb
iret
inc
ror
test
fadd
pop
cli
or
outsb
push
mov
xchg
push
cld
decl
mov
or
cld
les
scas
enter
pop
pop
push
into
and
and
dec
push
loop,pt
xchg
add
mov
enter
sub
xchg
and
jae
rol
mov
xchg
mov
ret
popa
and
dec
sbb
push
mov
push
push
lock
jmp
call
std
pusha
and
mov
adc
rcll
cmp
adc
dec
hlt
loop
subb
adc
sti
divb
sbb
rclb
xlat
inc
cltd
mov
shrl
pusha
pop
fdivrl
jg
push
in
addr16
insb
or
lret
ret
aad
push
sbb
shll
push
aam
jge
push
sub
jmp
jg
inc
jmp
sub
add
jae
jmp
test
push
mov
push
cmp
inc
loope
out
mov
add
adc
mov
mov
cmpsb
adc
cmp
lock
pushf
jo
loop
adc
call
add
aas
lods
ret
bnd
jmp
cmpsb
cmp
loop
cmp
sbb
and
jl
jp
jns
rclb
mov
lock
mov
mov
mov
int
cmp
iret
inc
mov
icebp
pop
adc
or
mov
xorl
lods
mov
pop
inc
rorl
dec
jo
dec
sub
jle
push
xor
es
lea
daa
cmp
dec
das
loop
mov
in
or
lock
cmp
mov
cmp
jmp
fdivrp
insb
mov
dec
add
mov
xor
cmc
pop
xor
test
loopne
clc
pop
jl
mov
hlt
jl
adc
loope
notl
pop
sbb
push
lods
stos
imul
sarl
cltd
mov
loop
xchg
popf
aas
xchg
pop
cmpsl
mov
sbb
aam
daa
mov
ret
cld
jg
iret
sahf
jae
cmpsb
iret
xlat
lcall
rorl
push
sbb
out
mov
or
nop
daa
push
outsb
rclb
xchg
insb
add
push
jns
push
inc
xor
sub
push
call
or
ficompl
in
mov
out
or
cmp
fwait
loopne
rclb
lcall
jnp
or
mov
dec
xchg
dec
or
in
scas
push
fldt
mov
jbe
cmp
xchg
jns
mov
ds
jle
cmpsl
jg
ret
inc
sbb
call
out
inc
jne
jg
jno
mov
aam
xchg
decl
test
and
mov
out
jecxz
ret
nop
xor
idivl
lea
mov
pop
dec
les
xchg
push
cmc
in
add
bnd
and
lods
andb
xor
addr16
inc
divb
mov
sub
jle
inc
shrl
inc
inc
loope
test
inc
int3
stos
out
popf
xchg
ljmp
push
mov
shll
adcb
scas
cwtl
out
and
push
lcall
push
inc
xorb
mov
insb
cmp
add
sub
xor
and
sarb
adc
and
cltd
ror
inc
xor
sbb
fstps
popf
cmpsl
lahf
fildl
xor
cltd
mov
mov
xchg
movsb
cmp
jg
lahf
cli
xchg
stc
and
cmp
add
sti
mov
insb
add
ljmp
jg
mov
fisubl
inc
and
icebp
lea
push
fadds
sbb
push
ljmp
addr16
xchg
pop
daa
xlat
rcll
lret
call
dec
inc
int3
and
gs
mov
jge
outsl
sub
jmp
sbb
aad
mov
xchg
call
stos
dec
movsb
fs
out
add
loop
mov
inc
cmpsl
dec
xchg
scas
ljmp
jmp
push
xor
xchg
addr16
mov
sbbl
mov
into
jbe
push
push
jne
ds
jg
arpl
ds
lds
mov
aam
bnd
sti
ficomps
dec
push
test
push
mov
mov
repnz
jg
je
push
sbb
cwtl
ljmp
lret
loop
cmp
scas
adc
loop
cmp
jns
cmc
out
or
sahf
gs
lds
and
sub
xchg
inc
es
and
pop
das
and
cmc
mov
fsts
jb
cltd
xlat
jle
js
mov
add
mov
adc
mov
push
cmpsl
call
adc
cmp
xchg
cmp
jecxz
pop
dec
cmp
insb
outsl
je
cs
adc
pop
das
xchg
insl
cwtl
pop
shrb
ds
jecxz
jbe
add
add
mov
xacquire
movb
outsl
cwtl
push
jbe
mov
int
popf
cmp
rorb
movsb
loop
sub
push
pop
shlb
sub
pop
inc
lock
dec
add
icebp
add
movsl
pop
jbe
pop
pop
inc
pop
add
mov
das
jmp
cmc
and
lds
fcmovu
loop
int3
pusha
or
mov
scas
sahf
shll
jmp
xlat
dec
adc
jmp
adc
dec
mov
les
xlat
inc
fcomp
dec
scas
lcall
ss
push
cli
repnz
mov
out
inc
push
stos
scas
ret
in
mov
insb
pop
push
scas
out
dec
in
dec
inc
or
cld
mov
cmp
cld
subl
mov
xchg
mov
gs
imul
addl
mov
mov
cmp
pop
lock
fs
inc
shl
jmp
jge
cmpsl
bound
imul
fwait
xor
inc
mov
mov
shlb
lahf
fcompl
or
push
data16
lods
andb
cmp
fwait
xchg
jmp
jmp
nop
cmp
mov
jae
pop
mov
pusha
sbb
arpl
mov
dec
je
mov
sbb
data16
xchg
ljmp
icebp
add
cmp
push
fistl
and
movsb
out
push
icebp
dec
jb
pop
repz
sbb
sbb
dec
sub
sbb
xchg
adc
std
ret
and
insl
lea
dec
into
in
or
negb
xlat
ds
dec
jge
push
jne
fs
cmp
int
arpl
and
push
negl
mov
xchg
xchg
ljmp
sarb
outsl
imul
pop
push
mov
rorb
fdiv
adc
idivb
mov
mov
pop
jmp
sbb
dec
adc
cltd
cmp
fmul
jnp
fwait
inc
adc
test
mov
or
cltd
mov
inc
push
adc
mov
movsl
jge
aaa
push
push
xchg
push
int
jecxz
push
adc
out
movsl
xchg
add
std
jo
jb
xor
jg
outsl
xchg
jnp
mov
into
xor
sbb
rclb
adc
aaa
and
fadds
push
mov
sub
pop
je
jmp
lahf
icebp
in
sub
add
push
scas
push
sbb
out
mov
mov
push
popa
xor
add
mov
xor
lret
xchg
ror
add
or
das
xchg
je
aaa
cwtl
lds
sub
or
int3
lahf
mov
out
push
sbb
cmp
lahf
adc
mov
adc
inc
pop
xor
popf
mov
jg
lods
fcomps
mov
test
jp
sar
jns
outsb
or
out
xchg
loope
jns
mov
mov
mov
lock
dec
rol
dec
ss
sub
call
cwtl
sub
or
adc
fistps
inc
incb
popa
dec
or
shrb
iret
and
mov
mov
jecxz
imul
lret
lods
into
std
push
hlt
stos
test
dec
sbb
and
sahf
jp
fdivrs
subps
shr
mov
hlt
mov
mov
das
out
les
xchg
or
or
jmp
dec
or
cli
or
adcb
arpl
mov
add
shr
mov
and
jge
inc
out
mul
pusha
adc
mov
dec
hlt
scas
inc
sbb
and
in
rorl
mov
push
mov
mov
das
or
or
push
sbb
jae
pop
and
fs
enter
sbb
bswap
and
ror
addl
cmp
jmp
stos
loope
pop
clc
pop
pop
mov
push
lret
adc
data16
push
jecxz
fs
inc
push
push
sahf
jg
inc
popf
movsb
lods
push
lret
aas
outsl
cmp
outsb
mov
pop
jle
cmp
cld
adc
mov
mov
mov
in
insl
daa
jp
push
adc
pop
filds
mov
jne
outsl
mov
rclb
std
lods
aaa
int
dec
inc
mov
stos
shl
mov
daa
fiadds
inc
pop
stos
test
fisubl
jns
push
xchg
push
and
jae
xchg
sti
xor
ljmp
inc
dec
xchg
inc
adc
orb
mov
push
mov
add
sbb
xchg
jp
mov
mov
imul
out
pop
scas
mov
jge
sub
jb
sbb
insl
or
gs
fldenv
jb
fists
add
mov
je
or
sub
jno
fildll
movsl
inc
adc
jge
xchg
mov
shlb
out
push
push
pop
mov
hlt
cld
xchg
cmp
push
inc
negl
cmp
push
jg
repnz
mov
sbb
out
sbb
adc
movsl
pop
pop
push
cld
jge
lds
jg
mov
fimuls
pop
add
and
or
or
xor
xchg
pop
mov
stos
cmc
xlat
js
jl
xchg
and
lret
out
lahf
adc
lfs
iret
outsl
lods
jmp
cmp
mov
das
imul
fsts
dec
add
out
sub
mov
mov
add
xchg
scas
fnsave
test
outsb
mov
jbe
add
jmp
sbb
mov
pusha
icebp
lret
inc
cmp
jmp
sbb
push
pusha
mov
mov
xchg
cmp
dec
mov
lds
cs
add
call
and
sbb
out
mov
sbb
xchg
test
fs
adc
xchg
addr16
push
pop
orb
gs
push
sub
sbb
mov
adc
fldt
push
push
jae
orb
cli
scas
in
sbb
push
call
fs
lods
fsubrs
push
dec
cwtl
std
cmp
dec
dec
out
pop
iret
out
sti
xor
pop
es
shlb
aam
dec
mov
and
loope
insl
cmp
imul
ss
cs
xor
push
jo,pn
pop
cmp
sub
shll
cmc
enter
dec
aas
mov
ljmp
mov
ret
pop
ffreep
sbb
lcall
shll
lea
icebp
sub
sarl
xor
push
in
add
in
mov
das
pop
xchg
xor
clc
mul
mov
pop
imul
push
loop
sbb
out
push
and
aam
dec
enter
fadd
xor
mov
test
aam
sbb
push
sub
repnz
hlt
pop
sbb
aam
fcomps
or
inc
mov
mov
test
mov
cmp
in
scas
mov
pop
fwait
and
mov
sti
daa
dec
pop
sbb
or
dec
js
push
xchg
loopne
inc
dec
mov
push
add
int
nop
jae
xchg
inc
test
push
cmc
je
insb
shl
popf
push
lahf
jns
push
in
insb
xor
stos
js
mov
pop
push
sti
add
mov
mov
cwtl
mov
icebp
sub
je
inc
mov
dec
mov
test
in
or
lods
lret
jo
mov
pushf
rol
lock
cld
mov
inc
stos
or
jle
ljmp
ljmp
inc
dec
rorb
and
lds
call
xor
imul
xor
jnp
ret
inc
xor
push
movsl
mov
les
cltd
dec
mov
ss
cltd
int3
sbb
xor
movsb
and
int3
inc
pop
adcl
cmpsb
xor
inc
xchg
dec
sbbl
aas
xor
outsb
pop
xchg
cld
shlb
jp
inc
cmp
adc
aad
push
adc
push
jge
sbb
insb
stos
pushl
xchg
sub
mov
in
pop
mov
mov
out
nop
out
mul
mov
sub
and
inc
loopne
xchg
fs
js
movsl
mov
shlb
jo
mov
mov
mov
pusha
into
cltd
sbbl
adc
fdivrp
pop
cmp
cmp
xchg
mov
push
xchg
mov
mov
push
or
jg
add
out
add
stos
shrb
push
int
bound
xchg
ret
push
fistps
cmp
ds
xchg
adc
dec
sub
js
dec
iret
daa
fcompl
dec
int
pop
pop
mov
sti
insb
in
xchg
pop
jp
pop
lds
test
orb
mov
mov
test
xor
adc
cmp
jb
push
cld
sbbl
sbb
sarb
cmp
ljmp
xchg
xchg
xor
sbb
xchg
mov
push
daa
inc
xchg
sbbb
ljmp
out
push
jnp
mov
mov
sbb
fwait
xchg
pusha
inc
mov
jmp
push
push
push
or
and
xor
shrl
loope
xor
pop
mov
cs
inc
mov
or
xlat
sbb
mov
mov
and
imulb
sub
push
add
or
inc
cmc
daa
mov
add
aam
pop
aam
xor
mov
fsub
dec
sub
mov
jo
xchg
jmp
scas
in
jl
ds
es
mov
aas
dec
roll
xchg
lret
jbe
lea
adc
out
pusha
mov
out
cmp
inc
inc
ret
or
cli
leave
popf
fdivs
ds
loope
jecxz
int3
frstor
xchg
insl
daa
sbb
outsl
xor
jge
bound
mov
xchg
mov
cmp
push
sub
imul
fcompl
jmp
xchg
mov
cmp
xor
add
dec
stos
int3
jb
lds
dec
mov
mov
inc
stos
pop
addr16
mov
movsl
call
jo
imul
lcall
jnp
popf
adc
adc
push
je
aad
lcall
scas
int3
jge
mov
jl
mov
stos
outsl
ja
mov
adc
dec
pop
xchg
push
rcll
mov
xchg
fists
inc
in
sub
cmc
xchg
scas
sub
xor
pop
out
arpl
xchg
or
ljmp
ljmp
mov
lcall
daa
cmc
mov
inc
pushf
and
sbb
ret
adc
and
je,pt
loopne
into
pop
mov
mov
shlb
int3
jne
mov
pop
inc
add
ds
push
jge
lret
mov
cmpsl
mov
push
adc
push
add
pop
lods
clc
pop
mov
cmpsl
popa
test
mov
out
aaa
mov
mov
lea
xchg
and
sub
mov
clc
mov
cwtl
xor
push
push
int
out
iret
pop
xchg
lds
push
jne
adc
pop
arpl
je
call
xchg
sbb
mov
loope
push
push
mov
nop
cmpsl
add
sbb
push
dec
push
sub
repnz
cs
xor
dec
aaa
mov
out
jo
xchg
xchg
inc
fistpll
loopne
ret
and
mov
fimull
mov
jb
adc
push
push
pop
addr16
fisttpll
push
das
fisttps
clc
dec
flds
test
cmpsb
push
mov
icebp
sbb
cmp
cwtl
mov
sbb
xchg
jae
xchg
sti
in
sti
or
sahf
mov
cmp
cmpsl
enter
das
pop
stos
sub
and
das
pusha
stos
cld
add
xchg
mov
es
stos
inc
pop
rcl
addb
mov
lret
arpl
jmp
rolb
popa
fnstenv
or
mov
mov
mov
ret
or
fsubl
fucomi
ja
aam
and
or
inc
jb
push
mov
jae
je
lret
mov
outsb
jne,pn
dec
add
out
mov
mov
and
scas
mov
jecxz
bound
shlb
lcall
scas
into
jb
loop
cld
dec
mov
inc
mov
out
push
enter
lcall
adc
pop
in
fwait
pop
push
in
cmp
add
loope
call
sbb
fdiv
mov
inc
mov
dec
sub
cs
sub
push
int3
xlat
cmpsb
adc
pop
stc
xchg
or
jmp
lea
test
dec
jbe
inc
pop
fistps
add
and
adc
adc
aaa
cs
jb
pop
mov
in
dec
gs
ds
loope
inc
iret
mov
cltd
aam
stos
loop
add
mov
lods
jl
inc
add
lods
cs
gs
aad
orl
mov
cmpsl
or
sbb
push
dec
das
ljmp
inc
mov
xchg
sbb
insl
int
ret
movsb
inc
dec
rcrl
repz
dec
popf
fcoml
je
hlt
orl
adc
cmpb
lock
xor
pushf
nop
daa
xor
pushf
fs
sbb
xor
cmpsl
push
je
mov
pop
cmc
fcmovb
rcr
sti
lods
sbb
iret
mov
cwtl
xor
jecxz
xor
xor
or
fs
fistl
dec
jno
dec
fsubl
lret
test
mov
jg,pn
mov
insl
inc
xor
cwtl
jl
mov
adc
or
clc
adc
xorl
xor
outsb
jp
or
inc
mov
lock
cwtl
mov
call
cmc
add
iret
mov
popa
fistps
pop
inc
adc
cmpb
xor
add
lock
iret
jb
xor
lahf
hlt
aam
movsb
pop
jl
sub
adc
popa
mov
decb
xor
push
or
and
mov
jp
mov
and
or
dec
push
cmp
cs
and
fildl
push
pop
push
mov
xchg
pop
iret
cltd
jno
sbb
mov
or
test
mov
sub
imul
xorl
rcll
sub
imul
ret
pop
inc
or
pop
sbb
xor
idivb
jbe
lock
pushf
xchg
shr
mov
lods
jnp
sbb
sbb
lods
xor
cltd
mov
add
and
and
dec
movsl
xchg
outsl
jne
inc
mov
mov
cmp
xor
hlt
jp
jle
mov
cmp
xor
daa
outsb
cmpsb
outsl
xchg
or
xor
ja
sbb
xchg
sbb
movsb
mov
push
xlat
xor
enter
ret
or
lcall
arpl
mov
add
pushf
inc
sub
cmpsl
sub
jg
lret
add
xlat
outsb
call
xchg
daa
imul
or
mov
mov
mov
arpl
in
pop
xchg
rol
fs
push
mov
and
pop
lods
push
add
mov
les
sbb
add
jb
push
push
pop
cmpsl
push
mov
sbb
std
cmp
andl
js
rcr
mov
push
cs
sti
dec
xor
inc
push
sub
lock
sbb
add
popa
inc
iret
mov
sahf
arpl
bsr
mov
sti
cmp
or
arpl
popf
sbb
sub
cmpsl
outsb
cmpsb
out
outsb
test
add
pop
pop
mov
aas
and
notb
lods
pop
sti
adc
addr16
rorl
lock
mov
dec
xor
jb
je
xchg
xlat
push
pop
es
fisttpl
mov
jmp
push
dec
push
dec
ljmp
cmp
mov
mov
bound
xchg
in
xchg
push
or
das
push
xchg
jecxz
lret
mov
mov
lock
xor
outsb
push
mov
cld
rcrl
inc
outsl
xchg
scas
add
lahf
fwait
and
cltd
out
aad
add
hlt
shrb
xlat
call
sbb
outsb
mov
rorb
xchg
dec
pop
das
aam
packuswb
adc
inc
fs
in
add
clc
aam
js
int3
push
xchg
add
ficompl
lret
push
movsb
iret
and
pushf
cmp
xchg
ljmp
insl
cld
push
dec
mov
movsb
dec
or
xchg
inc
and
inc
xchg
fbld
icebp
fs
adc
xor
inc
jmp
jmp
push
icebp
fwait
mov
shl
xor
inc
aas
divb
lods
loope
orl
addl
pop
sub
mov
cli
shr
std
data16
js
sub
dec
pop
mov
fldcw
dec
rorl
ss
fwait
pop
call
test
sub
push
inc
xchg
sarl
fcomip
repnz
insl
outsb
xchg
mov
popf
mov
pushf
and
rolb
sbb
je
push
fisubl
rcrb
mov
int3
push
int3
dec
xchg
xor
testl
movsl
mov
fwait
or
pop
xchg
pop
scas
int3
sbb
outsl
fsubl
jle
loop
xchg
mov
mov
push
sub
mov
and
pop
mov
sbb
xor
fsubp
jns
add
daa
mov
divb
sbb
dec
lods
add
rcll
mov
ja
pop
xchg
mov
sub
cmpsb
shrb
ret
inc
cs
leave
popa
iret
sbb
mov
hlt
int3
jmp
inc
lods
jo
adc
loopne
ret
pushf
pop
int
mov
fs
inc
sbb
cmp
jbe
mov
addr16
pop
cli
xchg
testb
jnp
push
mov
mov
pop
aam
cmp
xchg
or
ljmp
pushf
daa
imul
hlt
pop
jne
fisttpll
mov
mov
inc
push
jbe
jle
or
dec
xorl
cmp
mov
sub
xchg
push
jae
data16
nop
aas
pop
xlat
dec
imul
push
lods
xchg
fnstenv
int
test
out
jge
popa
jnp
lods
pop
leave
mov
cltd
test
fimull
iret
imul
scas
mov
test
xchg
jne
add
and
imul
push
add
mov
loop
inc
fisubl
cmp
sbb
push
movsb
mov
sbb
sbb
imul
pop
pop
inc
push
and
stos
adc
popf
adc
cs
pop
orb
push
sub
jmp
pop
call
cltd
xchg
adc
pusha
mov
xor
mov
loope
cmp
fdivr
pop
jmp
leave
ja
add
and
dec
cmpb
loop
jmp
je
inc
xor
out
fimull
fstp
dec
xlat
loopne
testb
div
es
mov
insl
flds
add
pop
mov
dec
fwait
jecxz
in
je
dec
aad
std
mov
dec
mov
cmc
mov
sub
xlat
mov
cwtl
outsb
cmp
pop
out
dec
jae
imul
push
cmp
pusha
inc
xchg
orb
mov
or
out
call
fcomip
pop
int
stc
or
out
push
repz
pop
cli
bound
fcmovne
fs
and
pop
push
dec
sbb
test
or
or
fisubrs
and
jno
jge
fldenv
dec
or
fwait
mov
mov
mov
jp
mov
push
inc
xchg
dec
push
or
push
roll
fmull
sbb
mov
mov
int3
mov
adc
pop
rcll
packuswb
out
cmp
xchg
es
jmp
sub
ror
push
into
test
cmp
mov
aam
push
stc
add
jecxz
jbe
arpl
sbb
cmp
or
add
notb
cmp
cmp
es
or
or
je
outsb
sbb
scas
and
mov
jle
cmp
pop
test
das
lods
cmpsb
mov
xchg
and
push
xchg
mov
mov
lret
add
cltd
or
jmp
add
adc
sbb
sbb
add
sarb
dec
mov
adcl
data16
test
and
mov
shll
in
stc
loope
push
mov
in
add
popf
fcomps
jae
cmp
lock
lcall
ficompl
add
push
sub
xchg
fwait
pop
or
or
js
rolb
inc
push
or
jne
push
pop
push
sub
xchg
jae
pop
pop
xor
cmpsb
sub
xchg
ljmp
or
aad
cmp
sbb
add
lahf
addl
jno
insl
add
and
aas
clc
fcompl
sub
stos
xor
sub
addb
jae
ret
cld
xor
fisttpl
andl
xchg
or
scas
pop
xchg
lds
sub
into
jo
leave
mov
jge
scas
clc
mov
rcrb
fwait
stos
in
mov
enter
lods
jbe
adcb
inc
push
adc
cmp
push
xchg
jns
inc
adc
xor
in
jle
arpl
pop
sub
jl
daa
and
xor
sbb
push
jl
lahf
das
push
out
push
repnz
dec
int
in
stc
and
pusha
xchg
nop
mov
fsts
pop
add
xchg
jecxz
push
or
std
lock
inc
jle
mov
jbe
loopne
xchg
cmp
jecxz
out
cmp
call
adc
inc
inc
mov
push
stos
lods
jecxz
and
sbb
in
mov
mov
lods
bound
xor
insb
push
cmovle
xchg
iret
imul
stos
jb
add
push
xor
call
in
dec
xchg
outsb
pushf
push
jae
pop
pop
push
in
push
shl
fs
stos
sbb
fistpll
push
sti
jg
sbb
xchg
inc
cwtl
mov
push
lret
data16
pop
xchg
mov
and
mov
and
in
mov
cmp
add
inc
jmp
cmc
push
cmc
repz
aas
pop
stc
jo
and
out
xor
pop
mov
jnp
enter
pop
loopne
push
fisubrl
int
aaa
sub
pop
push
mov
xchg
rol
mov
mov
mov
les
jl
dec
xchg
and
cwtl
mov
pop
dec
inc
fcompl
aaa
sahf
adc
push
push
mov
push
cmp
ficompl
mov
fistpl
jbe
les
hlt
jle
lcall
aas
push
idivl
mov
mov
push
xchg
lret
jb
adc
pushl
imul
push
inc
aaa
arpl
add
add
sahf
fmul
add
lods
and
jns
mov
shl
dec
mov
fnstenv
adc
sub
or
push
xchg
pop
jnp
xchg
lods
add
mov
dec
leave
aad
aaa
push
adc
ljmp
dec
dec
xor
orb
adc
pop
ret
ds
icebp
out
jno
inc
jae
sub
int
cmp
push
mov
cld
sbb
addr16
sbb
dec
aaa
push
dec
jmp
add
sub
iret
add
cmpb
lock
adc
jb
xchg
sbb
filds
enter
popf
xchg
gs
mov
jnp
call
ss
and
mov
inc
mov
mov
mov
xchg
add
out
outsb
push
inc
rolb
lret
xchg
lock
push
mov
ljmp
cmp
ds
mov
sbb
idiv
sbb
mov
movsb
mov
dec
les
out
cmp
pushf
call
fdivr
inc
sbb
das
sub
push
cmpsb
iret
fmul
inc
in
imul
cmp
sbb
xchg
push
lret
lock
cmp
pushf
pushf
popa
or
dec
fisttpl
xchg
sbb
rol
lret
add
hlt
inc
cmp
cmc
push
push
ja
pusha
mov
inc
insl
sbbl
dec
out
jmp
dec
roll
movsl
xlat
lods
vunpckhps
js
mov
mov
fdivl
cmp
xchg
shrl
mov
jno
and
xchg
popa
test
js
xor
mov
leave
sub
bound
xor
movsb
pop
sahf
insb
ljmp
dec
or
cmp
test
fisubrs
inc
lock
mov
ret
hlt
imul
mov
out
xchg
pop
mov
int3
jno
cmpsl
inc
stos
cmpsb
jne
or
inc
dec
popa
xor
mov
xorb
mov
add
ficomps
adc
adc
das
mov
and
inc
cwtl
and
scas
sub
lcall
fadds
jl
arpl
cmp
popf
test
cmp
sub
stos
bound
pop
pop
inc
divl
xlat
jp
and
cs
das
add
sbb
xor
inc
in
and
sar
insl
add
mov
mov
lock
aam
sarl
dec
and
xchg
aas
mov
lods
mov
and
mov
adc
filds
push
loope
adc
lahf
sub
gs
fidivrl
ds
dec
imul
pop
cmpl
pop
jle
aam
test
ret
push
aad
push
sbb
andl
or
xor
adc
adc
loopne
dec
shrb
addr16
cmp
add
cmc
aaa
push
iret
pop
scas
fs
jp
bsf
lods
shrl
fstpt
sarb
push
cmp
dec
pop
inc
inc
mov
je
lcall
sub
add
mov
jae
mov
mov
inc
pop
ret
fcompl
dec
out
inc
sbb
dec
fmulp
aam
push
cmpsb
add
sub
inc
es
enter
mov
insl
leave
inc
or
insl
cmp
xchg
xchg
push
xchg
fs
leave
not
and
stc
push
sbb
pop
lret
hlt
sti
shl
mov
cwtl
sub
xchg
pop
mov
push
sahf
add
pop
inc
jl
dec
cmp
loopne
or
sub
into
cmc
mov
sbb
add
rorb
pop
xchg
and
out
outsb
push
mov
ret
xor
cwtl
pop
push
push
in
cmp
cmp
rolb
jns
insb
cmpsl
lea
testl
cmp
mov
sbb
enter
or
cltd
aam
arpl
jbe
adc
rcll
scas
xor
es
into
sti
adc
adc
test
push
push
rcr
loope
adc
pop
jmp
mov
rorl
pop
jb
mov
fsubl
inc
daa
jg
cs
adc
cld
fmull
mov
pop
jle
sbb
in
outsl
test
xor
leave
cmp
sub
jo
cmp
ljmp
cmp
imul
leave
or
and
out
jecxz
jecxz
lods
xlat
xor
cmc
gs
es
mov
mov
cmp
jge
lcall
dec
mov
xchg
xchg
and
cltd
jbe
cmp
adc
cwtl
hlt
pop
lcall
mov
or
sbbb
shl
dec
sbb
pop
shlb
cs
outsb
add
gs
fs
dec
and
ficoms
or
int3
mov
mov
xor
rolb
add
push
in
inc
jge
fistl
test
dec
fwait
pop
jp
lea
popf
and
mov
push
in
pop
out
je
jge
adc
and
sub
test
out
rorb
xchg
addr16
jl
testb
adc
dec
sub
jne
jno
lret
mov
cmp
lret
imul
nop
xchg
lds
test
push
or
sahf
aam
add
sub
jle
in
jo
out
mov
loopne
xchg
dec
xchg
adc
sbb
mov
pusha
jo
pop
or
outsb
cmp
ret
inc
in
xor
fldl
test
xchg
jns
pushf
ljmp
push
jmp
and
add
shll
mov
imull
mov
cltd
or
xchg
sub
xchg
add
int3
pop
sub
stc
xchg
jb
ja
push
push
aas
mov
outsb
push
or
xor
dec
dec
mov
mov
in
mov
dec
add
loop
fcomps
int3
iret
es
cmp
iret
in
or
in
fdivrl
dec
dec
test
adc
xor
fwait
imul
lret
pop
and
hlt
packsswb
movsb
sti
mov
ljmp
movsl
lock
cmp
xchg
jae
or
mov
dec
fsubs
jp
dec
addr16
xchg
push
or
movsb
mov
jp
inc
pushf
mov
cwtl
cmc
mov
mov
out
sub
inc
arpl
sbb
add
test
out
imul
inc
sub
movsb
lcall
aad
int
dec
adc
mov
loop
fs
daa
adc
cmpsl
mov
push
pushf
bound
add
add
ss
mov
mov
fildl
insl
xchg
js
je
adcb
stos
inc
lods
add
pop
dec
adcb
leave
inc
js
push
jecxz
cwtl
aad
cmp
mov
xor
xor
jge
xor
push
ret
jecxz
pop
loope
lahf
lds
xchg
fidivs
sub
fnstcw
jmp
std
pop
add
iret
dec
sahf
test
jge
mov
hlt
sbb
jg
bound
hlt
lahf
cmp
outsb
jmp
cltd
mov
jmp
repnz
lods
jno
adc
insb
jb
popf
add
mov
inc
mov
push
sarb
and
lahf
xor
sbb
add
adc
xchg
cmp
inc
call
lahf
imul
dec
cmp
aaa
push
jno
test
mov
jg
jl
pop
sbb
iret
ljmp
leave
cmpsb
rcll
in
jbe
xchg
int3
mull
cmc
sub
scas
aas
jecxz
xor
mov
push
stos
test
in
cmp
in
sbb
out
icebp
and
call
aam
jb
test
test
push
inc
xor
in
ficoms
dec
mov
adcl
cmc
ret
ja
lock
xchg
jge
popf
fadd
add
outsb
aam
rorl
add
movsl
push
xchg
xchg
xbegin
xor
adc
xchg
add
mov
out
mov
test
or
lret
mov
push
adc
mov
and
push
mov
inc
test
testl
sbb
popa
lea
fwait
in
sbb
cmpb
mov
arpl
jo
mov
xor
pop
repnz
test
xor
insb
mov
mov
loop
mov
ljmp
push
xor
mov
inc
jge
addr16
insl
imul
mov
data16
call
dec
test
push
in
jne
mov
mov
cmp
fcoml
incb
push
push
pushf
mov
mov
jmp
std
lcall
and
mov
hlt
jmp
je
popa
fmull
pop
jae
fiaddl
sub
lods
pop
add
dec
xor
jmp
xchg
and
and
add
decl
adc
pop
adc
aaa
ret
cmp
jo
xchg
push
inc
stos
fstpt
cmp
lea
xchg
xor
pop
jg
ror
cmpsl
add
cmp
inc
daa
sub
clc
cmp
mov
mov
adc
xor
cmp
mov
orb
test
sub
test
or
fisubrs
aaa
xchg
and
cmpsl
imul
cmpb
push
ds
mov
cmp
push
icebp
push
popa
or
inc
lcall
mov
ja
outsl
mov
lahf
movsb
movb
fdivl
dec
loopne
mov
xor
add
out
shrl
daa
inc
push
jo
loopne
pop
cmpsb
shrb
int3
push
and
scas
sbb
mov
lods
cmp
xor
or
out
or
arpl
stos
gs
jns
sbb
pop
dec
xlat
mov
jne
and
dec
jmp
outsl
push
push
add
jl
mov
mov
sub
mov
pop
insb
iret
mov
fdivrs
dec
jle
or
add
xor
dec
inc
mov
dec
lock
xchg
and
rcr
xor
cmpsl
aas
sbb
ds
add
xlat
cmp
sub
idivl
push
shrl
mov
jmp
stc
mov
hlt
pop
lret
scas
in
subl
js
lea
hlt
in
and
sbb
dec
icebp
sarl
in
je
mov
sbb
arpl
lock
movsl
fwait
sub
xor
push
or
push
cwtl
ljmp
xor
fwait
push
mov
or
scas
repz
in
mov
rsqrtps
cmp
pushf
adc
pop
mov
xchg
stos
pop
mov
or
in
movsl
mov
je
mov
arpl
mov
aam
sub
xchg
and
addl
mov
mov
pop
inc
bound
imul
jp
outsb
insl
outsl
pop
je
mov
inc
call
cmpsl
xor
out
icebp
mov
inc
pop
jno
adc
icebp
fs
fimull
mov
cmp
out
adc
and
sub
mov
inc
enter
mov
xor
push
out
and
push
lock
movsb
adc
jge
dec
inc
sbb
mov
adc
lods
mov
in
mov
inc
mov
call
add
mov
inc
fs
mov
mov
in
aas
xor
or
cltd
push
jnp
mov
repnz
mov
push
inc
xor
je
addr16
cmc
stos
and
or
sbb
fs
popa
je
pop
cmpsl
orl
ljmp
sbb
loop
mov
add
jmp
stos
cmp
aaa
int
sub
xchg
into
push
stos
jmp
dec
lcall
ljmp
lret
movsb
or
sub
ja
mov
sub
lds
add
mov
mov
mov
lods
mov
pop
xor
lods
jo
dec
imul
mov
jecxz
jbe
sub
pop
jp
and
adc
push
imul
shll
rol
insl
test
mov
adc
mov
stos
dec
insb
mov
leave
sbb
xor
jmp
xor
out
mov
in
jae
xor
xor
into
call
jb
lds
shll
outsl
lcall
sbb
sbb
loope
mov
cmpsb
lock
pop
mov
test
jb
cwtl
nop
fstl
pop
xchg
push
fisttpll
pop
in
pop
bound
and
out
adc
std
xchg
mov
sbb
or
in
lcall
sub
add
pusha
push
or
lret
mov
xor
aas
dec
rol
add
push
hlt
insb
mov
push
nop
movsl
int
repz
jecxz
add
lea
out
lock
pop
rol
out
int
loop
je
pop
xor
cmp
fsubrl
push
sub
nop
shr
stos
repz
movsl
cmp
sub
jg
cmpsb
sub
jge
aaa
add
lds
imul
call
sbb
jmp
nop
daa
stc
mov
nop
inc
ror
sbb
mov
mov
jmp
pcmpeqd
loope
xor
xchg
incb
xor
mov
xchg
fs
jbe
push
mov
inc
inc
ljmp
jecxz
and
cmpsb
and
into
dec
xor
negb
jge
nop
scas
add
or
sahf
int
int3
jge
or
fs
loopne
hlt
pop
xchg
or
movsb
mov
xor
loop
movsl
fdivrp
mul
inc
aas
jge
pop
dec
mov
loopne
jmp
adc
rcr
fs
jo
jmp
push
jl
adc
push
mov
and
pushf
mov
cmpsb
sbb
popf
inc
sti
sub
jg
imul
xor
inc
mov
xchg
or
push
in
sbb
negb
test
imul
adc
jg
ds
outsl
ror
push
cmpsb
push
mov
xorb
pop
ret
push
cmp
sub
aad
ret
bound
xor
sbb
movsl
xor
fimull
sub
in
shrb
push
pop
movsb
mov
lcall
pop
jb
movsb
inc
dec
dec
lcall
int3
ret
pusha
mov
fmull
out
adc
mov
pop
dec
mov
sbb
push
mov
mov
and
sti
cmpsl
pop
sahf
or
scas
sub
jne
rorb
dec
adc
mov
jecxz
scas
push
mov
dec
sub
sbb
test
lcall
sub
or
popf
mov
jno
inc
mov
es
fimull
jmp
insl
les
cmp
div
mov
mov
fdivs
mov
xor
scas
lea
mov
inc
sbb
add
jecxz
out
jne
pop
cmc
push
xchg
inc
outsb
jge
dec
push
mov
add
xor
ret
stc
xchg
push
xchg
jecxz
fwait
call
and
shr
nop
cli
pop
dec
xchg
xor
xchg
in
les
and
fcomip
cmpsl
add
scas
aaa
movsb
rcrl
xor
inc
jmp
ljmp
fildl
adc
fimuls
pop
pop
inc
sbb
adc
add
ret
leave
mov
adc
or
rcll
repnz
cli
inc
adc
push
inc
shll
push
adc
inc
sbb
dec
sbb
add
sbbb
push
or
mov
xchg
mov
cmp
mov
cs
imul
jl
in
test
loop
std
lcall
stos
cmp
sbb
inc
in
mov
xor
or
je
sbb
fwait
loope
scas
popf
lods
mov
dec
adc
aaa
nop
cmp
outsl
decb
cmpsl
sub
movsb
mov
push
lret
push
insb
daa
das
sbb
ret
fcomip
or
mov
ljmp
xor
xor
xor
lock
dec
cwtl
mov
mov
xchg
in
movsl
push
push
inc
jg
cmp
movl
pusha
jp
cld
sub
pop
sub
cs
and
ss
pop
cmp
sub
mov
pushf
lds
dec
cmp
imull
out
inc
adc
mov
pop
pop
inc
mov
popf
xorb
sbb
fiaddl
xor
addr16
subb
nop
jb
insb
sub
push
les
cmpsb
imul
push
mov
mov
dec
repz
jmp
mov
mov
mov
fstpl
cmp
xchg
and
inc
leave
mov
pop
out
rcll
sbb
jno
or
es
xchg
jnp
push
popl
lock
jnp
cs
sbb
rol
imul
ds
in
pop
js
or
enter
sbb
std
xchg
push
push
xchg
imul
loopne
xor
mov
cltd
adc
dec
push
cmpl
mov
fldt
ss
lock
jge
push
cs
xor
pop
std
or
xor
iret
xchg
dec
pop
notl
xor
mov
pop
push
jmp
inc
push
pop
and
ret
push
test
xor
add
ja
jae
repz
cmp
gs
movsl
loope
mov
inc
out
bound
cmp
cmpsb
jo
addr16
inc
movsb
cmc
lret
popa
xchg
loope
mov
jle,pn
or
xchg
xlat
sub
dec
enter
push
loopne
scas
scas
das
mov
mov
idivl
test
or
bound
mov
xor
pop
pop
mov
fisubrs
xchg
xchg
nop
clc
std
push
shll
jmp
lcall
jl
push
inc
pop
push
repz
inc
xor
mov
mov
adcb
out
clc
lock
pop
cmp
pusha
and
xor
in
dec
mov
adc
jb
mov
mov
xor
cmpsl
ja
mov
pop
rorl
popf
pop
test
jns
mov
xchg
push
adc
jl
ret
pop
mov
popf
add
mov
ss
mov
mov
imul
cld
icebp
rcr
in
test
lret
sbb
xor
rorl
mov
or
dec
add
roll
inc
adc
xor
add
jns
add
sub
cwtl
and
xchg
leave
mov
mov
xor
jne
mov
sbb
test
add
pop
and
sbb
and
mov
jl
or
pop
sub
sub
jno
shlb
jnp
lods
xor
xorb
mov
cmpb
mov
movzbl
and
or
xlat
and
fistl
movsb
je
sub
std
push
dec
dec
mov
adc
test
or
push
push
push
jbe
dec
shrb
adc
enter
push
fisubrs
dec
repz
insl
xchg
ret
mov
out
test
mov
sub
fstpt
in
movsb
push
inc
mov
lcall
push
push
mov
testb
or
fnsave
xor
fwait
shr
aaa
gs
bound
mov
mov
les
jno
test
mov
sahf
jbe
adc
inc
pop
or
mov
jmp
fwait
stos
ja
push
xor
lret
pusha
cltd
mov
movsl
sbb
mov
insl
xchg
outsl
pop
lret
mov
out
adc
aas
stos
pop
and
bound
mov
or
loop
movb
adc
or
pop
sti
clc
pop
adc
dec
or
push
adc
popa
stos
sti
cmp
xchg
sti
sbb
and
cld
filds
jge
gs
cmpsl
test
icebp
jmp
jl
push
loop
lret
cwtl
add
loop
sbb
mov
stos
push
xchg
scas
push
push
xor
xchg
call
pop
out
dec
and
repz
ds
movsl
in
mov
cmpsb
fiadds
jo
or
nop
mov
push
push
push
outsb
lahf
mov
push
lret
outsb
sub
jmp
sbb
push
inc
enter
hlt
dec
in
sub
and
test
mov
lods
dec
test
stos
test
arpl
cmpsl
leave
fs
mov
push
xchg
addb
push
mov
mov
fs
and
push
or
popa
and
in
pop
cmp
pop
pop
or
cmp
pop
adc
daa
push
test
lcall
pushf
aaa
xor
add
push
dec
rolb
movsl
pop
adc
push
xor
inc
ds
or
cmp
pushf
add
bound
les
cmpsb
add
sbb
fidivl
popf
divb
scas
fcompl
aam
daa
mov
mov
push
jno
rcrb
mov
xlat
sar
or
xor
scas
int3
aaa
mov
adcl
out
scas
cmpsl
jne
push
jl
push
mov
into
and
cmp
pushf
push
insb
jmp
adc
stos
push
push
dec
rcrb
inc
pop
out
fsubrl
mov
adcl
push
adc
mov
dec
mov
popf
dec
push
sti
pop
rolb
add
icebp
xchg
xchg
jmp
pop
roll
stos
jae
jecxz
cli
mov
ret
cwtl
xor
mov
les
movsl
mov
pop
loopne
test
ret
add
adc
shr
adc
fwait
xchg
enter
xchg
ret
pusha
imulb
lock
xchg
xchg
sbb
add
mov
mov
dec
mov
stos
adc
bound
insl
cmp
in
xor
or
mov
xor
sbb
movsb
cli
cwtl
push
fs
popf
clc
sbb
scas
cmp
insb
dec
mov
push
and
stc
jbe
dec
mov
int
jne,pt
lahf
aad
scas
sub
mov
arpl
int
into
xchg
hlt
adc
mov
loop
das
insb
data16
scas
mov
inc
insb
xor
mov
inc
pop
push
xchg
push
movsl
ljmp
xor
call
cmpsb
dec
xchg
addr16
pop
xor
dec
cmc
mulb
rcr
sbb
push
icebp
mov
scas
test
sub
add
addr16
push
test
movsb
jnp
inc
stc
ljmp
call
clc
inc
outsl
and
xor
pop
sub
stc
in
loopne
jge
and
out
outsb
cmp
in
add
test
arpl
jge
adc
sbb
cmp
cltd
lods
fcomi
mov
dec
jo
jo
mov
or
lahf
into
rorl
fwait
mov
mov
and
mov
gs
ret
mov
xor
push
push
pop
or
ret
add
cld
adc
push
jl
push
dec
mov
enter
sub
js
imul
mov
lret
inc
pmulhw
repz
jae
inc
add
mov
xlat
sub
in
fldlg2
cmp
adc
xchg
out
cwtl
mov
cmpsl
bound
inc
out
xchg
shll
sub
mov
jbe
mov
mov
jo
mov
in
ja
mov
adc
and
pusha
idivb
jo
xchg
push
loop
pop
add
xor
mov
ja
in
or
stc
mov
cli
push
mov
decl
adc
push
out
jmp
test
test
dec
and
fsubl
sbb
test
jge
je
inc
hlt
lret
cmp
cmp
xchg
inc
xlat
lods
ret
jns
les
insb
and
out
pop
mov
mov
push
push
loopne
push
dec
pop
jge
mov
jge
dec
jb
mov
mov
insl
mov
lock
pop
stos
sub
and
sub
popa
js
jp
inc
add
mov
or
int3
in
jo
adc
imul
orl
push
aad
jle
mov
push
sbb
test
mov
scas
push
das
or
jmp
fistpll
push
mov
xor
xor
sbb
xor
cmc
cmp
and
jmp
mov
pop
movsb
mov
sub
in
in
scas
rorb
inc
add
fisttps
fsubrs
or
pop
pushf
loopne
dec
add
mov
mov
loopne
dec
outsb
fistpl
fiaddl
iret
inc
leave
mov
testl
imul
cmc
stc
xchg
fcmovne
imul
test
icebp
inc
subb
jl
das
mov
xor
adc
pop
adc
std
in
shlb
movsb
test
pusha
add
aaa
icebp
xchg
ficompl
sahf
mov
add
pop
push
sbb
lahf
adc
or
sub
mov
shll
sti
sub
cmpsb
cltd
scas
cs
das
dec
cmp
ret
jge
xchg
xchg
mov
fwait
jg,pt
lahf
fstpt
xchg
stc
icebp
xchg
clc
add
sub
cltd
js
in
mov
dec
and
jp
cmp
add
jl
rol
jecxz
stos
adc
xchg
adc
arpl
imul
in
lds
xchg
aam
push
rol
les
out
cmpsl
repz
mov
xor
shl
cmp
je
insl
sub
adc
sti
ss
dec
hlt
push
repnz
add
push
cli
add
loop
jo
sbb
iret
imul
or
sarb
lea
mov
and
dec
into
lods
testl
add
and
in
ret
pop
cmp
fmul
add
mov
clc
pop
lcall
push
idivl
jbe
adc
arpl
sbb
add
push
xchg
adcl
insl
jp
ret
push
xchg
xor
mov
dec
aam
fidivs
jo
cmpl
sbb
jg
insb
dec
movsb
lods
outsb
sahf
scas
jle
sbb
sub
sahf
es
sbb
fisubs
cmp
test
or
dec
in
jns
xor
mov
adc
or
inc
jnp
dec
and
lret
xor
scas
add
add
sbb
sbb
jp
sbb
cmp
xor
inc
daa
jg
inc
scas
shrb
and
jl
jno
out
sbb
orl
call
repz
add
movsl
push
inc
push
testl
and
cmp
ret
in
test
or
ljmp
push
loopne
or
adc
int
push
pusha
daa
ds
fdivrp
adc
push
pop
aaa
es
mov
mov
pop
cwtl
lret
pop
sub
push
xchg
inc
mov
dec
out
lock
sbb
xchg
xchg
iret
cmp
addr16
scas
xchg
gs
fmull
adc
popf
inc
pop
pop
andb
xor
lret
inc
pop
mov
xor
dec
xorb
cmpsb
cmc
repnz
cmpl
dec
adc
ljmp
cmp
mov
icebp
pop
push
loopne
aad
dec
orb
jbe
mov
hlt
jo
ss
mov
lock
gs
or
mov
xchg
pop
jo
popa
xchg
push
xchg
gs
loope
mov
mov
mov
push
mov
cld
mov
std
xchg
mov
sahf
sahf
mov
adc
add
jbe
inc
divb
sbb
inc
adc
mov
ret
push
movsl
mov
mov
xchg
add
mov
mov
dec
pop
stos
les
adc
cld
sbb
xlat
fildll
movsl
cmc
stos
repnz
pop
jmp
jl
test
sub
fisubrs
out
pop
pop
dec
andl
push
in
mov
nop
push
dec
and
iret
repz
xchg
mov
mov
scas
mov
cwtl
mull
pop
push
fbld
or
push
and
in
loop
xor
push
in
data16
lds
sub
repz
jg
cmp
mov
lcall
mov
jo
pushf
cmp
in
xchg
or
inc
ja
movb
mov
fwait
testb
mov
fcomps
ficoml
or
xor
push
sbb
or
aad
cltd
mov
std
cltd
and
jge
pop
pop
stos
into
aas
dec
mov
outsl
jmp
in
lea
mov
xchg
subl
movsl
push
andl
popa
imul
jo
lods
shlb
call
xchg
test
xor
push
inc
xchg
pop
pop
imul
shll
push
rcll
adc
or
mov
push
xchg
add
mov
mov
mov
dec
sahf
into
aas
insl
and
push
jnp
arpl
loopne
or
mov
push
loopne
push
jmp
leave
cmpsl
mov
mov
pushf
jge
aaa
mov
stos
inc
dec
dec
pop
cmc
loope
xor
pop
or
test
shl
les
shll
ja
push
sbb
xlat
push
pop
pop
popa
push
xchg
in
ltr
lahf
and
xchg
loope
xor
jp
popa
add
sub
sbb
mov
or
pop
repnz
shll
call
in
stc
jecxz
in
mov
dec
inc
lret
and
sbb
pop
and
sbb
mov
and
mov
fs
fisubl
and
add
ja
xchg
lret
xchg
cmp
enter
xor
std
adc
mov
xor
adc
ljmp
sbb
aas
in
aam
std
scas
xchg
out
add
mov
sub
xor
fstsw
mov
xchg
xor
lret
pop
lods
mov
enter
cmp
jne
in
xlat
mov
xchg
inc
movsl
fcmove
in
fucomip
subw
cmpsb
xchg
pop
addb
ljmp
inc
scas
sub
jne
xchg
xchg
mov
adc
mov
cs
mov
icebp
pushf
pop
dec
cmp
lahf
and
ljmp
dec
jns
xchg
jo
push
pop
cld
stc
jle
mov
pusha
dec
add
inc
jg
push
mov
push
jecxz
jp
mov
mov
movsb
jg
pusha
xchg
inc
mov
dec
pop
xchg
insl
pop
xchg
jle
inc
mov
push
cs
out
mov
mov
fimuls
jg
sub
ds
in
in
xchg
mov
sbb
xchg
jle
xchg
jp
lcall
lcall
ss
xor
addr16
pop
in
test
incl
fsubs
cmp
sub
test
scas
cmp
cld
mov
mov
mov
shlb
repz
pop
pop
bound
ja
scas
daa
mov
scas
adc
mov
mov
dec
sbb
sub
insl
pop
pop
mov
lahf
leave
fsubrp
dec
outsl
aad
scas
mov
push
dec
daa
sub
test
mov
or
test
mov
jns
push
iret
lret
or
stc
push
pusha
cmp
imulb
mov
jle
or
mov
pop
fldenv
int3
dec
add
adc
xor
pop
das
insl
adc
and
jb
pusha
scas
cmpsl
rcrl
push
sbb
mov
repnz
lcall
xor
sbb
cmp
out
xchg
fdiv
pop
jnp
in
mov
xor
js
stc
lcall
push
paddq
or
add
data16
call
mov
sub
mov
daa
shll
es
adc
es
jne
mov
rclb
add
mov
dec
test
dec
xor
pop
sub
mov
in
push
xlat
mov
movsb
ror
xchg
inc
cmp
rcll
lret
testl
inc
lds
xchg
test
mov
rcr
int3
cwtl
stos
out
mov
sbb
sbb
lret
sub
inc
pavgb
mov
popa
test
in
and
into
cmp
push
inc
lods
mov
pop
mov
into
leave
rcll
lret
add
sarl
arpl
js
sahf
dec
cmpl
int
add
pop
es
pop
test
in
iret
cli
cmp
bound
leave
sub
je
jns
jnp
add
xchg
push
ja
mov
xor
pop
sub
fcmovbe
popf
int3
xchg
iret
jg
add
pop
sbb
stos
aam
les
adc
inc
cmp
jo
or
dec
aam
adc
jb
test
cmpb
inc
loop
je
test
data16
out
jmp
add
push
or
and
xchg
add
pushw
das
popa
shl
xor
andl
std
inc
push
cld
mov
pop
pop
cmp
fcomi
in
and
fcomps
rclb
int3
ja
loopne
or
sub
aas
mov
outsb
lock
mov
pusha
inc
test
mov
adcb
daa
ret
lock
cli
dec
ss
jge
stos
ficoml
xor
inc
mov
in
sbb
pop
add
xor
repz
xor
idivl
sbbb
add
sub
into
or
mov
int3
sbb
fs
test
sbb
fadds
and
addr16
xor
out
dec
cmc
add
cltd
dec
pop
lret
push
push
adc
or
fs
lahf
enter
lahf
es
add
mov
mov
fnstsw
xorb
cwtl
dec
cmp
inc
jl
mov
fcomps
mov
or
iret
fst
mov
cmp
jg
add
mov
cmpsl
or
dec
cmpsb
push
enter
lahf
xor
dec
iret
pop
ja
sbb
movsb
cs
jo
sbb
mov
xchg
xchg
sub
push
fs
mov
jge
scas
fisttps
sub
insl
adc
jmp
inc
or
and
sub
outsb
jo
push
pop
mov
jmp
ja
cmpsl
jl
push
or
arpl
push
lcall
ja
test
jmp
push
push
inc
out
es
sub
repz
sub
adc
lret
push
sbb
leave
push
fwait
mov
dec
rcl
xchg
icebp
pop
loope
jne
jp
out
dec
subl
inc
movsl
sbb
or
subb
lods
test
aam
push
lahf
sub
lcall
ret
in
fmuls
adc
call
or
popf
dec
insl
push
stos
notb
int
add
into
xchg
or
imul
push
popa
decb
push
adc
hlt
push
push
jo
mov
add
movsb
inc
sbb
push
xchg
push
mov
or
add
sahf
xor
scas
cltd
and
dec
ror
jb
repz
outsb
mov
int3
add
dec
adc
sbb
cmpsb
mov
pop
or
adc
popf
cmp
data16
stos
inc
and
cmc
aam
lock
adc
idivl
sub
adc
sub
dec
inc
sub
sti
jbe
inc
subb
cli
aas
adc
inc
ds
loope
xchg
rolb
stos
subl
xchg
aaa
bound
daa
adc
mov
inc
dec
ja
out
out
cmp
std
pop
mov
addr16
and
insb
aad
std
mov
in
xor
bound
enter
lods
dec
xor
pop
or
add
sub
arpl
enter
cli
add
xchg
mov
xor
and
insb
adcl
cmp
pop
aam
loopne
sbb
mov
sbb
bound
insl
sbb
mov
sahf
sbb
subl
sub
add
and
imul
enter
jl
lds
sarb
scas
clc
jmp
inc
xlat
mov
pop
jno
arpl
adc
mov
lcall
out
mov
leave
cmp
jecxz
fdivs
jae
sbb
lods
xchg
cmc
hlt
fisubs
push
pop
inc
pop
into
adc
jb
into
stos
pop
int
pop
orb
or
bound
adc
cli
int3
push
inc
hlt
jg
dec
jne
cmp
push
rorb
gs
iret
scas
sbb
sub
lret
add
xchg
jl
aad
mov
into
flds
xchg
or
inc
sbb
std
cmp
and
or
or
sub
push
ss
lret
pop
sbb
add
cli
push
mov
pop
fstp
mov
aad
jg
cmp
daa
adc
repnz
pop
cmp
mov
inc
aam
out
push
inc
jne
shlb
rorb
pop
lods
ja
std
cmpsl
insl
xchg
push
jmp
movsb
jne
jne
mov
in
adc
call
and
movsb
inc
movsb
xor
inc
int3
cwtl
test
popf
lret
inc
fs
pop
divl
pop
sub
xchg
and
loope
mov
outsl
pop
movsl
xchg
ficomps
in
mov
dec
cwtl
mov
fdivrs
pop
dec
push
pop
loope
sub
mov
adc
into
out
fsubrs
hlt
and
iret
ljmp
lods
sbb
test
sbb
std
pop
dec
xor
mov
imul
mov
mov
cmc
xlat
push
gs
jge
aas
or
dec
out
sub
orl
clc
out
xor
sub
adc
and
pop
cmp
popa
leave
and
mov
push
loope
popa
stos
xchg
addr16
xchg
or
jge
add
xor
in
inc
shrl
push
add
roll
cmp
adc
jmp
mov
mov
dec
orb
jmp
and
out
mov
push
pop
aaa
jae
jmp
cltd
lock
and
scas
mov
cwtl
mov
shlb
push
adc
sbb
ja
je
sbb
cltd
lods
jmp
gs
pop
in
hlt
and
xor
xor
aaa
arpl
dec
lahf
addl
das
sbb
frstor
sbb
sub
cld
fsubr
inc
sub
fdivr
out
sbb
dec
dec
daa
adc
xchg
icebp
stos
stos
push
push
ficomps
push
pop
ret
push
je
scas
cli
in
and
rol
adc
aad
inc
mov
fsubl
cmp
and
push
xor
bound
push
jne
sbb
jg
mov
ret
or
add
mov
stc
sti
adc
ret
and
push
cmpsl
xor
dec
es
xor
add
int
scas
les
mov
and
repnz
das
movsb
popf
inc
lcall
fcoml
das
dec
lcall
mov
adc
popa
jg
sub
lahf
pop
loope
aaa
insl
dec
cmpl
mov
xor
add
jg
inc
pushl
enter
call
sbb
push
test
sbb
incb
fwait
ss
stos
pop
cltd
out
call
mov
mov
xchg
imul
dec
test
adc
ss
pop
push
xchg
inc
add
mov
ss
pop
mov
inc
fldcw
pusha
add
std
fmull
add
jge
scas
push
and
pop
push
adc
pop
cltd
cli
inc
movl
arpl
aam
mov
adc
ljmp
adc
out
mov
popf
cmc
aad
adc
mov
shl
lret
pop
jecxz
insl
in
inc
ljmp
shr
gs
mov
sarl
loopne
loopne
or
fwait
les
popf
or
icebp
inc
xchg
repz
jb
subb
in
fdivrl
out
out
and
add
mov
sub
ret
add
mov
mov
cmpsl
mov
push
lock
aas
test
stos
in
repnz
imul
lds
sbb
mov
repnz
pop
cmpsl
sbb
sub
sbb
pop
push
xor
in
mov
aam
int
sub
xchg
cld
sub
pop
ret
and
xchg
outsb
mov
call
xor
nop
push
negl
cmp
xor
mov
mov
lea
push
push
sbb
lock
jle
adc
call
sub
fmul
in
fisttpl
dec
cli
sbb
jbe
and
mov
mov
rcl
test
sahf
mov
loope
outsl
leave
jmp
daa
in
sbb
loopne
incb
jmp
mov
aas
popf
adcb
sti
jg
insl
sbb
ja
jne
mov
dec
mov
mov
jnp
mov
test
push
cmpsl
mov
xor
sub
inc
lds
mov
mov
sbb
inc
in
pop
push
mov
stos
aam
xchg
es
cmpsb
push
bound
add
jmp
add
mov
jp
enter
and
jecxz
cwtl
xchg
inc
cmpsb
pop
xchg
pop
ljmp
pop
je
ja
lea
cmpsl
inc
mov
mov
fs
ljmp
test
mov
cmp
sbb
or
int3
aam
jbe
add
insb
sti
jmp
dec
aad
cmpsb
jmp
mov
or
test
scas
ss
add
cld
push
dec
pop
cwtl
test
jle
sti
and
cmp
gs
loopne
addb
mov
daa
std
sbb
es
ljmp
or
aaa
inc
lock
bound
insl
sahf
daa
dec
je
je
popa
test
jno
das
in
sub
mov
je
insl
jl
adc
mulb
mov
dec
sbb
int
jle
or
jmp
pop
je
sarl
outsl
xchg
aas
or
dec
dec
jb
push
sub
ret
pop
cmp
cmp
push
insl
shrl
loope
jecxz
clc
das
pop
outsb
mov
test
lret
addr16
mov
fcomps
aam
in
push
in
stos
rcrl
jno
sbb
pop
jne
aam
adc
mov
xor
inc
adc
push
imul
mov
dec
mov
dec
call
inc
add
fmul
sub
rorb
xchg
bound
sbb
call
inc
push
and
xor
mov
push
insb
jbe
lret
xchg
sar
fnsave
xor
fs
cmp
jne
out
xchg
jno
mov
hlt
cltd
sbb
adc
popa
xor
xchg
mov
and
sbb
sbb
pop
clc
inc
xor
in
imul
push
leave
jo
push
pop
inc
ret
or
fimuls
and
scas
add
int
mov
repnz
cmp
push
shlb
inc
aaa
aaa
iret
fadd
in
mov
aaa
add
ror
dec
jl
loopne
lahf
pop
push
shl
xlat
push
into
imul
mov
mov
mov
cwtl
dec
pushf
outsl
ljmp
or
lds
in
lret
add
aad
mov
jmp
sarb
lods
frstor
and
mov
jo
ret
and
shrb
dec
jno
jge
and
jp
adc
lahf
into
std
addb
sbb
insb
xor
push
xchg
rclb
mov
jno
cmp
dec
sbb
scas
pop
insb
or
js
je
popa
jle
cmpb
pushf
jo
sbb
cmpb
lcall
aas
ljmp
je
sub
xchg
sbb
inc
sbb
jno
jne
out
pop
movsb
loopne
mov
cmpsl
in
aam
movsb
mov
push
or
cmp
mov
daa
mov
jl
mov
jns
sbb
into
cmpl
cmp
cmp
and
fisubs
jb
mov
icebp
decb
pop
mov
mov
xor
fisubrs
imul
pop
test
mov
mov
stos
ja
dec
inc
xor
bsr
test
bound
cmc
out
inc
add
insb
cli
in
mov
pop
cwtl
int
push
repnz
sahf
jbe
add
shrl
sbb
sbb
mov
mov
inc
insb
xchg
jl
test
jb
out
xchg
mov
dec
int
xor
cmpsl
pop
cs
pop
jns
dec
rol
jp
outsb
jnp
add
fmulp
in
pusha
xchg
es
pop
popf
mov
movsl
pop
sub
outsb
sarb
cmpsb
and
dec
fnsave
mov
sub
xor
push
imul
fxch
mov
pop
push
xchg
xchg
cld
inc
cmpsl
lahf
mov
push
filds
movsl
repnz
and
mov
rcrl
lahf
pop
dec
push
sahf
shrl
cmp
cld
fs
xchg
test
mov
in
in
cmpsl
jns
sbb
add
popa
stos
jg
add
cmp
mov
leave
fists
or
addr16
lods
roll
push
cmp
jmp
subl
push
movsb
jb
leave
mov
dec
mov
popa
dec
fwait
xchg
xchg
mov
les
and
push
jo
mov
lds
xchg
xchg
mov
sbb
or
pop
cltd
vaesdeclast
push
add
mov
sbb
dec
sub
jo
cmp
outsb
std
ljmp
aam
mov
inc
lea
icebp
aas
xchg
fcompl
push
inc
xchg
dec
and
aas
push
sub
push
fcomps
push
push
iret
mov
adc
daa
jmp
xorl
stos
push
mov
in
pop
push
jge
out
in
leave
xchg
icebp
leave
in
es
jp
inc
fwait
subl
pop
adc
jle
stos
mov
fisttpl
iret
push
lods
ret
les
repnz
imul
xchg
lods
push
and
arpl
inc
or
pop
insl
jg
ljmp
jmp
xor
or
mov
je
inc
lcall
adc
arpl
insl
popfw
xchg
in
dec
int3
sub
dec
pop
mov
fwait
mov
arpl
jmp
shl
arpl
insb
push
test
outsb
push
call
lcall
scas
sbb
shll
push
jle
sbb
jb
push
ss
test
jne
es
jnp
pop
adc
jg
cmp
fsubrp
in
sub
jle
cwtl
inc
ret
mov
ret
cli
cmp
xlat
fmull
xor
or
setl
arpl
je
ret
or
push
mov
je
ljmp
pop
pushf
mov
pop
and
rcrl
sti
or
into
in
cltd
inc
sahf
rcl
lahf
rcrb
adc
mov
mov
or
adc
add
pop
loopne
test
mov
ja
imul
in
xchg
add
pop
mov
sbb
pop
xchg
xor
hlt
rorl
mov
in
adc
aas
sbb
dec
sbb
inc
push
mov
dec
test
jle
mov
in
enter
push
cmp
arpl
or
and
or
fidivrs
scas
jo
iret
or
je
mov
push
mov
std
pusha
enter
mov
lods
repz
icebp
rcll
push
mov
stos
mov
push
jno
pop
mov
mov
dec
int3
push
fisubrs
pop
mov
or
lret
cmpsl
or
pop
mov
insb
incb
arpl
jnp
call
adc
inc
in
data16
mov
rol
xchg
pop
adc
scas
lahf
pushf
mov
dec
and
xor
adc
inc
out
popf
pop
xchg
mov
stc
xor
in
inc
es
into
lcall
mov
xchg
pop
jmp
insl
repz
push
in
jne
dec
adc
mov
movsb
out
test
mov
xor
cwtl
ljmp
stos
jl
bound
xchg
test
sbb
ds
fistl
mov
out
nop
add
and
divl
inc
xchg
out
push
out
or
inc
in
stc
or
sub
lea
sub
add
arpl
pop
mov
sarl
mov
je,pt
sub
rcrl
push
fistpll
mov
sbb
adc
dec
and
xchg
pop
sub
pop
shl
aas
adc
cwtl
imul
push
daa
icebp
shr
bound
inc
and
lea
ss
push
sub
sub
test
out
jp
dec
lds
stc
lods
or
iret
js
outsl
push
cwtl
sahf
xor
xchg
outsb
mov
js
stos
xchg
cmpsl
lret
int3
add
adc
ret
aad
xchg
mov
imul
pop
das
cmpb
sbb
rol
or
cmp
cmp
or
dec
jne
xchg
out
xchg
cld
adc
stos
enter
idivl
pop
arpl
repnz
int
mov
cmpsb
xchg
sub
jae
cmp
xchg
imul
js
loopne
scas
mov
popa
push
ds
pop
jns
hlt
ds
mov
pop
mov
lea
arpl
xchg
jae
movsl
or
stos
mov
cmp
push
lock
jae
je
clc
in
push
adc
jno
mov
fs
xor
inc
enter
xchg
sub
dec
jbe
das
lods
mov
imul
sub
jo
add
rcrl
dec
adc
jo
data16
push
in
jge
jp
push
aam
xor
popf
inc
hlt
mov
testb
aaa
mov
das
icebp
push
out
icebp
jp
inc
jge
cwtl
mov
es
mov
dec
sarb
fs
add
and
sti
mov
xor
shrb
icebp
pop
or
and
test
mov
sub
call
sub
jnp
jmp
adc
inc
and
aad
push
test
add
and
shr
adc
jo
push
jns
push
sbb
inc
testb
es
push
in
inc
mov
popf
cs
xor
out
sub
cmp
mov
test
scas
pop
sahf
shll
cmp
scas
sub
sbb
sbb
jge
push
lock
sub
outsl
dec
xchg
xor
sub
sbb
nop
jl
out
rolb
cmp
jmp
sbb
pop
adc
ret
insl
mov
cli
mov
js
cli
mov
dec
push
jnp
dec
mov
mov
xor
xor
insl
lcall
and
jp
jle
in
mov
bound
out
mov
cmpsb
js
mov
add
xor
out
cmc
and
dec
in
pop
xchg
dec
push
pop
sub
push
ljmp
lcall
adc
shll
and
out
inc
andb
or
cli
adc
xchg
jle
fcomi
dec
sarl
adc
daa
shl
imul
add
mov
rcll
xchg
out
movsl
xor
loopne
arpl
xchg
mov
mov
lcall
push
adc
push
pop
push
cmc
adcl
shr
cltd
xchg
int
sbb
in
aaa
insb
sub
cmpsl
lods
lds
lea
jmp
outsb
push
ror
adc
les
and
xchg
sub
add
mov
int3
ret
test
or
cmp
insl
lods
mov
int3
ret
mov
push
push
jno
or
jae
mov
jge
adc
es
sbb
imul
stc
cmp
iret
ds
packssdw
std
lcall
ret
je
sbb
jg
test
xchg
xor
push
fistpl
cmp
add
ja
data16
ss
push
mov
inc
xor
repz
jge
cmpb
pop
or
push
fnstsw
mov
shlb
add
mov
xchg
mov
or
mov
mov
or
out
in
cmp
sbb
mov
xchg
push
jp
scas
sbb
push
lcall
sbb
js
cmc
mov
test
and
xorb
xlat
out
mov
aad
lret
lret
sbb
jnp
jbe
ss
test
cmp
movsl
xchg
lock
aas
add
ds
bound
adc
movsb
push
push
mov
sbbl
mov
lea
subl
xchg
or
jbe
xchg
sti
enter
sbb
mov
mov
push
mov
add
insb
cmpsb
je
mov
sbb
push
push
and
repnz
dec
insl
cwtl
cmp
sub
adc
js
hlt
stos
ret
xchg
dec
bound
stos
cmp
and
xchg
push
jbe
decb
imul
loopne
pop
bound
cli
ja
mov
jae
arpl
jbe
pop
inc
call
in
pop
scas
mov
dec
and
ret
dec
iret
xchg
adc
cmpsb
mov
test
xchg
sahf
mov
jnp
mov
das
jecxz
and
sbb
ds
pop
pushf
sub
mov
and
pop
rcrb
sub
test
jmp
addb
sub
fcomps
in
std
ja
mov
clc
mov
out
and
std
orb
or
imul
mov
mov
divb
xor
fnstsw
cmp
aad
mov
daa
pop
pop
mov
jg
aam
push
inc
inc
fiaddl
ds
loopw
out
jbe
pop
lock
xchg
dec
inc
sbb
jecxz
iret
mov
push
jb
bound
fldt
xor
lods
mov
xlat
jae
jb
subb
pop
cmp
popa
pushf
mov
jne
loope
or
pop
outsb
mov
jmp
and
xor
push
rolb
bound
lahf
dec
push
pop
jge
jbe
cmc
push
adc
xchg
push
fisubrl
lock
and
pop
xorl
adc
xchg
rorb
jmp
cmp
cltd
clc
mov
shl
imul
outsl
inc
insb
inc
arpl
push
cmpsb
inc
jecxz
sub
or
jo
sbb
pop
call
mov
stos
adc
loope
adc
ret
lods
movsl
nop
cld
dec
push
lea
pop
js
aas
ss
push
xor
je
mov
mov
xchg
jl
test
add
mov
addb
xchg
jmp
adc
arpl
aad
jnp
pop
mov
das
add
arpl
cwtl
sbb
or
sub
mov
cltd
inc
inc
cmc
scas
bound
add
inc
push
pslld
push
xchg
xor
cmpl
push
jnp
addr16
mov
stc
jge
mov
addr16
mov
sub
xor
loopne
jo
sub
out
inc
jmp
inc
sbb
testl
js
sbb
jnp
dec
shll
cmp
leave
popf
xchg
fwait
aas
popf
test
rolb
popa
sbbl
das
pop
scas
stos
rolb
inc
mov
and
out
sub
fcompl
mov
lcall
pusha
icebp
cmp
sub
push
testl
inc
or
push
ret
mov
jo
and
das
outsl
fimuls
shrl
adc
movsl
inc
dec
ret
pop
addr16
dec
push
mov
int
mov
shrl
icebp
cmp
gs
ds
push
sbb
adc
jle
leave
jmp
mov
cmpsb
pop
jnp
mov
xchg
or
cmp
test
mov
fsubrl
push
mov
and
adc
jo
jp
jge
neg
xchg
andl
jecxz
je
out
pop
test
xor
xorl
add
cli
sbb
add
mov
dec
sarb
mov
leave
cli
and
and
aas
fnstcw
jb
jle
shll
cmp
fwait
jp
test
sbb
xchg
mov
shll
add
lods
mov
fdivrl
pushf
sbb
cmp
and
in
pop
icebp
scas
mov
in
pop
xchg
les
test
outsb
mov
push
dec
std
pop
add
dec
inc
es
pop
icebp
mov
cmpsl
imul
lcall
mov
pop
cltd
xor
pop
push
scas
mov
insl
jl
or
adc
je,pt
xor
std
ficompl
adc
negl
int
bound
jl
push
leave
movsb
or
add
popf
add
add
jbe
insl
sbbl
push
push
adc
cltd
test
ljmp
dec
xor
pushf
mov
cwtl
push
lea
mov
pop
loope
leave
push
sbb
mov
arpl
sub
or
addl
pop
jb
jl
cmp
cmp
xor
adc
sbb
test
push
cwtl
subl
inc
jl
in
adc
xor
nop
nop
xchg
movsl
jae
mov
or
push
cmp
sub
inc
dec
sahf
cs
rorb
mov
and
mov
orl
push
inc
int
mov
adc
cmpsb
adc
test
in
lret
in
sub
mov
mov
fidivs
add
push
xchg
cwtl
add
repz
or
mov
sbb
xor
clc
xchg
add
inc
jl
cmp
lds
mov
in
xor
mov
push
out
lods
ss
dec
sbb
cmp
dec
outsb
pop
inc
scas
dec
cmp
aam
nop
iret
push
cmpsb
cmp
pop
adc
push
jae
xchg
push
js
gs
in
dec
adc
sub
or
shll
in
mov
jno
jb
mov
cs
stc
inc
pop
ret
and
add
pop
js
je
packuswb
aaa
jns
mov
sbb
jbe
inc
sbb
dec
leave
xchg
testb
adc
dec
sti
mov
outsl
jmp
in
pop
push
icebp
pop
sbb
pop
roll
xor
or
and
sub
testb
mov
cltd
jmp
mov
jbe
jnp
popa
lret
dec
outsb
xor
clc
cmp
mov
dec
sub
push
dec
outsl
jne
aas
jne
xchg
popa
and
les
insb
mov
dec
lock
daa
shrl
jo
aad
dec
scas
sub
pop
push
or
pop
ucomiss
mov
outsl
fdivrp
fs
pop
mov
ret
repz
sti
adc
addr16
stc
add
cs
mov
xchg
and
jge
out
mov
push
scas
dec
repnz
pop
call
popa
add
sbb
ss
sub
call
and
or
add
mov
sub
out
arpl
ret
bound
prefetchw
or
mov
cmp
in
loopne
aam
and
pop
enter
xchg
aam
adc
and
cmpsb
lret
xchg
sbb
in
add
mov
xchg
mov
or
negb
cmp
out
loope
cmp
dec
das
movsb
push
mov
das
inc
dec
jnp
cmp
imul
test
cltd
dec
orb
popa
out
mov
mov
cli
xor
shlb
jle
ja
shl
or
arpl
jmp
je
jp
add
jb
scas
push
dec
xchg
pop
iret
cmpsb
pcmpgtw
rcl
sbb
or
pop
arpl
movsl
hlt
sub
call
and
ret
adc
fnstenv
aad
mov
mov
popf
insl
adc
sub
sbb
js
lahf
mov
outsb
xor
xchg
insb
into
or
jnp
sbb
and
cmpsl
iret
or
sbb
dec
inc
leave
xlat
movsb
add
push
mov
add
lods
sti
loope
rorl
push
and
dec
xchg
or
add
adc
xor
or
mov
sub
mov
xor
or
push
sub
push
mov
dec
or
dec
lods
jnp
aas
pop
lret
loop
mov
andl
or
dec
pushf
jg
dec
xor
neg
push
xor
ds
ss
jle
lock
int
add
cmp
mov
add
aad
jb
inc
outsl
or
xor
mov
movb
sbb
xor
es
sub
insl
jmp
inc
mov
sbb
mov
xchg
push
mov
sbb
dec
xor
popw
adc
mov
ljmp
adc
les
sbb
jp
shlb
mov
pop
push
das
lcall
sti
pusha
aas
ds
mov
cmc
out
fildl
call
add
inc
push
mov
push
cmp
data16
mov
xchg
cmp
test
es
add
jl
and
stos
lcall
mov
ret
imul
pushf
out
add
lret
xlat
loopne
add
or
xchg
mov
enter
xlat
cli
inc
ds
sbb
out
pop
out
inc
fwait
or
and
add
insb
push
mov
jl
pop
push
and
mov
and
aad
push
imul
pop
std
sub
cld
cwtl
in
out
push
scas
pushf
add
into
addr16
mov
fucom
int3
push
aad
ret
mov
outsb
pop
mov
xchg
inc
test
jl
cmpsb
cmpsb
popa
and
jle
xchg
sbb
lds
cwtl
pop
daa
mov
xchg
cmp
jl
and
push
jge
mov
mov
jmp
jae
pop
and
cli
ds
xor
ret
repnz
mov
cmpsl
xor
sbb
mov
jge
pop
dec
outsl
dec
movsb
push
cmp
mov
sbb
mov
push
pop
mov
and
fstps
es
fldt
inc
add
adc
repnz
aaa
jg
fldl
xor
pop
call
cmpsb
and
ja
push
adc
icebp
fimull
lcall
pushf
cmp
fisubrl
inc
aas
fwait
out
push
das
xchg
out
aam
cmp
inc
pop
pushf
or
jecxz
cmp
mov
or
rcr
mov
in
int3
lahf
or
imul
add
pop
push
jb
adc
push
pop
arpl
inc
cmp
pop
ja
sti
fidivs
sub
mov
fs
mov
les
mov
xchg
push
jp
adcl
lock
pop
test
cmp
xchg
mov
lods
adc
int
or
cmc
push
test
sahf
push
push
mov
mov
pop
push
pop
mov
jb
in
dec
nop
xlat
imul
push
xor
movsl
dec
jp
imul
decl
inc
rolb
jle
inc
test
lahf
add
out
adc
inc
ret
je
unpcklps
dec
pop
or
dec
mov
in
mov
xor
clc
dec
add
push
cmpb
in
jge
mov
hlt
scas
push
adc
xchg
scas
cs
mov
mov
fists
lcall
inc
shll
or
mov
cmp
cld
sub
into
hlt
hlt
sbb
lock
iret
testb
imul
out
jp
adc
adc
lret
xor
and
cwtl
lret
out
jb
rcr
pop
push
loopne
xchg
pop
xor
cmp
scas
imul
mov
push
jp
stos
in
sub
inc
popf
ja
ss
fucomip
mov
lret
adcl
push
sbb
nop
lds
ss
rcr
cmpb
jo
in
jmp
adc
enter
arpl
aad
mov
imul
stc
or
xchg
sbb
dec
mov
xor
xchg
data16
mov
popf
lret
cltd
push
and
jno
mov
jmp
adc
mov
sbb
xchg
fucom
or
stos
fwait
adc
insl
insl
mov
sub
lret
shr
jnp
xor
test
stc
and
sbb
xor
clc
sub
cli
lods
dec
cltd
in
fsubl
popf
mov
jb
fnstcw
loopne
out
pushf
xchg
nop
and
rorb
repz
add
add
rolb
xchg
test
push
bound
dec
sti
in
test
fs
xor
and
aad
and
inc
out
jbe
js
inc
mov
adc
sarb
cmc
pop
scas
inc
out
ficoml
xchg
sti
insb
xor
imul
xchg
pop
das
stos
fistps
loopne
sbb
bound
aad
pop
lcall
jl
inc
mov
fmuls
orb
ss
rcrb
sahf
dec
inc
fisttps
jo
popf
jb
xlat
inc
mov
addr16
roll
aas
pop
repnz
mov
outsl
mov
cmp
rcl
sbb
mov
stos
xor
sbb
add
gs
or
out
pop
pop
addl
lds
lods
push
jecxz
or
xlat
ds
push
popf
pop
adc
mov
ja
fld
push
add
in
cwtl
scas
mov
insl
cwtl
adc
fwait
jge
fisttps
aam
xor
pusha
push
addl
or
adc
inc
into
das
push
lock
mov
dec
jecxz
push
ret
enter
cmpsb
cwtl
xchg
jbe
arpl
xchg
stos
push
stos
inc
movsb
sbb
stc
and
mov
adc
sbb
mov
jle
dec
inc
scas
xchg
fnstenv
xor
or
xor
in
sub
clc
xchg
stc
dec
push
sbb
push
call
xchg
sbb
mov
inc
xlat
insw
cmp
es
stos
sarb
outsl
test
fildll
lods
in
jle
mov
out
adc
std
scas
xor
jns
cli
lcall
push
lods
orl
jp
mov
pmulhuw
insl
adc
icebp
aaa
rcrl
sbb
sahf
iret
es
psrad
adc
inc
mov
arpl
in
lds
punpckldq
hlt
mov
mov
ds
aam
jle
xchg
sbb
test
jae
popa
lods
shl
scas
sbb
push
dec
cmpsb
sbb
cmp
dec
sbb
test
mov
cltd
out
shlb
lods
lahf
push
je
xchg
je
pop
xlat
jl
jne
add
nop
icebp
inc
pop
ds
lods
ja
cmp
mov
xchg
dec
adc
test
int3
dec
pop
sbb
add
and
insl
jge
dec
push
xor
jmp
dec
mov
inc
push
leave
mov
xor
outsb
mov
stos
div
testb
scas
pop
add
xorl
xchg
push
movb
mov
repnz
leave
mov
lret
test
push
xchg
sahf
and
cmp
pop
fstl
fnsave
adc
rolb
jo
or
scas
shl
insl
sbb
ds
xor
lds
lcall
xchg
or
fs
mov
and
jecxz
pop
mov
shrb
sub
out
jns
shlb
or
xchg
push
enter
pusha
mov
out
adc
hlt
test
shlb
add
call
add
loopne
sub
pop
sahf
ja
sub
cmp
nop
xchg
mov
cli
rclb
xchg
das
mov
jmp
sbb
dec
jp
ljmp
lock
in
mov
arpl
sarl
xor
cmpl
xor
and
repz
lahf
in
jb
mov
add
or
lock
xchg
into
push
outsb
test
in
adc
scas
orb
popa
sub
push
sahf
mov
jg
loop
pop
push
mov
adc
and
sub
push
jecxz
xor
int3
push
out
enter
mov
xchg
mov
add
jne
add
mov
xchg
ret
ljmp
ja
shr
rorl
push
cmpsb
adc
xor
lcall
sbb
not
adc
and
push
jb
adc
cmp
xchg
sbb
inc
clc
in
out
arpl
cvtpi2ps
jge
ds
jg
insl
mulb
jg
repz
test
dec
out
repz
out
jg
ret
rcrb
ljmp
ret
fwait
mov
add
fdivl
cmp
mov
cmp
adc
inc
icebp
mov
mov
pop
shrl
sbb
or
inc
jecxz
lock
gs
and
into
test
ret
sbb
int3
movsl
adc
mov
sub
and
and
mov
jl
push
test
jle
cmp
aaa
icebp
es
aaa
out
cmc
out
sbb
incl
or
das
in
xchg
inc
daa
sub
gs
out
inc
popa
inc
scas
xchg
mov
cwtl
mov
scas
adc
popf
rorl
into
leave
popa
xor
loop
add
or
sub
jl
movsl
mov
arpl
mov
jno
jp
ficompl
les
dec
adc
sub
test
pop
repnz
jbe
mov
cmp
adc
out
scas
js
add
lds
ss
cmc
shrb
add
es
decb
cmp
push
testl
stc
mov
lret
add
in
shlb
jge
iret
sbb
ss
mov
inc
outsb
mov
mov
xchg
mov
and
mov
adc
les
lods
mov
xor
cwtl
loopne
dec
cmp
andl
add
lods
fisttps
xchg
mov
cmp
into
jl
ja
subl
test
cs
stc
fmulp
add
pop
js
mov
sub
adc
mov
imul
ret
pop
pop
mov
test
je
sti
adc
push
mov
mov
stos
push
mov
xchg
or
sahf
sti
pop
xlat
xchg
pop
mov
and
ficoms
mov
gs
int
or
add
jle
rclb
lock
in
movsl
push
jl
call
in
mov
ret
pop
jns
pop
adc
jne
mulb
int
mov
fildll
dec
cmp
mov
cltd
or
mov
mov
lds
mov
sti
cmp
add
xorl
adc
lret
jne
push
adc
inc
stos
add
and
xorl
aad
and
cmp
dec
push
mov
fnsave
scas
push
je
lods
add
jmp
mov
inc
adcb
rcrb
lret
sti
add
pop
add
xchg
inc
imul
mov
and
pop
mov
mov
add
mov
into
cwtl
jae
call
cmp
rcrb
imul
dec
push
shl
pop
mov
faddl
xchg
mov
mov
fldcw
add
cli
dec
stc
mov
inc
xchg
nop
fwait
jecxz
cmp
mov
loopne
ljmp
push
dec
xor
jne
sbb
fucomip
cmp
imul
test
frstor
das
in
iret
add
bswap
in
jne
in
fcoml
repnz
inc
fwait
divl
lea
inc
xchg
push
inc
ss
dec
ds
lods
lods
mov
lods
adc
mov
enter
dec
lods
dec
mov
xchg
out
cmc
or
pop
es
sbb
or
xchg
inc
pop
push
fcos
and
push
les
loopne
lahf
scas
dec
adc
add
inc
lods
cmp
cmpsl
push
out
pop
sbb
pop
rcrb
mov
movsl
push
aaa
mov
imul
push
cmpsl
jl
or
and
and
subb
leave
mov
jno
add
dec
xchg
into
or
mov
outsl
mov
fisttpl
and
mov
lret
adc
mov
lds
inc
out
fadd
mov
push
and
je
fsts
in
in
mov
lock
rcr
mov
test
fsqrt
jle
mov
lock
outsl
or
cli
cmp
cmc
in
pop
mov
xor
pop
call
stos
fcoms
out
add
ss
popf
xor
mov
dec
push
lods
in
jge
fistl
aad
loop
sbb
icebp
pop
je
bound
nop
and
mov
mov
mov
mov
fmull
jnp
add
xor
xor
or
fistl
mov
xor
inc
cmp
mov
or
test
pop
jmp
mov
inc
cmp
sbb
das
mov
mov
loope
jne
movsl
push
insb
fmul
cld
sub
xor
fistpll
add
imul
aaa
add
mov
push
push
dec
imul
imul
cli
arpl
sbb
repz
sub
pushf
and
je
fdiv
mov
sub
push
adc
mov
and
in
imul
pop
xor
mov
fdivl
fildll
push
sub
or
jae
pop
xor
inc
add
mov
xor
call
sbb
and
pop
imul
push
adc
int
push
int
sahf
adcl
les
cmp
and
push
stos
cwtl
jmp
sbb
loopne
sbb
scas
mov
subb
cltd
aad
adcl
pop
aam
xor
push
push
push
call
fnstcw
fs
sti
repnz
imul
js
mov
ja
sbbl
push
les
adc
shrl
stos
xor
mov
pop
add
mov
dec
out
cld
dec
negl
mov
xchg
in
pop
or
pop
insb
cmp
or
stos
outsl
mov
cli
inc
mov
mov
sti
push
outsb
sub
xchg
in
mov
xchg
and
push
in
add
es
cld
cmpl
mov
testl
cmp
sub
pop
xor
idivl
adcb
enter
mov
push
pop
rcrb
rcr
xchg
shrb
cli
xor
rclb
mov
test
mov
xchg
subb
push
aad
jne
sbb
leave
scas
mov
jg
loop
mov
movsb
into
xlat
sbb
shlb
or
mov
test
movsb
jae
dec
divb
ret
mov
mov
dec
cmpb
lret
pop
and
or
xchg
jb
repnz
mov
sbb
mov
sub
mov
loopne
sub
push
icebp
xorl
push
rorb
lds
arpl
adc
aaa
inc
jl
mov
inc
repz
lods
or
pusha
aas
lahf
ja
inc
and
insb
cmp
les
pop
out
pop
jl
and
ror
lcall
or
rcrl
jmp
dec
pop
and
dec
jle
sbb
mov
lods
cmp
in
mov
pop
add
push
je
test
stos
mov
frstpm(287
pop
adc
movsb
xor
add
or
or
mov
cmpsb
cmpb
rcrb
xchg
shll
and
jmp
loope
and
mov
push
pop
push
repnz
aas
jb
outsb
loop
andl
mov
inc
das
cmovnp
loop
movsl
mov
mov
cli
mov
aam
imul
jge
movsl
push
test
shlb
add
test
dec
or
fimull
mov
outsb
dec
repz
add
into
cmpsb
pop
pop
int3
cld
fs
xchg
cwtl
pop
in
mov
push
cmp
loop
addr16
xor
mov
into
loope
out
sbb
push
dec
add
test
sarb
orb
insl
mov
shlb
scas
int
mov
int
les
sub
pop
mov
faddl
sbb
xchg
into
or
jae
sub
add
sub
mov
xchg
mov
xchg
leave
lods
sti
and
push
enter
cwtl
mov
into
adc
xchg
mov
pop
insb
push
cwtl
mov
xchg
jmp
xchg
push
movsl
stos
or
mov
push
push
xchg
adc
lcall
ficoms
pusha
rorb
inc
inc
or
pusha
adc
or
mov
cmpsb
rolb
pop
mov
pusha
into
std
adc
dec
mov
push
rorl
ret
call
pushf
cmp
add
frstor
and
rclb
inc
mov
stos
lcall
pusha
sbb
mov
adc
call
jae
daa
inc
test
and
push
mov
mov
inc
ds
fs
test
cld
mov
shlb
dec
jnp
iret
pusha
or
xlat
adc
out
aas
mov
cld
mov
incl
out
nop
es
jmp
sti
xor
ret
je
xchg
cmp
jb
dec
test
jmp
movaps
jnp
adc
jg
imul
fdivrs
adc
push
ja
and
and
mov
inc
add
dec
inc
sub
xlat
jmp
jbe
leave
stc
mov
inc
dec
roll
int3
dec
xchg
jecxz
cmp
add
js
cld
sub
test
mov
sub
jbe
sar
dec
out
inc
repnz
jmp
push
or
add
hlt
adc
in
mov
xor
loope
add
mov
inc
sbb
adc
push
pop
xchg
out
ficoms
lcall
xor
shl
mov
inc
sub
call
xchg
mov
js
or
add
adc
jmp
lret
jg
sub
xchg
stos
ljmp
jmp
pop
sub
hlt
jecxz
addr16
xchg
ja
nop
xlat
stc
mov
ja
sub
out
aas
pop
xor
or
fs
sub
leave
add
add
sub
sub
test
mov
cmp
jnp
call
iret
test
jmp
mov
xor
xchg
lock
or
lret
fisubrs
mov
mov
movsb
push
cwtl
or
mov
or
pop
test
pushf
dec
arpl
ja
out
sbb
int3
xchg
mov
cvttps2pi
insl
pop
ret
cltd
out
jno
xor
mov
lods
ret
mov
dec
jbe
pop
out
movsb
imul
bound
js
arpl
mov
std
mov
jle
lock
imull
pushf
mov
mov
mov
mov
mov
xchg
fiadds
jmp
dec
jns
stc
insl
aad
lahf
lods
mov
imulb
inc
push
and
or
gs
sbb
jecxz
add
sar
je
ljmp
mov
int
dec
mul
jno
test
data16
sbb
movsl
inc
mov
popa
mov
ja
ljmp
outsb
aas
mov
nop
pushf
notb
lds
repz
and
scas
jbe
pop
movsb
stc
jbe
xor
xchg
push
jno
es
mov
push
lcall
jg
movsb
addl
dec
mov
cmc
pop
dec
lret
js
repz
jb
dec
scas
test
aad
sub
mov
sarb
shl
jae
pusha
push
int3
add
loop
sarl
push
cmc
popa
inc
data16
arpl
xlat
aad
lret
call
fstps
add
sahf
push
loop
lods
cmp
incb
dec
xchg
sbb
sbb
js
sbb
add
mov
movlps
pop
aam
fsubs
loope
daa
xor
imul
mov
sahf
xchg
je
inc
sarl
cltd
into
fs
mov
push
or
aaa
cli
stos
fistpl
fiaddl
cmp
in
lods
mov
pop
clc
stos
fcmovnb
jnp
push
push
cmp
jl
das
cltd
in
sbb
popf
push
mov
mov
adc
cltd
push
push
cmp
pop
rorl
add
or
cmpsl
addl
mov
mov
xchg
jecxz
shlb
adc
cmp
jns
addr16
dec
leave
pop
cmpb
jnp
adc
add
outsb
andb
insb
daa
dec
xchg
xchg
dec
lret
adcb
xlat
test
cmp
xchg
lods
filds
or
das
dec
dec
add
mov
shl
sbb
shl
pop
jae
dec
sbb
ljmp
cmp
jno
cmc
sbb
jmp
and
xor
hlt
mov
pusha
into
addl
test
jmp
in
xchg
pusha
pop
ljmp
push
jmp
in
add
daa
stc
cld
insb
out
cmp
and
dec
sub
cmpsb
stc
jge
cs
out
hlt
and
push
add
mov
pop
mov
xchg
ja
lahf
dec
sbb
add
push
lcall
pop
cld
test
pop
mov
rcrb
test
mov
hlt
push
and
xor
cmc
sub
pop
jmp
insl
inc
push
sub
pop
cmp
push
stc
push
push
sbb
pmulhw
add
cmp
out
jp
xor
mov
xor
dec
adc
addl
and
xchg
adc
pop
inc
mov
inc
hlt
cmp
cmp
pop
xor
mov
and
xor
andl
sti
and
inc
hlt
mov
test
leave
iret
xchg
cmpsb
nop
and
dec
lahf
xor
clc
or
mov
xchg
xor
hlt
repnz
ret
ljmp
cli
les
in
data16
cwtl
xchg
cmp
fs
add
insb
aaa
ja
sub
or
or
or
loop
out
aas
mov
fwait
pusha
mov
outsl
xchg
cwtl
test
mov
add
inc
int
lcall
mov
cwtl
push
into
mov
cmc
add
jb
lds
mov
mov
cmpsb
pop
call
jo
call
scas
push
outsb
popf
adc
pop
pop
mov
sbb
push
xchg
js
xchg
call
les
push
es
test
add
aas
mov
push
or
add
or
loope
lret
out
jnp
jle
dec
loopne
stc
adc
repnz
or
mov
std
in
ja,pn
pop
pop
lcall
xor
mov
push
jmp
dec
mov
bound
push
mov
sbb
lret
scas
mov
dec
fisubrs
and
jbe
aaa
shrb
shl
out
cli
dec
cmp
lret
xor
imul
out
mov
push
out
adc
imul
fldcw
cmpsb
test
out
insl
push
push
add
dec
cmp
push
div
adc
mov
mov
insl
out
test
into
mov
xchg
fadd
dec
enter
add
mov
cli
fcompl
imul
fildll
push
fwait
cld
add
icebp
arpl
outsb
and
pop
test
add
rolb
sub
mov
mov
repnz
hlt
repz
add
mov
cmp
cmp
or
xor
js
pop
pop
inc
stc
enter
int3
dec
pop
arpl
mov
or
stos
dec
jg
xor
adcl
add
pop
popf
inc
arpl
int3
inc
cmp
andb
xor
cmp
ljmp
daa
pop
xor
scas
xor
push
pop
call
dec
pop
dec
test
lret
add
sahf
movsl
dec
das
insl
es
outsb
dec
lcall
add
fimuls
fidivrl
push
jne
rcrb
leave
int3
cmp
fs
adc
clc
xor
test
aad
aad
shll
adc
iret
bound
insb
std
lret
inc
adc
fisubs
push
cmp
pop
add
and
movsb
jle
pop
int
pop
and
cmp
xchg
mov
decl
jl
js
rcll
dec
test
test
xchg
test
jmp
inc
movsl
loope
sahf
ljmp
js
add
aas
cmp
fstp
loope
jae
aaa
cld
push
inc
test
jp
jmp
cmp
adc
cltd
leave
push
imul
inc
cli
test
add
jecxz
adc
xchg
mov
jb
sub
push
test
push
dec
jo
inc
jmp
cmpl
jge
lret
rorb
lea
hlt
iret
sbb
into
cmpsb
dec
mov
add
shl
xchg
dec
mov
mov
js
movl
jnp
jp
bound
cltd
mov
dec
repz
jmp
pop
fsubrl
or
clc
shlb
in
inc
cmp
imul
push
or
aad
imul
xor
mov
sub
inc
imul
inc
mov
mov
ljmp
out
push
rcll
cltd
push
nop
sahf
mov
fs
fbld
fisttps
dec
shl
sbb
sub
mov
cld
adc
popa
les
shlb
bndstx
mulb
pop
cltd
ret
mov
inc
jle
mov
test
fnsave
arpl
aas
pop
lcall
push
repnz
and
mov
mov
sub
push
lds
jecxz
mov
add
outsb
fs
xlat
jno
or
call
test
fsts
fsubs
push
sahf
mov
call
rorl
clc
add
sahf
jecxz
push
sub
imul
imul
jmp
add
push
xor
in
jnp
lahf
adc
lahf
out
hlt
adc
pushf
cmpsl
sbb
pop
xchg
jb
fucompp
pusha
sbb
cmp
test
jb
out
pop
pop
xlat
sub
xchg
jbe
xor
cmp
pop
popa
inc
sub
not
and
test
or
and
lds
dec
sbb
sub
int
pop
repz
push
cs
or
xchg
idiv
daa
dec
mov
jae
aas
xor
movsb
pop
push
mov
add
mov
psubq
js
cmp
inc
push
fistps
cmp
aas
aad
cli
dec
push
xchg
pop
scas
sub
aas
sbb
shrl
repnz
jb
insl
mov
insb
cmp
xchg
aad
mov
pop
les
pop
mov
push
pusha
hlt
pop
cltd
push
test
lret
add
and
or
pop
aam
fwait
ret
es
sub
fs
jae
jnp
mov
rorl
lods
roll
sahf
add
movsl
cli
lods
add
inc
xor
dec
adc
lea
xchg
or
inc
add
sbb
jb
jp
mov
cmp
jae
pop
xor
adc
test
xor
imul
inc
adc
mov
pop
fdivrl
test
mov
and
shll
shr
jbe
out
mov
repz
stos
mov
mov
fiaddl
mov
xchg
push
movsb
dec
pop
dec
inc
jge
insb
cmp
cmp
xchg
cmpsb
inc
pop
cmp
mov
lcall
push
or
xor
cltd
or
cwtl
lock
add
mov
rolb
sub
mov
inc
stos
lods
mov
stc
js
repnz
jge
stos
loope
cmp
jno
rcl
dec
prefetch
push
cmp
out
cmc
aam
adcl
fwait
adcl
cmp
test
mov
and
out
adc
mov
jo
loope
aaa
pop
mov
ja
pop
mov
mov
ljmp
mov
jg
inc
push
mov
hlt
mov
je
fistl
imulb
inc
and
cmp
scas
push
popa
mov
shlb
xor
lds
dec
rcrb
cltd
pop
mov
push
jb
jae
xor
les
lods
cmp
icebp
jl
push
test
xor
test
shll
cmp
xchg
and
mov
cmp
inc
ds
stos
ja
and
arpl
sbb
sub
add
pushf
es
in
stos
sub
repz
pop
mov
mov
ds
adc
shr
mov
cmp
xor
xchg
xchg
in
push
aad
inc
cli
add
inc
clc
or
push
push
leave
adc
inc
out
int
dec
add
mov
sub
std
dec
push
jno
push
gs
inc
or
xchg
or
jne
pop
xchg
jbe
int
mov
daa
xor
dec
in
adc
and
mov
inc
testl
fcoms
jae
jl
pusha
inc
ret
mov
xchg
popa
mov
aaa
dec
mov
add
cmp
jbe
cmp
aad
sub
aas
test
lret
xor
rorl
out
adc
cmp
mov
mov
loopne
pusha
outsl
mov
adc
jno
addb
pop
dec
cmpb
je
sahf
inc
sub
les
pop
add
mov
mov
mov
mov
pop
sbbl
imul
stos
aam
cmpsb
andl
mov
sub
adc
inc
sbb
jge
loop
fs
jp
call
shlb
loope
or
push
mov
and
fucomi
imul
lahf
inc
mov
jnp
jl
out
pop
in
aad
dec
cmp
ss
cmp
pop
jge
jmp
mov
add
out
push
xchg
fisubrs
addl
bound
icebp
and
xchg
bound
push
test
and
test
sbb
sub
pop
push
xchg
inc
stc
mov
mov
cli
sbb
xor
cmp
inc
cmp
inc
pusha
lds
cmc
scas
pop
cmp
repz
loope
and
cs
rclb
push
out
outsb
push
sbb
xchg
into
or
inc
decb
mov
jp
repz
test
nop
xchg
jg
pop
addr16
push
cmp
add
push
pop
mov
bound
sti
out
mov
mov
movsb
data16
xchg
outsl
inc
sub
outsb
mov
mov
lcall
movsl
mov
jo
imul
fsubs
mov
dec
and
sbb
jo
mov
adc
insl
jnp
and
adc
dec
int
sahf
outsl
sbb
add
fwait
enter
jp
jbe
pop
out
sbb
jg
push
je
pop
pop
mov
xor
inc
push
jnp
movsl
cwtl
inc
jnp
and
adc
stos
mov
mov
jo
ss
ds
mov
lock
mov
mov
or
dec
inc
stos
arpl
cmp
pop
mov
divb
mov
inc
jp
aaa
in
jo
jmp
loop
push
mov
or
adcb
lea
mov
inc
sub
mov
push
push
out
repz
clc
lcall
and
mov
mov
push
mov
push
xlat
push
orl
xchg
cld
adc
and
scas
repnz
insl
cmp
popf
bound
add
shrl
lock
arpl
push
add
mov
sbb
stc
xchg
mov
mov
xchg
je
repz
sbb
xchg
xor
push
dec
cli
dec
lods
xchg
mov
push
xchg
fst
mov
sbb
pop
notl
or
shlb
nop
or
or
popf
out
and
loope
sub
jb
adc
enter
mov
lret
or
enter
xor
or
xlat
mov
pop
add
adc
subb
cmp
lods
cld
cmc
addr16
xor
pop
jecxz
and
aaa
mov
pop
lock
stos
cltd
stos
arpl
dec
jae
dec
cld
lea
out
cltd
stos
dec
mov
fmul
loop
fmuls
xchg
jecxz
clc
fbstp
push
roll
sub
add
test
cwtl
adc
daa
test
cmc
mov
lret
fnstenv
jecxz
mov
inc
jno
push
xchg
mov
rclb
add
in
and
and
loop
sbb
repz
lcall
leave
insb
add
sub
jmp
push
cmc
cmp
lcall
sub
pop
aad
sbb
dec
jns
mov
sahf
xchg
mov
push
mov
inc
movntps
rol
sbbl
mov
popf
cmp
inc
aam
stos
push
push
loop
sub
iret
push
rcrl
xchg
gs
inc
shrl
inc
xchg
dec
fildl
and
pop
sbb
aam
fdivrs
aam
xor
enter
and
mov
sub
cmpsl
mov
pop
pop
xor
movsl
xor
sbb
or
data16
jo
xchg
add
sub
jp
loope
dec
xchg
sub
push
or
add
mov
rorb
add
sub
lfs
outsb
pop
out
jecxz
or
leave
inc
enter
cmc
mov
pop
push
jecxz
mov
sub
and
nop
cmp
lds
adc
test
or
xor
push
add
fucomip
data16
add
aas
cmp
mov
adcb
test
inc
push
shr
cltd
push
cmp
lods
lcall
mov
aam
dec
inc
negb
scas
dec
mov
lret
das
sub
inc
dec
out
mov
push
mov
bound
inc
xchg
push
addr16
jg
and
leave
mov
das
mov
xchg
mov
clc
jmp
cmp
bound
inc
popf
andl
call
or
shl
loopne
lret
jp
mov
sub
and
or
fimull
xor
dec
roll
roll
arpl
adc
fwait
mov
add
imul
add
ja
xor
push
mov
cmp
js
pushf
in
mov
push
sub
ret
cs
in
pusha
scas
cmpsl
lds
push
cmpsb
cmpsb
fiadds
aad
pusha
pop
cmp
add
xor
lods
pushf
hlt
pop
dec
or
xchg
dec
stos
adc
aam
repnz
mov
mov
loop
mov
inc
ds
je
jl
push
lods
pop
lods
mov
sub
mov
jae
cmpsb
fwait
mov
xchg
dec
add
mov
aaa
xor
adc
clc
mov
or
mov
push
mov
test
xor
or
cmp
mov
sbb
mov
and
adc
xchg
jge
or
cmp
mov
cmpsb
sti
andb
stc
xchg
mov
xor
sbb
dec
das
inc
xor
mov
dec
test
mov
mov
mov
mov
add
mov
mov
lds
loop
adc
shll
div
sbb
cltd
pop
mov
jge
popf
movsb
orl
incl
dec
pushf
addr16
call
cli
lds
push
mov
pop
sub
iret
loopne
xchg
popf
hlt
mov
push
sbb
jno
jns
into
xor
lds
cli
mov
popw
cli
sub
into
inc
or
insb
cmpl
push
out
xchg
push
out
test
and
repnz
and
add
adc
mov
inc
cmp
out
sahf
push
out
ss
pop
out
pop
cmpsl
pop
push
bswap
or
fstpt
fcoml
and
jo
rcrl
cmp
push
roll
jbe
add
lahf
popl
mov
cwtl
fildll
popf
mov
imul
imul
mov
mov
sub
add
pusha
nop
pop
addr16
loopne
std
cmp
fildl
data16
inc
in
push
scas
mov
cmpsl
cmp
shl
add
iret
mov
jge
adc
rolb
fcomi
daa
cmp
cmpsl
pop
adc
test
mov
push
aad
scas
lret
mov
movsb
or
out
sbb
xchg
pop
mov
xchg
nop
outsb
mov
andl
std
fmul
jbe
out
mov
jecxz
xor
repz
notb
lods
and
lock
data16
and
push
es
les
xor
jg
cmpl
daa
mov
mov
add
xchg
arpl
adc
add
sbb
pop
in
mov
sti
and
jno
cli
int
out
test
pop
mov
testb
xchg
icebp
cmp
xlat
fidivrs
xor
jmp
lea
jae
mov
and
sub
or
fwait
mov
fists
xchg
sarl
sub
lods
xchg
inc
lcall
out
mov
pop
ja
pop
rorl
cmc
adc
dec
xor
sub
sbb
cmc
push
pop
cmpsb
mov
inc
scas
push
mov
loopne
cmp
mov
imull
iret
rorb
inc
or
shlb
out
sbb
shlb
addr16
cmp
movsb
lahf
jns
and
mov
jge
xchg
mov
and
pop
rorb
sbb
jae
dec
jl
push
mov
loopne
inc
scas
into
xor
outsb
sahf
jle
popa
xchg
xor
daa
cld
outsb
hlt
mov
pushf
sub
aaa
pop
cmpsb
xor
xlat
loopne
jbe
les
addr16
push
pop
mov
mov
jae
xor
loopne
push
cs
dec
rorl
add
adc
bnd
jge
int3
mov
mov
out
push
sub
cld
jmp
hlt
cmp
cltd
fs
mov
cli
push
mov
push
scas
enter
movsb
mov
pop
sbbb
decl
xchg
or
test
jb
cmp
loopne
or
lret
xchg
out
or
or
mov
add
sbb
lret
mov
cld
ja
int3
js
push
scas
lods
movsl
push
or
ret
mov
sub
add
add
out
flds
mov
xlat
push
jne
adc
xchg
jle
jle
push
sub
lahf
in
in
pop
aam
xlat
inc
sub
dec
movsb
xchg
lods
movsl
or
mov
out
push
lods
sbbb
sub
sbb
dec
pop
and
adc
out
adcl
mov
arpl
rorb
xchg
pop
inc
daa
cli
push
lret
cltd
mov
dec
daa
cmp
test
pop
mov
rorb
add
mov
fcmove
jne
fisubl
cmc
jo
testl
xchg
lock
addr16
fsts
lahf
cmp
xchg
inc
negl
popf
xchg
add
jb
ret
call
icebp
inc
push
sahf
push
jmp
bound
fisubrs
subb
shl
xchg
or
adc
rorl
ret
jge
std
or
les
mov
lret
ret
out
lock
aaa
jl
jnp
push
mov
test
rorb
pushf
dec
dec
mov
dec
adc
out
repnz
movsb
int
sub
dec
das
cmp
fsubl
jns
lcall
ror
or
inc
fsubrs
jmp
js
xchg
daa
adc
in
push
mov
adc
subl
fsubr
pop
mov
pop
sub
mov
dec
and
sarl
mov
pop
int
mov
nop
cs
mov
xchg
scas
lahf
pop
adc
add
sbb
imul
into
in
pop
push
mov
mov
pop
push
dec
jp
js
cmc
xor
push
cli
sub
push
dec
push
icebp
pushf
aam
pop
and
ja
rorb
pop
cmp
mov
out
movnti
dec
shlb
mov
outsb
or
cmp
out
sub
das
aad
scas
test
mov
mov
loop
sbb
pop
cmpsl
insb
adc
scas
mov
mov
pop
mov
jecxz
imul
pop
imull
cmc
aam
call
cmp
cmp
fimull
ss
adc
aas
add
jmp
shlb
out
xor
ja
mov
fstpl
push
test
pop
jp
in
imul
or
clc
mov
inc
inc
xchg
in
ret
push
jbe
movsb
jmp
mov
outsb
xor
xor
sub
hlt
push
sub
into
or
jg
or
cmp
cmp
add
inc
fwait
mov
cmp
mov
push
jo
in
mov
pop
imul
loopne
out
pushf
mov
pop
jo
mulb
cs
test
aam
cs
jae
lret
adc
std
mov
add
lods
addr16
cltd
push
pop
adcb
and
jne
ja
dec
inc
dec
std
cmp
and
push
cwtl
dec
mov
cld
mov
and
mov
push
mov
aam
ret
mov
push
cmp
in
ret
push
xchg
mov
ficomps
notb
jae
fsubr
jo
cld
dec
test
fsubrs
movsb
mov
out
sub
in
push
sub
jge
in
jno
cltd
repnz
dec
and
sbb
lret
shrl
sub
xchg
xchg
fldl
js
xchg
xchg
cld
in
mov
cmp
ret
xor
outsb
sti
stos
mov
test
mov
cld
ficompl
jg
inc
mov
xchg
pop
fcmovnu
clc
xchg
push
lea
cmp
sub
push
xchg
loope
pusha
mov
pop
cli
jecxz
ret
mov
push
add
jle
push
pop
add
mov
decl
mov
fwait
popa
sub
shlb
push
xchg
shll
pop
mov
cs
mov
jecxz
std
adc
mov
push
jle
stos
dec
dec
inc
lock
daa
or
fucomi
subb
negl
add
mov
adcl
les
jbe
aad
push
lcall
or
dec
or
push
andl
lods
mov
inc
popf
lock
xchg
mov
adc
push
sarl
movsb
loop
lret
mov
mov
outsb
insl
adc
inc
pushl
std
call
mov
movsl
jne
arpl
xchg
out
imul
mov
push
and
lds
sbb
ffree
notl
sub
mov
mov
lea
push
cmc
xor
outsb
pop
mov
ret
sub
xchg
gs
dec
mov
xor
lods
push
nop
adc
dec
mov
push
dec
or
fcoms
jnp
js
dec
cmp
in
jl
ret
and
mov
mov
addr16
imull
iret
pop
sub
push
and
pop
fsubrl
call
and
pop
cmp
aaa
push
push
sub
rol
push
sbb
stos
or
imul
in
test
ja
mov
pop
xor
mov
sbb
mov
leave
mov
xchg
lcall
pushf
in
fldt
ret
repnz
lods
lock
lahf
js
int3
lcall
pop
icebp
repnz
ja
sbb
fnstsw
fimuls
mov
pop
jbe
negl
pop
and
cltd
pop
aad
xchg
mov
sbb
sahf
xor
sahf
out
jmp
sarl
cltd
sub
dec
inc
xor
xchg
sbb
pop
mov
in
dec
clc
sbb
or
mov
xor
aaa
adc
cwtl
add
push
inc
in
sub
or
or
jp
lods
push
cmp
sub
mov
jo
cmp
cmp
stos
inc
xor
lahf
sub
and
enter
stos
adc
mov
push
ror
add
xchg
subl
clc
scas
outsl
js,pn
cmpsb
adc
inc
lret
push
dec
jbe
fmul
sbb
call
enter
dec
dec
pop
add
test
push
cmp
push
mov
ret
mov
ss
cmp
dec
sbb
je
dec
mov
mov
addr16
imul
mov
daa
sub
dec
or
nop
pop
stos
add
push
xchg
das
inc
lahf
movsb
xor
shrl
xchg
insb
setae
mov
sub
push
repnz
out
ja
cld
xchg
pop
mov
xchg
imul
push
int3
lahf
mov
mov
sbb
adc
bound
jbe
push
movsb
or
in
jb
inc
mov
data16
mov
adcl
stc
test
mov
pushf
dec
mov
iret
mov
jo
nop
cwtl
sbb
leave
in
sbb
mov
push
inc
sbb
in
test
ss
sbb
jg
loopne
cs
data16
cltd
mov
xchg
out
jbe
sub
dec
pop
sub
cs
scas
jno
rorb
xchg
xlat
cmp
cmc
push
orl
or
jb
lods
fwait
jbe
push
push
nop
add
aaa
iret
dec
add
xor
xor
push
push
sbb
stos
lret
icebp
cltd
mov
mov
test
push
push
data16
movsb
sar
repnz
mov
fsubl
sbb
xchg
lret
xor
push
add
dec
movzbl
loopne
jb
stos
mov
jmp
lods
push
and
shlb
jge
sti
sbb
jge
adc
pop
xor
jmp
std
loopne
flds
in
pop
jle
cmpl
sbb
loope
dec
fistl
adcl
push
inc
add
lds
cmp
movsb
out
add
fwait
in
inc
leave
loopne
inc
jp
scas
filds
jnp
inc
clc
icebp
or
andb
push
pusha
and
jmp
lret
sahf
jns
push
mov
or
lea
bound
jbe
cli
inc
andl
daa
lods
dec
addr16
sbb
jp
mov
jae
adc
jmp
jo
jns
sbbl
mov
inc
jg
out
dec
push
add
pop
imul
into
pop
pop
xchg
sbb
lock
jl
shrl
das
cmpsb
xchg
pop
jno
mov
jo
mov
in
mov
aam
add
adc
cmpsb
bnd
icebp
cmp
xor
mov
pop
push
dec
cmc
outsb
mov
mov
jl
fcoms
or
xor
or
and
or
mov
pop
jne
add
push
jbe
or
pop
out
out
in
scas
imull
push
arpl
push
mov
lock
rcll
data16
sub
adc
jmp
push
mov
mul
mov
push
lds
out
cmpsb
rcl
jle
jge
and
jb
fdivrs
repz
pop
sbb
sub
adc
push
jae
gs
add
or
inc
imul
daa
lods
mov
into
mov
and
loop
inc
or
cs
mov
and
aam
mov
add
in
and
fbstp
lods
and
add
in
xlat
push
fwait
adc
jp
inc
in
jb
jmp
xchg
mov
xor
push
in
subb
and
stos
xchg
xchg
push
adc
insl
out
lods
hlt
shll
lret
mov
or
push
mov
inc
jno
aas
insb
mov
pop
jecxz
push
jle
jecxz
sarb
mov
xor
and
mov
push
and
xchg
sub
or
or
pop
icebp
jmp
xor
movsl
push
mov
fldt
mov
xor
or
mov
jp
test
sarb
or
cltd
aad
pop
pop
lods
jge
das
lods
loope
pop
xchg
std
arpl
sbb
test
xchg
mov
xchg
mov
adc
mov
cld
bound
shrl
jecxz
mov
fidivrs
aam
inc
clc
adc
repz
cmp
test
popf
lret
dec
pop
stos
sbb
int3
sbb
call
and
rep
and
ret
fisubl
sbb
bnd
popf
ficompl
daa
inc
decl
push
jp
movsl
mov
jb
jbe
loopne
fsubs
lahf
fwait
or
pminub
scas
push
outsl
add
lods
addb
nop
push
daa
and
decl
jnp
push
popl
mov
sbb
push
mov
daa
adc
inc
cmc
mov
xor
aam
fnstenv
inc
cmpsl
adc
jo
jp
mov
xor
mov
insb
popa
cmp
mov
push
pop
jns
cmp
add
mov
pushl
ljmp
and
mov
sub
aaa
daa
in
mov
add
insb
outsl
jmp
pop
sbb
cmp
fmul
fldl
mov
xor
dec
aas
or
ljmp
jnp
rclb
lds
or
loope
xor
xchg
jg
xor
jo
lret
lods
xor
lret
out
or
and
ss
cmpb
jecxz
ret
ret
aaa
push
lret
jb
inc
inc
and
adc
jbe
dec
imul
push
inc
xchg
sbb
lea
xor
data16
hlt
fdiv
mov
fs
fists
pop
mov
pop
mov
outsb
aaa
rcrb
pop
push
loop
shlb
movsb
fcmovne
cmp
mov
xchg
repnz
clc
adc
sub
mov
popa
idivl
or
aas
pop
add
inc
or
pop
lods
mov
push
aas
out
imul
andl
cmpl
pop
pop
dec
test
pop
das
leave
jmp
fisubrs
push
mov
lret
imul
lock
add
cmpsl
xchg
cmpsl
loop
jae
pop
push
mov
sti
ja
jmp
dec
andl
jb
sbb
idivl
fwait
in
repz
push
in
jns
or
lea
add
pop
sti
push
push
repz
sub
xor
scas
loopne
lahf
pop
sub
enter
outsb
inc
sarl
inc
cmp
in
xchg
push
ljmp
int3
push
mov
add
sbb
ret
xor
dec
jp
jno
in
test
in
xchg
fistpl
jecxz
push
cltd
sti
fcmovnu
rclb
dec
imul
adc
loop
add
push
inc
into
sbb
cmp
ret
mov
lret
subb
or
inc
jae
rclb
xchg
loope
ffreep
cli
push
push
pusha
and
enter
mov
lock
mov
xchg
dec
scas
outsl
xor
add
xchg
push
adc
push
xchg
pop
push
shrl
lret
push
pop
and
mov
shll
lods
mov
lds
fnstenv
mov
loope
bound
pop
std
jl
or
lea
push
lret
imul
cmp
jge
fnstsw
outsl
cmp
mov
xchg
pop
lahf
xlat
popa
loop
fs
or
add
sbb
shlb
push
cmpb
lock
out
das
push
in
adc
outsl
jp
push
pop
lods
dec
stc
pop
test
push
adc
aad
mov
pushf
notl
jl
imul
or
and
out
adc
lret
inc
jo
xchg
adc
jge
cmp
mov
add
mov
int
je
mov
jp,pn
lcall
imul
mov
push
rorb
loope
pop
xor
sbb
and
jnp
add
push
mov
incl
inc
jge
lcall
rcr
mov
fildll
pop
inc
sub
jmp
hlt
dec
repz
lcall
mov
ret
or
mov
jb
add
pop
sahf
xchg
dec
adc
sbb
mov
jle
iret
dec
fs
xorb
xchg
ja
adc
lret
outsl
jg
aaa
fwait
mov
data16
out
sub
in
stos
inc
lret
jae
pop
shrb
inc
inc
pop
adc
sbb
insb
sub
mov
dec
dec
mov
int
push
shl
loope
pop
mov
loopne
sbb
adc
ds
sub
push
test
push
movsl
inc
jle
repz
inc
xlat
cmp
jl
fisubl
add
and
jno
into
mov
cmp
inc
adc
iret
addb
bound
jl
je
pop
or
dec
jle
fidivs
mov
xor
inc
loop
push
push
sbb
mov
lret
mov
iret
mov
jae
push
in
popa
push
es
jle
xor
popa
mov
mov
mov
pusha
pop
test
xchg
aas
pop
ss
lock
mov
mov
out
fistpll
sub
xchg
out
push
mov
lods
das
mov
pop
inc
push
sub
mov
push
orl
add
mov
jno
adc
out
or
andb
out
and
ljmp
jg
inc
and
or
xchg
orl
insb
dec
mov
push
in
dec
shlb
cs
sbb
repnz
fnstcw
shl
gs
pusha
ret
push
push
xchg
adc
fnclex
mov
push
adc
lds
rorb
lods
push
movsb
js
cli
sahf
adc
loop
clc
xchg
stc
jns
aaa
lods
cmp
sub
fwait
push
jmp
rorl
pop
inc
pop
ljmp
mov
testl
cwtl
shrl
daa
iret
outsb
loopne
jg
cmp
push
sbb
sbb
adc
sbb
inc
xchg
adc
aas
sahf
je
jecxz
mov
cmp
xchg
jo
dec
out
dec
and
jge
mov
push
pop
addr16
cmpsl
jp
mov
sbb
std
mov
nop
pusha
fsincos
scas
inc
mov
sahf
fwait
mov
test
lock
and
daa
inc
mov
sahf
xchg
shll
jl
ja
dec
movsb
jno
mov
xor
aaa
mov
bound
les
jae
push
jno
push
mov
loop
jl
leave
iret
pop
jg
ret
mov
rcrb
push
mov
push
cmp
nop
fbld
push
subb
cmp
call
pop
iret
loopne
clc
or
pop
gs
xchg
cli
adc
jge
shll
lock
mov
rorb
add
ret
lahf
push
xchg
ret
xor
jle
cmp
mov
xor
jmp
fbld
mov
insl
cmp
cli
pop
in
dec
shlb
mov
mov
fwait
inc
and
stos
adc
jl
lods
mov
add
into
call
cs
cwtl
or
nop
mov
cmc
rol
arpl
xor
imul
insl
sub
or
xchg
int3
sbb
lods
ljmp
cmpsl
or
pop
inc
aas
fisttps
lock
imul
cmp
out
push
pushf
rorl
test
shl
int3
stos
push
int
dec
lock
mov
push
and
int
insl
sbb
and
clc
fs
scas
fistl
sbb
push
aad
jl
imul
mov
test
ret
out
fisttps
leave
andl
repnz
lret
gs
push
xor
dec
daa
sub
rclb
insl
mov
movsb
mov
add
fnstsw
sub
cmp
dec
bound
arpl
stos
push
test
and
outsl
movsb
and
test
pop
out
test
xor
sub
and
fsubrl
sahf
fimuls
or
sub
sub
xor
sahf
mov
cmp
test
pop
fwait
imul
pop
xor
push
cmp
fisttps
les
sub
jno
pop
and
push
sbb
mov
je
xchg
lds
xchg
dec
jmp
mov
xorl
push
push
jl
mov
pop
fildll
scas
out
push
jl
cmp
xor
mov
lcall
inc
daa
or
fistpl
jl
push
or
xchg
divl
adc
mov
xchg
or
shll
mov
mov
sbb
arpl
les
jnp
mov
mov
sub
jle
hlt
fimull
and
push
repz
xlat
fwait
push
and
xlat
sub
out
test
cmpl
lret
sub
rolb
xchg
icebp
adc
into
out
or
mov
add
filds
and
pop
push
mov
adc
xchg
mov
aas
xor
xor
mov
fbld
lds
jge
loope
in
stos
add
in
sbb
sbb
cmp
adc
cmp
shll
mov
clc
bound
jbe
mov
mov
aam
scas
jmp
mov
xchg
mov
cltd
adc
inc
push
jecxz
mov
jbe
in
ficoml
jmp
push
daa
mov
lcall
setle
or
push
sub
insl
outsb
fistpll
jp
in
xlat
mov
pop
push
in
mov
mov
out
repnz
xchg
pop
into
lock
addr16
insb
push
int3
les
mov
hlt
outsb
cmpsb
clc
pop
lret
xor
cmp
call
jmp
movsb
cmpsl
and
sarl
in
and
pusha
arpl
cmp
jl
push
mov
pop
dec
pfrsqit1
aaa
cltd
movsb
adc
loop
add
popf
adc
push
rcrb
outsb
fnstcw
fiadds
in
cmp
sbb
xchg
cmpsb
or
mov
add
sarl
ret
sarb
inc
sbb
dec
lods
pushf
jbe
icebp
push
pop
bound
or
in
mov
xchg
fadds
xchg
in
dec
test
push
lods
in
inc
sbb
mov
inc
adc
clc
movsb
ss
sti
xchg
addl
pop
fmul
addr16
cmc
inc
fucomip
fisubrl
clc
dec
adc
popf
aaa
daa
adc
or
push
sbb
lds
pop
loop
aad
lods
sbb
dec
les
sarb
das
test
fcoml
sub
xchg
push
and
dec
popa
inc
out
fsubrl
push
push
mov
jmp
push
pop
xor
popa
inc
push
inc
dec
sbb
insl
cs
mov
mov
or
xchg
cld
inc
sbb
sbb
es
lcall
dec
int3
xchg
add
pop
stos
test
sub
into
cmp
sub
lods
xchg
cwtl
mov
ds
xchg
test
in
fiadds
jg
jge
sbb
jl
fisttpll
sub
mov
pop
xor
enter
push
fists
push
mov
jbe
sub
cwtl
adc
fiadds
dec
xor
mov
outsl
clc
cmp
cli
inc
mov
add
shlb
call
popf
mov
add
popf
cld
lods
adc
pop
sub
sbb
xor
jmp
lods
dec
dec
mov
sbb
lret
pop
or
mov
ss
adcl
cwtl
jne
call
fldl
inc
sbb
cmpb
cltd
pop
cmp
dec
pop
sbb
frstor
lock
scas
jge
and
out
daa
push
sub
mov
lods
mov
cmp
sub
sahf
shll
cli
xchg
addr16
push
mov
mov
jnp
sahf
jmp
pop
jge
push
adc
inc
mov
aas
test
ret
sbb
pop
lods
sub
add
aaa
lahf
xor
inc
lcall
mov
pop
loop
jp
into
aaa
stos
popf
dec
dec
enter
scas
inc
cmc
out
mov
mov
mov
roll
test
fldt
sub
out
mov
sbb
push
mov
inc
mov
pop
repnz
xchg
mov
sbb
outsb
pop
xchg
xor
int
loopne
cmp
cmc
lret
inc
pushf
and
mov
cwtl
fwait
push
movsb
lahf
and
sbb
jns
test
xchg
jp
mov
ljmp
adc
lret
cmpsl
cmp
push
pop
cmp
call
add
xchg
mov
or
inc
mov
ds
mov
mov
into
fwait
rcll
out
ret
int3
lahf
jb
inc
loope
jae
mov
pop
out
xor
js
lds
mov
mov
lock
mov
icebp
or
mov
out
mov
xor
rcl
scas
repnz
les
in
dec
inc
out
int
adc
test
imul
pop
aas
sbb
xchg
inc
sahf
ds
inc
roll
inc
and
les
call
jle
outsb
fstl
in
aad
sub
stos
lods
xchg
dec
fdivrs
add
ljmp
test
sbb
mov
mov
test
cmp
sti
out
jne
adc
loop
fdiv
cld
jb
pop
and
outsl
testl
cmp
fnstenv
popw
dec
jg
inc
inc
cltd
fcomp
lret
cmp
sub
je
add
jge
int
mov
mov
pop
mov
mov
adc
mov
paddq
push
pop
sbb
inc
in
sbb
ja
das
push
insl
jbe
lcall
jmp
mov
adc
lcall
iret
arpl
leave
imul
adc
aas
mov
jecxz
push
adc
rcll
rcrl
es
jbe
ljmp
filds
das
jl
andb
pop
cmpsb
in
stos
std
add
outsl
sub
pop
cs
repnz
sub
sbb
popa
icebp
sbbl
xchg
fadds
repz
or
in
xchg
cmpsb
mov
pop
or
shl
and
push
shlb
es
mov
daa
sbb
sub
push
xor
sub
mov
nop
adc
or
and
pop
faddl
inc
jo
clc
idiv
cltd
lret
xor
arpl
push
js
arpl
orl
sar
cmpsl
insl
lods
mov
adc
shrl
xchg
sub
or
repnz
arpl
sahf
cmc
xor
cmpb
test
jmp
inc
insl
sti
add
adc
scas
mov
xchg
bnd
pop
inc
adc
ds
sub
xor
ret
mov
outsb
je
xchg
hlt
fimuls
mov
mov
inc
cmp
xchg
in
gs
mov
mov
jnp
in
pop
or
test
bound
pushf
sub
push
push
ret
fcmovnu
jno
xchg
push
inc
shll
cli
xor
cmp
loop
inc
sbb
bound
in
pop
jg
xor
sbb
mov
mov
lahf
dec
das
fnstsw
or
jno
push
fsubs
inc
outsl
and
xor
jl
pop
nop
outsl
push
pop
out
stos
shrl
and
cmp
sub
inc
rcll
xchg
mov
in
gs
mov
lret
sub
fimull
ret
fidivl
loopne
adc
adc
push
add
test
enter
aam
sbb
lea
push
lods
ds
sub
icebp
fsqrt
mov
cli
inc
cld
roll
stos
mulb
mov
frstor
sub
arpl
inc
xchg
lods
cmp
jno
and
cmc
cmp
push
shrb
pop
outsl
in
push
imul
pop
mov
sub
insl
jmp
js
inc
je
jecxz
sub
pop
pushf
mov
sti
outsl
push
mov
je
and
ljmp
inc
lock
mov
cld
sub
pop
xor
and
jecxz
mov
lcall
icebp
mov
add
inc
sbb
inc
inc
mov
mov
mov
repnz
imulb
jne
or
loop
or
xchg
or
xchg
ljmp
push
mov
nop
ret
dec
xchg
mov
in
xchg
sub
stos
mov
aas
xor
inc
mov
pop
adc
addr16
mov
call
jns
es
outsl
xchg
aam
cwtl
ds
mov
lea
dec
pop
loopne
iret
or
addl
jns
stos
mov
rcll
pop
addr16
rorb
repnz
aas
out
iret
sbb
scas
cmp
and
gs
not
ficomps
xchg
add
jne
gs
movsl
adc
sub
movsb
cmp
add
ja
ficompl
aas
sub
inc
pop
xchg
fsubr
cmp
scas
shll
fnsave
xor
cltd
jnp
into
clc
imulb
xchg
lea
add
pop
pop
pop
push
pop
das
dec
jmp
sbb
jp
jae
jle
dec
and
mov
cmp
pop
jmp
sbb
and
mov
fwait
in
xchg
enter
dec
sub
mov
lahf
inc
ror
ds
test
in
sahf
gs
subb
mov
or
iret
negl
jno
pop
inc
sarb
pop
lret
mov
and
popa
in
pop
or
or
dec
xorl
push
jl
pop
jle
cli
sub
sar
mov
fisubrl
push
jmp
xchg
ljmp
adc
int
inc
sbb
or
test
push
xchg
sub
pop
inc
mov
pop
pop
insw
mov
pop
cmp
dec
add
cmc
push
push
mov
out
or
ljmp
scas
cld
jae
mov
xor
std
inc
mov
mul
sub
jno
dec
insb
lcall
xchg
adc
cmpsl
jne
push
pop
arpl
push
outsb
pushf
and
fildl
xlat
adc
lock
inc
add
push
rcll
sub
int
data16
and
dec
ret
add
mov
in
aad
test
std
popf
imul
cmp
jno
cmp
ss
fsubrs
int
sti
test
and
mov
lods
inc
jp
sub
push
loope
pop
fildll
test
or
sti
je
xchg
adc
lods
add
imul
jmp
lea
iret
jnp
mov
mov
sub
sub
add
cmp
inc
cld
mov
jns
mov
pop
push
mov
mov
sbb
daa
sbbl
in
filds
push
mov
imul
addr16
or
add
jmp
dec
cmp
in
xchg
pop
adc
mov
jb
xchg
fwait
lahf
sbb
leave
std
push
jns
test
cmp
std
stos
or
incb
xchg
adc
pop
sbb
jo
mov
mov
jo
std
jne
sbb
je
add
mov
or
sub
adc
sahf
fcomip
dec
lcall
xchg
push
mov
jns
sbb
xchg
imul
xchg
dec
icebp
push
notb
jle
sbb
xor
or
mov
ret
and
nop
nop
pop
xchg
stos
pop
add
pop
cmpsb
lret
cmpsl
pop
xor
jp
cwtl
sti
xchg
aam
pop
push
pushf
les
pushf
mov
mov
adc
pushf
pusha
push
inc
mov
in
mov
cmc
enter
sbb
js
or
lock
xchg
aam
xchg
dec
mov
mull
movsl
xchg
push
nop
data16
lahf
lock
icebp
push
mov
pushf
gs
call
and
stc
ret
adc
cs
lahf
xor
mov
lret
dec
jle
jmp
or
aam
or
xor
andb
lcall
fbld
int
out
xchg
jns
lods
cmc
rorl
int3
xor
sahf
gs
push
out
cmp
sbb
jns
xor
outsl
call
shll
fnstenv
xor
adc
sub
pusha
xor
push
xor
paddusb
or
sbb
popa
push
add
cmp
sub
push
adc
out
sbb
pop
pop
insb
scas
ret
ljmp
ljmp
inc
xchg
jmp
lock
pop
popa
movsb
imul
aam
mov
in
sbb
jg
sub
xchg
add
and
ret
xlat
gs
rcr
movsl
pop
scas
mov
add
jecxz
push
scas
not
fcoms
imul
cmp
lock
icebp
sub
push
sub
sbb
lret
lea
int3
out
mov
inc
ds
popa
mov
aam
rorl
dec
test
push
inc
addr16
cli
ds
xor
jnp
dec
or
insb
mov
jb
or
push
push
pushf
dec
inc
mov
mov
stos
scas
fxch
mov
es
pop
bound
adc
cmp
inc
push
xchg
mov
ja
mov
into
adcl
add
iret
and
jae
lods
push
push
xchg
sub
xchg
sub
adc
rorl
lea
xchg
push
test
mov
stc
and
dec
out
dec
sbb
inc
and
add
iret
clc
scas
sub
cltd
subb
outsl
mov
stos
enter
out
stos
sbb
jae
push
and
mov
xor
mov
ljmp
imul
pop
pop
loope
pop
in
in
aad
shl
shll
jecxz,pn
insb
out
jl
shrl
andb
in
andb
add
cmc
push
fisubs
ss
push
ja
sbb
jg
stos
add
pop
jge
lods
cmp
push
add
test
shl
sub
scas
add
push
jecxz
cmp
xchg
xor
inc
sub
das
pop
mov
mov
and
insl
cwtl
and
mov
loope
movsb
ja
in
js
stos
fidivl
int3
iret
or
adc
scas
pusha
mov
pop
xor
xchg
cmp
add
roll
je
out
push
pusha
pop
shrb
xor
mov
adc
or
daa
fs
popa
pop
jne
jecxz
call
sub
and
scas
loop
imul
push
mov
test
push
lea
shl
mov
cmp
cmp
pop
adc
xor
inc
fs
mov
jnp
jg
push
lods
jns
mov
loopne
push
jl
jmp
nop
jp
sub
out
jge
mov
cmc
mov
stos
sbb
xor
call
mov
out
mov
out
sbb
jge
inc
loop
jnp
lock
mov
lods
imull
data16
test
out
sub
scas
dec
lds
mov
sahf
int
shlb
pop
inc
push
mov
imul
push
stos
mov
bound
or
test
fbld
int3
or
imul
xchg
sahf
mov
xor
sbb
stos
and
mov
daa
cmp
lea
sub
mov
in
pop
fidivl
sbb
dec
bound
out
dec
push
dec
movsb
xchg
nop
inc
sbb
inc
mov
mov
push
push
pushl
call
fchs
out
sbb
leave
in
pcmpgtd
dec
push
out
cmc
push
or
sbb
cwtl
das
push
pop
inc
xor
jae
addr16
in
sub
bound
fstp
or
popf
fsubrs
and
shrb
ljmp
mov
mov
or
xor
and
and
add
lcall
sbb
out
mov
outsl
cmp
repnz
or
fsubrl
pop
xchg
xlat
fisubl
jo,pn
inc
jecxz
int
mov
jecxz
fdivl
pop
outsl
mov
pop
jb
ss
insl
lret
loopne
xchg
jns
in
jnp
xor
mov
fsubl
dec
jl
clc
jmp
pop
push
and
out
add
add
call
ret
fldenv
mov
test
enter
xor
pop
and
icebp
insl
loopne
movsl
mov
pop
mov
adc
adc
adc
imul
nop
mov
xor
xchg
cmc
lret
inc
scas
or
arpl
outsl
xor
sbb
cmpsl
std
jle
pop
aaa
icebp
jecxz
xor
fisttpl
loop
lahf
lret
imul
jno
add
pop
js
xchg
int
dec
loop
pop
push
push
popf
push
push
scas
pop
xor
push
aaa
ret
xchg
repz
and
fwait
sbb
nop
xchg
or
out
mov
pop
push
jne
lcall
add
push
inc
inc
add
js
xor
shr
lahf
loope
shlb
pop
or
mov
scas
ror
in
mulb
xchg
dec
rep
dec
sbb
popf
inc
cmpsb
loop
lock
arpl
outsb
add
push
push
pop
push
das
roll
cmp
push
push
stos
push
ret
push
lret
sub
adc
les
mov
fmull
ljmp
fmull
nop
lea
ja
jmp
int3
sarb
inc
pop
nop
jae
into
cs
pushf
mov
fs
stos
push
xchg
add
inc
xchg
mov
mov
clc
andl
and
inc
jne
notb
push
ud1
xchg
outsb
jno
outsb
daa
pop
dec
add
mov
push
cs
es
sbb
or
pop
ds
pop
fwait
data16
cmpl
and
sub
xor
insb
fcomp
fs
mov
fwait
idivl
sbb
js
imul
pop
enter
push
fld
cmp
xchg
out
and
movsb
inc
xor
or
jae
cli
aaa
add
push
push
mov
stos
adc
jl
dec
ret
mov
xchg
xchg
jns
test
movsb
sub
iret
mov
push
inc
out
roll
jp
js
lret
mov
or
jle
test
nopl
mov
push
mov
add
sbb
imul
cmp
xor
gs
mov
adc
gs
inc
ficompl
xchg
pusha
into
in
scas
jmp
mov
pushf
cmp
cmp
mulb
stos
mov
je
fstps
jno
popf
pop
add
leave
cli
mov
push
insb
xchg
sbbb
iret
test
push
rcr
mov
mov
subb
into
mov
ljmp
dec
pop
inc
mov
dec
in
mov
mov
jge
int3
cltd
pop
mov
in
adc
ret
and
cmp
mov
iret
jmp
sti
cmp
inc
dec
push
ja
pop
xchg
pop
jle
push
pmullw
andb
in
inc
push
or
ss
xchg
or
fcmovu
dec
jle
add
cmp
xor
in
lret
cmpsb
push
aaa
mov
xchg
or
clc
cmpsb
outsl
xchg
imul
imul
or
dec
xchg
jne
push
lcall
jns
xor
mov
enter
shlb
and
scas
lahf
sub
xchg
or
cld
mov
lea
lret
inc
adc
lret
aas
fsubrp
jmp
cmp
pop
out
pop
in
xchg
fcmovb
mov
sbb
xor
xchg
fmul
jbe
cmp
add
pop
std
push
loopne
and
mov
daa
pop
data16
inc
pop
popf
sub
push
xor
jge
test
addl
pop
pop
mov
or
sti
mov
mov
add
xchg
hlt
mov
cmpsb
or
dec
sub
lock
or
cmp
and
cmpsl
jne
cmp
imul
or
xor
push
aam
mov
in
sub
outsl
in
dec
push
addr16
mov
movsl
cmp
push
and
test
loopne
xchg
cmp
in
fsub
sub
cmpsl
mov
rolb
pop
push
xchg
data16
xorl
shrl
shll
pop
pop
jg
sub
push
xchg
test
mov
ja
jo
sbb
mov
outsb
jo
adc
push
lds
rolb
adc
lods
int3
enter
shll
loope
mov
push
mov
mov
ret
xor
jns
gs
adc
imul
push
test
mov
sbb
fmull
test
sbb
sub
cli
bnd
addr16
test
dec
push
fs
inc
jge
dec
xchg
push
rcr
fldcw
cmpsb
pop
inc
sahf
inc
aaa
dec
outsl
sub
push
jp
ficomps
jo
dec
add
xchg
mov
cmp
fisubrl
mov
stos
lss
pop
pop
jge
cltd
cmp
cmpb
mov
pusha
or
rolb
xlat
mov
push
xor
dec
adc
sub
xchg
and
push
mov
jbe
mov
push
or
insl
out
push
xorb
mov
push
cmpsl
inc
and
out
jmp
mov
pop
mov
sub
adcl
lret
sub
loope
lea
adc
out
outsl
arpl
or
fmull
jne
xor
jl
rcr
push
mov
je
jle
popa
and
sub
int3
mov
mov
inc
jbe
or
pop
add
stos
jno
push
pop
pushf
xchg
sub
mov
mov
dec
mov
lcall
out
insl
jle
push
stos
and
cmc
xlat
bnd
pop
or
jg
add
pop
iret
jmp
jmp
leave
dec
mov
inc
fsubr
push
push
mov
sbb
dec
les
pminub
add
jno
aam
imul
into
aas
mov
insl
andl
jmp
sub
orl
adc
pop
repz
or
in
mov
mov
sahf
out
xchg
pop
jbe
or
clc
inc
sub
fld
out
mov
or
pop
movsb
frstor
and
addr16
pop
sub
loop
loop
dec
pop
rcr
mov
sub
lds
sbb
xor
or
mov
js
push
sarl
pusha
adc
push
popf
test
add
fs
mov
mov
sbb
popf
and
or
adc
pop
push
fdivrl
or
cmp
aaa
lret
popf
sub
fs
bound
or
stos
mov
movsl
mov
dec
out
cmp
xchg
fwait
into
and
fdivl
das
cmp
test
nopl
outsb
xlat
ljmp
lods
sbb
leave
out
dec
and
push
pop
jle
bound
and
daa
jmp
roll
dec
jp
outsl
add
gs
dec
cld
in
sbb
jl
sbb
and
outsb
inc
push
lea
and
jg
lods
mov
ss
sbb
jnp
sbb
xor
lret
sbb
das
sub
cld
je
movsl
out
dec
sub
xchg
dec
subl
push
adc
mov
inc
ficompl
in
clc
repz
iret
sahf
fwait
mov
jb
push
sbb
sbb
pushf
icebp
xor
movsl
andl
jae
lods
push
sbb
test
in
lea
inc
aas
je
jecxz
pop
cld
dec
jmp
sbb
push
xchg
and
out
andl
jae
ljmp
inc
addb
scas
mov
repz
push
shlb
lret
or
adc
in
pop
mov
js
iret
ds
decl
push
jmp
dec
push
xchg
or
flds
insl
sub
cli
aad
pandn
inc
cmp
sti
and
aas
dec
mov
and
movsb
xchg
iret
sub
dec
cmp
adc
lahf
add
insl
adc
sub
xchg
push
sbb
inc
fwait
sbb
fsubl
and
iret
mov
sti
hlt
bound
pop
xchg
leave
stc
cli
adc
out
jno
or
mov
cmpsb
inc
jnp
aam
fistps
call
leave
jne
mov
inc
ss
jo
fbld
add
mov
push
in
daa
fwait
stos
into
mov
jecxz
add
cwtl
aad
push
arpl
xlat
and
dec
sbb
mov
lret
movsb
popa
jge
or
pop
popf
mov
cmp
adc
xor
pop
pop
mov
xor
mov
sbb
pop
lds
lret
sub
out
pop
pop
scas
inc
inc
xlat
pop
dec
mov
cmp
loope
and
inc
xor
mov
pop
ljmp
inc
jp
fcomi
dec
mov
mov
js
test
jne
mov
xchg
jmp
popa
stc
fxch
insb
lahf
sub
lahf
sbb
mov
jmp
adc
push
ret
xor
lcall
repz
cmp
xchg
das
and
in
fsubr
jg
sarl
pusha
xor
push
pop
mov
into
leave
xor
jecxz
push
add
xchg
lock
cwtl
jae
push
mov
cmc
add
adc
daa
jle
jne
aas
pusha
dec
jl
lret
fstl
test
mov
sub
leave
lret
inc
cltd
es
outsb
testb
hlt
pushf
sub
push
sub
filds
stc
aaa
mov
jnp
mov
push
jle
xchg
movsb
mov
lods
push
xchg
mov
mov
and
jecxz
pop
cmp
xor
pop
adc
xlat
in
int3
bndldx
pop
xchg
cmpsb
or
sbb
outsb
inc
jl
outsl
pushf
fstps
xor
loopne
out
dec
inc
dec
add
add
jmp
xchg
mov
leave
fadd
cmp
test
mov
out
test
mov
pop
ret
mov
in
xchg
mov
cmpsl
iret
addr16
outsb
aam
test
mov
mov
mov
push
int3
jb
iret
xor
lret
outsb
addb
sub
xchg
push
out
jg
icebp
insb
sbb
xchg
sahf
mov
sti
sbb
mov
popf
mov
inc
cld
xchg
or
cmp
stos
outsb
xor
cmp
sub
lock
xchg
jnp
int
out
jne
dec
stos
xchg
movsl
neg
cmpsb
mov
ds
popf
push
fstpl
xlat
cmp
scas
add
and
or
outsl
test
or
loopne
inc
mov
ret
andb
pop
xor
add
or
orl
out
mov
jmp
aam
pop
mov
inc
cmp
and
add
sub
ss
das
in
adc
scas
inc
push
cmp
lock
mov
pop
mov
pop
and
sahf
jbe
push
or
mov
jne
mov
or
out
mov
jmp
mov
fs
repz
pop
add
test
mov
jns
push
xchg
or
jp
cmpsb
jbe
pop
mov
adcb
bound
leave
xchg
cmpsl
lds
push
movsb
or
mov
in
rol
lcall
sub
testl
sbb
les
insl
mov
sbb
inc
roll
xchg
dec
mov
push
cmpsb
push
xchg
add
arpl
xor
adc
sub
jle
sar
mov
and
or
imul
iret
out
mov
or
cmp
inc
repnz
jmp
adc
aad
dec
sbb
inc
cmp
pop
fdiv
push
sub
gs
adc
je
mov
push
sbb
js,pt
lods
negb
and
mov
push
cmp
dec
icebp
jo
cmp
push
fs
mov
jb
or
iret
fs
or
idivl
jle
test
and
inc
lret
add
adc
dec
inc
xchg
jo
mov
adc
mov
and
jmp
and
push
mov
int
cltd
scas
popf
jae
mov
pop
push
pop
sub
mov
cmp
mov
cld
push
mov
aas
pop
popa
add
and
enter
insl
aaa
jns
and
mov
sub
rcrb
enter
push
jno
pavgb
pop
in
pop
or
mov
faddp
inc
push
enter
cwtl
out
stos
mov
sar
arpl
fnsave
sahf
or
test
imul
clc
lea
adc
scas
mov
dec
mov
xchg
mov
xor
mov
in
loope
jg
fwait
insb
cld
mov
xchg
test
add
jne
ror
shlb
add
mov
shll
push
std
lcall
push
adc
cs
add
arpl
push
or
fists
inc
jne
inc
popa
roll
pop
idiv
into
dec
pop
lods
mov
add
pop
punpcklbw
jge
push
in
hlt
aam
ds
push
jge
jl
in
scas
or
jae
xchg
xor
or
and
push
loop
insl
and
rcrb
rcrb
insb
int3
mov
jno
and
icebp
adc
movsl
ja
daa
push
ficomps
pop
popf
or
aad
outsb
mov
sar
into
test
pop
test
sub
repnz
stos
adc
cwtl
sub
jb
pop
cmp
mov
in
lods
jnp
jne
sub
jns
xor
jnp
cld
shl
ret
push
scas
loope
out
sbb
jne
sub
jp
push
xchg
fldt
sbb
mov
lcall
sbb
lahf
jae
inc
or
mov
push
sub
xchg
ret
add
sbb
aaa
out
mov
repz
jne
div
aam
mov
shll
cmp
stos
lea
ja
aas
dec
jnp
jp
jl
subl
jmp
mov
adc
cmp
jnp
inc
push
xor
sub
into
xchg
into
and
pop
mov
popl
dec
scas
cmp
cld
mov
push
sub
rcl
and
push
add
cmp
insb
adcb
sub
sbb
lret
push
int3
loope
cli
dec
jnp
dec
add
mov
or
mov
xchg
xorb
jno
push
pop
cmc
mov
inc
jle
and
xchg
stos
jp
fcmovnb
out
mov
jne
scas
dec
ja
dec
repnz
or
and
jmp
ljmp
cmpsb
shl
arpl
outsl
dec
dec
insb
xchg
sbb
cmpsb
pushw
pop
out
fldt
mov
out
or
in
bound
cld
outsb
adc
out
js
aas
cmp
outsb
mov
arpl
adc
sub
mov
lock
pop
leave
push
sub
out
movsl
popf
clc
lahf
xor
sub
bound
cltd
lea
inc
les
cltd
jbe
gs
mov
fldcw
hlt
fmul
mov
xor
mov
push
inc
dec
ljmp
les
jmp
mov
aas
hlt
adc
cld
ffreep
sbb
into
lods
and
mov
movsb
jo
insb
jp
sbb
mov
mov
mov
les
pop
das
ficoml
sbb
jo
movsb
stc
xchg
mov
imul
pop
cmp
xchg
cli
out
stos
hlt
sahf
push
mov
pop
mov
insb
pop
jns
or
mov
adc
movsl
cmp
push
adc
fcoms
ja
pushf
cltd
inc
stos
dec
stos
repz
adc
ja
sarl
std
cld
mov
loop
rcrl
in
scas
adc
pusha
fisubl
int3
cmpsl
xor
pop
aas
add
push
pop
xor
mov
mov
fstps
dec
jge
js
out
mull
fistl
test
cwtl
leave
stos
cmp
bound
das
outsl
clc
out
call
sbb
repnz
adc
sub
adc
mov
das
xchg
lods
xor
sbb
shl
movsb
jecxz
add
jp
mov
adc
orb
jns
push
leave
cmp
jmp
dec
sbb
pusha
nop
addb
shr
push
push
mov
ds
dec
mov
arpl
lcall
mov
movb
pop
test
fnsave
test
lock
lods
mov
add
dec
in
sbb
sbbb
and
dec
pushf
xchg
mov
sbb
dec
shrb
ja
mov
mov
cmp
jle
jns
push
add
aam
shll
pop
sti
sbb
mov
lods
cmc
xchg
add
ss
or
clc
pop
mov
push
xchg
clc
hlt
pop
push
or
pop
lcall
addr16
fsubrs
mov
cmc
das
jno
dec
scas
cmpsb
shlb
push
push
std
dec
push
xor
repnz
push
sahf
lahf
xorb
mov
ret
imul
gs
sub
hlt
je
mov
std
push
jp
cmp
xor
rol
fcom
test
cld
pop
xor
mov
cmp
add
dec
cltd
dec
push
cmp
mov
rcrb
push
adc
and
pop
xor
fimuls
and
sahf
stc
push
je
mov
out
push
pop
sbb
xor
int
test
add
add
rol
pop
pushf
enter
call
mov
pop
push
or
add
arpl
fcomp
aad
adc
into
rcr
clc
mov
icebp
aad
arpl
jg
nop
mov
and
inc
ficomps
dec
test
cli
loope
cli
lahf
mov
xchg
pop
push
xor
dec
fisttps
push
adc
adc
fsubp
mov
mov
mov
push
mulb
adc
jp
jmp
sbb
fdivs
or
pop
pop
cmp
in
dec
sbb
ret
mov
stos
test
popf
xor
roll
daa
add
fld1
cmp
cltd
xchg
jl
jo
mov
xchg
xchg
add
mov
jge
mov
fwait
xor
inc
sbbb
xchg
outsl
inc
jle
sti
in
xlat
cs
mov
mov
mov
inc
and
pop
mov
fimull
clc
jmp
les
fnstsw
lcall
mov
mov
pop
popl
stc
push
int
ret
loopne
insb
cli
gs
movsb
xchg
xor
xor
sub
jge
scas
fs
out
sbb
sbb
pop
pusha
xchg
mov
nop
fs
inc
dec
mov
jbe
es
stos
cmpsl
pop
outsl
jne
mov
cli
push
mov
je
pop
cs
cmc
int
add
xor
test
jnp
adc
scas
push
mov
and
jmp
popa
test
xchg
xor
dec
negl
mov
push
xlat
mov
xlat
cmp
rorb
adc
imul
ljmp
mov
rcrl
sub
or
insb
pop
cmp
jge
mov
mov
dec
pop
and
mov
and
pop
dec
mov
scas
or
sbb
pop
scas
movsb
mov
shll
xchg
or
repz
jbe
xlat
imul
pop
mov
push
lret
cmpsl
dec
test
jecxz
insb
int3
adc
sti
stc
and
cltd
xchg
mov
pop
xchg
sub
sbb
xor
dec
mov
adc
das
mov
mov
sbb
gs
xor
das
add
int
and
cwtl
gs
push
stos
mov
mov
and
jnp
std
ret
cmp
pusha
xchg
xchg
stos
jg
ljmp
pop
popa
sub
inc
push
mov
sti
mov
ja
pop
roll
jbe
xchg
int
test
sbb
inc
mov
in
bound
js
std
arpl
icebp
xor
and
dec
xor
pop
rcrl
neg
sbb
push
sbb
outsl
mov
sub
sbb
lods
add
xchg
int
cmpb
xchg
ret
scas
and
rcrl
js
mov
sub
lea
push
push
cwtl
ret
pusha
mov
jp
imulb
or
xchg
adc
rcr
icebp
sub
jl
popf
push
xchg
jae
xorl
mov
pop
loope
inc
roll
sarl
adc
pop
stc
out
shll
xchg
lods
jb
push
mov
xchg
out
ljmp
cmpsl
xorl
nop
fcompl
lods
out
cmc
adc
icebp
ficoms
xor
je
fs
test
mov
inc
lret
push
jecxz
fwait
dec
dec
xchg
aam
div
sbb
inc
add
subb
jl
sbb
pop
outsb
cmp
mov
dec
ljmp
jno
lods
fcomi
test
xchg
iret
mov
rorb
clc
dec
ds
jle
lahf
xchg
shl
shll
mov
mov
adc
orb
int3
add
movsl
in
mov
sub
xor
xchg
insb
xchg
daa
cld
faddl
mov
clc
and
mov
insb
xchg
addl
cmp
ljmp
jns
xor
imul
sahf
dec
pop
push
push
mov
movsl
decl
imul
mov
cli
mov
jle
mov
jns
cmp
mov
pop
cmp
mov
testb
push
cmp
mov
loopne
jecxz
dec
std
jbe
enter
les
pop
in
adc
test
sbb
into
das
sbb
pop
daa
shlb
add
or
sahf
leave
pop
iret
jl
cli
data16
icebp
popf
sbb
jg
enter
gs
mov
nop
cs
mov
sbb
hlt
dec
ljmp
dec
pop
xchg
mov
mov
cmp
adc
push
inc
inc
cmp
stos
das
push
loopne
imul
xchg
in
cli
mov
xor
sub
mov
daa
aaa
std
jb
jg
ljmp
lahf
cwtl
mov
mov
lds
xorl
mov
dec
das
rol
jge
scas
div
cmp
aaa
jmp
cmc
outsl
push
sti
xlat
int3
push
jmp
in
mov
inc
imul
sub
loop
jne
push
pop
add
scas
imul
test
enter
cld
mov
cmp
dec
sub
lock
mov
repz
out
cmp
cwtl
and
mov
pusha
outsb
mov
jno
in
test
jge
aas
sbb
xchg
loopne
sub
out
inc
decl
xchg
fistpll
and
mov
lret
lahf
push
enter
xchg
mov
xor
inc
mov
cld
loop
jnp
int3
push
or
outsl
push
pushf
jge
pusha
and
rcll
and
roll
pop
dec
sub
sbbl
sub
cmc
test
adc
mov
mov
ljmp
sahf
jmp
cli
adc
xchg
cmp
cmp
arpl
mov
movsb
dec
ss
in
sbb
daa
rcl
lods
imul
sbb
jbe
clc
fwait
add
sub
out
inc
cmp
test
in
dec
hlt
fadds
mov
popa
push
dec
add
int3
xchg
adc
div
imulb
lahf
insl
adc
cmp
addr16
adcb
xchg
cmp
mov
push
mov
addr16
faddl
xchg
inc
stos
xorb
test
imul
jne
leave
test
push
jp
add
push
add
sbb
ljmp
jp
mov
mov
fdivrl
lods
dec
xlat
push
mov
jnp
repnz
xorb
pushf
or
sahf
push
loopne
stc
ss
jl
jne
xor
dec
ljmp
mov
pop
jns
pushf
xchg
pop
jmp
ss
sub
dec
and
pop
xchg
and
mov
stc
xor
and
pop
loop
lcall
cld
cltd
stos
push
push
inc
je
dec
fs
jg
es
push
dec
int
xor
mov
add
add
push
aaa
hlt
xchg
out
rcrl
sbb
pop
cmc
test
add
inc
outsb
xor
jns
sbb
push
mull
or
test
jecxz
mov
adc
test
in
fildll
lea
fdecstp
pop
int
loope
and
pop
lods
aad
add
or
cld
dec
and
cmpl
lret
outsb
dec
jle
or
fisttpl
stc
xor
and
iret
sbb
sbb
xchg
mov
sahf
loope
negl
sbb
pop
xchg
mov
mov
mov
lcall
gs
ret
inc
fsubs
rcll
icebp
ds
test
cwtl
sar
inc
fsubl
addb
add
adc
xchg
ljmp
data16
sbb
push
jo
add
jmp
fidivrs
or
and
repnz
pop
clc
push
mov
cmp
fadds
pop
cmc
push
add
adc
xlat
lret
sub
cs
xor
push
xor
mov
dec
mov
enter
lock
or
pop
imul
insb
ss
outsb
add
stos
and
pop
ret
pop
inc
lahf
fisttps
jne
xlat
sub
xor
cwtl
pop
sbb
xchg
jge
or
lea
clc
push
cld
pop
ljmp
mov
inc
sbbb
xchg
lds
xor
mov
jle
loopne
xchg
outsb
rorb
hlt
call
jecxz
sbb
cmp
pushw
sub
clc
pop
pushf
jecxz
outsl
mov
pop
cmp
jne
test
or
out
loop
xlat
mov
dec
dec
in
lods
pop
push
adc
sub
jmp
pop
pushl
mov
pop
daa
mov
arpl
std
and
or
push
js
push
insl
mov
push
sub
das
mov
les
cld
js
js
mov
ja
or
out
xchg
pop
mov
mov
sub
pop
mov
xor
pop
enter
ficompl
or
xchg
nop
dec
and
pop
hlt
add
jno
sbb
xor
cmp
fidivl
out
das
jbe
mov
jge
in
mov
cs
aas
adc
mov
sbb
sub
clc
repnz
nop
ret
jb
add
mov
popa
test
sarl
loop
call
movsl
cmp
les
mov
add
and
jg
cmp
add
movl
push
mov
or
dec
mov
cwtl
in
or
pop
xor
popa
sti
hlt
sub
sbb
pop
ja
es
add
leave
mov
inc
pop
mov
aaa
sub
outsb
stos
pop
ss
jno
jg
push
dec
pop
ss
out
in
call
mov
add
mov
ljmp
leave
fcomps
cmpsl
clc
fnstenv
xchg
dec
add
scas
jo
mov
jb
call
in
test
and
pusha
push
in
xor
loopne
sahf
inc
lcall
ds
in
cmp
cmpsl
push
push
neg
sahf
lcall
movb
insl
fwait
es
mov
mov
add
xchg
push
int
test
mov
inc
mov
sbb
cs
fisubrl
cmp
js
mov
daa
adc
push
iret
pop
pop
push
mov
cmp
cmp
pop
add
das
mov
cmp
ja
lock
pop
clc
addb
mov
inc
in
sub
jg
pop
aas
roll
dec
mov
push
mov
and
jmp
sub
imul
pop
fwait
jge
jecxz
jge
cmp
popa
or
and
jp
fildl
mov
fldl
icebp
mov
cli
aad
push
dec
leave
aam
jne
mov
or
mov
mov
lds
rcr
ss
aad
incl
jmp
xchg
inc
lea
js
jge
cmp
adc
mov
jecxz
push
xchg
jo
or
xor
dec
int3
jae
adc
lcall
fwait
dec
nop
pop
push
sti
jl
or
fildl
lret
or
movsb
pusha
add
mov
mov
test
rcr
mov
cmp
clc
mov
push
mov
ficoms
push
and
fdivs
aas
push
movsb
pop
xchg
addb
add
mov
jmp
ss
sti
mov
shll
jg
fistl
adcb
std
dec
jge
sbb
sbb
out
insl
cltd
aaa
mov
dec
out
out
mov
sarl
cmp
scas
hlt
inc
cld
ss
std
lcall
ds
fs
add
stos
mov
pop
ja
lds
push
pop
push
in
aam
cwtl
lea
add
rclb
cld
popa
pusha
push
dec
mov
mov
mov
push
lds
mov
cmpsb
adcl
cli
nop
addb
test
sbbl
in
jne
repz
mov
hlt
mov
add
add
fildl
sbb
inc
aad
pop
mov
jge
lcall
sub
jbe
dec
int
stos
jmp
cs
divb
pushf
test
mov
nop
push
xchg
mov
js
jecxz
adc
ret
mov
xchg
leave
lods
cmpl
jns
or
push
cmc
mov
nop
in
sbb
dec
adc
cmpsb
adc
lea
xchg
imul
icebp
add
sbb
nop
cmp
pop
std
inc
outsb
popa
cld
bound
and
inc
jecxz
mov
shrb
mov
push
out
and
decb
inc
jge
push
mov
outsb
jmp
gs
fld
fs
dec
stos
xchg
mov
fs
aas
inc
test
mov
xlat
cltd
dec
jb
mov
and
rol
rcl
nop
mov
lock
stos
subl
repnz
xor
imul
add
rol
test
insb
imul
pop
and
test
cmp
loopne
mov
xor
adc
push
mov
pop
jae
cmp
adc
mov
fisubs
fidivrl
sbb
clc
cwtl
lret
jnp
add
fldenv
dec
push
les
repz
imul
ret
pop
lods
fwait
mov
mov
xchg
mov
mov
mov
sarb
pop
cmp
cmp
clc
cmc
adc
popf
pop
in
sbb
adc
jmp
push
jbe
popf
xlat
sahf
adc
xlat
sub
ret
cmp
repz
cmc
add
cli
xchg
jae
stos
inc
iret
pop
shl
adc
mov
xchg
pusha
dec
scas
cmp
movsb
or
xchg
inc
pop
in
jb
inc
repnz
fbld
cmp
in
test
sbb
stos
push
pusha
fwait
popl
cmc
je
jg
push
out
sub
adc
out
xor
add
mov
dec
sub
nopl
mov
jns
add
mov
test
mov
loopne
mov
inc
daa
push
mov
sarl
inc
insl
lods
add
push
mov
das
xchg
scas
leave
scas
int3
fbstp
dec
push
cmp
cmp
adc
fnstenv
inc
fcmovne
cmpsl
or
lahf
hlt
int
es
scas
loopne
hlt
scas
sbbl
fcompl
hlt
mov
inc
gs
lds
lock
sub
add
fildll
hlt
push
aad
test
push
les
add
sbb
sbb
cmpsb
insl
push
cmp
pop
shll
jmp
lock
push
shrb
repnz
scas
cmpsb
dec
dec
rolb
ds
rolb
mov
push
xchg
dec
pop
out
stos
iret
mov
push
xor
lret
add
das
sbb
outsb
repz
lret
js
cmp
inc
out
pusha
ror
hlt
mov
lods
mov
add
loopne
sbb
js,pt
push
insl
jnp
cli
push
jmp
jge
inc
sbb
loopne
push
sahf
mov
scas
pusha
xor
out
ror
mov
iret
test
adc
cmpsl
pop
ret
ds
nop
fsubrs
add
lahf
xchg
sti
push
insl
insb
mov
bound
ficoms
hlt
fsubl
outsl
js
and
or
popa
mov
sahf
cmp
xchg
and
add
scas
cmp
jno
pop
mov
test
aad
daa
cltd
jo
pop
mov
es
cs
movsl
mov
add
lcall
std
stos
les
scas
mov
icebp
and
ljmp
pop
dec
add
adc
call
sbb
sub
out
push
scas
pushf
sbb
jbe
add
out
xchg
ret
clc
mov
out
aaa
retw
mov
in
xor
xchg
out
jmp
xlat
pop
cmc
hlt
sar
test
xlat
push
pushf
addl
pop
nop
sbb
lods
add
out
jno
cmp
mov
outsb
xor
dec
xor
cmp
test
aam
and
call
test
mov
divl
or
jg
sub
jmp
dec
sbb
pop
jmp
scas
aaa
jecxz
pushw
mov
shl
xor
dec
adc
mov
or
sub
int
adc
adc
mov
sub
or
cwtl
mov
ret
lcall
ja
jbe
pop
push
out
sub
jmp
pop
int
shlb
cltd
imul
push
repz
insb
push
fadd
push
leave
insl
cld
cltd
repnz
pop
xchg
pushf
gs
mov
repnz
scas
test
cmp
jns
fcomip
call
bound
lcall
push
cmpsl
scas
and
rcrl
or
shll
fcoml
lret
adc
mov
cmp
jno
cmp
pop
mov
jno
dec
xor
nop
push
lar
dec
inc
mov
cmp
fsubl
enter
lock
pop
add
pusha
mov
jl
mov
shr
jb
dec
js
jno
fdivr
or
sbb
push
mov
out
add
repnz
xor
mov
cmc
pusha
adc
stc
fidivs
js
dec
seto
add
roll
fs
dec
repz
push
adc
cwtl
pusha
arpl
mov
out
xor
fcomps
call
rorb
xchg
mov
push
cs
js
add
sbb
pop
sbb
pop
mov
inc
jne
mov
leave
mov
decb
fsub
lock
mov
cmp
push
leave
iret
mov
or
mov
push
push
movsl
fwait
mov
inc
adc
int
push
push
icebp
addb
repz
imul
nop
scas
dec
and
fistpll
movsl
into
ljmp
add
icebp
repz
xorb
loop
hlt
out
nop
dec
add
inc
lea
push
popf
movsb
jno
mov
pop
dec
idivl
mov
adc
xor
pop
mov
pop
push
or
dec
jl
pop
call
push
mov
outsl
jae
addr16
cltd
mov
jbe
ret
rcr
popa
fcompl
hlt
sahf
rclb
std
sti
push
gs
addl
add
mov
dec
inc
mov
jecxz
push
sub
inc
mov
sbb
add
ja
push
loope
ljmp
cmp
push
movsl
dec
test
out
fstp
lcall
push
add
cs
jne
mov
pop
test
xchg
jae
iret
ss
mov
xorl
in
mov
leave
mov
pop
inc
or
sub
out
cli
iret
sbb
add
sbb
into
add
rcll
stos
jmp
jg
jne
mov
or
mov
cmpsb
mov
adc
out
and
adc
pop
push
cmp
imul
sub
cli
pushf
mov
out
mov
loope
mov
stc
pop
and
addr16
cmp
mov
in
and
inc
pop
cmp
adc
loop
iret
sbb
cwtl
mov
sbb
dec
push
jo
push
sub
cli
leave
aam
ja
jl
pusha
and
out
imul
cmp
sub
mov
fdivs
ja
mov
or
dec
scas
lds
and
lods
scas
test
mov
mov
push
rclb
mov
in
jle
add
loopne
repz
mov
cld
mov
aam
stos
ss
or
bound
jl,pt
add
nop
int3
mov
out
mov
iret
cmc
mov
push
loopne
lock
sbb
scas
inc
pop
mov
popa
dec
cmpsl
mov
xchg
push
mov
aas
gs
fs
xor
in
mov
lods
rcr
int
cld
dec
ss
test
movsb
insl
sbb
cmp
and
adc
sbb
sbb
cmp
push
xchg
insl
into
jl
mov
sub
int
das
out
je
adc
add
jle
pop
mov
mov
in
jmp
repz
pop
aad
pop
mov
push
arpl
orb
in
cmp
in
movsb
out
jle
sub
lods
mov
mov
push
mov
sub
cmp
les
ret
dec
pop
addr16
cld
rcl
mov
lret
cwtl
cli
lahf
add
pop
lcall
cli
sbb
stc
out
and
mov
cmp
sbb
xor
sbb
xchg
adc
stc
mov
mov
jmp
pusha
sub
mov
dec
outsl
sub
mov
mov
pop
fbld
ljmp
sbb
xchg
mov
jmp
loopne
cmpsl
je
es
xor
jle
push
push
enter
mov
aaa
sbb
mov
push
and
ret
dec
xchg
add
push
sub
and
test
es
push
adc
lcall
lcall
popf
mov
cmp
lds
or
xorb
packsswb
cmpsl
es
addr16
lret
and
jno
inc
stc
push
pop
add
in
xor
aaa
and
cwtl
jb
int
hlt
fadds
xchg
mull
mov
aad
mov
xchg
xor
pop
popf
jg
sub
stos
out
pmaxsw
lock
ja
aam
or
push
jecxz
dec
inc
sub
cmp
jnp
adc
andl
scas
push
jo
mov
stos
mov
pop
out
outsl
scas
adc
push
movsl
dec
sub
adc
and
inc
adc
pop
lods
pushf
xor
cmc
inc
clc
xchg
rclb
push
imul
pop
add
testl
repnz
mov
jl
pop
lret
imul
dec
notb
sbb
dec
xor
out
pushf
push
add
sbb
popf
add
add
jmp
sbb
cltd
iret
xchg
aas
pop
out
cs
mov
push
cmpsl
xor
lea
inc
scas
mulb
sub
sbb
lret
cmpsb
or
jg
or
mov
push
mov
adc
popf
mov
or
scas
mul
cltd
inc
dec
sbb
vmovaps
xor
sti
ja
testb
mov
lea
mov
bndldx
xor
sbb
pop
scas
sbb
mov
cmpsb
sub
daa
push
pop
rorl
pop
rcrl
xchg
ljmp
or
fstps
mov
out
aas
outsl
mov
popa
sub
int3
insb
mov
into
sub
sbb
or
std
out
xor
push
das
xchg
lcall
or
xchg
jno
sub
outsb
cmp
nop
fsubrp
cmp
xchg
mov
fcomi
pop
test
dec
push
cmpl
mov
sbb
push
les
pop
push
nop
lret
push
mov
xchg
or
mov
dec
fwait
cli
pop
sbb
add
adc
inc
or
pop
cmp
int
mov
or
addr16
je
sub
rorl
mov
gs
hlt
jg
mov
test
subb
movsb
mov
mov
mov
adc
fistps
lret
lods
test
out
enter
ret
jbe
nop
in
adc
loope
stc
dec
lods
or
es
ret
and
loope
sbb
aad
mov
push
repz
dec
inc
xchg
and
mov
sbb
push
lahf
negb
xor
push
ss
xchg
inc
loopne
cmpsl
mov
sub
jo
or
xor
movsl
les
or
aaa
push
mov
stos
fisttps
push
shll
cli
loop
shll
call
sub
add
cs
popf
jno
imul
fwait
push
hlt
ror
testl
add
hlt
cld
icebp
ja
fcoms
shll
aam
rolb
lock
imulb
pop
jb
push
lret
or
repnz
xorb
xor
dec
ret
lods
or
fs
pop
cs
daa
mov
ss
sub
std
cmpsl
movsl
mov
inc
push
mov
repz
clc
sbb
outsb
jecxz
subl
inc
test
je
fcomps
mov
pop
in
cmp
ss
in
lock
gs
pop
inc
add
mov
gs
cltd
int
pop
hlt
mov
jnp
pop
scas
sub
xor
mov
jnp
mov
mov
push
xchg
push
sbb
js
jns
fldcw
in
pop
or
aas
pop
xor
lock
movl
stos
decl
push
push
jg
cmovns
xor
jp
xchg
frstor
mov
movsb
push
pusha
jge
sti
fists
xchg
jbe
lret
adc
mov
pusha
pop
lods
rcll
call
sub
repz
dec
ret
fisubs
mov
int3
js
sbb
or
and
movsl
imul
sarl
push
rcrb
mov
ret
jle
mov
pop
cmp
ret
lods
and
movsb
dec
push
lea
cmp
es
dec
iret
jno
fldenv
sub
imul
pop
stos
sub
sbb
ljmp
jmp
clc
aad
mov
mov
scas
into
les
mov
imul
cmp
lds
push
pop
aas
enter
imul
lods
jmp
sbb
daa
sbb
arpl
aad
jmp
popa
push
sub
xor
dec
fcmovnbe
aas
shll
enter
in
aaa
cmp
leave
pop
inc
pop
sbb
mov
dec
pop
jo
in
jo
mov
adc
scas
data16
mov
pop
mov
jnp
jge
sub
jb
dec
sub
adc
cmp
ficompl
cmp
out
adc
inc
pop
repnz
icebp
xchg
mov
sbb
in
lods
psllq
negb
sub
cmp
xor
dec
dec
rcll
scas
xchg
jb,pn
mov
jo
lret
push
movsl
dec
shrb
push
dec
lret
ds
pusha
imul
popa
adc
icebp
out
es
sti
lock
lds
and
and
sub
cwtl
lock
xchg
cli
pop
lds
pushf
outsl
cmp
cld
cmp
mov
pop
loope
sbb
xor
movl
and
cltd
pop
push
and
cltd
aam
loope
dec
in
lahf
adc
xchg
jecxz
add
enter
hlt
mov
loopne
pop
xchg
icebp
cmp
pop
fwait
xor
push
lret
cmc
sarb
fcmovbe
inc
iret
insb
sbb
shl
sbb
dec
and
pop
notb
sbb
or
inc
in
inc
cwtl
pop
sbb
jl
outsl
in
or
jno
lea
test
negl
imul
flds
pop
xchg
je
inc
lock
aaa
push
fwait
sub
aas
imul
xor
cs
push
or
jnp
mov
lea
and
jl
ret
nop
frstor
test
mov
sbb
test
lea
push
mov
and
int
sbb
andl
inc
pop
movsb
ds
sbb
mov
pop
fwait
les
test
dec
xor
pop
std
sbb
nop
in
pop
int
add
nop
ja
jle
push
jno
mov
xor
jns
jnp
cmpsb
adc
fbld
dec
jp
pop
nop
fcoms
fidivrl
mov
mov
outsl
jbe
xor
dec
ljmp
in
mov
add
sahf
fstps
add
or
xlat
dec
xor
test
add
pop
xor
lea
ret
xchg
adcb
xor
fsub
xlat
jne
fs
sub
mov
in
xchg
push
push
mov
xor
sub
xor
in
ffreep
pop
push
jns
adc
loope
cmp
nop
cmpsb
cmp
xor
les
sbb
rol
add
fsubl
mov
outsb
push
aaa
push
pop
add
xchg
stos
outsb
dec
jl
add
std
pop
mov
outsb
xor
mov
add
mov
adc
or
leave
incl
int
incb
pop
loopne
pop
dec
jnp
popf
sub
in
incl
pushf
repnz
fcmovnbe
add
jge
leave
std
testl
ljmp
jmp
mov
mov
cwtl
dec
shrl
ret
cld
mov
aam
and
flds
imull
sbb
mov
dec
mov
pop
add
pop
les
mov
dec
mov
pushf
xchg
sub
push
cmc
adc
fistl
mov
jp
fimull
ds
das
cltd
jnp
jge
or
sub
ret
mov
clc
push
scas
pop
fcomp
ret
add
inc
and
les
pop
and
mov
push
stos
push
movlps
push
pop
adc
icebp
cmp
fisubl
ja
lock
fdivr
cmc
mov
push
mov
or
inc
mov
testb
xchg
and
pop
cmpsl
mov
dec
stos
gs
or
pop
loop
or
subl
in
mov
xlat
lods
out
insl
add
inc
xchg
push
adc
mov
lahf
loopne
inc
repnz
pop
push
mov
test
cmp
sbb
inc
daa
popa
in
xchg
aaa
stos
sub
in
sbbb
aas
aaa
sub
outsb
add
stos
addr16
mov
sarb
ljmp
mov
push
gs
mov
lods
jge
sbb
je
mov
fst
notl
add
push
cmp
xchg
lcall
add
xchg
test
scas
mov
jbe
cmp
xor
push
rcrb
push
xchg
shr
clc
dec
ss
sbb
lods
clc
jb
push
inc
sbb
inc
mov
je
cmp
sub
fwait
int3
ret
lret
mov
sbb
outsb
hlt
jge
out
dec
sub
add
lods
jno
mov
fiaddl
jle
test
int
dec
fcomps
sub
pop
mov
mov
push
pop
xchg
dec
cwtl
imul
push
push
shrb
ja
out
adc
inc
sbb
sub
cmpsl
mov
inc
push
cld
inc
loopne
jnp
jecxz
adc
mov
leave
pusha
inc
pop
int
fs
sub
sbbl
inc
stos
popf
cltd
jnp
push
cmp
stc
pop
inc
add
add
inc
dec
push
cmp
in
lock
fldenv
and
je
call
scas
rcll
jecxz
or
jbe
mov
iret
mull
fldenv
jecxz
rep
stos
sub
xchg
das
and
popf
xor
jmp
xchg
mov
imul
repnz
and
inc
cmp
sbb
jg
inc
xor
fsubr
push
psubb
roll
shll
jns
mov
sub
cmp
xchg
inc
fistpl
call
subb
mov
je
mov
jmp
lods
push
neg
jae
push
xor
lret
and
rclb
mov
jae
sbb
les
sbb
mov
mov
loopne
inc
and
test
call
lahf
xlat
sub
pop
mov
cmp
lea
cmpsb
fisubl
xchg
movsb
mov
addr16
xor
xor
jl
dec
and
repnz
dec
inc
or
push
mov
pop
xchg
xlat
mov
mov
cmp
sub
xor
sub
adc
scas
xlat
mov
add
add
jmp
cmp
adc
jmp
repz
inc
dec
jecxz
enter
xor
add
repz
fs
mov
inc
xchg
inc
lahf
or
xchg
stc
sarb
inc
dec
sahf
jle
nop
xor
popf
push
mov
daa
inc
aam
adc
enter
shlb
stc
cmp
adc
add
mov
das
push
movsl
mov
outsb
adc
or
xchg
xor
mov
xchg
loop
inc
call
std
cmpsl
dec
sub
and
inc
xlat
testb
sbb
cmp
mov
or
shrb
and
mov
pusha
jmp
cmp
push
enter
push
push
les
cmpsl
ds
ret
outsb
bound
pop
popa
push
nop
fistpll
test
xor
pop
cmp
int3
repz
jmp
jae
shlb
xchg
add
hlt
lods
pop
and
sbb
cmpb
xchg
ss
mov
loope
mov
jmp
cmpsl
jmp
xor
pop
shll
jmp
das
sbb
cmp
inc
clc
xchg
call
mov
cmp
mov
pop
inc
xchg
pop
loopne
and
pop
imul
test
fisubs
add
mov
sbb
sub
jge
mov
bound
and
clc
dec
push
fidivrs
pop
push
or
xor
fists
lds
sbbl
cmp
mov
adc
imul
xchg
or
lods
fbstp
mov
clc
inc
jbe
in
mov
mov
ds
or
mov
in
roll
pop
pop
pusha
adc
and
push
cmpsb
and
insl
jmp
push
cmp
mov
push
iret
rolb
dec
inc
ds
push
pop
cmp
leave
aaa
std
pop
shrb
dec
mov
jge
repz
pop
jge
push
out
push
in
hlt
xchg
jae
fstl
int
aad
jp
pop
dec
mov
aas
xchg
icebp
add
pop
mov
int
mov
fs
sbb
pop
in
jg
in
and
dec
inc
push
scas
cmpsb
ljmp
stos
imul
sti
and
inc
adc
mov
push
lods
out
insb
pop
cs
bound
cs
inc
testl
xor
imul
repz
dec
pop
dec
movsl
xor
lea
xorb
lahf
mov
call
fcomp
movsl
rcll
mov
aas
jp
inc
out
mov
in
mov
sub
add
sub
bound
ficoms
clc
jecxz
mov
cmp
xor
mov
sub
pop
arpl
sbb
fimuls
fldt
fwait
aad
jbe
mov
hlt
shrl
jg
mov
push
outsl
enter
cli
xor
clc
dec
xor
push
ljmp
iret
test
movsb
fisttps
and
sbb
dec
pop
pop
sub
lcall
movl
sub
bound
out
push
test
cmc
clc
push
mov
lahf
cmp
sbb
jbe
mov
test
xchg
outsb
pop
jo
jmp
negl
lea
push
push
or
sbb
rcrb
or
jae
or
push
xlat
and
insl
jne
lcall
sarl
std
jge
pop
test
or
dec
inc
pop
subl
rolb
push
je
f2xm1
call
push
cmp
fadd
cmp
test
adc
push
shrb
int3
loope
xor
fwait
imul
jle
mov
xchg
jnp
mov
xchg
xchg
and
mov
popf
adc
jle
sbb
mov
in
mov
push
sub
popf
pop
mov
iret
push
push
xor
xor
fs
cmc
pop
ja
pop
and
mov
test
inc
aad
xchg
cmc
addr16
mov
adc
aam
jp
pusha
xor
cld
fs
mov
mov
pop
and
cmp
test
or
dec
popa
cmp
shr
test
xorl
pop
jns
jmp
cmpsl
pushf
int3
pop
fcomip
fbld
mov
sahf
xor
jmp
icebp
inc
dec
adc
mov
push
xor
push
jg
repnz
push
cld
inc
orl
js
pushl
jmp
push
dec
insl
pushf
ds
add
or
test
jp
in
push
pop
aam
push
mov
push
das
jbe
lds
ret
fs
mov
dec
inc
lds
repnz
xchg
jl
inc
lds
mov
or
pop
dec
sub
rolb
in
pop
movsl
xchg
jle
cmp
test
adc
mov
xchg
fs
dec
mov
dec
cmp
dec
cwtl
stc
xlat
scas
cmp
jmp
data16
lahf
les
pop
push
popa
inc
xchg
nop
mov
jl
shrl
fisttpll
rorl
push
cmp
fiaddl
and
mov
rolb
outsl
jg
add
adc
inc
fdivs
mov
shlb
inc
leave
cs
ret
out
sub
fisubrl
jo
inc
pop
andb
out
mov
inc
or
sti
out
xor
ss
mov
pop
mov
and
sbb
pop
rcr
imul
jae
daa
sbb
fbstp
push
cmp
daa
out
xor
pop
adcb
mov
mov
inc
nop
stos
and
ss
add
inc
cmc
ja
cmpsl
rcr
or
xor
jmp
pop
lods
loop
pop
dec
fistps
ror
lret
push
and
hlt
lahf
and
sub
clc
dec
xchg
pop
jnp
add
mov
pop
dec
push
add
pushf
adc
test
push
test
xchg
inc
inc
sub
test
test
aam
ficoms
call
xlat
rorb
inc
ljmp
daa
xchg
cmc
sub
lds
or
lea
fcoms
or
push
in
push
dec
cld
mov
jbe
insb
pop
add
sbb
dec
test
mov
cmp
test
cwtl
cmpsl
push
push
pusha
cmp
sub
lret
cmp
pop
adc
mov
jne
ss
push
sub
xor
mov
inc
adc
pop
lods
mov
sbbb
inc
or
cmpsl
push
cmp
fiaddl
in
aam
iret
aas
test
sarb
loopne
aam
aaa
mov
icebp
out
xor
aad
in
add
push
dec
int3
fadds
jmp
inc
in
in
scas
out
cwtl
xchg
dec
and
xchg
jae
testl
addr16
fst
and
sahf
cmp
rcrl
xor
hlt
cmp
push
cmp
mov
xchg
in
shrb
test
dec
rolb
mov
sub
jg
xor
adc
pushf
mov
xchg
lds
push
inc
jp
cs
cmp
add
in
fwait
adc
mov
xor
pop
adc
test
lret
push
addr16
testb
lock
insl
aas
fs
inc
inc
xchg
ret
add
mov
fdivrl
or
rorb
mov
outsl
mov
sbb
push
jo
loope
sub
stos
in
jge
mov
xor
popa
sbb
pop
mov
aaa
inc
mov
jns
sub
xlat
inc
mov
inc
cmp
cltd
jbe
jp
adc
imul
cmpsb
mov
dec
repnz
inc
sbb
jae
jb
push
and
enter
mov
sub
adc
cmpb
popa
pop
mov
aas
xor
add
xchg
push
lds
xchg
xchg
test
sbb
scas
mov
lcall
push
sti
mov
sub
jmp
jecxz
jne
and
mov
out
lods
push
push
push
dec
ds
shll
xchg
xchg
mov
push
adc
fcoml
and
pusha
test
pusha
cld
push
push
cld
imul
hlt
fistl
shrb
dec
lcall
ror
jp
add
add
jne
lret
lods
shlb
testl
xor
icebp
repnz
xor
dec
inc
loopne
loope
sub
fisubrl
mov
or
loop
cltd
repnz
aaa
fimull
out
adc
xchg
fwait
sar
pop
mov
int3
inc
decb
mov
add
and
mov
jmp
lods
cmpsb
lods
pusha
divl
xor
sub
pop
mul
or
stos
out
xor
xchg
arpl
sbb
add
aaa
movsb
shld
in
jecxz
nop
je
imul
icebp
lret
xchg
add
mov
rorl
stos
mov
notl
xor
dec
dec
mov
in
test
or
pop
jl
sbb
xor
sub
add
xchg
aas
or
loop
cmp
lods
mov
push
shlb
jne
cmp
int
push
mov
das
xchg
jbe
hlt
mov
xchg
popa
fsubs
cmpsl
cli
push
mov
cmp
or
mov
icebp
popf
sarl
cmp
decb
push
add
mov
fildll
push
idivl
fisubrs
bound
test
jbe
stos
loopne
outsl
push
inc
inc
push
pop
sub
push
pop
push
jo
sbb
lcall
xchg
and
xchg
sti
mov
mov
dec
aad
add
mov
cmp
int
sbb
pop
xchg
popf
roll
call
rorb
jge
cmp
aaa
stc
push
jl
pop
or
aaa
movsb
loopne
push
jae
das
sahf
cmp
push
out
jmp
dec
js
mov
mov
in
data16
mov
pushf
out
jmp
mov
insl
push
cs
xor
mov
aaa
in
call
and
or
sarb
or
negb
mov
je
loope
cmp
jo
mov
push
ja
inc
fstpt
pop
dec
or
call
gs
sbb
bound
jns
fisubs
mov
repz
jmp
sahf
loope
repz
loop
iret
add
fwait
xchg
test
dec
scas
je
scas
sti
mov
pop
pop
lret
lds
cmp
dec
mov
xchg
fistpll
clc
xchg
xchg
lret
adc
out
icebp
in
std
hlt
add
mov
imul
sbb
pop
stc
jnp
aas
and
mov
int
int
pop
cld
inc
fimuls
push
lret
int
mov
cmpsl
movsl
jmp
jge
arpl
push
mov
inc
add
push
dec
movsb
popf
cld
push
xor
idivb
pop
jo
cs
pop
push
mov
lahf
mov
es
cld
push
and
hlt
sub
sbbl
rcrl
pop
sti
jle
sahf
mov
mov
in
sub
add
jg
cmp
fildll
lret
xchg
inc
pop
movsb
dec
push
and
lock
mov
pop
mov
xchg
mov
hlt
and
sti
jmp
sti
aad
movsl
in
push
push
jo
enter
inc
cmpb
js
cmp
mov
sub
mov
sbb
gs
int3
jae
jb
mov
clc
xchg
inc
jne
jno
or
popf
inc
repz
jo
add
idiv
lret
popf
fcomi
jl
pusha
mov
fdiv
lahf
dec
mov
popa
clc
clc
sub
cmc
shr
in
jge
test
or
jo
cmc
jno
mov
and
xchg
lea
mov
loopne
cmc
add
popa
cld
or
jae
aas
mov
aas
push
in
dec
cmc
stc
sbb
stc
mov
push
add
nop
fcoms
push
push
enter
jo
repnz
cmpsl
fsubs
std
andl
sbb
movsb
mov
lods
jnp
mov
mov
cmp
mov
sbb
sbb
push
pop
out
dec
adc
pushf
xor
mov
cmp
mov
mov
dec
push
lret
lea
sub
outsb
dec
mov
in
ja
jb
xchg
je
dec
dec
and
push
mov
inc
dec
cwtl
imul
pop
mov
sar
mov
roll
xor
out
adc
pop
jl
pop
sbb
shlb
sbb
leave
stos
popf
lods
jbe
stc
and
aas
ljmp
je
scas
mov
xchg
cmp
sub
fstl
xchg
inc
fwait
leave
imul
dec
sti
pop
mov
bound
pop
test
adc
push
push
adc
push
push
inc
sub
ljmp
das
or
pop
sbb
stos
fs
or
addr16
or
rorb
sbb
mov
jo
mov
dec
sbb
in
arpl
es
sub
dec
fdivs
and
sub
sti
add
pop
push
je
xchg
in
push
imul
js
cmp
fdivl
pop
lea
ret
int3
mov
sbb
and
mov
je
xchg
cmpsb
jle
sar
das
add
jp
in
dec
out
push
call
xchg
mov
pop
fsubs
imulb
out
mov
mov
hlt
lock
pusha
ss
push
sbb
xlat
pop
lds
xor
fidivs
inc
push
pop
in
data16
cmp
stc
loope
cmc
in
xlat
adcl
and
mov
data16
insl
or
rclb
sub
out
mov
jmp
outsl
dec
jo
bound
dec
pop
test
scas
inc
mov
mov
mov
stc
sub
sti
pop
add
pop
jp
or
xor
icebp
icebp
ss
cwtl
push
mov
mov
inc
js
dec
xchg
xchg
fwait
mov
aam
in
xchg
stos
jae
shrb
pop
dec
xchg
imul
pop
nop
jp
mov
shlb
pop
loope
push
jb
mov
std
cmpb
insl
jo
lods
sub
xor
std
in
mov
push
arpl
jg
cltd
insl
mov
ret
int3
pop
es
mov
int
hlt
add
inc
imul
push
sub
jge
dec
mov
mov
adc
pushf
in
jo
out
bound
push
jns
dec
and
xchg
loopne
scas
fwait
je
add
roll
dec
jns
aas
xor
inc
adc
mov
sub
mov
aaa
int3
mov
mov
lds
jecxz
shrb
pop
ss
aaa
popf
inc
dec
insb
xchg
pop
pop
fwait
and
fdivr
jp
add
leave
popa
rolb
ljmp
lret
or
cmp
adc
hlt
rcr
xchg
cmp
cmp
mov
mov
push
std
push
hlt
or
xchg
inc
or
push
ret
xor
mov
cwtl
xchg
mov
inc
sub
adc
push
mov
lret
mov
inc
adc
mov
cwtl
clc
dec
xchg
or
dec
sbb
sbb
sub
and
nop
test
jge
in
mov
jno
mov
sbb
stc
jne
out
xchg
fcmovu
jmp
and
adc
out
ret
cwtl
data16
xor
fxch
lcall
filds
sub
ja
sbb
in
repnz
jnp
mov
int3
push
mov
xchg
fsub
stos
xor
into
outsl
push
iret
add
mov
sarl
icebp
sbb
out
sbb
fildll
push
and
insl
dec
sbb
fildl
mov
cmpsb
push
adc
mov
js
sbb
out
lods
xchg
in
inc
pop
adc
push
and
mov
push
fcompl
push
dec
push
ja
adc
in
repz
sarb
sahf
jne
dec
loope
out
add
mov
out
mull
movsl
insl
aaa
mov
xchg
dec
in
mov
imul
sub
fnstenv
lret
mov
dec
popa
decl
scas
push
rcrl
or
cmp
jne
sbb
arpl
mov
sbb
out
rolb
cmp
fistps
fcomip
subl
cmp
popa
adc
jge
stos
cli
mov
inc
sub
test
mov
xchg
mov
lret
mov
pusha
lods
sar
testb
mov
inc
jg
decl
aad
mov
repnz
fists
dec
dec
add
mov
fists
jne
dec
shlb
jnp
jmp
mov
adc
push
jnp
jnp
sbb
pextrw
pop
mov
jne
jmp
rolb
or
mov
mov
js
sbb
movsl
mov
pop
inc
and
ljmp
pop
hlt
int3
in
mov
pop
test
sbb
fsubl
jo
pusha
ret
lods
pop
popa
sbb
inc
dec
mov
mov
out
dec
pusha
iret
clc
test
test
push
sub
idiv
mov
push
rolb
scas
insl
cmp
insb
adc
and
mov
push
mov
mov
push
jmp
scas
daa
in
sbb
aas
push
inc
cli
jno
neg
pop
or
xchg
push
mov
add
add
shr
mov
jecxz
or
cmpsb
inc
sbb
mov
and
into
test
in
mov
pop
add
mov
jmp
stos
jno
gs
mov
pop
and
mov
mov
or
in
add
dec
xchg
sbb
xchg
cmpsb
cmc
jg
lods
and
sti
lods
iret
push
sbb
inc
in
cmpsl
adc
lods
push
xchg
adc
arpl
cmp
xchg
ficoms
mov
mov
xchg
cld
mov
adc
adc
cmp
mov
scas
cld
decl
inc
or
mov
aam
shll
dec
out
jno
or
cwtl
mov
push
push
pushf
sub
leave
mov
test
mov
mov
push
stc
shrb
xchg
movsl
push
ljmp
or
or
out
xchg
arpl
jecxz
fdivl
sahf
int
clc
sub
pop
jne
mov
rcrb
mov
inc
and
jo
repnz
mov
push
push
jnp
lock
sbb
loop,pt
addr16
inc
neg
test
sbb
insb
and
test
mov
push
dec
stos
add
xchg
or
cs
dec
jns
int
xor
cli
cli
pop
movsb
movb
mov
rcr
gs
or
mov
testl
add
push
xchg
jae
mov
mov
ds
lods
lock
fisttpll
stos
mov
hlt
xlat
jo
jg
dec
xchg
ljmp
lds
fbld
cmpsl
sub
and
cmpb
inc
add
scas
mov
and
gs
icebp
cmp
xchg
int
addr16
pop
mov
insb
xlat
js
mov
inc
mov
pop
aas
pusha
sbb
dec
mov
pop
gs
mov
dec
orl
add
jl
clc
jge
rolb
test
mov
mov
push
addl
pusha
inc
sbb
scas
sub
pop
jns
shl
jne
push
sub
lds
call
iret
pop
sub
or
ljmp
andb
movsb
cltd
add
and
sbb
push
cmp
xchg
jmp
push
cmp
jnp
push
mov
jl
outsb
ret
js
xchg
jge
js
ret
into
inc
aam
push
mov
mov
xor
insb
xor
pop
rorl
mov
dec
cmp
inc
movsl
and
lret
push
lds
mov
je
and
jl
dec
dec
fstp
inc
sbb
insb
and
sbb
sbb
dec
hlt
xchg
and
js
sbb
shll
gs
lds
xchg
xchg
jns
jg
ds
pushf
lret
repz
adc
nop
rclb
pop
in
push
je
xor
push
cmc
sbb
insl
push
sbb
es
test
scas
movsb
xor
nop
fsubrl
stc
ljmp
push
xchg
sub
push
push
push
js
mov
xchg
dec
sub
adc
shlb
push
test
sub
xor
push
cmp
jecxz
jp
dec
or
mov
imul
into
xchg
jns
in
lret
xchg
dec
std
fldl2e
mov
rolb
or
test
jmp
es
cmp
sbb
outsb
sahf
movsb
inc
data16
jne
sbb
mov
repz
mov
jg
inc
sub
mov
xor
repnz
das
mov
push
inc
and
dec
adc
mov
movsl
or
sbb
ljmp
sbb
sahf
sub
lcall
mov
icebp
int3
sub
dec
in
xchg
scas
lods
mov
pop
ss
pop
pushf
pop
mov
mov
js
xchg
pop
cld
mov
mov
into
clc
je
pushf
ret
pop
sub
rcrb
adc
push
xor
push
inc
sarl
dec
hlt
inc
rcrb
mov
es
sti
clc
leave
cmp
pop
repz
scas
sarb
cltd
les
pop
dec
mov
and
fmul
sbb
scas
sarl
and
mov
xchg
mov
stos
in
push
sbbl
sub
sti
mov
subl
lcall
jnp
or
sbb
mov
pop
aad
lret
insl
push
bound
inc
jb
adc
adc
jp
push
lcall
mov
cmp
mov
push
push
pusha
xchg
addr16
xchg
lds
and
cmp
testl
jg
out
pusha
repz
ret
out
scas
lret
ds
cmp
ja
repnz
mov
mov
adc
arpl
aaa
xor
xchg
pop
movsb
add
fidivrl
push
xchg
inc
dec
call
adc
mov
mov
lcall
mov
ss
lods
add
push
inc
xor
jb
xlat
push
clc
push
cmc
xor
int3
add
leave
lods
cs
add
mov
jl
jp
ficomps
xchg
test
int
stos
sub
loope
pop
lods
insb
cli
push
push
adc
xor
fstpt
cmp
xchg
popf
adc
lret
xor
in
sahf
mov
popf
test
stc
push
cld
pop
and
insb
xchg
pop
jmp
jns
jo
mov
jo
hlt
dec
outsb
push
loop
sbb
ja
das
in
shlb
mov
stos
dec
cltd
int3
dec
mov
jae
mov
push
xor
lcall
adc
xchg
lret
push
mov
pop
adc
stos
inc
adc
int
sub
xchg
pop
add
popa
notl
fidivl
cs
ret
sbbb
xchg
lahf
ljmp
scas
es
add
int
adc
js
xor
mov
jnp
mov
push
jle
lret
xor
sub
jle
jmp
cmp
subl
adc
cmp
pop
mov
out
mov
roll
int
mov
outsl
push
mov
sub
sbb
sbb
xchg
cmp
cmp
pushl
mov
push
data16
adc
mov
cmp
jo
mov
mov
test
push
out
mov
add
or
out
movsb
or
push
jmp
and
cs
xor
addr16
or
jne
xchg
push
jo
aaa
cmp
lock
fwait
addr16
lock
movsl
outsl
ror
insb
mov
jnp
out
fucomip
push
inc
sbbb
pop
mov
or
out
cmp
movb
dec
loop
addr16
test
xchg
stos
clc
mov
cld
jl
sbbb
in
add
in
sub
adc
jecxz
jecxz
out
xchg
repz
and
loopne
pop
inc
push
cwtl
lea
rorb
call
xchg
mov
andl
cmpsl
repnz
outsl
pop
jo
jecxz
add
inc
fst
mov
mov
movsb
and
addr16
mov
mov
addb
fsubp
inc
pop
lahf
dec
xchg
shl
sub
lcall
xor
sub
cmp
sbb
and
push
dec
mov
push
repnz
adc
inc
ret
aam
push
sti
fucomp
pop
es
dec
mov
mov
xor
and
push
nop
nop
mov
pop
jns
call
int3
mov
xor
lods
jbe
push
test
ret
mov
jge
loop
data16
cltd
lahf
pop
sbb
sbb
std
test
mov
sbb
insl
jg
mov
repnz
sahf
test
stos
cld
mov
sti
adc
roll
pusha
sub
ret
out
sahf
dec
sarb
mov
fstpt
or
sbb
cmpsl
in
dec
sbb
push
push
das
shrb
push
or
push
push
sub
pop
cwtl
loop
sbb
jecxz
rorl
dec
dec
out
push
repnz
mov
ljmp
push
sub
clc
mov
call
decl
push
xlat
fdivrl
lock
in
fs
iret
call
ljmp
loope
in
insb
subl
adc
popa
mov
mov
jp
add
sahf
cmp
roll
orl
int
jae
adc
sar
adc
xchg
xchg
push
xchg
cmp
out
mov
stos
sbb
add
pop
jl
sbb
mov
and
bound
negb
and
clc
sub
int3
dec
pop
call
aam
jg
cmp
roll
cli
jae
xchg
rolb
cld
bound
xchg
mov
lods
jg
xor
xchg
cmp
in
mov
sbb
mulb
xchg
sbb
dec
in
dec
jnp
outsl
lock
push
ljmp
jmp
int
jg
mov
mov
lds
clc
xchg
add
dec
pop
movsb
dec
les
mov
xchg
xor
in
sti
pop
pop
sti
call
and
mov
adc
or
mov
jne
aas
lea
in
mov
pop
shll
mov
xchg
fcomi
xchg
xchg
dec
jnp
push
loopne
test
fnstsw
cmp
adcb
dec
sub
pop
push
adc
jae
in
cmp
sub
inc
jb
adc
scas
roll
push
shlb
sti
push
fwait
and
pop
lods
fsubl
mov
neg
add
in
dec
mov
arpl
and
sub
pop
cmp
mov
sbb
loopne
out
or
daa
adc
cmp
loopne
mov
es
lret
inc
dec
fucomip
mov
insl
das
inc
add
ds
dec
dec
jno
jo
mov
lret
cmp
or
dec
adc
fnstenv
sbb
xchg
push
xor
std
cli
je
push
shll
cmp
hlt
popf
cmc
and
or
cli
xchg
test
jno
adc
xchg
rorl
out
mov
ss
lret
or
cmp
push
xchg
xchg
sahf
test
hlt
insl
mov
inc
cwtl
test
and
jmp
pop
mov
pop
push
xchg
or
or
js
xchg
sub
test
cmpsl
xor
test
aad
push
ss
seto
or
fs
sub
loop
sbb
lcall
lods
sbb
ret
xchg
pop
mov
pop
popa
xor
stos
imul
add
xchg
jae
mov
mov
mov
mov
sbb
pop
imull
mov
sti
pop
imul
add
push
ret
stc
or
and
imul
jo
add
mov
in
data16
inc
icebp
add
ret
xchg
lock
sbb
pop
jg
addr16
pop
les
push
xchg
cmp
pushl
dec
add
nop
jnp
cmp
push
insb
mov
xchg
cmp
cmp
add
xchg
icebp
test
insl
notb
xlat
cmp
jecxz
cmc
fsubl
scas
add
jmp
call
stc
add
jb
icebp
mov
insl
lods
xor
aad
jno
bound
pop
inc
add
jmp
pushf
push
cmp
cmp
add
or
mov
seta
in
pop
fcom
push
dec
pop
xchg
sub
clc
icebp
fsubrs
add
jmp
mov
imul
sbb
cltd
aaa
popf
scas
xchg
testl
mov
or
sbb
mov
adc
push
mov
outsb
into
inc
and
movsb
add
cmp
and
jno
lds
mov
leave
mov
jno
aaa
pushf
lahf
stos
test
xor
pusha
ja
xor
mov
pop
xor
test
fs
imul
jp
sub
add
add
cmp
adc
adc
dec
mov
data16
call
and
xchg
mov
lods
andl
xchg
mov
adc
dec
and
adc
cli
leave
mov
fisubs
dec
or
cwtl
mov
xchg
mov
rcll
cmpsl
mov
out
xor
lods
sbb
fists
jge
mov
lods
jne
icebp
ljmp
loop
fstps
fisubrl
xchg
jo
hlt
jb
sbb
add
not
in
daa
push
mov
mov
add
movsl
ficoml
jl
cld
mov
jb
enter
jge
push
inc
cmpsb
push
inc
loopne
push
test
jg
add
mov
cld
ds
mov
xor
cmp
out
mov
aad
inc
shll
jle
dec
je
xor
int
jo
stos
insb
mov
fcomps
dec
mov
aam
cld
lret
lret
xchg
fidivrl
rcr
or
adc
and
dec
ja
pop
out
test
cwtl
scas
cltd
int
cmpsl
add
aas
int
push
rcrb
ret
xor
pop
lret
mov
push
sub
mov
popf
dec
loop
inc
inc
popa
les
and
pop
clc
cmp
jp
dec
inc
pop
cld
add
leave
hlt
and
mov
jns
leave
int3
mov
fnstsw
xchg
std
jle
pop
fwait
loopne
add
stos
inc
imul
outsl
mov
jmp
arpl
mov
outsl
out
or
mov
lds
mov
sbb
std
sbb
jl
bound
xchg
rcrl
cltd
ds
xchg
in
mov
mov
inc
cmpsb
pop
dec
fst
movsl
or
je
std
scas
add
push
mov
xchg
sub
shr
pop
lds
out
mov
loopne
out
xor
xor
xor
inc
movsl
xor
lahf
push
cmp
loopne
cmp
insl
lea
jecxz
fxch
cmp
xor
mov
pop
mov
inc
fsubrp
adc
loop
cmp
mov
push
movsb
int
add
add
mov
jns
sub
insb
stos
cltd
xor
jmp
xchg
bound
fwait
or
out
stos
xor
mov
sbb
push
in
mov
std
mov
iret
xchg
stos
dec
cmp
loope
sbb
push
lea
jbe
insb
lock
xlat
mov
stos
jnp
xorb
xor
int
or
cmpsb
ja
lods
cs
mull
adcl
enter
lcall
repnz
subl
jbe
fstps
push
ljmp
or
jbe
dec
adc
adc
sbb
clc
nop
aam
gs
addr16
enter
aam
sub
scas
jl
mov
imul
jecxz
je
push
push
popf
rcrb
xchg
sti
or
sbb
ret
jne
mov
notl
mov
fstpl
pop
or
adc
xchg
dec
jns
sub
cs
mov
imul
outsl
dec
add
flds
ror
mov
pop
push
jne
adc
aas
sti
movsb
jno
xcrypt-cfb
cmpsl
bound
fsubl
or
mov
fmul
test
dec
shrb
lret
jge
or
rcll
sub
dec
adc
rep
fsubs
test
pop
aas
popa
sbbl
adc
pop
in
std
push
pusha
mov
dec
mov
mov
in
in
pop
jge
add
loope
sti
mov
cld
lret
cltd
rcrb
iret
pop
lahf
xor
dec
fstps
sahf
xchg
inc
jne
jb
cmp
add
jno
ret
ljmp
and
mov
lret
scas
fisubrs
fs
fsubs
jb
mov
and
sahf
push
fcomip
je
rolb
dec
adc
shll
adc
push
addr16
cmpsb
pushf
iret
xchg
mov
repz
cmpl
aam
inc
xchg
xchg
pop
mov
insb
pop
add
pop
jb
outsb
or
orb
or
push
dec
jecxz
dec
icebp
roll
int3
pusha
pop
stos
ret
mov
adc
mov
inc
or
scas
dec
scas
jl
push
sahf
fistpll
daa
out
xchg
mov
sbb
pmaxub
jl
mov
xchg
loope
xor
inc
loope
imul
movsl
pop
jno
push
push
and
cmp
push
push
int
pop
inc
stos
gs
outsl
push
movsb
pop
sub
pop
movsb
mov
push
xchg
fcomps
out
mov
cmpsl
jmp
shrl
sub
add
sbb
pop
and
dec
push
xor
test
lods
dec
and
pop
arpl
insl
sub
into
in
mov
out
shll
xor
in
cltd
ret
fisubrs
cmp
add
sbb
add
aas
push
adc
and
fisubs
movsb
shrb
push
lret
jmp
scas
jnp
test
sbb
movsl
mov
sbb
out
mov
or
arpl
movsb
sbb
inc
cmp
and
cmp
call
dec
call
fmuls
sbb
push
mov
cltd
lea
rol
test
push
or
xchg
bnd
orl
pop
fistpll
mov
lods
inc
pop
and
sbb
pop
in
testb
pextrw
pop
mov
mov
fidivrs
xchg
frstor
adc
cmp
je
pop
jb
mov
mov
imul
mov
pusha
add
dec
and
arpl
pop
adc
pop
aad
cmp
rcll
jp
mov
jp
inc
or
fsts
ret
out
mov
sub
insb
push
sahf
mov
in
adc
or
out
add
lods
adc
push
push
cmp
pushf
fsts
mov
adc
mov
xchg
mov
daa
inc
pop
inc
add
jo
fsubs
in
lret
fisubs
pop
jne
jmp
jb
std
je
test
xchg
daa
in
mov
sti
sub
aaa
xchg
fists
xchg
outsb
fldt
adc
lods
sbb
out
inc
lock
jle
testb
and
outsb
sahf
sti
sbb
mov
pextrw
lods
mov
inc
push
loop
push
sub
inc
mov
and
push
sub
xchg
lahf
jns
in
fsubrl
mov
xchg
cmpsl
int
adc
push
pop
push
sbb
and
mov
mov
cmpsl
sub
cs
inc
popf
sub
cld
push
jae
es
into
and
xchg
nop
push
cmp
insl
xor
movsb
fsts
mov
ret
jno
mov
sub
cmp
cmp
fnstcw
pop
in
ja
xchg
mov
or
int3
jecxz
dec
lods
jo
jo
test
mov
gs
inc
arpl
int3
mov
orb
cmpsb
pop
cmpsl
or
jecxz
nop
jecxz
mov
outsb
push
jne
cmp
inc
test
sub
mov
ja
xor
es
and
push
mov
dec
insl
push
pusha
cmp
js
jecxz
cmpsl
pop
mov
out
test
mov
shr
sub
mov
sbb
pusha
ja
andb
sbb
cmp
pop
jmp
push
push
addr16
cmp
iret
and
int
jb
xchg
cmp
popa
dec
mov
fmul
push
push
sub
push
nop
clc
fstpt
push
insb
std
test
popa
add
nop
xchg
and
sub
mov
ja
push
sub
outsb
sbb
inc
mov
or
imul
aas
sub
je
jnp
repz
mov
sub
loop,pt
and
arpl
ret
repnz
xchg
jno
jl
push
repz
push
push
scas
into
out
insl
fstps
adc
nop
mov
cmc
mov
andb
ja
xor
test
xor
aam
das
in
out
inc
add
xor
inc
mov
aaa
test
outsb
jae
add
movsb
jb
adc
leave
mov
pop
es
test
cmp
push
mov
jecxz
xor
or
adc
push
mov
inc
or
mov
sbb
addl
and
cmpsl
xor
sbb
data16
ficomps
fadds
ja
outsl
fcompl
arpl
mov
push
nop
cmp
inc
loope
pushf
dec
enter
mov
mov
adc
mov
inc
push
dec
sub
fstps
sub
stos
std
push
cmpsb
lret
adc
push
sub
insl
inc
cwtl
es
jbe
sub
insl
pop
mov
mov
dec
shrb
mov
ror
sbb
lcall
imul
mov
or
cltd
push
sbb
lret
out
dec
xchg
lcall
fisubs
xor
mov
xchg
sub
or
mov
andb
pop
inc
mov
jbe
lcall
pop
or
jae
add
add
sbb
pop
out
sub
pop
loopne
stc
jbe
rcll
mov
inc
je
mov
push
sub
movsl
push
jmp
inc
jno
sub
into
sbb
xor
mov
negb
mov
insb
mov
stos
ds
mov
mov
icebp
push
pushf
fistpll
adc
loopne
mov
in
push
cmp
dec
jnp
lds
lahf
dec
ss
pop
sahf
push
leave
aas
mov
pop
mov
lods
mov
cmpsb
cmpsl
mov
mov
mov
rcll
lret
scas
sub
testb
repnz
jl
mov
or
leave
lock
leave
inc
add
in
add
inc
sub
jecxz
cli
jnp
xorb
jbe
pop
sbb
adc
scas
bound
and
repz
xor
mov
popa
ljmp
push
std
push
das
jmp
cmp
pop
push
mov
inc
arpl
push
and
xchg
xor
push
cmp
mov
repz
jnp
cmp
lods
jne
jl
in
sarl
std
int3
mov
add
sbb
xchg
dec
cs
jg
inc
xor
jp
jo
ret
push
push
and
iret
or
jo
mov
dec
les
out
xor
inc
or
pop
out
lods
in
popl
hlt
adc
mov
pop
shlb
xchg
inc
lds
add
test
insl
inc
or
lea
mov
lahf
dec
test
cmp
pushf
push
insb
sbb
adc
rcrl
push
sbb
popa
adc
xchg
push
sub
inc
dec
push
mov
in
adc
je
pop
and
bnd
or
lahf
mov
cmp
jge
inc
leave
jg
enter
imul
sbb
jo
mov
leave
inc
inc
pusha
test
push
push
mov
movsl
roll
stc
in
out
push
or
cwtl
test
inc
or
fidivrl
je
cli
xlat
daa
cmp
jp
notl
jg
jmp
hlt
ds
or
adc
pop
loope
fisubs
sbb
scas
lods
loopne
or
iret
insb
cmpsb
fsts
cwtl
dec
std
push
inc
pop
sbb
and
loope
jecxz
lcall
out
ljmp
gs
mov
adc
loop
loopne
xchg
dec
xchg
pop
pushf
push
mov
sbb
sbb
fisubs
jae
cmp
add
stos
mov
jnp
push
pop
outsl
cwtl
add
icebp
call
pushf
cmp
mov
mov
sub
pop
in
mov
lcall
hlt
test
cmp
dec
scas
cmp
repnz
pop
or
sarl
jle
push
movsb
and
bound
or
mov
sbb
push
xchg
adc
shlb
enter
int3
lods
in
mov
add
das
loopne
xor
inc
mov
cs
xchg
cmp
stos
jno
out
addr16
mov
mov
rcll
repnz
pop
leave
sbb
out
adc
lods
fisttpll
ret
sub
fwait
push
mov
ljmp
mov
jp
sbb
and
mov
pushf
scas
dec
into
cmp
push
arpl
pop
adc
mov
int3
clc
cs
xlat
cmp
stos
push
scas
push
and
sbb
jge
call
jecxz
sub
xchg
inc
js
imul
sub
loopne
mov
jl
mov
jae
call
sbb
lock
ret
pop
addr16
or
es
push
sahf
dec
fiadds
call
test
xchg
or
fstpl
shll
mov
outsl
mov
sub
add
xor
cmc
cld
out
gs
mov
dec
cli
cmp
outsb
js
outsl
add
add
hlt
std
jl
xchg
and
push
mov
push
push
add
xchg
adc
inc
test
repz
ja
lock
jne
test
mov
xchg
dec
and
stos
add
gs
cmp
int
xor
mov
xchg
shll
mov
shr
lods
outsl
clc
fldcw
gs
inc
adc
add
es
in
mov
push
push
test
xor
out
das
enter
push
dec
mov
mov
lahf
loope
sbb
cmc
lds
inc
cmc
imul
add
stos
push
repnz
xchg
sbb
nop
dec
mov
dec
mov
mov
insb
dec
mov
add
xlat
push
push
push
ljmp
pop
lods
pop
movsl
out
xor
inc
gs
xor
pop
xor
scas
lahf
loop
push
stos
fwait
bound
pop
test
jl
push
in
int
aad
fistpll
cmp
ljmp
xor
mov
lds
jae
pop
ljmp
shll
outsb
ds
lcall
lock
jo
or
push
mov
ss
adc
or
cmpsl
dec
cltd
das
mov
pop
je
mov
jg
sub
scas
jl
pushf
pop
loope
mov
daa
sub
push
data16
lea
or
pop
push
dec
push
or
push
xorb
mov
mov
mov
sbb
fnstsw
and
arpl
imul
dec
push
outsb
xchg
xlat
xor
stos
push
dec
gs
leave
dec
stc
or
xchg
add
mov
imul
imul
xlat
sbb
jl
inc
out
std
inc
mull
sbb
ljmp
bound
or
fisttpll
cmp
pop
jecxz
pop
test
sub
xchg
dec
int3
jmp
or
add
jo
mov
data16
mov
mov
adc
sub
inc
mov
shlb
cmpsb
loope
sbb
mov
lods
mov
movsl
dec
fsubs
push
rcrb
jb
rcrb
inc
leave
ds
mov
in
dec
adc
clc
divl
into
xchg
adc
iret
cld
xchg
int
lds
fnstsw
cmp
aas
fildl
pusha
cmpsb
xor
cltd
dec
sahf
nop
addb
out
adc
mov
jo
mov
adc
inc
and
mov
jbe
sub
cmp
out
scas
es
or
scas
mov
sbb
or
loope
jno
popa
out
jbe
push
pop
and
ret
stc
in
push
push
jmp
icebp
pusha
adc
test
sbb
js
je
lock
pusha
mov
cmp
bound
adc
lea
sub
stos
mov
sbb
sbb
pop
xchg
testl
icebp
mov
int3
jb
stos
not
sbb
sub
inc
xor
cmp
add
aad
jg
scas
or
xchg
ljmp
insl
mov
jge
jp
repz
jle
or
sti
mov
cmp
aaa
xor
ljmp
nop
sbb
fs
jge
push
push
fiaddl
cmpb
out
mov
daa
pushl
cmp
out
cmpsb
fstpt
inc
mov
popf
sbb
enter
mov
push
xchg
jbe
pop
lds
inc
push
cmp
das
fldt
fwait
inc
clc
mov
sub
xlat
in
push
push
add
push
mov
cld
dec
inc
pop
and
or
ret
fisubrl
lahf
mov
in
cltd
mov
mov
sbb
jo
xor
xchg
xorb
lret
add
repz
shrl
dec
mov
inc
lahf
out
je
push
mov
xor
or
sub
roll
push
and
dec
arpl
leave
mov
fstpt
andl
mov
mov
leave
test
pop
xchg
jno
cmc
cmp
test
sub
je
jp
xchg
incb
mov
mov
and
cltd
popa
orb
xchg
lods
es
loopne
pop
jnp
pop
add
test
insl
push
test
mov
jle
daa
scas
xor
pop
mov
and
jno
sub
push
loopne
ret
stc
ljmp
push
dec
sbb
ret
pop
enter
jg
and
jg
push
dec
loopne
ficoms
cmpsl
push
jecxz
fidivrl
gs
mov
push
adcl
push
pop
bound
pop
jae
loope
push
jns
mov
push
enter
jmp
cmp
lea
sub
hlt
pop
push
das
dec
lret
mov
lret
gs
pushf
push
cs
bound
jnp
gs
mov
push
call
jg
pop
and
jmp
pop
pop
mov
gs
loopne
mov
out
push
rcll
mov
jb
aaa
jecxz
int3
jb
push
cmp
dec
sbb
data16
xlat
xor
loope
aad
adc
sbb
sbb
in
into
jecxz
push
jmp
loopne
aaa
cmpsb
jno
pop
sub
jle
int3
jbe
fwait
pop
fldcw
test
movsl
mull
adc
cwtl
pop
cwtl
jnp
jg
mov
inc
fcmovbe
into
mov
fstpt
shrl
js
std
icebp
movb
out
mov
loope
mov
gs
sub
sahf
jbe
mov
cmpb
cmpsb
mov
mov
xlat
pop
aas
or
sub
xchg
or
aaa
sbb
pop
lods
iret
in
lcall
repnz
sub
xor
pop
pop
mov
scas
cmp
sbb
leave
outsb
xorl
mov
sbb
jbe
or
fimull
or
jmp
push
add
aaa
dec
sub
pop
adc
and
adc
outsb
outsl
mov
fs
imul
and
add
sti
fstl
jo
mov
xchg
pop
sub
dec
dec
sub
nop
cld
das
dec
mov
jb
jp
jns
push
push
push
add
lods
adc
mov
lds
sub
add
les
mov
add
test
pop
pop
and
nop
adc
add
shlb
xor
inc
ljmp
push
pushf
in
jnp
cmovle
cmp
or
inc
loope
das
cmp
int
cwtl
xchg
or
shrb
xor
das
xchg
and
pop
add
mov
int3
movl
pusha
outsb
mov
push
mov
lock
in
inc
xor
test
fst
push
xchg
dec
ja
pop
adc
xchg
xchg
mov
lods
sub
mov
roll
cmc
ror
xchg
or
sbb
dec
inc
sub
sbb
cmp
adc
fdivrs
xchg
fcoml
adc
pop
cli
mov
fdivl
xchg
int
fcmovnb
test
jle
or
shll
clc
xchg
dec
push
mov
lahf
and
aam
pushf
mov
lock
xlat
test
aad
inc
push
add
data16
cmp
push
mov
aas
test
jno
stc
sub
and
enter
pop
sahf
in
xchg
lcall
sbb
cmp
mov
lods
arpl
pop
sub
insl
add
push
or
icebp
mov
gs
call
loopne
xchg
out
cld
and
ljmp
bound
adc
xor
cmp
push
push
test
jbe
xor
pop
mov
ret
xor
inc
mov
adc
jg
pop
xor
imull
mov
mov
sub
int
jle
cmp
cmp
sbb
out
pusha
cmc
iret
mov
dec
lock
inc
jl
fadds
add
ds
mov
cmpsb
inc
mov
jmp
or
cmc
fucomp
xchg
scas
test
sub
add
jno
popf
aaa
das
dec
inc
ret
and
inc
push
lock
adc
aam
pop
jb
fsts
adc
add
int
adc
data16
popa
xor
dec
dec
leave
imul
jmp
dec
fdivrl
pop
out
js
dec
enter
lcall
mov
mov
sbbl
dec
daa
ja
rcrb
lds
push
xchg
sbb
lods
into
dec
ljmp
rcl
sbb
les
fisubrs
mov
lock
xlat
or
ja
push
pop
cmpl
push
add
addr16
pushl
mov
fwait
xorl
aas
jae
aaa
sub
dec
rep
or
lods
and
fisubrl
pushf
movsb
push
dec
icebp
jae
xor
cmc
mov
or
in
lret
ljmp
rclb
rcrl
out
xor
int3
les
xrelease
jge
sbb
pusha
dec
shlb
and
bound
lods
lahf
mov
cmp
mov
lret
cmc
ljmp
stos
fsubrs
jp
push
fs
lock
outsb
repz
add
mov
fstps
adc
mov
icebp
inc
in
into
push
jne
test
pop
xchg
testb
loopne
rcll
push
inc
popf
push
sahf
jp
lds
xlat
adc
ljmp
jg
jp
out
pop
lahf
push
repz
clc
call
aam
push
mov
or
xchg
mov
adc
sti
into
lret
fdivrl
ja
push
cmp
add
fs
inc
or
in
pusha
popf
orl
pop
cmc
mov
data16
xchg
pushf
mul
inc
insb
loope
mov
fcompl
movsb
js
icebp
scas
popf
js
dec
add
xor
sbb
mov
cmpsl
jmp
in
lods
scas
fwait
or
jmp
push
mov
xchg
out
inc
push
add
lods
neg
mov
bound
scas
pusha
cwtl
movsl
stos
iret
mov
jb
sbb
insb
ficomps
out
popa
cwtl
lea
lret
imul
push
jne
mov
cmp
sbb
sbb
ljmp
nop
cmp
dec
push
movsb
addr16
or
enter
je
inc
mov
shrb
stc
or
dec
mov
push
dec
jp
stc
rorl
add
inc
push
stos
loop
inc
inc
add
sbb
mov
sub
jnp
cmp
sbb
popf
dec
ljmp
jge
out
testb
add
xchg
sbbb
ljmp
call
mov
xchg
cmp
iret
rcll
inc
adc
push
mov
sarb
rorl
into
sar
adc
mov
cmp
frstor
pushf
sti
lret
mov
push
andl
imul
mov
stc
jno
sbb
sub
mov
fdivs
add
xchg
inc
jge
ret
sbb
cmpl
inc
mov
sub
aad
lods
adc
insb
into
ret
rorb
sub
aaa
xchg
jns
daa
cmp
mov
xor
leave
and
orl
cmp
dec
call
out
pop
jge
iret
hlt
add
adc
insl
repz
and
jp
dec
fsubrs
cld
dec
push
test
jo
ja
sbb
loope
sub
mov
or
adc
fwait
cmp
out
mov
fldcw
or
inc
pop
repnz
adc
repz
int
das
jecxz
ds
adc
xor
xlat
jb
in
mov
or
or
inc
mov
test
jg
adc
and
cmpsl
push
mov
imul
cltd
mov
ret
cwtl
sbb
out
nop
mov
mov
xchg
or
jmp
lea
dec
fimull
or
outsb
call
mov
mov
aaa
xchg
sbbb
xor
out
subl
or
push
cmpsl
jle
icebp
xor
aam
mov
and
sahf
sbb
rcr
fwait
aaa
pusha
aad
pop
pop
out
inc
jb
orl
sub
add
push
mov
mov
mov
cmpb
add
das
cmpsl
pop
jbe
into
sarl
rcll
and
sbb
stc
incb
leave
es
pop
xchg
outsl
sbb
push
mov
mov
inc
cmpl
xchg
sub
cld
in
sbb
mov
sub
gs
das
mov
cs
sarl
mov
sub
push
test
xchg
out
lock
jo
rol
dec
push
sbb
inc
sbb
mov
pusha
jp
jmp
push
pop
xor
and
jae
lcall
cli
or
negb
out
jb
mov
push
sbb
bound
or
xchg
cmpsb
std
imul
fisubs
fidivl
movsl
add
adc
daa
orb
cmc
or
scas
loopw
imul
nop
pop
inc
ja
lods
add
adcb
pusha
shl
in
mov
subb
lods
sub
and
mov
jbe
lahf
inc
cmp
ds
std
decl
xchg
imul
insl
loopne
inc
jecxz
test
pop
pushf
sub
negl
adcb
and
cmpsl
mov
pop
inc
fmul
add
inc
push
test
xor
cmp
enter
mov
inc
add
fsubrl
hlt
xor
and
mov
outsb
cwtl
fs
mov
dec
inc
outsb
xor
pop
out
movsl
idivb
adc
jne
dec
aad
mov
or
cs
cmp
out
in
inc
mov
or
or
repnz
lock
lret
inc
adc
dec
push
insb
mov
inc
fldl
data16
sbb
xor
pop
subl
testl
rep
and
es
push
rcrl
enter
xchg
cmpsl
test
xor
arpl
fstl
aad
pop
jle
and
repz
test
testl
jns
mov
xchg
add
mov
enter
loop
lock
push
mull
iret
loop
and
ss
pop
cwtl
int3
out
dec
pusha
lock
sub
pop
mov
mov
stos
lea
push
push
lock
cmp
outsl
out
nop
outsb
sbb
mov
clc
stos
imul
push
dec
xchg
inc
pop
adc
aas
pop
inc
mov
sub
push
popa
popa
cmp
push
imull
add
sbb
inc
test
mov
mov
mov
shrb
pop
ret
negl
mov
rcll
lods
popf
inc
xchg
sbb
and
add
insb
sbb
imul
ret
adc
sbb
aaa
xorb
jnp
sbb
lea
mov
test
push
cmpsb
movsl
xlat
pop
imul
xlat
add
push
test
test
inc
push
out
mov
stos
or
jnp
xchg
adc
lods
lods
pop
std
and
xchg
mov
mov
cmp
mov
lock
fists
xorl
jge
pop
inc
and
mov
and
imul
pop
mov
add
xchg
cmp
in
dec
dec
push
fwait
mov
push
mov
test
cmp
pop
divb
or
addr16
dec
rcll
inc
decb
stos
es
iret
mov
hlt
nop
add
rcr
push
cs
fmull
or
subl
cmpsl
inc
mov
jns
insl
test
cmc
out
inc
mov
and
addps
out
jno
mov
or
movsl
jle
sub
mov
movsb
mov
or
loope
mov
test
je
sbb
popa
cmp
push
scas
adc
and
std
fsubs
sbb
dec
mov
dec
aam
push
cwtl
lcall
and
into
pop
jge
push
add
es
or
jbe
aas
xor
dec
js
jmp
pop
jle
sahf
dec
pop
repz
bound
add
cmp
fldcw
xchg
xchg
in
test
movb
lods
push
inc
push
adc
push
repz
dec
xor
into
xchg
inc
jge
pushf
xor
push
fwait
pop
out
xchg
int
wbinvd
dec
add
mov
xchg
dec
subl
loope
outsb
fstps
mov
jl
sbb
adc
lods
loope
enter
xchg
les
push
adc
add
sbb
cmp
addr16
cmp
xchg
iret
int
jns
insl
das
adc
add
inc
xor
cwtl
mov
mov
shrl
mov
jge
push
cwtl
movsb
mov
adcb
adc
decl
sahf
pop
sbb
jbe
mov
jl
and
jno
fxch
or
in
push
mov
mov
insl
filds
mov
hlt
popa
mov
daa
jno
inc
mov
jnp
dec
fiadds
mov
cmpsl
xchg
mov
ret
es
fidivrs
mov
push
sahf
outsl
and
add
cmp
sbb
fadds
lock
xchg
xlat
iret
push
pop
cmp
fdivl
mov
test
roll
dec
or
xchg
lret
mov
push
iret
aam
mov
pop
or
add
into
jge
loope
xchg
jmp
out
std
or
gs
ret
sub
mulb
test
fdivrl
xor
jp
andl
sub
fstps
fmull
pop
addl
imul
inc
lret
mov
pop
and
jb
insl
dec
jge
pop
outsb
cmp
push
cmpsl
lea
cld
mov
dec
sbb
inc
mov
dec
aam
sbb
adc
push
push
loopne
xchg
inc
sbb
cwtl
add
test
sbb
mov
in
jl
idivl
jnp
shlb
or
cmp
loop
inc
les
xchg
xor
adc
mov
cltd
cmp
shll
pop
les
mov
sub
jecxz
lock
js
sbb
and
imul
adc
mov
xchg
xchg
imul
ret
and
xchg
in
imul
aam
mov
sbb
aad
mov
ret
xor
inc
jb,pt
mull
sub
mov
repz
in
sub
xorb
add
add
sahf
fs
push
dec
adc
mov
adc
out
loopne
stc
cld
loope
mov
pop
cmp
mov
stos
ljmp
adc
xchg
pop
mov
inc
or
and
lock
push
mov
cmp
xchg
pushf
int
sub
push
xlat
pop
push
hlt
iret
mov
scas
xor
fisubs
adc
mov
xchg
movsl
lock
es
imul
iret
jecxz
mov
add
cmpsl
sub
sub
lret
push
shlb
xchg
or
jb
or
loope
out
mov
sbb
add
push
hlt
ret
jbe
adc
loop
cmp
jle
pop
int3
pusha
and
jae
dec
jns
sbb
xor
mov
push
ret
sahf
push
lds
les
loop
aaa
fsts
cmpsb
aad
pop
cli
sbbl
popf
xor
mov
lahf
jle
hlt
fistl
push
sbb
loopne
ja
and
push
mov
imul
ret
push
xlat
xchg
sub
rcrb
and
lock
pop
rcr
sbb
cmovl
int3
pop
leave
adc
and
or
adc
divl
hlt
inc
cmp
adc
je
add
xor
aad
mov
clc
lods
mov
scas
aad
incb
mov
clc
mov
cmp
adc
pop
cmp
sub
clc
scas
mov
sub
subb
lds
push
mov
sbb
and
decl
push
insl
adc
lods
sub
or
dec
add
xor
dec
scas
test
andl
dec
push
ja
addr16
sub
sub
out
andb
sub
pop
pop
ss
and
outsb
jns
test
lods
fdivrp
movsb
adc
inc
xchg
mov
mov
add
lods
push
xor
repz
ja
sbb
outsb
add
or
in
daa
mov
lahf
pop
jae
push
mov
dec
loop
pop
jmp
into
jbe
mov
jge
pop
in
pop
lods
repnz
pop
mov
sub
add
sbb
in
lock
es
xor
popf
mov
pusha
jae
or
sub
jecxz
cmp
sti
jp
fnsave
xchg
lods
sbb
in
fs
call
xor
cltd
lcall
add
pop
mov
pop
sub
outsl
notl
mov
mov
mov
adc
hlt
dec
pop
aaa
and
mov
shll
dec
cmpsl
repnz
lods
push
adc
pop
and
or
lahf
inc
adc
dec
movsl
sahf
add
test
shl
mov
mov
fidivs
mov
imul
add
and
jmp
and
add
add
mov
mov
shll
xor
dec
loop
inc
cmp
push
sub
mov
push
push
lahf
ret
je
inc
cmpsl
push
sbb
sbb
rcrb
push
arpl
xor
outsb
pushf
in
xchg
lods
mov
lahf
int
js
pop
addr16
sbbb
shlb
outsl
addb
test
cmpsl
and
imul
adc
sbb
mov
mov
test
lds
ljmp
mov
pop
push
lods
pop
adc
pop
in
push
xlat
popa
out
sub
cmp
push
xor
pop
dec
jns
adc
xchg
pop
bound
xchg
cltd
inc
jns
ss
mov
arpl
sbbb
cmpsl
pop
adc
mov
mov
lcall
xor
int
pop
sub
lret
popf
orl
and
lock
push
movsl
jns
arpl
test
cmp
cmp
andl
aad
lods
and
push
shl
shl
into
mov
mov
xor
test
add
rorl
out
push
out
mov
and
push
xor
push
aaa
push
push
loop
lcall
mov
test
adc
enter
mov
stos
adc
fidivs
xchg
push
lcall
xchg
cmp
cli
mov
shll
imul
mov
push
mov
rcrl
rclb
data16
ds
add
ljmp
cltd
inc
mov
int
or
and
loope
fistpll
xchg
mov
scas
test
inc
dec
mov
or
test
pop
es
ss
xor
icebp
and
lret
jl
lods
addr16
xchg
adc
dec
xor
sbb
ret
arpl
lret
insb
push
movsb
xchg
xchg
mov
outsb
mov
cmpsl
insl
xor
sub
scas
iret
fldenv
cmp
mov
fs
cmc
movsl
je
aaa
push
xchg
add
sahf
mov
inc
push
ret
mov
movsl
pushf
enter
xchg
cs
in
sbb
fsubl
jg
dec
add
leave
or
and
ljmp
xor
movsb
cmpsl
cmp
lcall
add
dec
adc
push
addr16
add
xor
imul
mov
cmp
loope
and
jo
shl
sbb
push
or
rcrb
pop
sub
mov
jge
lret
jno
mov
cmc
sbb
xor
inc
clc
aaa
addr16
mov
aas
sub
lock
aas
push
bound
cmpsb
push
pop
jp
outsl
xor
loopne
mov
add
adc
mov
mov
mov
cmp
and
mov
imul
ljmp
mov
mov
nop
dec
adc
inc
loop
xor
inc
pop
mov
jmp
pop
jg
fwait
test
mov
xchg
imul
sub
rol
and
ss
cld
mov
lea
sub
inc
cmp
push
mov
adc
mov
xor
xchg
push
hlt
repz
push
fwait
jnp
sbb
dec
inc
roll
push
aas
fimull
cmp
pop
lret
test
loopne
hlt
mov
xchg
fsubr
add
jge
xor
ds
lcall
jns
filds
cld
int3
sub
xchg
jne
je
xchg
cmp
jp
sbb
sahf
sub
xlat
xor
imul
cmp
push
mov
jecxz
pop
rcr
xchg
mov
out
ja
call
push
in
cld
lods
in
repz
xor
pop
add
xchg
jmp
call
mov
popf
lock
mov
into
and
loope
in
ret
jmp
add
js
outsl
stos
xchg
dec
or
jb
pop
lret
fistps
in
inc
orl
out
or
cli
or
in
pop
push
jecxz
hlt
popa
rolb
pop
dec
shlb
jg
adc
pop
pop
push
outsb
std
arpl
pop
jecxz
out
xlat
int3
mov
es
mov
push
push
jecxz
cltd
sbb
pop
mov
fistpl
pop
and
shrb
call
ret
add
imul
fnstsw
in
cmp
mulb
sbb
sbb
cmp
int3
xchg
sti
test
outsl
xor
pusha
notb
es
mov
mov
jmp
jmp
jo
jle
scas
movsl
and
dec
xchg
std
push
sub
popa
fidivs
das
fmuls
mov
jl
adc
shlb
in
cmp
test
movsb
cmp
outsl
xor
xor
mov
test
or
lret
loop
adc
inc
gs
jg
push
inc
mov
ret
sahf
mov
mov
test
movsl
lods
cli
xchg
jns
sub
bound
mov
call
jne
mov
shlb
mov
inc
push
pop
cmp
mov
jne
sqrtps
mov
push
imul
pop
jne
addb
cld
and
dec
lods
push
dec
gs
int3
in
daa
or
cmp
jge
insl
add
pop
inc
lock
popa
xchg
aam
xchg
cmp
mov
ds
xorb
xor
inc
jmp
ffreep
cmpsl
ds
dec
inc
mov
dec
mov
in
adc
jl
or
fimull
loope
dec
lcall
int
or
imul
cltd
inc
and
xor
popa
stc
es
push
loopne
stc
in
scas
mov
out
adc
scas
sub
and
dec
loopne
adc
fs
cmp
mov
lahf
mov
jbe
dec
push
mov
pop
xlat
in
add
mov
daa
std
inc
addr16
push
dec
and
subb
pop
fdiv
mov
xchg
fbld
imull
cmc
push
jecxz
dec
loope
push
pop
iret
movsb
stc
jl
addr16
inc
ja
fimuls
push
cwtl
loopne
add
xlat
jno
fisubrs
inc
sbb
popl
mov
hlt
divl
lock
out
in
jno
lea
adc
fisubl
and
and
loop
inc
cwtl
mov
aas
cmpsl
xor
push
int
dec
ret
pop
xrelease
out
add
ret
or
and
pop
es
push
bound
xor
lea
orl
cltd
call
nop
inc
mov
ja
pop
cmp
mov
cmpsl
lahf
adc
pop
in
jae
lcall
add
pop
loop
inc
and
ds
ss
dec
lods
or
xchg
int
inc
mov
mov
aad
push
aam
lods
sti
inc
test
push
insb
sub
scas
dec
gs
mov
mov
bound
push
mov
jbe
push
into
mov
mov
cmpsb
outsb
test
popa
sub
out
clc
imul
sbb
pop
xchg
loopne
xchg
ljmp
xchg
mov
out
inc
fwait
and
inc
fidivrl
dec
nop
fstps
lock
loopne
bnd
sbb
add
fcomip
mov
out
pop
xchg
xchg
pushf
nop
sbb
pop
shlb
push
popa
les
inc
adc
sbb
mov
jg
jp
lods
insl
dec
and
movsb
add
push
lea
popa
loop
jbe
add
in
ss
adc
lahf
pop
nop
push
mov
in
pop
xor
loop
nop
push
filds
pop
inc
fcomip
push
inc
loop
pop
ret
dec
push
xor
in
cmc
mov
rolb
jmp
in
sarl
dec
ret
ss
sbb
push
and
mov
inc
mov
push
jae
mov
mov
ret
pop
pop
push
ljmp
cmp
leave
mov
push
inc
ds
test
sbb
push
sbb
jnp
cmp
lods
mov
push
inc
mov
aaa
int
cmp
xchg
sti
mov
inc
xchg
or
mov
popf
int3
cli
inc
jns
out
push
iret
adc
pusha
out
js
mov
shr
fisubl
xchg
xchg
ret
aam
insb
add
or
out
mov
xlat
and
pop
inc
fsubrl
mov
imul
jp
aam
add
int3
mov
jp
hlt
or
fldenv
lea
std
std
dec
movsb
cld
pop
inc
mov
test
mov
iret
imul
pop
jge
gs
sbb
push
movsb
movsl
xor
js
jns
in
ja
xchg
stos
sarb
rcrb
xchg
cld
add
push
xchg
into
and
adc
xor
aad
fmull
rolb
mov
add
xor
fiaddl
mov
jp
and
mov
xor
pop
or
add
add
adcb
aas
sub
insl
or
rorl
cmp
popf
fidivrl
addr16
xchg
jo
hlt
enterw
dec
cmc
sub
xchg
faddl
add
in
and
xchg
roll
pop
add
popa
inc
lcall
mov
adc
lret
call
fs
bound
les
test
test
xchg
popf
push
dec
inc
inc
ret
or
push
scas
pushl
jae
mov
cmp
push
jns,pn
in
incb
mov
lds
push
cmp
insb
imul
mov
sbb
jg
jmp
imul
adc
rcll
sub
out
sti
mov
and
sub
xchg
sbb
cltd
jge
js
inc
or
daa
gs
mov
notl
mov
js
xchg
aam
scas
lahf
pop
pop
sub
push
push
lds
mov
sub
sbb
in
sbb
xchg
rolb
jge
xchg
xchg
xchg
add
fldt
sub
fidivs
andb
rorl
and
sbb
dec
xchg
xor
xorl
inc
ds
in
mov
adc
xor
xor
fidivs
dec
lret
mov
mov
pop
aas
jp
nop
pusha
ret
sub
bswap
xor
pusha
scas
daa
out
es
sti
add
jp
adc
xchg
loop
inc
in
shlb
inc
dec
cmp
out
sti
leave
dec
stos
mov
cmp
rcrb
loop
mov
scas
add
sub
pop
push
inc
inc
fnstsw
mov
mov
jecxz
sub
xchg
fnstsw
das
and
mov
ss
xor
add
in
dec
add
into
pop
mov
test
or
push
and
xlat
push
mov
test
fcoml
fdivs
iret
loope
lea
ret
jne
push
lret
iret
mov
jp
mov
jne
jo
aam
xor
lods
jb
cmp
in
rclb
and
mov
lret
mov
jbe
push
mov
cmpsb
cmp
movntq
insb
xor
push
or
pop
arpl
mov
popf
data16
shl
mov
cmpsl
jno
add
lahf
iret
lret
xchg
mov
fimuls
aam
scas
push
xor
push
les
push
push
sti
frstor
push
push
xchg
loop
push
imul
in
int3
jmp
inc
jp
stos
or
loopne
mov
ret
sub
pop
arpl
adc
sti
cmpsb
adc
xchg
pop
scas
or
loopne
dec
cmpsb
ret
mov
cwtl
test
flds
repnz
scas
push
xchg
mov
scas
mov
dec
repz
call
mov
sub
or
ret
xchg
adc
ja
je
inc
hlt
jbe
mov
cli
ds
in
in
adcb
int
and
xor
icebp
fisttpll
dec
pushf
std
fdiv
aaa
add
jmp
push
cmc
mov
loope
pushf
nop
inc
mov
imul
dec
jg
pop
mov
jno
pop
or
into
test
push
dec
ss
lret
int
gs
dec
push
jl
cmp
sub
out
sub
jmp
and
dec
frstor
cmp
cwtl
push
inc
pop
repnz
popa
sti
push
mov
sub
cltd
mov
call
into
cmp
or
sbb
dec
lods
aaa
bound
in
and
aas
lods
add
mov
sbb
fidivrl
mov
cmp
xchg
push
mov
test
inc
sti
mov
popf
mov
fiaddl
jno
pop
dec
jecxz
ljmp
push
sub
in
push
cmp
or
jae
clc
fld
jae
and
into
adcb
sub
xchg
scas
xor
add
mov
or
pop
add
inc
jo
push
push
inc
sbb
mov
adc
repnz
neg
mov
in
into
das
mov
js
adc
cmp
or
jae
xchg
sahf
testl
push
leave
mov
sub
dec
dec
bound
aad
out
or
sahf
ret
aas
push
testb
jg
loope
inc
add
test
arpl
movsb
popf
cld
mov
repnz
pop
out
or
popa
lret
sahf
mov
xchg
xor
es
out
jb
daa
scas
sbb
bnd
lds
mov
lret
jge
das
and
lods
and
lods
mov
ss
aaa
shll
inc
shl
aaa
stos
add
sahf
mov
dec
arpl
xor
scas
fnstsw
pop
mov
push
adc
pop
sub
or
add
shrl
popf
cltd
out
mov
stc
sub
sbb
mov
add
ret
subl
adc
mov
dec
idiv
cmpsl
sub
js
out
or
outsb
out
jae
push
jb
push
clc
mov
shrd
and
test
imul
popfw
rcrl
pop
jge
test
sub
mov
cmpb
mov
xor
cmp
xchg
pusha
fcompl
outsb
jmp
mov
pusha
call
in
jnp
lods
dec
inc
jge
add
cmpsb
fistps
jl
daa
mov
add
inc
mov
jecxz
mov
jmp
push
xor
int3
and
mov
cli
mov
into
loope
les
mov
mov
sub
jo
and
pop
std
mov
and
cwtl
into
sbb
mov
cltd
mov
jne
insl
lcall
xchg
lods
test
sbb
ja
int3
and
mov
xchg
orl
fisubs
fsubrs
aam
push
pop
sbb
scas
cld
idiv
ss
ret
xor
mov
cmp
cli
add
das
in
and
mov
jl
dec
inc
cld
cmpsl
mov
in
xor
mov
add
push
jns
aas
aam
jecxz
or
xor
jne
movsb
jns
mov
or
push
xchg
mov
lock
mov
and
lods
push
fiaddl
inc
ficomps
test
hlt
push
fdivl
mov
inc
mov
sbb
dec
out
pushf
es
push
and
lock
mov
jl
icebp
dec
xor
xor
cmp
cmpsl
mov
xorb
js
push
mov
mov
sub
xchg
jge
mov
inc
in
xchg
or
push
lods
iret
adc
test
jmp
xchg
in
push
js
jle
fwait
scas
cltd
int3
add
dec
push
imul
mov
fwait
lods
rcrl
mov
add
rolb
or
nop
movsl
sti
sbb
cmp
mov
mov
pop
shlb
jecxz
mov
sub
cmp
clc
cmp
add
pop
push
sbb
mov
daa
lcall
mov
mov
jns
call
insl
mov
jl
in
jmp
pop
jecxz
cmp
fwait
xchg
jmp
jns
jno
mov
dec
and
stos
xchg
sub
imul
shrb
and
dec
push
je
dec
mov
lret
int3
in
cmp
push
xor
cwtl
pushf
loopne
rcrb
inc
dec
mov
cltd
dec
scas
push
push
out
mov
fiaddl
adc
add
xor
mov
sbb
lret
popf
fdivrl
sbb
adc
mov
jl
dec
and
daa
push
imul
and
inc
out
inc
test
enter
lcall
mov
dec
jg
pop
shll
insb
cmpb
sub
mov
pop
mov
adc
adc
lcall
add
je
sub
call
or
out
test
loop
stc
shll
rcl
push
mov
cmp
int
adc
filds
jp
jmp
xchg
outsl
es
sahf
xchg
sbb
adc
jno
ss
sbb
pop
rorl
rcll
cli
and
mov
cltd
nop
jge
scas
mov
mov
lret
iret
out
fldenv
pop
sub
pop
icebp
jae
arpl
ret
sub
add
mov
pop
fstpl
pop
mov
std
mov
jo
inc
push
lods
bound
subl
jne
imul
push
jne
xchg
mov
or
arpl
sbb
mov
fstpt
scas
add
test
bound
push
andb
and
call
js
rorb
push
mov
pop
es
loopne
add
shll
data16
loopne
fstpl
loope
cli
jae
movsb
add
or
incl
cmp
and
in
push
ret
aaa
outsl
adc
lahf
pop
jmp
sbb
mov
scas
sbbb
adc
test
int
jmp
stc
inc
lods
adc
fs
mov
or
iret
pop
mov
push
iret
add
gs
cmpsb
icebp
xstore-rng
cmpsl
add
mov
leave
mov
sub
adc
into
int
cld
jle
sahf
sub
sbb
pop
pop
frstor
icebp
cli
xor
mov
sbb
inc
popf
push
sahf
push
inc
fildl
cmp
mov
xor
bound
or
push
stos
aas
int3
out
fsts
inc
mov
dec
cmp
jl
int3
add
and
xor
cmpl
pop
jns
fsubrs
popa
fisubs
add
repz
mov
mov
or
adc
cmp
pop
jae
movsb
jmp
mov
fwait
mov
xchg
mov
clc
in
xchg
fwait
negb
jno
iret
ret
fildl
or
test
sub
xorb
shlb
adc
xor
xchg
mov
cmp
out
punpckhdq
push
push
mov
mov
or
mov
add
push
dec
repnz
es
or
iret
jp
jle,pn
repnz
out
imul
cmpsl
jo
jge
adc
ds
mov
push
and
fiadds
and
sub
jnp
dec
outsl
stos
repnz
or
notb
outsl
inc
jbe
add
xor
push
jno
mov
loop
mov
dec
jecxz
push
stos
loope
mov
rcl
aam
adc
test
xchg
bswap
into
add
cmp
scas
sahf
cmp
pop
popf
das
testb
adc
outsb
fisttps
clc
ret
cwtl
sbb
pusha
adc
data16
daa
push
cmc
push
lahf
aaa
mov
inc
dec
sub
ja
jae
leave
leave
jmp
scas
inc
mov
mov
ja
dec
dec
jo
insl
pop
movsb
fsubs
loop
xor
adc
pusha
out
adc
mov
dec
mov
dec
push
inc
pop
pop
jo
data16
sbb
dec
inc
mov
inc
push
negl
xor
pop
jle
inc
xchg
sahf
xlat
enter
lods
mov
mov
or
out
mov
sti
adc
cwtl
mov
out
cmp
es
pop
stc
flds
mov
out
insb
sbb
sbb
in
add
popf
pushf
les
pop
mov
push
and
mov
fwait
xchg
pop
cwtl
mov
ret
or
sarb
sbb
jae
sub
in
add
mov
jle
test
int
data16
pop
mull
imul
callw
aas
inc
fmuls
jg
jbe
mov
arpl
dec
idivl
popf
ja
xchg
sbb
test
sbb
mov
xor
pop
sub
mov
mov
popf
xor
clc
cs
push
xchg
icebp
jg
mov
in
xchg
pusha
push
jp
jge
out
xchg
in
out
or
or
pop
push
subl
in
idivb
repz
clc
push
lea
adc
sub
notb
rol
inc
and
dec
sub
sahf
mov
lock
iret
mov
cld
or
inc
push
add
mov
ror
mov
data16
cmp
lcall
das
aas
lcall
mov
in
ljmp
or
in
sbb
mov
mov
jmp
iret
sbbl
sub
add
ss
fimuls
xchg
xor
test
shlb
mov
mov
dec
out
push
test
and
enter
outsl
aas
aaa
cmp
in
push
hlt
int3
or
cld
dec
je
insb
xchg
jbe
in
add
popa
add
mov
pop
sahf
loop
cs
inc
adcb
sub
daa
mov
push
ret
pop
mov
pop
inc
sbb
sti
mov
sarl
jne
push
sub
ljmp
push
adc
pop
shlb
pcmpgtw
jmp
in
jp
xor
fstpl
aas
aam
mov
xchg
mov
dec
test
xchg
in
sub
jmp
mov
inc
adc
arpl
and
dec
popa
outsl
mov
and
subb
pushf
jb
or
out
and
daa
mov
pop
jbe
imul
or
sbbb
xor
sbb
cmp
pop
mov
sub
dec
jp
jae
into
lock
push
sub
mov
cmpsb
loope
ss
mov
push
dec
lock
mov
lret
rclb
mov
push
xor
xorb
in
mov
xor
test
cmp
scas
movsl
jae
xor
jecxz
shrb
enter
shll
ljmp
call
inc
jb
fs
pop
lock
cmp
dec
and
cmp
or
outsb
pop
jnp
in
das
lret
aam
in
ja
scas
pop
addb
in
mov
out
sbb
aam
movsl
xlat
insl
jecxz
outsb
inc
and
mov
mov
imul
cmp
frstor
ja
and
idiv
push
mov
adc
jle
rclb
lcall
jae
jmp
out
mov
or
jge
inc
cltd
call
sub
leave
into
mov
int
loope
cld
adc
sbbb
bound
hlt
ljmp
mov
adc
and
sbb
sub
movsl
es
loop
jo
cmpsb
sbb
dec
rsm
jo
js
ror
iret
sbb
out
cmp
pop
in
sbb
push
pop
adc
cbtw
mov
int
or
in
dec
ret
lret
shl
mov
jmp
adc
inc
xchg
scas
gs
pop
cmp
shrb
les
or
pop
xor
mov
and
ja
mov
ret
xchg
out
stos
xchg
sub
xlat
sbb
inc
ror
xchg
and
call
out
lret
inc
push
repnz
fstpl
decb
dec
jb
insb
xchg
sbb
push
mov
stc
popa
xchg
and
imul
mov
outsl
cld
cmpl
pop
sbbl
push
icebp
pop
movsl
dec
testl
push
ret
mov
cmp
dec
lds
movsl
popf
sub
int3
mov
sahf
fisubl
hlt
js
cmp
sub
rorb
lods
cmc
xor
mov
and
adc
xchg
into
or
scas
mov
jnp
jbe
testb
sbb
mov
mov
movsb
andb
add
add
je
cmp
iret
and
sub
and
lret
push
cmp
xchg
ss
test
mov
push
sahf
or
sbb
fldl
lds
xor
inc
repz
nop
and
aaa
inc
xchg
cmp
jmp
aam
jecxz
mov
pop
daa
mov
xchg
adc
jge
push
dec
adc
sahf
push
insb
mov
ret
cmpsl
mov
push
cmc
fcoms
add
inc
sbb
add
mov
dec
iret
xlat
jno
xchg
scas
sbb
pop
inc
fldcw
push
sahf
and
lahf
pop
xor
push
lods
pop
leave
inc
and
outsl
push
adc
lahf
push
int
jg
loopne
inc
daa
push
or
xchg
xchg
out
insl
mov
add
cli
sbb
inc
hlt
fidivrs
repnz
cli
cmovg
out
inc
push
mov
shl
scas
lret
shll
dec
push
cwtl
sbb
dec
push
int3
sbb
xor
pop
out
xor
push
adc
and
or
mov
sub
or
imul
fisubrs
std
add
inc
mov
adc
xchg
inc
movsl
sbb
add
in
mov
sti
cwtl
jmp
mov
mov
dec
addr16
ret
stos
mov
mov
bound
push
pop
popf
push
mov
mov
subl
mov
jno
stos
or
out
into
daa
add
das
fistpl
pop
hlt
cmp
push
mov
ljmp
icebp
mov
cmp
push
mov
pop
mov
mov
or
leave
mov
insl
sbb
inc
pop
or
lahf
adc
mov
test
jne
cs
mov
cmp
xchg
aad
rcll
stos
lret
inc
inc
cmp
push
pusha
cmp
or
test
xlat
and
inc
mov
ds
push
cmpsb
das
and
es
pop
mov
vmread
lret
lods
sub
dec
adc
scas
enter
jge
or
xchg
lods
dec
dec
inc
adc
int
call
arpl
add
call
inc
cmp
cmc
orb
nop
call
insb
shll
rol
call
pop
test
mov
and
jmp
imul
mov
bound
pop
mov
js
push
sahf
ret
sbb
xchg
push
dec
push
aad
into
mov
inc
jp
add
cmp
stc
sti
xor
rolb
xor
pop
dec
enter
xchg
pop
push
loopne
or
jecxz
add
movsb
popf
jbe
popa
sub
and
arpl
cmp
imul
hlt
and
fdivs
data16
pop
fistl
mov
insb
push
add
xor
add
aad
jg
jecxz
ficomps
pop
and
sarl
arpl
jo
xor
xchg
pop
aas
mov
pop
and
and
mov
or
cmpsb
sub
or
xlat
mov
push
sbb
cmp
cmp
xchg
in
mov
ja
inc
test
in
jae
xchg
mov
mov
cmpb
hlt
xor
jbe
clc
add
or
in
push
xchg
or
ret
pusha
outsl
or
dec
adc
fdivr
pop
rclb
xor
das
cltd
mov
fs
xchg
fs
inc
aam
sub
push
pop
mov
mov
jp
insb
inc
enter
add
or
add
les
cld
dec
push
shll
xor
lds
sbb
in
jle
movsl
inc
jnp
data16
ds
or
jge
stc
jp
inc
inc
or
mov
push
data16
bound
dec
jne
bound
lds
cmpsb
xchg
popf
fincstp
inc
fnstenv
fucomi
sarl
sub
js
xor
mov
fsubrl
sarl
mov
punpckldq
push
jo
inc
std
dec
mov
repz
xchg
lods
mov
setl
xchg
and
dec
ds
cmp
outsl
daa
mov
adc
scas
loope
daa
in
inc
xor
es
cmpsb
inc
bound
push
test
jp
js
mov
aas
scas
and
shll
pop
imul
dec
cwtl
imul
fwait
xchg
call
sbb
in
xchg
in
imul
inc
inc
insb
mov
xchg
outsl
mov
mov
movsl
inc
dec
xor
aam
sub
mov
es
in
sub
psubb
insl
int3
nop
add
or
movsl
and
sub
inc
addr16
in
inc
cmp
xchg
xchg
xlat
ja
adc
out
sahf
mov
mov
cltd
addb
sub
imul
repz
lret
add
xor
clc
inc
jp
aaa
sbb
xchg
in
les
sbb
pop
sbb
iret
sbb
andl
inc
fistl
aad
loopne
in
orl
mov
leave
mov
or
loop
loope
mov
fdiv
inc
mov
mov
outsl
adc
inc
push
mov
jle
insb
insb
pop
xor
leave
cli
inc
shrb
int
ret
mov
in
imul
adc
sahf
add
fistpll
outsl
jno
out
mov
shlb
mov
aam
sbb
pusha
sbb
clc
and
pop
shrl
xchg
fisubl
adc
xor
psubb
inc
cwtl
pop
jp
mov
ret
repnz
in
jo
negl
imul
cld
sahf
mov
push
push
ret
test
stos
jne
inc
xchg
adc
xchg
xor
jo
popf
adc
ret
leave
cmp
lock
loope
add
out
shlb
jp
icebp
outsb
scas
mov
lds
adc
mov
inc
cmp
dec
mov
aaa
cmp
and
mov
movsl
push
bound
lods
xor
imull
mov
popa
adc
lock
xchg
std
lds
dec
mov
movsl
cmp
pop
inc
das
sbb
dec
pop
mov
subb
dec
jae
test
adc
rep
lcall
sar
mov
cmp
pushf
xor
adc
aam
aad
sub
cmpl
add
sbb
xchg
xchg
inc
aaa
xor
lret
sbb
pop
scas
xor
out
cmpl
loop
push
jp
jno
jb
test
push
icebp
lcall
mov
adc
aam
sbb
cmp
inc
aas
mov
negl
jle
popf
rclb
and
add
movsl
push
into
movsl
push
cld
jle,pn
std
dec
push
xor
mov
into
add
ja
aas
cmpsl
aaa
sbb
gs
out
dec
add
inc
cld
leave
inc
fstp
xchg
mov
aaa
adc
push
xchg
lea
lret
mov
adc
ret
loopne
incb
loop
pop
out
push
in
out
and
es
out
aad
adc
adc
add
xor
ret
in
sbb
mov
push
ja
cli
mov
pop
pop
jge
out
mov
sbb
and
clc
movsb
inc
mov
pop
pop
mov
lahf
fwait
mov
cmp
sbb
shlb
inc
or
add
jae
push
fwait
jle
lret
cmp
mov
cwtl
scas
or
fiadds
xor
js
dec
lock
sbb
ficompl
daa
inc
or
inc
and
pop
mov
nop
stos
lret
aas
push
and
xchg
and
add
xchg
add
repnz
aad
push
pusha
jmp
push
inc
pop
enter
mov
out
mov
and
mov
xor
cmp
sbb
or
pop
xchg
mov
ja
xchg
or
movsl
mov
faddl
mov
in
mov
insb
push
mov
lea
inc
fwait
mov
xor
mov
adc
push
movsb
sbb
cli
decb
push
sbb
jno
mov
negl
ficoml
push
addr16
sub
shlb
dec
insl
test
pop
ret
sub
push
cmp
inc
cmp
sti
repnz
mov
dec
sub
sbb
divb
fisttpll
pop
outsl
cmp
xchg
mov
ret
and
cmpsb
cli
lods
mov
mov
adc
and
dec
sbb
or
lock
inc
fwait
sub
pushf
rcrb
shl
ficomps
sbbl
ljmp
or
xor
jmp
push
test
in
or
sub
adc
mov
mov
mov
int
roll
fwait
mov
xchg
fildl
in
cmpsl
stos
xorl
call
or
push
jbe
add
and
cmp
add
imul
sbb
ljmp
jmp
lahf
aaa
hlt
cld
inc
cmp
pop
mov
cld
dec
sbb
cwtl
inc
jg
repz
inc
imul
add
push
push
pop
jecxz
sub
aad
outsb
shr
jmp
test
push
cmp
cwtl
fldenv
inc
add
xchg
mov
mov
cmp
push
pop
dec
ja
gs
cmp
int3
mov
or
sub
or
fbld
mov
pop
sbb
clc
xor
xchg
xor
mov
sbb
sahf
je
jg
xor
jecxz
sub
push
dec
push
lahf
cmp
pop
out
dec
jp
xlat
xor
in
lds
push
ds
out
push
adc
push
mov
out
test
push
notb
repnz
ljmp
sbb
xor
jecxz
fsubrp
sub
mov
sti
lds
cmpsl
inc
shlb
cmp
imul
adc
pop
popf
movsl
and
fwait
sbb
sbb
daa
sbb
sbb
inc
icebp
in
das
imul
mov
jmp
sub
out
lret
stc
pop
pop
mov
add
push
loop
or
mov
xorb
or
dec
jo
mov
push
jb
inc
jno
pop
jecxz
mov
in
and
mov
inc
pop
icebp
inc
add
sub
ja
add
mov
into
lods
and
inc
cmpsl
mov
fsts
cld
pop
icebp
mov
and
sbb
cmp
insl
mov
sbb
popa
sub
push
xchg
ds
out
xchg
bound
rol
pop
cld
add
test
mov
mov
in
mov
mov
pop
mov
fwait
mov
lds
inc
int
sub
insb
mov
mov
imul
pop
jge
test
mov
jp
cmp
xorb
int
sub
push
sub
adc
pop
dec
mov
mov
test
mov
mov
mov
ja
mov
pop
out
fnstsw
push
ret
bound
mov
add
out
sub
mov
mov
sub
xchg
loop
cmpl
and
loope
fiadds
xor
repz
ja
xchg
addr16
pushf
rorl
in
insl
cmpsl
xchg
xchg
mov
pop
mov
push
push
xor
adc
push
jne
stos
jp
arpl
repz
rorb
out
movsl
sub
fcmovu
outsb
dec
inc
mov
stos
mov
shlb
xchg
add
mov
xor
pop
cli
pop
lcall
inc
cmpl
sub
xchg
pop
jo
in
pop
pop
dec
sbb
dec
imul
jge
dec
psubusw
scas
mov
call
or
xor
mov
int
repz
cwtl
in
mov
dec
push
mov
out
jae
sub
xor
pop
pop
xlat
jo
fcmovu
cli
xchg
mov
mov
dec
adc
jno
add
cmp
pop
sahf
lcall
add
frstor
pop
push
sub
scas
lods
push
insb
mov
push
out
pop
pop
leave
aaa
lods
test
push
in
dec
cmp
stc
and
out
cmp
or
popl
loop
add
jp
divl
movsl
xorl
push
inc
imul
add
cmp
mov
nop
mov
cmp
aas
ss
and
pop
inc
in
dec
mov
xor
cmpsl
cmpb
and
gs
sbb
addb
cmc
stos
xchg
sbb
mov
hlt
xchg
fildl
pop
push
dec
push
push
bswap
adc
mov
sub
push
aaa
cmp
dec
arpl
sub
mov
int
pop
aad
or
inc
shrb
mov
cmpb
repz
push
jnp
pushf
mov
shrl
xchg
adc
pop
jl
mov
push
adc
je
out
adc
cmc
mov
hlt
pop
cmp
mov
jge
inc
sbb
sahf
mov
inc
movsb
or
push
sub
cmp
dec
out
aam
dec
mov
mov
and
lea
sbb
sub
fs
lods
imul
xor
enter
sahf
xorb
jmp
and
leave
inc
popf
dec
and
mov
sahf
xor
add
cmp
loopne
mov
jae
add
xchg
bound
xor
pop
xchg
sub
outsb
enter
push
lock
add
pushf
fisttpl
mov
mov
sbbb
push
sub
sub
jnp
add
jl
cmc
inc
mov
dec
popa
xchg
lahf
and
xor
pop
ja
repnz
int3
test
xchg
mov
jae
jge
jne
je
push
daa
jl
sub
sub
adc
imul
jg
stos
pop
scas
sub
mov
pop
push
add
pop
imul
cld
fdivrs
ljmp
not
cmpb
jne
lret
and
addb
filds
in
adc
cmp
sarl
mov
inc
rolb
push
imul
icebp
xchg
adc
nop
mov
sbb
mov
push
cmpl
pop
in
lock
pop
std
inc
add
adc
and
rorb
ret
addr16
jnp
lods
inc
pusha
inc
push
test
cmp
movsl
scas
mov
cmp
pop
ja
xchg
inc
lahf
and
call
scas
adc
cmc
hlt
and
dec
rclb
ds
shr
movsl
cmp
movsb
sbb
insl
out
inc
mov
add
sbb
ficoml
sub
rcrl
jns
lods
mov
jecxz
xor
adc
pop
push
jp
mov
cs
lcall
fwait
sarb
xchg
je
xchg
mov
into
loopne
rcrb
mov
ret
sub
aad
loopne
ficompl
cmpsl
lock
and
inc
jbe
mov
into
mov
lret
fs
cli
adc
roll
dec
loopne
outsb
xchg
xor
mov
sbb
jnp
inc
sub
test
aam
inc
lds
pop
fnstenv
mov
add
sbb
stos
addr16
in
repnz
xlat
cld
bound
push
out
fsubrl
inc
iret
lock
xlat
loop
sub
lret
mov
cmp
cltd
ljmp
test
cmp
sub
divb
xchg
sub
pop
xchg
sub
adc
popa
movsl
out
push
xor
icebp
movsb
mov
in
test
daa
movsb
pop
jae
out
sub
sbb
test
sti
mov
incl
adc
pop
push
sbb
and
enter
push
or
mov
add
test
icebp
add
imul
and
hlt
cmp
nop
daa
aam
xor
popf
adc
addr16
xorb
inc
jnp
sbb
enter
fcmove
jne
or
ja
orb
rclb
pop
and
jno
pop
sbb
mov
pop
lods
mov
adc
adcl
mov
jbe
lret
movsl
add
cmp
popf
inc
mov
aaa
dec
adc
in
stos
add
jnp
push
addr16
cmc
popa
out
sbb
jle
es
sbb
pop
add
or
stos
push
lods
test
pop
cmpsb
rorb
lock
sbbb
ss
sahf
repnz
mov
data16
mov
push
rclb
pop
out
aaa
cmp
adc
xchg
cwtl
mov
pop
xchg
push
cmpsl
adc
gs
mov
inc
dec
pop
or
xchg
in
jb
cld
loope
mov
mov
sub
mov
outsl
add
inc
lock
mov
inc
dec
cmpl
jg
mov
ljmp
pop
stos
icebp
pop
loopne
mov
das
lock
adc
mov
out
push
inc
and
lea
mov
negb
and
inc
xchg
loopne
pop
sbb
test
xchg
jp
clc
cmp
aaa
jo
adc
out
jp
scas
rsm
mull
jg
sbb
hlt
cwtl
push
mov
push
ret
xchg
push
xor
clc
xor
fcmovnbe
lods
add
jp
lret
or
mov
in
mov
jo
pop
out
call
mov
sbb
sub
shl
push
or
xor
sbb
mov
inc
and
jb
scas
sbb
mov
jecxz
fstl
xor
mov
xchg
packuswb
flds
inc
pushf
test
adc
push
lods
sub
xor
pusha
and
xor
dec
shrl
aas
mov
gs
adc
mov
pop
jbe
scas
sbb
cmp
enter
pop
rclb
sbb
ret
cs
add
popf
push
gs
or
push
jnp
inc
hlt
push
and
lock
gs
icebp
sbb
mov
push
xchg
sbb
insl
adc
dec
cmp
fcoms
pusha
cltd
mov
adc
or
sub
push
xor
outsl
stc
ret
add
repz
cmpsl
add
ret
flds
sbb
xor
push
mov
lods
in
sub
push
mov
js
or
cltd
xchg
out
cmp
mov
test
ret
arpl
cmp
sti
jl
dec
dec
dec
cmpsb
fdiv
jp
and
fnstenv
arpl
xchg
jns
ret
add
or
mov
mov
das
jns
stos
lret
inc
sbb
xchg
xlat
jbe
and
ret
xlat
pop
or
mov
push
int
add
test
or
cld
shlb
stos
mov
test
je
add
mov
fwait
sub
fiaddl
scas
sbb
or
mov
cmp
xchg
xchg
int3
dec
adcl
adc
mov
lods
fnstsw
push
pop
or
fsubrs
cld
xor
pushf
add
mov
xor
int
sub
sarl
pop
outsb
mov
pop
cwtl
insl
cmp
mov
out
clc
jae
jno
mov
jg
icebp
int
inc
mov
lret
lock
mov
jns
out
mov
gs
push
or
aaa
arpl
jl
adc
mov
cld
sub
je
jg
jg
mov
aad
push
dec
repnz
xor
jb
or
xor
sub
sub
mov
adc
cmpsb
jecxz
leave
in
sbbl
les
dec
repz
pop
pusha
pop
dec
jbe
mulb
mov
dec
push
movsl
pop
xchg
ljmp
ja
aas
and
lods
jnp
into
inc
dec
loope
xchg
sub
ret
adc
test
faddl
and
pop
adc
int
sub
pusha
mov
div
adc
xchg
scas
cmp
mov
xchg
sahf
push
jl
xor
sub
jb
xor
mov
or
ret
cs
jno
dec
add
sahf
jno
inc
push
cmpsb
mov
adcl
icebp
pusha
sti
xchg
mov
xor
int3
data16
mov
and
in
lcall
add
movsl
shll
sub
or
sbb
pop
mov
fnstenv
fidivrs
xchg
leave
xchg
arpl
lods
shlb
aad
insb
ret
clc
and
add
mov
mov
xchg
sub
adc
cltd
xchg
jl
jl
jo
pop
int3
mov
xor
test
cmc
pop
push
xchg
jmp
add
mov
sub
test
cmpsl
jno
in
mov
cmp
in
inc
shr
orl
cmp
out
xorl
xchg
pop
push
in
lock
xor
and
push
js
push
jb
es
mov
sub
fdiv
scas
dec
mov
or
xor
sbb
and
sti
cmp
std
cmc
sub
jge
jg
jecxz
add
shr
ja
lock
mov
sbb
je
pushf
addb
or
pop
pop
out
jmp
dec
test
cmp
adc
adc
faddl
or
insl
idiv
in
jl
add
xor
movsb
mov
popa
lret
inc
out
mov
xor
mov
jnp
cmpsb
fmull
idivb
cmp
movl
cmp
pop
ret
fwait
mov
inc
ss
pop
sbb
imul
adc
lock
dec
jno
aam
pop
fs
fs
loope
jmp
and
clc
adc
outsl
ret
jecxz
sbb
or
jecxz
jl
or
sub
jae
jbe
dec
out
in
pop
les
pop
movl
mov
lret
arpl
fidivs
hlt
out
sbb
divl
add
mov
xchg
sbb
push
clc
insl
pushf
das
lret
std
rcl
mov
mov
lcall
movsb
ja
jmp
cld
add
sub
or
arpl
aam
cmp
jge
dec
sbb
clc
movsl
inc
and
sbbb
imul
lds
dec
add
rorb
dec
jp
dec
adc
jge
lods
mov
cs
mov
jne
push
insb
cmpps
sub
icebp
out
cltd
jle
mov
xor
sti
cmp
cmp
pushf
sub
test
aaa
xor
mov
fwait
jmp
lret
xor
xchg
stos
cmp
out
jle
mov
mov
mov
ss
or
sbb
adc
add
popf
ss
or
dec
mov
jle,pt
push
repz
gs
aas
imulb
popf
dec
pop
fsts
js
notb
mov
aaa
mov
insl
insb
out
push
repnz
test
pop
notb
pop
stos
jne
and
sbb
sbb
or
inc
mov
inc
jecxz
cs
out
outsb
mov
ljmp
addr16
push
add
or
xor
push
xor
std
leave
das
fildl
xchg
sbb
ds
mov
sahf
enter
push
ss
incl
dec
int3
sbb
cltd
rorb
inc
cmpb
inc
or
mov
cltd
cwtl
movsl
cmpsl
pop
xlat
sbb
ds
pop
adc
jnp
mov
sbb
int
das
test
inc
xchg
pop
jmp
xor
sbb
lods
add
xchg
in
rclb
cmc
out
sub
pop
mov
mov
test
xor
mov
jge
cmpsl
jmp
xorl
sbb
jae
mov
pop
movsl
push
test
lods
push
push
or
loop
ret
sbb
rcr
fistl
imul
pop
or
int
rolb
fdivl
xchg
xor
out
loopne
mov
outsl
mov
and
and
cmpb
lods
sbb
mov
add
scas
out
arpl
cld
push
and
xor
push
ret
into
aas
movsb
out
ljmp
test
and
f2xm1
sub
and
mov
cs
fstl
sahf
dec
ss
aaa
inc
pop
scas
shl
xlat
int3
add
mov
stos
js
inc
cwtl
dec
or
fcoml
std
sub
mov
sbb
push
mov
jb
sti
scas
jmp
xchg
subl
add
iret
or
jo
shl
in
sarb
lock
shl
cmp
fiadds
add
cwtl
push
loope
mov
and
scas
mov
in
mov
pop
ss
dec
add
push
mov
pop
inc
rclb
mov
sub
js
scas
test
das
icebp
bnd
push
pusha
push
xchg
xchg
jle
xchg
mov
or
icebp
jb
clc
xchg
jbe
or
dec
pop
sbb
pushf
xor
adc
out
and
push
push
sti
jo
sub
jge
hlt
jle
jp
pop
jbe
xchg
call
push
sahf
mov
into
mov
push
cmp
cmp
inc
sbb
adc
sbb
roll
and
mov
test
mov
out
pop
das
push
or
lea
ds
jmp
jo
call
inc
sub
aaa
adc
loope
mov
jb
outsb
sbb
addr16
add
xchg
xchg
shl
cli
aaa
addr16
mov
aaa
or
ror
inc
std
inc
int3
out
subl
sbb
aas
insb
add
fadds
or
gs
leave
pop
lret
fmuls
jp
in
sbb
test
push
add
pop
or
jbe
adc
mov
in
sub
es
mov
cwtl
jne
sbb
out
in
dec
push
xor
dec
xor
mov
scas
push
and
jae
inc
mov
dec
rcrb
jnp
stc
mov
and
cmovne
imul
aaa
lfs
scas
dec
shrb
fstl
add
sbb
imul
and
pop
bnd
jae
jb
xchg
inc
mov
imul
loope
cwtl
or
sub
jmp
pop
xchg
jbe
and
push
ljmp
out
add
xchg
lahf
or
and
cmp
mov
clc
in
adc
aad
xchg
jno
cmpl
sub
push
fwait
jmp
cld
in
notl
lcall
dec
js
mov
pop
sbb
jl
repnz
mov
stos
or
add
adc
insl
nop
mov
mov
fs
push
xor
cmpsl
js,pn
push
inc
int
test
stos
sub
cwtl
iret
aas
or
mov
aam
in
into
sub
fidivl
lock
fdivl
mov
das
sub
test
mov
add
mov
mov
push
cmpsb
xor
cmp
xchg
mov
mov
ja
arpl
imul
hlt
loop
lahf
dec
ja
or
sub
mov
jne
xchg
sub
or
cwtl
fstl
add
or
sti
leave
je
add
push
aad
mov
adc
cltd
fnstcw
test
pop
ret
call
jl
andl
mov
rclb
subb
fmull
insl
scas
jnp
shrb
js
lahf
cmp
jo
xor
xchg
jne
pop
push
rcrb
jle
add
cmp
mov
jo
aas
dec
rorl
aaa
into
jmp
sub
push
push
enter
test
mov
insl
add
scas
adc
call
mov
jne
xchg
cmpsl
inc
cltd
sbb
out
dec
mov
in
fucomp
or
gs
flds
sarb
lods
js
or
scas
ljmp
outsl
loopne
mov
aas
mov
inc
nop
cli
add
jg
adc
jns
jmp
sbb
dec
xor
cmp
mov
push
inc
cmp
push
jae
and
jo
xor
xor
shlb
repnz
xchg
dec
mov
push
sub
pop
and
inc
push
repz
test
hlt
mov
sti
cltd
in
outsl
jbe
inc
imul
pop
or
add
mov
xchg
stc
pop
pop
out
lret
inc
jle
or
add
inc
rcl
xlat
dec
sbb
and
mov
mov
cmpb
push
nop
icebp
push
or
cs
fucom
pop
and
ret
jnp
aam
loopne
push
push
jb
push
xchg
mov
sahf
fbld
dec
or
mov
xor
push
cmp
jno
mov
inc
nop
xchg
pusha
movsl
inc
int3
ret
je
inc
lret
cltd
lds
cmp
pand
mov
jecxz
in
repz
aas
aam
xchg
mov
mov
and
ss
test
inc
sub
xchg
add
out
in
nop
sbb
data16
jne
mov
fcoml
pop
xor
cltd
pushf
loop
mov
pop
xchg
cmpsl
out
hlt
adc
stc
imul
pavgb
add
push
fisubrs
imul
fistpl
repnz
repz
out
pusha
icebp
add
fdiv
popf
test
fs
cmp
mov
out
dec
popl
int3
mov
int
push
sub
popa
jg
stc
fadd
cwtl
add
sub
add
mov
iret
jo
int3
pop
les
jmp
push
nop
hlt
repnz
pop
adc
fadds
out
cmp
mov
shll
cmpsb
mov
pop
mov
test
out
mov
test
notl
out
mov
aam
or
pushf
movsb
fcmovbe
jbe
sbb
inc
push
loop
popa
and
inc
cmp
add
jmp
cltd
test
loop
pop
ret
mov
enter
arpl
bound
sub
inc
mov
adc
push
or
mov
int3
ret
fsubs
stc
xchg
cld
shlb
ss
stos
adc
mov
dec
add
pop
fnstcw
test
mov
outsb
xchg
cs
cwtl
dec
push
clc
mov
popa
ret
movsb
xor
insl
adc
xchg
lock
inc
mov
xor
rclb
popa
cmp
iret
int3
pop
inc
and
pop
ja
sub
mov
mov
daa
enterw
jne
sbb
cmp
scas
jl
ja
popf
sub
mov
cmp
ds
repz
int
jl
aad
shr
insl
pop
push
dec
adc
sbb
je
sti
popf
stos
cli
xchg
jns
cmp
mov
cmp
jge
pop
jne
sti
sub
lret
enter
leave
insl
lods
mov
or
lcall
xchg
push
adc
xchg
iret
cwtl
inc
sub
mov
mov
int
push
out
insl
adc
jmp
repz
pop
jb
outsb
mov
and
jae
shll
add
pop
mov
lds
dec
sub
adc
sub
bswap
xor
jne
rolb
sub
sbb
shl
pop
xor
push
popaw
mov
mov
mov
aam
push
ds
mov
out
lret
lods
jb
mov
mov
and
sahf
add
cld
and
cmp
jmp
enter
shl
xchg
and
dec
jmp
and
xor
inc
into
fisttpll
inc
dec
inc
mov
test
jne
xchg
xor
mov
adc
popl
mov
fwait
cltd
xor
cld
outsb
mov
mov
ja
pop
xchg
adc
or
pusha
jns
roll
sti
mov
mov
aad
mov
movsl
push
dec
fsubl
scas
pop
mov
add
adcl
pop
add
mov
jmp
inc
sar
dec
jns
cltd
mov
push
jge
add
aaa
das
ja
incb
dec
bnd
mov
inc
sub
pop
mov
inc
hlt
hlt
ljmp
clc
jb
das
mov
bound
js
test
jg
aas
rol
mov
cmpsb
mov
and
pop
xor
in
std
jne
push
cmp
lock
ss
lret
sbb
add
xlat
mov
mov
mov
mov
add
repnz
push
sbb
int3
cld
pop
pop
lods
push
ficompl
push
mov
mov
mov
cmp
mov
dec
cltd
lock
xor
subb
cmp
in
dec
insl
sub
lret
add
xor
shll
push
sub
sbb
mov
xorb
ficomps
and
or
fists
jg
inc
and
inc
je
lock
push
and
adc
mov
int
mov
shlb
lret
repnz
add
fpatan
sub
xor
pusha
dec
lea
mov
add
push
cmpsl
inc
iret
lods
add
or
mov
mov
and
jae
scas
mov
pop
cmpsl
jns
cld
bound
stos
das
xchg
jbe
sbb
ret
mov
cltd
movsb
mov
out
ljmp
je
mov
rolb
pop
mov
sti
add
fs
icebp
imull
mov
fimull
in
dec
leave
fidivl
es
ror
pop
iret
sub
mov
in
or
fstpl
arpl
jg
loop
sbb
push
cli
inc
lcall
sub
pushf
push
popa
sub
mov
ljmp
pop
sub
mov
fwait
out
mov
out
inc
ret
cs
mov
sub
add
dec
test
xor
in
adc
roll
mov
out
int
mov
fstl
scas
jmp
jns
mov
xchg
lcall
xchg
cmpsl
inc
cmp
jne
pop
repz
or
pop
xchg
test
push
mov
daa
push
xchg
or
ss
rcr
mov
icebp
cli
nop
add
mov
in
jmp
pop
leave
cmp
fsubs
pop
test
imulb
push
loope
ret
call
aaa
loop
je
xor
incl
ss
repnz
data16
and
mov
xchg
sub
mov
pushf
sbb
icebp
lods
dec
pop
ds
cmc
mov
xchg
not
jge
popa
sbb
decb
mov
mov
mov
jno
rorl
lock
adc
jecxz
rorb
lret
imul
cmpsb
fucomip
fs
push
imul
lahf
jnp
push
jb
push
jne
xchg
xchg
dec
mov
push
push
out
es
pop
call
repnz
xchg
dec
stc
inc
jb
pop
or
stos
jge
cli
addl
push
std
and
imul
cmpsl
mov
mov
push
roll
shlb
cmpsl
pop
insb
repnz
and
push
lahf
push
repnz
and
pop
fbld
test
test
mov
aaa
mov
sub
icebp
sub
arpl
addr16
popa
sti
addr16
lahf
mov
dec
mov
and
dec
gs
mov
sbb
mov
mov
ja
push
ret
jmp
ds
shll
push
xchg
mov
outsl
sbb
out
aam
add
pop
dec
xlat
mov
loope
daa
dec
jnp
adc
stc
lcall
gs
leave
jnp
aas
mov
xor
int
test
sub
cmp
sbb
push
cmp
ljmp
scas
pop
test
xchg
test
mov
mov
sahf
push
in
shrl
test
xor
xchg
outsl
pop
inc
adc
test
mov
sub
addl
call
popf
pop
jno
je
bound
loop
push
subb
mov
lahf
imull
ds
jnp,pt
outsb
sbb
sub
leave
adc
ss
stos
loope
sub
mov
and
arpl
xchg
jno
mov
mov
and
sti
pushf
xchg
into
jnp
in
jmp
pop
movsb
pop
xchg
xor
inc
test
hlt
mov
push
cmp
jns
and
and
enter
mov
aam
pop
pop
sub
jmp
imul
adc
pop
xchg
sbb
aam
shrl
mulb
sub
mov
bound
aad
push
lret
inc
test
faddl
ret
stos
in
mov
sbb
mov
fnstenv
push
subb
decl
sbb
out
xor
mov
lods
hlt
mov
cmpsl
cli
mul
loope
imul
pop
and
sbb
sub
sbb
rorb
sub
sbb
scas
or
js
push
ss
jecxz
mov
iret
pop
add
jl
scas
add
push
jmp
sub
leave
mov
sar
daa
daa
mov
repz
cld
out
fwait
scas
sbb
add
cmc
scas
lret
dec
xor
out
pop
inc
lods
jbe
and
xchg
push
xchg
aaa
or
jmp
loopne
or
sub
mov
or
shrb
and
loopne
mov
sub
mov
daa
inc
mov
mov
scas
ffreep
hlt
push
cmc
dec
aad
dec
ss
cmp
push
and
adc
icebp
adcb
sbb
inc
push
cmpsb
sub
repz
cli
imul
or
add
jno
fidivl
iret
xchg
jns
lds
cwtl
push
push
pop
test
insl
push
out
test
clc
add
xchg
mov
xor
jl
sbb
cmpb
sub
test
xchg
push
or
dec
incl
dec
adc
xor
pop
sbb
outsl
ficoms
jns
pushf
fsubrp
iret
imul
or
cmpsb
fwait
cwtl
popa
fisttpl
and
cmp
dec
jo
push
push
xchg
stos
stc
movsl
add
inc
call
mov
iret
cmpsl
ret
dec
push
adc
orb
inc
stos
adcl
and
mov
mov
sbb
bound
ljmp
xchg
mov
or
mov
mov
or
insb
cld
pop
cmp
stc
hlt
or
push
pop
pop
push
pop
mov
stc
xchg
inc
ss
dec
or
mov
repz
mov
dec
sbb
adc
xlat
or
int
je
xor
mov
push
mov
pusha
jbe
je
jo
aaa
out
es
fldcw
subl
insb
mov
clc
out
add
mov
push
addr16
mov
xchg
ret
adc
scas
cmp
push
pop
test
addr16
test
test
lds
jns
xchg
pop
sub
out
jae
mov
les
out
xchg
pop
mov
adc
sbb
mov
mov
sub
mov
cmp
js
jb
stos
aaa
and
lcall
sub
xor
xor
icebp
lds
popa
push
adc
adc
iret
jecxz
std
inc
xchg
loope
adc
fstl
into
xchg
popl
aaa
mov
ja
cmp
lea
mov
cwtl
ret
or
in
jb
pop
or
jno
mov
sbb
fdiv
sarl
out
pop
lea
pop
sub
shll
mov
jge
call
jl
je
jb
cmpb
inc
mov
arpl
mov
pop
loopne
pop
rorb
fwait
xchg
aad
lods
mov
ficompl
cmp
mov
pop
loop
jno
cli
cmp
xor
inc
rclb
js
aas
inc
and
xchg
popa
hlt
shll
das
dec
jg
outsb
mov
shrl
idivb
dec
pop
iret
mov
xchg
fildll
repnz
into
fs
jb
sbb
xchg
movsb
mov
mov
lret
and
xchg
pusha
mov
xchg
in
popa
push
sub
int3
xor
pop
data16
lret
push
pop
mov
adc
rorl
push
push
sbb
flds
rorb
shr
ljmp
xchg
xor
mov
insb
xor
daa
out
mov
mov
movsl
ja
loopne
adc
daa
push
jg
mov
lret
pop
mov
divb
jecxz
cmp
jmp
add
and
sbb
shll
dec
dec
xchg
lock
test
pushf
mov
cld
mov
mov
push
jge
xor
cld
aam
and
lea
inc
pop
cmpsl
jg
in
xchg
mov
ret
sbb
or
or
adc
andb
mov
mov
push
mov
repnz
loope
push
int3
arpl
fs
shrb
addr16
orb
xor
ficomps
lds
xchg
fidivrl
lea
leave
xlat
cs
lahf
test
push
mov
bound
fistl
pop
xchg
xchg
push
in
mov
mov
movsl
aaa
mov
sar
pop
adc
call
mov
bound
cmc
arpl
cld
ljmp
adc
pop
cmpsl
std
clc
dec
popf
mov
xchg
clc
loop
inc
dec
cli
fsubrl
jl
addr16
add
mov
mov
lret
imul
jmp
inc
popf
lds
push
mov
sbb
stc
cmpsb
inc
rorl
movsb
xchg
jge
push
je
sub
pusha
pop
rol
jb
sub
push
pop
add
int
clc
xchg
push
loopne
lcall
xlat
xchg
push
add
mov
iret
sbb
jecxz
xlat
iret
adcl
mov
adc
cli
aaa
lods
gs
clc
lret
int
adc
popf
loope
mov
cmp
jnp
mov
fdivrl
bound
push
pop
pop
cmp
jle
jne
add
add
rcrb
stos
pop
mov
repz
push
rorl
fdivs
out
push
addr16
scas
out
cmp
cmp
sbb
xchg
mov
rol
sbb
movsl
push
xchg
push
mov
into
out
and
call
xor
shll
sbb
stos
imul
sti
xrelease
push
mov
lcall
aam
pop
jle
ds
idivl
lret
mov
push
inc
pop
icebp
or
cmp
sbb
fwait
push
mov
pop
inc
jns
out
ret
xchg
ret
icebp
mov
daa
and
test
xchg
not
xchg
jp
fwait
push
stos
sub
xor
out
sub
outsb
dec
rorb
popf
lgs
pop
adc
sbb
cltd
push
shrb
adc
stos
dec
add
lods
jnp
jne
data16
call
es
or
push
das
es
imul
mov
test
adc
mov
lret
adc
inc
sub
jne
adc
xor
dec
fs
or
xor
arpl
adc
and
fisttpll
fs
loopne
lret
add
lock
test
imul
data16
and
mov
add
jle
xor
mov
push
mov
mov
mov
add
jns
jmp
into
in
in
mov
aad
push
add
orl
jb
mov
add
insb
push
inc
out
xor
xchg
jns
xchg
repnz
sbb
dec
pop
sub
add
ja
stos
das
mov
and
and
pop
add
pushf
push
lret
call
cmp
ficompl
loope
xor
mov
push
les
sahf
and
insb
dec
mov
insb
test
lcall
push
cs
ljmp
scas
push
mov
insb
or
adc
adc
ret
shl
lret
push
mov
divb
xchg
mov
icebp
mov
scas
pop
ja
rclb
sbb
insb
cmp
in
mov
cltd
push
sti
test
ret
dec
jl
test
loope
mov
pop
or
ss
push
push
and
test
cli
mov
movsb
or
dec
cli
lds
xor
adc
and
adc
jne
rcrl
pop
adc
mov
sahf
sti
das
xchg
addl
in
mov
cwtl
sbb
loope
pop
stos
sbb
push
mov
xchg
addr16
outsl
or
or
pop
mov
ret
push
popf
sub
cmp
mov
push
push
test
jle
jns
inc
sub
outsb
sub
push
aam
mov
and
xchg
out
and
bnd
leave
cmpsb
enter
and
in
ss
jle
adc
orl
mov
add
cltd
insl
ficompl
in
dec
jg
decl
sbb
push
aam
or
ret
xor
sub
mov
stos
call
or
test
loopne
push
push
das
push
in
adc
push
add
xor
dec
dec
xor
and
test
push
pop
std
das
add
shlb
push
pushf
test
inc
cmp
rcll
jge
dec
mov
jg
insl
sbb
ja
cmp
jecxz
mov
sbb
add
xlat
ds
pop
mov
sbb
sti
ficomps
push
pop
or
mov
mov
fisttpl
cwtl
inc
daa
js
aad
push
test
pop
fcoms
sbb
xor
jae
xor
aas
call
jne
int3
mov
cmp
fcom
test
cli
test
js
lds
aas
xor
and
xor
inc
icebp
pop
popa
inc
ds
xchg
inc
gs
lahf
push
cmpsl
lock
jno
enter
lcall
lds
mov
lds
inc
lcall
inc
sti
arpl
js
fs
xrelease
push
pop
das
fidivrs
es
mov
shrb
push
push
dec
in
cmc
mov
outsl
loope
dec
lods
jb
outsl
dec
clc
lret
dec
add
arpl
cmp
cmpb
adc
cmpsb
mov
sub
hlt
xor
mov
lock
call
xchg
xchg
out
loopne
hlt
lods
je
jnp
cmpsl
pop
mov
pushf
mov
mov
pop
jno
fwait
cmp
cld
cli
out
add
xor
ret
sahf
jo
cwtl
rolb
int
inc
mov
adc
push
sbb
dec
jnp
sub
fwait
inc
sbb
push
cmp
jo
gs
dec
xchg
add
movsb
ss
dec
push
or
xbegin
loopne
jne
dec
pushf
sub
rcrb
outsb
xor
cmc
and
and
mov
add
fcoms
cmp
pop
pop
sahf
add
ret
in
xchg
das
fnstsw
sbb
and
cmc
mov
outsl
mov
insb
fstl
rcrb
push
xchg
sub
aas
into
iret
insb
subb
jmp
mov
cwtl
movsl
pop
mov
push
loope
cmpsb
in
and
inc
pop
sbb
in
and
push
iret
sub
inc
or
faddl
dec
pop
lock
mov
adc
cwtl
fs
or
dec
cld
lods
xor
mov
mov
mov
pop
push
pop
scas
mov
out
adc
aas
adc
jmp
xchg
adc
test
jo
jp,pn
bound
lock
push
push
data16
adc
inc
xchg
into
sub
gs
enter
or
xchg
or
ja
adc
sub
andl
pop
lea
mov
cltd
or
std
mov
or
add
dec
xor
ss
ss
mov
pop
mov
fiaddl
cli
mov
enter
outsl
mov
lret
cmp
pop
pop
ret
mov
iret
xor
push
daa
test
in
lods
js
sub
push
ret
mov
inc
cmp
shll
jb
imul
divl
mov
call
fmuls
pop
inc
fcoml
inc
xchg
scas
pop
mov
xor
jp
dec
jne
aas
and
sbb
std
xor
mov
js
mov
xor
and
movsl
out
jb
push
mov
aaa
mov
pop
aas
add
das
in
insb
push
popa
and
ja
and
xlat
add
gs
xchg
xor
clc
or
enter
inc
or
sti
push
fildll
int3
stos
sbb
mov
cwtl
mov
enter
ss
test
fwait
je
loop
ja
in
in
mov
jb
dec
sbb
lods
stc
loope
push
fisubrl
fstpt
ljmp
mov
lea
cwtl
cmp
lahf
js
dec
ljmp
das
inc
jl
mov
into
les
in
shrb
push
push
loope
mov
xor
push
push
lret
mov
dec
stos
sub
cli
add
push
dec
push
popf
rorl
xor
data16
pop
dec
mov
out
mov
sub
out
mov
cs
aaa
and
leave
pop
outsb
dec
pop
cmp
addb
sub
je
push
dec
sbb
jmp
iret
mov
fcoml
pop
xchg
push
jg
sbb
add
mov
pop
xchg
and
ret
scas
les
xchg
mov
push
in
mov
out
orl
push
cwtl
mov
push
and
js
addb
nop
arpl
das
push
mov
mov
rol
lea
jb
cwtl
adc
data16
or
add
lret
lea
cmp
test
and
and
addl
and
in
outsb
or
pop
outsl
pop
mov
xor
cwtl
cmpsb
int
into
imul
mov
repz
iret
call
cmp
in
inc
jo
push
jae
sbb
dec
stc
fldt
jo
add
cmp
das
add
or
mov
sbb
mov
in
xchg
sar
cmp
push
push
mov
jno
xchg
lea
ret
gs
dec
add
movsl
push
sub
aas
mov
mov
call
in
cmc
xchg
sti
sahf
sub
jle
notl
sbb
out
xor
mov
adc
cli
mov
pop
insl
push
or
push
push
lods
push
sbb
or
mov
push
loop
cmp
popf
jo
cmp
adc
add
ficompl
pop
int3
lds
adc
scas
jg
cmp
mov
pop
lds
jecxz
sbb
add
add
pop
lods
inc
in
xlat
cli
adcl
cmpsb
push
pop
ret
adc
cmp
icebp
loopne
jl
and
push
cwtl
in
sbb
call
push
sti
out
lds
sub
mov
je
inc
dec
test
pop
loop
dec
sti
cs
dec
rcl
inc
cltd
push
sbb
xchg
dec
adc
repz
lea
fucomip
or
jbe
outsb
js
jl
adc
lcall
jbe
sbb
and
mov
lock
and
je
sbbl
hlt
xor
mov
movsb
imul
pop
or
jns
push
and
cmp
add
and
leave
mov
mov
pop
cmp
xor
aam
mov
adc
dec
movsb
dec
xor
imul
iret
mov
push
mov
push
fimuls
leave
mov
lods
and
stc
jl
stos
add
fildll
out
jmp
xchg
inc
mov
pop
push
sti
lods
aaa
cld
int3
jle
rorl
jl
fimuls
xor
xchg
add
pop
in
dec
xchg
or
mov
mov
cltd
dec
shlb
fistl
push
lods
fadds
pop
inc
test
jno
inc
call
in
rclb
cmp
mov
imul
sub
jge
mov
aaa
sbb
adc
ja
lock
add
cli
pop
inc
inc
xor
lea
xchg
fidivrl
push
test
ret
mov
sub
inc
sahf
mov
fisubrl
and
loopne
icebp
sub
int3
lds
addr16
repz
jmp
stc
and
pop
aaa
cmp
test
push
xchg
sbb
sub
aas
mov
and
adc
push
mov
add
jp
andl
inc
sahf
mov
insl
int
push
xchg
rol
scas
jge
push
cld
addr16
sub
xor
mov
xchg
push
lret
xchg
lods
fwait
push
test
insl
mov
pop
jg
add
xchg
mov
pusha
pop
xor
and
fbld
jns
jb
or
imul
and
outsb
lea
adc
jmp
fwait
mov
or
arpl
jne
xor
or
inc
sub
lahf
xor
out
mov
ja
mov
int
test
inc
dec
dec
out
or
in
fstps
xor
jp
xchg
jmp
orl
lock
leave
adc
inc
xchg
xchg
add
jnp
and
mov
dec
into
test
cltd
push
pushf
push
pop
inc
rolb
outsl
jecxz
out
xor
les
icebp
repnz
ds
mov
push
cmp
inc
cltd
or
jae
cmp
jae
xchg
jmp
xchg
push
pop
xor
in
iret
mov
outsl
xchg
xchg
sar
xor
aam
add
or
sub
lock
inc
popa
adc
shll
sbb
lods
xchg
pop
cmp
mov
sbbl
jo
dec
mov
xor
notb
cltd
push
mov
jne
dec
mov
int3
push
mov
inc
popa
sbb
or
and
pushf
test
mov
icebp
sbb
insb
insl
arpl
cmp
incl
in
xor
xor
mov
mov
xor
fucomp
es
cmp
daa
icebp
cmp
pop
mov
jne
fsubrl
xchg
push
add
mov
addl
cmp
ljmp
sub
cli
icebp
pop
sub
cmpsb
sub
sub
dec
mov
mov
lods
rcrl
inc
out
lods
inc
addr16
cmpl
add
dec
in
out
ret
dec
je
lods
andb
scas
jb
push
inc
mov
mov
sbb
add
cli
mov
mov
cmc
jl
xor
push
mov
xor
scas
push
cli
add
dec
lea
leave
data16
lea
mov
adc
adc
ds
sbb
and
inc
dec
out
test
rcr
lods
sub
lock
es
push
add
mov
in
xor
rolb
addr16
cmp
sbb
push
jp
pop
sub
and
sbb
jp
dec
add
pop
mov
sahf
stos
in
add
pop
inc
fdivs
and
add
scas
clc
in
mov
scas
lcall
jle
rcl
jnp
cmp
jge
fmuls
mov
dec
andb
insb
jns
inc
adc
lret
xchg
or
jle
aas
orl
out
xchg
test
or
adc
push
and
insb
jl
inc
fisubrl
popf
sub
cmpsb
add
push
cmpsl
sub
or
add
push
adc
test
fcmovnb
fwait
xor
in
addr16
aas
movsb
mov
add
dec
cwtl
xchg
jmp
test
push
xchg
xchg
iret
dec
dec
roll
dec
cmp
pop
mull
pop
test
lock
out
insl
lock
sub
adc
repz
adc
pusha
in
insb
cld
push
or
call
jns
adc
sbb
mov
popa
sti
aam
jge
scas
ret
arpl
flds
movsb
outsb
fstpt
das
call
cmp
push
and
leave
and
dec
call
pushf
or
or
insl
push
and
inc
es
fdivrp
cld
fimull
push
sub
fiadds
or
lods
call
pop
out
lcall
jmp
and
iret
mov
adc
out
lret
out
jmp
mov
jns
stos
lea
enter
add
sub
add
push
addr16
mov
jp
jb
dec
negl
lret
xchg
lock
inc
inc
into
outsl
insb
sahf
mov
xlat
arpl
mov
in
subb
add
daa
cli
push
and
rorl
addr16
subb
xchg
shrb
sub
mov
bnd
xchg
in
and
sti
adc
aam
repnz
mov
xchg
mov
and
fucomp
shlb
cmp
inc
push
loope
push
popa
or
mov
xor
inc
test
popa
nop
js
in
popa
test
inc
add
mov
xor
xchg
call
test
push
xchg
or
rorb
mov
push
call
es
int3
enter
je
pop
dec
cwtl
add
dec
movsb
scas
mov
inc
int3
jecxz
sbb
sbb
aaa
das
pop
sub
mov
negl
filds
xor
cmpsl
push
mov
cld
shll
adc
fcoms
mov
dec
mov
pop
mov
loope
mov
aas
adc
add
sbb
inc
dec
mov
ss
fidivs
push
dec
mov
mov
lret
mov
sbb
mov
adc
loopne
xchg
pop
push
ror
outsl
and
aaa
mov
cs
dec
es
or
lock
and
and
pop
in
lcall
stc
xor
fisubrs
loop
arpl
repz
jnp
mov
sub
sub
adc
dec
mov
scas
ljmp
mov
sbb
push
push
inc
adc
xlat
gs
xor
loope
lahf
test
lds
jb
mov
ror
add
ret
pop
js
push
iret
add
dec
pushw
iret
sbb
xchg
int
pop
add
cltd
push
jnp
dec
jp
dec
and
iret
aas
mov
flds
lret
imul
xor
mov
popf
and
dec
mov
add
mov
data16
dec
ja
push
out
inc
test
es
push
cmpsl
mov
lahf
mov
pop
hlt
xor
es
push
loope
sbb
mov
lds
jecxz
push
cli
lods
xchg
push
mov
cwtl
push
add
jbe
mov
addr16
out
dec
mov
sbb
mov
mov
stc
mov
and
xorl
push
cld
jmp
in
push
adc
das
dec
mov
js
mov
shrl
sub
push
xor
andb
pop
jne
hlt
cmpsb
cmc
mov
push
mov
ror
fistl
mov
fidivrs
pop
mov
mov
adc
fdivrp
imul
inc
pop
lahf
ret
popa
sbb
jl
xchg
lret
outsb
sub
jg
dec
jge
dec
xchg
sbb
fwait
push
bound
repnz
in
repnz
cmpsl
lods
lea
jmp
mov
push
jbe
pop
inc
and
xor
stc
mov
sbb
shlb
jmp
std
pushf
inc
and
inc
rorl
xchg
jb
shrb
jp
and
ret
insb
pusha
test
or
pop
enter
sbb
cmp
enter
scas
push
and
or
lods
lret
cwtl
or
imul
pop
inc
movsb
dec
mov
call
xchg
sbb
sbbb
dec
ds
or
leave
push
lods
es
push
cmp
dec
leave
int
push
inc
fsubr
add
cmp
frstor
adc
mov
push
or
addr16
pop
fildll
test
decb
adc
sbb
cmp
inc
aad
imul
jg
xchg
push
xor
test
ficomps
sub
fiadds
leave
decl
lods
xchg
stc
cmpsl
push
pop
in
loop
in
add
pmuludq
imulb
adc
cmp
cmp
pop
or
iret
popa
cmp
clc
nop
push
pop
and
ja
cmp
aaa
cmovb
clc
mov
out
rcrb
int
push
mov
lret
addr16
cmpsb
jno
sbb
jecxz
ljmp
add
sub
xchg
xor
cwtl
xor
cli
sub
in
jo
pop
daa
es
inc
dec
pop
sbb
stc
mov
in
inc
fwait
sub
in
cmpsl
mov
lea
loope
xchg
jb
je
adc
xchg
cmp
cmp
or
and
adc
or
dec
testb
mov
cmpsb
inc
or
add
adc
adc
negb
mov
and
orb
outsb
mov
xchg
mov
pop
hlt
pop
fs
cmp
dec
sub
push
mov
les
xchg
dec
insl
outsl
lods
cmpsb
data16
cmp
dec
add
cmpsb
lock
jae
outsb
xor
dec
and
test
pop
fdivrl
sub
call
dec
push
lock
fisubrs
push
cmpsb
out
mov
hlt
xchg
xchg
mov
inc
clc
loopne
mov
insb
stos
mov
mov
pop
lcall
or
lahf
or
jbe
stos
out
jmp
pop
shrb
out
sub
andb
mov
push
int
xlat
pusha
mov
daa
pop
or
mov
sti
cmp
push
out
mov
insl
mov
data16
leave
mov
dec
mov
ss
add
mov
pop
inc
into
lcall
test
push
stos
pop
pop
or
int3
mov
cmp
mov
sub
mov
xlat
or
mov
daa
rorl
es
pusha
test
mov
jns
lcall
push
das
add
gs
fldl
fmull
or
aam
sbb
mov
mov
push
pop
mov
xchg
les
repnz
repnz
jp
inc
jae
pushw
sbb
inc
jbe
rorl
adc
jbe
lcall
jge
and
sbb
dec
sbb
mov
adc
jbe
sub
lret
mov
mov
push
sub
push
sbb
dec
sub
xchg
fstl
add
shlb
add
lret
in
add
inc
scas
push
cmp
cmp
xchg
das
jle
scas
ss
and
and
into
sub
mov
push
sub
and
or
orl
adc
das
cmc
sbb
mov
and
pushf
sub
dec
leave
jns
pusha
lds
dec
mov
cld
sub
inc
sub
sbb
mov
jo
pushf
in
mov
sti
xor
enter
outsb
ds
in
repz
mov
cmpsl
lcall
mov
jle
mov
add
hlt
jge
cmpsl
lods
fldcw
in
aam
dec
dec
cmp
mov
mov
xor
dec
je
jno
stos
push
ret
mov
mov
pusha
push
dec
xchg
inc
push
push
jae
pop
imul
inc
jno
push
adc
cmp
xchg
add
imul
fsubrl
adc
sub
mov
cmp
movnti
fisubl
imul
and
jge
sub
mov
ja
push
cmpsl
or
movsl
add
shlb
stc
int
aam
jnp
and
fs
cmp
call
jg
push
push
movsb
dec
lods
out
xchg
or
push
out
andl
sub
shl
cmpsl
fcmovb
mov
cmpb
pop
fisubs
vdivss
nop
sbb
push
jmp
aas
jns
or
stc
in
mov
imul
mov
mov
mov
cmp
sbb
lods
xchg
imul
out
loopne
sub
fdivs
and
inc
orl
adc
cmp
mov
push
adc
adc
mov
ficompl
scas
sbb
xchg
mov
inc
pop
pop
ljmp
jae
pusha
dec
pushf
lds
mov
imul
or
decb
cmp
pop
stos
cld
sub
pop
test
das
jecxz
pushl
jge
xorb
jnp
test
mov
push
push
cmp
data16
inc
mov
mov
and
lcall
xor
and
out
pop
cltd
or
and
fsubs
out
repz
jns
hlt
inc
pop
cld
out
sbb
adc
rcrl
push
xor
iret
pop
mov
jmp
popf
loope
xchg
mov
push
dec
imul
jecxz
dec
adc
std
fadds
or
push
jns
popa
push
mov
cmp
sub
sbb
push
in
mov
cmpsl
stos
lahf
in
mov
test
fists
add
bnd
loopne
pop
ss
pop
mov
dec
jae
or
or
stos
scas
rolb
mov
inc
jo
mov
mov
repnz
mov
out
insl
sub
push
loope
ret
jbe
cmpsb
aad
pop
sarl
or
clc
ds
pop
mov
pop
ficomps
add
cli
loope
adcb
cmp
push
push
jmp
xor
jmp
mov
and
xchg
mov
nop
mov
or
xor
orl
xchg
fwait
in
ljmp
clc
mov
repz
mov
out
mov
jge
pop
cli
xor
mov
sub
push
popa
call
int
insb
dec
push
jg
sbb
sub
cmp
into
jge
cmpsb
in
lods
push
mov
cmp
mov
lret
mov
lret
popl
push
push
pop
mov
das
xchg
dec
rolb
add
pop
lret
lcall
sbb
xor
and
shr
mov
arpl
add
gs
cli
pop
cs
lahf
or
xchg
mov
out
push
add
nop
aas
inc
in
ret
or
and
imul
xchg
popf
cmc
lods
stos
xor
mov
cwtl
sbb
xchg
and
ss
push
sbb
jl
cld
dec
mov
cli
cmpsb
lock
lods
scas
cmp
cmpl
xor
lods
lahf
inc
fwait
mov
aaa
jmp
int3
leave
sbb
rorb
addr16
sbb
das
cmp
push
push
int3
andb
cmpsl
mov
out
jg
push
aad
or
lret
jne
rcl
loop
lea
insl
xchg
ss
pop
or
inc
xor
ja
cmpsl
hlt
jns
inc
adc
rcll
out
inc
sti
xor
sbb
aaa
adc
in
loopne
pop
mov
shl
or
rclb
pop
ret
ret
jmp
xor
pop
mov
sub
cmp
push
test
pop
push
pop
fmul
fildl
lret
or
inc
cltd
les
mov
adc
mov
jo
stos
aam
push
arpl
add
sub
mov
pop
adc
out
dec
or
das
mov
xchg
shlb
push
mov
repz
pop
in
mov
push
int3
push
in
lock
sbb
jae
inc
xor
mov
movsb
xchg
lea
xchg
es
imulb
pop
fsub
sti
mov
xchg
shll
add
and
stc
fstl
sbb
mov
dec
pop
pop
movsl
push
repnz
jl
cli
cmp
cmp
test
sub
push
pop
xor
jp
xchg
or
or
sub
les
nop
mov
mov
push
ljmp
pop
sub
lcall
sbb
repz
addr16
bndstx
add
dec
lret
out
xor
cwtl
and
adc
imul
leave
in
fprem
pop
fwait
in
mov
sahf
shrl
jmp
popf
pop
lock
sbb
and
add
and
fnstenv
sub
sub
ljmp
cwtl
dec
rcl
cmp
into
jae
inc
xor
test
repnz
xorl
insb
push
inc
out
ret
aaa
outsl
xchg
nop
pop
mov
movsl
mov
fnstcw
testl
cltd
xchg
mov
push
cs
test
test
sub
mov
ss
push
pop
mov
fnsave
les
js
out
jecxz
mov
sbb
jne
fldl
push
push
mov
lock
inc
sbb
adc
xchg
mov
shlb
pop
dec
stc
pop
cli
sbb
pop
in
pop
stos
ficompl
jmp
loopw
mov
into
pop
add
scas
or
incl
mov
cmpsb
cmc
inc
mov
add
ret
aam
inc
out
rclb
jo
push
lods
movsl
push
test
inc
cmc
sub
stc
inc
lcall
bound
inc
pop
xor
xlat
dec
sub
fwait
sar
push
add
jmp
pop
decl
push
pusha
pop
xchg
push
lret
lret
sub
pop
mov
pop
fs
xor
adc
mov
ficomps
es
lds
mov
dec
cmp
push
adc
xlat
jne
pop
pushf
ret
outsl
not
dec
dec
jge
pop
mov
mov
addr16
add
mov
adc
fidivrs
scas
imul
inc
loopne
inc
hlt
int3
or
enter
testb
jnp
push
mov
pop
xor
test
fildl
rorl
and
push
dec
jbe
adc
insb
cli
jae
out
out
lds
fnsave
xor
lds
mov
ss
xlat
dec
xor
cltd
adc
fisubrs
pop
push
push
push
xchg
xor
nop
lock
or
je
loopne
lcall
inc
pop
mov
lret
push
xlat
mov
inc
mov
idivb
dec
sub
loope
mov
mov
shr
mov
or
mov
outsb
movsl
and
stos
dec
jecxz
sub
and
lret
cmp
dec
and
and
cmp
sti
ficoms
jl
jno
lods
roll
jg
xor
clc
add
dec
and
push
pop
cmpsb
lods
or
fsubr
cli
mov
and
add
cmc
adc
lcallw
sbb
lcall
and
test
jp
mov
daa
xchg
add
dec
or
pop
test
cs
lods
fadds
movsl
adc
imulb
ja
sbbl
sub
mov
jbe
jle
mov
mov
je,pt
aas
scas
xorl
fwait
pop
mov
jmp
dec
push
jo
push
pop
mov
shlb
push
clc
leave
lds
sub
fmul
orl
aaa
stos
mov
or
jbe
mov
imul
cmp
push
mov
jmp
jb
movsl
inc
push
pop
cmp
xor
nop
rcrb
adc
ret
sub
sahf
ss
and
sub
xchg
dec
ds
ss
cltd
out
add
push
xor
pushf
out
sub
add
stos
jge
adc
dec
mov
mov
mov
push
ja
mov
mov
adc
stc
dec
xchg
cmp
in
jae
xor
cmp
int3
cmp
fcmovb
aad
icebp
xchg
icebp
push
leave
mov
call
jg
inc
lret
pop
loope
jo
pop
xchg
sbb
mov
out
adc
out
jo
sub
mov
mov
loop
jle
sbb
out
dec
sub
cmp
mov
xor
notb
loope
test
fisubrs
mov
mov
xchg
pop
outsb
subb
imul
xor
jae
aaa
adc
into
mov
pop
fnstsw
adc
std
mov
inc
pushf
stos
fstp
add
rorb
pop
cltd
fistps
ret
lret
xor
ds
cmc
push
fsubs
rcll
mov
sbb
mov
repz
test
adc
and
pop
fs
decl
adc
test
das
dec
push
mulb
insl
push
fnstcw
add
fdivr
pop
lods
inc
in
loope
cmp
nop
mov
popa
les
pop
cmpsl
adc
xor
mov
xchg
lods
sarl
add
loop
sub
jns
mov
xchg
sbb
xchg
sub
out
mov
xchg
inc
lods
fucom
in
jo
xchg
fwait
fs
pop
rcrl
inc
imul
out
sub
xor
test
push
mov
ljmp
popf
pop
jnp
push
pop
mov
shrb
in
mov
shrb
popf
mov
sub
bound
or
sub
in
and
in
jo
popa
xor
pop
jl
pop
std
jbe
and
push
or
cmp
test
cld
mov
mov
mov
jnp
pop
out
fsub
add
inc
out
xor
cmp
loope
in
xlat
imul
cmp
mov
scas
sub
xchg
stos
mov
mov
leave
bnd
popw
aam
ja
xchg
lock
jmp
jnp
dec
jae
dec
or
jns
in
pmuludq
imul
jnp
mov
push
push
dec
icebp
cwtl
add
test
add
stc
pop
jo
cwtl
sub
xchg
mov
iret
mov
pusha
stc
scas
sbb
sbb
sbb
xchg
stos
cmp
es
ds
jle
xchg
data16
mov
pop
and
xchg
sbb
sub
push
pop
imul
xlat
adc
popf
and
mov
pop
in
js
andl
dec
adc
stos
movsl
push
push
pop
and
push
shl
mov
xlat
out
iret
fisubrl
pop
outsb
in
cwtl
ja
popf
or
xchg
aas
dec
or
push
dec
sub
ret
push
push
sub
roll
sbb
pusha
js
xlat
scas
push
mov
in
jb
jne
iret
inc
sub
sti
inc
sbb
xor
mov
cmp
addr16
mov
mov
push
cmc
pop
pop
mov
insb
cltd
ds
push
fildll
and
push
ss
insb
adc
dec
mov
add
daa
and
test
and
imul
pushf
pushf
push
fdivr
fcmovbe
mov
jnp
jnp
popf
insl
dec
cmp
andb
fstl
shll
pop
adc
mov
test
pop
ss
daa
xchg
adc
imull
out
aam
and
inc
mov
jo
scas
or
xchg
inc
or
mov
gs
loopne
test
decl
add
jne
mov
pop
push
movsb
mov
test
add
jne
xchg
outsb
shlb
in
das
adc
mov
aad
mov
std
cmp
jle
ljmp
fs
adc
mov
andb
fadds
add
pop
cli
out
push
loop
push
insb
sbb
sub
sub
lret
sub
shl
mov
ret
push
out
insl
icebp
inc
daa
cli
insl
out
mov
xchg
inc
mov
sbb
mov
inc
pop
imul
pop
or
loopne
mulb
orb
outsb
negl
les
incl
inc
xchg
icebp
sbb
adc
lar
js
sub
mov
popa
dec
fs
ss
jno
cltd
mov
or
adc
xor
xchg
scas
cli
mov
in
or
loop
shlb
leave
rolb
aaa
pop
xchg
sub
pop
push
mov
xor
jmp
jnp
push
and
outsl
mov
int
movsl
adc
jbe
jne
mov
fmul
lret
cwtl
aam
das
mov
and
inc
imul
mov
xchg
mov
inc
fnstcw
mov
xchg
jmp
mov
and
adc
out
adc
dec
dec
sub
jge
das
enter
lods
jns
int3
popl
sbb
mov
pop
inc
jbe
mov
push
stos
push
ja
in
adc
sub
mov
into
rolb
pop
lcall
mov
divsd
ljmp
cmc
xchg
adc
jecxz
repz
pop
mov
nop
or
pop
out
iret
shlb
je
fisubrl
jl
and
sbb
imul
lret
mov
sub
push
loope
mov
call
imul
movsl
mov
mov
mov
fs
sbb
adcl
cmp
fwait
std
xor
jbe
pop
dec
sarl
inc
int
stos
cmp
mov
testb
mov
adc
mov
adc
adcl
mov
loop
dec
imul
sub
sti
ljmp
xor
mov
mov
or
std
sub
xchg
call
scas
sbb
sbb
cld
sub
roll
pop
mov
inc
jns
popf
push
in
mov
les
aam
negl
incb
inc
stos
fsub
mov
and
push
stc
out
push
jmp
mov
int3
adc
or
les
sub
jmp
ror
sbb
push
mov
stc
or
sub
xor
jmp
jns
xor
loopne
inc
cmc
add
push
add
jae
adc
or
xchg
insb
lods
add
mov
repz
fldt
outsb
pop
sub
pop
jp
stos
popa
mov
sbb
jns
xchg
jl
ljmp
dec
aad
pop
push
sub
inc
pop
js
pop
sbb
loopne
mov
add
cwtl
std
jecxz
das
mov
mov
das
and
aad
iret
mov
in
fisttps
mov
sbb
mov
cmpsb
icebp
inc
push
and
clc
cmc
idivb
movsb
add
fldl
shlb
xchg
subb
testl
ret
ljmp
es
mov
out
insl
or
cli
ret
cmp
icebp
sub
sbbb
or
int3
mov
imul
push
int
jg
adc
mov
and
cmpb
test
mov
jns
sbb
sub
or
and
lea
jl
xor
dec
push
pop
xor
dec
cmp
addr16
fildl
sbb
and
repnz
or
mov
and
cmp
inc
cmpsb
xchg
lret
sub
lea
in
outsb
adc
mov
lock
cli
xchg
lcall
arpl
js
push
dec
or
iret
jno
push
mov
mov
mov
xchg
mov
test
int
lods
orl
mov
ja
test
fs
sbb
inc
ret
sub
pop
mov
out
and
dec
pop
test
mov
repz
loop
xor
daa
jns
or
sbb
mov
pop
lcall
test
mov
pop
add
fcmovnu
movsb
pop
xor
popa
mov
mov
lods
jg
or
push
arpl
sub
daa
lock
lcall
outsb
scas
cmp
sahf
lcall
fwait
xchg
and
out
sub
mov
cs
adc
xchg
ret
mov
cmp
sbb
push
enter
test
xor
or
arpl
dec
out
inc
xchg
mov
push
sbb
addb
jp
jge
mov
enter
and
sub
nop
cmp
lea
pop
fisubl
lds
sbb
rolb
add
out
incb
push
clc
jp
and
lcall
cmpsl
addr16
and
aas
dec
insb
dec
jns
mov
insl
mov
insb
push
into
xchg
fmull
mov
mov
divb
icebp
cmp
or
jl,pt
imul
dec
pusha
fnstcw
jo
push
repz
xorb
aad
movsl
aad
and
dec
jns
rclb
lret
push
stos
mov
lea
xchg
mov
scas
inc
or
lret
cmp
cmp
jb,pt
mov
push
cmp
stc
ret
test
dec
jmp
xchg
xchg
fsubrp
cmp
js
ja
sti
inc
in
or
cmp
test
mov
mov
aad
xchg
pop
mov
xor
jmp
fmul
clc
inc
stc
aas
test
arpl
int
repz
inc
inc
popf
jae
pop
inc
pop
pop
xor
cmp
mov
sbb
xchg
mov
insb
push
mov
fsubp
push
insb
xchg
dec
cltd
push
cmc
push
scas
repnz
dec
test
je
jns
sahf
adc
and
pop
adc
test
sub
inc
or
imul
inc
fidivs
mov
mov
bound
addr16
cltd
push
sub
dec
aas
inc
cmp
xor
incb
cmc
mov
out
std
sahf
xor
getsec
jecxz,pn
pop
sbb
out
lret
mov
or
push
out
lahf
adc
jb
fbstp
xor
in
mov
rcrb
mov
loop
bound
sbb
popa
pop
sub
mov
push
inc
fcmovnbe
inc
push
xor
jbe
and
scas
jmp
icebp
subb
xchg
jp
cmpsb
xor
dec
push
mov
adc
cs
jg
movsb
xchg
insb
mov
ljmp
push
insb
mov
jl
mov
outsb
or
ds
fbld
push
mov
addr16
sbb
mov
push
std
xor
int
sub
sahf
sbb
dec
scas
mov
mov
outsb
imul
mov
lret
mov
mulb
xchg
dec
add
sub
in
scas
pop
mov
mov
mov
jae
mov
sahf
ljmp
and
lea
push
aaa
mov
push
inc
jge
mov
adc
lods
arpl
cmpb
jp
mov
push
iret
sbb
pop
mov
sub
sbb
dec
and
jp
jecxz
mov
mov
and
aad
add
mov
cld
inc
sbbl
xchg
cmp
ficoms
arpl
push
mov
in
jge
lea
aaa
mov
mov
stos
dec
pop
mov
or
fstpl
mov
cltd
mov
repnz
lret
test
pushf
jg
and
pop
xchg
nop
xor
loop
add
das
fidivs
sbb
insl
fmul
and
ret
test
out
addr16
xor
mov
inc
xor
fwait
insb
push
lock
into
or
pop
clc
pop
cmc
push
xor
das
mov
mov
icebp
cltd
jmp
pop
cmpsb
or
nop
mov
outsl
xlat
daa
cmp
lods
sti
icebp
int3
mov
stos
rcll
imulb
out
cli
jo
ret
dec
xchg
ret
in
mov
cmp
cmpsl
out
pop
push
popa
pusha
adc
neg
jmp
lea
cli
dec
pop
jae
cmp
popa
dec
xchg
pop
jne
jmp
iret
aam
push
jo
int3
inc
sbb
hlt
pusha
fadds
or
pushf
sti
fwait
mov
adc
pop
lea
dec
mul
xor
sbb
iret
cmpsb
js
iret
pop
lods
push
sbb
push
popa
jnp
daa
lret
inc
sub
ficompl
int
imul
xchg
shll
outsl
aaa
std
mov
mov
xchg
scas
mov
mov
adc
push
cmp
std
leave
fsubr
leave
add
fwait
sbb
fs
in
jb
scas
add
or
mov
fisttps
push
push
sub
xchg
stos
cmp
push
cmp
ficoml
mov
sbb
negl
enter
or
pop
pop
and
push
xchg
cld
out
imul
mov
dec
rorl
dec
mov
lahf
mov
into
lret
mov
push
or
mov
mov
cmp
icebp
and
xor
stos
add
xchg
sti
add
mov
sbb
xchg
and
sarb
test
push
dec
sub
inc
addb
negb
xor
ljmp
ficomps
dec
add
mov
das
sub
fstps
push
inc
ret
icebp
cmp
sub
enter
xor
daa
hlt
loop
aaa
xor
mov
cmp
pop
arpl
lea
add
sub
sbb
push
pop
mov
fdivrl
test
cmp
jle
aam
pop
fnstcw
pop
mov
inc
inc
clc
mov
cmp
dec
enter
push
lret
mov
add
test
pop
int
mov
add
mov
add
push
aas
xchg
adc
mov
mov
sub
xchg
pop
mov
decl
mov
std
sub
jno
xchg
dec
cmc
sarl
icebp
nop
inc
or
xor
and
out
add
andl
lock
pop
in
mov
sbb
jo
sbbb
xor
or
aaa
jae
and
addb
shrl
xchg
pop
sbb
push
sub
imul
mov
fidivs
inc
and
or
and
jmp
nop
decb
lock
push
mov
or
clc
cld
adc
xlat
jmp
outsl
sub
inc
cmp
sub
jno
xor
or
movsl
movsl
pop
in
sbb
lret
mov
jnp
or
dec
std
xlat
push
mov
repz
push
nop
out
or
mov
xorl
int3
std
and
dec
adcl
xorl
dec
pop
pop
test
xchg
inc
scas
movsl
cmp
xchg
in
int
sub
in
cmp
mov
lret
loopne
push
ljmp
pushf
add
fwait
pop
push
mov
and
cmc
int3
loope
mulb
mov
popa
dec
lods
push
cli
dec
sbb
insl
sub
cld
pop
es
imul
inc
jle
and
adc
sub
sub
shl
mov
popa
imul
lahf
iret
mov
cmp
ljmp
cli
rolb
mov
repnz
sbb
int
mov
icebp
out
shrl
test
int3
cmpsb
je
mov
mov
push
adc
push
xorb
jecxz
mul
rcll
lods
mov
mov
mov
jae
xor
dec
fsubs
adc
mov
cmpsl
mov
out
je
xor
push
cli
pop
pushf
xor
xchg
nop
inc
fcoml
sub
pop
inc
cmp
sbb
pop
push
movb
jle
pop
mov
jl
lret
push
aam
je
or
scas
shl
addr16
mov
add
fmull
mov
in
sub
test
sub
add
add
lea
xchg
push
sbb
sbb
dec
sub
add
leave
test
sub
mov
scas
push
jmp
or
addl
add
jbe
inc
lcall
sub
mov
fs
cmp
insb
sti
push
cmp
inc
sub
ljmp
inc
not
push
mov
mov
pop
adc
imul
adc
pop
adc
into
dec
ficoml
in
xor
xor
or
fsubrs
jge
repnz
xorl
mov
or
arpl
cs
mov
leave
sub
dec
loop
xor
stos
add
mov
out
cmpsb
pushf
mov
outsb
push
xor
and
dec
push
ficoml
bound
scas
dec
lods
pop
inc
int
jbe
dec
cmpsb
dec
fwait
popa
nop
rcll
mov
insb
jne
in
pop
push
aad
test
leave
sub
icebp
pop
out
lods
add
xor
ficoms
mov
mov
cmp
dec
sbb
push
push
xchg
leave
repnz
popf
push
and
enter
dec
cmpb
call
insb
pusha
lcall
pop
enter
cmp
jnp
es
xchg
jge
test
std
out
in
sbbl
stos
and
fnsave
mov
cmp
cld
sbb
dec
lds
stc
sbb
push
ret
scas
repnz
cld
cmp
mov
xchg
xor
mov
xchg
fmull
outsl
sbb
add
mov
adc
lcall
cltd
mov
cli
cmp
and
or
stc
mov
stos
lods
push
test
mov
pop
pop
les
outsb
sbb
inc
push
daa
mov
sub
mov
or
in
sarl
je
add
xlat
lret
jno
push
inc
daa
outsb
sub
rorl
cmp
push
in
xchg
inc
iret
xor
outsb
movsl
add
arpl
xor
out
add
mov
jno
mov
push
or
pop
sub
aas
mov
fwait
push
fsubrl
and
jge
mov
xchg
pop
cmc
test
daa
imul
sbb
sbb
jns
pop
imul
mov
clc
stc
fucom
rorl
into
loop
js
mov
adc
addr16
add
nop
and
stos
sub
rolb
cli
or
fistl
cmp
sub
inc
xchg
dec
jg
mov
add
stc
imul
fwait
scas
jp
dec
shll
outsb
jns
pop
push
lret
fs
cmp
imul
inc
lahf
out
pop
push
lods
stos
inc
loopne
and
cs
lret
cmp
je
inc
add
mov
inc
push
cli
pop
mov
into
adc
int
scas
push
cwtl
outsl
dec
imul
push
cld
data16
inc
push
push
ljmp
cmp
inc
cmp
rcll
jecxz
shr
inc
xchg
inc
xchg
mov
loop
sbb
inc
push
mov
js
leave
mov
ljmp
sub
pusha
or
pop
or
pop
leave
pop
scas
mov
sub
cli
jns
xor
mov
pop
loope
fyl2x
cmp
mov
adc
pop
mov
pop
test
sbb
mov
jb
popf
loopne
jo
mov
into
xchg
adc
push
pop
inc
mov
cwtl
mov
inc
fcomp
xor
shll
dec
loopne
shl
sbb
sarb
sti
jno
scas
rcrb
int3
dec
jmp
dec
repz
ja
or
fisubrl
mov
adc
push
sbb
fisubrl
lods
ss
mov
add
mov
inc
push
pop
sarb
mov
cmp
sub
xor
mov
jmp
jl
mov
test
sub
xor
jecxz
and
sub
xchg
sbb
and
ljmp
jp
sub
jno
jne
rcrl
in
fisubl
and
dec
lods
loopne
iret
iret
mov
daa
mov
jle
rcll
inc
lods
loope
dec
push
addr16
pop
add
and
call
repnz
test
push
pushf
fisubrl
mov
mov
mov
jbe
or
sub
and
shlb
cmp
lods
insb
xchg
adc
js
ret
or
rolb
and
js
loop
call
mov
int
sbb
test
cmp
adc
inc
jmp
mov
mov
jmp
and
test
test
es
call
repnz
pop
repnz
out
xchg
ljmp
addr16
test
movb
jecxz
popa
mov
mov
sti
andb
push
inc
pmullw
mov
inc
cmpsl
aam
cmp
cmp
outsb
mov
insl
aad
adc
cmpsb
loopne
mov
test
xor
in
iret
xor
in
in
xor
xchg
rol
rolb
shl
xchg
lock
push
addb
imul
outsl
inc
xor
add
push
sbb
jo
mov
and
jmp
mov
addl
iret
mov
xchg
cs
lret
add
sbb
mov
pop
scas
lods
xorb
lret
cmp
outsl
sbb
aad
push
testb
jg
add
cmp
jle
int3
adc
repz
inc
lcall
jno
xchg
cwtl
aas
cmc
ret
xor
aad
lds
mov
push
loopne
push
pop
pop
inc
and
rorl
push
adc
xor
jge
adc
shl
aas
ss
arpl
xchg
in
stc
inc
mov
push
mov
loopne
jge,pt
or
cmpsb
aas
into
jno
add
pushf
dec
mov
sub
iret
xchg
lahf
aaa
push
inc
adc
inc
mov
jo
add
inc
sbb
fwait
lcall
shlb
iret
dec
mov
fdivl
lods
jnp
shll
rcl
and
fcompl
push
fsubrp
inc
pop
mov
mov
cmp
rcll
adc
add
sbb
or
hlt
and
jne
inc
add
jae
mov
cmp
pop
dec
pusha
push
adc
push
xchg
push
mov
mov
sbb
stc
xor
jmp
xchg
sub
jo
loop
das
ds
dec
lret
fs
ss
out
fucomp
lods
pop
testl
pop
mov
adcb
addl
xchg
sti
mov
jmp
mov
in
das
or
fisubrl
or
iret
data16
sbb
mov
push
mov
out
jle
adc
cmpsl
push
jp
cmpl
pop
and
push
shll
ljmp
je
pop
sarb
cs
inc
jmp
inc
cmp
adc
pusha
cmc
push
ja
mov
jge
lods
out
push
scas
and
sahf
je
push
push
insl
pushl
dec
xor
cli
mov
adc
stos
mov
stos
lock
in
cmp
cwtl
jbe
shrl
pusha
add
rorb
rclb
push
xlat
adc
cmp
add
mov
mov
jl
mov
push
rclb
adc
scas
int3
ss
cli
jne
into
mov
out
outsb
scas
push
out
lahf
xchg
or
fwait
mov
jg
arpl
xorl
jne
adc
add
or
out
adc
aas
pop
arpl
outsb
scas
lea
jl
inc
incb
mov
push
xchg
mov
jge
repnz
and
inc
int
jb
or
in
lahf
cs
pop
lods
sbb
sub
xor
push
faddl
jne
cmc
adc
pop
lahf
mov
jnp
mov
xchg
shrb
adc
mov
mov
mov
sub
js
fimuls
xchg
mov
outsl
imul
adc
sub
jnp
dec
fs
pop
aaa
mov
or
pop
ret
jo
stc
cmp
andl
add
cltd
popa
fs
mov
jb
dec
ss
cmp
dec
mov
sbb
lods
frstor
xor
lahf
xchg
cs
ret
mov
leave
pushf
std
testl
pop
mov
icebp
rolb
xchg
mov
add
into
ret
dec
or
jae
repnz
mov
pop
add
add
cmp
sbb
sub
repz
or
jb
fnsave
inc
xor
enter
push
ja
div
mov
pop
mov
xchg
mov
lcall
es
jge
movb
sbb
repz
ss
adc
sbb
ror
loope
and
aaa
push
lea
mov
dec
xor
loope
sub
nop
neg
add
xlat
in
arpl
movsb
stos
add
and
ror
inc
mov
scas
pop
out
outsb
push
lahf
int
jge
dec
jge
outsl
pop
pop
mov
movsl
pop
inc
pop
sahf
testb
push
push
sbb
rolb
loop
add
pop
push
nop
mov
inc
push
shll
aam
aas
adcb
leave
mov
sub
movsb
cmp
mov
lret
pop
das
jl
add
mov
sbb
adc
imul
cltd
aas
mov
icebp
arpl
je
clc
rclb
call
gs
sbb
es
sub
mov
lret
inc
mov
in
and
cmp
mov
jle
adc
pushf
lcall
dec
jbe
xlat
and
test
jge
cmp
or
mov
mov
pop
sub
jo
mov
xor
addb
xor
or
jl
roll
xor
pop
repz
rcll
mov
bound
adc
daa
cli
std
stos
jp
mov
inc
mov
mov
dec
nop
in
out
loopne
mov
xor
dec
pop
mov
gs
cmp
push
test
cmp
popa
or
xchg
push
rclb
repz
jo
repnz
cmp
push
mov
adc
push
or
fcoms
outsb
sar
insl
std
ret
push
lock
or
and
rorb
inc
test
pop
and
sbb
sub
ss
sbb
cmp
sbb
and
adc
ljmp
mov
into
shrb
cmpsl
xchg
stos
pop
lret
xchg
in
cmp
subl
mov
xor
and
cld
mov
loopne
roll
sarl
mov
clc
aad
pop
les
push
std
push
xchg
fnstenv
das
ss
dec
out
adc
pop
jno
or
fs
mov
movsl
rcrb
lock
add
inc
mov
enter
movl
dec
movsb
pusha
push
mov
scas
add
xchg
out
add
xlat
adc
sub
push
pop
sbb
lods
ret
mov
filds
cmpsl
and
loop
in
pushf
das
sbb
aas
mov
das
and
sub
nop
imul
inc
outsl
insb
stos
ss
add
icebp
ja
shll
sti
push
icebp
sbb
cmp
fsubp
lock
lock
cmp
scas
lret
fwait
sub
lret
and
and
ja
inc
sub
mov
xchg
incl
inc
mov
lret
add
fidivl
roll
mov
stos
push
leave
int3
repnz
lods
pop
ja
mov
repz
repnz
and
cmp
inc
cmp
out
jecxz
push
push
jge
mov
and
pop
push
hlt
pop
and
cmp
push
fcoml
cld
add
mov
or
sarl
movsb
repnz
test
xchg
leave
mov
sahf
cmp
pop
mov
cwtl
inc
sub
aam
int3
dec
jmp
xchg
call
cwtl
push
icebp
xor
sub
lahf
pop
cld
jnp
shll
sbb
aam
jbe
sarb
push
inc
stos
lea
push
sub
cmp
ds
das
fs
add
inc
push
inc
scas
nop
inc
mov
adc
pop
add
mov
scas
ret
fcompl
mov
in
lea
stos
fstps
mov
sbb
xchg
ret
cwtl
dec
sub
mov
inc
add
das
xchg
and
cmpsb
cmp
popf
mov
xchg
fisubrs
in
mov
xor
inc
pop
stc
fldl
inc
popf
dec
mov
sahf
cmp
lods
cmp
mov
mov
sub
mov
cmpsl
xor
insb
inc
out
in
jae
and
sub
daa
or
addr16
lahf
ret
popa
cmp
push
stos
mov
in
push
repnz
imul
enter
jge
mov
xchg
sub
and
push
jns
push
gs
imul
sbb
fisubl
mov
and
ds
xor
xchg
lods
loope
ljmp
pop
inc
cmpl
lds
loop
ficoml
test
shrl
mov
ss
out
sbb
es
or
xchg
adc
push
push
adc
mov
mov
pop
push
mov
std
inc
or
lods
push
mov
push
or
cltd
in
xlat
pop
lods
add
or
addr16
cmp
inc
test
and
dec
push
into
sbb
xor
xchg
xchg
sub
dec
or
fldenv
lock
adc
add
and
sbb
mov
push
mov
insb
loop
xor
mov
outsl
and
jb
mov
test
fwait
aad
xor
rcll
lahf
addr16
mov
stos
pop
mov
in
sbb
int
cmp
cmp
out
push
inc
aam
dec
addr16
mov
cli
stc
sbb
adc
sub
sbb
pop
dec
negl
lret
stc
push
xor
clc
push
jo
cmpsl
test
mov
xchg
fmull
xor
jns
mov
mov
in
dec
xchg
or
ret
lcall
lahf
shlb
fstpt
add
mov
add
adc
outsl
test
jne
cmp
leave
cmc
sbb
mov
inc
xlat
je
out
cli
and
ds
stos
push
lds
cmpsl
fsubr
or
iret
add
xchg
push
xor
dec
xor
popf
inc
test
cli
leave
mov
repnz
xor
gs
mov
outsb
inc
divb
popa
call
or
out
jmp
insl
mov
inc
cmp
scas
push
bound
mov
inc
mov
outsl
add
scas
sub
sub
push
lcall
pop
divl
les
mov
jle
out
les
cmp
push
fiadds
mov
push
mov
outsb
in
cmp
cmp
mov
jl
in
lret
clc
aam
mov
insb
adc
sarl
insb
repz
stos
int3
cs
sub
xchg
fisttpll
mov
jb
xchg
jle
loopne
iret
in
mov
and
cmp
push
mov
pop
sbbl
jle
enter
cmc
jno
pop
sbb
in
xlat
pop
ds
rcr
lret
inc
test
sbb
lret
jle
xor
ja
xor
pop
cld
jmp
push
and
mov
sub
in
shll
pusha
clc
inc
sub
push
or
jno
xor
in
mov
sub
mov
push
ja
je
test
mov
insb
test
mov
enter
out
cmpsb
mov
adc
sub
bound
scas
out
jecxz
call
js
pop
push
pop
mov
sub
insl
jbe
lahf
sbb
and
es
outsb
and
ja
or
xor
sbb
es
jge
mov
mov
insl
push
push
lds
idivb
push
popl
insb
setg
push
pop
mov
out
je
ja
mov
adc
int
pop
sbb
int3
arpl
xchg
mov
les
add
push
outsb
mov
fwait
movsl
lret
dec
push
int3
enter
xchg
push
sub
cmp
lret
sub
stc
jge
fwait
add
sbb
xor
in
cmp
xor
lea
inc
cs
inc
adc
cmp
sub
in
lcall
xchg
std
adc
sbb
jg
cld
imul
sub
lret
and
sub
or
or
and
stos
hlt
or
push
icebp
pop
dec
inc
add
jecxz
out
in
mov
pushf
outsb
push
stc
mov
inc
and
lret
pop
filds
add
popf
or
cmp
cs
pusha
xchg
shlb
js
rcrl
popa
mov
notl
xchg
cwtl
repnz
lock
ss
movsb
push
shll
inc
pop
ret
cld
into
mov
mov
jb
pop
pop
ja
data16
mov
popf
imul
aad
pushw
test
arpl
mov
bound
loop
push
test
cmpsb
mov
out
xchg
pop
dec
xor
cmp
mov
addr16
and
inc
xor
sub
mov
and
xchg
inc
cmp
mov
int
movsb
stos
or
sbbl
sti
mov
mov
mov
xor
loopne
dec
lret
xor
jnp
mov
push
sbb
or
jns
sbb
jno
mov
dec
adc
out
icebp
cmp
adc
cld
cli
pop
pushf
lods
icebp
out
xchg
fstpt
inc
test
mov
push
xchg
mov
idivl
es
mov
xchg
cltd
fdivs
es
in
rcrb
cmc
inc
scas
cs
push
shll
push
movsl
mov
mov
rorl
sbb
scas
insb
int
pop
push
sub
fistpll
cmpsb
inc
xchg
shl
pop
fs
int3
and
pusha
movsl
mov
cmp
lock
adc
cmp
lock
fs
push
scas
mov
fstl
int
lret
adc
test
pop
std
mov
lcall
test
pop
in
loopne
testb
push
and
mov
cmp
mov
adc
cld
adc
inc
cmp
sbb
ja
xlat
mov
jns
pop
sub
les
insl
lret
mov
ficoml
call
rorl
xchg
xor
loop
into
xor
sub
mov
std
and
mov
hlt
add
repnz
aad
adc
mov
mov
pop
mov
nop
adc
inc
repnz
std
fdivrs
cli
sbb
jmp
inc
sub
cmovb
jmp
cmp
jbe
ret
repz
fstpt
adc
cmp
mov
fdiv
xchg
and
mov
pop
xchg
pop
out
fwait
aas
mov
ret
scas
add
pop
add
push
cmpsb
add
and
mov
nop
xchg
icebp
lods
test
lds
pop
and
shll
mov
loopne
pop
jmp
shl
fcmove
xchg
cmpsl
dec
and
rcll
outsl
mov
sar
dec
sub
hlt
jmp
out
mov
int
out
daa
cmc
loope
insl
push
pop
mov
je
inc
cmp
adc
addr16
and
js
pop
jmp
int
clc
loopne
test
pop
xor
aam
add
jl
hlt
inc
jge
push
mov
mov
jle
data16
cltd
adc
aad
xor
jg
xor
pop
push
gs
mov
pop
imul
lret
cmp
inc
xor
bound
add
jge
out
pop
mov
mov
testl
pushf
mov
jne
mov
mov
lret
bound
adc
sbb
in
or
call
fidivrl
push
inc
push
cmpb
in
cmp
inc
fmull
lods
les
jge
jb
ja
add
enter
sub
sbb
gs
jns
pushf
std
insl
or
cmc
jbe
mov
iret
or
jnp
push
sahf
push
or
test
nopl
cld
dec
sbb
push
or
lcall
jbe
fisubl
ss
cmp
loop
jecxz
cmpl
test
xor
ss
pop
mov
pop
in
mov
mov
in
xor
aam
pop
rolb
ret
out
mov
mov
fs
roll
cltd
fnstcw
cmc
push
dec
lahf
jp
lcall
shll
aad
int3
scas
test
testl
mov
in
mov
sub
cli
daa
mov
lea
sbb
inc
or
xchg
xlat
inc
ja
xchg
jl
mov
sub
xchg
mov
inc
adc
jne
scas
in
leave
je
and
icebp
notl
jns
stos
test
out
ja
mov
mov
cli
sub
fidivs
jne
sub
sub
sub
xchg
push
andb
adc
loope
adc
mov
and
sbb
in
mov
enter
dec
cld
adc
jno
inc
fwait
push
popa
popf
and
call
pop
xchg
lcall
or
es
jmp
sub
adcl
clc
sbb
push
xchg
cmpsb
push
inc
ret
adcl
int3
xchg
jmp
and
or
repz
jbe
and
dec
jg
lock
sub
jmp
mov
xor
aam
inc
popa
inc
clc
jne
inc
add
icebp
inc
es
pop
insb
xor
pop
in
gs
pusha
mov
int3
sti
test
push
shlb
mov
push
mov
adc
sub
pop
push
mov
pop
cltd
sub
mov
jo
inc
and
mov
fsubr
jnp
jne
jnp
out
mov
or
jg
sbb
fildl
push
imul
rcll
inc
jns
pop
mov
lods
xor
outsb
sahf
jne
cmpsb
xchg
xchg
inc
daa
fnstenv
mov
jmp
mov
xor
xchg
xor
out
cs
add
dec
ss
xor
lea
mov
mov
adc
sub
aaa
mov
cli
stos
inc
pop
aaa
add
fistl
fldl
push
test
xchg
loope
enter
into
leave
in
popa
stos
xor
out
popa
ja
jnp
neg
cmp
mull
mov
in
test
into
cmpsb
dec
shlb
or
ret
test
dec
push
test
xor
add
jae
adc
loopne
fdiv
jnp
jge
ret
or
imul
incb
push
dec
std
mov
xchg
push
les
ret
ss
mov
ja
dec
stos
xchg
push
push
adc
aam
inc
pop
fdivl
jnp
cmpsl
pop
pop
and
adc
mov
or
push
sbb
xchg
mov
shlb
xchg
sbb
jle
cmp
mov
push
inc
mov
fstpt
pop
or
sbb
inc
call
jl
sbb
fisttpll
add
inc
pop
into
sbb
lahf
notl
adc
test
jns
and
movsb
xchg
xchg
xchg
popa
and
add
push
adc
dec
test
repz
call
cmpsb
and
push
data16
aaa
jns
and
cld
stos
jbe,pt
sbb
dec
pop
lcall
inc
fldt
loopne
jg
mov
mov
aas
mov
xor
shll
xor
pop
insl
and
repz
cld
cmp
mov
sbb
mov
in
add
hlt
arpl
test
sub
mov
xchg
repz
ljmp
outsl
push
add
xchg
mov
push
xor
or
cs
push
fwait
out
les
inc
or
ret
shlb
cwtl
fs
vucomisd
call
mov
nop
mov
xor
popa
mov
push
cltd
out
mov
int
fistpll
jecxz
fs
xchg
adc
push
push
sbb
loopne
fs
mov
mov
jns
jmp
adc
mov
aaa
adc
test
inc
xor
test
xchg
rorl
fmulp
push
mov
sbb
cld
hlt
push
mov
js
sub
jb
push
xchg
scas
jg
cmpsb
jno
push
cmpsb
mov
and
fwait
hlt
in
mov
pop
xchg
sbb
or
call
sbb
mov
in
loopne
js
jbe
and
aam
jno
fidivrs
mov
adc
pushf
mov
xor
or
in
call
inc
sub
cmpsb
repz
fidivrs
cmp
adc
popa
cmpsb
or
sub
push
cld
add
cmp
pop
jmp
ret
lods
mov
scas
mov
aad
mov
rcrl
imul
mov
shlb
mov
fnstcw
xchg
das
into
push
push
arpl
mov
bound
add
pop
out
pop
mov
les
mov
xorb
int3
jecxz
push
jb
and
jno
jle
inc
cld
jb
cmpsl
popf
popf
add
es
rorb
fsub
cld
out
xchg
mov
push
imul
test
and
inc
ret
xchg
adc
xchg
jb
xor
mov
jo
push
inc
arpl
out
push
fmull
loopne
roll
je
loope
push
cwtl
sub
dec
sbb
arpl
adc
cwtl
stc
maskmovq
testl
jb
pop
cltd
jg
add
and
mov
cmp
sbb
push
pop
rcll
adc
nop
int
int
cli
add
fsubs
adc
aaa
sbb
add
sub
cli
fdivs
adc
pop
mov
addl
mov
lds
nop
mov
lret
sarl
bound
fisubl
ds
push
imul
scas
dec
loope
cmp
pop
andb
mov
repz
dec
xchg
cmp
scas
repz
rcl
ss
pop
xor
adc
adc
jge
push
mov
lcall
cmpsb
inc
int
call
mov
movsl
xor
movsl
xchg
add
sub
push
or
mov
mov
mov
in
jnp
nop
xor
push
add
pop
sub
loope
fimuls
out
leave
xlat
xorb
popa
mov
mov
scas
jbe
xchg
mov
push
scas
xchg
rorb
scas
xlat
sub
idivb
mov
bound
sahf
sub
mov
mov
mov
cmp
dec
sbb
lea
dec
jbe
mov
jg
xor
mov
nop
ret
pop
lcall
mov
pop
add
insb
pop
js
loop
mov
jecxz
push
mov
scas
sbb
dec
data16
popa
pushl
jl
mov
pushf
outsb
rcrb
jnp
js
lock
loopne
scas
cld
test
out
push
inc
pop
loop
lahf
push
cltd
out
jb
mov
jae
dec
das
mov
jns
lret
les
dec
test
movsl
push
mov
gs
or
inc
xor
dec
cmp
sub
mov
and
enter
dec
push
mov
push
movsb
mov
sahf
or
add
jno
sti
or
in
test
pop
and
pop
jo
scas
imul
lea
subl
jns
cltd
es
aaa
push
pop
lret
aas
repnz
mov
xchg
xor
pop
mov
js
test
incl
jns
ss
out
mov
div
jb
ret
jl
cmp
popf
pop
pop
js
dec
jne
je
mov
aam
lret
inc
or
or
jl
pop
and
gs
mov
dec
and
dec
inc
fcoml
mov
aaa
lcall
and
lcall
insl
loop
fs
lcall
adc
mov
pop
idivb
inc
int3
mov
bound
adc
and
fstpl
inc
mov
xchg
cmp
cmp
daa
cmp
jbe
stc
sub
ror
in
mul
sbb
sub
xchg
rcrl
shr
cs
repnz
lds
addr16
sahf
mov
daa
mov
fdivrl
int3
jge
xchg
push
repnz
ret
add
mov
outsl
dec
mov
adc
iret
add
push
ja
xor
ret
clc
test
add
push
adc
mov
jo
scas
repnz
lods
mov
lods
pop
push
mov
fnstcw
cmp
daa
xor
adc
inc
sub
insb
xlat
xor
push
push
in
sbb
aas
mov
push
jne
shlb
pop
mov
mov
sbb
or
xor
dec
mov
movsl
jle
add
call
push
cld
pop
fs
std
xchg
mov
movsb
push
mov
push
das
aaa
adc
push
idiv
loopne
sti
aas
jnp
gs
pop
mov
daa
jg
divps
dec
addr16
or
mov
push
add
inc
push
inc
dec
cmp
pop
mov
fdiv
adc
mov
int3
xchg
adc
add
test
mov
cmp
or
cmc
mov
insl
or
and
shrl
fnsave
mov
mov
mov
pusha
xchg
push
ljmp
add
jb
dec
xlat
movsb
in
lret
pop
fwait
mov
imul
gs
movsb
mov
shrl
out
repnz
sbb
xor
out
sbb
xchg
fcomps
xchg
in
adc
mov
lds
pop
mov
xchg
push
dec
inc
test
aad
popa
push
inc
xchg
push
test
mov
lret
mov
cmpsl
iret
inc
orl
jp
adc
hlt
pop
inc
rorb
int
ds
xchg
clc
dec
sbb
rcrl
mov
push
inc
push
ret
or
and
cli
icebp
sbb
add
xor
int
and
in
xchg
mov
out
out
sbb
inc
jb
dec
loop
mov
adc
jp
sub
jp
jno
das
pop
lods
aam
cmpsl
jge
lock
hlt
scas
mov
push
jno
push
movsl
mov
push
aad
pop
sub
cwtl
outsb
out
or
pop
lds
aad
pop
mov
in
stos
adc
aas
mov
or
aaa
inc
orb
and
popa
cmp
push
fldt
mov
xorl
cmpsb
cwtl
mov
sbb
dec
xchg
and
and
mov
sub
sbb
enter
push
push
push
dec
pop
ljmp
add
mov
ljmp
or
out
jo
cmp
xor
cmp
push
add
test
dec
pop
shrb
bound
sbb
push
jnp
xlat
stos
cmp
cmp
scas
or
mov
ficompl
xor
shlb
mov
mov
movsb
cltd
js
pop
sbb
cwtl
jl
leave
or
ja
cmc
xor
pop
mov
xchg
mov
inc
ret
or
xor
jo
add
insl
lds
adc
test
adc
mov
sbb
pop
push
imul
call
jae
mov
or
stos
mov
nop
fdivl
xchg
pop
mov
xchg
and
mov
mov
xor
lea
stos
push
ss
aaa
lret
mov
sub
stc
cltd
jno
daa
pop
scas
jb
lea
fisubrs
pop
xchg
fcompl
shlb
jecxz
mov
bnd
mov
xchg
out
out
inc
repz
fstp
stc
pop
cmp
in
lahf
mov
xlat
adc
fidivrs
xchg
je
jne
cs
mov
jp
loopne
pop
orl
sahf
out
sub
dec
cmp
fadd
jne
or
dec
out
push
pop
scas
mov
mov
testb
cmp
and
add
mov
or
std
stos
int3
xchg
push
or
jnp
push
mov
fucom
xor
hlt
fcmovbe
addr16
test
mov
aas
cmpsb
pushf
pop
jae
cld
cmp
mov
mov
sub
mov
and
cmp
inc
mov
sub
jecxz
inc
or
add
imul
sbb
outsb
mov
in
sbb
cmp
mov
leave
out
xchg
mov
enter
lods
stos
rorl
inc
std
cwtl
add
xlat
push
inc
in
outsb
rclb
inc
std
lret
mov
subl
cwtl
pop
inc
or
mov
sub
mov
call
dec
shll
xchg
inc
mov
pop
shl
adc
out
cmp
adc
mov
jmp
cmp
mov
jne
xchg
mov
sti
jns
aaa
jmp
mov
inc
aas
jnp
cli
xchg
jecxz
sub
lock
push
and
mov
out
mov
bound
cmp
das
push
jl
jl
cs
cli
mov
out
clc
scas
add
pop
aad
pop
cmp
xlat
pop
xchg
notb
jge
test
cmp
and
adc
mov
addb
adc
shrb
mov
sahf
adc
cmp
outsb
push
push
sti
jb,pn
push
sti
movsb
push
adc
fs
and
sbb
jmp
stos
imul
jl
mov
gs
mov
into
xchg
sub
and
xchg
ljmp
ljmp
lods
pusha
sahf
or
or
negb
sbb
inc
jno
cltd
sub
mov
pop
roll
mov
inc
fimull
sbb
lock
fldt
adc
mov
and
into
stos
nop
xor
dec
imul
das
or
rcrb
mov
scas
cmp
repnz
jmp
inc
and
and
ss
dec
daa
mov
cwtl
insl
jns
sub
mov
fwait
inc
pop
mov
pushf
sub
adc
rorb
jns
mov
mov
jle
push
xor
mov
cmp
int3
sbb
cmp
and
inc
loopne
and
xchg
aaa
fistps
popf
add
nop
push
cld
and
rcl
testb
dec
stc
push
jmp
and
shrd
pop
outsb
ret
sub
jp
outsb
dec
imul
lret
scas
das
inc
sub
cmp
flds
lods
adc
mov
mov
aad
les
leave
push
pusha
orb
xchg
les
mov
push
addr16
lret
pop
pushf
insl
sti
mov
pop
pop
les
insb
lock
mov
in
push
pusha
or
cmp
jmp
push
mov
pop
xor
mov
pop
mov
jge
pop
and
subb
mov
mov
adc
or
sub
pop
andl
jmp
pop
mov
pop
push
inc
pop
cmp
pop
mov
repnz
sub
lcall
add
cmpsb
iret
test
loope
lret
js
jmp
sub
xlat
cmp
mov
jno
mov
rorl
sub
pop
lock
das
cltd
inc
clc
inc
xchg
lcall
lods
les
push
repz
dec
lods
xlat
lock
cwtl
bnd
sbb
js
mov
popf
rorl
setg
mov
testl
mov
lret
mov
cli
cmp
stc
fwait
adcb
nop
rclb
push
or
jmp
pop
test
addl
cwtl
mov
sub
jmp
pop
pop
cmp
adc
push
dec
outsb
stc
scas
xchg
hlt
in
cwtl
outsb
mov
sub
push
jns
mov
aam
cltd
stc
jmp
adc
add
or
and
mov
or
lods
xchg
stc
imulb
xchg
fmulp
push
dec
rcrb
pop
vpsubusw
push
out
rcrb
repz
mov
xchg
scas
mov
negb
loopne
or
mov
push
int3
dec
out
ds
inc
pop
mov
pop
subb
lock
mov
push
xchg
mov
jecxz
mov
test
cld
movsb
imul
icebp
dec
shrb
in
mov
mov
inc
dec
sbb
xchg
rcl
iret
aad
sub
add
test
outsb
lcall
mov
int3
vhsubps
mov
sub
push
in
sub
lcall
mov
js
frstor
mov
pusha
add
or
inc
test
push
jo
imul
jp
mov
test
shlb
push
idivb
mov
ja
inc
movsl
ja
lea
pop
cmp
sub
hlt
xor
cli
fsts
adc
sbb
sub
cmp
inc
push
test
jns
mulps
out
cs
cmpsb
loope
sbb
xchg
loop
loope
mov
sub
inc
push
push
negb
enter
cmp
cli
sbb
push
mov
aas
pop
mov
push
in
leave
mov
and
adc
out
xchg
pop
inc
push
and
inc
divb
dec
mov
sub
xchg
add
push
and
push
mov
adc
aad
shll
push
sub
xchg
sub
addr16
dec
shlb
fidivs
adc
and
shlb
mov
mov
sti
incb
cmp
or
pop
cmpsb
in
outsl
ljmp
test
pop
hlt
scas
popa
adc
push
les
cmp
push
fimull
adc
jg
and
mov
xchg
aaa
jmp
sbb
js
xor
sub
mov
aam
dec
cld
inc
ret
pop
or
bound
jno
aad
nop
sub
xchg
lcall
out
in
mov
sbb
xor
mov
pop
movsb
scas
stc
into
scas
nop
jnp
inc
push
or
insl
push
jmp
inc
ret
out
out
push
adc
stos
in
mull
inc
lds
add
sbb
jl
jbe
push
outsl
hlt
mov
and
pop
jns
and
mov
jle
popa
pop
popf
push
xor
nop
in
sub
jae
push
nop
sub
xchg
imul
clc
add
jne
xor
stc
sub
inc
pop
jecxz
cmp
adc
es
push
fstpl
mov
bound
out
arpl
push
sbbb
xchg
xchg
mov
movsl
rclb
pop
arpl
sbb
and
or
push
xchg
cltd
jb
fnstsw
pop
push
aad
pusha
dec
repz
jb
push
imul
sub
lret
xor
sbb
je
bound
lods
or
inc
pop
or
inc
or
cmp
jae
xor
shlb
jae
int3
add
insb
lahf
aaa
add
sub
sub
pusha
mov
sbb
add
mov
mov
aam
cli
ja
sub
adc
xchg
mov
and
aaa
sub
push
div
cli
cmp
mov
push
andb
or
icebp
sub
loope
into
loopne
add
dec
leave
xor
loope
sbb
add
xor
inc
ljmp
inc
mov
mov
dec
and
sarl
dec
arpl
call
sub
mov
jle
aad
adc
pop
mov
outsl
hlt
jle
popf
cltd
jne
ss
sti
fisubrs
lret
andl
stc
xchg
in
cltd
in
mov
mov
stos
and
arpl
mov
xor
jl
sub
push
and
cli
and
lret
shll
lret
inc
aaa
pop
adc
or
mov
push
or
mov
and
leave
adc
xor
repnz
sub
jl
insl
je
in
sub
hlt
mov
push
outsl
test
sahf
leave
and
sbb
or
subl
adc
sub
mov
jns
lcall
idiv
into
leave
repz
push
xchg
xchg
fdivs
xchg
xchg
pop
or
cmpsl
test
sbb
addr16
inc
adc
test
clc
scas
ljmp
repnz
test
inc
test
aas
adc
mov
out
ljmp
aas
mov
mov
mov
push
xchg
loopne
pop
dec
sbb
std
cld
push
cmc
lock
and
jge
sbb
cmp
dec
add
and
xchg
pop
icebp
dec
xchg
nop
mov
mov
mov
enter
ud1
mov
and
nop
push
lods
dec
pop
repz
je
dec
cmp
stc
ja
xchg
mov
push
lret
fmull
bnd
leave
scas
popl
clc
jg
pusha
or
pop
xchg
push
mov
pop
shlb
inc
inc
cmp
add
leave
inc
add
fisttps
mov
rclb
dec
xchg
loopne
lcall
mulb
subb
cwtl
and
mov
cli
cmp
shlb
dec
je
mov
push
fs
xchg
lock
icebp
data16
leave
negb
clc
imul
scas
cld
outsl
pop
dec
inc
jl
xchg
adc
sub
fucomp
aaa
iret
repz
sub
test
std
and
xchg
je
inc
mov
shrl
xor
mov
loope
xor
adc
add
pushf
xchg
fidivs
rcrl
iret
lds
mov
mov
sarb
and
inc
xlat
mov
fdivr
jns
sub
out
mov
sbb
data16
xchg
cmp
bnd
and
push
jne
out
adc
pop
out
cmp
and
insb
adc
sahf
gs
je
clc
mov
mov
hlt
stc
sbb
and
push
mov
shl
and
and
das
lods
inc
pop
out
aaa
in
jmp
leave
sub
loopne
ss
adc
mov
inc
out
and
mov
aaa
sub
mov
dec
push
loopne
sub
lret
mov
mov
mov
xorb
pop
xlat
sti
pop
add
leave
lret
jae
es
mov
mov
mov
sbb
pop
fisttpl
xchg
icebp
jl
sub
shl
jae
lods
in
fwait
sub
xorl
push
repnz
adc
addl
sub
xchg
xor
out
xchg
xchg
sub
dec
cld
push
adc
jle
adc
pop
push
xchg
bnd
adc
stos
shl
xor
inc
sub
mov
push
stos
pop
inc
and
xchg
jmp
mov
dec
and
or
dec
push
dec
call
lds
dec
imulb
cmc
jbe
or
jmp
jl
pop
sub
mov
or
mov
pop
push
inc
int
rcl
shrl
pop
es
mov
sbbl
repnz
test
ficomps
cmp
mov
gs
in
push
sub
nop
test
pusha
mov
cmp
jecxz
push
mov
mov
ret
inc
pusha
add
fwait
mov
aas
jne
mov
stos
fcomip
aaa
xchg
cwtl
pop
and
adc
xchg
fbstp
xor
stc
sbb
ss
jnp
mov
inc
fnsave
adc
rcrl
jmp
sbb
mov
nop
ja
mov
cmp
insl
pop
loope
cmpsl
aad
sbb
pop
std
cmp
sbb
out
cmp
xor
mov
sub
mov
mov
testl
add
mov
xor
push
cld
fs
andl
lahf
mov
pop
sub
imul
push
pop
lahf
or
jecxz
inc
lcall
sbb
adc
aad
pop
push
dec
rcl
mov
loopne
add
cmpl
inc
xor
inc
add
inc
ss
mov
mov
xchg
jmp
or
cli
out
out
das
xor
mov
xor
mov
dec
cld
movsb
movsl
std
cmpsb
adc
mov
sbb
mov
xor
dec
jae
add
aad
jle
dec
or
cmp
out
mov
sub
jg
sti
pop
shll
insb
mov
sbb
mov
jp
cmp
add
jg
mov
cmpb
jb
call
loopne
scas
mov
arpl
cmpsb
cmpsl
ret
or
repz
imul
stmxcsr
inc
cltd
aaa
andl
dec
in
inc
fistpl
lea
loop
cld
xlat
and
inc
cmp
cwtl
jae
test
inc
sbb
sub
jg
mov
push
jne
gs
xchg
jne
cmp
cli
push
inc
cmp
sbb
into
das
pushf
pop
iret
icebp
mov
inc
mov
sub
xlat
fnstsw
imul
xor
cmpsb
fdivs
nop
fsubl
sbb
mov
pop
pop
das
dec
inc
dec
pushf
jle
dec
rorl
icebp
lds
and
je
jo
popa
and
jo
insl
jle
pop
mov
fidivrl
test
es
and
or
adc
fistps
inc
out
jb
sbb
addr16
stos
popa
popf
add
divb
mov
aam
adc
mov
arpl
aad
movsl
xchg
add
outsl
xlat
js
out
jle
cmp
cs
lret
ja
lahf
imull
test
cld
inc
jne
pushf
stos
jns
push
mov
pop
call
aaa
add
sbb
jns
mov
call
int3
popf
mov
mov
mov
loop
pusha
ds
push
int
in
sub
inc
xchg
iret
push
outsl
ljmp
sbb
mov
mov
add
ss
insb
mov
daa
ss
stos
cmp
mov
pusha
cmc
mov
loopne
pusha
sti
mul
jle
adc
pop
stc
xchg
int3
mov
jb
xor
xlat
jmp
jae
insb
push
aas
sbb
repz
sti
sub
push
inc
mov
in
push
vsqrtpd
mov
cmp
pop
pop
movsl
jb
inc
std
mov
aaa
popf
pop
mov
fistl
lods
fwait
push
cmp
mov
je
pop
sub
in
dec
dec
dec
fwait
adc
sahf
xchg
push
ss
je
push
xchg
rorb
cmp
out
hlt
push
pop
or
movl
movsb
stc
dec
xor
imul
ss
outsb
or
movsl
mov
pop
jecxz
cs
adc
popf
mov
cmpsl
int
add
mov
mov
daa
aas
or
clc
inc
xchg
mov
pop
xchg
sbb
mov
aam
jle
incl
push
mov
xor
sti
jmp
test
inc
aaa
sub
lret
test
mov
mov
push
jle
dec
adc
sub
cwtl
jg
ret
dec
push
test
mov
cmp
adc
shlb
dec
adc
jo
mov
scas
jnp
mov
dec
loope
out
mov
outsl
xchg
push
cld
cmc
sahf
xchg
adc
stos
dec
and
add
mov
mov
cs
push
mov
adc
dec
push
mov
sbb
mov
sub
or
inc
pop
push
mov
xchg
push
dec
imul
imul
xchg
idiv
push
movsl
inc
stos
leave
out
mov
mov
scas
cli
inc
rolb
mov
icebp
movsl
and
mull
test
lcall
mov
lret
xchg
loop
jnp
imul
icebp
int
jb
mov
and
or
mov
mov
out
xchg
jns
out
lcall
shll
cmp
dec
in
fcomi
mov
lret
jno
push
jnp
pop
jle
imul
xchg
xchg
mov
jmp
pop
cmpsl
cmp
js
leave
ret
xor
adc
lds
rorb
arpl
pop
aad
cmc
mov
out
aad
out
out
rolb
or
add
in
aaa
xor
repnz
in
dec
cmp
jne
leave
push
mov
call
sahf
mov
xor
push
inc
push
sub
add
lock
inc
ficoms
out
std
jbe
imul
dec
fdivrl
lahf
rclb
int
mov
jbe
aas
dec
push
jbe
cmp
mov
sbb
jne
mov
pop
sub
ljmp
mov
out
and
adc
lahf
push
push
jle,pt
push
jmp
clc
cmp
or
cmpsl
enter
cmp
cli
fistps
dec
std
lea
lea
in
sti
rolb
enter
arpl
push
xchg
and
es
inc
rol
push
or
jne
jmp
std
filds
fisttps
jno
inc
pusha
cmp
dec
and
mov
fs
rolb
adc
in
xchg
inc
xchg
imul
push
test
or
ficompl
mov
adc
cmp
test
push
cmpsl
fimull
jns
push
aad
mov
cmpsb
je
mov
or
cwtl
mov
bswap
cmp
popf
dec
sbb
inc
cmp
clc
inc
fbld
jb
ds
push
xor
scas
in
xchg
and
mov
jae
inc
out
xlat
dec
mov
xchg
xchg
jmp
cs
xchg
lods
imul
daa
lret
scas
push
dec
fcoms
jmp
xlat
push
cltd
subl
lock
sahf
pop
and
xor
in
jne
push
dec
call
push
mov
sub
out
je
divl
dec
scas
in
mov
fists
jne
test
loope
adc
orl
stc
into
and
and
sbb
inc
push
aaa
imul
mov
negl
fldl
stos
mov
sbb
mov
push
cltd
push
or
mov
push
in
ficoml
xchg
stc
mov
sbb
mov
add
xlat
test
fs
mov
das
xchg
mov
sbb
pop
xor
cwtl
and
je
mov
jo
xor
popa
mov
in
aas
pop
mov
mov
jne
gs
jmp
ret
in
inc
sbb
mov
addr16
fwait
int3
in
je
push
pusha
inc
inc
xor
adc
sbb
lods
ja
scas
mov
adc
cmp
xor
jns
mov
cmp
mov
cmp
mov
repnz
ret
test
ds
fnstsw
fidivs
push
mov
and
sahf
cmpsl
or
xor
mov
adc
jmp
loop
sub
ss
fldenv
gs
cmp
rol
pushf
mov
xchg
fwait
pop
stos
xchg
mov
pop
push
lret
mov
sbb
xor
mov
jbe
mov
stos
movsl
pop
push
dec
mov
cwtl
arpl
or
cmp
mov
and
enter
das
mov
jle
adc
mov
sub
jle
sub
xor
test
push
lods
fwait
cltd
shll
repnz
xlat
fisubrl
repz
sub
push
jmp
jo
fdivl
or
mov
add
sbb
xchg
and
push
imull
mov
cmp
push
inc
mov
or
idivl
mov
lds
arpl
adc
addr16
loopne
pushf
inc
sub
pushf
adc
push
aad
cmp
xchg
cmc
jno
jp
lret
xchg
mov
cmc
in
fisttpll
repz
pop
arpl
addr16
repnz
sub
in
adc
mov
mov
clc
pop
adc
push
fs
inc
jle
xor
adc
push
mov
leave
jmp
push
cmpsb
out
aam
arpl
adc
imul
pop
cmp
add
xor
xchg
lret
cmp
jnp
or
adc
loop
mov
add
das
lret
jb
dec
push
push
iret
les
adc
xlat
dec
mov
mov
adc
loop
mov
mov
inc
fiadds
arpl
jne
jae
roll
in
aas
or
sti
enter
lods
fsubs
test
and
dec
fs
sbb
adc
dec
insb
fbld
and
icebp
mov
or
scas
mov
push
xor
xchg
fsub
pop
adc
xchg
jl
sbb
jge
push
mov
jp
cmp
lock
jb
and
gs
cmp
dec
rcrb
inc
mov
jnp
cwtl
mov
sub
mov
mov
pop
aam
and
dec
and
sbbl
push
xchg
repnz
lcall
in
cmp
xor
in
push
cmovae
out
sub
scas
pushf
sti
jle
sbb
icebp
pop
lret
push
daa
call
pop
js
push
xor
sar
jne
test
nop
ss
shl
mov
fistpll
sub
xchg
mov
pushf
aam
rcrl
sbb
xchg
cmp
xchg
mov
push
push
cmp
daa
xchg
sbb
ret
xchg
xchg
in
fdivs
dec
push
inc
adc
cld
lods
sbb
arpl
std
fabs
lds
xor
mov
lods
aaa
rolb
adc
iret
out
xchg
mov
pop
mov
xor
out
call
sbb
xor
arpl
pop
lods
in
mov
pop
and
lahf
std
test
adc
out
xchg
icebp
fldcw
fsubs
aas
movsb
mov
pop
loopne
popa
pop
bound
xor
add
or
mov
dec
xchg
in
ljmp
arpl
sub
jge
or
sbb
ret
test
cmc
xor
mov
popf
mull
fsubp
inc
sub
cli
arpl
lea
jnp
lock
fcmovne
xchg
inc
iret
iret
sub
into
shrl
and
push
jo
sub
inc
loope
and
mov
jae
mov
cmp
xchg
xor
cmp
repnz
dec
js
lods
movsl
push
mov
outsl
jle
dec
mov
sub
ret
lods
subl
mov
stos
xchg
data16
int
jl
mov
out
hlt
or
sub
mov
inc
lods
js
out
outsl
clc
and
and
fistpll
cmpsb
aad
add
xchg
mov
jge
movb
lret
cmpsl
dec
loop
push
inc
into
movsl
lock
mov
jb
scas
mov
push
ja
stc
pop
lret
mov
call
xchg
xchg
insl
inc
rep
xlat
pop
clc
or
leave
cwtl
sar
xchg
lds
das
sub
lds
xlat
cmp
jnp
popf
and
cmp
or
dec
cmovge
divl
or
js
add
in
cltd
xor
stos
dec
in
lods
mov
and
movhps
adc
adc
ds
clc
dec
or
sbb
mov
inc
xchg
cltd
int
test
out
sti
aad
xchg
je
lods
push
inc
lea
jecxz
in
or
cmpsl
xchg
sub
int
mov
nop
incl
std
imul
out
jg
loope
insb
push
add
xlat
jmp
sbb
orl
sbb
pop
popf
sub
outsb
sub
add
adc
cpuid
pop
scas
mov
jne
mov
lret
or
sub
ja
jmp
int3
mov
inc
test
je
jmp
outsb
jge
mov
cmp
cmp
pusha
inc
pop
cwtl
insb
and
nop
jnp
pusha
ja
mov
mov
imul
pop
add
in
pop
je
jne
mov
push
mov
adc
test
cmp
cmp
and
out
jns
jg
dec
or
sahf
jge
sub
add
sbb
cmpsl
mov
test
pop
sub
cmp
scas
fcmovnu
xchg
movsb
scas
outsb
inc
sbb
test
insb
ss
test
in
aaa
sub
pop
inc
mov
jge
int
scas
sahf
and
andl
shll
pop
je
inc
sub
add
pop
imul
and
sub
sub
push
aaa
lock
popf
rcll
dec
push
xchg
adc
sub
sbb
test
mov
add
add
jg
repz
cld
cmpsb
or
xor
mov
pop
sub
xchg
pusha
push
push
cs
inc
mull
mov
lea
lcall
or
insl
lods
dec
xchg
xchg
fs
mov
push
push
test
jg
inc
idivb
leave
and
call
lahf
add
repnz
and
addr16
enter
sbb
gs
fisubrs
xor
jp
adc
mov
stc
and
cltd
push
jle
fstp
mov
sahf
mov
out
and
mov
mov
andl
repz
mov
sub
cmpsb
mov
pop
and
in
xchg
fdivrs
xchg
in
add
jnp
out
data16
fucomp
mov
pusha
idiv
cmpsb
mov
jp
test
sbb
push
push
push
push
shrb
sbb
icebp
lret
loop
decl
dec
jp
xchg
cltd
enter
andb
lods
jnp
push
out
outsl
mov
loope
insb
push
sbb
mov
xchg
inc
mov
pop
loope
pop
movsb
lret
dec
test
dec
xchg
out
je
iret
mov
jmp
and
and
stos
repnz
aaa
aad
mov
mov
in
adc
inc
js
mov
pop
sub
flds
gs
addr16
loope
xchg
aam
addb
lahf
and
add
or
test
stos
cld
in
mov
xlat
jns
mov
add
inc
sahf
cmp
jae
bound
fadds
mov
pop
or
cmc
inc
daa
movl
adc
cmp
xchg
rcrb
inc
fisubs
idivb
fidivl
add
arpl
push
roll
repz
add
sahf
inc
hlt
fnop
mov
lock
sub
adc
test
dec
or
cwtl
and
dec
cld
call
or
loopne
and
pop
pop
or
test
test
mov
mov
push
jge
and
test
xlat
stc
rolb
xchg
lret
leave
insb
fs
sub
xor
out
outsl
add
mov
in
add
das
sbb
rclb
sahf
popa
push
test
mov
enter
cmpsb
jns
loopne
cmp
fwait
jecxz
xchg
pusha
int
and
mov
pop
xchg
test
addr16
push
xor
fcmovnbe
xchg
cmp
push
jns
or
jl
sti
in
dec
and
filds
xor
test
inc
pop
mov
push
and
orl
push
scas
mov
inc
jb
mov
mov
push
xor
test
pop
das
push
aam
fdivrs
les
shlb
aad
lds
test
mov
or
cmp
out
daa
add
cwtl
out
mov
ja,pn
test
iret
inc
xor
gs
inc
outsb
dec
jecxz
push
inc
inc
mov
or
lods
push
mov
adc
lea
sub
aaa
xlat
cli
in
movsb
xchg
jne
adc
out
lea
ret
or
idiv
mov
jbe
pop
iret
mov
add
push
pop
stc
repz
rcll
stos
js
mov
or
push
xor
push
lret
xchg
and
mov
add
cmp
fs
sub
clc
loop
mov
mov
sub
dec
or
mov
test
lcall
sbb
std
nop
pushf
loopne
fsts
sti
mov
icebp
inc
cltd
outsl
out
out
fdivr
jbe
jbe
and
outsl
cmp
ficoml
mov
xchg
xlat
lcall
pcmpgtw
xchg
adc
in
stos
mov
xlat
jmp
xchg
hlt
clc
movsl
inc
pop
jge
out
out
inc
pop
mov
rcrb
sbb
jno
data16
jle
jge
sbb
lock
xchg
int3
mull
movl
pop
sub
or
loope
inc
add
mov
icebp
stc
jno
jecxz
cmpsb
movsb
jo
lods
xlat
mov
cli
xor
icebp
sub
mov
iret
mov
mov
in
in
mov
repnz
or
addl
xchg
push
inc
mov
cmp
repz
cld
clc
jae
jnp
jnp
pop
mov
int
popf
out
loopne
shlb
xchg
js
mov
ret
dec
pop
in
repnz
scas
and
or
ljmp
loopne
scas
sbb
gs
inc
fdivrl
sub
jmp
mulb
adc
jg
lret
aaa
scas
dec
insb
loop
lcall
fisubs
dec
loop
lea
test
sub
push
pop
flds
xor
faddl
movsb
mov
je
sahf
mov
inc
adc
ss
pop
cwtl
xor
inc
jge
adc
jo
adc
jl
and
nop
rep
cmpsl
test
or
js
ret
add
lds
adc
and
adc
sbb
pusha
addr16
cmp
lea
xchg
mov
adc
mov
pop
andl
push
paddsb
cli
sub
mov
lds
inc
out
repz
int
push
xor
aam
add
shrl
cwtl
lret
rorb
sbb
push
push
cmp
dec
jae
divl
lods
dec
loop
jbe
aam
mov
jmp
dec
sbb
jne
pushf
stos
aad
repz
dec
iret
enter
sbb
and
xchg
mov
and
dec
push
xchg
jecxz
pop
les
xlat
cmp
imul
aam
dec
ds
fdivrs
pop
and
push
xchg
movsl
sbb
loope
inc
jp
dec
and
mul
das
bound
push
or
dec
push
xchg
mov
push
lahf
mov
inc
cmp
xchg
jnp
scas
clc
out
cmpsb
push
push
jo
cmp
and
repz
cwtl
iret
and
jge
dec
xor
icebp
xor
or
add
out
loopne
lds
icebp
cwtl
mov
xor
negb
pop
loope
les
enter
sub
inc
pop
xchg
jecxz
lahf
in
xor
pop
pop
mov
mov
fisttpll
mov
js
pushf
movsl
pop
test
or
stos
popf
push
push
fs
nop
lcall
imul
cli
fnstcw
faddl
adc
mov
jmp
cmpsl
xchg
frstor
xor
push
cli
pop
hlt
aaa
push
jmp
popa
roll
out
std
into
xchg
inc
sub
inc
add
gs
movsl
movsl
aas
sbb
mov
subb
or
outsb
fbstp
ficompl
ljmp
clc
cltd
jl
add
sub
aas
cmp
push
inc
push
stos
push
xlat
in
sub
mov
dec
mov
test
lea
les
xchg
push
lret
dec
dec
enter
push
test
sub
sarb
sub
ret
lret
nop
mov
or
mov
fs
jl
mov
adc
mov
or
xor
push
dec
sbb
notb
pop
mov
jmp
cmp
jmp
adc
mov
lcall
adc
pop
and
add
pop
push
inc
inc
sbb
adc
jno
inc
pop
and
lds
jl
jecxz
mov
daa
pop
mov
mov
aaa
rolb
or
push
mov
adc
jbe
mov
jmp
pop
test
pop
sbb
rorb
or
inc
jp
sbb
lds
nop
inc
jne
nop
stos
lods
les
add
mov
inc
jle
push
fisttpll
add
and
repnz
cmp
mov
inc
sub
jle
mov
or
shl
sbb
xor
jbe
cmpb
lcall
pop
or
pop
sbb
sar
xchg
aaa
cmpsl
ss
push
xchg
jns
xchg
ss
es
mov
sbb
cmp
cmp
lods
insl
jnp
pop
popf
gs
add
ds
cld
int3
std
jecxz
jno
fisubrl
fwait
inc
cmp
jae
jecxz
jecxz
jp
push
pop
lahf
jecxz
sbb
loopne
lret
nop
or
arpl
stos
jl
push
int
test
or
flds
lods
xchg
shr
pop
ficomps
fcompl
or
ja
daa
imul
dec
ss
mov
and
cmp
enter
sti
mov
fdivp
cmp
mov
loope
mov
lock
pop
lret
xchg
xor
mov
xchg
movsl
repz
inc
mov
mulb
dec
mov
ret
mov
adc
pop
leave
icebp
inc
mov
mov
scas
adc
and
push
shl
rcr
inc
jecxz
add
jae
in
jmp
push
push
shlb
jno
add
xchg
idivl
lret
dec
sti
inc
jl
into
xor
lea
addr16
jp
fcoml
xchg
mov
xchg
and
lcall
sub
pop
es
in
popf
jmp
pusha
movsb
and
sub
dec
xchg
mov
push
mov
add
and
sub
and
sarb
inc
pop
xor
hlt
mov
xchg
xchg
data16
aad
xchg
insb
sbb
mov
cmp
dec
inc
in
jo
shrl
repnz
mov
mov
mov
shl
and
sbb
sub
cwtl
es
mov
outsl
add
mov
mov
pop
test
dec
fisttpl
lds
mov
fwait
std
mov
pop
cmc
cmp
mov
xorb
push
cwtl
int3
mov
push
sub
jno
cmp
imul
jmp
jnp
stc
repnz
xchg
movsl
or
sub
and
popf
xor
cmc
shll
cltd
adc
bound
jnp
imul
popa
and
sbb
lea
in
imul
mov
sbb
sbb
xchg
stc
jecxz,pt
outsb
xor
push
xchg
pop
xchg
inc
ljmp
mov
dec
sbb
mov
loopne
push
mov
shrb
ret
test
daa
pop
push
sub
stc
scas
jne
movsb
repz
push
sti
or
in
lods
mov
movb
shrl
fbstp
cmp
xchg
cld
push
clc
cmp
inc
sbb
inc
jmp
addl
lods
imul
cmp
mov
add
dec
sarb
mov
rol
push
push
ljmp
rol
mov
push
ljmp
fmul
fidivrs
mov
in
pop
out
push
adc
pop
dec
decb
outsb
out
out
stc
inc
xchg
hlt
jb
dec
rcrl
les
rclb
xchg
fstps
mov
xor
sub
addr16
mov
jnp
cmpsb
mov
mov
movsl
mull
imul
rcrl
jp
mov
loopne
inc
imul
mov
repnz
jb
je
jmp
clc
dec
pop
repz
xchg
sbb
inc
lret
loope
inc
mov
ljmp
or
out
xor
call
mov
pop
jmp
push
out
cmp
lret
cs
cltd
cmpsl
aas
pusha
sbb
nop
xchg
inc
shlb
int3
mov
pop
mov
aam
pusha
aad
call
mov
out
xor
pop
pushf
lret
sub
jno
repnz
push
dec
pop
das
jne
push
imul
fidivs
push
scas
lret
repnz
clc
xor
and
das
jb
insb
xor
sub
pop
push
lahf
pushf
mov
adc
push
vunpcklps
sub
daa
ja
mov
divl
inc
jb
dec
mov
mov
mov
loope
and
insb
insl
sub
or
ffreep
into
xchg
mov
and
mov
adc
imul
test
test
add
adc
loopne
cld
fs
mov
orl
mov
lea
sub
pop
aam
cwtl
push
imul
xchg
out
jno
test
and
hlt
mov
jmp
call
inc
sbb
xchg
lea
cmp
push
cmpsl
insb
cmp
and
adc
mov
jae
pushf
icebp
movsb
and
aam
jmp
call
cmp
jmp
xchg
loop
jg
lret
push
pop
xlat
xchg
js
pusha
xchg
cmp
cmpsl
mov
fildl
sti
inc
bound
or
dec
test
je
fistpll
imulb
lea
or
icebp
jb
movsl
in
jmp
sarl
cmp
pop
jl
shll
push
fsub
movsb
int
test
pop
xchg
stos
fs
ret
test
sbb
test
mov
sbb
pop
jmp
hlt
mov
push
pop
dec
dec
nop
mov
xchg
jne
scas
cmp
dec
out
sbb
out
insl
mov
into
xor
aas
inc
and
sbb
pop
imul
add
xor
cld
adc
inc
outsb
mov
lret
es
cld
mov
repz
add
xchg
jb
es
imul
lcall
add
cmp
or
mov
jnp
and
ret
test
gs
jp
fimuls
or
sub
jecxz
popa
in
mov
test
mov
insb
mov
fldl2t
lods
loopne
mov
imul
into
or
fsubs
shlb
cmc
add
jg
inc
jg,pt
jg
enter
push
hlt
insb
sbb
test
cmp
or
sarb
push
mov
jo
add
mov
mov
push
ds
push
loop
ds
sbb
jnp
jno
test
adc
and
lock
dec
out
mov
pop
push
mov
push
mov
iret
shrb
xlat
arpl
xlat
sbb
rcr
and
lret
je
or
adc
mov
rep
sub
sti
inc
popf
lcall
iret
into
nop
sub
aaa
and
iret
and
loopne
adc
push
xor
int3
or
mov
fstp
icebp
xchg
mov
popf
push
mov
adc
mov
cld
cld
rcrl
mov
inc
ja
iret
lea
popa
out
jmp
adc
xor
ud0
nop
push
lods
cwtl
les
mov
pop
add
inc
mov
rcrl
dec
lods
cmp
dec
xchg
js
inc
lret
sub
mov
out
add
aas
sub
sbb
lds
ret
xchg
sahf
int3
pop
test
popf
imull
ss
jne
lods
jo
mov
cmpl
add
inc
loope
call
jg
fisubrl
fsubrp
xlat
iret
mov
push
fcoml
pop
pop
jp
in
mov
xor
push
xor
aaa
clc
sub
nop
div
shlb
adc
insb
insb
jmp
mov
bnd
fsts
and
data16
ljmp
xor
clc
shrb
and
sbb
jl
std
xor
dec
int3
or
lahf
xlat
push
xchg
sbb
fsts
insb
verw
hlt
xor
sbb
out
js
pop
jge
out
jb
adc
xchg
icebp
hlt
arpl
add
dec
mov
loope
loope
lods
dec
adc
mov
sub
jp
dec
adc
pop
stos
pop
out
in
scas
dec
gs
xor
fildl
iret
xor
jns
push
fisttpl
and
lahf
dec
test
lret
sub
sbb
inc
sub
fwait
rcrl
xchg
cwtl
xor
out
sub
xor
test
mov
pop
jmp
xor
into
mov
daa
sub
js
clc
sbb
sbb
repz
xchg
ja
jae
lods
mov
xor
clc
je
ja
pop
or
push
es
insl
push
std
adc
cmp
mov
stos
and
inc
gs
mov
js
test
cwtl
dec
pop
aaa
pusha
dec
xlat
dec
mov
stos
pop
sub
mov
jge
or
push
fwait
leave
inc
loopne
in
aaa
mov
ljmp
inc
ljmp
pop
add
aad
mov
lds
out
xor
lret
adc
mov
dec
fs
pop
jne
repz
js
shlb
in
inc
je
adc
mov
cmp
cmp
cmp
std
push
faddp
popf
lret
in
xchg
lahf
repz
and
dec
pop
pop
lock
dec
jb
sarb
mov
loop
aaa
mov
push
or
pop
sar
call
inc
mov
outsl
in
jo
mov
mov
movsb
mov
addr16
pop
xchg
bound
inc
js
push
mov
mov
mov
fs
into
push
dec
loope
popl
jb
subb
test
icebp
adc
push
jbe
push
cmp
cmc
lea
sub
mov
jl
pop
test
adc
fwait
pop
adc
fldl
out
push
push
xor
inc
mov
test
mov
inc
sbb
xor
sub
sbb
mov
adc
fmuls
pop
xchg
imul
loop
aaa
or
jae
loop
mov
arpl
pop
pop
loopne
test
mov
push
pop
xor
inc
loopne
idivl
pop
mov
cmp
cmp
cmpl
icebp
icebp
dec
xchg
pop
add
push
test
pop
movsb
mov
int3
outsl
out
mov
and
inc
mov
insl
int3
mov
fstpl
test
pop
cmpsl
inc
ret
cltd
xor
rolb
xchg
insb
adc
arpl
push
inc
and
jge
fcmovbe
add
out
insl
hlt
stos
jns
sti
aad
lret
shrb
and
rorl
insl
imul
shll
decb
aad
into
rclb
adc
repz
inc
dec
pusha
sbb
ja
movsl
addr16
or
push
jg
mov
sbb
cld
popa
aad
or
xchg
pop
lods
push
xor
mov
xchg
add
mov
mov
clc
xchg
dec
das
cmp
gs
xchg
clc
xlat
ret
cmp
pop
pop
in
pop
in
jb
sbb
popf
outsl
imul
mov
js
std
xorl
dec
push
xchg
outsb
stos
and
loop
lcall
lcall
xchg
call
enter
push
xor
cmpsl
mov
pop
pop
insl
int3
push
jb
in
mov
sub
loope
enter
pop
loop
mov
jo
mov
xchg
data16
rcrl
mov
std
rcr
or
outsl
aas
aas
call
sbb
in
sbb
not
xchg
or
int3
out
in
cltd
hlt
stos
ljmp
hlt
repz
psrlq
add
ja
in
popf
adc
sti
mov
fstpt
lret
or
sub
outsb
jnp
mov
ja
mov
cld
incl
dec
cmpsl
ss
jae
xlat
sbb
sub
movsl
jb
or
push
adc
mov
shll
movsb
xlat
mov
cmpsb
pop
test
ss
push
out
sub
int3
aaa
out
gs
xchg
push
scas
out
xchg
fadds
sahf
mov
aas
add
cmp
xchg
sbb
mov
jecxz
adc
mov
mov
xchg
add
mov
pop
pushf
push
data16
popf
out
lahf
jg
push
and
mov
or
nop
mov
mov
mov
hlt
ret
orl
dec
mov
lret
pushf
xor
mov
orb
mov
xchg
xchg
sub
ljmp
stc
jg
cmp
mov
xchg
cwtl
cmpsl
push
sub
xchg
mov
notb
movsb
fiaddl
push
pop
or
xchg
rorb
dec
divl
xlat
mov
ret
jle
sbb
push
push
stc
pop
jns
push
daa
adc
dec
sub
scas
mov
mov
aad
les
add
bound
pop
jmp
cmp
mov
push
add
js
test
xchg
popa
sbb
decb
push
enter
mov
or
mov
mov
in
test
fdivrl
ss
inc
enter
and
out
inc
mov
subb
stos
ljmp
je
cmp
repnz
push
ja
or
inc
or
xor
fidivrs
inc
mov
sti
jmp
bound
push
or
push
mov
sub
mov
cwtl
aas
xor
in
xorl
aad
call
and
and
lds
popf
imul
sbb
mov
dec
xchg
add
sub
mov
sti
data16
push
dec
pop
lods
pop
sar
mov
xor
or
xchg
push
mov
jmp
mov
cltd
jns
pop
push
push
dec
lds
mov
test
fdivl
rcrb
fsubs
fisttpll
jne
imul
bound
jmp
in
cs
mov
jbe
notl
cmp
mov
xor
pop
sub
out
jge
ja
rcrl
push
call
or
out
repz
mov
loopne
flds
cmp
fisttpll
fs
mov
shll
mov
dec
int
mov
lds
push
ja
les
cmc
bound
lcall
inc
fsubrs
adc
fnsave
and
xor
pop
nop
std
stc
mov
add
push
push
loope
cmp
stos
cmp
sub
movsb
mov
aam
xchg
xchg
aad
pop
push
pop
mov
cmpl
jb
imul
and
cmpb
xchg
inc
adc
cmp
cli
inc
lods
hlt
mov
iret
hlt
mov
lods
mov
loope
bound
mov
and
mov
push
cmp
test
ja
sub
outsl
loope
pop
mov
mov
movl
lea
push
cld
lods
xchg
and
jne
stos
vorpd
push
inc
mov
adc
scas
hlt
popf
test
inc
jae
mov
dec
in
jp
xchg
mov
push
arpl
in
test
inc
mov
rorl
cld
subl
ja
mov
stc
cmp
xchg
fists
dec
pop
or
push
jmp
add
sbb
ficomps
adc
adc
mov
or
ret
cmp
adc
int3
pop
mov
popf
sahf
adc
test
mov
sub
jbe
cmp
sub
or
and
xchg
push
leave
adc
in
mov
inc
sahf
pop
dec
fsub
clc
push
inc
jl
or
adc
push
push
dec
in
mov
fld1
in
jecxz
out
frstor
in
jg
dec
popa
pushl
push
jbe
add
sub
sahf
pushf
ficomps
std
je
es
xchg
mov
add
cmpsl
jl
mov
jmp
repz
mov
pop
sbb
lret
in
outsb
pop
adc
test
or
insb
insb
sbb
or
ljmp
scas
lods
or
or
jo
add
mov
rol
dec
fldpi
push
cmp
popl
stos
rclb
cwtl
pop
sbb
iret
inc
movsb
sub
cltd
adc
sti
pop
mov
xchg
clc
in
lods
mov
jns
adc
sub
inc
out
pop
jae
js
cmp
jge
xchg
popa
pop
jle
jae
std
cmp
addb
rclb
mov
jcxz
xor
cmova
and
rcl
jo
incb
fimull
rcrb
sbb
sub
jns
fcomps
lret
and
sub
loope
sbb
movsl
jb
sub
mov
cmpsb
stc
xor
xchg
stos
inc
mov
pop
in
int3
push
push
add
xchg
mov
ljmp
out
push
jg
sub
or
inc
imul
cmp
cmpsl
pop
cmp
fimuls
mov
sub
daa
out
xchg
inc
leave
das
scas
xchg
mov
pop
sub
call
mov
mov
or
jno
mov
imul
add
divb
rsqrtps
fdivr
insb
mov
aaa
fdivrl
sbb
les
cmp
push
jp
ret
call
adc
xchg
icebp
sbb
popf
nop
cmp
push
fwait
mov
dec
inc
imul
fwait
mov
into
adc
ret
xor
push
dec
imul
int3
xchg
push
rorb
sub
pop
add
dec
pop
or
or
ret
es
jns
jo
ds
mov
repnz
stos
fdivl
cwtl
sbb
fxch
movsl
inc
lds
adc
and
add
test
and
rcrb
fmull
sub
jecxz
push
lahf
mov
lock
mov
test
mov
icebp
push
sbb
lcall
mov
ja
adc
jg
jg
in
fists
mov
inc
push
mov
addr16
fsubrl
cmp
pop
xchg
or
push
xacquire
loopne
mov
lret
inc
out
test
icebp
sti
mov
xchg
lods
or
xchg
add
lret
in
jae
stos
cmpsb
mov
pop
xchg
out
cld
inc
jbe
js
sbb
ja
xor
mov
out
lods
push
insl
mov
jne
shrl
mov
repnz
in
repnz
dec
pop
push
jl
lret
repnz
repz
es
mov
push
dec
jo
jae
and
and
cmp
imulb
push
mov
dec
clc
lock
mov
jp
xor
push
xchg
push
xchg
sahf
and
mov
lahf
movsb
mov
adcb
and
cld
mov
shlb
dec
inc
xor
mov
pop
inc
mov
stc
add
rol
idivb
fadd
cwtl
jno
mov
stc
in
mov
push
in
rorl
inc
sbb
dec
jmp
std
cld
fimuls
subl
sub
bound
and
xchg
mov
rcrl
repz
roll
stos
arpl
test
imul
or
ds
ret
pop
iret
sbb
test
jns
data16
pop
push
in
iret
inc
dec
mov
jns
xchg
cmp
not
mov
aas
loop
lret
rcrl
in
or
sub
das
push
add
popa
lds
dec
inc
lea
enter
dec
dec
dec
hlt
cmpsb
cld
xchg
pusha
push
mov
clc
xchg
cmp
rcll
or
negl
ret
outsl
inc
pushf
lcall
cmp
xchg
test
cltd
shl
mov
fstpt
pop
inc
mov
cmp
shrb
xor
fadds
mov
or
pop
dec
std
adc
jecxz
cmp
push
lahf
bound
sahf
mul
fsubrs
xor
sahf
negl
arpl
xor
pop
lret
mov
jns
scas
mov
adc
cmp
icebp
sahf
mov
into
add
inc
mov
dec
je
push
cltd
mov
xchg
ds
mov
and
sbb
or
data16
mov
stc
adc
fdivl
repnz
gs
push
js
in
mov
ret
or
scas
nop
loop
loop
add
xor
add
enter
std
repnz
jae
xor
inc
in
push
mulps
rclb
orl
ret
pop
movsl
test
cmp
jnp
imul
les
lret
outsb
xchg
lcall
dec
xchg
test
jg
dec
push
xchg
aas
and
enter
mov
mov
jge
test
cmp
stos
cli
inc
rol
or
xchg
mulps
dec
xchg
inc
ljmp
lods
in
mov
jl
inc
cmp
outsl
sbb
cmc
in
cmpsb
inc
test
insb
mov
xchg
mov
mov
ret
sub
adc
inc
movsl
jns
or
lcall
push
xor
xchg
iret
push
or
sbb
clc
fsubrs
test
mov
mov
cmp
pusha
inc
imul
shll
loop
pop
sbb
in
sub
sbb
lret
ja
mov
xor
mov
loopne
xchg
xchg
out
sub
and
test
out
mov
mov
jmp
mov
popa
out
lock
fisubs
push
push
jo
ss
call
mov
jle
mov
sti
and
mov
inc
cmc
fstpl
mov
or
adc
pop
int3
fisubrs
gs
ljmp
pop
mov
and
dec
cmpsl
loope
scas
lock
add
mov
xchg
xchg
stc
cmpb
iret
jecxz
adc
int3
js
int
int
and
adc
call
imul
adc
iret
mov
repnz
stos
stos
push
fidivl
gs
adc
insl
adc
js
scas
mov
mov
es
roll
data16
dec
incb
data16
divb
mov
stc
cmp
xorb
and
enter
cli
jo
jns
fmull
ret
andb
push
mov
loope
mov
popa
xchg
aaa
mov
lea
scas
xor
loopne
or
cld
js
cmp
jns
mov
cmp
fistpl
pop
into
sbb
lcall
inc
mov
push
and
pop
cmp
and
ss
outsb
cmpsl
cmpsl
dec
sbb
aad
jbe
mov
add
pop
in
ljmp
std
inc
aaa
push
cmp
xor
sub
lods
mov
and
jg
data16
repz
in
jl
scas
movsl
rolb
jmp
mov
loope
loope
push
or
fnsave
or
xchg
pop
cmp
loop
enter
mov
loope,pn
repnz
outsl
dec
ror
mov
sub
jle
rcrl
enter
enter
cmp
rol
outsl
push
jp
addr16
lods
or
jo
jo
cmp
enter
popa
test
test
mov
mov
jle
xor
dec
arpl
ss
test
leave
cmp
orl
add
lahf
fwait
push
inc
jo
fnstsw
xor
push
mov
pushf
sbb
jo
ja
mov
adc
lock
ja
inc
adc
cld
inc
call
mov
add
gs
scas
xor
jne
xor
ret
das
jne
push
xor
mov
pop
and
dec
in
sbb
inc
aad
test
inc
cltd
sub
call
xchg
cltd
mov
or
push
add
lret
sbb
ss
icebp
sbb
into
sbb
gs
test
fnstenv
sbb
push
inc
lock
insb
mov
filds
stos
movsl
cmp
pop
inc
call
fs
int3
sti
cltd
add
aaa
fildll
sahf
hlt
mov
lret
mov
push
cs
jle
xchg
insl
arpl
sbb
xchg
movsb
in
ficoml
in
push
adc
dec
xchg
jl
or
insb
sub
mov
xchg
and
sub
dec
cltd
jmp
popf
mov
pop
xor
aam
sub
in
shlb
mov
popa
icebp
xchg
sbb
iret
lock
stos
xchg
loop
orb
cwtl
add
jnp
les
cmp
scas
xchg
or
test
sub
xchg
mov
daa
out
popf
js
sahf
or
addb
imul
pop
gs
mov
xchg
sbb
cltd
pop
mov
adc
mov
scas
push
imul
pusha
sub
pop
mov
loope
fmuls
lcall
and
data16
push
and
add
pop
add
nop
sub
int3
inc
add
psadbw
cmpsb
add
adc
iret
fs
bound
jbe
ret
adc
xchg
dec
adc
or
dec
sbb
mov
cmp
push
or
and
lea
and
jle
into
lods
daa
cmp
cmp
nop
sbb
inc
fs
adc
xchg
ljmp
cltd
das
cmp
push
pop
loopne
pop
mov
orl
das
andl
dec
jle
aam
jbe
imul
in
add
sub
xor
rcl
sub
ret
fisubl
mov
jb
fwait
popf
jmp
jnp
shlb
fmull
and
sbb
fidivrl
loopne
fdivr
xchg
mov
pop
lret
pop
jne
mov
pop
cmp
scas
imul
cmp
xchg
or
sub
add
mov
mov
mov
sahf
lea
stc
jns
jle
ret
lods
orb
lods
inc
mov
imul
mov
lds
test
iret
pop
mov
xchg
lret
in
xor
mov
jecxz
test
and
stos
inc
xchg
mov
add
mov
push
outsl
sub
enter
inc
and
inc
or
rorl
shll
loopne
lds
movsl
addr16
add
inc
sub
push
mov
sbb
dec
inc
sub
cmp
lea
loop
sti
inc
cmpb
data16
adc
enter
addl
shrl
jae
pop
adc
jnp
cli
clc
pop
add
pop
notl
mov
shll
cmc
sub
imul
jl
outsl
cmp
imul
ss
push
lods
cmp
fdivrs
mov
push
add
jb
pop
inc
and
dec
mov
xchg
call
mov
jl
cmpb
gs
push
sub
aas
push
jl
xor
mov
mov
into
lret
mov
cmp
xchg
les
mov
loope
sub
pusha
clc
xor
out
mov
mov
imul
pop
in
cld
out
jns
jne
mov
add
dec
jp
andb
xor
mov
xchg
jmp
out
mov
pop
shr
je
outsl
xchg
xchg
cmp
or
push
aam
jno
shlb
push
jnp
jecxz
popa
dec
mov
pop
cmp
or
mov
in
adc
cmc
lret
dec
mov
pop
adc
outsl
les
adc
bound
push
and
xor
shrl
xor
jle
sti
sbb
loope
std
repz
das
mov
pusha
sub
jle
sti
sbb
negl
add
cmp
int3
xchg
lods
pop
stos
or
jmp
cmp
test
adc
mov
adc
fcompl
push
sub
pushf
rcrl
xchg
sub
xlat
xorb
fcomp
add
repz
shl
cmp
jp
add
and
or
in
push
adc
jo
push
outsl
repz
inc
lock
in
jae
sbb
hlt
push
les
cmp
sub
xchg
xchg
sbb
lahf
mov
js
pop
je
adc
jbe
fnstenv
mov
xlat
xchg
lahf
in
fs
mov
jae
pop
idivl
repnz
dec
arpl
cmc
mov
xchg
loop
mov
ss
shlb
and
sbb
sub
cld
push
pusha
add
dec
inc
lret
dec
and
mov
cmpsl
loope
insl
fucomi
or
pop
xor
xchg
arpl
xor
or
mov
dec
jl
lods
jg
cmp
and
jae
les
loopne
aad
out
inc
add
stos
cmp
xor
out
out
inc
add
fistpll
add
sub
sub
in
add
cmpsb
scas
pop
xor
and
ja
pop
fsubl
imul
mov
mov
mov
mov
cmp
xor
sub
lds
adc
int
test
subb
hlt
cltd
popf
in
cwtl
insl
sbb
out
dec
pusha
jnp
icebp
cwtl
sub
pop
loope
xor
lods
mov
inc
push
sub
ss
aad
insb
push
stc
push
lods
push
out
aaa
mov
mov
in
xchg
adc
xor
push
insl
in
pusha
push
cmp
pop
lods
inc
testl
out
xchg
dec
test
pop
mov
sub
in
scas
rorb
and
shl
add
cltd
stos
sti
or
hlt
loop
add
pop
pop
mov
ret
xchg
adc
ljmp
stc
std
cmpsl
fcompl
jge
loop
outsl
push
add
push
flds
sbbb
jne
cmp
test
in
pop
xor
adc
mov
fldcw
pop
inc
mov
outsl
fisubrs
daa
cwtl
xchg
iret
sarl
push
mov
adc
fs
add
xor
cmp
xchg
dec
mov
stos
sbbb
sti
and
icebp
cmpsb
cmc
jns
loope
lahf
sar
sub
mov
pop
in
movsl
or
dec
mov
add
js
or
icebp
jbe
pop
xor
std
dec
mov
iret
jge
or
inc
or
push
inc
sbb
inc
repz
xchg
jns
cmpl
push
imull
dec
loope
stos
lret
in
fstp
inc
insl
cmp
xlat
aam
pushf
sub
imul
pop
mov
pop
mov
mov
mov
movsb
or
inc
in
add
mov
fwait
cld
dec
ret
adc
enter
add
dec
leave
aam
nop
sbb
jmp
sti
cmp
out
push
adc
xchg
insl
xor
jno
jae
or
stos
fs
int3
data16
sub
out
mov
mov
popa
dec
push
pop
mov
roll
xlat
js
fisttpl
xchg
mov
loopne
aas
mov
dec
sbb
aaa
jecxz
or
mov
int3
jl
xchg
stos
addr16
rclb
aad
inc
cmp
imul
lret
sbb
out
hlt
adc
shll
adc
fimull
lods
xor
jo
dec
mov
jns
xchg
cmp
pop
xchg
scas
es
stc
sub
adc
mov
mov
dec
movsb
andb
lds
pop
push
adc
sub
dec
out
xchg
addr16
inc
daa
outsl
mov
les
je
es
sbb
jl
add
xchg
add
into
mov
aad
push
sbb
ret
and
jno
fmulp
out
movsl
sbb
mov
repz
rcll
jmp
jnp
mov
lds
push
cs
xor
xchg
int3
or
push
cli
xor
pop
push
and
aam
xchg
adc
shlb
fstp
mov
mov
loope
push
jle
xor
cmp
pop
movb
shrb
jns
mov
adc
data16
fdivrp
push
outsb
daa
xchg
pop
gs
jbe
and
add
lcall
inc
push
add
push
sti
or
cli
add
imul
call
adc
shrl
into
or
ja
adcl
icebp
lret
std
mov
mov
jo
daa
hlt
sub
dec
mov
aam
xlat
pop
jo
xchg
outsl
dec
add
or
push
sbb
aas
sbb
pusha
sbb
mov
or
test
test
mov
ror
cs
and
pushf
decb
mov
pop
lret
loop
sbb
push
clc
mov
jp
or
xchg
adc
pop
pop
sub
popf
xchg
shrl
fbstp
mov
lret
das
fs
rorb
movsb
pop
cmp
xor
pop
mov
pop
aas
cltd
sbb
mov
mov
popf
inc
out
hlt
jo
inc
gs
add
cmp
je
jl
mov
fadd
mov
imul
nop
pop
sbb
adc
mov
sub
pop
in
cld
popf
and
hlt
movsb
xchg
ss
sbb
pop
jo
test
lret
lret
xchg
adc
push
lea
pop
pop
and
xchg
cld
loope
jb
into
mov
aad
lods
pop
in
pop
jecxz
sahf
mov
or
mov
pop
in
add
adc
mov
cltd
add
sbb
mov
lret
push
jmp
aam
ret
sbb
push
je
mov
lahf
push
sbb
movsb
insl
cmpsl
ret
aam
sbb
add
rcrl
lahf
pop
push
jb
jle
roll
fiadds
and
stos
add
xor
push
fdivl
out
call
adc
pmaxsw
aaa
lock
and
mov
jne
adc
inc
dec
or
in
cmpsb
inc
xor
sbb
loopne
push
mov
jecxz
int
shl
xorl
incl
fimull
sbb
sub
push
xchg
pop
or
dec
mov
fistl
and
lods
iret
cmpl
push
pop
add
pop
in
stos
sub
das
cmp
loope
movsl
popa
lds
lock
loope
test
dec
outsb
in
and
dec
repz
mov
movsl
xor
loopne
jg
movsl
dec
or
outsl
inc
lahf
fprem
dec
sbb
flds
dec
gs
test
mov
je,pn
cmp
cmp
fwait
and
jns
xchg
sub
xchg
push
out
rclb
pop
js
lock
int3
int
in
push
dec
mov
cmpsb
jge
into
ss
xchg
pusha
add
clc
sbb
add
push
add
jecxz
xchg
out
xorl
mov
cld
ss
mov
dec
sbb
ss
out
rolb
bnd
scas
push
mov
outsl
pop
mov
hlt
xor
sbb
push
push
out
inc
pop
test
lret
cmp
out
repnz
mov
mov
and
arpl
icebp
and
clc
xor
xchg
in
dec
out
mov
in
dec
lcall
cmpsb
sub
xchg
ret
out
inc
pop
jle
push
insb
cmp
pop
fistpll
rcll
adc
scas
or
in
mov
jmp
jo
jmp
mov
lock
fildl
inc
imul
in
cmp
dec
repz
xor
jl
mov
nop
and
flds
es
bound
mov
mov
pop
and
sub
inc
jecxz
call
pop
das
outsl
push
xchg
in
es
fildl
in
loop
frstor
jl
movsl
adc
jg
aas
int
xchg
ret
sub
ret
cmc
and
and
test
popa
add
movsb
daa
xchg
pushf
sbb
xor
enter
mov
push
hlt
js
pop
dec
dec
clc
mov
sbb
xor
fwait
mov
fimuls
sbb
sbb
xchg
sar
js
jl
inc
enter
mov
aad
adc
fs
popa
addr16
jne
xchg
or
loop
pop
pop
loopne
jae
xor
shll
cltd
dec
into
pop
pop
test
inc
stos
in
pop
outsb
ret
out
fisubl
pop
push
js
insb
fimull
xchg
cld
jmp
and
mov
xchg
movsl
xor
add
and
mov
sub
push
mov
movsl
outsl
xor
movsb
imul
jge,pn
add
out
sbb
adc
repz
dec
push
jecxz
jae
out
int
repz
sub
xor
xchg
push
pop
ljmp
push
cmpsl
xchg
fs
xor
orl
imul
push
inc
sahf
inc
push
popf
outsb
mov
sub
es
add
dec
and
imul
clc
insl
daa
ficompl
jge
cltd
mov
and
sub
in
mov
inc
aad
sbbb
nop
dec
sub
or
fwait
or
dec
repnz
mov
pushf
push
xchg
mov
push
out
push
sub
mov
gs
inc
lahf
les
cmp
std
sub
cmp
mov
xchg
jmp
and
cmpl
data16
gs
inc
adc
leave
jae
orb
cli
fimuls
aas
xchg
sub
push
pextrw
cli
or
fs
inc
data16
scas
out
call
dec
call
jmp
fs
jns
xor
test
popa
push
test
stos
adc
xchg
jo
mov
lcall
incl
outsl
inc
dec
mov
sub
mov
daa
inc
daa
cmc
xchg
roll
push
rcl
mov
xor
lret
add
das
adc
cmpsl
gs
push
xor
dec
in
loopne
push
pop
xor
jmp
cmp
cmp
pop
jne
adc
into
enter
sub
sub
fwait
in
push
out
push
mov
test
test
xchg
ds
movsb
add
jl
inc
push
cmp
addb
lds
bnd
icebp
jns
lds
aas
pop
gs
dec
inc
test
jae
dec
aad
add
dec
xchg
enter
push
push
je
xorl
mov
dec
dec
addr16
aaa
xchg
outsl
std
mov
add
ljmp
scas
or
dec
jae
add
pop
or
outsl
mov
mov
outsl
aaa
in
or
out
rcrl
sbb
loope
jbe
popf
icebp
inc
mov
fmull
jae
xor
add
xchg
dec
push
or
push
lods
pop
inc
movsl
adc
sbb
dec
or
sbb
cmp
adc
ss
lret
jne
jge
inc
xor
dec
jmp
fcomps
mov
or
int
mov
dec
mov
adc
mov
or
aas
repz
cmp
aas
mov
dec
test
mov
test
mov
int3
outsb
add
roll
xchg
and
test
dec
fisubrl
out
cmpsb
add
jbe,pt
and
dec
mov
and
push
push
out
insb
loop
aaa
cmp
notl
lock
xor
pop
xor
push
int
lret
mov
leave
lcall
or
and
push
lret
cli
xchg
fwait
sbb
sub
hlt
das
pop
jne
aam
std
jl
dec
jmp
leave
pop
mov
mov
xor
add
stos
mov
fsubrl
movsb
push
jle
mov
fildll
sbb
les
adc
add
clc
in
mov
sti
xchg
jo
push
shrl
out
rclb
outsb
cli
add
inc
mov
jb
pop
dec
sbb
mov
pop
and
push
adc
push
cmp
and
xchg
out
sbb
pop
clc
daa
jno
ja
int3
mov
xor
or
sbb
andb
test
sub
xor
iret
test
cmp
inc
xchg
pop
loop
inc
fs
out
loopne
xchg
sbb
jge
inc
add
mov
cmc
loop
dec
xor
loope
fimuls
jne
or
jp
out
adc
jge
push
push
push
inc
ss
lcall
je
mov
xor
adc
sub
mov
cli
iret
push
ret
push
pusha
pop
mov
mov
sbb
ficomps
add
adc
scas
test
lret
add
nop
out
test
nop
jge
xor
xor
lds
mov
pop
pop
movsl
gs
hlt
rolb
les
inc
out
outsb
mov
ljmp
sahf
fs
test
ja
xchg
fs
ret
pop
or
sbb
and
scas
cmp
cld
popa
mov
and
jo
cmpsb
jmp
test
xor
mov
push
loope
push
int3
adc
inc
ja
xor
mov
cmp
jmp
out
mov
mov
aam
insl
iret
insl
xchg
xorl
dec
mov
inc
push
mov
test
or
pop
push
popa
pop
arpl
sahf
sti
leave
mov
xchg
jl
sbb
stos
xor
adc
add
xor
dec
fadds
into
loop
lock
sub
shrb
mov
push
mov
das
sbb
arpl
adcb
scas
xor
and
push
mov
push
int
xchg
jl
sub
popl
inc
js
push
xchg
lock
jp
jecxz
gs
popf
int3
pop
lahf
outsb
loopne
adc
mov
in
mov
xchg
not
mov
sahf
ss
mov
pusha
mov
jecxz
push
int3
fnstcw
sub
dec
icebp
mov
rorb
inc
scas
loopne
arpl
xor
mov
mov
jne
mov
call
jl
pop
mov
mov
jp
xorl
inc
jecxz
das
minps
inc
mov
lock
loopne
out
push
rorl
jns
sub
xchg
stc
adc
insb
jge
pop
enter
mov
cwtl
hlt
pop
pop
gs
jbe
cmp
dec
shrl
inc
in
dec
sbb
sbbl
xchg
mov
mov
xor
gs
pop
aaa
inc
ljmp
mov
sbb
fidivl
jbe
pop
lret
adc
andb
mov
push
cmp
dec
scas
or
mov
inc
mov
icebp
aaa
or
pop
pop
jne
inc
icebp
out
rcrb
push
dec
sub
loopne
movsb
lahf
mov
mov
sub
cmp
int
cmpsb
fwait
aam
std
test
scas
sbb
out
dec
adc
sarb
dec
add
sahf
mov
imul
inc
adc
jp
roll
pop
adc
jne
add
test
push
lods
adc
lock
or
push
dec
leave
sbb
xchg
mov
mov
ja
popa
sub
sbb
movl
mov
lret
js
sbb
mov
bound
decb
or
jbe
fsubs
sbb
sub
scas
push
sub
xor
inc
pop
scas
mov
shrl
cltd
icebp
popf
fsubrp
mov
scas
icebp
pusha
addb
mov
xor
add
pop
and
cmp
push
pop
imull
jg
jne
sub
je
push
or
scas
add
mov
outsb
int3
movsb
gs
xchg
icebp
in
lods
out
push
pop
push
outsl
add
jbe
std
cmp
and
cmp
mov
leave
mov
mov
negb
mov
mov
push
fwait
pop
jge
sub
ds
shrl
sub
pushf
sbb
cmp
dec
pop
cmp
int
jle
ss
mov
mov
or
cmp
xchg
jbe
mov
in
dec
sub
jb
pop
mov
ret
mov
mov
or
sub
jge
jle
dec
std
push
dec
jg
cmp
push
cmc
cmp
idiv
mov
mov
pop
mov
shlb
loope
popf
loopne
es
iret
dec
cmp
pushf
inc
fbstp
cld
pop
loope
push
jl,pn
jge
dec
int
in
repnz
js
mov
scas
cld
xchg
xlat
shll
cmpsb
jb
into
add
shrb
pop
aam
adc
in
mov
stc
pop
fnsave
andb
rcl
xor
mov
gs
insb
mov
loop
cmpsb
mov
testb
mov
and
popa
popf
add
mov
or
rcrb
xchg
les
enter
mov
adc
loope
dec
mov
inc
outsl
addr16
pop
fwait
lods
.byte
