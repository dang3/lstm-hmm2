sbb
jp
inc
arpl
jp
push
mov
push
mov
bound
xchg
dec
xor
or
arpl
inc
or
sbb
inc
push
aaa
lahf
sahf
xor
and
xor
inc
dec
xchg
mov
shlb
push
lcall
int
and
push
sbb
inc
mov
out
inc
push
xor
fbstp
jns
inc
test
lahf
xor
mov
insb
mov
jb
test
arpl
mov
call
leave
cli
dec
mov
mov
outsl
jbe
dec
mov
mov
sub
mov
add
or
cli
fs
in
lcall
mov
mov
movb
lea
leave
lret
xchg
mov
jbe
enter
or
cli
push
mov
or
xchg
scas
jne
and
dec
mov
sbb
jge
popf
inc
repz
jo
mov
and
or
adcl
leave
jle
out
and
mov
push
mov
mov
add
mov
cmp
adc
push
mov
jnp
loop
pop
add
nop
xor
loop
movsb
movsb
mov
sarb
mov
adc
frstor
jge
cmp
xchg
dec
fdivrl
xor
ret
and
cli
jnp
lock
int
enter
or
rcll
cmpsl
pop
fcoms
in
rol
into
mov
lods
adc
out
ret
into
mov
dec
mov
inc
leave
or
mov
add
sub
sti
and
mov
xchg
mov
mov
mov
cli
jnp
cmpsb
jne
ss
test
jns
lret
or
mov
push
out
xor
movsb
add
scas
pop
or
mov
jg
pop
call
outsl
loop
int
inc
mov
sbb
cs
pop
inc
fistps
pop
aas
mov
ret
xchg
cmpsl
mov
rcr
sub
test
sbb
sbb
das
cmpsl
call
pop
pusha
pop
add
pop
fmull
pop
cli
pop
out
mov
jno
aas
xchg
sub
mov
push
mov
mov
dec
pop
shll
movsb
pop
aas
les
push
or
aas
pop
fdivr
leave
imul
sbb
or
dec
pop
aam
jecxz
loope
shlb
xor
jb
cwtl
fsincos
test
jp
int3
mov
cmp
pop
aaa
pop
ja
ljmp
jb
into
lret
push
and
add
jl
push
adc
jno
rcll
push
push
std
cmp
ljmp
in
push
push
push
mov
push
sbb
ljmp
cmp
pop
mov
add
mov
xchg
stos
pop
repnz
inc
push
rcl
inc
push
pop
jmp
loopne
loop
sahf
add
stos
push
inc
ja
jno
mov
mov
loopne
test
fildll
jmp
fisubrs
xlat
xchg
lret
pop
daa
addr16
scas
pop
aas
shrl
push
jno
shll
fs
fildll
cld
fisubrs
call
xchg
mov
push
push
dec
pop
stos
testb
fcmovu
scas
mov
push
sbb
in
psubusb
pop
push
sub
mov
std
mov
mov
adc
sbb
aam
sub
mov
push
pop
jmp
loopne
add
pop
jo
fisubl
imul
ficoms
sub
mov
mov
push
push
loope
xchg
fs
jb
pop
fs
daa
pop
inc
imull
inc
and
aas
mov
mov
fildll
push
aas
push
in
in
pop
pandn
popa
dec
sbb
push
push
mov
lcall
cltd
push
sbb
jne
mov
lahf
scas
push
pop
pop
and
mov
push
aas
xchg
inc
ljmp
lcall
fildll
push
aas
jns
jg
jae
xchg
addr16
push
push
pop
push
in
or
fwait
sub
out
outsb
addr16
push
push
pop
cmpsl
xor
ret
pop
aas
dec
jmp
inc
push
fisubs
pop
les
leave
pop
repz
push
into
mov
inc
ja
xchg
inc
jo
jmp
outsl
les
mov
cmp
bound
hlt
stos
cmpsb
into
add
cmpsb
into
lret
shlb
cmp
std
push
sub
pop
repnz
pop
loopne
push
outsl
mov
mov
gs
pop
aad
les
shl
mov
inc
lock
pop
insl
aas
pop
sbb
push
jbe
xor
pop
jmp
mov
aas
add
mov
aas
loopne
pop
les
and
std
sbb
std
jg
subl
mov
movsb
cltd
sbb
push
push
les
sub
push
jno
mov
cmp
cmpsl
les
dec
sub
int
mov
inc
lahf
out
imul
imul
jmp
dec
idivb
push
cld
pop
les
mov
jae
jge
sub
sub
xchg
inc
scas
pop
aas
push
les
sbb
xchg
sbb
sub
pusha
dec
pop
outsb
cmc
push
ds
cmp
loopne
scas
inc
rcl
mov
dec
fildll
add
mov
loopne
mov
dec
jo
mov
aas
add
mov
aas
loopne
pop
les
sbb
js
jg
jae
xchg
fists
pop
push
in
and
sub
test
xchg
jnp
mov
std
pop
and
pop
aas
fildll
dec
les
outsl
pop
aas
fbstp
and
sub
xlat
outsl
mov
loopne
pop
fistpll
cmpl
push
rolb
adcb
aas
fildll
push
dec
pop
out
les
fistpl
ficomps
mov
inc
push
divl
sbbb
mov
or
jno
aas
jns
jg
push
mov
push
pop
cltd
xchg
jno
cmpsb
mov
cmp
in
mov
xchg
std
out
mov
xor
mov
and
lcall
int3
jecxz
xchg
jnp
dec
fidivrs
shlb
fucomi
faddl
cmp
out
jne
dec
or
mov
sbb
jg
pop
dec
xlat
jecxz
inc
fidivrs
sub
and
mov
ffree
sbb
adc
mov
cmp
ja
rcll
filds
jecxz
lods
cmp
int3
push
mov
daa
adc
in
cwtl
jbe
mov
pushf
rorl
mov
sahf
lret
cmpl
cmpsl
inc
lret
lahf
out
add
ja
and
cmp
push
lods
ja
sahf
sti
loope
ficompl
shrb
or
dec
std
jnp
push
lea
or
jae
xlat
sub
js
pop
sub
push
mov
and
fildl
mov
xor
dec
aaa
les
mov
mov
loopw
jp
or
repz
lds
lret
xor
imul
popa
lds
repnz
and
fiadds
sbb
into
or
xchg
jp
js
in
add
sub
movsl
rclb
mov
cmpl
jnp
pop
and
cmpsl
mov
push
inc
xchg
lds
stos
das
ja
loopne
mov
inc
mov
nop
addl
xchg
scas
nop
xchg
inc
xlat
bnd
mov
mov
add
mov
jo
push
fsubrs
in
mov
insb
into
jecxz
lds
cmp
into
jae
dec
in
iret
dec
popa
jle
pop
pop
inc
pushf
dec
daa
popa
iret
jno
cs
out
ljmp
das
jecxz
test
pop
cmpsl
inc
inc
das
jae
cmp
xchg
out
in
rorb
dec
mov
fmuls
iret
ret
cmpsb
cmp
mov
jp
rol
adc
xchg
push
add
sbb
fmuls
mov
call
xchg
sub
movsl
lahf
inc
pop
aas
jecxz
mov
jecxz
shlb
adc
sbb
jl
aad
jno
loope
xchg
jecxz
lahf
pop
into
add
ss
cmp
mov
mov
jns
scas
repnz
lahf
sub
repz
xchg
sub
clc
es
mov
int
rclb
xor
in
cmp
in
and
dec
mov
fcmovne
es
ror
es
lret
cmp
and
test
push
psubq
xor
lret
call
cmpsl
lods
pop
addr16
bound
xchg
adc
mov
ret
fistpll
mov
movsl
iret
xor
out
pop
sbb
aas
jae
xchg
in
scas
sub
or
jmp
mov
ret
ret
imul
iret
je
hlt
scas
cmp
dec
stos
push
jae
scas
sub
push
ljmp
adc
cmpsb
jnp
jo
push
pop
lret
fwait
movsl
ljmp
std
aad
mov
mov
adc
cmpsl
leave
das
addr16
xchg
sub
shl
mov
mov
ds
movsb
pop
or
andl
cmp
sub
mov
sbb
imul
daa
push
aam
jo
sub
and
out
dec
xchg
scas
rorl
sbb
aam
addr16
ss
sbb
lock
shl
sbb
cmp
test
pusha
scas
push
xchg
mov
out
xchg
add
in
xor
and
xchg
sbb
js
je
dec
push
push
imul
and
aad
sub
es
mov
test
add
aaa
sbb
test
dec
rcr
lcall
cmpsl
dec
mov
jl
xorb
mov
leave
jno
xchg
mulb
inc
mov
adc
ds
fucomip
mov
lret
sbb
jne
lods
fdivl
outsl
sub
movsl
movsb
pop
ficoml
adc
pop
mov
ja
inc
loopne
in
out
inc
repz
es
add
mov
mov
xchg
shll
rcrb
push
mov
popa
adc
dec
frstor
push
subl
fwait
dec
sub
scas
out
das
adc
inc
sub
insb
imul
jns
jg
flds
add
push
adc
mov
fstpt
jg
pop
ljmp
lret
sub
fnstenv
cs
cmp
fdiv
push
js
xchg
idivb
push
in
in
mov
mov
mov
lret
fdivs
sub
xchg
ficomps
push
jmp
jae
ljmp
sti
or
cmp
mulb
loope
sti
rorb
push
dec
loopne
nop
and
fwait
dec
push
scas
lods
inc
mov
ret
shrb
mov
fldcw
mov
shr
fadds
addr16
push
scas
rcr
dec
inc
and
out
cwtl
frstor
push
popf
clc
mov
cli
mov
xlat
es
cmpsb
add
pop
cmpsl
jns
shlb
cmp
and
out
int3
lret
popa
lds
cmp
mov
aaa
mov
push
jecxz
daa
or
in
xchg
cmc
hlt
push
inc
insl
mov
lea
jmp
ror
fsts
outsl
pop
iret
fiaddl
xchg
add
and
inc
mov
adc
cmpsb
roll
subb
addb
xor
aas
xor
fstl
lock
and
cmpsb
pop
ret
sub
cltd
sti
test
push
pop
pop
pop
mov
cltd
icebp
daa
cmp
and
aam
mov
fisubs
xchg
sahf
into
add
xlat
push
mov
or
cmpsb
and
mov
xchg
insb
addr16
test
pop
movsb
and
mov
pop
lods
adc
sarl
adc
sbb
jecxz
lahf
xor
ret
repz
inc
negl
lret
sub
sbb
xchg
jae
jae
outsl
push
stos
repnz
mov
xor
loope
fdiv
jno
pop
inc
xchg
adc
pop
pop
jmp
stos
fwait
shlb
pop
icebp
idivb
mov
scas
sahf
and
jg
sarl
enter
mov
testb
cld
cmc
rorl
lahf
ud0
pop
mov
jge
lahf
ljmp
xchg
jecxz
cmp
pop
mov
pop
cmp
shrl
cmpl
push
scas
fwait
adc
mov
dec
pop
inc
inc
cltd
or
mov
pop
pop
jg
pop
aaa
test
dec
push
jmp
xchg
add
and
mov
and
push
daa
out
jl,pt
mov
je
mov
mov
int
mov
mov
mov
shll
sbb
cmp
fs
out
pop
and
inc
pop
inc
mov
push
mov
pop
ljmp
cmc
data16
cmpsb
pop
xchg
mov
aam
imul
mov
cltd
sti
fmuls
jg
jecxz
or
mov
sbb
fwait
daa
pushf
pop
pop
cltd
push
mov
xchg
jle
pop
push
sub
inc
iret
inc
cltd
mov
cltd
out
mov
loop
push
sbb
stc
jo
pop
lods
daa
out
add
xchg
pop
dec
in
ret
mov
inc
cli
and
popf
inc
arpl
ret
cltd
cmp
mov
ds
lcall
bnd
in
sbb
mov
std
stos
fbld
add
jbe
sub
es
int3
pop
jae
sbb
shlb
lds
mov
add
xor
jbe
push
mov
jmp
je
cli
imul
ret
cmp
add
sub
xor
xchg
gs
ffreep
cs
sbb
pusha
jo
es
in
test
xor
das
popa
jns
aaa
mov
mov
cmp
out
mov
xor
popa
push
jo
inc
loopne
and
mov
das
xor
jns
fisttps
mov
inc
pop
mov
jg
mov
sbb
into
inc
sarb
scas
shll
std
pop
push
pop
and
lea
pop
loope
cwtl
ret
push
mov
stc
adc
fldcw
fidivrs
arpl
shll
and
iret
fwait
pop
jmp
pop
add
shlb
aaa
pop
and
clc
in
aad
sbb
inc
pop
jns
repz
cs
jo
mov
in
sbb
scas
cmpsb
push
mov
loope
and
lcall
imull
mov
repnz
lret
or
cmp
or
loopne
stos
cmp
call
mov
dec
jb
outsl
js
imul
dec
inc
fimuls
and
cmp
pop
mov
popa
ljmp
mov
call
jb
xchg
xchg
xor
aam
xchg
mov
jge
pop
jae
adc
mov
or
dec
mov
sbb
mov
adc
add
loop
mov
jno
int3
fsubs
cltd
push
pushf
mov
xorl
hlt
sub
sbb
arpl
push
popa
cld
ds
mov
pop
inc
mov
pop
inc
int
push
sub
adc
lret
outsl
loop
aas
or
push
repz
and
cwtl
ljmp
or
sbb
and
in
add
mov
inc
sub
daa
js
cmc
mov
movsl
inc
xchg
shll
sahf
popf
mov
sub
lret
inc
in
dec
mov
push
fisubrs
es
mov
movsl
std
pop
xchg
cmp
cmp
out
mov
or
lcall
dec
jecxz
pop
ja
jmp
es
scas
dec
add
sbb
ret
sbb
mov
sub
sub
stos
insl
sbb
cmc
adc
hlt
push
lods
mov
adc
pop
sbb
dec
int3
inc
pop
mov
pop
imul
sub
fs
jns
mov
cmp
and
in
mov
push
ret
jle
mov
pop
add
sbb
iret
scas
xchg
xor
test
adc
pop
mov
insb
add
sbb
push
pop
mov
test
es
bound
aaa
sub
pop
fldenv
and
aam
fsubl
aam
arpl
sub
ret
fcmovbe
pushf
mov
aaa
dec
mov
test
clc
mov
mov
push
outsb
cmpsl
movl
push
cmp
jge
dec
mov
cwtl
dec
adc
add
repnz
pop
push
mov
fs
sbb
test
arpl
push
addr16
pop
fsubrl
inc
cmp
fnsave
add
xchg
fs
mov
pop
bt
test
es
test
imul
loopne
jbe
bound
in
dec
cs
xor
aas
add
jge
out
icebp
inc
sub
sub
cli
stos
and
xchg
mov
mov
inc
cld
mov
mov
xchg
jecxz
rcrl
andl
cmpsb
dec
fldcw
dec
pop
lods
orb
movsb
jp
testl
ror
call
inc
popf
cmp
and
push
cmp
or
loop
movsb
and
int
dec
mov
daa
xor
bswap
insb
sbb
inc
lret
pop
adc
mov
stos
jmp
mov
insl
lds
cmp
repz
cmp
repz
jo
out
pop
lcall
dec
mov
mov
mov
pop
mov
cmp
aad
add
push
bound
daa
and
out
xchg
mov
rorl
lcall
in
or
pop
testb
lods
test
pop
and
lcall
loopne
inc
mov
je
stc
gs
push
scas
xchg
test
sub
loopne
add
cwtl
mov
dec
sub
loope
ljmp
or
xchg
movsb
push
xor
pop
fnstcw
mov
sbb
ljmp
mov
jg
mov
mov
cld
sub
imul
in
les
sahf
int3
add
inc
ljmp
rol
fdivs
or
les
stos
adc
callw
jecxz
dec
out
dec
out
imul
and
sbb
mov
and
push
shlb
popf
push
data16
fsin
movsl
movsb
or
push
pusha
xor
mov
shl
aas
scas
mov
sbb
xchg
sub
pop
dec
xchg
call
mov
aas
dec
mov
jmp
mov
add
in
rcl
adc
test
dec
mov
gs
pop
out
mov
shll
mov
xchg
inc
mov
sub
or
and
or
ret
or
fucomp
mov
addr16
mov
test
shrl
movsl
enter
pusha
pop
pusha
dec
add
testl
test
pop
gs
xchg
arpl
push
dec
push
imul
int
nop
dec
rcr
inc
gs
iret
xchg
jne
pop
shlb
divl
out
mov
jecxz
sub
lock
daa
push
scas
lods
inc
icebp
or
fsubrl
push
imul
pusha
jbe
psrad
je
jmp
dec
pop
jnp
mov
idiv
mov
pop
xchg
jne
rol
mov
sbb
nop
inc
xlat
push
adc
aam
stos
mov
inc
fwait
sbb
mov
xlat
cmp
push
lret
pop
daa
sub
js
inc
pop
stos
notl
or
fstpt
adc
cmp
frstor
aas
lret
in
addr16
push
lcall
xchg
and
lds
add
add
lock
push
jb
jmp
add
mov
dec
pusha
sar
cmpsl
decb
nop
ret
xor
mov
and
cmpsl
push
jo
pop
xchg
stos
popa
scas
fadds
sbb
mov
popf
pop
lea
mov
xchg
outsl
test
inc
aaa
sub
sarl
dec
call
mov
xlat
cmp
dec
stos
mov
cmp
sub
inc
aaa
sbb
mull
mov
sub
leave
inc
xchg
pushf
inc
fpatan
cmp
loop
ret
imul
gs
add
lret
inc
ret
xor
jno
pop
push
pop
dec
push
ret
adc
push
test
aad
imul
mov
movsl
xor
sbb
aaa
je
rcll
mov
mov
filds
scas
or
shrl
sbbl
inc
and
push
pop
sbb
mull
call
pop
mov
xlat
mov
xchg
adc
and
and
loop
fidivrl
dec
dec
push
sub
mov
testl
xlat
jg
and
mov
sbb
ljmp
test
mov
xchg
int3
jl
ljmp
dec
push
idiv
mov
cmpsb
add
and
aas
sub
adc
sub
mov
pop
mov
std
mov
inc
mov
mov
xor
out
jecxz
mov
jg
inc
mov
push
jno
jg
jbe
movsb
shlb
push
and
push
pop
out
arpl
fs
je
popa
and
jne
ret
in
aam
ds
inc
xor
inc
adc
inc
jg
and
shlb
nop
sahf
pop
cmpb
mov
popa
es
adc
icebp
repnz
outsl
jne
push
lahf
mov
jns
ret
xor
fsubs
shl
xorl
mov
add
pop
fnstenv
divl
sahf
inc
dec
in
xchg
mov
int3
ds
dec
pusha
leave
inc
mov
pusha
xchg
outsl
subl
mov
push
xchg
hlt
pop
ljmp
popa
sbb
idiv
adc
xor
movsw
push
sbbb
push
fmuls
hlt
cwtl
aam
stos
fsub
sub
out
push
dec
mov
popa
lahf
jmp
inc
fstpt
ss
mov
pop
xor
pop
sbb
pushf
dec
lahf
out
fsubl
jl
xor
ljmp
sbbl
inc
inc
rorl
imul
scas
mov
insl
decb
std
xchg
xchg
mov
roll
and
imul
mov
mov
inc
jne
cmpl
sub
and
scas
jecxz
dec
in
data16
cs
mov
inc
push
push
fsub
lret
push
in
mov
int
sbb
cmp
mov
testl
sub
fmuls
xor
fdivrl
std
mov
das
xchg
or
jnp
out
fisubrl
iret
add
movsb
out
jno
dec
pop
dec
testb
cmp
aad
scas
dec
push
pushf
out
ljmp
mov
jge
xchg
out
pop
faddl
inc
mov
sub
push
jl
imul
jle
lods
int3
pop
pop
test
pop
mov
sub
lret
ja
roll
mov
fists
add
cld
enter
jg
add
mov
jp
loope
lea
popf
mov
jne
and
mov
rorl
stos
push
lcall
lahf
aam
mov
mov
pand
sbb
jecxz
aam
icebp
push
add
sbb
xchg
icebp
das
push
mov
inc
icebp
mov
sti
cmp
test
dec
cmpsl
dec
negl
sub
inc
xchg
pop
popa
push
dec
stos
sbb
call
cmp
push
stos
push
insb
mov
jg
sbb
cmp
sbb
sub
movsb
mov
xchg
arpl
mov
das
pop
out
or
lret
rclb
mov
mov
sub
mov
pop
out
and
push
lret
ret
push
xchg
and
iret
mov
clc
rcrb
fadds
iret
sarb
ret
stos
inc
pop
mov
inc
fbld
push
dec
lods
inc
dec
popf
xchg
dec
ret
adc
ds
mov
add
movsl
fldlg2
sbb
sub
jbe
jmp
call
dec
testb
mov
fstl
cwtl
mov
sbb
stc
push
push
dec
jb
imul
xchg
jo,pt
or
das
loope
or
xor
adc
fidivl
push
loope
fsubl
add
into
popa
xor
xlat
stc
pop
pop
pusha
outsl
sbb
in
jnp
pop
clc
ds
pop
adc
push
inc
jb
gs
xchg
mov
inc
ret
jge
stos
xor
and
fbld
sbb
fistpll
push
mov
shr
jbe
or
idivb
xor
xchg
incb
movsb
pushf
or
out
and
sub
mov
dec
out
pusha
jmp
mov
and
pop
mov
mov
outsb
sbb
dec
mov
push
jbe
ret
pop
mov
outsl
pop
xchg
scas
inc
ror
or
push
ret
out
cld
bound
sub
dec
mov
test
and
and
dec
mov
fwait
mov
push
in
aad
xor
pushf
dec
outsb
out
pop
ja
in
cld
xchg
adc
xchg
jne
es
mov
test
rorb
or
frstor
das
into
scas
sbb
push
pop
fsubs
loopne
clc
stos
insl
jg
clc
dec
push
mov
aas
xchg
mov
shrl
pop
sbb
std
out
fnstcw
fs
hlt
imul
daa
repz
add
sub
ret
mov
xchg
cmp
jecxz
mov
in
xchg
loop
imul
and
arpl
popa
scas
dec
inc
mov
std
lcall
jg
sbb
pushf
mov
pop
xchg
ret
mov
xchg
jecxz
int
mov
jl
into
mov
dec
out
pop
mov
jb
test
ja
test
cmpsb
cmpsb
adc
rolb
mov
movsl
and
loope
mov
in
out
lahf
ss
mov
aas
dec
loope
pop
adc
or
push
daa
add
andl
dec
and
cltd
sub
mov
xchg
and
flds
mov
mov
clc
push
inc
repnz
mov
mov
cmp
out
push
movsl
fwait
and
hlt
ret
xor
repnz
nop
iret
dec
data16
sub
mov
lahf
and
in
das
sbb
xchg
add
or
fistps
mov
push
fisubrs
push
fdivrs
pop
sbb
nop
add
xor
pop
pop
xchg
dec
xor
jge
jb
pop
ret
pop
pop
sub
aam
aaa
fwait
sub
xor
lret
xorl
mov
repnz
gs
daa
mov
mov
sub
mov
mov
or
scas
out
sbb
mov
fsubrl
sub
enter
lea
mov
xchg
faddp
lods
jns
and
xlat
cmp
pop
mov
adc
push
add
ret
call
xchg
scas
lret
out
fsubrs
bound
ds
jecxz
mov
imul
out
test
addr16
or
ss
sbb
dec
cld
lds
pop
push
aam
scas
fwait
inc
push
push
push
lods
xor
xchg
mov
push
enter
ds
jle
sbb
xchg
xor
adc
ds
mov
dec
adc
xlat
xor
mov
xor
and
sbb
loopne,pn
sub
push
cmp
mov
std
ja
ds
pop
pop
xchg
call
pop
movhps
push
lds
mov
fs
or
mov
mov
sarb
jne
jecxz
mov
fwait
mov
dec
fcomip
cmp
or
push
cmp
cli
subl
pop
dec
subb
pop
cwtl
fsts
mov
popf
sahf
scas
repz
pop
push
aas
movsl
outsb
test
inc
add
mov
mov
xchg
scas
arpl
push
adc
pop
sbb
test
xor
pop
sahf
mov
and
sub
add
ret
push
pop
into
cmovo
pushf
push
pop
hlt
mov
mov
imul
pop
jo
push
shrl
adc
push
test
or
pop
pushf
push
jecxz
mov
lods
mov
pop
lds
dec
jecxz
push
pop
xor
movsl
ror
mov
iret
ljmp
ljmp
adc
stos
ljmp
or
aas
and
jbe
inc
jecxz
sahf
std
fiadds
repz
fcmove
jle
addr16
out
call
jbe
jge
stos
sub
popf
movsb
sub
adc
jb
mov
sti
int3
mov
jg
sbb
aaa
out
inc
cmp
daa
xchg
or
das
imul
add
mov
int
rolb
jnp
xchg
out
add
fucomip
addr16
rorb
jmp
push
scas
mov
mov
cmp
dec
adc
xchg
mov
fdiv
or
adc
cs
lcall
stos
mov
mov
das
inc
pusha
or
add
push
ljmp
loopne
lret
add
fistpll
ljmp
mov
jb
ret
add
push
inc
data16
jbe
cmp
mulb
in
mov
adc
jnp
jno
push
xor
mov
sub
push
push
push
fiadds
pop
lea
pop
xchg
sub
lret
or
in
sbb
bound
push
mov
inc
dec
fiadds
sbb
or
inc
in
mov
jmp
lret
inc
pusha
jb
and
sahf
in
xchg
xor
jl
mov
adc
lret
or
movb
stc
aad
cmp
xchg
lds
insl
jge
cmc
jmp
rorb
sub
in
sti
xor
inc
push
push
ret
repnz
sbb
xor
ja
ss
sub
cmpb
je
daa
scas
mov
ljmp
inc
cltd
or
stos
lea
sub
daa
push
repnz
push
add
dec
cs
jne
mov
int3
xchg
je
or
out
and
fdivrl
sub
loop
mov
aas
sbb
aad
ret
arpl
ret
fsts
fs
or
lahf
mov
outsb
xchg
dec
das
iret
cmpsl
and
mov
inc
xchg
repz
lods
cmp
xchg
ret
adc
inc
loopne
movsb
xchg
push
sub
fwait
and
sbb
push
scas
fadd
aad
call
mov
cs
outsb
scas
xchg
cmp
lock
jle
fucomip
pop
scas
fidivrs
int3
jl
clc
pop
rclb
negl
jg
psrlq
xor
stos
jne
jmp
xchg
push
jne
std
jbe
in
popa
dec
push
xchg
sbb
pop
xor
jno
inc
sub
pop
aam
cmpsb
jg
fbstp
cld
and
sub
jle
dec
popa
aad
xlat
rcrl
fwait
sbb
jb
out
rolb
or
mov
js
xor
pusha
leave
vpsraw
enter
shlb
add
and
mov
jbe
mov
ds
fdiv
arpl
test
lods
lods
dec
cmp
cli
mov
movsl
mov
push
fsubrs
out
jae
and
mov
sahf
popf
movsl
lcall
or
je
xor
in
leave
je
mov
ffreep
shl
cmpsb
inc
pop
ljmp
lock
cmc
idivl
lcall
dec
inc
fwait
push
mov
imul
fbstp
push
lods
jne
iret
fidivrs
xor
movsl
pop
sbbb
add
mulb
jge
stc
ja
pushf
mov
fcmovu
mov
pop
pop
and
cmc
idivb
in
mov
sub
pop
nop
push
loope
lahf
movsb
sti
xchg
push
ret
loope
pushf
mov
movsl
loopne
push
xchg
outsl
mov
jecxz
lea
jns
pop
and
jbe
push
push
sub
imul
xor
xlat
jg
jb
fdivr
negl
xchg
add
inc
leave
mov
mov
out
insb
mov
add
xorl
loop
mov
mov
adc
clc
fildl
dec
lods
adc
and
aas
fwait
sub
sub
loope
pop
test
fstl
mov
pop
push
cmp
mov
icebp
iret
push
aad
mov
sbb
popf
mov
pop
pushl
jmp
dec
mov
cmp
mov
fsubrl
or
jmp
xor
dec
sub
jno
sbb
xor
push
dec
jae
sub
push
add
aaa
sub
jae
movsb
or
sbbb
cmp
aaa
xchg
dec
clc
sahf
roll
lcall
popl
push
mov
ds
mov
pushf
xchg
stos
sbb
popf
mov
popa
cwtl
mov
mov
jns
ja
push
jmp
out
sub
movl
jno
sti
lds
sub
sahf
loopne
mov
dec
and
cmpl
and
jge
and
push
aad
cli
mov
xchg
aas
pop
shlb
test
rorl
mov
lahf
lea
push
out
and
nop
mov
shll
xor
mov
dec
subl
add
inc
pop
loopne
and
push
and
clc
subb
out
decb
out
rcl
lret
jmp
xchg
xchg
and
addr16
mov
mov
lret
imul
push
fsub
idivb
bound
pop
adcl
mov
iret
sbbb
xor
push
pop
mov
clc
loope
add
lahf
xor
lods
in
sub
popf
lahf
pop
or
cmp
rcrl
and
xchg
out
push
imul
enter
adc
cmp
cmp
push
pop
mov
xchg
outsb
pop
jge
xchg
mov
pusha
addl
cld
call
sub
pop
lret
daa
shl
jno
xchg
insl
in
xorb
xor
and
push
jb
jge
outsb
iret
xor
inc
movsl
push
gs
pop
dec
pusha
iret
sbb
push
jg
int
pop
jo
cwtl
les
push
push
inc
mov
shrb
sub
jmp
mov
lds
or
les
test
add
jo
jge
jecxz
mov
push
test
mov
or
push
lods
imul
jae
pop
test
xor
sarb
xchg
mov
fs
mov
insl
loope
pusha
scas
push
imul
rcll
inc
add
cmpsb
sbb
pop
fstpt
cmp
xchg
popl
shlb
int3
cmp
int3
gs
or
pop
add
and
scas
cwtl
imul
and
mov
or
jmp
pop
adcl
xchg
lock
mov
add
push
inc
lret
cmp
stos
mov
sti
pop
sub
sbb
popa
ret
add
loop
pop
and
loop
loopne
aaa
mov
lock
dec
add
pop
hlt
add
rcl
addr16
in
or
jnp
cld
dec
or
adc
sub
out
cmp
imul
stos
jnp
clc
xchg
inc
xchg
cli
sbb
push
jb,pt
cmp
push
xor
pop
dec
ret
dec
cwtl
mov
mov
pop
mov
icebp
dec
mov
jp
sub
mov
cmp
add
stos
add
not
mov
jmp
push
cmp
dec
xor
adc
pop
ljmp
mov
xchg
pop
lret
js
mov
fdivs
mov
add
xor
cld
je
fiadds
dec
out
pop
and
aaa
push
dec
sub
in
xor
bound
stos
inc
fdivr
jne
sbb
outsl
mov
fisubrl
pop
stos
push
les
leave
xor
mov
pop
mov
dec
mov
shl
hlt
jbe
out
jb
daa
add
lcall
mov
aad
xchg
fcmovbe
int
ficoml
lret
jl
mov
les
mov
pop
ja
inc
fsubs
xor
arpl
cmp
mov
xor
stos
inc
jmp
shrb
sbb
fistpl
xor
mov
push
ror
lods
aaa
push
mov
rolb
bound
iret
or
xor
pop
dec
test
dec
xchg
xchg
sub
stos
iret
adc
arpl
mov
out
out
add
pushw
pop
sbb
aaa
enter
xchg
repnz
add
in
sbb
imul
mov
sarl
rcl
mov
and
xchg
das
in
aad
and
pop
out
inc
das
xchg
daa
and
sub
sub
outsb
cld
add
sbb
faddl
mov
mov
ret
jl
fdivrs
popf
sbb
loop
cmp
jp
xor
sbb
loope
add
mov
cmpb
mov
adc
mov
mov
mov
push
dec
ret
mov
shl
inc
mov
rcl
jmp
and
pop
lret
pop
jo
icebp
push
shll
xchg
scas
sbb
xchg
lock
inc
jecxz
add
loope
mov
or
pop
dec
cwtl
push
sbb
pop
fsubrl
shr
pop
aam
testl
and
filds
insb
xor
pop
int
push
icebp
mov
aas
push
fmul
jg
sti
mov
dec
outsl
scas
out
mov
cmc
mov
jl
xchg
and
jecxz
js
or
add
sub
mov
cs
ret
stos
pop
negl
lods
xchg
jg
stc
jge
mov
outsl
xchg
inc
aam
addr16
aad
pavgw
dec
xchg
dec
testl
adc
rorl
shrl
call
idiv
iret
in
loopne
sub
pop
imul
out
and
gs
iret
ja
inc
cmp
icebp
sbb
and
aaa
mov
add
aam
not
and
sbb
mov
lret
enter
inc
fidivl
xchg
lods
xchg
xor
add
fiaddl
jo
xchg
sub
fs
mov
pop
fs
fildl
add
jae
jle
sbb
mov
les
cli
sbb
push
push
rcrb
popl
scas
lods
push
push
rcr
stc
orl
inc
insb
mov
inc
loopne
jae
fnsave
addr16
or
jp
lods
mov
jge
orl
and
inc
clc
dec
loope
loope
pop
adc
outsb
xchg
mov
mov
sarl
lock
cmp
fnsave
div
fildll
ss
sbb
lds
or
in
pop
jecxz
jno
cmp
sbb
rcrb
inc
lahf
inc
stc
add
insl
lods
and
xchg
mov
sbb
lahf
push
or
stos
cmp
fsubrl
popf
loope
repz
ret
xchg
fmuls
push
cmp
out
fwait
leave
std
or
gs
ret
movb
ss
test
pop
repz
pop
fisubs
mov
mov
mov
dec
jnp
leave
pminsw
dec
aaa
ret
movsl
mov
push
mov
dec
lods
scas
ja
add
mov
pop
mov
add
mov
pop
cmc
pop
pushf
push
cld
addr16
arpl
cmpsb
pusha
mov
in
sbb
loopne
arpl
rcrb
lahf
sbb
iret
and
push
dec
push
sbb
pop
rcrb
je
push
push
sahf
mov
and
xchg
mov
add
fstps
push
xchg
sub
mov
iret
test
decl
aaa
xor
lea
xchg
jo
and
mov
ss
outsl
lret
stos
pop
decl
cmc
dec
mov
mov
or
add
push
mov
dec
inc
xchg
out
mov
inc
aam
sti
push
test
adc
or
push
mov
inc
jne
je
pop
mov
repz
scas
adc
push
mov
xor
cmp
jp
xchg
jmp
adc
aam
dec
sbb
pusha
mov
iret
fucomip
mov
sarl
jmp
inc
push
sub
or
mov
cmp
inc
mov
cltd
shll
cmp
mov
pop
scas
adc
pop
das
push
lcall
adc
mov
pusha
std
pushf
iret
sbb
inc
mov
jl
iret
pushf
inc
push
sub
inc
popl
jmp
xchg
and
lahf
notb
ja
sahf
sbb
pop
pop
sbb
jecxz
lahf
shrb
cmp
fimull
mov
inc
cld
aaa
or
imul
cmpsb
jle
lahf
add
add
jno
jle
movsl
ja
adc
sti
inc
shlb
sub
loop
std
aaa
imul
mov
xlat
or
sahf
ss
jnp
sub
jmp
inc
ds
xlat
xor
in
mov
mov
cmpsl
cli
call
popa
cli
clc
dec
mov
fbstp
xor
jl
cmp
cmp
cmp
fstp
xor
not
and
pusha
mov
sahf
jp
inc
xchg
sbb
sbb
imul
adc
sahf
in
dec
cltd
adc
adc
rolb
jns
das
jg
in
push
addr16
ljmp
pop
notb
jb
divb
mov
outsl
pop
xchg
or
popa
pop
test
or
push
xor
dec
mov
and
testb
cmp
inc
dec
addr16
mov
add
push
jb
fwait
xchg
lds
and
out
nop
cmp
outsl
push
adc
pop
push
cmp
lods
xchg
push
sbb
pop
daa
flds
cwtl
mov
jns
jp
and
mov
sbb
pop
stc
test
popf
scas
sbb
jnp
dec
divb
cmp
cmp
mov
adc
enter
shl
push
mov
cmp
movsl
add
in
outsl
or
push
mov
test
xor
loope
mov
cmpsl
inc
sbb
fisubl
andb
out
mov
repnz
aad
jnp
mov
mov
fisttpl
in
push
mov
cld
and
aaa
in
stos
add
iret
int
das
jae
pop
xchg
and
adc
inc
outsl
inc
xor
negb
xor
aad
aas
dec
mov
cs
xor
insl
lcall
add
push
fst
jae
pop
scas
bound
imul
mov
aad
adc
mov
and
dec
inc
inc
or
cmp
test
and
les
xor
mov
gs
pusha
sub
lds
les
repnz
in
and
test
xchg
sahf
cs
mov
push
sbb
ds
out
or
stos
pushf
dec
test
xchg
pusha
xorb
xorl
fistl
cmpsl
or
stos
push
cmp
movsb
push
or
movsl
push
or
push
and
das
jg
cmpb
xor
lea
shrl
stos
in
cwtl
dec
dec
lea
inc
cld
dec
dec
mov
mov
mov
cmpsl
and
sar
rcll
pop
hlt
add
stos
test
pop
lock
pop
in
aam
arpl
or
data16
imul
jp
cmpl
dec
cmp
mov
sub
mov
jno
aas
ja
cs
sub
mov
mov
and
jg
ret
xchg
sub
sahf
fisubrl
cmp
dec
mov
jge
insl
push
iret
inc
fcmovne
mov
andb
outsb
mov
out
mov
sbb
notl
sub
lret
sbb
nop
push
inc
jecxz
add
push
rcr
out
leave
out
xchg
insb
idivl
xchg
pop
push
pop
sub
pop
rcrl
scas
mov
add
lea
pop
inc
mov
xchg
cmp
outsl
push
inc
push
pushf
dec
in
lahf
cs
in
sub
lods
test
popf
xor
pop
and
sbb
dec
sub
lahf
ret
pushf
pop
filds
adc
rcrb
test
es
shrl
inc
sbb
sub
iret
cs
jb
enter
jo
sbb
mov
test
jle
push
div
cltd
jo
scas
mov
ret
push
xchg
xor
or
mov
cwtl
pop
sub
int
sub
ret
cmp
and
inc
xlat
in
ret
imul
test
mov
rorl
jg
mov
idivb
sub
pop
cmpsb
push
lea
sub
mov
frstor
scas
clc
ljmp
mov
inc
jg
mov
add
dec
adc
addr16
mov
rolb
cli
pop
xchg
cmp
inc
mov
mov
push
mov
or
mov
icebp
add
mov
inc
out
dec
pop
stc
push
and
mov
mov
sarb
push
testl
sub
stc
rolb
mov
sti
scas
dec
ret
test
cmc
sub
repz
jecxz
test
cmp
fmull
jp
xor
push
repz
sub
addr16
cmc
in
or
or
ds
test
adcl
loope
divb
adc
subps
pop
das
xor
dec
pusha
loop
int
pop
dec
pop
sub
icebp
adc
iret
mov
fildll
xor
pop
imul
fcmovnu
or
lds
rcll
inc
fcomps
inc
lcall
or
iret
iret
xor
pop
out
sbbl
popl
bound
stos
cmp
pop
lahf
mov
xor
rorl
xor
loop
pop
dec
and
cmp
xchg
lret
lcall
xchg
fldt
or
or
add
out
insl
outsl
aas
xchg
loop
sub
jp
inc
xchg
decl
pop
dec
pop
adc
jo
cmp
lret
mov
fidivrs
loope
mov
jl,pn
sbb
call
mov
das
inc
push
and
roll
iret
outsl
das
test
add
jge
arpl
xor
add
scas
popw
ljmp
repnz
fwait
adc
out
adc
inc
inc
cmc
push
fildl
lds
push
jl
loopne
in
fs
stos
cltd
cltd
dec
adc
mov
imul
fs
jnp
filds
jecxz
pushf
addl
add
loopne
pop
pop
dec
cli
lock
inc
sub
pop
out
push
mov
pop
imul
inc
lahf
sbb
pop
das
add
inc
fmull
lcall
in
fsubl
push
push
stc
add
sub
sbb
add
fcmovnb
adc
inc
push
xchg
pop
pop
repnz
mov
and
mov
sub
xchg
add
loope
dec
xor
cmp
ds
es
mov
lea
loope
enter
mov
xor
pop
iret
pop
popl
mov
push
or
mov
lcall
out
dec
jae
xchg
outsb
mov
xchg
mov
fsubrl
sbb
enter
dec
push
and
jge
fdivrs
cmpl
mov
and
iret
mov
pop
iret
xchg
add
cs
test
pushf
mov
sbbb
cmpsl
orb
jmp
and
push
icebp
mov
dec
push
movsb
mov
call
fs
data16
sub
inc
lock
mov
inc
mov
mov
mov
arpl
scas
rorb
fcompl
fstps
add
xor
adc
fistpl
or
dec
daa
push
pop
and
lods
cmp
popa
shrb
adc
xchg
icebp
out
xchg
inc
fcom
mov
push
jp
sub
pop
leave
dec
iret
inc
mov
push
mov
incb
or
arpl
insl
cli
in
xor
jmp
ja
xlat
aam
loop
fmuls
leave
mov
sbb
dec
popa
mov
add
jge
subl
sub
add
mov
lcall
xchg
inc
scas
dec
in
inc
sbb
cmp
or
sbb
mov
fistpl
test
lcall
lcall
or
pop
arpl
adc
xor
pop
pop
call
dec
dec
cmp
sbb
jecxz
and
test
push
add
xor
arpl
arpl
pop
iret
add
stc
test
es
mov
lahf
push
movsb
cmp
mov
insl
pop
push
repnz
leave
adc
jecxz
mov
jp
mul
in
stos
dec
mov
cmp
mov
and
xchg
outsb
sbb
ja
mov
inc
mov
jb
dec
or
xchg
mov
mov
pop
aaa
add
aas
push
sub
mov
push
pop
xchg
pop
insl
aaa
jge
push
fcmovb
or
push
pushf
fdivr
adcb
das
mov
sub
dec
sti
pop
mov
dec
rorl
lgs
pop
hlt
cmpsb
xor
fiadds
insl
mov
sbb
pop
pop
les
pop
pop
in
nop
iret
push
cmp
mov
bound
aas
sub
dec
fistps
or
cmp
fimuls
scas
lcall
aad
lods
enter
inc
mov
dec
mov
sbb
cmp
mov
dec
xchg
int
cmp
adc
ret
cmpsl
adc
outsl
mov
subl
sbb
lods
or
pop
mov
in
hlt
mov
jl
lock
mov
dec
lods
inc
out
fisubl
push
jno
test
and
lret
or
out
pop
or
imul
jmp
psrld
mov
orb
push
in
jge
mov
mov
mov
mov
jae
call
ja
insl
movsl
addr16
push
fsub
fistps
stc
outsl
inc
pushf
rcl
mov
mov
mov
inc
pop
sub
mov
push
lret
mov
xor
cmp
mov
ret
in
and
sub
aaa
pop
repnz
addr16
ror
mov
sbb
int3
xchg
cmp
dec
ds
jo
aad
or
stc
mov
xor
mov
ret
xchg
aaa
subb
dec
clc
dec
pop
mov
outsl
inc
jecxz
adc
jno
loopne
push
inc
mov
xchg
not
inc
ja
je
fnstcw
mov
scas
iret
sbb
mov
xchg
test
mov
gs
adc
add
xchg
cmpl
xchg
push
add
inc
addr16
inc
bound
and
xchg
test
push
std
out
cs
out
pop
sub
cmpsb
in
inc
ret
popf
sbb
pushf
dec
std
fldl
jne
jg
and
ds
das
out
add
adc
mov
iret
push
loope
sbb
adc
dec
xchg
push
out
xchg
out
cmp
mov
xor
loop
mov
cmc
test
push
iret
push
mov
xchg
subl
fcoms
mov
inc
jl
out
pop
mov
lret
cwtl
adc
sub
repz
rcll
add
cmp
cmp
mov
lret
cli
lret
out
push
rcrl
fidivrs
ja
push
ljmp
negl
sbb
leave
lea
adc
and
pop
imul
inc
sar
mov
jbe
subb
mov
loopne
xchg
lret
movsb
xchg
pushf
ss
push
fmulp
cld
xor
mov
pushf
bound
mov
pop
push
fldl
in
dec
in
mov
push
test
sahf
jbe
mov
es
dec
inc
icebp
sub
daa
sub
stc
sarb
mov
sbbl
addr16
push
in
pop
dec
imul
xchg
cltd
mov
adc
dec
dec
popf
inc
jnp
adcb
add
cwtl
das
push
sub
std
fwait
repz
shr
test
jmp
mov
sahf
fstpt
jle
mov
adc
mov
outsb
popa
add
xor
sub
mov
decb
sarb
sub
xorb
jns
xchg
pop
cltd
push
mov
dec
call
imul
jge
data16
mov
adc
mov
pop
xchg
jno
out
sub
push
sbb
inc
sahf
mov
adcb
sub
push
mov
inc
popf
addr16
lea
dec
xchg
sub
adc
pusha
fcoms
cwtl
fwait
shrl
inc
jge
cwtl
je
popa
inc
fdivl
xor
test
pop
loope
dec
or
sub
stos
mov
adc
and
push
push
test
nop
into
dec
flds
arpl
push
xchg
pop
fisubs
je
js
js
jecxz
mov
jns
cs
movsl
mov
mov
xchg
mov
insl
out
cmpsb
jecxz
jne
out
adc
mov
cmc
les
inc
xchg
rorl
roll
jns
loop
push
rcr
fcomps
sbb
sub
cs
insb
pop
jno
sti
cld
pop
and
add
sbb
jnp
add
cmp
pop
push
ss
sbb
sbb
push
cmpsl
cmpsb
inc
push
fcompl
filds
out
sti
imulb
cmp
xlat
inc
xchg
movsb
stos
push
mov
mov
daa
xchg
cs
push
insl
mov
mov
lea
mov
lods
dec
fwait
addr16
mov
and
ret
out
xlat
push
in
fsubl
fisubrl
sub
push
fistl
dec
nop
les
mov
pop
jb
dec
arpl
imul
inc
xchg
leave
aam
stc
add
cwtl
and
aad
sub
clc
and
insb
push
adc
mov
loopne
and
mov
dec
inc
push
push
outsb
cs
mov
xlat
movsl
push
test
push
es
pop
cmc
and
sub
push
and
mov
adc
jae
lahf
dec
scas
cmpsb
pop
test
lea
fstl
push
pop
cmc
sbb
push
mov
clc
mov
xor
ds
sbb
cmp
sbb
mov
imul
mov
xchg
mov
sbb
in
inc
jo
pop
shr
loopne
mov
popf
insl
leave
push
bound
dec
mov
add
pop
push
jne
jae
ffree
pop
cmp
pop
std
adc
and
jg
inc
sbb
scas
popf
je
shr
in
cmc
mov
daa
pop
dec
shll
imul
cmpsb
cmc
cltd
inc
cld
mov
and
loope
cmpl
sahf
cwtl
mov
cmp
jae
xor
pop
mov
xor
pop
pusha
dec
bound
and
adc
idiv
or
inc
fadds
cld
mov
mov
cltd
in
ficoms
pop
fisttpl
icebp
push
orb
cmc
cli
sub
not
test
jmp
lds
pop
fld
inc
xchg
jmp
std
pop
int3
in
sub
lahf
push
dec
cld
mov
mov
add
mov
pop
xor
push
jl
movsl
cmpsl
rolb
push
iret
je
jl
xor
jb
int
mov
std
xchg
in
cmpb
cmpsb
jbe
lahf
xchg
orl
or
and
pop
aad
adc
ret
xor
data16
rcr
push
xchg
in
cmpsb
ljmp
jo
cld
fdivs
push
clc
and
pop
jg
pop
shll
jbe
sub
dec
sub
lods
movsb
pop
stos
ss
stos
or
add
or
mov
push
mov
hlt
popa
mov
fcomi
es
imul
mov
movsl
sbb
push
lahf
popf
add
leave
adc
inc
rorl
movsl
sub
rclb
mov
xchg
dec
stc
mov
pop
mov
pop
out
push
jle
inc
jmp
mov
mov
imul
cwtl
or
pop
push
imul
mov
xor
push
loop
jb
push
cmp
cmp
shrl
mov
cmp
and
xor
dec
repnz
in
es
xor
jecxz
jg
out
ret
mov
jo
fldl
mov
add
push
push
xchg
mov
sbb
cmc
adc
add
imul
sub
icebp
fldt
mov
pushf
aaa
fldt
push
mov
ljmp
lds
ss
cmpsl
daa
cmp
sub
lcall
mov
scas
das
mull
and
iret
out
xchg
out
dec
lock
cwtl
arpl
push
and
rorb
mov
and
pop
pop
cmp
sub
xchg
jnp
or
outsb
or
mov
jl
sahf
out
and
aaa
jno
jno
cli
dec
shl
es
pop
pop
mov
push
xlat
les
mov
pop
push
adc
loop
stos
pop
push
lcall
sbb
mov
cmp
ret
jns
movsl
dec
cmp
sub
add
xor
daa
xchg
cmp
sar
push
lahf
sbb
push
outsb
call
lea
faddp
loop
xchg
xchg
lcall
in
mov
mov
mov
fwait
push
cmpsl
scas
jecxz
sub
aas
sbb
inc
aaa
addl
xor
pop
out
pop
sbb
inc
push
xchg
cwtl
inc
cmp
mov
ss
push
das
lret
mov
sbb
push
push
pop
xchg
dec
pop
int
xchg
cmp
and
test
push
jnp
outsb
jo
push
xchg
imul
es
lret
lods
cs
bound
loope
adc
mov
aas
add
mov
movsl
das
xor
pop
out
sbb
inc
xchg
sbbb
idivl
jecxz
push
jno
push
dec
xchg
movsl
sbb
sub
push
lret
sti
fidivs
push
test
jecxz
call
addr16
arpl
mov
leave
mov
fistpll
add
xor
out
pop
sbb
pop
pop
cs
lahf
push
add
dec
movsl
inc
xor
out
sti
sbb
aas
xrelease
dec
jmp
push
cwtl
jecxz
pop
and
pop
fwait
mov
pop
sti
stos
jo
push
mov
dec
xchg
scas
lods
push
cmpsl
bound
lahf
adc
mov
fcmovnu
into
add
mov
movsl
lret
xor
pop
xchg
add
int
fbld
ja
jae
jg
pop
pop
out
repz
inc
filds
sub
int3
xor
pop
cmpsl
mov
xor
mov
cmp
lret
call
fwait
lods
pop
addr16
arpl
mov
outsl
mov
leave
mov
iret
add
mov
movsl
pushl
or
pop
sbb
inc
push
xchg
cwtl
inc
cmp
mov
ss
push
das
lret
mov
sbb
push
push
sti
push
jo
push
imul
movsl
incl
xchg
imull
adc
out
sbb
xchg
leave
mov
lret
lret
int3
cs
ret
cmp
and
pop
jecxz
loope
adc
mov
sub
mov
movsl
iret
pop
out
sbbl
jnp
jle
jae
xchg
pop
or
out
add
out
sti
sbb
push
adc
lahf
movsl
mov
addr16
arpl
loope
push
shll
cmp
stos
repz
imul
mov
leave
mov
dec
fistpll
ja
jae
jg
mov
sbb
adc
sbb
inc
iret
xchg
dec
int3
cmp
pop
lahf
mov
cmp
scas
jo
push
lret
lcall
xchg
scas
addr16
fistpl
pop
inc
adc
fdivs
sub
cmp
les
mov
xchg
xorl
dec
incb
int
dec
cmpsl
arpl
and
insb
mov
sub
popa
sub
cmpsb
test
mov
pop
jno
mov
mov
mov
mov
cmp
out
cmpsb
popa
dec
and
inc
lret
dec
test
sbb
push
mov
pop
les
pusha
lods
call
jno
ljmp
iret
jb
rcr
stos
jmp
call
and
pushf
mov
cmp
mov
lods
mov
ret
jecxz
jne
pop
repz
mov
pop
or
xor
leave
in
push
imul
push
pop
ret
scas
mov
inc
in
ficoms
jmp
push
fnstsw
in
loopne
out
jl
fucomip
xchg
out
add
mov
jl
xor
cmp
imul
movsb
nop
push
test
adc
in
xchg
je
xor
or
xor
mov
mov
daa
push
jb
xchg
xchg
xchg
pop
es
inc
xor
mov
and
add
inc
out
loopne
push
lock
leave
mov
pop
fists
pop
mov
pop
xor
out
adc
in
adc
clc
xchg
dec
cli
int3
add
pop
pusha
mov
dec
sti
arpl
push
push
inc
movsl
sti
xchg
out
or
loope
adc
mov
js
je
jp
jnp
je
jns
out
negb
pop
inc
fadds
and
pop
cmpb
sti
xorl
mov
movsl
lcall
xchg
lods
sub
loope
adc
mov
sbb
xchg
add
mov
pop
out
sbb
inc
mov
cmp
mov
stc
push
decl
aaa
js
or
cli
jl
call
lds
or
in
faddl
xchg
test
es
xchg
scas
pop
fnstsw
mov
fcom
repnz
and
movsl
sbb
xchg
int3
js
mov
repz
out
outsl
and
in
pushw
jb
pushf
loopne
int3
test
fmuls
lea
cmp
fs
and
mov
test
lret
idivl
mov
not
jge
scas
sub
hlt
outsl
xchg
out
shrl
sub
js
dec
icebp
cmpsl
popa
das
xor
push
inc
mov
mov
addb
nop
cmc
daa
lods
xchg
arpl
jle
shlb
jmp
xchg
jnp
mov
lea
jae
lods
add
sahf
lret
repz
inc
andl
scas
pop
fisubrl
dec
daa
add
mov
sbb
and
scas
div
outsl
xchg
fnstsw
jle
sbb
fidivrl
negl
imul
notl
aaa
mov
cmp
scas
out
fldcw
out
add
fisttps
sub
lock
repz
lock
push
cld
cmp
imul
pop
jae
ss
pop
call
pop
stos
pop
fadds
test
or
sahf
outsl
mov
js
pop
jmp
loop
iret
jnp
cmpsl
jnp
sub
jle
and
aam
dec
adc
dec
fucomp
push
jge
and
lods
cmpsl
ss
fnstenv
sahf
xor
outsb
inc
mov
ret
or
fildll
mov
dec
lock
mov
jecxz
adc
cmpb
js
add
pop
push
ja
fdivl
cmp
adc
out
push
repz
lret
lret
test
push
or
add
mov
cs
xor
adc
xchg
fldl
filds
loopne
dec
adc
jp
xor
lods
out
movsb
faddl
and
fwait
call
add
test
dec
xor
pop
int3
mov
lcall
inc
jno
js
je
pusha
inc
add
mov
jle
dec
inc
adc
cmpsl
sub
popf
sub
jae
sub
jmp
pop
inc
mov
arpl
cs
inc
cmpsb
inc
sbb
sub
push
mov
sbb
dec
sub
jecxz
jg
idivl
popl
int
sub
mov
sub
lods
add
movsb
dec
pop
or
insl
faddl
jge
sbb
test
pushl
cmpb
test
and
sahf
mov
lahf
imul
test
shll
sbb
rep
jmp
mov
or
or
sbb
push
add
testb
push
sbb
pop
mov
pop
fsub
fisubl
sub
cmpsl
rcrl
jae
ljmp
mov
jb
sub
mov
sub
aas
mov
pop
je
stos
jbe
call
fdecstp
pusha
flds
lahf
data16
aam
mov
lds
daa
xlat
cld
movsb
ljmp
xchg
xor
int
stc
std
ret
inc
xchg
adc
cmp
fisttpll
loop
fcoms
sub
loopne
inc
fistpl
dec
sbb
jmp
xchg
ret
clc
push
push
sbb
inc
lock
shlb
fsubrp
aaa
lds
sub
or
in
push
inc
mov
adc
mov
pop
cmpsl
pop
mov
push
fiaddl
cmp
repz
cmc
negl
dec
test
push
ljmp
xlat
mov
add
hlt
or
sbb
mov
push
mov
cli
repnz
add
xchg
daa
cmpsl
cli
pop
ret
insb
pop
sahf
outsl
addr16
fstps
stos
xlat
fistpll
mov
cmpsb
es
cli
call
cmpsb
out
ret
adc
fs
sbb
lds
in
mov
sbb
imul
mov
stos
sub
movsb
xor
sahf
push
cld
add
packsswb
out
or
es
pop
jno
inc
aad
sub
les
dec
sbb
outsl
fistpll
or
iret
add
jg
lcall
xchg
sbb
shl
test
inc
push
imul
xchg
fdivl
in
fsubs
sub
ret
movsl
push
cmp
in
mov
inc
fcoml
sbb
inc
and
jae
mov
arpl
repnz
sti
jg
sub
xor
das
mov
subb
aam
int3
dec
popf
xlat
loop
xor
dec
hlt
sbb
ficompl
mov
sub
xchg
dec
movsb
cmpsl
and
and
ljmp
inc
sub
sbb
sub
gs
pop
ja
fiadds
int
inc
pop
mov
mov
aaa
push
cmpsl
rol
notb
jno
ret
shlb
subb
sub
int
test
adc
xchg
mov
out
test
lods
push
rcr
push
mov
and
andb
add
test
adc
push
mov
add
sub
out
and
sti
push
inc
add
mov
mov
xchg
cmp
pushf
dec
cmp
ja
push
andl
mov
cmpsl
adc
sbb
jae
mov
pop
push
jl
arpl
fisubrs
sahf
cs
sbb
inc
repnz
fcmovu
add
mov
icebp
int3
testb
cmp
cmp
xchg
xor
mov
mulb
enter
hlt
fisubrl
daa
inc
add
in
shll
mov
sbb
test
scas
incb
push
pop
loopnew
out
push
cmpsb
inc
ficoms
shlb
push
pop
sbb
out
mov
fistpll
mov
imull
inc
jno
mov
test
jge
jbe
jnp
sbb
adc
mov
jecxz
mov
aad
mov
into
or
jle
int
push
jecxz
adc
clc
xchg
jbe
push
adcb
mov
sub
add
jecxz
jno
ds
jne
and
cld
movsb
lahf
pusha
and
push
mov
inc
xchg
push
ret
mov
add
loopw
fistl
push
fsubs
jge
mov
lret
dec
xor
jmp
mov
jmp
lock
addr16
push
movsb
jecxz
cmpsl
stc
jo
test
inc
dec
aaa
or
xor
out
outsl
addr16
sbb
push
jo
or
sub
jp,pt
push
jae
adc
rcll
mov
sbb
fisttpl
std
leave
jb
or
sbb
jns
dec
push
cmp
jae
out
pop
fnstenv
sub
sub
idivl
or
xchg
mov
pop
jb
mov
sbb
xchg
push
adc
pop
mov
adc
pop
lret
sarl
adc
ljmp
psubb
mov
push
mov
mov
dec
loop
inc
dec
inc
insl
mov
fisubrl
mov
ror
test
stos
popa
jno
decl
xor
rolb
test
sti
and
or
and
adc
ja
je
adc
push
and
push
lea
cmp
pop
int3
iret
sti
dec
nop
addr16
push
dec
push
push
pop
adc
and
dec
jns
xchg
arpl
xor
lcall
sahf
mov
mov
pop
mov
into
imul
ret
mov
adc
jp
out
fcompl
mov
mov
cmp
mov
mov
sub
inc
cmp
clc
repnz
outsb
out
adc
nopl
rolb
pop
inc
cmc
jbe
inc
ljmp
inc
inc
push
or
lcall
testl
aam
scas
xchg
jns
mov
mov
cltd
xlat
insl
jo
push
addr16
nop
or
daa
shlb
jecxz
clc
mov
and
mov
pop
push
imull
mov
repz
mov
inc
in
fstl
sub
clc
mov
or
lcall
xchg
add
push
cli
fwait
lds
negb
adc
sbb
out
ljmp
pop
add
jecxz
pushl
sub
add
mov
xor
int3
and
pop
inc
jge
stos
add
xchg
testb
push
inc
cmp
jle
mov
xchg
cmp
xor
push
rcrb
scas
cmp
cmp
jg
adc
sub
fsubl
addr16
dec
movsb
inc
xchg
jge
jecxz
mov
out
adc
xchg
sbb
cmp
inc
repz
sbb
call
dec
push
dec
movl
mov
dec
imul
insl
sbb
stos
push
xchg
mov
mov
das
add
nop
pusha
adc
lods
mov
mov
sub
ret
fistpll
mov
pushf
lret
inc
add
addb
and
mov
inc
push
pop
inc
repz
add
add
and
cmp
jg
popa
and
xchg
dec
mov
cmp
xchg
scas
test
adc
pusha
call
test
stos
adc
les
lods
cltd
dec
inc
scas
pop
sbb
pop
rorb
push
sub
in
jno
mov
negb
cmc
push
out
es
aam
pusha
push
test
cmp
push
fwait
mov
sbb
popl
fsub
dec
aad
scas
and
lret
hlt
test
xor
pop
xchg
inc
xchg
inc
int
jo
rclb
jb
mov
and
push
cmp
cmpsb
sti
div
pusha
lahf
jo
repnz
cmc
aam
sub
adc
dec
adc
add
rcl
sub
out
mov
sbb
xchg
imul
or
stos
adc
push
lea
mov
fildll
int
cmp
imul
lods
test
clc
dec
add
ss
cmpsl
xor
fdivrp
mul
cmc
ljmp
cmp
add
mov
sub
cmpsb
xchg
xchg
jae
xor
pop
pop
pop
ror
xor
repnz
shrb
aas
cmp
sbb
icebp
js
into
das
mov
add
repz
inc
push
sbb
test
pushf
daa
sbb
lret
jmp
jecxz
mov
lea
jnp
clc
jb
cmp
stos
inc
push
scas
outsl
xor
inc
iret
push
pop
test
rcrl
and
or
aaa
mov
ret
daa
arpl
mov
fstpt
sub
shr
ret
das
mov
movsw
push
ja
cmc
pop
mov
pop
dec
outsl
or
test
push
mov
cmpl
lea
push
jno
or
push
aas
pushf
out
dec
sub
aas
add
notl
adc
lcall
sahf
in
repz
add
loopne
xchg
push
ret
adc
mov
mov
jnp
xchg
enter
roll
push
jb
or
pop
and
mov
fiadds
or
add
pop
fbstp
push
lret
sbb
dec
and
cmp
in
out
pop
mov
or
pop
fs
loop
sub
movsl
sbb
and
cmp
jo
fcoml
rcll
mov
loop
push
sarb
fisttps
sub
movsb
data16
subb
testb
enter
mov
mov
and
push
ljmp
fildl
mov
leave
mov
push
mov
arpl
xchg
push
jnp
cs
jl
enter
repz
push
mov
jl
push
bound
in
inc
adc
test
fcomp
mov
loop
xchg
and
mov
test
addb
rcrb
aas
sub
or
lock
ret
out
sbb
push
and
push
xor
pop
and
mov
lret
push
and
and
inc
and
dec
xlat
lea
test
test
sbb
lahf
dec
inc
cmp
arpl
jp
test
les
pop
imul
insl
mov
inc
fstps
imul
hlt
mull
jp
inc
push
jno
pop
jae
xchg
mov
jmp
ret
fsubrs
sbb
pop
out
inc
add
cwtl
cmp
mov
cli
loop
sbb
pop
inc
push
ret
subl
xchg
sub
movsl
movsl
push
xorps
ret
nop
stos
lods
sahf
cmpsl
inc
or
adc
cmpsl
adc
repz
dec
mov
cmpsb
push
jecxz
jno
imul
sub
jl
push
sarb
das
insl
adc
jno
fcmove
mov
rcl
push
and
inc
xchg
cltd
xor
mov
mov
xor
loopne
movsb
xchg
xchg
das
lods
subb
or
adc
test
mov
es
jecxz
and
xor
sbb
jmp
jl
mov
jmp
and
popa
mov
inc
sahf
push
aad
scas
addb
or
cmpsl
inc
in
xor
push
inc
cltd
aam
inc
jae
cmp
dec
sbbb
fcmovbe
sbb
pusha
pop
adc
call
sarl
mov
xor
xor
jb
adc
push
pop
sub
daa
test
pop
dec
in
pop
push
mov
testb
push
cmp
mov
adc
mov
sub
aam
and
aaa
repz
scas
loope
repz
mov
sub
jnp
push
rorb
mov
loope
cmp
mov
nop
add
jb
sub
jnp
popa
lahf
pop
lahf
xchg
sbb
mov
rcr
ljmp
jmp
mov
loope
add
pop
decl
fsubrs
adc
jno
push
out
mov
iret
mov
es
loope
hlt
pop
cmc
es
sub
pop
scas
or
sbb
decb
xchg
sbb
imul
and
addr16
dec
pop
xchg
dec
pop
mov
add
or
push
cmp
cmp
mov
xchg
mov
inc
xor
or
inc
pop
js
push
call
aas
xchg
test
ret
test
or
ret
mov
jmp
incb
stc
andb
cmp
push
sub
and
pop
ss
mov
mov
cmp
xchg
jl
sbb
mov
sbb
sub
mov
inc
pop
aad
cmp
mov
inc
int
pop
jmp
fnstenv
or
cmpb
fs
push
jge
and
imul
std
out
addr16
dec
imul
pop
add
push
ss
inc
dec
je
push
inc
pop
pop
jo
lock
jns
mov
or
dec
addr16
inc
pop
fidivl
mov
scas
xlat
data16
sti
inc
test
sahf
mull
sbb
cmp
push
fidivrl
push
sub
jmp
dec
pop
shrl
fsubl
aas
rcrb
ss
and
push
sbb
xor
cmp
fisttpl
pop
xlat
std
pop
test
or
mov
jl
out
arpl
mov
das
les
ja
aad
call
pop
pushf
fsubrs
add
js
stos
sbb
lret
push
lahf
and
iret
inc
fadds
icebp
mov
sbb
pusha
inc
xchg
movsl
jmp
jnp
dec
imul
shlb
and
xor
mov
inc
lds
clc
sbb
mov
and
and
xor
imul
pusha
ss
push
xchg
stos
lahf
jge
sbbb
and
add
dec
sbb
lcall
aas
popa
inc
xchg
pop
bound
out
sub
cmp
push
jnp
daa
and
mov
out
arpl
push
jns
mov
imul
aaa
imul
jge
scas
pop
fstps
stos
idivl
lock
jge
cmc
cmc
inc
sbb
outsb
cmp
jb
mov
push
sub
mov
mov
hlt
out
insb
shll
jno
sti
or
addr16
aam
adc
insb
hlt
mov
cmpl
jmp
xor
jae
add
jo
push
in
pop
fwait
in
cwtl
mov
mov
loop
jne
and
dec
mov
xor
mov
popf
add
insb
arpl
fwait
mov
fs
popa
repz
adc
mov
inc
divl
push
imul
add
clc
xchg
dec
pop
xchg
ss
cmp
out
into
pushf
cmpsl
xchg
insl
pop
aas
fcmovu
fisttpl
pop
mov
jle
and
cmp
js
sub
shlb
stc
mov
mov
cmpsl
add
dec
inc
pusha
stos
pop
mov
data16
inc
imul
je
jnp
stos
mov
sbb
add
mov
pop
mov
pop
roll
push
jp
mov
add
xor
jmp
inc
and
inc
insl
scas
dec
ror
cmp
mov
pop
push
test
outsb
and
push
or
daa
mov
or
fstpt
mov
adc
test
jo
dec
imull
divb
and
aad
pop
es
and
xor
lea
xchg
push
xchg
ficoms
hlt
xchg
rcrb
xchg
shlb
daa
dec
mov
in
je
pop
dec
or
js
xor
int3
stos
leave
sbb
or
cmp
xchg
bnd
mov
aaa
mov
inc
std
sbb
dec
pop
dec
in
add
xor
pop
and
shl
jns
cwtl
mov
lahf
bound
jne
test
and
pop
out
xlat
aad
lahf
mov
add
pushf
and
loope
mov
outsb
imul
nop
pushf
pop
push
mov
fistps
cmpsb
cltd
add
mov
ss
and
lock
sbb
mov
movsl
dec
jle
sub
lret
mov
aam
out
addb
inc
insb
jmp
stc
ss
mov
aad
gs
ljmp
or
lret
int3
xchg
shl
inc
xchg
gs
cwtl
mov
xlat
dec
testl
pop
mov
pop
cmc
or
aaa
adc
sub
stos
xchg
xor
jecxz
inc
aas
lea
mov
fs
mulb
out
aas
sbb
out
dec
cs
mov
stos
mov
aad
fadd
push
gs
cmovne
xlat
sub
pop
jae
dec
rcr
sahf
push
jbe,pn
add
loopne
and
mov
push
mov
dec
pop
mov
mov
test
ret
push
or
dec
cmpsb
insl
arpl
pop
pushf
xor
dec
mov
nop
cmp
xchg
out
mov
sbb
orl
xor
mov
rorl
inc
sub
pop
imul
or
aad
jmp
out
ficoml
mov
dec
xor
mov
movaps
cltd
mov
addr16
dec
cmp
xor
lcall
mov
pop
pop
outsl
ja
dec
and
mov
ds
xor
decl
push
mov
repz
sub
mov
sub
sub
mov
push
sub
std
popa
mov
push
not
sub
out
mov
in
xchg
push
cmpl
stos
ds
cpuid
std
push
inc
jg
pushl
repnz
lret
inc
cmp
jae
sbb
ficoml
and
xor
and
inc
lret
sub
mov
shrl
loop
mov
nop
movsb
fistpl
in
aam
lds
lret
addr16
and
sarb
or
cmp
xchg
xchg
add
mov
mov
lahf
ja
ret
out
faddl
adc
popa
mov
xchg
int3
cmc
cli
loop
or
mov
pop
test
inc
loopne
jae
cmpsb
adc
sub
leave
stos
dec
dec
stos
sahf
jmp
test
rolb
gs
out
and
in
or
std
mov
add
sahf
xchg
and
jecxz
xor
add
in
inc
and
sbb
dec
mov
inc
faddl
mov
adc
fwait
mov
out
sbbl
add
cld
mov
std
cmp
jl
testb
push
fidivs
adc
and
ss
lock
mov
jae
ret
xor
clc
mov
and
jno
sub
jl
clc
xor
mov
sub
jnp
sbb
and
out
pop
mov
addr16
push
sub
lcall
cmp
push
and
imul
pop
sub
xchg
pusha
aad
dec
sahf
pusha
xchg
xlat
or
or
pop
in
pop
movsl
cmp
xchg
js
cmp
int3
jp
insb
adc
push
push
or
inc
stos
loop
adc
movsl
lret
stc
xlat
push
in
and
mov
xchg
mov
movsl
sub
ficompl
xor
ljmp
mov
cmp
scas
dec
and
mov
push
sbb
outsb
mov
inc
push
pop
mov
pop
mov
push
push
loope
xlat
das
and
cltd
das
add
jno
sub
push
and
inc
das
mov
shll
add
movsl
roll
mov
arpl
cmc
push
daa
jno
jl
ljmp
call
push
mov
inc
mov
mov
mov
mov
lsl
mov
pushf
pop
mov
imull
and
and
jbe
bound
xchg
imul
sbb
adc
pop
rolb
adc
or
fs
int
and
mov
cli
cmp
arpl
lahf
iret
les
data16
test
inc
imul
and
cmp
jo
insl
int
icebp
popl
dec
cmp
test
or
inc
into
pusha
mov
cld
dec
sbb
mov
xchg
in
and
mov
inc
push
ret
pop
mov
js
inc
loop
sbb
das
and
fisubl
scas
or
shl
cmp
cmpsl
scas
or
sub
cmp
mov
aaa
pop
sub
iret
xor
das
push
mov
lea
test
mov
ljmp
pop
cli
pop
dec
push
inc
lock
add
lock
dec
bound
rol
jle
je
bound
jge
in
mov
in
scas
ljmp
lret
addr16
sbb
popf
and
sub
mov
push
scas
and
fildll
dec
arpl
mov
cmpsl
loop
mov
cmp
gs
loope
insb
ror
call
mov
and
or
scas
loopne
cmpsl
cs
daa
inc
jecxz
xchg
outsl
rorl
lea
mov
fdiv
xchg
mov
and
cmp
jg
mov
sub
or
push
loope
jmp
dec
jl
loopne
rclb
outsl
pop
jno
leave
clc
cmpsb
mov
popa
das
flds
mov
adc
mov
punpcklbw
pop
lahf
pop
sub
sub
jns
mov
ds
in
jp
sarb
std
int
nop
stc
enter
and
sub
xchg
loopne
jmp
mov
pop
repz
cmpsl
jnp
pushl
bound
mov
cmp
lret
add
adc
mov
orl
arpl
testb
adc
mov
inc
inc
into
daa
rcrb
or
pop
xchg
rcl
xchg
out
mov
sahf
pop
iret
ljmp
mov
das
push
test
sahf
mov
leave
mov
gs
cmp
test
and
mov
daa
enter
dec
mov
scas
ret
jnp
jo,pn
ljmp
aaa
cmp
inc
cmp
xor
adc
xor
out
xchg
aad
pop
mov
shlb
test
xchg
jle
test
and
sbb
mov
lret
stos
inc
inc
mov
adcl
sbb
imul
ds
out
dec
pushf
jle
push
bound
sub
pop
push
cmp
fidivrl
out
sbb
fcomps
inc
xchg
xor
pop
popf
notb
loop
and
test
sub
testl
scas
rorb
xor
sbb
adc
scas
scas
push
imul
and
jg
and
sub
clc
mov
xor
pop
ret
pushf
and
shrl
or
mov
jg
int
es
out
popf
adc
fsubrs
xor
pop
repz
fdiv
adc
push
imul
repz
les
call
jnp
orb
ljmp
lahf
lcall
stc
or
xchg
dec
daa
xor
sti
shl
cmp
sbb
rolb
insl
into
pop
js
jo
push
test
mov
dec
and
jmp
bound
pop
dec
adc
ja
shr
lret
sar
xlat
repz
faddl
cmp
inc
sub
mov
ret
pop
and
xchg
sbb
loopne
movsb
rclb
rcl
pop
test
aam
sub
mov
mov
clc
pop
adc
pop
adc
xchg
lock
or
jnp
inc
setp
shrl
mov
jae
push
call
arpl
mov
cli
iret
sbb
inc
mov
jo
sbb
out
jcxz
out
cmp
push
inc
fstpt
jne
scas
inc
jno,pt
sub
outsb
lcall
jnp
jl
lcall
inc
arpl
aas
test
mov
jg
mov
sbb
outsb
adc
jbe
cmp
sbb
decl
call
jg
inc
sarl
mov
xchg
mov
and
cld
dec
fcmovbe
jle
pop
jnp
js
or
and
mov
sarb
mov
in
out
int3
enter
dec
dec
pop
in
pop
mov
mov
xorl
dec
lret
cmp
ljmp
mov
gs
push
popf
mov
cmpsl
fcmovnbe
ljmp
out
mov
sbb
xchg
test
loop
push
ds
mov
inc
fcoms
aas
lea
sarl
and
push
sbb
shlb
sub
adc
sub
or
dec
inc
xor
lods
sbb
push
sbb
jp
mov
inc
fisubrs
xchg
fdiv
das
and
addr16
pop
jmp
xchg
fucomi
enter
cltd
test
mov
repz
sti
inc
mov
nop
mov
fcomp
mov
std
test
and
inc
or
notl
add
js
repnz
dec
int
mov
sbb
jge
xor
lods
add
fdivrp
in
push
jp
jp
cmp
leave
inc
outsl
fwait
sub
pop
scas
mov
imul
sub
push
xor
rol
pop
push
jbe
leave
xor
ret
les
fiadds
ret
lock
xchg
xor
cmpb
fimull
fld
mov
lods
xchg
pop
bound
jecxz
mov
out
add
addb
sub
ja
adc
arpl
call
cmp
sub
ret
mov
sbb
cmp
mov
sub
movsl
jns
int
imul
add
cs
stos
stos
inc
xchg
leave
shll
cs
add
loop
cmp
scas
or
push
mov
inc
jmp
std
cwtl
inc
sub
fdivrs
into
roll
das
cs
shr
int3
lea
mov
sahf
jg
ret
movsb
xchg
push
loope
out
lcall
mov
mov
addr16
shrb
out
enter
push
jns
rclb
mov
popa
addr16
aaa
adc
mov
adc
sbb
add
cmpsb
jae
sub
push
xorl
mov
adc
pop
sbb
sub
pop
lcall
in
adc
xchg
fimull
jbe
cmp
pop
iret
repnz
mov
cmp
fcomip
xchg
inc
out
and
mov
arpl
adc
ret
hlt
and
mov
sbb
insl
repz
mov
js
pop
sbb
bound
les
pop
cmpsb
lret
inc
mov
cmp
mov
cmp
add
inc
sahf
pop
or
mov
pop
arpl
mov
mov
cmp
repz
sub
pop
jbe
std
mov
lods
nop
push
sub
pop
cmpl
dec
pop
jne
aam
cmp
sub
jp
cmp
mov
xorps
in
jl
sub
clc
popf
fists
bound
daa
add
aaa
sub
cmpsb
adc
or
add
insb
leave
sbb
clc
in
push
jge
gs
push
jnp
out
adc
xor
inc
mov
jmp
sbb
xor
mov
scas
mov
sbbl
lock
xor
imul
lcall
test
pop
dec
scas
pop
mov
stos
lret
inc
jbe
addb
es
outsb
sarb
mov
aas
mov
jle
out
jne
pushf
fsubl
sbb
lcall
addr16
lahf
sbb
or
scas
aad
js
pop
insl
pop
andb
xchg
clc
sub
jns
fistpll
mov
ret
into
inc
push
sbb
dec
out
inc
cmp
fidivl
lcall
jmp
sti
mov
inc
inc
adc
adcl
js
scas
cs
dec
test
shlb
sbb
loope
mov
add
ret
testb
inc
lret
cmp
inc
arpl
sbb
jb
sub
dec
jnp
adc
pop
repz
movsb
or
inc
lods
adc
lods
imulb
aad
xor
pop
enter
in
add
notb
pop
jmp
mov
out
add
movsl
cmp
xchg
dec
aam
pop
add
and
cmp
daa
movsl
popa
pop
push
sti
ret
mov
inc
out
adc
sti
dec
mov
fstpt
addr16
mov
and
jmp
adc
in
insl
or
xor
loopne
stc
scas
sahf
sbb
pop
popa
std
pop
sub
cmp
int
outsl
adc
sub
out
lret
stos
cltd
scas
and
pop
sbb
cltd
push
push
pop
fs
push
sahf
sub
adc
stos
hlt
xor
call
int3
inc
dec
or
push
push
lret
xlat
push
fdivr
int3
mov
in
fsubrs
cmp
push
orb
mov
jb
cmp
rcrb
push
pop
jno
rcll
xor
pusha
ficompl
jno
sahf
xor
lcall
in
xchg
sti
orl
mov
xlat
test
ret
pusha
stos
push
and
fsts
sub
dec
inc
pop
popl
mov
sub
rol
sbb
sahf
lea
xor
fdivrl
mov
iret
in
aaa
into
sub
cltd
inc
pand
lahf
les
push
mov
sbb
nop
rcrl
xor
mov
fnstsw
shrl
dec
call
shlb
xor
add
aaa
dec
sub
in
lret
das
add
pop
jmp
idivl
add
rcl
fwait
outsb
aad
sub
dec
or
mov
push
sub
rcrl
dec
shlb
mov
jo
inc
push
dec
push
mov
jle
insb
mov
add
xchg
sbb
xchg
cli
cmpsb
push
dec
inc
sub
jle
flds
pop
jmp
cmp
cs
pop
sub
fistps
jnp
mov
and
mov
cs
jnp
xchg
andb
cmp
and
out
xor
test
cmp
jb
test
adc
cltd
mov
lea
xchg
stos
imul
adc
push
fucomi
jl
iret
insb
mov
rcl
sarb
sahf
xchg
fwait
add
stc
jne
pusha
jp
dec
cmp
cmpsl
icebp
cmp
sub
test
sub
and
fdivrs
mov
or
repnz
or
and
aad
fwait
jbe
in
inc
or
jp
pop
push
into
cmp
es
cmc
pop
adc
loope
xchg
test
pop
adc
adc
sahf
rcrl
add
pop
sbb
orl
jp
rol
pop
cmp
mov
mov
mull
cmp
sbb
push
push
xchg
pop
sub
sbb
add
cwtl
daa
or
scas
fwait
sahf
sbb
mov
pop
xchg
daa
adcl
cmp
mov
push
mov
pop
jl
add
sbb
push
xor
sub
scas
or
add
add
mov
jb
dec
daa
aam
pop
int
pushf
repz
test
xchg
xchg
data16
je
js
ljmp
xor
add
sbb
push
test
xor
std
or
mov
mov
adc
lret
pop
pop
imul
scas
cmpsl
fwait
mov
lock
sub
xchg
sub
xor
jmp
xchg
pop
inc
adc
iret
outsl
cmp
fwait
lret
scas
mov
stos
sub
fwait
dec
mov
cmpl
lahf
mov
pop
xor
maxps
pop
xor
enter
mov
sub
mov
sti
sub
jg
jmp
push
rcrb
mov
cs
inc
psubusw
xorl
in
inc
sbb
into
pop
inc
jmp
inc
lret
sub
add
sbb
aaa
sub
cmp
cmpsl
or
mov
lds
scas
lds
cmpsl
arpl
sub
xchg
lcall
ret
push
arpl
pop
sub
or
xlat
mov
and
jecxz
jmp
fwait
xor
push
and
subl
or
iret
cmp
mov
jae
das
mov
and
pop
ljmp
push
out
jmp
xchg
pop
sbb
mov
cmp
dec
xchg
inc
scas
inc
dec
es
push
mov
das
scas
lret
ljmp
les
mov
sub
and
pop
addr16
pop
shlb
mov
add
jge
mov
rcrl
cmp
inc
imul
mov
xchg
pop
dec
mov
mov
cs
lods
sub
xor
jmp
mov
xchg
daa
scas
mov
jmp
xor
pop
xor
adc
and
cmp
jae
push
sub
or
sahf
sar
mov
jecxz
cld
pop
nop
pop
sbb
nop
push
das
data16
dec
add
push
ror
sub
sub
pop
mov
push
out
ror
push
rorb
bound
lcall
adc
testb
lea
xor
push
adc
out
xor
lea
xchg
stos
aas
data16
or
sub
lea
or
pop
cmp
xadd
outsb
test
scas
lahf
addr16
cmp
leave
push
push
xorl
adc
arpl
sub
cmpsb
iret
imul
xor
icebp
or
sbb
mov
push
add
test
xlat
cmp
data16
xchg
dec
in
fcoms
dec
inc
cli
mov
popa
jge
int
or
insl
mov
ja
jl
and
iret
jle
pop
jecxz
mov
push
and
cmpsb
mov
mov
inc
adc
dec
pop
loope
mov
imul
loop
call
stos
mov
iret
cmpl
xor
into
sbb
arpl
pop
xor
pop
push
into
add
xlat
data16
imul
repz
cmpsb
faddl
mov
loopne
push
or
mov
mov
push
movsb
out
push
shl
js
pop
lods
lcall
cltd
decl
sti
es
pop
test
inc
testl
aaa
sub
ss
jb
mov
cmp
pop
scas
mov
loop
add
push
filds
or
mov
or
adc
inc
mov
stos
mov
push
push
sub
jecxz
jge
test
push
mov
pushf
enter
test
and
mov
in
pop
int
add
shlb
popf
sahf
addr16
push
push
sbb
imul
in
mov
xchg
repnz
jecxz
sub
outsb
insl
mov
daa
gs
sub
mov
pop
jnp
mov
mov
sub
icebp
sub
jl
dec
addr16
ss
pop
mov
fldenv
and
movsl
mov
xchg
call
xchg
into
fcmovnb
imul
movsb
add
push
sub
sbbl
loopne
cli
insb
inc
fs
fwait
inc
lock
dec
imul
inc
mov
ficomps
sbb
test
decb
ret
leave
mov
inc
loope
mov
enter
fcmovnu
and
push
mov
imul
lods
inc
out
loop
cmp
and
pop
lock
fisttpl
mov
xchg
fiaddl
dec
ja
sbb
pusha
shr
mov
inc
loop
push
jnp
arpl
and
outsb
add
jl
mov
push
mov
scas
or
jno
inc
pop
aas
in
mov
mov
movsl
and
xor
dec
cmp
pusha
loopne
mov
jmp
ret
cmp
mov
mov
in
insb
loop
stos
rorb
cld
cltd
stc
push
aam
inc
cmp
imul
mov
push
fldt
adc
xchg
icebp
out
sahf
fs
inc
dec
xor
lcall
fnsave
and
repz
xor
mov
jl
out
xchg
sbb
arpl
cmp
in
sub
ficomps
sub
xchg
imul
sub
jae
add
movsb
out
jge
rorl
inc
jbe
and
dec
vpcmpb
aaa
dec
into
mov
jne
jno
enter
xor
jle
fsubs
aad
mov
ss
adc
mov
and
nop
test
cmp
lcall
or
or
mov
adc
inc
mov
es
xchg
mov
pop
insl
lcall
pusha
inc
ret
sub
jg
pop
scas
add
pop
xchg
sub
ret
rcrb
dec
and
mov
daa
mov
dec
adc
adc
cmc
dec
jne
cwtl
mov
mov
repnz
out
out
sbb
addb
or
imul
hlt
jbe
adc
mov
stos
mul
inc
lods
sub
pop
aam
add
mov
cwtl
flds
push
aad
fwait
adc
mov
test
pop
ret
fistpl
cmp
cs
push
pop
int
adc
adcl
out
adc
fisttpll
lret
les
fsubs
add
or
and
repz
xlat
inc
lcall
aad
sub
pop
arpl
movsl
mov
add
in
sbb
push
lret
sub
mov
fwait
sub
adc
in
add
js
data16
sbb
mov
sbb
lahf
out
dec
jl
xchg
sub
add
push
push
mov
popa
cmc
sbb
aad
adc
hlt
cltd
inc
call
addr16
dec
xlat
adc
add
pop
out
xor
sub
test
cmp
and
cmpsl
outsb
nop
in
into
mov
lahf
sbb
mov
cmp
popa
sub
lahf
add
xchg
inc
bound
jnp
std
pop
imul
or
cmp
jle
sub
fstl
out
into
mov
setle
push
cld
sbb
fdivl
aad
inc
mull
shlb
cmc
cli
out
sti
repnz
stos
aad
in
daa
adc
mov
add
push
cmp
push
push
pop
sub
stos
prefetch
mov
in
inc
incl
sub
xchg
sahf
test
add
rorb
mov
daa
ret
inc
mov
sub
xchg
mov
repnz
insl
xor
out
mov
cmpsl
xchg
dec
data16
mulb
cmp
add
arpl
sbb
mov
loop
inc
add
mov
jo
lds
pusha
daa
jnp
sarl
lcall
mov
mov
pushf
xchg
jbe
imul
arpl
cmc
bound
adc
dec
daa
in
and
int3
inc
pushf
aas
addr16
mov
repz
and
add
daa
repz
ret
stc
pusha
ljmp
pop
ljmp
fbld
pop
jb
loope
mov
cmp
stos
jmp
push
xchg
sub
fucomi
pusha
xchg
xchg
mov
jp
addr16
mov
lods
mov
shrb
sub
pushf
pop
mov
and
push
int
adc
divb
stos
push
loopne
loopne
adc
push
ret
pop
and
push
dec
addr16
cmpsb
sbb
push
add
int3
cmc
or
pop
mov
daa
sbb
mov
jl
xchg
into
loop
push
cmpb
movsl
fcmovb
pop
imul
add
pop
test
and
adc
aam
push
ret
cmpsl
out
push
std
jg
inc
cmp
dec
mov
pop
add
push
sbb
fidivl
inc
es
test
push
dec
add
inc
mov
xor
mov
sti
outsl
mov
lahf
lcall
lds
push
sbb
mov
and
fldpi
sbb
push
test
push
mov
repnz
mov
cmp
mov
mov
or
xchg
aad
lcall
std
pusha
lods
push
jp
inc
or
lea
jbe
mov
xor
xchg
xchg
fwait
sub
jecxz
add
xchg
dec
ret
cmp
sub
jnp
ficomps
add
out
mov
mov
shlb
in
push
test
aaa
mov
mov
and
pushf
pop
cld
inc
sbb
cmp
fwait
sub
cld
int
lds
iret
shlb
pop
xor
xor
mov
stc
jmp
mov
daa
cmp
stc
or
shll
lods
sub
sub
mov
adc
push
pop
fadds
push
push
outsl
push
stos
cs
or
test
lock
lcall
imul
stos
cmp
andl
aaa
lds
dec
cmpsl
push
xchg
lahf
enter
xor
lods
and
stos
ret
and
push
fdivl
xchg
lods
stos
dec
adcb
add
or
dec
aaa
fisttpl
mov
mov
fwait
mov
pusha
inc
mov
inc
xlat
mov
in
jmp
rolb
cs
lret
mov
mov
out
stos
in
dec
imul
shrb
cs
mov
out
and
cmp
into
je
sub
mov
lret
repz
sbb
rol
jae
sbb
cli
mov
inc
mov
ljmp
in
negl
cwtl
sub
dec
shrl
data16
ja
pop
loopne
or
xor
sub
aad
pusha
lea
int3
adc
cmp
jl
dec
lods
and
dec
subl
mov
repnz
iret
daa
cmp
aam
leave
gs
test
jb
mov
add
or
inc
mov
inc
stos
dec
roll
iret
loop
sub
push
jne
cmp
cmpsl
sub
lods
pandn
lds
pop
push
mov
mov
jmp
leave
iret
jns
mov
xchg
adc
sbb
xchg
inc
daa
hlt
js
aam
jp
and
fldcw
xchg
out
mov
dec
or
loop
mov
adc
repnz
sub
clc
setae
lret
fstpt
stos
jnp
adc
imul
loopne
push
mov
arpl
loopne
push
dec
fucomip
mov
mov
nop
mov
fwait
dec
divb
xor
or
jae
lret
in
lret
cmp
sarb
ss
mov
rcr
sub
mov
mov
xor
fs
test
iret
pop
push
xor
testw
icebp
and
leave
cld
sbb
leave
test
pop
or
mov
jge
fisttps
xor
out
sti
jno
xchg
mov
scas
sub
xchg
lods
test
mov
mov
int
inc
mov
sub
push
movsb
insb
mov
fistpl
mov
lahf
call
in
or
cli
sbb
pusha
es
and
and
imulb
dec
cmp
or
adc
les
push
add
test
jae
jg
rolb
mov
mov
add
pop
push
call
arpl
jecxz
mov
xchg
jno
cmp
rcll
fcoml
es
int
leave
repnz
and
adc
push
stos
popa
popl
sub
cmp
fisubrs
add
mov
sbb
cld
icebp
call
add
nop
addr16
pop
mull
dec
pop
mov
mov
aaa
xor
movl
pop
adc
inc
push
lret
sub
pop
xor
jae
movsl
hlt
pop
jne
push
enter
inc
adc
and
out
int3
faddl
aaa
testl
sbb
sarl
ds
xor
push
sbb
mov
lea
shl
jg,pt
addr16
test
stos
shl
stos
repnz
xchg
and
add
lahf
or
testl
xchg
inc
mov
bnd
pop
int3
push
xchg
sbb
and
cmp
or
sbb
cmp
cmpsl
sti
add
in
add
mov
add
dec
notb
add
cmpb
ja
roll
sahf
xorb
fnsave
sub
pcmpeqb
and
xchg
out
mov
scas
jle
cmp
mov
mov
cmp
outsb
push
scas
andl
sub
pop
hlt
pushf
out
out
pusha
sbb
mov
xorps
push
rcl
cmc
es
xchg
dec
sbb
lret
or
push
xchg
cwtl
add
jmp
add
test
daa
mull
cli
pop
cmc
fbld
xor
sbb
fisubrs
xor
loopne
stos
jo
sbb
mov
mov
xchg
into
sbb
ja
sbb
mov
mov
aaa
aam
outsb
xchg
mov
mov
jbe
xchg
outsb
push
dec
lock
daa
xchg
out
dec
rcl
inc
jae
rorl
inc
into
xchg
add
mov
inc
push
scas
pop
and
pop
leave
in
fwait
push
mov
cmp
arpl
loop
adc
faddl
sbb
icebp
xchg
xchg
clc
sahf
ret
xor
sbb
stc
mov
and
mov
push
xchg
adc
adc
repz
mov
xchg
lds
ljmp
pop
popf
or
icebp
leave
push
dec
xor
ja
pop
and
scas
jne
lods
lock
dec
andb
inc
lret
mov
push
out
sbb
cmp
mov
clc
xchg
fwait
es
adc
in
or
and
sub
sub
mov
jge
mov
add
push
inc
cld
cs
xchg
pop
call
cmp
test
popf
push
fwait
push
mov
add
push
loop
push
xor
push
adc
sbbl
adc
cld
bound
out
mov
cmpsl
cmp
cld
inc
dec
lock
jecxz
sub
pop
pop
ja
cmpsl
push
outsb
inc
ss
insl
jb,pt
lock
push
enter
cld
testb
or
inc
add
xor
jge
pop
mov
in
loopne
pop
push
loopne
imul
dec
pusha
jno
lea
shr
add
cmpsl
loope
push
xchg
ret
add
insl
dec
sahf
add
subl
mov
adc
shufps
pop
push
loop
cltd
xchg
aaa
ds
adc
sbbl
leave
xor
fcmovu
data16
fstpl
mulb
push
sbb
dec
add
test
fbld
and
mov
xchg
ret
ret
inc
adc
ja
and
pop
pop
imul
inc
imul
push
inc
mov
pop
lock
imul
add
out
xchg
jb
cltd
inc
or
lfs
jb
xlat
pop
mov
sub
jp
sbb
jp
xchg
mov
arpl
fs
aad
pop
shl
test
enter
inc
andb
mov
sbb
dec
dec
jnp
xchg
lret
insl
pop
push
mov
test
xor
lret
and
incl
sahf
mov
lcall
gs
cmpsb
push
sbb
jg
arpl
dec
jae
arpl
mov
cmp
sub
add
xchg
rolb
into
mov
stc
push
insl
xchg
mov
out
adc
cwtl
xor
repz
ret
jns
xchg
stos
dec
outsb
jle
jl
into
mov
jl
mov
cmp
fwait
daa
rcrl
push
mov
or
and
and
and
test
decb
sbb
and
pop
ret
push
aam
and
push
pop
test
pop
aas
cmp
pop
pop
xchg
sub
cs
faddl
pop
and
xor
sub
push
mov
outsl
iret
sub
adc
mov
mov
imull
aas
push
cmc
in
stc
je
icebp
mov
mov
mov
stc
pop
dec
sarl
das
pop
xchg
pushf
mov
mov
popf
mov
int
mov
enter
jmp
dec
lea
sbb
mov
movsl
cmc
lahf
ljmp
pop
sub
jae
adc
sbb
xor
jo
xchg
fdivr
out
and
insb
jmp
imul
outsb
cmpsb
mov
mov
fdivrp
pushf
dec
push
std
xchg
jae
sbb
daa
xor
xlat
aam
das
std
sbb
movsb
or
push
sub
scas
pop
jmp
sti
xor
pop
mov
cmp
fcompl
pop
inc
push
mov
xor
xor
fbld
repz
and
aaa
popa
mov
jbe
jp
or
jecxz
pop
lcall
aam
xchg
gs
inc
pop
je
arpl
inc
pop
mov
cmpsl
xor
roll
jg
inc
xlat
dec
jae
pop
mov
mov
out
cmc
cwtl
add
pusha
pop
add
or
out
or
mov
inc
or
mov
clc
loopne
sub
shll
shlb
or
sbb
pop
fcompl
movsb
cmc
test
pushf
cmp
cmc
les
movsb
es
mov
xor
setno
mov
inc
xor
gs
mov
ljmp
int
mov
je
inc
dec
or
rclb
add
loope
insl
out
stc
clc
into
jnp
ret
push
out
int
movsl
cmp
sub
inc
js
jno
mov
sub
mov
jl
fstpt
out
adc
inc
xlat
mov
fwait
add
mov
jno
cmpsl
mov
dec
inc
mov
add
pop
inc
add
in
test
or
lock
adc
adc
and
jns
push
ret
fwait
ss
fwait
cld
and
pop
mov
les
ja
and
sub
mov
ds
mov
rcl
inc
jae
js
clc
jmp
jecxz
inc
jo
arpl
das
sbb
in
jbe
fdivr
mov
mov
pushf
testl
adc
mov
mov
push
jmp
dec
daa
repz
inc
adc
add
std
jae
enter
subl
inc
ja
xchg
and
ss
lods
push
add
nop
pushf
leave
and
cwtl
aas
gs
mov
pop
mov
lret
sbb
pop
rorb
ret
shl
out
pcmpgtd
xchg
out
xor
add
pushf
mov
and
push
xchg
adc
bound
in
fistps
or
sbb
dec
mov
fcoms
push
jne
sbb
out
cmp
mov
stos
ljmp
xchg
pop
fs
xor
xor
sbb
and
lahf
xchg
dec
mov
repnz
scas
cmp
mov
mov
fnstsw
add
bound
imul
dec
lods
lea
xchg
ss
rorb
testl
push
push
adc
imul
or
xor
sub
adc
push
lret
push
ror
adc
jp
jne
push
pop
mov
int
dec
cmp
aas
insb
jne
sub
mov
adc
mov
sub
das
or
add
push
jo
lods
push
xlat
rcrl
dec
and
das
inc
push
pop
add
mov
mov
lcall
push
or
rolb
jg
cmpsl
jg
sbb
inc
push
cmp
lea
shrl
mov
pop
int3
xor
les
into
fldl
cmpsb
add
ffree
sti
pop
orl
cmpsl
negb
loop
or
cmpsb
cld
sarb
sti
add
sbb
add
push
add
ljmp
rorb
and
and
jno
fsts
stos
sub
cmp
loope
in
dec
add
test
mov
lret
jbe
pop
fldcw
jge
dec
add
sbb
inc
pop
cmpl
sub
adc
adc
lods
pop
xlat
and
imul
and
shlb
cmp
push
lahf
push
cli
mov
mov
stc
or
dec
fwait
mov
data16
dec
ret
inc
out
or
adc
jb
ljmp
lret
inc
fwait
ret
sub
cmp
cmp
popf
arpl
out
adc
pop
sub
sub
xchg
mov
js
and
pop
push
and
cld
inc
mov
cwtl
jmp
shl
test
xchg
xor
mov
push
fs
sarb
jge
adc
inc
dec
xchg
jmp
cmp
cs
out
std
fcomps
push
mov
and
pop
cmpsl
lea
jge
push
das
jp
dec
xor
inc
in
in
stos
cmpxchg
adc
dec
divps
xor
xor
fcoml
xor
jmp
btrl
stc
dec
push
dec
sub
xchg
int3
sub
and
into
sub
or
mov
mov
fcoms
push
in
cmp
arpl
rol
dec
lds
xchg
sub
shrl
repz
clc
mov
cmp
cmp
lcall
jae
cli
push
adcb
pop
aaa
rcr
sub
dec
mov
xor
rolb
test
sbb
or
cmp
mov
iret
pop
bound
test
pop
cs
mov
enter
in
sbb
lahf
jge
sahf
lods
mov
std
mov
sub
or
pop
mov
dec
jae
testl
shr
imul
cmp
mov
and
mov
ror
sbb
xchg
push
daa
adc
aaa
pop
pop
leave
mov
addb
or
jg
imul
popf
sbb
jb
pop
ret
imul
arpl
out
xchg
clc
out
adc
enter
xor
add
loopne
jnp
jmp
stos
cmp
push
add
xor
jecxz
sbb
in
dec
cli
adc
mov
or
fbld
jg
frstor
minps
data16
jns
out
add
jno
xor
xchg
dec
sub
pop
das
addr16
push
popa
and
jne
test
xlat
xchg
imulb
push
mov
add
ss
cwtl
and
lahf
fsubrl
pop
loop
or
das
push
enter
sub
cmpsb
int3
sub
fs
cwtl
add
es
add
jo
and
sub
ret
test
jno
xchg
shrb
out
sbb
sti
xchg
mov
mov
mov
imul
lds
shlb
scas
sub
loopne
mov
leave
xor
ljmp
in
shlb
insb
cli
out
mov
pop
lock
and
push
cmp
push
jne
adc
push
in
mov
js
xor
sub
testb
dec
cld
arpl
mov
jmp
jp
sub
ljmp
or
out
mov
icebp
popf
adc
inc
das
pop
inc
test
in
lods
dec
arpl
jb
scas
inc
jecxz
dec
stos
pop
sahf
push
cmp
clc
jno
add
and
mov
xchg
sbb
pop
adc
push
inc
add
repnz
aaa
lahf
jmp
add
add
xchg
cmp
dec
xchg
ret
in
sub
movsl
xor
addr16
jb
mov
or
xchg
xchg
lea
addl
shll
cmp
das
push
mov
pushf
pop
inc
incl
or
rcrb
addr16
cmc
adc
fwait
jb
clc
sub
cmp
add
ljmp
idivl
mov
adc
mov
cmp
push
sbb
dec
push
jg
pushf
stc
cld
pushf
cwtl
cli
lcall
push
add
dec
sbb
pop
loop
call
daa
scas
inc
subb
mov
and
jle
sub
out
dec
pop
scas
hlt
jno
push
mov
jg
std
xchg
or
sub
into
sti
push
add
call
repnz
inc
in
lods
dec
lds
cmpsl
cwtl
sub
scas
movsb
loop
mov
out
mov
mov
mov
and
inc
add
mov
in
push
jmp
add
pop
aas
sarb
pop
addr16
cld
inc
pop
lods
add
inc
out
stos
or
movsb
mov
rol
xchg
mov
sti
mov
daa
dec
lea
or
sbb
pop
imul
data16
lret
fsubr
testl
ret
jo
int3
loope
and
mov
lahf
mov
pop
dec
fdivrs
sub
nop
aad
pop
fnstcw
mov
test
inc
ljmp
in
imul
or
out
mov
pop
fildll
popa
push
add
lds
and
in
mov
ds
push
test
pop
div
mov
mov
fists
fldcw
int
push
jmp
pushl
or
dec
loop
dec
cs
popa
inc
jb
aas
and
addr16
or
stos
xchg
rcll
inc
in
sub
jo
leave
fwait
out
cld
test
cmp
and
dec
fxch
mov
rcrb
gs
adc
fistpl
dec
movsb
in
gs
mov
fsts
sbb
jne
mov
dec
mov
sahf
cmpb
mov
call
addr16
xor
bnd
in
mov
insb
pop
push
popf
sbb
adc
ret
xchg
sbb
pop
adc
rcll
sub
dec
cmp
dec
shlb
push
mov
scas
inc
popa
add
dec
jecxz
cmpsb
call
nopl
dec
xor
push
and
mov
sbb
cld
mov
call
xchg
popa
lcall
cmp
ss
adc
xorb
sub
lret
jae
insl
inc
xchg
mov
sub
pop
mov
or
imul
fsubrs
lds
jle
mov
outsl
sbb
sbb
vcvttsd2si
jl
rcrb
cmp
push
adc
shrb
movsl
pop
xchg
shll
mov
xchg
fabs
test
jecxz
fdivr
pushf
imul
aad
test
out
push
repnz
out
push
adc
cmpsb
dec
adc
mov
rorl
and
rcll
jne
rorl
and
mov
out
lahf
insb
xchg
inc
cmpsl
es
jl
fwait
cli
push
push
pop
adc
jp
cmc
mov
xor
sub
sbb
lods
inc
xor
popa
sahf
rep
and
push
lahf
pop
scas
in
call
or
inc
sub
loope
push
inc
sub
lods
pop
jl
rclb
outsl
fwait
sub
out
dec
adc
cmc
mov
dec
mov
and
push
popa
pop
aad
cmp
testb
scas
cmc
jle
insb
mov
sub
add
inc
les
inc
into
jl
jp
addr16
adcb
add
xchg
into
xchg
int3
or
cmpsl
cmp
scas
ljmp
sub
ja
outsb
sbb
rorb
test
jmp
inc
rol
lds
mov
push
add
pop
xor
lcall
mov
mov
mov
into
into
cmp
pop
adc
test
imul
xor
mov
inc
repz
jmp
sub
cwtl
stc
aad
imul
mov
pop
jmp
cld
sbb
jae
cmpl
push
mov
fildl
bound
sbb
pop
outsl
loope
mov
jl
les
adc
out
push
sbb
xor
push
je
sbb
sub
xor
xchg
inc
adc
mov
dec
pop
insb
pushf
addl
xchg
xchg
or
lods
les
movsb
das
into
leave
mov
or
mov
hlt
mov
pop
in
lret
in
pushf
fdiv
xor
hlt
lret
popa
sub
jae
stos
mov
inc
roll
ljmp
data16
mov
dec
ret
cmc
fwait
out
sub
bound
imul
cmp
das
call
jmp
cmp
cli
adc
repz
mov
test
les
ret
push
inc
pop
push
fstpt
imul
sbb
or
jle
jp
jne
pop
movb
xchg
adc
das
pop
sub
cmp
inc
stos
cmp
mov
xor
daa
mov
jo
cmp
stos
stos
int3
jg
aaa
ret
shrl
mov
rorl
mov
xchg
clc
cmpl
sbb
add
out
imul
mov
daa
aas
pop
mov
xchg
sub
xchg
sub
ss
test
mov
push
sub
arpl
mov
cmpsl
mov
and
or
out
jb
mov
dec
sbb
mov
cmp
lahf
stc
cmpsl
stos
shlb
cwtl
orl
negl
sbb
pop
shll
xlat
test
addr16
fbstp
xchg
lcall
stos
scas
adc
lods
inc
jg
fistpl
lea
push
or
in
in
xor
or
aas
imul
in
dec
call
sub
lea
hlt
imul
jns
into
mov
mov
adc
sub
cwtl
lcall
xchg
jle
inc
pop
rcll
jecxz
imul
dec
das
xchg
sub
cld
sub
mov
xchg
scas
es
and
call
mov
pushf
adc
and
shrb
adc
push
jge
cli
aam
mov
jbe
fisttpl
in
sti
jns
ljmp
jmp
das
stos
push
movsb
xchg
ret
mov
test
cmp
out
popa
stos
mov
xor
sahf
mov
pushf
fcmovnbe
into
scas
xlat
out
cmpsl
dec
add
imul
sub
lods
and
mov
or
cmp
cmp
xor
in
xchg
imul
cltd
sbb
loop
movsb
jb
pop
xchg
lods
sub
mov
fistps
inc
ja
leave
cmp
pop
and
stos
dec
mov
mov
jmp
or
out
mov
lret
mov
xchg
mov
sbb
addr16
cmpb
xor
mov
pop
xchg
inc
jno
mov
lock
gs
das
lcall
fsubs
pop
pop
and
xchg
fimull
movsl
out
and
sbb
rorb
in
jno
stos
hlt
das
addr16
lahf
xchg
addb
cmp
div
cmpsb
pop
pop
mov
in
pushf
mov
adc
sub
push
fldt
pop
int3
pop
xchg
mov
cmpsl
add
push
xor
test
mov
mov
sbb
cmp
xchg
and
lods
add
pop
arpl
loop
div
das
stos
add
bound
and
push
and
sbb
jecxz
imul
idivl
pop
arpl
fsubrs
sub
dec
ds
pop
dec
jmp
nop
sbb
adc
aas
jb
jmp
jp
cmp
mov
mov
das
jne
imul
movl
push
push
mov
in
pushf
arpl
cltd
mov
mov
mov
sbbl
sub
jmp
leave
aas
ss
icebp
and
rcrb
and
loopne
aas
fistpl
xor
add
enter
inc
pop
inc
out
mov
daa
nopl
daa
inc
inc
into
sub
ljmp
ret
adc
fcoms
adc
pop
daa
out
add
stos
addl
xlat
inc
push
jl
adc
pop
pop
sbb
xchg
pop
jnp
xchg
outsl
jmp
mov
mov
addr16
sub
pop
testl
ja,pn
cmpsl
inc
dec
lret
daa
xchg
sbb
pop
pop
add
cmp
sub
daa
sar
pusha
icebp
sub
sahf
rcrl
ja
popf
jl
clc
cmpsb
and
mov
cmpsl
xchg
std
cld
mov
scas
mov
or
aaa
popf
cld
out
mov
sbbl
mov
or
fadds
cmp
in
or
jno
hlt
fisttpl
mov
mov
ret
decb
lock
daa
cmpsb
call
push
popf
mov
out
aas
cmpsl
jnp
jo
push
mov
ss
shrb
loope
adc
mov
inc
fildll
movsl
cmp
scas
sbb
mov
inc
dec
mov
dec
cwtl
mov
dec
imul
imul
stos
pop
adc
sarb
scas
adc
cmpsl
imul
enter
test
push
xchg
mov
leave
mov
out
push
mov
inc
push
fsubl
call
push
and
or
aad
push
daa
xor
and
jge
leave
int3
outsl
xchg
negb
mov
pop
outsb
xchg
cli
jecxz
cs
std
inc
cmpsl
xchg
and
aam
ja
fldt
ffree
mov
popa
jge
repz
push
fcomps
insb
dec
hlt
pop
or
fwait
aad
or
outsb
jmp
lret
fcmovnb
jb
divl
and
pop
iret
pop
popa
bound
popf
pushf
in
stc
mov
cmp
mov
push
out
mov
cltd
bound
pcmpgtb
mov
mov
scas
dec
jge
movsl
rorl
ret
int
dec
cmp
pop
push
jl
mov
push
and
iret
push
add
rcl
rcll
ret
das
popa
adc
and
cmc
dec
jl
lahf
mov
xchg
lods
mov
cmp
lcall
dec
mov
xchg
insl
sbb
scas
dec
sub
ja
pushf
pop
cmc
fs
pop
push
outsl
mov
aad
push
andb
xor
mov
test
pop
jp
neg
fldt
cmp
fcompl
xchg
cmp
fcmovnbe
sbb
ja
mov
pop
dec
ss
push
pop
xor
and
mov
out
loope
sbb
xor
enter
stos
mov
xchg
aaa
mov
fcompl
dec
bound
push
insl
test
inc
pop
sbb
fldenv
pop
pushf
jne
fdivrp
rcrl
aaa
xor
shlw
leave
imulb
lds
cmp
push
mov
push
mov
inc
sub
dec
fs
imul
sub
xchg
dec
in
push
imul
sbb
push
ret
cmp
inc
out
scas
call
daa
fists
xchg
test
inc
jae
sub
test
jb
lods
cmpsl
inc
loope
fcompl
scas
pop
sbb
fisubs
clc
mov
fcom
mov
std
mov
lds
pop
inc
jo
inc
gs
jge
pop
push
out
mov
pop
cmp
dec
stos
jg
dec
shrb
dec
mov
iret
jne
int3
das
outsb
das
scas
xor
out
faddl
sbb
xlat
mov
inc
in
sub
int
xor
fistps
in
scas
add
pop
mov
and
add
and
into
lds
push
jae
cmc
dec
jnp
pop
mov
out
insl
xchg
xchg
add
push
fists
xor
sti
arpl
adc
ficomps
outsl
mov
mov
cmpsb
addr16
lods
shl
fsubp
stos
sub
outsl
inc
push
nop
ffree
shrl
cli
sub
clc
stos
pop
dec
mov
adc
pusha
add
ret
push
or
clc
sub
aas
nop
dec
pop
pop
adc
mov
pop
jno
dec
sub
lods
mov
das
jns
xchg
inc
adc
sysret
mul
mov
loop
sarb
inc
sahf
mov
and
repnz
jecxz
mov
mov
lret
mov
mov
xchg
pop
mov
push
popa
es
rcll
sbbb
lcall
push
dec
push
cmc
aad
cmp
loop
ficompl
push
sub
sbb
repz
pop
inc
repz
sarl
and
dec
push
jp
xchg
xor
mov
pop
sbb
test
shll
inc
cli
scas
jnp
aas
push
sbb
or
pop
aam
sub
pop
push
mov
sbb
mov
test
pop
push
sub
fs
jns
in
mov
lcall
xchg
imul
pop
aad
xchg
jmp
or
decl
pop
xchg
jo
push
mov
outsl
add
clc
and
pop
xchg
jno
fildll
xor
pushf
setp
jecxz
mov
pop
lahf
jo
push
scas
cmp
dec
push
sbbl
mov
jg
ljmp
and
mull
scas
in
xor
or
icebp
loop
lahf
adcb
aaa
rclb
mov
aaa
xchg
sbb
push
idivl
xchg
stc
test
pop
out
push
movsb
jnp
mov
lds
stos
in
cmp
jno
insb
inc
cli
dec
aaa
aam
push
inc
jne
ret
test
dec
push
into
cmpsb
pushf
xchg
sbb
stos
and
jns
push
dec
xor
inc
jecxz
js
or
or
rclb
lahf
jne
push
cld
lods
shlb
add
adc
mov
xor
aam
into
fistpl
jp
int3
mov
rorl
iret
ja
xchg
and
les
cmp
and
stos
jmp
pop
cs
add
loop
test
dec
repnz
mov
push
daa
push
and
dec
cmp
fsts
shll
xor
mov
loop
icebp
cmc
and
mov
ljmp
mov
cmp
mov
xor
sbb
inc
mov
push
sub
pop
les
jbe
aas
sub
pusha
mov
das
or
clc
adc
sbb
inc
pop
mov
imul
ret
mov
fistpll
cld
and
push
movsb
xlat
movntps
sbb
shll
sub
xchg
sub
imul
lods
je
sub
sub
and
in
lds
mov
out
adc
adc
push
dec
pop
hlt
bound
inc
inc
pushl
loop
loopne
js
stos
dec
mov
inc
xor
lods
test
pop
lock
adc
and
mov
es
cltd
movsb
div
xchg
arpl
negb
icebp
mov
mov
out
aaa
stc
loop
push
cmp
iret
add
jge
mov
fdivs
fwait
xchg
push
testb
push
mov
aad
sbb
inc
in
fistps
push
scas
loope
or
sar
pusha
aam
loopne
stos
pusha
arpl
fisubs
movsb
out
test
nop
mov
fisubrs
icebp
and
addb
add
xlat
dec
shrb
inc
ds
xchg
or
mov
jne
leave
scas
pop
repnz
data16
mov
mov
push
lods
enter
pop
xor
outsb
dec
ljmp
xchg
js
lds
inc
lret
xchg
data16
movsl
testb
pop
push
adc
or
sbb
sbb
xchg
mov
sti
and
push
add
push
push
fprem1
mov
das
jge
clc
pop
xchg
mov
clc
jmp
in
fbstp
addr16
in
add
mov
dec
adc
or
push
sbb
push
xchg
ds
mov
fxch
leave
int
sub
fsubl
push
int3
jne
mov
cmpsb
mov
add
sahf
rcrb
idivl
inc
dec
mov
loop
dec
rolb
mov
pop
inc
push
andb
fldenv
outsl
cld
scas
jmp
movsl
pushf
popw
lcall
sahf
inc
pop
xchg
or
es
call
call
sub
mov
dec
ds
enter
fisubs
xor
fnstsw
shrb
pextrw
addr16
in
inc
int3
test
rcrb
sbb
loop
add
test
sub
sarl
and
jmp
out
push
daa
leave
mov
sbb
xchg
enter
jecxz
sbb
lret
or
ret
rcll
dec
sub
mov
mov
pusha
cmp
lcall
xor
scas
je
mov
daa
rorb
test
gs
imul
pop
into
rcrl
scas
push
mov
aas
shl
es
mov
mov
rolb
fwait
push
fisttpl
aas
dec
push
aas
jecxz
mov
cmp
negl
xchg
cwtl
pop
cmp
xchg
test
pop
fwait
sti
push
jno
push
out
lret
popf
add
xchg
stc
mov
outsl
das
inc
mov
stos
aam
cmp
sub
mov
jne
test
outsl
int3
pop
rcrl
cmpb
lea
and
popa
push
movsl
mov
xchg
jecxz
neg
cmpsl
cwtl
sti
shlb
jecxz
pop
into
outsl
pop
jecxz
iret
cs
sti
pop
out
jmp
or
ds
sbb
fldl
stc
pop
cmp
mov
mov
insl
cld
imul
gs
xchg
xlat
enter
pop
pop
inc
lea
ljmp
cmpsl
mov
and
cmp
inc
dec
scas
lods
test
stos
xchg
int3
nop
sarb
jnp
rcrl
imul
add
stos
popf
mov
add
pop
push
shr
lea
in
inc
nop
addr16
loope
jp
mov
push
ficomps
mov
out
pop
jbe
outsb
mov
pushf
sbb
outsl
dec
mov
pop
inc
cli
xchg
test
cmp
jae
inc
pushf
aas
xchg
jl
ja
xchg
ja
pop
enter
out
xchg
in
in
iret
sbb
icebp
iret
inc
fwait
in
jb
xchg
test
or
iret
mov
mov
jbe
loope
xchg
out
movsl
arpl
andl
imul
fldt
stos
dec
movsb
stc
pusha
ror
xor
out
jae
cmp
std
jg
addr16
fistpl
out
loop
testl
push
sub
xor
fnstenv
scas
mov
and
addr16
jns
fcmovu
cmpl
lahf
mov
cltd
ret
mov
ret
xchg
jp
neg
jae
notl
cmc
or
push
inc
imull
notl
xchg
mov
notl
sub
push
mov
cmpsl
add
pop
fldt
repz
xor
cmp
jnp
mov
pop
rorl
xchg
and
fcomi
insb
lds
out
ret
add
pop
sti
stos
ret
jnp
loope
inc
push
sti
jns
xchg
mov
add
pop
mov
aaa
add
mov
or
cmpb
add
xchg
sub
fisubl
push
xchg
pop
push
rcl
inc
and
push
lcall
or
lret
mov
lret
add
push
ss
pop
pop
js
cmp
shl
fldcw
out
arpl
out
cmpsl
add
mov
das
xor
sub
rorl
lea
scas
ljmp
fists
mov
aaa
xor
int3
mov
scas
in
mov
lret
dec
aas
cmp
lods
jmp
xchg
fs
rol
sbb
push
adc
sbb
imul
mov
fsubrs
jg
int3
jp
adcb
pop
push
add
dec
shr
out
xchg
outsl
push
jnp
jle
and
into
push
dec
sub
xor
mov
test
mov
push
jmp
lahf
xor
pop
cmp
das
dec
mov
and
test
mov
xchg
or
add
fildl
stc
pop
push
pop
jb
addr16
pop
mov
xlat
or
fcomps
es
dec
lahf
loop
xchg
repnz
inc
insb
pop
xchg
mov
cmp
sub
mov
cmp
and
mov
aad
imul
aas
pop
ja
add
pop
test
shl
push
ljmp
dec
sbb
into
lret
out
scas
sub
push
sbb
dec
lahf
sub
jle
jnp
cmp
movsl
scas
cmpsl
cmp
das
and
jg
inc
aaa
dec
rcrb
pop
xchg
mov
arpl
cmpl
push
scas
lahf
and
arpl
dec
shufps
xchg
inc
test
add
sbb
cmp
push
or
xchg
dec
and
xchg
lock
sbb
push
loopne
ja
push
es
dec
iret
idivl
test
out
scas
imul
imul
inc
push
stos
cli
cmpb
sbbb
ror
mov
mov
movsb
stos
test
rorl
and
xlat
pop
repz
fcom
xchg
cmp
jbe
lock
leave
xchg
mov
mov
popl
mov
sub
add
pop
mov
xor
iret
cmp
enter
ja
xchg
push
xor
jnp
daa
jmp
dec
and
inc
rorl
push
cltd
adc
mov
jmp
jbe
aas
imul
pop
dec
add
sub
pop
bnd
xchg
cmc
jb
xor
pop
push
inc
jns
ret
inc
aad
pop
shl
cmp
stos
testb
aas
adc
mov
fcom
sub
testl
dec
push
mov
inc
and
outsl
cmp
and
daa
gs
imul
xchg
and
inc
out
add
lods
pop
mov
cmpl
test
cmpsl
and
mov
pop
pop
pop
int
adc
repz
scas
loope
or
je
idivb
fldz
les
mov
daa
xor
push
sti
sub
inc
in
jecxz
pop
fildl
dec
or
loope
mov
and
outsl
out
or
xorl
jecxz
stos
push
ror
jg
or
fistps
not
rcr
inc
xchg
leave
or
inc
mov
xchg
aaa
inc
aas
frstor
add
sub
mov
in
mov
aad
cmp
and
adc
mov
push
mov
scas
pop
pop
adc
or
mov
out
jbe
enter
mov
fdivrp
cwtl
xor
lock
frstpm(287
add
shlb
sub
test
inc
add
cmp
scas
and
inc
adc
cmp
rorb
sub
orb
xchg
jl
push
into
movsb
inc
sbb
xchg
add
mov
lods
cltd
std
lea
mov
daa
adc
mov
nopl
pop
test
test
mov
out
andl
mov
pushl
lods
das
aas
jle
pop
lea
iret
dec
xchg
mov
xor
test
into
sbb
pop
push
repnz
movmskps
pop
adc
pop
adc
lretw
pusha
mov
inc
jae
bound
dec
sbb
dec
inc
jecxz
and
pop
inc
repz
jno
or
inc
jo
mov
aaa
dec
fsubr
divb
dec
inc
mov
dec
add
or
pop
cmp
cmp
stos
jae
loope
test
ds
add
jb
sti
js
sub
pop
mov
mov
fmull
test
test
and
mov
pop
rorb
aad
imul
sbb
lcall
fwait
bound
adc
xchg
mov
pop
pop
push
push
sbb
inc
pop
out
pop
cmp
xchg
and
jecxz
aad
test
mov
dec
xor
cltd
stos
lds
push
or
icebp
aad
addr16
sub
mov
lret
pop
xchg
cltd
rolb
mov
mov
add
mov
int
jnp
mov
repz
sub
lcall
ret
daa
rolb
mov
rcl
sbb
aad
movsl
int
inc
sub
clc
mov
out
insb
mov
add
mov
mov
fwait
testb
daa
or
mov
imull
sbb
sahf
mov
je
repnz
or
cmpsb
fildl
cli
dec
push
inc
jno
pop
pop
fcmovnb
out
and
sbb
lret
test
dec
inc
xchg
rol
sbb
or
into
xchg
test
imul
ljmp
insb
dec
lahf
inc
out
dec
sbb
and
lods
negb
pop
out
or
mov
mov
sub
and
leave
icebp
aad
sbb
loopne
repz
je
inc
cltd
add
inc
out
lahf
icebp
cmp
push
sbb
adc
lret
lock
push
int3
or
loope
pop
test
movsb
mov
pop
shrl
adc
dec
repz
cwtl
outsl
js
jl
inc
negl
outsl
jae
jno
jno
inc
shrl
jb
cmpsl
pop
das
jns
xor
out
jl
lods
fsubrs
popl
jecxz
lcall
mov
in
xor
int3
adc
xchg
jg
mov
jp
stc
out
cmp
lahf
shll
das
cld
jne
push
dec
fisubs
sbb
outsb
imul
pop
add
mov
xor
jg
lcall
bound
pop
jb
sub
xor
push
mov
repz
jge
adc
lods
insl
lods
pop
stos
sub
or
sub
movsl
mov
pop
mov
add
mov
pop
mov
and
lds
insb
add
mov
js
push
movsb
cs
dec
fld1
lods
lahf
stc
sub
mov
dec
out
cmpb
loope
jb
enter
xchg
addr16
testl
sbb
adc
push
in
test
cmp
add
adc
cmp
mov
fsub
inc
shr
vmulps
fsubrs
or
popf
ret
mov
xchg
push
jns
push
push
stos
add
es
pushf
pop
inc
inc
sbb
popa
xor
xchg
add
fisttpl
inc
sub
jnp
inc
and
cs
mov
pop
das
mov
mov
mov
icebp
lods
aas
xchg
add
adc
jns
fbld
mov
pop
cmp
roll
xchg
loopne
fimull
cs
dec
inc
ss
push
cmp
mov
cmpsb
pop
andl
jmp
enter
mov
mov
out
jecxz
in
fcom
sub
inc
xchg
cmc
inc
sarb
push
add
mov
ss
mov
cmp
aam
jmp
jno
xchg
stos
pop
dec
mov
pop
fsubl
dec
cmp
das
jg
icebp
adc
movsb
dec
xor
push
cld
ljmp
imul
inc
jb
cwtl
pusha
pop
pop
mov
inc
test
mov
pop
les
xor
or
je
dec
out
divb
das
or
inc
pop
and
and
xchg
clc
mov
xchg
stos
dec
sahf
es
negl
icebp
dec
sbb
mov
fnsave
cmp
jne
aam
mov
mov
dec
push
ffree
int
push
push
xor
fsubrl
iret
out
cwtl
movmskps
fcompl
inc
push
jmp
imul
cmp
arpl
mov
insb
fistpll
xchg
push
dec
sti
jmp
xchg
pop
xchg
jbe
mull
in
enter
sub
cmp
pop
push
cmp
push
and
lock
xchg
rcl
or
andb
call
inc
repz
inc
pushf
lods
sub
push
mov
mov
call
or
stos
mov
cmp
testb
lea
inc
pop
pop
lods
pusha
movsb
dec
jmp
sbb
sub
fisubrl
fmull
xchg
cmp
xlat
in
out
inc
icebp
enter
pop
xchg
int
dec
mov
lret
sbb
sarl
mov
xlat
adc
in
into
jl
pop
or
dec
icebp
fs
icebp
cmp
fnstsw
stc
push
iret
mov
mov
dec
sahf
out
sub
pushf
cmp
mov
out
lods
into
stos
imul
push
xorb
out
dec
pop
cmp
lcall
cld
or
xor
fsub
fsts
jne
xlat
cltd
ja
push
das
fisubl
mov
xchg
lret
inc
xlat
pop
sub
inc
incb
ljmp
and
scas
add
notb
push
pop
sub
out
mull
mov
ret
mov
adc
setle
xor
xchg
ljmp
pushl
aam
inc
adc
scas
adc
pop
sahf
sub
inc
xchg
test
es
pushf
inc
sub
daa
cmp
or
xor
jmp
push
xchg
out
rcrl
loope
cmpsl
lods
clc
cmpb
xor
hlt
lods
fdivrs
xor
mov
sub
scas
fnsave
push
in
mov
ds
push
clc
rcl
inc
iret
jp
mov
cmc
fidivl
dec
inc
mov
push
mov
rclb
jae
icebp
xor
negb
fldenv
and
aaa
push
lods
mov
cwtl
or
push
lret
xchg
fmull
jl
int3
mov
icebp
add
fdivl
mov
jp
xor
fwait
adc
cmp
xchg
push
fnstcw
sbb
in
dec
inc
add
rcll
jno
push
mov
xchg
mov
mov
or
fbld
outsl
mov
pop
push
and
sbb
call
cmp
mov
sub
lea
push
push
stos
int
scas
inc
addr16
ljmp
push
rcrl
imul
lds
jo
add
mov
cmp
xlat
sub
mov
and
js,pt
outsl
jge
xchg
and
cs
push
sbb
jecxz
je
dec
cmpsl
and
out
call
pop
arpl
jecxz
addr16
loopne
jnp
push
pop
push
sub
aad
mov
aas
ss
shrb
roll
cmc
pop
lods
mov
rcrl
add
and
call
push
mov
xchg
jbe
mov
cltd
sub
mov
mov
test
mov
fcmovne
lahf
enter
lahf
fsubrl
pop
inc
fs
mov
shl
pop
push
ficomps
js
fbstp
xchg
dec
pop
scas
and
es
divl
pop
dec
les
sbb
fmuls
ret
adc
xlat
dec
repz
lea
mov
mov
ds
ja
out
lea
jo
inc
inc
stos
vmovapd
sub
and
popf
pop
out
mov
loopne
sub
inc
sub
sub
adc
sbb
bound
das
arpl
and
loop
daa
ja
sub
in
enter
dec
sub
mov
scas
add
xor
sub
adc
pop
lds
jo
fmull
add
adc
jb
mov
inc
sub
dec
jmp
mov
xorl
xchg
outsb
push
pop
fadds
inc
sub
in
adc
pushf
bound
xor
xchg
and
mov
test
pf2id
or
cmp
push
add
pop
add
test
movsb
pushl
pop
sbb
sbb
sub
fldl
mov
dec
mov
lods
aaa
popa
xchg
mov
iret
lods
mov
xor
in
js
lret
push
adc
sub
xchg
sahf
mov
sbb
pop
std
stos
mov
loop
pop
cmp
push
mov
test
pop
adcl
sub
daa
cwtl
and
push
jge
or
aam
das
icebp
daa
xchg
stos
push
clc
jae
pushf
push
add
fldt
mov
xchg
in
sub
sarb
inc
cmp
nop
add
clc
testl
stc
push
in
daa
ds
jmp
outsb
ds
xchg
leave
xchg
push
xchg
testl
add
pop
stos
cmp
or
push
cld
das
mov
inc
mov
aad
popl
adcb
in
out
loop
lahf
and
jecxz
arpl
scas
pop
push
pop
aam
rcrb
sub
cld
test
cli
or
in
inc
sub
lock
mov
xchg
test
dec
mov
cmp
cwtl
xor
ss
popf
mov
pop
int
mov
cmp
fmull
loope
pusha
pop
sbb
addr16
aaa
mov
call
bound
mov
insb
sti
mov
aam
out
pop
pop
loop
icebp
test
xchg
aaa
xor
pop
leave
and
cs
stc
xor
inc
jns
xchg
pop
sbb
in
jmp
dec
jae
sub
jmp
cmpsb
cs
leave
xchg
bndstx
inc
cmpsb
lret
or
push
inc
or
inc
adc
xchg
shrb
in
mov
xor
sbb
adc
ffreep
adc
in
cli
sar
lahf
sbb
dec
hlt
out
out
std
dec
cmp
leave
imul
les
imul
popf
fwait
push
je
xchg
dec
xchg
outsl
mov
push
insl
cmp
jp
inc
nop
push
adc
and
push
test
xchg
rcll
cmpsl
out
jmp
mov
mov
mov
mov
mov
and
xchg
daa
fiaddl
inc
cmpsb
mov
mov
sub
ficoml
push
stc
in
push
and
push
bound
adc
rcl
xor
lods
fistpll
mov
xor
movl
dec
mov
push
imul
mov
jns
jno
jg
jb
add
dec
iret
lret
nop
mov
xchg
lret
xchg
add
out
xorb
cld
outsb
repnz
rcr
loop
ja
mov
shrl
xorb
nop
add
pop
lcall
xchg
mov
cmp
lret
js
cmpsb
pusha
dec
pop
popl
adc
lods
and
pop
push
pop
loope
mul
mov
inc
rorb
add
adc
rcl
cmp
fiadds
jae
push
fiaddl
inc
sahf
lcall
loop
sub
popa
hlt
xor
loopne
xor
adc
xchg
sbb
icebp
push
pop
rcrb
imul
mov
add
mov
xlat
inc
cltd
xchg
incl
pop
test
fcomps
iret
mov
aad
push
push
fistpl
fs
inc
pushf
jle
inc
test
fwait
dec
cmpsb
cld
jle
rcrl
and
and
mov
pushf
in
inc
sbb
ljmp
add
outsl
xchg
jg
jge
pop
out
dec
adc
or
dec
nop
cltd
xor
insb
adc
insb
xchg
mov
aad
orb
mov
sbb
and
xor
dec
das
inc
pop
imul
pop
fsubp
pop
sarb
testl
mov
dec
sub
pop
popf
push
sub
mov
lods
lret
inc
dec
mov
add
cld
jge
inc
cmpsl
xchg
mov
imul
shll
push
dec
je
icebp
stos
jge
in
mov
push
jo
in
and
int
dec
pusha
jns
jmp
sub
xor
popf
cs
cmp
adc
daa
rcl
leave
inc
les
xor
scas
pop
push
in
stos
sti
xchg
pop
js
jb
push
sbbb
icebp
or
movsl
sbb
and
std
sub
ljmp
cmpsb
jae
test
mov
dec
loope
sub
push
dec
addr16
xchg
pop
lahf
out
enter
ljmp
cmpsl
outsl
pop
xchg
repnz
fiaddl
ja
mov
xchg
ss
add
dec
pop
mov
inc
and
or
xchg
mov
dec
or
push
ds
popa
mov
vpslld
mov
iret
cmovp
xorb
pop
std
jb
aaa
or
mov
push
cmp
push
mov
cmc
aaa
and
inc
fldcw
call
movsb
daa
out
xor
cs
mov
inc
pop
rcrw
out
aad
jmp
cld
fisubl
inc
aam
ret
adc
pop
jns
sbb
pusha
adc
pop
mov
sbb
add
in
mov
jb
icebp
loope
jl
jno
shlb
ret
mov
adc
or
inc
pop
fnstsw
jb
mov
mov
and
pop
ljmp
mov
stc
sub
idivl
or
cs
mov
dec
mov
sbb
cmpsl
mov
and
add
das
adc
je
inc
push
cmpsb
and
stos
xchg
xor
and
nop
shrl
aas
rorl
ljmp
in
push
dec
ret
arpl
jg
sbb
out
mov
mov
out
loope
lcall
pop
push
ret
bound
inc
push
xor
cmpsl
cmp
in
sbb
jmp
mov
mov
call
scas
sub
imul
cmp
sub
fs
imul
sub
nop
pushf
sub
cmpsl
inc
mov
mov
je
jbe
mov
pop
stc
in
cwtl
clc
icebp
ret
adc
cltd
pop
idivl
cmp
lds
and
lcall
inc
cwtl
adc
mov
inc
js
add
adc
pop
cmpsl
jge
test
pop
sub
sub
das
jns
lods
outsb
lea
mov
cmpsb
in
popf
loope
sub
pop
addr16
mov
jge
shrb
fcmovu
sbb
mov
sub
pop
push
nop
mov
lret
incl
std
sub
mov
mov
mov
jbe
cmp
sbb
je
jnp
sub
dec
add
sbb
pop
dec
adc
cs
mov
jecxz
pop
mov
inc
lret
adc
adc
xor
inc
sbb
fadds
imul
daa
jbe
inc
jle
in
jg
lcall
and
lea
shll
jmp
bound
jo
cmp
jne
lea
push
into
push
daa
add
fwait
in
add
mov
fmull
jecxz
pop
shr
push
popf
mov
cmp
sub
add
test
insb
cmpsl
mov
xor
arpl
jno
push
mov
xorb
sub
call
in
push
fwait
popa
mov
fs
aas
sbb
arpl
popf
xchg
lds
mov
add
js
call
adc
arpl
cmpsl
jg
in
add
dec
mov
aam
bound
jmp
sbb
xchg
mov
daa
mov
add
mov
cmp
and
sbb
xchg
or
adc
jecxz
lea
scas
lret
push
push
sub
sbb
rcrl
pop
mov
js
fs
ds
cli
out
dec
cld
lcall
dec
popf
and
cmc
les
xor
jmp
cmp
fdivs
inc
sbb
add
loopne
je
iret
inc
js
repz
pop
pusha
add
jno
xchg
ds
ret
arpl
xchg
mov
sti
pop
ror
dec
call
adc
in
fwait
shr
pop
cmp
mov
push
mov
stc
adc
cltd
xchg
loop
sub
pop
movsb
jmp
mov
sti
mul
add
inc
fsubrl
les
cmp
das
dec
jl
sbb
icebp
aad
mov
mov
sbb
cmp
ret
test
xor
daa
jae
pop
out
or
es
inc
repnz
mov
mov
dec
mov
out
pop
mov
cmpsb
sub
push
xchg
adcl
xor
lahf
sahf
rol
movsb
lock
ret
shl
sub
test
orb
pop
inc
mov
lea
xor
out
dec
jecxz
cmpsl
jp
dec
sbb
adc
inc
dec
jnp
sub
xchg
daa
testb
add
out
push
fwait
sub
cwtl
out
push
jmp
pop
mov
inc
push
sub
jno
and
lcall
mov
pop
cltd
cli
out
lcall
pop
and
jecxz
test
mov
push
ds
sub
mov
pop
mov
call
jae
xor
dec
cmp
movsl
push
aaa
lods
adc
mov
in
lods
xchg
rcl
in
add
icebp
int3
push
outsb
out
lea
cld
je
pop
pop
inc
jle
xchg
jne
inc
loop
adc
push
iret
ret
adc
pause
push
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
cmp
jne
nop
nop
call
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
nop
push
nop
cmp
jne
nop
nop
nop
nop
jmp
cmp
jne
nop
call
nop
push
nop
push
nop
jmp
nop
nop
pop
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
nop
nop
cmp
jne
push
nop
nop
nop
nop
push
nop
nop
cmp
jne
nop
nop
nop
nop
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
nop
jmp
pop
nop
nop
nop
nop
nop
leave
cmp
jne
nop
mov
nop
cmp
jne
mov
push
mov
sub
jmp
nop
nop
xor
cmp
jne
nop
nop
nop
push
nop
nop
cmp
jne
nop
dec
jne
nop
nop
nop
cmp
jne
nop
nop
nop
nop
add
cmp
jne
nop
dec
jne
nop
nop
nop
nop
nop
cmp
jne
nop
push
nop
call
nop
nop
nop
nop
cmp
jne
nop
shr
nop
nop
lods
cmp
jne
nop
nop
add
nop
nop
nop
cmp
jne
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
push
nop
cmp
jne
nop
nop
pop
nop
nop
jmp
jmp
nop
nop
call
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jmp
nop
nop
call
nop
cmp
jne
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
add
nop
nop
nop
cmp
jne
nop
call
nop
cmp
jne
nop
nop
nop
nop
push
nop
nop
jmp
nop
nop
mov
nop
nop
nop
nop
nop
jmp
nop
nop
nop
jmp
cmp
jne
ret
nop
mov
nop
nop
nop
nop
nop
cmp
jne
nop
nop
nop
cmp
jne
nop
nop
nop
nop
push
nop
nop
cmp
jne
nop
nop
mov
nop
nop
nop
inc
nop
jmp
nop
nop
nop
nop
jmp
nop
nop
nop
nop
cmp
jne
nop
nop
nop
cmp
jne
nop
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
lea
cmp
jne
nop
nop
push
nop
cmp
jne
add
nop
nop
nop
cmp
jne
nop
lea
nop
nop
nop
nop
nop
nop
cmp
jne
nop
nop
nop
push
nop
nop
nop
cmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
